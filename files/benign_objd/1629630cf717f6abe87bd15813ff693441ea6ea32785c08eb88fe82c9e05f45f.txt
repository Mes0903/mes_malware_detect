
1629630cf717f6abe87bd15813ff693441ea6ea32785c08eb88fe82c9e05f45f.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	test   ecx,ecx
   140001002:	jne    0x140001071
   140001004:	mov    r11,rsp
   140001007:	mov    QWORD PTR [r11+0x10],rdx
   14000100b:	mov    QWORD PTR [r11+0x18],r8
   14000100f:	mov    QWORD PTR [r11+0x20],r9
   140001013:	sub    rsp,0x448
   14000101a:	mov    rax,QWORD PTR [rip+0x113a7]        # 0x1400123c8
   140001021:	xor    rax,rsp
   140001024:	mov    QWORD PTR [rsp+0x430],rax
   14000102c:	mov    r9,rdx
   14000102f:	mov    edx,0x400
   140001034:	lea    rax,[r11+0x18]
   140001038:	lea    r8d,[rdx-0x1]
   14000103c:	lea    rcx,[rsp+0x30]
   140001041:	mov    QWORD PTR [rsp+0x20],rax
   140001046:	call   0x140004660
   14000104b:	call   0x140001bd0
   140001050:	lea    r8,[rsp+0x30]
   140001055:	lea    rcx,[rax+0x60]
   140001059:	lea    rdx,[rip+0xecb0]        # 0x14000fd10
   140001060:	call   0x140002124
   140001065:	mov    ecx,0x1
   14000106a:	call   QWORD PTR [rip+0xcf90]        # 0x14000e000
   140001070:	int3   
   140001071:	ret    
   140001072:	int3   
   140001073:	int3   
   140001074:	mov    QWORD PTR [rsp+0x8],rbx
   140001079:	mov    QWORD PTR [rsp+0x10],rsi
   14000107e:	push   rdi
   14000107f:	sub    rsp,0x20
   140001083:	mov    eax,DWORD PTR [rip+0x1232f]        # 0x1400133b8
   140001089:	mov    rdi,rdx
   14000108c:	mov    rsi,rcx
   14000108f:	xor    ebx,ebx
   140001091:	mov    r9,rcx
   140001094:	lea    r8,[rdx-0x4]
   140001098:	movsx  edx,al
   14000109b:	mov    rcx,r9
   14000109e:	call   0x140001de4
   1400010a3:	mov    r9,rax
   1400010a6:	test   rax,rax
   1400010a9:	je     0x1400010c8
   1400010ab:	mov    eax,DWORD PTR [rip+0x12307]        # 0x1400133b8
   1400010b1:	mov    rcx,rsi
   1400010b4:	cmp    eax,DWORD PTR [r9]
   1400010b7:	cmove  rbx,r9
   1400010bb:	inc    r9
   1400010be:	sub    rcx,r9
   1400010c1:	lea    r8,[rcx+rdi*1-0x4]
   1400010c6:	jmp    0x140001098
   1400010c8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400010cd:	mov    rax,rbx
   1400010d0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400010d5:	add    rsp,0x20
   1400010d9:	pop    rdi
   1400010da:	ret    
   1400010db:	int3   
   1400010dc:	mov    QWORD PTR [rsp+0x10],rbx
   1400010e1:	mov    QWORD PTR [rsp+0x18],rsi
   1400010e6:	mov    QWORD PTR [rsp+0x20],rdi
   1400010eb:	push   rbp
   1400010ec:	push   r12
   1400010ee:	push   r13
   1400010f0:	push   r14
   1400010f2:	push   r15
   1400010f4:	mov    rbp,rsp
   1400010f7:	sub    rsp,0x40
   1400010fb:	mov    r13,rcx
   1400010fe:	lea    r8,[rip+0xec2b]        # 0x14000fd30
   140001105:	lea    rdx,[rip+0x132e4]        # 0x1400143f0
   14000110c:	lea    rcx,[rbp+0x30]
   140001110:	xor    r12d,r12d
   140001113:	mov    QWORD PTR [rbp+0x30],r12
   140001117:	call   0x140001a20
   14000111c:	mov    ecx,r12d
   14000111f:	test   eax,eax
   140001121:	lea    rdx,[rip+0xec10]        # 0x14000fd38
   140001128:	sete   cl
   14000112b:	call   0x140001000
   140001130:	mov    rcx,QWORD PTR [rbp+0x30]
   140001134:	lea    r8d,[r12+0x2]
   140001139:	xor    edx,edx
   14000113b:	call   0x140002580
   140001140:	mov    rcx,QWORD PTR [rbp+0x30]
   140001144:	call   0x140002474
   140001149:	mov    rcx,QWORD PTR [rbp+0x30]
   14000114d:	movsxd r14,eax
   140001150:	lea    edi,[r14-0x104]
   140001157:	test   edi,edi
   140001159:	cmovs  edi,r12d
   14000115d:	xor    r8d,r8d
   140001160:	mov    edx,edi
   140001162:	call   0x140002580
   140001167:	mov    r9,QWORD PTR [rbp+0x30]
   14000116b:	lea    r15d,[r12+0x1]
   140001170:	mov    edx,r15d
   140001173:	mov    r8d,0x104
   140001179:	mov    rcx,r13
   14000117c:	call   0x140002104
   140001181:	mov    rcx,r13
   140001184:	mov    rdx,rax
   140001187:	call   0x140001074
   14000118c:	mov    rbx,rax
   14000118f:	test   rax,rax
   140001192:	je     0x1400011b3
   140001194:	lea    rcx,[rbp-0x20]
   140001198:	lea    r8d,[r12+0x14]
   14000119d:	mov    rdx,rax
   1400011a0:	call   0x14000bf40
   1400011a5:	movsxd rdi,edi
   1400011a8:	sub    rdi,r13
   1400011ab:	add    rdi,rbx
   1400011ae:	jmp    0x140001235
   1400011b3:	mov    ebx,0x4100000
   1400011b8:	mov    ecx,ebx
   1400011ba:	call   0x140001b18
   1400011bf:	mov    rcx,QWORD PTR [rbp+0x30]
   1400011c3:	lea    edi,[r14-0x4100000]
   1400011ca:	test   edi,edi
   1400011cc:	mov    rsi,rax
   1400011cf:	cmovs  edi,r12d
   1400011d3:	xor    r8d,r8d
   1400011d6:	mov    edx,edi
   1400011d8:	call   0x140002580
   1400011dd:	mov    r9,QWORD PTR [rbp+0x30]
   1400011e1:	mov    r8d,ebx
   1400011e4:	mov    rdx,r15
   1400011e7:	mov    rcx,rsi
   1400011ea:	call   0x140002104
   1400011ef:	mov    rcx,rsi
   1400011f2:	mov    rdx,rax
   1400011f5:	call   0x140001074
   1400011fa:	mov    ecx,r12d
   1400011fd:	lea    rdx,[rip+0xeb54]        # 0x14000fd58
   140001204:	test   rax,rax
   140001207:	mov    rbx,rax
   14000120a:	setne  cl
   14000120d:	call   0x140001000
   140001212:	lea    rcx,[rbp-0x20]
   140001216:	mov    rdx,rbx
   140001219:	mov    r8d,0x14
   14000121f:	call   0x14000bf40
   140001224:	movsxd rdi,edi
   140001227:	mov    rcx,rsi
   14000122a:	sub    rdi,rsi
   14000122d:	add    rdi,rbx
   140001230:	call   0x140001a94
   140001235:	sub    edi,DWORD PTR [rbp-0x10]
   140001238:	mov    rcx,QWORD PTR [rbp+0x30]
   14000123c:	sub    edi,DWORD PTR [rbp-0x14]
   14000123f:	sub    edi,0x104
   140001245:	cmovs  edi,r12d
   140001249:	xor    r8d,r8d
   14000124c:	mov    edx,edi
   14000124e:	call   0x140002580
   140001253:	mov    r9,QWORD PTR [rbp+0x30]
   140001257:	mov    r8d,0x104
   14000125d:	mov    rdx,r15
   140001260:	mov    rcx,r13
   140001263:	call   0x140002104
   140001268:	mov    ecx,r12d
   14000126b:	lea    rdx,[rip+0xeb0e]        # 0x14000fd80
   140001272:	test   rax,rax
   140001275:	mov    rbx,rax
   140001278:	setne  cl
   14000127b:	call   0x140001000
   140001280:	lea    r11,[rbx+r13*1-0x1]
   140001285:	cmp    r11,r13
   140001288:	jb     0x1400012a4
   14000128a:	movzx  eax,WORD PTR [rip+0xeb0b]        # 0x14000fd9c
   140001291:	cmp    WORD PTR [r11],ax
   140001295:	je     0x1400012a1
   140001297:	sub    r11,r15
   14000129a:	cmp    r11,r13
   14000129d:	jae    0x140001291
   14000129f:	jmp    0x1400012a4
   1400012a1:	mov    r12,r11
   1400012a4:	mov    rcx,QWORD PTR [rbp+0x30]
   1400012a8:	call   0x140002678
   1400012ad:	lea    r11,[rsp+0x40]
   1400012b2:	mov    rax,r12
   1400012b5:	mov    rbx,QWORD PTR [r11+0x38]
   1400012b9:	mov    rsi,QWORD PTR [r11+0x40]
   1400012bd:	mov    rdi,QWORD PTR [r11+0x48]
   1400012c1:	mov    rsp,r11
   1400012c4:	pop    r15
   1400012c6:	pop    r14
   1400012c8:	pop    r13
   1400012ca:	pop    r12
   1400012cc:	pop    rbp
   1400012cd:	ret    
   1400012ce:	int3   
   1400012cf:	int3   
   1400012d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400012d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400012da:	push   rdi
   1400012db:	sub    rsp,0x40
   1400012df:	mov    rbx,rdx
   1400012e2:	mov    rdi,rcx
   1400012e5:	call   QWORD PTR [rip+0xcd35]        # 0x14000e020
   1400012eb:	and    QWORD PTR [rbx],0x0
   1400012ef:	mov    DWORD PTR [rsp+0x30],0x2
   1400012f7:	mov    esi,0x1
   1400012fc:	mov    r8,rax
   1400012ff:	mov    rcx,rax
   140001302:	mov    r9,rbx
   140001305:	mov    rdx,rdi
   140001308:	mov    DWORD PTR [rsp+0x28],esi
   14000130c:	and    DWORD PTR [rsp+0x20],0x0
   140001311:	call   QWORD PTR [rip+0xcd69]        # 0x14000e080
   140001317:	mov    ebx,eax
   140001319:	test   eax,eax
   14000131b:	jne    0x140001329
   14000131d:	call   QWORD PTR [rip+0xcd4d]        # 0x14000e070
   140001323:	cmp    eax,0x6
   140001326:	cmove  ebx,esi
   140001329:	mov    rsi,QWORD PTR [rsp+0x58]
   14000132e:	mov    eax,ebx
   140001330:	mov    rbx,QWORD PTR [rsp+0x50]
   140001335:	add    rsp,0x40
   140001339:	pop    rdi
   14000133a:	ret    
   14000133b:	int3   
   14000133c:	sub    rsp,0x28
   140001340:	test   ecx,ecx
   140001342:	jne    0x140001356
   140001344:	mov    ecx,DWORD PTR [rip+0x132ae]        # 0x1400145f8
   14000134a:	test   ecx,ecx
   14000134c:	je     0x140001356
   14000134e:	xor    edx,edx
   140001350:	call   QWORD PTR [rip+0xccda]        # 0x14000e030
   140001356:	mov    eax,0x1
   14000135b:	add    rsp,0x28
   14000135f:	ret    
   140001360:	mov    QWORD PTR [rsp+0x10],rbx
   140001365:	mov    QWORD PTR [rsp+0x18],rdi
   14000136a:	push   rbp
   14000136b:	lea    rbp,[rsp-0x80]
   140001370:	sub    rsp,0x180
   140001377:	mov    rax,QWORD PTR [rip+0x1104a]        # 0x1400123c8
   14000137e:	xor    rax,rsp
   140001381:	mov    QWORD PTR [rbp+0x70],rax
   140001385:	mov    rdi,rcx
   140001388:	xor    edx,edx
   14000138a:	xor    ecx,ecx
   14000138c:	call   QWORD PTR [rip+0xccce]        # 0x14000e060
   140001392:	lea    r8,[rbp-0x20]
   140001396:	mov    r9d,0x90
   14000139c:	mov    rbx,rax
   14000139f:	lea    rax,[rsp+0x50]
   1400013a4:	mov    edx,0x9
   1400013a9:	mov    rcx,rbx
   1400013ac:	mov    QWORD PTR [rsp+0x20],rax
   1400013b1:	call   QWORD PTR [rip+0xcc99]        # 0x14000e050
   1400013b7:	test   eax,eax
   1400013b9:	je     0x1400013cc
   1400013bb:	cmp    DWORD PTR [rsp+0x50],0x90
   1400013c3:	jne    0x1400013cc
   1400013c5:	mov    ecx,0x1
   1400013ca:	jmp    0x1400013ce
   1400013cc:	xor    ecx,ecx
   1400013ce:	lea    rdx,[rip+0xe9d3]        # 0x14000fda8
   1400013d5:	call   0x140001000
   1400013da:	or     DWORD PTR [rbp-0x10],0x3000
   1400013e1:	lea    r8,[rbp-0x20]
   1400013e5:	mov    r9d,0x90
   1400013eb:	mov    edx,0x9
   1400013f0:	mov    rcx,rbx
   1400013f3:	call   QWORD PTR [rip+0xcc17]        # 0x14000e010
   1400013f9:	lea    rdx,[rip+0xe9c8]        # 0x14000fdc8
   140001400:	mov    ecx,eax
   140001402:	call   0x140001000
   140001407:	xor    edx,edx
   140001409:	lea    rcx,[rsp+0x70]
   14000140e:	lea    r8d,[rdx+0x68]
   140001412:	call   0x1400048d0
   140001417:	mov    ecx,0xfffffff6
   14000141c:	mov    DWORD PTR [rsp+0x70],0x68
   140001424:	call   QWORD PTR [rip+0xcc3e]        # 0x14000e068
   14000142a:	lea    rdx,[rbp-0x40]
   14000142e:	mov    rcx,rax
   140001431:	call   0x1400012d0
   140001436:	lea    rdx,[rip+0xe9ab]        # 0x14000fde8
   14000143d:	mov    ecx,eax
   14000143f:	call   0x140001000
   140001444:	mov    ecx,0xfffffff5
   140001449:	call   QWORD PTR [rip+0xcc19]        # 0x14000e068
   14000144f:	lea    rdx,[rbp-0x38]
   140001453:	mov    rcx,rax
   140001456:	call   0x1400012d0
   14000145b:	lea    rdx,[rip+0xe9a6]        # 0x14000fe08
   140001462:	mov    ecx,eax
   140001464:	call   0x140001000
   140001469:	mov    ecx,0xfffffff4
   14000146e:	call   QWORD PTR [rip+0xcbf4]        # 0x14000e068
   140001474:	lea    rdx,[rbp-0x30]
   140001478:	mov    rcx,rax
   14000147b:	call   0x1400012d0
   140001480:	lea    rdx,[rip+0xe9a1]        # 0x14000fe28
   140001487:	mov    ecx,eax
   140001489:	call   0x140001000
   14000148e:	lea    rcx,[rip+0xfffffffffffffea7]        # 0x14000133c
   140001495:	mov    edx,0x1
   14000149a:	mov    DWORD PTR [rbp-0x54],0x100
   1400014a1:	call   QWORD PTR [rip+0xcbd1]        # 0x14000e078
   1400014a7:	lea    r11,[rsp+0x58]
   1400014ac:	mov    QWORD PTR [rsp+0x48],r11
   1400014b1:	lea    rax,[rsp+0x70]
   1400014b6:	xor    r9d,r9d
   1400014b9:	mov    QWORD PTR [rsp+0x40],rax
   1400014be:	and    QWORD PTR [rsp+0x38],0x0
   1400014c4:	and    QWORD PTR [rsp+0x30],0x0
   1400014ca:	and    DWORD PTR [rsp+0x28],0x0
   1400014cf:	xor    r8d,r8d
   1400014d2:	mov    rdx,rdi
   1400014d5:	xor    ecx,ecx
   1400014d7:	mov    DWORD PTR [rsp+0x20],0x1
   1400014df:	call   QWORD PTR [rip+0xcb33]        # 0x14000e018
   1400014e5:	lea    rdx,[rip+0xe95c]        # 0x14000fe48
   1400014ec:	mov    r8,rdi
   1400014ef:	mov    ecx,eax
   1400014f1:	call   0x140001000
   1400014f6:	mov    r11d,DWORD PTR [rsp+0x68]
   1400014fb:	mov    rdx,QWORD PTR [rsp+0x58]
   140001500:	mov    rcx,rbx
   140001503:	mov    DWORD PTR [rip+0x130ee],r11d        # 0x1400145f8
   14000150a:	call   QWORD PTR [rip+0xcb28]        # 0x14000e038
   140001510:	mov    rcx,QWORD PTR [rsp+0x60]
   140001515:	call   QWORD PTR [rip+0xcb6d]        # 0x14000e088
   14000151b:	mov    rcx,QWORD PTR [rsp+0x58]
   140001520:	or     edx,0xffffffff
   140001523:	call   QWORD PTR [rip+0xcaff]        # 0x14000e028
   140001529:	mov    rcx,QWORD PTR [rsp+0x58]
   14000152e:	lea    rdx,[rsp+0x50]
   140001533:	call   QWORD PTR [rip+0xcb07]        # 0x14000e040
   140001539:	lea    rdx,[rip+0xe930]        # 0x14000fe70
   140001540:	mov    ecx,eax
   140001542:	call   0x140001000
   140001547:	mov    ecx,DWORD PTR [rsp+0x50]
   14000154b:	call   QWORD PTR [rip+0xcaaf]        # 0x14000e000
   140001551:	int3   
   140001552:	int3   
   140001553:	int3   
   140001554:	mov    rax,rsp
   140001557:	mov    QWORD PTR [rax+0x8],rbx
   14000155b:	mov    QWORD PTR [rax+0x10],rbp
   14000155f:	mov    QWORD PTR [rax+0x18],rsi
   140001563:	mov    QWORD PTR [rax+0x20],rdi
   140001567:	push   r12
   140001569:	push   r13
   14000156b:	push   r14
   14000156d:	sub    rsp,0x370
   140001574:	mov    rax,QWORD PTR [rip+0x10e4d]        # 0x1400123c8
   14000157b:	xor    rax,rsp
   14000157e:	mov    QWORD PTR [rsp+0x360],rax
   140001586:	call   QWORD PTR [rip+0xca7c]        # 0x14000e008
   14000158c:	mov    edi,0x22
   140001591:	cmp    WORD PTR [rax],di
   140001594:	je     0x14000159b
   140001596:	lea    ecx,[rdi-0x2]
   140001599:	jmp    0x1400015a2
   14000159b:	movzx  ecx,di
   14000159e:	add    rax,0x4
   1400015a2:	movzx  edx,cx
   1400015a5:	mov    rcx,rax
   1400015a8:	call   0x140001a74
   1400015ad:	xor    esi,esi
   1400015af:	lea    r12d,[rsi+0x8]
   1400015b3:	test   rax,rax
   1400015b6:	jne    0x1400015c1
   1400015b8:	lea    r13,[rip+0xe7e1]        # 0x14000fda0
   1400015bf:	jmp    0x1400015e4
   1400015c1:	lea    r13,[rax+0x2]
   1400015c5:	jmp    0x1400015da
   1400015c7:	mov    edx,r12d
   1400015ca:	movzx  ecx,ax
   1400015cd:	call   0x140002254
   1400015d2:	test   eax,eax
   1400015d4:	je     0x1400015e4
   1400015d6:	add    r13,0x2
   1400015da:	movzx  eax,WORD PTR [r13+0x0]
   1400015df:	test   ax,ax
   1400015e2:	jne    0x1400015c7
   1400015e4:	lea    r14,[rip+0x12e05]        # 0x1400143f0
   1400015eb:	mov    ebp,0x104
   1400015f0:	xor    ecx,ecx
   1400015f2:	mov    rdx,r14
   1400015f5:	mov    r8d,ebp
   1400015f8:	call   QWORD PTR [rip+0xca4a]        # 0x14000e048
   1400015fe:	cmp    WORD PTR [rip+0x12deb],di        # 0x1400143f0
   140001605:	mov    edx,eax
   140001607:	jne    0x140001614
   140001609:	lea    r14,[rip+0x12de2]        # 0x1400143f2
   140001610:	sub    rdx,0x2
   140001614:	lea    rcx,[rsp+0x250]
   14000161c:	mov    WORD PTR [r14+rdx*2],si
   140001621:	mov    BYTE PTR [rip+0x11d90],0x50        # 0x1400133b8
   140001628:	call   0x1400010dc
   14000162d:	mov    ecx,esi
   14000162f:	lea    rdx,[rip+0xe95a]        # 0x14000ff90
   140001636:	test   rax,rax
   140001639:	mov    rbx,rax
   14000163c:	setne  cl
   14000163f:	call   0x140001000
   140001644:	lea    rax,[rbx+0x104]
   14000164b:	mov    rdi,rsi
   14000164e:	mov    rcx,rbx
   140001651:	cmp    rbx,rax
   140001654:	jae    0x14000166d
   140001656:	cmp    BYTE PTR [rcx],0xd
   140001659:	je     0x14000166a
   14000165b:	cmp    BYTE PTR [rcx],0xa
   14000165e:	je     0x14000166a
   140001660:	inc    rcx
   140001663:	cmp    rcx,rax
   140001666:	jb     0x140001656
   140001668:	jmp    0x14000166d
   14000166a:	mov    rdi,rcx
   14000166d:	mov    ecx,esi
   14000166f:	test   rdi,rdi
   140001672:	lea    rdx,[rip+0xe92f]        # 0x14000ffa8
   140001679:	setne  cl
   14000167c:	call   0x140001000
   140001681:	mov    BYTE PTR [rdi],sil
   140001684:	lea    rax,[rsp+0x40]
   140001689:	sub    edi,ebx
   14000168b:	mov    r8,rbx
   14000168e:	mov    edx,r12d
   140001691:	mov    ecx,0xfde9
   140001696:	mov    r9d,edi
   140001699:	mov    DWORD PTR [rsp+0x28],ebp
   14000169d:	mov    QWORD PTR [rsp+0x20],rax
   1400016a2:	call   QWORD PTR [rip+0xc9b0]        # 0x14000e058
   1400016a8:	mov    ecx,esi
   1400016aa:	test   eax,eax
   1400016ac:	lea    rdx,[rip+0xe925]        # 0x14000ffd8
   1400016b3:	movsxd rdi,eax
   1400016b6:	setne  cl
   1400016b9:	call   0x140001000
   1400016be:	mov    WORD PTR [rsp+rdi*2+0x40],si
   1400016c3:	lea    rbp,[rsp+0x40]
   1400016c8:	cmp    WORD PTR [rsp+0x40],si
   1400016cd:	je     0x1400016e9
   1400016cf:	movzx  ecx,WORD PTR [rbp+0x0]
   1400016d3:	mov    edx,r12d
   1400016d6:	call   0x140002254
   1400016db:	test   eax,eax
   1400016dd:	je     0x1400016e9
   1400016df:	add    rbp,0x2
   1400016e3:	cmp    WORD PTR [rbp+0x0],si
   1400016e7:	jne    0x1400016cf
   1400016e9:	cmp    WORD PTR [rbp+0x0],0x23
   1400016ee:	mov    ecx,esi
   1400016f0:	lea    rdx,[rip+0xe911]        # 0x140010008
   1400016f7:	sete   cl
   1400016fa:	call   0x140001000
   1400016ff:	jmp    0x140001710
   140001701:	mov    edx,r12d
   140001704:	movzx  ecx,ax
   140001707:	call   0x140002254
   14000170c:	test   eax,eax
   14000170e:	je     0x14000171d
   140001710:	add    rbp,0x2
   140001714:	movzx  eax,WORD PTR [rbp+0x0]
   140001718:	test   ax,ax
   14000171b:	jne    0x140001701
   14000171d:	cmp    WORD PTR [rbp+0x0],0x21
   140001722:	mov    ecx,esi
   140001724:	lea    rdx,[rip+0xe90d]        # 0x140010038
   14000172b:	sete   cl
   14000172e:	call   0x140001000
   140001733:	jmp    0x140001744
   140001735:	mov    edx,r12d
   140001738:	movzx  ecx,ax
   14000173b:	call   0x140002254
   140001740:	test   eax,eax
   140001742:	je     0x140001751
   140001744:	add    rbp,0x2
   140001748:	movzx  eax,WORD PTR [rbp+0x0]
   14000174c:	test   ax,ax
   14000174f:	jne    0x140001735
   140001751:	lea    rdx,[rip+0xe740]        # 0x14000fe98
   140001758:	mov    rcx,rbp
   14000175b:	call   QWORD PTR [rip+0xcb17]        # 0x14000e278
   140001761:	mov    ebx,0x22
   140001766:	mov    r12,rax
   140001769:	test   rax,rax
   14000176c:	je     0x1400017a0
   14000176e:	cmp    WORD PTR [rax+0x8],si
   140001772:	je     0x1400017a0
   140001774:	cmp    WORD PTR [rax+0x8],bx
   140001778:	je     0x1400017a0
   14000177a:	movzx  ecx,WORD PTR [rax+0x8]
   14000177e:	mov    edx,0x8
   140001783:	call   0x140002254
   140001788:	test   eax,eax
   14000178a:	jne    0x1400017a0
   14000178c:	lea    rdx,[rip+0xe705]        # 0x14000fe98
   140001793:	lea    rcx,[r12+0x8]
   140001798:	call   QWORD PTR [rip+0xcada]        # 0x14000e278
   14000179e:	jmp    0x140001766
   1400017a0:	mov    ecx,esi
   1400017a2:	test   r12,r12
   1400017a5:	lea    rdx,[rip+0xe6fc]        # 0x14000fea8
   1400017ac:	setne  cl
   1400017af:	call   0x140001000
   1400017b4:	add    r12,0x8
   1400017b8:	cmp    WORD PTR [rbp+0x0],bx
   1400017bc:	jne    0x1400017e1
   1400017be:	cmp    WORD PTR [r12],bx
   1400017c3:	mov    ecx,esi
   1400017c5:	lea    rdx,[rip+0xe724]        # 0x14000fef0
   1400017cc:	sete   cl
   1400017cf:	call   0x140001000
   1400017d4:	mov    WORD PTR [r12],si
   1400017d9:	add    r12,0x2
   1400017dd:	add    rbp,0x2
   1400017e1:	cmp    WORD PTR [r12],bx
   1400017e6:	mov    ecx,esi
   1400017e8:	lea    rdx,[rip+0xe751]        # 0x14000ff40
   1400017ef:	setne  cl
   1400017f2:	call   0x140001000
   1400017f7:	cmp    WORD PTR [r12],si
   1400017fc:	je     0x14000182d
   1400017fe:	movzx  ecx,WORD PTR [r12]
   140001803:	mov    edx,0x8
   140001808:	call   0x140002254
   14000180d:	test   eax,eax
   14000180f:	je     0x14000182d
   140001811:	mov    WORD PTR [r12],si
   140001816:	jmp    0x140001829
   140001818:	mov    edx,0x8
   14000181d:	movzx  ecx,ax
   140001820:	call   0x140002254
   140001825:	test   eax,eax
   140001827:	je     0x140001837
   140001829:	add    r12,0x2
   14000182d:	movzx  eax,WORD PTR [r12]
   140001832:	test   ax,ax
   140001835:	jne    0x140001818
   140001837:	mov    ecx,esi
   140001839:	test   rbp,rbp
   14000183c:	lea    rdx,[rip+0xe82d]        # 0x140010070
   140001843:	setne  cl
   140001846:	call   0x140001000
   14000184b:	mov    ecx,esi
   14000184d:	test   r12,r12
   140001850:	lea    rdx,[rip+0xe849]        # 0x1400100a0
   140001857:	setne  cl
   14000185a:	call   0x140001000
   14000185f:	xor    eax,eax
   140001861:	or     r9,0xffffffffffffffff
   140001865:	mov    rcx,r9
   140001868:	mov    rdi,r12
   14000186b:	lea    edx,[rax+0x2]
   14000186e:	repnz scas ax,WORD PTR es:[rdi]
   140001871:	mov    rdi,rbp
   140001874:	not    rcx
   140001877:	lea    r8,[rcx-0x1]
   14000187b:	mov    rcx,r9
   14000187e:	repnz scas ax,WORD PTR es:[rdi]
   140001881:	mov    rdi,r13
   140001884:	not    rcx
   140001887:	dec    rcx
   14000188a:	add    r8,rcx
   14000188d:	mov    rcx,r9
   140001890:	repnz scas ax,WORD PTR es:[rdi]
   140001893:	mov    rdi,r14
   140001896:	not    rcx
   140001899:	dec    rcx
   14000189c:	add    r8,rcx
   14000189f:	mov    rcx,r9
   1400018a2:	repnz scas ax,WORD PTR es:[rdi]
   1400018a5:	not    rcx
   1400018a8:	lea    rbx,[r8+rcx*1+0x7]
   1400018ad:	mov    rcx,rbx
   1400018b0:	call   0x140001ad4
   1400018b5:	lea    rdx,[rip+0xe824]        # 0x1400100e0
   1400018bc:	test   rax,rax
   1400018bf:	mov    rdi,rax
   1400018c2:	setne  sil
   1400018c6:	mov    ecx,esi
   1400018c8:	call   0x140001000
   1400018cd:	mov    QWORD PTR [rsp+0x38],r13
   1400018d2:	mov    QWORD PTR [rsp+0x30],r14
   1400018d7:	lea    r9,[rip+0xe83a]        # 0x140010118
   1400018de:	mov    r8,rbx
   1400018e1:	mov    rdx,rbx
   1400018e4:	mov    rcx,rdi
   1400018e7:	mov    QWORD PTR [rsp+0x28],r12
   1400018ec:	mov    QWORD PTR [rsp+0x20],rbp
   1400018f1:	call   0x140001e00
   1400018f6:	mov    rcx,rdi
   1400018f9:	call   0x140001360
   1400018fe:	int3   
   1400018ff:	int3   
   140001900:	sub    rsp,0x28
   140001904:	call   0x140001554
   140001909:	int3   
   14000190a:	int3   
   14000190b:	int3   
   14000190c:	int3   
   14000190d:	int3   
   14000190e:	int3   
   14000190f:	int3   
   140001910:	int3   
   140001911:	int3   
   140001912:	int3   
   140001913:	int3   
   140001914:	int3   
   140001915:	int3   
   140001916:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001920:	cmp    rcx,QWORD PTR [rip+0x10aa1]        # 0x1400123c8
   140001927:	jne    0x14000193a
   140001929:	rol    rcx,0x10
   14000192d:	test   cx,0xffff
   140001932:	jne    0x140001936
   140001934:	repz ret 
   140001936:	ror    rcx,0x10
   14000193a:	jmp    0x14000286c
   14000193f:	int3   
   140001940:	mov    QWORD PTR [rsp+0x10],rbx
   140001945:	mov    QWORD PTR [rsp+0x18],rsi
   14000194a:	push   rdi
   14000194b:	push   r12
   14000194d:	push   r13
   14000194f:	sub    rsp,0x30
   140001953:	mov    QWORD PTR [rsp+0x20],rsp
   140001958:	mov    r12d,r8d
   14000195b:	mov    rdi,rdx
   14000195e:	mov    rsi,rcx
   140001961:	xor    r13d,r13d
   140001964:	mov    eax,r13d
   140001967:	test   rcx,rcx
   14000196a:	setne  al
   14000196d:	test   eax,eax
   14000196f:	jne    0x140001988
   140001971:	call   0x140003250
   140001976:	mov    DWORD PTR [rax],0x16
   14000197c:	call   0x1400031e8
   140001981:	xor    eax,eax
   140001983:	jmp    0x140001a09
   140001988:	mov    eax,r13d
   14000198b:	test   rdx,rdx
   14000198e:	setne  al
   140001991:	test   eax,eax
   140001993:	je     0x140001971
   140001995:	mov    eax,r13d
   140001998:	cmp    WORD PTR [rdx],r13w
   14000199c:	setne  al
   14000199f:	test   eax,eax
   1400019a1:	je     0x140001971
   1400019a3:	call   0x140002e98
   1400019a8:	mov    rbx,rax
   1400019ab:	mov    QWORD PTR [rsp+0x50],rax
   1400019b0:	test   rax,rax
   1400019b3:	jne    0x1400019c2
   1400019b5:	call   0x140003250
   1400019ba:	mov    DWORD PTR [rax],0x18
   1400019c0:	jmp    0x140001981
   1400019c2:	cmp    WORD PTR [rsi],r13w
   1400019c6:	jne    0x1400019ea
   1400019c8:	call   0x140003250
   1400019cd:	mov    DWORD PTR [rax],0x16
   1400019d3:	lea    rdx,[rip+0xc]        # 0x1400019e6
   1400019da:	mov    rcx,QWORD PTR [rsp+0x20]
   1400019df:	call   0x1400032f0
   1400019e4:	nop
   1400019e5:	nop
   1400019e6:	xor    eax,eax
   1400019e8:	jmp    0x140001a09
   1400019ea:	mov    r9,rax
   1400019ed:	mov    r8d,r12d
   1400019f0:	mov    rdx,rdi
   1400019f3:	mov    rcx,rsi
   1400019f6:	call   0x140002bb8
   1400019fb:	mov    rdi,rax
   1400019fe:	mov    rcx,rbx
   140001a01:	call   0x140001d78
   140001a06:	mov    rax,rdi
   140001a09:	mov    rbx,QWORD PTR [rsp+0x58]
   140001a0e:	mov    rsi,QWORD PTR [rsp+0x60]
   140001a13:	add    rsp,0x30
   140001a17:	pop    r13
   140001a19:	pop    r12
   140001a1b:	pop    rdi
   140001a1c:	ret    
   140001a1d:	int3   
   140001a1e:	int3   
   140001a1f:	int3   
   140001a20:	rex push rbx
   140001a22:	sub    rsp,0x20
   140001a26:	mov    rax,r8
   140001a29:	mov    r9,rdx
   140001a2c:	mov    rbx,rcx
   140001a2f:	test   rcx,rcx
   140001a32:	jne    0x140001a49
   140001a34:	call   0x140003250
   140001a39:	mov    ebx,0x16
   140001a3e:	mov    DWORD PTR [rax],ebx
   140001a40:	call   0x1400031e8
   140001a45:	mov    eax,ebx
   140001a47:	jmp    0x140001a6d
   140001a49:	mov    r8d,0x80
   140001a4f:	mov    rdx,rax
   140001a52:	mov    rcx,r9
   140001a55:	call   0x140001940
   140001a5a:	mov    QWORD PTR [rbx],rax
   140001a5d:	test   rax,rax
   140001a60:	je     0x140001a66
   140001a62:	xor    eax,eax
   140001a64:	jmp    0x140001a6d
   140001a66:	call   0x140003250
   140001a6b:	mov    eax,DWORD PTR [rax]
   140001a6d:	add    rsp,0x20
   140001a71:	pop    rbx
   140001a72:	ret    
   140001a73:	int3   
   140001a74:	jmp    0x140001a7f
   140001a76:	cmp    ax,dx
   140001a79:	je     0x140001a8c
   140001a7b:	add    rcx,0x2
   140001a7f:	movzx  eax,WORD PTR [rcx]
   140001a82:	test   ax,ax
   140001a85:	jne    0x140001a76
   140001a87:	cmp    ax,dx
   140001a8a:	jne    0x140001a90
   140001a8c:	mov    rax,rcx
   140001a8f:	ret    
   140001a90:	xor    eax,eax
   140001a92:	ret    
   140001a93:	int3   
   140001a94:	test   rcx,rcx
   140001a97:	je     0x140001ad0
   140001a99:	push   rbx
   140001a9a:	sub    rsp,0x20
   140001a9e:	mov    r8,rcx
   140001aa1:	mov    rcx,QWORD PTR [rip+0x11eb0]        # 0x140013958
   140001aa8:	xor    edx,edx
   140001aaa:	call   QWORD PTR [rip+0xc5e0]        # 0x14000e090
   140001ab0:	test   eax,eax
   140001ab2:	jne    0x140001acb
   140001ab4:	call   0x140003250
   140001ab9:	mov    rbx,rax
   140001abc:	call   QWORD PTR [rip+0xc5ae]        # 0x14000e070
   140001ac2:	mov    ecx,eax
   140001ac4:	call   0x140003208
   140001ac9:	mov    DWORD PTR [rbx],eax
   140001acb:	add    rsp,0x20
   140001acf:	pop    rbx
   140001ad0:	ret    
   140001ad1:	int3   
   140001ad2:	int3   
   140001ad3:	int3   
   140001ad4:	rex push rbx
   140001ad6:	sub    rsp,0x20
   140001ada:	and    DWORD PTR [rsp+0x40],0x0
   140001adf:	lea    r8,[rsp+0x40]
   140001ae4:	call   0x1400033ac
   140001ae9:	mov    rbx,rax
   140001aec:	test   rax,rax
   140001aef:	jne    0x140001b0c
   140001af1:	cmp    DWORD PTR [rsp+0x40],eax
   140001af5:	je     0x140001b0c
   140001af7:	call   0x140003250
   140001afc:	test   rax,rax
   140001aff:	je     0x140001b0c
   140001b01:	call   0x140003250
   140001b06:	mov    ecx,DWORD PTR [rsp+0x40]
   140001b0a:	mov    DWORD PTR [rax],ecx
   140001b0c:	mov    rax,rbx
   140001b0f:	add    rsp,0x20
   140001b13:	pop    rbx
   140001b14:	ret    
   140001b15:	int3   
   140001b16:	int3   
   140001b17:	int3   
   140001b18:	mov    QWORD PTR [rsp+0x8],rbx
   140001b1d:	mov    QWORD PTR [rsp+0x10],rsi
   140001b22:	push   rdi
   140001b23:	sub    rsp,0x20
   140001b27:	mov    rbx,rcx
   140001b2a:	cmp    rcx,0xffffffffffffffe0
   140001b2e:	ja     0x140001bac
   140001b30:	mov    edi,0x1
   140001b35:	test   rcx,rcx
   140001b38:	cmovne rdi,rcx
   140001b3c:	mov    rcx,QWORD PTR [rip+0x11e15]        # 0x140013958
   140001b43:	test   rcx,rcx
   140001b46:	jne    0x140001b68
   140001b48:	call   0x140003a94
   140001b4d:	mov    ecx,0x1e
   140001b52:	call   0x140003834
   140001b57:	mov    ecx,0xff
   140001b5c:	call   0x140003484
   140001b61:	mov    rcx,QWORD PTR [rip+0x11df0]        # 0x140013958
   140001b68:	mov    r8,rdi
   140001b6b:	xor    edx,edx
   140001b6d:	call   QWORD PTR [rip+0xc525]        # 0x14000e098
   140001b73:	mov    rsi,rax
   140001b76:	test   rax,rax
   140001b79:	jne    0x140001ba7
   140001b7b:	cmp    DWORD PTR [rip+0x1246f],eax        # 0x140013ff0
   140001b81:	je     0x140001b91
   140001b83:	mov    rcx,rbx
   140001b86:	call   0x140003ae0
   140001b8b:	test   eax,eax
   140001b8d:	je     0x140001b9c
   140001b8f:	jmp    0x140001b3c
   140001b91:	call   0x140003250
   140001b96:	mov    DWORD PTR [rax],0xc
   140001b9c:	call   0x140003250
   140001ba1:	mov    DWORD PTR [rax],0xc
   140001ba7:	mov    rax,rsi
   140001baa:	jmp    0x140001bbe
   140001bac:	call   0x140003ae0
   140001bb1:	call   0x140003250
   140001bb6:	mov    DWORD PTR [rax],0xc
   140001bbc:	xor    eax,eax
   140001bbe:	mov    rbx,QWORD PTR [rsp+0x30]
   140001bc3:	mov    rsi,QWORD PTR [rsp+0x38]
   140001bc8:	add    rsp,0x20
   140001bcc:	pop    rdi
   140001bcd:	ret    
   140001bce:	int3   
   140001bcf:	int3   
   140001bd0:	lea    rax,[rip+0x10429]        # 0x140012000
   140001bd7:	ret    
   140001bd8:	rex push rbx
   140001bda:	sub    rsp,0x20
   140001bde:	mov    eax,DWORD PTR [rip+0x13c9c]        # 0x140015880
   140001be4:	mov    ebx,0x14
   140001be9:	test   eax,eax
   140001beb:	jne    0x140001bf4
   140001bed:	mov    eax,0x200
   140001bf2:	jmp    0x140001bf9
   140001bf4:	cmp    eax,ebx
   140001bf6:	cmovl  eax,ebx
   140001bf9:	movsxd rcx,eax
   140001bfc:	mov    edx,0x8
   140001c01:	mov    DWORD PTR [rip+0x13c79],eax        # 0x140015880
   140001c07:	call   0x140003e68
   140001c0c:	mov    QWORD PTR [rip+0x12c4d],rax        # 0x140014860
   140001c13:	test   rax,rax
   140001c16:	jne    0x140001c3c
   140001c18:	lea    edx,[rax+0x8]
   140001c1b:	mov    rcx,rbx
   140001c1e:	mov    DWORD PTR [rip+0x13c5c],ebx        # 0x140015880
   140001c24:	call   0x140003e68
   140001c29:	mov    QWORD PTR [rip+0x12c30],rax        # 0x140014860
   140001c30:	test   rax,rax
   140001c33:	jne    0x140001c3c
   140001c35:	mov    eax,0x1a
   140001c3a:	jmp    0x140001cb2
   140001c3c:	xor    ecx,ecx
   140001c3e:	lea    rdx,[rip+0x103bb]        # 0x140012000
   140001c45:	mov    QWORD PTR [rcx+rax*1],rdx
   140001c49:	add    rdx,0x30
   140001c4d:	add    rcx,0x8
   140001c51:	dec    rbx
   140001c54:	je     0x140001c5f
   140001c56:	mov    rax,QWORD PTR [rip+0x12c03]        # 0x140014860
   140001c5d:	jmp    0x140001c45
   140001c5f:	xor    r8d,r8d
   140001c62:	lea    rdx,[rip+0x103b3]        # 0x14001201c
   140001c69:	lea    r9d,[r8+0x3]
   140001c6d:	mov    rcx,r8
   140001c70:	lea    r10,[rip+0x129a9]        # 0x140014620
   140001c77:	mov    rax,r8
   140001c7a:	sar    rax,0x5
   140001c7e:	and    ecx,0x1f
   140001c81:	mov    rax,QWORD PTR [r10+rax*8]
   140001c85:	imul   rcx,rcx,0x58
   140001c89:	mov    r10,QWORD PTR [rcx+rax*1]
   140001c8d:	cmp    r10,0xffffffffffffffff
   140001c91:	je     0x140001c9e
   140001c93:	cmp    r10,0xfffffffffffffffe
   140001c97:	je     0x140001c9e
   140001c99:	test   r10,r10
   140001c9c:	jne    0x140001ca4
   140001c9e:	mov    DWORD PTR [rdx],0xfffffffe
   140001ca4:	inc    r8
   140001ca7:	add    rdx,0x30
   140001cab:	dec    r9
   140001cae:	jne    0x140001c6d
   140001cb0:	xor    eax,eax
   140001cb2:	add    rsp,0x20
   140001cb6:	pop    rbx
   140001cb7:	ret    
   140001cb8:	sub    rsp,0x28
   140001cbc:	call   0x1400041d4
   140001cc1:	cmp    BYTE PTR [rip+0x11ce0],0x0        # 0x1400139a8
   140001cc8:	je     0x140001ccf
   140001cca:	call   0x140003f74
   140001ccf:	mov    rcx,QWORD PTR [rip+0x12b8a]        # 0x140014860
   140001cd6:	add    rsp,0x28
   140001cda:	jmp    0x140001a94
   140001cdf:	int3   
   140001ce0:	rex push rbx
   140001ce2:	sub    rsp,0x20
   140001ce6:	mov    rbx,rcx
   140001ce9:	lea    rcx,[rip+0x10310]        # 0x140012000
   140001cf0:	cmp    rbx,rcx
   140001cf3:	jb     0x140001d33
   140001cf5:	lea    rax,[rip+0x10694]        # 0x140012390
   140001cfc:	cmp    rbx,rax
   140001cff:	ja     0x140001d33
   140001d01:	mov    rdx,rbx
   140001d04:	movabs rax,0x2aaaaaaaaaaaaaab
   140001d0e:	sub    rdx,rcx
   140001d11:	imul   rdx
   140001d14:	sar    rdx,0x3
   140001d18:	mov    rcx,rdx
   140001d1b:	shr    rcx,0x3f
   140001d1f:	lea    ecx,[rcx+rdx*1+0x10]
   140001d23:	call   0x1400043ec
   140001d28:	bts    DWORD PTR [rbx+0x18],0xf
   140001d2d:	add    rsp,0x20
   140001d31:	pop    rbx
   140001d32:	ret    
   140001d33:	lea    rcx,[rbx+0x30]
   140001d37:	add    rsp,0x20
   140001d3b:	pop    rbx
   140001d3c:	rex.W jmp QWORD PTR [rip+0xc35d]        # 0x14000e0a0
   140001d43:	int3   
   140001d44:	rex push rbx
   140001d46:	sub    rsp,0x20
   140001d4a:	mov    rbx,rdx
   140001d4d:	cmp    ecx,0x14
   140001d50:	jge    0x140001d65
   140001d52:	add    ecx,0x10
   140001d55:	call   0x1400043ec
   140001d5a:	bts    DWORD PTR [rbx+0x18],0xf
   140001d5f:	add    rsp,0x20
   140001d63:	pop    rbx
   140001d64:	ret    
   140001d65:	lea    rcx,[rdx+0x30]
   140001d69:	add    rsp,0x20
   140001d6d:	pop    rbx
   140001d6e:	rex.W jmp QWORD PTR [rip+0xc32b]        # 0x14000e0a0
   140001d75:	int3   
   140001d76:	int3   
   140001d77:	int3   
   140001d78:	lea    rdx,[rip+0x10281]        # 0x140012000
   140001d7f:	cmp    rcx,rdx
   140001d82:	jb     0x140001db9
   140001d84:	lea    rax,[rip+0x10605]        # 0x140012390
   140001d8b:	cmp    rcx,rax
   140001d8e:	ja     0x140001db9
   140001d90:	btr    DWORD PTR [rcx+0x18],0xf
   140001d95:	sub    rcx,rdx
   140001d98:	movabs rax,0x2aaaaaaaaaaaaaab
   140001da2:	imul   rcx
   140001da5:	sar    rdx,0x3
   140001da9:	mov    rcx,rdx
   140001dac:	shr    rcx,0x3f
   140001db0:	lea    ecx,[rcx+rdx*1+0x10]
   140001db4:	jmp    0x1400042ec
   140001db9:	add    rcx,0x30
   140001dbd:	rex.W jmp QWORD PTR [rip+0xc2e4]        # 0x14000e0a8
   140001dc4:	cmp    ecx,0x14
   140001dc7:	jge    0x140001dd6
   140001dc9:	btr    DWORD PTR [rdx+0x18],0xf
   140001dce:	add    ecx,0x10
   140001dd1:	jmp    0x1400042ec
   140001dd6:	lea    rcx,[rdx+0x30]
   140001dda:	rex.W jmp QWORD PTR [rip+0xc2c7]        # 0x14000e0a8
   140001de1:	int3   
   140001de2:	int3   
   140001de3:	int3   
   140001de4:	test   r8,r8
   140001de7:	je     0x140001df5
   140001de9:	cmp    BYTE PTR [rcx],dl
   140001deb:	je     0x140001df5
   140001ded:	inc    rcx
   140001df0:	dec    r8
   140001df3:	jne    0x140001de9
   140001df5:	neg    r8
   140001df8:	sbb    rax,rax
   140001dfb:	and    rax,rcx
   140001dfe:	ret    
   140001dff:	int3   
   140001e00:	mov    r11,rsp
   140001e03:	mov    QWORD PTR [r11+0x20],r9
   140001e07:	sub    rsp,0x38
   140001e0b:	lea    rax,[r11+0x28]
   140001e0f:	mov    QWORD PTR [r11-0x10],rax
   140001e13:	and    QWORD PTR [r11-0x18],0x0
   140001e18:	call   0x140004ad8
   140001e1d:	add    rsp,0x38
   140001e21:	ret    
   140001e22:	int3   
   140001e23:	int3   
   140001e24:	mov    QWORD PTR [rsp+0x20],rbx
   140001e29:	push   rbp
   140001e2a:	push   rsi
   140001e2b:	push   rdi
   140001e2c:	push   r12
   140001e2e:	push   r13
   140001e30:	push   r14
   140001e32:	push   r15
   140001e34:	sub    rsp,0x20
   140001e38:	mov    r13,rcx
   140001e3b:	mov    r14,rcx
   140001e3e:	mov    QWORD PTR [rsp+0x68],rcx
   140001e43:	mov    rcx,rdx
   140001e46:	mov    r15,r9
   140001e49:	mov    r12,r8
   140001e4c:	mov    rsi,rdx
   140001e4f:	mov    QWORD PTR [rsp+0x70],rdx
   140001e54:	test   r8,r8
   140001e57:	je     0x140001e73
   140001e59:	test   r9,r9
   140001e5c:	je     0x140001e73
   140001e5e:	test   r14,r14
   140001e61:	jne    0x140001e8a
   140001e63:	call   0x140003250
   140001e68:	mov    DWORD PTR [rax],0x16
   140001e6e:	call   0x1400031e8
   140001e73:	xor    eax,eax
   140001e75:	mov    rbx,QWORD PTR [rsp+0x78]
   140001e7a:	add    rsp,0x20
   140001e7e:	pop    r15
   140001e80:	pop    r14
   140001e82:	pop    r13
   140001e84:	pop    r12
   140001e86:	pop    rdi
   140001e87:	pop    rsi
   140001e88:	pop    rbp
   140001e89:	ret    
   140001e8a:	mov    rdi,QWORD PTR [rsp+0x80]
   140001e92:	test   rdi,rdi
   140001e95:	je     0x140001ea5
   140001e97:	xor    edx,edx
   140001e99:	or     rax,0xffffffffffffffff
   140001e9d:	div    r12
   140001ea0:	cmp    r9,rax
   140001ea3:	jbe    0x140001ece
   140001ea5:	cmp    rsi,0xffffffffffffffff
   140001ea9:	je     0x140001ebb
   140001eab:	mov    r8,rsi
   140001eae:	xor    edx,edx
   140001eb0:	mov    rcx,r13
   140001eb3:	call   0x1400048d0
   140001eb8:	mov    rcx,rsi
   140001ebb:	test   rdi,rdi
   140001ebe:	je     0x140001e63
   140001ec0:	xor    edx,edx
   140001ec2:	or     rax,0xffffffffffffffff
   140001ec6:	div    r12
   140001ec9:	cmp    r15,rax
   140001ecc:	ja     0x140001e63
   140001ece:	mov    rbx,r12
   140001ed1:	imul   rbx,r15
   140001ed5:	test   DWORD PTR [rdi+0x18],0x10c
   140001edc:	mov    rbp,rbx
   140001edf:	je     0x140001ee7
   140001ee1:	mov    r9d,DWORD PTR [rdi+0x24]
   140001ee5:	jmp    0x140001eed
   140001ee7:	mov    r9d,0x1000
   140001eed:	mov    DWORD PTR [rsp+0x60],r9d
   140001ef2:	test   rbx,rbx
   140001ef5:	je     0x140002053
   140001efb:	test   DWORD PTR [rdi+0x18],0x10c
   140001f02:	mov    r10d,0x7fffffff
   140001f08:	je     0x140001f68
   140001f0a:	movsxd r14,DWORD PTR [rdi+0x8]
   140001f0e:	test   r14d,r14d
   140001f11:	je     0x140001f63
   140001f13:	js     0x140002039
   140001f19:	cmp    rbp,r14
   140001f1c:	cmovb  r14d,ebp
   140001f20:	mov    r9d,r14d
   140001f23:	cmp    r9,rcx
   140001f26:	ja     0x140002016
   140001f2c:	mov    r8,QWORD PTR [rdi]
   140001f2f:	mov    rdx,rcx
   140001f32:	mov    rcx,QWORD PTR [rsp+0x68]
   140001f37:	call   0x1400055e4
   140001f3c:	sub    DWORD PTR [rdi+0x8],r14d
   140001f40:	mov    eax,r14d
   140001f43:	mov    r14,QWORD PTR [rsp+0x68]
   140001f48:	sub    rbp,rax
   140001f4b:	add    QWORD PTR [rdi],rax
   140001f4e:	mov    rcx,QWORD PTR [rsp+0x70]
   140001f53:	mov    r9d,DWORD PTR [rsp+0x60]
   140001f58:	add    r14,rax
   140001f5b:	sub    rcx,rax
   140001f5e:	jmp    0x140002004
   140001f63:	mov    r14,QWORD PTR [rsp+0x68]
   140001f68:	mov    r8d,r9d
   140001f6b:	cmp    rbp,r8
   140001f6e:	jb     0x140001fd8
   140001f70:	test   r9d,r9d
   140001f73:	je     0x140001f95
   140001f75:	xor    edx,edx
   140001f77:	cmp    rbp,r10
   140001f7a:	jbe    0x140001f87
   140001f7c:	mov    eax,r10d
   140001f7f:	mov    r14d,r10d
   140001f82:	div    r9d
   140001f85:	jmp    0x140001f90
   140001f87:	mov    rax,rbp
   140001f8a:	mov    r14d,ebp
   140001f8d:	div    r8
   140001f90:	sub    r14d,edx
   140001f93:	jmp    0x140001f9f
   140001f95:	mov    r14d,ebp
   140001f98:	cmp    rbp,r10
   140001f9b:	cmova  r14d,r10d
   140001f9f:	mov    eax,r14d
   140001fa2:	cmp    rax,rcx
   140001fa5:	ja     0x140002016
   140001fa7:	mov    rcx,rdi
   140001faa:	call   0x1400055bc
   140001faf:	mov    r8d,r14d
   140001fb2:	mov    r14,QWORD PTR [rsp+0x68]
   140001fb7:	mov    rdx,r14
   140001fba:	mov    ecx,eax
   140001fbc:	call   0x1400054a0
   140001fc1:	test   eax,eax
   140001fc3:	je     0x14000204d
   140001fc9:	cmp    eax,0xffffffff
   140001fcc:	je     0x140002039
   140001fce:	mov    eax,eax
   140001fd0:	sub    rbp,rax
   140001fd3:	jmp    0x140001f4e
   140001fd8:	mov    rcx,rdi
   140001fdb:	call   0x140004c28
   140001fe0:	cmp    eax,0xffffffff
   140001fe3:	je     0x14000203d
   140001fe5:	mov    rcx,QWORD PTR [rsp+0x70]
   140001fea:	test   rcx,rcx
   140001fed:	je     0x140002016
   140001fef:	mov    BYTE PTR [r14],al
   140001ff2:	mov    r9d,DWORD PTR [rdi+0x24]
   140001ff6:	dec    rbp
   140001ff9:	inc    r14
   140001ffc:	dec    rcx
   140001fff:	mov    DWORD PTR [rsp+0x60],r9d
   140002004:	mov    QWORD PTR [rsp+0x68],r14
   140002009:	mov    QWORD PTR [rsp+0x70],rcx
   14000200e:	test   rbp,rbp
   140002011:	jmp    0x140001ef5
   140002016:	cmp    rsi,0xffffffffffffffff
   14000201a:	je     0x140002029
   14000201c:	mov    r8,rsi
   14000201f:	xor    edx,edx
   140002021:	mov    rcx,r13
   140002024:	call   0x1400048d0
   140002029:	call   0x140003250
   14000202e:	mov    DWORD PTR [rax],0x22
   140002034:	jmp    0x140001e6e
   140002039:	or     DWORD PTR [rdi+0x18],0x20
   14000203d:	sub    rbx,rbp
   140002040:	xor    edx,edx
   140002042:	mov    rax,rbx
   140002045:	div    r12
   140002048:	jmp    0x140001e75
   14000204d:	or     DWORD PTR [rdi+0x18],0x10
   140002051:	jmp    0x14000203d
   140002053:	mov    rax,r15
   140002056:	jmp    0x140001e75
   14000205b:	int3   
   14000205c:	mov    rax,rsp
   14000205f:	mov    QWORD PTR [rax+0x8],rbx
   140002063:	mov    QWORD PTR [rax+0x10],rsi
   140002067:	mov    QWORD PTR [rax+0x18],rdi
   14000206b:	mov    QWORD PTR [rax+0x20],r12
   14000206f:	push   r13
   140002071:	sub    rsp,0x30
   140002075:	mov    rsi,r9
   140002078:	mov    r13,r8
   14000207b:	mov    rdi,rdx
   14000207e:	mov    r12,rcx
   140002081:	test   r8,r8
   140002084:	je     0x1400020e6
   140002086:	test   r9,r9
   140002089:	je     0x1400020e6
   14000208b:	mov    rbx,QWORD PTR [rsp+0x60]
   140002090:	test   rbx,rbx
   140002093:	jne    0x1400020b7
   140002095:	cmp    rdx,0xffffffffffffffff
   140002099:	je     0x1400020a5
   14000209b:	mov    r8,rdx
   14000209e:	xor    edx,edx
   1400020a0:	call   0x1400048d0
   1400020a5:	call   0x140003250
   1400020aa:	mov    DWORD PTR [rax],0x16
   1400020b0:	call   0x1400031e8
   1400020b5:	jmp    0x1400020e6
   1400020b7:	mov    rcx,rbx
   1400020ba:	call   0x140001ce0
   1400020bf:	nop
   1400020c0:	mov    QWORD PTR [rsp+0x20],rbx
   1400020c5:	mov    r9,rsi
   1400020c8:	mov    r8,r13
   1400020cb:	mov    rdx,rdi
   1400020ce:	mov    rcx,r12
   1400020d1:	call   0x140001e24
   1400020d6:	mov    rdi,rax
   1400020d9:	mov    rcx,rbx
   1400020dc:	call   0x140001d78
   1400020e1:	mov    rax,rdi
   1400020e4:	jmp    0x1400020e8
   1400020e6:	xor    eax,eax
   1400020e8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400020ed:	mov    rsi,QWORD PTR [rsp+0x48]
   1400020f2:	mov    rdi,QWORD PTR [rsp+0x50]
   1400020f7:	mov    r12,QWORD PTR [rsp+0x58]
   1400020fc:	add    rsp,0x30
   140002100:	pop    r13
   140002102:	ret    
   140002103:	int3   
   140002104:	sub    rsp,0x38
   140002108:	mov    QWORD PTR [rsp+0x20],r9
   14000210d:	mov    r9,r8
   140002110:	mov    r8,rdx
   140002113:	or     rdx,0xffffffffffffffff
   140002117:	call   0x14000205c
   14000211c:	add    rsp,0x38
   140002120:	ret    
   140002121:	int3   
   140002122:	int3   
   140002123:	int3   
   140002124:	mov    rax,rsp
   140002127:	mov    QWORD PTR [rax+0x10],rdx
   14000212b:	mov    QWORD PTR [rax+0x8],rcx
   14000212f:	mov    QWORD PTR [rax+0x18],r8
   140002133:	mov    QWORD PTR [rax+0x20],r9
   140002137:	push   rbx
   140002138:	push   rsi
   140002139:	push   rdi
   14000213a:	push   r12
   14000213c:	sub    rsp,0x28
   140002140:	mov    rdi,rcx
   140002143:	xor    esi,esi
   140002145:	xor    eax,eax
   140002147:	test   rcx,rcx
   14000214a:	setne  al
   14000214d:	test   eax,eax
   14000214f:	jne    0x140002169
   140002151:	call   0x140003250
   140002156:	mov    DWORD PTR [rax],0x16
   14000215c:	call   0x1400031e8
   140002161:	or     eax,0xffffffff
   140002164:	jmp    0x140002248
   140002169:	xor    eax,eax
   14000216b:	test   rdx,rdx
   14000216e:	setne  al
   140002171:	test   eax,eax
   140002173:	je     0x140002151
   140002175:	lea    r12,[rsp+0x60]
   14000217a:	call   0x140001ce0
   14000217f:	nop
   140002180:	test   BYTE PTR [rdi+0x18],0x40
   140002184:	jne    0x140002210
   14000218a:	mov    rcx,rdi
   14000218d:	call   0x1400055bc
   140002192:	cmp    eax,0xffffffff
   140002195:	je     0x1400021c1
   140002197:	cmp    eax,0xfffffffe
   14000219a:	je     0x1400021c1
   14000219c:	movsxd rdx,eax
   14000219f:	mov    rcx,rdx
   1400021a2:	sar    rcx,0x5
   1400021a6:	lea    r8,[rip+0x12473]        # 0x140014620
   1400021ad:	and    edx,0x1f
   1400021b0:	imul   rdx,rdx,0x58
   1400021b4:	add    rdx,QWORD PTR [r8+rcx*8]
   1400021b8:	lea    rcx,[rip+0x10391]        # 0x140012550
   1400021bf:	jmp    0x1400021d2
   1400021c1:	lea    rcx,[rip+0x10388]        # 0x140012550
   1400021c8:	mov    rdx,rcx
   1400021cb:	lea    r8,[rip+0x1244e]        # 0x140014620
   1400021d2:	test   BYTE PTR [rdx+0x38],0x7f
   1400021d6:	jne    0x1400021fd
   1400021d8:	cmp    eax,0xffffffff
   1400021db:	je     0x1400021f7
   1400021dd:	cmp    eax,0xfffffffe
   1400021e0:	je     0x1400021f7
   1400021e2:	movsxd rcx,eax
   1400021e5:	mov    rax,rcx
   1400021e8:	sar    rax,0x5
   1400021ec:	and    ecx,0x1f
   1400021ef:	imul   rcx,rcx,0x58
   1400021f3:	add    rcx,QWORD PTR [r8+rax*8]
   1400021f7:	test   BYTE PTR [rcx+0x38],0x80
   1400021fb:	je     0x140002210
   1400021fd:	call   0x140003250
   140002202:	mov    DWORD PTR [rax],0x16
   140002208:	call   0x1400031e8
   14000220d:	or     esi,0xffffffff
   140002210:	test   esi,esi
   140002212:	jne    0x14000223e
   140002214:	mov    rcx,rdi
   140002217:	call   0x14000566c
   14000221c:	mov    ebx,eax
   14000221e:	mov    r9,r12
   140002221:	xor    r8d,r8d
   140002224:	mov    rdx,QWORD PTR [rsp+0x58]
   140002229:	mov    rcx,rdi
   14000222c:	call   0x140005864
   140002231:	mov    esi,eax
   140002233:	mov    rdx,rdi
   140002236:	mov    ecx,ebx
   140002238:	call   0x140005740
   14000223d:	nop
   14000223e:	mov    rcx,rdi
   140002241:	call   0x140001d78
   140002246:	mov    eax,esi
   140002248:	add    rsp,0x28
   14000224c:	pop    r12
   14000224e:	pop    rdi
   14000224f:	pop    rsi
   140002250:	pop    rbx
   140002251:	ret    
   140002252:	int3   
   140002253:	int3   
   140002254:	mov    WORD PTR [rsp+0x8],cx
   140002259:	push   rbx
   14000225a:	sub    rsp,0x20
   14000225e:	mov    eax,0xffff
   140002263:	movzx  ebx,dx
   140002266:	cmp    cx,ax
   140002269:	jne    0x14000226f
   14000226b:	xor    eax,eax
   14000226d:	jmp    0x1400022b4
   14000226f:	mov    eax,0x100
   140002274:	cmp    cx,ax
   140002277:	jae    0x140002289
   140002279:	mov    rax,QWORD PTR [rip+0x10688]        # 0x140012908
   140002280:	movzx  ecx,cx
   140002283:	movzx  eax,WORD PTR [rax+rcx*2]
   140002287:	jmp    0x1400022af
   140002289:	mov    ecx,0x1
   14000228e:	lea    r9,[rsp+0x40]
   140002293:	lea    rdx,[rsp+0x30]
   140002298:	mov    r8d,ecx
   14000229b:	call   QWORD PTR [rip+0xbe0f]        # 0x14000e0b0
   1400022a1:	xor    ecx,ecx
   1400022a3:	test   eax,eax
   1400022a5:	je     0x1400022ac
   1400022a7:	movzx  ecx,WORD PTR [rsp+0x40]
   1400022ac:	movzx  eax,cx
   1400022af:	movzx  ecx,bx
   1400022b2:	and    eax,ecx
   1400022b4:	add    rsp,0x20
   1400022b8:	pop    rbx
   1400022b9:	ret    
   1400022ba:	int3   
   1400022bb:	int3   
   1400022bc:	mov    rax,rsp
   1400022bf:	mov    QWORD PTR [rax+0x8],rbx
   1400022c3:	mov    QWORD PTR [rax+0x10],rbp
   1400022c7:	mov    QWORD PTR [rax+0x18],rsi
   1400022cb:	mov    QWORD PTR [rax+0x20],rdi
   1400022cf:	push   r12
   1400022d1:	push   r13
   1400022d3:	push   r14
   1400022d5:	sub    rsp,0x20
   1400022d9:	mov    rbx,rcx
   1400022dc:	test   rcx,rcx
   1400022df:	jne    0x1400022f9
   1400022e1:	call   0x140003250
   1400022e6:	mov    DWORD PTR [rax],0x16
   1400022ec:	call   0x1400031e8
   1400022f1:	or     eax,0xffffffff
   1400022f4:	jmp    0x140002453
   1400022f9:	call   0x1400055bc
   1400022fe:	cmp    DWORD PTR [rbx+0x8],0x0
   140002302:	movsxd r12,eax
   140002305:	jge    0x14000230b
   140002307:	and    DWORD PTR [rbx+0x8],0x0
   14000230b:	xor    edx,edx
   14000230d:	mov    ecx,r12d
   140002310:	lea    r8d,[rdx+0x1]
   140002314:	call   0x1400063a8
   140002319:	mov    esi,eax
   14000231b:	test   eax,eax
   14000231d:	js     0x1400022f1
   14000231f:	mov    edx,DWORD PTR [rbx+0x18]
   140002322:	test   edx,0x108
   140002328:	jne    0x140002334
   14000232a:	sub    esi,DWORD PTR [rbx+0x8]
   14000232d:	mov    eax,esi
   14000232f:	jmp    0x140002453
   140002334:	mov    edi,DWORD PTR [rbx]
   140002336:	lea    r8,[rip+0x122e3]        # 0x140014620
   14000233d:	mov    ebp,edi
   14000233f:	sub    ebp,DWORD PTR [rbx+0x10]
   140002342:	test   dl,0x3
   140002345:	je     0x140002383
   140002347:	mov    rcx,r12
   14000234a:	mov    rax,r12
   14000234d:	sar    rax,0x5
   140002351:	and    ecx,0x1f
   140002354:	mov    rax,QWORD PTR [r8+rax*8]
   140002358:	imul   rcx,rcx,0x58
   14000235c:	test   BYTE PTR [rax+rcx*1+0x8],0x80
   140002361:	je     0x140002378
   140002363:	mov    rax,QWORD PTR [rbx+0x10]
   140002367:	jmp    0x140002373
   140002369:	cmp    BYTE PTR [rax],0xa
   14000236c:	jne    0x140002370
   14000236e:	inc    ebp
   140002370:	inc    rax
   140002373:	cmp    rax,QWORD PTR [rbx]
   140002376:	jb     0x140002369
   140002378:	test   esi,esi
   14000237a:	jne    0x140002397
   14000237c:	mov    eax,ebp
   14000237e:	jmp    0x140002453
   140002383:	test   dl,dl
   140002385:	js     0x140002378
   140002387:	call   0x140003250
   14000238c:	mov    DWORD PTR [rax],0x16
   140002392:	jmp    0x1400022f1
   140002397:	test   dl,0x1
   14000239a:	je     0x14000244f
   1400023a0:	cmp    DWORD PTR [rbx+0x8],0x0
   1400023a4:	jne    0x1400023ad
   1400023a6:	xor    ebp,ebp
   1400023a8:	jmp    0x14000244f
   1400023ad:	sub    edi,DWORD PTR [rbx+0x10]
   1400023b0:	mov    r13,r12
   1400023b3:	mov    r14,r12
   1400023b6:	add    edi,DWORD PTR [rbx+0x8]
   1400023b9:	sar    r14,0x5
   1400023bd:	and    r13d,0x1f
   1400023c1:	mov    rax,QWORD PTR [r8+r14*8]
   1400023c5:	imul   r13,r13,0x58
   1400023c9:	test   BYTE PTR [r13+rax*1+0x8],0x80
   1400023cf:	je     0x14000244d
   1400023d1:	xor    edx,edx
   1400023d3:	mov    ecx,r12d
   1400023d6:	lea    r8d,[rdx+0x2]
   1400023da:	call   0x1400063a8
   1400023df:	cmp    eax,esi
   1400023e1:	jne    0x140002406
   1400023e3:	mov    rax,QWORD PTR [rbx+0x10]
   1400023e7:	mov    ecx,edi
   1400023e9:	add    rcx,rax
   1400023ec:	jmp    0x1400023f8
   1400023ee:	cmp    BYTE PTR [rax],0xa
   1400023f1:	jne    0x1400023f5
   1400023f3:	inc    edi
   1400023f5:	inc    rax
   1400023f8:	cmp    rax,rcx
   1400023fb:	jb     0x1400023ee
   1400023fd:	test   DWORD PTR [rbx+0x18],0x2000
   140002404:	jmp    0x140002449
   140002406:	xor    r8d,r8d
   140002409:	mov    edx,esi
   14000240b:	mov    ecx,r12d
   14000240e:	call   0x1400063a8
   140002413:	test   eax,eax
   140002415:	js     0x1400022f1
   14000241b:	mov    eax,0x200
   140002420:	cmp    edi,eax
   140002422:	ja     0x140002435
   140002424:	test   BYTE PTR [rbx+0x18],0x8
   140002428:	je     0x140002435
   14000242a:	test   DWORD PTR [rbx+0x18],0x400
   140002431:	mov    edi,eax
   140002433:	je     0x140002438
   140002435:	mov    edi,DWORD PTR [rbx+0x24]
   140002438:	lea    rax,[rip+0x121e1]        # 0x140014620
   14000243f:	mov    rax,QWORD PTR [rax+r14*8]
   140002443:	test   BYTE PTR [r13+rax*1+0x8],0x4
   140002449:	je     0x14000244d
   14000244b:	inc    edi
   14000244d:	sub    esi,edi
   14000244f:	lea    eax,[rbp+rsi*1+0x0]
   140002453:	mov    rbx,QWORD PTR [rsp+0x40]
   140002458:	mov    rbp,QWORD PTR [rsp+0x48]
   14000245d:	mov    rsi,QWORD PTR [rsp+0x50]
   140002462:	mov    rdi,QWORD PTR [rsp+0x58]
   140002467:	add    rsp,0x20
   14000246b:	pop    r14
   14000246d:	pop    r13
   14000246f:	pop    r12
   140002471:	ret    
   140002472:	int3   
   140002473:	int3   
   140002474:	mov    QWORD PTR [rsp+0x10],rbx
   140002479:	mov    QWORD PTR [rsp+0x8],rcx
   14000247e:	push   rdi
   14000247f:	sub    rsp,0x20
   140002483:	mov    rbx,rcx
   140002486:	xor    eax,eax
   140002488:	test   rcx,rcx
   14000248b:	setne  al
   14000248e:	test   eax,eax
   140002490:	jne    0x1400024a7
   140002492:	call   0x140003250
   140002497:	mov    DWORD PTR [rax],0x16
   14000249d:	call   0x1400031e8
   1400024a2:	or     eax,0xffffffff
   1400024a5:	jmp    0x1400024c1
   1400024a7:	call   0x140001ce0
   1400024ac:	nop
   1400024ad:	mov    rcx,rbx
   1400024b0:	call   0x1400022bc
   1400024b5:	mov    edi,eax
   1400024b7:	mov    rcx,rbx
   1400024ba:	call   0x140001d78
   1400024bf:	mov    eax,edi
   1400024c1:	mov    rbx,QWORD PTR [rsp+0x38]
   1400024c6:	add    rsp,0x20
   1400024ca:	pop    rdi
   1400024cb:	ret    
   1400024cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400024d1:	mov    QWORD PTR [rsp+0x10],rbp
   1400024d6:	mov    QWORD PTR [rsp+0x18],rsi
   1400024db:	push   rdi
   1400024dc:	sub    rsp,0x20
   1400024e0:	mov    eax,DWORD PTR [rcx+0x18]
   1400024e3:	mov    edi,r8d
   1400024e6:	mov    esi,edx
   1400024e8:	mov    rbx,rcx
   1400024eb:	test   al,0x83
   1400024ed:	jne    0x1400024ff
   1400024ef:	call   0x140003250
   1400024f4:	mov    DWORD PTR [rax],0x16
   1400024fa:	or     eax,0xffffffff
   1400024fd:	jmp    0x140002569
   1400024ff:	and    eax,0xffffffef
   140002502:	xor    ebp,ebp
   140002504:	mov    DWORD PTR [rcx+0x18],eax
   140002507:	cmp    r8d,0x1
   14000250b:	jne    0x140002516
   14000250d:	call   0x1400022bc
   140002512:	mov    edi,ebp
   140002514:	add    esi,eax
   140002516:	mov    rcx,rbx
   140002519:	call   0x140004020
   14000251e:	mov    r11d,DWORD PTR [rbx+0x18]
   140002522:	test   r11b,r11b
   140002525:	jns    0x140002531
   140002527:	and    r11d,0xfffffffc
   14000252b:	mov    DWORD PTR [rbx+0x18],r11d
   14000252f:	jmp    0x14000254b
   140002531:	test   r11b,0x1
   140002535:	je     0x14000254b
   140002537:	test   r11b,0x8
   14000253b:	je     0x14000254b
   14000253d:	bt     r11d,0xa
   140002542:	jb     0x14000254b
   140002544:	mov    DWORD PTR [rbx+0x24],0x200
   14000254b:	mov    rcx,rbx
   14000254e:	call   0x1400055bc
   140002553:	mov    r8d,edi
   140002556:	mov    edx,esi
   140002558:	mov    ecx,eax
   14000255a:	call   0x1400063a8
   14000255f:	cmp    eax,0xffffffff
   140002562:	setne  bpl
   140002566:	lea    eax,[rbp-0x1]
   140002569:	mov    rbx,QWORD PTR [rsp+0x30]
   14000256e:	mov    rbp,QWORD PTR [rsp+0x38]
   140002573:	mov    rsi,QWORD PTR [rsp+0x40]
   140002578:	add    rsp,0x20
   14000257c:	pop    rdi
   14000257d:	ret    
   14000257e:	int3   
   14000257f:	int3   
   140002580:	mov    QWORD PTR [rsp+0x10],rbx
   140002585:	mov    QWORD PTR [rsp+0x18],rsi
   14000258a:	mov    QWORD PTR [rsp+0x8],rcx
   14000258f:	push   rdi
   140002590:	sub    rsp,0x20
   140002594:	mov    ebx,r8d
   140002597:	mov    esi,edx
   140002599:	mov    rdi,rcx
   14000259c:	xor    eax,eax
   14000259e:	test   rcx,rcx
   1400025a1:	setne  al
   1400025a4:	test   eax,eax
   1400025a6:	jne    0x1400025bd
   1400025a8:	call   0x140003250
   1400025ad:	mov    DWORD PTR [rax],0x16
   1400025b3:	call   0x1400031e8
   1400025b8:	or     eax,0xffffffff
   1400025bb:	jmp    0x1400025ea
   1400025bd:	test   ebx,ebx
   1400025bf:	je     0x1400025cb
   1400025c1:	cmp    ebx,0x1
   1400025c4:	je     0x1400025cb
   1400025c6:	cmp    ebx,0x2
   1400025c9:	jne    0x1400025a8
   1400025cb:	call   0x140001ce0
   1400025d0:	nop
   1400025d1:	mov    r8d,ebx
   1400025d4:	mov    edx,esi
   1400025d6:	mov    rcx,rdi
   1400025d9:	call   0x1400024cc
   1400025de:	mov    ebx,eax
   1400025e0:	mov    rcx,rdi
   1400025e3:	call   0x140001d78
   1400025e8:	mov    eax,ebx
   1400025ea:	mov    rbx,QWORD PTR [rsp+0x38]
   1400025ef:	mov    rsi,QWORD PTR [rsp+0x40]
   1400025f4:	add    rsp,0x20
   1400025f8:	pop    rdi
   1400025f9:	ret    
   1400025fa:	int3   
   1400025fb:	int3   
   1400025fc:	mov    QWORD PTR [rsp+0x8],rbx
   140002601:	push   rdi
   140002602:	sub    rsp,0x20
   140002606:	or     edi,0xffffffff
   140002609:	mov    rbx,rcx
   14000260c:	test   rcx,rcx
   14000260f:	jne    0x140002625
   140002611:	call   0x140003250
   140002616:	mov    DWORD PTR [rax],0x16
   14000261c:	call   0x1400031e8
   140002621:	or     eax,edi
   140002623:	jmp    0x14000266b
   140002625:	test   BYTE PTR [rcx+0x18],0x83
   140002629:	je     0x140002665
   14000262b:	call   0x140004020
   140002630:	mov    rcx,rbx
   140002633:	mov    edi,eax
   140002635:	call   0x140006608
   14000263a:	mov    rcx,rbx
   14000263d:	call   0x1400055bc
   140002642:	mov    ecx,eax
   140002644:	call   0x140006544
   140002649:	test   eax,eax
   14000264b:	jns    0x140002652
   14000264d:	or     edi,0xffffffff
   140002650:	jmp    0x140002665
   140002652:	mov    rcx,QWORD PTR [rbx+0x28]
   140002656:	test   rcx,rcx
   140002659:	je     0x140002665
   14000265b:	call   0x140001a94
   140002660:	and    QWORD PTR [rbx+0x28],0x0
   140002665:	and    DWORD PTR [rbx+0x18],0x0
   140002669:	mov    eax,edi
   14000266b:	mov    rbx,QWORD PTR [rsp+0x30]
   140002670:	add    rsp,0x20
   140002674:	pop    rdi
   140002675:	ret    
   140002676:	int3   
   140002677:	int3   
   140002678:	mov    QWORD PTR [rsp+0x10],rbx
   14000267d:	mov    QWORD PTR [rsp+0x8],rcx
   140002682:	push   rdi
   140002683:	sub    rsp,0x20
   140002687:	mov    rbx,rcx
   14000268a:	or     edi,0xffffffff
   14000268d:	xor    eax,eax
   14000268f:	test   rcx,rcx
   140002692:	setne  al
   140002695:	test   eax,eax
   140002697:	jne    0x1400026ad
   140002699:	call   0x140003250
   14000269e:	mov    DWORD PTR [rax],0x16
   1400026a4:	call   0x1400031e8
   1400026a9:	mov    eax,edi
   1400026ab:	jmp    0x1400026d3
   1400026ad:	test   BYTE PTR [rcx+0x18],0x40
   1400026b1:	je     0x1400026b9
   1400026b3:	and    DWORD PTR [rcx+0x18],0x0
   1400026b7:	jmp    0x1400026a9
   1400026b9:	call   0x140001ce0
   1400026be:	nop
   1400026bf:	mov    rcx,rbx
   1400026c2:	call   0x1400025fc
   1400026c7:	mov    edi,eax
   1400026c9:	mov    rcx,rbx
   1400026cc:	call   0x140001d78
   1400026d1:	jmp    0x1400026a9
   1400026d3:	mov    rbx,QWORD PTR [rsp+0x38]
   1400026d8:	add    rsp,0x20
   1400026dc:	pop    rdi
   1400026dd:	ret    
   1400026de:	int3   
   1400026df:	int3   
   1400026e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400026e5:	push   rdi
   1400026e6:	sub    rsp,0x30
   1400026ea:	mov    eax,0x5a4d
   1400026ef:	cmp    WORD PTR [rip+0xffffffffffffd90a],ax        # 0x140000000
   1400026f6:	je     0x1400026fc
   1400026f8:	xor    ebx,ebx
   1400026fa:	jmp    0x140002734
   1400026fc:	movsxd rax,DWORD PTR [rip+0xffffffffffffd939]        # 0x14000003c
   140002703:	lea    rcx,[rip+0xffffffffffffd8f6]        # 0x140000000
   14000270a:	add    rax,rcx
   14000270d:	cmp    DWORD PTR [rax],0x4550
   140002713:	jne    0x1400026f8
   140002715:	mov    ecx,0x20b
   14000271a:	cmp    WORD PTR [rax+0x18],cx
   14000271e:	jne    0x1400026f8
   140002720:	xor    ebx,ebx
   140002722:	cmp    DWORD PTR [rax+0x84],0xe
   140002729:	jbe    0x140002734
   14000272b:	cmp    DWORD PTR [rax+0xf8],ebx
   140002731:	setne  bl
   140002734:	mov    DWORD PTR [rsp+0x40],ebx
   140002738:	call   0x140003354
   14000273d:	test   eax,eax
   14000273f:	jne    0x140002763
   140002741:	cmp    DWORD PTR [rip+0x10c90],0x2        # 0x1400133d8
   140002748:	je     0x14000274f
   14000274a:	call   0x140003a94
   14000274f:	mov    ecx,0x1c
   140002754:	call   0x140003834
   140002759:	mov    ecx,0xff
   14000275e:	call   0x140003484
   140002763:	call   0x140007090
   140002768:	test   eax,eax
   14000276a:	jne    0x14000278e
   14000276c:	cmp    DWORD PTR [rip+0x10c65],0x2        # 0x1400133d8
   140002773:	je     0x14000277a
   140002775:	call   0x140003a94
   14000277a:	mov    ecx,0x10
   14000277f:	call   0x140003834
   140002784:	mov    ecx,0xff
   140002789:	call   0x140003484
   14000278e:	call   0x140006d58
   140002793:	nop
   140002794:	call   0x140003b14
   140002799:	test   eax,eax
   14000279b:	jns    0x1400027a7
   14000279d:	mov    ecx,0x1b
   1400027a2:	call   0x1400037e0
   1400027a7:	call   QWORD PTR [rip+0xb90b]        # 0x14000e0b8
   1400027ad:	mov    QWORD PTR [rip+0x120a4],rax        # 0x140014858
   1400027b4:	call   0x140006c64
   1400027b9:	mov    QWORD PTR [rip+0x10c08],rax        # 0x1400133c8
   1400027c0:	call   0x140006b6c
   1400027c5:	test   eax,eax
   1400027c7:	jns    0x1400027d3
   1400027c9:	mov    ecx,0x8
   1400027ce:	call   0x1400037e0
   1400027d3:	call   0x14000686c
   1400027d8:	test   eax,eax
   1400027da:	jns    0x1400027e6
   1400027dc:	mov    ecx,0x9
   1400027e1:	call   0x1400037e0
   1400027e6:	mov    ecx,0x1
   1400027eb:	call   0x140003568
   1400027f0:	test   eax,eax
   1400027f2:	je     0x1400027fb
   1400027f4:	mov    ecx,eax
   1400027f6:	call   0x1400037e0
   1400027fb:	mov    r8,QWORD PTR [rip+0x11176]        # 0x140013978
   140002802:	mov    QWORD PTR [rip+0x11177],r8        # 0x140013980
   140002809:	mov    rdx,QWORD PTR [rip+0x11158]        # 0x140013968
   140002810:	mov    ecx,DWORD PTR [rip+0x1114e]        # 0x140013964
   140002816:	call   0x140001900
   14000281b:	mov    edi,eax
   14000281d:	mov    DWORD PTR [rsp+0x20],eax
   140002821:	test   ebx,ebx
   140002823:	jne    0x14000282c
   140002825:	mov    ecx,eax
   140002827:	call   0x1400037a8
   14000282c:	call   0x1400037c0
   140002831:	jmp    0x14000284a
   140002833:	mov    edi,eax
   140002835:	cmp    DWORD PTR [rsp+0x40],0x0
   14000283a:	jne    0x140002844
   14000283c:	mov    ecx,eax
   14000283e:	call   0x1400037b4
   140002843:	int3   
   140002844:	call   0x1400037d0
   140002849:	nop
   14000284a:	mov    eax,edi
   14000284c:	mov    rbx,QWORD PTR [rsp+0x48]
   140002851:	add    rsp,0x30
   140002855:	pop    rdi
   140002856:	ret    
   140002857:	int3   
   140002858:	sub    rsp,0x28
   14000285c:	call   0x140007114
   140002861:	add    rsp,0x28
   140002865:	jmp    0x1400026e0
   14000286a:	int3   
   14000286b:	int3   
   14000286c:	mov    QWORD PTR [rsp+0x8],rcx
   140002871:	sub    rsp,0x88
   140002878:	lea    rcx,[rip+0x10c01]        # 0x140013480
   14000287f:	call   QWORD PTR [rip+0xb86b]        # 0x14000e0f0
   140002885:	mov    rax,QWORD PTR [rip+0x10cec]        # 0x140013578
   14000288c:	mov    QWORD PTR [rsp+0x58],rax
   140002891:	xor    r8d,r8d
   140002894:	lea    rdx,[rsp+0x60]
   140002899:	mov    rcx,QWORD PTR [rsp+0x58]
   14000289e:	call   0x14000d98e
   1400028a3:	mov    QWORD PTR [rsp+0x50],rax
   1400028a8:	cmp    QWORD PTR [rsp+0x50],0x0
   1400028ae:	je     0x1400028f1
   1400028b0:	mov    QWORD PTR [rsp+0x38],0x0
   1400028b9:	lea    rax,[rsp+0x48]
   1400028be:	mov    QWORD PTR [rsp+0x30],rax
   1400028c3:	lea    rax,[rsp+0x40]
   1400028c8:	mov    QWORD PTR [rsp+0x28],rax
   1400028cd:	lea    rax,[rip+0x10bac]        # 0x140013480
   1400028d4:	mov    QWORD PTR [rsp+0x20],rax
   1400028d9:	mov    r9,QWORD PTR [rsp+0x50]
   1400028de:	mov    r8,QWORD PTR [rsp+0x58]
   1400028e3:	mov    rdx,QWORD PTR [rsp+0x60]
   1400028e8:	xor    ecx,ecx
   1400028ea:	call   0x14000d988
   1400028ef:	jmp    0x140002913
   1400028f1:	mov    rax,QWORD PTR [rsp+0x88]
   1400028f9:	mov    QWORD PTR [rip+0x10c78],rax        # 0x140013578
   140002900:	lea    rax,[rsp+0x88]
   140002908:	add    rax,0x8
   14000290c:	mov    QWORD PTR [rip+0x10c05],rax        # 0x140013518
   140002913:	mov    rax,QWORD PTR [rip+0x10c5e]        # 0x140013578
   14000291a:	mov    QWORD PTR [rip+0x10acf],rax        # 0x1400133f0
   140002921:	mov    rax,QWORD PTR [rsp+0x90]
   140002929:	mov    QWORD PTR [rip+0x10bd0],rax        # 0x140013500
   140002930:	mov    DWORD PTR [rip+0x10aa6],0xc0000409        # 0x1400133e0
   14000293a:	mov    DWORD PTR [rip+0x10aa0],0x1        # 0x1400133e4
   140002944:	mov    rax,QWORD PTR [rip+0xfa7d]        # 0x1400123c8
   14000294b:	mov    QWORD PTR [rsp+0x68],rax
   140002950:	mov    rax,QWORD PTR [rip+0xfa79]        # 0x1400123d0
   140002957:	mov    QWORD PTR [rsp+0x70],rax
   14000295c:	call   QWORD PTR [rip+0xb776]        # 0x14000e0d8
   140002962:	mov    DWORD PTR [rip+0x10b10],eax        # 0x140013478
   140002968:	mov    ecx,0x1
   14000296d:	call   0x1400071c8
   140002972:	xor    ecx,ecx
   140002974:	call   QWORD PTR [rip+0xb756]        # 0x14000e0d0
   14000297a:	lea    rcx,[rip+0xb99f]        # 0x14000e320
   140002981:	call   QWORD PTR [rip+0xb741]        # 0x14000e0c8
   140002987:	cmp    DWORD PTR [rip+0x10aea],0x0        # 0x140013478
   14000298e:	jne    0x14000299a
   140002990:	mov    ecx,0x1
   140002995:	call   0x1400071c8
   14000299a:	call   QWORD PTR [rip+0xb680]        # 0x14000e020
   1400029a0:	mov    edx,0xc0000409
   1400029a5:	mov    rcx,rax
   1400029a8:	call   QWORD PTR [rip+0xb712]        # 0x14000e0c0
   1400029ae:	add    rsp,0x88
   1400029b5:	ret    
   1400029b6:	int3   
   1400029b7:	int3   
   1400029b8:	mov    r11,rsp
   1400029bb:	mov    QWORD PTR [r11+0x8],rbx
   1400029bf:	mov    QWORD PTR [r11+0x18],rbp
   1400029c3:	mov    QWORD PTR [r11+0x20],rsi
   1400029c7:	mov    QWORD PTR [r11+0x10],rdx
   1400029cb:	push   rdi
   1400029cc:	push   r12
   1400029ce:	push   r13
   1400029d0:	push   r14
   1400029d2:	push   r15
   1400029d4:	sub    rsp,0x40
   1400029d8:	mov    r15,QWORD PTR [r9+0x8]
   1400029dc:	mov    r14,QWORD PTR [r9]
   1400029df:	mov    eax,DWORD PTR [rcx+0x4]
   1400029e2:	mov    rdi,QWORD PTR [r9+0x38]
   1400029e6:	sub    r14,r15
   1400029e9:	mov    r12,r9
   1400029ec:	mov    r13,rdx
   1400029ef:	mov    rbp,rcx
   1400029f2:	test   al,0x66
   1400029f4:	jne    0x140002ae7
   1400029fa:	movsxd rsi,DWORD PTR [r9+0x48]
   1400029fe:	mov    QWORD PTR [r11-0x38],rcx
   140002a02:	mov    QWORD PTR [r11-0x30],r8
   140002a06:	mov    rax,rsi
   140002a09:	cmp    esi,DWORD PTR [rdi]
   140002a0b:	jae    0x140002b92
   140002a11:	add    rax,rax
   140002a14:	lea    rbx,[rdi+rax*8+0xc]
   140002a19:	mov    eax,DWORD PTR [rbx-0x8]
   140002a1c:	cmp    r14,rax
   140002a1f:	jb     0x140002acd
   140002a25:	mov    eax,DWORD PTR [rbx-0x4]
   140002a28:	cmp    r14,rax
   140002a2b:	jae    0x140002acd
   140002a31:	cmp    DWORD PTR [rbx+0x4],0x0
   140002a35:	je     0x140002acd
   140002a3b:	cmp    DWORD PTR [rbx],0x1
   140002a3e:	je     0x140002a59
   140002a40:	mov    eax,DWORD PTR [rbx]
   140002a42:	lea    rcx,[rsp+0x30]
   140002a47:	mov    rdx,r13
   140002a4a:	add    rax,r15
   140002a4d:	call   rax
   140002a4f:	test   eax,eax
   140002a51:	js     0x140002ae0
   140002a57:	jle    0x140002acd
   140002a59:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   140002a60:	jne    0x140002a8a
   140002a62:	cmp    QWORD PTR [rip+0x11de6],0x0        # 0x140014850
   140002a6a:	je     0x140002a8a
   140002a6c:	lea    rcx,[rip+0x11ddd]        # 0x140014850
   140002a73:	call   0x140007250
   140002a78:	test   eax,eax
   140002a7a:	je     0x140002a8a
   140002a7c:	mov    edx,0x1
   140002a81:	mov    rcx,rbp
   140002a84:	call   QWORD PTR [rip+0x11dc6]        # 0x140014850
   140002a8a:	mov    ecx,DWORD PTR [rbx+0x4]
   140002a8d:	mov    r8d,0x1
   140002a93:	mov    rdx,r13
   140002a96:	add    rcx,r15
   140002a99:	call   0x140003320
   140002a9e:	mov    rax,QWORD PTR [r12+0x40]
   140002aa3:	mov    edx,DWORD PTR [rbx+0x4]
   140002aa6:	movsxd r9,DWORD PTR [rbp+0x0]
   140002aaa:	mov    QWORD PTR [rsp+0x28],rax
   140002aaf:	mov    rax,QWORD PTR [r12+0x28]
   140002ab4:	add    rdx,r15
   140002ab7:	mov    r8,rbp
   140002aba:	mov    rcx,r13
   140002abd:	mov    QWORD PTR [rsp+0x20],rax
   140002ac2:	call   QWORD PTR [rip+0xb630]        # 0x14000e0f8
   140002ac8:	call   0x140003350
   140002acd:	inc    esi
   140002acf:	add    rbx,0x10
   140002ad3:	cmp    esi,DWORD PTR [rdi]
   140002ad5:	jae    0x140002b92
   140002adb:	jmp    0x140002a19
   140002ae0:	xor    eax,eax
   140002ae2:	jmp    0x140002b97
   140002ae7:	mov    r8,QWORD PTR [r9+0x20]
   140002aeb:	xor    ebp,ebp
   140002aed:	xor    r13d,r13d
   140002af0:	sub    r8,r15
   140002af3:	test   al,0x20
   140002af5:	je     0x140002b32
   140002af7:	xor    edx,edx
   140002af9:	cmp    DWORD PTR [rdi],edx
   140002afb:	jbe    0x140002b32
   140002afd:	lea    rcx,[rdi+0x8]
   140002b01:	mov    eax,DWORD PTR [rcx-0x4]
   140002b04:	cmp    r8,rax
   140002b07:	jb     0x140002b10
   140002b09:	mov    eax,DWORD PTR [rcx]
   140002b0b:	cmp    r8,rax
   140002b0e:	jbe    0x140002b1c
   140002b10:	inc    edx
   140002b12:	add    rcx,0x10
   140002b16:	cmp    edx,DWORD PTR [rdi]
   140002b18:	jae    0x140002b32
   140002b1a:	jmp    0x140002b01
   140002b1c:	mov    eax,edx
   140002b1e:	add    rax,rax
   140002b21:	mov    ecx,DWORD PTR [rdi+rax*8+0x10]
   140002b25:	test   ecx,ecx
   140002b27:	jne    0x140002b2f
   140002b29:	mov    ebp,DWORD PTR [rdi+rax*8+0xc]
   140002b2d:	jmp    0x140002b32
   140002b2f:	mov    r13d,ecx
   140002b32:	movsxd rsi,DWORD PTR [r9+0x48]
   140002b36:	mov    rbx,rsi
   140002b39:	cmp    esi,DWORD PTR [rdi]
   140002b3b:	jae    0x140002b92
   140002b3d:	inc    rbx
   140002b40:	shl    rbx,0x4
   140002b44:	add    rbx,rdi
   140002b47:	mov    eax,DWORD PTR [rbx-0xc]
   140002b4a:	cmp    r14,rax
   140002b4d:	jb     0x140002b88
   140002b4f:	mov    eax,DWORD PTR [rbx-0x8]
   140002b52:	cmp    r14,rax
   140002b55:	jae    0x140002b88
   140002b57:	test   r13d,r13d
   140002b5a:	je     0x140002b61
   140002b5c:	cmp    r13d,DWORD PTR [rbx]
   140002b5f:	je     0x140002b92
   140002b61:	test   ebp,ebp
   140002b63:	je     0x140002b6a
   140002b65:	cmp    ebp,DWORD PTR [rbx-0x4]
   140002b68:	je     0x140002b92
   140002b6a:	cmp    DWORD PTR [rbx],0x0
   140002b6d:	jne    0x140002b88
   140002b6f:	mov    rdx,QWORD PTR [rsp+0x78]
   140002b74:	lea    eax,[rsi+0x1]
   140002b77:	mov    cl,0x1
   140002b79:	mov    DWORD PTR [r12+0x48],eax
   140002b7e:	mov    r8d,DWORD PTR [rbx-0x4]
   140002b82:	add    r8,r15
   140002b85:	call   r8
   140002b88:	inc    esi
   140002b8a:	add    rbx,0x10
   140002b8e:	cmp    esi,DWORD PTR [rdi]
   140002b90:	jb     0x140002b47
   140002b92:	mov    eax,0x1
   140002b97:	lea    r11,[rsp+0x40]
   140002b9c:	mov    rbx,QWORD PTR [r11+0x30]
   140002ba0:	mov    rbp,QWORD PTR [r11+0x40]
   140002ba4:	mov    rsi,QWORD PTR [r11+0x48]
   140002ba8:	mov    rsp,r11
   140002bab:	pop    r15
   140002bad:	pop    r14
   140002baf:	pop    r13
   140002bb1:	pop    r12
   140002bb3:	pop    rdi
   140002bb4:	ret    
   140002bb5:	int3   
   140002bb6:	int3   
   140002bb7:	int3   
   140002bb8:	mov    QWORD PTR [rsp+0x8],rbx
   140002bbd:	mov    QWORD PTR [rsp+0x18],rbp
   140002bc2:	mov    QWORD PTR [rsp+0x20],rsi
   140002bc7:	push   rdi
   140002bc8:	push   r12
   140002bca:	push   r13
   140002bcc:	push   r14
   140002bce:	push   r15
   140002bd0:	sub    rsp,0x30
   140002bd4:	mov    esi,DWORD PTR [rip+0x1176e]        # 0x140014348
   140002bda:	xor    r14d,r14d
   140002bdd:	mov    rbp,r9
   140002be0:	lea    r15d,[r14+0x20]
   140002be4:	mov    r12d,r8d
   140002be7:	mov    rbx,rdx
   140002bea:	mov    r13,rcx
   140002bed:	mov    r9d,r14d
   140002bf0:	mov    r10d,r14d
   140002bf3:	mov    r11d,r14d
   140002bf6:	cmp    WORD PTR [rdx],r15w
   140002bfa:	jne    0x140002c06
   140002bfc:	add    rbx,0x2
   140002c00:	cmp    WORD PTR [rbx],r15w
   140002c04:	je     0x140002bfc
   140002c06:	movzx  eax,WORD PTR [rbx]
   140002c09:	mov    r8d,0x1
   140002c0f:	cmp    eax,0x61
   140002c12:	je     0x140002c44
   140002c14:	cmp    eax,0x72
   140002c17:	je     0x140002c3c
   140002c19:	cmp    eax,0x77
   140002c1c:	je     0x140002c35
   140002c1e:	call   0x140003250
   140002c23:	mov    DWORD PTR [rax],0x16
   140002c29:	call   0x1400031e8
   140002c2e:	xor    eax,eax
   140002c30:	jmp    0x140002e78
   140002c35:	mov    edi,0x301
   140002c3a:	jmp    0x140002c49
   140002c3c:	mov    edi,r14d
   140002c3f:	or     esi,r8d
   140002c42:	jmp    0x140002c4c
   140002c44:	mov    edi,0x109
   140002c49:	or     esi,0x2
   140002c4c:	add    rbx,0x2
   140002c50:	mov    edx,r8d
   140002c53:	movzx  eax,WORD PTR [rbx]
   140002c56:	test   ax,ax
   140002c59:	je     0x140002e22
   140002c5f:	test   edx,edx
   140002c61:	je     0x140002d5b
   140002c67:	movzx  ecx,ax
   140002c6a:	cmp    ecx,0x53
   140002c6d:	jg     0x140002ce8
   140002c6f:	je     0x140002cdb
   140002c71:	sub    ecx,r15d
   140002c74:	je     0x140002d4b
   140002c7a:	sub    ecx,0xb
   140002c7d:	je     0x140002cc6
   140002c7f:	dec    ecx
   140002c81:	je     0x140002cc1
   140002c83:	sub    ecx,0x18
   140002c86:	je     0x140002caf
   140002c88:	sub    ecx,0xa
   140002c8b:	je     0x140002ca6
   140002c8d:	cmp    ecx,0x4
   140002c90:	jne    0x140002c1e
   140002c92:	test   r10d,r10d
   140002c95:	jne    0x140002d42
   140002c9b:	mov    r10d,r8d
   140002c9e:	or     edi,0x10
   140002ca1:	jmp    0x140002d4b
   140002ca6:	bts    edi,0x7
   140002caa:	jmp    0x140002d4b
   140002caf:	test   dil,0x40
   140002cb3:	jne    0x140002d42
   140002cb9:	or     edi,0x40
   140002cbc:	jmp    0x140002d4b
   140002cc1:	mov    r11d,r8d
   140002cc4:	jmp    0x140002d42
   140002cc6:	test   dil,0x2
   140002cca:	jne    0x140002d42
   140002ccc:	and    edi,0xfffffffe
   140002ccf:	and    esi,0xfffffffc
   140002cd2:	or     edi,0x2
   140002cd5:	bts    esi,0x7
   140002cd9:	jmp    0x140002d4b
   140002cdb:	test   r10d,r10d
   140002cde:	jne    0x140002d42
   140002ce0:	mov    r10d,r8d
   140002ce3:	or     edi,r15d
   140002ce6:	jmp    0x140002d4b
   140002ce8:	sub    ecx,0x54
   140002ceb:	je     0x140002d3c
   140002ced:	sub    ecx,0xe
   140002cf0:	je     0x140002d2e
   140002cf2:	dec    ecx
   140002cf4:	je     0x140002d20
   140002cf6:	sub    ecx,0xb
   140002cf9:	je     0x140002d12
   140002cfb:	cmp    ecx,0x6
   140002cfe:	jne    0x140002c1e
   140002d04:	test   edi,0xc000
   140002d0a:	jne    0x140002d42
   140002d0c:	bts    edi,0xe
   140002d10:	jmp    0x140002d4b
   140002d12:	test   r9d,r9d
   140002d15:	jne    0x140002d42
   140002d17:	mov    r9d,r8d
   140002d1a:	btr    esi,0xe
   140002d1e:	jmp    0x140002d4b
   140002d20:	test   r9d,r9d
   140002d23:	jne    0x140002d42
   140002d25:	mov    r9d,r8d
   140002d28:	bts    esi,0xe
   140002d2c:	jmp    0x140002d4b
   140002d2e:	test   edi,0xc000
   140002d34:	jne    0x140002d42
   140002d36:	bts    edi,0xf
   140002d3a:	jmp    0x140002d4b
   140002d3c:	bt     edi,0xc
   140002d40:	jae    0x140002d47
   140002d42:	mov    edx,r14d
   140002d45:	jmp    0x140002d4b
   140002d47:	bts    edi,0xc
   140002d4b:	add    rbx,0x2
   140002d4f:	movzx  eax,WORD PTR [rbx]
   140002d52:	test   ax,ax
   140002d55:	jne    0x140002c5f
   140002d5b:	test   r11d,r11d
   140002d5e:	je     0x140002e22
   140002d64:	jmp    0x140002d6a
   140002d66:	add    rbx,0x2
   140002d6a:	cmp    WORD PTR [rbx],r15w
   140002d6e:	je     0x140002d66
   140002d70:	lea    rcx,[rip+0xb5b9]        # 0x14000e330
   140002d77:	mov    r8d,0x3
   140002d7d:	mov    rdx,rbx
   140002d80:	call   0x140007cf4
   140002d85:	test   eax,eax
   140002d87:	jne    0x140002c1e
   140002d8d:	add    rbx,0x6
   140002d91:	jmp    0x140002d97
   140002d93:	add    rbx,0x2
   140002d97:	cmp    WORD PTR [rbx],r15w
   140002d9b:	je     0x140002d93
   140002d9d:	cmp    WORD PTR [rbx],0x3d
   140002da1:	jne    0x140002c1e
   140002da7:	add    rbx,0x2
   140002dab:	cmp    WORD PTR [rbx],r15w
   140002daf:	je     0x140002da7
   140002db1:	lea    rdx,[rip+0xb580]        # 0x14000e338
   140002db8:	mov    r8d,0x5
   140002dbe:	mov    rcx,rbx
   140002dc1:	call   0x140007c5c
   140002dc6:	test   eax,eax
   140002dc8:	jne    0x140002dd4
   140002dca:	add    rbx,0xa
   140002dce:	bts    edi,0x12
   140002dd2:	jmp    0x140002e22
   140002dd4:	lea    rdx,[rip+0xb56d]        # 0x14000e348
   140002ddb:	mov    r8d,0x8
   140002de1:	mov    rcx,rbx
   140002de4:	call   0x140007c5c
   140002de9:	test   eax,eax
   140002deb:	jne    0x140002df7
   140002ded:	add    rbx,0x10
   140002df1:	bts    edi,0x11
   140002df5:	jmp    0x140002e22
   140002df7:	lea    rdx,[rip+0xb562]        # 0x14000e360
   140002dfe:	mov    r8d,0x7
   140002e04:	mov    rcx,rbx
   140002e07:	call   0x140007c5c
   140002e0c:	test   eax,eax
   140002e0e:	jne    0x140002c1e
   140002e14:	add    rbx,0xe
   140002e18:	bts    edi,0x10
   140002e1c:	jmp    0x140002e22
   140002e1e:	add    rbx,0x2
   140002e22:	cmp    WORD PTR [rbx],r15w
   140002e26:	je     0x140002e1e
   140002e28:	cmp    WORD PTR [rbx],r14w
   140002e2c:	jne    0x140002c1e
   140002e32:	lea    rcx,[rsp+0x68]
   140002e37:	mov    r9d,r12d
   140002e3a:	mov    r8d,edi
   140002e3d:	mov    rdx,r13
   140002e40:	mov    DWORD PTR [rsp+0x20],0x180
   140002e48:	call   0x140007b10
   140002e4d:	test   eax,eax
   140002e4f:	jne    0x140002c2e
   140002e55:	inc    DWORD PTR [rip+0x10565]        # 0x1400133c0
   140002e5b:	mov    eax,DWORD PTR [rsp+0x68]
   140002e5f:	mov    DWORD PTR [rbp+0x18],esi
   140002e62:	mov    DWORD PTR [rbp+0x1c],eax
   140002e65:	mov    DWORD PTR [rbp+0x8],r14d
   140002e69:	mov    QWORD PTR [rbp+0x0],r14
   140002e6d:	mov    rax,rbp
   140002e70:	mov    QWORD PTR [rbp+0x10],r14
   140002e74:	mov    QWORD PTR [rbp+0x28],r14
   140002e78:	mov    rbx,QWORD PTR [rsp+0x60]
   140002e7d:	mov    rbp,QWORD PTR [rsp+0x70]
   140002e82:	mov    rsi,QWORD PTR [rsp+0x78]
   140002e87:	add    rsp,0x30
   140002e8b:	pop    r15
   140002e8d:	pop    r14
   140002e8f:	pop    r13
   140002e91:	pop    r12
   140002e93:	pop    rdi
   140002e94:	ret    
   140002e95:	int3   
   140002e96:	int3   
   140002e97:	int3   
   140002e98:	mov    QWORD PTR [rsp+0x8],rbx
   140002e9d:	mov    QWORD PTR [rsp+0x10],rsi
   140002ea2:	push   rdi
   140002ea3:	sub    rsp,0x30
   140002ea7:	xor    ebx,ebx
   140002ea9:	lea    ecx,[rbx+0x1]
   140002eac:	call   0x1400043ec
   140002eb1:	nop
   140002eb2:	xor    edi,edi
   140002eb4:	mov    DWORD PTR [rsp+0x20],edi
   140002eb8:	cmp    edi,DWORD PTR [rip+0x129c2]        # 0x140015880
   140002ebe:	jge    0x140002fb0
   140002ec4:	movsxd rsi,edi
   140002ec7:	mov    rax,QWORD PTR [rip+0x11992]        # 0x140014860
   140002ece:	cmp    QWORD PTR [rax+rsi*8],0x0
   140002ed3:	je     0x140002f3b
   140002ed5:	mov    rax,QWORD PTR [rax+rsi*8]
   140002ed9:	test   BYTE PTR [rax+0x18],0x83
   140002edd:	jne    0x140002f34
   140002edf:	test   DWORD PTR [rax+0x18],0x8000
   140002ee6:	jne    0x140002f34
   140002ee8:	lea    eax,[rdi-0x3]
   140002eeb:	cmp    eax,0x10
   140002eee:	ja     0x140002f00
   140002ef0:	lea    ecx,[rdi+0x10]
   140002ef3:	call   0x140004304
   140002ef8:	test   eax,eax
   140002efa:	je     0x140002fb0
   140002f00:	mov    rdx,QWORD PTR [rip+0x11959]        # 0x140014860
   140002f07:	mov    rdx,QWORD PTR [rdx+rsi*8]
   140002f0b:	mov    ecx,edi
   140002f0d:	call   0x140001d44
   140002f12:	mov    r11,QWORD PTR [rip+0x11947]        # 0x140014860
   140002f19:	mov    rax,QWORD PTR [r11+rsi*8]
   140002f1d:	test   BYTE PTR [rax+0x18],0x83
   140002f21:	je     0x140002f2f
   140002f23:	mov    rdx,rax
   140002f26:	mov    ecx,edi
   140002f28:	call   0x140001dc4
   140002f2d:	jmp    0x140002f34
   140002f2f:	mov    rbx,rax
   140002f32:	jmp    0x140002fb0
   140002f34:	inc    edi
   140002f36:	jmp    0x140002eb4
   140002f3b:	mov    ecx,0x58
   140002f40:	call   0x140003de8
   140002f45:	mov    rcx,rax
   140002f48:	movsxd rdi,edi
   140002f4b:	mov    rax,QWORD PTR [rip+0x1190e]        # 0x140014860
   140002f52:	mov    QWORD PTR [rax+rdi*8],rcx
   140002f56:	test   rcx,rcx
   140002f59:	je     0x140002fb0
   140002f5b:	add    rcx,0x30
   140002f5f:	mov    edx,0xfa0
   140002f64:	call   QWORD PTR [rip+0xb196]        # 0x14000e100
   140002f6a:	test   eax,eax
   140002f6c:	jne    0x140002f8c
   140002f6e:	mov    rcx,QWORD PTR [rip+0x118eb]        # 0x140014860
   140002f75:	mov    rcx,QWORD PTR [rcx+rdi*8]
   140002f79:	call   0x140001a94
   140002f7e:	mov    r11,QWORD PTR [rip+0x118db]        # 0x140014860
   140002f85:	and    QWORD PTR [r11+rdi*8],0x0
   140002f8a:	jmp    0x140002fb0
   140002f8c:	mov    rax,QWORD PTR [rip+0x118cd]        # 0x140014860
   140002f93:	mov    rcx,QWORD PTR [rax+rdi*8]
   140002f97:	add    rcx,0x30
   140002f9b:	call   QWORD PTR [rip+0xb0ff]        # 0x14000e0a0
   140002fa1:	mov    r11,QWORD PTR [rip+0x118b8]        # 0x140014860
   140002fa8:	mov    rbx,QWORD PTR [r11+rdi*8]
   140002fac:	and    DWORD PTR [rbx+0x18],0x0
   140002fb0:	test   rbx,rbx
   140002fb3:	je     0x140002fd2
   140002fb5:	and    DWORD PTR [rbx+0x18],0x8000
   140002fbc:	and    DWORD PTR [rbx+0x8],0x0
   140002fc0:	and    QWORD PTR [rbx+0x10],0x0
   140002fc5:	and    QWORD PTR [rbx],0x0
   140002fc9:	and    QWORD PTR [rbx+0x28],0x0
   140002fce:	or     DWORD PTR [rbx+0x1c],0xffffffff
   140002fd2:	mov    ecx,0x1
   140002fd7:	call   0x1400042ec
   140002fdc:	mov    rax,rbx
   140002fdf:	mov    rbx,QWORD PTR [rsp+0x40]
   140002fe4:	mov    rsi,QWORD PTR [rsp+0x48]
   140002fe9:	add    rsp,0x30
   140002fed:	pop    rdi
   140002fee:	ret    
   140002fef:	int3   
   140002ff0:	mov    QWORD PTR [rip+0x10959],rcx        # 0x140013950
   140002ff7:	ret    
   140002ff8:	mov    QWORD PTR [rsp+0x10],rbx
   140002ffd:	mov    QWORD PTR [rsp+0x18],rsi
   140003002:	push   rbp
   140003003:	push   rdi
   140003004:	push   r12
   140003006:	lea    rbp,[rsp-0x4f0]
   14000300e:	sub    rsp,0x5f0
   140003015:	mov    rax,QWORD PTR [rip+0xf3ac]        # 0x1400123c8
   14000301c:	xor    rax,rsp
   14000301f:	mov    QWORD PTR [rbp+0x4e0],rax
   140003026:	mov    edi,r8d
   140003029:	mov    esi,edx
   14000302b:	mov    ebx,ecx
   14000302d:	cmp    ecx,0xffffffff
   140003030:	je     0x140003037
   140003032:	call   0x1400071c8
   140003037:	and    DWORD PTR [rsp+0x70],0x0
   14000303c:	lea    rcx,[rsp+0x74]
   140003041:	xor    edx,edx
   140003043:	mov    r8d,0x94
   140003049:	call   0x1400048d0
   14000304e:	lea    r11,[rsp+0x70]
   140003053:	lea    rax,[rbp+0x10]
   140003057:	lea    rcx,[rbp+0x10]
   14000305b:	mov    QWORD PTR [rsp+0x48],r11
   140003060:	mov    QWORD PTR [rsp+0x50],rax
   140003065:	call   QWORD PTR [rip+0xb085]        # 0x14000e0f0
   14000306b:	mov    r12,QWORD PTR [rbp+0x108]
   140003072:	lea    rdx,[rsp+0x40]
   140003077:	mov    rcx,r12
   14000307a:	xor    r8d,r8d
   14000307d:	call   0x14000d98e
   140003082:	test   rax,rax
   140003085:	je     0x1400030be
   140003087:	and    QWORD PTR [rsp+0x38],0x0
   14000308d:	mov    rdx,QWORD PTR [rsp+0x40]
   140003092:	lea    rcx,[rsp+0x60]
   140003097:	mov    QWORD PTR [rsp+0x30],rcx
   14000309c:	lea    rcx,[rsp+0x58]
   1400030a1:	mov    r9,rax
   1400030a4:	mov    QWORD PTR [rsp+0x28],rcx
   1400030a9:	lea    rcx,[rbp+0x10]
   1400030ad:	mov    r8,r12
   1400030b0:	mov    QWORD PTR [rsp+0x20],rcx
   1400030b5:	xor    ecx,ecx
   1400030b7:	call   0x14000d988
   1400030bc:	jmp    0x1400030da
   1400030be:	mov    rax,QWORD PTR [rbp+0x508]
   1400030c5:	mov    QWORD PTR [rbp+0x108],rax
   1400030cc:	lea    rax,[rbp+0x508]
   1400030d3:	mov    QWORD PTR [rbp+0xa8],rax
   1400030da:	mov    rax,QWORD PTR [rbp+0x508]
   1400030e1:	mov    DWORD PTR [rsp+0x70],esi
   1400030e5:	mov    DWORD PTR [rsp+0x74],edi
   1400030e9:	mov    QWORD PTR [rbp-0x80],rax
   1400030ed:	call   QWORD PTR [rip+0xafe5]        # 0x14000e0d8
   1400030f3:	xor    ecx,ecx
   1400030f5:	mov    edi,eax
   1400030f7:	call   QWORD PTR [rip+0xafd3]        # 0x14000e0d0
   1400030fd:	lea    rcx,[rsp+0x48]
   140003102:	call   QWORD PTR [rip+0xafc0]        # 0x14000e0c8
   140003108:	test   eax,eax
   14000310a:	jne    0x14000311c
   14000310c:	test   edi,edi
   14000310e:	jne    0x14000311c
   140003110:	cmp    ebx,0xffffffff
   140003113:	je     0x14000311c
   140003115:	mov    ecx,ebx
   140003117:	call   0x1400071c8
   14000311c:	mov    rcx,QWORD PTR [rbp+0x4e0]
   140003123:	xor    rcx,rsp
   140003126:	call   0x140001920
   14000312b:	lea    r11,[rsp+0x5f0]
   140003133:	mov    rbx,QWORD PTR [r11+0x28]
   140003137:	mov    rsi,QWORD PTR [r11+0x30]
   14000313b:	mov    rsp,r11
   14000313e:	pop    r12
   140003140:	pop    rdi
   140003141:	pop    rbp
   140003142:	ret    
   140003143:	int3   
   140003144:	sub    rsp,0x28
   140003148:	mov    r8d,0x1
   14000314e:	mov    edx,0xc0000417
   140003153:	lea    ecx,[r8+0x1]
   140003157:	call   0x140002ff8
   14000315c:	call   QWORD PTR [rip+0xaebe]        # 0x14000e020
   140003162:	mov    edx,0xc0000417
   140003167:	mov    rcx,rax
   14000316a:	add    rsp,0x28
   14000316e:	rex.W jmp QWORD PTR [rip+0xaf4b]        # 0x14000e0c0
   140003175:	int3   
   140003176:	int3   
   140003177:	int3   
   140003178:	mov    QWORD PTR [rsp+0x8],rbx
   14000317d:	mov    QWORD PTR [rsp+0x10],rbp
   140003182:	mov    QWORD PTR [rsp+0x18],rsi
   140003187:	push   rdi
   140003188:	sub    rsp,0x30
   14000318c:	mov    rbp,rcx
   14000318f:	mov    rcx,QWORD PTR [rip+0x107ba]        # 0x140013950
   140003196:	mov    ebx,r9d
   140003199:	mov    rdi,r8
   14000319c:	mov    rsi,rdx
   14000319f:	call   QWORD PTR [rip+0xaf6b]        # 0x14000e110
   1400031a5:	mov    r9d,ebx
   1400031a8:	mov    r8,rdi
   1400031ab:	mov    rdx,rsi
   1400031ae:	mov    rcx,rbp
   1400031b1:	test   rax,rax
   1400031b4:	je     0x1400031d7
   1400031b6:	mov    r10,QWORD PTR [rsp+0x60]
   1400031bb:	mov    QWORD PTR [rsp+0x20],r10
   1400031c0:	call   rax
   1400031c2:	mov    rbx,QWORD PTR [rsp+0x40]
   1400031c7:	mov    rbp,QWORD PTR [rsp+0x48]
   1400031cc:	mov    rsi,QWORD PTR [rsp+0x50]
   1400031d1:	add    rsp,0x30
   1400031d5:	pop    rdi
   1400031d6:	ret    
   1400031d7:	mov    rax,QWORD PTR [rsp+0x60]
   1400031dc:	mov    QWORD PTR [rsp+0x20],rax
   1400031e1:	call   0x140003144
   1400031e6:	int3   
   1400031e7:	int3   
   1400031e8:	sub    rsp,0x38
   1400031ec:	and    QWORD PTR [rsp+0x20],0x0
   1400031f2:	xor    r9d,r9d
   1400031f5:	xor    r8d,r8d
   1400031f8:	xor    edx,edx
   1400031fa:	xor    ecx,ecx
   1400031fc:	call   0x140003178
   140003201:	add    rsp,0x38
   140003205:	ret    
   140003206:	int3   
   140003207:	int3   
   140003208:	lea    r9,[rip+0xf1d1]        # 0x1400123e0
   14000320f:	xor    eax,eax
   140003211:	mov    rdx,r9
   140003214:	lea    r8d,[rax+0x8]
   140003218:	cmp    ecx,DWORD PTR [rdx]
   14000321a:	je     0x140003247
   14000321c:	inc    eax
   14000321e:	add    rdx,r8
   140003221:	cmp    eax,0x2d
   140003224:	jb     0x140003218
   140003226:	lea    eax,[rcx-0x13]
   140003229:	cmp    eax,0x11
   14000322c:	ja     0x140003234
   14000322e:	mov    eax,0xd
   140003233:	ret    
   140003234:	add    ecx,0xffffff44
   14000323a:	mov    eax,0x16
   14000323f:	cmp    ecx,0xe
   140003242:	cmovbe eax,r8d
   140003246:	ret    
   140003247:	cdqe   
   140003249:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   14000324e:	ret    
   14000324f:	int3   
   140003250:	sub    rsp,0x28
   140003254:	call   0x140006eb4
   140003259:	test   rax,rax
   14000325c:	jne    0x140003267
   14000325e:	lea    rax,[rip+0xf2e3]        # 0x140012548
   140003265:	jmp    0x14000326b
   140003267:	add    rax,0x10
   14000326b:	add    rsp,0x28
   14000326f:	ret    
   140003270:	sub    rsp,0x28
   140003274:	call   0x140006eb4
   140003279:	test   rax,rax
   14000327c:	jne    0x140003287
   14000327e:	lea    rax,[rip+0xf2c7]        # 0x14001254c
   140003285:	jmp    0x14000328b
   140003287:	add    rax,0x14
   14000328b:	add    rsp,0x28
   14000328f:	ret    
   140003290:	rex push rbx
   140003292:	sub    rsp,0x20
   140003296:	mov    ebx,ecx
   140003298:	call   0x140006eb4
   14000329d:	test   rax,rax
   1400032a0:	jne    0x1400032ab
   1400032a2:	lea    rax,[rip+0xf2a3]        # 0x14001254c
   1400032a9:	jmp    0x1400032af
   1400032ab:	add    rax,0x14
   1400032af:	mov    DWORD PTR [rax],ebx
   1400032b1:	call   0x140006eb4
   1400032b6:	lea    r10,[rip+0xf28b]        # 0x140012548
   1400032bd:	test   rax,rax
   1400032c0:	je     0x1400032c6
   1400032c2:	lea    r10,[rax+0x10]
   1400032c6:	mov    ecx,ebx
   1400032c8:	call   0x140003208
   1400032cd:	mov    DWORD PTR [r10],eax
   1400032d0:	add    rsp,0x20
   1400032d4:	pop    rbx
   1400032d5:	ret    
   1400032d6:	int3   
   1400032d7:	int3   
   1400032d8:	int3   
   1400032d9:	int3   
   1400032da:	int3   
   1400032db:	int3   
   1400032dc:	int3   
   1400032dd:	int3   
   1400032de:	int3   
   1400032df:	int3   
   1400032e0:	int3   
   1400032e1:	int3   
   1400032e2:	int3   
   1400032e3:	int3   
   1400032e4:	int3   
   1400032e5:	int3   
   1400032e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400032f0:	sub    rsp,0x4d8
   1400032f7:	xor    r8,r8
   1400032fa:	xor    r9,r9
   1400032fd:	mov    QWORD PTR [rsp+0x20],rsp
   140003302:	mov    QWORD PTR [rsp+0x28],r8
   140003307:	call   0x14000d994
   14000330c:	add    rsp,0x4d8
   140003313:	ret    
   140003314:	int3   
   140003315:	int3   
   140003316:	int3   
   140003317:	int3   
   140003318:	int3   
   140003319:	int3   
   14000331a:	nop    WORD PTR [rax+rax*1+0x0]
   140003320:	mov    QWORD PTR [rsp+0x8],rcx
   140003325:	mov    QWORD PTR [rsp+0x18],rdx
   14000332a:	mov    DWORD PTR [rsp+0x10],r8d
   14000332f:	mov    r9,0x19930520
   140003336:	jmp    0x140003340
   140003338:	int3   
   140003339:	int3   
   14000333a:	int3   
   14000333b:	int3   
   14000333c:	int3   
   14000333d:	int3   
   14000333e:	xchg   ax,ax
   140003340:	ret    
   140003341:	int3   
   140003342:	int3   
   140003343:	int3   
   140003344:	int3   
   140003345:	int3   
   140003346:	int3   
   140003347:	nop    WORD PTR [rax+rax*1+0x0]
   140003350:	ret    
   140003351:	int3   
   140003352:	int3   
   140003353:	int3   
   140003354:	sub    rsp,0x28
   140003358:	xor    r8d,r8d
   14000335b:	mov    edx,0x1000
   140003360:	xor    ecx,ecx
   140003362:	mov    DWORD PTR [rsp+0x30],0x2
   14000336a:	call   QWORD PTR [rip+0xadb8]        # 0x14000e128
   140003370:	mov    QWORD PTR [rip+0x105e1],rax        # 0x140013958
   140003377:	test   rax,rax
   14000337a:	je     0x1400033a5
   14000337c:	call   QWORD PTR [rip+0xad9e]        # 0x14000e120
   140003382:	cmp    al,0x6
   140003384:	jae    0x1400033a0
   140003386:	mov    rcx,QWORD PTR [rip+0x105cb]        # 0x140013958
   14000338d:	lea    r8,[rsp+0x30]
   140003392:	mov    r9d,0x4
   140003398:	xor    edx,edx
   14000339a:	call   QWORD PTR [rip+0xad78]        # 0x14000e118
   1400033a0:	mov    eax,0x1
   1400033a5:	add    rsp,0x28
   1400033a9:	ret    
   1400033aa:	int3   
   1400033ab:	int3   
   1400033ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400033b1:	push   rdi
   1400033b2:	sub    rsp,0x20
   1400033b6:	mov    rbx,r8
   1400033b9:	mov    rdi,rdx
   1400033bc:	test   rcx,rcx
   1400033bf:	je     0x1400033de
   1400033c1:	xor    edx,edx
   1400033c3:	lea    rax,[rdx-0x20]
   1400033c7:	div    rcx
   1400033ca:	cmp    rax,rdi
   1400033cd:	jae    0x1400033de
   1400033cf:	call   0x140003250
   1400033d4:	mov    DWORD PTR [rax],0xc
   1400033da:	xor    eax,eax
   1400033dc:	jmp    0x14000343b
   1400033de:	imul   rdi,rcx
   1400033e2:	mov    eax,0x1
   1400033e7:	test   rdi,rdi
   1400033ea:	cmove  rdi,rax
   1400033ee:	xor    eax,eax
   1400033f0:	cmp    rdi,0xffffffffffffffe0
   1400033f4:	ja     0x14000340e
   1400033f6:	mov    rcx,QWORD PTR [rip+0x1055b]        # 0x140013958
   1400033fd:	lea    edx,[rax+0x8]
   140003400:	mov    r8,rdi
   140003403:	call   QWORD PTR [rip+0xac8f]        # 0x14000e098
   140003409:	test   rax,rax
   14000340c:	jne    0x14000343b
   14000340e:	cmp    DWORD PTR [rip+0x10bdb],0x0        # 0x140013ff0
   140003415:	je     0x140003430
   140003417:	mov    rcx,rdi
   14000341a:	call   0x140003ae0
   14000341f:	test   eax,eax
   140003421:	jne    0x1400033ee
   140003423:	test   rbx,rbx
   140003426:	je     0x1400033da
   140003428:	mov    DWORD PTR [rbx],0xc
   14000342e:	jmp    0x1400033da
   140003430:	test   rbx,rbx
   140003433:	je     0x14000343b
   140003435:	mov    DWORD PTR [rbx],0xc
   14000343b:	mov    rbx,QWORD PTR [rsp+0x30]
   140003440:	add    rsp,0x20
   140003444:	pop    rdi
   140003445:	ret    
   140003446:	int3   
   140003447:	int3   
   140003448:	rex push rbx
   14000344a:	sub    rsp,0x20
   14000344e:	mov    ebx,ecx
   140003450:	lea    rcx,[rip+0xaf29]        # 0x14000e380
   140003457:	call   QWORD PTR [rip+0xacdb]        # 0x14000e138
   14000345d:	test   rax,rax
   140003460:	je     0x14000347b
   140003462:	lea    rdx,[rip+0xaf07]        # 0x14000e370
   140003469:	mov    rcx,rax
   14000346c:	call   QWORD PTR [rip+0xacbe]        # 0x14000e130
   140003472:	test   rax,rax
   140003475:	je     0x14000347b
   140003477:	mov    ecx,ebx
   140003479:	call   rax
   14000347b:	add    rsp,0x20
   14000347f:	pop    rbx
   140003480:	ret    
   140003481:	int3   
   140003482:	int3   
   140003483:	int3   
   140003484:	rex push rbx
   140003486:	sub    rsp,0x20
   14000348a:	mov    ebx,ecx
   14000348c:	call   0x140003448
   140003491:	mov    ecx,ebx
   140003493:	call   QWORD PTR [rip+0xab67]        # 0x14000e000
   140003499:	int3   
   14000349a:	int3   
   14000349b:	int3   
   14000349c:	mov    ecx,0x8
   1400034a1:	jmp    0x1400043ec
   1400034a6:	int3   
   1400034a7:	int3   
   1400034a8:	mov    ecx,0x8
   1400034ad:	jmp    0x1400042ec
   1400034b2:	int3   
   1400034b3:	int3   
   1400034b4:	rex push rbx
   1400034b6:	sub    rsp,0x20
   1400034ba:	call   0x140006dc8
   1400034bf:	mov    rcx,rax
   1400034c2:	mov    rbx,rax
   1400034c5:	call   0x140003ad8
   1400034ca:	mov    rcx,rbx
   1400034cd:	call   0x140002ff0
   1400034d2:	mov    rcx,rbx
   1400034d5:	call   0x140008054
   1400034da:	mov    rcx,rbx
   1400034dd:	call   0x14000804c
   1400034e2:	mov    rcx,rbx
   1400034e5:	call   0x140007de8
   1400034ea:	mov    rcx,rbx
   1400034ed:	add    rsp,0x20
   1400034f1:	pop    rbx
   1400034f2:	jmp    0x140007dc8
   1400034f7:	int3   
   1400034f8:	cmp    rcx,rdx
   1400034fb:	jae    0x14000352a
   1400034fd:	mov    QWORD PTR [rsp+0x8],rbx
   140003502:	push   rdi
   140003503:	sub    rsp,0x20
   140003507:	mov    rdi,rdx
   14000350a:	mov    rbx,rcx
   14000350d:	mov    rax,QWORD PTR [rbx]
   140003510:	test   rax,rax
   140003513:	je     0x140003517
   140003515:	call   rax
   140003517:	add    rbx,0x8
   14000351b:	cmp    rbx,rdi
   14000351e:	jb     0x14000350d
   140003520:	mov    rbx,QWORD PTR [rsp+0x30]
   140003525:	add    rsp,0x20
   140003529:	pop    rdi
   14000352a:	ret    
   14000352b:	int3   
   14000352c:	mov    QWORD PTR [rsp+0x8],rbx
   140003531:	push   rdi
   140003532:	sub    rsp,0x20
   140003536:	xor    eax,eax
   140003538:	mov    rdi,rdx
   14000353b:	mov    rbx,rcx
   14000353e:	cmp    rcx,rdx
   140003541:	jae    0x14000355a
   140003543:	test   eax,eax
   140003545:	jne    0x14000355a
   140003547:	mov    rcx,QWORD PTR [rbx]
   14000354a:	test   rcx,rcx
   14000354d:	je     0x140003551
   14000354f:	call   rcx
   140003551:	add    rbx,0x8
   140003555:	cmp    rbx,rdi
   140003558:	jb     0x140003543
   14000355a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000355f:	add    rsp,0x20
   140003563:	pop    rdi
   140003564:	ret    
   140003565:	int3   
   140003566:	int3   
   140003567:	int3   
   140003568:	mov    QWORD PTR [rsp+0x8],rbx
   14000356d:	push   rdi
   14000356e:	sub    rsp,0x20
   140003572:	cmp    QWORD PTR [rip+0x112c6],0x0        # 0x140014840
   14000357a:	mov    ebx,ecx
   14000357c:	je     0x140003596
   14000357e:	lea    rcx,[rip+0x112bb]        # 0x140014840
   140003585:	call   0x140007250
   14000358a:	test   eax,eax
   14000358c:	je     0x140003596
   14000358e:	mov    ecx,ebx
   140003590:	call   QWORD PTR [rip+0x112aa]        # 0x140014840
   140003596:	call   0x1400081c4
   14000359b:	lea    rdx,[rip+0xad1e]        # 0x14000e2c0
   1400035a2:	lea    rcx,[rip+0xacef]        # 0x14000e298
   1400035a9:	call   0x14000352c
   1400035ae:	test   eax,eax
   1400035b0:	jne    0x14000360c
   1400035b2:	lea    rcx,[rip+0x37d7]        # 0x140006d90
   1400035b9:	call   0x1400081ac
   1400035be:	lea    rbx,[rip+0xacc3]        # 0x14000e288
   1400035c5:	lea    rdi,[rip+0xacc4]        # 0x14000e290
   1400035cc:	jmp    0x1400035dc
   1400035ce:	mov    rax,QWORD PTR [rbx]
   1400035d1:	test   rax,rax
   1400035d4:	je     0x1400035d8
   1400035d6:	call   rax
   1400035d8:	add    rbx,0x8
   1400035dc:	cmp    rbx,rdi
   1400035df:	jb     0x1400035ce
   1400035e1:	cmp    QWORD PTR [rip+0x1125f],0x0        # 0x140014848
   1400035e9:	je     0x14000360a
   1400035eb:	lea    rcx,[rip+0x11256]        # 0x140014848
   1400035f2:	call   0x140007250
   1400035f7:	test   eax,eax
   1400035f9:	je     0x14000360a
   1400035fb:	xor    r8d,r8d
   1400035fe:	xor    ecx,ecx
   140003600:	lea    edx,[r8+0x2]
   140003604:	call   QWORD PTR [rip+0x1123e]        # 0x140014848
   14000360a:	xor    eax,eax
   14000360c:	mov    rbx,QWORD PTR [rsp+0x30]
   140003611:	add    rsp,0x20
   140003615:	pop    rdi
   140003616:	ret    
   140003617:	int3   
   140003618:	mov    QWORD PTR [rsp+0x8],rbx
   14000361d:	mov    QWORD PTR [rsp+0x10],rsi
   140003622:	mov    DWORD PTR [rsp+0x18],r8d
   140003627:	push   rdi
   140003628:	push   r12
   14000362a:	push   r13
   14000362c:	push   r14
   14000362e:	push   r15
   140003630:	sub    rsp,0x40
   140003634:	mov    r12d,r8d
   140003637:	mov    ebx,edx
   140003639:	mov    r15d,ecx
   14000363c:	mov    ecx,0x8
   140003641:	call   0x1400043ec
   140003646:	nop
   140003647:	cmp    DWORD PTR [rip+0x10362],0x1        # 0x1400139b0
   14000364e:	je     0x140003755
   140003654:	mov    DWORD PTR [rip+0x1034e],0x1        # 0x1400139ac
   14000365e:	mov    BYTE PTR [rip+0x10343],r12b        # 0x1400139a8
   140003665:	test   ebx,ebx
   140003667:	jne    0x140003741
   14000366d:	mov    rcx,QWORD PTR [rip+0x111bc]        # 0x140014830
   140003674:	call   QWORD PTR [rip+0xaa96]        # 0x14000e110
   14000367a:	mov    rsi,rax
   14000367d:	mov    QWORD PTR [rsp+0x30],rax
   140003682:	test   rax,rax
   140003685:	je     0x14000372e
   14000368b:	mov    rcx,QWORD PTR [rip+0x11196]        # 0x140014828
   140003692:	call   QWORD PTR [rip+0xaa78]        # 0x14000e110
   140003698:	mov    rdi,rax
   14000369b:	mov    QWORD PTR [rsp+0x20],rax
   1400036a0:	mov    r14,rsi
   1400036a3:	mov    QWORD PTR [rsp+0x28],rsi
   1400036a8:	mov    r13,rax
   1400036ab:	mov    QWORD PTR [rsp+0x38],rax
   1400036b0:	sub    rdi,0x8
   1400036b4:	mov    QWORD PTR [rsp+0x20],rdi
   1400036b9:	cmp    rdi,rsi
   1400036bc:	jb     0x14000372e
   1400036be:	call   0x140006dc8
   1400036c3:	cmp    QWORD PTR [rdi],rax
   1400036c6:	jne    0x1400036ca
   1400036c8:	jmp    0x1400036b0
   1400036ca:	cmp    rdi,rsi
   1400036cd:	jb     0x14000372e
   1400036cf:	mov    rcx,QWORD PTR [rdi]
   1400036d2:	call   QWORD PTR [rip+0xaa38]        # 0x14000e110
   1400036d8:	mov    rbx,rax
   1400036db:	call   0x140006dc8
   1400036e0:	mov    QWORD PTR [rdi],rax
   1400036e3:	call   rbx
   1400036e5:	mov    rcx,QWORD PTR [rip+0x11144]        # 0x140014830
   1400036ec:	call   QWORD PTR [rip+0xaa1e]        # 0x14000e110
   1400036f2:	mov    rbx,rax
   1400036f5:	mov    rcx,QWORD PTR [rip+0x1112c]        # 0x140014828
   1400036fc:	call   QWORD PTR [rip+0xaa0e]        # 0x14000e110
   140003702:	cmp    r14,rbx
   140003705:	jne    0x14000370c
   140003707:	cmp    r13,rax
   14000370a:	je     0x1400036c8
   14000370c:	mov    r14,rbx
   14000370f:	mov    QWORD PTR [rsp+0x28],rbx
   140003714:	mov    rsi,rbx
   140003717:	mov    QWORD PTR [rsp+0x30],rbx
   14000371c:	mov    r13,rax
   14000371f:	mov    QWORD PTR [rsp+0x38],rax
   140003724:	mov    rdi,rax
   140003727:	mov    QWORD PTR [rsp+0x20],rax
   14000372c:	jmp    0x1400036c8
   14000372e:	lea    rdx,[rip+0xabab]        # 0x14000e2e0
   140003735:	lea    rcx,[rip+0xab8c]        # 0x14000e2c8
   14000373c:	call   0x1400034f8
   140003741:	lea    rdx,[rip+0xaba8]        # 0x14000e2f0
   140003748:	lea    rcx,[rip+0xab99]        # 0x14000e2e8
   14000374f:	call   0x1400034f8
   140003754:	nop
   140003755:	test   r12d,r12d
   140003758:	je     0x140003769
   14000375a:	mov    ecx,0x8
   14000375f:	call   0x1400042ec
   140003764:	test   r12d,r12d
   140003767:	jne    0x14000378f
   140003769:	mov    DWORD PTR [rip+0x1023d],0x1        # 0x1400139b0
   140003773:	mov    ecx,0x8
   140003778:	call   0x1400042ec
   14000377d:	mov    ecx,r15d
   140003780:	call   0x140003448
   140003785:	mov    ecx,r15d
   140003788:	call   QWORD PTR [rip+0xa872]        # 0x14000e000
   14000378e:	int3   
   14000378f:	mov    rbx,QWORD PTR [rsp+0x70]
   140003794:	mov    rsi,QWORD PTR [rsp+0x78]
   140003799:	add    rsp,0x40
   14000379d:	pop    r15
   14000379f:	pop    r14
   1400037a1:	pop    r13
   1400037a3:	pop    r12
   1400037a5:	pop    rdi
   1400037a6:	ret    
   1400037a7:	int3   
   1400037a8:	xor    r8d,r8d
   1400037ab:	xor    edx,edx
   1400037ad:	jmp    0x140003618
   1400037b2:	int3   
   1400037b3:	int3   
   1400037b4:	xor    r8d,r8d
   1400037b7:	lea    edx,[r8+0x1]
   1400037bb:	jmp    0x140003618
   1400037c0:	xor    edx,edx
   1400037c2:	xor    ecx,ecx
   1400037c4:	lea    r8d,[rdx+0x1]
   1400037c8:	jmp    0x140003618
   1400037cd:	int3   
   1400037ce:	int3   
   1400037cf:	int3   
   1400037d0:	mov    edx,0x1
   1400037d5:	xor    ecx,ecx
   1400037d7:	mov    r8d,edx
   1400037da:	jmp    0x140003618
   1400037df:	int3   
   1400037e0:	rex push rbx
   1400037e2:	sub    rsp,0x20
   1400037e6:	mov    ebx,ecx
   1400037e8:	call   0x140003a94
   1400037ed:	mov    ecx,ebx
   1400037ef:	call   0x140003834
   1400037f4:	xor    r8d,r8d
   1400037f7:	mov    ecx,0xff
   1400037fc:	lea    edx,[r8+0x1]
   140003800:	call   0x140003618
   140003805:	int3   
   140003806:	int3   
   140003807:	int3   
   140003808:	lea    r8,[rip+0xb451]        # 0x14000ec60
   14000380f:	xor    eax,eax
   140003811:	mov    rdx,r8
   140003814:	cmp    ecx,DWORD PTR [rdx]
   140003816:	je     0x140003826
   140003818:	inc    eax
   14000381a:	add    rdx,0x10
   14000381e:	cmp    eax,0x16
   140003821:	jb     0x140003814
   140003823:	xor    eax,eax
   140003825:	ret    
   140003826:	cdqe   
   140003828:	add    rax,rax
   14000382b:	mov    rax,QWORD PTR [r8+rax*8+0x8]
   140003830:	ret    
   140003831:	int3   
   140003832:	int3   
   140003833:	int3   
   140003834:	mov    QWORD PTR [rsp+0x10],rbx
   140003839:	mov    QWORD PTR [rsp+0x18],rbp
   14000383e:	mov    QWORD PTR [rsp+0x20],rsi
   140003843:	push   rdi
   140003844:	push   r12
   140003846:	push   r13
   140003848:	sub    rsp,0x250
   14000384f:	mov    rax,QWORD PTR [rip+0xeb72]        # 0x1400123c8
   140003856:	xor    rax,rsp
   140003859:	mov    QWORD PTR [rsp+0x240],rax
   140003861:	mov    edi,ecx
   140003863:	call   0x140003808
   140003868:	xor    esi,esi
   14000386a:	mov    rbx,rax
   14000386d:	test   rax,rax
   140003870:	je     0x140003a64
   140003876:	lea    ecx,[rsi+0x3]
   140003879:	call   0x1400086a0
   14000387e:	cmp    eax,0x1
   140003881:	je     0x1400039fc
   140003887:	lea    ecx,[rsi+0x3]
   14000388a:	call   0x1400086a0
   14000388f:	test   eax,eax
   140003891:	jne    0x1400038a0
   140003893:	cmp    DWORD PTR [rip+0xeb26],0x1        # 0x1400123c0
   14000389a:	je     0x1400039fc
   1400038a0:	cmp    edi,0xfc
   1400038a6:	je     0x140003a64
   1400038ac:	lea    rbp,[rip+0x1010d]        # 0x1400139c0
   1400038b3:	mov    r12d,0x314
   1400038b9:	lea    r8,[rip+0xb590]        # 0x14000ee50
   1400038c0:	mov    rcx,rbp
   1400038c3:	mov    edx,r12d
   1400038c6:	call   0x140008634
   1400038cb:	xor    ecx,ecx
   1400038cd:	test   eax,eax
   1400038cf:	jne    0x1400039e9
   1400038d5:	lea    r13,[rip+0x10116]        # 0x1400139f2
   1400038dc:	mov    r8d,0x104
   1400038e2:	mov    WORD PTR [rip+0x10311],si        # 0x140013bfa
   1400038e9:	mov    rdx,r13
   1400038ec:	call   QWORD PTR [rip+0xa756]        # 0x14000e048
   1400038f2:	lea    edi,[r12-0x19]
   1400038f7:	test   eax,eax
   1400038f9:	jne    0x140003925
   1400038fb:	lea    r8,[rip+0xb51e]        # 0x14000ee20
   140003902:	mov    edx,edi
   140003904:	mov    rcx,r13
   140003907:	call   0x140008634
   14000390c:	test   eax,eax
   14000390e:	je     0x140003925
   140003910:	xor    r9d,r9d
   140003913:	xor    r8d,r8d
   140003916:	xor    edx,edx
   140003918:	xor    ecx,ecx
   14000391a:	mov    QWORD PTR [rsp+0x20],rsi
   14000391f:	call   0x140003144
   140003924:	int3   
   140003925:	mov    rcx,r13
   140003928:	call   0x140008618
   14000392d:	inc    rax
   140003930:	cmp    rax,0x3c
   140003934:	jbe    0x14000397d
   140003936:	mov    rcx,r13
   140003939:	call   0x140008618
   14000393e:	lea    r8,[rip+0xb4d3]        # 0x14000ee18
   140003945:	mov    r9d,0x3
   14000394b:	lea    rcx,[rbp+rax*2-0x44]
   140003950:	mov    rax,rcx
   140003953:	sub    rax,r13
   140003956:	sar    rax,1
   140003959:	sub    rdi,rax
   14000395c:	mov    rdx,rdi
   14000395f:	call   0x140008548
   140003964:	test   eax,eax
   140003966:	je     0x14000397d
   140003968:	xor    r9d,r9d
   14000396b:	xor    r8d,r8d
   14000396e:	xor    edx,edx
   140003970:	xor    ecx,ecx
   140003972:	mov    QWORD PTR [rsp+0x20],rsi
   140003977:	call   0x140003144
   14000397c:	int3   
   14000397d:	lea    r8,[rip+0xb488]        # 0x14000ee0c
   140003984:	mov    rdx,r12
   140003987:	mov    rcx,rbp
   14000398a:	call   0x1400084c0
   14000398f:	test   eax,eax
   140003991:	jne    0x1400039d4
   140003993:	mov    r8,rbx
   140003996:	mov    rdx,r12
   140003999:	mov    rcx,rbp
   14000399c:	call   0x1400084c0
   1400039a1:	test   eax,eax
   1400039a3:	jne    0x1400039bf
   1400039a5:	lea    rdx,[rip+0xb414]        # 0x14000edc0
   1400039ac:	mov    r8d,0x12010
   1400039b2:	mov    rcx,rbp
   1400039b5:	call   0x1400082b8
   1400039ba:	jmp    0x140003a64
   1400039bf:	xor    r9d,r9d
   1400039c2:	xor    r8d,r8d
   1400039c5:	xor    edx,edx
   1400039c7:	xor    ecx,ecx
   1400039c9:	mov    QWORD PTR [rsp+0x20],rsi
   1400039ce:	call   0x140003144
   1400039d3:	int3   
   1400039d4:	xor    r9d,r9d
   1400039d7:	xor    r8d,r8d
   1400039da:	xor    edx,edx
   1400039dc:	xor    ecx,ecx
   1400039de:	mov    QWORD PTR [rsp+0x20],rsi
   1400039e3:	call   0x140003144
   1400039e8:	int3   
   1400039e9:	xor    r9d,r9d
   1400039ec:	xor    r8d,r8d
   1400039ef:	xor    edx,edx
   1400039f1:	mov    QWORD PTR [rsp+0x20],rsi
   1400039f6:	call   0x140003144
   1400039fb:	int3   
   1400039fc:	mov    ecx,0xfffffff4
   140003a01:	call   QWORD PTR [rip+0xa661]        # 0x14000e068
   140003a07:	mov    rdi,rax
   140003a0a:	test   rax,rax
   140003a0d:	je     0x140003a64
   140003a0f:	cmp    rax,0xffffffffffffffff
   140003a13:	je     0x140003a64
   140003a15:	mov    edx,esi
   140003a17:	lea    r8,[rsp+0x40]
   140003a1c:	mov    cl,BYTE PTR [rbx]
   140003a1e:	mov    BYTE PTR [r8],cl
   140003a21:	cmp    WORD PTR [rbx],si
   140003a24:	je     0x140003a37
   140003a26:	inc    edx
   140003a28:	inc    r8
   140003a2b:	add    rbx,0x2
   140003a2f:	cmp    edx,0x1f4
   140003a35:	jb     0x140003a1c
   140003a37:	lea    rcx,[rsp+0x40]
   140003a3c:	mov    BYTE PTR [rsp+0x233],sil
   140003a44:	call   0x140008210
   140003a49:	lea    r9,[rsp+0x30]
   140003a4e:	lea    rdx,[rsp+0x40]
   140003a53:	mov    rcx,rdi
   140003a56:	mov    r8,rax
   140003a59:	mov    QWORD PTR [rsp+0x20],rsi
   140003a5e:	call   QWORD PTR [rip+0xa6dc]        # 0x14000e140
   140003a64:	mov    rcx,QWORD PTR [rsp+0x240]
   140003a6c:	xor    rcx,rsp
   140003a6f:	call   0x140001920
   140003a74:	lea    r11,[rsp+0x250]
   140003a7c:	mov    rbx,QWORD PTR [r11+0x28]
   140003a80:	mov    rbp,QWORD PTR [r11+0x30]
   140003a84:	mov    rsi,QWORD PTR [r11+0x38]
   140003a88:	mov    rsp,r11
   140003a8b:	pop    r13
   140003a8d:	pop    r12
   140003a8f:	pop    rdi
   140003a90:	ret    
   140003a91:	int3   
   140003a92:	int3   
   140003a93:	int3   
   140003a94:	sub    rsp,0x28
   140003a98:	mov    ecx,0x3
   140003a9d:	call   0x1400086a0
   140003aa2:	cmp    eax,0x1
   140003aa5:	je     0x140003abe
   140003aa7:	mov    ecx,0x3
   140003aac:	call   0x1400086a0
   140003ab1:	test   eax,eax
   140003ab3:	jne    0x140003ad2
   140003ab5:	cmp    DWORD PTR [rip+0xe904],0x1        # 0x1400123c0
   140003abc:	jne    0x140003ad2
   140003abe:	mov    ecx,0xfc
   140003ac3:	call   0x140003834
   140003ac8:	mov    ecx,0xff
   140003acd:	call   0x140003834
   140003ad2:	add    rsp,0x28
   140003ad6:	ret    
   140003ad7:	int3   
   140003ad8:	mov    QWORD PTR [rip+0x10509],rcx        # 0x140013fe8
   140003adf:	ret    
   140003ae0:	rex push rbx
   140003ae2:	sub    rsp,0x20
   140003ae6:	mov    rbx,rcx
   140003ae9:	mov    rcx,QWORD PTR [rip+0x104f8]        # 0x140013fe8
   140003af0:	call   QWORD PTR [rip+0xa61a]        # 0x14000e110
   140003af6:	test   rax,rax
   140003af9:	je     0x140003b0b
   140003afb:	mov    rcx,rbx
   140003afe:	call   rax
   140003b00:	test   eax,eax
   140003b02:	je     0x140003b0b
   140003b04:	mov    eax,0x1
   140003b09:	jmp    0x140003b0d
   140003b0b:	xor    eax,eax
   140003b0d:	add    rsp,0x20
   140003b11:	pop    rbx
   140003b12:	ret    
   140003b13:	int3   
   140003b14:	mov    QWORD PTR [rsp+0x8],rbx
   140003b19:	mov    QWORD PTR [rsp+0x10],rbp
   140003b1e:	mov    QWORD PTR [rsp+0x18],rdi
   140003b23:	push   r12
   140003b25:	push   r13
   140003b27:	push   r14
   140003b29:	sub    rsp,0x90
   140003b30:	lea    rcx,[rsp+0x20]
   140003b35:	call   QWORD PTR [rip+0xa61d]        # 0x14000e158
   140003b3b:	mov    edx,0x58
   140003b40:	lea    ebp,[rdx-0x38]
   140003b43:	mov    ecx,ebp
   140003b45:	call   0x140003e68
   140003b4a:	xor    r14d,r14d
   140003b4d:	mov    rdx,rax
   140003b50:	test   rax,rax
   140003b53:	jne    0x140003b5d
   140003b55:	or     eax,0xffffffff
   140003b58:	jmp    0x140003dc8
   140003b5d:	mov    QWORD PTR [rip+0x10abc],rax        # 0x140014620
   140003b64:	add    rax,0xb00
   140003b6a:	mov    ecx,ebp
   140003b6c:	mov    DWORD PTR [rip+0x10a8e],ecx        # 0x140014600
   140003b72:	cmp    rdx,rax
   140003b75:	jae    0x140003bbc
   140003b77:	add    rdx,0x9
   140003b7b:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   140003b80:	mov    WORD PTR [rdx-0x1],0xa00
   140003b86:	mov    DWORD PTR [rdx+0x3],r14d
   140003b8a:	mov    WORD PTR [rdx+0x2f],0xa00
   140003b90:	mov    BYTE PTR [rdx+0x31],0xa
   140003b94:	mov    DWORD PTR [rdx+0x47],r14d
   140003b98:	mov    BYTE PTR [rdx+0x43],r14b
   140003b9c:	mov    rax,QWORD PTR [rip+0x10a7d]        # 0x140014620
   140003ba3:	add    rdx,0x58
   140003ba7:	lea    rcx,[rdx-0x9]
   140003bab:	add    rax,0xb00
   140003bb1:	cmp    rcx,rax
   140003bb4:	jb     0x140003b7b
   140003bb6:	mov    ecx,DWORD PTR [rip+0x10a44]        # 0x140014600
   140003bbc:	cmp    WORD PTR [rsp+0x62],r14w
   140003bc2:	je     0x140003cfc
   140003bc8:	mov    rax,QWORD PTR [rsp+0x68]
   140003bcd:	test   rax,rax
   140003bd0:	je     0x140003cfc
   140003bd6:	movsxd r12,DWORD PTR [rax]
   140003bd9:	mov    ebx,0x800
   140003bde:	lea    r13,[rax+0x4]
   140003be2:	add    r12,r13
   140003be5:	cmp    DWORD PTR [rax],ebx
   140003be7:	cmovl  ebx,DWORD PTR [rax]
   140003bea:	cmp    ecx,ebx
   140003bec:	jge    0x140003c79
   140003bf2:	lea    rdi,[rip+0x10a2f]        # 0x140014628
   140003bf9:	mov    edx,0x58
   140003bfe:	mov    rcx,rbp
   140003c01:	call   0x140003e68
   140003c06:	test   rax,rax
   140003c09:	je     0x140003c73
   140003c0b:	mov    edx,DWORD PTR [rip+0x109ef]        # 0x140014600
   140003c11:	lea    rcx,[rax+0xb00]
   140003c18:	mov    QWORD PTR [rdi],rax
   140003c1b:	add    edx,ebp
   140003c1d:	mov    DWORD PTR [rip+0x109dd],edx        # 0x140014600
   140003c23:	cmp    rax,rcx
   140003c26:	jae    0x140003c69
   140003c28:	lea    rdx,[rax+0x9]
   140003c2c:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   140003c31:	and    BYTE PTR [rdx+0x2f],0x80
   140003c35:	mov    WORD PTR [rdx-0x1],0xa00
   140003c3b:	mov    DWORD PTR [rdx+0x3],r14d
   140003c3f:	mov    WORD PTR [rdx+0x30],0xa0a
   140003c45:	mov    DWORD PTR [rdx+0x47],r14d
   140003c49:	mov    BYTE PTR [rdx+0x43],r14b
   140003c4d:	mov    rax,QWORD PTR [rdi]
   140003c50:	add    rdx,0x58
   140003c54:	lea    rcx,[rdx-0x9]
   140003c58:	add    rax,0xb00
   140003c5e:	cmp    rcx,rax
   140003c61:	jb     0x140003c2c
   140003c63:	mov    edx,DWORD PTR [rip+0x10997]        # 0x140014600
   140003c69:	add    rdi,0x8
   140003c6d:	cmp    edx,ebx
   140003c6f:	jl     0x140003bf9
   140003c71:	jmp    0x140003c79
   140003c73:	mov    ebx,DWORD PTR [rip+0x10987]        # 0x140014600
   140003c79:	mov    edi,r14d
   140003c7c:	test   ebx,ebx
   140003c7e:	jle    0x140003cfc
   140003c80:	cmp    QWORD PTR [r12],0xffffffffffffffff
   140003c85:	je     0x140003cef
   140003c87:	cmp    QWORD PTR [r12],0xfffffffffffffffe
   140003c8c:	je     0x140003cef
   140003c8e:	test   BYTE PTR [r13+0x0],0x1
   140003c93:	je     0x140003cef
   140003c95:	test   BYTE PTR [r13+0x0],0x8
   140003c9a:	jne    0x140003caa
   140003c9c:	mov    rcx,QWORD PTR [r12]
   140003ca0:	call   QWORD PTR [rip+0xa4aa]        # 0x14000e150
   140003ca6:	test   eax,eax
   140003ca8:	je     0x140003cef
   140003caa:	movsxd rbp,edi
   140003cad:	lea    rcx,[rip+0x1096c]        # 0x140014620
   140003cb4:	mov    edx,0xfa0
   140003cb9:	mov    rax,rbp
   140003cbc:	and    ebp,0x1f
   140003cbf:	sar    rax,0x5
   140003cc3:	imul   rbp,rbp,0x58
   140003cc7:	add    rbp,QWORD PTR [rcx+rax*8]
   140003ccb:	mov    rax,QWORD PTR [r12]
   140003ccf:	mov    QWORD PTR [rbp+0x0],rax
   140003cd3:	mov    al,BYTE PTR [r13+0x0]
   140003cd7:	lea    rcx,[rbp+0x10]
   140003cdb:	mov    BYTE PTR [rbp+0x8],al
   140003cde:	call   QWORD PTR [rip+0xa41c]        # 0x14000e100
   140003ce4:	test   eax,eax
   140003ce6:	je     0x140003b55
   140003cec:	inc    DWORD PTR [rbp+0xc]
   140003cef:	inc    edi
   140003cf1:	inc    r13
   140003cf4:	add    r12,0x8
   140003cf8:	cmp    edi,ebx
   140003cfa:	jl     0x140003c80
   140003cfc:	mov    r12d,r14d
   140003cff:	mov    rbx,r14
   140003d02:	mov    rdi,QWORD PTR [rip+0x10917]        # 0x140014620
   140003d09:	cmp    QWORD PTR [rbx+rdi*1],0xffffffffffffffff
   140003d0e:	je     0x140003d21
   140003d10:	cmp    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   140003d15:	je     0x140003d21
   140003d17:	or     BYTE PTR [rbx+rdi*1+0x8],0x80
   140003d1c:	jmp    0x140003da6
   140003d21:	lea    eax,[r12-0x1]
   140003d26:	mov    BYTE PTR [rbx+rdi*1+0x8],0x81
   140003d2b:	neg    eax
   140003d2d:	mov    eax,0xfffffff6
   140003d32:	sbb    ecx,ecx
   140003d34:	add    ecx,0xfffffff5
   140003d37:	test   r12d,r12d
   140003d3a:	cmove  ecx,eax
   140003d3d:	call   QWORD PTR [rip+0xa325]        # 0x14000e068
   140003d43:	mov    rbp,rax
   140003d46:	cmp    rax,0xffffffffffffffff
   140003d4a:	je     0x140003d99
   140003d4c:	test   rax,rax
   140003d4f:	je     0x140003d99
   140003d51:	mov    rcx,rax
   140003d54:	call   QWORD PTR [rip+0xa3f6]        # 0x14000e150
   140003d5a:	test   eax,eax
   140003d5c:	je     0x140003d99
   140003d5e:	movzx  eax,al
   140003d61:	mov    QWORD PTR [rbx+rdi*1],rbp
   140003d65:	cmp    eax,0x2
   140003d68:	jne    0x140003d71
   140003d6a:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   140003d6f:	jmp    0x140003d7b
   140003d71:	cmp    eax,0x3
   140003d74:	jne    0x140003d7b
   140003d76:	or     BYTE PTR [rbx+rdi*1+0x8],0x8
   140003d7b:	lea    rcx,[rbx+rdi*1+0x10]
   140003d80:	mov    edx,0xfa0
   140003d85:	call   QWORD PTR [rip+0xa375]        # 0x14000e100
   140003d8b:	test   eax,eax
   140003d8d:	je     0x140003b55
   140003d93:	inc    DWORD PTR [rbx+rdi*1+0xc]
   140003d97:	jmp    0x140003da6
   140003d99:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   140003d9e:	mov    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   140003da6:	add    rbx,0x58
   140003daa:	inc    r12d
   140003dad:	cmp    rbx,0x108
   140003db4:	jl     0x140003d02
   140003dba:	mov    ecx,DWORD PTR [rip+0x10840]        # 0x140014600
   140003dc0:	call   QWORD PTR [rip+0xa382]        # 0x14000e148
   140003dc6:	xor    eax,eax
   140003dc8:	lea    r11,[rsp+0x90]
   140003dd0:	mov    rbx,QWORD PTR [r11+0x20]
   140003dd4:	mov    rbp,QWORD PTR [r11+0x28]
   140003dd8:	mov    rdi,QWORD PTR [r11+0x30]
   140003ddc:	mov    rsp,r11
   140003ddf:	pop    r14
   140003de1:	pop    r13
   140003de3:	pop    r12
   140003de5:	ret    
   140003de6:	int3   
   140003de7:	int3   
   140003de8:	mov    rax,rsp
   140003deb:	mov    QWORD PTR [rax+0x8],rbx
   140003def:	mov    QWORD PTR [rax+0x10],rbp
   140003df3:	mov    QWORD PTR [rax+0x18],rsi
   140003df7:	mov    QWORD PTR [rax+0x20],rdi
   140003dfb:	push   r12
   140003dfd:	sub    rsp,0x20
   140003e01:	mov    edi,DWORD PTR [rip+0x101ed]        # 0x140013ff4
   140003e07:	xor    ebp,ebp
   140003e09:	mov    rsi,rcx
   140003e0c:	or     r12d,0xffffffff
   140003e10:	mov    rcx,rsi
   140003e13:	call   0x140001b18
   140003e18:	mov    rbx,rax
   140003e1b:	test   rax,rax
   140003e1e:	jne    0x140003e48
   140003e20:	test   edi,edi
   140003e22:	je     0x140003e48
   140003e24:	mov    ecx,ebp
   140003e26:	call   QWORD PTR [rip+0xa33c]        # 0x14000e168
   140003e2c:	mov    edi,DWORD PTR [rip+0x101c2]        # 0x140013ff4
   140003e32:	lea    r11d,[rbp+0x3e8]
   140003e39:	cmp    r11d,edi
   140003e3c:	mov    ebp,r11d
   140003e3f:	cmova  ebp,r12d
   140003e43:	cmp    ebp,r12d
   140003e46:	jne    0x140003e10
   140003e48:	mov    rbp,QWORD PTR [rsp+0x38]
   140003e4d:	mov    rsi,QWORD PTR [rsp+0x40]
   140003e52:	mov    rdi,QWORD PTR [rsp+0x48]
   140003e57:	mov    rax,rbx
   140003e5a:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e5f:	add    rsp,0x20
   140003e63:	pop    r12
   140003e65:	ret    
   140003e66:	int3   
   140003e67:	int3   
   140003e68:	mov    rax,rsp
   140003e6b:	mov    QWORD PTR [rax+0x8],rbx
   140003e6f:	mov    QWORD PTR [rax+0x10],rbp
   140003e73:	mov    QWORD PTR [rax+0x18],rsi
   140003e77:	mov    QWORD PTR [rax+0x20],rdi
   140003e7b:	push   r12
   140003e7d:	sub    rsp,0x20
   140003e81:	xor    edi,edi
   140003e83:	mov    rsi,rdx
   140003e86:	mov    rbp,rcx
   140003e89:	or     r12d,0xffffffff
   140003e8d:	xor    r8d,r8d
   140003e90:	mov    rdx,rsi
   140003e93:	mov    rcx,rbp
   140003e96:	call   0x1400033ac
   140003e9b:	mov    rbx,rax
   140003e9e:	test   rax,rax
   140003ea1:	jne    0x140003ecd
   140003ea3:	cmp    DWORD PTR [rip+0x1014b],eax        # 0x140013ff4
   140003ea9:	jbe    0x140003ecd
   140003eab:	mov    ecx,edi
   140003ead:	call   QWORD PTR [rip+0xa2b5]        # 0x14000e168
   140003eb3:	lea    r11d,[rdi+0x3e8]
   140003eba:	cmp    r11d,DWORD PTR [rip+0x10133]        # 0x140013ff4
   140003ec1:	mov    edi,r11d
   140003ec4:	cmova  edi,r12d
   140003ec8:	cmp    edi,r12d
   140003ecb:	jne    0x140003e8d
   140003ecd:	mov    rbp,QWORD PTR [rsp+0x38]
   140003ed2:	mov    rsi,QWORD PTR [rsp+0x40]
   140003ed7:	mov    rdi,QWORD PTR [rsp+0x48]
   140003edc:	mov    rax,rbx
   140003edf:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ee4:	add    rsp,0x20
   140003ee8:	pop    r12
   140003eea:	ret    
   140003eeb:	int3   
   140003eec:	mov    rax,rsp
   140003eef:	mov    QWORD PTR [rax+0x8],rbx
   140003ef3:	mov    QWORD PTR [rax+0x10],rbp
   140003ef7:	mov    QWORD PTR [rax+0x18],rsi
   140003efb:	mov    QWORD PTR [rax+0x20],rdi
   140003eff:	push   r12
   140003f01:	sub    rsp,0x20
   140003f05:	xor    esi,esi
   140003f07:	mov    rdi,rdx
   140003f0a:	mov    rbp,rcx
   140003f0d:	or     r12d,0xffffffff
   140003f11:	mov    rdx,rdi
   140003f14:	mov    rcx,rbp
   140003f17:	call   0x1400086e0
   140003f1c:	mov    rbx,rax
   140003f1f:	test   rax,rax
   140003f22:	jne    0x140003f53
   140003f24:	test   rdi,rdi
   140003f27:	je     0x140003f53
   140003f29:	cmp    DWORD PTR [rip+0x100c5],eax        # 0x140013ff4
   140003f2f:	jbe    0x140003f53
   140003f31:	mov    ecx,esi
   140003f33:	call   QWORD PTR [rip+0xa22f]        # 0x14000e168
   140003f39:	lea    r11d,[rsi+0x3e8]
   140003f40:	cmp    r11d,DWORD PTR [rip+0x100ad]        # 0x140013ff4
   140003f47:	mov    esi,r11d
   140003f4a:	cmova  esi,r12d
   140003f4e:	cmp    esi,r12d
   140003f51:	jne    0x140003f11
   140003f53:	mov    rbp,QWORD PTR [rsp+0x38]
   140003f58:	mov    rsi,QWORD PTR [rsp+0x40]
   140003f5d:	mov    rdi,QWORD PTR [rsp+0x48]
   140003f62:	mov    rax,rbx
   140003f65:	mov    rbx,QWORD PTR [rsp+0x30]
   140003f6a:	add    rsp,0x20
   140003f6e:	pop    r12
   140003f70:	ret    
   140003f71:	int3   
   140003f72:	int3   
   140003f73:	int3   
   140003f74:	mov    QWORD PTR [rsp+0x8],rbx
   140003f79:	mov    QWORD PTR [rsp+0x10],rsi
   140003f7e:	push   rdi
   140003f7f:	sub    rsp,0x30
   140003f83:	xor    edi,edi
   140003f85:	lea    ecx,[rdi+0x1]
   140003f88:	call   0x1400043ec
   140003f8d:	nop
   140003f8e:	lea    ebx,[rdi+0x3]
   140003f91:	mov    DWORD PTR [rsp+0x20],ebx
   140003f95:	cmp    ebx,DWORD PTR [rip+0x118e5]        # 0x140015880
   140003f9b:	jge    0x140004002
   140003f9d:	movsxd rsi,ebx
   140003fa0:	mov    rax,QWORD PTR [rip+0x108b9]        # 0x140014860
   140003fa7:	cmp    QWORD PTR [rax+rsi*8],0x0
   140003fac:	je     0x140003ffe
   140003fae:	mov    rcx,QWORD PTR [rax+rsi*8]
   140003fb2:	test   BYTE PTR [rcx+0x18],0x83
   140003fb6:	je     0x140003fc8
   140003fb8:	call   0x140002678
   140003fbd:	cmp    eax,0xffffffff
   140003fc0:	je     0x140003fc8
   140003fc2:	inc    edi
   140003fc4:	mov    DWORD PTR [rsp+0x24],edi
   140003fc8:	cmp    ebx,0x14
   140003fcb:	jl     0x140003ffe
   140003fcd:	mov    rax,QWORD PTR [rip+0x1088c]        # 0x140014860
   140003fd4:	mov    rcx,QWORD PTR [rax+rsi*8]
   140003fd8:	add    rcx,0x30
   140003fdc:	call   QWORD PTR [rip+0xa17e]        # 0x14000e160
   140003fe2:	mov    rcx,QWORD PTR [rip+0x10877]        # 0x140014860
   140003fe9:	mov    rcx,QWORD PTR [rcx+rsi*8]
   140003fed:	call   0x140001a94
   140003ff2:	mov    r11,QWORD PTR [rip+0x10867]        # 0x140014860
   140003ff9:	and    QWORD PTR [r11+rsi*8],0x0
   140003ffe:	inc    ebx
   140004000:	jmp    0x140003f91
   140004002:	mov    ecx,0x1
   140004007:	call   0x1400042ec
   14000400c:	mov    eax,edi
   14000400e:	mov    rbx,QWORD PTR [rsp+0x40]
   140004013:	mov    rsi,QWORD PTR [rsp+0x48]
   140004018:	add    rsp,0x30
   14000401c:	pop    rdi
   14000401d:	ret    
   14000401e:	int3   
   14000401f:	int3   
   140004020:	mov    QWORD PTR [rsp+0x8],rbx
   140004025:	mov    QWORD PTR [rsp+0x10],rsi
   14000402a:	push   rdi
   14000402b:	sub    rsp,0x20
   14000402f:	mov    eax,DWORD PTR [rcx+0x18]
   140004032:	xor    esi,esi
   140004034:	mov    rbx,rcx
   140004037:	and    al,0x3
   140004039:	cmp    al,0x2
   14000403b:	jne    0x14000407c
   14000403d:	test   DWORD PTR [rcx+0x18],0x108
   140004044:	je     0x14000407c
   140004046:	mov    edi,DWORD PTR [rcx]
   140004048:	sub    edi,DWORD PTR [rcx+0x10]
   14000404b:	test   edi,edi
   14000404d:	jle    0x14000407c
   14000404f:	call   0x1400055bc
   140004054:	mov    rdx,QWORD PTR [rbx+0x10]
   140004058:	mov    r8d,edi
   14000405b:	mov    ecx,eax
   14000405d:	call   0x140008f14
   140004062:	cmp    eax,edi
   140004064:	jne    0x140004075
   140004066:	mov    eax,DWORD PTR [rbx+0x18]
   140004069:	test   al,al
   14000406b:	jns    0x14000407c
   14000406d:	and    eax,0xfffffffd
   140004070:	mov    DWORD PTR [rbx+0x18],eax
   140004073:	jmp    0x14000407c
   140004075:	or     DWORD PTR [rbx+0x18],0x20
   140004079:	or     esi,0xffffffff
   14000407c:	mov    rcx,QWORD PTR [rbx+0x10]
   140004080:	and    DWORD PTR [rbx+0x8],0x0
   140004084:	mov    eax,esi
   140004086:	mov    rsi,QWORD PTR [rsp+0x38]
   14000408b:	mov    QWORD PTR [rbx],rcx
   14000408e:	mov    rbx,QWORD PTR [rsp+0x30]
   140004093:	add    rsp,0x20
   140004097:	pop    rdi
   140004098:	ret    
   140004099:	int3   
   14000409a:	int3   
   14000409b:	int3   
   14000409c:	rex push rbx
   14000409e:	sub    rsp,0x20
   1400040a2:	mov    rbx,rcx
   1400040a5:	test   rcx,rcx
   1400040a8:	jne    0x1400040b4
   1400040aa:	add    rsp,0x20
   1400040ae:	pop    rbx
   1400040af:	jmp    0x1400040e8
   1400040b4:	call   0x140004020
   1400040b9:	test   eax,eax
   1400040bb:	je     0x1400040c2
   1400040bd:	or     eax,0xffffffff
   1400040c0:	jmp    0x1400040e2
   1400040c2:	test   DWORD PTR [rbx+0x18],0x4000
   1400040c9:	je     0x1400040e0
   1400040cb:	mov    rcx,rbx
   1400040ce:	call   0x1400055bc
   1400040d3:	mov    ecx,eax
   1400040d5:	call   0x140008ff4
   1400040da:	neg    eax
   1400040dc:	sbb    eax,eax
   1400040de:	jmp    0x1400040e2
   1400040e0:	xor    eax,eax
   1400040e2:	add    rsp,0x20
   1400040e6:	pop    rbx
   1400040e7:	ret    
   1400040e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400040ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400040f2:	mov    QWORD PTR [rsp+0x18],rdi
   1400040f7:	push   r12
   1400040f9:	push   r13
   1400040fb:	push   r15
   1400040fd:	sub    rsp,0x30
   140004101:	mov    r13d,ecx
   140004104:	xor    esi,esi
   140004106:	xor    edi,edi
   140004108:	lea    ecx,[rsi+0x1]
   14000410b:	call   0x1400043ec
   140004110:	nop
   140004111:	xor    ebx,ebx
   140004113:	or     r15d,0xffffffff
   140004117:	mov    DWORD PTR [rsp+0x20],ebx
   14000411b:	cmp    ebx,DWORD PTR [rip+0x1175f]        # 0x140015880
   140004121:	jge    0x1400041a7
   140004127:	movsxd r12,ebx
   14000412a:	mov    rax,QWORD PTR [rip+0x1072f]        # 0x140014860
   140004131:	cmp    QWORD PTR [rax+r12*8],0x0
   140004136:	je     0x1400041a0
   140004138:	mov    rdx,QWORD PTR [rax+r12*8]
   14000413c:	test   BYTE PTR [rdx+0x18],0x83
   140004140:	je     0x1400041a0
   140004142:	mov    ecx,ebx
   140004144:	call   0x140001d44
   140004149:	nop
   14000414a:	mov    rax,QWORD PTR [rip+0x1070f]        # 0x140014860
   140004151:	mov    rcx,QWORD PTR [rax+r12*8]
   140004155:	test   BYTE PTR [rcx+0x18],0x83
   140004159:	je     0x14000418e
   14000415b:	cmp    r13d,0x1
   14000415f:	jne    0x140004173
   140004161:	call   0x14000409c
   140004166:	cmp    eax,r15d
   140004169:	je     0x14000418e
   14000416b:	inc    esi
   14000416d:	mov    DWORD PTR [rsp+0x24],esi
   140004171:	jmp    0x14000418e
   140004173:	test   r13d,r13d
   140004176:	jne    0x14000418e
   140004178:	test   BYTE PTR [rcx+0x18],0x2
   14000417c:	je     0x14000418e
   14000417e:	call   0x14000409c
   140004183:	cmp    eax,r15d
   140004186:	cmove  edi,r15d
   14000418a:	mov    DWORD PTR [rsp+0x28],edi
   14000418e:	mov    rdx,QWORD PTR [rip+0x106cb]        # 0x140014860
   140004195:	mov    rdx,QWORD PTR [rdx+r12*8]
   140004199:	mov    ecx,ebx
   14000419b:	call   0x140001dc4
   1400041a0:	inc    ebx
   1400041a2:	jmp    0x140004117
   1400041a7:	mov    ecx,0x1
   1400041ac:	call   0x1400042ec
   1400041b1:	cmp    r13d,0x1
   1400041b5:	cmove  edi,esi
   1400041b8:	mov    eax,edi
   1400041ba:	mov    rbx,QWORD PTR [rsp+0x50]
   1400041bf:	mov    rsi,QWORD PTR [rsp+0x58]
   1400041c4:	mov    rdi,QWORD PTR [rsp+0x60]
   1400041c9:	add    rsp,0x30
   1400041cd:	pop    r15
   1400041cf:	pop    r13
   1400041d1:	pop    r12
   1400041d3:	ret    
   1400041d4:	mov    ecx,0x1
   1400041d9:	jmp    0x1400040e8
   1400041de:	int3   
   1400041df:	int3   
   1400041e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400041e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400041ea:	mov    QWORD PTR [rsp+0x18],rdi
   1400041ef:	push   r12
   1400041f1:	sub    rsp,0x20
   1400041f5:	lea    r12,[rip+0xe3b4]        # 0x1400125b0
   1400041fc:	xor    esi,esi
   1400041fe:	xor    ebx,ebx
   140004200:	mov    rdi,r12
   140004203:	cmp    DWORD PTR [rdi+0x8],0x1
   140004207:	jne    0x14000422f
   140004209:	movsxd rax,esi
   14000420c:	mov    edx,0xfa0
   140004211:	inc    esi
   140004213:	lea    rcx,[rax+rax*4]
   140004217:	lea    rax,[rip+0xfde2]        # 0x140014000
   14000421e:	lea    rcx,[rax+rcx*8]
   140004222:	mov    QWORD PTR [rdi],rcx
   140004225:	call   QWORD PTR [rip+0x9ed5]        # 0x14000e100
   14000422b:	test   eax,eax
   14000422d:	je     0x140004255
   14000422f:	inc    ebx
   140004231:	add    rdi,0x10
   140004235:	cmp    ebx,0x24
   140004238:	jl     0x140004203
   14000423a:	mov    eax,0x1
   14000423f:	mov    rbx,QWORD PTR [rsp+0x30]
   140004244:	mov    rsi,QWORD PTR [rsp+0x38]
   140004249:	mov    rdi,QWORD PTR [rsp+0x40]
   14000424e:	add    rsp,0x20
   140004252:	pop    r12
   140004254:	ret    
   140004255:	movsxd rax,ebx
   140004258:	add    rax,rax
   14000425b:	and    QWORD PTR [r12+rax*8],0x0
   140004260:	xor    eax,eax
   140004262:	jmp    0x14000423f
   140004264:	mov    QWORD PTR [rsp+0x8],rbx
   140004269:	mov    QWORD PTR [rsp+0x10],rbp
   14000426e:	mov    QWORD PTR [rsp+0x18],rsi
   140004273:	push   rdi
   140004274:	sub    rsp,0x20
   140004278:	mov    edi,0x24
   14000427d:	lea    rbx,[rip+0xe32c]        # 0x1400125b0
   140004284:	mov    esi,edi
   140004286:	mov    rbp,QWORD PTR [rbx]
   140004289:	test   rbp,rbp
   14000428c:	je     0x1400042a9
   14000428e:	cmp    DWORD PTR [rbx+0x8],0x1
   140004292:	je     0x1400042a9
   140004294:	mov    rcx,rbp
   140004297:	call   QWORD PTR [rip+0x9ec3]        # 0x14000e160
   14000429d:	mov    rcx,rbp
   1400042a0:	call   0x140001a94
   1400042a5:	and    QWORD PTR [rbx],0x0
   1400042a9:	add    rbx,0x10
   1400042ad:	dec    rsi
   1400042b0:	jne    0x140004286
   1400042b2:	lea    rbx,[rip+0xe2ff]        # 0x1400125b8
   1400042b9:	mov    rcx,QWORD PTR [rbx-0x8]
   1400042bd:	test   rcx,rcx
   1400042c0:	je     0x1400042cd
   1400042c2:	cmp    DWORD PTR [rbx],0x1
   1400042c5:	jne    0x1400042cd
   1400042c7:	call   QWORD PTR [rip+0x9e93]        # 0x14000e160
   1400042cd:	add    rbx,0x10
   1400042d1:	dec    rdi
   1400042d4:	jne    0x1400042b9
   1400042d6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400042db:	mov    rbp,QWORD PTR [rsp+0x38]
   1400042e0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400042e5:	add    rsp,0x20
   1400042e9:	pop    rdi
   1400042ea:	ret    
   1400042eb:	int3   
   1400042ec:	movsxd rcx,ecx
   1400042ef:	lea    rax,[rip+0xe2ba]        # 0x1400125b0
   1400042f6:	add    rcx,rcx
   1400042f9:	mov    rcx,QWORD PTR [rax+rcx*8]
   1400042fd:	rex.W jmp QWORD PTR [rip+0x9da4]        # 0x14000e0a8
   140004304:	mov    QWORD PTR [rsp+0x8],rbx
   140004309:	mov    QWORD PTR [rsp+0x10],rsi
   14000430e:	mov    QWORD PTR [rsp+0x18],rdi
   140004313:	push   r13
   140004315:	sub    rsp,0x20
   140004319:	movsxd rbx,ecx
   14000431c:	mov    esi,0x1
   140004321:	cmp    QWORD PTR [rip+0xf62f],0x0        # 0x140013958
   140004329:	jne    0x140004342
   14000432b:	call   0x140003a94
   140004330:	lea    ecx,[rsi+0x1d]
   140004333:	call   0x140003834
   140004338:	mov    ecx,0xff
   14000433d:	call   0x140003484
   140004342:	mov    rdi,rbx
   140004345:	add    rdi,rdi
   140004348:	lea    r13,[rip+0xe261]        # 0x1400125b0
   14000434f:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   140004355:	je     0x14000435b
   140004357:	mov    eax,esi
   140004359:	jmp    0x1400043d4
   14000435b:	mov    ecx,0x28
   140004360:	call   0x140003de8
   140004365:	mov    rbx,rax
   140004368:	test   rax,rax
   14000436b:	jne    0x14000437c
   14000436d:	call   0x140003250
   140004372:	mov    DWORD PTR [rax],0xc
   140004378:	xor    eax,eax
   14000437a:	jmp    0x1400043d4
   14000437c:	mov    ecx,0xa
   140004381:	call   0x1400043ec
   140004386:	nop
   140004387:	mov    rcx,rbx
   14000438a:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   140004390:	jne    0x1400043bf
   140004392:	mov    edx,0xfa0
   140004397:	call   QWORD PTR [rip+0x9d63]        # 0x14000e100
   14000439d:	test   eax,eax
   14000439f:	jne    0x1400043b8
   1400043a1:	mov    rcx,rbx
   1400043a4:	call   0x140001a94
   1400043a9:	call   0x140003250
   1400043ae:	mov    DWORD PTR [rax],0xc
   1400043b4:	xor    esi,esi
   1400043b6:	jmp    0x1400043c5
   1400043b8:	mov    QWORD PTR [r13+rdi*8+0x0],rbx
   1400043bd:	jmp    0x1400043c5
   1400043bf:	call   0x140001a94
   1400043c4:	nop
   1400043c5:	mov    rcx,QWORD PTR [rip+0xe284]        # 0x140012650
   1400043cc:	call   QWORD PTR [rip+0x9cd6]        # 0x14000e0a8
   1400043d2:	jmp    0x140004357
   1400043d4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400043d9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400043de:	mov    rdi,QWORD PTR [rsp+0x40]
   1400043e3:	add    rsp,0x20
   1400043e7:	pop    r13
   1400043e9:	ret    
   1400043ea:	int3   
   1400043eb:	int3   
   1400043ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400043f1:	push   rdi
   1400043f2:	sub    rsp,0x20
   1400043f6:	movsxd rbx,ecx
   1400043f9:	lea    rdi,[rip+0xe1b0]        # 0x1400125b0
   140004400:	add    rbx,rbx
   140004403:	cmp    QWORD PTR [rdi+rbx*8],0x0
   140004408:	jne    0x14000441b
   14000440a:	call   0x140004304
   14000440f:	test   eax,eax
   140004411:	jne    0x14000441b
   140004413:	lea    ecx,[rax+0x11]
   140004416:	call   0x1400037e0
   14000441b:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14000441f:	mov    rbx,QWORD PTR [rsp+0x30]
   140004424:	add    rsp,0x20
   140004428:	pop    rdi
   140004429:	rex.W jmp QWORD PTR [rip+0x9c70]        # 0x14000e0a0
   140004430:	mov    QWORD PTR [rsp+0x8],rbx
   140004435:	mov    QWORD PTR [rsp+0x10],rsi
   14000443a:	mov    QWORD PTR [rsp+0x18],rdi
   14000443f:	push   rbp
   140004440:	push   r12
   140004442:	push   r13
   140004444:	mov    rbp,rsp
   140004447:	sub    rsp,0x50
   14000444b:	xor    ebx,ebx
   14000444d:	mov    r12,r8
   140004450:	mov    r13,rcx
   140004453:	mov    rsi,rdx
   140004456:	lea    rcx,[rbp-0x28]
   14000445a:	lea    r8d,[rbx+0x28]
   14000445e:	xor    edx,edx
   140004460:	mov    rdi,r9
   140004463:	mov    QWORD PTR [rbp-0x30],rbx
   140004467:	call   0x1400048d0
   14000446c:	test   rdi,rdi
   14000446f:	jne    0x140004486
   140004471:	call   0x140003250
   140004476:	mov    DWORD PTR [rax],0x16
   14000447c:	call   0x1400031e8
   140004481:	or     eax,0xffffffff
   140004484:	jmp    0x1400044fc
   140004486:	test   r12,r12
   140004489:	je     0x140004490
   14000448b:	test   rsi,rsi
   14000448e:	je     0x140004471
   140004490:	mov    r9,QWORD PTR [rbp+0x48]
   140004494:	mov    r8,QWORD PTR [rbp+0x40]
   140004498:	mov    ecx,0x7fffffff
   14000449d:	cmp    r12,rcx
   1400044a0:	mov    eax,r12d
   1400044a3:	mov    rdx,rdi
   1400044a6:	cmova  eax,ecx
   1400044a9:	lea    rcx,[rbp-0x30]
   1400044ad:	mov    DWORD PTR [rbp-0x18],0x42
   1400044b4:	mov    QWORD PTR [rbp-0x20],rsi
   1400044b8:	mov    QWORD PTR [rbp-0x30],rsi
   1400044bc:	mov    DWORD PTR [rbp-0x28],eax
   1400044bf:	call   r13
   1400044c2:	mov    edi,eax
   1400044c4:	test   rsi,rsi
   1400044c7:	je     0x1400044fc
   1400044c9:	test   eax,eax
   1400044cb:	js     0x1400044ee
   1400044cd:	dec    DWORD PTR [rbp-0x28]
   1400044d0:	js     0x1400044da
   1400044d2:	mov    rax,QWORD PTR [rbp-0x30]
   1400044d6:	mov    BYTE PTR [rax],bl
   1400044d8:	jmp    0x1400044ea
   1400044da:	lea    rdx,[rbp-0x30]
   1400044de:	xor    ecx,ecx
   1400044e0:	call   0x140004680
   1400044e5:	cmp    eax,0xffffffff
   1400044e8:	je     0x1400044ee
   1400044ea:	mov    eax,edi
   1400044ec:	jmp    0x1400044fc
   1400044ee:	cmp    DWORD PTR [rbp-0x28],ebx
   1400044f1:	mov    BYTE PTR [rsi+r12*1-0x1],bl
   1400044f6:	setge  bl
   1400044f9:	lea    eax,[rbx-0x2]
   1400044fc:	lea    r11,[rsp+0x50]
   140004501:	mov    rbx,QWORD PTR [r11+0x20]
   140004505:	mov    rsi,QWORD PTR [r11+0x28]
   140004509:	mov    rdi,QWORD PTR [r11+0x30]
   14000450d:	mov    rsp,r11
   140004510:	pop    r13
   140004512:	pop    r12
   140004514:	pop    rbp
   140004515:	ret    
   140004516:	int3   
   140004517:	int3   
   140004518:	mov    rax,rsp
   14000451b:	mov    QWORD PTR [rax+0x8],rbx
   14000451f:	mov    QWORD PTR [rax+0x10],rbp
   140004523:	mov    QWORD PTR [rax+0x18],rsi
   140004527:	mov    QWORD PTR [rax+0x20],rdi
   14000452b:	push   r12
   14000452d:	sub    rsp,0x30
   140004531:	mov    rbp,r9
   140004534:	mov    rsi,r8
   140004537:	mov    rbx,rdx
   14000453a:	mov    rdi,rcx
   14000453d:	test   r9,r9
   140004540:	je     0x140004632
   140004546:	test   r8,r8
   140004549:	jne    0x140004560
   14000454b:	test   rcx,rcx
   14000454e:	jne    0x140004569
   140004550:	test   rdx,rdx
   140004553:	jne    0x140004632
   140004559:	xor    eax,eax
   14000455b:	jmp    0x140004645
   140004560:	test   rcx,rcx
   140004563:	je     0x140004632
   140004569:	test   rdx,rdx
   14000456c:	je     0x140004632
   140004572:	cmp    rdx,r8
   140004575:	jbe    0x1400045c4
   140004577:	call   0x140003250
   14000457c:	lea    r8,[rsi+0x1]
   140004580:	lea    rcx,[rip+0x4b8d]        # 0x140009114
   140004587:	mov    ebx,DWORD PTR [rax]
   140004589:	mov    rax,QWORD PTR [rsp+0x68]
   14000458e:	mov    r9,rbp
   140004591:	mov    QWORD PTR [rsp+0x28],rax
   140004596:	mov    rax,QWORD PTR [rsp+0x60]
   14000459b:	mov    rdx,rdi
   14000459e:	mov    QWORD PTR [rsp+0x20],rax
   1400045a3:	call   0x140004430
   1400045a8:	cmp    eax,0xfffffffe
   1400045ab:	jne    0x140004619
   1400045ad:	call   0x140003250
   1400045b2:	cmp    DWORD PTR [rax],0x22
   1400045b5:	jne    0x140004642
   1400045bb:	call   0x140003250
   1400045c0:	mov    DWORD PTR [rax],ebx
   1400045c2:	jmp    0x140004642
   1400045c4:	call   0x140003250
   1400045c9:	lea    rcx,[rip+0x4b44]        # 0x140009114
   1400045d0:	mov    r9,rbp
   1400045d3:	mov    r12d,DWORD PTR [rax]
   1400045d6:	mov    rax,QWORD PTR [rsp+0x68]
   1400045db:	mov    r8,rbx
   1400045de:	mov    QWORD PTR [rsp+0x28],rax
   1400045e3:	mov    rax,QWORD PTR [rsp+0x60]
   1400045e8:	mov    rdx,rdi
   1400045eb:	mov    QWORD PTR [rsp+0x20],rax
   1400045f0:	call   0x140004430
   1400045f5:	mov    BYTE PTR [rdi+rbx*1-0x1],0x0
   1400045fa:	cmp    eax,0xfffffffe
   1400045fd:	jne    0x140004619
   1400045ff:	cmp    rsi,0xffffffffffffffff
   140004603:	jne    0x14000461d
   140004605:	call   0x140003250
   14000460a:	cmp    DWORD PTR [rax],0x22
   14000460d:	jne    0x140004642
   14000460f:	call   0x140003250
   140004614:	mov    DWORD PTR [rax],r12d
   140004617:	jmp    0x140004642
   140004619:	test   eax,eax
   14000461b:	jns    0x140004645
   14000461d:	mov    BYTE PTR [rdi],0x0
   140004620:	cmp    eax,0xfffffffe
   140004623:	jne    0x140004642
   140004625:	call   0x140003250
   14000462a:	mov    DWORD PTR [rax],0x22
   140004630:	jmp    0x14000463d
   140004632:	call   0x140003250
   140004637:	mov    DWORD PTR [rax],0x16
   14000463d:	call   0x1400031e8
   140004642:	or     eax,0xffffffff
   140004645:	mov    rbx,QWORD PTR [rsp+0x40]
   14000464a:	mov    rbp,QWORD PTR [rsp+0x48]
   14000464f:	mov    rsi,QWORD PTR [rsp+0x50]
   140004654:	mov    rdi,QWORD PTR [rsp+0x58]
   140004659:	add    rsp,0x30
   14000465d:	pop    r12
   14000465f:	ret    
   140004660:	sub    rsp,0x38
   140004664:	mov    rax,QWORD PTR [rsp+0x60]
   140004669:	mov    QWORD PTR [rsp+0x28],rax
   14000466e:	and    QWORD PTR [rsp+0x20],0x0
   140004674:	call   0x140004518
   140004679:	add    rsp,0x38
   14000467d:	ret    
   14000467e:	int3   
   14000467f:	int3   
   140004680:	mov    rax,rsp
   140004683:	mov    QWORD PTR [rax+0x10],rbx
   140004687:	mov    QWORD PTR [rax+0x18],rbp
   14000468b:	mov    QWORD PTR [rax+0x20],rsi
   14000468f:	mov    DWORD PTR [rax+0x8],ecx
   140004692:	push   rdi
   140004693:	sub    rsp,0x20
   140004697:	mov    rcx,rdx
   14000469a:	mov    rbx,rdx
   14000469d:	call   0x1400055bc
   1400046a2:	mov    ecx,DWORD PTR [rbx+0x18]
   1400046a5:	movsxd rsi,eax
   1400046a8:	test   cl,0x82
   1400046ab:	jne    0x1400046c4
   1400046ad:	call   0x140003250
   1400046b2:	mov    DWORD PTR [rax],0x9
   1400046b8:	or     DWORD PTR [rbx+0x18],0x20
   1400046bc:	or     eax,0xffffffff
   1400046bf:	jmp    0x1400047f8
   1400046c4:	test   cl,0x40
   1400046c7:	je     0x1400046d6
   1400046c9:	call   0x140003250
   1400046ce:	mov    DWORD PTR [rax],0x22
   1400046d4:	jmp    0x1400046b8
   1400046d6:	xor    edi,edi
   1400046d8:	test   cl,0x1
   1400046db:	je     0x1400046f6
   1400046dd:	mov    DWORD PTR [rbx+0x8],edi
   1400046e0:	test   cl,0x10
   1400046e3:	je     0x140004772
   1400046e9:	mov    rax,QWORD PTR [rbx+0x10]
   1400046ed:	and    ecx,0xfffffffe
   1400046f0:	mov    QWORD PTR [rbx],rax
   1400046f3:	mov    DWORD PTR [rbx+0x18],ecx
   1400046f6:	mov    eax,DWORD PTR [rbx+0x18]
   1400046f9:	mov    DWORD PTR [rbx+0x8],edi
   1400046fc:	and    eax,0xffffffef
   1400046ff:	or     eax,0x2
   140004702:	mov    DWORD PTR [rbx+0x18],eax
   140004705:	test   eax,0x10c
   14000470a:	jne    0x14000473b
   14000470c:	call   0x140001bd0
   140004711:	add    rax,0x30
   140004715:	cmp    rbx,rax
   140004718:	je     0x140004728
   14000471a:	call   0x140001bd0
   14000471f:	add    rax,0x60
   140004723:	cmp    rbx,rax
   140004726:	jne    0x140004733
   140004728:	mov    ecx,esi
   14000472a:	call   0x140009db4
   14000472f:	test   eax,eax
   140004731:	jne    0x14000473b
   140004733:	mov    rcx,rbx
   140004736:	call   0x140009d60
   14000473b:	test   DWORD PTR [rbx+0x18],0x108
   140004742:	je     0x1400047d5
   140004748:	mov    ebp,DWORD PTR [rbx]
   14000474a:	mov    rdx,QWORD PTR [rbx+0x10]
   14000474e:	sub    ebp,DWORD PTR [rbx+0x10]
   140004751:	lea    rax,[rdx+0x1]
   140004755:	mov    QWORD PTR [rbx],rax
   140004758:	mov    eax,DWORD PTR [rbx+0x24]
   14000475b:	dec    eax
   14000475d:	mov    DWORD PTR [rbx+0x8],eax
   140004760:	test   ebp,ebp
   140004762:	jle    0x14000477d
   140004764:	mov    r8d,ebp
   140004767:	mov    ecx,esi
   140004769:	call   0x140008f14
   14000476e:	mov    edi,eax
   140004770:	jmp    0x1400047c9
   140004772:	or     ecx,0x20
   140004775:	mov    DWORD PTR [rbx+0x18],ecx
   140004778:	jmp    0x1400046bc
   14000477d:	cmp    esi,0xffffffff
   140004780:	je     0x1400047a5
   140004782:	cmp    esi,0xfffffffe
   140004785:	je     0x1400047a5
   140004787:	mov    rcx,rsi
   14000478a:	mov    rax,rsi
   14000478d:	lea    rdx,[rip+0xfe8c]        # 0x140014620
   140004794:	and    ecx,0x1f
   140004797:	sar    rax,0x5
   14000479b:	imul   rcx,rcx,0x58
   14000479f:	add    rcx,QWORD PTR [rdx+rax*8]
   1400047a3:	jmp    0x1400047ac
   1400047a5:	lea    rcx,[rip+0xdda4]        # 0x140012550
   1400047ac:	test   BYTE PTR [rcx+0x8],0x20
   1400047b0:	je     0x1400047c9
   1400047b2:	xor    edx,edx
   1400047b4:	mov    ecx,esi
   1400047b6:	lea    r8d,[rdx+0x2]
   1400047ba:	call   0x140009c7c
   1400047bf:	cmp    rax,0xffffffffffffffff
   1400047c3:	je     0x1400046b8
   1400047c9:	mov    rcx,QWORD PTR [rbx+0x10]
   1400047cd:	mov    al,BYTE PTR [rsp+0x30]
   1400047d1:	mov    BYTE PTR [rcx],al
   1400047d3:	jmp    0x1400047eb
   1400047d5:	mov    ebp,0x1
   1400047da:	lea    rdx,[rsp+0x30]
   1400047df:	mov    ecx,esi
   1400047e1:	mov    r8d,ebp
   1400047e4:	call   0x140008f14
   1400047e9:	mov    edi,eax
   1400047eb:	cmp    edi,ebp
   1400047ed:	jne    0x1400046b8
   1400047f3:	movzx  eax,BYTE PTR [rsp+0x30]
   1400047f8:	mov    rbx,QWORD PTR [rsp+0x38]
   1400047fd:	mov    rbp,QWORD PTR [rsp+0x40]
   140004802:	mov    rsi,QWORD PTR [rsp+0x48]
   140004807:	add    rsp,0x20
   14000480b:	pop    rdi
   14000480c:	ret    
   14000480d:	int3   
   14000480e:	int3   
   14000480f:	int3   
   140004810:	rex push rbx
   140004812:	sub    rsp,0x20
   140004816:	mov    rbx,rcx
   140004819:	mov    BYTE PTR [rcx+0x18],0x0
   14000481d:	test   rdx,rdx
   140004820:	jne    0x1400048a1
   140004822:	call   0x140006f38
   140004827:	mov    QWORD PTR [rbx+0x10],rax
   14000482b:	mov    rdx,QWORD PTR [rax+0xc0]
   140004832:	mov    QWORD PTR [rbx],rdx
   140004835:	mov    rcx,QWORD PTR [rax+0xb8]
   14000483c:	mov    QWORD PTR [rbx+0x8],rcx
   140004840:	cmp    rdx,QWORD PTR [rip+0xea89]        # 0x1400132d0
   140004847:	je     0x14000485f
   140004849:	mov    eax,DWORD PTR [rax+0xc8]
   14000484f:	test   DWORD PTR [rip+0xe64b],eax        # 0x140012ea0
   140004855:	jne    0x14000485f
   140004857:	call   0x14000a960
   14000485c:	mov    QWORD PTR [rbx],rax
   14000485f:	mov    rax,QWORD PTR [rip+0xe53a]        # 0x140012da0
   140004866:	cmp    QWORD PTR [rbx+0x8],rax
   14000486a:	je     0x140004887
   14000486c:	mov    rax,QWORD PTR [rbx+0x10]
   140004870:	mov    ecx,DWORD PTR [rax+0xc8]
   140004876:	test   DWORD PTR [rip+0xe624],ecx        # 0x140012ea0
   14000487c:	jne    0x140004887
   14000487e:	call   0x14000a090
   140004883:	mov    QWORD PTR [rbx+0x8],rax
   140004887:	mov    rax,QWORD PTR [rbx+0x10]
   14000488b:	test   BYTE PTR [rax+0xc8],0x2
   140004892:	jne    0x1400048a8
   140004894:	or     DWORD PTR [rax+0xc8],0x2
   14000489b:	mov    BYTE PTR [rbx+0x18],0x1
   14000489f:	jmp    0x1400048a8
   1400048a1:	movups xmm0,XMMWORD PTR [rdx]
   1400048a4:	movdqu XMMWORD PTR [rcx],xmm0
   1400048a8:	mov    rax,rbx
   1400048ab:	add    rsp,0x20
   1400048af:	pop    rbx
   1400048b0:	ret    
   1400048b1:	int3   
   1400048b2:	int3   
   1400048b3:	int3   
   1400048b4:	int3   
   1400048b5:	int3   
   1400048b6:	int3   
   1400048b7:	int3   
   1400048b8:	int3   
   1400048b9:	int3   
   1400048ba:	int3   
   1400048bb:	int3   
   1400048bc:	int3   
   1400048bd:	int3   
   1400048be:	int3   
   1400048bf:	int3   
   1400048c0:	int3   
   1400048c1:	int3   
   1400048c2:	int3   
   1400048c3:	int3   
   1400048c4:	int3   
   1400048c5:	int3   
   1400048c6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400048d0:	mov    rax,rcx
   1400048d3:	cmp    r8,0x8
   1400048d7:	jb     0x14000492c
   1400048d9:	movzx  edx,dl
   1400048dc:	movabs r9,0x101010101010101
   1400048e6:	imul   rdx,r9
   1400048ea:	cmp    r8,0x40
   1400048ee:	jb     0x14000490e
   1400048f0:	neg    rcx
   1400048f3:	and    ecx,0x7
   1400048f6:	je     0x1400048fe
   1400048f8:	sub    r8,rcx
   1400048fb:	mov    QWORD PTR [rax],rdx
   1400048fe:	add    rcx,rax
   140004901:	mov    r9,r8
   140004904:	and    r8,0x3f
   140004908:	shr    r9,0x6
   14000490c:	jne    0x140004947
   14000490e:	mov    r9,r8
   140004911:	and    r8,0x7
   140004915:	shr    r9,0x3
   140004919:	je     0x14000492c
   14000491b:	data16 data16 xchg ax,ax
   14000491f:	nop
   140004920:	mov    QWORD PTR [rcx],rdx
   140004923:	add    rcx,0x8
   140004927:	dec    r9
   14000492a:	jne    0x140004920
   14000492c:	test   r8,r8
   14000492f:	je     0x14000493b
   140004931:	mov    BYTE PTR [rcx],dl
   140004933:	inc    rcx
   140004936:	dec    r8
   140004939:	jne    0x140004931
   14000493b:	ret    
   14000493c:	nop    DWORD PTR [rax+0x0]
   140004940:	data16 data16 xchg ax,ax
   140004944:	data16 xchg ax,ax
   140004947:	cmp    r9,0x1c00
   14000494e:	jae    0x140004980
   140004950:	mov    QWORD PTR [rcx],rdx
   140004953:	mov    QWORD PTR [rcx+0x8],rdx
   140004957:	mov    QWORD PTR [rcx+0x10],rdx
   14000495b:	add    rcx,0x40
   14000495f:	mov    QWORD PTR [rcx-0x28],rdx
   140004963:	mov    QWORD PTR [rcx-0x20],rdx
   140004967:	dec    r9
   14000496a:	mov    QWORD PTR [rcx-0x18],rdx
   14000496e:	mov    QWORD PTR [rcx-0x10],rdx
   140004972:	mov    QWORD PTR [rcx-0x8],rdx
   140004976:	jne    0x140004950
   140004978:	jmp    0x14000490e
   14000497a:	nop    WORD PTR [rax+rax*1+0x0]
   140004980:	movnti QWORD PTR [rcx],rdx
   140004984:	movnti QWORD PTR [rcx+0x8],rdx
   140004989:	movnti QWORD PTR [rcx+0x10],rdx
   14000498e:	add    rcx,0x40
   140004992:	movnti QWORD PTR [rcx-0x28],rdx
   140004997:	movnti QWORD PTR [rcx-0x20],rdx
   14000499c:	dec    r9
   14000499f:	movnti QWORD PTR [rcx-0x18],rdx
   1400049a4:	movnti QWORD PTR [rcx-0x10],rdx
   1400049a9:	movnti QWORD PTR [rcx-0x8],rdx
   1400049ae:	jne    0x140004980
   1400049b0:	lock or BYTE PTR [rsp],0x0
   1400049b5:	jmp    0x14000490e
   1400049ba:	int3   
   1400049bb:	int3   
   1400049bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400049c1:	mov    QWORD PTR [rsp+0x10],rsi
   1400049c6:	mov    QWORD PTR [rsp+0x18],rdi
   1400049cb:	push   rbp
   1400049cc:	push   r12
   1400049ce:	push   r13
   1400049d0:	mov    rbp,rsp
   1400049d3:	sub    rsp,0x50
   1400049d7:	xor    ebx,ebx
   1400049d9:	mov    r12,r8
   1400049dc:	mov    r13,rcx
   1400049df:	mov    rsi,rdx
   1400049e2:	lea    rcx,[rbp-0x28]
   1400049e6:	lea    r8d,[rbx+0x28]
   1400049ea:	xor    edx,edx
   1400049ec:	mov    rdi,r9
   1400049ef:	mov    QWORD PTR [rbp-0x30],rbx
   1400049f3:	call   0x1400048d0
   1400049f8:	test   rdi,rdi
   1400049fb:	jne    0x140004a15
   1400049fd:	call   0x140003250
   140004a02:	mov    DWORD PTR [rax],0x16
   140004a08:	call   0x1400031e8
   140004a0d:	or     eax,0xffffffff
   140004a10:	jmp    0x140004abc
   140004a15:	test   r12,r12
   140004a18:	je     0x140004a1f
   140004a1a:	test   rsi,rsi
   140004a1d:	je     0x1400049fd
   140004a1f:	mov    DWORD PTR [rbp-0x18],0x42
   140004a26:	mov    QWORD PTR [rbp-0x20],rsi
   140004a2a:	mov    QWORD PTR [rbp-0x30],rsi
   140004a2e:	cmp    r12,0x3fffffff
   140004a35:	jbe    0x140004a40
   140004a37:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   140004a3e:	jmp    0x140004a47
   140004a40:	lea    eax,[r12+r12*1]
   140004a44:	mov    DWORD PTR [rbp-0x28],eax
   140004a47:	mov    r9,QWORD PTR [rbp+0x48]
   140004a4b:	mov    r8,QWORD PTR [rbp+0x40]
   140004a4f:	lea    rcx,[rbp-0x30]
   140004a53:	mov    rdx,rdi
   140004a56:	call   r13
   140004a59:	mov    edi,eax
   140004a5b:	test   rsi,rsi
   140004a5e:	je     0x140004abc
   140004a60:	test   eax,eax
   140004a62:	js     0x140004aad
   140004a64:	dec    DWORD PTR [rbp-0x28]
   140004a67:	js     0x140004a7c
   140004a69:	mov    rax,QWORD PTR [rbp-0x30]
   140004a6d:	mov    BYTE PTR [rax],bl
   140004a6f:	mov    rax,QWORD PTR [rbp-0x30]
   140004a73:	inc    rax
   140004a76:	mov    QWORD PTR [rbp-0x30],rax
   140004a7a:	jmp    0x140004a90
   140004a7c:	lea    rdx,[rbp-0x30]
   140004a80:	xor    ecx,ecx
   140004a82:	call   0x140004680
   140004a87:	cmp    eax,0xffffffff
   140004a8a:	je     0x140004aad
   140004a8c:	mov    rax,QWORD PTR [rbp-0x30]
   140004a90:	dec    DWORD PTR [rbp-0x28]
   140004a93:	js     0x140004a99
   140004a95:	mov    BYTE PTR [rax],bl
   140004a97:	jmp    0x140004aa9
   140004a99:	lea    rdx,[rbp-0x30]
   140004a9d:	xor    ecx,ecx
   140004a9f:	call   0x140004680
   140004aa4:	cmp    eax,0xffffffff
   140004aa7:	je     0x140004aad
   140004aa9:	mov    eax,edi
   140004aab:	jmp    0x140004abc
   140004aad:	cmp    DWORD PTR [rbp-0x28],ebx
   140004ab0:	mov    WORD PTR [rsi+r12*2-0x2],bx
   140004ab6:	setge  bl
   140004ab9:	lea    eax,[rbx-0x2]
   140004abc:	lea    r11,[rsp+0x50]
   140004ac1:	mov    rbx,QWORD PTR [r11+0x20]
   140004ac5:	mov    rsi,QWORD PTR [r11+0x28]
   140004ac9:	mov    rdi,QWORD PTR [r11+0x30]
   140004acd:	mov    rsp,r11
   140004ad0:	pop    r13
   140004ad2:	pop    r12
   140004ad4:	pop    rbp
   140004ad5:	ret    
   140004ad6:	int3   
   140004ad7:	int3   
   140004ad8:	mov    QWORD PTR [rsp+0x8],rbx
   140004add:	mov    QWORD PTR [rsp+0x10],rbp
   140004ae2:	mov    QWORD PTR [rsp+0x18],rsi
   140004ae7:	push   rdi
   140004ae8:	push   r12
   140004aea:	push   r13
   140004aec:	sub    rsp,0x30
   140004af0:	xor    r13d,r13d
   140004af3:	mov    rbp,r9
   140004af6:	mov    rsi,r8
   140004af9:	mov    rbx,rdx
   140004afc:	mov    rdi,rcx
   140004aff:	test   r9,r9
   140004b02:	je     0x140004bf9
   140004b08:	test   r8,r8
   140004b0b:	jne    0x140004b22
   140004b0d:	test   rcx,rcx
   140004b10:	jne    0x140004b2b
   140004b12:	test   rdx,rdx
   140004b15:	jne    0x140004bf9
   140004b1b:	xor    eax,eax
   140004b1d:	jmp    0x140004c0c
   140004b22:	test   rcx,rcx
   140004b25:	je     0x140004bf9
   140004b2b:	test   rdx,rdx
   140004b2e:	je     0x140004bf9
   140004b34:	cmp    rdx,r8
   140004b37:	jbe    0x140004b89
   140004b39:	call   0x140003250
   140004b3e:	lea    r8,[rsi+0x1]
   140004b42:	lea    rcx,[rip+0x63df]        # 0x14000af28
   140004b49:	mov    ebx,DWORD PTR [rax]
   140004b4b:	mov    rax,QWORD PTR [rsp+0x78]
   140004b50:	mov    r9,rbp
   140004b53:	mov    QWORD PTR [rsp+0x28],rax
   140004b58:	mov    rax,QWORD PTR [rsp+0x70]
   140004b5d:	mov    rdx,rdi
   140004b60:	mov    QWORD PTR [rsp+0x20],rax
   140004b65:	call   0x1400049bc
   140004b6a:	cmp    eax,0xfffffffe
   140004b6d:	jne    0x140004bdf
   140004b6f:	call   0x140003250
   140004b74:	cmp    DWORD PTR [rax],0x22
   140004b77:	jne    0x140004c09
   140004b7d:	call   0x140003250
   140004b82:	mov    DWORD PTR [rax],ebx
   140004b84:	jmp    0x140004c09
   140004b89:	call   0x140003250
   140004b8e:	lea    rcx,[rip+0x6393]        # 0x14000af28
   140004b95:	mov    r9,rbp
   140004b98:	mov    r12d,DWORD PTR [rax]
   140004b9b:	mov    rax,QWORD PTR [rsp+0x78]
   140004ba0:	mov    r8,rbx
   140004ba3:	mov    QWORD PTR [rsp+0x28],rax
   140004ba8:	mov    rax,QWORD PTR [rsp+0x70]
   140004bad:	mov    rdx,rdi
   140004bb0:	mov    QWORD PTR [rsp+0x20],rax
   140004bb5:	call   0x1400049bc
   140004bba:	mov    WORD PTR [rdi+rbx*2-0x2],r13w
   140004bc0:	cmp    eax,0xfffffffe
   140004bc3:	jne    0x140004bdf
   140004bc5:	cmp    rsi,0xffffffffffffffff
   140004bc9:	jne    0x140004be3
   140004bcb:	call   0x140003250
   140004bd0:	cmp    DWORD PTR [rax],0x22
   140004bd3:	jne    0x140004c09
   140004bd5:	call   0x140003250
   140004bda:	mov    DWORD PTR [rax],r12d
   140004bdd:	jmp    0x140004c09
   140004bdf:	test   eax,eax
   140004be1:	jns    0x140004c0c
   140004be3:	mov    WORD PTR [rdi],r13w
   140004be7:	cmp    eax,0xfffffffe
   140004bea:	jne    0x140004c09
   140004bec:	call   0x140003250
   140004bf1:	mov    DWORD PTR [rax],0x22
   140004bf7:	jmp    0x140004c04
   140004bf9:	call   0x140003250
   140004bfe:	mov    DWORD PTR [rax],0x16
   140004c04:	call   0x1400031e8
   140004c09:	or     eax,0xffffffff
   140004c0c:	mov    rbx,QWORD PTR [rsp+0x50]
   140004c11:	mov    rbp,QWORD PTR [rsp+0x58]
   140004c16:	mov    rsi,QWORD PTR [rsp+0x60]
   140004c1b:	add    rsp,0x30
   140004c1f:	pop    r13
   140004c21:	pop    r12
   140004c23:	pop    rdi
   140004c24:	ret    
   140004c25:	int3   
   140004c26:	int3   
   140004c27:	int3   
   140004c28:	mov    QWORD PTR [rsp+0x8],rbx
   140004c2d:	mov    QWORD PTR [rsp+0x10],rsi
   140004c32:	push   rdi
   140004c33:	sub    rsp,0x20
   140004c37:	mov    rdi,rcx
   140004c3a:	test   rcx,rcx
   140004c3d:	jne    0x140004c54
   140004c3f:	call   0x140003250
   140004c44:	mov    DWORD PTR [rax],0x16
   140004c4a:	call   0x1400031e8
   140004c4f:	jmp    0x140004d67
   140004c54:	mov    eax,DWORD PTR [rcx+0x18]
   140004c57:	test   al,0x83
   140004c59:	je     0x140004d67
   140004c5f:	test   al,0x40
   140004c61:	jne    0x140004d67
   140004c67:	test   al,0x2
   140004c69:	je     0x140004c76
   140004c6b:	or     eax,0x20
   140004c6e:	mov    DWORD PTR [rcx+0x18],eax
   140004c71:	jmp    0x140004d67
   140004c76:	or     eax,0x1
   140004c79:	mov    DWORD PTR [rcx+0x18],eax
   140004c7c:	test   eax,0x10c
   140004c81:	jne    0x140004c8a
   140004c83:	call   0x140009d60
   140004c88:	jmp    0x140004c91
   140004c8a:	mov    rax,QWORD PTR [rcx+0x10]
   140004c8e:	mov    QWORD PTR [rcx],rax
   140004c91:	mov    rcx,rdi
   140004c94:	call   0x1400055bc
   140004c99:	mov    r8d,DWORD PTR [rdi+0x24]
   140004c9d:	mov    rdx,QWORD PTR [rdi+0x10]
   140004ca1:	mov    ecx,eax
   140004ca3:	call   0x1400054a0
   140004ca8:	mov    DWORD PTR [rdi+0x8],eax
   140004cab:	test   eax,eax
   140004cad:	je     0x140004d56
   140004cb3:	cmp    eax,0xffffffff
   140004cb6:	je     0x140004d56
   140004cbc:	test   BYTE PTR [rdi+0x18],0x82
   140004cc0:	jne    0x140004d21
   140004cc2:	mov    rcx,rdi
   140004cc5:	call   0x1400055bc
   140004cca:	cmp    eax,0xffffffff
   140004ccd:	je     0x140004d0b
   140004ccf:	mov    rcx,rdi
   140004cd2:	call   0x1400055bc
   140004cd7:	cmp    eax,0xfffffffe
   140004cda:	je     0x140004d0b
   140004cdc:	mov    rcx,rdi
   140004cdf:	call   0x1400055bc
   140004ce4:	mov    rcx,rdi
   140004ce7:	lea    rsi,[rip+0xf932]        # 0x140014620
   140004cee:	movsxd rbx,eax
   140004cf1:	sar    rbx,0x5
   140004cf5:	call   0x1400055bc
   140004cfa:	mov    r11d,eax
   140004cfd:	and    r11d,0x1f
   140004d01:	imul   r11,r11,0x58
   140004d05:	add    r11,QWORD PTR [rsi+rbx*8]
   140004d09:	jmp    0x140004d12
   140004d0b:	lea    r11,[rip+0xd83e]        # 0x140012550
   140004d12:	mov    al,BYTE PTR [r11+0x8]
   140004d16:	and    al,0x82
   140004d18:	cmp    al,0x82
   140004d1a:	jne    0x140004d21
   140004d1c:	bts    DWORD PTR [rdi+0x18],0xd
   140004d21:	cmp    DWORD PTR [rdi+0x24],0x200
   140004d28:	jne    0x140004d45
   140004d2a:	test   BYTE PTR [rdi+0x18],0x8
   140004d2e:	je     0x140004d45
   140004d30:	mov    eax,DWORD PTR [rdi+0x24]
   140004d33:	test   DWORD PTR [rdi+0x18],0x400
   140004d3a:	mov    ecx,0x1000
   140004d3f:	cmove  eax,ecx
   140004d42:	mov    DWORD PTR [rdi+0x24],eax
   140004d45:	mov    rcx,QWORD PTR [rdi]
   140004d48:	dec    DWORD PTR [rdi+0x8]
   140004d4b:	movzx  eax,BYTE PTR [rcx]
   140004d4e:	inc    rcx
   140004d51:	mov    QWORD PTR [rdi],rcx
   140004d54:	jmp    0x140004d6a
   140004d56:	neg    eax
   140004d58:	sbb    eax,eax
   140004d5a:	and    eax,0x10
   140004d5d:	add    eax,0x10
   140004d60:	or     DWORD PTR [rdi+0x18],eax
   140004d63:	and    DWORD PTR [rdi+0x8],0x0
   140004d67:	or     eax,0xffffffff
   140004d6a:	mov    rbx,QWORD PTR [rsp+0x30]
   140004d6f:	mov    rsi,QWORD PTR [rsp+0x38]
   140004d74:	add    rsp,0x20
   140004d78:	pop    rdi
   140004d79:	ret    
   140004d7a:	int3   
   140004d7b:	int3   
   140004d7c:	mov    QWORD PTR [rsp+0x10],rdx
   140004d81:	mov    DWORD PTR [rsp+0x8],ecx
   140004d85:	push   rbp
   140004d86:	push   rbx
   140004d87:	push   rsi
   140004d88:	push   rdi
   140004d89:	push   r12
   140004d8b:	push   r13
   140004d8d:	push   r14
   140004d8f:	push   r15
   140004d91:	mov    rbp,rsp
   140004d94:	sub    rsp,0x58
   140004d98:	movsxd rax,ecx
   140004d9b:	mov    ebx,r8d
   140004d9e:	mov    DWORD PTR [rbp-0x20],0xfffffffe
   140004da5:	mov    DWORD PTR [rbp-0x1c],ebx
   140004da8:	cmp    eax,0xfffffffe
   140004dab:	jne    0x140004dc6
   140004dad:	call   0x140003270
   140004db2:	xor    edi,edi
   140004db4:	mov    DWORD PTR [rax],edi
   140004db6:	call   0x140003250
   140004dbb:	mov    DWORD PTR [rax],0x9
   140004dc1:	jmp    0x14000548b
   140004dc6:	xor    edi,edi
   140004dc8:	test   ecx,ecx
   140004dca:	js     0x140005474
   140004dd0:	cmp    eax,DWORD PTR [rip+0xf82a]        # 0x140014600
   140004dd6:	jae    0x140005474
   140004ddc:	mov    rsi,rax
   140004ddf:	mov    r15,rax
   140004de2:	lea    r9,[rip+0xffffffffffffb217]        # 0x140000000
   140004de9:	sar    r15,0x5
   140004ded:	and    esi,0x1f
   140004df0:	mov    rcx,QWORD PTR [r9+r15*8+0x14620]
   140004df8:	imul   rsi,rsi,0x58
   140004dfc:	mov    al,BYTE PTR [rcx+rsi*1+0x8]
   140004e00:	test   al,0x1
   140004e02:	je     0x140005474
   140004e08:	cmp    ebx,0x7fffffff
   140004e0e:	jbe    0x140004e27
   140004e10:	call   0x140003270
   140004e15:	mov    DWORD PTR [rax],edi
   140004e17:	call   0x140003250
   140004e1c:	mov    DWORD PTR [rax],0x16
   140004e22:	jmp    0x140005486
   140004e27:	mov    r12d,edi
   140004e2a:	test   ebx,ebx
   140004e2c:	je     0x140005470
   140004e32:	test   al,0x2
   140004e34:	jne    0x140005470
   140004e3a:	test   rdx,rdx
   140004e3d:	je     0x140004e10
   140004e3f:	mov    r13b,BYTE PTR [rcx+rsi*1+0x38]
   140004e44:	mov    r8d,0x4
   140004e4a:	add    r13b,r13b
   140004e4d:	sar    r13b,1
   140004e50:	movsx  ecx,r13b
   140004e54:	mov    BYTE PTR [rbp+0x60],r13b
   140004e58:	dec    ecx
   140004e5a:	je     0x140004e70
   140004e5c:	dec    ecx
   140004e5e:	jne    0x140004e6b
   140004e60:	mov    eax,ebx
   140004e62:	not    eax
   140004e64:	test   al,0x1
   140004e66:	je     0x140004e10
   140004e68:	and    ebx,0xfffffffe
   140004e6b:	mov    r14,rdx
   140004e6e:	jmp    0x140004ed0
   140004e70:	mov    eax,ebx
   140004e72:	not    eax
   140004e74:	test   al,0x1
   140004e76:	je     0x140004e10
   140004e78:	shr    ebx,1
   140004e7a:	cmp    ebx,r8d
   140004e7d:	cmovb  ebx,r8d
   140004e81:	mov    ecx,ebx
   140004e83:	call   0x140003de8
   140004e88:	mov    r14,rax
   140004e8b:	test   rax,rax
   140004e8e:	jne    0x140004eab
   140004e90:	call   0x140003250
   140004e95:	mov    DWORD PTR [rax],0xc
   140004e9b:	call   0x140003270
   140004ea0:	mov    DWORD PTR [rax],0x8
   140004ea6:	jmp    0x14000548b
   140004eab:	mov    ecx,DWORD PTR [rbp+0x48]
   140004eae:	xor    edx,edx
   140004eb0:	lea    r8d,[rdx+0x1]
   140004eb4:	call   0x140009be4
   140004eb9:	lea    r9,[rip+0xffffffffffffb140]        # 0x140000000
   140004ec0:	mov    r11,rax
   140004ec3:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   140004ecb:	mov    QWORD PTR [rax+rsi*1+0x40],r11
   140004ed0:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   140004ed8:	mov    rdx,r14
   140004edb:	mov    r8d,0xa
   140004ee1:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   140004ee6:	je     0x140004f87
   140004eec:	mov    cl,BYTE PTR [rax+rsi*1+0x9]
   140004ef0:	cmp    cl,r8b
   140004ef3:	je     0x140004f87
   140004ef9:	test   ebx,ebx
   140004efb:	je     0x140004f87
   140004f01:	mov    BYTE PTR [r14],cl
   140004f04:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   140004f0c:	or     r10d,0xffffffff
   140004f10:	add    ebx,r10d
   140004f13:	lea    rdx,[r14+0x1]
   140004f17:	lea    r12d,[r8-0x9]
   140004f1b:	mov    BYTE PTR [rax+rsi*1+0x9],r8b
   140004f20:	test   r13b,r13b
   140004f23:	je     0x140004f87
   140004f25:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   140004f2d:	mov    cl,BYTE PTR [rax+rsi*1+0x39]
   140004f31:	cmp    cl,r8b
   140004f34:	je     0x140004f87
   140004f36:	test   ebx,ebx
   140004f38:	je     0x140004f87
   140004f3a:	mov    BYTE PTR [rdx],cl
   140004f3c:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   140004f44:	add    ebx,r10d
   140004f47:	inc    rdx
   140004f4a:	lea    r12d,[r8-0x8]
   140004f4e:	mov    BYTE PTR [rax+rsi*1+0x39],r8b
   140004f53:	cmp    r13b,0x1
   140004f57:	jne    0x140004f87
   140004f59:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   140004f61:	mov    cl,BYTE PTR [rax+rsi*1+0x3a]
   140004f65:	cmp    cl,r8b
   140004f68:	je     0x140004f87
   140004f6a:	test   ebx,ebx
   140004f6c:	je     0x140004f87
   140004f6e:	mov    BYTE PTR [rdx],cl
   140004f70:	mov    rax,QWORD PTR [r9+r15*8+0x14620]
   140004f78:	inc    rdx
   140004f7b:	lea    r12d,[r8-0x7]
   140004f7f:	add    ebx,r10d
   140004f82:	mov    BYTE PTR [rax+rsi*1+0x3a],r8b
   140004f87:	mov    rcx,QWORD PTR [r9+r15*8+0x14620]
   140004f8f:	lea    r9,[rbp-0x24]
   140004f93:	mov    r8d,ebx
   140004f96:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140004f9a:	mov    QWORD PTR [rsp+0x20],rdi
   140004f9f:	call   QWORD PTR [rip+0x91cb]        # 0x14000e170
   140004fa5:	test   eax,eax
   140004fa7:	je     0x140005435
   140004fad:	movsxd rdx,DWORD PTR [rbp-0x24]
   140004fb1:	test   edx,edx
   140004fb3:	js     0x140005435
   140004fb9:	mov    eax,ebx
   140004fbb:	cmp    rdx,rax
   140004fbe:	ja     0x140005435
   140004fc4:	lea    r8,[rip+0xffffffffffffb035]        # 0x140000000
   140004fcb:	add    r12d,edx
   140004fce:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   140004fd6:	test   BYTE PTR [rax+rsi*1+0x8],0x80
   140004fdb:	je     0x140005416
   140004fe1:	cmp    r13b,0x2
   140004fe5:	je     0x140005277
   140004feb:	test   edx,edx
   140004fed:	je     0x140004ffc
   140004fef:	cmp    BYTE PTR [r14],0xa
   140004ff3:	jne    0x140004ffc
   140004ff5:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   140004ffa:	jmp    0x140005001
   140004ffc:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   140005001:	movsxd rax,r12d
   140005004:	mov    rbx,r14
   140005007:	mov    r13,r14
   14000500a:	add    rax,r14
   14000500d:	mov    QWORD PTR [rbp-0x18],rax
   140005011:	cmp    r14,rax
   140005014:	jae    0x140005135
   14000501a:	mov    r12d,0xd
   140005020:	mov    al,BYTE PTR [r13+0x0]
   140005024:	cmp    al,0x1a
   140005026:	je     0x140005116
   14000502c:	cmp    al,r12b
   14000502f:	je     0x14000503e
   140005031:	mov    BYTE PTR [rbx],al
   140005033:	inc    rbx
   140005036:	inc    r13
   140005039:	jmp    0x14000510a
   14000503e:	mov    rax,QWORD PTR [rbp-0x18]
   140005042:	dec    rax
   140005045:	cmp    r13,rax
   140005048:	jae    0x140005061
   14000504a:	lea    rax,[r13+0x1]
   14000504e:	cmp    BYTE PTR [rax],0xa
   140005051:	jne    0x140005059
   140005053:	add    r13,0x2
   140005057:	jmp    0x1400050d7
   140005059:	mov    r13,rax
   14000505c:	jmp    0x140005104
   140005061:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   140005069:	lea    r9,[rbp-0x24]
   14000506d:	lea    rdx,[rbp+0x58]
   140005071:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140005075:	mov    r8d,0x1
   14000507b:	inc    r13
   14000507e:	mov    QWORD PTR [rsp+0x20],rdi
   140005083:	call   QWORD PTR [rip+0x90e7]        # 0x14000e170
   140005089:	test   eax,eax
   14000508b:	jne    0x140005097
   14000508d:	call   QWORD PTR [rip+0x8fdd]        # 0x14000e070
   140005093:	test   eax,eax
   140005095:	jne    0x1400050fd
   140005097:	cmp    DWORD PTR [rbp-0x24],edi
   14000509a:	je     0x1400050fd
   14000509c:	lea    r8,[rip+0xffffffffffffaf5d]        # 0x140000000
   1400050a3:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   1400050ab:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   1400050b0:	je     0x1400050cc
   1400050b2:	cmp    BYTE PTR [rbp+0x58],0xa
   1400050b6:	je     0x1400050d7
   1400050b8:	mov    BYTE PTR [rbx],r12b
   1400050bb:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   1400050c3:	mov    al,BYTE PTR [rbp+0x58]
   1400050c6:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   1400050ca:	jmp    0x140005107
   1400050cc:	cmp    rbx,r14
   1400050cf:	jne    0x1400050dc
   1400050d1:	cmp    BYTE PTR [rbp+0x58],0xa
   1400050d5:	jne    0x1400050dc
   1400050d7:	mov    BYTE PTR [rbx],0xa
   1400050da:	jmp    0x140005107
   1400050dc:	mov    ecx,DWORD PTR [rbp+0x48]
   1400050df:	mov    r8d,0x1
   1400050e5:	or     rdx,0xffffffffffffffff
   1400050e9:	call   0x140009be4
   1400050ee:	cmp    BYTE PTR [rbp+0x58],0xa
   1400050f2:	lea    r8,[rip+0xffffffffffffaf07]        # 0x140000000
   1400050f9:	je     0x14000510a
   1400050fb:	jmp    0x140005104
   1400050fd:	lea    r8,[rip+0xffffffffffffaefc]        # 0x140000000
   140005104:	mov    BYTE PTR [rbx],r12b
   140005107:	inc    rbx
   14000510a:	cmp    r13,QWORD PTR [rbp-0x18]
   14000510e:	jb     0x140005020
   140005114:	jmp    0x140005135
   140005116:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   14000511e:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   140005123:	jne    0x14000512c
   140005125:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   14000512a:	jmp    0x140005135
   14000512c:	mov    al,BYTE PTR [r13+0x0]
   140005130:	mov    BYTE PTR [rbx],al
   140005132:	inc    rbx
   140005135:	mov    r12d,ebx
   140005138:	sub    r12d,r14d
   14000513b:	cmp    BYTE PTR [rbp+0x60],0x1
   14000513f:	jne    0x140005416
   140005145:	test   r12d,r12d
   140005148:	je     0x140005416
   14000514e:	dec    rbx
   140005151:	test   BYTE PTR [rbx],0x80
   140005154:	jne    0x14000515e
   140005156:	inc    rbx
   140005159:	jmp    0x14000520f
   14000515e:	mov    edx,0x1
   140005163:	jmp    0x140005174
   140005165:	cmp    edx,0x4
   140005168:	jg     0x140005181
   14000516a:	cmp    rbx,r14
   14000516d:	jb     0x140005181
   14000516f:	dec    rbx
   140005172:	inc    edx
   140005174:	movzx  eax,BYTE PTR [rbx]
   140005177:	cmp    BYTE PTR [rax+r8*1+0x127f0],dil
   14000517f:	je     0x140005165
   140005181:	movzx  ecx,BYTE PTR [rbx]
   140005184:	movsx  eax,BYTE PTR [rcx+r8*1+0x127f0]
   14000518d:	test   eax,eax
   14000518f:	jne    0x1400051a4
   140005191:	call   0x140003250
   140005196:	mov    DWORD PTR [rax],0x2a
   14000519c:	or     ebx,0xffffffff
   14000519f:	jmp    0x140005419
   1400051a4:	inc    eax
   1400051a6:	cmp    eax,edx
   1400051a8:	jne    0x1400051b2
   1400051aa:	movsxd rax,edx
   1400051ad:	add    rbx,rax
   1400051b0:	jmp    0x14000520f
   1400051b2:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   1400051ba:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   1400051bf:	je     0x1400051fc
   1400051c1:	inc    rbx
   1400051c4:	mov    BYTE PTR [rax+rsi*1+0x9],cl
   1400051c8:	cmp    edx,0x2
   1400051cb:	jl     0x1400051de
   1400051cd:	mov    al,BYTE PTR [rbx]
   1400051cf:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   1400051d7:	inc    rbx
   1400051da:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   1400051de:	cmp    edx,0x3
   1400051e1:	jne    0x1400051f4
   1400051e3:	mov    al,BYTE PTR [rbx]
   1400051e5:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   1400051ed:	inc    rbx
   1400051f0:	mov    BYTE PTR [rcx+rsi*1+0x3a],al
   1400051f4:	movsxd rax,edx
   1400051f7:	sub    rbx,rax
   1400051fa:	jmp    0x14000520f
   1400051fc:	mov    ecx,DWORD PTR [rbp+0x48]
   1400051ff:	neg    edx
   140005201:	mov    r8d,0x1
   140005207:	movsxd rdx,edx
   14000520a:	call   0x140009be4
   14000520f:	mov    eax,DWORD PTR [rbp-0x1c]
   140005212:	mov    r13,QWORD PTR [rbp+0x50]
   140005216:	sub    ebx,r14d
   140005219:	shr    eax,1
   14000521b:	mov    r9d,ebx
   14000521e:	mov    r8,r14
   140005221:	mov    DWORD PTR [rsp+0x28],eax
   140005225:	xor    edx,edx
   140005227:	mov    ecx,0xfde9
   14000522c:	mov    QWORD PTR [rsp+0x20],r13
   140005231:	call   QWORD PTR [rip+0x8e21]        # 0x14000e058
   140005237:	mov    r12d,eax
   14000523a:	test   eax,eax
   14000523c:	jne    0x140005253
   14000523e:	call   QWORD PTR [rip+0x8e2c]        # 0x14000e070
   140005244:	mov    ecx,eax
   140005246:	call   0x140003290
   14000524b:	or     ebx,0xffffffff
   14000524e:	jmp    0x14000541d
   140005253:	cmp    eax,ebx
   140005255:	mov    ebx,DWORD PTR [rbp-0x20]
   140005258:	lea    rax,[rip+0xffffffffffffada1]        # 0x140000000
   14000525f:	mov    rax,QWORD PTR [rax+r15*8+0x14620]
   140005267:	setne  dil
   14000526b:	add    r12d,r12d
   14000526e:	mov    DWORD PTR [rax+rsi*1+0x48],edi
   140005272:	jmp    0x14000541d
   140005277:	test   edx,edx
   140005279:	mov    edx,0xa
   14000527e:	je     0x14000528d
   140005280:	cmp    WORD PTR [r14],dx
   140005284:	jne    0x14000528d
   140005286:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   14000528b:	jmp    0x140005292
   14000528d:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   140005292:	movsxd rax,r12d
   140005295:	mov    rbx,r14
   140005298:	mov    r13,r14
   14000529b:	add    rax,r14
   14000529e:	mov    QWORD PTR [rbp+0x60],rax
   1400052a2:	cmp    r14,rax
   1400052a5:	jae    0x140005410
   1400052ab:	mov    r12d,0xd
   1400052b1:	movzx  eax,WORD PTR [r13+0x0]
   1400052b6:	cmp    ax,0x1a
   1400052ba:	je     0x1400053ee
   1400052c0:	cmp    ax,r12w
   1400052c4:	je     0x1400052d6
   1400052c6:	mov    WORD PTR [rbx],ax
   1400052c9:	add    rbx,0x2
   1400052cd:	add    r13,0x2
   1400052d1:	jmp    0x1400053e2
   1400052d6:	mov    rax,QWORD PTR [rbp+0x60]
   1400052da:	add    rax,0xfffffffffffffffe
   1400052de:	cmp    r13,rax
   1400052e1:	jae    0x1400052fd
   1400052e3:	lea    rax,[r13+0x2]
   1400052e7:	cmp    WORD PTR [rax],dx
   1400052ea:	jne    0x1400052f5
   1400052ec:	add    r13,0x4
   1400052f0:	jmp    0x1400053a2
   1400052f5:	mov    r13,rax
   1400052f8:	jmp    0x1400053da
   1400052fd:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   140005305:	lea    r9,[rbp-0x24]
   140005309:	lea    rdx,[rbp-0x28]
   14000530d:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140005311:	mov    r8d,0x2
   140005317:	add    r13,0x2
   14000531b:	mov    QWORD PTR [rsp+0x20],rdi
   140005320:	call   QWORD PTR [rip+0x8e4a]        # 0x14000e170
   140005326:	test   eax,eax
   140005328:	jne    0x140005338
   14000532a:	call   QWORD PTR [rip+0x8d40]        # 0x14000e070
   140005330:	test   eax,eax
   140005332:	jne    0x1400053ce
   140005338:	cmp    DWORD PTR [rbp-0x24],edi
   14000533b:	je     0x1400053ce
   140005341:	lea    r8,[rip+0xffffffffffffacb8]        # 0x140000000
   140005348:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   140005350:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   140005355:	je     0x140005392
   140005357:	mov    edx,0xa
   14000535c:	cmp    WORD PTR [rbp-0x28],dx
   140005360:	je     0x1400053a2
   140005362:	mov    WORD PTR [rbx],r12w
   140005366:	mov    al,BYTE PTR [rbp-0x28]
   140005369:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   140005371:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   140005375:	mov    al,BYTE PTR [rbp-0x27]
   140005378:	mov    rcx,QWORD PTR [r8+r15*8+0x14620]
   140005380:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   140005384:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   14000538c:	mov    BYTE PTR [rax+rsi*1+0x3a],dl
   140005390:	jmp    0x1400053de
   140005392:	cmp    rbx,r14
   140005395:	jne    0x1400053a7
   140005397:	mov    edx,0xa
   14000539c:	cmp    WORD PTR [rbp-0x28],dx
   1400053a0:	jne    0x1400053a7
   1400053a2:	mov    WORD PTR [rbx],dx
   1400053a5:	jmp    0x1400053de
   1400053a7:	mov    ecx,DWORD PTR [rbp+0x48]
   1400053aa:	mov    rdx,0xfffffffffffffffe
   1400053b1:	lea    r8d,[rdx+0x3]
   1400053b5:	call   0x140009be4
   1400053ba:	mov    edx,0xa
   1400053bf:	lea    r8,[rip+0xffffffffffffac3a]        # 0x140000000
   1400053c6:	cmp    WORD PTR [rbp-0x28],dx
   1400053ca:	je     0x1400053e2
   1400053cc:	jmp    0x1400053da
   1400053ce:	mov    edx,0xa
   1400053d3:	lea    r8,[rip+0xffffffffffffac26]        # 0x140000000
   1400053da:	mov    WORD PTR [rbx],r12w
   1400053de:	add    rbx,0x2
   1400053e2:	cmp    r13,QWORD PTR [rbp+0x60]
   1400053e6:	jb     0x1400052b1
   1400053ec:	jmp    0x140005410
   1400053ee:	mov    rax,QWORD PTR [r8+r15*8+0x14620]
   1400053f6:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   1400053fb:	jne    0x140005404
   1400053fd:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   140005402:	jmp    0x140005410
   140005404:	movzx  eax,WORD PTR [r13+0x0]
   140005409:	mov    WORD PTR [rbx],ax
   14000540c:	add    rbx,0x2
   140005410:	mov    r12d,ebx
   140005413:	sub    r12d,r14d
   140005416:	mov    ebx,DWORD PTR [rbp-0x20]
   140005419:	mov    r13,QWORD PTR [rbp+0x50]
   14000541d:	cmp    r14,r13
   140005420:	je     0x14000542a
   140005422:	mov    rcx,r14
   140005425:	call   0x140001a94
   14000542a:	cmp    ebx,0xfffffffe
   14000542d:	cmove  ebx,r12d
   140005431:	mov    eax,ebx
   140005433:	jmp    0x14000548e
   140005435:	call   QWORD PTR [rip+0x8c35]        # 0x14000e070
   14000543b:	cmp    eax,0x5
   14000543e:	jne    0x14000545b
   140005440:	call   0x140003250
   140005445:	mov    DWORD PTR [rax],0x9
   14000544b:	call   0x140003270
   140005450:	mov    DWORD PTR [rax],0x5
   140005456:	jmp    0x14000519c
   14000545b:	cmp    eax,0x6d
   14000545e:	jne    0x140005464
   140005460:	mov    ebx,edi
   140005462:	jmp    0x140005419
   140005464:	mov    ecx,eax
   140005466:	call   0x140003290
   14000546b:	jmp    0x14000519c
   140005470:	xor    eax,eax
   140005472:	jmp    0x14000548e
   140005474:	call   0x140003270
   140005479:	mov    DWORD PTR [rax],edi
   14000547b:	call   0x140003250
   140005480:	mov    DWORD PTR [rax],0x9
   140005486:	call   0x1400031e8
   14000548b:	or     eax,0xffffffff
   14000548e:	add    rsp,0x58
   140005492:	pop    r15
   140005494:	pop    r14
   140005496:	pop    r13
   140005498:	pop    r12
   14000549a:	pop    rdi
   14000549b:	pop    rsi
   14000549c:	pop    rbx
   14000549d:	pop    rbp
   14000549e:	ret    
   14000549f:	int3   
   1400054a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400054a5:	mov    QWORD PTR [rsp+0x18],rsi
   1400054aa:	mov    DWORD PTR [rsp+0x8],ecx
   1400054ae:	push   rdi
   1400054af:	push   r12
   1400054b1:	push   r13
   1400054b3:	push   r14
   1400054b5:	push   r15
   1400054b7:	sub    rsp,0x20
   1400054bb:	mov    esi,r8d
   1400054be:	mov    r13,rdx
   1400054c1:	movsxd rdi,ecx
   1400054c4:	cmp    edi,0xfffffffe
   1400054c7:	jne    0x1400054e2
   1400054c9:	call   0x140003270
   1400054ce:	xor    ebx,ebx
   1400054d0:	mov    DWORD PTR [rax],ebx
   1400054d2:	call   0x140003250
   1400054d7:	mov    DWORD PTR [rax],0x9
   1400054dd:	jmp    0x1400055a0
   1400054e2:	xor    ebx,ebx
   1400054e4:	test   ecx,ecx
   1400054e6:	js     0x140005589
   1400054ec:	cmp    edi,DWORD PTR [rip+0xf10e]        # 0x140014600
   1400054f2:	jae    0x140005589
   1400054f8:	mov    r12,rdi
   1400054fb:	mov    r14,rdi
   1400054fe:	sar    r14,0x5
   140005502:	lea    r15,[rip+0xf117]        # 0x140014620
   140005509:	and    r12d,0x1f
   14000550d:	imul   r12,r12,0x58
   140005511:	mov    rax,QWORD PTR [r15+r14*8]
   140005515:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   14000551b:	and    ecx,0x1
   14000551e:	je     0x140005589
   140005520:	mov    eax,ebx
   140005522:	cmp    r8d,0x7fffffff
   140005529:	setbe  al
   14000552c:	test   eax,eax
   14000552e:	jne    0x140005544
   140005530:	call   0x140003270
   140005535:	mov    DWORD PTR [rax],ebx
   140005537:	call   0x140003250
   14000553c:	mov    DWORD PTR [rax],0x16
   140005542:	jmp    0x14000559b
   140005544:	mov    ecx,edi
   140005546:	call   0x14000bc54
   14000554b:	nop
   14000554c:	mov    rax,QWORD PTR [r15+r14*8]
   140005550:	test   BYTE PTR [rax+r12*1+0x8],0x1
   140005556:	je     0x140005569
   140005558:	mov    r8d,esi
   14000555b:	mov    rdx,r13
   14000555e:	mov    ecx,edi
   140005560:	call   0x140004d7c
   140005565:	mov    ebx,eax
   140005567:	jmp    0x14000557e
   140005569:	call   0x140003250
   14000556e:	mov    DWORD PTR [rax],0x9
   140005574:	call   0x140003270
   140005579:	mov    DWORD PTR [rax],ebx
   14000557b:	or     ebx,0xffffffff
   14000557e:	mov    ecx,edi
   140005580:	call   0x14000bcfc
   140005585:	mov    eax,ebx
   140005587:	jmp    0x1400055a3
   140005589:	call   0x140003270
   14000558e:	mov    DWORD PTR [rax],ebx
   140005590:	call   0x140003250
   140005595:	mov    DWORD PTR [rax],0x9
   14000559b:	call   0x1400031e8
   1400055a0:	or     eax,0xffffffff
   1400055a3:	mov    rbx,QWORD PTR [rsp+0x58]
   1400055a8:	mov    rsi,QWORD PTR [rsp+0x60]
   1400055ad:	add    rsp,0x20
   1400055b1:	pop    r15
   1400055b3:	pop    r14
   1400055b5:	pop    r13
   1400055b7:	pop    r12
   1400055b9:	pop    rdi
   1400055ba:	ret    
   1400055bb:	int3   
   1400055bc:	sub    rsp,0x28
   1400055c0:	test   rcx,rcx
   1400055c3:	jne    0x1400055da
   1400055c5:	call   0x140003250
   1400055ca:	mov    DWORD PTR [rax],0x16
   1400055d0:	call   0x1400031e8
   1400055d5:	or     eax,0xffffffff
   1400055d8:	jmp    0x1400055dd
   1400055da:	mov    eax,DWORD PTR [rcx+0x1c]
   1400055dd:	add    rsp,0x28
   1400055e1:	ret    
   1400055e2:	int3   
   1400055e3:	int3   
   1400055e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400055e9:	mov    QWORD PTR [rsp+0x10],rsi
   1400055ee:	push   rdi
   1400055ef:	sub    rsp,0x20
   1400055f3:	mov    rbx,r9
   1400055f6:	mov    rsi,r8
   1400055f9:	mov    rdi,rdx
   1400055fc:	test   r9,r9
   1400055ff:	jne    0x140005605
   140005601:	xor    eax,eax
   140005603:	jmp    0x14000565b
   140005605:	test   rcx,rcx
   140005608:	jne    0x14000561f
   14000560a:	call   0x140003250
   14000560f:	mov    ebx,0x16
   140005614:	mov    DWORD PTR [rax],ebx
   140005616:	call   0x1400031e8
   14000561b:	mov    eax,ebx
   14000561d:	jmp    0x14000565b
   14000561f:	test   r8,r8
   140005622:	je     0x140005636
   140005624:	cmp    rdx,rbx
   140005627:	jb     0x140005636
   140005629:	mov    r8,rbx
   14000562c:	mov    rdx,rsi
   14000562f:	call   0x14000bf40
   140005634:	jmp    0x140005601
   140005636:	mov    r8,rdx
   140005639:	xor    edx,edx
   14000563b:	call   0x1400048d0
   140005640:	test   rsi,rsi
   140005643:	je     0x14000560a
   140005645:	cmp    rdi,rbx
   140005648:	jae    0x140005656
   14000564a:	call   0x140003250
   14000564f:	mov    ebx,0x22
   140005654:	jmp    0x140005614
   140005656:	mov    eax,0x16
   14000565b:	mov    rbx,QWORD PTR [rsp+0x30]
   140005660:	mov    rsi,QWORD PTR [rsp+0x38]
   140005665:	add    rsp,0x20
   140005669:	pop    rdi
   14000566a:	ret    
   14000566b:	int3   
   14000566c:	mov    QWORD PTR [rsp+0x8],rbx
   140005671:	mov    QWORD PTR [rsp+0x10],rdi
   140005676:	push   r12
   140005678:	sub    rsp,0x20
   14000567c:	mov    rbx,rcx
   14000567f:	call   0x1400055bc
   140005684:	mov    ecx,eax
   140005686:	call   0x140009db4
   14000568b:	test   eax,eax
   14000568d:	je     0x14000572a
   140005693:	call   0x140001bd0
   140005698:	add    rax,0x30
   14000569c:	cmp    rbx,rax
   14000569f:	jne    0x1400056a5
   1400056a1:	xor    eax,eax
   1400056a3:	jmp    0x1400056b8
   1400056a5:	call   0x140001bd0
   1400056aa:	add    rax,0x60
   1400056ae:	cmp    rbx,rax
   1400056b1:	jne    0x14000572a
   1400056b3:	mov    eax,0x1
   1400056b8:	inc    DWORD PTR [rip+0xdd02]        # 0x1400133c0
   1400056be:	test   DWORD PTR [rbx+0x18],0x10c
   1400056c5:	jne    0x14000572a
   1400056c7:	lea    r12,[rip+0xeb62]        # 0x140014230
   1400056ce:	movsxd rdi,eax
   1400056d1:	cmp    QWORD PTR [r12+rdi*8],0x0
   1400056d6:	jne    0x140005703
   1400056d8:	mov    ecx,0x1000
   1400056dd:	call   0x140003de8
   1400056e2:	mov    QWORD PTR [r12+rdi*8],rax
   1400056e6:	test   rax,rax
   1400056e9:	jne    0x140005703
   1400056eb:	lea    rax,[rbx+0x20]
   1400056ef:	mov    QWORD PTR [rbx+0x10],rax
   1400056f3:	mov    QWORD PTR [rbx],rax
   1400056f6:	mov    eax,0x2
   1400056fb:	mov    DWORD PTR [rbx+0x24],eax
   1400056fe:	mov    DWORD PTR [rbx+0x8],eax
   140005701:	jmp    0x14000571c
   140005703:	mov    rcx,QWORD PTR [r12+rdi*8]
   140005707:	mov    DWORD PTR [rbx+0x24],0x1000
   14000570e:	mov    DWORD PTR [rbx+0x8],0x1000
   140005715:	mov    QWORD PTR [rbx+0x10],rcx
   140005719:	mov    QWORD PTR [rbx],rcx
   14000571c:	or     DWORD PTR [rbx+0x18],0x1102
   140005723:	mov    eax,0x1
   140005728:	jmp    0x14000572c
   14000572a:	xor    eax,eax
   14000572c:	mov    rbx,QWORD PTR [rsp+0x30]
   140005731:	mov    rdi,QWORD PTR [rsp+0x38]
   140005736:	add    rsp,0x20
   14000573a:	pop    r12
   14000573c:	ret    
   14000573d:	int3   
   14000573e:	int3   
   14000573f:	int3   
   140005740:	test   ecx,ecx
   140005742:	je     0x140005776
   140005744:	push   rbx
   140005745:	sub    rsp,0x20
   140005749:	test   DWORD PTR [rdx+0x18],0x1000
   140005750:	mov    rbx,rdx
   140005753:	je     0x140005771
   140005755:	mov    rcx,rdx
   140005758:	call   0x140004020
   14000575d:	and    DWORD PTR [rbx+0x18],0xffffeeff
   140005764:	and    DWORD PTR [rbx+0x24],0x0
   140005768:	and    QWORD PTR [rbx],0x0
   14000576c:	and    QWORD PTR [rbx+0x10],0x0
   140005771:	add    rsp,0x20
   140005775:	pop    rbx
   140005776:	ret    
   140005777:	int3   
   140005778:	test   edx,edx
   14000577a:	jle    0x1400057c8
   14000577c:	mov    QWORD PTR [rsp+0x8],rbx
   140005781:	mov    QWORD PTR [rsp+0x10],rbp
   140005786:	mov    QWORD PTR [rsp+0x18],rsi
   14000578b:	push   rdi
   14000578c:	sub    rsp,0x20
   140005790:	mov    rdi,r9
   140005793:	mov    rsi,r8
   140005796:	mov    ebx,edx
   140005798:	mov    bpl,cl
   14000579b:	mov    r8,rdi
   14000579e:	mov    rdx,rsi
   1400057a1:	mov    cl,bpl
   1400057a4:	dec    ebx
   1400057a6:	call   0x1400090cc
   1400057ab:	cmp    DWORD PTR [rdi],0xffffffff
   1400057ae:	je     0x1400057b4
   1400057b0:	test   ebx,ebx
   1400057b2:	jg     0x14000579b
   1400057b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400057b9:	mov    rbp,QWORD PTR [rsp+0x38]
   1400057be:	mov    rsi,QWORD PTR [rsp+0x40]
   1400057c3:	add    rsp,0x20
   1400057c7:	pop    rdi
   1400057c8:	ret    
   1400057c9:	int3   
   1400057ca:	int3   
   1400057cb:	int3   
   1400057cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400057d1:	mov    QWORD PTR [rsp+0x10],rbp
   1400057d6:	mov    QWORD PTR [rsp+0x18],rsi
   1400057db:	push   rdi
   1400057dc:	push   r12
   1400057de:	push   r13
   1400057e0:	sub    rsp,0x20
   1400057e4:	test   BYTE PTR [r8+0x18],0x40
   1400057e9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400057ee:	mov    rdi,r9
   1400057f1:	mov    r12d,DWORD PTR [rbx]
   1400057f4:	mov    rbp,r8
   1400057f7:	mov    esi,edx
   1400057f9:	mov    r13,rcx
   1400057fc:	je     0x14000580a
   1400057fe:	cmp    QWORD PTR [r8+0x10],0x0
   140005803:	jne    0x14000580a
   140005805:	add    DWORD PTR [r9],edx
   140005808:	jmp    0x140005848
   14000580a:	and    DWORD PTR [rbx],0x0
   14000580d:	test   edx,edx
   14000580f:	jle    0x140005845
   140005811:	mov    cl,BYTE PTR [r13+0x0]
   140005815:	mov    r8,rdi
   140005818:	mov    rdx,rbp
   14000581b:	dec    esi
   14000581d:	call   0x1400090cc
   140005822:	inc    r13
   140005825:	cmp    DWORD PTR [rdi],0xffffffff
   140005828:	jne    0x14000583c
   14000582a:	cmp    DWORD PTR [rbx],0x2a
   14000582d:	jne    0x140005840
   14000582f:	mov    r8,rdi
   140005832:	mov    rdx,rbp
   140005835:	mov    cl,0x3f
   140005837:	call   0x1400090cc
   14000583c:	test   esi,esi
   14000583e:	jg     0x140005811
   140005840:	cmp    DWORD PTR [rbx],0x0
   140005843:	jne    0x140005848
   140005845:	mov    DWORD PTR [rbx],r12d
   140005848:	mov    rbx,QWORD PTR [rsp+0x40]
   14000584d:	mov    rbp,QWORD PTR [rsp+0x48]
   140005852:	mov    rsi,QWORD PTR [rsp+0x50]
   140005857:	add    rsp,0x20
   14000585b:	pop    r13
   14000585d:	pop    r12
   14000585f:	pop    rdi
   140005860:	ret    
   140005861:	int3   
   140005862:	int3   
   140005863:	int3   
   140005864:	mov    QWORD PTR [rsp+0x18],rbx
   140005869:	push   rbp
   14000586a:	push   rsi
   14000586b:	push   rdi
   14000586c:	push   r12
   14000586e:	push   r13
   140005870:	push   r14
   140005872:	push   r15
   140005874:	lea    rbp,[rsp-0x1d0]
   14000587c:	sub    rsp,0x2d0
   140005883:	mov    rax,QWORD PTR [rip+0xcb3e]        # 0x1400123c8
   14000588a:	xor    rax,rsp
   14000588d:	mov    QWORD PTR [rbp+0x1c8],rax
   140005894:	xor    eax,eax
   140005896:	mov    rbx,rcx
   140005899:	mov    QWORD PTR [rsp+0x70],rcx
   14000589e:	mov    QWORD PTR [rsp+0x68],rdx
   1400058a3:	lea    rcx,[rbp-0x80]
   1400058a7:	mov    rdx,r8
   1400058aa:	mov    r14,r9
   1400058ad:	mov    DWORD PTR [rsp+0x64],eax
   1400058b1:	mov    r13d,eax
   1400058b4:	mov    DWORD PTR [rsp+0x58],eax
   1400058b8:	mov    edi,eax
   1400058ba:	mov    DWORD PTR [rsp+0x44],eax
   1400058be:	mov    DWORD PTR [rsp+0x4c],eax
   1400058c2:	mov    DWORD PTR [rsp+0x5c],eax
   1400058c6:	mov    DWORD PTR [rsp+0x54],eax
   1400058ca:	call   0x140004810
   1400058cf:	call   0x140003250
   1400058d4:	xor    r10d,r10d
   1400058d7:	mov    QWORD PTR [rbp-0x60],rax
   1400058db:	test   rbx,rbx
   1400058de:	jne    0x14000590c
   1400058e0:	call   0x140003250
   1400058e5:	mov    DWORD PTR [rax],0x16
   1400058eb:	call   0x1400031e8
   1400058f0:	xor    r11d,r11d
   1400058f3:	cmp    BYTE PTR [rbp-0x68],r11b
   1400058f7:	je     0x140005904
   1400058f9:	mov    rax,QWORD PTR [rbp-0x70]
   1400058fd:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140005904:	or     eax,0xffffffff
   140005907:	jmp    0x1400060c6
   14000590c:	or     r15d,0xffffffff
   140005910:	test   BYTE PTR [rbx+0x18],0x40
   140005914:	lea    r9,[rip+0xffffffffffffa6e5]        # 0x140000000
   14000591b:	jne    0x1400059c6
   140005921:	mov    rcx,rbx
   140005924:	call   0x1400055bc
   140005929:	lea    rdx,[rip+0xcc20]        # 0x140012550
   140005930:	cmp    eax,r15d
   140005933:	je     0x14000595d
   140005935:	cmp    eax,0xfffffffe
   140005938:	je     0x14000595d
   14000593a:	movsxd r8,eax
   14000593d:	lea    r9,[rip+0xffffffffffffa6bc]        # 0x140000000
   140005944:	mov    rcx,r8
   140005947:	and    r8d,0x1f
   14000594b:	sar    rcx,0x5
   14000594f:	imul   r8,r8,0x58
   140005953:	add    r8,QWORD PTR [r9+rcx*8+0x14620]
   14000595b:	jmp    0x140005967
   14000595d:	mov    r8,rdx
   140005960:	lea    r9,[rip+0xffffffffffffa699]        # 0x140000000
   140005967:	test   BYTE PTR [r8+0x38],0x7f
   14000596c:	jne    0x140005997
   14000596e:	cmp    eax,r15d
   140005971:	je     0x140005991
   140005973:	cmp    eax,0xfffffffe
   140005976:	je     0x140005991
   140005978:	movsxd rdx,eax
   14000597b:	mov    rax,rdx
   14000597e:	and    edx,0x1f
   140005981:	sar    rax,0x5
   140005985:	imul   rdx,rdx,0x58
   140005989:	add    rdx,QWORD PTR [r9+rax*8+0x14620]
   140005991:	test   BYTE PTR [rdx+0x38],0x80
   140005995:	je     0x1400059c3
   140005997:	call   0x140003250
   14000599c:	mov    DWORD PTR [rax],0x16
   1400059a2:	call   0x1400031e8
   1400059a7:	xor    r11d,r11d
   1400059aa:	cmp    BYTE PTR [rbp-0x68],r11b
   1400059ae:	je     0x1400059bb
   1400059b0:	mov    rax,QWORD PTR [rbp-0x70]
   1400059b4:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400059bb:	mov    eax,r15d
   1400059be:	jmp    0x1400060c6
   1400059c3:	xor    r10d,r10d
   1400059c6:	mov    r8,QWORD PTR [rsp+0x68]
   1400059cb:	test   r8,r8
   1400059ce:	je     0x140005997
   1400059d0:	mov    r12b,BYTE PTR [r8]
   1400059d3:	mov    esi,r10d
   1400059d6:	mov    DWORD PTR [rsp+0x40],r10d
   1400059db:	mov    DWORD PTR [rsp+0x48],r10d
   1400059e0:	mov    edx,r10d
   1400059e3:	mov    QWORD PTR [rbp-0x50],r10
   1400059e7:	test   r12b,r12b
   1400059ea:	je     0x1400060b3
   1400059f0:	mov    rbx,QWORD PTR [rbp-0x48]
   1400059f4:	mov    r11d,0x200
   1400059fa:	inc    r8
   1400059fd:	mov    QWORD PTR [rsp+0x68],r8
   140005a02:	test   esi,esi
   140005a04:	js     0x1400060b3
   140005a0a:	lea    eax,[r12-0x20]
   140005a0f:	cmp    al,0x58
   140005a11:	ja     0x140005a25
   140005a13:	movsx  rax,r12b
   140005a17:	movsx  ecx,BYTE PTR [rax+r9*1+0xee80]
   140005a20:	and    ecx,0xf
   140005a23:	jmp    0x140005a28
   140005a25:	mov    ecx,r10d
   140005a28:	movsxd rax,edx
   140005a2b:	movsxd rcx,ecx
   140005a2e:	lea    rdx,[rax+rcx*8]
   140005a32:	movsx  edx,BYTE PTR [rdx+r9*1+0xeea0]
   140005a3b:	sar    edx,0x4
   140005a3e:	mov    DWORD PTR [rsp+0x60],edx
   140005a42:	mov    ecx,edx
   140005a44:	test   edx,edx
   140005a46:	je     0x14000619d
   140005a4c:	dec    ecx
   140005a4e:	je     0x1400062ce
   140005a54:	dec    ecx
   140005a56:	je     0x14000627e
   140005a5c:	dec    ecx
   140005a5e:	je     0x140006245
   140005a64:	dec    ecx
   140005a66:	je     0x140006238
   140005a6c:	dec    ecx
   140005a6e:	je     0x1400061fe
   140005a74:	dec    ecx
   140005a76:	je     0x1400060f0
   140005a7c:	dec    ecx
   140005a7e:	jne    0x1400060a7
   140005a84:	movsx  eax,r12b
   140005a88:	cmp    eax,0x64
   140005a8b:	jg     0x140005c04
   140005a91:	je     0x140005d05
   140005a97:	cmp    eax,0x41
   140005a9a:	je     0x140005bd8
   140005aa0:	cmp    eax,0x43
   140005aa3:	je     0x140005b7e
   140005aa9:	cmp    eax,0x45
   140005aac:	je     0x140005bd8
   140005ab2:	cmp    eax,0x47
   140005ab5:	je     0x140005bd8
   140005abb:	cmp    eax,0x53
   140005abe:	je     0x140005b34
   140005ac0:	cmp    eax,0x58
   140005ac3:	je     0x140005c9f
   140005ac9:	cmp    eax,0x5a
   140005acc:	je     0x140005ae5
   140005ace:	cmp    eax,0x61
   140005ad1:	je     0x140005be4
   140005ad7:	cmp    eax,0x63
   140005ada:	je     0x140005b8c
   140005ae0:	jmp    0x140005f10
   140005ae5:	mov    rax,QWORD PTR [r14]
   140005ae8:	add    r14,0x8
   140005aec:	test   rax,rax
   140005aef:	je     0x140005b20
   140005af1:	mov    rbx,QWORD PTR [rax+0x8]
   140005af5:	test   rbx,rbx
   140005af8:	je     0x140005b20
   140005afa:	movsx  eax,WORD PTR [rax]
   140005afd:	bt     r13d,0xb
   140005b02:	jae    0x140005b16
   140005b04:	cdq    
   140005b05:	mov    DWORD PTR [rsp+0x54],0x1
   140005b0d:	sub    eax,edx
   140005b0f:	sar    eax,1
   140005b11:	jmp    0x140005f0c
   140005b16:	mov    DWORD PTR [rsp+0x54],r10d
   140005b1b:	jmp    0x140005f0c
   140005b20:	mov    rbx,QWORD PTR [rip+0xcdc9]        # 0x1400128f0
   140005b27:	mov    rcx,rbx
   140005b2a:	call   0x140008210
   140005b2f:	jmp    0x140005f09
   140005b34:	test   r13d,0x830
   140005b3b:	jne    0x140005b42
   140005b3d:	bts    r13d,0xb
   140005b42:	mov    rbx,QWORD PTR [r14]
   140005b45:	cmp    edi,r15d
   140005b48:	mov    eax,edi
   140005b4a:	mov    ecx,0x7fffffff
   140005b4f:	cmove  eax,ecx
   140005b52:	add    r14,0x8
   140005b56:	test   r13d,0x810
   140005b5d:	je     0x140005c6c
   140005b63:	test   rbx,rbx
   140005b66:	mov    DWORD PTR [rsp+0x54],0x1
   140005b6e:	cmove  rbx,QWORD PTR [rip+0xcd82]        # 0x1400128f8
   140005b76:	mov    rcx,rbx
   140005b79:	jmp    0x140005c60
   140005b7e:	test   r13d,0x830
   140005b85:	jne    0x140005b8c
   140005b87:	bts    r13d,0xb
   140005b8c:	add    r14,0x8
   140005b90:	test   r13d,0x810
   140005b97:	je     0x140005bc0
   140005b99:	movzx  r9d,WORD PTR [r14-0x8]
   140005b9e:	lea    rdx,[rbp-0x40]
   140005ba2:	lea    rcx,[rsp+0x48]
   140005ba7:	mov    r8,r11
   140005baa:	call   0x14000c438
   140005baf:	xor    r10d,r10d
   140005bb2:	test   eax,eax
   140005bb4:	je     0x140005bcf
   140005bb6:	mov    DWORD PTR [rsp+0x5c],0x1
   140005bbe:	jmp    0x140005bcf
   140005bc0:	mov    al,BYTE PTR [r14-0x8]
   140005bc4:	mov    DWORD PTR [rsp+0x48],0x1
   140005bcc:	mov    BYTE PTR [rbp-0x40],al
   140005bcf:	lea    rbx,[rbp-0x40]
   140005bd3:	jmp    0x140005f10
   140005bd8:	mov    DWORD PTR [rsp+0x78],0x1
   140005be0:	add    r12b,0x20
   140005be4:	or     r13d,0x40
   140005be8:	lea    rbx,[rbp-0x40]
   140005bec:	mov    esi,r11d
   140005bef:	test   edi,edi
   140005bf1:	jns    0x140005e15
   140005bf7:	mov    DWORD PTR [rsp+0x44],0x6
   140005bff:	jmp    0x140005e60
   140005c04:	cmp    eax,0x65
   140005c07:	jl     0x140005f10
   140005c0d:	cmp    eax,0x67
   140005c10:	jle    0x140005be4
   140005c12:	cmp    eax,0x69
   140005c15:	je     0x140005d05
   140005c1b:	cmp    eax,0x6e
   140005c1e:	je     0x140005cd4
   140005c24:	cmp    eax,0x6f
   140005c27:	je     0x140005cc4
   140005c2d:	cmp    eax,0x70
   140005c30:	je     0x140005c95
   140005c32:	cmp    eax,0x73
   140005c35:	je     0x140005b42
   140005c3b:	cmp    eax,0x75
   140005c3e:	je     0x140005d09
   140005c44:	cmp    eax,0x78
   140005c47:	jne    0x140005f10
   140005c4d:	mov    eax,0x27
   140005c52:	jmp    0x140005ca4
   140005c54:	dec    eax
   140005c56:	cmp    WORD PTR [rcx],r10w
   140005c5a:	je     0x140005c64
   140005c5c:	add    rcx,0x2
   140005c60:	test   eax,eax
   140005c62:	jne    0x140005c54
   140005c64:	sub    rcx,rbx
   140005c67:	sar    rcx,1
   140005c6a:	jmp    0x140005c8c
   140005c6c:	test   rbx,rbx
   140005c6f:	cmove  rbx,QWORD PTR [rip+0xcc79]        # 0x1400128f0
   140005c77:	mov    rcx,rbx
   140005c7a:	jmp    0x140005c86
   140005c7c:	dec    eax
   140005c7e:	cmp    BYTE PTR [rcx],r10b
   140005c81:	je     0x140005c8a
   140005c83:	inc    rcx
   140005c86:	test   eax,eax
   140005c88:	jne    0x140005c7c
   140005c8a:	sub    ecx,ebx
   140005c8c:	mov    DWORD PTR [rsp+0x48],ecx
   140005c90:	jmp    0x140005f10
   140005c95:	mov    edi,0x10
   140005c9a:	bts    r13d,0xf
   140005c9f:	mov    eax,0x7
   140005ca4:	mov    DWORD PTR [rsp+0x64],eax
   140005ca8:	mov    r9d,0x10
   140005cae:	test   r13b,r13b
   140005cb1:	jns    0x140005d0f
   140005cb3:	add    al,0x51
   140005cb5:	mov    BYTE PTR [rsp+0x50],0x30
   140005cba:	lea    edx,[r9-0xe]
   140005cbe:	mov    BYTE PTR [rsp+0x51],al
   140005cc2:	jmp    0x140005d13
   140005cc4:	mov    r9d,0x8
   140005cca:	test   r13b,r13b
   140005ccd:	jns    0x140005d0f
   140005ccf:	or     r13d,r11d
   140005cd2:	jmp    0x140005d0f
   140005cd4:	mov    rdi,QWORD PTR [r14]
   140005cd7:	add    r14,0x8
   140005cdb:	call   0x14000abd8
   140005ce0:	xor    r10d,r10d
   140005ce3:	test   eax,eax
   140005ce5:	je     0x140005997
   140005ceb:	test   r13b,0x20
   140005cef:	je     0x140005cf6
   140005cf1:	mov    WORD PTR [rdi],si
   140005cf4:	jmp    0x140005cf8
   140005cf6:	mov    DWORD PTR [rdi],esi
   140005cf8:	mov    DWORD PTR [rsp+0x5c],0x1
   140005d00:	jmp    0x140006075
   140005d05:	or     r13d,0x40
   140005d09:	mov    r9d,0xa
   140005d0f:	mov    edx,DWORD PTR [rsp+0x4c]
   140005d13:	mov    eax,0x8000
   140005d18:	test   eax,r13d
   140005d1b:	jne    0x140005d24
   140005d1d:	bt     r13d,0xc
   140005d22:	jae    0x140005d2d
   140005d24:	mov    r8,QWORD PTR [r14]
   140005d27:	add    r14,0x8
   140005d2b:	jmp    0x140005d5b
   140005d2d:	add    r14,0x8
   140005d31:	test   r13b,0x20
   140005d35:	je     0x140005d4b
   140005d37:	test   r13b,0x40
   140005d3b:	je     0x140005d44
   140005d3d:	movsx  r8,WORD PTR [r14-0x8]
   140005d42:	jmp    0x140005d5b
   140005d44:	movzx  r8d,WORD PTR [r14-0x8]
   140005d49:	jmp    0x140005d5b
   140005d4b:	test   r13b,0x40
   140005d4f:	je     0x140005d57
   140005d51:	movsxd r8,DWORD PTR [r14-0x8]
   140005d55:	jmp    0x140005d5b
   140005d57:	mov    r8d,DWORD PTR [r14-0x8]
   140005d5b:	test   r13b,0x40
   140005d5f:	je     0x140005d6e
   140005d61:	test   r8,r8
   140005d64:	jns    0x140005d6e
   140005d66:	neg    r8
   140005d69:	bts    r13d,0x8
   140005d6e:	test   eax,r13d
   140005d71:	jne    0x140005d7d
   140005d73:	bt     r13d,0xc
   140005d78:	jb     0x140005d7d
   140005d7a:	mov    r8d,r8d
   140005d7d:	test   edi,edi
   140005d7f:	jns    0x140005d88
   140005d81:	mov    edi,0x1
   140005d86:	jmp    0x140005d93
   140005d88:	and    r13d,0xfffffff7
   140005d8c:	cmp    edi,r11d
   140005d8f:	cmovg  edi,r11d
   140005d93:	mov    esi,DWORD PTR [rsp+0x64]
   140005d97:	mov    rax,r8
   140005d9a:	lea    rbx,[rbp+0x1bf]
   140005da1:	neg    rax
   140005da4:	sbb    ecx,ecx
   140005da6:	and    ecx,edx
   140005da8:	mov    DWORD PTR [rsp+0x4c],ecx
   140005dac:	mov    ecx,edi
   140005dae:	dec    edi
   140005db0:	test   ecx,ecx
   140005db2:	jg     0x140005db9
   140005db4:	test   r8,r8
   140005db7:	je     0x140005dd8
   140005db9:	xor    edx,edx
   140005dbb:	mov    rax,r8
   140005dbe:	movsxd rcx,r9d
   140005dc1:	div    rcx
   140005dc4:	mov    r8,rax
   140005dc7:	lea    eax,[rdx+0x30]
   140005dca:	cmp    eax,0x39
   140005dcd:	jle    0x140005dd1
   140005dcf:	add    eax,esi
   140005dd1:	mov    BYTE PTR [rbx],al
   140005dd3:	dec    rbx
   140005dd6:	jmp    0x140005dac
   140005dd8:	mov    esi,DWORD PTR [rsp+0x40]
   140005ddc:	lea    rax,[rbp+0x1bf]
   140005de3:	mov    DWORD PTR [rsp+0x44],edi
   140005de7:	sub    eax,ebx
   140005de9:	inc    rbx
   140005dec:	mov    DWORD PTR [rsp+0x48],eax
   140005df0:	test   r11d,r13d
   140005df3:	je     0x140005f10
   140005df9:	test   eax,eax
   140005dfb:	je     0x140005e06
   140005dfd:	cmp    BYTE PTR [rbx],0x30
   140005e00:	je     0x140005f10
   140005e06:	dec    rbx
   140005e09:	inc    DWORD PTR [rsp+0x48]
   140005e0d:	mov    BYTE PTR [rbx],0x30
   140005e10:	jmp    0x140005f10
   140005e15:	jne    0x140005e27
   140005e17:	cmp    r12b,0x67
   140005e1b:	jne    0x140005e60
   140005e1d:	mov    DWORD PTR [rsp+0x44],0x1
   140005e25:	jmp    0x140005e60
   140005e27:	cmp    edi,r11d
   140005e2a:	cmovg  edi,r11d
   140005e2e:	mov    DWORD PTR [rsp+0x44],edi
   140005e32:	cmp    edi,0xa3
   140005e38:	jle    0x140005e60
   140005e3a:	add    edi,0x15d
   140005e40:	movsxd rcx,edi
   140005e43:	call   0x140003de8
   140005e48:	mov    QWORD PTR [rbp-0x50],rax
   140005e4c:	test   rax,rax
   140005e4f:	je     0x140005e58
   140005e51:	mov    rbx,rax
   140005e54:	mov    esi,edi
   140005e56:	jmp    0x140005e60
   140005e58:	mov    DWORD PTR [rsp+0x44],0xa3
   140005e60:	mov    rax,QWORD PTR [r14]
   140005e63:	mov    rcx,QWORD PTR [rip+0xcae6]        # 0x140012950
   140005e6a:	add    r14,0x8
   140005e6e:	movsx  edi,r12b
   140005e72:	movsxd rsi,esi
   140005e75:	mov    QWORD PTR [rbp-0x48],rax
   140005e79:	call   QWORD PTR [rip+0x8291]        # 0x14000e110
   140005e7f:	lea    rcx,[rbp-0x80]
   140005e83:	mov    r9d,edi
   140005e86:	mov    QWORD PTR [rsp+0x30],rcx
   140005e8b:	mov    ecx,DWORD PTR [rsp+0x78]
   140005e8f:	mov    r8,rsi
   140005e92:	mov    DWORD PTR [rsp+0x28],ecx
   140005e96:	mov    ecx,DWORD PTR [rsp+0x44]
   140005e9a:	mov    rdx,rbx
   140005e9d:	mov    DWORD PTR [rsp+0x20],ecx
   140005ea1:	lea    rcx,[rbp-0x48]
   140005ea5:	call   rax
   140005ea7:	mov    edi,r13d
   140005eaa:	and    edi,0x80
   140005eb0:	je     0x140005ed0
   140005eb2:	xor    eax,eax
   140005eb4:	cmp    DWORD PTR [rsp+0x44],eax
   140005eb8:	jne    0x140005ed0
   140005eba:	mov    rcx,QWORD PTR [rip+0xcaa7]        # 0x140012968
   140005ec1:	call   QWORD PTR [rip+0x8249]        # 0x14000e110
   140005ec7:	lea    rdx,[rbp-0x80]
   140005ecb:	mov    rcx,rbx
   140005ece:	call   rax
   140005ed0:	cmp    r12b,0x67
   140005ed4:	jne    0x140005ef0
   140005ed6:	test   edi,edi
   140005ed8:	jne    0x140005ef0
   140005eda:	mov    rcx,QWORD PTR [rip+0xca7f]        # 0x140012960
   140005ee1:	call   QWORD PTR [rip+0x8229]        # 0x14000e110
   140005ee7:	lea    rdx,[rbp-0x80]
   140005eeb:	mov    rcx,rbx
   140005eee:	call   rax
   140005ef0:	cmp    BYTE PTR [rbx],0x2d
   140005ef3:	jne    0x140005efd
   140005ef5:	bts    r13d,0x8
   140005efa:	inc    rbx
   140005efd:	mov    rcx,rbx
   140005f00:	call   0x140008210
   140005f05:	mov    esi,DWORD PTR [rsp+0x40]
   140005f09:	xor    r10d,r10d
   140005f0c:	mov    DWORD PTR [rsp+0x48],eax
   140005f10:	cmp    DWORD PTR [rsp+0x5c],r10d
   140005f15:	jne    0x140006075
   140005f1b:	test   r13b,0x40
   140005f1f:	je     0x140005f52
   140005f21:	bt     r13d,0x8
   140005f26:	jae    0x140005f2f
   140005f28:	mov    BYTE PTR [rsp+0x50],0x2d
   140005f2d:	jmp    0x140005f3a
   140005f2f:	test   r13b,0x1
   140005f33:	je     0x140005f45
   140005f35:	mov    BYTE PTR [rsp+0x50],0x2b
   140005f3a:	mov    edi,0x1
   140005f3f:	mov    DWORD PTR [rsp+0x4c],edi
   140005f43:	jmp    0x140005f56
   140005f45:	test   r13b,0x2
   140005f49:	je     0x140005f52
   140005f4b:	mov    BYTE PTR [rsp+0x50],0x20
   140005f50:	jmp    0x140005f3a
   140005f52:	mov    edi,DWORD PTR [rsp+0x4c]
   140005f56:	mov    r12d,DWORD PTR [rsp+0x58]
   140005f5b:	mov    rsi,QWORD PTR [rsp+0x70]
   140005f60:	sub    r12d,DWORD PTR [rsp+0x48]
   140005f65:	sub    r12d,edi
   140005f68:	test   r13b,0xc
   140005f6c:	jne    0x140005f80
   140005f6e:	lea    r9,[rsp+0x40]
   140005f73:	mov    r8,rsi
   140005f76:	mov    edx,r12d
   140005f79:	mov    cl,0x20
   140005f7b:	call   0x140005778
   140005f80:	mov    rax,QWORD PTR [rbp-0x60]
   140005f84:	lea    r9,[rsp+0x40]
   140005f89:	lea    rcx,[rsp+0x50]
   140005f8e:	mov    r8,rsi
   140005f91:	mov    edx,edi
   140005f93:	mov    QWORD PTR [rsp+0x20],rax
   140005f98:	call   0x1400057cc
   140005f9d:	test   r13b,0x8
   140005fa1:	je     0x140005fbb
   140005fa3:	test   r13b,0x4
   140005fa7:	jne    0x140005fbb
   140005fa9:	lea    r9,[rsp+0x40]
   140005fae:	mov    r8,rsi
   140005fb1:	mov    edx,r12d
   140005fb4:	mov    cl,0x30
   140005fb6:	call   0x140005778
   140005fbb:	mov    edi,DWORD PTR [rsp+0x48]
   140005fbf:	xor    eax,eax
   140005fc1:	cmp    DWORD PTR [rsp+0x54],eax
   140005fc5:	je     0x14000602e
   140005fc7:	test   edi,edi
   140005fc9:	jle    0x14000602e
   140005fcb:	mov    rsi,rbx
   140005fce:	movzx  r9d,WORD PTR [rsi]
   140005fd2:	lea    rdx,[rbp+0x1c0]
   140005fd9:	lea    rcx,[rbp-0x58]
   140005fdd:	mov    r8d,0x6
   140005fe3:	dec    edi
   140005fe5:	add    rsi,0x2
   140005fe9:	call   0x14000c438
   140005fee:	xor    r10d,r10d
   140005ff1:	test   eax,eax
   140005ff3:	jne    0x140006024
   140005ff5:	mov    edx,DWORD PTR [rbp-0x58]
   140005ff8:	test   edx,edx
   140005ffa:	je     0x140006024
   140005ffc:	mov    rax,QWORD PTR [rbp-0x60]
   140006000:	mov    r8,QWORD PTR [rsp+0x70]
   140006005:	lea    r9,[rsp+0x40]
   14000600a:	lea    rcx,[rbp+0x1c0]
   140006011:	mov    QWORD PTR [rsp+0x20],rax
   140006016:	call   0x1400057cc
   14000601b:	xor    r10d,r10d
   14000601e:	test   edi,edi
   140006020:	jne    0x140005fce
   140006022:	jmp    0x14000604c
   140006024:	mov    esi,r15d
   140006027:	mov    DWORD PTR [rsp+0x40],r15d
   14000602c:	jmp    0x140006050
   14000602e:	mov    rax,QWORD PTR [rbp-0x60]
   140006032:	lea    r9,[rsp+0x40]
   140006037:	mov    r8,rsi
   14000603a:	mov    edx,edi
   14000603c:	mov    rcx,rbx
   14000603f:	mov    QWORD PTR [rsp+0x20],rax
   140006044:	call   0x1400057cc
   140006049:	xor    r10d,r10d
   14000604c:	mov    esi,DWORD PTR [rsp+0x40]
   140006050:	test   esi,esi
   140006052:	js     0x140006075
   140006054:	test   r13b,0x4
   140006058:	je     0x140006075
   14000605a:	mov    r8,QWORD PTR [rsp+0x70]
   14000605f:	lea    r9,[rsp+0x40]
   140006064:	mov    edx,r12d
   140006067:	mov    cl,0x20
   140006069:	call   0x140005778
   14000606e:	mov    esi,DWORD PTR [rsp+0x40]
   140006072:	xor    r10d,r10d
   140006075:	mov    rax,QWORD PTR [rbp-0x50]
   140006079:	test   rax,rax
   14000607c:	je     0x14000608d
   14000607e:	mov    rcx,rax
   140006081:	call   0x140001a94
   140006086:	xor    r10d,r10d
   140006089:	mov    QWORD PTR [rbp-0x50],r10
   14000608d:	mov    edi,DWORD PTR [rsp+0x44]
   140006091:	mov    r8,QWORD PTR [rsp+0x68]
   140006096:	mov    edx,DWORD PTR [rsp+0x60]
   14000609a:	mov    r11d,0x200
   1400060a0:	lea    r9,[rip+0xffffffffffff9f59]        # 0x140000000
   1400060a7:	mov    r12b,BYTE PTR [r8]
   1400060aa:	test   r12b,r12b
   1400060ad:	jne    0x1400059fa
   1400060b3:	cmp    BYTE PTR [rbp-0x68],r10b
   1400060b7:	je     0x1400060c4
   1400060b9:	mov    rcx,QWORD PTR [rbp-0x70]
   1400060bd:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400060c4:	mov    eax,esi
   1400060c6:	mov    rcx,QWORD PTR [rbp+0x1c8]
   1400060cd:	xor    rcx,rsp
   1400060d0:	call   0x140001920
   1400060d5:	mov    rbx,QWORD PTR [rsp+0x320]
   1400060dd:	add    rsp,0x2d0
   1400060e4:	pop    r15
   1400060e6:	pop    r14
   1400060e8:	pop    r13
   1400060ea:	pop    r12
   1400060ec:	pop    rdi
   1400060ed:	pop    rsi
   1400060ee:	pop    rbp
   1400060ef:	ret    
   1400060f0:	cmp    r12b,0x49
   1400060f4:	je     0x14000612e
   1400060f6:	cmp    r12b,0x68
   1400060fa:	je     0x140006125
   1400060fc:	cmp    r12b,0x6c
   140006100:	je     0x14000610f
   140006102:	cmp    r12b,0x77
   140006106:	jne    0x1400060a7
   140006108:	bts    r13d,0xb
   14000610d:	jmp    0x1400060a7
   14000610f:	cmp    BYTE PTR [r8],0x6c
   140006113:	jne    0x14000611f
   140006115:	inc    r8
   140006118:	bts    r13d,0xc
   14000611d:	jmp    0x1400060a7
   14000611f:	or     r13d,0x10
   140006123:	jmp    0x1400060a7
   140006125:	or     r13d,0x20
   140006129:	jmp    0x1400060a7
   14000612e:	mov    al,BYTE PTR [r8]
   140006131:	bts    r13d,0xf
   140006136:	cmp    al,0x36
   140006138:	jne    0x14000614f
   14000613a:	cmp    BYTE PTR [r8+0x1],0x34
   14000613f:	jne    0x14000614f
   140006141:	add    r8,0x2
   140006145:	bts    r13d,0xf
   14000614a:	jmp    0x1400060a7
   14000614f:	cmp    al,0x33
   140006151:	jne    0x140006168
   140006153:	cmp    BYTE PTR [r8+0x1],0x32
   140006158:	jne    0x140006168
   14000615a:	add    r8,0x2
   14000615e:	btr    r13d,0xf
   140006163:	jmp    0x1400060a7
   140006168:	cmp    al,0x64
   14000616a:	je     0x1400060a7
   140006170:	cmp    al,0x69
   140006172:	je     0x1400060a7
   140006178:	cmp    al,0x6f
   14000617a:	je     0x1400060a7
   140006180:	cmp    al,0x75
   140006182:	je     0x1400060a7
   140006188:	cmp    al,0x78
   14000618a:	je     0x1400060a7
   140006190:	cmp    al,0x58
   140006192:	je     0x1400060a7
   140006198:	mov    DWORD PTR [rsp+0x60],r10d
   14000619d:	lea    rdx,[rbp-0x80]
   1400061a1:	movzx  ecx,r12b
   1400061a5:	mov    DWORD PTR [rsp+0x54],r10d
   1400061aa:	call   0x14000ad70
   1400061af:	xor    esi,esi
   1400061b1:	test   eax,eax
   1400061b3:	je     0x1400061e0
   1400061b5:	mov    rdx,QWORD PTR [rsp+0x70]
   1400061ba:	lea    r8,[rsp+0x40]
   1400061bf:	mov    cl,r12b
   1400061c2:	call   0x1400090cc
   1400061c7:	mov    rdx,QWORD PTR [rsp+0x68]
   1400061cc:	mov    r12b,BYTE PTR [rdx]
   1400061cf:	inc    rdx
   1400061d2:	mov    QWORD PTR [rsp+0x68],rdx
   1400061d7:	test   r12b,r12b
   1400061da:	je     0x1400062f7
   1400061e0:	mov    rdx,QWORD PTR [rsp+0x70]
   1400061e5:	lea    r8,[rsp+0x40]
   1400061ea:	mov    cl,r12b
   1400061ed:	call   0x1400090cc
   1400061f2:	mov    esi,DWORD PTR [rsp+0x40]
   1400061f6:	xor    r10d,r10d
   1400061f9:	jmp    0x140006091
   1400061fe:	cmp    r12b,0x2a
   140006202:	jne    0x140006224
   140006204:	mov    edi,DWORD PTR [r14]
   140006207:	add    r14,0x8
   14000620b:	mov    DWORD PTR [rsp+0x44],edi
   14000620f:	test   edi,edi
   140006211:	jns    0x1400060a7
   140006217:	mov    edi,r15d
   14000621a:	mov    DWORD PTR [rsp+0x44],r15d
   14000621f:	jmp    0x1400060a7
   140006224:	lea    ecx,[rdi+rdi*4]
   140006227:	movsx  eax,r12b
   14000622b:	lea    edi,[rax+rcx*2-0x30]
   14000622f:	mov    DWORD PTR [rsp+0x44],edi
   140006233:	jmp    0x1400060a7
   140006238:	mov    edi,r10d
   14000623b:	mov    DWORD PTR [rsp+0x44],r10d
   140006240:	jmp    0x1400060a7
   140006245:	cmp    r12b,0x2a
   140006249:	jne    0x140006266
   14000624b:	mov    eax,DWORD PTR [r14]
   14000624e:	add    r14,0x8
   140006252:	mov    DWORD PTR [rsp+0x58],eax
   140006256:	test   eax,eax
   140006258:	jns    0x1400060a7
   14000625e:	or     r13d,0x4
   140006262:	neg    eax
   140006264:	jmp    0x140006275
   140006266:	mov    eax,DWORD PTR [rsp+0x58]
   14000626a:	lea    ecx,[rax+rax*4]
   14000626d:	movsx  eax,r12b
   140006271:	lea    eax,[rax+rcx*2-0x30]
   140006275:	mov    DWORD PTR [rsp+0x58],eax
   140006279:	jmp    0x1400060a7
   14000627e:	cmp    r12b,0x20
   140006282:	je     0x1400062c5
   140006284:	cmp    r12b,0x23
   140006288:	je     0x1400062bb
   14000628a:	cmp    r12b,0x2b
   14000628e:	je     0x1400062b2
   140006290:	cmp    r12b,0x2d
   140006294:	je     0x1400062a9
   140006296:	cmp    r12b,0x30
   14000629a:	jne    0x1400060a7
   1400062a0:	or     r13d,0x8
   1400062a4:	jmp    0x1400060a7
   1400062a9:	or     r13d,0x4
   1400062ad:	jmp    0x1400060a7
   1400062b2:	or     r13d,0x1
   1400062b6:	jmp    0x1400060a7
   1400062bb:	bts    r13d,0x7
   1400062c0:	jmp    0x1400060a7
   1400062c5:	or     r13d,0x2
   1400062c9:	jmp    0x1400060a7
   1400062ce:	mov    DWORD PTR [rsp+0x78],r10d
   1400062d3:	mov    DWORD PTR [rsp+0x5c],r10d
   1400062d8:	mov    DWORD PTR [rsp+0x58],r10d
   1400062dd:	mov    DWORD PTR [rsp+0x4c],r10d
   1400062e2:	mov    r13d,r10d
   1400062e5:	mov    edi,r15d
   1400062e8:	mov    DWORD PTR [rsp+0x44],r15d
   1400062ed:	mov    DWORD PTR [rsp+0x54],r10d
   1400062f2:	jmp    0x1400060a7
   1400062f7:	call   0x140003250
   1400062fc:	mov    DWORD PTR [rax],0x16
   140006302:	call   0x1400031e8
   140006307:	cmp    BYTE PTR [rbp-0x68],sil
   14000630b:	jmp    0x1400059ae
   140006310:	mov    QWORD PTR [rsp+0x8],rbx
   140006315:	mov    QWORD PTR [rsp+0x10],rsi
   14000631a:	push   rdi
   14000631b:	sub    rsp,0x20
   14000631f:	movsxd rbx,ecx
   140006322:	mov    edi,r8d
   140006325:	mov    esi,edx
   140006327:	mov    ecx,ebx
   140006329:	call   0x14000bbe0
   14000632e:	cmp    rax,0xffffffffffffffff
   140006332:	jne    0x140006344
   140006334:	call   0x140003250
   140006339:	mov    DWORD PTR [rax],0x9
   14000633f:	or     eax,0xffffffff
   140006342:	jmp    0x140006396
   140006344:	mov    r9d,edi
   140006347:	xor    r8d,r8d
   14000634a:	mov    edx,esi
   14000634c:	mov    rcx,rax
   14000634f:	call   QWORD PTR [rip+0x7e23]        # 0x14000e178
   140006355:	mov    edi,eax
   140006357:	cmp    eax,0xffffffff
   14000635a:	jne    0x140006364
   14000635c:	call   QWORD PTR [rip+0x7d0e]        # 0x14000e070
   140006362:	jmp    0x140006366
   140006364:	xor    eax,eax
   140006366:	test   eax,eax
   140006368:	je     0x140006373
   14000636a:	mov    ecx,eax
   14000636c:	call   0x140003290
   140006371:	jmp    0x14000633f
   140006373:	mov    rcx,rbx
   140006376:	mov    rax,rbx
   140006379:	lea    rdx,[rip+0xe2a0]        # 0x140014620
   140006380:	sar    rax,0x5
   140006384:	and    ecx,0x1f
   140006387:	mov    rax,QWORD PTR [rdx+rax*8]
   14000638b:	imul   rcx,rcx,0x58
   14000638f:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140006394:	mov    eax,edi
   140006396:	mov    rbx,QWORD PTR [rsp+0x30]
   14000639b:	mov    rsi,QWORD PTR [rsp+0x38]
   1400063a0:	add    rsp,0x20
   1400063a4:	pop    rdi
   1400063a5:	ret    
   1400063a6:	int3   
   1400063a7:	int3   
   1400063a8:	mov    QWORD PTR [rsp+0x10],rbx
   1400063ad:	mov    DWORD PTR [rsp+0x8],ecx
   1400063b1:	push   rsi
   1400063b2:	push   rdi
   1400063b3:	push   r12
   1400063b5:	push   r13
   1400063b7:	push   r14
   1400063b9:	sub    rsp,0x20
   1400063bd:	mov    esi,r8d
   1400063c0:	mov    r12d,edx
   1400063c3:	movsxd rdi,ecx
   1400063c6:	cmp    edi,0xfffffffe
   1400063c9:	jne    0x1400063e3
   1400063cb:	call   0x140003270
   1400063d0:	and    DWORD PTR [rax],0x0
   1400063d3:	call   0x140003250
   1400063d8:	mov    DWORD PTR [rax],0x9
   1400063de:	jmp    0x140006472
   1400063e3:	test   ecx,ecx
   1400063e5:	js     0x14000645a
   1400063e7:	cmp    edi,DWORD PTR [rip+0xe213]        # 0x140014600
   1400063ed:	jae    0x14000645a
   1400063ef:	mov    rbx,rdi
   1400063f2:	mov    r13,rdi
   1400063f5:	sar    r13,0x5
   1400063f9:	lea    r14,[rip+0xe220]        # 0x140014620
   140006400:	and    ebx,0x1f
   140006403:	imul   rbx,rbx,0x58
   140006407:	mov    rax,QWORD PTR [r14+r13*8]
   14000640b:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140006410:	and    ecx,0x1
   140006413:	je     0x14000645a
   140006415:	mov    ecx,edi
   140006417:	call   0x14000bc54
   14000641c:	nop
   14000641d:	mov    rax,QWORD PTR [r14+r13*8]
   140006421:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140006426:	je     0x140006439
   140006428:	mov    r8d,esi
   14000642b:	mov    edx,r12d
   14000642e:	mov    ecx,edi
   140006430:	call   0x140006310
   140006435:	mov    ebx,eax
   140006437:	jmp    0x14000644f
   140006439:	call   0x140003250
   14000643e:	mov    DWORD PTR [rax],0x9
   140006444:	call   0x140003270
   140006449:	and    DWORD PTR [rax],0x0
   14000644c:	or     ebx,0xffffffff
   14000644f:	mov    ecx,edi
   140006451:	call   0x14000bcfc
   140006456:	mov    eax,ebx
   140006458:	jmp    0x140006475
   14000645a:	call   0x140003270
   14000645f:	and    DWORD PTR [rax],0x0
   140006462:	call   0x140003250
   140006467:	mov    DWORD PTR [rax],0x9
   14000646d:	call   0x1400031e8
   140006472:	or     eax,0xffffffff
   140006475:	mov    rbx,QWORD PTR [rsp+0x58]
   14000647a:	add    rsp,0x20
   14000647e:	pop    r14
   140006480:	pop    r13
   140006482:	pop    r12
   140006484:	pop    rdi
   140006485:	pop    rsi
   140006486:	ret    
   140006487:	int3   
   140006488:	mov    QWORD PTR [rsp+0x8],rbx
   14000648d:	push   rdi
   14000648e:	sub    rsp,0x20
   140006492:	movsxd rdi,ecx
   140006495:	mov    ecx,edi
   140006497:	call   0x14000bbe0
   14000649c:	cmp    rax,0xffffffffffffffff
   1400064a0:	je     0x1400064fb
   1400064a2:	mov    rax,QWORD PTR [rip+0xe177]        # 0x140014620
   1400064a9:	mov    ecx,0x2
   1400064ae:	cmp    edi,0x1
   1400064b1:	jne    0x1400064bc
   1400064b3:	test   BYTE PTR [rax+0xb8],dil
   1400064ba:	jne    0x1400064c6
   1400064bc:	cmp    edi,ecx
   1400064be:	jne    0x1400064dd
   1400064c0:	test   BYTE PTR [rax+0x60],0x1
   1400064c4:	je     0x1400064dd
   1400064c6:	call   0x14000bbe0
   1400064cb:	mov    ecx,0x1
   1400064d0:	mov    rbx,rax
   1400064d3:	call   0x14000bbe0
   1400064d8:	cmp    rax,rbx
   1400064db:	je     0x1400064fb
   1400064dd:	mov    ecx,edi
   1400064df:	call   0x14000bbe0
   1400064e4:	mov    rcx,rax
   1400064e7:	call   QWORD PTR [rip+0x7b9b]        # 0x14000e088
   1400064ed:	test   eax,eax
   1400064ef:	jne    0x1400064fb
   1400064f1:	call   QWORD PTR [rip+0x7b79]        # 0x14000e070
   1400064f7:	mov    ebx,eax
   1400064f9:	jmp    0x1400064fd
   1400064fb:	xor    ebx,ebx
   1400064fd:	mov    ecx,edi
   1400064ff:	call   0x14000bb34
   140006504:	mov    r11,rdi
   140006507:	mov    rcx,rdi
   14000650a:	sar    rcx,0x5
   14000650e:	and    r11d,0x1f
   140006512:	lea    rdx,[rip+0xe107]        # 0x140014620
   140006519:	mov    rcx,QWORD PTR [rdx+rcx*8]
   14000651d:	imul   r11,r11,0x58
   140006521:	mov    BYTE PTR [rcx+r11*1+0x8],0x0
   140006527:	test   ebx,ebx
   140006529:	je     0x140006537
   14000652b:	mov    ecx,ebx
   14000652d:	call   0x140003290
   140006532:	or     eax,0xffffffff
   140006535:	jmp    0x140006539
   140006537:	xor    eax,eax
   140006539:	mov    rbx,QWORD PTR [rsp+0x30]
   14000653e:	add    rsp,0x20
   140006542:	pop    rdi
   140006543:	ret    
   140006544:	mov    QWORD PTR [rsp+0x18],rbx
   140006549:	mov    DWORD PTR [rsp+0x8],ecx
   14000654d:	push   rsi
   14000654e:	push   rdi
   14000654f:	push   r12
   140006551:	sub    rsp,0x20
   140006555:	movsxd rbx,ecx
   140006558:	cmp    ebx,0xfffffffe
   14000655b:	jne    0x140006575
   14000655d:	call   0x140003270
   140006562:	and    DWORD PTR [rax],0x0
   140006565:	call   0x140003250
   14000656a:	mov    DWORD PTR [rax],0x9
   140006570:	jmp    0x1400065f6
   140006575:	test   ecx,ecx
   140006577:	js     0x1400065de
   140006579:	cmp    ebx,DWORD PTR [rip+0xe081]        # 0x140014600
   14000657f:	jae    0x1400065de
   140006581:	mov    rdi,rbx
   140006584:	mov    rsi,rbx
   140006587:	sar    rsi,0x5
   14000658b:	lea    r12,[rip+0xe08e]        # 0x140014620
   140006592:	and    edi,0x1f
   140006595:	imul   rdi,rdi,0x58
   140006599:	mov    rax,QWORD PTR [r12+rsi*8]
   14000659d:	movsx  ecx,BYTE PTR [rax+rdi*1+0x8]
   1400065a2:	and    ecx,0x1
   1400065a5:	je     0x1400065de
   1400065a7:	mov    ecx,ebx
   1400065a9:	call   0x14000bc54
   1400065ae:	nop
   1400065af:	mov    rax,QWORD PTR [r12+rsi*8]
   1400065b3:	test   BYTE PTR [rax+rdi*1+0x8],0x1
   1400065b8:	je     0x1400065c5
   1400065ba:	mov    ecx,ebx
   1400065bc:	call   0x140006488
   1400065c1:	mov    edi,eax
   1400065c3:	jmp    0x1400065d3
   1400065c5:	call   0x140003250
   1400065ca:	mov    DWORD PTR [rax],0x9
   1400065d0:	or     edi,0xffffffff
   1400065d3:	mov    ecx,ebx
   1400065d5:	call   0x14000bcfc
   1400065da:	mov    eax,edi
   1400065dc:	jmp    0x1400065f9
   1400065de:	call   0x140003270
   1400065e3:	and    DWORD PTR [rax],0x0
   1400065e6:	call   0x140003250
   1400065eb:	mov    DWORD PTR [rax],0x9
   1400065f1:	call   0x1400031e8
   1400065f6:	or     eax,0xffffffff
   1400065f9:	mov    rbx,QWORD PTR [rsp+0x50]
   1400065fe:	add    rsp,0x20
   140006602:	pop    r12
   140006604:	pop    rdi
   140006605:	pop    rsi
   140006606:	ret    
   140006607:	int3   
   140006608:	rex push rbx
   14000660a:	sub    rsp,0x20
   14000660e:	test   BYTE PTR [rcx+0x18],0x83
   140006612:	mov    rbx,rcx
   140006615:	je     0x140006639
   140006617:	test   BYTE PTR [rcx+0x18],0x8
   14000661b:	je     0x140006639
   14000661d:	mov    rcx,QWORD PTR [rcx+0x10]
   140006621:	call   0x140001a94
   140006626:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   14000662d:	xor    eax,eax
   14000662f:	mov    QWORD PTR [rbx],rax
   140006632:	mov    QWORD PTR [rbx+0x10],rax
   140006636:	mov    DWORD PTR [rbx+0x8],eax
   140006639:	add    rsp,0x20
   14000663d:	pop    rbx
   14000663e:	ret    
   14000663f:	int3   
   140006640:	sub    rsp,0x28
   140006644:	mov    rax,QWORD PTR [rcx]
   140006647:	cmp    DWORD PTR [rax],0xe06d7363
   14000664d:	jne    0x14000667a
   14000664f:	cmp    DWORD PTR [rax+0x18],0x4
   140006653:	jne    0x14000667a
   140006655:	mov    eax,DWORD PTR [rax+0x20]
   140006658:	cmp    eax,0x19930520
   14000665d:	je     0x140006674
   14000665f:	cmp    eax,0x19930521
   140006664:	je     0x140006674
   140006666:	cmp    eax,0x19930522
   14000666b:	je     0x140006674
   14000666d:	cmp    eax,0x1994000
   140006672:	jne    0x14000667a
   140006674:	call   0x140007da4
   140006679:	int3   
   14000667a:	xor    eax,eax
   14000667c:	add    rsp,0x28
   140006680:	ret    
   140006681:	int3   
   140006682:	int3   
   140006683:	int3   
   140006684:	sub    rsp,0x28
   140006688:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x140006640
   14000668f:	call   QWORD PTR [rip+0x7a3b]        # 0x14000e0d0
   140006695:	xor    eax,eax
   140006697:	add    rsp,0x28
   14000669b:	ret    
   14000669c:	mov    QWORD PTR [rsp+0x8],rbx
   1400066a1:	mov    QWORD PTR [rsp+0x10],rbp
   1400066a6:	mov    QWORD PTR [rsp+0x18],rsi
   1400066ab:	push   rdi
   1400066ac:	sub    rsp,0x20
   1400066b0:	mov    rsi,rdx
   1400066b3:	mov    edi,ecx
   1400066b5:	call   0x140006eb4
   1400066ba:	xor    r9d,r9d
   1400066bd:	mov    rbx,rax
   1400066c0:	test   rax,rax
   1400066c3:	je     0x140006855
   1400066c9:	mov    rdx,QWORD PTR [rax+0xa0]
   1400066d0:	mov    rcx,rdx
   1400066d3:	cmp    DWORD PTR [rcx],edi
   1400066d5:	je     0x1400066e7
   1400066d7:	lea    rax,[rdx+0xc0]
   1400066de:	add    rcx,0x10
   1400066e2:	cmp    rcx,rax
   1400066e5:	jb     0x1400066d3
   1400066e7:	lea    rax,[rdx+0xc0]
   1400066ee:	cmp    rcx,rax
   1400066f1:	jae    0x1400066f7
   1400066f3:	cmp    DWORD PTR [rcx],edi
   1400066f5:	je     0x1400066fa
   1400066f7:	mov    rcx,r9
   1400066fa:	test   rcx,rcx
   1400066fd:	je     0x140006855
   140006703:	mov    r8,QWORD PTR [rcx+0x8]
   140006707:	test   r8,r8
   14000670a:	je     0x140006855
   140006710:	cmp    r8,0x5
   140006714:	jne    0x140006723
   140006716:	mov    QWORD PTR [rcx+0x8],r9
   14000671a:	lea    eax,[r8-0x4]
   14000671e:	jmp    0x140006857
   140006723:	cmp    r8,0x1
   140006727:	jne    0x140006731
   140006729:	or     eax,0xffffffff
   14000672c:	jmp    0x140006857
   140006731:	mov    rbp,QWORD PTR [rbx+0xa8]
   140006738:	mov    QWORD PTR [rbx+0xa8],rsi
   14000673f:	cmp    DWORD PTR [rcx+0x4],0x8
   140006743:	jne    0x14000683f
   140006749:	mov    edx,0x30
   14000674e:	mov    rax,QWORD PTR [rbx+0xa0]
   140006755:	add    rdx,0x10
   140006759:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   14000675e:	cmp    rdx,0xc0
   140006765:	jl     0x14000674e
   140006767:	cmp    DWORD PTR [rcx],0xc000008e
   14000676d:	mov    edi,DWORD PTR [rbx+0xb0]
   140006773:	jne    0x140006784
   140006775:	mov    DWORD PTR [rbx+0xb0],0x83
   14000677f:	jmp    0x140006829
   140006784:	cmp    DWORD PTR [rcx],0xc0000090
   14000678a:	jne    0x14000679b
   14000678c:	mov    DWORD PTR [rbx+0xb0],0x81
   140006796:	jmp    0x140006829
   14000679b:	cmp    DWORD PTR [rcx],0xc0000091
   1400067a1:	jne    0x1400067af
   1400067a3:	mov    DWORD PTR [rbx+0xb0],0x84
   1400067ad:	jmp    0x140006829
   1400067af:	cmp    DWORD PTR [rcx],0xc0000093
   1400067b5:	jne    0x1400067c3
   1400067b7:	mov    DWORD PTR [rbx+0xb0],0x85
   1400067c1:	jmp    0x140006829
   1400067c3:	cmp    DWORD PTR [rcx],0xc000008d
   1400067c9:	jne    0x1400067d7
   1400067cb:	mov    DWORD PTR [rbx+0xb0],0x82
   1400067d5:	jmp    0x140006829
   1400067d7:	cmp    DWORD PTR [rcx],0xc000008f
   1400067dd:	jne    0x1400067eb
   1400067df:	mov    DWORD PTR [rbx+0xb0],0x86
   1400067e9:	jmp    0x140006829
   1400067eb:	cmp    DWORD PTR [rcx],0xc0000092
   1400067f1:	jne    0x1400067ff
   1400067f3:	mov    DWORD PTR [rbx+0xb0],0x8a
   1400067fd:	jmp    0x140006829
   1400067ff:	cmp    DWORD PTR [rcx],0xc00002b5
   140006805:	jne    0x140006813
   140006807:	mov    DWORD PTR [rbx+0xb0],0x8d
   140006811:	jmp    0x140006829
   140006813:	cmp    DWORD PTR [rcx],0xc00002b4
   140006819:	mov    eax,edi
   14000681b:	mov    edx,0x8e
   140006820:	cmove  eax,edx
   140006823:	mov    DWORD PTR [rbx+0xb0],eax
   140006829:	mov    edx,DWORD PTR [rbx+0xb0]
   14000682f:	mov    ecx,0x8
   140006834:	call   r8
   140006837:	mov    DWORD PTR [rbx+0xb0],edi
   14000683d:	jmp    0x140006849
   14000683f:	mov    QWORD PTR [rcx+0x8],r9
   140006843:	mov    ecx,DWORD PTR [rcx+0x4]
   140006846:	call   r8
   140006849:	mov    QWORD PTR [rbx+0xa8],rbp
   140006850:	jmp    0x140006729
   140006855:	xor    eax,eax
   140006857:	mov    rbx,QWORD PTR [rsp+0x30]
   14000685c:	mov    rbp,QWORD PTR [rsp+0x38]
   140006861:	mov    rsi,QWORD PTR [rsp+0x40]
   140006866:	add    rsp,0x20
   14000686a:	pop    rdi
   14000686b:	ret    
   14000686c:	mov    QWORD PTR [rsp+0x8],rbx
   140006871:	mov    QWORD PTR [rsp+0x10],rbp
   140006876:	mov    QWORD PTR [rsp+0x18],rsi
   14000687b:	push   rdi
   14000687c:	sub    rsp,0x30
   140006880:	cmp    DWORD PTR [rip+0xdfb1],0x0        # 0x140014838
   140006887:	jne    0x14000688e
   140006889:	call   0x14000a634
   14000688e:	mov    rbx,QWORD PTR [rip+0xcb33]        # 0x1400133c8
   140006895:	xor    edi,edi
   140006897:	test   rbx,rbx
   14000689a:	jne    0x1400068b7
   14000689c:	or     eax,0xffffffff
   14000689f:	jmp    0x140006958
   1400068a4:	cmp    al,0x3d
   1400068a6:	je     0x1400068aa
   1400068a8:	inc    edi
   1400068aa:	mov    rcx,rbx
   1400068ad:	call   0x140008210
   1400068b2:	lea    rbx,[rbx+rax*1+0x1]
   1400068b7:	mov    al,BYTE PTR [rbx]
   1400068b9:	test   al,al
   1400068bb:	jne    0x1400068a4
   1400068bd:	lea    eax,[rdi+0x1]
   1400068c0:	mov    edx,0x8
   1400068c5:	movsxd rcx,eax
   1400068c8:	call   0x140003e68
   1400068cd:	mov    rdi,rax
   1400068d0:	mov    QWORD PTR [rip+0xd0a1],rax        # 0x140013978
   1400068d7:	test   rax,rax
   1400068da:	je     0x14000689c
   1400068dc:	mov    rbx,QWORD PTR [rip+0xcae5]        # 0x1400133c8
   1400068e3:	cmp    BYTE PTR [rbx],0x0
   1400068e6:	je     0x140006938
   1400068e8:	mov    rcx,rbx
   1400068eb:	call   0x140008210
   1400068f0:	cmp    BYTE PTR [rbx],0x3d
   1400068f3:	lea    esi,[rax+0x1]
   1400068f6:	je     0x140006926
   1400068f8:	movsxd rbp,esi
   1400068fb:	mov    edx,0x1
   140006900:	mov    rcx,rbp
   140006903:	call   0x140003e68
   140006908:	mov    QWORD PTR [rdi],rax
   14000690b:	test   rax,rax
   14000690e:	je     0x140006983
   140006910:	mov    r8,rbx
   140006913:	mov    rdx,rbp
   140006916:	mov    rcx,rax
   140006919:	call   0x14000c44c
   14000691e:	test   eax,eax
   140006920:	jne    0x14000696d
   140006922:	add    rdi,0x8
   140006926:	movsxd rax,esi
   140006929:	add    rbx,rax
   14000692c:	cmp    BYTE PTR [rbx],0x0
   14000692f:	jne    0x1400068e8
   140006931:	mov    rbx,QWORD PTR [rip+0xca90]        # 0x1400133c8
   140006938:	mov    rcx,rbx
   14000693b:	call   0x140001a94
   140006940:	and    QWORD PTR [rip+0xca80],0x0        # 0x1400133c8
   140006948:	and    QWORD PTR [rdi],0x0
   14000694c:	mov    DWORD PTR [rip+0xdeca],0x1        # 0x140014820
   140006956:	xor    eax,eax
   140006958:	mov    rbx,QWORD PTR [rsp+0x40]
   14000695d:	mov    rbp,QWORD PTR [rsp+0x48]
   140006962:	mov    rsi,QWORD PTR [rsp+0x50]
   140006967:	add    rsp,0x30
   14000696b:	pop    rdi
   14000696c:	ret    
   14000696d:	and    QWORD PTR [rsp+0x20],0x0
   140006973:	xor    r9d,r9d
   140006976:	xor    r8d,r8d
   140006979:	xor    edx,edx
   14000697b:	xor    ecx,ecx
   14000697d:	call   0x140003144
   140006982:	int3   
   140006983:	mov    rcx,QWORD PTR [rip+0xcfee]        # 0x140013978
   14000698a:	call   0x140001a94
   14000698f:	and    QWORD PTR [rip+0xcfe1],0x0        # 0x140013978
   140006997:	jmp    0x14000689c
   14000699c:	mov    rax,rsp
   14000699f:	mov    QWORD PTR [rax+0x8],rbx
   1400069a3:	mov    QWORD PTR [rax+0x10],rbp
   1400069a7:	mov    QWORD PTR [rax+0x18],rsi
   1400069ab:	mov    QWORD PTR [rax+0x20],rdi
   1400069af:	push   r12
   1400069b1:	push   r13
   1400069b3:	push   r14
   1400069b5:	sub    rsp,0x20
   1400069b9:	mov    r13,QWORD PTR [rsp+0x60]
   1400069be:	mov    r14,r9
   1400069c1:	mov    rdi,r8
   1400069c4:	and    DWORD PTR [r13+0x0],0x0
   1400069c9:	mov    r12,rdx
   1400069cc:	mov    rbx,rcx
   1400069cf:	mov    DWORD PTR [r9],0x1
   1400069d6:	test   rdx,rdx
   1400069d9:	je     0x1400069e2
   1400069db:	mov    QWORD PTR [rdx],r8
   1400069de:	add    r12,0x8
   1400069e2:	xor    ebp,ebp
   1400069e4:	cmp    BYTE PTR [rbx],0x22
   1400069e7:	jne    0x1400069fa
   1400069e9:	xor    eax,eax
   1400069eb:	test   ebp,ebp
   1400069ed:	mov    sil,0x22
   1400069f0:	sete   al
   1400069f3:	inc    rbx
   1400069f6:	mov    ebp,eax
   1400069f8:	jmp    0x140006a33
   1400069fa:	inc    DWORD PTR [r13+0x0]
   1400069fe:	test   rdi,rdi
   140006a01:	je     0x140006a0a
   140006a03:	mov    al,BYTE PTR [rbx]
   140006a05:	mov    BYTE PTR [rdi],al
   140006a07:	inc    rdi
   140006a0a:	movzx  esi,BYTE PTR [rbx]
   140006a0d:	inc    rbx
   140006a10:	mov    ecx,esi
   140006a12:	call   0x14000c52c
   140006a17:	test   eax,eax
   140006a19:	je     0x140006a2e
   140006a1b:	inc    DWORD PTR [r13+0x0]
   140006a1f:	test   rdi,rdi
   140006a22:	je     0x140006a2b
   140006a24:	mov    al,BYTE PTR [rbx]
   140006a26:	mov    BYTE PTR [rdi],al
   140006a28:	inc    rdi
   140006a2b:	inc    rbx
   140006a2e:	test   sil,sil
   140006a31:	je     0x140006a4e
   140006a33:	test   ebp,ebp
   140006a35:	jne    0x1400069e4
   140006a37:	cmp    sil,0x20
   140006a3b:	je     0x140006a43
   140006a3d:	cmp    sil,0x9
   140006a41:	jne    0x1400069e4
   140006a43:	test   rdi,rdi
   140006a46:	je     0x140006a51
   140006a48:	mov    BYTE PTR [rdi-0x1],0x0
   140006a4c:	jmp    0x140006a51
   140006a4e:	dec    rbx
   140006a51:	xor    esi,esi
   140006a53:	cmp    BYTE PTR [rbx],0x0
   140006a56:	je     0x140006b3f
   140006a5c:	cmp    BYTE PTR [rbx],0x20
   140006a5f:	je     0x140006a66
   140006a61:	cmp    BYTE PTR [rbx],0x9
   140006a64:	jne    0x140006a6b
   140006a66:	inc    rbx
   140006a69:	jmp    0x140006a5c
   140006a6b:	cmp    BYTE PTR [rbx],0x0
   140006a6e:	je     0x140006b3f
   140006a74:	test   r12,r12
   140006a77:	je     0x140006a81
   140006a79:	mov    QWORD PTR [r12],rdi
   140006a7d:	add    r12,0x8
   140006a81:	inc    DWORD PTR [r14]
   140006a84:	mov    edx,0x1
   140006a89:	xor    ecx,ecx
   140006a8b:	jmp    0x140006a92
   140006a8d:	inc    rbx
   140006a90:	inc    ecx
   140006a92:	cmp    BYTE PTR [rbx],0x5c
   140006a95:	je     0x140006a8d
   140006a97:	cmp    BYTE PTR [rbx],0x22
   140006a9a:	jne    0x140006ad2
   140006a9c:	test   dl,cl
   140006a9e:	jne    0x140006abd
   140006aa0:	test   esi,esi
   140006aa2:	je     0x140006ab2
   140006aa4:	lea    rax,[rbx+0x1]
   140006aa8:	cmp    BYTE PTR [rax],0x22
   140006aab:	jne    0x140006ab2
   140006aad:	mov    rbx,rax
   140006ab0:	jmp    0x140006abd
   140006ab2:	xor    eax,eax
   140006ab4:	xor    edx,edx
   140006ab6:	test   esi,esi
   140006ab8:	sete   al
   140006abb:	mov    esi,eax
   140006abd:	shr    ecx,1
   140006abf:	jmp    0x140006ad2
   140006ac1:	dec    ecx
   140006ac3:	test   rdi,rdi
   140006ac6:	je     0x140006ace
   140006ac8:	mov    BYTE PTR [rdi],0x5c
   140006acb:	inc    rdi
   140006ace:	inc    DWORD PTR [r13+0x0]
   140006ad2:	test   ecx,ecx
   140006ad4:	jne    0x140006ac1
   140006ad6:	mov    al,BYTE PTR [rbx]
   140006ad8:	test   al,al
   140006ada:	je     0x140006b2b
   140006adc:	test   esi,esi
   140006ade:	jne    0x140006ae8
   140006ae0:	cmp    al,0x20
   140006ae2:	je     0x140006b2b
   140006ae4:	cmp    al,0x9
   140006ae6:	je     0x140006b2b
   140006ae8:	test   edx,edx
   140006aea:	je     0x140006b23
   140006aec:	movsx  ecx,al
   140006aef:	call   0x14000c52c
   140006af4:	test   rdi,rdi
   140006af7:	je     0x140006b14
   140006af9:	test   eax,eax
   140006afb:	je     0x140006b0b
   140006afd:	mov    al,BYTE PTR [rbx]
   140006aff:	inc    rbx
   140006b02:	mov    BYTE PTR [rdi],al
   140006b04:	inc    rdi
   140006b07:	inc    DWORD PTR [r13+0x0]
   140006b0b:	mov    al,BYTE PTR [rbx]
   140006b0d:	mov    BYTE PTR [rdi],al
   140006b0f:	inc    rdi
   140006b12:	jmp    0x140006b1f
   140006b14:	test   eax,eax
   140006b16:	je     0x140006b1f
   140006b18:	inc    rbx
   140006b1b:	inc    DWORD PTR [r13+0x0]
   140006b1f:	inc    DWORD PTR [r13+0x0]
   140006b23:	inc    rbx
   140006b26:	jmp    0x140006a84
   140006b2b:	test   rdi,rdi
   140006b2e:	je     0x140006b36
   140006b30:	mov    BYTE PTR [rdi],0x0
   140006b33:	inc    rdi
   140006b36:	inc    DWORD PTR [r13+0x0]
   140006b3a:	jmp    0x140006a53
   140006b3f:	test   r12,r12
   140006b42:	je     0x140006b49
   140006b44:	and    QWORD PTR [r12],0x0
   140006b49:	inc    DWORD PTR [r14]
   140006b4c:	mov    rbx,QWORD PTR [rsp+0x40]
   140006b51:	mov    rbp,QWORD PTR [rsp+0x48]
   140006b56:	mov    rsi,QWORD PTR [rsp+0x50]
   140006b5b:	mov    rdi,QWORD PTR [rsp+0x58]
   140006b60:	add    rsp,0x20
   140006b64:	pop    r14
   140006b66:	pop    r13
   140006b68:	pop    r12
   140006b6a:	ret    
   140006b6b:	int3   
   140006b6c:	mov    QWORD PTR [rsp+0x18],rbx
   140006b71:	mov    QWORD PTR [rsp+0x20],rsi
   140006b76:	push   rdi
   140006b77:	sub    rsp,0x30
   140006b7b:	cmp    DWORD PTR [rip+0xdcb6],0x0        # 0x140014838
   140006b82:	jne    0x140006b89
   140006b84:	call   0x14000a634
   140006b89:	lea    rdi,[rip+0xd6b0]        # 0x140014240
   140006b90:	mov    r8d,0x104
   140006b96:	xor    ecx,ecx
   140006b98:	mov    rdx,rdi
   140006b9b:	mov    BYTE PTR [rip+0xd7a2],0x0        # 0x140014344
   140006ba2:	call   QWORD PTR [rip+0x75d8]        # 0x14000e180
   140006ba8:	mov    rbx,QWORD PTR [rip+0xdca9]        # 0x140014858
   140006baf:	mov    QWORD PTR [rip+0xcde2],rdi        # 0x140013998
   140006bb6:	test   rbx,rbx
   140006bb9:	je     0x140006bc0
   140006bbb:	cmp    BYTE PTR [rbx],0x0
   140006bbe:	jne    0x140006bc3
   140006bc0:	mov    rbx,rdi
   140006bc3:	lea    rax,[rsp+0x48]
   140006bc8:	lea    r9,[rsp+0x40]
   140006bcd:	xor    r8d,r8d
   140006bd0:	xor    edx,edx
   140006bd2:	mov    rcx,rbx
   140006bd5:	mov    QWORD PTR [rsp+0x20],rax
   140006bda:	call   0x14000699c
   140006bdf:	movsxd rsi,DWORD PTR [rsp+0x40]
   140006be4:	movabs rcx,0x1fffffffffffffff
   140006bee:	cmp    rsi,rcx
   140006bf1:	jae    0x140006c4f
   140006bf3:	movsxd rcx,DWORD PTR [rsp+0x48]
   140006bf8:	cmp    rcx,0xffffffffffffffff
   140006bfc:	jae    0x140006c4f
   140006bfe:	lea    rdx,[rcx+rsi*8]
   140006c02:	cmp    rdx,rcx
   140006c05:	jb     0x140006c4f
   140006c07:	mov    rcx,rdx
   140006c0a:	call   0x140003de8
   140006c0f:	mov    rdi,rax
   140006c12:	test   rax,rax
   140006c15:	je     0x140006c4f
   140006c17:	lea    r8,[rax+rsi*8]
   140006c1b:	lea    rax,[rsp+0x48]
   140006c20:	lea    r9,[rsp+0x40]
   140006c25:	mov    rdx,rdi
   140006c28:	mov    rcx,rbx
   140006c2b:	mov    QWORD PTR [rsp+0x20],rax
   140006c30:	call   0x14000699c
   140006c35:	mov    r11d,DWORD PTR [rsp+0x40]
   140006c3a:	mov    QWORD PTR [rip+0xcd27],rdi        # 0x140013968
   140006c41:	dec    r11d
   140006c44:	xor    eax,eax
   140006c46:	mov    DWORD PTR [rip+0xcd17],r11d        # 0x140013964
   140006c4d:	jmp    0x140006c52
   140006c4f:	or     eax,0xffffffff
   140006c52:	mov    rbx,QWORD PTR [rsp+0x50]
   140006c57:	mov    rsi,QWORD PTR [rsp+0x58]
   140006c5c:	add    rsp,0x30
   140006c60:	pop    rdi
   140006c61:	ret    
   140006c62:	int3   
   140006c63:	int3   
   140006c64:	mov    rax,rsp
   140006c67:	mov    QWORD PTR [rax+0x8],rbx
   140006c6b:	mov    QWORD PTR [rax+0x10],rbp
   140006c6f:	mov    QWORD PTR [rax+0x18],rsi
   140006c73:	mov    QWORD PTR [rax+0x20],rdi
   140006c77:	push   r12
   140006c79:	sub    rsp,0x40
   140006c7d:	call   QWORD PTR [rip+0x7515]        # 0x14000e198
   140006c83:	xor    r12d,r12d
   140006c86:	mov    rdi,rax
   140006c89:	test   rax,rax
   140006c8c:	je     0x140006d3b
   140006c92:	mov    rbx,rax
   140006c95:	cmp    WORD PTR [rax],r12w
   140006c99:	je     0x140006caf
   140006c9b:	add    rbx,0x2
   140006c9f:	cmp    WORD PTR [rbx],r12w
   140006ca3:	jne    0x140006c9b
   140006ca5:	add    rbx,0x2
   140006ca9:	cmp    WORD PTR [rbx],r12w
   140006cad:	jne    0x140006c9b
   140006caf:	mov    QWORD PTR [rsp+0x38],r12
   140006cb4:	sub    rbx,rax
   140006cb7:	mov    QWORD PTR [rsp+0x30],r12
   140006cbc:	sar    rbx,1
   140006cbf:	mov    r8,rax
   140006cc2:	xor    edx,edx
   140006cc4:	lea    r9d,[rbx+0x1]
   140006cc8:	xor    ecx,ecx
   140006cca:	mov    DWORD PTR [rsp+0x28],r12d
   140006ccf:	mov    QWORD PTR [rsp+0x20],r12
   140006cd4:	call   QWORD PTR [rip+0x74b6]        # 0x14000e190
   140006cda:	movsxd rbp,eax
   140006cdd:	test   eax,eax
   140006cdf:	je     0x140006d32
   140006ce1:	mov    rcx,rbp
   140006ce4:	call   0x140003de8
   140006ce9:	mov    rsi,rax
   140006cec:	test   rax,rax
   140006cef:	je     0x140006d32
   140006cf1:	mov    QWORD PTR [rsp+0x38],r12
   140006cf6:	mov    QWORD PTR [rsp+0x30],r12
   140006cfb:	lea    r9d,[rbx+0x1]
   140006cff:	mov    r8,rdi
   140006d02:	xor    edx,edx
   140006d04:	xor    ecx,ecx
   140006d06:	mov    DWORD PTR [rsp+0x28],ebp
   140006d0a:	mov    QWORD PTR [rsp+0x20],rax
   140006d0f:	call   QWORD PTR [rip+0x747b]        # 0x14000e190
   140006d15:	test   eax,eax
   140006d17:	jne    0x140006d24
   140006d19:	mov    rcx,rsi
   140006d1c:	call   0x140001a94
   140006d21:	mov    rsi,r12
   140006d24:	mov    rcx,rdi
   140006d27:	call   QWORD PTR [rip+0x745b]        # 0x14000e188
   140006d2d:	mov    rax,rsi
   140006d30:	jmp    0x140006d3d
   140006d32:	mov    rcx,rdi
   140006d35:	call   QWORD PTR [rip+0x744d]        # 0x14000e188
   140006d3b:	xor    eax,eax
   140006d3d:	mov    rbx,QWORD PTR [rsp+0x50]
   140006d42:	mov    rbp,QWORD PTR [rsp+0x58]
   140006d47:	mov    rsi,QWORD PTR [rsp+0x60]
   140006d4c:	mov    rdi,QWORD PTR [rsp+0x68]
   140006d51:	add    rsp,0x40
   140006d55:	pop    r12
   140006d57:	ret    
   140006d58:	mov    QWORD PTR [rsp+0x8],rbx
   140006d5d:	push   rdi
   140006d5e:	sub    rsp,0x20
   140006d62:	lea    rbx,[rip+0x943f]        # 0x1400101a8
   140006d69:	lea    rdi,[rip+0x9438]        # 0x1400101a8
   140006d70:	jmp    0x140006d80
   140006d72:	mov    rax,QWORD PTR [rbx]
   140006d75:	test   rax,rax
   140006d78:	je     0x140006d7c
   140006d7a:	call   rax
   140006d7c:	add    rbx,0x8
   140006d80:	cmp    rbx,rdi
   140006d83:	jb     0x140006d72
   140006d85:	mov    rbx,QWORD PTR [rsp+0x30]
   140006d8a:	add    rsp,0x20
   140006d8e:	pop    rdi
   140006d8f:	ret    
   140006d90:	mov    QWORD PTR [rsp+0x8],rbx
   140006d95:	push   rdi
   140006d96:	sub    rsp,0x20
   140006d9a:	lea    rbx,[rip+0x9417]        # 0x1400101b8
   140006da1:	lea    rdi,[rip+0x9410]        # 0x1400101b8
   140006da8:	jmp    0x140006db8
   140006daa:	mov    rax,QWORD PTR [rbx]
   140006dad:	test   rax,rax
   140006db0:	je     0x140006db4
   140006db2:	call   rax
   140006db4:	add    rbx,0x8
   140006db8:	cmp    rbx,rdi
   140006dbb:	jb     0x140006daa
   140006dbd:	mov    rbx,QWORD PTR [rsp+0x30]
   140006dc2:	add    rsp,0x20
   140006dc6:	pop    rdi
   140006dc7:	ret    
   140006dc8:	xor    ecx,ecx
   140006dca:	rex.W jmp QWORD PTR [rip+0x7337]        # 0x14000e108
   140006dd1:	int3   
   140006dd2:	int3   
   140006dd3:	int3   
   140006dd4:	sub    rsp,0x28
   140006dd8:	mov    ecx,DWORD PTR [rip+0xbb32]        # 0x140012910
   140006dde:	cmp    ecx,0xffffffff
   140006de1:	je     0x140006df0
   140006de3:	call   QWORD PTR [rip+0x73c7]        # 0x14000e1b0
   140006de9:	or     DWORD PTR [rip+0xbb20],0xffffffff        # 0x140012910
   140006df0:	add    rsp,0x28
   140006df4:	jmp    0x140004264
   140006df9:	int3   
   140006dfa:	int3   
   140006dfb:	int3   
   140006dfc:	mov    QWORD PTR [rsp+0x8],rbx
   140006e01:	push   rdi
   140006e02:	sub    rsp,0x20
   140006e06:	mov    rdi,rdx
   140006e09:	mov    rbx,rcx
   140006e0c:	lea    rax,[rip+0x88fd]        # 0x14000f710
   140006e13:	mov    QWORD PTR [rcx+0xa0],rax
   140006e1a:	and    DWORD PTR [rcx+0x10],0x0
   140006e1e:	mov    DWORD PTR [rcx+0x1c],0x1
   140006e25:	mov    DWORD PTR [rcx+0xc8],0x1
   140006e2f:	mov    BYTE PTR [rcx+0x174],0x43
   140006e36:	mov    BYTE PTR [rcx+0x1f7],0x43
   140006e3d:	lea    rax,[rip+0xbb2c]        # 0x140012970
   140006e44:	mov    QWORD PTR [rcx+0xb8],rax
   140006e4b:	mov    ecx,0xd
   140006e50:	call   0x1400043ec
   140006e55:	nop
   140006e56:	mov    rax,QWORD PTR [rbx+0xb8]
   140006e5d:	lock inc DWORD PTR [rax]
   140006e60:	mov    ecx,0xd
   140006e65:	call   0x1400042ec
   140006e6a:	mov    ecx,0xc
   140006e6f:	call   0x1400043ec
   140006e74:	nop
   140006e75:	mov    QWORD PTR [rbx+0xc0],rdi
   140006e7c:	test   rdi,rdi
   140006e7f:	jne    0x140006e8f
   140006e81:	mov    rax,QWORD PTR [rip+0xc448]        # 0x1400132d0
   140006e88:	mov    QWORD PTR [rbx+0xc0],rax
   140006e8f:	mov    rcx,QWORD PTR [rbx+0xc0]
   140006e96:	call   0x14000a65c
   140006e9b:	nop
   140006e9c:	mov    ecx,0xc
   140006ea1:	call   0x1400042ec
   140006ea6:	mov    rbx,QWORD PTR [rsp+0x30]
   140006eab:	add    rsp,0x20
   140006eaf:	pop    rdi
   140006eb0:	ret    
   140006eb1:	int3   
   140006eb2:	int3   
   140006eb3:	int3   
   140006eb4:	mov    QWORD PTR [rsp+0x8],rbx
   140006eb9:	push   rdi
   140006eba:	sub    rsp,0x20
   140006ebe:	call   QWORD PTR [rip+0x71ac]        # 0x14000e070
   140006ec4:	mov    ecx,DWORD PTR [rip+0xba46]        # 0x140012910
   140006eca:	mov    edi,eax
   140006ecc:	call   QWORD PTR [rip+0x72ce]        # 0x14000e1a0
   140006ed2:	mov    rbx,rax
   140006ed5:	test   rax,rax
   140006ed8:	jne    0x140006f22
   140006eda:	lea    ecx,[rax+0x1]
   140006edd:	mov    edx,0x2c8
   140006ee2:	call   0x140003e68
   140006ee7:	mov    rbx,rax
   140006eea:	test   rax,rax
   140006eed:	je     0x140006f22
   140006eef:	mov    ecx,DWORD PTR [rip+0xba1b]        # 0x140012910
   140006ef5:	mov    rdx,rax
   140006ef8:	call   QWORD PTR [rip+0x72aa]        # 0x14000e1a8
   140006efe:	mov    rcx,rbx
   140006f01:	test   eax,eax
   140006f03:	je     0x140006f1b
   140006f05:	xor    edx,edx
   140006f07:	call   0x140006dfc
   140006f0c:	call   QWORD PTR [rip+0x72ae]        # 0x14000e1c0
   140006f12:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   140006f17:	mov    DWORD PTR [rbx],eax
   140006f19:	jmp    0x140006f22
   140006f1b:	call   0x140001a94
   140006f20:	xor    ebx,ebx
   140006f22:	mov    ecx,edi
   140006f24:	call   QWORD PTR [rip+0x728e]        # 0x14000e1b8
   140006f2a:	mov    rax,rbx
   140006f2d:	mov    rbx,QWORD PTR [rsp+0x30]
   140006f32:	add    rsp,0x20
   140006f36:	pop    rdi
   140006f37:	ret    
   140006f38:	rex push rbx
   140006f3a:	sub    rsp,0x20
   140006f3e:	call   0x140006eb4
   140006f43:	mov    rbx,rax
   140006f46:	test   rax,rax
   140006f49:	jne    0x140006f53
   140006f4b:	lea    ecx,[rax+0x10]
   140006f4e:	call   0x1400037e0
   140006f53:	mov    rax,rbx
   140006f56:	add    rsp,0x20
   140006f5a:	pop    rbx
   140006f5b:	ret    
   140006f5c:	test   rcx,rcx
   140006f5f:	je     0x14000708e
   140006f65:	mov    QWORD PTR [rsp+0x10],rbx
   140006f6a:	push   rdi
   140006f6b:	sub    rsp,0x20
   140006f6f:	mov    rbx,rcx
   140006f72:	mov    rcx,QWORD PTR [rcx+0x38]
   140006f76:	test   rcx,rcx
   140006f79:	je     0x140006f80
   140006f7b:	call   0x140001a94
   140006f80:	mov    rcx,QWORD PTR [rbx+0x48]
   140006f84:	test   rcx,rcx
   140006f87:	je     0x140006f8e
   140006f89:	call   0x140001a94
   140006f8e:	mov    rcx,QWORD PTR [rbx+0x58]
   140006f92:	test   rcx,rcx
   140006f95:	je     0x140006f9c
   140006f97:	call   0x140001a94
   140006f9c:	mov    rcx,QWORD PTR [rbx+0x68]
   140006fa0:	test   rcx,rcx
   140006fa3:	je     0x140006faa
   140006fa5:	call   0x140001a94
   140006faa:	mov    rcx,QWORD PTR [rbx+0x70]
   140006fae:	test   rcx,rcx
   140006fb1:	je     0x140006fb8
   140006fb3:	call   0x140001a94
   140006fb8:	mov    rcx,QWORD PTR [rbx+0x78]
   140006fbc:	test   rcx,rcx
   140006fbf:	je     0x140006fc6
   140006fc1:	call   0x140001a94
   140006fc6:	mov    rcx,QWORD PTR [rbx+0x80]
   140006fcd:	test   rcx,rcx
   140006fd0:	je     0x140006fd7
   140006fd2:	call   0x140001a94
   140006fd7:	mov    rcx,QWORD PTR [rbx+0xa0]
   140006fde:	lea    rax,[rip+0x872b]        # 0x14000f710
   140006fe5:	cmp    rcx,rax
   140006fe8:	je     0x140006fef
   140006fea:	call   0x140001a94
   140006fef:	mov    edi,0xd
   140006ff4:	mov    ecx,edi
   140006ff6:	call   0x1400043ec
   140006ffb:	nop
   140006ffc:	mov    rcx,QWORD PTR [rbx+0xb8]
   140007003:	mov    QWORD PTR [rsp+0x30],rcx
   140007008:	test   rcx,rcx
   14000700b:	je     0x140007029
   14000700d:	lock dec DWORD PTR [rcx]
   140007010:	jne    0x140007029
   140007012:	lea    rax,[rip+0xb957]        # 0x140012970
   140007019:	mov    rcx,QWORD PTR [rsp+0x30]
   14000701e:	cmp    rcx,rax
   140007021:	je     0x140007029
   140007023:	call   0x140001a94
   140007028:	nop
   140007029:	mov    ecx,edi
   14000702b:	call   0x1400042ec
   140007030:	mov    ecx,0xc
   140007035:	call   0x1400043ec
   14000703a:	nop
   14000703b:	mov    rdi,QWORD PTR [rbx+0xc0]
   140007042:	test   rdi,rdi
   140007045:	je     0x140007072
   140007047:	mov    rcx,rdi
   14000704a:	call   0x14000a6e8
   14000704f:	cmp    rdi,QWORD PTR [rip+0xc27a]        # 0x1400132d0
   140007056:	je     0x140007072
   140007058:	lea    rax,[rip+0xc111]        # 0x140013170
   14000705f:	cmp    rdi,rax
   140007062:	je     0x140007072
   140007064:	cmp    DWORD PTR [rdi],0x0
   140007067:	jne    0x140007072
   140007069:	mov    rcx,rdi
   14000706c:	call   0x14000a78c
   140007071:	nop
   140007072:	mov    ecx,0xc
   140007077:	call   0x1400042ec
   14000707c:	mov    rcx,rbx
   14000707f:	call   0x140001a94
   140007084:	mov    rbx,QWORD PTR [rsp+0x38]
   140007089:	add    rsp,0x20
   14000708d:	pop    rdi
   14000708e:	ret    
   14000708f:	int3   
   140007090:	rex push rbx
   140007092:	sub    rsp,0x20
   140007096:	call   0x1400034b4
   14000709b:	call   0x1400041e0
   1400070a0:	test   eax,eax
   1400070a2:	je     0x140007104
   1400070a4:	lea    rcx,[rip+0xfffffffffffffeb1]        # 0x140006f5c
   1400070ab:	call   QWORD PTR [rip+0x7117]        # 0x14000e1c8
   1400070b1:	mov    DWORD PTR [rip+0xb859],eax        # 0x140012910
   1400070b7:	cmp    eax,0xffffffff
   1400070ba:	je     0x140007104
   1400070bc:	mov    edx,0x2c8
   1400070c1:	mov    ecx,0x1
   1400070c6:	call   0x140003e68
   1400070cb:	mov    rbx,rax
   1400070ce:	test   rax,rax
   1400070d1:	je     0x140007104
   1400070d3:	mov    ecx,DWORD PTR [rip+0xb837]        # 0x140012910
   1400070d9:	mov    rdx,rax
   1400070dc:	call   QWORD PTR [rip+0x70c6]        # 0x14000e1a8
   1400070e2:	test   eax,eax
   1400070e4:	je     0x140007104
   1400070e6:	xor    edx,edx
   1400070e8:	mov    rcx,rbx
   1400070eb:	call   0x140006dfc
   1400070f0:	call   QWORD PTR [rip+0x70ca]        # 0x14000e1c0
   1400070f6:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   1400070fb:	mov    DWORD PTR [rbx],eax
   1400070fd:	mov    eax,0x1
   140007102:	jmp    0x14000710b
   140007104:	call   0x140006dd4
   140007109:	xor    eax,eax
   14000710b:	add    rsp,0x20
   14000710f:	pop    rbx
   140007110:	ret    
   140007111:	int3   
   140007112:	int3   
   140007113:	int3   
   140007114:	mov    QWORD PTR [rsp+0x18],rbx
   140007119:	push   rdi
   14000711a:	sub    rsp,0x20
   14000711e:	mov    rax,QWORD PTR [rip+0xb2a3]        # 0x1400123c8
   140007125:	and    QWORD PTR [rsp+0x30],0x0
   14000712b:	movabs rdi,0x2b992ddfa232
   140007135:	cmp    rax,rdi
   140007138:	je     0x140007146
   14000713a:	not    rax
   14000713d:	mov    QWORD PTR [rip+0xb28c],rax        # 0x1400123d0
   140007144:	jmp    0x1400071bc
   140007146:	lea    rcx,[rsp+0x30]
   14000714b:	call   QWORD PTR [rip+0x7097]        # 0x14000e1e8
   140007151:	mov    rbx,QWORD PTR [rsp+0x30]
   140007156:	call   QWORD PTR [rip+0x7084]        # 0x14000e1e0
   14000715c:	mov    r11d,eax
   14000715f:	xor    rbx,r11
   140007162:	call   QWORD PTR [rip+0x7058]        # 0x14000e1c0
   140007168:	mov    r11d,eax
   14000716b:	xor    rbx,r11
   14000716e:	call   QWORD PTR [rip+0x7064]        # 0x14000e1d8
   140007174:	lea    rcx,[rsp+0x38]
   140007179:	mov    r11d,eax
   14000717c:	xor    rbx,r11
   14000717f:	call   QWORD PTR [rip+0x704b]        # 0x14000e1d0
   140007185:	mov    r11,QWORD PTR [rsp+0x38]
   14000718a:	xor    r11,rbx
   14000718d:	movabs rax,0xffffffffffff
   140007197:	and    r11,rax
   14000719a:	movabs rax,0x2b992ddfa233
   1400071a4:	cmp    r11,rdi
   1400071a7:	cmove  r11,rax
   1400071ab:	mov    QWORD PTR [rip+0xb216],r11        # 0x1400123c8
   1400071b2:	not    r11
   1400071b5:	mov    QWORD PTR [rip+0xb214],r11        # 0x1400123d0
   1400071bc:	mov    rbx,QWORD PTR [rsp+0x40]
   1400071c1:	add    rsp,0x20
   1400071c5:	pop    rdi
   1400071c6:	ret    
   1400071c7:	int3   
   1400071c8:	and    DWORD PTR [rip+0xd42d],0x0        # 0x1400145fc
   1400071cf:	ret    
   1400071d0:	mov    rax,rcx
   1400071d3:	mov    ecx,0x5a4d
   1400071d8:	cmp    WORD PTR [rax],cx
   1400071db:	je     0x1400071e0
   1400071dd:	xor    eax,eax
   1400071df:	ret    
   1400071e0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400071e4:	add    rcx,rax
   1400071e7:	xor    eax,eax
   1400071e9:	cmp    DWORD PTR [rcx],0x4550
   1400071ef:	jne    0x1400071fd
   1400071f1:	mov    edx,0x20b
   1400071f6:	cmp    WORD PTR [rcx+0x18],dx
   1400071fa:	sete   al
   1400071fd:	repz ret 
   1400071ff:	int3   
   140007200:	movsxd r8,DWORD PTR [rcx+0x3c]
   140007204:	xor    r9d,r9d
   140007207:	mov    r10,rdx
   14000720a:	add    r8,rcx
   14000720d:	movzx  eax,WORD PTR [r8+0x14]
   140007212:	movzx  r11d,WORD PTR [r8+0x6]
   140007217:	lea    rcx,[rax+r8*1+0x18]
   14000721c:	test   r11d,r11d
   14000721f:	je     0x14000723f
   140007221:	mov    edx,DWORD PTR [rcx+0xc]
   140007224:	cmp    r10,rdx
   140007227:	jb     0x140007233
   140007229:	mov    eax,DWORD PTR [rcx+0x8]
   14000722c:	add    eax,edx
   14000722e:	cmp    r10,rax
   140007231:	jb     0x140007242
   140007233:	inc    r9d
   140007236:	add    rcx,0x28
   14000723a:	cmp    r9d,r11d
   14000723d:	jb     0x140007221
   14000723f:	xor    eax,eax
   140007241:	ret    
   140007242:	mov    rax,rcx
   140007245:	ret    
   140007246:	int3   
   140007247:	int3   
   140007248:	int3   
   140007249:	int3   
   14000724a:	int3   
   14000724b:	int3   
   14000724c:	int3   
   14000724d:	int3   
   14000724e:	int3   
   14000724f:	int3   
   140007250:	sub    rsp,0x28
   140007254:	mov    r8,rcx
   140007257:	lea    r9,[rip+0xffffffffffff8da2]        # 0x140000000
   14000725e:	mov    rcx,r9
   140007261:	call   0x1400071d0
   140007266:	test   eax,eax
   140007268:	je     0x14000728c
   14000726a:	sub    r8,r9
   14000726d:	mov    rdx,r8
   140007270:	mov    rcx,r9
   140007273:	call   0x140007200
   140007278:	test   rax,rax
   14000727b:	je     0x14000728c
   14000727d:	mov    eax,DWORD PTR [rax+0x24]
   140007280:	shr    eax,0x1f
   140007283:	not    eax
   140007285:	and    eax,0x1
   140007288:	jmp    0x14000728c
   14000728a:	xor    eax,eax
   14000728c:	add    rsp,0x28
   140007290:	ret    
   140007291:	int3   
   140007292:	int3   
   140007293:	int3   
   140007294:	mov    QWORD PTR [rsp+0x10],rbx
   140007299:	mov    QWORD PTR [rsp+0x18],r8
   14000729e:	mov    QWORD PTR [rsp+0x8],rcx
   1400072a3:	push   rbp
   1400072a4:	push   rsi
   1400072a5:	push   rdi
   1400072a6:	push   r12
   1400072a8:	push   r13
   1400072aa:	push   r14
   1400072ac:	push   r15
   1400072ae:	mov    rbp,rsp
   1400072b1:	sub    rsp,0x80
   1400072b8:	xor    edi,edi
   1400072ba:	mov    r13b,0x80
   1400072bd:	mov    esi,r9d
   1400072c0:	mov    rbx,rdx
   1400072c3:	mov    DWORD PTR [rbp-0x18],0x18
   1400072ca:	lea    r12d,[rdi+0x1]
   1400072ce:	mov    DWORD PTR [rbp-0x28],edi
   1400072d1:	mov    BYTE PTR [rbp+0x58],dil
   1400072d5:	mov    QWORD PTR [rbp-0x10],rdi
   1400072d9:	test   r13b,r9b
   1400072dc:	je     0x1400072e6
   1400072de:	mov    DWORD PTR [rbp-0x8],edi
   1400072e1:	mov    r15b,0x10
   1400072e4:	jmp    0x1400072ed
   1400072e6:	mov    DWORD PTR [rbp-0x8],r12d
   1400072ea:	mov    r15b,dil
   1400072ed:	lea    rcx,[rbp-0x28]
   1400072f1:	call   0x14000c7a8
   1400072f6:	test   eax,eax
   1400072f8:	jne    0x140007a27
   1400072fe:	mov    eax,0x8000
   140007303:	test   eax,esi
   140007305:	jne    0x140007317
   140007307:	test   esi,0x74000
   14000730d:	jne    0x140007314
   14000730f:	cmp    DWORD PTR [rbp-0x28],eax
   140007312:	je     0x140007317
   140007314:	or     r15b,r13b
   140007317:	mov    ecx,esi
   140007319:	mov    r9d,0x3
   14000731f:	mov    eax,0xc0000000
   140007324:	and    ecx,r9d
   140007327:	mov    r8d,0x80000000
   14000732d:	je     0x14000738a
   14000732f:	dec    ecx
   140007331:	je     0x140007374
   140007333:	dec    ecx
   140007335:	je     0x14000736f
   140007337:	call   0x140003270
   14000733c:	mov    DWORD PTR [rax],edi
   14000733e:	or     DWORD PTR [rbx],0xffffffff
   140007341:	call   0x140003250
   140007346:	mov    ebx,0x16
   14000734b:	mov    DWORD PTR [rax],ebx
   14000734d:	call   0x1400031e8
   140007352:	mov    eax,ebx
   140007354:	mov    rbx,QWORD PTR [rsp+0xc8]
   14000735c:	add    rsp,0x80
   140007363:	pop    r15
   140007365:	pop    r14
   140007367:	pop    r13
   140007369:	pop    r12
   14000736b:	pop    rdi
   14000736c:	pop    rsi
   14000736d:	pop    rbp
   14000736e:	ret    
   14000736f:	mov    r14d,eax
   140007372:	jmp    0x14000738d
   140007374:	test   sil,0x8
   140007378:	je     0x140007382
   14000737a:	test   esi,0x70000
   140007380:	jne    0x14000736f
   140007382:	mov    r14d,0x40000000
   140007388:	jmp    0x14000738d
   14000738a:	mov    r14d,r8d
   14000738d:	mov    ecx,DWORD PTR [rbp+0x60]
   140007390:	mov    DWORD PTR [rbp-0x40],r14d
   140007394:	mov    r13d,0x2
   14000739a:	sub    ecx,0x10
   14000739d:	je     0x1400073cc
   14000739f:	sub    ecx,0x10
   1400073a2:	je     0x1400073c7
   1400073a4:	sub    ecx,0x10
   1400073a7:	je     0x1400073c2
   1400073a9:	sub    ecx,0x10
   1400073ac:	je     0x1400073bd
   1400073ae:	cmp    ecx,0x40
   1400073b1:	jne    0x140007337
   1400073b3:	cmp    r14d,r8d
   1400073b6:	mov    edx,edi
   1400073b8:	sete   dl
   1400073bb:	jmp    0x1400073ce
   1400073bd:	mov    edx,r9d
   1400073c0:	jmp    0x1400073ce
   1400073c2:	mov    edx,r13d
   1400073c5:	jmp    0x1400073ce
   1400073c7:	mov    edx,r12d
   1400073ca:	jmp    0x1400073ce
   1400073cc:	mov    edx,edi
   1400073ce:	mov    eax,esi
   1400073d0:	mov    ecx,0x700
   1400073d5:	mov    DWORD PTR [rbp-0x3c],edx
   1400073d8:	and    eax,ecx
   1400073da:	mov    r8d,0x100
   1400073e0:	je     0x140007428
   1400073e2:	cmp    eax,r8d
   1400073e5:	je     0x140007420
   1400073e7:	cmp    eax,0x200
   1400073ec:	je     0x140007418
   1400073ee:	cmp    eax,0x300
   1400073f3:	je     0x140007413
   1400073f5:	cmp    eax,0x400
   1400073fa:	je     0x140007428
   1400073fc:	cmp    eax,0x500
   140007401:	je     0x14000742b
   140007403:	cmp    eax,0x600
   140007408:	je     0x140007418
   14000740a:	cmp    eax,ecx
   14000740c:	je     0x14000742b
   14000740e:	jmp    0x140007337
   140007413:	mov    r12d,r13d
   140007416:	jmp    0x14000742b
   140007418:	mov    r12d,0x5
   14000741e:	jmp    0x14000742b
   140007420:	mov    r12d,0x4
   140007426:	jmp    0x14000742b
   140007428:	mov    r12d,r9d
   14000742b:	mov    ecx,0x80
   140007430:	mov    DWORD PTR [rbp-0x34],ecx
   140007433:	test   r8d,esi
   140007436:	je     0x14000744e
   140007438:	mov    al,BYTE PTR [rip+0xc522]        # 0x140013960
   14000743e:	not    al
   140007440:	and    al,BYTE PTR [rbp+0x68]
   140007443:	test   al,0x80
   140007445:	lea    eax,[rcx-0x7f]
   140007448:	cmove  ecx,eax
   14000744b:	mov    DWORD PTR [rbp-0x34],ecx
   14000744e:	test   sil,0x40
   140007452:	je     0x14000746a
   140007454:	bts    ecx,0x1a
   140007458:	bts    r14d,0x10
   14000745d:	or     edx,0x4
   140007460:	mov    DWORD PTR [rbp-0x3c],edx
   140007463:	mov    DWORD PTR [rbp-0x34],ecx
   140007466:	mov    DWORD PTR [rbp-0x40],r14d
   14000746a:	bt     esi,0xc
   14000746e:	jae    0x140007476
   140007470:	or     ecx,r8d
   140007473:	mov    DWORD PTR [rbp-0x34],ecx
   140007476:	test   sil,0x20
   14000747a:	je     0x140007482
   14000747c:	bts    ecx,0x1b
   140007480:	jmp    0x14000748c
   140007482:	test   sil,0x10
   140007486:	je     0x14000748f
   140007488:	bts    ecx,0x1c
   14000748c:	mov    DWORD PTR [rbp-0x34],ecx
   14000748f:	call   0x14000bd24
   140007494:	mov    DWORD PTR [rbx],eax
   140007496:	cmp    eax,0xffffffff
   140007499:	jne    0x1400074bc
   14000749b:	call   0x140003270
   1400074a0:	mov    DWORD PTR [rax],edi
   1400074a2:	or     DWORD PTR [rbx],0xffffffff
   1400074a5:	call   0x140003250
   1400074aa:	mov    DWORD PTR [rax],0x18
   1400074b0:	call   0x140003250
   1400074b5:	mov    eax,DWORD PTR [rax]
   1400074b7:	jmp    0x140007354
   1400074bc:	mov    rax,QWORD PTR [rbp+0x40]
   1400074c0:	mov    r8d,DWORD PTR [rbp-0x3c]
   1400074c4:	mov    rcx,QWORD PTR [rbp+0x50]
   1400074c8:	mov    DWORD PTR [rax],0x1
   1400074ce:	mov    eax,DWORD PTR [rbp-0x34]
   1400074d1:	mov    QWORD PTR [rsp+0x30],rdi
   1400074d6:	mov    DWORD PTR [rsp+0x28],eax
   1400074da:	lea    r9,[rbp-0x18]
   1400074de:	mov    edx,r14d
   1400074e1:	mov    DWORD PTR [rsp+0x20],r12d
   1400074e6:	call   QWORD PTR [rip+0x6d04]        # 0x14000e1f0
   1400074ec:	mov    QWORD PTR [rbp-0x20],rax
   1400074f0:	cmp    rax,0xffffffffffffffff
   1400074f4:	jne    0x140007585
   1400074fa:	mov    ecx,0xc0000000
   1400074ff:	mov    eax,r14d
   140007502:	and    eax,ecx
   140007504:	cmp    eax,ecx
   140007506:	jne    0x14000754b
   140007508:	mov    eax,0x1
   14000750d:	test   al,sil
   140007510:	je     0x14000754b
   140007512:	mov    eax,DWORD PTR [rbp-0x34]
   140007515:	mov    r8d,DWORD PTR [rbp-0x3c]
   140007519:	mov    rcx,QWORD PTR [rbp+0x50]
   14000751d:	btr    r14d,0x1f
   140007522:	mov    QWORD PTR [rsp+0x30],rdi
   140007527:	mov    DWORD PTR [rsp+0x28],eax
   14000752b:	lea    r9,[rbp-0x18]
   14000752f:	mov    edx,r14d
   140007532:	mov    DWORD PTR [rsp+0x20],r12d
   140007537:	mov    DWORD PTR [rbp-0x40],r14d
   14000753b:	call   QWORD PTR [rip+0x6caf]        # 0x14000e1f0
   140007541:	mov    QWORD PTR [rbp-0x20],rax
   140007545:	cmp    rax,0xffffffffffffffff
   140007549:	jne    0x140007585
   14000754b:	movsxd rcx,DWORD PTR [rbx]
   14000754e:	lea    r14,[rip+0xd0cb]        # 0x140014620
   140007555:	mov    rax,rcx
   140007558:	and    ecx,0x1f
   14000755b:	sar    rax,0x5
   14000755f:	imul   rcx,rcx,0x58
   140007563:	mov    rax,QWORD PTR [r14+rax*8]
   140007567:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14000756c:	call   QWORD PTR [rip+0x6afe]        # 0x14000e070
   140007572:	mov    ecx,eax
   140007574:	call   0x140003290
   140007579:	call   0x140003250
   14000757e:	mov    edi,DWORD PTR [rax]
   140007580:	jmp    0x140007a20
   140007585:	mov    rcx,rax
   140007588:	call   QWORD PTR [rip+0x6bc2]        # 0x14000e150
   14000758e:	test   eax,eax
   140007590:	jne    0x1400075dd
   140007592:	movsxd rcx,DWORD PTR [rbx]
   140007595:	lea    r14,[rip+0xd084]        # 0x140014620
   14000759c:	mov    rax,rcx
   14000759f:	and    ecx,0x1f
   1400075a2:	sar    rax,0x5
   1400075a6:	imul   rcx,rcx,0x58
   1400075aa:	mov    rax,QWORD PTR [r14+rax*8]
   1400075ae:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   1400075b3:	call   QWORD PTR [rip+0x6ab7]        # 0x14000e070
   1400075b9:	mov    ecx,eax
   1400075bb:	mov    ebx,eax
   1400075bd:	call   0x140003290
   1400075c2:	mov    rcx,QWORD PTR [rbp-0x20]
   1400075c6:	call   QWORD PTR [rip+0x6abc]        # 0x14000e088
   1400075cc:	test   ebx,ebx
   1400075ce:	jne    0x140007579
   1400075d0:	call   0x140003250
   1400075d5:	mov    DWORD PTR [rax],0xd
   1400075db:	jmp    0x140007579
   1400075dd:	cmp    eax,r13d
   1400075e0:	jne    0x1400075e8
   1400075e2:	or     r15b,0x40
   1400075e6:	jmp    0x1400075f1
   1400075e8:	cmp    eax,0x3
   1400075eb:	jne    0x1400075f1
   1400075ed:	or     r15b,0x8
   1400075f1:	mov    rdx,QWORD PTR [rbp-0x20]
   1400075f5:	mov    ecx,DWORD PTR [rbx]
   1400075f7:	call   0x14000ba84
   1400075fc:	movsxd rcx,DWORD PTR [rbx]
   1400075ff:	lea    r14,[rip+0xd01a]        # 0x140014620
   140007606:	mov    rax,rcx
   140007609:	and    ecx,0x1f
   14000760c:	mov    r8d,0x1
   140007612:	sar    rax,0x5
   140007616:	or     r15b,r8b
   140007619:	mov    rax,QWORD PTR [r14+rax*8]
   14000761d:	imul   rcx,rcx,0x58
   140007621:	mov    BYTE PTR [rax+rcx*1+0x8],r15b
   140007626:	movsxd rcx,DWORD PTR [rbx]
   140007629:	mov    rax,rcx
   14000762c:	and    ecx,0x1f
   14000762f:	sar    rax,0x5
   140007633:	imul   rcx,rcx,0x58
   140007637:	mov    rax,QWORD PTR [r14+rax*8]
   14000763b:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   140007640:	mov    al,r15b
   140007643:	and    al,0x48
   140007645:	mov    BYTE PTR [rbp-0x30],al
   140007648:	jne    0x1400076d1
   14000764e:	test   r15b,r15b
   140007651:	jns    0x1400078fc
   140007657:	test   r13b,sil
   14000765a:	je     0x1400076d1
   14000765c:	mov    ecx,DWORD PTR [rbx]
   14000765e:	mov    r8d,r13d
   140007661:	or     edx,0xffffffff
   140007664:	call   0x140006310
   140007669:	mov    DWORD PTR [rbp-0x38],eax
   14000766c:	cmp    eax,0xffffffff
   14000766f:	jne    0x14000768a
   140007671:	call   0x140003270
   140007676:	cmp    DWORD PTR [rax],0x83
   14000767c:	je     0x1400076cb
   14000767e:	mov    ecx,DWORD PTR [rbx]
   140007680:	call   0x140006488
   140007685:	jmp    0x140007579
   14000768a:	mov    ecx,DWORD PTR [rbx]
   14000768c:	lea    rdx,[rbp-0x2c]
   140007690:	mov    r8d,0x1
   140007696:	mov    WORD PTR [rbp-0x2c],di
   14000769a:	call   0x140004d7c
   14000769f:	test   eax,eax
   1400076a1:	jne    0x1400076ba
   1400076a3:	cmp    WORD PTR [rbp-0x2c],0x1a
   1400076a8:	jne    0x1400076ba
   1400076aa:	movsxd rdx,DWORD PTR [rbp-0x38]
   1400076ae:	mov    ecx,DWORD PTR [rbx]
   1400076b0:	call   0x14000c540
   1400076b5:	cmp    eax,0xffffffff
   1400076b8:	je     0x14000767e
   1400076ba:	mov    ecx,DWORD PTR [rbx]
   1400076bc:	xor    r8d,r8d
   1400076bf:	xor    edx,edx
   1400076c1:	call   0x140006310
   1400076c6:	cmp    eax,0xffffffff
   1400076c9:	je     0x14000767e
   1400076cb:	mov    r8d,0x1
   1400076d1:	test   r15b,r15b
   1400076d4:	jns    0x1400078fc
   1400076da:	mov    edx,0x74000
   1400076df:	mov    ecx,0x4000
   1400076e4:	test   edx,esi
   1400076e6:	jne    0x1400076f5
   1400076e8:	mov    eax,DWORD PTR [rbp-0x28]
   1400076eb:	and    eax,edx
   1400076ed:	jne    0x1400076f3
   1400076ef:	or     esi,ecx
   1400076f1:	jmp    0x1400076f5
   1400076f3:	or     esi,eax
   1400076f5:	mov    eax,esi
   1400076f7:	and    eax,edx
   1400076f9:	cmp    eax,ecx
   1400076fb:	je     0x140007740
   1400076fd:	cmp    eax,0x10000
   140007702:	je     0x14000772d
   140007704:	cmp    eax,0x14000
   140007709:	je     0x14000772d
   14000770b:	cmp    eax,0x20000
   140007710:	je     0x14000773a
   140007712:	cmp    eax,0x24000
   140007717:	je     0x14000773a
   140007719:	cmp    eax,0x40000
   14000771e:	je     0x140007727
   140007720:	cmp    eax,0x44000
   140007725:	jne    0x140007744
   140007727:	mov    BYTE PTR [rbp+0x58],r8b
   14000772b:	jmp    0x140007744
   14000772d:	mov    ecx,0x301
   140007732:	mov    eax,esi
   140007734:	and    eax,ecx
   140007736:	cmp    eax,ecx
   140007738:	jne    0x140007744
   14000773a:	mov    BYTE PTR [rbp+0x58],r13b
   14000773e:	jmp    0x140007744
   140007740:	mov    BYTE PTR [rbp+0x58],dil
   140007744:	test   esi,0x70000
   14000774a:	je     0x1400078fc
   140007750:	test   r15b,0x40
   140007754:	mov    r15d,DWORD PTR [rbp-0x40]
   140007758:	mov    DWORD PTR [rbp-0x38],edi
   14000775b:	jne    0x140007900
   140007761:	mov    eax,r15d
   140007764:	mov    ecx,0xc0000000
   140007769:	and    eax,ecx
   14000776b:	cmp    eax,0x40000000
   140007770:	je     0x140007883
   140007776:	cmp    eax,0x80000000
   14000777b:	je     0x1400077ed
   14000777d:	cmp    eax,ecx
   14000777f:	jne    0x140007900
   140007785:	test   r12d,r12d
   140007788:	je     0x140007900
   14000778e:	cmp    r12d,r13d
   140007791:	jbe    0x1400077a3
   140007793:	cmp    r12d,0x4
   140007797:	jbe    0x1400077c6
   140007799:	cmp    r12d,0x5
   14000779d:	jne    0x140007900
   1400077a3:	movsx  ecx,BYTE PTR [rbp+0x58]
   1400077a7:	mov    r12d,edi
   1400077aa:	dec    ecx
   1400077ac:	je     0x1400078c7
   1400077b2:	dec    ecx
   1400077b4:	jne    0x140007900
   1400077ba:	mov    DWORD PTR [rbp-0x38],0xfeff
   1400077c1:	jmp    0x1400078d4
   1400077c6:	mov    ecx,DWORD PTR [rbx]
   1400077c8:	mov    r8d,r13d
   1400077cb:	xor    edx,edx
   1400077cd:	call   0x140009be4
   1400077d2:	test   rax,rax
   1400077d5:	je     0x1400077a3
   1400077d7:	mov    ecx,DWORD PTR [rbx]
   1400077d9:	xor    r8d,r8d
   1400077dc:	xor    edx,edx
   1400077de:	call   0x140009be4
   1400077e3:	cmp    rax,0xffffffffffffffff
   1400077e7:	je     0x14000767e
   1400077ed:	mov    ecx,DWORD PTR [rbx]
   1400077ef:	lea    rdx,[rbp-0x38]
   1400077f3:	mov    r8d,0x3
   1400077f9:	call   0x140004d7c
   1400077fe:	cmp    eax,0xffffffff
   140007801:	je     0x14000767e
   140007807:	cmp    eax,r13d
   14000780a:	je     0x140007827
   14000780c:	cmp    eax,0x3
   14000780f:	jne    0x140007872
   140007811:	cmp    DWORD PTR [rbp-0x38],0xbfbbef
   140007818:	jne    0x140007827
   14000781a:	lea    r8d,[rax-0x2]
   14000781e:	mov    BYTE PTR [rbp+0x58],r8b
   140007822:	jmp    0x140007906
   140007827:	movzx  eax,WORD PTR [rbp-0x38]
   14000782b:	cmp    eax,0xfffe
   140007830:	jne    0x14000784c
   140007832:	mov    ecx,DWORD PTR [rbx]
   140007834:	call   0x140006488
   140007839:	call   0x140003250
   14000783e:	mov    ebx,0x16
   140007843:	mov    DWORD PTR [rax],ebx
   140007845:	mov    edi,ebx
   140007847:	jmp    0x140007a20
   14000784c:	cmp    eax,0xfeff
   140007851:	jne    0x140007872
   140007853:	mov    ecx,DWORD PTR [rbx]
   140007855:	xor    r8d,r8d
   140007858:	mov    edx,r13d
   14000785b:	call   0x140006310
   140007860:	cmp    eax,0xffffffff
   140007863:	je     0x14000767e
   140007869:	mov    BYTE PTR [rbp+0x58],r13b
   14000786d:	jmp    0x140007900
   140007872:	mov    ecx,DWORD PTR [rbx]
   140007874:	xor    r8d,r8d
   140007877:	xor    edx,edx
   140007879:	call   0x140006310
   14000787e:	cmp    eax,0xffffffff
   140007881:	jmp    0x1400078c0
   140007883:	test   r12d,r12d
   140007886:	je     0x140007900
   140007888:	cmp    r12d,r13d
   14000788b:	jbe    0x1400077a3
   140007891:	cmp    r12d,0x4
   140007895:	ja     0x140007799
   14000789b:	mov    ecx,DWORD PTR [rbx]
   14000789d:	mov    r8d,r13d
   1400078a0:	xor    edx,edx
   1400078a2:	call   0x140009be4
   1400078a7:	test   rax,rax
   1400078aa:	je     0x1400077a3
   1400078b0:	mov    ecx,DWORD PTR [rbx]
   1400078b2:	xor    r8d,r8d
   1400078b5:	xor    edx,edx
   1400078b7:	call   0x140009be4
   1400078bc:	cmp    rax,0xffffffffffffffff
   1400078c0:	jne    0x140007900
   1400078c2:	jmp    0x14000767e
   1400078c7:	mov    DWORD PTR [rbp-0x38],0xbfbbef
   1400078ce:	mov    r13d,0x3
   1400078d4:	mov    ecx,DWORD PTR [rbx]
   1400078d6:	movsxd rax,r12d
   1400078d9:	mov    r8d,r13d
   1400078dc:	lea    rdx,[rbp+rax*1-0x38]
   1400078e1:	sub    r8d,r12d
   1400078e4:	call   0x140008f14
   1400078e9:	cmp    eax,0xffffffff
   1400078ec:	je     0x14000767e
   1400078f2:	add    r12d,eax
   1400078f5:	cmp    r13d,r12d
   1400078f8:	jg     0x1400078d4
   1400078fa:	jmp    0x140007900
   1400078fc:	mov    r15d,DWORD PTR [rbp-0x40]
   140007900:	mov    r8d,0x1
   140007906:	movsxd rcx,DWORD PTR [rbx]
   140007909:	mov    r12b,BYTE PTR [rbp+0x58]
   14000790d:	mov    rax,rcx
   140007910:	and    ecx,0x1f
   140007913:	and    r12b,0x7f
   140007917:	sar    rax,0x5
   14000791b:	imul   rcx,rcx,0x58
   14000791f:	mov    rax,QWORD PTR [r14+rax*8]
   140007923:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   140007928:	or     BYTE PTR [rax+rcx*1+0x38],r12b
   14000792d:	movsxd rdx,DWORD PTR [rbx]
   140007930:	mov    rax,rdx
   140007933:	and    edx,0x1f
   140007936:	sar    rax,0x5
   14000793a:	imul   rdx,rdx,0x58
   14000793e:	mov    rcx,QWORD PTR [r14+rax*8]
   140007942:	mov    eax,esi
   140007944:	and    BYTE PTR [rcx+rdx*1+0x38],0x7f
   140007949:	shr    eax,0x10
   14000794c:	shl    al,0x7
   14000794f:	or     BYTE PTR [rcx+rdx*1+0x38],al
   140007953:	cmp    BYTE PTR [rbp-0x30],dil
   140007957:	jne    0x140007979
   140007959:	test   sil,0x8
   14000795d:	je     0x140007979
   14000795f:	movsxd rcx,DWORD PTR [rbx]
   140007962:	mov    rax,rcx
   140007965:	and    ecx,0x1f
   140007968:	sar    rax,0x5
   14000796c:	imul   rcx,rcx,0x58
   140007970:	mov    rax,QWORD PTR [r14+rax*8]
   140007974:	or     BYTE PTR [rax+rcx*1+0x8],0x20
   140007979:	mov    ecx,0xc0000000
   14000797e:	mov    eax,r15d
   140007981:	and    eax,ecx
   140007983:	cmp    eax,ecx
   140007985:	jne    0x140007a20
   14000798b:	test   r8b,sil
   14000798e:	je     0x140007a20
   140007994:	mov    rcx,QWORD PTR [rbp-0x20]
   140007998:	call   QWORD PTR [rip+0x66ea]        # 0x14000e088
   14000799e:	mov    eax,DWORD PTR [rbp-0x34]
   1400079a1:	mov    r8d,DWORD PTR [rbp-0x3c]
   1400079a5:	mov    rcx,QWORD PTR [rbp+0x50]
   1400079a9:	mov    QWORD PTR [rsp+0x30],rdi
   1400079ae:	mov    DWORD PTR [rsp+0x28],eax
   1400079b2:	btr    r15d,0x1f
   1400079b7:	lea    r9,[rbp-0x18]
   1400079bb:	mov    DWORD PTR [rsp+0x20],0x3
   1400079c3:	mov    edx,r15d
   1400079c6:	call   QWORD PTR [rip+0x6824]        # 0x14000e1f0
   1400079cc:	cmp    rax,0xffffffffffffffff
   1400079d0:	jne    0x140007a07
   1400079d2:	call   QWORD PTR [rip+0x6698]        # 0x14000e070
   1400079d8:	mov    ecx,eax
   1400079da:	call   0x140003290
   1400079df:	movsxd r11,DWORD PTR [rbx]
   1400079e2:	mov    rax,r11
   1400079e5:	and    r11d,0x1f
   1400079e9:	sar    rax,0x5
   1400079ed:	imul   r11,r11,0x58
   1400079f1:	mov    rax,QWORD PTR [r14+rax*8]
   1400079f5:	and    BYTE PTR [rax+r11*1+0x8],0xfe
   1400079fb:	mov    ecx,DWORD PTR [rbx]
   1400079fd:	call   0x14000bb34
   140007a02:	jmp    0x140007579
   140007a07:	movsxd rdx,DWORD PTR [rbx]
   140007a0a:	mov    rcx,rdx
   140007a0d:	and    edx,0x1f
   140007a10:	sar    rcx,0x5
   140007a14:	imul   rdx,rdx,0x58
   140007a18:	mov    rcx,QWORD PTR [r14+rcx*8]
   140007a1c:	mov    QWORD PTR [rdx+rcx*1],rax
   140007a20:	mov    eax,edi
   140007a22:	jmp    0x140007354
   140007a27:	xor    r9d,r9d
   140007a2a:	xor    r8d,r8d
   140007a2d:	xor    edx,edx
   140007a2f:	xor    ecx,ecx
   140007a31:	mov    QWORD PTR [rsp+0x20],rdi
   140007a36:	call   0x140003144
   140007a3b:	int3   
   140007a3c:	mov    QWORD PTR [rsp+0x8],rbx
   140007a41:	push   rdi
   140007a42:	sub    rsp,0x40
   140007a46:	and    DWORD PTR [rsp+0x30],0x0
   140007a4b:	xor    eax,eax
   140007a4d:	mov    rdi,QWORD PTR [rsp+0x70]
   140007a52:	test   rdi,rdi
   140007a55:	setne  al
   140007a58:	test   eax,eax
   140007a5a:	jne    0x140007a74
   140007a5c:	call   0x140003250
   140007a61:	mov    ebx,0x16
   140007a66:	mov    DWORD PTR [rax],ebx
   140007a68:	call   0x1400031e8
   140007a6d:	mov    eax,ebx
   140007a6f:	jmp    0x140007b03
   140007a74:	or     DWORD PTR [rdi],0xffffffff
   140007a77:	xor    eax,eax
   140007a79:	test   rcx,rcx
   140007a7c:	setne  al
   140007a7f:	test   eax,eax
   140007a81:	je     0x140007a5c
   140007a83:	cmp    DWORD PTR [rsp+0x78],0x0
   140007a88:	je     0x140007a9d
   140007a8a:	test   r9d,0xfffffe7f
   140007a91:	mov    eax,0x0
   140007a96:	sete   al
   140007a99:	test   eax,eax
   140007a9b:	je     0x140007a5c
   140007a9d:	mov    DWORD PTR [rsp+0x28],r9d
   140007aa2:	mov    DWORD PTR [rsp+0x20],r8d
   140007aa7:	mov    r9d,edx
   140007aaa:	mov    r8,rcx
   140007aad:	mov    rdx,rdi
   140007ab0:	lea    rcx,[rsp+0x30]
   140007ab5:	call   0x140007294
   140007aba:	mov    ebx,eax
   140007abc:	mov    DWORD PTR [rsp+0x34],eax
   140007ac0:	cmp    DWORD PTR [rsp+0x30],0x0
   140007ac5:	je     0x140007af3
   140007ac7:	test   eax,eax
   140007ac9:	je     0x140007aec
   140007acb:	movsxd rcx,DWORD PTR [rdi]
   140007ace:	mov    rax,rcx
   140007ad1:	sar    rax,0x5
   140007ad5:	lea    rdx,[rip+0xcb44]        # 0x140014620
   140007adc:	and    ecx,0x1f
   140007adf:	imul   rcx,rcx,0x58
   140007ae3:	mov    rax,QWORD PTR [rdx+rax*8]
   140007ae7:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140007aec:	mov    ecx,DWORD PTR [rdi]
   140007aee:	call   0x14000bcfc
   140007af3:	test   ebx,ebx
   140007af5:	je     0x140007a6d
   140007afb:	or     DWORD PTR [rdi],0xffffffff
   140007afe:	jmp    0x140007a6d
   140007b03:	mov    rbx,QWORD PTR [rsp+0x50]
   140007b08:	add    rsp,0x40
   140007b0c:	pop    rdi
   140007b0d:	ret    
   140007b0e:	int3   
   140007b0f:	int3   
   140007b10:	sub    rsp,0x38
   140007b14:	mov    eax,r9d
   140007b17:	mov    r9d,DWORD PTR [rsp+0x60]
   140007b1c:	mov    r10d,r8d
   140007b1f:	mov    r11,rdx
   140007b22:	mov    DWORD PTR [rsp+0x28],0x1
   140007b2a:	mov    QWORD PTR [rsp+0x20],rcx
   140007b2f:	mov    r8d,eax
   140007b32:	mov    edx,r10d
   140007b35:	mov    rcx,r11
   140007b38:	call   0x140007a3c
   140007b3d:	add    rsp,0x38
   140007b41:	ret    
   140007b42:	int3   
   140007b43:	int3   
   140007b44:	mov    rax,rsp
   140007b47:	mov    QWORD PTR [rax+0x8],rbx
   140007b4b:	mov    QWORD PTR [rax+0x10],rbp
   140007b4f:	mov    QWORD PTR [rax+0x18],rsi
   140007b53:	mov    QWORD PTR [rax+0x20],rdi
   140007b57:	push   r12
   140007b59:	sub    rsp,0x40
   140007b5d:	xor    r12d,r12d
   140007b60:	mov    rbp,r8
   140007b63:	mov    rdi,rdx
   140007b66:	mov    rsi,rcx
   140007b69:	mov    eax,r12d
   140007b6c:	test   r8,r8
   140007b6f:	je     0x140007c3f
   140007b75:	test   rcx,rcx
   140007b78:	jne    0x140007b94
   140007b7a:	call   0x140003250
   140007b7f:	mov    DWORD PTR [rax],0x16
   140007b85:	call   0x1400031e8
   140007b8a:	mov    eax,0x7fffffff
   140007b8f:	jmp    0x140007c3f
   140007b94:	test   rdx,rdx
   140007b97:	je     0x140007b7a
   140007b99:	lea    rcx,[rsp+0x20]
   140007b9e:	mov    rdx,r9
   140007ba1:	call   0x140004810
   140007ba6:	mov    r11,QWORD PTR [rsp+0x20]
   140007bab:	cmp    DWORD PTR [r11+0x14],r12d
   140007baf:	jne    0x140007bf0
   140007bb1:	sub    rsi,rdi
   140007bb4:	movzx  ebx,WORD PTR [rsi+rdi*1]
   140007bb8:	cmp    bx,0x41
   140007bbc:	jb     0x140007bc8
   140007bbe:	cmp    bx,0x5a
   140007bc2:	ja     0x140007bc8
   140007bc4:	add    bx,0x20
   140007bc8:	movzx  eax,WORD PTR [rdi]
   140007bcb:	cmp    ax,0x41
   140007bcf:	jb     0x140007bdb
   140007bd1:	cmp    ax,0x5a
   140007bd5:	ja     0x140007bdb
   140007bd7:	add    ax,0x20
   140007bdb:	add    rdi,0x2
   140007bdf:	dec    rbp
   140007be2:	je     0x140007c24
   140007be4:	test   bx,bx
   140007be7:	je     0x140007c24
   140007be9:	cmp    bx,ax
   140007bec:	je     0x140007bb4
   140007bee:	jmp    0x140007c24
   140007bf0:	movzx  ecx,WORD PTR [rsi]
   140007bf3:	lea    rdx,[rsp+0x20]
   140007bf8:	call   0x14000c7d8
   140007bfd:	movzx  ecx,WORD PTR [rdi]
   140007c00:	lea    rdx,[rsp+0x20]
   140007c05:	movzx  ebx,ax
   140007c08:	call   0x14000c7d8
   140007c0d:	add    rsi,0x2
   140007c11:	add    rdi,0x2
   140007c15:	dec    rbp
   140007c18:	je     0x140007c24
   140007c1a:	test   bx,bx
   140007c1d:	je     0x140007c24
   140007c1f:	cmp    bx,ax
   140007c22:	je     0x140007bf0
   140007c24:	movzx  ecx,ax
   140007c27:	movzx  eax,bx
   140007c2a:	sub    eax,ecx
   140007c2c:	cmp    BYTE PTR [rsp+0x38],r12b
   140007c31:	je     0x140007c3f
   140007c33:	mov    rcx,QWORD PTR [rsp+0x30]
   140007c38:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140007c3f:	mov    rbx,QWORD PTR [rsp+0x50]
   140007c44:	mov    rbp,QWORD PTR [rsp+0x58]
   140007c49:	mov    rsi,QWORD PTR [rsp+0x60]
   140007c4e:	mov    rdi,QWORD PTR [rsp+0x68]
   140007c53:	add    rsp,0x40
   140007c57:	pop    r12
   140007c59:	ret    
   140007c5a:	int3   
   140007c5b:	int3   
   140007c5c:	sub    rsp,0x28
   140007c60:	xor    eax,eax
   140007c62:	mov    r10,rdx
   140007c65:	mov    r11,rcx
   140007c68:	cmp    DWORD PTR [rip+0xc772],eax        # 0x1400143e0
   140007c6e:	jne    0x140007ce7
   140007c70:	test   r8,r8
   140007c73:	je     0x140007cef
   140007c75:	test   rcx,rcx
   140007c78:	jne    0x140007c94
   140007c7a:	call   0x140003250
   140007c7f:	mov    DWORD PTR [rax],0x16
   140007c85:	call   0x1400031e8
   140007c8a:	mov    eax,0x7fffffff
   140007c8f:	add    rsp,0x28
   140007c93:	ret    
   140007c94:	test   rdx,rdx
   140007c97:	je     0x140007c7a
   140007c99:	sub    r11,rdx
   140007c9c:	movzx  ecx,WORD PTR [r11+r10*1]
   140007ca1:	cmp    cx,0x41
   140007ca5:	jb     0x140007cb1
   140007ca7:	cmp    cx,0x5a
   140007cab:	ja     0x140007cb1
   140007cad:	add    cx,0x20
   140007cb1:	movzx  edx,WORD PTR [r10]
   140007cb5:	cmp    dx,0x41
   140007cb9:	jb     0x140007cc5
   140007cbb:	cmp    dx,0x5a
   140007cbf:	ja     0x140007cc5
   140007cc1:	add    dx,0x20
   140007cc5:	add    r10,0x2
   140007cc9:	dec    r8
   140007ccc:	je     0x140007cd8
   140007cce:	test   cx,cx
   140007cd1:	je     0x140007cd8
   140007cd3:	cmp    cx,dx
   140007cd6:	je     0x140007c9c
   140007cd8:	movzx  eax,dx
   140007cdb:	movzx  ecx,cx
   140007cde:	sub    ecx,eax
   140007ce0:	mov    eax,ecx
   140007ce2:	add    rsp,0x28
   140007ce6:	ret    
   140007ce7:	xor    r9d,r9d
   140007cea:	call   0x140007b44
   140007cef:	add    rsp,0x28
   140007cf3:	ret    
   140007cf4:	test   r8,r8
   140007cf7:	jne    0x140007d11
   140007cf9:	xor    eax,eax
   140007cfb:	ret    
   140007cfc:	movzx  eax,WORD PTR [rcx]
   140007cff:	test   ax,ax
   140007d02:	je     0x140007d16
   140007d04:	cmp    ax,WORD PTR [rdx]
   140007d07:	jne    0x140007d16
   140007d09:	add    rcx,0x2
   140007d0d:	add    rdx,0x2
   140007d11:	dec    r8
   140007d14:	jne    0x140007cfc
   140007d16:	movzx  eax,WORD PTR [rcx]
   140007d19:	movzx  ecx,WORD PTR [rdx]
   140007d1c:	sub    eax,ecx
   140007d1e:	ret    
   140007d1f:	int3   
   140007d20:	rex push rbx
   140007d22:	sub    rsp,0x20
   140007d26:	mov    r11d,DWORD PTR [r8]
   140007d29:	mov    rbx,rdx
   140007d2c:	mov    r9,rcx
   140007d2f:	and    r11d,0xfffffff8
   140007d33:	test   BYTE PTR [r8],0x4
   140007d37:	mov    r10,rcx
   140007d3a:	je     0x140007d4f
   140007d3c:	mov    eax,DWORD PTR [r8+0x8]
   140007d40:	movsxd r10,DWORD PTR [r8+0x4]
   140007d44:	neg    eax
   140007d46:	add    r10,rcx
   140007d49:	movsxd rcx,eax
   140007d4c:	and    r10,rcx
   140007d4f:	movsxd rax,r11d
   140007d52:	mov    rdx,QWORD PTR [rax+r10*1]
   140007d56:	mov    rax,QWORD PTR [rbx+0x10]
   140007d5a:	mov    ecx,DWORD PTR [rax+0x8]
   140007d5d:	add    rcx,QWORD PTR [rbx+0x8]
   140007d61:	test   BYTE PTR [rcx+0x3],0xf
   140007d65:	je     0x140007d73
   140007d67:	movzx  eax,BYTE PTR [rcx+0x3]
   140007d6b:	and    eax,0xfffffff0
   140007d6e:	cdqe   
   140007d70:	add    r9,rax
   140007d73:	xor    r9,rdx
   140007d76:	mov    rcx,r9
   140007d79:	add    rsp,0x20
   140007d7d:	pop    rbx
   140007d7e:	jmp    0x140001920
   140007d83:	int3   
   140007d84:	sub    rsp,0x28
   140007d88:	mov    r8,QWORD PTR [r9+0x38]
   140007d8c:	mov    rcx,rdx
   140007d8f:	mov    rdx,r9
   140007d92:	call   0x140007d20
   140007d97:	mov    eax,0x1
   140007d9c:	add    rsp,0x28
   140007da0:	ret    
   140007da1:	int3   
   140007da2:	int3   
   140007da3:	int3   
   140007da4:	sub    rsp,0x28
   140007da8:	call   0x140006f38
   140007dad:	mov    rcx,QWORD PTR [rax+0xd0]
   140007db4:	test   rcx,rcx
   140007db7:	je     0x140007dbd
   140007db9:	call   rcx
   140007dbb:	jmp    0x140007dbd
   140007dbd:	call   0x14000c8b0
   140007dc2:	add    rsp,0x28
   140007dc6:	ret    
   140007dc7:	int3   
   140007dc8:	sub    rsp,0x28
   140007dcc:	lea    rcx,[rip+0xffffffffffffffd1]        # 0x140007da4
   140007dd3:	call   QWORD PTR [rip+0x632f]        # 0x14000e108
   140007dd9:	mov    QWORD PTR [rip+0xc570],rax        # 0x140014350
   140007de0:	add    rsp,0x28
   140007de4:	ret    
   140007de5:	int3   
   140007de6:	int3   
   140007de7:	int3   
   140007de8:	mov    QWORD PTR [rip+0xc569],rcx        # 0x140014358
   140007def:	mov    QWORD PTR [rip+0xc56a],rcx        # 0x140014360
   140007df6:	mov    QWORD PTR [rip+0xc56b],rcx        # 0x140014368
   140007dfd:	mov    QWORD PTR [rip+0xc56c],rcx        # 0x140014370
   140007e04:	ret    
   140007e05:	int3   
   140007e06:	int3   
   140007e07:	int3   
   140007e08:	mov    rcx,QWORD PTR [rip+0xc559]        # 0x140014368
   140007e0f:	rex.W jmp QWORD PTR [rip+0x62fa]        # 0x14000e110
   140007e16:	int3   
   140007e17:	int3   
   140007e18:	mov    QWORD PTR [rsp+0x10],rbx
   140007e1d:	mov    QWORD PTR [rsp+0x18],rsi
   140007e22:	push   rdi
   140007e23:	push   r12
   140007e25:	push   r13
   140007e27:	push   r14
   140007e29:	push   r15
   140007e2b:	sub    rsp,0x30
   140007e2f:	mov    ebx,ecx
   140007e31:	xor    edi,edi
   140007e33:	mov    DWORD PTR [rsp+0x60],edi
   140007e37:	xor    esi,esi
   140007e39:	mov    edx,ecx
   140007e3b:	sub    edx,0x2
   140007e3e:	je     0x140007f09
   140007e44:	sub    edx,0x2
   140007e47:	je     0x140007eab
   140007e49:	sub    edx,0x2
   140007e4c:	je     0x140007e9b
   140007e4e:	sub    edx,0x2
   140007e51:	je     0x140007eab
   140007e53:	sub    edx,0x3
   140007e56:	je     0x140007eab
   140007e58:	sub    edx,0x4
   140007e5b:	je     0x140007e8b
   140007e5d:	sub    edx,0x6
   140007e60:	je     0x140007e78
   140007e62:	dec    edx
   140007e64:	je     0x140007e9b
   140007e66:	call   0x140003250
   140007e6b:	mov    DWORD PTR [rax],0x16
   140007e71:	call   0x1400031e8
   140007e76:	jmp    0x140007eb8
   140007e78:	lea    r12,[rip+0xc4e1]        # 0x140014360
   140007e7f:	mov    rcx,QWORD PTR [rip+0xc4da]        # 0x140014360
   140007e86:	jmp    0x140007f17
   140007e8b:	lea    r12,[rip+0xc4de]        # 0x140014370
   140007e92:	mov    rcx,QWORD PTR [rip+0xc4d7]        # 0x140014370
   140007e99:	jmp    0x140007f17
   140007e9b:	lea    r12,[rip+0xc4c6]        # 0x140014368
   140007ea2:	mov    rcx,QWORD PTR [rip+0xc4bf]        # 0x140014368
   140007ea9:	jmp    0x140007f17
   140007eab:	call   0x140006eb4
   140007eb0:	mov    rsi,rax
   140007eb3:	test   rax,rax
   140007eb6:	jne    0x140007ec0
   140007eb8:	or     eax,0xffffffff
   140007ebb:	jmp    0x140008032
   140007ec0:	mov    rdx,QWORD PTR [rax+0xa0]
   140007ec7:	mov    rcx,rdx
   140007eca:	movsxd r8,DWORD PTR [rip+0x790b]        # 0x14000f7dc
   140007ed1:	cmp    DWORD PTR [rcx+0x4],ebx
   140007ed4:	je     0x140007ee9
   140007ed6:	add    rcx,0x10
   140007eda:	mov    rax,r8
   140007edd:	shl    rax,0x4
   140007ee1:	add    rax,rdx
   140007ee4:	cmp    rcx,rax
   140007ee7:	jb     0x140007ed1
   140007ee9:	mov    rax,r8
   140007eec:	shl    rax,0x4
   140007ef0:	add    rax,rdx
   140007ef3:	cmp    rcx,rax
   140007ef6:	jae    0x140007efd
   140007ef8:	cmp    DWORD PTR [rcx+0x4],ebx
   140007efb:	je     0x140007eff
   140007efd:	xor    ecx,ecx
   140007eff:	lea    r12,[rcx+0x8]
   140007f03:	mov    r13,QWORD PTR [r12]
   140007f07:	jmp    0x140007f29
   140007f09:	lea    r12,[rip+0xc448]        # 0x140014358
   140007f10:	mov    rcx,QWORD PTR [rip+0xc441]        # 0x140014358
   140007f17:	mov    edi,0x1
   140007f1c:	mov    DWORD PTR [rsp+0x60],edi
   140007f20:	call   QWORD PTR [rip+0x61ea]        # 0x14000e110
   140007f26:	mov    r13,rax
   140007f29:	cmp    r13,0x1
   140007f2d:	jne    0x140007f36
   140007f2f:	xor    eax,eax
   140007f31:	jmp    0x140008032
   140007f36:	test   r13,r13
   140007f39:	jne    0x140007f45
   140007f3b:	lea    ecx,[r13+0x3]
   140007f3f:	call   0x1400037b4
   140007f44:	int3   
   140007f45:	test   edi,edi
   140007f47:	je     0x140007f51
   140007f49:	xor    ecx,ecx
   140007f4b:	call   0x1400043ec
   140007f50:	nop
   140007f51:	cmp    ebx,0x8
   140007f54:	je     0x140007f67
   140007f56:	cmp    ebx,0xb
   140007f59:	je     0x140007f67
   140007f5b:	cmp    ebx,0x4
   140007f5e:	je     0x140007f67
   140007f60:	mov    r15,QWORD PTR [rsp+0x28]
   140007f65:	jmp    0x140007f93
   140007f67:	mov    r15,QWORD PTR [rsi+0xa8]
   140007f6e:	mov    QWORD PTR [rsp+0x28],r15
   140007f73:	and    QWORD PTR [rsi+0xa8],0x0
   140007f7b:	cmp    ebx,0x8
   140007f7e:	jne    0x140007f93
   140007f80:	mov    r14d,DWORD PTR [rsi+0xb0]
   140007f87:	mov    DWORD PTR [rsi+0xb0],0x8c
   140007f91:	jmp    0x140007f98
   140007f93:	mov    r14d,DWORD PTR [rsp+0x60]
   140007f98:	cmp    ebx,0x8
   140007f9b:	jne    0x140007fd6
   140007f9d:	mov    ecx,DWORD PTR [rip+0x782d]        # 0x14000f7d0
   140007fa3:	mov    edx,ecx
   140007fa5:	mov    DWORD PTR [rsp+0x20],ecx
   140007fa9:	mov    eax,DWORD PTR [rip+0x7825]        # 0x14000f7d4
   140007faf:	add    ecx,eax
   140007fb1:	cmp    edx,ecx
   140007fb3:	jge    0x140007fdf
   140007fb5:	movsxd rcx,edx
   140007fb8:	add    rcx,rcx
   140007fbb:	mov    rax,QWORD PTR [rsi+0xa0]
   140007fc2:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   140007fc8:	inc    edx
   140007fca:	mov    DWORD PTR [rsp+0x20],edx
   140007fce:	mov    ecx,DWORD PTR [rip+0x77fc]        # 0x14000f7d0
   140007fd4:	jmp    0x140007fa9
   140007fd6:	call   0x140006dc8
   140007fdb:	mov    QWORD PTR [r12],rax
   140007fdf:	test   edi,edi
   140007fe1:	je     0x140007fea
   140007fe3:	xor    ecx,ecx
   140007fe5:	call   0x1400042ec
   140007fea:	mov    edi,0x8
   140007fef:	cmp    ebx,edi
   140007ff1:	jne    0x140008000
   140007ff3:	mov    edx,DWORD PTR [rsi+0xb0]
   140007ff9:	mov    ecx,edi
   140007ffb:	call   r13
   140007ffe:	jmp    0x140008005
   140008000:	mov    ecx,ebx
   140008002:	call   r13
   140008005:	cmp    ebx,edi
   140008007:	je     0x140008017
   140008009:	cmp    ebx,0xb
   14000800c:	je     0x140008017
   14000800e:	cmp    ebx,0x4
   140008011:	jne    0x140007f2f
   140008017:	mov    QWORD PTR [rsi+0xa8],r15
   14000801e:	cmp    ebx,edi
   140008020:	jne    0x140007f2f
   140008026:	mov    DWORD PTR [rsi+0xb0],r14d
   14000802d:	jmp    0x140007f2f
   140008032:	mov    rbx,QWORD PTR [rsp+0x68]
   140008037:	mov    rsi,QWORD PTR [rsp+0x70]
   14000803c:	add    rsp,0x30
   140008040:	pop    r15
   140008042:	pop    r14
   140008044:	pop    r13
   140008046:	pop    r12
   140008048:	pop    rdi
   140008049:	ret    
   14000804a:	int3   
   14000804b:	int3   
   14000804c:	mov    QWORD PTR [rip+0xc32d],rcx        # 0x140014380
   140008053:	ret    
   140008054:	mov    QWORD PTR [rip+0xc32d],rcx        # 0x140014388
   14000805b:	ret    
   14000805c:	rex push rbx
   14000805e:	sub    rsp,0x20
   140008062:	mov    edx,0x8
   140008067:	lea    ecx,[rdx+0x18]
   14000806a:	call   0x140003e68
   14000806f:	mov    rcx,rax
   140008072:	mov    rbx,rax
   140008075:	call   QWORD PTR [rip+0x608d]        # 0x14000e108
   14000807b:	mov    QWORD PTR [rip+0xc7ae],rax        # 0x140014830
   140008082:	mov    QWORD PTR [rip+0xc79f],rax        # 0x140014828
   140008089:	test   rbx,rbx
   14000808c:	jne    0x140008093
   14000808e:	lea    eax,[rbx+0x18]
   140008091:	jmp    0x140008099
   140008093:	and    QWORD PTR [rbx],0x0
   140008097:	xor    eax,eax
   140008099:	add    rsp,0x20
   14000809d:	pop    rbx
   14000809e:	ret    
   14000809f:	int3   
   1400080a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400080a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400080aa:	mov    QWORD PTR [rsp+0x18],rdi
   1400080af:	push   r12
   1400080b1:	push   r13
   1400080b3:	push   r14
   1400080b5:	sub    rsp,0x20
   1400080b9:	mov    r14,rcx
   1400080bc:	call   0x14000349c
   1400080c1:	nop
   1400080c2:	mov    rcx,QWORD PTR [rip+0xc767]        # 0x140014830
   1400080c9:	call   QWORD PTR [rip+0x6041]        # 0x14000e110
   1400080cf:	mov    r12,rax
   1400080d2:	mov    rcx,QWORD PTR [rip+0xc74f]        # 0x140014828
   1400080d9:	call   QWORD PTR [rip+0x6031]        # 0x14000e110
   1400080df:	mov    rbx,rax
   1400080e2:	cmp    rax,r12
   1400080e5:	jb     0x140008186
   1400080eb:	mov    rdi,rax
   1400080ee:	sub    rdi,r12
   1400080f1:	lea    r13,[rdi+0x8]
   1400080f5:	cmp    r13,0x8
   1400080f9:	jb     0x140008186
   1400080ff:	mov    rcx,r12
   140008102:	call   0x14000c8f0
   140008107:	mov    rsi,rax
   14000810a:	cmp    rax,r13
   14000810d:	jae    0x140008164
   14000810f:	mov    edx,0x1000
   140008114:	cmp    rax,rdx
   140008117:	cmovb  rdx,rax
   14000811b:	add    rdx,rax
   14000811e:	cmp    rdx,rax
   140008121:	jb     0x140008134
   140008123:	mov    rcx,r12
   140008126:	call   0x140003eec
   14000812b:	xor    ebx,ebx
   14000812d:	test   rax,rax
   140008130:	jne    0x14000814c
   140008132:	jmp    0x140008136
   140008134:	xor    ebx,ebx
   140008136:	lea    rdx,[rsi+0x20]
   14000813a:	cmp    rdx,rsi
   14000813d:	jb     0x140008188
   14000813f:	mov    rcx,r12
   140008142:	call   0x140003eec
   140008147:	test   rax,rax
   14000814a:	je     0x140008188
   14000814c:	sar    rdi,0x3
   140008150:	lea    rbx,[rax+rdi*8]
   140008154:	mov    rcx,rax
   140008157:	call   QWORD PTR [rip+0x5fab]        # 0x14000e108
   14000815d:	mov    QWORD PTR [rip+0xc6cc],rax        # 0x140014830
   140008164:	mov    rcx,r14
   140008167:	call   QWORD PTR [rip+0x5f9b]        # 0x14000e108
   14000816d:	mov    QWORD PTR [rbx],rax
   140008170:	lea    rcx,[rbx+0x8]
   140008174:	call   QWORD PTR [rip+0x5f8e]        # 0x14000e108
   14000817a:	mov    QWORD PTR [rip+0xc6a7],rax        # 0x140014828
   140008181:	mov    rbx,r14
   140008184:	jmp    0x140008188
   140008186:	xor    ebx,ebx
   140008188:	call   0x1400034a8
   14000818d:	mov    rax,rbx
   140008190:	mov    rbx,QWORD PTR [rsp+0x40]
   140008195:	mov    rsi,QWORD PTR [rsp+0x48]
   14000819a:	mov    rdi,QWORD PTR [rsp+0x50]
   14000819f:	add    rsp,0x20
   1400081a3:	pop    r14
   1400081a5:	pop    r13
   1400081a7:	pop    r12
   1400081a9:	ret    
   1400081aa:	int3   
   1400081ab:	int3   
   1400081ac:	sub    rsp,0x28
   1400081b0:	call   0x1400080a0
   1400081b5:	neg    rax
   1400081b8:	sbb    eax,eax
   1400081ba:	neg    eax
   1400081bc:	dec    eax
   1400081be:	add    rsp,0x28
   1400081c2:	ret    
   1400081c3:	int3   
   1400081c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400081c9:	push   rdi
   1400081ca:	sub    rsp,0x20
   1400081ce:	lea    rbx,[rip+0xa74b]        # 0x140012920
   1400081d5:	mov    edi,0xa
   1400081da:	mov    rcx,QWORD PTR [rbx]
   1400081dd:	call   QWORD PTR [rip+0x5f25]        # 0x14000e108
   1400081e3:	mov    QWORD PTR [rbx],rax
   1400081e6:	add    rbx,0x8
   1400081ea:	dec    rdi
   1400081ed:	jne    0x1400081da
   1400081ef:	mov    rbx,QWORD PTR [rsp+0x30]
   1400081f4:	add    rsp,0x20
   1400081f8:	pop    rdi
   1400081f9:	ret    
   1400081fa:	int3   
   1400081fb:	int3   
   1400081fc:	int3   
   1400081fd:	int3   
   1400081fe:	int3   
   1400081ff:	int3   
   140008200:	int3   
   140008201:	int3   
   140008202:	int3   
   140008203:	int3   
   140008204:	int3   
   140008205:	int3   
   140008206:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008210:	mov    rax,rcx
   140008213:	neg    rcx
   140008216:	test   rax,0x7
   14000821c:	je     0x14000822d
   14000821e:	xchg   ax,ax
   140008220:	mov    dl,BYTE PTR [rax]
   140008222:	inc    rax
   140008225:	test   dl,dl
   140008227:	je     0x140008288
   140008229:	test   al,0x7
   14000822b:	jne    0x140008220
   14000822d:	movabs r8,0x7efefefefefefeff
   140008237:	movabs r11,0x8101010101010100
   140008241:	mov    rdx,QWORD PTR [rax]
   140008244:	mov    r9,r8
   140008247:	add    rax,0x8
   14000824b:	add    r9,rdx
   14000824e:	not    rdx
   140008251:	xor    rdx,r9
   140008254:	and    rdx,r11
   140008257:	je     0x140008241
   140008259:	mov    rdx,QWORD PTR [rax-0x8]
   14000825d:	test   dl,dl
   14000825f:	je     0x1400082b2
   140008261:	test   dh,dh
   140008263:	je     0x1400082ac
   140008265:	shr    rdx,0x10
   140008269:	test   dl,dl
   14000826b:	je     0x1400082a6
   14000826d:	test   dh,dh
   14000826f:	je     0x1400082a0
   140008271:	shr    rdx,0x10
   140008275:	test   dl,dl
   140008277:	je     0x14000829a
   140008279:	test   dh,dh
   14000827b:	je     0x140008294
   14000827d:	shr    edx,0x10
   140008280:	test   dl,dl
   140008282:	je     0x14000828e
   140008284:	test   dh,dh
   140008286:	jne    0x140008241
   140008288:	lea    rax,[rcx+rax*1-0x1]
   14000828d:	ret    
   14000828e:	lea    rax,[rcx+rax*1-0x2]
   140008293:	ret    
   140008294:	lea    rax,[rcx+rax*1-0x3]
   140008299:	ret    
   14000829a:	lea    rax,[rcx+rax*1-0x4]
   14000829f:	ret    
   1400082a0:	lea    rax,[rcx+rax*1-0x5]
   1400082a5:	ret    
   1400082a6:	lea    rax,[rcx+rax*1-0x6]
   1400082ab:	ret    
   1400082ac:	lea    rax,[rcx+rax*1-0x7]
   1400082b1:	ret    
   1400082b2:	lea    rax,[rcx+rax*1-0x8]
   1400082b7:	ret    
   1400082b8:	rex push rbx
   1400082ba:	push   rbp
   1400082bb:	push   rsi
   1400082bc:	push   rdi
   1400082bd:	push   r12
   1400082bf:	push   r13
   1400082c1:	push   r14
   1400082c3:	sub    rsp,0x50
   1400082c7:	mov    rax,QWORD PTR [rip+0xa0fa]        # 0x1400123c8
   1400082ce:	xor    rax,rsp
   1400082d1:	mov    QWORD PTR [rsp+0x48],rax
   1400082d6:	mov    ebp,r8d
   1400082d9:	mov    r14,rdx
   1400082dc:	mov    r13,rcx
   1400082df:	call   0x140006dc8
   1400082e4:	xor    ebx,ebx
   1400082e6:	cmp    QWORD PTR [rip+0xc0a3],rbx        # 0x140014390
   1400082ed:	mov    rdi,rax
   1400082f0:	jne    0x1400083cb
   1400082f6:	lea    rcx,[rip+0x7553]        # 0x14000f850
   1400082fd:	call   QWORD PTR [rip+0x5ef5]        # 0x14000e1f8
   140008303:	mov    rsi,rax
   140008306:	test   rax,rax
   140008309:	je     0x1400084a2
   14000830f:	lea    rdx,[rip+0x752a]        # 0x14000f840
   140008316:	mov    rcx,rax
   140008319:	call   QWORD PTR [rip+0x5e11]        # 0x14000e130
   14000831f:	test   rax,rax
   140008322:	je     0x1400084a2
   140008328:	mov    rcx,rax
   14000832b:	call   QWORD PTR [rip+0x5dd7]        # 0x14000e108
   140008331:	lea    rdx,[rip+0x74f8]        # 0x14000f830
   140008338:	mov    rcx,rsi
   14000833b:	mov    QWORD PTR [rip+0xc04e],rax        # 0x140014390
   140008342:	call   QWORD PTR [rip+0x5de8]        # 0x14000e130
   140008348:	mov    rcx,rax
   14000834b:	call   QWORD PTR [rip+0x5db7]        # 0x14000e108
   140008351:	lea    rdx,[rip+0x74c0]        # 0x14000f818
   140008358:	mov    rcx,rsi
   14000835b:	mov    QWORD PTR [rip+0xc036],rax        # 0x140014398
   140008362:	call   QWORD PTR [rip+0x5dc8]        # 0x14000e130
   140008368:	mov    rcx,rax
   14000836b:	call   QWORD PTR [rip+0x5d97]        # 0x14000e108
   140008371:	lea    rdx,[rip+0x7480]        # 0x14000f7f8
   140008378:	mov    rcx,rsi
   14000837b:	mov    QWORD PTR [rip+0xc01e],rax        # 0x1400143a0
   140008382:	call   QWORD PTR [rip+0x5da8]        # 0x14000e130
   140008388:	mov    rcx,rax
   14000838b:	call   QWORD PTR [rip+0x5d77]        # 0x14000e108
   140008391:	mov    r11,rax
   140008394:	mov    QWORD PTR [rip+0xc015],rax        # 0x1400143b0
   14000839b:	test   rax,rax
   14000839e:	je     0x1400083c2
   1400083a0:	lea    rdx,[rip+0x7439]        # 0x14000f7e0
   1400083a7:	mov    rcx,rsi
   1400083aa:	call   QWORD PTR [rip+0x5d80]        # 0x14000e130
   1400083b0:	mov    rcx,rax
   1400083b3:	call   QWORD PTR [rip+0x5d4f]        # 0x14000e108
   1400083b9:	mov    QWORD PTR [rip+0xbfe8],rax        # 0x1400143a8
   1400083c0:	jmp    0x1400083d2
   1400083c2:	mov    rax,QWORD PTR [rip+0xbfdf]        # 0x1400143a8
   1400083c9:	jmp    0x1400083d9
   1400083cb:	mov    rax,QWORD PTR [rip+0xbfd6]        # 0x1400143a8
   1400083d2:	mov    r11,QWORD PTR [rip+0xbfd7]        # 0x1400143b0
   1400083d9:	cmp    rax,rdi
   1400083dc:	je     0x140008440
   1400083de:	cmp    r11,rdi
   1400083e1:	je     0x140008440
   1400083e3:	mov    rcx,rax
   1400083e6:	call   QWORD PTR [rip+0x5d24]        # 0x14000e110
   1400083ec:	mov    rcx,QWORD PTR [rip+0xbfbd]        # 0x1400143b0
   1400083f3:	mov    rsi,rax
   1400083f6:	call   QWORD PTR [rip+0x5d14]        # 0x14000e110
   1400083fc:	mov    r12,rax
   1400083ff:	test   rsi,rsi
   140008402:	je     0x140008440
   140008404:	test   rax,rax
   140008407:	je     0x140008440
   140008409:	call   rsi
   14000840b:	test   rax,rax
   14000840e:	je     0x14000843a
   140008410:	lea    rcx,[rsp+0x30]
   140008415:	mov    r9d,0xc
   14000841b:	lea    r8,[rsp+0x38]
   140008420:	mov    QWORD PTR [rsp+0x20],rcx
   140008425:	lea    edx,[r9-0xb]
   140008429:	mov    rcx,rax
   14000842c:	call   r12
   14000842f:	test   eax,eax
   140008431:	je     0x14000843a
   140008433:	test   BYTE PTR [rsp+0x40],0x1
   140008438:	jne    0x140008440
   14000843a:	bts    ebp,0x15
   14000843e:	jmp    0x140008480
   140008440:	mov    rcx,QWORD PTR [rip+0xbf51]        # 0x140014398
   140008447:	cmp    rcx,rdi
   14000844a:	je     0x140008480
   14000844c:	call   QWORD PTR [rip+0x5cbe]        # 0x14000e110
   140008452:	test   rax,rax
   140008455:	je     0x140008480
   140008457:	call   rax
   140008459:	mov    rbx,rax
   14000845c:	test   rax,rax
   14000845f:	je     0x140008480
   140008461:	mov    rcx,QWORD PTR [rip+0xbf38]        # 0x1400143a0
   140008468:	cmp    rcx,rdi
   14000846b:	je     0x140008480
   14000846d:	call   QWORD PTR [rip+0x5c9d]        # 0x14000e110
   140008473:	test   rax,rax
   140008476:	je     0x140008480
   140008478:	mov    rcx,rbx
   14000847b:	call   rax
   14000847d:	mov    rbx,rax
   140008480:	mov    rcx,QWORD PTR [rip+0xbf09]        # 0x140014390
   140008487:	call   QWORD PTR [rip+0x5c83]        # 0x14000e110
   14000848d:	test   rax,rax
   140008490:	je     0x1400084a2
   140008492:	mov    r9d,ebp
   140008495:	mov    r8,r14
   140008498:	mov    rdx,r13
   14000849b:	mov    rcx,rbx
   14000849e:	call   rax
   1400084a0:	jmp    0x1400084a4
   1400084a2:	xor    eax,eax
   1400084a4:	mov    rcx,QWORD PTR [rsp+0x48]
   1400084a9:	xor    rcx,rsp
   1400084ac:	call   0x140001920
   1400084b1:	add    rsp,0x50
   1400084b5:	pop    r14
   1400084b7:	pop    r13
   1400084b9:	pop    r12
   1400084bb:	pop    rdi
   1400084bc:	pop    rsi
   1400084bd:	pop    rbp
   1400084be:	pop    rbx
   1400084bf:	ret    
   1400084c0:	rex push rbx
   1400084c2:	sub    rsp,0x20
   1400084c6:	xor    r10d,r10d
   1400084c9:	mov    r9,rcx
   1400084cc:	test   rcx,rcx
   1400084cf:	je     0x1400084df
   1400084d1:	test   rdx,rdx
   1400084d4:	je     0x1400084df
   1400084d6:	test   r8,r8
   1400084d9:	jne    0x1400084f8
   1400084db:	mov    WORD PTR [rcx],r10w
   1400084df:	call   0x140003250
   1400084e4:	mov    ebx,0x16
   1400084e9:	mov    DWORD PTR [rax],ebx
   1400084eb:	call   0x1400031e8
   1400084f0:	mov    eax,ebx
   1400084f2:	add    rsp,0x20
   1400084f6:	pop    rbx
   1400084f7:	ret    
   1400084f8:	cmp    WORD PTR [rcx],r10w
   1400084fc:	je     0x140008507
   1400084fe:	add    rcx,0x2
   140008502:	dec    rdx
   140008505:	jne    0x1400084f8
   140008507:	test   rdx,rdx
   14000850a:	jne    0x140008512
   14000850c:	mov    WORD PTR [r9],r10w
   140008510:	jmp    0x1400084df
   140008512:	sub    rcx,r8
   140008515:	movzx  eax,WORD PTR [r8]
   140008519:	mov    WORD PTR [rcx+r8*1],ax
   14000851e:	add    r8,0x2
   140008522:	test   ax,ax
   140008525:	je     0x14000852c
   140008527:	dec    rdx
   14000852a:	jne    0x140008515
   14000852c:	test   rdx,rdx
   14000852f:	jne    0x140008541
   140008531:	mov    WORD PTR [r9],r10w
   140008535:	call   0x140003250
   14000853a:	mov    ebx,0x22
   14000853f:	jmp    0x1400084e9
   140008541:	xor    eax,eax
   140008543:	jmp    0x1400084f2
   140008545:	int3   
   140008546:	int3   
   140008547:	int3   
   140008548:	rex push rbx
   14000854a:	sub    rsp,0x20
   14000854e:	xor    ebx,ebx
   140008550:	mov    r10,r8
   140008553:	test   r9,r9
   140008556:	jne    0x140008566
   140008558:	test   rcx,rcx
   14000855b:	jne    0x14000856b
   14000855d:	test   rdx,rdx
   140008560:	jne    0x140008582
   140008562:	xor    eax,eax
   140008564:	jmp    0x140008595
   140008566:	test   rcx,rcx
   140008569:	je     0x140008582
   14000856b:	test   rdx,rdx
   14000856e:	je     0x140008582
   140008570:	test   r9,r9
   140008573:	jne    0x14000857a
   140008575:	mov    WORD PTR [rcx],bx
   140008578:	jmp    0x140008562
   14000857a:	test   r8,r8
   14000857d:	jne    0x14000859b
   14000857f:	mov    WORD PTR [rcx],bx
   140008582:	call   0x140003250
   140008587:	mov    ebx,0x16
   14000858c:	mov    DWORD PTR [rax],ebx
   14000858e:	call   0x1400031e8
   140008593:	mov    eax,ebx
   140008595:	add    rsp,0x20
   140008599:	pop    rbx
   14000859a:	ret    
   14000859b:	mov    r11,rcx
   14000859e:	mov    r8,rdx
   1400085a1:	cmp    r9,0xffffffffffffffff
   1400085a5:	jne    0x1400085c3
   1400085a7:	sub    r11,r10
   1400085aa:	movzx  eax,WORD PTR [r10]
   1400085ae:	mov    WORD PTR [r11+r10*1],ax
   1400085b3:	add    r10,0x2
   1400085b7:	test   ax,ax
   1400085ba:	je     0x1400085eb
   1400085bc:	dec    r8
   1400085bf:	jne    0x1400085aa
   1400085c1:	jmp    0x1400085eb
   1400085c3:	sub    r10,rcx
   1400085c6:	movzx  eax,WORD PTR [r10+r11*1]
   1400085cb:	mov    WORD PTR [r11],ax
   1400085cf:	add    r11,0x2
   1400085d3:	test   ax,ax
   1400085d6:	je     0x1400085e2
   1400085d8:	dec    r8
   1400085db:	je     0x1400085e2
   1400085dd:	dec    r9
   1400085e0:	jne    0x1400085c6
   1400085e2:	test   r9,r9
   1400085e5:	jne    0x1400085eb
   1400085e7:	mov    WORD PTR [r11],bx
   1400085eb:	test   r8,r8
   1400085ee:	jne    0x140008562
   1400085f4:	cmp    r9,0xffffffffffffffff
   1400085f8:	jne    0x140008605
   1400085fa:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   1400085ff:	lea    eax,[r8+0x50]
   140008603:	jmp    0x140008595
   140008605:	mov    WORD PTR [rcx],bx
   140008608:	call   0x140003250
   14000860d:	mov    ebx,0x22
   140008612:	jmp    0x14000858c
   140008617:	int3   
   140008618:	mov    rax,rcx
   14000861b:	movzx  edx,WORD PTR [rax]
   14000861e:	add    rax,0x2
   140008622:	test   dx,dx
   140008625:	jne    0x14000861b
   140008627:	sub    rax,rcx
   14000862a:	sar    rax,1
   14000862d:	dec    rax
   140008630:	ret    
   140008631:	int3   
   140008632:	int3   
   140008633:	int3   
   140008634:	rex push rbx
   140008636:	sub    rsp,0x20
   14000863a:	xor    r10d,r10d
   14000863d:	mov    r9,rcx
   140008640:	test   rcx,rcx
   140008643:	je     0x140008653
   140008645:	test   rdx,rdx
   140008648:	je     0x140008653
   14000864a:	test   r8,r8
   14000864d:	jne    0x14000866c
   14000864f:	mov    WORD PTR [rcx],r10w
   140008653:	call   0x140003250
   140008658:	mov    ebx,0x16
   14000865d:	mov    DWORD PTR [rax],ebx
   14000865f:	call   0x1400031e8
   140008664:	mov    eax,ebx
   140008666:	add    rsp,0x20
   14000866a:	pop    rbx
   14000866b:	ret    
   14000866c:	sub    rcx,r8
   14000866f:	movzx  eax,WORD PTR [r8]
   140008673:	mov    WORD PTR [rcx+r8*1],ax
   140008678:	add    r8,0x2
   14000867c:	test   ax,ax
   14000867f:	je     0x140008686
   140008681:	dec    rdx
   140008684:	jne    0x14000866f
   140008686:	test   rdx,rdx
   140008689:	jne    0x14000869b
   14000868b:	mov    WORD PTR [r9],r10w
   14000868f:	call   0x140003250
   140008694:	mov    ebx,0x22
   140008699:	jmp    0x14000865d
   14000869b:	xor    eax,eax
   14000869d:	jmp    0x140008666
   14000869f:	int3   
   1400086a0:	sub    rsp,0x28
   1400086a4:	test   ecx,ecx
   1400086a6:	js     0x1400086c8
   1400086a8:	cmp    ecx,0x2
   1400086ab:	jle    0x1400086ba
   1400086ad:	cmp    ecx,0x3
   1400086b0:	jne    0x1400086c8
   1400086b2:	mov    eax,DWORD PTR [rip+0xad20]        # 0x1400133d8
   1400086b8:	jmp    0x1400086db
   1400086ba:	mov    eax,DWORD PTR [rip+0xad18]        # 0x1400133d8
   1400086c0:	mov    DWORD PTR [rip+0xad12],ecx        # 0x1400133d8
   1400086c6:	jmp    0x1400086db
   1400086c8:	call   0x140003250
   1400086cd:	mov    DWORD PTR [rax],0x16
   1400086d3:	call   0x1400031e8
   1400086d8:	or     eax,0xffffffff
   1400086db:	add    rsp,0x28
   1400086df:	ret    
   1400086e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400086e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400086ea:	push   rdi
   1400086eb:	sub    rsp,0x20
   1400086ef:	mov    rbx,rdx
   1400086f2:	mov    rdi,rcx
   1400086f5:	test   rcx,rcx
   1400086f8:	jne    0x140008704
   1400086fa:	mov    rcx,rdx
   1400086fd:	call   0x140001b18
   140008702:	jmp    0x14000876e
   140008704:	test   rdx,rdx
   140008707:	jne    0x140008710
   140008709:	call   0x140001a94
   14000870e:	jmp    0x14000876c
   140008710:	cmp    rdx,0xffffffffffffffe0
   140008714:	ja     0x140008759
   140008716:	mov    rcx,QWORD PTR [rip+0xb23b]        # 0x140013958
   14000871d:	mov    eax,0x1
   140008722:	test   rbx,rbx
   140008725:	cmove  rbx,rax
   140008729:	mov    r8,rdi
   14000872c:	xor    edx,edx
   14000872e:	mov    r9,rbx
   140008731:	call   QWORD PTR [rip+0x5ac9]        # 0x14000e200
   140008737:	mov    rsi,rax
   14000873a:	test   rax,rax
   14000873d:	jne    0x1400087ae
   14000873f:	cmp    DWORD PTR [rip+0xb8ab],eax        # 0x140013ff0
   140008745:	je     0x140008797
   140008747:	mov    rcx,rbx
   14000874a:	call   0x140003ae0
   14000874f:	test   eax,eax
   140008751:	je     0x14000877e
   140008753:	cmp    rbx,0xffffffffffffffe0
   140008757:	jbe    0x140008716
   140008759:	mov    rcx,rbx
   14000875c:	call   0x140003ae0
   140008761:	call   0x140003250
   140008766:	mov    DWORD PTR [rax],0xc
   14000876c:	xor    eax,eax
   14000876e:	mov    rbx,QWORD PTR [rsp+0x30]
   140008773:	mov    rsi,QWORD PTR [rsp+0x38]
   140008778:	add    rsp,0x20
   14000877c:	pop    rdi
   14000877d:	ret    
   14000877e:	call   0x140003250
   140008783:	mov    rbx,rax
   140008786:	call   QWORD PTR [rip+0x58e4]        # 0x14000e070
   14000878c:	mov    ecx,eax
   14000878e:	call   0x140003208
   140008793:	mov    DWORD PTR [rbx],eax
   140008795:	jmp    0x14000876c
   140008797:	call   0x140003250
   14000879c:	mov    rbx,rax
   14000879f:	call   QWORD PTR [rip+0x58cb]        # 0x14000e070
   1400087a5:	mov    ecx,eax
   1400087a7:	call   0x140003208
   1400087ac:	mov    DWORD PTR [rbx],eax
   1400087ae:	mov    rax,rsi
   1400087b1:	jmp    0x14000876e
   1400087b3:	int3   
   1400087b4:	mov    QWORD PTR [rsp+0x20],rbx
   1400087b9:	push   rbp
   1400087ba:	push   rsi
   1400087bb:	push   rdi
   1400087bc:	push   r12
   1400087be:	push   r13
   1400087c0:	push   r14
   1400087c2:	push   r15
   1400087c4:	lea    rbp,[rsp-0x1a30]
   1400087cc:	mov    eax,0x1b30
   1400087d1:	call   0x14000c9b0
   1400087d6:	sub    rsp,rax
   1400087d9:	mov    rax,QWORD PTR [rip+0x9be8]        # 0x1400123c8
   1400087e0:	xor    rax,rsp
   1400087e3:	mov    QWORD PTR [rbp+0x1a20],rax
   1400087ea:	xor    edi,edi
   1400087ec:	mov    r14d,r8d
   1400087ef:	mov    r13,rdx
   1400087f2:	and    DWORD PTR [rsp+0x44],edi
   1400087f6:	movsxd rbx,ecx
   1400087f9:	test   r8d,r8d
   1400087fc:	jne    0x140008805
   1400087fe:	xor    eax,eax
   140008800:	jmp    0x140008eea
   140008805:	test   rdx,rdx
   140008808:	jne    0x140008829
   14000880a:	call   0x140003270
   14000880f:	and    DWORD PTR [rax],edi
   140008811:	call   0x140003250
   140008816:	mov    DWORD PTR [rax],0x16
   14000881c:	call   0x1400031e8
   140008821:	or     eax,0xffffffff
   140008824:	jmp    0x140008eea
   140008829:	mov    r15,rbx
   14000882c:	mov    r12,rbx
   14000882f:	lea    rax,[rip+0xbdea]        # 0x140014620
   140008836:	sar    r12,0x5
   14000883a:	and    r15d,0x1f
   14000883e:	mov    rcx,QWORD PTR [rax+r12*8]
   140008842:	mov    QWORD PTR [rsp+0x50],r12
   140008847:	imul   r15,r15,0x58
   14000884b:	mov    sil,BYTE PTR [r15+rcx*1+0x38]
   140008850:	mov    QWORD PTR [rsp+0x60],r15
   140008855:	add    sil,sil
   140008858:	sar    sil,1
   14000885b:	cmp    sil,0x2
   14000885f:	je     0x140008867
   140008861:	cmp    sil,0x1
   140008865:	jne    0x140008870
   140008867:	mov    eax,r14d
   14000886a:	not    eax
   14000886c:	test   al,0x1
   14000886e:	je     0x14000880a
   140008870:	test   BYTE PTR [r15+rcx*1+0x8],0x20
   140008876:	je     0x140008885
   140008878:	xor    edx,edx
   14000887a:	mov    ecx,ebx
   14000887c:	lea    r8d,[rdx+0x2]
   140008880:	call   0x140009be4
   140008885:	mov    ecx,ebx
   140008887:	call   0x140009db4
   14000888c:	test   eax,eax
   14000888e:	je     0x140008b5e
   140008894:	lea    rax,[rip+0xbd85]        # 0x140014620
   14000889b:	mov    rax,QWORD PTR [rax+r12*8]
   14000889f:	test   BYTE PTR [r15+rax*1+0x8],0x80
   1400088a5:	je     0x140008b5e
   1400088ab:	call   0x140006f38
   1400088b0:	xor    ebx,ebx
   1400088b2:	lea    rdx,[rsp+0x5c]
   1400088b7:	mov    rcx,QWORD PTR [rax+0xc0]
   1400088be:	lea    rax,[rip+0xbd5b]        # 0x140014620
   1400088c5:	cmp    DWORD PTR [rcx+0x14],ebx
   1400088c8:	mov    rcx,QWORD PTR [rax+r12*8]
   1400088cc:	mov    rcx,QWORD PTR [r15+rcx*1]
   1400088d0:	sete   bl
   1400088d3:	call   QWORD PTR [rip+0x5937]        # 0x14000e210
   1400088d9:	test   eax,eax
   1400088db:	je     0x140008b5e
   1400088e1:	test   ebx,ebx
   1400088e3:	je     0x1400088ee
   1400088e5:	test   sil,sil
   1400088e8:	je     0x140008b5e
   1400088ee:	call   QWORD PTR [rip+0x5914]        # 0x14000e208
   1400088f4:	and    DWORD PTR [rsp+0x58],edi
   1400088f8:	mov    rbx,r13
   1400088fb:	mov    DWORD PTR [rsp+0x5c],eax
   1400088ff:	test   r14d,r14d
   140008902:	je     0x140008b55
   140008908:	test   sil,sil
   14000890b:	jne    0x140008a95
   140008911:	mov    cl,BYTE PTR [rbx]
   140008913:	xor    eax,eax
   140008915:	cmp    cl,0xa
   140008918:	sete   al
   14000891b:	mov    DWORD PTR [rsp+0x4c],eax
   14000891f:	lea    rax,[rip+0xbcfa]        # 0x140014620
   140008926:	mov    rdx,QWORD PTR [rax+r12*8]
   14000892a:	cmp    DWORD PTR [r15+rdx*1+0x50],0x0
   140008930:	je     0x140008952
   140008932:	mov    al,BYTE PTR [r15+rdx*1+0x4c]
   140008937:	mov    BYTE PTR [rsp+0x61],cl
   14000893b:	mov    r8d,0x2
   140008941:	mov    BYTE PTR [rsp+0x60],al
   140008945:	and    DWORD PTR [r15+rdx*1+0x50],0x0
   14000894b:	lea    rdx,[rsp+0x60]
   140008950:	jmp    0x14000899b
   140008952:	movsx  ecx,cl
   140008955:	call   0x14000adb8
   14000895a:	test   eax,eax
   14000895c:	je     0x140008992
   14000895e:	mov    rax,r14
   140008961:	sub    rax,rbx
   140008964:	add    rax,r13
   140008967:	cmp    rax,0x1
   14000896b:	jle    0x140008b1e
   140008971:	lea    rcx,[rsp+0x40]
   140008976:	mov    r8d,0x2
   14000897c:	mov    rdx,rbx
   14000897f:	call   0x14000ad68
   140008984:	cmp    eax,0xffffffff
   140008987:	je     0x140008b3f
   14000898d:	inc    rbx
   140008990:	jmp    0x1400089ae
   140008992:	mov    r8d,0x1
   140008998:	mov    rdx,rbx
   14000899b:	lea    rcx,[rsp+0x40]
   1400089a0:	call   0x14000ad68
   1400089a5:	cmp    eax,0xffffffff
   1400089a8:	je     0x140008b3f
   1400089ae:	and    QWORD PTR [rsp+0x38],0x0
   1400089b4:	and    QWORD PTR [rsp+0x30],0x0
   1400089ba:	mov    ecx,DWORD PTR [rsp+0x5c]
   1400089be:	lea    rax,[rsp+0x60]
   1400089c3:	lea    r8,[rsp+0x40]
   1400089c8:	mov    r9d,0x1
   1400089ce:	xor    edx,edx
   1400089d0:	mov    DWORD PTR [rsp+0x28],0x5
   1400089d8:	inc    rbx
   1400089db:	mov    QWORD PTR [rsp+0x20],rax
   1400089e0:	call   QWORD PTR [rip+0x57aa]        # 0x14000e190
   1400089e6:	mov    r12d,eax
   1400089e9:	test   eax,eax
   1400089eb:	je     0x140008b3f
   1400089f1:	mov    rcx,QWORD PTR [rsp+0x50]
   1400089f6:	and    QWORD PTR [rsp+0x20],0x0
   1400089fc:	lea    rax,[rip+0xbc1d]        # 0x140014620
   140008a03:	mov    rcx,QWORD PTR [rax+rcx*8]
   140008a07:	lea    r9,[rsp+0x58]
   140008a0c:	lea    rdx,[rsp+0x60]
   140008a11:	mov    rcx,QWORD PTR [r15+rcx*1]
   140008a15:	mov    r8d,r12d
   140008a18:	call   QWORD PTR [rip+0x5722]        # 0x14000e140
   140008a1e:	test   eax,eax
   140008a20:	je     0x140008b48
   140008a26:	mov    edi,ebx
   140008a28:	sub    edi,r13d
   140008a2b:	add    edi,DWORD PTR [rsp+0x44]
   140008a2f:	cmp    DWORD PTR [rsp+0x58],r12d
   140008a34:	jl     0x140008b3f
   140008a3a:	cmp    DWORD PTR [rsp+0x4c],0x0
   140008a3f:	mov    r12,QWORD PTR [rsp+0x50]
   140008a44:	je     0x140008b0f
   140008a4a:	and    QWORD PTR [rsp+0x20],0x0
   140008a50:	lea    rax,[rip+0xbbc9]        # 0x140014620
   140008a57:	mov    BYTE PTR [rsp+0x60],0xd
   140008a5c:	mov    rcx,QWORD PTR [rax+r12*8]
   140008a60:	lea    r9,[rsp+0x58]
   140008a65:	lea    rdx,[rsp+0x60]
   140008a6a:	mov    rcx,QWORD PTR [r15+rcx*1]
   140008a6e:	mov    r8d,0x1
   140008a74:	call   QWORD PTR [rip+0x56c6]        # 0x14000e140
   140008a7a:	test   eax,eax
   140008a7c:	je     0x140008b48
   140008a82:	cmp    DWORD PTR [rsp+0x58],0x1
   140008a87:	jl     0x140008b3f
   140008a8d:	inc    DWORD PTR [rsp+0x44]
   140008a91:	inc    edi
   140008a93:	jmp    0x140008b0f
   140008a95:	cmp    sil,0x1
   140008a99:	je     0x140008aa1
   140008a9b:	cmp    sil,0x2
   140008a9f:	jne    0x140008abf
   140008aa1:	movzx  eax,WORD PTR [rbx]
   140008aa4:	xor    r12d,r12d
   140008aa7:	cmp    ax,0xa
   140008aab:	mov    WORD PTR [rsp+0x40],ax
   140008ab0:	sete   r12b
   140008ab4:	add    rbx,0x2
   140008ab8:	mov    DWORD PTR [rsp+0x4c],r12d
   140008abd:	jmp    0x140008ac4
   140008abf:	mov    r12d,DWORD PTR [rsp+0x4c]
   140008ac4:	cmp    sil,0x1
   140008ac8:	je     0x140008ad0
   140008aca:	cmp    sil,0x2
   140008ace:	jne    0x140008b0a
   140008ad0:	movzx  ecx,WORD PTR [rsp+0x40]
   140008ad5:	call   0x14000c938
   140008ada:	cmp    ax,WORD PTR [rsp+0x40]
   140008adf:	jne    0x140008b48
   140008ae1:	add    edi,0x2
   140008ae4:	test   r12d,r12d
   140008ae7:	je     0x140008b0a
   140008ae9:	mov    r12d,0xd
   140008aef:	mov    ecx,r12d
   140008af2:	mov    WORD PTR [rsp+0x40],r12w
   140008af8:	call   0x14000c938
   140008afd:	cmp    ax,WORD PTR [rsp+0x40]
   140008b02:	jne    0x140008b48
   140008b04:	inc    edi
   140008b06:	inc    DWORD PTR [rsp+0x44]
   140008b0a:	mov    r12,QWORD PTR [rsp+0x50]
   140008b0f:	mov    eax,ebx
   140008b11:	sub    eax,r13d
   140008b14:	cmp    eax,r14d
   140008b17:	jae    0x140008b3f
   140008b19:	jmp    0x140008908
   140008b1e:	mov    al,BYTE PTR [rbx]
   140008b20:	lea    rdx,[rip+0xbaf9]        # 0x140014620
   140008b27:	inc    edi
   140008b29:	mov    rcx,QWORD PTR [rdx+r12*8]
   140008b2d:	mov    BYTE PTR [r15+rcx*1+0x4c],al
   140008b32:	mov    rax,QWORD PTR [rdx+r12*8]
   140008b36:	mov    DWORD PTR [r15+rax*1+0x50],0x1
   140008b3f:	mov    ebx,DWORD PTR [rsp+0x4c]
   140008b43:	jmp    0x140008e41
   140008b48:	call   QWORD PTR [rip+0x5522]        # 0x14000e070
   140008b4e:	mov    ebx,eax
   140008b50:	jmp    0x140008e41
   140008b55:	mov    ebx,DWORD PTR [rsp+0x4c]
   140008b59:	jmp    0x140008e49
   140008b5e:	lea    rax,[rip+0xbabb]        # 0x140014620
   140008b65:	mov    rcx,QWORD PTR [rax+r12*8]
   140008b69:	test   BYTE PTR [r15+rcx*1+0x8],0x80
   140008b6f:	je     0x140008e73
   140008b75:	xor    ebx,ebx
   140008b77:	mov    r12,r13
   140008b7a:	test   sil,sil
   140008b7d:	jne    0x140008c4e
   140008b83:	test   r14d,r14d
   140008b86:	je     0x140008ea9
   140008b8c:	lea    edx,[rbx+0xd]
   140008b8f:	mov    r15d,DWORD PTR [rsp+0x44]
   140008b94:	lea    rsi,[rbp+0x620]
   140008b9b:	xor    ecx,ecx
   140008b9d:	mov    eax,r12d
   140008ba0:	sub    eax,r13d
   140008ba3:	cmp    eax,r14d
   140008ba6:	jae    0x140008bcf
   140008ba8:	mov    al,BYTE PTR [r12]
   140008bac:	inc    r12
   140008baf:	cmp    al,0xa
   140008bb1:	jne    0x140008bbe
   140008bb3:	mov    BYTE PTR [rsi],dl
   140008bb5:	inc    r15d
   140008bb8:	inc    rsi
   140008bbb:	inc    rcx
   140008bbe:	inc    rcx
   140008bc1:	mov    BYTE PTR [rsi],al
   140008bc3:	inc    rsi
   140008bc6:	cmp    rcx,0x13ff
   140008bcd:	jb     0x140008b9d
   140008bcf:	and    QWORD PTR [rsp+0x20],rbx
   140008bd4:	lea    rax,[rbp+0x620]
   140008bdb:	mov    r8d,esi
   140008bde:	sub    r8d,eax
   140008be1:	mov    rax,QWORD PTR [rsp+0x50]
   140008be6:	lea    rcx,[rip+0xba33]        # 0x140014620
   140008bed:	mov    rcx,QWORD PTR [rcx+rax*8]
   140008bf1:	mov    DWORD PTR [rsp+0x44],r15d
   140008bf6:	mov    r15,QWORD PTR [rsp+0x60]
   140008bfb:	mov    rcx,QWORD PTR [r15+rcx*1]
   140008bff:	lea    r9,[rsp+0x48]
   140008c04:	lea    rdx,[rbp+0x620]
   140008c0b:	call   QWORD PTR [rip+0x552f]        # 0x14000e140
   140008c11:	test   eax,eax
   140008c13:	je     0x140008b48
   140008c19:	add    edi,DWORD PTR [rsp+0x48]
   140008c1d:	lea    rax,[rbp+0x620]
   140008c24:	sub    rsi,rax
   140008c27:	movsxd rax,DWORD PTR [rsp+0x48]
   140008c2c:	cmp    rax,rsi
   140008c2f:	jl     0x140008e41
   140008c35:	mov    eax,r12d
   140008c38:	mov    edx,0xd
   140008c3d:	sub    eax,r13d
   140008c40:	cmp    eax,r14d
   140008c43:	jb     0x140008b8f
   140008c49:	jmp    0x140008e41
   140008c4e:	cmp    sil,0x2
   140008c52:	jne    0x140008d30
   140008c58:	test   r14d,r14d
   140008c5b:	je     0x140008ea9
   140008c61:	mov    edx,0xd
   140008c66:	mov    r15d,DWORD PTR [rsp+0x44]
   140008c6b:	lea    rsi,[rbp+0x620]
   140008c72:	xor    ecx,ecx
   140008c74:	mov    eax,r12d
   140008c77:	sub    eax,r13d
   140008c7a:	cmp    eax,r14d
   140008c7d:	jae    0x140008cb1
   140008c7f:	movzx  eax,WORD PTR [r12]
   140008c84:	add    r12,0x2
   140008c88:	cmp    ax,0xa
   140008c8c:	jne    0x140008c9d
   140008c8e:	mov    WORD PTR [rsi],dx
   140008c91:	add    r15d,0x2
   140008c95:	add    rsi,0x2
   140008c99:	add    rcx,0x2
   140008c9d:	add    rcx,0x2
   140008ca1:	mov    WORD PTR [rsi],ax
   140008ca4:	add    rsi,0x2
   140008ca8:	cmp    rcx,0x13fe
   140008caf:	jb     0x140008c74
   140008cb1:	and    QWORD PTR [rsp+0x20],rbx
   140008cb6:	lea    rax,[rbp+0x620]
   140008cbd:	mov    r8d,esi
   140008cc0:	sub    r8d,eax
   140008cc3:	mov    rax,QWORD PTR [rsp+0x50]
   140008cc8:	lea    rcx,[rip+0xb951]        # 0x140014620
   140008ccf:	mov    rcx,QWORD PTR [rcx+rax*8]
   140008cd3:	mov    DWORD PTR [rsp+0x44],r15d
   140008cd8:	mov    r15,QWORD PTR [rsp+0x60]
   140008cdd:	mov    rcx,QWORD PTR [r15+rcx*1]
   140008ce1:	lea    r9,[rsp+0x48]
   140008ce6:	lea    rdx,[rbp+0x620]
   140008ced:	call   QWORD PTR [rip+0x544d]        # 0x14000e140
   140008cf3:	test   eax,eax
   140008cf5:	je     0x140008b48
   140008cfb:	add    edi,DWORD PTR [rsp+0x48]
   140008cff:	lea    rax,[rbp+0x620]
   140008d06:	sub    rsi,rax
   140008d09:	movsxd rax,DWORD PTR [rsp+0x48]
   140008d0e:	cmp    rax,rsi
   140008d11:	jl     0x140008e41
   140008d17:	mov    eax,r12d
   140008d1a:	mov    edx,0xd
   140008d1f:	sub    eax,r13d
   140008d22:	cmp    eax,r14d
   140008d25:	jb     0x140008c66
   140008d2b:	jmp    0x140008e41
   140008d30:	test   r14d,r14d
   140008d33:	je     0x140008ea9
   140008d39:	mov    r8d,0xd
   140008d3f:	lea    rcx,[rsp+0x70]
   140008d44:	xor    edx,edx
   140008d46:	mov    eax,r12d
   140008d49:	sub    eax,r13d
   140008d4c:	cmp    eax,r14d
   140008d4f:	jae    0x140008d80
   140008d51:	movzx  eax,WORD PTR [r12]
   140008d56:	add    r12,0x2
   140008d5a:	cmp    ax,0xa
   140008d5e:	jne    0x140008d6c
   140008d60:	mov    WORD PTR [rcx],r8w
   140008d64:	add    rcx,0x2
   140008d68:	add    rdx,0x2
   140008d6c:	add    rdx,0x2
   140008d70:	mov    WORD PTR [rcx],ax
   140008d73:	add    rcx,0x2
   140008d77:	cmp    rdx,0x6a8
   140008d7e:	jb     0x140008d46
   140008d80:	and    QWORD PTR [rsp+0x38],0x0
   140008d86:	and    QWORD PTR [rsp+0x30],0x0
   140008d8c:	lea    rax,[rsp+0x70]
   140008d91:	sub    ecx,eax
   140008d93:	lea    r8,[rsp+0x70]
   140008d98:	mov    DWORD PTR [rsp+0x28],0xd55
   140008da0:	mov    eax,ecx
   140008da2:	mov    ecx,0xfde9
   140008da7:	cdq    
   140008da8:	sub    eax,edx
   140008daa:	xor    edx,edx
   140008dac:	sar    eax,1
   140008dae:	mov    r9d,eax
   140008db1:	lea    rax,[rbp+0x620]
   140008db8:	mov    QWORD PTR [rsp+0x20],rax
   140008dbd:	call   QWORD PTR [rip+0x53cd]        # 0x14000e190
   140008dc3:	mov    r15d,eax
   140008dc6:	test   eax,eax
   140008dc8:	je     0x140008e69
   140008dce:	xor    esi,esi
   140008dd0:	mov    rax,QWORD PTR [rsp+0x50]
   140008dd5:	and    QWORD PTR [rsp+0x20],0x0
   140008ddb:	movsxd rcx,esi
   140008dde:	lea    rdx,[rbp+rcx*1+0x620]
   140008de6:	mov    r8d,r15d
   140008de9:	lea    rcx,[rip+0xb830]        # 0x140014620
   140008df0:	mov    rcx,QWORD PTR [rcx+rax*8]
   140008df4:	mov    rax,QWORD PTR [rsp+0x60]
   140008df9:	lea    r9,[rsp+0x48]
   140008dfe:	mov    rcx,QWORD PTR [rax+rcx*1]
   140008e02:	sub    r8d,esi
   140008e05:	call   QWORD PTR [rip+0x5335]        # 0x14000e140
   140008e0b:	test   eax,eax
   140008e0d:	je     0x140008e1a
   140008e0f:	add    esi,DWORD PTR [rsp+0x48]
   140008e13:	cmp    r15d,esi
   140008e16:	jg     0x140008dd0
   140008e18:	jmp    0x140008e22
   140008e1a:	call   QWORD PTR [rip+0x5250]        # 0x14000e070
   140008e20:	mov    ebx,eax
   140008e22:	cmp    r15d,esi
   140008e25:	jg     0x140008e3c
   140008e27:	mov    edi,r12d
   140008e2a:	mov    r8d,0xd
   140008e30:	sub    edi,r13d
   140008e33:	cmp    edi,r14d
   140008e36:	jb     0x140008d3f
   140008e3c:	mov    r15,QWORD PTR [rsp+0x60]
   140008e41:	test   edi,edi
   140008e43:	jne    0x140008ee4
   140008e49:	test   ebx,ebx
   140008e4b:	je     0x140008ea9
   140008e4d:	cmp    ebx,0x5
   140008e50:	jne    0x140008e9d
   140008e52:	call   0x140003250
   140008e57:	mov    DWORD PTR [rax],0x9
   140008e5d:	call   0x140003270
   140008e62:	mov    DWORD PTR [rax],ebx
   140008e64:	jmp    0x140008821
   140008e69:	call   QWORD PTR [rip+0x5201]        # 0x14000e070
   140008e6f:	mov    ebx,eax
   140008e71:	jmp    0x140008e3c
   140008e73:	mov    rcx,QWORD PTR [r15+rcx*1]
   140008e77:	and    QWORD PTR [rsp+0x20],rdi
   140008e7c:	lea    r9,[rsp+0x48]
   140008e81:	mov    r8d,r14d
   140008e84:	mov    rdx,r13
   140008e87:	call   QWORD PTR [rip+0x52b3]        # 0x14000e140
   140008e8d:	test   eax,eax
   140008e8f:	je     0x140008b48
   140008e95:	mov    edi,DWORD PTR [rsp+0x48]
   140008e99:	xor    ebx,ebx
   140008e9b:	jmp    0x140008e41
   140008e9d:	mov    ecx,ebx
   140008e9f:	call   0x140003290
   140008ea4:	jmp    0x140008821
   140008ea9:	mov    rax,QWORD PTR [rsp+0x50]
   140008eae:	lea    rcx,[rip+0xb76b]        # 0x140014620
   140008eb5:	mov    rax,QWORD PTR [rcx+rax*8]
   140008eb9:	test   BYTE PTR [r15+rax*1+0x8],0x40
   140008ebf:	je     0x140008ecc
   140008ec1:	cmp    BYTE PTR [r13+0x0],0x1a
   140008ec6:	je     0x1400087fe
   140008ecc:	call   0x140003250
   140008ed1:	mov    DWORD PTR [rax],0x1c
   140008ed7:	call   0x140003270
   140008edc:	and    DWORD PTR [rax],0x0
   140008edf:	jmp    0x140008821
   140008ee4:	sub    edi,DWORD PTR [rsp+0x44]
   140008ee8:	mov    eax,edi
   140008eea:	mov    rcx,QWORD PTR [rbp+0x1a20]
   140008ef1:	xor    rcx,rsp
   140008ef4:	call   0x140001920
   140008ef9:	mov    rbx,QWORD PTR [rsp+0x1b88]
   140008f01:	add    rsp,0x1b30
   140008f08:	pop    r15
   140008f0a:	pop    r14
   140008f0c:	pop    r13
   140008f0e:	pop    r12
   140008f10:	pop    rdi
   140008f11:	pop    rsi
   140008f12:	pop    rbp
   140008f13:	ret    
   140008f14:	mov    QWORD PTR [rsp+0x10],rbx
   140008f19:	mov    DWORD PTR [rsp+0x8],ecx
   140008f1d:	push   rsi
   140008f1e:	push   rdi
   140008f1f:	push   r12
   140008f21:	push   r13
   140008f23:	push   r14
   140008f25:	sub    rsp,0x20
   140008f29:	mov    esi,r8d
   140008f2c:	mov    r12,rdx
   140008f2f:	movsxd rdi,ecx
   140008f32:	cmp    edi,0xfffffffe
   140008f35:	jne    0x140008f4f
   140008f37:	call   0x140003270
   140008f3c:	and    DWORD PTR [rax],0x0
   140008f3f:	call   0x140003250
   140008f44:	mov    DWORD PTR [rax],0x9
   140008f4a:	jmp    0x140008fde
   140008f4f:	test   ecx,ecx
   140008f51:	js     0x140008fc6
   140008f53:	cmp    edi,DWORD PTR [rip+0xb6a7]        # 0x140014600
   140008f59:	jae    0x140008fc6
   140008f5b:	mov    rbx,rdi
   140008f5e:	mov    r13,rdi
   140008f61:	sar    r13,0x5
   140008f65:	lea    r14,[rip+0xb6b4]        # 0x140014620
   140008f6c:	and    ebx,0x1f
   140008f6f:	imul   rbx,rbx,0x58
   140008f73:	mov    rax,QWORD PTR [r14+r13*8]
   140008f77:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140008f7c:	and    ecx,0x1
   140008f7f:	je     0x140008fc6
   140008f81:	mov    ecx,edi
   140008f83:	call   0x14000bc54
   140008f88:	nop
   140008f89:	mov    rax,QWORD PTR [r14+r13*8]
   140008f8d:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140008f92:	je     0x140008fa5
   140008f94:	mov    r8d,esi
   140008f97:	mov    rdx,r12
   140008f9a:	mov    ecx,edi
   140008f9c:	call   0x1400087b4
   140008fa1:	mov    ebx,eax
   140008fa3:	jmp    0x140008fbb
   140008fa5:	call   0x140003250
   140008faa:	mov    DWORD PTR [rax],0x9
   140008fb0:	call   0x140003270
   140008fb5:	and    DWORD PTR [rax],0x0
   140008fb8:	or     ebx,0xffffffff
   140008fbb:	mov    ecx,edi
   140008fbd:	call   0x14000bcfc
   140008fc2:	mov    eax,ebx
   140008fc4:	jmp    0x140008fe1
   140008fc6:	call   0x140003270
   140008fcb:	and    DWORD PTR [rax],0x0
   140008fce:	call   0x140003250
   140008fd3:	mov    DWORD PTR [rax],0x9
   140008fd9:	call   0x1400031e8
   140008fde:	or     eax,0xffffffff
   140008fe1:	mov    rbx,QWORD PTR [rsp+0x58]
   140008fe6:	add    rsp,0x20
   140008fea:	pop    r14
   140008fec:	pop    r13
   140008fee:	pop    r12
   140008ff0:	pop    rdi
   140008ff1:	pop    rsi
   140008ff2:	ret    
   140008ff3:	int3   
   140008ff4:	mov    QWORD PTR [rsp+0x18],rbx
   140008ff9:	mov    DWORD PTR [rsp+0x8],ecx
   140008ffd:	push   rsi
   140008ffe:	push   rdi
   140008fff:	push   r12
   140009001:	sub    rsp,0x20
   140009005:	movsxd rdi,ecx
   140009008:	cmp    edi,0xfffffffe
   14000900b:	jne    0x14000901d
   14000900d:	call   0x140003250
   140009012:	mov    DWORD PTR [rax],0x9
   140009018:	jmp    0x1400090ba
   14000901d:	test   ecx,ecx
   14000901f:	js     0x1400090aa
   140009025:	cmp    edi,DWORD PTR [rip+0xb5d5]        # 0x140014600
   14000902b:	jae    0x1400090aa
   14000902d:	mov    rbx,rdi
   140009030:	mov    rsi,rdi
   140009033:	sar    rsi,0x5
   140009037:	lea    r12,[rip+0xb5e2]        # 0x140014620
   14000903e:	and    ebx,0x1f
   140009041:	imul   rbx,rbx,0x58
   140009045:	mov    rax,QWORD PTR [r12+rsi*8]
   140009049:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   14000904e:	and    ecx,0x1
   140009051:	je     0x1400090aa
   140009053:	mov    ecx,edi
   140009055:	call   0x14000bc54
   14000905a:	nop
   14000905b:	mov    rax,QWORD PTR [r12+rsi*8]
   14000905f:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140009064:	je     0x140009091
   140009066:	mov    ecx,edi
   140009068:	call   0x14000bbe0
   14000906d:	mov    rcx,rax
   140009070:	call   QWORD PTR [rip+0x51a2]        # 0x14000e218
   140009076:	test   eax,eax
   140009078:	jne    0x140009084
   14000907a:	call   QWORD PTR [rip+0x4ff0]        # 0x14000e070
   140009080:	mov    ebx,eax
   140009082:	jmp    0x140009086
   140009084:	xor    ebx,ebx
   140009086:	test   ebx,ebx
   140009088:	je     0x14000909f
   14000908a:	call   0x140003270
   14000908f:	mov    DWORD PTR [rax],ebx
   140009091:	call   0x140003250
   140009096:	mov    DWORD PTR [rax],0x9
   14000909c:	or     ebx,0xffffffff
   14000909f:	mov    ecx,edi
   1400090a1:	call   0x14000bcfc
   1400090a6:	mov    eax,ebx
   1400090a8:	jmp    0x1400090bd
   1400090aa:	call   0x140003250
   1400090af:	mov    DWORD PTR [rax],0x9
   1400090b5:	call   0x1400031e8
   1400090ba:	or     eax,0xffffffff
   1400090bd:	mov    rbx,QWORD PTR [rsp+0x50]
   1400090c2:	add    rsp,0x20
   1400090c6:	pop    r12
   1400090c8:	pop    rdi
   1400090c9:	pop    rsi
   1400090ca:	ret    
   1400090cb:	int3   
   1400090cc:	rex push rbx
   1400090ce:	sub    rsp,0x20
   1400090d2:	test   BYTE PTR [rdx+0x18],0x40
   1400090d6:	mov    rbx,r8
   1400090d9:	je     0x1400090e7
   1400090db:	cmp    QWORD PTR [rdx+0x10],0x0
   1400090e0:	jne    0x1400090e7
   1400090e2:	inc    DWORD PTR [r8]
   1400090e5:	jmp    0x14000910c
   1400090e7:	dec    DWORD PTR [rdx+0x8]
   1400090ea:	js     0x1400090f9
   1400090ec:	mov    rax,QWORD PTR [rdx]
   1400090ef:	mov    BYTE PTR [rax],cl
   1400090f1:	inc    QWORD PTR [rdx]
   1400090f4:	movzx  eax,cl
   1400090f7:	jmp    0x140009101
   1400090f9:	movsx  ecx,cl
   1400090fc:	call   0x140004680
   140009101:	cmp    eax,0xffffffff
   140009104:	jne    0x14000910a
   140009106:	or     DWORD PTR [rbx],eax
   140009108:	jmp    0x14000910c
   14000910a:	inc    DWORD PTR [rbx]
   14000910c:	add    rsp,0x20
   140009110:	pop    rbx
   140009111:	ret    
   140009112:	int3   
   140009113:	int3   
   140009114:	mov    QWORD PTR [rsp+0x18],rbx
   140009119:	push   rbp
   14000911a:	push   rsi
   14000911b:	push   rdi
   14000911c:	push   r12
   14000911e:	push   r13
   140009120:	push   r14
   140009122:	push   r15
   140009124:	lea    rbp,[rsp-0x1d0]
   14000912c:	sub    rsp,0x2d0
   140009133:	mov    rax,QWORD PTR [rip+0x928e]        # 0x1400123c8
   14000913a:	xor    rax,rsp
   14000913d:	mov    QWORD PTR [rbp+0x1c8],rax
   140009144:	xor    eax,eax
   140009146:	mov    rbx,rcx
   140009149:	mov    QWORD PTR [rsp+0x70],rcx
   14000914e:	mov    QWORD PTR [rsp+0x68],rdx
   140009153:	lea    rcx,[rbp-0x80]
   140009157:	mov    rdx,r8
   14000915a:	mov    r15,r9
   14000915d:	mov    DWORD PTR [rsp+0x64],eax
   140009161:	mov    r13d,eax
   140009164:	mov    DWORD PTR [rsp+0x58],eax
   140009168:	mov    edi,eax
   14000916a:	mov    DWORD PTR [rsp+0x44],eax
   14000916e:	mov    DWORD PTR [rsp+0x4c],eax
   140009172:	mov    DWORD PTR [rsp+0x5c],eax
   140009176:	mov    DWORD PTR [rsp+0x54],eax
   14000917a:	call   0x140004810
   14000917f:	call   0x140003250
   140009184:	xor    r10d,r10d
   140009187:	mov    QWORD PTR [rbp-0x60],rax
   14000918b:	test   rbx,rbx
   14000918e:	jne    0x1400091bc
   140009190:	call   0x140003250
   140009195:	mov    DWORD PTR [rax],0x16
   14000919b:	call   0x1400031e8
   1400091a0:	xor    r11d,r11d
   1400091a3:	cmp    BYTE PTR [rbp-0x68],r11b
   1400091a7:	je     0x1400091b4
   1400091a9:	mov    rax,QWORD PTR [rbp-0x70]
   1400091ad:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400091b4:	or     eax,0xffffffff
   1400091b7:	jmp    0x140009997
   1400091bc:	or     r14d,0xffffffff
   1400091c0:	test   BYTE PTR [rbx+0x18],0x40
   1400091c4:	lea    r9,[rip+0xffffffffffff6e35]        # 0x140000000
   1400091cb:	jne    0x140009276
   1400091d1:	mov    rcx,rbx
   1400091d4:	call   0x1400055bc
   1400091d9:	lea    rdx,[rip+0x9370]        # 0x140012550
   1400091e0:	cmp    eax,r14d
   1400091e3:	je     0x14000920d
   1400091e5:	cmp    eax,0xfffffffe
   1400091e8:	je     0x14000920d
   1400091ea:	movsxd r8,eax
   1400091ed:	lea    r9,[rip+0xffffffffffff6e0c]        # 0x140000000
   1400091f4:	mov    rcx,r8
   1400091f7:	and    r8d,0x1f
   1400091fb:	sar    rcx,0x5
   1400091ff:	imul   r8,r8,0x58
   140009203:	add    r8,QWORD PTR [r9+rcx*8+0x14620]
   14000920b:	jmp    0x140009217
   14000920d:	mov    r8,rdx
   140009210:	lea    r9,[rip+0xffffffffffff6de9]        # 0x140000000
   140009217:	test   BYTE PTR [r8+0x38],0x7f
   14000921c:	jne    0x140009247
   14000921e:	cmp    eax,r14d
   140009221:	je     0x140009241
   140009223:	cmp    eax,0xfffffffe
   140009226:	je     0x140009241
   140009228:	movsxd rdx,eax
   14000922b:	mov    rax,rdx
   14000922e:	and    edx,0x1f
   140009231:	sar    rax,0x5
   140009235:	imul   rdx,rdx,0x58
   140009239:	add    rdx,QWORD PTR [r9+rax*8+0x14620]
   140009241:	test   BYTE PTR [rdx+0x38],0x80
   140009245:	je     0x140009273
   140009247:	call   0x140003250
   14000924c:	mov    DWORD PTR [rax],0x16
   140009252:	call   0x1400031e8
   140009257:	xor    r11d,r11d
   14000925a:	cmp    BYTE PTR [rbp-0x68],r11b
   14000925e:	je     0x14000926b
   140009260:	mov    rax,QWORD PTR [rbp-0x70]
   140009264:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000926b:	mov    eax,r14d
   14000926e:	jmp    0x140009997
   140009273:	xor    r10d,r10d
   140009276:	mov    rdx,QWORD PTR [rsp+0x68]
   14000927b:	test   rdx,rdx
   14000927e:	je     0x140009247
   140009280:	mov    r12b,BYTE PTR [rdx]
   140009283:	mov    esi,r10d
   140009286:	mov    DWORD PTR [rsp+0x40],r10d
   14000928b:	mov    DWORD PTR [rsp+0x48],r10d
   140009290:	mov    r8d,r10d
   140009293:	mov    QWORD PTR [rbp-0x50],r10
   140009297:	test   r12b,r12b
   14000929a:	je     0x140009984
   1400092a0:	mov    rbx,QWORD PTR [rbp-0x48]
   1400092a4:	mov    r11d,0x200
   1400092aa:	inc    rdx
   1400092ad:	mov    QWORD PTR [rsp+0x68],rdx
   1400092b2:	test   esi,esi
   1400092b4:	js     0x140009975
   1400092ba:	lea    eax,[r12-0x20]
   1400092bf:	cmp    al,0x58
   1400092c1:	ja     0x1400092d5
   1400092c3:	movsx  rax,r12b
   1400092c7:	movzx  ecx,BYTE PTR [rax+r9*1+0xf850]
   1400092d0:	and    ecx,0xf
   1400092d3:	jmp    0x1400092d8
   1400092d5:	mov    ecx,r10d
   1400092d8:	movsxd rax,ecx
   1400092db:	lea    rcx,[rax+rax*8]
   1400092df:	movsxd rax,r8d
   1400092e2:	add    rcx,rax
   1400092e5:	movzx  r8d,BYTE PTR [rcx+r9*1+0xf870]
   1400092ee:	shr    r8d,0x4
   1400092f2:	mov    DWORD PTR [rsp+0x60],r8d
   1400092f7:	cmp    r8d,0x8
   1400092fb:	je     0x140009247
   140009301:	mov    ecx,r8d
   140009304:	test   r8d,r8d
   140009307:	je     0x140009a70
   14000930d:	dec    ecx
   14000930f:	je     0x140009ba1
   140009315:	dec    ecx
   140009317:	je     0x140009b51
   14000931d:	dec    ecx
   14000931f:	je     0x140009b18
   140009325:	dec    ecx
   140009327:	je     0x140009b0b
   14000932d:	dec    ecx
   14000932f:	je     0x140009ad1
   140009335:	dec    ecx
   140009337:	je     0x1400099c1
   14000933d:	dec    ecx
   14000933f:	jne    0x140009969
   140009345:	movsx  eax,r12b
   140009349:	cmp    eax,0x64
   14000934c:	jg     0x1400094c5
   140009352:	je     0x1400095c6
   140009358:	cmp    eax,0x41
   14000935b:	je     0x140009499
   140009361:	cmp    eax,0x43
   140009364:	je     0x14000943f
   14000936a:	cmp    eax,0x45
   14000936d:	je     0x140009499
   140009373:	cmp    eax,0x47
   140009376:	je     0x140009499
   14000937c:	cmp    eax,0x53
   14000937f:	je     0x1400093f5
   140009381:	cmp    eax,0x58
   140009384:	je     0x140009560
   14000938a:	cmp    eax,0x5a
   14000938d:	je     0x1400093a6
   14000938f:	cmp    eax,0x61
   140009392:	je     0x1400094a5
   140009398:	cmp    eax,0x63
   14000939b:	je     0x14000944d
   1400093a1:	jmp    0x1400097d1
   1400093a6:	mov    rax,QWORD PTR [r15]
   1400093a9:	add    r15,0x8
   1400093ad:	test   rax,rax
   1400093b0:	je     0x1400093e1
   1400093b2:	mov    rbx,QWORD PTR [rax+0x8]
   1400093b6:	test   rbx,rbx
   1400093b9:	je     0x1400093e1
   1400093bb:	movsx  eax,WORD PTR [rax]
   1400093be:	bt     r13d,0xb
   1400093c3:	jae    0x1400093d7
   1400093c5:	cdq    
   1400093c6:	mov    DWORD PTR [rsp+0x54],0x1
   1400093ce:	sub    eax,edx
   1400093d0:	sar    eax,1
   1400093d2:	jmp    0x1400097cd
   1400093d7:	mov    DWORD PTR [rsp+0x54],r10d
   1400093dc:	jmp    0x1400097cd
   1400093e1:	mov    rbx,QWORD PTR [rip+0x9508]        # 0x1400128f0
   1400093e8:	mov    rcx,rbx
   1400093eb:	call   0x140008210
   1400093f0:	jmp    0x1400097ca
   1400093f5:	test   r13d,0x830
   1400093fc:	jne    0x140009403
   1400093fe:	bts    r13d,0xb
   140009403:	mov    rbx,QWORD PTR [r15]
   140009406:	cmp    edi,r14d
   140009409:	mov    eax,edi
   14000940b:	mov    ecx,0x7fffffff
   140009410:	cmove  eax,ecx
   140009413:	add    r15,0x8
   140009417:	test   r13d,0x810
   14000941e:	je     0x14000952d
   140009424:	test   rbx,rbx
   140009427:	mov    DWORD PTR [rsp+0x54],0x1
   14000942f:	cmove  rbx,QWORD PTR [rip+0x94c1]        # 0x1400128f8
   140009437:	mov    rcx,rbx
   14000943a:	jmp    0x140009521
   14000943f:	test   r13d,0x830
   140009446:	jne    0x14000944d
   140009448:	bts    r13d,0xb
   14000944d:	add    r15,0x8
   140009451:	test   r13d,0x810
   140009458:	je     0x140009481
   14000945a:	movzx  r9d,WORD PTR [r15-0x8]
   14000945f:	lea    rdx,[rbp-0x40]
   140009463:	lea    rcx,[rsp+0x48]
   140009468:	mov    r8,r11
   14000946b:	call   0x14000c438
   140009470:	xor    r10d,r10d
   140009473:	test   eax,eax
   140009475:	je     0x140009490
   140009477:	mov    DWORD PTR [rsp+0x5c],0x1
   14000947f:	jmp    0x140009490
   140009481:	mov    al,BYTE PTR [r15-0x8]
   140009485:	mov    DWORD PTR [rsp+0x48],0x1
   14000948d:	mov    BYTE PTR [rbp-0x40],al
   140009490:	lea    rbx,[rbp-0x40]
   140009494:	jmp    0x1400097d1
   140009499:	mov    DWORD PTR [rsp+0x78],0x1
   1400094a1:	add    r12b,0x20
   1400094a5:	or     r13d,0x40
   1400094a9:	lea    rbx,[rbp-0x40]
   1400094ad:	mov    esi,r11d
   1400094b0:	test   edi,edi
   1400094b2:	jns    0x1400096d6
   1400094b8:	mov    DWORD PTR [rsp+0x44],0x6
   1400094c0:	jmp    0x140009721
   1400094c5:	cmp    eax,0x65
   1400094c8:	jl     0x1400097d1
   1400094ce:	cmp    eax,0x67
   1400094d1:	jle    0x1400094a5
   1400094d3:	cmp    eax,0x69
   1400094d6:	je     0x1400095c6
   1400094dc:	cmp    eax,0x6e
   1400094df:	je     0x140009595
   1400094e5:	cmp    eax,0x6f
   1400094e8:	je     0x140009585
   1400094ee:	cmp    eax,0x70
   1400094f1:	je     0x140009556
   1400094f3:	cmp    eax,0x73
   1400094f6:	je     0x140009403
   1400094fc:	cmp    eax,0x75
   1400094ff:	je     0x1400095ca
   140009505:	cmp    eax,0x78
   140009508:	jne    0x1400097d1
   14000950e:	mov    eax,0x27
   140009513:	jmp    0x140009565
   140009515:	dec    eax
   140009517:	cmp    WORD PTR [rcx],r10w
   14000951b:	je     0x140009525
   14000951d:	add    rcx,0x2
   140009521:	test   eax,eax
   140009523:	jne    0x140009515
   140009525:	sub    rcx,rbx
   140009528:	sar    rcx,1
   14000952b:	jmp    0x14000954d
   14000952d:	test   rbx,rbx
   140009530:	cmove  rbx,QWORD PTR [rip+0x93b8]        # 0x1400128f0
   140009538:	mov    rcx,rbx
   14000953b:	jmp    0x140009547
   14000953d:	dec    eax
   14000953f:	cmp    BYTE PTR [rcx],r10b
   140009542:	je     0x14000954b
   140009544:	inc    rcx
   140009547:	test   eax,eax
   140009549:	jne    0x14000953d
   14000954b:	sub    ecx,ebx
   14000954d:	mov    DWORD PTR [rsp+0x48],ecx
   140009551:	jmp    0x1400097d1
   140009556:	mov    edi,0x10
   14000955b:	bts    r13d,0xf
   140009560:	mov    eax,0x7
   140009565:	mov    DWORD PTR [rsp+0x64],eax
   140009569:	mov    r9d,0x10
   14000956f:	test   r13b,r13b
   140009572:	jns    0x1400095d0
   140009574:	add    al,0x51
   140009576:	mov    BYTE PTR [rsp+0x50],0x30
   14000957b:	lea    edx,[r9-0xe]
   14000957f:	mov    BYTE PTR [rsp+0x51],al
   140009583:	jmp    0x1400095d4
   140009585:	mov    r9d,0x8
   14000958b:	test   r13b,r13b
   14000958e:	jns    0x1400095d0
   140009590:	or     r13d,r11d
   140009593:	jmp    0x1400095d0
   140009595:	mov    rdi,QWORD PTR [r15]
   140009598:	add    r15,0x8
   14000959c:	call   0x14000abd8
   1400095a1:	xor    r10d,r10d
   1400095a4:	test   eax,eax
   1400095a6:	je     0x140009247
   1400095ac:	test   r13b,0x20
   1400095b0:	je     0x1400095b7
   1400095b2:	mov    WORD PTR [rdi],si
   1400095b5:	jmp    0x1400095b9
   1400095b7:	mov    DWORD PTR [rdi],esi
   1400095b9:	mov    DWORD PTR [rsp+0x5c],0x1
   1400095c1:	jmp    0x140009936
   1400095c6:	or     r13d,0x40
   1400095ca:	mov    r9d,0xa
   1400095d0:	mov    edx,DWORD PTR [rsp+0x4c]
   1400095d4:	mov    eax,0x8000
   1400095d9:	test   eax,r13d
   1400095dc:	jne    0x1400095e5
   1400095de:	bt     r13d,0xc
   1400095e3:	jae    0x1400095ee
   1400095e5:	mov    r8,QWORD PTR [r15]
   1400095e8:	add    r15,0x8
   1400095ec:	jmp    0x14000961c
   1400095ee:	add    r15,0x8
   1400095f2:	test   r13b,0x20
   1400095f6:	je     0x14000960c
   1400095f8:	test   r13b,0x40
   1400095fc:	je     0x140009605
   1400095fe:	movsx  r8,WORD PTR [r15-0x8]
   140009603:	jmp    0x14000961c
   140009605:	movzx  r8d,WORD PTR [r15-0x8]
   14000960a:	jmp    0x14000961c
   14000960c:	test   r13b,0x40
   140009610:	je     0x140009618
   140009612:	movsxd r8,DWORD PTR [r15-0x8]
   140009616:	jmp    0x14000961c
   140009618:	mov    r8d,DWORD PTR [r15-0x8]
   14000961c:	test   r13b,0x40
   140009620:	je     0x14000962f
   140009622:	test   r8,r8
   140009625:	jns    0x14000962f
   140009627:	neg    r8
   14000962a:	bts    r13d,0x8
   14000962f:	test   eax,r13d
   140009632:	jne    0x14000963e
   140009634:	bt     r13d,0xc
   140009639:	jb     0x14000963e
   14000963b:	mov    r8d,r8d
   14000963e:	test   edi,edi
   140009640:	jns    0x140009649
   140009642:	mov    edi,0x1
   140009647:	jmp    0x140009654
   140009649:	and    r13d,0xfffffff7
   14000964d:	cmp    edi,r11d
   140009650:	cmovg  edi,r11d
   140009654:	mov    esi,DWORD PTR [rsp+0x64]
   140009658:	mov    rax,r8
   14000965b:	lea    rbx,[rbp+0x1bf]
   140009662:	neg    rax
   140009665:	sbb    ecx,ecx
   140009667:	and    ecx,edx
   140009669:	mov    DWORD PTR [rsp+0x4c],ecx
   14000966d:	mov    ecx,edi
   14000966f:	dec    edi
   140009671:	test   ecx,ecx
   140009673:	jg     0x14000967a
   140009675:	test   r8,r8
   140009678:	je     0x140009699
   14000967a:	xor    edx,edx
   14000967c:	mov    rax,r8
   14000967f:	movsxd rcx,r9d
   140009682:	div    rcx
   140009685:	mov    r8,rax
   140009688:	lea    eax,[rdx+0x30]
   14000968b:	cmp    eax,0x39
   14000968e:	jle    0x140009692
   140009690:	add    eax,esi
   140009692:	mov    BYTE PTR [rbx],al
   140009694:	dec    rbx
   140009697:	jmp    0x14000966d
   140009699:	mov    esi,DWORD PTR [rsp+0x40]
   14000969d:	lea    rax,[rbp+0x1bf]
   1400096a4:	mov    DWORD PTR [rsp+0x44],edi
   1400096a8:	sub    eax,ebx
   1400096aa:	inc    rbx
   1400096ad:	mov    DWORD PTR [rsp+0x48],eax
   1400096b1:	test   r11d,r13d
   1400096b4:	je     0x1400097d1
   1400096ba:	test   eax,eax
   1400096bc:	je     0x1400096c7
   1400096be:	cmp    BYTE PTR [rbx],0x30
   1400096c1:	je     0x1400097d1
   1400096c7:	dec    rbx
   1400096ca:	inc    DWORD PTR [rsp+0x48]
   1400096ce:	mov    BYTE PTR [rbx],0x30
   1400096d1:	jmp    0x1400097d1
   1400096d6:	jne    0x1400096e8
   1400096d8:	cmp    r12b,0x67
   1400096dc:	jne    0x140009721
   1400096de:	mov    DWORD PTR [rsp+0x44],0x1
   1400096e6:	jmp    0x140009721
   1400096e8:	cmp    edi,r11d
   1400096eb:	cmovg  edi,r11d
   1400096ef:	mov    DWORD PTR [rsp+0x44],edi
   1400096f3:	cmp    edi,0xa3
   1400096f9:	jle    0x140009721
   1400096fb:	add    edi,0x15d
   140009701:	movsxd rcx,edi
   140009704:	call   0x140003de8
   140009709:	mov    QWORD PTR [rbp-0x50],rax
   14000970d:	test   rax,rax
   140009710:	je     0x140009719
   140009712:	mov    rbx,rax
   140009715:	mov    esi,edi
   140009717:	jmp    0x140009721
   140009719:	mov    DWORD PTR [rsp+0x44],0xa3
   140009721:	mov    rax,QWORD PTR [r15]
   140009724:	mov    rcx,QWORD PTR [rip+0x9225]        # 0x140012950
   14000972b:	add    r15,0x8
   14000972f:	movsx  edi,r12b
   140009733:	movsxd rsi,esi
   140009736:	mov    QWORD PTR [rbp-0x48],rax
   14000973a:	call   QWORD PTR [rip+0x49d0]        # 0x14000e110
   140009740:	lea    rcx,[rbp-0x80]
   140009744:	mov    r9d,edi
   140009747:	mov    QWORD PTR [rsp+0x30],rcx
   14000974c:	mov    ecx,DWORD PTR [rsp+0x78]
   140009750:	mov    r8,rsi
   140009753:	mov    DWORD PTR [rsp+0x28],ecx
   140009757:	mov    ecx,DWORD PTR [rsp+0x44]
   14000975b:	mov    rdx,rbx
   14000975e:	mov    DWORD PTR [rsp+0x20],ecx
   140009762:	lea    rcx,[rbp-0x48]
   140009766:	call   rax
   140009768:	mov    edi,r13d
   14000976b:	and    edi,0x80
   140009771:	je     0x140009791
   140009773:	xor    eax,eax
   140009775:	cmp    DWORD PTR [rsp+0x44],eax
   140009779:	jne    0x140009791
   14000977b:	mov    rcx,QWORD PTR [rip+0x91e6]        # 0x140012968
   140009782:	call   QWORD PTR [rip+0x4988]        # 0x14000e110
   140009788:	lea    rdx,[rbp-0x80]
   14000978c:	mov    rcx,rbx
   14000978f:	call   rax
   140009791:	cmp    r12b,0x67
   140009795:	jne    0x1400097b1
   140009797:	test   edi,edi
   140009799:	jne    0x1400097b1
   14000979b:	mov    rcx,QWORD PTR [rip+0x91be]        # 0x140012960
   1400097a2:	call   QWORD PTR [rip+0x4968]        # 0x14000e110
   1400097a8:	lea    rdx,[rbp-0x80]
   1400097ac:	mov    rcx,rbx
   1400097af:	call   rax
   1400097b1:	cmp    BYTE PTR [rbx],0x2d
   1400097b4:	jne    0x1400097be
   1400097b6:	bts    r13d,0x8
   1400097bb:	inc    rbx
   1400097be:	mov    rcx,rbx
   1400097c1:	call   0x140008210
   1400097c6:	mov    esi,DWORD PTR [rsp+0x40]
   1400097ca:	xor    r10d,r10d
   1400097cd:	mov    DWORD PTR [rsp+0x48],eax
   1400097d1:	cmp    DWORD PTR [rsp+0x5c],r10d
   1400097d6:	jne    0x140009936
   1400097dc:	test   r13b,0x40
   1400097e0:	je     0x140009813
   1400097e2:	bt     r13d,0x8
   1400097e7:	jae    0x1400097f0
   1400097e9:	mov    BYTE PTR [rsp+0x50],0x2d
   1400097ee:	jmp    0x1400097fb
   1400097f0:	test   r13b,0x1
   1400097f4:	je     0x140009806
   1400097f6:	mov    BYTE PTR [rsp+0x50],0x2b
   1400097fb:	mov    edi,0x1
   140009800:	mov    DWORD PTR [rsp+0x4c],edi
   140009804:	jmp    0x140009817
   140009806:	test   r13b,0x2
   14000980a:	je     0x140009813
   14000980c:	mov    BYTE PTR [rsp+0x50],0x20
   140009811:	jmp    0x1400097fb
   140009813:	mov    edi,DWORD PTR [rsp+0x4c]
   140009817:	mov    r12d,DWORD PTR [rsp+0x58]
   14000981c:	mov    rsi,QWORD PTR [rsp+0x70]
   140009821:	sub    r12d,DWORD PTR [rsp+0x48]
   140009826:	sub    r12d,edi
   140009829:	test   r13b,0xc
   14000982d:	jne    0x140009841
   14000982f:	lea    r9,[rsp+0x40]
   140009834:	mov    r8,rsi
   140009837:	mov    edx,r12d
   14000983a:	mov    cl,0x20
   14000983c:	call   0x140005778
   140009841:	mov    rax,QWORD PTR [rbp-0x60]
   140009845:	lea    r9,[rsp+0x40]
   14000984a:	lea    rcx,[rsp+0x50]
   14000984f:	mov    r8,rsi
   140009852:	mov    edx,edi
   140009854:	mov    QWORD PTR [rsp+0x20],rax
   140009859:	call   0x1400057cc
   14000985e:	test   r13b,0x8
   140009862:	je     0x14000987c
   140009864:	test   r13b,0x4
   140009868:	jne    0x14000987c
   14000986a:	lea    r9,[rsp+0x40]
   14000986f:	mov    r8,rsi
   140009872:	mov    edx,r12d
   140009875:	mov    cl,0x30
   140009877:	call   0x140005778
   14000987c:	mov    edi,DWORD PTR [rsp+0x48]
   140009880:	xor    eax,eax
   140009882:	cmp    DWORD PTR [rsp+0x54],eax
   140009886:	je     0x1400098ef
   140009888:	test   edi,edi
   14000988a:	jle    0x1400098ef
   14000988c:	mov    rsi,rbx
   14000988f:	movzx  r9d,WORD PTR [rsi]
   140009893:	lea    rdx,[rbp+0x1c0]
   14000989a:	lea    rcx,[rbp-0x58]
   14000989e:	mov    r8d,0x6
   1400098a4:	dec    edi
   1400098a6:	add    rsi,0x2
   1400098aa:	call   0x14000c438
   1400098af:	xor    r10d,r10d
   1400098b2:	test   eax,eax
   1400098b4:	jne    0x1400098e5
   1400098b6:	mov    edx,DWORD PTR [rbp-0x58]
   1400098b9:	test   edx,edx
   1400098bb:	je     0x1400098e5
   1400098bd:	mov    rax,QWORD PTR [rbp-0x60]
   1400098c1:	mov    r8,QWORD PTR [rsp+0x70]
   1400098c6:	lea    r9,[rsp+0x40]
   1400098cb:	lea    rcx,[rbp+0x1c0]
   1400098d2:	mov    QWORD PTR [rsp+0x20],rax
   1400098d7:	call   0x1400057cc
   1400098dc:	xor    r10d,r10d
   1400098df:	test   edi,edi
   1400098e1:	jne    0x14000988f
   1400098e3:	jmp    0x14000990d
   1400098e5:	mov    esi,r14d
   1400098e8:	mov    DWORD PTR [rsp+0x40],r14d
   1400098ed:	jmp    0x140009911
   1400098ef:	mov    rax,QWORD PTR [rbp-0x60]
   1400098f3:	lea    r9,[rsp+0x40]
   1400098f8:	mov    r8,rsi
   1400098fb:	mov    edx,edi
   1400098fd:	mov    rcx,rbx
   140009900:	mov    QWORD PTR [rsp+0x20],rax
   140009905:	call   0x1400057cc
   14000990a:	xor    r10d,r10d
   14000990d:	mov    esi,DWORD PTR [rsp+0x40]
   140009911:	test   esi,esi
   140009913:	js     0x140009936
   140009915:	test   r13b,0x4
   140009919:	je     0x140009936
   14000991b:	mov    r8,QWORD PTR [rsp+0x70]
   140009920:	lea    r9,[rsp+0x40]
   140009925:	mov    edx,r12d
   140009928:	mov    cl,0x20
   14000992a:	call   0x140005778
   14000992f:	mov    esi,DWORD PTR [rsp+0x40]
   140009933:	xor    r10d,r10d
   140009936:	mov    rax,QWORD PTR [rbp-0x50]
   14000993a:	test   rax,rax
   14000993d:	je     0x14000994e
   14000993f:	mov    rcx,rax
   140009942:	call   0x140001a94
   140009947:	xor    r10d,r10d
   14000994a:	mov    QWORD PTR [rbp-0x50],r10
   14000994e:	mov    edi,DWORD PTR [rsp+0x44]
   140009952:	mov    rdx,QWORD PTR [rsp+0x68]
   140009957:	mov    r8d,DWORD PTR [rsp+0x60]
   14000995c:	mov    r11d,0x200
   140009962:	lea    r9,[rip+0xffffffffffff6697]        # 0x140000000
   140009969:	mov    r12b,BYTE PTR [rdx]
   14000996c:	test   r12b,r12b
   14000996f:	jne    0x1400092aa
   140009975:	test   r8d,r8d
   140009978:	je     0x140009984
   14000997a:	cmp    r8d,0x7
   14000997e:	jne    0x140009247
   140009984:	cmp    BYTE PTR [rbp-0x68],r10b
   140009988:	je     0x140009995
   14000998a:	mov    rcx,QWORD PTR [rbp-0x70]
   14000998e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140009995:	mov    eax,esi
   140009997:	mov    rcx,QWORD PTR [rbp+0x1c8]
   14000999e:	xor    rcx,rsp
   1400099a1:	call   0x140001920
   1400099a6:	mov    rbx,QWORD PTR [rsp+0x320]
   1400099ae:	add    rsp,0x2d0
   1400099b5:	pop    r15
   1400099b7:	pop    r14
   1400099b9:	pop    r13
   1400099bb:	pop    r12
   1400099bd:	pop    rdi
   1400099be:	pop    rsi
   1400099bf:	pop    rbp
   1400099c0:	ret    
   1400099c1:	cmp    r12b,0x49
   1400099c5:	je     0x140009a04
   1400099c7:	cmp    r12b,0x68
   1400099cb:	je     0x1400099fb
   1400099cd:	cmp    r12b,0x6c
   1400099d1:	je     0x1400099e0
   1400099d3:	cmp    r12b,0x77
   1400099d7:	jne    0x140009969
   1400099d9:	bts    r13d,0xb
   1400099de:	jmp    0x140009969
   1400099e0:	cmp    BYTE PTR [rdx],0x6c
   1400099e3:	jne    0x1400099f2
   1400099e5:	inc    rdx
   1400099e8:	bts    r13d,0xc
   1400099ed:	jmp    0x140009969
   1400099f2:	or     r13d,0x10
   1400099f6:	jmp    0x140009969
   1400099fb:	or     r13d,0x20
   1400099ff:	jmp    0x140009969
   140009a04:	mov    al,BYTE PTR [rdx]
   140009a06:	bts    r13d,0xf
   140009a0b:	cmp    al,0x36
   140009a0d:	jne    0x140009a23
   140009a0f:	cmp    BYTE PTR [rdx+0x1],0x34
   140009a13:	jne    0x140009a23
   140009a15:	add    rdx,0x2
   140009a19:	bts    r13d,0xf
   140009a1e:	jmp    0x140009969
   140009a23:	cmp    al,0x33
   140009a25:	jne    0x140009a3b
   140009a27:	cmp    BYTE PTR [rdx+0x1],0x32
   140009a2b:	jne    0x140009a3b
   140009a2d:	add    rdx,0x2
   140009a31:	btr    r13d,0xf
   140009a36:	jmp    0x140009969
   140009a3b:	cmp    al,0x64
   140009a3d:	je     0x140009969
   140009a43:	cmp    al,0x69
   140009a45:	je     0x140009969
   140009a4b:	cmp    al,0x6f
   140009a4d:	je     0x140009969
   140009a53:	cmp    al,0x75
   140009a55:	je     0x140009969
   140009a5b:	cmp    al,0x78
   140009a5d:	je     0x140009969
   140009a63:	cmp    al,0x58
   140009a65:	je     0x140009969
   140009a6b:	mov    DWORD PTR [rsp+0x60],r10d
   140009a70:	lea    rdx,[rbp-0x80]
   140009a74:	movzx  ecx,r12b
   140009a78:	mov    DWORD PTR [rsp+0x54],r10d
   140009a7d:	call   0x14000ad70
   140009a82:	xor    esi,esi
   140009a84:	test   eax,eax
   140009a86:	je     0x140009ab3
   140009a88:	mov    rdx,QWORD PTR [rsp+0x70]
   140009a8d:	lea    r8,[rsp+0x40]
   140009a92:	mov    cl,r12b
   140009a95:	call   0x1400090cc
   140009a9a:	mov    rdx,QWORD PTR [rsp+0x68]
   140009a9f:	mov    r12b,BYTE PTR [rdx]
   140009aa2:	inc    rdx
   140009aa5:	mov    QWORD PTR [rsp+0x68],rdx
   140009aaa:	test   r12b,r12b
   140009aad:	je     0x140009bca
   140009ab3:	mov    rdx,QWORD PTR [rsp+0x70]
   140009ab8:	lea    r8,[rsp+0x40]
   140009abd:	mov    cl,r12b
   140009ac0:	call   0x1400090cc
   140009ac5:	mov    esi,DWORD PTR [rsp+0x40]
   140009ac9:	xor    r10d,r10d
   140009acc:	jmp    0x140009952
   140009ad1:	cmp    r12b,0x2a
   140009ad5:	jne    0x140009af7
   140009ad7:	mov    edi,DWORD PTR [r15]
   140009ada:	add    r15,0x8
   140009ade:	mov    DWORD PTR [rsp+0x44],edi
   140009ae2:	test   edi,edi
   140009ae4:	jns    0x140009969
   140009aea:	mov    edi,r14d
   140009aed:	mov    DWORD PTR [rsp+0x44],r14d
   140009af2:	jmp    0x140009969
   140009af7:	lea    ecx,[rdi+rdi*4]
   140009afa:	movsx  eax,r12b
   140009afe:	lea    edi,[rax+rcx*2-0x30]
   140009b02:	mov    DWORD PTR [rsp+0x44],edi
   140009b06:	jmp    0x140009969
   140009b0b:	mov    edi,r10d
   140009b0e:	mov    DWORD PTR [rsp+0x44],r10d
   140009b13:	jmp    0x140009969
   140009b18:	cmp    r12b,0x2a
   140009b1c:	jne    0x140009b39
   140009b1e:	mov    eax,DWORD PTR [r15]
   140009b21:	add    r15,0x8
   140009b25:	mov    DWORD PTR [rsp+0x58],eax
   140009b29:	test   eax,eax
   140009b2b:	jns    0x140009969
   140009b31:	or     r13d,0x4
   140009b35:	neg    eax
   140009b37:	jmp    0x140009b48
   140009b39:	mov    eax,DWORD PTR [rsp+0x58]
   140009b3d:	lea    ecx,[rax+rax*4]
   140009b40:	movsx  eax,r12b
   140009b44:	lea    eax,[rax+rcx*2-0x30]
   140009b48:	mov    DWORD PTR [rsp+0x58],eax
   140009b4c:	jmp    0x140009969
   140009b51:	cmp    r12b,0x20
   140009b55:	je     0x140009b98
   140009b57:	cmp    r12b,0x23
   140009b5b:	je     0x140009b8e
   140009b5d:	cmp    r12b,0x2b
   140009b61:	je     0x140009b85
   140009b63:	cmp    r12b,0x2d
   140009b67:	je     0x140009b7c
   140009b69:	cmp    r12b,0x30
   140009b6d:	jne    0x140009969
   140009b73:	or     r13d,0x8
   140009b77:	jmp    0x140009969
   140009b7c:	or     r13d,0x4
   140009b80:	jmp    0x140009969
   140009b85:	or     r13d,0x1
   140009b89:	jmp    0x140009969
   140009b8e:	bts    r13d,0x7
   140009b93:	jmp    0x140009969
   140009b98:	or     r13d,0x2
   140009b9c:	jmp    0x140009969
   140009ba1:	mov    DWORD PTR [rsp+0x78],r10d
   140009ba6:	mov    DWORD PTR [rsp+0x5c],r10d
   140009bab:	mov    DWORD PTR [rsp+0x58],r10d
   140009bb0:	mov    DWORD PTR [rsp+0x4c],r10d
   140009bb5:	mov    r13d,r10d
   140009bb8:	mov    edi,r14d
   140009bbb:	mov    DWORD PTR [rsp+0x44],r14d
   140009bc0:	mov    DWORD PTR [rsp+0x54],r10d
   140009bc5:	jmp    0x140009969
   140009bca:	call   0x140003250
   140009bcf:	mov    DWORD PTR [rax],0x16
   140009bd5:	call   0x1400031e8
   140009bda:	cmp    BYTE PTR [rbp-0x68],sil
   140009bde:	jmp    0x14000925e
   140009be3:	int3   
   140009be4:	mov    QWORD PTR [rsp+0x8],rbx
   140009be9:	push   rdi
   140009bea:	sub    rsp,0x20
   140009bee:	movsxd rbx,ecx
   140009bf1:	mov    edi,r8d
   140009bf4:	mov    QWORD PTR [rsp+0x38],rdx
   140009bf9:	mov    ecx,ebx
   140009bfb:	call   0x14000bbe0
   140009c00:	cmp    rax,0xffffffffffffffff
   140009c04:	jne    0x140009c17
   140009c06:	call   0x140003250
   140009c0b:	mov    DWORD PTR [rax],0x9
   140009c11:	or     rax,0xffffffffffffffff
   140009c15:	jmp    0x140009c6e
   140009c17:	mov    edx,DWORD PTR [rsp+0x38]
   140009c1b:	lea    r8,[rsp+0x3c]
   140009c20:	mov    r9d,edi
   140009c23:	mov    rcx,rax
   140009c26:	call   QWORD PTR [rip+0x454c]        # 0x14000e178
   140009c2c:	mov    DWORD PTR [rsp+0x38],eax
   140009c30:	cmp    eax,0xffffffff
   140009c33:	jne    0x140009c48
   140009c35:	call   QWORD PTR [rip+0x4435]        # 0x14000e070
   140009c3b:	test   eax,eax
   140009c3d:	je     0x140009c48
   140009c3f:	mov    ecx,eax
   140009c41:	call   0x140003290
   140009c46:	jmp    0x140009c11
   140009c48:	mov    rcx,rbx
   140009c4b:	mov    rax,rbx
   140009c4e:	lea    rdx,[rip+0xa9cb]        # 0x140014620
   140009c55:	sar    rax,0x5
   140009c59:	and    ecx,0x1f
   140009c5c:	mov    rax,QWORD PTR [rdx+rax*8]
   140009c60:	imul   rcx,rcx,0x58
   140009c64:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140009c69:	mov    rax,QWORD PTR [rsp+0x38]
   140009c6e:	mov    rbx,QWORD PTR [rsp+0x30]
   140009c73:	add    rsp,0x20
   140009c77:	pop    rdi
   140009c78:	ret    
   140009c79:	int3   
   140009c7a:	int3   
   140009c7b:	int3   
   140009c7c:	mov    QWORD PTR [rsp+0x10],rbx
   140009c81:	mov    DWORD PTR [rsp+0x8],ecx
   140009c85:	push   rsi
   140009c86:	push   rdi
   140009c87:	push   r12
   140009c89:	push   r13
   140009c8b:	push   r14
   140009c8d:	sub    rsp,0x20
   140009c91:	mov    esi,r8d
   140009c94:	mov    r12,rdx
   140009c97:	movsxd rdi,ecx
   140009c9a:	cmp    edi,0xfffffffe
   140009c9d:	jne    0x140009cb7
   140009c9f:	call   0x140003270
   140009ca4:	and    DWORD PTR [rax],0x0
   140009ca7:	call   0x140003250
   140009cac:	mov    DWORD PTR [rax],0x9
   140009cb2:	jmp    0x140009d49
   140009cb7:	test   ecx,ecx
   140009cb9:	js     0x140009d31
   140009cbb:	cmp    edi,DWORD PTR [rip+0xa93f]        # 0x140014600
   140009cc1:	jae    0x140009d31
   140009cc3:	mov    rbx,rdi
   140009cc6:	mov    r13,rdi
   140009cc9:	sar    r13,0x5
   140009ccd:	lea    r14,[rip+0xa94c]        # 0x140014620
   140009cd4:	and    ebx,0x1f
   140009cd7:	imul   rbx,rbx,0x58
   140009cdb:	mov    rax,QWORD PTR [r14+r13*8]
   140009cdf:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140009ce4:	and    ecx,0x1
   140009ce7:	je     0x140009d31
   140009ce9:	mov    ecx,edi
   140009ceb:	call   0x14000bc54
   140009cf0:	nop
   140009cf1:	mov    rax,QWORD PTR [r14+r13*8]
   140009cf5:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140009cfa:	je     0x140009d0e
   140009cfc:	mov    r8d,esi
   140009cff:	mov    rdx,r12
   140009d02:	mov    ecx,edi
   140009d04:	call   0x140009be4
   140009d09:	mov    rbx,rax
   140009d0c:	jmp    0x140009d25
   140009d0e:	call   0x140003250
   140009d13:	mov    DWORD PTR [rax],0x9
   140009d19:	call   0x140003270
   140009d1e:	and    DWORD PTR [rax],0x0
   140009d21:	or     rbx,0xffffffffffffffff
   140009d25:	mov    ecx,edi
   140009d27:	call   0x14000bcfc
   140009d2c:	mov    rax,rbx
   140009d2f:	jmp    0x140009d4d
   140009d31:	call   0x140003270
   140009d36:	and    DWORD PTR [rax],0x0
   140009d39:	call   0x140003250
   140009d3e:	mov    DWORD PTR [rax],0x9
   140009d44:	call   0x1400031e8
   140009d49:	or     rax,0xffffffffffffffff
   140009d4d:	mov    rbx,QWORD PTR [rsp+0x58]
   140009d52:	add    rsp,0x20
   140009d56:	pop    r14
   140009d58:	pop    r13
   140009d5a:	pop    r12
   140009d5c:	pop    rdi
   140009d5d:	pop    rsi
   140009d5e:	ret    
   140009d5f:	int3   
   140009d60:	rex push rbx
   140009d62:	sub    rsp,0x20
   140009d66:	inc    DWORD PTR [rip+0x9654]        # 0x1400133c0
   140009d6c:	mov    rbx,rcx
   140009d6f:	mov    ecx,0x1000
   140009d74:	call   0x140003de8
   140009d79:	mov    QWORD PTR [rbx+0x10],rax
   140009d7d:	test   rax,rax
   140009d80:	je     0x140009d8f
   140009d82:	or     DWORD PTR [rbx+0x18],0x8
   140009d86:	mov    DWORD PTR [rbx+0x24],0x1000
   140009d8d:	jmp    0x140009da2
   140009d8f:	or     DWORD PTR [rbx+0x18],0x4
   140009d93:	lea    rax,[rbx+0x20]
   140009d97:	mov    DWORD PTR [rbx+0x24],0x2
   140009d9e:	mov    QWORD PTR [rbx+0x10],rax
   140009da2:	mov    rax,QWORD PTR [rbx+0x10]
   140009da6:	and    DWORD PTR [rbx+0x8],0x0
   140009daa:	mov    QWORD PTR [rbx],rax
   140009dad:	add    rsp,0x20
   140009db1:	pop    rbx
   140009db2:	ret    
   140009db3:	int3   
   140009db4:	sub    rsp,0x28
   140009db8:	cmp    ecx,0xfffffffe
   140009dbb:	jne    0x140009dca
   140009dbd:	call   0x140003250
   140009dc2:	mov    DWORD PTR [rax],0x9
   140009dc8:	jmp    0x140009e0c
   140009dca:	test   ecx,ecx
   140009dcc:	js     0x140009dfc
   140009dce:	cmp    ecx,DWORD PTR [rip+0xa82c]        # 0x140014600
   140009dd4:	jae    0x140009dfc
   140009dd6:	movsxd rcx,ecx
   140009dd9:	lea    rdx,[rip+0xa840]        # 0x140014620
   140009de0:	mov    rax,rcx
   140009de3:	and    ecx,0x1f
   140009de6:	sar    rax,0x5
   140009dea:	imul   rcx,rcx,0x58
   140009dee:	mov    rax,QWORD PTR [rdx+rax*8]
   140009df2:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   140009df7:	and    eax,0x40
   140009dfa:	jmp    0x140009e0e
   140009dfc:	call   0x140003250
   140009e01:	mov    DWORD PTR [rax],0x9
   140009e07:	call   0x1400031e8
   140009e0c:	xor    eax,eax
   140009e0e:	add    rsp,0x28
   140009e12:	ret    
   140009e13:	int3   
   140009e14:	mov    QWORD PTR [rsp+0x8],rbx
   140009e19:	mov    QWORD PTR [rsp+0x10],rbp
   140009e1e:	mov    QWORD PTR [rsp+0x18],rsi
   140009e23:	push   rdi
   140009e24:	sub    rsp,0x20
   140009e28:	lea    rbx,[rcx+0x1c]
   140009e2c:	mov    rbp,rcx
   140009e2f:	mov    esi,0x101
   140009e34:	mov    rcx,rbx
   140009e37:	mov    r8d,esi
   140009e3a:	xor    edx,edx
   140009e3c:	call   0x1400048d0
   140009e41:	xor    r11d,r11d
   140009e44:	lea    rdi,[rbp+0x10]
   140009e48:	lea    ecx,[r11+0x6]
   140009e4c:	movzx  eax,r11w
   140009e50:	mov    DWORD PTR [rbp+0xc],r11d
   140009e54:	mov    QWORD PTR [rbp+0x4],r11
   140009e58:	rep stos WORD PTR es:[rdi],ax
   140009e5b:	lea    rdi,[rip+0x8b0e]        # 0x140012970
   140009e62:	sub    rdi,rbp
   140009e65:	mov    al,BYTE PTR [rdi+rbx*1]
   140009e68:	mov    BYTE PTR [rbx],al
   140009e6a:	inc    rbx
   140009e6d:	dec    rsi
   140009e70:	jne    0x140009e65
   140009e72:	lea    rcx,[rbp+0x11d]
   140009e79:	mov    edx,0x100
   140009e7e:	mov    al,BYTE PTR [rcx+rdi*1]
   140009e81:	mov    BYTE PTR [rcx],al
   140009e83:	inc    rcx
   140009e86:	dec    rdx
   140009e89:	jne    0x140009e7e
   140009e8b:	mov    rbx,QWORD PTR [rsp+0x30]
   140009e90:	mov    rbp,QWORD PTR [rsp+0x38]
   140009e95:	mov    rsi,QWORD PTR [rsp+0x40]
   140009e9a:	add    rsp,0x20
   140009e9e:	pop    rdi
   140009e9f:	ret    
   140009ea0:	mov    rax,rsp
   140009ea3:	mov    QWORD PTR [rax+0x10],rbx
   140009ea7:	mov    QWORD PTR [rax+0x18],rsi
   140009eab:	mov    QWORD PTR [rax+0x20],rdi
   140009eaf:	push   rbp
   140009eb0:	lea    rbp,[rax-0x488]
   140009eb7:	sub    rsp,0x580
   140009ebe:	mov    rax,QWORD PTR [rip+0x8503]        # 0x1400123c8
   140009ec5:	xor    rax,rsp
   140009ec8:	mov    QWORD PTR [rbp+0x470],rax
   140009ecf:	mov    rsi,rcx
   140009ed2:	mov    ecx,DWORD PTR [rcx+0x4]
   140009ed5:	lea    rdx,[rsp+0x50]
   140009eda:	call   QWORD PTR [rip+0x4340]        # 0x14000e220
   140009ee0:	mov    ebx,0x100
   140009ee5:	test   eax,eax
   140009ee7:	je     0x14000a029
   140009eed:	xor    eax,eax
   140009eef:	lea    rcx,[rsp+0x70]
   140009ef4:	mov    BYTE PTR [rcx],al
   140009ef6:	inc    eax
   140009ef8:	inc    rcx
   140009efb:	cmp    eax,ebx
   140009efd:	jb     0x140009ef4
   140009eff:	mov    al,BYTE PTR [rsp+0x56]
   140009f03:	mov    BYTE PTR [rsp+0x70],0x20
   140009f08:	lea    rdi,[rsp+0x56]
   140009f0d:	jmp    0x140009f38
   140009f0f:	movzx  edx,BYTE PTR [rdi+0x1]
   140009f13:	movzx  r8d,al
   140009f17:	cmp    r8d,edx
   140009f1a:	ja     0x140009f32
   140009f1c:	sub    edx,r8d
   140009f1f:	mov    eax,r8d
   140009f22:	lea    rcx,[rsp+r8*1+0x70]
   140009f27:	lea    r8d,[rdx+0x1]
   140009f2b:	mov    dl,0x20
   140009f2d:	call   0x1400048d0
   140009f32:	add    rdi,0x2
   140009f36:	mov    al,BYTE PTR [rdi]
   140009f38:	test   al,al
   140009f3a:	jne    0x140009f0f
   140009f3c:	mov    eax,DWORD PTR [rsi+0xc]
   140009f3f:	and    DWORD PTR [rsp+0x38],0x0
   140009f44:	lea    r8,[rsp+0x70]
   140009f49:	mov    DWORD PTR [rsp+0x30],eax
   140009f4d:	mov    eax,DWORD PTR [rsi+0x4]
   140009f50:	mov    r9d,ebx
   140009f53:	mov    DWORD PTR [rsp+0x28],eax
   140009f57:	lea    rax,[rbp+0x270]
   140009f5e:	mov    edx,0x1
   140009f63:	xor    ecx,ecx
   140009f65:	mov    QWORD PTR [rsp+0x20],rax
   140009f6a:	call   0x14000cec4
   140009f6f:	and    DWORD PTR [rsp+0x40],0x0
   140009f74:	mov    eax,DWORD PTR [rsi+0x4]
   140009f77:	mov    edx,DWORD PTR [rsi+0xc]
   140009f7a:	mov    DWORD PTR [rsp+0x38],eax
   140009f7e:	lea    rax,[rbp+0x70]
   140009f82:	mov    DWORD PTR [rsp+0x30],ebx
   140009f86:	mov    QWORD PTR [rsp+0x28],rax
   140009f8b:	lea    r9,[rsp+0x70]
   140009f90:	mov    r8d,ebx
   140009f93:	xor    ecx,ecx
   140009f95:	mov    DWORD PTR [rsp+0x20],ebx
   140009f99:	call   0x14000cccc
   140009f9e:	and    DWORD PTR [rsp+0x40],0x0
   140009fa3:	mov    eax,DWORD PTR [rsi+0x4]
   140009fa6:	mov    edx,DWORD PTR [rsi+0xc]
   140009fa9:	mov    DWORD PTR [rsp+0x38],eax
   140009fad:	lea    rax,[rbp+0x170]
   140009fb4:	mov    DWORD PTR [rsp+0x30],ebx
   140009fb8:	mov    QWORD PTR [rsp+0x28],rax
   140009fbd:	lea    r9,[rsp+0x70]
   140009fc2:	mov    r8d,0x200
   140009fc8:	xor    ecx,ecx
   140009fca:	mov    DWORD PTR [rsp+0x20],ebx
   140009fce:	call   0x14000cccc
   140009fd3:	lea    rdx,[rbp+0x70]
   140009fd7:	lea    r8,[rbp+0x170]
   140009fde:	sub    rdx,rsi
   140009fe1:	lea    r11,[rbp+0x270]
   140009fe8:	lea    rcx,[rsi+0x1d]
   140009fec:	sub    r8,rsi
   140009fef:	test   BYTE PTR [r11],0x1
   140009ff3:	je     0x140009ffe
   140009ff5:	or     BYTE PTR [rcx],0x10
   140009ff8:	mov    al,BYTE PTR [rdx+rcx*1-0x1d]
   140009ffc:	jmp    0x14000a00c
   140009ffe:	test   BYTE PTR [r11],0x2
   14000a002:	je     0x14000a014
   14000a004:	or     BYTE PTR [rcx],0x20
   14000a007:	mov    al,BYTE PTR [r8+rcx*1-0x1d]
   14000a00c:	mov    BYTE PTR [rcx+0x100],al
   14000a012:	jmp    0x14000a01b
   14000a014:	mov    BYTE PTR [rcx+0x100],0x0
   14000a01b:	inc    rcx
   14000a01e:	add    r11,0x2
   14000a022:	dec    rbx
   14000a025:	jne    0x140009fef
   14000a027:	jmp    0x14000a068
   14000a029:	xor    edx,edx
   14000a02b:	lea    rcx,[rsi+0x1d]
   14000a02f:	lea    r8d,[rdx-0x61]
   14000a033:	lea    eax,[r8+0x20]
   14000a037:	cmp    eax,0x19
   14000a03a:	ja     0x14000a044
   14000a03c:	or     BYTE PTR [rcx],0x10
   14000a03f:	lea    eax,[rdx+0x20]
   14000a042:	jmp    0x14000a050
   14000a044:	cmp    r8d,0x19
   14000a048:	ja     0x14000a058
   14000a04a:	or     BYTE PTR [rcx],0x20
   14000a04d:	lea    eax,[rdx-0x20]
   14000a050:	mov    BYTE PTR [rcx+0x100],al
   14000a056:	jmp    0x14000a05f
   14000a058:	mov    BYTE PTR [rcx+0x100],0x0
   14000a05f:	inc    edx
   14000a061:	inc    rcx
   14000a064:	cmp    edx,ebx
   14000a066:	jb     0x14000a02f
   14000a068:	mov    rcx,QWORD PTR [rbp+0x470]
   14000a06f:	xor    rcx,rsp
   14000a072:	call   0x140001920
   14000a077:	lea    r11,[rsp+0x580]
   14000a07f:	mov    rbx,QWORD PTR [r11+0x18]
   14000a083:	mov    rsi,QWORD PTR [r11+0x20]
   14000a087:	mov    rdi,QWORD PTR [r11+0x28]
   14000a08b:	mov    rsp,r11
   14000a08e:	pop    rbp
   14000a08f:	ret    
   14000a090:	mov    QWORD PTR [rsp+0x10],rbx
   14000a095:	push   rdi
   14000a096:	sub    rsp,0x20
   14000a09a:	call   0x140006f38
   14000a09f:	mov    rdi,rax
   14000a0a2:	mov    ecx,DWORD PTR [rax+0xc8]
   14000a0a8:	test   DWORD PTR [rip+0x8df2],ecx        # 0x140012ea0
   14000a0ae:	je     0x14000a0c3
   14000a0b0:	cmp    QWORD PTR [rax+0xc0],0x0
   14000a0b8:	je     0x14000a0c3
   14000a0ba:	mov    rbx,QWORD PTR [rax+0xb8]
   14000a0c1:	jmp    0x14000a12f
   14000a0c3:	mov    ecx,0xd
   14000a0c8:	call   0x1400043ec
   14000a0cd:	nop
   14000a0ce:	mov    rbx,QWORD PTR [rdi+0xb8]
   14000a0d5:	mov    QWORD PTR [rsp+0x30],rbx
   14000a0da:	cmp    rbx,QWORD PTR [rip+0x8cbf]        # 0x140012da0
   14000a0e1:	je     0x14000a125
   14000a0e3:	test   rbx,rbx
   14000a0e6:	je     0x14000a103
   14000a0e8:	lock dec DWORD PTR [rbx]
   14000a0eb:	jne    0x14000a103
   14000a0ed:	lea    rax,[rip+0x887c]        # 0x140012970
   14000a0f4:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a0f9:	cmp    rcx,rax
   14000a0fc:	je     0x14000a103
   14000a0fe:	call   0x140001a94
   14000a103:	mov    rax,QWORD PTR [rip+0x8c96]        # 0x140012da0
   14000a10a:	mov    QWORD PTR [rdi+0xb8],rax
   14000a111:	mov    rax,QWORD PTR [rip+0x8c88]        # 0x140012da0
   14000a118:	mov    QWORD PTR [rsp+0x30],rax
   14000a11d:	lock inc DWORD PTR [rax]
   14000a120:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a125:	mov    ecx,0xd
   14000a12a:	call   0x1400042ec
   14000a12f:	test   rbx,rbx
   14000a132:	jne    0x14000a13c
   14000a134:	lea    ecx,[rbx+0x20]
   14000a137:	call   0x1400037e0
   14000a13c:	mov    rax,rbx
   14000a13f:	mov    rbx,QWORD PTR [rsp+0x38]
   14000a144:	add    rsp,0x20
   14000a148:	pop    rdi
   14000a149:	ret    
   14000a14a:	int3   
   14000a14b:	int3   
   14000a14c:	rex push rbx
   14000a14e:	sub    rsp,0x40
   14000a152:	mov    ebx,ecx
   14000a154:	lea    rcx,[rsp+0x20]
   14000a159:	xor    edx,edx
   14000a15b:	call   0x140004810
   14000a160:	and    DWORD PTR [rip+0xa251],0x0        # 0x1400143b8
   14000a167:	cmp    ebx,0xfffffffe
   14000a16a:	jne    0x14000a191
   14000a16c:	mov    DWORD PTR [rip+0xa242],0x1        # 0x1400143b8
   14000a176:	call   QWORD PTR [rip+0x40b4]        # 0x14000e230
   14000a17c:	cmp    BYTE PTR [rsp+0x38],0x0
   14000a181:	je     0x14000a1d6
   14000a183:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a188:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000a18f:	jmp    0x14000a1d6
   14000a191:	cmp    ebx,0xfffffffd
   14000a194:	jne    0x14000a1a8
   14000a196:	mov    DWORD PTR [rip+0xa218],0x1        # 0x1400143b8
   14000a1a0:	call   QWORD PTR [rip+0x4082]        # 0x14000e228
   14000a1a6:	jmp    0x14000a17c
   14000a1a8:	cmp    ebx,0xfffffffc
   14000a1ab:	jne    0x14000a1c1
   14000a1ad:	mov    rax,QWORD PTR [rsp+0x20]
   14000a1b2:	mov    DWORD PTR [rip+0xa1fc],0x1        # 0x1400143b8
   14000a1bc:	mov    eax,DWORD PTR [rax+0x4]
   14000a1bf:	jmp    0x14000a17c
   14000a1c1:	cmp    BYTE PTR [rsp+0x38],0x0
   14000a1c6:	je     0x14000a1d4
   14000a1c8:	mov    rax,QWORD PTR [rsp+0x30]
   14000a1cd:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000a1d4:	mov    eax,ebx
   14000a1d6:	add    rsp,0x40
   14000a1da:	pop    rbx
   14000a1db:	ret    
   14000a1dc:	mov    QWORD PTR [rsp+0x18],rbx
   14000a1e1:	push   rbp
   14000a1e2:	push   rsi
   14000a1e3:	push   rdi
   14000a1e4:	push   r12
   14000a1e6:	push   r13
   14000a1e8:	sub    rsp,0x40
   14000a1ec:	mov    rax,QWORD PTR [rip+0x81d5]        # 0x1400123c8
   14000a1f3:	xor    rax,rsp
   14000a1f6:	mov    QWORD PTR [rsp+0x38],rax
   14000a1fb:	mov    rsi,rdx
   14000a1fe:	call   0x14000a14c
   14000a203:	xor    ebx,ebx
   14000a205:	mov    edi,eax
   14000a207:	test   eax,eax
   14000a209:	jne    0x14000a218
   14000a20b:	mov    rcx,rsi
   14000a20e:	call   0x140009e14
   14000a213:	jmp    0x14000a42e
   14000a218:	lea    r13,[rip+0x8b91]        # 0x140012db0
   14000a21f:	mov    ecx,ebx
   14000a221:	mov    rbp,rbx
   14000a224:	mov    rax,r13
   14000a227:	mov    r12d,0x1
   14000a22d:	cmp    DWORD PTR [rax],edi
   14000a22f:	je     0x14000a35b
   14000a235:	add    ecx,r12d
   14000a238:	add    rbp,r12
   14000a23b:	add    rax,0x30
   14000a23f:	cmp    ecx,0x5
   14000a242:	jb     0x14000a22d
   14000a244:	cmp    edi,0xfde8
   14000a24a:	je     0x14000a353
   14000a250:	cmp    edi,0xfde9
   14000a256:	je     0x14000a353
   14000a25c:	movzx  ecx,di
   14000a25f:	call   QWORD PTR [rip+0x3fd3]        # 0x14000e238
   14000a265:	test   eax,eax
   14000a267:	je     0x14000a353
   14000a26d:	lea    rdx,[rsp+0x20]
   14000a272:	mov    ecx,edi
   14000a274:	call   QWORD PTR [rip+0x3fa6]        # 0x14000e220
   14000a27a:	test   eax,eax
   14000a27c:	je     0x14000a347
   14000a282:	lea    rcx,[rsi+0x1c]
   14000a286:	xor    edx,edx
   14000a288:	mov    r8d,0x101
   14000a28e:	call   0x1400048d0
   14000a293:	mov    DWORD PTR [rsi+0x4],edi
   14000a296:	mov    DWORD PTR [rsi+0xc],ebx
   14000a299:	cmp    DWORD PTR [rsp+0x20],r12d
   14000a29e:	jbe    0x14000a330
   14000a2a4:	lea    rax,[rsp+0x26]
   14000a2a9:	cmp    BYTE PTR [rsp+0x26],bl
   14000a2ad:	je     0x14000a2dc
   14000a2af:	cmp    BYTE PTR [rax+0x1],bl
   14000a2b2:	je     0x14000a2dc
   14000a2b4:	movzx  edi,BYTE PTR [rax]
   14000a2b7:	movzx  ecx,BYTE PTR [rax+0x1]
   14000a2bb:	cmp    edi,ecx
   14000a2bd:	ja     0x14000a2d4
   14000a2bf:	sub    ecx,edi
   14000a2c1:	lea    rdx,[rdi+rsi*1+0x1d]
   14000a2c6:	add    ecx,r12d
   14000a2c9:	or     BYTE PTR [rdx],0x4
   14000a2cc:	add    rdx,r12
   14000a2cf:	sub    rcx,r12
   14000a2d2:	jne    0x14000a2c9
   14000a2d4:	add    rax,0x2
   14000a2d8:	cmp    BYTE PTR [rax],bl
   14000a2da:	jne    0x14000a2af
   14000a2dc:	lea    rax,[rsi+0x1e]
   14000a2e0:	mov    ecx,0xfe
   14000a2e5:	or     BYTE PTR [rax],0x8
   14000a2e8:	add    rax,r12
   14000a2eb:	sub    rcx,r12
   14000a2ee:	jne    0x14000a2e5
   14000a2f0:	mov    ecx,DWORD PTR [rsi+0x4]
   14000a2f3:	sub    ecx,0x3a4
   14000a2f9:	je     0x14000a322
   14000a2fb:	sub    ecx,0x4
   14000a2fe:	je     0x14000a31b
   14000a300:	sub    ecx,0xd
   14000a303:	je     0x14000a314
   14000a305:	dec    ecx
   14000a307:	je     0x14000a30d
   14000a309:	mov    eax,ebx
   14000a30b:	jmp    0x14000a327
   14000a30d:	mov    eax,0x404
   14000a312:	jmp    0x14000a327
   14000a314:	mov    eax,0x412
   14000a319:	jmp    0x14000a327
   14000a31b:	mov    eax,0x804
   14000a320:	jmp    0x14000a327
   14000a322:	mov    eax,0x411
   14000a327:	mov    DWORD PTR [rsi+0xc],eax
   14000a32a:	mov    DWORD PTR [rsi+0x8],r12d
   14000a32e:	jmp    0x14000a333
   14000a330:	mov    DWORD PTR [rsi+0x8],ebx
   14000a333:	lea    rdi,[rsi+0x10]
   14000a337:	movzx  eax,bx
   14000a33a:	mov    ecx,0x6
   14000a33f:	rep stos WORD PTR es:[rdi],ax
   14000a342:	jmp    0x14000a426
   14000a347:	cmp    DWORD PTR [rip+0xa06b],ebx        # 0x1400143b8
   14000a34d:	jne    0x14000a20b
   14000a353:	or     eax,0xffffffff
   14000a356:	jmp    0x14000a430
   14000a35b:	lea    rcx,[rsi+0x1c]
   14000a35f:	xor    edx,edx
   14000a361:	mov    r8d,0x101
   14000a367:	call   0x1400048d0
   14000a36c:	lea    r10,[rbp+rbp*2+0x0]
   14000a371:	lea    r11,[rip+0x8a30]        # 0x140012da8
   14000a378:	shl    r10,0x4
   14000a37c:	mov    ebp,0x4
   14000a381:	lea    r8,[r10+r13*1+0x10]
   14000a386:	mov    rcx,r8
   14000a389:	cmp    BYTE PTR [r8],bl
   14000a38c:	je     0x14000a3bf
   14000a38e:	cmp    BYTE PTR [rcx+0x1],bl
   14000a391:	je     0x14000a3bf
   14000a393:	movzx  edx,BYTE PTR [rcx]
   14000a396:	movzx  eax,BYTE PTR [rcx+0x1]
   14000a39a:	cmp    edx,eax
   14000a39c:	ja     0x14000a3b7
   14000a39e:	lea    r9,[rdx+rsi*1+0x1d]
   14000a3a3:	mov    al,BYTE PTR [r11]
   14000a3a6:	add    edx,r12d
   14000a3a9:	or     BYTE PTR [r9],al
   14000a3ac:	movzx  eax,BYTE PTR [rcx+0x1]
   14000a3b0:	add    r9,r12
   14000a3b3:	cmp    edx,eax
   14000a3b5:	jbe    0x14000a3a3
   14000a3b7:	add    rcx,0x2
   14000a3bb:	cmp    BYTE PTR [rcx],bl
   14000a3bd:	jne    0x14000a38e
   14000a3bf:	add    r8,0x8
   14000a3c3:	add    r11,r12
   14000a3c6:	sub    rbp,r12
   14000a3c9:	jne    0x14000a386
   14000a3cb:	mov    DWORD PTR [rsi+0x4],edi
   14000a3ce:	sub    edi,0x3a4
   14000a3d4:	mov    DWORD PTR [rsi+0x8],r12d
   14000a3d8:	je     0x14000a3fd
   14000a3da:	sub    edi,0x4
   14000a3dd:	je     0x14000a3f6
   14000a3df:	sub    edi,0xd
   14000a3e2:	je     0x14000a3ef
   14000a3e4:	dec    edi
   14000a3e6:	jne    0x14000a402
   14000a3e8:	mov    ebx,0x404
   14000a3ed:	jmp    0x14000a402
   14000a3ef:	mov    ebx,0x412
   14000a3f4:	jmp    0x14000a402
   14000a3f6:	mov    ebx,0x804
   14000a3fb:	jmp    0x14000a402
   14000a3fd:	mov    ebx,0x411
   14000a402:	sub    r10,rsi
   14000a405:	mov    DWORD PTR [rsi+0xc],ebx
   14000a408:	lea    rcx,[rsi+0x10]
   14000a40c:	lea    rdi,[r10+r13*1-0xc]
   14000a411:	mov    edx,0x6
   14000a416:	movzx  eax,WORD PTR [rdi+rcx*1]
   14000a41a:	mov    WORD PTR [rcx],ax
   14000a41d:	add    rcx,0x2
   14000a421:	sub    rdx,r12
   14000a424:	jne    0x14000a416
   14000a426:	mov    rcx,rsi
   14000a429:	call   0x140009ea0
   14000a42e:	xor    eax,eax
   14000a430:	mov    rcx,QWORD PTR [rsp+0x38]
   14000a435:	xor    rcx,rsp
   14000a438:	call   0x140001920
   14000a43d:	mov    rbx,QWORD PTR [rsp+0x80]
   14000a445:	add    rsp,0x40
   14000a449:	pop    r13
   14000a44b:	pop    r12
   14000a44d:	pop    rdi
   14000a44e:	pop    rsi
   14000a44f:	pop    rbp
   14000a450:	ret    
   14000a451:	int3   
   14000a452:	int3   
   14000a453:	int3   
   14000a454:	mov    rax,rsp
   14000a457:	mov    QWORD PTR [rax+0x8],rbx
   14000a45b:	mov    QWORD PTR [rax+0x10],rsi
   14000a45f:	mov    QWORD PTR [rax+0x18],rdi
   14000a463:	mov    QWORD PTR [rax+0x20],r12
   14000a467:	push   r13
   14000a469:	sub    rsp,0x30
   14000a46d:	mov    edi,ecx
   14000a46f:	or     r13d,0xffffffff
   14000a473:	call   0x140006f38
   14000a478:	mov    rsi,rax
   14000a47b:	call   0x14000a090
   14000a480:	mov    rbx,QWORD PTR [rsi+0xb8]
   14000a487:	mov    ecx,edi
   14000a489:	call   0x14000a14c
   14000a48e:	mov    r12d,eax
   14000a491:	cmp    eax,DWORD PTR [rbx+0x4]
   14000a494:	je     0x14000a60f
   14000a49a:	mov    ecx,0x220
   14000a49f:	call   0x140003de8
   14000a4a4:	mov    rbx,rax
   14000a4a7:	xor    edi,edi
   14000a4a9:	test   rax,rax
   14000a4ac:	je     0x14000a614
   14000a4b2:	mov    rdx,QWORD PTR [rsi+0xb8]
   14000a4b9:	mov    rcx,rax
   14000a4bc:	mov    r8d,0x220
   14000a4c2:	call   0x14000bf40
   14000a4c7:	mov    DWORD PTR [rbx],edi
   14000a4c9:	mov    rdx,rbx
   14000a4cc:	mov    ecx,r12d
   14000a4cf:	call   0x14000a1dc
   14000a4d4:	mov    r13d,eax
   14000a4d7:	test   eax,eax
   14000a4d9:	jne    0x14000a5e9
   14000a4df:	mov    rcx,QWORD PTR [rsi+0xb8]
   14000a4e6:	lea    r12,[rip+0x8483]        # 0x140012970
   14000a4ed:	lock dec DWORD PTR [rcx]
   14000a4f0:	jne    0x14000a503
   14000a4f2:	mov    rcx,QWORD PTR [rsi+0xb8]
   14000a4f9:	cmp    rcx,r12
   14000a4fc:	je     0x14000a503
   14000a4fe:	call   0x140001a94
   14000a503:	mov    QWORD PTR [rsi+0xb8],rbx
   14000a50a:	lock inc DWORD PTR [rbx]
   14000a50d:	test   BYTE PTR [rsi+0xc8],0x2
   14000a514:	jne    0x14000a614
   14000a51a:	test   BYTE PTR [rip+0x897f],0x1        # 0x140012ea0
   14000a521:	jne    0x14000a614
   14000a527:	mov    esi,0xd
   14000a52c:	mov    ecx,esi
   14000a52e:	call   0x1400043ec
   14000a533:	nop
   14000a534:	mov    eax,DWORD PTR [rbx+0x4]
   14000a537:	mov    DWORD PTR [rip+0x9e8f],eax        # 0x1400143cc
   14000a53d:	mov    eax,DWORD PTR [rbx+0x8]
   14000a540:	mov    DWORD PTR [rip+0x9e8a],eax        # 0x1400143d0
   14000a546:	mov    eax,DWORD PTR [rbx+0xc]
   14000a549:	mov    DWORD PTR [rip+0x9e85],eax        # 0x1400143d4
   14000a54f:	mov    edx,edi
   14000a551:	lea    r8,[rip+0xffffffffffff5aa8]        # 0x140000000
   14000a558:	mov    DWORD PTR [rsp+0x20],edx
   14000a55c:	cmp    edx,0x5
   14000a55f:	jge    0x14000a576
   14000a561:	movsxd rcx,edx
   14000a564:	movzx  eax,WORD PTR [rbx+rcx*2+0x10]
   14000a569:	mov    WORD PTR [r8+rcx*2+0x143c0],ax
   14000a572:	inc    edx
   14000a574:	jmp    0x14000a558
   14000a576:	mov    edx,edi
   14000a578:	mov    DWORD PTR [rsp+0x20],edx
   14000a57c:	cmp    edx,0x101
   14000a582:	jge    0x14000a597
   14000a584:	movsxd rcx,edx
   14000a587:	mov    al,BYTE PTR [rcx+rbx*1+0x1c]
   14000a58b:	mov    BYTE PTR [rcx+r8*1+0x12b90],al
   14000a593:	inc    edx
   14000a595:	jmp    0x14000a578
   14000a597:	mov    DWORD PTR [rsp+0x20],edi
   14000a59b:	cmp    edi,0x100
   14000a5a1:	jge    0x14000a5b9
   14000a5a3:	movsxd rcx,edi
   14000a5a6:	mov    al,BYTE PTR [rcx+rbx*1+0x11d]
   14000a5ad:	mov    BYTE PTR [rcx+r8*1+0x12ca0],al
   14000a5b5:	inc    edi
   14000a5b7:	jmp    0x14000a597
   14000a5b9:	mov    rax,QWORD PTR [rip+0x87e0]        # 0x140012da0
   14000a5c0:	lock dec DWORD PTR [rax]
   14000a5c3:	jne    0x14000a5d6
   14000a5c5:	mov    rcx,QWORD PTR [rip+0x87d4]        # 0x140012da0
   14000a5cc:	cmp    rcx,r12
   14000a5cf:	je     0x14000a5d6
   14000a5d1:	call   0x140001a94
   14000a5d6:	mov    QWORD PTR [rip+0x87c3],rbx        # 0x140012da0
   14000a5dd:	lock inc DWORD PTR [rbx]
   14000a5e0:	mov    ecx,esi
   14000a5e2:	call   0x1400042ec
   14000a5e7:	jmp    0x14000a614
   14000a5e9:	cmp    eax,0xffffffff
   14000a5ec:	jne    0x14000a614
   14000a5ee:	lea    r12,[rip+0x837b]        # 0x140012970
   14000a5f5:	cmp    rbx,r12
   14000a5f8:	je     0x14000a602
   14000a5fa:	mov    rcx,rbx
   14000a5fd:	call   0x140001a94
   14000a602:	call   0x140003250
   14000a607:	mov    DWORD PTR [rax],0x16
   14000a60d:	jmp    0x14000a614
   14000a60f:	xor    edi,edi
   14000a611:	mov    r13d,edi
   14000a614:	mov    eax,r13d
   14000a617:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a61c:	mov    rsi,QWORD PTR [rsp+0x48]
   14000a621:	mov    rdi,QWORD PTR [rsp+0x50]
   14000a626:	mov    r12,QWORD PTR [rsp+0x58]
   14000a62b:	add    rsp,0x30
   14000a62f:	pop    r13
   14000a631:	ret    
   14000a632:	int3   
   14000a633:	int3   
   14000a634:	sub    rsp,0x28
   14000a638:	cmp    DWORD PTR [rip+0xa1f9],0x0        # 0x140014838
   14000a63f:	jne    0x14000a655
   14000a641:	mov    ecx,0xfffffffd
   14000a646:	call   0x14000a454
   14000a64b:	mov    DWORD PTR [rip+0xa1e3],0x1        # 0x140014838
   14000a655:	xor    eax,eax
   14000a657:	add    rsp,0x28
   14000a65b:	ret    
   14000a65c:	lock inc DWORD PTR [rcx]
   14000a65f:	mov    rax,QWORD PTR [rcx+0x110]
   14000a666:	test   rax,rax
   14000a669:	je     0x14000a66e
   14000a66b:	lock inc DWORD PTR [rax]
   14000a66e:	mov    rax,QWORD PTR [rcx+0x120]
   14000a675:	test   rax,rax
   14000a678:	je     0x14000a67d
   14000a67a:	lock inc DWORD PTR [rax]
   14000a67d:	mov    rax,QWORD PTR [rcx+0x118]
   14000a684:	test   rax,rax
   14000a687:	je     0x14000a68c
   14000a689:	lock inc DWORD PTR [rax]
   14000a68c:	mov    rax,QWORD PTR [rcx+0x130]
   14000a693:	test   rax,rax
   14000a696:	je     0x14000a69b
   14000a698:	lock inc DWORD PTR [rax]
   14000a69b:	lea    rax,[rcx+0x58]
   14000a69f:	mov    r8d,0x6
   14000a6a5:	lea    rdx,[rip+0x87f8]        # 0x140012ea4
   14000a6ac:	cmp    QWORD PTR [rax-0x10],rdx
   14000a6b0:	je     0x14000a6bd
   14000a6b2:	mov    rdx,QWORD PTR [rax]
   14000a6b5:	test   rdx,rdx
   14000a6b8:	je     0x14000a6bd
   14000a6ba:	lock inc DWORD PTR [rdx]
   14000a6bd:	cmp    QWORD PTR [rax-0x8],0x0
   14000a6c2:	je     0x14000a6d0
   14000a6c4:	mov    rdx,QWORD PTR [rax+0x8]
   14000a6c8:	test   rdx,rdx
   14000a6cb:	je     0x14000a6d0
   14000a6cd:	lock inc DWORD PTR [rdx]
   14000a6d0:	add    rax,0x20
   14000a6d4:	dec    r8
   14000a6d7:	jne    0x14000a6a5
   14000a6d9:	mov    rax,QWORD PTR [rcx+0x158]
   14000a6e0:	lock inc DWORD PTR [rax+0x160]
   14000a6e7:	ret    
   14000a6e8:	test   rcx,rcx
   14000a6eb:	je     0x14000a788
   14000a6f1:	or     r9d,0xffffffff
   14000a6f5:	lock add DWORD PTR [rcx],r9d
   14000a6f9:	mov    rax,QWORD PTR [rcx+0x110]
   14000a700:	test   rax,rax
   14000a703:	je     0x14000a709
   14000a705:	lock add DWORD PTR [rax],r9d
   14000a709:	mov    rax,QWORD PTR [rcx+0x120]
   14000a710:	test   rax,rax
   14000a713:	je     0x14000a719
   14000a715:	lock add DWORD PTR [rax],r9d
   14000a719:	mov    rax,QWORD PTR [rcx+0x118]
   14000a720:	test   rax,rax
   14000a723:	je     0x14000a729
   14000a725:	lock add DWORD PTR [rax],r9d
   14000a729:	mov    rax,QWORD PTR [rcx+0x130]
   14000a730:	test   rax,rax
   14000a733:	je     0x14000a739
   14000a735:	lock add DWORD PTR [rax],r9d
   14000a739:	lea    rax,[rcx+0x58]
   14000a73d:	mov    r8d,0x6
   14000a743:	lea    rdx,[rip+0x875a]        # 0x140012ea4
   14000a74a:	cmp    QWORD PTR [rax-0x10],rdx
   14000a74e:	je     0x14000a75c
   14000a750:	mov    rdx,QWORD PTR [rax]
   14000a753:	test   rdx,rdx
   14000a756:	je     0x14000a75c
   14000a758:	lock add DWORD PTR [rdx],r9d
   14000a75c:	cmp    QWORD PTR [rax-0x8],0x0
   14000a761:	je     0x14000a770
   14000a763:	mov    rdx,QWORD PTR [rax+0x8]
   14000a767:	test   rdx,rdx
   14000a76a:	je     0x14000a770
   14000a76c:	lock add DWORD PTR [rdx],r9d
   14000a770:	add    rax,0x20
   14000a774:	dec    r8
   14000a777:	jne    0x14000a743
   14000a779:	mov    rax,QWORD PTR [rcx+0x158]
   14000a780:	lock add DWORD PTR [rax+0x160],r9d
   14000a788:	mov    rax,rcx
   14000a78b:	ret    
   14000a78c:	mov    QWORD PTR [rsp+0x8],rbx
   14000a791:	mov    QWORD PTR [rsp+0x10],rsi
   14000a796:	push   rdi
   14000a797:	sub    rsp,0x20
   14000a79b:	mov    rax,QWORD PTR [rcx+0x128]
   14000a7a2:	mov    rbx,rcx
   14000a7a5:	test   rax,rax
   14000a7a8:	je     0x14000a823
   14000a7aa:	lea    rcx,[rip+0x8b4f]        # 0x140013300
   14000a7b1:	cmp    rax,rcx
   14000a7b4:	je     0x14000a823
   14000a7b6:	mov    rax,QWORD PTR [rbx+0x110]
   14000a7bd:	test   rax,rax
   14000a7c0:	je     0x14000a823
   14000a7c2:	cmp    DWORD PTR [rax],0x0
   14000a7c5:	jne    0x14000a823
   14000a7c7:	mov    rcx,QWORD PTR [rbx+0x120]
   14000a7ce:	test   rcx,rcx
   14000a7d1:	je     0x14000a7e9
   14000a7d3:	cmp    DWORD PTR [rcx],0x0
   14000a7d6:	jne    0x14000a7e9
   14000a7d8:	call   0x140001a94
   14000a7dd:	mov    rcx,QWORD PTR [rbx+0x128]
   14000a7e4:	call   0x14000d3a0
   14000a7e9:	mov    rcx,QWORD PTR [rbx+0x118]
   14000a7f0:	test   rcx,rcx
   14000a7f3:	je     0x14000a80b
   14000a7f5:	cmp    DWORD PTR [rcx],0x0
   14000a7f8:	jne    0x14000a80b
   14000a7fa:	call   0x140001a94
   14000a7ff:	mov    rcx,QWORD PTR [rbx+0x128]
   14000a806:	call   0x14000d334
   14000a80b:	mov    rcx,QWORD PTR [rbx+0x110]
   14000a812:	call   0x140001a94
   14000a817:	mov    rcx,QWORD PTR [rbx+0x128]
   14000a81e:	call   0x140001a94
   14000a823:	mov    rax,QWORD PTR [rbx+0x130]
   14000a82a:	test   rax,rax
   14000a82d:	je     0x14000a876
   14000a82f:	cmp    DWORD PTR [rax],0x0
   14000a832:	jne    0x14000a876
   14000a834:	mov    rcx,QWORD PTR [rbx+0x138]
   14000a83b:	sub    rcx,0xfe
   14000a842:	call   0x140001a94
   14000a847:	mov    rcx,QWORD PTR [rbx+0x148]
   14000a84e:	mov    edi,0x80
   14000a853:	sub    rcx,rdi
   14000a856:	call   0x140001a94
   14000a85b:	mov    rcx,QWORD PTR [rbx+0x150]
   14000a862:	sub    rcx,rdi
   14000a865:	call   0x140001a94
   14000a86a:	mov    rcx,QWORD PTR [rbx+0x130]
   14000a871:	call   0x140001a94
   14000a876:	mov    rcx,QWORD PTR [rbx+0x158]
   14000a87d:	lea    rax,[rip+0x862c]        # 0x140012eb0
   14000a884:	cmp    rcx,rax
   14000a887:	je     0x14000a8a3
   14000a889:	cmp    DWORD PTR [rcx+0x160],0x0
   14000a890:	jne    0x14000a8a3
   14000a892:	call   0x14000cf44
   14000a897:	mov    rcx,QWORD PTR [rbx+0x158]
   14000a89e:	call   0x140001a94
   14000a8a3:	lea    rdi,[rbx+0x58]
   14000a8a7:	mov    esi,0x6
   14000a8ac:	lea    rax,[rip+0x85f1]        # 0x140012ea4
   14000a8b3:	cmp    QWORD PTR [rdi-0x10],rax
   14000a8b7:	je     0x14000a8cb
   14000a8b9:	mov    rcx,QWORD PTR [rdi]
   14000a8bc:	test   rcx,rcx
   14000a8bf:	je     0x14000a8cb
   14000a8c1:	cmp    DWORD PTR [rcx],0x0
   14000a8c4:	jne    0x14000a8cb
   14000a8c6:	call   0x140001a94
   14000a8cb:	cmp    QWORD PTR [rdi-0x8],0x0
   14000a8d0:	je     0x14000a8e5
   14000a8d2:	mov    rcx,QWORD PTR [rdi+0x8]
   14000a8d6:	test   rcx,rcx
   14000a8d9:	je     0x14000a8e5
   14000a8db:	cmp    DWORD PTR [rcx],0x0
   14000a8de:	jne    0x14000a8e5
   14000a8e0:	call   0x140001a94
   14000a8e5:	add    rdi,0x20
   14000a8e9:	dec    rsi
   14000a8ec:	jne    0x14000a8ac
   14000a8ee:	mov    rcx,rbx
   14000a8f1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a8f6:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a8fb:	add    rsp,0x20
   14000a8ff:	pop    rdi
   14000a900:	jmp    0x140001a94
   14000a905:	int3   
   14000a906:	int3   
   14000a907:	int3   
   14000a908:	rex push rbx
   14000a90a:	sub    rsp,0x20
   14000a90e:	mov    rbx,rdx
   14000a911:	test   rdx,rdx
   14000a914:	je     0x14000a957
   14000a916:	test   rcx,rcx
   14000a919:	je     0x14000a957
   14000a91b:	mov    r10,QWORD PTR [rcx]
   14000a91e:	cmp    r10,rdx
   14000a921:	je     0x14000a952
   14000a923:	mov    QWORD PTR [rcx],rdx
   14000a926:	mov    rcx,rdx
   14000a929:	call   0x14000a65c
   14000a92e:	test   r10,r10
   14000a931:	je     0x14000a952
   14000a933:	mov    rcx,r10
   14000a936:	call   0x14000a6e8
   14000a93b:	cmp    DWORD PTR [r10],0x0
   14000a93f:	jne    0x14000a952
   14000a941:	lea    rax,[rip+0x8828]        # 0x140013170
   14000a948:	cmp    r10,rax
   14000a94b:	je     0x14000a952
   14000a94d:	call   0x14000a78c
   14000a952:	mov    rax,rbx
   14000a955:	jmp    0x14000a959
   14000a957:	xor    eax,eax
   14000a959:	add    rsp,0x20
   14000a95d:	pop    rbx
   14000a95e:	ret    
   14000a95f:	int3   
   14000a960:	rex push rbx
   14000a962:	sub    rsp,0x20
   14000a966:	call   0x140006f38
   14000a96b:	mov    rbx,rax
   14000a96e:	mov    ecx,DWORD PTR [rax+0xc8]
   14000a974:	test   DWORD PTR [rip+0x8526],ecx        # 0x140012ea0
   14000a97a:	je     0x14000a994
   14000a97c:	cmp    QWORD PTR [rax+0xc0],0x0
   14000a984:	je     0x14000a994
   14000a986:	call   0x140006f38
   14000a98b:	mov    rbx,QWORD PTR [rax+0xc0]
   14000a992:	jmp    0x14000a9bf
   14000a994:	mov    ecx,0xc
   14000a999:	call   0x1400043ec
   14000a99e:	nop
   14000a99f:	lea    rcx,[rbx+0xc0]
   14000a9a6:	mov    rdx,QWORD PTR [rip+0x8923]        # 0x1400132d0
   14000a9ad:	call   0x14000a908
   14000a9b2:	mov    rbx,rax
   14000a9b5:	mov    ecx,0xc
   14000a9ba:	call   0x1400042ec
   14000a9bf:	test   rbx,rbx
   14000a9c2:	jne    0x14000a9cc
   14000a9c4:	lea    ecx,[rbx+0x20]
   14000a9c7:	call   0x1400037e0
   14000a9cc:	mov    rax,rbx
   14000a9cf:	add    rsp,0x20
   14000a9d3:	pop    rbx
   14000a9d4:	ret    
   14000a9d5:	int3   
   14000a9d6:	int3   
   14000a9d7:	int3   
   14000a9d8:	mov    QWORD PTR [rsp+0x18],rbx
   14000a9dd:	mov    QWORD PTR [rsp+0x20],rbp
   14000a9e2:	push   rsi
   14000a9e3:	push   rdi
   14000a9e4:	push   r12
   14000a9e6:	sub    rsp,0x40
   14000a9ea:	mov    rax,QWORD PTR [rip+0x79d7]        # 0x1400123c8
   14000a9f1:	xor    rax,rsp
   14000a9f4:	mov    QWORD PTR [rsp+0x30],rax
   14000a9f9:	test   BYTE PTR [rdx+0x18],0x40
   14000a9fd:	mov    rdi,rdx
   14000aa00:	movzx  esi,cx
   14000aa03:	jne    0x14000ab8e
   14000aa09:	mov    rcx,rdx
   14000aa0c:	call   0x1400055bc
   14000aa11:	lea    rbp,[rip+0x7b38]        # 0x140012550
   14000aa18:	lea    r12,[rip+0x9c01]        # 0x140014620
   14000aa1f:	cmp    eax,0xffffffff
   14000aa22:	je     0x14000aa59
   14000aa24:	mov    rcx,rdi
   14000aa27:	call   0x1400055bc
   14000aa2c:	cmp    eax,0xfffffffe
   14000aa2f:	je     0x14000aa59
   14000aa31:	mov    rcx,rdi
   14000aa34:	call   0x1400055bc
   14000aa39:	mov    rcx,rdi
   14000aa3c:	movsxd rbx,eax
   14000aa3f:	sar    rbx,0x5
   14000aa43:	call   0x1400055bc
   14000aa48:	mov    r11d,eax
   14000aa4b:	and    r11d,0x1f
   14000aa4f:	imul   r11,r11,0x58
   14000aa53:	add    r11,QWORD PTR [r12+rbx*8]
   14000aa57:	jmp    0x14000aa5c
   14000aa59:	mov    r11,rbp
   14000aa5c:	mov    al,BYTE PTR [r11+0x38]
   14000aa60:	and    al,0x7f
   14000aa62:	cmp    al,0x2
   14000aa64:	je     0x14000ab77
   14000aa6a:	mov    rcx,rdi
   14000aa6d:	call   0x1400055bc
   14000aa72:	cmp    eax,0xffffffff
   14000aa75:	je     0x14000aaac
   14000aa77:	mov    rcx,rdi
   14000aa7a:	call   0x1400055bc
   14000aa7f:	cmp    eax,0xfffffffe
   14000aa82:	je     0x14000aaac
   14000aa84:	mov    rcx,rdi
   14000aa87:	call   0x1400055bc
   14000aa8c:	mov    rcx,rdi
   14000aa8f:	movsxd rbx,eax
   14000aa92:	sar    rbx,0x5
   14000aa96:	call   0x1400055bc
   14000aa9b:	mov    r11d,eax
   14000aa9e:	and    r11d,0x1f
   14000aaa2:	imul   r11,r11,0x58
   14000aaa6:	add    r11,QWORD PTR [r12+rbx*8]
   14000aaaa:	jmp    0x14000aaaf
   14000aaac:	mov    r11,rbp
   14000aaaf:	mov    al,BYTE PTR [r11+0x38]
   14000aab3:	and    al,0x7f
   14000aab5:	cmp    al,0x1
   14000aab7:	je     0x14000ab77
   14000aabd:	mov    rcx,rdi
   14000aac0:	call   0x1400055bc
   14000aac5:	cmp    eax,0xffffffff
   14000aac8:	je     0x14000aafb
   14000aaca:	mov    rcx,rdi
   14000aacd:	call   0x1400055bc
   14000aad2:	cmp    eax,0xfffffffe
   14000aad5:	je     0x14000aafb
   14000aad7:	mov    rcx,rdi
   14000aada:	call   0x1400055bc
   14000aadf:	mov    rcx,rdi
   14000aae2:	movsxd rbx,eax
   14000aae5:	sar    rbx,0x5
   14000aae9:	call   0x1400055bc
   14000aaee:	mov    ebp,eax
   14000aaf0:	and    ebp,0x1f
   14000aaf3:	imul   rbp,rbp,0x58
   14000aaf7:	add    rbp,QWORD PTR [r12+rbx*8]
   14000aafb:	test   BYTE PTR [rbp+0x8],0x80
   14000aaff:	je     0x14000ab8e
   14000ab05:	lea    rdx,[rsp+0x24]
   14000ab0a:	lea    rcx,[rsp+0x20]
   14000ab0f:	movzx  r9d,si
   14000ab13:	mov    r8d,0x5
   14000ab19:	call   0x14000c438
   14000ab1e:	xor    ebx,ebx
   14000ab20:	test   eax,eax
   14000ab22:	je     0x14000ab2e
   14000ab24:	mov    eax,0xffff
   14000ab29:	jmp    0x14000abb7
   14000ab2e:	cmp    DWORD PTR [rsp+0x20],ebx
   14000ab32:	jle    0x14000ab72
   14000ab34:	lea    rbp,[rsp+0x24]
   14000ab39:	dec    DWORD PTR [rdi+0x8]
   14000ab3c:	js     0x14000ab54
   14000ab3e:	mov    rcx,QWORD PTR [rdi]
   14000ab41:	mov    al,BYTE PTR [rbp+0x0]
   14000ab44:	mov    BYTE PTR [rcx],al
   14000ab46:	mov    rax,QWORD PTR [rdi]
   14000ab49:	movzx  ecx,BYTE PTR [rax]
   14000ab4c:	inc    rax
   14000ab4f:	mov    QWORD PTR [rdi],rax
   14000ab52:	jmp    0x14000ab62
   14000ab54:	movsx  ecx,BYTE PTR [rbp+0x0]
   14000ab58:	mov    rdx,rdi
   14000ab5b:	call   0x140004680
   14000ab60:	mov    ecx,eax
   14000ab62:	cmp    ecx,0xffffffff
   14000ab65:	je     0x14000ab24
   14000ab67:	inc    ebx
   14000ab69:	inc    rbp
   14000ab6c:	cmp    ebx,DWORD PTR [rsp+0x20]
   14000ab70:	jl     0x14000ab39
   14000ab72:	movzx  eax,si
   14000ab75:	jmp    0x14000abb7
   14000ab77:	movsxd rcx,DWORD PTR [rdi+0x8]
   14000ab7b:	add    rcx,0xfffffffffffffffe
   14000ab7f:	mov    DWORD PTR [rdi+0x8],ecx
   14000ab82:	test   ecx,ecx
   14000ab84:	js     0x14000abac
   14000ab86:	mov    rcx,QWORD PTR [rdi]
   14000ab89:	mov    WORD PTR [rcx],si
   14000ab8c:	jmp    0x14000aba3
   14000ab8e:	movsxd rax,DWORD PTR [rdi+0x8]
   14000ab92:	add    rax,0xfffffffffffffffe
   14000ab96:	mov    DWORD PTR [rdi+0x8],eax
   14000ab99:	test   eax,eax
   14000ab9b:	js     0x14000abac
   14000ab9d:	mov    rax,QWORD PTR [rdi]
   14000aba0:	mov    WORD PTR [rax],si
   14000aba3:	add    QWORD PTR [rdi],0x2
   14000aba7:	movzx  eax,si
   14000abaa:	jmp    0x14000abb7
   14000abac:	mov    rdx,rdi
   14000abaf:	movzx  ecx,si
   14000abb2:	call   0x14000d4ac
   14000abb7:	mov    rcx,QWORD PTR [rsp+0x30]
   14000abbc:	xor    rcx,rsp
   14000abbf:	call   0x140001920
   14000abc4:	mov    rbx,QWORD PTR [rsp+0x70]
   14000abc9:	mov    rbp,QWORD PTR [rsp+0x78]
   14000abce:	add    rsp,0x40
   14000abd2:	pop    r12
   14000abd4:	pop    rdi
   14000abd5:	pop    rsi
   14000abd6:	ret    
   14000abd7:	int3   
   14000abd8:	mov    rcx,QWORD PTR [rip+0x77e9]        # 0x1400123c8
   14000abdf:	xor    eax,eax
   14000abe1:	or     rcx,0x1
   14000abe5:	cmp    QWORD PTR [rip+0x97ec],rcx        # 0x1400143d8
   14000abec:	sete   al
   14000abef:	ret    
   14000abf0:	mov    rax,rsp
   14000abf3:	mov    QWORD PTR [rax+0x8],rbx
   14000abf7:	mov    QWORD PTR [rax+0x10],rsi
   14000abfb:	mov    QWORD PTR [rax+0x18],rdi
   14000abff:	mov    QWORD PTR [rax+0x20],r12
   14000ac03:	push   rbp
   14000ac04:	mov    rbp,rsp
   14000ac07:	sub    rsp,0x50
   14000ac0b:	xor    r12d,r12d
   14000ac0e:	mov    rsi,r8
   14000ac11:	mov    rdi,rdx
   14000ac14:	mov    rbx,rcx
   14000ac17:	test   rdx,rdx
   14000ac1a:	je     0x14000ac2f
   14000ac1c:	test   r8,r8
   14000ac1f:	je     0x14000ac2f
   14000ac21:	cmp    BYTE PTR [rdx],r12b
   14000ac24:	jne    0x14000ac4b
   14000ac26:	test   rcx,rcx
   14000ac29:	je     0x14000ac2f
   14000ac2b:	mov    WORD PTR [rcx],r12w
   14000ac2f:	xor    eax,eax
   14000ac31:	mov    rbx,QWORD PTR [rsp+0x60]
   14000ac36:	mov    rsi,QWORD PTR [rsp+0x68]
   14000ac3b:	mov    rdi,QWORD PTR [rsp+0x70]
   14000ac40:	mov    r12,QWORD PTR [rsp+0x78]
   14000ac45:	add    rsp,0x50
   14000ac49:	pop    rbp
   14000ac4a:	ret    
   14000ac4b:	lea    rcx,[rbp-0x20]
   14000ac4f:	mov    rdx,r9
   14000ac52:	call   0x140004810
   14000ac57:	mov    r11,QWORD PTR [rbp-0x20]
   14000ac5b:	cmp    DWORD PTR [r11+0x14],r12d
   14000ac5f:	jne    0x14000ac84
   14000ac61:	test   rbx,rbx
   14000ac64:	je     0x14000ac6c
   14000ac66:	movzx  eax,BYTE PTR [rdi]
   14000ac69:	mov    WORD PTR [rbx],ax
   14000ac6c:	cmp    BYTE PTR [rbp-0x8],r12b
   14000ac70:	je     0x14000ac7d
   14000ac72:	mov    rax,QWORD PTR [rbp-0x10]
   14000ac76:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000ac7d:	mov    eax,0x1
   14000ac82:	jmp    0x14000ac31
   14000ac84:	movzx  ecx,BYTE PTR [rdi]
   14000ac87:	lea    rdx,[rbp-0x20]
   14000ac8b:	call   0x14000ad70
   14000ac90:	test   eax,eax
   14000ac92:	je     0x14000ad2f
   14000ac98:	mov    rcx,QWORD PTR [rbp-0x20]
   14000ac9c:	mov    r9d,DWORD PTR [rcx+0x10c]
   14000aca3:	cmp    r9d,0x1
   14000aca7:	jle    0x14000acd9
   14000aca9:	cmp    esi,r9d
   14000acac:	jl     0x14000acd9
   14000acae:	mov    ecx,DWORD PTR [rcx+0x4]
   14000acb1:	mov    eax,r12d
   14000acb4:	test   rbx,rbx
   14000acb7:	setne  al
   14000acba:	mov    r8,rdi
   14000acbd:	mov    edx,0x9
   14000acc2:	mov    DWORD PTR [rsp+0x28],eax
   14000acc6:	mov    QWORD PTR [rsp+0x20],rbx
   14000accb:	call   QWORD PTR [rip+0x3387]        # 0x14000e058
   14000acd1:	mov    rcx,QWORD PTR [rbp-0x20]
   14000acd5:	test   eax,eax
   14000acd7:	jne    0x14000aceb
   14000acd9:	movsxd rax,DWORD PTR [rcx+0x10c]
   14000ace0:	cmp    rsi,rax
   14000ace3:	jb     0x14000ad0b
   14000ace5:	cmp    BYTE PTR [rdi+0x1],r12b
   14000ace9:	je     0x14000ad0b
   14000aceb:	mov    eax,DWORD PTR [rcx+0x10c]
   14000acf1:	cmp    BYTE PTR [rbp-0x8],r12b
   14000acf5:	je     0x14000ac31
   14000acfb:	mov    rcx,QWORD PTR [rbp-0x10]
   14000acff:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000ad06:	jmp    0x14000ac31
   14000ad0b:	call   0x140003250
   14000ad10:	mov    DWORD PTR [rax],0x2a
   14000ad16:	cmp    BYTE PTR [rbp-0x8],r12b
   14000ad1a:	je     0x14000ad27
   14000ad1c:	mov    rax,QWORD PTR [rbp-0x10]
   14000ad20:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000ad27:	or     eax,0xffffffff
   14000ad2a:	jmp    0x14000ac31
   14000ad2f:	mov    eax,r12d
   14000ad32:	mov    r9d,0x1
   14000ad38:	test   rbx,rbx
   14000ad3b:	setne  al
   14000ad3e:	lea    edx,[r9+0x8]
   14000ad42:	mov    r8,rdi
   14000ad45:	mov    DWORD PTR [rsp+0x28],eax
   14000ad49:	mov    rax,QWORD PTR [rbp-0x20]
   14000ad4d:	mov    QWORD PTR [rsp+0x20],rbx
   14000ad52:	mov    ecx,DWORD PTR [rax+0x4]
   14000ad55:	call   QWORD PTR [rip+0x32fd]        # 0x14000e058
   14000ad5b:	test   eax,eax
   14000ad5d:	jne    0x14000ac6c
   14000ad63:	jmp    0x14000ad0b
   14000ad65:	int3   
   14000ad66:	int3   
   14000ad67:	int3   
   14000ad68:	xor    r9d,r9d
   14000ad6b:	jmp    0x14000abf0
   14000ad70:	rex push rbx
   14000ad72:	sub    rsp,0x40
   14000ad76:	mov    ebx,ecx
   14000ad78:	lea    rcx,[rsp+0x20]
   14000ad7d:	call   0x140004810
   14000ad82:	mov    rax,QWORD PTR [rsp+0x20]
   14000ad87:	movzx  r11d,bl
   14000ad8b:	mov    rcx,QWORD PTR [rax+0x140]
   14000ad92:	movzx  eax,WORD PTR [rcx+r11*2]
   14000ad97:	and    eax,0x8000
   14000ad9c:	cmp    BYTE PTR [rsp+0x38],0x0
   14000ada1:	je     0x14000adaf
   14000ada3:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ada8:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000adaf:	add    rsp,0x40
   14000adb3:	pop    rbx
   14000adb4:	ret    
   14000adb5:	int3   
   14000adb6:	int3   
   14000adb7:	int3   
   14000adb8:	rex push rbx
   14000adba:	sub    rsp,0x40
   14000adbe:	mov    ebx,ecx
   14000adc0:	lea    rcx,[rsp+0x20]
   14000adc5:	xor    edx,edx
   14000adc7:	call   0x140004810
   14000adcc:	mov    rax,QWORD PTR [rsp+0x20]
   14000add1:	movzx  r11d,bl
   14000add5:	mov    rcx,QWORD PTR [rax+0x140]
   14000addc:	movzx  eax,WORD PTR [rcx+r11*2]
   14000ade1:	and    eax,0x8000
   14000ade6:	cmp    BYTE PTR [rsp+0x38],0x0
   14000adeb:	je     0x14000adf9
   14000aded:	mov    rcx,QWORD PTR [rsp+0x30]
   14000adf2:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000adf9:	add    rsp,0x40
   14000adfd:	pop    rbx
   14000adfe:	ret    
   14000adff:	int3   
   14000ae00:	rex push rbx
   14000ae02:	sub    rsp,0x20
   14000ae06:	test   BYTE PTR [rdx+0x18],0x40
   14000ae0a:	mov    rbx,r8
   14000ae0d:	je     0x14000ae1b
   14000ae0f:	cmp    QWORD PTR [rdx+0x10],0x0
   14000ae14:	jne    0x14000ae1b
   14000ae16:	inc    DWORD PTR [r8]
   14000ae19:	jmp    0x14000ae31
   14000ae1b:	call   0x14000a9d8
   14000ae20:	mov    ecx,0xffff
   14000ae25:	cmp    ax,cx
   14000ae28:	jne    0x14000ae2f
   14000ae2a:	or     DWORD PTR [rbx],0xffffffff
   14000ae2d:	jmp    0x14000ae31
   14000ae2f:	inc    DWORD PTR [rbx]
   14000ae31:	add    rsp,0x20
   14000ae35:	pop    rbx
   14000ae36:	ret    
   14000ae37:	int3   
   14000ae38:	test   edx,edx
   14000ae3a:	jle    0x14000ae88
   14000ae3c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ae41:	mov    QWORD PTR [rsp+0x10],rbp
   14000ae46:	mov    QWORD PTR [rsp+0x18],rsi
   14000ae4b:	push   rdi
   14000ae4c:	sub    rsp,0x20
   14000ae50:	mov    rdi,r9
   14000ae53:	mov    rsi,r8
   14000ae56:	mov    ebx,edx
   14000ae58:	movzx  ebp,cx
   14000ae5b:	mov    r8,rdi
   14000ae5e:	mov    rdx,rsi
   14000ae61:	movzx  ecx,bp
   14000ae64:	dec    ebx
   14000ae66:	call   0x14000ae00
   14000ae6b:	cmp    DWORD PTR [rdi],0xffffffff
   14000ae6e:	je     0x14000ae74
   14000ae70:	test   ebx,ebx
   14000ae72:	jg     0x14000ae5b
   14000ae74:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ae79:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ae7e:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ae83:	add    rsp,0x20
   14000ae87:	pop    rdi
   14000ae88:	ret    
   14000ae89:	int3   
   14000ae8a:	int3   
   14000ae8b:	int3   
   14000ae8c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ae91:	mov    QWORD PTR [rsp+0x10],rbp
   14000ae96:	mov    QWORD PTR [rsp+0x18],rsi
   14000ae9b:	push   rdi
   14000ae9c:	push   r12
   14000ae9e:	push   r13
   14000aea0:	sub    rsp,0x20
   14000aea4:	test   BYTE PTR [r8+0x18],0x40
   14000aea9:	mov    rbx,QWORD PTR [rsp+0x60]
   14000aeae:	mov    rdi,r9
   14000aeb1:	mov    r12d,DWORD PTR [rbx]
   14000aeb4:	mov    rbp,r8
   14000aeb7:	mov    esi,edx
   14000aeb9:	mov    r13,rcx
   14000aebc:	je     0x14000aeca
   14000aebe:	cmp    QWORD PTR [r8+0x10],0x0
   14000aec3:	jne    0x14000aeca
   14000aec5:	add    DWORD PTR [r9],edx
   14000aec8:	jmp    0x14000af0d
   14000aeca:	and    DWORD PTR [rbx],0x0
   14000aecd:	test   edx,edx
   14000aecf:	jle    0x14000af0a
   14000aed1:	movzx  ecx,WORD PTR [r13+0x0]
   14000aed6:	mov    r8,rdi
   14000aed9:	mov    rdx,rbp
   14000aedc:	dec    esi
   14000aede:	call   0x14000ae00
   14000aee3:	add    r13,0x2
   14000aee7:	cmp    DWORD PTR [rdi],0xffffffff
   14000aeea:	jne    0x14000af01
   14000aeec:	cmp    DWORD PTR [rbx],0x2a
   14000aeef:	jne    0x14000af05
   14000aef1:	mov    ecx,0x3f
   14000aef6:	mov    r8,rdi
   14000aef9:	mov    rdx,rbp
   14000aefc:	call   0x14000ae00
   14000af01:	test   esi,esi
   14000af03:	jg     0x14000aed1
   14000af05:	cmp    DWORD PTR [rbx],0x0
   14000af08:	jne    0x14000af0d
   14000af0a:	mov    DWORD PTR [rbx],r12d
   14000af0d:	mov    rbx,QWORD PTR [rsp+0x40]
   14000af12:	mov    rbp,QWORD PTR [rsp+0x48]
   14000af17:	mov    rsi,QWORD PTR [rsp+0x50]
   14000af1c:	add    rsp,0x20
   14000af20:	pop    r13
   14000af22:	pop    r12
   14000af24:	pop    rdi
   14000af25:	ret    
   14000af26:	int3   
   14000af27:	int3   
   14000af28:	mov    QWORD PTR [rsp+0x18],rbx
   14000af2d:	push   rbp
   14000af2e:	push   rsi
   14000af2f:	push   rdi
   14000af30:	push   r12
   14000af32:	push   r13
   14000af34:	push   r14
   14000af36:	push   r15
   14000af38:	lea    rbp,[rsp-0x3e0]
   14000af40:	sub    rsp,0x4e0
   14000af47:	mov    rax,QWORD PTR [rip+0x747a]        # 0x1400123c8
   14000af4e:	xor    rax,rsp
   14000af51:	mov    QWORD PTR [rbp+0x3d0],rax
   14000af58:	xor    eax,eax
   14000af5a:	mov    rbx,rcx
   14000af5d:	mov    QWORD PTR [rsp+0x78],rcx
   14000af62:	mov    QWORD PTR [rbp-0x80],rdx
   14000af66:	lea    rcx,[rbp-0x70]
   14000af6a:	mov    rdx,r8
   14000af6d:	mov    r14,r9
   14000af70:	mov    QWORD PTR [rsp+0x50],r9
   14000af75:	mov    DWORD PTR [rsp+0x70],eax
   14000af79:	mov    r12d,eax
   14000af7c:	mov    DWORD PTR [rsp+0x58],eax
   14000af80:	mov    edi,eax
   14000af82:	mov    DWORD PTR [rsp+0x48],eax
   14000af86:	mov    DWORD PTR [rsp+0x4c],eax
   14000af8a:	mov    DWORD PTR [rsp+0x6c],eax
   14000af8e:	mov    DWORD PTR [rsp+0x44],eax
   14000af92:	call   0x140004810
   14000af97:	call   0x140003250
   14000af9c:	xor    r10d,r10d
   14000af9f:	mov    QWORD PTR [rbp-0x48],rax
   14000afa3:	test   rbx,rbx
   14000afa6:	jne    0x14000afd4
   14000afa8:	call   0x140003250
   14000afad:	mov    DWORD PTR [rax],0x16
   14000afb3:	call   0x1400031e8
   14000afb8:	xor    r11d,r11d
   14000afbb:	cmp    BYTE PTR [rbp-0x58],r11b
   14000afbf:	je     0x14000afcc
   14000afc1:	mov    rax,QWORD PTR [rbp-0x60]
   14000afc5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000afcc:	or     eax,0xffffffff
   14000afcf:	jmp    0x14000ba30
   14000afd4:	mov    r8,QWORD PTR [rbp-0x80]
   14000afd8:	test   r8,r8
   14000afdb:	je     0x14000afa8
   14000afdd:	movzx  r13d,WORD PTR [r8]
   14000afe1:	mov    edx,r10d
   14000afe4:	mov    r15d,r10d
   14000afe7:	mov    r9d,r10d
   14000afea:	mov    QWORD PTR [rbp-0x50],r10
   14000afee:	mov    DWORD PTR [rsp+0x40],edx
   14000aff2:	test   r13w,r13w
   14000aff6:	je     0x14000ba1d
   14000affc:	mov    rbx,QWORD PTR [rbp-0x40]
   14000b000:	or     esi,0xffffffff
   14000b003:	lea    ecx,[rsi+0x59]
   14000b006:	lea    r11d,[rsi+0x21]
   14000b00a:	add    r8,0x2
   14000b00e:	mov    QWORD PTR [rbp-0x80],r8
   14000b012:	test   edx,edx
   14000b014:	js     0x14000ba12
   14000b01a:	movzx  eax,r13w
   14000b01e:	sub    ax,r11w
   14000b022:	cmp    ax,cx
   14000b025:	ja     0x14000b03c
   14000b027:	lea    rcx,[rip+0x4842]        # 0x14000f870
   14000b02e:	movzx  eax,r13w
   14000b032:	movzx  ecx,BYTE PTR [rax+rcx*1-0x20]
   14000b037:	and    ecx,0xf
   14000b03a:	jmp    0x14000b03f
   14000b03c:	mov    ecx,r10d
   14000b03f:	movsxd rax,ecx
   14000b042:	lea    rcx,[rax+rax*8]
   14000b046:	movsxd rax,r9d
   14000b049:	add    rcx,rax
   14000b04c:	lea    rax,[rip+0x481d]        # 0x14000f870
   14000b053:	movzx  r9d,BYTE PTR [rcx+rax*1]
   14000b058:	shr    r9d,0x4
   14000b05c:	mov    DWORD PTR [rsp+0x68],r9d
   14000b061:	cmp    r9d,0x8
   14000b065:	je     0x14000ba5a
   14000b06b:	mov    ecx,r9d
   14000b06e:	test   r9d,r9d
   14000b071:	je     0x14000b8c1
   14000b077:	dec    ecx
   14000b079:	je     0x14000b9cc
   14000b07f:	dec    ecx
   14000b081:	je     0x14000b97f
   14000b087:	dec    ecx
   14000b089:	je     0x14000b934
   14000b08f:	dec    ecx
   14000b091:	je     0x14000b927
   14000b097:	dec    ecx
   14000b099:	je     0x14000b8e4
   14000b09f:	dec    ecx
   14000b0a1:	je     0x14000b7ce
   14000b0a7:	dec    ecx
   14000b0a9:	jne    0x14000b9ff
   14000b0af:	movzx  eax,r13w
   14000b0b3:	mov    ecx,0x64
   14000b0b8:	cmp    eax,ecx
   14000b0ba:	jg     0x14000b2d2
   14000b0c0:	je     0x14000b3fb
   14000b0c6:	cmp    eax,0x41
   14000b0c9:	je     0x14000b29b
   14000b0cf:	cmp    eax,0x43
   14000b0d2:	je     0x14000b229
   14000b0d8:	cmp    eax,0x45
   14000b0db:	je     0x14000b29b
   14000b0e1:	cmp    eax,0x47
   14000b0e4:	je     0x14000b29b
   14000b0ea:	cmp    eax,0x53
   14000b0ed:	je     0x14000b1b4
   14000b0f3:	cmp    eax,0x58
   14000b0f6:	je     0x14000b377
   14000b0fc:	cmp    eax,0x5a
   14000b0ff:	je     0x14000b150
   14000b101:	cmp    eax,0x61
   14000b104:	je     0x14000b2a6
   14000b10a:	cmp    eax,0x63
   14000b10d:	je     0x14000b235
   14000b113:	mov    r13d,DWORD PTR [rsp+0x44]
   14000b118:	mov    edi,0x2d
   14000b11d:	cmp    DWORD PTR [rsp+0x6c],r10d
   14000b122:	jne    0x14000b785
   14000b128:	test   r12b,0x40
   14000b12c:	je     0x14000b661
   14000b132:	bt     r12d,0x8
   14000b137:	jae    0x14000b633
   14000b13d:	mov    WORD PTR [rsp+0x5c],di
   14000b142:	mov    edi,0x1
   14000b147:	mov    DWORD PTR [rsp+0x4c],edi
   14000b14b:	jmp    0x14000b665
   14000b150:	mov    rax,QWORD PTR [r14]
   14000b153:	add    r14,0x8
   14000b157:	mov    QWORD PTR [rsp+0x50],r14
   14000b15c:	test   rax,rax
   14000b15f:	je     0x14000b19a
   14000b161:	mov    rbx,QWORD PTR [rax+0x8]
   14000b165:	test   rbx,rbx
   14000b168:	je     0x14000b19a
   14000b16a:	mov    edi,0x2d
   14000b16f:	bt     r12d,0xb
   14000b174:	jae    0x14000b18c
   14000b176:	movsx  eax,WORD PTR [rax]
   14000b179:	lea    r13d,[rdi-0x2c]
   14000b17d:	cdq    
   14000b17e:	mov    DWORD PTR [rsp+0x44],r13d
   14000b183:	sub    eax,edx
   14000b185:	sar    eax,1
   14000b187:	mov    r15d,eax
   14000b18a:	jmp    0x14000b11d
   14000b18c:	movsx  r15d,WORD PTR [rax]
   14000b190:	mov    r13d,r10d
   14000b193:	mov    DWORD PTR [rsp+0x44],r10d
   14000b198:	jmp    0x14000b11d
   14000b19a:	mov    rbx,QWORD PTR [rip+0x774f]        # 0x1400128f0
   14000b1a1:	mov    rcx,rbx
   14000b1a4:	call   0x140008210
   14000b1a9:	xor    r10d,r10d
   14000b1ac:	mov    r15,rax
   14000b1af:	jmp    0x14000b113
   14000b1b4:	test   r12d,0x830
   14000b1bb:	jne    0x14000b1c0
   14000b1bd:	or     r12d,r11d
   14000b1c0:	cmp    DWORD PTR [rsp+0x48],esi
   14000b1c4:	mov    rbx,QWORD PTR [r14]
   14000b1c7:	mov    eax,0x7fffffff
   14000b1cc:	cmove  edi,eax
   14000b1cf:	add    r14,0x8
   14000b1d3:	mov    QWORD PTR [rsp+0x50],r14
   14000b1d8:	test   r11b,r12b
   14000b1db:	je     0x14000b334
   14000b1e1:	test   rbx,rbx
   14000b1e4:	mov    r15d,r10d
   14000b1e7:	cmove  rbx,QWORD PTR [rip+0x7701]        # 0x1400128f0
   14000b1ef:	mov    rsi,rbx
   14000b1f2:	test   edi,edi
   14000b1f4:	jle    0x14000b113
   14000b1fa:	cmp    BYTE PTR [rsi],r10b
   14000b1fd:	je     0x14000b113
   14000b203:	movzx  ecx,BYTE PTR [rsi]
   14000b206:	lea    rdx,[rbp-0x70]
   14000b20a:	call   0x14000ad70
   14000b20f:	xor    r10d,r10d
   14000b212:	test   eax,eax
   14000b214:	je     0x14000b219
   14000b216:	inc    rsi
   14000b219:	inc    r15d
   14000b21c:	inc    rsi
   14000b21f:	cmp    r15d,edi
   14000b222:	jl     0x14000b1fa
   14000b224:	jmp    0x14000b113
   14000b229:	test   r12d,0x830
   14000b230:	jne    0x14000b235
   14000b232:	or     r12d,r11d
   14000b235:	movzx  eax,WORD PTR [r14]
   14000b239:	add    r14,0x8
   14000b23d:	mov    r13d,0x1
   14000b243:	mov    WORD PTR [rsp+0x60],ax
   14000b248:	mov    DWORD PTR [rsp+0x44],r13d
   14000b24d:	mov    QWORD PTR [rsp+0x50],r14
   14000b252:	test   r11b,r12b
   14000b255:	je     0x14000b28b
   14000b257:	mov    BYTE PTR [rsp+0x64],al
   14000b25b:	mov    rax,QWORD PTR [rbp-0x70]
   14000b25f:	mov    BYTE PTR [rsp+0x65],r10b
   14000b264:	movsxd r8,DWORD PTR [rax+0x10c]
   14000b26b:	lea    r9,[rbp-0x70]
   14000b26f:	lea    rdx,[rsp+0x64]
   14000b274:	lea    rcx,[rbp-0x30]
   14000b278:	call   0x14000abf0
   14000b27d:	xor    r10d,r10d
   14000b280:	test   eax,eax
   14000b282:	jns    0x14000b28f
   14000b284:	mov    DWORD PTR [rsp+0x6c],r13d
   14000b289:	jmp    0x14000b28f
   14000b28b:	mov    WORD PTR [rbp-0x30],ax
   14000b28f:	lea    rbx,[rbp-0x30]
   14000b293:	mov    r15d,r13d
   14000b296:	jmp    0x14000b118
   14000b29b:	mov    DWORD PTR [rbp-0x78],0x1
   14000b2a2:	add    r13w,r11w
   14000b2a6:	mov    ecx,0x67
   14000b2ab:	mov    eax,0x200
   14000b2b0:	or     r12d,0x40
   14000b2b4:	lea    rbx,[rbp-0x30]
   14000b2b8:	mov    esi,eax
   14000b2ba:	test   edi,edi
   14000b2bc:	jns    0x14000b51e
   14000b2c2:	mov    r15d,0x6
   14000b2c8:	mov    DWORD PTR [rsp+0x48],r15d
   14000b2cd:	jmp    0x14000b56f
   14000b2d2:	cmp    eax,0x65
   14000b2d5:	jl     0x14000b113
   14000b2db:	mov    ecx,0x67
   14000b2e0:	cmp    eax,ecx
   14000b2e2:	jle    0x14000b2ab
   14000b2e4:	mov    ecx,0x69
   14000b2e9:	cmp    eax,ecx
   14000b2eb:	je     0x14000b3fb
   14000b2f1:	cmp    eax,0x6e
   14000b2f4:	je     0x14000b3be
   14000b2fa:	mov    ecx,0x6f
   14000b2ff:	cmp    eax,ecx
   14000b301:	je     0x14000b3a9
   14000b307:	cmp    eax,0x70
   14000b30a:	je     0x14000b36d
   14000b30c:	cmp    eax,0x73
   14000b30f:	je     0x14000b1c0
   14000b315:	mov    ecx,0x75
   14000b31a:	cmp    eax,ecx
   14000b31c:	je     0x14000b3ff
   14000b322:	mov    ecx,0x78
   14000b327:	cmp    eax,ecx
   14000b329:	jne    0x14000b624
   14000b32f:	lea    eax,[rcx-0x51]
   14000b332:	jmp    0x14000b37c
   14000b334:	test   rbx,rbx
   14000b337:	mov    r13d,0x1
   14000b33d:	cmove  rbx,QWORD PTR [rip+0x75b3]        # 0x1400128f8
   14000b345:	mov    DWORD PTR [rsp+0x44],r13d
   14000b34a:	mov    rax,rbx
   14000b34d:	jmp    0x14000b35b
   14000b34f:	dec    edi
   14000b351:	cmp    WORD PTR [rax],r10w
   14000b355:	je     0x14000b35f
   14000b357:	add    rax,0x2
   14000b35b:	test   edi,edi
   14000b35d:	jne    0x14000b34f
   14000b35f:	sub    rax,rbx
   14000b362:	sar    rax,1
   14000b365:	mov    r15d,eax
   14000b368:	jmp    0x14000b118
   14000b36d:	mov    edi,0x10
   14000b372:	bts    r12d,0xf
   14000b377:	mov    eax,0x7
   14000b37c:	mov    r9d,0x10
   14000b382:	mov    DWORD PTR [rsp+0x70],eax
   14000b386:	mov    esi,0x200
   14000b38b:	lea    r13d,[r9+0x20]
   14000b38f:	test   r12b,r12b
   14000b392:	jns    0x14000b410
   14000b394:	add    ax,0x51
   14000b398:	mov    WORD PTR [rsp+0x5c],r13w
   14000b39e:	lea    edx,[r9-0xe]
   14000b3a2:	mov    WORD PTR [rsp+0x5e],ax
   14000b3a7:	jmp    0x14000b414
   14000b3a9:	mov    r9d,0x8
   14000b3af:	test   r12b,r12b
   14000b3b2:	jns    0x14000b405
   14000b3b4:	mov    esi,0x200
   14000b3b9:	or     r12d,esi
   14000b3bc:	jmp    0x14000b40a
   14000b3be:	mov    rdi,QWORD PTR [r14]
   14000b3c1:	add    r14,0x8
   14000b3c5:	mov    QWORD PTR [rsp+0x50],r14
   14000b3ca:	call   0x14000abd8
   14000b3cf:	xor    r10d,r10d
   14000b3d2:	test   eax,eax
   14000b3d4:	je     0x14000ba5a
   14000b3da:	mov    eax,DWORD PTR [rsp+0x40]
   14000b3de:	lea    r11d,[r10+0x20]
   14000b3e2:	test   r11b,r12b
   14000b3e5:	je     0x14000b3ec
   14000b3e7:	mov    WORD PTR [rdi],ax
   14000b3ea:	jmp    0x14000b3ee
   14000b3ec:	mov    DWORD PTR [rdi],eax
   14000b3ee:	mov    DWORD PTR [rsp+0x6c],0x1
   14000b3f6:	jmp    0x14000b78b
   14000b3fb:	or     r12d,0x40
   14000b3ff:	mov    r9d,0xa
   14000b405:	mov    esi,0x200
   14000b40a:	mov    r13d,0x30
   14000b410:	mov    edx,DWORD PTR [rsp+0x4c]
   14000b414:	mov    eax,0x8000
   14000b419:	test   eax,r12d
   14000b41c:	je     0x14000b427
   14000b41e:	mov    r8,QWORD PTR [r14]
   14000b421:	add    r14,0x8
   14000b425:	jmp    0x14000b460
   14000b427:	bt     r12d,0xc
   14000b42c:	jb     0x14000b41e
   14000b42e:	add    r14,0x8
   14000b432:	test   r11b,r12b
   14000b435:	je     0x14000b450
   14000b437:	mov    QWORD PTR [rsp+0x50],r14
   14000b43c:	test   r12b,0x40
   14000b440:	je     0x14000b449
   14000b442:	movsx  r8,WORD PTR [r14-0x8]
   14000b447:	jmp    0x14000b465
   14000b449:	movzx  r8d,WORD PTR [r14-0x8]
   14000b44e:	jmp    0x14000b465
   14000b450:	test   r12b,0x40
   14000b454:	je     0x14000b45c
   14000b456:	movsxd r8,DWORD PTR [r14-0x8]
   14000b45a:	jmp    0x14000b460
   14000b45c:	mov    r8d,DWORD PTR [r14-0x8]
   14000b460:	mov    QWORD PTR [rsp+0x50],r14
   14000b465:	test   r12b,0x40
   14000b469:	je     0x14000b478
   14000b46b:	test   r8,r8
   14000b46e:	jns    0x14000b478
   14000b470:	neg    r8
   14000b473:	bts    r12d,0x8
   14000b478:	test   eax,r12d
   14000b47b:	jne    0x14000b487
   14000b47d:	bt     r12d,0xc
   14000b482:	jb     0x14000b487
   14000b484:	mov    r8d,r8d
   14000b487:	test   edi,edi
   14000b489:	jns    0x14000b492
   14000b48b:	mov    edi,0x1
   14000b490:	jmp    0x14000b49b
   14000b492:	and    r12d,0xfffffff7
   14000b496:	cmp    edi,esi
   14000b498:	cmovg  edi,esi
   14000b49b:	mov    r14d,DWORD PTR [rsp+0x70]
   14000b4a0:	mov    rax,r8
   14000b4a3:	lea    rbx,[rbp+0x1cf]
   14000b4aa:	neg    rax
   14000b4ad:	sbb    ecx,ecx
   14000b4af:	and    ecx,edx
   14000b4b1:	mov    DWORD PTR [rsp+0x4c],ecx
   14000b4b5:	mov    ecx,edi
   14000b4b7:	dec    edi
   14000b4b9:	test   ecx,ecx
   14000b4bb:	jg     0x14000b4c2
   14000b4bd:	test   r8,r8
   14000b4c0:	je     0x14000b4e2
   14000b4c2:	xor    edx,edx
   14000b4c4:	mov    rax,r8
   14000b4c7:	movsxd rcx,r9d
   14000b4ca:	div    rcx
   14000b4cd:	mov    r8,rax
   14000b4d0:	lea    eax,[rdx+0x30]
   14000b4d3:	cmp    eax,0x39
   14000b4d6:	jle    0x14000b4db
   14000b4d8:	add    eax,r14d
   14000b4db:	mov    BYTE PTR [rbx],al
   14000b4dd:	dec    rbx
   14000b4e0:	jmp    0x14000b4b5
   14000b4e2:	mov    r14,QWORD PTR [rsp+0x50]
   14000b4e7:	lea    rax,[rbp+0x1cf]
   14000b4ee:	mov    DWORD PTR [rsp+0x48],edi
   14000b4f2:	sub    eax,ebx
   14000b4f4:	inc    rbx
   14000b4f7:	mov    r15d,eax
   14000b4fa:	test   esi,r12d
   14000b4fd:	je     0x14000b113
   14000b503:	test   eax,eax
   14000b505:	je     0x14000b510
   14000b507:	cmp    BYTE PTR [rbx],r13b
   14000b50a:	je     0x14000b113
   14000b510:	dec    rbx
   14000b513:	inc    r15d
   14000b516:	mov    BYTE PTR [rbx],r13b
   14000b519:	jmp    0x14000b113
   14000b51e:	jne    0x14000b531
   14000b520:	cmp    r13w,cx
   14000b524:	jne    0x14000b565
   14000b526:	mov    r15d,0x1
   14000b52c:	jmp    0x14000b2c8
   14000b531:	cmp    edi,eax
   14000b533:	mov    r15d,0xa3
   14000b539:	cmovg  edi,eax
   14000b53c:	mov    DWORD PTR [rsp+0x48],edi
   14000b540:	cmp    edi,r15d
   14000b543:	jle    0x14000b56c
   14000b545:	add    edi,0x15d
   14000b54b:	movsxd rcx,edi
   14000b54e:	call   0x140003de8
   14000b553:	mov    QWORD PTR [rbp-0x50],rax
   14000b557:	test   rax,rax
   14000b55a:	je     0x14000b2c8
   14000b560:	mov    rbx,rax
   14000b563:	mov    esi,edi
   14000b565:	mov    r15d,DWORD PTR [rsp+0x48]
   14000b56a:	jmp    0x14000b56f
   14000b56c:	mov    r15d,edi
   14000b56f:	mov    rax,QWORD PTR [r14]
   14000b572:	mov    rcx,QWORD PTR [rip+0x73d7]        # 0x140012950
   14000b579:	add    r14,0x8
   14000b57d:	mov    QWORD PTR [rsp+0x50],r14
   14000b582:	movsx  edi,r13b
   14000b586:	movsxd rsi,esi
   14000b589:	mov    QWORD PTR [rbp-0x40],rax
   14000b58d:	call   QWORD PTR [rip+0x2b7d]        # 0x14000e110
   14000b593:	lea    rcx,[rbp-0x70]
   14000b597:	mov    QWORD PTR [rsp+0x30],rcx
   14000b59c:	mov    ecx,DWORD PTR [rbp-0x78]
   14000b59f:	mov    r9d,edi
   14000b5a2:	mov    DWORD PTR [rsp+0x28],ecx
   14000b5a6:	lea    rcx,[rbp-0x40]
   14000b5aa:	mov    r8,rsi
   14000b5ad:	mov    rdx,rbx
   14000b5b0:	mov    DWORD PTR [rsp+0x20],r15d
   14000b5b5:	call   rax
   14000b5b7:	mov    edi,r12d
   14000b5ba:	and    edi,0x80
   14000b5c0:	je     0x14000b5dd
   14000b5c2:	test   r15d,r15d
   14000b5c5:	jne    0x14000b5dd
   14000b5c7:	mov    rcx,QWORD PTR [rip+0x739a]        # 0x140012968
   14000b5ce:	call   QWORD PTR [rip+0x2b3c]        # 0x14000e110
   14000b5d4:	lea    rdx,[rbp-0x70]
   14000b5d8:	mov    rcx,rbx
   14000b5db:	call   rax
   14000b5dd:	mov    ecx,0x67
   14000b5e2:	cmp    r13w,cx
   14000b5e6:	jne    0x14000b602
   14000b5e8:	test   edi,edi
   14000b5ea:	jne    0x14000b602
   14000b5ec:	mov    rcx,QWORD PTR [rip+0x736d]        # 0x140012960
   14000b5f3:	call   QWORD PTR [rip+0x2b17]        # 0x14000e110
   14000b5f9:	lea    rdx,[rbp-0x70]
   14000b5fd:	mov    rcx,rbx
   14000b600:	call   rax
   14000b602:	mov    edi,0x2d
   14000b607:	cmp    BYTE PTR [rbx],dil
   14000b60a:	jne    0x14000b614
   14000b60c:	bts    r12d,0x8
   14000b611:	inc    rbx
   14000b614:	mov    rcx,rbx
   14000b617:	call   0x140008210
   14000b61c:	xor    r10d,r10d
   14000b61f:	mov    r15d,eax
   14000b622:	jmp    0x14000b629
   14000b624:	mov    edi,0x2d
   14000b629:	mov    r13d,DWORD PTR [rsp+0x44]
   14000b62e:	jmp    0x14000b11d
   14000b633:	test   r12b,0x1
   14000b637:	je     0x14000b648
   14000b639:	mov    eax,0x2b
   14000b63e:	mov    WORD PTR [rsp+0x5c],ax
   14000b643:	jmp    0x14000b142
   14000b648:	test   r12b,0x2
   14000b64c:	je     0x14000b661
   14000b64e:	mov    eax,0x20
   14000b653:	mov    WORD PTR [rsp+0x5c],ax
   14000b658:	lea    edi,[rax-0x1f]
   14000b65b:	mov    DWORD PTR [rsp+0x4c],edi
   14000b65f:	jmp    0x14000b66a
   14000b661:	mov    edi,DWORD PTR [rsp+0x4c]
   14000b665:	mov    eax,0x20
   14000b66a:	mov    r14d,DWORD PTR [rsp+0x58]
   14000b66f:	mov    rsi,QWORD PTR [rsp+0x78]
   14000b674:	sub    r14d,r15d
   14000b677:	sub    r14d,edi
   14000b67a:	test   r12b,0xc
   14000b67e:	jne    0x14000b692
   14000b680:	lea    r9,[rsp+0x40]
   14000b685:	mov    ecx,eax
   14000b687:	mov    r8,rsi
   14000b68a:	mov    edx,r14d
   14000b68d:	call   0x14000ae38
   14000b692:	mov    rax,QWORD PTR [rbp-0x48]
   14000b696:	lea    r9,[rsp+0x40]
   14000b69b:	lea    rcx,[rsp+0x5c]
   14000b6a0:	mov    r8,rsi
   14000b6a3:	mov    edx,edi
   14000b6a5:	mov    QWORD PTR [rsp+0x20],rax
   14000b6aa:	call   0x14000ae8c
   14000b6af:	test   r12b,0x8
   14000b6b3:	je     0x14000b6d0
   14000b6b5:	test   r12b,0x4
   14000b6b9:	jne    0x14000b6d0
   14000b6bb:	lea    r9,[rsp+0x40]
   14000b6c0:	mov    ecx,0x30
   14000b6c5:	mov    r8,rsi
   14000b6c8:	mov    edx,r14d
   14000b6cb:	call   0x14000ae38
   14000b6d0:	test   r13d,r13d
   14000b6d3:	jne    0x14000b73b
   14000b6d5:	test   r15d,r15d
   14000b6d8:	jle    0x14000b73b
   14000b6da:	mov    rdi,rbx
   14000b6dd:	mov    esi,r15d
   14000b6e0:	mov    rax,QWORD PTR [rbp-0x70]
   14000b6e4:	lea    r9,[rbp-0x70]
   14000b6e8:	lea    rcx,[rsp+0x60]
   14000b6ed:	movsxd r8,DWORD PTR [rax+0x10c]
   14000b6f4:	mov    rdx,rdi
   14000b6f7:	dec    esi
   14000b6f9:	call   0x14000abf0
   14000b6fe:	xor    r10d,r10d
   14000b701:	movsxd r13,eax
   14000b704:	test   eax,eax
   14000b706:	jle    0x14000b72d
   14000b708:	mov    rdx,QWORD PTR [rsp+0x78]
   14000b70d:	movzx  ecx,WORD PTR [rsp+0x60]
   14000b712:	lea    r8,[rsp+0x40]
   14000b717:	call   0x14000ae00
   14000b71c:	add    rdi,r13
   14000b71f:	xor    r10d,r10d
   14000b722:	test   esi,esi
   14000b724:	jg     0x14000b6e0
   14000b726:	mov    rsi,QWORD PTR [rsp+0x78]
   14000b72b:	jmp    0x14000b75a
   14000b72d:	mov    rsi,QWORD PTR [rsp+0x78]
   14000b732:	or     edx,0xffffffff
   14000b735:	mov    DWORD PTR [rsp+0x40],edx
   14000b739:	jmp    0x14000b75e
   14000b73b:	mov    rax,QWORD PTR [rbp-0x48]
   14000b73f:	lea    r9,[rsp+0x40]
   14000b744:	mov    r8,rsi
   14000b747:	mov    edx,r15d
   14000b74a:	mov    rcx,rbx
   14000b74d:	mov    QWORD PTR [rsp+0x20],rax
   14000b752:	call   0x14000ae8c
   14000b757:	xor    r10d,r10d
   14000b75a:	mov    edx,DWORD PTR [rsp+0x40]
   14000b75e:	test   edx,edx
   14000b760:	js     0x14000b7c1
   14000b762:	test   r12b,0x4
   14000b766:	je     0x14000b7c1
   14000b768:	lea    r9,[rsp+0x40]
   14000b76d:	mov    ecx,0x20
   14000b772:	mov    r8,rsi
   14000b775:	mov    edx,r14d
   14000b778:	call   0x14000ae38
   14000b77d:	mov    r14,QWORD PTR [rsp+0x50]
   14000b782:	xor    r10d,r10d
   14000b785:	mov    r11d,0x20
   14000b78b:	mov    edx,DWORD PTR [rsp+0x40]
   14000b78f:	mov    rax,QWORD PTR [rbp-0x50]
   14000b793:	test   rax,rax
   14000b796:	je     0x14000b9ef
   14000b79c:	mov    rcx,rax
   14000b79f:	call   0x140001a94
   14000b7a4:	mov    edi,DWORD PTR [rsp+0x48]
   14000b7a8:	xor    r10d,r10d
   14000b7ab:	mov    QWORD PTR [rbp-0x50],r10
   14000b7af:	or     esi,0xffffffff
   14000b7b2:	mov    edx,DWORD PTR [rsp+0x40]
   14000b7b6:	mov    r11d,0x20
   14000b7bc:	jmp    0x14000b9f6
   14000b7c1:	mov    r14,QWORD PTR [rsp+0x50]
   14000b7c6:	mov    r11d,0x20
   14000b7cc:	jmp    0x14000b78f
   14000b7ce:	movzx  eax,r13w
   14000b7d2:	cmp    eax,0x49
   14000b7d5:	je     0x14000b827
   14000b7d7:	cmp    eax,0x68
   14000b7da:	je     0x14000b81f
   14000b7dc:	mov    ecx,0x6c
   14000b7e1:	cmp    eax,ecx
   14000b7e3:	je     0x14000b7fd
   14000b7e5:	mov    ecx,0x58
   14000b7ea:	cmp    eax,0x77
   14000b7ed:	jne    0x14000ba04
   14000b7f3:	bts    r12d,0xb
   14000b7f8:	jmp    0x14000ba04
   14000b7fd:	cmp    WORD PTR [r8],cx
   14000b801:	mov    ecx,0x58
   14000b806:	jne    0x14000b816
   14000b808:	add    r8,0x2
   14000b80c:	bts    r12d,0xc
   14000b811:	jmp    0x14000ba04
   14000b816:	or     r12d,0x10
   14000b81a:	jmp    0x14000ba04
   14000b81f:	or     r12d,r11d
   14000b822:	jmp    0x14000b9ff
   14000b827:	bts    r12d,0xf
   14000b82c:	cmp    WORD PTR [r8],0x36
   14000b831:	jne    0x14000b849
   14000b833:	cmp    WORD PTR [r8+0x2],0x34
   14000b839:	jne    0x14000b849
   14000b83b:	add    r8,0x4
   14000b83f:	bts    r12d,0xf
   14000b844:	jmp    0x14000b9ff
   14000b849:	cmp    WORD PTR [r8],0x33
   14000b84e:	jne    0x14000b866
   14000b850:	cmp    WORD PTR [r8+0x2],0x32
   14000b856:	jne    0x14000b866
   14000b858:	add    r8,0x4
   14000b85c:	btr    r12d,0xf
   14000b861:	jmp    0x14000b9ff
   14000b866:	mov    eax,0x64
   14000b86b:	cmp    WORD PTR [r8],ax
   14000b86f:	je     0x14000b9ff
   14000b875:	mov    eax,0x69
   14000b87a:	cmp    WORD PTR [r8],ax
   14000b87e:	je     0x14000b9ff
   14000b884:	mov    eax,0x6f
   14000b889:	cmp    WORD PTR [r8],ax
   14000b88d:	je     0x14000b9ff
   14000b893:	mov    eax,0x75
   14000b898:	lea    ecx,[rax-0x1d]
   14000b89b:	cmp    WORD PTR [r8],ax
   14000b89f:	je     0x14000ba04
   14000b8a5:	lea    eax,[rcx+0x20]
   14000b8a8:	cmp    WORD PTR [r8],ax
   14000b8ac:	je     0x14000ba04
   14000b8b2:	cmp    WORD PTR [r8],cx
   14000b8b6:	je     0x14000ba04
   14000b8bc:	mov    DWORD PTR [rsp+0x68],r10d
   14000b8c1:	mov    rdx,QWORD PTR [rsp+0x78]
   14000b8c6:	lea    r8,[rsp+0x40]
   14000b8cb:	movzx  ecx,r13w
   14000b8cf:	mov    DWORD PTR [rsp+0x44],0x1
   14000b8d7:	call   0x14000ae00
   14000b8dc:	xor    r10d,r10d
   14000b8df:	jmp    0x14000b7b2
   14000b8e4:	cmp    r13w,0x2a
   14000b8e9:	jne    0x14000b913
   14000b8eb:	mov    edi,DWORD PTR [r14]
   14000b8ee:	add    r14,0x8
   14000b8f2:	mov    ecx,0x58
   14000b8f7:	mov    QWORD PTR [rsp+0x50],r14
   14000b8fc:	mov    DWORD PTR [rsp+0x48],edi
   14000b900:	test   edi,edi
   14000b902:	jns    0x14000ba04
   14000b908:	mov    edi,esi
   14000b90a:	mov    DWORD PTR [rsp+0x48],esi
   14000b90e:	jmp    0x14000ba04
   14000b913:	lea    ecx,[rdi+rdi*4]
   14000b916:	movzx  eax,r13w
   14000b91a:	lea    edi,[rax+rcx*2-0x30]
   14000b91e:	mov    DWORD PTR [rsp+0x48],edi
   14000b922:	jmp    0x14000b9ff
   14000b927:	mov    edi,r10d
   14000b92a:	mov    DWORD PTR [rsp+0x48],r10d
   14000b92f:	jmp    0x14000b9ff
   14000b934:	cmp    r13w,0x2a
   14000b939:	jne    0x14000b967
   14000b93b:	mov    eax,DWORD PTR [r14]
   14000b93e:	add    r14,0x8
   14000b942:	mov    ecx,0x58
   14000b947:	mov    QWORD PTR [rsp+0x50],r14
   14000b94c:	mov    DWORD PTR [rsp+0x58],eax
   14000b950:	test   eax,eax
   14000b952:	jns    0x14000ba04
   14000b958:	or     r12d,0x4
   14000b95c:	neg    eax
   14000b95e:	mov    DWORD PTR [rsp+0x58],eax
   14000b962:	jmp    0x14000ba04
   14000b967:	mov    eax,DWORD PTR [rsp+0x58]
   14000b96b:	lea    ecx,[rax+rax*4]
   14000b96e:	movzx  eax,r13w
   14000b972:	lea    eax,[rax+rcx*2-0x30]
   14000b976:	mov    DWORD PTR [rsp+0x58],eax
   14000b97a:	jmp    0x14000b9ff
   14000b97f:	movzx  eax,r13w
   14000b983:	cmp    eax,r11d
   14000b986:	je     0x14000b9c6
   14000b988:	cmp    eax,0x23
   14000b98b:	je     0x14000b9bf
   14000b98d:	mov    ecx,0x2b
   14000b992:	cmp    eax,ecx
   14000b994:	je     0x14000b9b9
   14000b996:	mov    ecx,0x2d
   14000b99b:	cmp    eax,ecx
   14000b99d:	je     0x14000b9b3
   14000b99f:	mov    ecx,0x30
   14000b9a4:	cmp    eax,ecx
   14000b9a6:	mov    ecx,0x58
   14000b9ab:	jne    0x14000ba04
   14000b9ad:	or     r12d,0x8
   14000b9b1:	jmp    0x14000ba04
   14000b9b3:	or     r12d,0x4
   14000b9b7:	jmp    0x14000b9ff
   14000b9b9:	or     r12d,0x1
   14000b9bd:	jmp    0x14000b9ff
   14000b9bf:	bts    r12d,0x7
   14000b9c4:	jmp    0x14000b9ff
   14000b9c6:	or     r12d,0x2
   14000b9ca:	jmp    0x14000b9ff
   14000b9cc:	mov    DWORD PTR [rbp-0x78],r10d
   14000b9d0:	mov    DWORD PTR [rsp+0x6c],r10d
   14000b9d5:	mov    DWORD PTR [rsp+0x58],r10d
   14000b9da:	mov    DWORD PTR [rsp+0x4c],r10d
   14000b9df:	mov    r12d,r10d
   14000b9e2:	mov    edi,esi
   14000b9e4:	mov    DWORD PTR [rsp+0x48],esi
   14000b9e8:	mov    DWORD PTR [rsp+0x44],r10d
   14000b9ed:	jmp    0x14000b9ff
   14000b9ef:	mov    edi,DWORD PTR [rsp+0x48]
   14000b9f3:	or     esi,0xffffffff
   14000b9f6:	mov    r9d,DWORD PTR [rsp+0x68]
   14000b9fb:	mov    r8,QWORD PTR [rbp-0x80]
   14000b9ff:	mov    ecx,0x58
   14000ba04:	movzx  r13d,WORD PTR [r8]
   14000ba08:	test   r13w,r13w
   14000ba0c:	jne    0x14000b00a
   14000ba12:	test   r9d,r9d
   14000ba15:	je     0x14000ba1d
   14000ba17:	cmp    r9d,0x7
   14000ba1b:	jne    0x14000ba5a
   14000ba1d:	cmp    BYTE PTR [rbp-0x58],r10b
   14000ba21:	je     0x14000ba2e
   14000ba23:	mov    rcx,QWORD PTR [rbp-0x60]
   14000ba27:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000ba2e:	mov    eax,edx
   14000ba30:	mov    rcx,QWORD PTR [rbp+0x3d0]
   14000ba37:	xor    rcx,rsp
   14000ba3a:	call   0x140001920
   14000ba3f:	mov    rbx,QWORD PTR [rsp+0x530]
   14000ba47:	add    rsp,0x4e0
   14000ba4e:	pop    r15
   14000ba50:	pop    r14
   14000ba52:	pop    r13
   14000ba54:	pop    r12
   14000ba56:	pop    rdi
   14000ba57:	pop    rsi
   14000ba58:	pop    rbp
   14000ba59:	ret    
   14000ba5a:	call   0x140003250
   14000ba5f:	mov    DWORD PTR [rax],0x16
   14000ba65:	call   0x1400031e8
   14000ba6a:	xor    r11d,r11d
   14000ba6d:	cmp    BYTE PTR [rbp-0x58],r11b
   14000ba71:	je     0x14000ba7e
   14000ba73:	mov    rax,QWORD PTR [rbp-0x60]
   14000ba77:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000ba7e:	mov    eax,esi
   14000ba80:	jmp    0x14000ba30
   14000ba82:	int3   
   14000ba83:	int3   
   14000ba84:	mov    QWORD PTR [rsp+0x8],rbx
   14000ba89:	mov    QWORD PTR [rsp+0x10],rbp
   14000ba8e:	mov    QWORD PTR [rsp+0x18],rsi
   14000ba93:	push   rdi
   14000ba94:	sub    rsp,0x20
   14000ba98:	mov    rbx,rdx
   14000ba9b:	test   ecx,ecx
   14000ba9d:	js     0x14000bb06
   14000ba9f:	cmp    ecx,DWORD PTR [rip+0x8b5b]        # 0x140014600
   14000baa5:	jae    0x14000bb06
   14000baa7:	movsxd rdi,ecx
   14000baaa:	lea    rbp,[rip+0x8b6f]        # 0x140014620
   14000bab1:	mov    rsi,rdi
   14000bab4:	and    edi,0x1f
   14000bab7:	sar    rsi,0x5
   14000babb:	imul   rdi,rdi,0x58
   14000babf:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   14000bac4:	cmp    QWORD PTR [rdi+rax*1],0xffffffffffffffff
   14000bac9:	jne    0x14000bb06
   14000bacb:	cmp    DWORD PTR [rip+0x68ee],0x1        # 0x1400123c0
   14000bad2:	jne    0x14000baf9
   14000bad4:	test   ecx,ecx
   14000bad6:	je     0x14000baee
   14000bad8:	dec    ecx
   14000bada:	je     0x14000bae7
   14000badc:	dec    ecx
   14000bade:	jne    0x14000baf9
   14000bae0:	mov    ecx,0xfffffff4
   14000bae5:	jmp    0x14000baf3
   14000bae7:	mov    ecx,0xfffffff5
   14000baec:	jmp    0x14000baf3
   14000baee:	mov    ecx,0xfffffff6
   14000baf3:	call   QWORD PTR [rip+0x2747]        # 0x14000e240
   14000baf9:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   14000bafe:	mov    QWORD PTR [rdi+rax*1],rbx
   14000bb02:	xor    eax,eax
   14000bb04:	jmp    0x14000bb1c
   14000bb06:	call   0x140003250
   14000bb0b:	mov    DWORD PTR [rax],0x9
   14000bb11:	call   0x140003270
   14000bb16:	and    DWORD PTR [rax],0x0
   14000bb19:	or     eax,0xffffffff
   14000bb1c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bb21:	mov    rbp,QWORD PTR [rsp+0x38]
   14000bb26:	mov    rsi,QWORD PTR [rsp+0x40]
   14000bb2b:	add    rsp,0x20
   14000bb2f:	pop    rdi
   14000bb30:	ret    
   14000bb31:	int3   
   14000bb32:	int3   
   14000bb33:	int3   
   14000bb34:	mov    QWORD PTR [rsp+0x8],rbx
   14000bb39:	mov    QWORD PTR [rsp+0x10],rbp
   14000bb3e:	push   rdi
   14000bb3f:	sub    rsp,0x20
   14000bb43:	test   ecx,ecx
   14000bb45:	js     0x14000bbb8
   14000bb47:	cmp    ecx,DWORD PTR [rip+0x8ab3]        # 0x140014600
   14000bb4d:	jae    0x14000bbb8
   14000bb4f:	movsxd rbx,ecx
   14000bb52:	lea    rbp,[rip+0x8ac7]        # 0x140014620
   14000bb59:	mov    rdi,rbx
   14000bb5c:	and    ebx,0x1f
   14000bb5f:	sar    rdi,0x5
   14000bb63:	imul   rbx,rbx,0x58
   14000bb67:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14000bb6c:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14000bb71:	je     0x14000bbb8
   14000bb73:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   14000bb78:	je     0x14000bbb8
   14000bb7a:	cmp    DWORD PTR [rip+0x683f],0x1        # 0x1400123c0
   14000bb81:	jne    0x14000bbaa
   14000bb83:	test   ecx,ecx
   14000bb85:	je     0x14000bb9d
   14000bb87:	dec    ecx
   14000bb89:	je     0x14000bb96
   14000bb8b:	dec    ecx
   14000bb8d:	jne    0x14000bbaa
   14000bb8f:	mov    ecx,0xfffffff4
   14000bb94:	jmp    0x14000bba2
   14000bb96:	mov    ecx,0xfffffff5
   14000bb9b:	jmp    0x14000bba2
   14000bb9d:	mov    ecx,0xfffffff6
   14000bba2:	xor    edx,edx
   14000bba4:	call   QWORD PTR [rip+0x2696]        # 0x14000e240
   14000bbaa:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14000bbaf:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   14000bbb4:	xor    eax,eax
   14000bbb6:	jmp    0x14000bbce
   14000bbb8:	call   0x140003250
   14000bbbd:	mov    DWORD PTR [rax],0x9
   14000bbc3:	call   0x140003270
   14000bbc8:	and    DWORD PTR [rax],0x0
   14000bbcb:	or     eax,0xffffffff
   14000bbce:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bbd3:	mov    rbp,QWORD PTR [rsp+0x38]
   14000bbd8:	add    rsp,0x20
   14000bbdc:	pop    rdi
   14000bbdd:	ret    
   14000bbde:	int3   
   14000bbdf:	int3   
   14000bbe0:	sub    rsp,0x28
   14000bbe4:	cmp    ecx,0xfffffffe
   14000bbe7:	jne    0x14000bbfe
   14000bbe9:	call   0x140003270
   14000bbee:	and    DWORD PTR [rax],0x0
   14000bbf1:	call   0x140003250
   14000bbf6:	mov    DWORD PTR [rax],0x9
   14000bbfc:	jmp    0x14000bc4b
   14000bbfe:	test   ecx,ecx
   14000bc00:	js     0x14000bc33
   14000bc02:	cmp    ecx,DWORD PTR [rip+0x89f8]        # 0x140014600
   14000bc08:	jae    0x14000bc33
   14000bc0a:	movsxd rdx,ecx
   14000bc0d:	lea    rcx,[rip+0x8a0c]        # 0x140014620
   14000bc14:	mov    rax,rdx
   14000bc17:	and    edx,0x1f
   14000bc1a:	sar    rax,0x5
   14000bc1e:	imul   rdx,rdx,0x58
   14000bc22:	mov    rax,QWORD PTR [rcx+rax*8]
   14000bc26:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   14000bc2b:	je     0x14000bc33
   14000bc2d:	mov    rax,QWORD PTR [rax+rdx*1]
   14000bc31:	jmp    0x14000bc4f
   14000bc33:	call   0x140003270
   14000bc38:	and    DWORD PTR [rax],0x0
   14000bc3b:	call   0x140003250
   14000bc40:	mov    DWORD PTR [rax],0x9
   14000bc46:	call   0x1400031e8
   14000bc4b:	or     rax,0xffffffffffffffff
   14000bc4f:	add    rsp,0x28
   14000bc53:	ret    
   14000bc54:	mov    rax,rsp
   14000bc57:	mov    QWORD PTR [rax+0x8],rbx
   14000bc5b:	mov    QWORD PTR [rax+0x10],rsi
   14000bc5f:	mov    QWORD PTR [rax+0x18],rdi
   14000bc63:	mov    QWORD PTR [rax+0x20],r12
   14000bc67:	push   r14
   14000bc69:	sub    rsp,0x20
   14000bc6d:	movsxd rbx,ecx
   14000bc70:	mov    r12,rbx
   14000bc73:	sar    r12,0x5
   14000bc77:	lea    r14,[rip+0x89a2]        # 0x140014620
   14000bc7e:	and    ebx,0x1f
   14000bc81:	imul   rbx,rbx,0x58
   14000bc85:	mov    rsi,QWORD PTR [r14+r12*8]
   14000bc89:	mov    edi,0x1
   14000bc8e:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14000bc93:	jne    0x14000bcc9
   14000bc95:	lea    ecx,[rdi+0x9]
   14000bc98:	call   0x1400043ec
   14000bc9d:	nop
   14000bc9e:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   14000bca3:	jne    0x14000bcbf
   14000bca5:	lea    rcx,[rbx+rsi*1+0x10]
   14000bcaa:	mov    edx,0xfa0
   14000bcaf:	call   QWORD PTR [rip+0x244b]        # 0x14000e100
   14000bcb5:	neg    eax
   14000bcb7:	sbb    edx,edx
   14000bcb9:	and    edi,edx
   14000bcbb:	inc    DWORD PTR [rbx+rsi*1+0xc]
   14000bcbf:	mov    ecx,0xa
   14000bcc4:	call   0x1400042ec
   14000bcc9:	test   edi,edi
   14000bccb:	je     0x14000bcdc
   14000bccd:	mov    rcx,QWORD PTR [r14+r12*8]
   14000bcd1:	lea    rcx,[rcx+rbx*1+0x10]
   14000bcd6:	call   QWORD PTR [rip+0x23c4]        # 0x14000e0a0
   14000bcdc:	mov    eax,edi
   14000bcde:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bce3:	mov    rsi,QWORD PTR [rsp+0x38]
   14000bce8:	mov    rdi,QWORD PTR [rsp+0x40]
   14000bced:	mov    r12,QWORD PTR [rsp+0x48]
   14000bcf2:	add    rsp,0x20
   14000bcf6:	pop    r14
   14000bcf8:	ret    
   14000bcf9:	int3   
   14000bcfa:	int3   
   14000bcfb:	int3   
   14000bcfc:	movsxd rdx,ecx
   14000bcff:	lea    rcx,[rip+0x891a]        # 0x140014620
   14000bd06:	mov    rax,rdx
   14000bd09:	and    edx,0x1f
   14000bd0c:	sar    rax,0x5
   14000bd10:	imul   rdx,rdx,0x58
   14000bd14:	mov    rax,QWORD PTR [rcx+rax*8]
   14000bd18:	lea    rcx,[rax+rdx*1+0x10]
   14000bd1d:	rex.W jmp QWORD PTR [rip+0x2384]        # 0x14000e0a8
   14000bd24:	mov    QWORD PTR [rsp+0x8],rbx
   14000bd29:	mov    QWORD PTR [rsp+0x10],rsi
   14000bd2e:	mov    QWORD PTR [rsp+0x18],rdi
   14000bd33:	push   r12
   14000bd35:	push   r13
   14000bd37:	push   r14
   14000bd39:	sub    rsp,0x40
   14000bd3d:	or     rsi,0xffffffffffffffff
   14000bd41:	mov    r12d,esi
   14000bd44:	xor    r13d,r13d
   14000bd47:	lea    ebx,[rsi+0xc]
   14000bd4a:	mov    ecx,ebx
   14000bd4c:	call   0x140004304
   14000bd51:	test   eax,eax
   14000bd53:	jne    0x14000bd5c
   14000bd55:	mov    eax,esi
   14000bd57:	jmp    0x14000bf12
   14000bd5c:	mov    ecx,ebx
   14000bd5e:	call   0x1400043ec
   14000bd63:	nop
   14000bd64:	xor    edi,edi
   14000bd66:	lea    rax,[rip+0x88b3]        # 0x140014620
   14000bd6d:	mov    DWORD PTR [rsp+0x24],edi
   14000bd71:	cmp    edi,0x40
   14000bd74:	jge    0x14000bf05
   14000bd7a:	movsxd r14,edi
   14000bd7d:	mov    rbx,QWORD PTR [rax+r14*8]
   14000bd81:	test   rbx,rbx
   14000bd84:	je     0x14000be7b
   14000bd8a:	mov    QWORD PTR [rsp+0x30],rbx
   14000bd8f:	mov    rax,QWORD PTR [rax+r14*8]
   14000bd93:	add    rax,0xb00
   14000bd99:	cmp    rbx,rax
   14000bd9c:	jae    0x14000be6b
   14000bda2:	test   BYTE PTR [rbx+0x8],0x1
   14000bda6:	jne    0x14000be57
   14000bdac:	cmp    DWORD PTR [rbx+0xc],0x0
   14000bdb0:	jne    0x14000bdee
   14000bdb2:	mov    ecx,0xa
   14000bdb7:	call   0x1400043ec
   14000bdbc:	nop
   14000bdbd:	cmp    DWORD PTR [rbx+0xc],0x0
   14000bdc1:	jne    0x14000bde4
   14000bdc3:	lea    rcx,[rbx+0x10]
   14000bdc7:	mov    edx,0xfa0
   14000bdcc:	call   QWORD PTR [rip+0x232e]        # 0x14000e100
   14000bdd2:	test   eax,eax
   14000bdd4:	jne    0x14000bde1
   14000bdd6:	lea    r13d,[rax+0x1]
   14000bdda:	mov    DWORD PTR [rsp+0x28],r13d
   14000bddf:	jmp    0x14000bde4
   14000bde1:	inc    DWORD PTR [rbx+0xc]
   14000bde4:	mov    ecx,0xa
   14000bde9:	call   0x1400042ec
   14000bdee:	test   r13d,r13d
   14000bdf1:	jne    0x14000be57
   14000bdf3:	lea    rcx,[rbx+0x10]
   14000bdf7:	call   QWORD PTR [rip+0x22a3]        # 0x14000e0a0
   14000bdfd:	test   BYTE PTR [rbx+0x8],0x1
   14000be01:	je     0x14000be0f
   14000be03:	lea    rcx,[rbx+0x10]
   14000be07:	call   QWORD PTR [rip+0x229b]        # 0x14000e0a8
   14000be0d:	jmp    0x14000be57
   14000be0f:	or     rsi,0xffffffffffffffff
   14000be13:	test   r13d,r13d
   14000be16:	jne    0x14000be57
   14000be18:	mov    BYTE PTR [rbx+0x8],0x1
   14000be1c:	mov    QWORD PTR [rbx],rsi
   14000be1f:	lea    r8,[rip+0x87fa]        # 0x140014620
   14000be26:	sub    rbx,QWORD PTR [r8+r14*8]
   14000be2a:	movabs rax,0x2e8ba2e8ba2e8ba3
   14000be34:	imul   rbx
   14000be37:	mov    r12,rdx
   14000be3a:	sar    r12,0x4
   14000be3e:	mov    rax,r12
   14000be41:	shr    rax,0x3f
   14000be45:	add    r12,rax
   14000be48:	mov    eax,edi
   14000be4a:	shl    eax,0x5
   14000be4d:	add    r12d,eax
   14000be50:	mov    DWORD PTR [rsp+0x20],r12d
   14000be55:	jmp    0x14000be6b
   14000be57:	add    rbx,0x58
   14000be5b:	or     rsi,0xffffffffffffffff
   14000be5f:	lea    rax,[rip+0x87ba]        # 0x140014620
   14000be66:	jmp    0x14000bd8a
   14000be6b:	cmp    r12d,esi
   14000be6e:	jne    0x14000bf05
   14000be74:	inc    edi
   14000be76:	jmp    0x14000bd66
   14000be7b:	mov    edx,0x58
   14000be80:	lea    ecx,[rdx-0x38]
   14000be83:	call   0x140003e68
   14000be88:	mov    QWORD PTR [rsp+0x30],rax
   14000be8d:	test   rax,rax
   14000be90:	je     0x14000bf05
   14000be92:	movsxd rdx,edi
   14000be95:	lea    r8,[rip+0x8784]        # 0x140014620
   14000be9c:	mov    QWORD PTR [r8+rdx*8],rax
   14000bea0:	add    DWORD PTR [rip+0x8759],0x20        # 0x140014600
   14000bea7:	mov    rcx,QWORD PTR [r8+rdx*8]
   14000beab:	add    rcx,0xb00
   14000beb2:	cmp    rax,rcx
   14000beb5:	jae    0x14000bed1
   14000beb7:	mov    BYTE PTR [rax+0x8],0x0
   14000bebb:	mov    QWORD PTR [rax],rsi
   14000bebe:	mov    BYTE PTR [rax+0x9],0xa
   14000bec2:	and    DWORD PTR [rax+0xc],0x0
   14000bec6:	add    rax,0x58
   14000beca:	mov    QWORD PTR [rsp+0x30],rax
   14000becf:	jmp    0x14000bea7
   14000bed1:	shl    edi,0x5
   14000bed4:	mov    DWORD PTR [rsp+0x20],edi
   14000bed8:	movsxd rcx,edi
   14000bedb:	mov    rax,rcx
   14000bede:	sar    rax,0x5
   14000bee2:	and    ecx,0x1f
   14000bee5:	imul   rcx,rcx,0x58
   14000bee9:	mov    rax,QWORD PTR [r8+rax*8]
   14000beed:	mov    BYTE PTR [rax+rcx*1+0x8],0x1
   14000bef2:	mov    ecx,edi
   14000bef4:	call   0x14000bc54
   14000bef9:	test   eax,eax
   14000befb:	cmove  edi,esi
   14000befe:	mov    r12d,edi
   14000bf01:	mov    DWORD PTR [rsp+0x20],edi
   14000bf05:	mov    ecx,0xb
   14000bf0a:	call   0x1400042ec
   14000bf0f:	mov    eax,r12d
   14000bf12:	mov    rbx,QWORD PTR [rsp+0x60]
   14000bf17:	mov    rsi,QWORD PTR [rsp+0x68]
   14000bf1c:	mov    rdi,QWORD PTR [rsp+0x70]
   14000bf21:	add    rsp,0x40
   14000bf25:	pop    r14
   14000bf27:	pop    r13
   14000bf29:	pop    r12
   14000bf2b:	ret    
   14000bf2c:	int3   
   14000bf2d:	int3   
   14000bf2e:	int3   
   14000bf2f:	int3   
   14000bf30:	int3   
   14000bf31:	int3   
   14000bf32:	int3   
   14000bf33:	int3   
   14000bf34:	int3   
   14000bf35:	int3   
   14000bf36:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000bf40:	mov    r11,rcx
   14000bf43:	sub    rdx,rcx
   14000bf46:	jb     0x14000c0ea
   14000bf4c:	cmp    r8,0x8
   14000bf50:	jb     0x14000bfb3
   14000bf52:	test   cl,0x7
   14000bf55:	je     0x14000bf8d
   14000bf57:	test   cl,0x1
   14000bf5a:	je     0x14000bf67
   14000bf5c:	mov    al,BYTE PTR [rdx+rcx*1]
   14000bf5f:	dec    r8
   14000bf62:	mov    BYTE PTR [rcx],al
   14000bf64:	inc    rcx
   14000bf67:	test   cl,0x2
   14000bf6a:	je     0x14000bf7b
   14000bf6c:	mov    ax,WORD PTR [rdx+rcx*1]
   14000bf70:	sub    r8,0x2
   14000bf74:	mov    WORD PTR [rcx],ax
   14000bf77:	add    rcx,0x2
   14000bf7b:	test   cl,0x4
   14000bf7e:	je     0x14000bf8d
   14000bf80:	mov    eax,DWORD PTR [rdx+rcx*1]
   14000bf83:	sub    r8,0x4
   14000bf87:	mov    DWORD PTR [rcx],eax
   14000bf89:	add    rcx,0x4
   14000bf8d:	mov    r9,r8
   14000bf90:	shr    r9,0x5
   14000bf94:	jne    0x14000bfe7
   14000bf96:	mov    r9,r8
   14000bf99:	shr    r9,0x3
   14000bf9d:	je     0x14000bfb3
   14000bf9f:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000bfa3:	mov    QWORD PTR [rcx],rax
   14000bfa6:	add    rcx,0x8
   14000bfaa:	dec    r9
   14000bfad:	jne    0x14000bf9f
   14000bfaf:	and    r8,0x7
   14000bfb3:	test   r8,r8
   14000bfb6:	jne    0x14000bfc0
   14000bfb8:	mov    rax,r11
   14000bfbb:	ret    
   14000bfbc:	nop    DWORD PTR [rax+0x0]
   14000bfc0:	mov    al,BYTE PTR [rdx+rcx*1]
   14000bfc3:	mov    BYTE PTR [rcx],al
   14000bfc5:	inc    rcx
   14000bfc8:	dec    r8
   14000bfcb:	jne    0x14000bfc0
   14000bfcd:	mov    rax,r11
   14000bfd0:	ret    
   14000bfd1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000bfe0:	data16 data16 xchg ax,ax
   14000bfe4:	data16 xchg ax,ax
   14000bfe7:	cmp    r9,0x2000
   14000bfee:	jae    0x14000c032
   14000bff0:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000bff4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   14000bff9:	add    rcx,0x20
   14000bffd:	mov    QWORD PTR [rcx-0x20],rax
   14000c001:	mov    QWORD PTR [rcx-0x18],r10
   14000c005:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14000c00a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14000c00f:	dec    r9
   14000c012:	mov    QWORD PTR [rcx-0x10],rax
   14000c016:	mov    QWORD PTR [rcx-0x8],r10
   14000c01a:	jne    0x14000bff0
   14000c01c:	and    r8,0x1f
   14000c020:	jmp    0x14000bf96
   14000c025:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000c030:	xchg   ax,ax
   14000c032:	cmp    rdx,0x1000
   14000c039:	jb     0x14000bff0
   14000c03b:	mov    eax,0x20
   14000c040:	prefetchnta BYTE PTR [rdx+rcx*1]
   14000c044:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14000c049:	add    rcx,0x80
   14000c050:	dec    eax
   14000c052:	jne    0x14000c040
   14000c054:	sub    rcx,0x1000
   14000c05b:	mov    eax,0x40
   14000c060:	mov    r9,QWORD PTR [rdx+rcx*1]
   14000c064:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   14000c069:	movnti QWORD PTR [rcx],r9
   14000c06d:	movnti QWORD PTR [rcx+0x8],r10
   14000c072:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   14000c077:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   14000c07c:	movnti QWORD PTR [rcx+0x10],r9
   14000c081:	movnti QWORD PTR [rcx+0x18],r10
   14000c086:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   14000c08b:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   14000c090:	add    rcx,0x40
   14000c094:	movnti QWORD PTR [rcx-0x20],r9
   14000c099:	movnti QWORD PTR [rcx-0x18],r10
   14000c09e:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   14000c0a3:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14000c0a8:	dec    eax
   14000c0aa:	movnti QWORD PTR [rcx-0x10],r9
   14000c0af:	movnti QWORD PTR [rcx-0x8],r10
   14000c0b4:	jne    0x14000c060
   14000c0b6:	sub    r8,0x1000
   14000c0bd:	cmp    r8,0x1000
   14000c0c4:	jae    0x14000c03b
   14000c0ca:	lock or BYTE PTR [rsp],0x0
   14000c0cf:	jmp    0x14000bf8d
   14000c0d4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000c0e0:	data16 data16 xchg ax,ax
   14000c0e4:	data16 data16 xchg ax,ax
   14000c0e8:	xchg   ax,ax
   14000c0ea:	add    rcx,r8
   14000c0ed:	cmp    r8,0x8
   14000c0f1:	jb     0x14000c154
   14000c0f3:	test   cl,0x7
   14000c0f6:	je     0x14000c12e
   14000c0f8:	test   cl,0x1
   14000c0fb:	je     0x14000c108
   14000c0fd:	dec    rcx
   14000c100:	mov    al,BYTE PTR [rdx+rcx*1]
   14000c103:	dec    r8
   14000c106:	mov    BYTE PTR [rcx],al
   14000c108:	test   cl,0x2
   14000c10b:	je     0x14000c11c
   14000c10d:	sub    rcx,0x2
   14000c111:	mov    ax,WORD PTR [rdx+rcx*1]
   14000c115:	sub    r8,0x2
   14000c119:	mov    WORD PTR [rcx],ax
   14000c11c:	test   cl,0x4
   14000c11f:	je     0x14000c12e
   14000c121:	sub    rcx,0x4
   14000c125:	mov    eax,DWORD PTR [rdx+rcx*1]
   14000c128:	sub    r8,0x4
   14000c12c:	mov    DWORD PTR [rcx],eax
   14000c12e:	mov    r9,r8
   14000c131:	shr    r9,0x5
   14000c135:	jne    0x14000c187
   14000c137:	mov    r9,r8
   14000c13a:	shr    r9,0x3
   14000c13e:	je     0x14000c154
   14000c140:	sub    rcx,0x8
   14000c144:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000c148:	dec    r9
   14000c14b:	mov    QWORD PTR [rcx],rax
   14000c14e:	jne    0x14000c140
   14000c150:	and    r8,0x7
   14000c154:	test   r8,r8
   14000c157:	jne    0x14000c160
   14000c159:	mov    rax,r11
   14000c15c:	ret    
   14000c15d:	nop    DWORD PTR [rax]
   14000c160:	dec    rcx
   14000c163:	mov    al,BYTE PTR [rdx+rcx*1]
   14000c166:	dec    r8
   14000c169:	mov    BYTE PTR [rcx],al
   14000c16b:	jne    0x14000c160
   14000c16d:	mov    rax,r11
   14000c170:	ret    
   14000c171:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000c180:	data16 data16 xchg ax,ax
   14000c184:	data16 xchg ax,ax
   14000c187:	cmp    r9,0x2000
   14000c18e:	jae    0x14000c1d2
   14000c190:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   14000c195:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14000c19a:	sub    rcx,0x20
   14000c19e:	mov    QWORD PTR [rcx+0x18],rax
   14000c1a2:	mov    QWORD PTR [rcx+0x10],r10
   14000c1a6:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000c1ab:	mov    r10,QWORD PTR [rdx+rcx*1]
   14000c1af:	dec    r9
   14000c1b2:	mov    QWORD PTR [rcx+0x8],rax
   14000c1b6:	mov    QWORD PTR [rcx],r10
   14000c1b9:	jne    0x14000c190
   14000c1bb:	and    r8,0x1f
   14000c1bf:	jmp    0x14000c137
   14000c1c4:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000c1d0:	xchg   ax,ax
   14000c1d2:	cmp    rdx,0xfffffffffffff000
   14000c1d9:	ja     0x14000c190
   14000c1db:	mov    eax,0x20
   14000c1e0:	sub    rcx,0x80
   14000c1e7:	prefetchnta BYTE PTR [rdx+rcx*1]
   14000c1eb:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14000c1f0:	dec    eax
   14000c1f2:	jne    0x14000c1e0
   14000c1f4:	add    rcx,0x1000
   14000c1fb:	mov    eax,0x40
   14000c200:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   14000c205:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14000c20a:	movnti QWORD PTR [rcx-0x8],r9
   14000c20f:	movnti QWORD PTR [rcx-0x10],r10
   14000c214:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   14000c219:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   14000c21e:	movnti QWORD PTR [rcx-0x18],r9
   14000c223:	movnti QWORD PTR [rcx-0x20],r10
   14000c228:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   14000c22d:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   14000c232:	sub    rcx,0x40
   14000c236:	movnti QWORD PTR [rcx+0x18],r9
   14000c23b:	movnti QWORD PTR [rcx+0x10],r10
   14000c240:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   14000c245:	mov    r10,QWORD PTR [rdx+rcx*1]
   14000c249:	dec    eax
   14000c24b:	movnti QWORD PTR [rcx+0x8],r9
   14000c250:	movnti QWORD PTR [rcx],r10
   14000c254:	jne    0x14000c200
   14000c256:	sub    r8,0x1000
   14000c25d:	cmp    r8,0x1000
   14000c264:	jae    0x14000c1db
   14000c26a:	lock or BYTE PTR [rsp],0x0
   14000c26f:	jmp    0x14000c12e
   14000c274:	mov    QWORD PTR [rsp+0x8],rbx
   14000c279:	mov    WORD PTR [rsp+0x20],r9w
   14000c27f:	push   rbp
   14000c280:	push   rsi
   14000c281:	push   rdi
   14000c282:	mov    rbp,rsp
   14000c285:	sub    rsp,0x60
   14000c289:	mov    rdi,r8
   14000c28c:	mov    rsi,rdx
   14000c28f:	mov    rbx,rcx
   14000c292:	test   rdx,rdx
   14000c295:	jne    0x14000c2aa
   14000c297:	test   r8,r8
   14000c29a:	je     0x14000c2aa
   14000c29c:	test   rcx,rcx
   14000c29f:	je     0x14000c2a3
   14000c2a1:	and    DWORD PTR [rcx],edx
   14000c2a3:	xor    eax,eax
   14000c2a5:	jmp    0x14000c334
   14000c2aa:	test   rcx,rcx
   14000c2ad:	je     0x14000c2b2
   14000c2af:	or     DWORD PTR [rcx],0xffffffff
   14000c2b2:	cmp    r8,0x7fffffff
   14000c2b9:	jbe    0x14000c2d0
   14000c2bb:	call   0x140003250
   14000c2c0:	mov    ebx,0x16
   14000c2c5:	mov    DWORD PTR [rax],ebx
   14000c2c7:	call   0x1400031e8
   14000c2cc:	mov    eax,ebx
   14000c2ce:	jmp    0x14000c334
   14000c2d0:	mov    rdx,QWORD PTR [rbp+0x40]
   14000c2d4:	lea    rcx,[rbp-0x20]
   14000c2d8:	call   0x140004810
   14000c2dd:	mov    r11,QWORD PTR [rbp-0x20]
   14000c2e1:	cmp    DWORD PTR [r11+0x14],0x0
   14000c2e6:	jne    0x14000c39e
   14000c2ec:	movzx  eax,WORD PTR [rbp+0x38]
   14000c2f0:	mov    ecx,0xff
   14000c2f5:	cmp    ax,cx
   14000c2f8:	jbe    0x14000c344
   14000c2fa:	test   rsi,rsi
   14000c2fd:	je     0x14000c311
   14000c2ff:	test   rdi,rdi
   14000c302:	je     0x14000c311
   14000c304:	mov    r8,rdi
   14000c307:	xor    edx,edx
   14000c309:	mov    rcx,rsi
   14000c30c:	call   0x1400048d0
   14000c311:	call   0x140003250
   14000c316:	mov    DWORD PTR [rax],0x2a
   14000c31c:	call   0x140003250
   14000c321:	cmp    BYTE PTR [rbp-0x8],0x0
   14000c325:	mov    eax,DWORD PTR [rax]
   14000c327:	je     0x14000c334
   14000c329:	mov    rcx,QWORD PTR [rbp-0x10]
   14000c32d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c334:	mov    rbx,QWORD PTR [rsp+0x80]
   14000c33c:	add    rsp,0x60
   14000c340:	pop    rdi
   14000c341:	pop    rsi
   14000c342:	pop    rbp
   14000c343:	ret    
   14000c344:	test   rsi,rsi
   14000c347:	je     0x14000c379
   14000c349:	test   rdi,rdi
   14000c34c:	jne    0x14000c377
   14000c34e:	call   0x140003250
   14000c353:	lea    ebx,[rdi+0x22]
   14000c356:	mov    DWORD PTR [rax],ebx
   14000c358:	call   0x1400031e8
   14000c35d:	cmp    BYTE PTR [rbp-0x8],dil
   14000c361:	je     0x14000c2cc
   14000c367:	mov    rcx,QWORD PTR [rbp-0x10]
   14000c36b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c372:	jmp    0x14000c2cc
   14000c377:	mov    BYTE PTR [rsi],al
   14000c379:	test   rbx,rbx
   14000c37c:	je     0x14000c384
   14000c37e:	mov    DWORD PTR [rbx],0x1
   14000c384:	cmp    BYTE PTR [rbp-0x8],0x0
   14000c388:	je     0x14000c2a3
   14000c38e:	mov    rax,QWORD PTR [rbp-0x10]
   14000c392:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c399:	jmp    0x14000c2a3
   14000c39e:	and    DWORD PTR [rbp+0x28],0x0
   14000c3a2:	mov    ecx,DWORD PTR [r11+0x4]
   14000c3a6:	lea    rax,[rbp+0x28]
   14000c3aa:	mov    QWORD PTR [rsp+0x38],rax
   14000c3af:	and    QWORD PTR [rsp+0x30],0x0
   14000c3b5:	lea    r8,[rbp+0x38]
   14000c3b9:	mov    r9d,0x1
   14000c3bf:	xor    edx,edx
   14000c3c1:	mov    DWORD PTR [rsp+0x28],edi
   14000c3c5:	mov    QWORD PTR [rsp+0x20],rsi
   14000c3ca:	call   QWORD PTR [rip+0x1dc0]        # 0x14000e190
   14000c3d0:	test   eax,eax
   14000c3d2:	je     0x14000c3e7
   14000c3d4:	cmp    DWORD PTR [rbp+0x28],0x0
   14000c3d8:	jne    0x14000c311
   14000c3de:	test   rbx,rbx
   14000c3e1:	je     0x14000c384
   14000c3e3:	mov    DWORD PTR [rbx],eax
   14000c3e5:	jmp    0x14000c384
   14000c3e7:	call   QWORD PTR [rip+0x1c83]        # 0x14000e070
   14000c3ed:	cmp    eax,0x7a
   14000c3f0:	jne    0x14000c311
   14000c3f6:	test   rsi,rsi
   14000c3f9:	je     0x14000c40d
   14000c3fb:	test   rdi,rdi
   14000c3fe:	je     0x14000c40d
   14000c400:	mov    r8,rdi
   14000c403:	xor    edx,edx
   14000c405:	mov    rcx,rsi
   14000c408:	call   0x1400048d0
   14000c40d:	call   0x140003250
   14000c412:	mov    ebx,0x22
   14000c417:	mov    DWORD PTR [rax],ebx
   14000c419:	call   0x1400031e8
   14000c41e:	cmp    BYTE PTR [rbp-0x8],0x0
   14000c422:	je     0x14000c2cc
   14000c428:	mov    rax,QWORD PTR [rbp-0x10]
   14000c42c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000c433:	jmp    0x14000c2cc
   14000c438:	sub    rsp,0x38
   14000c43c:	and    QWORD PTR [rsp+0x20],0x0
   14000c442:	call   0x14000c274
   14000c447:	add    rsp,0x38
   14000c44b:	ret    
   14000c44c:	rex push rbx
   14000c44e:	sub    rsp,0x20
   14000c452:	test   rcx,rcx
   14000c455:	je     0x14000c464
   14000c457:	test   rdx,rdx
   14000c45a:	je     0x14000c464
   14000c45c:	test   r8,r8
   14000c45f:	jne    0x14000c47d
   14000c461:	mov    BYTE PTR [rcx],r8b
   14000c464:	call   0x140003250
   14000c469:	mov    ebx,0x16
   14000c46e:	mov    DWORD PTR [rax],ebx
   14000c470:	call   0x1400031e8
   14000c475:	mov    eax,ebx
   14000c477:	add    rsp,0x20
   14000c47b:	pop    rbx
   14000c47c:	ret    
   14000c47d:	mov    r9,rcx
   14000c480:	sub    r9,r8
   14000c483:	mov    al,BYTE PTR [r8]
   14000c486:	mov    BYTE PTR [r9+r8*1],al
   14000c48a:	inc    r8
   14000c48d:	test   al,al
   14000c48f:	je     0x14000c496
   14000c491:	dec    rdx
   14000c494:	jne    0x14000c483
   14000c496:	test   rdx,rdx
   14000c499:	jne    0x14000c4a9
   14000c49b:	mov    BYTE PTR [rcx],dl
   14000c49d:	call   0x140003250
   14000c4a2:	mov    ebx,0x22
   14000c4a7:	jmp    0x14000c46e
   14000c4a9:	xor    eax,eax
   14000c4ab:	jmp    0x14000c477
   14000c4ad:	int3   
   14000c4ae:	int3   
   14000c4af:	int3   
   14000c4b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c4b5:	mov    QWORD PTR [rsp+0x10],rsi
   14000c4ba:	push   rdi
   14000c4bb:	sub    rsp,0x40
   14000c4bf:	mov    ebx,edx
   14000c4c1:	mov    rdx,rcx
   14000c4c4:	lea    rcx,[rsp+0x20]
   14000c4c9:	mov    edi,r9d
   14000c4cc:	mov    esi,r8d
   14000c4cf:	call   0x140004810
   14000c4d4:	mov    rax,QWORD PTR [rsp+0x28]
   14000c4d9:	movzx  r11d,bl
   14000c4dd:	test   BYTE PTR [r11+rax*1+0x1d],dil
   14000c4e2:	jne    0x14000c503
   14000c4e4:	test   esi,esi
   14000c4e6:	je     0x14000c4fd
   14000c4e8:	mov    rax,QWORD PTR [rsp+0x20]
   14000c4ed:	mov    rcx,QWORD PTR [rax+0x140]
   14000c4f4:	movzx  eax,WORD PTR [rcx+r11*2]
   14000c4f9:	and    eax,esi
   14000c4fb:	jmp    0x14000c4ff
   14000c4fd:	xor    eax,eax
   14000c4ff:	test   eax,eax
   14000c501:	je     0x14000c508
   14000c503:	mov    eax,0x1
   14000c508:	cmp    BYTE PTR [rsp+0x38],0x0
   14000c50d:	je     0x14000c51b
   14000c50f:	mov    rcx,QWORD PTR [rsp+0x30]
   14000c514:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c51b:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c520:	mov    rsi,QWORD PTR [rsp+0x58]
   14000c525:	add    rsp,0x40
   14000c529:	pop    rdi
   14000c52a:	ret    
   14000c52b:	int3   
   14000c52c:	mov    edx,ecx
   14000c52e:	mov    r9d,0x4
   14000c534:	xor    r8d,r8d
   14000c537:	xor    ecx,ecx
   14000c539:	jmp    0x14000c4b0
   14000c53e:	int3   
   14000c53f:	int3   
   14000c540:	mov    rax,rsp
   14000c543:	mov    QWORD PTR [rax+0x8],rbx
   14000c547:	mov    QWORD PTR [rax+0x10],rbp
   14000c54b:	mov    QWORD PTR [rax+0x18],rsi
   14000c54f:	mov    QWORD PTR [rax+0x20],rdi
   14000c553:	push   r12
   14000c555:	push   r13
   14000c557:	push   r15
   14000c559:	sub    rsp,0x20
   14000c55d:	mov    rbp,rdx
   14000c560:	xor    edi,edi
   14000c562:	xor    edx,edx
   14000c564:	lea    r8d,[rdi+0x1]
   14000c568:	mov    esi,ecx
   14000c56a:	call   0x140009be4
   14000c56f:	mov    r13,rax
   14000c572:	cmp    rax,0xffffffffffffffff
   14000c576:	je     0x14000c5c8
   14000c578:	lea    r8d,[rdi+0x2]
   14000c57c:	xor    edx,edx
   14000c57e:	mov    ecx,esi
   14000c580:	call   0x140009be4
   14000c585:	cmp    rax,0xffffffffffffffff
   14000c589:	je     0x14000c5c8
   14000c58b:	mov    rbx,rbp
   14000c58e:	sub    rbx,rax
   14000c591:	test   rbx,rbx
   14000c594:	jle    0x14000c65b
   14000c59a:	call   QWORD PTR [rip+0x1cb0]        # 0x14000e250
   14000c5a0:	mov    r15d,0x1000
   14000c5a6:	lea    edx,[rdi+0x8]
   14000c5a9:	mov    rcx,rax
   14000c5ac:	mov    r8d,r15d
   14000c5af:	call   QWORD PTR [rip+0x1ae3]        # 0x14000e098
   14000c5b5:	mov    rbp,rax
   14000c5b8:	test   rax,rax
   14000c5bb:	jne    0x14000c5ee
   14000c5bd:	call   0x140003250
   14000c5c2:	mov    DWORD PTR [rax],0xc
   14000c5c8:	call   0x140003250
   14000c5cd:	mov    eax,DWORD PTR [rax]
   14000c5cf:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c5d4:	mov    rbp,QWORD PTR [rsp+0x48]
   14000c5d9:	mov    rsi,QWORD PTR [rsp+0x50]
   14000c5de:	mov    rdi,QWORD PTR [rsp+0x58]
   14000c5e3:	add    rsp,0x20
   14000c5e7:	pop    r15
   14000c5e9:	pop    r13
   14000c5eb:	pop    r12
   14000c5ed:	ret    
   14000c5ee:	mov    edx,0x8000
   14000c5f3:	mov    ecx,esi
   14000c5f5:	call   0x14000c6d8
   14000c5fa:	mov    r12d,eax
   14000c5fd:	mov    r8d,ebx
   14000c600:	cmp    rbx,r15
   14000c603:	mov    rdx,rbp
   14000c606:	cmovge r8d,r15d
   14000c60a:	mov    ecx,esi
   14000c60c:	call   0x1400087b4
   14000c611:	cmp    eax,0xffffffff
   14000c614:	je     0x14000c622
   14000c616:	cdqe   
   14000c618:	sub    rbx,rax
   14000c61b:	test   rbx,rbx
   14000c61e:	jle    0x14000c63b
   14000c620:	jmp    0x14000c5fd
   14000c622:	call   0x140003270
   14000c627:	cmp    DWORD PTR [rax],0x5
   14000c62a:	jne    0x14000c637
   14000c62c:	call   0x140003250
   14000c631:	mov    DWORD PTR [rax],0xd
   14000c637:	or     rdi,0xffffffffffffffff
   14000c63b:	mov    edx,r12d
   14000c63e:	mov    ecx,esi
   14000c640:	call   0x14000c6d8
   14000c645:	call   QWORD PTR [rip+0x1c05]        # 0x14000e250
   14000c64b:	mov    r8,rbp
   14000c64e:	mov    rcx,rax
   14000c651:	xor    edx,edx
   14000c653:	call   QWORD PTR [rip+0x1a37]        # 0x14000e090
   14000c659:	jmp    0x14000c6b0
   14000c65b:	jns    0x14000c6ba
   14000c65d:	xor    r8d,r8d
   14000c660:	mov    rdx,rbp
   14000c663:	mov    ecx,esi
   14000c665:	call   0x140009be4
   14000c66a:	cmp    rax,0xffffffffffffffff
   14000c66e:	je     0x14000c5c8
   14000c674:	mov    ecx,esi
   14000c676:	call   0x14000bbe0
   14000c67b:	mov    rcx,rax
   14000c67e:	call   QWORD PTR [rip+0x1bc4]        # 0x14000e248
   14000c684:	neg    eax
   14000c686:	sbb    rdi,rdi
   14000c689:	neg    rdi
   14000c68c:	dec    rdi
   14000c68f:	cmp    rdi,0xffffffffffffffff
   14000c693:	jne    0x14000c6ba
   14000c695:	call   0x140003250
   14000c69a:	mov    DWORD PTR [rax],0xd
   14000c6a0:	call   0x140003270
   14000c6a5:	mov    rbx,rax
   14000c6a8:	call   QWORD PTR [rip+0x19c2]        # 0x14000e070
   14000c6ae:	mov    DWORD PTR [rbx],eax
   14000c6b0:	cmp    rdi,0xffffffffffffffff
   14000c6b4:	je     0x14000c5c8
   14000c6ba:	xor    r8d,r8d
   14000c6bd:	mov    rdx,r13
   14000c6c0:	mov    ecx,esi
   14000c6c2:	call   0x140009be4
   14000c6c7:	cmp    rax,0xffffffffffffffff
   14000c6cb:	je     0x14000c5c8
   14000c6d1:	xor    eax,eax
   14000c6d3:	jmp    0x14000c5cf
   14000c6d8:	mov    QWORD PTR [rsp+0x8],rbx
   14000c6dd:	movsxd r8,ecx
   14000c6e0:	lea    rbx,[rip+0x7f39]        # 0x140014620
   14000c6e7:	mov    r9,r8
   14000c6ea:	and    r8d,0x1f
   14000c6ee:	sar    r9,0x5
   14000c6f2:	imul   r8,r8,0x58
   14000c6f6:	mov    rcx,QWORD PTR [rbx+r9*8]
   14000c6fa:	mov    al,BYTE PTR [rcx+r8*1+0x38]
   14000c6ff:	movzx  r11d,BYTE PTR [rcx+r8*1+0x8]
   14000c705:	add    al,al
   14000c707:	and    r11d,0x80
   14000c70e:	movsx  r10d,al
   14000c712:	sar    r10d,1
   14000c715:	cmp    edx,0x4000
   14000c71b:	je     0x14000c775
   14000c71d:	cmp    edx,0x8000
   14000c723:	je     0x14000c76d
   14000c725:	cmp    edx,0x10000
   14000c72b:	je     0x14000c755
   14000c72d:	cmp    edx,0x20000
   14000c733:	je     0x14000c755
   14000c735:	cmp    edx,0x40000
   14000c73b:	jne    0x14000c785
   14000c73d:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   14000c743:	mov    rax,QWORD PTR [rbx+r9*8]
   14000c747:	and    BYTE PTR [rax+r8*1+0x38],0x81
   14000c74d:	or     BYTE PTR [rax+r8*1+0x38],0x1
   14000c753:	jmp    0x14000c785
   14000c755:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   14000c75b:	mov    rax,QWORD PTR [rbx+r9*8]
   14000c75f:	and    BYTE PTR [rax+r8*1+0x38],0x82
   14000c765:	or     BYTE PTR [rax+r8*1+0x38],0x2
   14000c76b:	jmp    0x14000c785
   14000c76d:	and    BYTE PTR [rcx+r8*1+0x8],0x7f
   14000c773:	jmp    0x14000c785
   14000c775:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   14000c77b:	mov    rcx,QWORD PTR [rbx+r9*8]
   14000c77f:	and    BYTE PTR [rcx+r8*1+0x38],0x80
   14000c785:	test   r11d,r11d
   14000c788:	jne    0x14000c791
   14000c78a:	mov    eax,0x8000
   14000c78f:	jmp    0x14000c7a0
   14000c791:	neg    r10d
   14000c794:	sbb    eax,eax
   14000c796:	and    eax,0xc000
   14000c79b:	add    eax,0x4000
   14000c7a0:	mov    rbx,QWORD PTR [rsp+0x8]
   14000c7a5:	ret    
   14000c7a6:	int3   
   14000c7a7:	int3   
   14000c7a8:	sub    rsp,0x28
   14000c7ac:	test   rcx,rcx
   14000c7af:	jne    0x14000c7c8
   14000c7b1:	call   0x140003250
   14000c7b6:	mov    DWORD PTR [rax],0x16
   14000c7bc:	call   0x1400031e8
   14000c7c1:	mov    eax,0x16
   14000c7c6:	jmp    0x14000c7d2
   14000c7c8:	mov    eax,DWORD PTR [rip+0x7c1e]        # 0x1400143ec
   14000c7ce:	mov    DWORD PTR [rcx],eax
   14000c7d0:	xor    eax,eax
   14000c7d2:	add    rsp,0x28
   14000c7d6:	ret    
   14000c7d7:	int3   
   14000c7d8:	mov    QWORD PTR [rsp+0x10],rbx
   14000c7dd:	mov    WORD PTR [rsp+0x8],cx
   14000c7e2:	push   rbp
   14000c7e3:	mov    rbp,rsp
   14000c7e6:	sub    rsp,0x50
   14000c7ea:	mov    eax,0xffff
   14000c7ef:	cmp    cx,ax
   14000c7f2:	je     0x14000c8a2
   14000c7f8:	lea    rcx,[rbp-0x20]
   14000c7fc:	call   0x140004810
   14000c801:	mov    rbx,QWORD PTR [rbp-0x20]
   14000c805:	cmp    DWORD PTR [rbx+0x14],0x0
   14000c809:	jne    0x14000c832
   14000c80b:	movzx  edx,WORD PTR [rbp+0x10]
   14000c80f:	lea    eax,[rdx-0x41]
   14000c812:	cmp    ax,0x19
   14000c816:	ja     0x14000c81c
   14000c818:	add    dx,0x20
   14000c81c:	cmp    BYTE PTR [rbp-0x8],0x0
   14000c820:	je     0x14000c82d
   14000c822:	mov    rcx,QWORD PTR [rbp-0x10]
   14000c826:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c82d:	movzx  eax,dx
   14000c830:	jmp    0x14000c8a2
   14000c832:	movzx  ecx,WORD PTR [rbp+0x10]
   14000c836:	mov    edx,0x100
   14000c83b:	cmp    cx,dx
   14000c83e:	jae    0x14000c865
   14000c840:	mov    edx,0x1
   14000c845:	call   0x140002254
   14000c84a:	test   eax,eax
   14000c84c:	jne    0x14000c854
   14000c84e:	movzx  eax,WORD PTR [rbp+0x10]
   14000c852:	jmp    0x14000c891
   14000c854:	movzx  ecx,WORD PTR [rbp+0x10]
   14000c858:	mov    rax,QWORD PTR [rbx+0x148]
   14000c85f:	movzx  eax,BYTE PTR [rax+rcx*1]
   14000c863:	jmp    0x14000c891
   14000c865:	mov    ecx,DWORD PTR [rbx+0x14]
   14000c868:	lea    rax,[rbp+0x20]
   14000c86c:	mov    r9d,0x1
   14000c872:	mov    DWORD PTR [rsp+0x28],r9d
   14000c877:	lea    r8,[rbp+0x10]
   14000c87b:	mov    QWORD PTR [rsp+0x20],rax
   14000c880:	call   0x14000d63c
   14000c885:	test   eax,eax
   14000c887:	movzx  eax,WORD PTR [rbp+0x10]
   14000c88b:	je     0x14000c891
   14000c88d:	movzx  eax,WORD PTR [rbp+0x20]
   14000c891:	cmp    BYTE PTR [rbp-0x8],0x0
   14000c895:	je     0x14000c8a2
   14000c897:	mov    rcx,QWORD PTR [rbp-0x10]
   14000c89b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c8a2:	mov    rbx,QWORD PTR [rsp+0x68]
   14000c8a7:	add    rsp,0x50
   14000c8ab:	pop    rbp
   14000c8ac:	ret    
   14000c8ad:	int3   
   14000c8ae:	int3   
   14000c8af:	int3   
   14000c8b0:	sub    rsp,0x28
   14000c8b4:	call   0x140007e08
   14000c8b9:	test   rax,rax
   14000c8bc:	je     0x14000c8c8
   14000c8be:	mov    ecx,0x16
   14000c8c3:	call   0x140007e18
   14000c8c8:	test   BYTE PTR [rip+0x6a19],0x2        # 0x1400132e8
   14000c8cf:	je     0x14000c8e5
   14000c8d1:	mov    r8d,0x1
   14000c8d7:	mov    edx,0x40000015
   14000c8dc:	lea    ecx,[r8+0x2]
   14000c8e0:	call   0x140002ff8
   14000c8e5:	mov    ecx,0x3
   14000c8ea:	call   0x1400037b4
   14000c8ef:	int3   
   14000c8f0:	sub    rsp,0x28
   14000c8f4:	test   rcx,rcx
   14000c8f7:	jne    0x14000c912
   14000c8f9:	call   0x140003250
   14000c8fe:	mov    DWORD PTR [rax],0x16
   14000c904:	call   0x1400031e8
   14000c909:	or     rax,0xffffffffffffffff
   14000c90d:	add    rsp,0x28
   14000c911:	ret    
   14000c912:	mov    r8,rcx
   14000c915:	mov    rcx,QWORD PTR [rip+0x703c]        # 0x140013958
   14000c91c:	xor    edx,edx
   14000c91e:	add    rsp,0x28
   14000c922:	rex.W jmp QWORD PTR [rip+0x192f]        # 0x14000e258
   14000c929:	int3   
   14000c92a:	int3   
   14000c92b:	int3   
   14000c92c:	mov    ecx,0x2
   14000c931:	jmp    0x1400037e0
   14000c936:	int3   
   14000c937:	int3   
   14000c938:	mov    WORD PTR [rsp+0x8],cx
   14000c93d:	sub    rsp,0x38
   14000c941:	mov    rcx,QWORD PTR [rip+0x6a68]        # 0x1400133b0
   14000c948:	cmp    rcx,0xfffffffffffffffe
   14000c94c:	jne    0x14000c95a
   14000c94e:	call   0x14000d908
   14000c953:	mov    rcx,QWORD PTR [rip+0x6a56]        # 0x1400133b0
   14000c95a:	cmp    rcx,0xffffffffffffffff
   14000c95e:	jne    0x14000c967
   14000c960:	mov    eax,0xffff
   14000c965:	jmp    0x14000c98c
   14000c967:	and    QWORD PTR [rsp+0x20],0x0
   14000c96d:	lea    r9,[rsp+0x48]
   14000c972:	lea    rdx,[rsp+0x40]
   14000c977:	mov    r8d,0x1
   14000c97d:	call   QWORD PTR [rip+0x18dd]        # 0x14000e260
   14000c983:	test   eax,eax
   14000c985:	je     0x14000c960
   14000c987:	movzx  eax,WORD PTR [rsp+0x40]
   14000c98c:	add    rsp,0x38
   14000c990:	ret    
   14000c991:	int3   
   14000c992:	int3   
   14000c993:	int3   
   14000c994:	int3   
   14000c995:	int3   
   14000c996:	int3   
   14000c997:	int3   
   14000c998:	int3   
   14000c999:	int3   
   14000c99a:	int3   
   14000c99b:	int3   
   14000c99c:	int3   
   14000c99d:	int3   
   14000c99e:	int3   
   14000c99f:	int3   
   14000c9a0:	int3   
   14000c9a1:	int3   
   14000c9a2:	int3   
   14000c9a3:	int3   
   14000c9a4:	int3   
   14000c9a5:	int3   
   14000c9a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c9b0:	sub    rsp,0x10
   14000c9b4:	mov    QWORD PTR [rsp],r10
   14000c9b8:	mov    QWORD PTR [rsp+0x8],r11
   14000c9bd:	xor    r11,r11
   14000c9c0:	lea    r10,[rsp+0x18]
   14000c9c5:	sub    r10,rax
   14000c9c8:	cmovb  r10,r11
   14000c9cc:	mov    r11,QWORD PTR gs:0x10
   14000c9d5:	cmp    r10,r11
   14000c9d8:	jae    0x14000c9f0
   14000c9da:	and    r10w,0xf000
   14000c9e0:	lea    r11,[r11-0x1000]
   14000c9e7:	mov    BYTE PTR [r11],0x0
   14000c9eb:	cmp    r10,r11
   14000c9ee:	jne    0x14000c9e0
   14000c9f0:	mov    r10,QWORD PTR [rsp]
   14000c9f4:	mov    r11,QWORD PTR [rsp+0x8]
   14000c9f9:	add    rsp,0x10
   14000c9fd:	ret    
   14000c9fe:	int3   
   14000c9ff:	int3   
   14000ca00:	rex push rbp
   14000ca02:	push   r12
   14000ca04:	push   r13
   14000ca06:	push   r14
   14000ca08:	push   r15
   14000ca0a:	sub    rsp,0x50
   14000ca0e:	lea    rbp,[rsp+0x40]
   14000ca13:	mov    QWORD PTR [rbp+0x40],rbx
   14000ca17:	mov    QWORD PTR [rbp+0x48],rsi
   14000ca1b:	mov    QWORD PTR [rbp+0x50],rdi
   14000ca1f:	mov    rax,QWORD PTR [rip+0x59a2]        # 0x1400123c8
   14000ca26:	xor    rax,rbp
   14000ca29:	mov    QWORD PTR [rbp+0x8],rax
   14000ca2d:	mov    ebx,DWORD PTR [rbp+0x60]
   14000ca30:	xor    edi,edi
   14000ca32:	mov    r14,r9
   14000ca35:	mov    r15d,r8d
   14000ca38:	mov    DWORD PTR [rbp+0x0],edx
   14000ca3b:	test   ebx,ebx
   14000ca3d:	jle    0x14000ca69
   14000ca3f:	mov    r10d,ebx
   14000ca42:	mov    rax,r9
   14000ca45:	dec    r10d
   14000ca48:	cmp    BYTE PTR [rax],dil
   14000ca4b:	je     0x14000ca59
   14000ca4d:	inc    rax
   14000ca50:	test   r10d,r10d
   14000ca53:	jne    0x14000ca45
   14000ca55:	or     r10d,0xffffffff
   14000ca59:	mov    eax,ebx
   14000ca5b:	sub    eax,r10d
   14000ca5e:	dec    eax
   14000ca60:	cmp    eax,ebx
   14000ca62:	lea    ebx,[rax+0x1]
   14000ca65:	jl     0x14000ca69
   14000ca67:	mov    ebx,eax
   14000ca69:	mov    r12d,DWORD PTR [rbp+0x78]
   14000ca6d:	mov    esi,edi
   14000ca6f:	test   r12d,r12d
   14000ca72:	jne    0x14000ca7b
   14000ca74:	mov    rax,QWORD PTR [rcx]
   14000ca77:	mov    r12d,DWORD PTR [rax+0x4]
   14000ca7b:	neg    DWORD PTR [rbp+0x80]
   14000ca81:	mov    r9d,ebx
   14000ca84:	mov    r8,r14
   14000ca87:	sbb    edx,edx
   14000ca89:	mov    ecx,r12d
   14000ca8c:	mov    DWORD PTR [rsp+0x28],edi
   14000ca90:	and    edx,0x8
   14000ca93:	mov    QWORD PTR [rsp+0x20],rdi
   14000ca98:	inc    edx
   14000ca9a:	call   QWORD PTR [rip+0x15b8]        # 0x14000e058
   14000caa0:	movsxd r13,eax
   14000caa3:	test   eax,eax
   14000caa5:	jne    0x14000caae
   14000caa7:	xor    eax,eax
   14000caa9:	jmp    0x14000cca4
   14000caae:	movabs r8,0xffffffffffffff0
   14000cab8:	test   eax,eax
   14000caba:	jle    0x14000cb1a
   14000cabc:	xor    edx,edx
   14000cabe:	lea    rax,[rdx-0x20]
   14000cac2:	div    r13
   14000cac5:	cmp    rax,0x2
   14000cac9:	jb     0x14000cb1a
   14000cacb:	lea    rcx,[r13+r13*1+0x10]
   14000cad0:	cmp    rcx,0x400
   14000cad7:	ja     0x14000cb03
   14000cad9:	lea    rax,[rcx+0xf]
   14000cadd:	cmp    rax,rcx
   14000cae0:	ja     0x14000cae5
   14000cae2:	mov    rax,r8
   14000cae5:	and    rax,0xfffffffffffffff0
   14000cae9:	call   0x14000c9b0
   14000caee:	sub    rsp,rax
   14000caf1:	lea    rdi,[rsp+0x40]
   14000caf6:	test   rdi,rdi
   14000caf9:	je     0x14000caa7
   14000cafb:	mov    DWORD PTR [rdi],0xcccc
   14000cb01:	jmp    0x14000cb16
   14000cb03:	call   0x140001b18
   14000cb08:	mov    rdi,rax
   14000cb0b:	test   rax,rax
   14000cb0e:	je     0x14000cb1a
   14000cb10:	mov    DWORD PTR [rax],0xdddd
   14000cb16:	add    rdi,0x10
   14000cb1a:	test   rdi,rdi
   14000cb1d:	je     0x14000caa7
   14000cb1f:	mov    r9d,ebx
   14000cb22:	mov    r8,r14
   14000cb25:	mov    edx,0x1
   14000cb2a:	mov    ecx,r12d
   14000cb2d:	mov    DWORD PTR [rsp+0x28],r13d
   14000cb32:	mov    QWORD PTR [rsp+0x20],rdi
   14000cb37:	call   QWORD PTR [rip+0x151b]        # 0x14000e058
   14000cb3d:	test   eax,eax
   14000cb3f:	je     0x14000cc91
   14000cb45:	mov    r14d,DWORD PTR [rbp+0x0]
   14000cb49:	and    DWORD PTR [rsp+0x28],esi
   14000cb4d:	and    QWORD PTR [rsp+0x20],rsi
   14000cb52:	mov    ecx,r14d
   14000cb55:	mov    r9d,r13d
   14000cb58:	mov    r8,rdi
   14000cb5b:	mov    edx,r15d
   14000cb5e:	call   QWORD PTR [rip+0x1704]        # 0x14000e268
   14000cb64:	movsxd rsi,eax
   14000cb67:	test   eax,eax
   14000cb69:	je     0x14000cc91
   14000cb6f:	mov    r8d,0x400
   14000cb75:	test   r8d,r15d
   14000cb78:	je     0x14000cbb1
   14000cb7a:	mov    ecx,DWORD PTR [rbp+0x70]
   14000cb7d:	test   ecx,ecx
   14000cb7f:	je     0x14000cc91
   14000cb85:	cmp    esi,ecx
   14000cb87:	jg     0x14000cc91
   14000cb8d:	mov    rax,QWORD PTR [rbp+0x68]
   14000cb91:	mov    DWORD PTR [rsp+0x28],ecx
   14000cb95:	mov    r9d,r13d
   14000cb98:	mov    r8,rdi
   14000cb9b:	mov    edx,r15d
   14000cb9e:	mov    ecx,r14d
   14000cba1:	mov    QWORD PTR [rsp+0x20],rax
   14000cba6:	call   QWORD PTR [rip+0x16bc]        # 0x14000e268
   14000cbac:	jmp    0x14000cc91
   14000cbb1:	test   eax,eax
   14000cbb3:	jle    0x14000cc1c
   14000cbb5:	xor    edx,edx
   14000cbb7:	lea    rax,[rdx-0x20]
   14000cbbb:	div    rsi
   14000cbbe:	cmp    rax,0x2
   14000cbc2:	jb     0x14000cc1c
   14000cbc4:	lea    rcx,[rsi+rsi*1+0x10]
   14000cbc9:	cmp    rcx,r8
   14000cbcc:	ja     0x14000cc03
   14000cbce:	lea    rax,[rcx+0xf]
   14000cbd2:	cmp    rax,rcx
   14000cbd5:	ja     0x14000cbe1
   14000cbd7:	movabs rax,0xffffffffffffff0
   14000cbe1:	and    rax,0xfffffffffffffff0
   14000cbe5:	call   0x14000c9b0
   14000cbea:	sub    rsp,rax
   14000cbed:	lea    rbx,[rsp+0x40]
   14000cbf2:	test   rbx,rbx
   14000cbf5:	je     0x14000cc91
   14000cbfb:	mov    DWORD PTR [rbx],0xcccc
   14000cc01:	jmp    0x14000cc16
   14000cc03:	call   0x140001b18
   14000cc08:	mov    rbx,rax
   14000cc0b:	test   rax,rax
   14000cc0e:	je     0x14000cc1e
   14000cc10:	mov    DWORD PTR [rax],0xdddd
   14000cc16:	add    rbx,0x10
   14000cc1a:	jmp    0x14000cc1e
   14000cc1c:	xor    ebx,ebx
   14000cc1e:	test   rbx,rbx
   14000cc21:	je     0x14000cc91
   14000cc23:	mov    r9d,r13d
   14000cc26:	mov    r8,rdi
   14000cc29:	mov    edx,r15d
   14000cc2c:	mov    ecx,r14d
   14000cc2f:	mov    DWORD PTR [rsp+0x28],esi
   14000cc33:	mov    QWORD PTR [rsp+0x20],rbx
   14000cc38:	call   QWORD PTR [rip+0x162a]        # 0x14000e268
   14000cc3e:	xor    ecx,ecx
   14000cc40:	test   eax,eax
   14000cc42:	je     0x14000cc80
   14000cc44:	mov    eax,DWORD PTR [rbp+0x70]
   14000cc47:	xor    edx,edx
   14000cc49:	mov    QWORD PTR [rsp+0x38],rcx
   14000cc4e:	mov    r9d,esi
   14000cc51:	mov    r8,rbx
   14000cc54:	mov    QWORD PTR [rsp+0x30],rcx
   14000cc59:	test   eax,eax
   14000cc5b:	jne    0x14000cc68
   14000cc5d:	mov    DWORD PTR [rsp+0x28],ecx
   14000cc61:	mov    QWORD PTR [rsp+0x20],rcx
   14000cc66:	jmp    0x14000cc75
   14000cc68:	mov    DWORD PTR [rsp+0x28],eax
   14000cc6c:	mov    rax,QWORD PTR [rbp+0x68]
   14000cc70:	mov    QWORD PTR [rsp+0x20],rax
   14000cc75:	mov    ecx,r12d
   14000cc78:	call   QWORD PTR [rip+0x1512]        # 0x14000e190
   14000cc7e:	mov    esi,eax
   14000cc80:	lea    rcx,[rbx-0x10]
   14000cc84:	cmp    DWORD PTR [rcx],0xdddd
   14000cc8a:	jne    0x14000cc91
   14000cc8c:	call   0x140001a94
   14000cc91:	lea    rcx,[rdi-0x10]
   14000cc95:	cmp    DWORD PTR [rcx],0xdddd
   14000cc9b:	jne    0x14000cca2
   14000cc9d:	call   0x140001a94
   14000cca2:	mov    eax,esi
   14000cca4:	mov    rcx,QWORD PTR [rbp+0x8]
   14000cca8:	xor    rcx,rbp
   14000ccab:	call   0x140001920
   14000ccb0:	mov    rbx,QWORD PTR [rbp+0x40]
   14000ccb4:	mov    rsi,QWORD PTR [rbp+0x48]
   14000ccb8:	mov    rdi,QWORD PTR [rbp+0x50]
   14000ccbc:	lea    rsp,[rbp+0x10]
   14000ccc0:	pop    r15
   14000ccc2:	pop    r14
   14000ccc4:	pop    r13
   14000ccc6:	pop    r12
   14000ccc8:	pop    rbp
   14000ccc9:	ret    
   14000ccca:	int3   
   14000cccb:	int3   
   14000cccc:	mov    QWORD PTR [rsp+0x8],rbx
   14000ccd1:	mov    QWORD PTR [rsp+0x10],rsi
   14000ccd6:	push   rdi
   14000ccd7:	sub    rsp,0x70
   14000ccdb:	mov    esi,edx
   14000ccdd:	mov    rdx,rcx
   14000cce0:	lea    rcx,[rsp+0x50]
   14000cce5:	mov    rbx,r9
   14000cce8:	mov    edi,r8d
   14000cceb:	call   0x140004810
   14000ccf0:	mov    eax,DWORD PTR [rsp+0xb8]
   14000ccf7:	mov    r11d,DWORD PTR [rsp+0xc0]
   14000ccff:	lea    rcx,[rsp+0x50]
   14000cd04:	mov    DWORD PTR [rsp+0x40],r11d
   14000cd09:	mov    DWORD PTR [rsp+0x38],eax
   14000cd0d:	mov    eax,DWORD PTR [rsp+0xb0]
   14000cd14:	mov    DWORD PTR [rsp+0x30],eax
   14000cd18:	mov    rax,QWORD PTR [rsp+0xa8]
   14000cd20:	mov    r9,rbx
   14000cd23:	mov    QWORD PTR [rsp+0x28],rax
   14000cd28:	mov    eax,DWORD PTR [rsp+0xa0]
   14000cd2f:	mov    r8d,edi
   14000cd32:	mov    edx,esi
   14000cd34:	mov    DWORD PTR [rsp+0x20],eax
   14000cd38:	call   0x14000ca00
   14000cd3d:	cmp    BYTE PTR [rsp+0x68],0x0
   14000cd42:	je     0x14000cd50
   14000cd44:	mov    rcx,QWORD PTR [rsp+0x60]
   14000cd49:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000cd50:	lea    r11,[rsp+0x70]
   14000cd55:	mov    rbx,QWORD PTR [r11+0x10]
   14000cd59:	mov    rsi,QWORD PTR [r11+0x18]
   14000cd5d:	mov    rsp,r11
   14000cd60:	pop    rdi
   14000cd61:	ret    
   14000cd62:	int3   
   14000cd63:	int3   
   14000cd64:	rex push rbp
   14000cd66:	push   r12
   14000cd68:	push   r13
   14000cd6a:	push   r14
   14000cd6c:	push   r15
   14000cd6e:	sub    rsp,0x40
   14000cd72:	lea    rbp,[rsp+0x30]
   14000cd77:	mov    QWORD PTR [rbp+0x40],rbx
   14000cd7b:	mov    QWORD PTR [rbp+0x48],rsi
   14000cd7f:	mov    QWORD PTR [rbp+0x50],rdi
   14000cd83:	mov    rax,QWORD PTR [rip+0x563e]        # 0x1400123c8
   14000cd8a:	xor    rax,rbp
   14000cd8d:	mov    QWORD PTR [rbp+0x0],rax
   14000cd91:	mov    esi,DWORD PTR [rbp+0x68]
   14000cd94:	xor    edi,edi
   14000cd96:	mov    r13d,r9d
   14000cd99:	mov    r14,r8
   14000cd9c:	mov    r15d,edx
   14000cd9f:	test   esi,esi
   14000cda1:	jne    0x14000cda9
   14000cda3:	mov    rax,QWORD PTR [rcx]
   14000cda6:	mov    esi,DWORD PTR [rax+0x4]
   14000cda9:	neg    DWORD PTR [rbp+0x70]
   14000cdac:	mov    ecx,esi
   14000cdae:	mov    DWORD PTR [rsp+0x28],edi
   14000cdb2:	sbb    edx,edx
   14000cdb4:	mov    QWORD PTR [rsp+0x20],rdi
   14000cdb9:	and    edx,0x8
   14000cdbc:	inc    edx
   14000cdbe:	call   QWORD PTR [rip+0x1294]        # 0x14000e058
   14000cdc4:	movsxd r12,eax
   14000cdc7:	test   eax,eax
   14000cdc9:	jne    0x14000cdd2
   14000cdcb:	xor    eax,eax
   14000cdcd:	jmp    0x14000ce9c
   14000cdd2:	jle    0x14000ce3b
   14000cdd4:	movabs rax,0x7ffffffffffffff0
   14000cdde:	cmp    r12,rax
   14000cde1:	ja     0x14000ce3b
   14000cde3:	lea    rcx,[r12+r12*1+0x10]
   14000cde8:	cmp    rcx,0x400
   14000cdef:	ja     0x14000ce22
   14000cdf1:	lea    rax,[rcx+0xf]
   14000cdf5:	cmp    rax,rcx
   14000cdf8:	ja     0x14000ce04
   14000cdfa:	movabs rax,0xffffffffffffff0
   14000ce04:	and    rax,0xfffffffffffffff0
   14000ce08:	call   0x14000c9b0
   14000ce0d:	sub    rsp,rax
   14000ce10:	lea    rbx,[rsp+0x30]
   14000ce15:	test   rbx,rbx
   14000ce18:	je     0x14000cdcb
   14000ce1a:	mov    DWORD PTR [rbx],0xcccc
   14000ce20:	jmp    0x14000ce35
   14000ce22:	call   0x140001b18
   14000ce27:	mov    rbx,rax
   14000ce2a:	test   rax,rax
   14000ce2d:	je     0x14000ce3e
   14000ce2f:	mov    DWORD PTR [rax],0xdddd
   14000ce35:	add    rbx,0x10
   14000ce39:	jmp    0x14000ce3e
   14000ce3b:	mov    rbx,rdi
   14000ce3e:	test   rbx,rbx
   14000ce41:	je     0x14000cdcb
   14000ce43:	mov    r8,r12
   14000ce46:	xor    edx,edx
   14000ce48:	mov    rcx,rbx
   14000ce4b:	add    r8,r8
   14000ce4e:	call   0x1400048d0
   14000ce53:	mov    r9d,r13d
   14000ce56:	mov    r8,r14
   14000ce59:	mov    edx,0x1
   14000ce5e:	mov    ecx,esi
   14000ce60:	mov    DWORD PTR [rsp+0x28],r12d
   14000ce65:	mov    QWORD PTR [rsp+0x20],rbx
   14000ce6a:	call   QWORD PTR [rip+0x11e8]        # 0x14000e058
   14000ce70:	test   eax,eax
   14000ce72:	je     0x14000ce89
   14000ce74:	mov    r9,QWORD PTR [rbp+0x60]
   14000ce78:	mov    r8d,eax
   14000ce7b:	mov    rdx,rbx
   14000ce7e:	mov    ecx,r15d
   14000ce81:	call   QWORD PTR [rip+0x1229]        # 0x14000e0b0
   14000ce87:	mov    edi,eax
   14000ce89:	lea    rcx,[rbx-0x10]
   14000ce8d:	cmp    DWORD PTR [rcx],0xdddd
   14000ce93:	jne    0x14000ce9a
   14000ce95:	call   0x140001a94
   14000ce9a:	mov    eax,edi
   14000ce9c:	mov    rcx,QWORD PTR [rbp+0x0]
   14000cea0:	xor    rcx,rbp
   14000cea3:	call   0x140001920
   14000cea8:	mov    rbx,QWORD PTR [rbp+0x40]
   14000ceac:	mov    rsi,QWORD PTR [rbp+0x48]
   14000ceb0:	mov    rdi,QWORD PTR [rbp+0x50]
   14000ceb4:	lea    rsp,[rbp+0x10]
   14000ceb8:	pop    r15
   14000ceba:	pop    r14
   14000cebc:	pop    r13
   14000cebe:	pop    r12
   14000cec0:	pop    rbp
   14000cec1:	ret    
   14000cec2:	int3   
   14000cec3:	int3   
   14000cec4:	mov    QWORD PTR [rsp+0x8],rbx
   14000cec9:	mov    QWORD PTR [rsp+0x10],rsi
   14000cece:	push   rdi
   14000cecf:	sub    rsp,0x60
   14000ced3:	mov    esi,edx
   14000ced5:	mov    rdx,rcx
   14000ced8:	lea    rcx,[rsp+0x40]
   14000cedd:	mov    ebx,r9d
   14000cee0:	mov    rdi,r8
   14000cee3:	call   0x140004810
   14000cee8:	mov    r11d,DWORD PTR [rsp+0xa8]
   14000cef0:	mov    eax,DWORD PTR [rsp+0x98]
   14000cef7:	lea    rcx,[rsp+0x40]
   14000cefc:	mov    DWORD PTR [rsp+0x30],r11d
   14000cf01:	mov    DWORD PTR [rsp+0x28],eax
   14000cf05:	mov    rax,QWORD PTR [rsp+0x90]
   14000cf0d:	mov    r9d,ebx
   14000cf10:	mov    r8,rdi
   14000cf13:	mov    edx,esi
   14000cf15:	mov    QWORD PTR [rsp+0x20],rax
   14000cf1a:	call   0x14000cd64
   14000cf1f:	cmp    BYTE PTR [rsp+0x58],0x0
   14000cf24:	je     0x14000cf32
   14000cf26:	mov    rcx,QWORD PTR [rsp+0x50]
   14000cf2b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000cf32:	mov    rbx,QWORD PTR [rsp+0x70]
   14000cf37:	mov    rsi,QWORD PTR [rsp+0x78]
   14000cf3c:	add    rsp,0x60
   14000cf40:	pop    rdi
   14000cf41:	ret    
   14000cf42:	int3   
   14000cf43:	int3   
   14000cf44:	test   rcx,rcx
   14000cf47:	je     0x14000d331
   14000cf4d:	push   rbx
   14000cf4e:	sub    rsp,0x20
   14000cf52:	mov    rbx,rcx
   14000cf55:	mov    rcx,QWORD PTR [rcx+0x8]
   14000cf59:	call   0x140001a94
   14000cf5e:	mov    rcx,QWORD PTR [rbx+0x10]
   14000cf62:	call   0x140001a94
   14000cf67:	mov    rcx,QWORD PTR [rbx+0x18]
   14000cf6b:	call   0x140001a94
   14000cf70:	mov    rcx,QWORD PTR [rbx+0x20]
   14000cf74:	call   0x140001a94
   14000cf79:	mov    rcx,QWORD PTR [rbx+0x28]
   14000cf7d:	call   0x140001a94
   14000cf82:	mov    rcx,QWORD PTR [rbx+0x30]
   14000cf86:	call   0x140001a94
   14000cf8b:	mov    rcx,QWORD PTR [rbx]
   14000cf8e:	call   0x140001a94
   14000cf93:	mov    rcx,QWORD PTR [rbx+0x40]
   14000cf97:	call   0x140001a94
   14000cf9c:	mov    rcx,QWORD PTR [rbx+0x48]
   14000cfa0:	call   0x140001a94
   14000cfa5:	mov    rcx,QWORD PTR [rbx+0x50]
   14000cfa9:	call   0x140001a94
   14000cfae:	mov    rcx,QWORD PTR [rbx+0x58]
   14000cfb2:	call   0x140001a94
   14000cfb7:	mov    rcx,QWORD PTR [rbx+0x60]
   14000cfbb:	call   0x140001a94
   14000cfc0:	mov    rcx,QWORD PTR [rbx+0x68]
   14000cfc4:	call   0x140001a94
   14000cfc9:	mov    rcx,QWORD PTR [rbx+0x38]
   14000cfcd:	call   0x140001a94
   14000cfd2:	mov    rcx,QWORD PTR [rbx+0x70]
   14000cfd6:	call   0x140001a94
   14000cfdb:	mov    rcx,QWORD PTR [rbx+0x78]
   14000cfdf:	call   0x140001a94
   14000cfe4:	mov    rcx,QWORD PTR [rbx+0x80]
   14000cfeb:	call   0x140001a94
   14000cff0:	mov    rcx,QWORD PTR [rbx+0x88]
   14000cff7:	call   0x140001a94
   14000cffc:	mov    rcx,QWORD PTR [rbx+0x90]
   14000d003:	call   0x140001a94
   14000d008:	mov    rcx,QWORD PTR [rbx+0x98]
   14000d00f:	call   0x140001a94
   14000d014:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000d01b:	call   0x140001a94
   14000d020:	mov    rcx,QWORD PTR [rbx+0xa8]
   14000d027:	call   0x140001a94
   14000d02c:	mov    rcx,QWORD PTR [rbx+0xb0]
   14000d033:	call   0x140001a94
   14000d038:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000d03f:	call   0x140001a94
   14000d044:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000d04b:	call   0x140001a94
   14000d050:	mov    rcx,QWORD PTR [rbx+0xc8]
   14000d057:	call   0x140001a94
   14000d05c:	mov    rcx,QWORD PTR [rbx+0xd0]
   14000d063:	call   0x140001a94
   14000d068:	mov    rcx,QWORD PTR [rbx+0xd8]
   14000d06f:	call   0x140001a94
   14000d074:	mov    rcx,QWORD PTR [rbx+0xe0]
   14000d07b:	call   0x140001a94
   14000d080:	mov    rcx,QWORD PTR [rbx+0xe8]
   14000d087:	call   0x140001a94
   14000d08c:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000d093:	call   0x140001a94
   14000d098:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000d09f:	call   0x140001a94
   14000d0a4:	mov    rcx,QWORD PTR [rbx+0x100]
   14000d0ab:	call   0x140001a94
   14000d0b0:	mov    rcx,QWORD PTR [rbx+0x108]
   14000d0b7:	call   0x140001a94
   14000d0bc:	mov    rcx,QWORD PTR [rbx+0x110]
   14000d0c3:	call   0x140001a94
   14000d0c8:	mov    rcx,QWORD PTR [rbx+0x118]
   14000d0cf:	call   0x140001a94
   14000d0d4:	mov    rcx,QWORD PTR [rbx+0x120]
   14000d0db:	call   0x140001a94
   14000d0e0:	mov    rcx,QWORD PTR [rbx+0x128]
   14000d0e7:	call   0x140001a94
   14000d0ec:	mov    rcx,QWORD PTR [rbx+0x130]
   14000d0f3:	call   0x140001a94
   14000d0f8:	mov    rcx,QWORD PTR [rbx+0x138]
   14000d0ff:	call   0x140001a94
   14000d104:	mov    rcx,QWORD PTR [rbx+0x140]
   14000d10b:	call   0x140001a94
   14000d110:	mov    rcx,QWORD PTR [rbx+0x148]
   14000d117:	call   0x140001a94
   14000d11c:	mov    rcx,QWORD PTR [rbx+0x150]
   14000d123:	call   0x140001a94
   14000d128:	mov    rcx,QWORD PTR [rbx+0x170]
   14000d12f:	call   0x140001a94
   14000d134:	mov    rcx,QWORD PTR [rbx+0x178]
   14000d13b:	call   0x140001a94
   14000d140:	mov    rcx,QWORD PTR [rbx+0x180]
   14000d147:	call   0x140001a94
   14000d14c:	mov    rcx,QWORD PTR [rbx+0x188]
   14000d153:	call   0x140001a94
   14000d158:	mov    rcx,QWORD PTR [rbx+0x190]
   14000d15f:	call   0x140001a94
   14000d164:	mov    rcx,QWORD PTR [rbx+0x198]
   14000d16b:	call   0x140001a94
   14000d170:	mov    rcx,QWORD PTR [rbx+0x168]
   14000d177:	call   0x140001a94
   14000d17c:	mov    rcx,QWORD PTR [rbx+0x1a8]
   14000d183:	call   0x140001a94
   14000d188:	mov    rcx,QWORD PTR [rbx+0x1b0]
   14000d18f:	call   0x140001a94
   14000d194:	mov    rcx,QWORD PTR [rbx+0x1b8]
   14000d19b:	call   0x140001a94
   14000d1a0:	mov    rcx,QWORD PTR [rbx+0x1c0]
   14000d1a7:	call   0x140001a94
   14000d1ac:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14000d1b3:	call   0x140001a94
   14000d1b8:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14000d1bf:	call   0x140001a94
   14000d1c4:	mov    rcx,QWORD PTR [rbx+0x1a0]
   14000d1cb:	call   0x140001a94
   14000d1d0:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14000d1d7:	call   0x140001a94
   14000d1dc:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14000d1e3:	call   0x140001a94
   14000d1e8:	mov    rcx,QWORD PTR [rbx+0x1e8]
   14000d1ef:	call   0x140001a94
   14000d1f4:	mov    rcx,QWORD PTR [rbx+0x1f0]
   14000d1fb:	call   0x140001a94
   14000d200:	mov    rcx,QWORD PTR [rbx+0x1f8]
   14000d207:	call   0x140001a94
   14000d20c:	mov    rcx,QWORD PTR [rbx+0x200]
   14000d213:	call   0x140001a94
   14000d218:	mov    rcx,QWORD PTR [rbx+0x208]
   14000d21f:	call   0x140001a94
   14000d224:	mov    rcx,QWORD PTR [rbx+0x210]
   14000d22b:	call   0x140001a94
   14000d230:	mov    rcx,QWORD PTR [rbx+0x218]
   14000d237:	call   0x140001a94
   14000d23c:	mov    rcx,QWORD PTR [rbx+0x220]
   14000d243:	call   0x140001a94
   14000d248:	mov    rcx,QWORD PTR [rbx+0x228]
   14000d24f:	call   0x140001a94
   14000d254:	mov    rcx,QWORD PTR [rbx+0x230]
   14000d25b:	call   0x140001a94
   14000d260:	mov    rcx,QWORD PTR [rbx+0x238]
   14000d267:	call   0x140001a94
   14000d26c:	mov    rcx,QWORD PTR [rbx+0x240]
   14000d273:	call   0x140001a94
   14000d278:	mov    rcx,QWORD PTR [rbx+0x248]
   14000d27f:	call   0x140001a94
   14000d284:	mov    rcx,QWORD PTR [rbx+0x250]
   14000d28b:	call   0x140001a94
   14000d290:	mov    rcx,QWORD PTR [rbx+0x258]
   14000d297:	call   0x140001a94
   14000d29c:	mov    rcx,QWORD PTR [rbx+0x260]
   14000d2a3:	call   0x140001a94
   14000d2a8:	mov    rcx,QWORD PTR [rbx+0x268]
   14000d2af:	call   0x140001a94
   14000d2b4:	mov    rcx,QWORD PTR [rbx+0x270]
   14000d2bb:	call   0x140001a94
   14000d2c0:	mov    rcx,QWORD PTR [rbx+0x278]
   14000d2c7:	call   0x140001a94
   14000d2cc:	mov    rcx,QWORD PTR [rbx+0x280]
   14000d2d3:	call   0x140001a94
   14000d2d8:	mov    rcx,QWORD PTR [rbx+0x288]
   14000d2df:	call   0x140001a94
   14000d2e4:	mov    rcx,QWORD PTR [rbx+0x290]
   14000d2eb:	call   0x140001a94
   14000d2f0:	mov    rcx,QWORD PTR [rbx+0x298]
   14000d2f7:	call   0x140001a94
   14000d2fc:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14000d303:	call   0x140001a94
   14000d308:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14000d30f:	call   0x140001a94
   14000d314:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14000d31b:	call   0x140001a94
   14000d320:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14000d327:	call   0x140001a94
   14000d32c:	add    rsp,0x20
   14000d330:	pop    rbx
   14000d331:	ret    
   14000d332:	int3   
   14000d333:	int3   
   14000d334:	test   rcx,rcx
   14000d337:	je     0x14000d39f
   14000d339:	push   rbx
   14000d33a:	sub    rsp,0x20
   14000d33e:	mov    rbx,rcx
   14000d341:	mov    rcx,QWORD PTR [rcx]
   14000d344:	cmp    rcx,QWORD PTR [rip+0x5fb5]        # 0x140013300
   14000d34b:	je     0x14000d352
   14000d34d:	call   0x140001a94
   14000d352:	mov    rcx,QWORD PTR [rbx+0x8]
   14000d356:	cmp    rcx,QWORD PTR [rip+0x5fab]        # 0x140013308
   14000d35d:	je     0x14000d364
   14000d35f:	call   0x140001a94
   14000d364:	mov    rcx,QWORD PTR [rbx+0x10]
   14000d368:	cmp    rcx,QWORD PTR [rip+0x5fa1]        # 0x140013310
   14000d36f:	je     0x14000d376
   14000d371:	call   0x140001a94
   14000d376:	mov    rcx,QWORD PTR [rbx+0x58]
   14000d37a:	cmp    rcx,QWORD PTR [rip+0x5fd7]        # 0x140013358
   14000d381:	je     0x14000d388
   14000d383:	call   0x140001a94
   14000d388:	mov    rcx,QWORD PTR [rbx+0x60]
   14000d38c:	cmp    rcx,QWORD PTR [rip+0x5fcd]        # 0x140013360
   14000d393:	je     0x14000d39a
   14000d395:	call   0x140001a94
   14000d39a:	add    rsp,0x20
   14000d39e:	pop    rbx
   14000d39f:	ret    
   14000d3a0:	test   rcx,rcx
   14000d3a3:	je     0x14000d4a9
   14000d3a9:	push   rbx
   14000d3aa:	sub    rsp,0x20
   14000d3ae:	mov    rbx,rcx
   14000d3b1:	mov    rcx,QWORD PTR [rcx+0x18]
   14000d3b5:	cmp    rcx,QWORD PTR [rip+0x5f5c]        # 0x140013318
   14000d3bc:	je     0x14000d3c3
   14000d3be:	call   0x140001a94
   14000d3c3:	mov    rcx,QWORD PTR [rbx+0x20]
   14000d3c7:	cmp    rcx,QWORD PTR [rip+0x5f52]        # 0x140013320
   14000d3ce:	je     0x14000d3d5
   14000d3d0:	call   0x140001a94
   14000d3d5:	mov    rcx,QWORD PTR [rbx+0x28]
   14000d3d9:	cmp    rcx,QWORD PTR [rip+0x5f48]        # 0x140013328
   14000d3e0:	je     0x14000d3e7
   14000d3e2:	call   0x140001a94
   14000d3e7:	mov    rcx,QWORD PTR [rbx+0x30]
   14000d3eb:	cmp    rcx,QWORD PTR [rip+0x5f3e]        # 0x140013330
   14000d3f2:	je     0x14000d3f9
   14000d3f4:	call   0x140001a94
   14000d3f9:	mov    rcx,QWORD PTR [rbx+0x38]
   14000d3fd:	cmp    rcx,QWORD PTR [rip+0x5f34]        # 0x140013338
   14000d404:	je     0x14000d40b
   14000d406:	call   0x140001a94
   14000d40b:	mov    rcx,QWORD PTR [rbx+0x40]
   14000d40f:	cmp    rcx,QWORD PTR [rip+0x5f2a]        # 0x140013340
   14000d416:	je     0x14000d41d
   14000d418:	call   0x140001a94
   14000d41d:	mov    rcx,QWORD PTR [rbx+0x48]
   14000d421:	cmp    rcx,QWORD PTR [rip+0x5f20]        # 0x140013348
   14000d428:	je     0x14000d42f
   14000d42a:	call   0x140001a94
   14000d42f:	mov    rcx,QWORD PTR [rbx+0x68]
   14000d433:	cmp    rcx,QWORD PTR [rip+0x5f2e]        # 0x140013368
   14000d43a:	je     0x14000d441
   14000d43c:	call   0x140001a94
   14000d441:	mov    rcx,QWORD PTR [rbx+0x70]
   14000d445:	cmp    rcx,QWORD PTR [rip+0x5f24]        # 0x140013370
   14000d44c:	je     0x14000d453
   14000d44e:	call   0x140001a94
   14000d453:	mov    rcx,QWORD PTR [rbx+0x78]
   14000d457:	cmp    rcx,QWORD PTR [rip+0x5f1a]        # 0x140013378
   14000d45e:	je     0x14000d465
   14000d460:	call   0x140001a94
   14000d465:	mov    rcx,QWORD PTR [rbx+0x80]
   14000d46c:	cmp    rcx,QWORD PTR [rip+0x5f0d]        # 0x140013380
   14000d473:	je     0x14000d47a
   14000d475:	call   0x140001a94
   14000d47a:	mov    rcx,QWORD PTR [rbx+0x88]
   14000d481:	cmp    rcx,QWORD PTR [rip+0x5f00]        # 0x140013388
   14000d488:	je     0x14000d48f
   14000d48a:	call   0x140001a94
   14000d48f:	mov    rcx,QWORD PTR [rbx+0x90]
   14000d496:	cmp    rcx,QWORD PTR [rip+0x5ef3]        # 0x140013390
   14000d49d:	je     0x14000d4a4
   14000d49f:	call   0x140001a94
   14000d4a4:	add    rsp,0x20
   14000d4a8:	pop    rbx
   14000d4a9:	ret    
   14000d4aa:	int3   
   14000d4ab:	int3   
   14000d4ac:	mov    QWORD PTR [rsp+0x8],rbx
   14000d4b1:	mov    QWORD PTR [rsp+0x18],rbp
   14000d4b6:	push   rsi
   14000d4b7:	push   rdi
   14000d4b8:	push   r12
   14000d4ba:	sub    rsp,0x20
   14000d4be:	mov    r12d,ecx
   14000d4c1:	mov    rcx,rdx
   14000d4c4:	mov    rbx,rdx
   14000d4c7:	call   0x1400055bc
   14000d4cc:	mov    edx,DWORD PTR [rbx+0x18]
   14000d4cf:	movsxd rsi,eax
   14000d4d2:	test   dl,0x82
   14000d4d5:	jne    0x14000d4f0
   14000d4d7:	call   0x140003250
   14000d4dc:	mov    DWORD PTR [rax],0x9
   14000d4e2:	or     DWORD PTR [rbx+0x18],0x20
   14000d4e6:	mov    eax,0xffff
   14000d4eb:	jmp    0x14000d628
   14000d4f0:	test   dl,0x40
   14000d4f3:	je     0x14000d502
   14000d4f5:	call   0x140003250
   14000d4fa:	mov    DWORD PTR [rax],0x22
   14000d500:	jmp    0x14000d4e2
   14000d502:	xor    edi,edi
   14000d504:	test   dl,0x1
   14000d507:	je     0x14000d522
   14000d509:	mov    DWORD PTR [rbx+0x8],edi
   14000d50c:	test   dl,0x10
   14000d50f:	je     0x14000d59f
   14000d515:	mov    rax,QWORD PTR [rbx+0x10]
   14000d519:	and    edx,0xfffffffe
   14000d51c:	mov    QWORD PTR [rbx],rax
   14000d51f:	mov    DWORD PTR [rbx+0x18],edx
   14000d522:	mov    eax,DWORD PTR [rbx+0x18]
   14000d525:	mov    DWORD PTR [rbx+0x8],edi
   14000d528:	and    eax,0xffffffef
   14000d52b:	or     eax,0x2
   14000d52e:	mov    DWORD PTR [rbx+0x18],eax
   14000d531:	test   eax,0x10c
   14000d536:	jne    0x14000d567
   14000d538:	call   0x140001bd0
   14000d53d:	add    rax,0x30
   14000d541:	cmp    rbx,rax
   14000d544:	je     0x14000d554
   14000d546:	call   0x140001bd0
   14000d54b:	add    rax,0x60
   14000d54f:	cmp    rbx,rax
   14000d552:	jne    0x14000d55f
   14000d554:	mov    ecx,esi
   14000d556:	call   0x140009db4
   14000d55b:	test   eax,eax
   14000d55d:	jne    0x14000d567
   14000d55f:	mov    rcx,rbx
   14000d562:	call   0x140009d60
   14000d567:	test   DWORD PTR [rbx+0x18],0x108
   14000d56e:	je     0x14000d600
   14000d574:	mov    ebp,DWORD PTR [rbx]
   14000d576:	mov    rdx,QWORD PTR [rbx+0x10]
   14000d57a:	sub    ebp,DWORD PTR [rbx+0x10]
   14000d57d:	lea    rax,[rdx+0x2]
   14000d581:	mov    QWORD PTR [rbx],rax
   14000d584:	mov    eax,DWORD PTR [rbx+0x24]
   14000d587:	sub    eax,0x2
   14000d58a:	mov    DWORD PTR [rbx+0x8],eax
   14000d58d:	test   ebp,ebp
   14000d58f:	jle    0x14000d5aa
   14000d591:	mov    r8d,ebp
   14000d594:	mov    ecx,esi
   14000d596:	call   0x140008f14
   14000d59b:	mov    edi,eax
   14000d59d:	jmp    0x14000d5f6
   14000d59f:	or     edx,0x20
   14000d5a2:	mov    DWORD PTR [rbx+0x18],edx
   14000d5a5:	jmp    0x14000d4e6
   14000d5aa:	cmp    esi,0xffffffff
   14000d5ad:	je     0x14000d5d2
   14000d5af:	cmp    esi,0xfffffffe
   14000d5b2:	je     0x14000d5d2
   14000d5b4:	mov    rcx,rsi
   14000d5b7:	mov    rax,rsi
   14000d5ba:	lea    rdx,[rip+0x705f]        # 0x140014620
   14000d5c1:	and    ecx,0x1f
   14000d5c4:	sar    rax,0x5
   14000d5c8:	imul   rcx,rcx,0x58
   14000d5cc:	add    rcx,QWORD PTR [rdx+rax*8]
   14000d5d0:	jmp    0x14000d5d9
   14000d5d2:	lea    rcx,[rip+0x4f77]        # 0x140012550
   14000d5d9:	test   BYTE PTR [rcx+0x8],0x20
   14000d5dd:	je     0x14000d5f6
   14000d5df:	xor    edx,edx
   14000d5e1:	mov    ecx,esi
   14000d5e3:	lea    r8d,[rdx+0x2]
   14000d5e7:	call   0x140009c7c
   14000d5ec:	cmp    rax,0xffffffffffffffff
   14000d5f0:	je     0x14000d4e2
   14000d5f6:	mov    rax,QWORD PTR [rbx+0x10]
   14000d5fa:	mov    WORD PTR [rax],r12w
   14000d5fe:	jmp    0x14000d61c
   14000d600:	mov    ebp,0x2
   14000d605:	lea    rdx,[rsp+0x48]
   14000d60a:	mov    ecx,esi
   14000d60c:	mov    r8d,ebp
   14000d60f:	mov    WORD PTR [rsp+0x48],r12w
   14000d615:	call   0x140008f14
   14000d61a:	mov    edi,eax
   14000d61c:	cmp    edi,ebp
   14000d61e:	jne    0x14000d4e2
   14000d624:	movzx  eax,r12w
   14000d628:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d62d:	mov    rbp,QWORD PTR [rsp+0x50]
   14000d632:	add    rsp,0x20
   14000d636:	pop    r12
   14000d638:	pop    rdi
   14000d639:	pop    rsi
   14000d63a:	ret    
   14000d63b:	int3   
   14000d63c:	mov    QWORD PTR [rsp+0x8],rbx
   14000d641:	mov    QWORD PTR [rsp+0x10],rsi
   14000d646:	push   rdi
   14000d647:	sub    rsp,0x30
   14000d64b:	movsxd rax,r9d
   14000d64e:	mov    rbx,r8
   14000d651:	mov    edi,edx
   14000d653:	mov    esi,ecx
   14000d655:	test   r9d,r9d
   14000d658:	jle    0x14000d665
   14000d65a:	mov    rdx,rax
   14000d65d:	mov    rcx,rbx
   14000d660:	call   0x14000d968
   14000d665:	mov    r9d,DWORD PTR [rsp+0x68]
   14000d66a:	mov    rdx,QWORD PTR [rsp+0x60]
   14000d66f:	mov    r8,rbx
   14000d672:	mov    DWORD PTR [rsp+0x28],r9d
   14000d677:	mov    QWORD PTR [rsp+0x20],rdx
   14000d67c:	mov    edx,edi
   14000d67e:	mov    r9d,eax
   14000d681:	mov    ecx,esi
   14000d683:	call   QWORD PTR [rip+0xbdf]        # 0x14000e268
   14000d689:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d68e:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d693:	add    rsp,0x30
   14000d697:	pop    rdi
   14000d698:	ret    
   14000d699:	int3   
   14000d69a:	int3   
   14000d69b:	int3   
   14000d69c:	int3   
   14000d69d:	int3   
   14000d69e:	int3   
   14000d69f:	int3   
   14000d6a0:	int3   
   14000d6a1:	int3   
   14000d6a2:	int3   
   14000d6a3:	int3   
   14000d6a4:	int3   
   14000d6a5:	int3   
   14000d6a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000d6b0:	sub    rdx,rcx
   14000d6b3:	mov    r9,rdx
   14000d6b6:	test   cl,0x7
   14000d6b9:	je     0x14000d6d6
   14000d6bb:	mov    al,BYTE PTR [rcx]
   14000d6bd:	mov    dl,BYTE PTR [rcx+r9*1]
   14000d6c1:	cmp    al,dl
   14000d6c3:	jne    0x14000d71b
   14000d6c5:	inc    rcx
   14000d6c8:	test   al,al
   14000d6ca:	je     0x14000d723
   14000d6cc:	test   rcx,0x7
   14000d6d3:	jne    0x14000d6bb
   14000d6d5:	nop
   14000d6d6:	movabs r11,0x8101010101010100
   14000d6e0:	lea    rdx,[rcx+r9*1]
   14000d6e4:	and    dx,0xfff
   14000d6e9:	cmp    dx,0xff8
   14000d6ee:	ja     0x14000d6bb
   14000d6f0:	mov    rax,QWORD PTR [rcx]
   14000d6f3:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000d6f7:	cmp    rax,rdx
   14000d6fa:	jne    0x14000d6bb
   14000d6fc:	movabs r10,0x7efefefefefefeff
   14000d706:	add    r10,rdx
   14000d709:	xor    rax,0xffffffffffffffff
   14000d70d:	add    rcx,0x8
   14000d711:	xor    rax,r10
   14000d714:	test   r11,rax
   14000d717:	je     0x14000d6e0
   14000d719:	jmp    0x14000d72a
   14000d71b:	sbb    rax,rax
   14000d71e:	sbb    rax,0xffffffffffffffff
   14000d722:	ret    
   14000d723:	xor    eax,eax
   14000d725:	ret    
   14000d726:	data16 data16 xchg ax,ax
   14000d72a:	test   dl,dl
   14000d72c:	je     0x14000d755
   14000d72e:	test   dh,dh
   14000d730:	je     0x14000d755
   14000d732:	shr    rdx,0x10
   14000d736:	test   dl,dl
   14000d738:	je     0x14000d755
   14000d73a:	test   dh,dh
   14000d73c:	je     0x14000d755
   14000d73e:	shr    rdx,0x10
   14000d742:	test   dl,dl
   14000d744:	je     0x14000d755
   14000d746:	test   dh,dh
   14000d748:	je     0x14000d755
   14000d74a:	shr    edx,0x10
   14000d74d:	test   dl,dl
   14000d74f:	je     0x14000d755
   14000d751:	test   dh,dh
   14000d753:	jne    0x14000d6e0
   14000d755:	xor    eax,eax
   14000d757:	ret    
   14000d758:	sbb    rax,rax
   14000d75b:	sbb    rax,0xffffffffffffffff
   14000d75f:	ret    
   14000d760:	int3   
   14000d761:	int3   
   14000d762:	int3   
   14000d763:	int3   
   14000d764:	int3   
   14000d765:	int3   
   14000d766:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000d770:	sub    rdx,rcx
   14000d773:	cmp    r8,0x8
   14000d777:	jb     0x14000d79b
   14000d779:	test   cl,0x7
   14000d77c:	je     0x14000d792
   14000d77e:	xchg   ax,ax
   14000d780:	mov    al,BYTE PTR [rcx]
   14000d782:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000d785:	jne    0x14000d7b3
   14000d787:	inc    rcx
   14000d78a:	dec    r8
   14000d78d:	test   cl,0x7
   14000d790:	jne    0x14000d780
   14000d792:	mov    r9,r8
   14000d795:	shr    r9,0x3
   14000d799:	jne    0x14000d7ba
   14000d79b:	test   r8,r8
   14000d79e:	je     0x14000d7af
   14000d7a0:	mov    al,BYTE PTR [rcx]
   14000d7a2:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000d7a5:	jne    0x14000d7b3
   14000d7a7:	inc    rcx
   14000d7aa:	dec    r8
   14000d7ad:	jne    0x14000d7a0
   14000d7af:	xor    rax,rax
   14000d7b2:	ret    
   14000d7b3:	sbb    eax,eax
   14000d7b5:	sbb    eax,0xffffffff
   14000d7b8:	ret    
   14000d7b9:	nop
   14000d7ba:	shr    r9,0x2
   14000d7be:	je     0x14000d7f7
   14000d7c0:	mov    rax,QWORD PTR [rcx]
   14000d7c3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000d7c7:	jne    0x14000d824
   14000d7c9:	mov    rax,QWORD PTR [rcx+0x8]
   14000d7cd:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000d7d2:	jne    0x14000d820
   14000d7d4:	mov    rax,QWORD PTR [rcx+0x10]
   14000d7d8:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14000d7dd:	jne    0x14000d81c
   14000d7df:	mov    rax,QWORD PTR [rcx+0x18]
   14000d7e3:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14000d7e8:	jne    0x14000d818
   14000d7ea:	add    rcx,0x20
   14000d7ee:	dec    r9
   14000d7f1:	jne    0x14000d7c0
   14000d7f3:	and    r8,0x1f
   14000d7f7:	mov    r9,r8
   14000d7fa:	shr    r9,0x3
   14000d7fe:	je     0x14000d79b
   14000d800:	mov    rax,QWORD PTR [rcx]
   14000d803:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000d807:	jne    0x14000d824
   14000d809:	add    rcx,0x8
   14000d80d:	dec    r9
   14000d810:	jne    0x14000d800
   14000d812:	and    r8,0x7
   14000d816:	jmp    0x14000d79b
   14000d818:	add    rcx,0x8
   14000d81c:	add    rcx,0x8
   14000d820:	add    rcx,0x8
   14000d824:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14000d828:	bswap  rax
   14000d82b:	bswap  rcx
   14000d82e:	cmp    rax,rcx
   14000d831:	sbb    eax,eax
   14000d833:	sbb    eax,0xffffffff
   14000d836:	ret    
   14000d837:	int3   
   14000d838:	int3   
   14000d839:	int3   
   14000d83a:	int3   
   14000d83b:	int3   
   14000d83c:	int3   
   14000d83d:	int3   
   14000d83e:	int3   
   14000d83f:	int3   
   14000d840:	int3   
   14000d841:	int3   
   14000d842:	int3   
   14000d843:	int3   
   14000d844:	int3   
   14000d845:	int3   
   14000d846:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000d850:	test   r8,r8
   14000d853:	je     0x14000d8ca
   14000d855:	sub    rdx,rcx
   14000d858:	mov    r9,rdx
   14000d85b:	movabs r11,0x8101010101010100
   14000d865:	test   cl,0x7
   14000d868:	je     0x14000d889
   14000d86a:	mov    al,BYTE PTR [rcx]
   14000d86c:	mov    dl,BYTE PTR [rcx+r9*1]
   14000d870:	inc    rcx
   14000d873:	cmp    al,dl
   14000d875:	jne    0x14000d8ce
   14000d877:	dec    r8
   14000d87a:	je     0x14000d8ca
   14000d87c:	test   al,al
   14000d87e:	je     0x14000d8ca
   14000d880:	test   rcx,0x7
   14000d887:	jne    0x14000d86a
   14000d889:	lea    rdx,[rcx+r9*1]
   14000d88d:	and    dx,0xfff
   14000d892:	cmp    dx,0xff8
   14000d897:	ja     0x14000d86a
   14000d899:	mov    rax,QWORD PTR [rcx]
   14000d89c:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000d8a0:	cmp    rax,rdx
   14000d8a3:	jne    0x14000d86a
   14000d8a5:	add    rcx,0x8
   14000d8a9:	sub    r8,0x8
   14000d8ad:	movabs r10,0x7efefefefefefeff
   14000d8b7:	jbe    0x14000d8ca
   14000d8b9:	xor    rax,0xffffffffffffffff
   14000d8bd:	add    r10,rdx
   14000d8c0:	xor    rax,r10
   14000d8c3:	test   r11,rax
   14000d8c6:	je     0x14000d889
   14000d8c8:	jmp    0x14000d8d6
   14000d8ca:	xor    rax,rax
   14000d8cd:	ret    
   14000d8ce:	sbb    rax,rax
   14000d8d1:	sbb    rax,0xffffffffffffffff
   14000d8d5:	ret    
   14000d8d6:	test   dl,dl
   14000d8d8:	je     0x14000d901
   14000d8da:	test   dh,dh
   14000d8dc:	je     0x14000d901
   14000d8de:	shr    rdx,0x10
   14000d8e2:	test   dl,dl
   14000d8e4:	je     0x14000d901
   14000d8e6:	test   dh,dh
   14000d8e8:	je     0x14000d901
   14000d8ea:	shr    rdx,0x10
   14000d8ee:	test   dl,dl
   14000d8f0:	je     0x14000d901
   14000d8f2:	test   dh,dh
   14000d8f4:	je     0x14000d901
   14000d8f6:	shr    edx,0x10
   14000d8f9:	test   dl,dl
   14000d8fb:	je     0x14000d901
   14000d8fd:	test   dh,dh
   14000d8ff:	jne    0x14000d889
   14000d901:	xor    rax,rax
   14000d904:	ret    
   14000d905:	int3   
   14000d906:	int3   
   14000d907:	int3   
   14000d908:	sub    rsp,0x48
   14000d90c:	and    QWORD PTR [rsp+0x30],0x0
   14000d912:	and    DWORD PTR [rsp+0x28],0x0
   14000d917:	mov    r8d,0x3
   14000d91d:	lea    rcx,[rip+0x23dc]        # 0x14000fd00
   14000d924:	xor    r9d,r9d
   14000d927:	mov    edx,0x40000000
   14000d92c:	mov    DWORD PTR [rsp+0x20],r8d
   14000d931:	call   QWORD PTR [rip+0x8b9]        # 0x14000e1f0
   14000d937:	mov    QWORD PTR [rip+0x5a72],rax        # 0x1400133b0
   14000d93e:	add    rsp,0x48
   14000d942:	ret    
   14000d943:	int3   
   14000d944:	sub    rsp,0x28
   14000d948:	mov    rcx,QWORD PTR [rip+0x5a61]        # 0x1400133b0
   14000d94f:	cmp    rcx,0xffffffffffffffff
   14000d953:	je     0x14000d961
   14000d955:	cmp    rcx,0xfffffffffffffffe
   14000d959:	je     0x14000d961
   14000d95b:	call   QWORD PTR [rip+0x727]        # 0x14000e088
   14000d961:	add    rsp,0x28
   14000d965:	ret    
   14000d966:	int3   
   14000d967:	int3   
   14000d968:	xor    r8d,r8d
   14000d96b:	mov    eax,r8d
   14000d96e:	test   rdx,rdx
   14000d971:	je     0x14000d985
   14000d973:	cmp    WORD PTR [rcx],r8w
   14000d977:	je     0x14000d985
   14000d979:	inc    rax
   14000d97c:	add    rcx,0x2
   14000d980:	cmp    rax,rdx
   14000d983:	jb     0x14000d973
   14000d985:	repz ret 
   14000d987:	int3   
   14000d988:	jmp    QWORD PTR [rip+0x752]        # 0x14000e0e0
   14000d98e:	jmp    QWORD PTR [rip+0x754]        # 0x14000e0e8
   14000d994:	jmp    QWORD PTR [rip+0x75e]        # 0x14000e0f8
   14000d99a:	int3   
   14000d99b:	int3   
   14000d99c:	int3   
   14000d99d:	int3   
   14000d99e:	int3   
   14000d99f:	int3   
   14000d9a0:	rex push rbp
   14000d9a2:	sub    rsp,0x20
   14000d9a6:	mov    rbp,rdx
   14000d9a9:	mov    rcx,QWORD PTR [rbp+0x50]
   14000d9ad:	call   0x140001d78
   14000d9b2:	nop
   14000d9b3:	add    rsp,0x20
   14000d9b7:	pop    rbp
   14000d9b8:	ret    
   14000d9b9:	int3   
   14000d9ba:	rex push rbp
   14000d9bc:	sub    rsp,0x30
   14000d9c0:	mov    rbp,rdx
   14000d9c3:	mov    rcx,QWORD PTR [rbp+0x60]
   14000d9c7:	call   0x140001d78
   14000d9cc:	nop
   14000d9cd:	add    rsp,0x30
   14000d9d1:	pop    rbp
   14000d9d2:	ret    
   14000d9d3:	int3   
   14000d9d4:	rex push rbp
   14000d9d6:	sub    rsp,0x20
   14000d9da:	mov    rbp,rdx
   14000d9dd:	mov    rcx,QWORD PTR [rbp+0x30]
   14000d9e1:	call   0x140001d78
   14000d9e6:	nop
   14000d9e7:	add    rsp,0x20
   14000d9eb:	pop    rbp
   14000d9ec:	ret    
   14000d9ed:	int3   
   14000d9ee:	rex push rbp
   14000d9f0:	sub    rsp,0x20
   14000d9f4:	mov    rbp,rdx
   14000d9f7:	mov    rax,QWORD PTR [rcx]
   14000d9fa:	mov    rdx,rcx
   14000d9fd:	mov    ecx,DWORD PTR [rax]
   14000d9ff:	call   0x14000669c
   14000da04:	nop
   14000da05:	add    rsp,0x20
   14000da09:	pop    rbp
   14000da0a:	ret    
   14000da0b:	int3   
   14000da0c:	rex push rbp
   14000da0e:	sub    rsp,0x20
   14000da12:	mov    rbp,rdx
   14000da15:	mov    ecx,0x1
   14000da1a:	call   0x1400042ec
   14000da1f:	nop
   14000da20:	add    rsp,0x20
   14000da24:	pop    rbp
   14000da25:	ret    
   14000da26:	int3   
   14000da27:	rex push rbp
   14000da29:	sub    rsp,0x20
   14000da2d:	mov    rbp,rdx
   14000da30:	cmp    DWORD PTR [rbp+0x80],0x0
   14000da37:	je     0x14000da44
   14000da39:	mov    ecx,0x8
   14000da3e:	call   0x1400042ec
   14000da43:	nop
   14000da44:	add    rsp,0x20
   14000da48:	pop    rbp
   14000da49:	ret    
   14000da4a:	int3   
   14000da4b:	rex push rbp
   14000da4d:	sub    rsp,0x20
   14000da51:	mov    rbp,rdx
   14000da54:	movsxd rcx,DWORD PTR [rbp+0x20]
   14000da58:	mov    rax,rcx
   14000da5b:	mov    rdx,QWORD PTR [rip+0x6dfe]        # 0x140014860
   14000da62:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14000da66:	call   0x140001dc4
   14000da6b:	nop
   14000da6c:	add    rsp,0x20
   14000da70:	pop    rbp
   14000da71:	ret    
   14000da72:	int3   
   14000da73:	int3   
   14000da74:	int3   
   14000da75:	int3   
   14000da76:	int3   
   14000da77:	int3   
   14000da78:	int3   
   14000da79:	int3   
   14000da7a:	int3   
   14000da7b:	rex push rbp
   14000da7d:	sub    rsp,0x20
   14000da81:	mov    rbp,rdx
   14000da84:	mov    ecx,0x1
   14000da89:	call   0x1400042ec
   14000da8e:	nop
   14000da8f:	add    rsp,0x20
   14000da93:	pop    rbp
   14000da94:	ret    
   14000da95:	int3   
   14000da96:	rex push rbp
   14000da98:	sub    rsp,0x20
   14000da9c:	mov    rbp,rdx
   14000da9f:	mov    rcx,QWORD PTR [rip+0x4baa]        # 0x140012650
   14000daa6:	call   QWORD PTR [rip+0x5fc]        # 0x14000e0a8
   14000daac:	nop
   14000daad:	add    rsp,0x20
   14000dab1:	pop    rbp
   14000dab2:	ret    
   14000dab3:	int3   
   14000dab4:	rex push rbp
   14000dab6:	sub    rsp,0x20
   14000daba:	mov    rbp,rdx
   14000dabd:	mov    ecx,DWORD PTR [rbp+0x50]
   14000dac0:	call   0x14000bcfc
   14000dac5:	nop
   14000dac6:	add    rsp,0x20
   14000daca:	pop    rbp
   14000dacb:	ret    
   14000dacc:	int3   
   14000dacd:	rex push rbp
   14000dacf:	sub    rsp,0x20
   14000dad3:	mov    rbp,rdx
   14000dad6:	mov    ecx,0xd
   14000dadb:	call   0x1400042ec
   14000dae0:	nop
   14000dae1:	add    rsp,0x20
   14000dae5:	pop    rbp
   14000dae6:	ret    
   14000dae7:	int3   
   14000dae8:	int3   
   14000dae9:	int3   
   14000daea:	int3   
   14000daeb:	int3   
   14000daec:	int3   
   14000daed:	rex push rbp
   14000daef:	sub    rsp,0x20
   14000daf3:	mov    rbp,rdx
   14000daf6:	mov    ecx,0xc
   14000dafb:	call   0x1400042ec
   14000db00:	nop
   14000db01:	add    rsp,0x20
   14000db05:	pop    rbp
   14000db06:	ret    
   14000db07:	int3   
   14000db08:	int3   
   14000db09:	int3   
   14000db0a:	int3   
   14000db0b:	int3   
   14000db0c:	int3   
   14000db0d:	int3   
   14000db0e:	int3   
   14000db0f:	int3   
   14000db10:	rex push rbp
   14000db12:	sub    rsp,0x20
   14000db16:	mov    rbp,rdx
   14000db19:	mov    rax,QWORD PTR [rcx]
   14000db1c:	xor    ecx,ecx
   14000db1e:	cmp    DWORD PTR [rax],0xc0000005
   14000db24:	sete   cl
   14000db27:	mov    eax,ecx
   14000db29:	mov    eax,ecx
   14000db2b:	add    rsp,0x20
   14000db2f:	pop    rbp
   14000db30:	ret    
   14000db31:	int3   
   14000db32:	rex push rbp
   14000db34:	sub    rsp,0x30
   14000db38:	mov    rbp,rdx
   14000db3b:	cmp    DWORD PTR [rbp+0x30],0x0
   14000db3f:	je     0x14000db74
   14000db41:	mov    rdx,QWORD PTR [rbp+0x70]
   14000db45:	cmp    DWORD PTR [rbp+0x34],0x0
   14000db49:	je     0x14000db6c
   14000db4b:	movsxd rcx,DWORD PTR [rdx]
   14000db4e:	mov    rax,rcx
   14000db51:	sar    rax,0x5
   14000db55:	lea    r8,[rip+0x6ac4]        # 0x140014620
   14000db5c:	and    ecx,0x1f
   14000db5f:	imul   rcx,rcx,0x58
   14000db63:	mov    rax,QWORD PTR [r8+rax*8]
   14000db67:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14000db6c:	mov    ecx,DWORD PTR [rdx]
   14000db6e:	call   0x14000bcfc
   14000db73:	nop
   14000db74:	add    rsp,0x30
   14000db78:	pop    rbp
   14000db79:	ret    
   14000db7a:	int3   
   14000db7b:	rex push rbp
   14000db7d:	sub    rsp,0x20
   14000db81:	mov    rbp,rdx
   14000db84:	cmp    DWORD PTR [rbp+0x60],0x0
   14000db88:	je     0x14000db92
   14000db8a:	xor    ecx,ecx
   14000db8c:	call   0x1400042ec
   14000db91:	nop
   14000db92:	add    rsp,0x20
   14000db96:	pop    rbp
   14000db97:	ret    
   14000db98:	int3   
   14000db99:	rex push rbp
   14000db9b:	sub    rsp,0x20
   14000db9f:	mov    rbp,rdx
   14000dba2:	call   0x1400034a8
   14000dba7:	nop
   14000dba8:	add    rsp,0x20
   14000dbac:	pop    rbp
   14000dbad:	ret    
   14000dbae:	int3   
   14000dbaf:	rex push rbp
   14000dbb1:	sub    rsp,0x20
   14000dbb5:	mov    rbp,rdx
   14000dbb8:	mov    ecx,DWORD PTR [rbp+0x40]
   14000dbbb:	call   0x14000bcfc
   14000dbc0:	nop
   14000dbc1:	add    rsp,0x20
   14000dbc5:	pop    rbp
   14000dbc6:	ret    
   14000dbc7:	int3   
   14000dbc8:	rex push rbp
   14000dbca:	sub    rsp,0x20
   14000dbce:	mov    rbp,rdx
   14000dbd1:	mov    ecx,0xd
   14000dbd6:	call   0x1400042ec
   14000dbdb:	nop
   14000dbdc:	add    rsp,0x20
   14000dbe0:	pop    rbp
   14000dbe1:	ret    
   14000dbe2:	int3   
   14000dbe3:	rex push rbp
   14000dbe5:	sub    rsp,0x20
   14000dbe9:	mov    rbp,rdx
   14000dbec:	mov    ecx,0xc
   14000dbf1:	call   0x1400042ec
   14000dbf6:	nop
   14000dbf7:	add    rsp,0x20
   14000dbfb:	pop    rbp
   14000dbfc:	ret    
   14000dbfd:	int3   
   14000dbfe:	rex push rbp
   14000dc00:	sub    rsp,0x20
   14000dc04:	mov    rbp,rdx
   14000dc07:	mov    ecx,0xa
   14000dc0c:	call   0x1400042ec
   14000dc11:	nop
   14000dc12:	add    rsp,0x20
   14000dc16:	pop    rbp
   14000dc17:	ret    
   14000dc18:	int3   
   14000dc19:	rex push rbp
   14000dc1b:	sub    rsp,0x20
   14000dc1f:	mov    rbp,rdx
   14000dc22:	mov    ecx,0xa
   14000dc27:	call   0x1400042ec
   14000dc2c:	nop
   14000dc2d:	add    rsp,0x20
   14000dc31:	pop    rbp
   14000dc32:	ret    
   14000dc33:	int3   
   14000dc34:	int3   
   14000dc35:	int3   
   14000dc36:	int3   
   14000dc37:	int3   
   14000dc38:	int3   
   14000dc39:	rex push rbp
   14000dc3b:	sub    rsp,0x20
   14000dc3f:	mov    rbp,rdx
   14000dc42:	mov    ecx,0xb
   14000dc47:	call   0x1400042ec
   14000dc4c:	nop
   14000dc4d:	add    rsp,0x20
   14000dc51:	pop    rbp
   14000dc52:	ret    
   14000dc53:	int3   

Disassembly of section .rdata:

000000014000e000 <.rdata>:
   14000e000:	add    BYTE PTR [rdi],cl
   14000e002:	add    DWORD PTR [rax],eax
   14000e004:	add    BYTE PTR [rax],al
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	(bad)  
   14000e009:	sgdt   [rax]
   14000e00c:	add    BYTE PTR [rax],al
   14000e00e:	add    BYTE PTR [rax],al
   14000e010:	and    BYTE PTR [rdi],cl
   14000e012:	add    DWORD PTR [rax],eax
   14000e014:	add    BYTE PTR [rax],al
   14000e016:	add    BYTE PTR [rax],al
   14000e018:	cmp    cl,BYTE PTR [rdi]
   14000e01a:	add    DWORD PTR [rax],eax
   14000e01c:	add    BYTE PTR [rax],al
   14000e01e:	add    BYTE PTR [rax],al
   14000e020:	rex.WR sgdt [rax]
   14000e024:	add    BYTE PTR [rax],al
   14000e026:	add    BYTE PTR [rax],al
   14000e028:	(bad)  
   14000e029:	sgdt   [rax]
   14000e02c:	add    BYTE PTR [rax],al
   14000e02e:	add    BYTE PTR [rax],al
   14000e030:	jbe    0x14000e041
   14000e032:	add    DWORD PTR [rax],eax
   14000e034:	add    BYTE PTR [rax],al
   14000e036:	add    BYTE PTR [rax],al
   14000e038:	xchg   edx,eax
   14000e039:	sgdt   [rax]
   14000e03c:	add    BYTE PTR [rax],al
   14000e03e:	add    BYTE PTR [rax],al
   14000e040:	scas   al,BYTE PTR es:[rdi]
   14000e041:	sgdt   [rax]
   14000e044:	add    BYTE PTR [rax],al
   14000e046:	add    BYTE PTR [rax],al
   14000e048:	(bad)  
   14000e049:	sgdt   [rax]
   14000e04c:	add    BYTE PTR [rax],al
   14000e04e:	add    BYTE PTR [rax],al
   14000e050:	fimul  DWORD PTR [rdi]
   14000e052:	add    DWORD PTR [rax],eax
   14000e054:	add    BYTE PTR [rax],al
   14000e056:	add    BYTE PTR [rax],al
   14000e058:	test   BYTE PTR [rdi],0x1
   14000e05b:	add    BYTE PTR [rax],al
   14000e05d:	add    BYTE PTR [rax],al
   14000e05f:	add    BYTE PTR [rax+rdx*1],cl
   14000e062:	add    DWORD PTR [rax],eax
   14000e064:	add    BYTE PTR [rax],al
   14000e066:	add    BYTE PTR [rax],al
   14000e068:	and    BYTE PTR [rax],dl
   14000e06a:	add    DWORD PTR [rax],eax
   14000e06c:	add    BYTE PTR [rax],al
   14000e06e:	add    BYTE PTR [rax],al
   14000e070:	xor    BYTE PTR [rax],dl
   14000e072:	add    DWORD PTR [rax],eax
   14000e074:	add    BYTE PTR [rax],al
   14000e076:	add    BYTE PTR [rax],al
   14000e078:	adc    BYTE PTR [rcx],al
   14000e07b:	add    BYTE PTR [rax],al
   14000e07d:	add    BYTE PTR [rax],al
   14000e07f:	add    BYTE PTR [rax+0x10],bl
   14000e082:	add    DWORD PTR [rax],eax
   14000e084:	add    BYTE PTR [rax],al
   14000e086:	add    BYTE PTR [rax],al
   14000e088:	push   0x10
   14000e08a:	add    DWORD PTR [rax],eax
   14000e08c:	add    BYTE PTR [rax],al
   14000e08e:	add    BYTE PTR [rax],al
   14000e090:	sahf   
   14000e091:	adc    BYTE PTR [rcx],al
   14000e093:	add    BYTE PTR [rax],al
   14000e095:	add    BYTE PTR [rax],al
   14000e097:	add    BYTE PTR [rdx+0x110],ch
   14000e09d:	add    BYTE PTR [rax],al
   14000e09f:	add    BYTE PTR [rsi+0x110],dh
   14000e0a5:	add    BYTE PTR [rax],al
   14000e0a7:	add    dh,cl
   14000e0a9:	adc    BYTE PTR [rcx],al
   14000e0ab:	add    BYTE PTR [rax],al
   14000e0ad:	add    BYTE PTR [rax],al
   14000e0af:	add    dh,ah
   14000e0b1:	adc    BYTE PTR [rcx],al
   14000e0b3:	add    BYTE PTR [rax],al
   14000e0b5:	add    BYTE PTR [rax],al
   14000e0b7:	add    al,bh
   14000e0b9:	adc    BYTE PTR [rcx],al
   14000e0bb:	add    BYTE PTR [rax],al
   14000e0bd:	add    BYTE PTR [rax],al
   14000e0bf:	add    BYTE PTR [rdx],cl
   14000e0c1:	adc    DWORD PTR [rcx],eax
   14000e0c3:	add    BYTE PTR [rax],al
   14000e0c5:	add    BYTE PTR [rax],al
   14000e0c7:	add    BYTE PTR [rsi],bl
   14000e0c9:	adc    DWORD PTR [rcx],eax
   14000e0cb:	add    BYTE PTR [rax],al
   14000e0cd:	add    BYTE PTR [rax],al
   14000e0cf:	add    BYTE PTR [rdx],bh
   14000e0d1:	adc    DWORD PTR [rcx],eax
   14000e0d3:	add    BYTE PTR [rax],al
   14000e0d5:	add    BYTE PTR [rax],al
   14000e0d7:	add    BYTE PTR [rax+0x11],bl
   14000e0da:	add    DWORD PTR [rax],eax
   14000e0dc:	add    BYTE PTR [rax],al
   14000e0de:	add    BYTE PTR [rax],al
   14000e0e0:	ins    BYTE PTR es:[rdi],dx
   14000e0e1:	adc    DWORD PTR [rcx],eax
   14000e0e3:	add    BYTE PTR [rax],al
   14000e0e5:	add    BYTE PTR [rax],al
   14000e0e7:	add    BYTE PTR [rax+0x111],al
   14000e0ed:	add    BYTE PTR [rax],al
   14000e0ef:	add    BYTE PTR [rdx+0x111],bl
   14000e0f5:	add    BYTE PTR [rax],al
   14000e0f7:	add    BYTE PTR [rsi+0x111],ch
   14000e0fd:	add    BYTE PTR [rax],al
   14000e0ff:	add    BYTE PTR [rcx+rdx*1+0x1],bh
   14000e106:	add    BYTE PTR [rax],al
   14000e108:	in     al,0x11
   14000e10a:	add    DWORD PTR [rax],eax
   14000e10c:	add    BYTE PTR [rax],al
   14000e10e:	add    BYTE PTR [rax],al
   14000e110:	hlt    
   14000e111:	adc    DWORD PTR [rcx],eax
   14000e113:	add    BYTE PTR [rax],al
   14000e115:	add    BYTE PTR [rax],al
   14000e117:	add    BYTE PTR [rdx+rdx*1],al
   14000e11a:	add    DWORD PTR [rax],eax
   14000e11c:	add    BYTE PTR [rax],al
   14000e11e:	add    BYTE PTR [rax],al
   14000e120:	sbb    dl,BYTE PTR [rdx]
   14000e122:	add    DWORD PTR [rax],eax
   14000e124:	add    BYTE PTR [rax],al
   14000e126:	add    BYTE PTR [rax],al
   14000e128:	sub    BYTE PTR [rdx],dl
   14000e12a:	add    DWORD PTR [rax],eax
   14000e12c:	add    BYTE PTR [rax],al
   14000e12e:	add    BYTE PTR [rax],al
   14000e130:	adc    al,BYTE PTR ss:[rcx]
   14000e133:	add    BYTE PTR [rax],al
   14000e135:	add    BYTE PTR [rax],al
   14000e137:	add    BYTE PTR [rax+0x12],cl
   14000e13a:	add    DWORD PTR [rax],eax
   14000e13c:	add    BYTE PTR [rax],al
   14000e13e:	add    BYTE PTR [rax],al
   14000e140:	pop    rsp
   14000e141:	adc    al,BYTE PTR [rcx]
   14000e143:	add    BYTE PTR [rax],al
   14000e145:	add    BYTE PTR [rax],al
   14000e147:	add    BYTE PTR [rax+0x12],ch
   14000e14a:	add    DWORD PTR [rax],eax
   14000e14c:	add    BYTE PTR [rax],al
   14000e14e:	add    BYTE PTR [rax],al
   14000e150:	jp     0x14000e164
   14000e152:	add    DWORD PTR [rax],eax
   14000e154:	add    BYTE PTR [rax],al
   14000e156:	add    BYTE PTR [rax],al
   14000e158:	mov    BYTE PTR [rdx],dl
   14000e15a:	add    DWORD PTR [rax],eax
   14000e15c:	add    BYTE PTR [rax],al
   14000e15e:	add    BYTE PTR [rax],al
   14000e160:	(bad)  
   14000e161:	adc    al,BYTE PTR [rcx]
   14000e163:	add    BYTE PTR [rax],al
   14000e165:	add    BYTE PTR [rax],al
   14000e167:	add    BYTE PTR [rdx+0x112],dh
   14000e16d:	add    BYTE PTR [rax],al
   14000e16f:	add    BYTE PTR [rdx+0x112],bh
   14000e175:	add    BYTE PTR [rax],al
   14000e177:	add    dh,al
   14000e179:	adc    al,BYTE PTR [rcx]
   14000e17b:	add    BYTE PTR [rax],al
   14000e17d:	add    BYTE PTR [rax],al
   14000e17f:	add    al,bl
   14000e181:	adc    al,BYTE PTR [rcx]
   14000e183:	add    BYTE PTR [rax],al
   14000e185:	add    BYTE PTR [rax],al
   14000e187:	add    dh,ch
   14000e189:	adc    al,BYTE PTR [rcx]
   14000e18b:	add    BYTE PTR [rax],al
   14000e18d:	add    BYTE PTR [rax],al
   14000e18f:	add    BYTE PTR [rax],cl
   14000e191:	adc    eax,DWORD PTR [rcx]
   14000e193:	add    BYTE PTR [rax],al
   14000e195:	add    BYTE PTR [rax],al
   14000e197:	add    BYTE PTR [rsi],bl
   14000e199:	adc    eax,DWORD PTR [rcx]
   14000e19b:	add    BYTE PTR [rax],al
   14000e19d:	add    BYTE PTR [rax],al
   14000e19f:	add    BYTE PTR [rax],bh
   14000e1a1:	adc    eax,DWORD PTR [rcx]
   14000e1a3:	add    BYTE PTR [rax],al
   14000e1a5:	add    BYTE PTR [rax],al
   14000e1a7:	add    BYTE PTR [rsi+0x13],al
   14000e1aa:	add    DWORD PTR [rax],eax
   14000e1ac:	add    BYTE PTR [rax],al
   14000e1ae:	add    BYTE PTR [rax],al
   14000e1b0:	push   rsp
   14000e1b1:	adc    eax,DWORD PTR [rcx]
   14000e1b3:	add    BYTE PTR [rax],al
   14000e1b5:	add    BYTE PTR [rax],al
   14000e1b7:	add    BYTE PTR [rsi+0x13],bl
   14000e1ba:	add    DWORD PTR [rax],eax
   14000e1bc:	add    BYTE PTR [rax],al
   14000e1be:	add    BYTE PTR [rax],al
   14000e1c0:	outs   dx,BYTE PTR ds:[rsi]
   14000e1c1:	adc    eax,DWORD PTR [rcx]
   14000e1c3:	add    BYTE PTR [rax],al
   14000e1c5:	add    BYTE PTR [rax],al
   14000e1c7:	add    BYTE PTR [rbx+rdx*1+0x1],al
   14000e1ce:	add    BYTE PTR [rax],al
   14000e1d0:	nop
   14000e1d1:	adc    eax,DWORD PTR [rcx]
   14000e1d3:	add    BYTE PTR [rax],al
   14000e1d5:	add    BYTE PTR [rax],al
   14000e1d7:	add    BYTE PTR [rdx+0x113],ch
   14000e1dd:	add    BYTE PTR [rax],al
   14000e1df:	add    BYTE PTR [rdx+0x113],bh
   14000e1e5:	add    BYTE PTR [rax],al
   14000e1e7:	add    al,dl
   14000e1e9:	adc    eax,DWORD PTR [rcx]
   14000e1eb:	add    BYTE PTR [rax],al
   14000e1ed:	add    BYTE PTR [rax],al
   14000e1ef:	add    dl,ch
   14000e1f1:	adc    eax,DWORD PTR [rcx]
   14000e1f3:	add    BYTE PTR [rax],al
   14000e1f5:	add    BYTE PTR [rax],al
   14000e1f7:	add    al,bh
   14000e1f9:	adc    eax,DWORD PTR [rcx]
   14000e1fb:	add    BYTE PTR [rax],al
   14000e1fd:	add    BYTE PTR [rax],al
   14000e1ff:	add    BYTE PTR [rax],cl
   14000e201:	adc    al,0x1
   14000e203:	add    BYTE PTR [rax],al
   14000e205:	add    BYTE PTR [rax],al
   14000e207:	add    BYTE PTR [rsi],dl
   14000e209:	adc    al,0x1
   14000e20b:	add    BYTE PTR [rax],al
   14000e20d:	add    BYTE PTR [rax],al
   14000e20f:	add    BYTE PTR [rsi],ah
   14000e211:	adc    al,0x1
   14000e213:	add    BYTE PTR [rax],al
   14000e215:	add    BYTE PTR [rax],al
   14000e217:	add    BYTE PTR [rax],bh
   14000e219:	adc    al,0x1
   14000e21b:	add    BYTE PTR [rax],al
   14000e21d:	add    BYTE PTR [rax],al
   14000e21f:	add    BYTE PTR [rsp+rdx*1+0x1],cl
   14000e223:	add    BYTE PTR [rax],al
   14000e225:	add    BYTE PTR [rax],al
   14000e227:	add    BYTE PTR [rax+0x14],bl
   14000e22a:	add    DWORD PTR [rax],eax
   14000e22c:	add    BYTE PTR [rax],al
   14000e22e:	add    BYTE PTR [rax],al
   14000e230:	(bad)  
   14000e231:	adc    al,0x1
   14000e233:	add    BYTE PTR [rax],al
   14000e235:	add    BYTE PTR [rax],al
   14000e237:	add    BYTE PTR [rsi+0x14],ch
   14000e23a:	add    DWORD PTR [rax],eax
   14000e23c:	add    BYTE PTR [rax],al
   14000e23e:	add    BYTE PTR [rax],al
   14000e240:	adc    BYTE PTR [rcx+rax*1],0x0
   14000e244:	add    BYTE PTR [rax],al
   14000e246:	add    BYTE PTR [rax],al
   14000e248:	nop
   14000e249:	adc    al,0x1
   14000e24b:	add    BYTE PTR [rax],al
   14000e24d:	add    BYTE PTR [rax],al
   14000e24f:	add    BYTE PTR [rax+0x114],ah
   14000e255:	add    BYTE PTR [rax],al
   14000e257:	add    BYTE PTR [rdx+0x114],dh
   14000e25d:	add    BYTE PTR [rax],al
   14000e25f:	add    BYTE PTR [rsi+0x114],bh
   14000e265:	add    BYTE PTR [rax],al
   14000e267:	add    dh,cl
   14000e269:	adc    al,0x1
	...
   14000e277:	add    BYTE PTR [rsi+0x110],al
	...
   14000e29d:	add    BYTE PTR [rax],al
   14000e29f:	add    al,bl
   14000e2a1:	sbb    eax,DWORD PTR [rax]
   14000e2a3:	rex add DWORD PTR [rax],eax
   14000e2a6:	add    BYTE PTR [rax],al
   14000e2a8:	pop    rsp
   14000e2a9:	add    BYTE PTR [rax],0x40
   14000e2ac:	add    DWORD PTR [rax],eax
   14000e2ae:	add    BYTE PTR [rax],al
   14000e2b0:	xor    al,0xa6
   14000e2b2:	add    BYTE PTR [rax+0x1],al
   14000e2b5:	add    BYTE PTR [rax],al
   14000e2b7:	add    BYTE PTR [rsi+riz*2+0x14000],al
	...
   14000e2ce:	add    BYTE PTR [rax],al
   14000e2d0:	rex.R fld DWORD PTR [rax]
   14000e2d3:	rex add DWORD PTR [rax],eax
   14000e2d6:	add    BYTE PTR [rax],al
   14000e2d8:	mov    eax,0x140001c
	...
   14000e301:	add    BYTE PTR [rax],al
   14000e303:	add    BYTE PTR [rcx],bh
   14000e305:	out    0x52,eax
   14000e307:	push   rdi
   14000e308:	add    BYTE PTR [rax],al
   14000e30a:	add    BYTE PTR [rax],al
   14000e30c:	add    al,BYTE PTR [rax]
   14000e30e:	add    BYTE PTR [rax],al
   14000e310:	(bad)  
   14000e311:	add    BYTE PTR [rax],al
   14000e313:	add    BYTE PTR [rax],bh
   14000e315:	add    DWORD PTR [rcx],eax
   14000e317:	add    BYTE PTR [rax],bh
   14000e319:	repz add BYTE PTR [rax],al
   14000e31c:	add    BYTE PTR [rax],al
   14000e31e:	add    BYTE PTR [rax],al
   14000e320:	loopne 0x14000e355
   14000e322:	add    DWORD PTR [rax+0x1],eax
   14000e325:	add    BYTE PTR [rax],al
   14000e327:	add    BYTE PTR [rax+0x1400134],al
   14000e32d:	add    BYTE PTR [rax],al
   14000e32f:	add    BYTE PTR [rbx+0x0],ah
   14000e332:	movsxd eax,DWORD PTR [rax]
   14000e334:	jae    0x14000e336
   14000e336:	add    BYTE PTR [rax],al
   14000e338:	push   rbp
   14000e339:	add    BYTE PTR [rax+rax*1+0x46],dl
   14000e33d:	add    BYTE PTR [rip+0x3800],ch        # 0x140011b43
   14000e343:	add    BYTE PTR [rax],al
   14000e345:	add    BYTE PTR [rax],al
   14000e347:	add    BYTE PTR [rbp+0x0],dl
   14000e34a:	push   rsp
   14000e34b:	add    BYTE PTR [rsi+0x0],al
   14000e34e:	sub    eax,0x36003100
   14000e353:	add    BYTE PTR [rax+rax*1+0x45],cl
	...
   14000e35f:	add    BYTE PTR [rbp+0x0],dl
   14000e362:	rex.WRX add BYTE PTR [rcx+0x0],r9b
   14000e366:	rex.XB add BYTE PTR [r15+0x0],cl
   14000e36a:	add    BYTE PTR [rbp+0x0],r8b
   14000e36e:	add    BYTE PTR [rax],al
   14000e370:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e372:	jb     0x14000e3b9
   14000e374:	js     0x14000e3df
   14000e376:	je     0x14000e3c8
   14000e378:	jb     0x14000e3e9
   14000e37a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e37d:	jae    0x14000e37f
   14000e37f:	add    BYTE PTR [rbp+0x0],ch
   14000e382:	jae    0x14000e384
   14000e384:	movsxd eax,DWORD PTR [rax]
   14000e386:	outs   dx,DWORD PTR ds:[rsi]
   14000e387:	add    BYTE PTR [rdx+0x0],dh
   14000e38a:	add    BYTE PTR gs:[rbp+0x0],ah
   14000e38e:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14000e393:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000e397:	add    BYTE PTR [rdx+0x0],dh
   14000e39a:	jne    0x14000e39c
   14000e39c:	outs   dx,BYTE PTR ds:[rsi]
   14000e39d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e3a1:	add    BYTE PTR [rbp+0x0],ch
   14000e3a4:	add    BYTE PTR gs:[rax],ah
   14000e3a7:	add    BYTE PTR [rbp+0x0],ah
   14000e3aa:	jb     0x14000e3ac
   14000e3ac:	jb     0x14000e3ae
   14000e3ae:	outs   dx,DWORD PTR ds:[rsi]
   14000e3af:	add    BYTE PTR [rdx+0x0],dh
   14000e3b2:	and    BYTE PTR [rax],al
   14000e3b4:	add    BYTE PTR [rax],al
   14000e3b6:	add    BYTE PTR [rax],al
   14000e3b8:	or     eax,0xa00
   14000e3bd:	add    BYTE PTR [rax],al
   14000e3bf:	add    BYTE PTR [rax+rax*1+0x4c],dl
   14000e3c3:	add    BYTE PTR [rdi+0x0],cl
   14000e3c6:	push   rbx
   14000e3c7:	add    BYTE PTR [rbx+0x0],dl
   14000e3ca:	and    BYTE PTR [rax],al
   14000e3cc:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e3d0:	jb     0x14000e3d2
   14000e3d2:	outs   dx,DWORD PTR ds:[rsi]
   14000e3d3:	add    BYTE PTR [rdx+0x0],dh
   14000e3d6:	or     eax,0xa00
   14000e3db:	add    BYTE PTR [rax],al
   14000e3dd:	add    BYTE PTR [rax],al
   14000e3df:	add    BYTE PTR [rbx+0x0],dl
   14000e3e2:	rex.WB add BYTE PTR [r14+0x0],cl
   14000e3e6:	rex.RXB add BYTE PTR [r8],r12b
   14000e3e9:	add    BYTE PTR [rbp+0x0],ah
   14000e3ec:	jb     0x14000e3ee
   14000e3ee:	jb     0x14000e3f0
   14000e3f0:	outs   dx,DWORD PTR ds:[rsi]
   14000e3f1:	add    BYTE PTR [rdx+0x0],dh
   14000e3f4:	or     eax,0xa00
   14000e3f9:	add    BYTE PTR [rax],al
   14000e3fb:	add    BYTE PTR [rax],al
   14000e3fd:	add    BYTE PTR [rax],al
   14000e3ff:	add    BYTE PTR [rax+rax*1+0x4f],al
   14000e403:	add    BYTE PTR [rbp+0x0],cl
   14000e406:	add    BYTE PTR [r9+0x0],cl
   14000e40a:	rex.WRX add BYTE PTR [rax],r12b
   14000e40d:	add    BYTE PTR [rbp+0x0],ah
   14000e410:	jb     0x14000e412
   14000e412:	jb     0x14000e414
   14000e414:	outs   dx,DWORD PTR ds:[rsi]
   14000e415:	add    BYTE PTR [rdx+0x0],dh
   14000e418:	or     eax,0xa00
   14000e41d:	add    BYTE PTR [rax],al
   14000e41f:	add    BYTE PTR [rdx+0x0],dl
   14000e422:	add    BYTE PTR ss:[rax],dh
   14000e425:	add    BYTE PTR [rbx],dh
   14000e427:	add    BYTE PTR [rbx],dh
   14000e429:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00ee2f
   14000e42f:	add    BYTE PTR [rax],ah
   14000e431:	add    BYTE PTR [rcx+0x0],al
   14000e434:	je     0x14000e436
   14000e436:	je     0x14000e438
   14000e438:	add    BYTE PTR gs:[rbp+0x0],ch
   14000e43c:	jo     0x14000e43e
   14000e43e:	je     0x14000e440
   14000e440:	and    BYTE PTR [rax],al
   14000e442:	je     0x14000e444
   14000e444:	outs   dx,DWORD PTR ds:[rsi]
   14000e445:	add    BYTE PTR [rax],ah
   14000e447:	add    BYTE PTR [rbp+0x0],dh
   14000e44a:	jae    0x14000e44c
   14000e44c:	add    BYTE PTR gs:[rax],ah
   14000e44f:	add    BYTE PTR [rbp+0x0],cl
   14000e452:	push   rbx
   14000e453:	add    BYTE PTR [rcx+0x0],cl
   14000e456:	rex.WR add BYTE PTR [rax],r12b
   14000e459:	add    BYTE PTR [rbx+0x0],ah
   14000e45c:	outs   dx,DWORD PTR ds:[rsi]
   14000e45d:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000e461:	add    BYTE PTR [rax],ah
   14000e463:	add    BYTE PTR [rsi+0x0],ah
   14000e466:	jb     0x14000e468
   14000e468:	outs   dx,DWORD PTR ds:[rsi]
   14000e469:	add    BYTE PTR [rbp+0x0],ch
   14000e46c:	and    BYTE PTR [rax],al
   14000e46e:	je     0x14000e470
   14000e470:	push   0x73006900
   14000e475:	add    BYTE PTR [rax],ah
   14000e477:	add    BYTE PTR [rcx+0x0],ah
   14000e47a:	jae    0x14000e47c
   14000e47c:	jae    0x14000e47e
   14000e47e:	add    BYTE PTR gs:[rbp+0x0],ch
   14000e482:	(bad)  
   14000e483:	add    BYTE PTR [rax+rax*1+0x79],ch
   14000e487:	add    BYTE PTR [rax],ah
   14000e489:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000e48d:	add    BYTE PTR [rdx+0x0],dh
   14000e490:	imul   eax,DWORD PTR [rax],0x67006e
   14000e496:	and    BYTE PTR [rax],al
   14000e498:	outs   dx,BYTE PTR ds:[rsi]
   14000e499:	add    BYTE PTR [rcx+0x0],ah
   14000e49c:	je     0x14000e49e
   14000e49e:	imul   eax,DWORD PTR [rax],0x650076
   14000e4a4:	and    BYTE PTR [rax],al
   14000e4a6:	movsxd eax,DWORD PTR [rax]
   14000e4a8:	outs   dx,DWORD PTR ds:[rsi]
   14000e4a9:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000e4ad:	add    BYTE PTR [rax],ah
   14000e4af:	add    BYTE PTR [rcx+0x0],ch
   14000e4b2:	outs   dx,BYTE PTR ds:[rsi]
   14000e4b3:	add    BYTE PTR [rcx+0x0],ch
   14000e4b6:	je     0x14000e4b8
   14000e4b8:	imul   eax,DWORD PTR [rax],0x6c0061
   14000e4be:	imul   eax,DWORD PTR [rax],0x61007a
   14000e4c4:	je     0x14000e4c6
   14000e4c6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e4cc:	or     al,BYTE PTR [rax]
   14000e4ce:	push   rsp
   14000e4cf:	add    BYTE PTR [rax+0x0],ch
   14000e4d2:	imul   eax,DWORD PTR [rax],0x200073
   14000e4d8:	imul   eax,DWORD PTR [rax],0x64006e
   14000e4de:	imul   eax,DWORD PTR [rax],0x610063
   14000e4e4:	je     0x14000e4e6
   14000e4e6:	add    BYTE PTR gs:[rbx+0x0],dh
   14000e4ea:	and    BYTE PTR [rax],al
   14000e4ec:	(bad)  
   14000e4ed:	add    BYTE PTR [rax],ah
   14000e4ef:	add    BYTE PTR [rdx+0x0],ah
   14000e4f2:	jne    0x14000e4f4
   14000e4f4:	add    BYTE PTR [eax],ah
   14000e4f7:	add    BYTE PTR [rcx+0x0],ch
   14000e4fa:	outs   dx,BYTE PTR ds:[rsi]
   14000e4fb:	add    BYTE PTR [rax],ah
   14000e4fd:	add    BYTE PTR [rcx+0x0],bh
   14000e500:	outs   dx,DWORD PTR ds:[rsi]
   14000e501:	add    BYTE PTR [rbp+0x0],dh
   14000e504:	jb     0x14000e506
   14000e506:	and    BYTE PTR [rax],al
   14000e508:	(bad)  
   14000e509:	add    BYTE PTR [rax+0x0],dh
   14000e50c:	jo     0x14000e50e
   14000e50e:	ins    BYTE PTR es:[rdi],dx
   14000e50f:	add    BYTE PTR [rcx+0x0],ch
   14000e512:	movsxd eax,DWORD PTR [rax]
   14000e514:	(bad)  
   14000e515:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e519:	add    BYTE PTR [rdi+0x0],ch
   14000e51c:	outs   dx,BYTE PTR ds:[rsi]
   14000e51d:	add    BYTE PTR [rsi],ch
   14000e51f:	add    BYTE PTR [rax],ah
   14000e521:	add    BYTE PTR [rcx+0x0],cl
   14000e524:	je     0x14000e526
   14000e526:	and    BYTE PTR [rax],al
   14000e528:	imul   eax,DWORD PTR [rax],0x200073
   14000e52e:	ins    DWORD PTR es:[rdi],dx
   14000e52f:	add    BYTE PTR [rdi+0x0],ch
   14000e532:	jae    0x14000e534
   14000e534:	je     0x14000e536
   14000e536:	and    BYTE PTR [rax],al
   14000e538:	ins    BYTE PTR es:[rdi],dx
   14000e539:	add    BYTE PTR [rcx+0x0],ch
   14000e53c:	imul   eax,DWORD PTR [rax],0x65
   14000e53f:	add    BYTE PTR [rax+rax*1+0x79],ch
   14000e543:	add    BYTE PTR [rax],ah
   14000e545:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000e549:	add    BYTE PTR [rbp+0x0],ah
   14000e54c:	and    BYTE PTR [rax],al
   14000e54e:	jb     0x14000e550
   14000e550:	add    BYTE PTR gs:[rbx+0x0],dh
   14000e554:	jne    0x14000e556
   14000e556:	ins    BYTE PTR es:[rdi],dx
   14000e557:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000e55b:	add    BYTE PTR [rdi+0x0],ch
   14000e55e:	data16 add BYTE PTR [rax],ah
   14000e561:	add    BYTE PTR [rbx+0x0],ah
   14000e564:	(bad)  
   14000e565:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000e569:	add    BYTE PTR [rcx+0x0],ch
   14000e56c:	outs   dx,BYTE PTR ds:[rsi]
   14000e56d:	add    BYTE PTR [rdi+0x0],ah
   14000e570:	and    BYTE PTR [rax],al
   14000e572:	(bad)  
   14000e573:	add    BYTE PTR [rsi+0x0],ch
   14000e576:	and    BYTE PTR [rax],al
   14000e578:	rex.WRB add BYTE PTR [r11+0x0],r10b
   14000e57c:	rex.WB add BYTE PTR [r8+rax*1+0x2d],cl
   14000e581:	add    BYTE PTR [rbx+0x0],ah
   14000e584:	outs   dx,DWORD PTR ds:[rsi]
   14000e585:	add    BYTE PTR [rbp+0x0],ch
   14000e588:	jo     0x14000e58a
   14000e58a:	imul   eax,DWORD PTR [rax],0x65006c
   14000e590:	add    BYTE PTR fs:[rax],ah
   14000e593:	add    BYTE PTR [rax],ch
   14000e595:	add    BYTE PTR [rdi],ch
   14000e597:	add    BYTE PTR [rbx+0x0],ah
   14000e59a:	ins    BYTE PTR es:[rdi],dx
   14000e59b:	add    BYTE PTR [rdx+0x0],dh
   14000e59e:	sub    DWORD PTR [rax],eax
   14000e5a0:	and    BYTE PTR [rax],al
   14000e5a2:	data16 add BYTE PTR [rbp+0x0],dh
   14000e5a6:	outs   dx,BYTE PTR ds:[rsi]
   14000e5a7:	add    BYTE PTR [rbx+0x0],ah
   14000e5aa:	je     0x14000e5ac
   14000e5ac:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e5b2:	and    BYTE PTR [rax],al
   14000e5b4:	data16 add BYTE PTR [rdx+0x0],dh
   14000e5b8:	outs   dx,DWORD PTR ds:[rsi]
   14000e5b9:	add    BYTE PTR [rbp+0x0],ch
   14000e5bc:	and    BYTE PTR [rax],al
   14000e5be:	(bad)  
   14000e5bf:	add    BYTE PTR [rax],ah
   14000e5c1:	add    BYTE PTR [rsi+0x0],ch
   14000e5c4:	(bad)  
   14000e5c5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e5c9:	add    BYTE PTR [rsi+0x0],dh
   14000e5cc:	add    BYTE PTR gs:[rax],ah
   14000e5cf:	add    BYTE PTR [rbx+0x0],ah
   14000e5d2:	outs   dx,DWORD PTR ds:[rsi]
   14000e5d3:	add    BYTE PTR [rsi+0x0],ch
   14000e5d6:	jae    0x14000e5d8
   14000e5d8:	je     0x14000e5da
   14000e5da:	jb     0x14000e5dc
   14000e5dc:	jne    0x14000e5de
   14000e5de:	movsxd eax,DWORD PTR [rax]
   14000e5e0:	je     0x14000e5e2
   14000e5e2:	outs   dx,DWORD PTR ds:[rsi]
   14000e5e3:	add    BYTE PTR [rdx+0x0],dh
   14000e5e6:	and    BYTE PTR [rax],al
   14000e5e8:	outs   dx,DWORD PTR ds:[rsi]
   14000e5e9:	add    BYTE PTR [rdx+0x0],dh
   14000e5ec:	and    BYTE PTR [rax],al
   14000e5ee:	data16 add BYTE PTR [rdx+0x0],dh
   14000e5f2:	outs   dx,DWORD PTR ds:[rsi]
   14000e5f3:	add    BYTE PTR [rbp+0x0],ch
   14000e5f6:	and    BYTE PTR [rax],al
   14000e5f8:	add    BYTE PTR [rax+rax*1+0x6c],r13b
   14000e5fd:	add    BYTE PTR [rbp+0x0],cl
   14000e600:	(bad)  
   14000e601:	add    BYTE PTR [rcx+0x0],ch
   14000e604:	outs   dx,BYTE PTR ds:[rsi]
   14000e605:	add    BYTE PTR [rsi],ch
   14000e607:	add    BYTE PTR [rip+0xa00],cl        # 0x14000f00d
   14000e60d:	add    BYTE PTR [rax],al
   14000e60f:	add    BYTE PTR [rdx+0x0],dl
   14000e612:	add    BYTE PTR ss:[rax],dh
   14000e615:	add    BYTE PTR [rbx],dh
   14000e617:	add    BYTE PTR [rdx],dh
   14000e619:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f01f
   14000e61f:	add    BYTE PTR [rax],ah
   14000e621:	add    BYTE PTR [rsi+0x0],ch
   14000e624:	outs   dx,DWORD PTR ds:[rsi]
   14000e625:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000e629:	add    BYTE PTR [rbp+0x0],ah
   14000e62c:	outs   dx,BYTE PTR ds:[rsi]
   14000e62d:	add    BYTE PTR [rdi+0x0],ch
   14000e630:	jne    0x14000e632
   14000e632:	add    BYTE PTR [eax+0x0],ch
   14000e636:	and    BYTE PTR [rax],al
   14000e638:	jae    0x14000e63a
   14000e63a:	jo     0x14000e63c
   14000e63c:	(bad)  
   14000e63d:	add    BYTE PTR [rbx+0x0],ah
   14000e640:	add    BYTE PTR gs:[rax],ah
   14000e643:	add    BYTE PTR [rsi+0x0],ah
   14000e646:	outs   dx,DWORD PTR ds:[rsi]
   14000e647:	add    BYTE PTR [rdx+0x0],dh
   14000e64a:	and    BYTE PTR [rax],al
   14000e64c:	ins    BYTE PTR es:[rdi],dx
   14000e64d:	add    BYTE PTR [rdi+0x0],ch
   14000e650:	movsxd eax,DWORD PTR [rax]
   14000e652:	(bad)  
   14000e653:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000e657:	add    BYTE PTR [rax],ah
   14000e659:	add    BYTE PTR [rcx+0x0],ch
   14000e65c:	outs   dx,BYTE PTR ds:[rsi]
   14000e65d:	add    BYTE PTR [rsi+0x0],ah
   14000e660:	outs   dx,DWORD PTR ds:[rsi]
   14000e661:	add    BYTE PTR [rdx+0x0],dh
   14000e664:	ins    DWORD PTR es:[rdi],dx
   14000e665:	add    BYTE PTR [rcx+0x0],ah
   14000e668:	je     0x14000e66a
   14000e66a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e670:	or     eax,0xa00
	...
   14000e67d:	add    BYTE PTR [rax],al
   14000e67f:	add    BYTE PTR [rdx+0x0],dl
   14000e682:	add    BYTE PTR ss:[rax],dh
   14000e685:	add    BYTE PTR [rbx],dh
   14000e687:	add    BYTE PTR [rcx],dh
   14000e689:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f08f
   14000e68f:	add    BYTE PTR [rax],ah
   14000e691:	add    BYTE PTR [rcx+0x0],al
   14000e694:	je     0x14000e696
   14000e696:	je     0x14000e698
   14000e698:	add    BYTE PTR gs:[rbp+0x0],ch
   14000e69c:	jo     0x14000e69e
   14000e69e:	je     0x14000e6a0
   14000e6a0:	and    BYTE PTR [rax],al
   14000e6a2:	je     0x14000e6a4
   14000e6a4:	outs   dx,DWORD PTR ds:[rsi]
   14000e6a5:	add    BYTE PTR [rax],ah
   14000e6a7:	add    BYTE PTR [rcx+0x0],ch
   14000e6aa:	outs   dx,BYTE PTR ds:[rsi]
   14000e6ab:	add    BYTE PTR [rcx+0x0],ch
   14000e6ae:	je     0x14000e6b0
   14000e6b0:	imul   eax,DWORD PTR [rax],0x6c0061
   14000e6b6:	imul   eax,DWORD PTR [rax],0x65007a
   14000e6bc:	and    BYTE PTR [rax],al
   14000e6be:	je     0x14000e6c0
   14000e6c0:	push   0x20006500
   14000e6c5:	add    BYTE PTR [rbx+0x0],al
   14000e6c8:	push   rdx
   14000e6c9:	add    BYTE PTR [rax+rax*1+0x20],dl
   14000e6cd:	add    BYTE PTR [rbp+0x0],ch
   14000e6d0:	outs   dx,DWORD PTR ds:[rsi]
   14000e6d1:	add    BYTE PTR [rdx+0x0],dh
   14000e6d4:	add    BYTE PTR gs:[rax],ah
   14000e6d7:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000e6db:	add    BYTE PTR [rcx+0x0],ah
   14000e6de:	outs   dx,BYTE PTR ds:[rsi]
   14000e6df:	add    BYTE PTR [rax],ah
   14000e6e1:	add    BYTE PTR [rdi+0x0],ch
   14000e6e4:	outs   dx,BYTE PTR ds:[rsi]
   14000e6e5:	add    BYTE PTR [rbx+0x0],ah
   14000e6e8:	add    BYTE PTR gs:[rsi],ch
   14000e6eb:	add    BYTE PTR [rdx],cl
   14000e6ed:	add    BYTE PTR [rax+rax*1+0x68],dl
   14000e6f1:	add    BYTE PTR [rcx+0x0],ch
   14000e6f4:	jae    0x14000e6f6
   14000e6f6:	and    BYTE PTR [rax],al
   14000e6f8:	imul   eax,DWORD PTR [rax],0x64006e
   14000e6fe:	imul   eax,DWORD PTR [rax],0x610063
   14000e704:	je     0x14000e706
   14000e706:	add    BYTE PTR gs:[rbx+0x0],dh
   14000e70a:	and    BYTE PTR [rax],al
   14000e70c:	(bad)  
   14000e70d:	add    BYTE PTR [rax],ah
   14000e70f:	add    BYTE PTR [rdx+0x0],ah
   14000e712:	jne    0x14000e714
   14000e714:	add    BYTE PTR [eax],ah
   14000e717:	add    BYTE PTR [rcx+0x0],ch
   14000e71a:	outs   dx,BYTE PTR ds:[rsi]
   14000e71b:	add    BYTE PTR [rax],ah
   14000e71d:	add    BYTE PTR [rcx+0x0],bh
   14000e720:	outs   dx,DWORD PTR ds:[rsi]
   14000e721:	add    BYTE PTR [rbp+0x0],dh
   14000e724:	jb     0x14000e726
   14000e726:	and    BYTE PTR [rax],al
   14000e728:	(bad)  
   14000e729:	add    BYTE PTR [rax+0x0],dh
   14000e72c:	jo     0x14000e72e
   14000e72e:	ins    BYTE PTR es:[rdi],dx
   14000e72f:	add    BYTE PTR [rcx+0x0],ch
   14000e732:	movsxd eax,DWORD PTR [rax]
   14000e734:	(bad)  
   14000e735:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e739:	add    BYTE PTR [rdi+0x0],ch
   14000e73c:	outs   dx,BYTE PTR ds:[rsi]
   14000e73d:	add    BYTE PTR [rsi],ch
   14000e73f:	add    BYTE PTR [rip+0xa00],cl        # 0x14000f145
   14000e745:	add    BYTE PTR [rax],al
   14000e747:	add    BYTE PTR [rdx+0x0],dl
   14000e74a:	add    BYTE PTR ss:[rax],dh
   14000e74d:	add    BYTE PTR [rbx],dh
   14000e74f:	add    BYTE PTR [rax],dh
   14000e751:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f157
   14000e757:	add    BYTE PTR [rax],ah
   14000e759:	add    BYTE PTR [rbx+0x0],al
   14000e75c:	push   rdx
   14000e75d:	add    BYTE PTR [rax+rax*1+0x20],dl
   14000e761:	add    BYTE PTR [rsi+0x0],ch
   14000e764:	outs   dx,DWORD PTR ds:[rsi]
   14000e765:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000e769:	add    BYTE PTR [rcx+0x0],ch
   14000e76c:	outs   dx,BYTE PTR ds:[rsi]
   14000e76d:	add    BYTE PTR [rcx+0x0],ch
   14000e770:	je     0x14000e772
   14000e772:	imul   eax,DWORD PTR [rax],0x6c0061
   14000e778:	imul   eax,DWORD PTR [rax],0x65007a
   14000e77e:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x14000f185
	...
   14000e78d:	add    BYTE PTR [rax],al
   14000e78f:	add    BYTE PTR [rdx+0x0],dl
   14000e792:	add    BYTE PTR ss:[rax],dh
   14000e795:	add    BYTE PTR [rdx],dh
   14000e797:	add    BYTE PTR [rax],bh
   14000e799:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f19f
   14000e79f:	add    BYTE PTR [rax],ah
   14000e7a1:	add    BYTE PTR [rbp+0x0],dh
   14000e7a4:	outs   dx,BYTE PTR ds:[rsi]
   14000e7a5:	add    BYTE PTR [rcx+0x0],ah
   14000e7a8:	(bad)  
   14000e7a9:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000e7ad:	add    BYTE PTR [rax],ah
   14000e7af:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000e7b3:	add    BYTE PTR [rax],ah
   14000e7b5:	add    BYTE PTR [rcx+0x0],ch
   14000e7b8:	outs   dx,BYTE PTR ds:[rsi]
   14000e7b9:	add    BYTE PTR [rcx+0x0],ch
   14000e7bc:	je     0x14000e7be
   14000e7be:	imul   eax,DWORD PTR [rax],0x6c0061
   14000e7c4:	imul   eax,DWORD PTR [rax],0x65007a
   14000e7ca:	and    BYTE PTR [rax],al
   14000e7cc:	push   0x61006500
   14000e7d1:	add    BYTE PTR [rax+0x0],dh
   14000e7d4:	or     eax,0xa00
   14000e7d9:	add    BYTE PTR [rax],al
   14000e7db:	add    BYTE PTR [rax],al
   14000e7dd:	add    BYTE PTR [rax],al
   14000e7df:	add    BYTE PTR [rdx+0x0],dl
   14000e7e2:	add    BYTE PTR ss:[rax],dh
   14000e7e5:	add    BYTE PTR [rdx],dh
   14000e7e7:	add    BYTE PTR [rdi],dh
   14000e7e9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f1ef
   14000e7ef:	add    BYTE PTR [rax],ah
   14000e7f1:	add    BYTE PTR [rsi+0x0],ch
   14000e7f4:	outs   dx,DWORD PTR ds:[rsi]
   14000e7f5:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000e7f9:	add    BYTE PTR [rbp+0x0],ah
   14000e7fc:	outs   dx,BYTE PTR ds:[rsi]
   14000e7fd:	add    BYTE PTR [rdi+0x0],ch
   14000e800:	jne    0x14000e802
   14000e802:	add    BYTE PTR [eax+0x0],ch
   14000e806:	and    BYTE PTR [rax],al
   14000e808:	jae    0x14000e80a
   14000e80a:	jo     0x14000e80c
   14000e80c:	(bad)  
   14000e80d:	add    BYTE PTR [rbx+0x0],ah
   14000e810:	add    BYTE PTR gs:[rax],ah
   14000e813:	add    BYTE PTR [rsi+0x0],ah
   14000e816:	outs   dx,DWORD PTR ds:[rsi]
   14000e817:	add    BYTE PTR [rdx+0x0],dh
   14000e81a:	and    BYTE PTR [rax],al
   14000e81c:	ins    BYTE PTR es:[rdi],dx
   14000e81d:	add    BYTE PTR [rdi+0x0],ch
   14000e820:	ja     0x14000e822
   14000e822:	imul   eax,DWORD PTR [rax],0x20006f
   14000e828:	imul   eax,DWORD PTR [rax],0x69006e
   14000e82e:	je     0x14000e830
   14000e830:	imul   eax,DWORD PTR [rax],0x6c0061
   14000e836:	imul   eax,DWORD PTR [rax],0x61007a
   14000e83c:	je     0x14000e83e
   14000e83e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e844:	or     eax,0xa00
   14000e849:	add    BYTE PTR [rax],al
   14000e84b:	add    BYTE PTR [rax],al
   14000e84d:	add    BYTE PTR [rax],al
   14000e84f:	add    BYTE PTR [rdx+0x0],dl
   14000e852:	add    BYTE PTR ss:[rax],dh
   14000e855:	add    BYTE PTR [rdx],dh
   14000e857:	add    BYTE PTR [rsi],dh
   14000e859:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f25f
   14000e85f:	add    BYTE PTR [rax],ah
   14000e861:	add    BYTE PTR [rsi+0x0],ch
   14000e864:	outs   dx,DWORD PTR ds:[rsi]
   14000e865:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000e869:	add    BYTE PTR [rbp+0x0],ah
   14000e86c:	outs   dx,BYTE PTR ds:[rsi]
   14000e86d:	add    BYTE PTR [rdi+0x0],ch
   14000e870:	jne    0x14000e872
   14000e872:	add    BYTE PTR [eax+0x0],ch
   14000e876:	and    BYTE PTR [rax],al
   14000e878:	jae    0x14000e87a
   14000e87a:	jo     0x14000e87c
   14000e87c:	(bad)  
   14000e87d:	add    BYTE PTR [rbx+0x0],ah
   14000e880:	add    BYTE PTR gs:[rax],ah
   14000e883:	add    BYTE PTR [rsi+0x0],ah
   14000e886:	outs   dx,DWORD PTR ds:[rsi]
   14000e887:	add    BYTE PTR [rdx+0x0],dh
   14000e88a:	and    BYTE PTR [rax],al
   14000e88c:	jae    0x14000e88e
   14000e88e:	je     0x14000e890
   14000e890:	add    BYTE PTR fs:[rcx+0x0],ch
   14000e894:	outs   dx,DWORD PTR ds:[rsi]
   14000e895:	add    BYTE PTR [rax],ah
   14000e897:	add    BYTE PTR [rcx+0x0],ch
   14000e89a:	outs   dx,BYTE PTR ds:[rsi]
   14000e89b:	add    BYTE PTR [rcx+0x0],ch
   14000e89e:	je     0x14000e8a0
   14000e8a0:	imul   eax,DWORD PTR [rax],0x6c0061
   14000e8a6:	imul   eax,DWORD PTR [rax],0x61007a
   14000e8ac:	je     0x14000e8ae
   14000e8ae:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e8b4:	or     eax,0xa00
   14000e8b9:	add    BYTE PTR [rax],al
   14000e8bb:	add    BYTE PTR [rax],al
   14000e8bd:	add    BYTE PTR [rax],al
   14000e8bf:	add    BYTE PTR [rdx+0x0],dl
   14000e8c2:	add    BYTE PTR ss:[rax],dh
   14000e8c5:	add    BYTE PTR [rdx],dh
   14000e8c7:	add    BYTE PTR [rip+0xa000d00],dh        # 0x14a00f5cd
   14000e8cd:	add    BYTE PTR [rip+0x70002000],ch        # 0x1b00108d3
   14000e8d3:	add    BYTE PTR [rbp+0x0],dh
   14000e8d6:	jb     0x14000e8d8
   14000e8d8:	add    BYTE PTR gs:[rax],ah
   14000e8db:	add    BYTE PTR [rsi+0x0],dh
   14000e8de:	imul   eax,DWORD PTR [rax],0x740072
   14000e8e4:	jne    0x14000e8e6
   14000e8e6:	(bad)  
   14000e8e7:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000e8eb:	add    BYTE PTR [rsi+0x0],ah
   14000e8ee:	jne    0x14000e8f0
   14000e8f0:	outs   dx,BYTE PTR ds:[rsi]
   14000e8f1:	add    BYTE PTR [rbx+0x0],ah
   14000e8f4:	je     0x14000e8f6
   14000e8f6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e8fc:	and    BYTE PTR [rax],al
   14000e8fe:	movsxd eax,DWORD PTR [rax]
   14000e900:	(bad)  
   14000e901:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000e905:	add    BYTE PTR [rip+0xa00],cl        # 0x14000f30b
   14000e90b:	add    BYTE PTR [rax],al
   14000e90d:	add    BYTE PTR [rax],al
   14000e90f:	add    BYTE PTR [rdx+0x0],dl
   14000e912:	add    BYTE PTR ss:[rax],dh
   14000e915:	add    BYTE PTR [rdx],dh
   14000e917:	add    BYTE PTR [rax+rax*1],dh
   14000e91a:	or     eax,0x2d000a00
   14000e91f:	add    BYTE PTR [rax],ah
   14000e921:	add    BYTE PTR [rsi+0x0],ch
   14000e924:	outs   dx,DWORD PTR ds:[rsi]
   14000e925:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000e929:	add    BYTE PTR [rbp+0x0],ah
   14000e92c:	outs   dx,BYTE PTR ds:[rsi]
   14000e92d:	add    BYTE PTR [rdi+0x0],ch
   14000e930:	jne    0x14000e932
   14000e932:	add    BYTE PTR [eax+0x0],ch
   14000e936:	and    BYTE PTR [rax],al
   14000e938:	jae    0x14000e93a
   14000e93a:	jo     0x14000e93c
   14000e93c:	(bad)  
   14000e93d:	add    BYTE PTR [rbx+0x0],ah
   14000e940:	add    BYTE PTR gs:[rax],ah
   14000e943:	add    BYTE PTR [rsi+0x0],ah
   14000e946:	outs   dx,DWORD PTR ds:[rsi]
   14000e947:	add    BYTE PTR [rdx+0x0],dh
   14000e94a:	and    BYTE PTR [rax],al
   14000e94c:	pop    rdi
   14000e94d:	add    BYTE PTR [rdi+0x0],ch
   14000e950:	outs   dx,BYTE PTR ds:[rsi]
   14000e951:	add    BYTE PTR [rbp+0x0],ah
   14000e954:	js     0x14000e956
   14000e956:	imul   eax,DWORD PTR [rax],0x2f0074
   14000e95c:	(bad)  
   14000e95d:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000e961:	add    BYTE PTR [rax+0x0],bh
   14000e964:	imul   eax,DWORD PTR [rax],0x200074
   14000e96a:	je     0x14000e96c
   14000e96c:	(bad)  
   14000e96d:	add    BYTE PTR [rdx+0x0],ah
   14000e970:	ins    BYTE PTR es:[rdi],dx
   14000e971:	add    BYTE PTR [rbp+0x0],ah
   14000e974:	or     eax,0xa00
   14000e979:	add    BYTE PTR [rax],al
   14000e97b:	add    BYTE PTR [rax],al
   14000e97d:	add    BYTE PTR [rax],al
   14000e97f:	add    BYTE PTR [rdx+0x0],dl
   14000e982:	add    BYTE PTR ss:[rax],dh
   14000e985:	add    BYTE PTR [rcx],dh
   14000e987:	add    BYTE PTR [rcx],bh
   14000e989:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f38f
   14000e98f:	add    BYTE PTR [rax],ah
   14000e991:	add    BYTE PTR [rbp+0x0],dh
   14000e994:	outs   dx,BYTE PTR ds:[rsi]
   14000e995:	add    BYTE PTR [rcx+0x0],ah
   14000e998:	(bad)  
   14000e999:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000e99d:	add    BYTE PTR [rax],ah
   14000e99f:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000e9a3:	add    BYTE PTR [rax],ah
   14000e9a5:	add    BYTE PTR [rdi+0x0],ch
   14000e9a8:	jo     0x14000e9aa
   14000e9aa:	add    BYTE PTR gs:[rsi+0x0],ch
   14000e9ae:	and    BYTE PTR [rax],al
   14000e9b0:	movsxd eax,DWORD PTR [rax]
   14000e9b2:	outs   dx,DWORD PTR ds:[rsi]
   14000e9b3:	add    BYTE PTR [rsi+0x0],ch
   14000e9b6:	jae    0x14000e9b8
   14000e9b8:	outs   dx,DWORD PTR ds:[rsi]
   14000e9b9:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000e9bd:	add    BYTE PTR [rax],ah
   14000e9bf:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000e9c3:	add    BYTE PTR [rsi+0x0],dh
   14000e9c6:	imul   eax,DWORD PTR [rax],0x650063
   14000e9cc:	or     eax,0xa00
	...
   14000e9dd:	add    BYTE PTR [rax],al
   14000e9df:	add    BYTE PTR [rdx+0x0],dl
   14000e9e2:	add    BYTE PTR ss:[rax],dh
   14000e9e5:	add    BYTE PTR [rcx],dh
   14000e9e7:	add    BYTE PTR [rax],bh
   14000e9e9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f3ef
   14000e9ef:	add    BYTE PTR [rax],ah
   14000e9f1:	add    BYTE PTR [rbp+0x0],dh
   14000e9f4:	outs   dx,BYTE PTR ds:[rsi]
   14000e9f5:	add    BYTE PTR [rbp+0x0],ah
   14000e9f8:	js     0x14000e9fa
   14000e9fa:	jo     0x14000e9fc
   14000e9fc:	add    BYTE PTR gs:[rbx+0x0],ah
   14000ea00:	je     0x14000ea02
   14000ea02:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000ea07:	add    BYTE PTR [rax+0x0],ch
   14000ea0a:	add    BYTE PTR gs:[rcx+0x0],ah
   14000ea0e:	jo     0x14000ea10
   14000ea10:	and    BYTE PTR [rax],al
   14000ea12:	add    BYTE PTR gs:[rdx+0x0],dh
   14000ea16:	jb     0x14000ea18
   14000ea18:	outs   dx,DWORD PTR ds:[rsi]
   14000ea19:	add    BYTE PTR [rdx+0x0],dh
   14000ea1c:	or     eax,0xa00
	...
   14000ea2d:	add    BYTE PTR [rax],al
   14000ea2f:	add    BYTE PTR [rdx+0x0],dl
   14000ea32:	add    BYTE PTR ss:[rax],dh
   14000ea35:	add    BYTE PTR [rcx],dh
   14000ea37:	add    BYTE PTR [rdi],dh
   14000ea39:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f43f
   14000ea3f:	add    BYTE PTR [rax],ah
   14000ea41:	add    BYTE PTR [rbp+0x0],dh
   14000ea44:	outs   dx,BYTE PTR ds:[rsi]
   14000ea45:	add    BYTE PTR [rbp+0x0],ah
   14000ea48:	js     0x14000ea4a
   14000ea4a:	jo     0x14000ea4c
   14000ea4c:	add    BYTE PTR gs:[rbx+0x0],ah
   14000ea50:	je     0x14000ea52
   14000ea52:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000ea57:	add    BYTE PTR [rbp+0x0],ch
   14000ea5a:	jne    0x14000ea5c
   14000ea5c:	ins    BYTE PTR es:[rdi],dx
   14000ea5d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ea61:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000ea65:	add    BYTE PTR [rdx+0x0],dh
   14000ea68:	add    BYTE PTR gs:[rcx+0x0],ah
   14000ea6c:	add    BYTE PTR fs:[rax],ah
   14000ea6f:	add    BYTE PTR [rax+rax*1+0x6f],ch
   14000ea73:	add    BYTE PTR [rbx+0x0],ah
   14000ea76:	imul   eax,DWORD PTR [rax],0x20
   14000ea79:	add    BYTE PTR [rbp+0x0],ah
   14000ea7c:	jb     0x14000ea7e
   14000ea7e:	jb     0x14000ea80
   14000ea80:	outs   dx,DWORD PTR ds:[rsi]
   14000ea81:	add    BYTE PTR [rdx+0x0],dh
   14000ea84:	or     eax,0xa00
   14000ea89:	add    BYTE PTR [rax],al
   14000ea8b:	add    BYTE PTR [rax],al
   14000ea8d:	add    BYTE PTR [rax],al
   14000ea8f:	add    BYTE PTR [rdx+0x0],dl
   14000ea92:	add    BYTE PTR ss:[rax],dh
   14000ea95:	add    BYTE PTR [rcx],dh
   14000ea97:	add    BYTE PTR [rsi],dh
   14000ea99:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f49f
   14000ea9f:	add    BYTE PTR [rax],ah
   14000eaa1:	add    BYTE PTR [rsi+0x0],ch
   14000eaa4:	outs   dx,DWORD PTR ds:[rsi]
   14000eaa5:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000eaa9:	add    BYTE PTR [rbp+0x0],ah
   14000eaac:	outs   dx,BYTE PTR ds:[rsi]
   14000eaad:	add    BYTE PTR [rdi+0x0],ch
   14000eab0:	jne    0x14000eab2
   14000eab2:	add    BYTE PTR [eax+0x0],ch
   14000eab6:	and    BYTE PTR [rax],al
   14000eab8:	jae    0x14000eaba
   14000eaba:	jo     0x14000eabc
   14000eabc:	(bad)  
   14000eabd:	add    BYTE PTR [rbx+0x0],ah
   14000eac0:	add    BYTE PTR gs:[rax],ah
   14000eac3:	add    BYTE PTR [rsi+0x0],ah
   14000eac6:	outs   dx,DWORD PTR ds:[rsi]
   14000eac7:	add    BYTE PTR [rdx+0x0],dh
   14000eaca:	and    BYTE PTR [rax],al
   14000eacc:	je     0x14000eace
   14000eace:	push   0x65007200
   14000ead3:	add    BYTE PTR [rcx+0x0],ah
   14000ead6:	add    BYTE PTR fs:[rax],ah
   14000ead9:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000eadd:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000eae1:	add    BYTE PTR [rip+0xa00],cl        # 0x14000f4e7
	...
   14000eaef:	add    BYTE PTR [rdx+0x0],dl
   14000eaf2:	add    BYTE PTR ss:[rax],dh
   14000eaf5:	add    BYTE PTR [rcx],dh
   14000eaf7:	add    BYTE PTR [rax],dh
   14000eaf9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f4ff
   14000eaff:	add    BYTE PTR [rax],ah
   14000eb01:	add    BYTE PTR [rcx+0x0],ah
   14000eb04:	(bad)  
   14000eb05:	add    BYTE PTR [rdi+0x0],ch
   14000eb08:	jb     0x14000eb0a
   14000eb0a:	je     0x14000eb0c
   14000eb0c:	sub    BYTE PTR [rax],al
   14000eb0e:	sub    DWORD PTR [rax],eax
   14000eb10:	and    BYTE PTR [rax],al
   14000eb12:	push   0x73006100
   14000eb17:	add    BYTE PTR [rax],ah
   14000eb19:	add    BYTE PTR [rdx+0x0],ah
   14000eb1c:	add    BYTE PTR gs:[rbp+0x0],ah
   14000eb20:	outs   dx,BYTE PTR ds:[rsi]
   14000eb21:	add    BYTE PTR [rax],ah
   14000eb23:	add    BYTE PTR [rbx+0x0],ah
   14000eb26:	(bad)  
   14000eb27:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000eb2b:	add    BYTE PTR [rbp+0x0],ah
   14000eb2e:	add    BYTE PTR fs:[rip+0xa00],cl        # 0x14000f535
	...
   14000eb3d:	add    BYTE PTR [rax],al
   14000eb3f:	add    BYTE PTR [rdx+0x0],dl
   14000eb42:	add    BYTE PTR ss:[rax],dh
   14000eb45:	add    BYTE PTR [rax],dh
   14000eb47:	add    BYTE PTR [rcx],bh
   14000eb49:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f54f
   14000eb4f:	add    BYTE PTR [rax],ah
   14000eb51:	add    BYTE PTR [rsi+0x0],ch
   14000eb54:	outs   dx,DWORD PTR ds:[rsi]
   14000eb55:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000eb59:	add    BYTE PTR [rbp+0x0],ah
   14000eb5c:	outs   dx,BYTE PTR ds:[rsi]
   14000eb5d:	add    BYTE PTR [rdi+0x0],ch
   14000eb60:	jne    0x14000eb62
   14000eb62:	add    BYTE PTR [eax+0x0],ch
   14000eb66:	and    BYTE PTR [rax],al
   14000eb68:	jae    0x14000eb6a
   14000eb6a:	jo     0x14000eb6c
   14000eb6c:	(bad)  
   14000eb6d:	add    BYTE PTR [rbx+0x0],ah
   14000eb70:	add    BYTE PTR gs:[rax],ah
   14000eb73:	add    BYTE PTR [rsi+0x0],ah
   14000eb76:	outs   dx,DWORD PTR ds:[rsi]
   14000eb77:	add    BYTE PTR [rdx+0x0],dh
   14000eb7a:	and    BYTE PTR [rax],al
   14000eb7c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000eb80:	jbe    0x14000eb82
   14000eb82:	imul   eax,DWORD PTR [rax],0x6f0072
   14000eb88:	outs   dx,BYTE PTR ds:[rsi]
   14000eb89:	add    BYTE PTR [rbp+0x0],ch
   14000eb8c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000eb90:	je     0x14000eb92
   14000eb92:	or     eax,0xa00
	...
   14000eb9f:	add    BYTE PTR [rdx+0x0],dl
   14000eba2:	add    BYTE PTR ss:[rax],dh
   14000eba5:	add    BYTE PTR [rax],dh
   14000eba7:	add    BYTE PTR [rax],bh
   14000eba9:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f5af
   14000ebaf:	add    BYTE PTR [rax],ah
   14000ebb1:	add    BYTE PTR [rsi+0x0],ch
   14000ebb4:	outs   dx,DWORD PTR ds:[rsi]
   14000ebb5:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000ebb9:	add    BYTE PTR [rbp+0x0],ah
   14000ebbc:	outs   dx,BYTE PTR ds:[rsi]
   14000ebbd:	add    BYTE PTR [rdi+0x0],ch
   14000ebc0:	jne    0x14000ebc2
   14000ebc2:	add    BYTE PTR [eax+0x0],ch
   14000ebc6:	and    BYTE PTR [rax],al
   14000ebc8:	jae    0x14000ebca
   14000ebca:	jo     0x14000ebcc
   14000ebcc:	(bad)  
   14000ebcd:	add    BYTE PTR [rbx+0x0],ah
   14000ebd0:	add    BYTE PTR gs:[rax],ah
   14000ebd3:	add    BYTE PTR [rsi+0x0],ah
   14000ebd6:	outs   dx,DWORD PTR ds:[rsi]
   14000ebd7:	add    BYTE PTR [rdx+0x0],dh
   14000ebda:	and    BYTE PTR [rax],al
   14000ebdc:	(bad)  
   14000ebdd:	add    BYTE PTR [rdx+0x0],dh
   14000ebe0:	add    BYTE PTR [ebp+0x0],dh
   14000ebe4:	ins    DWORD PTR es:[rdi],dx
   14000ebe5:	add    BYTE PTR [rbp+0x0],ah
   14000ebe8:	outs   dx,BYTE PTR ds:[rsi]
   14000ebe9:	add    BYTE PTR [rax+rax*1+0x73],dh
   14000ebed:	add    BYTE PTR [rip+0xa00],cl        # 0x14000f5f3
	...
   14000ebff:	add    BYTE PTR [rdx+0x0],dl
   14000ec02:	add    BYTE PTR ss:[rax],dh
   14000ec05:	add    BYTE PTR [rax],dh
   14000ec07:	add    BYTE PTR [rdx],dh
   14000ec09:	add    BYTE PTR [rip+0x2d000a00],cl        # 0x16d00f60f
   14000ec0f:	add    BYTE PTR [rax],ah
   14000ec11:	add    BYTE PTR [rsi+0x0],ah
   14000ec14:	ins    BYTE PTR es:[rdi],dx
   14000ec15:	add    BYTE PTR [rdi+0x0],ch
   14000ec18:	(bad)  
   14000ec19:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ec1d:	add    BYTE PTR [rsi+0x0],ch
   14000ec20:	add    BYTE PTR [eax],ah
   14000ec23:	add    BYTE PTR [rax+0x0],dh
   14000ec26:	outs   dx,DWORD PTR ds:[rsi]
   14000ec27:	add    BYTE PTR [rcx+0x0],ch
   14000ec2a:	outs   dx,BYTE PTR ds:[rsi]
   14000ec2b:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000ec2f:	add    BYTE PTR [rbx+0x0],dh
   14000ec32:	jne    0x14000ec34
   14000ec34:	jo     0x14000ec36
   14000ec36:	jo     0x14000ec38
   14000ec38:	outs   dx,DWORD PTR ds:[rsi]
   14000ec39:	add    BYTE PTR [rdx+0x0],dh
   14000ec3c:	je     0x14000ec3e
   14000ec3e:	and    BYTE PTR [rax],al
   14000ec40:	outs   dx,BYTE PTR ds:[rsi]
   14000ec41:	add    BYTE PTR [rdi+0x0],ch
   14000ec44:	je     0x14000ec46
   14000ec46:	and    BYTE PTR [rax],al
   14000ec48:	ins    BYTE PTR es:[rdi],dx
   14000ec49:	add    BYTE PTR [rdi+0x0],ch
   14000ec4c:	(bad)  
   14000ec4d:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000ec51:	add    BYTE PTR [rax+rax*1+0xd],ah
   14000ec55:	add    BYTE PTR [rdx],cl
	...
   14000ec5f:	add    BYTE PTR [rdx],al
	...
   14000ec69:	in     al,dx
   14000ec6a:	add    BYTE PTR [rax+0x1],al
   14000ec6d:	add    BYTE PTR [rax],al
   14000ec6f:	add    BYTE PTR [rax],cl
   14000ec71:	add    BYTE PTR [rax],al
   14000ec73:	add    BYTE PTR [rax],al
   14000ec75:	add    BYTE PTR [rax],al
   14000ec77:	add    BYTE PTR [rax+0x14000eb],ah
   14000ec7d:	add    BYTE PTR [rax],al
   14000ec7f:	add    BYTE PTR [rcx],cl
   14000ec81:	add    BYTE PTR [rax],al
   14000ec83:	add    BYTE PTR [rax],al
   14000ec85:	add    BYTE PTR [rax],al
   14000ec87:	add    BYTE PTR [rax-0x15],al
   14000ec8a:	add    BYTE PTR [rax+0x1],al
   14000ec8d:	add    BYTE PTR [rax],al
   14000ec8f:	add    BYTE PTR [rdx],cl
   14000ec91:	add    BYTE PTR [rax],al
   14000ec93:	add    BYTE PTR [rax],al
   14000ec95:	add    BYTE PTR [rax],al
   14000ec97:	add    al,dh
   14000ec99:	(bad)  
   14000ec9a:	add    BYTE PTR [rax+0x1],al
   14000ec9d:	add    BYTE PTR [rax],al
   14000ec9f:	add    BYTE PTR [rax],dl
   14000eca1:	add    BYTE PTR [rax],al
   14000eca3:	add    BYTE PTR [rax],al
   14000eca5:	add    BYTE PTR [rax],al
   14000eca7:	add    BYTE PTR [rax+0x14000ea],dl
   14000ecad:	add    BYTE PTR [rax],al
   14000ecaf:	add    BYTE PTR [rcx],dl
   14000ecb1:	add    BYTE PTR [rax],al
   14000ecb3:	add    BYTE PTR [rax],al
   14000ecb5:	add    BYTE PTR [rax],al
   14000ecb7:	add    BYTE PTR [rax],dh
   14000ecb9:	(bad)  
   14000ecba:	add    BYTE PTR [rax+0x1],al
   14000ecbd:	add    BYTE PTR [rax],al
   14000ecbf:	add    BYTE PTR [rdx],dl
   14000ecc1:	add    BYTE PTR [rax],al
   14000ecc3:	add    BYTE PTR [rax],al
   14000ecc5:	add    BYTE PTR [rax],al
   14000ecc7:	add    al,ah
   14000ecc9:	jmp    0x140022cce
   14000ecce:	add    BYTE PTR [rax],al
   14000ecd0:	adc    eax,DWORD PTR [rax]
   14000ecd2:	add    BYTE PTR [rax],al
   14000ecd4:	add    BYTE PTR [rax],al
   14000ecd6:	add    BYTE PTR [rax],al
   14000ecd8:	sub    cl,0x0
   14000ecdb:	rex add DWORD PTR [rax],eax
   14000ecde:	add    BYTE PTR [rax],al
   14000ece0:	sbb    BYTE PTR [rax],al
   14000ece2:	add    BYTE PTR [rax],al
   14000ece4:	add    BYTE PTR [rax],al
   14000ece6:	add    BYTE PTR [rax],al
   14000ece8:	adc    cl,ch
   14000ecea:	add    BYTE PTR [rax+0x1],al
   14000eced:	add    BYTE PTR [rax],al
   14000ecef:	add    BYTE PTR [rcx],bl
   14000ecf1:	add    BYTE PTR [rax],al
   14000ecf3:	add    BYTE PTR [rax],al
   14000ecf5:	add    BYTE PTR [rax],al
   14000ecf7:	add    al,al
   14000ecf9:	call   0x140022cfe
   14000ecfe:	add    BYTE PTR [rax],al
   14000ed00:	sbb    al,BYTE PTR [rax]
   14000ed02:	add    BYTE PTR [rax],al
   14000ed04:	add    BYTE PTR [rax],al
   14000ed06:	add    BYTE PTR [rax],al
   14000ed08:	push   rax
   14000ed09:	call   0x140022d0e
   14000ed0e:	add    BYTE PTR [rax],al
   14000ed10:	sbb    eax,DWORD PTR [rax]
   14000ed12:	add    BYTE PTR [rax],al
   14000ed14:	add    BYTE PTR [rax],al
   14000ed16:	add    BYTE PTR [rax],al
   14000ed18:	loopne 0x14000ed01
   14000ed1a:	add    BYTE PTR [rax+0x1],al
   14000ed1d:	add    BYTE PTR [rax],al
   14000ed1f:	add    BYTE PTR [rax+rax*1],bl
   14000ed22:	add    BYTE PTR [rax],al
   14000ed24:	add    BYTE PTR [rax],al
   14000ed26:	add    BYTE PTR [rax],al
   14000ed28:	nop
   14000ed29:	out    0x0,eax
   14000ed2b:	rex add DWORD PTR [rax],eax
   14000ed2e:	add    BYTE PTR [rax],al
   14000ed30:	(bad)  
   14000ed31:	add    BYTE PTR [rax],al
   14000ed33:	add    BYTE PTR [rax],al
   14000ed35:	add    BYTE PTR [rax],al
   14000ed37:	add    BYTE PTR [rax-0x19],cl
   14000ed3a:	add    BYTE PTR [rax+0x1],al
   14000ed3d:	add    BYTE PTR [rax],al
   14000ed3f:	add    BYTE PTR [rdi],bl
   14000ed41:	add    BYTE PTR [rax],al
   14000ed43:	add    BYTE PTR [rax],al
   14000ed45:	add    BYTE PTR [rax],al
   14000ed47:	add    BYTE PTR [rax+0x14000e6],al
   14000ed4d:	add    BYTE PTR [rax],al
   14000ed4f:	add    BYTE PTR [rax],ah
   14000ed51:	add    BYTE PTR [rax],al
   14000ed53:	add    BYTE PTR [rax],al
   14000ed55:	add    BYTE PTR [rax],al
   14000ed57:	add    BYTE PTR [rax],dl
   14000ed59:	out    0x0,al
   14000ed5b:	rex add DWORD PTR [rax],eax
   14000ed5e:	add    BYTE PTR [rax],al
   14000ed60:	and    DWORD PTR [rax],eax
   14000ed62:	add    BYTE PTR [rax],al
   14000ed64:	add    BYTE PTR [rax],al
   14000ed66:	add    BYTE PTR [rax],al
   14000ed68:	and    ah,ah
   14000ed6a:	add    BYTE PTR [rax+0x1],al
   14000ed6d:	add    BYTE PTR [rax],al
   14000ed6f:	add    BYTE PTR [rax+0x0],bh
   14000ed72:	add    BYTE PTR [rax],al
   14000ed74:	add    BYTE PTR [rax],al
   14000ed76:	add    BYTE PTR [rax],al
   14000ed78:	add    ah,ah
   14000ed7a:	add    BYTE PTR [rax+0x1],al
   14000ed7d:	add    BYTE PTR [rax],al
   14000ed7f:	add    BYTE PTR [rcx+0x0],bh
   14000ed82:	add    BYTE PTR [rax],al
   14000ed84:	add    BYTE PTR [rax],al
   14000ed86:	add    BYTE PTR [rax],al
   14000ed88:	loopne 0x14000ed6d
   14000ed8a:	add    BYTE PTR [rax+0x1],al
   14000ed8d:	add    BYTE PTR [rax],al
   14000ed8f:	add    BYTE PTR [rdx+0x0],bh
   14000ed92:	add    BYTE PTR [rax],al
   14000ed94:	add    BYTE PTR [rax],al
   14000ed96:	add    BYTE PTR [rax],al
   14000ed98:	shl    bl,0x0
   14000ed9b:	rex add DWORD PTR [rax],eax
   14000ed9e:	add    BYTE PTR [rax],al
   14000eda0:	cld    
   14000eda1:	add    BYTE PTR [rax],al
   14000eda3:	add    BYTE PTR [rax],al
   14000eda5:	add    BYTE PTR [rax],al
   14000eda7:	add    BYTE PTR [rax+0x14000e3],bh
   14000edad:	add    BYTE PTR [rax],al
   14000edaf:	add    bh,bh
   14000edb1:	add    BYTE PTR [rax],al
   14000edb3:	add    BYTE PTR [rax],al
   14000edb5:	add    BYTE PTR [rax],al
   14000edb7:	add    BYTE PTR [rax+0x14000e3],bl
   14000edbd:	add    BYTE PTR [rax],al
   14000edbf:	add    BYTE PTR [rbp+0x0],cl
   14000edc2:	imul   eax,DWORD PTR [rax],0x720063
   14000edc8:	outs   dx,DWORD PTR ds:[rsi]
   14000edc9:	add    BYTE PTR [rbx+0x0],dh
   14000edcc:	outs   dx,DWORD PTR ds:[rsi]
   14000edcd:	add    BYTE PTR [rsi+0x0],ah
   14000edd0:	je     0x14000edd2
   14000edd2:	and    BYTE PTR [rax],al
   14000edd4:	push   rsi
   14000edd5:	add    BYTE PTR [rcx+0x0],ch
   14000edd8:	jae    0x14000edda
   14000edda:	jne    0x14000eddc
   14000eddc:	(bad)  
   14000eddd:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000ede1:	add    BYTE PTR [rbx+0x0],al
   14000ede4:	sub    eax,DWORD PTR [rax]
   14000ede6:	sub    eax,DWORD PTR [rax]
   14000ede8:	and    BYTE PTR [rax],al
   14000edea:	push   rdx
   14000edeb:	add    BYTE PTR [rbp+0x0],dh
   14000edee:	outs   dx,BYTE PTR ds:[rsi]
   14000edef:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000edf3:	add    BYTE PTR [rbp+0x0],ch
   14000edf6:	add    BYTE PTR gs:[rax],ah
   14000edf9:	add    BYTE PTR [rax+rax*1+0x69],cl
   14000edfd:	add    BYTE PTR [rdx+0x0],ah
   14000ee00:	jb     0x14000ee02
   14000ee02:	(bad)  
   14000ee03:	add    BYTE PTR [rdx+0x0],dh
   14000ee06:	jns    0x14000ee08
   14000ee08:	add    BYTE PTR [rax],al
   14000ee0a:	add    BYTE PTR [rax],al
   14000ee0c:	or     al,BYTE PTR [rax]
   14000ee0e:	or     al,BYTE PTR [rax]
	...
   14000ee18:	add    BYTE PTR cs:[rsi],ch
   14000ee1b:	add    BYTE PTR [rsi],ch
   14000ee1d:	add    BYTE PTR [rax],al
   14000ee1f:	add    BYTE PTR [rax+rax*1],bh
   14000ee22:	jo     0x14000ee24
   14000ee24:	jb     0x14000ee26
   14000ee26:	outs   dx,DWORD PTR ds:[rsi]
   14000ee27:	add    BYTE PTR [rdi+0x0],ah
   14000ee2a:	jb     0x14000ee2c
   14000ee2c:	(bad)  
   14000ee2d:	add    BYTE PTR [rbp+0x0],ch
   14000ee30:	and    BYTE PTR [rax],al
   14000ee32:	outs   dx,BYTE PTR ds:[rsi]
   14000ee33:	add    BYTE PTR [rcx+0x0],ah
   14000ee36:	ins    DWORD PTR es:[rdi],dx
   14000ee37:	add    BYTE PTR [rbp+0x0],ah
   14000ee3a:	and    BYTE PTR [rax],al
   14000ee3c:	jne    0x14000ee3e
   14000ee3e:	outs   dx,BYTE PTR ds:[rsi]
   14000ee3f:	add    BYTE PTR [rbx+0x0],ch
   14000ee42:	outs   dx,BYTE PTR ds:[rsi]
   14000ee43:	add    BYTE PTR [rdi+0x0],ch
   14000ee46:	ja     0x14000ee48
   14000ee48:	outs   dx,BYTE PTR ds:[rsi]
   14000ee49:	add    BYTE PTR [rsi],bh
   14000ee4b:	add    BYTE PTR [rax],al
   14000ee4d:	add    BYTE PTR [rax],al
   14000ee4f:	add    BYTE PTR [rdx+0x0],dl
   14000ee52:	jne    0x14000ee54
   14000ee54:	outs   dx,BYTE PTR ds:[rsi]
   14000ee55:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ee59:	add    BYTE PTR [rbp+0x0],ch
   14000ee5c:	add    BYTE PTR gs:[rax],ah
   14000ee5f:	add    BYTE PTR [rbp+0x0],al
   14000ee62:	jb     0x14000ee64
   14000ee64:	jb     0x14000ee66
   14000ee66:	outs   dx,DWORD PTR ds:[rsi]
   14000ee67:	add    BYTE PTR [rdx+0x0],dh
   14000ee6a:	and    DWORD PTR [rax],eax
   14000ee6c:	or     al,BYTE PTR [rax]
   14000ee6e:	or     al,BYTE PTR [rax]
   14000ee70:	push   rax
   14000ee71:	add    BYTE PTR [rdx+0x0],dh
   14000ee74:	outs   dx,DWORD PTR ds:[rsi]
   14000ee75:	add    BYTE PTR [rdi+0x0],ah
   14000ee78:	jb     0x14000ee7a
   14000ee7a:	(bad)  
   14000ee7b:	add    BYTE PTR [rbp+0x0],ch
   14000ee7e:	cmp    al,BYTE PTR [rax]
   14000ee80:	and    BYTE PTR [rax],al
   14000ee82:	add    BYTE PTR [rax],al
   14000ee84:	add    BYTE PTR [rax],al
   14000ee86:	add    BYTE PTR [rax],al
   14000ee88:	sub    BYTE PTR [rax],al
   14000ee8a:	outs   dx,BYTE PTR ds:[rsi]
   14000ee8b:	add    BYTE PTR [rbp+0x0],dh
   14000ee8e:	ins    BYTE PTR es:[rdi],dx
   14000ee8f:	add    BYTE PTR [rax+rax*1+0x29],ch
   14000ee93:	add    BYTE PTR [rax],al
   14000ee95:	add    BYTE PTR [rax],al
   14000ee97:	add    BYTE PTR [rax],ch
   14000ee99:	outs   dx,BYTE PTR ds:[rsi]
   14000ee9a:	jne    0x14000ef08
   14000ee9c:	ins    BYTE PTR es:[rdi],dx
   14000ee9d:	sub    DWORD PTR [rax],eax
   14000ee9f:	add    BYTE PTR [rsi],al
   14000eea1:	add    BYTE PTR [rax],al
   14000eea3:	(bad)  
   14000eea4:	add    BYTE PTR [rcx],al
   14000eea6:	add    BYTE PTR [rax],al
   14000eea8:	adc    BYTE PTR [rax],al
   14000eeaa:	add    eax,DWORD PTR [rsi]
   14000eeac:	add    BYTE PTR [rsi],al
   14000eeae:	add    dl,BYTE PTR [rax]
   14000eeb0:	add    al,0x45
   14000eeb2:	rex.RB
   14000eeb3:	rex.RB add eax,0x5050505
   14000eeb9:	xor    eax,0x500030
   14000eebe:	add    BYTE PTR [rax],al
   14000eec0:	add    BYTE PTR [rax],ch
   14000eec2:	and    BYTE PTR [rax],bh
   14000eec4:	push   rax
   14000eec5:	pop    rax
   14000eec6:	(bad)  
   14000eec7:	or     BYTE PTR [rax],al
   14000eec9:	(bad)  
   14000eeca:	xor    BYTE PTR [rax],dh
   14000eecc:	push   rdi
   14000eecd:	push   rax
   14000eece:	(bad)  
   14000eecf:	add    BYTE PTR [rax],al
   14000eed1:	and    BYTE PTR [rax],ah
   14000eed3:	or     BYTE PTR [rax],al
   14000eed5:	add    BYTE PTR [rax],al
   14000eed7:	add    BYTE PTR [rax],cl
   14000eed9:	(bad)  
   14000eeda:	push   0x60606060
   14000eedf:	add    BYTE PTR [rax],al
   14000eee1:	js     0x14000ef53
   14000eee3:	js     0x14000ef5d
   14000eee5:	js     0x14000ef5f
   14000eee7:	or     BYTE PTR [rdi],al
   14000eee9:	or     BYTE PTR [rax],al
   14000eeeb:	add    BYTE PTR [rdi],al
   14000eeed:	add    BYTE PTR [rax],cl
   14000eeef:	or     BYTE PTR [rax],cl
   14000eef1:	add    BYTE PTR [rax],al
   14000eef3:	or     BYTE PTR [rax],al
   14000eef5:	or     BYTE PTR [rax],al
   14000eef7:	(bad)  
   14000eef8:	or     BYTE PTR [rax],al
	...
   14000effe:	add    BYTE PTR [rax],al
   14000f000:	and    BYTE PTR [rax],al
   14000f002:	and    BYTE PTR [rax],al
   14000f004:	and    BYTE PTR [rax],al
   14000f006:	and    BYTE PTR [rax],al
   14000f008:	and    BYTE PTR [rax],al
   14000f00a:	and    BYTE PTR [rax],al
   14000f00c:	and    BYTE PTR [rax],al
   14000f00e:	and    BYTE PTR [rax],al
   14000f010:	and    BYTE PTR [rax],al
   14000f012:	sub    BYTE PTR [rax],al
   14000f014:	sub    BYTE PTR [rax],al
   14000f016:	sub    BYTE PTR [rax],al
   14000f018:	sub    BYTE PTR [rax],al
   14000f01a:	sub    BYTE PTR [rax],al
   14000f01c:	and    BYTE PTR [rax],al
   14000f01e:	and    BYTE PTR [rax],al
   14000f020:	and    BYTE PTR [rax],al
   14000f022:	and    BYTE PTR [rax],al
   14000f024:	and    BYTE PTR [rax],al
   14000f026:	and    BYTE PTR [rax],al
   14000f028:	and    BYTE PTR [rax],al
   14000f02a:	and    BYTE PTR [rax],al
   14000f02c:	and    BYTE PTR [rax],al
   14000f02e:	and    BYTE PTR [rax],al
   14000f030:	and    BYTE PTR [rax],al
   14000f032:	and    BYTE PTR [rax],al
   14000f034:	and    BYTE PTR [rax],al
   14000f036:	and    BYTE PTR [rax],al
   14000f038:	and    BYTE PTR [rax],al
   14000f03a:	and    BYTE PTR [rax],al
   14000f03c:	and    BYTE PTR [rax],al
   14000f03e:	and    BYTE PTR [rax],al
   14000f040:	rex.W add BYTE PTR [rax],dl
   14000f043:	add    BYTE PTR [rax],dl
   14000f045:	add    BYTE PTR [rax],dl
   14000f047:	add    BYTE PTR [rax],dl
   14000f049:	add    BYTE PTR [rax],dl
   14000f04b:	add    BYTE PTR [rax],dl
   14000f04d:	add    BYTE PTR [rax],dl
   14000f04f:	add    BYTE PTR [rax],dl
   14000f051:	add    BYTE PTR [rax],dl
   14000f053:	add    BYTE PTR [rax],dl
   14000f055:	add    BYTE PTR [rax],dl
   14000f057:	add    BYTE PTR [rax],dl
   14000f059:	add    BYTE PTR [rax],dl
   14000f05b:	add    BYTE PTR [rax],dl
   14000f05d:	add    BYTE PTR [rax],dl
   14000f05f:	add    BYTE PTR [rax+rax*1+0x840084],al
   14000f066:	test   BYTE PTR [rax],al
   14000f068:	test   BYTE PTR [rax],al
   14000f06a:	test   BYTE PTR [rax],al
   14000f06c:	test   BYTE PTR [rax],al
   14000f06e:	test   BYTE PTR [rax],al
   14000f070:	test   BYTE PTR [rax],al
   14000f072:	test   BYTE PTR [rax],al
   14000f074:	adc    BYTE PTR [rax],al
   14000f076:	adc    BYTE PTR [rax],al
   14000f078:	adc    BYTE PTR [rax],al
   14000f07a:	adc    BYTE PTR [rax],al
   14000f07c:	adc    BYTE PTR [rax],al
   14000f07e:	adc    BYTE PTR [rax],al
   14000f080:	adc    BYTE PTR [rax],al
   14000f082:	add    DWORD PTR [rax],0x810081
   14000f088:	add    DWORD PTR [rax],0x810081
   14000f08e:	add    DWORD PTR [rax],eax
   14000f090:	add    DWORD PTR [rax],eax
   14000f092:	add    DWORD PTR [rax],eax
   14000f094:	add    DWORD PTR [rax],eax
   14000f096:	add    DWORD PTR [rax],eax
   14000f098:	add    DWORD PTR [rax],eax
   14000f09a:	add    DWORD PTR [rax],eax
   14000f09c:	add    DWORD PTR [rax],eax
   14000f09e:	add    DWORD PTR [rax],eax
   14000f0a0:	add    DWORD PTR [rax],eax
   14000f0a2:	add    DWORD PTR [rax],eax
   14000f0a4:	add    DWORD PTR [rax],eax
   14000f0a6:	add    DWORD PTR [rax],eax
   14000f0a8:	add    DWORD PTR [rax],eax
   14000f0aa:	add    DWORD PTR [rax],eax
   14000f0ac:	add    DWORD PTR [rax],eax
   14000f0ae:	add    DWORD PTR [rax],eax
   14000f0b0:	add    DWORD PTR [rax],eax
   14000f0b2:	add    DWORD PTR [rax],eax
   14000f0b4:	add    DWORD PTR [rax],eax
   14000f0b6:	adc    BYTE PTR [rax],al
   14000f0b8:	adc    BYTE PTR [rax],al
   14000f0ba:	adc    BYTE PTR [rax],al
   14000f0bc:	adc    BYTE PTR [rax],al
   14000f0be:	adc    BYTE PTR [rax],al
   14000f0c0:	adc    BYTE PTR [rax],al
   14000f0c2:	(bad)  
   14000f0c3:	add    BYTE PTR [rdx-0x7dff7e00],al
   14000f0c9:	add    BYTE PTR [rdx+0x2008200],al
   14000f0cf:	add    BYTE PTR [rdx],al
   14000f0d1:	add    BYTE PTR [rdx],al
   14000f0d3:	add    BYTE PTR [rdx],al
   14000f0d5:	add    BYTE PTR [rdx],al
   14000f0d7:	add    BYTE PTR [rdx],al
   14000f0d9:	add    BYTE PTR [rdx],al
   14000f0db:	add    BYTE PTR [rdx],al
   14000f0dd:	add    BYTE PTR [rdx],al
   14000f0df:	add    BYTE PTR [rdx],al
   14000f0e1:	add    BYTE PTR [rdx],al
   14000f0e3:	add    BYTE PTR [rdx],al
   14000f0e5:	add    BYTE PTR [rdx],al
   14000f0e7:	add    BYTE PTR [rdx],al
   14000f0e9:	add    BYTE PTR [rdx],al
   14000f0eb:	add    BYTE PTR [rdx],al
   14000f0ed:	add    BYTE PTR [rdx],al
   14000f0ef:	add    BYTE PTR [rdx],al
   14000f0f1:	add    BYTE PTR [rdx],al
   14000f0f3:	add    BYTE PTR [rdx],al
   14000f0f5:	add    BYTE PTR [rax],dl
   14000f0f7:	add    BYTE PTR [rax],dl
   14000f0f9:	add    BYTE PTR [rax],dl
   14000f0fb:	add    BYTE PTR [rax],dl
   14000f0fd:	add    BYTE PTR [rax],ah
	...
   14000f1ff:	add    BYTE PTR [rax],al
   14000f201:	add    BYTE PTR [rax],ah
   14000f203:	add    BYTE PTR [rax],ah
   14000f205:	add    BYTE PTR [rax],ah
   14000f207:	add    BYTE PTR [rax],ah
   14000f209:	add    BYTE PTR [rax],ah
   14000f20b:	add    BYTE PTR [rax],ah
   14000f20d:	add    BYTE PTR [rax],ah
   14000f20f:	add    BYTE PTR [rax],ah
   14000f211:	add    BYTE PTR [rax],ah
   14000f213:	add    BYTE PTR [rax+0x0],ch
   14000f216:	sub    BYTE PTR [rax],al
   14000f218:	sub    BYTE PTR [rax],al
   14000f21a:	sub    BYTE PTR [rax],al
   14000f21c:	sub    BYTE PTR [rax],al
   14000f21e:	and    BYTE PTR [rax],al
   14000f220:	and    BYTE PTR [rax],al
   14000f222:	and    BYTE PTR [rax],al
   14000f224:	and    BYTE PTR [rax],al
   14000f226:	and    BYTE PTR [rax],al
   14000f228:	and    BYTE PTR [rax],al
   14000f22a:	and    BYTE PTR [rax],al
   14000f22c:	and    BYTE PTR [rax],al
   14000f22e:	and    BYTE PTR [rax],al
   14000f230:	and    BYTE PTR [rax],al
   14000f232:	and    BYTE PTR [rax],al
   14000f234:	and    BYTE PTR [rax],al
   14000f236:	and    BYTE PTR [rax],al
   14000f238:	and    BYTE PTR [rax],al
   14000f23a:	and    BYTE PTR [rax],al
   14000f23c:	and    BYTE PTR [rax],al
   14000f23e:	and    BYTE PTR [rax],al
   14000f240:	and    BYTE PTR [rax],al
   14000f242:	rex.W add BYTE PTR [rax],dl
   14000f245:	add    BYTE PTR [rax],dl
   14000f247:	add    BYTE PTR [rax],dl
   14000f249:	add    BYTE PTR [rax],dl
   14000f24b:	add    BYTE PTR [rax],dl
   14000f24d:	add    BYTE PTR [rax],dl
   14000f24f:	add    BYTE PTR [rax],dl
   14000f251:	add    BYTE PTR [rax],dl
   14000f253:	add    BYTE PTR [rax],dl
   14000f255:	add    BYTE PTR [rax],dl
   14000f257:	add    BYTE PTR [rax],dl
   14000f259:	add    BYTE PTR [rax],dl
   14000f25b:	add    BYTE PTR [rax],dl
   14000f25d:	add    BYTE PTR [rax],dl
   14000f25f:	add    BYTE PTR [rax],dl
   14000f261:	add    BYTE PTR [rax+rax*1+0x840084],al
   14000f268:	test   BYTE PTR [rax],al
   14000f26a:	test   BYTE PTR [rax],al
   14000f26c:	test   BYTE PTR [rax],al
   14000f26e:	test   BYTE PTR [rax],al
   14000f270:	test   BYTE PTR [rax],al
   14000f272:	test   BYTE PTR [rax],al
   14000f274:	test   BYTE PTR [rax],al
   14000f276:	adc    BYTE PTR [rax],al
   14000f278:	adc    BYTE PTR [rax],al
   14000f27a:	adc    BYTE PTR [rax],al
   14000f27c:	adc    BYTE PTR [rax],al
   14000f27e:	adc    BYTE PTR [rax],al
   14000f280:	adc    BYTE PTR [rax],al
   14000f282:	adc    BYTE PTR [rax],al
   14000f284:	add    DWORD PTR [rcx],0x1810181
   14000f28a:	add    DWORD PTR [rcx],0x1810181
   14000f290:	add    DWORD PTR [rcx],eax
   14000f292:	add    DWORD PTR [rcx],eax
   14000f294:	add    DWORD PTR [rcx],eax
   14000f296:	add    DWORD PTR [rcx],eax
   14000f298:	add    DWORD PTR [rcx],eax
   14000f29a:	add    DWORD PTR [rcx],eax
   14000f29c:	add    DWORD PTR [rcx],eax
   14000f29e:	add    DWORD PTR [rcx],eax
   14000f2a0:	add    DWORD PTR [rcx],eax
   14000f2a2:	add    DWORD PTR [rcx],eax
   14000f2a4:	add    DWORD PTR [rcx],eax
   14000f2a6:	add    DWORD PTR [rcx],eax
   14000f2a8:	add    DWORD PTR [rcx],eax
   14000f2aa:	add    DWORD PTR [rcx],eax
   14000f2ac:	add    DWORD PTR [rcx],eax
   14000f2ae:	add    DWORD PTR [rcx],eax
   14000f2b0:	add    DWORD PTR [rcx],eax
   14000f2b2:	add    DWORD PTR [rcx],eax
   14000f2b4:	add    DWORD PTR [rcx],eax
   14000f2b6:	add    DWORD PTR [rcx],eax
   14000f2b8:	adc    BYTE PTR [rax],al
   14000f2ba:	adc    BYTE PTR [rax],al
   14000f2bc:	adc    BYTE PTR [rax],al
   14000f2be:	adc    BYTE PTR [rax],al
   14000f2c0:	adc    BYTE PTR [rax],al
   14000f2c2:	adc    BYTE PTR [rax],al
   14000f2c4:	(bad)  
   14000f2c5:	add    DWORD PTR [rdx-0x7dfe7dff],eax
   14000f2cb:	add    DWORD PTR [rdx+0x2018201],eax
   14000f2d1:	add    DWORD PTR [rdx],eax
   14000f2d3:	add    DWORD PTR [rdx],eax
   14000f2d5:	add    DWORD PTR [rdx],eax
   14000f2d7:	add    DWORD PTR [rdx],eax
   14000f2d9:	add    DWORD PTR [rdx],eax
   14000f2db:	add    DWORD PTR [rdx],eax
   14000f2dd:	add    DWORD PTR [rdx],eax
   14000f2df:	add    DWORD PTR [rdx],eax
   14000f2e1:	add    DWORD PTR [rdx],eax
   14000f2e3:	add    DWORD PTR [rdx],eax
   14000f2e5:	add    DWORD PTR [rdx],eax
   14000f2e7:	add    DWORD PTR [rdx],eax
   14000f2e9:	add    DWORD PTR [rdx],eax
   14000f2eb:	add    DWORD PTR [rdx],eax
   14000f2ed:	add    DWORD PTR [rdx],eax
   14000f2ef:	add    DWORD PTR [rdx],eax
   14000f2f1:	add    DWORD PTR [rdx],eax
   14000f2f3:	add    DWORD PTR [rdx],eax
   14000f2f5:	add    DWORD PTR [rdx],eax
   14000f2f7:	add    DWORD PTR [rax],edx
   14000f2f9:	add    BYTE PTR [rax],dl
   14000f2fb:	add    BYTE PTR [rax],dl
   14000f2fd:	add    BYTE PTR [rax],dl
   14000f2ff:	add    BYTE PTR [rax],ah
   14000f301:	add    BYTE PTR [rax],ah
   14000f303:	add    BYTE PTR [rax],ah
   14000f305:	add    BYTE PTR [rax],ah
   14000f307:	add    BYTE PTR [rax],ah
   14000f309:	add    BYTE PTR [rax],ah
   14000f30b:	add    BYTE PTR [rax],ah
   14000f30d:	add    BYTE PTR [rax],ah
   14000f30f:	add    BYTE PTR [rax],ah
   14000f311:	add    BYTE PTR [rax],ah
   14000f313:	add    BYTE PTR [rax],ah
   14000f315:	add    BYTE PTR [rax],ah
   14000f317:	add    BYTE PTR [rax],ah
   14000f319:	add    BYTE PTR [rax],ah
   14000f31b:	add    BYTE PTR [rax],ah
   14000f31d:	add    BYTE PTR [rax],ah
   14000f31f:	add    BYTE PTR [rax],ah
   14000f321:	add    BYTE PTR [rax],ah
   14000f323:	add    BYTE PTR [rax],ah
   14000f325:	add    BYTE PTR [rax],ah
   14000f327:	add    BYTE PTR [rax],ah
   14000f329:	add    BYTE PTR [rax],ah
   14000f32b:	add    BYTE PTR [rax],ah
   14000f32d:	add    BYTE PTR [rax],ah
   14000f32f:	add    BYTE PTR [rax],ah
   14000f331:	add    BYTE PTR [rax],ah
   14000f333:	add    BYTE PTR [rax],ah
   14000f335:	add    BYTE PTR [rax],ah
   14000f337:	add    BYTE PTR [rax],ah
   14000f339:	add    BYTE PTR [rax],ah
   14000f33b:	add    BYTE PTR [rax],ah
   14000f33d:	add    BYTE PTR [rax],ah
   14000f33f:	add    BYTE PTR [rax],ah
   14000f341:	add    BYTE PTR [rax+0x0],cl
   14000f344:	adc    BYTE PTR [rax],al
   14000f346:	adc    BYTE PTR [rax],al
   14000f348:	adc    BYTE PTR [rax],al
   14000f34a:	adc    BYTE PTR [rax],al
   14000f34c:	adc    BYTE PTR [rax],al
   14000f34e:	adc    BYTE PTR [rax],al
   14000f350:	adc    BYTE PTR [rax],al
   14000f352:	adc    BYTE PTR [rax],al
   14000f354:	adc    BYTE PTR [rax],al
   14000f356:	adc    BYTE PTR [rax],al
   14000f358:	adc    BYTE PTR [rax],al
   14000f35a:	adc    BYTE PTR [rax],al
   14000f35c:	adc    BYTE PTR [rax],al
   14000f35e:	adc    BYTE PTR [rax],al
   14000f360:	adc    BYTE PTR [rax],al
   14000f362:	adc    BYTE PTR [rax],al
   14000f364:	adc    BYTE PTR [rax],al
   14000f366:	adc    al,0x0
   14000f368:	adc    al,0x0
   14000f36a:	adc    BYTE PTR [rax],al
   14000f36c:	adc    BYTE PTR [rax],al
   14000f36e:	adc    BYTE PTR [rax],al
   14000f370:	adc    BYTE PTR [rax],al
   14000f372:	adc    BYTE PTR [rax],al
   14000f374:	adc    al,0x0
   14000f376:	adc    BYTE PTR [rax],al
   14000f378:	adc    BYTE PTR [rax],al
   14000f37a:	adc    BYTE PTR [rax],al
   14000f37c:	adc    BYTE PTR [rax],al
   14000f37e:	adc    BYTE PTR [rax],al
   14000f380:	adc    BYTE PTR [rax],al
   14000f382:	add    DWORD PTR [rcx],eax
   14000f384:	add    DWORD PTR [rcx],eax
   14000f386:	add    DWORD PTR [rcx],eax
   14000f388:	add    DWORD PTR [rcx],eax
   14000f38a:	add    DWORD PTR [rcx],eax
   14000f38c:	add    DWORD PTR [rcx],eax
   14000f38e:	add    DWORD PTR [rcx],eax
   14000f390:	add    DWORD PTR [rcx],eax
   14000f392:	add    DWORD PTR [rcx],eax
   14000f394:	add    DWORD PTR [rcx],eax
   14000f396:	add    DWORD PTR [rcx],eax
   14000f398:	add    DWORD PTR [rcx],eax
   14000f39a:	add    DWORD PTR [rcx],eax
   14000f39c:	add    DWORD PTR [rcx],eax
   14000f39e:	add    DWORD PTR [rcx],eax
   14000f3a0:	add    DWORD PTR [rcx],eax
   14000f3a2:	add    DWORD PTR [rcx],eax
   14000f3a4:	add    DWORD PTR [rcx],eax
   14000f3a6:	add    DWORD PTR [rcx],eax
   14000f3a8:	add    DWORD PTR [rcx],eax
   14000f3aa:	add    DWORD PTR [rcx],eax
   14000f3ac:	add    DWORD PTR [rcx],eax
   14000f3ae:	add    DWORD PTR [rcx],eax
   14000f3b0:	adc    BYTE PTR [rax],al
   14000f3b2:	add    DWORD PTR [rcx],eax
   14000f3b4:	add    DWORD PTR [rcx],eax
   14000f3b6:	add    DWORD PTR [rcx],eax
   14000f3b8:	add    DWORD PTR [rcx],eax
   14000f3ba:	add    DWORD PTR [rcx],eax
   14000f3bc:	add    DWORD PTR [rcx],eax
   14000f3be:	add    DWORD PTR [rcx],eax
   14000f3c0:	add    al,BYTE PTR [rcx]
   14000f3c2:	add    al,BYTE PTR [rcx]
   14000f3c4:	add    al,BYTE PTR [rcx]
   14000f3c6:	add    al,BYTE PTR [rcx]
   14000f3c8:	add    al,BYTE PTR [rcx]
   14000f3ca:	add    al,BYTE PTR [rcx]
   14000f3cc:	add    al,BYTE PTR [rcx]
   14000f3ce:	add    al,BYTE PTR [rcx]
   14000f3d0:	add    al,BYTE PTR [rcx]
   14000f3d2:	add    al,BYTE PTR [rcx]
   14000f3d4:	add    al,BYTE PTR [rcx]
   14000f3d6:	add    al,BYTE PTR [rcx]
   14000f3d8:	add    al,BYTE PTR [rcx]
   14000f3da:	add    al,BYTE PTR [rcx]
   14000f3dc:	add    al,BYTE PTR [rcx]
   14000f3de:	add    al,BYTE PTR [rcx]
   14000f3e0:	add    al,BYTE PTR [rcx]
   14000f3e2:	add    al,BYTE PTR [rcx]
   14000f3e4:	add    al,BYTE PTR [rcx]
   14000f3e6:	add    al,BYTE PTR [rcx]
   14000f3e8:	add    al,BYTE PTR [rcx]
   14000f3ea:	add    al,BYTE PTR [rcx]
   14000f3ec:	add    al,BYTE PTR [rcx]
   14000f3ee:	add    al,BYTE PTR [rcx]
   14000f3f0:	adc    BYTE PTR [rax],al
   14000f3f2:	add    al,BYTE PTR [rcx]
   14000f3f4:	add    al,BYTE PTR [rcx]
   14000f3f6:	add    al,BYTE PTR [rcx]
   14000f3f8:	add    al,BYTE PTR [rcx]
   14000f3fa:	add    al,BYTE PTR [rcx]
   14000f3fc:	add    al,BYTE PTR [rcx]
   14000f3fe:	add    al,BYTE PTR [rcx]
   14000f400:	add    al,BYTE PTR [rcx]
   14000f402:	add    DWORD PTR [rcx],eax
	...
   14000f410:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   14000f417:	xchg   DWORD PTR [rax-0x73747577],ecx
   14000f41d:	lea    ecx,[rsi-0x6d6e6f71]
   14000f423:	xchg   ebx,eax
   14000f424:	xchg   esp,eax
   14000f425:	xchg   ebp,eax
   14000f426:	xchg   esi,eax
   14000f427:	xchg   edi,eax
   14000f428:	cwde   
   14000f429:	cdq    
   14000f42a:	(bad)  
   14000f42b:	fwait
   14000f42c:	pushf  
   14000f42d:	popf   
   14000f42e:	sahf   
   14000f42f:	lahf   
   14000f430:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14000f439:	test   eax,0xadacabaa
   14000f43e:	scas   al,BYTE PTR es:[rdi]
   14000f43f:	scas   eax,DWORD PTR es:[rdi]
   14000f440:	mov    al,0xb1
   14000f442:	mov    dl,0xb3
   14000f444:	mov    ah,0xb5
   14000f446:	mov    dh,0xb7
   14000f448:	mov    eax,0xbcbbbab9
   14000f44d:	mov    ebp,0xc1c0bfbe
   14000f452:	ret    0xc4c3
   14000f455:	(bad)
   14000f458:	enter  0xcac9,0xcb
   14000f45c:	int3   
   14000f45d:	int    0xce
   14000f45f:	iret   
   14000f460:	rcl    cl,1
   14000f462:	rcl    bl,cl
   14000f464:	(bad)  
   14000f465:	(bad)  
   14000f466:	(bad)  
   14000f467:	xlat   BYTE PTR ds:[rbx]
   14000f468:	fcomp  st(1)
   14000f46a:	fcmovu st,st(3)
   14000f46c:	(bad)  
   14000f46e:	(bad)  
   14000f470:	loopne 0x14000f453
   14000f472:	loop   0x14000f457
   14000f474:	in     al,0xe5
   14000f476:	out    0xe7,al
   14000f478:	call   0x12cecdf66
   14000f47d:	in     eax,dx
   14000f47e:	out    dx,al
   14000f47f:	out    dx,eax
   14000f480:	lock icebp 
   14000f482:	repnz repz hlt 
   14000f485:	cmc    
   14000f486:	div    bh
   14000f488:	clc    
   14000f489:	stc    
   14000f48a:	cli    
   14000f48b:	sti    
   14000f48c:	cld    
   14000f48d:	std    
   14000f48e:	(bad)  
   14000f48f:	inc    DWORD PTR [rax]
   14000f491:	add    DWORD PTR [rdx],eax
   14000f493:	add    eax,DWORD PTR [rax*1+0x9080706]
   14000f49a:	or     cl,BYTE PTR [rbx]
   14000f49c:	or     al,0xd
   14000f49e:	(bad)  
   14000f49f:	movups xmm2,XMMWORD PTR [rcx]
   14000f4a2:	adc    dl,BYTE PTR [rbx]
   14000f4a4:	adc    al,0x15
   14000f4a6:	(bad)  
   14000f4a7:	(bad)  
   14000f4a8:	sbb    BYTE PTR [rcx],bl
   14000f4aa:	sbb    bl,BYTE PTR [rbx]
   14000f4ac:	sbb    al,0x1d
   14000f4ae:	(bad)  
   14000f4af:	(bad)  
   14000f4b0:	and    BYTE PTR [rcx],ah
   14000f4b2:	and    ah,BYTE PTR [rbx]
   14000f4b4:	and    al,0x25
   14000f4b6:	es (bad) 
   14000f4b8:	sub    BYTE PTR [rcx],ch
   14000f4ba:	sub    ch,BYTE PTR [rbx]
   14000f4bc:	sub    al,0x2d
   14000f4be:	cs (bad) 
   14000f4c0:	xor    BYTE PTR [rcx],dh
   14000f4c2:	xor    dh,BYTE PTR [rbx]
   14000f4c4:	xor    al,0x35
   14000f4c6:	ss (bad) 
   14000f4c8:	cmp    BYTE PTR [rcx],bh
   14000f4ca:	cmp    bh,BYTE PTR [rbx]
   14000f4cc:	cmp    al,0x3d
   14000f4ce:	ds (bad) 
   14000f4d0:	rex (bad) 
   14000f4d2:	(bad)
   14000f4d7:	addr32 push 0x6c6b6a69
   14000f4dd:	ins    DWORD PTR es:[rdi],dx
   14000f4de:	outs   dx,BYTE PTR ds:[rsi]
   14000f4df:	outs   dx,DWORD PTR ds:[rsi]
   14000f4e0:	jo     0x14000f553
   14000f4e2:	jb     0x14000f557
   14000f4e4:	je     0x14000f55b
   14000f4e6:	jbe    0x14000f55f
   14000f4e8:	js     0x14000f563
   14000f4ea:	jp     0x14000f547
   14000f4ec:	pop    rsp
   14000f4ed:	pop    rbp
   14000f4ee:	pop    rsi
   14000f4ef:	pop    rdi
   14000f4f0:	(bad)  
   14000f4f1:	(bad)  
   14000f4f2:	(bad)
   14000f4f7:	addr32 push 0x6c6b6a69
   14000f4fd:	ins    DWORD PTR es:[rdi],dx
   14000f4fe:	outs   dx,BYTE PTR ds:[rsi]
   14000f4ff:	outs   dx,DWORD PTR ds:[rsi]
   14000f500:	jo     0x14000f573
   14000f502:	jb     0x14000f577
   14000f504:	je     0x14000f57b
   14000f506:	jbe    0x14000f57f
   14000f508:	js     0x14000f583
   14000f50a:	jp     0x14000f587
   14000f50c:	jl     0x14000f58b
   14000f50e:	jle    0x14000f58f
   14000f510:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   14000f517:	xchg   DWORD PTR [rax-0x73747577],ecx
   14000f51d:	lea    ecx,[rsi-0x6d6e6f71]
   14000f523:	xchg   ebx,eax
   14000f524:	xchg   esp,eax
   14000f525:	xchg   ebp,eax
   14000f526:	xchg   esi,eax
   14000f527:	xchg   edi,eax
   14000f528:	cwde   
   14000f529:	cdq    
   14000f52a:	(bad)  
   14000f52b:	fwait
   14000f52c:	pushf  
   14000f52d:	popf   
   14000f52e:	sahf   
   14000f52f:	lahf   
   14000f530:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14000f539:	test   eax,0xadacabaa
   14000f53e:	scas   al,BYTE PTR es:[rdi]
   14000f53f:	scas   eax,DWORD PTR es:[rdi]
   14000f540:	mov    al,0xb1
   14000f542:	mov    dl,0xb3
   14000f544:	mov    ah,0xb5
   14000f546:	mov    dh,0xb7
   14000f548:	mov    eax,0xbcbbbab9
   14000f54d:	mov    ebp,0xc1c0bfbe
   14000f552:	ret    0xc4c3
   14000f555:	(bad)
   14000f558:	enter  0xcac9,0xcb
   14000f55c:	int3   
   14000f55d:	int    0xce
   14000f55f:	iret   
   14000f560:	rcl    cl,1
   14000f562:	rcl    bl,cl
   14000f564:	(bad)  
   14000f565:	(bad)  
   14000f566:	(bad)  
   14000f567:	xlat   BYTE PTR ds:[rbx]
   14000f568:	fcomp  st(1)
   14000f56a:	fcmovu st,st(3)
   14000f56c:	(bad)  
   14000f56e:	(bad)  
   14000f570:	loopne 0x14000f553
   14000f572:	loop   0x14000f557
   14000f574:	in     al,0xe5
   14000f576:	out    0xe7,al
   14000f578:	call   0x12cece066
   14000f57d:	in     eax,dx
   14000f57e:	out    dx,al
   14000f57f:	out    dx,eax
   14000f580:	lock icebp 
   14000f582:	repnz repz hlt 
   14000f585:	cmc    
   14000f586:	div    bh
   14000f588:	clc    
   14000f589:	stc    
   14000f58a:	cli    
   14000f58b:	sti    
   14000f58c:	cld    
   14000f58d:	std    
   14000f58e:	(bad)  
   14000f58f:	inc    DWORD PTR [rax-0x7b7c7d7f]
   14000f595:	test   DWORD PTR [rsi-0x75767779],eax
   14000f59b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   14000f5a2:	xchg   edx,eax
   14000f5a3:	xchg   ebx,eax
   14000f5a4:	xchg   esp,eax
   14000f5a5:	xchg   ebp,eax
   14000f5a6:	xchg   esi,eax
   14000f5a7:	xchg   edi,eax
   14000f5a8:	cwde   
   14000f5a9:	cdq    
   14000f5aa:	(bad)  
   14000f5ab:	fwait
   14000f5ac:	pushf  
   14000f5ad:	popf   
   14000f5ae:	sahf   
   14000f5af:	lahf   
   14000f5b0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14000f5b9:	test   eax,0xadacabaa
   14000f5be:	scas   al,BYTE PTR es:[rdi]
   14000f5bf:	scas   eax,DWORD PTR es:[rdi]
   14000f5c0:	mov    al,0xb1
   14000f5c2:	mov    dl,0xb3
   14000f5c4:	mov    ah,0xb5
   14000f5c6:	mov    dh,0xb7
   14000f5c8:	mov    eax,0xbcbbbab9
   14000f5cd:	mov    ebp,0xc1c0bfbe
   14000f5d2:	ret    0xc4c3
   14000f5d5:	(bad)
   14000f5d8:	enter  0xcac9,0xcb
   14000f5dc:	int3   
   14000f5dd:	int    0xce
   14000f5df:	iret   
   14000f5e0:	rcl    cl,1
   14000f5e2:	rcl    bl,cl
   14000f5e4:	(bad)  
   14000f5e5:	(bad)  
   14000f5e6:	(bad)  
   14000f5e7:	xlat   BYTE PTR ds:[rbx]
   14000f5e8:	fcomp  st(1)
   14000f5ea:	fcmovu st,st(3)
   14000f5ec:	(bad)  
   14000f5ee:	(bad)  
   14000f5f0:	loopne 0x14000f5d3
   14000f5f2:	loop   0x14000f5d7
   14000f5f4:	in     al,0xe5
   14000f5f6:	out    0xe7,al
   14000f5f8:	call   0x12cece0e6
   14000f5fd:	in     eax,dx
   14000f5fe:	out    dx,al
   14000f5ff:	out    dx,eax
   14000f600:	lock icebp 
   14000f602:	repnz repz hlt 
   14000f605:	cmc    
   14000f606:	div    bh
   14000f608:	clc    
   14000f609:	stc    
   14000f60a:	cli    
   14000f60b:	sti    
   14000f60c:	cld    
   14000f60d:	std    
   14000f60e:	(bad)  
   14000f60f:	inc    DWORD PTR [rax]
   14000f611:	add    DWORD PTR [rdx],eax
   14000f613:	add    eax,DWORD PTR [rax*1+0x9080706]
   14000f61a:	or     cl,BYTE PTR [rbx]
   14000f61c:	or     al,0xd
   14000f61e:	(bad)  
   14000f61f:	movups xmm2,XMMWORD PTR [rcx]
   14000f622:	adc    dl,BYTE PTR [rbx]
   14000f624:	adc    al,0x15
   14000f626:	(bad)  
   14000f627:	(bad)  
   14000f628:	sbb    BYTE PTR [rcx],bl
   14000f62a:	sbb    bl,BYTE PTR [rbx]
   14000f62c:	sbb    al,0x1d
   14000f62e:	(bad)  
   14000f62f:	(bad)  
   14000f630:	and    BYTE PTR [rcx],ah
   14000f632:	and    ah,BYTE PTR [rbx]
   14000f634:	and    al,0x25
   14000f636:	es (bad) 
   14000f638:	sub    BYTE PTR [rcx],ch
   14000f63a:	sub    ch,BYTE PTR [rbx]
   14000f63c:	sub    al,0x2d
   14000f63e:	cs (bad) 
   14000f640:	xor    BYTE PTR [rcx],dh
   14000f642:	xor    dh,BYTE PTR [rbx]
   14000f644:	xor    al,0x35
   14000f646:	ss (bad) 
   14000f648:	cmp    BYTE PTR [rcx],bh
   14000f64a:	cmp    bh,BYTE PTR [rbx]
   14000f64c:	cmp    al,0x3d
   14000f64e:	ds (bad) 
   14000f650:	rex
   14000f651:	rex.B
   14000f652:	rex.X
   14000f653:	rex.XB
   14000f654:	rex.R
   14000f655:	rex.RB
   14000f656:	rex.RX
   14000f657:	rex.RXB
   14000f658:	rex.W
   14000f659:	rex.WB
   14000f65a:	rex.WX
   14000f65b:	rex.WXB
   14000f65c:	rex.WR
   14000f65d:	rex.WRB
   14000f65e:	rex.WRX
   14000f65f:	rex.WRXB push r8
   14000f661:	push   rcx
   14000f662:	push   rdx
   14000f663:	push   rbx
   14000f664:	push   rsp
   14000f665:	push   rbp
   14000f666:	push   rsi
   14000f667:	push   rdi
   14000f668:	pop    rax
   14000f669:	pop    rcx
   14000f66a:	pop    rdx
   14000f66b:	pop    rbx
   14000f66c:	pop    rsp
   14000f66d:	pop    rbp
   14000f66e:	pop    rsi
   14000f66f:	pop    rdi
   14000f670:	(bad)  
   14000f671:	rex.B
   14000f672:	rex.X
   14000f673:	rex.XB
   14000f674:	rex.R
   14000f675:	rex.RB
   14000f676:	rex.RX
   14000f677:	rex.RXB
   14000f678:	rex.W
   14000f679:	rex.WB
   14000f67a:	rex.WX
   14000f67b:	rex.WXB
   14000f67c:	rex.WR
   14000f67d:	rex.WRB
   14000f67e:	rex.WRX
   14000f67f:	rex.WRXB push r8
   14000f681:	push   rcx
   14000f682:	push   rdx
   14000f683:	push   rbx
   14000f684:	push   rsp
   14000f685:	push   rbp
   14000f686:	push   rsi
   14000f687:	push   rdi
   14000f688:	pop    rax
   14000f689:	pop    rcx
   14000f68a:	pop    rdx
   14000f68b:	jnp    0x14000f709
   14000f68d:	jge    0x14000f70d
   14000f68f:	jg     0x14000f611
   14000f691:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
   14000f69b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   14000f6a2:	xchg   edx,eax
   14000f6a3:	xchg   ebx,eax
   14000f6a4:	xchg   esp,eax
   14000f6a5:	xchg   ebp,eax
   14000f6a6:	xchg   esi,eax
   14000f6a7:	xchg   edi,eax
   14000f6a8:	cwde   
   14000f6a9:	cdq    
   14000f6aa:	(bad)  
   14000f6ab:	fwait
   14000f6ac:	pushf  
   14000f6ad:	popf   
   14000f6ae:	sahf   
   14000f6af:	lahf   
   14000f6b0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14000f6b9:	test   eax,0xadacabaa
   14000f6be:	scas   al,BYTE PTR es:[rdi]
   14000f6bf:	scas   eax,DWORD PTR es:[rdi]
   14000f6c0:	mov    al,0xb1
   14000f6c2:	mov    dl,0xb3
   14000f6c4:	mov    ah,0xb5
   14000f6c6:	mov    dh,0xb7
   14000f6c8:	mov    eax,0xbcbbbab9
   14000f6cd:	mov    ebp,0xc1c0bfbe
   14000f6d2:	ret    0xc4c3
   14000f6d5:	(bad)
   14000f6d8:	enter  0xcac9,0xcb
   14000f6dc:	int3   
   14000f6dd:	int    0xce
   14000f6df:	iret   
   14000f6e0:	rcl    cl,1
   14000f6e2:	rcl    bl,cl
   14000f6e4:	(bad)  
   14000f6e5:	(bad)  
   14000f6e6:	(bad)  
   14000f6e7:	xlat   BYTE PTR ds:[rbx]
   14000f6e8:	fcomp  st(1)
   14000f6ea:	fcmovu st,st(3)
   14000f6ec:	(bad)  
   14000f6ee:	(bad)  
   14000f6f0:	loopne 0x14000f6d3
   14000f6f2:	loop   0x14000f6d7
   14000f6f4:	in     al,0xe5
   14000f6f6:	out    0xe7,al
   14000f6f8:	call   0x12cece1e6
   14000f6fd:	in     eax,dx
   14000f6fe:	out    dx,al
   14000f6ff:	out    dx,eax
   14000f700:	lock icebp 
   14000f702:	repnz repz hlt 
   14000f705:	cmc    
   14000f706:	div    bh
   14000f708:	clc    
   14000f709:	stc    
   14000f70a:	cli    
   14000f70b:	sti    
   14000f70c:	cld    
   14000f70d:	std    
   14000f70e:	(bad)  
   14000f70f:	inc    DWORD PTR [rip+0xbc00000]        # 0x14bc0f715
	...
   14000f71d:	add    BYTE PTR [rax],al
   14000f71f:	add    BYTE PTR [rip+0x4c00000],bl        # 0x144c0f725
	...
   14000f72d:	add    BYTE PTR [rax],al
   14000f72f:	add    BYTE PTR [rsi+0x4c00000],dl
	...
   14000f73d:	add    BYTE PTR [rax],al
   14000f73f:	add    BYTE PTR [rbp+0x8c00000],cl
	...
   14000f74d:	add    BYTE PTR [rax],al
   14000f74f:	add    BYTE PTR [rsi+0x8c00000],cl
	...
   14000f75d:	add    BYTE PTR [rax],al
   14000f75f:	add    BYTE PTR [rdi+0x8c00000],cl
	...
   14000f76d:	add    BYTE PTR [rax],al
   14000f76f:	add    BYTE PTR [rax+0x8c00000],dl
	...
   14000f77d:	add    BYTE PTR [rax],al
   14000f77f:	add    BYTE PTR [rcx+0x8c00000],dl
	...
   14000f78d:	add    BYTE PTR [rax],al
   14000f78f:	add    BYTE PTR [rdx+0x8c00000],dl
	...
   14000f79d:	add    BYTE PTR [rax],al
   14000f79f:	add    BYTE PTR [rbx+0x8c00000],dl
	...
   14000f7ad:	add    BYTE PTR [rax],al
   14000f7af:	add    BYTE PTR [rdx+rax*1+0x8c000],dh
	...
   14000f7be:	add    BYTE PTR [rax],al
   14000f7c0:	mov    ch,0x2
   14000f7c2:	add    al,al
   14000f7c4:	or     BYTE PTR [rax],al
	...
   14000f7ce:	add    BYTE PTR [rax],al
   14000f7d0:	add    eax,DWORD PTR [rax]
   14000f7d2:	add    BYTE PTR [rax],al
   14000f7d4:	or     DWORD PTR [rax],eax
   14000f7d6:	add    BYTE PTR [rax],al
   14000f7d8:	rol    BYTE PTR [rax],0x0
   14000f7db:	add    BYTE PTR [rax+rax*1],cl
   14000f7de:	add    BYTE PTR [rax],al
   14000f7e0:	rex.RXB
   14000f7e1:	gs je  0x14000f834
   14000f7e4:	jb     0x14000f855
   14000f7e6:	movsxd esp,DWORD PTR [rbp+0x73]
   14000f7e9:	jae    0x14000f842
   14000f7eb:	imul   ebp,DWORD PTR [rsi+0x64],0x7453776f
   14000f7f2:	(bad)  
   14000f7f3:	je     0x14000f85e
   14000f7f5:	outs   dx,DWORD PTR ds:[rsi]
   14000f7f6:	outs   dx,BYTE PTR ds:[rsi]
   14000f7f7:	add    BYTE PTR [rdi+0x65],al
   14000f7fa:	je     0x14000f851
   14000f7fc:	jae    0x14000f863
   14000f7fe:	jb     0x14000f84f
   14000f800:	(bad)  
   14000f801:	push   0x65
   14000f803:	movsxd esi,DWORD PTR [rcx+rcx*2+0x6e]
   14000f807:	outs   dx,WORD PTR ds:[rsi]
   14000f809:	jb     0x14000f878
   14000f80b:	(bad)  
   14000f80c:	je     0x14000f877
   14000f80e:	outs   dx,DWORD PTR ds:[rsi]
   14000f80f:	outs   dx,BYTE PTR ds:[rsi]
   14000f810:	push   rdi
   14000f811:	add    BYTE PTR [rax],al
   14000f813:	add    BYTE PTR [rax],al
   14000f815:	add    BYTE PTR [rax],al
   14000f817:	add    BYTE PTR [rdi+0x65],al
   14000f81a:	je     0x14000f868
   14000f81c:	(bad)  
   14000f81d:	jae    0x14000f893
   14000f81f:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000f824:	gs push rax
   14000f826:	outs   dx,DWORD PTR ds:[rsi]
   14000f827:	jo     0x14000f89e
   14000f829:	jo     0x14000f82b
   14000f82b:	add    BYTE PTR [rax],al
   14000f82d:	add    BYTE PTR [rax],al
   14000f82f:	add    BYTE PTR [rdi+0x65],al
   14000f832:	je     0x14000f875
   14000f834:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14000f838:	gs push rdi
   14000f83a:	imul   ebp,DWORD PTR [rsi+0x64],0x4d00776f
   14000f841:	gs jae 0x14000f8b7
   14000f844:	(bad)  
   14000f845:	rex.X outs dx,DWORD PTR gs:[esi]
   14000f849:	js     0x14000f8a2
   14000f84b:	add    BYTE PTR [rax],al
   14000f84d:	add    BYTE PTR [rax],al
   14000f84f:	add    BYTE PTR [rbp+0x0],dl
   14000f852:	push   rbx
   14000f853:	add    BYTE PTR [rbp+0x0],al
   14000f856:	push   rdx
   14000f857:	add    BYTE PTR [rbx],dh
   14000f859:	add    BYTE PTR [rdx],dh
   14000f85b:	add    BYTE PTR [rsi],ch
   14000f85d:	add    BYTE PTR [rax+rax*1+0x4c],al
   14000f861:	add    BYTE PTR [rax+rax*1+0x0],cl
	...
   14000f86d:	add    BYTE PTR [rax],al
   14000f86f:	add    BYTE PTR [rsi],al
   14000f871:	add    BYTE PTR [rax-0x7f7e7f7a],0x0
   14000f878:	add    BYTE PTR [rax],dl
   14000f87a:	add    eax,DWORD PTR [rsi-0x7f7d7980]
   14000f880:	adc    al,0x5
   14000f882:	add    eax,0x85454545
   14000f887:	test   DWORD PTR [rbp+0x30000005],eax
   14000f88d:	xor    BYTE PTR [rax+0x888050],al
   14000f893:	or     BYTE PTR [rax],al
   14000f895:	sub    BYTE PTR [rdi],ah
   14000f897:	cmp    BYTE PTR [rax+0x57],dl
   14000f89a:	add    BYTE PTR [rax],0x7
   14000f89d:	add    BYTE PTR [rdi],dh
   14000f89f:	xor    BYTE PTR [rax],dh
   14000f8a1:	push   rax
   14000f8a2:	push   rax
   14000f8a3:	mov    BYTE PTR [rax],al
   14000f8a5:	add    BYTE PTR [rax],al
   14000f8a7:	and    BYTE PTR [rax],ch
   14000f8a9:	or     BYTE PTR [rax+0x8080],0x0
   14000f8b0:	(bad)  
   14000f8b1:	push   0x68686860
   14000f8b6:	or     BYTE PTR [rax],cl
   14000f8b8:	(bad)  
   14000f8b9:	js     0x14000f92b
   14000f8bb:	jo     0x14000f934
   14000f8bd:	jo     0x14000f92f
   14000f8bf:	or     BYTE PTR [rax],cl
   14000f8c1:	add    BYTE PTR [rax],al
   14000f8c3:	or     BYTE PTR [rax],al
   14000f8c5:	or     BYTE PTR [rax],al
   14000f8c7:	(bad)  
   14000f8c8:	or     BYTE PTR [rax],al
   14000f8ca:	add    BYTE PTR [rax],al
   14000f8cc:	add    BYTE PTR [rax],al
   14000f8ce:	add    BYTE PTR [rax],al
   14000f8d0:	rex.W add BYTE PTR [rax+0x0],cl
   14000f8d4:	cmp    al,BYTE PTR [rax]
   14000f8d6:	ins    DWORD PTR es:[rdi],dx
   14000f8d7:	add    BYTE PTR [rbp+0x0],ch
   14000f8da:	cmp    al,BYTE PTR [rax]
   14000f8dc:	jae    0x14000f8de
   14000f8de:	jae    0x14000f8e0
	...
   14000f8e8:	add    BYTE PTR fs:[rax+rax*1+0x64],ah
   14000f8ed:	add    BYTE PTR [rax+rax*1+0x2c],ah
   14000f8f1:	add    BYTE PTR [rax],ah
   14000f8f3:	add    BYTE PTR [rbp+0x0],cl
   14000f8f6:	rex.WRB add BYTE PTR [r13+0x0],r9b
   14000f8fa:	rex.WRB add BYTE PTR [r8],r12b
   14000f8fd:	add    BYTE PTR [rax+rax*1+0x64],ah
   14000f901:	add    BYTE PTR [rax+rax*1],ch
   14000f904:	and    BYTE PTR [rax],al
   14000f906:	jns    0x14000f908
   14000f908:	jns    0x14000f90a
   14000f90a:	jns    0x14000f90c
   14000f90c:	jns    0x14000f90e
   14000f90e:	add    BYTE PTR [rax],al
   14000f910:	rex.WRB add BYTE PTR [r13+0x0],r9b
   14000f914:	(bad)  
   14000f915:	add    BYTE PTR [rax+rax*1+0x64],ah
   14000f919:	add    BYTE PTR [rdi],ch
   14000f91b:	add    BYTE PTR [rcx+0x0],bh
   14000f91e:	jns    0x14000f920
   14000f920:	add    BYTE PTR [rax],al
   14000f922:	add    BYTE PTR [rax],al
   14000f924:	push   rax
   14000f925:	add    BYTE PTR [rbp+0x0],cl
   14000f928:	add    BYTE PTR [rax],al
   14000f92a:	add    BYTE PTR [rax],al
   14000f92c:	add    BYTE PTR [r13+0x0],cl
	...
   14000f938:	add    BYTE PTR [rbp+0x0],r12b
   14000f93c:	movsxd eax,DWORD PTR [rax]
   14000f93e:	add    BYTE PTR gs:[rbp+0x0],ch
   14000f942:	(bad)  
   14000f943:	add    BYTE PTR [rbp+0x0],ah
   14000f946:	jb     0x14000f948
	...
   14000f950:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14000f954:	jbe    0x14000f956
   14000f956:	add    BYTE PTR gs:[rbp+0x0],ch
   14000f95a:	(bad)  
   14000f95b:	add    BYTE PTR [rbp+0x0],ah
   14000f95e:	jb     0x14000f960
	...
   14000f968:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14000f96c:	je     0x14000f96e
   14000f96e:	outs   dx,DWORD PTR ds:[rsi]
   14000f96f:	add    BYTE PTR [rdx+0x0],ah
   14000f972:	add    BYTE PTR gs:[rdx+0x0],dh
   14000f976:	add    BYTE PTR [rax],al
   14000f978:	push   rbx
   14000f979:	add    BYTE PTR [rbp+0x0],ah
   14000f97c:	jo     0x14000f97e
   14000f97e:	je     0x14000f980
   14000f980:	add    BYTE PTR gs:[rbp+0x0],ch
   14000f984:	(bad)  
   14000f985:	add    BYTE PTR [rbp+0x0],ah
   14000f988:	jb     0x14000f98a
   14000f98a:	add    BYTE PTR [rax],al
   14000f98c:	add    BYTE PTR [rax],al
   14000f98e:	add    BYTE PTR [rax],al
   14000f990:	add    BYTE PTR [r13+0x0],sil
   14000f994:	add    BYTE PTR [ebp+0x0],dh
   14000f998:	jae    0x14000f99a
   14000f99a:	je     0x14000f99c
   14000f99c:	add    BYTE PTR [rax],al
   14000f99e:	add    BYTE PTR [rax],al
   14000f9a0:	rex.WX add BYTE PTR [rbp+0x0],sil
   14000f9a4:	ins    BYTE PTR es:[rdi],dx
   14000f9a5:	add    BYTE PTR [rcx+0x0],bh
	...
   14000f9b0:	rex.WX add BYTE PTR [rbp+0x0],sil
   14000f9b4:	outs   dx,BYTE PTR ds:[rsi]
   14000f9b5:	add    BYTE PTR [rbp+0x0],ah
	...
   14000f9c0:	add    BYTE PTR [r8+0x0],sil
   14000f9c4:	jb     0x14000f9c6
   14000f9c6:	imul   eax,DWORD PTR [rax],0x6c
   14000f9cc:	add    BYTE PTR [rax],al
   14000f9ce:	add    BYTE PTR [rax],al
   14000f9d0:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000f9d4:	jb     0x14000f9d6
   14000f9d6:	movsxd eax,DWORD PTR [rax]
   14000f9d8:	push   0x0
   14000f9dd:	add    BYTE PTR [rax],al
   14000f9df:	add    BYTE PTR [rsi+0x0],al
   14000f9e2:	add    BYTE PTR gs:[rdx+0x0],ah
   14000f9e6:	jb     0x14000f9e8
   14000f9e8:	jne    0x14000f9ea
   14000f9ea:	(bad)  
   14000f9eb:	add    BYTE PTR [rdx+0x0],dh
   14000f9ee:	jns    0x14000f9f0
	...
   14000f9f8:	rex.WX add BYTE PTR [rcx+0x0],spl
   14000f9fc:	outs   dx,BYTE PTR ds:[rsi]
   14000f9fd:	add    BYTE PTR [rbp+0x0],dh
   14000fa00:	(bad)  
   14000fa01:	add    BYTE PTR [rdx+0x0],dh
   14000fa04:	jns    0x14000fa06
   14000fa06:	add    BYTE PTR [rax],al
   14000fa08:	add    BYTE PTR [rbp+0x0],r12b
   14000fa0c:	movsxd eax,DWORD PTR [rax]
   14000fa0e:	add    BYTE PTR [rax],al
   14000fa10:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14000fa14:	jbe    0x14000fa16
   14000fa16:	add    BYTE PTR [rax],al
   14000fa18:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14000fa1c:	je     0x14000fa1e
   14000fa1e:	add    BYTE PTR [rax],al
   14000fa20:	push   rbx
   14000fa21:	add    BYTE PTR [rbp+0x0],ah
   14000fa24:	jo     0x14000fa26
   14000fa26:	add    BYTE PTR [rax],al
   14000fa28:	add    BYTE PTR [r13+0x0],sil
   14000fa2c:	add    BYTE PTR [eax],al
   14000fa2f:	add    BYTE PTR [rdx+0x0],cl
   14000fa32:	jne    0x14000fa34
   14000fa34:	ins    BYTE PTR es:[rdi],dx
   14000fa35:	add    BYTE PTR [rax],al
   14000fa37:	add    BYTE PTR [rdx+0x0],cl
   14000fa3a:	jne    0x14000fa3c
   14000fa3c:	outs   dx,BYTE PTR ds:[rsi]
   14000fa3d:	add    BYTE PTR [rax],al
   14000fa3f:	add    BYTE PTR [rbp+0x0],cl
   14000fa42:	(bad)  
   14000fa43:	add    BYTE PTR [rcx+0x0],bh
   14000fa46:	add    BYTE PTR [rax],al
   14000fa48:	add    BYTE PTR [r8+0x0],sil
   14000fa4c:	jb     0x14000fa4e
   14000fa4e:	add    BYTE PTR [rax],al
   14000fa50:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000fa54:	jb     0x14000fa56
   14000fa56:	add    BYTE PTR [rax],al
   14000fa58:	rex.RX add BYTE PTR [rbp+0x0],r12b
   14000fa5c:	(bad)  
   14000fa5d:	add    BYTE PTR [rax],al
   14000fa5f:	add    BYTE PTR [rdx+0x0],cl
   14000fa62:	(bad)  
   14000fa63:	add    BYTE PTR [rsi+0x0],ch
   14000fa66:	add    BYTE PTR [rax],al
   14000fa68:	push   rbx
   14000fa69:	add    BYTE PTR [rcx+0x0],ah
   14000fa6c:	je     0x14000fa6e
   14000fa6e:	jne    0x14000fa70
   14000fa70:	jb     0x14000fa72
   14000fa72:	add    BYTE PTR fs:[rcx+0x0],ah
   14000fa76:	jns    0x14000fa78
	...
   14000fa80:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14000fa84:	imul   eax,DWORD PTR [rax],0x610064
   14000fa8a:	jns    0x14000fa8c
   14000fa8c:	add    BYTE PTR [rax],al
   14000fa8e:	add    BYTE PTR [rax],al
   14000fa90:	push   rsp
   14000fa91:	add    BYTE PTR [rax+0x0],ch
   14000fa94:	jne    0x14000fa96
   14000fa96:	jb     0x14000fa98
   14000fa98:	jae    0x14000fa9a
   14000fa9a:	add    BYTE PTR fs:[rcx+0x0],ah
   14000fa9e:	jns    0x14000faa0
	...
   14000faa8:	push   rdi
   14000faa9:	add    BYTE PTR [rbp+0x0],ah
   14000faac:	add    BYTE PTR fs:[rsi+0x0],ch
   14000fab0:	add    BYTE PTR gs:[rbx+0x0],dh
   14000fab4:	add    BYTE PTR fs:[rcx+0x0],ah
   14000fab8:	jns    0x14000faba
   14000faba:	add    BYTE PTR [rax],al
   14000fabc:	add    BYTE PTR [rax],al
   14000fabe:	add    BYTE PTR [rax],al
   14000fac0:	push   rsp
   14000fac1:	add    BYTE PTR [rbp+0x0],dh
   14000fac4:	add    BYTE PTR gs:[rbx+0x0],dh
   14000fac8:	add    BYTE PTR fs:[rcx+0x0],ah
   14000facc:	jns    0x14000face
   14000face:	add    BYTE PTR [rax],al
   14000fad0:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14000fad4:	outs   dx,BYTE PTR ds:[rsi]
   14000fad5:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000fad9:	add    BYTE PTR [rcx+0x0],bh
   14000fadc:	add    BYTE PTR [rax],al
   14000fade:	add    BYTE PTR [rax],al
   14000fae0:	push   rbx
   14000fae1:	add    BYTE PTR [rbp+0x0],dh
   14000fae4:	outs   dx,BYTE PTR ds:[rsi]
   14000fae5:	add    BYTE PTR [rax+rax*1+0x61],ah
   14000fae9:	add    BYTE PTR [rcx+0x0],bh
   14000faec:	add    BYTE PTR [rax],al
   14000faee:	add    BYTE PTR [rax],al
   14000faf0:	push   rbx
   14000faf1:	add    BYTE PTR [rcx+0x0],ah
   14000faf4:	je     0x14000faf6
   14000faf6:	add    BYTE PTR [rax],al
   14000faf8:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14000fafc:	imul   eax,DWORD PTR [rax],0x540000
   14000fb02:	push   0x7500
   14000fb07:	add    BYTE PTR [rdi+0x0],dl
   14000fb0a:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   14000fb0f:	add    BYTE PTR [rax+rax*1+0x75],dl
   14000fb13:	add    BYTE PTR [rbp+0x0],ah
   14000fb16:	add    BYTE PTR [rax],al
   14000fb18:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14000fb1c:	outs   dx,BYTE PTR ds:[rsi]
   14000fb1d:	add    BYTE PTR [rax],al
   14000fb1f:	add    BYTE PTR [rbx+0x0],dl
   14000fb22:	jne    0x14000fb24
   14000fb24:	outs   dx,BYTE PTR ds:[rsi]
   14000fb25:	add    BYTE PTR [rax],al
   14000fb27:	add    BYTE PTR [rax+0x48],cl
   14000fb2a:	cmp    ch,BYTE PTR [rbp+0x6d]
   14000fb2d:	cmp    dh,BYTE PTR [rbx+0x73]
	...
   14000fb38:	fs fs fs fs sub al,0x20
   14000fb3e:	rex.WRB
   14000fb3f:	rex.WRB
   14000fb40:	rex.WRB
   14000fb41:	rex.WRB and BYTE PTR [r12+riz*2+0x2c],r12b
   14000fb46:	and    BYTE PTR [rcx+0x79],bh
   14000fb49:	jns    0x14000fbc4
   14000fb4b:	add    BYTE PTR [rax],al
   14000fb4d:	add    BYTE PTR [rax],al
   14000fb4f:	add    BYTE PTR [rbp+0x4d],cl
   14000fb52:	(bad)  
   14000fb53:	fs fs (bad) 
   14000fb56:	jns    0x14000fbd1
   14000fb58:	add    BYTE PTR [rax],al
   14000fb5a:	add    BYTE PTR [rax],al
   14000fb5c:	push   rax
   14000fb5d:	rex.WRB add BYTE PTR [r8],r8b
   14000fb60:	rex.B
   14000fb61:	rex.WRB add BYTE PTR [r8],r8b
   14000fb64:	add    BYTE PTR [rax],al
   14000fb66:	add    BYTE PTR [rax],al
   14000fb68:	rex.R
   14000fb69:	movsxd esp,DWORD PTR gs:[rbp+0x6d]
   14000fb6d:	(bad)  
   14000fb6e:	gs jb  0x14000fb71
   14000fb71:	add    BYTE PTR [rax],al
   14000fb73:	add    BYTE PTR [rax],al
   14000fb75:	add    BYTE PTR [rax],al
   14000fb77:	add    BYTE PTR [rsi+0x6f],cl
   14000fb7a:	jbe    0x14000fbe1
   14000fb7c:	ins    DWORD PTR es:[rdi],dx
   14000fb7d:	(bad)  
   14000fb7e:	gs jb  0x14000fb81
   14000fb81:	add    BYTE PTR [rax],al
   14000fb83:	add    BYTE PTR [rax],al
   14000fb85:	add    BYTE PTR [rax],al
   14000fb87:	add    BYTE PTR [rdi+0x63],cl
   14000fb8a:	je     0x14000fbfb
   14000fb8c:	(bad)  
   14000fb8d:	gs jb  0x14000fb90
   14000fb90:	push   rbx
   14000fb91:	gs jo  0x14000fc08
   14000fb94:	gs ins DWORD PTR es:[rdi],dx
   14000fb96:	(bad)  
   14000fb97:	gs jb  0x14000fb9a
   14000fb9a:	add    BYTE PTR [rax],al
   14000fb9c:	rex.B jne 0x14000fc06
   14000fb9f:	jne    0x14000fc14
   14000fba1:	je     0x14000fba3
   14000fba3:	add    BYTE PTR [rdx+0x75],cl
   14000fba6:	ins    BYTE PTR es:[rdi],dx
   14000fba7:	jns    0x14000fba9
   14000fba9:	add    BYTE PTR [rax],al
   14000fbab:	add    BYTE PTR [rdx+0x75],cl
   14000fbae:	outs   dx,BYTE PTR ds:[rsi]
   14000fbaf:	add    BYTE PTR gs:[rax],al
   14000fbb2:	add    BYTE PTR [rax],al
   14000fbb4:	rex.B jo 0x14000fc29
   14000fbb7:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x72614d00
   14000fbbf:	movsxd ebp,DWORD PTR [rax+0x0]
   14000fbc2:	add    BYTE PTR [rax],al
   14000fbc4:	add    BYTE PTR [rax],al
   14000fbc6:	add    BYTE PTR [rax],al
   14000fbc8:	rex.RX
   14000fbc9:	(bad)
   14000fbcf:	jns    0x14000fbd1
   14000fbd1:	add    BYTE PTR [rax],al
   14000fbd3:	add    BYTE PTR [rax],al
   14000fbd5:	add    BYTE PTR [rax],al
   14000fbd7:	add    BYTE PTR [rdx+0x61],cl
   14000fbda:	outs   dx,BYTE PTR ds:[rsi]
   14000fbdb:	jne    0x14000fc3e
   14000fbdd:	jb     0x14000fc58
   14000fbdf:	add    BYTE PTR [rbp+riz*2+0x63],al
   14000fbe3:	add    BYTE PTR [rsi+0x6f],cl
   14000fbe6:	jbe    0x14000fbe8
   14000fbe8:	movsxd r14,DWORD PTR [r8+r8*1+0x53]
   14000fbed:	gs jo  0x14000fbf0
   14000fbf0:	rex.B jne 0x14000fc5a
   14000fbf3:	add    BYTE PTR [rdx+0x75],cl
   14000fbf6:	ins    BYTE PTR es:[rdi],dx
   14000fbf7:	add    BYTE PTR [rdx+0x75],cl
   14000fbfa:	outs   dx,BYTE PTR ds:[rsi]
   14000fbfb:	add    BYTE PTR [rbp+0x61],cl
   14000fbfe:	jns    0x14000fc00
   14000fc00:	rex.B jo 0x14000fc75
   14000fc03:	add    BYTE PTR [rbp+0x61],cl
   14000fc06:	jb     0x14000fc08
   14000fc08:	rex.RX
   14000fc09:	gs (bad) 
   14000fc0b:	add    BYTE PTR [rdx+0x61],cl
   14000fc0e:	outs   dx,BYTE PTR ds:[rsi]
   14000fc0f:	add    BYTE PTR [rbx+0x61],dl
   14000fc12:	je     0x14000fc89
   14000fc14:	jb     0x14000fc7a
   14000fc16:	(bad)  
   14000fc17:	jns    0x14000fc19
   14000fc19:	add    BYTE PTR [rax],al
   14000fc1b:	add    BYTE PTR [rsi+0x72],al
   14000fc1e:	imul   esp,DWORD PTR [rcx+riz*2+0x79],0x0
   14000fc26:	add    BYTE PTR [rax],al
   14000fc28:	push   rsp
   14000fc29:	push   0x64737275
   14000fc2e:	(bad)  
   14000fc2f:	jns    0x14000fc31
   14000fc31:	add    BYTE PTR [rax],al
   14000fc33:	add    BYTE PTR [rax],al
   14000fc35:	add    BYTE PTR [rax],al
   14000fc37:	add    BYTE PTR [rdi+0x65],dl
   14000fc3a:	outs   dx,BYTE PTR fs:[rsi]
   14000fc3c:	gs jae 0x14000fca3
   14000fc3f:	(bad)  
   14000fc40:	jns    0x14000fc42
   14000fc42:	add    BYTE PTR [rax],al
   14000fc44:	add    BYTE PTR [rax],al
   14000fc46:	add    BYTE PTR [rax],al
   14000fc48:	push   rsp
   14000fc49:	jne    0x14000fcb0
   14000fc4b:	jae    0x14000fcb1
   14000fc4d:	(bad)  
   14000fc4e:	jns    0x14000fc50
   14000fc50:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000fc52:	outs   dx,BYTE PTR ds:[rsi]
   14000fc53:	fs (bad) 
   14000fc55:	jns    0x14000fc57
   14000fc57:	add    BYTE PTR [rbx+0x75],dl
   14000fc5a:	outs   dx,BYTE PTR ds:[rsi]
   14000fc5b:	fs (bad) 
   14000fc5d:	jns    0x14000fc5f
   14000fc5f:	add    BYTE PTR [rbx+0x61],dl
   14000fc62:	je     0x14000fc64
   14000fc64:	rex.RX jb 0x14000fcd0
   14000fc67:	add    BYTE PTR [rax+rbp*2+0x75],dl
   14000fc6b:	add    BYTE PTR [rdi+0x65],dl
   14000fc6e:	add    BYTE PTR fs:[rbp+rsi*2+0x65],dl
   14000fc73:	add    BYTE PTR [rbp+0x6f],cl
   14000fc76:	outs   dx,BYTE PTR ds:[rsi]
   14000fc77:	add    BYTE PTR [rbx+0x75],dl
   14000fc7a:	outs   dx,BYTE PTR ds:[rsi]
   14000fc7b:	add    BYTE PTR [rax],al
   14000fc7d:	add    BYTE PTR [rax],al
   14000fc7f:	add    BYTE PTR [rcx],al
   14000fc81:	add    al,BYTE PTR [rbx]
   14000fc83:	add    al,0x5
   14000fc85:	(bad)  
   14000fc86:	(bad)  
   14000fc87:	or     BYTE PTR [rcx],cl
   14000fc89:	or     cl,BYTE PTR [rbx]
   14000fc8b:	or     al,0xd
   14000fc8d:	(bad)  
   14000fc8e:	movups xmm2,XMMWORD PTR [rcx]
   14000fc91:	adc    dl,BYTE PTR [rbx]
   14000fc93:	adc    al,0x15
   14000fc95:	(bad)  
   14000fc96:	(bad)  
   14000fc97:	sbb    BYTE PTR [rcx],bl
   14000fc99:	sbb    bl,BYTE PTR [rbx]
   14000fc9b:	sbb    al,0x1d
   14000fc9d:	(bad)  
   14000fc9e:	(bad)  
   14000fc9f:	and    BYTE PTR [rcx],ah
   14000fca1:	and    ah,BYTE PTR [rbx]
   14000fca3:	and    al,0x25
   14000fca5:	es (bad) 
   14000fca7:	sub    BYTE PTR [rcx],ch
   14000fca9:	sub    ch,BYTE PTR [rbx]
   14000fcab:	sub    al,0x2d
   14000fcad:	cs (bad) 
   14000fcaf:	xor    BYTE PTR [rcx],dh
   14000fcb1:	xor    dh,BYTE PTR [rbx]
   14000fcb3:	xor    al,0x35
   14000fcb5:	ss (bad) 
   14000fcb7:	cmp    BYTE PTR [rcx],bh
   14000fcb9:	cmp    bh,BYTE PTR [rbx]
   14000fcbb:	cmp    al,0x3d
   14000fcbd:	ds (bad) 
   14000fcbf:	rex
   14000fcc0:	rex.B
   14000fcc1:	rex.X
   14000fcc2:	rex.XB
   14000fcc3:	rex.R
   14000fcc4:	rex.RB
   14000fcc5:	rex.RX
   14000fcc6:	rex.RXB
   14000fcc7:	rex.W
   14000fcc8:	rex.WB
   14000fcc9:	rex.WX
   14000fcca:	rex.WXB
   14000fccb:	rex.WR
   14000fccc:	rex.WRB
   14000fccd:	rex.WRX
   14000fcce:	rex.WRXB push r8
   14000fcd0:	push   rcx
   14000fcd1:	push   rdx
   14000fcd2:	push   rbx
   14000fcd3:	push   rsp
   14000fcd4:	push   rbp
   14000fcd5:	push   rsi
   14000fcd6:	push   rdi
   14000fcd7:	pop    rax
   14000fcd8:	pop    rcx
   14000fcd9:	pop    rdx
   14000fcda:	pop    rbx
   14000fcdb:	pop    rsp
   14000fcdc:	pop    rbp
   14000fcdd:	pop    rsi
   14000fcde:	pop    rdi
   14000fcdf:	(bad)  
   14000fce0:	(bad)  
   14000fce1:	(bad)
   14000fce6:	addr32 push 0x6c6b6a69
   14000fcec:	ins    DWORD PTR es:[rdi],dx
   14000fced:	outs   dx,BYTE PTR ds:[rsi]
   14000fcee:	outs   dx,DWORD PTR ds:[rsi]
   14000fcef:	jo     0x14000fd62
   14000fcf1:	jb     0x14000fd66
   14000fcf3:	je     0x14000fd6a
   14000fcf5:	jbe    0x14000fd6e
   14000fcf7:	js     0x14000fd72
   14000fcf9:	jp     0x14000fd76
   14000fcfb:	jl     0x14000fd7a
   14000fcfd:	jle    0x14000fd7e
   14000fcff:	add    BYTE PTR [rbx+0x0],al
   14000fd02:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000fd06:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   14000fd0a:	push   rsp
   14000fd0b:	add    BYTE PTR [rax+rax*1],ah
   14000fd0e:	add    BYTE PTR [rax],al
   14000fd10:	rex.RX (bad) 
   14000fd12:	je     0x14000fd75
   14000fd14:	ins    BYTE PTR es:[rdi],dx
   14000fd15:	and    BYTE PTR [rbp+0x72],ah
   14000fd18:	jb     0x14000fd89
   14000fd1a:	jb     0x14000fd3c
   14000fd1c:	imul   ebp,DWORD PTR [rsi+0x20],0x6e75616c
   14000fd23:	movsxd ebp,DWORD PTR [rax+0x65]
   14000fd26:	jb     0x14000fd62
   14000fd28:	and    BYTE PTR [rip+0xa73],ah        # 0x1400107a1
   14000fd2e:	add    BYTE PTR [rax],al
   14000fd30:	jb     0x14000fd32
   14000fd32:	(bad)  
   14000fd33:	add    BYTE PTR [rax],al
   14000fd35:	add    BYTE PTR [rax],al
   14000fd37:	add    BYTE PTR [rsi+0x61],al
   14000fd3a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000fd42:	outs   dx,DWORD PTR ds:[rsi]
   14000fd43:	jo     0x14000fdaa
   14000fd45:	outs   dx,BYTE PTR ds:[rsi]
   14000fd46:	and    BYTE PTR [rbp+0x78],ah
   14000fd49:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   14000fd4d:	(bad)  
   14000fd4e:	(bad)  
   14000fd4f:	ins    BYTE PTR es:[rdi],dx
   14000fd50:	add    BYTE PTR gs:[rax],al
   14000fd53:	add    BYTE PTR [rax],al
   14000fd55:	add    BYTE PTR [rax],al
   14000fd57:	add    BYTE PTR [rbp+0x6e],dl
   14000fd5a:	(bad)  
   14000fd5b:	(bad)  
   14000fd5c:	ins    BYTE PTR es:[rdi],dx
   14000fd5d:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14000fd62:	imul   bp,WORD PTR [rsi+0x64],0x6120
   14000fd68:	outs   dx,BYTE PTR ds:[rsi]
   14000fd69:	and    BYTE PTR [rcx+0x70],ah
   14000fd6c:	jo     0x14000fdd3
   14000fd6e:	outs   dx,BYTE PTR ds:[rsi]
   14000fd6f:	fs gs and BYTE PTR fs:[rcx+0x72],ah
   14000fd75:	movsxd ebp,DWORD PTR [rax+0x69]
   14000fd78:	jbe    0x14000fddf
   14000fd7a:	add    BYTE PTR cs:[rax],al
   14000fd7d:	add    BYTE PTR [rax],al
   14000fd7f:	add    BYTE PTR [rbp+0x6e],dl
   14000fd82:	(bad)  
   14000fd83:	(bad)  
   14000fd84:	ins    BYTE PTR es:[rdi],dx
   14000fd85:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14000fd8a:	jb     0x14000fdf1
   14000fd8c:	(bad)  
   14000fd8d:	and    BYTE PTR fs:[rsi+0x72],ah
   14000fd91:	outs   dx,DWORD PTR ds:[rsi]
   14000fd92:	ins    DWORD PTR es:[rdi],dx
   14000fd93:	and    BYTE PTR [rsi+0x69],ah
   14000fd96:	ins    BYTE PTR es:[rdi],dx
   14000fd97:	add    BYTE PTR gs:[rax],al
   14000fd9a:	add    BYTE PTR [rax],al
   14000fd9c:	and    esp,DWORD PTR [rcx]
	...
   14000fda6:	add    BYTE PTR [rax],al
   14000fda8:	rex.WX outs dx,DWORD PTR ds:[rsi]
   14000fdaa:	(bad)  
   14000fdab:	and    BYTE PTR [rcx+0x6e],ch
   14000fdae:	outs   dx,WORD PTR ds:[rsi]
   14000fdb0:	jb     0x14000fe1f
   14000fdb2:	(bad)  
   14000fdb3:	je     0x14000fe1e
   14000fdb5:	outs   dx,DWORD PTR ds:[rsi]
   14000fdb6:	outs   dx,BYTE PTR ds:[rsi]
   14000fdb7:	and    BYTE PTR [rcx+0x75],dh
   14000fdba:	gs jb  0x14000fe36
   14000fdbd:	imul   ebp,DWORD PTR [rsi+0x67],0x69616620
   14000fdc4:	ins    BYTE PTR es:[rdi],dx
   14000fdc5:	gs add BYTE PTR fs:[rdx+0x6f],cl
   14000fdca:	(bad)  
   14000fdcb:	and    BYTE PTR [rcx+0x6e],ch
   14000fdce:	outs   dx,WORD PTR ds:[rsi]
   14000fdd0:	jb     0x14000fe3f
   14000fdd2:	(bad)  
   14000fdd3:	je     0x14000fe3e
   14000fdd5:	outs   dx,DWORD PTR ds:[rsi]
   14000fdd6:	outs   dx,BYTE PTR ds:[rsi]
   14000fdd7:	and    BYTE PTR [rbx+0x65],dh
   14000fdda:	je     0x14000fe50
   14000fddc:	imul   ebp,DWORD PTR [rsi+0x67],0x69616620
   14000fde3:	ins    BYTE PTR es:[rdi],dx
   14000fde4:	gs add BYTE PTR fs:[rax],al
   14000fde8:	jae    0x14000fe5e
   14000fdea:	imul   ebp,DWORD PTR fs:[rsi+0x20],0x6c707564
   14000fdf2:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000fdf9:	and    BYTE PTR [rsi+0x61],ah
   14000fdfc:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   14000fe04:	add    BYTE PTR [rax],al
   14000fe06:	add    BYTE PTR [rax],al
   14000fe08:	jae    0x14000fe7e
   14000fe0a:	outs   dx,DWORD PTR fs:[rsi]
   14000fe0c:	jne    0x14000fe82
   14000fe0e:	and    BYTE PTR [rbp+rsi*2+0x70],ah
   14000fe12:	ins    BYTE PTR es:[rdi],dx
   14000fe13:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000fe1a:	and    BYTE PTR [rsi+0x61],ah
   14000fe1d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   14000fe25:	add    BYTE PTR [rax],al
   14000fe27:	add    BYTE PTR [rbx+0x74],dh
   14000fe2a:	fs gs jb 0x14000fea0
   14000fe2e:	and    BYTE PTR [rbp+rsi*2+0x70],ah
   14000fe32:	ins    BYTE PTR es:[rdi],dx
   14000fe33:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000fe3a:	and    BYTE PTR [rsi+0x61],ah
   14000fe3d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   14000fe45:	add    BYTE PTR [rax],al
   14000fe47:	add    BYTE PTR [rbp+0x6e],dl
   14000fe4a:	(bad)  
   14000fe4b:	(bad)  
   14000fe4c:	ins    BYTE PTR es:[rdi],dx
   14000fe4d:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14000fe52:	movsxd esi,DWORD PTR [rdx+0x65]
   14000fe55:	(bad)  
   14000fe56:	je     0x14000febd
   14000fe58:	and    BYTE PTR [rax+0x72],dh
   14000fe5b:	outs   dx,DWORD PTR ds:[rsi]
   14000fe5c:	movsxd esp,DWORD PTR [rbp+0x73]
   14000fe5f:	jae    0x14000fe81
   14000fe61:	jne    0x14000fed6
   14000fe63:	imul   ebp,DWORD PTR [rsi+0x67],0x73252720
   14000fe6a:	(bad)  
   14000fe6b:	add    BYTE PTR [rax],al
   14000fe6d:	add    BYTE PTR [rax],al
   14000fe6f:	add    BYTE PTR [rsi+0x61],al
   14000fe72:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000fe7a:	addr32 gs je 0x14000fe9e
   14000fe7e:	gs js  0x14000feea
   14000fe81:	je     0x14000fea3
   14000fe83:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000fe86:	and    BYTE PTR gs:[rdi+0x66],ch
   14000fe8a:	and    BYTE PTR [rax+0x72],dh
   14000fe8d:	outs   dx,DWORD PTR ds:[rsi]
   14000fe8e:	movsxd esp,DWORD PTR [rbp+0x73]
   14000fe91:	jae    0x14000fe93
   14000fe93:	add    BYTE PTR [rax],al
   14000fe95:	add    BYTE PTR [rax],al
   14000fe97:	add    BYTE PTR [rsi],ch
   14000fe99:	add    BYTE PTR [rbp+0x0],ah
   14000fe9c:	js     0x14000fe9e
   14000fe9e:	add    BYTE PTR gs:[rax],al
   14000fea1:	add    BYTE PTR [rax],al
   14000fea3:	add    BYTE PTR [rax],al
   14000fea5:	add    BYTE PTR [rax],al
   14000fea7:	add    BYTE PTR [rbp+0x78],al
   14000feaa:	jo     0x14000ff11
   14000feac:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   14000feb0:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14000feb4:	imul   bp,WORD PTR [rsi+0x64],0x6120
   14000feba:	and    BYTE PTR [rbx+0x6f],ah
   14000febd:	ins    DWORD PTR es:[rdi],dx
   14000febe:	ins    DWORD PTR es:[rdi],dx
   14000febf:	(bad)  
   14000fec0:	outs   dx,BYTE PTR ds:[rsi]
   14000fec1:	and    BYTE PTR fs:[rbp+0x6e],ah
   14000fec5:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x206e6920
   14000fecd:	(bad)  
   14000fece:	cs gs js 0x14000ff37
   14000fed2:	(bad)  
   14000fed3:	and    BYTE PTR [rcx+0x6e],ch
   14000fed6:	and    BYTE PTR [rbx+0x68],dh
   14000fed9:	(bad)
   14000fedf:	ins    BYTE PTR es:[rdi],dx
   14000fee0:	imul   ebp,DWORD PTR [rsi+0x65],0x2e
	...
   14000feef:	add    BYTE PTR [rbp+0x78],al
   14000fef2:	jo     0x14000ff59
   14000fef4:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   14000fef8:	and    BYTE PTR [rbp+riz*2+0x72],dh
   14000fefc:	ins    DWORD PTR es:[rdi],dx
   14000fefd:	imul   ebp,DWORD PTR [rsi+0x61],0x676e6974
   14000ff04:	and    BYTE PTR [rdi+rbp*2+0x75],ah
   14000ff08:	(bad)  
   14000ff09:	ins    BYTE PTR es:[rdi],dx
   14000ff0a:	gs sub eax,0x746f7571
   14000ff10:	and    BYTE PTR gs:[rsi+0x6f],ah
   14000ff14:	jb     0x14000ff36
   14000ff16:	gs js  0x14000ff7e
   14000ff19:	movsxd esi,DWORD PTR [rbp+0x74]
   14000ff1c:	(bad)  
   14000ff1d:	(bad)  
   14000ff1e:	ins    BYTE PTR es:[rdi],dx
   14000ff1f:	and    BYTE PTR gs:[rcx+0x6e],ch
   14000ff23:	and    BYTE PTR [rbx+0x68],dh
   14000ff26:	(bad)
   14000ff2c:	ins    BYTE PTR es:[rdi],dx
   14000ff2d:	imul   ebp,DWORD PTR [rsi+0x65],0x2e
	...
   14000ff40:	push   rsp
   14000ff41:	gs jb  0x14000ffb1
   14000ff44:	imul   ebp,DWORD PTR [rsi+0x61],0x676e6974
   14000ff4b:	and    BYTE PTR [rcx+0x75],dh
   14000ff4e:	outs   dx,DWORD PTR ds:[rsi]
   14000ff4f:	je     0x14000ffb6
   14000ff51:	and    BYTE PTR [rdi+0x69],dh
   14000ff54:	je     0x14000ffbe
   14000ff56:	outs   dx,DWORD PTR ds:[rsi]
   14000ff57:	jne    0x14000ffcd
   14000ff59:	and    BYTE PTR [rbx+0x74],dh
   14000ff5c:	(bad)  
   14000ff5d:	jb     0x14000ffd3
   14000ff5f:	imul   ebp,DWORD PTR [rsi+0x67],0x6f757120
   14000ff66:	je     0x14000ffcd
   14000ff68:	and    BYTE PTR [rsi+0x6f],ah
   14000ff6b:	jb     0x14000ff8d
   14000ff6d:	gs js  0x14000ffd5
   14000ff70:	movsxd esi,DWORD PTR [rbp+0x74]
   14000ff73:	(bad)  
   14000ff74:	(bad)  
   14000ff75:	ins    BYTE PTR es:[rdi],dx
   14000ff76:	and    BYTE PTR gs:[rcx+0x6e],ch
   14000ff7a:	and    BYTE PTR [rbx+0x68],dh
   14000ff7d:	(bad)
   14000ff83:	ins    BYTE PTR es:[rdi],dx
   14000ff84:	imul   ebp,DWORD PTR [rsi+0x65],0x2e
   14000ff8b:	add    BYTE PTR [rax],al
   14000ff8d:	add    BYTE PTR [rax],al
   14000ff8f:	add    BYTE PTR [rsi+0x61],al
   14000ff92:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000ff9a:	imul   bp,WORD PTR [rsi+0x64],0x7320
   14000ffa0:	push   0x6e616265
   14000ffa5:	add    BYTE PTR [eax],al
   14000ffa8:	rex.RB js 0x14001001b
   14000ffab:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14000ffb0:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14000ffb4:	imul   bp,WORD PTR [rsi+0x64],0x7420
   14000ffba:	gs jb  0x14001002a
   14000ffbd:	imul   ebp,DWORD PTR [rsi+0x61],0x20726f74
   14000ffc4:	imul   ebp,DWORD PTR [rsi+0x20],0x62656873
   14000ffcb:	(bad)  
   14000ffcc:	outs   dx,BYTE PTR ds:[rsi]
   14000ffcd:	and    BYTE PTR [ecx+ebp*2+0x6e],ch
   14000ffd2:	add    BYTE PTR gs:[rax],al
   14000ffd5:	add    BYTE PTR [rax],al
   14000ffd7:	add    BYTE PTR [rbp+0x78],al
   14000ffda:	jo     0x140010041
   14000ffdc:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   14000ffe0:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14000ffe4:	fs movsxd ebp,DWORD PTR gs:[rdi+0x64]
   14000ffe9:	and    BYTE PTR gs:[rbx+0x68],dh
   14000ffed:	(bad)
   14000fff3:	ins    BYTE PTR es:[rdi],dx
   14000fff4:	imul   ebp,DWORD PTR [rsi+0x65],0x69737520
   14000fffb:	outs   dx,BYTE PTR ds:[rsi]
   14000fffc:	and    BYTE PTR [ebp+0x54],dl
   140010000:	rex.RX sub eax,0x38
   140010006:	add    BYTE PTR [rax],al
   140010008:	rex.RB js 0x14001007b
   14001000b:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140010010:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   140010014:	imul   bp,WORD PTR [rsi+0x64],0x2720
   14001001a:	and    esp,DWORD PTR [rdi]
   14001001c:	and    BYTE PTR [rcx+0x74],ah
   14001001f:	and    BYTE PTR [rbx+0x74],dh
   140010022:	(bad)  
   140010023:	jb     0x140010099
   140010025:	and    BYTE PTR [rdi+0x66],ch
   140010028:	and    BYTE PTR [rbx+0x68],dh
   14001002b:	(bad)
   140010031:	ins    BYTE PTR es:[rdi],dx
   140010032:	imul   ebp,DWORD PTR [rsi+0x65],0x45000000
   140010039:	js     0x1400100ab
   14001003b:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140010040:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   140010044:	imul   bp,WORD PTR [rsi+0x64],0x2720
   14001004a:	and    DWORD PTR [rdi],esp
   14001004c:	and    BYTE PTR [rsi+0x6f],ah
   14001004f:	ins    BYTE PTR es:[rdi],dx
   140010050:	ins    BYTE PTR es:[rdi],dx
   140010051:	outs   dx,DWORD PTR ds:[rsi]
   140010052:	ja     0x1400100bd
   140010054:	outs   dx,BYTE PTR ds:[rsi]
   140010055:	and    BYTE PTR [edi],ah
   140010058:	and    esp,DWORD PTR [rdi]
   14001005a:	and    BYTE PTR [rcx+0x6e],ch
   14001005d:	and    BYTE PTR [rbx+0x68],dh
   140010060:	(bad)
   140010066:	ins    BYTE PTR es:[rdi],dx
   140010067:	imul   ebp,DWORD PTR [rsi+0x65],0x0
   14001006e:	add    BYTE PTR [rax],al
   140010070:	rex.RB js 0x1400100e3
   140010073:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140010078:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14001007c:	imul   bp,WORD PTR [rsi+0x64],0x6520
   140010082:	js     0x1400100e9
   140010084:	movsxd esi,DWORD PTR [rbp+0x74]
   140010087:	(bad)  
   140010088:	(bad)  
   140010089:	ins    BYTE PTR es:[rdi],dx
   14001008a:	and    BYTE PTR gs:[rcx+0x6e],ch
   14001008e:	and    BYTE PTR [rbx+0x68],dh
   140010091:	(bad)
   140010097:	ins    BYTE PTR es:[rdi],dx
   140010098:	imul   ebp,DWORD PTR [rsi+0x65],0x0
   14001009f:	add    BYTE PTR [rbp+0x78],al
   1400100a2:	jo     0x140010109
   1400100a4:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   1400100a8:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   1400100ac:	imul   bp,WORD PTR [rsi+0x64],0x6120
   1400100b2:	jb     0x14001011b
   1400100b4:	jne    0x140010123
   1400100b6:	outs   dx,BYTE PTR gs:[rsi]
   1400100b8:	je     0x14001012d
   1400100ba:	and    BYTE PTR [rax],ch
   1400100bc:	gs jbe 0x140010124
   1400100bf:	outs   dx,BYTE PTR ds:[rsi]
   1400100c0:	and    BYTE PTR [rcx+0x66],ch
   1400100c3:	and    BYTE PTR [rbp+0x6d],ah
   1400100c6:	jo     0x14001013c
   1400100c8:	jns    0x1400100f3
   1400100ca:	and    BYTE PTR [rcx+0x6e],ch
   1400100cd:	and    BYTE PTR [rbx+0x68],dh
   1400100d0:	(bad)
   1400100d6:	ins    BYTE PTR es:[rdi],dx
   1400100d7:	imul   ebp,DWORD PTR [rsi+0x65],0x0
   1400100de:	add    BYTE PTR [rax],al
   1400100e0:	rex.RB js 0x140010153
   1400100e3:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   1400100e8:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   1400100ec:	(bad)  
   1400100ed:	and    BYTE PTR gs:[rcx+0x62],ah
   1400100f1:	ins    BYTE PTR es:[rdi],dx
   1400100f2:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   1400100f7:	(bad)  
   1400100f8:	ins    BYTE PTR es:[rdi],dx
   1400100f9:	ins    BYTE PTR es:[rdi],dx
   1400100fa:	outs   dx,DWORD PTR ds:[rsi]
   1400100fb:	movsxd esp,DWORD PTR [rcx+0x74]
   1400100fe:	and    BYTE PTR gs:[rbx+0x6f],ah
   140010102:	ins    DWORD PTR es:[rdi],dx
   140010103:	ins    DWORD PTR es:[rdi],dx
   140010104:	(bad)  
   140010105:	outs   dx,BYTE PTR ds:[rsi]
   140010106:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
   14001010b:	and    BYTE PTR gs:[rbp+0x65],ch
   14001010f:	ins    DWORD PTR es:[rdi],dx
   140010110:	outs   dx,DWORD PTR ds:[rsi]
   140010111:	jb     0x14001018c
   140010113:	add    BYTE PTR [rax],al
   140010115:	add    BYTE PTR [rax],al
   140010117:	add    BYTE PTR [rdx],ah
   140010119:	add    BYTE PTR [rip+0x22007300],ah        # 0x16201741f
   14001011f:	add    BYTE PTR [rax],ah
   140010121:	add    BYTE PTR [rip+0x20007300],ah        # 0x160017427
   140010127:	add    BYTE PTR [rdx],ah
   140010129:	add    BYTE PTR [rip+0x22007300],ah        # 0x16201742f
   14001012f:	add    BYTE PTR [rax],ah
   140010131:	add    BYTE PTR [rip+0x7300],ah        # 0x140017437
   140010137:	add    BYTE PTR [rdx+0x53],dl
   14001013a:	rex.R push rbx
   14001013c:	fsub   QWORD PTR [rcx+0x506f29ff]
   140010142:	adc    DWORD PTR [rdi-0x47],eax
   140010145:	ror    BYTE PTR [rbx-0x7ab3b159],0x27
   14001014c:	add    al,BYTE PTR [rax]
   14001014e:	add    BYTE PTR [rax],al
   140010150:	cmp    bl,BYTE PTR [r13+r10*2+0x73]
   140010155:	gs jb  0x1400101cb
   140010158:	pop    rsp
   140010159:	push   rsi
   14001015a:	imul   ebp,DWORD PTR [rsi+0x61],0x72505c79
   140010161:	outs   dx,DWORD PTR ds:[rsi]
   140010162:	push   0x65
   140010164:	movsxd esi,DWORD PTR [rbx+rsi*2+0x5c]
   140010168:	jae    0x1400101d3
   14001016a:	ins    DWORD PTR es:[rdi],dx
   14001016b:	jo     0x1400101d9
   14001016d:	gs pop rdi
   14001016f:	ins    BYTE PTR es:[rdi],dx
   140010170:	(bad)  
   140010171:	jne    0x1400101e1
   140010173:	movsxd ebp,DWORD PTR [rax+0x65]
   140010176:	jb     0x1400101d4
   140010178:	js     0x1400101b0
   14001017a:	xor    al,0x5c
   14001017c:	push   rdx
   14001017d:	gs ins BYTE PTR es:[rdi],dx
   14001017f:	gs (bad) 
   140010181:	jae    0x1400101e8
   140010183:	pop    rsp
   140010184:	rex.XB
   140010185:	rex.WR
   140010186:	rex.WB push r11
   140010188:	imul   ebp,DWORD PTR [rbp+0x70],0x614c656c
   14001018f:	jne    0x1400101ff
   140010191:	movsxd ebp,DWORD PTR [rax+0x65]
   140010194:	jb     0x1400101c4
   140010196:	jo     0x1400101fc
   140010198:	(bad)  
	...
   1400101bd:	add    BYTE PTR [rax],al
   1400101bf:	add    BYTE PTR [rcx],al
   1400101c1:	add    BYTE PTR [rax],al
   1400101c3:	add    BYTE PTR [rcx],al
   1400101c5:	(bad)  
   1400101c6:	add    al,BYTE PTR [rax]
   1400101c8:	(bad)  
   1400101c9:	xor    al,BYTE PTR [rdx]
   1400101cb:	push   rax
   1400101cc:	adc    DWORD PTR [rbx],edx
   1400101ce:	or     BYTE PTR [rax],al
   1400101d0:	adc    esp,DWORD PTR [rsp+rcx*1+0x0]
   1400101d4:	adc    esi,DWORD PTR [rbx+rcx*1]
   1400101d7:	add    BYTE PTR [rbx],dl
   1400101d9:	push   rdx
   1400101da:	(bad)  
   1400101dc:	or     eax,0xb8700bc0
   1400101e1:	sub    DWORD PTR [rax],eax
   1400101e3:	add    BYTE PTR [rdx],al
   1400101e5:	add    BYTE PTR [rax],al
   1400101e7:	add    dl,al
   1400101e9:	sbb    DWORD PTR [rax],eax
   1400101eb:	add    ch,ah
   1400101ed:	sbb    DWORD PTR [rax],eax
   1400101ef:	add    BYTE PTR [rax+0xd9],ah
   1400101f5:	add    BYTE PTR [rax],al
   1400101f7:	add    dl,ch
   1400101f9:	sbb    DWORD PTR [rax],eax
   1400101fb:	add    dh,bh
   1400101fd:	sbb    DWORD PTR [rax],eax
   1400101ff:	add    BYTE PTR [rax+0xd9],ah
   140010205:	add    BYTE PTR [rax],al
   140010207:	add    BYTE PTR [rcx],al
   140010209:	(bad)  
   14001020a:	add    al,BYTE PTR [rax]
   14001020c:	(bad)  
   14001020d:	xor    al,BYTE PTR [rdx]
   14001020f:	xor    BYTE PTR [rcx],al
   140010211:	or     eax,DWORD PTR [rcx]
   140010213:	add    BYTE PTR [rbx],cl
   140010215:	(bad)  
   140010216:	add    BYTE PTR [rax],al
   140010218:	add    DWORD PTR [rdx+rcx*1],edx
   14001021b:	add    BYTE PTR [rsp+rsi*1],dl
   14001021e:	lldt   WORD PTR [rdx+rsi*1]
   140010222:	adc    al,dh
   140010224:	(bad)  
   140010225:	loopne 0x140010233
   140010227:	ror    BYTE PTR [rdx],1
   140010229:	ror    BYTE PTR [rax],0x70
   14001022c:	(bad)  
   14001022d:	(bad)  
   14001022e:	(bad)  
   14001022f:	push   rax
   140010230:	add    DWORD PTR [rsi],eax
   140010232:	add    al,BYTE PTR [rax]
   140010234:	(bad)  
   140010235:	push   rdx
   140010236:	add    dl,BYTE PTR [rax+0x11]
   140010239:	sbb    DWORD PTR [rdx],ecx
   14001023b:	add    BYTE PTR [rcx],bl
   14001023d:	(bad)  
   14001023e:	or     eax,DWORD PTR [rax]
   140010240:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140010244:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140010248:	sbb    DWORD PTR [rax+rcx*1],esi
   14001024b:	add    BYTE PTR [rcx],bl
   14001024d:	push   rdx
   14001024e:	adc    eax,0x29b8d0
   140010253:	add    BYTE PTR [rcx],al
   140010255:	add    BYTE PTR [rax],al
   140010257:	add    al,al
   140010259:	and    BYTE PTR [rax],al
   14001025b:	add    cl,bl
   14001025d:	and    BYTE PTR [rax],al
   14001025f:	add    BYTE PTR [rdx+0xd9],bh
   140010265:	add    BYTE PTR [rax],al
   140010267:	add    BYTE PTR [rcx],dl
   140010269:	sbb    al,0x5
   14001026b:	add    BYTE PTR [rdx+rax*2],bl
   14001026e:	sbb    al,al
   140010270:	(bad)  
   140010271:	jo     0x140010288
   140010273:	(bad)  
   140010274:	adc    al,0x30
   140010276:	add    BYTE PTR [rax],al
   140010278:	mov    eax,0x1000029
   14001027d:	add    BYTE PTR [rax],al
   14001027f:	add    BYTE PTR [rax+0x3e000021],al
   140010285:	and    al,BYTE PTR [rax]
   140010287:	add    BYTE PTR [rax+0xd9],ah
   14001028d:	add    BYTE PTR [rax],al
   14001028f:	add    BYTE PTR [rcx],al
   140010291:	sbb    eax,0x741d000c
   140010296:	or     eax,DWORD PTR [rax]
   140010298:	sbb    eax,0x1d000a64
   14001029d:	push   rsp
   14001029e:	or     DWORD PTR [rax],eax
   1400102a0:	sbb    eax,0x1d000834
   1400102a5:	xor    bl,BYTE PTR [rcx]
   1400102a7:	loopne 0x1400102c0
   1400102a9:	rcl    BYTE PTR [rip+0x40f11c0],1        # 0x14410146f
   1400102af:	add    BYTE PTR [rdi],cl
   1400102b1:	xor    al,0x7
   1400102b3:	add    BYTE PTR [rdi],cl
   1400102b5:	xor    cl,BYTE PTR [rbx]
   1400102b7:	jo     0x140010271
   1400102b9:	sub    DWORD PTR [rax],eax
   1400102bb:	add    BYTE PTR [rcx],al
   1400102bd:	add    BYTE PTR [rax],al
   1400102bf:	add    BYTE PTR [rbp-0x48ffffdc],ch
   1400102c5:	and    al,0x0
   1400102c7:	add    ah,dl
   1400102c9:	fld    DWORD PTR [rax]
   1400102cb:	add    BYTE PTR [rax],al
   1400102cd:	add    BYTE PTR [rax],al
   1400102cf:	add    BYTE PTR [rcx],al
   1400102d1:	adc    al,0x8
   1400102d3:	add    BYTE PTR [rsp+riz*2],dl
   1400102d6:	or     BYTE PTR [rax],al
   1400102d8:	adc    al,0x54
   1400102da:	(bad)  
   1400102db:	add    BYTE PTR [rsp+rsi*1],dl
   1400102de:	(bad)  
   1400102df:	add    BYTE PTR [rdx+rsi*1],dl
   1400102e2:	adc    BYTE PTR [rax+0x11],dh
   1400102e5:	adc    al,0x6
   1400102e7:	add    BYTE PTR [rsp+riz*2],dl
   1400102ea:	or     BYTE PTR [rax],al
   1400102ec:	adc    al,0x34
   1400102ee:	(bad)  
   1400102ef:	add    BYTE PTR [rdx+rsi*1],dl
   1400102f2:	adc    BYTE PTR [rax-0x48],dh
   1400102f5:	sub    DWORD PTR [rax],eax
   1400102f7:	add    BYTE PTR [rcx],al
   1400102f9:	add    BYTE PTR [rax],al
   1400102fb:	add    cl,dl
   1400102fd:	and    eax,0x25e00000
   140010302:	add    BYTE PTR [rax],al
   140010304:	(bad)  
   140010305:	fld    DWORD PTR [rax]
   140010307:	add    BYTE PTR [rax],al
   140010309:	add    BYTE PTR [rax],al
   14001030b:	add    BYTE PTR [rcx],dl
   14001030d:	(bad)  
   14001030f:	add    BYTE PTR [rdi],cl
   140010311:	xor    al,0x7
   140010313:	add    BYTE PTR [rdi],cl
   140010315:	xor    cl,BYTE PTR [rbx]
   140010317:	jo     0x1400102d1
   140010319:	sub    DWORD PTR [rax],eax
   14001031b:	add    BYTE PTR [rcx],al
   14001031d:	add    BYTE PTR [rax],al
   14001031f:	add    BYTE PTR [rdi-0x36ffffda],bh
   140010325:	add    BYTE PTR es:[rax],al
   140010328:	(bad)  
   140010329:	fld    DWORD PTR [rax]
   14001032b:	add    BYTE PTR [rax],al
   14001032d:	add    BYTE PTR [rax],al
   14001032f:	add    BYTE PTR [rcx],cl
   140010331:	or     al,BYTE PTR [rax+rax*1]
   140010334:	or     dh,BYTE PTR [rcx+rcx*1]
   140010337:	add    BYTE PTR [rdx],cl
   140010339:	push   rdx
   14001033a:	(bad)  
   14001033b:	jo     0x1400102f5
   14001033d:	sub    DWORD PTR [rax],eax
   14001033f:	add    BYTE PTR [rcx],al
   140010341:	add    BYTE PTR [rax],al
   140010343:	add    BYTE PTR [rdi+riz*1+0x28330000],dl
   14001034a:	add    BYTE PTR [rax],al
   14001034c:	out    dx,al
   14001034d:	fld    DWORD PTR [rax]
   14001034f:	add    BYTE PTR [rbx],dh
   140010351:	sub    BYTE PTR [rax],al
   140010353:	add    BYTE PTR [rcx],al
   140010355:	or     al,0x2
   140010357:	add    BYTE PTR [rcx+rax*1],cl
   14001035a:	adc    DWORD PTR [rax],eax
   14001035c:	add    DWORD PTR [rax],esp
   14001035e:	or     al,0x0
   140010360:	and    BYTE PTR [rcx+rdx*1+0x0],ah
   140010364:	and    BYTE PTR [rax+rdx*1+0x0],dl
   140010368:	and    BYTE PTR [rsi+rcx*1],dh
   14001036b:	add    BYTE PTR [rax],ah
   14001036d:	jb     0x14001038b
   14001036f:	lock sbb ah,al
   140010372:	sbb    al,dl
   140010374:	(bad)  
   140010375:	rcl    BYTE PTR [rax+rsi*2],0x1
   140010379:	sbb    al,0xc
   14001037b:	add    BYTE PTR [rsp+riz*2],bl
   14001037e:	ltr    WORD PTR [rsp+rdx*2]
   140010382:	(bad)  
   140010383:	add    BYTE PTR [rsp+rsi*1],bl
   140010386:	or     al,0x0
   140010388:	sbb    al,0x52
   14001038a:	sbb    al,dh
   14001038c:	(bad)  
   14001038d:	loopne 0x1400103a3
   14001038f:	rcl    BYTE PTR [rdx],1
   140010391:	rcl    BYTE PTR [rax],0x70
   140010394:	adc    DWORD PTR [rdi],ecx
   140010396:	(bad)  
   140010397:	add    BYTE PTR [rdi],cl
   140010399:	or     DWORD PTR fs:[rax],eax
   14001039c:	sysenter 
   14001039e:	or     BYTE PTR [rax],al
   1400103a0:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400103a3:	jo     0x14001035d
   1400103a5:	sub    DWORD PTR [rax],eax
   1400103a7:	add    BYTE PTR [rcx],al
   1400103a9:	add    BYTE PTR [rax],al
   1400103ab:	add    BYTE PTR [rdx-0x2dffffd2],dh
   1400103b1:	(bad)  
   1400103b2:	add    BYTE PTR [rax],al
   1400103b4:	or     al,0xda
   1400103b6:	add    BYTE PTR [rax],al
   1400103b8:	add    BYTE PTR [rax],al
   1400103ba:	add    BYTE PTR [rax],al
   1400103bc:	sbb    DWORD PTR [rsi],ebp
   1400103be:	or     DWORD PTR [rax],eax
   1400103c0:	sbb    eax,0x1d00c464
   1400103c5:	xor    al,0xc3
   1400103c7:	add    BYTE PTR [rip+0xe00be01],bl        # 0x14e01c1ce
   1400103cd:	ror    BYTE PTR [rax+rsi*2],0xb
   1400103d1:	push   rax
   1400103d2:	add    BYTE PTR [rax],al
   1400103d4:	test   BYTE PTR [rbp+0x0],bh
   1400103d7:	add    al,ah
   1400103d9:	add    eax,0x14010000
   1400103de:	or     BYTE PTR [rax],al
   1400103e0:	adc    al,0x64
   1400103e2:	or     al,BYTE PTR [rax]
   1400103e4:	adc    al,0x54
   1400103e6:	or     DWORD PTR [rax],eax
   1400103e8:	adc    al,0x34
   1400103ea:	or     BYTE PTR [rax],al
   1400103ec:	adc    al,0x52
   1400103ee:	adc    BYTE PTR [rax+0x1],dh
   1400103f1:	add    al,0x1
   1400103f3:	add    BYTE PTR [rdx+riz*2],al
   1400103f6:	add    BYTE PTR [rax],al
   1400103f8:	add    DWORD PTR [rdi],eax
   1400103fa:	add    al,BYTE PTR [rax]
   1400103fc:	(bad)  
   1400103fd:	add    DWORD PTR [rbx+0x100],ebx
   140010403:	add    BYTE PTR [rcx],al
   140010405:	add    BYTE PTR [rax],al
   140010407:	add    BYTE PTR [rcx],al
   140010409:	add    BYTE PTR [rax],al
   14001040b:	add    BYTE PTR [rcx],al
   14001040d:	(bad)  
   14001040f:	add    BYTE PTR [rdi],cl
   140010411:	xor    al,0x6
   140010413:	add    BYTE PTR [rdi],cl
   140010415:	xor    cl,BYTE PTR [rbx]
   140010417:	jo     0x14001042a
   140010419:	sbb    al,0xa
   14001041b:	add    BYTE PTR [rsp+riz*2],bl
   14001041e:	ltr    WORD PTR [rsp+rsi*1]
   140010422:	(bad)  
   140010423:	add    BYTE PTR [rdx+rsi*2],bl
   140010426:	sbb    al,dh
   140010428:	(bad)  
   140010429:	loopne 0x14001043f
   14001042b:	rcl    BYTE PTR [rdx],1
   14001042d:	rcl    BYTE PTR [rax],0x70
   140010430:	mov    eax,0x1000029
   140010435:	add    BYTE PTR [rax],al
   140010437:	add    BYTE PTR [rdi+0x36],al
   14001043a:	add    BYTE PTR [rax],al
   14001043c:	push   rbp
   14001043d:	(bad)  
   14001043e:	add    BYTE PTR [rax],al
   140010440:	(bad)  
   140010441:	fiadd  DWORD PTR [rax]
   140010443:	add    BYTE PTR [rax],al
   140010445:	add    BYTE PTR [rax],al
   140010447:	add    BYTE PTR [rcx],bl
   140010449:	sub    eax,0x641b000b
   14001044e:	push   rcx
   14001044f:	add    BYTE PTR [rbx],bl
   140010451:	push   rsp
   140010452:	push   rax
   140010453:	add    BYTE PTR [rbx],bl
   140010455:	xor    al,0x4f
   140010457:	add    BYTE PTR [rbx],bl
   140010459:	add    DWORD PTR [rdx+0x0],ecx
   14001045c:	adc    al,0xd0
   14001045e:	adc    al,al
   140010460:	adc    BYTE PTR [rax+0x0],dh
   140010463:	add    BYTE PTR [rbp+rdi*2+0x2400000],al
   14001046a:	add    BYTE PTR [rax],al
   14001046c:	add    DWORD PTR [rbx+rcx*1],ebx
   14001046f:	add    BYTE PTR [rsp+rsi*2],bl
   140010472:	sbb    BYTE PTR [rax],al
   140010474:	sbb    al,0x54
   140010476:	(bad)  
   140010477:	add    BYTE PTR [rsp+rsi*1],bl
   14001047a:	(bad)  
   14001047b:	add    BYTE PTR [rcx+rax*1],bl
   14001047e:	adc    al,BYTE PTR [rax]
   140010480:	adc    eax,0x11d013e0
   140010485:	rol    BYTE PTR [rax],0x0
   140010488:	add    DWORD PTR [rcx],ebx
   14001048a:	or     al,BYTE PTR [rax]
   14001048c:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   140010490:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   140010494:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140010498:	sbb    DWORD PTR [rsi+rax*1],esi
   14001049b:	add    BYTE PTR [rcx],bl
   14001049d:	xor    dl,BYTE PTR [rip+0x60f11c0]        # 0x146101663
   1400104a3:	add    BYTE PTR [rdi],cl
   1400104a5:	or     DWORD PTR fs:[rax],eax
   1400104a8:	sysenter 
   1400104aa:	or     BYTE PTR [rax],al
   1400104ac:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400104af:	jo     0x140010469
   1400104b1:	sub    DWORD PTR [rax],eax
   1400104b3:	add    BYTE PTR [rcx],al
   1400104b5:	add    BYTE PTR [rax],al
   1400104b7:	add    BYTE PTR [rsi+0x200003f],cl
   1400104bd:	add    BYTE PTR [rax],al
   1400104c0:	or     al,0xda
   1400104c2:	add    BYTE PTR [rax],al
   1400104c4:	add    BYTE PTR [rax],al
   1400104c6:	add    BYTE PTR [rax],al
   1400104c8:	adc    DWORD PTR [rcx],ebx
   1400104ca:	or     al,BYTE PTR [rax]
   1400104cc:	sbb    DWORD PTR [rsp+rcx*1+0x0],esi
   1400104d0:	sbb    DWORD PTR [rbx+rcx*1+0x0],esp
   1400104d4:	sbb    DWORD PTR [rdx+rcx*1],esi
   1400104d7:	add    BYTE PTR [rcx],bl
   1400104d9:	push   rdx
   1400104da:	adc    eax,0x11d013f0
   1400104df:	sar    BYTE PTR [rax+0x2000029],0x0
   1400104e6:	add    BYTE PTR [rax],al
   1400104e8:	rex.WX
   1400104e9:	add    BYTE PTR [r8],al
   1400104ec:	mov    es,WORD PTR [rcx+0x0]
   1400104ef:	add    BYTE PTR [rbx-0x26],cl
   1400104f2:	add    BYTE PTR [rax],al
   1400104f4:	add    BYTE PTR [rax],al
   1400104f6:	add    BYTE PTR [rax],al
   1400104f8:	adc    DWORD PTR [rcx+0x0],eax
   1400104fb:	add    BYTE PTR [rdi+0x7b000041],ah
   140010501:	fiadd  DWORD PTR [rax]
   140010503:	add    BYTE PTR [rax],al
   140010505:	add    BYTE PTR [rax],al
   140010507:	add    BYTE PTR [rcx],al
   140010509:	adc    eax,0x74150008
   14001050e:	or     BYTE PTR [rax],al
   140010510:	adc    eax,0x15000764
   140010515:	xor    al,0x6
   140010517:	add    BYTE PTR [rip+0x11c01132],dl        # 0x151c1164f
   14001051d:	adc    eax,0x74150008
   140010522:	or     BYTE PTR [rax],al
   140010524:	adc    eax,0x15000764
   140010529:	xor    al,0x6
   14001052b:	add    BYTE PTR [rip+0xffffffffb8d01132],dl        # 0xf8d11663
   140010531:	sub    DWORD PTR [rax],eax
   140010533:	add    BYTE PTR [rcx],al
   140010535:	add    BYTE PTR [rax],al
   140010537:	add    BYTE PTR [rdi-0x3affffbd],al
   14001053d:	rex.XB add BYTE PTR [r8],al
   140010540:	xchg   esi,eax
   140010541:	fiadd  DWORD PTR [rax]
   140010543:	add    BYTE PTR [rax],al
   140010545:	add    BYTE PTR [rax],al
   140010547:	add    BYTE PTR [rcx],al
   140010549:	sbb    DWORD PTR [rdx],ecx
   14001054b:	add    BYTE PTR [rcx],bl
   14001054d:	je     0x14001055a
   14001054f:	add    BYTE PTR [rcx],bl
   140010551:	or     al,BYTE PTR fs:[rax]
   140010554:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140010558:	sbb    DWORD PTR [rax+rcx*1],esi
   14001055b:	add    BYTE PTR [rcx],bl
   14001055d:	push   rdx
   14001055e:	adc    eax,0x81701c0
   140010563:	add    BYTE PTR [rdi],dl
   140010565:	or     DWORD PTR fs:[rax],eax
   140010568:	(bad)  
   140010569:	push   rsp
   14001056a:	or     BYTE PTR [rax],al
   14001056c:	(bad)  
   14001056d:	xor    al,0x7
   14001056f:	add    BYTE PTR [rdi],dl
   140010571:	xor    dl,BYTE PTR [rbx]
   140010573:	jo     0x140010575
   140010575:	add    BYTE PTR [rax],al
   140010577:	add    BYTE PTR [rcx],al
   140010579:	add    BYTE PTR [rax],al
   14001057b:	add    BYTE PTR [rcx],al
   14001057d:	sbb    ecx,DWORD PTR [rdx]
   14001057f:	add    BYTE PTR [rbx],bl
   140010581:	je     0x140010593
   140010583:	add    BYTE PTR [rbx],bl
   140010585:	ltr    WORD PTR fs:[rbx]
   140010589:	xor    al,0xe
   14001058b:	add    BYTE PTR [rbx],bl
   14001058d:	xchg   edx,eax
   14001058e:	adc    al,0xd0
   140010590:	adc    al,al
   140010592:	adc    BYTE PTR [rax+0x1],dl
   140010595:	sbb    BYTE PTR [rdx],cl
   140010597:	add    BYTE PTR [rax],bl
   140010599:	fs or  al,0x0
   14001059c:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   1400105a0:	sbb    BYTE PTR [rdx+rcx*1],dh
   1400105a3:	add    BYTE PTR [rax],bl
   1400105a5:	push   rdx
   1400105a6:	adc    al,0xd0
   1400105a8:	adc    al,al
   1400105aa:	adc    BYTE PTR [rax+0x1],dh
   1400105ad:	sbb    al,0x9
   1400105af:	add    BYTE PTR [rdx+riz*4],bl
   1400105b2:	adc    eax,0x11e013f0
   1400105b7:	ror    BYTE PTR [rdi],1
   1400105b9:	ror    BYTE PTR [rip+0xb600c70],0x30        # 0x14b611230
   1400105c0:	or     dl,BYTE PTR [rax+0x0]
   1400105c3:	add    BYTE PTR [rcx],dl
   1400105c5:	sbb    ecx,DWORD PTR [rdx]
   1400105c7:	add    BYTE PTR [rbx],bl
   1400105c9:	fs or  al,0x0
   1400105cc:	sbb    esi,DWORD PTR [rbx+rcx*1]
   1400105cf:	add    BYTE PTR [rbx],bl
   1400105d1:	xor    dl,BYTE PTR [rdi]
   1400105d3:	lock adc eax,0x11d013e0
   1400105d9:	ror    BYTE PTR [rdi],0x70
   1400105dc:	mov    eax,0x1000029
   1400105e1:	add    BYTE PTR [rax],al
   1400105e3:	add    BYTE PTR [rbp+rdx*2+0x0],cl
   1400105e7:	add    BYTE PTR [rsi+0x55],bh
   1400105ea:	add    BYTE PTR [rax],al
   1400105ec:	mov    ah,0xda
   1400105ee:	add    BYTE PTR [rax],al
   1400105f0:	add    BYTE PTR [rax],al
   1400105f2:	add    BYTE PTR [rax],al
   1400105f4:	add    DWORD PTR [rax],edx
   1400105f6:	(bad)  
   1400105f7:	add    BYTE PTR [rax],dl
   1400105f9:	je     0x140010602
   1400105fb:	add    BYTE PTR [rax],dl
   1400105fd:	xor    al,0x6
   1400105ff:	add    BYTE PTR [rax],dl
   140010601:	xor    cl,BYTE PTR [rax+rax*8]
   140010604:	add    DWORD PTR [rcx],ecx
   140010606:	add    al,BYTE PTR [rax]
   140010608:	or     DWORD PTR [rdx],esi
   14001060a:	add    eax,0x8180130
   14001060f:	add    BYTE PTR [rax],bl
   140010611:	or     BYTE PTR fs:[rax],al
   140010614:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   140010618:	sbb    BYTE PTR [rsi+rax*1],dh
   14001061b:	add    BYTE PTR [rax],bl
   14001061d:	xor    dl,BYTE PTR [rax+rsi*2]
   140010620:	adc    DWORD PTR [rip+0x34150008],edx        # 0x17416062e
   140010626:	or     eax,DWORD PTR [rax]
   140010628:	adc    eax,0xfe01132
   14001062d:	ror    BYTE PTR [rip+0xa700bc0],1        # 0x14a7111f3
   140010633:	(bad)  
   140010634:	mov    eax,0x1000029
   140010639:	add    BYTE PTR [rax],al
   14001063b:	add    BYTE PTR [rip+0x4f000064],bl        # 0x18f0106a5
   140010641:	add    BYTE PTR fs:[rax],al
   140010644:	mov    ah,0xda
   140010646:	add    BYTE PTR [rax],al
   140010648:	add    BYTE PTR [rax],al
   14001064a:	add    BYTE PTR [rax],al
   14001064c:	adc    DWORD PTR [rcx],edx
   14001064e:	(bad)  
   14001064f:	add    BYTE PTR [rcx],dl
   140010651:	xor    al,0xa
   140010653:	add    BYTE PTR [rcx],dl
   140010655:	xor    cl,BYTE PTR [rip+0xa700bc0]        # 0x14a71121b
   14001065b:	(bad)  
   14001065c:	mov    eax,0x1000029
   140010661:	add    BYTE PTR [rax],al
   140010663:	add    BYTE PTR [rdi-0x2cffff9b],ch
   140010669:	add    BYTE PTR gs:[rax],al
   14001066c:	scas   eax,DWORD PTR es:[rdi]
   14001066d:	fild   DWORD PTR [rax]
   14001066f:	add    BYTE PTR [rax],al
   140010671:	add    BYTE PTR [rax],al
   140010673:	add    BYTE PTR [rcx],al
   140010675:	clts   
   140010677:	add    BYTE PTR [rdi],cl
   140010679:	or     eax,DWORD PTR fs:[rax]
   14001067c:	sysenter 
   14001067e:	or     al,BYTE PTR [rax]
   140010680:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140010683:	jo     0x140010686
   140010685:	or     al,BYTE PTR [rax+rax*1]
   140010688:	or     dh,BYTE PTR [rsi+rax*1]
   14001068b:	add    BYTE PTR [rdx],cl
   14001068d:	xor    al,BYTE PTR [rsi]
   14001068f:	jo     0x1400106a2
   140010691:	or     al,BYTE PTR [rax+rax*1]
   140010694:	or     dh,BYTE PTR [rsi+rax*1]
   140010697:	add    BYTE PTR [rdx],cl
   140010699:	xor    al,BYTE PTR [rsi]
   14001069b:	jo     0x140010655
   14001069d:	sub    DWORD PTR [rax],eax
   14001069f:	add    BYTE PTR [rdx],al
   1400106a1:	add    BYTE PTR [rax],al
   1400106a3:	add    BYTE PTR [rsi+0x6e],dl
   1400106a6:	add    BYTE PTR [rax],al
   1400106a8:	(bad)  
   1400106a9:	outs   dx,BYTE PTR ds:[rsi]
   1400106aa:	add    BYTE PTR [rax],al
   1400106ac:	int    0xda
   1400106ae:	add    BYTE PTR [rax],al
   1400106b0:	add    BYTE PTR [rax],al
   1400106b2:	add    BYTE PTR [rax],al
   1400106b4:	jne    0x140010724
   1400106b6:	add    BYTE PTR [rax],al
   1400106b8:	pushf  
   1400106b9:	outs   dx,BYTE PTR ds:[rsi]
   1400106ba:	add    BYTE PTR [rax],al
   1400106bc:	in     eax,dx
   1400106bd:	fiadd  DWORD PTR [rax]
   1400106bf:	add    BYTE PTR [rax],al
   1400106c1:	add    BYTE PTR [rax],al
   1400106c3:	add    BYTE PTR [rcx],dl
   1400106c5:	adc    eax,DWORD PTR [rax+rax*1]
   1400106c8:	adc    esi,DWORD PTR [rdi+rax*1]
   1400106cb:	add    BYTE PTR [rbx],dl
   1400106cd:	xor    cl,BYTE PTR [rdi]
   1400106cf:	jo     0x140010689
   1400106d1:	sub    DWORD PTR [rax],eax
   1400106d3:	add    BYTE PTR [rdx],al
   1400106d5:	add    BYTE PTR [rax],al
   1400106d7:	add    ah,bh
   1400106d9:	outs   dx,DWORD PTR ds:[rsi]
   1400106da:	add    BYTE PTR [rax],al
   1400106dc:	sub    DWORD PTR [rax+0x0],esi
   1400106df:	add    ch,cl
   1400106e1:	fiadd  DWORD PTR [rax]
   1400106e3:	add    BYTE PTR [rax],al
   1400106e5:	add    BYTE PTR [rax],al
   1400106e7:	add    BYTE PTR [rbx],bh
   1400106e9:	jo     0x1400106eb
   1400106eb:	add    BYTE PTR [rdx+0x70],dh
   1400106ee:	add    BYTE PTR [rax],al
   1400106f0:	in     eax,dx
   1400106f1:	fiadd  DWORD PTR [rax]
   1400106f3:	add    BYTE PTR [rax],al
   1400106f5:	add    BYTE PTR [rax],al
   1400106f7:	add    BYTE PTR [rcx],al
   1400106f9:	or     al,BYTE PTR [rax+rax*1]
   1400106fc:	or     dh,BYTE PTR [rax+rcx*1]
   1400106ff:	add    BYTE PTR [rdx],cl
   140010701:	xor    al,BYTE PTR [rsi]
   140010703:	jo     0x14001070e
   140010705:	add    al,0x1
   140010707:	add    BYTE PTR [rdx+rax*2],al
   14001070a:	add    BYTE PTR [rax],al
   14001070c:	mov    eax,0x1000029
   140010711:	add    BYTE PTR [rax],al
   140010713:	add    BYTE PTR [rdi+0x72],dl
   140010716:	add    BYTE PTR [rax],al
   140010718:	mov    dh,BYTE PTR [rdx+0x0]
   14001071b:	add    BYTE PTR [rax],dl
   14001071d:	fild   DWORD PTR [rax]
   14001071f:	add    BYTE PTR [rdx+0x1000072],cl
   140010725:	and    al,0xa
   140010727:	add    BYTE PTR [rsp+rsi*1],ah
   14001072a:	sbb    DWORD PTR [rax],eax
   14001072c:	and    al,0xf2
   14001072e:	sbb    dh,al
   140010730:	sbb    al,ah
   140010732:	(bad)  
   140010733:	rcl    BYTE PTR [rax+rax*8],1
   140010736:	adc    dh,BYTE PTR [rax+0x11]
   140010739:	(bad)  
   14001073a:	adc    BYTE PTR [rax+0x11],dl
   14001073d:	or     al,BYTE PTR [rax+rax*1]
   140010740:	or     dh,BYTE PTR [rdx+rcx*1]
   140010743:	add    BYTE PTR [rdx],cl
   140010745:	jb     0x14001074d
   140010747:	jo     0x140010701
   140010749:	sub    DWORD PTR [rax],eax
   14001074b:	add    BYTE PTR [rcx],al
   14001074d:	add    BYTE PTR [rax],al
   14001074f:	add    BYTE PTR [rbp-0x3fffff86],bl
   140010755:	jp     0x140010757
   140010757:	add    BYTE PTR [rdx],dh
   140010759:	fild   DWORD PTR [rax]
   14001075b:	add    BYTE PTR [rax],al
   14001075d:	add    BYTE PTR [rax],al
   14001075f:	add    BYTE PTR [rcx],al
   140010761:	sbb    DWORD PTR [rdx],ecx
   140010763:	add    BYTE PTR [rcx],bl
   140010765:	je     0x140010774
   140010767:	add    BYTE PTR [rcx],bl
   140010769:	fs or  al,0x0
   14001076c:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   140010770:	sbb    DWORD PTR [rdx+rcx*1],esi
   140010773:	add    BYTE PTR [rcx],bl
   140010775:	jb     0x14001078c
   140010777:	ror    BYTE PTR [rcx],0x4
   14001077a:	add    DWORD PTR [rax],eax
   14001077c:	add    al,0x42
   14001077e:	add    BYTE PTR [rax],al
   140010780:	mov    eax,0x1000029
   140010785:	add    BYTE PTR [rax],al
   140010787:	add    BYTE PTR [rcx-0x42ffff83],bh
   14001078d:	jge    0x14001078f
   14001078f:	add    BYTE PTR [rcx],al
   140010791:	add    BYTE PTR [rax],al
   140010793:	add    BYTE PTR [rbp+0x1100007d],bh
   140010799:	(bad)  
   14001079a:	or     al,BYTE PTR [rax]
   14001079c:	(bad)  
   14001079d:	fs (bad) 
   14001079f:	add    BYTE PTR [rdi],dl
   1400107a1:	xor    al,0xd
   1400107a3:	add    BYTE PTR [rdi],dl
   1400107a5:	push   rdx
   1400107a6:	adc    esi,eax
   1400107a8:	adc    eax,esp
   1400107aa:	(bad)  
   1400107ac:	or     eax,0xb8700bc0
   1400107b1:	sub    DWORD PTR [rax],eax
   1400107b3:	add    BYTE PTR [rcx],al
   1400107b5:	add    BYTE PTR [rax],al
   1400107b7:	add    BYTE PTR [rcx+0x7f],dl
   1400107ba:	add    BYTE PTR [rax],al
   1400107bc:	fistp  QWORD PTR [rdi+0x0]
   1400107bf:	add    BYTE PTR [rbx-0x25],bh
   1400107c2:	add    BYTE PTR [rax],al
   1400107c4:	add    BYTE PTR [rax],al
   1400107c6:	add    BYTE PTR [rax],al
   1400107c8:	adc    DWORD PTR [rcx],ebx
   1400107ca:	or     al,BYTE PTR [rax]
   1400107cc:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   1400107d0:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   1400107d4:	sbb    DWORD PTR [rax+rcx*1],esi
   1400107d7:	add    BYTE PTR [rcx],bl
   1400107d9:	xor    dl,BYTE PTR [rip+0x11d013e0]        # 0x151d11bbf
   1400107df:	sar    BYTE PTR [rax+0x1000029],0x0
   1400107e6:	add    BYTE PTR [rax],al
   1400107e8:	ret    0x80
   1400107eb:	add    BYTE PTR [rax-0x66ffff7f],cl
   1400107f1:	fild   DWORD PTR [rax]
   1400107f3:	add    BYTE PTR [rax],al
   1400107f5:	add    BYTE PTR [rax],al
   1400107f7:	add    BYTE PTR [rcx],al
   1400107f9:	add    BYTE PTR [rax],al
   1400107fb:	add    BYTE PTR [rcx],bl
   1400107fd:	(bad)  
   1400107fe:	or     BYTE PTR [rax],al
   140010800:	setb   BYTE PTR [rbx]
   140010803:	loopne 0x14001080e
   140010805:	rol    BYTE PTR [rdi],1
   140010807:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143610c7e
   14001080e:	add    dh,BYTE PTR [rax]
   140010810:	test   BYTE PTR [rbp+0x0],bh
   140010813:	add    BYTE PTR [rax+0x0],cl
   140010816:	add    BYTE PTR [rax],al
   140010818:	sbb    DWORD PTR [rsi],esi
   14001081a:	or     eax,DWORD PTR [rax]
   14001081c:	and    eax,0x25037134
   140010821:	add    DWORD PTR [rsi+0x3],esp
   140010824:	adc    al,dh
   140010826:	(bad)  
   140010827:	loopne 0x140010835
   140010829:	ror    BYTE PTR [rdx],1
   14001082b:	ror    BYTE PTR [rax],0x70
   14001082e:	(bad)  
   14001082f:	(bad)  
   140010830:	(bad)  
   140010831:	push   rax
   140010832:	add    BYTE PTR [rax],al
   140010834:	test   BYTE PTR [rbp+0x0],bh
   140010837:	add    BYTE PTR [rax],ah
   140010839:	sbb    eax,DWORD PTR [rax]
   14001083b:	add    BYTE PTR [rcx],dl
   14001083d:	adc    eax,0x34150008
   140010842:	or     eax,DWORD PTR [rax]
   140010844:	adc    eax,0xfe01132
   140010849:	ror    BYTE PTR [rip+0xa700bc0],1        # 0x14a71140f
   14001084f:	(bad)  
   140010850:	mov    eax,0x1000029
   140010855:	add    BYTE PTR [rax],al
   140010857:	add    BYTE PTR [rcx-0x44ffff71],cl
   14001085d:	pop    QWORD PTR [rax]
   14001085f:	add    BYTE PTR [rdx+rbx*8+0x0],dh
   140010866:	add    BYTE PTR [rax],al
   140010868:	adc    DWORD PTR [rcx],edx
   14001086a:	(bad)  
   14001086b:	add    BYTE PTR [rcx],dl
   14001086d:	xor    al,0xa
   14001086f:	add    BYTE PTR [rcx],dl
   140010871:	xor    cl,BYTE PTR [rip+0xa700bc0]        # 0x14a711437
   140010877:	(bad)  
   140010878:	mov    eax,0x1000029
   14001087d:	add    BYTE PTR [rax],al
   14001087f:	add    BYTE PTR [rbx-0x70],bl
   140010882:	add    BYTE PTR [rax],al
   140010884:	lahf   
   140010885:	nop
   140010886:	add    BYTE PTR [rax],al
   140010888:	scas   eax,DWORD PTR es:[rdi]
   140010889:	fild   DWORD PTR [rax]
   14001088b:	add    BYTE PTR [rax],al
   14001088d:	add    BYTE PTR [rax],al
   14001088f:	add    BYTE PTR [rcx],bl
   140010891:	xor    BYTE PTR [rbx],cl
   140010893:	add    BYTE PTR [rdi],bl
   140010895:	xor    al,0x64
   140010897:	add    BYTE PTR [rdi],bl
   140010899:	add    DWORD PTR [rdx+0x0],ebx
   14001089c:	adc    al,dh
   14001089e:	(bad)  
   14001089f:	loopne 0x1400108ad
   1400108a1:	ror    BYTE PTR [rdx],1
   1400108a3:	ror    BYTE PTR [rax],0x70
   1400108a6:	(bad)  
   1400108a7:	(bad)  
   1400108a8:	(bad)  
   1400108a9:	push   rax
   1400108aa:	add    BYTE PTR [rax],al
   1400108ac:	test   BYTE PTR [rbp+0x0],bh
   1400108af:	add    al,cl
   1400108b1:	add    al,BYTE PTR [rax]
   1400108b3:	add    BYTE PTR [rcx],dl
   1400108b5:	adc    eax,0x34150008
   1400108ba:	or     eax,DWORD PTR [rax]
   1400108bc:	adc    eax,0xfe01132
   1400108c1:	ror    BYTE PTR [rip+0xa700bc0],1        # 0x14a711487
   1400108c7:	(bad)  
   1400108c8:	mov    eax,0x1000029
   1400108cd:	add    BYTE PTR [rax],al
   1400108cf:	add    cl,dh
   1400108d1:	pushf  
   1400108d2:	add    BYTE PTR [rax],al
   1400108d4:	and    eax,0xb400009d
   1400108d9:	fiadd  DWORD PTR [rax]
   1400108db:	add    BYTE PTR [rax],al
   1400108dd:	add    BYTE PTR [rax],al
   1400108df:	add    BYTE PTR [rcx],bl
   1400108e1:	(bad)  
   1400108e2:	or     DWORD PTR [rax],eax
   1400108e4:	(bad)  
   1400108e5:	je     0x14001089c
   1400108e7:	add    BYTE PTR [rsi],bl
   1400108e9:	fs mov ah,0x0
   1400108ec:	(bad)  
   1400108ed:	xor    al,0xb3
   1400108ef:	add    BYTE PTR [rsi],bl
   1400108f1:	add    DWORD PTR [rax+0x501000],esi
   1400108f7:	add    BYTE PTR [rbp+rdi*2+0x5700000],al
   1400108fe:	add    BYTE PTR [rax],al
   140010900:	adc    DWORD PTR [rdx],ecx
   140010902:	add    al,0x0
   140010904:	or     dh,BYTE PTR [rdi+rax*1]
   140010907:	add    BYTE PTR [rdx],cl
   140010909:	xor    al,BYTE PTR [rsi]
   14001090b:	jo     0x1400108c5
   14001090d:	sub    DWORD PTR [rax],eax
   14001090f:	add    BYTE PTR [rcx],al
   140010911:	add    BYTE PTR [rax],al
   140010913:	add    dh,cl
   140010915:	movabs al,ds:0xdbc80000a1250000
   14001091e:	add    BYTE PTR [rax],al
   140010920:	add    BYTE PTR [rax],al
   140010922:	add    BYTE PTR [rax],al
   140010924:	add    DWORD PTR [rsi],eax
   140010926:	add    al,BYTE PTR [rax]
   140010928:	(bad)  
   140010929:	jb     0x14001092d
   14001092b:	xor    BYTE PTR [rcx],bl
   14001092d:	(bad)  
   14001092e:	or     BYTE PTR [rax],al
   140010930:	adc    BYTE PTR [rax+rdx*1],dh
   140010933:	add    BYTE PTR [rax],dl
   140010935:	jb     0x140010943
   140010937:	ror    BYTE PTR [rdx],1
   140010939:	ror    BYTE PTR [rax],0x70
   14001093c:	(bad)  
   14001093d:	(bad)  
   14001093e:	(bad)  
   14001093f:	push   rax
   140010940:	test   BYTE PTR [rbp+0x0],bh
   140010943:	add    BYTE PTR [rax],bh
   140010945:	add    BYTE PTR [rax],al
   140010947:	add    BYTE PTR [rcx],dl
   140010949:	sbb    DWORD PTR [rdx],ecx
   14001094b:	add    BYTE PTR [rcx],bl
   14001094d:	(bad)  
   14001094e:	or     eax,DWORD PTR [rax]
   140010950:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140010954:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140010958:	sbb    DWORD PTR [rax+rcx*1],esi
   14001095b:	add    BYTE PTR [rcx],bl
   14001095d:	push   rdx
   14001095e:	adc    eax,0x29b8d0
   140010963:	add    BYTE PTR [rcx],al
   140010965:	add    BYTE PTR [rax],al
   140010967:	add    BYTE PTR [riz*4-0x5a200000],dh
   14001096e:	add    BYTE PTR [rax],al
   140010970:	enter  0xdb,0x0
   140010974:	add    BYTE PTR [rax],al
   140010976:	add    BYTE PTR [rax],al
   140010978:	adc    DWORD PTR [rsi],eax
   14001097a:	add    al,BYTE PTR [rax]
   14001097c:	(bad)  
   14001097d:	xor    al,BYTE PTR [rdx]
   14001097f:	xor    BYTE PTR [rax+0x1000029],bh
   140010985:	add    BYTE PTR [rax],al
   140010987:	add    BYTE PTR [rdi-0x4affff57],bl
   14001098d:	test   eax,0xdbe30000
   140010992:	add    BYTE PTR [rax],al
   140010994:	add    BYTE PTR [rax],al
   140010996:	add    BYTE PTR [rax],al
   140010998:	sbb    DWORD PTR [rcx],esp
   14001099a:	or     BYTE PTR [rax],al
   14001099c:	adc    dl,BYTE PTR [rdi+rcx*1+0x0]
   1400109a0:	adc    dh,BYTE PTR [rsi+rcx*1]
   1400109a3:	add    BYTE PTR [rdx],dl
   1400109a5:	jb     0x1400109b5
   1400109a7:	ror    BYTE PTR [rax+rsi*2],0xb
   1400109ab:	(bad)  
   1400109ac:	test   BYTE PTR [rbp+0x0],bh
   1400109af:	add    BYTE PTR [rax],dh
   1400109b1:	add    BYTE PTR [rax],al
   1400109b3:	add    BYTE PTR [rcx],al
   1400109b5:	sbb    ecx,DWORD PTR [rdx]
   1400109b7:	add    BYTE PTR [rbx],bl
   1400109b9:	(bad)  
   1400109ba:	ltr    WORD PTR [rbx]
   1400109bd:	je     0x1400109cd
   1400109bf:	add    BYTE PTR [rbx],bl
   1400109c1:	fs or  eax,0xc341b00
   1400109c7:	add    BYTE PTR [rbx],bl
   1400109c9:	xchg   edx,eax
   1400109ca:	adc    al,0x50
   1400109cc:	add    DWORD PTR [rax],ebx
   1400109ce:	or     al,BYTE PTR [rax]
   1400109d0:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   1400109d4:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   1400109d8:	sbb    BYTE PTR [rax+rcx*1],dh
   1400109db:	add    BYTE PTR [rax],bl
   1400109dd:	xor    dl,BYTE PTR [rax+rdx*8]
   1400109e0:	adc    al,al
   1400109e2:	adc    BYTE PTR [rax+0x19],dh
   1400109e5:	xor    BYTE PTR [rbx],cl
   1400109e7:	add    BYTE PTR [rdi],bl
   1400109e9:	xor    al,0xa6
   1400109eb:	add    BYTE PTR [rdi],bl
   1400109ed:	add    DWORD PTR [rax+rax*1-0x1ff10ff0],ebx
   1400109f4:	or     al,0xd0
   1400109f6:	or     al,al
   1400109f8:	or     BYTE PTR [rax+0x7],dh
   1400109fb:	(bad)  
   1400109fc:	(bad)  
   1400109fd:	push   rax
   1400109fe:	add    BYTE PTR [rax],al
   140010a00:	test   BYTE PTR [rbp+0x0],bh
   140010a03:	add    al,dl
   140010a05:	add    al,0x0
   140010a07:	add    BYTE PTR [rcx],al
   140010a09:	clts   
   140010a0b:	add    BYTE PTR [rdi],cl
   140010a0d:	push   rsp
   140010a0e:	(bad)  
   140010a0f:	add    BYTE PTR [rdi],cl
   140010a11:	xor    al,0x6
   140010a13:	add    BYTE PTR [rdi],cl
   140010a15:	xor    cl,BYTE PTR [rbx]
   140010a17:	jo     0x140010a2a
   140010a19:	sbb    DWORD PTR [rdx],ecx
   140010a1b:	add    BYTE PTR [rcx],bl
   140010a1d:	(bad)  
   140010a1e:	or     DWORD PTR [rax],eax
   140010a20:	sbb    DWORD PTR [rax+rcx*1+0x0],esi
   140010a24:	sbb    DWORD PTR [rdi+rax*1+0x0],esp
   140010a28:	sbb    DWORD PTR [rsi+rax*1],esi
   140010a2b:	add    BYTE PTR [rcx],bl
   140010a2d:	xor    dl,BYTE PTR [rip+0x29b8e0]        # 0x1402ac313
   140010a33:	add    BYTE PTR [rcx],al
   140010a35:	add    BYTE PTR [rax],al
   140010a37:	add    BYTE PTR [rsi-0x40ffff44],bl
   140010a3d:	mov    esp,0xdbfe0000
   140010a42:	add    BYTE PTR [rax],al
   140010a44:	add    BYTE PTR [rax],al
   140010a46:	add    BYTE PTR [rax],al
   140010a48:	adc    DWORD PTR [rcx],ebx
   140010a4a:	or     al,BYTE PTR [rax]
   140010a4c:	sbb    DWORD PTR [rsi+rcx*1+0x0],esi
   140010a50:	sbb    DWORD PTR [rbp+rcx*1+0x0],esp
   140010a54:	sbb    DWORD PTR [rsp+rcx*1],esi
   140010a57:	add    BYTE PTR [rcx],bl
   140010a59:	jb     0x140010a70
   140010a5b:	loopne 0x140010a70
   140010a5d:	rcl    BYTE PTR [rcx],1
   140010a5f:	sar    BYTE PTR [rax+0x2000029],0x0
   140010a66:	add    BYTE PTR [rax],al
   140010a68:	mov    ebp,0xe40000bd
   140010a6d:	mov    ebp,0xdc190000
   140010a72:	add    BYTE PTR [rax],al
   140010a74:	add    BYTE PTR [rax],al
   140010a76:	add    BYTE PTR [rax],al
   140010a78:	fs mov ebp,0xbf050000
   140010a7e:	add    BYTE PTR [rax],al
   140010a80:	cmp    esp,ebx
   140010a82:	add    BYTE PTR [rax],al
   140010a84:	add    BYTE PTR [rax],al
   140010a86:	add    BYTE PTR [rax],al
   140010a88:	add    DWORD PTR [rax],eax
   140010a8a:	add    BYTE PTR [rax],al
   140010a8c:	add    DWORD PTR [rip+0x34150006],edx        # 0x174160a98
   140010a92:	adc    BYTE PTR [rax],al
   140010a94:	adc    eax,0xd700eb2
   140010a99:	(bad)  
   140010a9a:	or     al,0x50
   140010a9c:	add    DWORD PTR [rdi],ecx
   140010a9e:	(bad)  
   140010a9f:	add    BYTE PTR [rdi],cl
   140010aa1:	or     eax,DWORD PTR fs:[rax]
   140010aa4:	sysenter 
   140010aa6:	or     al,BYTE PTR [rax]
   140010aa8:	(bad)  
   140010aaa:	or     esi,DWORD PTR [rax+0x1]
   140010aad:	sbb    eax,0x741d000c
   140010ab2:	or     eax,DWORD PTR [rax]
   140010ab4:	sbb    eax,0x1d000a64
   140010ab9:	push   rsp
   140010aba:	or     DWORD PTR [rax],eax
   140010abc:	sbb    eax,0x1d000834
   140010ac1:	xor    bl,BYTE PTR [rcx]
   140010ac3:	lock (bad) 
   140010ac5:	rcl    BYTE PTR [rip+0x20501c0],1        # 0x142060c8b
   140010acb:	add    BYTE PTR [rip+0x1000134],al        # 0x141010c05
   140010ad1:	adc    al,BYTE PTR [rax+rax*1]
   140010ad4:	adc    dh,BYTE PTR [rcx*1+0xb921200]
   140010adb:	push   rax
   140010adc:	add    DWORD PTR [rcx],ecx
   140010ade:	add    DWORD PTR [rax],eax
   140010ae0:	or     DWORD PTR [rdx+0x0],esp
   140010ae3:	add    BYTE PTR [rax],al
   140010ae5:	add    BYTE PTR [rax],al
   140010ae7:	add    BYTE PTR [rcx],al
   140010ae9:	add    al,0x1
   140010aeb:	add    BYTE PTR [rdx+rdx*1],al
   140010aee:	add    BYTE PTR [rax],al
   140010af0:	sbb    DWORD PTR [rip+0x741f450d],ebp        # 0x1b4205003
   140010af6:	adc    al,BYTE PTR [rax]
   140010af8:	sbb    esp,DWORD PTR [rcx+rdx*1+0x0]
   140010afc:	(bad)  
   140010afd:	xor    al,0x10
   140010aff:	add    BYTE PTR [rbx],dl
   140010b01:	rex.XB (bad) 
   140010b03:	xchg   edx,eax
   140010b04:	or     dh,al
   140010b06:	or     al,ah
   140010b08:	(bad)  
   140010b09:	rol    BYTE PTR [rax+rax*8],1
   140010b0c:	add    dl,BYTE PTR [rax+0x0]
   140010b0f:	add    BYTE PTR [rbp+rdi*2+0x480000],al
   140010b16:	add    BYTE PTR [rax],al
   140010b18:	add    DWORD PTR [rdi],ecx
   140010b1a:	(bad)  
   140010b1b:	add    BYTE PTR [rdi],cl
   140010b1d:	adc    DWORD PTR fs:[rax],eax
   140010b20:	sysenter 
   140010b22:	adc    BYTE PTR [rax],al
   140010b24:	psrld  mm1,QWORD PTR [rbx]
   140010b27:	jo     0x140010b42
   140010b29:	sub    eax,0x741f350d
   140010b2e:	adc    BYTE PTR [rax],al
   140010b30:	sbb    esp,DWORD PTR [rdi+rcx*1+0x0]
   140010b34:	(bad)  
   140010b35:	xor    al,0xe
   140010b37:	add    BYTE PTR [rbx],dl
   140010b39:	xor    ecx,DWORD PTR [rsi]
   140010b3b:	jb     0x140010b47
   140010b3d:	lock or al,ah
   140010b40:	(bad)  
   140010b41:	rol    BYTE PTR [rax+rax*8],1
   140010b44:	add    dl,BYTE PTR [rax+0x0]
   140010b47:	add    BYTE PTR [rbp+rdi*2+0x300000],al
   140010b4e:	add    BYTE PTR [rax],al
   140010b50:	add    DWORD PTR [rdi],ecx
   140010b52:	(bad)  
   140010b53:	add    BYTE PTR [rdi],cl
   140010b55:	str    WORD PTR fs:[rdi]
   140010b59:	xor    al,0xe
   140010b5b:	add    BYTE PTR [rdi],cl
   140010b5d:	mov    dl,0xb
   140010b5f:	jo     0x140010b62
   140010b61:	(bad)  
   140010b62:	add    al,BYTE PTR [rax]
   140010b64:	(bad)  
   140010b65:	xor    cl,BYTE PTR [rdx]
   140010b67:	xor    BYTE PTR [rcx],al
   140010b69:	or     al,BYTE PTR [rdx]
   140010b6b:	add    BYTE PTR [rdx],cl
   140010b6d:	xor    al,BYTE PTR [rsi]
   140010b6f:	xor    BYTE PTR [rcx],al
   140010b71:	adc    cl,BYTE PTR [rax]
   140010b73:	add    BYTE PTR [rdx],dl
   140010b75:	push   rsp
   140010b76:	or     al,BYTE PTR [rax]
   140010b78:	adc    dh,BYTE PTR [rax+rcx*1]
   140010b7b:	add    BYTE PTR [rdx],dl
   140010b7d:	xor    cl,BYTE PTR [rsi]
   140010b7f:	ror    BYTE PTR [rax+rsi*2],0xb
   140010b83:	(bad)  
   140010b84:	add    DWORD PTR [rdi],ecx
   140010b86:	(bad)  
   140010b87:	add    BYTE PTR [rdi],cl
   140010b89:	or     DWORD PTR fs:[rax],eax
   140010b8c:	sysenter 
   140010b8e:	or     BYTE PTR [rax],al
   140010b90:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140010b93:	jo     0x140010b95
   140010b95:	add    BYTE PTR [rax],al
   140010b97:	add    BYTE PTR [rcx],al
   140010b99:	add    BYTE PTR [rax],al
   140010b9b:	add    BYTE PTR [rax],al
   140010b9d:	add    BYTE PTR [rax],al
   140010b9f:	add    BYTE PTR [rcx],al
   140010ba1:	add    BYTE PTR [rax],al
   140010ba3:	add    BYTE PTR [rax],al
   140010ba5:	add    BYTE PTR [rax],al
   140010ba7:	add    BYTE PTR [rcx],al
   140010ba9:	add    BYTE PTR [rax],al
   140010bab:	add    BYTE PTR [rcx],al
   140010bad:	add    al,0x1
   140010baf:	add    BYTE PTR [rdx+rax*4],al
   140010bb2:	add    BYTE PTR [rax],al
   140010bb4:	add    DWORD PTR [rdi],ecx
   140010bb6:	(bad)  
   140010bb7:	add    BYTE PTR [rdi],cl
   140010bb9:	fs (bad) 
   140010bbb:	add    BYTE PTR [rdi],cl
   140010bbd:	xor    al,0x6
   140010bbf:	add    BYTE PTR [rdi],cl
   140010bc1:	xor    cl,BYTE PTR [rbx]
   140010bc3:	jo     0x140010bde
   140010bc5:	sub    al,0x2
   140010bc7:	add    BYTE PTR [rdx],bl
   140010bc9:	add    DWORD PTR [rcx+0x7d8400],ecx
   140010bcf:	add    BYTE PTR [rax],dh
   140010bd1:	add    al,0x0
   140010bd3:	add    BYTE PTR [rcx],bl
   140010bd5:	and    eax,0x74170007
   140010bda:	xor    al,0x0
   140010bdc:	(bad)  
   140010bdd:	xor    al,0x33
   140010bdf:	add    BYTE PTR [rdi],dl
   140010be1:	add    DWORD PTR [rax],esi
   140010be3:	add    BYTE PTR [rbx],cl
   140010be5:	push   rax
   140010be6:	add    BYTE PTR [rax],al
   140010be8:	test   BYTE PTR [rbp+0x0],bh
   140010beb:	add    BYTE PTR [rax+0x1],dh
   140010bee:	add    BYTE PTR [rax],al
   140010bf0:	add    DWORD PTR [rdi],ebx
   140010bf2:	or     al,0x0
   140010bf4:	(bad)  
   140010bf5:	je     0x140010c08
   140010bf7:	add    BYTE PTR [rdi],bl
   140010bf9:	adc    BYTE PTR fs:[rax],al
   140010bfc:	(bad)  
   140010bfd:	xor    al,0xf
   140010bff:	add    BYTE PTR [rdi],bl
   140010c01:	jb     0x140010c1b
   140010c03:	lock (bad) 
   140010c05:	loopne 0x140010c1b
   140010c07:	rcl    BYTE PTR [rdx],1
   140010c09:	rcl    BYTE PTR [rax],0x50
   140010c0c:	sbb    DWORD PTR [rdx],esi
   140010c0e:	or     eax,0x75742000
   140010c13:	add    BYTE PTR [rax],ah
   140010c15:	fs je  0x140010c18
   140010c18:	and    BYTE PTR [rbx+rsi*2+0x0],dl
   140010c1c:	and    BYTE PTR [rdx+rsi*2],dh
   140010c1f:	add    BYTE PTR [rax],ah
   140010c21:	add    DWORD PTR [rsi+0x0],ebp
   140010c24:	sbb    eax,esp
   140010c26:	(bad)  
   140010c27:	rcl    BYTE PTR [rip+0xffffffff840000c0],1        # 0xc4010ced
   140010c2d:	jge    0x140010c2f
   140010c2f:	add    BYTE PTR [rax+0x3],ah
   140010c32:	add    BYTE PTR [rax],al
   140010c34:	add    DWORD PTR [rcx+rax*1],eax
   140010c37:	add    BYTE PTR [rdx+rax*2],al
   140010c3a:	add    BYTE PTR [rax],al
   140010c3c:	js     0x140010c4a
   140010c3e:	add    DWORD PTR [rax],eax
	...
   140010c48:	js     0x140010c5a
   140010c4a:	add    DWORD PTR [rax],eax
   140010c4c:	add    al,ah
   140010c4e:	add    BYTE PTR [rax],al
   140010c50:	lock (bad) 
   140010c52:	add    DWORD PTR [rax],eax
	...
   140010c5c:	xchg   edx,eax
   140010c5d:	adc    BYTE PTR [rcx],al
   140010c5f:	add    BYTE PTR [rax-0x1e],bh
	...
   140010c76:	add    BYTE PTR [rax],al
   140010c78:	add    BYTE PTR [rdi],cl
   140010c7a:	add    DWORD PTR [rax],eax
   140010c7c:	add    BYTE PTR [rax],al
   140010c7e:	add    BYTE PTR [rax],al
   140010c80:	(bad)  
   140010c81:	sgdt   [rax]
   140010c84:	add    BYTE PTR [rax],al
   140010c86:	add    BYTE PTR [rax],al
   140010c88:	and    BYTE PTR [rdi],cl
   140010c8a:	add    DWORD PTR [rax],eax
   140010c8c:	add    BYTE PTR [rax],al
   140010c8e:	add    BYTE PTR [rax],al
   140010c90:	cmp    cl,BYTE PTR [rdi]
   140010c92:	add    DWORD PTR [rax],eax
   140010c94:	add    BYTE PTR [rax],al
   140010c96:	add    BYTE PTR [rax],al
   140010c98:	rex.WR sgdt [rax]
   140010c9c:	add    BYTE PTR [rax],al
   140010c9e:	add    BYTE PTR [rax],al
   140010ca0:	(bad)  
   140010ca1:	sgdt   [rax]
   140010ca4:	add    BYTE PTR [rax],al
   140010ca6:	add    BYTE PTR [rax],al
   140010ca8:	jbe    0x140010cb9
   140010caa:	add    DWORD PTR [rax],eax
   140010cac:	add    BYTE PTR [rax],al
   140010cae:	add    BYTE PTR [rax],al
   140010cb0:	xchg   edx,eax
   140010cb1:	sgdt   [rax]
   140010cb4:	add    BYTE PTR [rax],al
   140010cb6:	add    BYTE PTR [rax],al
   140010cb8:	scas   al,BYTE PTR es:[rdi]
   140010cb9:	sgdt   [rax]
   140010cbc:	add    BYTE PTR [rax],al
   140010cbe:	add    BYTE PTR [rax],al
   140010cc0:	(bad)  
   140010cc1:	sgdt   [rax]
   140010cc4:	add    BYTE PTR [rax],al
   140010cc6:	add    BYTE PTR [rax],al
   140010cc8:	fimul  DWORD PTR [rdi]
   140010cca:	add    DWORD PTR [rax],eax
   140010ccc:	add    BYTE PTR [rax],al
   140010cce:	add    BYTE PTR [rax],al
   140010cd0:	test   BYTE PTR [rdi],0x1
   140010cd3:	add    BYTE PTR [rax],al
   140010cd5:	add    BYTE PTR [rax],al
   140010cd7:	add    BYTE PTR [rax+rdx*1],cl
   140010cda:	add    DWORD PTR [rax],eax
   140010cdc:	add    BYTE PTR [rax],al
   140010cde:	add    BYTE PTR [rax],al
   140010ce0:	and    BYTE PTR [rax],dl
   140010ce2:	add    DWORD PTR [rax],eax
   140010ce4:	add    BYTE PTR [rax],al
   140010ce6:	add    BYTE PTR [rax],al
   140010ce8:	xor    BYTE PTR [rax],dl
   140010cea:	add    DWORD PTR [rax],eax
   140010cec:	add    BYTE PTR [rax],al
   140010cee:	add    BYTE PTR [rax],al
   140010cf0:	adc    BYTE PTR [rcx],al
   140010cf3:	add    BYTE PTR [rax],al
   140010cf5:	add    BYTE PTR [rax],al
   140010cf7:	add    BYTE PTR [rax+0x10],bl
   140010cfa:	add    DWORD PTR [rax],eax
   140010cfc:	add    BYTE PTR [rax],al
   140010cfe:	add    BYTE PTR [rax],al
   140010d00:	push   0x10
   140010d02:	add    DWORD PTR [rax],eax
   140010d04:	add    BYTE PTR [rax],al
   140010d06:	add    BYTE PTR [rax],al
   140010d08:	sahf   
   140010d09:	adc    BYTE PTR [rcx],al
   140010d0b:	add    BYTE PTR [rax],al
   140010d0d:	add    BYTE PTR [rax],al
   140010d0f:	add    BYTE PTR [rdx+0x110],ch
   140010d15:	add    BYTE PTR [rax],al
   140010d17:	add    BYTE PTR [rsi+0x110],dh
   140010d1d:	add    BYTE PTR [rax],al
   140010d1f:	add    dh,cl
   140010d21:	adc    BYTE PTR [rcx],al
   140010d23:	add    BYTE PTR [rax],al
   140010d25:	add    BYTE PTR [rax],al
   140010d27:	add    dh,ah
   140010d29:	adc    BYTE PTR [rcx],al
   140010d2b:	add    BYTE PTR [rax],al
   140010d2d:	add    BYTE PTR [rax],al
   140010d2f:	add    al,bh
   140010d31:	adc    BYTE PTR [rcx],al
   140010d33:	add    BYTE PTR [rax],al
   140010d35:	add    BYTE PTR [rax],al
   140010d37:	add    BYTE PTR [rdx],cl
   140010d39:	adc    DWORD PTR [rcx],eax
   140010d3b:	add    BYTE PTR [rax],al
   140010d3d:	add    BYTE PTR [rax],al
   140010d3f:	add    BYTE PTR [rsi],bl
   140010d41:	adc    DWORD PTR [rcx],eax
   140010d43:	add    BYTE PTR [rax],al
   140010d45:	add    BYTE PTR [rax],al
   140010d47:	add    BYTE PTR [rdx],bh
   140010d49:	adc    DWORD PTR [rcx],eax
   140010d4b:	add    BYTE PTR [rax],al
   140010d4d:	add    BYTE PTR [rax],al
   140010d4f:	add    BYTE PTR [rax+0x11],bl
   140010d52:	add    DWORD PTR [rax],eax
   140010d54:	add    BYTE PTR [rax],al
   140010d56:	add    BYTE PTR [rax],al
   140010d58:	ins    BYTE PTR es:[rdi],dx
   140010d59:	adc    DWORD PTR [rcx],eax
   140010d5b:	add    BYTE PTR [rax],al
   140010d5d:	add    BYTE PTR [rax],al
   140010d5f:	add    BYTE PTR [rax+0x111],al
   140010d65:	add    BYTE PTR [rax],al
   140010d67:	add    BYTE PTR [rdx+0x111],bl
   140010d6d:	add    BYTE PTR [rax],al
   140010d6f:	add    BYTE PTR [rsi+0x111],ch
   140010d75:	add    BYTE PTR [rax],al
   140010d77:	add    BYTE PTR [rcx+rdx*1+0x1],bh
   140010d7e:	add    BYTE PTR [rax],al
   140010d80:	in     al,0x11
   140010d82:	add    DWORD PTR [rax],eax
   140010d84:	add    BYTE PTR [rax],al
   140010d86:	add    BYTE PTR [rax],al
   140010d88:	hlt    
   140010d89:	adc    DWORD PTR [rcx],eax
   140010d8b:	add    BYTE PTR [rax],al
   140010d8d:	add    BYTE PTR [rax],al
   140010d8f:	add    BYTE PTR [rdx+rdx*1],al
   140010d92:	add    DWORD PTR [rax],eax
   140010d94:	add    BYTE PTR [rax],al
   140010d96:	add    BYTE PTR [rax],al
   140010d98:	sbb    dl,BYTE PTR [rdx]
   140010d9a:	add    DWORD PTR [rax],eax
   140010d9c:	add    BYTE PTR [rax],al
   140010d9e:	add    BYTE PTR [rax],al
   140010da0:	sub    BYTE PTR [rdx],dl
   140010da2:	add    DWORD PTR [rax],eax
   140010da4:	add    BYTE PTR [rax],al
   140010da6:	add    BYTE PTR [rax],al
   140010da8:	adc    al,BYTE PTR ss:[rcx]
   140010dab:	add    BYTE PTR [rax],al
   140010dad:	add    BYTE PTR [rax],al
   140010daf:	add    BYTE PTR [rax+0x12],cl
   140010db2:	add    DWORD PTR [rax],eax
   140010db4:	add    BYTE PTR [rax],al
   140010db6:	add    BYTE PTR [rax],al
   140010db8:	pop    rsp
   140010db9:	adc    al,BYTE PTR [rcx]
   140010dbb:	add    BYTE PTR [rax],al
   140010dbd:	add    BYTE PTR [rax],al
   140010dbf:	add    BYTE PTR [rax+0x12],ch
   140010dc2:	add    DWORD PTR [rax],eax
   140010dc4:	add    BYTE PTR [rax],al
   140010dc6:	add    BYTE PTR [rax],al
   140010dc8:	jp     0x140010ddc
   140010dca:	add    DWORD PTR [rax],eax
   140010dcc:	add    BYTE PTR [rax],al
   140010dce:	add    BYTE PTR [rax],al
   140010dd0:	mov    BYTE PTR [rdx],dl
   140010dd2:	add    DWORD PTR [rax],eax
   140010dd4:	add    BYTE PTR [rax],al
   140010dd6:	add    BYTE PTR [rax],al
   140010dd8:	(bad)  
   140010dd9:	adc    al,BYTE PTR [rcx]
   140010ddb:	add    BYTE PTR [rax],al
   140010ddd:	add    BYTE PTR [rax],al
   140010ddf:	add    BYTE PTR [rdx+0x112],dh
   140010de5:	add    BYTE PTR [rax],al
   140010de7:	add    BYTE PTR [rdx+0x112],bh
   140010ded:	add    BYTE PTR [rax],al
   140010def:	add    dh,al
   140010df1:	adc    al,BYTE PTR [rcx]
   140010df3:	add    BYTE PTR [rax],al
   140010df5:	add    BYTE PTR [rax],al
   140010df7:	add    al,bl
   140010df9:	adc    al,BYTE PTR [rcx]
   140010dfb:	add    BYTE PTR [rax],al
   140010dfd:	add    BYTE PTR [rax],al
   140010dff:	add    dh,ch
   140010e01:	adc    al,BYTE PTR [rcx]
   140010e03:	add    BYTE PTR [rax],al
   140010e05:	add    BYTE PTR [rax],al
   140010e07:	add    BYTE PTR [rax],cl
   140010e09:	adc    eax,DWORD PTR [rcx]
   140010e0b:	add    BYTE PTR [rax],al
   140010e0d:	add    BYTE PTR [rax],al
   140010e0f:	add    BYTE PTR [rsi],bl
   140010e11:	adc    eax,DWORD PTR [rcx]
   140010e13:	add    BYTE PTR [rax],al
   140010e15:	add    BYTE PTR [rax],al
   140010e17:	add    BYTE PTR [rax],bh
   140010e19:	adc    eax,DWORD PTR [rcx]
   140010e1b:	add    BYTE PTR [rax],al
   140010e1d:	add    BYTE PTR [rax],al
   140010e1f:	add    BYTE PTR [rsi+0x13],al
   140010e22:	add    DWORD PTR [rax],eax
   140010e24:	add    BYTE PTR [rax],al
   140010e26:	add    BYTE PTR [rax],al
   140010e28:	push   rsp
   140010e29:	adc    eax,DWORD PTR [rcx]
   140010e2b:	add    BYTE PTR [rax],al
   140010e2d:	add    BYTE PTR [rax],al
   140010e2f:	add    BYTE PTR [rsi+0x13],bl
   140010e32:	add    DWORD PTR [rax],eax
   140010e34:	add    BYTE PTR [rax],al
   140010e36:	add    BYTE PTR [rax],al
   140010e38:	outs   dx,BYTE PTR ds:[rsi]
   140010e39:	adc    eax,DWORD PTR [rcx]
   140010e3b:	add    BYTE PTR [rax],al
   140010e3d:	add    BYTE PTR [rax],al
   140010e3f:	add    BYTE PTR [rbx+rdx*1+0x1],al
   140010e46:	add    BYTE PTR [rax],al
   140010e48:	nop
   140010e49:	adc    eax,DWORD PTR [rcx]
   140010e4b:	add    BYTE PTR [rax],al
   140010e4d:	add    BYTE PTR [rax],al
   140010e4f:	add    BYTE PTR [rdx+0x113],ch
   140010e55:	add    BYTE PTR [rax],al
   140010e57:	add    BYTE PTR [rdx+0x113],bh
   140010e5d:	add    BYTE PTR [rax],al
   140010e5f:	add    al,dl
   140010e61:	adc    eax,DWORD PTR [rcx]
   140010e63:	add    BYTE PTR [rax],al
   140010e65:	add    BYTE PTR [rax],al
   140010e67:	add    dl,ch
   140010e69:	adc    eax,DWORD PTR [rcx]
   140010e6b:	add    BYTE PTR [rax],al
   140010e6d:	add    BYTE PTR [rax],al
   140010e6f:	add    al,bh
   140010e71:	adc    eax,DWORD PTR [rcx]
   140010e73:	add    BYTE PTR [rax],al
   140010e75:	add    BYTE PTR [rax],al
   140010e77:	add    BYTE PTR [rax],cl
   140010e79:	adc    al,0x1
   140010e7b:	add    BYTE PTR [rax],al
   140010e7d:	add    BYTE PTR [rax],al
   140010e7f:	add    BYTE PTR [rsi],dl
   140010e81:	adc    al,0x1
   140010e83:	add    BYTE PTR [rax],al
   140010e85:	add    BYTE PTR [rax],al
   140010e87:	add    BYTE PTR [rsi],ah
   140010e89:	adc    al,0x1
   140010e8b:	add    BYTE PTR [rax],al
   140010e8d:	add    BYTE PTR [rax],al
   140010e8f:	add    BYTE PTR [rax],bh
   140010e91:	adc    al,0x1
   140010e93:	add    BYTE PTR [rax],al
   140010e95:	add    BYTE PTR [rax],al
   140010e97:	add    BYTE PTR [rsp+rdx*1+0x1],cl
   140010e9b:	add    BYTE PTR [rax],al
   140010e9d:	add    BYTE PTR [rax],al
   140010e9f:	add    BYTE PTR [rax+0x14],bl
   140010ea2:	add    DWORD PTR [rax],eax
   140010ea4:	add    BYTE PTR [rax],al
   140010ea6:	add    BYTE PTR [rax],al
   140010ea8:	(bad)  
   140010ea9:	adc    al,0x1
   140010eab:	add    BYTE PTR [rax],al
   140010ead:	add    BYTE PTR [rax],al
   140010eaf:	add    BYTE PTR [rsi+0x14],ch
   140010eb2:	add    DWORD PTR [rax],eax
   140010eb4:	add    BYTE PTR [rax],al
   140010eb6:	add    BYTE PTR [rax],al
   140010eb8:	adc    BYTE PTR [rcx+rax*1],0x0
   140010ebc:	add    BYTE PTR [rax],al
   140010ebe:	add    BYTE PTR [rax],al
   140010ec0:	nop
   140010ec1:	adc    al,0x1
   140010ec3:	add    BYTE PTR [rax],al
   140010ec5:	add    BYTE PTR [rax],al
   140010ec7:	add    BYTE PTR [rax+0x114],ah
   140010ecd:	add    BYTE PTR [rax],al
   140010ecf:	add    BYTE PTR [rdx+0x114],dh
   140010ed5:	add    BYTE PTR [rax],al
   140010ed7:	add    BYTE PTR [rsi+0x114],bh
   140010edd:	add    BYTE PTR [rax],al
   140010edf:	add    dh,cl
   140010ee1:	adc    al,0x1
	...
   140010eef:	add    BYTE PTR [rsi+0x110],al
	...
   140010efd:	add    BYTE PTR [rax],al
   140010eff:	add    BYTE PTR [rdi],bl
   140010f01:	add    DWORD PTR [rbp+0x78],eax
   140010f04:	imul   esi,DWORD PTR [rax+rdx*2+0x72],0x7365636f
   140010f0c:	jae    0x140010f0e
   140010f0e:	lea    eax,[rcx]
   140010f10:	rex.RXB
   140010f11:	gs je  0x140010f57
   140010f14:	outs   dx,DWORD PTR ds:[rsi]
   140010f15:	ins    DWORD PTR es:[rdi],dx
   140010f16:	ins    DWORD PTR es:[rdi],dx
   140010f17:	(bad)  
   140010f18:	outs   dx,BYTE PTR ds:[rsi]
   140010f19:	imul   r13,QWORD PTR fs:[rsi+0x65],0x47e0057
   140010f22:	push   rbx
   140010f23:	gs je  0x140010f6f
   140010f26:	outs   dx,BYTE PTR ds:[rsi]
   140010f27:	outs   dx,WORD PTR ds:[rsi]
   140010f29:	jb     0x140010f98
   140010f2b:	(bad)  
   140010f2c:	je     0x140010f97
   140010f2e:	outs   dx,DWORD PTR ds:[rsi]
   140010f2f:	outs   dx,BYTE PTR ds:[rsi]
   140010f30:	rex.WX outs dx,DWORD PTR ds:[rsi]
   140010f32:	(bad)  
   140010f33:	rex.WRXB (bad) 
   140010f35:	push   0x65
   140010f37:	movsxd esi,DWORD PTR [rax+rax*1-0x58]
   140010f3b:	add    BYTE PTR [rbx+0x72],al
   140010f3e:	gs (bad) 
   140010f40:	je     0x140010fa7
   140010f42:	push   rax
   140010f43:	jb     0x140010fb4
   140010f45:	movsxd esp,DWORD PTR [rbp+0x73]
   140010f48:	jae    0x140010fa1
   140010f4a:	add    BYTE PTR [rax],al
   140010f4c:	mov    BYTE PTR [rcx],0x47
   140010f4f:	gs je  0x140010f95
   140010f52:	jne    0x140010fc6
   140010f54:	jb     0x140010fbb
   140010f56:	outs   dx,BYTE PTR ds:[rsi]
   140010f57:	je     0x140010fa9
   140010f59:	jb     0x140010fca
   140010f5b:	movsxd esp,DWORD PTR [rbp+0x73]
   140010f5e:	jae    0x140010f60
   140010f60:	or     BYTE PTR [rip+0x74696157],al        # 0x1b46a70bd
   140010f66:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140010f68:	jb     0x140010fbd
   140010f6a:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   140010f71:	push   0x65
   140010f73:	movsxd esi,DWORD PTR [rax+rax*1+0x6d]
   140010f77:	add    DWORD PTR [rdi+0x65],eax
   140010f7a:	outs   dx,BYTE PTR ds:[rsi]
   140010f7b:	gs jb  0x140010fdf
   140010f7e:	je     0x140010fe5
   140010f80:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140010f82:	outs   dx,BYTE PTR ds:[rsi]
   140010f83:	jae    0x140010ff4
   140010f85:	ins    BYTE PTR es:[rdi],dx
   140010f86:	gs rex.XB je 0x140010ffc
   140010f8a:	ins    BYTE PTR es:[rdi],dx
   140010f8b:	rex.RB jbe 0x140010ff3
   140010f8e:	outs   dx,BYTE PTR ds:[rsi]
   140010f8f:	je     0x140010f91
   140010f91:	add    BYTE PTR [rsi],dl
   140010f93:	add    BYTE PTR [rcx+0x73],al
   140010f96:	jae    0x140011001
   140010f98:	outs   dx,BYTE PTR ds:[esi]
   140010f9a:	push   rax
   140010f9b:	jb     0x14001100c
   140010f9d:	movsxd esp,DWORD PTR [rbp+0x73]
   140010fa0:	jae    0x140010ff6
   140010fa2:	outs   dx,DWORD PTR ds:[rsi]
   140010fa3:	rex.WX outs dx,DWORD PTR ds:[rsi]
   140010fa5:	(bad)  
   140010fa6:	rex.WRXB (bad) 
   140010fa8:	push   0x65
   140010faa:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140010fae:	out    0x1,al
   140010fb0:	rex.RXB
   140010fb1:	gs je  0x140010ff9
   140010fb4:	js     0x14001101f
   140010fb6:	je     0x140010ffb
   140010fb8:	outs   dx,DWORD PTR ds:[rsi]
   140010fb9:	fs gs push rax
   140010fbc:	jb     0x14001102d
   140010fbe:	movsxd esp,DWORD PTR [rbp+0x73]
   140010fc1:	jae    0x140010fc3
   140010fc3:	add    BYTE PTR [rdx],bl
   140010fc5:	add    al,BYTE PTR [rdi+0x65]
   140010fc8:	je     0x140011017
   140010fca:	outs   dx,DWORD PTR ds:[rsi]
   140010fcb:	fs jne 0x14001103a
   140010fce:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   140010fd8:	add    BYTE PTR [rax],al
   140010fda:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010fdb:	add    edx,DWORD PTR [rcx+0x75]
   140010fde:	gs jb  0x14001105a
   140010fe1:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140010fe3:	outs   dx,WORD PTR ds:[rsi]
   140010fe5:	jb     0x140011054
   140010fe7:	(bad)  
   140010fe8:	je     0x140011053
   140010fea:	outs   dx,DWORD PTR ds:[rsi]
   140010feb:	outs   dx,BYTE PTR ds:[rsi]
   140010fec:	rex.WX outs dx,DWORD PTR ds:[rsi]
   140010fee:	(bad)  
   140010fef:	rex.WRXB (bad) 
   140010ff1:	push   0x65
   140010ff3:	movsxd esi,DWORD PTR [rax+rax*1+0x69]
   140010ff7:	add    ecx,DWORD PTR [rbp+0x75]
   140010ffa:	ins    BYTE PTR es:[rdi],dx
   140010ffb:	je     0x140011066
   140010ffd:	rex.X jns 0x140011074
   140011000:	gs push rsp
   140011002:	outs   dx,DWORD PTR ds:[rsi]
   140011003:	push   rdi
   140011004:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   14001100c:	xchg   ebp,eax
   14001100d:	add    BYTE PTR [rbx+0x72],al
   140011010:	gs (bad) 
   140011012:	je     0x140011079
   140011014:	rex.WX outs dx,DWORD PTR ds:[rsi]
   140011016:	(bad)  
   140011017:	rex.WRXB (bad) 
   140011019:	push   0x65
   14001101b:	movsxd esi,DWORD PTR [rcx+rax*2+0x0]
   14001101f:	add    BYTE PTR [rbx+0x2],ch
   140011022:	rex.RXB
   140011023:	gs je  0x140011079
   140011026:	je     0x14001108c
   140011028:	rex.W (bad) 
   14001102a:	outs   dx,BYTE PTR ds:[rsi]
   14001102b:	fs ins BYTE PTR es:[rdi],dx
   14001102d:	add    BYTE PTR gs:[rax],al
   140011030:	or     BYTE PTR [rdx],al
   140011032:	rex.RXB
   140011033:	gs je  0x140011082
   140011036:	(bad)  
   140011037:	jae    0x1400110ad
   140011039:	rex.RB jb 0x1400110ae
   14001103c:	outs   dx,DWORD PTR ds:[rsi]
   14001103d:	jb     0x14001103f
   14001103f:	add    BYTE PTR [rbx],bh
   140011041:	add    al,0x53
   140011043:	gs je  0x140011089
   140011046:	outs   dx,DWORD PTR ds:[rsi]
   140011047:	outs   dx,BYTE PTR ds:[rsi]
   140011048:	jae    0x1400110b9
   14001104a:	ins    BYTE PTR es:[rdi],dx
   14001104b:	gs rex.XB je 0x1400110c1
   14001104f:	ins    BYTE PTR es:[rdi],dx
   140011050:	rex.W (bad) 
   140011052:	outs   dx,BYTE PTR ds:[rsi]
   140011053:	fs ins BYTE PTR es:[rdi],dx
   140011055:	gs jb  0x140011058
   140011058:	in     al,dx
   140011059:	add    BYTE PTR [rbp+rsi*2+0x70],al
   14001105d:	ins    BYTE PTR es:[rdi],dx
   14001105e:	imul   esp,DWORD PTR [rbx+0x61],0x61486574
   140011065:	outs   dx,BYTE PTR ds:[rsi]
   140011066:	fs ins BYTE PTR es:[rdi],dx
   140011068:	add    BYTE PTR gs:[rdx+0x0],dl
   14001106c:	rex.XB ins BYTE PTR es:[rdi],dx
   14001106e:	outs   dx,DWORD PTR ds:[rsi]
   14001106f:	jae    0x1400110d6
   140011071:	rex.W (bad) 
   140011073:	outs   dx,BYTE PTR ds:[rsi]
   140011074:	fs ins BYTE PTR es:[rdi],dx
   140011076:	add    BYTE PTR gs:[rbx+0x45],cl
   14001107a:	push   rdx
   14001107b:	rex.WRX
   14001107c:	rex.RB
   14001107d:	xor    r14,QWORD PTR [rdx]
   140011080:	cs fs ins BYTE PTR es:[rdi],dx
   140011083:	ins    BYTE PTR es:[rdi],dx
   140011084:	add    BYTE PTR [rax],al
   140011086:	add    DWORD PTR [r11+0x74],r10d
   14001108a:	jb     0x1400110df
   14001108c:	je     0x140011100
   14001108e:	rex.WB push r15
   140011090:	add    BYTE PTR [rax],al
   140011092:	push   rbx
   140011093:	rex.W
   140011094:	rex.WR push rdi
   140011096:	push   r8
   140011098:	rex.WB
   140011099:	cs fs ins BYTE PTR es:[rdi],dx
   14001109c:	ins    BYTE PTR es:[rdi],dx
   14001109d:	add    bh,dl
   14001109f:	add    cl,BYTE PTR [rax+0x65]
   1400110a2:	(bad)  
   1400110a3:	jo     0x1400110eb
   1400110a5:	jb     0x14001110c
   1400110a7:	add    BYTE PTR gs:[rax],al
   1400110aa:	rol    DWORD PTR [rdx],cl
   1400110ac:	rex.W
   1400110ad:	gs (bad) 
   1400110af:	jo     0x1400110f2
   1400110b1:	ins    BYTE PTR es:[rdi],dx
   1400110b2:	ins    BYTE PTR es:[rdi],dx
   1400110b3:	outs   dx,DWORD PTR ds:[rsi]
   1400110b4:	movsxd eax,DWORD PTR [rax]
   1400110b6:	repnz add BYTE PTR [rbp+0x6e],al
   1400110ba:	je     0x140011121
   1400110bc:	jb     0x140011101
   1400110be:	jb     0x140011129
   1400110c0:	je     0x14001112b
   1400110c2:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400110c5:	push   rbx
   1400110c6:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400110cb:	outs   dx,BYTE PTR ds:[rsi]
   1400110cc:	add    BYTE PTR [rax],al
   1400110ce:	cmp    eax,DWORD PTR [rbx]
   1400110d0:	rex.WR
   1400110d1:	gs (bad) 
   1400110d3:	jbe    0x14001113a
   1400110d5:	rex.XB jb 0x140011141
   1400110d8:	je     0x140011143
   1400110da:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400110dd:	push   rbx
   1400110de:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400110e3:	outs   dx,BYTE PTR ds:[rsi]
   1400110e4:	add    BYTE PTR [rax],al
   1400110e6:	jo     0x1400110ea
   1400110e8:	rex.RXB
   1400110e9:	gs je  0x14001113f
   1400110ec:	je     0x140011160
   1400110ee:	imul   ebp,DWORD PTR [rsi+0x67],0x65707954
   1400110f5:	push   rdi
   1400110f6:	add    BYTE PTR [rax],al
   1400110f8:	mov    WORD PTR [rcx],es
   1400110fa:	rex.RXB
   1400110fb:	gs je  0x140011141
   1400110fe:	outs   dx,DWORD PTR ds:[rsi]
   1400110ff:	ins    DWORD PTR es:[rdi],dx
   140011100:	ins    DWORD PTR es:[rdi],dx
   140011101:	(bad)  
   140011102:	outs   dx,BYTE PTR ds:[rsi]
   140011103:	imul   r13,QWORD PTR fs:[rsi+0x65],0x4ce0041
   14001110c:	push   rsp
   14001110d:	gs jb  0x14001117d
   140011110:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140011117:	outs   dx,DWORD PTR ds:[rsi]
   140011118:	movsxd esp,DWORD PTR [rbp+0x73]
   14001111b:	jae    0x14001111d
   14001111d:	add    dl,ah
   14001111f:	add    al,0x55
   140011121:	outs   dx,BYTE PTR ds:[rsi]
   140011122:	push   0x6c646e61
   140011127:	gs fs rex.RB js 0x14001118f
   14001112c:	gs jo  0x1400111a3
   14001112f:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140011136:	gs jb  0x140011139
   140011139:	add    BYTE PTR [rbx+0x74655304],dh
   14001113f:	push   rbp
   140011140:	outs   dx,BYTE PTR ds:[rsi]
   140011141:	push   0x6c646e61
   140011146:	gs fs rex.RB js 0x1400111ae
   14001114b:	gs jo  0x1400111c2
   14001114e:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140011155:	gs jb  0x140011158
   140011158:	add    al,BYTE PTR [rbx]
   14001115a:	rex.WB jae 0x1400111a1
   14001115d:	gs (bad) 
   14001115f:	jne    0x1400111c8
   140011161:	addr32 gs jb 0x1400111b5
   140011165:	jb     0x1400111cc
   140011167:	jae    0x1400111ce
   140011169:	outs   dx,BYTE PTR ds:[rsi]
   14001116a:	je     0x14001116c
   14001116c:	es add al,0x52
   14001116f:	je     0x1400111dd
   140011171:	push   rsi
   140011172:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140011179:	outs   dx,BYTE PTR ds:[rsi]
   14001117a:	ja     0x1400111e5
   14001117c:	outs   dx,BYTE PTR ds:[rsi]
   14001117d:	add    BYTE PTR fs:[rax],al
   140011180:	(bad)  
   140011181:	add    al,0x52
   140011183:	je     0x1400111f1
   140011185:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140011187:	outs   dx,DWORD PTR ds:[rsi]
   140011188:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14001118c:	jne    0x1400111fc
   14001118e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140011192:	outs   dx,BYTE PTR ds:[rsi]
   140011193:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140011195:	je     0x140011209
   140011197:	jns    0x140011199
   140011199:	add    BYTE PTR [rax],bl
   14001119b:	add    al,0x52
   14001119d:	je     0x14001120b
   14001119f:	rex.XB (bad) 
   1400111a1:	jo     0x140011217
   1400111a3:	jne    0x140011217
   1400111a5:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400111a8:	outs   dx,BYTE PTR ds:[rsi]
   1400111a9:	je     0x140011210
   1400111ab:	js     0x140011221
   1400111ad:	add    BYTE PTR [rip+0x6c745204],ah        # 0x1ac7563b7
   1400111b3:	push   rbp
   1400111b4:	outs   dx,BYTE PTR ds:[rsi]
   1400111b5:	ja     0x140011220
   1400111b7:	outs   dx,BYTE PTR ds:[rsi]
   1400111b8:	fs rex.RB js 0x1400111bc
   1400111bc:	jmp    0x1400111c0
   1400111be:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400111c0:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400111c8:	rex.XB jb 0x140011234
   1400111cb:	je     0x140011236
   1400111cd:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400111d0:	push   rbx
   1400111d1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400111d6:	outs   dx,BYTE PTR ds:[rsi]
   1400111d7:	rex.B outs dx,BYTE PTR ds:[rsi]
   1400111d9:	fs push rbx
   1400111db:	jo     0x140011246
   1400111dd:	outs   dx,BYTE PTR ds:[rsi]
   1400111de:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400111e0:	jne    0x140011250
   1400111e2:	je     0x1400111e4
   1400111e4:	out    dx,al
   1400111e5:	add    BYTE PTR [rbp+0x6e],al
   1400111e8:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400111eb:	gs push rax
   1400111ed:	outs   dx,DWORD PTR ds:[rsi]
   1400111ee:	imul   ebp,DWORD PTR [rsi+0x74],0xcb007265
   1400111f5:	add    BYTE PTR [rbp+riz*2+0x63],al
   1400111f9:	outs   dx,DWORD PTR ds:[rsi]
   1400111fa:	fs gs push rax
   1400111fd:	outs   dx,DWORD PTR ds:[rsi]
   1400111fe:	imul   ebp,DWORD PTR [rsi+0x74],0xdb007265
   140011205:	add    cl,BYTE PTR [rax+0x65]
   140011208:	(bad)  
   140011209:	jo     0x14001125e
   14001120b:	gs je  0x140011257
   14001120e:	outs   dx,BYTE PTR ds:[rsi]
   14001120f:	outs   dx,WORD PTR ds:[rsi]
   140011211:	jb     0x140011280
   140011213:	(bad)  
   140011214:	je     0x14001127f
   140011216:	outs   dx,DWORD PTR ds:[rsi]
   140011217:	outs   dx,BYTE PTR ds:[rsi]
   140011218:	add    BYTE PTR [rax],al
   14001121a:	stos   BYTE PTR es:[rdi],al
   14001121b:	add    al,BYTE PTR [rdi+0x65]
   14001121e:	je     0x140011276
   140011220:	gs jb  0x140011296
   140011223:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d50000
   14001122a:	rex.W
   14001122b:	gs (bad) 
   14001122d:	jo     0x140011272
   14001122f:	jb     0x140011296
   140011231:	(bad)  
   140011232:	je     0x140011299
   140011234:	add    BYTE PTR [rax],al
   140011236:	rex.WR add r8b,BYTE PTR [rdi+0x65]
   14001123a:	je     0x14001128c
   14001123c:	jb     0x1400112ad
   14001123e:	movsxd eax,DWORD PTR [rcx+0x64]
   140011241:	fs jb  0x1400112a9
   140011244:	jae    0x1400112b9
   140011246:	add    BYTE PTR [rax],al
   140011248:	(bad)  
   140011249:	add    al,BYTE PTR [rdi+0x65]
   14001124c:	je     0x14001129b
   14001124e:	outs   dx,DWORD PTR ds:[rsi]
   14001124f:	fs jne 0x1400112be
   140011252:	gs rex.W (bad) 
   140011255:	outs   dx,BYTE PTR ds:[rsi]
   140011256:	fs ins BYTE PTR es:[rdi],dx
   140011258:	gs push rdi
   14001125a:	add    BYTE PTR [rax],al
   14001125c:	xor    al,0x5
   14001125e:	push   rdi
   14001125f:	jb     0x1400112ca
   140011261:	je     0x1400112c8
   140011263:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x6553047c
   14001126c:	je     0x1400112b6
   14001126e:	(bad)  
   14001126f:	outs   dx,BYTE PTR ds:[rsi]
   140011270:	fs ins BYTE PTR es:[rdi],dx
   140011272:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140011275:	jne    0x1400112e5
   140011277:	je     0x140011279
   140011279:	add    dl,bh
   14001127b:	add    DWORD PTR [rdi+0x65],eax
   14001127e:	je     0x1400112c6
   140011280:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   140011288:	push   0x2
   14001128a:	rex.RXB
   14001128b:	gs je  0x1400112e1
   14001128e:	je     0x1400112f1
   140011290:	jb     0x140011306
   140011292:	jne    0x140011304
   140011294:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140011296:	outs   dx,WORD PTR ds:[rsi]
   140011298:	push   rdi
   140011299:	add    dl,dl
   14001129b:	add    BYTE PTR [rbp+riz*2+0x6c],al
   14001129f:	gs je  0x140011307
   1400112a2:	rex.XB jb 0x14001130e
   1400112a5:	je     0x140011310
   1400112a7:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400112aa:	push   rbx
   1400112ab:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400112b0:	outs   dx,BYTE PTR ds:[rsi]
   1400112b1:	add    al,al
   1400112b3:	add    al,0x53
   1400112b5:	ins    BYTE PTR es:[rdi],dx
   1400112b6:	gs gs jo 0x1400112ba
   1400112ba:	ret    
   1400112bb:	add    edx,DWORD PTR [rdx+0x65]
   1400112be:	(bad)  
   1400112bf:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x53047400
   1400112c9:	gs je  0x140011312
   1400112cc:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   1400112d4:	gs jb  0x1400112d7
   1400112d7:	add    BYTE PTR [rcx],bl
   1400112d9:	add    al,BYTE PTR [rdi+0x65]
   1400112dc:	je     0x14001132b
   1400112de:	outs   dx,DWORD PTR ds:[rsi]
   1400112df:	fs jne 0x14001134e
   1400112e2:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   1400112ec:	add    BYTE PTR [rax],al
   1400112ee:	add    DWORD PTR [esi+0x72],eax
   1400112f2:	gs rex.RB outs dx,BYTE PTR gs:[rsi]
   1400112f6:	jbe    0x140011361
   1400112f8:	jb     0x140011369
   1400112fa:	outs   dx,BYTE PTR ds:[rsi]
   1400112fb:	ins    DWORD PTR es:[rdi],dx
   1400112fc:	outs   dx,BYTE PTR gs:[rsi]
   1400112fe:	je     0x140011353
   140011300:	je     0x140011374
   140011302:	imul   ebp,DWORD PTR [rsi+0x67],0x20005773
   140011309:	add    eax,0x65646957
   14001130e:	rex.XB push 0x6f547261
   140011314:	rex.WRB jne 0x140011383
   140011317:	je     0x140011382
   140011319:	rex.X jns 0x140011390
   14001131c:	gs add cl,ah
   14001131f:	add    DWORD PTR [rdi+0x65],eax
   140011322:	je     0x140011369
   140011324:	outs   dx,BYTE PTR ds:[rsi]
   140011325:	jbe    0x140011390
   140011327:	jb     0x140011398
   140011329:	outs   dx,BYTE PTR ds:[rsi]
   14001132a:	ins    DWORD PTR es:[rdi],dx
   14001132b:	outs   dx,BYTE PTR gs:[rsi]
   14001132d:	je     0x140011382
   14001132f:	je     0x1400113a3
   140011331:	imul   ebp,DWORD PTR [rsi+0x67],0x5773
   140011338:	pop    rdx
   140011339:	add    DWORD PTR [rsi+0x6c],eax
   14001133c:	jae    0x140011385
   14001133e:	gs je  0x140011397
   140011341:	(bad)  
   140011342:	ins    BYTE PTR es:[rdi],dx
   140011343:	jne    0x1400113aa
   140011345:	add    BYTE PTR [rbx+0x1],bl
   140011348:	rex.RX ins BYTE PTR es:[rdi],dx
   14001134a:	jae    0x14001139f
   14001134c:	gs je  0x1400113a5
   14001134f:	(bad)  
   140011350:	ins    BYTE PTR es:[rdi],dx
   140011351:	jne    0x1400113b8
   140011353:	add    BYTE PTR [rcx+0x1],bl
   140011356:	rex.RX ins BYTE PTR es:[rdi],dx
   140011358:	jae    0x1400113a0
   14001135a:	jb     0x1400113c1
   14001135c:	add    BYTE PTR gs:[rax+0x74655304],al
   140011363:	rex.WR (bad) 
   140011365:	jae    0x1400113db
   140011367:	rex.RB jb 0x1400113dc
   14001136a:	outs   dx,DWORD PTR ds:[rsi]
   14001136b:	jb     0x14001136d
   14001136d:	add    bl,cl
   14001136f:	add    DWORD PTR [rdi+0x65],eax
   140011372:	je     0x1400113b7
   140011374:	jne    0x1400113e8
   140011376:	jb     0x1400113dd
   140011378:	outs   dx,BYTE PTR ds:[rsi]
   140011379:	je     0x1400113cf
   14001137b:	push   0x64616572
   140011380:	rex.WB
   140011381:	add    BYTE PTR fs:[rax],al
   140011384:	pop    rax
   140011385:	add    DWORD PTR [rsi+0x6c],eax
   140011388:	jae    0x1400113cb
   14001138a:	ins    BYTE PTR es:[rdi],dx
   14001138b:	ins    BYTE PTR es:[rdi],dx
   14001138c:	outs   dx,DWORD PTR ds:[rsi]
   14001138d:	movsxd eax,DWORD PTR [rax]
   14001138f:	add    BYTE PTR [rcx+0x65755103],ch
   140011395:	jb     0x140011410
   140011397:	push   rax
   140011398:	gs jb  0x140011401
   14001139b:	outs   dx,DWORD PTR ds:[rsi]
   14001139c:	jb     0x14001140b
   14001139e:	(bad)  
   14001139f:	outs   dx,BYTE PTR ds:[rsi]
   1400113a0:	movsxd esp,DWORD PTR [rbp+0x43]
   1400113a3:	outs   dx,DWORD PTR ds:[rsi]
   1400113a4:	jne    0x140011414
   1400113a6:	je     0x14001140d
   1400113a8:	jb     0x1400113aa
   1400113aa:	(bad)  
   1400113ab:	add    al,BYTE PTR [rdi+0x65]
   1400113ae:	je     0x140011404
   1400113b0:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   1400113b7:	je     0x1400113b9
   1400113b9:	add    bh,al
   1400113bb:	add    DWORD PTR [rdi+0x65],eax
   1400113be:	je     0x140011403
   1400113c0:	jne    0x140011434
   1400113c2:	jb     0x140011429
   1400113c4:	outs   dx,BYTE PTR ds:[rsi]
   1400113c5:	je     0x140011417
   1400113c7:	jb     0x140011438
   1400113c9:	movsxd esp,DWORD PTR [rbp+0x73]
   1400113cc:	jae    0x140011417
   1400113ce:	add    BYTE PTR fs:[rax+0x74654702],al
   1400113d5:	push   rbx
   1400113d6:	jns    0x14001144b
   1400113d8:	je     0x14001143f
   1400113da:	ins    DWORD PTR es:[rdi],dx
   1400113db:	push   rsp
   1400113dc:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   1400113e3:	ins    BYTE PTR es:[rdi],dx
   1400113e4:	gs push rsp
   1400113e6:	imul   ebp,DWORD PTR [rbp+0x65],0x43008f00
   1400113ed:	jb     0x140011454
   1400113ef:	(bad)  
   1400113f0:	je     0x140011457
   1400113f2:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x4c034100
   1400113fb:	outs   dx,DWORD PTR ds:[rsi]
   1400113fc:	(bad)  
   1400113fd:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   140011406:	add    BYTE PTR [rax],al
   140011408:	fiadd  DWORD PTR [rdx]
   14001140a:	rex.W
   14001140b:	gs (bad) 
   14001140d:	jo     0x140011461
   14001140f:	gs rex.B ins BYTE PTR es:[rdi],dx
   140011412:	ins    BYTE PTR es:[rdi],dx
   140011413:	outs   dx,DWORD PTR ds:[rsi]
   140011414:	movsxd eax,DWORD PTR [rax]
   140011416:	movabs al,ds:0x736e6f4374654701
   14001141f:	outs   dx,DWORD PTR ds:[rsi]
   140011420:	ins    BYTE PTR es:[rdi],dx
   140011421:	gs rex.XB push r8
   140011424:	add    BYTE PTR [rax],al
   140011426:	mov    dl,0x1
   140011428:	rex.RXB
   140011429:	gs je  0x14001146f
   14001142c:	outs   dx,DWORD PTR ds:[rsi]
   14001142d:	outs   dx,BYTE PTR ds:[rsi]
   14001142e:	jae    0x14001149f
   140011430:	ins    BYTE PTR es:[rdi],dx
   140011431:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140011434:	fs add BYTE PTR gs:[rax],al
   140011438:	pop    rbp
   140011439:	add    DWORD PTR [rsi+0x6c],eax
   14001143c:	jne    0x1400114b1
   14001143e:	push   0x656c6946
   140011443:	rex.X jne 0x1400114ac
   140011446:	data16 gs jb 0x1400114bd
   14001144a:	add    BYTE PTR [rax],al
   14001144c:	js     0x14001144f
   14001144e:	rex.RXB
   14001144f:	gs je  0x140011495
   140011452:	push   rax
   140011453:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140011455:	outs   dx,WORD PTR ds:[rsi]
   140011457:	add    BYTE PTR [rsi+0x1],ch
   14001145a:	rex.RXB
   14001145b:	gs je  0x14001149f
   14001145e:	rex.XB push r8
   140011460:	add    BYTE PTR [rax],al
   140011462:	add    al,BYTE PTR ds:[rdi+0x65]
   140011466:	je     0x1400114b7
   140011468:	rex.RB
   140011469:	rex.WRB
   14001146a:	rex.XB push r8
   14001146c:	add    BYTE PTR [rax],al
   14001146e:	or     al,0x3
   140011470:	rex.WB jae 0x1400114c9
   140011473:	(bad)  
   140011474:	ins    BYTE PTR es:[rdi],dx
   140011475:	imul   esp,DWORD PTR [rbx+rax*2+0x6f],0x61506564
   14001147d:	add    BYTE PTR gs:[esp+eax*1+0x53746553],dl
   140011486:	je     0x1400114ec
   140011488:	rex.W (bad) 
   14001148a:	outs   dx,BYTE PTR ds:[rsi]
   14001148b:	fs ins BYTE PTR es:[rdi],dx
   14001148d:	add    BYTE PTR gs:[rax],al
   140011490:	(bad)  
   140011491:	add    al,0x53
   140011493:	gs je  0x1400114db
   140011496:	outs   dx,BYTE PTR ds:[rsi]
   140011497:	fs rex.WRXB
   140011499:	imul   r13w,WORD PTR [rbp+r12*2+0x0],0x5100
   1400114a1:	add    al,BYTE PTR [rdi+0x65]
   1400114a4:	je     0x1400114f6
   1400114a6:	jb     0x140011517
   1400114a8:	movsxd esp,DWORD PTR [rbp+0x73]
   1400114ab:	jae    0x1400114f5
   1400114ad:	gs (bad) 
   1400114af:	jo     0x1400114b1
   1400114b1:	add    ah,bl
   1400114b3:	add    cl,BYTE PTR [rax+0x65]
   1400114b6:	(bad)  
   1400114b7:	jo     0x14001150c
   1400114b9:	imul   edi,DWORD PTR [rdx+0x65],0x5330000
   1400114c0:	push   rdi
   1400114c1:	jb     0x14001152c
   1400114c3:	je     0x14001152a
   1400114c5:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400114c7:	outs   dx,BYTE PTR ds:[rsi]
   1400114c8:	jae    0x140011539
   1400114ca:	ins    BYTE PTR es:[rdi],dx
   1400114cb:	gs push rdi
   1400114cd:	add    BYTE PTR [rdi],ch
   1400114cf:	add    ecx,DWORD PTR [rbx+rax*2+0x4d]
   1400114d3:	(bad)  
   1400114d4:	jo     0x140011529
   1400114d6:	je     0x14001154a
   1400114d8:	.byte 0x69
   1400114d9:	outs   dx,BYTE PTR ds:[rsi]
   1400114da:	addr32 push rdi
	...

Disassembly of section .data:

0000000140012000 <.data>:
   140012000:	or     BYTE PTR [rax+0x1],0x40
   140012004:	add    DWORD PTR [rax],eax
	...
   14001200e:	add    BYTE PTR [rax],al
   140012010:	or     BYTE PTR [rax+0x1],0x40
   140012014:	add    DWORD PTR [rax],eax
   140012016:	add    BYTE PTR [rax],al
   140012018:	add    DWORD PTR [rcx],eax
	...
   140012022:	add    BYTE PTR [rax],al
   140012024:	add    BYTE PTR [rax],dl
	...
   140012046:	add    BYTE PTR [rax],al
   140012048:	add    al,BYTE PTR [rax]
   14001204a:	add    BYTE PTR [rax],al
   14001204c:	add    DWORD PTR [rax],eax
	...
   140012076:	add    BYTE PTR [rax],al
   140012078:	add    al,BYTE PTR [rax]
   14001207a:	add    BYTE PTR [rax],al
   14001207c:	add    al,BYTE PTR [rax]
	...
   1400123be:	add    BYTE PTR [rax],al
   1400123c0:	add    DWORD PTR [rax],eax
   1400123c2:	add    BYTE PTR [rax],al
   1400123c4:	add    BYTE PTR [rax],al
   1400123c6:	add    BYTE PTR [rax],al
   1400123c8:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   1400123ce:	add    BYTE PTR [rax],al
   1400123d0:	int    0x5d
   1400123d2:	and    dl,dl
   1400123d4:	data16 (bad) 
   1400123d6:	(bad)  
   1400123d7:	inc    DWORD PTR [rax]
   1400123d9:	add    BYTE PTR [rax],al
   1400123db:	add    BYTE PTR [rax],al
   1400123dd:	add    BYTE PTR [rax],al
   1400123df:	add    BYTE PTR [rcx],al
   1400123e1:	add    BYTE PTR [rax],al
   1400123e3:	add    BYTE PTR [rsi],dl
   1400123e5:	add    BYTE PTR [rax],al
   1400123e7:	add    BYTE PTR [rdx],al
   1400123e9:	add    BYTE PTR [rax],al
   1400123eb:	add    BYTE PTR [rdx],al
   1400123ed:	add    BYTE PTR [rax],al
   1400123ef:	add    BYTE PTR [rbx],al
   1400123f1:	add    BYTE PTR [rax],al
   1400123f3:	add    BYTE PTR [rdx],al
   1400123f5:	add    BYTE PTR [rax],al
   1400123f7:	add    BYTE PTR [rax+rax*1],al
   1400123fa:	add    BYTE PTR [rax],al
   1400123fc:	sbb    BYTE PTR [rax],al
   1400123fe:	add    BYTE PTR [rax],al
   140012400:	add    eax,0xd000000
   140012405:	add    BYTE PTR [rax],al
   140012407:	add    BYTE PTR [rsi],al
   140012409:	add    BYTE PTR [rax],al
   14001240b:	add    BYTE PTR [rcx],cl
   14001240d:	add    BYTE PTR [rax],al
   14001240f:	add    BYTE PTR [rdi],al
   140012411:	add    BYTE PTR [rax],al
   140012413:	add    BYTE PTR [rax+rax*1],cl
   140012416:	add    BYTE PTR [rax],al
   140012418:	or     BYTE PTR [rax],al
   14001241a:	add    BYTE PTR [rax],al
   14001241c:	or     al,0x0
   14001241e:	add    BYTE PTR [rax],al
   140012420:	or     DWORD PTR [rax],eax
   140012422:	add    BYTE PTR [rax],al
   140012424:	or     al,0x0
   140012426:	add    BYTE PTR [rax],al
   140012428:	or     al,BYTE PTR [rax]
   14001242a:	add    BYTE PTR [rax],al
   14001242c:	(bad)  
   14001242d:	add    BYTE PTR [rax],al
   14001242f:	add    BYTE PTR [rbx],cl
   140012431:	add    BYTE PTR [rax],al
   140012433:	add    BYTE PTR [rax],cl
   140012435:	add    BYTE PTR [rax],al
   140012437:	add    BYTE PTR [rax+rax*1],cl
   14001243a:	add    BYTE PTR [rax],al
   14001243c:	(bad)  
   14001243d:	add    BYTE PTR [rax],al
   14001243f:	add    BYTE PTR [rip+0x16000000],cl        # 0x156012445
   140012445:	add    BYTE PTR [rax],al
   140012447:	add    BYTE PTR [rdi],cl
   140012449:	add    BYTE PTR [rax],al
   14001244b:	add    BYTE PTR [rdx],al
   14001244d:	add    BYTE PTR [rax],al
   14001244f:	add    BYTE PTR [rax],dl
   140012451:	add    BYTE PTR [rax],al
   140012453:	add    BYTE PTR [rip+0x11000000],cl        # 0x151012459
   140012459:	add    BYTE PTR [rax],al
   14001245b:	add    BYTE PTR [rdx],dl
   14001245d:	add    BYTE PTR [rax],al
   14001245f:	add    BYTE PTR [rdx],dl
   140012461:	add    BYTE PTR [rax],al
   140012463:	add    BYTE PTR [rdx],al
   140012465:	add    BYTE PTR [rax],al
   140012467:	add    BYTE PTR [rcx],ah
   140012469:	add    BYTE PTR [rax],al
   14001246b:	add    BYTE PTR [rip+0x35000000],cl        # 0x175012471
   140012471:	add    BYTE PTR [rax],al
   140012473:	add    BYTE PTR [rdx],al
   140012475:	add    BYTE PTR [rax],al
   140012477:	add    BYTE PTR [rcx+0x0],al
   14001247a:	add    BYTE PTR [rax],al
   14001247c:	or     eax,0x43000000
   140012481:	add    BYTE PTR [rax],al
   140012483:	add    BYTE PTR [rdx],al
   140012485:	add    BYTE PTR [rax],al
   140012487:	add    BYTE PTR [rax+0x0],dl
   14001248a:	add    BYTE PTR [rax],al
   14001248c:	adc    DWORD PTR [rax],eax
   14001248e:	add    BYTE PTR [rax],al
   140012490:	push   rdx
   140012491:	add    BYTE PTR [rax],al
   140012493:	add    BYTE PTR [rip+0x53000000],cl        # 0x193012499
   140012499:	add    BYTE PTR [rax],al
   14001249b:	add    BYTE PTR [rip+0x57000000],cl        # 0x1970124a1
   1400124a1:	add    BYTE PTR [rax],al
   1400124a3:	add    BYTE PTR [rsi],dl
   1400124a5:	add    BYTE PTR [rax],al
   1400124a7:	add    BYTE PTR [rcx+0x0],bl
   1400124aa:	add    BYTE PTR [rax],al
   1400124ac:	or     eax,DWORD PTR [rax]
   1400124ae:	add    BYTE PTR [rax],al
   1400124b0:	ins    BYTE PTR es:[rdi],dx
   1400124b1:	add    BYTE PTR [rax],al
   1400124b3:	add    BYTE PTR [rip+0x6d000000],cl        # 0x1ad0124b9
   1400124b9:	add    BYTE PTR [rax],al
   1400124bb:	add    BYTE PTR [rax],ah
   1400124bd:	add    BYTE PTR [rax],al
   1400124bf:	add    BYTE PTR [rax+0x0],dh
   1400124c2:	add    BYTE PTR [rax],al
   1400124c4:	sbb    al,0x0
   1400124c6:	add    BYTE PTR [rax],al
   1400124c8:	jb     0x1400124ca
   1400124ca:	add    BYTE PTR [rax],al
   1400124cc:	or     DWORD PTR [rax],eax
   1400124ce:	add    BYTE PTR [rax],al
   1400124d0:	(bad)  
   1400124d1:	add    BYTE PTR [rax],al
   1400124d3:	add    BYTE PTR [rsi],dl
   1400124d5:	add    BYTE PTR [rax],al
   1400124d7:	add    BYTE PTR [rax+0xa000000],al
   1400124dd:	add    BYTE PTR [rax],al
   1400124df:	add    BYTE PTR [rcx+0xa000000],al
   1400124e5:	add    BYTE PTR [rax],al
   1400124e7:	add    BYTE PTR [rdx+0x9000000],al
   1400124ed:	add    BYTE PTR [rax],al
   1400124ef:	add    BYTE PTR [rbx+0x16000000],al
   1400124f5:	add    BYTE PTR [rax],al
   1400124f7:	add    BYTE PTR [rax+rax*1+0xd0000],al
   1400124fe:	add    BYTE PTR [rax],al
   140012500:	xchg   ecx,eax
   140012501:	add    BYTE PTR [rax],al
   140012503:	add    BYTE PTR [rcx],ch
   140012505:	add    BYTE PTR [rax],al
   140012507:	add    BYTE PTR [rsi+0xd000000],bl
   14001250d:	add    BYTE PTR [rax],al
   14001250f:	add    BYTE PTR [rcx+0x2000000],ah
   140012515:	add    BYTE PTR [rax],al
   140012517:	add    BYTE PTR [rax+rax*1+0xb0000],ah
   14001251e:	add    BYTE PTR [rax],al
   140012520:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012521:	add    BYTE PTR [rax],al
   140012523:	add    BYTE PTR [rip+0xffffffffb7000000],cl        # 0xf7012529
   140012529:	add    BYTE PTR [rax],al
   14001252b:	add    BYTE PTR [rcx],dl
   14001252d:	add    BYTE PTR [rax],al
   14001252f:	add    dh,cl
   140012531:	add    BYTE PTR [rax],al
   140012533:	add    BYTE PTR [rdx],al
   140012535:	add    BYTE PTR [rax],al
   140012537:	add    bh,dl
   140012539:	add    BYTE PTR [rax],al
   14001253b:	add    BYTE PTR [rbx],cl
   14001253d:	add    BYTE PTR [rax],al
   14001253f:	add    BYTE PTR [rax],bl
   140012541:	(bad)  
   140012542:	add    BYTE PTR [rax],al
   140012544:	or     al,0x0
   140012546:	add    BYTE PTR [rax],al
   140012548:	or     al,0x0
   14001254a:	add    BYTE PTR [rax],al
   14001254c:	or     BYTE PTR [rax],al
   14001254e:	add    BYTE PTR [rax],al
   140012550:	(bad)  
   140012551:	(bad)  
   140012552:	(bad)  
   140012553:	(bad)  
   140012554:	(bad)  
   140012555:	(bad)  
   140012556:	(bad)  
   140012557:	inc    DWORD PTR [rax+0xa]
	...
   1400125b5:	add    BYTE PTR [rax],al
   1400125b7:	add    BYTE PTR [rcx],al
	...
   1400125c5:	add    BYTE PTR [rax],al
   1400125c7:	add    BYTE PTR [rcx],al
	...
   1400125e5:	add    BYTE PTR [rax],al
   1400125e7:	add    BYTE PTR [rcx],al
	...
   1400125f5:	add    BYTE PTR [rax],al
   1400125f7:	add    BYTE PTR [rcx],al
	...
   140012615:	add    BYTE PTR [rax],al
   140012617:	add    BYTE PTR [rcx],al
	...
   140012625:	add    BYTE PTR [rax],al
   140012627:	add    BYTE PTR [rcx],al
	...
   140012635:	add    BYTE PTR [rax],al
   140012637:	add    BYTE PTR [rcx],al
	...
   140012655:	add    BYTE PTR [rax],al
   140012657:	add    BYTE PTR [rcx],al
	...
   140012675:	add    BYTE PTR [rax],al
   140012677:	add    BYTE PTR [rcx],al
	...
   140012685:	add    BYTE PTR [rax],al
   140012687:	add    BYTE PTR [rcx],al
	...
   140012695:	add    BYTE PTR [rax],al
   140012697:	add    BYTE PTR [rcx],al
	...
   1400126b5:	add    BYTE PTR [rax],al
   1400126b7:	add    BYTE PTR [rcx],al
	...
   1400126c5:	add    BYTE PTR [rax],al
   1400126c7:	add    BYTE PTR [rcx],al
	...
   1400126d5:	add    BYTE PTR [rax],al
   1400126d7:	add    BYTE PTR [rcx],al
	...
   1400128ad:	add    BYTE PTR [rax],al
   1400128af:	add    BYTE PTR [rcx],al
   1400128b1:	add    DWORD PTR [rcx],eax
   1400128b3:	add    DWORD PTR [rcx],eax
   1400128b5:	add    DWORD PTR [rcx],eax
   1400128b7:	add    DWORD PTR [rcx],eax
   1400128b9:	add    DWORD PTR [rcx],eax
   1400128bb:	add    DWORD PTR [rcx],eax
   1400128bd:	add    DWORD PTR [rcx],eax
   1400128bf:	add    DWORD PTR [rcx],eax
   1400128c1:	add    DWORD PTR [rcx],eax
   1400128c3:	add    DWORD PTR [rcx],eax
   1400128c5:	add    DWORD PTR [rcx],eax
   1400128c7:	add    DWORD PTR [rcx],eax
   1400128c9:	add    DWORD PTR [rcx],eax
   1400128cb:	add    DWORD PTR [rcx],eax
   1400128cd:	add    DWORD PTR [rcx],eax
   1400128cf:	add    DWORD PTR [rdx],eax
   1400128d1:	add    al,BYTE PTR [rdx]
   1400128d3:	add    al,BYTE PTR [rdx]
   1400128d5:	add    al,BYTE PTR [rdx]
   1400128d7:	add    al,BYTE PTR [rdx]
   1400128d9:	add    al,BYTE PTR [rdx]
   1400128db:	add    al,BYTE PTR [rdx]
   1400128dd:	add    al,BYTE PTR [rdx]
   1400128df:	add    al,BYTE PTR [rbx]
   1400128e1:	add    eax,DWORD PTR [rbx]
   1400128e3:	add    eax,DWORD PTR [rbx]
   1400128e5:	add    eax,DWORD PTR [rbx]
   1400128e7:	add    eax,DWORD PTR [rax]
   1400128e9:	add    BYTE PTR [rax],al
   1400128eb:	add    BYTE PTR [rax],al
   1400128ed:	add    BYTE PTR [rax],al
   1400128ef:	add    BYTE PTR [rax+0x14000ee],bl
   1400128f5:	add    BYTE PTR [rax],al
   1400128f7:	add    BYTE PTR [rax+0x14000ee],cl
   1400128fd:	add    BYTE PTR [rax],al
   1400128ff:	add    BYTE PTR [rax],al
   140012901:	lock add BYTE PTR [rax+0x1],al
   140012905:	add    BYTE PTR [rax],al
   140012907:	add    BYTE PTR [rdx],al
   140012909:	repnz add BYTE PTR [rax+0x1],al
   14001290d:	add    BYTE PTR [rax],al
   14001290f:	add    bh,bh
   140012911:	(bad)  
   140012912:	(bad)  
   140012913:	inc    DWORD PTR [rax]
	...
   14001291d:	add    BYTE PTR [rax],al
   14001291f:	add    BYTE PTR [rcx+rcx*8],ch
   140012922:	add    BYTE PTR [rax+0x1],al
   140012925:	add    BYTE PTR [rax],al
   140012927:	add    BYTE PTR [rcx+rcx*8],ch
   14001292a:	add    BYTE PTR [rax+0x1],al
   14001292d:	add    BYTE PTR [rax],al
   14001292f:	add    BYTE PTR [rcx+rcx*8],ch
   140012932:	add    BYTE PTR [rax+0x1],al
   140012935:	add    BYTE PTR [rax],al
   140012937:	add    BYTE PTR [rcx+rcx*8],ch
   14001293a:	add    BYTE PTR [rax+0x1],al
   14001293d:	add    BYTE PTR [rax],al
   14001293f:	add    BYTE PTR [rcx+rcx*8],ch
   140012942:	add    BYTE PTR [rax+0x1],al
   140012945:	add    BYTE PTR [rax],al
   140012947:	add    BYTE PTR [rcx+rcx*8],ch
   14001294a:	add    BYTE PTR [rax+0x1],al
   14001294d:	add    BYTE PTR [rax],al
   14001294f:	add    BYTE PTR [rcx+rcx*8],ch
   140012952:	add    BYTE PTR [rax+0x1],al
   140012955:	add    BYTE PTR [rax],al
   140012957:	add    BYTE PTR [rcx+rcx*8],ch
   14001295a:	add    BYTE PTR [rax+0x1],al
   14001295d:	add    BYTE PTR [rax],al
   14001295f:	add    BYTE PTR [rcx+rcx*8],ch
   140012962:	add    BYTE PTR [rax+0x1],al
   140012965:	add    BYTE PTR [rax],al
   140012967:	add    BYTE PTR [rcx+rcx*8],ch
   14001296a:	add    BYTE PTR [rax+0x1],al
	...
   1400129cd:	add    BYTE PTR [rax],dl
   1400129cf:	adc    BYTE PTR [rax],dl
   1400129d1:	adc    BYTE PTR [rax],dl
   1400129d3:	adc    BYTE PTR [rax],dl
   1400129d5:	adc    BYTE PTR [rax],dl
   1400129d7:	adc    BYTE PTR [rax],dl
   1400129d9:	adc    BYTE PTR [rax],dl
   1400129db:	adc    BYTE PTR [rax],dl
   1400129dd:	adc    BYTE PTR [rax],dl
   1400129df:	adc    BYTE PTR [rax],dl
   1400129e1:	adc    BYTE PTR [rax],dl
   1400129e3:	adc    BYTE PTR [rax],dl
   1400129e5:	adc    BYTE PTR [rax],dl
   1400129e7:	adc    BYTE PTR [rax],al
   1400129e9:	add    BYTE PTR [rax],al
   1400129eb:	add    BYTE PTR [rax],al
   1400129ed:	add    BYTE PTR [rax],ah
   1400129ef:	and    BYTE PTR [rax],ah
   1400129f1:	and    BYTE PTR [rax],ah
   1400129f3:	and    BYTE PTR [rax],ah
   1400129f5:	and    BYTE PTR [rax],ah
   1400129f7:	and    BYTE PTR [rax],ah
   1400129f9:	and    BYTE PTR [rax],ah
   1400129fb:	and    BYTE PTR [rax],ah
   1400129fd:	and    BYTE PTR [rax],ah
   1400129ff:	and    BYTE PTR [rax],ah
   140012a01:	and    BYTE PTR [rax],ah
   140012a03:	and    BYTE PTR [rax],ah
   140012a05:	and    BYTE PTR [rax],ah
   140012a07:	and    BYTE PTR [rax],al
	...
   140012acd:	add    BYTE PTR [rcx+0x62],ah
   140012ad0:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   140012ad4:	addr32 push 0x6c6b6a69
   140012ada:	ins    DWORD PTR es:[rdi],dx
   140012adb:	outs   dx,BYTE PTR ds:[rsi]
   140012adc:	outs   dx,DWORD PTR ds:[rsi]
   140012add:	jo     0x140012b50
   140012adf:	jb     0x140012b54
   140012ae1:	je     0x140012b58
   140012ae3:	jbe    0x140012b5c
   140012ae5:	js     0x140012b60
   140012ae7:	jp     0x140012ae9
   140012ae9:	add    BYTE PTR [rax],al
   140012aeb:	add    BYTE PTR [rax],al
   140012aed:	add    BYTE PTR [rcx+0x42],al
   140012af0:	rex.XB
   140012af1:	rex.R
   140012af2:	rex.RB
   140012af3:	rex.RX
   140012af4:	rex.RXB
   140012af5:	rex.W
   140012af6:	rex.WB
   140012af7:	rex.WX
   140012af8:	rex.WXB
   140012af9:	rex.WR
   140012afa:	rex.WRB
   140012afb:	rex.WRX
   140012afc:	rex.WRXB push r8
   140012afe:	push   rcx
   140012aff:	push   rdx
   140012b00:	push   rbx
   140012b01:	push   rsp
   140012b02:	push   rbp
   140012b03:	push   rsi
   140012b04:	push   rdi
   140012b05:	pop    rax
   140012b06:	pop    rcx
   140012b07:	pop    rdx
	...
   140012bd0:	add    BYTE PTR [rax],al
   140012bd2:	adc    BYTE PTR [rax],dl
   140012bd4:	adc    BYTE PTR [rax],dl
   140012bd6:	adc    BYTE PTR [rax],dl
   140012bd8:	adc    BYTE PTR [rax],dl
   140012bda:	adc    BYTE PTR [rax],dl
   140012bdc:	adc    BYTE PTR [rax],dl
   140012bde:	adc    BYTE PTR [rax],dl
   140012be0:	adc    BYTE PTR [rax],dl
   140012be2:	adc    BYTE PTR [rax],dl
   140012be4:	adc    BYTE PTR [rax],dl
   140012be6:	adc    BYTE PTR [rax],dl
   140012be8:	adc    BYTE PTR [rax],dl
   140012bea:	adc    BYTE PTR [rax],dl
   140012bec:	add    BYTE PTR [rax],al
   140012bee:	add    BYTE PTR [rax],al
   140012bf0:	add    BYTE PTR [rax],al
   140012bf2:	and    BYTE PTR [rax],ah
   140012bf4:	and    BYTE PTR [rax],ah
   140012bf6:	and    BYTE PTR [rax],ah
   140012bf8:	and    BYTE PTR [rax],ah
   140012bfa:	and    BYTE PTR [rax],ah
   140012bfc:	and    BYTE PTR [rax],ah
   140012bfe:	and    BYTE PTR [rax],ah
   140012c00:	and    BYTE PTR [rax],ah
   140012c02:	and    BYTE PTR [rax],ah
   140012c04:	and    BYTE PTR [rax],ah
   140012c06:	and    BYTE PTR [rax],ah
   140012c08:	and    BYTE PTR [rax],ah
   140012c0a:	and    BYTE PTR [rax],ah
	...
   140012ce0:	add    BYTE PTR [rcx+0x62],ah
   140012ce3:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   140012ce7:	addr32 push 0x6c6b6a69
   140012ced:	ins    DWORD PTR es:[rdi],dx
   140012cee:	outs   dx,BYTE PTR ds:[rsi]
   140012cef:	outs   dx,DWORD PTR ds:[rsi]
   140012cf0:	jo     0x140012d63
   140012cf2:	jb     0x140012d67
   140012cf4:	je     0x140012d6b
   140012cf6:	jbe    0x140012d6f
   140012cf8:	js     0x140012d73
   140012cfa:	jp     0x140012cfc
   140012cfc:	add    BYTE PTR [rax],al
   140012cfe:	add    BYTE PTR [rax],al
   140012d00:	add    BYTE PTR [rcx+0x42],al
   140012d03:	rex.XB
   140012d04:	rex.R
   140012d05:	rex.RB
   140012d06:	rex.RX
   140012d07:	rex.RXB
   140012d08:	rex.W
   140012d09:	rex.WB
   140012d0a:	rex.WX
   140012d0b:	rex.WXB
   140012d0c:	rex.WR
   140012d0d:	rex.WRB
   140012d0e:	rex.WRX
   140012d0f:	rex.WRXB push r8
   140012d11:	push   rcx
   140012d12:	push   rdx
   140012d13:	push   rbx
   140012d14:	push   rsp
   140012d15:	push   rbp
   140012d16:	push   rsi
   140012d17:	push   rdi
   140012d18:	pop    rax
   140012d19:	pop    rcx
   140012d1a:	pop    rdx
	...
   140012d9f:	add    BYTE PTR [rax+0x29],dh
   140012da2:	add    DWORD PTR [rax+0x1],eax
   140012da5:	add    BYTE PTR [rax],al
   140012da7:	add    BYTE PTR [rcx],al
   140012da9:	add    al,BYTE PTR [rax+rcx*1]
   140012dac:	add    BYTE PTR [rax],al
   140012dae:	add    BYTE PTR [rax],al
   140012db0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012db1:	add    eax,DWORD PTR [rax]
   140012db3:	add    BYTE PTR [rax-0x7e],ah
   140012db6:	jns    0x140012d3a
   140012db8:	and    DWORD PTR [rax],eax
   140012dba:	add    BYTE PTR [rax],al
   140012dbc:	add    BYTE PTR [rax],al
   140012dbe:	add    BYTE PTR [rax],al
   140012dc0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012dc1:	fild   WORD PTR [rax]
   140012dc3:	add    BYTE PTR [rax],al
   140012dc5:	add    BYTE PTR [rax],al
   140012dc7:	add    BYTE PTR [rcx+0xa5],ah
   140012dcd:	add    BYTE PTR [rax],al
   140012dcf:	add    BYTE PTR [rcx+0xfce09f],al
   140012dd5:	add    BYTE PTR [rax],al
   140012dd7:	add    BYTE PTR [rax+0x7e],al
   140012dda:	cmp    ah,0x0
   140012ddd:	add    BYTE PTR [rax],al
   140012ddf:	add    BYTE PTR [rax-0x3efffffd],ch
   140012de5:	movabs ds:0x20a3da,eax
	...
   140012dfe:	add    BYTE PTR [rax],al
   140012e00:	cmp    esi,0x0
   140012e06:	add    BYTE PTR [rax],al
   140012e08:	rex inc BYTE PTR [rax]
   140012e0b:	add    BYTE PTR [rax],al
   140012e0d:	add    BYTE PTR [rax],al
   140012e0f:	add    BYTE PTR [rbp-0x3efffffd],dh
   140012e15:	movabs ds:0x20a3da,eax
	...
   140012e2e:	add    BYTE PTR [rax],al
   140012e30:	cmp    esi,0x0
   140012e36:	add    BYTE PTR [rax],al
   140012e38:	inc    BYTE PTR [r8]
   140012e3b:	add    BYTE PTR [rax],al
   140012e3d:	add    BYTE PTR [rax],al
   140012e3f:	add    BYTE PTR [rsi-0x30fffffd],dh
   140012e45:	movabs ds:0xa2e8a2e5001aa2e4,al
   140012e4e:	pop    rbx
	...
   140012e5f:	add    BYTE PTR [rcx+0xfe],al
   140012e65:	add    BYTE PTR [rax],al
   140012e67:	add    BYTE PTR [rax+0x7e],al
   140012e6a:	movabs eax,ds:0x55100000000fe
   140012e73:	add    BYTE PTR [rcx-0x26],dl
   140012e76:	pop    rsi
   140012e77:	fisub  DWORD PTR [rax]
   140012e79:	add    BYTE PTR [rdi-0x26],bl
   140012e7c:	push   0xffffffffffffffda
   140012e7e:	xor    al,BYTE PTR [rax]
	...
   140012e90:	adc    ebx,0xf9e0ded8
   140012e96:	add    BYTE PTR [rax],al
   140012e98:	xor    DWORD PTR [rsi-0x7f],edi
   140012e9b:	inc    BYTE PTR [rax]
   140012e9d:	add    BYTE PTR [rax],al
   140012e9f:	add    dh,bh
   140012ea1:	(bad)  
   140012ea2:	(bad)  
   140012ea3:	inc    DWORD PTR [rbx+0x0]
	...
   140012eae:	add    BYTE PTR [rax],al
   140012eb0:	js     0x140012eae
   140012eb2:	add    BYTE PTR [rax+0x1],al
   140012eb5:	add    BYTE PTR [rax],al
   140012eb7:	add    BYTE PTR [rsp+rdi*8+0x0],dh
   140012ebb:	rex add DWORD PTR [rax],eax
   140012ebe:	add    BYTE PTR [rax],al
   140012ec0:	jo     0x140012ebe
   140012ec2:	add    BYTE PTR [rax+0x1],al
   140012ec5:	add    BYTE PTR [rax],al
   140012ec7:	add    BYTE PTR [rsp+rdi*8+0x0],ch
   140012ecb:	rex add DWORD PTR [rax],eax
   140012ece:	add    BYTE PTR [rax],al
   140012ed0:	push   0x14000fc
   140012ed5:	add    BYTE PTR [rax],al
   140012ed7:	add    BYTE PTR [rsp+rdi*8+0x0],ah
   140012edb:	rex add DWORD PTR [rax],eax
   140012ede:	add    BYTE PTR [rax],al
   140012ee0:	(bad)  
   140012ee1:	cld    
   140012ee2:	add    BYTE PTR [rax+0x1],al
   140012ee5:	add    BYTE PTR [rax],al
   140012ee7:	add    BYTE PTR [rax-0x4],bl
   140012eea:	add    BYTE PTR [rax+0x1],al
   140012eed:	add    BYTE PTR [rax],al
   140012eef:	add    BYTE PTR [rax-0x4],dl
   140012ef2:	add    BYTE PTR [rax+0x1],al
   140012ef5:	add    BYTE PTR [rax],al
   140012ef7:	add    BYTE PTR [rax-0x4],cl
   140012efa:	add    BYTE PTR [rax+0x1],al
   140012efd:	add    BYTE PTR [rax],al
   140012eff:	add    BYTE PTR [rax],bh
   140012f01:	cld    
   140012f02:	add    BYTE PTR [rax+0x1],al
   140012f05:	add    BYTE PTR [rax],al
   140012f07:	add    BYTE PTR [rax],ch
   140012f09:	cld    
   140012f0a:	add    BYTE PTR [rax+0x1],al
   140012f0d:	add    BYTE PTR [rax],al
   140012f0f:	add    BYTE PTR [rsp+rdi*8],bl
   140012f12:	add    BYTE PTR [rax+0x1],al
   140012f15:	add    BYTE PTR [rax],al
   140012f17:	add    BYTE PTR [rax],dl
   140012f19:	cld    
   140012f1a:	add    BYTE PTR [rax+0x1],al
   140012f1d:	add    BYTE PTR [rax],al
   140012f1f:	add    BYTE PTR [rsp+rdi*8],cl
   140012f22:	add    BYTE PTR [rax+0x1],al
   140012f25:	add    BYTE PTR [rax],al
   140012f27:	add    BYTE PTR [rax],cl
   140012f29:	cld    
   140012f2a:	add    BYTE PTR [rax+0x1],al
   140012f2d:	add    BYTE PTR [rax],al
   140012f2f:	add    BYTE PTR [rsp+rdi*8],al
   140012f32:	add    BYTE PTR [rax+0x1],al
   140012f35:	add    BYTE PTR [rax],al
   140012f37:	add    BYTE PTR [rax],al
   140012f39:	cld    
   140012f3a:	add    BYTE PTR [rax+0x1],al
   140012f3d:	add    BYTE PTR [rax],al
   140012f3f:	add    ah,bh
   140012f41:	sti    
   140012f42:	add    BYTE PTR [rax+0x1],al
   140012f45:	add    BYTE PTR [rax],al
   140012f47:	add    al,bh
   140012f49:	sti    
   140012f4a:	add    BYTE PTR [rax+0x1],al
   140012f4d:	add    BYTE PTR [rax],al
   140012f4f:	add    ah,dh
   140012f51:	sti    
   140012f52:	add    BYTE PTR [rax+0x1],al
   140012f55:	add    BYTE PTR [rax],al
   140012f57:	add    al,dh
   140012f59:	sti    
   140012f5a:	add    BYTE PTR [rax+0x1],al
   140012f5d:	add    BYTE PTR [rax],al
   140012f5f:	add    ah,ch
   140012f61:	sti    
   140012f62:	add    BYTE PTR [rax+0x1],al
   140012f65:	add    BYTE PTR [rax],al
   140012f67:	add    al,ch
   140012f69:	sti    
   140012f6a:	add    BYTE PTR [rax+0x1],al
   140012f6d:	add    BYTE PTR [rax],al
   140012f6f:	add    ah,ah
   140012f71:	sti    
   140012f72:	add    BYTE PTR [rax+0x1],al
   140012f75:	add    BYTE PTR [rax],al
   140012f77:	add    al,ah
   140012f79:	sti    
   140012f7a:	add    BYTE PTR [rax+0x1],al
   140012f7d:	add    BYTE PTR [rax],al
   140012f7f:	add    al,bl
   140012f81:	sti    
   140012f82:	add    BYTE PTR [rax+0x1],al
   140012f85:	add    BYTE PTR [rax],al
   140012f87:	add    al,cl
   140012f89:	sti    
   140012f8a:	add    BYTE PTR [rax+0x1],al
   140012f8d:	add    BYTE PTR [rax],al
   140012f8f:	add    BYTE PTR [rbx+rdi*8+0x14000],bh
   140012f96:	add    BYTE PTR [rax],al
   140012f98:	mov    ah,0xfb
   140012f9a:	add    BYTE PTR [rax+0x1],al
   140012f9d:	add    BYTE PTR [rax],al
   140012f9f:	add    ah,bh
   140012fa1:	sti    
   140012fa2:	add    BYTE PTR [rax+0x1],al
   140012fa5:	add    BYTE PTR [rax],al
   140012fa7:	add    BYTE PTR [rbx+rdi*8+0x14000],ch
   140012fae:	add    BYTE PTR [rax],al
   140012fb0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012fb1:	sti    
   140012fb2:	add    BYTE PTR [rax+0x1],al
   140012fb5:	add    BYTE PTR [rax],al
   140012fb7:	add    BYTE PTR [rbx+rdi*8+0x14000],bl
   140012fbe:	add    BYTE PTR [rax],al
   140012fc0:	nop
   140012fc1:	sti    
   140012fc2:	add    BYTE PTR [rax+0x1],al
   140012fc5:	add    BYTE PTR [rax],al
   140012fc7:	add    BYTE PTR [rax+0x14000fb],cl
   140012fcd:	add    BYTE PTR [rax],al
   140012fcf:	add    BYTE PTR [rax-0x5],bh
   140012fd2:	add    BYTE PTR [rax+0x1],al
   140012fd5:	add    BYTE PTR [rax],al
   140012fd7:	add    BYTE PTR [rax-0x5],ch
   140012fda:	add    BYTE PTR [rax+0x1],al
   140012fdd:	add    BYTE PTR [rax],al
   140012fdf:	add    BYTE PTR [rax-0x5],ah
   140012fe2:	add    BYTE PTR [rax+0x1],al
   140012fe5:	add    BYTE PTR [rax],al
   140012fe7:	add    BYTE PTR [rbx+rdi*8+0x0],bl
   140012feb:	rex add DWORD PTR [rax],eax
   140012fee:	add    BYTE PTR [rax],al
   140012ff0:	push   rax
   140012ff1:	sti    
   140012ff2:	add    BYTE PTR [rax+0x1],al
   140012ff5:	add    BYTE PTR [rax],al
   140012ff7:	add    BYTE PTR [rax],bh
   140012ff9:	sti    
   140012ffa:	add    BYTE PTR [rax+0x1],al
   140012ffd:	add    BYTE PTR [rax],al
   140012fff:	add    BYTE PTR [rax],ch
   140013001:	sti    
   140013002:	add    BYTE PTR [rax+0x1],al
   140013005:	add    BYTE PTR [rax],al
   140013007:	add    BYTE PTR [rcx],cl
   140013009:	add    al,0x0
   14001300b:	add    BYTE PTR [rcx],al
	...
   140013015:	add    BYTE PTR [rax],al
   140013017:	add    BYTE PTR [rax],ah
   140013019:	sti    
   14001301a:	add    BYTE PTR [rax+0x1],al
   14001301d:	add    BYTE PTR [rax],al
   14001301f:	add    BYTE PTR [rax],bl
   140013021:	sti    
   140013022:	add    BYTE PTR [rax+0x1],al
   140013025:	add    BYTE PTR [rax],al
   140013027:	add    BYTE PTR [rax],dl
   140013029:	sti    
   14001302a:	add    BYTE PTR [rax+0x1],al
   14001302d:	add    BYTE PTR [rax],al
   14001302f:	add    BYTE PTR [rax],cl
   140013031:	sti    
   140013032:	add    BYTE PTR [rax+0x1],al
   140013035:	add    BYTE PTR [rax],al
   140013037:	add    BYTE PTR [rax],al
   140013039:	sti    
   14001303a:	add    BYTE PTR [rax+0x1],al
   14001303d:	add    BYTE PTR [rax],al
   14001303f:	add    al,bh
   140013041:	cli    
   140013042:	add    BYTE PTR [rax+0x1],al
   140013045:	add    BYTE PTR [rax],al
   140013047:	add    al,dh
   140013049:	cli    
   14001304a:	add    BYTE PTR [rax+0x1],al
   14001304d:	add    BYTE PTR [rax],al
   14001304f:	add    al,ah
   140013051:	cli    
   140013052:	add    BYTE PTR [rax+0x1],al
   140013055:	add    BYTE PTR [rax],al
   140013057:	add    al,dl
   140013059:	cli    
   14001305a:	add    BYTE PTR [rax+0x1],al
   14001305d:	add    BYTE PTR [rax],al
   14001305f:	add    al,al
   140013061:	cli    
   140013062:	add    BYTE PTR [rax+0x1],al
   140013065:	add    BYTE PTR [rax],al
   140013067:	add    BYTE PTR [rax+0x14000fa],ch
   14001306d:	add    BYTE PTR [rax],al
   14001306f:	add    BYTE PTR [rax+0x14000fa],dl
   140013075:	add    BYTE PTR [rax],al
   140013077:	add    BYTE PTR [rax+0x14000fa],al
   14001307d:	add    BYTE PTR [rax],al
   14001307f:	add    BYTE PTR [rax-0x6],ch
   140013082:	add    BYTE PTR [rax+0x1],al
   140013085:	add    BYTE PTR [rax],al
   140013087:	add    BYTE PTR [rax-0x6],ah
   14001308a:	add    BYTE PTR [rax+0x1],al
   14001308d:	add    BYTE PTR [rax],al
   14001308f:	add    BYTE PTR [rax-0x6],bl
   140013092:	add    BYTE PTR [rax+0x1],al
   140013095:	add    BYTE PTR [rax],al
   140013097:	add    BYTE PTR [rax-0x6],dl
   14001309a:	add    BYTE PTR [rax+0x1],al
   14001309d:	add    BYTE PTR [rax],al
   14001309f:	add    BYTE PTR [rax-0x6],cl
   1400130a2:	add    BYTE PTR [rax+0x1],al
   1400130a5:	add    BYTE PTR [rax],al
   1400130a7:	add    BYTE PTR [rax-0x6],al
   1400130aa:	add    BYTE PTR [rax+0x1],al
   1400130ad:	add    BYTE PTR [rax],al
   1400130af:	add    BYTE PTR [rax],bh
   1400130b1:	cli    
   1400130b2:	add    BYTE PTR [rax+0x1],al
   1400130b5:	add    BYTE PTR [rax],al
   1400130b7:	add    BYTE PTR [rax],dh
   1400130b9:	cli    
   1400130ba:	add    BYTE PTR [rax+0x1],al
   1400130bd:	add    BYTE PTR [rax],al
   1400130bf:	add    BYTE PTR [rax],ch
   1400130c1:	cli    
   1400130c2:	add    BYTE PTR [rax+0x1],al
   1400130c5:	add    BYTE PTR [rax],al
   1400130c7:	add    BYTE PTR [rax],ah
   1400130c9:	cli    
   1400130ca:	add    BYTE PTR [rax+0x1],al
   1400130cd:	add    BYTE PTR [rax],al
   1400130cf:	add    BYTE PTR [rax],bl
   1400130d1:	cli    
   1400130d2:	add    BYTE PTR [rax+0x1],al
   1400130d5:	add    BYTE PTR [rax],al
   1400130d7:	add    BYTE PTR [rax],dl
   1400130d9:	cli    
   1400130da:	add    BYTE PTR [rax+0x1],al
   1400130dd:	add    BYTE PTR [rax],al
   1400130df:	add    BYTE PTR [rax],cl
   1400130e1:	cli    
   1400130e2:	add    BYTE PTR [rax+0x1],al
   1400130e5:	add    BYTE PTR [rax],al
   1400130e7:	add    al,bh
   1400130e9:	stc    
   1400130ea:	add    BYTE PTR [rax+0x1],al
   1400130ed:	add    BYTE PTR [rax],al
   1400130ef:	add    al,ah
   1400130f1:	stc    
   1400130f2:	add    BYTE PTR [rax+0x1],al
   1400130f5:	add    BYTE PTR [rax],al
   1400130f7:	add    al,dl
   1400130f9:	stc    
   1400130fa:	add    BYTE PTR [rax+0x1],al
   1400130fd:	add    BYTE PTR [rax],al
   1400130ff:	add    al,al
   140013101:	stc    
   140013102:	add    BYTE PTR [rax+0x1],al
   140013105:	add    BYTE PTR [rax],al
   140013107:	add    BYTE PTR [rax-0x6],al
   14001310a:	add    BYTE PTR [rax+0x1],al
   14001310d:	add    BYTE PTR [rax],al
   14001310f:	add    BYTE PTR [rax+0x14000f9],dh
   140013115:	add    BYTE PTR [rax],al
   140013117:	add    BYTE PTR [rax+0x14000f9],ah
   14001311d:	add    BYTE PTR [rax],al
   14001311f:	add    BYTE PTR [rax+0x14000f9],dl
   140013125:	add    BYTE PTR [rax],al
   140013127:	add    BYTE PTR [rax-0x7],bh
   14001312a:	add    BYTE PTR [rax+0x1],al
   14001312d:	add    BYTE PTR [rax],al
   14001312f:	add    BYTE PTR [rax-0x7],ch
   140013132:	add    BYTE PTR [rax+0x1],al
   140013135:	add    BYTE PTR [rax],al
   140013137:	add    BYTE PTR [rax-0x7],dl
   14001313a:	add    BYTE PTR [rax+0x1],al
   14001313d:	add    BYTE PTR [rax],al
   14001313f:	add    BYTE PTR [rax],bh
   140013141:	stc    
   140013142:	add    BYTE PTR [rax+0x1],al
   140013145:	add    BYTE PTR [rax],al
   140013147:	add    BYTE PTR [rcx+rdi*8],ch
   14001314a:	add    BYTE PTR [rax+0x1],al
   14001314d:	add    BYTE PTR [rax],al
   14001314f:	add    BYTE PTR [rcx+rdi*8],ah
   140013152:	add    BYTE PTR [rax+0x1],al
   140013155:	add    BYTE PTR [rax],al
   140013157:	add    BYTE PTR [rax],dl
   140013159:	stc    
   14001315a:	add    BYTE PTR [rax+0x1],al
   14001315d:	add    BYTE PTR [rax],al
   14001315f:	add    al,ch
   140013161:	clc    
   140013162:	add    BYTE PTR [rax+0x1],al
   140013165:	add    BYTE PTR [rax],al
   140013167:	add    al,dl
   140013169:	clc    
   14001316a:	add    BYTE PTR [rax+0x1],al
   14001316d:	add    BYTE PTR [rax],al
   14001316f:	add    BYTE PTR [rcx],al
	...
   1400131d5:	add    BYTE PTR [rax],al
   1400131d7:	add    BYTE PTR [rsi+rbp*1+0x14001],ah
	...
   1400131f6:	add    BYTE PTR [rax],al
   1400131f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400131f9:	add    DWORD PTR cs:[rax+0x1],eax
	...
   140013215:	add    BYTE PTR [rax],al
   140013217:	add    BYTE PTR [rsi+rbp*1+0x14001],ah
	...
   140013236:	add    BYTE PTR [rax],al
   140013238:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013239:	add    DWORD PTR cs:[rax+0x1],eax
	...
   140013255:	add    BYTE PTR [rax],al
   140013257:	add    BYTE PTR [rsi+rbp*1+0x14001],ah
	...
   140013276:	add    BYTE PTR [rax],al
   140013278:	add    DWORD PTR [rax],eax
   14001327a:	add    BYTE PTR [rax],al
   14001327c:	add    DWORD PTR [rax],eax
	...
   140013296:	add    BYTE PTR [rax],al
   140013298:	add    BYTE PTR [rbx],dh
   14001329a:	add    DWORD PTR [rax+0x1],eax
	...
   1400132b1:	lock add BYTE PTR [rax+0x1],al
   1400132b5:	add    BYTE PTR [rax],al
   1400132b7:	add    BYTE PTR [rax+0x14000f4],dl
   1400132bd:	add    BYTE PTR [rax],al
   1400132bf:	add    BYTE PTR [rax],dl
   1400132c1:	test   BYTE PTR [rax],0x40
   1400132c4:	add    DWORD PTR [rax],eax
   1400132c6:	add    BYTE PTR [rax],al
   1400132c8:	mov    al,0x2e
   1400132ca:	add    DWORD PTR [rax+0x1],eax
   1400132cd:	add    BYTE PTR [rax],al
   1400132cf:	add    BYTE PTR [rax+0x31],dh
   1400132d2:	add    DWORD PTR [rax+0x1],eax
	...
   1400132dd:	add    BYTE PTR [rax],al
   1400132df:	add    BYTE PTR [rdx+rsi*8],al
   1400132e2:	add    BYTE PTR [rax+0x1],al
   1400132e5:	add    BYTE PTR [rax],al
   1400132e7:	add    BYTE PTR [rdx],al
   1400132e9:	add    BYTE PTR [rax],al
   1400132eb:	add    BYTE PTR [rax],al
   1400132ed:	add    BYTE PTR [rax],al
   1400132ef:	add    BYTE PTR [rsi],ch
   1400132f1:	add    BYTE PTR [rax],al
   1400132f3:	add    BYTE PTR [rsi],ch
   1400132f5:	add    BYTE PTR [rax],al
   1400132f7:	add    BYTE PTR [rax],al
   1400132f9:	xor    eax,DWORD PTR [rcx]
   1400132fb:	rex add DWORD PTR [rax],eax
   1400132fe:	add    BYTE PTR [rax],al
   140013300:	lock xor al,BYTE PTR [rcx]
   140013303:	rex add DWORD PTR [rax],eax
   140013306:	add    BYTE PTR [rax],al
   140013308:	in     al,0x43
   14001330a:	add    DWORD PTR [rax+0x1],eax
   14001330d:	add    BYTE PTR [rax],al
   14001330f:	add    ah,ah
   140013311:	rex.XB add DWORD PTR [r8+0x1],eax
   140013315:	add    BYTE PTR [rax],al
   140013317:	add    ah,ah
   140013319:	rex.XB add DWORD PTR [r8+0x1],eax
   14001331d:	add    BYTE PTR [rax],al
   14001331f:	add    ah,ah
   140013321:	rex.XB add DWORD PTR [r8+0x1],eax
   140013325:	add    BYTE PTR [rax],al
   140013327:	add    ah,ah
   140013329:	rex.XB add DWORD PTR [r8+0x1],eax
   14001332d:	add    BYTE PTR [rax],al
   14001332f:	add    ah,ah
   140013331:	rex.XB add DWORD PTR [r8+0x1],eax
   140013335:	add    BYTE PTR [rax],al
   140013337:	add    ah,ah
   140013339:	rex.XB add DWORD PTR [r8+0x1],eax
   14001333d:	add    BYTE PTR [rax],al
   14001333f:	add    ah,ah
   140013341:	rex.XB add DWORD PTR [r8+0x1],eax
   140013345:	add    BYTE PTR [rax],al
   140013347:	add    ah,ah
   140013349:	rex.XB add DWORD PTR [r8+0x1],eax
   14001334d:	add    BYTE PTR [rax],al
   14001334f:	add    BYTE PTR [rdi+0x7f],bh
   140013352:	jg     0x1400133d3
   140013354:	jg     0x1400133d5
   140013356:	jg     0x1400133d7
   140013358:	hlt    
   140013359:	xor    al,BYTE PTR [rcx]
   14001335b:	rex add DWORD PTR [rax],eax
   14001335e:	add    BYTE PTR [rax],al
   140013360:	call   0x1414134a8
   140013365:	add    BYTE PTR [rax],al
   140013367:	add    al,ch
   140013369:	rex.XB add DWORD PTR [r8+0x1],eax
   14001336d:	add    BYTE PTR [rax],al
   14001336f:	add    al,ch
   140013371:	rex.XB add DWORD PTR [r8+0x1],eax
   140013375:	add    BYTE PTR [rax],al
   140013377:	add    al,ch
   140013379:	rex.XB add DWORD PTR [r8+0x1],eax
   14001337d:	add    BYTE PTR [rax],al
   14001337f:	add    al,ch
   140013381:	rex.XB add DWORD PTR [r8+0x1],eax
   140013385:	add    BYTE PTR [rax],al
   140013387:	add    al,ch
   140013389:	rex.XB add DWORD PTR [r8+0x1],eax
   14001338d:	add    BYTE PTR [rax],al
   14001338f:	add    al,ch
   140013391:	rex.XB add DWORD PTR [r8+0x1],eax
   140013395:	add    BYTE PTR [rax],al
   140013397:	add    BYTE PTR [rcx],al
   140013399:	add    BYTE PTR [rax],al
   14001339b:	add    BYTE PTR [rsi],ch
   14001339d:	add    BYTE PTR [rax],al
   14001339f:	add    BYTE PTR [rcx],al
	...
   1400133ad:	add    BYTE PTR [rax],al
   1400133af:	add    dh,bh
   1400133b1:	(bad)  
   1400133b2:	(bad)  
   1400133b3:	(bad)  
   1400133b4:	(bad)  
   1400133b5:	(bad)  
   1400133b6:	(bad)  
   1400133b7:	inc    DWORD PTR [rax]
   1400133b9:	rex.WXB add rax,0x6
	...

Disassembly of section .pdata:

0000000140016000 <.pdata>:
   140016000:	add    BYTE PTR [rax],dl
   140016002:	add    BYTE PTR [rax],al
   140016004:	jb     0x140016016
   140016006:	add    BYTE PTR [rax],al
   140016008:	(bad)  
   140016009:	or     eax,DWORD PTR [rcx]
   14001600b:	add    BYTE PTR [rax+rdx*1+0x0],dh
   14001600f:	add    bl,bl
   140016011:	adc    BYTE PTR [rax],al
   140016013:	add    BYTE PTR [rbx+rcx*1+0x10dc0001],dh
   14001601a:	add    BYTE PTR [rax],al
   14001601c:	(bad)  
   14001601d:	adc    al,BYTE PTR [rax]
   14001601f:	add    al,dh
   140016021:	or     eax,DWORD PTR [rcx]
   140016023:	add    al,dl
   140016025:	adc    al,BYTE PTR [rax]
   140016027:	add    BYTE PTR [rbx],bh
   140016029:	adc    eax,DWORD PTR [rax]
   14001602b:	add    BYTE PTR [rdx+rcx*1+0x133c0001],bl
   140016032:	add    BYTE PTR [rax],al
   140016034:	(bad)  
   140016035:	adc    eax,DWORD PTR [rax]
   140016037:	add    BYTE PTR [rsp+rcx*1],dh
   14001603a:	add    DWORD PTR [rax],eax
   14001603c:	(bad)  
   14001603d:	adc    eax,DWORD PTR [rax]
   14001603f:	add    BYTE PTR [rdx+0x15],dl
   140016042:	add    BYTE PTR [rax],al
   140016044:	(bad)  
   140016045:	or     eax,DWORD PTR [rcx]
   140016047:	add    BYTE PTR [rbp+rdx*1+0x0],dl
   14001604b:	add    bh,bh
   14001604d:	sbb    BYTE PTR [rax],al
   14001604f:	add    BYTE PTR [rsp+rcx*1],cl
   140016052:	add    DWORD PTR [rax],eax
   140016054:	add    BYTE PTR [rcx],bl
   140016056:	add    BYTE PTR [rax],al
   140016058:	or     bl,BYTE PTR [rcx]
   14001605a:	add    BYTE PTR [rax],al
   14001605c:	xor    al,0xc
   14001605e:	add    DWORD PTR [rax],eax
   140016060:	and    BYTE PTR [rcx],bl
   140016062:	add    BYTE PTR [rax],al
   140016064:	(bad)  
   140016065:	sbb    DWORD PTR [rax],eax
   140016067:	add    al,al
   140016069:	add    DWORD PTR [rcx],eax
   14001606b:	add    BYTE PTR [rax+0x19],al
   14001606e:	add    BYTE PTR [rax],al
   140016070:	sbb    eax,0xcc00001a
   140016075:	add    DWORD PTR [rcx],eax
   140016077:	add    BYTE PTR [rax],ah
   140016079:	sbb    al,BYTE PTR [rax]
   14001607b:	add    BYTE PTR [rbx+0x1a],dh
   14001607e:	add    BYTE PTR [rax],al
   140016080:	or     BYTE PTR [rdx],al
   140016082:	add    DWORD PTR [rax],eax
   140016084:	xchg   esp,eax
   140016085:	sbb    al,BYTE PTR [rax]
   140016087:	add    cl,dl
   140016089:	sbb    al,BYTE PTR [rax]
   14001608b:	add    BYTE PTR [rax+0xb],ch
   14001608e:	add    DWORD PTR [rax],eax
   140016090:	(bad)  
   140016091:	sbb    al,BYTE PTR [rax]
   140016093:	add    BYTE PTR [rip+0x800001b],dl        # 0x1480160b4
   140016099:	add    al,BYTE PTR [rcx]
   14001609b:	add    BYTE PTR [rax],bl
   14001609d:	sbb    eax,DWORD PTR [rax]
   14001609f:	add    dh,cl
   1400160a1:	sbb    eax,DWORD PTR [rax]
   1400160a3:	add    BYTE PTR [rbx+rcx*1+0x1bd80001],dh
   1400160aa:	add    BYTE PTR [rax],al
   1400160ac:	mov    eax,0x800001c
   1400160b1:	add    al,BYTE PTR [rcx]
   1400160b3:	add    BYTE PTR [rax-0x20ffffe4],bh
   1400160b9:	sbb    al,0x0
   1400160bb:	add    BYTE PTR [rsp+rcx*1],dh
   1400160be:	add    DWORD PTR [rax],eax
   1400160c0:	loopne 0x1400160de
   1400160c2:	add    BYTE PTR [rax],al
   1400160c4:	rex.XB sbb eax,0x2080000
   1400160ca:	add    DWORD PTR [rax],eax
   1400160cc:	rex.R sbb eax,0x1d750000
   1400160d2:	add    BYTE PTR [rax],al
   1400160d4:	or     BYTE PTR [rdx],al
   1400160d6:	add    DWORD PTR [rax],eax
   1400160d8:	add    BYTE PTR [rsi],bl
   1400160da:	add    BYTE PTR [rax],al
   1400160dc:	and    bl,BYTE PTR [rsi]
   1400160de:	add    BYTE PTR [rax],al
   1400160e0:	adc    BYTE PTR [rdx],al
   1400160e2:	add    DWORD PTR [rax],eax
   1400160e4:	and    al,0x1e
   1400160e6:	add    BYTE PTR [rax],al
   1400160e8:	pop    rbx
   1400160e9:	and    BYTE PTR [rax],al
   1400160eb:	add    BYTE PTR [rax],bl
   1400160ed:	add    al,BYTE PTR [rcx]
   1400160ef:	add    BYTE PTR [rax+riz*1+0x0],bl
   1400160f3:	add    BYTE PTR [rbx],al
   1400160f5:	and    DWORD PTR [rax],eax
   1400160f7:	add    BYTE PTR [rax],bh
   1400160f9:	add    al,BYTE PTR [rcx]
   1400160fb:	add    BYTE PTR [rcx+riz*1],al
   1400160fe:	add    BYTE PTR [rax],al
   140016100:	and    DWORD PTR [rcx],esp
   140016102:	add    BYTE PTR [rax],al
   140016104:	lock add eax,DWORD PTR [rcx]
   140016107:	add    BYTE PTR [rcx+riz*1],ah
   14001610a:	add    BYTE PTR [rax],al
   14001610c:	push   rdx
   14001610d:	and    al,BYTE PTR [rax]
   14001610f:	add    BYTE PTR [rax+0x2],ch
   140016112:	add    DWORD PTR [rax],eax
   140016114:	push   rsp
   140016115:	and    al,BYTE PTR [rax]
   140016117:	add    BYTE PTR [rdx+0x68000022],bh
   14001611d:	or     eax,DWORD PTR [rcx]
   14001611f:	add    BYTE PTR [rdx+riz*1+0x24720000],bh
   140016126:	add    BYTE PTR [rax],al
   140016128:	nop
   140016129:	add    al,BYTE PTR [rcx]
   14001612b:	add    BYTE PTR [rsp+0x0],dh
   14001612f:	add    ah,cl
   140016131:	and    al,0x0
   140016133:	add    BYTE PTR [rdx+rax*1+0x24cc0001],ch
   14001613a:	add    BYTE PTR [rax],al
   14001613c:	jle    0x140016163
   14001613e:	add    BYTE PTR [rax],al
   140016140:	rol    BYTE PTR [rdx],1
   140016142:	add    DWORD PTR [rax],eax
   140016144:	and    BYTE PTR [rip+0x25fa0000],0x0        # 0x165fb614b
   14001614b:	add    ah,ah
   14001614d:	add    al,BYTE PTR [rcx]
   14001614f:	add    ah,bh
   140016151:	and    eax,0x26760000
   140016156:	add    BYTE PTR [rax],al
   140016158:	test   BYTE PTR [rsi],al
   14001615a:	add    DWORD PTR [rax],eax
   14001615c:	js     0x140016184
   14001615e:	add    BYTE PTR [rax],al
   140016160:	fisub  WORD PTR [rsi]
   140016162:	add    BYTE PTR [rax],al
   140016164:	or     al,0x3
   140016166:	add    DWORD PTR [rax],eax
   140016168:	loopne 0x140016190
   14001616a:	add    BYTE PTR [rax],al
   14001616c:	push   rdi
   14001616d:	sub    BYTE PTR [rax],al
   14001616f:	add    BYTE PTR [rax],dh
   140016171:	add    eax,DWORD PTR [rcx]
   140016173:	add    BYTE PTR [rax+0x28],bl
   140016176:	add    BYTE PTR [rax],al
   140016178:	push   0x28
   14001617a:	add    BYTE PTR [rax],al
   14001617c:	xor    al,0xc
   14001617e:	add    DWORD PTR [rax],eax
   140016180:	ins    BYTE PTR es:[rdi],dx
   140016181:	sub    BYTE PTR [rax],al
   140016183:	add    BYTE PTR [rsi+0x54000029],dh
   140016189:	add    eax,DWORD PTR [rcx]
   14001618b:	add    BYTE PTR [rax-0x4affffd7],bh
   140016191:	sub    eax,DWORD PTR [rax]
   140016193:	add    BYTE PTR [rbx+rax*1+0x1],bl
   140016197:	add    BYTE PTR [rax-0x6affffd5],bh
   14001619d:	add    BYTE PTR cs:[rax],al
   1400161a0:	js     0x1400161a5
   1400161a2:	add    DWORD PTR [rax],eax
   1400161a4:	cwde   
   1400161a5:	add    BYTE PTR cs:[rax],al
   1400161a8:	out    dx,eax
   1400161a9:	(bad)  
   1400161aa:	add    BYTE PTR [rax],al
   1400161ac:	xchg   esp,eax
   1400161ad:	add    eax,DWORD PTR [rcx]
   1400161af:	add    al,bh
   1400161b1:	(bad)  
   1400161b2:	add    BYTE PTR [rax],al
   1400161b4:	rex.XB xor DWORD PTR [r8],eax
   1400161b7:	add    BYTE PTR [rbx+rax*1+0x31440001],bh
   1400161be:	add    BYTE PTR [rax],al
   1400161c0:	jne    0x1400161f3
   1400161c2:	add    BYTE PTR [rax],al
   1400161c4:	xor    al,0xc
   1400161c6:	add    DWORD PTR [rax],eax
   1400161c8:	js     0x1400161fb
   1400161ca:	add    BYTE PTR [rax],al
   1400161cc:	out    0x31,eax
   1400161ce:	add    BYTE PTR [rax],al
   1400161d0:	fadd   QWORD PTR [rbx]
   1400161d2:	add    DWORD PTR [rax],eax
   1400161d4:	call   0x14601620a
   1400161d9:	xor    al,BYTE PTR [rax]
   1400161db:	add    al,dh
   1400161dd:	add    eax,DWORD PTR [rcx]
   1400161df:	add    BYTE PTR [rax+0x32],dl
   1400161e2:	add    BYTE PTR [rax],al
   1400161e4:	jo     0x140016218
   1400161e6:	add    BYTE PTR [rax],al
   1400161e8:	xor    al,0xc
   1400161ea:	add    DWORD PTR [rax],eax
   1400161ec:	jo     0x140016220
   1400161ee:	add    BYTE PTR [rax],al
   1400161f0:	nop
   1400161f1:	xor    al,BYTE PTR [rax]
   1400161f3:	add    BYTE PTR [rsp+rcx*1],dh
   1400161f6:	add    DWORD PTR [rax],eax
   1400161f8:	nop
   1400161f9:	xor    al,BYTE PTR [rax]
   1400161fb:	add    dh,dl
   1400161fd:	xor    al,BYTE PTR [rax]
   1400161ff:	add    BYTE PTR [rax],cl
   140016201:	add    al,BYTE PTR [rcx]
   140016203:	add    al,dh
   140016205:	xor    al,BYTE PTR [rax]
   140016207:	add    BYTE PTR [rbx+rsi*1],dl
   14001620a:	add    BYTE PTR [rax],al
   14001620c:	clc    
   14001620d:	add    eax,DWORD PTR [rcx]
   14001620f:	add    BYTE PTR [rax],ah
   140016211:	xor    eax,DWORD PTR [rax]
   140016213:	add    BYTE PTR [rax],bh
   140016215:	xor    eax,DWORD PTR [rax]
   140016217:	add    BYTE PTR [rax],al
   140016219:	add    al,0x1
   14001621b:	add    BYTE PTR [rax+0x33],al
   14001621e:	add    BYTE PTR [rax],al
   140016220:	xor    eax,DWORD PTR [r8]
   140016223:	add    BYTE PTR [rsp+rax*1],al
   140016226:	add    DWORD PTR [rax],eax
   140016228:	push   rax
   140016229:	xor    eax,DWORD PTR [rax]
   14001622b:	add    BYTE PTR [rcx+0x33],dl
   14001622e:	add    BYTE PTR [rax],al
   140016230:	or     BYTE PTR [rcx+rax*1],al
   140016233:	add    BYTE PTR [rbx+rsi*1+0x0],dl
   140016237:	add    BYTE PTR [rdx+0x34000033],ch
   14001623d:	or     al,0x1
   14001623f:	add    BYTE PTR [rbx+rsi*1+0x34460000],ch
   140016246:	add    BYTE PTR [rax],al
   140016248:	test   BYTE PTR [rsi],al
   14001624a:	add    DWORD PTR [rax],eax
   14001624c:	rex.W xor al,0x0
   14001624f:	add    BYTE PTR [rcx+0x8000034],al
   140016255:	add    al,BYTE PTR [rcx]
   140016257:	add    BYTE PTR [rsp+rsi*1+0x349a0000],al
   14001625e:	add    BYTE PTR [rax],al
   140016260:	or     BYTE PTR [rdx],al
   140016262:	add    DWORD PTR [rax],eax
   140016264:	mov    ah,0x34
   140016266:	add    BYTE PTR [rax],al
   140016268:	div    DWORD PTR [rax+rax*1]
   14001626b:	add    BYTE PTR [rax],cl
   14001626d:	add    al,BYTE PTR [rcx]
   14001626f:	add    al,bh
   140016271:	xor    al,0x0
   140016273:	add    BYTE PTR [rbx],ch
   140016275:	xor    eax,0x40c0000
   14001627a:	add    DWORD PTR [rax],eax
   14001627c:	sub    al,0x35
   14001627e:	add    BYTE PTR [rax],al
   140016280:	gs xor eax,0x6840000
   140016286:	add    DWORD PTR [rax],eax
   140016288:	push   0x17000035
   14001628d:	add    BYTE PTR ss:[rax],al
   140016290:	test   BYTE PTR [rsi],al
   140016292:	add    DWORD PTR [rax],eax
   140016294:	sbb    BYTE PTR [rsi],dh
   140016296:	add    BYTE PTR [rax],al
   140016298:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016299:	(bad)  
   14001629a:	add    BYTE PTR [rax],al
   14001629c:	sbb    BYTE PTR [rcx+rax*1],al
   14001629f:	add    al,ah
   1400162a1:	(bad)  
   1400162a2:	add    BYTE PTR [rax],al
   1400162a4:	(bad)  
   1400162a5:	cmp    BYTE PTR [rax],al
   1400162a7:	add    BYTE PTR [rax],cl
   1400162a9:	add    al,BYTE PTR [rcx]
   1400162ab:	add    BYTE PTR [rax+rdi*1],dh
   1400162ae:	add    BYTE PTR [rax],al
   1400162b0:	xchg   ecx,eax
   1400162b1:	cmp    al,BYTE PTR [rax]
   1400162b3:	add    BYTE PTR [rax+0x4],cl
   1400162b6:	add    DWORD PTR [rax],eax
   1400162b8:	xchg   esp,eax
   1400162b9:	cmp    al,BYTE PTR [rax]
   1400162bb:	add    bh,dl
   1400162bd:	cmp    al,BYTE PTR [rax]
   1400162bf:	add    BYTE PTR [rsp+rcx*1],dh
   1400162c2:	add    DWORD PTR [rax],eax
   1400162c4:	loopne 0x140016300
   1400162c6:	add    BYTE PTR [rax],al
   1400162c8:	adc    edi,DWORD PTR [rbx]
   1400162ca:	add    BYTE PTR [rax],al
   1400162cc:	or     BYTE PTR [rdx],al
   1400162ce:	add    DWORD PTR [rax],eax
   1400162d0:	adc    al,0x3b
   1400162d2:	add    BYTE PTR [rax],al
   1400162d4:	out    0x3d,al
   1400162d6:	add    BYTE PTR [rax],al
   1400162d8:	ins    BYTE PTR es:[rdi],dx
   1400162d9:	add    al,0x1
   1400162db:	add    al,ch
   1400162dd:	cmp    eax,0x3e660000
   1400162e2:	add    BYTE PTR [rax],al
   1400162e4:	mov    BYTE PTR [rcx+rax*1],al
   1400162e7:	add    BYTE PTR [rax+0x3e],ch
   1400162ea:	add    BYTE PTR [rax],al
   1400162ec:	jmp    0x14001632c
   1400162ee:	add    BYTE PTR [rax],al
   1400162f0:	mov    BYTE PTR [rcx+rax*1],al
   1400162f3:	add    ah,ch
   1400162f5:	add    BYTE PTR ds:[rax],al
   1400162f8:	jno    0x140016339
   1400162fa:	add    BYTE PTR [rax],al
   1400162fc:	mov    BYTE PTR [rcx+rax*1],al
   1400162ff:	add    BYTE PTR [rdi+rdi*1+0x0],dh
   140016303:	add    BYTE PTR [rsi],bl
   140016305:	add    BYTE PTR [rax],al
   140016308:	movabs al,ds:0x9900004020000104
   140016311:	add    BYTE PTR [rax],al
   140016314:	mov    ah,0xb
   140016316:	add    DWORD PTR [rax],eax
   140016318:	pushf  
   140016319:	add    BYTE PTR [rax],al
   14001631c:	call   0x148016361
   140016321:	add    al,BYTE PTR [rcx]
   140016323:	add    al,ch
   140016325:	add    BYTE PTR [rax],al
   140016328:	(bad)  
   140016329:	add    BYTE PTR [r8],al
   14001632c:	enter  0x104,0x0
   140016330:	loopne 0x140016373
   140016332:	add    BYTE PTR [rax],al
   140016334:	rex.X add BYTE PTR fs:[rax],al
   140016338:	or     BYTE PTR [rip+0x42640001],al        # 0x18265633f
   14001633e:	add    BYTE PTR [rax],al
   140016340:	jmp    0x140016384
   140016342:	add    BYTE PTR [rax],al
   140016344:	rol    BYTE PTR [rdx],1
   140016346:	add    DWORD PTR [rax],eax
   140016348:	add    al,0x43
   14001634a:	add    BYTE PTR [rax],al
   14001634c:	(bad)  
   14001634d:	rex.XB add BYTE PTR [r8],al
   140016350:	sbb    al,0x5
   140016352:	add    DWORD PTR [rax],eax
   140016354:	in     al,dx
   140016355:	rex.XB add BYTE PTR [r8],al
   140016358:	xor    BYTE PTR [rax+rax*1+0x0],al
   14001635c:	test   BYTE PTR [rsi],al
   14001635e:	add    DWORD PTR [rax],eax
   140016360:	xor    BYTE PTR [rax+rax*1+0x0],al
   140016364:	(bad)  
   140016365:	add    BYTE PTR [r8],r8b
   140016368:	jl     0x14001636f
   14001636a:	add    DWORD PTR [rax],eax
   14001636c:	sbb    BYTE PTR [rbp+0x0],al
   14001636f:	add    BYTE PTR [rax+0x46],ah
   140016372:	add    BYTE PTR [rax],al
   140016374:	add    rax,0x46600001
   14001637a:	add    BYTE PTR [rax],al
   14001637c:	jle    0x1400163c4
   14001637e:	add    BYTE PTR [rax],al
   140016380:	lock add eax,DWORD PTR [rcx]
   140016383:	add    BYTE PTR [rax+0xd000046],al
   140016389:	rex.W add BYTE PTR [rax],al
   14001638c:	(bad)  
   14001638d:	add    eax,0x48100001
   140016392:	add    BYTE PTR [rax],al
   140016394:	mov    cl,0x48
   140016396:	add    BYTE PTR [rax],al
   140016398:	or     BYTE PTR [rdx],al
   14001639a:	add    DWORD PTR [rax],eax
   14001639c:	ror    BYTE PTR [rax+0x0],1
   14001639f:	add    BYTE PTR [rdx+0x78000049],bh
   1400163a5:	add    eax,0x49bc0001
   1400163aa:	add    BYTE PTR [rax],al
   1400163ac:	(bad)  
   1400163ad:	rex.WX add BYTE PTR [rax],al
   1400163b0:	jl     0x1400163b7
   1400163b2:	add    DWORD PTR [rax],eax
   1400163b4:	fmul   DWORD PTR [rdx+0x0]
   1400163b7:	add    BYTE PTR [rip+0xffffffff9400004c],ah        # 0xd4016409
   1400163bd:	add    eax,0x4c280001
   1400163c2:	add    BYTE PTR [rax],al
   1400163c4:	jp     0x140016413
   1400163c6:	add    BYTE PTR [rax],al
   1400163c8:	mov    ah,0xb
   1400163ca:	add    DWORD PTR [rax],eax
   1400163cc:	jl     0x14001641b
   1400163ce:	add    BYTE PTR [rax],al
   1400163d0:	lahf   
   1400163d1:	push   rsp
   1400163d2:	add    BYTE PTR [rax],al
   1400163d4:	lods   al,BYTE PTR ds:[rsi]
   1400163d5:	add    eax,0x54a00001
   1400163da:	add    BYTE PTR [rax],al
   1400163dc:	mov    ebx,0xc4000055
   1400163e1:	add    eax,0x55bc0001
   1400163e6:	add    BYTE PTR [rax],al
   1400163e8:	loop   0x14001643f
   1400163ea:	add    BYTE PTR [rax],al
   1400163ec:	xor    al,0xc
   1400163ee:	add    DWORD PTR [rax],eax
   1400163f0:	in     al,0x55
   1400163f2:	add    BYTE PTR [rax],al
   1400163f4:	imul   edx,DWORD PTR [rsi+0x0],0x0
   1400163f8:	mov    ah,0xb
   1400163fa:	add    DWORD PTR [rax],eax
   1400163fc:	ins    BYTE PTR es:[rdi],dx
   1400163fd:	push   rsi
   1400163fe:	add    BYTE PTR [rax],al
   140016400:	cmp    eax,0xf4000057
   140016405:	add    eax,0x57400001
   14001640a:	add    BYTE PTR [rax],al
   14001640c:	ja     0x140016465
   14001640e:	add    BYTE PTR [rax],al
   140016410:	add    al,0x6
   140016412:	add    DWORD PTR [rax],eax
   140016414:	js     0x14001646d
   140016416:	add    BYTE PTR [rax],al
   140016418:	leave  
   140016419:	push   rdi
   14001641a:	add    BYTE PTR [rax],al
   14001641c:	or     al,0x6
   14001641e:	add    DWORD PTR [rax],eax
   140016420:	int3   
   140016421:	push   rdi
   140016422:	add    BYTE PTR [rax],al
   140016424:	(bad)  
   140016425:	pop    rax
   140016426:	add    BYTE PTR [rax],al
   140016428:	int3   
   140016429:	or     DWORD PTR [rcx],eax
   14001642b:	add    BYTE PTR [rax+rbx*2+0x0],ah
   14001642f:	add    BYTE PTR [rax],dl
   140016431:	movsxd eax,DWORD PTR [rax]
   140016433:	add    BYTE PTR [rax+0x10000108],dl
   140016439:	movsxd eax,DWORD PTR [rax]
   14001643b:	add    BYTE PTR [rsi-0x4bffff9d],ah
   140016441:	or     eax,DWORD PTR [rcx]
   140016443:	add    BYTE PTR [rax-0x78ffff9d],ch
   140016449:	add    BYTE PTR fs:[rax],al
   14001644c:	and    BYTE PTR [rsi],al
   14001644e:	add    DWORD PTR [rax],eax
   140016450:	mov    BYTE PTR [rax+rax*1+0x0],ah
   140016454:	rex.R
   140016455:	add    BYTE PTR gs:[rax],al
   140016458:	test   BYTE PTR [rsi],al
   14001645a:	add    DWORD PTR [rax],eax
   14001645c:	rex.R
   14001645d:	add    BYTE PTR gs:[rax],al
   140016460:	(bad)  
   140016461:	data16 add BYTE PTR [rax],al
   140016464:	rex.WR (bad) 
   140016466:	add    DWORD PTR [rax],eax
   140016468:	or     BYTE PTR [rsi+0x0],ah
   14001646b:	add    BYTE PTR [rdi],bh
   14001646d:	data16 add BYTE PTR [rax],al
   140016470:	or     BYTE PTR [rdx],al
   140016472:	add    DWORD PTR [rax],eax
   140016474:	rex
   140016475:	data16 add BYTE PTR [rax],al
   140016478:	and    DWORD PTR [rsi+0x0],0x10c3400
   14001647f:	add    BYTE PTR [rsi+riz*2+0x669c0000],al
   140016486:	add    BYTE PTR [rax],al
   140016488:	xor    al,0xc
   14001648a:	add    DWORD PTR [rax],eax
   14001648c:	pushf  
   14001648d:	data16 add BYTE PTR [rax],al
   140016490:	ins    BYTE PTR es:[rdi],dx
   140016491:	push   0x2d00000
   140016496:	add    DWORD PTR [rax],eax
   140016498:	ins    BYTE PTR es:[rdi],dx
   140016499:	push   0x699c0000
   14001649e:	add    BYTE PTR [rax],al
   1400164a0:	fadd   QWORD PTR [rbx]
   1400164a2:	add    DWORD PTR [rax],eax
   1400164a4:	pushf  
   1400164a5:	imul   eax,DWORD PTR [rax],0x6b6b00
   1400164ab:	add    BYTE PTR [rax+0x6c000102],dl
   1400164b1:	imul   eax,DWORD PTR [rax],0x0
   1400164b4:	(bad)  
   1400164b5:	ins    BYTE PTR es:[rdi],dx
   1400164b6:	add    BYTE PTR [rax],al
   1400164b8:	je     0x1400164c0
   1400164ba:	add    DWORD PTR [rax],eax
   1400164bc:	fs ins BYTE PTR es:[rdi],dx
   1400164be:	add    BYTE PTR [rax],al
   1400164c0:	pop    rax
   1400164c1:	ins    DWORD PTR es:[rdi],dx
   1400164c2:	add    BYTE PTR [rax],al
   1400164c4:	(bad)  
   1400164c5:	(bad)  
   1400164c6:	add    DWORD PTR [rax],eax
   1400164c8:	pop    rax
   1400164c9:	ins    DWORD PTR es:[rdi],dx
   1400164ca:	add    BYTE PTR [rax],al
   1400164cc:	nop
   1400164cd:	ins    DWORD PTR es:[rdi],dx
   1400164ce:	add    BYTE PTR [rax],al
   1400164d0:	test   BYTE PTR [rsi],al
   1400164d2:	add    DWORD PTR [rax],eax
   1400164d4:	nop
   1400164d5:	ins    DWORD PTR es:[rdi],dx
   1400164d6:	add    BYTE PTR [rax],al
   1400164d8:	enter  0x6d,0x0
   1400164dc:	test   BYTE PTR [rsi],al
   1400164de:	add    DWORD PTR [rax],eax
   1400164e0:	(bad)  
   1400164e1:	ins    DWORD PTR es:[rdi],dx
   1400164e2:	add    BYTE PTR [rax],al
   1400164e4:	stc    
   1400164e5:	ins    DWORD PTR es:[rdi],dx
   1400164e6:	add    BYTE PTR [rax],al
   1400164e8:	xor    al,0xc
   1400164ea:	add    DWORD PTR [rax],eax
   1400164ec:	cld    
   1400164ed:	ins    DWORD PTR es:[rdi],dx
   1400164ee:	add    BYTE PTR [rax],al
   1400164f0:	mov    cl,0x6e
   1400164f2:	add    BYTE PTR [rax],al
   1400164f4:	nop
   1400164f5:	(bad)  
   1400164f6:	add    DWORD PTR [rax],eax
   1400164f8:	mov    ah,0x6e
   1400164fa:	add    BYTE PTR [rax],al
   1400164fc:	cmp    BYTE PTR [rdi+0x0],ch
   1400164ff:	add    BYTE PTR [rsi+rax*1+0x6f380001],al
   140016506:	add    BYTE PTR [rax],al
   140016508:	pop    rsp
   140016509:	outs   dx,DWORD PTR ds:[rsi]
   14001650a:	add    BYTE PTR [rax],al
   14001650c:	or     BYTE PTR [rdx],al
   14001650e:	add    DWORD PTR [rax],eax
   140016510:	pop    rsp
   140016511:	outs   dx,DWORD PTR ds:[rsi]
   140016512:	add    BYTE PTR [rax],al
   140016514:	(bad)  
   140016515:	jo     0x140016517
   140016517:	add    ah,al
   140016519:	(bad)  
   14001651a:	add    DWORD PTR [rax],eax
   14001651c:	nop
   14001651d:	jo     0x14001651f
   14001651f:	add    BYTE PTR [rcx],dl
   140016521:	jno    0x140016523
   140016523:	add    BYTE PTR [rax],cl
   140016525:	add    al,BYTE PTR [rcx]
   140016527:	add    BYTE PTR [rcx+rsi*2],dl
   14001652a:	add    BYTE PTR [rax],al
   14001652c:	(bad)  
   14001652d:	jno    0x14001652f
   14001652f:	add    al,bh
   140016531:	(bad)  
   140016532:	add    DWORD PTR [rax],eax
   140016534:	push   rax
   140016535:	jb     0x140016537
   140016537:	add    BYTE PTR [rcx+0x4000072],dl
   14001653d:	(bad)  
   14001653e:	add    DWORD PTR [rax],eax
   140016540:	xchg   esp,eax
   140016541:	jb     0x140016543
   140016543:	add    BYTE PTR [rdx+rdi*2],bh
   140016546:	add    BYTE PTR [rax],al
   140016548:	and    al,0x7
   14001654a:	add    DWORD PTR [rax],eax
   14001654c:	cmp    al,0x7a
   14001654e:	add    BYTE PTR [rax],al
   140016550:	(bad)  
   140016551:	jnp    0x140016553
   140016553:	add    BYTE PTR [rdi+rax*1],bh
   140016556:	add    DWORD PTR [rax],eax
   140016558:	adc    BYTE PTR [rbx+0x0],bh
   14001655b:	add    BYTE PTR [rdx+0x7b],al
   14001655e:	add    BYTE PTR [rax],al
   140016560:	lock add eax,DWORD PTR [rcx]
   140016563:	add    BYTE PTR [rbx+rdi*2+0x0],al
   140016567:	add    BYTE PTR [rdx+0x7c],bl
   14001656a:	add    BYTE PTR [rax],al
   14001656c:	(bad)  
   14001656d:	(bad)  
   14001656e:	add    DWORD PTR [rax],eax
   140016570:	pop    rsp
   140016571:	jl     0x140016573
   140016573:	add    ah,dh
   140016575:	jl     0x140016577
   140016577:	add    BYTE PTR [rsp+rcx*1],dh
   14001657a:	add    DWORD PTR [rax],eax
   14001657c:	and    BYTE PTR [rbp+0x0],bh
   14001657f:	add    BYTE PTR [rbx+0x800007d],al
   140016585:	add    al,BYTE PTR [rcx]
   140016587:	add    BYTE PTR [rbp+rdi*2+0x7da10000],al
   14001658e:	add    BYTE PTR [rax],al
   140016590:	xor    al,0xc
   140016592:	add    DWORD PTR [rax],eax
   140016594:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016595:	jge    0x140016597
   140016597:	add    bh,al
   140016599:	jge    0x14001659b
   14001659b:	add    BYTE PTR [rax+0x7],bh
   14001659e:	add    DWORD PTR [rax],eax
   1400165a0:	enter  0x7d,0x0
   1400165a4:	in     eax,0x7d
   1400165a6:	add    BYTE PTR [rax],al
   1400165a8:	xor    al,0xc
   1400165aa:	add    DWORD PTR [rax],eax
   1400165ac:	sbb    BYTE PTR [rsi+0x0],bh
   1400165af:	add    BYTE PTR [rdx-0x80],cl
   1400165b2:	add    BYTE PTR [rax],al
   1400165b4:	cwde   
   1400165b5:	(bad)  
   1400165b6:	add    DWORD PTR [rax],eax
   1400165b8:	pop    rsp
   1400165b9:	add    BYTE PTR [rax],0x0
   1400165bc:	lahf   
   1400165bd:	add    BYTE PTR [rax],0x0
   1400165c0:	or     BYTE PTR [rdx],al
   1400165c2:	add    DWORD PTR [rax],eax
   1400165c4:	movabs al,ds:0xc8000081aa000080
   1400165cd:	(bad)  
   1400165ce:	add    DWORD PTR [rax],eax
   1400165d0:	lods   al,BYTE PTR ds:[rsi]
   1400165d1:	add    DWORD PTR [rax],0x81c300
   1400165d7:	add    BYTE PTR [rsp+rcx*1],dh
   1400165da:	add    DWORD PTR [rax],eax
   1400165dc:	(bad)
   1400165e0:	cli    
   1400165e1:	add    DWORD PTR [rax],0x1068400
   1400165e7:	add    BYTE PTR [rax],dl
   1400165e9:	(bad)  
   1400165ea:	add    BYTE PTR [rax],al
   1400165ec:	mov    eax,0xf8000082
   1400165f1:	(bad)  
   1400165f2:	add    DWORD PTR [rax],eax
   1400165f4:	mov    eax,0xc0000082
   1400165f9:	test   BYTE PTR [rax],al
   1400165fb:	add    ah,bh
   1400165fd:	(bad)  
   1400165fe:	add    DWORD PTR [rax],eax
   140016600:	rol    BYTE PTR [rax+rax*1+0x854500],0x0
   140016608:	or     BYTE PTR [rdx],al
   14001660a:	add    DWORD PTR [rax],eax
   14001660c:	test   QWORD PTR [rax],rax
   14001660f:	add    BYTE PTR [rdi],dl
   140016611:	xchg   BYTE PTR [rax],al
   140016613:	add    BYTE PTR [rax],cl
   140016615:	add    al,BYTE PTR [rcx]
   140016617:	add    BYTE PTR [rsi+rax*4],dh
   14001661a:	add    BYTE PTR [rax],al
   14001661c:	lahf   
   14001661d:	xchg   BYTE PTR [rax],al
   14001661f:	add    BYTE PTR [rax],cl
   140016621:	add    al,BYTE PTR [rcx]
   140016623:	add    BYTE PTR [rax-0x1fffff7a],ah
   140016629:	xchg   BYTE PTR [rax],al
   14001662b:	add    BYTE PTR [rsp+rcx*1],dh
   14001662e:	add    DWORD PTR [rax],eax
   140016630:	loopne 0x1400165b8
   140016632:	add    BYTE PTR [rax],al
   140016634:	mov    bl,0x87
   140016636:	add    BYTE PTR [rax],al
   140016638:	mov    ah,0xb
   14001663a:	add    DWORD PTR [rax],eax
   14001663c:	mov    ah,0x87
   14001663e:	add    BYTE PTR [rax],al
   140016640:	adc    al,0x8f
   140016642:	add    BYTE PTR [rax],al
   140016644:	sbb    BYTE PTR [rax],cl
   140016646:	add    DWORD PTR [rax],eax
   140016648:	adc    al,0x8f
   14001664a:	add    BYTE PTR [rax],al
   14001664c:	repz pop QWORD PTR [rax]
   14001664f:	add    BYTE PTR [rax+rcx*1],bh
   140016652:	add    DWORD PTR [rax],eax
   140016654:	hlt    
   140016655:	pop    QWORD PTR [rax]
   140016657:	add    bl,cl
   140016659:	nop
   14001665a:	add    BYTE PTR [rax],al
   14001665c:	push   0xffffffffcc000108
   140016661:	nop
   140016662:	add    BYTE PTR [rax],al
   140016664:	adc    dl,BYTE PTR [rcx+0x2080000]
   14001666a:	add    DWORD PTR [rax],eax
   14001666c:	adc    al,0x91
   14001666e:	add    BYTE PTR [rax],al
   140016670:	jrcxz  0x14001660d
   140016672:	add    BYTE PTR [rax],al
   140016674:	nop
   140016675:	or     BYTE PTR [rcx],al
   140016677:	add    ah,ah
   140016679:	fwait
   14001667a:	add    BYTE PTR [rax],al
   14001667c:	jns    0x14001661a
   14001667e:	add    BYTE PTR [rax],al
   140016680:	test   BYTE PTR [rsi],al
   140016682:	add    DWORD PTR [rax],eax
   140016684:	jl     0x140016622
   140016686:	add    BYTE PTR [rax],al
   140016688:	pop    rdi
   140016689:	popf   
   14001668a:	add    BYTE PTR [rax],al
   14001668c:	mov    ah,0x8
   14001668e:	add    DWORD PTR [rax],eax
   140016690:	(bad)  
   140016691:	popf   
   140016692:	add    BYTE PTR [rax],al
   140016694:	mov    bl,0x9d
   140016696:	add    BYTE PTR [rax],al
   140016698:	or     BYTE PTR [rdx],al
   14001669a:	add    DWORD PTR [rax],eax
   14001669c:	mov    ah,0x9d
   14001669e:	add    BYTE PTR [rax],al
   1400166a0:	adc    ebx,DWORD PTR [rsi+0xc340000]
   1400166a6:	add    DWORD PTR [rax],eax
   1400166a8:	adc    al,0x9e
   1400166aa:	add    BYTE PTR [rax],al
   1400166ac:	movabs al,ds:0xa0000102d000009e
   1400166b5:	sahf   
   1400166b6:	add    BYTE PTR [rax],al
   1400166b8:	nop
   1400166b9:	movabs al,ds:0xa090000108e00000
   1400166c2:	add    BYTE PTR [rax],al
   1400166c4:	rex.WX movabs rax,ds:0xa14c000109000000
   1400166ce:	add    BYTE PTR [rax],al
   1400166d0:	fsub   QWORD PTR [rcx+0x9240000]
   1400166d6:	add    DWORD PTR [rax],eax
   1400166d8:	fsub   QWORD PTR [rcx-0x5baf0000]
   1400166de:	add    BYTE PTR [rax],al
   1400166e0:	sub    al,0x9
   1400166e2:	add    DWORD PTR [rax],eax
   1400166e4:	push   rsp
   1400166e5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400166e6:	add    BYTE PTR [rax],al
   1400166e8:	xor    ah,BYTE PTR [rsi+0x9480000]
   1400166ee:	add    DWORD PTR [rax],eax
   1400166f0:	xor    al,0xa6
   1400166f2:	add    BYTE PTR [rax],al
   1400166f4:	pop    rsp
   1400166f5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400166f6:	add    BYTE PTR [rax],al
   1400166f8:	xor    al,0xc
   1400166fa:	add    DWORD PTR [rax],eax
   1400166fc:	mov    WORD PTR [rdi-0x56fb0000],fs
   140016702:	add    BYTE PTR [rax],al
   140016704:	mov    ah,0xb
   140016706:	add    DWORD PTR [rax],eax
   140016708:	or     BYTE PTR [rcx-0x56a10000],ch
   14001670e:	add    BYTE PTR [rax],al
   140016710:	or     BYTE PTR [rdx],al
   140016712:	add    DWORD PTR [rax],eax
   140016714:	(bad)  
   140016715:	test   eax,0xa9d50000
   14001671a:	add    BYTE PTR [rax],al
   14001671c:	js     0x140016727
   14001671e:	add    DWORD PTR [rax],eax
   140016720:	fsubr  DWORD PTR [rcx-0x54290000]
   140016726:	add    BYTE PTR [rax],al
   140016728:	cwde   
   140016729:	or     DWORD PTR [rcx],eax
   14001672b:	add    al,dh
   14001672d:	stos   DWORD PTR es:[rdi],eax
   14001672e:	add    BYTE PTR [rax],al
   140016730:	lods   eax,DWORD PTR gs:[rsi]
   140016732:	add    BYTE PTR [rax],al
   140016734:	mov    ah,0x9
   140016736:	add    DWORD PTR [rax],eax
   140016738:	jo     0x1400166e7
   14001673a:	add    BYTE PTR [rax],al
   14001673c:	mov    ch,0xad
   14001673e:	add    BYTE PTR [rax],al
   140016740:	and    al,0x9
   140016742:	add    DWORD PTR [rax],eax
   140016744:	mov    eax,0xff0000ad
   140016749:	lods   eax,DWORD PTR ds:[rsi]
   14001674a:	add    BYTE PTR [rax],al
   14001674c:	and    al,0x9
   14001674e:	add    DWORD PTR [rax],eax
   140016750:	add    BYTE PTR [rsi-0x51c90000],ch
   140016756:	add    BYTE PTR [rax],al
   140016758:	or     BYTE PTR [rdx],al
   14001675a:	add    DWORD PTR [rax],eax
   14001675c:	cmp    BYTE PTR [rsi-0x51770000],ch
   140016762:	add    BYTE PTR [rax],al
   140016764:	or     al,0x6
   140016766:	add    DWORD PTR [rax],eax
   140016768:	mov    WORD PTR [rsi-0x50da0000],gs
   14001676e:	add    BYTE PTR [rax],al
   140016770:	int3   
   140016771:	or     DWORD PTR [rcx],eax
   140016773:	add    BYTE PTR [rax],ch
   140016775:	scas   eax,DWORD PTR es:[rdi]
   140016776:	add    BYTE PTR [rax],al
   140016778:	(bad)  
   140016779:	mov    edx,0x9e40000
   14001677e:	add    DWORD PTR [rax],eax
   140016780:	test   BYTE PTR [rdx-0x44cf0000],bh
   140016786:	add    BYTE PTR [rax],al
   140016788:	rol    BYTE PTR [rdx],1
   14001678a:	add    DWORD PTR [rax],eax
   14001678c:	xor    al,0xbb
   14001678e:	add    BYTE PTR [rax],al
   140016790:	fidivr WORD PTR [rbx+0xa080000]
   140016796:	add    DWORD PTR [rax],eax
   140016798:	loopne 0x140016755
   14001679a:	add    BYTE PTR [rax],al
   14001679c:	push   rsp
   14001679d:	mov    esp,0xc340000
   1400167a2:	add    DWORD PTR [rax],eax
   1400167a4:	push   rsp
   1400167a5:	mov    esp,0xbcf90000
   1400167aa:	add    BYTE PTR [rax],al
   1400167ac:	sbb    BYTE PTR [rdx],cl
   1400167ae:	add    DWORD PTR [rax],eax
   1400167b0:	and    al,0xbd
   1400167b2:	add    BYTE PTR [rax],al
   1400167b4:	sub    al,0xbf
   1400167b6:	add    BYTE PTR [rax],al
   1400167b8:	rex.W or al,BYTE PTR [rcx]
   1400167bb:	add    BYTE PTR [rax-0x41],al
   1400167be:	add    BYTE PTR [rax],al
   1400167c0:	je     0x140016784
   1400167c2:	add    BYTE PTR [rax],al
   1400167c4:	mov    BYTE PTR [rdx],cl
   1400167c6:	add    DWORD PTR [rax],eax
   1400167c8:	je     0x14001678c
   1400167ca:	add    BYTE PTR [rax],al
   1400167cc:	cmp    ah,al
   1400167ce:	add    BYTE PTR [rax],al
   1400167d0:	mov    WORD PTR [rdx],cs
   1400167d2:	add    DWORD PTR [rax],eax
   1400167d4:	cmp    ah,al
   1400167d6:	add    BYTE PTR [rax],al
   1400167d8:	rex.WR (bad) 
   1400167da:	add    BYTE PTR [rax],al
   1400167dc:	lock add eax,DWORD PTR [rcx]
   1400167df:	add    BYTE PTR [rsp+rax*8+0x0],cl
   1400167e3:	add    BYTE PTR [rbp+0x80000c4],ch
   1400167e9:	add    al,BYTE PTR [rcx]
   1400167eb:	add    BYTE PTR [rax+0x2b0000c4],dh
   1400167f1:	(bad)
   1400167f4:	pushf  
   1400167f5:	or     al,BYTE PTR [rcx]
   1400167f7:	add    BYTE PTR [rax-0x3b],al
   1400167fa:	add    BYTE PTR [rax],al
   1400167fc:	fadd   st,st(6)
   1400167fe:	add    BYTE PTR [rax],al
   140016800:	lods   al,BYTE PTR ds:[rsi]
   140016801:	or     al,BYTE PTR [rcx]
   140016803:	add    al,bl
   140016805:	mov    BYTE PTR [rax],0x0
   140016808:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016809:	mov    DWORD PTR [rax],0x10ac800
   14001680f:	add    BYTE PTR [rax-0x28ffff39],ch
   140016815:	mov    DWORD PTR [rax],0x10c3400
   14001681b:	add    al,bl
   14001681d:	mov    DWORD PTR [rax],0xc8ad00
   140016823:	add    al,dl
   140016825:	or     al,BYTE PTR [rcx]
   140016827:	add    BYTE PTR [rax-0xfffff38],dh
   14001682d:	enter  0x0,0x34
   140016831:	or     al,0x1
   140016833:	add    al,dh
   140016835:	enter  0x0,0x29
   140016839:	leave  
   14001683a:	add    BYTE PTR [rax],al
   14001683c:	xor    al,0xc
   14001683e:	add    DWORD PTR [rax],eax
   140016840:	cmp    cl,cl
   140016842:	add    BYTE PTR [rax],al
   140016844:	xchg   ecx,eax
   140016845:	leave  
   140016846:	add    BYTE PTR [rax],al
   140016848:	fmul   QWORD PTR [rdx]
   14001684a:	add    DWORD PTR [rax],eax
   14001684c:	mov    al,0xc9
   14001684e:	add    BYTE PTR [rax],al
   140016850:	dec    cl
   140016852:	add    BYTE PTR [rax],al
   140016854:	call   0x140016963
   140016859:	retf   0x0
   14001685c:	retf   0xcc
   14001685f:	add    al,dh
   140016861:	or     al,BYTE PTR [rcx]
   140016863:	add    ah,cl
   140016865:	int3   
   140016866:	add    BYTE PTR [rax],al
   140016868:	(bad)  
   140016869:	int    0x0
   14001686b:	add    BYTE PTR [rax],bl
   14001686d:	or     eax,DWORD PTR [rcx]
   14001686f:	add    BYTE PTR [rbp+rcx*8+0x0],ah
   140016873:	add    dl,al
   140016875:	(bad)  
   140016876:	add    BYTE PTR [rax],al
   140016878:	sub    BYTE PTR [rbx],cl
   14001687a:	add    DWORD PTR [rax],eax
   14001687c:	(bad)  
   14001687d:	(bad)  
   14001687e:	add    BYTE PTR [rax],al
   140016880:	rex.X iret 
   140016882:	add    BYTE PTR [rax],al
   140016884:	push   rax
   140016885:	or     eax,DWORD PTR [rcx]
   140016887:	add    BYTE PTR [rdi+rcx*8+0x0],al
   14001688b:	add    BYTE PTR [rdx],dh
   14001688d:	rol    DWORD PTR [rax],cl
   14001688f:	add    BYTE PTR [rax+0xb],ah
   140016892:	add    DWORD PTR [rax],eax
   140016894:	xor    al,0xd3
   140016896:	add    BYTE PTR [rax],al
   140016898:	movabs al,ds:0xa000010b680000d3
   1400168a1:	rol    DWORD PTR [rax],cl
   1400168a3:	add    BYTE PTR [rdx+0x600000d4],ch
   1400168a9:	or     eax,DWORD PTR [rcx]
   1400168ab:	add    BYTE PTR [rsp+rdx*8-0x29c50000],ch
   1400168b2:	add    BYTE PTR [rax],al
   1400168b4:	jo     0x1400168c1
   1400168b6:	add    DWORD PTR [rax],eax
   1400168b8:	cmp    al,0xd6
   1400168ba:	add    BYTE PTR [rax],al
   1400168bc:	cdq    
   1400168bd:	(bad)  
   1400168be:	add    BYTE PTR [rax],al
   1400168c0:	test   BYTE PTR [rbx],cl
   1400168c2:	add    DWORD PTR [rax],eax
   1400168c4:	mov    al,0xd6
   1400168c6:	add    BYTE PTR [rax],al
   1400168c8:	(bad)  
   1400168c9:	xlat   BYTE PTR ds:[rbx]
   1400168ca:	add    BYTE PTR [rax],al
   1400168cc:	cwde   
   1400168cd:	or     eax,DWORD PTR [rcx]
   1400168cf:	add    BYTE PTR [rax-0x29],dh
   1400168d2:	add    BYTE PTR [rax],al
   1400168d4:	(bad)  
   1400168d5:	fadd   DWORD PTR [rax]
   1400168d7:	add    BYTE PTR [rax+0x5000010b],ah
   1400168dd:	fadd   DWORD PTR [rax]
   1400168df:	add    BYTE PTR [rip+0xffffffffa80000d9],al        # 0xe80169be
   1400168e5:	or     eax,DWORD PTR [rcx]
   1400168e7:	add    BYTE PTR [rax],cl
   1400168e9:	fld    DWORD PTR [rax]
   1400168eb:	add    BYTE PTR [rbx-0x27],al
   1400168ee:	add    BYTE PTR [rax],al
   1400168f0:	lods   al,BYTE PTR ds:[rsi]
   1400168f1:	or     eax,DWORD PTR [rcx]
   1400168f3:	add    BYTE PTR [rcx+rbx*8+0x0],al
   1400168f7:	add    BYTE PTR [rsi-0x27],ah
   1400168fa:	add    BYTE PTR [rax],al
   1400168fc:	xor    al,0xc
   1400168fe:	add    DWORD PTR [rax],eax
   140016900:	movabs al,ds:0xc40000d9ba0000d9
   140016909:	add    DWORD PTR [rcx],eax
   14001690b:	add    BYTE PTR [rdx-0x2bffff27],bh
   140016911:	fld    DWORD PTR [rax]
   140016913:	add    BYTE PTR [rax],dh
   140016915:	add    al,BYTE PTR [rcx]
   140016917:	add    ah,dl
   140016919:	fld    DWORD PTR [rax]
   14001691b:	add    dh,ch
   14001691d:	fld    DWORD PTR [rax]
   14001691f:	add    ah,al
   140016921:	add    DWORD PTR [rcx],eax
   140016923:	add    dh,ch
   140016925:	fld    DWORD PTR [rax]
   140016927:	add    BYTE PTR [rdx+rbx*8],cl
   14001692a:	add    BYTE PTR [rax],al
   14001692c:	(bad)
   140016930:	or     al,0xda
   140016932:	add    BYTE PTR [rax],al
   140016934:	(bad)  
   140016935:	fiadd  DWORD PTR [rax]
   140016937:	add    ah,al
   140016939:	add    DWORD PTR [rcx],eax
   14001693b:	add    BYTE PTR [rdi],ah
   14001693d:	fiadd  DWORD PTR [rax]
   14001693f:	add    BYTE PTR [rbx-0x26],cl
   140016942:	add    BYTE PTR [rax],al
   140016944:	(bad)
   140016948:	rex.WXB fiadd DWORD PTR [r8]
   14001694b:	add    BYTE PTR [rbx-0x26],dh
   14001694e:	add    BYTE PTR [rax],al
   140016950:	(bad)
   140016954:	jnp    0x140016930
   140016956:	add    BYTE PTR [rax],al
   140016958:	xchg   esi,eax
   140016959:	fiadd  DWORD PTR [rax]
   14001695b:	add    ah,al
   14001695d:	add    DWORD PTR [rcx],eax
   14001695f:	add    BYTE PTR [rsi-0x4bffff26],dl
   140016965:	fiadd  DWORD PTR [rax]
   140016967:	add    ah,al
   140016969:	add    DWORD PTR [rcx],eax
   14001696b:	add    BYTE PTR [rdx+rbx*8-0x25330000],dh
   140016972:	add    BYTE PTR [rax],al
   140016974:	(bad)
   140016978:	int    0xda
   14001697a:	add    BYTE PTR [rax],al
   14001697c:	call   0x104016a5b
   140016981:	add    DWORD PTR [rcx],eax
   140016983:	add    ch,ch
   140016985:	fiadd  DWORD PTR [rax]
   140016987:	add    BYTE PTR [rax],cl
   140016989:	fild   DWORD PTR [rax]
   14001698b:	add    ah,al
   14001698d:	add    DWORD PTR [rcx],eax
   14001698f:	add    BYTE PTR [rax],dl
   140016991:	fild   DWORD PTR [rax]
   140016993:	add    BYTE PTR [rdx],dh
   140016995:	fild   DWORD PTR [rax]
   140016997:	add    ah,al
   140016999:	add    DWORD PTR [rcx],eax
   14001699b:	add    BYTE PTR [rdx],dh
   14001699d:	fild   DWORD PTR [rax]
   14001699f:	add    BYTE PTR [rbx-0x25],bh
   1400169a2:	add    BYTE PTR [rax],al
   1400169a4:	xor    BYTE PTR [rdx],al
   1400169a6:	add    DWORD PTR [rax],eax
   1400169a8:	jnp    0x140016985
   1400169aa:	add    BYTE PTR [rax],al
   1400169ac:	cdq    
   1400169ad:	fild   DWORD PTR [rax]
   1400169af:	add    ah,al
   1400169b1:	add    DWORD PTR [rcx],eax
   1400169b3:	add    BYTE PTR [rcx-0x50ffff25],bl
   1400169b9:	fild   DWORD PTR [rax]
   1400169bb:	add    ah,al
   1400169bd:	add    DWORD PTR [rcx],eax
   1400169bf:	add    BYTE PTR [rdi-0x37ffff25],ch
   1400169c5:	fild   DWORD PTR [rax]
   1400169c7:	add    ah,al
   1400169c9:	add    DWORD PTR [rcx],eax
   1400169cb:	add    al,cl
   1400169cd:	fild   DWORD PTR [rax]
   1400169cf:	add    bl,ah
   1400169d1:	fild   DWORD PTR [rax]
   1400169d3:	add    ah,al
   1400169d5:	add    DWORD PTR [rcx],eax
   1400169d7:	add    bl,ah
   1400169d9:	fild   DWORD PTR [rax]
   1400169db:	add    dh,bh
   1400169dd:	fild   DWORD PTR [rax]
   1400169df:	add    ah,al
   1400169e1:	add    DWORD PTR [rcx],eax
   1400169e3:	add    dh,bh
   1400169e5:	fild   DWORD PTR [rax]
   1400169e7:	add    BYTE PTR [rcx],bl
   1400169e9:	fadd   QWORD PTR [rax]
   1400169eb:	add    ah,al
   1400169ed:	add    DWORD PTR [rcx],eax
   1400169ef:	add    BYTE PTR [rcx],bl
   1400169f1:	fadd   QWORD PTR [rax]
   1400169f3:	add    BYTE PTR [rsp+rbx*8],dh
   1400169f6:	add    BYTE PTR [rax],al
   1400169f8:	(bad)
   1400169fc:	cmp    esp,ebx
   1400169fe:	add    BYTE PTR [rax],al
   140016a00:	push   rsp
   140016a01:	fadd   QWORD PTR [rax]
   140016a03:	add    ah,al
   140016a05:	add    DWORD PTR [rcx],eax
	...

Disassembly of section .rsrc:

0000000140017000 <.rsrc>:
	...
   140017008:	add    al,0x0
   14001700a:	add    BYTE PTR [rax],al
   14001700c:	add    BYTE PTR [rax],al
   14001700e:	add    eax,DWORD PTR [rax]
   140017010:	add    eax,DWORD PTR [rax]
   140017012:	add    BYTE PTR [rax],al
   140017014:	sub    BYTE PTR [rax],al
   140017016:	add    BYTE PTR [rax+0xe],al
   14001701c:	jo     0x14001701e
   14001701e:	add    BYTE PTR [rax+0x18],al
   140017024:	mov    BYTE PTR [rax],al
   140017026:	add    BYTE PTR [rax+0x0],al
   14001702c:	add    BYTE PTR [rax],al
   14001702e:	add    BYTE PTR [rax],al
   140017030:	add    al,0x0
   140017032:	add    BYTE PTR [rax],al
   140017034:	add    BYTE PTR [rax],al
   140017036:	(bad)  
   140017037:	add    BYTE PTR [rcx],al
   140017039:	add    BYTE PTR [rax],al
   14001703b:	add    BYTE PTR [rax+0x2800000],ah
   140017041:	add    BYTE PTR [rax],al
   140017043:	add    BYTE PTR [rax+0x3800000],bh
   140017049:	add    BYTE PTR [rax],al
   14001704b:	add    al,dl
   14001704d:	add    BYTE PTR [rax],al
   14001704f:	add    BYTE PTR [rax+rax*1],0x0
   140017053:	add    al,ch
   140017055:	add    BYTE PTR [rax],al
   140017057:	add    BYTE PTR [rip+0x0],0x1        # 0x14001705e
   14001705e:	add    BYTE PTR [rax+0x6],al
   140017064:	sbb    BYTE PTR [rcx],al
   140017066:	add    BYTE PTR [rax+0x7],al
   14001706c:	xor    BYTE PTR [rcx],al
   14001706e:	add    BYTE PTR [rax+0x0],al
   140017074:	add    BYTE PTR [rax],al
   140017076:	add    BYTE PTR [rax],al
   140017078:	add    al,0x0
   14001707a:	add    BYTE PTR [rax],al
   14001707c:	add    BYTE PTR [rax],al
   14001707e:	add    DWORD PTR [rax],eax
   140017080:	add    BYTE PTR gs:[rax],al
   140017083:	add    BYTE PTR [rax+0x1],cl
   140017086:	add    BYTE PTR [rax+0x0],al
   14001708c:	add    BYTE PTR [rax],al
   14001708e:	add    BYTE PTR [rax],al
   140017090:	add    al,0x0
   140017092:	add    BYTE PTR [rax],al
   140017094:	add    BYTE PTR [rax],al
   140017096:	add    DWORD PTR [rax],eax
   140017098:	add    DWORD PTR [rax],eax
   14001709a:	add    BYTE PTR [rax],al
   14001709c:	(bad)  
   14001709d:	add    DWORD PTR [rax],eax
   14001709f:	add    BYTE PTR [rax],0x0
   1400170a2:	add    BYTE PTR [rax],al
   1400170a4:	add    BYTE PTR [rax],al
   1400170a6:	add    BYTE PTR [rax],al
   1400170a8:	add    al,0x0
   1400170aa:	add    BYTE PTR [rax],al
   1400170ac:	add    BYTE PTR [rax],al
   1400170ae:	add    DWORD PTR [rax],eax
   1400170b0:	add    BYTE PTR [rax],al
   1400170b2:	add    BYTE PTR [rax],al
   1400170b4:	js     0x1400170b7
	...
   1400170be:	add    BYTE PTR [rax],al
   1400170c0:	add    al,0x0
   1400170c2:	add    BYTE PTR [rax],al
   1400170c4:	add    BYTE PTR [rax],al
   1400170c6:	add    DWORD PTR [rax],eax
   1400170c8:	add    BYTE PTR [rax],al
   1400170ca:	add    BYTE PTR [rax],al
   1400170cc:	mov    BYTE PTR [rcx],al
	...
   1400170d6:	add    BYTE PTR [rax],al
   1400170d8:	add    al,0x0
   1400170da:	add    BYTE PTR [rax],al
   1400170dc:	add    BYTE PTR [rax],al
   1400170de:	add    DWORD PTR [rax],eax
   1400170e0:	add    BYTE PTR [rax],al
   1400170e2:	add    BYTE PTR [rax],al
   1400170e4:	cwde   
   1400170e5:	add    DWORD PTR [rax],eax
	...
   1400170ef:	add    BYTE PTR [rax+rax*1],al
   1400170f2:	add    BYTE PTR [rax],al
   1400170f4:	add    BYTE PTR [rax],al
   1400170f6:	add    DWORD PTR [rax],eax
   1400170f8:	add    BYTE PTR [rax],al
   1400170fa:	add    BYTE PTR [rax],al
   1400170fc:	test   al,0x1
	...
   140017106:	add    BYTE PTR [rax],al
   140017108:	add    al,0x0
   14001710a:	add    BYTE PTR [rax],al
   14001710c:	add    BYTE PTR [rax],al
   14001710e:	add    DWORD PTR [rax],eax
   140017110:	add    BYTE PTR [rax],al
   140017112:	add    BYTE PTR [rax],al
   140017114:	mov    eax,0x1
   140017119:	add    BYTE PTR [rax],al
   14001711b:	add    BYTE PTR [rax],al
   14001711d:	add    BYTE PTR [rax],al
   14001711f:	add    BYTE PTR [rax+rax*1],al
   140017122:	add    BYTE PTR [rax],al
   140017124:	add    BYTE PTR [rax],al
   140017126:	add    DWORD PTR [rax],eax
   140017128:	add    BYTE PTR [rax],al
   14001712a:	add    BYTE PTR [rax],al
   14001712c:	enter  0x1,0x0
	...
   140017138:	add    al,0x0
   14001713a:	add    BYTE PTR [rax],al
   14001713c:	add    BYTE PTR [rax],al
   14001713e:	add    DWORD PTR [rax],eax
   140017140:	add    BYTE PTR [rax],al
   140017142:	add    BYTE PTR [rax],al
   140017144:	fadd   DWORD PTR [rcx]
	...
   14001714e:	add    BYTE PTR [rax],al
   140017150:	add    al,0x0
   140017152:	add    BYTE PTR [rax],al
   140017154:	add    BYTE PTR [rax],al
   140017156:	add    DWORD PTR [rax],eax
   140017158:	add    BYTE PTR [rax],al
   14001715a:	add    BYTE PTR [rax],al
   14001715c:	call   0x140017162
   140017161:	add    BYTE PTR [rax],al
   140017163:	add    BYTE PTR [rax],al
   140017165:	add    BYTE PTR [rax],al
   140017167:	add    BYTE PTR [rax+rax*1],al
   14001716a:	add    BYTE PTR [rax],al
   14001716c:	add    BYTE PTR [rax],al
   14001716e:	add    DWORD PTR [rax],eax
   140017170:	or     DWORD PTR [rax+rax*1],eax
   140017173:	add    al,bh
   140017175:	add    DWORD PTR [rax],eax
   140017177:	add    BYTE PTR [rax],cl
   140017179:	jb     0x14001717c
   14001717b:	add    al,ch
   14001717d:	add    al,BYTE PTR [rax]
   14001717f:	add    ah,ah
   140017181:	add    al,0x0
   140017183:	add    BYTE PTR [rax],al
   140017185:	add    BYTE PTR [rax],al
   140017187:	add    al,dh
   140017189:	je     0x14001718c
   14001718b:	add    BYTE PTR [rax],ch
   14001718d:	add    DWORD PTR [rax],eax
   14001718f:	add    ah,ah
   140017191:	add    al,0x0
   140017193:	add    BYTE PTR [rax],al
   140017195:	add    BYTE PTR [rax],al
   140017197:	add    BYTE PTR [rax],bl
   140017199:	jbe    0x14001719c
   14001719b:	add    BYTE PTR [rax-0x1bfffff8],ch
   1400171a1:	add    al,0x0
   1400171a3:	add    BYTE PTR [rax],al
   1400171a5:	add    BYTE PTR [rax],al
   1400171a7:	add    al,al
   1400171a9:	jle    0x1400171ac
   1400171ab:	add    BYTE PTR [rax+0x5],ch
   1400171ae:	add    BYTE PTR [rax],al
   1400171b0:	in     al,0x4
   1400171b2:	add    BYTE PTR [rax],al
   1400171b4:	add    BYTE PTR [rax],al
   1400171b6:	add    BYTE PTR [rax],al
   1400171b8:	sub    BYTE PTR [rcx+rax*1+0x25a800],al
   1400171bf:	add    ah,ah
   1400171c1:	add    al,0x0
   1400171c3:	add    BYTE PTR [rax],al
   1400171c5:	add    BYTE PTR [rax],al
   1400171c7:	add    al,dl
   1400171c9:	test   eax,0x10a80001
   1400171ce:	add    BYTE PTR [rax],al
   1400171d0:	in     al,0x4
   1400171d2:	add    BYTE PTR [rax],al
   1400171d4:	add    BYTE PTR [rax],al
   1400171d6:	add    BYTE PTR [rax],al
   1400171d8:	js     0x140017194
   1400171da:	add    DWORD PTR [rax],eax
   1400171dc:	push   0xffffffffe4000004
   1400171e1:	add    al,0x0
   1400171e3:	add    BYTE PTR [rax],al
   1400171e5:	add    BYTE PTR [rax],al
   1400171e7:	add    al,ah
   1400171e9:	mov    esi,0x680001
   1400171ee:	add    BYTE PTR [rax],al
   1400171f0:	in     al,0x4
   1400171f2:	add    BYTE PTR [rax],al
   1400171f4:	add    BYTE PTR [rax],al
   1400171f6:	add    BYTE PTR [rax],al
   1400171f8:	movabs rdi,0x4e40000015a0001
   140017202:	add    BYTE PTR [rax],al
   140017204:	add    BYTE PTR [rax],al
   140017206:	add    BYTE PTR [rax],al
   140017208:	sub    BYTE PTR [rax],al
   14001720a:	add    BYTE PTR [rax],al
   14001720c:	and    BYTE PTR [rax],al
   14001720e:	add    BYTE PTR [rax],al
   140017210:	add    BYTE PTR [rax],al
   140017213:	add    BYTE PTR [rcx],al
   140017215:	add    BYTE PTR [rax+rax*1],al
	...
   140017234:	cs cs add BYTE PTR cs:[rdi+0x47],al
   14001723a:	rex.RXB add BYTE PTR [r15+0x57],r10b
   14001723e:	push   rdi
   14001723f:	add    BYTE PTR [rcx+0x69],ch
   140017242:	imul   eax,DWORD PTR [rax],0x757575
   140017248:	add    BYTE PTR [rax],0x0
   14001724b:	add    BYTE PTR [rax],al
   14001724d:	add    BYTE PTR [rax-0x7f7f8000],0x0
   140017254:	cwde   
   140017255:	cwde   
   140017256:	cwde   
   140017257:	add    BYTE PTR [rdi-0x46ff5859],ah
   14001725d:	mov    ecx,0xc0c000b9
   140017262:	rol    BYTE PTR [rax],0xd7
   140017265:	xlat   BYTE PTR ds:[rbx]
   140017266:	xlat   BYTE PTR ds:[rbx]
   140017267:	add    dh,bh
   140017269:	(bad)  
   14001726a:	inc    BYTE PTR [rax]
   14001726c:	(bad)  
   14001726d:	(bad)  
   14001726e:	inc    DWORD PTR [rax]
   140017270:	add    BYTE PTR [rax],al
   140017272:	add    BYTE PTR [rax+0x8000],al
   140017278:	add    bh,bh
   14001727a:	(bad)  
   14001727b:	push   rax
   14001727d:	add    BYTE PTR [rax],al
   14001727f:	add    BYTE PTR [rax],al
   140017281:	or     al,0x0
   140017283:	(bad)  
   140017284:	int3   
   140017285:	or     BYTE PTR [rax+rax*1],0xf
   140017289:	(bad)  
   14001728a:	ja     0x140017303
   14001728c:	iret   
   14001728d:	add    BYTE PTR [rax],al
   14001728f:	add    BYTE PTR [rax+rax*1],cl
   140017292:	iret   
   140017293:	(bad)  
   140017294:	out    dx,eax
   140017295:	cld    
   140017296:	or     BYTE PTR [rsp+rdi*8],0x77
   14001729a:	ja     0x140017318
   14001729c:	jl     0x14001728e
   14001729e:	add    BYTE PTR [rax],al
   1400172a0:	add    bh,ch
   1400172a2:	dec    esp
   1400172a4:	cld    
   1400172a5:	iret   
   1400172a6:	dec    esp
   1400172a8:	div    DWORD PTR [rdi+0x77]
   1400172ab:	iret   
   1400172ac:	(bad)  
   1400172ad:	lock add BYTE PTR [rax],al
   1400172b0:	or     ah,bh
   1400172b2:	iret   
   1400172b3:	(bad)  
   1400172b4:	out    dx,eax
   1400172b5:	(bad)  
   1400172b6:	(bad)  
   1400172b7:	push   rdi
   1400172b9:	ja     0x140017332
   1400172bb:	ja     0x140017334
   1400172bd:	lock add BYTE PTR [rax],al
   1400172c0:	or     al,ch
   1400172c2:	iret   
   1400172c3:	int3   
   1400172c4:	int3   
   1400172c5:	int3   
   1400172c6:	(bad)  
   1400172c7:	push   rdi
   1400172c9:	ja     0x140017342
   1400172cb:	(bad)  
   1400172cc:	(bad)  
   1400172cd:	(bad)  
   1400172ce:	inc    DWORD PTR [rax]
   1400172d0:	or     bh,bh
   1400172d2:	(bad)  
   1400172d3:	(bad)  
   1400172d4:	out    dx,eax
   1400172d5:	(bad)  
   1400172d6:	cld    
   1400172d7:	div    WORD PTR [rdi+0x77]
   1400172db:	ja     0x140017354
   1400172dd:	ja     0x14001735b
   1400172df:	lock or ah,ch
   1400172e2:	iret   
   1400172e3:	dec    esp
   1400172e5:	inc    esi
   1400172e7:	div    WORD PTR [rdi+0x77]
   1400172eb:	ja     0x140017364
   1400172ed:	ja     0x140017366
   1400172ef:	iret   
   1400172f0:	or     al,bh
   1400172f2:	iret   
   1400172f3:	(bad)  
   1400172f4:	out    dx,eax
   1400172f5:	jmp    QWORD PTR [rsi+0x66]
   1400172f8:	cld    
   1400172f9:	ja     0x140017372
   1400172fb:	ja     0x140017374
   1400172fd:	ja     0x140017376
   1400172ff:	jg     0x140017309
   140017301:	(bad)  
   140017302:	(bad)  
   140017303:	dec    esp
   140017305:	iret   
   140017306:	data16 iretw 
   140017309:	(bad)  
   14001730a:	ja     0x140017383
   14001730c:	ja     0x140017385
   14001730e:	ja     0x14001738f
   140017310:	or     ah,bh
   140017312:	iret   
   140017313:	(bad)  
   140017314:	out    dx,eax
   140017315:	jmp    QWORD PTR [rsi+0x66]
   140017318:	ins    BYTE PTR es:[rdi],dx
   140017319:	(bad)  
   14001731a:	(bad)  
   14001731b:	(bad)  
   14001731c:	cld    
   14001731d:	ja     0x140017396
   14001731f:	jg     0x140017329
   140017321:	call   0x10ffe3ff5
   140017326:	data16 data16 data16 data16 data16 iretw 
   14001732d:	(bad)  
   14001732e:	ja     0x1400173af
   140017330:	or     bh,bh
   140017332:	(bad)  
   140017333:	(bad)  
   140017334:	out    dx,eax
   140017335:	jmp    QWORD PTR [rsi+0x66]
   140017338:	data16 data16 data16 data16 ins BYTE PTR es:[rdi],dx
   14001733d:	div    DWORD PTR [rdi+0x7f]
   140017340:	or     ah,bh
   140017342:	iret   
   140017343:	int3   
   140017344:	int3   
   140017345:	iret   
   140017346:	(bad)  
   140017347:	data16 data16 data16 data16 data16 div WORD PTR [rdi-0x31]
   140017350:	or     al,bh
   140017352:	iret   
   140017353:	fucomip st,st(7)
   140017355:	(bad)  
   140017356:	cld    
   140017357:	data16 data16 data16 data16 data16 idiv WORD PTR [rax+rsi*8+0x8]
   140017361:	(bad)  
   140017362:	dec    DWORD PTR [rbx-0x3331]
   140017368:	(bad)  
   140017369:	(bad)  
   14001736a:	cld    
   14001736b:	data16 data16 (bad) 
   14001736e:	inc    DWORD PTR [rax]
   140017370:	or     ah,bh
   140017372:	iret   
   140017373:	stc    
   140017374:	(bad)  
   140017376:	(bad)  
   140017377:	push   rsi
   140017379:	data16 data16 data16 data16 lock add BYTE PTR [rax],al
   140017380:	or     al,ch
   140017382:	(bad)  
   140017383:	cld    
   140017384:	mov    cl,ah
   140017386:	cld    
   140017387:	int3   
   140017388:	test   bh,0xc6
   14001738b:	data16 data16 lock add BYTE PTR [rax],al
   140017390:	or     dh,bh
   140017392:	push   rdx
   140017393:	pop    rsp
   140017394:	rex.WB (bad) 
   140017397:	(bad)  
   140017398:	cld    
   140017399:	ins    BYTE PTR es:[rdi],dx
   14001739a:	data16 data16 ins BYTE PTR es:[rdi],dx
   14001739d:	lock add BYTE PTR [rax],al
   1400173a0:	add    eax,0x2914c9bc
   1400173a5:	pushf  
   1400173a6:	int3   
   1400173a7:	iret   
   1400173a8:	inc    esi
   1400173aa:	data16 iretw 
   1400173ad:	add    BYTE PTR [rax],al
   1400173af:	add    BYTE PTR [rax],cl
   1400173b1:	fsubr  DWORD PTR [rbp-0x10ec7f]
   1400173b7:	(bad)  
   1400173b8:	(bad)  
   1400173b9:	(bad)  
   1400173ba:	(bad)  
   1400173bb:	(bad)  
   1400173bc:	clc    
   1400173bd:	add    BYTE PTR [rax],al
   1400173bf:	add    BYTE PTR [rax],cl
   1400173c1:	std    
   1400173c2:	test   DWORD PTR [rdx],esi
   1400173c4:	adc    DWORD PTR [rsp+rcx*8-0x31],ecx
   1400173c8:	int3   
   1400173c9:	iret   
   1400173ca:	dec    DWORD PTR [rax+rsi*8+0x8000000]
   1400173d1:	cld    
   1400173d2:	test   eax,0xef38319a
   1400173d7:	(bad)  
   1400173d8:	(bad)  
   1400173d9:	(bad)  
   1400173da:	(bad)  
   1400173db:	push   rax
   1400173dd:	add    BYTE PTR [rax],al
   1400173df:	add    BYTE PTR [rax],cl
   1400173e1:	clc    
   1400173e2:	int    0xcf
   1400173e4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400173e5:	and    ch,BYTE PTR [rsp+rcx*8+0xf8]
   1400173ec:	or     BYTE PTR [rax],al
   1400173ee:	add    BYTE PTR [rax],al
   1400173f0:	or     bh,bh
   1400173f2:	(bad)  
   1400173f3:	(bad)  
   1400173f4:	in     al,dx
   1400173f5:	rex.B cmp al,0xff
   1400173f8:	clc    
   1400173f9:	(bad)  
   1400173fa:	(bad)  
   1400173fb:	clc    
   1400173fc:	or     al,0x0
   1400173fe:	add    BYTE PTR [rax],al
   140017400:	or     ah,bh
   140017402:	iret   
   140017403:	int3   
   140017404:	(bad)  
   140017405:	movabs ds:0xc080cffcf8cc54,eax
   14001740e:	add    BYTE PTR [rax],al
   140017410:	or     al,bh
   140017412:	iret   
   140017413:	(bad)  
   140017414:	(bad)  
   140017415:	std    
   140017416:	push   rbp
   140017417:	mov    edi,0xcf8fcf8
   14001741c:	add    BYTE PTR [rax],al
   14001741e:	add    BYTE PTR [rax],al
   140017420:	or     bh,bh
   140017422:	dec    esp
   140017424:	int3   
   140017425:	int3   
   140017426:	jmp    0xc1016cc7
   14001742b:	rol    BYTE PTR [rax],0x0
   14001742e:	add    BYTE PTR [rax],al
   140017430:	or     ah,bh
   140017432:	iret   
   140017433:	(bad)  
   140017434:	(bad)  
   140017435:	(bad)  
   140017436:	(bad)  
   140017437:	in     al,dx
   140017438:	call   0x140018135
   14001743d:	add    BYTE PTR [rax],al
   14001743f:	add    BYTE PTR [rax],cl
   140017441:	clc    
   140017442:	iret   
   140017443:	int3   
   140017444:	int3   
   140017445:	int3   
   140017446:	int3   
   140017447:	int3   
   140017448:	fadd   DWORD PTR [rax+0xc0]
   14001744e:	add    BYTE PTR [rax],al
   140017450:	or     bh,bh
   140017452:	(bad)  
   140017453:	(bad)  
   140017454:	(bad)  
   140017455:	(bad)  
   140017456:	(bad)  
   140017457:	(bad)  
   140017458:	clc    
   140017459:	or     al,0x0
   14001745b:	add    BYTE PTR [rax],al
   14001745d:	add    BYTE PTR [rax],al
   14001745f:	add    BYTE PTR [rax],cl
   140017461:	mov    BYTE PTR [rax-0x77777778],cl
   140017467:	mov    BYTE PTR [rax+0xc0],cl
   14001746d:	add    BYTE PTR [rax],al
   14001746f:	add    ah,bh
   140017471:	(bad)  
   140017472:	sar    BYTE PTR [rdi-0x20],0x3
   140017476:	cmp    BYTE PTR [rdi],0x80
   140017479:	add    BYTE PTR [rax],al
   14001747b:	(bad)  
   14001747c:	add    BYTE PTR [rax],0x0
   14001747f:	(bad)  
   140017480:	add    BYTE PTR [rax],0x0
   140017483:	(bad)  
   140017484:	add    BYTE PTR [rax],0x0
   140017487:	add    eax,DWORD PTR [rax-0x7fff0000]
   14001748d:	add    BYTE PTR [rax],al
   14001748f:	add    BYTE PTR [rax-0x80000000],al
   140017495:	add    BYTE PTR [rax],al
   140017497:	add    BYTE PTR [rax-0x80000000],al
   14001749d:	add    BYTE PTR [rax],al
   14001749f:	add    BYTE PTR [rax-0x80000000],al
   1400174a5:	add    BYTE PTR [rax],al
   1400174a7:	add    BYTE PTR [rax-0x7fff0000],al
   1400174ad:	add    BYTE PTR [rax],al
   1400174af:	add    eax,DWORD PTR [rax-0x7fe10000]
   1400174b5:	add    BYTE PTR [rax],al
   1400174b7:	(bad)  
   1400174b8:	add    BYTE PTR [rax],0x0
   1400174bb:	(bad)  
   1400174bc:	add    BYTE PTR [rax],0x0
   1400174bf:	(bad)  
   1400174c0:	add    BYTE PTR [rax],0x0
   1400174c3:	(bad)  
   1400174c4:	add    BYTE PTR [rax],0x0
   1400174c7:	(bad)  
   1400174c8:	add    BYTE PTR [rax],0x0
   1400174cb:	(bad)  
   1400174cc:	add    BYTE PTR [rax],0x0
   1400174cf:	(bad)  
   1400174d0:	add    BYTE PTR [rax],0x0
   1400174d3:	(bad)  
   1400174d4:	add    BYTE PTR [rax],0x0
   1400174d7:	jg     0x140017459
   1400174d9:	add    BYTE PTR [rax],al
   1400174db:	inc    DWORD PTR [rax-0x7f00ff00]
   1400174e1:	add    BYTE PTR [rbx],al
   1400174e3:	inc    DWORD PTR [rax-0x7f00f900]
   1400174e9:	add    BYTE PTR [rdi],cl
   1400174eb:	inc    DWORD PTR [rax+0x28ff1f00]
   1400174f1:	add    BYTE PTR [rax],al
   1400174f3:	add    BYTE PTR [rax],dl
   1400174f5:	add    BYTE PTR [rax],al
   1400174f7:	add    BYTE PTR [rax],ah
   1400174f9:	add    BYTE PTR [rax],al
   1400174fb:	add    BYTE PTR [rcx],al
   1400174fd:	add    BYTE PTR [rax+rax*1],al
	...
   14001751c:	xor    al,0x34
   14001751e:	xor    al,0x0
   140017520:	rex.WRB
   140017521:	rex.WRB
   140017522:	rex.WRB add BYTE PTR [r11+0x53],r10b
   140017526:	push   rbx
   140017527:	add    BYTE PTR [rdx+0x7a],bh
   14001752a:	jp     0x14001752c
   14001752c:	add    BYTE PTR [rax],0x0
   14001752f:	add    BYTE PTR [rax],al
   140017531:	add    BYTE PTR [rax-0x7f7f8000],0x0
   140017538:	nop
   140017539:	nop
   14001753a:	nop
   14001753b:	add    BYTE PTR [rdx-0x4bff5556],ch
   140017541:	mov    ah,0xb4
   140017543:	add    al,al
   140017545:	rol    al,0x0
   140017548:	(bad)  
   140017549:	(bad)  
   14001754a:	(bad)  
   14001754b:	add    ch,ah
   14001754d:	in     eax,0xe5
   14001754f:	add    dh,bh
   140017551:	(bad)  
   140017552:	inc    BYTE PTR [rax]
   140017554:	(bad)  
   140017555:	(bad)  
   140017556:	inc    DWORD PTR [rax]
   140017558:	jo     0x14001755a
   14001755a:	add    BYTE PTR [rbx],cl
   14001755c:	add    BYTE PTR [rax-0x4f900000],dh
   140017562:	mov    bh,0x7
   140017564:	(bad)  
   140017565:	push   rax
   140017567:	add    BYTE PTR [rbx+0x70],bh
   14001756a:	jnp    0x14001756b
   14001756c:	mov    dh,0x66
   14001756e:	mov    edi,0xefbf7f00
   140017573:	mov    edi,0x6f6b66
   140017578:	jg     0x140017569
   14001757a:	(bad)  
   14001757b:	jmp    QWORD PTR [rsi-0x41]
   14001757e:	(bad)  
   14001757f:	(bad)  
   140017580:	jg     0x140017541
   140017582:	jmp    0x1400175e3
   140017584:	data16 data16 imul di,WORD PTR [rdi-0x12],0xfff5
   14001758b:	pop    rdi
   14001758c:	mov    dh,0x66
   14001758e:	data16 data16 jg 0x140017530
   140017592:	in     eax,0x5b
   140017594:	(bad)  
   140017595:	(bad)  
   140017596:	sti    
   140017597:	data16 jge 0x140017563
   14001759a:	in     eax,0x55
   14001759c:	push   rbp
   14001759d:	push   rbp
   14001759e:	mov    edi,0xab344c66
   1400175a3:	push   rbp
   1400175a4:	push   rbp
   1400175a5:	push   rbp
   1400175a6:	pop    rdi
   1400175a7:	imul   ecx,DWORD PTR [rdx+0x71],0x4f
   1400175ab:	(bad)  
   1400175ac:	push   QWORD PTR [rbp-0x768100a1]
   1400175b2:	(bad)  
   1400175b3:	mov    edi,0x5f555b
   1400175b8:	jg     0x1400175b9
   1400175ba:	movabs ds:0xb9bf7f00bf55b5bf,eax
   1400175c3:	mov    ?,edi
   1400175c5:	push   rax
   1400175c7:	add    BYTE PTR [rdi-0x1],bh
   1400175ca:	(bad)  
   1400175cb:	in     eax,dx
   1400175cc:	div    edi
   1400175ce:	mov    al,0x0
   1400175d0:	ja     0x140017649
   1400175d2:	ja     0x14001764b
   1400175d4:	ja     0x140017651
   1400175d6:	add    BYTE PTR [rax],al
   1400175d8:	jle    0x1400175f9
   1400175da:	(bad)  
   1400175db:	call   QWORD PTR [rax]
   1400175dd:	(bad)  
   1400175de:	(bad)  
   1400175df:	inc    DWORD PTR [rax]
   1400175e1:	add    ebx,DWORD PTR [rdi]
   1400175e3:	inc    DWORD PTR [rax]
   1400175e5:	add    ebx,DWORD PTR [rdi]
   1400175e7:	inc    DWORD PTR [rax]
   1400175e9:	add    BYTE PTR [rdi],bl
   1400175eb:	inc    DWORD PTR [rax]
   1400175ed:	add    BYTE PTR [rdi],bl
   1400175ef:	inc    DWORD PTR [rax]
   1400175f1:	add    BYTE PTR [rdi],bl
   1400175f3:	inc    DWORD PTR [rax]
   1400175f5:	add    BYTE PTR [rdi],bl
   1400175f7:	inc    DWORD PTR [rax]
   1400175f9:	add    BYTE PTR [rdi],bl
   1400175fb:	inc    DWORD PTR [rax]
   1400175fd:	add    BYTE PTR [rdi],bl
   1400175ff:	inc    DWORD PTR [rax]
   140017601:	add    BYTE PTR [rdi],bl
   140017603:	inc    DWORD PTR [rax]
   140017605:	add    ebx,DWORD PTR [rdi]
   140017607:	inc    DWORD PTR [rax]
   140017609:	add    ebx,DWORD PTR [rdi]
   14001760b:	inc    DWORD PTR [rax]
   14001760d:	(bad)  
   14001760e:	(bad)  
   14001760f:	inc    DWORD PTR [rax]
   140017611:	(bad)  
   140017612:	(bad)  
   140017613:	inc    DWORD PTR [rax]
   140017615:	nop    edi
   140017618:	sub    BYTE PTR [rax],al
   14001761a:	add    BYTE PTR [rax],al
   14001761c:	and    BYTE PTR [rax],al
   14001761e:	add    BYTE PTR [rax],al
   140017620:	add    BYTE PTR [rax],al
   140017623:	add    BYTE PTR [rcx],al
   140017625:	add    BYTE PTR [rax],cl
	...
   140017643:	add    BYTE PTR [rip+0x2b002525],ah        # 0x16b019b6e
   140017649:	sub    ebp,DWORD PTR [rbx]
   14001764b:	add    BYTE PTR [rax],dh
   14001764d:	xor    BYTE PTR [rax],dh
   14001764f:	add    BYTE PTR [rip+0x41003d3d],bh        # 0x18101b392
   140017655:	rex.B
   140017656:	add    BYTE PTR [r9+0x49],cl
   14001765a:	rex.WB add BYTE PTR [r13+0x4d],cl
   14001765e:	rex.WRB add BYTE PTR [r9+0x51],r10b
   140017662:	push   rcx
   140017663:	add    BYTE PTR [rsi+0x56],dl
   140017666:	push   rsi
   140017667:	add    BYTE PTR [rcx+0x59],bl
   14001766a:	pop    rcx
   14001766b:	add    BYTE PTR [rbp+0x5d],bl
   14001766e:	pop    rbp
   14001766f:	add    BYTE PTR [rsi+0x64],bh
   140017672:	rex.RX add BYTE PTR [rdi+0x67],r12b
   140017676:	add    BYTE PTR [edx+0x6a],ch
   14001767a:	push   0x0
   14001767c:	ins    DWORD PTR es:[rdi],dx
   14001767d:	ins    DWORD PTR es:[rdi],dx
   14001767e:	ins    DWORD PTR es:[rdi],dx
   14001767f:	add    BYTE PTR [rdx+0x72],dh
   140017682:	jb     0x140017684
   140017684:	jne    0x1400176fb
   140017686:	jne    0x140017688
   140017688:	jge    0x140017707
   14001768a:	jge    0x14001768c
   14001768c:	movabs eax,ds:0xb3003d7aab003f75
   140017695:	jle    0x1400176d2
   140017697:	add    BYTE PTR [rbx-0x73ffba99],al
   14001769d:	imul   eax,DWORD PTR [rbx+0x0],0xffffff94
   1400176a1:	outs   dx,DWORD PTR ds:[rsi]
   1400176a2:	add    BYTE PTR [r11-0x44ffbf8e],bl
   1400176a9:	cmp    DWORD PTR [rdx],0x4980ad00
   1400176af:	add    BYTE PTR [rdx-0x48ff9d7f],bl
   1400176b5:	cwde   
   1400176b6:	jo     0x1400176b8
   1400176b8:	(bad)  
   1400176b9:	(bad)  
   1400176ba:	rex.WXB add r8b,dl
   1400176bd:	movabs ds:0xc22c00ffbe28006b,eax
   1400176c6:	inc    DWORD PTR [rax]
   1400176c8:	xor    esi,eax
   1400176ca:	inc    DWORD PTR [rax]
   1400176cc:	(bad)  
   1400176cd:	(bad)  
   1400176ce:	inc    DWORD PTR [rax]
   1400176d0:	xor    eax,0x3c00ffca
   1400176d5:	(bad)  
   1400176d6:	inc    DWORD PTR [rax]
   1400176d8:	pop    rsp
   1400176d9:	int    0xff
   1400176db:	add    BYTE PTR [rbx-0x2c],al
   1400176de:	inc    DWORD PTR [rax]
   1400176e0:	rex.WXB (bad) 
   1400176e3:	add    BYTE PTR [rcx-0x21],dl
   1400176e6:	inc    DWORD PTR [rax]
   1400176e8:	jae    0x1400176c9
   1400176ea:	inc    DWORD PTR [rax]
   1400176ec:	push   rbp
   1400176ed:	loop   0x1400176ee
   1400176ef:	add    BYTE PTR [rbx-0x19],bl
   1400176f2:	inc    DWORD PTR [rax]
   1400176f4:	movsxd esp,eax
   1400176f6:	inc    DWORD PTR [rax]
   1400176f8:	(bad)  
   1400176f9:	in     al,dx
   1400176fa:	inc    DWORD PTR [rax]
   1400176fc:	add    DWORD PTR [rcx-0x7676ff7f],0x91910089
   140017706:	xchg   ecx,eax
   140017707:	add    BYTE PTR [rdi-0x66ff6869],dl
   14001770d:	cdq    
   14001770e:	cdq    
   14001770f:	add    BYTE PTR [rsp+rbx*4-0x5f5fff64],bl
   140017716:	movabs al,ds:0xaaaaaa00a5a5a500
   14001771f:	add    BYTE PTR [rax-0x4aff4f50],dh
   140017725:	mov    ch,0xb5
   140017727:	add    BYTE PTR [rcx-0x43ff4647],bh
   14001772d:	mov    esp,0xc3d300bc
   140017732:	mov    al,0x0
   140017734:	(bad)  
   140017735:	icebp  
   140017736:	inc    DWORD PTR [rax]
   140017738:	mov    ch,0xf0
   14001773a:	inc    DWORD PTR [rax]
   14001773c:	(bad)
   14001773f:	add    cl,cl
   140017741:	leave  
   140017742:	leave  
   140017743:	add    ch,cl
   140017745:	int    0xcd
   140017747:	add    cl,dl
   140017749:	rcl    ecx,1
   14001774b:	add    ah,dl
   14001774d:	(bad)  
   14001774e:	(bad)  
   14001774f:	add    dl,bl
   140017751:	fcmovu st,st(2)
   140017753:	add    ch,bl
   140017755:	fstp   st(5)
   140017757:	add    bh,ch
   140017759:	in     eax,0xd8
   14001775b:	add    bl,dl
   14001775d:	repnz inc DWORD PTR [rax]
   140017760:	loope  0x140017743
   140017762:	loope  0x140017764
   140017764:	in     eax,0xe5
   140017766:	in     eax,0x0
   140017768:	jmp    0x134026156
   14001776d:	out    dx,eax
   14001776e:	(bad)  
   14001776f:	add    bl,ah
   140017771:	stc    
   140017772:	inc    DWORD PTR [rax]
   140017774:	lock lock lock add bh,dh
   140017779:	div    edi
   14001777b:	add    dh,bh
   14001777d:	(bad)  
   14001777e:	inc    BYTE PTR [rax]
   140017780:	add    BYTE PTR [rax],al
   140017782:	add    BYTE PTR [rax],al
   140017784:	add    ch,BYTE PTR [rdi]
   140017786:	add    BYTE PTR [rax],al
   140017788:	add    al,0x50
   14001778a:	add    BYTE PTR [rax],al
   14001778c:	(bad)  
   14001778d:	jo     0x14001778f
   14001778f:	add    BYTE PTR [rax],cl
   140017791:	nop
   140017792:	add    BYTE PTR [rax],al
   140017794:	or     dh,BYTE PTR [rax-0x30f50000]
   14001779a:	add    BYTE PTR [rax],al
   14001779c:	(bad)  
   14001779d:	lock add BYTE PTR [rax],al
   1400177a0:	and    bh,bh
   1400177a2:	adc    al,BYTE PTR [rax]
   1400177a4:	cmp    eax,0x5b0031ff
   1400177a9:	call   QWORD PTR [rcx+0x0]
   1400177ac:	jns    0x1400177ad
   1400177ae:	jno    0x1400177b0
   1400177b0:	cwde   
   1400177b1:	call   QWORD PTR [rcx-0x4e004b00]
   1400177b7:	add    ah,dl
   1400177b9:	call   rcx
   1400177bb:	add    bh,bh
   1400177bd:	(bad)  
   1400177be:	inc    DWORD PTR [rax]
   1400177c0:	add    BYTE PTR [rax],al
   1400177c2:	add    BYTE PTR [rax],al
   1400177c4:	adc    al,0x2f
   1400177c6:	add    BYTE PTR [rax],al
   1400177c8:	and    dl,BYTE PTR [rax+0x0]
   1400177cb:	add    BYTE PTR [rax],dh
   1400177cd:	jo     0x1400177cf
   1400177cf:	add    BYTE PTR [rip+0x4c000090],bh        # 0x18c017865
   1400177d5:	mov    al,0x0
   1400177d7:	add    BYTE PTR [rcx-0x31],bl
   1400177da:	add    BYTE PTR [rax],al
   1400177dc:	lock add BYTE PTR [eax],al
   1400177e0:	js     0x1400177e1
   1400177e2:	adc    DWORD PTR [rax],eax
   1400177e4:	mov    bh,bh
   1400177e6:	xor    DWORD PTR [rax],eax
   1400177e8:	pushf  
   1400177e9:	call   QWORD PTR [rcx+0x0]
   1400177ec:	scas   al,BYTE PTR es:[rdi]
   1400177ed:	push   QWORD PTR [rcx+0x0]
   1400177f0:	sar    bh,0x91
   1400177f3:	add    dl,dl
   1400177f5:	push   QWORD PTR [rcx-0x2e001c00]
   1400177fb:	add    bh,bh
   1400177fd:	(bad)  
   1400177fe:	inc    DWORD PTR [rax]
   140017800:	add    BYTE PTR [rax],al
   140017802:	add    BYTE PTR [rax],al
   140017804:	es (bad) 
   140017806:	add    BYTE PTR [rax],al
   140017808:	rex push rax
   14001780a:	add    BYTE PTR [rax],al
   14001780c:	pop    rdx
   14001780d:	jo     0x14001780f
   14001780f:	add    BYTE PTR [rax+rdx*4+0x0],dh
   140017813:	add    BYTE PTR [rsi-0x56ffff50],cl
   140017819:	iret   
   14001781a:	add    BYTE PTR [rax],al
   14001781c:	ret    0xf0
   14001781f:	add    cl,dl
   140017821:	call   QWORD PTR [rcx]
   140017823:	add    al,bl
   140017825:	push   QWORD PTR [rcx]
   140017827:	add    dh,bl
   140017829:	call   QWORD PTR [rcx+0x0]
   14001782c:	jrcxz  0x14001782d
   14001782e:	jno    0x140017830
   140017830:	jmp    0x12f020a34
   140017835:	push   QWORD PTR [rcx-0x2e000a00]
   14001783b:	add    bh,bh
   14001783d:	(bad)  
   14001783e:	inc    DWORD PTR [rax]
   140017840:	add    BYTE PTR [rax],al
   140017842:	add    BYTE PTR [rax],al
   140017844:	(bad)  
   140017845:	add    BYTE PTR es:[rax],al
   140017848:	push   rax
   140017849:	add    BYTE PTR [r8],al
   14001784c:	jo     0x1400178a9
   14001784e:	add    BYTE PTR [rax],al
   140017850:	nop
   140017851:	je     0x140017853
   140017853:	add    BYTE PTR [rax-0x30ffff72],dh
   140017859:	test   eax,0xc3f00000
   14001785e:	add    BYTE PTR [rax],al
   140017860:	call   rdx
   140017862:	adc    DWORD PTR [rax],eax
   140017864:	(bad)  
   140017865:	fdiv   DWORD PTR [rcx]
   140017867:	add    bh,bh
   140017869:	fst    QWORD PTR [rcx+0x0]
   14001786c:	jmp    rsp
   14001786e:	jno    0x140017870
   140017870:	(bad)  
   140017871:	(bad)  
   140017872:	xchg   ecx,eax
   140017873:	add    bh,bh
   140017875:	lock mov cl,0x0
   140017878:	push   rsi
   14001787a:	rol    DWORD PTR [rax],1
   14001787c:	(bad)  
   14001787d:	(bad)  
   14001787e:	inc    DWORD PTR [rax]
   140017880:	add    BYTE PTR [rax],al
   140017882:	add    BYTE PTR [rax],al
   140017884:	(bad)  
   140017885:	adc    al,0x0
   140017887:	add    BYTE PTR [rax+0x22],dl
   14001788a:	add    BYTE PTR [rax],al
   14001788c:	jo     0x1400178be
   14001788e:	add    BYTE PTR [rax],al
   140017890:	nop
   140017891:	add    BYTE PTR ds:[rax],al
   140017894:	mov    al,0x4d
   140017896:	add    BYTE PTR [rax],al
   140017898:	iret   
   140017899:	pop    rbx
   14001789a:	add    BYTE PTR [rax],al
   14001789c:	lock imul eax,DWORD PTR [rax],0x1179ff00
   1400178a3:	add    bh,bh
   1400178a5:	mov    dh,BYTE PTR [rcx]
   1400178a7:	add    bh,bh
   1400178a9:	popf   
   1400178aa:	push   rcx
   1400178ab:	add    bh,bh
   1400178ad:	scas   eax,DWORD PTR es:[rdi]
   1400178ae:	jno    0x1400178b0
   1400178b0:	inc    ecx
   1400178b2:	xchg   ecx,eax
   1400178b3:	add    bh,bh
   1400178b5:	shl    BYTE PTR [rcx-0x2e1a0100],cl
   1400178bb:	add    bh,bh
   1400178bd:	(bad)  
   1400178be:	inc    DWORD PTR [rax]
   1400178c0:	add    BYTE PTR [rax],al
   1400178c2:	add    BYTE PTR [rax],al
   1400178c4:	(bad)  
   1400178c5:	add    eax,DWORD PTR [rax]
   1400178c7:	add    BYTE PTR [rax+0x4],dl
   1400178ca:	add    BYTE PTR [rax],al
   1400178cc:	jo     0x1400178d4
   1400178ce:	add    BYTE PTR [rax],al
   1400178d0:	nop
   1400178d1:	or     DWORD PTR [rax],eax
   1400178d3:	add    BYTE PTR [rax-0x30fffff6],dh
   1400178d9:	or     al,0x0
   1400178db:	add    al,dh
   1400178dd:	(bad)  
   1400178de:	add    BYTE PTR [rax],al
   1400178e0:	jmp    QWORD PTR [rax]
   1400178e2:	adc    al,BYTE PTR [rax]
   1400178e4:	(bad)  
   1400178e5:	xor    DWORD PTR ds:[rax],eax
   1400178e8:	call   FWORD PTR [rcx+rdx*2+0x0]
   1400178ec:	(bad)  
   1400178ed:	jp     0x140017960
   1400178ef:	add    bh,bh
   1400178f1:	xchg   edi,eax
   1400178f2:	xchg   ecx,eax
   1400178f3:	add    bh,bh
   1400178f5:	mov    dh,0xb1
   1400178f7:	add    bh,bh
   1400178f9:	(bad)  
   1400178fa:	rol    DWORD PTR [rax],1
   1400178fc:	(bad)  
   1400178fd:	(bad)  
   1400178fe:	inc    DWORD PTR [rax]
   140017900:	add    BYTE PTR [rax],al
   140017902:	add    BYTE PTR [rax],al
   140017904:	(bad)  
   140017905:	add    BYTE PTR [rsi],cl
   140017907:	add    BYTE PTR [rax+0x0],dl
   14001790a:	(bad)  
   14001790b:	add    BYTE PTR [rax+0x0],dh
   14001790e:	and    DWORD PTR [rax],eax
   140017910:	nop
   140017911:	add    BYTE PTR [rbx],ch
   140017913:	add    BYTE PTR [rax-0x30ffca00],dh
   140017919:	add    BYTE PTR [rax+0x0],al
   14001791c:	lock add BYTE PTR [rcx+0x0],cl
   140017920:	call   QWORD PTR [rcx]
   140017922:	pop    rdx
   140017923:	add    bh,bh
   140017925:	xor    DWORD PTR [rax+0x0],esi
   140017928:	call   QWORD PTR [rcx-0x7a]
   14001792b:	add    bh,bh
   14001792d:	jno    0x1400178cb
   14001792f:	add    bh,bh
   140017931:	xchg   ecx,eax
   140017932:	mov    dl,0x0
   140017934:	push   QWORD PTR [rcx-0x2e00ff38]
   14001793a:	fild   WORD PTR [rax]
   14001793c:	(bad)  
   14001793d:	(bad)  
   14001793e:	inc    DWORD PTR [rax]
   140017940:	add    BYTE PTR [rax],al
   140017942:	add    BYTE PTR [rax],al
   140017944:	(bad)  
   140017945:	add    BYTE PTR [rax],ah
   140017947:	add    BYTE PTR [rax+0x0],dl
   14001794a:	add    BYTE PTR ss:[rax+0x0],dh
   14001794e:	rex.WR add BYTE PTR [rax-0x4fff9e00],r10b
   140017955:	add    BYTE PTR [rax+0x0],bh
   140017958:	iret   
   140017959:	add    BYTE PTR [rsi-0x5bff1000],cl
   14001795f:	add    bh,bh
   140017961:	adc    DWORD PTR [rbx-0x41ce0100],esi
   140017967:	add    bh,bh
   140017969:	push   rcx
   14001796a:	mov    DWORD PTR [rax],0xd171ff
   140017970:	call   QWORD PTR [rcx-0x4e00ff24]
   140017976:	in     eax,0x0
   140017978:	call   rcx
   14001797a:	lock add bh,bh
   14001797d:	(bad)  
   14001797e:	inc    DWORD PTR [rax]
   140017980:	add    BYTE PTR [rax],al
   140017982:	add    BYTE PTR [rax],al
   140017984:	sub    al,0x0
   140017986:	(bad)  
   140017987:	add    BYTE PTR [rbx+0x0],cl
   14001798a:	push   rax
   14001798b:	add    BYTE PTR [rcx+0x0],ch
   14001798e:	jo     0x140017990
   140017990:	xchg   DWORD PTR [rax],eax
   140017992:	nop
   140017993:	add    BYTE PTR [rbp-0x3bff5000],ah
   140017999:	add    bh,cl
   14001799b:	add    cl,ah
   14001799d:	add    al,dh
   14001799f:	add    al,dh
   1400179a1:	adc    edi,edi
   1400179a3:	add    dl,dh
   1400179a5:	xor    edi,edi
   1400179a7:	add    ah,dh
   1400179a9:	push   rcx
   1400179aa:	inc    DWORD PTR [rax]
   1400179ac:	div    BYTE PTR [rcx-0x1]
   1400179af:	add    bh,dh
   1400179b1:	xchg   ecx,eax
   1400179b2:	inc    DWORD PTR [rax]
   1400179b4:	stc    
   1400179b5:	mov    cl,0xff
   1400179b7:	add    bl,bh
   1400179b9:	sar    edi,1
   1400179bb:	add    bh,bh
   1400179bd:	(bad)  
   1400179be:	inc    DWORD PTR [rax]
   1400179c0:	add    BYTE PTR [rax],al
   1400179c2:	add    BYTE PTR [rax],al
   1400179c4:	sbb    eax,DWORD PTR [rax]
   1400179c6:	(bad)  
   1400179c7:	add    BYTE PTR [rip+0x3f005000],ch        # 0x17f01c9cd
   1400179cd:	add    BYTE PTR [rax+0x0],dh
   1400179d0:	push   rdx
   1400179d1:	add    BYTE PTR [rax-0x4fff9d00],dl
   1400179d7:	add    BYTE PTR [rsi+0x0],dh
   1400179da:	iret   
   1400179db:	add    BYTE PTR [rax-0x66ff1000],cl
   1400179e1:	adc    edi,edi
   1400179e3:	add    BYTE PTR [rsi-0x4bff00cf],ah
   1400179e9:	push   rcx
   1400179ea:	inc    DWORD PTR [rax]
   1400179ec:	ret    0xff71
   1400179ef:	add    bh,cl
   1400179f1:	xchg   ecx,eax
   1400179f2:	inc    DWORD PTR [rax]
   1400179f4:	fdiv   QWORD PTR [rcx-0x2e14ff01]
   1400179fa:	inc    DWORD PTR [rax]
   1400179fc:	(bad)  
   1400179fd:	(bad)  
   1400179fe:	inc    DWORD PTR [rax]
   140017a00:	add    BYTE PTR [rax],al
   140017a02:	add    BYTE PTR [rax],al
   140017a04:	or     BYTE PTR [rax],al
   140017a06:	(bad)  
   140017a07:	add    BYTE PTR [rsi],cl
   140017a09:	add    BYTE PTR [rax+0x0],dl
   140017a0c:	adc    eax,0x1b007000
   140017a11:	add    BYTE PTR [rax-0x4fffdf00],dl
   140017a17:	add    BYTE PTR [rsi],ah
   140017a19:	add    bh,cl
   140017a1b:	add    BYTE PTR [rax+rax*1],ch
   140017a1e:	lock add BYTE PTR [rsi],bh
   140017a21:	adc    edi,edi
   140017a23:	add    BYTE PTR [rax+0x31],bl
   140017a26:	inc    DWORD PTR [rax]
   140017a28:	jno    0x140017a7b
   140017a2a:	inc    DWORD PTR [rax]
   140017a2c:	mov    WORD PTR [rcx-0x1],?
   140017a2f:	add    BYTE PTR [rsi-0x40ff006f],ah
   140017a35:	mov    cl,0xff
   140017a37:	add    dl,bl
   140017a39:	sar    edi,1
   140017a3b:	add    bh,bh
   140017a3d:	(bad)  
   140017a3e:	inc    DWORD PTR [rax]
	...
   140017a50:	add    BYTE PTR [rax],al
   140017a52:	pop    rdi
   140017a53:	pop    rdi
   140017a54:	pop    rdi
   140017a55:	pop    rdi
   140017a56:	pop    rdi
   140017a57:	pop    rdi
   140017a58:	pop    rdi
	...
   140017a65:	rex.XB
   140017a66:	rex.XB
   140017a67:	rex.X
   140017a68:	rex.B
   140017a69:	rex.X
   140017a6a:	rex.B
   140017a6b:	add    BYTE PTR [rax],r8b
   140017a6e:	add    BYTE PTR [rax],al
   140017a70:	add    BYTE PTR [rdx+rbp*1+0x28],cl
   140017a74:	and    eax,0x26222224
   140017a79:	rex.RXB add BYTE PTR [r8],r8b
   140017a7c:	add    BYTE PTR [rax],al
   140017a7e:	add    BYTE PTR [rax],al
   140017a80:	add    BYTE PTR [rax],al
   140017a82:	add    BYTE PTR [rcx+0x42],al
   140017a85:	rex.WX
   140017a86:	rex.WB
   140017a87:	rex.WB
   140017a88:	rex.R
   140017a89:	rex.R
   140017a8a:	rex.WX
   140017a8b:	rex.XB (bad) 
   140017a8d:	(bad)  
   140017a8e:	rex.B
   140017a8f:	rex.R pop rdi
   140017a91:	sub    eax,0x25272728
   140017a96:	and    al,0x47
   140017a98:	rex.RXB and r11d,DWORD PTR [r15+0x0]
   140017a9c:	add    BYTE PTR [rax],al
   140017a9e:	add    BYTE PTR [rax],al
   140017aa0:	add    BYTE PTR [rax],al
   140017aa2:	rex.R
   140017aa3:	rex.WB
   140017aa4:	rex.WX
   140017aa5:	rex.WB
   140017aa6:	rex.WB
   140017aa7:	rex.WX
   140017aa8:	rex.WB
   140017aa9:	rex.WB
   140017aaa:	rex.WB
   140017aab:	rex.R
   140017aac:	rex.WB
   140017aad:	rex.WX
   140017aae:	rex.R
   140017aaf:	rex.R pop rdi
   140017ab1:	sub    ebp,DWORD PTR [rcx]
   140017ab3:	sub    BYTE PTR [rdi],ah
   140017ab5:	(bad)  
   140017ab6:	and    eax,0x5f204747
   140017abb:	add    BYTE PTR [rax],al
   140017abd:	add    BYTE PTR [rax],al
   140017abf:	add    BYTE PTR [rax],al
   140017ac1:	rex.WX
   140017ac2:	rex.WRB
   140017ac3:	rex.XB
   140017ac4:	rex.RB
   140017ac5:	rex.WX (bad) 
   140017ac7:	rex.B
   140017ac8:	rex.X
   140017ac9:	rex.B
   140017aca:	rex.RB
   140017acb:	rex.XB
   140017acc:	rex.B (bad) 
   140017ace:	rex.X
   140017acf:	pop    r15
   140017ad1:	sub    al,0x2b
   140017ad3:	sub    DWORD PTR [rax],ebp
   140017ad5:	(bad)  
   140017ad6:	and    eax,0x5f212225
   140017adb:	add    BYTE PTR [rax],al
   140017add:	add    BYTE PTR [rax],al
   140017adf:	add    BYTE PTR [rax],al
   140017ae1:	rex.WB
   140017ae2:	rex.WRB
   140017ae3:	rex
   140017ae4:	rex.B
   140017ae5:	rex.WX
   140017ae6:	rex.B
   140017ae7:	rex.XB
   140017ae8:	rex.R
   140017ae9:	rex.XB
   140017aea:	rex.WB
   140017aeb:	rex.R
   140017aec:	rex.WB pop r15
   140017aee:	pop    rdi
   140017aef:	pop    rdi
   140017af0:	pop    rdi
   140017af1:	cs sub al,0x2b
   140017af4:	sub    edi,DWORD PTR [rsi]
   140017af6:	pop    rdi
   140017af7:	pop    rdi
   140017af8:	pop    rdi
   140017af9:	pop    rdi
   140017afa:	pop    rdi
   140017afb:	pop    rdi
   140017afc:	pop    rdi
   140017afd:	pop    rdi
   140017afe:	add    BYTE PTR [rax],al
   140017b00:	add    BYTE PTR [rdx+0x4d],cl
   140017b03:	rex.WX
   140017b04:	rex.WX
   140017b05:	rex.WX
   140017b06:	rex.WX
   140017b07:	rex.WX
   140017b08:	rex.WX
   140017b09:	rex.WX
   140017b0a:	rex.WX
   140017b0b:	rex.WX
   140017b0c:	rex.RX sbb r11d,DWORD PTR [rax]
   140017b0f:	(bad)  
   140017b10:	pop    rdi
   140017b11:	cs cs sub al,0x2b
   140017b15:	sub    DWORD PTR [rax],ebp
   140017b17:	(bad)  
   140017b18:	and    eax,0x20212224
   140017b1d:	and    eax,DWORD PTR [rdi+0x0]
   140017b20:	add    BYTE PTR [rcx+0x4d],cl
   140017b23:	rex.XB
   140017b24:	rex.RB
   140017b25:	rex.WX
   140017b26:	rex.WX
   140017b27:	rex.WX
   140017b28:	rex.WB (bad) 
   140017b2a:	rex.WX pop rdi
   140017b2c:	sbb    eax,0x5f181913
   140017b31:	cs cs cs sub al,0x2b
   140017b36:	sub    BYTE PTR [rax],ch
   140017b38:	(bad)  
   140017b39:	and    eax,0x20212224
   140017b3e:	es pop rdi
   140017b40:	add    BYTE PTR [rdx+0x4d],cl
   140017b43:	(bad)  
   140017b44:	rex.B
   140017b45:	rex.WX
   140017b46:	rex.WX
   140017b47:	rex.WX
   140017b48:	rex.WX
   140017b49:	rex.XB
   140017b4a:	rex.WX pop rdi
   140017b4c:	sbb    edx,DWORD PTR [rbx]
   140017b4e:	adc    ebx,DWORD PTR [rcx]
   140017b50:	pop    rdi
   140017b51:	cs cs cs sub al,0x2b
   140017b56:	sub    DWORD PTR [rax],ebp
   140017b58:	(bad)  
   140017b59:	(bad)  
   140017b5a:	and    eax,0x20202224
   140017b5f:	pop    rdi
   140017b60:	add    BYTE PTR [rcx+0x4d],cl
   140017b63:	rex.WX
   140017b64:	rex.WX
   140017b65:	rex.WX
   140017b66:	rex.WX
   140017b67:	rex.WX
   140017b68:	rex.WX
   140017b69:	rex.WX
   140017b6a:	rex.WX pop rdi
   140017b6c:	adc    eax,0x4b131314
   140017b71:	cmp    eax,0x2c2e2e2e
   140017b76:	sub    ebp,DWORD PTR [rbx]
   140017b78:	sub    BYTE PTR [rdi],ah
   140017b7a:	(bad)  
   140017b7b:	and    eax,0x5f202124
   140017b80:	add    BYTE PTR [rdx+0x4d],cl
   140017b83:	rex.XB
   140017b84:	rex.R
   140017b85:	rex.WX
   140017b86:	rex.WX
   140017b87:	rex.WX
   140017b88:	rex.WX
   140017b89:	rex.B
   140017b8a:	rex.WX pop rdi
   140017b8c:	adc    eax,0x1d131414
   140017b91:	rex.WXB pop r15
   140017b93:	pop    rdi
   140017b94:	pop    rdi
   140017b95:	pop    rdi
   140017b96:	pop    rdi
   140017b97:	pop    rdi
   140017b98:	pop    rdi
   140017b99:	rex.WR sub r12b,BYTE PTR [rip+0x5f212224]        # 0x19f229dc4
   140017ba0:	add    BYTE PTR [rcx+0x5f],cl
   140017ba3:	(bad)  
   140017ba4:	rex.B
   140017ba5:	rex.WRB
   140017ba6:	rex.WRX
   140017ba7:	rex.WX
   140017ba8:	rex.WX
   140017ba9:	rex.RB
   140017baa:	rex.WX pop rdi
   140017bac:	sbb    dl,BYTE PTR [rip+0x19131314]        # 0x159148ec6
   140017bb2:	sbb    BYTE PTR [rdi],dl
   140017bb4:	(bad)  
   140017bb5:	(bad)  
   140017bb6:	or     al,0xc
   140017bb8:	or     al,0x1c
   140017bba:	rex.WR (bad) 
   140017bbc:	and    eax,0x5f2224
   140017bc1:	rex.WB pop r15
   140017bc3:	rex.WRB
   140017bc4:	rex.WRB
   140017bc5:	rex.WRB
   140017bc6:	rex.WRB
   140017bc7:	rex.WRB
   140017bc8:	rex.WRB
   140017bc9:	rex.WX
   140017bca:	rex.WX pop rdi
   140017bcc:	sbb    bl,BYTE PTR [rdx]
   140017bce:	adc    eax,0x19131314
   140017bd3:	sbb    BYTE PTR [rdi],dl
   140017bd5:	(bad)  
   140017bd6:	(bad)  
   140017bd7:	or     al,0xc
   140017bd9:	or     al,0x5f
   140017bdb:	sub    BYTE PTR [rdi],ah
   140017bdd:	and    eax,0x49005f25
   140017be2:	pop    rdi
   140017be3:	rex.XB
   140017be4:	rex.RB
   140017be5:	rex.WRB
   140017be6:	rex.WB
   140017be7:	rex.WX
   140017be8:	rex.WX
   140017be9:	rex.WRB
   140017bea:	rex.RB
   140017beb:	rex.WRB (bad) 
   140017bed:	sbb    bl,BYTE PTR [rdx]
   140017bef:	adc    eax,0x19131314
   140017bf4:	sbb    BYTE PTR [rdi],dl
   140017bf6:	(bad)  
   140017bf7:	(bad)  
   140017bf8:	or     al,0xc
   140017bfa:	pop    rdi
   140017bfb:	sub    BYTE PTR [rdi],ah
   140017bfd:	(bad)  
   140017bfe:	sub    bl,BYTE PTR [rdi+0x0]
   140017c01:	rex.WB pop r15
   140017c03:	(bad)  
   140017c04:	rex.X
   140017c05:	rex.WRB
   140017c06:	rex.R
   140017c07:	rex.WX
   140017c08:	rex.RB
   140017c09:	rex.WRB
   140017c0a:	rex.R
   140017c0b:	rex.WRB
   140017c0c:	rex.RX (bad) 
   140017c0e:	sbb    dl,BYTE PTR [rip+0x13131415]        # 0x153149029
   140017c14:	sbb    DWORD PTR [rax],ebx
   140017c16:	(bad)  
   140017c17:	(bad)  
   140017c18:	or     al,0xc
   140017c1a:	pop    rdi
   140017c1b:	sub    DWORD PTR [rax],ebp
   140017c1d:	sub    eax,0x4900004c
   140017c22:	pop    rdi
   140017c23:	rex.WRB
   140017c24:	rex.WRB
   140017c25:	rex.WRB
   140017c26:	rex.XB
   140017c27:	rex.WRB
   140017c28:	rex.WRB
   140017c29:	rex.WRB
   140017c2a:	rex.WRB
   140017c2b:	rex.WRB pop r15
   140017c2d:	pop    rdi
   140017c2e:	pop    rdi
   140017c2f:	pop    rdi
   140017c30:	pop    rdi
   140017c31:	pop    rdi
   140017c32:	pop    rdi
   140017c33:	pop    rdi
   140017c34:	pop    rdi
   140017c35:	cmp    al,0x18
   140017c37:	(bad)  
   140017c38:	(bad)  
   140017c39:	or     al,0x5f
   140017c3b:	pop    rdi
   140017c3c:	pop    rdi
   140017c3d:	pop    rdi
   140017c3e:	add    BYTE PTR [rax],al
   140017c40:	add    BYTE PTR [rcx+0x5f],cl
   140017c43:	rex.XB
   140017c44:	rex.RB
   140017c45:	xor    QWORD PTR [r11],r15
   140017c48:	rex.WRB
   140017c49:	rex.B
   140017c4a:	rex.XB
   140017c4b:	rex.R
   140017c4c:	rex.WRB
   140017c4d:	rex.RB
   140017c4e:	rex.WX
   140017c4f:	rex.WRB pop r15
   140017c51:	adc    eax,0x19131414
   140017c56:	sbb    BYTE PTR [rdi],dl
   140017c58:	(bad)  
   140017c59:	(bad)  
   140017c5a:	pop    rdi
   140017c5b:	add    BYTE PTR [rax],al
   140017c5d:	add    BYTE PTR [rax],al
   140017c5f:	add    BYTE PTR [rax],al
   140017c61:	rex.WB pop r15
   140017c63:	(bad)  
   140017c64:	pop    r15
   140017c66:	xor    DWORD PTR [rax+0x49],r8d
   140017c6a:	rex.WX
   140017c6b:	rex.WX
   140017c6c:	rex.WRB
   140017c6d:	rex.WX
   140017c6e:	rex.WRB
   140017c6f:	rex.WRB pop r15
   140017c71:	sbb    al,BYTE PTR [rsi+0x46]
   140017c74:	adc    edx,DWORD PTR [rbx]
   140017c76:	adc    ebx,DWORD PTR [rax]
   140017c78:	(bad)  
   140017c79:	(bad)  
   140017c7a:	pop    rdi
   140017c7b:	add    BYTE PTR [rax],al
   140017c7d:	add    BYTE PTR [rax],al
   140017c7f:	add    BYTE PTR [rax],al
   140017c81:	rex.WB pop r15
   140017c83:	pop    rdi
   140017c84:	ss (bad) 
   140017c86:	pop    rdi
   140017c87:	rex (bad) 
   140017c89:	rex.RB
   140017c8a:	rex.WRB
   140017c8b:	rex.WRB
   140017c8c:	rex.WRB
   140017c8d:	rex.WRX
   140017c8e:	rex.WRB
   140017c8f:	rex.WRB pop r15
   140017c91:	(bad)  
   140017c92:	rex.RX
   140017c93:	rex.RX adc al,0x13
   140017c96:	adc    ebx,DWORD PTR [rcx]
   140017c98:	sbb    BYTE PTR [rdi+rbx*2],bl
   140017c9b:	add    BYTE PTR [rax],al
   140017c9d:	add    BYTE PTR [rax],al
   140017c9f:	add    BYTE PTR [rax],al
   140017ca1:	rex.WB pop r15
   140017ca3:	rex.XB syscall 
   140017ca6:	(bad)  
   140017ca9:	xor    BYTE PTR [rbp+0x4a],al
   140017cac:	rex.R
   140017cad:	rex.WRB
   140017cae:	rex.WX
   140017caf:	rex.XB
   140017cb0:	rex.WX
   140017cb1:	rex.RX (bad) 
   140017cb3:	sbb    dl,BYTE PTR [rip+0x1d131314]        # 0x15d148fcd
   140017cb9:	rex.RX add BYTE PTR [rax],r8b
   140017cbc:	add    BYTE PTR [rax],al
   140017cbe:	add    BYTE PTR [rax],al
   140017cc0:	add    BYTE PTR [rdi],bh
   140017cc2:	cmp    al,BYTE PTR [rcx+0x41]
   140017cc5:	xor    al,BYTE PTR [rbx]
   140017cc7:	syscall 
   140017cc9:	xor    BYTE PTR [rdi],bh
   140017ccb:	pop    rdi
   140017ccc:	rex.WRB pop r15
   140017cce:	rex.WRB
   140017ccf:	rex.WB
   140017cd0:	rex.RB
   140017cd1:	rex.WRB pop r15
   140017cd3:	pop    rdi
   140017cd4:	pop    rdi
   140017cd5:	pop    rdi
   140017cd6:	pop    rdi
   140017cd7:	pop    rdi
   140017cd8:	rex.WRB add BYTE PTR [r8],r8b
   140017cdb:	add    BYTE PTR [rax],al
   140017cdd:	add    BYTE PTR [rax],al
   140017cdf:	add    BYTE PTR [rax],al
   140017ce1:	rex.WB
   140017ce2:	rex.XB xor al,0x42
   140017ce5:	rex.XB (bad) 
   140017ce7:	add    al,0x1
   140017ce9:	or     cl,BYTE PTR [rsi+0x5f]
   140017cec:	pop    rdi
   140017ced:	pop    rdi
   140017cee:	pop    rdi
   140017cef:	pop    rdi
   140017cf0:	pop    rdi
   140017cf1:	rex.WRB
   140017cf2:	rex.WRB
   140017cf3:	rex.WRB
   140017cf4:	rex.WRB
   140017cf5:	rex.WX
   140017cf6:	rex.WB
   140017cf7:	rex.R
   140017cf8:	add    BYTE PTR [r8],al
   140017cfb:	add    BYTE PTR [rax],al
   140017cfd:	add    BYTE PTR [rax],al
   140017cff:	add    BYTE PTR [rax],al
   140017d01:	rex.WB pop r15
   140017d03:	cmp    DWORD PTR [rdi],ebp
   140017d05:	adc    BYTE PTR [rcx],cl
   140017d07:	(bad)  
   140017d08:	add    DWORD PTR [rcx],eax
   140017d0a:	adc    DWORD PTR [rax+0x4a],ecx
   140017d0d:	rex.WX
   140017d0e:	rex.WRB
   140017d0f:	rex.WRB
   140017d10:	rex.WX
   140017d11:	rex.WRB
   140017d12:	rex.WRB
   140017d13:	rex.WRB
   140017d14:	rex.WX (bad) 
   140017d16:	(bad)  
   140017d17:	rex.X
   140017d18:	add    BYTE PTR [r8],al
   140017d1b:	add    BYTE PTR [rax],al
   140017d1d:	add    BYTE PTR [rax],al
   140017d1f:	add    BYTE PTR [rax],al
   140017d21:	rex.WB pop r15
   140017d23:	rex.B (bad) 
   140017d25:	xor    eax,0x3093330
   140017d2a:	or     BYTE PTR [rdx],dl
   140017d2c:	rex.WB
   140017d2d:	rex.WX
   140017d2e:	rex.WRB
   140017d2f:	rex.WRB
   140017d30:	rex.XB
   140017d31:	rex.X
   140017d32:	rex.XB
   140017d33:	rex.X
   140017d34:	rex.B xor al,0x34
   140017d37:	rex.XB
   140017d38:	rex.XB add BYTE PTR [r8],al
   140017d3b:	add    BYTE PTR [rax],al
   140017d3d:	add    BYTE PTR [rax],al
   140017d3f:	add    BYTE PTR [rax],al
   140017d41:	rex.WB pop r15
   140017d43:	pop    rdi
   140017d44:	pop    rdi
   140017d45:	rex.X
   140017d46:	rex.B
   140017d47:	rex.WRXB cmp r9,QWORD PTR [r14]
   140017d4a:	(bad)  
   140017d4b:	add    eax,0x5f5f5f36
   140017d50:	rex.XB pop r15
   140017d52:	rex.WRB
   140017d53:	rex.WX
   140017d54:	rex.WB
   140017d55:	rex.R
   140017d56:	rex.WB
   140017d57:	rex.R
   140017d58:	rex.WRB add BYTE PTR [r8],r8b
   140017d5b:	add    BYTE PTR [rax],al
   140017d5d:	add    BYTE PTR [rax],al
   140017d5f:	add    BYTE PTR [rax],al
   140017d61:	rex.WB pop r15
   140017d63:	rex.XB
   140017d64:	rex.WB pop r15
   140017d66:	pop    rdi
   140017d67:	pop    rdi
   140017d68:	rex.WRXB cmp r9,QWORD PTR [rip+0x5f400702]        # 0x19f418471
   140017d6f:	pop    rdi
   140017d70:	rex.XB pop r15
   140017d72:	rex.XB (bad) 
   140017d74:	rex.WX (bad) 
   140017d76:	rex.B
   140017d77:	rex.WX add BYTE PTR [rax],al
   140017d7a:	add    BYTE PTR [rax],al
   140017d7c:	add    BYTE PTR [rax],al
   140017d7e:	add    BYTE PTR [rax],al
   140017d80:	add    BYTE PTR [rcx+0x5f],cl
   140017d83:	(bad)  
   140017d84:	pop    r15
   140017d86:	rex.R
   140017d87:	rex.WX
   140017d88:	rex.WX
   140017d89:	rex.WB
   140017d8a:	rex or edx,DWORD PTR [rcx]
   140017d8d:	(bad)  
   140017d8e:	rex.WRXB pop r15
   140017d90:	rex.XB
   140017d91:	rex.WRB (bad) 
   140017d93:	cmp    ecx,DWORD PTR [rcx+0x3f]
   140017d96:	rex.WX add BYTE PTR [rax],al
	...
   140017da1:	rex.WB pop r15
   140017da3:	pop    rdi
   140017da4:	pop    rdi
   140017da5:	pop    rdi
   140017da6:	pop    rdi
   140017da7:	pop    rdi
   140017da8:	pop    rdi
   140017da9:	pop    rdi
   140017daa:	pop    rdi
   140017dab:	rex.W adc BYTE PTR [rcx],dl
   140017dae:	cmp    DWORD PTR [rbp+0x41],ecx
   140017db1:	rex.WB
   140017db2:	rex.WX
   140017db3:	rex.WX
   140017db4:	rex.WB
   140017db5:	rex.WX add BYTE PTR [rax],al
	...
   140017dc0:	add    BYTE PTR [rcx+0x5f],cl
   140017dc3:	rex.XB
   140017dc4:	rex.R pop rdi
   140017dc6:	pop    rdi
   140017dc7:	pop    rdi
   140017dc8:	pop    rdi
   140017dc9:	pop    rdi
   140017dca:	rex.WX
   140017dcb:	rex.WX
   140017dcc:	rex.WB (bad) 
   140017dce:	xor    eax,DWORD PTR [rbx+0x3b]
   140017dd1:	rex.WB
   140017dd2:	rex.WX
   140017dd3:	rex.WB
   140017dd4:	rex.WX add BYTE PTR [rax],al
	...
   140017ddf:	add    BYTE PTR [rax],al
   140017de1:	rex.WB pop r15
   140017de3:	(bad)  
   140017de4:	rex.B
   140017de5:	rex.WRB
   140017de6:	rex.R
   140017de7:	rex.WX
   140017de8:	rex.WX
   140017de9:	rex.R
   140017dea:	rex.WB
   140017deb:	rex.WRB
   140017dec:	rex.WX
   140017ded:	rex.WB
   140017dee:	rex.RB xor eax,0x4a494a3a
	...
   140017e00:	add    BYTE PTR [rcx+0x5f],cl
   140017e03:	pop    rdi
   140017e04:	pop    rdi
   140017e05:	pop    rdi
   140017e06:	pop    rdi
   140017e07:	pop    rdi
   140017e08:	pop    rdi
   140017e09:	pop    rdi
   140017e0a:	pop    rdi
   140017e0b:	pop    rdi
   140017e0c:	rex.WRB
   140017e0d:	rex.WRB
   140017e0e:	rex.WB
   140017e0f:	cmp    cl,BYTE PTR [r9+0x4a]
	...
   140017e1f:	add    BYTE PTR [rax],al
   140017e21:	rex.WX
   140017e22:	rex.WX
   140017e23:	rex.WX
   140017e24:	rex.WX
   140017e25:	rex.WX
   140017e26:	rex.WX
   140017e27:	rex.WX
   140017e28:	rex.WX
   140017e29:	rex.WX
   140017e2a:	rex.WX
   140017e2b:	rex.WX
   140017e2c:	rex.WX
   140017e2d:	rex.WX
   140017e2e:	rex.WX
   140017e2f:	rex.WX
   140017e30:	rex.WRB
   140017e31:	rex.WX add BYTE PTR [rax],al
	...
   140017e40:	(bad)  
   140017e41:	inc    eax
   140017e43:	jg     0x140017e3d
   140017e45:	jo     0x140025e8a
   140017e4b:	(bad)  
   140017e4c:	rol    BYTE PTR [rax],0x0
   140017e4f:	(bad)  
   140017e50:	add    BYTE PTR [rax],0x0
   140017e53:	(bad)  
   140017e54:	add    BYTE PTR [rax],0x0
   140017e57:	add    eax,DWORD PTR [rax-0x7fff0000]
   140017e5d:	add    BYTE PTR [rax],al
   140017e5f:	add    BYTE PTR [rax-0x80000000],al
   140017e65:	add    BYTE PTR [rax],al
   140017e67:	add    BYTE PTR [rax-0x80000000],al
   140017e6d:	add    BYTE PTR [rax],al
   140017e6f:	add    BYTE PTR [rax-0x80000000],al
   140017e75:	add    BYTE PTR [rax],al
   140017e77:	add    BYTE PTR [rax-0x7fff0000],al
   140017e7d:	add    BYTE PTR [rax],al
   140017e7f:	add    eax,DWORD PTR [rax-0x7fe10000]
   140017e85:	add    BYTE PTR [rax],al
   140017e87:	(bad)  
   140017e88:	add    BYTE PTR [rax],0x0
   140017e8b:	(bad)  
   140017e8c:	add    BYTE PTR [rax],0x0
   140017e8f:	(bad)  
   140017e90:	add    BYTE PTR [rax],0x0
   140017e93:	jg     0x140017e15
   140017e95:	add    BYTE PTR [rax],al
   140017e97:	jg     0x140017e19
   140017e99:	add    BYTE PTR [rax],al
   140017e9b:	jg     0x140017e1d
   140017e9d:	add    BYTE PTR [rax],al
   140017e9f:	jg     0x140017e21
   140017ea1:	add    BYTE PTR [rax],al
   140017ea3:	jg     0x140017e25
   140017ea5:	add    BYTE PTR [rax],al
   140017ea7:	inc    DWORD PTR [rax-0x7f00ff00]
   140017ead:	add    BYTE PTR [rbx],al
   140017eaf:	inc    DWORD PTR [rax-0x7f00f900]
   140017eb5:	add    BYTE PTR [rdi],cl
   140017eb7:	inc    DWORD PTR [rax-0x7f00e100]
   140017ebd:	add    BYTE PTR [rdi],bh
   140017ebf:	jmp    FWORD PTR [rax]
   140017ec1:	add    BYTE PTR [rax],al
   140017ec3:	add    BYTE PTR [rax],dl
   140017ec5:	add    BYTE PTR [rax],al
   140017ec7:	add    BYTE PTR [rax],ah
   140017ec9:	add    BYTE PTR [rax],al
   140017ecb:	add    BYTE PTR [rcx],al
   140017ecd:	add    BYTE PTR [rax],cl
	...
   140017eeb:	add    BYTE PTR [rsp+rsi*1],dh
   140017eee:	xor    al,0x0
   140017ef0:	rex.WRB
   140017ef1:	rex.WRB
   140017ef2:	rex.WRB add BYTE PTR [r10+0x52],r10b
   140017ef6:	push   rdx
   140017ef7:	add    BYTE PTR [rcx+0x59],bl
   140017efa:	pop    rcx
   140017efb:	add    BYTE PTR [rsi+0x65],bh
   140017efe:	rex.RXB add BYTE PTR [r13+0x75],r14b
   140017f02:	jne    0x140017f04
   140017f04:	jge    0x140017f83
   140017f06:	jge    0x140017f08
   140017f08:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017f09:	js     0x140017f49
   140017f0b:	add    BYTE PTR [rax-0x67ffba97],cl
   140017f11:	jb     0x140017f56
   140017f13:	add    BYTE PTR [rdx+rax*4-0x654fffbb],dh
   140017f1a:	jle    0x140017f1c
   140017f1c:	(bad)  
   140017f1d:	enter  0xff,0x3f
   140017f21:	sar    edi,1
   140017f23:	add    BYTE PTR [rax-0x29],cl
   140017f26:	inc    DWORD PTR [rax]
   140017f28:	push   rsi
   140017f29:	loop   0x140017f2a
   140017f2b:	add    BYTE PTR [rdx-0x14],ah
   140017f2e:	inc    DWORD PTR [rax]
   140017f30:	js     0x140017f14
   140017f32:	inc    DWORD PTR [rax]
   140017f34:	xchg   esi,eax
   140017f35:	xchg   esi,eax
   140017f36:	xchg   esi,eax
   140017f37:	add    BYTE PTR [rbx-0x62ff6465],bl
   140017f3d:	popf   
   140017f3e:	popf   
   140017f3f:	add    BYTE PTR [rcx-0x5bff5e5f],ah
   140017f45:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017f46:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017f47:	add    BYTE PTR [rdx-0x4cff5556],ch
   140017f4d:	mov    bl,0xb3
   140017f4f:	add    BYTE PTR [rsp+rsi*4-0x4545ff4c],dh
   140017f56:	mov    edx,0xbcbcbc00
   140017f5b:	add    ch,dl
   140017f5d:	shl    BYTE PTR [rdi-0x186500],0x0
   140017f64:	mov    al,0xf0
   140017f66:	inc    DWORD PTR [rax]
   140017f68:	(bad)  
   140017f69:	(bad)  
   140017f6a:	(bad)  
   140017f6b:	add    dh,cl
   140017f6d:	(bad)  
   140017f6e:	(bad)  
   140017f6f:	add    ch,bl
   140017f71:	fstp   st(5)
   140017f73:	add    ah,ah
   140017f75:	loop   0x140017f56
   140017f77:	add    dl,ah
   140017f79:	loop   0x140017f5d
   140017f7b:	add    ah,ah
   140017f7d:	in     al,0xe4
   140017f7f:	add    bl,ch
   140017f81:	jmp    0x140017f6e
   140017f83:	add    ah,ch
   140017f85:	in     al,dx
   140017f86:	in     al,dx
   140017f87:	add    dl,dh
   140017f89:	icebp  
   140017f8a:	out    dx,eax
   140017f8b:	add    bl,ah
   140017f8d:	stc    
   140017f8e:	inc    DWORD PTR [rax]
   140017f90:	cmc    
   140017f91:	cmc    
   140017f92:	cmc    
   140017f93:	add    ch,bh
   140017f95:	std    
   140017f96:	std    
   140017f97:	add    BYTE PTR [rcx-0x4eff0009],dl
   140017f9d:	stc    
   140017f9e:	inc    DWORD PTR [rax]
   140017fa0:	sar    ebx,1
   140017fa2:	inc    DWORD PTR [rax]
   140017fa4:	(bad)  
   140017fa5:	(bad)  
   140017fa6:	inc    DWORD PTR [rax]
   140017fa8:	add    BYTE PTR [rax],al
   140017faa:	add    BYTE PTR [rax],al
   140017fac:	add    BYTE PTR [rdi],ch
   140017fae:	and    DWORD PTR [rax],eax
   140017fb0:	add    BYTE PTR [rax+0x37],dl
   140017fb3:	add    BYTE PTR [rax],al
   140017fb5:	jo     0x140018003
   140017fb7:	add    BYTE PTR [rax],al
   140017fb9:	nop
   140017fba:	movsxd eax,DWORD PTR [rax]
   140017fbc:	add    BYTE PTR [rax-0x30ffff87],dh
   140017fc2:	pop    QWORD PTR [rax]
   140017fc4:	add    al,dh
   140017fc6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017fc7:	add    BYTE PTR [rcx],dl
   140017fc9:	push   QWORD PTR [rax+rax*1+0xbeff31]
   140017fd0:	push   rcx
   140017fd1:	dec    eax
   140017fd3:	add    BYTE PTR [rcx-0x1],dh
   140017fd6:	rol    DWORD PTR [rax],cl
   140017fd8:	xchg   ecx,eax
   140017fd9:	(bad)  
   140017fda:	fadd   QWORD PTR [rax]
   140017fdc:	mov    cl,0xff
   140017fde:	in     eax,0x0
   140017fe0:	sar    edi,1
   140017fe2:	lock add bh,bh
   140017fe5:	(bad)  
   140017fe6:	inc    DWORD PTR [rax]
   140017fe8:	add    BYTE PTR [rax],al
   140017fea:	add    BYTE PTR [rax],al
   140017fec:	add    BYTE PTR [rdi],ch
   140017fee:	(bad)  
   140017fef:	add    BYTE PTR [rax],al
   140017ff1:	push   rax
   140017ff2:	sbb    BYTE PTR [rax],al
   140017ff4:	add    BYTE PTR [rax+0x22],dh
   140017ff7:	add    BYTE PTR [rax],al
   140017ff9:	nop
   140017ffa:	sub    al,0x0
   140017ffc:	add    BYTE PTR [rax-0x30ffffca],dh
   140018002:	add    BYTE PTR [rax],al
   140018005:	lock rex.WX add BYTE PTR [rcx],dl
   140018009:	call   FWORD PTR [rbx+0x0]
   14001800c:	xor    edi,edi
   14001800e:	jno    0x140018010
   140018010:	push   rcx
   140018011:	inc    DWORD PTR [rdi-0x62008f00]
   140018017:	add    BYTE PTR [rcx-0x4eff4d01],dl
   14001801d:	dec    ecx
   14001801f:	add    cl,dl
   140018021:	(bad)  
   140018022:	fild   WORD PTR [rax]
   140018024:	(bad)  
   140018025:	(bad)  
   140018026:	inc    DWORD PTR [rax]
   140018028:	add    BYTE PTR [rax],al
   14001802a:	add    BYTE PTR [rax],al
   14001802c:	add    ch,BYTE PTR [rdi]
   14001802e:	add    BYTE PTR [rax],al
   140018030:	add    al,0x50
   140018032:	add    BYTE PTR [rax],al
   140018034:	(bad)  
   140018035:	jo     0x140018037
   140018037:	add    BYTE PTR [rax],cl
   140018039:	nop
   14001803a:	add    BYTE PTR [rax],al
   14001803c:	or     dh,BYTE PTR [rax-0x30f50000]
   140018042:	add    BYTE PTR [rax],al
   140018044:	(bad)  
   140018045:	lock add BYTE PTR [rax],al
   140018048:	and    bh,bh
   14001804a:	adc    al,BYTE PTR [rax]
   14001804c:	cmp    eax,0x5b0031ff
   140018051:	call   QWORD PTR [rcx+0x0]
   140018054:	jns    0x140018055
   140018056:	jno    0x140018058
   140018058:	cwde   
   140018059:	call   QWORD PTR [rcx-0x4e004b00]
   14001805f:	add    ah,dl
   140018061:	call   rcx
   140018063:	add    bh,bh
   140018065:	(bad)  
   140018066:	inc    DWORD PTR [rax]
   140018068:	add    BYTE PTR [rax],al
   14001806a:	add    BYTE PTR [rax],al
   14001806c:	adc    al,0x2f
   14001806e:	add    BYTE PTR [rax],al
   140018070:	and    dl,BYTE PTR [rax+0x0]
   140018073:	add    BYTE PTR [rax],dh
   140018075:	jo     0x140018077
   140018077:	add    BYTE PTR [rip+0x4c000090],bh        # 0x18c01810d
   14001807d:	mov    al,0x0
   14001807f:	add    BYTE PTR [rcx-0x31],bl
   140018082:	add    BYTE PTR [rax],al
   140018084:	lock add BYTE PTR [eax],al
   140018088:	js     0x140018089
   14001808a:	adc    DWORD PTR [rax],eax
   14001808c:	mov    bh,bh
   14001808e:	xor    DWORD PTR [rax],eax
   140018090:	pushf  
   140018091:	call   QWORD PTR [rcx+0x0]
   140018094:	scas   al,BYTE PTR es:[rdi]
   140018095:	push   QWORD PTR [rcx+0x0]
   140018098:	sar    bh,0x91
   14001809b:	add    dl,dl
   14001809d:	push   QWORD PTR [rcx-0x2e001c00]
   1400180a3:	add    bh,bh
   1400180a5:	(bad)  
   1400180a6:	inc    DWORD PTR [rax]
   1400180a8:	add    BYTE PTR [rax],al
   1400180aa:	add    BYTE PTR [rax],al
   1400180ac:	es (bad) 
   1400180ae:	add    BYTE PTR [rax],al
   1400180b0:	rex push rax
   1400180b2:	add    BYTE PTR [rax],al
   1400180b4:	pop    rdx
   1400180b5:	jo     0x1400180b7
   1400180b7:	add    BYTE PTR [rax+rdx*4+0x0],dh
   1400180bb:	add    BYTE PTR [rsi-0x56ffff50],cl
   1400180c1:	iret   
   1400180c2:	add    BYTE PTR [rax],al
   1400180c4:	ret    0xf0
   1400180c7:	add    cl,dl
   1400180c9:	call   QWORD PTR [rcx]
   1400180cb:	add    al,bl
   1400180cd:	push   QWORD PTR [rcx]
   1400180cf:	add    dh,bl
   1400180d1:	call   QWORD PTR [rcx+0x0]
   1400180d4:	jrcxz  0x1400180d5
   1400180d6:	jno    0x1400180d8
   1400180d8:	jmp    0x12f0212dc
   1400180dd:	push   QWORD PTR [rcx-0x2e000a00]
   1400180e3:	add    bh,bh
   1400180e5:	(bad)  
   1400180e6:	inc    DWORD PTR [rax]
   1400180e8:	add    BYTE PTR [rax],al
   1400180ea:	add    BYTE PTR [rax],al
   1400180ec:	(bad)  
   1400180ed:	add    BYTE PTR es:[rax],al
   1400180f0:	push   rax
   1400180f1:	add    BYTE PTR [r8],al
   1400180f4:	jo     0x140018151
   1400180f6:	add    BYTE PTR [rax],al
   1400180f8:	nop
   1400180f9:	je     0x1400180fb
   1400180fb:	add    BYTE PTR [rax-0x30ffff72],dh
   140018101:	test   eax,0xc3f00000
   140018106:	add    BYTE PTR [rax],al
   140018108:	call   rdx
   14001810a:	adc    DWORD PTR [rax],eax
   14001810c:	(bad)  
   14001810d:	fdiv   DWORD PTR [rcx]
   14001810f:	add    bh,bh
   140018111:	fst    QWORD PTR [rcx+0x0]
   140018114:	jmp    rsp
   140018116:	jno    0x140018118
   140018118:	(bad)  
   140018119:	(bad)  
   14001811a:	xchg   ecx,eax
   14001811b:	add    bh,bh
   14001811d:	lock mov cl,0x0
   140018120:	push   rsi
   140018122:	rol    DWORD PTR [rax],1
   140018124:	(bad)  
   140018125:	(bad)  
   140018126:	inc    DWORD PTR [rax]
   140018128:	add    BYTE PTR [rax],al
   14001812a:	add    BYTE PTR [rax],al
   14001812c:	(bad)  
   14001812d:	adc    al,0x0
   14001812f:	add    BYTE PTR [rax+0x22],dl
   140018132:	add    BYTE PTR [rax],al
   140018134:	jo     0x140018166
   140018136:	add    BYTE PTR [rax],al
   140018138:	nop
   140018139:	add    BYTE PTR ds:[rax],al
   14001813c:	mov    al,0x4d
   14001813e:	add    BYTE PTR [rax],al
   140018140:	iret   
   140018141:	pop    rbx
   140018142:	add    BYTE PTR [rax],al
   140018144:	lock imul eax,DWORD PTR [rax],0x1179ff00
   14001814b:	add    bh,bh
   14001814d:	mov    dh,BYTE PTR [rcx]
   14001814f:	add    bh,bh
   140018151:	popf   
   140018152:	push   rcx
   140018153:	add    bh,bh
   140018155:	scas   eax,DWORD PTR es:[rdi]
   140018156:	jno    0x140018158
   140018158:	inc    ecx
   14001815a:	xchg   ecx,eax
   14001815b:	add    bh,bh
   14001815d:	shl    BYTE PTR [rcx-0x2e1a0100],cl
   140018163:	add    bh,bh
   140018165:	(bad)  
   140018166:	inc    DWORD PTR [rax]
   140018168:	add    BYTE PTR [rax],al
   14001816a:	add    BYTE PTR [rax],al
   14001816c:	(bad)  
   14001816d:	add    eax,DWORD PTR [rax]
   14001816f:	add    BYTE PTR [rax+0x4],dl
   140018172:	add    BYTE PTR [rax],al
   140018174:	jo     0x14001817c
   140018176:	add    BYTE PTR [rax],al
   140018178:	nop
   140018179:	or     DWORD PTR [rax],eax
   14001817b:	add    BYTE PTR [rax-0x30fffff6],dh
   140018181:	or     al,0x0
   140018183:	add    al,dh
   140018185:	(bad)  
   140018186:	add    BYTE PTR [rax],al
   140018188:	jmp    QWORD PTR [rax]
   14001818a:	adc    al,BYTE PTR [rax]
   14001818c:	(bad)  
   14001818d:	xor    DWORD PTR ds:[rax],eax
   140018190:	call   FWORD PTR [rcx+rdx*2+0x0]
   140018194:	(bad)  
   140018195:	jp     0x140018208
   140018197:	add    bh,bh
   140018199:	xchg   edi,eax
   14001819a:	xchg   ecx,eax
   14001819b:	add    bh,bh
   14001819d:	mov    dh,0xb1
   14001819f:	add    bh,bh
   1400181a1:	(bad)  
   1400181a2:	rol    DWORD PTR [rax],1
   1400181a4:	(bad)  
   1400181a5:	(bad)  
   1400181a6:	inc    DWORD PTR [rax]
   1400181a8:	add    BYTE PTR [rax],al
   1400181aa:	add    BYTE PTR [rax],al
   1400181ac:	(bad)  
   1400181ad:	add    BYTE PTR [rsi],cl
   1400181af:	add    BYTE PTR [rax+0x0],dl
   1400181b2:	(bad)  
   1400181b3:	add    BYTE PTR [rax+0x0],dh
   1400181b6:	and    DWORD PTR [rax],eax
   1400181b8:	nop
   1400181b9:	add    BYTE PTR [rbx],ch
   1400181bb:	add    BYTE PTR [rax-0x30ffca00],dh
   1400181c1:	add    BYTE PTR [rax+0x0],al
   1400181c4:	lock add BYTE PTR [rcx+0x0],cl
   1400181c8:	call   QWORD PTR [rcx]
   1400181ca:	pop    rdx
   1400181cb:	add    bh,bh
   1400181cd:	xor    DWORD PTR [rax+0x0],esi
   1400181d0:	call   QWORD PTR [rcx-0x7a]
   1400181d3:	add    bh,bh
   1400181d5:	jno    0x140018173
   1400181d7:	add    bh,bh
   1400181d9:	xchg   ecx,eax
   1400181da:	mov    dl,0x0
   1400181dc:	push   QWORD PTR [rcx-0x2e00ff38]
   1400181e2:	fild   WORD PTR [rax]
   1400181e4:	(bad)  
   1400181e5:	(bad)  
   1400181e6:	inc    DWORD PTR [rax]
   1400181e8:	add    BYTE PTR [rax],al
   1400181ea:	add    BYTE PTR [rax],al
   1400181ec:	(bad)  
   1400181ed:	add    BYTE PTR [rax],ah
   1400181ef:	add    BYTE PTR [rax+0x0],dl
   1400181f2:	add    BYTE PTR ss:[rax+0x0],dh
   1400181f6:	rex.WR add BYTE PTR [rax-0x4fff9e00],r10b
   1400181fd:	add    BYTE PTR [rax+0x0],bh
   140018200:	iret   
   140018201:	add    BYTE PTR [rsi-0x5bff1000],cl
   140018207:	add    bh,bh
   140018209:	adc    DWORD PTR [rbx-0x41ce0100],esi
   14001820f:	add    bh,bh
   140018211:	push   rcx
   140018212:	mov    DWORD PTR [rax],0xd171ff
   140018218:	call   QWORD PTR [rcx-0x4e00ff24]
   14001821e:	in     eax,0x0
   140018220:	call   rcx
   140018222:	lock add bh,bh
   140018225:	(bad)  
   140018226:	inc    DWORD PTR [rax]
   140018228:	add    BYTE PTR [rax],al
   14001822a:	add    BYTE PTR [rax],al
   14001822c:	sub    al,0x0
   14001822e:	(bad)  
   14001822f:	add    BYTE PTR [rbx+0x0],cl
   140018232:	push   rax
   140018233:	add    BYTE PTR [rcx+0x0],ch
   140018236:	jo     0x140018238
   140018238:	xchg   DWORD PTR [rax],eax
   14001823a:	nop
   14001823b:	add    BYTE PTR [rbp-0x3bff5000],ah
   140018241:	add    bh,cl
   140018243:	add    cl,ah
   140018245:	add    al,dh
   140018247:	add    al,dh
   140018249:	adc    edi,edi
   14001824b:	add    dl,dh
   14001824d:	xor    edi,edi
   14001824f:	add    ah,dh
   140018251:	push   rcx
   140018252:	inc    DWORD PTR [rax]
   140018254:	div    BYTE PTR [rcx-0x1]
   140018257:	add    bh,dh
   140018259:	xchg   ecx,eax
   14001825a:	inc    DWORD PTR [rax]
   14001825c:	stc    
   14001825d:	mov    cl,0xff
   14001825f:	add    bl,bh
   140018261:	sar    edi,1
   140018263:	add    bh,bh
   140018265:	(bad)  
   140018266:	inc    DWORD PTR [rax]
   140018268:	add    BYTE PTR [rax],al
   14001826a:	add    BYTE PTR [rax],al
   14001826c:	sbb    eax,DWORD PTR [rax]
   14001826e:	(bad)  
   14001826f:	add    BYTE PTR [rip+0x3f005000],ch        # 0x17f01d275
   140018275:	add    BYTE PTR [rax+0x0],dh
   140018278:	push   rdx
   140018279:	add    BYTE PTR [rax-0x4fff9d00],dl
   14001827f:	add    BYTE PTR [rsi+0x0],dh
   140018282:	iret   
   140018283:	add    BYTE PTR [rax-0x66ff1000],cl
   140018289:	adc    edi,edi
   14001828b:	add    BYTE PTR [rsi-0x4bff00cf],ah
   140018291:	push   rcx
   140018292:	inc    DWORD PTR [rax]
   140018294:	ret    0xff71
   140018297:	add    bh,cl
   140018299:	xchg   ecx,eax
   14001829a:	inc    DWORD PTR [rax]
   14001829c:	fdiv   QWORD PTR [rcx-0x2e14ff01]
   1400182a2:	inc    DWORD PTR [rax]
   1400182a4:	(bad)  
   1400182a5:	(bad)  
   1400182a6:	inc    DWORD PTR [rax]
   1400182a8:	add    BYTE PTR [rax],al
   1400182aa:	add    BYTE PTR [rax],al
   1400182ac:	or     BYTE PTR [rax],al
   1400182ae:	(bad)  
   1400182af:	add    BYTE PTR [rsi],cl
   1400182b1:	add    BYTE PTR [rax+0x0],dl
   1400182b4:	adc    eax,0x1b007000
   1400182b9:	add    BYTE PTR [rax-0x4fffdf00],dl
   1400182bf:	add    BYTE PTR [rsi],ah
   1400182c1:	add    bh,cl
   1400182c3:	add    BYTE PTR [rax+rax*1],ch
   1400182c6:	lock add BYTE PTR [rsi],bh
   1400182c9:	adc    edi,edi
   1400182cb:	add    BYTE PTR [rax+0x31],bl
   1400182ce:	inc    DWORD PTR [rax]
   1400182d0:	jno    0x140018323
   1400182d2:	inc    DWORD PTR [rax]
   1400182d4:	mov    WORD PTR [rcx-0x1],?
   1400182d7:	add    BYTE PTR [rsi-0x40ff006f],ah
   1400182dd:	mov    cl,0xff
   1400182df:	add    dl,bl
   1400182e1:	sar    edi,1
   1400182e3:	add    bh,bh
   1400182e5:	(bad)  
   1400182e6:	inc    DWORD PTR [rax]
   1400182e8:	sbb    al,BYTE PTR [rax]
   1400182ea:	add    BYTE PTR [rax],al
   1400182ec:	add    BYTE PTR [rax],al
   1400182ee:	add    BYTE PTR [rax],al
   1400182f0:	sbb    bl,BYTE PTR [rdx]
   1400182f2:	sbb    ah,BYTE PTR [rcx]
   1400182f4:	add    BYTE PTR [rax],al
   1400182f6:	add    BYTE PTR [rax],al
   1400182f8:	sbb    DWORD PTR [rcx],ebx
   1400182fa:	add    BYTE PTR [rax],al
   1400182fc:	add    BYTE PTR [rax],al
   1400182fe:	sbb    bl,BYTE PTR [rax]
   140018300:	and    eax,0x2a2f2f2f
   140018305:	add    BYTE PTR [rax],al
   140018307:	add    BYTE PTR [rdx],bl
   140018309:	and    BYTE PTR [rdx],bl
   14001830b:	sbb    bl,BYTE PTR [rax]
   14001830d:	sbb    ah,BYTE PTR [rcx]
   14001830f:	sub    bl,BYTE PTR [rdi]
   140018311:	adc    BYTE PTR [rsi],cl
   140018313:	(bad)  
   140018314:	(bad)  
   140018315:	(bad)  
   140018316:	add    BYTE PTR [rax],al
   140018318:	sbb    DWORD PTR [rdx],esp
   14001831a:	sub    BYTE PTR [rip+0x2f252725],ah        # 0x16f26aa45
   140018320:	adc    DWORD PTR [rax],edx
   140018322:	movaps XMMWORD PTR [rip+0x1a00002f],xmm1        # 0x15a018358
   140018329:	and    DWORD PTR [rbx],esp
   14001832b:	(bad)  
   14001832c:	(bad)  
   14001832d:	(bad)  
   14001832e:	(bad)  
   14001832f:	(bad)  
   140018330:	adc    DWORD PTR [rax],edx
   140018332:	(bad)  
   140018333:	(bad)  
   140018334:	sub    ebp,DWORD PTR [rdi]
   140018336:	sub    eax,DWORD PTR [rax]
   140018338:	sbb    al,0x22
   14001833a:	sub    ch,BYTE PTR [rax]
   14001833c:	(bad)  
   14001833d:	sbb    eax,0x11112f0a
   140018342:	adc    BYTE PTR [rdi],cl
   140018344:	(bad)  
   140018345:	or     eax,0x211c1e0d
   14001834a:	and    eax,0xa0b2f28
   14001834f:	sub    BYTE PTR [rsi],bl
   140018351:	adc    DWORD PTR [rcx],edx
   140018353:	adc    BYTE PTR [rdi],cl
   140018355:	(bad)  
   140018356:	or     eax,0x2820200d
   14001835b:	sub    ch,BYTE PTR [rdi]
   14001835d:	or     BYTE PTR [rax],cl
   14001835f:	or     al,0x28
   140018361:	(bad)  
   140018362:	(bad)  
   140018363:	(bad)  
   140018364:	sub    DWORD PTR [rdx],edx
   140018366:	(bad)  
   140018367:	or     eax,0x2a17181a
   14001836c:	(bad)  
   14001836d:	or     ecx,DWORD PTR [rax]
   14001836f:	or     BYTE PTR [rdx],cl
   140018371:	or     DWORD PTR [rip+0xf290c05],eax        # 0x14f2a8f7c
   140018377:	bndldx bnd0,[rsi+rax*1]
   14001837b:	sbb    ch,BYTE PTR [rdx]
   14001837d:	sbb    eax,0xa0a080b
   140018382:	or     DWORD PTR [rip+0x1f102f05],eax        # 0x15f11b28d
   140018388:	adc    eax,0x22070107
   14001838d:	(bad)  
   14001838e:	(bad)  
   14001838f:	(bad)  
   140018390:	(bad)  
   140018391:	(bad)  
   140018392:	sbb    eax,0x2b2f0509
   140018397:	add    BYTE PTR [rsi+rdx*1],bl
   14001839a:	sbb    BYTE PTR [rdx],al
   14001839c:	adc    ebp,DWORD PTR [rdi]
   14001839e:	(bad)  
   14001839f:	(bad)  
   1400183a0:	or     esp,DWORD PTR [rbx]
   1400183a2:	or     cl,BYTE PTR [rcx]
   1400183a4:	or     DWORD PTR [rbx],ebp
   1400183a6:	add    BYTE PTR [rax],al
   1400183a8:	and    BYTE PTR [rcx],ah
   1400183aa:	and    eax,0x2f1c031b
   1400183af:	(bad)  
   1400183b0:	sbb    eax,0x1d0a080b
   1400183b5:	sub    eax,DWORD PTR [rax]
   1400183b7:	add    BYTE PTR [rdx+riz*1],bl
   1400183ba:	sub    ch,BYTE PTR [rbx]
   1400183bc:	sbb    al,0x14
   1400183be:	(bad)  
   1400183bf:	and    ebp,DWORD PTR [rbx]
   1400183c1:	(bad)  
   1400183c2:	(bad)  
   1400183c3:	sub    esp,DWORD PTR [rdi]
   1400183c5:	add    BYTE PTR [rax],al
   1400183c7:	add    BYTE PTR [rcx+riz*1],bl
   1400183ca:	and    eax,0x242b2b2a
   1400183cf:	sub    ebp,DWORD PTR [rbx]
   1400183d1:	and    DWORD PTR [rbx],ebp
   1400183d3:	and    DWORD PTR [rax],eax
   1400183d5:	add    BYTE PTR [rax],al
   1400183d7:	add    BYTE PTR [rsp+rbx*1],bl
   1400183da:	sbb    al,0x1c
   1400183dc:	and    BYTE PTR [rax],ah
   1400183de:	and    BYTE PTR [rax],ah
   1400183e0:	and    DWORD PTR [rcx],esp
   1400183e2:	and    DWORD PTR [rax],eax
   1400183e4:	add    BYTE PTR [rax],al
   1400183e6:	add    BYTE PTR [rax],al
   1400183e8:	jg     0x1400183f9
   1400183ea:	add    BYTE PTR [rax],al
   1400183ec:	cmp    al,0x7
   1400183ee:	add    BYTE PTR [rax],al
   1400183f0:	add    BYTE PTR [rbx],al
   1400183f2:	add    BYTE PTR [rax],al
   1400183f4:	add    BYTE PTR [rbx],al
   1400183f6:	add    BYTE PTR [rax],al
   1400183f8:	add    BYTE PTR [rcx],al
	...
   14001840e:	add    BYTE PTR [rax],al
   140018410:	add    BYTE PTR [rcx],al
   140018412:	add    BYTE PTR [rax],al
   140018414:	add    BYTE PTR [rbx],al
   140018416:	add    BYTE PTR [rax],al
   140018418:	add    BYTE PTR [rbx],al
   14001841a:	add    BYTE PTR [rax],al
   14001841c:	add    BYTE PTR [rdi],al
   14001841e:	add    BYTE PTR [rax],al
   140018420:	add    BYTE PTR [rdi],cl
   140018422:	add    BYTE PTR [rax],al
   140018424:	add    BYTE PTR [rdi],bl
   140018426:	add    BYTE PTR [rax],al
   140018428:	sub    BYTE PTR [rax],al
   14001842a:	add    BYTE PTR [rax],al
   14001842c:	xor    BYTE PTR [rax],al
   14001842e:	add    BYTE PTR [rax],al
   140018430:	(bad)  
   140018431:	add    BYTE PTR [rax],al
   140018433:	add    BYTE PTR [rcx],al
   140018435:	add    BYTE PTR [rax],ah
	...
   140018477:	add    al,BYTE PTR [rax]
   140018479:	add    BYTE PTR [rax],al
   14001847b:	add    al,0x0
   14001847d:	add    BYTE PTR [rax],al
   14001847f:	(bad)  
   140018480:	add    BYTE PTR [rax],al
   140018482:	add    BYTE PTR [rsi],al
   140018484:	add    BYTE PTR [rax],al
   140018486:	add    BYTE PTR [rsi],al
   140018488:	add    BYTE PTR [rax],al
   14001848a:	add    BYTE PTR [rip+0x3000000],al        # 0x143018490
	...
   1400184f4:	add    BYTE PTR [rax],al
   1400184f6:	add    BYTE PTR [rcx],al
	...
   140018528:	add    BYTE PTR [rax],al
   14001852a:	add    BYTE PTR [rax+rax*1],al
   14001852d:	add    BYTE PTR [rax],al
   14001852f:	or     eax,DWORD PTR [rax]
   140018531:	add    BYTE PTR [rax],al
   140018533:	adc    eax,0x211f1f1f
   140018538:	add    BYTE PTR [rax],al
   14001853a:	add    BYTE PTR [rcx],ah
   14001853c:	add    BYTE PTR [rax],al
   14001853e:	add    BYTE PTR [rax+rax*1],ah
   140018541:	add    BYTE PTR [rax],al
   140018543:	or     DWORD PTR es:[rcx],ecx
   140018546:	or     DWORD PTR [rsi],esp
   140018548:	add    BYTE PTR [rax],al
   14001854a:	add    BYTE PTR [rdx],ah
   14001854c:	add    BYTE PTR [rax],al
   14001854e:	add    BYTE PTR [rdi],bl
   140018550:	add    BYTE PTR [rax],al
   140018552:	add    BYTE PTR [rbx],bl
   140018554:	add    BYTE PTR [rax],al
   140018556:	add    BYTE PTR [rax+rax*1],dl
   140018559:	add    BYTE PTR [rax],al
   14001855b:	or     eax,0x7000000
   140018560:	add    BYTE PTR [rax],al
   140018562:	add    BYTE PTR [rbx],al
	...
   1400185ac:	add    BYTE PTR [rax],al
   1400185ae:	add    BYTE PTR [rbx],al
   1400185b0:	add    BYTE PTR [rax],al
   1400185b2:	add    BYTE PTR [rip+0xc000000],cl        # 0x14c0185b8
	...
   1400185dc:	add    BYTE PTR [rax],al
   1400185de:	add    BYTE PTR [rsi],al
   1400185e0:	add    BYTE PTR [rax],al
   1400185e2:	add    BYTE PTR [rax],dl
   1400185e4:	add    BYTE PTR [rax],al
   1400185e6:	add    BYTE PTR [rdx],bl
   1400185e8:	add    BYTE PTR [rax],al
   1400185ea:	add    BYTE PTR [rax],ah
   1400185ec:	lahf   
   1400185ed:	lahf   
   1400185ee:	lahf   
   1400185ef:	push   rdi
   1400185f0:	loop   0x1400185d4
   1400185f2:	loop   0x1400185af
   1400185f4:	out    dx,eax
   1400185f5:	out    dx,eax
   1400185f6:	out    dx,eax
   1400185f7:	out    0xee,al
   1400185f9:	out    dx,al
   1400185fa:	out    dx,al
   1400185fb:	out    0xeb,eax
   1400185fd:	jmp    0x1400185ea
   1400185ff:	loop   0x1400185ee
   140018601:	in     eax,dx
   140018602:	in     eax,dx
   140018603:	in     eax,0xeb
   140018605:	jmp    0x1400185f2
   140018607:	fcomip st,st(4)
   140018609:	hlt    
   14001860a:	hlt    
   14001860b:	out    dx,eax
   14001860c:	lock lock lock in al,0xdc
   140018611:	(bad)  
   140018613:	mov    cl,0xc7
   140018615:	mov    edi,0x101018b
   14001861b:	sub    edi,DWORD PTR [rsp+rdi*1]
   14001861e:	cmp    al,0x2f
   140018620:	add    BYTE PTR [rax],al
   140018622:	add    BYTE PTR [rdi],bl
   140018624:	add    BYTE PTR [rax],al
   140018626:	add    BYTE PTR [rax],bl
   140018628:	add    BYTE PTR [rax],al
   14001862a:	add    BYTE PTR [rax],dl
   14001862c:	add    BYTE PTR [rax],al
   14001862e:	add    BYTE PTR [rcx],cl
   140018630:	add    BYTE PTR [rax],al
   140018632:	add    BYTE PTR [rax+rax*1],al
   140018635:	add    BYTE PTR [rax],al
   140018637:	add    DWORD PTR [rax],eax
	...
   140018661:	add    BYTE PTR [rax],al
   140018663:	add    al,BYTE PTR [rax]
   140018665:	add    BYTE PTR [rax],al
   140018667:	or     BYTE PTR [rax],al
   140018669:	add    BYTE PTR [rax],al
   14001866b:	adc    ah,BYTE PTR [rsi]
   14001866d:	es and eax,DWORD PTR es:[rax]
   140018671:	add    BYTE PTR [rax],al
   140018673:	add    BYTE PTR es:[rax],al
   140018676:	add    BYTE PTR [rsi],cl
	...
   14001869c:	add    BYTE PTR [rax],al
   14001869e:	add    BYTE PTR [rax],bl
   1400186a0:	pop    rbx
   1400186a1:	pop    rbx
   1400186a2:	pop    rbx
   1400186a3:	(bad)  
   1400186a4:	ss ss ss add BYTE PTR ss:[rax],al
   1400186aa:	add    BYTE PTR [rbx],bl
   1400186ac:	xlat   BYTE PTR ds:[rbx]
   1400186ad:	xlat   BYTE PTR ds:[rbx]
   1400186ae:	xlat   BYTE PTR ds:[rbx]
   1400186af:	(bad)
   1400186b3:	(bad)  
   1400186b4:	mov    edi,0xe7ffbfbf
   1400186b9:	out    0xe7,eax
   1400186bb:	dec    esi
   1400186bd:	(bad)  
   1400186be:	(bad)  
   1400186bf:	call   rsi
   1400186c1:	(bad)  
   1400186c2:	(bad)  
   1400186c3:	dec    esp
   1400186c5:	int3   
   1400186c6:	int3   
   1400186c7:	(bad)  
   1400186c8:	(bad)  
   1400186ca:	(bad)  
   1400186cc:	(bad)  
   1400186cd:	(bad)  
   1400186ce:	(bad)  
   1400186cf:	(bad)  
   1400186d0:	jmp    0x11d0170be
   1400186d5:	(bad)  
   1400186d7:	(bad)  
   1400186d8:	fstp   st(5)
   1400186da:	fstp   st(5)
   1400186dc:	call   0x12feb6fc9
   1400186e1:	out    dx,eax
   1400186e2:	out    dx,eax
   1400186e3:	loope  0x1400186b7
   1400186e5:	rcl    dl,cl
   1400186e7:	sahf   
   1400186e8:	rol    ecx,0xc1
   1400186eb:	jg     0x14001872f
   1400186ed:	rex.X
   1400186ee:	rex.X xor eax,DWORD PTR [rax]
   1400186f1:	add    BYTE PTR [rax],al
   1400186f3:	and    al,BYTE PTR [rax]
   1400186f5:	add    BYTE PTR [rax],al
   1400186f7:	sbb    al,0x0
   1400186f9:	add    BYTE PTR [rax],al
   1400186fb:	(bad)  
   1400186fc:	add    BYTE PTR [rax],al
   1400186fe:	add    BYTE PTR [rcx],dl
   140018700:	add    BYTE PTR [rax],al
   140018702:	add    BYTE PTR [rsi],cl
   140018704:	add    BYTE PTR [rax],al
   140018706:	add    BYTE PTR [rbx],cl
   140018708:	add    BYTE PTR [rax],al
   14001870a:	add    BYTE PTR [rdx],cl
   14001870c:	add    BYTE PTR [rax],al
   14001870e:	add    BYTE PTR [rdx],cl
   140018710:	add    BYTE PTR [rax],al
   140018712:	add    BYTE PTR [rbx],cl
   140018714:	add    BYTE PTR [rax],al
   140018716:	add    BYTE PTR [rip+0x11000000],cl        # 0x15101871c
   14001871c:	add    BYTE PTR [rax],al
   14001871e:	add    BYTE PTR [rsi],dl
   140018720:	add    BYTE PTR [rax],al
   140018722:	add    BYTE PTR [rip+0x17000000],bl        # 0x157018728
   140018728:	ins    DWORD PTR es:[rdi],dx
   140018729:	ins    DWORD PTR es:[rdi],dx
   14001872a:	ins    DWORD PTR es:[rdi],dx
   14001872b:	xor    edi,eax
   14001872d:	clc    
   14001872e:	clc    
   14001872f:	cli    
   140018730:	add    BYTE PTR [rax],al
   140018732:	add    BYTE PTR [rax+rax*1],ch
   140018735:	add    BYTE PTR [rax],al
   140018737:	(bad)  
	...
   14001875c:	add    BYTE PTR [rax],al
   14001875e:	add    BYTE PTR [rcx],bl
   140018760:	loop   0x140018744
   140018762:	loop   0x140018733
   140018764:	and    DWORD PTR [rcx],esp
   140018766:	and    DWORD PTR [rax+rax*1],esi
   140018769:	add    BYTE PTR [rax],al
   14001876b:	(bad)  
   14001876c:	(bad)  
   14001876d:	(bad)  
   14001876e:	(bad)  
   14001876f:	es jmp 0x12901715e
   140018775:	call   0x127e98762
   14001877a:	out    0xff,eax
   14001877c:	retf   0xcaca
   14001877f:	(bad)  
   140018780:	mov    ecx,0xd2ffb9b9
   140018785:	rcl    dl,cl
   140018787:	(bad)  
   140018788:	mov    eax,0xdcffb8b8
   14001878d:	(bad)  
   14001878f:	jmp    rbp
   140018791:	in     eax,0xe5
   140018793:	jmp    rsi
   140018795:	out    0xe6,al
   140018797:	call   rax
   140018799:	rcl    al,1
   14001879b:	call   rcx
   14001879d:	rcl    ecx,1
   14001879f:	jmp    rdi
   1400187a1:	out    0xe7,eax
   1400187a3:	(bad)  
   1400187a4:	jmp    0x12d017192
   1400187a9:	in     al,dx
   1400187aa:	in     al,dx
   1400187ab:	jmp    rsi
   1400187ad:	out    0xe6,al
   1400187af:	in     al,0xca
   1400187b1:	retf   0x9fca
   1400187b4:	mov    cl,0xb1
   1400187b6:	mov    cl,0x7d
   1400187b8:	mov    bh,0xb7
   1400187ba:	mov    bh,0x7d
   1400187bc:	pop    rdi
   1400187bd:	pop    rdi
   1400187be:	pop    rdi
   1400187bf:	rex.RB add DWORD PTR [r11+0x70704f83],0x70
   1400187c7:	rex.R mov cs,WORD PTR [rsi+0x1313508e]
   1400187ce:	adc    ebp,DWORD PTR [rax+rax*1]
   1400187d1:	add    BYTE PTR [rax],al
   1400187d3:	sub    DWORD PTR [rax],eax
   1400187d5:	add    BYTE PTR [rax],al
   1400187d7:	sub    edx,DWORD PTR [rdi]
   1400187d9:	(bad)  
   1400187da:	(bad)  
   1400187db:	xor    ecx,DWORD PTR [rcx+0x325a8989]
   1400187e1:	xor    dh,BYTE PTR [rdx]
   1400187e3:	add    BYTE PTR ss:[rax],al
   1400187e6:	add    BYTE PTR [rax],bl
   1400187e8:	rex.R
   1400187e9:	rex.R
   1400187ea:	sub    sil,r12b
   1400187ed:	out    0xe6,al
   1400187ef:	inc    DWORD PTR [rax]
   1400187f1:	add    BYTE PTR [rax],al
   1400187f3:	sub    al,0x0
   1400187f5:	add    BYTE PTR [rax],al
   1400187f7:	(bad)  
	...
   14001881c:	add    BYTE PTR [rax],al
   14001881e:	add    BYTE PTR [rcx],bl
   140018820:	repz repz repz (bad) 
   140018824:	mov    esp,0x2391bcbc
   140018829:	and    esp,DWORD PTR [rbx]
   14001882b:	xor    eax,0x8ec1c1c1
   140018830:	(bad)  
   140018831:	(bad)  
   140018832:	(bad)  
   140018833:	inc    eax
   140018835:	rol    al,0xff
   140018838:	jmp    0x11d017226
   14001883d:	(bad)  
   14001883f:	dec    edi
   140018841:	iret   
   140018842:	iret   
   140018843:	(bad)  
   140018844:	(bad)  
   140018846:	fcos   
   140018848:	out    0xe7,eax
   14001884a:	out    0xff,eax
   14001884c:	xlat   BYTE PTR ds:[rbx]
   14001884d:	xlat   BYTE PTR ds:[rbx]
   14001884e:	xlat   BYTE PTR ds:[rbx]
   14001884f:	jmp    rsi
   140018851:	out    0xe6,al
   140018853:	jmp    rdi
   140018855:	out    0xe7,eax
   140018857:	jmp    rax
   140018859:	loopne 0x14001883b
   14001885b:	(bad)  
   14001885c:	fcmovnu st,st(3)
   14001885e:	(bad)  
   140018860:	out    0xe6,al
   140018862:	out    0xff,al
   140018864:	in     eax,0xe5
   140018866:	in     eax,0xff
   140018868:	in     eax,0xe5
   14001886a:	in     eax,0xff
   14001886c:	in     eax,0xe5
   14001886e:	in     eax,0xff
   140018870:	in     al,0xe4
   140018872:	in     al,0xff
   140018874:	in     eax,0xe5
   140018876:	in     eax,0xff
   140018878:	jmp    0x140018865
   14001887a:	jmp    0x140018870
   14001887c:	icebp  
   14001887d:	icebp  
   14001887e:	icebp  
   14001887f:	clc    
   140018880:	hlt    
   140018881:	hlt    
   140018882:	hlt    
   140018883:	sti    
   140018884:	(bad)  
   140018885:	(bad)  
   140018886:	(bad)  
   140018887:	call   0x13ffc8386
   14001888c:	repnz repnz repnz repz (bad) 
   140018891:	(bad)  
   140018892:	(bad)  
   140018893:	mov    ecx,0xdfe3e3e3
   140018898:	rol    ecx,0xc1
   14001889b:	stc    
   14001889c:	in     eax,0xe5
   14001889e:	in     eax,0xff
   1400188a0:	mov    bh,0xb7
   1400188a2:	mov    bh,0x93
   1400188a4:	(bad)  
   1400188a5:	(bad)  
   1400188a6:	(bad)  
   1400188a7:	xor    eax,0x8ebcbcbc
   1400188ac:	in     al,0xe4
   1400188ae:	in     al,0xff
   1400188b0:	add    BYTE PTR [rax],al
   1400188b2:	add    BYTE PTR [rax+rax*1],ch
   1400188b5:	add    BYTE PTR [rax],al
   1400188b7:	(bad)  
	...
   1400188dc:	add    BYTE PTR [rax],al
   1400188de:	add    BYTE PTR [rcx],bl
   1400188e0:	cmc    
   1400188e1:	cmc    
   1400188e2:	cmc    
   1400188e3:	(bad)  
   1400188e4:	jmp    0x1400188d1
   1400188e6:	jmp    0x1400188e7
   1400188e8:	jmp    0x1400188d5
   1400188ea:	jmp    0x1400188eb
   1400188ec:	jmp    0x1400188d9
   1400188ee:	jmp    0x1400188ef
   1400188f0:	(bad)  
   1400188f1:	(bad)  
   1400188f2:	(bad)  
   1400188f3:	(bad)  
   1400188f4:	(bad)  
   1400188f5:	(bad)  
   1400188f6:	(bad)  
   1400188f7:	(bad)  
   1400188f8:	(bad)  
   1400188f9:	(bad)  
   1400188fa:	(bad)  
   1400188fb:	(bad)  
   1400188fc:	jmp    0x12a0172ea
   140018901:	jmp    0x129eb88ef
   140018906:	jmp    0x128ea720a
   14001890b:	(bad)  
   14001890c:	call   0x1290171f9
   140018911:	call   0x127e988fe
   140018916:	out    0xff,eax
   140018918:	out    0xe6,al
   14001891a:	out    0xff,al
   14001891c:	out    0xe7,eax
   14001891e:	out    0xff,eax
   140018920:	out    0xe7,eax
   140018922:	out    0xff,eax
   140018924:	out    0xe6,al
   140018926:	out    0xff,al
   140018928:	out    0xe6,al
   14001892a:	out    0xff,al
   14001892c:	out    0xe6,al
   14001892e:	out    0xff,al
   140018930:	in     eax,0xe5
   140018932:	in     eax,0xff
   140018934:	in     eax,0xe5
   140018936:	in     eax,0xff
   140018938:	in     eax,0xe5
   14001893a:	in     eax,0xff
   14001893c:	in     al,0xe4
   14001893e:	in     al,0xff
   140018940:	in     al,0xe4
   140018942:	in     al,0xff
   140018944:	in     al,0xe4
   140018946:	in     al,0xff
   140018948:	jrcxz  0x14001892d
   14001894a:	jrcxz  0x14001894b
   14001894c:	jrcxz  0x140018931
   14001894e:	jrcxz  0x14001894f
   140018950:	jrcxz  0x140018935
   140018952:	jrcxz  0x140018953
   140018954:	loop   0x140018938
   140018956:	loop   0x140018957
   140018958:	loop   0x14001893c
   14001895a:	loop   0x14001895b
   14001895c:	loop   0x140018940
   14001895e:	loop   0x14001895f
   140018960:	jrcxz  0x140018945
   140018962:	jrcxz  0x140018963
   140018964:	jrcxz  0x140018949
   140018966:	jrcxz  0x140018967
   140018968:	jrcxz  0x14001894d
   14001896a:	jrcxz  0x14001896b
   14001896c:	jrcxz  0x140018951
   14001896e:	jrcxz  0x14001896f
   140018970:	add    BYTE PTR [rax],al
   140018972:	add    BYTE PTR [rax+rax*1],ch
   140018975:	add    BYTE PTR [rax],al
   140018977:	(bad)  
	...
   14001899c:	add    BYTE PTR [rax],al
   14001899e:	add    BYTE PTR [rcx],bl
   1400189a0:	cmc    
   1400189a1:	cmc    
   1400189a2:	cmc    
   1400189a3:	inc    ebx
   1400189a5:	ret    
   1400189a6:	ret    
   1400189a7:	mov    WORD PTR [rdx],?
   1400189a9:	xor    dh,BYTE PTR [rdx]
   1400189ab:	and    dl,al
   1400189ad:	rcl    al,1
   1400189af:	test   bl,ch
   1400189b1:	jmp    0x14001899e
   1400189b3:	inc    edx
   1400189b5:	ret    0xffc2
   1400189b8:	(bad)  
   1400189b9:	(bad)  
   1400189ba:	(bad)  
   1400189bb:	call   rcx
   1400189bd:	rcl    ecx,1
   1400189bf:	(bad)  
   1400189c0:	fcmovu st,st(2)
   1400189c2:	(bad)  
   1400189c4:	iret   
   1400189c5:	iret   
   1400189c6:	iret   
   1400189c7:	jmp    rcx
   1400189c9:	loope  0x1400189ac
   1400189cb:	call   rcx
   1400189cd:	rcl    ecx,1
   1400189cf:	jmp    rsi
   1400189d1:	out    0xe6,al
   1400189d3:	call   rsi
   1400189d5:	(bad)  
   1400189d6:	(bad)  
   1400189d7:	inc    edi
   1400189d9:	mov    edi,0xd6d6d6ff
   1400189df:	call   rbx
   1400189e1:	rcl    ebx,cl
   1400189e3:	call   rbx
   1400189e5:	rcl    ebx,cl
   1400189e7:	call   rsp
   1400189e9:	(bad)  
   1400189ea:	(bad)  
   1400189eb:	(bad)  
   1400189ec:	fcmovnu st,st(3)
   1400189ee:	(bad)  
   1400189f0:	(bad)  
   1400189f1:	(bad)  
   1400189f2:	(bad)  
   1400189f3:	(bad)  
   1400189f4:	(bad)  
   1400189f6:	fdiv   st(7),st
   1400189f8:	(bad)  
   1400189f9:	(bad)  
   1400189fa:	(bad)  
   1400189fb:	jmp    rcx
   1400189fd:	loope  0x1400189e0
   1400189ff:	dec    ebx
   140018a01:	retf   
   140018a02:	retf   
   140018a03:	jmp    rsp
   140018a05:	in     al,0xe4
   140018a07:	(bad)  
   140018a08:	(bad)  
   140018a0a:	fcos   
   140018a0c:	lock lock lock (bad) 
   140018a10:	cli    
   140018a11:	cli    
   140018a12:	cli    
   140018a13:	(bad)  
   140018a14:	(bad)  
   140018a15:	(bad)  
   140018a16:	(bad)  
   140018a17:	(bad)  
   140018a18:	(bad)  
   140018a19:	(bad)  
   140018a1a:	(bad)  
   140018a1b:	(bad)  
   140018a1c:	(bad)  
   140018a1d:	(bad)  
   140018a1e:	(bad)  
   140018a1f:	(bad)  
   140018a20:	(bad)  
   140018a21:	(bad)  
   140018a22:	(bad)  
   140018a23:	(bad)  
   140018a24:	(bad)  
   140018a25:	(bad)  
   140018a26:	(bad)  
   140018a27:	sti    
   140018a28:	cli    
   140018a29:	cli    
   140018a2a:	cli    
   140018a2b:	cld    
   140018a2c:	lock lock lock jmp QWORD PTR [rsi]
   140018a31:	es xor al,BYTE PTR es:[rax]
   140018a35:	add    BYTE PTR [rax],al
   140018a37:	(bad)  
	...
   140018a5c:	add    BYTE PTR [rax],al
   140018a5e:	add    BYTE PTR [rcx],bl
   140018a60:	div    dh
   140018a62:	idiv   bh
   140018a64:	and    BYTE PTR [rax],ah
   140018a66:	and    BYTE PTR [rax+rax*1],dh
   140018a69:	add    BYTE PTR [rax],al
   140018a6b:	(bad)  
   140018a6c:	cmp    BYTE PTR [rax],bh
   140018a6e:	cmp    BYTE PTR [rsi],ah
   140018a70:	in     al,dx
   140018a71:	in     al,dx
   140018a72:	in     al,dx
   140018a73:	(bad)  
   140018a74:	in     al,dx
   140018a75:	in     al,dx
   140018a76:	in     al,dx
   140018a77:	(bad)  
   140018a78:	(bad)  
   140018a79:	(bad)  
   140018a7a:	(bad)  
   140018a7b:	dec    ebp
   140018a7d:	int    0xcd
   140018a7f:	(bad)  
   140018a80:	mov    ebx,0xd5ffbbbb
   140018a85:	(bad)  
   140018a86:	(bad)  
   140018a87:	(bad)  
   140018a88:	mov    edx,0xdfffbaba
   140018a8d:	(bad)  
   140018a8f:	(bad)  
   140018a90:	call   0x12a01737d
   140018a95:	jmp    0x109cb8a83
   140018a9a:	leave  
   140018a9b:	dec    ecx
   140018a9d:	leave  
   140018a9e:	leave  
   140018a9f:	call   rbx
   140018aa1:	rcl    ebx,cl
   140018aa3:	dec    eax
   140018aa5:	enter  0xffc8,0xca
   140018aa9:	retf   0xffca
   140018aac:	fcomp  st(0)
   140018aae:	fdivr  st,st(7)
   140018ab0:	enter  0xc8c8,0xff
   140018ab4:	(bad)  
   140018ab5:	(bad)  
   140018ab6:	(bad)  
   140018ab7:	(bad)  
   140018ab8:	mov    edi,0xd7ffbfbf
   140018abd:	xlat   BYTE PTR ds:[rbx]
   140018abe:	xlat   BYTE PTR ds:[rbx]
   140018abf:	call   rax
   140018ac1:	rcl    al,1
   140018ac3:	jmp    rdi
   140018ac5:	out    0xe7,eax
   140018ac7:	push   rax
   140018ac9:	lock lock push QWORD PTR [rsi+0x65ffffee]
   140018ad1:	(bad)  
   140018ad3:	(bad)  
   140018ad4:	(bad)  
   140018ad5:	(bad)  
   140018ad6:	(bad)  
   140018ad7:	push   QWORD PTR [rcx+rcx*8]
   140018ada:	(bad)  
   140018adb:	jmp    FWORD PTR [rdi]
   140018add:	(bad)  
   140018ae0:	sub    eax,ecx
   140018ae2:	(bad)  
   140018ae3:	jmp    FWORD PTR [rsi]
   140018ae5:	sar    bh,0xff
   140018ae8:	push   rdx
   140018ae9:	retf   0xffff
   140018aec:	stos   BYTE PTR es:[rdi],al
   140018aed:	in     eax,0xff
   140018aef:	push   rbp
   140018af1:	div    dh
   140018af3:	ror    DWORD PTR [rsi+0x1c8e8e],cl
	...
   140018b1d:	add    BYTE PTR [rax],al
   140018b1f:	sbb    esi,esi
   140018b21:	div    dh
   140018b23:	(bad)  
   140018b24:	mov    esi,0x2491bebe
   140018b29:	and    al,0x24
   140018b2b:	xor    eax,0x8ec4c4c4
   140018b30:	in     eax,dx
   140018b31:	in     eax,dx
   140018b32:	in     eax,dx
   140018b33:	inc    ebx
   140018b35:	ret    
   140018b36:	ret    
   140018b37:	(bad)  
   140018b38:	in     al,dx
   140018b39:	in     al,dx
   140018b3a:	in     al,dx
   140018b3b:	(bad)  
   140018b3c:	(bad)  
   140018b3e:	(bad)  
   140018b40:	rcl    ecx,1
   140018b42:	sar    edi,1
   140018b44:	fcmovnu st,st(3)
   140018b46:	(bad)  
   140018b48:	(bad)  
   140018b49:	(bad)  
   140018b4a:	(bad)  
   140018b4b:	(bad)  
   140018b4c:	fcmovu st,st(2)
   140018b4e:	(bad)  
   140018b50:	jmp    0x12b01753e
   140018b55:	(bad)  
   140018b56:	(bad)  
   140018b57:	jmp    rdx
   140018b59:	loop   0x140018b3d
   140018b5b:	(bad)  
   140018b5c:	(bad)  
   140018b5e:	fdivp  st(7),st
   140018b60:	(bad)  
   140018b62:	fdivp  st(7),st
   140018b64:	loop   0x140018b48
   140018b66:	loop   0x140018b67
   140018b68:	(bad)  
   140018b6a:	fdiv   st(7),st
   140018b6c:	loope  0x140018b4f
   140018b6e:	loope  0x140018b6f
   140018b70:	rcl    al,1
   140018b72:	sar    bh,1
   140018b74:	jrcxz  0x140018b59
   140018b76:	jrcxz  0x140018b77
   140018b78:	fcomp  st(0)
   140018b7a:	fdivr  st,st(7)
   140018b7c:	out    0xe7,eax
   140018b7e:	out    0xff,eax
   140018b80:	retf   
   140018b81:	retf   
   140018b82:	retf   
   140018b83:	push   rbp
   140018b85:	cmc    
   140018b86:	cmc    
   140018b87:	jmp    QWORD PTR [rdx+0x44ffffec]
   140018b8d:	(bad)  
   140018b8e:	(bad)  
   140018b8f:	inc    DWORD PTR [rax-0x2e]
   140018b92:	(bad)  
   140018b93:	(bad)  
   140018b94:	cmp    ecx,edi
   140018b96:	(bad)  
   140018b97:	push   QWORD PTR [rdi]
   140018b99:	int3   
   140018b9a:	(bad)  
   140018b9b:	push   QWORD PTR [rbx]
   140018b9d:	enter  0xffff,0x2f
   140018ba1:	(bad)  
   140018ba2:	(bad)  
   140018ba3:	jmp    FWORD PTR [rdx]
   140018ba5:	sar    edi,0xff
   140018ba8:	es mov ebp,0xba22ffff
   140018bae:	(bad)  
   140018baf:	dec    DWORD PTR [rsi-0x3000024]
   140018bb5:	cld    
   140018bb6:	cld    
   140018bb7:	pushf  
	...
   140018bdc:	add    BYTE PTR [rax],al
   140018bde:	add    BYTE PTR [rcx],bl
   140018be0:	div    dh
   140018be2:	idiv   bh
   140018be4:	out    dx,al
   140018be5:	out    dx,al
   140018be6:	out    dx,al
   140018be7:	(bad)  
   140018be8:	out    dx,al
   140018be9:	out    dx,al
   140018bea:	out    dx,al
   140018beb:	(bad)  
   140018bec:	out    dx,al
   140018bed:	out    dx,al
   140018bee:	out    dx,al
   140018bef:	(bad)  
   140018bf0:	in     eax,dx
   140018bf1:	in     eax,dx
   140018bf2:	in     eax,dx
   140018bf3:	(bad)  
   140018bf4:	in     eax,dx
   140018bf5:	in     eax,dx
   140018bf6:	in     eax,dx
   140018bf7:	(bad)  
   140018bf8:	in     eax,dx
   140018bf9:	in     eax,dx
   140018bfa:	in     eax,dx
   140018bfb:	(bad)  
   140018bfc:	in     al,dx
   140018bfd:	in     al,dx
   140018bfe:	in     al,dx
   140018bff:	(bad)  
   140018c00:	in     al,dx
   140018c01:	in     al,dx
   140018c02:	in     al,dx
   140018c03:	(bad)  
   140018c04:	in     al,dx
   140018c05:	in     al,dx
   140018c06:	in     al,dx
   140018c07:	(bad)  
   140018c08:	in     al,dx
   140018c09:	in     al,dx
   140018c0a:	in     al,dx
   140018c0b:	(bad)  
   140018c0c:	jmp    0x140018bf9
   140018c0e:	jmp    0x140018c0f
   140018c10:	jmp    0x140018bfd
   140018c12:	jmp    0x140018c13
   140018c14:	jmp    0x140018c01
   140018c16:	jmp    0x140018c17
   140018c18:	(bad)  
   140018c19:	(bad)  
   140018c1a:	(bad)  
   140018c1b:	(bad)  
   140018c1c:	(bad)  
   140018c1d:	(bad)  
   140018c1e:	(bad)  
   140018c1f:	(bad)  
   140018c20:	(bad)  
   140018c21:	(bad)  
   140018c22:	(bad)  
   140018c23:	(bad)  
   140018c24:	jmp    0x12a017612
   140018c29:	jmp    0x129eb8c17
   140018c2e:	jmp    0x128ea7532
   140018c33:	(bad)  
   140018c34:	call   0x129017521
   140018c39:	call   0x127e98c26
   140018c3e:	out    0xff,eax
   140018c40:	in     eax,0xe5
   140018c42:	in     eax,0xff
   140018c44:	(bad)  
   140018c45:	(bad)  
   140018c46:	(bad)  
   140018c47:	call   QWORD PTR [rdi-0x22]
   140018c4a:	(bad)  
   140018c4b:	inc    DWORD PTR [rdi-0x28]
   140018c4e:	(bad)  
   140018c4f:	inc    DWORD PTR [rbx-0x2b]
   140018c52:	(bad)  
   140018c53:	(bad)  
   140018c54:	(bad)  
   140018c55:	sar    bh,cl
   140018c57:	(bad)  
   140018c58:	cmp    ecx,esi
   140018c5a:	(bad)  
   140018c5b:	push   QWORD PTR [rsi]
   140018c5d:	retf   
   140018c5e:	(bad)  
   140018c5f:	push   QWORD PTR [rdx]
   140018c61:	enter  0xffff,0x6e
   140018c65:	xlat   BYTE PTR ds:[rbx]
   140018c66:	(bad)  
   140018c67:	push   rsi
   140018c69:	cld    
   140018c6a:	(bad)  
   140018c6b:	jmp    QWORD PTR [rsi-0x2f]
   140018c6e:	(bad)  
   140018c6f:	push   QWORD PTR [rax]
   140018c71:	mov    esi,0xffffffff
   140018c76:	push   rax
	...
   140018c9c:	add    BYTE PTR [rax],al
   140018c9e:	add    BYTE PTR [rcx],bl
   140018ca0:	div    edi
   140018ca2:	idiv   edi
   140018ca4:	mov    edi,0x33338cc7
   140018caa:	xor    esp,DWORD PTR [rdx]
   140018cac:	rcl    ebx,cl
   140018cae:	rol    DWORD PTR [rsi+rbp*8-0x3b001112],cl
   140018cb5:	(bad)  
   140018cb6:	(bad)  
   140018cb7:	(bad)  
   140018cb8:	out    dx,al
   140018cb9:	out    dx,al
   140018cba:	out    dx,al
   140018cbb:	(bad)  
   140018cbc:	in     eax,dx
   140018cbd:	in     eax,dx
   140018cbe:	in     eax,dx
   140018cbf:	(bad)  
   140018cc0:	in     eax,dx
   140018cc1:	in     eax,dx
   140018cc2:	in     eax,dx
   140018cc3:	(bad)  
   140018cc4:	in     eax,dx
   140018cc5:	in     eax,dx
   140018cc6:	in     eax,dx
   140018cc7:	jmp    rdi
   140018cc9:	out    0xe7,eax
   140018ccb:	call   rbp
   140018ccd:	(bad)  
   140018cce:	(bad)  
   140018ccf:	(bad)  
   140018cd0:	jmp    0x12c0176be
   140018cd5:	jmp    0x140018cc2
   140018cd7:	(bad)  
   140018cd8:	jmp    0x140018cc5
   140018cda:	jmp    0x140018cdb
   140018cdc:	jmp    0x140018cc9
   140018cde:	jmp    0x140018cdf
   140018ce0:	(bad)  
   140018ce1:	(bad)  
   140018ce2:	(bad)  
   140018ce3:	(bad)  
   140018ce4:	(bad)  
   140018ce5:	(bad)  
   140018ce6:	(bad)  
   140018ce7:	call   rax
   140018ce9:	rcl    al,1
   140018ceb:	(bad)  
   140018cec:	fcomp  st(0)
   140018cee:	fdivr  st,st(7)
   140018cf0:	fcmovu st,st(2)
   140018cf2:	(bad)  
   140018cf4:	xlat   BYTE PTR ds:[rbx]
   140018cf5:	xlat   BYTE PTR ds:[rbx]
   140018cf6:	xlat   BYTE PTR ds:[rbx]
   140018cf7:	dec    esi
   140018cf9:	(bad)  
   140018cfa:	(bad)  
   140018cfb:	call   rdx
   140018cfd:	rcl    dl,cl
   140018cff:	push   QWORD PTR [rbx-0x4c4d]
   140018d05:	(bad)  
   140018d06:	(bad)  
   140018d07:	dec    DWORD PTR [rdi-0x22]
   140018d0a:	(bad)  
   140018d0b:	dec    DWORD PTR [rbx-0x25]
   140018d0e:	(bad)  
   140018d0f:	inc    DWORD PTR [rdi-0x28]
   140018d12:	(bad)  
   140018d13:	inc    DWORD PTR [rdx-0x2c]
   140018d16:	(bad)  
   140018d17:	(bad)  
   140018d18:	ds sar edi,1
   140018d1b:	(bad)  
   140018d1c:	cmp    cl,dh
   140018d1e:	(bad)  
   140018d1f:	push   QWORD PTR [rip+0x70ffffca]        # 0x1b1018cef
   140018d25:	fdivr  st,st(7)
   140018d27:	push   rsi
   140018d29:	cld    
   140018d2a:	(bad)  
   140018d2b:	jmp    FWORD PTR [rcx-0x2d]
   140018d2e:	(bad)  
   140018d2f:	jmp    QWORD PTR [rsp+rdi*4]
   140018d32:	(bad)  
   140018d33:	(bad)  
   140018d34:	(bad)  
   140018d35:	(bad)  
   140018d36:	(bad)  
   140018d37:	inc    DWORD PTR [rax]
	...
   140018d5d:	add    BYTE PTR [rax],al
   140018d5f:	sbb    eax,edi
   140018d61:	clc    
   140018d62:	clc    
   140018d63:	jmp    QWORD PTR [rcx]
   140018d65:	and    DWORD PTR [rcx],esp
   140018d67:	xor    al,0x0
   140018d69:	add    BYTE PTR [rax],al
   140018d6b:	(bad)  
   140018d6c:	cmp    BYTE PTR [rax],bh
   140018d6e:	cmp    BYTE PTR [rsi],ah
   140018d70:	out    dx,eax
   140018d71:	out    dx,eax
   140018d72:	out    dx,eax
   140018d73:	(bad)  
   140018d74:	out    dx,eax
   140018d75:	out    dx,eax
   140018d76:	out    dx,eax
   140018d77:	(bad)  
   140018d78:	out    dx,al
   140018d79:	out    dx,al
   140018d7a:	out    dx,al
   140018d7b:	(bad)  
   140018d7c:	out    dx,al
   140018d7d:	out    dx,al
   140018d7e:	out    dx,al
   140018d7f:	(bad)  
   140018d80:	out    dx,al
   140018d81:	out    dx,al
   140018d82:	out    dx,al
   140018d83:	(bad)  
   140018d84:	in     eax,dx
   140018d85:	in     eax,dx
   140018d86:	in     eax,dx
   140018d87:	call   rbx
   140018d89:	rcl    ebx,cl
   140018d8b:	dec    eax
   140018d8d:	enter  0xffc8,0xe8
   140018d91:	call   0x12cee8d7e
   140018d96:	in     al,dx
   140018d97:	call   rcx
   140018d99:	rcl    ecx,1
   140018d9b:	dec    ebx
   140018d9d:	retf   
   140018d9e:	retf   
   140018d9f:	(bad)  
   140018da0:	jmp    0x140018d8d
   140018da2:	jmp    0x140018da3
   140018da4:	jmp    0x140018d91
   140018da6:	jmp    0x140018da7
   140018da8:	iret   
   140018da9:	iret   
   140018daa:	iret   
   140018dab:	(bad)  
   140018dac:	fcmovnu st,st(3)
   140018dae:	(bad)  
   140018db0:	mov    edi,0xc9ffbfbf
   140018db5:	leave  
   140018db6:	leave  
   140018db7:	(bad)  
   140018db8:	mov    edi,0xc9ffbfbf
   140018dbd:	leave  
   140018dbe:	leave  
   140018dbf:	dec    edx
   140018dc1:	retf   0xffca
   140018dc4:	(bad)  
   140018dc5:	(bad)  
   140018dc6:	(bad)  
   140018dc7:	call   QWORD PTR [rbx-0x1f]
   140018dca:	(bad)  
   140018dcb:	dec    DWORD PTR [rsi-0x22]
   140018dce:	(bad)  
   140018dcf:	dec    DWORD PTR [rdx-0x26]
   140018dd2:	(bad)  
   140018dd3:	inc    DWORD PTR [rsi-0x29]
   140018dd6:	(bad)  
   140018dd7:	inc    DWORD PTR [rdx-0x2c]
   140018dda:	(bad)  
   140018ddb:	(bad)  
   140018ddc:	cmp    eax,0x39ffffd0
   140018de1:	int    0xff
   140018de3:	push   QWORD PTR [rip+0x30ffffca]        # 0x171018db3
   140018de9:	(bad)  
   140018dec:	sub    al,0xc2
   140018dee:	(bad)  
   140018def:	jmp    FWORD PTR [rax]
   140018df1:	mov    edi,0xffffffff
   140018df6:	(bad)  
   140018df7:	inc    DWORD PTR [rax]
	...
   140018e1d:	add    BYTE PTR [rax],al
   140018e1f:	sbb    eax,edi
   140018e21:	clc    
   140018e22:	clc    
   140018e23:	inc    ecx
   140018e25:	rol    ecx,0x91
   140018e28:	and    eax,0xc7352525
   140018e2d:	mov    edi,0xf0f0f08e
   140018e33:	inc    edi
   140018e35:	mov    edi,0xefefefff
   140018e3b:	(bad)  
   140018e3c:	out    dx,eax
   140018e3d:	out    dx,eax
   140018e3e:	out    dx,eax
   140018e3f:	(bad)  
   140018e40:	out    dx,al
   140018e41:	out    dx,al
   140018e42:	out    dx,al
   140018e43:	(bad)  
   140018e44:	out    dx,al
   140018e45:	out    dx,al
   140018e46:	out    dx,al
   140018e47:	(bad)  
   140018e48:	out    dx,al
   140018e49:	out    dx,al
   140018e4a:	out    dx,al
   140018e4b:	(bad)  
   140018e4c:	(bad)  
   140018e4e:	fdivp  st(7),st
   140018e50:	in     eax,dx
   140018e51:	in     eax,dx
   140018e52:	in     eax,dx
   140018e53:	(bad)  
   140018e54:	in     eax,dx
   140018e55:	in     eax,dx
   140018e56:	in     eax,dx
   140018e57:	(bad)  
   140018e58:	in     eax,dx
   140018e59:	in     eax,dx
   140018e5a:	in     eax,dx
   140018e5b:	(bad)  
   140018e5c:	in     al,dx
   140018e5d:	in     al,dx
   140018e5e:	in     al,dx
   140018e5f:	(bad)  
   140018e60:	in     al,dx
   140018e61:	in     al,dx
   140018e62:	in     al,dx
   140018e63:	(bad)  
   140018e64:	in     al,dx
   140018e65:	in     al,dx
   140018e66:	in     al,dx
   140018e67:	call   rax
   140018e69:	rcl    al,1
   140018e6b:	(bad)  
   140018e6c:	(bad)  
   140018e6e:	fdivp  st(7),st
   140018e70:	loopne 0x140018e52
   140018e72:	loopne 0x140018e73
   140018e74:	out    dx,eax
   140018e75:	out    dx,eax
   140018e76:	out    dx,eax
   140018e77:	(bad)  
   140018e78:	cli    
   140018e79:	cli    
   140018e7a:	cli    
   140018e7b:	(bad)  
   140018e7c:	(bad)  
   140018e7d:	(bad)  
   140018e7e:	(bad)  
   140018e7f:	(bad)  
   140018e80:	(bad)  
   140018e81:	(bad)  
   140018e82:	(bad)  
   140018e83:	(bad)  
   140018e84:	(bad)  
   140018e85:	(bad)  
   140018e86:	(bad)  
   140018e87:	call   QWORD PTR [rsi-0x1c]
   140018e8a:	(bad)  
   140018e8b:	call   QWORD PTR [rdx-0x1f]
   140018e8e:	(bad)  
   140018e8f:	dec    DWORD PTR [rsi-0x23]
   140018e92:	(bad)  
   140018e93:	dec    DWORD PTR [rcx-0x26]
   140018e96:	(bad)  
   140018e97:	inc    DWORD PTR [rbp-0x29]
   140018e9a:	(bad)  
   140018e9b:	push   QWORD PTR [rax-0x13]
   140018ea1:	(bad)  
   140018ea2:	(bad)  
   140018ea3:	(bad)  
   140018ea4:	(bad)  
   140018ea5:	(bad)  
   140018ea6:	(bad)  
   140018ea7:	(bad)  
   140018ea8:	(bad)  
   140018ea9:	(bad)  
   140018eaa:	(bad)  
   140018eab:	(bad)  
   140018eac:	(bad)  
   140018ead:	(bad)  
   140018eae:	(bad)  
   140018eaf:	(bad)  
   140018eb0:	(bad)  
   140018eb1:	(bad)  
   140018eb2:	(bad)  
   140018eb3:	(bad)  
   140018eb4:	(bad)  
   140018eb5:	(bad)  
   140018eb6:	(bad)  
   140018eb7:	(bad)  
   140018eb8:	(bad)  
   140018eb9:	(bad)  
   140018eba:	(bad)  
   140018ebb:	(bad)  
   140018ebc:	(bad)  
   140018ebd:	(bad)  
   140018ebe:	(bad)  
   140018ebf:	(bad)  
   140018ec0:	(bad)  
   140018ec1:	(bad)  
   140018ec2:	push   rcx
   140018ec4:	(bad)  
   140018ec5:	(bad)  
   140018ec6:	call   FWORD PTR [rdx+0x0]
	...
   140018edc:	add    BYTE PTR [rax],al
   140018ede:	add    BYTE PTR [rcx],bl
   140018ee0:	stc    
   140018ee1:	stc    
   140018ee2:	stc    
   140018ee3:	push   rcx
   140018ee5:	icebp  
   140018ee6:	icebp  
   140018ee7:	push   rcx
   140018ee9:	icebp  
   140018eea:	icebp  
   140018eeb:	push   rcx
   140018eed:	icebp  
   140018eee:	icebp  
   140018eef:	push   rcx
   140018ef1:	icebp  
   140018ef2:	icebp  
   140018ef3:	push   rax
   140018ef5:	lock lock push rax
   140018ef9:	lock lock push rax
   140018efd:	lock lock (bad) 
   140018f00:	out    dx,eax
   140018f01:	out    dx,eax
   140018f02:	out    dx,eax
   140018f03:	(bad)  
   140018f04:	out    dx,eax
   140018f05:	out    dx,eax
   140018f06:	out    dx,eax
   140018f07:	(bad)  
   140018f08:	out    dx,eax
   140018f09:	out    dx,eax
   140018f0a:	out    dx,eax
   140018f0b:	(bad)  
   140018f0c:	out    dx,al
   140018f0d:	out    dx,al
   140018f0e:	out    dx,al
   140018f0f:	(bad)  
   140018f10:	out    dx,al
   140018f11:	out    dx,al
   140018f12:	out    dx,al
   140018f13:	(bad)  
   140018f14:	out    dx,al
   140018f15:	out    dx,al
   140018f16:	out    dx,al
   140018f17:	(bad)  
   140018f18:	in     eax,dx
   140018f19:	in     eax,dx
   140018f1a:	in     eax,dx
   140018f1b:	(bad)  
   140018f1c:	in     eax,dx
   140018f1d:	in     eax,dx
   140018f1e:	in     eax,dx
   140018f1f:	(bad)  
   140018f20:	in     eax,dx
   140018f21:	in     eax,dx
   140018f22:	in     eax,dx
   140018f23:	(bad)  
   140018f24:	in     al,dx
   140018f25:	in     al,dx
   140018f26:	in     al,dx
   140018f27:	(bad)  
   140018f28:	in     al,dx
   140018f29:	in     al,dx
   140018f2a:	in     al,dx
   140018f2b:	(bad)  
   140018f2c:	in     al,dx
   140018f2d:	in     al,dx
   140018f2e:	in     al,dx
   140018f2f:	(bad)  
   140018f30:	sti    
   140018f31:	sti    
   140018f32:	sti    
   140018f33:	call   rcx
   140018f35:	mov    ecx,0x7ca5ff9d
   140018f3a:	rex.WX call FWORD PTR [rdx-0x6900c08f]
   140018f41:	outs   dx,DWORD PTR ds:[rsi]
   140018f42:	rex (bad) 
   140018f44:	(bad)  
   140018f45:	(bad)  
   140018f46:	(bad)  
   140018f47:	call   FWORD PTR [rdx-0x1a]
   140018f4a:	(bad)  
   140018f4b:	call   QWORD PTR [rbp-0x1d]
   140018f4e:	(bad)  
   140018f4f:	call   QWORD PTR [rcx-0x20]
   140018f52:	(bad)  
   140018f53:	dec    DWORD PTR [rbp-0x23]
   140018f56:	(bad)  
   140018f57:	dec    DWORD PTR [rcx-0x27]
   140018f5a:	(bad)  
   140018f5b:	inc    DWORD PTR [rsi+rdx*8-0x1]
   140018f5f:	inc    DWORD PTR [rax-0x2d]
   140018f62:	(bad)  
   140018f63:	(bad)  
   140018f64:	cmp    al,0xcf
   140018f66:	(bad)  
   140018f67:	push   QWORD PTR [rdi]
   140018f69:	int3   
   140018f6a:	(bad)  
   140018f6b:	push   QWORD PTR [rbx]
   140018f6d:	leave  
   140018f6e:	(bad)  
   140018f6f:	jmp    FWORD PTR [rdi]
   140018f71:	(bad)  
   140018f72:	(bad)  
   140018f73:	jmp    FWORD PTR [rbx]
   140018f75:	sar    edi,0xff
   140018f78:	es mov esi,0xba22ffff
   140018f7e:	(bad)  
   140018f7f:	jmp    FWORD PTR [rip+0xffffffff8effffbc]        # 0xcf018f41
   140018f85:	fdiv   st(7),st
   140018f87:	(bad)  
   140018f88:	(bad)  
   140018f89:	(bad)  
   140018f8a:	dec    esp
	...
   140018f9c:	add    BYTE PTR [rax],al
   140018f9e:	add    BYTE PTR [rcx],bl
   140018fa0:	stc    
   140018fa1:	stc    
   140018fa2:	stc    
   140018fa3:	dec    ecx
   140018fa5:	leave  
   140018fa6:	leave  
   140018fa7:	mov    WORD PTR [rsp+rsi*1],?
   140018faa:	xor    al,0x22
   140018fac:	(bad)  
   140018fad:	(bad)  
   140018fae:	(bad)  
   140018faf:	test   cl,dh
   140018fb1:	icebp  
   140018fb2:	icebp  
   140018fb3:	dec    eax
   140018fb5:	enter  0xffc8,0xf1
   140018fb9:	icebp  
   140018fba:	icebp  
   140018fbb:	push   rax
   140018fbd:	lock lock push rax
   140018fc1:	lock lock push rax
   140018fc5:	lock lock (bad) 
   140018fc8:	jmp    0x1180179b6
   140018fcd:	xlat   BYTE PTR ds:[rbx]
   140018fce:	xlat   BYTE PTR ds:[rbx]
   140018fcf:	(bad)  
   140018fd0:	out    dx,eax
   140018fd1:	out    dx,eax
   140018fd2:	out    dx,eax
   140018fd3:	(bad)  
   140018fd4:	out    dx,al
   140018fd5:	out    dx,al
   140018fd6:	out    dx,al
   140018fd7:	(bad)  
   140018fd8:	out    dx,al
   140018fd9:	out    dx,al
   140018fda:	out    dx,al
   140018fdb:	(bad)  
   140018fdc:	out    dx,al
   140018fdd:	out    dx,al
   140018fde:	out    dx,al
   140018fdf:	(bad)  
   140018fe0:	out    dx,al
   140018fe1:	out    dx,al
   140018fe2:	out    dx,al
   140018fe3:	(bad)  
   140018fe4:	in     eax,dx
   140018fe5:	in     eax,dx
   140018fe6:	in     eax,dx
   140018fe7:	call   rdx
   140018fe9:	rcl    dl,cl
   140018feb:	(bad)  
   140018fec:	jmp    0x140018fd9
   140018fee:	jmp    0x140018fef
   140018ff0:	(bad)  
   140018ff2:	mov    ah,0xff
   140018ff4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018ff5:	ja     0x140019033
   140018ff7:	jmp    QWORD PTR [rbx-0x6100c28b]
   140018ffd:	jae    0x14001903d
   140018fff:	call   FWORD PTR [rdx-0xc08f]
   140019005:	(bad)  
   140019006:	(bad)  
   140019007:	call   FWORD PTR [rbp-0x17]
   14001900a:	(bad)  
   14001900b:	call   FWORD PTR [rcx-0x1a]
   14001900e:	(bad)  
   14001900f:	call   QWORD PTR [rbp-0x1d]
   140019012:	(bad)  
   140019013:	call   QWORD PTR [rax-0x21]
   140019016:	(bad)  
   140019017:	dec    DWORD PTR [rsp+rbx*8-0x1]
   14001901b:	dec    DWORD PTR [rax-0x27]
   14001901e:	(bad)  
   14001901f:	inc    DWORD PTR [rbx-0x2b]
   140019022:	(bad)  
   140019023:	(bad)  
   140019024:	(bad)  
   140019025:	sar    bh,cl
   140019027:	(bad)  
   140019028:	cmp    ecx,edi
   14001902a:	(bad)  
   14001902b:	push   QWORD PTR [rdi]
   14001902d:	retf   
   14001902e:	(bad)  
   14001902f:	push   QWORD PTR [rdx]
   140019031:	enter  0xffff,0x2e
   140019035:	(bad)  
   140019036:	(bad)  
   140019037:	jmp    FWORD PTR [rdx]
   140019039:	sar    bh,0xff
   14001903c:	and    eax,0x21ffffbd
   140019041:	mov    edx,0xb81fffff
   140019046:	(bad)  
   140019047:	jmp    FWORD PTR [rdx-0x1b]
   14001904d:	(bad)  
   14001904e:	inc    DWORD PTR [rcx+0x0]
	...
   14001905c:	add    BYTE PTR [rax],al
   14001905e:	add    BYTE PTR [rcx],bl
   140019060:	stc    
   140019061:	stc    
   140019062:	stc    
   140019063:	jmp    QWORD PTR [rdx]
   140019065:	and    ah,BYTE PTR [rdx]
   140019067:	xor    al,0x0
   140019069:	add    BYTE PTR [rax],al
   14001906b:	(bad)  
   14001906c:	cmp    BYTE PTR [rax],bh
   14001906e:	cmp    BYTE PTR [rsi],ah
   140019070:	repnz repnz repnz push rdx
   140019075:	repnz repnz push rcx
   140019079:	icebp  
   14001907a:	icebp  
   14001907b:	push   rcx
   14001907d:	icebp  
   14001907e:	icebp  
   14001907f:	push   rcx
   140019081:	icebp  
   140019082:	icebp  
   140019083:	push   rax
   140019085:	lock lock jmp rdi
   140019089:	out    0xe7,eax
   14001908b:	dec    ebp
   14001908d:	int    0xcd
   14001908f:	(bad)  
   140019090:	out    dx,eax
   140019091:	out    dx,eax
   140019092:	out    dx,eax
   140019093:	(bad)  
   140019094:	out    dx,eax
   140019095:	out    dx,eax
   140019096:	out    dx,eax
   140019097:	call   rbx
   140019099:	rcl    ebx,cl
   14001909b:	dec    ebp
   14001909d:	int    0xcd
   14001909f:	(bad)  
   1400190a0:	out    dx,al
   1400190a1:	out    dx,al
   1400190a2:	out    dx,al
   1400190a3:	(bad)  
   1400190a4:	out    dx,al
   1400190a5:	out    dx,al
   1400190a6:	out    dx,al
   1400190a7:	call   rdx
   1400190a9:	rcl    dl,cl
   1400190ab:	(bad)  
   1400190ac:	cld    
   1400190ad:	cld    
   1400190ae:	cld    
   1400190af:	inc    eax
   1400190b1:	xchg   edi,eax
   1400190b2:	jmp    FWORD PTR fs:[rbx-0x5900c387]
   1400190b9:	ja     0x1400190f8
   1400190bb:	jmp    QWORD PTR [rdx-0x6200c28b]
   1400190c1:	jae    0x140019101
   1400190c3:	(bad)  
   1400190c4:	(bad)  
   1400190c5:	(bad)  
   1400190c6:	(bad)  
   1400190c7:	jmp    QWORD PTR [rcx-0x14]
   1400190ca:	(bad)  
   1400190cb:	call   FWORD PTR [rcx+rbp*8-0x1]
   1400190cf:	call   FWORD PTR [rax-0x1b]
   1400190d2:	(bad)  
   1400190d3:	call   QWORD PTR [rdx+riz*8-0x1]
   1400190d7:	call   QWORD PTR [rax-0x21]
   1400190da:	(bad)  
   1400190db:	dec    DWORD PTR [rbx-0x25]
   1400190de:	(bad)  
   1400190df:	inc    DWORD PTR [rdi-0x28]
   1400190e2:	(bad)  
   1400190e3:	inc    DWORD PTR [rbx-0x2b]
   1400190e6:	(bad)  
   1400190e7:	(bad)  
   1400190e8:	ds sar edi,1
   1400190eb:	(bad)  
   1400190ec:	cmp    cl,dh
   1400190ee:	(bad)  
   1400190ef:	push   QWORD PTR [rsi]
   1400190f1:	retf   
   1400190f2:	(bad)  
   1400190f3:	push   QWORD PTR [rcx]
   1400190f5:	(bad)  
   1400190f6:	(bad)  
   1400190f7:	jmp    FWORD PTR [rip+0x29ffffc3]        # 0x16a0190c0
   1400190fd:	sar    bh,0xff
   140019100:	and    eax,0x20ffffbc
   140019105:	mov    ecx,0xc84fffff
   14001910a:	(bad)  
   14001910b:	(bad)  
   14001910c:	(bad)  
   14001910d:	(bad)  
   14001910e:	dec    esi
	...
   14001911c:	add    BYTE PTR [rax],al
   14001911e:	add    BYTE PTR [rcx],bl
   140019120:	stc    
   140019121:	stc    
   140019122:	stc    
   140019123:	inc    ebx
   140019125:	ret    
   140019126:	ret    
   140019127:	xchg   ecx,eax
   140019128:	and    eax,0xca352525
   14001912d:	retf   0x8eca
   140019130:	repz repz repz dec edx
   140019135:	retf   0xffca
   140019138:	repnz repnz repnz push rdx
   14001913d:	repnz repnz push rdx
   140019141:	repnz repnz push rcx
   140019145:	icebp  
   140019146:	icebp  
   140019147:	push   rax
   140019149:	lock lock (bad) 
   14001914c:	(bad)  
   14001914e:	(bad)  
   140019150:	lock lock lock push rax
   140019155:	lock lock push rax
   140019159:	lock lock (bad) 
   14001915c:	out    dx,eax
   14001915d:	out    dx,eax
   14001915e:	out    dx,eax
   14001915f:	(bad)  
   140019160:	out    dx,eax
   140019161:	out    dx,eax
   140019162:	out    dx,eax
   140019163:	(bad)  
   140019164:	out    dx,eax
   140019165:	out    dx,eax
   140019166:	out    dx,eax
   140019167:	call   rdx
   140019169:	rcl    dl,cl
   14001916b:	(bad)  
   14001916c:	(bad)  
   14001916d:	(bad)  
   14001916e:	(bad)  
   14001916f:	push   QWORD PTR [rbp-0x5100be7f]
   140019175:	jnp    0x1400191b2
   140019177:	jmp    FWORD PTR [rdx-0x5a00c387]
   14001917d:	ja     0x1400191bc
   14001917f:	jmp    QWORD PTR [rcx-0xc18c]
   140019185:	(bad)  
   140019186:	(bad)  
   140019187:	push   QWORD PTR [rbx-0x11]
   14001918a:	(bad)  
   14001918b:	jmp    QWORD PTR [rax-0x15]
   14001918e:	(bad)  
   14001918f:	call   FWORD PTR [rax+rbp*8-0x1]
   140019193:	call   QWORD PTR [rdi-0x1b]
   140019196:	(bad)  
   140019197:	call   QWORD PTR [rbx-0x1f]
   14001919a:	(bad)  
   14001919b:	dec    DWORD PTR [rdi-0x22]
   14001919e:	(bad)  
   14001919f:	dec    DWORD PTR [rdx-0x25]
   1400191a2:	(bad)  
   1400191a3:	inc    DWORD PTR [rsi-0x29]
   1400191a6:	(bad)  
   1400191a7:	inc    DWORD PTR [rdx-0x2c]
   1400191aa:	(bad)  
   1400191ab:	(bad)  
   1400191ac:	ds sar edi,1
   1400191af:	(bad)  
   1400191b0:	cmp    ebp,ecx
   1400191b2:	(bad)  
   1400191b3:	push   QWORD PTR [rip+0x31ffffca]        # 0x172019183
   1400191b9:	(bad)  
   1400191ba:	(bad)  
   1400191bb:	jmp    FWORD PTR [rdx+rax*8]
   1400191be:	(bad)  
   1400191bf:	jmp    FWORD PTR [rax]
   1400191c1:	mov    edi,0xbc24ffff
   1400191c6:	(bad)  
   1400191c7:	jmp    FWORD PTR [rax]
   1400191c9:	mov    ebx,0xffffffff
   1400191ce:	push   rdi
	...
   1400191dc:	add    BYTE PTR [rax],al
   1400191de:	add    BYTE PTR [rcx],bl
   1400191e0:	cli    
   1400191e1:	cli    
   1400191e2:	cli    
   1400191e3:	push   rbp
   1400191e5:	cmc    
   1400191e6:	cmc    
   1400191e7:	push   rsp
   1400191e9:	hlt    
   1400191ea:	hlt    
   1400191eb:	push   rsp
   1400191ed:	hlt    
   1400191ee:	hlt    
   1400191ef:	push   rsp
   1400191f1:	hlt    
   1400191f2:	hlt    
   1400191f3:	push   rbx
   1400191f5:	repz repz push rbx
   1400191f9:	repz repz push rbx
   1400191fd:	repz repz push rdx
   140019201:	repnz repnz push rdx
   140019205:	repnz repnz push rdx
   140019209:	repnz repnz push rcx
   14001920d:	icebp  
   14001920e:	icebp  
   14001920f:	push   rcx
   140019211:	icebp  
   140019212:	icebp  
   140019213:	push   rcx
   140019215:	icebp  
   140019216:	icebp  
   140019217:	push   rax
   140019219:	lock lock push rax
   14001921d:	lock lock push rax
   140019221:	lock lock push rax
   140019225:	lock lock (bad) 
   140019228:	out    dx,eax
   140019229:	out    dx,eax
   14001922a:	out    dx,eax
   14001922b:	(bad)  
   14001922c:	(bad)  
   14001922d:	(bad)  
   14001922e:	(bad)  
   14001922f:	push   QWORD PTR [rdi-0x4d00c681]
   140019235:	jl     0x140019271
   140019237:	jmp    FWORD PTR [rsi-0x5600c486]
   14001923d:	js     0x14001927b
   14001923f:	jmp    QWORD PTR [rbp-0xa00c28a]
   140019245:	lock (bad) 
   140019247:	call   rdi
   140019249:	cli    
   14001924a:	(bad)  
   14001924b:	push   QWORD PTR [rbx-0x11]
   14001924e:	(bad)  
   14001924f:	call   FWORD PTR [rdi-0x15]
   140019252:	(bad)  
   140019253:	call   FWORD PTR [rbx-0x19]
   140019256:	(bad)  
   140019257:	call   QWORD PTR [rdi-0x1c]
   14001925a:	(bad)  
   14001925b:	call   QWORD PTR [rdx-0x1f]
   14001925e:	(bad)  
   14001925f:	dec    DWORD PTR [rsi-0x23]
   140019262:	(bad)  
   140019263:	dec    DWORD PTR [rdx-0x26]
   140019266:	(bad)  
   140019267:	inc    DWORD PTR [rbp-0x29]
   14001926a:	(bad)  
   14001926b:	inc    DWORD PTR [rcx-0x2d]
   14001926e:	(bad)  
   14001926f:	(bad)  
   140019270:	cmp    eax,0x38ffffd0
   140019275:	int    0xff
   140019277:	push   QWORD PTR [rcx+rcx*8]
   14001927a:	(bad)  
   14001927b:	push   QWORD PTR [rax]
   14001927d:	(bad)  
   140019280:	sub    al,0xc2
   140019282:	(bad)  
   140019283:	jmp    QWORD PTR [rdi]
   140019285:	mov    edi,0xbb23ffff
   14001928a:	(bad)  
   14001928b:	(bad)  
   14001928c:	(bad)  
   14001928d:	(bad)  
   14001928e:	(bad)  
   14001928f:	inc    DWORD PTR [rax]
	...
   14001929d:	add    BYTE PTR [rax],al
   14001929f:	sbb    edx,edi
   1400192a1:	cli    
   1400192a2:	cli    
   1400192a3:	dec    esp
   1400192a5:	int3   
   1400192a6:	int3   
   1400192a7:	mov    WORD PTR [rip+0xffffffffd9223535],?        # 0x11923c7e2
   1400192ad:	(bad)  
   1400192af:	test   ah,dh
   1400192b1:	hlt    
   1400192b2:	hlt    
   1400192b3:	dec    ebx
   1400192b5:	retf   
   1400192b6:	retf   
   1400192b7:	push   rsp
   1400192b9:	hlt    
   1400192ba:	hlt    
   1400192bb:	jmp    rdi
   1400192bd:	out    0xe7,eax
   1400192bf:	push   rbx
   1400192c1:	repz repz jmp rsi
   1400192c5:	out    0xe6,al
   1400192c7:	push   rbx
   1400192c9:	repz repz push rdx
   1400192cd:	repnz bnd jmp rdi
   1400192d1:	out    0xe7,eax
   1400192d3:	(bad)  
   1400192d4:	(bad)  
   1400192d6:	fdiv   st(7),st
   1400192d8:	in     al,0xe4
   1400192da:	in     al,0xff
   1400192dc:	in     al,0xe4
   1400192de:	in     al,0xff
   1400192e0:	out    0xe6,al
   1400192e2:	out    0xff,al
   1400192e4:	jrcxz  0x1400192c9
   1400192e6:	jrcxz  0x1400192e7
   1400192e8:	(bad)  
   1400192e9:	(bad)  
   1400192ea:	(bad)  
   1400192eb:	(bad)  
   1400192ec:	(bad)  
   1400192ed:	(bad)  
   1400192ee:	(bad)  
   1400192ef:	(bad)  
   1400192f0:	mov    edx,0xb6ff3980
   1400192f5:	jle    0x140019330
   1400192f7:	push   QWORD PTR [rcx-0x5200c584]
   1400192fd:	jp     0x14001933a
   1400192ff:	jmp    FWORD PTR [rax-0x4300c388]
   140019305:	cdq    
   140019306:	outs   dx,DWORD PTR ds:[rsi]
   140019307:	push   rsp
   140019309:	out    dx,eax
   14001930a:	jmp    0x14001930e
   14001930f:	(bad)  
   140019310:	(bad)  
   140019311:	(bad)  
   140019312:	(bad)  
   140019313:	(bad)  
   140019314:	(bad)  
   140019315:	(bad)  
   140019316:	(bad)  
   140019317:	(bad)  
   140019318:	(bad)  
   140019319:	(bad)  
   14001931a:	(bad)  
   14001931b:	(bad)  
   14001931c:	(bad)  
   14001931d:	(bad)  
   14001931e:	(bad)  
   14001931f:	(bad)  
   140019320:	(bad)  
   140019321:	(bad)  
   140019322:	(bad)  
   140019323:	(bad)  
   140019324:	(bad)  
   140019325:	(bad)  
   140019326:	(bad)  
   140019327:	(bad)  
   140019328:	(bad)  
   140019329:	(bad)  
   14001932a:	(bad)  
   14001932b:	(bad)  
   14001932c:	(bad)  
   14001932d:	(bad)  
   14001932e:	(bad)  
   14001932f:	(bad)  
   140019330:	jmp    0x1ae01932f
   140019335:	(bad)  
   140019337:	(bad)  
   140019338:	cmp    ah,cl
   14001933a:	(bad)  
   14001933b:	push   QWORD PTR [rbx]
   14001933d:	leave  
   14001933e:	(bad)  
   14001933f:	jmp    FWORD PTR [rdi]
   140019341:	(bad)  
   140019344:	sub    eax,ecx
   140019346:	(bad)  
   140019347:	jmp    QWORD PTR [rdi]
   140019349:	mov    esi,0xffffffff
   14001934e:	(bad)  
   14001934f:	inc    DWORD PTR [rax]
	...
   14001935d:	add    BYTE PTR [rax],al
   14001935f:	sbb    ebx,edi
   140019361:	sti    
   140019362:	sti    
   140019363:	jmp    QWORD PTR [rdx]
   140019365:	and    ah,BYTE PTR [rdx]
   140019367:	xor    al,0x0
   140019369:	add    BYTE PTR [rax],al
   14001936b:	(bad)  
   14001936c:	cmp    bh,BYTE PTR [rdx]
   14001936e:	cmp    ah,BYTE PTR [rsi]
   140019370:	cmc    
   140019371:	cmc    
   140019372:	cmc    
   140019373:	push   rbp
   140019375:	cmc    
   140019376:	cmc    
   140019377:	push   rbp
   140019379:	cmc    
   14001937a:	cmc    
   14001937b:	call   rdi
   14001937d:	xlat   BYTE PTR ds:[rbx]
   14001937e:	xlat   BYTE PTR ds:[rbx]
   14001937f:	push   rbx
   140019381:	repz repz call rsp
   140019385:	(bad)  
   140019386:	(bad)  
   140019387:	push   rdx
   140019389:	repnz repnz push rbx
   14001938d:	repz repz jmp rsi
   140019391:	out    0xe6,al
   140019393:	call   rcx
   140019395:	rcl    ecx,1
   140019397:	dec    edi
   140019399:	iret   
   14001939a:	iret   
   14001939b:	dec    esp
   14001939d:	int3   
   14001939e:	int3   
   14001939f:	call   rax
   1400193a1:	rcl    al,1
   1400193a3:	dec    esi
   1400193a5:	(bad)  
   1400193a6:	(bad)  
   1400193a7:	call   rbp
   1400193a9:	(bad)  
   1400193aa:	(bad)  
   1400193ab:	(bad)  
   1400193ac:	(bad)  
   1400193ad:	(bad)  
   1400193ae:	(bad)  
   1400193af:	(bad)  
   1400193b0:	mov    esi,0xb9ff3882
   1400193b5:	cmp    BYTE PTR [rcx],0xff
   1400193b8:	mov    ch,0x7e
   1400193ba:	cmp    bh,bh
   1400193bc:	mov    al,0x7c
   1400193be:	cmp    edi,edi
   1400193c0:	lods   al,BYTE PTR ds:[rsi]
   1400193c1:	jp     0x1400193fe
   1400193c3:	jmp    QWORD PTR [rdi-0x5c00c389]
   1400193c9:	jne    0x140019408
   1400193cb:	call   FWORD PTR [rsi-0x6500c18d]
   1400193d1:	jno    0x140019412
   1400193d3:	call   QWORD PTR [rbp-0x6e00bf91]
   1400193d9:	ins    DWORD PTR es:[rdi],dx
   1400193da:	dec    DWORD PTR [r11+rbp*2+0x6988ff42]
   1400193e2:	rex.XB inc DWORD PTR [r11+0x7fff4367]
   1400193e9:	rex.R dec DWORD PTR fs:[rbx-0x2100a58b]
   1400193f1:	xlat   BYTE PTR ds:[rbx]
   1400193f2:	sar    bh,1
   1400193f4:	jmp    0x17c0193f3
   1400193f9:	iret   
   1400193fa:	(bad)  
   1400193fb:	push   QWORD PTR [rdi]
   1400193fd:	int3   
   1400193fe:	(bad)  
   1400193ff:	push   QWORD PTR [rbx]
   140019401:	enter  0xffff,0x2e
   140019405:	(bad)  
   140019406:	(bad)  
   140019407:	jmp    FWORD PTR [rdx]
   140019409:	sar    edi,0xff
   14001940c:	(bad)  
   14001940d:	(bad)  
   14001940e:	(bad)  
   14001940f:	inc    DWORD PTR [rax]
	...
   14001941d:	add    BYTE PTR [rax],al
   14001941f:	sbb    ebx,edi
   140019421:	sti    
   140019422:	sti    
   140019423:	inc    edi
   140019425:	mov    edi,0x25252591
   14001942b:	xor    eax,0x8ecccccc
   140019430:	cmc    
   140019431:	cmc    
   140019432:	cmc    
   140019433:	dec    esp
   140019435:	int3   
   140019436:	int3   
   140019437:	push   rbp
   140019439:	cmc    
   14001943a:	cmc    
   14001943b:	call   rbp
   14001943d:	(bad)  
   14001943e:	(bad)  
   14001943f:	push   rdx
   140019441:	repnz repnz dec edx
   140019445:	retf   0xffca
   140019448:	out    0xe6,al
   14001944a:	out    0xff,al
   14001944c:	hlt    
   14001944d:	hlt    
   14001944e:	hlt    
   14001944f:	jmp    rdi
   140019451:	out    0xe7,eax
   140019453:	jmp    rax
   140019455:	loopne 0x140019437
   140019457:	jmp    rbp
   140019459:	in     eax,0xe5
   14001945b:	jmp    rsp
   14001945d:	in     al,0xe4
   14001945f:	jmp    rsp
   140019461:	in     al,0xe4
   140019463:	(bad)  
   140019464:	(bad)  
   140019465:	(bad)  
   140019466:	(bad)  
   140019467:	call   rsp
   140019469:	(bad)  
   14001946a:	(bad)  
   14001946b:	(bad)  
   14001946c:	(bad)  
   14001946d:	(bad)  
   14001946e:	(bad)  
   14001946f:	inc    ebx
   140019471:	mov    BYTE PTR [rsi],bh
   140019473:	(bad)  
   140019474:	mov    ebp,0xb8ff3882
   140019479:	cmp    BYTE PTR [rcx],0xff
   14001947c:	mov    ah,0x7d
   14001947e:	cmp    bh,bh
   140019480:	mov    al,0x7b
   140019482:	cmp    edi,edi
   140019484:	stos   DWORD PTR es:[rdi],eax
   140019485:	jns    0x1400194c3
   140019487:	jmp    QWORD PTR [rdi-0x5d00c389]
   14001948d:	jne    0x1400194cc
   14001948f:	call   FWORD PTR [rsi-0x6600c18d]
   140019495:	jno    0x1400194d6
   140019497:	call   QWORD PTR [rbp-0x6f00bf91]
   14001949d:	ins    DWORD PTR es:[rdi],dx
   14001949e:	dec    DWORD PTR [r10+rbp*2+0x6887ff42]
   1400194a6:	rex.XB inc DWORD PTR [r11+0x7eff4466]
   1400194ad:	rex.RB dec DWORD PTR fs:[r11-0xa58b]
   1400194b5:	(bad)  
   1400194b6:	(bad)  
   1400194b7:	(bad)  
   1400194b8:	(bad)  
   1400194b9:	sar    bh,cl
   1400194bb:	(bad)  
   1400194bc:	cmp    cl,dh
   1400194be:	(bad)  
   1400194bf:	push   QWORD PTR [rsi]
   1400194c1:	retf   
   1400194c2:	(bad)  
   1400194c3:	push   QWORD PTR [rdx]
   1400194c5:	enter  0xffff,0x35
   1400194c9:	(bad)  
   1400194cc:	(bad)  
   1400194cd:	(bad)  
   1400194ce:	push   rdi
	...
   1400194dc:	add    BYTE PTR [rax],al
   1400194de:	add    BYTE PTR [rcx],bl
   1400194e0:	cld    
   1400194e1:	cld    
   1400194e2:	cld    
   1400194e3:	(bad)  
   1400194e4:	clc    
   1400194e5:	clc    
   1400194e6:	clc    
   1400194e7:	push   rdi
   1400194e9:	div    edi
   1400194eb:	push   rdi
   1400194ed:	div    edi
   1400194ef:	jmp    FWORD PTR [rax-0x54005758]
   1400194f5:	stos   DWORD PTR es:[rdi],eax
   1400194f6:	stos   DWORD PTR es:[rdi],eax
   1400194f7:	push   rsi
   1400194f9:	div    dh
   1400194fb:	push   rsi
   1400194fd:	div    dh
   1400194ff:	push   rsi
   140019501:	div    dh
   140019503:	push   rbp
   140019505:	cmc    
   140019506:	cmc    
   140019507:	push   rbp
   140019509:	cmc    
   14001950a:	cmc    
   14001950b:	push   rbp
   14001950d:	cmc    
   14001950e:	cmc    
   14001950f:	push   rsp
   140019511:	hlt    
   140019512:	hlt    
   140019513:	push   rsp
   140019515:	hlt    
   140019516:	hlt    
   140019517:	push   rsp
   140019519:	hlt    
   14001951a:	hlt    
   14001951b:	push   rbx
   14001951d:	repz repz push rbx
   140019521:	repz repz push rbx
   140019525:	repz repz push rdx
   140019529:	repnz repnz (bad) 
   14001952c:	std    
   14001952d:	std    
   14001952e:	std    
   14001952f:	call   rax
   140019531:	sahf   
   140019532:	(bad)  
   140019533:	inc    ecx
   140019535:	xor    DWORD PTR [rdi],0xffffffff
   140019538:	mov    esp,0xb8ff3881
   14001953d:	jg     0x140019578
   14001953f:	push   QWORD PTR [rbx-0x5000c583]
   140019545:	jnp    0x140019582
   140019547:	jmp    FWORD PTR [rdx-0x5900c387]
   14001954d:	ja     0x14001958c
   14001954f:	jmp    QWORD PTR [rcx-0x6200c18b]
   140019555:	jb     0x140019595
   140019557:	call   FWORD PTR [rax-0x6b00c090]
   14001955d:	outs   dx,BYTE PTR ds:[rsi]
   14001955e:	rex dec DWORD PTR [rdi-0x7400be94]
   140019565:	push   0x42
   140019567:	inc    DWORD PTR [rsi-0x7d00bc98]
   14001956d:	data16 rex.R (bad) 
   140019570:	jge    0x1400195d6
   140019572:	rex.RB (bad) 
   140019574:	(bad)  
   140019575:	(bad)  
   140019576:	(bad)  
   140019577:	inc    DWORD PTR [rdx-0x2c]
   14001957a:	(bad)  
   14001957b:	(bad)  
   14001957c:	ds sar edi,1
   14001957f:	(bad)  
   140019580:	cmp    cl,dh
   140019582:	(bad)  
   140019583:	push   QWORD PTR [rip+0x5effffca]        # 0x19f019553
   140019589:	sar    edi,cl
   14001958b:	(bad)  
   14001958c:	(bad)  
   14001958d:	(bad)  
   14001958e:	dec    esi
	...
   14001959c:	add    BYTE PTR [rax],al
   14001959e:	add    BYTE PTR [rcx],bl
   1400195a0:	cld    
   1400195a1:	cld    
   1400195a2:	cld    
   1400195a3:	dec    edi
   1400195a5:	iret   
   1400195a6:	iret   
   1400195a7:	mov    WORD PTR [rip+0xffffffffdc223535],?        # 0x11c23cae2
   1400195ad:	(bad)  
   1400195af:	test   al,bh
   1400195b1:	clc    
   1400195b2:	clc    
   1400195b3:	inc    DWORD PTR [rsi-0x5300797a]
   1400195b9:	lods   al,BYTE PTR ds:[rsi]
   1400195ba:	lods   al,BYTE PTR ds:[rsi]
   1400195bb:	push   rdi
   1400195bd:	div    edi
   1400195bf:	push   rsi
   1400195c1:	div    dh
   1400195c3:	push   rsi
   1400195c5:	div    dh
   1400195c7:	push   rsi
   1400195c9:	div    dh
   1400195cb:	push   rbp
   1400195cd:	cmc    
   1400195ce:	cmc    
   1400195cf:	push   rbp
   1400195d1:	cmc    
   1400195d2:	cmc    
   1400195d3:	push   rbp
   1400195d5:	cmc    
   1400195d6:	cmc    
   1400195d7:	push   rsp
   1400195d9:	hlt    
   1400195da:	hlt    
   1400195db:	push   rsp
   1400195dd:	hlt    
   1400195de:	hlt    
   1400195df:	push   rsp
   1400195e1:	hlt    
   1400195e2:	hlt    
   1400195e3:	push   rsp
   1400195e5:	hlt    
   1400195e6:	hlt    
   1400195e7:	push   rbx
   1400195e9:	repz repz (bad) 
   1400195ec:	clc    
   1400195ed:	clc    
   1400195ee:	clc    
   1400195ef:	(bad)  
   1400195f0:	call   0x1030149c6
   1400195f5:	test   BYTE PTR [rdi],dh
   1400195f7:	inc    eax
   1400195f9:	xor    DWORD PTR [rdi],0xffffffff
   1400195fc:	mov    ebx,0xb7ff3881
   140019601:	jg     0x14001963c
   140019603:	push   QWORD PTR [rdx-0x5100c583]
   140019609:	jnp    0x140019646
   14001960b:	jmp    FWORD PTR [rcx-0x5a00c388]
   140019611:	jbe    0x140019650
   140019613:	jmp    QWORD PTR [rax-0x6300c18c]
   140019619:	jb     0x14001965a
   14001961b:	call   QWORD PTR [rdi-0x6c00bf90]
   140019621:	outs   dx,BYTE PTR ds:[rsi]
   140019622:	rex dec DWORD PTR [rsi-0x7500be94]
   140019629:	push   0x42
   14001962b:	inc    DWORD PTR [rbp-0x7e00bc99]
   140019631:	gs rex.R (bad) 
   140019634:	(bad)  
   140019635:	(bad)  
   140019636:	(bad)  
   140019637:	inc    DWORD PTR [rsi-0x29]
   14001963a:	(bad)  
   14001963b:	inc    DWORD PTR [rcx-0x2c]
   14001963e:	(bad)  
   14001963f:	(bad)  
   140019640:	cmp    eax,0x39ffffd0
   140019645:	int    0xff
   140019647:	push   QWORD PTR [rbx-0x15]
   14001964d:	(bad)  
   14001964e:	inc    DWORD PTR [rcx+0x0]
	...
   14001965c:	add    BYTE PTR [rax],al
   14001965e:	add    BYTE PTR [rcx],bl
   140019660:	cld    
   140019661:	cld    
   140019662:	cld    
   140019663:	jmp    QWORD PTR [rdx]
   140019665:	and    ah,BYTE PTR [rdx]
   140019667:	xor    al,0x0
   140019669:	add    BYTE PTR [rax],al
   14001966b:	(bad)  
   14001966c:	cmp    edi,DWORD PTR [rbx]
   14001966e:	cmp    esp,DWORD PTR [rsi]
   140019670:	clc    
   140019671:	clc    
   140019672:	clc    
   140019673:	push   rbp
   140019675:	cmc    
   140019676:	cmc    
   140019677:	dec    DWORD PTR [rax-0x53007778]
   14001967d:	lods   al,BYTE PTR ds:[rsi]
   14001967e:	lods   al,BYTE PTR ds:[rsi]
   14001967f:	push   rdi
   140019681:	div    edi
   140019683:	push   rdi
   140019685:	div    edi
   140019687:	push   rsi
   140019689:	div    dh
   14001968b:	push   rsi
   14001968d:	div    dh
   14001968f:	push   rsi
   140019691:	div    dh
   140019693:	push   rsi
   140019695:	div    dh
   140019697:	push   rbp
   140019699:	cmc    
   14001969a:	cmc    
   14001969b:	push   rbp
   14001969d:	cmc    
   14001969e:	cmc    
   14001969f:	push   rbp
   1400196a1:	cmc    
   1400196a2:	cmc    
   1400196a3:	push   rsp
   1400196a5:	hlt    
   1400196a6:	hlt    
   1400196a7:	push   rsp
   1400196a9:	hlt    
   1400196aa:	hlt    
   1400196ab:	push   rsp
   1400196ad:	hlt    
   1400196ae:	hlt    
   1400196af:	(bad)  
   1400196b0:	std    
   1400196b1:	std    
   1400196b2:	cld    
   1400196b3:	jmp    rcx
   1400196b5:	rcr    DWORD PTR [rdx+0x438cc5ff],0xff
   1400196bc:	mov    edi,0xbbff3883
   1400196c1:	cmp    BYTE PTR [rcx],0xff
   1400196c4:	mov    dh,0x7e
   1400196c6:	cmp    edi,edi
   1400196c8:	mov    dl,0x7c
   1400196ca:	cmp    bh,bh
   1400196cc:	lods   eax,DWORD PTR ds:[rsi]
   1400196cd:	jp     0x14001970a
   1400196cf:	jmp    FWORD PTR [rax-0x5b00c388]
   1400196d5:	jbe    0x140019714
   1400196d7:	jmp    QWORD PTR [rax-0x6400c18c]
   1400196dd:	jb     0x14001971e
   1400196df:	call   QWORD PTR [rdi-0x6d00bf90]
   1400196e5:	ins    DWORD PTR es:[rdi],dx
   1400196e6:	dec    DWORD PTR [r14-0x7600be95]
   1400196ed:	imul   eax,DWORD PTR [rdx-0x1],0xff436785
   1400196f4:	(bad)  
   1400196f5:	(bad)  
   1400196f6:	(bad)  
   1400196f7:	dec    DWORD PTR [rcx-0x26]
   1400196fa:	(bad)  
   1400196fb:	inc    DWORD PTR [rbp-0x2a]
   1400196fe:	(bad)  
   1400196ff:	dec    DWORD PTR [rsi+rdx*8-0x1]
   140019703:	call   FWORD PTR [rbp-0x1000019]
   140019709:	(bad)  
   14001970a:	dec    ebx
	...
   14001971c:	add    BYTE PTR [rax],al
   14001971e:	add    BYTE PTR [rcx],bl
   140019720:	std    
   140019721:	std    
   140019722:	std    
   140019723:	dec    ecx
   140019725:	leave  
   140019726:	leave  
   140019727:	xchg   ecx,eax
   140019728:	push   rcx
   140019729:	push   rcx
   14001972a:	push   rcx
   14001972b:	rex.WX outs dx,BYTE PTR ds:[rsi]
   14001972d:	outs   dx,BYTE PTR ds:[rsi]
   14001972e:	outs   dx,BYTE PTR ds:[rsi]
   14001972f:	retf   0xf7f7
   140019732:	idiv   edi
   140019734:	(bad)  
   140019735:	(bad)  
   140019736:	(bad)  
   140019737:	dec    esp
   140019739:	int3   
   14001973a:	int3   
   14001973b:	(bad)  
   14001973c:	jle    0x1400197bc
   14001973e:	jle    0x14001973f
   140019740:	lods   al,BYTE PTR ds:[rsi]
   140019741:	lods   al,BYTE PTR ds:[rsi]
   140019742:	lods   al,BYTE PTR ds:[rsi]
   140019743:	(bad)  
   140019744:	clc    
   140019745:	clc    
   140019746:	clc    
   140019747:	push   rdi
   140019749:	div    edi
   14001974b:	push   rdi
   14001974d:	div    edi
   14001974f:	push   rdi
   140019751:	div    edi
   140019753:	push   rsi
   140019755:	div    dh
   140019757:	push   rsi
   140019759:	div    dh
   14001975b:	push   rsi
   14001975d:	div    dh
   14001975f:	push   rbp
   140019761:	cmc    
   140019762:	cmc    
   140019763:	push   rbp
   140019765:	cmc    
   140019766:	cmc    
   140019767:	push   rbp
   140019769:	cmc    
   14001976a:	cmc    
   14001976b:	push   rsp
   14001976d:	hlt    
   14001976e:	hlt    
   14001976f:	push   rbp
   140019771:	cmc    
   140019772:	cmc    
   140019773:	(bad)  
   140019774:	sti    
   140019775:	sti    
   140019776:	sti    
   140019777:	(bad)  
   140019778:	(bad)  
   140019779:	(bad)  
   14001977a:	(bad)  
   14001977b:	(bad)  
   14001977c:	(bad)  
   14001977d:	(bad)  
   14001977e:	(bad)  
   14001977f:	(bad)  
   140019780:	(bad)  
   140019781:	(bad)  
   140019782:	(bad)  
   140019783:	(bad)  
   140019784:	(bad)  
   140019785:	(bad)  
   140019786:	(bad)  
   140019787:	(bad)  
   140019788:	(bad)  
   140019789:	(bad)  
   14001978a:	(bad)  
   14001978b:	(bad)  
   14001978c:	(bad)  
   14001978d:	(bad)  
   14001978e:	(bad)  
   14001978f:	(bad)  
   140019790:	(bad)  
   140019791:	(bad)  
   140019792:	(bad)  
   140019793:	(bad)  
   140019794:	(bad)  
   140019795:	(bad)  
   140019796:	(bad)  
   140019797:	(bad)  
   140019798:	(bad)  
   140019799:	(bad)  
   14001979a:	(bad)  
   14001979b:	call   rdi
   14001979d:	(bad)  
   14001979e:	scas   al,BYTE PTR es:[rdi]
   14001979f:	call   FWORD PTR [rdx-0x6900c08f]
   1400197a5:	outs   dx,DWORD PTR ds:[rsi]
   1400197a6:	rex call QWORD PTR [rcx-0x7200be93]
   1400197ad:	imul   eax,DWORD PTR [rdx-0x1],0xffffff88
   1400197b1:	imul   eax,DWORD PTR [rbx-0x1],0xffffffff
   1400197b8:	(bad)  
   1400197b9:	(bad)  
   1400197ba:	(bad)  
   1400197bb:	(bad)  
   1400197bc:	(bad)  
   1400197bd:	(bad)  
   1400197be:	(bad)  
   1400197bf:	(bad)  
   1400197c0:	(bad)  
   1400197c1:	(bad)  
   1400197c2:	push   rcx
   1400197c4:	(bad)  
   1400197c5:	(bad)  
   1400197c6:	call   FWORD PTR [rdx+0x0]
	...
   1400197dc:	add    BYTE PTR [rax],al
   1400197de:	add    BYTE PTR [rcx],bl
   1400197e0:	std    
   1400197e1:	std    
   1400197e2:	std    
   1400197e3:	push   rbx
   1400197e5:	repz repz dec DWORD PTR [rax+0x48]
   1400197ea:	rex.W jmp QWORD PTR [rdx]
   1400197ed:	and    ah,BYTE PTR [rdx]
   1400197ef:	jmp    FWORD PTR [rcx-0x5005657]
   1400197f5:	cli    
   1400197f6:	cli    
   1400197f7:	(bad)  
   1400197f8:	in     al,dx
   1400197f9:	in     al,dx
   1400197fa:	in     al,dx
   1400197fb:	dec    DWORD PTR [rcx+0x76ff8989]
   140019801:	jbe    0x140019879
   140019803:	jmp    FWORD PTR [rsp+rbp*4-0x7070054]
   14001980a:	clc    
   14001980b:	(bad)  
   14001980c:	clc    
   14001980d:	clc    
   14001980e:	clc    
   14001980f:	push   rdi
   140019811:	div    edi
   140019813:	push   rdi
   140019815:	div    edi
   140019817:	push   rdi
   140019819:	div    edi
   14001981b:	push   rsi
   14001981d:	div    dh
   14001981f:	push   rsi
   140019821:	div    dh
   140019823:	push   rsi
   140019825:	div    dh
   140019827:	push   rsi
   140019829:	div    dh
   14001982b:	push   rbp
   14001982d:	cmc    
   14001982e:	cmc    
   14001982f:	push   rbp
   140019831:	cmc    
   140019832:	cmc    
   140019833:	push   rbp
   140019835:	cmc    
   140019836:	cmc    
   140019837:	push   rsp
   140019839:	hlt    
   14001983a:	hlt    
   14001983b:	push   rsp
   14001983d:	hlt    
   14001983e:	hlt    
   14001983f:	push   rsp
   140019841:	hlt    
   140019842:	hlt    
   140019843:	(bad)  
   140019844:	(bad)  
   140019845:	(bad)  
   140019846:	(bad)  
   140019847:	(bad)  
   140019848:	mov    ecx,0xb4ff3980
   14001984d:	jle    0x140019889
   14001984f:	push   QWORD PTR [rax-0x5400c485]
   140019855:	jns    0x140019893
   140019857:	jmp    QWORD PTR [rdi-0x5d00c389]
   14001985d:	jne    0x14001989c
   14001985f:	call   FWORD PTR [rsi-0x6600c18d]
   140019865:	jno    0x1400198a6
   140019867:	call   QWORD PTR [rbp-0x6f00bf91]
   14001986d:	ins    DWORD PTR es:[rdi],dx
   14001986e:	dec    DWORD PTR [r11+rbp*2-0xbe]
   140019876:	(bad)  
   140019877:	inc    DWORD PTR [rax]
	...
   14001989d:	add    BYTE PTR [rax],al
   14001989f:	sbb    esi,edi
   1400198a1:	(bad)  
   1400198a2:	(bad)  
   1400198a3:	call   QWORD PTR [rax+0x3ac19090]
   1400198a9:	cmp    bh,BYTE PTR [rdx]
   1400198ab:	jmp    QWORD PTR [rdi]
   1400198ad:	(bad)  
   1400198ae:	(bad)  
   1400198af:	call   FWORD PTR [rdi+0x5f]
   1400198b2:	pop    rdi
   1400198b3:	jmp    QWORD PTR [rbp-0x6005a5b]
   1400198b9:	stc    
   1400198ba:	stc    
   1400198bb:	push   QWORD PTR [rbx+0x73]
   1400198be:	jae    0x1400198bf
   1400198c0:	je     0x140019936
   1400198c2:	je     0x1400198c3
   1400198c4:	mov    WORD PTR [rsp+rcx*4-0x57575701],cs
   1400198cb:	(bad)  
   1400198cc:	fstp   st(5)
   1400198ce:	(bad)  
   1400198d0:	in     eax,0xe5
   1400198d2:	in     eax,0xff
   1400198d4:	jmp    0x1390182c2
   1400198d9:	clc    
   1400198da:	clc    
   1400198db:	push   rdi
   1400198dd:	div    edi
   1400198df:	push   rdi
   1400198e1:	div    edi
   1400198e3:	push   rdi
   1400198e5:	div    edi
   1400198e7:	push   rsi
   1400198e9:	div    dh
   1400198eb:	push   rbp
   1400198ed:	cmc    
   1400198ee:	cmc    
   1400198ef:	(bad)  
   1400198f0:	(bad)  
   1400198f2:	fdiv   st(7),st
   1400198f4:	out    0xe6,al
   1400198f6:	out    0xff,al
   1400198f8:	jmp    0x1400198e5
   1400198fa:	jmp    0x1400198fb
   1400198fc:	(bad)  
   1400198fe:	fdivp  st(7),st
   140019900:	fcmovu st,st(2)
   140019902:	(bad)  
   140019904:	(bad)  
   140019905:	(bad)  
   140019906:	(bad)  
   140019907:	(bad)  
   140019908:	mov    esp,0xcfff3881
   14001990d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001990e:	jne    0x14001990f
   140019910:	cld    
   140019911:	cli    
   140019912:	idiv   edi
   140019914:	(bad)  
   140019915:	movabs ds:0x77a6ff3c79aaff76,eax
   14001991e:	cmp    eax,0x3d75a2ff
   140019923:	call   FWORD PTR [rbp-0x6600c18d]
   140019929:	jo     0x14001996a
   14001992b:	call   QWORD PTR [rsi+rbp*2+0x6c90ff40]
   140019932:	rex.B (bad) 
   140019934:	(bad)  
   140019935:	(bad)  
   140019936:	(bad)  
   140019937:	inc    DWORD PTR [rax]
	...
   140019951:	add    BYTE PTR [rax],al
   140019953:	add    BYTE PTR [rsp+rdi*4+0x38380fbc],bh
   14001995a:	cmp    BYTE PTR [rax+rax*1+0x0],dl
   14001995e:	add    BYTE PTR [rcx],bl
   140019960:	(bad)  
   140019961:	(bad)  
   140019962:	(bad)  
   140019963:	jmp    FWORD PTR [rip+0x66362d2d]        # 0x1a637c696
   140019969:	data16 data16 outs dx,BYTE PTR ds:[rsi]
   14001996c:	fs fs fs jmp 0x140019996
   140019971:	and    eax,0x2222ff25
   140019976:	and    bh,bh
   140019978:	movabs ds:0x53ff4f4f4fffa2a2,al
   140019981:	push   rbx
   140019982:	push   rbx
   140019983:	dec    DWORD PTR [rbp-0x69007273]
   140019989:	xchg   esi,eax
   14001998a:	xchg   esi,eax
   14001998b:	call   QWORD PTR [rsp+rdx*4-0x2525006c]
   140019992:	(bad)  
   140019994:	ret    0xc2c2
   140019997:	push   rsi
   140019999:	div    dh
   14001999b:	(bad)  
   14001999c:	clc    
   14001999d:	clc    
   14001999e:	clc    
   14001999f:	call   rcx
   1400199a1:	rcl    ecx,1
   1400199a3:	call   rdi
   1400199a5:	xlat   BYTE PTR ds:[rbx]
   1400199a6:	xlat   BYTE PTR ds:[rbx]
   1400199a7:	push   rdi
   1400199a9:	div    edi
   1400199ab:	push   rdi
   1400199ad:	div    edi
   1400199af:	(bad)  
   1400199b0:	fcomp  st(0)
   1400199b2:	fdivr  st,st(7)
   1400199b4:	(bad)  
   1400199b6:	fdiv   st(7),st
   1400199b8:	(bad)  
   1400199b9:	(bad)  
   1400199ba:	(bad)  
   1400199bb:	dec    esi
   1400199bd:	(bad)  
   1400199be:	(bad)  
   1400199bf:	dec    ebx
   1400199c1:	retf   
   1400199c2:	retf   
   1400199c3:	(bad)  
   1400199c4:	(bad)  
   1400199c5:	(bad)  
   1400199c6:	(bad)  
   1400199c7:	inc    esp
   1400199c9:	mov    eax,DWORD PTR [rdi+rdi*8-0x2e]
   1400199cd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400199ce:	jne    0x1400199cf
   1400199d0:	cld    
   1400199d1:	cli    
   1400199d2:	idiv   bh
   1400199d4:	retf   0x76a4
   1400199d7:	jmp    FWORD PTR [rsi-0x5500c485]
   1400199dd:	jns    0x140019a1b
   1400199df:	jmp    QWORD PTR [rbp-0x5e00c28a]
   1400199e5:	je     0x140019a25
   1400199e7:	call   FWORD PTR [rdx+rsi*2+0x7098ff3f]
   1400199ee:	(bad)  
   1400199ef:	call   FWORD PTR [rdx-0xb288]
   1400199f5:	(bad)  
   1400199f6:	push   rax
	...
   140019a18:	cmp    al,0x3c
   140019a1a:	cmp    al,0x89
   140019a1c:	rex.WRB
   140019a1d:	rex.WRB
   140019a1e:	rex.WRB cmp r13,0xffffffffccfffdfd
   140019a25:	int3   
   140019a26:	int3   
   140019a27:	xchg   ecx,eax
   140019a28:	es es es xor eax,0xacb5b5b5
   140019a30:	cmp    edi,DWORD PTR [rbx]
   140019a32:	cmp    edi,edi
   140019a34:	cmp    al,0x3c
   140019a36:	cmp    al,0xff
   140019a38:	js     0x140019ab2
   140019a3a:	js     0x140019a3b
   140019a3c:	push   rcx
   140019a3d:	push   rcx
   140019a3e:	push   rcx
   140019a3f:	(bad)  
   140019a40:	cmp    edi,DWORD PTR [rbx]
   140019a42:	cmp    edi,edi
   140019a44:	rex.WXB
   140019a45:	rex.WXB
   140019a46:	rex.WXB push r8
   140019a49:	lock lock inc ebp
   140019a4d:	(bad)
   140019a50:	hlt    
   140019a51:	hlt    
   140019a52:	hlt    
   140019a53:	push   rsi
   140019a55:	div    dh
   140019a57:	push   rdi
   140019a59:	div    edi
   140019a5b:	(bad)  
   140019a5c:	stc    
   140019a5d:	stc    
   140019a5e:	stc    
   140019a5f:	(bad)  
   140019a60:	clc    
   140019a61:	clc    
   140019a62:	clc    
   140019a63:	(bad)  
   140019a64:	clc    
   140019a65:	clc    
   140019a66:	clc    
   140019a67:	(bad)  
   140019a68:	clc    
   140019a69:	clc    
   140019a6a:	clc    
   140019a6b:	push   rdi
   140019a6d:	div    edi
   140019a6f:	(bad)  
   140019a70:	fcmovu st,st(2)
   140019a72:	(bad)  
   140019a74:	in     al,dx
   140019a75:	in     al,dx
   140019a76:	in     al,dx
   140019a77:	(bad)  
   140019a78:	call   0x12f018365
   140019a7d:	out    dx,al
   140019a7e:	out    dx,al
   140019a7f:	jmp    rsi
   140019a81:	out    0xe6,al
   140019a83:	(bad)  
   140019a84:	sti    
   140019a85:	sti    
   140019a86:	sti    
   140019a87:	jmp    rcx
   140019a89:	rcr    DWORD PTR [rdx+0x3883bfff],0xff
   140019a90:	mov    ebx,0xb6ff3881
   140019a95:	jle    0x140019ad0
   140019a97:	push   QWORD PTR [rdx-0x5200c584]
   140019a9d:	jp     0x140019ada
   140019a9f:	jmp    FWORD PTR [rcx-0x5b00c388]
   140019aa5:	jbe    0x140019ae4
   140019aa7:	jmp    QWORD PTR [rax-0x6400c18c]
   140019aad:	jb     0x140019aee
   140019aaf:	dec    esp
   140019ab1:	mov    bh,0x9f
   140019ab3:	(bad)  
   140019ab4:	cld    
   140019ab5:	cld    
   140019ab6:	cld    
   140019ab7:	fwait
	...
   140019adc:	cmp    DWORD PTR [rcx],edi
   140019ade:	cmp    DWORD PTR [rcx+rbx*4-0x29006667],edx
   140019ae5:	(bad)  
   140019ae6:	(bad)  
   140019ae7:	push   rdi
   140019ae9:	div    edi
   140019aeb:	(bad)  
   140019aec:	std    
   140019aed:	std    
   140019aee:	std    
   140019aef:	dec    ecx
   140019af1:	leave  
   140019af2:	leave  
   140019af3:	inc    DWORD PTR [rax+0x56ff8080]
   140019af9:	push   rsi
   140019afa:	push   rsi
   140019afb:	jmp    QWORD PTR [rbx]
   140019afd:	and    esp,DWORD PTR [rbx]
   140019aff:	jmp    FWORD PTR [rcx]
   140019b01:	sub    DWORD PTR [rcx],ebp
   140019b03:	push   QWORD PTR [rsp+rsi*1]
   140019b06:	xor    al,0xff
   140019b08:	out    dx,al
   140019b09:	out    dx,al
   140019b0a:	out    dx,al
   140019b0b:	(bad)  
   140019b0c:	sti    
   140019b0d:	sti    
   140019b0e:	sti    
   140019b0f:	(bad)  
   140019b10:	cli    
   140019b11:	cli    
   140019b12:	cli    
   140019b13:	(bad)  
   140019b14:	cli    
   140019b15:	cli    
   140019b16:	cli    
   140019b17:	(bad)  
   140019b18:	cli    
   140019b19:	cli    
   140019b1a:	cli    
   140019b1b:	(bad)  
   140019b1c:	cli    
   140019b1d:	cli    
   140019b1e:	cli    
   140019b1f:	(bad)  
   140019b20:	stc    
   140019b21:	stc    
   140019b22:	stc    
   140019b23:	(bad)  
   140019b24:	stc    
   140019b25:	stc    
   140019b26:	stc    
   140019b27:	(bad)  
   140019b28:	stc    
   140019b29:	stc    
   140019b2a:	stc    
   140019b2b:	(bad)  
   140019b2c:	clc    
   140019b2d:	clc    
   140019b2e:	clc    
   140019b2f:	(bad)  
   140019b30:	clc    
   140019b31:	clc    
   140019b32:	clc    
   140019b33:	(bad)  
   140019b34:	clc    
   140019b35:	clc    
   140019b36:	clc    
   140019b37:	push   rdi
   140019b39:	div    edi
   140019b3b:	push   rdi
   140019b3d:	div    edi
   140019b3f:	push   rbp
   140019b41:	cmc    
   140019b42:	cmc    
   140019b43:	push   rdi
   140019b45:	div    edi
   140019b47:	(bad)  
   140019b48:	std    
   140019b49:	std    
   140019b4a:	std    
   140019b4b:	(bad)  
   140019b4c:	call   0x10e014f22
   140019b51:	popf   
   140019b52:	(bad)  
   140019b53:	(bad)  
   140019b54:	mov    esp,0xb5ff4085
   140019b59:	jle    0x140019b94
   140019b5b:	push   QWORD PTR [rcx-0x5300c584]
   140019b61:	jp     0x140019b9e
   140019b63:	jmp    FWORD PTR [rbx-0x4800bc83]
   140019b69:	xchg   ebx,eax
   140019b6a:	addr32 (bad) 
   140019b6c:	fcmovne st,st(3)
   140019b6e:	mov    dh,0xff
   140019b70:	div    ch
   140019b72:	cmc    
   140019b73:	ror    DWORD PTR [rbp+0x1c8d8d],cl
	...
   140019b9d:	add    BYTE PTR [rax],al
   140019b9f:	sbb    DWORD PTR [rax-0x7b006768],ebx
   140019ba5:	test   BYTE PTR [rbx+rsi*8-0x6e6e6f],al
   140019bac:	(bad)  
   140019bad:	(bad)  
   140019bae:	(bad)  
   140019baf:	cmc    
   140019bb0:	pop    rdx
   140019bb1:	pop    rdx
   140019bb2:	pop    rdx
   140019bb3:	jmp    FWORD PTR [rsp+rbp*2+0x6c]
   140019bb7:	(bad)  
   140019bb8:	cmp    edi,DWORD PTR [rbx]
   140019bba:	cmp    edi,edi
   140019bbc:	and    DWORD PTR [rcx],esp
   140019bbe:	and    edi,edi
   140019bc0:	and    ah,BYTE PTR [rdx]
   140019bc2:	and    bh,bh
   140019bc4:	sub    DWORD PTR [rcx],ebp
   140019bc6:	sub    edi,edi
   140019bc8:	pop    rdi
   140019bc9:	pop    rdi
   140019bca:	pop    rdi
   140019bcb:	call   rsi
   140019bcd:	(bad)  
   140019bce:	(bad)  
   140019bcf:	(bad)  
   140019bd0:	clc    
   140019bd1:	clc    
   140019bd2:	clc    
   140019bd3:	(bad)  
   140019bd4:	sti    
   140019bd5:	sti    
   140019bd6:	sti    
   140019bd7:	(bad)  
   140019bd8:	sti    
   140019bd9:	sti    
   140019bda:	sti    
   140019bdb:	(bad)  
   140019bdc:	cli    
   140019bdd:	cli    
   140019bde:	cli    
   140019bdf:	(bad)  
   140019be0:	cli    
   140019be1:	cli    
   140019be2:	cli    
   140019be3:	(bad)  
   140019be4:	cli    
   140019be5:	cli    
   140019be6:	cli    
   140019be7:	jmp    rdx
   140019be9:	loop   0x140019bcd
   140019beb:	(bad)  
   140019bec:	(bad)  
   140019bed:	(bad)  
   140019bee:	(bad)  
   140019bef:	(bad)  
   140019bf0:	jmp    0x140019bdd
   140019bf2:	jmp    0x140019bf3
   140019bf4:	out    0xe7,eax
   140019bf6:	out    0xff,eax
   140019bf8:	fstp   st(5)
   140019bfa:	(bad)  
   140019bfc:	loope  0x140019bdf
   140019bfe:	loope  0x140019bff
   140019c00:	mov    edi,0xebffbfbf
   140019c05:	jmp    0x140019bf2
   140019c07:	jmp    rbx
   140019c09:	jrcxz  0x140019bee
   140019c0b:	push   rsp
   140019c0d:	hlt    
   140019c0e:	hlt    
   140019c0f:	push   rdi
   140019c11:	div    edi
   140019c13:	(bad)  
   140019c14:	(bad)  
   140019c15:	(bad)  
   140019c16:	(bad)  
   140019c17:	(bad)  
   140019c18:	(bad)  
   140019c19:	(bad)  
   140019c1a:	(bad)  
   140019c1b:	(bad)  
   140019c1c:	(bad)  
   140019c1d:	(bad)  
   140019c1e:	(bad)  
   140019c1f:	(bad)  
   140019c20:	(bad)  
   140019c21:	(bad)  
   140019c22:	(bad)  
   140019c23:	(bad)  
   140019c24:	(bad)  
   140019c25:	(bad)  
   140019c26:	(bad)  
   140019c27:	stc    
   140019c28:	stc    
   140019c29:	stc    
   140019c2a:	stc    
   140019c2b:	fsubp  st(6),st
   140019c2d:	out    dx,al
   140019c2e:	out    dx,al
   140019c2f:	jmp    QWORD PTR [rsi]
   140019c31:	es xor al,BYTE PTR es:[rax]
   140019c35:	add    BYTE PTR [rax],al
   140019c37:	(bad)  
	...
   140019c5c:	add    BYTE PTR [rax],al
   140019c5e:	add    BYTE PTR [rcx],bl
   140019c60:	(bad)  
   140019c61:	(bad)  
   140019c62:	(bad)  
   140019c63:	(bad)  
   140019c64:	cmp    bh,BYTE PTR [rdx]
   140019c66:	cmp    ah,BYTE PTR [rax-0x208f8f90]
   140019c6c:	jnp    0x140019ce9
   140019c6e:	jnp    0x140019c6e
   140019c70:	pop    rdi
   140019c71:	pop    rdi
   140019c72:	pop    rdi
   140019c73:	call   QWORD PTR [rdi+0x57]
   140019c76:	push   rdi
   140019c77:	call   QWORD PTR [rdi+0x57]
   140019c7a:	push   rdi
   140019c7b:	(bad)  
   140019c7c:	cmp    bh,BYTE PTR [rdx]
   140019c7e:	cmp    bh,bh
   140019c80:	and    DWORD PTR [rcx],esp
   140019c82:	and    edi,edi
   140019c84:	and    ah,BYTE PTR [rdx]
   140019c86:	and    bh,bh
   140019c88:	sub    ch,BYTE PTR [rdx]
   140019c8a:	sub    bh,bh
   140019c8c:	ja     0x140019d05
   140019c8e:	ja     0x140019c8f
   140019c90:	out    dx,al
   140019c91:	out    dx,al
   140019c92:	out    dx,al
   140019c93:	(bad)  
   140019c94:	cld    
   140019c95:	cld    
   140019c96:	cld    
   140019c97:	call   rdi
   140019c99:	xlat   BYTE PTR ds:[rbx]
   140019c9a:	xlat   BYTE PTR ds:[rbx]
   140019c9b:	call   rax
   140019c9d:	rcl    al,1
   140019c9f:	(bad)  
   140019ca0:	sti    
   140019ca1:	sti    
   140019ca2:	sti    
   140019ca3:	(bad)  
   140019ca4:	cli    
   140019ca5:	cli    
   140019ca6:	cli    
   140019ca7:	(bad)  
   140019ca8:	fstp   st(5)
   140019caa:	(bad)  
   140019cac:	(bad)  
   140019cad:	(bad)  
   140019cae:	(bad)  
   140019caf:	dec    esi
   140019cb1:	(bad)  
   140019cb2:	(bad)  
   140019cb3:	call   rsi
   140019cb5:	(bad)  
   140019cb6:	(bad)  
   140019cb7:	dec    ebp
   140019cb9:	int    0xcd
   140019cbb:	call   rsi
   140019cbd:	(bad)  
   140019cbe:	(bad)  
   140019cbf:	(bad)  
   140019cc0:	fcomp  st(0)
   140019cc2:	fdivr  st,st(7)
   140019cc4:	rcl    ecx,1
   140019cc6:	sar    edi,1
   140019cc8:	(bad)  
   140019cc9:	(bad)  
   140019cca:	(bad)  
   140019ccb:	push   rdi
   140019ccd:	div    edi
   140019ccf:	push   rdi
   140019cd1:	div    edi
   140019cd3:	push   rdi
   140019cd5:	div    edi
   140019cd7:	push   rsi
   140019cd9:	div    dh
   140019cdb:	push   rdx
   140019cdd:	repnz bnd jmp QWORD PTR [rdx]
   140019ce1:	and    ah,BYTE PTR [rdx]
   140019ce3:	xor    al,0x0
   140019ce5:	add    BYTE PTR [rax],al
   140019ce7:	(bad)  
   140019ce8:	cmp    BYTE PTR [rax],bh
   140019cea:	cmp    BYTE PTR [rsi],ah
   140019cec:	fcmovnu st,st(3)
   140019cee:	(bad)  
   140019cf0:	add    BYTE PTR [rax],al
   140019cf2:	add    BYTE PTR [rax+rax*1],ch
   140019cf5:	add    BYTE PTR [rax],al
   140019cf7:	(bad)  
	...
   140019d1c:	add    BYTE PTR [rax],al
   140019d1e:	add    BYTE PTR [rcx],bl
   140019d20:	(bad)  
   140019d21:	(bad)  
   140019d22:	(bad)  
   140019d23:	dec    esp
   140019d25:	int3   
   140019d26:	int3   
   140019d27:	xchg   ecx,eax
   140019d28:	cmp    DWORD PTR [rcx],edi
   140019d2a:	cmp    DWORD PTR [rcx-0x2b7e7e7f],esp
   140019d30:	xchg   esi,eax
   140019d31:	xchg   esi,eax
   140019d32:	xchg   esi,eax
   140019d33:	dec    DWORD PTR [rdx+0x4a]
   140019d36:	rex.WX (bad) 
   140019d38:	jl     0x140019db6
   140019d3a:	jl     0x140019d3b
   140019d3c:	ins    BYTE PTR es:[rdi],dx
   140019d3d:	ins    BYTE PTR es:[rdi],dx
   140019d3e:	ins    BYTE PTR es:[rdi],dx
   140019d3f:	(bad)  
   140019d40:	cmp    bh,BYTE PTR [rdx]
   140019d42:	cmp    bh,bh
   140019d44:	and    ah,BYTE PTR [rdx]
   140019d46:	and    bh,bh
   140019d48:	rex.X
   140019d49:	rex.X
   140019d4a:	rex.X call FWORD PTR [rax+0x58]
   140019d4e:	pop    rax
   140019d4f:	(bad)  
   140019d50:	jl     0x140019dce
   140019d52:	jl     0x140019d53
   140019d54:	clc    
   140019d55:	clc    
   140019d56:	clc    
   140019d57:	(bad)  
   140019d58:	cld    
   140019d59:	cld    
   140019d5a:	cld    
   140019d5b:	(bad)  
   140019d5c:	cld    
   140019d5d:	cld    
   140019d5e:	cld    
   140019d5f:	(bad)  
   140019d60:	cld    
   140019d61:	cld    
   140019d62:	cld    
   140019d63:	(bad)  
   140019d64:	sti    
   140019d65:	sti    
   140019d66:	sti    
   140019d67:	jmp    rax
   140019d69:	loopne 0x140019d4b
   140019d6b:	(bad)  
   140019d6c:	out    dx,eax
   140019d6d:	out    dx,eax
   140019d6e:	out    dx,eax
   140019d6f:	(bad)  
   140019d70:	in     eax,dx
   140019d71:	in     eax,dx
   140019d72:	in     eax,dx
   140019d73:	push   rcx
   140019d75:	icebp  
   140019d76:	icebp  
   140019d77:	jmp    rsi
   140019d79:	out    0xe6,al
   140019d7b:	push   rdi
   140019d7d:	div    edi
   140019d7f:	jmp    rsi
   140019d81:	out    0xe6,al
   140019d83:	push   rbp
   140019d85:	cmc    
   140019d86:	cmc    
   140019d87:	(bad)  
   140019d88:	(bad)  
   140019d89:	(bad)  
   140019d8a:	(bad)  
   140019d8b:	(bad)  
   140019d8c:	clc    
   140019d8d:	clc    
   140019d8e:	clc    
   140019d8f:	(bad)  
   140019d90:	clc    
   140019d91:	clc    
   140019d92:	clc    
   140019d93:	push   rdi
   140019d95:	div    edi
   140019d97:	dec    edx
   140019d99:	retf   0xffca
   140019d9c:	out    dx,eax
   140019d9d:	out    dx,eax
   140019d9e:	out    dx,eax
   140019d9f:	(bad)  
   140019da0:	mov    esp,0x2492bcbc
   140019da5:	and    al,0x24
   140019da7:	ss mov ah,0xb4
   140019daa:	mov    ah,0x8f
   140019dac:	rcl    dl,cl
   140019dae:	sar    bh,cl
   140019db0:	add    BYTE PTR [rax],al
   140019db2:	add    BYTE PTR [rax+rax*1],ch
   140019db5:	add    BYTE PTR [rax],al
   140019db7:	(bad)  
	...
   140019ddc:	add    BYTE PTR [rax],al
   140019dde:	add    BYTE PTR [rcx],bl
   140019de0:	(bad)  
   140019de1:	(bad)  
   140019de2:	(bad)  
   140019de3:	(bad)  
   140019de4:	std    
   140019de5:	std    
   140019de6:	std    
   140019de7:	(bad)  
   140019de8:	std    
   140019de9:	std    
   140019dea:	std    
   140019deb:	call   FWORD PTR [rax-0x46006768]
   140019df1:	mov    ecx,0xfefeffb9
   140019df6:	(bad)  
   140019df7:	(bad)  
   140019df8:	cld    
   140019df9:	cld    
   140019dfa:	cld    
   140019dfb:	(bad)  
   140019dfc:	mov    eax,0x75ffb8b8
   140019e01:	jne    0x140019e78
   140019e03:	dec    DWORD PTR [rbx+0x4b]
   140019e06:	rex.WXB inc QWORD PTR [r11+0x43]
   140019e0a:	rex.XB inc DWORD PTR [r8+0x40]
   140019e0e:	rex jmp FWORD PTR [rsi]
   140019e11:	cs push QWORD PTR cs:[rdi+0x77]
   140019e16:	ja     0x140019e17
   140019e18:	cld    
   140019e19:	cld    
   140019e1a:	cld    
   140019e1b:	(bad)  
   140019e1c:	std    
   140019e1d:	std    
   140019e1e:	std    
   140019e1f:	(bad)  
   140019e20:	cld    
   140019e21:	cld    
   140019e22:	cld    
   140019e23:	(bad)  
   140019e24:	cld    
   140019e25:	cld    
   140019e26:	cld    
   140019e27:	(bad)  
   140019e28:	cld    
   140019e29:	cld    
   140019e2a:	cld    
   140019e2b:	(bad)  
   140019e2c:	sti    
   140019e2d:	sti    
   140019e2e:	sti    
   140019e2f:	(bad)  
   140019e30:	sti    
   140019e31:	sti    
   140019e32:	sti    
   140019e33:	(bad)  
   140019e34:	sti    
   140019e35:	sti    
   140019e36:	sti    
   140019e37:	(bad)  
   140019e38:	cli    
   140019e39:	cli    
   140019e3a:	cli    
   140019e3b:	(bad)  
   140019e3c:	cli    
   140019e3d:	cli    
   140019e3e:	cli    
   140019e3f:	(bad)  
   140019e40:	cli    
   140019e41:	cli    
   140019e42:	cli    
   140019e43:	(bad)  
   140019e44:	stc    
   140019e45:	stc    
   140019e46:	stc    
   140019e47:	(bad)  
   140019e48:	clc    
   140019e49:	clc    
   140019e4a:	clc    
   140019e4b:	(bad)  
   140019e4c:	stc    
   140019e4d:	stc    
   140019e4e:	stc    
   140019e4f:	(bad)  
   140019e50:	clc    
   140019e51:	clc    
   140019e52:	clc    
   140019e53:	push   rsp
   140019e55:	hlt    
   140019e56:	hlt    
   140019e57:	push   rax
   140019e59:	lock lock (bad) 
   140019e5c:	jmp    0x140019e49
   140019e5e:	jmp    0x140019e5f
   140019e60:	in     eax,0xe5
   140019e62:	in     eax,0xff
   140019e64:	fstp   st(5)
   140019e66:	(bad)  
   140019e68:	rcl    ebx,cl
   140019e6a:	sar    edi,cl
   140019e6c:	enter  0xc8c8,0xff
   140019e70:	add    BYTE PTR [rax],al
   140019e72:	add    BYTE PTR [rdx],ch
   140019e74:	add    BYTE PTR [rax],al
   140019e76:	add    BYTE PTR [rax+rax*1],cl
	...
   140019e9d:	add    BYTE PTR [rax],al
   140019e9f:	sbb    esi,edi
   140019ea1:	(bad)  
   140019ea2:	(bad)  
   140019ea3:	call   rdx
   140019ea5:	rcl    dl,cl
   140019ea7:	mov    WORD PTR [rsi],?
   140019ea9:	ss ss and ah,al
   140019ead:	loopne 0x140019e8f
   140019eaf:	test   BYTE PTR [rcx-0x42006667],bl
   140019eb5:	mov    ebp,0xfefeffbd
   140019eba:	(bad)  
   140019ebb:	(bad)  
   140019ebc:	out    dx,eax
   140019ebd:	out    dx,eax
   140019ebe:	out    dx,eax
   140019ebf:	(bad)  
   140019ec0:	mov    edx,0x84ffbaba
   140019ec5:	test   BYTE PTR [rdi+rdi*8-0xb4b4b5],al
   140019ecc:	(bad)  
   140019ecd:	(bad)  
   140019ece:	(bad)  
   140019ecf:	dec    DWORD PTR [rsp+rcx*2+0x4c]
   140019ed3:	call   QWORD PTR [rdi+0x57]
   140019ed6:	push   rdi
   140019ed7:	jmp    QWORD PTR [rsp+riz*4-0x202005c]
   140019ede:	std    
   140019edf:	push   rcx
   140019ee1:	icebp  
   140019ee2:	icebp  
   140019ee3:	(bad)  
   140019ee4:	in     eax,dx
   140019ee5:	in     eax,dx
   140019ee6:	in     eax,dx
   140019ee7:	(bad)  
   140019ee8:	std    
   140019ee9:	std    
   140019eea:	std    
   140019eeb:	(bad)  
   140019eec:	sti    
   140019eed:	sti    
   140019eee:	sti    
   140019eef:	jmp    rdx
   140019ef1:	loop   0x140019ed5
   140019ef3:	(bad)  
   140019ef4:	in     al,dx
   140019ef5:	in     al,dx
   140019ef6:	in     al,dx
   140019ef7:	push   rcx
   140019ef9:	icebp  
   140019efa:	icebp  
   140019efb:	jmp    rsp
   140019efd:	in     al,0xe4
   140019eff:	(bad)  
   140019f00:	fcomp  st(0)
   140019f02:	fdivr  st,st(7)
   140019f04:	iret   
   140019f05:	iret   
   140019f06:	iret   
   140019f07:	(bad)  
   140019f08:	mov    edi,0xe3ffbfbf
   140019f0d:	jrcxz  0x140019ef2
   140019f0f:	jmp    rcx
   140019f11:	loope  0x140019ef4
   140019f13:	(bad)  
   140019f14:	out    dx,eax
   140019f15:	out    dx,eax
   140019f16:	out    dx,eax
   140019f17:	inc    edx
   140019f19:	ret    0xffc2
   140019f1c:	in     eax,0xe5
   140019f1e:	in     eax,0xfe
   140019f20:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019f21:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019f22:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019f23:	test   BYTE PTR [rax],bl
   140019f25:	sbb    BYTE PTR [rax],bl
   140019f27:	rex xchg esi,eax
   140019f29:	xchg   esi,eax
   140019f2a:	xchg   esi,eax
   140019f2b:	movabs ds:0x24000000e8c4c4c4,al
   140019f34:	add    BYTE PTR [rax],al
   140019f36:	add    BYTE PTR [rdi],al
	...
   140019f5c:	add    BYTE PTR [rax],al
   140019f5e:	add    BYTE PTR [rcx],bl
   140019f60:	std    
   140019f61:	std    
   140019f62:	std    
   140019f63:	jmp    QWORD PTR [rdx]
   140019f65:	and    ah,BYTE PTR [rdx]
   140019f67:	xor    al,0x0
   140019f69:	add    BYTE PTR [rax],al
   140019f6b:	(bad)  
   140019f6c:	cmp    edi,DWORD PTR [rbx]
   140019f6e:	cmp    esp,DWORD PTR [rsi]
   140019f70:	cld    
   140019f71:	cld    
   140019f72:	cld    
   140019f73:	(bad)  
   140019f74:	std    
   140019f75:	std    
   140019f76:	std    
   140019f77:	(bad)  
   140019f78:	std    
   140019f79:	std    
   140019f7a:	std    
   140019f7b:	(bad)  
   140019f7c:	(bad)  
   140019f7e:	(bad)  
   140019f80:	loop   0x140019f64
   140019f82:	loop   0x140019f83
   140019f84:	mov    ah,0xb4
   140019f86:	mov    ah,0xff
   140019f88:	outs   dx,BYTE PTR ds:[rsi]
   140019f89:	outs   dx,BYTE PTR ds:[rsi]
   140019f8a:	outs   dx,BYTE PTR ds:[rsi]
   140019f8b:	jmp    QWORD PTR [rsi+0x66]
   140019f8e:	jmp    WORD PTR [rcx]
   140019f91:	and    DWORD PTR [rcx],esp
   140019f93:	jmp    QWORD PTR [rsp]
   140019f96:	and    al,0xff
   140019f98:	cmp    DWORD PTR [rcx],edi
   140019f9a:	cmp    edi,edi
   140019f9c:	retf   0xcaca
   140019f9f:	(bad)  
   140019fa0:	(bad)  
   140019fa2:	fdivp  st(7),st
   140019fa4:	cli    
   140019fa5:	cli    
   140019fa6:	cli    
   140019fa7:	(bad)  
   140019fa8:	std    
   140019fa9:	std    
   140019faa:	std    
   140019fab:	(bad)  
   140019fac:	std    
   140019fad:	std    
   140019fae:	std    
   140019faf:	(bad)  
   140019fb0:	(bad)  
   140019fb2:	fdivp  st(7),st
   140019fb4:	loop   0x140019f98
   140019fb6:	loop   0x140019fb7
   140019fb8:	fcmovu st,st(2)
   140019fba:	(bad)  
   140019fbc:	rcl    ebx,cl
   140019fbe:	sar    edi,cl
   140019fc0:	retf   
   140019fc1:	retf   
   140019fc2:	retf   
   140019fc3:	push   QWORD PTR [rdx-0x51004d4e]
   140019fc9:	scas   al,BYTE PTR es:[rdi]
   140019fca:	scas   al,BYTE PTR es:[rdi]
   140019fcb:	jmp    FWORD PTR [rax-0x50005758]
   140019fd1:	scas   eax,DWORD PTR es:[rdi]
   140019fd2:	scas   eax,DWORD PTR es:[rdi]
   140019fd3:	dec    edx
   140019fd5:	retf   0xffca
   140019fd8:	enter  0xc8c8,0xff
   140019fdc:	mov    ebp,0x34e8bdbd
   140019fe1:	xor    al,0x34
   140019fe3:	pop    rbp
   140019fe4:	je     0x14001a05a
   140019fe6:	je     0x14001a064
   140019fe8:	(bad)  
   140019fe9:	(bad)  
   140019fea:	(bad)
   140019fee:	enter  0x87,0x0
   140019ff2:	add    BYTE PTR [rdi],dl
   140019ff4:	add    BYTE PTR [rax],al
   140019ff6:	add    BYTE PTR [rcx],al
	...
   14001a01c:	add    BYTE PTR [rax],al
   14001a01e:	add    BYTE PTR [rcx],bl
   14001a020:	cld    
   14001a021:	cld    
   14001a022:	cld    
   14001a023:	dec    ecx
   14001a025:	leave  
   14001a026:	leave  
   14001a027:	xchg   ecx,eax
   14001a028:	es es es xor eax,0x8ed0d0d0
   14001a030:	cld    
   14001a031:	cld    
   14001a032:	cld    
   14001a033:	call   rcx
   14001a035:	rcl    ecx,1
   14001a037:	(bad)  
   14001a038:	cld    
   14001a039:	cld    
   14001a03a:	cld    
   14001a03b:	(bad)  
   14001a03c:	(bad)  
   14001a03e:	fdivp  st(7),st
   14001a040:	clc    
   14001a041:	clc    
   14001a042:	clc    
   14001a043:	(bad)  
   14001a044:	out    dx,al
   14001a045:	out    dx,al
   14001a046:	out    dx,al
   14001a047:	(bad)  
   14001a048:	mov    esp,0x76ffbcbc
   14001a04d:	jbe    0x14001a0c5
   14001a04f:	jmp    FWORD PTR [rbp+0x6d]
   14001a052:	ins    DWORD PTR es:[rdi],dx
   14001a053:	call   QWORD PTR [rsi+0x56]
   14001a056:	push   rsi
   14001a057:	(bad)  
   14001a058:	jnp    0x14001a0d5
   14001a05a:	jnp    0x14001a05b
   14001a05c:	rex.WRXB
   14001a05d:	rex.WRXB
   14001a05e:	rex.WRXB jmp r15
   14001a061:	out    0xe7,eax
   14001a063:	push   rbp
   14001a065:	cmc    
   14001a066:	cmc    
   14001a067:	(bad)  
   14001a068:	(bad)  
   14001a069:	(bad)  
   14001a06a:	(bad)  
   14001a06b:	(bad)  
   14001a06c:	std    
   14001a06d:	std    
   14001a06e:	std    
   14001a06f:	jmp    rax
   14001a071:	loopne 0x14001a053
   14001a073:	push   rdx
   14001a075:	repnz repnz (bad) 
   14001a078:	in     eax,dx
   14001a079:	in     eax,dx
   14001a07a:	in     eax,dx
   14001a07b:	push   rsp
   14001a07d:	hlt    
   14001a07e:	hlt    
   14001a07f:	jmp    rsp
   14001a081:	in     al,0xe4
   14001a083:	dec    ecx
   14001a085:	leave  
   14001a086:	leave  
   14001a087:	(bad)  
   14001a088:	(bad)  
   14001a089:	(bad)  
   14001a08a:	(bad)  
   14001a08b:	(bad)  
   14001a08c:	(bad)  
   14001a08d:	(bad)  
   14001a08e:	(bad)  
   14001a08f:	(bad)  
   14001a090:	(bad)  
   14001a091:	(bad)  
   14001a092:	(bad)  
   14001a093:	(bad)  
   14001a094:	(bad)  
   14001a095:	(bad)  
   14001a096:	(bad)  
   14001a097:	(bad)  
   14001a098:	clc    
   14001a099:	clc    
   14001a09a:	clc    
   14001a09b:	push   rcx
   14001a09d:	icebp  
   14001a09e:	icebp  
   14001a09f:	jmp    rcx
   14001a0a1:	loope  0x14001a084
   14001a0a3:	(bad)  
   14001a0a4:	jmp    0x11b018a92
   14001a0a9:	fcmovu st,st(2)
   14001a0ab:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a0ac:	add    BYTE PTR [rax],al
   14001a0ae:	add    BYTE PTR [rax+rax*1],bl
   14001a0b1:	add    BYTE PTR [rax],al
   14001a0b3:	add    eax,0x0
	...
   14001a0dc:	add    BYTE PTR [rax],al
   14001a0de:	add    BYTE PTR [rcx],bl
   14001a0e0:	cld    
   14001a0e1:	cld    
   14001a0e2:	cld    
   14001a0e3:	(bad)  
   14001a0e4:	cli    
   14001a0e5:	cli    
   14001a0e6:	cli    
   14001a0e7:	(bad)  
   14001a0e8:	cli    
   14001a0e9:	cli    
   14001a0ea:	cli    
   14001a0eb:	(bad)  
   14001a0ec:	cli    
   14001a0ed:	cli    
   14001a0ee:	cli    
   14001a0ef:	(bad)  
   14001a0f0:	sti    
   14001a0f1:	sti    
   14001a0f2:	sti    
   14001a0f3:	(bad)  
   14001a0f4:	sti    
   14001a0f5:	sti    
   14001a0f6:	sti    
   14001a0f7:	(bad)  
   14001a0f8:	sti    
   14001a0f9:	sti    
   14001a0fa:	sti    
   14001a0fb:	(bad)  
   14001a0fc:	cld    
   14001a0fd:	cld    
   14001a0fe:	cld    
   14001a0ff:	(bad)  
   14001a100:	cld    
   14001a101:	cld    
   14001a102:	cld    
   14001a103:	(bad)  
   14001a104:	cld    
   14001a105:	cld    
   14001a106:	cld    
   14001a107:	(bad)  
   14001a108:	std    
   14001a109:	std    
   14001a10a:	std    
   14001a10b:	call   rcx
   14001a10d:	rcl    ecx,1
   14001a10f:	jmp    QWORD PTR [rcx+0x61]
   14001a112:	(bad)  
   14001a113:	inc    DWORD PTR [rbx+0x43]
   14001a116:	rex.XB inc DWORD PTR [r15+0x70ff8787]
   14001a11d:	jo     0x14001a18f
   14001a11f:	jmp    QWORD PTR [rdx-0x5d5e]
   14001a125:	(bad)  
   14001a126:	(bad)  
   14001a127:	(bad)  
   14001a128:	(bad)  
   14001a129:	(bad)  
   14001a12a:	(bad)  
   14001a12b:	(bad)  
   14001a12c:	(bad)  
   14001a12d:	(bad)  
   14001a12e:	(bad)  
   14001a12f:	(bad)  
   14001a130:	(bad)  
   14001a131:	(bad)  
   14001a132:	(bad)  
   14001a133:	(bad)  
   14001a134:	(bad)  
   14001a135:	(bad)  
   14001a136:	(bad)  
   14001a137:	(bad)  
   14001a138:	(bad)  
   14001a139:	(bad)  
   14001a13a:	(bad)  
   14001a13b:	(bad)  
   14001a13c:	std    
   14001a13d:	std    
   14001a13e:	std    
   14001a13f:	push   rsi
   14001a141:	div    dh
   14001a143:	dec    ebp
   14001a145:	int    0xcd
   14001a147:	(bad)  
   14001a148:	(bad)  
   14001a149:	(bad)  
   14001a14a:	(bad)  
   14001a14b:	jmp    rbx
   14001a14d:	jrcxz  0x14001a132
   14001a14f:	call   rbp
   14001a151:	(bad)  
   14001a152:	(bad)  
   14001a153:	call   rbp
   14001a155:	(bad)  
   14001a156:	(bad)  
   14001a157:	push   rcx
   14001a159:	icebp  
   14001a15a:	icebp  
   14001a15b:	dec    ecx
   14001a15d:	leave  
   14001a15e:	leave  
   14001a15f:	call   FWORD PTR [rdi-0x4c006061]
   14001a165:	mov    bl,0xb3
   14001a167:	movabs al,ds:0x50000001c020202
	...
   14001a19c:	add    BYTE PTR [rax],al
   14001a19e:	add    BYTE PTR [rcx],bl
   14001a1a0:	cld    
   14001a1a1:	cld    
   14001a1a2:	cld    
   14001a1a3:	dec    edi
   14001a1a5:	iret   
   14001a1a6:	iret   
   14001a1a7:	mov    WORD PTR [rip+0xffffffffde223535],?        # 0x11e23d6e2
   14001a1ad:	(bad)  
   14001a1af:	test   dl,bh
   14001a1b1:	cli    
   14001a1b2:	cli    
   14001a1b3:	call   rax
   14001a1b5:	rcl    al,1
   14001a1b7:	(bad)  
   14001a1b8:	sti    
   14001a1b9:	sti    
   14001a1ba:	sti    
   14001a1bb:	(bad)  
   14001a1bc:	sti    
   14001a1bd:	sti    
   14001a1be:	sti    
   14001a1bf:	(bad)  
   14001a1c0:	sti    
   14001a1c1:	sti    
   14001a1c2:	sti    
   14001a1c3:	(bad)  
   14001a1c4:	cld    
   14001a1c5:	cld    
   14001a1c6:	cld    
   14001a1c7:	(bad)  
   14001a1c8:	cld    
   14001a1c9:	cld    
   14001a1ca:	cld    
   14001a1cb:	(bad)  
   14001a1cc:	cld    
   14001a1cd:	cld    
   14001a1ce:	cld    
   14001a1cf:	jmp    rdi
   14001a1d1:	out    0xe7,eax
   14001a1d3:	(bad)  
   14001a1d4:	jl     0x14001a252
   14001a1d6:	jl     0x14001a1d7
   14001a1d8:	rex.WRB
   14001a1d9:	rex.WRB
   14001a1da:	rex.WRB inc QWORD PTR [r14+0x66ff8686]
   14001a1e1:	data16 data16 (bad) 
   14001a1e4:	call   0x13f018ad1
   14001a1e9:	(bad)  
   14001a1ea:	(bad)  
   14001a1eb:	(bad)  
   14001a1ec:	(bad)  
   14001a1ed:	(bad)  
   14001a1ee:	(bad)  
   14001a1ef:	(bad)  
   14001a1f0:	(bad)  
   14001a1f1:	(bad)  
   14001a1f2:	(bad)  
   14001a1f3:	(bad)  
   14001a1f4:	(bad)  
   14001a1f5:	(bad)  
   14001a1f6:	(bad)  
   14001a1f7:	(bad)  
   14001a1f8:	(bad)  
   14001a1f9:	(bad)  
   14001a1fa:	(bad)  
   14001a1fb:	(bad)  
   14001a1fc:	std    
   14001a1fd:	std    
   14001a1fe:	std    
   14001a1ff:	push   rbp
   14001a201:	cmc    
   14001a202:	cmc    
   14001a203:	dec    ebx
   14001a205:	retf   
   14001a206:	retf   
   14001a207:	(bad)  
   14001a208:	(bad)  
   14001a209:	(bad)  
   14001a20a:	(bad)  
   14001a20b:	inc    eax
   14001a20d:	rol    al,0xff
   14001a210:	ret    0xc2c2
   14001a213:	jmp    FWORD PTR [rsi-0x16005152]
   14001a219:	jmp    0xe4a6a207
   14001a21e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a21f:	call   FWORD PTR [rax+0x989898]
   14001a225:	add    BYTE PTR [rax],al
   14001a227:	sbb    al,0x0
   14001a229:	add    BYTE PTR [rax],al
   14001a22b:	add    eax,0x0
	...
   14001a25c:	add    BYTE PTR [rax],al
   14001a25e:	add    BYTE PTR [rcx],bl
   14001a260:	cld    
   14001a261:	cld    
   14001a262:	cld    
   14001a263:	jmp    QWORD PTR [rdx]
   14001a265:	and    ah,BYTE PTR [rdx]
   14001a267:	xor    al,0x0
   14001a269:	add    BYTE PTR [rax],al
   14001a26b:	(bad)  
   14001a26c:	cmp    edi,DWORD PTR [rbx]
   14001a26e:	cmp    esp,DWORD PTR [rsi]
   14001a270:	stc    
   14001a271:	stc    
   14001a272:	stc    
   14001a273:	(bad)  
   14001a274:	cli    
   14001a275:	cli    
   14001a276:	cli    
   14001a277:	(bad)  
   14001a278:	cli    
   14001a279:	cli    
   14001a27a:	cli    
   14001a27b:	(bad)  
   14001a27c:	cli    
   14001a27d:	cli    
   14001a27e:	cli    
   14001a27f:	(bad)  
   14001a280:	cli    
   14001a281:	cli    
   14001a282:	cli    
   14001a283:	(bad)  
   14001a284:	sti    
   14001a285:	sti    
   14001a286:	sti    
   14001a287:	(bad)  
   14001a288:	sti    
   14001a289:	sti    
   14001a28a:	sti    
   14001a28b:	(bad)  
   14001a28c:	sti    
   14001a28d:	sti    
   14001a28e:	sti    
   14001a28f:	(bad)  
   14001a290:	cld    
   14001a291:	cld    
   14001a292:	cld    
   14001a293:	(bad)  
   14001a294:	sti    
   14001a295:	sti    
   14001a296:	sti    
   14001a297:	inc    ebx
   14001a299:	ret    
   14001a29a:	ret    
   14001a29b:	call   FWORD PTR [rsp+rbx*2+0x5c]
   14001a29f:	call   QWORD PTR [rdi-0x4d006869]
   14001a2a5:	mov    dl,0xb2
   14001a2a7:	(bad)  
   14001a2a8:	(bad)  
   14001a2a9:	(bad)  
   14001a2aa:	(bad)  
   14001a2ab:	(bad)  
   14001a2ac:	(bad)  
   14001a2ad:	(bad)  
   14001a2ae:	(bad)  
   14001a2af:	(bad)  
   14001a2b0:	(bad)  
   14001a2b1:	(bad)  
   14001a2b2:	(bad)  
   14001a2b3:	(bad)  
   14001a2b4:	(bad)  
   14001a2b5:	(bad)  
   14001a2b6:	(bad)  
   14001a2b7:	(bad)  
   14001a2b8:	(bad)  
   14001a2b9:	(bad)  
   14001a2ba:	(bad)  
   14001a2bb:	(bad)  
   14001a2bc:	sti    
   14001a2bd:	sti    
   14001a2be:	sti    
   14001a2bf:	push   rdx
   14001a2c1:	repnz repnz dec eax
   14001a2c5:	enter  0xffc8,0xfe
   14001a2c9:	(bad)  
   14001a2ca:	(bad)  
   14001a2cb:	call   rsp
   14001a2cd:	(bad)  
   14001a2ce:	(bad)  
   14001a2cf:	jmp    FWORD PTR [rsi-0x3d005152]
   14001a2d5:	ret    0xffc2
   14001a2d8:	(bad)  
   14001a2d9:	(bad)  
   14001a2da:	(bad)  
   14001a2db:	jmp    FWORD PTR [rsp+rbp*4+0x9dac]
   14001a2e2:	add    BYTE PTR [rax+rax*1],bl
   14001a2e5:	add    BYTE PTR [rax],al
   14001a2e7:	add    eax,0x0
	...
   14001a31c:	add    BYTE PTR [rax],al
   14001a31e:	add    BYTE PTR [rcx],bl
   14001a320:	sti    
   14001a321:	sti    
   14001a322:	sti    
   14001a323:	inc    edi
   14001a325:	mov    edi,0x25252591
   14001a32b:	xor    eax,0x8ececece
   14001a330:	clc    
   14001a331:	clc    
   14001a332:	clc    
   14001a333:	dec    esi
   14001a335:	(bad)  
   14001a336:	(bad)  
   14001a337:	(bad)  
   14001a338:	stc    
   14001a339:	stc    
   14001a33a:	stc    
   14001a33b:	(bad)  
   14001a33c:	fcmovu st,st(2)
   14001a33e:	(bad)  
   14001a340:	jmp    0x110018d2e
   14001a345:	iret   
   14001a346:	iret   
   14001a347:	(bad)  
   14001a348:	jmp    0x14001a335
   14001a34a:	jmp    0x14001a34b
   14001a34c:	(bad)  
   14001a34d:	(bad)  
   14001a34e:	(bad)  
   14001a34f:	(bad)  
   14001a350:	sti    
   14001a351:	sti    
   14001a352:	sti    
   14001a353:	(bad)  
   14001a354:	sti    
   14001a355:	sti    
   14001a356:	sti    
   14001a357:	(bad)  
   14001a358:	cld    
   14001a359:	cld    
   14001a35a:	cld    
   14001a35b:	push   rbp
   14001a35d:	cmc    
   14001a35e:	cmc    
   14001a35f:	push   QWORD PTR [rsi-0x6500494a]
   14001a365:	(bad)  
   14001a366:	(bad)  
   14001a367:	(bad)  
   14001a368:	clc    
   14001a369:	clc    
   14001a36a:	clc    
   14001a36b:	(bad)  
   14001a36c:	std    
   14001a36d:	std    
   14001a36e:	std    
   14001a36f:	(bad)  
   14001a370:	std    
   14001a371:	std    
   14001a372:	std    
   14001a373:	(bad)  
   14001a374:	std    
   14001a375:	std    
   14001a376:	std    
   14001a377:	(bad)  
   14001a378:	cli    
   14001a379:	cli    
   14001a37a:	cli    
   14001a37b:	push   rsi
   14001a37d:	div    dh
   14001a37f:	(bad)  
   14001a380:	out    dx,al
   14001a381:	out    dx,al
   14001a382:	out    dx,al
   14001a383:	inc    ebp
   14001a385:	(bad)
   14001a388:	cli    
   14001a389:	cli    
   14001a38a:	cli    
   14001a38b:	push   rcx
   14001a38d:	icebp  
   14001a38e:	icebp  
   14001a38f:	(bad)  
   14001a390:	jmp    0x12b018d7e
   14001a395:	(bad)  
   14001a396:	(bad)  
   14001a397:	(bad)  
   14001a398:	fstp   st(5)
   14001a39a:	frstor [rdi+0x1c030303]
   14001a3a0:	add    BYTE PTR [rax],al
   14001a3a2:	add    BYTE PTR [rip+0x0],al        # 0x14001a3a8
	...
   14001a3dc:	add    BYTE PTR [rax],al
   14001a3de:	add    BYTE PTR [rcx],bl
   14001a3e0:	sti    
   14001a3e1:	sti    
   14001a3e2:	sti    
   14001a3e3:	push   rdi
   14001a3e5:	div    edi
   14001a3e7:	push   rdi
   14001a3e9:	div    edi
   14001a3eb:	push   rdi
   14001a3ed:	div    edi
   14001a3ef:	(bad)  
   14001a3f0:	clc    
   14001a3f1:	clc    
   14001a3f2:	clc    
   14001a3f3:	(bad)  
   14001a3f4:	clc    
   14001a3f5:	clc    
   14001a3f6:	clc    
   14001a3f7:	(bad)  
   14001a3f8:	clc    
   14001a3f9:	clc    
   14001a3fa:	clc    
   14001a3fb:	(bad)  
   14001a3fc:	stc    
   14001a3fd:	stc    
   14001a3fe:	stc    
   14001a3ff:	(bad)  
   14001a400:	stc    
   14001a401:	stc    
   14001a402:	stc    
   14001a403:	(bad)  
   14001a404:	stc    
   14001a405:	stc    
   14001a406:	stc    
   14001a407:	(bad)  
   14001a408:	cli    
   14001a409:	cli    
   14001a40a:	cli    
   14001a40b:	(bad)  
   14001a40c:	cli    
   14001a40d:	cli    
   14001a40e:	cli    
   14001a40f:	(bad)  
   14001a410:	cli    
   14001a411:	cli    
   14001a412:	cli    
   14001a413:	(bad)  
   14001a414:	cli    
   14001a415:	cli    
   14001a416:	cli    
   14001a417:	(bad)  
   14001a418:	sti    
   14001a419:	sti    
   14001a41a:	sti    
   14001a41b:	(bad)  
   14001a41c:	sti    
   14001a41d:	sti    
   14001a41e:	sti    
   14001a41f:	(bad)  
   14001a420:	sti    
   14001a421:	sti    
   14001a422:	sti    
   14001a423:	(bad)  
   14001a424:	sti    
   14001a425:	sti    
   14001a426:	sti    
   14001a427:	jmp    QWORD PTR [rax-0x8005f60]
   14001a42d:	div    edi
   14001a42f:	(bad)  
   14001a430:	cld    
   14001a431:	cld    
   14001a432:	cld    
   14001a433:	(bad)  
   14001a434:	stc    
   14001a435:	stc    
   14001a436:	stc    
   14001a437:	push   rbp
   14001a439:	cmc    
   14001a43a:	cmc    
   14001a43b:	push   rcx
   14001a43d:	icebp  
   14001a43e:	icebp  
   14001a43f:	(bad)  
   14001a440:	call   0x100018d2d
   14001a445:	mov    edi,0xf6f6ffbf
   14001a44a:	idiv   bh
   14001a44c:	jmp    0x12b018e3a
   14001a451:	(bad)  
   14001a452:	(bad)  
   14001a453:	(bad)  
   14001a454:	(bad)  
   14001a456:	fsub   QWORD PTR [rsi+0x1c020202]
   14001a45c:	add    BYTE PTR [rax],al
   14001a45e:	add    BYTE PTR [rip+0x0],al        # 0x14001a464
	...
   14001a49c:	add    BYTE PTR [rax],al
   14001a49e:	add    BYTE PTR [rcx],bl
   14001a4a0:	cli    
   14001a4a1:	cli    
   14001a4a2:	cli    
   14001a4a3:	dec    ebp
   14001a4a5:	int    0xcd
   14001a4a7:	mov    WORD PTR [rip+0xffffffffdb223535],?        # 0x11b23d9e2
   14001a4ad:	fcmovnu st,st(3)
   14001a4af:	test   bh,dh
   14001a4b1:	div    edi
   14001a4b3:	dec    esi
   14001a4b5:	(bad)  
   14001a4b6:	(bad)  
   14001a4b7:	push   rdi
   14001a4b9:	div    edi
   14001a4bb:	(bad)  
   14001a4bc:	clc    
   14001a4bd:	clc    
   14001a4be:	clc    
   14001a4bf:	(bad)  
   14001a4c0:	clc    
   14001a4c1:	clc    
   14001a4c2:	clc    
   14001a4c3:	(bad)  
   14001a4c4:	clc    
   14001a4c5:	clc    
   14001a4c6:	clc    
   14001a4c7:	(bad)  
   14001a4c8:	stc    
   14001a4c9:	stc    
   14001a4ca:	stc    
   14001a4cb:	(bad)  
   14001a4cc:	stc    
   14001a4cd:	stc    
   14001a4ce:	stc    
   14001a4cf:	(bad)  
   14001a4d0:	stc    
   14001a4d1:	stc    
   14001a4d2:	stc    
   14001a4d3:	(bad)  
   14001a4d4:	out    dx,al
   14001a4d5:	out    dx,al
   14001a4d6:	out    dx,al
   14001a4d7:	(bad)  
   14001a4d8:	in     eax,dx
   14001a4d9:	in     eax,dx
   14001a4da:	in     eax,dx
   14001a4db:	jmp    rdi
   14001a4dd:	out    0xe7,eax
   14001a4df:	jmp    rdi
   14001a4e1:	out    0xe7,eax
   14001a4e3:	(bad)  
   14001a4e4:	jmp    0x14001a4d1
   14001a4e6:	jmp    0x14001a4e7
   14001a4e8:	out    dx,al
   14001a4e9:	out    dx,al
   14001a4ea:	out    dx,al
   14001a4eb:	call   FWORD PTR [rdx-0x1d006566]
   14001a4f1:	loop   0x14001a4d5
   14001a4f3:	jmp    rbx
   14001a4f5:	jrcxz  0x14001a4da
   14001a4f7:	dec    edi
   14001a4f9:	iret   
   14001a4fa:	iret   
   14001a4fb:	jmp    rax
   14001a4fd:	loopne 0x14001a4df
   14001a4ff:	inc    esp
   14001a501:	(bad)  
   14001a502:	(bad)  
   14001a503:	(bad)  
   14001a504:	mov    ebx,0xf1ffbbbb
   14001a509:	icebp  
   14001a50a:	icebp  
   14001a50b:	(bad)  
   14001a50c:	(bad)  
   14001a50d:	(bad)  
   14001a50e:	(bad)  
   14001a50f:	(bad)  
   14001a510:	fcmovnu st,st(3)
   14001a512:	(bad)  [rbp+0x1c000000]
   14001a518:	add    BYTE PTR [rax],al
   14001a51a:	add    BYTE PTR [rip+0x0],al        # 0x14001a520
	...
   14001a55c:	add    BYTE PTR [rax],al
   14001a55e:	add    BYTE PTR [rcx],bl
   14001a560:	cli    
   14001a561:	cli    
   14001a562:	cli    
   14001a563:	jmp    QWORD PTR [rdx]
   14001a565:	and    ah,BYTE PTR [rdx]
   14001a567:	xor    al,0x0
   14001a569:	add    BYTE PTR [rax],al
   14001a56b:	(bad)  
   14001a56c:	cmp    bh,BYTE PTR [rdx]
   14001a56e:	cmp    ah,BYTE PTR [rsi]
   14001a570:	div    dh
   14001a572:	idiv   bh
   14001a574:	div    dh
   14001a576:	idiv   bh
   14001a578:	div    edi
   14001a57a:	idiv   edi
   14001a57c:	div    edi
   14001a57e:	idiv   edi
   14001a580:	div    edi
   14001a582:	idiv   edi
   14001a584:	clc    
   14001a585:	clc    
   14001a586:	clc    
   14001a587:	(bad)  
   14001a588:	clc    
   14001a589:	clc    
   14001a58a:	clc    
   14001a58b:	(bad)  
   14001a58c:	clc    
   14001a58d:	clc    
   14001a58e:	clc    
   14001a58f:	(bad)  
   14001a590:	stc    
   14001a591:	stc    
   14001a592:	stc    
   14001a593:	(bad)  
   14001a594:	(bad)  
   14001a596:	fdiv   st(7),st
   14001a598:	xlat   BYTE PTR ds:[rbx]
   14001a599:	xlat   BYTE PTR ds:[rbx]
   14001a59a:	xlat   BYTE PTR ds:[rbx]
   14001a59b:	(bad)  
   14001a59c:	clc    
   14001a59d:	clc    
   14001a59e:	clc    
   14001a59f:	(bad)  
   14001a5a0:	(bad)  
   14001a5a2:	fcos   
   14001a5a4:	(bad)  
   14001a5a6:	fcos   
   14001a5a8:	(bad)  
   14001a5a9:	(bad)  
   14001a5aa:	(bad)  
   14001a5ab:	(bad)  
   14001a5ac:	(bad)  
   14001a5ae:	fcos   
   14001a5b0:	mov    dh,0xc6
   14001a5b3:	(bad)  
   14001a5b4:	(bad)  
   14001a5b6:	fdivp  st(7),st
   14001a5b8:	(bad)  
   14001a5b9:	(bad)  
   14001a5ba:	(bad)  
   14001a5bb:	inc    eax
   14001a5bd:	rol    al,0xff
   14001a5c0:	scas   al,BYTE PTR es:[rdi]
   14001a5c1:	scas   al,BYTE PTR es:[rdi]
   14001a5c2:	scas   al,BYTE PTR es:[rdi]
   14001a5c3:	(bad)  
   14001a5c4:	mov    ebx,0xf2ffbbbb
   14001a5c9:	repnz repnz (bad) 
   14001a5cc:	fcmovu st,st(2)
   14001a5ce:	fisub  DWORD PTR [rax+rax*1+0x1c0000]
   14001a5d5:	add    BYTE PTR [rax],al
   14001a5d7:	add    eax,0x0
	...
   14001a61c:	add    BYTE PTR [rax],al
   14001a61e:	add    BYTE PTR [rcx],bl
   14001a620:	stc    
   14001a621:	stc    
   14001a622:	stc    
   14001a623:	inc    ebx
   14001a625:	ret    
   14001a626:	ret    
   14001a627:	xchg   ecx,eax
   14001a628:	and    eax,0xcb352525
   14001a62d:	retf   
   14001a62e:	retf   
   14001a62f:	mov    ?,ebp
   14001a631:	cmc    
   14001a632:	cmc    
   14001a633:	dec    esp
   14001a635:	int3   
   14001a636:	int3   
   14001a637:	push   rsi
   14001a639:	div    dh
   14001a63b:	(bad)  
   14001a63c:	fcomp  st(0)
   14001a63e:	fdivr  st,st(7)
   14001a640:	out    0xe6,al
   14001a642:	out    0xff,al
   14001a644:	int    0xcd
   14001a646:	int    0xff
   14001a648:	call   0x114018f35
   14001a64d:	rcl    ebx,cl
   14001a64f:	(bad)  
   14001a650:	out    dx,eax
   14001a651:	out    dx,eax
   14001a652:	out    dx,eax
   14001a653:	jmp    rdx
   14001a655:	loop   0x14001a639
   14001a657:	push   rbx
   14001a659:	repz repz jmp rdi
   14001a65d:	out    0xe7,eax
   14001a65f:	(bad)  
   14001a660:	in     eax,dx
   14001a661:	in     eax,dx
   14001a662:	in     eax,dx
   14001a663:	push   rax
   14001a665:	lock lock jmp rdi
   14001a669:	out    0xe7,eax
   14001a66b:	(bad)  
   14001a66c:	jmp    0x14001a659
   14001a66e:	jmp    0x14001a66f
   14001a670:	in     eax,dx
   14001a671:	in     eax,dx
   14001a672:	in     eax,dx
   14001a673:	jmp    rsp
   14001a675:	in     al,0xe4
   14001a677:	call   rcx
   14001a679:	rcl    ecx,1
   14001a67b:	call   rax
   14001a67d:	rcl    al,1
   14001a67f:	push   QWORD PTR [rbp-0x24004a4b]
   14001a685:	fcmovnu st,st(3)
   14001a687:	(bad)  
   14001a688:	(bad)  
   14001a68a:	fsub   QWORD PTR [rax+rax*1+0x1c0000]
   14001a691:	add    BYTE PTR [rax],al
   14001a693:	add    eax,0x0
	...
   14001a6dc:	add    BYTE PTR [rax],al
   14001a6de:	add    BYTE PTR [rcx],bl
   14001a6e0:	sti    
   14001a6e1:	sti    
   14001a6e2:	sti    
   14001a6e3:	(bad)  
   14001a6e4:	stc    
   14001a6e5:	stc    
   14001a6e6:	stc    
   14001a6e7:	(bad)  
   14001a6e8:	stc    
   14001a6e9:	stc    
   14001a6ea:	stc    
   14001a6eb:	(bad)  
   14001a6ec:	stc    
   14001a6ed:	stc    
   14001a6ee:	stc    
   14001a6ef:	(bad)  
   14001a6f0:	cli    
   14001a6f1:	cli    
   14001a6f2:	cli    
   14001a6f3:	(bad)  
   14001a6f4:	cli    
   14001a6f5:	cli    
   14001a6f6:	cli    
   14001a6f7:	(bad)  
   14001a6f8:	cli    
   14001a6f9:	cli    
   14001a6fa:	cli    
   14001a6fb:	(bad)  
   14001a6fc:	cli    
   14001a6fd:	cli    
   14001a6fe:	cli    
   14001a6ff:	(bad)  
   14001a700:	cli    
   14001a701:	cli    
   14001a702:	cli    
   14001a703:	(bad)  
   14001a704:	cli    
   14001a705:	cli    
   14001a706:	cli    
   14001a707:	(bad)  
   14001a708:	sti    
   14001a709:	sti    
   14001a70a:	sti    
   14001a70b:	(bad)  
   14001a70c:	sti    
   14001a70d:	sti    
   14001a70e:	sti    
   14001a70f:	(bad)  
   14001a710:	sti    
   14001a711:	sti    
   14001a712:	sti    
   14001a713:	(bad)  
   14001a714:	sti    
   14001a715:	sti    
   14001a716:	sti    
   14001a717:	(bad)  
   14001a718:	sti    
   14001a719:	sti    
   14001a71a:	sti    
   14001a71b:	(bad)  
   14001a71c:	cld    
   14001a71d:	cld    
   14001a71e:	cld    
   14001a71f:	(bad)  
   14001a720:	sti    
   14001a721:	sti    
   14001a722:	sti    
   14001a723:	(bad)  
   14001a724:	cli    
   14001a725:	cli    
   14001a726:	cli    
   14001a727:	(bad)  
   14001a728:	clc    
   14001a729:	clc    
   14001a72a:	clc    
   14001a72b:	push   rbp
   14001a72d:	cmc    
   14001a72e:	cmc    
   14001a72f:	push   rdx
   14001a731:	repnz repnz (bad) 
   14001a734:	out    dx,eax
   14001a735:	out    dx,eax
   14001a736:	out    dx,eax
   14001a737:	(bad)  
   14001a738:	jmp    0x124019126
   14001a73d:	jrcxz  0x14001a722
   14001a73f:	(bad)  
   14001a740:	in     eax,0xe5
   14001a742:	in     eax,0xe8
   14001a744:	xlat   BYTE PTR ds:[rbx]
   14001a745:	xlat   BYTE PTR ds:[rbx]
   14001a746:	xlat   BYTE PTR ds:[rbx]
   14001a747:	xchg   DWORD PTR [rax],eax
   14001a749:	add    BYTE PTR [rax],al
   14001a74b:	sbb    al,BYTE PTR [rax]
   14001a74d:	add    BYTE PTR [rax],al
   14001a74f:	add    eax,0x0
	...
   14001a79c:	add    BYTE PTR [rax],al
   14001a79e:	add    BYTE PTR [rdx],dl
   14001a7a0:	add    BYTE PTR [rax],al
   14001a7a2:	add    BYTE PTR [rsi],dl
   14001a7a4:	add    BYTE PTR [rax],al
   14001a7a6:	add    BYTE PTR [rsi],dl
   14001a7a8:	add    BYTE PTR [rax],al
   14001a7aa:	add    BYTE PTR [rsi],dl
   14001a7ac:	add    BYTE PTR [rax],al
   14001a7ae:	add    BYTE PTR [rsi],dl
   14001a7b0:	add    BYTE PTR [rax],al
   14001a7b2:	add    BYTE PTR [rsi],dl
   14001a7b4:	add    BYTE PTR [rax],al
   14001a7b6:	add    BYTE PTR [rsi],dl
   14001a7b8:	add    BYTE PTR [rax],al
   14001a7ba:	add    BYTE PTR [rsi],dl
   14001a7bc:	add    BYTE PTR [rax],al
   14001a7be:	add    BYTE PTR [rsi],dl
   14001a7c0:	add    BYTE PTR [rax],al
   14001a7c2:	add    BYTE PTR [rsi],dl
   14001a7c4:	add    BYTE PTR [rax],al
   14001a7c6:	add    BYTE PTR [rsi],dl
   14001a7c8:	add    BYTE PTR [rax],al
   14001a7ca:	add    BYTE PTR [rsi],dl
   14001a7cc:	add    BYTE PTR [rax],al
   14001a7ce:	add    BYTE PTR [rsi],dl
   14001a7d0:	add    BYTE PTR [rax],al
   14001a7d2:	add    BYTE PTR [rsi],dl
   14001a7d4:	add    BYTE PTR [rax],al
   14001a7d6:	add    BYTE PTR [rsi],dl
   14001a7d8:	add    BYTE PTR [rax],al
   14001a7da:	add    BYTE PTR [rsi],dl
   14001a7dc:	add    BYTE PTR [rax],al
   14001a7de:	add    BYTE PTR [rsi],dl
   14001a7e0:	add    BYTE PTR [rax],al
   14001a7e2:	add    BYTE PTR [rsi],dl
   14001a7e4:	add    BYTE PTR [rax],al
   14001a7e6:	add    BYTE PTR [rsi],dl
   14001a7e8:	add    BYTE PTR [rax],al
   14001a7ea:	add    BYTE PTR [rsi],dl
   14001a7ec:	add    BYTE PTR [rax],al
   14001a7ee:	add    BYTE PTR [rsi],dl
   14001a7f0:	add    BYTE PTR [rax],al
   14001a7f2:	add    BYTE PTR [rsi],dl
   14001a7f4:	add    BYTE PTR [rax],al
   14001a7f6:	add    BYTE PTR [rsi],dl
   14001a7f8:	add    BYTE PTR [rax],al
   14001a7fa:	add    BYTE PTR [rsi],dl
   14001a7fc:	add    BYTE PTR [rax],al
   14001a7fe:	add    BYTE PTR [rsi],dl
   14001a800:	add    BYTE PTR [rax],al
   14001a802:	add    BYTE PTR [rdx],dl
   14001a804:	add    BYTE PTR [rax],al
   14001a806:	add    BYTE PTR [rdx],cl
   14001a808:	add    BYTE PTR [rax],al
   14001a80a:	add    BYTE PTR [rdx],al
	...
   14001a850:	inc    DWORD PTR [rax-0x40000001]
   14001a856:	ja     0x14001a8cf
   14001a858:	cld    
   14001a859:	add    BYTE PTR [rdi],al
   14001a85b:	(bad)  
   14001a85c:	(bad)  
   14001a85d:	(bad)  
   14001a85e:	ja     0x14001a8d7
   14001a860:	loopne 0x14001a862
   14001a862:	add    BYTE PTR [rdi],bh
   14001a864:	lock (bad) 
   14001a866:	ja     0x14001a8df
   14001a868:	loopne 0x14001a86a
   14001a86a:	add    BYTE PTR [rax],al
   14001a86c:	add    BYTE PTR [rdi],bh
   14001a86e:	ja     0x14001a8e7
   14001a870:	loopne 0x14001a872
   14001a872:	add    BYTE PTR [rax],al
   14001a874:	add    BYTE PTR [rdi],bh
   14001a876:	ja     0x14001a8ef
   14001a878:	loopne 0x14001a87a
   14001a87a:	add    BYTE PTR [rax],al
   14001a87c:	add    BYTE PTR [rdi],bh
   14001a87e:	ja     0x14001a8f7
   14001a880:	loopne 0x14001a882
   14001a882:	add    BYTE PTR [rax],al
   14001a884:	add    BYTE PTR [rdi],bh
   14001a886:	ja     0x14001a8ff
   14001a888:	loopne 0x14001a88a
   14001a88a:	add    BYTE PTR [rax],al
   14001a88c:	add    BYTE PTR [rdi],bh
   14001a88e:	ja     0x14001a907
   14001a890:	loopne 0x14001a892
   14001a892:	add    BYTE PTR [rax],al
   14001a894:	add    BYTE PTR [rdi],bh
   14001a896:	ja     0x14001a90f
   14001a898:	loopne 0x14001a89a
   14001a89a:	add    BYTE PTR [rax],al
   14001a89c:	add    BYTE PTR [rdi],bh
   14001a89e:	ja     0x14001a917
   14001a8a0:	loopne 0x14001a8a2
   14001a8a2:	add    BYTE PTR [rax],al
   14001a8a4:	add    BYTE PTR [rdi],bh
   14001a8a6:	ja     0x14001a91f
   14001a8a8:	loopne 0x14001a8aa
   14001a8aa:	add    BYTE PTR [rax],al
   14001a8ac:	add    BYTE PTR [rdi],bh
   14001a8ae:	ja     0x14001a927
   14001a8b0:	loopne 0x14001a8b2
   14001a8b2:	add    BYTE PTR [rax],al
   14001a8b4:	add    BYTE PTR [rdi],bh
   14001a8b6:	ja     0x14001a92f
   14001a8b8:	loopne 0x14001a8ba
   14001a8ba:	add    BYTE PTR [rax],al
   14001a8bc:	add    BYTE PTR [rbx],al
   14001a8be:	ja     0x14001a937
   14001a8c0:	loopne 0x14001a8c2
   14001a8c2:	add    BYTE PTR [rax],al
   14001a8c4:	add    BYTE PTR [rcx],al
   14001a8c6:	ja     0x14001a93f
   14001a8c8:	loopne 0x14001a8ca
   14001a8ca:	add    BYTE PTR [rax],al
   14001a8cc:	add    BYTE PTR [rax],al
   14001a8ce:	ja     0x14001a947
   14001a8d0:	loopne 0x14001a8d2
   14001a8d2:	add    BYTE PTR [rax],al
   14001a8d4:	add    BYTE PTR [rax],al
   14001a8d6:	ja     0x14001a94f
   14001a8d8:	loopne 0x14001a8da
   14001a8da:	add    BYTE PTR [rax],al
   14001a8dc:	add    BYTE PTR [rax],al
   14001a8de:	ja     0x14001a957
   14001a8e0:	loopne 0x14001a8e2
   14001a8e2:	add    BYTE PTR [rax],al
   14001a8e4:	add    BYTE PTR [rax],al
   14001a8e6:	ja     0x14001a95f
   14001a8e8:	loopne 0x14001a8ea
   14001a8ea:	add    BYTE PTR [rax],al
   14001a8ec:	add    BYTE PTR [rax],al
   14001a8ee:	ja     0x14001a967
   14001a8f0:	loopne 0x14001a8f2
   14001a8f2:	add    BYTE PTR [rax],al
   14001a8f4:	add    BYTE PTR [rax],al
   14001a8f6:	ja     0x14001a96f
   14001a8f8:	loopne 0x14001a8fa
   14001a8fa:	add    BYTE PTR [rax],al
   14001a8fc:	add    BYTE PTR [rax],al
   14001a8fe:	ja     0x14001a977
   14001a900:	loopne 0x14001a902
   14001a902:	add    BYTE PTR [rax],al
   14001a904:	add    BYTE PTR [rax],al
   14001a906:	ja     0x14001a97f
   14001a908:	loopne 0x14001a90a
   14001a90a:	add    BYTE PTR [rax],al
   14001a90c:	add    BYTE PTR [rax],al
   14001a90e:	ja     0x14001a987
   14001a910:	loopne 0x14001a912
   14001a912:	add    BYTE PTR [rax],al
   14001a914:	add    BYTE PTR [rcx],al
   14001a916:	ja     0x14001a98f
   14001a918:	loopne 0x14001a91a
   14001a91a:	add    BYTE PTR [rax],al
   14001a91c:	add    BYTE PTR [rbx],al
   14001a91e:	ja     0x14001a997
   14001a920:	loopne 0x14001a922
   14001a922:	add    BYTE PTR [rax],al
   14001a924:	add    BYTE PTR [rdi],bh
   14001a926:	ja     0x14001a99f
   14001a928:	loopne 0x14001a92a
   14001a92a:	add    BYTE PTR [rax],al
   14001a92c:	add    BYTE PTR [rdi],bh
   14001a92e:	ja     0x14001a9a7
   14001a930:	add    BYTE PTR [rax],0x0
   14001a933:	add    BYTE PTR [rax],al
   14001a935:	(bad)  
   14001a936:	ja     0x14001a9af
   14001a938:	rol    BYTE PTR [rax],0x0
   14001a93b:	add    BYTE PTR [rax],al
   14001a93d:	(bad)  
   14001a93e:	ja     0x14001a9b7
   14001a940:	loopne 0x14001a942
   14001a942:	add    BYTE PTR [rax],al
   14001a944:	add    BYTE PTR [rdi],bh
   14001a946:	ja     0x14001a9bf
   14001a948:	loopne 0x14001a94a
   14001a94a:	add    BYTE PTR [rax],al
   14001a94c:	add    BYTE PTR [rdi],bh
   14001a94e:	ja     0x14001a9c7
   14001a950:	loopne 0x14001a952
   14001a952:	add    BYTE PTR [rax],al
   14001a954:	add    BYTE PTR [rdi],bh
   14001a956:	ja     0x14001a9cf
   14001a958:	loopne 0x14001a95a
   14001a95a:	add    BYTE PTR [rax],al
   14001a95c:	add    BYTE PTR [rdi],bh
   14001a95e:	ja     0x14001a9d7
   14001a960:	loopne 0x14001a962
   14001a962:	add    BYTE PTR [rax],al
   14001a964:	add    BYTE PTR [rdi],bh
   14001a966:	ja     0x14001a9df
   14001a968:	loopne 0x14001a96a
   14001a96a:	add    BYTE PTR [rax],al
   14001a96c:	add    BYTE PTR [rdi],bh
   14001a96e:	ja     0x14001a9e7
   14001a970:	loopne 0x14001a972
   14001a972:	add    BYTE PTR [rax],al
   14001a974:	add    BYTE PTR [rdi],bh
   14001a976:	ja     0x14001a9ef
   14001a978:	loopne 0x14001a97a
   14001a97a:	add    BYTE PTR [rax],al
   14001a97c:	add    BYTE PTR [rdi+0x77],bh
   14001a97f:	ja     0x14001a961
   14001a981:	add    BYTE PTR [rax],al
   14001a983:	add    BYTE PTR [rax],al
   14001a985:	push   QWORD PTR [rdi+0x77]
   14001a988:	loopne 0x14001a98a
   14001a98a:	add    BYTE PTR [rax],al
   14001a98c:	add    edi,edi
   14001a98e:	ja     0x14001aa07
   14001a990:	loopne 0x14001a992
   14001a992:	add    BYTE PTR [rax],al
   14001a994:	add    edi,edi
   14001a996:	ja     0x14001aa0f
   14001a998:	loopne 0x14001a99a
   14001a99a:	add    BYTE PTR [rax],al
   14001a99c:	(bad)  
   14001a99d:	push   QWORD PTR [rdi+0x77]
   14001a9a0:	loopne 0x14001a9a2
   14001a9a2:	add    BYTE PTR [rax],al
   14001a9a4:	ud0    esi,DWORD PTR [rdi+0x77]
   14001a9a8:	loopne 0x14001a9aa
   14001a9aa:	add    BYTE PTR [rax],al
   14001a9ac:	(bad)  
   14001a9ad:	push   QWORD PTR [rdi+0x77]
   14001a9b0:	loopne 0x14001a9b2
   14001a9b2:	add    BYTE PTR [rax],al
   14001a9b4:	(bad)  
   14001a9b5:	push   QWORD PTR [rdi+0x77]
   14001a9b8:	loopne 0x14001a9ba
   14001a9ba:	add    BYTE PTR [rax],al
   14001a9bc:	jg     0x14001a9bd
   14001a9be:	ja     0x14001aa37
   14001a9c0:	loopne 0x14001a9c2
   14001a9c2:	add    BYTE PTR [rax],al
   14001a9c4:	(bad)  
   14001a9c5:	push   QWORD PTR [rdi+0x77]
   14001a9c8:	loopne 0x14001a9ca
   14001a9ca:	add    BYTE PTR [rcx],al
   14001a9cc:	(bad)  
   14001a9cd:	push   QWORD PTR [rdi+0x77]
   14001a9d0:	sub    BYTE PTR [rax],al
   14001a9d2:	add    BYTE PTR [rax],al
   14001a9d4:	and    BYTE PTR [rax],al
   14001a9d6:	add    BYTE PTR [rax],al
   14001a9d8:	add    BYTE PTR [rax],al
   14001a9db:	add    BYTE PTR [rcx],al
   14001a9dd:	add    BYTE PTR [rax],ah
	...
   14001aa13:	add    al,0x0
   14001aa15:	add    BYTE PTR [rax],al
   14001aa17:	(bad)  
   14001aa18:	add    BYTE PTR [rax],al
   14001aa1a:	add    BYTE PTR [rdi],al
   14001aa1c:	add    BYTE PTR [rax],al
   14001aa1e:	add    BYTE PTR [rip+0x1000000],al        # 0x14101aa24
	...
   14001aa3c:	(bad)  
   14001aa3d:	(bad)  
   14001aa3e:	inc    DWORD PTR [rcx-0x36000001]
   14001aa44:	(bad)  
   14001aa45:	(bad)  
   14001aa46:	push   rsi
   14001aa48:	(bad)  
   14001aa49:	(bad)  
   14001aa4a:	(bad)  
   14001aa4b:	(bad)  
   14001aa4c:	(bad)  
   14001aa4d:	(bad)  
   14001aa4e:	(bad)  
   14001aa4f:	(bad)  
   14001aa50:	(bad)  
   14001aa51:	(bad)  
   14001aa52:	(bad)  
   14001aa53:	(bad)  
   14001aa54:	(bad)  
   14001aa55:	(bad)  
   14001aa56:	push   rsi
   14001aa58:	(bad)  
   14001aa59:	(bad)  
   14001aa5a:	dec    eax
   14001aa5c:	(bad)  
   14001aa5d:	(bad)  
   14001aa5e:	inc    DWORD PTR [rcx+0x0]
	...
   14001aa84:	add    BYTE PTR [rax],al
   14001aa86:	add    BYTE PTR [rdi],al
   14001aa88:	add    BYTE PTR [rax],al
   14001aa8a:	add    BYTE PTR [rax],bl
   14001aa8c:	and    DWORD PTR [rcx],esp
   14001aa8e:	and    DWORD PTR [rax],esi
   14001aa90:	pop    rsp
   14001aa91:	pop    rsp
   14001aa92:	pop    rsp
   14001aa93:	rex.WX
   14001aa94:	gs gs gs push rcx
   14001aa98:	ss ss ss rex.R xor eax,0x413535
   14001aaa1:	add    BYTE PTR [rax],al
   14001aaa3:	xor    BYTE PTR [rax],al
   14001aaa5:	add    BYTE PTR [rax],al
   14001aaa7:	and    al,0x0
   14001aaa9:	add    BYTE PTR [rax],al
   14001aaab:	adc    eax,0xa000000
   14001aab0:	add    BYTE PTR [rax],al
   14001aab2:	add    BYTE PTR [rdx],al
   14001aab4:	add    BYTE PTR [rax],al
   14001aab6:	add    BYTE PTR [rax],al
   14001aab8:	(bad)  
   14001aab9:	(bad)  
   14001aaba:	inc    DWORD PTR [rcx-0x723]
   14001aac0:	jbe    0x14001aaa4
   14001aac2:	(bad)  
   14001aac3:	dec    DWORD PTR [rax-0x2a]
   14001aac6:	(bad)  
   14001aac7:	(bad)  
   14001aac8:	cmp    al,0xcf
   14001aaca:	(bad)  
   14001aacb:	push   QWORD PTR [rsi]
   14001aacd:	retf   
   14001aace:	(bad)  
   14001aacf:	push   QWORD PTR [rax]
   14001aad1:	(bad)  
   14001aad4:	xor    al,bl
   14001aad6:	(bad)  
   14001aad7:	call   FWORD PTR [rsi+rcx*8-0x1]
   14001aadb:	call   rsi
   14001aadd:	repnz (bad) 
   14001aadf:	(bad)  
   14001aae0:	(bad)  
   14001aae1:	(bad)  
   14001aae2:	inc    DWORD PTR [rcx+0x0]
	...
   14001aafc:	add    BYTE PTR [rax],al
   14001aafe:	add    BYTE PTR [rax+rax*1],al
   14001ab01:	add    BYTE PTR [rax],al
   14001ab03:	sbb    al,0x5
   14001ab05:	add    eax,0x81813705
   14001ab0a:	xor    DWORD PTR [rcx-0x17],0xe6f8e9e9
   14001ab11:	out    0xe6,al
   14001ab13:	jmp    rcx
   14001ab15:	loope  0x14001aaf8
   14001ab17:	cmc    
   14001ab18:	(bad)  
   14001ab19:	(bad)  
   14001ab1a:	(bad)  
   14001ab1b:	jmp    0x12cdd86fb
   14001ab20:	(bad)  
   14001ab22:	(bad)  
   14001ab24:	mov    ah,0xb4
   14001ab26:	mov    ah,0xa2
   14001ab28:	jbe    0x14001aba0
   14001ab2a:	jbe    0x14001ab96
   14001ab2c:	es es add BYTE PTR es:[rax],r8b
   14001ab32:	add    BYTE PTR [rcx],dh
   14001ab34:	add    BYTE PTR [rax],al
   14001ab36:	add    BYTE PTR [rdx],ah
   14001ab38:	(bad)  
   14001ab39:	(bad)  
   14001ab3a:	(bad)  
   14001ab3b:	out    dx,eax
   14001ab3c:	addr32 in al,0xff
   14001ab3f:	dec    DWORD PTR [rsp+rbx*8-0x1]
   14001ab43:	inc    DWORD PTR [rsi-0x29]
   14001ab46:	(bad)  
   14001ab47:	inc    DWORD PTR [rax-0x2d]
   14001ab4a:	(bad)  
   14001ab4b:	(bad)  
   14001ab4c:	cmp    ecx,esi
   14001ab4e:	(bad)  
   14001ab4f:	push   QWORD PTR [rip+0xffffffffd4ffffca]        # 0x11501ab1f
   14001ab55:	repz (bad) 
   14001ab57:	dec    edi
   14001ab59:	icebp  
   14001ab5a:	(bad)  
   14001ab5b:	(bad)  
   14001ab5c:	(bad)  
   14001ab5d:	(bad)  
   14001ab5e:	(bad)  
   14001ab5f:	(bad)  
   14001ab60:	(bad)  
   14001ab61:	(bad)  
   14001ab62:	(bad)  
   14001ab63:	out    dx,al
	...
   14001ab7c:	add    BYTE PTR [rax],al
   14001ab7e:	add    BYTE PTR [rip+0xffffffffa3c0c0c0],bl        # 0xe3c26c44
   14001ab84:	out    0xe6,al
   14001ab86:	out    0xf8,al
   14001ab88:	call   0x128019475
   14001ab8d:	out    0xe7,eax
   14001ab8f:	jmp    rbp
   14001ab91:	in     eax,0xe5
   14001ab93:	jmp    rsi
   14001ab95:	out    0xe6,al
   14001ab97:	jmp    rsi
   14001ab99:	out    0xe6,al
   14001ab9b:	jmp    rsp
   14001ab9d:	in     al,0xe4
   14001ab9f:	jmp    rsp
   14001aba1:	in     al,0xe4
   14001aba3:	(bad)  
   14001aba4:	(bad)  
   14001aba6:	fdivp  st(7),st
   14001aba8:	loop   0x14001ab8c
   14001abaa:	loop   0x14001abaa
   14001abac:	loop   0x14001ab90
   14001abae:	loop   0x14001aba3
   14001abb0:	fcomp  st(0)
   14001abb2:	fcom   st(3)
   14001abb4:	rcl    al,1
   14001abb6:	sar    BYTE PTR [rdx-0x1],1
   14001abbc:	push   rsi
   14001abbd:	in     al,0xff
   14001abbf:	call   QWORD PTR [rcx-0x20]
   14001abc2:	(bad)  
   14001abc3:	dec    DWORD PTR [rbx-0x25]
   14001abc6:	(bad)  
   14001abc7:	inc    DWORD PTR [rbp-0x29]
   14001abca:	(bad)  
   14001abcb:	(bad)  
   14001abcc:	(bad)  
   14001abcd:	sar    bh,cl
   14001abcf:	(bad)  
   14001abd0:	cmp    ebp,ecx
   14001abd2:	(bad)  
   14001abd3:	call   rbp
   14001abd5:	hlt    
   14001abd6:	(bad)  
   14001abd7:	call   rax
   14001abd9:	repnz (bad) 
   14001abdb:	jmp    FWORD PTR [rax]
   14001abdd:	mov    edi,0xffffffff
   14001abe2:	(bad)  
   14001abe3:	inc    DWORD PTR [rax]
	...
   14001abfd:	add    BYTE PTR [rax],al
   14001abff:	(bad)  
   14001ac00:	repz repz repz inc DWORD PTR [rdx-0x6b9e7d7e]
   14001ac09:	xchg   esp,eax
   14001ac0a:	xchg   esp,eax
   14001ac0b:	push   rsi
   14001ac0c:	call   0x1030194f9
   14001ac11:	ret    0xffc2
   14001ac14:	retf   0xcaca
   14001ac17:	dec    edi
   14001ac19:	iret   
   14001ac1a:	iret   
   14001ac1b:	dec    ebp
   14001ac1d:	int    0xcd
   14001ac1f:	(bad)  
   14001ac20:	(bad)  
   14001ac22:	fdiv   st(7),st
   14001ac24:	rcl    ecx,1
   14001ac26:	sar    edi,1
   14001ac28:	leave  
   14001ac29:	leave  
   14001ac2a:	leave  
   14001ac2b:	inc    ebp
   14001ac2d:	(bad)
   14001ac30:	retf   0xcaca
   14001ac33:	dec    ecx
   14001ac35:	leave  
   14001ac36:	leave  
   14001ac37:	(bad)  
   14001ac38:	(bad)  
   14001ac39:	(bad)  
   14001ac3a:	(bad)  
   14001ac3b:	call   FWORD PTR [rbx-0x18]
   14001ac3e:	(bad)  
   14001ac3f:	call   QWORD PTR [rbp-0x1d]
   14001ac42:	(bad)  
   14001ac43:	call   QWORD PTR [rax-0x21]
   14001ac46:	(bad)  
   14001ac47:	dec    DWORD PTR [rdx-0x26]
   14001ac4a:	(bad)  
   14001ac4b:	inc    DWORD PTR [rsi+rdx*8-0x1]
   14001ac4f:	(bad)  
   14001ac50:	ds sar edi,1
   14001ac53:	(bad)  
   14001ac54:	cmp    ch,cl
   14001ac56:	(bad)  
   14001ac57:	push   QWORD PTR [rdx]
   14001ac59:	enter  0xffff,0x2d
   14001ac5d:	ret    
   14001ac5e:	(bad)  
   14001ac5f:	(bad)  
   14001ac60:	(bad)  
   14001ac61:	(bad)  
   14001ac62:	(bad)  
   14001ac63:	inc    DWORD PTR [rax]
	...
   14001ac7d:	add    BYTE PTR [rax],al
   14001ac7f:	(bad)  
   14001ac80:	hlt    
   14001ac81:	hlt    
   14001ac82:	hlt    
   14001ac83:	push   QWORD PTR [rbp+0x75]
   14001ac86:	jne    0x14001acf6
   14001ac88:	jnp    0x14001ad05
   14001ac8a:	jnp    0x14001acf6
   14001ac8c:	(bad)  
   14001ac8d:	(bad)  
   14001ac8e:	(bad)  
   14001ac8f:	dec    esi
   14001ac91:	(bad)  
   14001ac92:	(bad)  
   14001ac93:	call   rdx
   14001ac95:	rcl    dl,cl
   14001ac97:	(bad)  
   14001ac98:	(bad)  
   14001ac9a:	fdiv   st(7),st
   14001ac9c:	(bad)  
   14001ac9d:	(bad)  
   14001ac9e:	(bad)  
   14001ac9f:	jmp    rdi
   14001aca1:	out    0xe7,eax
   14001aca3:	(bad)  
   14001aca4:	(bad)  
   14001aca6:	fdivp  st(7),st
   14001aca8:	loop   0x14001ac8c
   14001acaa:	loop   0x14001acab
   14001acac:	std    
   14001acad:	std    
   14001acae:	std    
   14001acaf:	(bad)  
   14001acb0:	(bad)  
   14001acb1:	(bad)  
   14001acb2:	(bad)  
   14001acb3:	(bad)  
   14001acb4:	(bad)  
   14001acb5:	(bad)  
   14001acb6:	(bad)  
   14001acb7:	(bad)  
   14001acb8:	(bad)  
   14001acb9:	(bad)  
   14001acba:	(bad)  
   14001acbb:	jmp    QWORD PTR [rax-0x15]
   14001acbe:	(bad)  
   14001acbf:	call   FWORD PTR [rdx-0x19]
   14001acc2:	(bad)  
   14001acc3:	call   QWORD PTR [rdx+riz*8-0x1]
   14001acc7:	dec    DWORD PTR [rdi-0x22]
   14001acca:	(bad)  
   14001accb:	push   QWORD PTR [rax+rsi*8-0x1]
   14001acd2:	(bad)  
   14001acd3:	(bad)  
   14001acd4:	(bad)  
   14001acd5:	(bad)  
   14001acd6:	(bad)  
   14001acd7:	(bad)  
   14001acd8:	(bad)  
   14001acd9:	(bad)  
   14001acda:	(bad)  
   14001acdb:	(bad)  
   14001acdc:	(bad)  
   14001acdd:	(bad)  
   14001acde:	(bad)  
   14001acdf:	(bad)  
   14001ace0:	(bad)  
   14001ace1:	(bad)  
   14001ace2:	(bad)  
   14001ace3:	(bad)  
   14001ace4:	(bad)  
   14001ace5:	(bad)  
   14001ace6:	(bad)  
   14001ace7:	(bad)  
   14001ace8:	(bad)  
   14001ace9:	(bad)  
   14001acea:	(bad)  
   14001aceb:	(bad)  
   14001acec:	(bad)  
   14001aced:	(bad)  
   14001acee:	(bad)  
   14001acef:	out    dx,eax
   14001acf0:	(bad)  
   14001acf1:	(bad)  
   14001acf2:	inc    DWORD PTR [rcx+0x0]
   14001acf8:	add    BYTE PTR [rax],al
   14001acfa:	add    BYTE PTR [rax],al
   14001acfc:	add    BYTE PTR [rax],al
   14001acfe:	add    BYTE PTR [rdi],bl
   14001ad00:	hlt    
   14001ad01:	hlt    
   14001ad02:	hlt    
   14001ad03:	(bad)  
   14001ad04:	in     al,dx
   14001ad05:	in     al,dx
   14001ad06:	in     al,dx
   14001ad07:	(bad)  
   14001ad08:	jmp    0x14001acf5
   14001ad0a:	jmp    0x14001ad0b
   14001ad0c:	jmp    0x14001acf9
   14001ad0e:	jmp    0x14001ad0f
   14001ad10:	(bad)  
   14001ad11:	(bad)  
   14001ad12:	(bad)  
   14001ad13:	(bad)  
   14001ad14:	(bad)  
   14001ad15:	(bad)  
   14001ad16:	(bad)  
   14001ad17:	(bad)  
   14001ad18:	jmp    0x12a019706
   14001ad1d:	jmp    0x128eaad0b
   14001ad22:	call   0x130f29e26
   14001ad27:	(bad)  
   14001ad28:	in     eax,dx
   14001ad29:	in     eax,0xda
   14001ad2b:	jmp    QWORD PTR [rdi-0x6a00a97d]
   14001ad31:	outs   dx,DWORD PTR ds:[rsi]
   14001ad32:	rex dec DWORD PTR [rsi-0xbe94]
   14001ad39:	(bad)  
   14001ad3a:	(bad)  
   14001ad3b:	jmp    QWORD PTR [rdx-0x13]
   14001ad3e:	(bad)  
   14001ad3f:	call   FWORD PTR [rdi-0x16]
   14001ad42:	(bad)  
   14001ad43:	call   FWORD PTR [rcx-0x1a]
   14001ad46:	(bad)  
   14001ad47:	call   QWORD PTR [rbx-0x1e]
   14001ad4a:	(bad)  
   14001ad4b:	dec    DWORD PTR [rbp-0x23]
   14001ad4e:	(bad)  
   14001ad4f:	inc    DWORD PTR [rdi-0x28]
   14001ad52:	(bad)  
   14001ad53:	inc    DWORD PTR [rdx-0x2c]
   14001ad56:	(bad)  
   14001ad57:	(bad)  
   14001ad58:	cmp    al,0xcf
   14001ad5a:	(bad)  
   14001ad5b:	push   QWORD PTR [rsi]
   14001ad5d:	retf   
   14001ad5e:	(bad)  
   14001ad5f:	push   QWORD PTR [rax]
   14001ad61:	(bad)  
   14001ad64:	sub    eax,ecx
   14001ad66:	(bad)  
   14001ad67:	jmp    QWORD PTR [rip+0x3cffffbc]        # 0x17d01ad29
   14001ad6d:	sar    edi,0xff
   14001ad70:	(bad)  
   14001ad71:	repnz (bad) 
   14001ad73:	(bad)  
   14001ad74:	(bad)  
   14001ad75:	(bad)  
   14001ad76:	inc    DWORD PTR [rcx+0x0]
   14001ad7c:	add    BYTE PTR [rax],al
   14001ad7e:	add    BYTE PTR [rdi],bl
   14001ad80:	cmc    
   14001ad81:	cmc    
   14001ad82:	cmc    
   14001ad83:	inc    DWORD PTR [rsp+rax*4-0x68689e7c]
   14001ad8a:	xchg   edi,eax
   14001ad8b:	push   rsi
   14001ad8c:	in     al,dx
   14001ad8d:	in     al,dx
   14001ad8e:	in     al,dx
   14001ad8f:	(bad)  
   14001ad90:	in     al,dx
   14001ad91:	in     al,dx
   14001ad92:	in     al,dx
   14001ad93:	(bad)  
   14001ad94:	jmp    0x14001ad81
   14001ad96:	jmp    0x14001ad97
   14001ad98:	out    0xe6,al
   14001ad9a:	out    0xff,al
   14001ad9c:	ret    
   14001ad9d:	ret    
   14001ad9e:	ret    
   14001ad9f:	(bad)  
   14001ada0:	(bad)  
   14001ada1:	(bad)  
   14001ada2:	(bad)  
   14001ada3:	(bad)  
   14001ada4:	cli    
   14001ada5:	cli    
   14001ada6:	cli    
   14001ada7:	(bad)  
   14001ada8:	mov    ebx,0xa0ff6d99
   14001adad:	je     0x14001aded
   14001adaf:	call   FWORD PTR [rdx-0x6c00c08f]
   14001adb5:	outs   dx,BYTE PTR ds:[rsi]
   14001adb6:	rex (bad) 
   14001adb8:	(bad)  
   14001adb9:	(bad)  
   14001adba:	(bad)  
   14001adbb:	jmp    QWORD PTR [rdx-0x13]
   14001adbe:	(bad)  
   14001adbf:	jmp    QWORD PTR [rdx-0x13]
   14001adc2:	(bad)  
   14001adc3:	call   FWORD PTR [rsi-0x16]
   14001adc6:	(bad)  
   14001adc7:	call   FWORD PTR [rax-0x1b]
   14001adca:	(bad)  
   14001adcb:	call   QWORD PTR [rdx-0x1f]
   14001adce:	(bad)  
   14001adcf:	dec    DWORD PTR [rsp+rbx*8-0x1]
   14001add3:	inc    DWORD PTR [rsi-0x28]
   14001add6:	(bad)  
   14001add7:	inc    DWORD PTR [rcx-0x2d]
   14001adda:	(bad)  
   14001addb:	(bad)  
   14001addc:	cmp    ecx,edi
   14001adde:	(bad)  
   14001addf:	push   QWORD PTR [rip+0x2fffffca]        # 0x17001adaf
   14001ade5:	(bad)  
   14001ade8:	sub    eax,eax
   14001adea:	(bad)  
   14001adeb:	jmp    QWORD PTR [rsp+rdi*4]
   14001adee:	(bad)  
   14001adef:	call   FWORD PTR [rcx-0x35]
   14001adf2:	(bad)  
   14001adf3:	(bad)  
   14001adf4:	(bad)  
   14001adf5:	(bad)  
   14001adf6:	dec    eax
   14001adf8:	add    BYTE PTR [rax],al
   14001adfa:	add    BYTE PTR [rax],al
   14001adfc:	add    BYTE PTR [rax],al
   14001adfe:	add    BYTE PTR [rdi],bl
   14001ae00:	div    dh
   14001ae02:	idiv   bh
   14001ae04:	ja     0x14001ae7d
   14001ae06:	ja     0x14001ae76
   14001ae08:	jge    0x14001ae87
   14001ae0a:	jge    0x14001ae76
   14001ae0c:	in     eax,dx
   14001ae0d:	in     eax,dx
   14001ae0e:	in     eax,dx
   14001ae0f:	(bad)  
   14001ae10:	in     eax,dx
   14001ae11:	in     eax,dx
   14001ae12:	in     eax,dx
   14001ae13:	(bad)  
   14001ae14:	in     al,dx
   14001ae15:	in     al,dx
   14001ae16:	in     al,dx
   14001ae17:	(bad)  
   14001ae18:	jmp    0x14001ae05
   14001ae1a:	jmp    0x14001ae1b
   14001ae1c:	(bad)  
   14001ae1d:	(bad)  
   14001ae1e:	(bad)  
   14001ae1f:	(bad)  
   14001ae20:	jmp    0x14001ae0d
   14001ae22:	jmp    0x14001ae23
   14001ae24:	(bad)  
   14001ae25:	(bad)  
   14001ae26:	(bad)  
   14001ae27:	jmp    FWORD PTR [rsi-0x5a00bc82]
   14001ae2d:	jbe    0x14001ae6c
   14001ae2f:	call   FWORD PTR [rsi-0x6700c18d]
   14001ae35:	jo     0x14001ae76
   14001ae37:	(bad)  
   14001ae38:	(bad)  
   14001ae39:	(bad)  
   14001ae3a:	(bad)  
   14001ae3b:	jmp    QWORD PTR [rdx-0x13]
   14001ae3e:	(bad)  
   14001ae3f:	jmp    QWORD PTR [rdx-0x13]
   14001ae42:	(bad)  
   14001ae43:	jmp    QWORD PTR [rcx-0x14]
   14001ae46:	(bad)  
   14001ae47:	call   FWORD PTR [rbp-0x17]
   14001ae4a:	(bad)  
   14001ae4b:	call   QWORD PTR [rdi-0x1c]
   14001ae4e:	(bad)  
   14001ae4f:	call   QWORD PTR [rcx-0x20]
   14001ae52:	(bad)  
   14001ae53:	dec    DWORD PTR [rbx-0x25]
   14001ae56:	(bad)  
   14001ae57:	inc    DWORD PTR [rbp-0x29]
   14001ae5a:	(bad)  
   14001ae5b:	inc    DWORD PTR [rax-0x2e]
   14001ae5e:	(bad)  
   14001ae5f:	(bad)  
   14001ae60:	cmp    cl,dh
   14001ae62:	(bad)  
   14001ae63:	push   QWORD PTR [rcx+rcx*8]
   14001ae66:	(bad)  
   14001ae67:	jmp    FWORD PTR [rsi]
   14001ae69:	(bad)  
   14001ae6a:	(bad)  
   14001ae6b:	jmp    FWORD PTR [rax]
   14001ae6d:	mov    edi,0xbd2bffff
   14001ae72:	(bad)  
   14001ae73:	(bad)  
   14001ae74:	(bad)  
   14001ae75:	(bad)  
   14001ae76:	push   rsi
   14001ae78:	add    BYTE PTR [rax],al
   14001ae7a:	add    BYTE PTR [rax],al
   14001ae7c:	add    BYTE PTR [rax],al
   14001ae7e:	add    BYTE PTR [rdi],bl
   14001ae80:	div    edi
   14001ae82:	idiv   edi
   14001ae84:	lock lock lock (bad) 
   14001ae88:	out    dx,eax
   14001ae89:	out    dx,eax
   14001ae8a:	out    dx,eax
   14001ae8b:	(bad)  
   14001ae8c:	out    dx,eax
   14001ae8d:	out    dx,eax
   14001ae8e:	out    dx,eax
   14001ae8f:	(bad)  
   14001ae90:	out    dx,al
   14001ae91:	out    dx,al
   14001ae92:	out    dx,al
   14001ae93:	(bad)  
   14001ae94:	out    dx,al
   14001ae95:	out    dx,al
   14001ae96:	out    dx,al
   14001ae97:	(bad)  
   14001ae98:	in     eax,dx
   14001ae99:	in     eax,dx
   14001ae9a:	in     eax,dx
   14001ae9b:	(bad)  
   14001ae9c:	in     eax,dx
   14001ae9d:	in     eax,dx
   14001ae9e:	in     eax,dx
   14001ae9f:	(bad)  
   14001aea0:	in     al,dx
   14001aea1:	in     al,dx
   14001aea2:	in     al,dx
   14001aea3:	(bad)  
   14001aea4:	(bad)  
   14001aea5:	(bad)  
   14001aea6:	(bad)  
   14001aea7:	push   QWORD PTR [rax-0x5600c485]
   14001aead:	js     0x14001aeeb
   14001aeaf:	jmp    QWORD PTR [rbx-0x6200c28a]
   14001aeb5:	jae    0x14001aef5
   14001aeb7:	push   rsp
   14001aeb9:	out    dx,eax
   14001aeba:	(bad)  
   14001aebb:	inc    DWORD PTR [rcx+0x62fffff1]
   14001aec1:	in     eax,dx
   14001aec2:	(bad)  
   14001aec3:	jmp    QWORD PTR [rdx-0x13]
   14001aec6:	(bad)  
   14001aec7:	jmp    QWORD PTR [rcx-0x14]
   14001aeca:	(bad)  
   14001aecb:	call   FWORD PTR [rbx-0x18]
   14001aece:	(bad)  
   14001aecf:	call   QWORD PTR [rsi-0x1d]
   14001aed2:	(bad)  
   14001aed3:	call   QWORD PTR [rax-0x21]
   14001aed6:	(bad)  
   14001aed7:	dec    DWORD PTR [rdx-0x26]
   14001aeda:	(bad)  
   14001aedb:	inc    DWORD PTR [rsi+rdx*8-0x1]
   14001aedf:	(bad)  
   14001aee0:	(bad)  
   14001aee1:	sar    edi,1
   14001aee3:	(bad)  
   14001aee4:	cmp    ebp,ecx
   14001aee6:	(bad)  
   14001aee7:	push   QWORD PTR [rbx]
   14001aee9:	enter  0xffff,0x2d
   14001aeed:	ret    
   14001aeee:	(bad)  
   14001aeef:	jmp    QWORD PTR [rdi]
   14001aef1:	mov    esi,0xffffffff
   14001aef6:	(bad)  
   14001aef7:	inc    DWORD PTR [rax]
   14001aef9:	add    BYTE PTR [rax],al
   14001aefb:	add    BYTE PTR [rax],al
   14001aefd:	add    BYTE PTR [rax],al
   14001aeff:	(bad)  
   14001af00:	div    edi
   14001af02:	idiv   edi
   14001af04:	xchg   BYTE PTR [rsi-0x66669e7a],al
   14001af0a:	cdq    
   14001af0b:	push   rsi
   14001af0c:	lock lock lock (bad) 
   14001af10:	out    dx,eax
   14001af11:	out    dx,eax
   14001af12:	out    dx,eax
   14001af13:	(bad)  
   14001af14:	out    dx,eax
   14001af15:	out    dx,eax
   14001af16:	out    dx,eax
   14001af17:	(bad)  
   14001af18:	in     eax,dx
   14001af19:	in     eax,dx
   14001af1a:	in     eax,dx
   14001af1b:	dec    ecx
   14001af1d:	leave  
   14001af1e:	leave  
   14001af1f:	(bad)  
   14001af20:	in     eax,dx
   14001af21:	in     eax,dx
   14001af22:	in     eax,dx
   14001af23:	(bad)  
   14001af24:	(bad)  
   14001af25:	(bad)  
   14001af26:	(bad)  
   14001af27:	push   QWORD PTR [rbp-0x5100c582]
   14001af2d:	jnp    0x14001af6a
   14001af2f:	jmp    FWORD PTR [rax-0x5d00c388]
   14001af35:	jne    0x14001af74
   14001af37:	push   QWORD PTR [rsi-0xb008f69]
   14001af3d:	out    dx,eax
   14001af3e:	jmp    0x14001af42
   14001af43:	(bad)  
   14001af44:	(bad)  
   14001af45:	(bad)  
   14001af46:	(bad)  
   14001af47:	(bad)  
   14001af48:	(bad)  
   14001af49:	(bad)  
   14001af4a:	(bad)  
   14001af4b:	(bad)  
   14001af4c:	(bad)  
   14001af4d:	(bad)  
   14001af4e:	(bad)  
   14001af4f:	(bad)  
   14001af50:	(bad)  
   14001af51:	(bad)  
   14001af52:	(bad)  
   14001af53:	(bad)  
   14001af54:	(bad)  
   14001af55:	(bad)  
   14001af56:	(bad)  
   14001af57:	(bad)  
   14001af58:	(bad)  
   14001af59:	(bad)  
   14001af5a:	(bad)  
   14001af5b:	(bad)  
   14001af5c:	(bad)  
   14001af5d:	cli    
   14001af5e:	(bad)  
   14001af5f:	push   QWORD PTR [rdx-0x21]
   14001af62:	(bad)  
   14001af63:	(bad)  
   14001af64:	cmp    eax,0x37ffffd1
   14001af69:	int3   
   14001af6a:	(bad)  
   14001af6b:	push   QWORD PTR [rdx]
   14001af6d:	enter  0xffff,0x2c
   14001af71:	ret    0xffff
   14001af74:	(bad)  
   14001af75:	(bad)  
   14001af76:	(bad)  
   14001af77:	inc    DWORD PTR [rax]
   14001af79:	add    BYTE PTR [rax],al
   14001af7b:	add    BYTE PTR [rax],al
   14001af7d:	add    BYTE PTR [rax],al
   14001af7f:	(bad)  
   14001af80:	clc    
   14001af81:	clc    
   14001af82:	clc    
   14001af83:	(bad)  
   14001af84:	jns    0x14001afff
   14001af86:	jns    0x14001aff6
   14001af88:	jg     0x14001b009
   14001af8a:	jg     0x14001aff6
   14001af8c:	icebp  
   14001af8d:	icebp  
   14001af8e:	icebp  
   14001af8f:	push   rcx
   14001af91:	icebp  
   14001af92:	icebp  
   14001af93:	push   rax
   14001af95:	lock lock (bad) 
   14001af98:	out    dx,eax
   14001af99:	out    dx,eax
   14001af9a:	out    dx,eax
   14001af9b:	(bad)  
   14001af9c:	fstp   st(5)
   14001af9e:	(bad)  
   14001afa0:	out    dx,al
   14001afa1:	out    dx,al
   14001afa2:	out    dx,al
   14001afa3:	(bad)  
   14001afa4:	(bad)  
   14001afa5:	(bad)  
   14001afa6:	(bad)  
   14001afa7:	(bad)  
   14001afa8:	mov    ecx,0xb3ff3980
   14001afad:	jge    0x14001afe9
   14001afaf:	jmp    FWORD PTR [rbp-0x5800c486]
   14001afb5:	ja     0x14001aff3
   14001afb7:	jmp    QWORD PTR [rcx-0x6400c18b]
   14001afbd:	jb     0x14001affe
   14001afbf:	call   QWORD PTR [rbp-0x7000bf91]
   14001afc5:	ins    BYTE PTR es:[rdi],dx
   14001afc6:	dec    DWORD PTR [r9-0x7c00bd97]
   14001afcd:	data16 rex.R (bad) 
   14001afd0:	jge    0x14001b036
   14001afd2:	rex.RB (bad) 
   14001afd4:	jl     0x14001b039
   14001afd6:	rex.RB (bad) 
   14001afd8:	jl     0x14001b03d
   14001afda:	rex.RB call QWORD PTR [r14-0x1500967e]
   14001afe1:	cli    
   14001afe2:	(bad)  
   14001afe3:	inc    DWORD PTR [rdx-0x2c]
   14001afe6:	(bad)  
   14001afe7:	(bad)  
   14001afe8:	cmp    al,0xd0
   14001afea:	(bad)  
   14001afeb:	push   QWORD PTR [rsi]
   14001afed:	retf   
   14001afee:	(bad)  
   14001afef:	push   QWORD PTR [rcx]
   14001aff1:	(bad)  
   14001aff2:	(bad)  
   14001aff3:	(bad)  
   14001aff4:	(bad)  
   14001aff5:	(bad)  
   14001aff6:	(bad)  
   14001aff7:	inc    DWORD PTR [rax]
   14001aff9:	add    BYTE PTR [rax],al
   14001affb:	add    BYTE PTR [rax],al
   14001affd:	add    BYTE PTR [rax],al
   14001afff:	(bad)  
   14001b000:	clc    
   14001b001:	clc    
   14001b002:	clc    
   14001b003:	push   rbx
   14001b005:	repz repz push rbx
   14001b009:	repz repz push rdx
   14001b00d:	repnz repnz push rdx
   14001b011:	repnz repnz push rcx
   14001b015:	icebp  
   14001b016:	icebp  
   14001b017:	push   rcx
   14001b019:	icebp  
   14001b01a:	icebp  
   14001b01b:	push   rax
   14001b01d:	lock lock push rax
   14001b021:	lock lock (bad) 
   14001b024:	(bad)  
   14001b025:	(bad)  
   14001b026:	(bad)  
   14001b027:	inc    ecx
   14001b029:	xchg   DWORD PTR [rdi],edi
   14001b02b:	(bad)  
   14001b02c:	mov    eax,0xb2ff397f
   14001b031:	jge    0x14001b06d
   14001b033:	jmp    FWORD PTR [rdx+rdi*2+0x77a6ff3b]
   14001b03a:	cmp    eax,0x3e74a0ff
   14001b03f:	call   FWORD PTR [rdx-0x6b00c08f]
   14001b045:	outs   dx,BYTE PTR ds:[rsi]
   14001b046:	rex dec DWORD PTR [rsi-0x7700be95]
   14001b04d:	imul   eax,DWORD PTR [rbx-0x1],0xff446682
   14001b054:	jge    0x14001b0b9
   14001b056:	rex.RB (bad) 
   14001b058:	jl     0x14001b0bd
   14001b05a:	rex.RB (bad) 
   14001b05c:	jge    0x14001b0c2
   14001b05e:	rex.RX (bad) 
   14001b060:	(bad)  
   14001b061:	(bad)  
   14001b062:	(bad)  
   14001b063:	inc    DWORD PTR [rdi-0x28]
   14001b066:	(bad)  
   14001b067:	inc    DWORD PTR [rcx-0x2d]
   14001b06a:	(bad)  
   14001b06b:	(bad)  
   14001b06c:	cmp    ecx,edi
   14001b06e:	(bad)  
   14001b06f:	(bad)  
   14001b070:	cmp    eax,0xffffffcc
   14001b075:	(bad)  
   14001b076:	push   rsi
   14001b078:	add    BYTE PTR [rax],al
   14001b07a:	add    BYTE PTR [rax],al
   14001b07c:	add    BYTE PTR [rax],al
   14001b07e:	add    BYTE PTR [rdi],bl
   14001b080:	stc    
   14001b081:	stc    
   14001b082:	stc    
   14001b083:	dec    DWORD PTR [rcx-0x639e7677]
   14001b089:	pushf  
   14001b08a:	pushf  
   14001b08b:	push   rsi
   14001b08c:	hlt    
   14001b08d:	hlt    
   14001b08e:	hlt    
   14001b08f:	jmp    rcx
   14001b091:	loope  0x14001b074
   14001b093:	jmp    rbx
   14001b095:	jrcxz  0x14001b07a
   14001b097:	(bad)  
   14001b098:	out    dx,al
   14001b099:	out    dx,al
   14001b09a:	out    dx,al
   14001b09b:	push   rdx
   14001b09d:	repnz repnz (bad) 
   14001b0a0:	fstp   st(5)
   14001b0a2:	(bad)  
   14001b0a4:	repnz repnz bnd call rdx
   14001b0a9:	movabs ds:0x7fb7ff3882bdff69,eax
   14001b0b2:	cmp    edi,edi
   14001b0b4:	mov    cl,0x7c
   14001b0b6:	cmp    bh,bh
   14001b0b8:	stos   DWORD PTR es:[rdi],eax
   14001b0b9:	jns    0x14001b0f7
   14001b0bb:	jmp    QWORD PTR [rbp-0x6000c28a]
   14001b0c1:	jae    0x14001b101
   14001b0c3:	call   FWORD PTR [rcx-0x6c00c08f]
   14001b0c9:	outs   dx,BYTE PTR ds:[rsi]
   14001b0ca:	rex dec DWORD PTR [rbp-0x7800bd95]
   14001b0d1:	push   0x6580ff43
   14001b0d6:	rex.R (bad) 
   14001b0d8:	jl     0x14001b13d
   14001b0da:	rex.RB (bad) 
   14001b0dc:	jl     0x14001b141
   14001b0de:	rex.RB (bad) 
   14001b0e0:	(bad)  
   14001b0e1:	(bad)  
   14001b0e2:	(bad)  
   14001b0e3:	dec    DWORD PTR [rsp+rbx*8-0x1]
   14001b0e7:	inc    DWORD PTR [rsi-0x29]
   14001b0ea:	(bad)  
   14001b0eb:	inc    DWORD PTR [rax-0x2d]
   14001b0ee:	(bad)  
   14001b0ef:	jmp    FWORD PTR [rbp-0x25]
   14001b0f2:	(bad)  
   14001b0f3:	(bad)  
   14001b0f4:	(bad)  
   14001b0f5:	(bad)  
   14001b0f6:	dec    eax
   14001b0f8:	add    BYTE PTR [rax],al
   14001b0fa:	add    BYTE PTR [rax],al
   14001b0fc:	add    BYTE PTR [rax],al
   14001b0fe:	add    BYTE PTR [rdi],bl
   14001b100:	cli    
   14001b101:	cli    
   14001b102:	cli    
   14001b103:	(bad)  
   14001b104:	jp     0x14001b180
   14001b106:	jp     0x14001b176
   14001b108:	add    DWORD PTR [rcx-0xa0a957f],0xdcdcfff5
   14001b112:	fdiv   st(7),st
   14001b114:	loopne 0x14001b0f6
   14001b116:	loopne 0x14001b117
   14001b118:	fcmovu st,st(2)
   14001b11a:	(bad)  
   14001b11c:	repz repz repz (bad) 
   14001b120:	(bad)  
   14001b122:	fdivp  st(7),st
   14001b124:	icebp  
   14001b125:	icebp  
   14001b126:	icebp  
   14001b127:	push   rsp
   14001b129:	call   0xd3ccb107
   14001b12e:	push   rax
   14001b12f:	(bad)  
   14001b130:	mov    esp,0xb6ff3881
   14001b135:	jle    0x14001b170
   14001b137:	push   QWORD PTR [rax-0x5500c485]
   14001b13d:	jns    0x14001b17b
   14001b13f:	jmp    QWORD PTR [rsi+rsi*2+0x739eff3d]
   14001b146:	call   FWORD PTR ds:[rax-0x6d00c090]
   14001b14d:	ins    DWORD PTR es:[rdi],dx
   14001b14e:	dec    DWORD PTR [r11-0x7a00bd96]
   14001b155:	addr32 rex.XB (bad) 
   14001b158:	jg     0x14001b1bf
   14001b15a:	rex.R (bad) 
   14001b15c:	jl     0x14001b1c1
   14001b15e:	rex.RB (bad) 
   14001b160:	(bad)  
   14001b161:	(bad)  
   14001b162:	(bad)  
   14001b163:	call   QWORD PTR [rax-0x21]
   14001b166:	(bad)  
   14001b167:	dec    DWORD PTR [rdx-0x25]
   14001b16a:	(bad)  
   14001b16b:	call   FWORD PTR [rbx+rbx*8-0x1]
   14001b16f:	(bad)  
   14001b170:	fdivr  st(7),st
   14001b172:	(bad)  
   14001b173:	(bad)  
   14001b174:	(bad)  
   14001b175:	(bad)  
   14001b176:	inc    DWORD PTR [rcx+0x0]
   14001b17c:	add    BYTE PTR [rax],al
   14001b17e:	add    BYTE PTR [rdi],bl
   14001b180:	sti    
   14001b181:	sti    
   14001b182:	sti    
   14001b183:	push   rdi
   14001b185:	div    edi
   14001b187:	push   rsi
   14001b189:	div    dh
   14001b18b:	call   rdi
   14001b18d:	xlat   BYTE PTR ds:[rbx]
   14001b18e:	xlat   BYTE PTR ds:[rbx]
   14001b18f:	push   rsi
   14001b191:	div    dh
   14001b193:	push   rbp
   14001b195:	cmc    
   14001b196:	cmc    
   14001b197:	push   rbp
   14001b199:	cmc    
   14001b19a:	cmc    
   14001b19b:	push   rsp
   14001b19d:	hlt    
   14001b19e:	hlt    
   14001b19f:	push   rsp
   14001b1a1:	hlt    
   14001b1a2:	hlt    
   14001b1a3:	push   rbx
   14001b1a5:	repz repz (bad) 
   14001b1a8:	stc    
   14001b1a9:	stc    
   14001b1aa:	stc    
   14001b1ab:	(bad)  
   14001b1ac:	(bad)  
   14001b1ad:	(bad)  
   14001b1ae:	(bad)  
   14001b1af:	(bad)  
   14001b1b0:	(bad)  
   14001b1b1:	(bad)  
   14001b1b2:	(bad)  
   14001b1b3:	(bad)  
   14001b1b4:	(bad)  
   14001b1b5:	(bad)  
   14001b1b6:	(bad)  
   14001b1b7:	(bad)  
   14001b1b8:	(bad)  
   14001b1b9:	(bad)  
   14001b1ba:	(bad)  
   14001b1bb:	(bad)  
   14001b1bc:	(bad)  
   14001b1bd:	(bad)  
   14001b1be:	(bad)  
   14001b1bf:	(bad)  
   14001b1c0:	(bad)  
   14001b1c1:	(bad)  
   14001b1c2:	(bad)  
   14001b1c3:	(bad)  
   14001b1c4:	(bad)  
   14001b1c5:	(bad)  
   14001b1c6:	(bad)  
   14001b1c7:	(bad)  
   14001b1c8:	(bad)  
   14001b1c9:	(bad)  
   14001b1ca:	(bad)  
   14001b1cb:	call   rbx
   14001b1cd:	ret    0xffaf
   14001b1d0:	nop
   14001b1d1:	ins    DWORD PTR es:[rdi],dx
   14001b1d2:	dec    DWORD PTR [r10-0x7b00bd96]
   14001b1d9:	addr32 rex.XB (bad) 
   14001b1dc:	jle    0x14001b242
   14001b1de:	rex.RB (bad) 
   14001b1e0:	(bad)  
   14001b1e1:	(bad)  
   14001b1e2:	(bad)  
   14001b1e3:	(bad)  
   14001b1e4:	(bad)  
   14001b1e5:	(bad)  
   14001b1e6:	(bad)  
   14001b1e7:	(bad)  
   14001b1e8:	(bad)  
   14001b1e9:	(bad)  
   14001b1ea:	(bad)  
   14001b1eb:	(bad)  
   14001b1ec:	(bad)  
   14001b1ed:	(bad)  
   14001b1ee:	(bad)  
   14001b1ef:	out    dx,eax
   14001b1f0:	(bad)  
   14001b1f1:	(bad)  
   14001b1f2:	inc    DWORD PTR [rcx+0x0]
   14001b1f8:	add    BYTE PTR [rax],al
   14001b1fa:	add    BYTE PTR [rax],al
   14001b1fc:	add    BYTE PTR [rax],al
   14001b1fe:	add    BYTE PTR [rdi],bl
   14001b200:	sti    
   14001b201:	sti    
   14001b202:	sti    
   14001b203:	dec    DWORD PTR [rbx-0x619e7475]
   14001b209:	sahf   
   14001b20a:	sahf   
   14001b20b:	push   rsi
   14001b20c:	test   eax,0xb5ffa9a9
   14001b211:	mov    ch,0xb5
   14001b213:	call   rdi
   14001b215:	xlat   BYTE PTR ds:[rbx]
   14001b216:	xlat   BYTE PTR ds:[rbx]
   14001b217:	push   rdx
   14001b219:	repnz repnz dec eax
   14001b21d:	enter  0xffc8,0xd4
   14001b221:	(bad)  
   14001b222:	(bad)  
   14001b223:	(bad)  
   14001b224:	fcmovnu st,st(3)
   14001b226:	(bad)  
   14001b228:	hlt    
   14001b229:	hlt    
   14001b22a:	hlt    
   14001b22b:	(bad)  
   14001b22c:	(bad)  
   14001b22e:	fdivp  st(7),st
   14001b230:	(bad)  
   14001b231:	(bad)  
   14001b232:	(bad)  
   14001b233:	push   rdx
   14001b235:	repnz repnz (bad) 
   14001b238:	(bad)  
   14001b239:	(bad)  
   14001b23a:	(bad)  
   14001b23b:	push   QWORD PTR [rbp+rdi*2+0x7aaeff3a]
   14001b242:	cmp    edi,edi
   14001b244:	test   al,0x78
   14001b246:	cmp    al,0xff
   14001b248:	movabs ds:0x95ff3f729bff3d75,al
   14001b251:	outs   dx,DWORD PTR ds:[rsi]
   14001b252:	rex dec DWORD PTR [rdi-0x7600be94]
   14001b259:	imul   eax,DWORD PTR [rdx-0x1],0xff446683
   14001b260:	(bad)  
   14001b261:	(bad)  
   14001b262:	(bad)  
   14001b263:	inc    DWORD PTR [rax]
	...
   14001b27d:	add    BYTE PTR [rax],al
   14001b27f:	(bad)  
   14001b280:	cld    
   14001b281:	cld    
   14001b282:	cld    
   14001b283:	(bad)  
   14001b284:	jl     0x14001b302
   14001b286:	jl     0x14001b2f6
   14001b288:	xchg   DWORD PTR [rdi-0x8089279],eax
   14001b28e:	idiv   edi
   14001b290:	(bad)  
   14001b291:	(bad)  
   14001b292:	(bad)  
   14001b293:	inc    ebx
   14001b295:	ret    
   14001b296:	ret    
   14001b297:	(bad)  
   14001b298:	call   0x125019b85
   14001b29d:	in     al,0xe4
   14001b29f:	jmp    rdi
   14001b2a1:	out    0xe7,eax
   14001b2a3:	(bad)  
   14001b2a4:	out    dx,al
   14001b2a5:	out    dx,al
   14001b2a6:	out    dx,al
   14001b2a7:	push   rbp
   14001b2a9:	cmc    
   14001b2aa:	cmc    
   14001b2ab:	push   rax
   14001b2ad:	lock lock push rdx
   14001b2b1:	repnz repnz push rsp
   14001b2b5:	hlt    
   14001b2b6:	hlt    
   14001b2b7:	(bad)  
   14001b2b8:	(bad)  
   14001b2b9:	(bad)  
   14001b2ba:	(bad)  
   14001b2bb:	(bad)  
   14001b2bc:	mov    ecx,0xeeff3980
   14001b2c1:	loop   0x14001b297
   14001b2c3:	(bad)  
   14001b2c4:	in     eax,dx
   14001b2c5:	loop   0x14001b29d
   14001b2c7:	jmp    QWORD PTR [rdi-0x5f00c289]
   14001b2cd:	je     0x14001b30d
   14001b2cf:	call   FWORD PTR [rdx-0x6b00c08f]
   14001b2d5:	outs   dx,BYTE PTR ds:[rsi]
   14001b2d6:	rex dec DWORD PTR [rsi-0x7700be94]
   14001b2dd:	imul   eax,DWORD PTR [rbx-0x1],0xffffffff
	...
   14001b2fc:	add    BYTE PTR [rax],al
   14001b2fe:	add    BYTE PTR [rdi],bl
   14001b300:	std    
   14001b301:	std    
   14001b302:	std    
   14001b303:	jmp    QWORD PTR [rsp+riz*4+0x4a4affa4]
   14001b30a:	rex.WX (bad) 
   14001b30c:	stc    
   14001b30d:	stc    
   14001b30e:	stc    
   14001b30f:	inc    esi
   14001b311:	mov    dh,0xff
   14001b314:	jg     0x14001b395
   14001b316:	jg     0x14001b317
   14001b318:	(bad)  
   14001b319:	(bad)  
   14001b31a:	(bad)  
   14001b31b:	(bad)  
   14001b31c:	clc    
   14001b31d:	clc    
   14001b31e:	clc    
   14001b31f:	push   rdi
   14001b321:	div    edi
   14001b323:	push   rdi
   14001b325:	div    edi
   14001b327:	push   rsi
   14001b329:	div    dh
   14001b32b:	push   rsi
   14001b32d:	div    dh
   14001b32f:	push   rbp
   14001b331:	cmc    
   14001b332:	cmc    
   14001b333:	push   rbp
   14001b335:	cmc    
   14001b336:	cmc    
   14001b337:	(bad)  
   14001b338:	(bad)  
   14001b339:	(bad)  
   14001b33a:	(bad)  
   14001b33b:	inc    ebp
   14001b33d:	xchg   ecx,eax
   14001b33e:	push   rax
   14001b33f:	push   rax
   14001b341:	in     al,0xd4
   14001b343:	(bad)  
   14001b344:	out    dx,eax
   14001b345:	jrcxz  0x14001b31d
   14001b347:	jmp    FWORD PTR [rbx-0x5a00c387]
   14001b34d:	jbe    0x14001b38c
   14001b34f:	call   FWORD PTR [rdi-0x6600c18c]
   14001b355:	jno    0x14001b396
   14001b357:	call   QWORD PTR [rbx-0x6400bf92]
   14001b35d:	jle    0x14001b3b8
   14001b35f:	(bad)  
   14001b360:	(bad)  
   14001b361:	(bad)  
   14001b362:	(bad)  
   14001b363:	out    dx,al
	...
   14001b378:	(bad)  
   14001b379:	(bad)  
   14001b37a:	(bad)  
   14001b37b:	add    al,BYTE PTR [rax]
   14001b37d:	add    BYTE PTR [rax],al
   14001b37f:	(bad)  
   14001b380:	std    
   14001b381:	std    
   14001b382:	std    
   14001b383:	call   QWORD PTR [rsi+0x56]
   14001b386:	push   rsi
   14001b387:	loope  0x14001b3c8
   14001b389:	(bad)  
   14001b38a:	(bad)  
   14001b38b:	push   QWORD PTR [rdi+0x77]
   14001b38e:	ja     0x14001b38f
   14001b390:	stos   DWORD PTR es:[rdi],eax
   14001b391:	stos   DWORD PTR es:[rdi],eax
   14001b392:	stos   DWORD PTR es:[rdi],eax
   14001b393:	jmp    FWORD PTR [rcx+0x69]
   14001b396:	imul   edi,edi,0xff8a8a8a
   14001b39c:	rol    al,0xc0
   14001b39f:	(bad)  
   14001b3a0:	stc    
   14001b3a1:	stc    
   14001b3a2:	stc    
   14001b3a3:	(bad)  
   14001b3a4:	out    dx,eax
   14001b3a5:	out    dx,eax
   14001b3a6:	out    dx,eax
   14001b3a7:	(bad)  
   14001b3a8:	fstp   st(5)
   14001b3aa:	(bad)  
   14001b3ac:	div    edi
   14001b3ae:	idiv   edi
   14001b3b0:	lock lock lock call rdi
   14001b3b5:	xlat   BYTE PTR ds:[rbx]
   14001b3b6:	xlat   BYTE PTR ds:[rbx]
   14001b3b7:	jmp    rsp
   14001b3b9:	in     al,0xe4
   14001b3bb:	push   rbx
   14001b3bd:	call   0xe1d0b39c
   14001b3c2:	imul   edi,edi,0xffffffb9
   14001b3c5:	add    DWORD PTR [rcx-0x1],0xffffffb0
   14001b3c9:	jl     0x14001b406
   14001b3cb:	jmp    FWORD PTR [rdx-0x5b00c387]
   14001b3d1:	jbe    0x14001b410
   14001b3d3:	jmp    QWORD PTR [rdx-0x4d00b987]
   14001b3d9:	xchg   ebp,eax
   14001b3da:	jo     0x14001b3db
   14001b3dc:	jmp    0x14001b3c2
   14001b3de:	fdiv   st(7),st
   14001b3e0:	(bad)  
   14001b3e1:	(bad)  
   14001b3e2:	inc    DWORD PTR [rcx+0x0]
	...
   14001b3f8:	ds ds xor eax,DWORD PTR ds:[rax+0x40]
   14001b3fe:	rex jns 0x14001b3ff
   14001b401:	(bad)  
   14001b402:	(bad)  
   14001b403:	(bad)  
   14001b404:	jle    0x14001b484
   14001b406:	jle    0x14001b477
   14001b408:	(bad)  
   14001b40a:	(bad)  
   14001b40b:	(bad)  
   14001b40c:	xor    BYTE PTR [rax],dh
   14001b40e:	xor    bh,bh
   14001b410:	imul   ebp,DWORD PTR [rbx+0x6b],0xffffffff
   14001b414:	rex
   14001b415:	rex
   14001b416:	rex dec DWORD PTR [rsi-0x49007172]
   14001b41d:	mov    dh,0xb6
   14001b41f:	(bad)  
   14001b420:	cli    
   14001b421:	cli    
   14001b422:	cli    
   14001b423:	(bad)  
   14001b424:	clc    
   14001b425:	clc    
   14001b426:	clc    
   14001b427:	push   rsp
   14001b429:	hlt    
   14001b42a:	hlt    
   14001b42b:	(bad)  
   14001b42c:	clc    
   14001b42d:	clc    
   14001b42e:	clc    
   14001b42f:	push   rdx
   14001b431:	repnz bnd jmp rdx
   14001b435:	loop   0x14001b419
   14001b437:	(bad)  
   14001b438:	(bad)  
   14001b43a:	fdivp  st(7),st
   14001b43c:	div    dh
   14001b43e:	idiv   bh
   14001b440:	std    
   14001b441:	std    
   14001b442:	std    
   14001b443:	(bad)  
   14001b444:	(bad)  
   14001b445:	(bad)  
   14001b446:	(bad)  
   14001b447:	(bad)  
   14001b448:	(bad)  
   14001b449:	(bad)  
   14001b44a:	(bad)  
   14001b44b:	(bad)  
   14001b44c:	(bad)  
   14001b44d:	(bad)  
   14001b44e:	(bad)  
   14001b44f:	(bad)  
   14001b450:	(bad)  
   14001b451:	(bad)  
   14001b452:	(bad)  
   14001b453:	(bad)  
   14001b454:	(bad)  
   14001b455:	(bad)  
   14001b456:	(bad)  
   14001b457:	push   rdx
   14001b459:	repnz repnz sar bl,cl
   14001b45d:	sti    
   14001b45e:	sti    
   14001b45f:	add    DWORD PTR [rax],0x0
	...
   14001b479:	add    BYTE PTR [rax],al
   14001b47b:	add    BYTE PTR [rip+0xffffffff9c552d2d],ch        # 0xdc56e1ae
   14001b481:	pushf  
   14001b482:	pushf  
   14001b483:	call   rax
   14001b485:	rcl    al,1
   14001b487:	call   rbp
   14001b489:	(bad)  
   14001b48a:	(bad)  
   14001b48b:	inc    DWORD PTR [rax+0x3cff8080]
   14001b491:	cmp    al,0x3c
   14001b493:	jmp    QWORD PTR [rsi]
   14001b495:	es call FWORD PTR es:[rbx+0x5b]
   14001b49a:	pop    rbx
   14001b49b:	(bad)  
   14001b49c:	out    dx,eax
   14001b49d:	out    dx,eax
   14001b49e:	out    dx,eax
   14001b49f:	(bad)  
   14001b4a0:	sti    
   14001b4a1:	sti    
   14001b4a2:	sti    
   14001b4a3:	(bad)  
   14001b4a4:	cli    
   14001b4a5:	cli    
   14001b4a6:	cli    
   14001b4a7:	(bad)  
   14001b4a8:	cli    
   14001b4a9:	cli    
   14001b4aa:	cli    
   14001b4ab:	(bad)  
   14001b4ac:	cli    
   14001b4ad:	cli    
   14001b4ae:	cli    
   14001b4af:	(bad)  
   14001b4b0:	stc    
   14001b4b1:	stc    
   14001b4b2:	stc    
   14001b4b3:	(bad)  
   14001b4b4:	clc    
   14001b4b5:	clc    
   14001b4b6:	clc    
   14001b4b7:	(bad)  
   14001b4b8:	clc    
   14001b4b9:	clc    
   14001b4ba:	clc    
   14001b4bb:	push   rdi
   14001b4bd:	div    edi
   14001b4bf:	push   rdi
   14001b4c1:	div    edi
   14001b4c3:	push   rsi
   14001b4c5:	div    dh
   14001b4c7:	push   rsp
   14001b4c9:	hlt    
   14001b4ca:	hlt    
   14001b4cb:	(bad)  
   14001b4cc:	in     al,dx
   14001b4cd:	in     al,dx
   14001b4ce:	in     al,dx
   14001b4cf:	jmp    rbx
   14001b4d1:	jrcxz  0x14001b4b6
   14001b4d3:	(bad)  
   14001b4d4:	fcomp  st(0)
   14001b4d6:	fdivr  st,st(7)
   14001b4d8:	add    BYTE PTR [rax],al
   14001b4da:	add    BYTE PTR [rsi],dh
   14001b4dc:	add    BYTE PTR [rax],al
   14001b4de:	add    BYTE PTR [rax+rax*1],al
	...
   14001b4fd:	add    BYTE PTR [rax],al
   14001b4ff:	(bad)  
   14001b500:	rcl    al,1
   14001b502:	sar    bh,1
   14001b504:	jne    0x14001b57b
   14001b506:	jne    0x14001b4f2
   14001b508:	jae    0x14001b57d
   14001b50a:	jae    0x14001b50b
   14001b50c:	push   rdi
   14001b50d:	push   rdi
   14001b50e:	push   rdi
   14001b50f:	dec    DWORD PTR [rcx+0x49]
   14001b512:	rex.WB jmp QWORD PTR [r12]
   14001b516:	and    al,0xff
   14001b518:	es es push QWORD PTR es:[rcx+0x71]
   14001b51e:	jno    0x14001b51f
   14001b520:	fstp   st(5)
   14001b522:	(bad)  
   14001b524:	loopne 0x14001b506
   14001b526:	loopne 0x14001b527
   14001b528:	jmp    0x14001b515
   14001b52a:	jmp    0x14001b52b
   14001b52c:	jrcxz  0x14001b511
   14001b52e:	jrcxz  0x14001b52f
   14001b530:	div    dh
   14001b532:	idiv   bh
   14001b534:	cmc    
   14001b535:	cmc    
   14001b536:	cmc    
   14001b537:	(bad)  
   14001b538:	in     al,dx
   14001b539:	in     al,dx
   14001b53a:	in     al,dx
   14001b53b:	push   rcx
   14001b53d:	icebp  
   14001b53e:	icebp  
   14001b53f:	push   rbp
   14001b541:	cmc    
   14001b542:	cmc    
   14001b543:	push   rbp
   14001b545:	cmc    
   14001b546:	cmc    
   14001b547:	(bad)  
   14001b548:	in     eax,dx
   14001b549:	in     eax,dx
   14001b54a:	in     eax,dx
   14001b54b:	cld    
   14001b54c:	ins    BYTE PTR es:[rdi],dx
   14001b54d:	ins    BYTE PTR es:[rdi],dx
   14001b54e:	ins    BYTE PTR es:[rdi],dx
   14001b54f:	addr32 jl 0x14001b5ce
   14001b552:	jl     0x14001b5c7
   14001b554:	retf   0xcaca
   14001b557:	inc    BYTE PTR [rax]
   14001b559:	add    BYTE PTR [rax],al
   14001b55b:	xor    al,0x0
   14001b55d:	add    BYTE PTR [rax],al
   14001b55f:	add    al,BYTE PTR [rax]
	...
   14001b57d:	add    BYTE PTR [rax],al
   14001b57f:	(bad)  
   14001b580:	(bad)  
   14001b581:	(bad)  
   14001b582:	(bad)  
   14001b583:	jmp    QWORD PTR [rdx+0x62]
   14001b586:	(bad)  
   14001b587:	nop
   14001b588:	push   0xffffffff91c66868
   14001b58d:	xchg   ecx,eax
   14001b58e:	xchg   ecx,eax
   14001b58f:	call   FWORD PTR [rax+0x55ff9898]
   14001b595:	push   rbp
   14001b596:	push   rbp
   14001b597:	push   QWORD PTR [rax]
   14001b599:	xor    BYTE PTR [rax],dh
   14001b59b:	call   QWORD PTR [rcx+0x51]
   14001b59e:	push   rcx
   14001b59f:	(bad)  
   14001b5a0:	jge    0x14001b61f
   14001b5a2:	jge    0x14001b5a3
   14001b5a4:	icebp  
   14001b5a5:	icebp  
   14001b5a6:	icebp  
   14001b5a7:	jmp    rsi
   14001b5a9:	out    0xe6,al
   14001b5ab:	jmp    rdx
   14001b5ad:	loop   0x14001b591
   14001b5af:	push   rsi
   14001b5b1:	div    dh
   14001b5b3:	push   rsi
   14001b5b5:	div    dh
   14001b5b7:	call   rcx
   14001b5b9:	rcl    ecx,1
   14001b5bb:	dec    edi
   14001b5bd:	iret   
   14001b5be:	iret   
   14001b5bf:	call   rcx
   14001b5c1:	rcl    ecx,1
   14001b5c3:	dec    edi
   14001b5c5:	iret   
   14001b5c6:	iret   
   14001b5c7:	dec    ecx
   14001b5c9:	leave  
   14001b5ca:	leave  
   14001b5cb:	cli    
   14001b5cc:	sub    eax,0x627b2d2d
   14001b5d1:	(bad)
   14001b5d6:	int3   
   14001b5d7:	in     eax,dx
   14001b5d8:	add    BYTE PTR [rax],al
   14001b5da:	add    BYTE PTR [rax],ch
	...
   14001b5fc:	add    BYTE PTR [rax],al
   14001b5fe:	add    BYTE PTR [rdi],bl
   14001b600:	std    
   14001b601:	std    
   14001b602:	std    
   14001b603:	(bad)  
   14001b604:	cld    
   14001b605:	cld    
   14001b606:	cld    
   14001b607:	dec    edi
   14001b609:	iret   
   14001b60a:	iret   
   14001b60b:	dec    edx
   14001b60d:	retf   0xffca
   14001b610:	sti    
   14001b611:	sti    
   14001b612:	sti    
   14001b613:	(bad)  
   14001b614:	mov    esp,0x69ffbcbc
   14001b619:	imul   ebp,DWORD PTR [rcx-0x1],0xff4c4c4c
   14001b620:	rex.X
   14001b621:	rex.X
   14001b622:	jmp    QWORD PTR [rsp+r12*4-0x101005c]
   14001b62a:	(bad)  
   14001b62b:	(bad)  
   14001b62c:	std    
   14001b62d:	std    
   14001b62e:	std    
   14001b62f:	(bad)  
   14001b630:	std    
   14001b631:	std    
   14001b632:	std    
   14001b633:	(bad)  
   14001b634:	stc    
   14001b635:	stc    
   14001b636:	stc    
   14001b637:	call   rsp
   14001b639:	(bad)  
   14001b63a:	(bad)  
   14001b63b:	(bad)  
   14001b63c:	cld    
   14001b63d:	cld    
   14001b63e:	cld    
   14001b63f:	push   rsi
   14001b641:	div    dh
   14001b643:	(bad)  
   14001b644:	in     al,dx
   14001b645:	in     al,dx
   14001b646:	in     al,dx
   14001b647:	jmp    rcx
   14001b649:	loope  0x14001b62c
   14001b64b:	(bad)  
   14001b64c:	fcmovu st,st(2)
   14001b64e:	(bad)  
   14001b650:	out    0xe6,al
   14001b652:	out    0xff,al
   14001b654:	mov    edi,0x8fbfbf
   14001b659:	add    BYTE PTR [rax],al
   14001b65b:	(bad)  
	...
   14001b67c:	add    BYTE PTR [rax],al
   14001b67e:	add    BYTE PTR [rdi],bl
   14001b680:	cld    
   14001b681:	cld    
   14001b682:	cld    
   14001b683:	dec    DWORD PTR [rsp+rcx*4-0x5e5e9e74]
   14001b68a:	movabs eax,ds:0xfcfcfcfffbfbfb56
   14001b693:	(bad)  
   14001b694:	cli    
   14001b695:	cli    
   14001b696:	cli    
   14001b697:	(bad)  
   14001b698:	mov    esp,0x67ffbcbc
   14001b69d:	addr32 jmp FWORD PTR [ebx]
   14001b6a1:	sub    ebp,DWORD PTR [rbx]
   14001b6a3:	dec    DWORD PTR [rsi+0x4e]
   14001b6a6:	rex.WRX dec rdx
   14001b6a9:	retf   0xffca
   14001b6ac:	(bad)  
   14001b6ad:	(bad)  
   14001b6ae:	(bad)  
   14001b6af:	(bad)  
   14001b6b0:	(bad)  
   14001b6b1:	(bad)  
   14001b6b2:	(bad)  
   14001b6b3:	(bad)  
   14001b6b4:	cld    
   14001b6b5:	cld    
   14001b6b6:	cld    
   14001b6b7:	call   rdi
   14001b6b9:	xlat   BYTE PTR ds:[rbx]
   14001b6ba:	xlat   BYTE PTR ds:[rbx]
   14001b6bb:	(bad)  
   14001b6bc:	cli    
   14001b6bd:	cli    
   14001b6be:	cli    
   14001b6bf:	call   rbp
   14001b6c1:	(bad)  
   14001b6c2:	(bad)  
   14001b6c3:	inc    ebx
   14001b6c5:	ret    
   14001b6c6:	ret    
   14001b6c7:	(bad)  
   14001b6c8:	call   0x108019fb5
   14001b6cd:	mov    edi,0xb2b2b2ff
   14001b6d3:	movabs eax,ds:0x15000000
	...
   14001b6fc:	add    BYTE PTR [rax],al
   14001b6fe:	add    BYTE PTR [rdi],bl
   14001b700:	sti    
   14001b701:	sti    
   14001b702:	sti    
   14001b703:	(bad)  
   14001b704:	jl     0x14001b782
   14001b706:	jl     0x14001b776
   14001b708:	add    DWORD PTR [rbx-0x505957d],0xfffffffa
   14001b70f:	(bad)  
   14001b710:	(bad)  
   14001b712:	(bad)  
   14001b714:	in     eax,dx
   14001b715:	in     eax,dx
   14001b716:	in     eax,dx
   14001b717:	(bad)  
   14001b718:	out    dx,al
   14001b719:	out    dx,al
   14001b71a:	out    dx,al
   14001b71b:	(bad)  
   14001b71c:	mov    edx,0x5dffbaba
   14001b721:	pop    rbp
   14001b722:	pop    rbp
   14001b723:	push   QWORD PTR [rsp+rsi*2+0x74]
   14001b727:	jmp    FWORD PTR [rbx+0x6b]
   14001b72a:	imul   edi,edi,0xfffffffb
   14001b72d:	sti    
   14001b72e:	sti    
   14001b72f:	(bad)  
   14001b730:	(bad)  
   14001b731:	(bad)  
   14001b732:	(bad)  
   14001b733:	(bad)  
   14001b734:	std    
   14001b735:	std    
   14001b736:	std    
   14001b737:	call   rbp
   14001b739:	(bad)  
   14001b73a:	(bad)  
   14001b73b:	push   rcx
   14001b73d:	icebp  
   14001b73e:	icebp  
   14001b73f:	inc    edx
   14001b741:	ret    0xffc2
   14001b744:	mov    ecx,0xe5ffb9b9
   14001b749:	in     eax,0xe5
   14001b74b:	jmp    QWORD PTR [rcx+0x9ca1a1]
   14001b751:	add    BYTE PTR [rax],al
   14001b753:	adc    eax,0x0
	...
   14001b77c:	add    BYTE PTR [rax],al
   14001b77e:	add    BYTE PTR [rdi],bl
   14001b780:	sti    
   14001b781:	sti    
   14001b782:	sti    
   14001b783:	(bad)  
   14001b784:	clc    
   14001b785:	clc    
   14001b786:	clc    
   14001b787:	(bad)  
   14001b788:	clc    
   14001b789:	clc    
   14001b78a:	clc    
   14001b78b:	(bad)  
   14001b78c:	stc    
   14001b78d:	stc    
   14001b78e:	stc    
   14001b78f:	(bad)  
   14001b790:	stc    
   14001b791:	stc    
   14001b792:	stc    
   14001b793:	(bad)  
   14001b794:	cli    
   14001b795:	cli    
   14001b796:	cli    
   14001b797:	(bad)  
   14001b798:	cli    
   14001b799:	cli    
   14001b79a:	cli    
   14001b79b:	(bad)  
   14001b79c:	sti    
   14001b79d:	sti    
   14001b79e:	sti    
   14001b79f:	(bad)  
   14001b7a0:	(bad)  
   14001b7a2:	fdiv   st(7),st
   14001b7a4:	jb     0x14001b818
   14001b7a6:	jb     0x14001b7a7
   14001b7a8:	ja     0x14001b821
   14001b7aa:	ja     0x14001b7ab
   14001b7ac:	mov    bl,0xb3
   14001b7ae:	mov    bl,0xff
   14001b7b0:	cld    
   14001b7b1:	cld    
   14001b7b2:	cld    
   14001b7b3:	push   rbp
   14001b7b5:	cmc    
   14001b7b6:	cmc    
   14001b7b7:	dec    edi
   14001b7b9:	iret   
   14001b7ba:	iret   
   14001b7bb:	jmp    rsi
   14001b7bd:	out    0xe6,al
   14001b7bf:	(bad)  
   14001b7c0:	call   0x12b01a0ad
   14001b7c5:	(bad)  
   14001b7c6:	(bad)  
   14001b7c7:	call   rbx
   14001b7c9:	rcl    ebx,cl
   14001b7cb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b7cc:	add    BYTE PTR [rax],al
   14001b7ce:	add    BYTE PTR [rip+0x0],dl        # 0x14001b7d4
	...
   14001b7fc:	add    BYTE PTR [rax],al
   14001b7fe:	add    BYTE PTR [rdi],bl
   14001b800:	cli    
   14001b801:	cli    
   14001b802:	cli    
   14001b803:	dec    DWORD PTR [rdx-0x619e7576]
   14001b809:	sahf   
   14001b80a:	sahf   
   14001b80b:	push   rsi
   14001b80c:	clc    
   14001b80d:	clc    
   14001b80e:	clc    
   14001b80f:	(bad)  
   14001b810:	clc    
   14001b811:	clc    
   14001b812:	clc    
   14001b813:	(bad)  
   14001b814:	stc    
   14001b815:	stc    
   14001b816:	stc    
   14001b817:	(bad)  
   14001b818:	stc    
   14001b819:	stc    
   14001b81a:	stc    
   14001b81b:	(bad)  
   14001b81c:	cli    
   14001b81d:	cli    
   14001b81e:	cli    
   14001b81f:	(bad)  
   14001b820:	jmp    0x12901a20e
   14001b825:	call   0xf1b3b812
   14001b82a:	mov    cl,0xff
   14001b82c:	popf   
   14001b82d:	popf   
   14001b82e:	popf   
   14001b82f:	dec    ebx
   14001b831:	retf   
   14001b832:	retf   
   14001b833:	call   rsi
   14001b835:	(bad)  
   14001b836:	(bad)  
   14001b837:	(bad)  
   14001b838:	mov    ebx,0xe2ffbbbb
   14001b83d:	loop   0x14001b821
   14001b83f:	(bad)  
   14001b840:	(bad)  
   14001b841:	(bad)  
   14001b842:	(bad)  
   14001b843:	call   rbx
   14001b845:	rcl    ebx,cl
   14001b847:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b848:	add    BYTE PTR [rax],al
   14001b84a:	add    BYTE PTR [rip+0x0],dl        # 0x14001b850
	...
   14001b87c:	add    BYTE PTR [rax],al
   14001b87e:	add    BYTE PTR [rdi],bl
   14001b880:	stc    
   14001b881:	stc    
   14001b882:	stc    
   14001b883:	(bad)  
   14001b884:	jp     0x14001b900
   14001b886:	jp     0x14001b8f6
   14001b888:	add    DWORD PTR [rcx-0x909957f],0xdcdcfff6
   14001b892:	fdiv   st(7),st
   14001b894:	(bad)  
   14001b895:	(bad)  
   14001b896:	(bad)  
   14001b897:	(bad)  
   14001b898:	(bad)  
   14001b899:	(bad)  
   14001b89a:	(bad)  
   14001b89b:	(bad)  
   14001b89c:	fstp   st(5)
   14001b89e:	(bad)  
   14001b8a0:	jrcxz  0x14001b885
   14001b8a2:	jrcxz  0x14001b8a3
   14001b8a4:	hlt    
   14001b8a5:	hlt    
   14001b8a6:	hlt    
   14001b8a7:	(bad)  
   14001b8a8:	call   0x12201a195
   14001b8ad:	loope  0x14001b890
   14001b8af:	jmp    FWORD PTR [rax-0x33005758]
   14001b8b5:	int3   
   14001b8b6:	int3   
   14001b8b7:	push   QWORD PTR [rdi-0x10004849]
   14001b8bd:	out    dx,eax
   14001b8be:	out    dx,eax
   14001b8bf:	call   rbx
   14001b8c1:	rcl    ebx,cl
   14001b8c3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001b8c4:	add    BYTE PTR [rax],al
   14001b8c6:	add    BYTE PTR [rip+0x0],dl        # 0x14001b8cc
	...
   14001b8fc:	add    BYTE PTR [rax],al
   14001b8fe:	add    BYTE PTR [rdi],bl
   14001b900:	cli    
   14001b901:	cli    
   14001b902:	cli    
   14001b903:	(bad)  
   14001b904:	stc    
   14001b905:	stc    
   14001b906:	stc    
   14001b907:	(bad)  
   14001b908:	stc    
   14001b909:	stc    
   14001b90a:	stc    
   14001b90b:	(bad)  
   14001b90c:	cli    
   14001b90d:	cli    
   14001b90e:	cli    
   14001b90f:	(bad)  
   14001b910:	cli    
   14001b911:	cli    
   14001b912:	cli    
   14001b913:	(bad)  
   14001b914:	cli    
   14001b915:	cli    
   14001b916:	cli    
   14001b917:	(bad)  
   14001b918:	cli    
   14001b919:	cli    
   14001b91a:	cli    
   14001b91b:	(bad)  
   14001b91c:	sti    
   14001b91d:	sti    
   14001b91e:	sti    
   14001b91f:	(bad)  
   14001b920:	sti    
   14001b921:	sti    
   14001b922:	sti    
   14001b923:	(bad)  
   14001b924:	sti    
   14001b925:	sti    
   14001b926:	sti    
   14001b927:	push   rdi
   14001b929:	div    edi
   14001b92b:	push   rdx
   14001b92d:	repnz bnd jmp rbp
   14001b931:	in     eax,0xe5
   14001b933:	push   QWORD PTR [rax-0x28004f50]
   14001b939:	xlat   BYTE PTR ds:[rbx]
   14001b93a:	xlat   BYTE PTR ds:[rbx]
   14001b93b:	in     eax,dx
   14001b93c:	retf   
   14001b93d:	retf   
   14001b93e:	retf   
   14001b93f:	mov    DWORD PTR [rax],eax
   14001b941:	add    BYTE PTR [rax],al
   14001b943:	adc    al,BYTE PTR [rax]
	...
   14001b97d:	add    BYTE PTR [rax],al
   14001b97f:	or     eax,DWORD PTR [rax]
   14001b981:	add    BYTE PTR [rax],al
   14001b983:	adc    BYTE PTR [rax],al
   14001b985:	add    BYTE PTR [rax],al
   14001b987:	adc    BYTE PTR [rax],al
   14001b989:	add    BYTE PTR [rax],al
   14001b98b:	adc    BYTE PTR [rax],al
   14001b98d:	add    BYTE PTR [rax],al
   14001b98f:	adc    BYTE PTR [rax],al
   14001b991:	add    BYTE PTR [rax],al
   14001b993:	adc    BYTE PTR [rax],al
   14001b995:	add    BYTE PTR [rax],al
   14001b997:	adc    BYTE PTR [rax],al
   14001b999:	add    BYTE PTR [rax],al
   14001b99b:	adc    BYTE PTR [rax],al
   14001b99d:	add    BYTE PTR [rax],al
   14001b99f:	adc    BYTE PTR [rax],al
   14001b9a1:	add    BYTE PTR [rax],al
   14001b9a3:	adc    BYTE PTR [rax],al
   14001b9a5:	add    BYTE PTR [rax],al
   14001b9a7:	adc    BYTE PTR [rax],al
   14001b9a9:	add    BYTE PTR [rax],al
   14001b9ab:	adc    BYTE PTR [rax],al
   14001b9ad:	add    BYTE PTR [rax],al
   14001b9af:	adc    BYTE PTR [rax],al
   14001b9b1:	add    BYTE PTR [rax],al
   14001b9b3:	adc    BYTE PTR [rax],al
   14001b9b5:	add    BYTE PTR [rax],al
   14001b9b7:	adc    BYTE PTR [rax],al
   14001b9b9:	add    BYTE PTR [rax],al
   14001b9bb:	(bad)  
   14001b9bc:	add    BYTE PTR [rax],al
   14001b9be:	add    BYTE PTR [rax+rax*1],al
	...
   14001b9f5:	add    BYTE PTR [rax],al
   14001b9f7:	add    ah,bh
   14001b9f9:	(bad)  
   14001b9fa:	cmp    BYTE PTR [rdi],0xe0
   14001b9fd:	add    DWORD PTR [rax],eax
   14001b9ff:	(bad)  
   14001ba00:	add    BYTE PTR [rax],0x0
   14001ba03:	(bad)  
   14001ba04:	add    BYTE PTR [rax],0x0
   14001ba07:	(bad)  
   14001ba08:	add    BYTE PTR [rax],0x0
   14001ba0b:	(bad)  
   14001ba0c:	add    BYTE PTR [rax],0x0
   14001ba0f:	add    DWORD PTR [rax-0x80000000],eax
   14001ba15:	add    BYTE PTR [rax],al
   14001ba17:	add    BYTE PTR [rax-0x80000000],al
   14001ba1d:	add    BYTE PTR [rax],al
   14001ba1f:	add    BYTE PTR [rax-0x80000000],al
   14001ba25:	add    BYTE PTR [rax],al
   14001ba27:	add    BYTE PTR [rax-0x80000000],al
   14001ba2d:	add    BYTE PTR [rax],al
   14001ba2f:	add    BYTE PTR [rax-0x80000000],al
   14001ba35:	add    BYTE PTR [rax],al
   14001ba37:	add    DWORD PTR [rax-0x7fe10000],eax
   14001ba3d:	add    BYTE PTR [rax],al
   14001ba3f:	(bad)  
   14001ba40:	add    BYTE PTR [rax],0x0
   14001ba43:	(bad)  
   14001ba44:	add    BYTE PTR [rax],al
   14001ba46:	add    BYTE PTR [rdi],bl
   14001ba48:	add    BYTE PTR [rax],al
   14001ba4a:	add    BYTE PTR [rdi],bh
   14001ba4c:	add    BYTE PTR [rax],0x0
   14001ba4f:	(bad)  
   14001ba50:	add    BYTE PTR [rax],0x0
   14001ba53:	(bad)  
   14001ba54:	add    BYTE PTR [rax],0x0
   14001ba57:	jg     0x14001b9d9
   14001ba59:	add    BYTE PTR [rax],al
   14001ba5b:	jg     0x14001b9dd
   14001ba5d:	add    BYTE PTR [rax],al
   14001ba5f:	inc    DWORD PTR [rax-0x7f00ff00]
   14001ba65:	add    BYTE PTR [rbx],al
   14001ba67:	inc    DWORD PTR [rax-0x7f00f900]
   14001ba6d:	add    BYTE PTR [rdi],cl
   14001ba6f:	inc    DWORD PTR [rax-0x7f00e100]
   14001ba75:	add    BYTE PTR [rdi],bh
   14001ba77:	jmp    FWORD PTR [rax]
   14001ba79:	add    BYTE PTR [rax],al
   14001ba7b:	add    BYTE PTR [rax],dl
   14001ba7d:	add    BYTE PTR [rax],al
   14001ba7f:	add    BYTE PTR [rax],ah
   14001ba81:	add    BYTE PTR [rax],al
   14001ba83:	add    BYTE PTR [rcx],al
   14001ba85:	add    BYTE PTR [rax],ah
	...
   14001ba9f:	add    BYTE PTR [rbx+0x1fabab],ch
	...
   14001bab9:	add    BYTE PTR [rax],al
   14001babb:	add    BYTE PTR [rbp-0x60bc6263],bl
   14001bac1:	lahf   
   14001bac2:	lahf   
   14001bac3:	mov    ah,0xa2
   14001bac5:	movabs ds:0xa5a5eea4a4a4f6a2,al
   14001bace:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001bacf:	xchg   edx,eax
   14001bad0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bad1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bad2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bad3:	(bad)  
	...
   14001bae0:	lods   al,BYTE PTR ds:[rsi]
   14001bae1:	lods   al,BYTE PTR ds:[rsi]
   14001bae2:	lods   al,BYTE PTR ds:[rsi]
   14001bae3:	out    dx,eax
   14001bae4:	stos   DWORD PTR es:[rdi],eax
   14001bae5:	stos   DWORD PTR es:[rdi],eax
   14001bae6:	stos   DWORD PTR es:[rdi],eax
   14001bae7:	outs   dx,DWORD PTR ds:[rsi]
   14001bae8:	stos   BYTE PTR es:[rdi],al
   14001bae9:	stos   BYTE PTR es:[rdi],al
   14001baea:	stos   BYTE PTR es:[rdi],al
   14001baeb:	(bad)  
   14001baec:	add    BYTE PTR [rax],al
   14001baee:	add    BYTE PTR [rax],al
   14001baf0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001baf1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001baf2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001baf3:	add    al,0xa3
   14001baf5:	movabs ds:0xadadbea0a0a049a3,eax
   14001bafe:	lods   eax,DWORD PTR ds:[rsi]
   14001baff:	jmp    rbp
   14001bb01:	in     eax,0xe5
   14001bb03:	(bad)  
   14001bb04:	std    
   14001bb05:	std    
   14001bb06:	std    
   14001bb07:	(bad)  
   14001bb08:	(bad)  
   14001bb09:	(bad)  
   14001bb0a:	(bad)  
   14001bb0b:	(bad)  
   14001bb0c:	sti    
   14001bb0d:	sti    
   14001bb0e:	sti    
   14001bb0f:	push   rcx
   14001bb11:	icebp  
   14001bb12:	icebp  
   14001bb13:	(bad)  
	...
   14001bb20:	scas   eax,DWORD PTR es:[rdi]
   14001bb21:	scas   eax,DWORD PTR es:[rdi]
   14001bb22:	scas   eax,DWORD PTR es:[rdi]
   14001bb23:	inc    ecx
   14001bb25:	rol    ecx,0xff
   14001bb28:	scas   al,BYTE PTR es:[rdi]
   14001bb29:	scas   al,BYTE PTR es:[rdi]
   14001bb2a:	scas   al,BYTE PTR es:[rdi]
   14001bb2b:	sti    
   14001bb2c:	stos   BYTE PTR es:[rdi],al
   14001bb2d:	stos   BYTE PTR es:[rdi],al
   14001bb2e:	stos   BYTE PTR es:[rdi],al
   14001bb2f:	loopne 0x14001bad9
   14001bb31:	test   al,0xa8
   14001bb33:	hlt    
   14001bb34:	mov    bl,0xb3
   14001bb36:	mov    bl,0xff
   14001bb38:	int    0xcd
   14001bb3a:	int    0xff
   14001bb3c:	div    dh
   14001bb3e:	idiv   bh
   14001bb40:	scas   al,BYTE PTR es:[rdi]
   14001bb41:	icebp  
   14001bb42:	(bad)  
   14001bb43:	call   QWORD PTR [rbx-0x25]
   14001bb46:	(bad)  
   14001bb47:	(bad)  
   14001bb48:	cmp    eax,0x3fffffd0
   14001bb4d:	retf   
   14001bb4e:	(bad)  
   14001bb4f:	call   FWORD PTR [rbx-0x1e]
   14001bb55:	(bad)  
   14001bb56:	push   QWORD PTR [rdi+0x0]
   14001bb5c:	add    BYTE PTR [rax],al
   14001bb5e:	add    BYTE PTR [rax],al
   14001bb60:	mov    bl,0xb3
   14001bb62:	mov    bl,0xff
   14001bb64:	(bad)  
   14001bb66:	fdiv   st(7),st
   14001bb68:	repz repz repz jmp rsp
   14001bb6d:	in     al,0xe4
   14001bb6f:	jmp    rdi
   14001bb71:	out    0xe7,eax
   14001bb73:	(bad)  
   14001bb74:	jmp    0x12901a562
   14001bb79:	call   0x13f00bb66
   14001bb7e:	(bad)  
   14001bb7f:	call   FWORD PTR [rdi-0x17]
   14001bb82:	(bad)  
   14001bb83:	call   QWORD PTR [rcx-0x20]
   14001bb86:	(bad)  
   14001bb87:	inc    DWORD PTR [rsi-0x29]
   14001bb8a:	(bad)  
   14001bb8b:	call   rdx
   14001bb8d:	hlt    
   14001bb8e:	(bad)  
   14001bb8f:	push   QWORD PTR [rdi+rax*8]
   14001bb92:	(bad)  
   14001bb93:	(bad)  
   14001bb94:	(bad)  
   14001bb95:	(bad)  
   14001bb96:	push   rsi
	...
   14001bba0:	mov    dh,0xb6
   14001bba2:	mov    dh,0xff
   14001bba4:	int    0xcd
   14001bba6:	int    0xff
   14001bba8:	loop   0x14001bb8c
   14001bbaa:	loop   0x14001bbab
   14001bbac:	in     eax,dx
   14001bbad:	in     eax,dx
   14001bbae:	in     eax,dx
   14001bbaf:	(bad)  
   14001bbb0:	in     eax,dx
   14001bbb1:	in     eax,dx
   14001bbb2:	in     eax,dx
   14001bbb3:	(bad)  
   14001bbb4:	stc    
   14001bbb5:	stc    
   14001bbb6:	stc    
   14001bbb7:	(bad)  
   14001bbb8:	(bad)  
   14001bbb9:	(bad)  
   14001bbba:	(bad)  
   14001bbbb:	(bad)  
   14001bbbc:	(bad)  
   14001bbbd:	(bad)  
   14001bbbe:	(bad)  
   14001bbbf:	jmp    QWORD PTR [rcx-0x13]
   14001bbc2:	(bad)  
   14001bbc3:	call   FWORD PTR [rdx-0x19]
   14001bbc6:	(bad)  
   14001bbc7:	push   QWORD PTR [rdi-0xe]
   14001bbcd:	(bad)  
   14001bbce:	(bad)  
   14001bbcf:	(bad)  
   14001bbd0:	(bad)  
   14001bbd1:	(bad)  
   14001bbd2:	(bad)  
   14001bbd3:	(bad)  
   14001bbd4:	(bad)  
   14001bbd5:	(bad)  
   14001bbd6:	(bad)  
   14001bbd7:	(bad)  
   14001bbd8:	(bad)  
   14001bbd9:	(bad)  
   14001bbda:	push   rbp
   14001bbdc:	(bad)  
   14001bbdd:	(bad)  
   14001bbde:	push   QWORD PTR [rsi-0x464647]
   14001bbe4:	fstp   st(5)
   14001bbe6:	(bad)  
   14001bbe8:	div    dh
   14001bbea:	idiv   bh
   14001bbec:	lock lock lock (bad) 
   14001bbf0:	cli    
   14001bbf1:	cli    
   14001bbf2:	cli    
   14001bbf3:	call   rax
   14001bbf5:	mov    esp,0x6f91ffa4
   14001bbfa:	rex.RB (bad) 
   14001bbfc:	(bad)  
   14001bbfd:	(bad)  
   14001bbfe:	(bad)  
   14001bbff:	jmp    QWORD PTR [rbx-0x13]
   14001bc02:	(bad)  
   14001bc03:	jmp    QWORD PTR [rcx-0x14]
   14001bc06:	(bad)  
   14001bc07:	call   FWORD PTR [rax-0x1b]
   14001bc0a:	(bad)  
   14001bc0b:	dec    DWORD PTR [rbp-0x23]
   14001bc0e:	(bad)  
   14001bc0f:	inc    DWORD PTR [rdx-0x2c]
   14001bc12:	(bad)  
   14001bc13:	push   QWORD PTR [rdi]
   14001bc15:	int3   
   14001bc16:	(bad)  
   14001bc17:	push   QWORD PTR [rax]
   14001bc19:	ret    
   14001bc1a:	(bad)  
   14001bc1b:	call   FWORD PTR [rcx-0x42000020]
   14001bc21:	mov    ebp,0xceceffbd
   14001bc26:	(bad)  
   14001bc27:	jmp    rsp
   14001bc29:	in     al,0xe4
   14001bc2b:	push   rdx
   14001bc2d:	repnz repnz (bad) 
   14001bc30:	(bad)  
   14001bc31:	(bad)  
   14001bc32:	(bad)  
   14001bc33:	jmp    FWORD PTR [rcx-0x6600b682]
   14001bc39:	jno    0x14001bc7a
   14001bc3b:	push   rbx
   14001bc3d:	out    dx,eax
   14001bc3e:	(bad)  
   14001bc3f:	call   FWORD PTR [rbx+0x63fffff4]
   14001bc45:	in     eax,dx
   14001bc46:	(bad)  
   14001bc47:	jmp    QWORD PTR [rax-0x15]
   14001bc4a:	(bad)  
   14001bc4b:	call   QWORD PTR [rsi-0x1d]
   14001bc4e:	(bad)  
   14001bc4f:	dec    DWORD PTR [rbx-0x25]
   14001bc52:	(bad)  
   14001bc53:	inc    DWORD PTR [rax-0x2e]
   14001bc56:	(bad)  
   14001bc57:	push   QWORD PTR [rip+0x38ffffca]        # 0x17901bc27
   14001bc5d:	(bad)  
   14001bc60:	rol    al,0xc0
   14001bc63:	inc    esi
   14001bc65:	mov    dh,0xff
   14001bc68:	in     eax,dx
   14001bc69:	in     eax,dx
   14001bc6a:	in     eax,dx
   14001bc6b:	push   rbp
   14001bc6d:	cmc    
   14001bc6e:	cmc    
   14001bc6f:	(bad)  
   14001bc70:	(bad)  
   14001bc71:	(bad)  
   14001bc72:	(bad)  
   14001bc73:	jmp    FWORD PTR [rbp-0x5d00c486]
   14001bc79:	jne    0x14001bcb8
   14001bc7b:	push   QWORD PTR [rbx-0xc008e6b]
   14001bc81:	out    dx,eax
   14001bc82:	(bad)  
   14001bc83:	(bad)  
   14001bc84:	(bad)  
   14001bc85:	(bad)  
   14001bc86:	(bad)  
   14001bc87:	(bad)  
   14001bc88:	(bad)  
   14001bc89:	(bad)  
   14001bc8a:	(bad)  
   14001bc8b:	(bad)  
   14001bc8c:	(bad)  
   14001bc8d:	(bad)  
   14001bc8e:	(bad)  
   14001bc8f:	(bad)  
   14001bc90:	jmp    0x14001bc8d
   14001bc92:	(bad)  
   14001bc93:	push   QWORD PTR [rsi-0x1e]
   14001bc96:	(bad)  
   14001bc97:	(bad)  
   14001bc98:	ds sar edi,1
   14001bc9b:	push   QWORD PTR [rbx]
   14001bc9d:	enter  0xffff,0xb3
   14001bca1:	mov    bl,0xb3
   14001bca3:	jmp    FWORD PTR [rbp-0x5b005253]
   14001bca9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001bcaa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001bcab:	(bad)  
   14001bcac:	out    dx,eax
   14001bcad:	out    dx,eax
   14001bcae:	out    dx,eax
   14001bcaf:	(bad)  
   14001bcb0:	(bad)  
   14001bcb1:	(bad)  
   14001bcb2:	(bad)  
   14001bcb3:	(bad)  
   14001bcb4:	mov    ebx,0xabff4586
   14001bcb9:	jns    0x14001bcf7
   14001bcbb:	jmp    QWORD PTR [rax-0x6b00c18c]
   14001bcc1:	outs   dx,BYTE PTR ds:[rsi]
   14001bcc2:	rex dec DWORD PTR [rcx+0x7eff4269]
   14001bcc9:	fs rex.RB (bad) 
   14001bccc:	jge    0x14001bd32
   14001bcce:	rex.RX jmp FWORD PTR [rsp+r11*4-0x4140077]
   14001bcd6:	(bad)  
   14001bcd7:	inc    DWORD PTR [rdi-0x28]
   14001bcda:	(bad)  
   14001bcdb:	dec    DWORD PTR [rax-0x2e]
   14001bcde:	(bad)  
   14001bcdf:	jmp    FWORD PTR [rdi+0x59ffafaf]
   14001bce5:	pop    rcx
   14001bce6:	pop    rcx
   14001bce7:	push   QWORD PTR [rbp+0x75]
   14001bcea:	jne    0x14001bceb
   14001bcec:	mov    cl,0xb1
   14001bcee:	mov    cl,0xff
   14001bcf0:	div    dh
   14001bcf2:	idiv   bh
   14001bcf4:	loopne 0x14001bcba
   14001bcf6:	movabs eax,ds:0x3c78a9ff3d80b6ff
   14001bcff:	call   FWORD PTR [rsi-0x6d00c18d]
   14001bd05:	ins    DWORD PTR es:[rdi],dx
   14001bd06:	inc    DWORD PTR [r15+0x7dff4368]
   14001bd0d:	fs rex.RB (bad) 
   14001bd10:	jge    0x14001bd77
   14001bd12:	rex.RXB (bad) 
   14001bd14:	(bad)  
   14001bd15:	(bad)  
   14001bd16:	(bad)  
   14001bd17:	call   QWORD PTR [rbx-0x21]
   14001bd1a:	(bad)  
   14001bd1b:	jmp    FWORD PTR [rax-0x64000014]
   14001bd21:	fwait
   14001bd22:	fwait
   14001bd23:	(bad)  
   14001bd24:	jg     0x14001bda5
   14001bd26:	jg     0x14001bd27
   14001bd28:	xor    al,0x34
   14001bd2a:	xor    al,0xff
   14001bd2c:	jl     0x14001bdaa
   14001bd2e:	jl     0x14001bd2f
   14001bd30:	(bad)  
   14001bd32:	fdiv   st(7),st
   14001bd34:	std    
   14001bd35:	std    
   14001bd36:	std    
   14001bd37:	(bad)  
   14001bd38:	(bad)  
   14001bd39:	(bad)  
   14001bd3a:	(bad)  
   14001bd3b:	(bad)  
   14001bd3c:	(bad)  
   14001bd3d:	(bad)  
   14001bd3e:	(bad)  
   14001bd3f:	(bad)  
   14001bd40:	(bad)  
   14001bd41:	(bad)  
   14001bd42:	(bad)  
   14001bd43:	(bad)  
   14001bd44:	(bad)  
   14001bd45:	(bad)  
   14001bd46:	(bad)  
   14001bd47:	call   rax
   14001bd49:	shl    DWORD PTR [rax+0x436785ff],0xff
   14001bd50:	jge    0x14001bdb5
   14001bd52:	rex.RB (bad) 
   14001bd54:	(bad)  
   14001bd55:	(bad)  
   14001bd56:	(bad)  
   14001bd57:	(bad)  
   14001bd58:	(bad)  
   14001bd59:	(bad)  
   14001bd5a:	push   rbp
   14001bd5c:	(bad)  
   14001bd5d:	(bad)  
   14001bd5e:	push   QWORD PTR [rbp-0x424243]
   14001bd64:	movabs eax,ds:0x4dffa8a8a8ffa1a1
   14001bd6d:	rex.WRB
   14001bd6e:	rex.WRB call QWORD PTR [r14-0x100696a]
   14001bd75:	(bad)  
   14001bd76:	(bad)  
   14001bd77:	(bad)  
   14001bd78:	std    
   14001bd79:	std    
   14001bd7a:	std    
   14001bd7b:	(bad)  
   14001bd7c:	(bad)  
   14001bd7d:	(bad)  
   14001bd7e:	(bad)  
   14001bd7f:	push   QWORD PTR [rcx-0x1500c182]
   14001bd85:	loopne 0x14001bd5a
   14001bd87:	call   FWORD PTR [rcx-0x7100c08f]
   14001bd8d:	imul   eax,DWORD PTR [rcx-0x1],0xffffff85
   14001bd91:	imul   eax,DWORD PTR [rdi-0x1],0xf4ffffff
	...
   14001bda0:	rol    ecx,0xc1
   14001bda3:	dec    edi
   14001bda5:	iret   
   14001bda6:	iret   
   14001bda7:	jmp    rbp
   14001bda9:	in     eax,0xe5
   14001bdab:	(bad)  
   14001bdac:	mov    ecx,0x52ffb9b9
   14001bdb1:	push   rdx
   14001bdb2:	push   rdx
   14001bdb3:	inc    eax
   14001bdb5:	rol    al,0xff
   14001bdb8:	clc    
   14001bdb9:	clc    
   14001bdba:	clc    
   14001bdbb:	(bad)  
   14001bdbc:	cli    
   14001bdbd:	cli    
   14001bdbe:	cli    
   14001bdbf:	(bad)  
   14001bdc0:	faddp  st(2),st
   14001bdc2:	movabs ds:0x3d75a3ff4782b2ff,al
   14001bdcb:	call   FWORD PTR [rbp-0x3500b488]
   14001bdd1:	mov    edx,0xffffffa7
   14001bdd6:	push   QWORD PTR [rbp+0x0]
   14001bddc:	add    BYTE PTR [rax],al
   14001bdde:	add    BYTE PTR [rax],al
   14001bde0:	mov    esi,0xdeffbebe
   14001bde5:	(bad)  
   14001bde7:	push   rdi
   14001bde9:	div    edi
   14001bdeb:	(bad)  
   14001bdec:	stc    
   14001bded:	stc    
   14001bdee:	stc    
   14001bdef:	(bad)  
   14001bdf0:	mov    ebx,0x9cffbbbb
   14001bdf5:	pushf  
   14001bdf6:	pushf  
   14001bdf7:	(bad)  
   14001bdf8:	in     eax,dx
   14001bdf9:	in     eax,dx
   14001bdfa:	in     eax,dx
   14001bdfb:	jmp    rcx
   14001bdfd:	loope  0x14001bde0
   14001bdff:	(bad)  
   14001be00:	(bad)  
   14001be01:	(bad)  
   14001be02:	(bad)  
   14001be03:	(bad)  
   14001be04:	std    
   14001be05:	std    
   14001be06:	std    
   14001be07:	(bad)  
   14001be08:	(bad)  
   14001be09:	(bad)  
   14001be0a:	(bad)  
   14001be0b:	(bad)  
   14001be0c:	(bad)  
   14001be0d:	(bad)  
   14001be0e:	(bad)  
   14001be0f:	(bad)  
   14001be10:	in     al,dx
   14001be11:	in     al,dx
   14001be12:	in     al,dx
   14001be13:	inc    DWORD PTR [rax]
	...
   14001be1d:	add    BYTE PTR [rax],al
   14001be1f:	add    BYTE PTR [rbx-0x31004445],bh
   14001be25:	(bad)  
   14001be26:	(bad)  
   14001be27:	jmp    rsp
   14001be29:	in     al,0xe4
   14001be2b:	push   rsi
   14001be2d:	div    dh
   14001be2f:	(bad)  
   14001be30:	clc    
   14001be31:	clc    
   14001be32:	clc    
   14001be33:	push   rdi
   14001be35:	div    edi
   14001be37:	(bad)  
   14001be38:	(bad)  
   14001be3a:	(bad)  
   14001be3c:	cli    
   14001be3d:	cli    
   14001be3e:	cli    
   14001be3f:	(bad)  
   14001be40:	cld    
   14001be41:	cld    
   14001be42:	cld    
   14001be43:	dec    eax
   14001be45:	enter  0xffc8,0xf9
   14001be49:	stc    
   14001be4a:	stc    
   14001be4b:	dec    esp
   14001be4d:	int3   
   14001be4e:	int3   
   14001be4f:	(bad)  
   14001be50:	mov    edi,0x7fbfbf
	...
   14001be5d:	add    BYTE PTR [rax],al
   14001be5f:	add    BYTE PTR [rdi-0x46004849],dh
   14001be65:	mov    ecx,0xbbbbffb9
   14001be6a:	mov    ebx,0xbdbdbdff
   14001be6f:	(bad)  
   14001be70:	mov    edi,0xc1ffbfbf
   14001be75:	rol    ecx,0xff
   14001be78:	ret    
   14001be79:	ret    
   14001be7a:	ret    
   14001be7b:	inc    ebp
   14001be7d:	(bad)
   14001be80:	enter  0xc8c8,0xff
   14001be84:	leave  
   14001be85:	leave  
   14001be86:	leave  
   14001be87:	inc    edi
   14001be89:	mov    edi,0xc4c4c4ff
   14001be8f:	jg     0x14001be91
	...
   14001be9d:	add    BYTE PTR [rax],al
   14001be9f:	add    BYTE PTR [rsi+0x7],bh
   14001bea2:	lods   al,BYTE PTR ds:[rsi]
   14001bea3:	adc    BYTE PTR [r15],al
   14001bea6:	lods   al,BYTE PTR ds:[rsi]
   14001bea7:	add    BYTE PTR [r11],al
   14001beaa:	lods   al,BYTE PTR ds:[rsi]
   14001beab:	add    BYTE PTR [r11],al
   14001beae:	lods   al,BYTE PTR ds:[rsi]
   14001beaf:	add    BYTE PTR [r8],al
   14001beb2:	lods   al,BYTE PTR ds:[rsi]
   14001beb3:	add    BYTE PTR [r8],al
   14001beb6:	lods   al,BYTE PTR ds:[rsi]
   14001beb7:	add    BYTE PTR [r8],al
   14001beba:	lods   al,BYTE PTR ds:[rsi]
   14001bebb:	add    BYTE PTR [r8],al
   14001bebe:	lods   al,BYTE PTR ds:[rsi]
   14001bebf:	add    BYTE PTR [r8],al
   14001bec2:	lods   al,BYTE PTR ds:[rsi]
   14001bec3:	add    BYTE PTR [r8],al
   14001bec6:	lods   al,BYTE PTR ds:[rsi]
   14001bec7:	add    BYTE PTR [r8],al
   14001beca:	lods   al,BYTE PTR ds:[rsi]
   14001becb:	add    BYTE PTR [r11],al
   14001bece:	lods   al,BYTE PTR ds:[rsi]
   14001becf:	add    BYTE PTR [r11],al
   14001bed2:	lods   al,BYTE PTR ds:[rsi]
   14001bed3:	add    BYTE PTR [r15],al
   14001bed6:	lods   al,BYTE PTR ds:[rsi]
   14001bed7:	add    BYTE PTR [r15],al
   14001beda:	lods   al,BYTE PTR ds:[rsi]
   14001bedb:	add    BYTE PTR [r15],cl
   14001bede:	lods   al,BYTE PTR ds:[rsi]
   14001bedf:	add    BYTE PTR [r8],al
   14001bee2:	add    DWORD PTR [rax],eax
   14001bee4:	(bad)  
   14001bee5:	add    BYTE PTR [rax],ah
   14001bee7:	and    BYTE PTR [rax],dl
   14001bee9:	add    BYTE PTR [rcx],al
   14001beeb:	add    BYTE PTR [rax+rax*1],al
   14001beee:	call   0x14101bef5
   14001bef3:	add    BYTE PTR [rax],dl
   14001bef5:	adc    BYTE PTR [rax],dl
   14001bef7:	add    BYTE PTR [rcx],al
   14001bef9:	add    BYTE PTR [rax+rax*1],al
   14001befc:	sub    BYTE PTR [rcx],al
   14001befe:	add    BYTE PTR [rax],al
   14001bf00:	add    al,BYTE PTR [rax]
   14001bf02:	and    BYTE PTR [rax],ah
   14001bf04:	add    BYTE PTR [rax],al
   14001bf06:	add    DWORD PTR [rax],eax
   14001bf08:	or     BYTE PTR [rax],al
   14001bf0a:	test   al,0x8
   14001bf0c:	add    BYTE PTR [rax],al
   14001bf0e:	add    eax,DWORD PTR [rax]
   14001bf10:	adc    BYTE PTR [rax],dl
   14001bf12:	add    BYTE PTR [rax],al
   14001bf14:	add    DWORD PTR [rax],eax
   14001bf16:	or     BYTE PTR [rax],al
   14001bf18:	push   0x4000005
   14001bf1d:	add    BYTE PTR [rax],dh
   14001bf1f:	xor    BYTE PTR [rax],al
   14001bf21:	add    BYTE PTR [rcx],al
   14001bf23:	add    BYTE PTR [rax],ah
   14001bf25:	add    BYTE PTR [rax+0x5000025],ch
   14001bf2b:	add    BYTE PTR [rax],ah
   14001bf2d:	and    BYTE PTR [rax],al
   14001bf2f:	add    BYTE PTR [rcx],al
   14001bf31:	add    BYTE PTR [rax],ah
   14001bf33:	add    BYTE PTR [rax+0x6000010],ch
   14001bf39:	add    BYTE PTR [rax],dl
   14001bf3b:	adc    BYTE PTR [rax],al
   14001bf3d:	add    BYTE PTR [rcx],al
   14001bf3f:	add    BYTE PTR [rax],ah
   14001bf41:	add    BYTE PTR [rax+0x4],ch
   14001bf44:	add    BYTE PTR [rax],al
   14001bf46:	(bad)  
   14001bf47:	add    BYTE PTR [rcx+riz*2],bh
   14001bf4a:	jae    0x14001bfbf
   14001bf4c:	gs ins DWORD PTR es:[rdi],dx
   14001bf4e:	(bad)  
   14001bf4f:	ins    BYTE PTR es:[rdi],dx
   14001bf50:	jns    0x14001bf72
   14001bf52:	js     0x14001bfc1
   14001bf54:	ins    BYTE PTR es:[rdi],dx
   14001bf55:	outs   dx,BYTE PTR ds:[rsi]
   14001bf56:	jae    0x14001bf95
   14001bf58:	and    dh,BYTE PTR [rbp+0x72]
   14001bf5b:	outs   dx,BYTE PTR ds:[rsi]
   14001bf5c:	cmp    dh,BYTE PTR [rbx+0x63]
   14001bf5f:	push   0x73616d65
   14001bf64:	sub    eax,0x7263696d
   14001bf69:	outs   dx,DWORD PTR ds:[rsi]
   14001bf6a:	jae    0x14001bfdb
   14001bf6c:	data16 je 0x14001bf9c
   14001bf6f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001bf72:	cmp    ah,BYTE PTR [rcx+0x73]
   14001bf75:	ins    DWORD PTR es:[rdi],dx
   14001bf76:	cs jbe 0x14001bfaa
   14001bf79:	and    ah,BYTE PTR [rax]
   14001bf7b:	ins    DWORD PTR es:[rdi],dx
   14001bf7c:	(bad)  
   14001bf7d:	outs   dx,BYTE PTR ds:[rsi]
   14001bf7e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14001bf85:	jb     0x14001bffa
   14001bf87:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001bf8e:	xor    BYTE PTR [rdx],ah
   14001bf90:	ds or  eax,0x3c20200a
   14001bf96:	je     0x14001c00a
   14001bf98:	jne    0x14001c00d
   14001bf9a:	je     0x14001bfe5
   14001bf9c:	outs   dx,BYTE PTR ds:[rsi]
   14001bf9d:	outs   dx,WORD PTR ds:[rsi]
   14001bf9f:	and    BYTE PTR [rax+0x6d],bh
   14001bfa2:	ins    BYTE PTR es:[rdi],dx
   14001bfa3:	outs   dx,BYTE PTR ds:[rsi]
   14001bfa4:	jae    0x14001bfe3
   14001bfa6:	and    dh,BYTE PTR [rbp+0x72]
   14001bfa9:	outs   dx,BYTE PTR ds:[rsi]
   14001bfaa:	cmp    dh,BYTE PTR [rbx+0x63]
   14001bfad:	push   0x73616d65
   14001bfb2:	sub    eax,0x7263696d
   14001bfb7:	outs   dx,DWORD PTR ds:[rsi]
   14001bfb8:	jae    0x14001c029
   14001bfba:	data16 je 0x14001bfea
   14001bfbd:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001bfc0:	cmp    ah,BYTE PTR [rcx+0x73]
   14001bfc3:	ins    DWORD PTR es:[rdi],dx
   14001bfc4:	cs jbe 0x14001bffa
   14001bfc7:	and    bh,BYTE PTR [rsi]
   14001bfc9:	or     eax,0x2020200a
   14001bfce:	and    BYTE PTR [rbx+rsi*2],bh
   14001bfd1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001bfd5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001bfdd:	and    BYTE PTR [rax],ah
   14001bfdf:	and    BYTE PTR [rax],ah
   14001bfe1:	cmp    al,0x72
   14001bfe3:	gs jno 0x14001c05b
   14001bfe6:	gs jae 0x14001c05d
   14001bfe9:	gs fs push rax
   14001bfec:	jb     0x14001c057
   14001bfee:	jbe    0x14001c059
   14001bff0:	ins    BYTE PTR es:[rdi],dx
   14001bff1:	gs addr32 gs jae 0x14001c034
   14001bff6:	or     eax,0x2020200a
   14001bffb:	and    BYTE PTR [rax],ah
   14001bffd:	and    BYTE PTR [rax],ah
   14001bfff:	and    BYTE PTR [rdx+rsi*2],bh
   14001c002:	gs jno 0x14001c07a
   14001c005:	gs jae 0x14001c07c
   14001c008:	gs fs rex.RB js 0x14001c072
   14001c00d:	movsxd esi,DWORD PTR [rbp+0x74]
   14001c010:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001c017:	ins    BYTE PTR es:[rdi],dx
   14001c018:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14001c01c:	gs ins BYTE PTR es:[rdi],dx
   14001c01e:	cmp    eax,0x49736122
   14001c023:	outs   dx,BYTE PTR ds:[rsi]
   14001c024:	jbe    0x14001c095
   14001c026:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14001c02a:	and    BYTE PTR [rbp+0x69],dh
   14001c02d:	movsxd esp,DWORD PTR [r11+0x65]
   14001c031:	jae    0x14001c0a6
   14001c033:	cmp    eax,0x6c616622
   14001c038:	jae    0x14001c09f
   14001c03a:	and    bh,BYTE PTR [rsi]
   14001c03c:	cmp    al,0x2f
   14001c03e:	jb     0x14001c0a5
   14001c040:	jno    0x14001c0b7
   14001c042:	gs jae 0x14001c0b9
   14001c045:	gs fs rex.RB js 0x14001c0af
   14001c04a:	movsxd esi,DWORD PTR [rbp+0x74]
   14001c04d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001c054:	ins    BYTE PTR es:[rdi],dx
   14001c055:	ds or  eax,0x2020200a
   14001c05b:	and    BYTE PTR [rax],ah
   14001c05d:	and    BYTE PTR [rdi+rbp*1],bh
   14001c060:	jb     0x14001c0c7
   14001c062:	jno    0x14001c0d9
   14001c064:	gs jae 0x14001c0db
   14001c067:	gs fs push rax
   14001c06a:	jb     0x14001c0d5
   14001c06c:	jbe    0x14001c0d7
   14001c06e:	ins    BYTE PTR es:[rdi],dx
   14001c06f:	gs addr32 gs jae 0x14001c0b2
   14001c074:	or     eax,0x2020200a
   14001c079:	and    BYTE PTR [rdi+rbp*1],bh
   14001c07c:	jae    0x14001c0e3
   14001c07e:	movsxd esi,DWORD PTR [rbp+0x72]
   14001c081:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001c089:	cmp    al,0x2f
   14001c08b:	je     0x14001c0ff
   14001c08d:	jne    0x14001c102
   14001c08f:	je     0x14001c0da
   14001c091:	outs   dx,BYTE PTR ds:[rsi]
   14001c092:	outs   dx,WORD PTR ds:[rsi]
   14001c094:	ds or  eax,0x612f3c0a
   14001c09a:	jae    0x14001c10f
   14001c09c:	gs ins DWORD PTR es:[rdi],dx
   14001c09e:	(bad)  
   14001c09f:	ins    BYTE PTR es:[rdi],dx
   14001c0a0:	jns    0x14001c0e0
   14001c0a2:	push   rax
   14001c0a3:	rex.B

Disassembly of section .reloc:

000000014001d000 <.reloc>:
   14001d000:	add    al,ah
   14001d002:	add    BYTE PTR [rax],al
   14001d004:	add    BYTE PTR [rax],r8b
   14001d007:	add    BYTE PTR [rax-0x4f5d575e],ah
   14001d00d:	movabs ds:0xa320a2d8a2d0a2b8,al
   14001d016:	sub    BYTE PTR [rbx-0x53875398],ah
   14001d01c:	mov    BYTE PTR [rax+rbx*4-0x47535754],ch
   14001d023:	lods   al,BYTE PTR ds:[rsi]
   14001d024:	enter  0xd8ac,0xac
   14001d028:	call   0x148aec8d9
   14001d02d:	lods   eax,DWORD PTR ds:[rsi]
   14001d02e:	sbb    BYTE PTR [rbp-0x52c752d8],ch
   14001d034:	lods   rax,QWORD PTR ds:[rsi]
   14001d036:	pop    rax
   14001d037:	lods   eax,DWORD PTR ds:[rsi]
   14001d038:	push   0xffffffff88ad78ad
   14001d03d:	lods   eax,DWORD PTR ds:[rsi]
   14001d03e:	cwde   
   14001d03f:	lods   eax,DWORD PTR ds:[rsi]
   14001d040:	test   al,0xad
   14001d042:	mov    eax,0x12000ad
   14001d047:	add    BYTE PTR [rax+0x0],al
   14001d04d:	movabs al,ds:0xa900a8f8a8f0a010
   14001d056:	or     BYTE PTR [rcx-0x56d756e0],ch
   14001d05c:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   14001d062:	test   rax,0xffffffffa958a950
   14001d068:	(bad)  
   14001d069:	test   eax,0xada0a968
   14001d06e:	mov    al,0xae
   14001d070:	mov    eax,0xc8aec0ae
   14001d075:	scas   al,BYTE PTR es:[rdi]
   14001d076:	shr    BYTE PTR [rsi-0x511f5128],1
   14001d07c:	call   0x138b0c12f
   14001d081:	scas   al,BYTE PTR es:[rdi]
   14001d082:	add    BYTE PTR [rdi-0x50ef50f8],ch
   14001d088:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   14001d08e:	xor    BYTE PTR [rdi-0x50bf50c8],ch
   14001d094:	scas   rax,QWORD PTR es:[rdi]
   14001d096:	push   rax
   14001d097:	scas   eax,DWORD PTR es:[rdi]
   14001d098:	pop    rax
   14001d099:	scas   eax,DWORD PTR es:[rdi]
   14001d09a:	(bad)  
   14001d09b:	scas   eax,DWORD PTR es:[rdi]
   14001d09c:	push   0x78af70af
   14001d0a1:	scas   eax,DWORD PTR es:[rdi]
   14001d0a2:	sub    BYTE PTR [rdi-0x506f5078],0x98
   14001d0a9:	scas   eax,DWORD PTR es:[rdi]
   14001d0aa:	movabs al,ds:0xc0afb8afb0afa8af
   14001d0b3:	scas   eax,DWORD PTR es:[rdi]
   14001d0b4:	enter  0xd0af,0xaf
   14001d0b8:	fsubr  DWORD PTR [rdi-0x50175020]
   14001d0be:	lock scas eax,DWORD PTR es:[rdi]
   14001d0c0:	clc    
   14001d0c1:	scas   eax,DWORD PTR es:[rdi]
   14001d0c2:	add    BYTE PTR [rax],al
   14001d0c4:	add    BYTE PTR [rax],dh
   14001d0c6:	add    DWORD PTR [rax],eax
   14001d0c8:	movabs al,ds:0x20a018a000000000
   14001d0d1:	movabs al,ds:0xa040a038a030a028
   14001d0da:	rex.W movabs al,ds:0xa068a060a058a050
   14001d0e4:	jo     0x14001d086
   14001d0e6:	js     0x14001d088
   14001d0e8:	and    BYTE PTR [rax-0x5f6f5f78],0x98
   14001d0ef:	movabs al,ds:0xa0b8a0b0a0a8a0a0
   14001d0f8:	shl    BYTE PTR [rax-0x5f2f5f38],0xd8
   14001d0ff:	movabs al,ds:0xa0f8a0f0a0e8a0e0
   14001d108:	add    BYTE PTR [rcx-0x5eef5ef8],ah
   14001d10e:	sbb    BYTE PTR [rcx-0x5ed75ee0],ah
   14001d114:	xor    BYTE PTR [rcx-0x5ebf5ec8],ah
   14001d11a:	movabs rax,ds:0xa168a160a158a150
   14001d124:	fsub   DWORD PTR [rcx-0x5de75e08]
   14001d12a:	cmp    BYTE PTR [rdx-0x5d675da8],ah
   14001d130:	mov    al,0xa2
   14001d132:	mov    eax,0xc8a2c0a2
   14001d137:	movabs ds:0xa300a2f8a2e0a2d0,al
   14001d140:	or     BYTE PTR [rbx-0x5ce75cf0],ah
   14001d146:	and    BYTE PTR [rbx-0x5ccf5cd8],ah
   14001d14c:	cmp    BYTE PTR [rbx-0x5cb75cc0],ah
   14001d152:	pop    rax
   14001d153:	movabs ds:0xa378a370a368a360,eax
   14001d15c:	and    BYTE PTR [rbx-0x5c6f5c78],0x0
	...
