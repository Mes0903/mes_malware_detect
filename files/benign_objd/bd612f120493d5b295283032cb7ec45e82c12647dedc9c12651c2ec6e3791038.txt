
bd612f120493d5b295283032cb7ec45e82c12647dedc9c12651c2ec6e3791038.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x8c39]        # 0x140009c40
   140001007:	jmp    0x140008988
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x8c39]        # 0x140009c50
   140001017:	jmp    0x140008988
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x8c39]        # 0x140009c60
   140001027:	jmp    0x140008988
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	lea    rcx,[rip+0x8c39]        # 0x140009c70
   140001037:	jmp    0x140008988
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	lea    rcx,[rip+0x8c39]        # 0x140009c80
   140001047:	jmp    0x140008988
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	lea    rcx,[rip+0x8c39]        # 0x140009c90
   140001057:	jmp    0x140008988
   14000105c:	int3   
   14000105d:	int3   
   14000105e:	int3   
   14000105f:	int3   
   140001060:	lea    rcx,[rip+0x8c39]        # 0x140009ca0
   140001067:	jmp    0x140008988
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	lea    rcx,[rip+0x8c39]        # 0x140009cb0
   140001077:	jmp    0x140008988
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	lea    rcx,[rip+0x8c39]        # 0x140009cc0
   140001087:	jmp    0x140008988
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	lea    rcx,[rip+0x8c39]        # 0x140009cd0
   140001097:	jmp    0x140008988
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	lea    rcx,[rip+0x8c39]        # 0x140009ce0
   1400010a7:	jmp    0x140008988
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	lea    rcx,[rip+0x8c39]        # 0x140009cf0
   1400010b7:	jmp    0x140008988
   1400010bc:	int3   
   1400010bd:	int3   
   1400010be:	int3   
   1400010bf:	int3   
   1400010c0:	lea    rcx,[rip+0x8c39]        # 0x140009d00
   1400010c7:	jmp    0x140008988
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	lea    rcx,[rip+0x8c39]        # 0x140009d10
   1400010d7:	jmp    0x140008988
   1400010dc:	int3   
   1400010dd:	int3   
   1400010de:	int3   
   1400010df:	int3   
   1400010e0:	lea    rcx,[rip+0x8c39]        # 0x140009d20
   1400010e7:	jmp    0x140008988
   1400010ec:	lea    rcx,[rip+0x8c3d]        # 0x140009d30
   1400010f3:	jmp    0x140008988
   1400010f8:	int3   
   1400010f9:	int3   
   1400010fa:	int3   
   1400010fb:	int3   
   1400010fc:	int3   
   1400010fd:	int3   
   1400010fe:	int3   
   1400010ff:	int3   
   140001100:	mov    al,0x1
   140001102:	ret    
   140001103:	int3   
   140001104:	int3   
   140001105:	int3   
   140001106:	int3   
   140001107:	int3   
   140001108:	int3   
   140001109:	int3   
   14000110a:	int3   
   14000110b:	int3   
   14000110c:	int3   
   14000110d:	int3   
   14000110e:	int3   
   14000110f:	int3   
   140001110:	mov    al,0x1
   140001112:	ret    
   140001113:	int3   
   140001114:	int3   
   140001115:	int3   
   140001116:	int3   
   140001117:	int3   
   140001118:	int3   
   140001119:	int3   
   14000111a:	int3   
   14000111b:	int3   
   14000111c:	int3   
   14000111d:	int3   
   14000111e:	int3   
   14000111f:	int3   
   140001120:	xor    al,al
   140001122:	ret    
   140001123:	int3   
   140001124:	int3   
   140001125:	int3   
   140001126:	int3   
   140001127:	int3   
   140001128:	int3   
   140001129:	int3   
   14000112a:	int3   
   14000112b:	int3   
   14000112c:	int3   
   14000112d:	int3   
   14000112e:	int3   
   14000112f:	int3   
   140001130:	sub    rsp,0x28
   140001134:	xor    eax,eax
   140001136:	test   rcx,rcx
   140001139:	je     0x140001152
   14000113b:	cmp    rcx,0xffffffffffffffff
   14000113f:	ja     0x14000114b
   140001141:	call   0x14000887a
   140001146:	test   rax,rax
   140001149:	jne    0x140001152
   14000114b:	call   QWORD PTR [rip+0x902f]        # 0x14000a180
   140001151:	int3   
   140001152:	add    rsp,0x28
   140001156:	ret    
   140001157:	int3   
   140001158:	int3   
   140001159:	int3   
   14000115a:	int3   
   14000115b:	int3   
   14000115c:	int3   
   14000115d:	int3   
   14000115e:	int3   
   14000115f:	int3   
   140001160:	sub    rsp,0x28
   140001164:	xor    eax,eax
   140001166:	test   rcx,rcx
   140001169:	je     0x14000118f
   14000116b:	movabs rax,0x7ffffffffffffff
   140001175:	cmp    rcx,rax
   140001178:	ja     0x140001188
   14000117a:	shl    rcx,0x5
   14000117e:	call   0x14000887a
   140001183:	test   rax,rax
   140001186:	jne    0x14000118f
   140001188:	call   QWORD PTR [rip+0x8ff2]        # 0x14000a180
   14000118e:	int3   
   14000118f:	add    rsp,0x28
   140001193:	ret    
   140001194:	int3   
   140001195:	int3   
   140001196:	int3   
   140001197:	int3   
   140001198:	int3   
   140001199:	int3   
   14000119a:	int3   
   14000119b:	int3   
   14000119c:	int3   
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	cmp    rcx,rdx
   1400011a3:	je     0x1400011f6
   1400011a5:	mov    QWORD PTR [rsp+0x10],rbx
   1400011aa:	push   rdi
   1400011ab:	sub    rsp,0x20
   1400011af:	mov    QWORD PTR [rsp+0x30],rsi
   1400011b4:	mov    rdi,rdx
   1400011b7:	mov    rbx,rcx
   1400011ba:	xor    esi,esi
   1400011bc:	nop    DWORD PTR [rax+0x0]
   1400011c0:	cmp    QWORD PTR [rbx+0x18],0x10
   1400011c5:	jb     0x1400011cf
   1400011c7:	mov    rcx,QWORD PTR [rbx]
   1400011ca:	call   0x140008880
   1400011cf:	mov    QWORD PTR [rbx+0x18],0xf
   1400011d7:	mov    QWORD PTR [rbx+0x10],rsi
   1400011db:	mov    BYTE PTR [rbx],sil
   1400011de:	add    rbx,0x20
   1400011e2:	cmp    rbx,rdi
   1400011e5:	jne    0x1400011c0
   1400011e7:	mov    rsi,QWORD PTR [rsp+0x30]
   1400011ec:	mov    rbx,QWORD PTR [rsp+0x38]
   1400011f1:	add    rsp,0x20
   1400011f5:	pop    rdi
   1400011f6:	ret    
   1400011f7:	int3   
   1400011f8:	int3   
   1400011f9:	int3   
   1400011fa:	int3   
   1400011fb:	int3   
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	cmp    rcx,rdx
   140001203:	je     0x140001256
   140001205:	mov    QWORD PTR [rsp+0x10],rbx
   14000120a:	push   rdi
   14000120b:	sub    rsp,0x20
   14000120f:	mov    QWORD PTR [rsp+0x30],rsi
   140001214:	mov    rdi,rdx
   140001217:	mov    rbx,rcx
   14000121a:	xor    esi,esi
   14000121c:	nop    DWORD PTR [rax+0x0]
   140001220:	cmp    QWORD PTR [rbx+0x18],0x10
   140001225:	jb     0x14000122f
   140001227:	mov    rcx,QWORD PTR [rbx]
   14000122a:	call   0x140008880
   14000122f:	mov    QWORD PTR [rbx+0x18],0xf
   140001237:	mov    QWORD PTR [rbx+0x10],rsi
   14000123b:	mov    BYTE PTR [rbx],sil
   14000123e:	add    rbx,0x20
   140001242:	cmp    rbx,rdi
   140001245:	jne    0x140001220
   140001247:	mov    rsi,QWORD PTR [rsp+0x30]
   14000124c:	mov    rbx,QWORD PTR [rsp+0x38]
   140001251:	add    rsp,0x20
   140001255:	pop    rdi
   140001256:	ret    
   140001257:	int3   
   140001258:	int3   
   140001259:	int3   
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	movzx  eax,BYTE PTR [rsp+0x18]
   140001265:	ret    
   140001266:	int3   
   140001267:	int3   
   140001268:	int3   
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	mov    QWORD PTR [rcx],rdx
   140001273:	mov    rax,rcx
   140001276:	ret    
   140001277:	int3   
   140001278:	int3   
   140001279:	int3   
   14000127a:	int3   
   14000127b:	int3   
   14000127c:	int3   
   14000127d:	int3   
   14000127e:	int3   
   14000127f:	int3   
   140001280:	rex push rbx
   140001282:	sub    rsp,0x30
   140001286:	movzx  eax,BYTE PTR [rsp+0x58]
   14000128b:	mov    r10,r9
   14000128e:	mov    r11,r8
   140001291:	mov    rcx,rdx
   140001294:	mov    BYTE PTR [rsp+0x28],al
   140001298:	lea    r9,[rsp+0x58]
   14000129d:	mov    r8,r10
   1400012a0:	mov    rdx,r11
   1400012a3:	mov    QWORD PTR [rsp+0x20],0x0
   1400012ac:	call   0x1400012f0
   1400012b1:	add    rsp,0x30
   1400012b5:	pop    rbx
   1400012b6:	ret    
   1400012b7:	int3   
   1400012b8:	int3   
   1400012b9:	int3   
   1400012ba:	int3   
   1400012bb:	int3   
   1400012bc:	int3   
   1400012bd:	int3   
   1400012be:	int3   
   1400012bf:	int3   
   1400012c0:	mov    rax,rcx
   1400012c3:	ret    
   1400012c4:	int3   
   1400012c5:	int3   
   1400012c6:	int3   
   1400012c7:	int3   
   1400012c8:	int3   
   1400012c9:	int3   
   1400012ca:	int3   
   1400012cb:	int3   
   1400012cc:	int3   
   1400012cd:	int3   
   1400012ce:	int3   
   1400012cf:	int3   
   1400012d0:	sub    rsp,0x48
   1400012d4:	movzx  eax,BYTE PTR [rsp+0x30]
   1400012d9:	mov    BYTE PTR [rsp+0x28],al
   1400012dd:	mov    QWORD PTR [rsp+0x20],0x0
   1400012e6:	call   0x1400012f0
   1400012eb:	add    rsp,0x48
   1400012ef:	ret    
   1400012f0:	mov    QWORD PTR [rsp+0x20],r9
   1400012f5:	mov    QWORD PTR [rsp+0x18],r8
   1400012fa:	push   rsi
   1400012fb:	push   rdi
   1400012fc:	push   r14
   1400012fe:	sub    rsp,0x30
   140001302:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000130b:	mov    QWORD PTR [rsp+0x58],rbx
   140001310:	mov    r14,r9
   140001313:	mov    rbx,r8
   140001316:	mov    rsi,rdx
   140001319:	mov    rdi,rcx
   14000131c:	mov    QWORD PTR [rsp+0x50],rbx
   140001321:	cmp    rdi,rsi
   140001324:	je     0x140001343
   140001326:	mov    r8,rdi
   140001329:	mov    rdx,rbx
   14000132c:	mov    rcx,r14
   14000132f:	call   0x140001570
   140001334:	add    rbx,0x20
   140001338:	mov    QWORD PTR [rsp+0x60],rbx
   14000133d:	add    rdi,0x20
   140001341:	jmp    0x140001321
   140001343:	mov    rax,rbx
   140001346:	mov    rbx,QWORD PTR [rsp+0x58]
   14000134b:	add    rsp,0x30
   14000134f:	pop    r14
   140001351:	pop    rdi
   140001352:	pop    rsi
   140001353:	ret    
   140001354:	int3   
   140001355:	int3   
   140001356:	int3   
   140001357:	int3   
   140001358:	int3   
   140001359:	int3   
   14000135a:	int3   
   14000135b:	int3   
   14000135c:	int3   
   14000135d:	int3   
   14000135e:	int3   
   14000135f:	int3   
   140001360:	sub    rsp,0x38
   140001364:	movzx  eax,BYTE PTR [rsp+0x50]
   140001369:	mov    BYTE PTR [rsp+0x28],al
   14000136d:	mov    QWORD PTR [rsp+0x20],0x0
   140001376:	call   0x1400012f0
   14000137b:	add    rsp,0x38
   14000137f:	ret    
   140001380:	xor    eax,eax
   140001382:	ret    
   140001383:	int3   
   140001384:	int3   
   140001385:	int3   
   140001386:	int3   
   140001387:	int3   
   140001388:	int3   
   140001389:	int3   
   14000138a:	int3   
   14000138b:	int3   
   14000138c:	int3   
   14000138d:	int3   
   14000138e:	int3   
   14000138f:	int3   
   140001390:	mov    rax,rcx
   140001393:	ret    
   140001394:	int3   
   140001395:	int3   
   140001396:	int3   
   140001397:	int3   
   140001398:	int3   
   140001399:	int3   
   14000139a:	int3   
   14000139b:	int3   
   14000139c:	int3   
   14000139d:	int3   
   14000139e:	int3   
   14000139f:	int3   
   1400013a0:	mov    rax,rcx
   1400013a3:	ret    
   1400013a4:	int3   
   1400013a5:	int3   
   1400013a6:	int3   
   1400013a7:	int3   
   1400013a8:	int3   
   1400013a9:	int3   
   1400013aa:	int3   
   1400013ab:	int3   
   1400013ac:	int3   
   1400013ad:	int3   
   1400013ae:	int3   
   1400013af:	int3   
   1400013b0:	test   rdx,rdx
   1400013b3:	je     0x1400013bb
   1400013b5:	mov    rax,QWORD PTR [r8]
   1400013b8:	mov    QWORD PTR [rdx],rax
   1400013bb:	ret    
   1400013bc:	int3   
   1400013bd:	int3   
   1400013be:	int3   
   1400013bf:	int3   
   1400013c0:	test   rdx,rdx
   1400013c3:	je     0x1400013cb
   1400013c5:	mov    rax,QWORD PTR [r8]
   1400013c8:	mov    QWORD PTR [rdx],rax
   1400013cb:	ret    
   1400013cc:	int3   
   1400013cd:	int3   
   1400013ce:	int3   
   1400013cf:	int3   
   1400013d0:	test   rdx,rdx
   1400013d3:	je     0x1400013db
   1400013d5:	mov    rax,QWORD PTR [r8]
   1400013d8:	mov    QWORD PTR [rdx],rax
   1400013db:	ret    
   1400013dc:	int3   
   1400013dd:	int3   
   1400013de:	int3   
   1400013df:	int3   
   1400013e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400013e5:	sub    rsp,0x38
   1400013e9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400013f2:	mov    r10,r8
   1400013f5:	mov    rax,rdx
   1400013f8:	mov    QWORD PTR [rsp+0x58],rdx
   1400013fd:	test   rdx,rdx
   140001400:	je     0x140001428
   140001402:	mov    QWORD PTR [rdx+0x18],0xf
   14000140a:	mov    QWORD PTR [rdx+0x10],0x0
   140001412:	mov    BYTE PTR [rdx],0x0
   140001415:	or     r9,0xffffffffffffffff
   140001419:	xor    r8d,r8d
   14000141c:	mov    rdx,r10
   14000141f:	mov    rcx,rax
   140001422:	call   0x1400029b0
   140001427:	nop
   140001428:	add    rsp,0x38
   14000142c:	ret    
   14000142d:	int3   
   14000142e:	int3   
   14000142f:	int3   
   140001430:	mov    QWORD PTR [rsp+0x10],rdx
   140001435:	sub    rsp,0x38
   140001439:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001442:	mov    r10,r8
   140001445:	mov    rax,rdx
   140001448:	mov    QWORD PTR [rsp+0x58],rdx
   14000144d:	test   rdx,rdx
   140001450:	je     0x140001478
   140001452:	mov    QWORD PTR [rdx+0x18],0xf
   14000145a:	mov    QWORD PTR [rdx+0x10],0x0
   140001462:	mov    BYTE PTR [rdx],0x0
   140001465:	or     r9,0xffffffffffffffff
   140001469:	xor    r8d,r8d
   14000146c:	mov    rdx,r10
   14000146f:	mov    rcx,rax
   140001472:	call   0x1400029b0
   140001477:	nop
   140001478:	add    rsp,0x38
   14000147c:	ret    
   14000147d:	int3   
   14000147e:	int3   
   14000147f:	int3   
   140001480:	mov    QWORD PTR [rsp+0x10],rdx
   140001485:	sub    rsp,0x38
   140001489:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001492:	mov    r10,r8
   140001495:	mov    rax,rdx
   140001498:	mov    QWORD PTR [rsp+0x58],rdx
   14000149d:	test   rdx,rdx
   1400014a0:	je     0x1400014c8
   1400014a2:	mov    QWORD PTR [rdx+0x18],0xf
   1400014aa:	mov    QWORD PTR [rdx+0x10],0x0
   1400014b2:	mov    BYTE PTR [rdx],0x0
   1400014b5:	or     r9,0xffffffffffffffff
   1400014b9:	xor    r8d,r8d
   1400014bc:	mov    rdx,r10
   1400014bf:	mov    rcx,rax
   1400014c2:	call   0x1400029b0
   1400014c7:	nop
   1400014c8:	add    rsp,0x38
   1400014cc:	ret    
   1400014cd:	int3   
   1400014ce:	int3   
   1400014cf:	int3   
   1400014d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400014d5:	sub    rsp,0x38
   1400014d9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400014e2:	mov    r10,r8
   1400014e5:	mov    rax,rdx
   1400014e8:	mov    QWORD PTR [rsp+0x58],rdx
   1400014ed:	test   rdx,rdx
   1400014f0:	je     0x140001518
   1400014f2:	mov    QWORD PTR [rdx+0x18],0xf
   1400014fa:	mov    QWORD PTR [rdx+0x10],0x0
   140001502:	mov    BYTE PTR [rdx],0x0
   140001505:	or     r9,0xffffffffffffffff
   140001509:	xor    r8d,r8d
   14000150c:	mov    rdx,r10
   14000150f:	mov    rcx,rax
   140001512:	call   0x1400029b0
   140001517:	nop
   140001518:	add    rsp,0x38
   14000151c:	ret    
   14000151d:	int3   
   14000151e:	int3   
   14000151f:	int3   
   140001520:	mov    QWORD PTR [rsp+0x10],rdx
   140001525:	sub    rsp,0x38
   140001529:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001532:	mov    r10,r8
   140001535:	mov    rax,rdx
   140001538:	mov    QWORD PTR [rsp+0x58],rdx
   14000153d:	test   rdx,rdx
   140001540:	je     0x140001568
   140001542:	mov    QWORD PTR [rdx+0x18],0xf
   14000154a:	mov    QWORD PTR [rdx+0x10],0x0
   140001552:	mov    BYTE PTR [rdx],0x0
   140001555:	or     r9,0xffffffffffffffff
   140001559:	xor    r8d,r8d
   14000155c:	mov    rdx,r10
   14000155f:	mov    rcx,rax
   140001562:	call   0x1400029b0
   140001567:	nop
   140001568:	add    rsp,0x38
   14000156c:	ret    
   14000156d:	int3   
   14000156e:	int3   
   14000156f:	int3   
   140001570:	mov    QWORD PTR [rsp+0x10],rdx
   140001575:	push   rdi
   140001576:	sub    rsp,0x30
   14000157a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001583:	mov    QWORD PTR [rsp+0x40],rbx
   140001588:	mov    rdi,r8
   14000158b:	mov    rbx,rdx
   14000158e:	mov    QWORD PTR [rsp+0x58],rdx
   140001593:	test   rdx,rdx
   140001596:	je     0x1400015f9
   140001598:	mov    QWORD PTR [rdx+0x18],0xf
   1400015a0:	mov    QWORD PTR [rdx+0x10],0x0
   1400015a8:	mov    BYTE PTR [rdx],0x0
   1400015ab:	cmp    QWORD PTR [r8+0x18],0x10
   1400015b0:	jae    0x1400015c9
   1400015b2:	mov    r8,QWORD PTR [r8+0x10]
   1400015b6:	inc    r8
   1400015b9:	je     0x1400015d6
   1400015bb:	mov    rdx,rdi
   1400015be:	mov    rcx,rbx
   1400015c1:	call   QWORD PTR [rip+0x8bd9]        # 0x14000a1a0
   1400015c7:	jmp    0x1400015d6
   1400015c9:	mov    rax,QWORD PTR [r8]
   1400015cc:	mov    QWORD PTR [rdx],rax
   1400015cf:	mov    QWORD PTR [r8],0x0
   1400015d6:	mov    rax,QWORD PTR [rdi+0x10]
   1400015da:	mov    QWORD PTR [rbx+0x10],rax
   1400015de:	mov    rax,QWORD PTR [rdi+0x18]
   1400015e2:	mov    QWORD PTR [rbx+0x18],rax
   1400015e6:	mov    QWORD PTR [rdi+0x18],0xf
   1400015ee:	mov    QWORD PTR [rdi+0x10],0x0
   1400015f6:	mov    BYTE PTR [rdi],0x0
   1400015f9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400015fe:	add    rsp,0x30
   140001602:	pop    rdi
   140001603:	ret    
   140001604:	int3   
   140001605:	int3   
   140001606:	int3   
   140001607:	int3   
   140001608:	int3   
   140001609:	int3   
   14000160a:	int3   
   14000160b:	int3   
   14000160c:	int3   
   14000160d:	int3   
   14000160e:	int3   
   14000160f:	int3   
   140001610:	test   rdx,rdx
   140001613:	je     0x140001690
   140001615:	mov    QWORD PTR [rsp+0x8],rbx
   14000161a:	push   rdi
   14000161b:	sub    rsp,0x20
   14000161f:	mov    QWORD PTR [rdx+0x18],0xf
   140001627:	mov    QWORD PTR [rdx+0x10],0x0
   14000162f:	mov    BYTE PTR [rdx],0x0
   140001632:	cmp    QWORD PTR [r8+0x18],0x10
   140001637:	mov    rbx,r8
   14000163a:	mov    rdi,rdx
   14000163d:	jae    0x140001656
   14000163f:	mov    r8,QWORD PTR [r8+0x10]
   140001643:	inc    r8
   140001646:	je     0x140001663
   140001648:	mov    rdx,rbx
   14000164b:	mov    rcx,rdi
   14000164e:	call   QWORD PTR [rip+0x8b4c]        # 0x14000a1a0
   140001654:	jmp    0x140001663
   140001656:	mov    rax,QWORD PTR [r8]
   140001659:	mov    QWORD PTR [rdx],rax
   14000165c:	mov    QWORD PTR [r8],0x0
   140001663:	mov    rax,QWORD PTR [rbx+0x10]
   140001667:	mov    QWORD PTR [rdi+0x10],rax
   14000166b:	mov    rax,QWORD PTR [rbx+0x18]
   14000166f:	mov    QWORD PTR [rdi+0x18],rax
   140001673:	mov    QWORD PTR [rbx+0x18],0xf
   14000167b:	mov    QWORD PTR [rbx+0x10],0x0
   140001683:	mov    BYTE PTR [rbx],0x0
   140001686:	mov    rbx,QWORD PTR [rsp+0x30]
   14000168b:	add    rsp,0x20
   14000168f:	pop    rdi
   140001690:	ret    
   140001691:	int3   
   140001692:	int3   
   140001693:	int3   
   140001694:	int3   
   140001695:	int3   
   140001696:	int3   
   140001697:	int3   
   140001698:	int3   
   140001699:	int3   
   14000169a:	int3   
   14000169b:	int3   
   14000169c:	int3   
   14000169d:	int3   
   14000169e:	int3   
   14000169f:	int3   
   1400016a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400016a5:	push   rdi
   1400016a6:	sub    rsp,0x30
   1400016aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400016b3:	mov    QWORD PTR [rsp+0x40],rbx
   1400016b8:	mov    rdi,r8
   1400016bb:	mov    rbx,rdx
   1400016be:	mov    QWORD PTR [rsp+0x58],rdx
   1400016c3:	test   rdx,rdx
   1400016c6:	je     0x140001729
   1400016c8:	mov    QWORD PTR [rdx+0x18],0xf
   1400016d0:	mov    QWORD PTR [rdx+0x10],0x0
   1400016d8:	mov    BYTE PTR [rdx],0x0
   1400016db:	cmp    QWORD PTR [r8+0x18],0x10
   1400016e0:	jae    0x1400016f9
   1400016e2:	mov    r8,QWORD PTR [r8+0x10]
   1400016e6:	inc    r8
   1400016e9:	je     0x140001706
   1400016eb:	mov    rdx,rdi
   1400016ee:	mov    rcx,rbx
   1400016f1:	call   QWORD PTR [rip+0x8aa9]        # 0x14000a1a0
   1400016f7:	jmp    0x140001706
   1400016f9:	mov    rax,QWORD PTR [r8]
   1400016fc:	mov    QWORD PTR [rdx],rax
   1400016ff:	mov    QWORD PTR [r8],0x0
   140001706:	mov    rax,QWORD PTR [rdi+0x10]
   14000170a:	mov    QWORD PTR [rbx+0x10],rax
   14000170e:	mov    rax,QWORD PTR [rdi+0x18]
   140001712:	mov    QWORD PTR [rbx+0x18],rax
   140001716:	mov    QWORD PTR [rdi+0x18],0xf
   14000171e:	mov    QWORD PTR [rdi+0x10],0x0
   140001726:	mov    BYTE PTR [rdi],0x0
   140001729:	mov    rbx,QWORD PTR [rsp+0x40]
   14000172e:	add    rsp,0x30
   140001732:	pop    rdi
   140001733:	ret    
   140001734:	int3   
   140001735:	int3   
   140001736:	int3   
   140001737:	int3   
   140001738:	int3   
   140001739:	int3   
   14000173a:	int3   
   14000173b:	int3   
   14000173c:	int3   
   14000173d:	int3   
   14000173e:	int3   
   14000173f:	int3   
   140001740:	ret    0x0
   140001743:	int3   
   140001744:	int3   
   140001745:	int3   
   140001746:	int3   
   140001747:	int3   
   140001748:	int3   
   140001749:	int3   
   14000174a:	int3   
   14000174b:	int3   
   14000174c:	int3   
   14000174d:	int3   
   14000174e:	int3   
   14000174f:	int3   
   140001750:	ret    0x0
   140001753:	int3   
   140001754:	int3   
   140001755:	int3   
   140001756:	int3   
   140001757:	int3   
   140001758:	int3   
   140001759:	int3   
   14000175a:	int3   
   14000175b:	int3   
   14000175c:	int3   
   14000175d:	int3   
   14000175e:	int3   
   14000175f:	int3   
   140001760:	ret    0x0
   140001763:	int3   
   140001764:	int3   
   140001765:	int3   
   140001766:	int3   
   140001767:	int3   
   140001768:	int3   
   140001769:	int3   
   14000176a:	int3   
   14000176b:	int3   
   14000176c:	int3   
   14000176d:	int3   
   14000176e:	int3   
   14000176f:	int3   
   140001770:	rex push rbx
   140001772:	sub    rsp,0x20
   140001776:	cmp    QWORD PTR [rdx+0x18],0x10
   14000177b:	mov    rbx,rdx
   14000177e:	jb     0x140001788
   140001780:	mov    rcx,QWORD PTR [rdx]
   140001783:	call   0x140008880
   140001788:	mov    QWORD PTR [rbx+0x18],0xf
   140001790:	mov    QWORD PTR [rbx+0x10],0x0
   140001798:	mov    BYTE PTR [rbx],0x0
   14000179b:	add    rsp,0x20
   14000179f:	pop    rbx
   1400017a0:	ret    
   1400017a1:	int3   
   1400017a2:	int3   
   1400017a3:	int3   
   1400017a4:	int3   
   1400017a5:	int3   
   1400017a6:	int3   
   1400017a7:	int3   
   1400017a8:	int3   
   1400017a9:	int3   
   1400017aa:	int3   
   1400017ab:	int3   
   1400017ac:	int3   
   1400017ad:	int3   
   1400017ae:	int3   
   1400017af:	int3   
   1400017b0:	rex push rbx
   1400017b2:	sub    rsp,0x20
   1400017b6:	cmp    QWORD PTR [rdx+0x18],0x10
   1400017bb:	mov    rbx,rdx
   1400017be:	jb     0x1400017c8
   1400017c0:	mov    rcx,QWORD PTR [rdx]
   1400017c3:	call   0x140008880
   1400017c8:	mov    QWORD PTR [rbx+0x18],0xf
   1400017d0:	mov    QWORD PTR [rbx+0x10],0x0
   1400017d8:	mov    BYTE PTR [rbx],0x0
   1400017db:	add    rsp,0x20
   1400017df:	pop    rbx
   1400017e0:	ret    
   1400017e1:	int3   
   1400017e2:	int3   
   1400017e3:	int3   
   1400017e4:	int3   
   1400017e5:	int3   
   1400017e6:	int3   
   1400017e7:	int3   
   1400017e8:	int3   
   1400017e9:	int3   
   1400017ea:	int3   
   1400017eb:	int3   
   1400017ec:	int3   
   1400017ed:	int3   
   1400017ee:	int3   
   1400017ef:	int3   
   1400017f0:	rex push rbx
   1400017f2:	sub    rsp,0x20
   1400017f6:	cmp    QWORD PTR [rdx+0x18],0x10
   1400017fb:	mov    rbx,rdx
   1400017fe:	jb     0x140001808
   140001800:	mov    rcx,QWORD PTR [rdx]
   140001803:	call   0x140008880
   140001808:	mov    QWORD PTR [rbx+0x18],0xf
   140001810:	mov    QWORD PTR [rbx+0x10],0x0
   140001818:	mov    BYTE PTR [rbx],0x0
   14000181b:	add    rsp,0x20
   14000181f:	pop    rbx
   140001820:	ret    
   140001821:	int3   
   140001822:	int3   
   140001823:	int3   
   140001824:	int3   
   140001825:	int3   
   140001826:	int3   
   140001827:	int3   
   140001828:	int3   
   140001829:	int3   
   14000182a:	int3   
   14000182b:	int3   
   14000182c:	int3   
   14000182d:	int3   
   14000182e:	int3   
   14000182f:	int3   
   140001830:	mov    rax,rcx
   140001833:	ret    
   140001834:	int3   
   140001835:	int3   
   140001836:	int3   
   140001837:	int3   
   140001838:	int3   
   140001839:	int3   
   14000183a:	int3   
   14000183b:	int3   
   14000183c:	int3   
   14000183d:	int3   
   14000183e:	int3   
   14000183f:	int3   
   140001840:	mov    rax,rcx
   140001843:	ret    
   140001844:	int3   
   140001845:	int3   
   140001846:	int3   
   140001847:	int3   
   140001848:	int3   
   140001849:	int3   
   14000184a:	int3   
   14000184b:	int3   
   14000184c:	int3   
   14000184d:	int3   
   14000184e:	int3   
   14000184f:	int3   
   140001850:	mov    rax,rcx
   140001853:	ret    
   140001854:	int3   
   140001855:	int3   
   140001856:	int3   
   140001857:	int3   
   140001858:	int3   
   140001859:	int3   
   14000185a:	int3   
   14000185b:	int3   
   14000185c:	int3   
   14000185d:	int3   
   14000185e:	int3   
   14000185f:	int3   
   140001860:	mov    rax,rcx
   140001863:	ret    
   140001864:	int3   
   140001865:	int3   
   140001866:	int3   
   140001867:	int3   
   140001868:	int3   
   140001869:	int3   
   14000186a:	int3   
   14000186b:	int3   
   14000186c:	int3   
   14000186d:	int3   
   14000186e:	int3   
   14000186f:	int3   
   140001870:	xor    eax,eax
   140001872:	mov    QWORD PTR [rcx+0x10],rax
   140001876:	mov    QWORD PTR [rcx+0x18],rax
   14000187a:	mov    rax,rcx
   14000187d:	ret    
   14000187e:	int3   
   14000187f:	int3   
   140001880:	xor    eax,eax
   140001882:	mov    QWORD PTR [rcx+0x10],rax
   140001886:	mov    QWORD PTR [rcx+0x18],rax
   14000188a:	mov    rax,rcx
   14000188d:	ret    
   14000188e:	int3   
   14000188f:	int3   
   140001890:	xor    eax,eax
   140001892:	mov    QWORD PTR [rcx],rax
   140001895:	mov    QWORD PTR [rcx+0x8],rax
   140001899:	mov    QWORD PTR [rcx+0x10],rax
   14000189d:	mov    rax,rcx
   1400018a0:	ret    
   1400018a1:	int3   
   1400018a2:	int3   
   1400018a3:	int3   
   1400018a4:	int3   
   1400018a5:	int3   
   1400018a6:	int3   
   1400018a7:	int3   
   1400018a8:	int3   
   1400018a9:	int3   
   1400018aa:	int3   
   1400018ab:	int3   
   1400018ac:	int3   
   1400018ad:	int3   
   1400018ae:	int3   
   1400018af:	int3   
   1400018b0:	xor    eax,eax
   1400018b2:	mov    QWORD PTR [rcx],rax
   1400018b5:	mov    QWORD PTR [rcx+0x8],rax
   1400018b9:	mov    QWORD PTR [rcx+0x10],rax
   1400018bd:	mov    rax,rcx
   1400018c0:	ret    
   1400018c1:	int3   
   1400018c2:	int3   
   1400018c3:	int3   
   1400018c4:	int3   
   1400018c5:	int3   
   1400018c6:	int3   
   1400018c7:	int3   
   1400018c8:	int3   
   1400018c9:	int3   
   1400018ca:	int3   
   1400018cb:	int3   
   1400018cc:	int3   
   1400018cd:	int3   
   1400018ce:	int3   
   1400018cf:	int3   
   1400018d0:	mov    rax,rcx
   1400018d3:	ret    
   1400018d4:	int3   
   1400018d5:	int3   
   1400018d6:	int3   
   1400018d7:	int3   
   1400018d8:	int3   
   1400018d9:	int3   
   1400018da:	int3   
   1400018db:	int3   
   1400018dc:	int3   
   1400018dd:	int3   
   1400018de:	int3   
   1400018df:	int3   
   1400018e0:	mov    rax,rcx
   1400018e3:	ret    
   1400018e4:	int3   
   1400018e5:	int3   
   1400018e6:	int3   
   1400018e7:	int3   
   1400018e8:	int3   
   1400018e9:	int3   
   1400018ea:	int3   
   1400018eb:	int3   
   1400018ec:	int3   
   1400018ed:	int3   
   1400018ee:	int3   
   1400018ef:	int3   
   1400018f0:	mov    rax,rcx
   1400018f3:	ret    
   1400018f4:	int3   
   1400018f5:	int3   
   1400018f6:	int3   
   1400018f7:	int3   
   1400018f8:	int3   
   1400018f9:	int3   
   1400018fa:	int3   
   1400018fb:	int3   
   1400018fc:	int3   
   1400018fd:	int3   
   1400018fe:	int3   
   1400018ff:	int3   
   140001900:	mov    rax,rcx
   140001903:	ret    
   140001904:	int3   
   140001905:	int3   
   140001906:	int3   
   140001907:	int3   
   140001908:	int3   
   140001909:	int3   
   14000190a:	int3   
   14000190b:	int3   
   14000190c:	int3   
   14000190d:	int3   
   14000190e:	int3   
   14000190f:	int3   
   140001910:	mov    rax,rcx
   140001913:	ret    
   140001914:	int3   
   140001915:	int3   
   140001916:	int3   
   140001917:	int3   
   140001918:	int3   
   140001919:	int3   
   14000191a:	int3   
   14000191b:	int3   
   14000191c:	int3   
   14000191d:	int3   
   14000191e:	int3   
   14000191f:	int3   
   140001920:	mov    rax,rcx
   140001923:	ret    
   140001924:	int3   
   140001925:	int3   
   140001926:	int3   
   140001927:	int3   
   140001928:	int3   
   140001929:	int3   
   14000192a:	int3   
   14000192b:	int3   
   14000192c:	int3   
   14000192d:	int3   
   14000192e:	int3   
   14000192f:	int3   
   140001930:	mov    QWORD PTR [rsp+0x8],rbx
   140001935:	push   rdi
   140001936:	sub    rsp,0x20
   14000193a:	mov    QWORD PTR [rcx+0x18],0xf
   140001942:	mov    QWORD PTR [rcx+0x10],0x0
   14000194a:	mov    BYTE PTR [rcx],0x0
   14000194d:	cmp    QWORD PTR [rdx+0x18],0x10
   140001952:	mov    rbx,rdx
   140001955:	mov    rdi,rcx
   140001958:	jae    0x14000196b
   14000195a:	mov    r8,QWORD PTR [rdx+0x10]
   14000195e:	inc    r8
   140001961:	je     0x140001978
   140001963:	call   QWORD PTR [rip+0x8837]        # 0x14000a1a0
   140001969:	jmp    0x140001978
   14000196b:	mov    rax,QWORD PTR [rdx]
   14000196e:	mov    QWORD PTR [rcx],rax
   140001971:	mov    QWORD PTR [rdx],0x0
   140001978:	mov    rax,QWORD PTR [rbx+0x10]
   14000197c:	mov    QWORD PTR [rdi+0x10],rax
   140001980:	mov    rax,QWORD PTR [rbx+0x18]
   140001984:	mov    QWORD PTR [rdi+0x18],rax
   140001988:	mov    QWORD PTR [rbx+0x18],0xf
   140001990:	mov    QWORD PTR [rbx+0x10],0x0
   140001998:	mov    BYTE PTR [rbx],0x0
   14000199b:	mov    rbx,QWORD PTR [rsp+0x30]
   1400019a0:	mov    rax,rdi
   1400019a3:	add    rsp,0x20
   1400019a7:	pop    rdi
   1400019a8:	ret    
   1400019a9:	int3   
   1400019aa:	int3   
   1400019ab:	int3   
   1400019ac:	int3   
   1400019ad:	int3   
   1400019ae:	int3   
   1400019af:	int3   
   1400019b0:	rex push rbx
   1400019b2:	sub    rsp,0x20
   1400019b6:	mov    QWORD PTR [rcx+0x18],0xf
   1400019be:	mov    QWORD PTR [rcx+0x10],0x0
   1400019c6:	or     r9,0xffffffffffffffff
   1400019ca:	xor    r8d,r8d
   1400019cd:	mov    rbx,rcx
   1400019d0:	mov    BYTE PTR [rcx],0x0
   1400019d3:	call   0x1400029b0
   1400019d8:	mov    rax,rbx
   1400019db:	add    rsp,0x20
   1400019df:	pop    rbx
   1400019e0:	ret    
   1400019e1:	int3   
   1400019e2:	int3   
   1400019e3:	int3   
   1400019e4:	int3   
   1400019e5:	int3   
   1400019e6:	int3   
   1400019e7:	int3   
   1400019e8:	int3   
   1400019e9:	int3   
   1400019ea:	int3   
   1400019eb:	int3   
   1400019ec:	int3   
   1400019ed:	int3   
   1400019ee:	int3   
   1400019ef:	int3   
   1400019f0:	rex push rbx
   1400019f2:	sub    rsp,0x20
   1400019f6:	xor    r8d,r8d
   1400019f9:	mov    QWORD PTR [rcx+0x18],0xf
   140001a01:	mov    rbx,rcx
   140001a04:	mov    QWORD PTR [rcx+0x10],r8
   140001a08:	mov    BYTE PTR [rcx],r8b
   140001a0b:	cmp    BYTE PTR [rdx],r8b
   140001a0e:	je     0x140001a1e
   140001a10:	or     r8,0xffffffffffffffff
   140001a14:	inc    r8
   140001a17:	cmp    BYTE PTR [rdx+r8*1],0x0
   140001a1c:	jne    0x140001a14
   140001a1e:	call   0x140002b00
   140001a23:	mov    rax,rbx
   140001a26:	add    rsp,0x20
   140001a2a:	pop    rbx
   140001a2b:	ret    
   140001a2c:	int3   
   140001a2d:	int3   
   140001a2e:	int3   
   140001a2f:	int3   
   140001a30:	xor    eax,eax
   140001a32:	mov    QWORD PTR [rcx],rax
   140001a35:	mov    QWORD PTR [rcx+0x8],rax
   140001a39:	mov    QWORD PTR [rcx+0x10],rax
   140001a3d:	mov    rax,rcx
   140001a40:	ret    
   140001a41:	int3   
   140001a42:	int3   
   140001a43:	int3   
   140001a44:	int3   
   140001a45:	int3   
   140001a46:	int3   
   140001a47:	int3   
   140001a48:	int3   
   140001a49:	int3   
   140001a4a:	int3   
   140001a4b:	int3   
   140001a4c:	int3   
   140001a4d:	int3   
   140001a4e:	int3   
   140001a4f:	int3   
   140001a50:	mov    QWORD PTR [rsp+0x8],rcx
   140001a55:	push   rdi
   140001a56:	sub    rsp,0x30
   140001a5a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001a63:	mov    QWORD PTR [rsp+0x48],rbx
   140001a68:	mov    QWORD PTR [rsp+0x50],rsi
   140001a6d:	mov    rbx,rdx
   140001a70:	mov    rdi,rcx
   140001a73:	mov    QWORD PTR [rcx+0x18],0xf
   140001a7b:	xor    esi,esi
   140001a7d:	mov    QWORD PTR [rcx+0x10],rsi
   140001a81:	mov    BYTE PTR [rcx],sil
   140001a84:	or     r9,0xffffffffffffffff
   140001a88:	xor    r8d,r8d
   140001a8b:	call   0x1400029b0
   140001a90:	nop
   140001a91:	lea    rcx,[rdi+0x20]
   140001a95:	mov    QWORD PTR [rcx+0x18],0xf
   140001a9d:	mov    QWORD PTR [rcx+0x10],rsi
   140001aa1:	mov    BYTE PTR [rcx],sil
   140001aa4:	lea    rdx,[rbx+0x20]
   140001aa8:	or     r9,0xffffffffffffffff
   140001aac:	xor    r8d,r8d
   140001aaf:	call   0x1400029b0
   140001ab4:	nop
   140001ab5:	lea    rcx,[rdi+0x40]
   140001ab9:	mov    QWORD PTR [rcx+0x18],0xf
   140001ac1:	mov    QWORD PTR [rcx+0x10],rsi
   140001ac5:	mov    BYTE PTR [rcx],sil
   140001ac8:	lea    rdx,[rbx+0x40]
   140001acc:	or     r9,0xffffffffffffffff
   140001ad0:	xor    r8d,r8d
   140001ad3:	call   0x1400029b0
   140001ad8:	mov    QWORD PTR [rdi+0x60],rsi
   140001adc:	mov    QWORD PTR [rdi+0x68],rsi
   140001ae0:	mov    QWORD PTR [rdi+0x70],rsi
   140001ae4:	mov    rax,rdi
   140001ae7:	mov    rbx,QWORD PTR [rsp+0x48]
   140001aec:	mov    rsi,QWORD PTR [rsp+0x50]
   140001af1:	add    rsp,0x30
   140001af5:	pop    rdi
   140001af6:	ret    
   140001af7:	int3   
   140001af8:	int3   
   140001af9:	int3   
   140001afa:	int3   
   140001afb:	int3   
   140001afc:	int3   
   140001afd:	int3   
   140001afe:	int3   
   140001aff:	int3   
   140001b00:	mov    rax,rsp
   140001b03:	mov    QWORD PTR [rax+0x8],rcx
   140001b07:	push   rdi
   140001b08:	sub    rsp,0x70
   140001b0c:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   140001b14:	mov    QWORD PTR [rax+0x10],rbx
   140001b18:	mov    QWORD PTR [rax+0x18],rsi
   140001b1c:	mov    rbx,rdx
   140001b1f:	mov    rdi,rcx
   140001b22:	mov    QWORD PTR [rcx+0x18],0xf
   140001b2a:	xor    esi,esi
   140001b2c:	mov    QWORD PTR [rcx+0x10],rsi
   140001b30:	mov    BYTE PTR [rcx],sil
   140001b33:	xor    r8d,r8d
   140001b36:	lea    rdx,[rip+0x8b73]        # 0x14000a6b0
   140001b3d:	call   0x140002b00
   140001b42:	nop
   140001b43:	lea    rcx,[rdi+0x20]
   140001b47:	mov    QWORD PTR [rcx+0x18],0xf
   140001b4f:	mov    QWORD PTR [rcx+0x10],rsi
   140001b53:	mov    BYTE PTR [rcx],sil
   140001b56:	xor    r8d,r8d
   140001b59:	lea    rdx,[rip+0x8b50]        # 0x14000a6b0
   140001b60:	call   0x140002b00
   140001b65:	nop
   140001b66:	lea    rcx,[rdi+0x40]
   140001b6a:	mov    QWORD PTR [rcx+0x18],0xf
   140001b72:	mov    QWORD PTR [rcx+0x10],rsi
   140001b76:	mov    BYTE PTR [rcx],sil
   140001b79:	xor    r8d,r8d
   140001b7c:	lea    rdx,[rip+0x8b2d]        # 0x14000a6b0
   140001b83:	call   0x140002b00
   140001b88:	nop
   140001b89:	mov    QWORD PTR [rdi+0x60],rsi
   140001b8d:	mov    QWORD PTR [rdi+0x68],rsi
   140001b91:	mov    QWORD PTR [rdi+0x70],rsi
   140001b95:	mov    rdx,rbx
   140001b98:	mov    rcx,rdi
   140001b9b:	call   0x140002770
   140001ba0:	cmp    QWORD PTR [rdi+0x10],rsi
   140001ba4:	je     0x140001bb7
   140001ba6:	cmp    QWORD PTR [rdi+0x30],rsi
   140001baa:	je     0x140001bb7
   140001bac:	cmp    QWORD PTR [rdi+0x50],rsi
   140001bb0:	je     0x140001bb7
   140001bb2:	mov    rax,rdi
   140001bb5:	jmp    0x140001be0
   140001bb7:	mov    r8d,0xfffffffc
   140001bbd:	lea    rdx,[rip+0x8c44]        # 0x14000a808
   140001bc4:	lea    rcx,[rsp+0x28]
   140001bc9:	call   0x1400033d0
   140001bce:	lea    rdx,[rip+0xb74b]        # 0x14000d320
   140001bd5:	lea    rcx,[rsp+0x28]
   140001bda:	call   0x1400089b8
   140001bdf:	nop
   140001be0:	lea    r11,[rsp+0x70]
   140001be5:	mov    rbx,QWORD PTR [r11+0x18]
   140001be9:	mov    rsi,QWORD PTR [r11+0x20]
   140001bed:	mov    rsp,r11
   140001bf0:	pop    rdi
   140001bf1:	ret    
   140001bf2:	int3   
   140001bf3:	int3   
   140001bf4:	int3   
   140001bf5:	int3   
   140001bf6:	int3   
   140001bf7:	int3   
   140001bf8:	int3   
   140001bf9:	int3   
   140001bfa:	int3   
   140001bfb:	int3   
   140001bfc:	int3   
   140001bfd:	int3   
   140001bfe:	int3   
   140001bff:	int3   
   140001c00:	mov    QWORD PTR [rsp+0x8],rcx
   140001c05:	push   rdi
   140001c06:	sub    rsp,0x30
   140001c0a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001c13:	mov    QWORD PTR [rsp+0x48],rbx
   140001c18:	mov    rbx,rdx
   140001c1b:	mov    rdi,rcx
   140001c1e:	call   QWORD PTR [rip+0x858c]        # 0x14000a1b0
   140001c24:	nop
   140001c25:	lea    rax,[rip+0x8bbc]        # 0x14000a7e8
   140001c2c:	mov    QWORD PTR [rdi],rax
   140001c2f:	lea    rcx,[rdi+0x18]
   140001c33:	mov    QWORD PTR [rcx+0x18],0xf
   140001c3b:	mov    QWORD PTR [rcx+0x10],0x0
   140001c43:	mov    BYTE PTR [rcx],0x0
   140001c46:	lea    rdx,[rbx+0x18]
   140001c4a:	or     r9,0xffffffffffffffff
   140001c4e:	xor    r8d,r8d
   140001c51:	call   0x1400029b0
   140001c56:	mov    eax,DWORD PTR [rbx+0x38]
   140001c59:	mov    DWORD PTR [rdi+0x38],eax
   140001c5c:	mov    rax,rdi
   140001c5f:	mov    rbx,QWORD PTR [rsp+0x48]
   140001c64:	add    rsp,0x30
   140001c68:	pop    rdi
   140001c69:	ret    
   140001c6a:	int3   
   140001c6b:	int3   
   140001c6c:	int3   
   140001c6d:	int3   
   140001c6e:	int3   
   140001c6f:	int3   
   140001c70:	lea    rax,[rip+0x8a81]        # 0x14000a6f8
   140001c77:	mov    QWORD PTR [rcx],rax
   140001c7a:	mov    rax,rcx
   140001c7d:	ret    
   140001c7e:	int3   
   140001c7f:	int3   
   140001c80:	lea    rax,[rip+0x8ac1]        # 0x14000a748
   140001c87:	mov    QWORD PTR [rcx],rax
   140001c8a:	mov    rax,rcx
   140001c8d:	ret    
   140001c8e:	int3   
   140001c8f:	int3   
   140001c90:	lea    rax,[rip+0x8b11]        # 0x14000a7a8
   140001c97:	mov    QWORD PTR [rcx],rax
   140001c9a:	mov    rax,rcx
   140001c9d:	ret    
   140001c9e:	int3   
   140001c9f:	int3   
   140001ca0:	lea    rax,[rip+0x8a19]        # 0x14000a6c0
   140001ca7:	mov    QWORD PTR [rcx],rax
   140001caa:	mov    rax,rcx
   140001cad:	ret    
   140001cae:	int3   
   140001caf:	int3   
   140001cb0:	mov    DWORD PTR [rcx],edx
   140001cb2:	mov    QWORD PTR [rcx+0x8],r8
   140001cb6:	mov    rax,rcx
   140001cb9:	ret    
   140001cba:	int3   
   140001cbb:	int3   
   140001cbc:	int3   
   140001cbd:	int3   
   140001cbe:	int3   
   140001cbf:	int3   
   140001cc0:	rex push rbx
   140001cc2:	sub    rsp,0x20
   140001cc6:	cmp    QWORD PTR [rcx+0x18],0x10
   140001ccb:	mov    rbx,rcx
   140001cce:	jb     0x140001cd8
   140001cd0:	mov    rcx,QWORD PTR [rcx]
   140001cd3:	call   0x140008880
   140001cd8:	mov    QWORD PTR [rbx+0x18],0xf
   140001ce0:	mov    QWORD PTR [rbx+0x10],0x0
   140001ce8:	mov    BYTE PTR [rbx],0x0
   140001ceb:	add    rsp,0x20
   140001cef:	pop    rbx
   140001cf0:	ret    
   140001cf1:	int3   
   140001cf2:	int3   
   140001cf3:	int3   
   140001cf4:	int3   
   140001cf5:	int3   
   140001cf6:	int3   
   140001cf7:	int3   
   140001cf8:	int3   
   140001cf9:	int3   
   140001cfa:	int3   
   140001cfb:	int3   
   140001cfc:	int3   
   140001cfd:	int3   
   140001cfe:	int3   
   140001cff:	int3   
   140001d00:	jmp    0x140002580
   140001d05:	int3   
   140001d06:	int3   
   140001d07:	int3   
   140001d08:	int3   
   140001d09:	int3   
   140001d0a:	int3   
   140001d0b:	int3   
   140001d0c:	int3   
   140001d0d:	int3   
   140001d0e:	int3   
   140001d0f:	int3   
   140001d10:	rex push rbx
   140001d12:	sub    rsp,0x20
   140001d16:	mov    rbx,rcx
   140001d19:	add    rcx,0x60
   140001d1d:	call   0x140002580
   140001d22:	cmp    QWORD PTR [rbx+0x58],0x10
   140001d27:	jb     0x140001d32
   140001d29:	mov    rcx,QWORD PTR [rbx+0x40]
   140001d2d:	call   0x140008880
   140001d32:	mov    QWORD PTR [rbx+0x58],0xf
   140001d3a:	mov    QWORD PTR [rbx+0x50],0x0
   140001d42:	mov    BYTE PTR [rbx+0x40],0x0
   140001d46:	cmp    QWORD PTR [rbx+0x38],0x10
   140001d4b:	jb     0x140001d56
   140001d4d:	mov    rcx,QWORD PTR [rbx+0x20]
   140001d51:	call   0x140008880
   140001d56:	mov    QWORD PTR [rbx+0x38],0xf
   140001d5e:	mov    QWORD PTR [rbx+0x30],0x0
   140001d66:	mov    BYTE PTR [rbx+0x20],0x0
   140001d6a:	cmp    QWORD PTR [rbx+0x18],0x10
   140001d6f:	jb     0x140001d79
   140001d71:	mov    rcx,QWORD PTR [rbx]
   140001d74:	call   0x140008880
   140001d79:	mov    QWORD PTR [rbx+0x18],0xf
   140001d81:	mov    QWORD PTR [rbx+0x10],0x0
   140001d89:	mov    BYTE PTR [rbx],0x0
   140001d8c:	add    rsp,0x20
   140001d90:	pop    rbx
   140001d91:	ret    
   140001d92:	int3   
   140001d93:	int3   
   140001d94:	int3   
   140001d95:	int3   
   140001d96:	int3   
   140001d97:	int3   
   140001d98:	int3   
   140001d99:	int3   
   140001d9a:	int3   
   140001d9b:	int3   
   140001d9c:	int3   
   140001d9d:	int3   
   140001d9e:	int3   
   140001d9f:	int3   
   140001da0:	lea    rax,[rip+0x8919]        # 0x14000a6c0
   140001da7:	mov    QWORD PTR [rcx],rax
   140001daa:	ret    
   140001dab:	int3   
   140001dac:	int3   
   140001dad:	int3   
   140001dae:	int3   
   140001daf:	int3   
   140001db0:	lea    rax,[rip+0x8909]        # 0x14000a6c0
   140001db7:	mov    QWORD PTR [rcx],rax
   140001dba:	ret    
   140001dbb:	int3   
   140001dbc:	int3   
   140001dbd:	int3   
   140001dbe:	int3   
   140001dbf:	int3   
   140001dc0:	lea    rax,[rip+0x88f9]        # 0x14000a6c0
   140001dc7:	mov    QWORD PTR [rcx],rax
   140001dca:	ret    
   140001dcb:	int3   
   140001dcc:	int3   
   140001dcd:	int3   
   140001dce:	int3   
   140001dcf:	int3   
   140001dd0:	lea    rax,[rip+0x88e9]        # 0x14000a6c0
   140001dd7:	mov    QWORD PTR [rcx],rax
   140001dda:	ret    
   140001ddb:	int3   
   140001ddc:	int3   
   140001ddd:	int3   
   140001dde:	int3   
   140001ddf:	int3   
   140001de0:	mov    rax,rdx
   140001de3:	ret    
   140001de4:	int3   
   140001de5:	int3   
   140001de6:	int3   
   140001de7:	int3   
   140001de8:	int3   
   140001de9:	int3   
   140001dea:	int3   
   140001deb:	int3   
   140001dec:	int3   
   140001ded:	int3   
   140001dee:	int3   
   140001def:	int3   
   140001df0:	ret    0x0
   140001df3:	int3   
   140001df4:	int3   
   140001df5:	int3   
   140001df6:	int3   
   140001df7:	int3   
   140001df8:	int3   
   140001df9:	int3   
   140001dfa:	int3   
   140001dfb:	int3   
   140001dfc:	int3   
   140001dfd:	int3   
   140001dfe:	int3   
   140001dff:	int3   
   140001e00:	rex push rbx
   140001e02:	sub    rsp,0x20
   140001e06:	mov    rbx,rcx
   140001e09:	cmp    rcx,rdx
   140001e0c:	je     0x140001e1a
   140001e0e:	or     r9,0xffffffffffffffff
   140001e12:	xor    r8d,r8d
   140001e15:	call   0x1400029b0
   140001e1a:	mov    rax,rbx
   140001e1d:	add    rsp,0x20
   140001e21:	pop    rbx
   140001e22:	ret    
   140001e23:	int3   
   140001e24:	int3   
   140001e25:	int3   
   140001e26:	int3   
   140001e27:	int3   
   140001e28:	int3   
   140001e29:	int3   
   140001e2a:	int3   
   140001e2b:	int3   
   140001e2c:	int3   
   140001e2d:	int3   
   140001e2e:	int3   
   140001e2f:	int3   
   140001e30:	cmp    rcx,rdx
   140001e33:	sete   al
   140001e36:	ret    
   140001e37:	int3   
   140001e38:	int3   
   140001e39:	int3   
   140001e3a:	int3   
   140001e3b:	int3   
   140001e3c:	int3   
   140001e3d:	int3   
   140001e3e:	int3   
   140001e3f:	int3   
   140001e40:	mov    rax,QWORD PTR [rdx+0x8]
   140001e44:	cmp    QWORD PTR [rcx+0x8],rax
   140001e48:	jne    0x140001e53
   140001e4a:	mov    eax,DWORD PTR [rdx]
   140001e4c:	cmp    DWORD PTR [rcx],eax
   140001e4e:	jne    0x140001e53
   140001e50:	mov    al,0x1
   140001e52:	ret    
   140001e53:	xor    al,al
   140001e55:	ret    
   140001e56:	int3   
   140001e57:	int3   
   140001e58:	int3   
   140001e59:	int3   
   140001e5a:	int3   
   140001e5b:	int3   
   140001e5c:	int3   
   140001e5d:	int3   
   140001e5e:	int3   
   140001e5f:	int3   
   140001e60:	mov    QWORD PTR [rsp+0x8],rbx
   140001e65:	push   rdi
   140001e66:	sub    rsp,0x20
   140001e6a:	cmp    QWORD PTR [rcx+0x18],0x10
   140001e6f:	mov    edi,edx
   140001e71:	mov    rbx,rcx
   140001e74:	jb     0x140001e7e
   140001e76:	mov    rcx,QWORD PTR [rcx]
   140001e79:	call   0x140008880
   140001e7e:	mov    QWORD PTR [rbx+0x18],0xf
   140001e86:	mov    QWORD PTR [rbx+0x10],0x0
   140001e8e:	mov    BYTE PTR [rbx],0x0
   140001e91:	test   dil,0x1
   140001e95:	je     0x140001e9f
   140001e97:	mov    rcx,rbx
   140001e9a:	call   0x140008880
   140001e9f:	mov    rax,rbx
   140001ea2:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ea7:	add    rsp,0x20
   140001eab:	pop    rdi
   140001eac:	ret    
   140001ead:	int3   
   140001eae:	int3   
   140001eaf:	int3   
   140001eb0:	mov    QWORD PTR [rsp+0x8],rbx
   140001eb5:	push   rdi
   140001eb6:	sub    rsp,0x20
   140001eba:	mov    ebx,edx
   140001ebc:	mov    rdi,rcx
   140001ebf:	call   0x140003450
   140001ec4:	test   bl,0x1
   140001ec7:	je     0x140001ed1
   140001ec9:	mov    rcx,rdi
   140001ecc:	call   0x140008880
   140001ed1:	mov    rax,rdi
   140001ed4:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ed9:	add    rsp,0x20
   140001edd:	pop    rdi
   140001ede:	ret    
   140001edf:	int3   
   140001ee0:	rex push rbx
   140001ee2:	sub    rsp,0x20
   140001ee6:	lea    rax,[rip+0x87d3]        # 0x14000a6c0
   140001eed:	mov    rbx,rcx
   140001ef0:	mov    QWORD PTR [rcx],rax
   140001ef3:	test   dl,0x1
   140001ef6:	je     0x140001efd
   140001ef8:	call   0x140008880
   140001efd:	mov    rax,rbx
   140001f00:	add    rsp,0x20
   140001f04:	pop    rbx
   140001f05:	ret    
   140001f06:	int3   
   140001f07:	int3   
   140001f08:	int3   
   140001f09:	int3   
   140001f0a:	int3   
   140001f0b:	int3   
   140001f0c:	int3   
   140001f0d:	int3   
   140001f0e:	int3   
   140001f0f:	int3   
   140001f10:	rex push rbx
   140001f12:	sub    rsp,0x20
   140001f16:	lea    rax,[rip+0x87a3]        # 0x14000a6c0
   140001f1d:	mov    rbx,rcx
   140001f20:	mov    QWORD PTR [rcx],rax
   140001f23:	test   dl,0x1
   140001f26:	je     0x140001f2d
   140001f28:	call   0x140008880
   140001f2d:	mov    rax,rbx
   140001f30:	add    rsp,0x20
   140001f34:	pop    rbx
   140001f35:	ret    
   140001f36:	int3   
   140001f37:	int3   
   140001f38:	int3   
   140001f39:	int3   
   140001f3a:	int3   
   140001f3b:	int3   
   140001f3c:	int3   
   140001f3d:	int3   
   140001f3e:	int3   
   140001f3f:	int3   
   140001f40:	rex push rbx
   140001f42:	sub    rsp,0x20
   140001f46:	lea    rax,[rip+0x8773]        # 0x14000a6c0
   140001f4d:	mov    rbx,rcx
   140001f50:	mov    QWORD PTR [rcx],rax
   140001f53:	test   dl,0x1
   140001f56:	je     0x140001f5d
   140001f58:	call   0x140008880
   140001f5d:	mov    rax,rbx
   140001f60:	add    rsp,0x20
   140001f64:	pop    rbx
   140001f65:	ret    
   140001f66:	int3   
   140001f67:	int3   
   140001f68:	int3   
   140001f69:	int3   
   140001f6a:	int3   
   140001f6b:	int3   
   140001f6c:	int3   
   140001f6d:	int3   
   140001f6e:	int3   
   140001f6f:	int3   
   140001f70:	rex push rbx
   140001f72:	sub    rsp,0x20
   140001f76:	lea    rax,[rip+0x8743]        # 0x14000a6c0
   140001f7d:	mov    rbx,rcx
   140001f80:	mov    QWORD PTR [rcx],rax
   140001f83:	test   dl,0x1
   140001f86:	je     0x140001f8d
   140001f88:	call   0x140008880
   140001f8d:	mov    rax,rbx
   140001f90:	add    rsp,0x20
   140001f94:	pop    rbx
   140001f95:	ret    
   140001f96:	int3   
   140001f97:	int3   
   140001f98:	int3   
   140001f99:	int3   
   140001f9a:	int3   
   140001f9b:	int3   
   140001f9c:	int3   
   140001f9d:	int3   
   140001f9e:	int3   
   140001f9f:	int3   
   140001fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140001fa5:	push   rdi
   140001fa6:	sub    rsp,0x20
   140001faa:	cmp    QWORD PTR [rdx+0x18],0x10
   140001faf:	mov    rbx,rdx
   140001fb2:	mov    rdi,rcx
   140001fb5:	jae    0x140001fc8
   140001fb7:	mov    r8,QWORD PTR [rdx+0x10]
   140001fbb:	inc    r8
   140001fbe:	je     0x140001fda
   140001fc0:	call   QWORD PTR [rip+0x81da]        # 0x14000a1a0
   140001fc6:	jmp    0x140001fda
   140001fc8:	test   rcx,rcx
   140001fcb:	je     0x140001fd3
   140001fcd:	mov    rax,QWORD PTR [rdx]
   140001fd0:	mov    QWORD PTR [rcx],rax
   140001fd3:	mov    QWORD PTR [rdx],0x0
   140001fda:	mov    rax,QWORD PTR [rbx+0x10]
   140001fde:	mov    QWORD PTR [rdi+0x10],rax
   140001fe2:	mov    rax,QWORD PTR [rbx+0x18]
   140001fe6:	mov    QWORD PTR [rdi+0x18],rax
   140001fea:	mov    QWORD PTR [rbx+0x18],0xf
   140001ff2:	mov    QWORD PTR [rbx+0x10],0x0
   140001ffa:	mov    BYTE PTR [rbx],0x0
   140001ffd:	mov    rbx,QWORD PTR [rsp+0x30]
   140002002:	add    rsp,0x20
   140002006:	pop    rdi
   140002007:	ret    
   140002008:	int3   
   140002009:	int3   
   14000200a:	int3   
   14000200b:	int3   
   14000200c:	int3   
   14000200d:	int3   
   14000200e:	int3   
   14000200f:	int3   
   140002010:	ret    0x0
   140002013:	int3   
   140002014:	int3   
   140002015:	int3   
   140002016:	int3   
   140002017:	int3   
   140002018:	int3   
   140002019:	int3   
   14000201a:	int3   
   14000201b:	int3   
   14000201c:	int3   
   14000201d:	int3   
   14000201e:	int3   
   14000201f:	int3   
   140002020:	mov    QWORD PTR [rsp+0x18],r8
   140002025:	mov    QWORD PTR [rsp+0x10],rdx
   14000202a:	mov    QWORD PTR [rsp+0x8],rcx
   14000202f:	push   rbx
   140002030:	push   rsi
   140002031:	push   rdi
   140002032:	push   r14
   140002034:	sub    rsp,0x38
   140002038:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002041:	mov    rsi,r8
   140002044:	mov    rbx,rcx
   140002047:	mov    rdi,rdx
   14000204a:	or     rdi,0xf
   14000204e:	cmp    rdi,0xfffffffffffffffe
   140002052:	jbe    0x140002059
   140002054:	mov    rdi,rdx
   140002057:	jmp    0x14000208e
   140002059:	mov    r8,QWORD PTR [rcx+0x18]
   14000205d:	mov    rcx,r8
   140002060:	shr    rcx,1
   140002063:	movabs rax,0xaaaaaaaaaaaaaaab
   14000206d:	mul    rdi
   140002070:	shr    rdx,1
   140002073:	cmp    rcx,rdx
   140002076:	jbe    0x14000208e
   140002078:	mov    rdi,0xfffffffffffffffe
   14000207f:	mov    rax,rdi
   140002082:	sub    rax,rcx
   140002085:	cmp    r8,rax
   140002088:	ja     0x14000208e
   14000208a:	lea    rdi,[rcx+r8*1]
   14000208e:	lea    rcx,[rdi+0x1]
   140002092:	xor    r14d,r14d
   140002095:	test   rcx,rcx
   140002098:	je     0x1400020b4
   14000209a:	cmp    rcx,0xffffffffffffffff
   14000209e:	ja     0x1400020ad
   1400020a0:	call   0x14000887a
   1400020a5:	mov    r14,rax
   1400020a8:	test   rax,rax
   1400020ab:	jne    0x1400020b4
   1400020ad:	call   QWORD PTR [rip+0x80cd]        # 0x14000a180
   1400020b3:	nop
   1400020b4:	jmp    0x1400020ca
   1400020b6:	mov    rbx,QWORD PTR [rsp+0x60]
   1400020bb:	mov    rsi,QWORD PTR [rsp+0x70]
   1400020c0:	mov    rdi,QWORD PTR [rsp+0x68]
   1400020c5:	mov    r14,QWORD PTR [rsp+0x78]
   1400020ca:	test   rsi,rsi
   1400020cd:	je     0x1400020ee
   1400020cf:	cmp    QWORD PTR [rbx+0x18],0x10
   1400020d4:	jb     0x1400020db
   1400020d6:	mov    rdx,QWORD PTR [rbx]
   1400020d9:	jmp    0x1400020de
   1400020db:	mov    rdx,rbx
   1400020de:	test   rsi,rsi
   1400020e1:	je     0x1400020ee
   1400020e3:	mov    r8,rsi
   1400020e6:	mov    rcx,r14
   1400020e9:	call   0x1400089c4
   1400020ee:	cmp    QWORD PTR [rbx+0x18],0x10
   1400020f3:	jb     0x1400020fd
   1400020f5:	mov    rcx,QWORD PTR [rbx]
   1400020f8:	call   0x140008880
   1400020fd:	mov    BYTE PTR [rbx],0x0
   140002100:	mov    QWORD PTR [rbx],r14
   140002103:	mov    QWORD PTR [rbx+0x18],rdi
   140002107:	mov    QWORD PTR [rbx+0x10],rsi
   14000210b:	cmp    rdi,0x10
   14000210f:	jb     0x140002114
   140002111:	mov    rbx,r14
   140002114:	mov    BYTE PTR [rbx+rsi*1],0x0
   140002118:	add    rsp,0x38
   14000211c:	pop    r14
   14000211e:	pop    rdi
   14000211f:	pop    rsi
   140002120:	pop    rbx
   140002121:	ret    
   140002122:	int3   
   140002123:	int3   
   140002124:	int3   
   140002125:	int3   
   140002126:	int3   
   140002127:	int3   
   140002128:	int3   
   140002129:	int3   
   14000212a:	int3   
   14000212b:	int3   
   14000212c:	int3   
   14000212d:	int3   
   14000212e:	int3   
   14000212f:	int3   
   140002130:	cmp    rdx,r8
   140002133:	je     0x140002186
   140002135:	mov    QWORD PTR [rsp+0x10],rbx
   14000213a:	push   rdi
   14000213b:	sub    rsp,0x20
   14000213f:	mov    QWORD PTR [rsp+0x30],rsi
   140002144:	mov    rdi,r8
   140002147:	mov    rbx,rdx
   14000214a:	xor    esi,esi
   14000214c:	nop    DWORD PTR [rax+0x0]
   140002150:	cmp    QWORD PTR [rbx+0x18],0x10
   140002155:	jb     0x14000215f
   140002157:	mov    rcx,QWORD PTR [rbx]
   14000215a:	call   0x140008880
   14000215f:	mov    QWORD PTR [rbx+0x18],0xf
   140002167:	mov    QWORD PTR [rbx+0x10],rsi
   14000216b:	mov    BYTE PTR [rbx],sil
   14000216e:	add    rbx,0x20
   140002172:	cmp    rbx,rdi
   140002175:	jne    0x140002150
   140002177:	mov    rsi,QWORD PTR [rsp+0x30]
   14000217c:	mov    rbx,QWORD PTR [rsp+0x38]
   140002181:	add    rsp,0x20
   140002185:	pop    rdi
   140002186:	ret    
   140002187:	int3   
   140002188:	int3   
   140002189:	int3   
   14000218a:	int3   
   14000218b:	int3   
   14000218c:	int3   
   14000218d:	int3   
   14000218e:	int3   
   14000218f:	int3   
   140002190:	cmp    QWORD PTR [rcx+0x18],0x10
   140002195:	mov    QWORD PTR [rcx+0x10],rdx
   140002199:	jb     0x1400021a3
   14000219b:	mov    rax,QWORD PTR [rcx]
   14000219e:	mov    BYTE PTR [rax+rdx*1],0x0
   1400021a2:	ret    
   1400021a3:	mov    BYTE PTR [rcx+rdx*1],0x0
   1400021a7:	ret    
   1400021a8:	int3   
   1400021a9:	int3   
   1400021aa:	int3   
   1400021ab:	int3   
   1400021ac:	int3   
   1400021ad:	int3   
   1400021ae:	int3   
   1400021af:	int3   
   1400021b0:	mov    rax,rdx
   1400021b3:	ret    
   1400021b4:	int3   
   1400021b5:	int3   
   1400021b6:	int3   
   1400021b7:	int3   
   1400021b8:	int3   
   1400021b9:	int3   
   1400021ba:	int3   
   1400021bb:	int3   
   1400021bc:	int3   
   1400021bd:	int3   
   1400021be:	int3   
   1400021bf:	int3   
   1400021c0:	mov    rax,rdx
   1400021c3:	ret    
   1400021c4:	int3   
   1400021c5:	int3   
   1400021c6:	int3   
   1400021c7:	int3   
   1400021c8:	int3   
   1400021c9:	int3   
   1400021ca:	int3   
   1400021cb:	int3   
   1400021cc:	int3   
   1400021cd:	int3   
   1400021ce:	int3   
   1400021cf:	int3   
   1400021d0:	mov    QWORD PTR [rsp+0x20],rbx
   1400021d5:	push   rdi
   1400021d6:	sub    rsp,0x20
   1400021da:	mov    rdi,rdx
   1400021dd:	mov    rbx,rcx
   1400021e0:	cmp    rdx,0xfffffffffffffffe
   1400021e4:	jbe    0x1400021f4
   1400021e6:	lea    rcx,[rip+0x8653]        # 0x14000a840
   1400021ed:	call   QWORD PTR [rip+0x7f95]        # 0x14000a188
   1400021f3:	int3   
   1400021f4:	mov    rax,QWORD PTR [rcx+0x18]
   1400021f8:	mov    QWORD PTR [rsp+0x30],rbp
   1400021fd:	xor    ebp,ebp
   1400021ff:	cmp    rax,rdx
   140002202:	jae    0x14000220f
   140002204:	mov    r8,QWORD PTR [rcx+0x10]
   140002208:	call   0x140002020
   14000220d:	jmp    0x140002281
   14000220f:	test   r8b,r8b
   140002212:	je     0x14000226c
   140002214:	cmp    rdx,0x10
   140002218:	jae    0x14000226c
   14000221a:	mov    QWORD PTR [rsp+0x38],rsi
   14000221f:	mov    rsi,QWORD PTR [rcx+0x10]
   140002223:	cmp    rdx,rsi
   140002226:	cmovb  rsi,rdx
   14000222a:	cmp    rax,0x10
   14000222e:	jb     0x140002255
   140002230:	mov    QWORD PTR [rsp+0x40],r14
   140002235:	mov    r14,QWORD PTR [rcx]
   140002238:	test   rsi,rsi
   14000223b:	je     0x140002248
   14000223d:	mov    r8,rsi
   140002240:	mov    rdx,r14
   140002243:	call   0x1400089c4
   140002248:	mov    rcx,r14
   14000224b:	call   0x140008880
   140002250:	mov    r14,QWORD PTR [rsp+0x40]
   140002255:	mov    QWORD PTR [rbx+0x10],rsi
   140002259:	mov    QWORD PTR [rbx+0x18],0xf
   140002261:	mov    BYTE PTR [rsi+rbx*1],bpl
   140002265:	mov    rsi,QWORD PTR [rsp+0x38]
   14000226a:	jmp    0x140002281
   14000226c:	test   rdx,rdx
   14000226f:	jne    0x140002281
   140002271:	mov    QWORD PTR [rcx+0x10],rbp
   140002275:	cmp    rax,0x10
   140002279:	jb     0x14000227e
   14000227b:	mov    rbx,QWORD PTR [rcx]
   14000227e:	mov    BYTE PTR [rbx],bpl
   140002281:	mov    rbp,QWORD PTR [rsp+0x30]
   140002286:	mov    rbx,QWORD PTR [rsp+0x48]
   14000228b:	test   rdi,rdi
   14000228e:	setne  al
   140002291:	add    rsp,0x20
   140002295:	pop    rdi
   140002296:	ret    
   140002297:	int3   
   140002298:	int3   
   140002299:	int3   
   14000229a:	int3   
   14000229b:	int3   
   14000229c:	int3   
   14000229d:	int3   
   14000229e:	int3   
   14000229f:	int3   
   1400022a0:	mov    r8,QWORD PTR [rcx+0x10]
   1400022a4:	movabs rax,0x7ffffffffffffff
   1400022ae:	sub    r8,QWORD PTR [rcx]
   1400022b1:	sar    r8,0x5
   1400022b5:	mov    rcx,r8
   1400022b8:	shr    rcx,1
   1400022bb:	sub    rax,rcx
   1400022be:	cmp    rax,r8
   1400022c1:	jae    0x1400022d1
   1400022c3:	xor    r8d,r8d
   1400022c6:	cmp    r8,rdx
   1400022c9:	cmovb  r8,rdx
   1400022cd:	mov    rax,r8
   1400022d0:	ret    
   1400022d1:	add    r8,rcx
   1400022d4:	cmp    r8,rdx
   1400022d7:	cmovb  r8,rdx
   1400022db:	mov    rax,r8
   1400022de:	ret    
   1400022df:	int3   
   1400022e0:	test   rdx,rdx
   1400022e3:	je     0x14000231a
   1400022e5:	mov    rax,QWORD PTR [rcx+0x18]
   1400022e9:	cmp    rax,0x10
   1400022ed:	jb     0x1400022f4
   1400022ef:	mov    r8,QWORD PTR [rcx]
   1400022f2:	jmp    0x1400022f7
   1400022f4:	mov    r8,rcx
   1400022f7:	cmp    rdx,r8
   1400022fa:	jb     0x14000231a
   1400022fc:	cmp    rax,0x10
   140002300:	jb     0x140002307
   140002302:	mov    r8,QWORD PTR [rcx]
   140002305:	jmp    0x14000230a
   140002307:	mov    r8,rcx
   14000230a:	mov    rax,QWORD PTR [rcx+0x10]
   14000230e:	lea    rcx,[r8+rax*1]
   140002312:	cmp    rcx,rdx
   140002315:	jbe    0x14000231a
   140002317:	mov    al,0x1
   140002319:	ret    
   14000231a:	xor    al,al
   14000231c:	ret    
   14000231d:	int3   
   14000231e:	int3   
   14000231f:	int3   
   140002320:	cmp    rdx,QWORD PTR [rcx+0x8]
   140002324:	jae    0x14000232e
   140002326:	cmp    QWORD PTR [rcx],rdx
   140002329:	ja     0x14000232e
   14000232b:	mov    al,0x1
   14000232d:	ret    
   14000232e:	xor    al,al
   140002330:	ret    
   140002331:	int3   
   140002332:	int3   
   140002333:	int3   
   140002334:	int3   
   140002335:	int3   
   140002336:	int3   
   140002337:	int3   
   140002338:	int3   
   140002339:	int3   
   14000233a:	int3   
   14000233b:	int3   
   14000233c:	int3   
   14000233d:	int3   
   14000233e:	int3   
   14000233f:	int3   
   140002340:	cmp    QWORD PTR [rcx+0x18],0x10
   140002345:	jb     0x14000234b
   140002347:	mov    rax,QWORD PTR [rcx]
   14000234a:	ret    
   14000234b:	mov    rax,rcx
   14000234e:	ret    
   14000234f:	int3   
   140002350:	cmp    QWORD PTR [rcx+0x18],0x10
   140002355:	jb     0x14000235b
   140002357:	mov    rax,QWORD PTR [rcx]
   14000235a:	ret    
   14000235b:	mov    rax,rcx
   14000235e:	ret    
   14000235f:	int3   
   140002360:	ret    0x0
   140002363:	int3   
   140002364:	int3   
   140002365:	int3   
   140002366:	int3   
   140002367:	int3   
   140002368:	int3   
   140002369:	int3   
   14000236a:	int3   
   14000236b:	int3   
   14000236c:	int3   
   14000236d:	int3   
   14000236e:	int3   
   14000236f:	int3   
   140002370:	rex push rdi
   140002372:	push   r12
   140002374:	push   r13
   140002376:	push   r14
   140002378:	push   r15
   14000237a:	sub    rsp,0x40
   14000237e:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140002387:	mov    QWORD PTR [rsp+0x70],rbx
   14000238c:	mov    QWORD PTR [rsp+0x88],rsi
   140002394:	mov    rdi,rdx
   140002397:	mov    r15,rcx
   14000239a:	xor    r13d,r13d
   14000239d:	mov    esi,r13d
   1400023a0:	mov    QWORD PTR [rsp+0x80],r13
   1400023a8:	test   rdx,rdx
   1400023ab:	je     0x1400023df
   1400023ad:	movabs rax,0x7ffffffffffffff
   1400023b7:	cmp    rdx,rax
   1400023ba:	ja     0x1400023d8
   1400023bc:	mov    rcx,rdx
   1400023bf:	shl    rcx,0x5
   1400023c3:	call   0x14000887a
   1400023c8:	mov    rsi,rax
   1400023cb:	mov    QWORD PTR [rsp+0x80],rax
   1400023d3:	test   rax,rax
   1400023d6:	jne    0x1400023df
   1400023d8:	call   QWORD PTR [rip+0x7da2]        # 0x14000a180
   1400023de:	nop
   1400023df:	movzx  eax,BYTE PTR [rsp+0x78]
   1400023e4:	mov    BYTE PTR [rsp+0x28],al
   1400023e8:	mov    QWORD PTR [rsp+0x20],r13
   1400023ed:	lea    r9,[rsp+0x78]
   1400023f2:	mov    r8,rsi
   1400023f5:	mov    rdx,QWORD PTR [r15+0x8]
   1400023f9:	mov    rcx,QWORD PTR [r15]
   1400023fc:	call   0x1400012f0
   140002401:	nop
   140002402:	mov    r12,QWORD PTR [r15+0x8]
   140002406:	mov    rbx,QWORD PTR [r15]
   140002409:	mov    r14,r12
   14000240c:	sub    r14,rbx
   14000240f:	test   rbx,rbx
   140002412:	je     0x14000244f
   140002414:	cmp    rbx,r12
   140002417:	je     0x140002447
   140002419:	nop    DWORD PTR [rax+0x0]
   140002420:	cmp    QWORD PTR [rbx+0x18],0x10
   140002425:	jb     0x14000242f
   140002427:	mov    rcx,QWORD PTR [rbx]
   14000242a:	call   0x140008880
   14000242f:	mov    QWORD PTR [rbx+0x18],0xf
   140002437:	mov    QWORD PTR [rbx+0x10],r13
   14000243b:	mov    BYTE PTR [rbx],0x0
   14000243e:	add    rbx,0x20
   140002442:	cmp    rbx,r12
   140002445:	jne    0x140002420
   140002447:	mov    rcx,QWORD PTR [r15]
   14000244a:	call   0x140008880
   14000244f:	shl    rdi,0x5
   140002453:	add    rdi,rsi
   140002456:	mov    QWORD PTR [r15+0x10],rdi
   14000245a:	and    r14,0xffffffffffffffe0
   14000245e:	add    r14,rsi
   140002461:	mov    QWORD PTR [r15+0x8],r14
   140002465:	mov    QWORD PTR [r15],rsi
   140002468:	mov    rbx,QWORD PTR [rsp+0x70]
   14000246d:	mov    rsi,QWORD PTR [rsp+0x88]
   140002475:	add    rsp,0x40
   140002479:	pop    r15
   14000247b:	pop    r14
   14000247d:	pop    r13
   14000247f:	pop    r12
   140002481:	pop    rdi
   140002482:	ret    
   140002483:	int3   
   140002484:	int3   
   140002485:	int3   
   140002486:	int3   
   140002487:	int3   
   140002488:	int3   
   140002489:	int3   
   14000248a:	int3   
   14000248b:	int3   
   14000248c:	int3   
   14000248d:	int3   
   14000248e:	int3   
   14000248f:	int3   
   140002490:	sub    rsp,0x28
   140002494:	mov    r8,QWORD PTR [rcx+0x8]
   140002498:	mov    r9,rdx
   14000249b:	mov    rdx,QWORD PTR [rcx+0x10]
   14000249f:	mov    rax,rdx
   1400024a2:	sub    rax,r8
   1400024a5:	sar    rax,0x5
   1400024a9:	cmp    rax,r9
   1400024ac:	jae    0x140002516
   1400024ae:	sub    r8,QWORD PTR [rcx]
   1400024b1:	movabs r10,0x7ffffffffffffff
   1400024bb:	sar    r8,0x5
   1400024bf:	mov    rax,r10
   1400024c2:	sub    rax,r8
   1400024c5:	cmp    rax,r9
   1400024c8:	jae    0x1400024d8
   1400024ca:	lea    rcx,[rip+0x8397]        # 0x14000a868
   1400024d1:	call   QWORD PTR [rip+0x7cb1]        # 0x14000a188
   1400024d7:	int3   
   1400024d8:	sub    rdx,QWORD PTR [rcx]
   1400024db:	lea    r11,[r8+r9*1]
   1400024df:	sar    rdx,0x5
   1400024e3:	mov    rax,rdx
   1400024e6:	shr    rax,1
   1400024e9:	sub    r10,rax
   1400024ec:	cmp    r10,rdx
   1400024ef:	jae    0x140002503
   1400024f1:	xor    edx,edx
   1400024f3:	cmp    rdx,r11
   1400024f6:	cmovb  rdx,r11
   1400024fa:	add    rsp,0x28
   1400024fe:	jmp    0x140002370
   140002503:	add    rdx,rax
   140002506:	cmp    rdx,r11
   140002509:	cmovb  rdx,r11
   14000250d:	add    rsp,0x28
   140002511:	jmp    0x140002370
   140002516:	add    rsp,0x28
   14000251a:	ret    
   14000251b:	int3   
   14000251c:	int3   
   14000251d:	int3   
   14000251e:	int3   
   14000251f:	int3   
   140002520:	mov    QWORD PTR [rsp+0x10],rbx
   140002525:	push   rdi
   140002526:	sub    rsp,0x20
   14000252a:	mov    rdi,r8
   14000252d:	mov    rbx,rcx
   140002530:	test   dl,dl
   140002532:	je     0x14000255d
   140002534:	cmp    QWORD PTR [rcx+0x18],0x10
   140002539:	jb     0x14000255d
   14000253b:	mov    QWORD PTR [rsp+0x30],rsi
   140002540:	mov    rsi,QWORD PTR [rcx]
   140002543:	test   r8,r8
   140002546:	je     0x140002550
   140002548:	mov    rdx,rsi
   14000254b:	call   0x1400089c4
   140002550:	mov    rcx,rsi
   140002553:	call   0x140008880
   140002558:	mov    rsi,QWORD PTR [rsp+0x30]
   14000255d:	mov    QWORD PTR [rbx+0x18],0xf
   140002565:	mov    QWORD PTR [rbx+0x10],rdi
   140002569:	mov    BYTE PTR [rdi+rbx*1],0x0
   14000256d:	mov    rbx,QWORD PTR [rsp+0x38]
   140002572:	add    rsp,0x20
   140002576:	pop    rdi
   140002577:	ret    
   140002578:	int3   
   140002579:	int3   
   14000257a:	int3   
   14000257b:	int3   
   14000257c:	int3   
   14000257d:	int3   
   14000257e:	int3   
   14000257f:	int3   
   140002580:	mov    QWORD PTR [rsp+0x18],rbx
   140002585:	push   rdi
   140002586:	sub    rsp,0x20
   14000258a:	mov    rbx,QWORD PTR [rcx]
   14000258d:	mov    rdi,rcx
   140002590:	test   rbx,rbx
   140002593:	je     0x1400025f4
   140002595:	mov    QWORD PTR [rsp+0x30],rbp
   14000259a:	mov    QWORD PTR [rsp+0x38],rsi
   14000259f:	mov    rsi,QWORD PTR [rcx+0x8]
   1400025a3:	xor    ebp,ebp
   1400025a5:	cmp    rbx,rsi
   1400025a8:	je     0x1400025d7
   1400025aa:	nop    WORD PTR [rax+rax*1+0x0]
   1400025b0:	cmp    QWORD PTR [rbx+0x18],0x10
   1400025b5:	jb     0x1400025bf
   1400025b7:	mov    rcx,QWORD PTR [rbx]
   1400025ba:	call   0x140008880
   1400025bf:	mov    QWORD PTR [rbx+0x18],0xf
   1400025c7:	mov    QWORD PTR [rbx+0x10],rbp
   1400025cb:	mov    BYTE PTR [rbx],bpl
   1400025ce:	add    rbx,0x20
   1400025d2:	cmp    rbx,rsi
   1400025d5:	jne    0x1400025b0
   1400025d7:	mov    rcx,QWORD PTR [rdi]
   1400025da:	call   0x140008880
   1400025df:	mov    rsi,QWORD PTR [rsp+0x38]
   1400025e4:	mov    QWORD PTR [rdi],rbp
   1400025e7:	mov    QWORD PTR [rdi+0x8],rbp
   1400025eb:	mov    QWORD PTR [rdi+0x10],rbp
   1400025ef:	mov    rbp,QWORD PTR [rsp+0x30]
   1400025f4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400025f9:	add    rsp,0x20
   1400025fd:	pop    rdi
   1400025fe:	ret    
   1400025ff:	int3   
   140002600:	mov    rax,QWORD PTR [rcx+0x10]
   140002604:	sub    rax,QWORD PTR [rcx+0x8]
   140002608:	sar    rax,0x5
   14000260c:	ret    
   14000260d:	int3   
   14000260e:	int3   
   14000260f:	int3   
   140002610:	sub    rsp,0x28
   140002614:	lea    rcx,[rip+0x8225]        # 0x14000a840
   14000261b:	call   QWORD PTR [rip+0x7b67]        # 0x14000a188
   140002621:	int3   
   140002622:	int3   
   140002623:	int3   
   140002624:	int3   
   140002625:	int3   
   140002626:	int3   
   140002627:	int3   
   140002628:	int3   
   140002629:	int3   
   14000262a:	int3   
   14000262b:	int3   
   14000262c:	int3   
   14000262d:	int3   
   14000262e:	int3   
   14000262f:	int3   
   140002630:	sub    rsp,0x28
   140002634:	lea    rcx,[rip+0x822d]        # 0x14000a868
   14000263b:	call   QWORD PTR [rip+0x7b47]        # 0x14000a188
   140002641:	int3   
   140002642:	int3   
   140002643:	int3   
   140002644:	int3   
   140002645:	int3   
   140002646:	int3   
   140002647:	int3   
   140002648:	int3   
   140002649:	int3   
   14000264a:	int3   
   14000264b:	int3   
   14000264c:	int3   
   14000264d:	int3   
   14000264e:	int3   
   14000264f:	int3   
   140002650:	sub    rsp,0x28
   140002654:	lea    rcx,[rip+0x81f5]        # 0x14000a850
   14000265b:	call   QWORD PTR [rip+0x79ff]        # 0x14000a060
   140002661:	int3   
   140002662:	int3   
   140002663:	int3   
   140002664:	int3   
   140002665:	int3   
   140002666:	int3   
   140002667:	int3   
   140002668:	int3   
   140002669:	int3   
   14000266a:	int3   
   14000266b:	int3   
   14000266c:	int3   
   14000266d:	int3   
   14000266e:	int3   
   14000266f:	int3   
   140002670:	sub    rsp,0x28
   140002674:	lea    rcx,[rip+0x81a5]        # 0x14000a820
   14000267b:	call   QWORD PTR [rip+0x79df]        # 0x14000a060
   140002681:	int3   
   140002682:	int3   
   140002683:	int3   
   140002684:	int3   
   140002685:	int3   
   140002686:	int3   
   140002687:	int3   
   140002688:	int3   
   140002689:	int3   
   14000268a:	int3   
   14000268b:	int3   
   14000268c:	int3   
   14000268d:	int3   
   14000268e:	int3   
   14000268f:	int3   
   140002690:	sub    rsp,0x28
   140002694:	xor    eax,eax
   140002696:	test   rdx,rdx
   140002699:	je     0x1400026b5
   14000269b:	cmp    rdx,0xffffffffffffffff
   14000269f:	ja     0x1400026ae
   1400026a1:	mov    rcx,rdx
   1400026a4:	call   0x14000887a
   1400026a9:	test   rax,rax
   1400026ac:	jne    0x1400026b5
   1400026ae:	call   QWORD PTR [rip+0x7acc]        # 0x14000a180
   1400026b4:	int3   
   1400026b5:	add    rsp,0x28
   1400026b9:	ret    
   1400026ba:	int3   
   1400026bb:	int3   
   1400026bc:	int3   
   1400026bd:	int3   
   1400026be:	int3   
   1400026bf:	int3   
   1400026c0:	sub    rsp,0x28
   1400026c4:	xor    eax,eax
   1400026c6:	test   rdx,rdx
   1400026c9:	je     0x1400026f2
   1400026cb:	movabs rax,0x7ffffffffffffff
   1400026d5:	cmp    rdx,rax
   1400026d8:	ja     0x1400026eb
   1400026da:	shl    rdx,0x5
   1400026de:	mov    rcx,rdx
   1400026e1:	call   0x14000887a
   1400026e6:	test   rax,rax
   1400026e9:	jne    0x1400026f2
   1400026eb:	call   QWORD PTR [rip+0x7a8f]        # 0x14000a180
   1400026f1:	int3   
   1400026f2:	add    rsp,0x28
   1400026f6:	ret    
   1400026f7:	int3   
   1400026f8:	int3   
   1400026f9:	int3   
   1400026fa:	int3   
   1400026fb:	int3   
   1400026fc:	int3   
   1400026fd:	int3   
   1400026fe:	int3   
   1400026ff:	int3   
   140002700:	sub    rsp,0x28
   140002704:	xor    eax,eax
   140002706:	test   rdx,rdx
   140002709:	je     0x140002725
   14000270b:	cmp    rdx,0xffffffffffffffff
   14000270f:	ja     0x14000271e
   140002711:	mov    rcx,rdx
   140002714:	call   0x14000887a
   140002719:	test   rax,rax
   14000271c:	jne    0x140002725
   14000271e:	call   QWORD PTR [rip+0x7a5c]        # 0x14000a180
   140002724:	int3   
   140002725:	add    rsp,0x28
   140002729:	ret    
   14000272a:	int3   
   14000272b:	int3   
   14000272c:	int3   
   14000272d:	int3   
   14000272e:	int3   
   14000272f:	int3   
   140002730:	sub    rsp,0x28
   140002734:	xor    eax,eax
   140002736:	test   rdx,rdx
   140002739:	je     0x140002762
   14000273b:	movabs rax,0x7ffffffffffffff
   140002745:	cmp    rdx,rax
   140002748:	ja     0x14000275b
   14000274a:	shl    rdx,0x5
   14000274e:	mov    rcx,rdx
   140002751:	call   0x14000887a
   140002756:	test   rax,rax
   140002759:	jne    0x140002762
   14000275b:	call   QWORD PTR [rip+0x7a1f]        # 0x14000a180
   140002761:	int3   
   140002762:	add    rsp,0x28
   140002766:	ret    
   140002767:	int3   
   140002768:	int3   
   140002769:	int3   
   14000276a:	int3   
   14000276b:	int3   
   14000276c:	int3   
   14000276d:	int3   
   14000276e:	int3   
   14000276f:	int3   
   140002770:	mov    QWORD PTR [rsp+0x10],rbx
   140002775:	mov    QWORD PTR [rsp+0x18],rsi
   14000277a:	push   r14
   14000277c:	sub    rsp,0x20
   140002780:	mov    r9,QWORD PTR [rdx]
   140002783:	mov    r8,QWORD PTR [rdx+0x8]
   140002787:	mov    ebx,0x1
   14000278c:	sub    r8,r9
   14000278f:	mov    r14,rdx
   140002792:	mov    rsi,rcx
   140002795:	sar    r8,0x5
   140002799:	cmp    rbx,r8
   14000279c:	jae    0x14000293c
   1400027a2:	mov    QWORD PTR [rsp+0x30],rdi
   1400027a7:	lea    edi,[rbx+0x1f]
   1400027aa:	cmp    r8,rbx
   1400027ad:	jbe    0x140002985
   1400027b3:	mov    r10,QWORD PTR [rdi+r9*1+0x18]
   1400027b8:	lea    rcx,[rdi+r9*1]
   1400027bc:	cmp    r10,0x10
   1400027c0:	jb     0x1400027c7
   1400027c2:	mov    rdx,QWORD PTR [rcx]
   1400027c5:	jmp    0x1400027ca
   1400027c7:	mov    rdx,rcx
   1400027ca:	movzx  eax,BYTE PTR [rdx]
   1400027cd:	cmp    al,BYTE PTR [rip+0x8025]        # 0x14000a7f8
   1400027d3:	jne    0x14000281b
   1400027d5:	movzx  eax,BYTE PTR [rdx+0x1]
   1400027d9:	cmp    al,BYTE PTR [rip+0x801a]        # 0x14000a7f9
   1400027df:	jne    0x14000281b
   1400027e1:	movzx  eax,BYTE PTR [rdx+0x2]
   1400027e5:	cmp    al,BYTE PTR [rip+0x800f]        # 0x14000a7fa
   1400027eb:	jne    0x14000281b
   1400027ed:	inc    rbx
   1400027f0:	add    rdi,0x20
   1400027f4:	cmp    rbx,r8
   1400027f7:	jae    0x140002919
   1400027fd:	cmp    r8,rbx
   140002800:	jbe    0x14000294d
   140002806:	lea    rdx,[rdi+r9*1]
   14000280a:	cmp    rsi,rdx
   14000280d:	je     0x140002919
   140002813:	mov    rcx,rsi
   140002816:	jmp    0x14000290d
   14000281b:	cmp    r10,0x10
   14000281f:	jb     0x140002826
   140002821:	mov    rdx,QWORD PTR [rcx]
   140002824:	jmp    0x140002829
   140002826:	mov    rdx,rcx
   140002829:	movzx  eax,BYTE PTR [rdx]
   14000282c:	cmp    al,BYTE PTR [rip+0x7fca]        # 0x14000a7fc
   140002832:	jne    0x140002877
   140002834:	movzx  eax,BYTE PTR [rdx+0x1]
   140002838:	cmp    al,BYTE PTR [rip+0x7fbf]        # 0x14000a7fd
   14000283e:	jne    0x140002877
   140002840:	movzx  eax,BYTE PTR [rdx+0x2]
   140002844:	cmp    al,BYTE PTR [rip+0x7fb4]        # 0x14000a7fe
   14000284a:	jne    0x140002877
   14000284c:	inc    rbx
   14000284f:	add    rdi,0x20
   140002853:	cmp    rbx,r8
   140002856:	jae    0x140002919
   14000285c:	cmp    r8,rbx
   14000285f:	jbe    0x14000295b
   140002865:	lea    rdx,[rdi+r9*1]
   140002869:	lea    rcx,[rsi+0x60]
   14000286d:	call   0x1400031a0
   140002872:	jmp    0x140002919
   140002877:	cmp    r10,0x10
   14000287b:	jb     0x140002882
   14000287d:	mov    rdx,QWORD PTR [rcx]
   140002880:	jmp    0x140002885
   140002882:	mov    rdx,rcx
   140002885:	movzx  eax,BYTE PTR [rdx]
   140002888:	cmp    al,BYTE PTR [rip+0x7f72]        # 0x14000a800
   14000288e:	jne    0x1400028c3
   140002890:	movzx  eax,BYTE PTR [rdx+0x1]
   140002894:	cmp    al,BYTE PTR [rip+0x7f67]        # 0x14000a801
   14000289a:	jne    0x1400028c3
   14000289c:	movzx  eax,BYTE PTR [rdx+0x2]
   1400028a0:	cmp    al,BYTE PTR [rip+0x7f5c]        # 0x14000a802
   1400028a6:	jne    0x1400028c3
   1400028a8:	inc    rbx
   1400028ab:	add    rdi,0x20
   1400028af:	cmp    rbx,r8
   1400028b2:	jae    0x140002919
   1400028b4:	cmp    r8,rbx
   1400028b7:	jbe    0x140002969
   1400028bd:	lea    rcx,[rsi+0x20]
   1400028c1:	jmp    0x140002904
   1400028c3:	cmp    r10,0x10
   1400028c7:	jb     0x1400028cc
   1400028c9:	mov    rcx,QWORD PTR [rcx]
   1400028cc:	movzx  eax,BYTE PTR [rcx]
   1400028cf:	cmp    al,BYTE PTR [rip+0x7f2f]        # 0x14000a804
   1400028d5:	jne    0x140002919
   1400028d7:	movzx  eax,BYTE PTR [rcx+0x1]
   1400028db:	cmp    al,BYTE PTR [rip+0x7f24]        # 0x14000a805
   1400028e1:	jne    0x140002919
   1400028e3:	movzx  eax,BYTE PTR [rcx+0x2]
   1400028e7:	cmp    al,BYTE PTR [rip+0x7f19]        # 0x14000a806
   1400028ed:	jne    0x140002919
   1400028ef:	inc    rbx
   1400028f2:	add    rdi,0x20
   1400028f6:	cmp    rbx,r8
   1400028f9:	jae    0x140002919
   1400028fb:	cmp    r8,rbx
   1400028fe:	jbe    0x140002977
   140002900:	lea    rcx,[rsi+0x40]
   140002904:	lea    rdx,[rdi+r9*1]
   140002908:	cmp    rcx,rdx
   14000290b:	je     0x140002919
   14000290d:	or     r9,0xffffffffffffffff
   140002911:	xor    r8d,r8d
   140002914:	call   0x1400029b0
   140002919:	mov    r9,QWORD PTR [r14]
   14000291c:	mov    r8,QWORD PTR [r14+0x8]
   140002920:	inc    rbx
   140002923:	sub    r8,r9
   140002926:	add    rdi,0x20
   14000292a:	sar    r8,0x5
   14000292e:	cmp    r8,rbx
   140002931:	ja     0x1400027b3
   140002937:	mov    rdi,QWORD PTR [rsp+0x30]
   14000293c:	mov    rbx,QWORD PTR [rsp+0x38]
   140002941:	mov    rsi,QWORD PTR [rsp+0x40]
   140002946:	add    rsp,0x20
   14000294a:	pop    r14
   14000294c:	ret    
   14000294d:	lea    rcx,[rip+0x7ecc]        # 0x14000a820
   140002954:	call   QWORD PTR [rip+0x7706]        # 0x14000a060
   14000295a:	int3   
   14000295b:	lea    rcx,[rip+0x7ebe]        # 0x14000a820
   140002962:	call   QWORD PTR [rip+0x76f8]        # 0x14000a060
   140002968:	int3   
   140002969:	lea    rcx,[rip+0x7eb0]        # 0x14000a820
   140002970:	call   QWORD PTR [rip+0x76ea]        # 0x14000a060
   140002976:	int3   
   140002977:	lea    rcx,[rip+0x7ea2]        # 0x14000a820
   14000297e:	call   QWORD PTR [rip+0x76dc]        # 0x14000a060
   140002984:	int3   
   140002985:	lea    rcx,[rip+0x7e94]        # 0x14000a820
   14000298c:	call   QWORD PTR [rip+0x76ce]        # 0x14000a060
   140002992:	int3   
   140002993:	int3   
   140002994:	int3   
   140002995:	int3   
   140002996:	int3   
   140002997:	int3   
   140002998:	int3   
   140002999:	int3   
   14000299a:	int3   
   14000299b:	int3   
   14000299c:	int3   
   14000299d:	int3   
   14000299e:	int3   
   14000299f:	int3   
   1400029a0:	or     r9,0xffffffffffffffff
   1400029a4:	xor    r8d,r8d
   1400029a7:	jmp    0x1400029b0
   1400029ac:	int3   
   1400029ad:	int3   
   1400029ae:	int3   
   1400029af:	int3   
   1400029b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400029b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400029ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400029bf:	push   rdi
   1400029c0:	sub    rsp,0x20
   1400029c4:	mov    rdi,QWORD PTR [rdx+0x10]
   1400029c8:	mov    rbp,r8
   1400029cb:	mov    rsi,rdx
   1400029ce:	mov    rbx,rcx
   1400029d1:	cmp    rdi,r8
   1400029d4:	jae    0x1400029e4
   1400029d6:	lea    rcx,[rip+0x7e73]        # 0x14000a850
   1400029dd:	call   QWORD PTR [rip+0x767d]        # 0x14000a060
   1400029e3:	int3   
   1400029e4:	sub    rdi,r8
   1400029e7:	cmp    r9,rdi
   1400029ea:	cmovb  rdi,r9
   1400029ee:	cmp    rcx,rdx
   1400029f1:	jne    0x140002a2c
   1400029f3:	lea    rax,[rdi+r8*1]
   1400029f7:	cmp    QWORD PTR [rcx+0x10],rax
   1400029fb:	jae    0x140002a0b
   1400029fd:	lea    rcx,[rip+0x7e4c]        # 0x14000a850
   140002a04:	call   QWORD PTR [rip+0x7656]        # 0x14000a060
   140002a0a:	int3   
   140002a0b:	cmp    QWORD PTR [rcx+0x18],0x10
   140002a10:	mov    QWORD PTR [rcx+0x10],rax
   140002a14:	jb     0x140002a19
   140002a16:	mov    rcx,QWORD PTR [rcx]
   140002a19:	mov    BYTE PTR [rcx+rax*1],0x0
   140002a1d:	xor    edx,edx
   140002a1f:	mov    rcx,rbx
   140002a22:	call   0x140002e30
   140002a27:	jmp    0x140002aba
   140002a2c:	cmp    rdi,0xfffffffffffffffe
   140002a30:	jbe    0x140002a40
   140002a32:	lea    rcx,[rip+0x7e07]        # 0x14000a840
   140002a39:	call   QWORD PTR [rip+0x7749]        # 0x14000a188
   140002a3f:	int3   
   140002a40:	mov    rax,QWORD PTR [rcx+0x18]
   140002a44:	cmp    rax,rdi
   140002a47:	jae    0x140002a70
   140002a49:	mov    r8,QWORD PTR [rcx+0x10]
   140002a4d:	mov    rdx,rdi
   140002a50:	call   0x140002020
   140002a55:	test   rdi,rdi
   140002a58:	je     0x140002aba
   140002a5a:	cmp    QWORD PTR [rsi+0x18],0x10
   140002a5f:	jb     0x140002a64
   140002a61:	mov    rsi,QWORD PTR [rsi]
   140002a64:	cmp    QWORD PTR [rbx+0x18],0x10
   140002a69:	jb     0x140002a8f
   140002a6b:	mov    rcx,QWORD PTR [rbx]
   140002a6e:	jmp    0x140002a92
   140002a70:	test   rdi,rdi
   140002a73:	jne    0x140002a5a
   140002a75:	mov    QWORD PTR [rcx+0x10],rdi
   140002a79:	cmp    rax,0x10
   140002a7d:	jb     0x140002a87
   140002a7f:	mov    rax,QWORD PTR [rcx]
   140002a82:	mov    BYTE PTR [rax],dil
   140002a85:	jmp    0x140002aba
   140002a87:	mov    rax,rcx
   140002a8a:	mov    BYTE PTR [rcx],0x0
   140002a8d:	jmp    0x140002aba
   140002a8f:	mov    rcx,rbx
   140002a92:	test   rdi,rdi
   140002a95:	je     0x140002aa3
   140002a97:	lea    rdx,[rsi+rbp*1]
   140002a9b:	mov    r8,rdi
   140002a9e:	call   0x1400089c4
   140002aa3:	cmp    QWORD PTR [rbx+0x18],0x10
   140002aa8:	mov    QWORD PTR [rbx+0x10],rdi
   140002aac:	jb     0x140002ab3
   140002aae:	mov    rax,QWORD PTR [rbx]
   140002ab1:	jmp    0x140002ab6
   140002ab3:	mov    rax,rbx
   140002ab6:	mov    BYTE PTR [rax+rdi*1],0x0
   140002aba:	mov    rbp,QWORD PTR [rsp+0x38]
   140002abf:	mov    rsi,QWORD PTR [rsp+0x40]
   140002ac4:	mov    rax,rbx
   140002ac7:	mov    rbx,QWORD PTR [rsp+0x30]
   140002acc:	add    rsp,0x20
   140002ad0:	pop    rdi
   140002ad1:	ret    
   140002ad2:	int3   
   140002ad3:	int3   
   140002ad4:	int3   
   140002ad5:	int3   
   140002ad6:	int3   
   140002ad7:	int3   
   140002ad8:	int3   
   140002ad9:	int3   
   140002ada:	int3   
   140002adb:	int3   
   140002adc:	int3   
   140002add:	int3   
   140002ade:	int3   
   140002adf:	int3   
   140002ae0:	cmp    BYTE PTR [rdx],0x0
   140002ae3:	jne    0x140002aed
   140002ae5:	xor    r8d,r8d
   140002ae8:	jmp    0x140002b00
   140002aed:	or     r8,0xffffffffffffffff
   140002af1:	inc    r8
   140002af4:	cmp    BYTE PTR [rdx+r8*1],0x0
   140002af9:	jne    0x140002af1
   140002afb:	jmp    0x140002b00
   140002b00:	mov    QWORD PTR [rsp+0x8],rbx
   140002b05:	mov    QWORD PTR [rsp+0x10],rsi
   140002b0a:	push   rdi
   140002b0b:	sub    rsp,0x20
   140002b0f:	mov    rdi,r8
   140002b12:	mov    rsi,rdx
   140002b15:	mov    rbx,rcx
   140002b18:	test   rdx,rdx
   140002b1b:	je     0x140002b77
   140002b1d:	mov    rdx,QWORD PTR [rcx+0x18]
   140002b21:	cmp    rdx,0x10
   140002b25:	jb     0x140002b2c
   140002b27:	mov    rax,QWORD PTR [rcx]
   140002b2a:	jmp    0x140002b2f
   140002b2c:	mov    rax,rcx
   140002b2f:	cmp    rsi,rax
   140002b32:	jb     0x140002b77
   140002b34:	cmp    rdx,0x10
   140002b38:	jb     0x140002b3d
   140002b3a:	mov    rcx,QWORD PTR [rcx]
   140002b3d:	add    rcx,QWORD PTR [rbx+0x10]
   140002b41:	cmp    rcx,rsi
   140002b44:	jbe    0x140002b77
   140002b46:	cmp    rdx,0x10
   140002b4a:	jb     0x140002b51
   140002b4c:	mov    rax,QWORD PTR [rbx]
   140002b4f:	jmp    0x140002b54
   140002b51:	mov    rax,rbx
   140002b54:	sub    rsi,rax
   140002b57:	mov    r9,r8
   140002b5a:	mov    rdx,rbx
   140002b5d:	mov    r8,rsi
   140002b60:	mov    rcx,rbx
   140002b63:	mov    rbx,QWORD PTR [rsp+0x30]
   140002b68:	mov    rsi,QWORD PTR [rsp+0x38]
   140002b6d:	add    rsp,0x20
   140002b71:	pop    rdi
   140002b72:	jmp    0x1400029b0
   140002b77:	cmp    r8,0xfffffffffffffffe
   140002b7b:	jbe    0x140002b8b
   140002b7d:	lea    rcx,[rip+0x7cbc]        # 0x14000a840
   140002b84:	call   QWORD PTR [rip+0x75fe]        # 0x14000a188
   140002b8a:	int3   
   140002b8b:	mov    rax,QWORD PTR [rbx+0x18]
   140002b8f:	cmp    rax,r8
   140002b92:	jae    0x140002bb4
   140002b94:	mov    r8,QWORD PTR [rbx+0x10]
   140002b98:	mov    rdx,rdi
   140002b9b:	mov    rcx,rbx
   140002b9e:	call   0x140002020
   140002ba3:	test   rdi,rdi
   140002ba6:	je     0x140002c1c
   140002ba8:	cmp    QWORD PTR [rbx+0x18],0x10
   140002bad:	jb     0x140002bf2
   140002baf:	mov    rcx,QWORD PTR [rbx]
   140002bb2:	jmp    0x140002bf5
   140002bb4:	test   r8,r8
   140002bb7:	jne    0x140002ba3
   140002bb9:	mov    QWORD PTR [rbx+0x10],r8
   140002bbd:	cmp    rax,0x10
   140002bc1:	jb     0x140002bdc
   140002bc3:	mov    rax,QWORD PTR [rbx]
   140002bc6:	mov    BYTE PTR [rax],r8b
   140002bc9:	mov    rax,rbx
   140002bcc:	mov    rbx,QWORD PTR [rsp+0x30]
   140002bd1:	mov    rsi,QWORD PTR [rsp+0x38]
   140002bd6:	add    rsp,0x20
   140002bda:	pop    rdi
   140002bdb:	ret    
   140002bdc:	mov    rax,rbx
   140002bdf:	mov    BYTE PTR [rbx],0x0
   140002be2:	mov    rbx,QWORD PTR [rsp+0x30]
   140002be7:	mov    rsi,QWORD PTR [rsp+0x38]
   140002bec:	add    rsp,0x20
   140002bf0:	pop    rdi
   140002bf1:	ret    
   140002bf2:	mov    rcx,rbx
   140002bf5:	test   rdi,rdi
   140002bf8:	je     0x140002c05
   140002bfa:	mov    r8,rdi
   140002bfd:	mov    rdx,rsi
   140002c00:	call   0x1400089c4
   140002c05:	cmp    QWORD PTR [rbx+0x18],0x10
   140002c0a:	mov    QWORD PTR [rbx+0x10],rdi
   140002c0e:	jb     0x140002c15
   140002c10:	mov    rax,QWORD PTR [rbx]
   140002c13:	jmp    0x140002c18
   140002c15:	mov    rax,rbx
   140002c18:	mov    BYTE PTR [rax+rdi*1],0x0
   140002c1c:	mov    rsi,QWORD PTR [rsp+0x38]
   140002c21:	mov    rax,rbx
   140002c24:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c29:	add    rsp,0x20
   140002c2d:	pop    rdi
   140002c2e:	ret    
   140002c2f:	int3   
   140002c30:	movzx  eax,BYTE PTR [rdx]
   140002c33:	mov    BYTE PTR [rcx],al
   140002c35:	ret    
   140002c36:	int3   
   140002c37:	int3   
   140002c38:	int3   
   140002c39:	int3   
   140002c3a:	int3   
   140002c3b:	int3   
   140002c3c:	int3   
   140002c3d:	int3   
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	sub    rsp,0x28
   140002c44:	mov    r8,QWORD PTR [rcx]
   140002c47:	mov    rax,QWORD PTR [rcx+0x8]
   140002c4b:	sub    rax,r8
   140002c4e:	sar    rax,0x5
   140002c52:	cmp    rax,rdx
   140002c55:	ja     0x140002c65
   140002c57:	lea    rcx,[rip+0x7bc2]        # 0x14000a820
   140002c5e:	call   QWORD PTR [rip+0x73fc]        # 0x14000a060
   140002c64:	int3   
   140002c65:	shl    rdx,0x5
   140002c69:	lea    rax,[r8+rdx*1]
   140002c6d:	add    rsp,0x28
   140002c71:	ret    
   140002c72:	int3   
   140002c73:	int3   
   140002c74:	int3   
   140002c75:	int3   
   140002c76:	int3   
   140002c77:	int3   
   140002c78:	int3   
   140002c79:	int3   
   140002c7a:	int3   
   140002c7b:	int3   
   140002c7c:	int3   
   140002c7d:	int3   
   140002c7e:	int3   
   140002c7f:	int3   
   140002c80:	cmp    QWORD PTR [rcx+0x18],0x10
   140002c85:	jb     0x140002c8b
   140002c87:	mov    rax,QWORD PTR [rcx]
   140002c8a:	ret    
   140002c8b:	mov    rax,rcx
   140002c8e:	ret    
   140002c8f:	int3   
   140002c90:	mov    rax,QWORD PTR [rcx+0x10]
   140002c94:	sub    rax,QWORD PTR [rcx]
   140002c97:	sar    rax,0x5
   140002c9b:	ret    
   140002c9c:	int3   
   140002c9d:	int3   
   140002c9e:	int3   
   140002c9f:	int3   
   140002ca0:	mov    rax,QWORD PTR [rcx+0x8]
   140002ca4:	ret    
   140002ca5:	int3   
   140002ca6:	int3   
   140002ca7:	int3   
   140002ca8:	int3   
   140002ca9:	int3   
   140002caa:	int3   
   140002cab:	int3   
   140002cac:	int3   
   140002cad:	int3   
   140002cae:	int3   
   140002caf:	int3   
   140002cb0:	mov    rax,QWORD PTR [rcx+0x8]
   140002cb4:	ret    
   140002cb5:	int3   
   140002cb6:	int3   
   140002cb7:	int3   
   140002cb8:	int3   
   140002cb9:	int3   
   140002cba:	int3   
   140002cbb:	int3   
   140002cbc:	int3   
   140002cbd:	int3   
   140002cbe:	int3   
   140002cbf:	int3   
   140002cc0:	mov    QWORD PTR [rsp+0x10],rdx
   140002cc5:	sub    rsp,0x38
   140002cc9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002cd2:	mov    r10,r8
   140002cd5:	mov    rax,rdx
   140002cd8:	mov    QWORD PTR [rsp+0x58],rdx
   140002cdd:	test   rdx,rdx
   140002ce0:	je     0x140002d08
   140002ce2:	mov    QWORD PTR [rdx+0x18],0xf
   140002cea:	mov    QWORD PTR [rdx+0x10],0x0
   140002cf2:	mov    BYTE PTR [rdx],0x0
   140002cf5:	or     r9,0xffffffffffffffff
   140002cf9:	xor    r8d,r8d
   140002cfc:	mov    rdx,r10
   140002cff:	mov    rcx,rax
   140002d02:	call   0x1400029b0
   140002d07:	nop
   140002d08:	add    rsp,0x38
   140002d0c:	ret    
   140002d0d:	int3   
   140002d0e:	int3   
   140002d0f:	int3   
   140002d10:	rex push rbx
   140002d12:	sub    rsp,0x20
   140002d16:	mov    rbx,rcx
   140002d19:	test   r8,r8
   140002d1c:	je     0x140002d23
   140002d1e:	call   0x1400089c4
   140002d23:	mov    rax,rbx
   140002d26:	add    rsp,0x20
   140002d2a:	pop    rbx
   140002d2b:	ret    
   140002d2c:	int3   
   140002d2d:	int3   
   140002d2e:	int3   
   140002d2f:	int3   
   140002d30:	mov    rcx,rdx
   140002d33:	jmp    0x140008880
   140002d38:	int3   
   140002d39:	int3   
   140002d3a:	int3   
   140002d3b:	int3   
   140002d3c:	int3   
   140002d3d:	int3   
   140002d3e:	int3   
   140002d3f:	int3   
   140002d40:	mov    rcx,rdx
   140002d43:	jmp    0x140008880
   140002d48:	int3   
   140002d49:	int3   
   140002d4a:	int3   
   140002d4b:	int3   
   140002d4c:	int3   
   140002d4d:	int3   
   140002d4e:	int3   
   140002d4f:	int3   
   140002d50:	mov    rcx,rdx
   140002d53:	jmp    0x140008880
   140002d58:	int3   
   140002d59:	int3   
   140002d5a:	int3   
   140002d5b:	int3   
   140002d5c:	int3   
   140002d5d:	int3   
   140002d5e:	int3   
   140002d5f:	int3   
   140002d60:	mov    rcx,rdx
   140002d63:	jmp    0x140008880
   140002d68:	int3   
   140002d69:	int3   
   140002d6a:	int3   
   140002d6b:	int3   
   140002d6c:	int3   
   140002d6d:	int3   
   140002d6e:	int3   
   140002d6f:	int3   
   140002d70:	mov    QWORD PTR [rsp+0x8],rbx
   140002d75:	push   rdi
   140002d76:	sub    rsp,0x20
   140002d7a:	mov    ecx,r8d
   140002d7d:	mov    edi,r8d
   140002d80:	mov    rbx,rdx
   140002d83:	call   QWORD PTR [rip+0x72df]        # 0x14000a068
   140002d89:	mov    DWORD PTR [rbx],edi
   140002d8b:	test   rax,rax
   140002d8e:	lea    rax,[rip+0xc26b]        # 0x14000f000
   140002d95:	jne    0x140002d9e
   140002d97:	lea    rax,[rip+0xc272]        # 0x14000f010
   140002d9e:	mov    QWORD PTR [rbx+0x8],rax
   140002da2:	mov    rax,rbx
   140002da5:	mov    rbx,QWORD PTR [rsp+0x30]
   140002daa:	add    rsp,0x20
   140002dae:	pop    rdi
   140002daf:	ret    
   140002db0:	mov    DWORD PTR [rdx],r8d
   140002db3:	mov    QWORD PTR [rdx+0x8],rcx
   140002db7:	mov    rax,rdx
   140002dba:	ret    
   140002dbb:	int3   
   140002dbc:	int3   
   140002dbd:	int3   
   140002dbe:	int3   
   140002dbf:	int3   
   140002dc0:	xor    eax,eax
   140002dc2:	cmp    QWORD PTR [rcx+0x10],rax
   140002dc6:	sete   al
   140002dc9:	ret    
   140002dca:	int3   
   140002dcb:	int3   
   140002dcc:	int3   
   140002dcd:	int3   
   140002dce:	int3   
   140002dcf:	int3   
   140002dd0:	cmp    rcx,QWORD PTR [rdx+0x8]
   140002dd4:	jne    0x140002dde
   140002dd6:	cmp    DWORD PTR [rdx],r8d
   140002dd9:	jne    0x140002dde
   140002ddb:	mov    al,0x1
   140002ddd:	ret    
   140002dde:	xor    al,al
   140002de0:	ret    
   140002de1:	int3   
   140002de2:	int3   
   140002de3:	int3   
   140002de4:	int3   
   140002de5:	int3   
   140002de6:	int3   
   140002de7:	int3   
   140002de8:	int3   
   140002de9:	int3   
   140002dea:	int3   
   140002deb:	int3   
   140002dec:	int3   
   140002ded:	int3   
   140002dee:	int3   
   140002def:	int3   
   140002df0:	rex push rbx
   140002df2:	sub    rsp,0x30
   140002df6:	mov    rax,QWORD PTR [rcx]
   140002df9:	mov    rbx,r8
   140002dfc:	mov    r8d,edx
   140002dff:	lea    rdx,[rsp+0x20]
   140002e04:	call   QWORD PTR [rax+0x18]
   140002e07:	mov    rcx,QWORD PTR [rbx+0x8]
   140002e0b:	cmp    QWORD PTR [rax+0x8],rcx
   140002e0f:	jne    0x140002e1f
   140002e11:	mov    ecx,DWORD PTR [rbx]
   140002e13:	cmp    DWORD PTR [rax],ecx
   140002e15:	jne    0x140002e1f
   140002e17:	mov    al,0x1
   140002e19:	add    rsp,0x30
   140002e1d:	pop    rbx
   140002e1e:	ret    
   140002e1f:	xor    al,al
   140002e21:	add    rsp,0x30
   140002e25:	pop    rbx
   140002e26:	ret    
   140002e27:	int3   
   140002e28:	int3   
   140002e29:	int3   
   140002e2a:	int3   
   140002e2b:	int3   
   140002e2c:	int3   
   140002e2d:	int3   
   140002e2e:	int3   
   140002e2f:	int3   
   140002e30:	mov    QWORD PTR [rsp+0x8],rbx
   140002e35:	push   rdi
   140002e36:	sub    rsp,0x20
   140002e3a:	mov    rdi,QWORD PTR [rcx+0x10]
   140002e3e:	mov    rbx,rcx
   140002e41:	cmp    rdi,rdx
   140002e44:	jae    0x140002e54
   140002e46:	lea    rcx,[rip+0x7a03]        # 0x14000a850
   140002e4d:	call   QWORD PTR [rip+0x720d]        # 0x14000a060
   140002e53:	int3   
   140002e54:	mov    rax,rdi
   140002e57:	sub    rax,rdx
   140002e5a:	cmp    rax,r8
   140002e5d:	ja     0x140002e94
   140002e5f:	cmp    QWORD PTR [rcx+0x18],0x10
   140002e64:	mov    QWORD PTR [rcx+0x10],rdx
   140002e68:	jb     0x140002e7f
   140002e6a:	mov    rax,QWORD PTR [rcx]
   140002e6d:	mov    BYTE PTR [rax+rdx*1],0x0
   140002e71:	mov    rax,rbx
   140002e74:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e79:	add    rsp,0x20
   140002e7d:	pop    rdi
   140002e7e:	ret    
   140002e7f:	mov    rax,rcx
   140002e82:	mov    BYTE PTR [rcx+rdx*1],0x0
   140002e86:	mov    rax,rbx
   140002e89:	mov    rbx,QWORD PTR [rsp+0x30]
   140002e8e:	add    rsp,0x20
   140002e92:	pop    rdi
   140002e93:	ret    
   140002e94:	test   r8,r8
   140002e97:	je     0x140002eeb
   140002e99:	cmp    QWORD PTR [rcx+0x18],0x10
   140002e9e:	jb     0x140002ea5
   140002ea0:	mov    rax,QWORD PTR [rcx]
   140002ea3:	jmp    0x140002ea8
   140002ea5:	mov    rax,rcx
   140002ea8:	sub    rdi,r8
   140002eab:	lea    rcx,[rax+rdx*1]
   140002eaf:	mov    rax,rdi
   140002eb2:	sub    rax,rdx
   140002eb5:	je     0x140002ec4
   140002eb7:	lea    rdx,[rcx+r8*1]
   140002ebb:	mov    r8,rax
   140002ebe:	call   QWORD PTR [rip+0x72dc]        # 0x14000a1a0
   140002ec4:	cmp    QWORD PTR [rbx+0x18],0x10
   140002ec9:	mov    QWORD PTR [rbx+0x10],rdi
   140002ecd:	jb     0x140002ee4
   140002ecf:	mov    rax,QWORD PTR [rbx]
   140002ed2:	mov    BYTE PTR [rax+rdi*1],0x0
   140002ed6:	mov    rax,rbx
   140002ed9:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ede:	add    rsp,0x20
   140002ee2:	pop    rdi
   140002ee3:	ret    
   140002ee4:	mov    rax,rbx
   140002ee7:	mov    BYTE PTR [rbx+rdi*1],0x0
   140002eeb:	mov    rax,rbx
   140002eee:	mov    rbx,QWORD PTR [rsp+0x30]
   140002ef3:	add    rsp,0x20
   140002ef7:	pop    rdi
   140002ef8:	ret    
   140002ef9:	int3   
   140002efa:	int3   
   140002efb:	int3   
   140002efc:	int3   
   140002efd:	int3   
   140002efe:	int3   
   140002eff:	int3   
   140002f00:	sub    rsp,0x28
   140002f04:	cmp    QWORD PTR [rcx+0x10],rdx
   140002f08:	jae    0x140002f18
   140002f0a:	lea    rcx,[rip+0x793f]        # 0x14000a850
   140002f11:	call   QWORD PTR [rip+0x7149]        # 0x14000a060
   140002f17:	int3   
   140002f18:	cmp    QWORD PTR [rcx+0x18],0x10
   140002f1d:	mov    QWORD PTR [rcx+0x10],rdx
   140002f21:	jb     0x140002f32
   140002f23:	mov    rax,QWORD PTR [rcx]
   140002f26:	mov    BYTE PTR [rax+rdx*1],0x0
   140002f2a:	mov    rax,rcx
   140002f2d:	add    rsp,0x28
   140002f31:	ret    
   140002f32:	mov    rax,rcx
   140002f35:	mov    BYTE PTR [rcx+rdx*1],0x0
   140002f39:	add    rsp,0x28
   140002f3d:	ret    
   140002f3e:	int3   
   140002f3f:	int3   
   140002f40:	lea    rax,[rip+0xc0b9]        # 0x14000f000
   140002f47:	ret    
   140002f48:	int3   
   140002f49:	int3   
   140002f4a:	int3   
   140002f4b:	int3   
   140002f4c:	int3   
   140002f4d:	int3   
   140002f4e:	int3   
   140002f4f:	int3   
   140002f50:	lea    rax,[rcx+0x40]
   140002f54:	ret    
   140002f55:	int3   
   140002f56:	int3   
   140002f57:	int3   
   140002f58:	int3   
   140002f59:	int3   
   140002f5a:	int3   
   140002f5b:	int3   
   140002f5c:	int3   
   140002f5d:	int3   
   140002f5e:	int3   
   140002f5f:	int3   
   140002f60:	mov    rax,rcx
   140002f63:	ret    
   140002f64:	int3   
   140002f65:	int3   
   140002f66:	int3   
   140002f67:	int3   
   140002f68:	int3   
   140002f69:	int3   
   140002f6a:	int3   
   140002f6b:	int3   
   140002f6c:	int3   
   140002f6d:	int3   
   140002f6e:	int3   
   140002f6f:	int3   
   140002f70:	lea    rax,[rcx+0x60]
   140002f74:	ret    
   140002f75:	int3   
   140002f76:	int3   
   140002f77:	int3   
   140002f78:	int3   
   140002f79:	int3   
   140002f7a:	int3   
   140002f7b:	int3   
   140002f7c:	int3   
   140002f7d:	int3   
   140002f7e:	int3   
   140002f7f:	int3   
   140002f80:	lea    rax,[rcx+0x20]
   140002f84:	ret    
   140002f85:	int3   
   140002f86:	int3   
   140002f87:	int3   
   140002f88:	int3   
   140002f89:	int3   
   140002f8a:	int3   
   140002f8b:	int3   
   140002f8c:	int3   
   140002f8d:	int3   
   140002f8e:	int3   
   140002f8f:	int3   
   140002f90:	cmp    BYTE PTR [rcx],0x0
   140002f93:	jne    0x140002f98
   140002f95:	xor    eax,eax
   140002f97:	ret    
   140002f98:	or     rax,0xffffffffffffffff
   140002f9c:	nop    DWORD PTR [rax+0x0]
   140002fa0:	inc    rax
   140002fa3:	cmp    BYTE PTR [rcx+rax*1],0x0
   140002fa7:	jne    0x140002fa0
   140002fa9:	ret    
   140002faa:	int3   
   140002fab:	int3   
   140002fac:	int3   
   140002fad:	int3   
   140002fae:	int3   
   140002faf:	int3   
   140002fb0:	or     rax,0xffffffffffffffff
   140002fb4:	ret    
   140002fb5:	int3   
   140002fb6:	int3   
   140002fb7:	int3   
   140002fb8:	int3   
   140002fb9:	int3   
   140002fba:	int3   
   140002fbb:	int3   
   140002fbc:	int3   
   140002fbd:	int3   
   140002fbe:	int3   
   140002fbf:	int3   
   140002fc0:	movabs rax,0x7ffffffffffffff
   140002fca:	ret    
   140002fcb:	int3   
   140002fcc:	int3   
   140002fcd:	int3   
   140002fce:	int3   
   140002fcf:	int3   
   140002fd0:	or     rax,0xffffffffffffffff
   140002fd4:	ret    
   140002fd5:	int3   
   140002fd6:	int3   
   140002fd7:	int3   
   140002fd8:	int3   
   140002fd9:	int3   
   140002fda:	int3   
   140002fdb:	int3   
   140002fdc:	int3   
   140002fdd:	int3   
   140002fde:	int3   
   140002fdf:	int3   
   140002fe0:	movabs rax,0x7ffffffffffffff
   140002fea:	ret    
   140002feb:	int3   
   140002fec:	int3   
   140002fed:	int3   
   140002fee:	int3   
   140002fef:	int3   
   140002ff0:	or     rax,0xffffffffffffffff
   140002ff4:	ret    
   140002ff5:	int3   
   140002ff6:	int3   
   140002ff7:	int3   
   140002ff8:	int3   
   140002ff9:	int3   
   140002ffa:	int3   
   140002ffb:	int3   
   140002ffc:	int3   
   140002ffd:	int3   
   140002ffe:	int3   
   140002fff:	int3   
   140003000:	movabs rax,0x7ffffffffffffff
   14000300a:	ret    
   14000300b:	int3   
   14000300c:	int3   
   14000300d:	int3   
   14000300e:	int3   
   14000300f:	int3   
   140003010:	mov    rax,0xfffffffffffffffe
   140003017:	ret    
   140003018:	int3   
   140003019:	int3   
   14000301a:	int3   
   14000301b:	int3   
   14000301c:	int3   
   14000301d:	int3   
   14000301e:	int3   
   14000301f:	int3   
   140003020:	movabs rax,0x7ffffffffffffff
   14000302a:	ret    
   14000302b:	int3   
   14000302c:	int3   
   14000302d:	int3   
   14000302e:	int3   
   14000302f:	int3   
   140003030:	mov    QWORD PTR [rsp+0x8],rbx
   140003035:	push   rdi
   140003036:	sub    rsp,0x30
   14000303a:	xor    ebx,ebx
   14000303c:	mov    ecx,r8d
   14000303f:	mov    rdi,rdx
   140003042:	mov    DWORD PTR [rsp+0x20],ebx
   140003046:	call   QWORD PTR [rip+0x701c]        # 0x14000a068
   14000304c:	mov    QWORD PTR [rdi+0x18],0xf
   140003054:	test   rax,rax
   140003057:	mov    QWORD PTR [rdi+0x10],rbx
   14000305b:	lea    rdx,[rip+0x76ce]        # 0x14000a730
   140003062:	cmovne rdx,rax
   140003066:	mov    BYTE PTR [rdi],bl
   140003068:	cmp    BYTE PTR [rdx],bl
   14000306a:	je     0x140003079
   14000306c:	or     rbx,0xffffffffffffffff
   140003070:	inc    rbx
   140003073:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140003077:	jne    0x140003070
   140003079:	mov    r8,rbx
   14000307c:	mov    rcx,rdi
   14000307f:	call   0x140002b00
   140003084:	mov    rbx,QWORD PTR [rsp+0x40]
   140003089:	mov    rax,rdi
   14000308c:	add    rsp,0x30
   140003090:	pop    rdi
   140003091:	ret    
   140003092:	int3   
   140003093:	int3   
   140003094:	int3   
   140003095:	int3   
   140003096:	int3   
   140003097:	int3   
   140003098:	int3   
   140003099:	int3   
   14000309a:	int3   
   14000309b:	int3   
   14000309c:	int3   
   14000309d:	int3   
   14000309e:	int3   
   14000309f:	int3   
   1400030a0:	rex push rbx
   1400030a2:	sub    rsp,0x30
   1400030a6:	xor    eax,eax
   1400030a8:	mov    rbx,rdx
   1400030ab:	mov    DWORD PTR [rsp+0x20],eax
   1400030af:	cmp    r8d,0x1
   1400030b3:	jne    0x1400030df
   1400030b5:	mov    QWORD PTR [rdx+0x18],0xf
   1400030bd:	mov    QWORD PTR [rdx+0x10],rax
   1400030c1:	mov    BYTE PTR [rdx],al
   1400030c3:	lea    rdx,[rip+0x76be]        # 0x14000a788
   1400030ca:	lea    r8d,[rax+0x15]
   1400030ce:	mov    rcx,rbx
   1400030d1:	call   0x140002b00
   1400030d6:	mov    rax,rbx
   1400030d9:	add    rsp,0x30
   1400030dd:	pop    rbx
   1400030de:	ret    
   1400030df:	call   0x140003030
   1400030e4:	mov    rax,rbx
   1400030e7:	add    rsp,0x30
   1400030eb:	pop    rbx
   1400030ec:	ret    
   1400030ed:	int3   
   1400030ee:	int3   
   1400030ef:	int3   
   1400030f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400030f5:	push   rdi
   1400030f6:	sub    rsp,0x30
   1400030fa:	xor    ebx,ebx
   1400030fc:	mov    ecx,r8d
   1400030ff:	mov    rdi,rdx
   140003102:	mov    DWORD PTR [rsp+0x20],ebx
   140003106:	call   QWORD PTR [rip+0x6f64]        # 0x14000a070
   14000310c:	mov    QWORD PTR [rdi+0x18],0xf
   140003114:	test   rax,rax
   140003117:	mov    QWORD PTR [rdi+0x10],rbx
   14000311b:	lea    rdx,[rip+0x760e]        # 0x14000a730
   140003122:	cmovne rdx,rax
   140003126:	mov    BYTE PTR [rdi],bl
   140003128:	cmp    BYTE PTR [rdx],bl
   14000312a:	je     0x140003139
   14000312c:	or     rbx,0xffffffffffffffff
   140003130:	inc    rbx
   140003133:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140003137:	jne    0x140003130
   140003139:	mov    r8,rbx
   14000313c:	mov    rcx,rdi
   14000313f:	call   0x140002b00
   140003144:	mov    rbx,QWORD PTR [rsp+0x40]
   140003149:	mov    rax,rdi
   14000314c:	add    rsp,0x30
   140003150:	pop    rdi
   140003151:	ret    
   140003152:	int3   
   140003153:	int3   
   140003154:	int3   
   140003155:	int3   
   140003156:	int3   
   140003157:	int3   
   140003158:	int3   
   140003159:	int3   
   14000315a:	int3   
   14000315b:	int3   
   14000315c:	int3   
   14000315d:	int3   
   14000315e:	int3   
   14000315f:	int3   
   140003160:	test   r8,r8
   140003163:	jne    0x140003169
   140003165:	mov    rax,rcx
   140003168:	ret    
   140003169:	rex.W jmp QWORD PTR [rip+0x7030]        # 0x14000a1a0
   140003170:	lea    rax,[rip+0x75b1]        # 0x14000a728
   140003177:	ret    
   140003178:	int3   
   140003179:	int3   
   14000317a:	int3   
   14000317b:	int3   
   14000317c:	int3   
   14000317d:	int3   
   14000317e:	int3   
   14000317f:	int3   
   140003180:	lea    rax,[rip+0x75f1]        # 0x14000a778
   140003187:	ret    
   140003188:	int3   
   140003189:	int3   
   14000318a:	int3   
   14000318b:	int3   
   14000318c:	int3   
   14000318d:	int3   
   14000318e:	int3   
   14000318f:	int3   
   140003190:	lea    rax,[rip+0x7641]        # 0x14000a7d8
   140003197:	ret    
   140003198:	int3   
   140003199:	int3   
   14000319a:	int3   
   14000319b:	int3   
   14000319c:	int3   
   14000319d:	int3   
   14000319e:	int3   
   14000319f:	int3   
   1400031a0:	rex push rdi
   1400031a2:	sub    rsp,0x30
   1400031a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400031af:	mov    QWORD PTR [rsp+0x50],rbx
   1400031b4:	mov    rdi,rdx
   1400031b7:	mov    rbx,rcx
   1400031ba:	mov    rax,QWORD PTR [rcx+0x8]
   1400031be:	cmp    rdx,rax
   1400031c1:	jae    0x140003220
   1400031c3:	mov    rcx,QWORD PTR [rcx]
   1400031c6:	cmp    rcx,rdx
   1400031c9:	ja     0x140003220
   1400031cb:	sub    rdi,rcx
   1400031ce:	cmp    rax,QWORD PTR [rbx+0x10]
   1400031d2:	jne    0x1400031e1
   1400031d4:	mov    edx,0x1
   1400031d9:	mov    rcx,rbx
   1400031dc:	call   0x140002490
   1400031e1:	and    rdi,0xffffffffffffffe0
   1400031e5:	add    rdi,QWORD PTR [rbx]
   1400031e8:	mov    rcx,QWORD PTR [rbx+0x8]
   1400031ec:	mov    QWORD PTR [rsp+0x40],rcx
   1400031f1:	mov    QWORD PTR [rsp+0x48],rcx
   1400031f6:	test   rcx,rcx
   1400031f9:	je     0x14000321e
   1400031fb:	mov    QWORD PTR [rcx+0x18],0xf
   140003203:	mov    QWORD PTR [rcx+0x10],0x0
   14000320b:	mov    BYTE PTR [rcx],0x0
   14000320e:	or     r9,0xffffffffffffffff
   140003212:	xor    r8d,r8d
   140003215:	mov    rdx,rdi
   140003218:	call   0x1400029b0
   14000321d:	nop
   14000321e:	jmp    0x140003269
   140003220:	cmp    rax,QWORD PTR [rbx+0x10]
   140003224:	jne    0x140003233
   140003226:	mov    edx,0x1
   14000322b:	mov    rcx,rbx
   14000322e:	call   0x140002490
   140003233:	mov    rcx,QWORD PTR [rbx+0x8]
   140003237:	mov    QWORD PTR [rsp+0x40],rcx
   14000323c:	mov    QWORD PTR [rsp+0x48],rcx
   140003241:	test   rcx,rcx
   140003244:	je     0x140003269
   140003246:	mov    QWORD PTR [rcx+0x18],0xf
   14000324e:	mov    QWORD PTR [rcx+0x10],0x0
   140003256:	mov    BYTE PTR [rcx],0x0
   140003259:	or     r9,0xffffffffffffffff
   14000325d:	xor    r8d,r8d
   140003260:	mov    rdx,rdi
   140003263:	call   0x1400029b0
   140003268:	nop
   140003269:	add    QWORD PTR [rbx+0x8],0x20
   14000326e:	mov    rbx,QWORD PTR [rsp+0x50]
   140003273:	add    rsp,0x30
   140003277:	pop    rdi
   140003278:	ret    
   140003279:	int3   
   14000327a:	int3   
   14000327b:	int3   
   14000327c:	int3   
   14000327d:	int3   
   14000327e:	int3   
   14000327f:	int3   
   140003280:	mov    rax,rdx
   140003283:	ret    
   140003284:	int3   
   140003285:	int3   
   140003286:	int3   
   140003287:	int3   
   140003288:	int3   
   140003289:	int3   
   14000328a:	int3   
   14000328b:	int3   
   14000328c:	int3   
   14000328d:	int3   
   14000328e:	int3   
   14000328f:	int3   
   140003290:	mov    rax,rdx
   140003293:	ret    
   140003294:	int3   
   140003295:	int3   
   140003296:	int3   
   140003297:	int3   
   140003298:	int3   
   140003299:	int3   
   14000329a:	int3   
   14000329b:	int3   
   14000329c:	int3   
   14000329d:	int3   
   14000329e:	int3   
   14000329f:	int3   
   1400032a0:	mov    rax,rcx
   1400032a3:	ret    
   1400032a4:	int3   
   1400032a5:	int3   
   1400032a6:	int3   
   1400032a7:	int3   
   1400032a8:	int3   
   1400032a9:	int3   
   1400032aa:	int3   
   1400032ab:	int3   
   1400032ac:	int3   
   1400032ad:	int3   
   1400032ae:	int3   
   1400032af:	int3   
   1400032b0:	add    rcx,0x40
   1400032b4:	cmp    rcx,rdx
   1400032b7:	je     0x1400032c5
   1400032b9:	or     r9,0xffffffffffffffff
   1400032bd:	xor    r8d,r8d
   1400032c0:	jmp    0x1400029b0
   1400032c5:	ret    
   1400032c6:	int3   
   1400032c7:	int3   
   1400032c8:	int3   
   1400032c9:	int3   
   1400032ca:	int3   
   1400032cb:	int3   
   1400032cc:	int3   
   1400032cd:	int3   
   1400032ce:	int3   
   1400032cf:	int3   
   1400032d0:	cmp    rcx,rdx
   1400032d3:	je     0x1400032e1
   1400032d5:	or     r9,0xffffffffffffffff
   1400032d9:	xor    r8d,r8d
   1400032dc:	jmp    0x1400029b0
   1400032e1:	ret    
   1400032e2:	int3   
   1400032e3:	int3   
   1400032e4:	int3   
   1400032e5:	int3   
   1400032e6:	int3   
   1400032e7:	int3   
   1400032e8:	int3   
   1400032e9:	int3   
   1400032ea:	int3   
   1400032eb:	int3   
   1400032ec:	int3   
   1400032ed:	int3   
   1400032ee:	int3   
   1400032ef:	int3   
   1400032f0:	add    rcx,0x60
   1400032f4:	jmp    0x1400031a0
   1400032f9:	int3   
   1400032fa:	int3   
   1400032fb:	int3   
   1400032fc:	int3   
   1400032fd:	int3   
   1400032fe:	int3   
   1400032ff:	int3   
   140003300:	add    rcx,0x20
   140003304:	cmp    rcx,rdx
   140003307:	je     0x140003315
   140003309:	or     r9,0xffffffffffffffff
   14000330d:	xor    r8d,r8d
   140003310:	jmp    0x1400029b0
   140003315:	ret    
   140003316:	int3   
   140003317:	int3   
   140003318:	int3   
   140003319:	int3   
   14000331a:	int3   
   14000331b:	int3   
   14000331c:	int3   
   14000331d:	int3   
   14000331e:	int3   
   14000331f:	int3   
   140003320:	mov    rax,QWORD PTR [rcx+0x10]
   140003324:	ret    
   140003325:	int3   
   140003326:	int3   
   140003327:	int3   
   140003328:	int3   
   140003329:	int3   
   14000332a:	int3   
   14000332b:	int3   
   14000332c:	int3   
   14000332d:	int3   
   14000332e:	int3   
   14000332f:	int3   
   140003330:	mov    rax,QWORD PTR [rcx+0x8]
   140003334:	sub    rax,QWORD PTR [rcx]
   140003337:	sar    rax,0x5
   14000333b:	ret    
   14000333c:	int3   
   14000333d:	int3   
   14000333e:	int3   
   14000333f:	int3   
   140003340:	lea    rax,[rip+0xbcc9]        # 0x14000f010
   140003347:	ret    
   140003348:	int3   
   140003349:	int3   
   14000334a:	int3   
   14000334b:	int3   
   14000334c:	int3   
   14000334d:	int3   
   14000334e:	int3   
   14000334f:	int3   
   140003350:	sub    rsp,0x68
   140003354:	cmp    QWORD PTR [rcx+0x10],0x0
   140003359:	je     0x14000336e
   14000335b:	cmp    QWORD PTR [rcx+0x30],0x0
   140003360:	je     0x14000336e
   140003362:	cmp    QWORD PTR [rcx+0x50],0x0
   140003367:	je     0x14000336e
   140003369:	add    rsp,0x68
   14000336d:	ret    
   14000336e:	lea    rdx,[rip+0x7493]        # 0x14000a808
   140003375:	lea    rcx,[rsp+0x20]
   14000337a:	mov    r8d,0xfffffffc
   140003380:	call   0x1400033d0
   140003385:	lea    rdx,[rip+0x9f94]        # 0x14000d320
   14000338c:	lea    rcx,[rsp+0x20]
   140003391:	call   0x1400089b8
   140003396:	int3   
   140003397:	int3   
   140003398:	int3   
   140003399:	int3   
   14000339a:	int3   
   14000339b:	int3   
   14000339c:	int3   
   14000339d:	int3   
   14000339e:	int3   
   14000339f:	int3   
   1400033a0:	mov    eax,DWORD PTR [rcx]
   1400033a2:	ret    
   1400033a3:	int3   
   1400033a4:	int3   
   1400033a5:	int3   
   1400033a6:	int3   
   1400033a7:	int3   
   1400033a8:	int3   
   1400033a9:	int3   
   1400033aa:	int3   
   1400033ab:	int3   
   1400033ac:	int3   
   1400033ad:	int3   
   1400033ae:	int3   
   1400033af:	int3   
   1400033b0:	mov    eax,DWORD PTR [rcx]
   1400033b2:	ret    
   1400033b3:	int3   
   1400033b4:	int3   
   1400033b5:	int3   
   1400033b6:	int3   
   1400033b7:	int3   
   1400033b8:	int3   
   1400033b9:	int3   
   1400033ba:	int3   
   1400033bb:	int3   
   1400033bc:	int3   
   1400033bd:	int3   
   1400033be:	int3   
   1400033bf:	int3   
   1400033c0:	rex.W jmp QWORD PTR [rip+0x6de1]        # 0x14000a1a8
   1400033c7:	int3   
   1400033c8:	int3   
   1400033c9:	int3   
   1400033ca:	int3   
   1400033cb:	int3   
   1400033cc:	int3   
   1400033cd:	int3   
   1400033ce:	int3   
   1400033cf:	int3   
   1400033d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400033d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400033da:	push   rdi
   1400033db:	sub    rsp,0x20
   1400033df:	mov    esi,r8d
   1400033e2:	mov    rbx,rdx
   1400033e5:	mov    rdi,rcx
   1400033e8:	call   QWORD PTR [rip+0x6dea]        # 0x14000a1d8
   1400033ee:	lea    rcx,[rdi+0x18]
   1400033f2:	xor    r8d,r8d
   1400033f5:	lea    rax,[rip+0x73ec]        # 0x14000a7e8
   1400033fc:	mov    QWORD PTR [rdi],rax
   1400033ff:	mov    QWORD PTR [rcx+0x18],0xf
   140003407:	mov    QWORD PTR [rcx+0x10],r8
   14000340b:	mov    BYTE PTR [rcx],r8b
   14000340e:	cmp    BYTE PTR [rbx],r8b
   140003411:	je     0x14000342a
   140003413:	or     r8,0xffffffffffffffff
   140003417:	nop    WORD PTR [rax+rax*1+0x0]
   140003420:	inc    r8
   140003423:	cmp    BYTE PTR [rbx+r8*1],0x0
   140003428:	jne    0x140003420
   14000342a:	mov    rdx,rbx
   14000342d:	call   0x140002b00
   140003432:	mov    rbx,QWORD PTR [rsp+0x30]
   140003437:	mov    DWORD PTR [rdi+0x38],esi
   14000343a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000343f:	mov    rax,rdi
   140003442:	add    rsp,0x20
   140003446:	pop    rdi
   140003447:	ret    
   140003448:	int3   
   140003449:	int3   
   14000344a:	int3   
   14000344b:	int3   
   14000344c:	int3   
   14000344d:	int3   
   14000344e:	int3   
   14000344f:	int3   
   140003450:	rex push rbx
   140003452:	sub    rsp,0x20
   140003456:	lea    rax,[rip+0x738b]        # 0x14000a7e8
   14000345d:	mov    rbx,rcx
   140003460:	mov    QWORD PTR [rcx],rax
   140003463:	cmp    QWORD PTR [rcx+0x30],0x10
   140003468:	jb     0x140003473
   14000346a:	mov    rcx,QWORD PTR [rcx+0x18]
   14000346e:	call   0x140008880
   140003473:	mov    QWORD PTR [rbx+0x30],0xf
   14000347b:	mov    QWORD PTR [rbx+0x28],0x0
   140003483:	mov    rcx,rbx
   140003486:	mov    BYTE PTR [rbx+0x18],0x0
   14000348a:	add    rsp,0x20
   14000348e:	pop    rbx
   14000348f:	rex.W jmp QWORD PTR [rip+0x6d22]        # 0x14000a1b8
   140003496:	int3   
   140003497:	int3   
   140003498:	int3   
   140003499:	int3   
   14000349a:	int3   
   14000349b:	int3   
   14000349c:	int3   
   14000349d:	int3   
   14000349e:	int3   
   14000349f:	int3   
   1400034a0:	mov    eax,DWORD PTR [rcx+0x38]
   1400034a3:	ret    
   1400034a4:	int3   
   1400034a5:	int3   
   1400034a6:	int3   
   1400034a7:	int3   
   1400034a8:	int3   
   1400034a9:	int3   
   1400034aa:	int3   
   1400034ab:	int3   
   1400034ac:	int3   
   1400034ad:	int3   
   1400034ae:	int3   
   1400034af:	int3   
   1400034b0:	cmp    QWORD PTR [rcx+0x30],0x10
   1400034b5:	lea    rax,[rcx+0x18]
   1400034b9:	jb     0x1400034be
   1400034bb:	mov    rax,QWORD PTR [rax]
   1400034be:	ret    
   1400034bf:	int3   
   1400034c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400034c5:	push   rsi
   1400034c6:	push   rdi
   1400034c7:	push   r12
   1400034c9:	push   r14
   1400034cb:	push   r15
   1400034cd:	sub    rsp,0x40
   1400034d1:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400034da:	mov    QWORD PTR [rsp+0x80],rbx
   1400034e2:	mov    r15,rdx
   1400034e5:	mov    rsi,rcx
   1400034e8:	xor    ebx,ebx
   1400034ea:	mov    DWORD PTR [rsp+0x78],ebx
   1400034ee:	mov    r12,QWORD PTR [rdx+0x10]
   1400034f2:	mov    rax,QWORD PTR [rcx]
   1400034f5:	movsxd r8,DWORD PTR [rax+0x4]
   1400034f9:	mov    rdi,QWORD PTR [r8+rcx*1+0x28]
   1400034fe:	test   rdi,rdi
   140003501:	jle    0x14000350d
   140003503:	cmp    rdi,r12
   140003506:	jbe    0x14000350d
   140003508:	sub    rdi,r12
   14000350b:	jmp    0x14000350f
   14000350d:	xor    edi,edi
   14000350f:	mov    r14,rcx
   140003512:	mov    QWORD PTR [rsp+0x28],rcx
   140003517:	mov    rcx,QWORD PTR [r8+rcx*1+0x48]
   14000351c:	test   rcx,rcx
   14000351f:	je     0x140003528
   140003521:	mov    rax,QWORD PTR [rcx]
   140003524:	call   QWORD PTR [rax+0x8]
   140003527:	nop
   140003528:	mov    rax,QWORD PTR [rsi]
   14000352b:	movsxd rcx,DWORD PTR [rax+0x4]
   14000352f:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   140003534:	jne    0x14000354b
   140003536:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   14000353b:	test   rcx,rcx
   14000353e:	je     0x14000354b
   140003540:	cmp    rcx,rsi
   140003543:	je     0x14000354b
   140003545:	call   QWORD PTR [rip+0x6bd5]        # 0x14000a120
   14000354b:	mov    rax,QWORD PTR [rsi]
   14000354e:	movsxd rcx,DWORD PTR [rax+0x4]
   140003552:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   140003557:	sete   al
   14000355a:	mov    BYTE PTR [rsp+0x30],al
   14000355e:	test   al,al
   140003560:	jne    0x14000356c
   140003562:	mov    ebx,0x4
   140003567:	jmp    0x140003630
   14000356c:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   140003570:	and    eax,0x1c0
   140003575:	cmp    eax,0x40
   140003578:	je     0x1400035b3
   14000357a:	nop    WORD PTR [rax+rax*1+0x0]
   140003580:	test   rdi,rdi
   140003583:	je     0x1400035af
   140003585:	mov    rax,QWORD PTR [rsi]
   140003588:	movsxd rcx,DWORD PTR [rax+0x4]
   14000358c:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140003591:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140003596:	call   QWORD PTR [rip+0x6b4c]        # 0x14000a0e8
   14000359c:	cmp    eax,0xffffffff
   14000359f:	jne    0x1400035aa
   1400035a1:	or     ebx,0x4
   1400035a4:	mov    DWORD PTR [rsp+0x78],ebx
   1400035a8:	jmp    0x1400035af
   1400035aa:	dec    rdi
   1400035ad:	jmp    0x140003580
   1400035af:	test   ebx,ebx
   1400035b1:	jne    0x1400035e1
   1400035b3:	cmp    QWORD PTR [r15+0x18],0x10
   1400035b8:	jb     0x1400035bd
   1400035ba:	mov    r15,QWORD PTR [r15]
   1400035bd:	mov    rax,QWORD PTR [rsi]
   1400035c0:	movsxd rcx,DWORD PTR [rax+0x4]
   1400035c4:	mov    r8,r12
   1400035c7:	mov    rdx,r15
   1400035ca:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400035cf:	call   QWORD PTR [rip+0x6b1b]        # 0x14000a0f0
   1400035d5:	cmp    rax,r12
   1400035d8:	je     0x1400035e1
   1400035da:	mov    ebx,0x4
   1400035df:	jmp    0x14000360c
   1400035e1:	test   rdi,rdi
   1400035e4:	je     0x140003610
   1400035e6:	mov    rax,QWORD PTR [rsi]
   1400035e9:	movsxd rcx,DWORD PTR [rax+0x4]
   1400035ed:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   1400035f2:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400035f7:	call   QWORD PTR [rip+0x6aeb]        # 0x14000a0e8
   1400035fd:	cmp    eax,0xffffffff
   140003600:	jne    0x140003607
   140003602:	or     ebx,0x4
   140003605:	jmp    0x14000360c
   140003607:	dec    rdi
   14000360a:	jmp    0x1400035e1
   14000360c:	mov    DWORD PTR [rsp+0x78],ebx
   140003610:	mov    rax,QWORD PTR [rsi]
   140003613:	movsxd rcx,DWORD PTR [rax+0x4]
   140003617:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   140003620:	jmp    0x140003630
   140003622:	mov    rsi,QWORD PTR [rsp+0x70]
   140003627:	mov    ebx,DWORD PTR [rsp+0x78]
   14000362b:	mov    r14,QWORD PTR [rsp+0x28]
   140003630:	mov    rax,QWORD PTR [rsi]
   140003633:	movsxd rcx,DWORD PTR [rax+0x4]
   140003637:	add    rcx,rsi
   14000363a:	xor    r8d,r8d
   14000363d:	mov    edx,ebx
   14000363f:	call   QWORD PTR [rip+0x6acb]        # 0x14000a110
   140003645:	nop
   140003646:	call   QWORD PTR [rip+0x6a3c]        # 0x14000a088
   14000364c:	test   al,al
   14000364e:	jne    0x140003659
   140003650:	mov    rcx,r14
   140003653:	call   QWORD PTR [rip+0x6abf]        # 0x14000a118
   140003659:	mov    rax,QWORD PTR [r14]
   14000365c:	movsxd rcx,DWORD PTR [rax+0x4]
   140003660:	mov    rcx,QWORD PTR [rcx+r14*1+0x48]
   140003665:	test   rcx,rcx
   140003668:	je     0x140003670
   14000366a:	mov    rax,QWORD PTR [rcx]
   14000366d:	call   QWORD PTR [rax+0x10]
   140003670:	mov    rax,rsi
   140003673:	mov    rbx,QWORD PTR [rsp+0x80]
   14000367b:	add    rsp,0x40
   14000367f:	pop    r15
   140003681:	pop    r14
   140003683:	pop    r12
   140003685:	pop    rdi
   140003686:	pop    rsi
   140003687:	ret    
   140003688:	int3   
   140003689:	int3   
   14000368a:	int3   
   14000368b:	int3   
   14000368c:	int3   
   14000368d:	int3   
   14000368e:	int3   
   14000368f:	int3   
   140003690:	rex push rbx
   140003692:	sub    rsp,0x30
   140003696:	mov    rax,r8
   140003699:	xor    r8d,r8d
   14000369c:	mov    r9,rdx
   14000369f:	mov    rbx,rcx
   1400036a2:	mov    DWORD PTR [rsp+0x20],r8d
   1400036a7:	cmp    BYTE PTR [rax],r8b
   1400036aa:	je     0x1400036ba
   1400036ac:	or     r8,0xffffffffffffffff
   1400036b0:	inc    r8
   1400036b3:	cmp    BYTE PTR [rax+r8*1],0x0
   1400036b8:	jne    0x1400036b0
   1400036ba:	mov    rdx,rax
   1400036bd:	mov    rcx,r9
   1400036c0:	call   0x140004650
   1400036c5:	mov    rcx,rbx
   1400036c8:	mov    rdx,rax
   1400036cb:	call   0x140001930
   1400036d0:	mov    rax,rbx
   1400036d3:	add    rsp,0x30
   1400036d7:	pop    rbx
   1400036d8:	ret    
   1400036d9:	int3   
   1400036da:	int3   
   1400036db:	int3   
   1400036dc:	int3   
   1400036dd:	int3   
   1400036de:	int3   
   1400036df:	int3   
   1400036e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400036e5:	push   rsi
   1400036e6:	push   rdi
   1400036e7:	push   r14
   1400036e9:	sub    rsp,0x30
   1400036ed:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400036f6:	mov    QWORD PTR [rsp+0x58],rbx
   1400036fb:	mov    QWORD PTR [rsp+0x60],rbp
   140003700:	mov    rsi,r8
   140003703:	mov    r14,rdx
   140003706:	mov    rdi,rcx
   140003709:	xor    ebx,ebx
   14000370b:	mov    DWORD PTR [rsp+0x20],ebx
   14000370f:	mov    QWORD PTR [rcx+0x18],0xf
   140003717:	mov    QWORD PTR [rcx+0x10],rbx
   14000371b:	mov    BYTE PTR [rcx],bl
   14000371d:	mov    DWORD PTR [rsp+0x20],0x1
   140003725:	mov    rcx,QWORD PTR [rdx+0x10]
   140003729:	cmp    BYTE PTR [r8],bl
   14000372c:	jne    0x140003732
   14000372e:	mov    eax,ebx
   140003730:	jmp    0x140003740
   140003732:	or     rax,0xffffffffffffffff
   140003736:	inc    rax
   140003739:	cmp    BYTE PTR [r8+rax*1],0x0
   14000373e:	jne    0x140003736
   140003740:	lea    rdx,[rax+rcx*1]
   140003744:	cmp    rbx,rdx
   140003747:	ja     0x140003775
   140003749:	cmp    QWORD PTR [rdi+0x18],rdx
   14000374d:	je     0x140003775
   14000374f:	mov    r8b,0x1
   140003752:	mov    rcx,rdi
   140003755:	call   0x1400021d0
   14000375a:	test   al,al
   14000375c:	je     0x140003775
   14000375e:	mov    QWORD PTR [rdi+0x10],rbx
   140003762:	cmp    QWORD PTR [rdi+0x18],0x10
   140003767:	jb     0x14000376e
   140003769:	mov    rax,QWORD PTR [rdi]
   14000376c:	jmp    0x140003771
   14000376e:	mov    rax,rdi
   140003771:	mov    BYTE PTR [rax+rbx*1],0x0
   140003775:	or     r9,0xffffffffffffffff
   140003779:	xor    r8d,r8d
   14000377c:	mov    rdx,r14
   14000377f:	mov    rcx,rdi
   140003782:	call   0x140004510
   140003787:	cmp    BYTE PTR [rsi],0x0
   14000378a:	je     0x140003799
   14000378c:	or     rbx,0xffffffffffffffff
   140003790:	inc    rbx
   140003793:	cmp    BYTE PTR [rsi+rbx*1],0x0
   140003797:	jne    0x140003790
   140003799:	mov    r8,rbx
   14000379c:	mov    rdx,rsi
   14000379f:	mov    rcx,rdi
   1400037a2:	call   0x140004650
   1400037a7:	mov    rax,rdi
   1400037aa:	mov    rbx,QWORD PTR [rsp+0x58]
   1400037af:	mov    rbp,QWORD PTR [rsp+0x60]
   1400037b4:	add    rsp,0x30
   1400037b8:	pop    r14
   1400037ba:	pop    rdi
   1400037bb:	pop    rsi
   1400037bc:	ret    
   1400037bd:	int3   
   1400037be:	int3   
   1400037bf:	int3   
   1400037c0:	rex push rbx
   1400037c2:	sub    rsp,0x30
   1400037c6:	xor    r9d,r9d
   1400037c9:	mov    rax,r8
   1400037cc:	mov    rbx,rcx
   1400037cf:	mov    DWORD PTR [rsp+0x20],r9d
   1400037d4:	cmp    BYTE PTR [rdx],r9b
   1400037d7:	je     0x1400037ea
   1400037d9:	or     r9,0xffffffffffffffff
   1400037dd:	nop    DWORD PTR [rax]
   1400037e0:	inc    r9
   1400037e3:	cmp    BYTE PTR [rdx+r9*1],0x0
   1400037e8:	jne    0x1400037e0
   1400037ea:	mov    r8,rdx
   1400037ed:	mov    rcx,rax
   1400037f0:	xor    edx,edx
   1400037f2:	call   0x140004e70
   1400037f7:	mov    rcx,rbx
   1400037fa:	mov    rdx,rax
   1400037fd:	call   0x140001930
   140003802:	mov    rax,rbx
   140003805:	add    rsp,0x30
   140003809:	pop    rbx
   14000380a:	ret    
   14000380b:	int3   
   14000380c:	int3   
   14000380d:	int3   
   14000380e:	int3   
   14000380f:	int3   
   140003810:	mov    QWORD PTR [rsp+0x8],rcx
   140003815:	push   rsi
   140003816:	push   rdi
   140003817:	push   r14
   140003819:	sub    rsp,0x30
   14000381d:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140003826:	mov    QWORD PTR [rsp+0x58],rbx
   14000382b:	mov    QWORD PTR [rsp+0x60],rbp
   140003830:	mov    r14,r8
   140003833:	mov    rsi,rdx
   140003836:	mov    rdi,rcx
   140003839:	xor    ebx,ebx
   14000383b:	mov    DWORD PTR [rsp+0x20],ebx
   14000383f:	mov    QWORD PTR [rcx+0x18],0xf
   140003847:	mov    QWORD PTR [rcx+0x10],rbx
   14000384b:	mov    BYTE PTR [rcx],bl
   14000384d:	mov    DWORD PTR [rsp+0x20],0x1
   140003855:	cmp    BYTE PTR [rdx],bl
   140003857:	jne    0x14000385d
   140003859:	mov    ecx,ebx
   14000385b:	jmp    0x14000386a
   14000385d:	or     rcx,0xffffffffffffffff
   140003861:	inc    rcx
   140003864:	cmp    BYTE PTR [rdx+rcx*1],0x0
   140003868:	jne    0x140003861
   14000386a:	mov    rdx,QWORD PTR [r8+0x10]
   14000386e:	add    rdx,rcx
   140003871:	cmp    rbx,rdx
   140003874:	ja     0x1400038a2
   140003876:	cmp    QWORD PTR [rdi+0x18],rdx
   14000387a:	je     0x1400038a2
   14000387c:	mov    r8b,0x1
   14000387f:	mov    rcx,rdi
   140003882:	call   0x1400021d0
   140003887:	test   al,al
   140003889:	je     0x1400038a2
   14000388b:	mov    QWORD PTR [rdi+0x10],rbx
   14000388f:	cmp    QWORD PTR [rdi+0x18],0x10
   140003894:	jb     0x14000389b
   140003896:	mov    rax,QWORD PTR [rdi]
   140003899:	jmp    0x14000389e
   14000389b:	mov    rax,rdi
   14000389e:	mov    BYTE PTR [rax+rbx*1],0x0
   1400038a2:	cmp    BYTE PTR [rsi],0x0
   1400038a5:	je     0x1400038b9
   1400038a7:	or     rbx,0xffffffffffffffff
   1400038ab:	nop    DWORD PTR [rax+rax*1+0x0]
   1400038b0:	inc    rbx
   1400038b3:	cmp    BYTE PTR [rsi+rbx*1],0x0
   1400038b7:	jne    0x1400038b0
   1400038b9:	mov    r8,rbx
   1400038bc:	mov    rdx,rsi
   1400038bf:	mov    rcx,rdi
   1400038c2:	call   0x140004650
   1400038c7:	or     r9,0xffffffffffffffff
   1400038cb:	xor    r8d,r8d
   1400038ce:	mov    rdx,r14
   1400038d1:	mov    rcx,rdi
   1400038d4:	call   0x140004510
   1400038d9:	mov    rax,rdi
   1400038dc:	mov    rbx,QWORD PTR [rsp+0x58]
   1400038e1:	mov    rbp,QWORD PTR [rsp+0x60]
   1400038e6:	add    rsp,0x30
   1400038ea:	pop    r14
   1400038ec:	pop    rdi
   1400038ed:	pop    rsi
   1400038ee:	ret    
   1400038ef:	int3   
   1400038f0:	rex push rbx
   1400038f2:	sub    rsp,0x20
   1400038f6:	mov    rbx,rcx
   1400038f9:	mov    rcx,rdx
   1400038fc:	call   QWORD PTR [rip+0x6a6e]        # 0x14000a370
   140003902:	cmp    eax,0xffffffff
   140003905:	jne    0x14000390f
   140003907:	xor    al,al
   140003909:	add    rsp,0x20
   14000390d:	pop    rbx
   14000390e:	ret    
   14000390f:	mov    BYTE PTR [rbx],al
   140003911:	mov    al,0x1
   140003913:	add    rsp,0x20
   140003917:	pop    rbx
   140003918:	ret    
   140003919:	int3   
   14000391a:	int3   
   14000391b:	int3   
   14000391c:	int3   
   14000391d:	int3   
   14000391e:	int3   
   14000391f:	int3   
   140003920:	sub    rsp,0x28
   140003924:	movsx  ecx,cl
   140003927:	call   QWORD PTR [rip+0x68d3]        # 0x14000a200
   14000392d:	cmp    eax,0xffffffff
   140003930:	setne  al
   140003933:	add    rsp,0x28
   140003937:	ret    
   140003938:	int3   
   140003939:	int3   
   14000393a:	int3   
   14000393b:	int3   
   14000393c:	int3   
   14000393d:	int3   
   14000393e:	int3   
   14000393f:	int3   
   140003940:	sub    rsp,0x28
   140003944:	movzx  ecx,BYTE PTR [rcx]
   140003947:	call   QWORD PTR [rip+0x68db]        # 0x14000a228
   14000394d:	cmp    eax,0xffffffff
   140003950:	setne  al
   140003953:	add    rsp,0x28
   140003957:	ret    
   140003958:	int3   
   140003959:	int3   
   14000395a:	int3   
   14000395b:	int3   
   14000395c:	int3   
   14000395d:	int3   
   14000395e:	int3   
   14000395f:	int3   
   140003960:	mov    rax,rcx
   140003963:	ret    
   140003964:	int3   
   140003965:	int3   
   140003966:	int3   
   140003967:	int3   
   140003968:	int3   
   140003969:	int3   
   14000396a:	int3   
   14000396b:	int3   
   14000396c:	int3   
   14000396d:	int3   
   14000396e:	int3   
   14000396f:	int3   
   140003970:	rex push rdi
   140003972:	sub    rsp,0x40
   140003976:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000397f:	mov    QWORD PTR [rsp+0x60],rbx
   140003984:	mov    QWORD PTR [rsp+0x68],rsi
   140003989:	mov    rsi,rcx
   14000398c:	xor    edx,edx
   14000398e:	lea    rcx,[rsp+0x50]
   140003993:	call   QWORD PTR [rip+0x66df]        # 0x14000a078
   140003999:	nop
   14000399a:	mov    rax,QWORD PTR [rip+0xbc0f]        # 0x14000f5b0
   1400039a1:	mov    QWORD PTR [rsp+0x58],rax
   1400039a6:	mov    rcx,QWORD PTR [rip+0x67b3]        # 0x14000a160
   1400039ad:	call   QWORD PTR [rip+0x66dd]        # 0x14000a090
   1400039b3:	mov    rdi,rax
   1400039b6:	mov    rax,QWORD PTR [rsi]
   1400039b9:	cmp    rdi,QWORD PTR [rax+0x18]
   1400039bd:	jae    0x1400039d2
   1400039bf:	mov    rcx,QWORD PTR [rax+0x10]
   1400039c3:	mov    rbx,QWORD PTR [rcx+rdi*8]
   1400039c7:	test   rbx,rbx
   1400039ca:	jne    0x140003a53
   1400039d0:	jmp    0x1400039d4
   1400039d2:	xor    ebx,ebx
   1400039d4:	cmp    BYTE PTR [rax+0x24],0x0
   1400039d8:	je     0x1400039ee
   1400039da:	call   QWORD PTR [rip+0x66b8]        # 0x14000a098
   1400039e0:	cmp    rdi,QWORD PTR [rax+0x18]
   1400039e4:	jae    0x1400039f3
   1400039e6:	mov    rax,QWORD PTR [rax+0x10]
   1400039ea:	mov    rbx,QWORD PTR [rax+rdi*8]
   1400039ee:	test   rbx,rbx
   1400039f1:	jne    0x140003a53
   1400039f3:	mov    rbx,QWORD PTR [rsp+0x58]
   1400039f8:	test   rbx,rbx
   1400039fb:	jne    0x140003a53
   1400039fd:	mov    rdx,rsi
   140003a00:	lea    rcx,[rsp+0x58]
   140003a05:	call   QWORD PTR [rip+0x66b5]        # 0x14000a0c0
   140003a0b:	cmp    rax,0xffffffffffffffff
   140003a0f:	jne    0x140003a35
   140003a11:	lea    rdx,[rip+0x7168]        # 0x14000ab80
   140003a18:	lea    rcx,[rsp+0x28]
   140003a1d:	call   QWORD PTR [rip+0x6825]        # 0x14000a248
   140003a23:	lea    rdx,[rip+0x9956]        # 0x14000d380
   140003a2a:	lea    rcx,[rsp+0x28]
   140003a2f:	call   0x1400089b8
   140003a34:	int3   
   140003a35:	mov    rbx,QWORD PTR [rsp+0x58]
   140003a3a:	mov    QWORD PTR [rip+0xbb6f],rbx        # 0x14000f5b0
   140003a41:	mov    rax,QWORD PTR [rbx]
   140003a44:	mov    rcx,rbx
   140003a47:	call   QWORD PTR [rax+0x8]
   140003a4a:	mov    rcx,rbx
   140003a4d:	call   0x1400087a4
   140003a52:	nop
   140003a53:	lea    rcx,[rsp+0x50]
   140003a58:	call   QWORD PTR [rip+0x6622]        # 0x14000a080
   140003a5e:	mov    rax,rbx
   140003a61:	mov    rbx,QWORD PTR [rsp+0x60]
   140003a66:	mov    rsi,QWORD PTR [rsp+0x68]
   140003a6b:	add    rsp,0x40
   140003a6f:	pop    rdi
   140003a70:	ret    
   140003a71:	int3   
   140003a72:	int3   
   140003a73:	int3   
   140003a74:	int3   
   140003a75:	int3   
   140003a76:	int3   
   140003a77:	int3   
   140003a78:	int3   
   140003a79:	int3   
   140003a7a:	int3   
   140003a7b:	int3   
   140003a7c:	int3   
   140003a7d:	int3   
   140003a7e:	int3   
   140003a7f:	int3   
   140003a80:	mov    QWORD PTR [rcx],rdx
   140003a83:	mov    rax,rcx
   140003a86:	ret    
   140003a87:	int3   
   140003a88:	int3   
   140003a89:	int3   
   140003a8a:	int3   
   140003a8b:	int3   
   140003a8c:	int3   
   140003a8d:	int3   
   140003a8e:	int3   
   140003a8f:	int3   
   140003a90:	mov    QWORD PTR [rcx],rdx
   140003a93:	mov    rax,rcx
   140003a96:	ret    
   140003a97:	int3   
   140003a98:	int3   
   140003a99:	int3   
   140003a9a:	int3   
   140003a9b:	int3   
   140003a9c:	int3   
   140003a9d:	int3   
   140003a9e:	int3   
   140003a9f:	int3   
   140003aa0:	mov    QWORD PTR [rsp+0x8],rcx
   140003aa5:	push   rdi
   140003aa6:	sub    rsp,0x30
   140003aaa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003ab3:	mov    QWORD PTR [rsp+0x48],rbx
   140003ab8:	mov    rdi,rdx
   140003abb:	mov    rbx,rcx
   140003abe:	call   QWORD PTR [rip+0x660c]        # 0x14000a0d0
   140003ac4:	nop
   140003ac5:	lea    rax,[rip+0x701c]        # 0x14000aae8
   140003acc:	mov    QWORD PTR [rbx],rax
   140003acf:	mov    BYTE PTR [rbx+0x88],0x0
   140003ad6:	mov    BYTE PTR [rbx+0x81],0x0
   140003add:	mov    rcx,rbx
   140003ae0:	call   QWORD PTR [rip+0x661a]        # 0x14000a100
   140003ae6:	test   rdi,rdi
   140003ae9:	je     0x140003b0b
   140003aeb:	lea    rax,[rdi+0x10]
   140003aef:	lea    rcx,[rdi+0x8]
   140003af3:	mov    QWORD PTR [rbx+0x18],rax
   140003af7:	mov    QWORD PTR [rbx+0x20],rax
   140003afb:	mov    QWORD PTR [rbx+0x38],rdi
   140003aff:	mov    QWORD PTR [rbx+0x40],rdi
   140003b03:	mov    QWORD PTR [rbx+0x50],rcx
   140003b07:	mov    QWORD PTR [rbx+0x58],rcx
   140003b0b:	mov    QWORD PTR [rbx+0x90],rdi
   140003b12:	mov    eax,DWORD PTR [rip+0xba94]        # 0x14000f5ac
   140003b18:	mov    DWORD PTR [rbx+0x84],eax
   140003b1e:	mov    QWORD PTR [rbx+0x78],0x0
   140003b26:	mov    rax,rbx
   140003b29:	mov    rbx,QWORD PTR [rsp+0x48]
   140003b2e:	add    rsp,0x30
   140003b32:	pop    rdi
   140003b33:	ret    
   140003b34:	int3   
   140003b35:	int3   
   140003b36:	int3   
   140003b37:	int3   
   140003b38:	int3   
   140003b39:	int3   
   140003b3a:	int3   
   140003b3b:	int3   
   140003b3c:	int3   
   140003b3d:	int3   
   140003b3e:	int3   
   140003b3f:	int3   
   140003b40:	mov    QWORD PTR [rsp+0x8],rcx
   140003b45:	push   rsi
   140003b46:	push   rdi
   140003b47:	push   r14
   140003b49:	sub    rsp,0x40
   140003b4d:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140003b56:	mov    QWORD PTR [rsp+0x68],rbx
   140003b5b:	mov    QWORD PTR [rsp+0x70],rbp
   140003b60:	mov    esi,r9d
   140003b63:	mov    ebp,r8d
   140003b66:	mov    r14,rdx
   140003b69:	mov    rdi,rcx
   140003b6c:	mov    DWORD PTR [rsp+0x20],0x0
   140003b74:	cmp    DWORD PTR [rsp+0x80],0x0
   140003b7c:	je     0x140003bb7
   140003b7e:	lea    rax,[rip+0x6feb]        # 0x14000ab70
   140003b85:	mov    QWORD PTR [rcx],rax
   140003b88:	lea    rax,[rip+0x6fe9]        # 0x14000ab78
   140003b8f:	mov    QWORD PTR [rcx+0x10],rax
   140003b93:	mov    rax,QWORD PTR [rip+0x65ce]        # 0x14000a168
   140003b9a:	mov    QWORD PTR [rcx+0xb8],rax
   140003ba1:	mov    rax,QWORD PTR [rip+0x65c8]        # 0x14000a170
   140003ba8:	mov    QWORD PTR [rcx+0xb8],rax
   140003baf:	mov    DWORD PTR [rsp+0x20],0x1
   140003bb7:	lea    rbx,[rcx+0x18]
   140003bbb:	xor    r8d,r8d
   140003bbe:	mov    rdx,rbx
   140003bc1:	call   QWORD PTR [rip+0x6561]        # 0x14000a128
   140003bc7:	nop
   140003bc8:	mov    rax,QWORD PTR [rdi]
   140003bcb:	movsxd rcx,DWORD PTR [rax+0x4]
   140003bcf:	lea    rax,[rip+0x6f92]        # 0x14000ab68
   140003bd6:	mov    QWORD PTR [rcx+rdi*1],rax
   140003bda:	mov    rax,QWORD PTR [rdi]
   140003bdd:	movsxd rcx,DWORD PTR [rax+0x4]
   140003be1:	lea    edx,[rcx-0xb8]
   140003be7:	mov    DWORD PTR [rcx+rdi*1-0x4],edx
   140003beb:	mov    QWORD PTR [rsp+0x30],rbx
   140003bf0:	mov    rcx,rbx
   140003bf3:	call   QWORD PTR [rip+0x64d7]        # 0x14000a0d0
   140003bf9:	nop
   140003bfa:	lea    rax,[rip+0x6ee7]        # 0x14000aae8
   140003c01:	mov    QWORD PTR [rbx],rax
   140003c04:	mov    BYTE PTR [rbx+0x88],0x0
   140003c0b:	mov    BYTE PTR [rbx+0x81],0x0
   140003c12:	mov    rcx,rbx
   140003c15:	call   QWORD PTR [rip+0x64e5]        # 0x14000a100
   140003c1b:	mov    QWORD PTR [rbx+0x90],0x0
   140003c26:	mov    eax,DWORD PTR [rip+0xb980]        # 0x14000f5ac
   140003c2c:	mov    DWORD PTR [rbx+0x84],eax
   140003c32:	mov    QWORD PTR [rbx+0x78],0x0
   140003c3a:	mov    r9d,esi
   140003c3d:	mov    r8d,ebp
   140003c40:	mov    rdx,r14
   140003c43:	mov    rcx,rbx
   140003c46:	call   0x1400051d0
   140003c4b:	test   rax,rax
   140003c4e:	jne    0x140003c68
   140003c50:	mov    rax,QWORD PTR [rdi]
   140003c53:	movsxd rcx,DWORD PTR [rax+0x4]
   140003c57:	add    rcx,rdi
   140003c5a:	xor    r8d,r8d
   140003c5d:	lea    edx,[r8+0x2]
   140003c61:	call   QWORD PTR [rip+0x64a9]        # 0x14000a110
   140003c67:	nop
   140003c68:	mov    rax,rdi
   140003c6b:	mov    rbx,QWORD PTR [rsp+0x68]
   140003c70:	mov    rbp,QWORD PTR [rsp+0x70]
   140003c75:	add    rsp,0x40
   140003c79:	pop    r14
   140003c7b:	pop    rdi
   140003c7c:	pop    rsi
   140003c7d:	ret    
   140003c7e:	int3   
   140003c7f:	int3   
   140003c80:	mov    QWORD PTR [rcx+0x18],0xf
   140003c88:	mov    QWORD PTR [rcx+0x10],0x0
   140003c90:	mov    rax,rcx
   140003c93:	mov    BYTE PTR [rcx],0x0
   140003c96:	ret    
   140003c97:	int3   
   140003c98:	int3   
   140003c99:	int3   
   140003c9a:	int3   
   140003c9b:	int3   
   140003c9c:	int3   
   140003c9d:	int3   
   140003c9e:	int3   
   140003c9f:	int3   
   140003ca0:	rex push rbx
   140003ca2:	sub    rsp,0x20
   140003ca6:	mov    QWORD PTR [rcx+0x18],0xf
   140003cae:	mov    QWORD PTR [rcx+0x10],0x0
   140003cb6:	mov    rbx,rcx
   140003cb9:	mov    BYTE PTR [rcx],0x0
   140003cbc:	call   0x1400048b0
   140003cc1:	mov    rax,rbx
   140003cc4:	add    rsp,0x20
   140003cc8:	pop    rbx
   140003cc9:	ret    
   140003cca:	int3   
   140003ccb:	int3   
   140003ccc:	int3   
   140003ccd:	int3   
   140003cce:	int3   
   140003ccf:	int3   
   140003cd0:	mov    QWORD PTR [rcx],0x0
   140003cd7:	mov    QWORD PTR [rcx+0x8],r8
   140003cdb:	mov    DWORD PTR [rcx+0x10],edx
   140003cde:	mov    rax,rcx
   140003ce1:	ret    
   140003ce2:	int3   
   140003ce3:	int3   
   140003ce4:	int3   
   140003ce5:	int3   
   140003ce6:	int3   
   140003ce7:	int3   
   140003ce8:	int3   
   140003ce9:	int3   
   140003cea:	int3   
   140003ceb:	int3   
   140003cec:	int3   
   140003ced:	int3   
   140003cee:	int3   
   140003cef:	int3   
   140003cf0:	xor    eax,eax
   140003cf2:	mov    QWORD PTR [rcx],rdx
   140003cf5:	mov    QWORD PTR [rcx+0x8],rax
   140003cf9:	mov    DWORD PTR [rcx+0x10],eax
   140003cfc:	mov    rax,rcx
   140003cff:	ret    
   140003d00:	rex push rbx
   140003d02:	sub    rsp,0x20
   140003d06:	mov    QWORD PTR [rcx],rdx
   140003d09:	mov    rax,QWORD PTR [rdx]
   140003d0c:	mov    rbx,rcx
   140003d0f:	movsxd r8,DWORD PTR [rax+0x4]
   140003d13:	mov    rcx,QWORD PTR [r8+rdx*1+0x48]
   140003d18:	test   rcx,rcx
   140003d1b:	je     0x140003d23
   140003d1d:	mov    rax,QWORD PTR [rcx]
   140003d20:	call   QWORD PTR [rax+0x8]
   140003d23:	mov    rax,rbx
   140003d26:	add    rsp,0x20
   140003d2a:	pop    rbx
   140003d2b:	ret    
   140003d2c:	int3   
   140003d2d:	int3   
   140003d2e:	int3   
   140003d2f:	int3   
   140003d30:	mov    QWORD PTR [rsp+0x8],rcx
   140003d35:	push   rdi
   140003d36:	sub    rsp,0x30
   140003d3a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003d43:	mov    QWORD PTR [rsp+0x48],rbx
   140003d48:	mov    rbx,rdx
   140003d4b:	mov    rdi,rcx
   140003d4e:	mov    QWORD PTR [rcx],rdx
   140003d51:	mov    rax,QWORD PTR [rdx]
   140003d54:	movsxd r8,DWORD PTR [rax+0x4]
   140003d58:	mov    rcx,QWORD PTR [r8+rdx*1+0x48]
   140003d5d:	test   rcx,rcx
   140003d60:	je     0x140003d69
   140003d62:	mov    rax,QWORD PTR [rcx]
   140003d65:	call   QWORD PTR [rax+0x8]
   140003d68:	nop
   140003d69:	mov    rax,QWORD PTR [rbx]
   140003d6c:	movsxd rcx,DWORD PTR [rax+0x4]
   140003d70:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   140003d75:	jne    0x140003d8c
   140003d77:	mov    rcx,QWORD PTR [rcx+rbx*1+0x50]
   140003d7c:	test   rcx,rcx
   140003d7f:	je     0x140003d8c
   140003d81:	cmp    rcx,rbx
   140003d84:	je     0x140003d8c
   140003d86:	call   QWORD PTR [rip+0x6394]        # 0x14000a120
   140003d8c:	mov    rax,QWORD PTR [rbx]
   140003d8f:	movsxd rcx,DWORD PTR [rax+0x4]
   140003d93:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   140003d98:	sete   al
   140003d9b:	mov    BYTE PTR [rdi+0x8],al
   140003d9e:	mov    rax,rdi
   140003da1:	mov    rbx,QWORD PTR [rsp+0x48]
   140003da6:	add    rsp,0x30
   140003daa:	pop    rdi
   140003dab:	ret    
   140003dac:	int3   
   140003dad:	int3   
   140003dae:	int3   
   140003daf:	int3   
   140003db0:	rex push rbx
   140003db2:	sub    rsp,0x20
   140003db6:	cmp    QWORD PTR [rcx+0x90],0x0
   140003dbe:	lea    rax,[rip+0x6d23]        # 0x14000aae8
   140003dc5:	mov    rbx,rcx
   140003dc8:	mov    QWORD PTR [rcx],rax
   140003dcb:	je     0x140003df9
   140003dcd:	mov    rcx,QWORD PTR [rcx+0x18]
   140003dd1:	lea    rax,[rbx+0x80]
   140003dd8:	cmp    QWORD PTR [rcx],rax
   140003ddb:	jne    0x140003df9
   140003ddd:	mov    rdx,QWORD PTR [rbx+0x68]
   140003de1:	mov    r8,QWORD PTR [rbx+0x70]
   140003de5:	mov    QWORD PTR [rcx],rdx
   140003de8:	mov    rax,QWORD PTR [rbx+0x38]
   140003dec:	sub    r8d,edx
   140003def:	mov    QWORD PTR [rax],rdx
   140003df2:	mov    rax,QWORD PTR [rbx+0x50]
   140003df6:	mov    DWORD PTR [rax],r8d
   140003df9:	cmp    BYTE PTR [rbx+0x88],0x0
   140003e00:	je     0x140003e0a
   140003e02:	mov    rcx,rbx
   140003e05:	call   0x140004a00
   140003e0a:	mov    rcx,rbx
   140003e0d:	add    rsp,0x20
   140003e11:	pop    rbx
   140003e12:	rex.W jmp QWORD PTR [rip+0x62bf]        # 0x14000a0d8
   140003e19:	int3   
   140003e1a:	int3   
   140003e1b:	int3   
   140003e1c:	int3   
   140003e1d:	int3   
   140003e1e:	int3   
   140003e1f:	int3   
   140003e20:	rex push rbx
   140003e22:	sub    rsp,0x20
   140003e26:	mov    rax,QWORD PTR [rcx-0xb8]
   140003e2d:	mov    rbx,rcx
   140003e30:	add    rcx,0xffffffffffffff60
   140003e37:	movsxd rdx,DWORD PTR [rax+0x4]
   140003e3b:	lea    rax,[rip+0x6d26]        # 0x14000ab68
   140003e42:	mov    QWORD PTR [rdx+rcx*1-0x18],rax
   140003e47:	mov    rax,QWORD PTR [rcx-0x18]
   140003e4b:	movsxd rdx,DWORD PTR [rax+0x4]
   140003e4f:	lea    r8d,[rdx-0xb8]
   140003e56:	mov    DWORD PTR [rdx+rcx*1-0x1c],r8d
   140003e5b:	call   0x140003db0
   140003e60:	lea    rcx,[rbx-0x98]
   140003e67:	add    rsp,0x20
   140003e6b:	pop    rbx
   140003e6c:	rex.W jmp QWORD PTR [rip+0x62bd]        # 0x14000a130
   140003e73:	int3   
   140003e74:	int3   
   140003e75:	int3   
   140003e76:	int3   
   140003e77:	int3   
   140003e78:	int3   
   140003e79:	int3   
   140003e7a:	int3   
   140003e7b:	int3   
   140003e7c:	int3   
   140003e7d:	int3   
   140003e7e:	int3   
   140003e7f:	int3   
   140003e80:	mov    rdx,QWORD PTR [rcx]
   140003e83:	mov    rax,QWORD PTR [rdx]
   140003e86:	movsxd rcx,DWORD PTR [rax+0x4]
   140003e8a:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140003e8f:	test   rcx,rcx
   140003e92:	je     0x140003e9b
   140003e94:	mov    rax,QWORD PTR [rcx]
   140003e97:	rex.W jmp QWORD PTR [rax+0x10]
   140003e9b:	ret    
   140003e9c:	int3   
   140003e9d:	int3   
   140003e9e:	int3   
   140003e9f:	int3   
   140003ea0:	sub    rsp,0x28
   140003ea4:	mov    rcx,QWORD PTR [rcx]
   140003ea7:	test   rcx,rcx
   140003eaa:	je     0x140003ec9
   140003eac:	mov    rax,QWORD PTR [rcx]
   140003eaf:	call   QWORD PTR [rax+0x10]
   140003eb2:	test   rax,rax
   140003eb5:	je     0x140003ec9
   140003eb7:	mov    r8,QWORD PTR [rax]
   140003eba:	mov    edx,0x1
   140003ebf:	mov    rcx,rax
   140003ec2:	add    rsp,0x28
   140003ec6:	rex.WB jmp QWORD PTR [r8]
   140003ec9:	add    rsp,0x28
   140003ecd:	ret    
   140003ece:	int3   
   140003ecf:	int3   
   140003ed0:	rex push rbx
   140003ed2:	sub    rsp,0x20
   140003ed6:	mov    rbx,rcx
   140003ed9:	call   QWORD PTR [rip+0x61a9]        # 0x14000a088
   140003edf:	test   al,al
   140003ee1:	jne    0x140003eec
   140003ee3:	mov    rcx,QWORD PTR [rbx]
   140003ee6:	call   QWORD PTR [rip+0x622c]        # 0x14000a118
   140003eec:	mov    rdx,QWORD PTR [rbx]
   140003eef:	mov    rax,QWORD PTR [rdx]
   140003ef2:	movsxd rcx,DWORD PTR [rax+0x4]
   140003ef6:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   140003efb:	test   rcx,rcx
   140003efe:	je     0x140003f0c
   140003f00:	mov    rax,QWORD PTR [rcx]
   140003f03:	add    rsp,0x20
   140003f07:	pop    rbx
   140003f08:	rex.W jmp QWORD PTR [rax+0x10]
   140003f0c:	add    rsp,0x20
   140003f10:	pop    rbx
   140003f11:	ret    
   140003f12:	int3   
   140003f13:	int3   
   140003f14:	int3   
   140003f15:	int3   
   140003f16:	int3   
   140003f17:	int3   
   140003f18:	int3   
   140003f19:	int3   
   140003f1a:	int3   
   140003f1b:	int3   
   140003f1c:	int3   
   140003f1d:	int3   
   140003f1e:	int3   
   140003f1f:	int3   
   140003f20:	cmp    BYTE PTR [rdx],0x0
   140003f23:	jne    0x140003f2d
   140003f25:	xor    r8d,r8d
   140003f28:	jmp    0x140002b00
   140003f2d:	or     r8,0xffffffffffffffff
   140003f31:	inc    r8
   140003f34:	cmp    BYTE PTR [rdx+r8*1],0x0
   140003f39:	jne    0x140003f31
   140003f3b:	jmp    0x140002b00
   140003f40:	mov    rax,QWORD PTR [rcx+0x8]
   140003f44:	add    rax,QWORD PTR [rcx]
   140003f47:	ret    
   140003f48:	int3   
   140003f49:	int3   
   140003f4a:	int3   
   140003f4b:	int3   
   140003f4c:	int3   
   140003f4d:	int3   
   140003f4e:	int3   
   140003f4f:	int3   
   140003f50:	movzx  eax,BYTE PTR [rcx+0x8]
   140003f54:	ret    
   140003f55:	int3   
   140003f56:	int3   
   140003f57:	int3   
   140003f58:	int3   
   140003f59:	int3   
   140003f5a:	int3   
   140003f5b:	int3   
   140003f5c:	int3   
   140003f5d:	int3   
   140003f5e:	int3   
   140003f5f:	int3   
   140003f60:	mov    rax,QWORD PTR [rcx]
   140003f63:	ret    
   140003f64:	int3   
   140003f65:	int3   
   140003f66:	int3   
   140003f67:	int3   
   140003f68:	int3   
   140003f69:	int3   
   140003f6a:	int3   
   140003f6b:	int3   
   140003f6c:	int3   
   140003f6d:	int3   
   140003f6e:	int3   
   140003f6f:	int3   
   140003f70:	mov    rax,QWORD PTR [rcx]
   140003f73:	ret    
   140003f74:	int3   
   140003f75:	int3   
   140003f76:	int3   
   140003f77:	int3   
   140003f78:	int3   
   140003f79:	int3   
   140003f7a:	int3   
   140003f7b:	int3   
   140003f7c:	int3   
   140003f7d:	int3   
   140003f7e:	int3   
   140003f7f:	int3   
   140003f80:	or     r9,0xffffffffffffffff
   140003f84:	xor    r8d,r8d
   140003f87:	jmp    0x140004510
   140003f8c:	int3   
   140003f8d:	int3   
   140003f8e:	int3   
   140003f8f:	int3   
   140003f90:	cmp    BYTE PTR [rdx],0x0
   140003f93:	jne    0x140003f9d
   140003f95:	xor    r8d,r8d
   140003f98:	jmp    0x140004650
   140003f9d:	or     r8,0xffffffffffffffff
   140003fa1:	inc    r8
   140003fa4:	cmp    BYTE PTR [rdx+r8*1],0x0
   140003fa9:	jne    0x140003fa1
   140003fab:	jmp    0x140004650
   140003fb0:	rex push rbx
   140003fb2:	sub    rsp,0x20
   140003fb6:	mov    rax,QWORD PTR [rcx]
   140003fb9:	lea    rbx,[rcx+0xb8]
   140003fc0:	movsxd rcx,DWORD PTR [rax+0x4]
   140003fc4:	lea    rax,[rip+0x6b9d]        # 0x14000ab68
   140003fcb:	mov    QWORD PTR [rcx+rbx*1-0xb8],rax
   140003fd3:	mov    rax,QWORD PTR [rbx-0xb8]
   140003fda:	lea    rcx,[rbx-0xa0]
   140003fe1:	movsxd rdx,DWORD PTR [rax+0x4]
   140003fe5:	lea    r8d,[rdx-0xb8]
   140003fec:	mov    DWORD PTR [rdx+rbx*1-0xbc],r8d
   140003ff4:	call   0x140003db0
   140003ff9:	lea    rcx,[rbx-0x98]
   140004000:	call   QWORD PTR [rip+0x612a]        # 0x14000a130
   140004006:	mov    rax,QWORD PTR [rip+0x6163]        # 0x14000a170
   14000400d:	mov    rcx,rbx
   140004010:	mov    QWORD PTR [rbx],rax
   140004013:	mov    rax,QWORD PTR [rip+0x614e]        # 0x14000a168
   14000401a:	mov    QWORD PTR [rbx],rax
   14000401d:	add    rsp,0x20
   140004021:	pop    rbx
   140004022:	rex.W jmp QWORD PTR [rip+0x609f]        # 0x14000a0c8
   140004029:	int3   
   14000402a:	int3   
   14000402b:	int3   
   14000402c:	movsxd rax,DWORD PTR [rcx-0x4]
   140004030:	sub    rcx,rax
   140004033:	jmp    0x140004070
   140004038:	int3   
   140004039:	int3   
   14000403a:	int3   
   14000403b:	int3   
   14000403c:	int3   
   14000403d:	int3   
   14000403e:	int3   
   14000403f:	int3   
   140004040:	mov    QWORD PTR [rsp+0x8],rbx
   140004045:	push   rdi
   140004046:	sub    rsp,0x20
   14000404a:	mov    ebx,edx
   14000404c:	mov    rdi,rcx
   14000404f:	call   0x140003db0
   140004054:	test   bl,0x1
   140004057:	je     0x140004061
   140004059:	mov    rcx,rdi
   14000405c:	call   0x140008880
   140004061:	mov    rax,rdi
   140004064:	mov    rbx,QWORD PTR [rsp+0x30]
   140004069:	add    rsp,0x20
   14000406d:	pop    rdi
   14000406e:	ret    
   14000406f:	int3   
   140004070:	mov    QWORD PTR [rsp+0x8],rbx
   140004075:	push   rdi
   140004076:	sub    rsp,0x20
   14000407a:	lea    rdi,[rcx-0xb8]
   140004081:	mov    ebx,edx
   140004083:	mov    rcx,rdi
   140004086:	call   0x140003fb0
   14000408b:	test   bl,0x1
   14000408e:	je     0x140004098
   140004090:	mov    rcx,rdi
   140004093:	call   0x140008880
   140004098:	mov    rax,rdi
   14000409b:	mov    rbx,QWORD PTR [rsp+0x30]
   1400040a0:	add    rsp,0x20
   1400040a4:	pop    rdi
   1400040a5:	ret    
   1400040a6:	int3   
   1400040a7:	int3   
   1400040a8:	int3   
   1400040a9:	int3   
   1400040aa:	int3   
   1400040ab:	int3   
   1400040ac:	int3   
   1400040ad:	int3   
   1400040ae:	int3   
   1400040af:	int3   
   1400040b0:	ret    0x0
   1400040b3:	int3   
   1400040b4:	int3   
   1400040b5:	int3   
   1400040b6:	int3   
   1400040b7:	int3   
   1400040b8:	int3   
   1400040b9:	int3   
   1400040ba:	int3   
   1400040bb:	int3   
   1400040bc:	int3   
   1400040bd:	int3   
   1400040be:	int3   
   1400040bf:	int3   
   1400040c0:	mov    rax,rdx
   1400040c3:	cmp    r8,0x1
   1400040c7:	jne    0x1400040d8
   1400040c9:	cmp    QWORD PTR [rcx+0x18],0x10
   1400040ce:	jb     0x1400040d3
   1400040d0:	mov    rcx,QWORD PTR [rcx]
   1400040d3:	mov    BYTE PTR [rcx+rdx*1],r9b
   1400040d7:	ret    
   1400040d8:	cmp    QWORD PTR [rcx+0x18],0x10
   1400040dd:	jb     0x1400040e2
   1400040df:	mov    rcx,QWORD PTR [rcx]
   1400040e2:	movsx  edx,r9b
   1400040e6:	add    rcx,rax
   1400040e9:	jmp    0x140008ac2
   1400040ee:	int3   
   1400040ef:	int3   
   1400040f0:	mov    rax,rsp
   1400040f3:	push   rbp
   1400040f4:	push   rdi
   1400040f5:	push   r14
   1400040f7:	mov    rbp,rsp
   1400040fa:	sub    rsp,0x60
   1400040fe:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   140004106:	mov    QWORD PTR [rax+0x10],rbx
   14000410a:	mov    QWORD PTR [rax+0x18],rsi
   14000410e:	mov    rdi,rcx
   140004111:	cmp    QWORD PTR [rcx+0x78],0x0
   140004116:	je     0x1400042ea
   14000411c:	cmp    BYTE PTR [rcx+0x81],0x0
   140004123:	je     0x1400042ea
   140004129:	mov    rax,QWORD PTR [rcx]
   14000412c:	or     edx,0xffffffff
   14000412f:	call   QWORD PTR [rax+0x18]
   140004132:	cmp    eax,0xffffffff
   140004135:	jne    0x14000413e
   140004137:	xor    al,al
   140004139:	jmp    0x1400042ec
   14000413e:	mov    edx,0xf
   140004143:	mov    QWORD PTR [rbp-0x10],rdx
   140004147:	mov    BYTE PTR [rbp-0x28],0x0
   14000414b:	xor    ecx,ecx
   14000414d:	mov    QWORD PTR [rbp-0x28],rcx
   140004151:	mov    QWORD PTR [rbp-0x18],0x8
   140004159:	lea    rax,[rbp-0x28]
   14000415d:	cmp    rdx,0x10
   140004161:	cmovae rax,rcx
   140004165:	mov    BYTE PTR [rax+0x8],cl
   140004168:	xor    r14d,r14d
   14000416b:	mov    rdx,QWORD PTR [rbp-0x10]
   14000416f:	nop
   140004170:	lea    rcx,[rbp-0x28]
   140004174:	cmp    rdx,0x10
   140004178:	cmovae rcx,QWORD PTR [rbp-0x28]
   14000417d:	lea    r8,[rbp-0x28]
   140004181:	cmovae r8,QWORD PTR [rbp-0x28]
   140004186:	mov    r9,QWORD PTR [rbp-0x18]
   14000418a:	add    r9,rcx
   14000418d:	lea    rax,[rbp+0x20]
   140004191:	mov    QWORD PTR [rsp+0x20],rax
   140004196:	lea    rdx,[rdi+0x84]
   14000419d:	mov    rcx,QWORD PTR [rdi+0x78]
   1400041a1:	call   QWORD PTR [rip+0x5f11]        # 0x14000a0b8
   1400041a7:	test   eax,eax
   1400041a9:	je     0x1400041b5
   1400041ab:	dec    eax
   1400041ad:	jne    0x1400042ab
   1400041b3:	jmp    0x1400041bc
   1400041b5:	mov    BYTE PTR [rdi+0x81],r14b
   1400041bc:	lea    rax,[rbp-0x28]
   1400041c0:	mov    r9,QWORD PTR [rbp-0x28]
   1400041c4:	mov    rdx,QWORD PTR [rbp-0x10]
   1400041c8:	cmp    rdx,0x10
   1400041cc:	cmovae rax,r9
   1400041d0:	mov    rbx,QWORD PTR [rbp+0x20]
   1400041d4:	sub    rbx,rax
   1400041d7:	je     0x140004207
   1400041d9:	lea    rcx,[rbp-0x28]
   1400041dd:	cmp    rdx,0x10
   1400041e1:	cmovae rcx,r9
   1400041e5:	mov    r9,QWORD PTR [rdi+0x90]
   1400041ec:	mov    r8,rbx
   1400041ef:	mov    edx,0x1
   1400041f4:	call   QWORD PTR [rip+0x601e]        # 0x14000a218
   1400041fa:	mov    rdx,QWORD PTR [rbp-0x10]
   1400041fe:	cmp    rbx,rax
   140004201:	jne    0x1400042b4
   140004207:	cmp    BYTE PTR [rdi+0x81],r14b
   14000420e:	je     0x1400042d4
   140004214:	test   rbx,rbx
   140004217:	jne    0x140004170
   14000421d:	or     rax,0xffffffffffffffff
   140004221:	mov    r8,QWORD PTR [rbp-0x18]
   140004225:	sub    rax,r8
   140004228:	cmp    rax,0x8
   14000422c:	jbe    0x1400042c6
   140004232:	lea    rbx,[r8+0x8]
   140004236:	cmp    rbx,0xfffffffffffffffe
   14000423a:	ja     0x1400042b8
   14000423c:	cmp    rdx,rbx
   14000423f:	jae    0x140004253
   140004241:	mov    rdx,rbx
   140004244:	lea    rcx,[rbp-0x28]
   140004248:	call   0x140002020
   14000424d:	mov    rdx,QWORD PTR [rbp-0x10]
   140004251:	jmp    0x140004271
   140004253:	test   rbx,rbx
   140004256:	jne    0x14000427a
   140004258:	mov    QWORD PTR [rbp-0x18],r14
   14000425c:	lea    rax,[rbp-0x28]
   140004260:	cmp    rdx,0x10
   140004264:	cmovae rax,QWORD PTR [rbp-0x28]
   140004269:	mov    BYTE PTR [rax],r14b
   14000426c:	jmp    0x14000416b
   140004271:	test   rbx,rbx
   140004274:	je     0x140004170
   14000427a:	lea    rcx,[rbp-0x28]
   14000427e:	cmp    rdx,0x10
   140004282:	cmovae rcx,QWORD PTR [rbp-0x28]
   140004287:	mov    rax,QWORD PTR [rbp-0x18]
   14000428b:	xor    edx,edx
   14000428d:	mov    QWORD PTR [rax+rcx*1],rdx
   140004291:	mov    QWORD PTR [rbp-0x18],rbx
   140004295:	lea    rax,[rbp-0x28]
   140004299:	cmp    QWORD PTR [rbp-0x10],0x10
   14000429e:	cmovae rax,QWORD PTR [rbp-0x28]
   1400042a3:	mov    BYTE PTR [rbx+rax*1],dl
   1400042a6:	jmp    0x14000416b
   1400042ab:	mov    rdx,QWORD PTR [rbp-0x10]
   1400042af:	sub    eax,0x2
   1400042b2:	je     0x1400042d4
   1400042b4:	xor    bl,bl
   1400042b6:	jmp    0x1400042d6
   1400042b8:	lea    rcx,[rip+0x6581]        # 0x14000a840
   1400042bf:	call   QWORD PTR [rip+0x5ec3]        # 0x14000a188
   1400042c5:	int3   
   1400042c6:	lea    rcx,[rip+0x6573]        # 0x14000a840
   1400042cd:	call   QWORD PTR [rip+0x5eb5]        # 0x14000a188
   1400042d3:	int3   
   1400042d4:	mov    bl,0x1
   1400042d6:	cmp    rdx,0x10
   1400042da:	jb     0x1400042e5
   1400042dc:	mov    rcx,QWORD PTR [rbp-0x28]
   1400042e0:	call   0x140008880
   1400042e5:	movzx  eax,bl
   1400042e8:	jmp    0x1400042ec
   1400042ea:	mov    al,0x1
   1400042ec:	lea    r11,[rsp+0x60]
   1400042f1:	mov    rbx,QWORD PTR [r11+0x28]
   1400042f5:	mov    rsi,QWORD PTR [r11+0x30]
   1400042f9:	mov    rsp,r11
   1400042fc:	pop    r14
   1400042fe:	pop    rdi
   1400042ff:	pop    rbp
   140004300:	ret    
   140004301:	int3   
   140004302:	int3   
   140004303:	int3   
   140004304:	int3   
   140004305:	int3   
   140004306:	int3   
   140004307:	int3   
   140004308:	int3   
   140004309:	int3   
   14000430a:	int3   
   14000430b:	int3   
   14000430c:	int3   
   14000430d:	int3   
   14000430e:	int3   
   14000430f:	int3   
   140004310:	mov    QWORD PTR [rsp+0x8],rbx
   140004315:	push   rdi
   140004316:	sub    rsp,0x20
   14000431a:	mov    rbx,rdx
   14000431d:	mov    rdx,QWORD PTR [rcx]
   140004320:	xor    edi,edi
   140004322:	cmp    rbx,QWORD PTR [rdx+0x18]
   140004326:	jae    0x140004337
   140004328:	mov    rax,QWORD PTR [rdx+0x10]
   14000432c:	mov    rax,QWORD PTR [rax+rbx*8]
   140004330:	test   rax,rax
   140004333:	jne    0x140004357
   140004335:	jmp    0x14000433a
   140004337:	mov    rax,rdi
   14000433a:	cmp    BYTE PTR [rdx+0x24],dil
   14000433e:	je     0x140004357
   140004340:	call   QWORD PTR [rip+0x5d52]        # 0x14000a098
   140004346:	cmp    rbx,QWORD PTR [rax+0x18]
   14000434a:	jae    0x140004354
   14000434c:	mov    rax,QWORD PTR [rax+0x10]
   140004350:	mov    rdi,QWORD PTR [rax+rbx*8]
   140004354:	mov    rax,rdi
   140004357:	mov    rbx,QWORD PTR [rsp+0x30]
   14000435c:	add    rsp,0x20
   140004360:	pop    rdi
   140004361:	ret    
   140004362:	int3   
   140004363:	int3   
   140004364:	int3   
   140004365:	int3   
   140004366:	int3   
   140004367:	int3   
   140004368:	int3   
   140004369:	int3   
   14000436a:	int3   
   14000436b:	int3   
   14000436c:	int3   
   14000436d:	int3   
   14000436e:	int3   
   14000436f:	int3   
   140004370:	mov    QWORD PTR [rsp+0x8],rbx
   140004375:	push   rdi
   140004376:	sub    rsp,0x20
   14000437a:	cmp    r8d,0x1
   14000437e:	mov    rdi,rdx
   140004381:	mov    rbx,rcx
   140004384:	sete   al
   140004387:	mov    BYTE PTR [rcx+0x81],0x0
   14000438e:	mov    BYTE PTR [rcx+0x88],al
   140004394:	call   QWORD PTR [rip+0x5d66]        # 0x14000a100
   14000439a:	test   rdi,rdi
   14000439d:	je     0x1400043bf
   14000439f:	lea    rax,[rdi+0x10]
   1400043a3:	mov    QWORD PTR [rbx+0x38],rdi
   1400043a7:	mov    QWORD PTR [rbx+0x40],rdi
   1400043ab:	mov    QWORD PTR [rbx+0x18],rax
   1400043af:	mov    QWORD PTR [rbx+0x20],rax
   1400043b3:	lea    rax,[rdi+0x8]
   1400043b7:	mov    QWORD PTR [rbx+0x50],rax
   1400043bb:	mov    QWORD PTR [rbx+0x58],rax
   1400043bf:	mov    QWORD PTR [rbx+0x90],rdi
   1400043c6:	mov    eax,DWORD PTR [rip+0xb1e0]        # 0x14000f5ac
   1400043cc:	mov    QWORD PTR [rbx+0x78],0x0
   1400043d4:	mov    DWORD PTR [rbx+0x84],eax
   1400043da:	mov    rbx,QWORD PTR [rsp+0x30]
   1400043df:	add    rsp,0x20
   1400043e3:	pop    rdi
   1400043e4:	ret    
   1400043e5:	int3   
   1400043e6:	int3   
   1400043e7:	int3   
   1400043e8:	int3   
   1400043e9:	int3   
   1400043ea:	int3   
   1400043eb:	int3   
   1400043ec:	int3   
   1400043ed:	int3   
   1400043ee:	int3   
   1400043ef:	int3   
   1400043f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400043f5:	push   rdi
   1400043f6:	sub    rsp,0x20
   1400043fa:	mov    rbx,rcx
   1400043fd:	mov    rcx,rdx
   140004400:	mov    rdi,rdx
   140004403:	call   QWORD PTR [rip+0x5c97]        # 0x14000a0a0
   140004409:	test   al,al
   14000440b:	je     0x140004420
   14000440d:	mov    QWORD PTR [rbx+0x78],0x0
   140004415:	mov    rbx,QWORD PTR [rsp+0x30]
   14000441a:	add    rsp,0x20
   14000441e:	pop    rdi
   14000441f:	ret    
   140004420:	mov    rcx,rbx
   140004423:	mov    QWORD PTR [rbx+0x78],rdi
   140004427:	mov    rbx,QWORD PTR [rsp+0x30]
   14000442c:	add    rsp,0x20
   140004430:	pop    rdi
   140004431:	rex.W jmp QWORD PTR [rip+0x5cc8]        # 0x14000a100
   140004438:	int3   
   140004439:	int3   
   14000443a:	int3   
   14000443b:	int3   
   14000443c:	int3   
   14000443d:	int3   
   14000443e:	int3   
   14000443f:	int3   
   140004440:	mov    rcx,QWORD PTR [rcx+0x90]
   140004447:	test   rcx,rcx
   14000444a:	je     0x140004453
   14000444c:	rex.W jmp QWORD PTR [rip+0x5ddd]        # 0x14000a230
   140004453:	ret    
   140004454:	int3   
   140004455:	int3   
   140004456:	int3   
   140004457:	int3   
   140004458:	int3   
   140004459:	int3   
   14000445a:	int3   
   14000445b:	int3   
   14000445c:	int3   
   14000445d:	int3   
   14000445e:	int3   
   14000445f:	int3   
   140004460:	mov    r9,QWORD PTR [rcx+0x18]
   140004464:	lea    rax,[rcx+0x80]
   14000446b:	cmp    QWORD PTR [r9],rax
   14000446e:	jne    0x14000448c
   140004470:	mov    rdx,QWORD PTR [rcx+0x68]
   140004474:	mov    r8,QWORD PTR [rcx+0x70]
   140004478:	mov    QWORD PTR [r9],rdx
   14000447b:	mov    rax,QWORD PTR [rcx+0x38]
   14000447f:	sub    r8d,edx
   140004482:	mov    QWORD PTR [rax],rdx
   140004485:	mov    rax,QWORD PTR [rcx+0x50]
   140004489:	mov    DWORD PTR [rax],r8d
   14000448c:	ret    
   14000448d:	int3   
   14000448e:	int3   
   14000448f:	int3   
   140004490:	mov    r8,rcx
   140004493:	mov    rcx,QWORD PTR [rcx+0x18]
   140004497:	mov    rax,QWORD PTR [rcx]
   14000449a:	lea    r9,[r8+0x80]
   1400044a1:	cmp    rax,r9
   1400044a4:	je     0x1400044bc
   1400044a6:	mov    QWORD PTR [r8+0x68],rax
   1400044aa:	mov    rax,QWORD PTR [r8+0x50]
   1400044ae:	movsxd rdx,DWORD PTR [rax]
   1400044b1:	mov    rax,QWORD PTR [r8+0x38]
   1400044b5:	add    rdx,QWORD PTR [rax]
   1400044b8:	mov    QWORD PTR [r8+0x70],rdx
   1400044bc:	mov    QWORD PTR [rcx],r9
   1400044bf:	mov    rax,QWORD PTR [r8+0x38]
   1400044c3:	mov    ecx,r8d
   1400044c6:	mov    QWORD PTR [rax],r9
   1400044c9:	mov    rax,QWORD PTR [r8+0x50]
   1400044cd:	sub    ecx,r9d
   1400044d0:	add    ecx,0x81
   1400044d6:	mov    DWORD PTR [rax],ecx
   1400044d8:	ret    
   1400044d9:	int3   
   1400044da:	int3   
   1400044db:	int3   
   1400044dc:	int3   
   1400044dd:	int3   
   1400044de:	int3   
   1400044df:	int3   
   1400044e0:	mov    rcx,QWORD PTR [rcx+0x90]
   1400044e7:	test   rcx,rcx
   1400044ea:	je     0x1400044f3
   1400044ec:	rex.W jmp QWORD PTR [rip+0x5d45]        # 0x14000a238
   1400044f3:	ret    
   1400044f4:	int3   
   1400044f5:	int3   
   1400044f6:	int3   
   1400044f7:	int3   
   1400044f8:	int3   
   1400044f9:	int3   
   1400044fa:	int3   
   1400044fb:	int3   
   1400044fc:	int3   
   1400044fd:	int3   
   1400044fe:	int3   
   1400044ff:	int3   
   140004500:	or     r9,0xffffffffffffffff
   140004504:	xor    r8d,r8d
   140004507:	jmp    0x140004510
   14000450c:	int3   
   14000450d:	int3   
   14000450e:	int3   
   14000450f:	int3   
   140004510:	mov    QWORD PTR [rsp+0x10],rbx
   140004515:	mov    QWORD PTR [rsp+0x18],rbp
   14000451a:	mov    QWORD PTR [rsp+0x20],rsi
   14000451f:	push   r14
   140004521:	sub    rsp,0x20
   140004525:	mov    rax,QWORD PTR [rdx+0x10]
   140004529:	mov    rsi,r9
   14000452c:	mov    rbp,r8
   14000452f:	mov    r14,rdx
   140004532:	mov    rbx,rcx
   140004535:	cmp    rax,r8
   140004538:	jae    0x140004548
   14000453a:	lea    rcx,[rip+0x630f]        # 0x14000a850
   140004541:	call   QWORD PTR [rip+0x5b19]        # 0x14000a060
   140004547:	int3   
   140004548:	sub    rax,r8
   14000454b:	mov    r8,QWORD PTR [rcx+0x10]
   14000454f:	cmp    rax,r9
   140004552:	cmovb  rsi,rax
   140004556:	or     rax,0xffffffffffffffff
   14000455a:	sub    rax,r8
   14000455d:	cmp    rax,rsi
   140004560:	ja     0x140004570
   140004562:	lea    rcx,[rip+0x62d7]        # 0x14000a840
   140004569:	call   QWORD PTR [rip+0x5c19]        # 0x14000a188
   14000456f:	int3   
   140004570:	mov    QWORD PTR [rsp+0x30],rdi
   140004575:	test   rsi,rsi
   140004578:	je     0x140004610
   14000457e:	lea    rdi,[r8+rsi*1]
   140004582:	cmp    rdi,0xfffffffffffffffe
   140004586:	jbe    0x140004596
   140004588:	lea    rcx,[rip+0x62b1]        # 0x14000a840
   14000458f:	call   QWORD PTR [rip+0x5bf3]        # 0x14000a188
   140004595:	int3   
   140004596:	mov    rax,QWORD PTR [rcx+0x18]
   14000459a:	cmp    rax,rdi
   14000459d:	jae    0x1400045c2
   14000459f:	mov    rdx,rdi
   1400045a2:	call   0x140002020
   1400045a7:	test   rdi,rdi
   1400045aa:	je     0x140004610
   1400045ac:	cmp    QWORD PTR [r14+0x18],0x10
   1400045b1:	jb     0x1400045b6
   1400045b3:	mov    r14,QWORD PTR [r14]
   1400045b6:	cmp    QWORD PTR [rbx+0x18],0x10
   1400045bb:	jb     0x1400045e1
   1400045bd:	mov    rcx,QWORD PTR [rbx]
   1400045c0:	jmp    0x1400045e4
   1400045c2:	test   rdi,rdi
   1400045c5:	jne    0x1400045ac
   1400045c7:	mov    QWORD PTR [rcx+0x10],rdi
   1400045cb:	cmp    rax,0x10
   1400045cf:	jb     0x1400045d9
   1400045d1:	mov    rax,QWORD PTR [rcx]
   1400045d4:	mov    BYTE PTR [rax],dil
   1400045d7:	jmp    0x140004610
   1400045d9:	mov    rax,rcx
   1400045dc:	mov    BYTE PTR [rcx],0x0
   1400045df:	jmp    0x140004610
   1400045e1:	mov    rcx,rbx
   1400045e4:	test   rsi,rsi
   1400045e7:	je     0x1400045f9
   1400045e9:	add    rcx,QWORD PTR [rbx+0x10]
   1400045ed:	lea    rdx,[r14+rbp*1]
   1400045f1:	mov    r8,rsi
   1400045f4:	call   0x1400089c4
   1400045f9:	cmp    QWORD PTR [rbx+0x18],0x10
   1400045fe:	mov    QWORD PTR [rbx+0x10],rdi
   140004602:	jb     0x140004609
   140004604:	mov    rax,QWORD PTR [rbx]
   140004607:	jmp    0x14000460c
   140004609:	mov    rax,rbx
   14000460c:	mov    BYTE PTR [rax+rdi*1],0x0
   140004610:	mov    rdi,QWORD PTR [rsp+0x30]
   140004615:	mov    rbp,QWORD PTR [rsp+0x40]
   14000461a:	mov    rsi,QWORD PTR [rsp+0x48]
   14000461f:	mov    rax,rbx
   140004622:	mov    rbx,QWORD PTR [rsp+0x38]
   140004627:	add    rsp,0x20
   14000462b:	pop    r14
   14000462d:	ret    
   14000462e:	int3   
   14000462f:	int3   
   140004630:	cmp    BYTE PTR [rdx],0x0
   140004633:	jne    0x14000463d
   140004635:	xor    r8d,r8d
   140004638:	jmp    0x140004650
   14000463d:	or     r8,0xffffffffffffffff
   140004641:	inc    r8
   140004644:	cmp    BYTE PTR [rdx+r8*1],0x0
   140004649:	jne    0x140004641
   14000464b:	jmp    0x140004650
   140004650:	mov    QWORD PTR [rsp+0x10],rbx
   140004655:	mov    QWORD PTR [rsp+0x18],rbp
   14000465a:	push   rsi
   14000465b:	sub    rsp,0x20
   14000465f:	mov    rsi,r8
   140004662:	mov    rbp,rdx
   140004665:	mov    rbx,rcx
   140004668:	test   rdx,rdx
   14000466b:	je     0x1400046c7
   14000466d:	mov    r8,QWORD PTR [rcx+0x18]
   140004671:	cmp    r8,0x10
   140004675:	jb     0x14000467c
   140004677:	mov    rax,QWORD PTR [rcx]
   14000467a:	jmp    0x14000467f
   14000467c:	mov    rax,rcx
   14000467f:	cmp    rdx,rax
   140004682:	jb     0x1400046c7
   140004684:	cmp    r8,0x10
   140004688:	jb     0x14000468d
   14000468a:	mov    rcx,QWORD PTR [rcx]
   14000468d:	add    rcx,QWORD PTR [rbx+0x10]
   140004691:	cmp    rcx,rdx
   140004694:	jbe    0x1400046c7
   140004696:	cmp    r8,0x10
   14000469a:	jb     0x1400046a1
   14000469c:	mov    rax,QWORD PTR [rbx]
   14000469f:	jmp    0x1400046a4
   1400046a1:	mov    rax,rbx
   1400046a4:	sub    rbp,rax
   1400046a7:	mov    r9,rsi
   1400046aa:	mov    rdx,rbx
   1400046ad:	mov    r8,rbp
   1400046b0:	mov    rcx,rbx
   1400046b3:	mov    rbx,QWORD PTR [rsp+0x38]
   1400046b8:	mov    rbp,QWORD PTR [rsp+0x40]
   1400046bd:	add    rsp,0x20
   1400046c1:	pop    rsi
   1400046c2:	jmp    0x140004510
   1400046c7:	mov    r8,QWORD PTR [rbx+0x10]
   1400046cb:	or     rax,0xffffffffffffffff
   1400046cf:	sub    rax,r8
   1400046d2:	cmp    rax,rsi
   1400046d5:	ja     0x1400046e5
   1400046d7:	lea    rcx,[rip+0x6162]        # 0x14000a840
   1400046de:	call   QWORD PTR [rip+0x5aa4]        # 0x14000a188
   1400046e4:	int3   
   1400046e5:	mov    QWORD PTR [rsp+0x30],rdi
   1400046ea:	test   rsi,rsi
   1400046ed:	je     0x14000477d
   1400046f3:	lea    rdi,[r8+rsi*1]
   1400046f7:	cmp    rdi,0xfffffffffffffffe
   1400046fb:	jbe    0x14000470b
   1400046fd:	lea    rcx,[rip+0x613c]        # 0x14000a840
   140004704:	call   QWORD PTR [rip+0x5a7e]        # 0x14000a188
   14000470a:	int3   
   14000470b:	mov    rax,QWORD PTR [rbx+0x18]
   14000470f:	cmp    rax,rdi
   140004712:	jae    0x140004730
   140004714:	mov    rdx,rdi
   140004717:	mov    rcx,rbx
   14000471a:	call   0x140002020
   14000471f:	test   rdi,rdi
   140004722:	je     0x14000477d
   140004724:	cmp    QWORD PTR [rbx+0x18],0x10
   140004729:	jb     0x14000474f
   14000472b:	mov    rcx,QWORD PTR [rbx]
   14000472e:	jmp    0x140004752
   140004730:	test   rdi,rdi
   140004733:	jne    0x140004724
   140004735:	mov    QWORD PTR [rbx+0x10],rdi
   140004739:	cmp    rax,0x10
   14000473d:	jb     0x140004747
   14000473f:	mov    rax,QWORD PTR [rbx]
   140004742:	mov    BYTE PTR [rax],dil
   140004745:	jmp    0x14000477d
   140004747:	mov    rax,rbx
   14000474a:	mov    BYTE PTR [rbx],0x0
   14000474d:	jmp    0x14000477d
   14000474f:	mov    rcx,rbx
   140004752:	test   rsi,rsi
   140004755:	je     0x140004766
   140004757:	add    rcx,QWORD PTR [rbx+0x10]
   14000475b:	mov    r8,rsi
   14000475e:	mov    rdx,rbp
   140004761:	call   0x1400089c4
   140004766:	cmp    QWORD PTR [rbx+0x18],0x10
   14000476b:	mov    QWORD PTR [rbx+0x10],rdi
   14000476f:	jb     0x140004776
   140004771:	mov    rax,QWORD PTR [rbx]
   140004774:	jmp    0x140004779
   140004776:	mov    rax,rbx
   140004779:	mov    BYTE PTR [rax+rdi*1],0x0
   14000477d:	mov    rdi,QWORD PTR [rsp+0x30]
   140004782:	mov    rbp,QWORD PTR [rsp+0x40]
   140004787:	mov    rax,rbx
   14000478a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000478f:	add    rsp,0x20
   140004793:	pop    rsi
   140004794:	ret    
   140004795:	int3   
   140004796:	int3   
   140004797:	int3   
   140004798:	int3   
   140004799:	int3   
   14000479a:	int3   
   14000479b:	int3   
   14000479c:	int3   
   14000479d:	int3   
   14000479e:	int3   
   14000479f:	int3   
   1400047a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400047a5:	mov    QWORD PTR [rsp+0x18],rbp
   1400047aa:	push   rsi
   1400047ab:	sub    rsp,0x20
   1400047af:	or     rax,0xffffffffffffffff
   1400047b3:	movzx  ebp,r8b
   1400047b7:	mov    r8,QWORD PTR [rcx+0x10]
   1400047bb:	sub    rax,r8
   1400047be:	mov    rsi,rdx
   1400047c1:	mov    rbx,rcx
   1400047c4:	cmp    rax,rdx
   1400047c7:	ja     0x1400047d7
   1400047c9:	lea    rcx,[rip+0x6070]        # 0x14000a840
   1400047d0:	call   QWORD PTR [rip+0x59b2]        # 0x14000a188
   1400047d6:	int3   
   1400047d7:	mov    QWORD PTR [rsp+0x30],rdi
   1400047dc:	test   rdx,rdx
   1400047df:	je     0x14000488a
   1400047e5:	lea    rdi,[r8+rdx*1]
   1400047e9:	cmp    rdi,0xfffffffffffffffe
   1400047ed:	jbe    0x1400047fd
   1400047ef:	lea    rcx,[rip+0x604a]        # 0x14000a840
   1400047f6:	call   QWORD PTR [rip+0x598c]        # 0x14000a188
   1400047fc:	int3   
   1400047fd:	mov    rax,QWORD PTR [rcx+0x18]
   140004801:	cmp    rax,rdi
   140004804:	jae    0x14000482d
   140004806:	mov    rdx,rdi
   140004809:	call   0x140002020
   14000480e:	test   rdi,rdi
   140004811:	je     0x14000488a
   140004813:	mov    rcx,QWORD PTR [rbx+0x10]
   140004817:	cmp    rsi,0x1
   14000481b:	jne    0x140004855
   14000481d:	cmp    QWORD PTR [rbx+0x18],0x10
   140004822:	jb     0x14000484c
   140004824:	mov    rax,QWORD PTR [rbx]
   140004827:	mov    BYTE PTR [rax+rcx*1],bpl
   14000482b:	jmp    0x140004873
   14000482d:	test   rdi,rdi
   140004830:	jne    0x140004813
   140004832:	mov    QWORD PTR [rcx+0x10],rdi
   140004836:	cmp    rax,0x10
   14000483a:	jb     0x140004844
   14000483c:	mov    rax,QWORD PTR [rcx]
   14000483f:	mov    BYTE PTR [rax],dil
   140004842:	jmp    0x14000488a
   140004844:	mov    rax,rcx
   140004847:	mov    BYTE PTR [rcx],0x0
   14000484a:	jmp    0x14000488a
   14000484c:	mov    rax,rbx
   14000484f:	mov    BYTE PTR [rbx+rcx*1],bpl
   140004853:	jmp    0x140004873
   140004855:	cmp    QWORD PTR [rbx+0x18],0x10
   14000485a:	jb     0x140004861
   14000485c:	mov    rax,QWORD PTR [rbx]
   14000485f:	jmp    0x140004864
   140004861:	mov    rax,rbx
   140004864:	movsx  edx,bpl
   140004868:	add    rcx,rax
   14000486b:	mov    r8,rsi
   14000486e:	call   0x140008ac2
   140004873:	cmp    QWORD PTR [rbx+0x18],0x10
   140004878:	mov    QWORD PTR [rbx+0x10],rdi
   14000487c:	jb     0x140004883
   14000487e:	mov    rax,QWORD PTR [rbx]
   140004881:	jmp    0x140004886
   140004883:	mov    rax,rbx
   140004886:	mov    BYTE PTR [rax+rdi*1],0x0
   14000488a:	mov    rdi,QWORD PTR [rsp+0x30]
   14000488f:	mov    rbp,QWORD PTR [rsp+0x40]
   140004894:	mov    rax,rbx
   140004897:	mov    rbx,QWORD PTR [rsp+0x38]
   14000489c:	add    rsp,0x20
   1400048a0:	pop    rsi
   1400048a1:	ret    
   1400048a2:	int3   
   1400048a3:	int3   
   1400048a4:	int3   
   1400048a5:	int3   
   1400048a6:	int3   
   1400048a7:	int3   
   1400048a8:	int3   
   1400048a9:	int3   
   1400048aa:	int3   
   1400048ab:	int3   
   1400048ac:	int3   
   1400048ad:	int3   
   1400048ae:	int3   
   1400048af:	int3   
   1400048b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400048b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400048ba:	push   rdi
   1400048bb:	sub    rsp,0x20
   1400048bf:	movzx  esi,r8b
   1400048c3:	mov    rdi,rdx
   1400048c6:	mov    rbx,rcx
   1400048c9:	cmp    rdx,0xffffffffffffffff
   1400048cd:	jne    0x1400048dd
   1400048cf:	lea    rcx,[rip+0x5f6a]        # 0x14000a840
   1400048d6:	call   QWORD PTR [rip+0x58ac]        # 0x14000a188
   1400048dc:	int3   
   1400048dd:	cmp    rdx,0xfffffffffffffffe
   1400048e1:	jbe    0x1400048f1
   1400048e3:	lea    rcx,[rip+0x5f56]        # 0x14000a840
   1400048ea:	call   QWORD PTR [rip+0x5898]        # 0x14000a188
   1400048f0:	int3   
   1400048f1:	mov    rax,QWORD PTR [rcx+0x18]
   1400048f5:	cmp    rax,rdx
   1400048f8:	jae    0x140004921
   1400048fa:	mov    r8,QWORD PTR [rcx+0x10]
   1400048fe:	call   0x140002020
   140004903:	test   rdi,rdi
   140004906:	je     0x14000499b
   14000490c:	cmp    rdi,0x1
   140004910:	jne    0x140004969
   140004912:	cmp    QWORD PTR [rbx+0x18],0x10
   140004917:	jb     0x140004961
   140004919:	mov    rax,QWORD PTR [rbx]
   14000491c:	mov    BYTE PTR [rax],sil
   14000491f:	jmp    0x140004984
   140004921:	test   rdx,rdx
   140004924:	jne    0x140004903
   140004926:	mov    QWORD PTR [rcx+0x10],rdx
   14000492a:	cmp    rax,0x10
   14000492e:	jb     0x140004948
   140004930:	mov    rax,QWORD PTR [rcx]
   140004933:	mov    BYTE PTR [rax],dl
   140004935:	mov    rax,rbx
   140004938:	mov    rbx,QWORD PTR [rsp+0x30]
   14000493d:	mov    rsi,QWORD PTR [rsp+0x38]
   140004942:	add    rsp,0x20
   140004946:	pop    rdi
   140004947:	ret    
   140004948:	mov    rax,rcx
   14000494b:	mov    BYTE PTR [rcx],0x0
   14000494e:	mov    rax,rbx
   140004951:	mov    rbx,QWORD PTR [rsp+0x30]
   140004956:	mov    rsi,QWORD PTR [rsp+0x38]
   14000495b:	add    rsp,0x20
   14000495f:	pop    rdi
   140004960:	ret    
   140004961:	mov    rax,rbx
   140004964:	mov    BYTE PTR [rbx],sil
   140004967:	jmp    0x140004984
   140004969:	cmp    QWORD PTR [rbx+0x18],0x10
   14000496e:	jb     0x140004975
   140004970:	mov    rcx,QWORD PTR [rbx]
   140004973:	jmp    0x140004978
   140004975:	mov    rcx,rbx
   140004978:	movsx  edx,sil
   14000497c:	mov    r8,rdi
   14000497f:	call   0x140008ac2
   140004984:	cmp    QWORD PTR [rbx+0x18],0x10
   140004989:	mov    QWORD PTR [rbx+0x10],rdi
   14000498d:	jb     0x140004994
   14000498f:	mov    rax,QWORD PTR [rbx]
   140004992:	jmp    0x140004997
   140004994:	mov    rax,rbx
   140004997:	mov    BYTE PTR [rax+rdi*1],0x0
   14000499b:	mov    rsi,QWORD PTR [rsp+0x38]
   1400049a0:	mov    rax,rbx
   1400049a3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400049a8:	add    rsp,0x20
   1400049ac:	pop    rdi
   1400049ad:	ret    
   1400049ae:	int3   
   1400049af:	int3   
   1400049b0:	rex push rbx
   1400049b2:	sub    rsp,0x20
   1400049b6:	mov    rax,rdx
   1400049b9:	movsx  edx,r8b
   1400049bd:	mov    rbx,rcx
   1400049c0:	mov    r8,rax
   1400049c3:	call   0x140008ac2
   1400049c8:	mov    rax,rbx
   1400049cb:	add    rsp,0x20
   1400049cf:	pop    rbx
   1400049d0:	ret    
   1400049d1:	int3   
   1400049d2:	int3   
   1400049d3:	int3   
   1400049d4:	int3   
   1400049d5:	int3   
   1400049d6:	int3   
   1400049d7:	int3   
   1400049d8:	int3   
   1400049d9:	int3   
   1400049da:	int3   
   1400049db:	int3   
   1400049dc:	int3   
   1400049dd:	int3   
   1400049de:	int3   
   1400049df:	int3   
   1400049e0:	cmp    QWORD PTR [rcx+0x18],0x10
   1400049e5:	jb     0x1400049f1
   1400049e7:	mov    rax,QWORD PTR [rcx]
   1400049ea:	mov    QWORD PTR [rdx],rax
   1400049ed:	mov    rax,rdx
   1400049f0:	ret    
   1400049f1:	mov    QWORD PTR [rdx],rcx
   1400049f4:	mov    rax,rdx
   1400049f7:	ret    
   1400049f8:	int3   
   1400049f9:	int3   
   1400049fa:	int3   
   1400049fb:	int3   
   1400049fc:	int3   
   1400049fd:	int3   
   1400049fe:	int3   
   1400049ff:	int3   
   140004a00:	mov    QWORD PTR [rsp+0x8],rbx
   140004a05:	mov    QWORD PTR [rsp+0x10],rsi
   140004a0a:	push   rdi
   140004a0b:	sub    rsp,0x20
   140004a0f:	cmp    QWORD PTR [rcx+0x90],0x0
   140004a17:	mov    rbx,rcx
   140004a1a:	jne    0x140004a22
   140004a1c:	xor    edi,edi
   140004a1e:	mov    esi,edi
   140004a20:	jmp    0x140004a45
   140004a22:	call   0x1400040f0
   140004a27:	mov    rcx,QWORD PTR [rbx+0x90]
   140004a2e:	xor    edi,edi
   140004a30:	test   al,al
   140004a32:	mov    rsi,rbx
   140004a35:	cmove  rsi,rdi
   140004a39:	call   QWORD PTR [rip+0x57a1]        # 0x14000a1e0
   140004a3f:	test   eax,eax
   140004a41:	cmovne rsi,rdi
   140004a45:	mov    rcx,rbx
   140004a48:	mov    BYTE PTR [rbx+0x88],0x0
   140004a4f:	mov    BYTE PTR [rbx+0x81],0x0
   140004a56:	call   QWORD PTR [rip+0x56a4]        # 0x14000a100
   140004a5c:	mov    QWORD PTR [rbx+0x90],rdi
   140004a63:	mov    ecx,DWORD PTR [rip+0xab43]        # 0x14000f5ac
   140004a69:	mov    DWORD PTR [rbx+0x84],ecx
   140004a6f:	mov    QWORD PTR [rbx+0x78],rdi
   140004a73:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a78:	mov    rax,rsi
   140004a7b:	mov    rsi,QWORD PTR [rsp+0x38]
   140004a80:	add    rsp,0x20
   140004a84:	pop    rdi
   140004a85:	ret    
   140004a86:	int3   
   140004a87:	int3   
   140004a88:	int3   
   140004a89:	int3   
   140004a8a:	int3   
   140004a8b:	int3   
   140004a8c:	int3   
   140004a8d:	int3   
   140004a8e:	int3   
   140004a8f:	int3   
   140004a90:	rex push rbx
   140004a92:	sub    rsp,0x20
   140004a96:	mov    rbx,rcx
   140004a99:	add    rcx,0x18
   140004a9d:	call   0x140004a00
   140004aa2:	test   rax,rax
   140004aa5:	jne    0x140004ac4
   140004aa7:	mov    rax,QWORD PTR [rbx]
   140004aaa:	xor    r8d,r8d
   140004aad:	movsxd rcx,DWORD PTR [rax+0x4]
   140004ab1:	lea    edx,[r8+0x2]
   140004ab5:	add    rcx,rbx
   140004ab8:	add    rsp,0x20
   140004abc:	pop    rbx
   140004abd:	rex.W jmp QWORD PTR [rip+0x564c]        # 0x14000a110
   140004ac4:	add    rsp,0x20
   140004ac8:	pop    rbx
   140004ac9:	ret    
   140004aca:	int3   
   140004acb:	int3   
   140004acc:	int3   
   140004acd:	int3   
   140004ace:	int3   
   140004acf:	int3   
   140004ad0:	or     eax,0xffffffff
   140004ad3:	ret    
   140004ad4:	int3   
   140004ad5:	int3   
   140004ad6:	int3   
   140004ad7:	int3   
   140004ad8:	int3   
   140004ad9:	int3   
   140004ada:	int3   
   140004adb:	int3   
   140004adc:	int3   
   140004add:	int3   
   140004ade:	int3   
   140004adf:	int3   
   140004ae0:	mov    edx,DWORD PTR [rdx]
   140004ae2:	cmp    DWORD PTR [rcx],edx
   140004ae4:	sete   al
   140004ae7:	ret    
   140004ae8:	int3   
   140004ae9:	int3   
   140004aea:	int3   
   140004aeb:	int3   
   140004aec:	int3   
   140004aed:	int3   
   140004aee:	int3   
   140004aef:	int3   
   140004af0:	rex push rbx
   140004af2:	sub    rsp,0x90
   140004af9:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140004b02:	mov    rbx,rcx
   140004b05:	mov    DWORD PTR [rsp+0x20],0x0
   140004b0d:	lea    rcx,[rsp+0x50]
   140004b12:	call   0x140004bd0
   140004b17:	nop
   140004b18:	mov    r8,rax
   140004b1b:	lea    rdx,[rip+0x5f9e]        # 0x14000aac0
   140004b22:	lea    rcx,[rsp+0x30]
   140004b27:	call   0x1400037c0
   140004b2c:	nop
   140004b2d:	lea    r8,[rip+0x5f84]        # 0x14000aab8
   140004b34:	mov    rdx,rax
   140004b37:	lea    rcx,[rsp+0x70]
   140004b3c:	call   0x140003690
   140004b41:	nop
   140004b42:	cmp    QWORD PTR [rsp+0x48],0x10
   140004b48:	jb     0x140004b54
   140004b4a:	mov    rcx,QWORD PTR [rsp+0x30]
   140004b4f:	call   0x140008880
   140004b54:	mov    QWORD PTR [rsp+0x48],0xf
   140004b5d:	mov    QWORD PTR [rsp+0x40],0x0
   140004b66:	mov    BYTE PTR [rsp+0x30],0x0
   140004b6b:	cmp    QWORD PTR [rsp+0x68],0x10
   140004b71:	jb     0x140004b7d
   140004b73:	mov    rcx,QWORD PTR [rsp+0x50]
   140004b78:	call   0x140008880
   140004b7d:	mov    QWORD PTR [rsp+0x68],0xf
   140004b86:	mov    QWORD PTR [rsp+0x60],0x0
   140004b8f:	mov    BYTE PTR [rsp+0x50],0x0
   140004b94:	lea    r8,[rsp+0x70]
   140004b99:	lea    rdx,[rip+0x5f30]        # 0x14000aad0
   140004ba0:	mov    rcx,rbx
   140004ba3:	call   0x140003810
   140004ba8:	nop
   140004ba9:	cmp    QWORD PTR [rsp+0x88],0x10
   140004bb2:	jb     0x140004bbe
   140004bb4:	mov    rcx,QWORD PTR [rsp+0x70]
   140004bb9:	call   0x140008880
   140004bbe:	mov    rax,rbx
   140004bc1:	add    rsp,0x90
   140004bc8:	pop    rbx
   140004bc9:	ret    
   140004bca:	int3   
   140004bcb:	int3   
   140004bcc:	int3   
   140004bcd:	int3   
   140004bce:	int3   
   140004bcf:	int3   
   140004bd0:	mov    QWORD PTR [rsp+0x8],rcx
   140004bd5:	push   rdi
   140004bd6:	sub    rsp,0x130
   140004bdd:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140004be6:	mov    QWORD PTR [rsp+0x150],rbx
   140004bee:	mov    rdi,rcx
   140004bf1:	xor    ebx,ebx
   140004bf3:	mov    DWORD PTR [rsp+0x20],ebx
   140004bf7:	mov    QWORD PTR [rcx+0x18],0xf
   140004bff:	mov    QWORD PTR [rcx+0x10],rbx
   140004c03:	mov    BYTE PTR [rcx],bl
   140004c05:	lea    r8d,[rbx+0x7]
   140004c09:	lea    rdx,[rip+0x5ea0]        # 0x14000aab0
   140004c10:	call   0x140002b00
   140004c15:	mov    DWORD PTR [rsp+0x20],0x1
   140004c1d:	mov    BYTE PTR [rsp+0x30],bl
   140004c21:	xor    edx,edx
   140004c23:	mov    r8d,0xff
   140004c29:	lea    rcx,[rsp+0x31]
   140004c2e:	call   0x140008ac2
   140004c33:	mov    DWORD PTR [rsp+0x148],0x100
   140004c3e:	lea    rdx,[rsp+0x148]
   140004c46:	lea    rcx,[rsp+0x30]
   140004c4b:	call   QWORD PTR [rip+0x53af]        # 0x14000a000
   140004c51:	test   eax,eax
   140004c53:	je     0x140004c7d
   140004c55:	cmp    BYTE PTR [rsp+0x30],bl
   140004c59:	je     0x140004c6d
   140004c5b:	lea    rax,[rsp+0x30]
   140004c60:	or     rbx,0xffffffffffffffff
   140004c64:	inc    rbx
   140004c67:	cmp    BYTE PTR [rax+rbx*1],0x0
   140004c6b:	jne    0x140004c64
   140004c6d:	mov    r8,rbx
   140004c70:	lea    rdx,[rsp+0x30]
   140004c75:	mov    rcx,rdi
   140004c78:	call   0x140002b00
   140004c7d:	mov    rax,rdi
   140004c80:	mov    rbx,QWORD PTR [rsp+0x150]
   140004c88:	add    rsp,0x130
   140004c8f:	pop    rdi
   140004c90:	ret    
   140004c91:	int3   
   140004c92:	int3   
   140004c93:	int3   
   140004c94:	int3   
   140004c95:	int3   
   140004c96:	int3   
   140004c97:	int3   
   140004c98:	int3   
   140004c99:	int3   
   140004c9a:	int3   
   140004c9b:	int3   
   140004c9c:	int3   
   140004c9d:	int3   
   140004c9e:	int3   
   140004c9f:	int3   
   140004ca0:	mov    QWORD PTR [rsp+0x8],rbx
   140004ca5:	push   rdi
   140004ca6:	sub    rsp,0x20
   140004caa:	mov    rbx,rcx
   140004cad:	mov    rcx,rdx
   140004cb0:	call   0x140003970
   140004cb5:	mov    rcx,rax
   140004cb8:	mov    rdi,rax
   140004cbb:	call   QWORD PTR [rip+0x53df]        # 0x14000a0a0
   140004cc1:	test   al,al
   140004cc3:	je     0x140004cd8
   140004cc5:	mov    QWORD PTR [rbx+0x78],0x0
   140004ccd:	mov    rbx,QWORD PTR [rsp+0x30]
   140004cd2:	add    rsp,0x20
   140004cd6:	pop    rdi
   140004cd7:	ret    
   140004cd8:	mov    rcx,rbx
   140004cdb:	mov    QWORD PTR [rbx+0x78],rdi
   140004cdf:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ce4:	add    rsp,0x20
   140004ce8:	pop    rdi
   140004ce9:	rex.W jmp QWORD PTR [rip+0x5410]        # 0x14000a100
   140004cf0:	mov    QWORD PTR [rsp+0x18],rbx
   140004cf5:	push   rbp
   140004cf6:	push   rsi
   140004cf7:	push   r14
   140004cf9:	sub    rsp,0x20
   140004cfd:	mov    rbx,rcx
   140004d00:	mov    rcx,QWORD PTR [rcx+0x10]
   140004d04:	mov    r14,r9
   140004d07:	mov    rsi,r8
   140004d0a:	mov    rbp,rdx
   140004d0d:	cmp    rcx,rdx
   140004d10:	jb     0x140004e59
   140004d16:	mov    rax,QWORD PTR [r8+0x10]
   140004d1a:	cmp    rax,r9
   140004d1d:	jb     0x140004e59
   140004d23:	sub    rax,r9
   140004d26:	mov    QWORD PTR [rsp+0x40],rdi
   140004d2b:	mov    rdi,QWORD PTR [rsp+0x60]
   140004d30:	cmp    rax,rdi
   140004d33:	cmovb  rdi,rax
   140004d37:	or     rax,0xffffffffffffffff
   140004d3b:	sub    rax,rcx
   140004d3e:	cmp    rax,rdi
   140004d41:	ja     0x140004d51
   140004d43:	lea    rcx,[rip+0x5af6]        # 0x14000a840
   140004d4a:	call   QWORD PTR [rip+0x5438]        # 0x14000a188
   140004d50:	int3   
   140004d51:	test   rdi,rdi
   140004d54:	je     0x140004e43
   140004d5a:	mov    QWORD PTR [rsp+0x48],r15
   140004d5f:	lea    r15,[rcx+rdi*1]
   140004d63:	xor    r8d,r8d
   140004d66:	mov    rdx,r15
   140004d69:	mov    rcx,rbx
   140004d6c:	call   0x1400021d0
   140004d71:	test   al,al
   140004d73:	je     0x140004e3e
   140004d79:	mov    rax,QWORD PTR [rbx+0x18]
   140004d7d:	cmp    rax,0x10
   140004d81:	jb     0x140004d88
   140004d83:	mov    rcx,QWORD PTR [rbx]
   140004d86:	jmp    0x140004d8b
   140004d88:	mov    rcx,rbx
   140004d8b:	cmp    rax,0x10
   140004d8f:	jb     0x140004d96
   140004d91:	mov    rax,QWORD PTR [rbx]
   140004d94:	jmp    0x140004d99
   140004d96:	mov    rax,rbx
   140004d99:	mov    r8,QWORD PTR [rbx+0x10]
   140004d9d:	sub    r8,rbp
   140004da0:	je     0x140004db3
   140004da2:	lea    rdx,[rcx+rbp*1]
   140004da6:	lea    rcx,[rax+rbp*1]
   140004daa:	add    rcx,rdi
   140004dad:	call   QWORD PTR [rip+0x53ed]        # 0x14000a1a0
   140004db3:	cmp    rbx,rsi
   140004db6:	jne    0x140004df8
   140004db8:	cmp    rbp,r14
   140004dbb:	jae    0x140004dc0
   140004dbd:	add    r14,rdi
   140004dc0:	mov    rax,QWORD PTR [rbx+0x18]
   140004dc4:	cmp    rax,0x10
   140004dc8:	jb     0x140004dcf
   140004dca:	mov    rcx,QWORD PTR [rbx]
   140004dcd:	jmp    0x140004dd2
   140004dcf:	mov    rcx,rbx
   140004dd2:	cmp    rax,0x10
   140004dd6:	jb     0x140004ddd
   140004dd8:	mov    rax,QWORD PTR [rbx]
   140004ddb:	jmp    0x140004de0
   140004ddd:	mov    rax,rbx
   140004de0:	test   rdi,rdi
   140004de3:	je     0x140004e26
   140004de5:	lea    rdx,[rcx+r14*1]
   140004de9:	lea    rcx,[rax+rbp*1]
   140004ded:	mov    r8,rdi
   140004df0:	call   QWORD PTR [rip+0x53aa]        # 0x14000a1a0
   140004df6:	jmp    0x140004e26
   140004df8:	cmp    QWORD PTR [rsi+0x18],0x10
   140004dfd:	jb     0x140004e02
   140004dff:	mov    rsi,QWORD PTR [rsi]
   140004e02:	cmp    QWORD PTR [rbx+0x18],0x10
   140004e07:	jb     0x140004e0e
   140004e09:	mov    rax,QWORD PTR [rbx]
   140004e0c:	jmp    0x140004e11
   140004e0e:	mov    rax,rbx
   140004e11:	test   rdi,rdi
   140004e14:	je     0x140004e26
   140004e16:	lea    rdx,[rsi+r14*1]
   140004e1a:	lea    rcx,[rax+rbp*1]
   140004e1e:	mov    r8,rdi
   140004e21:	call   0x1400089c4
   140004e26:	cmp    QWORD PTR [rbx+0x18],0x10
   140004e2b:	mov    QWORD PTR [rbx+0x10],r15
   140004e2f:	jb     0x140004e36
   140004e31:	mov    rax,QWORD PTR [rbx]
   140004e34:	jmp    0x140004e39
   140004e36:	mov    rax,rbx
   140004e39:	mov    BYTE PTR [rax+r15*1],0x0
   140004e3e:	mov    r15,QWORD PTR [rsp+0x48]
   140004e43:	mov    rdi,QWORD PTR [rsp+0x40]
   140004e48:	mov    rax,rbx
   140004e4b:	mov    rbx,QWORD PTR [rsp+0x50]
   140004e50:	add    rsp,0x20
   140004e54:	pop    r14
   140004e56:	pop    rsi
   140004e57:	pop    rbp
   140004e58:	ret    
   140004e59:	lea    rcx,[rip+0x59f0]        # 0x14000a850
   140004e60:	call   QWORD PTR [rip+0x51fa]        # 0x14000a060
   140004e66:	int3   
   140004e67:	int3   
   140004e68:	int3   
   140004e69:	int3   
   140004e6a:	int3   
   140004e6b:	int3   
   140004e6c:	int3   
   140004e6d:	int3   
   140004e6e:	int3   
   140004e6f:	int3   
   140004e70:	mov    QWORD PTR [rsp+0x10],rbx
   140004e75:	mov    QWORD PTR [rsp+0x18],rbp
   140004e7a:	mov    QWORD PTR [rsp+0x20],rsi
   140004e7f:	push   rdi
   140004e80:	sub    rsp,0x30
   140004e84:	mov    rdi,r9
   140004e87:	mov    rsi,r8
   140004e8a:	mov    rbp,rdx
   140004e8d:	mov    rbx,rcx
   140004e90:	test   r8,r8
   140004e93:	je     0x140004ee7
   140004e95:	mov    r10,QWORD PTR [rcx+0x18]
   140004e99:	cmp    r10,0x10
   140004e9d:	jb     0x140004ea4
   140004e9f:	mov    rax,QWORD PTR [rcx]
   140004ea2:	jmp    0x140004ea7
   140004ea4:	mov    rax,rcx
   140004ea7:	cmp    r8,rax
   140004eaa:	jb     0x140004ee7
   140004eac:	cmp    r10,0x10
   140004eb0:	jb     0x140004eb5
   140004eb2:	mov    rcx,QWORD PTR [rcx]
   140004eb5:	add    rcx,QWORD PTR [rbx+0x10]
   140004eb9:	cmp    rcx,r8
   140004ebc:	jbe    0x140004ee7
   140004ebe:	cmp    r10,0x10
   140004ec2:	jb     0x140004ec9
   140004ec4:	mov    rax,QWORD PTR [rbx]
   140004ec7:	jmp    0x140004ecc
   140004ec9:	mov    rax,rbx
   140004ecc:	sub    rsi,rax
   140004ecf:	mov    QWORD PTR [rsp+0x20],r9
   140004ed4:	mov    r8,rbx
   140004ed7:	mov    r9,rsi
   140004eda:	mov    rcx,rbx
   140004edd:	call   0x140004cf0
   140004ee2:	jmp    0x140004fb9
   140004ee7:	mov    rcx,QWORD PTR [rbx+0x10]
   140004eeb:	cmp    rcx,rdx
   140004eee:	jae    0x140004efe
   140004ef0:	lea    rcx,[rip+0x5959]        # 0x14000a850
   140004ef7:	call   QWORD PTR [rip+0x5163]        # 0x14000a060
   140004efd:	int3   
   140004efe:	or     rax,0xffffffffffffffff
   140004f02:	sub    rax,rcx
   140004f05:	cmp    rax,r9
   140004f08:	ja     0x140004f18
   140004f0a:	lea    rcx,[rip+0x592f]        # 0x14000a840
   140004f11:	call   QWORD PTR [rip+0x5271]        # 0x14000a188
   140004f17:	int3   
   140004f18:	test   r9,r9
   140004f1b:	je     0x140004fb6
   140004f21:	mov    QWORD PTR [rsp+0x40],r14
   140004f26:	lea    r14,[rcx+r9*1]
   140004f2a:	xor    r8d,r8d
   140004f2d:	mov    rdx,r14
   140004f30:	mov    rcx,rbx
   140004f33:	call   0x1400021d0
   140004f38:	test   al,al
   140004f3a:	je     0x140004fb1
   140004f3c:	mov    rax,QWORD PTR [rbx+0x18]
   140004f40:	cmp    rax,0x10
   140004f44:	jb     0x140004f4b
   140004f46:	mov    rcx,QWORD PTR [rbx]
   140004f49:	jmp    0x140004f4e
   140004f4b:	mov    rcx,rbx
   140004f4e:	cmp    rax,0x10
   140004f52:	jb     0x140004f59
   140004f54:	mov    rax,QWORD PTR [rbx]
   140004f57:	jmp    0x140004f5c
   140004f59:	mov    rax,rbx
   140004f5c:	mov    r8,QWORD PTR [rbx+0x10]
   140004f60:	sub    r8,rbp
   140004f63:	je     0x140004f76
   140004f65:	lea    rdx,[rcx+rbp*1]
   140004f69:	lea    rcx,[rax+rbp*1]
   140004f6d:	add    rcx,rdi
   140004f70:	call   QWORD PTR [rip+0x522a]        # 0x14000a1a0
   140004f76:	cmp    QWORD PTR [rbx+0x18],0x10
   140004f7b:	jb     0x140004f82
   140004f7d:	mov    rax,QWORD PTR [rbx]
   140004f80:	jmp    0x140004f85
   140004f82:	mov    rax,rbx
   140004f85:	test   rdi,rdi
   140004f88:	je     0x140004f99
   140004f8a:	lea    rcx,[rax+rbp*1]
   140004f8e:	mov    r8,rdi
   140004f91:	mov    rdx,rsi
   140004f94:	call   0x1400089c4
   140004f99:	cmp    QWORD PTR [rbx+0x18],0x10
   140004f9e:	mov    QWORD PTR [rbx+0x10],r14
   140004fa2:	jb     0x140004fa9
   140004fa4:	mov    rax,QWORD PTR [rbx]
   140004fa7:	jmp    0x140004fac
   140004fa9:	mov    rax,rbx
   140004fac:	mov    BYTE PTR [rax+r14*1],0x0
   140004fb1:	mov    r14,QWORD PTR [rsp+0x40]
   140004fb6:	mov    rax,rbx
   140004fb9:	mov    rbx,QWORD PTR [rsp+0x48]
   140004fbe:	mov    rbp,QWORD PTR [rsp+0x50]
   140004fc3:	mov    rsi,QWORD PTR [rsp+0x58]
   140004fc8:	add    rsp,0x30
   140004fcc:	pop    rdi
   140004fcd:	ret    
   140004fce:	int3   
   140004fcf:	int3   
   140004fd0:	cmp    BYTE PTR [r8],0x0
   140004fd4:	jne    0x140004fde
   140004fd6:	xor    r9d,r9d
   140004fd9:	jmp    0x140004e70
   140004fde:	or     r9,0xffffffffffffffff
   140004fe2:	inc    r9
   140004fe5:	cmp    BYTE PTR [r8+r9*1],0x0
   140004fea:	jne    0x140004fe2
   140004fec:	jmp    0x140004e70
   140004ff1:	int3   
   140004ff2:	int3   
   140004ff3:	int3   
   140004ff4:	int3   
   140004ff5:	int3   
   140004ff6:	int3   
   140004ff7:	int3   
   140004ff8:	int3   
   140004ff9:	int3   
   140004ffa:	int3   
   140004ffb:	int3   
   140004ffc:	int3   
   140004ffd:	int3   
   140004ffe:	int3   
   140004fff:	int3   
   140005000:	rex push rbp
   140005002:	lea    rbp,[rsp-0xa0]
   14000500a:	sub    rsp,0x1a0
   140005011:	mov    QWORD PTR [rsp+0x70],0xfffffffffffffffe
   14000501a:	mov    QWORD PTR [rsp+0x1b0],rbx
   140005022:	mov    rbx,rcx
   140005025:	xor    ecx,ecx
   140005027:	call   QWORD PTR [rip+0x5233]        # 0x14000a260
   14000502d:	mov    QWORD PTR [rbp+0xb8],rax
   140005034:	lea    rcx,[rbp+0xb8]
   14000503b:	call   QWORD PTR [rip+0x5217]        # 0x14000a258
   140005041:	mov    rcx,rax
   140005044:	call   QWORD PTR [rip+0x5206]        # 0x14000a250
   14000504a:	mov    QWORD PTR [rsp+0x68],0xf
   140005053:	mov    QWORD PTR [rsp+0x60],0x0
   14000505c:	mov    BYTE PTR [rsp+0x50],0x0
   140005061:	cmp    BYTE PTR [rax],0x0
   140005064:	jne    0x14000506b
   140005066:	xor    r8d,r8d
   140005069:	jmp    0x14000507a
   14000506b:	or     r8,0xffffffffffffffff
   14000506f:	nop
   140005070:	inc    r8
   140005073:	cmp    BYTE PTR [rax+r8*1],0x0
   140005078:	jne    0x140005070
   14000507a:	mov    rdx,rax
   14000507d:	lea    rcx,[rsp+0x50]
   140005082:	call   0x140002b00
   140005087:	nop
   140005088:	lea    r8,[rip+0x5a4d]        # 0x14000aadc
   14000508f:	mov    rdx,rbx
   140005092:	lea    rcx,[rsp+0x30]
   140005097:	call   0x1400036e0
   14000509c:	nop
   14000509d:	or     r9,0xffffffffffffffff
   1400050a1:	xor    r8d,r8d
   1400050a4:	mov    rdx,rax
   1400050a7:	lea    rcx,[rsp+0x50]
   1400050ac:	call   0x140004510
   1400050b1:	nop
   1400050b2:	cmp    QWORD PTR [rsp+0x48],0x10
   1400050b8:	jb     0x1400050c4
   1400050ba:	mov    rcx,QWORD PTR [rsp+0x30]
   1400050bf:	call   0x140008880
   1400050c4:	lea    rcx,[rsp+0x30]
   1400050c9:	call   0x140004af0
   1400050ce:	nop
   1400050cf:	cmp    QWORD PTR [rax+0x18],0x10
   1400050d4:	jb     0x1400050d9
   1400050d6:	mov    rax,QWORD PTR [rax]
   1400050d9:	mov    DWORD PTR [rsp+0x20],0x1
   1400050e1:	mov    r9d,0x40
   1400050e7:	lea    r8d,[r9-0x36]
   1400050eb:	mov    rdx,rax
   1400050ee:	lea    rcx,[rbp-0x80]
   1400050f2:	call   0x140003b40
   1400050f7:	nop
   1400050f8:	cmp    QWORD PTR [rsp+0x48],0x10
   1400050fe:	jb     0x14000510a
   140005100:	mov    rcx,QWORD PTR [rsp+0x30]
   140005105:	call   0x140008880
   14000510a:	mov    QWORD PTR [rsp+0x48],0xf
   140005113:	mov    QWORD PTR [rsp+0x40],0x0
   14000511c:	mov    BYTE PTR [rsp+0x30],0x0
   140005121:	lea    rdx,[rsp+0x50]
   140005126:	lea    rcx,[rbp-0x70]
   14000512a:	call   0x1400034c0
   14000512f:	lea    rcx,[rbp-0x68]
   140005133:	call   0x140004a00
   140005138:	test   rax,rax
   14000513b:	jne    0x140005158
   14000513d:	mov    rax,QWORD PTR [rbp-0x80]
   140005141:	movsxd rcx,DWORD PTR [rax+0x4]
   140005145:	lea    rcx,[rbp+rcx*1-0x80]
   14000514a:	xor    r8d,r8d
   14000514d:	lea    edx,[r8+0x2]
   140005151:	call   QWORD PTR [rip+0x4fb9]        # 0x14000a110
   140005157:	nop
   140005158:	mov    rax,QWORD PTR [rbp-0x80]
   14000515c:	movsxd rcx,DWORD PTR [rax+0x4]
   140005160:	lea    rax,[rip+0x5a01]        # 0x14000ab68
   140005167:	mov    QWORD PTR [rbp+rcx*1-0x80],rax
   14000516c:	mov    rax,QWORD PTR [rbp-0x80]
   140005170:	movsxd rcx,DWORD PTR [rax+0x4]
   140005174:	lea    edx,[rcx-0xb8]
   14000517a:	mov    DWORD PTR [rsp+rcx*1+0x7c],edx
   14000517e:	lea    rcx,[rbp-0x68]
   140005182:	call   0x140003db0
   140005187:	lea    rcx,[rbp-0x60]
   14000518b:	call   QWORD PTR [rip+0x4f9f]        # 0x14000a130
   140005191:	lea    rcx,[rbp+0x38]
   140005195:	call   QWORD PTR [rip+0x4f6d]        # 0x14000a108
   14000519b:	nop
   14000519c:	cmp    QWORD PTR [rsp+0x68],0x10
   1400051a2:	jb     0x1400051ae
   1400051a4:	mov    rcx,QWORD PTR [rsp+0x50]
   1400051a9:	call   0x140008880
   1400051ae:	mov    rbx,QWORD PTR [rsp+0x1b0]
   1400051b6:	add    rsp,0x1a0
   1400051bd:	pop    rbp
   1400051be:	ret    
   1400051bf:	int3   
   1400051c0:	xor    eax,eax
   1400051c2:	cmp    DWORD PTR [rcx],0xffffffff
   1400051c5:	cmovne eax,DWORD PTR [rcx]
   1400051c8:	ret    
   1400051c9:	int3   
   1400051ca:	int3   
   1400051cb:	int3   
   1400051cc:	int3   
   1400051cd:	int3   
   1400051ce:	int3   
   1400051cf:	int3   
   1400051d0:	rex push rdi
   1400051d2:	sub    rsp,0x30
   1400051d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400051df:	mov    QWORD PTR [rsp+0x48],rbx
   1400051e4:	mov    eax,r8d
   1400051e7:	mov    r10,rdx
   1400051ea:	mov    rbx,rcx
   1400051ed:	cmp    QWORD PTR [rcx+0x90],0x0
   1400051f5:	jne    0x1400052ce
   1400051fb:	mov    r8d,r9d
   1400051fe:	mov    edx,eax
   140005200:	mov    rcx,r10
   140005203:	call   QWORD PTR [rip+0x4f2f]        # 0x14000a138
   140005209:	mov    rdi,rax
   14000520c:	test   rax,rax
   14000520f:	je     0x1400052ce
   140005215:	mov    BYTE PTR [rbx+0x88],0x1
   14000521c:	mov    BYTE PTR [rbx+0x81],0x0
   140005223:	mov    rcx,rbx
   140005226:	call   QWORD PTR [rip+0x4ed4]        # 0x14000a100
   14000522c:	lea    rcx,[rdi+0x10]
   140005230:	lea    rdx,[rdi+0x8]
   140005234:	mov    QWORD PTR [rbx+0x18],rcx
   140005238:	mov    QWORD PTR [rbx+0x20],rcx
   14000523c:	mov    QWORD PTR [rbx+0x38],rdi
   140005240:	mov    QWORD PTR [rbx+0x40],rdi
   140005244:	mov    QWORD PTR [rbx+0x50],rdx
   140005248:	mov    QWORD PTR [rbx+0x58],rdx
   14000524c:	mov    QWORD PTR [rbx+0x90],rdi
   140005253:	mov    eax,DWORD PTR [rip+0xa353]        # 0x14000f5ac
   140005259:	mov    DWORD PTR [rbx+0x84],eax
   14000525f:	mov    QWORD PTR [rbx+0x78],0x0
   140005267:	lea    rdx,[rsp+0x40]
   14000526c:	mov    rcx,rbx
   14000526f:	call   QWORD PTR [rip+0x4e6b]        # 0x14000a0e0
   140005275:	nop
   140005276:	mov    rcx,rax
   140005279:	call   0x140003970
   14000527e:	mov    rdi,rax
   140005281:	mov    rcx,rax
   140005284:	call   QWORD PTR [rip+0x4e16]        # 0x14000a0a0
   14000528a:	test   al,al
   14000528c:	je     0x140005298
   14000528e:	mov    QWORD PTR [rbx+0x78],0x0
   140005296:	jmp    0x1400052a6
   140005298:	mov    QWORD PTR [rbx+0x78],rdi
   14000529c:	mov    rcx,rbx
   14000529f:	call   QWORD PTR [rip+0x4e5b]        # 0x14000a100
   1400052a5:	nop
   1400052a6:	mov    rcx,QWORD PTR [rsp+0x40]
   1400052ab:	test   rcx,rcx
   1400052ae:	je     0x1400052c9
   1400052b0:	mov    rax,QWORD PTR [rcx]
   1400052b3:	call   QWORD PTR [rax+0x10]
   1400052b6:	test   rax,rax
   1400052b9:	je     0x1400052c9
   1400052bb:	mov    r8,QWORD PTR [rax]
   1400052be:	mov    edx,0x1
   1400052c3:	mov    rcx,rax
   1400052c6:	call   QWORD PTR [r8]
   1400052c9:	mov    rax,rbx
   1400052cc:	jmp    0x1400052d0
   1400052ce:	xor    eax,eax
   1400052d0:	mov    rbx,QWORD PTR [rsp+0x48]
   1400052d5:	add    rsp,0x30
   1400052d9:	pop    rdi
   1400052da:	ret    
   1400052db:	int3   
   1400052dc:	int3   
   1400052dd:	int3   
   1400052de:	int3   
   1400052df:	int3   
   1400052e0:	mov    rax,rsp
   1400052e3:	push   rbp
   1400052e4:	push   rdi
   1400052e5:	push   r12
   1400052e7:	push   r14
   1400052e9:	push   r15
   1400052eb:	mov    rbp,rsp
   1400052ee:	sub    rsp,0x70
   1400052f2:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   1400052fa:	mov    QWORD PTR [rax+0x8],rbx
   1400052fe:	mov    QWORD PTR [rax+0x10],rsi
   140005302:	mov    r14d,edx
   140005305:	mov    rdi,rcx
   140005308:	cmp    edx,0xffffffff
   14000530b:	jne    0x140005314
   14000530d:	xor    eax,eax
   14000530f:	jmp    0x1400055a2
   140005314:	mov    rax,QWORD PTR [rcx+0x40]
   140005318:	mov    rcx,QWORD PTR [rax]
   14000531b:	test   rcx,rcx
   14000531e:	je     0x14000534f
   140005320:	mov    rdx,QWORD PTR [rdi+0x58]
   140005324:	movsxd r8,DWORD PTR [rdx]
   140005327:	lea    rax,[rcx+r8*1]
   14000532b:	cmp    rcx,rax
   14000532e:	jae    0x14000534f
   140005330:	lea    eax,[r8-0x1]
   140005334:	mov    DWORD PTR [rdx],eax
   140005336:	mov    rcx,QWORD PTR [rdi+0x40]
   14000533a:	mov    rdx,QWORD PTR [rcx]
   14000533d:	lea    rax,[rdx+0x1]
   140005341:	mov    QWORD PTR [rcx],rax
   140005344:	mov    BYTE PTR [rdx],r14b
   140005347:	mov    eax,r14d
   14000534a:	jmp    0x1400055a2
   14000534f:	cmp    QWORD PTR [rdi+0x90],0x0
   140005357:	jne    0x140005362
   140005359:	or     rax,0xffffffffffffffff
   14000535d:	jmp    0x1400055a2
   140005362:	mov    rax,QWORD PTR [rdi+0x18]
   140005366:	mov    rcx,QWORD PTR [rax]
   140005369:	lea    rax,[rdi+0x80]
   140005370:	cmp    rcx,rax
   140005373:	jne    0x140005389
   140005375:	mov    rdx,QWORD PTR [rdi+0x68]
   140005379:	mov    r9,QWORD PTR [rdi+0x70]
   14000537d:	mov    r8,rdx
   140005380:	mov    rcx,rdi
   140005383:	call   QWORD PTR [rip+0x4d6f]        # 0x14000a0f8
   140005389:	cmp    QWORD PTR [rdi+0x78],0x0
   14000538e:	jne    0x1400053b0
   140005390:	movsx  ecx,r14b
   140005394:	mov    rdx,QWORD PTR [rdi+0x90]
   14000539b:	call   QWORD PTR [rip+0x4e5f]        # 0x14000a200
   1400053a1:	or     rsi,0xffffffffffffffff
   1400053a5:	cmp    eax,esi
   1400053a7:	cmovne esi,r14d
   1400053ab:	jmp    0x1400055a0
   1400053b0:	mov    BYTE PTR [rbp-0x30],r14b
   1400053b4:	mov    edx,0xf
   1400053b9:	mov    QWORD PTR [rbp-0x8],rdx
   1400053bd:	mov    BYTE PTR [rbp-0x20],0x0
   1400053c1:	xor    ecx,ecx
   1400053c3:	mov    QWORD PTR [rbp-0x20],rcx
   1400053c7:	mov    QWORD PTR [rbp-0x10],0x8
   1400053cf:	lea    rax,[rbp-0x20]
   1400053d3:	cmp    rdx,0x10
   1400053d7:	cmovae rax,rcx
   1400053db:	mov    BYTE PTR [rax+0x8],cl
   1400053de:	or     rsi,0xffffffffffffffff
   1400053e2:	xor    r12d,r12d
   1400053e5:	mov    rdx,QWORD PTR [rbp-0x8]
   1400053e9:	mov    r8,QWORD PTR [rbp-0x10]
   1400053ed:	nop    DWORD PTR [rax]
   1400053f0:	lea    rax,[rbp-0x20]
   1400053f4:	cmp    rdx,0x10
   1400053f8:	cmovae rax,QWORD PTR [rbp-0x20]
   1400053fd:	lea    rcx,[rbp-0x20]
   140005401:	cmovae rcx,QWORD PTR [rbp-0x20]
   140005406:	add    rax,r8
   140005409:	lea    rdx,[rbp+0x40]
   14000540d:	mov    QWORD PTR [rsp+0x38],rdx
   140005412:	mov    QWORD PTR [rsp+0x30],rax
   140005417:	mov    QWORD PTR [rsp+0x28],rcx
   14000541c:	lea    rax,[rbp+0x48]
   140005420:	mov    QWORD PTR [rsp+0x20],rax
   140005425:	lea    r9,[rbp-0x2f]
   140005429:	lea    r8,[rbp-0x30]
   14000542d:	lea    rdx,[rdi+0x84]
   140005434:	mov    rcx,QWORD PTR [rdi+0x78]
   140005438:	call   QWORD PTR [rip+0x4c72]        # 0x14000a0b0
   14000543e:	test   eax,eax
   140005440:	js     0x14000558d
   140005446:	cmp    eax,0x1
   140005449:	jg     0x140005570
   14000544f:	lea    rax,[rbp-0x20]
   140005453:	mov    r9,QWORD PTR [rbp-0x20]
   140005457:	mov    rdx,QWORD PTR [rbp-0x8]
   14000545b:	cmp    rdx,0x10
   14000545f:	cmovae rax,r9
   140005463:	mov    rbx,QWORD PTR [rbp+0x40]
   140005467:	sub    rbx,rax
   14000546a:	je     0x14000549a
   14000546c:	lea    rcx,[rbp-0x20]
   140005470:	cmp    rdx,0x10
   140005474:	cmovae rcx,r9
   140005478:	mov    r9,QWORD PTR [rdi+0x90]
   14000547f:	mov    r8,rbx
   140005482:	mov    edx,0x1
   140005487:	call   QWORD PTR [rip+0x4d8b]        # 0x14000a218
   14000548d:	mov    rdx,QWORD PTR [rbp-0x8]
   140005491:	cmp    rbx,rax
   140005494:	jne    0x140005591
   14000549a:	mov    BYTE PTR [rdi+0x81],0x1
   1400054a1:	lea    rax,[rbp-0x30]
   1400054a5:	cmp    QWORD PTR [rbp+0x48],rax
   1400054a9:	jne    0x14000556b
   1400054af:	mov    r8,QWORD PTR [rbp-0x10]
   1400054b3:	test   rbx,rbx
   1400054b6:	jne    0x1400053f0
   1400054bc:	cmp    r8,0x20
   1400054c0:	jae    0x140005591
   1400054c6:	mov    rax,rsi
   1400054c9:	sub    rax,r8
   1400054cc:	cmp    rax,0x8
   1400054d0:	jbe    0x14000555d
   1400054d6:	lea    rbx,[r8+0x8]
   1400054da:	cmp    rbx,0xfffffffffffffffe
   1400054de:	ja     0x14000554f
   1400054e0:	cmp    rdx,rbx
   1400054e3:	jae    0x1400054fb
   1400054e5:	mov    rdx,rbx
   1400054e8:	lea    rcx,[rbp-0x20]
   1400054ec:	call   0x140002020
   1400054f1:	mov    rdx,QWORD PTR [rbp-0x8]
   1400054f5:	mov    r8,QWORD PTR [rbp-0x10]
   1400054f9:	jmp    0x140005519
   1400054fb:	test   rbx,rbx
   1400054fe:	jne    0x140005522
   140005500:	mov    QWORD PTR [rbp-0x10],r12
   140005504:	lea    rax,[rbp-0x20]
   140005508:	cmp    rdx,0x10
   14000550c:	cmovae rax,QWORD PTR [rbp-0x20]
   140005511:	mov    BYTE PTR [rax],r12b
   140005514:	jmp    0x1400053e5
   140005519:	test   rbx,rbx
   14000551c:	je     0x1400053f0
   140005522:	lea    rax,[rbp-0x20]
   140005526:	cmp    rdx,0x10
   14000552a:	cmovae rax,QWORD PTR [rbp-0x20]
   14000552f:	xor    ecx,ecx
   140005531:	mov    QWORD PTR [r8+rax*1],rcx
   140005535:	mov    QWORD PTR [rbp-0x10],rbx
   140005539:	lea    rax,[rbp-0x20]
   14000553d:	cmp    QWORD PTR [rbp-0x8],0x10
   140005542:	cmovae rax,QWORD PTR [rbp-0x20]
   140005547:	mov    BYTE PTR [rbx+rax*1],cl
   14000554a:	jmp    0x1400053e5
   14000554f:	lea    rcx,[rip+0x52ea]        # 0x14000a840
   140005556:	call   QWORD PTR [rip+0x4c2c]        # 0x14000a188
   14000555c:	int3   
   14000555d:	lea    rcx,[rip+0x52dc]        # 0x14000a840
   140005564:	call   QWORD PTR [rip+0x4c1e]        # 0x14000a188
   14000556a:	int3   
   14000556b:	mov    esi,r14d
   14000556e:	jmp    0x140005591
   140005570:	cmp    eax,0x3
   140005573:	jne    0x14000558d
   140005575:	movsx  ecx,BYTE PTR [rbp-0x30]
   140005579:	mov    rdx,QWORD PTR [rdi+0x90]
   140005580:	call   QWORD PTR [rip+0x4c7a]        # 0x14000a200
   140005586:	cmp    eax,0xffffffff
   140005589:	cmovne esi,r14d
   14000558d:	mov    rdx,QWORD PTR [rbp-0x8]
   140005591:	cmp    rdx,0x10
   140005595:	jb     0x1400055a0
   140005597:	mov    rcx,QWORD PTR [rbp-0x20]
   14000559b:	call   0x140008880
   1400055a0:	mov    eax,esi
   1400055a2:	lea    r11,[rsp+0x70]
   1400055a7:	mov    rbx,QWORD PTR [r11+0x30]
   1400055ab:	mov    rsi,QWORD PTR [r11+0x38]
   1400055af:	mov    rsp,r11
   1400055b2:	pop    r15
   1400055b4:	pop    r14
   1400055b6:	pop    r12
   1400055b8:	pop    rdi
   1400055b9:	pop    rbp
   1400055ba:	ret    
   1400055bb:	int3   
   1400055bc:	int3   
   1400055bd:	int3   
   1400055be:	int3   
   1400055bf:	int3   
   1400055c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400055c5:	push   rdi
   1400055c6:	sub    rsp,0x20
   1400055ca:	mov    rax,QWORD PTR [rcx+0x38]
   1400055ce:	mov    rdi,rcx
   1400055d1:	mov    ebx,edx
   1400055d3:	mov    rcx,QWORD PTR [rax]
   1400055d6:	test   rcx,rcx
   1400055d9:	je     0x140005611
   1400055db:	mov    rax,QWORD PTR [rdi+0x18]
   1400055df:	cmp    QWORD PTR [rax],rcx
   1400055e2:	jae    0x140005611
   1400055e4:	cmp    edx,0xffffffff
   1400055e7:	je     0x1400055f1
   1400055e9:	movzx  eax,BYTE PTR [rcx-0x1]
   1400055ed:	cmp    eax,edx
   1400055ef:	jne    0x140005611
   1400055f1:	mov    rax,QWORD PTR [rdi+0x50]
   1400055f5:	inc    DWORD PTR [rax]
   1400055f7:	mov    rax,QWORD PTR [rdi+0x38]
   1400055fb:	dec    QWORD PTR [rax]
   1400055fe:	xor    eax,eax
   140005600:	cmp    edx,0xffffffff
   140005603:	cmovne eax,edx
   140005606:	mov    rbx,QWORD PTR [rsp+0x30]
   14000560b:	add    rsp,0x20
   14000560f:	pop    rdi
   140005610:	ret    
   140005611:	mov    rdx,QWORD PTR [rdi+0x90]
   140005618:	test   rdx,rdx
   14000561b:	je     0x14000565e
   14000561d:	cmp    ebx,0xffffffff
   140005620:	je     0x14000565e
   140005622:	cmp    QWORD PTR [rdi+0x78],0x0
   140005627:	jne    0x140005637
   140005629:	movzx  ecx,bl
   14000562c:	call   QWORD PTR [rip+0x4bf6]        # 0x14000a228
   140005632:	cmp    eax,0xffffffff
   140005635:	jne    0x140005651
   140005637:	mov    rax,QWORD PTR [rdi+0x38]
   14000563b:	lea    rcx,[rdi+0x80]
   140005642:	cmp    QWORD PTR [rax],rcx
   140005645:	je     0x14000565e
   140005647:	mov    BYTE PTR [rcx],bl
   140005649:	mov    rcx,rdi
   14000564c:	call   0x140004490
   140005651:	mov    eax,ebx
   140005653:	mov    rbx,QWORD PTR [rsp+0x30]
   140005658:	add    rsp,0x20
   14000565c:	pop    rdi
   14000565d:	ret    
   14000565e:	or     eax,0xffffffff
   140005661:	mov    rbx,QWORD PTR [rsp+0x30]
   140005666:	add    rsp,0x20
   14000566a:	pop    rdi
   14000566b:	ret    
   14000566c:	int3   
   14000566d:	int3   
   14000566e:	int3   
   14000566f:	int3   
   140005670:	mov    QWORD PTR [rsp+0x8],rbx
   140005675:	push   rdi
   140005676:	sub    rsp,0x20
   14000567a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000567e:	mov    rbx,rcx
   140005681:	cmp    rdi,rdx
   140005684:	ja     0x1400056aa
   140005686:	cmp    QWORD PTR [rcx+0x18],rdx
   14000568a:	je     0x1400056aa
   14000568c:	mov    r8b,0x1
   14000568f:	call   0x1400021d0
   140005694:	test   al,al
   140005696:	je     0x1400056aa
   140005698:	cmp    QWORD PTR [rbx+0x18],0x10
   14000569d:	mov    QWORD PTR [rbx+0x10],rdi
   1400056a1:	jb     0x1400056a6
   1400056a3:	mov    rbx,QWORD PTR [rbx]
   1400056a6:	mov    BYTE PTR [rbx+rdi*1],0x0
   1400056aa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400056af:	add    rsp,0x20
   1400056b3:	pop    rdi
   1400056b4:	ret    
   1400056b5:	int3   
   1400056b6:	int3   
   1400056b7:	int3   
   1400056b8:	int3   
   1400056b9:	int3   
   1400056ba:	int3   
   1400056bb:	int3   
   1400056bc:	int3   
   1400056bd:	int3   
   1400056be:	int3   
   1400056bf:	int3   
   1400056c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400056c5:	mov    QWORD PTR [rsp+0x18],rbp
   1400056ca:	push   rsi
   1400056cb:	push   rdi
   1400056cc:	push   r14
   1400056ce:	sub    rsp,0x20
   1400056d2:	mov    rax,QWORD PTR [rcx+0x38]
   1400056d6:	lea    r14,[rcx+0x80]
   1400056dd:	mov    ebp,r9d
   1400056e0:	mov    rsi,r8
   1400056e3:	mov    rdi,rdx
   1400056e6:	mov    rbx,rcx
   1400056e9:	cmp    QWORD PTR [rax],r14
   1400056ec:	jne    0x1400056fe
   1400056ee:	cmp    r9d,0x1
   1400056f2:	jne    0x1400056fe
   1400056f4:	cmp    QWORD PTR [rcx+0x78],0x0
   1400056f9:	jne    0x1400056fe
   1400056fb:	dec    rsi
   1400056fe:	cmp    QWORD PTR [rcx+0x90],0x0
   140005706:	je     0x140005781
   140005708:	call   0x1400040f0
   14000570d:	test   al,al
   14000570f:	je     0x140005781
   140005711:	test   rsi,rsi
   140005714:	jne    0x14000571b
   140005716:	cmp    ebp,0x1
   140005719:	je     0x140005732
   14000571b:	mov    rcx,QWORD PTR [rbx+0x90]
   140005722:	mov    r8d,ebp
   140005725:	mov    rdx,rsi
   140005728:	call   QWORD PTR [rip+0x4ae2]        # 0x14000a210
   14000572e:	test   eax,eax
   140005730:	jne    0x140005781
   140005732:	mov    rcx,QWORD PTR [rbx+0x90]
   140005739:	lea    rdx,[rsp+0x40]
   14000573e:	call   QWORD PTR [rip+0x4ab4]        # 0x14000a1f8
   140005744:	test   eax,eax
   140005746:	jne    0x140005781
   140005748:	mov    rax,QWORD PTR [rbx+0x18]
   14000574c:	cmp    QWORD PTR [rax],r14
   14000574f:	jne    0x14000576b
   140005751:	mov    rcx,QWORD PTR [rbx+0x68]
   140005755:	mov    rdx,QWORD PTR [rbx+0x70]
   140005759:	mov    QWORD PTR [rax],rcx
   14000575c:	mov    rax,QWORD PTR [rbx+0x38]
   140005760:	sub    edx,ecx
   140005762:	mov    QWORD PTR [rax],rcx
   140005765:	mov    rax,QWORD PTR [rbx+0x50]
   140005769:	mov    DWORD PTR [rax],edx
   14000576b:	xor    eax,eax
   14000576d:	mov    QWORD PTR [rdi],rax
   140005770:	mov    rax,QWORD PTR [rsp+0x40]
   140005775:	mov    QWORD PTR [rdi+0x8],rax
   140005779:	mov    eax,DWORD PTR [rbx+0x84]
   14000577f:	jmp    0x140005794
   140005781:	mov    rax,QWORD PTR [rip+0x49d0]        # 0x14000a158
   140005788:	mov    rcx,QWORD PTR [rax]
   14000578b:	xor    eax,eax
   14000578d:	mov    QWORD PTR [rdi],rcx
   140005790:	mov    QWORD PTR [rdi+0x8],rax
   140005794:	mov    rbx,QWORD PTR [rsp+0x48]
   140005799:	mov    rbp,QWORD PTR [rsp+0x50]
   14000579e:	mov    DWORD PTR [rdi+0x10],eax
   1400057a1:	mov    rax,rdi
   1400057a4:	add    rsp,0x20
   1400057a8:	pop    r14
   1400057aa:	pop    rdi
   1400057ab:	pop    rsi
   1400057ac:	ret    
   1400057ad:	int3   
   1400057ae:	int3   
   1400057af:	int3   
   1400057b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400057b5:	mov    QWORD PTR [rsp+0x18],rsi
   1400057ba:	mov    QWORD PTR [rsp+0x20],rdi
   1400057bf:	push   r14
   1400057c1:	sub    rsp,0x20
   1400057c5:	cmp    QWORD PTR [rcx+0x90],0x0
   1400057cd:	mov    rax,QWORD PTR [r8+0x8]
   1400057d1:	mov    rsi,QWORD PTR [r8]
   1400057d4:	mov    QWORD PTR [rsp+0x30],rax
   1400057d9:	mov    r14,r8
   1400057dc:	mov    rbx,rdx
   1400057df:	mov    rdi,rcx
   1400057e2:	je     0x14000585e
   1400057e4:	call   0x1400040f0
   1400057e9:	test   al,al
   1400057eb:	je     0x14000585e
   1400057ed:	mov    rcx,QWORD PTR [rdi+0x90]
   1400057f4:	lea    rdx,[rsp+0x30]
   1400057f9:	call   QWORD PTR [rip+0x4a09]        # 0x14000a208
   1400057ff:	test   eax,eax
   140005801:	jne    0x14000585e
   140005803:	test   rsi,rsi
   140005806:	je     0x140005820
   140005808:	mov    rcx,QWORD PTR [rdi+0x90]
   14000580f:	lea    r8d,[rax+0x1]
   140005813:	mov    rdx,rsi
   140005816:	call   QWORD PTR [rip+0x49f4]        # 0x14000a210
   14000581c:	test   eax,eax
   14000581e:	jne    0x14000585e
   140005820:	mov    rcx,QWORD PTR [rdi+0x90]
   140005827:	lea    rdx,[rsp+0x30]
   14000582c:	call   QWORD PTR [rip+0x49c6]        # 0x14000a1f8
   140005832:	test   eax,eax
   140005834:	jne    0x14000585e
   140005836:	mov    eax,DWORD PTR [r14+0x10]
   14000583a:	mov    rcx,rdi
   14000583d:	mov    DWORD PTR [rdi+0x84],eax
   140005843:	call   0x140004460
   140005848:	xor    eax,eax
   14000584a:	mov    QWORD PTR [rbx],rax
   14000584d:	mov    rax,QWORD PTR [rsp+0x30]
   140005852:	mov    QWORD PTR [rbx+0x8],rax
   140005856:	mov    eax,DWORD PTR [rdi+0x84]
   14000585c:	jmp    0x140005871
   14000585e:	mov    rax,QWORD PTR [rip+0x48f3]        # 0x14000a158
   140005865:	mov    rcx,QWORD PTR [rax]
   140005868:	xor    eax,eax
   14000586a:	mov    QWORD PTR [rbx],rcx
   14000586d:	mov    QWORD PTR [rbx+0x8],rax
   140005871:	mov    rsi,QWORD PTR [rsp+0x40]
   140005876:	mov    rdi,QWORD PTR [rsp+0x48]
   14000587b:	mov    DWORD PTR [rbx+0x10],eax
   14000587e:	mov    rax,rbx
   140005881:	mov    rbx,QWORD PTR [rsp+0x38]
   140005886:	add    rsp,0x20
   14000588a:	pop    r14
   14000588c:	ret    
   14000588d:	int3   
   14000588e:	int3   
   14000588f:	int3   
   140005890:	mov    rax,QWORD PTR [rcx+0x8]
   140005894:	ret    
   140005895:	int3   
   140005896:	int3   
   140005897:	int3   
   140005898:	int3   
   140005899:	int3   
   14000589a:	int3   
   14000589b:	int3   
   14000589c:	int3   
   14000589d:	int3   
   14000589e:	int3   
   14000589f:	int3   
   1400058a0:	rex push rbx
   1400058a2:	sub    rsp,0x20
   1400058a6:	mov    rbx,rcx
   1400058a9:	mov    rcx,QWORD PTR [rcx+0x90]
   1400058b0:	mov    r9,r8
   1400058b3:	test   rcx,rcx
   1400058b6:	je     0x140005949
   1400058bc:	test   rdx,rdx
   1400058bf:	jne    0x1400058cc
   1400058c1:	test   r8,r8
   1400058c4:	jne    0x1400058cc
   1400058c6:	lea    r8d,[r9+0x4]
   1400058ca:	jmp    0x1400058cf
   1400058cc:	xor    r8d,r8d
   1400058cf:	call   QWORD PTR [rip+0x494b]        # 0x14000a220
   1400058d5:	test   eax,eax
   1400058d7:	jne    0x140005949
   1400058d9:	mov    rcx,rbx
   1400058dc:	mov    QWORD PTR [rsp+0x30],rdi
   1400058e1:	mov    rdi,QWORD PTR [rbx+0x90]
   1400058e8:	mov    BYTE PTR [rbx+0x88],0x1
   1400058ef:	mov    BYTE PTR [rbx+0x81],al
   1400058f5:	call   QWORD PTR [rip+0x4805]        # 0x14000a100
   1400058fb:	test   rdi,rdi
   1400058fe:	je     0x140005920
   140005900:	lea    rax,[rdi+0x10]
   140005904:	mov    QWORD PTR [rbx+0x38],rdi
   140005908:	mov    QWORD PTR [rbx+0x40],rdi
   14000590c:	mov    QWORD PTR [rbx+0x18],rax
   140005910:	mov    QWORD PTR [rbx+0x20],rax
   140005914:	lea    rax,[rdi+0x8]
   140005918:	mov    QWORD PTR [rbx+0x50],rax
   14000591c:	mov    QWORD PTR [rbx+0x58],rax
   140005920:	mov    QWORD PTR [rbx+0x90],rdi
   140005927:	mov    eax,DWORD PTR [rip+0x9c7f]        # 0x14000f5ac
   14000592d:	mov    rdi,QWORD PTR [rsp+0x30]
   140005932:	mov    DWORD PTR [rbx+0x84],eax
   140005938:	mov    QWORD PTR [rbx+0x78],0x0
   140005940:	mov    rax,rbx
   140005943:	add    rsp,0x20
   140005947:	pop    rbx
   140005948:	ret    
   140005949:	xor    eax,eax
   14000594b:	add    rsp,0x20
   14000594f:	pop    rbx
   140005950:	ret    
   140005951:	int3   
   140005952:	int3   
   140005953:	int3   
   140005954:	int3   
   140005955:	int3   
   140005956:	int3   
   140005957:	int3   
   140005958:	int3   
   140005959:	int3   
   14000595a:	int3   
   14000595b:	int3   
   14000595c:	int3   
   14000595d:	int3   
   14000595e:	int3   
   14000595f:	int3   
   140005960:	mov    eax,DWORD PTR [rcx+0x10]
   140005963:	ret    
   140005964:	int3   
   140005965:	int3   
   140005966:	int3   
   140005967:	int3   
   140005968:	int3   
   140005969:	int3   
   14000596a:	int3   
   14000596b:	int3   
   14000596c:	int3   
   14000596d:	int3   
   14000596e:	int3   
   14000596f:	int3   
   140005970:	rex push rbx
   140005972:	sub    rsp,0x20
   140005976:	cmp    QWORD PTR [rcx+0x90],0x0
   14000597e:	mov    rbx,rcx
   140005981:	je     0x1400059ab
   140005983:	mov    rax,QWORD PTR [rcx]
   140005986:	or     edx,0xffffffff
   140005989:	call   QWORD PTR [rax+0x18]
   14000598c:	cmp    eax,0xffffffff
   14000598f:	je     0x1400059ab
   140005991:	mov    rcx,QWORD PTR [rbx+0x90]
   140005998:	call   QWORD PTR [rip+0x484a]        # 0x14000a1e8
   14000599e:	test   eax,eax
   1400059a0:	jns    0x1400059ab
   1400059a2:	or     eax,0xffffffff
   1400059a5:	add    rsp,0x20
   1400059a9:	pop    rbx
   1400059aa:	ret    
   1400059ab:	xor    eax,eax
   1400059ad:	add    rsp,0x20
   1400059b1:	pop    rbx
   1400059b2:	ret    
   1400059b3:	int3   
   1400059b4:	int3   
   1400059b5:	int3   
   1400059b6:	int3   
   1400059b7:	int3   
   1400059b8:	int3   
   1400059b9:	int3   
   1400059ba:	int3   
   1400059bb:	int3   
   1400059bc:	int3   
   1400059bd:	int3   
   1400059be:	int3   
   1400059bf:	int3   
   1400059c0:	movzx  eax,BYTE PTR [rcx]
   1400059c3:	ret    
   1400059c4:	int3   
   1400059c5:	int3   
   1400059c6:	int3   
   1400059c7:	int3   
   1400059c8:	int3   
   1400059c9:	int3   
   1400059ca:	int3   
   1400059cb:	int3   
   1400059cc:	int3   
   1400059cd:	int3   
   1400059ce:	int3   
   1400059cf:	int3   
   1400059d0:	movzx  eax,BYTE PTR [rcx]
   1400059d3:	ret    
   1400059d4:	int3   
   1400059d5:	int3   
   1400059d6:	int3   
   1400059d7:	int3   
   1400059d8:	int3   
   1400059d9:	int3   
   1400059da:	int3   
   1400059db:	int3   
   1400059dc:	int3   
   1400059dd:	int3   
   1400059de:	int3   
   1400059df:	int3   
   1400059e0:	rex push rbp
   1400059e2:	push   rsi
   1400059e3:	push   rdi
   1400059e4:	push   r14
   1400059e6:	push   r15
   1400059e8:	mov    rbp,rsp
   1400059eb:	sub    rsp,0x70
   1400059ef:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   1400059f7:	mov    QWORD PTR [rsp+0xb0],rbx
   1400059ff:	mov    rdi,rcx
   140005a02:	mov    rax,QWORD PTR [rcx+0x38]
   140005a06:	mov    rcx,QWORD PTR [rax]
   140005a09:	test   rcx,rcx
   140005a0c:	je     0x140005a3a
   140005a0e:	mov    rdx,QWORD PTR [rdi+0x50]
   140005a12:	movsxd r8,DWORD PTR [rdx]
   140005a15:	lea    rax,[rcx+r8*1]
   140005a19:	cmp    rcx,rax
   140005a1c:	jae    0x140005a3a
   140005a1e:	lea    eax,[r8-0x1]
   140005a22:	mov    DWORD PTR [rdx],eax
   140005a24:	mov    rcx,QWORD PTR [rdi+0x38]
   140005a28:	mov    rdx,QWORD PTR [rcx]
   140005a2b:	lea    rax,[rdx+0x1]
   140005a2f:	mov    QWORD PTR [rcx],rax
   140005a32:	movzx  eax,BYTE PTR [rdx]
   140005a35:	jmp    0x140005c9d
   140005a3a:	cmp    QWORD PTR [rdi+0x90],0x0
   140005a42:	jne    0x140005a4d
   140005a44:	or     rax,0xffffffffffffffff
   140005a48:	jmp    0x140005c9d
   140005a4d:	mov    rax,QWORD PTR [rdi+0x18]
   140005a51:	mov    rcx,QWORD PTR [rax]
   140005a54:	lea    rax,[rdi+0x80]
   140005a5b:	cmp    rcx,rax
   140005a5e:	jne    0x140005a74
   140005a60:	mov    rdx,QWORD PTR [rdi+0x68]
   140005a64:	mov    r9,QWORD PTR [rdi+0x70]
   140005a68:	mov    r8,rdx
   140005a6b:	mov    rcx,rdi
   140005a6e:	call   QWORD PTR [rip+0x4684]        # 0x14000a0f8
   140005a74:	cmp    QWORD PTR [rdi+0x78],0x0
   140005a79:	jne    0x140005a9e
   140005a7b:	mov    rcx,QWORD PTR [rdi+0x90]
   140005a82:	call   QWORD PTR [rip+0x48e8]        # 0x14000a370
   140005a88:	cmp    eax,0xffffffff
   140005a8b:	je     0x140005a95
   140005a8d:	movzx  esi,al
   140005a90:	jmp    0x140005c9b
   140005a95:	or     rsi,0xffffffffffffffff
   140005a99:	jmp    0x140005c9b
   140005a9e:	mov    QWORD PTR [rbp-0x8],0xf
   140005aa6:	xor    r15d,r15d
   140005aa9:	mov    QWORD PTR [rbp-0x10],r15
   140005aad:	mov    BYTE PTR [rbp-0x20],r15b
   140005ab1:	mov    rcx,QWORD PTR [rdi+0x90]
   140005ab8:	call   QWORD PTR [rip+0x48b2]        # 0x14000a370
   140005abe:	or     rsi,0xffffffffffffffff
   140005ac2:	cmp    eax,0xffffffff
   140005ac5:	mov    r14d,eax
   140005ac8:	je     0x140005c8b
   140005ace:	mov    rcx,rsi
   140005ad1:	mov    rdx,QWORD PTR [rbp-0x10]
   140005ad5:	sub    rcx,rdx
   140005ad8:	cmp    rcx,0x1
   140005adc:	jbe    0x140005c7d
   140005ae2:	lea    rbx,[rdx+0x1]
   140005ae6:	cmp    rbx,0xfffffffffffffffe
   140005aea:	ja     0x140005c6f
   140005af0:	mov    r9,QWORD PTR [rbp-0x8]
   140005af4:	cmp    r9,rbx
   140005af7:	jae    0x140005b0a
   140005af9:	mov    r8,rdx
   140005afc:	mov    rdx,rbx
   140005aff:	lea    rcx,[rbp-0x20]
   140005b03:	call   0x140002020
   140005b08:	jmp    0x140005b22
   140005b0a:	test   rbx,rbx
   140005b0d:	jne    0x140005b2f
   140005b0f:	mov    QWORD PTR [rbp-0x10],r15
   140005b13:	lea    rax,[rbp-0x20]
   140005b17:	cmp    r9,0x10
   140005b1b:	cmovae rax,QWORD PTR [rbp-0x20]
   140005b20:	mov    BYTE PTR [rax],bl
   140005b22:	mov    rdx,QWORD PTR [rbp-0x10]
   140005b26:	mov    r9,QWORD PTR [rbp-0x8]
   140005b2a:	test   rbx,rbx
   140005b2d:	je     0x140005b5e
   140005b2f:	lea    rax,[rbp-0x20]
   140005b33:	cmp    r9,0x10
   140005b37:	cmovae rax,QWORD PTR [rbp-0x20]
   140005b3c:	mov    BYTE PTR [rax+rdx*1],r14b
   140005b40:	mov    QWORD PTR [rbp-0x10],rbx
   140005b44:	lea    rax,[rbp-0x20]
   140005b48:	cmp    QWORD PTR [rbp-0x8],0x10
   140005b4d:	cmovae rax,QWORD PTR [rbp-0x20]
   140005b52:	mov    BYTE PTR [rax+rbx*1],0x0
   140005b56:	mov    r9,QWORD PTR [rbp-0x8]
   140005b5a:	mov    rdx,QWORD PTR [rbp-0x10]
   140005b5e:	lea    rcx,[rbp-0x20]
   140005b62:	cmp    r9,0x10
   140005b66:	cmovae rcx,QWORD PTR [rbp-0x20]
   140005b6b:	lea    r8,[rbp-0x20]
   140005b6f:	cmovae r8,QWORD PTR [rbp-0x20]
   140005b74:	lea    r9,[rcx+rdx*1]
   140005b78:	lea    rdx,[rdi+0x84]
   140005b7f:	lea    rax,[rbp+0x38]
   140005b83:	mov    QWORD PTR [rsp+0x38],rax
   140005b88:	lea    rax,[rbp-0x2f]
   140005b8c:	mov    QWORD PTR [rsp+0x30],rax
   140005b91:	lea    rax,[rbp-0x30]
   140005b95:	mov    QWORD PTR [rsp+0x28],rax
   140005b9a:	lea    rax,[rbp+0x30]
   140005b9e:	mov    QWORD PTR [rsp+0x20],rax
   140005ba3:	mov    rcx,QWORD PTR [rdi+0x78]
   140005ba7:	call   QWORD PTR [rip+0x44fb]        # 0x14000a0a8
   140005bad:	test   eax,eax
   140005baf:	js     0x140005c8b
   140005bb5:	cmp    eax,0x1
   140005bb8:	jle    0x140005bcc
   140005bba:	cmp    eax,0x3
   140005bbd:	jne    0x140005c8b
   140005bc3:	cmp    QWORD PTR [rbp-0x10],0x1
   140005bc8:	jae    0x140005c08
   140005bca:	jmp    0x140005bf6
   140005bcc:	lea    rax,[rbp-0x30]
   140005bd0:	lea    rcx,[rbp-0x20]
   140005bd4:	cmp    QWORD PTR [rbp+0x38],rax
   140005bd8:	jne    0x140005c2e
   140005bda:	lea    rax,[rbp-0x20]
   140005bde:	cmp    QWORD PTR [rbp-0x8],0x10
   140005be3:	cmovae rax,QWORD PTR [rbp-0x20]
   140005be8:	mov    r8,QWORD PTR [rbp+0x30]
   140005bec:	sub    r8,rax
   140005bef:	xor    edx,edx
   140005bf1:	call   0x140002e30
   140005bf6:	mov    rcx,QWORD PTR [rdi+0x90]
   140005bfd:	call   QWORD PTR [rip+0x476d]        # 0x14000a370
   140005c03:	jmp    0x140005ac2
   140005c08:	lea    r8,[rbp-0x20]
   140005c0c:	cmp    QWORD PTR [rbp-0x8],0x10
   140005c11:	cmovae r8,QWORD PTR [rbp-0x20]
   140005c16:	mov    edx,0x1
   140005c1b:	mov    r9d,edx
   140005c1e:	lea    rcx,[rbp-0x30]
   140005c22:	call   QWORD PTR [rip+0x4618]        # 0x14000a240
   140005c28:	movzx  esi,BYTE PTR [rbp-0x30]
   140005c2c:	jmp    0x140005c8b
   140005c2e:	cmp    QWORD PTR [rbp-0x8],0x10
   140005c33:	cmovae rcx,QWORD PTR [rbp-0x20]
   140005c38:	mov    eax,DWORD PTR [rbp-0x10]
   140005c3b:	mov    rdx,QWORD PTR [rbp+0x30]
   140005c3f:	sub    eax,edx
   140005c41:	add    eax,ecx
   140005c43:	movsxd rbx,eax
   140005c46:	test   eax,eax
   140005c48:	jle    0x140005c28
   140005c4a:	nop    WORD PTR [rax+rax*1+0x0]
   140005c50:	dec    rbx
   140005c53:	movsx  ecx,BYTE PTR [rbx+rdx*1]
   140005c57:	mov    rdx,QWORD PTR [rdi+0x90]
   140005c5e:	call   QWORD PTR [rip+0x45c4]        # 0x14000a228
   140005c64:	test   rbx,rbx
   140005c67:	jle    0x140005c28
   140005c69:	mov    rdx,QWORD PTR [rbp+0x30]
   140005c6d:	jmp    0x140005c50
   140005c6f:	lea    rcx,[rip+0x4bca]        # 0x14000a840
   140005c76:	call   QWORD PTR [rip+0x450c]        # 0x14000a188
   140005c7c:	int3   
   140005c7d:	lea    rcx,[rip+0x4bbc]        # 0x14000a840
   140005c84:	call   QWORD PTR [rip+0x44fe]        # 0x14000a188
   140005c8a:	nop
   140005c8b:	cmp    QWORD PTR [rbp-0x8],0x10
   140005c90:	jb     0x140005c9b
   140005c92:	mov    rcx,QWORD PTR [rbp-0x20]
   140005c96:	call   0x140008880
   140005c9b:	mov    eax,esi
   140005c9d:	mov    rbx,QWORD PTR [rsp+0xb0]
   140005ca5:	add    rsp,0x70
   140005ca9:	pop    r15
   140005cab:	pop    r14
   140005cad:	pop    rdi
   140005cae:	pop    rsi
   140005caf:	pop    rbp
   140005cb0:	ret    
   140005cb1:	int3   
   140005cb2:	int3   
   140005cb3:	int3   
   140005cb4:	int3   
   140005cb5:	int3   
   140005cb6:	int3   
   140005cb7:	int3   
   140005cb8:	int3   
   140005cb9:	int3   
   140005cba:	int3   
   140005cbb:	int3   
   140005cbc:	int3   
   140005cbd:	int3   
   140005cbe:	int3   
   140005cbf:	int3   
   140005cc0:	rex push rbx
   140005cc2:	sub    rsp,0x20
   140005cc6:	mov    rax,QWORD PTR [rcx+0x38]
   140005cca:	mov    rbx,rcx
   140005ccd:	mov    rcx,QWORD PTR [rax]
   140005cd0:	test   rcx,rcx
   140005cd3:	je     0x140005ced
   140005cd5:	mov    rax,QWORD PTR [rbx+0x50]
   140005cd9:	movsxd rdx,DWORD PTR [rax]
   140005cdc:	add    rdx,rcx
   140005cdf:	cmp    rcx,rdx
   140005ce2:	jae    0x140005ced
   140005ce4:	movzx  eax,BYTE PTR [rcx]
   140005ce7:	add    rsp,0x20
   140005ceb:	pop    rbx
   140005cec:	ret    
   140005ced:	mov    rax,QWORD PTR [rbx]
   140005cf0:	mov    rcx,rbx
   140005cf3:	mov    QWORD PTR [rsp+0x30],rdi
   140005cf8:	call   QWORD PTR [rax+0x38]
   140005cfb:	mov    edi,eax
   140005cfd:	cmp    eax,0xffffffff
   140005d00:	jne    0x140005d0f
   140005d02:	or     eax,eax
   140005d04:	mov    rdi,QWORD PTR [rsp+0x30]
   140005d09:	add    rsp,0x20
   140005d0d:	pop    rbx
   140005d0e:	ret    
   140005d0f:	mov    rax,QWORD PTR [rbx]
   140005d12:	mov    edx,edi
   140005d14:	mov    rcx,rbx
   140005d17:	call   QWORD PTR [rax+0x20]
   140005d1a:	mov    eax,edi
   140005d1c:	mov    rdi,QWORD PTR [rsp+0x30]
   140005d21:	add    rsp,0x20
   140005d25:	pop    rbx
   140005d26:	ret    
   140005d27:	int3   
   140005d28:	int3   
   140005d29:	int3   
   140005d2a:	int3   
   140005d2b:	int3   
   140005d2c:	int3   
   140005d2d:	int3   
   140005d2e:	int3   
   140005d2f:	int3   
   140005d30:	rex.W jmp QWORD PTR [rip+0x4521]        # 0x14000a258
   140005d37:	int3   
   140005d38:	int3   
   140005d39:	int3   
   140005d3a:	int3   
   140005d3b:	int3   
   140005d3c:	int3   
   140005d3d:	int3   
   140005d3e:	int3   
   140005d3f:	int3   
   140005d40:	rex.W jmp QWORD PTR [rip+0x4519]        # 0x14000a260
   140005d47:	int3   
   140005d48:	int3   
   140005d49:	int3   
   140005d4a:	int3   
   140005d4b:	int3   
   140005d4c:	int3   
   140005d4d:	int3   
   140005d4e:	int3   
   140005d4f:	int3   
   140005d50:	mov    rax,QWORD PTR [rdx]
   140005d53:	mov    QWORD PTR [rcx],rax
   140005d56:	mov    rax,rcx
   140005d59:	ret    
   140005d5a:	int3   
   140005d5b:	int3   
   140005d5c:	int3   
   140005d5d:	int3   
   140005d5e:	int3   
   140005d5f:	int3   
   140005d60:	rex push rbx
   140005d62:	sub    rsp,0x20
   140005d66:	movzx  r9d,BYTE PTR [rsp+0x30]
   140005d6c:	xor    eax,eax
   140005d6e:	mov    rbx,rcx
   140005d71:	mov    QWORD PTR [rcx],rax
   140005d74:	mov    QWORD PTR [rcx+0x8],rax
   140005d78:	mov    QWORD PTR [rcx+0x10],rax
   140005d7c:	call   0x140005f00
   140005d81:	mov    rax,rbx
   140005d84:	add    rsp,0x20
   140005d88:	pop    rbx
   140005d89:	ret    
   140005d8a:	int3   
   140005d8b:	int3   
   140005d8c:	int3   
   140005d8d:	int3   
   140005d8e:	int3   
   140005d8f:	int3   
   140005d90:	mov    rax,QWORD PTR [rdx]
   140005d93:	mov    QWORD PTR [rcx],rax
   140005d96:	mov    rax,rcx
   140005d99:	ret    
   140005d9a:	int3   
   140005d9b:	int3   
   140005d9c:	int3   
   140005d9d:	int3   
   140005d9e:	int3   
   140005d9f:	int3   
   140005da0:	mov    rax,QWORD PTR [rdx]
   140005da3:	mov    QWORD PTR [rcx],rax
   140005da6:	mov    rax,rcx
   140005da9:	ret    
   140005daa:	int3   
   140005dab:	int3   
   140005dac:	int3   
   140005dad:	int3   
   140005dae:	int3   
   140005daf:	int3   
   140005db0:	sub    rsp,0x18
   140005db4:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   140005dbc:	mov    QWORD PTR [rcx+0x18],0x0
   140005dc4:	lea    rax,[rip+0x5075]        # 0x14000ae40
   140005dcb:	mov    QWORD PTR [rcx],rax
   140005dce:	mov    rax,QWORD PTR [rdx]
   140005dd1:	mov    QWORD PTR [rcx+0x8],rax
   140005dd5:	mov    QWORD PTR [rcx+0x18],rcx
   140005dd9:	mov    rax,rcx
   140005ddc:	add    rsp,0x18
   140005de0:	ret    
   140005de1:	int3   
   140005de2:	int3   
   140005de3:	int3   
   140005de4:	int3   
   140005de5:	int3   
   140005de6:	int3   
   140005de7:	int3   
   140005de8:	int3   
   140005de9:	int3   
   140005dea:	int3   
   140005deb:	int3   
   140005dec:	int3   
   140005ded:	int3   
   140005dee:	int3   
   140005def:	int3   
   140005df0:	mov    rax,rcx
   140005df3:	ret    
   140005df4:	int3   
   140005df5:	int3   
   140005df6:	int3   
   140005df7:	int3   
   140005df8:	int3   
   140005df9:	int3   
   140005dfa:	int3   
   140005dfb:	int3   
   140005dfc:	int3   
   140005dfd:	int3   
   140005dfe:	int3   
   140005dff:	int3   
   140005e00:	rex push rbx
   140005e02:	sub    rsp,0x40
   140005e06:	mov    rax,QWORD PTR [rcx+0x8]
   140005e0a:	mov    rbx,QWORD PTR [rcx]
   140005e0d:	mov    QWORD PTR [rsp+0x20],rdx
   140005e12:	sub    rax,rbx
   140005e15:	mov    QWORD PTR [rsp+0x28],0x40
   140005e1e:	mov    QWORD PTR [rsp+0x30],0xffffffffffffffff
   140005e27:	lea    rcx,[rsp+0x20]
   140005e2c:	cmp    rax,0xffffffffffffffff
   140005e30:	jne    0x140005e40
   140005e32:	call   0x140007030
   140005e37:	add    rax,rbx
   140005e3a:	add    rsp,0x40
   140005e3e:	pop    rbx
   140005e3f:	ret    
   140005e40:	lea    rdx,[rax+0x1]
   140005e44:	call   0x140006a80
   140005e49:	add    rax,rbx
   140005e4c:	add    rsp,0x40
   140005e50:	pop    rbx
   140005e51:	ret    
   140005e52:	int3   
   140005e53:	int3   
   140005e54:	int3   
   140005e55:	int3   
   140005e56:	int3   
   140005e57:	int3   
   140005e58:	int3   
   140005e59:	int3   
   140005e5a:	int3   
   140005e5b:	int3   
   140005e5c:	int3   
   140005e5d:	int3   
   140005e5e:	int3   
   140005e5f:	int3   
   140005e60:	sub    rsp,0x28
   140005e64:	xor    eax,eax
   140005e66:	test   rcx,rcx
   140005e69:	je     0x140005e93
   140005e6b:	movabs rax,0xaaaaaaaaaaaaaaa
   140005e75:	cmp    rcx,rax
   140005e78:	ja     0x140005e8c
   140005e7a:	lea    rcx,[rcx+rcx*2]
   140005e7e:	shl    rcx,0x3
   140005e82:	call   0x14000887a
   140005e87:	test   rax,rax
   140005e8a:	jne    0x140005e93
   140005e8c:	call   QWORD PTR [rip+0x42ee]        # 0x14000a180
   140005e92:	int3   
   140005e93:	add    rsp,0x28
   140005e97:	ret    
   140005e98:	int3   
   140005e99:	int3   
   140005e9a:	int3   
   140005e9b:	int3   
   140005e9c:	int3   
   140005e9d:	int3   
   140005e9e:	int3   
   140005e9f:	int3   
   140005ea0:	sub    rsp,0x28
   140005ea4:	xor    eax,eax
   140005ea6:	test   rcx,rcx
   140005ea9:	je     0x140005ece
   140005eab:	movabs rax,0x7fffffffffffffff
   140005eb5:	cmp    rcx,rax
   140005eb8:	ja     0x140005ec7
   140005eba:	add    rcx,rcx
   140005ebd:	call   0x14000887a
   140005ec2:	test   rax,rax
   140005ec5:	jne    0x140005ece
   140005ec7:	call   QWORD PTR [rip+0x42b3]        # 0x14000a180
   140005ecd:	int3   
   140005ece:	add    rsp,0x28
   140005ed2:	ret    
   140005ed3:	int3   
   140005ed4:	int3   
   140005ed5:	int3   
   140005ed6:	int3   
   140005ed7:	int3   
   140005ed8:	int3   
   140005ed9:	int3   
   140005eda:	int3   
   140005edb:	int3   
   140005edc:	int3   
   140005edd:	int3   
   140005ede:	int3   
   140005edf:	int3   
   140005ee0:	mov    rax,QWORD PTR [rcx]
   140005ee3:	mov    rcx,QWORD PTR [rax]
   140005ee6:	mov    rax,QWORD PTR [rcx]
   140005ee9:	rex.W jmp QWORD PTR [rax]
   140005eec:	int3   
   140005eed:	int3   
   140005eee:	int3   
   140005eef:	int3   
   140005ef0:	movzx  r9d,BYTE PTR [rsp+0x20]
   140005ef6:	jmp    0x140005f00
   140005efb:	int3   
   140005efc:	int3   
   140005efd:	int3   
   140005efe:	int3   
   140005eff:	int3   
   140005f00:	mov    QWORD PTR [rsp+0x8],rcx
   140005f05:	push   rdi
   140005f06:	sub    rsp,0x40
   140005f0a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140005f13:	mov    QWORD PTR [rsp+0x60],rbx
   140005f18:	mov    QWORD PTR [rsp+0x68],rsi
   140005f1d:	mov    rdi,r8
   140005f20:	mov    rsi,rdx
   140005f23:	mov    rbx,rcx
   140005f26:	mov    rdx,r8
   140005f29:	sub    rdx,rsi
   140005f2c:	sar    rdx,0x3
   140005f30:	call   0x140006cb0
   140005f35:	test   al,al
   140005f37:	je     0x140005f59
   140005f39:	movzx  eax,BYTE PTR [rsp+0x58]
   140005f3e:	mov    BYTE PTR [rsp+0x20],al
   140005f42:	lea    r9,[rsp+0x58]
   140005f47:	mov    r8,QWORD PTR [rbx]
   140005f4a:	mov    rdx,rdi
   140005f4d:	mov    rcx,rsi
   140005f50:	call   0x1400061e0
   140005f55:	mov    QWORD PTR [rbx+0x8],rax
   140005f59:	mov    rbx,QWORD PTR [rsp+0x60]
   140005f5e:	mov    rsi,QWORD PTR [rsp+0x68]
   140005f63:	add    rsp,0x40
   140005f67:	pop    rdi
   140005f68:	ret    
   140005f69:	int3   
   140005f6a:	int3   
   140005f6b:	int3   
   140005f6c:	int3   
   140005f6d:	int3   
   140005f6e:	int3   
   140005f6f:	int3   
   140005f70:	sub    rdx,rcx
   140005f73:	sar    rdx,0x3
   140005f77:	add    QWORD PTR [r8],rdx
   140005f7a:	ret    
   140005f7b:	int3   
   140005f7c:	int3   
   140005f7d:	int3   
   140005f7e:	int3   
   140005f7f:	int3   
   140005f80:	test   rcx,rcx
   140005f83:	je     0x140005f9b
   140005f85:	lea    rax,[rip+0x4eb4]        # 0x14000ae40
   140005f8c:	mov    QWORD PTR [rcx],rax
   140005f8f:	mov    rax,QWORD PTR [rdx]
   140005f92:	mov    QWORD PTR [rcx+0x8],rax
   140005f96:	mov    QWORD PTR [rcx+0x18],rcx
   140005f9a:	ret    
   140005f9b:	mov    QWORD PTR [rcx+0x18],0x0
   140005fa3:	ret    
   140005fa4:	int3   
   140005fa5:	int3   
   140005fa6:	int3   
   140005fa7:	int3   
   140005fa8:	int3   
   140005fa9:	int3   
   140005faa:	int3   
   140005fab:	int3   
   140005fac:	int3   
   140005fad:	int3   
   140005fae:	int3   
   140005faf:	int3   
   140005fb0:	rex push rbx
   140005fb2:	sub    rsp,0x40
   140005fb6:	sub    r9,r8
   140005fb9:	mov    rbx,r8
   140005fbc:	mov    QWORD PTR [rsp+0x20],rdx
   140005fc1:	mov    QWORD PTR [rsp+0x28],0x40
   140005fca:	mov    QWORD PTR [rsp+0x30],0xffffffffffffffff
   140005fd3:	lea    rcx,[rsp+0x20]
   140005fd8:	cmp    r9,0xffffffffffffffff
   140005fdc:	jne    0x140005fec
   140005fde:	call   0x140007030
   140005fe3:	add    rax,rbx
   140005fe6:	add    rsp,0x40
   140005fea:	pop    rbx
   140005feb:	ret    
   140005fec:	lea    rdx,[r9+0x1]
   140005ff0:	call   0x140006a80
   140005ff5:	add    rax,rbx
   140005ff8:	add    rsp,0x40
   140005ffc:	pop    rbx
   140005ffd:	ret    
   140005ffe:	int3   
   140005fff:	int3   
   140006000:	mov    rax,rcx
   140006003:	ret    
   140006004:	int3   
   140006005:	int3   
   140006006:	int3   
   140006007:	int3   
   140006008:	int3   
   140006009:	int3   
   14000600a:	int3   
   14000600b:	int3   
   14000600c:	int3   
   14000600d:	int3   
   14000600e:	int3   
   14000600f:	int3   
   140006010:	movzx  eax,BYTE PTR [rsp+0x18]
   140006015:	ret    
   140006016:	int3   
   140006017:	int3   
   140006018:	int3   
   140006019:	int3   
   14000601a:	int3   
   14000601b:	int3   
   14000601c:	int3   
   14000601d:	int3   
   14000601e:	int3   
   14000601f:	int3   
   140006020:	mov    r8,QWORD PTR [rdx+0x8]
   140006024:	mov    rdx,QWORD PTR [rdx]
   140006027:	test   r8,r8
   14000602a:	je     0x140006031
   14000602c:	lock inc DWORD PTR [r8+0x8]
   140006031:	jmp    0x140007450
   140006036:	int3   
   140006037:	int3   
   140006038:	int3   
   140006039:	int3   
   14000603a:	int3   
   14000603b:	int3   
   14000603c:	int3   
   14000603d:	int3   
   14000603e:	int3   
   14000603f:	int3   
   140006040:	test   rcx,rcx
   140006043:	je     0x14000605b
   140006045:	lea    rax,[rip+0x4df4]        # 0x14000ae40
   14000604c:	mov    QWORD PTR [rcx],rax
   14000604f:	mov    rax,QWORD PTR [rdx]
   140006052:	mov    QWORD PTR [rcx+0x8],rax
   140006056:	mov    QWORD PTR [rcx+0x18],rcx
   14000605a:	ret    
   14000605b:	mov    QWORD PTR [rcx+0x18],0x0
   140006063:	ret    
   140006064:	int3   
   140006065:	int3   
   140006066:	int3   
   140006067:	int3   
   140006068:	int3   
   140006069:	int3   
   14000606a:	int3   
   14000606b:	int3   
   14000606c:	int3   
   14000606d:	int3   
   14000606e:	int3   
   14000606f:	int3   
   140006070:	test   rcx,rcx
   140006073:	je     0x14000608b
   140006075:	lea    rax,[rip+0x4dc4]        # 0x14000ae40
   14000607c:	mov    QWORD PTR [rcx],rax
   14000607f:	mov    rax,QWORD PTR [rdx]
   140006082:	mov    QWORD PTR [rcx+0x8],rax
   140006086:	mov    QWORD PTR [rcx+0x18],rcx
   14000608a:	ret    
   14000608b:	mov    QWORD PTR [rcx+0x18],0x0
   140006093:	ret    
   140006094:	int3   
   140006095:	int3   
   140006096:	int3   
   140006097:	int3   
   140006098:	int3   
   140006099:	int3   
   14000609a:	int3   
   14000609b:	int3   
   14000609c:	int3   
   14000609d:	int3   
   14000609e:	int3   
   14000609f:	int3   
   1400060a0:	mov    al,0x1
   1400060a2:	ret    
   1400060a3:	int3   
   1400060a4:	int3   
   1400060a5:	int3   
   1400060a6:	int3   
   1400060a7:	int3   
   1400060a8:	int3   
   1400060a9:	int3   
   1400060aa:	int3   
   1400060ab:	int3   
   1400060ac:	int3   
   1400060ad:	int3   
   1400060ae:	int3   
   1400060af:	int3   
   1400060b0:	mov    al,0x1
   1400060b2:	ret    
   1400060b3:	int3   
   1400060b4:	int3   
   1400060b5:	int3   
   1400060b6:	int3   
   1400060b7:	int3   
   1400060b8:	int3   
   1400060b9:	int3   
   1400060ba:	int3   
   1400060bb:	int3   
   1400060bc:	int3   
   1400060bd:	int3   
   1400060be:	int3   
   1400060bf:	int3   
   1400060c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400060c5:	mov    QWORD PTR [rsp+0x10],rdi
   1400060ca:	xor    ebx,ebx
   1400060cc:	mov    rdi,r8
   1400060cf:	mov    QWORD PTR [rsp+0x20],r9
   1400060d4:	sub    rdi,rdx
   1400060d7:	cmp    rdx,r8
   1400060da:	mov    r10,rdx
   1400060dd:	cmova  rdi,rbx
   1400060e1:	mov    r11,rcx
   1400060e4:	test   rdi,rdi
   1400060e7:	je     0x140006154
   1400060e9:	lea    r9,[rip+0x4c84]        # 0x14000ad74
   1400060f0:	lea    r8,[rip+0x4c79]        # 0x14000ad70
   1400060f7:	nop    WORD PTR [rax+rax*1+0x0]
   140006100:	mov    rdx,QWORD PTR [rsp+0x28]
   140006105:	mov    rax,QWORD PTR [rdx]
   140006108:	cmp    r9,QWORD PTR [rax]
   14000610b:	jne    0x140006110
   14000610d:	mov    QWORD PTR [rax],r8
   140006110:	mov    rdx,QWORD PTR [rdx]
   140006113:	inc    rbx
   140006116:	inc    r10
   140006119:	mov    rax,QWORD PTR [rdx]
   14000611c:	lea    rcx,[rax+0x1]
   140006120:	mov    QWORD PTR [rdx],rcx
   140006123:	movzx  ecx,BYTE PTR [r10-0x1]
   140006128:	xor    cl,BYTE PTR [rax]
   14000612a:	mov    rax,QWORD PTR [rsp+0x20]
   14000612f:	mov    BYTE PTR [rax],cl
   140006131:	mov    rax,QWORD PTR [rsp+0x20]
   140006136:	inc    rax
   140006139:	mov    QWORD PTR [rsp+0x20],rax
   14000613e:	cmp    rbx,rdi
   140006141:	jne    0x140006100
   140006143:	mov    QWORD PTR [r11],rax
   140006146:	mov    rax,r11
   140006149:	mov    rbx,QWORD PTR [rsp+0x8]
   14000614e:	mov    rdi,QWORD PTR [rsp+0x10]
   140006153:	ret    
   140006154:	mov    rbx,QWORD PTR [rsp+0x8]
   140006159:	mov    rdi,QWORD PTR [rsp+0x10]
   14000615e:	mov    QWORD PTR [rcx],r9
   140006161:	mov    rax,r11
   140006164:	ret    
   140006165:	int3   
   140006166:	int3   
   140006167:	int3   
   140006168:	int3   
   140006169:	int3   
   14000616a:	int3   
   14000616b:	int3   
   14000616c:	int3   
   14000616d:	int3   
   14000616e:	int3   
   14000616f:	int3   
   140006170:	rex push rbx
   140006172:	sub    rsp,0x30
   140006176:	movzx  eax,BYTE PTR [rsp+0x58]
   14000617b:	mov    r10,r9
   14000617e:	mov    r11,r8
   140006181:	mov    rcx,rdx
   140006184:	lea    r9,[rsp+0x58]
   140006189:	mov    r8,r10
   14000618c:	mov    rdx,r11
   14000618f:	mov    BYTE PTR [rsp+0x20],al
   140006193:	call   0x1400061e0
   140006198:	add    rsp,0x30
   14000619c:	pop    rbx
   14000619d:	ret    
   14000619e:	int3   
   14000619f:	int3   
   1400061a0:	mov    rax,rcx
   1400061a3:	ret    
   1400061a4:	int3   
   1400061a5:	int3   
   1400061a6:	int3   
   1400061a7:	int3   
   1400061a8:	int3   
   1400061a9:	int3   
   1400061aa:	int3   
   1400061ab:	int3   
   1400061ac:	int3   
   1400061ad:	int3   
   1400061ae:	int3   
   1400061af:	int3   
   1400061b0:	mov    rax,rcx
   1400061b3:	ret    
   1400061b4:	int3   
   1400061b5:	int3   
   1400061b6:	int3   
   1400061b7:	int3   
   1400061b8:	int3   
   1400061b9:	int3   
   1400061ba:	int3   
   1400061bb:	int3   
   1400061bc:	int3   
   1400061bd:	int3   
   1400061be:	int3   
   1400061bf:	int3   
   1400061c0:	sub    rsp,0x48
   1400061c4:	movzx  eax,BYTE PTR [rsp+0x30]
   1400061c9:	mov    BYTE PTR [rsp+0x20],al
   1400061cd:	call   0x1400061e0
   1400061d2:	add    rsp,0x48
   1400061d6:	ret    
   1400061d7:	int3   
   1400061d8:	int3   
   1400061d9:	int3   
   1400061da:	int3   
   1400061db:	int3   
   1400061dc:	int3   
   1400061dd:	int3   
   1400061de:	int3   
   1400061df:	int3   
   1400061e0:	mov    QWORD PTR [rsp+0x20],r9
   1400061e5:	mov    QWORD PTR [rsp+0x18],r8
   1400061ea:	push   rbx
   1400061eb:	push   rsi
   1400061ec:	push   rdi
   1400061ed:	push   r14
   1400061ef:	sub    rsp,0x38
   1400061f3:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400061fc:	mov    rbx,r8
   1400061ff:	mov    rsi,rdx
   140006202:	mov    rdi,rcx
   140006205:	mov    QWORD PTR [rsp+0x60],rbx
   14000620a:	xor    r14d,r14d
   14000620d:	nop    DWORD PTR [rax]
   140006210:	cmp    rdi,rsi
   140006213:	je     0x140006262
   140006215:	mov    QWORD PTR [rsp+0x68],rbx
   14000621a:	test   rbx,rbx
   14000621d:	je     0x140006253
   14000621f:	mov    rdx,QWORD PTR [rdi]
   140006222:	mov    QWORD PTR [rbx+0x18],0xf
   14000622a:	mov    QWORD PTR [rbx+0x10],r14
   14000622e:	mov    BYTE PTR [rbx],0x0
   140006231:	cmp    BYTE PTR [rdx],0x0
   140006234:	jne    0x14000623b
   140006236:	mov    r8,r14
   140006239:	jmp    0x14000624a
   14000623b:	or     r8,0xffffffffffffffff
   14000623f:	nop
   140006240:	inc    r8
   140006243:	cmp    BYTE PTR [rdx+r8*1],0x0
   140006248:	jne    0x140006240
   14000624a:	mov    rcx,rbx
   14000624d:	call   0x140002b00
   140006252:	nop
   140006253:	add    rbx,0x20
   140006257:	mov    QWORD PTR [rsp+0x70],rbx
   14000625c:	add    rdi,0x8
   140006260:	jmp    0x140006210
   140006262:	mov    rax,rbx
   140006265:	add    rsp,0x38
   140006269:	pop    r14
   14000626b:	pop    rdi
   14000626c:	pop    rsi
   14000626d:	pop    rbx
   14000626e:	ret    
   14000626f:	int3   
   140006270:	sub    rsp,0x38
   140006274:	movzx  eax,BYTE PTR [rsp+0x50]
   140006279:	mov    BYTE PTR [rsp+0x20],al
   14000627d:	call   0x1400061e0
   140006282:	add    rsp,0x38
   140006286:	ret    
   140006287:	int3   
   140006288:	int3   
   140006289:	int3   
   14000628a:	int3   
   14000628b:	int3   
   14000628c:	int3   
   14000628d:	int3   
   14000628e:	int3   
   14000628f:	int3   
   140006290:	mov    rax,rcx
   140006293:	ret    
   140006294:	int3   
   140006295:	int3   
   140006296:	int3   
   140006297:	int3   
   140006298:	int3   
   140006299:	int3   
   14000629a:	int3   
   14000629b:	int3   
   14000629c:	int3   
   14000629d:	int3   
   14000629e:	int3   
   14000629f:	int3   
   1400062a0:	mov    rax,rcx
   1400062a3:	ret    
   1400062a4:	int3   
   1400062a5:	int3   
   1400062a6:	int3   
   1400062a7:	int3   
   1400062a8:	int3   
   1400062a9:	int3   
   1400062aa:	int3   
   1400062ab:	int3   
   1400062ac:	int3   
   1400062ad:	int3   
   1400062ae:	int3   
   1400062af:	int3   
   1400062b0:	test   rdx,rdx
   1400062b3:	je     0x1400062bb
   1400062b5:	mov    rax,QWORD PTR [r8]
   1400062b8:	mov    QWORD PTR [rdx],rax
   1400062bb:	ret    
   1400062bc:	int3   
   1400062bd:	int3   
   1400062be:	int3   
   1400062bf:	int3   
   1400062c0:	test   rdx,rdx
   1400062c3:	je     0x1400062cb
   1400062c5:	mov    rax,QWORD PTR [r8]
   1400062c8:	mov    QWORD PTR [rdx],rax
   1400062cb:	ret    
   1400062cc:	int3   
   1400062cd:	int3   
   1400062ce:	int3   
   1400062cf:	int3   
   1400062d0:	test   rdx,rdx
   1400062d3:	je     0x1400062db
   1400062d5:	mov    rax,QWORD PTR [r8]
   1400062d8:	mov    QWORD PTR [rdx],rax
   1400062db:	ret    
   1400062dc:	int3   
   1400062dd:	int3   
   1400062de:	int3   
   1400062df:	int3   
   1400062e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400062e5:	sub    rsp,0x38
   1400062e9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400062f2:	mov    rax,rdx
   1400062f5:	mov    QWORD PTR [rsp+0x58],rdx
   1400062fa:	test   rdx,rdx
   1400062fd:	je     0x140006333
   1400062ff:	mov    rdx,QWORD PTR [r8]
   140006302:	mov    QWORD PTR [rax+0x18],0xf
   14000630a:	xor    r8d,r8d
   14000630d:	mov    QWORD PTR [rax+0x10],r8
   140006311:	mov    BYTE PTR [rax],r8b
   140006314:	cmp    BYTE PTR [rdx],r8b
   140006317:	je     0x14000632a
   140006319:	or     r8,0xffffffffffffffff
   14000631d:	nop    DWORD PTR [rax]
   140006320:	inc    r8
   140006323:	cmp    BYTE PTR [rdx+r8*1],0x0
   140006328:	jne    0x140006320
   14000632a:	mov    rcx,rax
   14000632d:	call   0x140002b00
   140006332:	nop
   140006333:	add    rsp,0x38
   140006337:	ret    
   140006338:	int3   
   140006339:	int3   
   14000633a:	int3   
   14000633b:	int3   
   14000633c:	int3   
   14000633d:	int3   
   14000633e:	int3   
   14000633f:	int3   
   140006340:	mov    QWORD PTR [rsp+0x10],rdx
   140006345:	sub    rsp,0x38
   140006349:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006352:	mov    rax,rdx
   140006355:	mov    QWORD PTR [rsp+0x58],rdx
   14000635a:	test   rdx,rdx
   14000635d:	je     0x140006393
   14000635f:	mov    rdx,QWORD PTR [r8]
   140006362:	mov    QWORD PTR [rax+0x18],0xf
   14000636a:	xor    r8d,r8d
   14000636d:	mov    QWORD PTR [rax+0x10],r8
   140006371:	mov    BYTE PTR [rax],r8b
   140006374:	cmp    BYTE PTR [rdx],r8b
   140006377:	je     0x14000638a
   140006379:	or     r8,0xffffffffffffffff
   14000637d:	nop    DWORD PTR [rax]
   140006380:	inc    r8
   140006383:	cmp    BYTE PTR [rdx+r8*1],0x0
   140006388:	jne    0x140006380
   14000638a:	mov    rcx,rax
   14000638d:	call   0x140002b00
   140006392:	nop
   140006393:	add    rsp,0x38
   140006397:	ret    
   140006398:	int3   
   140006399:	int3   
   14000639a:	int3   
   14000639b:	int3   
   14000639c:	int3   
   14000639d:	int3   
   14000639e:	int3   
   14000639f:	int3   
   1400063a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400063a5:	sub    rsp,0x38
   1400063a9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400063b2:	mov    rax,rdx
   1400063b5:	mov    QWORD PTR [rsp+0x58],rdx
   1400063ba:	test   rdx,rdx
   1400063bd:	je     0x1400063f3
   1400063bf:	mov    rdx,QWORD PTR [r8]
   1400063c2:	mov    QWORD PTR [rax+0x18],0xf
   1400063ca:	xor    r8d,r8d
   1400063cd:	mov    QWORD PTR [rax+0x10],r8
   1400063d1:	mov    BYTE PTR [rax],r8b
   1400063d4:	cmp    BYTE PTR [rdx],r8b
   1400063d7:	je     0x1400063ea
   1400063d9:	or     r8,0xffffffffffffffff
   1400063dd:	nop    DWORD PTR [rax]
   1400063e0:	inc    r8
   1400063e3:	cmp    BYTE PTR [rdx+r8*1],0x0
   1400063e8:	jne    0x1400063e0
   1400063ea:	mov    rcx,rax
   1400063ed:	call   0x140002b00
   1400063f2:	nop
   1400063f3:	add    rsp,0x38
   1400063f7:	ret    
   1400063f8:	int3   
   1400063f9:	int3   
   1400063fa:	int3   
   1400063fb:	int3   
   1400063fc:	int3   
   1400063fd:	int3   
   1400063fe:	int3   
   1400063ff:	int3   
   140006400:	ret    0x0
   140006403:	int3   
   140006404:	int3   
   140006405:	int3   
   140006406:	int3   
   140006407:	int3   
   140006408:	int3   
   140006409:	int3   
   14000640a:	int3   
   14000640b:	int3   
   14000640c:	int3   
   14000640d:	int3   
   14000640e:	int3   
   14000640f:	int3   
   140006410:	ret    0x0
   140006413:	int3   
   140006414:	int3   
   140006415:	int3   
   140006416:	int3   
   140006417:	int3   
   140006418:	int3   
   140006419:	int3   
   14000641a:	int3   
   14000641b:	int3   
   14000641c:	int3   
   14000641d:	int3   
   14000641e:	int3   
   14000641f:	int3   
   140006420:	ret    0x0
   140006423:	int3   
   140006424:	int3   
   140006425:	int3   
   140006426:	int3   
   140006427:	int3   
   140006428:	int3   
   140006429:	int3   
   14000642a:	int3   
   14000642b:	int3   
   14000642c:	int3   
   14000642d:	int3   
   14000642e:	int3   
   14000642f:	int3   
   140006430:	mov    rax,QWORD PTR [rdx]
   140006433:	mov    rcx,rdx
   140006436:	xor    edx,edx
   140006438:	rex.W jmp QWORD PTR [rax+0x28]
   14000643c:	int3   
   14000643d:	int3   
   14000643e:	int3   
   14000643f:	int3   
   140006440:	sub    rdx,rcx
   140006443:	sar    rdx,0x3
   140006447:	mov    rax,rdx
   14000644a:	ret    
   14000644b:	int3   
   14000644c:	int3   
   14000644d:	int3   
   14000644e:	int3   
   14000644f:	int3   
   140006450:	mov    rax,rcx
   140006453:	ret    
   140006454:	int3   
   140006455:	int3   
   140006456:	int3   
   140006457:	int3   
   140006458:	int3   
   140006459:	int3   
   14000645a:	int3   
   14000645b:	int3   
   14000645c:	int3   
   14000645d:	int3   
   14000645e:	int3   
   14000645f:	int3   
   140006460:	mov    rax,rcx
   140006463:	ret    
   140006464:	int3   
   140006465:	int3   
   140006466:	int3   
   140006467:	int3   
   140006468:	int3   
   140006469:	int3   
   14000646a:	int3   
   14000646b:	int3   
   14000646c:	int3   
   14000646d:	int3   
   14000646e:	int3   
   14000646f:	int3   
   140006470:	mov    rax,rcx
   140006473:	ret    
   140006474:	int3   
   140006475:	int3   
   140006476:	int3   
   140006477:	int3   
   140006478:	int3   
   140006479:	int3   
   14000647a:	int3   
   14000647b:	int3   
   14000647c:	int3   
   14000647d:	int3   
   14000647e:	int3   
   14000647f:	int3   
   140006480:	mov    rax,rcx
   140006483:	ret    
   140006484:	int3   
   140006485:	int3   
   140006486:	int3   
   140006487:	int3   
   140006488:	int3   
   140006489:	int3   
   14000648a:	int3   
   14000648b:	int3   
   14000648c:	int3   
   14000648d:	int3   
   14000648e:	int3   
   14000648f:	int3   
   140006490:	mov    rax,rcx
   140006493:	ret    
   140006494:	int3   
   140006495:	int3   
   140006496:	int3   
   140006497:	int3   
   140006498:	int3   
   140006499:	int3   
   14000649a:	int3   
   14000649b:	int3   
   14000649c:	int3   
   14000649d:	int3   
   14000649e:	int3   
   14000649f:	int3   
   1400064a0:	mov    rax,rcx
   1400064a3:	ret    
   1400064a4:	int3   
   1400064a5:	int3   
   1400064a6:	int3   
   1400064a7:	int3   
   1400064a8:	int3   
   1400064a9:	int3   
   1400064aa:	int3   
   1400064ab:	int3   
   1400064ac:	int3   
   1400064ad:	int3   
   1400064ae:	int3   
   1400064af:	int3   
   1400064b0:	rex push rbx
   1400064b2:	sub    rsp,0x30
   1400064b6:	mov    rbx,rcx
   1400064b9:	cmp    rdx,r8
   1400064bc:	je     0x1400064d6
   1400064be:	mov    rax,QWORD PTR [rsp+0x60]
   1400064c3:	mov    QWORD PTR [rsp+0x20],rax
   1400064c8:	call   0x1400060c0
   1400064cd:	mov    rax,rbx
   1400064d0:	add    rsp,0x30
   1400064d4:	pop    rbx
   1400064d5:	ret    
   1400064d6:	mov    QWORD PTR [rcx],r9
   1400064d9:	mov    rax,rbx
   1400064dc:	add    rsp,0x30
   1400064e0:	pop    rbx
   1400064e1:	ret    
   1400064e2:	int3   
   1400064e3:	int3   
   1400064e4:	int3   
   1400064e5:	int3   
   1400064e6:	int3   
   1400064e7:	int3   
   1400064e8:	int3   
   1400064e9:	int3   
   1400064ea:	int3   
   1400064eb:	int3   
   1400064ec:	int3   
   1400064ed:	int3   
   1400064ee:	int3   
   1400064ef:	int3   
   1400064f0:	mov    QWORD PTR [rcx],rdx
   1400064f3:	mov    rax,rcx
   1400064f6:	ret    
   1400064f7:	int3   
   1400064f8:	int3   
   1400064f9:	int3   
   1400064fa:	int3   
   1400064fb:	int3   
   1400064fc:	int3   
   1400064fd:	int3   
   1400064fe:	int3   
   1400064ff:	int3   
   140006500:	mov    QWORD PTR [rcx],rdx
   140006503:	mov    rax,rcx
   140006506:	ret    
   140006507:	int3   
   140006508:	int3   
   140006509:	int3   
   14000650a:	int3   
   14000650b:	int3   
   14000650c:	int3   
   14000650d:	int3   
   14000650e:	int3   
   14000650f:	int3   
   140006510:	mov    QWORD PTR [rcx],rdx
   140006513:	mov    rax,rcx
   140006516:	ret    
   140006517:	int3   
   140006518:	int3   
   140006519:	int3   
   14000651a:	int3   
   14000651b:	int3   
   14000651c:	int3   
   14000651d:	int3   
   14000651e:	int3   
   14000651f:	int3   
   140006520:	lea    rax,[rdx+r8*1]
   140006524:	mov    QWORD PTR [rcx],rax
   140006527:	mov    rax,rcx
   14000652a:	ret    
   14000652b:	int3   
   14000652c:	int3   
   14000652d:	int3   
   14000652e:	int3   
   14000652f:	int3   
   140006530:	mov    rax,QWORD PTR [rdx]
   140006533:	mov    QWORD PTR [rcx],rax
   140006536:	mov    rax,rcx
   140006539:	ret    
   14000653a:	int3   
   14000653b:	int3   
   14000653c:	int3   
   14000653d:	int3   
   14000653e:	int3   
   14000653f:	int3   
   140006540:	lea    rax,[rip+0x48b9]        # 0x14000ae00
   140006547:	mov    QWORD PTR [rcx],rax
   14000654a:	mov    rax,rcx
   14000654d:	ret    
   14000654e:	int3   
   14000654f:	int3   
   140006550:	mov    QWORD PTR [rcx+0x18],0x0
   140006558:	mov    rax,rcx
   14000655b:	ret    
   14000655c:	int3   
   14000655d:	int3   
   14000655e:	int3   
   14000655f:	int3   
   140006560:	lea    rax,[rip+0x48d9]        # 0x14000ae40
   140006567:	mov    QWORD PTR [rcx],rax
   14000656a:	mov    rax,QWORD PTR [rdx+0x8]
   14000656e:	mov    QWORD PTR [rcx+0x8],rax
   140006572:	mov    rax,rcx
   140006575:	ret    
   140006576:	int3   
   140006577:	int3   
   140006578:	int3   
   140006579:	int3   
   14000657a:	int3   
   14000657b:	int3   
   14000657c:	int3   
   14000657d:	int3   
   14000657e:	int3   
   14000657f:	int3   
   140006580:	lea    rax,[rip+0x48b9]        # 0x14000ae40
   140006587:	mov    QWORD PTR [rcx],rax
   14000658a:	mov    rax,QWORD PTR [rdx]
   14000658d:	mov    QWORD PTR [rcx+0x8],rax
   140006591:	mov    rax,rcx
   140006594:	ret    
   140006595:	int3   
   140006596:	int3   
   140006597:	int3   
   140006598:	int3   
   140006599:	int3   
   14000659a:	int3   
   14000659b:	int3   
   14000659c:	int3   
   14000659d:	int3   
   14000659e:	int3   
   14000659f:	int3   
   1400065a0:	lea    rax,[rip+0x4899]        # 0x14000ae40
   1400065a7:	mov    QWORD PTR [rcx],rax
   1400065aa:	mov    rax,QWORD PTR [rdx+0x8]
   1400065ae:	mov    QWORD PTR [rcx+0x8],rax
   1400065b2:	mov    rax,rcx
   1400065b5:	ret    
   1400065b6:	int3   
   1400065b7:	int3   
   1400065b8:	int3   
   1400065b9:	int3   
   1400065ba:	int3   
   1400065bb:	int3   
   1400065bc:	int3   
   1400065bd:	int3   
   1400065be:	int3   
   1400065bf:	int3   
   1400065c0:	xor    eax,eax
   1400065c2:	mov    QWORD PTR [rcx],rax
   1400065c5:	mov    QWORD PTR [rcx+0x8],rax
   1400065c9:	mov    rax,rcx
   1400065cc:	ret    
   1400065cd:	int3   
   1400065ce:	int3   
   1400065cf:	int3   
   1400065d0:	mov    QWORD PTR [rcx],rdx
   1400065d3:	mov    QWORD PTR [rcx+0x8],0x40
   1400065db:	mov    QWORD PTR [rcx+0x10],0xffffffffffffffff
   1400065e3:	mov    rax,rcx
   1400065e6:	ret    
   1400065e7:	int3   
   1400065e8:	int3   
   1400065e9:	int3   
   1400065ea:	int3   
   1400065eb:	int3   
   1400065ec:	int3   
   1400065ed:	int3   
   1400065ee:	int3   
   1400065ef:	int3   
   1400065f0:	xor    eax,eax
   1400065f2:	mov    QWORD PTR [rcx+0x10],rax
   1400065f6:	mov    QWORD PTR [rcx+0x18],rax
   1400065fa:	mov    rax,rcx
   1400065fd:	ret    
   1400065fe:	int3   
   1400065ff:	int3   
   140006600:	xor    eax,eax
   140006602:	mov    QWORD PTR [rcx+0x10],rax
   140006606:	mov    QWORD PTR [rcx+0x18],rax
   14000660a:	mov    rax,rcx
   14000660d:	ret    
   14000660e:	int3   
   14000660f:	int3   
   140006610:	mov    rax,rcx
   140006613:	ret    
   140006614:	int3   
   140006615:	int3   
   140006616:	int3   
   140006617:	int3   
   140006618:	int3   
   140006619:	int3   
   14000661a:	int3   
   14000661b:	int3   
   14000661c:	int3   
   14000661d:	int3   
   14000661e:	int3   
   14000661f:	int3   
   140006620:	mov    rax,rcx
   140006623:	ret    
   140006624:	int3   
   140006625:	int3   
   140006626:	int3   
   140006627:	int3   
   140006628:	int3   
   140006629:	int3   
   14000662a:	int3   
   14000662b:	int3   
   14000662c:	int3   
   14000662d:	int3   
   14000662e:	int3   
   14000662f:	int3   
   140006630:	mov    rax,rcx
   140006633:	ret    
   140006634:	int3   
   140006635:	int3   
   140006636:	int3   
   140006637:	int3   
   140006638:	int3   
   140006639:	int3   
   14000663a:	int3   
   14000663b:	int3   
   14000663c:	int3   
   14000663d:	int3   
   14000663e:	int3   
   14000663f:	int3   
   140006640:	mov    rax,rcx
   140006643:	ret    
   140006644:	int3   
   140006645:	int3   
   140006646:	int3   
   140006647:	int3   
   140006648:	int3   
   140006649:	int3   
   14000664a:	int3   
   14000664b:	int3   
   14000664c:	int3   
   14000664d:	int3   
   14000664e:	int3   
   14000664f:	int3   
   140006650:	mov    rax,rcx
   140006653:	ret    
   140006654:	int3   
   140006655:	int3   
   140006656:	int3   
   140006657:	int3   
   140006658:	int3   
   140006659:	int3   
   14000665a:	int3   
   14000665b:	int3   
   14000665c:	int3   
   14000665d:	int3   
   14000665e:	int3   
   14000665f:	int3   
   140006660:	mov    rax,rcx
   140006663:	ret    
   140006664:	int3   
   140006665:	int3   
   140006666:	int3   
   140006667:	int3   
   140006668:	int3   
   140006669:	int3   
   14000666a:	int3   
   14000666b:	int3   
   14000666c:	int3   
   14000666d:	int3   
   14000666e:	int3   
   14000666f:	int3   
   140006670:	rex push rbx
   140006672:	sub    rsp,0x20
   140006676:	xor    r8d,r8d
   140006679:	mov    QWORD PTR [rcx+0x18],0x7
   140006681:	mov    rbx,rcx
   140006684:	mov    QWORD PTR [rcx+0x10],r8
   140006688:	mov    WORD PTR [rcx],r8w
   14000668c:	cmp    WORD PTR [rdx],r8w
   140006690:	je     0x1400066ab
   140006692:	or     r8,0xffffffffffffffff
   140006696:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400066a0:	inc    r8
   1400066a3:	cmp    WORD PTR [rdx+r8*2],0x0
   1400066a9:	jne    0x1400066a0
   1400066ab:	call   0x140007810
   1400066b0:	mov    rax,rbx
   1400066b3:	add    rsp,0x20
   1400066b7:	pop    rbx
   1400066b8:	ret    
   1400066b9:	int3   
   1400066ba:	int3   
   1400066bb:	int3   
   1400066bc:	int3   
   1400066bd:	int3   
   1400066be:	int3   
   1400066bf:	int3   
   1400066c0:	mov    QWORD PTR [rcx+0x1388],r8
   1400066c7:	mov    eax,edx
   1400066c9:	lea    r10,[rcx+0x10]
   1400066cd:	mov    r8d,0x1
   1400066d3:	mov    r11d,0x137
   1400066d9:	mov    QWORD PTR [rcx+0x8],rax
   1400066dd:	nop    DWORD PTR [rax]
   1400066e0:	mov    rdx,rax
   1400066e3:	lea    r10,[r10+0x8]
   1400066e7:	shr    rdx,0x3e
   1400066eb:	xor    rax,rdx
   1400066ee:	imul   rax,r9
   1400066f2:	add    rax,r8
   1400066f5:	inc    r8
   1400066f8:	mov    QWORD PTR [r10-0x8],rax
   1400066fc:	dec    r11
   1400066ff:	jne    0x1400066e0
   140006701:	mov    DWORD PTR [rcx],0x138
   140006707:	mov    rax,rcx
   14000670a:	ret    
   14000670b:	int3   
   14000670c:	int3   
   14000670d:	int3   
   14000670e:	int3   
   14000670f:	int3   
   140006710:	mov    r8d,edx
   140006713:	movabs rax,0x5555555555555555
   14000671d:	lea    r9,[rcx+0x10]
   140006721:	mov    QWORD PTR [rcx+0x1388],rax
   140006728:	mov    edx,0x1
   14000672d:	mov    r10d,0x137
   140006733:	mov    QWORD PTR [rcx+0x8],r8
   140006737:	movabs r11,0x5851f42d4c957f2d
   140006741:	mov    rax,r8
   140006744:	lea    r9,[r9+0x8]
   140006748:	shr    rax,0x3e
   14000674c:	xor    r8,rax
   14000674f:	imul   r8,r11
   140006753:	add    r8,rdx
   140006756:	inc    rdx
   140006759:	mov    QWORD PTR [r9-0x8],r8
   14000675d:	dec    r10
   140006760:	jne    0x140006741
   140006762:	mov    DWORD PTR [rcx],0x138
   140006768:	mov    rax,rcx
   14000676b:	ret    
   14000676c:	int3   
   14000676d:	int3   
   14000676e:	int3   
   14000676f:	int3   
   140006770:	rex push rbx
   140006772:	sub    rsp,0x20
   140006776:	xor    eax,eax
   140006778:	mov    rbx,rcx
   14000677b:	mov    QWORD PTR [rcx],rax
   14000677e:	mov    QWORD PTR [rcx+0x8],rax
   140006782:	mov    r8,QWORD PTR [rdx+0x8]
   140006786:	mov    rdx,QWORD PTR [rdx]
   140006789:	test   r8,r8
   14000678c:	je     0x140006793
   14000678e:	lock inc DWORD PTR [r8+0x8]
   140006793:	call   0x140007450
   140006798:	mov    rax,rbx
   14000679b:	add    rsp,0x20
   14000679f:	pop    rbx
   1400067a0:	ret    
   1400067a1:	int3   
   1400067a2:	int3   
   1400067a3:	int3   
   1400067a4:	int3   
   1400067a5:	int3   
   1400067a6:	int3   
   1400067a7:	int3   
   1400067a8:	int3   
   1400067a9:	int3   
   1400067aa:	int3   
   1400067ab:	int3   
   1400067ac:	int3   
   1400067ad:	int3   
   1400067ae:	int3   
   1400067af:	int3   
   1400067b0:	mov    QWORD PTR [rcx],rdx
   1400067b3:	mov    QWORD PTR [rcx+0x8],r8
   1400067b7:	mov    rax,rcx
   1400067ba:	ret    
   1400067bb:	int3   
   1400067bc:	int3   
   1400067bd:	int3   
   1400067be:	int3   
   1400067bf:	int3   
   1400067c0:	mov    QWORD PTR [rcx],rdx
   1400067c3:	mov    QWORD PTR [rcx+0x8],r8
   1400067c7:	mov    rax,rcx
   1400067ca:	ret    
   1400067cb:	int3   
   1400067cc:	int3   
   1400067cd:	int3   
   1400067ce:	int3   
   1400067cf:	int3   
   1400067d0:	mov    rax,rcx
   1400067d3:	ret    
   1400067d4:	int3   
   1400067d5:	int3   
   1400067d6:	int3   
   1400067d7:	int3   
   1400067d8:	int3   
   1400067d9:	int3   
   1400067da:	int3   
   1400067db:	int3   
   1400067dc:	int3   
   1400067dd:	int3   
   1400067de:	int3   
   1400067df:	int3   
   1400067e0:	mov    QWORD PTR [rcx],rdx
   1400067e3:	mov    QWORD PTR [rcx+0x8],r8
   1400067e7:	mov    rax,rcx
   1400067ea:	ret    
   1400067eb:	int3   
   1400067ec:	int3   
   1400067ed:	int3   
   1400067ee:	int3   
   1400067ef:	int3   
   1400067f0:	lea    rax,[rip+0x4609]        # 0x14000ae00
   1400067f7:	mov    QWORD PTR [rcx],rax
   1400067fa:	ret    
   1400067fb:	int3   
   1400067fc:	int3   
   1400067fd:	int3   
   1400067fe:	int3   
   1400067ff:	int3   
   140006800:	rex push rbx
   140006802:	sub    rsp,0x20
   140006806:	mov    rbx,rcx
   140006809:	mov    rcx,QWORD PTR [rcx+0x18]
   14000680d:	test   rcx,rcx
   140006810:	je     0x140006826
   140006812:	mov    rax,QWORD PTR [rcx]
   140006815:	cmp    rcx,rbx
   140006818:	setne  dl
   14000681b:	call   QWORD PTR [rax+0x20]
   14000681e:	mov    QWORD PTR [rbx+0x18],0x0
   140006826:	add    rsp,0x20
   14000682a:	pop    rbx
   14000682b:	ret    
   14000682c:	int3   
   14000682d:	int3   
   14000682e:	int3   
   14000682f:	int3   
   140006830:	lea    rax,[rip+0x45c9]        # 0x14000ae00
   140006837:	mov    QWORD PTR [rcx],rax
   14000683a:	ret    
   14000683b:	int3   
   14000683c:	int3   
   14000683d:	int3   
   14000683e:	int3   
   14000683f:	int3   
   140006840:	rex push rbx
   140006842:	sub    rsp,0x20
   140006846:	cmp    QWORD PTR [rcx+0x18],0x8
   14000684b:	mov    rbx,rcx
   14000684e:	jb     0x140006858
   140006850:	mov    rcx,QWORD PTR [rcx]
   140006853:	call   0x140008880
   140006858:	xor    eax,eax
   14000685a:	mov    QWORD PTR [rbx+0x18],0x7
   140006862:	mov    QWORD PTR [rbx+0x10],rax
   140006866:	mov    WORD PTR [rbx],ax
   140006869:	add    rsp,0x20
   14000686d:	pop    rbx
   14000686e:	ret    
   14000686f:	int3   
   140006870:	rex push rbx
   140006872:	sub    rsp,0x20
   140006876:	mov    rbx,rcx
   140006879:	mov    rcx,QWORD PTR [rcx+0x18]
   14000687d:	test   rcx,rcx
   140006880:	je     0x140006896
   140006882:	mov    rax,QWORD PTR [rcx]
   140006885:	cmp    rcx,rbx
   140006888:	setne  dl
   14000688b:	call   QWORD PTR [rax+0x20]
   14000688e:	mov    QWORD PTR [rbx+0x18],0x0
   140006896:	mov    rcx,QWORD PTR [rbx+0x18]
   14000689a:	test   rcx,rcx
   14000689d:	je     0x1400068b3
   14000689f:	mov    rax,QWORD PTR [rcx]
   1400068a2:	cmp    rcx,rbx
   1400068a5:	setne  dl
   1400068a8:	call   QWORD PTR [rax+0x20]
   1400068ab:	mov    QWORD PTR [rbx+0x18],0x0
   1400068b3:	add    rsp,0x20
   1400068b7:	pop    rbx
   1400068b8:	ret    
   1400068b9:	int3   
   1400068ba:	int3   
   1400068bb:	int3   
   1400068bc:	int3   
   1400068bd:	int3   
   1400068be:	int3   
   1400068bf:	int3   
   1400068c0:	rex push rbx
   1400068c2:	sub    rsp,0x20
   1400068c6:	mov    rbx,QWORD PTR [rcx+0x8]
   1400068ca:	test   rbx,rbx
   1400068cd:	je     0x1400068f6
   1400068cf:	lock dec DWORD PTR [rbx+0x8]
   1400068d3:	mov    QWORD PTR [rsp+0x30],rdi
   1400068d8:	jne    0x1400068f1
   1400068da:	mov    rax,QWORD PTR [rbx]
   1400068dd:	mov    rcx,rbx
   1400068e0:	call   QWORD PTR [rax]
   1400068e2:	lock dec DWORD PTR [rbx+0xc]
   1400068e6:	jne    0x1400068f1
   1400068e8:	mov    rax,QWORD PTR [rbx]
   1400068eb:	mov    rcx,rbx
   1400068ee:	call   QWORD PTR [rax+0x8]
   1400068f1:	mov    rdi,QWORD PTR [rsp+0x30]
   1400068f6:	add    rsp,0x20
   1400068fa:	pop    rbx
   1400068fb:	ret    
   1400068fc:	int3   
   1400068fd:	int3   
   1400068fe:	int3   
   1400068ff:	int3   
   140006900:	mov    rdx,QWORD PTR [rdx]
   140006903:	cmp    QWORD PTR [rcx],rdx
   140006906:	sete   al
   140006909:	ret    
   14000690a:	int3   
   14000690b:	int3   
   14000690c:	int3   
   14000690d:	int3   
   14000690e:	int3   
   14000690f:	int3   
   140006910:	mov    rdx,QWORD PTR [rdx]
   140006913:	cmp    QWORD PTR [rcx],rdx
   140006916:	sete   al
   140006919:	ret    
   14000691a:	int3   
   14000691b:	int3   
   14000691c:	int3   
   14000691d:	int3   
   14000691e:	int3   
   14000691f:	int3   
   140006920:	mov    rdx,QWORD PTR [rdx]
   140006923:	cmp    QWORD PTR [rcx],rdx
   140006926:	setne  al
   140006929:	ret    
   14000692a:	int3   
   14000692b:	int3   
   14000692c:	int3   
   14000692d:	int3   
   14000692e:	int3   
   14000692f:	int3   
   140006930:	xor    eax,eax
   140006932:	cmp    QWORD PTR [rcx],rax
   140006935:	setne  al
   140006938:	ret    
   140006939:	int3   
   14000693a:	int3   
   14000693b:	int3   
   14000693c:	int3   
   14000693d:	int3   
   14000693e:	int3   
   14000693f:	int3   
   140006940:	mov    rax,QWORD PTR [rcx]
   140006943:	ret    
   140006944:	int3   
   140006945:	int3   
   140006946:	int3   
   140006947:	int3   
   140006948:	int3   
   140006949:	int3   
   14000694a:	int3   
   14000694b:	int3   
   14000694c:	int3   
   14000694d:	int3   
   14000694e:	int3   
   14000694f:	int3   
   140006950:	mov    rax,QWORD PTR [rcx]
   140006953:	ret    
   140006954:	int3   
   140006955:	int3   
   140006956:	int3   
   140006957:	int3   
   140006958:	int3   
   140006959:	int3   
   14000695a:	int3   
   14000695b:	int3   
   14000695c:	int3   
   14000695d:	int3   
   14000695e:	int3   
   14000695f:	int3   
   140006960:	mov    rax,QWORD PTR [rcx]
   140006963:	mov    QWORD PTR [rdx],rax
   140006966:	inc    rax
   140006969:	mov    QWORD PTR [rcx],rax
   14000696c:	mov    rax,rdx
   14000696f:	ret    
   140006970:	inc    QWORD PTR [rcx]
   140006973:	mov    rax,rcx
   140006976:	ret    
   140006977:	int3   
   140006978:	int3   
   140006979:	int3   
   14000697a:	int3   
   14000697b:	int3   
   14000697c:	int3   
   14000697d:	int3   
   14000697e:	int3   
   14000697f:	int3   
   140006980:	inc    QWORD PTR [rcx]
   140006983:	mov    rax,rcx
   140006986:	ret    
   140006987:	int3   
   140006988:	int3   
   140006989:	int3   
   14000698a:	int3   
   14000698b:	int3   
   14000698c:	int3   
   14000698d:	int3   
   14000698e:	int3   
   14000698f:	int3   
   140006990:	inc    QWORD PTR [rcx]
   140006993:	mov    rax,rcx
   140006996:	ret    
   140006997:	int3   
   140006998:	int3   
   140006999:	int3   
   14000699a:	int3   
   14000699b:	int3   
   14000699c:	int3   
   14000699d:	int3   
   14000699e:	int3   
   14000699f:	int3   
   1400069a0:	mov    rcx,QWORD PTR [rcx]
   1400069a3:	mov    rax,rdx
   1400069a6:	add    rcx,r8
   1400069a9:	mov    QWORD PTR [rdx],rcx
   1400069ac:	ret    
   1400069ad:	int3   
   1400069ae:	int3   
   1400069af:	int3   
   1400069b0:	mov    rcx,QWORD PTR [rcx]
   1400069b3:	mov    rax,rdx
   1400069b6:	add    rcx,r8
   1400069b9:	mov    QWORD PTR [rdx],rcx
   1400069bc:	ret    
   1400069bd:	int3   
   1400069be:	int3   
   1400069bf:	int3   
   1400069c0:	mov    rcx,QWORD PTR [rcx]
   1400069c3:	mov    rax,rdx
   1400069c6:	add    rcx,r8
   1400069c9:	mov    QWORD PTR [rdx],rcx
   1400069cc:	ret    
   1400069cd:	int3   
   1400069ce:	int3   
   1400069cf:	int3   
   1400069d0:	mov    rax,QWORD PTR [rcx]
   1400069d3:	lea    rdx,[rip+0x439a]        # 0x14000ad74
   1400069da:	cmp    rdx,QWORD PTR [rax]
   1400069dd:	jne    0x1400069e9
   1400069df:	lea    rdx,[rip+0x438a]        # 0x14000ad70
   1400069e6:	mov    QWORD PTR [rax],rdx
   1400069e9:	mov    rdx,QWORD PTR [rcx]
   1400069ec:	mov    rax,QWORD PTR [rdx]
   1400069ef:	lea    rcx,[rax+0x1]
   1400069f3:	mov    QWORD PTR [rdx],rcx
   1400069f6:	movzx  eax,BYTE PTR [rax]
   1400069f9:	ret    
   1400069fa:	int3   
   1400069fb:	int3   
   1400069fc:	int3   
   1400069fd:	int3   
   1400069fe:	int3   
   1400069ff:	int3   
   140006a00:	mov    rax,QWORD PTR [rcx]
   140006a03:	mov    rcx,QWORD PTR [rax]
   140006a06:	mov    rax,QWORD PTR [rcx]
   140006a09:	rex.W jmp QWORD PTR [rax]
   140006a0c:	int3   
   140006a0d:	int3   
   140006a0e:	int3   
   140006a0f:	int3   
   140006a10:	mov    r8,QWORD PTR [rcx]
   140006a13:	lea    rcx,[rip+0x435a]        # 0x14000ad74
   140006a1a:	mov    rax,QWORD PTR [r8]
   140006a1d:	cmp    rcx,QWORD PTR [rax]
   140006a20:	jne    0x140006a2c
   140006a22:	lea    rcx,[rip+0x4347]        # 0x14000ad70
   140006a29:	mov    QWORD PTR [rax],rcx
   140006a2c:	mov    r8,QWORD PTR [r8]
   140006a2f:	mov    rax,QWORD PTR [r8]
   140006a32:	lea    rcx,[rax+0x1]
   140006a36:	mov    QWORD PTR [r8],rcx
   140006a39:	movsx  eax,BYTE PTR [rax]
   140006a3c:	movsx  ecx,BYTE PTR [rdx]
   140006a3f:	xor    eax,ecx
   140006a41:	ret    
   140006a42:	int3   
   140006a43:	int3   
   140006a44:	int3   
   140006a45:	int3   
   140006a46:	int3   
   140006a47:	int3   
   140006a48:	int3   
   140006a49:	int3   
   140006a4a:	int3   
   140006a4b:	int3   
   140006a4c:	int3   
   140006a4d:	int3   
   140006a4e:	int3   
   140006a4f:	int3   
   140006a50:	xor    eax,eax
   140006a52:	ret    
   140006a53:	int3   
   140006a54:	int3   
   140006a55:	int3   
   140006a56:	int3   
   140006a57:	int3   
   140006a58:	int3   
   140006a59:	int3   
   140006a5a:	int3   
   140006a5b:	int3   
   140006a5c:	int3   
   140006a5d:	int3   
   140006a5e:	int3   
   140006a5f:	int3   
   140006a60:	sub    rsp,0x28
   140006a64:	mov    rcx,QWORD PTR [rcx+0x18]
   140006a68:	test   rcx,rcx
   140006a6b:	jne    0x140006a74
   140006a6d:	call   QWORD PTR [rip+0x3705]        # 0x14000a178
   140006a73:	int3   
   140006a74:	mov    rax,QWORD PTR [rcx]
   140006a77:	add    rsp,0x28
   140006a7b:	rex.W jmp QWORD PTR [rax+0x10]
   140006a7f:	int3   
   140006a80:	mov    QWORD PTR [rsp+0x8],rbx
   140006a85:	mov    QWORD PTR [rsp+0x10],rbp
   140006a8a:	mov    QWORD PTR [rsp+0x18],rsi
   140006a8f:	mov    QWORD PTR [rsp+0x20],rdi
   140006a94:	push   r14
   140006a96:	sub    rsp,0x20
   140006a9a:	mov    r14,rdx
   140006a9d:	mov    rbx,rcx
   140006aa0:	lea    rbp,[rdx-0x1]
   140006aa4:	xor    edi,edi
   140006aa6:	xor    esi,esi
   140006aa8:	test   rbp,rbp
   140006aab:	je     0x140006ae7
   140006aad:	nop    DWORD PTR [rax]
   140006ab0:	movzx  ecx,BYTE PTR [rbx+0x8]
   140006ab4:	add    cl,0xff
   140006ab7:	shl    rdi,cl
   140006aba:	add    rdi,rdi
   140006abd:	nop    DWORD PTR [rax]
   140006ac0:	mov    rcx,QWORD PTR [rbx]
   140006ac3:	call   0x140006b30
   140006ac8:	cmp    rax,QWORD PTR [rbx+0x10]
   140006acc:	ja     0x140006ac0
   140006ace:	movzx  ecx,BYTE PTR [rbx+0x8]
   140006ad2:	or     rdi,rax
   140006ad5:	add    cl,0xff
   140006ad8:	shl    rsi,cl
   140006adb:	add    rsi,rsi
   140006ade:	or     rsi,QWORD PTR [rbx+0x10]
   140006ae2:	cmp    rsi,rbp
   140006ae5:	jb     0x140006ab0
   140006ae7:	xor    edx,edx
   140006ae9:	mov    rax,rsi
   140006aec:	div    r14
   140006aef:	mov    rcx,rax
   140006af2:	mov    r8,rdx
   140006af5:	xor    edx,edx
   140006af7:	mov    rax,rdi
   140006afa:	div    r14
   140006afd:	cmp    rax,rcx
   140006b00:	jb     0x140006b07
   140006b02:	cmp    r8,rbp
   140006b05:	jne    0x140006aa4
   140006b07:	mov    rbx,QWORD PTR [rsp+0x30]
   140006b0c:	mov    rbp,QWORD PTR [rsp+0x38]
   140006b11:	mov    rsi,QWORD PTR [rsp+0x40]
   140006b16:	mov    rax,rdi
   140006b19:	mov    rdi,QWORD PTR [rsp+0x48]
   140006b1e:	xor    edx,edx
   140006b20:	div    r14
   140006b23:	mov    rax,rdx
   140006b26:	add    rsp,0x20
   140006b2a:	pop    r14
   140006b2c:	ret    
   140006b2d:	int3   
   140006b2e:	int3   
   140006b2f:	int3   
   140006b30:	rex push rbx
   140006b32:	sub    rsp,0x20
   140006b36:	mov    eax,DWORD PTR [rcx]
   140006b38:	mov    r9d,0x138
   140006b3e:	mov    rbx,rcx
   140006b41:	cmp    eax,r9d
   140006b44:	jne    0x140006b9c
   140006b46:	lea    r8,[rcx+0x10]
   140006b4a:	movabs r10,0xb5026f5aa96619e9
   140006b54:	nop    DWORD PTR [rax+0x0]
   140006b58:	nop    DWORD PTR [rax+rax*1+0x0]
   140006b60:	mov    edx,DWORD PTR [r8-0x8]
   140006b64:	lea    r8,[r8+0x8]
   140006b68:	xor    edx,DWORD PTR [r8-0x8]
   140006b6c:	btr    edx,0x1f
   140006b70:	xor    rdx,QWORD PTR [r8-0x10]
   140006b74:	movzx  eax,dl
   140006b77:	and    al,0x1
   140006b79:	neg    al
   140006b7b:	sbb    rcx,rcx
   140006b7e:	shr    rdx,1
   140006b81:	and    rcx,r10
   140006b84:	xor    rcx,QWORD PTR [r8+0x4d0]
   140006b8b:	xor    rcx,rdx
   140006b8e:	mov    QWORD PTR [r8+0x9b0],rcx
   140006b95:	dec    r9
   140006b98:	jne    0x140006b60
   140006b9a:	jmp    0x140006ba8
   140006b9c:	cmp    eax,0x270
   140006ba1:	jb     0x140006ba8
   140006ba3:	call   0x140007300
   140006ba8:	mov    eax,DWORD PTR [rbx]
   140006baa:	mov    rdx,QWORD PTR [rbx+rax*8+0x8]
   140006baf:	inc    eax
   140006bb1:	mov    DWORD PTR [rbx],eax
   140006bb3:	mov    rax,QWORD PTR [rbx+0x1388]
   140006bba:	mov    rcx,rdx
   140006bbd:	shr    rcx,0x1d
   140006bc1:	and    rax,rcx
   140006bc4:	movabs rcx,0x38eb3ffff6d3
   140006bce:	xor    rdx,rax
   140006bd1:	mov    rax,rdx
   140006bd4:	and    rax,rcx
   140006bd7:	shl    rax,0x11
   140006bdb:	xor    rdx,rax
   140006bde:	mov    rax,rdx
   140006be1:	and    rax,0xffffffffffffbf77
   140006be7:	shl    rax,0x25
   140006beb:	xor    rdx,rax
   140006bee:	mov    rax,rdx
   140006bf1:	shr    rax,0x2b
   140006bf5:	xor    rax,rdx
   140006bf8:	add    rsp,0x20
   140006bfc:	pop    rbx
   140006bfd:	ret    
   140006bfe:	int3   
   140006bff:	int3   
   140006c00:	add    QWORD PTR [rcx],rdx
   140006c03:	mov    rax,rcx
   140006c06:	ret    
   140006c07:	int3   
   140006c08:	int3   
   140006c09:	int3   
   140006c0a:	int3   
   140006c0b:	int3   
   140006c0c:	int3   
   140006c0d:	int3   
   140006c0e:	int3   
   140006c0f:	int3   
   140006c10:	add    QWORD PTR [rcx],rdx
   140006c13:	mov    rax,rcx
   140006c16:	ret    
   140006c17:	int3   
   140006c18:	int3   
   140006c19:	int3   
   140006c1a:	int3   
   140006c1b:	int3   
   140006c1c:	int3   
   140006c1d:	int3   
   140006c1e:	int3   
   140006c1f:	int3   
   140006c20:	add    QWORD PTR [rcx],rdx
   140006c23:	mov    rax,rcx
   140006c26:	ret    
   140006c27:	int3   
   140006c28:	int3   
   140006c29:	int3   
   140006c2a:	int3   
   140006c2b:	int3   
   140006c2c:	int3   
   140006c2d:	int3   
   140006c2e:	int3   
   140006c2f:	int3   
   140006c30:	rex push rbx
   140006c32:	sub    rsp,0x20
   140006c36:	lea    rax,[rip+0x41c3]        # 0x14000ae00
   140006c3d:	mov    rbx,rcx
   140006c40:	mov    QWORD PTR [rcx],rax
   140006c43:	test   dl,0x1
   140006c46:	je     0x140006c4d
   140006c48:	call   0x140008880
   140006c4d:	mov    rax,rbx
   140006c50:	add    rsp,0x20
   140006c54:	pop    rbx
   140006c55:	ret    
   140006c56:	int3   
   140006c57:	int3   
   140006c58:	int3   
   140006c59:	int3   
   140006c5a:	int3   
   140006c5b:	int3   
   140006c5c:	int3   
   140006c5d:	int3   
   140006c5e:	int3   
   140006c5f:	int3   
   140006c60:	rex push rbx
   140006c62:	sub    rsp,0x20
   140006c66:	lea    rax,[rip+0x4193]        # 0x14000ae00
   140006c6d:	mov    rbx,rcx
   140006c70:	mov    QWORD PTR [rcx],rax
   140006c73:	test   dl,0x1
   140006c76:	je     0x140006c7d
   140006c78:	call   0x140008880
   140006c7d:	mov    rax,rbx
   140006c80:	add    rsp,0x20
   140006c84:	pop    rbx
   140006c85:	ret    
   140006c86:	int3   
   140006c87:	int3   
   140006c88:	int3   
   140006c89:	int3   
   140006c8a:	int3   
   140006c8b:	int3   
   140006c8c:	int3   
   140006c8d:	int3   
   140006c8e:	int3   
   140006c8f:	int3   
   140006c90:	mov    rax,rcx
   140006c93:	ret    
   140006c94:	int3   
   140006c95:	int3   
   140006c96:	int3   
   140006c97:	int3   
   140006c98:	int3   
   140006c99:	int3   
   140006c9a:	int3   
   140006c9b:	int3   
   140006c9c:	int3   
   140006c9d:	int3   
   140006c9e:	int3   
   140006c9f:	int3   
   140006ca0:	mov    rax,rcx
   140006ca3:	ret    
   140006ca4:	int3   
   140006ca5:	int3   
   140006ca6:	int3   
   140006ca7:	int3   
   140006ca8:	int3   
   140006ca9:	int3   
   140006caa:	int3   
   140006cab:	int3   
   140006cac:	int3   
   140006cad:	int3   
   140006cae:	int3   
   140006caf:	int3   
   140006cb0:	mov    QWORD PTR [rsp+0x8],rbx
   140006cb5:	push   rdi
   140006cb6:	sub    rsp,0x20
   140006cba:	xor    eax,eax
   140006cbc:	mov    rdi,rdx
   140006cbf:	mov    rbx,rcx
   140006cc2:	mov    QWORD PTR [rcx],rax
   140006cc5:	mov    QWORD PTR [rcx+0x8],rax
   140006cc9:	mov    QWORD PTR [rcx+0x10],rax
   140006ccd:	test   rdx,rdx
   140006cd0:	je     0x140006d10
   140006cd2:	movabs rax,0x7ffffffffffffff
   140006cdc:	cmp    rdx,rax
   140006cdf:	jbe    0x140006cef
   140006ce1:	lea    rcx,[rip+0x3b80]        # 0x14000a868
   140006ce8:	call   QWORD PTR [rip+0x349a]        # 0x14000a188
   140006cee:	int3   
   140006cef:	shl    rdi,0x5
   140006cf3:	mov    rcx,rdi
   140006cf6:	call   0x14000887a
   140006cfb:	test   rax,rax
   140006cfe:	je     0x140006d1b
   140006d00:	mov    QWORD PTR [rbx],rax
   140006d03:	mov    QWORD PTR [rbx+0x8],rax
   140006d07:	add    rax,rdi
   140006d0a:	mov    QWORD PTR [rbx+0x10],rax
   140006d0e:	mov    al,0x1
   140006d10:	mov    rbx,QWORD PTR [rsp+0x30]
   140006d15:	add    rsp,0x20
   140006d19:	pop    rdi
   140006d1a:	ret    
   140006d1b:	call   QWORD PTR [rip+0x345f]        # 0x14000a180
   140006d21:	int3   
   140006d22:	int3   
   140006d23:	int3   
   140006d24:	int3   
   140006d25:	int3   
   140006d26:	int3   
   140006d27:	int3   
   140006d28:	int3   
   140006d29:	int3   
   140006d2a:	int3   
   140006d2b:	int3   
   140006d2c:	int3   
   140006d2d:	int3   
   140006d2e:	int3   
   140006d2f:	int3   
   140006d30:	ret    0x0
   140006d33:	int3   
   140006d34:	int3   
   140006d35:	int3   
   140006d36:	int3   
   140006d37:	int3   
   140006d38:	int3   
   140006d39:	int3   
   140006d3a:	int3   
   140006d3b:	int3   
   140006d3c:	int3   
   140006d3d:	int3   
   140006d3e:	int3   
   140006d3f:	int3   
   140006d40:	rex push rbx
   140006d42:	sub    rsp,0x20
   140006d46:	mov    rbx,rcx
   140006d49:	test   rdx,rdx
   140006d4c:	jne    0x140006d65
   140006d4e:	lea    ecx,[rdx+0x18]
   140006d51:	call   0x14000887a
   140006d56:	mov    rdx,rax
   140006d59:	test   rax,rax
   140006d5c:	jne    0x140006d65
   140006d5e:	call   QWORD PTR [rip+0x341c]        # 0x14000a180
   140006d64:	int3   
   140006d65:	lea    rax,[rip+0x40d4]        # 0x14000ae40
   140006d6c:	mov    QWORD PTR [rdx],rax
   140006d6f:	mov    rax,QWORD PTR [rbx+0x8]
   140006d73:	mov    QWORD PTR [rdx+0x8],rax
   140006d77:	mov    rax,rdx
   140006d7a:	add    rsp,0x20
   140006d7e:	pop    rbx
   140006d7f:	ret    
   140006d80:	mov    QWORD PTR [rsp+0x18],r8
   140006d85:	mov    QWORD PTR [rsp+0x10],rdx
   140006d8a:	mov    QWORD PTR [rsp+0x8],rcx
   140006d8f:	push   rbx
   140006d90:	push   rsi
   140006d91:	push   rdi
   140006d92:	push   r14
   140006d94:	push   r15
   140006d96:	sub    rsp,0x30
   140006d9a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006da3:	mov    rsi,r8
   140006da6:	mov    rbx,rcx
   140006da9:	mov    rdi,rdx
   140006dac:	or     rdi,0x7
   140006db0:	movabs r9,0x7ffffffffffffffe
   140006dba:	cmp    rdi,r9
   140006dbd:	jbe    0x140006dc4
   140006dbf:	mov    rdi,rdx
   140006dc2:	jmp    0x140006df5
   140006dc4:	mov    r8,QWORD PTR [rcx+0x18]
   140006dc8:	mov    rcx,r8
   140006dcb:	shr    rcx,1
   140006dce:	movabs rax,0xaaaaaaaaaaaaaaab
   140006dd8:	mul    rdi
   140006ddb:	shr    rdx,1
   140006dde:	cmp    rcx,rdx
   140006de1:	jbe    0x140006df5
   140006de3:	mov    rax,r9
   140006de6:	sub    rax,rcx
   140006de9:	cmp    r8,rax
   140006dec:	lea    rdi,[rcx+r8*1]
   140006df0:	jbe    0x140006df5
   140006df2:	mov    rdi,r9
   140006df5:	lea    rcx,[rdi+0x1]
   140006df9:	xor    r15d,r15d
   140006dfc:	mov    r14d,r15d
   140006dff:	test   rcx,rcx
   140006e02:	je     0x140006e2a
   140006e04:	movabs rax,0x7fffffffffffffff
   140006e0e:	cmp    rcx,rax
   140006e11:	ja     0x140006e23
   140006e13:	add    rcx,rcx
   140006e16:	call   0x14000887a
   140006e1b:	mov    r14,rax
   140006e1e:	test   rax,rax
   140006e21:	jne    0x140006e2a
   140006e23:	call   QWORD PTR [rip+0x3357]        # 0x14000a180
   140006e29:	nop
   140006e2a:	jmp    0x140006e43
   140006e2c:	xor    r15d,r15d
   140006e2f:	mov    rbx,QWORD PTR [rsp+0x60]
   140006e34:	mov    rsi,QWORD PTR [rsp+0x70]
   140006e39:	mov    rdi,QWORD PTR [rsp+0x68]
   140006e3e:	mov    r14,QWORD PTR [rsp+0x78]
   140006e43:	test   rsi,rsi
   140006e46:	je     0x140006e68
   140006e48:	cmp    QWORD PTR [rbx+0x18],0x8
   140006e4d:	jb     0x140006e54
   140006e4f:	mov    rdx,QWORD PTR [rbx]
   140006e52:	jmp    0x140006e57
   140006e54:	mov    rdx,rbx
   140006e57:	test   rsi,rsi
   140006e5a:	je     0x140006e68
   140006e5c:	lea    r8,[rsi+rsi*1]
   140006e60:	mov    rcx,r14
   140006e63:	call   0x1400089c4
   140006e68:	cmp    QWORD PTR [rbx+0x18],0x8
   140006e6d:	jb     0x140006e77
   140006e6f:	mov    rcx,QWORD PTR [rbx]
   140006e72:	call   0x140008880
   140006e77:	mov    QWORD PTR [rbx],r14
   140006e7a:	mov    QWORD PTR [rbx+0x18],rdi
   140006e7e:	mov    QWORD PTR [rbx+0x10],rsi
   140006e82:	cmp    rdi,0x8
   140006e86:	jb     0x140006e8b
   140006e88:	mov    rbx,r14
   140006e8b:	mov    WORD PTR [rbx+rsi*2],r15w
   140006e90:	add    rsp,0x30
   140006e94:	pop    r15
   140006e96:	pop    r14
   140006e98:	pop    rdi
   140006e99:	pop    rsi
   140006e9a:	pop    rbx
   140006e9b:	ret    
   140006e9c:	int3   
   140006e9d:	int3   
   140006e9e:	int3   
   140006e9f:	int3   
   140006ea0:	rex push rbx
   140006ea2:	sub    rsp,0x20
   140006ea6:	mov    rbx,QWORD PTR [rcx+0x8]
   140006eaa:	test   rbx,rbx
   140006ead:	je     0x140006ed6
   140006eaf:	lock dec DWORD PTR [rbx+0x8]
   140006eb3:	mov    QWORD PTR [rsp+0x30],rdi
   140006eb8:	jne    0x140006ed1
   140006eba:	mov    rax,QWORD PTR [rbx]
   140006ebd:	mov    rcx,rbx
   140006ec0:	call   QWORD PTR [rax]
   140006ec2:	lock dec DWORD PTR [rbx+0xc]
   140006ec6:	jne    0x140006ed1
   140006ec8:	mov    rax,QWORD PTR [rbx]
   140006ecb:	mov    rcx,rbx
   140006ece:	call   QWORD PTR [rax+0x8]
   140006ed1:	mov    rdi,QWORD PTR [rsp+0x30]
   140006ed6:	add    rsp,0x20
   140006eda:	pop    rbx
   140006edb:	ret    
   140006edc:	int3   
   140006edd:	int3   
   140006ede:	int3   
   140006edf:	int3   
   140006ee0:	mov    QWORD PTR [rsp+0x8],rbx
   140006ee5:	push   rdi
   140006ee6:	sub    rsp,0x20
   140006eea:	lock dec DWORD PTR [rcx+0x8]
   140006eee:	mov    rbx,rcx
   140006ef1:	jne    0x140006f07
   140006ef3:	mov    rax,QWORD PTR [rcx]
   140006ef6:	call   QWORD PTR [rax]
   140006ef8:	lock dec DWORD PTR [rbx+0xc]
   140006efc:	jne    0x140006f07
   140006efe:	mov    rax,QWORD PTR [rbx]
   140006f01:	mov    rcx,rbx
   140006f04:	call   QWORD PTR [rax+0x8]
   140006f07:	mov    rbx,QWORD PTR [rsp+0x30]
   140006f0c:	add    rsp,0x20
   140006f10:	pop    rdi
   140006f11:	ret    
   140006f12:	int3   
   140006f13:	int3   
   140006f14:	int3   
   140006f15:	int3   
   140006f16:	int3   
   140006f17:	int3   
   140006f18:	int3   
   140006f19:	int3   
   140006f1a:	int3   
   140006f1b:	int3   
   140006f1c:	int3   
   140006f1d:	int3   
   140006f1e:	int3   
   140006f1f:	int3   
   140006f20:	lock dec DWORD PTR [rcx+0xc]
   140006f24:	jne    0x140006f2d
   140006f26:	mov    rax,QWORD PTR [rcx]
   140006f29:	rex.W jmp QWORD PTR [rax+0x8]
   140006f2d:	ret    
   140006f2e:	int3   
   140006f2f:	int3   
   140006f30:	mov    QWORD PTR [rsp+0x8],rbx
   140006f35:	push   rdi
   140006f36:	sub    rsp,0x20
   140006f3a:	mov    rax,QWORD PTR [rcx]
   140006f3d:	movzx  ebx,dl
   140006f40:	xor    edx,edx
   140006f42:	mov    rdi,rcx
   140006f45:	call   QWORD PTR [rax+0x28]
   140006f48:	test   bl,bl
   140006f4a:	je     0x140006f54
   140006f4c:	mov    rcx,rdi
   140006f4f:	call   0x140008880
   140006f54:	mov    rbx,QWORD PTR [rsp+0x30]
   140006f59:	add    rsp,0x20
   140006f5d:	pop    rdi
   140006f5e:	ret    
   140006f5f:	int3   
   140006f60:	mov    rax,QWORD PTR [rcx+0x8]
   140006f64:	mov    rcx,QWORD PTR [rax]
   140006f67:	mov    rax,QWORD PTR [rcx]
   140006f6a:	rex.W jmp QWORD PTR [rax]
   140006f6d:	int3   
   140006f6e:	int3   
   140006f6f:	int3   
   140006f70:	cmp    QWORD PTR [rcx+0x18],0x8
   140006f75:	mov    rax,rcx
   140006f78:	mov    QWORD PTR [rcx+0x10],rdx
   140006f7c:	jb     0x140006f81
   140006f7e:	mov    rax,QWORD PTR [rcx]
   140006f81:	xor    ecx,ecx
   140006f83:	mov    WORD PTR [rax+rdx*2],cx
   140006f87:	ret    
   140006f88:	int3   
   140006f89:	int3   
   140006f8a:	int3   
   140006f8b:	int3   
   140006f8c:	int3   
   140006f8d:	int3   
   140006f8e:	int3   
   140006f8f:	int3   
   140006f90:	mov    rax,rcx
   140006f93:	ret    
   140006f94:	int3   
   140006f95:	int3   
   140006f96:	int3   
   140006f97:	int3   
   140006f98:	int3   
   140006f99:	int3   
   140006f9a:	int3   
   140006f9b:	int3   
   140006f9c:	int3   
   140006f9d:	int3   
   140006f9e:	int3   
   140006f9f:	int3   
   140006fa0:	mov    rax,rcx
   140006fa3:	ret    
   140006fa4:	int3   
   140006fa5:	int3   
   140006fa6:	int3   
   140006fa7:	int3   
   140006fa8:	int3   
   140006fa9:	int3   
   140006faa:	int3   
   140006fab:	int3   
   140006fac:	int3   
   140006fad:	int3   
   140006fae:	int3   
   140006faf:	int3   
   140006fb0:	lea    rax,[rcx+0x8]
   140006fb4:	ret    
   140006fb5:	int3   
   140006fb6:	int3   
   140006fb7:	int3   
   140006fb8:	int3   
   140006fb9:	int3   
   140006fba:	int3   
   140006fbb:	int3   
   140006fbc:	int3   
   140006fbd:	int3   
   140006fbe:	int3   
   140006fbf:	int3   
   140006fc0:	mov    rax,QWORD PTR [rcx]
   140006fc3:	ret    
   140006fc4:	int3   
   140006fc5:	int3   
   140006fc6:	int3   
   140006fc7:	int3   
   140006fc8:	int3   
   140006fc9:	int3   
   140006fca:	int3   
   140006fcb:	int3   
   140006fcc:	int3   
   140006fcd:	int3   
   140006fce:	int3   
   140006fcf:	int3   
   140006fd0:	mov    QWORD PTR [rsp+0x8],rbx
   140006fd5:	mov    QWORD PTR [rsp+0x10],rsi
   140006fda:	push   rdi
   140006fdb:	sub    rsp,0x20
   140006fdf:	xor    edi,edi
   140006fe1:	mov    rbx,rcx
   140006fe4:	mov    esi,edi
   140006fe6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006ff0:	movzx  ecx,BYTE PTR [rbx+0x8]
   140006ff4:	add    cl,0xff
   140006ff7:	shl    rdi,cl
   140006ffa:	add    rdi,rdi
   140006ffd:	nop    DWORD PTR [rax]
   140007000:	mov    rcx,QWORD PTR [rbx]
   140007003:	call   0x140006b30
   140007008:	cmp    rax,QWORD PTR [rbx+0x10]
   14000700c:	ja     0x140007000
   14000700e:	add    rsi,QWORD PTR [rbx+0x8]
   140007012:	or     rdi,rax
   140007015:	cmp    rsi,0x40
   140007019:	jb     0x140006ff0
   14000701b:	mov    rbx,QWORD PTR [rsp+0x30]
   140007020:	mov    rsi,QWORD PTR [rsp+0x38]
   140007025:	mov    rax,rdi
   140007028:	add    rsp,0x20
   14000702c:	pop    rdi
   14000702d:	ret    
   14000702e:	int3   
   14000702f:	int3   
   140007030:	mov    QWORD PTR [rsp+0x8],rbx
   140007035:	mov    QWORD PTR [rsp+0x10],rbp
   14000703a:	mov    QWORD PTR [rsp+0x18],rsi
   14000703f:	push   rdi
   140007040:	sub    rsp,0x20
   140007044:	mov    rdi,rcx
   140007047:	movabs rsi,0xb5026f5aa96619e9
   140007051:	movabs rbp,0x38eb3ffff6d3
   14000705b:	nop    DWORD PTR [rax+rax*1+0x0]
   140007060:	mov    rbx,QWORD PTR [rdi]
   140007063:	mov    eax,DWORD PTR [rbx]
   140007065:	cmp    eax,0x138
   14000706a:	jne    0x1400070bf
   14000706c:	lea    rax,[rbx+0x10]
   140007070:	mov    r9d,0x138
   140007076:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007080:	mov    r8d,DWORD PTR [rax-0x8]
   140007084:	lea    rax,[rax+0x8]
   140007088:	xor    r8d,DWORD PTR [rax-0x8]
   14000708c:	btr    r8d,0x1f
   140007091:	xor    r8,QWORD PTR [rax-0x10]
   140007095:	movzx  ecx,r8b
   140007099:	and    cl,0x1
   14000709c:	neg    cl
   14000709e:	sbb    rdx,rdx
   1400070a1:	shr    r8,1
   1400070a4:	and    rdx,rsi
   1400070a7:	xor    rdx,QWORD PTR [rax+0x4d0]
   1400070ae:	xor    rdx,r8
   1400070b1:	mov    QWORD PTR [rax+0x9b0],rdx
   1400070b8:	dec    r9
   1400070bb:	jne    0x140007080
   1400070bd:	jmp    0x1400070ce
   1400070bf:	cmp    eax,0x270
   1400070c4:	jb     0x1400070ce
   1400070c6:	mov    rcx,rbx
   1400070c9:	call   0x140007300
   1400070ce:	mov    eax,DWORD PTR [rbx]
   1400070d0:	mov    rdx,QWORD PTR [rbx+rax*8+0x8]
   1400070d5:	inc    eax
   1400070d7:	mov    DWORD PTR [rbx],eax
   1400070d9:	mov    rax,QWORD PTR [rbx+0x1388]
   1400070e0:	mov    rcx,rdx
   1400070e3:	shr    rcx,0x1d
   1400070e7:	and    rax,rcx
   1400070ea:	xor    rdx,rax
   1400070ed:	mov    rax,rdx
   1400070f0:	and    rax,rbp
   1400070f3:	shl    rax,0x11
   1400070f7:	xor    rdx,rax
   1400070fa:	mov    rax,rdx
   1400070fd:	and    rax,0xffffffffffffbf77
   140007103:	shl    rax,0x25
   140007107:	xor    rdx,rax
   14000710a:	mov    rax,rdx
   14000710d:	shr    rax,0x2b
   140007111:	xor    rax,rdx
   140007114:	cmp    rax,QWORD PTR [rdi+0x10]
   140007118:	ja     0x140007060
   14000711e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007123:	mov    rbp,QWORD PTR [rsp+0x38]
   140007128:	mov    rsi,QWORD PTR [rsp+0x40]
   14000712d:	add    rsp,0x20
   140007131:	pop    rdi
   140007132:	ret    
   140007133:	int3   
   140007134:	int3   
   140007135:	int3   
   140007136:	int3   
   140007137:	int3   
   140007138:	int3   
   140007139:	int3   
   14000713a:	int3   
   14000713b:	int3   
   14000713c:	int3   
   14000713d:	int3   
   14000713e:	int3   
   14000713f:	int3   
   140007140:	mov    rax,rdx
   140007143:	ret    
   140007144:	int3   
   140007145:	int3   
   140007146:	int3   
   140007147:	int3   
   140007148:	int3   
   140007149:	int3   
   14000714a:	int3   
   14000714b:	int3   
   14000714c:	int3   
   14000714d:	int3   
   14000714e:	int3   
   14000714f:	int3   
   140007150:	mov    QWORD PTR [rsp+0x20],rbx
   140007155:	push   rdi
   140007156:	sub    rsp,0x20
   14000715a:	movabs rax,0x7ffffffffffffffe
   140007164:	mov    rdi,rdx
   140007167:	mov    rbx,rcx
   14000716a:	cmp    rdx,rax
   14000716d:	jbe    0x14000717d
   14000716f:	lea    rcx,[rip+0x36ca]        # 0x14000a840
   140007176:	call   QWORD PTR [rip+0x300c]        # 0x14000a188
   14000717c:	int3   
   14000717d:	mov    rax,QWORD PTR [rcx+0x18]
   140007181:	mov    QWORD PTR [rsp+0x38],rsi
   140007186:	xor    esi,esi
   140007188:	cmp    rax,rdx
   14000718b:	jae    0x140007198
   14000718d:	mov    r8,QWORD PTR [rcx+0x10]
   140007191:	call   0x140006d80
   140007196:	jmp    0x14000720c
   140007198:	test   r8b,r8b
   14000719b:	je     0x1400071f7
   14000719d:	cmp    rdx,0x8
   1400071a1:	jae    0x1400071f7
   1400071a3:	mov    QWORD PTR [rsp+0x40],r14
   1400071a8:	mov    r14,QWORD PTR [rcx+0x10]
   1400071ac:	cmp    rdx,r14
   1400071af:	cmovb  r14,rdx
   1400071b3:	cmp    rax,0x8
   1400071b7:	jb     0x1400071df
   1400071b9:	mov    QWORD PTR [rsp+0x30],rbp
   1400071be:	mov    rbp,QWORD PTR [rcx]
   1400071c1:	test   r14,r14
   1400071c4:	je     0x1400071d2
   1400071c6:	lea    r8,[r14+r14*1]
   1400071ca:	mov    rdx,rbp
   1400071cd:	call   0x1400089c4
   1400071d2:	mov    rcx,rbp
   1400071d5:	call   0x140008880
   1400071da:	mov    rbp,QWORD PTR [rsp+0x30]
   1400071df:	mov    QWORD PTR [rbx+0x10],r14
   1400071e3:	mov    QWORD PTR [rbx+0x18],0x7
   1400071eb:	mov    WORD PTR [rbx+r14*2],si
   1400071f0:	mov    r14,QWORD PTR [rsp+0x40]
   1400071f5:	jmp    0x14000720c
   1400071f7:	test   rdx,rdx
   1400071fa:	jne    0x14000720c
   1400071fc:	mov    QWORD PTR [rcx+0x10],rsi
   140007200:	cmp    rax,0x8
   140007204:	jb     0x140007209
   140007206:	mov    rbx,QWORD PTR [rcx]
   140007209:	mov    WORD PTR [rbx],si
   14000720c:	mov    rsi,QWORD PTR [rsp+0x38]
   140007211:	mov    rbx,QWORD PTR [rsp+0x48]
   140007216:	test   rdi,rdi
   140007219:	setne  al
   14000721c:	add    rsp,0x20
   140007220:	pop    rdi
   140007221:	ret    
   140007222:	int3   
   140007223:	int3   
   140007224:	int3   
   140007225:	int3   
   140007226:	int3   
   140007227:	int3   
   140007228:	int3   
   140007229:	int3   
   14000722a:	int3   
   14000722b:	int3   
   14000722c:	int3   
   14000722d:	int3   
   14000722e:	int3   
   14000722f:	int3   
   140007230:	lock inc DWORD PTR [rcx+0x8]
   140007234:	ret    
   140007235:	int3   
   140007236:	int3   
   140007237:	int3   
   140007238:	int3   
   140007239:	int3   
   14000723a:	int3   
   14000723b:	int3   
   14000723c:	int3   
   14000723d:	int3   
   14000723e:	int3   
   14000723f:	int3   
   140007240:	mov    QWORD PTR [rcx],rdx
   140007243:	mov    QWORD PTR [rcx+0x8],r8
   140007247:	ret    
   140007248:	int3   
   140007249:	int3   
   14000724a:	int3   
   14000724b:	int3   
   14000724c:	int3   
   14000724d:	int3   
   14000724e:	int3   
   14000724f:	int3   
   140007250:	test   rdx,rdx
   140007253:	je     0x14000728a
   140007255:	mov    rax,QWORD PTR [rcx+0x18]
   140007259:	cmp    rax,0x8
   14000725d:	jb     0x140007264
   14000725f:	mov    r8,QWORD PTR [rcx]
   140007262:	jmp    0x140007267
   140007264:	mov    r8,rcx
   140007267:	cmp    rdx,r8
   14000726a:	jb     0x14000728a
   14000726c:	cmp    rax,0x8
   140007270:	jb     0x140007277
   140007272:	mov    r8,QWORD PTR [rcx]
   140007275:	jmp    0x14000727a
   140007277:	mov    r8,rcx
   14000727a:	mov    rax,QWORD PTR [rcx+0x10]
   14000727e:	lea    rcx,[r8+rax*2]
   140007282:	cmp    rcx,rdx
   140007285:	jbe    0x14000728a
   140007287:	mov    al,0x1
   140007289:	ret    
   14000728a:	xor    al,al
   14000728c:	ret    
   14000728d:	int3   
   14000728e:	int3   
   14000728f:	int3   
   140007290:	cmp    QWORD PTR [rcx+0x18],rcx
   140007294:	sete   al
   140007297:	ret    
   140007298:	int3   
   140007299:	int3   
   14000729a:	int3   
   14000729b:	int3   
   14000729c:	int3   
   14000729d:	int3   
   14000729e:	int3   
   14000729f:	int3   
   1400072a0:	rex push rbx
   1400072a2:	sub    rsp,0x20
   1400072a6:	mov    rbx,rcx
   1400072a9:	test   rdx,rdx
   1400072ac:	jne    0x1400072c5
   1400072ae:	lea    ecx,[rdx+0x18]
   1400072b1:	call   0x14000887a
   1400072b6:	mov    rdx,rax
   1400072b9:	test   rax,rax
   1400072bc:	jne    0x1400072c5
   1400072be:	call   QWORD PTR [rip+0x2ebc]        # 0x14000a180
   1400072c4:	int3   
   1400072c5:	lea    rax,[rip+0x3b74]        # 0x14000ae40
   1400072cc:	mov    QWORD PTR [rdx],rax
   1400072cf:	mov    rax,QWORD PTR [rbx+0x8]
   1400072d3:	mov    QWORD PTR [rdx+0x8],rax
   1400072d7:	mov    rax,rdx
   1400072da:	add    rsp,0x20
   1400072de:	pop    rbx
   1400072df:	ret    
   1400072e0:	cmp    QWORD PTR [rcx+0x18],0x8
   1400072e5:	jb     0x1400072eb
   1400072e7:	mov    rax,QWORD PTR [rcx]
   1400072ea:	ret    
   1400072eb:	mov    rax,rcx
   1400072ee:	ret    
   1400072ef:	int3   
   1400072f0:	cmp    QWORD PTR [rcx+0x18],0x8
   1400072f5:	jb     0x1400072fb
   1400072f7:	mov    rax,QWORD PTR [rcx]
   1400072fa:	ret    
   1400072fb:	mov    rax,rcx
   1400072fe:	ret    
   1400072ff:	int3   
   140007300:	mov    QWORD PTR [rsp+0x8],rbx
   140007305:	mov    r10,rcx
   140007308:	lea    r9,[rcx+0x9c8]
   14000730f:	movabs rbx,0xb5026f5aa96619e9
   140007319:	mov    r11d,0x9c
   14000731f:	nop
   140007320:	mov    edx,DWORD PTR [r9+0x8]
   140007324:	lea    r9,[r9+0x8]
   140007328:	xor    edx,DWORD PTR [r9-0x8]
   14000732c:	btr    edx,0x1f
   140007330:	xor    rdx,QWORD PTR [r9-0x8]
   140007334:	movzx  eax,dl
   140007337:	and    al,0x1
   140007339:	neg    al
   14000733b:	sbb    rcx,rcx
   14000733e:	shr    rdx,1
   140007341:	and    rcx,rbx
   140007344:	xor    rcx,QWORD PTR [r9+0x4d8]
   14000734b:	xor    rcx,rdx
   14000734e:	mov    QWORD PTR [r9-0x9c8],rcx
   140007355:	dec    r11
   140007358:	jne    0x140007320
   14000735a:	lea    r9,[r10+0xea8]
   140007361:	mov    r11d,0x9b
   140007367:	nop    WORD PTR [rax+rax*1+0x0]
   140007370:	mov    edx,DWORD PTR [r9+0x8]
   140007374:	lea    r9,[r9+0x8]
   140007378:	xor    edx,DWORD PTR [r9-0x8]
   14000737c:	btr    edx,0x1f
   140007380:	xor    rdx,QWORD PTR [r9-0x8]
   140007384:	movzx  eax,dl
   140007387:	and    al,0x1
   140007389:	neg    al
   14000738b:	sbb    rcx,rcx
   14000738e:	shr    rdx,1
   140007391:	and    rcx,rbx
   140007394:	xor    rcx,QWORD PTR [r9-0xea8]
   14000739b:	xor    rcx,rdx
   14000739e:	mov    QWORD PTR [r9-0x9c8],rcx
   1400073a5:	dec    r11
   1400073a8:	jne    0x140007370
   1400073aa:	mov    edx,DWORD PTR [r10+0x1380]
   1400073b1:	xor    edx,DWORD PTR [r10+0x8]
   1400073b5:	btr    edx,0x1f
   1400073b9:	xor    rdx,QWORD PTR [r10+0x1380]
   1400073c0:	movzx  eax,dl
   1400073c3:	and    al,0x1
   1400073c5:	neg    al
   1400073c7:	sbb    rcx,rcx
   1400073ca:	shr    rdx,1
   1400073cd:	and    rcx,rbx
   1400073d0:	mov    rbx,QWORD PTR [rsp+0x8]
   1400073d5:	xor    rcx,QWORD PTR [r10+0x4e0]
   1400073dc:	xor    rcx,rdx
   1400073df:	mov    QWORD PTR [r10+0x9c0],rcx
   1400073e6:	mov    DWORD PTR [r10],r11d
   1400073e9:	ret    
   1400073ea:	int3   
   1400073eb:	int3   
   1400073ec:	int3   
   1400073ed:	int3   
   1400073ee:	int3   
   1400073ef:	int3   
   1400073f0:	lea    rax,[rcx+0x10]
   1400073f4:	mov    r9d,0x138
   1400073fa:	movabs r10,0xb5026f5aa96619e9
   140007404:	mov    r8d,DWORD PTR [rax-0x8]
   140007408:	lea    rax,[rax+0x8]
   14000740c:	xor    r8d,DWORD PTR [rax-0x8]
   140007410:	btr    r8d,0x1f
   140007415:	xor    r8,QWORD PTR [rax-0x10]
   140007419:	movzx  ecx,r8b
   14000741d:	and    cl,0x1
   140007420:	neg    cl
   140007422:	sbb    rdx,rdx
   140007425:	shr    r8,1
   140007428:	and    rdx,r10
   14000742b:	xor    rdx,QWORD PTR [rax+0x4d0]
   140007432:	xor    rdx,r8
   140007435:	mov    QWORD PTR [rax+0x9b0],rdx
   14000743c:	dec    r9
   14000743f:	jne    0x140007404
   140007441:	ret    
   140007442:	int3   
   140007443:	int3   
   140007444:	int3   
   140007445:	int3   
   140007446:	int3   
   140007447:	int3   
   140007448:	int3   
   140007449:	int3   
   14000744a:	int3   
   14000744b:	int3   
   14000744c:	int3   
   14000744d:	int3   
   14000744e:	int3   
   14000744f:	int3   
   140007450:	mov    QWORD PTR [rsp+0x10],rbx
   140007455:	mov    QWORD PTR [rsp+0x18],rbp
   14000745a:	mov    QWORD PTR [rsp+0x20],rsi
   14000745f:	push   rdi
   140007460:	sub    rsp,0x20
   140007464:	mov    rdi,QWORD PTR [rcx+0x8]
   140007468:	mov    rsi,r8
   14000746b:	mov    rbp,rdx
   14000746e:	mov    rbx,rcx
   140007471:	test   rdi,rdi
   140007474:	je     0x1400074c2
   140007476:	lock dec DWORD PTR [rdi+0x8]
   14000747a:	mov    QWORD PTR [rsp+0x30],r14
   14000747f:	jne    0x1400074b9
   140007481:	mov    rax,QWORD PTR [rdi]
   140007484:	mov    rcx,rdi
   140007487:	call   QWORD PTR [rax]
   140007489:	lock dec DWORD PTR [rdi+0xc]
   14000748d:	jne    0x140007498
   14000748f:	mov    rax,QWORD PTR [rdi]
   140007492:	mov    rcx,rdi
   140007495:	call   QWORD PTR [rax+0x8]
   140007498:	mov    QWORD PTR [rbx+0x8],rsi
   14000749c:	mov    QWORD PTR [rbx],rbp
   14000749f:	mov    r14,QWORD PTR [rsp+0x30]
   1400074a4:	mov    rbx,QWORD PTR [rsp+0x38]
   1400074a9:	mov    rbp,QWORD PTR [rsp+0x40]
   1400074ae:	mov    rsi,QWORD PTR [rsp+0x48]
   1400074b3:	add    rsp,0x20
   1400074b7:	pop    rdi
   1400074b8:	ret    
   1400074b9:	mov    QWORD PTR [rcx+0x8],r8
   1400074bd:	mov    QWORD PTR [rcx],rdx
   1400074c0:	jmp    0x14000749f
   1400074c2:	mov    QWORD PTR [rcx+0x8],r8
   1400074c6:	mov    QWORD PTR [rcx],rdx
   1400074c9:	jmp    0x1400074a4
   1400074cb:	int3   
   1400074cc:	int3   
   1400074cd:	int3   
   1400074ce:	int3   
   1400074cf:	int3   
   1400074d0:	test   r8,r8
   1400074d3:	je     0x1400074da
   1400074d5:	lock inc DWORD PTR [r8+0x8]
   1400074da:	jmp    0x140007450
   1400074df:	int3   
   1400074e0:	mov    QWORD PTR [rcx+0x18],rdx
   1400074e4:	ret    
   1400074e5:	int3   
   1400074e6:	int3   
   1400074e7:	int3   
   1400074e8:	int3   
   1400074e9:	int3   
   1400074ea:	int3   
   1400074eb:	int3   
   1400074ec:	int3   
   1400074ed:	int3   
   1400074ee:	int3   
   1400074ef:	int3   
   1400074f0:	lea    rax,[rip+0x7f69]        # 0x14000f460
   1400074f7:	ret    
   1400074f8:	int3   
   1400074f9:	int3   
   1400074fa:	int3   
   1400074fb:	int3   
   1400074fc:	int3   
   1400074fd:	int3   
   1400074fe:	int3   
   1400074ff:	int3   
   140007500:	rex push rbx
   140007502:	sub    rsp,0x20
   140007506:	mov    rbx,rcx
   140007509:	mov    rcx,QWORD PTR [rcx+0x18]
   14000750d:	test   rcx,rcx
   140007510:	je     0x140007526
   140007512:	mov    rax,QWORD PTR [rcx]
   140007515:	cmp    rcx,rbx
   140007518:	setne  dl
   14000751b:	call   QWORD PTR [rax+0x20]
   14000751e:	mov    QWORD PTR [rbx+0x18],0x0
   140007526:	add    rsp,0x20
   14000752a:	pop    rbx
   14000752b:	ret    
   14000752c:	int3   
   14000752d:	int3   
   14000752e:	int3   
   14000752f:	int3   
   140007530:	mov    QWORD PTR [rsp+0x10],rbx
   140007535:	push   rdi
   140007536:	sub    rsp,0x20
   14000753a:	mov    rdi,r8
   14000753d:	mov    rbx,rcx
   140007540:	test   dl,dl
   140007542:	je     0x140007570
   140007544:	cmp    QWORD PTR [rcx+0x18],0x8
   140007549:	jb     0x140007570
   14000754b:	mov    QWORD PTR [rsp+0x30],rsi
   140007550:	mov    rsi,QWORD PTR [rcx]
   140007553:	test   r8,r8
   140007556:	je     0x140007563
   140007558:	add    r8,r8
   14000755b:	mov    rdx,rsi
   14000755e:	call   0x1400089c4
   140007563:	mov    rcx,rsi
   140007566:	call   0x140008880
   14000756b:	mov    rsi,QWORD PTR [rsp+0x30]
   140007570:	mov    QWORD PTR [rbx+0x18],0x7
   140007578:	mov    QWORD PTR [rbx+0x10],rdi
   14000757c:	xor    eax,eax
   14000757e:	mov    WORD PTR [rbx+rdi*2],ax
   140007582:	mov    rbx,QWORD PTR [rsp+0x38]
   140007587:	add    rsp,0x20
   14000758b:	pop    rdi
   14000758c:	ret    
   14000758d:	int3   
   14000758e:	int3   
   14000758f:	int3   
   140007590:	mov    rax,QWORD PTR [rcx]
   140007593:	ret    
   140007594:	int3   
   140007595:	int3   
   140007596:	int3   
   140007597:	int3   
   140007598:	int3   
   140007599:	int3   
   14000759a:	int3   
   14000759b:	int3   
   14000759c:	int3   
   14000759d:	int3   
   14000759e:	int3   
   14000759f:	int3   
   1400075a0:	sub    rsp,0x28
   1400075a4:	lea    rcx,[rip+0x3295]        # 0x14000a840
   1400075ab:	call   QWORD PTR [rip+0x2bd7]        # 0x14000a188
   1400075b1:	int3   
   1400075b2:	int3   
   1400075b3:	int3   
   1400075b4:	int3   
   1400075b5:	int3   
   1400075b6:	int3   
   1400075b7:	int3   
   1400075b8:	int3   
   1400075b9:	int3   
   1400075ba:	int3   
   1400075bb:	int3   
   1400075bc:	int3   
   1400075bd:	int3   
   1400075be:	int3   
   1400075bf:	int3   
   1400075c0:	sub    rsp,0x28
   1400075c4:	lea    rcx,[rip+0x3285]        # 0x14000a850
   1400075cb:	call   QWORD PTR [rip+0x2a8f]        # 0x14000a060
   1400075d1:	int3   
   1400075d2:	int3   
   1400075d3:	int3   
   1400075d4:	int3   
   1400075d5:	int3   
   1400075d6:	int3   
   1400075d7:	int3   
   1400075d8:	int3   
   1400075d9:	int3   
   1400075da:	int3   
   1400075db:	int3   
   1400075dc:	int3   
   1400075dd:	int3   
   1400075de:	int3   
   1400075df:	int3   
   1400075e0:	sub    rsp,0x28
   1400075e4:	xor    eax,eax
   1400075e6:	test   rdx,rdx
   1400075e9:	je     0x14000760f
   1400075eb:	movabs rax,0x7fffffffffffffff
   1400075f5:	cmp    rdx,rax
   1400075f8:	ja     0x140007608
   1400075fa:	lea    rcx,[rdx+rdx*1]
   1400075fe:	call   0x14000887a
   140007603:	test   rax,rax
   140007606:	jne    0x14000760f
   140007608:	call   QWORD PTR [rip+0x2b72]        # 0x14000a180
   14000760e:	int3   
   14000760f:	add    rsp,0x28
   140007613:	ret    
   140007614:	int3   
   140007615:	int3   
   140007616:	int3   
   140007617:	int3   
   140007618:	int3   
   140007619:	int3   
   14000761a:	int3   
   14000761b:	int3   
   14000761c:	int3   
   14000761d:	int3   
   14000761e:	int3   
   14000761f:	int3   
   140007620:	sub    rsp,0x28
   140007624:	xor    eax,eax
   140007626:	test   rdx,rdx
   140007629:	je     0x140007653
   14000762b:	movabs rax,0xaaaaaaaaaaaaaaa
   140007635:	cmp    rdx,rax
   140007638:	ja     0x14000764c
   14000763a:	lea    rcx,[rdx+rdx*2]
   14000763e:	shl    rcx,0x3
   140007642:	call   0x14000887a
   140007647:	test   rax,rax
   14000764a:	jne    0x140007653
   14000764c:	call   QWORD PTR [rip+0x2b2e]        # 0x14000a180
   140007652:	int3   
   140007653:	add    rsp,0x28
   140007657:	ret    
   140007658:	int3   
   140007659:	int3   
   14000765a:	int3   
   14000765b:	int3   
   14000765c:	int3   
   14000765d:	int3   
   14000765e:	int3   
   14000765f:	int3   
   140007660:	sub    rsp,0x28
   140007664:	xor    eax,eax
   140007666:	test   rdx,rdx
   140007669:	je     0x14000768f
   14000766b:	movabs rax,0x7fffffffffffffff
   140007675:	cmp    rdx,rax
   140007678:	ja     0x140007688
   14000767a:	lea    rcx,[rdx+rdx*1]
   14000767e:	call   0x14000887a
   140007683:	test   rax,rax
   140007686:	jne    0x14000768f
   140007688:	call   QWORD PTR [rip+0x2af2]        # 0x14000a180
   14000768e:	int3   
   14000768f:	add    rsp,0x28
   140007693:	ret    
   140007694:	int3   
   140007695:	int3   
   140007696:	int3   
   140007697:	int3   
   140007698:	int3   
   140007699:	int3   
   14000769a:	int3   
   14000769b:	int3   
   14000769c:	int3   
   14000769d:	int3   
   14000769e:	int3   
   14000769f:	int3   
   1400076a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400076a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400076aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400076af:	push   rdi
   1400076b0:	sub    rsp,0x20
   1400076b4:	mov    rdi,QWORD PTR [rdx+0x10]
   1400076b8:	mov    rbp,r8
   1400076bb:	mov    rsi,rdx
   1400076be:	mov    rbx,rcx
   1400076c1:	cmp    rdi,r8
   1400076c4:	jae    0x1400076d4
   1400076c6:	lea    rcx,[rip+0x3183]        # 0x14000a850
   1400076cd:	call   QWORD PTR [rip+0x298d]        # 0x14000a060
   1400076d3:	int3   
   1400076d4:	sub    rdi,r8
   1400076d7:	cmp    r9,rdi
   1400076da:	cmovb  rdi,r9
   1400076de:	cmp    rcx,rdx
   1400076e1:	jne    0x140007723
   1400076e3:	lea    rcx,[rdi+r8*1]
   1400076e7:	cmp    QWORD PTR [rbx+0x10],rcx
   1400076eb:	jae    0x1400076fb
   1400076ed:	lea    rcx,[rip+0x315c]        # 0x14000a850
   1400076f4:	call   QWORD PTR [rip+0x2966]        # 0x14000a060
   1400076fa:	int3   
   1400076fb:	cmp    QWORD PTR [rbx+0x18],0x8
   140007700:	mov    QWORD PTR [rbx+0x10],rcx
   140007704:	jb     0x14000770b
   140007706:	mov    rdx,QWORD PTR [rbx]
   140007709:	jmp    0x14000770e
   14000770b:	mov    rdx,rbx
   14000770e:	xor    eax,eax
   140007710:	mov    WORD PTR [rdx+rcx*2],ax
   140007714:	xor    edx,edx
   140007716:	mov    rcx,rbx
   140007719:	call   0x140007c80
   14000771e:	jmp    0x1400077c2
   140007723:	movabs rax,0x7ffffffffffffffe
   14000772d:	cmp    rdi,rax
   140007730:	jbe    0x140007740
   140007732:	lea    rcx,[rip+0x3107]        # 0x14000a840
   140007739:	call   QWORD PTR [rip+0x2a49]        # 0x14000a188
   14000773f:	int3   
   140007740:	mov    rcx,QWORD PTR [rcx+0x18]
   140007744:	cmp    rcx,rdi
   140007747:	jae    0x140007773
   140007749:	mov    r8,QWORD PTR [rbx+0x10]
   14000774d:	mov    rdx,rdi
   140007750:	mov    rcx,rbx
   140007753:	call   0x140006d80
   140007758:	test   rdi,rdi
   14000775b:	je     0x1400077c2
   14000775d:	cmp    QWORD PTR [rsi+0x18],0x8
   140007762:	jb     0x140007767
   140007764:	mov    rsi,QWORD PTR [rsi]
   140007767:	cmp    QWORD PTR [rbx+0x18],0x8
   14000776c:	jb     0x140007794
   14000776e:	mov    rcx,QWORD PTR [rbx]
   140007771:	jmp    0x140007797
   140007773:	test   rdi,rdi
   140007776:	jne    0x14000775d
   140007778:	xor    eax,eax
   14000777a:	mov    QWORD PTR [rbx+0x10],rax
   14000777e:	cmp    rcx,0x8
   140007782:	jb     0x14000778c
   140007784:	mov    rcx,QWORD PTR [rbx]
   140007787:	mov    WORD PTR [rcx],ax
   14000778a:	jmp    0x1400077c2
   14000778c:	mov    rcx,rbx
   14000778f:	mov    WORD PTR [rbx],ax
   140007792:	jmp    0x1400077c2
   140007794:	mov    rcx,rbx
   140007797:	test   rdi,rdi
   14000779a:	je     0x1400077a9
   14000779c:	lea    r8,[rdi+rdi*1]
   1400077a0:	lea    rdx,[rsi+rbp*2]
   1400077a4:	call   0x1400089c4
   1400077a9:	cmp    QWORD PTR [rbx+0x18],0x8
   1400077ae:	mov    QWORD PTR [rbx+0x10],rdi
   1400077b2:	jb     0x1400077b9
   1400077b4:	mov    rcx,QWORD PTR [rbx]
   1400077b7:	jmp    0x1400077bc
   1400077b9:	mov    rcx,rbx
   1400077bc:	xor    eax,eax
   1400077be:	mov    WORD PTR [rcx+rdi*2],ax
   1400077c2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400077c7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400077cc:	mov    rax,rbx
   1400077cf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400077d4:	add    rsp,0x20
   1400077d8:	pop    rdi
   1400077d9:	ret    
   1400077da:	int3   
   1400077db:	int3   
   1400077dc:	int3   
   1400077dd:	int3   
   1400077de:	int3   
   1400077df:	int3   
   1400077e0:	cmp    WORD PTR [rdx],0x0
   1400077e4:	jne    0x1400077ee
   1400077e6:	xor    r8d,r8d
   1400077e9:	jmp    0x140007810
   1400077ee:	or     r8,0xffffffffffffffff
   1400077f2:	inc    r8
   1400077f5:	cmp    WORD PTR [rdx+r8*2],0x0
   1400077fb:	jne    0x1400077f2
   1400077fd:	jmp    0x140007810
   140007802:	int3   
   140007803:	int3   
   140007804:	int3   
   140007805:	int3   
   140007806:	int3   
   140007807:	int3   
   140007808:	int3   
   140007809:	int3   
   14000780a:	int3   
   14000780b:	int3   
   14000780c:	int3   
   14000780d:	int3   
   14000780e:	int3   
   14000780f:	int3   
   140007810:	mov    QWORD PTR [rsp+0x8],rbx
   140007815:	mov    QWORD PTR [rsp+0x10],rsi
   14000781a:	push   rdi
   14000781b:	sub    rsp,0x20
   14000781f:	mov    rdi,r8
   140007822:	mov    rsi,rdx
   140007825:	mov    rbx,rcx
   140007828:	test   rdx,rdx
   14000782b:	je     0x14000788e
   14000782d:	mov    rdx,QWORD PTR [rcx+0x18]
   140007831:	cmp    rdx,0x8
   140007835:	jb     0x14000783c
   140007837:	mov    rax,QWORD PTR [rcx]
   14000783a:	jmp    0x14000783f
   14000783c:	mov    rax,rcx
   14000783f:	cmp    rsi,rax
   140007842:	jb     0x14000788e
   140007844:	cmp    rdx,0x8
   140007848:	jb     0x14000784d
   14000784a:	mov    rcx,QWORD PTR [rcx]
   14000784d:	mov    rax,QWORD PTR [rbx+0x10]
   140007851:	lea    rcx,[rcx+rax*2]
   140007855:	cmp    rcx,rsi
   140007858:	jbe    0x14000788e
   14000785a:	cmp    rdx,0x8
   14000785e:	jb     0x140007865
   140007860:	mov    rax,QWORD PTR [rbx]
   140007863:	jmp    0x140007868
   140007865:	mov    rax,rbx
   140007868:	sub    rsi,rax
   14000786b:	mov    r9,r8
   14000786e:	mov    rdx,rbx
   140007871:	sar    rsi,1
   140007874:	mov    rcx,rbx
   140007877:	mov    r8,rsi
   14000787a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000787f:	mov    rsi,QWORD PTR [rsp+0x38]
   140007884:	add    rsp,0x20
   140007888:	pop    rdi
   140007889:	jmp    0x1400076a0
   14000788e:	movabs rax,0x7ffffffffffffffe
   140007898:	cmp    r8,rax
   14000789b:	jbe    0x1400078ab
   14000789d:	lea    rcx,[rip+0x2f9c]        # 0x14000a840
   1400078a4:	call   QWORD PTR [rip+0x28de]        # 0x14000a188
   1400078aa:	int3   
   1400078ab:	mov    rcx,QWORD PTR [rbx+0x18]
   1400078af:	cmp    rcx,r8
   1400078b2:	jae    0x1400078d4
   1400078b4:	mov    r8,QWORD PTR [rbx+0x10]
   1400078b8:	mov    rdx,rdi
   1400078bb:	mov    rcx,rbx
   1400078be:	call   0x140006d80
   1400078c3:	test   rdi,rdi
   1400078c6:	je     0x140007944
   1400078c8:	cmp    QWORD PTR [rbx+0x18],0x8
   1400078cd:	jb     0x140007917
   1400078cf:	mov    rcx,QWORD PTR [rbx]
   1400078d2:	jmp    0x14000791a
   1400078d4:	test   r8,r8
   1400078d7:	jne    0x1400078c3
   1400078d9:	xor    eax,eax
   1400078db:	mov    QWORD PTR [rbx+0x10],rax
   1400078df:	cmp    rcx,0x8
   1400078e3:	jb     0x1400078fe
   1400078e5:	mov    rcx,QWORD PTR [rbx]
   1400078e8:	mov    WORD PTR [rcx],ax
   1400078eb:	mov    rax,rbx
   1400078ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400078f3:	mov    rsi,QWORD PTR [rsp+0x38]
   1400078f8:	add    rsp,0x20
   1400078fc:	pop    rdi
   1400078fd:	ret    
   1400078fe:	mov    WORD PTR [rbx],ax
   140007901:	mov    rcx,rbx
   140007904:	mov    rax,rbx
   140007907:	mov    rbx,QWORD PTR [rsp+0x30]
   14000790c:	mov    rsi,QWORD PTR [rsp+0x38]
   140007911:	add    rsp,0x20
   140007915:	pop    rdi
   140007916:	ret    
   140007917:	mov    rcx,rbx
   14000791a:	test   rdi,rdi
   14000791d:	je     0x14000792b
   14000791f:	lea    r8,[rdi+rdi*1]
   140007923:	mov    rdx,rsi
   140007926:	call   0x1400089c4
   14000792b:	cmp    QWORD PTR [rbx+0x18],0x8
   140007930:	mov    QWORD PTR [rbx+0x10],rdi
   140007934:	jb     0x14000793b
   140007936:	mov    rcx,QWORD PTR [rbx]
   140007939:	jmp    0x14000793e
   14000793b:	mov    rcx,rbx
   14000793e:	xor    eax,eax
   140007940:	mov    WORD PTR [rcx+rdi*2],ax
   140007944:	mov    rsi,QWORD PTR [rsp+0x38]
   140007949:	mov    rax,rbx
   14000794c:	mov    rbx,QWORD PTR [rsp+0x30]
   140007951:	add    rsp,0x20
   140007955:	pop    rdi
   140007956:	ret    
   140007957:	int3   
   140007958:	int3   
   140007959:	int3   
   14000795a:	int3   
   14000795b:	int3   
   14000795c:	int3   
   14000795d:	int3   
   14000795e:	int3   
   14000795f:	int3   
   140007960:	movzx  eax,WORD PTR [rdx]
   140007963:	mov    WORD PTR [rcx],ax
   140007966:	ret    
   140007967:	int3   
   140007968:	int3   
   140007969:	int3   
   14000796a:	int3   
   14000796b:	int3   
   14000796c:	int3   
   14000796d:	int3   
   14000796e:	int3   
   14000796f:	int3   
   140007970:	mov    QWORD PTR [rdx],rcx
   140007973:	mov    rax,rdx
   140007976:	ret    
   140007977:	int3   
   140007978:	int3   
   140007979:	int3   
   14000797a:	int3   
   14000797b:	int3   
   14000797c:	int3   
   14000797d:	int3   
   14000797e:	int3   
   14000797f:	int3   
   140007980:	cmp    QWORD PTR [rcx+0x18],0x10
   140007985:	jb     0x140007991
   140007987:	mov    rax,QWORD PTR [rcx]
   14000798a:	mov    QWORD PTR [rdx],rax
   14000798d:	mov    rax,rdx
   140007990:	ret    
   140007991:	mov    QWORD PTR [rdx],rcx
   140007994:	mov    rax,rdx
   140007997:	ret    
   140007998:	int3   
   140007999:	int3   
   14000799a:	int3   
   14000799b:	int3   
   14000799c:	int3   
   14000799d:	int3   
   14000799e:	int3   
   14000799f:	int3   
   1400079a0:	mov    QWORD PTR [rdx],rcx
   1400079a3:	mov    rax,rdx
   1400079a6:	ret    
   1400079a7:	int3   
   1400079a8:	int3   
   1400079a9:	int3   
   1400079aa:	int3   
   1400079ab:	int3   
   1400079ac:	int3   
   1400079ad:	int3   
   1400079ae:	int3   
   1400079af:	int3   
   1400079b0:	cmp    QWORD PTR [rcx+0x18],0x10
   1400079b5:	jb     0x1400079c1
   1400079b7:	mov    rax,QWORD PTR [rcx]
   1400079ba:	mov    QWORD PTR [rdx],rax
   1400079bd:	mov    rax,rdx
   1400079c0:	ret    
   1400079c1:	mov    QWORD PTR [rdx],rcx
   1400079c4:	mov    rax,rdx
   1400079c7:	ret    
   1400079c8:	int3   
   1400079c9:	int3   
   1400079ca:	int3   
   1400079cb:	int3   
   1400079cc:	int3   
   1400079cd:	int3   
   1400079ce:	int3   
   1400079cf:	int3   
   1400079d0:	lea    rax,[rcx+0x4]
   1400079d4:	mov    QWORD PTR [rdx],rax
   1400079d7:	mov    rax,rdx
   1400079da:	ret    
   1400079db:	int3   
   1400079dc:	int3   
   1400079dd:	int3   
   1400079de:	int3   
   1400079df:	int3   
   1400079e0:	cmp    QWORD PTR [rcx+0x18],0x10
   1400079e5:	jb     0x1400079f8
   1400079e7:	mov    r8,QWORD PTR [rcx]
   1400079ea:	mov    rcx,QWORD PTR [rcx+0x10]
   1400079ee:	mov    rax,rdx
   1400079f1:	add    rcx,r8
   1400079f4:	mov    QWORD PTR [rdx],rcx
   1400079f7:	ret    
   1400079f8:	mov    r8,rcx
   1400079fb:	mov    rcx,QWORD PTR [rcx+0x10]
   1400079ff:	mov    rax,rdx
   140007a02:	add    rcx,r8
   140007a05:	mov    QWORD PTR [rdx],rcx
   140007a08:	ret    
   140007a09:	int3   
   140007a0a:	int3   
   140007a0b:	int3   
   140007a0c:	int3   
   140007a0d:	int3   
   140007a0e:	int3   
   140007a0f:	int3   
   140007a10:	rex push rbx
   140007a12:	sub    rsp,0x20
   140007a16:	mov    rbx,rcx
   140007a19:	test   r8,r8
   140007a1c:	je     0x140007a26
   140007a1e:	add    r8,r8
   140007a21:	call   0x1400089c4
   140007a26:	mov    rax,rbx
   140007a29:	add    rsp,0x20
   140007a2d:	pop    rbx
   140007a2e:	ret    
   140007a2f:	int3   
   140007a30:	mov    rcx,rdx
   140007a33:	jmp    0x140008880
   140007a38:	int3   
   140007a39:	int3   
   140007a3a:	int3   
   140007a3b:	int3   
   140007a3c:	int3   
   140007a3d:	int3   
   140007a3e:	int3   
   140007a3f:	int3   
   140007a40:	mov    rcx,rdx
   140007a43:	jmp    0x140008880
   140007a48:	int3   
   140007a49:	int3   
   140007a4a:	int3   
   140007a4b:	int3   
   140007a4c:	int3   
   140007a4d:	int3   
   140007a4e:	int3   
   140007a4f:	int3   
   140007a50:	mov    rcx,rdx
   140007a53:	jmp    0x140008880
   140007a58:	int3   
   140007a59:	int3   
   140007a5a:	int3   
   140007a5b:	int3   
   140007a5c:	int3   
   140007a5d:	int3   
   140007a5e:	int3   
   140007a5f:	int3   
   140007a60:	test   rdx,rdx
   140007a63:	je     0x140007b07
   140007a69:	mov    QWORD PTR [rsp+0x10],rbx
   140007a6e:	push   rdi
   140007a6f:	sub    rsp,0x20
   140007a73:	mov    QWORD PTR [rsp+0x30],rsi
   140007a78:	mov    rdi,rdx
   140007a7b:	mov    rbx,rcx
   140007a7e:	movabs rsi,0xb5026f5aa96619e9
   140007a88:	nop    DWORD PTR [rax+rax*1+0x0]
   140007a90:	mov    eax,DWORD PTR [rbx]
   140007a92:	cmp    eax,0x138
   140007a97:	jne    0x140007ae2
   140007a99:	lea    rax,[rbx+0x10]
   140007a9d:	mov    r9d,0x138
   140007aa3:	mov    r8d,DWORD PTR [rax-0x8]
   140007aa7:	lea    rax,[rax+0x8]
   140007aab:	xor    r8d,DWORD PTR [rax-0x8]
   140007aaf:	btr    r8d,0x1f
   140007ab4:	xor    r8,QWORD PTR [rax-0x10]
   140007ab8:	movzx  ecx,r8b
   140007abc:	and    cl,0x1
   140007abf:	neg    cl
   140007ac1:	sbb    rdx,rdx
   140007ac4:	shr    r8,1
   140007ac7:	and    rdx,rsi
   140007aca:	xor    rdx,QWORD PTR [rax+0x4d0]
   140007ad1:	xor    rdx,r8
   140007ad4:	mov    QWORD PTR [rax+0x9b0],rdx
   140007adb:	dec    r9
   140007ade:	jne    0x140007aa3
   140007ae0:	jmp    0x140007af1
   140007ae2:	cmp    eax,0x270
   140007ae7:	jb     0x140007af1
   140007ae9:	mov    rcx,rbx
   140007aec:	call   0x140007300
   140007af1:	inc    DWORD PTR [rbx]
   140007af3:	dec    rdi
   140007af6:	jne    0x140007a90
   140007af8:	mov    rsi,QWORD PTR [rsp+0x30]
   140007afd:	mov    rbx,QWORD PTR [rsp+0x38]
   140007b02:	add    rsp,0x20
   140007b06:	pop    rdi
   140007b07:	ret    
   140007b08:	int3   
   140007b09:	int3   
   140007b0a:	int3   
   140007b0b:	int3   
   140007b0c:	int3   
   140007b0d:	int3   
   140007b0e:	int3   
   140007b0f:	int3   
   140007b10:	mov    QWORD PTR [rsp+0x18],rbx
   140007b15:	mov    QWORD PTR [rsp+0x20],rsi
   140007b1a:	push   rdi
   140007b1b:	sub    rsp,0x30
   140007b1f:	mov    r9,QWORD PTR [rdx+0x10]
   140007b23:	xor    esi,esi
   140007b25:	mov    rbx,rdx
   140007b28:	lea    rax,[r9-0x1]
   140007b2c:	mov    rdi,rcx
   140007b2f:	mov    DWORD PTR [rsp+0x20],esi
   140007b33:	cmp    r8,rax
   140007b36:	jbe    0x140007b42
   140007b38:	call   0x140001930
   140007b3d:	jmp    0x140007c01
   140007b42:	mov    rdx,QWORD PTR [rdx+0x18]
   140007b46:	mov    rax,r8
   140007b49:	mov    QWORD PTR [rsp+0x40],rbp
   140007b4e:	and    eax,0x3
   140007b51:	lea    rbp,[rip+0x3218]        # 0x14000ad70
   140007b58:	add    rax,rbp
   140007b5b:	mov    QWORD PTR [rsp+0x48],rax
   140007b60:	cmp    rdx,0x10
   140007b64:	jb     0x140007b6b
   140007b66:	mov    rcx,QWORD PTR [rbx]
   140007b69:	jmp    0x140007b6e
   140007b6b:	mov    rcx,rbx
   140007b6e:	lea    r10,[rcx+r8*1]
   140007b72:	cmp    rdx,0x10
   140007b76:	jb     0x140007b7d
   140007b78:	mov    rcx,QWORD PTR [rbx]
   140007b7b:	jmp    0x140007b80
   140007b7d:	mov    rcx,rbx
   140007b80:	add    rcx,r9
   140007b83:	cmp    rdx,0x10
   140007b87:	jb     0x140007b8e
   140007b89:	mov    rdx,QWORD PTR [rbx]
   140007b8c:	jmp    0x140007b91
   140007b8e:	mov    rdx,rbx
   140007b91:	add    rdx,r8
   140007b94:	cmp    rdx,rcx
   140007b97:	je     0x140007bf1
   140007b99:	mov    r9,rcx
   140007b9c:	sub    r9,rdx
   140007b9f:	cmp    rdx,rcx
   140007ba2:	cmova  r9,rsi
   140007ba6:	test   r9,r9
   140007ba9:	je     0x140007bf1
   140007bab:	mov    r8,rsi
   140007bae:	lea    r11,[rip+0x31bf]        # 0x14000ad74
   140007bb5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007bc0:	cmp    r11,rax
   140007bc3:	mov    rcx,rbp
   140007bc6:	cmovne rcx,rax
   140007bca:	inc    r8
   140007bcd:	mov    rax,rcx
   140007bd0:	inc    rcx
   140007bd3:	mov    QWORD PTR [rsp+0x48],rcx
   140007bd8:	movzx  ecx,BYTE PTR [r8+rdx*1-0x1]
   140007bde:	xor    cl,BYTE PTR [rax]
   140007be0:	mov    BYTE PTR [r8+r10*1-0x1],cl
   140007be5:	cmp    r8,r9
   140007be8:	je     0x140007bf1
   140007bea:	mov    rax,QWORD PTR [rsp+0x48]
   140007bef:	jmp    0x140007bc0
   140007bf1:	mov    rdx,rbx
   140007bf4:	mov    rcx,rdi
   140007bf7:	call   0x140001930
   140007bfc:	mov    rbp,QWORD PTR [rsp+0x40]
   140007c01:	cmp    QWORD PTR [rbx+0x18],0x10
   140007c06:	jb     0x140007c10
   140007c08:	mov    rcx,QWORD PTR [rbx]
   140007c0b:	call   0x140008880
   140007c10:	mov    QWORD PTR [rbx+0x10],rsi
   140007c14:	mov    QWORD PTR [rbx+0x18],0xf
   140007c1c:	mov    BYTE PTR [rbx],sil
   140007c1f:	mov    rbx,QWORD PTR [rsp+0x50]
   140007c24:	mov    rsi,QWORD PTR [rsp+0x58]
   140007c29:	mov    rax,rdi
   140007c2c:	add    rsp,0x30
   140007c30:	pop    rdi
   140007c31:	ret    
   140007c32:	int3   
   140007c33:	int3   
   140007c34:	int3   
   140007c35:	int3   
   140007c36:	int3   
   140007c37:	int3   
   140007c38:	int3   
   140007c39:	int3   
   140007c3a:	int3   
   140007c3b:	int3   
   140007c3c:	int3   
   140007c3d:	int3   
   140007c3e:	int3   
   140007c3f:	int3   
   140007c40:	lea    rax,[rcx+0x4]
   140007c44:	mov    QWORD PTR [rdx],rax
   140007c47:	mov    rax,rdx
   140007c4a:	ret    
   140007c4b:	int3   
   140007c4c:	int3   
   140007c4d:	int3   
   140007c4e:	int3   
   140007c4f:	int3   
   140007c50:	cmp    QWORD PTR [rcx+0x18],0x10
   140007c55:	jb     0x140007c68
   140007c57:	mov    r8,QWORD PTR [rcx]
   140007c5a:	mov    rcx,QWORD PTR [rcx+0x10]
   140007c5e:	mov    rax,rdx
   140007c61:	add    rcx,r8
   140007c64:	mov    QWORD PTR [rdx],rcx
   140007c67:	ret    
   140007c68:	mov    r8,rcx
   140007c6b:	mov    rcx,QWORD PTR [rcx+0x10]
   140007c6f:	mov    rax,rdx
   140007c72:	add    rcx,r8
   140007c75:	mov    QWORD PTR [rdx],rcx
   140007c78:	ret    
   140007c79:	int3   
   140007c7a:	int3   
   140007c7b:	int3   
   140007c7c:	int3   
   140007c7d:	int3   
   140007c7e:	int3   
   140007c7f:	int3   
   140007c80:	mov    QWORD PTR [rsp+0x8],rbx
   140007c85:	push   rdi
   140007c86:	sub    rsp,0x20
   140007c8a:	mov    rdi,QWORD PTR [rcx+0x10]
   140007c8e:	mov    r9,r8
   140007c91:	mov    rbx,rcx
   140007c94:	cmp    rdi,rdx
   140007c97:	jae    0x140007ca7
   140007c99:	lea    rcx,[rip+0x2bb0]        # 0x14000a850
   140007ca0:	call   QWORD PTR [rip+0x23ba]        # 0x14000a060
   140007ca6:	int3   
   140007ca7:	mov    rax,rdi
   140007caa:	sub    rax,rdx
   140007cad:	cmp    rax,r8
   140007cb0:	ja     0x140007cd4
   140007cb2:	cmp    QWORD PTR [rcx+0x18],0x8
   140007cb7:	mov    QWORD PTR [rcx+0x10],rdx
   140007cbb:	jb     0x140007cc0
   140007cbd:	mov    rcx,QWORD PTR [rcx]
   140007cc0:	xor    eax,eax
   140007cc2:	mov    WORD PTR [rcx+rdx*2],ax
   140007cc6:	mov    rax,rbx
   140007cc9:	mov    rbx,QWORD PTR [rsp+0x30]
   140007cce:	add    rsp,0x20
   140007cd2:	pop    rdi
   140007cd3:	ret    
   140007cd4:	test   r8,r8
   140007cd7:	je     0x140007d1d
   140007cd9:	cmp    QWORD PTR [rcx+0x18],0x8
   140007cde:	jb     0x140007ce5
   140007ce0:	mov    rax,QWORD PTR [rcx]
   140007ce3:	jmp    0x140007ce8
   140007ce5:	mov    rax,rcx
   140007ce8:	sub    rdi,r8
   140007ceb:	lea    rcx,[rax+rdx*2]
   140007cef:	mov    r8,rdi
   140007cf2:	sub    r8,rdx
   140007cf5:	je     0x140007d04
   140007cf7:	lea    rdx,[rcx+r9*2]
   140007cfb:	add    r8,r8
   140007cfe:	call   QWORD PTR [rip+0x249c]        # 0x14000a1a0
   140007d04:	cmp    QWORD PTR [rbx+0x18],0x8
   140007d09:	mov    QWORD PTR [rbx+0x10],rdi
   140007d0d:	jb     0x140007d14
   140007d0f:	mov    rcx,QWORD PTR [rbx]
   140007d12:	jmp    0x140007d17
   140007d14:	mov    rcx,rbx
   140007d17:	xor    eax,eax
   140007d19:	mov    WORD PTR [rcx+rdi*2],ax
   140007d1d:	mov    rax,rbx
   140007d20:	mov    rbx,QWORD PTR [rsp+0x30]
   140007d25:	add    rsp,0x20
   140007d29:	pop    rdi
   140007d2a:	ret    
   140007d2b:	int3   
   140007d2c:	int3   
   140007d2d:	int3   
   140007d2e:	int3   
   140007d2f:	int3   
   140007d30:	sub    rsp,0x28
   140007d34:	cmp    QWORD PTR [rcx+0x10],rdx
   140007d38:	jae    0x140007d48
   140007d3a:	lea    rcx,[rip+0x2b0f]        # 0x14000a850
   140007d41:	call   QWORD PTR [rip+0x2319]        # 0x14000a060
   140007d47:	int3   
   140007d48:	cmp    QWORD PTR [rcx+0x18],0x8
   140007d4d:	mov    QWORD PTR [rcx+0x10],rdx
   140007d51:	jb     0x140007d66
   140007d53:	mov    rax,QWORD PTR [rcx]
   140007d56:	xor    r8d,r8d
   140007d59:	mov    WORD PTR [rax+rdx*2],r8w
   140007d5e:	mov    rax,rcx
   140007d61:	add    rsp,0x28
   140007d65:	ret    
   140007d66:	xor    r8d,r8d
   140007d69:	mov    rax,rcx
   140007d6c:	mov    WORD PTR [rcx+rdx*2],r8w
   140007d71:	add    rsp,0x28
   140007d75:	ret    
   140007d76:	int3   
   140007d77:	int3   
   140007d78:	int3   
   140007d79:	int3   
   140007d7a:	int3   
   140007d7b:	int3   
   140007d7c:	int3   
   140007d7d:	int3   
   140007d7e:	int3   
   140007d7f:	int3   
   140007d80:	ret    0x0
   140007d83:	int3   
   140007d84:	int3   
   140007d85:	int3   
   140007d86:	int3   
   140007d87:	int3   
   140007d88:	int3   
   140007d89:	int3   
   140007d8a:	int3   
   140007d8b:	int3   
   140007d8c:	int3   
   140007d8d:	int3   
   140007d8e:	int3   
   140007d8f:	int3   
   140007d90:	rex push rbx
   140007d92:	sub    rsp,0x30
   140007d96:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007d9f:	mov    ecx,DWORD PTR [rip+0x7827]        # 0x14000f5cc
   140007da5:	mov    rax,QWORD PTR gs:0x58
   140007dae:	mov    edx,0x8
   140007db3:	mov    rbx,QWORD PTR [rax+rcx*8]
   140007db7:	add    rbx,rdx
   140007dba:	cmp    QWORD PTR [rbx],0x0
   140007dbe:	jne    0x140007de0
   140007dc0:	mov    ecx,0x10
   140007dc5:	call   0x14000887a
   140007dca:	mov    QWORD PTR [rsp+0x40],rax
   140007dcf:	test   rax,rax
   140007dd2:	je     0x140007ddd
   140007dd4:	mov    rcx,rax
   140007dd7:	call   0x140007df0
   140007ddc:	nop
   140007ddd:	mov    QWORD PTR [rbx],rax
   140007de0:	mov    rax,QWORD PTR [rbx]
   140007de3:	add    rsp,0x30
   140007de7:	pop    rbx
   140007de8:	ret    
   140007de9:	int3   
   140007dea:	int3   
   140007deb:	int3   
   140007dec:	int3   
   140007ded:	int3   
   140007dee:	int3   
   140007def:	int3   
   140007df0:	mov    QWORD PTR [rsp+0x8],rcx
   140007df5:	push   rbp
   140007df6:	push   rsi
   140007df7:	push   rdi
   140007df8:	lea    rbp,[rsp-0x1310]
   140007e00:	mov    eax,0x1410
   140007e05:	call   0x140008af0
   140007e0a:	sub    rsp,rax
   140007e0d:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140007e16:	mov    QWORD PTR [rsp+0x1448],rbx
   140007e1e:	mov    rdi,rcx
   140007e21:	mov    DWORD PTR [rsp+0x20],0x0
   140007e29:	call   QWORD PTR [rip+0x2569]        # 0x14000a398
   140007e2f:	mov    ebx,0x1
   140007e34:	mov    DWORD PTR [rsp+0x20],ebx
   140007e38:	cmp    QWORD PTR [rdi],0x0
   140007e3c:	je     0x140007f97
   140007e42:	lea    rax,[rip+0x2ff7]        # 0x14000ae40
   140007e49:	mov    QWORD PTR [rsp+0x28],rax
   140007e4e:	mov    QWORD PTR [rsp+0x30],rdi
   140007e53:	lea    rax,[rsp+0x28]
   140007e58:	mov    QWORD PTR [rsp+0x40],rax
   140007e5d:	lea    rax,[rsp+0x28]
   140007e62:	mov    QWORD PTR [rbp+0x1340],rax
   140007e69:	call   QWORD PTR [rip+0x2421]        # 0x14000a290
   140007e6f:	movsxd rcx,eax
   140007e72:	lea    rax,[rbp+0x1338]
   140007e79:	imul   rcx,rax
   140007e7d:	lea    rax,[rip+0x3cc]        # 0x140008250
   140007e84:	xor    rcx,rax
   140007e87:	mov    QWORD PTR [rbp+0x1338],rcx
   140007e8e:	call   QWORD PTR [rip+0x24fc]        # 0x14000a390
   140007e94:	mov    rsi,rax
   140007e97:	mov    rcx,QWORD PTR [rbp+0x1338]
   140007e9e:	mov    QWORD PTR [rax],rcx
   140007ea1:	movabs rax,0x5555555555555555
   140007eab:	mov    QWORD PTR [rbp+0x12f8],rax
   140007eb2:	mov    rdx,QWORD PTR [rbp+0x1338]
   140007eb9:	mov    ecx,edx
   140007ebb:	mov    QWORD PTR [rsp+0x78],rcx
   140007ec0:	lea    r8,[rbp-0x80]
   140007ec4:	mov    r9d,0x137
   140007eca:	movabs r10,0x5851f42d4c957f2d
   140007ed4:	nop    DWORD PTR [rax+0x0]
   140007ed8:	nop    DWORD PTR [rax+rax*1+0x0]
   140007ee0:	mov    rax,rcx
   140007ee3:	shr    rax,0x3e
   140007ee7:	xor    rcx,rax
   140007eea:	imul   rcx,r10
   140007eee:	add    rcx,rbx
   140007ef1:	mov    QWORD PTR [r8],rcx
   140007ef4:	inc    rbx
   140007ef7:	lea    r8,[r8+0x8]
   140007efb:	dec    r9
   140007efe:	jne    0x140007ee0
   140007f00:	mov    DWORD PTR [rsp+0x70],0x138
   140007f08:	shr    rdx,0x8
   140007f0c:	and    edx,0xf
   140007f0f:	lea    rcx,[rsp+0x70]
   140007f14:	call   0x140007a60
   140007f19:	lea    rax,[rsp+0x70]
   140007f1e:	mov    QWORD PTR [rsp+0x48],rax
   140007f23:	mov    QWORD PTR [rsp+0x50],0x40
   140007f2c:	mov    QWORD PTR [rsp+0x58],0xffffffffffffffff
   140007f35:	lea    rcx,[rsp+0x48]
   140007f3a:	call   0x140007030
   140007f3f:	mov    rbx,rax
   140007f42:	mov    rcx,QWORD PTR [rsp+0x40]
   140007f47:	test   rcx,rcx
   140007f4a:	jne    0x140007f53
   140007f4c:	call   QWORD PTR [rip+0x2226]        # 0x14000a178
   140007f52:	int3   
   140007f53:	mov    rax,QWORD PTR [rcx]
   140007f56:	call   QWORD PTR [rax+0x10]
   140007f59:	nop
   140007f5a:	mov    rcx,QWORD PTR [rsp+0x40]
   140007f5f:	cmp    QWORD PTR [rsi],rbx
   140007f62:	je     0x140007f7c
   140007f64:	test   rcx,rcx
   140007f67:	je     0x140007f97
   140007f69:	mov    rax,QWORD PTR [rcx]
   140007f6c:	lea    rdx,[rsp+0x28]
   140007f71:	cmp    rcx,rdx
   140007f74:	setne  dl
   140007f77:	call   QWORD PTR [rax+0x20]
   140007f7a:	jmp    0x140007f97
   140007f7c:	test   rcx,rcx
   140007f7f:	je     0x140007f92
   140007f81:	mov    rax,QWORD PTR [rcx]
   140007f84:	lea    rdx,[rsp+0x28]
   140007f89:	cmp    rcx,rdx
   140007f8c:	setne  dl
   140007f8f:	call   QWORD PTR [rax+0x20]
   140007f92:	mov    rax,rdi
   140007f95:	jmp    0x140007fb8
   140007f97:	movzx  eax,BYTE PTR [rbp+0x1330]
   140007f9e:	mov    BYTE PTR [rbp+0x1338],al
   140007fa4:	lea    rdx,[rip+0x5435]        # 0x14000d3e0
   140007fab:	lea    rcx,[rbp+0x1338]
   140007fb2:	call   0x1400089b8
   140007fb7:	nop
   140007fb8:	mov    rbx,QWORD PTR [rsp+0x1448]
   140007fc0:	add    rsp,0x1410
   140007fc7:	pop    rdi
   140007fc8:	pop    rsi
   140007fc9:	pop    rbp
   140007fca:	ret    
   140007fcb:	int3   
   140007fcc:	int3   
   140007fcd:	int3   
   140007fce:	int3   
   140007fcf:	int3   
   140007fd0:	mov    QWORD PTR [rsp+0x8],rcx
   140007fd5:	push   rdi
   140007fd6:	mov    eax,0x13d0
   140007fdb:	call   0x140008af0
   140007fe0:	sub    rsp,rax
   140007fe3:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140007fec:	mov    QWORD PTR [rsp+0x13f0],rbx
   140007ff4:	mov    QWORD PTR [rsp+0x13f8],rsi
   140007ffc:	mov    rbx,rcx
   140007fff:	call   QWORD PTR [rip+0x228b]        # 0x14000a290
   140008005:	movsxd rdx,eax
   140008008:	lea    rax,[rsp+0x13e8]
   140008010:	imul   rdx,rax
   140008014:	lea    rax,[rip+0x235]        # 0x140008250
   14000801b:	xor    rdx,rax
   14000801e:	mov    QWORD PTR [rsp+0x13e8],rdx
   140008026:	call   QWORD PTR [rip+0x2364]        # 0x14000a390
   14000802c:	mov    rsi,rax
   14000802f:	mov    rcx,QWORD PTR [rsp+0x13e8]
   140008037:	mov    QWORD PTR [rax],rcx
   14000803a:	movabs rax,0x5555555555555555
   140008044:	mov    QWORD PTR [rsp+0x13c8],rax
   14000804c:	mov    rdx,QWORD PTR [rsp+0x13e8]
   140008054:	mov    ecx,edx
   140008056:	mov    QWORD PTR [rsp+0x48],rcx
   14000805b:	mov    r8d,0x1
   140008061:	lea    r9,[rsp+0x50]
   140008066:	mov    r10d,0x137
   14000806c:	movabs r11,0x5851f42d4c957f2d
   140008076:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008080:	mov    rax,rcx
   140008083:	shr    rax,0x3e
   140008087:	xor    rcx,rax
   14000808a:	imul   rcx,r11
   14000808e:	add    rcx,r8
   140008091:	mov    QWORD PTR [r9],rcx
   140008094:	inc    r8
   140008097:	lea    r9,[r9+0x8]
   14000809b:	dec    r10
   14000809e:	jne    0x140008080
   1400080a0:	mov    DWORD PTR [rsp+0x40],0x138
   1400080a8:	shr    rdx,0x8
   1400080ac:	and    edx,0xf
   1400080af:	lea    rcx,[rsp+0x40]
   1400080b4:	call   0x140007a60
   1400080b9:	lea    rax,[rsp+0x40]
   1400080be:	mov    QWORD PTR [rsp+0x20],rax
   1400080c3:	mov    QWORD PTR [rsp+0x28],0x40
   1400080cc:	mov    QWORD PTR [rsp+0x30],0xffffffffffffffff
   1400080d5:	lea    rcx,[rsp+0x20]
   1400080da:	call   0x140007030
   1400080df:	mov    rdi,rax
   1400080e2:	mov    rcx,QWORD PTR [rbx+0x18]
   1400080e6:	test   rcx,rcx
   1400080e9:	jne    0x1400080f2
   1400080eb:	call   QWORD PTR [rip+0x2087]        # 0x14000a178
   1400080f1:	int3   
   1400080f2:	mov    rax,QWORD PTR [rcx]
   1400080f5:	call   QWORD PTR [rax+0x10]
   1400080f8:	nop
   1400080f9:	mov    rcx,QWORD PTR [rbx+0x18]
   1400080fd:	cmp    QWORD PTR [rsi],rdi
   140008100:	je     0x140008136
   140008102:	xor    edi,edi
   140008104:	test   rcx,rcx
   140008107:	je     0x140008119
   140008109:	mov    rax,QWORD PTR [rcx]
   14000810c:	cmp    rcx,rbx
   14000810f:	setne  dl
   140008112:	call   QWORD PTR [rax+0x20]
   140008115:	mov    QWORD PTR [rbx+0x18],rdi
   140008119:	mov    rcx,QWORD PTR [rbx+0x18]
   14000811d:	test   rcx,rcx
   140008120:	je     0x140008132
   140008122:	mov    rax,QWORD PTR [rcx]
   140008125:	cmp    rcx,rbx
   140008128:	setne  dl
   14000812b:	call   QWORD PTR [rax+0x20]
   14000812e:	mov    QWORD PTR [rbx+0x18],rdi
   140008132:	xor    al,al
   140008134:	jmp    0x140008168
   140008136:	xor    edi,edi
   140008138:	test   rcx,rcx
   14000813b:	je     0x14000814d
   14000813d:	mov    rax,QWORD PTR [rcx]
   140008140:	cmp    rcx,rbx
   140008143:	setne  dl
   140008146:	call   QWORD PTR [rax+0x20]
   140008149:	mov    QWORD PTR [rbx+0x18],rdi
   14000814d:	mov    rcx,QWORD PTR [rbx+0x18]
   140008151:	test   rcx,rcx
   140008154:	je     0x140008166
   140008156:	mov    rax,QWORD PTR [rcx]
   140008159:	cmp    rcx,rbx
   14000815c:	setne  dl
   14000815f:	call   QWORD PTR [rax+0x20]
   140008162:	mov    QWORD PTR [rbx+0x18],rdi
   140008166:	mov    al,0x1
   140008168:	lea    r11,[rsp+0x13d0]
   140008170:	mov    rbx,QWORD PTR [r11+0x20]
   140008174:	mov    rsi,QWORD PTR [r11+0x28]
   140008178:	mov    rsp,r11
   14000817b:	pop    rdi
   14000817c:	ret    
   14000817d:	int3   
   14000817e:	int3   
   14000817f:	int3   
   140008180:	mov    eax,0x13d8
   140008185:	call   0x140008af0
   14000818a:	sub    rsp,rax
   14000818d:	movabs rax,0x5555555555555555
   140008197:	mov    edx,ecx
   140008199:	mov    r8d,0x1
   14000819f:	lea    r9,[rsp+0x50]
   1400081a4:	mov    r10d,0x137
   1400081aa:	movabs r11,0x5851f42d4c957f2d
   1400081b4:	mov    QWORD PTR [rsp+0x13c8],rax
   1400081bc:	mov    QWORD PTR [rsp+0x48],rdx
   1400081c1:	mov    rax,rdx
   1400081c4:	lea    r9,[r9+0x8]
   1400081c8:	shr    rax,0x3e
   1400081cc:	xor    rdx,rax
   1400081cf:	imul   rdx,r11
   1400081d3:	add    rdx,r8
   1400081d6:	inc    r8
   1400081d9:	mov    QWORD PTR [r9-0x8],rdx
   1400081dd:	dec    r10
   1400081e0:	jne    0x1400081c1
   1400081e2:	shr    rcx,0x8
   1400081e6:	mov    DWORD PTR [rsp+0x40],0x138
   1400081ee:	and    ecx,0xf
   1400081f1:	mov    edx,ecx
   1400081f3:	lea    rcx,[rsp+0x40]
   1400081f8:	call   0x140007a60
   1400081fd:	lea    rax,[rsp+0x40]
   140008202:	lea    rcx,[rsp+0x20]
   140008207:	mov    QWORD PTR [rsp+0x20],rax
   14000820c:	mov    QWORD PTR [rsp+0x28],0x40
   140008215:	mov    QWORD PTR [rsp+0x30],0xffffffffffffffff
   14000821e:	call   0x140007030
   140008223:	add    rsp,0x13d8
   14000822a:	ret    
   14000822b:	int3   
   14000822c:	int3   
   14000822d:	int3   
   14000822e:	int3   
   14000822f:	int3   
   140008230:	cmp    WORD PTR [rcx],0x0
   140008234:	jne    0x140008239
   140008236:	xor    eax,eax
   140008238:	ret    
   140008239:	or     rax,0xffffffffffffffff
   14000823d:	nop    DWORD PTR [rax]
   140008240:	inc    rax
   140008243:	cmp    WORD PTR [rcx+rax*2],0x0
   140008248:	jne    0x140008240
   14000824a:	ret    
   14000824b:	int3   
   14000824c:	int3   
   14000824d:	int3   
   14000824e:	int3   
   14000824f:	int3   
   140008250:	ret    0x0
   140008253:	int3   
   140008254:	int3   
   140008255:	int3   
   140008256:	int3   
   140008257:	int3   
   140008258:	int3   
   140008259:	int3   
   14000825a:	int3   
   14000825b:	int3   
   14000825c:	int3   
   14000825d:	int3   
   14000825e:	int3   
   14000825f:	int3   
   140008260:	or     rax,0xffffffffffffffff
   140008264:	ret    
   140008265:	int3   
   140008266:	int3   
   140008267:	int3   
   140008268:	int3   
   140008269:	int3   
   14000826a:	int3   
   14000826b:	int3   
   14000826c:	int3   
   14000826d:	int3   
   14000826e:	int3   
   14000826f:	int3   
   140008270:	or     rax,0xffffffffffffffff
   140008274:	ret    
   140008275:	int3   
   140008276:	int3   
   140008277:	int3   
   140008278:	int3   
   140008279:	int3   
   14000827a:	int3   
   14000827b:	int3   
   14000827c:	int3   
   14000827d:	int3   
   14000827e:	int3   
   14000827f:	int3   
   140008280:	movabs rax,0x7fffffffffffffff
   14000828a:	ret    
   14000828b:	int3   
   14000828c:	int3   
   14000828d:	int3   
   14000828e:	int3   
   14000828f:	int3   
   140008290:	movabs rax,0x7fffffffffffffff
   14000829a:	ret    
   14000829b:	int3   
   14000829c:	int3   
   14000829d:	int3   
   14000829e:	int3   
   14000829f:	int3   
   1400082a0:	movabs rax,0x7fffffffffffffff
   1400082aa:	ret    
   1400082ab:	int3   
   1400082ac:	int3   
   1400082ad:	int3   
   1400082ae:	int3   
   1400082af:	int3   
   1400082b0:	movabs rax,0x7ffffffffffffffe
   1400082ba:	ret    
   1400082bb:	int3   
   1400082bc:	int3   
   1400082bd:	int3   
   1400082be:	int3   
   1400082bf:	int3   
   1400082c0:	xor    eax,eax
   1400082c2:	ret    
   1400082c3:	int3   
   1400082c4:	int3   
   1400082c5:	int3   
   1400082c6:	int3   
   1400082c7:	int3   
   1400082c8:	int3   
   1400082c9:	int3   
   1400082ca:	int3   
   1400082cb:	int3   
   1400082cc:	int3   
   1400082cd:	int3   
   1400082ce:	int3   
   1400082cf:	int3   
   1400082d0:	test   r8,r8
   1400082d3:	jne    0x1400082d9
   1400082d5:	mov    rax,rcx
   1400082d8:	ret    
   1400082d9:	add    r8,r8
   1400082dc:	rex.W jmp QWORD PTR [rip+0x1ebd]        # 0x14000a1a0
   1400082e3:	int3   
   1400082e4:	int3   
   1400082e5:	int3   
   1400082e6:	int3   
   1400082e7:	int3   
   1400082e8:	int3   
   1400082e9:	int3   
   1400082ea:	int3   
   1400082eb:	int3   
   1400082ec:	int3   
   1400082ed:	int3   
   1400082ee:	int3   
   1400082ef:	int3   
   1400082f0:	mov    r9d,edx
   1400082f3:	lea    r10,[rcx+0x10]
   1400082f7:	mov    r11d,0x137
   1400082fd:	mov    QWORD PTR [rcx+0x8],r9
   140008301:	mov    edx,0x1
   140008306:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008310:	mov    rax,r9
   140008313:	lea    r10,[r10+0x8]
   140008317:	shr    rax,0x3e
   14000831b:	xor    r9,rax
   14000831e:	imul   r9,r8
   140008322:	add    r9,rdx
   140008325:	inc    rdx
   140008328:	mov    QWORD PTR [r10-0x8],r9
   14000832c:	dec    r11
   14000832f:	jne    0x140008310
   140008331:	mov    DWORD PTR [rcx],0x138
   140008337:	ret    
   140008338:	int3   
   140008339:	int3   
   14000833a:	int3   
   14000833b:	int3   
   14000833c:	int3   
   14000833d:	int3   
   14000833e:	int3   
   14000833f:	int3   
   140008340:	rex push rdi
   140008342:	sub    rsp,0x30
   140008346:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000834f:	mov    QWORD PTR [rsp+0x40],rbx
   140008354:	mov    QWORD PTR [rsp+0x48],rbp
   140008359:	mov    QWORD PTR [rsp+0x50],rsi
   14000835e:	mov    rdi,r8
   140008361:	mov    rsi,rdx
   140008364:	mov    rbp,rcx
   140008367:	mov    r9d,DWORD PTR [rip+0x725e]        # 0x14000f5cc
   14000836e:	mov    rax,QWORD PTR gs:0x58
   140008377:	mov    ecx,0x8
   14000837c:	mov    rbx,QWORD PTR [rax+r9*8]
   140008380:	add    rbx,rcx
   140008383:	cmp    QWORD PTR [rbx],0x0
   140008387:	jne    0x1400083a9
   140008389:	mov    ecx,0x10
   14000838e:	call   0x14000887a
   140008393:	mov    QWORD PTR [rsp+0x58],rax
   140008398:	test   rax,rax
   14000839b:	je     0x1400083a6
   14000839d:	mov    rcx,rax
   1400083a0:	call   0x140007df0
   1400083a5:	nop
   1400083a6:	mov    QWORD PTR [rbx],rax
   1400083a9:	mov    rax,QWORD PTR [rbx]
   1400083ac:	mov    rcx,QWORD PTR [rax]
   1400083af:	mov    rax,QWORD PTR [rcx]
   1400083b2:	mov    r9,rdi
   1400083b5:	mov    r8,rsi
   1400083b8:	mov    rdx,rbp
   1400083bb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400083c0:	mov    rbp,QWORD PTR [rsp+0x48]
   1400083c5:	mov    rsi,QWORD PTR [rsp+0x50]
   1400083ca:	add    rsp,0x30
   1400083ce:	pop    rdi
   1400083cf:	rex.W jmp QWORD PTR [rax+0x288]
   1400083d6:	int3   
   1400083d7:	int3   
   1400083d8:	int3   
   1400083d9:	int3   
   1400083da:	int3   
   1400083db:	int3   
   1400083dc:	int3   
   1400083dd:	int3   
   1400083de:	int3   
   1400083df:	int3   
   1400083e0:	mov    eax,0x4
   1400083e5:	ret    
   1400083e6:	int3   
   1400083e7:	int3   
   1400083e8:	int3   
   1400083e9:	int3   
   1400083ea:	int3   
   1400083eb:	int3   
   1400083ec:	int3   
   1400083ed:	int3   
   1400083ee:	int3   
   1400083ef:	int3   
   1400083f0:	mov    rax,QWORD PTR [rcx+0x10]
   1400083f4:	ret    
   1400083f5:	int3   
   1400083f6:	int3   
   1400083f7:	int3   
   1400083f8:	int3   
   1400083f9:	int3   
   1400083fa:	int3   
   1400083fb:	int3   
   1400083fc:	int3   
   1400083fd:	int3   
   1400083fe:	int3   
   1400083ff:	int3   
   140008400:	ret    0x0
   140008403:	int3   
   140008404:	int3   
   140008405:	int3   
   140008406:	int3   
   140008407:	int3   
   140008408:	int3   
   140008409:	int3   
   14000840a:	int3   
   14000840b:	int3   
   14000840c:	int3   
   14000840d:	int3   
   14000840e:	int3   
   14000840f:	int3   
   140008410:	mov    rax,rsp
   140008413:	push   rdi
   140008414:	sub    rsp,0x120
   14000841b:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   140008424:	mov    QWORD PTR [rax+0x8],rbx
   140008428:	mov    QWORD PTR [rax+0x10],rsi
   14000842c:	mov    rax,QWORD PTR [rip+0x1e6d]        # 0x14000a2a0
   140008433:	mov    rbx,QWORD PTR [rax]
   140008436:	mov    rax,QWORD PTR [rip+0x1e5b]        # 0x14000a298
   14000843d:	movsxd rdi,DWORD PTR [rax]
   140008440:	mov    QWORD PTR [rsp+0x40],0x7
   140008449:	xor    esi,esi
   14000844b:	mov    QWORD PTR [rsp+0x38],rsi
   140008450:	mov    WORD PTR [rsp+0x28],si
   140008455:	lea    r8d,[rsi+0xd]
   140008459:	lea    rdx,[rip+0x2918]        # 0x14000ad78
   140008460:	lea    rcx,[rsp+0x28]
   140008465:	call   0x140007810
   14000846a:	nop
   14000846b:	lea    rcx,[rsp+0x28]
   140008470:	call   QWORD PTR [rip+0x1f12]        # 0x14000a388
   140008476:	nop
   140008477:	cmp    QWORD PTR [rsp+0x40],0x8
   14000847d:	jb     0x140008489
   14000847f:	mov    rcx,QWORD PTR [rsp+0x28]
   140008484:	call   0x140008880
   140008489:	xorps  xmm0,xmm0
   14000848c:	movdqu XMMWORD PTR [rsp+0x48],xmm0
   140008492:	mov    QWORD PTR [rsp+0x58],rsi
   140008497:	lea    r8,[rbx+rdi*8]
   14000849b:	movzx  r9d,BYTE PTR [rsp+0x20]
   1400084a1:	mov    rdx,rbx
   1400084a4:	lea    rcx,[rsp+0x48]
   1400084a9:	call   0x140005f00
   1400084ae:	nop
   1400084af:	lea    rdx,[rsp+0x48]
   1400084b4:	lea    rcx,[rsp+0xa0]
   1400084bc:	call   0x140001b00
   1400084c1:	nop
   1400084c2:	lea    rcx,[rsp+0xa0]
   1400084ca:	call   0x140002f60
   1400084cf:	mov    QWORD PTR [rsp+0x40],0xf
   1400084d8:	mov    QWORD PTR [rsp+0x38],rsi
   1400084dd:	mov    BYTE PTR [rsp+0x28],0x0
   1400084e2:	or     r9,0xffffffffffffffff
   1400084e6:	xor    r8d,r8d
   1400084e9:	mov    rdx,rax
   1400084ec:	lea    rcx,[rsp+0x28]
   1400084f1:	call   0x1400029b0
   1400084f6:	xor    r8d,r8d
   1400084f9:	lea    rdx,[rsp+0x28]
   1400084fe:	lea    rcx,[rsp+0x78]
   140008503:	call   0x140007b10
   140008508:	nop
   140008509:	mov    rcx,rax
   14000850c:	call   0x1400085b0
   140008511:	nop
   140008512:	cmp    QWORD PTR [rsp+0x90],0x10
   14000851b:	jb     0x140008527
   14000851d:	mov    rcx,QWORD PTR [rsp+0x78]
   140008522:	call   0x140008880
   140008527:	lea    rcx,[rsp+0xa0]
   14000852f:	call   0x140002f70
   140008534:	mov    rbx,rax
   140008537:	lea    rcx,[rsp+0xa0]
   14000853f:	call   0x140002f50
   140008544:	mov    rdi,rax
   140008547:	lea    rcx,[rsp+0xa0]
   14000854f:	call   0x140002f80
   140008554:	mov    r8,rbx
   140008557:	mov    rdx,rdi
   14000855a:	mov    rcx,rax
   14000855d:	call   0x140008340
   140008562:	nop
   140008563:	lea    rcx,[rsp+0xa0]
   14000856b:	call   0x140001d10
   140008570:	nop
   140008571:	xor    ecx,ecx
   140008573:	call   QWORD PTR [rip+0x1d07]        # 0x14000a280
   140008579:	int3   
   14000857a:	int3   
   14000857b:	int3   
   14000857c:	int3   
   14000857d:	int3   
   14000857e:	int3   
   14000857f:	int3   
   140008580:	rex push rbx
   140008582:	sub    rsp,0x20
   140008586:	add    r8,r8
   140008589:	mov    rbx,rcx
   14000858c:	call   0x1400089c4
   140008591:	mov    rax,rbx
   140008594:	add    rsp,0x20
   140008598:	pop    rbx
   140008599:	ret    
   14000859a:	int3   
   14000859b:	int3   
   14000859c:	int3   
   14000859d:	int3   
   14000859e:	int3   
   14000859f:	int3   
   1400085a0:	add    r8,r8
   1400085a3:	rex.W jmp QWORD PTR [rip+0x1bf6]        # 0x14000a1a0
   1400085aa:	int3   
   1400085ab:	int3   
   1400085ac:	int3   
   1400085ad:	int3   
   1400085ae:	int3   
   1400085af:	int3   
   1400085b0:	sub    rsp,0x68
   1400085b4:	cmp    QWORD PTR [rcx+0x18],0x10
   1400085b9:	jb     0x1400085be
   1400085bb:	mov    rcx,QWORD PTR [rcx]
   1400085be:	xor    edx,edx
   1400085c0:	lea    r8d,[rdx+0xa]
   1400085c4:	call   QWORD PTR [rip+0x1cde]        # 0x14000a2a8
   1400085ca:	test   eax,eax
   1400085cc:	jle    0x14000860a
   1400085ce:	mov    r8d,eax
   1400085d1:	xor    edx,edx
   1400085d3:	mov    ecx,0x100000
   1400085d8:	mov    QWORD PTR [rsp+0x60],rbx
   1400085dd:	call   QWORD PTR [rip+0x1a5d]        # 0x14000a040
   1400085e3:	mov    rbx,rax
   1400085e6:	test   rax,rax
   1400085e9:	je     0x140008600
   1400085eb:	or     edx,0xffffffff
   1400085ee:	mov    rcx,rax
   1400085f1:	call   QWORD PTR [rip+0x1a41]        # 0x14000a038
   1400085f7:	mov    rcx,rbx
   1400085fa:	call   QWORD PTR [rip+0x1a30]        # 0x14000a030
   140008600:	mov    rbx,QWORD PTR [rsp+0x60]
   140008605:	add    rsp,0x68
   140008609:	ret    
   14000860a:	lea    rdx,[rip+0x2867]        # 0x14000ae78
   140008611:	lea    rcx,[rsp+0x20]
   140008616:	mov    r8d,0xfffffffd
   14000861c:	call   0x1400033d0
   140008621:	lea    rdx,[rip+0x4cf8]        # 0x14000d320
   140008628:	lea    rcx,[rsp+0x20]
   14000862d:	call   0x1400089b8
   140008632:	int3   
   140008633:	int3   
   140008634:	int3   
   140008635:	int3   
   140008636:	int3   
   140008637:	int3   
   140008638:	int3   
   140008639:	int3   
   14000863a:	int3   
   14000863b:	int3   
   14000863c:	int3   
   14000863d:	int3   
   14000863e:	int3   
   14000863f:	int3   
   140008640:	rex push rbx
   140008642:	sub    rsp,0x20
   140008646:	mov    r8d,ecx
   140008649:	xor    edx,edx
   14000864b:	mov    ecx,0x100000
   140008650:	call   QWORD PTR [rip+0x19ea]        # 0x14000a040
   140008656:	mov    rbx,rax
   140008659:	test   rax,rax
   14000865c:	je     0x140008679
   14000865e:	or     edx,0xffffffff
   140008661:	mov    rcx,rax
   140008664:	call   QWORD PTR [rip+0x19ce]        # 0x14000a038
   14000866a:	mov    rcx,rbx
   14000866d:	add    rsp,0x20
   140008671:	pop    rbx
   140008672:	rex.W jmp QWORD PTR [rip+0x19b7]        # 0x14000a030
   140008679:	add    rsp,0x20
   14000867d:	pop    rbx
   14000867e:	ret    
   14000867f:	int3   
   140008680:	jmp    QWORD PTR [rip+0x1d12]        # 0x14000a398
   140008686:	jmp    QWORD PTR [rip+0x1d04]        # 0x14000a390
   14000868c:	jmp    QWORD PTR [rip+0x1cf6]        # 0x14000a388
   140008692:	jmp    QWORD PTR [rip+0x1968]        # 0x14000a000
   140008698:	jmp    QWORD PTR [rip+0x1992]        # 0x14000a030
   14000869e:	jmp    QWORD PTR [rip+0x1994]        # 0x14000a038
   1400086a4:	jmp    QWORD PTR [rip+0x1996]        # 0x14000a040
   1400086aa:	jmp    QWORD PTR [rip+0x1ad0]        # 0x14000a180
   1400086b0:	jmp    QWORD PTR [rip+0x1ad2]        # 0x14000a188
   1400086b6:	jmp    QWORD PTR [rip+0x19a4]        # 0x14000a060
   1400086bc:	jmp    QWORD PTR [rip+0x19a6]        # 0x14000a068
   1400086c2:	jmp    QWORD PTR [rip+0x19a8]        # 0x14000a070
   1400086c8:	jmp    QWORD PTR [rip+0x19aa]        # 0x14000a078
   1400086ce:	jmp    QWORD PTR [rip+0x19ac]        # 0x14000a080
   1400086d4:	jmp    QWORD PTR [rip+0x19ae]        # 0x14000a088
   1400086da:	int3   
   1400086db:	int3   
   1400086dc:	mov    QWORD PTR [rcx],rdx
   1400086df:	mov    QWORD PTR [rcx+0x8],r8
   1400086e3:	mov    rax,rcx
   1400086e6:	ret    
   1400086e7:	int3   
   1400086e8:	sub    rsp,0x28
   1400086ec:	mov    rcx,QWORD PTR [rcx+0x8]
   1400086f0:	mov    rax,QWORD PTR [rcx]
   1400086f3:	call   QWORD PTR [rax+0x10]
   1400086f6:	test   rax,rax
   1400086f9:	je     0x140008709
   1400086fb:	mov    r8,QWORD PTR [rax]
   1400086fe:	mov    edx,0x1
   140008703:	mov    rcx,rax
   140008706:	call   QWORD PTR [r8]
   140008709:	add    rsp,0x28
   14000870d:	ret    
   14000870e:	int3   
   14000870f:	int3   
   140008710:	rex push rbx
   140008712:	sub    rsp,0x20
   140008716:	jmp    0x140008747
   140008718:	mov    rax,QWORD PTR [rbx]
   14000871b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000871f:	mov    QWORD PTR [rip+0x6e9a],rax        # 0x14000f5c0
   140008726:	mov    rax,QWORD PTR [rcx]
   140008729:	call   QWORD PTR [rax+0x10]
   14000872c:	test   rax,rax
   14000872f:	je     0x14000873f
   140008731:	mov    r8,QWORD PTR [rax]
   140008734:	mov    edx,0x1
   140008739:	mov    rcx,rax
   14000873c:	call   QWORD PTR [r8]
   14000873f:	mov    rcx,rbx
   140008742:	call   0x140008880
   140008747:	mov    rbx,QWORD PTR [rip+0x6e72]        # 0x14000f5c0
   14000874e:	test   rbx,rbx
   140008751:	jne    0x140008718
   140008753:	add    rsp,0x20
   140008757:	pop    rbx
   140008758:	ret    
   140008759:	int3   
   14000875a:	int3   
   14000875b:	int3   
   14000875c:	mov    QWORD PTR [rsp+0x8],rbx
   140008761:	push   rdi
   140008762:	sub    rsp,0x20
   140008766:	mov    rbx,rcx
   140008769:	mov    rcx,QWORD PTR [rcx+0x8]
   14000876d:	mov    edi,edx
   14000876f:	mov    rax,QWORD PTR [rcx]
   140008772:	call   QWORD PTR [rax+0x10]
   140008775:	test   rax,rax
   140008778:	je     0x140008788
   14000877a:	mov    r8,QWORD PTR [rax]
   14000877d:	mov    edx,0x1
   140008782:	mov    rcx,rax
   140008785:	call   QWORD PTR [r8]
   140008788:	test   dil,0x1
   14000878c:	je     0x140008796
   14000878e:	mov    rcx,rbx
   140008791:	call   0x140008880
   140008796:	mov    rax,rbx
   140008799:	mov    rbx,QWORD PTR [rsp+0x30]
   14000879e:	add    rsp,0x20
   1400087a2:	pop    rdi
   1400087a3:	ret    
   1400087a4:	rex push rbx
   1400087a6:	sub    rsp,0x20
   1400087aa:	mov    rbx,rcx
   1400087ad:	mov    ecx,0x10
   1400087b2:	call   0x14000887a
   1400087b7:	test   rax,rax
   1400087ba:	je     0x1400087ca
   1400087bc:	mov    rdx,QWORD PTR [rip+0x6dfd]        # 0x14000f5c0
   1400087c3:	mov    QWORD PTR [rax+0x8],rbx
   1400087c7:	mov    QWORD PTR [rax],rdx
   1400087ca:	mov    QWORD PTR [rip+0x6def],rax        # 0x14000f5c0
   1400087d1:	add    rsp,0x20
   1400087d5:	pop    rbx
   1400087d6:	ret    
   1400087d7:	int3   
   1400087d8:	jmp    QWORD PTR [rip+0x18b2]        # 0x14000a090
   1400087de:	jmp    QWORD PTR [rip+0x18b4]        # 0x14000a098
   1400087e4:	jmp    QWORD PTR [rip+0x18b6]        # 0x14000a0a0
   1400087ea:	jmp    QWORD PTR [rip+0x18b8]        # 0x14000a0a8
   1400087f0:	jmp    QWORD PTR [rip+0x18ba]        # 0x14000a0b0
   1400087f6:	jmp    QWORD PTR [rip+0x18bc]        # 0x14000a0b8
   1400087fc:	jmp    QWORD PTR [rip+0x18be]        # 0x14000a0c0
   140008802:	jmp    QWORD PTR [rip+0x18c0]        # 0x14000a0c8
   140008808:	jmp    QWORD PTR [rip+0x18c2]        # 0x14000a0d0
   14000880e:	jmp    QWORD PTR [rip+0x18c4]        # 0x14000a0d8
   140008814:	jmp    QWORD PTR [rip+0x18c6]        # 0x14000a0e0
   14000881a:	jmp    QWORD PTR [rip+0x18c8]        # 0x14000a0e8
   140008820:	jmp    QWORD PTR [rip+0x18ca]        # 0x14000a0f0
   140008826:	jmp    QWORD PTR [rip+0x18cc]        # 0x14000a0f8
   14000882c:	jmp    QWORD PTR [rip+0x18ce]        # 0x14000a100
   140008832:	jmp    QWORD PTR [rip+0x18d0]        # 0x14000a108
   140008838:	jmp    QWORD PTR [rip+0x18d2]        # 0x14000a110
   14000883e:	jmp    QWORD PTR [rip+0x18d4]        # 0x14000a118
   140008844:	jmp    QWORD PTR [rip+0x18d6]        # 0x14000a120
   14000884a:	jmp    QWORD PTR [rip+0x18d8]        # 0x14000a128
   140008850:	jmp    QWORD PTR [rip+0x18da]        # 0x14000a130
   140008856:	jmp    QWORD PTR [rip+0x18dc]        # 0x14000a138
   14000885c:	jmp    QWORD PTR [rip+0x18de]        # 0x14000a140
   140008862:	jmp    QWORD PTR [rip+0x18e0]        # 0x14000a148
   140008868:	jmp    QWORD PTR [rip+0x18e2]        # 0x14000a150
   14000886e:	jmp    QWORD PTR [rip+0x1904]        # 0x14000a178
   140008874:	jmp    QWORD PTR [rip+0x1976]        # 0x14000a1f0
   14000887a:	jmp    QWORD PTR [rip+0x1940]        # 0x14000a1c0
   140008880:	jmp    QWORD PTR [rip+0x1912]        # 0x14000a198
   140008886:	int3   
   140008887:	int3   
   140008888:	rex push rbx
   14000888a:	sub    rsp,0x20
   14000888e:	cmp    QWORD PTR [rip+0x6d92],0x0        # 0x14000f628
   140008896:	jne    0x1400088ce
   140008898:	mov    edx,0x8
   14000889d:	lea    ecx,[rdx+0x18]
   1400088a0:	call   QWORD PTR [rip+0x1a1a]        # 0x14000a2c0
   1400088a6:	mov    rcx,rax
   1400088a9:	mov    rbx,rax
   1400088ac:	call   QWORD PTR [rip+0x1796]        # 0x14000a048
   1400088b2:	mov    QWORD PTR [rip+0x6d6f],rax        # 0x14000f628
   1400088b9:	mov    QWORD PTR [rip+0x6d60],rax        # 0x14000f620
   1400088c0:	test   rbx,rbx
   1400088c3:	jne    0x1400088ca
   1400088c5:	lea    eax,[rbx+0x18]
   1400088c8:	jmp    0x1400088d0
   1400088ca:	and    QWORD PTR [rbx],0x0
   1400088ce:	xor    eax,eax
   1400088d0:	add    rsp,0x20
   1400088d4:	pop    rbx
   1400088d5:	ret    
   1400088d6:	int3   
   1400088d7:	int3   
   1400088d8:	rex push rbx
   1400088da:	sub    rsp,0x20
   1400088de:	mov    rbx,rcx
   1400088e1:	mov    rcx,QWORD PTR [rip+0x6d40]        # 0x14000f628
   1400088e8:	call   QWORD PTR [rip+0x1762]        # 0x14000a050
   1400088ee:	mov    QWORD PTR [rsp+0x38],rax
   1400088f3:	cmp    rax,0xffffffffffffffff
   1400088f7:	jne    0x140008904
   1400088f9:	mov    rcx,rbx
   1400088fc:	call   QWORD PTR [rip+0x19d6]        # 0x14000a2d8
   140008902:	jmp    0x140008982
   140008904:	mov    ecx,0x8
   140008909:	call   0x140008eca
   14000890e:	nop
   14000890f:	mov    rcx,QWORD PTR [rip+0x6d12]        # 0x14000f628
   140008916:	call   QWORD PTR [rip+0x1734]        # 0x14000a050
   14000891c:	mov    QWORD PTR [rsp+0x38],rax
   140008921:	mov    rcx,QWORD PTR [rip+0x6cf8]        # 0x14000f620
   140008928:	call   QWORD PTR [rip+0x1722]        # 0x14000a050
   14000892e:	mov    QWORD PTR [rsp+0x40],rax
   140008933:	mov    rcx,rbx
   140008936:	call   QWORD PTR [rip+0x170c]        # 0x14000a048
   14000893c:	mov    rcx,rax
   14000893f:	lea    r8,[rsp+0x40]
   140008944:	lea    rdx,[rsp+0x38]
   140008949:	call   0x140008edc
   14000894e:	mov    rbx,rax
   140008951:	mov    rcx,QWORD PTR [rsp+0x38]
   140008956:	call   QWORD PTR [rip+0x16ec]        # 0x14000a048
   14000895c:	mov    QWORD PTR [rip+0x6cc5],rax        # 0x14000f628
   140008963:	mov    rcx,QWORD PTR [rsp+0x40]
   140008968:	call   QWORD PTR [rip+0x16da]        # 0x14000a048
   14000896e:	mov    QWORD PTR [rip+0x6cab],rax        # 0x14000f620
   140008975:	mov    ecx,0x8
   14000897a:	call   0x140008ed0
   14000897f:	mov    rax,rbx
   140008982:	add    rsp,0x20
   140008986:	pop    rbx
   140008987:	ret    
   140008988:	sub    rsp,0x28
   14000898c:	call   0x1400088d8
   140008991:	neg    rax
   140008994:	sbb    eax,eax
   140008996:	neg    eax
   140008998:	dec    eax
   14000899a:	add    rsp,0x28
   14000899e:	ret    
   14000899f:	int3   
   1400089a0:	jmp    QWORD PTR [rip+0x17fa]        # 0x14000a1a0
   1400089a6:	jmp    QWORD PTR [rip+0x17fc]        # 0x14000a1a8
   1400089ac:	jmp    QWORD PTR [rip+0x17fe]        # 0x14000a1b0
   1400089b2:	jmp    QWORD PTR [rip+0x1800]        # 0x14000a1b8
   1400089b8:	jmp    QWORD PTR [rip+0x19ba]        # 0x14000a378
   1400089be:	jmp    QWORD PTR [rip+0x1804]        # 0x14000a1c8
   1400089c4:	jmp    QWORD PTR [rip+0x1806]        # 0x14000a1d0
   1400089ca:	int3   
   1400089cb:	int3   
   1400089cc:	lea    rax,[rip+0x24fd]        # 0x14000aed0
   1400089d3:	mov    QWORD PTR [rcx],rax
   1400089d6:	mov    rax,rcx
   1400089d9:	ret    
   1400089da:	int3   
   1400089db:	int3   
   1400089dc:	mov    rax,rcx
   1400089df:	ret    
   1400089e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400089e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400089ea:	push   rdi
   1400089eb:	sub    rsp,0x20
   1400089ef:	mov    esi,edx
   1400089f1:	mov    rbx,rcx
   1400089f4:	test   dl,0x2
   1400089f7:	je     0x140008a24
   1400089f9:	lea    rdi,[rcx-0x8]
   1400089fd:	lea    r9,[rip+0x84e]        # 0x140009252
   140008a04:	mov    edx,0x18
   140008a09:	mov    r8d,DWORD PTR [rdi]
   140008a0c:	call   0x140008ee8
   140008a11:	test   sil,0x1
   140008a15:	je     0x140008a1f
   140008a17:	mov    rcx,rdi
   140008a1a:	call   0x140008880
   140008a1f:	mov    rax,rdi
   140008a22:	jmp    0x140008a3a
   140008a24:	call   0x140009252
   140008a29:	test   sil,0x1
   140008a2d:	je     0x140008a37
   140008a2f:	mov    rcx,rbx
   140008a32:	call   0x140008880
   140008a37:	mov    rax,rbx
   140008a3a:	mov    rbx,QWORD PTR [rsp+0x30]
   140008a3f:	mov    rsi,QWORD PTR [rsp+0x38]
   140008a44:	add    rsp,0x20
   140008a48:	pop    rdi
   140008a49:	ret    
   140008a4a:	jmp    QWORD PTR [rip+0x1788]        # 0x14000a1d8
   140008a50:	jmp    QWORD PTR [rip+0x178a]        # 0x14000a1e0
   140008a56:	jmp    QWORD PTR [rip+0x178c]        # 0x14000a1e8
   140008a5c:	jmp    QWORD PTR [rip+0x190e]        # 0x14000a370
   140008a62:	jmp    QWORD PTR [rip+0x1790]        # 0x14000a1f8
   140008a68:	jmp    QWORD PTR [rip+0x1792]        # 0x14000a200
   140008a6e:	jmp    QWORD PTR [rip+0x1794]        # 0x14000a208
   140008a74:	jmp    QWORD PTR [rip+0x1796]        # 0x14000a210
   140008a7a:	jmp    QWORD PTR [rip+0x1798]        # 0x14000a218
   140008a80:	jmp    QWORD PTR [rip+0x179a]        # 0x14000a220
   140008a86:	jmp    QWORD PTR [rip+0x179c]        # 0x14000a228
   140008a8c:	jmp    QWORD PTR [rip+0x179e]        # 0x14000a230
   140008a92:	jmp    QWORD PTR [rip+0x17a0]        # 0x14000a238
   140008a98:	jmp    QWORD PTR [rip+0x17a2]        # 0x14000a240
   140008a9e:	jmp    QWORD PTR [rip+0x17a4]        # 0x14000a248
   140008aa4:	jmp    QWORD PTR [rip+0x17a6]        # 0x14000a250
   140008aaa:	jmp    QWORD PTR [rip+0x17a8]        # 0x14000a258
   140008ab0:	jmp    QWORD PTR [rip+0x17aa]        # 0x14000a260
   140008ab6:	jmp    QWORD PTR [rip+0x17ac]        # 0x14000a268
   140008abc:	jmp    QWORD PTR [rip+0x17ae]        # 0x14000a270
   140008ac2:	jmp    QWORD PTR [rip+0x17b0]        # 0x14000a278
   140008ac8:	jmp    QWORD PTR [rip+0x17b2]        # 0x14000a280
   140008ace:	jmp    QWORD PTR [rip+0x17b4]        # 0x14000a288
   140008ad4:	jmp    QWORD PTR [rip+0x17b6]        # 0x14000a290
   140008ada:	int3   
   140008adb:	int3   
   140008adc:	int3   
   140008add:	int3   
   140008ade:	int3   
   140008adf:	int3   
   140008ae0:	int3   
   140008ae1:	int3   
   140008ae2:	int3   
   140008ae3:	int3   
   140008ae4:	int3   
   140008ae5:	int3   
   140008ae6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008af0:	sub    rsp,0x10
   140008af4:	mov    QWORD PTR [rsp],r10
   140008af8:	mov    QWORD PTR [rsp+0x8],r11
   140008afd:	xor    r11,r11
   140008b00:	lea    r10,[rsp+0x18]
   140008b05:	sub    r10,rax
   140008b08:	cmovb  r10,r11
   140008b0c:	mov    r11,QWORD PTR gs:0x10
   140008b15:	cmp    r10,r11
   140008b18:	jae    0x140008b30
   140008b1a:	and    r10w,0xf000
   140008b20:	lea    r11,[r11-0x1000]
   140008b27:	mov    BYTE PTR [r11],0x0
   140008b2b:	cmp    r10,r11
   140008b2e:	jne    0x140008b20
   140008b30:	mov    r10,QWORD PTR [rsp]
   140008b34:	mov    r11,QWORD PTR [rsp+0x8]
   140008b39:	add    rsp,0x10
   140008b3d:	ret    
   140008b3e:	jmp    QWORD PTR [rip+0x1764]        # 0x14000a2a8
   140008b44:	sub    rsp,0x28
   140008b48:	mov    eax,0x5a4d
   140008b4d:	cmp    WORD PTR [rip+0xffffffffffff74ac],ax        # 0x140000000
   140008b54:	je     0x140008b5a
   140008b56:	xor    ecx,ecx
   140008b58:	jmp    0x140008b92
   140008b5a:	movsxd rax,DWORD PTR [rip+0xffffffffffff74db]        # 0x14000003c
   140008b61:	lea    rcx,[rip+0xffffffffffff7498]        # 0x140000000
   140008b68:	add    rax,rcx
   140008b6b:	cmp    DWORD PTR [rax],0x4550
   140008b71:	jne    0x140008b56
   140008b73:	mov    ecx,0x20b
   140008b78:	cmp    WORD PTR [rax+0x18],cx
   140008b7c:	jne    0x140008b56
   140008b7e:	xor    ecx,ecx
   140008b80:	cmp    DWORD PTR [rax+0x84],0xe
   140008b87:	jbe    0x140008b92
   140008b89:	cmp    DWORD PTR [rax+0xf8],ecx
   140008b8f:	setne  cl
   140008b92:	mov    DWORD PTR [rip+0x6a40],ecx        # 0x14000f5d8
   140008b98:	mov    ecx,0x2
   140008b9d:	call   QWORD PTR [rip+0x175d]        # 0x14000a300
   140008ba3:	or     rcx,0xffffffffffffffff
   140008ba7:	call   QWORD PTR [rip+0x149b]        # 0x14000a048
   140008bad:	mov    rcx,QWORD PTR [rip+0x1794]        # 0x14000a348
   140008bb4:	mov    QWORD PTR [rip+0x6a65],rax        # 0x14000f620
   140008bbb:	mov    QWORD PTR [rip+0x6a66],rax        # 0x14000f628
   140008bc2:	mov    eax,DWORD PTR [rip+0x6a3c]        # 0x14000f604
   140008bc8:	mov    DWORD PTR [rcx],eax
   140008bca:	mov    rdx,QWORD PTR [rip+0x177f]        # 0x14000a350
   140008bd1:	mov    eax,DWORD PTR [rip+0x6a21]        # 0x14000f5f8
   140008bd7:	mov    DWORD PTR [rdx],eax
   140008bd9:	call   0x1400091c4
   140008bde:	call   0x140009014
   140008be3:	cmp    DWORD PTR [rip+0x6456],0x0        # 0x14000f040
   140008bea:	jne    0x140008bf9
   140008bec:	lea    rcx,[rip+0x5c5]        # 0x1400091b8
   140008bf3:	call   QWORD PTR [rip+0x172f]        # 0x14000a328
   140008bf9:	cmp    DWORD PTR [rip+0x6444],0xffffffff        # 0x14000f044
   140008c00:	jne    0x140008c0b
   140008c02:	or     ecx,0xffffffff
   140008c05:	call   QWORD PTR [rip+0x1715]        # 0x14000a320
   140008c0b:	xor    eax,eax
   140008c0d:	add    rsp,0x28
   140008c11:	ret    
   140008c12:	int3   
   140008c13:	int3   
   140008c14:	sub    rsp,0x38
   140008c18:	lea    rcx,[rip+0x5dd]        # 0x1400091fc
   140008c1f:	call   0x140008988
   140008c24:	mov    eax,DWORD PTR [rip+0x69d6]        # 0x14000f600
   140008c2a:	mov    r9d,DWORD PTR [rip+0x69cb]        # 0x14000f5fc
   140008c31:	mov    DWORD PTR [rip+0x69bd],eax        # 0x14000f5f4
   140008c37:	lea    rax,[rip+0x69b6]        # 0x14000f5f4
   140008c3e:	lea    r8,[rip+0x69a3]        # 0x14000f5e8
   140008c45:	lea    rdx,[rip+0x6994]        # 0x14000f5e0
   140008c4c:	lea    rcx,[rip+0x6989]        # 0x14000f5dc
   140008c53:	mov    QWORD PTR [rsp+0x20],rax
   140008c58:	call   QWORD PTR [rip+0x169a]        # 0x14000a2f8
   140008c5e:	mov    DWORD PTR [rip+0x698c],eax        # 0x14000f5f0
   140008c64:	test   eax,eax
   140008c66:	jns    0x140008c72
   140008c68:	mov    ecx,0x8
   140008c6d:	call   0x14000900c
   140008c72:	add    rsp,0x38
   140008c76:	ret    
   140008c77:	int3   
   140008c78:	mov    rax,QWORD PTR gs:0x30
   140008c81:	ret    
   140008c82:	int3   
   140008c83:	int3   
   140008c84:	sub    rsp,0x28
   140008c88:	call   0x14000910c
   140008c8d:	add    rsp,0x28
   140008c91:	jmp    0x140008c98
   140008c96:	int3   
   140008c97:	int3   
   140008c98:	mov    rax,rsp
   140008c9b:	mov    QWORD PTR [rax+0x8],rbx
   140008c9f:	mov    QWORD PTR [rax+0x10],rsi
   140008ca3:	push   rdi
   140008ca4:	sub    rsp,0x30
   140008ca8:	and    QWORD PTR [rax-0x10],0x0
   140008cad:	and    DWORD PTR [rax-0x18],0x0
   140008cb1:	call   QWORD PTR [rip+0x1631]        # 0x14000a2e8
   140008cb7:	movzx  esi,ax
   140008cba:	mov    rcx,QWORD PTR gs:0x30
   140008cc3:	mov    rdx,QWORD PTR [rcx+0x8]
   140008cc7:	xor    ebx,ebx
   140008cc9:	xor    eax,eax
   140008ccb:	lock cmpxchg QWORD PTR [rip+0x6934],rdx        # 0x14000f608
   140008cd4:	je     0x140008ce4
   140008cd6:	cmp    rax,rdx
   140008cd9:	jne    0x140008ce2
   140008cdb:	mov    ebx,0x1
   140008ce0:	jmp    0x140008ce4
   140008ce2:	jmp    0x140008cc9
   140008ce4:	mov    eax,DWORD PTR [rip+0x6926]        # 0x14000f610
   140008cea:	cmp    eax,0x1
   140008ced:	jne    0x140008cf9
   140008cef:	lea    ecx,[rax+0x1e]
   140008cf2:	call   0x14000900c
   140008cf7:	jmp    0x140008d38
   140008cf9:	mov    eax,DWORD PTR [rip+0x6911]        # 0x14000f610
   140008cff:	test   eax,eax
   140008d01:	jne    0x140008d2e
   140008d03:	mov    DWORD PTR [rip+0x6903],0x1        # 0x14000f610
   140008d0d:	lea    rdx,[rip+0x16ec]        # 0x14000a400
   140008d14:	lea    rcx,[rip+0x16c5]        # 0x14000a3e0
   140008d1b:	call   0x140009240
   140008d20:	test   eax,eax
   140008d22:	je     0x140008d38
   140008d24:	mov    eax,0xff
   140008d29:	jmp    0x140008e70
   140008d2e:	mov    DWORD PTR [rip+0x6898],0x1        # 0x14000f5d0
   140008d38:	mov    eax,DWORD PTR [rip+0x68d2]        # 0x14000f610
   140008d3e:	cmp    eax,0x1
   140008d41:	jne    0x140008d60
   140008d43:	lea    rdx,[rip+0x168e]        # 0x14000a3d8
   140008d4a:	lea    rcx,[rip+0x1657]        # 0x14000a3a8
   140008d51:	call   0x140009246
   140008d56:	mov    DWORD PTR [rip+0x68b0],0x2        # 0x14000f610
   140008d60:	test   ebx,ebx
   140008d62:	jne    0x140008d6d
   140008d64:	xor    eax,eax
   140008d66:	xchg   QWORD PTR [rip+0x689b],rax        # 0x14000f608
   140008d6d:	cmp    QWORD PTR [rip+0x68a3],0x0        # 0x14000f618
   140008d75:	je     0x140008d99
   140008d77:	lea    rcx,[rip+0x689a]        # 0x14000f618
   140008d7e:	call   0x140009080
   140008d83:	test   eax,eax
   140008d85:	je     0x140008d99
   140008d87:	xor    r8d,r8d
   140008d8a:	lea    edx,[r8+0x2]
   140008d8e:	xor    ecx,ecx
   140008d90:	mov    rax,QWORD PTR [rip+0x6881]        # 0x14000f618
   140008d97:	call   rax
   140008d99:	mov    rax,QWORD PTR [rip+0x15a0]        # 0x14000a340
   140008da0:	mov    rbx,QWORD PTR [rax]
   140008da3:	mov    QWORD PTR [rsp+0x28],rbx
   140008da8:	mov    edi,DWORD PTR [rsp+0x20]
   140008dac:	cmp    BYTE PTR [rbx],0x20
   140008daf:	ja     0x140008e0f
   140008db1:	cmp    BYTE PTR [rbx],0x0
   140008db4:	je     0x140008dba
   140008db6:	test   edi,edi
   140008db8:	jne    0x140008e0f
   140008dba:	mov    al,BYTE PTR [rbx]
   140008dbc:	dec    al
   140008dbe:	cmp    al,0x1f
   140008dc0:	ja     0x140008dcc
   140008dc2:	inc    rbx
   140008dc5:	mov    QWORD PTR [rsp+0x28],rbx
   140008dca:	jmp    0x140008dba
   140008dcc:	movzx  r9d,si
   140008dd0:	mov    r8,rbx
   140008dd3:	xor    edx,edx
   140008dd5:	lea    rcx,[rip+0xffffffffffff7224]        # 0x140000000
   140008ddc:	call   0x140008410
   140008de1:	mov    DWORD PTR [rip+0x67ed],eax        # 0x14000f5d4
   140008de7:	cmp    DWORD PTR [rip+0x67ea],0x0        # 0x14000f5d8
   140008dee:	jne    0x140008df8
   140008df0:	mov    ecx,eax
   140008df2:	call   QWORD PTR [rip+0x1488]        # 0x14000a280
   140008df8:	cmp    DWORD PTR [rip+0x67d1],0x0        # 0x14000f5d0
   140008dff:	jne    0x140008e0d
   140008e01:	call   QWORD PTR [rip+0x1509]        # 0x14000a310
   140008e07:	mov    eax,DWORD PTR [rip+0x67c7]        # 0x14000f5d4
   140008e0d:	jmp    0x140008e70
   140008e0f:	cmp    BYTE PTR [rbx],0x22
   140008e12:	jne    0x140008e21
   140008e14:	xor    eax,eax
   140008e16:	test   edi,edi
   140008e18:	sete   al
   140008e1b:	mov    edi,eax
   140008e1d:	mov    DWORD PTR [rsp+0x20],eax
   140008e21:	movzx  ecx,BYTE PTR [rbx]
   140008e24:	call   QWORD PTR [rip+0x14ee]        # 0x14000a318
   140008e2a:	test   eax,eax
   140008e2c:	je     0x140008e36
   140008e2e:	inc    rbx
   140008e31:	mov    QWORD PTR [rsp+0x28],rbx
   140008e36:	inc    rbx
   140008e39:	mov    QWORD PTR [rsp+0x28],rbx
   140008e3e:	jmp    0x140008dac
   140008e43:	mov    DWORD PTR [rip+0x678b],eax        # 0x14000f5d4
   140008e49:	cmp    DWORD PTR [rip+0x6788],0x0        # 0x14000f5d8
   140008e50:	jne    0x140008e5b
   140008e52:	mov    ecx,eax
   140008e54:	call   QWORD PTR [rip+0x14ae]        # 0x14000a308
   140008e5a:	int3   
   140008e5b:	cmp    DWORD PTR [rip+0x676e],0x0        # 0x14000f5d0
   140008e62:	jne    0x140008e70
   140008e64:	call   QWORD PTR [rip+0x14a6]        # 0x14000a310
   140008e6a:	mov    eax,DWORD PTR [rip+0x6764]        # 0x14000f5d4
   140008e70:	mov    rbx,QWORD PTR [rsp+0x40]
   140008e75:	mov    rsi,QWORD PTR [rsp+0x48]
   140008e7a:	add    rsp,0x30
   140008e7e:	pop    rdi
   140008e7f:	ret    
   140008e80:	mov    eax,0x5a4d
   140008e85:	cmp    WORD PTR [rip+0xffffffffffff7174],ax        # 0x140000000
   140008e8c:	je     0x140008e91
   140008e8e:	xor    eax,eax
   140008e90:	ret    
   140008e91:	movsxd rcx,DWORD PTR [rip+0xffffffffffff71a4]        # 0x14000003c
   140008e98:	lea    rax,[rip+0xffffffffffff7161]        # 0x140000000
   140008e9f:	add    rcx,rax
   140008ea2:	cmp    DWORD PTR [rcx],0x4550
   140008ea8:	jne    0x140008e8e
   140008eaa:	mov    eax,0x20b
   140008eaf:	cmp    WORD PTR [rcx+0x18],ax
   140008eb3:	jne    0x140008e8e
   140008eb5:	xor    eax,eax
   140008eb7:	cmp    DWORD PTR [rcx+0x84],0xe
   140008ebe:	jbe    0x140008ec9
   140008ec0:	cmp    DWORD PTR [rcx+0xf8],eax
   140008ec6:	setne  al
   140008ec9:	ret    
   140008eca:	jmp    QWORD PTR [rip+0x13e0]        # 0x14000a2b0
   140008ed0:	jmp    QWORD PTR [rip+0x13e2]        # 0x14000a2b8
   140008ed6:	jmp    QWORD PTR [rip+0x13e4]        # 0x14000a2c0
   140008edc:	jmp    QWORD PTR [rip+0x13e6]        # 0x14000a2c8
   140008ee2:	jmp    QWORD PTR [rip+0x13e8]        # 0x14000a2d0
   140008ee8:	mov    rax,rsp
   140008eeb:	mov    QWORD PTR [rax+0x20],r9
   140008eef:	mov    DWORD PTR [rax+0x18],r8d
   140008ef3:	mov    QWORD PTR [rax+0x10],rdx
   140008ef7:	push   rbx
   140008ef8:	push   rsi
   140008ef9:	push   rdi
   140008efa:	push   r14
   140008efc:	sub    rsp,0x38
   140008f00:	mov    r14,r9
   140008f03:	movsxd rdi,r8d
   140008f06:	mov    rsi,rdx
   140008f09:	and    DWORD PTR [rax-0x38],0x0
   140008f0d:	mov    rbx,rdi
   140008f10:	imul   rbx,rdx
   140008f14:	add    rbx,rcx
   140008f17:	mov    QWORD PTR [rax+0x8],rbx
   140008f1b:	dec    edi
   140008f1d:	mov    DWORD PTR [rsp+0x70],edi
   140008f21:	js     0x140008f33
   140008f23:	sub    rbx,rsi
   140008f26:	mov    QWORD PTR [rsp+0x60],rbx
   140008f2b:	mov    rcx,rbx
   140008f2e:	call   r14
   140008f31:	jmp    0x140008f1b
   140008f33:	mov    DWORD PTR [rsp+0x20],0x1
   140008f3b:	add    rsp,0x38
   140008f3f:	pop    r14
   140008f41:	pop    rdi
   140008f42:	pop    rsi
   140008f43:	pop    rbx
   140008f44:	ret    
   140008f45:	int3   
   140008f46:	int3   
   140008f47:	int3   
   140008f48:	sub    rsp,0x28
   140008f4c:	mov    rax,QWORD PTR [rcx]
   140008f4f:	cmp    DWORD PTR [rax],0xe06d7363
   140008f55:	je     0x140008f5e
   140008f57:	xor    eax,eax
   140008f59:	add    rsp,0x28
   140008f5d:	ret    
   140008f5e:	call   0x14000924c
   140008f63:	int3   
   140008f64:	mov    QWORD PTR [rsp+0x10],rbx
   140008f69:	mov    DWORD PTR [rsp+0x18],r8d
   140008f6e:	mov    QWORD PTR [rsp+0x8],rcx
   140008f73:	push   rsi
   140008f74:	push   rdi
   140008f75:	push   r14
   140008f77:	sub    rsp,0x40
   140008f7b:	mov    rsi,r9
   140008f7e:	mov    edi,r8d
   140008f81:	mov    r14,rdx
   140008f84:	mov    rbx,rcx
   140008f87:	dec    edi
   140008f89:	mov    DWORD PTR [rsp+0x70],edi
   140008f8d:	js     0x140008f9e
   140008f8f:	sub    rbx,r14
   140008f92:	mov    QWORD PTR [rsp+0x60],rbx
   140008f97:	mov    rcx,rbx
   140008f9a:	call   rsi
   140008f9c:	jmp    0x140008f87
   140008f9e:	jmp    0x140008fa0
   140008fa0:	mov    rbx,QWORD PTR [rsp+0x68]
   140008fa5:	add    rsp,0x40
   140008fa9:	pop    r14
   140008fab:	pop    rdi
   140008fac:	pop    rsi
   140008fad:	ret    
   140008fae:	int3   
   140008faf:	int3   
   140008fb0:	sub    rsp,0x28
   140008fb4:	mov    rax,QWORD PTR [rcx]
   140008fb7:	cmp    DWORD PTR [rax],0xe06d7363
   140008fbd:	jne    0x140008fdb
   140008fbf:	cmp    DWORD PTR [rax+0x18],0x4
   140008fc3:	jne    0x140008fdb
   140008fc5:	mov    ecx,DWORD PTR [rax+0x20]
   140008fc8:	lea    eax,[rcx-0x19930520]
   140008fce:	cmp    eax,0x2
   140008fd1:	jbe    0x140008fe2
   140008fd3:	cmp    ecx,0x1994000
   140008fd9:	je     0x140008fe2
   140008fdb:	xor    eax,eax
   140008fdd:	add    rsp,0x28
   140008fe1:	ret    
   140008fe2:	call   0x14000924c
   140008fe7:	int3   
   140008fe8:	sub    rsp,0x28
   140008fec:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x140008fb0
   140008ff3:	call   0x140009258
   140008ff8:	xor    eax,eax
   140008ffa:	add    rsp,0x28
   140008ffe:	ret    
   140008fff:	int3   
   140009000:	jmp    QWORD PTR [rip+0x12da]        # 0x14000a2e0
   140009006:	jmp    QWORD PTR [rip+0x12dc]        # 0x14000a2e8
   14000900c:	jmp    QWORD PTR [rip+0x12de]        # 0x14000a2f0
   140009012:	int3   
   140009013:	int3   
   140009014:	xor    eax,eax
   140009016:	ret    
   140009017:	int3   
   140009018:	jmp    QWORD PTR [rip+0x12da]        # 0x14000a2f8
   14000901e:	jmp    QWORD PTR [rip+0x12dc]        # 0x14000a300
   140009024:	int3   
   140009025:	int3   
   140009026:	int3   
   140009027:	int3   
   140009028:	int3   
   140009029:	int3   
   14000902a:	int3   
   14000902b:	int3   
   14000902c:	int3   
   14000902d:	int3   
   14000902e:	int3   
   14000902f:	int3   
   140009030:	movsxd r8,DWORD PTR [rcx+0x3c]
   140009034:	xor    r9d,r9d
   140009037:	mov    r10,rdx
   14000903a:	add    r8,rcx
   14000903d:	movzx  eax,WORD PTR [r8+0x14]
   140009042:	movzx  r11d,WORD PTR [r8+0x6]
   140009047:	add    rax,0x18
   14000904b:	add    rax,r8
   14000904e:	test   r11d,r11d
   140009051:	je     0x140009071
   140009053:	mov    edx,DWORD PTR [rax+0xc]
   140009056:	cmp    r10,rdx
   140009059:	jb     0x140009065
   14000905b:	mov    ecx,DWORD PTR [rax+0x8]
   14000905e:	add    ecx,edx
   140009060:	cmp    r10,rcx
   140009063:	jb     0x140009073
   140009065:	inc    r9d
   140009068:	add    rax,0x28
   14000906c:	cmp    r9d,r11d
   14000906f:	jb     0x140009053
   140009071:	xor    eax,eax
   140009073:	ret    
   140009074:	int3   
   140009075:	int3   
   140009076:	int3   
   140009077:	int3   
   140009078:	int3   
   140009079:	int3   
   14000907a:	int3   
   14000907b:	int3   
   14000907c:	int3   
   14000907d:	int3   
   14000907e:	int3   
   14000907f:	int3   
   140009080:	mov    QWORD PTR [rsp+0x8],rbx
   140009085:	push   rdi
   140009086:	sub    rsp,0x20
   14000908a:	mov    rbx,rcx
   14000908d:	lea    rdi,[rip+0xffffffffffff6f6c]        # 0x140000000
   140009094:	mov    rcx,rdi
   140009097:	call   0x1400090d0
   14000909c:	test   eax,eax
   14000909e:	je     0x1400090c2
   1400090a0:	sub    rbx,rdi
   1400090a3:	mov    rdx,rbx
   1400090a6:	mov    rcx,rdi
   1400090a9:	call   0x140009030
   1400090ae:	test   rax,rax
   1400090b1:	je     0x1400090c2
   1400090b3:	mov    eax,DWORD PTR [rax+0x24]
   1400090b6:	shr    eax,0x1f
   1400090b9:	not    eax
   1400090bb:	and    eax,0x1
   1400090be:	jmp    0x1400090c2
   1400090c0:	xor    eax,eax
   1400090c2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400090c7:	add    rsp,0x20
   1400090cb:	pop    rdi
   1400090cc:	ret    
   1400090cd:	int3   
   1400090ce:	int3   
   1400090cf:	int3   
   1400090d0:	mov    rax,rcx
   1400090d3:	mov    ecx,0x5a4d
   1400090d8:	cmp    WORD PTR [rax],cx
   1400090db:	je     0x1400090e0
   1400090dd:	xor    eax,eax
   1400090df:	ret    
   1400090e0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400090e4:	add    rcx,rax
   1400090e7:	xor    eax,eax
   1400090e9:	cmp    DWORD PTR [rcx],0x4550
   1400090ef:	jne    0x1400090fd
   1400090f1:	mov    edx,0x20b
   1400090f6:	cmp    WORD PTR [rcx+0x18],dx
   1400090fa:	sete   al
   1400090fd:	ret    
   1400090fe:	jmp    QWORD PTR [rip+0x1204]        # 0x14000a308
   140009104:	jmp    QWORD PTR [rip+0x1206]        # 0x14000a310
   14000910a:	int3   
   14000910b:	int3   
   14000910c:	mov    QWORD PTR [rsp+0x20],rbx
   140009111:	push   rbp
   140009112:	mov    rbp,rsp
   140009115:	sub    rsp,0x20
   140009119:	mov    rax,QWORD PTR [rip+0x5f30]        # 0x14000f050
   140009120:	and    QWORD PTR [rbp+0x18],0x0
   140009125:	movabs rbx,0x2b992ddfa232
   14000912f:	cmp    rax,rbx
   140009132:	jne    0x1400091a3
   140009134:	lea    rcx,[rbp+0x18]
   140009138:	call   QWORD PTR [rip+0xeea]        # 0x14000a028
   14000913e:	mov    rax,QWORD PTR [rbp+0x18]
   140009142:	mov    QWORD PTR [rbp+0x10],rax
   140009146:	call   QWORD PTR [rip+0xed4]        # 0x14000a020
   14000914c:	mov    eax,eax
   14000914e:	xor    QWORD PTR [rbp+0x10],rax
   140009152:	call   QWORD PTR [rip+0xec0]        # 0x14000a018
   140009158:	lea    rcx,[rbp+0x20]
   14000915c:	mov    eax,eax
   14000915e:	xor    QWORD PTR [rbp+0x10],rax
   140009162:	call   QWORD PTR [rip+0xea8]        # 0x14000a010
   140009168:	mov    eax,DWORD PTR [rbp+0x20]
   14000916b:	shl    rax,0x20
   14000916f:	lea    rcx,[rbp+0x10]
   140009173:	xor    rax,QWORD PTR [rbp+0x20]
   140009177:	xor    rax,QWORD PTR [rbp+0x10]
   14000917b:	xor    rax,rcx
   14000917e:	movabs rcx,0xffffffffffff
   140009188:	and    rax,rcx
   14000918b:	movabs rcx,0x2b992ddfa233
   140009195:	cmp    rax,rbx
   140009198:	cmove  rax,rcx
   14000919c:	mov    QWORD PTR [rip+0x5ead],rax        # 0x14000f050
   1400091a3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400091a8:	not    rax
   1400091ab:	mov    QWORD PTR [rip+0x5ea6],rax        # 0x14000f058
   1400091b2:	add    rsp,0x20
   1400091b6:	pop    rbp
   1400091b7:	ret    
   1400091b8:	xor    eax,eax
   1400091ba:	ret    
   1400091bb:	int3   
   1400091bc:	jmp    QWORD PTR [rip+0x1156]        # 0x14000a318
   1400091c2:	int3   
   1400091c3:	int3   
   1400091c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400091c9:	push   rdi
   1400091ca:	sub    rsp,0x20
   1400091ce:	lea    rbx,[rip+0x2723]        # 0x14000b8f8
   1400091d5:	lea    rdi,[rip+0x271c]        # 0x14000b8f8
   1400091dc:	jmp    0x1400091ec
   1400091de:	mov    rax,QWORD PTR [rbx]
   1400091e1:	test   rax,rax
   1400091e4:	je     0x1400091e8
   1400091e6:	call   rax
   1400091e8:	add    rbx,0x8
   1400091ec:	cmp    rbx,rdi
   1400091ef:	jb     0x1400091de
   1400091f1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400091f6:	add    rsp,0x20
   1400091fa:	pop    rdi
   1400091fb:	ret    
   1400091fc:	mov    QWORD PTR [rsp+0x8],rbx
   140009201:	push   rdi
   140009202:	sub    rsp,0x20
   140009206:	lea    rbx,[rip+0x26fb]        # 0x14000b908
   14000920d:	lea    rdi,[rip+0x26f4]        # 0x14000b908
   140009214:	jmp    0x140009224
   140009216:	mov    rax,QWORD PTR [rbx]
   140009219:	test   rax,rax
   14000921c:	je     0x140009220
   14000921e:	call   rax
   140009220:	add    rbx,0x8
   140009224:	cmp    rbx,rdi
   140009227:	jb     0x140009216
   140009229:	mov    rbx,QWORD PTR [rsp+0x30]
   14000922e:	add    rsp,0x20
   140009232:	pop    rdi
   140009233:	ret    
   140009234:	jmp    QWORD PTR [rip+0x10e6]        # 0x14000a320
   14000923a:	jmp    QWORD PTR [rip+0x10e8]        # 0x14000a328
   140009240:	jmp    QWORD PTR [rip+0x10ea]        # 0x14000a330
   140009246:	jmp    QWORD PTR [rip+0x10ec]        # 0x14000a338
   14000924c:	jmp    QWORD PTR [rip+0x1106]        # 0x14000a358
   140009252:	jmp    QWORD PTR [rip+0x1108]        # 0x14000a360
   140009258:	jmp    QWORD PTR [rip+0x110a]        # 0x14000a368
   14000925e:	jmp    QWORD PTR [rip+0xde4]        # 0x14000a048
   140009264:	jmp    QWORD PTR [rip+0xde6]        # 0x14000a050
   14000926a:	jmp    QWORD PTR [rip+0xda0]        # 0x14000a010
   140009270:	jmp    QWORD PTR [rip+0xda2]        # 0x14000a018
   140009276:	jmp    QWORD PTR [rip+0xda4]        # 0x14000a020
   14000927c:	jmp    QWORD PTR [rip+0xda6]        # 0x14000a028
   140009282:	int3   
   140009283:	int3   
   140009284:	int3   
   140009285:	int3   
   140009286:	int3   
   140009287:	int3   
   140009288:	int3   
   140009289:	int3   
   14000928a:	int3   
   14000928b:	int3   
   14000928c:	int3   
   14000928d:	int3   
   14000928e:	int3   
   14000928f:	int3   
   140009290:	mov    QWORD PTR [rsp+0x10],rdx
   140009295:	push   rbx
   140009296:	push   rbp
   140009297:	push   rsi
   140009298:	push   rdi
   140009299:	sub    rsp,0x28
   14000929d:	mov    rbp,rdx
   1400092a0:	mov    rbx,QWORD PTR [rbp+0x50]
   1400092a4:	mov    rdi,QWORD PTR [rbp+0x60]
   1400092a8:	cmp    rbx,rdi
   1400092ab:	je     0x1400092c5
   1400092ad:	mov    rsi,QWORD PTR [rbp+0x68]
   1400092b1:	mov    rdx,rbx
   1400092b4:	mov    rcx,rsi
   1400092b7:	call   0x140001770
   1400092bc:	add    rbx,0x20
   1400092c0:	cmp    rbx,rdi
   1400092c3:	jne    0x1400092b1
   1400092c5:	xor    edx,edx
   1400092c7:	xor    ecx,ecx
   1400092c9:	call   0x1400089b8
   1400092ce:	nop
   1400092cf:	int3   
   1400092d0:	rex push rbp
   1400092d2:	sub    rsp,0x20
   1400092d6:	mov    rbp,rdx
   1400092d9:	mov    rdx,QWORD PTR [rbp+0x48]
   1400092dd:	mov    rcx,QWORD PTR [rbp+0x58]
   1400092e1:	call   0x140001df0
   1400092e6:	add    rsp,0x20
   1400092ea:	pop    rbp
   1400092eb:	ret    
   1400092ec:	int3   
   1400092ed:	int3   
   1400092ee:	int3   
   1400092ef:	int3   
   1400092f0:	rex push rbp
   1400092f2:	sub    rsp,0x20
   1400092f6:	mov    rbp,rdx
   1400092f9:	mov    rdx,QWORD PTR [rbp+0x48]
   1400092fd:	mov    rcx,QWORD PTR [rbp+0x58]
   140009301:	call   0x140001df0
   140009306:	add    rsp,0x20
   14000930a:	pop    rbp
   14000930b:	ret    
   14000930c:	int3   
   14000930d:	int3   
   14000930e:	int3   
   14000930f:	int3   
   140009310:	rex push rbp
   140009312:	sub    rsp,0x20
   140009316:	mov    rbp,rdx
   140009319:	mov    rdx,QWORD PTR [rbp+0x48]
   14000931d:	mov    rcx,QWORD PTR [rbp+0x58]
   140009321:	call   0x140001df0
   140009326:	add    rsp,0x20
   14000932a:	pop    rbp
   14000932b:	ret    
   14000932c:	int3   
   14000932d:	int3   
   14000932e:	int3   
   14000932f:	int3   
   140009330:	rex push rbp
   140009332:	sub    rsp,0x20
   140009336:	mov    rbp,rdx
   140009339:	mov    rdx,QWORD PTR [rbp+0x48]
   14000933d:	mov    rcx,QWORD PTR [rbp+0x58]
   140009341:	call   0x140001df0
   140009346:	add    rsp,0x20
   14000934a:	pop    rbp
   14000934b:	ret    
   14000934c:	int3   
   14000934d:	int3   
   14000934e:	int3   
   14000934f:	int3   
   140009350:	rex push rbp
   140009352:	sub    rsp,0x20
   140009356:	mov    rbp,rdx
   140009359:	mov    rdx,QWORD PTR [rbp+0x48]
   14000935d:	mov    rcx,QWORD PTR [rbp+0x58]
   140009361:	call   0x140001df0
   140009366:	add    rsp,0x20
   14000936a:	pop    rbp
   14000936b:	ret    
   14000936c:	int3   
   14000936d:	int3   
   14000936e:	int3   
   14000936f:	int3   
   140009370:	rex push rbp
   140009372:	sub    rsp,0x20
   140009376:	mov    rbp,rdx
   140009379:	mov    rdx,QWORD PTR [rbp+0x48]
   14000937d:	mov    rcx,QWORD PTR [rbp+0x58]
   140009381:	call   0x140001df0
   140009386:	add    rsp,0x20
   14000938a:	pop    rbp
   14000938b:	ret    
   14000938c:	int3   
   14000938d:	int3   
   14000938e:	int3   
   14000938f:	int3   
   140009390:	rex push rbp
   140009392:	sub    rsp,0x20
   140009396:	mov    rbp,rdx
   140009399:	mov    rdx,QWORD PTR [rbp+0x48]
   14000939d:	mov    rcx,QWORD PTR [rbp+0x58]
   1400093a1:	call   0x140001df0
   1400093a6:	add    rsp,0x20
   1400093aa:	pop    rbp
   1400093ab:	ret    
   1400093ac:	int3   
   1400093ad:	int3   
   1400093ae:	int3   
   1400093af:	int3   
   1400093b0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400093b7:	jmp    0x140001cc0
   1400093bc:	mov    rcx,QWORD PTR [rdx+0x40]
   1400093c3:	add    rcx,0x20
   1400093c7:	jmp    0x140001cc0
   1400093cc:	int3   
   1400093cd:	int3   
   1400093ce:	int3   
   1400093cf:	int3   
   1400093d0:	mov    rcx,QWORD PTR [rdx+0x80]
   1400093d7:	jmp    0x140001cc0
   1400093dc:	mov    rcx,QWORD PTR [rdx+0x80]
   1400093e3:	add    rcx,0x20
   1400093e7:	jmp    0x140001cc0
   1400093ec:	mov    rcx,QWORD PTR [rdx+0x80]
   1400093f3:	add    rcx,0x40
   1400093f7:	jmp    0x140001cc0
   1400093fc:	mov    rcx,QWORD PTR [rdx+0x80]
   140009403:	add    rcx,0x60
   140009407:	jmp    0x140001d00
   14000940c:	int3   
   14000940d:	int3   
   14000940e:	int3   
   14000940f:	int3   
   140009410:	mov    rcx,QWORD PTR [rdx+0x40]
   140009417:	rex.W jmp QWORD PTR [rip+0xd9a]        # 0x14000a1b8
   14000941e:	int3   
   14000941f:	int3   
   140009420:	mov    QWORD PTR [rsp+0x10],rdx
   140009425:	push   rbp
   140009426:	sub    rsp,0x20
   14000942a:	mov    rbp,rdx
   14000942d:	mov    rcx,QWORD PTR [rbp+0x68]
   140009431:	mov    QWORD PTR [rbp+0x68],rcx
   140009435:	xor    eax,eax
   140009437:	inc    rcx
   14000943a:	je     0x140009452
   14000943c:	cmp    rcx,0xffffffffffffffff
   140009440:	ja     0x14000944c
   140009442:	call   0x14000887a
   140009447:	test   rax,rax
   14000944a:	jne    0x140009452
   14000944c:	call   QWORD PTR [rip+0xd2e]        # 0x14000a180
   140009452:	mov    QWORD PTR [rbp+0x78],rax
   140009456:	lea    rax,[rip+0xffffffffffff8c59]        # 0x1400020b6
   14000945d:	add    rsp,0x20
   140009461:	pop    rbp
   140009462:	ret    
   140009463:	int3   
   140009464:	mov    QWORD PTR [rsp+0x10],rdx
   140009469:	push   rbx
   14000946a:	push   rbp
   14000946b:	sub    rsp,0x28
   14000946f:	mov    rbp,rdx
   140009472:	mov    rbx,QWORD PTR [rbp+0x60]
   140009476:	cmp    QWORD PTR [rbx+0x18],0x10
   14000947b:	jb     0x140009485
   14000947d:	mov    rcx,QWORD PTR [rbx]
   140009480:	call   0x140008880
   140009485:	mov    QWORD PTR [rbx+0x18],0xf
   14000948d:	mov    QWORD PTR [rbx+0x10],0x0
   140009495:	mov    BYTE PTR [rbx],0x0
   140009498:	xor    edx,edx
   14000949a:	xor    ecx,ecx
   14000949c:	call   0x1400089b8
   1400094a1:	nop
   1400094a2:	int3   
   1400094a3:	int3   
   1400094a4:	int3   
   1400094a5:	int3   
   1400094a6:	int3   
   1400094a7:	int3   
   1400094a8:	int3   
   1400094a9:	int3   
   1400094aa:	int3   
   1400094ab:	int3   
   1400094ac:	int3   
   1400094ad:	int3   
   1400094ae:	int3   
   1400094af:	int3   
   1400094b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400094b5:	push   rbp
   1400094b6:	sub    rsp,0x30
   1400094ba:	mov    rbp,rdx
   1400094bd:	mov    rcx,QWORD PTR [rbp+0x80]
   1400094c4:	call   0x140008880
   1400094c9:	xor    edx,edx
   1400094cb:	xor    ecx,ecx
   1400094cd:	call   0x1400089b8
   1400094d2:	nop
   1400094d3:	int3   
   1400094d4:	int3   
   1400094d5:	int3   
   1400094d6:	int3   
   1400094d7:	int3   
   1400094d8:	int3   
   1400094d9:	int3   
   1400094da:	int3   
   1400094db:	int3   
   1400094dc:	int3   
   1400094dd:	int3   
   1400094de:	int3   
   1400094df:	int3   
   1400094e0:	rex push rbp
   1400094e2:	sub    rsp,0x20
   1400094e6:	mov    rbp,rdx
   1400094e9:	mov    rdx,QWORD PTR [rbp+0x48]
   1400094ed:	mov    rcx,QWORD PTR [rbp+0x58]
   1400094f1:	call   0x140001df0
   1400094f6:	add    rsp,0x20
   1400094fa:	pop    rbp
   1400094fb:	ret    
   1400094fc:	int3   
   1400094fd:	int3   
   1400094fe:	int3   
   1400094ff:	int3   
   140009500:	rex push rbp
   140009502:	sub    rsp,0x20
   140009506:	mov    rbp,rdx
   140009509:	mov    rdx,QWORD PTR [rbp+0x40]
   14000950d:	mov    rcx,QWORD PTR [rbp+0x48]
   140009511:	call   0x140001df0
   140009516:	add    rsp,0x20
   14000951a:	pop    rbp
   14000951b:	ret    
   14000951c:	rex push rbp
   14000951e:	sub    rsp,0x20
   140009522:	mov    rbp,rdx
   140009525:	mov    rdx,QWORD PTR [rbp+0x40]
   140009529:	mov    rcx,QWORD PTR [rbp+0x48]
   14000952d:	call   0x140001df0
   140009532:	add    rsp,0x20
   140009536:	pop    rbp
   140009537:	ret    
   140009538:	int3   
   140009539:	int3   
   14000953a:	int3   
   14000953b:	int3   
   14000953c:	int3   
   14000953d:	int3   
   14000953e:	int3   
   14000953f:	int3   
   140009540:	lea    rcx,[rdx+0x28]
   140009547:	jmp    0x140003e80
   14000954c:	lea    rcx,[rdx+0x28]
   140009553:	jmp    0x140003ed0
   140009558:	mov    QWORD PTR [rsp+0x10],rdx
   14000955d:	push   rbp
   14000955e:	sub    rsp,0x20
   140009562:	mov    rbp,rdx
   140009565:	mov    rdx,QWORD PTR [rbp+0x70]
   140009569:	mov    rax,QWORD PTR [rdx]
   14000956c:	movsxd rcx,DWORD PTR [rax+0x4]
   140009570:	add    rcx,rdx
   140009573:	mov    r8b,0x1
   140009576:	mov    edx,0x4
   14000957b:	call   QWORD PTR [rip+0xb8f]        # 0x14000a110
   140009581:	nop
   140009582:	lea    rax,[rip+0xffffffffffffa099]        # 0x140003622
   140009589:	add    rsp,0x20
   14000958d:	pop    rbp
   14000958e:	ret    
   14000958f:	int3   
   140009590:	rex push rbp
   140009592:	sub    rsp,0x20
   140009596:	mov    rbp,rdx
   140009599:	mov    eax,DWORD PTR [rbp+0x20]
   14000959c:	and    eax,0x1
   14000959f:	test   eax,eax
   1400095a1:	je     0x1400095b0
   1400095a3:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400095a7:	mov    rcx,QWORD PTR [rbp+0x50]
   1400095ab:	call   0x140001cc0
   1400095b0:	add    rsp,0x20
   1400095b4:	pop    rbp
   1400095b5:	ret    
   1400095b6:	int3   
   1400095b7:	int3   
   1400095b8:	int3   
   1400095b9:	int3   
   1400095ba:	int3   
   1400095bb:	int3   
   1400095bc:	int3   
   1400095bd:	int3   
   1400095be:	int3   
   1400095bf:	int3   
   1400095c0:	rex push rbp
   1400095c2:	sub    rsp,0x20
   1400095c6:	mov    rbp,rdx
   1400095c9:	mov    eax,DWORD PTR [rbp+0x20]
   1400095cc:	and    eax,0x1
   1400095cf:	test   eax,eax
   1400095d1:	je     0x1400095e0
   1400095d3:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400095d7:	mov    rcx,QWORD PTR [rbp+0x50]
   1400095db:	call   0x140001cc0
   1400095e0:	add    rsp,0x20
   1400095e4:	pop    rbp
   1400095e5:	ret    
   1400095e6:	int3   
   1400095e7:	int3   
   1400095e8:	int3   
   1400095e9:	int3   
   1400095ea:	int3   
   1400095eb:	int3   
   1400095ec:	int3   
   1400095ed:	int3   
   1400095ee:	int3   
   1400095ef:	int3   
   1400095f0:	lea    rcx,[rdx+0x50]
   1400095f7:	rex.W jmp QWORD PTR [rip+0xa82]        # 0x14000a080
   1400095fe:	int3   
   1400095ff:	int3   
   140009600:	mov    rcx,QWORD PTR [rdx+0x40]
   140009607:	rex.W jmp QWORD PTR [rip+0xaca]        # 0x14000a0d8
   14000960e:	int3   
   14000960f:	int3   
   140009610:	rex push rbp
   140009612:	sub    rsp,0x20
   140009616:	mov    rbp,rdx
   140009619:	mov    eax,DWORD PTR [rbp+0x20]
   14000961c:	and    eax,0x1
   14000961f:	test   eax,eax
   140009621:	je     0x140009638
   140009623:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140009627:	mov    rcx,QWORD PTR [rbp+0x60]
   14000962b:	add    rcx,0xb8
   140009632:	call   QWORD PTR [rip+0xad0]        # 0x14000a108
   140009638:	add    rsp,0x20
   14000963c:	pop    rbp
   14000963d:	ret    
   14000963e:	mov    rcx,QWORD PTR [rdx+0x60]
   140009645:	add    rcx,0x20
   140009649:	rex.W jmp QWORD PTR [rip+0xae0]        # 0x14000a130
   140009650:	mov    rcx,QWORD PTR [rdx+0x30]
   140009657:	rex.W jmp QWORD PTR [rip+0xa7a]        # 0x14000a0d8
   14000965e:	mov    rcx,QWORD PTR [rdx+0x60]
   140009665:	add    rcx,0x18
   140009669:	jmp    0x140003db0
   14000966e:	int3   
   14000966f:	int3   
   140009670:	mov    rcx,QWORD PTR [rdx+0x40]
   140009677:	jmp    0x140003e80
   14000967c:	int3   
   14000967d:	int3   
   14000967e:	int3   
   14000967f:	int3   
   140009680:	lea    rcx,[rdx+0x38]
   140009687:	jmp    0x140001cc0
   14000968c:	int3   
   14000968d:	int3   
   14000968e:	int3   
   14000968f:	int3   
   140009690:	lea    rcx,[rdx+0x50]
   140009697:	jmp    0x140001cc0
   14000969c:	lea    rcx,[rdx+0x30]
   1400096a3:	jmp    0x140001cc0
   1400096a8:	lea    rcx,[rdx+0x70]
   1400096af:	jmp    0x140001cc0
   1400096b4:	int3   
   1400096b5:	int3   
   1400096b6:	int3   
   1400096b7:	int3   
   1400096b8:	int3   
   1400096b9:	int3   
   1400096ba:	int3   
   1400096bb:	int3   
   1400096bc:	int3   
   1400096bd:	int3   
   1400096be:	int3   
   1400096bf:	int3   
   1400096c0:	rex push rbp
   1400096c2:	sub    rsp,0x20
   1400096c6:	mov    rbp,rdx
   1400096c9:	mov    eax,DWORD PTR [rbp+0x20]
   1400096cc:	and    eax,0x1
   1400096cf:	test   eax,eax
   1400096d1:	je     0x1400096e3
   1400096d3:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400096d7:	mov    rcx,QWORD PTR [rbp+0x140]
   1400096de:	call   0x140001cc0
   1400096e3:	add    rsp,0x20
   1400096e7:	pop    rbp
   1400096e8:	ret    
   1400096e9:	int3   
   1400096ea:	int3   
   1400096eb:	int3   
   1400096ec:	int3   
   1400096ed:	int3   
   1400096ee:	int3   
   1400096ef:	int3   
   1400096f0:	lea    rcx,[rdx+0x50]
   1400096f7:	jmp    0x140001cc0
   1400096fc:	lea    rcx,[rdx+0x30]
   140009703:	jmp    0x140001cc0
   140009708:	lea    rcx,[rdx+0x30]
   14000970f:	jmp    0x140001cc0
   140009714:	lea    rcx,[rdx+0x80]
   14000971b:	jmp    0x140003fb0
   140009720:	lea    rcx,[rdx+0x40]
   140009727:	jmp    0x140003ea0
   14000972c:	int3   
   14000972d:	int3   
   14000972e:	int3   
   14000972f:	int3   
   140009730:	lea    rcx,[rdx+0x50]
   140009737:	jmp    0x140001cc0
   14000973c:	int3   
   14000973d:	int3   
   14000973e:	int3   
   14000973f:	int3   
   140009740:	lea    rcx,[rdx+0x50]
   140009747:	jmp    0x140001cc0
   14000974c:	int3   
   14000974d:	int3   
   14000974e:	int3   
   14000974f:	int3   
   140009750:	mov    rcx,QWORD PTR [rdx+0x20]
   140009757:	jmp    0x140006800
   14000975c:	int3   
   14000975d:	int3   
   14000975e:	int3   
   14000975f:	int3   
   140009760:	mov    QWORD PTR [rsp+0x10],rdx
   140009765:	push   rbp
   140009766:	sub    rsp,0x30
   14000976a:	mov    rbp,rdx
   14000976d:	mov    rcx,QWORD PTR [rbp+0x50]
   140009771:	call   0x140002580
   140009776:	xor    edx,edx
   140009778:	xor    ecx,ecx
   14000977a:	call   0x1400089b8
   14000977f:	nop
   140009780:	rex push rbp
   140009782:	sub    rsp,0x20
   140009786:	mov    rbp,rdx
   140009789:	mov    rdx,QWORD PTR [rbp+0x70]
   14000978d:	mov    rcx,QWORD PTR [rbp+0x68]
   140009791:	call   0x140001df0
   140009796:	add    rsp,0x20
   14000979a:	pop    rbp
   14000979b:	ret    
   14000979c:	mov    QWORD PTR [rsp+0x10],rdx
   1400097a1:	push   rbx
   1400097a2:	push   rbp
   1400097a3:	push   rsi
   1400097a4:	push   rdi
   1400097a5:	sub    rsp,0x28
   1400097a9:	mov    rbp,rdx
   1400097ac:	mov    rbx,QWORD PTR [rbp+0x60]
   1400097b0:	mov    rdi,QWORD PTR [rbp+0x70]
   1400097b4:	cmp    rbx,rdi
   1400097b7:	je     0x1400097d4
   1400097b9:	mov    rsi,QWORD PTR [rbp+0x78]
   1400097bd:	nop    DWORD PTR [rax]
   1400097c0:	mov    rdx,rbx
   1400097c3:	mov    rcx,rsi
   1400097c6:	call   0x140001770
   1400097cb:	add    rbx,0x20
   1400097cf:	cmp    rbx,rdi
   1400097d2:	jne    0x1400097c0
   1400097d4:	xor    edx,edx
   1400097d6:	xor    ecx,ecx
   1400097d8:	call   0x1400089b8
   1400097dd:	nop
   1400097de:	int3   
   1400097df:	int3   
   1400097e0:	rex push rbp
   1400097e2:	sub    rsp,0x20
   1400097e6:	mov    rbp,rdx
   1400097e9:	mov    rdx,QWORD PTR [rbp+0x48]
   1400097ed:	mov    rcx,QWORD PTR [rbp+0x58]
   1400097f1:	call   0x140001df0
   1400097f6:	add    rsp,0x20
   1400097fa:	pop    rbp
   1400097fb:	ret    
   1400097fc:	int3   
   1400097fd:	int3   
   1400097fe:	int3   
   1400097ff:	int3   
   140009800:	rex push rbp
   140009802:	sub    rsp,0x20
   140009806:	mov    rbp,rdx
   140009809:	mov    rdx,QWORD PTR [rbp+0x48]
   14000980d:	mov    rcx,QWORD PTR [rbp+0x58]
   140009811:	call   0x140001df0
   140009816:	add    rsp,0x20
   14000981a:	pop    rbp
   14000981b:	ret    
   14000981c:	int3   
   14000981d:	int3   
   14000981e:	int3   
   14000981f:	int3   
   140009820:	rex push rbp
   140009822:	sub    rsp,0x20
   140009826:	mov    rbp,rdx
   140009829:	mov    rdx,QWORD PTR [rbp+0x48]
   14000982d:	mov    rcx,QWORD PTR [rbp+0x58]
   140009831:	call   0x140001df0
   140009836:	add    rsp,0x20
   14000983a:	pop    rbp
   14000983b:	ret    
   14000983c:	int3   
   14000983d:	int3   
   14000983e:	int3   
   14000983f:	int3   
   140009840:	mov    QWORD PTR [rsp+0x10],rdx
   140009845:	push   rbp
   140009846:	sub    rsp,0x20
   14000984a:	mov    rbp,rdx
   14000984d:	mov    rcx,QWORD PTR [rbp+0x68]
   140009851:	mov    QWORD PTR [rbp+0x68],rcx
   140009855:	xor    eax,eax
   140009857:	inc    rcx
   14000985a:	je     0x14000987e
   14000985c:	movabs rax,0x7fffffffffffffff
   140009866:	cmp    rcx,rax
   140009869:	ja     0x140009878
   14000986b:	add    rcx,rcx
   14000986e:	call   0x14000887a
   140009873:	test   rax,rax
   140009876:	jne    0x14000987e
   140009878:	call   QWORD PTR [rip+0x902]        # 0x14000a180
   14000987e:	mov    QWORD PTR [rbp+0x78],rax
   140009882:	lea    rax,[rip+0xffffffffffffd5a3]        # 0x140006e2c
   140009889:	add    rsp,0x20
   14000988d:	pop    rbp
   14000988e:	ret    
   14000988f:	int3   
   140009890:	mov    QWORD PTR [rsp+0x10],rdx
   140009895:	push   rbx
   140009896:	push   rbp
   140009897:	sub    rsp,0x28
   14000989b:	mov    rbp,rdx
   14000989e:	mov    rbx,QWORD PTR [rbp+0x60]
   1400098a2:	cmp    QWORD PTR [rbx+0x18],0x8
   1400098a7:	jb     0x1400098b1
   1400098a9:	mov    rcx,QWORD PTR [rbx]
   1400098ac:	call   0x140008880
   1400098b1:	mov    QWORD PTR [rbx+0x18],0x7
   1400098b9:	mov    QWORD PTR [rbx+0x10],0x0
   1400098c1:	xor    eax,eax
   1400098c3:	mov    WORD PTR [rbx],ax
   1400098c6:	xor    edx,edx
   1400098c8:	xor    ecx,ecx
   1400098ca:	call   0x1400089b8
   1400098cf:	nop
   1400098d0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400098d7:	jmp    0x140008880
   1400098dc:	int3   
   1400098dd:	int3   
   1400098de:	int3   
   1400098df:	int3   
   1400098e0:	rex push rbp
   1400098e2:	sub    rsp,0x20
   1400098e6:	mov    rbp,rdx
   1400098e9:	mov    eax,DWORD PTR [rbp+0x20]
   1400098ec:	and    eax,0x1
   1400098ef:	test   eax,eax
   1400098f1:	je     0x140009903
   1400098f3:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400098f7:	mov    rcx,QWORD PTR [rbp+0x1430]
   1400098fe:	call   0x1400068c0
   140009903:	add    rsp,0x20
   140009907:	pop    rbp
   140009908:	ret    
   140009909:	mov    rcx,QWORD PTR [rdx+0x1400]
   140009910:	jmp    0x140006800
   140009915:	mov    rcx,QWORD PTR [rdx+0x1440]
   14000991c:	jmp    0x140006870
   140009921:	int3   
   140009922:	int3   
   140009923:	int3   
   140009924:	int3   
   140009925:	int3   
   140009926:	int3   
   140009927:	int3   
   140009928:	int3   
   140009929:	int3   
   14000992a:	int3   
   14000992b:	int3   
   14000992c:	int3   
   14000992d:	int3   
   14000992e:	int3   
   14000992f:	int3   
   140009930:	mov    rcx,QWORD PTR [rdx+0x13e0]
   140009937:	jmp    0x140006870
   14000993c:	int3   
   14000993d:	int3   
   14000993e:	int3   
   14000993f:	int3   
   140009940:	mov    rcx,QWORD PTR [rdx+0x58]
   140009947:	jmp    0x140008880
   14000994c:	int3   
   14000994d:	int3   
   14000994e:	int3   
   14000994f:	int3   
   140009950:	lea    rcx,[rdx+0x28]
   140009957:	jmp    0x140006840
   14000995c:	lea    rcx,[rdx+0x48]
   140009963:	jmp    0x140001d00
   140009968:	lea    rcx,[rdx+0xa0]
   14000996f:	jmp    0x140001d10
   140009974:	lea    rcx,[rdx+0x78]
   14000997b:	jmp    0x140001cc0
   140009980:	mov    QWORD PTR [rsp+0x10],rdx
   140009985:	push   rbx
   140009986:	push   rbp
   140009987:	push   rdi
   140009988:	sub    rsp,0x20
   14000998c:	mov    rbp,rdx
   14000998f:	mov    rbx,QWORD PTR [rbp+0x70]
   140009993:	mov    rcx,rbx
   140009996:	call   0x1400034a0
   14000999b:	mov    edi,eax
   14000999d:	mov    r8d,eax
   1400099a0:	lea    rdx,[rip+0x13f1]        # 0x14000ad98
   1400099a7:	lea    rcx,[rbp+0xa0]
   1400099ae:	call   QWORD PTR [rip+0x8d4]        # 0x14000a288
   1400099b4:	mov    QWORD PTR [rbp+0x40],0xf
   1400099bc:	mov    QWORD PTR [rbp+0x38],0x0
   1400099c4:	mov    BYTE PTR [rbp+0x28],0x0
   1400099c8:	cmp    BYTE PTR [rbp+0xa0],0x0
   1400099cf:	jne    0x1400099d6
   1400099d1:	xor    r8d,r8d
   1400099d4:	jmp    0x1400099eb
   1400099d6:	lea    rax,[rbp+0xa0]
   1400099dd:	or     r8,0xffffffffffffffff
   1400099e1:	inc    r8
   1400099e4:	cmp    BYTE PTR [rax+r8*1],0x0
   1400099e9:	jne    0x1400099e1
   1400099eb:	lea    rdx,[rbp+0xa0]
   1400099f2:	lea    rcx,[rbp+0x28]
   1400099f6:	call   0x140002b00
   1400099fb:	nop
   1400099fc:	mov    rax,QWORD PTR [rbx]
   1400099ff:	mov    rcx,rbx
   140009a02:	call   QWORD PTR [rax+0x8]
   140009a05:	cmp    BYTE PTR [rax],0x0
   140009a08:	jne    0x140009a0f
   140009a0a:	xor    r8d,r8d
   140009a0d:	jmp    0x140009a1d
   140009a0f:	or     r8,0xffffffffffffffff
   140009a13:	inc    r8
   140009a16:	cmp    BYTE PTR [rax+r8*1],0x0
   140009a1b:	jne    0x140009a13
   140009a1d:	mov    rdx,rax
   140009a20:	lea    rcx,[rbp+0x28]
   140009a24:	call   0x140004650
   140009a29:	mov    r8d,0x9
   140009a2f:	lea    rdx,[rip+0x1372]        # 0x14000ada8
   140009a36:	lea    rcx,[rbp+0x28]
   140009a3a:	call   0x140004650
   140009a3f:	lea    rcx,[rbp+0x28]
   140009a43:	call   0x140005000
   140009a48:	mov    ecx,edi
   140009a4a:	call   QWORD PTR [rip+0x830]        # 0x14000a280
   140009a50:	nop
   140009a51:	lea    rcx,[rdx+0x28]
   140009a58:	jmp    0x140001cc0
   140009a5d:	mov    QWORD PTR [rsp+0x10],rdx
   140009a62:	push   rbp
   140009a63:	sub    rsp,0x20
   140009a67:	mov    rbp,rdx
   140009a6a:	mov    QWORD PTR [rbp+0x40],0xf
   140009a72:	mov    QWORD PTR [rbp+0x38],0x0
   140009a7a:	mov    BYTE PTR [rbp+0x28],0x0
   140009a7e:	mov    r8d,0x15
   140009a84:	lea    rdx,[rip+0x132d]        # 0x14000adb8
   140009a8b:	lea    rcx,[rbp+0x28]
   140009a8f:	call   0x140002b00
   140009a94:	nop
   140009a95:	mov    rcx,QWORD PTR [rbp+0x60]
   140009a99:	mov    rax,QWORD PTR [rcx]
   140009a9c:	call   QWORD PTR [rax+0x8]
   140009a9f:	cmp    BYTE PTR [rax],0x0
   140009aa2:	jne    0x140009aa9
   140009aa4:	xor    r8d,r8d
   140009aa7:	jmp    0x140009aba
   140009aa9:	or     r8,0xffffffffffffffff
   140009aad:	nop    DWORD PTR [rax]
   140009ab0:	inc    r8
   140009ab3:	cmp    BYTE PTR [rax+r8*1],0x0
   140009ab8:	jne    0x140009ab0
   140009aba:	mov    rdx,rax
   140009abd:	lea    rcx,[rbp+0x28]
   140009ac1:	call   0x140004650
   140009ac6:	mov    r8d,0x9
   140009acc:	lea    rdx,[rip+0x12d5]        # 0x14000ada8
   140009ad3:	lea    rcx,[rbp+0x28]
   140009ad7:	call   0x140004650
   140009adc:	lea    rcx,[rbp+0x28]
   140009ae0:	call   0x140005000
   140009ae5:	mov    ecx,0x1
   140009aea:	call   QWORD PTR [rip+0x790]        # 0x14000a280
   140009af0:	nop
   140009af1:	lea    rcx,[rdx+0x28]
   140009af8:	jmp    0x140001cc0
   140009afd:	mov    QWORD PTR [rsp+0x10],rdx
   140009b02:	push   rbp
   140009b03:	sub    rsp,0x20
   140009b07:	mov    rbp,rdx
   140009b0a:	mov    QWORD PTR [rbp+0x40],0xf
   140009b12:	mov    QWORD PTR [rbp+0x38],0x0
   140009b1a:	mov    BYTE PTR [rbp+0x28],0x0
   140009b1e:	mov    r8d,0x24
   140009b24:	lea    rdx,[rip+0x12a5]        # 0x14000add0
   140009b2b:	lea    rcx,[rbp+0x28]
   140009b2f:	call   0x140002b00
   140009b34:	nop
   140009b35:	mov    r8d,0x9
   140009b3b:	lea    rdx,[rip+0x1266]        # 0x14000ada8
   140009b42:	lea    rcx,[rbp+0x28]
   140009b46:	call   0x140004650
   140009b4b:	lea    rcx,[rbp+0x28]
   140009b4f:	call   0x140005000
   140009b54:	mov    ecx,0x1
   140009b59:	call   QWORD PTR [rip+0x721]        # 0x14000a280
   140009b5f:	nop
   140009b60:	lea    rcx,[rdx+0x28]
   140009b67:	jmp    0x140001cc0
   140009b6c:	rex push rbp
   140009b6e:	sub    rsp,0x20
   140009b72:	mov    rbp,rdx
   140009b75:	mov    ecx,0x8
   140009b7a:	call   0x140008ed0
   140009b7f:	nop
   140009b80:	add    rsp,0x20
   140009b84:	pop    rbp
   140009b85:	ret    
   140009b86:	int3   
   140009b87:	rex push rbp
   140009b89:	sub    rsp,0x20
   140009b8d:	mov    rbp,rdx
   140009b90:	mov    rax,QWORD PTR [rcx]
   140009b93:	mov    rdx,rcx
   140009b96:	mov    ecx,DWORD PTR [rax]
   140009b98:	call   0x140009000
   140009b9d:	nop
   140009b9e:	add    rsp,0x20
   140009ba2:	pop    rbp
   140009ba3:	ret    
   140009ba4:	int3   
   140009ba5:	rex push rbp
   140009ba7:	sub    rsp,0x20
   140009bab:	mov    rbp,rdx
   140009bae:	cmp    DWORD PTR [rbp+0x20],0x0
   140009bb2:	jne    0x140009bca
   140009bb4:	mov    r9,QWORD PTR [rbp+0x78]
   140009bb8:	mov    r8d,DWORD PTR [rbp+0x70]
   140009bbc:	mov    rdx,QWORD PTR [rbp+0x68]
   140009bc0:	mov    rcx,QWORD PTR [rbp+0x60]
   140009bc4:	call   0x140008f64
   140009bc9:	nop
   140009bca:	add    rsp,0x20
   140009bce:	pop    rbp
   140009bcf:	ret    
   140009bd0:	int3   
   140009bd1:	rex push rbp
   140009bd3:	sub    rsp,0x20
   140009bd7:	mov    rbp,rdx
   140009bda:	mov    QWORD PTR [rbp+0x38],rcx
   140009bde:	mov    QWORD PTR [rbp+0x28],rcx
   140009be2:	mov    rax,QWORD PTR [rbp+0x28]
   140009be6:	mov    rcx,QWORD PTR [rax]
   140009be9:	mov    QWORD PTR [rbp+0x30],rcx
   140009bed:	mov    rax,QWORD PTR [rbp+0x30]
   140009bf1:	cmp    DWORD PTR [rax],0xe06d7363
   140009bf7:	je     0x140009c05
   140009bf9:	mov    DWORD PTR [rbp+0x20],0x0
   140009c00:	mov    eax,DWORD PTR [rbp+0x20]
   140009c03:	jmp    0x140009c0b
   140009c05:	call   0x14000924c
   140009c0a:	nop
   140009c0b:	add    rsp,0x20
   140009c0f:	pop    rbp
   140009c10:	ret    
   140009c11:	int3   
   140009c12:	int3   
   140009c13:	int3   
   140009c14:	int3   
   140009c15:	int3   
   140009c16:	int3   
   140009c17:	int3   
   140009c18:	int3   
   140009c19:	int3   
   140009c1a:	int3   
   140009c1b:	int3   
   140009c1c:	int3   
   140009c1d:	int3   
   140009c1e:	int3   
   140009c1f:	int3   
   140009c20:	rex push rbp
   140009c22:	sub    rsp,0x20
   140009c26:	mov    rbp,rdx
   140009c29:	mov    rax,QWORD PTR [rcx]
   140009c2c:	xor    ecx,ecx
   140009c2e:	cmp    DWORD PTR [rax],0xc0000005
   140009c34:	sete   cl
   140009c37:	mov    eax,ecx
   140009c39:	add    rsp,0x20
   140009c3d:	pop    rbp
   140009c3e:	ret    
   140009c3f:	int3   
   140009c40:	lea    rax,[rip+0xa79]        # 0x14000a6c0
   140009c47:	mov    QWORD PTR [rip+0x53b2],rax        # 0x14000f000
   140009c4e:	ret    
   140009c4f:	int3   
   140009c50:	lea    rax,[rip+0xa69]        # 0x14000a6c0
   140009c57:	mov    QWORD PTR [rip+0x53aa],rax        # 0x14000f008
   140009c5e:	ret    
   140009c5f:	int3   
   140009c60:	lea    rax,[rip+0xa59]        # 0x14000a6c0
   140009c67:	mov    QWORD PTR [rip+0x53a2],rax        # 0x14000f010
   140009c6e:	ret    
   140009c6f:	int3   
   140009c70:	lea    rax,[rip+0xa49]        # 0x14000a6c0
   140009c77:	mov    QWORD PTR [rip+0x5382],rax        # 0x14000f000
   140009c7e:	ret    
   140009c7f:	int3   
   140009c80:	lea    rax,[rip+0xa39]        # 0x14000a6c0
   140009c87:	mov    QWORD PTR [rip+0x537a],rax        # 0x14000f008
   140009c8e:	ret    
   140009c8f:	int3   
   140009c90:	lea    rax,[rip+0xa29]        # 0x14000a6c0
   140009c97:	mov    QWORD PTR [rip+0x5372],rax        # 0x14000f010
   140009c9e:	ret    
   140009c9f:	int3   
   140009ca0:	lea    rax,[rip+0xa19]        # 0x14000a6c0
   140009ca7:	mov    QWORD PTR [rip+0x5352],rax        # 0x14000f000
   140009cae:	ret    
   140009caf:	int3   
   140009cb0:	lea    rax,[rip+0xa09]        # 0x14000a6c0
   140009cb7:	mov    QWORD PTR [rip+0x534a],rax        # 0x14000f008
   140009cbe:	ret    
   140009cbf:	int3   
   140009cc0:	lea    rax,[rip+0x9f9]        # 0x14000a6c0
   140009cc7:	mov    QWORD PTR [rip+0x5342],rax        # 0x14000f010
   140009cce:	ret    
   140009ccf:	int3   
   140009cd0:	lea    rax,[rip+0x9e9]        # 0x14000a6c0
   140009cd7:	mov    QWORD PTR [rip+0x5322],rax        # 0x14000f000
   140009cde:	ret    
   140009cdf:	int3   
   140009ce0:	lea    rax,[rip+0x9d9]        # 0x14000a6c0
   140009ce7:	mov    QWORD PTR [rip+0x531a],rax        # 0x14000f008
   140009cee:	ret    
   140009cef:	int3   
   140009cf0:	lea    rax,[rip+0x9c9]        # 0x14000a6c0
   140009cf7:	mov    QWORD PTR [rip+0x5312],rax        # 0x14000f010
   140009cfe:	ret    
   140009cff:	int3   
   140009d00:	lea    rax,[rip+0x9b9]        # 0x14000a6c0
   140009d07:	mov    QWORD PTR [rip+0x52f2],rax        # 0x14000f000
   140009d0e:	ret    
   140009d0f:	int3   
   140009d10:	lea    rax,[rip+0x9a9]        # 0x14000a6c0
   140009d17:	mov    QWORD PTR [rip+0x52ea],rax        # 0x14000f008
   140009d1e:	ret    
   140009d1f:	int3   
   140009d20:	lea    rax,[rip+0x999]        # 0x14000a6c0
   140009d27:	mov    QWORD PTR [rip+0x52e2],rax        # 0x14000f010
   140009d2e:	ret    
   140009d2f:	int3   
   140009d30:	rex push rbx
   140009d32:	sub    rsp,0x20
   140009d36:	jmp    0x140009d67
   140009d38:	mov    rax,QWORD PTR [rbx]
   140009d3b:	mov    rcx,QWORD PTR [rbx+0x8]
   140009d3f:	mov    QWORD PTR [rip+0x587a],rax        # 0x14000f5c0
   140009d46:	mov    rax,QWORD PTR [rcx]
   140009d49:	call   QWORD PTR [rax+0x10]
   140009d4c:	test   rax,rax
   140009d4f:	je     0x140009d5f
   140009d51:	mov    r8,QWORD PTR [rax]
   140009d54:	mov    edx,0x1
   140009d59:	mov    rcx,rax
   140009d5c:	call   QWORD PTR [r8]
   140009d5f:	mov    rcx,rbx
   140009d62:	call   0x140008880
   140009d67:	mov    rbx,QWORD PTR [rip+0x5852]        # 0x14000f5c0
   140009d6e:	test   rbx,rbx
   140009d71:	jne    0x140009d38
   140009d73:	add    rsp,0x20
   140009d77:	pop    rbx
   140009d78:	ret    

Disassembly of section .rdata:

000000014000a000 <.rdata>:
   14000a000:	and    al,0xda
	...
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	xor    dh,ah
   14000a012:	add    BYTE PTR [rax],al
   14000a014:	add    BYTE PTR [rax],al
   14000a016:	add    BYTE PTR [rax],al
   14000a018:	rex.WX out 0x0,al
   14000a01b:	add    BYTE PTR [rax],al
   14000a01d:	add    BYTE PTR [rax],al
   14000a01f:	add    BYTE PTR [rax-0x1a],ah
   14000a022:	add    BYTE PTR [rax],al
   14000a024:	add    BYTE PTR [rax],al
   14000a026:	add    BYTE PTR [rax],al
   14000a028:	jbe    0x14000a010
   14000a02a:	add    BYTE PTR [rax],al
   14000a02c:	add    BYTE PTR [rax],al
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	rex.X fiadd DWORD PTR [rax]
   14000a033:	add    BYTE PTR [rax],al
   14000a035:	add    BYTE PTR [rax],al
   14000a037:	add    BYTE PTR [rax-0x26],dl
   14000a03a:	add    BYTE PTR [rax],al
   14000a03c:	add    BYTE PTR [rax],al
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	data16 fiadd DWORD PTR [rax]
   14000a043:	add    BYTE PTR [rax],al
   14000a045:	add    BYTE PTR [rax],al
   14000a047:	add    BYTE PTR [rax],dl
   14000a049:	out    0x0,al
   14000a04b:	add    BYTE PTR [rax],al
   14000a04d:	add    BYTE PTR [rax],al
   14000a04f:	add    BYTE PTR [rax],ah
   14000a051:	out    0x0,al
	...
   14000a05f:	add    BYTE PTR [rsi+0xda],bh
   14000a065:	add    BYTE PTR [rax],al
   14000a067:	add    al,ah
   14000a069:	fiadd  DWORD PTR [rax]
   14000a06b:	add    BYTE PTR [rax],al
   14000a06d:	add    BYTE PTR [rax],al
   14000a06f:	add    BYTE PTR [rax],al
   14000a071:	fild   DWORD PTR [rax]
   14000a073:	add    BYTE PTR [rax],al
   14000a075:	add    BYTE PTR [rax],al
   14000a077:	add    BYTE PTR [rax],ah
   14000a079:	fild   DWORD PTR [rax]
   14000a07b:	add    BYTE PTR [rax],al
   14000a07d:	add    BYTE PTR [rax],al
   14000a07f:	add    BYTE PTR [rbx+rbx*8],bh
   14000a082:	add    BYTE PTR [rax],al
   14000a084:	add    BYTE PTR [rax],al
   14000a086:	add    BYTE PTR [rax],al
   14000a088:	push   rsi
   14000a089:	fild   DWORD PTR [rax]
   14000a08b:	add    BYTE PTR [rax],al
   14000a08d:	add    BYTE PTR [rax],al
   14000a08f:	add    BYTE PTR [rax-0x25],bh
   14000a092:	add    BYTE PTR [rax],al
   14000a094:	add    BYTE PTR [rax],al
   14000a096:	add    BYTE PTR [rax],al
   14000a098:	xchg   esi,eax
   14000a099:	fild   DWORD PTR [rax]
   14000a09b:	add    BYTE PTR [rax],al
   14000a09d:	add    BYTE PTR [rax],al
   14000a09f:	add    dl,cl
   14000a0a1:	fild   DWORD PTR [rax]
   14000a0a3:	add    BYTE PTR [rax],al
   14000a0a5:	add    BYTE PTR [rax],al
   14000a0a7:	add    dh,dh
   14000a0a9:	fild   DWORD PTR [rax]
   14000a0ab:	add    BYTE PTR [rax],al
   14000a0ad:	add    BYTE PTR [rax],al
   14000a0af:	add    BYTE PTR [rsp+rbx*8],dh
   14000a0b2:	add    BYTE PTR [rax],al
   14000a0b4:	add    BYTE PTR [rax],al
   14000a0b6:	add    BYTE PTR [rax],al
   14000a0b8:	jb     0x14000a096
   14000a0ba:	add    BYTE PTR [rax],al
   14000a0bc:	add    BYTE PTR [rax],al
   14000a0be:	add    BYTE PTR [rax],al
   14000a0c0:	test   al,0xdc
   14000a0c2:	add    BYTE PTR [rax],al
   14000a0c4:	add    BYTE PTR [rax],al
   14000a0c6:	add    BYTE PTR [rax],al
   14000a0c8:	(bad)  
   14000a0c9:	fadd   QWORD PTR [rax]
   14000a0cb:	add    BYTE PTR [rax],al
   14000a0cd:	add    BYTE PTR [rax],al
   14000a0cf:	add    BYTE PTR [rax],bl
   14000a0d1:	fld    QWORD PTR [rax]
   14000a0d3:	add    BYTE PTR [rax],al
   14000a0d5:	add    BYTE PTR [rax],al
   14000a0d7:	add    BYTE PTR [rbp+rbx*8+0x0],dl
   14000a0db:	add    BYTE PTR [rax],al
   14000a0dd:	add    BYTE PTR [rax],al
   14000a0df:	add    BYTE PTR [rax+0xdd],dl
   14000a0e5:	add    BYTE PTR [rax],al
   14000a0e7:	add    ah,bl
   14000a0e9:	fld    QWORD PTR [rax]
   14000a0eb:	add    BYTE PTR [rax],al
   14000a0ed:	add    BYTE PTR [rax],al
   14000a0ef:	add    BYTE PTR [rsi],bl
   14000a0f1:	fiadd  WORD PTR [rax]
   14000a0f3:	add    BYTE PTR [rax],al
   14000a0f5:	add    BYTE PTR [rax],al
   14000a0f7:	add    BYTE PTR [rsi-0x22],ah
   14000a0fa:	add    BYTE PTR [rax],al
   14000a0fc:	add    BYTE PTR [rax],al
   14000a0fe:	add    BYTE PTR [rax],al
   14000a100:	lods   al,BYTE PTR ds:[rsi]
   14000a101:	fiadd  WORD PTR [rax]
   14000a103:	add    BYTE PTR [rax],al
   14000a105:	add    BYTE PTR [rax],al
   14000a107:	add    ah,ch
   14000a109:	fiadd  WORD PTR [rax]
   14000a10b:	add    BYTE PTR [rax],al
   14000a10d:	add    BYTE PTR [rax],al
   14000a10f:	add    BYTE PTR [rdx],ah
   14000a111:	fild   WORD PTR [rax]
   14000a113:	add    BYTE PTR [rax],al
   14000a115:	add    BYTE PTR [rax],al
   14000a117:	add    BYTE PTR [rdx-0x21],ah
   14000a11a:	add    BYTE PTR [rax],al
   14000a11c:	add    BYTE PTR [rax],al
   14000a11e:	add    BYTE PTR [rax],al
   14000a120:	movabs al,ds:0xe4000000000000df
   14000a129:	fild   WORD PTR [rax]
   14000a12b:	add    BYTE PTR [rax],al
   14000a12d:	add    BYTE PTR [rax],al
   14000a12f:	add    BYTE PTR [rax-0x20],dl
   14000a132:	add    BYTE PTR [rax],al
   14000a134:	add    BYTE PTR [rax],al
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	mov    eax,fs
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	add    BYTE PTR [rax],al
   14000a13e:	add    BYTE PTR [rax],al
   14000a140:	mov    ah,0xe0
   14000a142:	add    BYTE PTR [rax],al
   14000a144:	add    BYTE PTR [rax],al
   14000a146:	add    BYTE PTR [rax],al
   14000a148:	cli    
   14000a149:	loopne 0x14000a14b
   14000a14b:	add    BYTE PTR [rax],al
   14000a14d:	add    BYTE PTR [rax],al
   14000a14f:	add    BYTE PTR [rdx-0x1f],al
   14000a152:	add    BYTE PTR [rax],al
   14000a154:	add    BYTE PTR [rax],al
   14000a156:	add    BYTE PTR [rax],al
   14000a158:	mov    ah,cl
   14000a15a:	add    BYTE PTR [rax],al
   14000a15c:	add    BYTE PTR [rax],al
   14000a15e:	add    BYTE PTR [rax],al
   14000a160:	movabs al,ds:0xc8000000000000e1
   14000a169:	loope  0x14000a16b
   14000a16b:	add    BYTE PTR [rax],al
   14000a16d:	add    BYTE PTR [rax],al
   14000a16f:	add    al,ah
   14000a171:	loope  0x14000a173
   14000a173:	add    BYTE PTR [rax],al
   14000a175:	add    BYTE PTR [rax],al
   14000a177:	add    BYTE PTR [rdx+riz*8],dl
   14000a17a:	add    BYTE PTR [rax],al
   14000a17c:	add    BYTE PTR [rax],al
   14000a17e:	add    BYTE PTR [rax],al
   14000a180:	(bad)  
   14000a181:	fiadd  DWORD PTR [rax]
   14000a183:	add    BYTE PTR [rax],al
   14000a185:	add    BYTE PTR [rax],al
   14000a187:	add    BYTE PTR [rdx+rbx*8+0x0],bl
	...
   14000a196:	add    BYTE PTR [rax],al
   14000a198:	(bad)  
   14000a19a:	add    BYTE PTR [rax],al
   14000a19c:	add    BYTE PTR [rax],al
   14000a19e:	add    BYTE PTR [rax],al
   14000a1a0:	jb     0x14000a184
   14000a1a2:	add    BYTE PTR [rax],al
   14000a1a4:	add    BYTE PTR [rax],al
   14000a1a6:	add    BYTE PTR [rax],al
   14000a1a8:	jl     0x14000a18c
   14000a1aa:	add    BYTE PTR [rax],al
   14000a1ac:	add    BYTE PTR [rax],al
   14000a1ae:	add    BYTE PTR [rax],al
   14000a1b0:	xchg   dl,ah
   14000a1b2:	add    BYTE PTR [rax],al
   14000a1b4:	add    BYTE PTR [rax],al
   14000a1b6:	add    BYTE PTR [rax],al
   14000a1b8:	stos   BYTE PTR es:[rdi],al
   14000a1b9:	loop   0x14000a1bb
   14000a1bb:	add    BYTE PTR [rax],al
   14000a1bd:	add    BYTE PTR [rax],al
   14000a1bf:	add    BYTE PTR [rax-0x1e],dl
   14000a1c2:	add    BYTE PTR [rax],al
   14000a1c4:	add    BYTE PTR [rax],al
   14000a1c6:	add    BYTE PTR [rax],al
   14000a1c8:	fsubr  st(2),st
   14000a1ca:	add    BYTE PTR [rax],al
   14000a1cc:	add    BYTE PTR [rax],al
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	repnz loop 0x14000a1d3
   14000a1d3:	add    BYTE PTR [rax],al
   14000a1d5:	add    BYTE PTR [rax],al
   14000a1d7:	add    ah,bh
   14000a1d9:	loop   0x14000a1db
   14000a1db:	add    BYTE PTR [rax],al
   14000a1dd:	add    BYTE PTR [rax],al
   14000a1df:	add    BYTE PTR [rax],bl
   14000a1e1:	jrcxz  0x14000a1e3
   14000a1e3:	add    BYTE PTR [rax],al
   14000a1e5:	add    BYTE PTR [rax],al
   14000a1e7:	add    BYTE PTR [rdx],ah
   14000a1e9:	jrcxz  0x14000a1eb
   14000a1eb:	add    BYTE PTR [rax],al
   14000a1ed:	add    BYTE PTR [rax],al
   14000a1ef:	add    BYTE PTR [rdx+riz*8+0x0],al
   14000a1f3:	add    BYTE PTR [rax],al
   14000a1f5:	add    BYTE PTR [rax],al
   14000a1f7:	add    BYTE PTR [rbx+riz*8],dh
   14000a1fa:	add    BYTE PTR [rax],al
   14000a1fc:	add    BYTE PTR [rax],al
   14000a1fe:	add    BYTE PTR [rax],al
   14000a200:	ds jrcxz 0x14000a203
   14000a203:	add    BYTE PTR [rax],al
   14000a205:	add    BYTE PTR [rax],al
   14000a207:	add    BYTE PTR [rsi-0x1d],al
   14000a20a:	add    BYTE PTR [rax],al
   14000a20c:	add    BYTE PTR [rax],al
   14000a20e:	add    BYTE PTR [rax],al
   14000a210:	push   rax
   14000a211:	jrcxz  0x14000a213
   14000a213:	add    BYTE PTR [rax],al
   14000a215:	add    BYTE PTR [rax],al
   14000a217:	add    BYTE PTR [rbx+riz*8+0x0],bl
   14000a21b:	add    BYTE PTR [rax],al
   14000a21d:	add    BYTE PTR [rax],al
   14000a21f:	add    BYTE PTR [rsi-0x1d],ah
   14000a222:	add    BYTE PTR [rax],al
   14000a224:	add    BYTE PTR [rax],al
   14000a226:	add    BYTE PTR [rax],al
   14000a228:	jo     0x14000a20d
   14000a22a:	add    BYTE PTR [rax],al
   14000a22c:	add    BYTE PTR [rax],al
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	jp     0x14000a215
   14000a232:	add    BYTE PTR [rax],al
   14000a234:	add    BYTE PTR [rax],al
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	mov    bl,ah
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	add    BYTE PTR [rax],al
   14000a23e:	add    BYTE PTR [rax],al
   14000a240:	cwde   
   14000a241:	jrcxz  0x14000a243
   14000a243:	add    BYTE PTR [rax],al
   14000a245:	add    BYTE PTR [rax],al
   14000a247:	add    BYTE PTR [rbx+riz*8+0x0],ah
   14000a24e:	add    BYTE PTR [rax],al
   14000a250:	(bad)
   14000a254:	add    BYTE PTR [rax],al
   14000a256:	add    BYTE PTR [rax],al
   14000a258:	(bad)  
   14000a259:	jrcxz  0x14000a25b
   14000a25b:	add    BYTE PTR [rax],al
   14000a25d:	add    BYTE PTR [rax],al
   14000a25f:	add    dh,bl
   14000a261:	jrcxz  0x14000a263
   14000a263:	add    BYTE PTR [rax],al
   14000a265:	add    BYTE PTR [rax],al
   14000a267:	add    al,ch
   14000a269:	jrcxz  0x14000a26b
   14000a26b:	add    BYTE PTR [rax],al
   14000a26d:	add    BYTE PTR [rax],al
   14000a26f:	add    BYTE PTR [rdx],cl
   14000a271:	in     al,0x0
   14000a273:	add    BYTE PTR [rax],al
   14000a275:	add    BYTE PTR [rax],al
   14000a277:	add    BYTE PTR [rsi],ah
   14000a279:	in     al,0x0
   14000a27b:	add    BYTE PTR [rax],al
   14000a27d:	add    BYTE PTR [rax],al
   14000a27f:	add    BYTE PTR [rax],dh
   14000a281:	in     al,0x0
   14000a283:	add    BYTE PTR [rax],al
   14000a285:	add    BYTE PTR [rax],al
   14000a287:	add    BYTE PTR [rax],bh
   14000a289:	in     al,0x0
   14000a28b:	add    BYTE PTR [rax],al
   14000a28d:	add    BYTE PTR [rax],al
   14000a28f:	add    BYTE PTR [rdx-0x1c],al
   14000a292:	add    BYTE PTR [rax],al
   14000a294:	add    BYTE PTR [rax],al
   14000a296:	add    BYTE PTR [rax],al
   14000a298:	rex.WX in al,0x0
   14000a29b:	add    BYTE PTR [rax],al
   14000a29d:	add    BYTE PTR [rax],al
   14000a29f:	add    BYTE PTR [rsp+riz*8+0x0],dl
   14000a2a3:	add    BYTE PTR [rax],al
   14000a2a5:	add    BYTE PTR [rax],al
   14000a2a7:	add    BYTE PTR [rsi-0x1c],bl
   14000a2aa:	add    BYTE PTR [rax],al
   14000a2ac:	add    BYTE PTR [rax],al
   14000a2ae:	add    BYTE PTR [rax],al
   14000a2b0:	jbe    0x14000a296
   14000a2b2:	add    BYTE PTR [rax],al
   14000a2b4:	add    BYTE PTR [rax],al
   14000a2b6:	add    BYTE PTR [rax],al
   14000a2b8:	jle    0x14000a29e
   14000a2ba:	add    BYTE PTR [rax],al
   14000a2bc:	add    BYTE PTR [rax],al
   14000a2be:	add    BYTE PTR [rax],al
   14000a2c0:	mov    ah,ah
   14000a2c2:	add    BYTE PTR [rax],al
   14000a2c4:	add    BYTE PTR [rax],al
   14000a2c6:	add    BYTE PTR [rax],al
   14000a2c8:	xchg   esi,eax
   14000a2c9:	in     al,0x0
   14000a2cb:	add    BYTE PTR [rax],al
   14000a2cd:	add    BYTE PTR [rax],al
   14000a2cf:	add    BYTE PTR [rsp+riz*8+0x0],ah
   14000a2d6:	add    BYTE PTR [rax],al
   14000a2d8:	mov    esp,0xe4
   14000a2dd:	add    BYTE PTR [rax],al
   14000a2df:	add    dh,al
   14000a2e1:	in     al,0x0
   14000a2e3:	add    BYTE PTR [rax],al
   14000a2e5:	add    BYTE PTR [rax],al
   14000a2e7:	add    ah,dl
   14000a2e9:	in     al,0x0
   14000a2eb:	add    BYTE PTR [rax],al
   14000a2ed:	add    BYTE PTR [rax],al
   14000a2ef:	add    dh,ch
   14000a2f1:	in     al,0x0
   14000a2f3:	add    BYTE PTR [rax],al
   14000a2f5:	add    BYTE PTR [rax],al
   14000a2f7:	add    ah,bh
   14000a2f9:	in     al,0x0
   14000a2fb:	add    BYTE PTR [rax],al
   14000a2fd:	add    BYTE PTR [rax],al
   14000a2ff:	add    BYTE PTR [riz*8+0x0],cl
   14000a306:	add    BYTE PTR [rax],al
   14000a308:	(bad)  
   14000a309:	in     eax,0x0
   14000a30b:	add    BYTE PTR [rax],al
   14000a30d:	add    BYTE PTR [rax],al
   14000a30f:	add    BYTE PTR [rsi],ah
   14000a311:	in     eax,0x0
   14000a313:	add    BYTE PTR [rax],al
   14000a315:	add    BYTE PTR [rax],al
   14000a317:	add    BYTE PTR [rax],dh
   14000a319:	in     eax,0x0
   14000a31b:	add    BYTE PTR [rax],al
   14000a31d:	add    BYTE PTR [rax],al
   14000a31f:	add    BYTE PTR [rsi],bh
   14000a321:	in     eax,0x0
   14000a323:	add    BYTE PTR [rax],al
   14000a325:	add    BYTE PTR [rax],al
   14000a327:	add    BYTE PTR [rbp+riz*8+0x0],dl
   14000a32b:	add    BYTE PTR [rax],al
   14000a32d:	add    BYTE PTR [rax],al
   14000a32f:	add    BYTE PTR [rax-0x1b],ch
   14000a332:	add    BYTE PTR [rax],al
   14000a334:	add    BYTE PTR [rax],al
   14000a336:	add    BYTE PTR [rax],al
   14000a338:	jbe    0x14000a31f
   14000a33a:	add    BYTE PTR [rax],al
   14000a33c:	add    BYTE PTR [rax],al
   14000a33e:	add    BYTE PTR [rax],al
   14000a340:	(bad)  
   14000a341:	in     eax,0x0
   14000a343:	add    BYTE PTR [rax],al
   14000a345:	add    BYTE PTR [rax],al
   14000a347:	add    BYTE PTR [rbp+riz*8+0x0],cl
   14000a34e:	add    BYTE PTR [rax],al
   14000a350:	xchg   esi,eax
   14000a351:	in     eax,0x0
   14000a353:	add    BYTE PTR [rax],al
   14000a355:	add    BYTE PTR [rax],al
   14000a357:	add    BYTE PTR [rdx+0xe5],ah
   14000a35d:	add    BYTE PTR [rax],al
   14000a35f:	add    BYTE PTR [rsi+0xe5],dh
   14000a365:	add    BYTE PTR [rax],al
   14000a367:	add    ah,ch
   14000a369:	in     eax,0x0
   14000a36b:	add    BYTE PTR [rax],al
   14000a36d:	add    BYTE PTR [rax],al
   14000a36f:	add    BYTE PTR [rbx+riz*8],ch
   14000a372:	add    BYTE PTR [rax],al
   14000a374:	add    BYTE PTR [rax],al
   14000a376:	add    BYTE PTR [rax],al
   14000a378:	(bad)  
   14000a379:	loop   0x14000a37b
	...
   14000a387:	add    BYTE PTR [rdx+0xd9],ch
   14000a38d:	add    BYTE PTR [rax],al
   14000a38f:	add    BYTE PTR [rcx+rbx*8+0x0],al
   14000a396:	add    BYTE PTR [rax],al
   14000a398:	or     cl,bl
	...
   14000a3ae:	add    BYTE PTR [rax],al
   14000a3b0:	adc    al,0x8c
   14000a3b2:	add    BYTE PTR [rax+0x1],al
   14000a3b5:	add    BYTE PTR [rax],al
   14000a3b7:	add    ah,ch
   14000a3b9:	adc    BYTE PTR [rax],al
   14000a3bb:	rex add DWORD PTR [rax],eax
   14000a3be:	add    BYTE PTR [rax],al
   14000a3c0:	add    BYTE PTR [rax],dl
   14000a3c2:	add    BYTE PTR [rax+0x1],al
   14000a3c5:	add    BYTE PTR [rax],al
   14000a3c7:	add    BYTE PTR [rax],dl
   14000a3c9:	adc    BYTE PTR [rax],al
   14000a3cb:	rex add DWORD PTR [rax],eax
   14000a3ce:	add    BYTE PTR [rax],al
   14000a3d0:	and    BYTE PTR [rax],dl
   14000a3d2:	add    BYTE PTR [rax+0x1],al
	...
   14000a3e5:	add    BYTE PTR [rax],al
   14000a3e7:	add    BYTE PTR [rbx+rcx*4+0x0],al
   14000a3eb:	rex add DWORD PTR [rax],eax
   14000a3ee:	add    BYTE PTR [rax],al
   14000a3f0:	mov    BYTE PTR [rax+0x14000],cl
   14000a3f6:	add    BYTE PTR [rax],al
   14000a3f8:	call   0x14140a48c
	...
   14000a421:	add    BYTE PTR [rax],al
   14000a423:	add    bh,dl
   14000a425:	adc    al,BYTE PTR [rcx+0x58]
   14000a42b:	add    BYTE PTR [rdx],al
   14000a42d:	add    BYTE PTR [rax],al
   14000a42f:	add    BYTE PTR [rdi],bh
   14000a431:	add    BYTE PTR [rax],al
   14000a433:	add    BYTE PTR [rax-0x77ffff51],cl
   14000a439:	movabs eax,ds:0x12d7000000000000
   14000a442:	sbb    DWORD PTR [rax+0x0],0xc000000
   14000a449:	add    BYTE PTR [rax],al
   14000a44b:	add    BYTE PTR [rax+rax*1],dl
   14000a44e:	add    BYTE PTR [rax],al
   14000a450:	enter  0xaf,0x0
   14000a454:	enter  0xa1,0x0
   14000a458:	and    al,BYTE PTR [rip+0x41993]        # 0x14004bdf1
   14000a45e:	add    BYTE PTR [rax],al
   14000a460:	mov    al,0xb9
   14000a462:	add    BYTE PTR [rax],al
   14000a464:	add    al,BYTE PTR [rax]
   14000a466:	add    BYTE PTR [rax],al
   14000a468:	sar    BYTE PTR [rcx+0x80000],1
   14000a46e:	add    BYTE PTR [rax],al
   14000a470:	and    BYTE PTR [rdx+0x200000],bh
   14000a476:	add    BYTE PTR [rax],al
   14000a478:	add    BYTE PTR [rax],al
   14000a47a:	add    BYTE PTR [rax],al
   14000a47c:	add    DWORD PTR [rax],eax
   14000a47e:	add    BYTE PTR [rax],al
   14000a480:	and    al,BYTE PTR [rip+0x41993]        # 0x14004be19
   14000a486:	add    BYTE PTR [rax],al
   14000a488:	xchg   esp,eax
   14000a489:	mov    ebx,0x0
   14000a48e:	add    BYTE PTR [rax],al
   14000a490:	add    BYTE PTR [rax],al
   14000a492:	add    BYTE PTR [rax],al
   14000a494:	or     BYTE PTR [rax],al
   14000a496:	add    BYTE PTR [rax],al
   14000a498:	sar    BYTE PTR [rbx+0x200000],0x0
   14000a49f:	add    BYTE PTR [rax],al
   14000a4a1:	add    BYTE PTR [rax],al
   14000a4a3:	add    BYTE PTR [rcx],al
   14000a4a5:	add    BYTE PTR [rax],al
   14000a4a7:	add    BYTE PTR [rdx],ah
   14000a4a9:	add    eax,0x21993
   14000a4ae:	add    BYTE PTR [rax],al
   14000a4b0:	sbb    BYTE PTR [rax+rax*1+0x0],bh
   14000a4b7:	add    BYTE PTR [rax],al
   14000a4b9:	add    BYTE PTR [rax],al
   14000a4bb:	add    BYTE PTR [rax+rax*1],al
   14000a4be:	add    BYTE PTR [rax],al
   14000a4c0:	sub    BYTE PTR [rax+rax*1+0x2000],bh
   14000a4c7:	add    BYTE PTR [rax],al
   14000a4c9:	add    BYTE PTR [rax],al
   14000a4cb:	add    BYTE PTR [rcx],al
   14000a4cd:	add    BYTE PTR [rax],al
   14000a4cf:	add    BYTE PTR [rdx],ah
   14000a4d1:	add    eax,0x11993
   14000a4d6:	add    BYTE PTR [rax],al
   14000a4d8:	mov    eax,0xbc
   14000a4dd:	add    BYTE PTR [rax],al
   14000a4df:	add    BYTE PTR [rax],al
   14000a4e1:	add    BYTE PTR [rax],al
   14000a4e3:	add    BYTE PTR [rbx],al
   14000a4e5:	add    BYTE PTR [rax],al
   14000a4e7:	add    al,al
   14000a4e9:	mov    esp,0x200000
   14000a4ee:	add    BYTE PTR [rax],al
   14000a4f0:	add    BYTE PTR [rax],al
   14000a4f2:	add    BYTE PTR [rax],al
   14000a4f4:	add    DWORD PTR [rax],eax
   14000a4f6:	add    BYTE PTR [rax],al
   14000a4f8:	and    al,BYTE PTR [rip+0x21993]        # 0x14002be91
   14000a4fe:	add    BYTE PTR [rax],al
   14000a500:	add    al,0xbd
	...
   14000a50a:	add    BYTE PTR [rax],al
   14000a50c:	add    eax,0x18000000
   14000a511:	mov    ebp,0x200000
   14000a516:	add    BYTE PTR [rax],al
   14000a518:	add    BYTE PTR [rax],al
   14000a51a:	add    BYTE PTR [rax],al
   14000a51c:	add    DWORD PTR [rax],eax
   14000a51e:	add    BYTE PTR [rax],al
   14000a520:	and    al,BYTE PTR [rip+0x21993]        # 0x14002beb9
   14000a526:	add    BYTE PTR [rax],al
   14000a528:	movabs al,ds:0xb0000000010000bd
   14000a531:	mov    ebp,0x50000
   14000a536:	add    BYTE PTR [rax],al
   14000a538:	fdivr  DWORD PTR [rbp+0x300000]
   14000a53e:	add    BYTE PTR [rax],al
   14000a540:	add    BYTE PTR [rax],al
   14000a542:	add    BYTE PTR [rax],al
   14000a544:	add    DWORD PTR [rax],eax
   14000a546:	add    BYTE PTR [rax],al
   14000a548:	and    al,BYTE PTR [rip+0x11993]        # 0x14001bee1
   14000a54e:	add    BYTE PTR [rax],al
   14000a550:	jo     0x14000a510
	...
   14000a55a:	add    BYTE PTR [rax],al
   14000a55c:	add    eax,DWORD PTR [rax]
   14000a55e:	add    BYTE PTR [rax],al
   14000a560:	js     0x14000a520
   14000a562:	add    BYTE PTR [rax],al
   14000a564:	and    BYTE PTR [rax],al
   14000a566:	add    BYTE PTR [rax],al
   14000a568:	add    BYTE PTR [rax],al
   14000a56a:	add    BYTE PTR [rax],al
   14000a56c:	add    DWORD PTR [rax],eax
   14000a56e:	add    BYTE PTR [rax],al
   14000a570:	and    al,BYTE PTR [rip+0x11993]        # 0x14001bf09
   14000a576:	add    BYTE PTR [rax],al
   14000a578:	lods   al,BYTE PTR ds:[rsi]
   14000a579:	mov    esi,0x0
   14000a57e:	add    BYTE PTR [rax],al
   14000a580:	add    BYTE PTR [rax],al
   14000a582:	add    BYTE PTR [rax],al
   14000a584:	add    eax,DWORD PTR [rax]
   14000a586:	add    BYTE PTR [rax],al
   14000a588:	mov    eax,0x200000be
   14000a58d:	add    BYTE PTR [rax],al
   14000a58f:	add    BYTE PTR [rax],al
   14000a591:	add    BYTE PTR [rax],al
   14000a593:	add    BYTE PTR [rcx],al
   14000a595:	add    BYTE PTR [rax],al
   14000a597:	add    BYTE PTR [rdx],ah
   14000a599:	add    eax,0x11993
   14000a59e:	add    BYTE PTR [rax],al
   14000a5a0:	call   0x14000a663
   14000a5a5:	add    BYTE PTR [rax],al
   14000a5a7:	add    BYTE PTR [rax],al
   14000a5a9:	add    BYTE PTR [rax],al
   14000a5ab:	add    BYTE PTR [rbx],al
   14000a5ad:	add    BYTE PTR [rax],al
   14000a5af:	add    al,dh
   14000a5b1:	mov    esi,0x200000
   14000a5b6:	add    BYTE PTR [rax],al
   14000a5b8:	add    BYTE PTR [rax],al
   14000a5ba:	add    BYTE PTR [rax],al
   14000a5bc:	add    DWORD PTR [rax],eax
   14000a5be:	add    BYTE PTR [rax],al
   14000a5c0:	and    al,BYTE PTR [rip+0x11993]        # 0x14001bf59
   14000a5c6:	add    BYTE PTR [rax],al
   14000a5c8:	push   0xbf
   14000a5cd:	add    BYTE PTR [rax],al
   14000a5cf:	add    BYTE PTR [rax],al
   14000a5d1:	add    BYTE PTR [rax],al
   14000a5d3:	add    BYTE PTR [rbx],al
   14000a5d5:	add    BYTE PTR [rax],al
   14000a5d7:	add    BYTE PTR [rax-0x41],dh
   14000a5da:	add    BYTE PTR [rax],al
   14000a5dc:	and    BYTE PTR [rax],al
   14000a5de:	add    BYTE PTR [rax],al
   14000a5e0:	add    BYTE PTR [rax],al
   14000a5e2:	add    BYTE PTR [rax],al
   14000a5e4:	add    DWORD PTR [rax],eax
   14000a5e6:	add    BYTE PTR [rax],al
   14000a5e8:	and    al,BYTE PTR [rip+0x11993]        # 0x14001bf81
   14000a5ee:	add    BYTE PTR [rax],al
   14000a5f0:	movabs al,ds:0xbf
   14000a5f9:	add    BYTE PTR [rax],al
   14000a5fb:	add    BYTE PTR [rbx],al
   14000a5fd:	add    BYTE PTR [rax],al
   14000a5ff:	add    BYTE PTR [rax+0x200000bf],ch
   14000a605:	add    BYTE PTR [rax],al
   14000a607:	add    BYTE PTR [rax],al
   14000a609:	add    BYTE PTR [rax],al
   14000a60b:	add    BYTE PTR [rcx],al
   14000a60d:	add    BYTE PTR [rax],al
   14000a60f:	add    BYTE PTR [rdx],ah
   14000a611:	add    eax,0x11993
   14000a616:	add    BYTE PTR [rax],al
   14000a618:	adc    al,al
	...
   14000a622:	add    BYTE PTR [rax],al
   14000a624:	add    eax,DWORD PTR [rax]
   14000a626:	add    BYTE PTR [rax],al
   14000a628:	sbb    al,al
   14000a62a:	add    BYTE PTR [rax],al
   14000a62c:	and    BYTE PTR [rax],al
   14000a62e:	add    BYTE PTR [rax],al
   14000a630:	add    BYTE PTR [rax],al
   14000a632:	add    BYTE PTR [rax],al
   14000a634:	add    DWORD PTR [rax],eax
   14000a636:	add    BYTE PTR [rax],al
   14000a638:	and    al,BYTE PTR [rip+0x21993]        # 0x14002bfd1
   14000a63e:	add    BYTE PTR [rax],al
   14000a640:	push   0x10000c0
   14000a645:	add    BYTE PTR [rax],al
   14000a647:	add    BYTE PTR [rax-0x40],bh
   14000a64a:	add    BYTE PTR [rax],al
   14000a64c:	add    eax,0xa0000000
   14000a651:	rol    BYTE PTR [rax],0x0
   14000a654:	and    BYTE PTR [rax],al
   14000a656:	add    BYTE PTR [rax],al
   14000a658:	add    BYTE PTR [rax],al
   14000a65a:	add    BYTE PTR [rax],al
   14000a65c:	add    DWORD PTR [rax],eax
   14000a65e:	add    BYTE PTR [rax],al
   14000a660:	and    al,BYTE PTR [rip+0x11993]        # 0x14001bff9
   14000a666:	add    BYTE PTR [rax],al
   14000a668:	cld    
   14000a669:	rol    BYTE PTR [rax],0x0
	...
   14000a674:	add    eax,DWORD PTR [rax]
   14000a676:	add    BYTE PTR [rax],al
   14000a678:	or     cl,al
   14000a67a:	add    BYTE PTR [rax],al
   14000a67c:	and    BYTE PTR [rax],al
   14000a67e:	add    BYTE PTR [rax],al
   14000a680:	add    BYTE PTR [rax],al
   14000a682:	add    BYTE PTR [rax],al
   14000a684:	add    DWORD PTR [rax],eax
   14000a686:	add    BYTE PTR [rax],al
   14000a688:	and    al,BYTE PTR [rip+0x11993]        # 0x14001c021
   14000a68e:	add    BYTE PTR [rax],al
   14000a690:	cmp    al,0xc1
	...
   14000a69a:	add    BYTE PTR [rax],al
   14000a69c:	add    eax,DWORD PTR [rax]
   14000a69e:	add    BYTE PTR [rax],al
   14000a6a0:	rol    QWORD PTR [rax],0x0
   14000a6a4:	and    BYTE PTR [rax],al
   14000a6a6:	add    BYTE PTR [rax],al
   14000a6a8:	add    BYTE PTR [rax],al
   14000a6aa:	add    BYTE PTR [rax],al
   14000a6ac:	add    DWORD PTR [rax],eax
	...
   14000a6b6:	add    BYTE PTR [rax],al
   14000a6b8:	xor    BYTE PTR [rax+0x14000],dh
   14000a6be:	add    BYTE PTR [rax],al
   14000a6c0:	jo     0x14000a6e1
   14000a6c2:	add    BYTE PTR [rax+0x1],al
   14000a6c5:	add    BYTE PTR [rax],al
   14000a6c7:	add    BYTE PTR [rax+rcx*4+0x0],dh
   14000a6cb:	rex add DWORD PTR [rax],eax
   14000a6ce:	add    BYTE PTR [rax],al
   14000a6d0:	je     0x14000a65a
   14000a6d2:	add    BYTE PTR [rax+0x1],al
   14000a6d5:	add    BYTE PTR [rax],al
   14000a6d7:	add    BYTE PTR [rax+0x140002d],dh
   14000a6dd:	add    BYTE PTR [rax],al
   14000a6df:	add    al,dl
   14000a6e1:	sub    eax,0x14000
   14000a6e6:	add    BYTE PTR [rax],al
   14000a6e8:	lock sub eax,0x14000
   14000a6ee:	add    BYTE PTR [rax],al
   14000a6f0:	test   al,0xb0
   14000a6f2:	add    BYTE PTR [rax+0x1],al
   14000a6f5:	add    BYTE PTR [rax],al
   14000a6f7:	add    al,ah
   14000a6f9:	(bad)  
   14000a6fa:	add    BYTE PTR [rax+0x1],al
   14000a6fd:	add    BYTE PTR [rax],al
   14000a6ff:	add    BYTE PTR [rax+0x31],dh
   14000a702:	add    BYTE PTR [rax+0x1],al
   14000a705:	add    BYTE PTR [rax],al
   14000a707:	add    BYTE PTR [rax],dh
   14000a709:	xor    BYTE PTR [rax],al
   14000a70b:	rex add DWORD PTR [rax],eax
   14000a70e:	add    BYTE PTR [rax],al
   14000a710:	mov    al,0x2d
   14000a712:	add    BYTE PTR [rax+0x1],al
   14000a715:	add    BYTE PTR [rax],al
   14000a717:	add    al,dl
   14000a719:	sub    eax,0x14000
   14000a71e:	add    BYTE PTR [rax],al
   14000a720:	lock sub eax,0x14000
   14000a726:	add    BYTE PTR [rax],al
   14000a728:	outs   dx,BYTE PTR gs:[esi]
   14000a72b:	gs jb  0x14000a797
   14000a72e:	movsxd eax,DWORD PTR [rax]
   14000a730:	jne    0x14000a7a0
   14000a732:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000a736:	outs   dx,BYTE PTR ds:[rsi]
   14000a737:	and    BYTE PTR [rbp+0x72],ah
   14000a73a:	jb     0x14000a7ab
   14000a73c:	jb     0x14000a73e
   14000a73e:	add    BYTE PTR [rax],al
   14000a740:	sub    BYTE PTR [rcx+0x14000],dh
   14000a746:	add    BYTE PTR [rax],al
   14000a748:	adc    BYTE PTR [rdi],bl
   14000a74a:	add    BYTE PTR [rax+0x1],al
   14000a74d:	add    BYTE PTR [rax],al
   14000a74f:	add    BYTE PTR [rax+0x1400031],al
   14000a755:	add    BYTE PTR [rax],al
   14000a757:	add    BYTE PTR [rax+0x1400030],ah
   14000a75d:	add    BYTE PTR [rax],al
   14000a75f:	add    BYTE PTR [rax+0x140002d],dh
   14000a765:	add    BYTE PTR [rax],al
   14000a767:	add    al,dl
   14000a769:	sub    eax,0x14000
   14000a76e:	add    BYTE PTR [rax],al
   14000a770:	lock sub eax,0x14000
   14000a776:	add    BYTE PTR [rax],al
   14000a778:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   14000a77f:	ins    DWORD PTR es:[rdi],dx
	...
   14000a788:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   14000a78f:	ins    DWORD PTR es:[rdi],dx
   14000a790:	and    BYTE PTR [rbx+0x74],dh
   14000a793:	jb     0x14000a7fa
   14000a795:	(bad)  
   14000a796:	ins    DWORD PTR es:[rdi],dx
   14000a797:	and    BYTE PTR [rbp+0x72],ah
   14000a79a:	jb     0x14000a80b
   14000a79c:	jb     0x14000a79e
   14000a79e:	add    BYTE PTR [rax],al
   14000a7a0:	mov    al,0xb1
   14000a7a2:	add    BYTE PTR [rax+0x1],al
   14000a7a5:	add    BYTE PTR [rax],al
   14000a7a7:	add    BYTE PTR [rax+0x1f],al
   14000a7aa:	add    BYTE PTR [rax+0x1],al
   14000a7ad:	add    BYTE PTR [rax],al
   14000a7af:	add    BYTE PTR [rax+0x1400031],dl
   14000a7b5:	add    BYTE PTR [rax],al
   14000a7b7:	add    al,dh
   14000a7b9:	xor    BYTE PTR [rax],al
   14000a7bb:	rex add DWORD PTR [rax],eax
   14000a7be:	add    BYTE PTR [rax],al
   14000a7c0:	jo     0x14000a7ef
   14000a7c2:	add    BYTE PTR [rax+0x1],al
   14000a7c5:	add    BYTE PTR [rax],al
   14000a7c7:	add    al,dl
   14000a7c9:	sub    eax,0x14000
   14000a7ce:	add    BYTE PTR [rax],al
   14000a7d0:	lock sub eax,0x14000
   14000a7d6:	add    BYTE PTR [rax],al
   14000a7d8:	jae    0x14000a853
   14000a7da:	jae    0x14000a850
   14000a7dc:	gs ins DWORD PTR es:[rdi],dx
   14000a7de:	add    BYTE PTR [rax],al
   14000a7e0:	cmp    BYTE PTR [rdx+0x14000],dh
   14000a7e6:	add    BYTE PTR [rax],al
   14000a7e8:	mov    al,0x1e
   14000a7ea:	add    BYTE PTR [rax+0x1],al
   14000a7ed:	add    BYTE PTR [rax],al
   14000a7ef:	add    BYTE PTR [rax+0x1400034],dh
   14000a7f5:	add    BYTE PTR [rax],al
   14000a7f7:	add    BYTE PTR [rip+0x2d00006d],ch        # 0x16d00a86a
   14000a7fd:	jo     0x14000a7ff
   14000a7ff:	add    BYTE PTR [rip+0x2d000073],ch        # 0x16d00a878
   14000a805:	je     0x14000a807
   14000a807:	add    BYTE PTR [rcx+0x6e],cl
   14000a80a:	movsxd ebp,DWORD PTR [rdi+0x72]
   14000a80d:	jb     0x14000a874
   14000a80f:	movsxd esi,DWORD PTR [rax+riz*1+0x69]
   14000a813:	outs   dx,BYTE PTR ds:[rsi]
   14000a814:	jo     0x14000a88b
   14000a816:	je     0x14000a88b
   14000a818:	add    BYTE PTR cs:[rax],al
   14000a81b:	add    BYTE PTR [rax],al
   14000a81d:	add    BYTE PTR [rax],al
   14000a81f:	add    BYTE PTR [rcx+0x6e],ch
   14000a822:	jbe    0x14000a885
   14000a824:	ins    BYTE PTR es:[rdi],dx
   14000a825:	imul   esp,DWORD PTR [rax+riz*1+0x76],0x6f746365
   14000a82d:	jb     0x14000a86b
   14000a82f:	push   rsp
   14000a830:	and    BYTE PTR ds:[rbx+0x75],dh
   14000a834:	(bad)  
   14000a836:	movsxd esi,DWORD PTR [rdx+0x69]
   14000a839:	jo     0x14000a8af
   14000a83b:	add    BYTE PTR [rax],al
   14000a83d:	add    BYTE PTR [rax],al
   14000a83f:	add    BYTE PTR [rbx+0x74],dh
   14000a842:	jb     0x14000a8ad
   14000a844:	outs   dx,BYTE PTR ds:[rsi]
   14000a845:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   14000a84a:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000a84e:	add    BYTE PTR [ecx+0x6e],ch
   14000a852:	jbe    0x14000a8b5
   14000a854:	ins    BYTE PTR es:[rdi],dx
   14000a855:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   14000a85d:	and    BYTE PTR [eax+0x6f],dh
   14000a861:	jae    0x14000a8cc
   14000a863:	je     0x14000a8ce
   14000a865:	outs   dx,DWORD PTR ds:[rsi]
   14000a866:	outs   dx,BYTE PTR ds:[rsi]
   14000a867:	add    BYTE PTR [rsi+0x65],dh
   14000a86a:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000a86e:	cmp    al,0x54
   14000a870:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   14000a875:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000a879:	add    BYTE PTR [eax],al
   14000a87c:	add    BYTE PTR [rax],al
   14000a87e:	add    BYTE PTR [rax],al
   14000a880:	and    al,BYTE PTR [rip+0x51993]        # 0x14005c219
   14000a886:	add    BYTE PTR [rax],al
   14000a888:	mov    al,0xc2
	...
   14000a892:	add    BYTE PTR [rax],al
   14000a894:	(bad)  
   14000a895:	add    BYTE PTR [rax],al
   14000a897:	add    al,bl
   14000a899:	ret    0x0
   14000a89c:	sub    BYTE PTR [rax],al
   14000a89e:	add    BYTE PTR [rax],al
   14000a8a0:	add    BYTE PTR [rax],al
   14000a8a2:	add    BYTE PTR [rax],al
   14000a8a4:	add    DWORD PTR [rax],eax
   14000a8a6:	add    BYTE PTR [rax],al
   14000a8a8:	and    al,BYTE PTR [rip+0x51993]        # 0x14005c241
   14000a8ae:	add    BYTE PTR [rax],al
   14000a8b0:	and    bl,al
	...
   14000a8ba:	add    BYTE PTR [rax],al
   14000a8bc:	or     BYTE PTR [rax],al
   14000a8be:	add    BYTE PTR [rax],al
   14000a8c0:	push   rax
   14000a8c1:	ret    
   14000a8c2:	add    BYTE PTR [rax],al
   14000a8c4:	jo     0x14000a8c6
   14000a8c6:	add    BYTE PTR [rax],al
   14000a8c8:	add    BYTE PTR [rax],al
   14000a8ca:	add    BYTE PTR [rax],al
   14000a8cc:	add    DWORD PTR [rax],eax
   14000a8ce:	add    BYTE PTR [rax],al
   14000a8d0:	and    al,BYTE PTR [rip+0x11993]        # 0x14001c269
   14000a8d6:	add    BYTE PTR [rax],al
   14000a8d8:	rol    bl,0x0
	...
   14000a8e3:	add    BYTE PTR [rdx],al
   14000a8e5:	add    BYTE PTR [rax],al
   14000a8e7:	add    al,cl
   14000a8e9:	ret    
   14000a8ea:	add    BYTE PTR [rax],al
   14000a8ec:	sub    BYTE PTR [rax],al
   14000a8ee:	add    BYTE PTR [rax],al
   14000a8f0:	add    BYTE PTR [rax],al
   14000a8f2:	add    BYTE PTR [rax],al
   14000a8f4:	add    DWORD PTR [rax],eax
   14000a8f6:	add    BYTE PTR [rax],al
   14000a8f8:	and    al,BYTE PTR [rip+0x11993]        # 0x14001c291
   14000a8fe:	add    BYTE PTR [rax],al
   14000a900:	cld    
   14000a901:	ret    
	...
   14000a90a:	add    BYTE PTR [rax],al
   14000a90c:	add    al,BYTE PTR [rax]
   14000a90e:	add    BYTE PTR [rax],al
   14000a910:	or     ah,al
   14000a912:	add    BYTE PTR [rax],al
   14000a914:	sub    BYTE PTR [rax],al
   14000a916:	add    BYTE PTR [rax],al
   14000a918:	add    BYTE PTR [rax],al
   14000a91a:	add    BYTE PTR [rax],al
   14000a91c:	add    DWORD PTR [rax],eax
   14000a91e:	add    BYTE PTR [rax],al
   14000a920:	and    al,BYTE PTR [rip+0x11993]        # 0x14001c2b9
   14000a926:	add    BYTE PTR [rax],al
   14000a928:	rex.R (bad) 
	...
   14000a932:	add    BYTE PTR [rax],al
   14000a934:	add    al,BYTE PTR [rax]
   14000a936:	add    BYTE PTR [rax],al
   14000a938:	push   rax
   14000a939:	(bad)  
   14000a93a:	add    BYTE PTR [rax],al
   14000a93c:	sub    BYTE PTR [rax],al
   14000a93e:	add    BYTE PTR [rax],al
   14000a940:	add    BYTE PTR [rax],al
   14000a942:	add    BYTE PTR [rax],al
   14000a944:	add    DWORD PTR [rax],eax
   14000a946:	add    BYTE PTR [rax],al
   14000a948:	and    al,BYTE PTR [rip+0x41993]        # 0x14004c2e1
   14000a94e:	add    BYTE PTR [rax],al
   14000a950:	mov    esp,es
	...
   14000a95a:	add    BYTE PTR [rax],al
   14000a95c:	(bad)  
   14000a95d:	add    BYTE PTR [rax],al
   14000a95f:	add    BYTE PTR [rax+0x280000c4],dh
   14000a965:	add    BYTE PTR [rax],al
   14000a967:	add    BYTE PTR [rax],al
   14000a969:	add    BYTE PTR [rax],al
   14000a96b:	add    BYTE PTR [rcx],al
   14000a96d:	add    BYTE PTR [rax],al
   14000a96f:	add    BYTE PTR [rdx],ah
   14000a971:	add    eax,0x11993
   14000a976:	add    BYTE PTR [rax],al
   14000a978:	or     al,0xc5
	...
   14000a982:	add    BYTE PTR [rax],al
   14000a984:	add    eax,DWORD PTR [rax]
   14000a986:	add    BYTE PTR [rax],al
   14000a988:	sbb    ch,al
   14000a98a:	add    BYTE PTR [rax],al
   14000a98c:	and    BYTE PTR [rax],al
   14000a98e:	add    BYTE PTR [rax],al
   14000a990:	add    BYTE PTR [rax],al
   14000a992:	add    BYTE PTR [rax],al
   14000a994:	add    DWORD PTR [rax],eax
   14000a996:	add    BYTE PTR [rax],al
   14000a998:	and    al,BYTE PTR [rip+0x11993]        # 0x14001c331
   14000a99e:	add    BYTE PTR [rax],al
   14000a9a0:	(bad)
	...
   14000a9ac:	add    eax,DWORD PTR [rax]
   14000a9ae:	add    BYTE PTR [rax],al
   14000a9b0:	pop    rax
   14000a9b1:	(bad)
   14000a9b4:	and    BYTE PTR [rax],al
   14000a9b6:	add    BYTE PTR [rax],al
   14000a9b8:	add    BYTE PTR [rax],al
   14000a9ba:	add    BYTE PTR [rax],al
   14000a9bc:	add    DWORD PTR [rax],eax
   14000a9be:	add    BYTE PTR [rax],al
   14000a9c0:	and    al,BYTE PTR [rip+0x11993]        # 0x14001c359
   14000a9c6:	add    BYTE PTR [rax],al
   14000a9c8:	movabs al,ds:0xc5
   14000a9d1:	add    BYTE PTR [rax],al
   14000a9d3:	add    BYTE PTR [rbx],al
   14000a9d5:	add    BYTE PTR [rax],al
   14000a9d7:	add    BYTE PTR [rax+0x480000c5],ch
   14000a9dd:	add    BYTE PTR [rax],al
   14000a9df:	add    BYTE PTR [rax],al
   14000a9e1:	add    BYTE PTR [rax],al
   14000a9e3:	add    BYTE PTR [rcx],al
   14000a9e5:	add    BYTE PTR [rax],al
   14000a9e7:	add    BYTE PTR [rdx],ah
   14000a9e9:	add    eax,0x11993
   14000a9ee:	add    BYTE PTR [rax],al
   14000a9f0:	sbb    dh,al
	...
   14000a9fa:	add    BYTE PTR [rax],al
   14000a9fc:	add    eax,DWORD PTR [rax]
   14000a9fe:	add    BYTE PTR [rax],al
   14000aa00:	and    dh,al
   14000aa02:	add    BYTE PTR [rax],al
   14000aa04:	rex.W add BYTE PTR [rax],al
   14000aa07:	add    BYTE PTR [rax],al
   14000aa09:	add    BYTE PTR [rax],al
   14000aa0b:	add    BYTE PTR [rcx],al
   14000aa0d:	add    BYTE PTR [rax],al
   14000aa0f:	add    BYTE PTR [rdx],ah
   14000aa11:	add    eax,0x11993
   14000aa16:	add    BYTE PTR [rax],al
   14000aa18:	enter  0xc6,0x0
	...
   14000aa24:	add    eax,DWORD PTR [rax]
   14000aa26:	add    BYTE PTR [rax],al
   14000aa28:	rol    dh,1
   14000aa2a:	add    BYTE PTR [rax],al
   14000aa2c:	xor    BYTE PTR [rax],al
   14000aa2e:	add    BYTE PTR [rax],al
   14000aa30:	add    BYTE PTR [rax],al
   14000aa32:	add    BYTE PTR [rax],al
   14000aa34:	add    DWORD PTR [rax],eax
   14000aa36:	add    BYTE PTR [rax],al
   14000aa38:	and    al,BYTE PTR [rip+0x41993]        # 0x14004c3d1
   14000aa3e:	add    BYTE PTR [rax],al
   14000aa40:	xor    bh,al
   14000aa42:	add    BYTE PTR [rax],al
   14000aa44:	add    DWORD PTR [rax],eax
   14000aa46:	add    BYTE PTR [rax],al
   14000aa48:	push   rax
   14000aa49:	mov    DWORD PTR [rax],0x900
   14000aa4f:	add    BYTE PTR [rax+0x200000c7],al
   14000aa55:	add    BYTE PTR [rax],al
   14000aa57:	add    BYTE PTR [rax],al
   14000aa59:	add    BYTE PTR [rax],al
   14000aa5b:	add    BYTE PTR [rcx],al
   14000aa5d:	add    BYTE PTR [rax],al
   14000aa5f:	add    BYTE PTR [rdx],ah
   14000aa61:	add    eax,0x11993
   14000aa66:	add    BYTE PTR [rax],al
   14000aa68:	lock mov DWORD PTR [rax],0x0
   14000aa6f:	add    BYTE PTR [rax],al
   14000aa71:	add    BYTE PTR [rax],al
   14000aa73:	add    BYTE PTR [rbx],al
   14000aa75:	add    BYTE PTR [rax],al
   14000aa77:	add    al,bh
   14000aa79:	mov    DWORD PTR [rax],0x2000
   14000aa7f:	add    BYTE PTR [rax],al
   14000aa81:	add    BYTE PTR [rax],al
   14000aa83:	add    BYTE PTR [rcx],al
   14000aa85:	add    BYTE PTR [rax],al
   14000aa87:	add    BYTE PTR [rdx],ah
   14000aa89:	add    eax,0x11993
   14000aa8e:	add    BYTE PTR [rax],al
   14000aa90:	sub    al,0xc8
	...
   14000aa9a:	add    BYTE PTR [rax],al
   14000aa9c:	add    eax,DWORD PTR [rax]
   14000aa9e:	add    BYTE PTR [rax],al
   14000aaa0:	cmp    al,cl
   14000aaa2:	add    BYTE PTR [rax],al
   14000aaa4:	and    BYTE PTR [rax],al
   14000aaa6:	add    BYTE PTR [rax],al
   14000aaa8:	add    BYTE PTR [rax],al
   14000aaaa:	add    BYTE PTR [rax],al
   14000aaac:	add    DWORD PTR [rax],eax
   14000aaae:	add    BYTE PTR [rax],al
   14000aab0:	jne    0x14000ab20
   14000aab2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000aab6:	outs   dx,BYTE PTR ds:[rsi]
   14000aab7:	add    BYTE PTR [rsi],ch
   14000aab9:	ins    BYTE PTR es:[rdi],dx
   14000aaba:	outs   dx,DWORD PTR ds:[rsi]
   14000aabb:	add    BYTE PTR [eax],al
   14000aabe:	add    BYTE PTR [rax],al
   14000aac0:	jae    0x14000ab27
   14000aac2:	jae    0x14000ab37
   14000aac4:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c65685f
   14000aacb:	jo     0x14000ab32
   14000aacd:	jb     0x14000ab2e
   14000aacf:	add    BYTE PTR [rbx+0x3a],al
   14000aad2:	pop    rsp
   14000aad3:	je     0x14000ab3a
   14000aad5:	ins    DWORD PTR es:[rdi],dx
   14000aad6:	jo     0x14000ab34
   14000aad8:	add    BYTE PTR [rax],al
   14000aada:	add    BYTE PTR [rax],al
   14000aadc:	or     al,BYTE PTR [rax]
   14000aade:	add    BYTE PTR [rax],al
   14000aae0:	mov    eax,0x14000b2
   14000aae5:	add    BYTE PTR [rax],al
   14000aae7:	add    BYTE PTR [rax+0x40],al
   14000aaea:	add    BYTE PTR [rax+0x1],al
   14000aaed:	add    BYTE PTR [rax],al
   14000aaef:	add    BYTE PTR [rax+0x44],al
   14000aaf2:	add    BYTE PTR [rax+0x1],al
   14000aaf5:	add    BYTE PTR [rax],al
   14000aaf7:	add    al,ah
   14000aaf9:	add    BYTE PTR [rax+0x1],r8b
   14000aafd:	add    BYTE PTR [rax],al
   14000aaff:	add    al,ah
   14000ab01:	push   rdx
   14000ab02:	add    BYTE PTR [rax+0x1],al
   14000ab05:	add    BYTE PTR [rax],al
   14000ab07:	add    al,al
   14000ab09:	push   rbp
   14000ab0a:	add    BYTE PTR [rax+0x1],al
   14000ab0d:	add    BYTE PTR [rax],al
   14000ab0f:	add    BYTE PTR [rax+rcx*4+0x0],bl
   14000ab13:	rex add DWORD PTR [rax],eax
   14000ab16:	add    BYTE PTR [rax],al
   14000ab18:	rcr    BYTE PTR [rax+rax*1+0x40],0x1
   14000ab1d:	add    BYTE PTR [rax],al
   14000ab1f:	add    al,ah
   14000ab21:	pop    rcx
   14000ab22:	add    BYTE PTR [rax+0x1],al
   14000ab25:	add    BYTE PTR [rax],al
   14000ab27:	add    BYTE PTR [rdx-0x78],ah
   14000ab2a:	add    BYTE PTR [rax+0x1],al
   14000ab2d:	add    BYTE PTR [rax],al
   14000ab2f:	add    BYTE PTR [rax-0x78],ch
   14000ab32:	add    BYTE PTR [rax+0x1],al
   14000ab35:	add    BYTE PTR [rax],al
   14000ab37:	add    al,al
   14000ab39:	push   rsi
   14000ab3a:	add    BYTE PTR [rax+0x1],al
   14000ab3d:	add    BYTE PTR [rax],al
   14000ab3f:	add    BYTE PTR [rax+0x1400057],dh
   14000ab45:	add    BYTE PTR [rax],al
   14000ab47:	add    BYTE PTR [rax+0x1400058],ah
   14000ab4d:	add    BYTE PTR [rax],al
   14000ab4f:	add    BYTE PTR [rax+0x59],dh
   14000ab52:	add    BYTE PTR [rax+0x1],al
   14000ab55:	add    BYTE PTR [rax],al
   14000ab57:	add    BYTE PTR [rax+0x140004c],ah
   14000ab5d:	add    BYTE PTR [rax],al
   14000ab5f:	add    BYTE PTR [rax+0x14000b3],cl
   14000ab65:	add    BYTE PTR [rax],al
   14000ab67:	add    BYTE PTR [rax+rax*2],ch
   14000ab6a:	add    BYTE PTR [rax+0x1],al
   14000ab6d:	add    BYTE PTR [rax],al
   14000ab6f:	add    BYTE PTR [rax],al
   14000ab71:	add    BYTE PTR [rax],al
   14000ab73:	add    BYTE PTR [rax+0x0],bh
   14000ab79:	add    BYTE PTR [rax],al
   14000ab7b:	add    BYTE PTR [rax+0x62000000],ch
   14000ab81:	(bad)  
   14000ab82:	and    BYTE PTR fs:[rbx+0x61],ah
   14000ab86:	jae    0x14000abfc
	...
   14000ab90:	and    al,BYTE PTR [rip+0x91993]        # 0x14009c529
   14000ab96:	add    BYTE PTR [rax],al
   14000ab98:	je     0x14000ab62
   14000ab9a:	add    BYTE PTR [rax],al
   14000ab9c:	add    DWORD PTR [rax],eax
   14000ab9e:	add    BYTE PTR [rax],al
   14000aba0:	mov    esp,0x120000c8
   14000aba5:	add    BYTE PTR [rax],al
   14000aba7:	add    BYTE PTR [rax],dl
   14000aba9:	leave  
   14000abaa:	add    BYTE PTR [rax],al
   14000abac:	push   0x0
   14000abb1:	add    BYTE PTR [rax],al
   14000abb3:	add    BYTE PTR [rcx],al
   14000abb5:	add    BYTE PTR [rax],al
   14000abb7:	add    BYTE PTR [rdx],ah
   14000abb9:	add    eax,0x41993
   14000abbe:	add    BYTE PTR [rax],al
   14000abc0:	push   rsp
   14000abc1:	retf   0x0
   14000abc4:	add    al,BYTE PTR [rax]
   14000abc6:	add    BYTE PTR [rax],al
   14000abc8:	je     0x14000ab94
   14000abca:	add    BYTE PTR [rax],al
   14000abcc:	or     BYTE PTR [rax],al
   14000abce:	add    BYTE PTR [rax],al
   14000abd0:	ror    dl,1
   14000abd2:	add    BYTE PTR [rax],al
   14000abd4:	and    BYTE PTR [rax],al
   14000abd6:	add    BYTE PTR [rax],al
   14000abd8:	add    BYTE PTR [rax],al
   14000abda:	add    BYTE PTR [rax],al
   14000abdc:	add    DWORD PTR [rax],eax
   14000abde:	add    BYTE PTR [rax],al
   14000abe0:	and    al,BYTE PTR [rip+0x31993]        # 0x14003c579
   14000abe6:	add    BYTE PTR [rax],al
   14000abe8:	add    ah,cl
	...
   14000abf2:	add    BYTE PTR [rax],al
   14000abf4:	(bad)  
   14000abf5:	add    BYTE PTR [rax],al
   14000abf7:	add    BYTE PTR [rax],bl
   14000abf9:	int3   
   14000abfa:	add    BYTE PTR [rax],al
   14000abfc:	(bad)  
   14000abfd:	add    BYTE PTR [rax],al
   14000abff:	add    BYTE PTR [rax],al
   14000ac01:	add    BYTE PTR [rax],al
   14000ac03:	add    BYTE PTR [rcx],al
   14000ac05:	add    BYTE PTR [rax],al
   14000ac07:	add    BYTE PTR [rdx],ah
   14000ac09:	add    eax,0x11993
   14000ac0e:	add    BYTE PTR [rax],al
   14000ac10:	mov    esp,0xcc
   14000ac15:	add    BYTE PTR [rax],al
   14000ac17:	add    BYTE PTR [rax],al
   14000ac19:	add    BYTE PTR [rax],al
   14000ac1b:	add    BYTE PTR [rbx],al
   14000ac1d:	add    BYTE PTR [rax],al
   14000ac1f:	add    al,cl
   14000ac21:	int3   
   14000ac22:	add    BYTE PTR [rax],al
   14000ac24:	cmp    BYTE PTR [rax],al
   14000ac26:	add    BYTE PTR [rax],al
   14000ac28:	add    BYTE PTR [rax],al
   14000ac2a:	add    BYTE PTR [rax],al
   14000ac2c:	add    DWORD PTR [rax],eax
   14000ac2e:	add    BYTE PTR [rax],al
   14000ac30:	and    al,BYTE PTR [rip+0x11993]        # 0x14001c5c9
   14000ac36:	add    BYTE PTR [rax],al
   14000ac38:	int3   
   14000ac39:	int    0x0
	...
   14000ac43:	add    BYTE PTR [rbx],al
   14000ac45:	add    BYTE PTR [rax],al
   14000ac47:	add    al,bl
   14000ac49:	int    0x0
	...
   14000ac53:	add    BYTE PTR [rcx],al
   14000ac55:	add    BYTE PTR [rax],al
   14000ac57:	add    BYTE PTR [rdx],ah
   14000ac59:	add    eax,0x11993
   14000ac5e:	add    BYTE PTR [rax],al
   14000ac60:	add    dh,cl
	...
   14000ac6a:	add    BYTE PTR [rax],al
   14000ac6c:	add    eax,DWORD PTR [rax]
   14000ac6e:	add    BYTE PTR [rax],al
   14000ac70:	or     dh,cl
   14000ac72:	add    BYTE PTR [rax],al
   14000ac74:	and    BYTE PTR [rax],al
   14000ac76:	add    BYTE PTR [rax],al
   14000ac78:	add    BYTE PTR [rax],al
   14000ac7a:	add    BYTE PTR [rax],al
   14000ac7c:	add    DWORD PTR [rax],eax
   14000ac7e:	add    BYTE PTR [rax],al
   14000ac80:	and    al,BYTE PTR [rip+0x11993]        # 0x14001c619
   14000ac86:	add    BYTE PTR [rax],al
   14000ac88:	cmp    al,0xce
	...
   14000ac92:	add    BYTE PTR [rax],al
   14000ac94:	add    eax,DWORD PTR [rax]
   14000ac96:	add    BYTE PTR [rax],al
   14000ac98:	rex.W (bad) 
   14000ac9a:	add    BYTE PTR [rax],al
   14000ac9c:	and    BYTE PTR [rax],al
   14000ac9e:	add    BYTE PTR [rax],al
   14000aca0:	add    BYTE PTR [rax],al
   14000aca2:	add    BYTE PTR [rax],al
   14000aca4:	add    DWORD PTR [rax],eax
   14000aca6:	add    BYTE PTR [rax],al
   14000aca8:	and    al,BYTE PTR [rip+0x21993]        # 0x14002c641
   14000acae:	add    BYTE PTR [rax],al
   14000acb0:	sbb    al,0xcf
   14000acb2:	add    BYTE PTR [rax],al
   14000acb4:	add    DWORD PTR [rax],eax
   14000acb6:	add    BYTE PTR [rax],al
   14000acb8:	sub    al,0xcf
   14000acba:	add    BYTE PTR [rax],al
   14000acbc:	add    eax,0x58000000
   14000acc1:	iret   
   14000acc2:	add    BYTE PTR [rax],al
   14000acc4:	xor    BYTE PTR [rax],al
   14000acc6:	add    BYTE PTR [rax],al
   14000acc8:	add    BYTE PTR [rax],al
   14000acca:	add    BYTE PTR [rax],al
   14000accc:	add    DWORD PTR [rax],eax
   14000acce:	add    BYTE PTR [rax],al
   14000acd0:	and    al,BYTE PTR [rip+0x31993]        # 0x14003c669
   14000acd6:	add    BYTE PTR [rax],al
   14000acd8:	hlt    
   14000acd9:	iret   
   14000acda:	add    BYTE PTR [rax],al
   14000acdc:	add    DWORD PTR [rax],eax
   14000acde:	add    BYTE PTR [rax],al
   14000ace0:	or     al,0xd0
   14000ace2:	add    BYTE PTR [rax],al
   14000ace4:	(bad)  
   14000ace5:	add    BYTE PTR [rax],al
   14000ace7:	add    BYTE PTR [rax],bh
   14000ace9:	rol    BYTE PTR [rax],1
   14000aceb:	add    BYTE PTR [rax],ah
   14000aced:	add    BYTE PTR [rax],al
   14000acef:	add    BYTE PTR [rax],al
   14000acf1:	add    BYTE PTR [rax],al
   14000acf3:	add    BYTE PTR [rcx],al
   14000acf5:	add    BYTE PTR [rax],al
   14000acf7:	add    BYTE PTR [rdx],ah
   14000acf9:	add    eax,0x11993
   14000acfe:	add    BYTE PTR [rax],al
   14000ad00:	movabs al,ds:0xd0
   14000ad09:	add    BYTE PTR [rax],al
   14000ad0b:	add    BYTE PTR [rbx],al
   14000ad0d:	add    BYTE PTR [rax],al
   14000ad0f:	add    BYTE PTR [rax+0x200000d0],ch
   14000ad15:	add    BYTE PTR [rax],al
   14000ad17:	add    BYTE PTR [rax],al
   14000ad19:	add    BYTE PTR [rax],al
   14000ad1b:	add    BYTE PTR [rcx],al
   14000ad1d:	add    BYTE PTR [rax],al
   14000ad1f:	add    BYTE PTR [rdx],ah
   14000ad21:	add    eax,0x11993
   14000ad26:	add    BYTE PTR [rax],al
   14000ad28:	fcom   st(0)
	...
   14000ad32:	add    BYTE PTR [rax],al
   14000ad34:	add    eax,DWORD PTR [rax]
   14000ad36:	add    BYTE PTR [rax],al
   14000ad38:	loopne 0x14000ad0a
   14000ad3a:	add    BYTE PTR [rax],al
   14000ad3c:	and    BYTE PTR [rax],al
   14000ad3e:	add    BYTE PTR [rax],al
   14000ad40:	add    BYTE PTR [rax],al
   14000ad42:	add    BYTE PTR [rax],al
   14000ad44:	add    DWORD PTR [rax],eax
   14000ad46:	add    BYTE PTR [rax],al
   14000ad48:	and    al,BYTE PTR [rip+0x11993]        # 0x14001c6e1
   14000ad4e:	add    BYTE PTR [rax],al
   14000ad50:	adc    cl,dl
	...
   14000ad5a:	add    BYTE PTR [rax],al
   14000ad5c:	add    eax,DWORD PTR [rax]
   14000ad5e:	add    BYTE PTR [rax],al
   14000ad60:	sbb    cl,dl
   14000ad62:	add    BYTE PTR [rax],al
   14000ad64:	and    BYTE PTR [rax],al
   14000ad66:	add    BYTE PTR [rax],al
   14000ad68:	add    BYTE PTR [rax],al
   14000ad6a:	add    BYTE PTR [rax],al
   14000ad6c:	add    DWORD PTR [rax],eax
   14000ad6e:	add    BYTE PTR [rax],al
   14000ad70:	sbb    bl,BYTE PTR [rbx]
   14000ad72:	sbb    al,0x1d
   14000ad74:	add    BYTE PTR [rax],al
   14000ad76:	add    BYTE PTR [rax],al
   14000ad78:	ins    BYTE PTR es:[rdi],dx
   14000ad79:	add    BYTE PTR [rcx+0x0],ch
   14000ad7c:	(bad)  
   14000ad7d:	add    BYTE PTR [rbp+0x0],ch
   14000ad80:	ja     0x14000ad82
   14000ad82:	ins    BYTE PTR es:[rdi],dx
   14000ad83:	add    BYTE PTR [rbp+0x0],ch
   14000ad86:	add    BYTE PTR [edx+0x0],dh
   14000ad8a:	imul   eax,DWORD PTR [rax],0x70006d
   14000ad90:	ins    BYTE PTR es:[rdi],dx
   14000ad91:	add    BYTE PTR [rax],al
   14000ad93:	add    BYTE PTR [rax],al
   14000ad95:	add    BYTE PTR [rax],al
   14000ad97:	add    BYTE PTR [rbp+0x72],al
   14000ad9a:	jb     0x14000ae0b
   14000ad9c:	jb     0x14000adbe
   14000ad9e:	and    eax,0xa3a64
   14000ada3:	add    BYTE PTR [rax],al
   14000ada5:	add    BYTE PTR [rax],al
   14000ada7:	add    BYTE PTR [rdx],cl
   14000ada9:	gs js  0x14000ae15
   14000adac:	je     0x14000ae17
   14000adae:	outs   dx,BYTE PTR ds:[rsi]
   14000adaf:	or     al,BYTE PTR [eax]
   14000adb2:	add    BYTE PTR [rax],al
   14000adb4:	add    BYTE PTR [rax],al
   14000adb6:	add    BYTE PTR [rax],al
   14000adb8:	movsxd esp,DWORD PTR [rcx+0x75]
   14000adbb:	addr32 push 0x6e612074
   14000adc1:	and    BYTE PTR [rbp+0x78],ah
   14000adc4:	movsxd esp,DWORD PTR [rbp+0x70]
   14000adc7:	je     0x14000ae32
   14000adc9:	outs   dx,DWORD PTR ds:[rsi]
   14000adca:	outs   dx,BYTE PTR ds:[rsi]
   14000adcb:	cmp    ah,BYTE PTR [rax]
   14000adcd:	add    BYTE PTR [rax],al
   14000adcf:	add    BYTE PTR [rbx+0x61],ah
   14000add2:	jne    0x14000ae3b
   14000add4:	push   0x6e612074
   14000add9:	and    BYTE PTR [rbp+0x78],ah
   14000addc:	movsxd esp,DWORD PTR [rbp+0x70]
   14000addf:	je     0x14000ae4a
   14000ade1:	outs   dx,DWORD PTR ds:[rsi]
   14000ade2:	outs   dx,BYTE PTR ds:[rsi]
   14000ade3:	cmp    ah,BYTE PTR [rax]
   14000ade5:	jne    0x14000ae55
   14000ade7:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000adeb:	outs   dx,BYTE PTR ds:[rsi]
   14000adec:	and    BYTE PTR [rsi+0x61],ah
   14000adef:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x65
   14000adf7:	add    BYTE PTR [rax+0x14000b7],al
   14000adfd:	add    BYTE PTR [rax],al
   14000adff:	add    BYTE PTR [rax+rcx*4+0x0],dh
   14000ae03:	rex add DWORD PTR [rax],eax
   14000ae06:	add    BYTE PTR [rax],al
   14000ae08:	je     0x14000ad92
   14000ae0a:	add    BYTE PTR [rax+0x1],al
   14000ae0d:	add    BYTE PTR [rax],al
   14000ae0f:	add    BYTE PTR [rax+rcx*4+0x0],dh
   14000ae13:	rex add DWORD PTR [rax],eax
   14000ae16:	add    BYTE PTR [rax],al
   14000ae18:	je     0x14000ada2
   14000ae1a:	add    BYTE PTR [rax+0x1],al
   14000ae1d:	add    BYTE PTR [rax],al
   14000ae1f:	add    BYTE PTR [rax+rcx*4+0x0],dh
   14000ae23:	rex add DWORD PTR [rax],eax
   14000ae26:	add    BYTE PTR [rax],al
   14000ae28:	xor    BYTE PTR [rax+rax*1+0x40],ch
   14000ae2c:	add    DWORD PTR [rax],eax
   14000ae2e:	add    BYTE PTR [rax],al
   14000ae30:	je     0x14000adba
   14000ae32:	add    BYTE PTR [rax+0x1],al
   14000ae35:	add    BYTE PTR [rax],al
   14000ae37:	add    al,bh
   14000ae39:	mov    bh,0x0
   14000ae3b:	rex add DWORD PTR [rax],eax
   14000ae3e:	add    BYTE PTR [rax],al
   14000ae40:	rex ins DWORD PTR es:[rdi],dx
   14000ae42:	add    BYTE PTR [rax+0x1],al
   14000ae45:	add    BYTE PTR [rax],al
   14000ae47:	add    BYTE PTR [rax+0x1400072],ah
   14000ae4d:	add    BYTE PTR [rax],al
   14000ae4f:	add    BYTE PTR [rax+0x6f],ah
   14000ae52:	add    BYTE PTR [rax+0x1],al
   14000ae55:	add    BYTE PTR [rax],al
   14000ae57:	add    al,dh
   14000ae59:	je     0x14000ae5b
   14000ae5b:	rex add DWORD PTR [rax],eax
   14000ae5e:	add    BYTE PTR [rax],al
   14000ae60:	xor    BYTE PTR [rdi+0x0],ch
   14000ae63:	rex add DWORD PTR [rax],eax
   14000ae66:	add    BYTE PTR [rax],al
   14000ae68:	(bad)  
   14000ae69:	ins    BYTE PTR es:[rdi],dx
   14000ae6a:	add    BYTE PTR [rax+0x1],al
   14000ae6d:	add    BYTE PTR [rax],al
   14000ae6f:	add    BYTE PTR [rax+0x140006f],dh
   14000ae75:	add    BYTE PTR [rax],al
   14000ae77:	add    BYTE PTR [rcx+0x6e],cl
   14000ae7a:	jbe    0x14000aedd
   14000ae7c:	ins    BYTE PTR es:[rdi],dx
   14000ae7d:	imul   esp,DWORD PTR [rax+riz*1+0x50],0x2e444950
   14000ae85:	add    BYTE PTR [rax],al
   14000ae87:	add    BYTE PTR [rcx],bh
   14000ae89:	xor    ch,BYTE PTR cs:[rsi]
   14000ae8c:	xor    BYTE PTR [rsi],ch
   14000ae8e:	xor    eax,0x34363831
   14000ae93:	xor    DWORD PTR [rax],eax
   14000ae95:	add    BYTE PTR [rax],al
   14000ae97:	add    BYTE PTR [rdx+0x61],cl
   14000ae9a:	outs   dx,BYTE PTR ds:[rsi]
   14000ae9b:	and    BYTE PTR [rcx],dh
   14000ae9d:	cmp    DWORD PTR [rax],esp
   14000ae9f:	xor    dh,BYTE PTR [rax]
   14000aea1:	xor    DWORD PTR [rdi],esi
   14000aea3:	add    BYTE PTR [rax],al
   14000aea5:	add    BYTE PTR [rax],al
   14000aea7:	add    BYTE PTR [rdx+0x69],ah
   14000aeaa:	outs   dx,BYTE PTR ds:[rsi]
   14000aeab:	pop    rsp
   14000aeac:	ja     0x14000af17
   14000aeae:	outs   dx,BYTE PTR ds:[rsi]
   14000aeaf:	ss xor al,0x5c
   14000aeb2:	jae    0x14000af19
   14000aeb4:	jae    0x14000af29
   14000aeb6:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c65685f
   14000aebd:	jo     0x14000af24
   14000aebf:	jb     0x14000aeef
   14000aec1:	gs js  0x14000af29
   14000aec4:	add    BYTE PTR [rax],al
   14000aec6:	add    DWORD PTR [rax],eax
   14000aec8:	js     0x14000ae82
   14000aeca:	add    BYTE PTR [rax+0x1],al
   14000aecd:	add    BYTE PTR [rax],al
   14000aecf:	add    al,ah
   14000aed1:	mov    DWORD PTR [rax],eax
   14000aed3:	rex add DWORD PTR [rax],eax
   14000aed6:	add    BYTE PTR [rax],al
   14000aed8:	add    BYTE PTR [rax],al
   14000aeda:	add    BYTE PTR [rax],al
   14000aedc:	add    DWORD PTR [rax],eax
   14000aede:	add    BYTE PTR [rax],al
   14000aee0:	add    al,BYTE PTR [rax]
   14000aee2:	add    BYTE PTR [rax],al
   14000aee4:	add    eax,DWORD PTR [rax]
   14000aee6:	add    BYTE PTR [rax],al
   14000aee8:	add    al,0x0
   14000aeea:	add    BYTE PTR [rax],al
   14000aeec:	add    BYTE PTR [rax],al
   14000aeee:	add    BYTE PTR [rax],al
   14000aef0:	jo     0x14000aef2
	...
   14000af46:	add    BYTE PTR [rax],al
   14000af48:	push   rax
   14000af49:	lock add BYTE PTR [rax+0x1],al
	...
   14000af61:	adc    BYTE PTR [rcx],al
   14000af63:	rex add DWORD PTR [rax],eax
   14000af66:	add    BYTE PTR [rax],al
   14000af68:	adc    BYTE PTR [rax],dl
   14000af6a:	add    DWORD PTR [rax+0x1],eax
   14000af6d:	add    BYTE PTR [rax],al
   14000af6f:	add    ah,cl
   14000af71:	cmc    
   14000af72:	add    BYTE PTR [rax+0x1],al
   14000af75:	add    BYTE PTR [rax],al
   14000af77:	add    BYTE PTR [rax],dl
   14000af79:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000af7a:	add    BYTE PTR [rax+0x1],al
	...
   14000af85:	add    BYTE PTR [rax+0x0],al
   14000af88:	push   rdx
   14000af89:	push   rbx
   14000af8a:	rex.R push rbx
   14000af8c:	cmp    DWORD PTR [rsi],0xa46c35a1
   14000af92:	in     eax,0x41
   14000af94:	xchg   ecx,eax
   14000af95:	clc    
   14000af96:	xchg   bx,ax
   14000af98:	cmp    eax,0x14af31a
   14000af9d:	add    BYTE PTR [rax],al
   14000af9f:	add    BYTE PTR [rdx+0x3a],al
   14000afa2:	pop    rsp
   14000afa3:	ins    DWORD PTR es:[rdi],dx
   14000afa4:	(bad)  
   14000afa5:	je     0x14000b013
   14000afa7:	(bad)  
   14000afa8:	(bad)  
   14000afa9:	pop    rsp
   14000afaa:	(bad)  
   14000afab:	imul   ebp,DWORD PTR [rsi+0x5c],0x366e6977
   14000afb2:	xor    al,0x5c
   14000afb4:	jae    0x14000b01b
   14000afb6:	jae    0x14000b02b
   14000afb8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c65685f
   14000afbf:	jo     0x14000b026
   14000afc1:	jb     0x14000aff1
   14000afc3:	jo     0x14000b029
   14000afc5:	(bad)  
   14000afc6:	add    BYTE PTR [rax],al
   14000afc8:	add    BYTE PTR [rax],al
   14000afca:	add    BYTE PTR [rax],al
   14000afcc:	sbb    al,0x0
   14000afce:	add    BYTE PTR [rax],al
   14000afd0:	(bad)  
	...
   14000afdd:	add    BYTE PTR [rax],al
   14000afdf:	add    BYTE PTR [rax-0x10],ah
	...
   14000afea:	add    BYTE PTR [rax],al
   14000afec:	(bad)  
   14000afed:	(bad)  
   14000afee:	(bad)  
   14000afef:	inc    DWORD PTR [rax]
   14000aff1:	add    BYTE PTR [rax],al
   14000aff3:	add    BYTE PTR [rax+0x0],al
   14000aff6:	add    BYTE PTR [rax],al
   14000aff8:	or     BYTE PTR [rax+0x0],dh
	...
   14000b00e:	add    BYTE PTR [rax],al
   14000b010:	add    DWORD PTR [rax],eax
   14000b012:	add    BYTE PTR [rax],al
   14000b014:	and    BYTE PTR [rax+0x0],dh
   14000b01a:	add    BYTE PTR [rax],al
   14000b01c:	add    BYTE PTR [rax],al
   14000b01e:	add    BYTE PTR [rax],al
   14000b020:	loopne 0x14000afd1
	...
   14000b02e:	add    BYTE PTR [rax],al
   14000b030:	add    DWORD PTR [rax],eax
	...
   14000b03a:	add    BYTE PTR [rax],al
   14000b03c:	mov    al,0xf0
   14000b03e:	add    BYTE PTR [rax],al
   14000b040:	pop    rax
   14000b041:	mov    al,0x0
   14000b043:	add    BYTE PTR [rax],dh
   14000b045:	mov    al,0x0
	...
   14000b05f:	add    BYTE PTR [rcx],al
   14000b061:	add    BYTE PTR [rax],al
   14000b063:	add    BYTE PTR [rax-0x50],dh
	...
   14000b06e:	add    BYTE PTR [rax],al
   14000b070:	xor    BYTE PTR [rax+0x0],0x0
	...
   14000b07f:	add    BYTE PTR [rax+0xf0],dh
   14000b085:	add    BYTE PTR [rax],al
   14000b087:	add    BYTE PTR [rax],al
   14000b089:	add    BYTE PTR [rax],al
   14000b08b:	add    bh,bh
   14000b08d:	(bad)  
   14000b08e:	(bad)  
   14000b08f:	inc    DWORD PTR [rax]
   14000b091:	add    BYTE PTR [rax],al
   14000b093:	add    BYTE PTR [rax+0x0],al
   14000b096:	add    BYTE PTR [rax],al
   14000b098:	pop    rax
   14000b099:	mov    al,0x0
	...
   14000b0a7:	add    BYTE PTR [rcx],al
	...
   14000b0b1:	add    BYTE PTR [rax],al
   14000b0b3:	add    al,ah
   14000b0b5:	lock add BYTE PTR [rax],al
   14000b0b8:	shl    BYTE PTR [rax-0x4f580000],1
	...
   14000b0d6:	add    BYTE PTR [rax],al
   14000b0d8:	add    al,BYTE PTR [rax]
   14000b0da:	add    BYTE PTR [rax],al
   14000b0dc:	call   0x14000b191
	...
   14000b0e9:	mov    cl,0x0
   14000b0eb:	add    BYTE PTR [rax+0xb0],al
	...
   14000b0fd:	add    BYTE PTR [rax],al
   14000b0ff:	add    al,ah
   14000b101:	lock add BYTE PTR [rax],al
   14000b104:	add    DWORD PTR [rax],eax
   14000b106:	add    BYTE PTR [rax],al
   14000b108:	add    BYTE PTR [rax],al
   14000b10a:	add    BYTE PTR [rax],al
   14000b10c:	(bad)  
   14000b10d:	(bad)  
   14000b10e:	(bad)  
   14000b10f:	inc    DWORD PTR [rax]
   14000b111:	add    BYTE PTR [rax],al
   14000b113:	add    BYTE PTR [rax+0x0],al
   14000b116:	add    BYTE PTR [rax],al
   14000b118:	shl    BYTE PTR [rax+0x0],1
	...
   14000b126:	add    BYTE PTR [rax],al
   14000b128:	add    DWORD PTR [rax],eax
	...
   14000b132:	add    BYTE PTR [rax],al
   14000b134:	sbb    cl,dh
   14000b136:	add    BYTE PTR [rax],al
   14000b138:	push   rax
   14000b139:	mov    cl,0x0
   14000b13b:	add    BYTE PTR [rax],ch
   14000b13d:	mov    cl,0x0
	...
   14000b157:	add    BYTE PTR [rbx],al
   14000b159:	add    BYTE PTR [rax],al
   14000b15b:	add    BYTE PTR [rax-0x4f],ch
	...
   14000b166:	add    BYTE PTR [rax],al
   14000b168:	mov    BYTE PTR [rcx-0x4f000000],dh
   14000b16e:	add    BYTE PTR [rax],al
   14000b170:	xor    BYTE PTR [rax+0x0],0x0
	...
   14000b187:	add    BYTE PTR [rax],bl
   14000b189:	icebp  
   14000b18a:	add    BYTE PTR [rax],al
   14000b18c:	add    al,BYTE PTR [rax]
   14000b18e:	add    BYTE PTR [rax],al
   14000b190:	add    BYTE PTR [rax],al
   14000b192:	add    BYTE PTR [rax],al
   14000b194:	(bad)  
   14000b195:	(bad)  
   14000b196:	(bad)  
   14000b197:	inc    DWORD PTR [rax]
   14000b199:	add    BYTE PTR [rax],al
   14000b19b:	add    BYTE PTR [rax+0x0],al
   14000b19e:	add    BYTE PTR [rax],al
   14000b1a0:	push   rax
   14000b1a1:	mov    cl,0x0
	...
   14000b1af:	add    BYTE PTR [rcx],al
	...
   14000b1b9:	add    BYTE PTR [rax],al
   14000b1bb:	add    BYTE PTR [rax-0xf],dl
   14000b1be:	add    BYTE PTR [rax],al
   14000b1c0:	fdiv   DWORD PTR [rcx-0x4e500000]
	...
   14000b1de:	add    BYTE PTR [rax],al
   14000b1e0:	add    eax,DWORD PTR [rax]
   14000b1e2:	add    BYTE PTR [rax],al
   14000b1e4:	lock mov cl,0x0
	...
   14000b1ef:	add    BYTE PTR [rax],dl
   14000b1f1:	mov    dl,0x0
   14000b1f3:	add    BYTE PTR [rax],al
   14000b1f5:	mov    cl,0x0
   14000b1f7:	add    BYTE PTR [rax+0xb0],al
	...
   14000b20d:	add    BYTE PTR [rax],al
   14000b20f:	add    BYTE PTR [rax-0xf],dl
   14000b212:	add    BYTE PTR [rax],al
   14000b214:	add    al,BYTE PTR [rax]
   14000b216:	add    BYTE PTR [rax],al
   14000b218:	add    BYTE PTR [rax],al
   14000b21a:	add    BYTE PTR [rax],al
   14000b21c:	(bad)  
   14000b21d:	(bad)  
   14000b21e:	(bad)  
   14000b21f:	inc    DWORD PTR [rax]
   14000b221:	add    BYTE PTR [rax],al
   14000b223:	add    BYTE PTR [rax+0x0],al
   14000b226:	add    BYTE PTR [rax],al
   14000b228:	fdiv   DWORD PTR [rcx+0x0]
	...
   14000b236:	add    BYTE PTR [rax],al
   14000b238:	add    DWORD PTR [rax],eax
	...
   14000b242:	add    BYTE PTR [rax],al
   14000b244:	mov    al,dh
   14000b246:	add    BYTE PTR [rax],al
   14000b248:	(bad)  
   14000b249:	mov    dl,0x0
   14000b24b:	add    BYTE PTR [rax],bh
   14000b24d:	mov    dl,0x0
	...
   14000b267:	add    BYTE PTR [rdx],al
   14000b269:	add    BYTE PTR [rax],al
   14000b26b:	add    BYTE PTR [rax-0x4e],bh
	...
   14000b276:	add    BYTE PTR [rax],al
   14000b278:	nop
   14000b279:	mov    dl,0x0
   14000b27b:	add    al,ah
   14000b27d:	scas   eax,DWORD PTR es:[rdi]
	...
   14000b28e:	add    BYTE PTR [rax],al
   14000b290:	mov    al,dh
   14000b292:	add    BYTE PTR [rax],al
   14000b294:	add    DWORD PTR [rax],eax
   14000b296:	add    BYTE PTR [rax],al
   14000b298:	add    BYTE PTR [rax],al
   14000b29a:	add    BYTE PTR [rax],al
   14000b29c:	(bad)  
   14000b29d:	(bad)  
   14000b29e:	(bad)  
   14000b29f:	inc    DWORD PTR [rax]
   14000b2a1:	add    BYTE PTR [rax],al
   14000b2a3:	add    BYTE PTR [rax+0x0],al
   14000b2a6:	add    BYTE PTR [rax],al
   14000b2a8:	(bad)  
   14000b2a9:	mov    dl,0x0
	...
   14000b2b7:	add    BYTE PTR [rcx],al
	...
   14000b2c1:	add    BYTE PTR [rax],al
   14000b2c3:	add    BYTE PTR [rax-0x1fffff0f],dh
   14000b2c9:	mov    dl,0x0
   14000b2cb:	add    BYTE PTR [rax+0xb2],bh
	...
   14000b2e5:	add    BYTE PTR [rax],al
   14000b2e7:	add    BYTE PTR [rdx],al
   14000b2e9:	add    BYTE PTR [rax],al
   14000b2eb:	add    al,bh
   14000b2ed:	mov    dl,0x0
	...
   14000b2f7:	add    BYTE PTR [rax],dl
   14000b2f9:	mov    bl,0x0
   14000b2fb:	add    BYTE PTR [rax],bh
   14000b2fd:	mov    bl,0x0
	...
   14000b30f:	add    BYTE PTR [rax+0x10000f1],dh
   14000b315:	add    BYTE PTR [rax],al
   14000b317:	add    BYTE PTR [rax],al
   14000b319:	add    BYTE PTR [rax],al
   14000b31b:	add    bh,bh
   14000b31d:	(bad)  
   14000b31e:	(bad)  
   14000b31f:	inc    DWORD PTR [rax]
   14000b321:	add    BYTE PTR [rax],al
   14000b323:	add    BYTE PTR [rax+0x0],al
   14000b326:	add    BYTE PTR [rax],al
   14000b328:	loopne 0x14000b2dc
	...
   14000b336:	add    BYTE PTR [rax],al
   14000b338:	add    dl,dh
	...
   14000b342:	add    BYTE PTR [rax],al
   14000b344:	(bad)  
   14000b345:	(bad)  
   14000b346:	(bad)  
   14000b347:	inc    DWORD PTR [rax]
   14000b349:	add    BYTE PTR [rax],al
   14000b34b:	add    BYTE PTR [rax+0x0],al
   14000b34e:	add    BYTE PTR [rax],al
   14000b350:	(bad)  
   14000b351:	mov    bl,0x0
	...
   14000b367:	add    BYTE PTR [rcx],al
   14000b369:	add    BYTE PTR [rax],al
   14000b36b:	add    BYTE PTR [rax-0x4d],bh
	...
   14000b376:	add    BYTE PTR [rax],al
   14000b378:	cmp    BYTE PTR [rbx+0x0],dh
	...
   14000b386:	add    BYTE PTR [rax],al
   14000b388:	add    DWORD PTR [rax],eax
   14000b38a:	add    BYTE PTR [rax],al
   14000b38c:	mov    eax,0x4000000
   14000b391:	add    BYTE PTR [rax],al
   14000b393:	add    BYTE PTR [rax-0xe],dl
   14000b396:	add    BYTE PTR [rax],al
   14000b398:	mov    al,0xb3
   14000b39a:	add    BYTE PTR [rax],al
   14000b39c:	mov    BYTE PTR [rbx+0x0],dh
	...
   14000b3b2:	add    BYTE PTR [rax],al
   14000b3b4:	add    eax,DWORD PTR [rax]
   14000b3b6:	add    BYTE PTR [rax],al
   14000b3b8:	or     al,BYTE PTR [rax]
   14000b3ba:	add    BYTE PTR [rax],al
   14000b3bc:	shl    BYTE PTR [rbx+0x0],1
	...
   14000b3ce:	add    BYTE PTR [rax],al
   14000b3d0:	sub    BYTE PTR [rax+rax*1+0xb45000],dh
   14000b3d7:	add    al,ah
   14000b3d9:	mov    ah,0x0
   14000b3db:	add    BYTE PTR [rax-0x4b],cl
   14000b3de:	add    BYTE PTR [rax],al
   14000b3e0:	movabs al,ds:0xf00000b6c80000b6
   14000b3e9:	mov    dh,0x0
   14000b3eb:	add    BYTE PTR [rax-0x4b],cl
   14000b3ee:	add    BYTE PTR [rax],al
   14000b3f0:	movabs al,ds:0xb6c80000b6
	...
   14000b425:	add    BYTE PTR [rax],al
   14000b427:	add    BYTE PTR [rax-0xe],dl
   14000b42a:	add    BYTE PTR [rax],al
   14000b42c:	or     DWORD PTR [rax],eax
   14000b42e:	add    BYTE PTR [rax],al
   14000b430:	add    BYTE PTR [rax],al
   14000b432:	add    BYTE PTR [rax],al
   14000b434:	(bad)  
   14000b435:	(bad)  
   14000b436:	(bad)  
   14000b437:	inc    DWORD PTR [rax]
   14000b439:	add    BYTE PTR [rax],al
   14000b43b:	add    BYTE PTR [rax+0x0],al
   14000b43e:	add    BYTE PTR [rax],al
   14000b440:	mov    al,0xb3
	...
   14000b44e:	add    BYTE PTR [rax],al
   14000b450:	movabs al,ds:0x80000f2
   14000b459:	add    BYTE PTR [rax],al
   14000b45b:	add    bh,bh
   14000b45d:	(bad)  
   14000b45e:	(bad)  
   14000b45f:	inc    DWORD PTR [rax]
   14000b461:	add    BYTE PTR [rax],al
   14000b463:	add    BYTE PTR [rax+0x0],al
   14000b466:	add    BYTE PTR [rax],al
   14000b468:	js     0x14000b41e
	...
   14000b47a:	add    BYTE PTR [rax],al
   14000b47c:	add    eax,DWORD PTR [rax]
   14000b47e:	add    BYTE PTR [rax],al
   14000b480:	or     DWORD PTR [rax],eax
   14000b482:	add    BYTE PTR [rax],al
   14000b484:	nop
   14000b485:	mov    ah,0x0
	...
   14000b48f:	add    BYTE PTR [rax-0x4c],dl
   14000b492:	add    BYTE PTR [rax],al
   14000b494:	loopne 0x14000b44a
   14000b496:	add    BYTE PTR [rax],al
   14000b498:	rex.W mov bpl,0x0
   14000b49b:	add    BYTE PTR [rax-0x37ffff4a],ah
   14000b4a1:	mov    dh,0x0
   14000b4a3:	add    al,dh
   14000b4a5:	mov    dh,0x0
   14000b4a7:	add    BYTE PTR [rax-0x4b],cl
   14000b4aa:	add    BYTE PTR [rax],al
   14000b4ac:	movabs al,ds:0xb6c80000b6
	...
   14000b4dd:	add    BYTE PTR [rax],al
   14000b4df:	add    al,dh
   14000b4e1:	repnz add BYTE PTR [rax],al
   14000b4e4:	add    eax,DWORD PTR [rax]
   14000b4e6:	add    BYTE PTR [rax],al
   14000b4e8:	add    BYTE PTR [rax],al
   14000b4ea:	add    BYTE PTR [rax],al
   14000b4ec:	(bad)  
   14000b4ed:	(bad)  
   14000b4ee:	(bad)  
   14000b4ef:	inc    DWORD PTR [rax]
   14000b4f1:	add    BYTE PTR [rax],al
   14000b4f3:	add    BYTE PTR [rax+0x0],al
   14000b4f6:	add    BYTE PTR [rax],al
   14000b4f8:	or     BYTE PTR [rbp+0x0],dh
	...
   14000b50e:	add    BYTE PTR [rax],al
   14000b510:	add    al,0x0
   14000b512:	add    BYTE PTR [rax],al
   14000b514:	and    BYTE PTR [rbp+0x0],dh
   14000b51a:	add    BYTE PTR [rax],al
   14000b51c:	add    BYTE PTR [rax],al
   14000b51e:	add    BYTE PTR [rax],al
   14000b520:	loopne 0x14000b4d6
   14000b522:	add    BYTE PTR [rax],al
   14000b524:	rex.W mov bpl,0x0
   14000b527:	add    BYTE PTR [rax-0x37ffff4a],ah
   14000b52d:	mov    dh,0x0
	...
   14000b547:	add    BYTE PTR [rax],bh
   14000b549:	repz add BYTE PTR [rax],al
   14000b54c:	add    al,BYTE PTR [rax]
	...
   14000b556:	add    BYTE PTR [rax],al
   14000b558:	add    al,0x0
   14000b55a:	add    BYTE PTR [rax],al
   14000b55c:	push   rax
   14000b55d:	add    BYTE PTR [rax],al
   14000b55f:	add    BYTE PTR [rax-0x4b],dh
	...
   14000b576:	add    BYTE PTR [rax],al
   14000b578:	add    eax,DWORD PTR [rax]
   14000b57a:	add    BYTE PTR [rax],al
   14000b57c:	mov    BYTE PTR [rbp+0x0],dh
   14000b582:	add    BYTE PTR [rax],al
   14000b584:	add    BYTE PTR [rax],al
   14000b586:	add    BYTE PTR [rax],al
   14000b588:	test   al,0xb5
   14000b58a:	add    BYTE PTR [rax],al
   14000b58c:	shl    BYTE PTR [rbp-0x49d80000],1
	...
   14000b5a6:	add    BYTE PTR [rax],al
   14000b5a8:	cmp    bl,dh
   14000b5aa:	add    BYTE PTR [rax],al
   14000b5ac:	add    al,BYTE PTR [rax]
   14000b5ae:	add    BYTE PTR [rax],al
   14000b5b0:	add    BYTE PTR [rax],al
   14000b5b2:	add    BYTE PTR [rax],al
   14000b5b4:	(bad)  
   14000b5b5:	(bad)  
   14000b5b6:	(bad)  
   14000b5b7:	inc    DWORD PTR [rax]
   14000b5b9:	add    BYTE PTR [rax],al
   14000b5bb:	add    BYTE PTR [rax+0x0],al
   14000b5be:	add    BYTE PTR [rax],al
   14000b5c0:	jo     0x14000b577
	...
   14000b5ce:	add    BYTE PTR [rax],al
   14000b5d0:	js     0x14000b5c5
   14000b5d2:	add    BYTE PTR [rax],al
   14000b5d4:	add    DWORD PTR [rax],eax
   14000b5d6:	add    BYTE PTR [rax],al
   14000b5d8:	add    BYTE PTR [rax],al
   14000b5da:	add    BYTE PTR [rax],al
   14000b5dc:	(bad)  
   14000b5dd:	(bad)  
   14000b5de:	(bad)  
   14000b5df:	inc    DWORD PTR [rax]
   14000b5e1:	add    BYTE PTR [rax],al
   14000b5e3:	add    BYTE PTR [rax+0x0],al
   14000b5e6:	add    BYTE PTR [rax],al
   14000b5e8:	clc    
   14000b5e9:	mov    ch,0x0
	...
   14000b5ff:	add    BYTE PTR [rdx],al
   14000b601:	add    BYTE PTR [rax],al
   14000b603:	add    BYTE PTR [rax],dl
   14000b605:	mov    dh,0x0
	...
   14000b60f:	add    al,dl
   14000b611:	mov    ch,0x0
   14000b613:	add    BYTE PTR [rax],ch
   14000b615:	mov    dh,0x0
	...
   14000b627:	add    BYTE PTR [rax+0xf3],ah
   14000b62d:	add    BYTE PTR [rax],al
   14000b62f:	add    BYTE PTR [rax],cl
   14000b631:	add    BYTE PTR [rax],al
   14000b633:	add    bh,bh
   14000b635:	(bad)  
   14000b636:	(bad)  
   14000b637:	inc    DWORD PTR [rax]
   14000b639:	add    BYTE PTR [rax],al
   14000b63b:	add    BYTE PTR [rax+0x0],al
   14000b63e:	add    BYTE PTR [rax],al
   14000b640:	push   rax
   14000b641:	mov    dh,0x0
	...
   14000b657:	add    BYTE PTR [rcx],al
   14000b659:	add    BYTE PTR [rax],al
   14000b65b:	add    BYTE PTR [rax-0x4a],ch
	...
   14000b666:	add    BYTE PTR [rax],al
   14000b668:	js     0x14000b620
	...
   14000b676:	add    BYTE PTR [rax],al
   14000b678:	movabs al,ds:0xf3
   14000b681:	add    BYTE PTR [rax],al
   14000b683:	add    bh,bh
   14000b685:	(bad)  
   14000b686:	(bad)  
   14000b687:	inc    DWORD PTR [rax]
   14000b689:	add    BYTE PTR [rax],al
   14000b68b:	add    BYTE PTR [rax+0x0],al
   14000b68e:	add    BYTE PTR [rax],al
   14000b690:	push   rax
   14000b691:	mov    dh,0x0
	...
   14000b69f:	add    BYTE PTR [rax-0xd],bh
   14000b6a2:	add    BYTE PTR [rax],al
   14000b6a4:	add    DWORD PTR [rax],eax
	...
   14000b6ae:	add    BYTE PTR [rax],al
   14000b6b0:	add    al,0x0
   14000b6b2:	add    BYTE PTR [rax],al
   14000b6b4:	add    BYTE PTR [rax],al
   14000b6b7:	add    al,bh
   14000b6b9:	mov    ch,0x0
	...
   14000b6c7:	add    BYTE PTR [rax+0xf3],ah
   14000b6cd:	add    BYTE PTR [rax],al
   14000b6cf:	add    BYTE PTR [rax],cl
   14000b6d1:	add    BYTE PTR [rax],al
   14000b6d3:	add    BYTE PTR [rax],al
   14000b6d5:	add    BYTE PTR [rax],al
   14000b6d7:	add    BYTE PTR [rax+rax*1],al
   14000b6da:	add    BYTE PTR [rax],al
   14000b6dc:	add    BYTE PTR [rax],al
   14000b6df:	add    BYTE PTR [rax-0x4a],dl
	...
   14000b6ee:	add    BYTE PTR [rax],al
   14000b6f0:	shl    bl,1
   14000b6f2:	add    BYTE PTR [rax],al
   14000b6f4:	add    eax,DWORD PTR [rax]
   14000b6f6:	add    BYTE PTR [rax],al
   14000b6f8:	adc    BYTE PTR [rax],al
   14000b6fa:	add    BYTE PTR [rax],al
   14000b6fc:	(bad)  
   14000b6fd:	(bad)  
   14000b6fe:	(bad)  
   14000b6ff:	inc    DWORD PTR [rax]
   14000b701:	add    BYTE PTR [rax],al
   14000b703:	add    BYTE PTR [rax+0x0],al
   14000b706:	add    BYTE PTR [rax],al
   14000b708:	sbb    BYTE PTR [rdi+0x0],dh
	...
   14000b71e:	add    BYTE PTR [rax],al
   14000b720:	add    al,0x0
   14000b722:	add    BYTE PTR [rax],al
   14000b724:	xor    BYTE PTR [rdi+0x0],dh
   14000b72a:	add    BYTE PTR [rax],al
   14000b72c:	add    BYTE PTR [rax],al
   14000b72e:	add    BYTE PTR [rax],al
   14000b730:	pop    rax
   14000b731:	mov    bh,0x0
   14000b733:	add    BYTE PTR [rax-0x4b],cl
   14000b736:	add    BYTE PTR [rax],al
   14000b738:	movabs al,ds:0xb6c80000b6
	...
   14000b755:	add    BYTE PTR [rax],al
   14000b757:	add    al,dl
   14000b759:	repz add BYTE PTR [rax],al
   14000b75c:	add    eax,DWORD PTR [rax]
   14000b75e:	add    BYTE PTR [rax],al
   14000b760:	add    BYTE PTR [rax],al
   14000b762:	add    BYTE PTR [rax],al
   14000b764:	(bad)  
   14000b765:	(bad)  
   14000b766:	(bad)  
   14000b767:	inc    DWORD PTR [rax]
   14000b769:	add    BYTE PTR [rax],al
   14000b76b:	add    BYTE PTR [rax+0x0],al
   14000b76e:	add    BYTE PTR [rax],al
   14000b770:	sbb    BYTE PTR [rdi+0x0],dh
	...
   14000b77e:	add    BYTE PTR [rax],al
   14000b780:	add    DWORD PTR [rax],eax
	...
   14000b78a:	add    BYTE PTR [rax],al
   14000b78c:	movabs al,ds:0x800000b7a80000f4
   14000b795:	mov    bh,0x0
	...
   14000b7af:	add    BYTE PTR [rcx],al
   14000b7b1:	add    BYTE PTR [rax],al
   14000b7b3:	add    al,al
   14000b7b5:	mov    bh,0x0
	...
   14000b7bf:	add    al,dl
   14000b7c1:	mov    bh,0x0
	...
   14000b7cf:	add    BYTE PTR [rax+0xf4],ah
   14000b7d5:	add    BYTE PTR [rax],al
   14000b7d7:	add    BYTE PTR [rax],al
   14000b7d9:	add    BYTE PTR [rax],al
   14000b7db:	add    bh,bh
   14000b7dd:	(bad)  
   14000b7de:	(bad)  
   14000b7df:	inc    DWORD PTR [rax]
   14000b7e1:	add    BYTE PTR [rax],al
   14000b7e3:	add    BYTE PTR [rax+0x0],al
   14000b7e6:	add    BYTE PTR [rax],al
   14000b7e8:	test   al,0xb7
	...
   14000b7f6:	add    BYTE PTR [rax],al
   14000b7f8:	add    DWORD PTR [rax],eax
	...
   14000b802:	add    BYTE PTR [rax],al
   14000b804:	shl    ah,1
   14000b806:	add    BYTE PTR [rax],al
   14000b808:	and    BYTE PTR [rax-0x48080000],bh
	...
   14000b826:	add    BYTE PTR [rax],al
   14000b828:	add    al,BYTE PTR [rax]
   14000b82a:	add    BYTE PTR [rax],al
   14000b82c:	cmp    BYTE PTR [rax+0x0],bh
   14000b832:	add    BYTE PTR [rax],al
   14000b834:	add    BYTE PTR [rax],al
   14000b836:	add    BYTE PTR [rax],al
   14000b838:	push   rax
   14000b839:	mov    eax,0xb7d00000
	...
   14000b84e:	add    BYTE PTR [rax],al
   14000b850:	shl    ah,1
   14000b852:	add    BYTE PTR [rax],al
   14000b854:	add    DWORD PTR [rax],eax
   14000b856:	add    BYTE PTR [rax],al
   14000b858:	add    BYTE PTR [rax],al
   14000b85a:	add    BYTE PTR [rax],al
   14000b85c:	(bad)  
   14000b85d:	(bad)  
   14000b85e:	(bad)  
   14000b85f:	inc    DWORD PTR [rax]
   14000b861:	add    BYTE PTR [rax],al
   14000b863:	add    BYTE PTR [rax+0x0],al
   14000b866:	add    BYTE PTR [rax],al
   14000b868:	and    BYTE PTR [rax+0x0],bh
	...
   14000b876:	add    BYTE PTR [rax],al
   14000b878:	add    DWORD PTR [rax],eax
	...
   14000b882:	add    BYTE PTR [rax],al
   14000b884:	jo     0x14000b87b
   14000b886:	add    BYTE PTR [rax],al
   14000b888:	movabs al,ds:0xb8780000b8
	...
   14000b8a5:	add    BYTE PTR [rax],al
   14000b8a7:	add    BYTE PTR [rcx],al
   14000b8a9:	add    BYTE PTR [rax],al
   14000b8ab:	add    BYTE PTR [rax+0xb8],bh
   14000b8b1:	add    BYTE PTR [rax],al
   14000b8b3:	add    BYTE PTR [rax],al
   14000b8b5:	add    BYTE PTR [rax],al
   14000b8b7:	add    al,cl
   14000b8b9:	mov    eax,0x0
	...
   14000b8c6:	add    BYTE PTR [rax],al
   14000b8c8:	jo     0x14000b8bf
	...
   14000b8d2:	add    BYTE PTR [rax],al
   14000b8d4:	(bad)  
   14000b8d5:	(bad)  
   14000b8d6:	(bad)  
   14000b8d7:	inc    DWORD PTR [rax]
   14000b8d9:	add    BYTE PTR [rax],al
   14000b8db:	add    BYTE PTR [rax+0x0],al
   14000b8de:	add    BYTE PTR [rax],al
   14000b8e0:	movabs al,ds:0xb8
	...
   14000b90d:	add    BYTE PTR [rax],al
   14000b90f:	add    BYTE PTR [rcx],al
   14000b911:	(bad)  
   14000b912:	add    al,BYTE PTR [rax]
   14000b914:	(bad)  
   14000b915:	xor    al,BYTE PTR [rdx]
   14000b917:	xor    BYTE PTR [rcx],al
   14000b919:	add    al,0x1
   14000b91b:	add    BYTE PTR [rdx+rax*2],al
   14000b91e:	add    BYTE PTR [rax],al
   14000b920:	add    DWORD PTR [rcx+rax*1],eax
   14000b923:	add    BYTE PTR [rdx+rax*2],al
   14000b926:	add    BYTE PTR [rax],al
   14000b928:	add    DWORD PTR [rsi],eax
   14000b92a:	add    al,BYTE PTR [rax]
   14000b92c:	(bad)  
   14000b92d:	xor    al,BYTE PTR [rdx]
   14000b92f:	xor    BYTE PTR [rcx],al
   14000b931:	(bad)  
   14000b932:	add    al,BYTE PTR [rax]
   14000b934:	(bad)  
   14000b935:	xor    al,BYTE PTR [rdx]
   14000b937:	xor    BYTE PTR [rcx],al
   14000b939:	or     al,BYTE PTR [rax+rax*1]
   14000b93c:	or     dh,BYTE PTR [rsi+rax*1]
   14000b93f:	add    BYTE PTR [rdx],cl
   14000b941:	xor    al,BYTE PTR [rsi]
   14000b943:	jo     0x14000b946
   14000b945:	or     al,BYTE PTR [rax+rax*1]
   14000b948:	or     dh,BYTE PTR [rsi+rax*1]
   14000b94b:	add    BYTE PTR [rdx],cl
   14000b94d:	xor    al,BYTE PTR [rsi]
   14000b94f:	jo     0x14000b952
   14000b951:	(bad)  
   14000b952:	add    al,BYTE PTR [rax]
   14000b954:	(bad)  
   14000b955:	xor    al,BYTE PTR [rdx]
   14000b957:	xor    BYTE PTR [rcx],al
   14000b959:	(bad)  
   14000b95a:	add    al,BYTE PTR [rax]
   14000b95c:	(bad)  
   14000b95d:	xor    al,BYTE PTR [rdx]
   14000b95f:	xor    BYTE PTR [rcx],al
   14000b961:	adc    al,0x8
   14000b963:	add    BYTE PTR [rsp+riz*2],dl
   14000b966:	or     BYTE PTR [rax],al
   14000b968:	adc    al,0x54
   14000b96a:	(bad)  
   14000b96b:	add    BYTE PTR [rsp+rsi*1],dl
   14000b96e:	(bad)  
   14000b96f:	add    BYTE PTR [rdx+rsi*1],dl
   14000b972:	adc    BYTE PTR [rax+0x1],dh
   14000b975:	clts   
   14000b977:	add    BYTE PTR [rdi],cl
   14000b979:	fs (bad) 
   14000b97b:	add    BYTE PTR [rdi],cl
   14000b97d:	xor    al,0x6
   14000b97f:	add    BYTE PTR [rdi],cl
   14000b981:	xor    cl,BYTE PTR [rbx]
   14000b983:	jo     0x14000b986
   14000b985:	add    al,0x1
   14000b987:	add    BYTE PTR [rdx+rax*2],al
   14000b98a:	add    BYTE PTR [rax],al
   14000b98c:	add    DWORD PTR [rdx],ecx
   14000b98e:	add    al,0x0
   14000b990:	or     dh,BYTE PTR [rsi+rax*1]
   14000b993:	add    BYTE PTR [rdx],cl
   14000b995:	xor    al,BYTE PTR [rsi]
   14000b997:	jo     0x14000b9b2
   14000b999:	and    DWORD PTR [rip+0x14621800],eax        # 0x15462d19f
   14000b99f:	loopne 0x14000b9b3
   14000b9a1:	jo     0x14000b9b4
   14000b9a3:	(bad)  
   14000b9a4:	adc    BYTE PTR [rax],dh
   14000b9a6:	add    BYTE PTR [rax],al
   14000b9a8:	mov    esi,0x58000089
   14000b9ad:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b9ae:	add    BYTE PTR [rax],al
   14000b9b0:	(bad)  
   14000b9b1:	(bad)  
   14000b9b2:	(bad)  
   14000b9b3:	inc    DWORD PTR [rax]
   14000b9b5:	add    BYTE PTR [rax],al
   14000b9b7:	add    bh,bh
   14000b9b9:	(bad)  
   14000b9ba:	(bad)  
   14000b9bb:	inc    DWORD PTR [rax]
   14000b9bd:	add    BYTE PTR [rax],al
   14000b9bf:	add    BYTE PTR [rcx],al
   14000b9c1:	add    BYTE PTR [rax],al
   14000b9c3:	add    BYTE PTR [rax],al
   14000b9c5:	add    BYTE PTR [rax],al
   14000b9c7:	add    BYTE PTR [rcx],al
	...
   14000b9d5:	add    BYTE PTR [rax],al
   14000b9d7:	add    BYTE PTR [rbx],al
   14000b9d9:	add    BYTE PTR [rax],al
   14000b9db:	add    BYTE PTR [rcx],al
   14000b9dd:	add    BYTE PTR [rax],al
   14000b9df:	add    al,bh
   14000b9e1:	mov    ecx,0x20000
   14000b9e6:	add    BYTE PTR [rax],al
   14000b9e8:	add    al,BYTE PTR [rax]
   14000b9ea:	add    BYTE PTR [rax],al
   14000b9ec:	add    eax,DWORD PTR [rax]
   14000b9ee:	add    BYTE PTR [rax],al
   14000b9f0:	add    DWORD PTR [rax],eax
   14000b9f2:	add    BYTE PTR [rax],al
   14000b9f4:	or     al,0xba
   14000b9f6:	add    BYTE PTR [rax],al
   14000b9f8:	add    BYTE PTR [rax],al
	...
   14000ba03:	add    BYTE PTR [rax],ah
   14000ba05:	xchg   esp,eax
   14000ba06:	add    BYTE PTR [rax],al
   14000ba08:	cmp    BYTE PTR [rax],al
   14000ba0a:	add    BYTE PTR [rax],al
   14000ba0c:	add    BYTE PTR [rax],al
	...
   14000ba17:	add    BYTE PTR [rsp+rdx*4+0x0],ah
   14000ba1b:	add    BYTE PTR [rax+0x0],cl
   14000ba1e:	add    BYTE PTR [rax],al
   14000ba20:	and    BYTE PTR [rax],ah
   14000ba22:	add    BYTE PTR [rax],al
   14000ba24:	(bad)  
   14000ba25:	(bad)  
   14000ba26:	(bad)  
   14000ba27:	dec    DWORD PTR [rsi+0x20]
   14000ba2d:	add    BYTE PTR [rax],al
   14000ba2f:	add    BYTE PTR [rax+riz*1-0x10000],dh
   14000ba36:	(bad)  
   14000ba37:	jmp    QWORD PTR [rax]
   14000ba39:	xchg   esp,eax
   14000ba3a:	add    BYTE PTR [rax],al
   14000ba3c:	add    BYTE PTR [rax],al
   14000ba3e:	add    BYTE PTR [rax],al
   14000ba40:	sub    eax,0x1000094
   14000ba45:	add    BYTE PTR [rax],al
   14000ba47:	add    BYTE PTR [rip+0x2000094],dh        # 0x14200bae1
   14000ba4d:	add    BYTE PTR [rax],al
   14000ba4f:	add    BYTE PTR [rsi-0x6c],dl
   14000ba52:	add    BYTE PTR [rax],al
   14000ba54:	add    BYTE PTR [rax],al
   14000ba56:	add    BYTE PTR [rax],al
   14000ba58:	jb     0x14000b9ee
   14000ba5a:	add    BYTE PTR [rax],al
   14000ba5c:	add    eax,DWORD PTR [rax]
   14000ba5e:	add    BYTE PTR [rax],al
   14000ba60:	sbb    DWORD PTR [rdx],ecx
   14000ba62:	add    al,BYTE PTR [rax]
   14000ba64:	or     dh,BYTE PTR [rdx]
   14000ba66:	(bad)  
   14000ba67:	push   rax
   14000ba68:	mov    esi,0x58000089
   14000ba6d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ba6e:	add    BYTE PTR [rax],al
   14000ba70:	sbb    DWORD PTR [rbx],ecx
   14000ba72:	add    eax,DWORD PTR [rax]
   14000ba74:	or     eax,DWORD PTR [rdx+0x7]
   14000ba77:	push   rax
   14000ba78:	(bad)  
   14000ba79:	xor    BYTE PTR [rax],al
   14000ba7b:	add    BYTE PTR [rsi+0x58000089],bh
   14000ba81:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ba82:	add    BYTE PTR [rax],al
   14000ba84:	add    DWORD PTR [rip+0x542d0006],ebp        # 0x1942dba90
   14000ba8a:	(bad)  
   14000ba8b:	add    BYTE PTR [rdx],cl
   14000ba8d:	xor    al,0x9
   14000ba8f:	add    BYTE PTR [rdx],cl
   14000ba91:	xor    al,BYTE PTR [rsi]
   14000ba93:	jo     0x14000bab6
   14000ba95:	add    eax,0x64050002
   14000ba9a:	(bad)  
   14000ba9b:	add    al,dl
   14000ba9d:	and    DWORD PTR [rax],eax
   14000ba9f:	add    BYTE PTR [rdx],bl
   14000baa1:	and    al,BYTE PTR [rax]
   14000baa3:	add    BYTE PTR [rdx+rdi*4+0x5210000],al
   14000baaa:	add    al,BYTE PTR [rax]
   14000baac:	add    eax,0x1a0008e4
   14000bab1:	and    al,BYTE PTR [rax]
   14000bab3:	add    BYTE PTR [rax],dh
   14000bab5:	and    al,BYTE PTR [rax]
   14000bab7:	add    BYTE PTR [rdx+rdi*4+0x210000],dl
   14000babe:	add    BYTE PTR [rax],al
   14000bac0:	sbb    ah,BYTE PTR [rdx]
   14000bac2:	add    BYTE PTR [rax],al
   14000bac4:	xor    BYTE PTR [rdx],ah
   14000bac6:	add    BYTE PTR [rax],al
   14000bac8:	xchg   esp,eax
   14000bac9:	mov    edx,0x210000
   14000bace:	add    BYTE PTR [rax],al
   14000bad0:	shl    BYTE PTR [rcx],1
   14000bad2:	add    BYTE PTR [rax],al
   14000bad4:	sbb    ah,BYTE PTR [rdx]
   14000bad6:	add    BYTE PTR [rax],al
   14000bad8:	test   BYTE PTR [rdx+0xa010000],bh
   14000bade:	add    al,0x0
   14000bae0:	or     dh,BYTE PTR [rdi+rax*1]
   14000bae3:	add    BYTE PTR [rdx],cl
   14000bae5:	xor    al,BYTE PTR [rsi]
   14000bae7:	jo     0x14000bb0a
   14000bae9:	add    eax,0x64050002
   14000baee:	(bad)  
   14000baef:	add    BYTE PTR [rax],ah
   14000baf1:	and    eax,0x253b0000
   14000baf6:	add    BYTE PTR [rax],al
   14000baf8:	fdivr  QWORD PTR [rdx+0x210000]
   14000bafe:	add    BYTE PTR [rax],al
   14000bb00:	and    BYTE PTR [rip+0x253b0000],ah        # 0x1653bbb06
   14000bb06:	add    BYTE PTR [rax],al
   14000bb08:	fdivr  QWORD PTR [rdx+0x4010000]
   14000bb0e:	add    DWORD PTR [rax],eax
   14000bb10:	add    al,0x42
   14000bb12:	add    BYTE PTR [rax],al
   14000bb14:	add    DWORD PTR [rcx+rax*1],eax
   14000bb17:	add    BYTE PTR [rdx+rax*2],al
   14000bb1a:	add    BYTE PTR [rax],al
   14000bb1c:	add    DWORD PTR [rdx],ecx
   14000bb1e:	add    al,0x0
   14000bb20:	or     dh,BYTE PTR [rsi+rax*1]
   14000bb23:	add    BYTE PTR [rdx],cl
   14000bb25:	xor    al,BYTE PTR [rsi]
   14000bb27:	jo     0x14000bb2a
   14000bb29:	(bad)  
   14000bb2a:	add    al,BYTE PTR [rax]
   14000bb2c:	(bad)  
   14000bb2d:	push   rdx
   14000bb2e:	add    dh,BYTE PTR [rax]
   14000bb30:	add    DWORD PTR [rsi],eax
   14000bb32:	add    al,BYTE PTR [rax]
   14000bb34:	(bad)  
   14000bb35:	xor    al,BYTE PTR [rdx]
   14000bb37:	xor    BYTE PTR [rcx],al
   14000bb39:	or     al,BYTE PTR [rax+rax*1]
   14000bb3c:	or     dh,BYTE PTR [rax+rcx*1]
   14000bb3f:	add    BYTE PTR [rdx],cl
   14000bb41:	push   rdx
   14000bb42:	(bad)  
   14000bb43:	jo     0x14000bb46
   14000bb45:	(bad)  
   14000bb46:	add    al,BYTE PTR [rax]
   14000bb48:	(bad)  
   14000bb49:	xor    al,BYTE PTR [rdx]
   14000bb4b:	xor    BYTE PTR [rcx],al
   14000bb4d:	(bad)  
   14000bb4e:	add    al,BYTE PTR [rax]
   14000bb50:	(bad)  
   14000bb51:	push   rdx
   14000bb52:	add    dh,BYTE PTR [rax]
   14000bb54:	add    DWORD PTR [rsi],eax
   14000bb56:	add    al,BYTE PTR [rax]
   14000bb58:	(bad)  
   14000bb59:	xor    al,BYTE PTR [rdx]
   14000bb5b:	xor    BYTE PTR [rcx],al
   14000bb5d:	or     al,BYTE PTR [rax+rax*1]
   14000bb60:	or     dh,BYTE PTR [rax+rcx*1]
   14000bb63:	add    BYTE PTR [rdx],cl
   14000bb65:	push   rdx
   14000bb66:	(bad)  
   14000bb67:	jo     0x14000bb6a
   14000bb69:	or     al,BYTE PTR [rax+rax*1]
   14000bb6c:	or     dh,BYTE PTR [rsi+rax*1]
   14000bb6f:	add    BYTE PTR [rdx],cl
   14000bb71:	xor    al,BYTE PTR [rsi]
   14000bb73:	jo     0x14000bb76
   14000bb75:	(bad)  
   14000bb76:	add    al,BYTE PTR [rax]
   14000bb78:	(bad)  
   14000bb79:	xor    al,BYTE PTR [rdx]
   14000bb7b:	xor    BYTE PTR [rcx],dl
   14000bb7d:	sbb    al,0x6
   14000bb7f:	add    BYTE PTR [rsp+riz*2],bl
   14000bb82:	adc    al,BYTE PTR [rax]
   14000bb84:	sbb    BYTE PTR [rcx+rdx*1],dh
   14000bb87:	add    BYTE PTR [rdx+rdx*8],cl
   14000bb8a:	or     BYTE PTR [rax-0x42],dh
   14000bb8d:	mov    DWORD PTR [rax],eax
   14000bb8f:	add    BYTE PTR [rax-0xffff5c],al
   14000bb95:	(bad)  
   14000bb96:	(bad)  
   14000bb97:	call   rax
   14000bb99:	xchg   ebx,eax
   14000bb9a:	add    BYTE PTR [rax],al
   14000bb9c:	add    BYTE PTR [rax],al
   14000bb9e:	add    BYTE PTR [rax],al
   14000bba0:	fcom   QWORD PTR [rbx+0x10000]
   14000bba6:	add    BYTE PTR [rax],al
   14000bba8:	in     al,dx
   14000bba9:	xchg   ebx,eax
   14000bbaa:	add    BYTE PTR [rax],al
   14000bbac:	add    al,BYTE PTR [rax]
   14000bbae:	add    BYTE PTR [rax],al
   14000bbb0:	cld    
   14000bbb1:	xchg   ebx,eax
	...
   14000bbbe:	add    BYTE PTR [rax],al
   14000bbc0:	add    BYTE PTR [rbx],bl
   14000bbc2:	add    BYTE PTR [rax],al
   14000bbc4:	(bad)  
   14000bbc5:	(bad)  
   14000bbc6:	(bad)  
   14000bbc7:	inc    DWORD PTR [rbx+0x1b]
   14000bbca:	add    BYTE PTR [rax],al
   14000bbcc:	add    BYTE PTR [rax],al
   14000bbce:	add    BYTE PTR [rax],al
   14000bbd0:	sbb    ax,WORD PTR [rax]
   14000bbd3:	add    BYTE PTR [rcx],al
   14000bbd5:	add    BYTE PTR [rax],al
   14000bbd7:	add    BYTE PTR [rcx+0x200001b],cl
   14000bbdd:	add    BYTE PTR [rax],al
   14000bbdf:	add    BYTE PTR [rbp+0x300001b],dl
   14000bbe5:	add    BYTE PTR [rax],al
   14000bbe7:	add    BYTE PTR [rdx-0xffffe5],dh
   14000bbed:	(bad)  
   14000bbee:	(bad)  
   14000bbef:	push   QWORD PTR [rdi+0x300001b]
   14000bbf5:	add    BYTE PTR [rax],al
   14000bbf7:	add    al,ah
   14000bbf9:	sbb    eax,DWORD PTR [rax]
   14000bbfb:	add    bh,bh
   14000bbfd:	(bad)  
   14000bbfe:	(bad)  
   14000bbff:	call   QWORD PTR [rcx]
   14000bc01:	sbb    eax,0x641d0006
   14000bc06:	or     al,BYTE PTR [rax]
   14000bc08:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000bc0b:	add    BYTE PTR [rdx],cl
   14000bc0d:	push   rdx
   14000bc0e:	(bad)  
   14000bc0f:	jo     0x14000bbcf
   14000bc11:	mov    DWORD PTR [rax],eax
   14000bc13:	add    BYTE PTR [rax-0xffff5c],ch
   14000bc19:	(bad)  
   14000bc1a:	(bad)  
   14000bc1b:	push   QWORD PTR [rax+0x93]
   14000bc21:	add    BYTE PTR [rax],al
   14000bc23:	add    BYTE PTR [rbx+rdx*4+0x1a500000],bh
   14000bc2a:	add    BYTE PTR [rax],al
   14000bc2c:	(bad)  
   14000bc2d:	(bad)  
   14000bc2e:	(bad)  
   14000bc2f:	call   QWORD PTR [rcx+0x1a]
   14000bc35:	add    BYTE PTR [rax],al
   14000bc37:	add    BYTE PTR [rbp+0x100001a],dh
   14000bc3d:	add    BYTE PTR [rax],al
   14000bc3f:	add    ah,ah
   14000bc41:	sbb    al,BYTE PTR [rax]
   14000bc43:	add    bh,bh
   14000bc45:	(bad)  
   14000bc46:	(bad)  
   14000bc47:	inc    DWORD PTR [rcx]
   14000bc49:	(bad)  
   14000bc4a:	add    al,BYTE PTR [rax]
   14000bc4c:	(bad)  
   14000bc4d:	xor    al,BYTE PTR [rdx]
   14000bc4f:	xor    BYTE PTR [rcx],al
   14000bc51:	adc    BYTE PTR [rsi],al
   14000bc53:	add    BYTE PTR [rax],dl
   14000bc55:	or     BYTE PTR fs:[rax],al
   14000bc58:	adc    BYTE PTR [rdi+rax*1],dh
   14000bc5b:	add    BYTE PTR [rax],dl
   14000bc5d:	xor    cl,BYTE PTR [rax+riz*8]
   14000bc60:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b405bc68
   14000bc66:	(bad)  
   14000bc67:	add    BYTE PTR [rax+0x27],dh
   14000bc6a:	add    BYTE PTR [rax],al
   14000bc6c:	movabs ds:0x210000bc50000027,al
   14000bc75:	add    BYTE PTR [rax],al
   14000bc77:	add    BYTE PTR [rax+0x27],dh
   14000bc7a:	add    BYTE PTR [rax],al
   14000bc7c:	movabs ds:0x210000bc50000027,al
   14000bc85:	add    BYTE PTR [rdx],al
   14000bc87:	add    BYTE PTR [rax],al
   14000bc89:	je     0x14000bc91
   14000bc8b:	add    BYTE PTR [rax+0x27],dh
   14000bc8e:	add    BYTE PTR [rax],al
   14000bc90:	movabs ds:0x10000bc50000027,al
   14000bc99:	add    al,0x1
   14000bc9b:	add    BYTE PTR [rdx+rax*8],al
   14000bc9e:	add    BYTE PTR [rax],al
   14000bca0:	add    DWORD PTR [rcx+rax*1],eax
   14000bca3:	add    BYTE PTR [rdx+rax*2],al
   14000bca6:	add    BYTE PTR [rax],al
   14000bca8:	adc    DWORD PTR [rdx],edx
   14000bcaa:	add    DWORD PTR [rax],eax
   14000bcac:	or     DWORD PTR [rdx+0x0],esp
   14000bcaf:	add    BYTE PTR [rsi-0x2fffff77],bh
   14000bcb5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bcb6:	add    BYTE PTR [rax],al
   14000bcb8:	(bad)  
   14000bcb9:	(bad)  
   14000bcba:	(bad)  
   14000bcbb:	jmp    rax
   14000bcbd:	xchg   esp,eax
   14000bcbe:	add    BYTE PTR [rax],al
   14000bcc0:	shr    BYTE PTR [rax+rax*1],0x0
   14000bcc4:	(bad)  
   14000bcc5:	(bad)  
   14000bcc6:	(bad)  
   14000bcc7:	(bad)  
   14000bcc8:	(bad)  [rax+rax*1]
   14000bccb:	add    BYTE PTR [rax],al
   14000bccd:	add    BYTE PTR [rax],al
   14000bccf:	add    BYTE PTR [rax],cl
   14000bcd1:	sub    eax,0xffff0000
   14000bcd6:	(bad)  
   14000bcd7:	inc    DWORD PTR [rcx]
   14000bcd9:	(bad)  
   14000bcda:	add    al,BYTE PTR [rax]
   14000bcdc:	(bad)  
   14000bcdd:	xor    al,BYTE PTR [rdx]
   14000bcdf:	push   rax
   14000bce0:	add    DWORD PTR [rcx+rax*1],eax
   14000bce3:	add    BYTE PTR [rdx+rax*2],al
   14000bce6:	add    BYTE PTR [rax],al
   14000bce8:	add    DWORD PTR [rcx+rax*1],eax
   14000bceb:	add    BYTE PTR [rdx+rax*2],al
   14000bcee:	add    BYTE PTR [rax],al
   14000bcf0:	adc    DWORD PTR [rsp+rax*1],edx
   14000bcf3:	add    BYTE PTR [rsp+rsi*1],dl
   14000bcf6:	or     al,BYTE PTR [rax]
   14000bcf8:	(bad)  
   14000bcf9:	push   rdx
   14000bcfa:	add    dh,BYTE PTR [rax-0x42]
   14000bcfd:	mov    DWORD PTR [rax],eax
   14000bcff:	add    al,bh
   14000bd01:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bd02:	add    BYTE PTR [rax],al
   14000bd04:	(bad)  
   14000bd05:	(bad)  
   14000bd06:	(bad)  
   14000bd07:	inc    DWORD PTR [rax]
   14000bd09:	xchg   ebp,eax
   14000bd0a:	add    BYTE PTR [rax],al
   14000bd0c:	(bad)  
   14000bd0d:	(bad)  
   14000bd0e:	(bad)  
   14000bd0f:	call   FWORD PTR [rdx*4+0x0]
   14000bd16:	add    BYTE PTR [rax],al
   14000bd18:	movabs al,ds:0xf6ffffffff000031
   14000bd21:	xor    DWORD PTR [rax],eax
   14000bd23:	add    BYTE PTR [rax],al
   14000bd25:	add    BYTE PTR [rax],al
   14000bd27:	add    BYTE PTR [rsi],bl
   14000bd29:	xor    al,BYTE PTR [rax]
   14000bd2b:	add    bh,bh
   14000bd2d:	(bad)  
   14000bd2e:	(bad)  
   14000bd2f:	inc    DWORD PTR [rcx+0x32]
   14000bd32:	add    BYTE PTR [rax],al
   14000bd34:	add    DWORD PTR [rax],eax
   14000bd36:	add    BYTE PTR [rax],al
   14000bd38:	imul   esi,DWORD PTR [rdx],0xffff0000
   14000bd3e:	(bad)  
   14000bd3f:	inc    DWORD PTR [rcx]
   14000bd41:	(bad)  
   14000bd42:	add    al,BYTE PTR [rax]
   14000bd44:	(bad)  
   14000bd45:	xor    al,BYTE PTR [rdx]
   14000bd47:	push   rax
   14000bd48:	add    DWORD PTR [rsi],eax
   14000bd4a:	add    al,BYTE PTR [rax]
   14000bd4c:	(bad)  
   14000bd4d:	xor    al,BYTE PTR [rdx]
   14000bd4f:	push   rax
   14000bd50:	add    DWORD PTR [rdi],ecx
   14000bd52:	add    al,0x0
   14000bd54:	sysenter 
   14000bd56:	(bad)  
   14000bd57:	add    BYTE PTR [rdi],cl
   14000bd59:	xor    cl,BYTE PTR [rbx]
   14000bd5b:	jo     0x14000bd7e
   14000bd5d:	add    eax,0x64050002
   14000bd62:	(bad)  
   14000bd63:	add    BYTE PTR [rax],dh
   14000bd65:	and    DWORD PTR [rax],eax
   14000bd67:	add    BYTE PTR [rdi],bh
   14000bd69:	and    DWORD PTR [rax],eax
   14000bd6b:	add    BYTE PTR [rax-0x43],dl
   14000bd6e:	add    BYTE PTR [rax],al
   14000bd70:	and    DWORD PTR [rax],eax
   14000bd72:	add    BYTE PTR [rax],al
   14000bd74:	xor    BYTE PTR [rcx],ah
   14000bd76:	add    BYTE PTR [rax],al
   14000bd78:	(bad)  
   14000bd79:	and    DWORD PTR [rax],eax
   14000bd7b:	add    BYTE PTR [rax-0x43],dl
   14000bd7e:	add    BYTE PTR [rax],al
   14000bd80:	sbb    DWORD PTR [rdx+rcx*1],esp
   14000bd83:	add    BYTE PTR [rsp+riz*2],ah
   14000bd86:	adc    DWORD PTR [rax],eax
   14000bd88:	sbb    al,0x34
   14000bd8a:	(bad)  
   14000bd8b:	add    BYTE PTR [rsi],cl
   14000bd8d:	jb     0x14000bd99
   14000bd8f:	lock or al,ah
   14000bd92:	(bad)  
   14000bd93:	rol    BYTE PTR [rax+rax*8],1
   14000bd96:	add    dh,BYTE PTR [rax-0x42]
   14000bd99:	mov    DWORD PTR [rax],eax
   14000bd9b:	add    BYTE PTR [rax],ah
   14000bd9d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bd9e:	add    BYTE PTR [rax],al
   14000bda0:	(bad)  
   14000bda1:	(bad)  
   14000bda2:	(bad)  
   14000bda3:	inc    DWORD PTR [rax]
   14000bda5:	add    BYTE PTR [rax],al
   14000bda7:	add    bh,bh
   14000bda9:	(bad)  
   14000bdaa:	(bad)  
   14000bdab:	inc    DWORD PTR [rax]
	...
   14000bdb5:	add    BYTE PTR [rax],al
   14000bdb7:	add    BYTE PTR [rcx],al
   14000bdb9:	add    BYTE PTR [rax],al
   14000bdbb:	add    BYTE PTR [rcx],al
   14000bdbd:	add    BYTE PTR [rax],al
   14000bdbf:	add    ah,al
   14000bdc1:	mov    ebp,0x400000
	...
   14000bdce:	add    BYTE PTR [rax],al
   14000bdd0:	mov    al,0x94
   14000bdd2:	add    BYTE PTR [rax],al
   14000bdd4:	rex.W add BYTE PTR [rax],al
   14000bdd7:	add    BYTE PTR [rax+0x23],dh
   14000bdda:	add    BYTE PTR [rax],al
   14000bddc:	(bad)  
   14000bddd:	(bad)  
   14000bdde:	(bad)  
   14000bddf:	(bad)  
   14000bde0:	fbld   TBYTE PTR [rbx]
   14000bde2:	add    BYTE PTR [rax],al
   14000bde4:	add    BYTE PTR [rax],al
   14000bde6:	add    BYTE PTR [rax],al
   14000bde8:	add    ah,BYTE PTR [rax+rax*1]
   14000bdeb:	add    bh,bh
   14000bded:	(bad)  
   14000bdee:	(bad)  
   14000bdef:	push   QWORD PTR [rax+0x94]
   14000bdf5:	add    BYTE PTR [rax],al
   14000bdf7:	add    BYTE PTR [rbp+0x1000094],bh
   14000bdfd:	add    BYTE PTR [rax],al
   14000bdff:	add    BYTE PTR [rcx],bl
   14000be01:	or     al,BYTE PTR [rdx]
   14000be03:	add    BYTE PTR [rdx],cl
   14000be05:	push   rdx
   14000be06:	(bad)  
   14000be07:	push   rax
   14000be08:	mov    esi,0x20000089
   14000be0d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000be0e:	add    BYTE PTR [rax],al
   14000be10:	add    DWORD PTR [rcx+rax*1],eax
   14000be13:	add    BYTE PTR [rdx+rax*2],al
   14000be16:	add    BYTE PTR [rax],al
   14000be18:	add    DWORD PTR [rdx],ecx
   14000be1a:	add    al,0x0
   14000be1c:	or     dh,BYTE PTR [rax+rcx*1]
   14000be1f:	add    BYTE PTR [rdx],cl
   14000be21:	xor    al,BYTE PTR [rsi]
   14000be23:	jo     0x14000be46
   14000be25:	or     al,BYTE PTR [rax+rax*1]
   14000be28:	or     ah,BYTE PTR [rdi+rax*1+0x0]
   14000be2c:	add    eax,0x80000654
   14000be31:	and    eax,0x25950000
   14000be36:	add    BYTE PTR [rax],al
   14000be38:	sbb    BYTE PTR [rsi+0x210000],bh
   14000be3e:	add    BYTE PTR [rax],al
   14000be40:	and    BYTE PTR [rip+0x25950000],0x0        # 0x16595be47
   14000be47:	add    BYTE PTR [rax],bl
   14000be49:	mov    esi,0x4010000
   14000be4e:	add    DWORD PTR [rax],eax
   14000be50:	add    al,0x42
   14000be52:	add    BYTE PTR [rax],al
   14000be54:	add    DWORD PTR [rcx+rax*1],eax
   14000be57:	add    BYTE PTR [rdx+rax*2],al
   14000be5a:	add    BYTE PTR [rax],al
   14000be5c:	adc    DWORD PTR [rax],ebx
   14000be5e:	add    al,0x0
   14000be60:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000be63:	add    BYTE PTR [rdx],cl
   14000be65:	push   rdx
   14000be66:	(bad)  
   14000be67:	jo     0x14000be27
   14000be69:	mov    DWORD PTR [rax],eax
   14000be6b:	add    BYTE PTR [rax-0x5b],cl
   14000be6e:	add    BYTE PTR [rax],al
   14000be70:	(bad)  
   14000be71:	(bad)  
   14000be72:	(bad)  
   14000be73:	call   QWORD PTR [rax]
   14000be75:	xchg   esp,eax
   14000be76:	add    BYTE PTR [rax],al
   14000be78:	add    BYTE PTR [rax+rax*1],bl
   14000be7b:	add    bh,bh
   14000be7d:	(bad)  
   14000be7e:	(bad)  
   14000be7f:	jmp    QWORD PTR [rip+0x1c]        # 0x14000bea1
   14000be85:	add    BYTE PTR [rax],al
   14000be87:	add    BYTE PTR [rsp+rbx*1+0x0],bl
   14000be8b:	add    bh,bh
   14000be8d:	(bad)  
   14000be8e:	(bad)  
   14000be8f:	inc    DWORD PTR [rcx]
   14000be91:	or     al,BYTE PTR [rax+rax*1]
   14000be94:	or     dh,BYTE PTR [rsi+rax*1]
   14000be97:	add    BYTE PTR [rdx],cl
   14000be99:	xor    al,BYTE PTR [rsi]
   14000be9b:	jo     0x14000beae
   14000be9d:	adc    al,BYTE PTR [rcx]
   14000be9f:	add    BYTE PTR [rcx],cl
   14000bea1:	(bad)  
   14000bea2:	add    BYTE PTR [rax],al
   14000bea4:	mov    esi,0x70000089
   14000bea9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000beaa:	add    BYTE PTR [rax],al
   14000beac:	(bad)  
   14000bead:	(bad)  
   14000beae:	(bad)  
   14000beaf:	call   rax
   14000beb1:	xchg   edx,eax
   14000beb2:	add    BYTE PTR [rax],al
   14000beb4:	add    BYTE PTR [rax],al
   14000beb6:	add    BYTE PTR [rax],al
   14000beb8:	loopne 0x14000becd
   14000beba:	add    BYTE PTR [rax],al
   14000bebc:	(bad)  
   14000bebd:	(bad)  
   14000bebe:	(bad)  
   14000bebf:	(bad)  
   14000bec0:	std    
   14000bec1:	adc    eax,DWORD PTR [rax]
   14000bec3:	add    BYTE PTR [rax],al
   14000bec5:	add    BYTE PTR [rax],al
   14000bec7:	add    BYTE PTR [rax],ch
   14000bec9:	adc    al,0x0
   14000becb:	add    bh,bh
   14000becd:	(bad)  
   14000bece:	(bad)  
   14000becf:	inc    DWORD PTR [rcx]
   14000bed1:	(bad)  
   14000bed2:	add    al,BYTE PTR [rax]
   14000bed4:	(bad)  
   14000bed5:	xor    al,BYTE PTR [rdx]
   14000bed7:	push   rax
   14000bed8:	adc    DWORD PTR [rdx],edx
   14000beda:	add    DWORD PTR [rax],eax
   14000bedc:	or     DWORD PTR [rdx+0x0],esp
   14000bedf:	add    BYTE PTR [rsi-0x67ffff77],bh
   14000bee5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bee6:	add    BYTE PTR [rax],al
   14000bee8:	(bad)  
   14000bee9:	(bad)  
   14000beea:	(bad)  
   14000beeb:	push   QWORD PTR [rax]
   14000beed:	xchg   ebx,eax
   14000beee:	add    BYTE PTR [rax],al
   14000bef0:	rcl    BYTE PTR [rax+rax*1],1
   14000bef3:	add    bh,bh
   14000bef5:	(bad)  
   14000bef6:	(bad)  
   14000bef7:	(bad)  
   14000bef8:	in     eax,dx
   14000bef9:	adc    al,0x0
   14000befb:	add    BYTE PTR [rax],al
   14000befd:	add    BYTE PTR [rax],al
   14000beff:	add    BYTE PTR [rax],bl
   14000bf01:	adc    eax,0xffff0000
   14000bf06:	(bad)  
   14000bf07:	inc    DWORD PTR [rcx]
   14000bf09:	(bad)  
   14000bf0a:	add    al,BYTE PTR [rax]
   14000bf0c:	(bad)  
   14000bf0d:	xor    al,BYTE PTR [rdx]
   14000bf0f:	push   rax
   14000bf10:	add    DWORD PTR [rdi],ecx
   14000bf12:	add    al,0x0
   14000bf14:	sysenter 
   14000bf16:	(bad)  
   14000bf17:	add    BYTE PTR [rdi],cl
   14000bf19:	xor    cl,BYTE PTR [rbx]
   14000bf1b:	jo     0x14000bf3e
   14000bf1d:	add    eax,0x64050002
   14000bf22:	(bad)  
   14000bf23:	add    BYTE PTR [rax-0x50ffffef],ah
   14000bf29:	adc    DWORD PTR [rax],eax
   14000bf2b:	add    BYTE PTR [rax],dl
   14000bf2d:	mov    edi,0x210000
   14000bf32:	add    BYTE PTR [rax],al
   14000bf34:	movabs al,ds:0x10000011af000011
   14000bf3d:	mov    edi,0x6010000
   14000bf42:	add    al,BYTE PTR [rax]
   14000bf44:	(bad)  
   14000bf45:	push   rdx
   14000bf46:	add    dh,BYTE PTR [rax]
   14000bf48:	add    DWORD PTR [rcx+rax*1],eax
   14000bf4b:	add    BYTE PTR [rdx+rax*2],al
   14000bf4e:	add    BYTE PTR [rax],al
   14000bf50:	add    DWORD PTR [rcx+rax*1],eax
   14000bf53:	add    BYTE PTR [rdx+rax*2],al
   14000bf56:	add    BYTE PTR [rax],al
   14000bf58:	adc    DWORD PTR [rdx],edx
   14000bf5a:	add    DWORD PTR [rax],eax
   14000bf5c:	or     DWORD PTR [rdx+0x0],esp
   14000bf5f:	add    BYTE PTR [rsi-0x3fffff77],bh
   14000bf65:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bf66:	add    BYTE PTR [rax],al
   14000bf68:	(bad)  
   14000bf69:	(bad)  
   14000bf6a:	(bad)  
   14000bf6b:	call   QWORD PTR [rax]
   14000bf6d:	xchg   ebx,eax
   14000bf6e:	add    BYTE PTR [rax],al
   14000bf70:	adc    BYTE PTR [rax+rax*1],0x0
   14000bf74:	(bad)  
   14000bf75:	(bad)  
   14000bf76:	(bad)  
   14000bf77:	call   FWORD PTR [rbp+0x14]
   14000bf7d:	add    BYTE PTR [rax],al
   14000bf7f:	add    al,cl
   14000bf81:	adc    al,0x0
   14000bf83:	add    bh,bh
   14000bf85:	(bad)  
   14000bf86:	(bad)  
   14000bf87:	inc    DWORD PTR [rcx]
   14000bf89:	(bad)  
   14000bf8a:	add    al,BYTE PTR [rax]
   14000bf8c:	(bad)  
   14000bf8d:	xor    al,BYTE PTR [rdx]
   14000bf8f:	push   rax
   14000bf90:	adc    DWORD PTR [rdx],edx
   14000bf92:	add    DWORD PTR [rax],eax
   14000bf94:	or     DWORD PTR [rdx+0x0],esp
   14000bf97:	add    BYTE PTR [rsi-0x17ffff77],bh
   14000bf9d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bf9e:	add    BYTE PTR [rax],al
   14000bfa0:	(bad)  
   14000bfa1:	(bad)  
   14000bfa2:	(bad)  
   14000bfa3:	call   QWORD PTR [rax-0x6d]
   14000bfa6:	add    BYTE PTR [rax],al
   14000bfa8:	and    BYTE PTR [rip+0xffffffffffff0000],dl        # 0x13fffbfae
   14000bfae:	(bad)  
   14000bfaf:	(bad)  
   14000bfb0:	cmp    eax,0x15
   14000bfb5:	add    BYTE PTR [rax],al
   14000bfb7:	add    BYTE PTR [rax+0x15],ch
   14000bfba:	add    BYTE PTR [rax],al
   14000bfbc:	(bad)  
   14000bfbd:	(bad)  
   14000bfbe:	(bad)  
   14000bfbf:	inc    DWORD PTR [rcx]
   14000bfc1:	(bad)  
   14000bfc2:	add    al,BYTE PTR [rax]
   14000bfc4:	(bad)  
   14000bfc5:	xor    al,BYTE PTR [rdx]
   14000bfc7:	push   rax
   14000bfc8:	add    DWORD PTR [rdi],ecx
   14000bfca:	add    al,0x0
   14000bfcc:	sysenter 
   14000bfce:	(bad)  
   14000bfcf:	add    BYTE PTR [rdi],cl
   14000bfd1:	xor    cl,BYTE PTR [rbx]
   14000bfd3:	jo     0x14000bff6
   14000bfd5:	add    eax,0x64050002
   14000bfda:	(bad)  
   14000bfdb:	add    BYTE PTR [rax],al
   14000bfdd:	adc    al,BYTE PTR [rax]
   14000bfdf:	add    BYTE PTR [rdi],cl
   14000bfe1:	adc    al,BYTE PTR [rax]
   14000bfe3:	add    al,cl
   14000bfe5:	mov    edi,0x210000
   14000bfea:	add    BYTE PTR [rax],al
   14000bfec:	add    BYTE PTR [rdx],dl
   14000bfee:	add    BYTE PTR [rax],al
   14000bff0:	movlps xmm0,QWORD PTR [rax]
   14000bff3:	add    al,cl
   14000bff5:	mov    edi,0x4010000
   14000bffa:	add    DWORD PTR [rax],eax
   14000bffc:	add    al,0x62
   14000bffe:	add    BYTE PTR [rax],al
   14000c000:	adc    DWORD PTR [rdx],edx
   14000c002:	add    DWORD PTR [rax],eax
   14000c004:	or     DWORD PTR [rdx+0x0],esp
   14000c007:	add    BYTE PTR [rsi+0x10000089],bh
   14000c00d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c00e:	add    BYTE PTR [rax],al
   14000c010:	(bad)  
   14000c011:	(bad)  
   14000c012:	(bad)  
   14000c013:	push   rax
   14000c015:	xchg   edx,eax
   14000c016:	add    BYTE PTR [rax],al
   14000c018:	xor    BYTE PTR [rax+rax*1],dl
   14000c01b:	add    bh,bh
   14000c01d:	(bad)  
   14000c01e:	(bad)  
   14000c01f:	dec    DWORD PTR [rbp+0x14]
   14000c022:	add    BYTE PTR [rax],al
   14000c024:	add    BYTE PTR [rax],al
   14000c026:	add    BYTE PTR [rax],al
   14000c028:	js     0x14000c03e
   14000c02a:	add    BYTE PTR [rax],al
   14000c02c:	(bad)  
   14000c02d:	(bad)  
   14000c02e:	(bad)  
   14000c02f:	inc    DWORD PTR [rcx]
   14000c031:	(bad)  
   14000c032:	add    al,BYTE PTR [rax]
   14000c034:	(bad)  
   14000c035:	xor    al,BYTE PTR [rdx]
   14000c037:	push   rax
   14000c038:	add    DWORD PTR [rsi],eax
   14000c03a:	add    al,BYTE PTR [rax]
   14000c03c:	(bad)  
   14000c03d:	xor    al,BYTE PTR [rdx]
   14000c03f:	xor    BYTE PTR [rcx],al
   14000c041:	add    al,0x1
   14000c043:	add    BYTE PTR [rdx+rax*4],al
   14000c046:	add    BYTE PTR [rax],al
   14000c048:	add    DWORD PTR [rsi],eax
   14000c04a:	add    al,BYTE PTR [rax]
   14000c04c:	(bad)  
   14000c04d:	xor    al,BYTE PTR [rdx]
   14000c04f:	xor    BYTE PTR [rcx],bl
   14000c051:	and    BYTE PTR [rsi],al
   14000c053:	add    BYTE PTR [rax],ah
   14000c055:	xor    al,0xb
   14000c057:	add    BYTE PTR [rdx],dl
   14000c059:	push   rdx
   14000c05a:	(bad)  
   14000c05b:	loopne 0x14000c069
   14000c05d:	jo     0x14000c06a
   14000c05f:	(bad)  
   14000c060:	mov    esi,0x38000089
   14000c065:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c066:	add    BYTE PTR [rax],al
   14000c068:	(bad)  
   14000c069:	(bad)  
   14000c06a:	(bad)  
   14000c06b:	inc    DWORD PTR [rax]
   14000c06d:	add    BYTE PTR [rax],al
   14000c06f:	add    bh,bh
   14000c071:	(bad)  
   14000c072:	(bad)  
   14000c073:	inc    DWORD PTR [rax]
	...
   14000c07d:	add    BYTE PTR [rax],al
   14000c07f:	add    BYTE PTR [rcx],al
   14000c081:	add    BYTE PTR [rax],al
   14000c083:	add    BYTE PTR [rcx],al
   14000c085:	add    BYTE PTR [rax],al
   14000c087:	add    BYTE PTR [rax+rax*8+0x400000],cl
	...
   14000c096:	add    BYTE PTR [rax],al
   14000c098:	nop
   14000c099:	xchg   edx,eax
   14000c09a:	add    BYTE PTR [rax],al
   14000c09c:	pop    rax
   14000c09d:	add    BYTE PTR [rax],al
   14000c09f:	add    al,dh
   14000c0a1:	adc    al,BYTE PTR [rax]
   14000c0a3:	add    bh,bh
   14000c0a5:	(bad)  
   14000c0a6:	(bad)  
   14000c0a7:	jmp    QWORD PTR [rcx]
   14000c0a9:	adc    eax,DWORD PTR [rax]
   14000c0ab:	add    BYTE PTR [rax],al
   14000c0ad:	add    BYTE PTR [rax],al
   14000c0af:	add    BYTE PTR [rbx+0x13],al
   14000c0b2:	add    BYTE PTR [rax],al
   14000c0b4:	(bad)  
   14000c0b5:	(bad)  
   14000c0b6:	(bad)  
   14000c0b7:	call   QWORD PTR [rax+0x92]
   14000c0bd:	add    BYTE PTR [rax],al
   14000c0bf:	add    BYTE PTR [rax+0x1000092],ah
   14000c0c5:	add    BYTE PTR [rax],al
   14000c0c7:	add    BYTE PTR [rcx],bl
   14000c0c9:	or     eax,0x420d0005
   14000c0ce:	or     DWORD PTR [rax+0x8],esi
   14000c0d1:	(bad)  
   14000c0d2:	(bad)  
   14000c0d3:	push   rax
   14000c0d4:	(bad)  
   14000c0d5:	xor    BYTE PTR [rax],al
   14000c0d7:	add    BYTE PTR [rsi+0x38000089],bh
   14000c0dd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	add    DWORD PTR [rsi],eax
   14000c0e2:	add    al,BYTE PTR [rax]
   14000c0e4:	(bad)  
   14000c0e5:	xor    al,BYTE PTR [rdx]
   14000c0e7:	xor    BYTE PTR [rcx],dl
   14000c0e9:	sbb    BYTE PTR [rax+rax*1],al
   14000c0ec:	sbb    BYTE PTR [rax+rcx*1],dh
   14000c0ef:	add    BYTE PTR [rdx],cl
   14000c0f1:	push   rdx
   14000c0f2:	(bad)  
   14000c0f3:	jo     0x14000c0b3
   14000c0f5:	mov    DWORD PTR [rax],eax
   14000c0f7:	add    BYTE PTR [rax-0x5a],ah
   14000c0fa:	add    BYTE PTR [rax],al
   14000c0fc:	(bad)  
   14000c0fd:	(bad)  
   14000c0fe:	(bad)  
   14000c0ff:	push   QWORD PTR [rax-0x6d]
   14000c102:	add    BYTE PTR [rax],al
   14000c104:	add    BYTE PTR [rax],al
   14000c106:	add    BYTE PTR [rax],al
   14000c108:	jo     0x14000c11f
   14000c10a:	add    BYTE PTR [rax],al
   14000c10c:	(bad)  
   14000c10d:	(bad)  
   14000c10e:	(bad)  
   14000c10f:	call   QWORD PTR [rbx+0x15]
   14000c115:	add    BYTE PTR [rax],al
   14000c117:	add    cl,bh
   14000c119:	adc    eax,0xffff0000
   14000c11e:	(bad)  
   14000c11f:	inc    DWORD PTR [rcx]
   14000c121:	(bad)  
   14000c122:	add    al,BYTE PTR [rax]
   14000c124:	(bad)  
   14000c125:	xor    al,BYTE PTR [rdx]
   14000c127:	push   rax
   14000c128:	adc    DWORD PTR [rax],ebx
   14000c12a:	add    al,0x0
   14000c12c:	sbb    BYTE PTR [rax+rcx*1],dh
   14000c12f:	add    BYTE PTR [rdx],cl
   14000c131:	push   rdx
   14000c132:	(bad)  
   14000c133:	jo     0x14000c0f3
   14000c135:	mov    DWORD PTR [rax],eax
   14000c137:	add    BYTE PTR [rax-0xffff5a],cl
   14000c13d:	(bad)  
   14000c13e:	(bad)  
   14000c13f:	call   QWORD PTR [rax+0x93]
   14000c145:	add    BYTE PTR [rax],al
   14000c147:	add    BYTE PTR [rax-0xffffea],ah
   14000c14d:	(bad)  
   14000c14e:	(bad)  
   14000c14f:	inc    ebx
   14000c151:	(bad)  
   14000c152:	add    BYTE PTR [rax],al
   14000c154:	add    BYTE PTR [rax],al
   14000c156:	add    BYTE PTR [rax],al
   14000c158:	sub    DWORD PTR [rdi],edx
   14000c15a:	add    BYTE PTR [rax],al
   14000c15c:	(bad)  
   14000c15d:	(bad)  
   14000c15e:	(bad)  
   14000c15f:	inc    DWORD PTR [rcx]
   14000c161:	(bad)  
   14000c162:	add    al,BYTE PTR [rax]
   14000c164:	(bad)  
   14000c165:	xor    al,BYTE PTR [rdx]
   14000c167:	push   rax
   14000c168:	add    DWORD PTR [rdi],ecx
   14000c16a:	add    al,0x0
   14000c16c:	sysenter 
   14000c16e:	(bad)  
   14000c16f:	add    BYTE PTR [rdi],cl
   14000c171:	xor    cl,BYTE PTR [rbx]
   14000c173:	jo     0x14000c176
   14000c175:	clts   
   14000c177:	add    BYTE PTR [rdi],cl
   14000c179:	fs (bad) 
   14000c17b:	add    BYTE PTR [rdi],cl
   14000c17d:	xor    al,0x6
   14000c17f:	add    BYTE PTR [rdi],cl
   14000c181:	xor    cl,BYTE PTR [rbx]
   14000c183:	jo     0x14000c186
   14000c185:	(bad)  
   14000c186:	add    al,BYTE PTR [rax]
   14000c188:	(bad)  
   14000c189:	xor    al,BYTE PTR [rdx]
   14000c18b:	xor    BYTE PTR [rcx],al
   14000c18d:	(bad)  
   14000c18e:	add    al,BYTE PTR [rax]
   14000c190:	(bad)  
   14000c191:	xor    al,BYTE PTR [rdx]
   14000c193:	xor    BYTE PTR [rcx],al
   14000c195:	(bad)  
   14000c196:	add    al,BYTE PTR [rax]
   14000c198:	(bad)  
   14000c199:	xor    al,BYTE PTR [rdx]
   14000c19b:	xor    BYTE PTR [rcx],al
   14000c19d:	or     al,BYTE PTR gs:[rax]
   14000c1a0:	gs je  0x14000c1a9
   14000c1a3:	add    BYTE PTR [rip+0x15000964],dl        # 0x15500cb0d
   14000c1a9:	push   rsp
   14000c1aa:	or     BYTE PTR [rax],al
   14000c1ac:	adc    eax,0x15000734
   14000c1b1:	xor    dl,BYTE PTR [rcx]
   14000c1b3:	loopne 0x14000c1b6
   14000c1b5:	(bad)  
   14000c1b6:	or     BYTE PTR [rax],al
   14000c1b8:	(bad)  
   14000c1b9:	je     0x14000c1c1
   14000c1bb:	add    BYTE PTR [rdi],cl
   14000c1bd:	push   rsp
   14000c1be:	or     BYTE PTR [rax],al
   14000c1c0:	sysenter 
   14000c1c2:	(bad)  
   14000c1c3:	add    BYTE PTR [rdi],cl
   14000c1c5:	xor    cl,BYTE PTR [rbx]
   14000c1c7:	(bad)  
   14000c1c8:	add    DWORD PTR [rax+rcx*1],edi
   14000c1cb:	add    BYTE PTR [rsp+rsi*2],bh
   14000c1ce:	(bad)  
   14000c1cf:	add    BYTE PTR [rdi],cl
   14000c1d1:	push   rsp
   14000c1d2:	or     BYTE PTR [rax],al
   14000c1d4:	sysenter 
   14000c1d6:	(bad)  
   14000c1d7:	add    BYTE PTR [rdi],cl
   14000c1d9:	xor    cl,BYTE PTR [rbx]
   14000c1db:	(bad)  
   14000c1dc:	add    DWORD PTR [rdi],ecx
   14000c1de:	(bad)  
   14000c1df:	add    BYTE PTR [rdi],cl
   14000c1e1:	fs (bad) 
   14000c1e3:	add    BYTE PTR [rdi],cl
   14000c1e5:	xor    al,0x6
   14000c1e7:	add    BYTE PTR [rdi],cl
   14000c1e9:	xor    cl,BYTE PTR [rbx]
   14000c1eb:	jo     0x14000c1ee
   14000c1ed:	or     eax,0x340d0006
   14000c1f2:	or     al,BYTE PTR [rax]
   14000c1f4:	or     eax,0x7e00932
   14000c1f9:	(bad)  
   14000c1fa:	(bad)  
   14000c1fb:	push   rax
   14000c1fc:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b405c204
   14000c202:	or     BYTE PTR [rax],al
   14000c204:	lock rex.WR add BYTE PTR [rax],r8b
   14000c208:	rex.WRB add BYTE PTR es:[r8],r8b
   14000c20c:	in     al,dx
   14000c20d:	rol    DWORD PTR [rax],0x0
   14000c210:	and    DWORD PTR [rip+0xfffffffff4050002],eax        # 0x13405c218
   14000c216:	or     DWORD PTR [rax],eax
   14000c218:	rex.WRB add BYTE PTR es:[r8],r8b
   14000c21c:	pop    rdx
   14000c21d:	rex.WRB add BYTE PTR [r8],r8b
   14000c220:	cld    
   14000c221:	rol    DWORD PTR [rax],0x0
   14000c224:	and    DWORD PTR [rax],eax
   14000c226:	add    BYTE PTR [rax],al
   14000c228:	rex.WRB add BYTE PTR es:[r8],r8b
   14000c22c:	pop    rdx
   14000c22d:	rex.WRB add BYTE PTR [r8],r8b
   14000c230:	cld    
   14000c231:	rol    DWORD PTR [rax],0x0
   14000c234:	and    DWORD PTR [rax],eax
   14000c236:	add    BYTE PTR [rax],al
   14000c238:	lock rex.WR add BYTE PTR [rax],r8b
   14000c23c:	rex.WRB add BYTE PTR es:[r8],r8b
   14000c240:	in     al,dx
   14000c241:	rol    DWORD PTR [rax],0x0
   14000c244:	add    DWORD PTR [rax+rcx*1],edx
   14000c247:	add    BYTE PTR [rsp+riz*2],dl
   14000c24a:	or     eax,DWORD PTR [rax]
   14000c24c:	adc    al,0x54
   14000c24e:	or     al,BYTE PTR [rax]
   14000c250:	adc    al,0x34
   14000c252:	or     DWORD PTR [rax],eax
   14000c254:	adc    al,0x52
   14000c256:	adc    BYTE PTR [rax+0x21],dh
   14000c259:	add    eax,0xe4050002
   14000c25e:	or     BYTE PTR [rax],al
   14000c260:	jo     0x14000c2b0
   14000c262:	add    BYTE PTR [rax],al
   14000c264:	and    DWORD PTR [rdi+0x0],ecx
   14000c267:	add    BYTE PTR [rdx+rax*8+0x0],al
   14000c26b:	add    BYTE PTR [rcx],ah
   14000c26d:	add    BYTE PTR [rax],al
   14000c26f:	add    BYTE PTR [rax+0x4e],dh
   14000c272:	add    BYTE PTR [rax],al
   14000c274:	and    DWORD PTR [rdi+0x0],ecx
   14000c277:	add    BYTE PTR [rdx+rax*8+0x0],al
   14000c27b:	add    BYTE PTR [rcx],al
   14000c27d:	or     al,BYTE PTR [rax+rax*1]
   14000c280:	or     dh,BYTE PTR [rsi+rax*1]
   14000c283:	add    BYTE PTR [rdx],cl
   14000c285:	xor    al,BYTE PTR [rsi]
   14000c287:	jo     0x14000c28a
   14000c289:	add    al,0x1
   14000c28b:	add    BYTE PTR [rdx+rax*2],al
   14000c28e:	add    BYTE PTR [rax],al
   14000c290:	add    DWORD PTR [rdx],ecx
   14000c292:	add    al,0x0
   14000c294:	or     dh,BYTE PTR [rsi+rax*1]
   14000c297:	add    BYTE PTR [rdx],cl
   14000c299:	xor    al,BYTE PTR [rsi]
   14000c29b:	jo     0x14000c2ae
   14000c29d:	adc    al,BYTE PTR [rbx]
   14000c29f:	add    BYTE PTR [rcx],cl
   14000c2a1:	add    DWORD PTR [rdx],edx
   14000c2a3:	add    BYTE PTR [rdx],al
   14000c2a5:	xor    BYTE PTR [rax],al
   14000c2a7:	add    BYTE PTR [rsi-0x7fffff77],bh
   14000c2ad:	test   al,0x0
   14000c2af:	add    bh,bh
   14000c2b1:	(bad)  
   14000c2b2:	(bad)  
   14000c2b3:	call   QWORD PTR [rax+0x96]
   14000c2b9:	add    BYTE PTR [rax],al
   14000c2bb:	add    BYTE PTR [rsi+rdx*4+0x10000],bl
   14000c2c2:	add    BYTE PTR [rax],al
   14000c2c4:	test   al,0x96
   14000c2c6:	add    BYTE PTR [rax],al
   14000c2c8:	add    BYTE PTR [rax],al
   14000c2ca:	add    BYTE PTR [rax],al
   14000c2cc:	test   al,0x96
   14000c2ce:	add    BYTE PTR [rax],al
   14000c2d0:	(bad)  
   14000c2d1:	(bad)  
   14000c2d2:	(bad)  
   14000c2d3:	jmp    FWORD PTR [rax-0xfffff6a]
   14000c2d9:	rex.WX add BYTE PTR [rax],al
   14000c2dc:	(bad)  
   14000c2dd:	(bad)  
   14000c2de:	(bad)  
   14000c2df:	call   FWORD PTR [rax]
   14000c2e1:	rex.WXB add BYTE PTR [r8],al
   14000c2e4:	add    BYTE PTR [rax],al
   14000c2e6:	add    BYTE PTR [rax],al
   14000c2e8:	sub    eax,0x100004b
   14000c2ed:	add    BYTE PTR [rax],al
   14000c2ef:	add    BYTE PTR [rdx+0x4b],al
   14000c2f2:	add    BYTE PTR [rax],al
   14000c2f4:	add    eax,DWORD PTR [rax]
   14000c2f6:	add    BYTE PTR [rax],al
   14000c2f8:	imul   ecx,DWORD PTR [rbx+0x0],0x0
   14000c2fc:	add    al,0x0
   14000c2fe:	add    BYTE PTR [rax],al
   14000c300:	test   eax,0xff00004b
   14000c305:	(bad)  
   14000c306:	(bad)  
   14000c307:	call   QWORD PTR [rcx]
   14000c309:	and    al,BYTE PTR [rip+0x36342200]        # 0x17634e50f
   14000c30f:	add    BYTE PTR [rcx],dl
   14000c311:	add    DWORD PTR [rax+rax*1],esi
   14000c314:	add    dl,BYTE PTR [rax+0x0]
   14000c317:	add    BYTE PTR [rsi-0x57ffff77],bh
   14000c31d:	test   al,0x0
   14000c31f:	add    bh,bh
   14000c321:	(bad)  
   14000c322:	(bad)  
   14000c323:	push   rax
   14000c325:	xchg   esi,eax
   14000c326:	add    BYTE PTR [rax],al
   14000c328:	add    BYTE PTR [rax],al
   14000c32a:	add    BYTE PTR [rax],al
   14000c32c:	cld    
   14000c32d:	xchg   esi,eax
   14000c32e:	add    BYTE PTR [rax],al
   14000c330:	add    BYTE PTR [rax],al
   14000c332:	add    BYTE PTR [rax],al
   14000c334:	or     BYTE PTR [rdi+0x20000],dl
   14000c33a:	add    BYTE PTR [rax],al
   14000c33c:	adc    al,0x97
   14000c33e:	add    BYTE PTR [rax],al
   14000c340:	add    BYTE PTR [rax],al
   14000c342:	add    BYTE PTR [rax],al
   14000c344:	adc    al,0x97
	...
   14000c34e:	add    BYTE PTR [rax],al
   14000c350:	add    BYTE PTR [rax+0x0],dl
   14000c353:	add    bh,bh
   14000c355:	(bad)  
   14000c356:	(bad)  
   14000c357:	dec    DWORD PTR [rax+0x50]
   14000c35d:	add    BYTE PTR [rax],al
   14000c35f:	add    BYTE PTR [rbp+0x1000050],bl
   14000c365:	add    BYTE PTR [rax],al
   14000c367:	add    BYTE PTR [rdx+0x50],dh
   14000c36d:	add    BYTE PTR [rax],al
   14000c36f:	add    bh,cl
   14000c371:	push   rax
   14000c372:	add    BYTE PTR [rax],al
   14000c374:	add    al,BYTE PTR [rax]
   14000c376:	add    BYTE PTR [rax],al
   14000c378:	clc    
   14000c379:	push   rax
   14000c37a:	add    BYTE PTR [rax],al
   14000c37c:	add    al,0x0
   14000c37e:	add    BYTE PTR [rax],al
   14000c380:	pop    rax
   14000c381:	push   rcx
   14000c382:	add    BYTE PTR [rax],al
   14000c384:	add    BYTE PTR [rax],al
   14000c386:	add    BYTE PTR [rax],al
   14000c388:	pushf  
   14000c389:	push   rcx
   14000c38a:	add    BYTE PTR [rax],al
   14000c38c:	(bad)  
   14000c38d:	(bad)  
   14000c38e:	(bad)  
   14000c38f:	inc    DWORD PTR [rcx]
   14000c391:	(bad)  
   14000c392:	add    al,BYTE PTR [rax]
   14000c394:	(bad)  
   14000c395:	xor    al,BYTE PTR [rdx]
   14000c397:	xor    BYTE PTR [rcx],al
   14000c399:	add    al,0x1
   14000c39b:	add    BYTE PTR [rdx+rax*2],al
   14000c39e:	add    BYTE PTR [rax],al
   14000c3a0:	add    DWORD PTR [rcx+rax*1],eax
   14000c3a3:	add    BYTE PTR [rdx+rax*2],al
   14000c3a6:	add    BYTE PTR [rax],al
   14000c3a8:	adc    DWORD PTR [rsi],ebx
   14000c3aa:	add    eax,0x2a341e00
   14000c3af:	add    BYTE PTR [rip+0x6002601],cl        # 0x14600e9b6
   14000c3b5:	jo     0x14000c3b7
   14000c3b7:	add    BYTE PTR [rsi-0x2fffff77],bh
   14000c3bd:	test   al,0x0
   14000c3bf:	add    bh,bh
   14000c3c1:	(bad)  
   14000c3c2:	(bad)  
   14000c3c3:	inc    eax
   14000c3c5:	xchg   esi,eax
   14000c3c6:	add    BYTE PTR [rax],al
   14000c3c8:	ror    BYTE PTR [rbx+0x0],1
   14000c3cb:	add    bh,bh
   14000c3cd:	(bad)  
   14000c3ce:	(bad)  
   14000c3cf:	push   rcx
   14000c3d1:	rex.WXB add BYTE PTR [r8],al
   14000c3d4:	add    BYTE PTR [rax],al
   14000c3d6:	add    BYTE PTR [rax],al
   14000c3d8:	add    DWORD PTR [rsi],eax
   14000c3da:	add    al,BYTE PTR [rax]
   14000c3dc:	(bad)  
   14000c3dd:	xor    al,BYTE PTR [rdx]
   14000c3df:	push   rax
   14000c3e0:	adc    DWORD PTR [rax],esp
   14000c3e2:	or     BYTE PTR [rax],al
   14000c3e4:	and    BYTE PTR [rsp+rcx*1+0x0],dl
   14000c3e8:	sbb    esi,DWORD PTR [rbx+rcx*1]
   14000c3eb:	add    BYTE PTR [rip+0x7e00952],cl        # 0x147e0cd43
   14000c3f1:	jo     0x14000c3f9
   14000c3f3:	(bad)  
   14000c3f4:	mov    esi,0xf8000089
   14000c3f9:	test   al,0x0
   14000c3fb:	add    bh,bh
   14000c3fd:	(bad)  
   14000c3fe:	(bad)  
   14000c3ff:	inc    eax
   14000c401:	xchg   ebp,eax
   14000c402:	add    BYTE PTR [rax],al
   14000c404:	add    BYTE PTR [rax],al
   14000c406:	add    BYTE PTR [rax],al
   14000c408:	adc    BYTE PTR [rax],bh
   14000c40a:	add    BYTE PTR [rax],al
   14000c40c:	(bad)  
   14000c40d:	(bad)  
   14000c40e:	(bad)  
   14000c40f:	(bad)  
   14000c410:	cmp    DWORD PTR [rax],edi
   14000c412:	add    BYTE PTR [rax],al
   14000c414:	add    BYTE PTR [rax],al
   14000c416:	add    BYTE PTR [rax],al
   14000c418:	add    DWORD PTR [rsi],eax
   14000c41a:	add    al,BYTE PTR [rax]
   14000c41c:	(bad)  
   14000c41d:	xor    al,BYTE PTR [rdx]
   14000c41f:	push   rax
   14000c420:	add    DWORD PTR [rsi],eax
   14000c422:	add    al,BYTE PTR [rax]
   14000c424:	(bad)  
   14000c425:	push   rdx
   14000c426:	add    dh,BYTE PTR [rax]
   14000c428:	adc    DWORD PTR [rax],esp
   14000c42a:	or     BYTE PTR [rax],al
   14000c42c:	and    BYTE PTR [rsp+rcx*1+0x0],dl
   14000c430:	sbb    esi,DWORD PTR [rbx+rcx*1]
   14000c433:	add    BYTE PTR [rip+0x7e00952],cl        # 0x147e0cd8b
   14000c439:	jo     0x14000c441
   14000c43b:	(bad)  
   14000c43c:	mov    esi,0x20000089
   14000c441:	test   eax,0xffff0000
   14000c446:	(bad)  
   14000c447:	call   QWORD PTR [rax+0x95]
   14000c44d:	add    BYTE PTR [rax],al
   14000c44f:	add    al,ah
   14000c451:	add    BYTE PTR ss:[rax],al
   14000c454:	(bad)  
   14000c455:	(bad)  
   14000c456:	(bad)  
   14000c457:	dec    DWORD PTR [rcx]
   14000c459:	(bad)  
   14000c45a:	add    BYTE PTR [rax],al
   14000c45c:	add    BYTE PTR [rax],al
   14000c45e:	add    BYTE PTR [rax],al
   14000c460:	add    DWORD PTR [rsi],eax
   14000c462:	add    al,BYTE PTR [rax]
   14000c464:	(bad)  
   14000c465:	xor    al,BYTE PTR [rdx]
   14000c467:	push   rax
   14000c468:	add    DWORD PTR [rsi],eax
   14000c46a:	add    al,BYTE PTR [rax]
   14000c46c:	(bad)  
   14000c46d:	push   rdx
   14000c46e:	add    dh,BYTE PTR [rax]
   14000c470:	adc    DWORD PTR [rax],esp
   14000c472:	or     BYTE PTR [rax],al
   14000c474:	and    BYTE PTR [rsi+rcx*1+0x0],dl
   14000c478:	sbb    esi,DWORD PTR [rcx*1+0x9720d00]
   14000c47f:	loopne 0x14000c488
   14000c481:	jo     0x14000c489
   14000c483:	(bad)  
   14000c484:	mov    esi,0x48000089
   14000c489:	test   eax,0xffff0000
   14000c48e:	(bad)  
   14000c48f:	call   QWORD PTR [rax]
   14000c491:	xchg   esi,eax
   14000c492:	add    BYTE PTR [rax],al
   14000c494:	add    BYTE PTR [rax],al
   14000c496:	add    BYTE PTR [rax],al
   14000c498:	ds xchg esi,eax
   14000c49a:	add    BYTE PTR [rax],al
   14000c49c:	add    DWORD PTR [rax],eax
   14000c49e:	add    BYTE PTR [rax],al
   14000c4a0:	push   rax
   14000c4a1:	xchg   esi,eax
   14000c4a2:	add    BYTE PTR [rax],al
   14000c4a4:	add    DWORD PTR [rax],eax
   14000c4a6:	add    BYTE PTR [rax],al
   14000c4a8:	pop    rsi
   14000c4a9:	xchg   esi,eax
   14000c4aa:	add    BYTE PTR [rax],al
   14000c4ac:	add    BYTE PTR [rax],al
   14000c4ae:	add    BYTE PTR [rax],al
   14000c4b0:	rex cmp eax,DWORD PTR [rax]
   14000c4b3:	add    bh,bh
   14000c4b5:	(bad)  
   14000c4b6:	(bad)  
   14000c4b7:	jmp    FWORD PTR [rdi+0x3b]
   14000c4bd:	add    BYTE PTR [rax],al
   14000c4bf:	add    al,cl
   14000c4c1:	cmp    eax,DWORD PTR [rax]
   14000c4c3:	add    BYTE PTR [rcx],al
   14000c4c5:	add    BYTE PTR [rax],al
   14000c4c7:	add    dl,bh
   14000c4c9:	cmp    eax,DWORD PTR [rax]
   14000c4cb:	add    BYTE PTR [rdx],al
   14000c4cd:	add    BYTE PTR [rax],al
   14000c4cf:	add    BYTE PTR [rdx],bh
   14000c4d1:	cmp    al,0x0
   14000c4d3:	add    BYTE PTR [rbx],al
   14000c4d5:	add    BYTE PTR [rax],al
   14000c4d7:	add    BYTE PTR [rax+0x3c],ch
   14000c4da:	add    BYTE PTR [rax],al
   14000c4dc:	(bad)  
   14000c4dd:	(bad)  
   14000c4de:	(bad)  
   14000c4df:	inc    DWORD PTR [rcx]
   14000c4e1:	(bad)  
   14000c4e2:	add    al,BYTE PTR [rax]
   14000c4e4:	(bad)  
   14000c4e5:	xor    al,BYTE PTR [rdx]
   14000c4e7:	push   rax
   14000c4e8:	add    DWORD PTR [rsi],eax
   14000c4ea:	add    al,BYTE PTR [rax]
   14000c4ec:	(bad)  
   14000c4ed:	xor    al,BYTE PTR [rdx]
   14000c4ef:	xor    BYTE PTR [rcx],al
   14000c4f1:	(bad)  
   14000c4f2:	add    al,BYTE PTR [rax]
   14000c4f4:	(bad)  
   14000c4f5:	xor    al,BYTE PTR [rdx]
   14000c4f7:	xor    BYTE PTR [rcx],dl
   14000c4f9:	sbb    BYTE PTR [rax+rax*1],al
   14000c4fc:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000c4ff:	add    BYTE PTR [rdx],cl
   14000c501:	push   rdx
   14000c502:	(bad)  
   14000c503:	jo     0x14000c4c3
   14000c505:	mov    DWORD PTR [rax],eax
   14000c507:	add    BYTE PTR [rax-0x57],dh
   14000c50a:	add    BYTE PTR [rax],al
   14000c50c:	(bad)  
   14000c50d:	(bad)  
   14000c50e:	(bad)  
   14000c50f:	inc    DWORD PTR [rax]
   14000c511:	xchg   esi,eax
   14000c512:	add    BYTE PTR [rax],al
   14000c514:	add    BYTE PTR [rax],al
   14000c516:	add    BYTE PTR [rax],al
   14000c518:	movabs al,ds:0xc5ffffffff00003a
   14000c521:	cmp    al,BYTE PTR [rax]
   14000c523:	add    BYTE PTR [rax],al
   14000c525:	add    BYTE PTR [rax],al
   14000c527:	add    BYTE PTR [rsi],ah
   14000c529:	cmp    eax,DWORD PTR [rax]
   14000c52b:	add    bh,bh
   14000c52d:	(bad)  
   14000c52e:	(bad)  
   14000c52f:	inc    DWORD PTR [rcx]
   14000c531:	(bad)  
   14000c532:	add    al,BYTE PTR [rax]
   14000c534:	(bad)  
   14000c535:	xor    al,BYTE PTR [rdx]
   14000c537:	xor    BYTE PTR [rcx],dl
   14000c539:	adc    al,0x4
   14000c53b:	add    BYTE PTR [rsp+rsi*1],dl
   14000c53e:	or     DWORD PTR [rax],eax
   14000c540:	(bad)  
   14000c541:	push   rdx
   14000c542:	add    dh,BYTE PTR [rax-0x42]
   14000c545:	mov    DWORD PTR [rax],eax
   14000c547:	add    BYTE PTR [rax-0xffff57],bl
   14000c54d:	(bad)  
   14000c54e:	(bad)  
   14000c54f:	jmp    QWORD PTR [rax]
   14000c551:	xchg   edi,eax
   14000c552:	add    BYTE PTR [rax],al
   14000c554:	add    BYTE PTR [rax],al
   14000c556:	add    BYTE PTR [rax],al
   14000c558:	rcl    BYTE PTR [rcx+0x0],1
   14000c55b:	add    bh,bh
   14000c55d:	(bad)  
   14000c55e:	(bad)  
   14000c55f:	push   QWORD PTR [rsi+0x52]
   14000c562:	add    BYTE PTR [rax],al
   14000c564:	add    BYTE PTR [rax],al
   14000c566:	add    BYTE PTR [rax],al
   14000c568:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c569:	push   rdx
   14000c56a:	add    BYTE PTR [rax],al
   14000c56c:	(bad)  
   14000c56d:	(bad)  
   14000c56e:	(bad)  
   14000c56f:	inc    DWORD PTR [rcx]
   14000c571:	clts   
   14000c573:	add    BYTE PTR [rdi],cl
   14000c575:	fs (bad) 
   14000c577:	add    BYTE PTR [rdi],cl
   14000c579:	xor    al,0x6
   14000c57b:	add    BYTE PTR [rdi],cl
   14000c57d:	xor    cl,BYTE PTR [rbx]
   14000c57f:	jo     0x14000c592
   14000c581:	and    cl,BYTE PTR [rdx]
   14000c583:	add    BYTE PTR [rdx],ah
   14000c585:	fs adc eax,0x14341e00
   14000c58b:	add    BYTE PTR [rdx],dl
   14000c58d:	ror    BYTE PTR [rbx],cl
   14000c58f:	lock or eax,esp
   14000c592:	(bad)  
   14000c593:	rol    BYTE PTR [rip+0xffffffffbe500470],0x89        # 0xfe50ca0a
   14000c59a:	add    BYTE PTR [rax],al
   14000c59c:	shr    BYTE PTR [rcx-0x10000],0xff
   14000c5a3:	push   QWORD PTR [rax]
   14000c5a5:	xchg   edi,eax
   14000c5a6:	add    BYTE PTR [rax],al
   14000c5a8:	loopne 0x14000c5fc
   14000c5aa:	add    BYTE PTR [rax],al
   14000c5ac:	(bad)  
   14000c5ad:	(bad)  
   14000c5ae:	(bad)  
   14000c5af:	(bad)  
   14000c5b0:	ficom  WORD PTR [rbx+0x0]
   14000c5b3:	add    BYTE PTR [rax],al
   14000c5b5:	add    BYTE PTR [rax],al
   14000c5b7:	add    BYTE PTR [rcx-0xffffab],dl
   14000c5bd:	(bad)  
   14000c5be:	(bad)  
   14000c5bf:	inc    DWORD PTR [rcx]
   14000c5c1:	or     al,BYTE PTR [rax+rax*1]
   14000c5c4:	or     dh,BYTE PTR [rsi+rax*1]
   14000c5c7:	add    BYTE PTR [rdx],cl
   14000c5c9:	xor    al,BYTE PTR [rsi]
   14000c5cb:	jo     0x14000c5ce
   14000c5cd:	(bad)  
   14000c5ce:	add    al,BYTE PTR [rax]
   14000c5d0:	(bad)  
   14000c5d1:	xor    al,BYTE PTR [rdx]
   14000c5d3:	xor    BYTE PTR [rcx],ah
   14000c5d5:	add    eax,0x74050002
   14000c5da:	(bad)  
   14000c5db:	add    al,al
   14000c5dd:	pop    rsp
   14000c5de:	add    BYTE PTR [rax],al
   14000c5e0:	repz pop rsp
   14000c5e2:	add    BYTE PTR [rax],al
   14000c5e4:	int3   
   14000c5e5:	(bad)
   14000c5e8:	and    DWORD PTR [rax],eax
   14000c5ea:	add    al,BYTE PTR [rax]
   14000c5ec:	add    BYTE PTR [rsi+rax*1+0x0],dh
   14000c5f0:	rcr    BYTE PTR [rax+rax*1+0x0],0xf3
   14000c5f5:	pop    rsp
   14000c5f6:	add    BYTE PTR [rax],al
   14000c5f8:	int3   
   14000c5f9:	(bad)
   14000c5fc:	adc    DWORD PTR [rdi],ebx
   14000c5fe:	or     BYTE PTR [rax],al
   14000c600:	(bad)  
   14000c601:	xor    al,0x16
   14000c603:	add    BYTE PTR [rdi],cl
   14000c605:	ror    BYTE PTR [rax],cl
   14000c607:	lock (bad) 
   14000c609:	loopne 0x14000c60f
   14000c60b:	jo     0x14000c610
   14000c60d:	(bad)  
   14000c60e:	add    dl,BYTE PTR [rax-0x42]
   14000c611:	mov    DWORD PTR [rax],eax
   14000c613:	add    al,ch
   14000c615:	test   eax,0xffff0000
   14000c61a:	(bad)  
   14000c61b:	inc    DWORD PTR [rax-0x69]
   14000c61e:	add    BYTE PTR [rax],al
   14000c620:	loopne 0x14000c67b
   14000c622:	add    BYTE PTR [rax],al
   14000c624:	(bad)  
   14000c625:	(bad)  
   14000c626:	(bad)  
   14000c627:	push   QWORD PTR [rcx+0x5a]
   14000c62d:	add    BYTE PTR [rax],al
   14000c62f:	add    BYTE PTR [rbx-0xffffa4],cl
   14000c635:	(bad)  
   14000c636:	(bad)  
   14000c637:	inc    DWORD PTR [rcx]
   14000c639:	adc    cl,BYTE PTR [rax]
   14000c63b:	add    BYTE PTR [rdx],dl
   14000c63d:	push   rsp
   14000c63e:	or     al,BYTE PTR [rax]
   14000c640:	adc    dh,BYTE PTR [rcx+rcx*1]
   14000c643:	add    BYTE PTR [rdx],dl
   14000c645:	xor    cl,BYTE PTR [rsi]
   14000c647:	loopne 0x14000c655
   14000c649:	jo     0x14000c656
   14000c64b:	(bad)  
   14000c64c:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b415c65a
   14000c652:	or     DWORD PTR [rax],eax
   14000c654:	adc    eax,0x15000864
   14000c659:	xor    al,0x7
   14000c65b:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e0d793
   14000c661:	(bad)  
   14000c662:	add    al,BYTE PTR [rax]
   14000c664:	(bad)  
   14000c665:	xor    al,BYTE PTR [rdx]
   14000c667:	xor    BYTE PTR [rcx],ah
   14000c669:	add    eax,0x74050002
   14000c66e:	(bad)  
   14000c66f:	add    BYTE PTR [rax-0x23ffffa8],ah
   14000c675:	pop    rax
   14000c676:	add    BYTE PTR [rax],al
   14000c678:	(bad)  
   14000c679:	mov    BYTE PTR [rax],0x0
   14000c67c:	and    DWORD PTR [rax],eax
   14000c67e:	add    BYTE PTR [rax],al
   14000c680:	movabs al,ds:0x60000058dc000058
   14000c689:	mov    BYTE PTR [rax],0x0
   14000c68c:	add    DWORD PTR [rsi],eax
   14000c68e:	add    al,BYTE PTR [rax]
   14000c690:	(bad)  
   14000c691:	xor    al,BYTE PTR [rdx]
   14000c693:	xor    BYTE PTR [rcx],al
   14000c695:	or     al,BYTE PTR [rax+rax*1]
   14000c698:	or     dh,BYTE PTR [rsi+rax*1]
   14000c69b:	add    BYTE PTR [rdx],cl
   14000c69d:	xor    al,BYTE PTR [rsi]
   14000c69f:	jo     0x14000c6a2
   14000c6a1:	or     al,BYTE PTR [rax+rax*1]
   14000c6a4:	or     dh,BYTE PTR [rsi+rax*1]
   14000c6a7:	add    BYTE PTR [rdx],cl
   14000c6a9:	xor    al,BYTE PTR [rsi]
   14000c6ab:	jo     0x14000c6be
   14000c6ad:	(bad)  
   14000c6ae:	or     BYTE PTR [rax],al
   14000c6b0:	(bad)  
   14000c6b1:	adc    al,BYTE PTR fs:[rax]
   14000c6b4:	sbb    dh,BYTE PTR [rcx+rdx*1]
   14000c6b7:	add    BYTE PTR [rsi],cl
   14000c6b9:	mov    dl,0x7
   14000c6bb:	loopne 0x14000c6c2
   14000c6bd:	jo     0x14000c6c3
   14000c6bf:	push   rax
   14000c6c0:	mov    esi,0x10000089
   14000c6c5:	stos   BYTE PTR es:[rdi],al
   14000c6c6:	add    BYTE PTR [rax],al
   14000c6c8:	(bad)  
   14000c6c9:	(bad)  
   14000c6ca:	(bad)  
   14000c6cb:	inc    DWORD PTR [rax-0xfffff6a]
   14000c6d1:	add    BYTE PTR [rax],al
   14000c6d4:	(bad)  
   14000c6d5:	(bad)  
   14000c6d6:	(bad)  
   14000c6d7:	jmp    FWORD PTR [rax+0x41]
   14000c6da:	add    BYTE PTR [rax],al
   14000c6dc:	add    BYTE PTR [rax],al
   14000c6de:	add    BYTE PTR [rax],al
   14000c6e0:	(bad)  
   14000c6e1:	rex.X add BYTE PTR [rax],al
   14000c6e4:	(bad)  
   14000c6e5:	(bad)  
   14000c6e6:	(bad)  
   14000c6e7:	inc    DWORD PTR [rcx]
   14000c6e9:	or     al,BYTE PTR [rax+rax*1]
   14000c6ec:	or     dh,BYTE PTR [rsi+rax*1]
   14000c6ef:	add    BYTE PTR [rdx],cl
   14000c6f1:	xor    al,BYTE PTR [rsi]
   14000c6f3:	jo     0x14000c6f6
   14000c6f5:	or     al,BYTE PTR [rax+rax*1]
   14000c6f8:	or     dh,BYTE PTR [rsi+rax*1]
   14000c6fb:	add    BYTE PTR [rdx],cl
   14000c6fd:	xor    al,BYTE PTR [rsi]
   14000c6ff:	jo     0x14000c702
   14000c701:	or     al,BYTE PTR [rax+rax*1]
   14000c704:	or     dh,BYTE PTR [rsi+rax*1]
   14000c707:	add    BYTE PTR [rdx],cl
   14000c709:	xor    al,BYTE PTR [rsi]
   14000c70b:	jo     0x14000c70e
   14000c70d:	(bad)  
   14000c70e:	add    al,BYTE PTR [rax]
   14000c710:	(bad)  
   14000c711:	xor    al,BYTE PTR [rdx]
   14000c713:	xor    BYTE PTR [rcx],bl
   14000c715:	and    cl,BYTE PTR [rax]
   14000c717:	add    BYTE PTR [rdx],ah
   14000c719:	xor    al,0x10
   14000c71b:	add    BYTE PTR [rcx],dl
   14000c71d:	jb     0x14000c72c
   14000c71f:	lock or esp,eax
   14000c722:	or     eax,eax
   14000c724:	(bad)  
   14000c725:	jo     0x14000c72d
   14000c727:	(bad)  
   14000c728:	mov    esi,0x38000089
   14000c72d:	stos   BYTE PTR es:[rdi],al
   14000c72e:	add    BYTE PTR [rax],al
   14000c730:	(bad)  
   14000c731:	(bad)  
   14000c732:	(bad)  
   14000c733:	inc    DWORD PTR [rax-0x6b]
   14000c736:	add    BYTE PTR [rax],al
   14000c738:	(bad)  
   14000c739:	(bad)  
   14000c73a:	(bad)  
   14000c73b:	dec    DWORD PTR [rbp+rdx*4+0x0]
   14000c73f:	add    BYTE PTR [rcx],al
   14000c741:	add    BYTE PTR [rax],al
   14000c743:	add    BYTE PTR [rax],al
   14000c745:	add    BYTE PTR [rax],al
   14000c747:	add    BYTE PTR [rcx],al
   14000c749:	add    BYTE PTR [rax],al
   14000c74b:	add    BYTE PTR [rax],al
   14000c74d:	add    BYTE PTR [rax],al
   14000c74f:	add    BYTE PTR [rdx],al
   14000c751:	add    BYTE PTR [rax],al
   14000c753:	add    BYTE PTR [rdx],al
   14000c755:	add    BYTE PTR [rax],al
   14000c757:	add    BYTE PTR [rbx],al
   14000c759:	add    BYTE PTR [rax],al
   14000c75b:	add    BYTE PTR [rcx],al
   14000c75d:	add    BYTE PTR [rax],al
   14000c75f:	add    BYTE PTR [rdi+rax*8+0x0],ah
   14000c763:	add    BYTE PTR [rax+0x0],al
	...
   14000c76e:	add    BYTE PTR [rax],al
   14000c770:	pop    rax
   14000c771:	xchg   ebp,eax
   14000c772:	add    BYTE PTR [rax],al
   14000c774:	cmp    BYTE PTR [rax],al
	...
   14000c77e:	add    BYTE PTR [rax],al
   14000c780:	shl    BYTE PTR [rax+rax*1],0x0
   14000c784:	(bad)  
   14000c785:	(bad)  
   14000c786:	(bad)  
   14000c787:	jmp    FWORD PTR [rax]
   14000c789:	xor    eax,0x0
   14000c78e:	add    BYTE PTR [rax],al
   14000c790:	pop    rsi
   14000c791:	xor    eax,0x10000
   14000c796:	add    BYTE PTR [rax],al
   14000c798:	ins    BYTE PTR es:[rdi],dx
   14000c799:	xor    eax,0x20000
   14000c79e:	add    BYTE PTR [rax],al
   14000c7a0:	and    BYTE PTR [rsi],dh
   14000c7a2:	add    BYTE PTR [rax],al
   14000c7a4:	add    DWORD PTR [rax],eax
   14000c7a6:	add    BYTE PTR [rax],al
   14000c7a8:	rex.RX
   14000c7a9:	add    BYTE PTR ss:[rax],al
   14000c7ac:	(bad)  
   14000c7ad:	(bad)  
   14000c7ae:	(bad)  
   14000c7af:	call   FWORD PTR [rax-0x6b]
   14000c7b2:	add    BYTE PTR [rax],al
   14000c7b4:	add    BYTE PTR [rax],al
   14000c7b6:	add    BYTE PTR [rax],al
   14000c7b8:	gs xchg ebp,eax
   14000c7ba:	add    BYTE PTR [rax],al
   14000c7bc:	add    eax,DWORD PTR [rax]
   14000c7be:	add    BYTE PTR [rax],al
   14000c7c0:	(bad)  
   14000c7c1:	xchg   ebp,eax
   14000c7c2:	add    BYTE PTR [rax],al
   14000c7c4:	add    BYTE PTR [rax],al
   14000c7c6:	add    BYTE PTR [rax],al
   14000c7c8:	sbb    DWORD PTR [rdx],ecx
   14000c7ca:	add    al,BYTE PTR [rax]
   14000c7cc:	or     dh,BYTE PTR [rdx]
   14000c7ce:	(bad)  
   14000c7cf:	push   rax
   14000c7d0:	mov    esi,0x38000089
   14000c7d5:	stos   BYTE PTR es:[rdi],al
   14000c7d6:	add    BYTE PTR [rax],al
   14000c7d8:	adc    DWORD PTR [rcx],ebx
   14000c7da:	(bad)  
   14000c7db:	add    BYTE PTR [rcx],bl
   14000c7dd:	fs or  eax,0xc341400
   14000c7e3:	add    BYTE PTR [rsi],al
   14000c7e5:	jb     0x14000c7e9
   14000c7e7:	jo     0x14000c7a7
   14000c7e9:	mov    DWORD PTR [rax],eax
   14000c7eb:	add    BYTE PTR [rax-0x56],ah
   14000c7ee:	add    BYTE PTR [rax],al
   14000c7f0:	(bad)  
   14000c7f1:	(bad)  
   14000c7f2:	(bad)  
   14000c7f3:	push   rax
   14000c7f5:	xchg   ebp,eax
   14000c7f6:	add    BYTE PTR [rax],al
   14000c7f8:	jo     0x14000c833
   14000c7fa:	add    BYTE PTR [rax],al
   14000c7fc:	(bad)  
   14000c7fd:	(bad)  
   14000c7fe:	(bad)  
   14000c7ff:	call   FWORD PTR [rdx+0x39]
   14000c805:	add    BYTE PTR [rax],al
   14000c807:	add    BYTE PTR [rbx+0x3a],dl
   14000c80a:	add    BYTE PTR [rax],al
   14000c80c:	(bad)  
   14000c80d:	(bad)  
   14000c80e:	(bad)  
   14000c80f:	inc    DWORD PTR [rcx]
   14000c811:	(bad)  
   14000c812:	add    al,BYTE PTR [rax]
   14000c814:	(bad)  
   14000c815:	xor    al,BYTE PTR [rdx]
   14000c817:	xor    BYTE PTR [rcx],dl
   14000c819:	sbb    BYTE PTR [rax+rax*1],al
   14000c81c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000c81f:	add    BYTE PTR [rdx],cl
   14000c821:	push   rdx
   14000c822:	(bad)  
   14000c823:	jo     0x14000c7e3
   14000c825:	mov    DWORD PTR [rax],eax
   14000c827:	add    BYTE PTR [rax-0xffff56],cl
   14000c82d:	(bad)  
   14000c82e:	(bad)  
   14000c82f:	push   QWORD PTR [rax-0x6a]
   14000c832:	add    BYTE PTR [rax],al
   14000c834:	add    BYTE PTR [rax],al
   14000c836:	add    BYTE PTR [rax],al
   14000c838:	xor    BYTE PTR [rip+0xffffffffffff0000],bh        # 0x13fffc83e
   14000c83e:	(bad)  
   14000c83f:	jmp    FWORD PTR [rcx+0x3d]
   14000c842:	add    BYTE PTR [rax],al
   14000c844:	add    BYTE PTR [rax],al
   14000c846:	add    BYTE PTR [rax],al
   14000c848:	sahf   
   14000c849:	cmp    eax,0xffff0000
   14000c84e:	(bad)  
   14000c84f:	inc    DWORD PTR [rcx]
   14000c851:	(bad)  
   14000c852:	add    al,BYTE PTR [rax]
   14000c854:	(bad)  
   14000c855:	xor    al,BYTE PTR [rdx]
   14000c857:	xor    BYTE PTR [rcx],bl
   14000c859:	sbb    al,0x7
   14000c85b:	add    BYTE PTR [rsp+riz*2],bl
   14000c85e:	(bad)  
   14000c85f:	add    BYTE PTR [rax],bl
   14000c861:	xor    al,0x26
   14000c863:	add    BYTE PTR [rbx],cl
   14000c865:	add    DWORD PTR [rax+rax*1],esp
   14000c868:	add    al,0x70
   14000c86a:	add    BYTE PTR [rax],al
   14000c86c:	mov    esi,0x90000089
   14000c871:	stos   DWORD PTR es:[rdi],eax
   14000c872:	add    BYTE PTR [rax],al
   14000c874:	(bad)  
   14000c875:	(bad)  
   14000c876:	(bad)  
   14000c877:	call   QWORD PTR [rax-0x67]
   14000c87a:	add    BYTE PTR [rax],al
   14000c87c:	(bad)  
   14000c87d:	(bad)  
   14000c87e:	(bad)  
   14000c87f:	call   FWORD PTR [rcx+rbx*4+0x0]
   14000c883:	add    BYTE PTR [rcx],al
   14000c885:	add    BYTE PTR [rax],al
   14000c887:	add    BYTE PTR [rax],al
   14000c889:	add    BYTE PTR [rax],al
   14000c88b:	add    BYTE PTR [rdx],al
   14000c88d:	add    BYTE PTR [rax],al
   14000c88f:	add    BYTE PTR [rax-0x67],ch
   14000c892:	add    BYTE PTR [rax],al
   14000c894:	add    eax,DWORD PTR [rax]
   14000c896:	add    BYTE PTR [rax],al
   14000c898:	je     0x14000c833
   14000c89a:	add    BYTE PTR [rax],al
   14000c89c:	add    DWORD PTR [rax],eax
   14000c89e:	add    BYTE PTR [rax],al
   14000c8a0:	add    BYTE PTR [rax],al
   14000c8a2:	add    BYTE PTR [rax],al
   14000c8a4:	add    eax,0x51000000
   14000c8a9:	(bad)  
   14000c8aa:	add    BYTE PTR [rax],al
   14000c8ac:	add    eax,0xf1000000
   14000c8b1:	(bad)  
   14000c8b2:	add    BYTE PTR [rax],al
   14000c8b4:	add    eax,0x60000000
   14000c8b9:	fwait
   14000c8ba:	add    BYTE PTR [rax],al
   14000c8bc:	add    al,BYTE PTR [rax]
   14000c8be:	add    BYTE PTR [rax],al
   14000c8c0:	add    al,0x0
   14000c8c2:	add    BYTE PTR [rax],al
   14000c8c4:	or     BYTE PTR [rax],al
   14000c8c6:	add    BYTE PTR [rax],al
   14000c8c8:	add    eax,DWORD PTR [rax]
   14000c8ca:	add    BYTE PTR [rax],al
   14000c8cc:	ror    al,1
   14000c8ce:	add    BYTE PTR [rax],al
   14000c8d0:	or     DWORD PTR [rax],eax
   14000c8d2:	add    BYTE PTR [rax],al
   14000c8d4:	mov    al,dh
   14000c8d6:	add    BYTE PTR [rax],al
   14000c8d8:	jo     0x14000c8da
   14000c8da:	add    BYTE PTR [rax],al
   14000c8dc:	sbb    BYTE PTR [rcx+0x480000],0x0
   14000c8e3:	add    BYTE PTR [rcx],cl
   14000c8e5:	add    BYTE PTR [rax],al
   14000c8e7:	add    BYTE PTR [rax-0x10],ah
   14000c8ea:	add    BYTE PTR [rax],al
   14000c8ec:	(bad)  
   14000c8ed:	add    BYTE PTR [rax],al
   14000c8ef:	add    BYTE PTR [rbp-0x66],bl
   14000c8f2:	add    BYTE PTR [rax],al
   14000c8f4:	cmp    BYTE PTR [rax],al
   14000c8f6:	add    BYTE PTR [rax],al
   14000c8f8:	add    BYTE PTR [rax],al
	...
   14000c903:	add    ch,bh
   14000c905:	(bad)  
   14000c906:	add    BYTE PTR [rax],al
   14000c908:	cmp    BYTE PTR [rax],al
   14000c90a:	add    BYTE PTR [rax],al
   14000c90c:	add    BYTE PTR [rax],al
   14000c90e:	add    BYTE PTR [rax],al
   14000c910:	adc    BYTE PTR [rax+rax*1-0x100],al
   14000c917:	jmp    FWORD PTR [rbx-0x7c]
   14000c91a:	add    BYTE PTR [rax],al
   14000c91c:	add    BYTE PTR [rax],al
   14000c91e:	add    BYTE PTR [rax],al
   14000c920:	ja     0x14000c8a6
   14000c922:	add    BYTE PTR [rax],al
   14000c924:	(bad)  
   14000c925:	(bad)  
   14000c926:	(bad)  
   14000c927:	jmp    FWORD PTR [rdi+0x2000084]
   14000c92d:	add    BYTE PTR [rax],al
   14000c92f:	add    dl,al
   14000c931:	test   BYTE PTR [rax],al
   14000c933:	add    BYTE PTR [rbx],al
   14000c935:	add    BYTE PTR [rax],al
   14000c937:	add    BYTE PTR [rcx],cl
   14000c939:	test   DWORD PTR [rax],eax
   14000c93b:	add    BYTE PTR [rax+rax*1],al
   14000c93e:	add    BYTE PTR [rax],al
   14000c940:	adc    al,BYTE PTR [rbp+0x30000]
   14000c946:	add    BYTE PTR [rax],al
   14000c948:	movsxd eax,DWORD PTR [rbp+0x20000]
   14000c94e:	add    BYTE PTR [rax],al
   14000c950:	jno    0x14000c8d7
   14000c952:	add    BYTE PTR [rax],al
   14000c954:	add    DWORD PTR [rax],eax
   14000c956:	add    BYTE PTR [rax],al
   14000c958:	sbb    BYTE PTR [rcx+0x0],0x0
   14000c95f:	add    BYTE PTR [rdi+0x5000099],cl
   14000c965:	add    BYTE PTR [rax],al
   14000c967:	add    ah,bh
   14000c969:	cdq    
   14000c96a:	add    BYTE PTR [rax],al
   14000c96c:	(bad)  
   14000c96d:	add    BYTE PTR [rax],al
   14000c96f:	add    BYTE PTR [rbp-0x66],bl
   14000c972:	add    BYTE PTR [rax],al
   14000c974:	add    BYTE PTR [rax],al
   14000c976:	add    BYTE PTR [rax],al
   14000c978:	push   0xffffffffffffff9a
   14000c97a:	add    BYTE PTR [rax],al
   14000c97c:	add    eax,0x95000000
   14000c981:	(bad)  
   14000c982:	add    BYTE PTR [rax],al
   14000c984:	(bad)  
   14000c985:	add    BYTE PTR [rax],al
   14000c987:	add    ch,bh
   14000c989:	(bad)  
   14000c98a:	add    BYTE PTR [rax],al
   14000c98c:	add    BYTE PTR [rax],al
   14000c98e:	add    BYTE PTR [rax],al
   14000c990:	or     bl,BYTE PTR [rbx+0x50000]
   14000c996:	add    BYTE PTR [rax],al
   14000c998:	xor    eax,0x800009b
   14000c99d:	add    BYTE PTR [rax],al
   14000c99f:	add    BYTE PTR [rcx],bl
   14000c9a1:	or     al,0x4
   14000c9a3:	add    BYTE PTR [rdx+rsi*1],cl
   14000c9a6:	or     BYTE PTR [rax+0x7],dh
   14000c9a9:	push   rax
   14000c9aa:	(bad)  
   14000c9ab:	xor    BYTE PTR [rsi-0x6fffff77],bh
   14000c9b1:	stos   DWORD PTR es:[rdi],eax
   14000c9b2:	add    BYTE PTR [rax],al
   14000c9b4:	sbb    DWORD PTR [rdx],ecx
   14000c9b6:	add    al,BYTE PTR [rax]
   14000c9b8:	or     dh,BYTE PTR [rdx]
   14000c9ba:	(bad)  
   14000c9bb:	push   rax
   14000c9bc:	mov    esi,0x90000089
   14000c9c1:	stos   DWORD PTR es:[rdi],eax
   14000c9c2:	add    BYTE PTR [rax],al
   14000c9c4:	sbb    DWORD PTR [rdx],ecx
   14000c9c6:	add    al,BYTE PTR [rax]
   14000c9c8:	or     dh,BYTE PTR [rdx]
   14000c9ca:	(bad)  
   14000c9cb:	push   rax
   14000c9cc:	mov    esi,0x90000089
   14000c9d1:	stos   DWORD PTR es:[rdi],eax
   14000c9d2:	add    BYTE PTR [rax],al
   14000c9d4:	add    DWORD PTR [rsi],eax
   14000c9d6:	add    al,BYTE PTR [rax]
   14000c9d8:	(bad)  
   14000c9d9:	xor    al,BYTE PTR [rdx]
   14000c9db:	xor    BYTE PTR [rcx],al
   14000c9dd:	(bad)  
   14000c9de:	add    al,BYTE PTR [rax]
   14000c9e0:	(bad)  
   14000c9e1:	xor    al,BYTE PTR [rdx]
   14000c9e3:	xor    BYTE PTR [rcx],al
   14000c9e5:	add    al,0x1
   14000c9e7:	add    BYTE PTR [rdx+rax*2],al
   14000c9ea:	add    BYTE PTR [rax],al
   14000c9ec:	add    DWORD PTR [rcx+rax*1],eax
   14000c9ef:	add    BYTE PTR [rdx+rax*2],al
   14000c9f2:	add    BYTE PTR [rax],al
   14000c9f4:	add    DWORD PTR [rsi],eax
   14000c9f6:	add    al,BYTE PTR [rax]
   14000c9f8:	(bad)  
   14000c9f9:	xor    al,BYTE PTR [rdx]
   14000c9fb:	xor    BYTE PTR [rcx],al
   14000c9fd:	(bad)  
   14000c9fe:	add    al,BYTE PTR [rax]
   14000ca00:	(bad)  
   14000ca01:	xor    al,BYTE PTR [rdx]
   14000ca03:	xor    BYTE PTR [rcx],al
   14000ca05:	adc    al,0x8
   14000ca07:	add    BYTE PTR [rsp+riz*2],dl
   14000ca0a:	or     BYTE PTR [rax],al
   14000ca0c:	adc    al,0x54
   14000ca0e:	(bad)  
   14000ca0f:	add    BYTE PTR [rsp+rsi*1],dl
   14000ca12:	(bad)  
   14000ca13:	add    BYTE PTR [rdx+rsi*1],dl
   14000ca16:	adc    BYTE PTR [rax+0x1],dh
   14000ca19:	clts   
   14000ca1b:	add    BYTE PTR [rdi],cl
   14000ca1d:	fs (bad) 
   14000ca1f:	add    BYTE PTR [rdi],cl
   14000ca21:	xor    al,0x6
   14000ca23:	add    BYTE PTR [rdi],cl
   14000ca25:	xor    cl,BYTE PTR [rbx]
   14000ca27:	jo     0x14000ca2a
   14000ca29:	add    al,0x1
   14000ca2b:	add    BYTE PTR [rdx+rax*2],al
   14000ca2e:	add    BYTE PTR [rax],al
   14000ca30:	add    DWORD PTR [rdx],ecx
   14000ca32:	add    al,0x0
   14000ca34:	or     dh,BYTE PTR [rsi+rax*1]
   14000ca37:	add    BYTE PTR [rdx],cl
   14000ca39:	xor    al,BYTE PTR [rsi]
   14000ca3b:	jo     0x14000ca56
   14000ca3d:	and    eax,DWORD PTR [rsi]
   14000ca3f:	add    BYTE PTR [rdx],bl
   14000ca41:	push   rdx
   14000ca42:	(bad)  
   14000ca43:	lock adc al,0xe0
   14000ca46:	adc    dh,BYTE PTR [rax+0x11]
   14000ca49:	(bad)  
   14000ca4a:	adc    BYTE PTR [rax],dh
   14000ca4c:	mov    esi,0xb8000089
   14000ca51:	stos   DWORD PTR es:[rdi],eax
   14000ca52:	add    BYTE PTR [rax],al
   14000ca54:	(bad)  
   14000ca55:	(bad)  
   14000ca56:	(bad)  
   14000ca57:	inc    DWORD PTR [rax]
   14000ca59:	add    BYTE PTR [rax],al
   14000ca5b:	add    bh,bh
   14000ca5d:	(bad)  
   14000ca5e:	(bad)  
   14000ca5f:	inc    DWORD PTR [rax]
   14000ca61:	add    BYTE PTR [rax],al
   14000ca63:	add    BYTE PTR [rcx],al
   14000ca65:	add    BYTE PTR [rax],al
   14000ca67:	add    BYTE PTR [rax],al
   14000ca69:	add    BYTE PTR [rax],al
   14000ca6b:	add    BYTE PTR [rcx],al
	...
   14000ca79:	add    BYTE PTR [rax],al
   14000ca7b:	add    BYTE PTR [rbx],al
   14000ca7d:	add    BYTE PTR [rax],al
   14000ca7f:	add    BYTE PTR [rcx],al
   14000ca81:	add    BYTE PTR [rax],al
   14000ca83:	add    BYTE PTR [rdx+rcx*8+0x20000],bl
   14000ca8a:	add    BYTE PTR [rax],al
   14000ca8c:	add    al,BYTE PTR [rax]
   14000ca8e:	add    BYTE PTR [rax],al
   14000ca90:	add    eax,DWORD PTR [rax]
   14000ca92:	add    BYTE PTR [rax],al
   14000ca94:	add    DWORD PTR [rax],eax
   14000ca96:	add    BYTE PTR [rax],al
   14000ca98:	mov    al,0xca
   14000ca9a:	add    BYTE PTR [rax],al
   14000ca9c:	add    BYTE PTR [rax],al
	...
   14000caa7:	add    BYTE PTR [rax-0x68],al
   14000caaa:	add    BYTE PTR [rax],al
   14000caac:	cmp    BYTE PTR [rax],al
   14000caae:	add    BYTE PTR [rax],al
   14000cab0:	add    BYTE PTR [rax],al
	...
   14000cabb:	add    BYTE PTR [rax+0x48000098],dl
	...
   14000cacd:	add    BYTE PTR [rax],al
   14000cacf:	add    BYTE PTR [rax-0xffff93],al
   14000cad5:	(bad)  
   14000cad6:	(bad)  
   14000cad7:	push   rbp
   14000cad9:	ins    DWORD PTR es:[rdi],dx
   14000cada:	add    BYTE PTR [rax],al
   14000cadc:	add    BYTE PTR [rax],al
   14000cade:	add    BYTE PTR [rax],al
   14000cae0:	sub    ch,BYTE PTR [rsi+0x0]
   14000cae3:	add    bh,bh
   14000cae5:	(bad)  
   14000cae6:	(bad)  
   14000cae7:	inc    DWORD PTR [rax-0x68]
   14000caea:	add    BYTE PTR [rax],al
   14000caec:	add    BYTE PTR [rax],al
   14000caee:	add    BYTE PTR [rax],al
   14000caf0:	rex.WRB cdqe 
   14000caf2:	add    BYTE PTR [rax],al
   14000caf4:	add    DWORD PTR [rax],eax
   14000caf6:	add    BYTE PTR [rax],al
   14000caf8:	push   rbp
   14000caf9:	cwde   
   14000cafa:	add    BYTE PTR [rax],al
   14000cafc:	add    al,BYTE PTR [rax]
   14000cafe:	add    BYTE PTR [rax],al
   14000cb00:	(bad)  
   14000cb01:	cwde   
   14000cb02:	add    BYTE PTR [rax],al
   14000cb04:	add    BYTE PTR [rax],al
   14000cb06:	add    BYTE PTR [rax],al
   14000cb08:	sahf   
   14000cb09:	cwde   
   14000cb0a:	add    BYTE PTR [rax],al
   14000cb0c:	add    eax,DWORD PTR [rax]
   14000cb0e:	add    BYTE PTR [rax],al
   14000cb10:	sbb    DWORD PTR [rdx],ecx
   14000cb12:	add    al,BYTE PTR [rax]
   14000cb14:	or     dh,BYTE PTR [rdx]
   14000cb16:	(bad)  
   14000cb17:	push   rax
   14000cb18:	mov    esi,0xb8000089
   14000cb1d:	stos   DWORD PTR es:[rdi],eax
   14000cb1e:	add    BYTE PTR [rax],al
   14000cb20:	sbb    DWORD PTR [rbx],ecx
   14000cb22:	add    eax,DWORD PTR [rax]
   14000cb24:	or     eax,DWORD PTR [rdx+0x7]
   14000cb27:	push   rax
   14000cb28:	(bad)  
   14000cb29:	xor    BYTE PTR [rax],al
   14000cb2b:	add    BYTE PTR [rsi-0x47ffff77],bh
   14000cb31:	stos   DWORD PTR es:[rdi],eax
   14000cb32:	add    BYTE PTR [rax],al
   14000cb34:	add    DWORD PTR [rsi],esi
   14000cb36:	(bad)  
   14000cb37:	add    BYTE PTR [rsi],dh
   14000cb39:	fs (bad) 
   14000cb3b:	add    BYTE PTR [rdx],cl
   14000cb3d:	xor    al,0x9
   14000cb3f:	add    BYTE PTR [rdx],cl
   14000cb41:	xor    al,BYTE PTR [rsi]
   14000cb43:	jo     0x14000cb66
   14000cb45:	add    eax,0xe4050002
   14000cb4a:	or     BYTE PTR [rax],al
   14000cb4c:	push   rax
   14000cb4d:	jno    0x14000cb4f
   14000cb4f:	add    BYTE PTR [rbx+0x34000071],ah
   14000cb55:	retf   
   14000cb56:	add    BYTE PTR [rax],al
   14000cb58:	and    DWORD PTR [rip+0x54050002],eax        # 0x19405cb60
   14000cb5e:	(bad)  
   14000cb5f:	add    BYTE PTR [rbx-0x46ffff8f],ah
   14000cb65:	jno    0x14000cb67
   14000cb67:	add    BYTE PTR [rbx+rcx*8+0x0],al
   14000cb6b:	add    BYTE PTR [rcx],ah
   14000cb6d:	add    BYTE PTR [rax],al
   14000cb6f:	add    BYTE PTR [rbx-0x46ffff8f],ah
   14000cb75:	jno    0x14000cb77
   14000cb77:	add    BYTE PTR [rbx+rcx*8+0x0],al
   14000cb7b:	add    BYTE PTR [rcx],ah
   14000cb7d:	add    BYTE PTR [rax],al
   14000cb7f:	add    BYTE PTR [rax+0x71],dl
   14000cb82:	add    BYTE PTR [rax],al
   14000cb84:	movabs ds:0x10000cb34000071,eax
   14000cb8d:	or     al,BYTE PTR [rax+rax*1]
   14000cb90:	or     dh,BYTE PTR [rdi+rax*1]
   14000cb93:	add    BYTE PTR [rdx],cl
   14000cb95:	xor    al,BYTE PTR [rsi]
   14000cb97:	jo     0x14000cbba
   14000cb99:	add    eax,0x64050002
   14000cb9e:	(bad)  
   14000cb9f:	add    BYTE PTR [rax],dh
   14000cba1:	jne    0x14000cba3
   14000cba3:	add    BYTE PTR [rbx+0x75],cl
   14000cba6:	add    BYTE PTR [rax],al
   14000cba8:	mov    ebx,cs
   14000cbaa:	add    BYTE PTR [rax],al
   14000cbac:	and    DWORD PTR [rax],eax
   14000cbae:	add    BYTE PTR [rax],al
   14000cbb0:	xor    BYTE PTR [rbp+0x0],dh
   14000cbb3:	add    BYTE PTR [rbx+0x75],cl
   14000cbb6:	add    BYTE PTR [rax],al
   14000cbb8:	mov    ebx,cs
   14000cbba:	add    BYTE PTR [rax],al
   14000cbbc:	add    DWORD PTR [rcx+rax*1],eax
   14000cbbf:	add    BYTE PTR [rdx+rax*2],al
   14000cbc2:	add    BYTE PTR [rax],al
   14000cbc4:	add    DWORD PTR [rcx+rax*1],eax
   14000cbc7:	add    BYTE PTR [rdx+rax*2],al
   14000cbca:	add    BYTE PTR [rax],al
   14000cbcc:	add    DWORD PTR [rdx],ecx
   14000cbce:	add    al,0x0
   14000cbd0:	or     dh,BYTE PTR [rsi+rax*1]
   14000cbd3:	add    BYTE PTR [rdx],cl
   14000cbd5:	xor    al,BYTE PTR [rsi]
   14000cbd7:	jo     0x14000cbda
   14000cbd9:	or     al,BYTE PTR [rax+rax*1]
   14000cbdc:	or     dh,BYTE PTR [rsi+rax*1]
   14000cbdf:	add    BYTE PTR [rdx],cl
   14000cbe1:	xor    al,BYTE PTR [rsi]
   14000cbe3:	jo     0x14000cbf6
   14000cbe5:	cs (bad) 
   14000cbe7:	add    BYTE PTR [rsi],ch
   14000cbe9:	xor    al,0x89
   14000cbeb:	add    bl,BYTE PTR [rip+0x8028201]        # 0x148034df2
   14000cbf1:	jo     0x14000cbfa
   14000cbf3:	(bad)  
   14000cbf4:	(bad)  
   14000cbf5:	push   rax
   14000cbf6:	add    BYTE PTR [rax],al
   14000cbf8:	mov    esi,0xe0000089
   14000cbfd:	stos   DWORD PTR es:[rdi],eax
   14000cbfe:	add    BYTE PTR [rax],al
   14000cc00:	(bad)  
   14000cc01:	(bad)  
   14000cc02:	(bad)  
   14000cc03:	jmp    rax
   14000cc05:	cwde   
   14000cc06:	add    BYTE PTR [rax],al
   14000cc08:	add    BYTE PTR [rax],al
   14000cc0a:	add    BYTE PTR [rax],al
   14000cc0c:	or     DWORD PTR [rcx+0x0],ebx
   14000cc12:	add    BYTE PTR [rax],al
   14000cc14:	adc    eax,0xf0000099
   14000cc19:	jge    0x14000cc1b
   14000cc1b:	add    bh,bh
   14000cc1d:	(bad)  
   14000cc1e:	(bad)  
   14000cc1f:	jmp    QWORD PTR [rcx]
   14000cc21:	jle    0x14000cc23
   14000cc23:	add    BYTE PTR [rax],al
   14000cc25:	add    BYTE PTR [rax],al
   14000cc27:	add    BYTE PTR [rdx+0x7e],al
   14000cc2a:	add    BYTE PTR [rax],al
   14000cc2c:	add    DWORD PTR [rax],eax
   14000cc2e:	add    BYTE PTR [rax],al
   14000cc30:	pop    rbp
   14000cc31:	jle    0x14000cc33
   14000cc33:	add    BYTE PTR [rax],al
   14000cc35:	add    BYTE PTR [rax],al
   14000cc37:	add    BYTE PTR [rcx+0x7e],ch
   14000cc3a:	add    BYTE PTR [rax],al
   14000cc3c:	add    al,BYTE PTR [rax]
   14000cc3e:	add    BYTE PTR [rax],al
   14000cc40:	pop    rdx
   14000cc41:	jg     0x14000cc43
   14000cc43:	add    BYTE PTR [rax],al
   14000cc45:	add    BYTE PTR [rax],al
   14000cc47:	add    BYTE PTR [rcx],al
   14000cc49:	(bad)  
   14000cc4a:	add    al,BYTE PTR [rax]
   14000cc4c:	(bad)  
   14000cc4d:	xor    al,BYTE PTR [rdx]
   14000cc4f:	push   rax
   14000cc50:	add    DWORD PTR [rsi],eax
   14000cc52:	add    al,BYTE PTR [rax]
   14000cc54:	(bad)  
   14000cc55:	xor    al,BYTE PTR [rdx]
   14000cc57:	xor    BYTE PTR [rcx],al
   14000cc59:	adc    eax,DWORD PTR [rax+rax*1]
   14000cc5c:	adc    esi,DWORD PTR [rdi+rax*1]
   14000cc5f:	add    BYTE PTR [rbx],dl
   14000cc61:	xor    cl,BYTE PTR [rdi]
   14000cc63:	jo     0x14000cc86
   14000cc65:	add    eax,0x64050002
   14000cc6a:	(bad)  
   14000cc6b:	add    BYTE PTR [rax+0x7a],ah
   14000cc6e:	add    BYTE PTR [rax],al
   14000cc70:	jae    0x14000ccec
   14000cc72:	add    BYTE PTR [rax],al
   14000cc74:	pop    rax
   14000cc75:	int3   
   14000cc76:	add    BYTE PTR [rax],al
   14000cc78:	and    DWORD PTR [rax],eax
   14000cc7a:	add    BYTE PTR [rax],al
   14000cc7c:	(bad)  
   14000cc7d:	jp     0x14000cc7f
   14000cc7f:	add    BYTE PTR [rbx+0x7a],dh
   14000cc82:	add    BYTE PTR [rax],al
   14000cc84:	pop    rax
   14000cc85:	int3   
   14000cc86:	add    BYTE PTR [rax],al
   14000cc88:	add    DWORD PTR [rip+0x34050002],eax        # 0x17405cc90
   14000cc8e:	add    DWORD PTR [rax],eax
   14000cc90:	add    DWORD PTR [rip+0x10d0002],ecx        # 0x1410dcc98
   14000cc96:	jnp    0x14000cc9a
   14000cc98:	add    DWORD PTR [rsi],eax
   14000cc9a:	add    al,BYTE PTR [rax]
   14000cc9c:	(bad)  
   14000cc9d:	jb     0x14000cca1
   14000cc9f:	xor    BYTE PTR [rcx],dl
   14000cca1:	sub    al,0x7
   14000cca3:	add    BYTE PTR [rsp+riz*2],ch
   14000cca6:	jg     0x14000ccaa
   14000cca8:	and    al,0x34
   14000ccaa:	jle    0x14000ccae
   14000ccac:	adc    eax,DWORD PTR [rcx]
   14000ccae:	jp     0x14000ccb2
   14000ccb0:	(bad)  
   14000ccb1:	jo     0x14000ccb3
   14000ccb3:	add    BYTE PTR [rsi+0x8000089],bh
   14000ccb9:	lods   al,BYTE PTR ds:[rsi]
   14000ccba:	add    BYTE PTR [rax],al
   14000ccbc:	(bad)  
   14000ccbd:	(bad)  
   14000ccbe:	(bad)  
   14000ccbf:	push   QWORD PTR [rax]
   14000ccc1:	cdq    
   14000ccc2:	add    BYTE PTR [rax],al
   14000ccc4:	add    BYTE PTR [rax],al
   14000ccc6:	add    BYTE PTR [rax],al
   14000ccc8:	sar    BYTE PTR [rdi+0x0],1
   14000cccb:	add    bh,bh
   14000cccd:	(bad)  
   14000ccce:	(bad)  
   14000cccf:	(bad)  
   14000ccd0:	(bad)  
   14000ccd1:	jg     0x14000ccd3
   14000ccd3:	add    BYTE PTR [rax],al
   14000ccd5:	add    BYTE PTR [rax],al
   14000ccd7:	add    cl,bh
   14000ccd9:	add    BYTE PTR [rax],0x0
   14000ccdc:	(bad)  
   14000ccdd:	(bad)  
   14000ccde:	(bad)  
   14000ccdf:	inc    DWORD PTR [rcx]
   14000cce1:	add    al,0x1
   14000cce3:	add    BYTE PTR [rdx+rax*2],al
   14000cce6:	add    BYTE PTR [rax],al
   14000cce8:	add    DWORD PTR [rsi],eax
   14000ccea:	add    al,BYTE PTR [rax]
   14000ccec:	(bad)  
   14000cced:	xor    al,BYTE PTR [rdx]
   14000ccef:	xor    BYTE PTR [rcx],al
   14000ccf1:	(bad)  
   14000ccf2:	add    al,BYTE PTR [rax]
   14000ccf4:	(bad)  
   14000ccf5:	xor    al,BYTE PTR [rdx]
   14000ccf7:	xor    BYTE PTR [rcx],al
   14000ccf9:	(bad)  
   14000ccfa:	add    al,BYTE PTR [rax]
   14000ccfc:	(bad)  
   14000ccfd:	xor    al,BYTE PTR [rdx]
   14000ccff:	xor    BYTE PTR [rcx],al
   14000cd01:	(bad)  
   14000cd02:	add    al,BYTE PTR [rax]
   14000cd04:	(bad)  
   14000cd05:	xor    al,BYTE PTR [rdx]
   14000cd07:	xor    BYTE PTR [rcx],ah
   14000cd09:	add    eax,0x74050002
   14000cd0e:	(bad)  
   14000cd0f:	add    BYTE PTR [rax-0x4cffff92],ah
   14000cd15:	outs   dx,BYTE PTR ds:[rsi]
   14000cd16:	add    BYTE PTR [rax],al
   14000cd18:	add    ch,cl
   14000cd1a:	add    BYTE PTR [rax],al
   14000cd1c:	and    DWORD PTR [rax],eax
   14000cd1e:	add    BYTE PTR [rax],al
   14000cd20:	movabs al,ds:0x6eb300006e
   14000cd29:	int    0x0
   14000cd2b:	add    BYTE PTR [rcx],al
   14000cd2d:	adc    al,0x8
   14000cd2f:	add    BYTE PTR [rsp+riz*2],dl
   14000cd32:	or     DWORD PTR [rax],eax
   14000cd34:	adc    al,0x54
   14000cd36:	or     BYTE PTR [rax],al
   14000cd38:	adc    al,0x34
   14000cd3a:	(bad)  
   14000cd3b:	add    BYTE PTR [rdx+rsi*1],dl
   14000cd3e:	adc    BYTE PTR [rax+0x21],dh
   14000cd41:	add    eax,0xe4050002
   14000cd46:	(bad)  
   14000cd47:	add    BYTE PTR [rax+0x74],dl
   14000cd4a:	add    BYTE PTR [rax],al
   14000cd4c:	jp     0x14000cdc2
   14000cd4e:	add    BYTE PTR [rax],al
   14000cd50:	sub    al,0xcd
   14000cd52:	add    BYTE PTR [rax],al
   14000cd54:	and    DWORD PTR [rax],eax
   14000cd56:	add    BYTE PTR [rax],al
   14000cd58:	push   rax
   14000cd59:	je     0x14000cd5b
   14000cd5b:	add    BYTE PTR [rdx+0x74],bh
   14000cd5e:	add    BYTE PTR [rax],al
   14000cd60:	sub    al,0xcd
   14000cd62:	add    BYTE PTR [rax],al
   14000cd64:	and    DWORD PTR [rax],eax
   14000cd66:	add    al,BYTE PTR [rax]
   14000cd68:	add    ah,ah
   14000cd6a:	(bad)  
   14000cd6b:	add    BYTE PTR [rax+0x74],dl
   14000cd6e:	add    BYTE PTR [rax],al
   14000cd70:	jp     0x14000cde6
   14000cd72:	add    BYTE PTR [rax],al
   14000cd74:	sub    al,0xcd
   14000cd76:	add    BYTE PTR [rax],al
   14000cd78:	and    DWORD PTR [rax],eax
   14000cd7a:	add    BYTE PTR [rax],al
   14000cd7c:	push   rax
   14000cd7d:	je     0x14000cd7f
   14000cd7f:	add    BYTE PTR [rdx+0x74],bh
   14000cd82:	add    BYTE PTR [rax],al
   14000cd84:	sub    al,0xcd
   14000cd86:	add    BYTE PTR [rax],al
   14000cd88:	add    DWORD PTR [rsi],eax
   14000cd8a:	add    al,BYTE PTR [rax]
   14000cd8c:	(bad)  
   14000cd8d:	xor    al,BYTE PTR [rdx]
   14000cd8f:	xor    BYTE PTR [rcx],al
   14000cd91:	(bad)  
   14000cd92:	add    al,BYTE PTR [rax]
   14000cd94:	(bad)  
   14000cd95:	xor    al,BYTE PTR [rdx]
   14000cd97:	xor    BYTE PTR [rcx],ah
   14000cd99:	add    eax,0x74050002
   14000cd9e:	(bad)  
   14000cd9f:	add    al,al
   14000cda1:	push   0x68d30000
   14000cda6:	add    BYTE PTR [rax],al
   14000cda8:	nop
   14000cda9:	int    0x0
   14000cdab:	add    BYTE PTR [rcx],ah
   14000cdad:	add    BYTE PTR [rax],al
   14000cdaf:	add    al,al
   14000cdb1:	push   0x68d30000
   14000cdb6:	add    BYTE PTR [rax],al
   14000cdb8:	nop
   14000cdb9:	int    0x0
   14000cdbb:	add    BYTE PTR [rcx],dl
   14000cdbd:	or     al,0x1
   14000cdbf:	add    BYTE PTR [rdx+riz*1],al
   14000cdc2:	add    BYTE PTR [rax],al
   14000cdc4:	mov    esi,0x30000089
   14000cdc9:	lods   al,BYTE PTR ds:[rsi]
   14000cdca:	add    BYTE PTR [rax],al
   14000cdcc:	(bad)  
   14000cdcd:	(bad)  
   14000cdce:	(bad)  
   14000cdcf:	call   QWORD PTR [rax-0x69]
   14000cdd2:	add    BYTE PTR [rax],al
   14000cdd4:	add    BYTE PTR [rax],al
   14000cdd6:	add    BYTE PTR [rax],al
   14000cdd8:	mov    al,0x5d
   14000cdda:	add    BYTE PTR [rax],al
   14000cddc:	(bad)  
   14000cddd:	(bad)  
   14000cdde:	(bad)  
   14000cddf:	inc    esp
   14000cde1:	pop    rbp
   14000cde2:	add    BYTE PTR [rax],al
   14000cde4:	add    BYTE PTR [rax],al
   14000cde6:	add    BYTE PTR [rax],al
   14000cde8:	fstp   DWORD PTR [rbp+0x0]
   14000cdeb:	add    bh,bh
   14000cded:	(bad)  
   14000cdee:	(bad)  
   14000cdef:	call   QWORD PTR [rcx]
   14000cdf1:	lar    eax,WORD PTR [rax]
   14000cdf4:	(bad)  
   14000cdf5:	push   rdx
   14000cdf6:	add    dh,BYTE PTR [rax]
   14000cdf8:	mov    esi,0x58000089
   14000cdfd:	lods   al,BYTE PTR ds:[rsi]
   14000cdfe:	add    BYTE PTR [rax],al
   14000ce00:	(bad)  
   14000ce01:	(bad)  
   14000ce02:	(bad)  
   14000ce03:	call   rax
   14000ce05:	cwde   
   14000ce06:	add    BYTE PTR [rax],al
   14000ce08:	nop
   14000ce09:	jge    0x14000ce0b
   14000ce0b:	add    bh,bh
   14000ce0d:	(bad)  
   14000ce0e:	(bad)  
   14000ce0f:	dec    edi
   14000ce11:	jge    0x14000ce13
   14000ce13:	add    BYTE PTR [rax],al
   14000ce15:	add    BYTE PTR [rax],al
   14000ce17:	add    ch,bl
   14000ce19:	jge    0x14000ce1b
   14000ce1b:	add    bh,bh
   14000ce1d:	(bad)  
   14000ce1e:	(bad)  
   14000ce1f:	call   QWORD PTR [rcx]
   14000ce21:	(bad)  
   14000ce22:	or     BYTE PTR [rax],al
   14000ce24:	(bad)  
   14000ce25:	or     al,BYTE PTR fs:[rax]
   14000ce28:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   14000ce2c:	adc    al,0x34
   14000ce2e:	or     BYTE PTR [rax],al
   14000ce30:	(bad)  
   14000ce31:	push   rdx
   14000ce32:	add    dh,BYTE PTR [rax-0x42]
   14000ce35:	mov    DWORD PTR [rax],eax
   14000ce37:	add    BYTE PTR [rax-0xffff54],al
   14000ce3d:	(bad)  
   14000ce3e:	(bad)  
   14000ce3f:	inc    DWORD PTR [rax-0x67]
   14000ce42:	add    BYTE PTR [rax],al
   14000ce44:	add    BYTE PTR [rax],al
   14000ce46:	add    BYTE PTR [rax],al
   14000ce48:	rex add DWORD PTR [rax],0x0
   14000ce4c:	(bad)  
   14000ce4d:	(bad)  
   14000ce4e:	(bad)  
   14000ce4f:	call   FWORD PTR [rax+0x83]
   14000ce55:	add    BYTE PTR [rax],al
   14000ce57:	add    BYTE PTR [rsi-0xffff7d],ah
   14000ce5d:	(bad)  
   14000ce5e:	(bad)  
   14000ce5f:	inc    DWORD PTR [rcx]
   14000ce61:	clts   
   14000ce63:	add    BYTE PTR [rdi],cl
   14000ce65:	or     eax,DWORD PTR fs:[rax]
   14000ce68:	sysenter 
   14000ce6a:	or     al,BYTE PTR [rax]
   14000ce6c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000ce6f:	jo     0x14000ce92
   14000ce71:	add    eax,0x54050002
   14000ce76:	or     BYTE PTR [rax],al
   14000ce78:	adc    BYTE PTR [rbx+0x0],bh
   14000ce7b:	add    BYTE PTR [rcx+0x7b],cl
   14000ce7e:	add    BYTE PTR [rax],al
   14000ce80:	(bad)  
   14000ce81:	(bad)  
   14000ce82:	add    BYTE PTR [rax],al
   14000ce84:	and    DWORD PTR [rax],eax
   14000ce86:	add    BYTE PTR [rax],al
   14000ce88:	adc    BYTE PTR [rbx+0x0],bh
   14000ce8b:	add    BYTE PTR [rcx+0x7b],cl
   14000ce8e:	add    BYTE PTR [rax],al
   14000ce90:	(bad)  
   14000ce91:	(bad)  
   14000ce92:	add    BYTE PTR [rax],al
   14000ce94:	add    DWORD PTR [rsi],eax
   14000ce96:	add    al,BYTE PTR [rax]
   14000ce98:	(bad)  
   14000ce99:	push   rdx
   14000ce9a:	add    dh,BYTE PTR [rax]
   14000ce9c:	add    DWORD PTR [rsi],eax
   14000ce9e:	add    al,BYTE PTR [rax]
   14000cea0:	(bad)  
   14000cea1:	xor    al,BYTE PTR [rdx]
   14000cea3:	xor    BYTE PTR [rcx],al
   14000cea5:	(bad)  
   14000cea6:	add    al,BYTE PTR [rax]
   14000cea8:	(bad)  
   14000cea9:	xor    al,BYTE PTR [rdx]
   14000ceab:	xor    BYTE PTR [rcx],al
   14000cead:	add    al,0x1
   14000ceaf:	add    BYTE PTR [rdx+rax*2],al
   14000ceb2:	add    BYTE PTR [rax],al
   14000ceb4:	add    DWORD PTR [rsi],eax
   14000ceb6:	add    al,BYTE PTR [rax]
   14000ceb8:	(bad)  
   14000ceb9:	jb     0x14000cebd
   14000cebb:	xor    BYTE PTR [rcx],al
   14000cebd:	adc    al,0x4
   14000cebf:	add    BYTE PTR [rdx],cl
   14000cec1:	je     0x14000cec5
   14000cec3:	add    BYTE PTR [rip+0x1000134],al        # 0x14100cffd
   14000cec9:	sbb    cl,BYTE PTR [rdx]
   14000cecb:	add    BYTE PTR [rdx],bl
   14000cecd:	je     0x14000ced8
   14000cecf:	add    BYTE PTR [rdx],bl
   14000ced1:	or     BYTE PTR fs:[rax],al
   14000ced4:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   14000ced8:	sbb    dh,BYTE PTR [rsi+rax*1]
   14000cedb:	add    BYTE PTR [rdx],bl
   14000cedd:	xor    dl,BYTE PTR [rsi]
   14000cedf:	loopne 0x14000cee2
   14000cee1:	clts   
   14000cee3:	add    BYTE PTR [rdi],cl
   14000cee5:	fs (bad) 
   14000cee7:	add    BYTE PTR [rdi],cl
   14000cee9:	xor    al,0x6
   14000ceeb:	add    BYTE PTR [rdi],cl
   14000ceed:	xor    cl,BYTE PTR [rbx]
   14000ceef:	jo     0x14000cef2
   14000cef1:	adc    al,0x8
   14000cef3:	add    BYTE PTR [rsp+riz*2],dl
   14000cef6:	or     BYTE PTR [rax],al
   14000cef8:	adc    al,0x54
   14000cefa:	(bad)  
   14000cefb:	add    BYTE PTR [rsp+rsi*1],dl
   14000cefe:	(bad)  
   14000ceff:	add    BYTE PTR [rdx+rsi*1],dl
   14000cf02:	adc    BYTE PTR [rax+0x19],dh
   14000cf05:	sbb    eax,0x641d0006
   14000cf0a:	or     eax,0xc341800
   14000cf0f:	add    BYTE PTR [rdx],cl
   14000cf11:	jb     0x14000cf19
   14000cf13:	jo     0x14000ced3
   14000cf15:	mov    DWORD PTR [rax],eax
   14000cf17:	add    BYTE PTR [rax-0xffff54],ch
   14000cf1d:	(bad)  
   14000cf1e:	(bad)  
   14000cf1f:	inc    DWORD PTR [rax]
   14000cf21:	add    BYTE PTR [rax],al
   14000cf23:	add    bh,bh
   14000cf25:	(bad)  
   14000cf26:	(bad)  
   14000cf27:	inc    DWORD PTR [rax]
	...
   14000cf31:	add    BYTE PTR [rax],al
   14000cf33:	add    BYTE PTR [rcx],al
   14000cf35:	add    BYTE PTR [rax],al
   14000cf37:	add    BYTE PTR [rcx],al
   14000cf39:	add    BYTE PTR [rax],al
   14000cf3b:	add    BYTE PTR [rax-0x31],al
   14000cf3e:	add    BYTE PTR [rax],al
   14000cf40:	add    BYTE PTR [rax],al
	...
   14000cf4b:	add    BYTE PTR [rax-0x69],ah
   14000cf4e:	add    BYTE PTR [rax],al
   14000cf50:	rex.W add BYTE PTR [rax],al
   14000cf53:	add    BYTE PTR [rax],al
   14000cf55:	add    BYTE PTR [rax],al
   14000cf57:	add    BYTE PTR [rax],al
   14000cf59:	pop    rdi
   14000cf5a:	add    BYTE PTR [rax],al
   14000cf5c:	(bad)  
   14000cf5d:	(bad)  
   14000cf5e:	(bad)  
   14000cf5f:	(bad)  
   14000cf60:	cmp    DWORD PTR [rdi+0x0],ebx
   14000cf63:	add    BYTE PTR [rax],al
   14000cf65:	add    BYTE PTR [rax],al
   14000cf67:	add    BYTE PTR [rcx+0x5f],bl
   14000cf6a:	add    BYTE PTR [rax],al
   14000cf6c:	(bad)  
   14000cf6d:	(bad)  
   14000cf6e:	(bad)  
   14000cf6f:	jmp    QWORD PTR [rax-0x69]
   14000cf72:	add    BYTE PTR [rax],al
   14000cf74:	add    BYTE PTR [rax],al
   14000cf76:	add    BYTE PTR [rax],al
   14000cf78:	ins    DWORD PTR es:[rdi],dx
   14000cf79:	xchg   edi,eax
   14000cf7a:	add    BYTE PTR [rax],al
   14000cf7c:	add    DWORD PTR [rax],eax
   14000cf7e:	add    BYTE PTR [rax],al
   14000cf80:	sbb    DWORD PTR [rdx],ecx
   14000cf82:	add    al,BYTE PTR [rax]
   14000cf84:	or     dl,BYTE PTR [rdx+0x6]
   14000cf87:	push   rax
   14000cf88:	mov    esi,0xa8000089
   14000cf8d:	lods   al,BYTE PTR ds:[rsi]
   14000cf8e:	add    BYTE PTR [rax],al
   14000cf90:	add    DWORD PTR [rsi],eax
   14000cf92:	add    al,BYTE PTR [rax]
   14000cf94:	(bad)  
   14000cf95:	push   rdx
   14000cf96:	add    dh,BYTE PTR [rax]
   14000cf98:	add    DWORD PTR [rsi],eax
   14000cf9a:	add    al,BYTE PTR [rax]
   14000cf9c:	(bad)  
   14000cf9d:	xor    al,BYTE PTR [rdx]
   14000cf9f:	xor    BYTE PTR [rcx],al
   14000cfa1:	(bad)  
   14000cfa2:	add    al,BYTE PTR [rax]
   14000cfa4:	(bad)  
   14000cfa5:	xor    al,BYTE PTR [rdx]
   14000cfa7:	xor    BYTE PTR [rcx],al
   14000cfa9:	or     al,BYTE PTR [rax+rax*1]
   14000cfac:	or     dh,BYTE PTR [rsi+rax*1]
   14000cfaf:	add    BYTE PTR [rdx],cl
   14000cfb1:	xor    al,BYTE PTR [rsi]
   14000cfb3:	jo     0x14000cfb6
   14000cfb5:	add    al,0x1
   14000cfb7:	add    BYTE PTR [rdx+rax*2],al
   14000cfba:	add    BYTE PTR [rax],al
   14000cfbc:	add    DWORD PTR [rsi],eax
   14000cfbe:	add    al,BYTE PTR [rax]
   14000cfc0:	(bad)  
   14000cfc1:	xor    al,BYTE PTR [rdx]
   14000cfc3:	xor    BYTE PTR [rcx],al
   14000cfc5:	add    al,0x1
   14000cfc7:	add    BYTE PTR [rdx+riz*2],al
   14000cfca:	add    BYTE PTR [rax],al
   14000cfcc:	add    DWORD PTR [rcx+rax*1],eax
   14000cfcf:	add    BYTE PTR [rdx+rax*2],al
   14000cfd2:	add    BYTE PTR [rax],al
   14000cfd4:	add    DWORD PTR [rcx+rax*1],eax
   14000cfd7:	add    BYTE PTR [rdx+rax*4],al
   14000cfda:	add    BYTE PTR [rax],al
   14000cfdc:	sbb    DWORD PTR [rax*1+0xf621300],ebx
   14000cfe3:	loopne 0x14000cff2
   14000cfe5:	jo     0x14000cff3
   14000cfe7:	(bad)  
   14000cfe8:	or     esi,DWORD PTR [rax]
   14000cfea:	add    BYTE PTR [rax],al
   14000cfec:	mov    esi,0xd0000089
   14000cff1:	lods   al,BYTE PTR ds:[rsi]
   14000cff2:	add    BYTE PTR [rax],al
   14000cff4:	(bad)  
   14000cff5:	(bad)  
   14000cff6:	(bad)  
   14000cff7:	inc    DWORD PTR [rax]
   14000cff9:	add    BYTE PTR [rax],al
   14000cffb:	add    BYTE PTR [rax],al
   14000cffd:	add    BYTE PTR [rax],al
   14000cfff:	add    BYTE PTR [rax-0xffff69],al
   14000d005:	(bad)  
   14000d006:	(bad)  
   14000d007:	inc    DWORD PTR [rax]
   14000d009:	add    BYTE PTR [rax],al
   14000d00b:	add    BYTE PTR [rax],al
   14000d00d:	add    BYTE PTR [rax],al
   14000d00f:	add    BYTE PTR [rcx],al
   14000d011:	add    BYTE PTR [rax],al
   14000d013:	add    BYTE PTR [rdx],al
   14000d015:	add    BYTE PTR [rax],al
   14000d017:	add    BYTE PTR [rcx],al
   14000d019:	add    BYTE PTR [rax],al
   14000d01b:	add    BYTE PTR [rax],ah
   14000d01d:	rol    BYTE PTR [rax],1
   14000d01f:	add    BYTE PTR [rax+0x0],al
	...
   14000d02a:	add    BYTE PTR [rax],al
   14000d02c:	pushf  
   14000d02d:	xchg   edi,eax
   14000d02e:	add    BYTE PTR [rax],al
   14000d030:	pop    rax
   14000d031:	add    BYTE PTR [rax],al
   14000d033:	add    BYTE PTR [rax],al
   14000d035:	add    BYTE PTR [rax],al
   14000d037:	add    al,ah
   14000d039:	(bad)  
   14000d03a:	add    BYTE PTR [rax],al
   14000d03c:	(bad)  
   14000d03d:	(bad)  
   14000d03e:	(bad)  
   14000d03f:	dec    DWORD PTR [rdx]
   14000d041:	(bad)  
   14000d042:	add    BYTE PTR [rax],al
   14000d044:	add    BYTE PTR [rax],al
   14000d046:	add    BYTE PTR [rax],al
   14000d048:	sbb    ah,BYTE PTR [rdx+0x0]
   14000d04b:	add    BYTE PTR [rcx],al
   14000d04d:	add    BYTE PTR [rax],al
   14000d04f:	add    BYTE PTR [rbx+0x62],dl
   14000d052:	add    BYTE PTR [rax],al
   14000d054:	add    BYTE PTR [rax],al
   14000d056:	add    BYTE PTR [rax],al
   14000d058:	(bad)  
   14000d05a:	add    BYTE PTR [rax],al
   14000d05c:	(bad)  
   14000d05d:	(bad)  
   14000d05e:	(bad)  
   14000d05f:	call   FWORD PTR [rdi+rdx*4+0x0]
   14000d066:	add    BYTE PTR [rax],al
   14000d068:	lods   al,BYTE PTR ds:[rsi]
   14000d069:	xchg   edi,eax
   14000d06a:	add    BYTE PTR [rax],al
   14000d06c:	add    al,BYTE PTR [rax]
   14000d06e:	add    BYTE PTR [rax],al
   14000d070:	add    DWORD PTR [rsi],eax
   14000d072:	add    al,BYTE PTR [rax]
   14000d074:	(bad)  
   14000d075:	xor    al,BYTE PTR [rdx]
   14000d077:	push   rax
   14000d078:	sbb    DWORD PTR [rip+0x420d0005],ecx        # 0x1820dd083
   14000d07e:	or     DWORD PTR [rax+0x8],esi
   14000d081:	(bad)  
   14000d082:	(bad)  
   14000d083:	push   rax
   14000d084:	(bad)  
   14000d085:	xor    BYTE PTR [rax],al
   14000d087:	add    BYTE PTR [rsi-0x2fffff77],bh
   14000d08d:	lods   al,BYTE PTR ds:[rsi]
   14000d08e:	add    BYTE PTR [rax],al
   14000d090:	adc    DWORD PTR [rdx],edx
   14000d092:	add    DWORD PTR [rax],eax
   14000d094:	or     DWORD PTR [rdx+0x0],esp
   14000d097:	add    BYTE PTR [rsi-0x7ffff77],bh
   14000d09d:	lods   al,BYTE PTR ds:[rsi]
   14000d09e:	add    BYTE PTR [rax],al
   14000d0a0:	(bad)  
   14000d0a1:	(bad)  
   14000d0a2:	(bad)  
   14000d0a3:	jmp    rax
   14000d0a5:	xchg   edi,eax
   14000d0a6:	add    BYTE PTR [rax],al
   14000d0a8:	loopne 0x14000d10c
   14000d0aa:	add    BYTE PTR [rax],al
   14000d0ac:	(bad)  
   14000d0ad:	(bad)  
   14000d0ae:	(bad)  
   14000d0af:	(bad)  
   14000d0b0:	cli    
   14000d0b1:	(bad)  
   14000d0b2:	add    BYTE PTR [rax],al
   14000d0b4:	add    BYTE PTR [rax],al
   14000d0b6:	add    BYTE PTR [rax],al
   14000d0b8:	xor    esp,DWORD PTR [rbx+0x0]
   14000d0bb:	add    bh,bh
   14000d0bd:	(bad)  
   14000d0be:	(bad)  
   14000d0bf:	inc    DWORD PTR [rcx]
   14000d0c1:	(bad)  
   14000d0c2:	add    al,BYTE PTR [rax]
   14000d0c4:	(bad)  
   14000d0c5:	xor    al,BYTE PTR [rdx]
   14000d0c7:	push   rax
   14000d0c8:	adc    DWORD PTR [rdx],edx
   14000d0ca:	add    DWORD PTR [rax],eax
   14000d0cc:	or     DWORD PTR [rdx+0x0],esp
   14000d0cf:	add    BYTE PTR [rsi+0x20000089],bh
   14000d0d5:	lods   eax,DWORD PTR ds:[rsi]
   14000d0d6:	add    BYTE PTR [rax],al
   14000d0d8:	(bad)  
   14000d0d9:	(bad)  
   14000d0da:	(bad)  
   14000d0db:	jmp    QWORD PTR [rax]
   14000d0dd:	cwde   
   14000d0de:	add    BYTE PTR [rax],al
   14000d0e0:	movabs al,ds:0xbaffffffff000063
   14000d0e9:	movsxd eax,DWORD PTR [rax]
   14000d0eb:	add    BYTE PTR [rax],al
   14000d0ed:	add    BYTE PTR [rax],al
   14000d0ef:	add    bl,dh
   14000d0f1:	movsxd eax,DWORD PTR [rax]
   14000d0f3:	add    bh,bh
   14000d0f5:	(bad)  
   14000d0f6:	(bad)  
   14000d0f7:	inc    DWORD PTR [rcx]
   14000d0f9:	(bad)  
   14000d0fa:	add    al,BYTE PTR [rax]
   14000d0fc:	(bad)  
   14000d0fd:	xor    al,BYTE PTR [rdx]
   14000d0ff:	push   rax
   14000d100:	adc    DWORD PTR [rdx],edx
   14000d102:	add    DWORD PTR [rax],eax
   14000d104:	or     DWORD PTR [rdx+0x0],esp
   14000d107:	add    BYTE PTR [rsi+0x48000089],bh
   14000d10d:	lods   eax,DWORD PTR ds:[rsi]
   14000d10e:	add    BYTE PTR [rax],al
   14000d110:	(bad)  
   14000d111:	(bad)  
   14000d112:	(bad)  
   14000d113:	inc    DWORD PTR [rax]
   14000d115:	cwde   
   14000d116:	add    BYTE PTR [rax],al
   14000d118:	rex movsxd eax,DWORD PTR [rax]
   14000d11b:	add    bh,bh
   14000d11d:	(bad)  
   14000d11e:	(bad)  
   14000d11f:	call   FWORD PTR [rdx+0x63]
   14000d122:	add    BYTE PTR [rax],al
   14000d124:	add    BYTE PTR [rax],al
   14000d126:	add    BYTE PTR [rax],al
   14000d128:	xchg   ebx,eax
   14000d129:	movsxd eax,DWORD PTR [rax]
   14000d12b:	add    bh,bh
   14000d12d:	(bad)  
   14000d12e:	(bad)  
   14000d12f:	inc    DWORD PTR [rcx]
   14000d131:	(bad)  
   14000d132:	add    al,BYTE PTR [rax]
   14000d134:	(bad)  
   14000d135:	xor    al,BYTE PTR [rdx]
   14000d137:	push   rax
   14000d138:	add    DWORD PTR [rsi],eax
   14000d13a:	add    al,BYTE PTR [rax]
   14000d13c:	(bad)  
   14000d13d:	xor    al,BYTE PTR [rdx]
   14000d13f:	xor    BYTE PTR [rcx],al
   14000d141:	add    al,0x1
   14000d143:	add    BYTE PTR [rdx+rax*8],al
   14000d146:	add    BYTE PTR [rax],al
   14000d148:	and    DWORD PTR [rip+0x34050002],eax        # 0x17405d150
   14000d14e:	or     al,0x0
   14000d150:	mov    al,0x85
   14000d152:	add    BYTE PTR [rax],al
   14000d154:	fadd   DWORD PTR [rbp-0x2ec00000]
   14000d15a:	add    BYTE PTR [rax],al
   14000d15c:	and    DWORD PTR [rax],eax
   14000d15e:	add    BYTE PTR [rax],al
   14000d160:	mov    al,0x85
   14000d162:	add    BYTE PTR [rax],al
   14000d164:	fadd   DWORD PTR [rbp-0x2ec00000]
   14000d16a:	add    BYTE PTR [rax],al
   14000d16c:	add    DWORD PTR [rsi],eax
   14000d16e:	add    al,BYTE PTR [rax]
   14000d170:	(bad)  
   14000d171:	xor    al,BYTE PTR [rdx]
   14000d173:	xor    BYTE PTR [rcx],al
   14000d175:	add    al,0x1
   14000d177:	add    BYTE PTR [rdx+rax*2],al
   14000d17a:	add    BYTE PTR [rax],al
   14000d17c:	add    DWORD PTR [rdx],ecx
   14000d17e:	add    al,0x0
   14000d180:	or     dh,BYTE PTR [rsi+rax*1]
   14000d183:	add    BYTE PTR [rdx],cl
   14000d185:	xor    al,BYTE PTR [rsi]
   14000d187:	jo     0x14000d18a
   14000d189:	(bad)  
   14000d18a:	add    al,BYTE PTR [rax]
   14000d18c:	(bad)  
   14000d18d:	xor    al,BYTE PTR [rdx]
   14000d18f:	xor    BYTE PTR [rcx],al
   14000d191:	(bad)  
   14000d192:	add    al,BYTE PTR [rax]
   14000d194:	(bad)  
   14000d195:	xor    al,BYTE PTR [rdx]
   14000d197:	xor    BYTE PTR [rcx],al
   14000d199:	add    al,0x1
   14000d19b:	add    BYTE PTR [rdx+rax*2],al
   14000d19e:	add    BYTE PTR [rax],al
   14000d1a0:	adc    DWORD PTR [rsi],eax
   14000d1a2:	add    al,BYTE PTR [rax]
   14000d1a4:	(bad)  
   14000d1a5:	xor    al,BYTE PTR [rdx]
   14000d1a7:	xor    dl,ah
   14000d1a9:	mov    es,WORD PTR [rax]
   14000d1ab:	add    BYTE PTR [rcx],al
   14000d1ad:	add    BYTE PTR [rax],al
   14000d1af:	add    BYTE PTR [rdi],cl
   14000d1b1:	mov    DWORD PTR [rax],eax
   14000d1b3:	add    BYTE PTR [rbp-0x77],dh
   14000d1b6:	add    BYTE PTR [rax],al
   14000d1b8:	ins    BYTE PTR es:[rdi],dx
   14000d1b9:	fwait
   14000d1ba:	add    BYTE PTR [rax],al
   14000d1bc:	add    BYTE PTR [rax],al
   14000d1be:	add    BYTE PTR [rax],al
   14000d1c0:	add    DWORD PTR [rsi],eax
   14000d1c2:	add    al,BYTE PTR [rax]
   14000d1c4:	(bad)  
   14000d1c5:	xor    al,BYTE PTR [rdx]
   14000d1c7:	push   rax
   14000d1c8:	add    DWORD PTR [rsi],eax
   14000d1ca:	add    al,BYTE PTR [rax]
   14000d1cc:	(bad)  
   14000d1cd:	xor    al,BYTE PTR [rdx]
   14000d1cf:	xor    BYTE PTR [rcx],al
   14000d1d1:	clts   
   14000d1d3:	add    BYTE PTR [rdi],cl
   14000d1d5:	fs (bad) 
   14000d1d7:	add    BYTE PTR [rdi],cl
   14000d1d9:	xor    al,0x6
   14000d1db:	add    BYTE PTR [rdi],cl
   14000d1dd:	xor    cl,BYTE PTR [rbx]
   14000d1df:	jo     0x14000d1e2
   14000d1e1:	add    al,0x1
   14000d1e3:	add    BYTE PTR [rdx+rdx*1],al
   14000d1e6:	add    BYTE PTR [rax],al
   14000d1e8:	add    DWORD PTR [rcx+rax*1],eax
   14000d1eb:	add    BYTE PTR [rdx+rax*2],al
   14000d1ee:	add    BYTE PTR [rax],al
   14000d1f0:	add    DWORD PTR [rcx+rax*1],eax
   14000d1f3:	add    BYTE PTR [rdx+riz*2],al
   14000d1f6:	add    BYTE PTR [rax],al
   14000d1f8:	or     DWORD PTR [rax],edx
   14000d1fa:	(bad)  
   14000d1fb:	add    BYTE PTR [rax],dl
   14000d1fd:	or     DWORD PTR fs:[rax],eax
   14000d200:	adc    BYTE PTR [rax+rcx*1],dh
   14000d203:	add    BYTE PTR [rax],dl
   14000d205:	push   rdx
   14000d206:	or     al,0x70
   14000d208:	loop   0x14000d198
   14000d20a:	add    BYTE PTR [rax],al
   14000d20c:	add    DWORD PTR [rax],eax
   14000d20e:	add    BYTE PTR [rax],al
   14000d210:	mov    edx,0x4300008c
   14000d215:	mov    es,WORD PTR [rax]
   14000d217:	add    BYTE PTR [rdi+0x4300009b],al
   14000d21d:	mov    es,WORD PTR [rax]
   14000d21f:	add    BYTE PTR [rcx],al
   14000d221:	(bad)  
   14000d222:	add    al,BYTE PTR [rax]
   14000d224:	(bad)  
   14000d225:	xor    al,BYTE PTR [rdx]
   14000d227:	push   rax
   14000d228:	add    DWORD PTR [rcx+rax*1],eax
   14000d22b:	add    BYTE PTR [rdx+rax*2],al
   14000d22e:	add    BYTE PTR [rax],al
   14000d230:	adc    DWORD PTR [rax],ebx
   14000d232:	add    eax,0x14621800
   14000d237:	loopne 0x14000d24b
   14000d239:	jo     0x14000d24c
   14000d23b:	(bad)  
   14000d23c:	adc    BYTE PTR [rax],dh
   14000d23e:	add    BYTE PTR [rax],al
   14000d240:	loop   0x14000d1d0
   14000d242:	add    BYTE PTR [rax],al
   14000d244:	add    DWORD PTR [rax],eax
   14000d246:	add    BYTE PTR [rax],al
   14000d248:	sbb    ecx,DWORD PTR [rdi-0x70c50000]
   14000d24e:	add    BYTE PTR [rax],al
   14000d250:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d251:	fwait
   14000d252:	add    BYTE PTR [rax],al
   14000d254:	add    BYTE PTR [rax],al
   14000d256:	add    BYTE PTR [rax],al
   14000d258:	add    DWORD PTR [rsi],eax
   14000d25a:	add    al,BYTE PTR [rax]
   14000d25c:	(bad)  
   14000d25d:	xor    al,BYTE PTR [rdx]
   14000d25f:	push   rax
   14000d260:	or     DWORD PTR [rdi],edx
   14000d262:	(bad)  
   14000d263:	add    BYTE PTR [rdi],dl
   14000d265:	xor    al,0xd
   14000d267:	add    BYTE PTR [rdi],dl
   14000d269:	jb     0x14000d27e
   14000d26b:	loopne 0x14000d27e
   14000d26d:	jo     0x14000d27f
   14000d26f:	(bad)  
   14000d270:	loop   0x14000d200
   14000d272:	add    BYTE PTR [rax],al
   14000d274:	add    DWORD PTR [rax],eax
   14000d276:	add    BYTE PTR [rax],al
   14000d278:	xchg   DWORD PTR [rdi-0x70600000],ecx
   14000d27e:	add    BYTE PTR [rax],al
   14000d280:	rcr    DWORD PTR [rbx-0x70600000],1
   14000d286:	add    BYTE PTR [rax],al
   14000d288:	add    DWORD PTR [rsi],eax
   14000d28a:	add    al,BYTE PTR [rax]
   14000d28c:	(bad)  
   14000d28d:	xor    al,BYTE PTR [rdx]
   14000d28f:	push   rax
   14000d290:	add    DWORD PTR [rcx+rax*1],eax
   14000d293:	add    BYTE PTR [rdx+rax*2],al
   14000d296:	add    BYTE PTR [rax],al
   14000d298:	add    DWORD PTR [rcx+rax*1],eax
   14000d29b:	add    BYTE PTR [rdx+rax*2],al
   14000d29e:	add    BYTE PTR [rax],al
   14000d2a0:	add    DWORD PTR [rcx+rax*1],eax
   14000d2a3:	add    BYTE PTR [rdx+rax*2],al
   14000d2a6:	add    BYTE PTR [rax],al
   14000d2a8:	or     DWORD PTR [rdx],ecx
   14000d2aa:	add    al,0x0
   14000d2ac:	or     dh,BYTE PTR [rsi+rax*1]
   14000d2af:	add    BYTE PTR [rdx],cl
   14000d2b1:	xor    al,BYTE PTR [rsi]
   14000d2b3:	jo     0x14000d297
   14000d2b5:	mov    es,WORD PTR [rax]
   14000d2b7:	add    BYTE PTR [rcx],al
   14000d2b9:	add    BYTE PTR [rax],al
   14000d2bb:	add    BYTE PTR [rbp-0x3fffff70],cl
   14000d2c1:	nop
   14000d2c2:	add    BYTE PTR [rax],al
   14000d2c4:	and    BYTE PTR [rax+rax*1+0x90c000],bl
   14000d2cb:	add    BYTE PTR [rcx],al
   14000d2cd:	(bad)  
   14000d2ce:	add    al,BYTE PTR [rax]
   14000d2d0:	(bad)  
   14000d2d1:	xor    al,BYTE PTR [rdx]
   14000d2d3:	push   rax
   14000d2d4:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740dd2de
   14000d2da:	or     DWORD PTR [rax],eax
   14000d2dc:	or     eax,0x1500632
   14000d2e1:	or     al,BYTE PTR [rax+rax*1]
   14000d2e4:	or     dh,BYTE PTR [rsi+rax*1]
   14000d2e7:	add    BYTE PTR [rdx],cl
   14000d2e9:	xor    al,BYTE PTR [rsi]
   14000d2eb:	jo     0x14000d2ee
   14000d2ed:	or     al,BYTE PTR [rax+rax*1]
   14000d2f0:	or     dh,BYTE PTR [rsi+rax*1]
   14000d2f3:	add    BYTE PTR [rdx],cl
   14000d2f5:	xor    al,BYTE PTR [rsi]
   14000d2f7:	jo     0x14000d2f9
   14000d2f9:	add    BYTE PTR [rax],al
   14000d2fb:	add    BYTE PTR [rax-0x10],ah
   14000d2fe:	add    BYTE PTR [rax],al
   14000d300:	add    BYTE PTR [rax],al
   14000d302:	add    BYTE PTR [rax],al
   14000d304:	(bad)  
   14000d305:	(bad)  
   14000d306:	(bad)  
   14000d307:	inc    DWORD PTR [rax]
   14000d309:	add    BYTE PTR [rax],al
   14000d30b:	add    BYTE PTR [rax],bl
   14000d30d:	add    BYTE PTR [rax],al
   14000d30f:	add    BYTE PTR [rcx+rcx*4+0x0],ch
	...
   14000d322:	add    BYTE PTR [rax],al
   14000d324:	push   rax
   14000d325:	xor    al,0x0
   14000d327:	add    BYTE PTR [rax],al
   14000d329:	add    BYTE PTR [rax],al
   14000d32b:	add    BYTE PTR [rax-0x2d],al
	...
   14000d33e:	add    BYTE PTR [rax],al
   14000d340:	add    al,BYTE PTR [rax]
   14000d342:	add    BYTE PTR [rax],al
   14000d344:	pop    rax
   14000d345:	rol    DWORD PTR [rax],cl
   14000d347:	add    al,bh
   14000d349:	rol    BYTE PTR [rax],cl
	...
   14000d35b:	add    BYTE PTR [rax+0xf0],cl
   14000d361:	add    BYTE PTR [rax],al
   14000d363:	add    bh,bh
   14000d365:	(bad)  
   14000d366:	(bad)  
   14000d367:	inc    DWORD PTR [rax]
   14000d369:	add    BYTE PTR [rax],al
   14000d36b:	add    BYTE PTR [rax+0x0],al
   14000d36e:	add    BYTE PTR [rax],al
   14000d370:	add    BYTE PTR [rax+rax*1],bl
	...
   14000d383:	add    BYTE PTR [rdx+rcx*4+0x0],bh
   14000d38a:	add    BYTE PTR [rax],al
   14000d38c:	movabs al,ds:0xd3
	...
   14000d39d:	add    BYTE PTR [rax],al
   14000d39f:	add    BYTE PTR [rdx],al
   14000d3a1:	add    BYTE PTR [rax],al
   14000d3a3:	add    BYTE PTR [rax-0x7ffff2d],bh
   14000d3a9:	rol    BYTE PTR [rax],cl
	...
   14000d3bb:	add    BYTE PTR [rax+0xf1],cl
   14000d3c1:	add    BYTE PTR [rax],al
   14000d3c3:	add    bh,bh
   14000d3c5:	(bad)  
   14000d3c6:	(bad)  
   14000d3c7:	inc    DWORD PTR [rax]
   14000d3c9:	add    BYTE PTR [rax],al
   14000d3cb:	add    BYTE PTR [rax],bl
   14000d3cd:	add    BYTE PTR [rax],al
   14000d3cf:	add    BYTE PTR [rsi+0x8a],dh
	...
   14000d3ed:	(bad)  
	...
   14000d3fe:	add    BYTE PTR [rax],al
   14000d400:	add    DWORD PTR [rax],eax
   14000d402:	add    BYTE PTR [rax],al
   14000d404:	adc    ah,dl
	...
   14000d412:	add    BYTE PTR [rax],al
   14000d414:	and    ah,dh
   14000d416:	add    BYTE PTR [rax],al
   14000d418:	add    BYTE PTR [rax],al
   14000d41a:	add    BYTE PTR [rax],al
   14000d41c:	(bad)  
   14000d41d:	(bad)  
   14000d41e:	(bad)  
   14000d41f:	inc    DWORD PTR [rax]
   14000d421:	add    BYTE PTR [rax],al
   14000d423:	add    BYTE PTR [rcx],al
	...
   14000d441:	add    BYTE PTR [rax],al
   14000d443:	add    bh,dl
   14000d445:	adc    al,BYTE PTR [rcx+0x58]
   14000d44b:	add    BYTE PTR [rsi+0x10000d4],al
   14000d451:	add    BYTE PTR [rax],al
   14000d453:	add    BYTE PTR [rbx],al
   14000d455:	add    BYTE PTR [rax],al
   14000d457:	add    BYTE PTR [rbx],al
   14000d459:	add    BYTE PTR [rax],al
   14000d45b:	add    BYTE PTR [rax-0x2c],ch
   14000d45e:	add    BYTE PTR [rax],al
   14000d460:	je     0x14000d436
   14000d462:	add    BYTE PTR [rax],al
   14000d464:	adc    ah,0x0
   14000d467:	add    BYTE PTR [rax],ah
   14000d469:	lock add BYTE PTR [rax],al
   14000d46c:	sub    al,dh
   14000d46e:	add    BYTE PTR [rax],al
   14000d470:	sbb    al,dh
   14000d472:	add    BYTE PTR [rax],al
   14000d474:	cdq    
   14000d475:	(bad)  
   14000d476:	add    BYTE PTR [rax],al
   14000d478:	mov    bl,0xd4
   14000d47a:	add    BYTE PTR [rax],al
   14000d47c:	rcl    ah,1
   14000d47e:	add    BYTE PTR [rax],al
   14000d480:	add    BYTE PTR [rax],al
   14000d482:	add    DWORD PTR [rax],eax
   14000d484:	add    al,BYTE PTR [rax]
   14000d486:	jae    0x14000d4ed
   14000d488:	jae    0x14000d4fd
   14000d48a:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c65685f
   14000d491:	jo     0x14000d4f8
   14000d493:	jb     0x14000d4c3
   14000d495:	gs js  0x14000d4fd
   14000d498:	add    BYTE PTR [rbx+0x65],dh
   14000d49b:	jae    0x14000d510
   14000d49d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c65685f
   14000d4a4:	jo     0x14000d50b
   14000d4a6:	jb     0x14000d507
   14000d4a8:	(bad)  
   14000d4a9:	jne    0x14000d514
   14000d4ab:	ins    BYTE PTR es:[rdi],dx
   14000d4ac:	fs pop rdi
   14000d4ae:	fs (bad) 
   14000d4b0:	je     0x14000d517
   14000d4b2:	add    BYTE PTR [rbx+0x65],dh
   14000d4b5:	jae    0x14000d52a
   14000d4b7:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c65685f
   14000d4be:	jo     0x14000d525
   14000d4c0:	jb     0x14000d521
   14000d4c2:	jb     0x14000d529
   14000d4c4:	ins    BYTE PTR es:[rdi],dx
   14000d4c5:	(bad)  
   14000d4c6:	je     0x14000d531
   14000d4c8:	jbe    0x14000d52f
   14000d4ca:	pop    rdi
   14000d4cb:	jo     0x14000d52e
   14000d4cd:	je     0x14000d537
   14000d4cf:	add    BYTE PTR [rbx+0x65],dh
   14000d4d2:	jae    0x14000d547
   14000d4d4:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c65685f
   14000d4db:	jo     0x14000d542
   14000d4dd:	jb     0x14000d53e
   14000d4df:	jbe    0x14000d546
   14000d4e1:	jb     0x14000d556
   14000d4e3:	imul   ebp,DWORD PTR [rdi+0x6e],0xd8e80000
	...
   14000d4f2:	add    BYTE PTR [rax],al
   14000d4f4:	adc    bl,dl
   14000d4f6:	add    BYTE PTR [rax],al
   14000d4f8:	mov    BYTE PTR [rbx-0x2aa00000],ah
	...
   14000d506:	add    BYTE PTR [rax],al
   14000d508:	xor    al,0xda
   14000d50a:	add    BYTE PTR [rax],al
   14000d50c:	add    BYTE PTR [rax-0x2a900000],ah
	...
   14000d51a:	add    BYTE PTR [rax],al
   14000d51c:	je     0x14000d4f8
   14000d51e:	add    BYTE PTR [rax],al
   14000d520:	adc    BYTE PTR [rax-0x2a400000],ah
	...
   14000d52e:	add    BYTE PTR [rax],al
   14000d530:	ss loop 0x14000d533
   14000d533:	add    BYTE PTR [rax-0x60],ah
   14000d536:	add    BYTE PTR [rax],al
   14000d538:	clc    
   14000d539:	(bad)  
	...
   14000d542:	add    BYTE PTR [rax],al
   14000d544:	push   0xffffffff980000e4
   14000d549:	movabs eax,ds:0x0
	...
   14000d55e:	add    BYTE PTR [rax],al
   14000d560:	and    al,0xda
	...
   14000d56e:	add    BYTE PTR [rax],al
   14000d570:	xor    dh,ah
   14000d572:	add    BYTE PTR [rax],al
   14000d574:	add    BYTE PTR [rax],al
   14000d576:	add    BYTE PTR [rax],al
   14000d578:	rex.WX out 0x0,al
   14000d57b:	add    BYTE PTR [rax],al
   14000d57d:	add    BYTE PTR [rax],al
   14000d57f:	add    BYTE PTR [rax-0x1a],ah
   14000d582:	add    BYTE PTR [rax],al
   14000d584:	add    BYTE PTR [rax],al
   14000d586:	add    BYTE PTR [rax],al
   14000d588:	jbe    0x14000d570
   14000d58a:	add    BYTE PTR [rax],al
   14000d58c:	add    BYTE PTR [rax],al
   14000d58e:	add    BYTE PTR [rax],al
   14000d590:	rex.X fiadd DWORD PTR [rax]
   14000d593:	add    BYTE PTR [rax],al
   14000d595:	add    BYTE PTR [rax],al
   14000d597:	add    BYTE PTR [rax-0x26],dl
   14000d59a:	add    BYTE PTR [rax],al
   14000d59c:	add    BYTE PTR [rax],al
   14000d59e:	add    BYTE PTR [rax],al
   14000d5a0:	data16 fiadd DWORD PTR [rax]
   14000d5a3:	add    BYTE PTR [rax],al
   14000d5a5:	add    BYTE PTR [rax],al
   14000d5a7:	add    BYTE PTR [rax],dl
   14000d5a9:	out    0x0,al
   14000d5ab:	add    BYTE PTR [rax],al
   14000d5ad:	add    BYTE PTR [rax],al
   14000d5af:	add    BYTE PTR [rax],ah
   14000d5b1:	out    0x0,al
	...
   14000d5bf:	add    BYTE PTR [rsi+0xda],bh
   14000d5c5:	add    BYTE PTR [rax],al
   14000d5c7:	add    al,ah
   14000d5c9:	fiadd  DWORD PTR [rax]
   14000d5cb:	add    BYTE PTR [rax],al
   14000d5cd:	add    BYTE PTR [rax],al
   14000d5cf:	add    BYTE PTR [rax],al
   14000d5d1:	fild   DWORD PTR [rax]
   14000d5d3:	add    BYTE PTR [rax],al
   14000d5d5:	add    BYTE PTR [rax],al
   14000d5d7:	add    BYTE PTR [rax],ah
   14000d5d9:	fild   DWORD PTR [rax]
   14000d5db:	add    BYTE PTR [rax],al
   14000d5dd:	add    BYTE PTR [rax],al
   14000d5df:	add    BYTE PTR [rbx+rbx*8],bh
   14000d5e2:	add    BYTE PTR [rax],al
   14000d5e4:	add    BYTE PTR [rax],al
   14000d5e6:	add    BYTE PTR [rax],al
   14000d5e8:	push   rsi
   14000d5e9:	fild   DWORD PTR [rax]
   14000d5eb:	add    BYTE PTR [rax],al
   14000d5ed:	add    BYTE PTR [rax],al
   14000d5ef:	add    BYTE PTR [rax-0x25],bh
   14000d5f2:	add    BYTE PTR [rax],al
   14000d5f4:	add    BYTE PTR [rax],al
   14000d5f6:	add    BYTE PTR [rax],al
   14000d5f8:	xchg   esi,eax
   14000d5f9:	fild   DWORD PTR [rax]
   14000d5fb:	add    BYTE PTR [rax],al
   14000d5fd:	add    BYTE PTR [rax],al
   14000d5ff:	add    dl,cl
   14000d601:	fild   DWORD PTR [rax]
   14000d603:	add    BYTE PTR [rax],al
   14000d605:	add    BYTE PTR [rax],al
   14000d607:	add    dh,dh
   14000d609:	fild   DWORD PTR [rax]
   14000d60b:	add    BYTE PTR [rax],al
   14000d60d:	add    BYTE PTR [rax],al
   14000d60f:	add    BYTE PTR [rsp+rbx*8],dh
   14000d612:	add    BYTE PTR [rax],al
   14000d614:	add    BYTE PTR [rax],al
   14000d616:	add    BYTE PTR [rax],al
   14000d618:	jb     0x14000d5f6
   14000d61a:	add    BYTE PTR [rax],al
   14000d61c:	add    BYTE PTR [rax],al
   14000d61e:	add    BYTE PTR [rax],al
   14000d620:	test   al,0xdc
   14000d622:	add    BYTE PTR [rax],al
   14000d624:	add    BYTE PTR [rax],al
   14000d626:	add    BYTE PTR [rax],al
   14000d628:	(bad)  
   14000d629:	fadd   QWORD PTR [rax]
   14000d62b:	add    BYTE PTR [rax],al
   14000d62d:	add    BYTE PTR [rax],al
   14000d62f:	add    BYTE PTR [rax],bl
   14000d631:	fld    QWORD PTR [rax]
   14000d633:	add    BYTE PTR [rax],al
   14000d635:	add    BYTE PTR [rax],al
   14000d637:	add    BYTE PTR [rbp+rbx*8+0x0],dl
   14000d63b:	add    BYTE PTR [rax],al
   14000d63d:	add    BYTE PTR [rax],al
   14000d63f:	add    BYTE PTR [rax+0xdd],dl
   14000d645:	add    BYTE PTR [rax],al
   14000d647:	add    ah,bl
   14000d649:	fld    QWORD PTR [rax]
   14000d64b:	add    BYTE PTR [rax],al
   14000d64d:	add    BYTE PTR [rax],al
   14000d64f:	add    BYTE PTR [rsi],bl
   14000d651:	fiadd  WORD PTR [rax]
   14000d653:	add    BYTE PTR [rax],al
   14000d655:	add    BYTE PTR [rax],al
   14000d657:	add    BYTE PTR [rsi-0x22],ah
   14000d65a:	add    BYTE PTR [rax],al
   14000d65c:	add    BYTE PTR [rax],al
   14000d65e:	add    BYTE PTR [rax],al
   14000d660:	lods   al,BYTE PTR ds:[rsi]
   14000d661:	fiadd  WORD PTR [rax]
   14000d663:	add    BYTE PTR [rax],al
   14000d665:	add    BYTE PTR [rax],al
   14000d667:	add    ah,ch
   14000d669:	fiadd  WORD PTR [rax]
   14000d66b:	add    BYTE PTR [rax],al
   14000d66d:	add    BYTE PTR [rax],al
   14000d66f:	add    BYTE PTR [rdx],ah
   14000d671:	fild   WORD PTR [rax]
   14000d673:	add    BYTE PTR [rax],al
   14000d675:	add    BYTE PTR [rax],al
   14000d677:	add    BYTE PTR [rdx-0x21],ah
   14000d67a:	add    BYTE PTR [rax],al
   14000d67c:	add    BYTE PTR [rax],al
   14000d67e:	add    BYTE PTR [rax],al
   14000d680:	movabs al,ds:0xe4000000000000df
   14000d689:	fild   WORD PTR [rax]
   14000d68b:	add    BYTE PTR [rax],al
   14000d68d:	add    BYTE PTR [rax],al
   14000d68f:	add    BYTE PTR [rax-0x20],dl
   14000d692:	add    BYTE PTR [rax],al
   14000d694:	add    BYTE PTR [rax],al
   14000d696:	add    BYTE PTR [rax],al
   14000d698:	mov    eax,fs
   14000d69a:	add    BYTE PTR [rax],al
   14000d69c:	add    BYTE PTR [rax],al
   14000d69e:	add    BYTE PTR [rax],al
   14000d6a0:	mov    ah,0xe0
   14000d6a2:	add    BYTE PTR [rax],al
   14000d6a4:	add    BYTE PTR [rax],al
   14000d6a6:	add    BYTE PTR [rax],al
   14000d6a8:	cli    
   14000d6a9:	loopne 0x14000d6ab
   14000d6ab:	add    BYTE PTR [rax],al
   14000d6ad:	add    BYTE PTR [rax],al
   14000d6af:	add    BYTE PTR [rdx-0x1f],al
   14000d6b2:	add    BYTE PTR [rax],al
   14000d6b4:	add    BYTE PTR [rax],al
   14000d6b6:	add    BYTE PTR [rax],al
   14000d6b8:	mov    ah,cl
   14000d6ba:	add    BYTE PTR [rax],al
   14000d6bc:	add    BYTE PTR [rax],al
   14000d6be:	add    BYTE PTR [rax],al
   14000d6c0:	movabs al,ds:0xc8000000000000e1
   14000d6c9:	loope  0x14000d6cb
   14000d6cb:	add    BYTE PTR [rax],al
   14000d6cd:	add    BYTE PTR [rax],al
   14000d6cf:	add    al,ah
   14000d6d1:	loope  0x14000d6d3
   14000d6d3:	add    BYTE PTR [rax],al
   14000d6d5:	add    BYTE PTR [rax],al
   14000d6d7:	add    BYTE PTR [rdx+riz*8],dl
   14000d6da:	add    BYTE PTR [rax],al
   14000d6dc:	add    BYTE PTR [rax],al
   14000d6de:	add    BYTE PTR [rax],al
   14000d6e0:	(bad)  
   14000d6e1:	fiadd  DWORD PTR [rax]
   14000d6e3:	add    BYTE PTR [rax],al
   14000d6e5:	add    BYTE PTR [rax],al
   14000d6e7:	add    BYTE PTR [rdx+rbx*8+0x0],bl
	...
   14000d6f6:	add    BYTE PTR [rax],al
   14000d6f8:	(bad)  
   14000d6fa:	add    BYTE PTR [rax],al
   14000d6fc:	add    BYTE PTR [rax],al
   14000d6fe:	add    BYTE PTR [rax],al
   14000d700:	jb     0x14000d6e4
   14000d702:	add    BYTE PTR [rax],al
   14000d704:	add    BYTE PTR [rax],al
   14000d706:	add    BYTE PTR [rax],al
   14000d708:	jl     0x14000d6ec
   14000d70a:	add    BYTE PTR [rax],al
   14000d70c:	add    BYTE PTR [rax],al
   14000d70e:	add    BYTE PTR [rax],al
   14000d710:	xchg   dl,ah
   14000d712:	add    BYTE PTR [rax],al
   14000d714:	add    BYTE PTR [rax],al
   14000d716:	add    BYTE PTR [rax],al
   14000d718:	stos   BYTE PTR es:[rdi],al
   14000d719:	loop   0x14000d71b
   14000d71b:	add    BYTE PTR [rax],al
   14000d71d:	add    BYTE PTR [rax],al
   14000d71f:	add    BYTE PTR [rax-0x1e],dl
   14000d722:	add    BYTE PTR [rax],al
   14000d724:	add    BYTE PTR [rax],al
   14000d726:	add    BYTE PTR [rax],al
   14000d728:	fsubr  st(2),st
   14000d72a:	add    BYTE PTR [rax],al
   14000d72c:	add    BYTE PTR [rax],al
   14000d72e:	add    BYTE PTR [rax],al
   14000d730:	repnz loop 0x14000d733
   14000d733:	add    BYTE PTR [rax],al
   14000d735:	add    BYTE PTR [rax],al
   14000d737:	add    ah,bh
   14000d739:	loop   0x14000d73b
   14000d73b:	add    BYTE PTR [rax],al
   14000d73d:	add    BYTE PTR [rax],al
   14000d73f:	add    BYTE PTR [rax],bl
   14000d741:	jrcxz  0x14000d743
   14000d743:	add    BYTE PTR [rax],al
   14000d745:	add    BYTE PTR [rax],al
   14000d747:	add    BYTE PTR [rdx],ah
   14000d749:	jrcxz  0x14000d74b
   14000d74b:	add    BYTE PTR [rax],al
   14000d74d:	add    BYTE PTR [rax],al
   14000d74f:	add    BYTE PTR [rdx+riz*8+0x0],al
   14000d753:	add    BYTE PTR [rax],al
   14000d755:	add    BYTE PTR [rax],al
   14000d757:	add    BYTE PTR [rbx+riz*8],dh
   14000d75a:	add    BYTE PTR [rax],al
   14000d75c:	add    BYTE PTR [rax],al
   14000d75e:	add    BYTE PTR [rax],al
   14000d760:	ds jrcxz 0x14000d763
   14000d763:	add    BYTE PTR [rax],al
   14000d765:	add    BYTE PTR [rax],al
   14000d767:	add    BYTE PTR [rsi-0x1d],al
   14000d76a:	add    BYTE PTR [rax],al
   14000d76c:	add    BYTE PTR [rax],al
   14000d76e:	add    BYTE PTR [rax],al
   14000d770:	push   rax
   14000d771:	jrcxz  0x14000d773
   14000d773:	add    BYTE PTR [rax],al
   14000d775:	add    BYTE PTR [rax],al
   14000d777:	add    BYTE PTR [rbx+riz*8+0x0],bl
   14000d77b:	add    BYTE PTR [rax],al
   14000d77d:	add    BYTE PTR [rax],al
   14000d77f:	add    BYTE PTR [rsi-0x1d],ah
   14000d782:	add    BYTE PTR [rax],al
   14000d784:	add    BYTE PTR [rax],al
   14000d786:	add    BYTE PTR [rax],al
   14000d788:	jo     0x14000d76d
   14000d78a:	add    BYTE PTR [rax],al
   14000d78c:	add    BYTE PTR [rax],al
   14000d78e:	add    BYTE PTR [rax],al
   14000d790:	jp     0x14000d775
   14000d792:	add    BYTE PTR [rax],al
   14000d794:	add    BYTE PTR [rax],al
   14000d796:	add    BYTE PTR [rax],al
   14000d798:	mov    bl,ah
   14000d79a:	add    BYTE PTR [rax],al
   14000d79c:	add    BYTE PTR [rax],al
   14000d79e:	add    BYTE PTR [rax],al
   14000d7a0:	cwde   
   14000d7a1:	jrcxz  0x14000d7a3
   14000d7a3:	add    BYTE PTR [rax],al
   14000d7a5:	add    BYTE PTR [rax],al
   14000d7a7:	add    BYTE PTR [rbx+riz*8+0x0],ah
   14000d7ae:	add    BYTE PTR [rax],al
   14000d7b0:	(bad)
   14000d7b4:	add    BYTE PTR [rax],al
   14000d7b6:	add    BYTE PTR [rax],al
   14000d7b8:	(bad)  
   14000d7b9:	jrcxz  0x14000d7bb
   14000d7bb:	add    BYTE PTR [rax],al
   14000d7bd:	add    BYTE PTR [rax],al
   14000d7bf:	add    dh,bl
   14000d7c1:	jrcxz  0x14000d7c3
   14000d7c3:	add    BYTE PTR [rax],al
   14000d7c5:	add    BYTE PTR [rax],al
   14000d7c7:	add    al,ch
   14000d7c9:	jrcxz  0x14000d7cb
   14000d7cb:	add    BYTE PTR [rax],al
   14000d7cd:	add    BYTE PTR [rax],al
   14000d7cf:	add    BYTE PTR [rdx],cl
   14000d7d1:	in     al,0x0
   14000d7d3:	add    BYTE PTR [rax],al
   14000d7d5:	add    BYTE PTR [rax],al
   14000d7d7:	add    BYTE PTR [rsi],ah
   14000d7d9:	in     al,0x0
   14000d7db:	add    BYTE PTR [rax],al
   14000d7dd:	add    BYTE PTR [rax],al
   14000d7df:	add    BYTE PTR [rax],dh
   14000d7e1:	in     al,0x0
   14000d7e3:	add    BYTE PTR [rax],al
   14000d7e5:	add    BYTE PTR [rax],al
   14000d7e7:	add    BYTE PTR [rax],bh
   14000d7e9:	in     al,0x0
   14000d7eb:	add    BYTE PTR [rax],al
   14000d7ed:	add    BYTE PTR [rax],al
   14000d7ef:	add    BYTE PTR [rdx-0x1c],al
   14000d7f2:	add    BYTE PTR [rax],al
   14000d7f4:	add    BYTE PTR [rax],al
   14000d7f6:	add    BYTE PTR [rax],al
   14000d7f8:	rex.WX in al,0x0
   14000d7fb:	add    BYTE PTR [rax],al
   14000d7fd:	add    BYTE PTR [rax],al
   14000d7ff:	add    BYTE PTR [rsp+riz*8+0x0],dl
   14000d803:	add    BYTE PTR [rax],al
   14000d805:	add    BYTE PTR [rax],al
   14000d807:	add    BYTE PTR [rsi-0x1c],bl
   14000d80a:	add    BYTE PTR [rax],al
   14000d80c:	add    BYTE PTR [rax],al
   14000d80e:	add    BYTE PTR [rax],al
   14000d810:	jbe    0x14000d7f6
   14000d812:	add    BYTE PTR [rax],al
   14000d814:	add    BYTE PTR [rax],al
   14000d816:	add    BYTE PTR [rax],al
   14000d818:	jle    0x14000d7fe
   14000d81a:	add    BYTE PTR [rax],al
   14000d81c:	add    BYTE PTR [rax],al
   14000d81e:	add    BYTE PTR [rax],al
   14000d820:	mov    ah,ah
   14000d822:	add    BYTE PTR [rax],al
   14000d824:	add    BYTE PTR [rax],al
   14000d826:	add    BYTE PTR [rax],al
   14000d828:	xchg   esi,eax
   14000d829:	in     al,0x0
   14000d82b:	add    BYTE PTR [rax],al
   14000d82d:	add    BYTE PTR [rax],al
   14000d82f:	add    BYTE PTR [rsp+riz*8+0x0],ah
   14000d836:	add    BYTE PTR [rax],al
   14000d838:	mov    esp,0xe4
   14000d83d:	add    BYTE PTR [rax],al
   14000d83f:	add    dh,al
   14000d841:	in     al,0x0
   14000d843:	add    BYTE PTR [rax],al
   14000d845:	add    BYTE PTR [rax],al
   14000d847:	add    ah,dl
   14000d849:	in     al,0x0
   14000d84b:	add    BYTE PTR [rax],al
   14000d84d:	add    BYTE PTR [rax],al
   14000d84f:	add    dh,ch
   14000d851:	in     al,0x0
   14000d853:	add    BYTE PTR [rax],al
   14000d855:	add    BYTE PTR [rax],al
   14000d857:	add    ah,bh
   14000d859:	in     al,0x0
   14000d85b:	add    BYTE PTR [rax],al
   14000d85d:	add    BYTE PTR [rax],al
   14000d85f:	add    BYTE PTR [riz*8+0x0],cl
   14000d866:	add    BYTE PTR [rax],al
   14000d868:	(bad)  
   14000d869:	in     eax,0x0
   14000d86b:	add    BYTE PTR [rax],al
   14000d86d:	add    BYTE PTR [rax],al
   14000d86f:	add    BYTE PTR [rsi],ah
   14000d871:	in     eax,0x0
   14000d873:	add    BYTE PTR [rax],al
   14000d875:	add    BYTE PTR [rax],al
   14000d877:	add    BYTE PTR [rax],dh
   14000d879:	in     eax,0x0
   14000d87b:	add    BYTE PTR [rax],al
   14000d87d:	add    BYTE PTR [rax],al
   14000d87f:	add    BYTE PTR [rsi],bh
   14000d881:	in     eax,0x0
   14000d883:	add    BYTE PTR [rax],al
   14000d885:	add    BYTE PTR [rax],al
   14000d887:	add    BYTE PTR [rbp+riz*8+0x0],dl
   14000d88b:	add    BYTE PTR [rax],al
   14000d88d:	add    BYTE PTR [rax],al
   14000d88f:	add    BYTE PTR [rax-0x1b],ch
   14000d892:	add    BYTE PTR [rax],al
   14000d894:	add    BYTE PTR [rax],al
   14000d896:	add    BYTE PTR [rax],al
   14000d898:	jbe    0x14000d87f
   14000d89a:	add    BYTE PTR [rax],al
   14000d89c:	add    BYTE PTR [rax],al
   14000d89e:	add    BYTE PTR [rax],al
   14000d8a0:	(bad)  
   14000d8a1:	in     eax,0x0
   14000d8a3:	add    BYTE PTR [rax],al
   14000d8a5:	add    BYTE PTR [rax],al
   14000d8a7:	add    BYTE PTR [rbp+riz*8+0x0],cl
   14000d8ae:	add    BYTE PTR [rax],al
   14000d8b0:	xchg   esi,eax
   14000d8b1:	in     eax,0x0
   14000d8b3:	add    BYTE PTR [rax],al
   14000d8b5:	add    BYTE PTR [rax],al
   14000d8b7:	add    BYTE PTR [rdx+0xe5],ah
   14000d8bd:	add    BYTE PTR [rax],al
   14000d8bf:	add    BYTE PTR [rsi+0xe5],dh
   14000d8c5:	add    BYTE PTR [rax],al
   14000d8c7:	add    ah,ch
   14000d8c9:	in     eax,0x0
   14000d8cb:	add    BYTE PTR [rax],al
   14000d8cd:	add    BYTE PTR [rax],al
   14000d8cf:	add    BYTE PTR [rbx+riz*8],ch
   14000d8d2:	add    BYTE PTR [rax],al
   14000d8d4:	add    BYTE PTR [rax],al
   14000d8d6:	add    BYTE PTR [rax],al
   14000d8d8:	(bad)  
   14000d8d9:	loop   0x14000d8db
	...
   14000d8e7:	add    BYTE PTR [rdx+0xd9],ch
   14000d8ed:	add    BYTE PTR [rax],al
   14000d8ef:	add    BYTE PTR [rcx+rbx*8+0x0],al
   14000d8f6:	add    BYTE PTR [rax],al
   14000d8f8:	or     cl,bl
	...
   14000d906:	add    BYTE PTR [rax],al
   14000d908:	(bad)  
   14000d909:	add    bh,BYTE PTR [rdi]
   14000d90b:	addr32 gs je 0x14000d95c
   14000d90f:	imul   esp,DWORD PTR [rbx+0x72],0x7265536f
   14000d916:	jbe    0x14000d981
   14000d918:	movsxd esp,DWORD PTR [rbp+0x40]
   14000d91b:	imul   r12,QWORD PTR [r11+0x72],0x7265536f
   14000d923:	jbe    0x14000d98e
   14000d925:	movsxd esp,DWORD PTR [rbp+0x5f]
   14000d928:	push   rdx
   14000d929:	gs jae 0x14000d9a0
   14000d92c:	jb     0x14000d997
   14000d92e:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   14000d932:	movsxd esp,DWORD PTR [r11+0x65]
   14000d936:	jae    0x14000d9ab
   14000d938:	rex
   14000d939:	fs gs je 0x14000d99e
   14000d93d:	imul   ebp,DWORD PTR [rax+rax*2+0x6c],0x4072676d
   14000d945:	rex
   14000d946:	rex.XB
   14000d947:	rex.B (bad) 
   14000d949:	push   r14
   14000d94b:	(bad)  
   14000d94c:	and    al,0x73
   14000d94e:	push   0x64657261
   14000d953:	pop    rdi
   14000d954:	jo     0x14000d9ca
   14000d956:	jb     0x14000d998
   14000d958:	and    al,0x24
   14000d95a:	rex.XB
   14000d95b:	rex.X push rsi
   14000d95d:	push   rbx
   14000d95e:	gs jb  0x14000d9d7
   14000d961:	imul   esp,DWORD PTR [rbx+0x65],0x65746e49
   14000d968:	jb     0x14000d9d0
   14000d96a:	(bad)  
   14000d96b:	movsxd esp,DWORD PTR [rbp+0x40]
   14000d96e:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000d971:	imul   sp,WORD PTR [rdi+0x40],0x6d6c
   14000d977:	addr32 jb 0x14000d9ba
   14000d97a:	rex
   14000d97b:	rex jae 0x14000d9f2
   14000d97e:	fs rex
   14000d980:	rex pop rax
   14000d982:	pop    rdx
   14000d983:	add    BYTE PTR [rdx],dl
   14000d985:	add    bh,BYTE PTR [rdi]
   14000d987:	gs jb  0x14000d9fc
   14000d98a:	outs   dx,DWORD PTR ds:[rsi]
   14000d98b:	jb     0x14000d9e0
   14000d98d:	je     0x14000d9f0
   14000d98f:	je     0x14000da06
   14000d991:	jae    0x14000d9d3
   14000d993:	jae    0x14000d9fd
   14000d995:	jne    0x14000da0b
   14000d997:	outs   dx,DWORD PTR fs:[rsi]
   14000d999:	ja     0x14000da09
   14000d99b:	rex ins DWORD PTR es:[rdi],dx
   14000d99d:	ja     0x14000d9df
   14000d99f:	rex pop rcx
   14000d9a1:	rex.B
   14000d9a2:	rex.B
   14000d9a3:	rex.RB
   14000d9a4:	pop    r15
   14000d9a6:	rex.WXB pop r8
   14000d9a8:	pop    rdx
   14000d9a9:	add    ah,bl
   14000d9ab:	add    eax,0x6765723f
   14000d9b0:	imul   esi,DWORD PTR [rbx+0x74],0x6d4c7265
   14000d9b7:	addr32 jb 0x14000d9fa
   14000d9ba:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000d9bd:	imul   sp,WORD PTR [rdi+0x40],0x6d6c
   14000d9c3:	addr32 jb 0x14000da06
   14000d9c6:	rex pop rcx
   14000d9c8:	pop    r8
   14000d9ca:	rex.B
   14000d9cb:	rex.RB
   14000d9cc:	rex.X push rsi
   14000d9ce:	(bad)  
   14000d9cf:	and    al,0x62
   14000d9d1:	(bad)  
   14000d9d2:	jae    0x14000da3d
   14000d9d4:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000d9d7:	je     0x14000da4b
   14000d9d9:	imul   ebp,DWORD PTR [rsi+0x67],0x55575f40
   14000d9e0:	(bad)  
   14000d9e1:	and    al,0x63
   14000d9e3:	push   0x745f7261
   14000d9e8:	jb     0x14000da4b
   14000d9ea:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14000d9f2:	je     0x14000da58
   14000d9f4:	rex
   14000d9f5:	rex push rsi
   14000d9f7:	(bad)  
   14000d9f8:	and    al,0x61
   14000d9fa:	ins    BYTE PTR es:[rdi],dx
   14000d9fb:	ins    BYTE PTR es:[rdi],dx
   14000d9fc:	outs   dx,DWORD PTR ds:[rsi]
   14000d9fd:	movsxd esp,DWORD PTR [rcx+0x74]
   14000da00:	outs   dx,DWORD PTR ds:[rsi]
   14000da01:	jb     0x14000da43
   14000da03:	pop    rdi
   14000da04:	push   rdi
   14000da05:	xor    al,BYTE PTR [rax+0x40]
   14000da09:	jae    0x14000da7f
   14000da0b:	fs rex
   14000da0d:	rex
   14000da0e:	rex pop rdx
   14000da10:	add    BYTE PTR [rax],al
   14000da12:	ins    BYTE PTR es:[rdi],dx
   14000da13:	imul   esp,DWORD PTR [rdx+0x6d],0x72657377
   14000da1a:	jbe    0x14000da85
   14000da1c:	movsxd esp,DWORD PTR [rbp+0x73]
   14000da1f:	cs fs ins BYTE PTR es:[rdi],dx
   14000da22:	ins    BYTE PTR es:[rdi],dx
   14000da23:	add    BYTE PTR [rcx+0x1],bh
   14000da26:	rex.RXB
   14000da27:	gs je  0x14000da7f
   14000da2a:	jae    0x14000da91
   14000da2c:	jb     0x14000da7c
   14000da2e:	(bad)  
   14000da2f:	ins    DWORD PTR es:[rdi],dx
   14000da30:	add    BYTE PTR gs:[r8],al
   14000da34:	rex.B
   14000da35:	rex.R push rsi
   14000da37:	push   r8
   14000da39:	xor    rsi,QWORD PTR [r10]
   14000da3c:	cs fs ins BYTE PTR es:[rdi],dx
   14000da3f:	ins    BYTE PTR es:[rdi],dx
   14000da40:	add    BYTE PTR [rax],al
   14000da42:	jg     0x14000da44
   14000da44:	rex.XB ins BYTE PTR es:[rdi],dx
   14000da46:	outs   dx,DWORD PTR ds:[rsi]
   14000da47:	jae    0x14000daae
   14000da49:	rex.W (bad) 
   14000da4b:	outs   dx,BYTE PTR ds:[rsi]
   14000da4c:	fs ins BYTE PTR es:[rdi],dx
   14000da4e:	add    BYTE PTR gs:[rbx+0x69615705],bh
   14000da55:	je     0x14000da9d
   14000da57:	outs   dx,DWORD PTR ds:[rsi]
   14000da58:	jb     0x14000daad
   14000da5a:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   14000da61:	push   0x65
   14000da63:	movsxd esi,DWORD PTR [rax+rax*1-0xf]
   14000da67:	add    ecx,DWORD PTR [rdi+0x70]
   14000da6a:	outs   dx,BYTE PTR gs:[rsi]
   14000da6c:	push   rax
   14000da6d:	jb     0x14000dade
   14000da6f:	movsxd esp,DWORD PTR [rbp+0x73]
   14000da72:	jae    0x14000da74
   14000da74:	rex.WXB
   14000da75:	rex.RB push r10
   14000da77:	rex.WRX
   14000da78:	rex.RB
   14000da79:	xor    r14,QWORD PTR [rdx]
   14000da7c:	cs fs ins BYTE PTR es:[rdi],dx
   14000da7f:	ins    BYTE PTR es:[rdi],dx
   14000da80:	add    BYTE PTR [rax],al
   14000da82:	leave  
   14000da83:	add    bh,BYTE PTR [rdi]
   14000da85:	pop    rdi
   14000da86:	pop    rax
   14000da87:	(bad)
   14000da8c:	ins    BYTE PTR es:[rdi],dx
   14000da8d:	ins    BYTE PTR es:[rdi],dx
   14000da8e:	outs   dx,DWORD PTR ds:[rsi]
   14000da8f:	movsxd eax,DWORD PTR [rax+0x73]
   14000da92:	je     0x14000daf8
   14000da94:	rex
   14000da95:	rex pop rcx
   14000da97:	pop    r8
   14000da99:	pop    rax
   14000da9a:	pop    rdx
   14000da9b:	add    ah,cl
   14000da9d:	add    bh,BYTE PTR [rdi]
   14000da9f:	pop    rdi
   14000daa0:	pop    rax
   14000daa1:	ins    BYTE PTR es:[rdi],dx
   14000daa2:	outs   dx,BYTE PTR gs:[rsi]
   14000daa4:	addr32 je 0x14000db0f
   14000daa7:	pop    rdi
   14000daa8:	gs jb  0x14000db1d
   14000daab:	outs   dx,DWORD PTR ds:[rsi]
   14000daac:	jb     0x14000daee
   14000daae:	jae    0x14000db24
   14000dab0:	fs rex
   14000dab2:	rex pop rcx
   14000dab4:	pop    r8
   14000dab6:	push   rax
   14000dab7:	rex.RB
   14000dab8:	rex.X
   14000dab9:	rex.R
   14000daba:	rex pop rdx
   14000dabc:	add    BYTE PTR [rax],al
   14000dabe:	int    0x2
   14000dac0:	(bad)  
   14000dac1:	pop    rdi
   14000dac2:	pop    rax
   14000dac3:	outs   dx,DWORD PTR ds:[rsi]
   14000dac4:	jne    0x14000db3a
   14000dac6:	pop    rdi
   14000dac7:	outs   dx,DWORD PTR ds:[rsi]
   14000dac8:	pop    di
   14000daca:	jb     0x14000db2d
   14000dacc:	outs   dx,BYTE PTR ds:[rsi]
   14000dacd:	addr32 gs rex jae 0x14000db46
   14000dad2:	fs rex
   14000dad4:	rex pop rcx
   14000dad6:	pop    r8
   14000dad8:	push   rax
   14000dad9:	rex.RB
   14000dada:	rex.X
   14000dadb:	rex.R
   14000dadc:	rex pop rdx
   14000dade:	add    BYTE PTR [rax],al
   14000dae0:	mov    al,0x2
   14000dae2:	(bad)  
   14000dae3:	pop    rdi
   14000dae4:	push   rbx
   14000dae5:	jns    0x14000db5a
   14000dae7:	gs jb  0x14000db5c
   14000daea:	outs   dx,DWORD PTR ds:[rsi]
   14000daeb:	jb     0x14000db4c
   14000daed:	ins    DWORD PTR es:[rdi],dx
   14000daee:	(bad)  
   14000daef:	jo     0x14000db31
   14000daf1:	jae    0x14000db67
   14000daf3:	fs rex
   14000daf5:	rex pop rcx
   14000daf7:	push   r8
   14000daf9:	rex.RB
   14000dafa:	rex.X
   14000dafb:	rex.R
   14000dafc:	rex.W
   14000dafd:	rex pop rdx
   14000daff:	add    ch,al
   14000db01:	add    bh,BYTE PTR [rdi]
   14000db03:	pop    rdi
   14000db04:	push   rdi
   14000db05:	imul   ebp,DWORD PTR [rsi+0x65],0x726f7272
   14000db0c:	pop    rdi
   14000db0d:	ins    DWORD PTR es:[rdi],dx
   14000db0e:	(bad)  
   14000db0f:	jo     0x14000db51
   14000db11:	jae    0x14000db87
   14000db13:	fs rex
   14000db15:	rex pop rcx
   14000db17:	push   r8
   14000db19:	rex.RB
   14000db1a:	rex.X
   14000db1b:	rex.R
   14000db1c:	rex.W
   14000db1d:	rex pop rdx
   14000db1f:	add    BYTE PTR [rsi+0x0],ah
   14000db22:	(bad)  
   14000db23:	(bad)  
   14000db24:	xor    BYTE PTR [rdi+0x4c],bl
   14000db27:	outs   dx,DWORD PTR ds:[rsi]
   14000db28:	movsxd ebp,DWORD PTR [rbx+0x69]
   14000db2b:	je     0x14000db6d
   14000db2d:	jae    0x14000dba3
   14000db2f:	fs rex
   14000db31:	rex push rcx
   14000db33:	rex.RB
   14000db34:	rex.B
   14000db35:	rex.B
   14000db36:	rex
   14000db37:	rex.W
   14000db38:	rex pop rdx
   14000db3a:	add    BYTE PTR [rax],al
   14000db3c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000db3d:	add    BYTE PTR [rdi],bh
   14000db3f:	(bad)  
   14000db40:	xor    DWORD PTR [rdi+0x4c],ebx
   14000db43:	outs   dx,DWORD PTR ds:[rsi]
   14000db44:	movsxd ebp,DWORD PTR [rbx+0x69]
   14000db47:	je     0x14000db89
   14000db49:	jae    0x14000dbbf
   14000db4b:	fs rex
   14000db4d:	rex push rcx
   14000db4f:	rex.RB
   14000db50:	rex.B
   14000db51:	rex.B
   14000db52:	rex pop rax
   14000db54:	pop    rdx
   14000db55:	add    BYTE PTR [rbx+0x5],al
   14000db58:	(bad)  
   14000db59:	jne    0x14000dbc9
   14000db5b:	movsxd esp,DWORD PTR [rcx+0x75]
   14000db5e:	addr32 push 0x78655f74
   14000db64:	movsxd esp,DWORD PTR [rbp+0x70]
   14000db67:	je     0x14000dbd2
   14000db69:	outs   dx,DWORD PTR ds:[rsi]
   14000db6a:	outs   dx,BYTE PTR ds:[rsi]
   14000db6b:	rex jae 0x14000dbe2
   14000db6e:	fs rex
   14000db70:	rex pop rcx
   14000db72:	pop    r15
   14000db74:	rex.WRX pop rax
   14000db76:	pop    rdx
   14000db77:	add    BYTE PTR [rax],dh
   14000db79:	add    DWORD PTR [rdi],edi
   14000db7b:	(bad)  
   14000db7c:	imul   esp,DWORD PTR [rax+r8*2+0x6c],0x6c61636f
   14000db85:	gs rex jae 0x14000dbfd
   14000db89:	fs rex
   14000db8b:	rex push rcx
   14000db8d:	rex.RB
   14000db8e:	rex.B
   14000db8f:	pop    r15
   14000db91:	rex.WXB pop r8
   14000db93:	pop    rdx
   14000db94:	add    BYTE PTR [rax],al
   14000db96:	in     eax,dx
   14000db97:	add    DWORD PTR [rdi],edi
   14000db99:	pop    rdi
   14000db9a:	rex.RXB
   14000db9b:	gs je  0x14000dc05
   14000db9e:	ins    BYTE PTR es:[rdi],dx
   14000db9f:	outs   dx,DWORD PTR ds:[rsi]
   14000dba0:	(bad)
   14000dba5:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000dba8:	gs rex ins BYTE PTR es:[rdi],dx
   14000dbab:	outs   dx,DWORD PTR ds:[rsi]
   14000dbac:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000dbaf:	gs rex jae 0x14000dc27
   14000dbb3:	fs rex
   14000dbb5:	rex
   14000dbb6:	rex.XB
   14000dbb7:	push   r8
   14000dbb9:	rex.RB
   14000dbba:	push   r14
   14000dbbc:	pop    rdi
   14000dbbd:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000dbbf:	movsxd ebp,DWORD PTR [rcx+0x6d]
   14000dbc2:	jo     0x14000dc04
   14000dbc4:	xor    DWORD PTR [rdx],esi
   14000dbc6:	rex pop rax
   14000dbc8:	pop    rdx
   14000dbc9:	add    dl,dl
   14000dbcb:	add    bh,BYTE PTR [rdi]
   14000dbcd:	(bad)  
   14000dbce:	ins    BYTE PTR es:[rdi],dx
   14000dbcf:	ja     0x14000dc32
   14000dbd1:	jns    0x14000dc46
   14000dbd3:	pop    rdi
   14000dbd4:	outs   dx,BYTE PTR ds:[rsi]
   14000dbd5:	outs   dx,DWORD PTR ds:[rsi]
   14000dbd6:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000dbd9:	jbe    0x14000dc1b
   14000dbdb:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000dbde:	movsxd esi,DWORD PTR gs:[rsi+0x74]
   14000dbe2:	pop    rdi
   14000dbe3:	(bad)  
   14000dbe5:	jae    0x14000dc4c
   14000dbe7:	rex jae 0x14000dc5e
   14000dbea:	fs rex
   14000dbec:	rex push rcx
   14000dbee:	rex.RB
   14000dbef:	rex.X
   14000dbf0:	pop    r15
   14000dbf2:	rex.WRX pop rax
   14000dbf4:	pop    rdx
   14000dbf5:	add    BYTE PTR [rax],ah
   14000dbf7:	add    al,0x3f
   14000dbf9:	imul   ebp,DWORD PTR [rsi+0x40],0x6f63243f
   14000dc00:	fs movsxd esi,DWORD PTR gs:[rsi+0x74]
   14000dc05:	rex
   14000dc06:	rex.R
   14000dc07:	rex.R
   14000dc08:	rex.W
   14000dc09:	rex jae 0x14000dc80
   14000dc0c:	fs rex
   14000dc0e:	rex push rcx
   14000dc10:	rex.RB
   14000dc11:	rex.X
   14000dc12:	rex.B
   14000dc13:	rex.W
   14000dc14:	rex.B
   14000dc15:	rex.RB
   14000dc16:	rex.B
   14000dc17:	rex.W push rax
   14000dc19:	rex.RB
   14000dc1a:	rex.X
   14000dc1b:	xor    DWORD PTR [rcx+0x45],r8d
   14000dc1f:	push   r8
   14000dc21:	rex.RB
   14000dc22:	rex.X
   14000dc23:	rex.R push rax
   14000dc25:	rex.RB
   14000dc26:	rex.B
   14000dc27:	xor    r8d,DWORD PTR [rcx+0x45]
   14000dc2b:	push   r8
   14000dc2d:	rex.RB
   14000dc2e:	rex.B
   14000dc2f:	rex.R
   14000dc30:	rex pop rdx
   14000dc32:	add    BYTE PTR [rax],al
   14000dc34:	push   rsi
   14000dc35:	add    al,0x3f
   14000dc37:	outs   dx,DWORD PTR ds:[rsi]
   14000dc38:	jne    0x14000dcae
   14000dc3a:	rex (bad) 
   14000dc3c:	and    al,0x63
   14000dc3e:	outs   dx,DWORD PTR ds:[rsi]
   14000dc3f:	fs movsxd esi,DWORD PTR gs:[rsi+0x74]
   14000dc44:	rex
   14000dc45:	rex.R
   14000dc46:	rex.R
   14000dc47:	rex.W
   14000dc48:	rex jae 0x14000dcbf
   14000dc4b:	fs rex
   14000dc4d:	rex push rcx
   14000dc4f:	rex.RB
   14000dc50:	rex.X
   14000dc51:	rex.B
   14000dc52:	rex.W
   14000dc53:	rex.B
   14000dc54:	rex.RB
   14000dc55:	rex.B
   14000dc56:	rex.W push rax
   14000dc58:	rex.RB
   14000dc59:	rex.X
   14000dc5a:	xor    DWORD PTR [rcx+0x45],r8d
   14000dc5e:	push   r8
   14000dc60:	rex.RB
   14000dc61:	rex.X
   14000dc62:	rex.R push rax
   14000dc64:	rex.RB
   14000dc65:	rex.B
   14000dc66:	xor    r8d,DWORD PTR [rcx+0x45]
   14000dc6a:	push   r8
   14000dc6c:	rex.RB
   14000dc6d:	rex.B
   14000dc6e:	rex.R
   14000dc6f:	rex pop rdx
   14000dc71:	add    BYTE PTR [rbx+0x5],cl
   14000dc74:	(bad)  
   14000dc75:	jne    0x14000dce5
   14000dc77:	jae    0x14000dce1
   14000dc79:	imul   esp,DWORD PTR [rsi+0x74],0x63243f40
   14000dc80:	outs   dx,DWORD PTR ds:[rsi]
   14000dc81:	fs movsxd esi,DWORD PTR gs:[rsi+0x74]
   14000dc86:	rex
   14000dc87:	rex.R
   14000dc88:	rex.R
   14000dc89:	rex.W
   14000dc8a:	rex jae 0x14000dd01
   14000dc8d:	fs rex
   14000dc8f:	rex push rcx
   14000dc91:	rex.RB
   14000dc92:	rex.X
   14000dc93:	rex.B
   14000dc94:	rex.W
   14000dc95:	rex.B
   14000dc96:	rex.RB
   14000dc97:	rex.B
   14000dc98:	rex.W push rax
   14000dc9a:	rex.RB
   14000dc9b:	rex.B
   14000dc9c:	xor    DWORD PTR [rcx+0x45],r8d
   14000dca0:	push   r8
   14000dca2:	rex.RB
   14000dca3:	rex.B
   14000dca4:	rex.R
   14000dca5:	rex pop rdx
   14000dca7:	add    bl,cl
   14000dca9:	add    DWORD PTR [rdi],edi
   14000dcab:	pop    rdi
   14000dcac:	rex.RXB
   14000dcad:	gs je  0x14000dd13
   14000dcb0:	(bad)  
   14000dcb1:	je     0x14000dcf3
   14000dcb3:	(bad)  
   14000dcb4:	and    al,0x63
   14000dcb6:	outs   dx,DWORD PTR ds:[rsi]
   14000dcb7:	fs movsxd esi,DWORD PTR gs:[rsi+0x74]
   14000dcbc:	rex
   14000dcbd:	rex.R
   14000dcbe:	rex.R
   14000dcbf:	rex.W
   14000dcc0:	rex jae 0x14000dd37
   14000dcc3:	fs rex
   14000dcc5:	rex push rbx
   14000dcc7:	pop    r15
   14000dcc9:	rex.WXB push r8
   14000dccb:	rex.RB
   14000dccc:	push   r8
   14000dcce:	rex.RB
   14000dccf:	rex.X push rsi
   14000dcd1:	data16 (bad) 
   14000dcd3:	movsxd esp,DWORD PTR [rbp+0x74]
   14000dcd6:	rex ins BYTE PTR es:[rdi],dx
   14000dcd8:	outs   dx,DWORD PTR ds:[rsi]
   14000dcd9:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000dcdc:	xor    al,BYTE PTR gs:[rax+0x50]
   14000dce1:	rex.RB
   14000dce2:	rex.X push rsi
   14000dce4:	xor    al,0x32
   14000dce6:	rex
   14000dce7:	rex pop rdx
   14000dce9:	add    BYTE PTR [rbx+0x2],al
   14000dcec:	(bad)  
   14000dced:	pop    rdi
   14000dcee:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000dcf0:	jae    0x14000dd51
   14000dcf2:	(bad)  
   14000dcf4:	jae    0x14000dd5b
   14000dcf6:	pop    rdi
   14000dcf7:	fs je  0x14000dd69
   14000dcfa:	jb     0x14000dd3c
   14000dcfc:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
   14000dd03:	gs rex jae 0x14000dd7b
   14000dd07:	fs rex
   14000dd09:	rex
   14000dd0a:	rex.XB
   14000dd0b:	pop    r8
   14000dd0d:	push   rax
   14000dd0e:	rex.RB
   14000dd0f:	push   r14
   14000dd11:	xor    DWORD PTR [rdx],esi
   14000dd13:	rex
   14000dd14:	rex pop rdx
   14000dd16:	add    BYTE PTR [rax],al
   14000dd18:	sub    al,BYTE PTR [rax]
   14000dd1a:	(bad)  
   14000dd1b:	(bad)  
   14000dd1c:	xor    BYTE PTR [rdi],bh
   14000dd1e:	and    al,0x62
   14000dd20:	(bad)  
   14000dd21:	jae    0x14000dd8c
   14000dd23:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000dd26:	je     0x14000dd9a
   14000dd28:	gs (bad) 
   14000dd2a:	ins    DWORD PTR es:[rdi],dx
   14000dd2b:	(bad)  
   14000dd2c:	jne    0x14000dd94
   14000dd2e:	rex
   14000dd2f:	rex.R push rbp
   14000dd31:	(bad)  
   14000dd32:	and    al,0x63
   14000dd34:	push   0x745f7261
   14000dd39:	jb     0x14000dd9c
   14000dd3b:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000dd43:	fs rex
   14000dd45:	rex
   14000dd46:	rex jae 0x14000ddbd
   14000dd49:	fs rex
   14000dd4b:	rex
   14000dd4c:	rex.WB
   14000dd4d:	rex.RB
   14000dd4e:	rex.B
   14000dd4f:	rex.B
   14000dd50:	rex pop rax
   14000dd52:	pop    rdx
   14000dd53:	add    BYTE PTR [rdi+0x313f3f00],al
   14000dd59:	(bad)  
   14000dd5a:	and    al,0x62
   14000dd5c:	(bad)  
   14000dd5d:	jae    0x14000ddc8
   14000dd5f:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000dd62:	je     0x14000ddd6
   14000dd64:	gs (bad) 
   14000dd66:	ins    DWORD PTR es:[rdi],dx
   14000dd67:	(bad)  
   14000dd68:	jne    0x14000ddd0
   14000dd6a:	rex
   14000dd6b:	rex.R push rbp
   14000dd6d:	(bad)  
   14000dd6e:	and    al,0x63
   14000dd70:	push   0x745f7261
   14000dd75:	jb     0x14000ddd8
   14000dd77:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000dd7f:	fs rex
   14000dd81:	rex
   14000dd82:	rex jae 0x14000ddf9
   14000dd85:	fs rex
   14000dd87:	rex push rbp
   14000dd89:	rex.RB
   14000dd8a:	rex.B
   14000dd8b:	rex.B
   14000dd8c:	rex pop rax
   14000dd8e:	pop    rdx
   14000dd8f:	add    dh,ah
   14000dd91:	add    edi,DWORD PTR [rdi]
   14000dd93:	addr32 gs je 0x14000de03
   14000dd97:	outs   dx,DWORD PTR ds:[rsi]
   14000dd98:	movsxd eax,DWORD PTR [rax+0x3f]
   14000dd9b:	and    al,0x62
   14000dd9d:	(bad)  
   14000dd9e:	jae    0x14000de09
   14000dda0:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000dda3:	je     0x14000de17
   14000dda5:	gs (bad) 
   14000dda7:	ins    DWORD PTR es:[rdi],dx
   14000dda8:	(bad)  
   14000dda9:	jne    0x14000de11
   14000ddab:	rex
   14000ddac:	rex.R push rbp
   14000ddae:	(bad)  
   14000ddaf:	and    al,0x63
   14000ddb1:	push   0x745f7261
   14000ddb6:	jb     0x14000de19
   14000ddb8:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000ddc0:	fs rex
   14000ddc2:	rex
   14000ddc3:	rex jae 0x14000de3a
   14000ddc6:	fs rex
   14000ddc8:	rex push rcx
   14000ddca:	rex.RB
   14000ddcb:	rex.X
   14000ddcc:	rex.B (bad) 
   14000ddce:	push   r14
   14000ddd0:	ins    BYTE PTR es:[rdi],dx
   14000ddd1:	outs   dx,DWORD PTR ds:[rsi]
   14000ddd2:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000ddd5:	xor    al,BYTE PTR gs:[rax+0x58]
   14000ddda:	pop    rdx
   14000dddb:	add    bh,bh
   14000dddd:	add    al,0x3f
   14000dddf:	jae    0x14000de51
   14000dde1:	jne    0x14000de57
   14000dde3:	movsxd eax,DWORD PTR [rax+0x3f]
   14000dde6:	and    al,0x62
   14000dde8:	(bad)  
   14000dde9:	jae    0x14000de54
   14000ddeb:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000ddee:	je     0x14000de62
   14000ddf0:	gs (bad) 
   14000ddf2:	ins    DWORD PTR es:[rdi],dx
   14000ddf3:	(bad)  
   14000ddf4:	jne    0x14000de5c
   14000ddf6:	rex
   14000ddf7:	rex.R push rbp
   14000ddf9:	(bad)  
   14000ddfa:	and    al,0x63
   14000ddfc:	push   0x745f7261
   14000de01:	jb     0x14000de64
   14000de03:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000de0b:	fs rex
   14000de0d:	rex
   14000de0e:	rex jae 0x14000de85
   14000de11:	fs rex
   14000de13:	rex push rcx
   14000de15:	rex.RB
   14000de16:	rex.B
   14000de17:	rex.B
   14000de18:	rex.W
   14000de19:	rex.R
   14000de1a:	rex pop rdx
   14000de1c:	add    BYTE PTR [rax],al
   14000de1e:	add    al,BYTE PTR [rip+0x7570733f]        # 0x1b5715163
   14000de24:	je     0x14000de94
   14000de26:	rex (bad) 
   14000de28:	and    al,0x62
   14000de2a:	(bad)  
   14000de2b:	jae    0x14000de96
   14000de2d:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000de30:	je     0x14000dea4
   14000de32:	gs (bad) 
   14000de34:	ins    DWORD PTR es:[rdi],dx
   14000de35:	(bad)  
   14000de36:	jne    0x14000de9e
   14000de38:	rex
   14000de39:	rex.R push rbp
   14000de3b:	(bad)  
   14000de3c:	and    al,0x63
   14000de3e:	push   0x745f7261
   14000de43:	jb     0x14000dea6
   14000de45:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000de4d:	fs rex
   14000de4f:	rex
   14000de50:	rex jae 0x14000dec7
   14000de53:	fs rex
   14000de55:	rex push rcx
   14000de57:	rex.RB
   14000de58:	rex.B
   14000de59:	pop    r15
   14000de5b:	rex.WX push rax
   14000de5d:	rex.RB
   14000de5e:	rex.X
   14000de5f:	rex.R pop rdi
   14000de61:	rex.WX
   14000de62:	rex pop rdx
   14000de64:	add    BYTE PTR [rax],al
   14000de66:	fild   DWORD PTR [rdi+rdi*1]
   14000de69:	jae    0x14000ded0
   14000de6b:	je     0x14000ded4
   14000de6d:	rex (bad) 
   14000de6f:	and    al,0x62
   14000de71:	(bad)  
   14000de72:	jae    0x14000dedd
   14000de74:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000de77:	je     0x14000deeb
   14000de79:	gs (bad) 
   14000de7b:	ins    DWORD PTR es:[rdi],dx
   14000de7c:	(bad)  
   14000de7d:	jne    0x14000dee5
   14000de7f:	rex
   14000de80:	rex.R push rbp
   14000de82:	(bad)  
   14000de83:	and    al,0x63
   14000de85:	push   0x745f7261
   14000de8a:	jb     0x14000deed
   14000de8c:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000de94:	fs rex
   14000de96:	rex
   14000de97:	rex jae 0x14000df0e
   14000de9a:	fs rex
   14000de9c:	rex
   14000de9d:	rex.WB
   14000de9e:	rex.RB
   14000de9f:	rex.B
   14000dea0:	pop    r8
   14000dea2:	push   rax
   14000dea3:	rex.RB
   14000dea4:	rex.B
   14000dea5:	xor    BYTE PTR [rax],r14b
   14000dea8:	rex pop rdx
   14000deaa:	add    BYTE PTR [rax],al
   14000deac:	(bad)  
   14000dead:	add    bh,BYTE PTR [rdi]
   14000deaf:	pop    rdi
   14000deb0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000deb2:	imul   esi,DWORD PTR [rax+rax*2+0x3f],0x73616224
   14000deba:	imul   esp,DWORD PTR [rbx+0x5f],0x65727473
   14000dec1:	(bad)  
   14000dec2:	ins    DWORD PTR es:[rdi],dx
   14000dec3:	(bad)  
   14000dec4:	jne    0x14000df2c
   14000dec6:	rex
   14000dec7:	rex.R push rbp
   14000dec9:	(bad)  
   14000deca:	and    al,0x63
   14000decc:	push   0x745f7261
   14000ded1:	jb     0x14000df34
   14000ded3:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000dedb:	fs rex
   14000dedd:	rex
   14000dede:	rex jae 0x14000df55
   14000dee1:	fs rex
   14000dee3:	rex
   14000dee4:	rex.WB
   14000dee5:	rex.RB
   14000dee6:	rex.B
   14000dee7:	pop    r8
   14000dee9:	pop    rax
   14000deea:	pop    rdx
   14000deeb:	add    BYTE PTR [rbx+0x0],bh
   14000deee:	(bad)  
   14000deef:	(bad)  
   14000def0:	xor    DWORD PTR [rdi],edi
   14000def2:	and    al,0x62
   14000def4:	(bad)  
   14000def5:	jae    0x14000df60
   14000def7:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000defa:	outs   dx,DWORD PTR ds:[rsi]
   14000defb:	jae    0x14000df3d
   14000defd:	rex.R push rbp
   14000deff:	(bad)  
   14000df00:	and    al,0x63
   14000df02:	push   0x745f7261
   14000df07:	jb     0x14000df6a
   14000df09:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000df11:	fs rex
   14000df13:	rex
   14000df14:	rex jae 0x14000df8b
   14000df17:	fs rex
   14000df19:	rex push rbp
   14000df1b:	rex.RB
   14000df1c:	rex.B
   14000df1d:	rex.B
   14000df1e:	rex pop rax
   14000df20:	pop    rdx
   14000df21:	add    dh,ah
   14000df23:	add    al,0x3f
   14000df25:	jae    0x14000df8c
   14000df27:	je     0x14000df9c
   14000df29:	je     0x14000df8c
   14000df2b:	je     0x14000df92
   14000df2d:	rex (bad) 
   14000df2f:	and    al,0x62
   14000df31:	(bad)  
   14000df32:	jae    0x14000df9d
   14000df34:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000df37:	outs   dx,DWORD PTR ds:[rsi]
   14000df38:	jae    0x14000df7a
   14000df3a:	rex.R push rbp
   14000df3c:	(bad)  
   14000df3d:	and    al,0x63
   14000df3f:	push   0x745f7261
   14000df44:	jb     0x14000dfa7
   14000df46:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000df4e:	fs rex
   14000df50:	rex
   14000df51:	rex jae 0x14000dfc8
   14000df54:	fs rex
   14000df56:	rex push rcx
   14000df58:	rex.RB
   14000df59:	rex.B
   14000df5a:	pop    r8
   14000df5c:	rex.W pop rdi
   14000df5e:	rex.WRX
   14000df5f:	rex pop rdx
   14000df61:	add    BYTE PTR [rsi+0x2],dh
   14000df64:	(bad)  
   14000df65:	pop    rdi
   14000df66:	rex.WRXB jae 0x14000dfcf
   14000df69:	js     0x14000dfab
   14000df6b:	(bad)  
   14000df6c:	and    al,0x62
   14000df6e:	(bad)  
   14000df6f:	jae    0x14000dfda
   14000df71:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14000df74:	jae    0x14000dfea
   14000df76:	jb     0x14000dfdd
   14000df78:	(bad)  
   14000df79:	ins    DWORD PTR es:[rdi],dx
   14000df7a:	rex
   14000df7b:	rex.R push rbp
   14000df7d:	(bad)  
   14000df7e:	and    al,0x63
   14000df80:	push   0x745f7261
   14000df85:	jb     0x14000dfe8
   14000df87:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000df8f:	fs rex
   14000df91:	rex
   14000df92:	rex jae 0x14000e009
   14000df95:	fs rex
   14000df97:	rex push rcx
   14000df99:	rex.RB
   14000df9a:	rex.B
   14000df9b:	pop    r8
   14000df9d:	pop    rax
   14000df9e:	pop    rdx
   14000df9f:	add    BYTE PTR [rsi+0x6c663f03],cl
   14000dfa5:	jne    0x14000e01a
   14000dfa7:	push   0x62243f40
   14000dfac:	(bad)  
   14000dfad:	jae    0x14000e018
   14000dfaf:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14000dfb2:	jae    0x14000e028
   14000dfb4:	jb     0x14000e01b
   14000dfb6:	(bad)  
   14000dfb7:	ins    DWORD PTR es:[rdi],dx
   14000dfb8:	rex
   14000dfb9:	rex.R push rbp
   14000dfbb:	(bad)  
   14000dfbc:	and    al,0x63
   14000dfbe:	push   0x745f7261
   14000dfc3:	jb     0x14000e026
   14000dfc5:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000dfcd:	fs rex
   14000dfcf:	rex
   14000dfd0:	rex jae 0x14000e047
   14000dfd3:	fs rex
   14000dfd5:	rex push rcx
   14000dfd7:	rex.RB
   14000dfd8:	rex.B
   14000dfd9:	rex.B
   14000dfda:	rex.B
   14000dfdb:	rex.RB
   14000dfdc:	push   r14
   14000dfde:	xor    DWORD PTR [rdx],esi
   14000dfe0:	rex pop rax
   14000dfe2:	pop    rdx
   14000dfe3:	add    BYTE PTR [rsi],cl
   14000dfe5:	add    BYTE PTR [rdi],bh
   14000dfe7:	(bad)  
   14000dfe8:	xor    BYTE PTR [rdi],bh
   14000dfea:	and    al,0x62
   14000dfec:	(bad)  
   14000dfed:	jae    0x14000e058
   14000dfef:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000dff2:	outs   dx,DWORD PTR ds:[rsi]
   14000dff3:	jae    0x14000e069
   14000dff5:	jb     0x14000e05c
   14000dff7:	(bad)  
   14000dff8:	ins    DWORD PTR es:[rdi],dx
   14000dff9:	rex
   14000dffa:	rex.R push rbp
   14000dffc:	(bad)  
   14000dffd:	and    al,0x63
   14000dfff:	push   0x745f7261
   14000e004:	jb     0x14000e067
   14000e006:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000e00e:	fs rex
   14000e010:	rex
   14000e011:	rex jae 0x14000e088
   14000e014:	fs rex
   14000e016:	rex push rcx
   14000e018:	rex.RB
   14000e019:	rex.B
   14000e01a:	rex.B
   14000e01b:	rex push rax
   14000e01d:	rex.RB
   14000e01e:	push   r14
   14000e020:	(bad)  
   14000e021:	and    al,0x62
   14000e023:	(bad)  
   14000e024:	jae    0x14000e08f
   14000e026:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000e029:	je     0x14000e09d
   14000e02b:	gs (bad) 
   14000e02d:	ins    DWORD PTR es:[rdi],dx
   14000e02e:	(bad)  
   14000e02f:	jne    0x14000e097
   14000e031:	rex
   14000e032:	rex.R push rbp
   14000e034:	(bad)  
   14000e035:	and    al,0x63
   14000e037:	push   0x745f7261
   14000e03c:	jb     0x14000e09f
   14000e03e:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000e046:	fs rex
   14000e048:	rex
   14000e049:	rex xor DWORD PTR [rax+0x40],eax
   14000e04d:	pop    rdx
   14000e04e:	add    BYTE PTR [rax],al
   14000e050:	jle    0x14000e052
   14000e052:	(bad)  
   14000e053:	(bad)  
   14000e054:	xor    DWORD PTR [rdi],edi
   14000e056:	and    al,0x62
   14000e058:	(bad)  
   14000e059:	jae    0x14000e0c4
   14000e05b:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000e05e:	outs   dx,DWORD PTR ds:[rsi]
   14000e05f:	jae    0x14000e0d5
   14000e061:	jb     0x14000e0c8
   14000e063:	(bad)  
   14000e064:	ins    DWORD PTR es:[rdi],dx
   14000e065:	rex
   14000e066:	rex.R push rbp
   14000e068:	(bad)  
   14000e069:	and    al,0x63
   14000e06b:	push   0x745f7261
   14000e070:	jb     0x14000e0d3
   14000e072:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000e07a:	fs rex
   14000e07c:	rex
   14000e07d:	rex jae 0x14000e0f4
   14000e080:	fs rex
   14000e082:	rex push rbp
   14000e084:	rex.RB
   14000e085:	rex.B
   14000e086:	rex.B
   14000e087:	rex pop rax
   14000e089:	pop    rdx
   14000e08a:	add    BYTE PTR [rax],al
   14000e08c:	ret    
   14000e08d:	add    DWORD PTR [rdi],edi
   14000e08f:	pop    rdi
   14000e090:	rex.RX imul r13d,DWORD PTR [rdi+0x70],0x73406e65
   14000e098:	je     0x14000e0fe
   14000e09a:	rex
   14000e09b:	rex pop rcx
   14000e09d:	push   r8
   14000e09f:	rex.RB
   14000e0a0:	push   r13
   14000e0a2:	pop    rdi
   14000e0a3:	imul   ebp,DWORD PTR [rdi+0x62],0x40406675
   14000e0aa:	push   rax
   14000e0ab:	rex.RB
   14000e0ac:	rex.X
   14000e0ad:	rex.R
   14000e0ae:	rex.W
   14000e0af:	rex.W
   14000e0b0:	rex pop rdx
   14000e0b2:	add    BYTE PTR [rax],al
   14000e0b4:	test   BYTE PTR [rdi+rdi*1],0x73
   14000e0b8:	push   0x616d776f
   14000e0bd:	outs   dx,BYTE PTR ds:[rsi]
   14000e0be:	jns    0x14000e123
   14000e0c0:	rex (bad) 
   14000e0c2:	and    al,0x62
   14000e0c4:	(bad)  
   14000e0c5:	jae    0x14000e130
   14000e0c7:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000e0ca:	je     0x14000e13e
   14000e0cc:	gs (bad) 
   14000e0ce:	ins    DWORD PTR es:[rdi],dx
   14000e0cf:	(bad)  
   14000e0d0:	jne    0x14000e138
   14000e0d2:	rex
   14000e0d3:	rex.R push rbp
   14000e0d5:	(bad)  
   14000e0d6:	and    al,0x63
   14000e0d8:	push   0x745f7261
   14000e0dd:	jb     0x14000e140
   14000e0df:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000e0e7:	fs rex
   14000e0e9:	rex
   14000e0ea:	rex jae 0x14000e161
   14000e0ed:	fs rex
   14000e0ef:	rex
   14000e0f0:	rex.WRB
   14000e0f1:	rex.RB
   14000e0f2:	rex.B
   14000e0f3:	pop    r15
   14000e0f5:	rex.WX pop rax
   14000e0f7:	pop    rdx
   14000e0f8:	add    BYTE PTR [rax],al
   14000e0fa:	imul   eax,DWORD PTR [rip+0x6773783f],0x65        # 0x1a7745940
   14000e101:	je     0x14000e171
   14000e103:	rex (bad) 
   14000e105:	and    al,0x62
   14000e107:	(bad)  
   14000e108:	jae    0x14000e173
   14000e10a:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000e10d:	je     0x14000e181
   14000e10f:	gs (bad) 
   14000e111:	ins    DWORD PTR es:[rdi],dx
   14000e112:	(bad)  
   14000e113:	jne    0x14000e17b
   14000e115:	rex
   14000e116:	rex.R push rbp
   14000e118:	(bad)  
   14000e119:	and    al,0x63
   14000e11b:	push   0x745f7261
   14000e120:	jb     0x14000e183
   14000e122:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000e12a:	fs rex
   14000e12c:	rex
   14000e12d:	rex jae 0x14000e1a4
   14000e130:	fs rex
   14000e132:	rex
   14000e133:	rex.WRB
   14000e134:	rex.RB
   14000e135:	rex.B
   14000e136:	pop    r15
   14000e138:	rex.WX push rax
   14000e13a:	rex.RB
   14000e13b:	rex.B
   14000e13c:	rex.R pop rdi
   14000e13e:	rex.WX
   14000e13f:	rex pop rdx
   14000e141:	add    BYTE PTR [rsi+0x5],ch
   14000e144:	(bad)  
   14000e145:	js     0x14000e1ba
   14000e147:	jo     0x14000e1be
   14000e149:	je     0x14000e1b9
   14000e14b:	rex (bad) 
   14000e14d:	and    al,0x62
   14000e14f:	(bad)  
   14000e150:	jae    0x14000e1bb
   14000e152:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000e155:	je     0x14000e1c9
   14000e157:	gs (bad) 
   14000e159:	ins    DWORD PTR es:[rdi],dx
   14000e15a:	(bad)  
   14000e15b:	jne    0x14000e1c3
   14000e15d:	rex
   14000e15e:	rex.R push rbp
   14000e160:	(bad)  
   14000e161:	and    al,0x63
   14000e163:	push   0x745f7261
   14000e168:	jb     0x14000e1cb
   14000e16a:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000e172:	fs rex
   14000e174:	rex
   14000e175:	rex jae 0x14000e1ec
   14000e178:	fs rex
   14000e17a:	rex
   14000e17b:	rex.WRB
   14000e17c:	rex.RB
   14000e17d:	rex.B
   14000e17e:	pop    r15
   14000e180:	rex.WX push rax
   14000e182:	rex.RB
   14000e183:	rex.X
   14000e184:	rex.R pop rdi
   14000e186:	rex.WX
   14000e187:	rex pop rdx
   14000e189:	add    BYTE PTR [rdi+0x425f3f01],ah
   14000e18f:	rex.B
   14000e190:	rex.R
   14000e191:	rex.WRXB
   14000e192:	rex.RX
   14000e193:	rex.RX
   14000e194:	rex jae 0x14000e20b
   14000e197:	fs rex
   14000e199:	rex xor ebx,DWORD PTR [rdi+0x4a]
   14000e19d:	rex.X add BYTE PTR [rax],al
   14000e1a0:	out    dx,eax
   14000e1a1:	add    edi,DWORD PTR [rdi]
   14000e1a3:	imul   esp,DWORD PTR [rax+rax*2+0x3f],0x646f6324
   14000e1ab:	movsxd esi,DWORD PTR gs:[rsi+0x74]
   14000e1af:	rex
   14000e1b0:	rex.R
   14000e1b1:	rex.R
   14000e1b2:	rex.W
   14000e1b3:	rex jae 0x14000e22a
   14000e1b6:	fs rex
   14000e1b8:	xor    dl,BYTE PTR [rsi+0x30]
   14000e1bc:	ins    BYTE PTR es:[rdi],dx
   14000e1bd:	outs   dx,DWORD PTR ds:[rsi]
   14000e1be:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e1c1:	xor    al,BYTE PTR gs:[rax+0x41]
   14000e1c6:	add    BYTE PTR [rax],al
   14000e1c8:	pop    rcx
   14000e1c9:	add    DWORD PTR [rdi],edi
   14000e1cb:	(bad)  
   14000e1cc:	pop    rdi
   14000e1cd:	(bad)  
   14000e1ce:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
   14000e1d5:	gs rex jae 0x14000e24d
   14000e1d9:	fs rex
   14000e1db:	rex
   14000e1dc:	ss rex.X
   14000e1de:	add    BYTE PTR [rdx],sil
   14000e1e1:	add    DWORD PTR [rdi],edi
   14000e1e3:	(bad)  
   14000e1e4:	pop    rdi
   14000e1e5:	(bad)  
   14000e1e6:	(bad)  
   14000e1e7:	and    al,0x62
   14000e1e9:	(bad)  
   14000e1ea:	jae    0x14000e255
   14000e1ec:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000e1ef:	outs   dx,DWORD PTR ds:[rsi]
   14000e1f0:	jae    0x14000e232
   14000e1f2:	rex.R push rbp
   14000e1f4:	(bad)  
   14000e1f5:	and    al,0x63
   14000e1f7:	push   0x745f7261
   14000e1fc:	jb     0x14000e25f
   14000e1fe:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000e206:	fs rex
   14000e208:	rex
   14000e209:	rex jae 0x14000e280
   14000e20c:	fs rex
   14000e20e:	rex
   14000e20f:	ss rex.X
   14000e211:	add    BYTE PTR [rax],al
   14000e214:	retf   0x3f02
   14000e217:	pop    rdi
   14000e218:	pop    rax
   14000e219:	(bad)
   14000e21e:	jne    0x14000e28e
   14000e220:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000e224:	outs   dx,BYTE PTR ds:[rsi]
   14000e225:	pop    rdi
   14000e226:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e229:	ins    BYTE PTR es:[rdi],dx
   14000e22a:	rex jae 0x14000e2a1
   14000e22d:	fs rex
   14000e22f:	rex pop rcx
   14000e231:	pop    r8
   14000e233:	pop    rax
   14000e234:	pop    rdx
   14000e235:	add    BYTE PTR [rbp+0x53],cl
   14000e238:	push   rsi
   14000e239:	rex.XB push r8
   14000e23b:	xor    DWORD PTR [rdx],esi
   14000e23d:	xor    BYTE PTR [rsi],ch
   14000e23f:	fs ins BYTE PTR es:[rdi],dx
   14000e241:	ins    BYTE PTR es:[rdi],dx
   14000e242:	add    BYTE PTR [rax],al
   14000e244:	(bad)  
   14000e245:	add    al,0x5f
   14000e247:	jo     0x14000e2be
   14000e249:	jb     0x14000e2b0
   14000e24b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e24e:	ins    BYTE PTR es:[rdi],dx
   14000e24f:	add    BYTE PTR [rax+0x0],dh
   14000e252:	(bad)  
   14000e253:	(bad)  
   14000e254:	xor    al,BYTE PTR [rax+0x59]
   14000e257:	push   r8
   14000e259:	rex.RB
   14000e25a:	pop    r8
   14000e25c:	pop    rdi
   14000e25d:	rex.WXB
   14000e25e:	rex pop rdx
   14000e260:	add    BYTE PTR [rax],al
   14000e262:	jb     0x14000e264
   14000e264:	(bad)  
   14000e265:	(bad)  
   14000e266:	xor    eax,DWORD PTR [rax+0x59]
   14000e269:	pop    r8
   14000e26b:	push   rax
   14000e26c:	rex.RB
   14000e26d:	pop    r8
   14000e26f:	rex pop rdx
   14000e271:	add    BYTE PTR [rdi+0x6d656d06],dh
   14000e277:	ins    DWORD PTR es:[rdi],dx
   14000e278:	outs   dx,DWORD PTR ds:[rsi]
   14000e279:	jbe    0x14000e2e0
   14000e27b:	add    dl,bl
   14000e27d:	add    bl,BYTE PTR [rdi+0x68]
   14000e280:	jns    0x14000e2f2
   14000e282:	outs   dx,DWORD PTR ds:[rsi]
   14000e283:	je     0x14000e285
   14000e285:	add    BYTE PTR [rax+rax*1],ch
   14000e288:	(bad)  
   14000e289:	(bad)  
   14000e28a:	xor    BYTE PTR [rbp+0x78],ah
   14000e28d:	movsxd esp,DWORD PTR [rbp+0x70]
   14000e290:	je     0x14000e2fb
   14000e292:	outs   dx,DWORD PTR ds:[rsi]
   14000e293:	outs   dx,BYTE PTR ds:[rsi]
   14000e294:	rex jae 0x14000e30b
   14000e297:	fs rex
   14000e299:	rex push rcx
   14000e29b:	rex.RB
   14000e29c:	rex.B
   14000e29d:	rex.B
   14000e29e:	rex
   14000e29f:	rex.B
   14000e2a0:	rex.RB
   14000e2a1:	rex.X push rsi
   14000e2a3:	xor    BYTE PTR [rcx],dh
   14000e2a5:	rex
   14000e2a6:	rex pop rdx
   14000e2a8:	add    BYTE PTR [rax],al
   14000e2aa:	push   0x0
   14000e2ac:	(bad)  
   14000e2ad:	(bad)  
   14000e2ae:	xor    DWORD PTR [rbp+0x78],esp
   14000e2b1:	movsxd esp,DWORD PTR [rbp+0x70]
   14000e2b4:	je     0x14000e31f
   14000e2b6:	outs   dx,DWORD PTR ds:[rsi]
   14000e2b7:	outs   dx,BYTE PTR ds:[rsi]
   14000e2b8:	rex jae 0x14000e32f
   14000e2bb:	fs rex
   14000e2bd:	rex push rbp
   14000e2bf:	rex.RB
   14000e2c0:	rex.B
   14000e2c1:	rex.B
   14000e2c2:	rex pop rax
   14000e2c4:	pop    rdx
   14000e2c5:	add    BYTE PTR [rbp+0x1],al
   14000e2c8:	pop    rdi
   14000e2c9:	rex.XB js 0x14000e344
   14000e2cc:	push   rsp
   14000e2cd:	push   0x45776f72
   14000e2d2:	js     0x14000e337
   14000e2d4:	gs jo  0x14000e34b
   14000e2d7:	imul   ebp,DWORD PTR [rdi+0x6e],0x1620000
   14000e2de:	pop    rdi
   14000e2df:	pop    rdi
   14000e2e0:	rex.XB js 0x14000e35b
   14000e2e3:	rex.RX jb 0x14000e347
   14000e2e6:	ins    DWORD PTR es:[rdi],dx
   14000e2e7:	gs rex.W (bad) 
   14000e2ea:	outs   dx,BYTE PTR ds:[rsi]
   14000e2eb:	fs ins BYTE PTR es:[rdi],dx
   14000e2ed:	gs jb  0x14000e323
   14000e2f0:	add    BYTE PTR [rax],al
   14000e2f2:	mov    ch,0x6
   14000e2f4:	ins    DWORD PTR es:[rdi],dx
   14000e2f5:	gs ins DWORD PTR es:[rdi],dx
   14000e2f7:	movsxd esi,DWORD PTR [rax+0x79]
   14000e2fa:	add    BYTE PTR [rax],al
   14000e2fc:	sub    eax,0x303f3f00
   14000e301:	gs js  0x14000e367
   14000e304:	gs jo  0x14000e37b
   14000e307:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   14000e30e:	rex
   14000e30f:	rex push rcx
   14000e311:	rex.RB
   14000e312:	rex.B
   14000e313:	rex.B
   14000e314:	rex pop rax
   14000e316:	pop    rdx
   14000e317:	add    BYTE PTR [rdx],ah
   14000e319:	(bad)  
   14000e31a:	movsxd bp,DWORD PTR [rdi+rbp*2+0x73]
   14000e31f:	add    BYTE PTR gs:[rax],al
   14000e322:	xor    eax,DWORD PTR [rsi]
   14000e324:	data16 data16 ins BYTE PTR es:[rdi],dx
   14000e327:	jne    0x14000e39c
   14000e329:	push   0x6340000
   14000e32e:	data16 addr32 gs je 0x14000e396
   14000e333:	add    BYTE PTR [rip+0x65676606],dh        # 0x1a568493f
   14000e339:	je     0x14000e3ab
   14000e33b:	outs   dx,DWORD PTR ds:[rsi]
   14000e33c:	jae    0x14000e33e
   14000e33e:	rex.WX (bad) 
   14000e340:	data16 jo 0x14000e3b8
   14000e343:	je     0x14000e3a8
   14000e345:	add    BYTE PTR [rdi+0x6],dl
   14000e348:	data16 jae 0x14000e3b0
   14000e34b:	je     0x14000e3bd
   14000e34d:	outs   dx,DWORD PTR ds:[rsi]
   14000e34e:	jae    0x14000e350
   14000e350:	lea    eax,[rdx]
   14000e352:	pop    rdi
   14000e353:	data16 jae 0x14000e3bb
   14000e356:	imul   ebp,DWORD PTR gs:[rcx+0x36],0x34
   14000e35b:	add    BYTE PTR [rbx+0x6],bl
   14000e35e:	data16 ja 0x14000e3d3
   14000e361:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x7306f500
   14000e369:	gs je  0x14000e3e2
   14000e36c:	(bad)  
   14000e36d:	jne    0x14000e3d5
   14000e36f:	add    BYTE PTR [rbx],bh
   14000e371:	(bad)  
   14000e372:	jne    0x14000e3e2
   14000e374:	addr32 gs je 0x14000e3db
   14000e378:	add    BYTE PTR [rax],al
   14000e37a:	pop    rsp
   14000e37b:	add    ebx,DWORD PTR [rdi+0x6c]
   14000e37e:	outs   dx,DWORD PTR ds:[rsi]
   14000e37f:	movsxd ebp,DWORD PTR [rbx+0x5f]
   14000e382:	imul   bp,WORD PTR [rbp+riz*2+0x0],0xc800
   14000e389:	add    al,0x5f
   14000e38b:	jne    0x14000e3fb
   14000e38d:	ins    BYTE PTR es:[rdi],dx
   14000e38e:	outs   dx,DWORD PTR ds:[rsi]
   14000e38f:	movsxd ebp,DWORD PTR [rbx+0x5f]
   14000e392:	imul   bp,WORD PTR [rbp+riz*2+0x0],0xb600
   14000e399:	(bad)  
   14000e39a:	ins    DWORD PTR es:[rdi],dx
   14000e39b:	gs ins DWORD PTR es:[rdi],dx
   14000e39d:	movsxd esi,DWORD PTR [rax+0x79]
   14000e3a0:	pop    rdi
   14000e3a1:	jae    0x14000e3a3
   14000e3a3:	add    BYTE PTR [rip+0x303f3f00],bl        # 0x1704022a9
   14000e3a9:	(bad)
   14000e3ae:	(bad)  
   14000e3af:	jae    0x14000e425
   14000e3b1:	rex jae 0x14000e428
   14000e3b4:	fs rex
   14000e3b6:	rex push rcx
   14000e3b8:	rex.RB
   14000e3b9:	rex.B
   14000e3ba:	rex.B
   14000e3bb:	rex push rax
   14000e3bd:	rex.RB
   14000e3be:	rex.X
   14000e3bf:	rex.R
   14000e3c0:	rex pop rdx
   14000e3c2:	add    BYTE PTR [rax],al
   14000e3c4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e3c5:	add    eax,0x74637361
   14000e3ca:	imul   ebp,DWORD PTR [rbp+0x65],0x5f035900
   14000e3d1:	ins    BYTE PTR es:[rdi],dx
   14000e3d2:	outs   dx,DWORD PTR ds:[rsi]
   14000e3d3:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e3d6:	je     0x14000e441
   14000e3d8:	ins    DWORD PTR es:[rdi],dx
   14000e3d9:	gs ss xor al,0x0
   14000e3dd:	add    BYTE PTR [rbx+0x69745f04],ch
   14000e3e3:	ins    DWORD PTR es:[rdi],dx
   14000e3e4:	gs ss xor al,0x0
   14000e3e8:	sbb    al,0x0
   14000e3ea:	(bad)  
   14000e3eb:	(bad)  
   14000e3ec:	xor    BYTE PTR [rdx+0x61],ah
   14000e3ef:	fs pop rdi
   14000e3f1:	movsxd esp,DWORD PTR [rcx+0x73]
   14000e3f4:	je     0x14000e436
   14000e3f6:	jae    0x14000e46c
   14000e3f8:	fs rex
   14000e3fa:	rex push rcx
   14000e3fc:	rex.RB
   14000e3fd:	rex.B
   14000e3fe:	rex.B
   14000e3ff:	rex
   14000e400:	rex.B
   14000e401:	rex.RB
   14000e402:	rex.X push rsi
   14000e404:	xor    BYTE PTR [rcx],dh
   14000e406:	rex
   14000e407:	rex pop rdx
   14000e409:	add    BYTE PTR [rsi+0x0],ah
   14000e40c:	(bad)  
   14000e40d:	(bad)  
   14000e40e:	xor    DWORD PTR [rdx+0x61],esp
   14000e411:	fs pop rdi
   14000e413:	movsxd esp,DWORD PTR [rcx+0x73]
   14000e416:	je     0x14000e458
   14000e418:	jae    0x14000e48e
   14000e41a:	fs rex
   14000e41c:	rex push rbp
   14000e41e:	rex.RB
   14000e41f:	rex.B
   14000e420:	rex.B
   14000e421:	rex pop rax
   14000e423:	pop    rdx
   14000e424:	add    BYTE PTR [rax],al
   14000e426:	mov    ecx,0x6d656d06
   14000e42b:	jae    0x14000e492
   14000e42d:	je     0x14000e42f
   14000e42f:	add    BYTE PTR [rax],bl
   14000e431:	(bad)  
   14000e432:	gs js  0x14000e49e
   14000e435:	je     0x14000e437
   14000e437:	add    bl,bh
   14000e439:	(bad)  
   14000e43a:	jae    0x14000e4ac
   14000e43c:	jb     0x14000e4a7
   14000e43e:	outs   dx,BYTE PTR ds:[rsi]
   14000e43f:	je     0x14000e4a7
   14000e441:	add    al,ch
   14000e443:	add    eax,0x636f6c63
   14000e448:	imul   eax,DWORD PTR [rax],0x78
   14000e44b:	add    DWORD PTR [rdi+0x5f],ebx
   14000e44e:	(bad)  
   14000e44f:	jb     0x14000e4b8
   14000e451:	movsxd eax,DWORD PTR [rax]
   14000e453:	add    BYTE PTR [rcx+0x1],bh
   14000e456:	pop    rdi
   14000e457:	pop    rdi
   14000e458:	(bad)  
   14000e459:	jb     0x14000e4c2
   14000e45b:	jbe    0x14000e45d
   14000e45d:	add    BYTE PTR [rip+0x72747307],bl        # 0x1b275576a
   14000e463:	je     0x14000e4d4
   14000e465:	ins    BYTE PTR es:[rdi],dx
   14000e466:	add    BYTE PTR [rax],al
   14000e468:	rex.WRB push r11
   14000e46a:	push   rsi
   14000e46b:	rex.XB push r10
   14000e46d:	xor    DWORD PTR [rdx],esi
   14000e46f:	xor    BYTE PTR [rsi],ch
   14000e471:	fs ins BYTE PTR es:[rdi],dx
   14000e473:	ins    BYTE PTR es:[rdi],dx
   14000e474:	add    BYTE PTR [rax],al
   14000e476:	pop    rbx
   14000e477:	add    ebx,DWORD PTR [rdi+0x6c]
   14000e47a:	outs   dx,DWORD PTR ds:[rsi]
   14000e47b:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000e47e:	mov    DWORD PTR [rdi+rbx*2],0x6f6c6e75
   14000e485:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000e488:	or     DWORD PTR [rdx],eax
   14000e48a:	pop    rdi
   14000e48b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e48e:	ins    BYTE PTR es:[rdi],dx
   14000e48f:	outs   dx,DWORD PTR ds:[rsi]
   14000e490:	movsxd ebx,DWORD PTR [rdi+0x63]
   14000e493:	jb     0x14000e509
   14000e495:	add    BYTE PTR [rdi+0x645f5f01],bl
   14000e49b:	ins    BYTE PTR es:[rdi],dx
   14000e49c:	ins    BYTE PTR es:[rdi],dx
   14000e49d:	outs   dx,DWORD PTR ds:[rsi]
   14000e49e:	outs   dx,BYTE PTR ds:[rsi]
   14000e49f:	gs js  0x14000e50b
   14000e4a2:	je     0x14000e4a4
   14000e4a4:	pop    rsp
   14000e4a5:	add    DWORD PTR [rdi+0x5f],ebx
   14000e4a8:	rex.XB pop r15
   14000e4aa:	jae    0x14000e51c
   14000e4ac:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000e4b0:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000e4b7:	ins    BYTE PTR es:[rdi],dx
   14000e4b8:	gs jb  0x14000e4bb
   14000e4bb:	add    BYTE PTR [rdx],al
   14000e4bd:	add    al,0x5f
   14000e4bf:	outs   dx,DWORD PTR ds:[rsi]
   14000e4c0:	outs   dx,BYTE PTR ds:[rsi]
   14000e4c1:	gs js  0x14000e52d
   14000e4c4:	je     0x14000e4c6
   14000e4c6:	pop    rax
   14000e4c7:	add    DWORD PTR [rdi+0x58],ebx
   14000e4ca:	movsxd esi,DWORD PTR [rax+0x74]
   14000e4cd:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x18d0072
   14000e4d6:	pop    rdi
   14000e4d7:	pop    rdi
   14000e4d8:	movsxd esi,DWORD PTR [rdx+0x74]
   14000e4db:	rex.RXB
   14000e4dc:	gs je  0x14000e532
   14000e4df:	push   0x6957776f
   14000e4e4:	outs   dx,BYTE PTR ds:[rsi]
   14000e4e5:	outs   dx,DWORD PTR fs:[rsi]
   14000e4e7:	ja     0x14000e536
   14000e4e9:	outs   dx,DWORD PTR ds:[rsi]
   14000e4ea:	fs add BYTE PTR gs:[rax],al
   14000e4ee:	repnz add DWORD PTR [rdi+0x61],ebx
   14000e4f2:	ins    DWORD PTR es:[rdi],dx
   14000e4f3:	jae    0x14000e55c
   14000e4f5:	pop    rdi
   14000e4f6:	gs js  0x14000e562
   14000e4f9:	je     0x14000e4fb
   14000e4fb:	add    BYTE PTR [rdi+0x675f5f01],ah
   14000e501:	gs je  0x14000e571
   14000e504:	(bad)  
   14000e505:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000e50c:	(bad)  
   14000e50d:	add    DWORD PTR [rdi+0x5f],ebx
   14000e510:	jae    0x14000e577
   14000e512:	je     0x14000e573
   14000e514:	(bad)  
   14000e515:	jo     0x14000e587
   14000e517:	pop    rdi
   14000e518:	je     0x14000e593
   14000e51a:	jo     0x14000e581
   14000e51c:	add    BYTE PTR [rax],al
   14000e51e:	pop    rax
   14000e51f:	add    bl,BYTE PTR [rdi+0x65]
   14000e522:	js     0x14000e58d
   14000e524:	je     0x14000e526
   14000e526:	or     al,BYTE PTR [rdx]
   14000e528:	pop    rdi
   14000e529:	movsxd esp,DWORD PTR [rbp+0x78]
   14000e52c:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0303
   14000e534:	jae    0x14000e5a3
   14000e536:	(bad)
   14000e53b:	add    BYTE PTR fs:[rax],al
   14000e53e:	sbb    al,BYTE PTR [rdx]
   14000e540:	pop    rdi
   14000e541:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000e544:	imul   sp,WORD PTR [rdi+0x74],0x7268
   14000e54a:	gs (bad) 
   14000e54c:	fs ins BYTE PTR es:[rdi],dx
   14000e54e:	outs   dx,DWORD PTR ds:[rsi]
   14000e54f:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e552:	gs add al,dl
   14000e555:	add    DWORD PTR [rdi+0x5f],ebx
   14000e558:	jae    0x14000e5bf
   14000e55a:	je     0x14000e5d1
   14000e55c:	jae    0x14000e5c3
   14000e55e:	jb     0x14000e5cd
   14000e560:	(bad)  
   14000e561:	je     0x14000e5cb
   14000e563:	gs jb  0x14000e5d8
   14000e566:	add    BYTE PTR [rax],al
   14000e568:	loop   0x14000e56c
   14000e56a:	pop    rdi
   14000e56b:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000e572:	ins    DWORD PTR es:[rdi],dx
   14000e573:	pop    rdi
   14000e574:	gs add cl,ah
   14000e577:	add    bl,BYTE PTR [rdi+0x69]
   14000e57a:	outs   dx,BYTE PTR ds:[rsi]
   14000e57b:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0xe9006d72
   14000e583:	add    DWORD PTR [rdi+0x61],ebx
   14000e586:	movsxd ebp,DWORD PTR [rbp+0x64]
   14000e589:	ins    BYTE PTR es:[rdi],dx
   14000e58a:	outs   dx,BYTE PTR ds:[rsi]
   14000e58b:	add    BYTE PTR [rax+0x2],bh
   14000e58e:	pop    rdi
   14000e58f:	ins    WORD PTR es:[rdi],dx
   14000e591:	outs   dx,DWORD PTR ds:[rsi]
   14000e592:	fs add BYTE PTR gs:[rax],al
   14000e596:	sbb    DWORD PTR [rdx],eax
   14000e598:	pop    rdi
   14000e599:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e59c:	ins    DWORD PTR es:[rdi],dx
   14000e59d:	outs   dx,DWORD PTR ds:[rsi]
   14000e59e:	fs add BYTE PTR gs:[rax],al
   14000e5a2:	xor    eax,DWORD PTR [rcx]
   14000e5a4:	(bad)  
   14000e5a5:	je     0x14000e60c
   14000e5a7:	jb     0x14000e616
   14000e5a9:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000e5b0:	pop    rcx
   14000e5b1:	pop    r8
   14000e5b3:	pop    rax
   14000e5b4:	pop    rdx
   14000e5b5:	add    BYTE PTR [rbx],bl
   14000e5b7:	add    DWORD PTR [rdi],edi
   14000e5b9:	pop    rdi
   14000e5ba:	je     0x14000e635
   14000e5bc:	jo     0x14000e623
   14000e5be:	pop    rdi
   14000e5bf:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   14000e5c6:	outs   dx,DWORD PTR ds:[rsi]
   14000e5c7:	jb     0x14000e628
   14000e5c9:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14000e5d0:	ins    BYTE PTR es:[rdi],dx
   14000e5d1:	pop    rdi
   14000e5d2:	ins    DWORD PTR es:[rdi],dx
   14000e5d3:	gs je  0x14000e63e
   14000e5d6:	outs   dx,DWORD PTR ds:[rsi]
   14000e5d7:	fs rex je 0x14000e654
   14000e5db:	jo     0x14000e642
   14000e5dd:	pop    rdi
   14000e5de:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   14000e5e5:	rex.RB
   14000e5e6:	rex.B
   14000e5e7:	pop    r8
   14000e5e9:	pop    rax
   14000e5ea:	pop    rdx
   14000e5eb:	add    BYTE PTR [rcx+0x635f5f01],bl
   14000e5f1:	jb     0x14000e667
   14000e5f3:	push   rbx
   14000e5f4:	gs je  0x14000e64c
   14000e5f7:	outs   dx,BYTE PTR ds:[rsi]
   14000e5f8:	push   0x6c646e61
   14000e5fd:	gs fs rex.RB js 0x14000e665
   14000e602:	gs jo  0x14000e679
   14000e605:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000e60c:	gs jb  0x14000e60f
   14000e60f:	add    BYTE PTR [rip+0x636e4501],ah        # 0x1a36f2b16
   14000e615:	outs   dx,DWORD PTR ds:[rsi]
   14000e616:	fs gs push rax
   14000e619:	outs   dx,DWORD PTR ds:[rsi]
   14000e61a:	imul   ebp,DWORD PTR [rsi+0x74],0xff007265
   14000e621:	add    BYTE PTR [rbp+riz*2+0x63],al
   14000e625:	outs   dx,DWORD PTR ds:[rsi]
   14000e626:	fs gs push rax
   14000e629:	outs   dx,DWORD PTR ds:[rsi]
   14000e62a:	imul   ebp,DWORD PTR [rsi+0x74],0x30007265
   14000e631:	add    al,0x51
   14000e633:	jne    0x14000e69a
   14000e635:	jb     0x14000e6b0
   14000e637:	push   rax
   14000e638:	gs jb  0x14000e6a1
   14000e63b:	outs   dx,DWORD PTR ds:[rsi]
   14000e63c:	jb     0x14000e6ab
   14000e63e:	(bad)  
   14000e63f:	outs   dx,BYTE PTR ds:[rsi]
   14000e640:	movsxd esp,DWORD PTR [rbp+0x43]
   14000e643:	outs   dx,DWORD PTR ds:[rsi]
   14000e644:	jne    0x14000e6b4
   14000e646:	je     0x14000e6ad
   14000e648:	jb     0x14000e64a
   14000e64a:	adc    BYTE PTR [rdx],al
   14000e64c:	rex.RXB
   14000e64d:	gs je  0x14000e693
   14000e650:	jne    0x14000e6c4
   14000e652:	jb     0x14000e6b9
   14000e654:	outs   dx,BYTE PTR ds:[rsi]
   14000e655:	je     0x14000e6a7
   14000e657:	jb     0x14000e6c8
   14000e659:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e65c:	jae    0x14000e6a7
   14000e65e:	add    BYTE PTR fs:[rdx+rax*1],dl
   14000e662:	rex.RXB
   14000e663:	gs je  0x14000e6a9
   14000e666:	jne    0x14000e6da
   14000e668:	jb     0x14000e6cf
   14000e66a:	outs   dx,BYTE PTR ds:[rsi]
   14000e66b:	je     0x14000e6c1
   14000e66d:	push   0x64616572
   14000e672:	rex.WB
   14000e673:	add    BYTE PTR fs:[rax],al
   14000e676:	fld    QWORD PTR [rdx]
   14000e678:	rex.RXB
   14000e679:	gs je  0x14000e6cf
   14000e67c:	jns    0x14000e6f1
   14000e67e:	je     0x14000e6e5
   14000e680:	ins    DWORD PTR es:[rdi],dx
   14000e681:	push   rsp
   14000e682:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000e689:	ins    BYTE PTR es:[rdi],dx
   14000e68a:	gs push rsp
   14000e68c:	.byte 0x69
   14000e68d:	ins    DWORD PTR es:[rdi],dx
   14000e68e:	gs
	...

Disassembly of section .data:

000000014000f000 <.data>:
   14000f000:	clc    
   14000f001:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f002:	add    BYTE PTR [rax+0x1],al
   14000f005:	add    BYTE PTR [rax],al
   14000f007:	add    BYTE PTR [rax-0x59],cl
   14000f00a:	add    BYTE PTR [rax+0x1],al
   14000f00d:	add    BYTE PTR [rax],al
   14000f00f:	add    BYTE PTR [rax+0x14000a7],ch
   14000f015:	add    BYTE PTR [rax],al
   14000f017:	add    BYTE PTR [rax+0x14000ae],cl
   14000f01d:	add    BYTE PTR [rax],al
   14000f01f:	add    BYTE PTR [rax+0x14000ae],bl
   14000f025:	add    BYTE PTR [rax],al
   14000f027:	add    BYTE PTR [rax+0x14000ae],ch
   14000f02d:	add    BYTE PTR [rax],al
   14000f02f:	add    BYTE PTR [rbp-0x68],dh
	...
   14000f03e:	add    BYTE PTR [rax],al
   14000f040:	add    DWORD PTR [rax],eax
   14000f042:	add    BYTE PTR [rax],al
   14000f044:	(bad)  
   14000f045:	(bad)  
   14000f046:	(bad)  
   14000f047:	(bad)  
   14000f048:	(bad)  
   14000f049:	(bad)  
   14000f04a:	(bad)  
   14000f04b:	inc    DWORD PTR [rax]
   14000f04d:	add    BYTE PTR [rax],al
   14000f04f:	add    BYTE PTR [rdx],dh
   14000f051:	movabs ds:0x5dcd00002b992ddf,al
   14000f05a:	and    dl,dl
   14000f05c:	data16 (bad) 
   14000f05e:	(bad)  
   14000f05f:	call   rax
   14000f061:	scas   al,BYTE PTR es:[rdi]
   14000f062:	add    BYTE PTR [rax+0x1],al
	...
   14000f06d:	add    BYTE PTR [rax],al
   14000f06f:	add    BYTE PTR [rsi],ch
   14000f071:	(bad)  
   14000f072:	push   r14
   14000f074:	gs js  0x14000f0da
   14000f077:	gs jo  0x14000f0ee
   14000f07a:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   14000f081:	rex
   14000f082:	add    BYTE PTR [rax],al
   14000f085:	add    BYTE PTR [rax],al
   14000f087:	add    al,dl
   14000f089:	scas   al,BYTE PTR es:[rdi]
   14000f08a:	add    BYTE PTR [rax+0x1],al
	...
   14000f095:	add    BYTE PTR [rax],al
   14000f097:	add    BYTE PTR [rsi],ch
   14000f099:	(bad)  
   14000f09a:	push   r14
   14000f09c:	push   rbx
   14000f09d:	gs jae 0x14000f113
   14000f0a0:	imul   ebp,DWORD PTR [rdi+0x6e],0x65637845
   14000f0a7:	jo     0x14000f11d
   14000f0a9:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14000f0b0:	shr    BYTE PTR [rsi+0x14000],1
	...
   14000f0be:	add    BYTE PTR [rax],al
   14000f0c0:	cs (bad) 
   14000f0c2:	push   r14
   14000f0c4:	gs jb  0x14000f139
   14000f0c7:	outs   dx,DWORD PTR ds:[rsi]
   14000f0c8:	jb     0x14000f129
   14000f0ca:	movsxd esp,DWORD PTR [rcx+0x74]
   14000f0cd:	outs   dx,DWORD PTR gs:[esi]
   14000f0d0:	jb     0x14000f14b
   14000f0d2:	rex jae 0x14000f149
   14000f0d5:	fs rex
   14000f0d7:	add    BYTE PTR [rax],al
   14000f0da:	add    BYTE PTR [rax],al
   14000f0dc:	add    BYTE PTR [rax],al
   14000f0de:	add    BYTE PTR [rax],al
   14000f0e0:	shr    BYTE PTR [rsi+0x14000],1
	...
   14000f0ee:	add    BYTE PTR [rax],al
   14000f0f0:	cs (bad) 
   14000f0f2:	push   r14
   14000f0f4:	pop    rdi
   14000f0f5:	rex.RXB
   14000f0f6:	outs   dx,BYTE PTR gs:[rsi]
   14000f0f8:	gs jb  0x14000f164
   14000f0fb:	movsxd ebx,DWORD PTR [rdi+0x65]
   14000f0fe:	jb     0x14000f172
   14000f100:	outs   dx,DWORD PTR ds:[rsi]
   14000f101:	jb     0x14000f162
   14000f103:	movsxd esp,DWORD PTR [rcx+0x74]
   14000f106:	outs   dx,DWORD PTR gs:[esi]
   14000f109:	jb     0x14000f184
   14000f10b:	rex jae 0x14000f182
   14000f10e:	fs rex
   14000f110:	add    BYTE PTR [rax],al
   14000f113:	add    BYTE PTR [rax],al
   14000f115:	add    BYTE PTR [rax],al
   14000f117:	add    al,dl
   14000f119:	scas   al,BYTE PTR es:[rdi]
   14000f11a:	add    BYTE PTR [rax+0x1],al
	...
   14000f125:	add    BYTE PTR [rax],al
   14000f127:	add    BYTE PTR [rsi],ch
   14000f129:	(bad)  
   14000f12a:	push   r14
   14000f12c:	pop    rdi
   14000f12d:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000f12f:	jae    0x14000f1a5
   14000f131:	jb     0x14000f198
   14000f133:	(bad)  
   14000f134:	ins    DWORD PTR es:[rdi],dx
   14000f135:	pop    rdi
   14000f136:	gs jb  0x14000f1ab
   14000f139:	outs   dx,DWORD PTR ds:[rsi]
   14000f13a:	jb     0x14000f19b
   14000f13c:	movsxd esp,DWORD PTR [rcx+0x74]
   14000f13f:	outs   dx,DWORD PTR gs:[esi]
   14000f142:	jb     0x14000f1bd
   14000f144:	rex jae 0x14000f1bb
   14000f147:	fs rex
   14000f149:	add    BYTE PTR [rax],al
   14000f14c:	add    BYTE PTR [rax],al
   14000f14e:	add    BYTE PTR [rax],al
   14000f150:	shr    BYTE PTR [rsi+0x14000],1
	...
   14000f15e:	add    BYTE PTR [rax],al
   14000f160:	cs (bad) 
   14000f162:	push   r14
   14000f164:	pop    rdi
   14000f165:	push   rbx
   14000f166:	jns    0x14000f1db
   14000f168:	je     0x14000f1cf
   14000f16a:	ins    DWORD PTR es:[rdi],dx
   14000f16b:	pop    rdi
   14000f16c:	gs jb  0x14000f1e1
   14000f16f:	outs   dx,DWORD PTR ds:[rsi]
   14000f170:	jb     0x14000f1d1
   14000f172:	movsxd esp,DWORD PTR [rcx+0x74]
   14000f175:	outs   dx,DWORD PTR gs:[esi]
   14000f178:	jb     0x14000f1f3
   14000f17a:	rex jae 0x14000f1f1
   14000f17d:	fs rex
   14000f17f:	add    BYTE PTR [rax],al
   14000f182:	add    BYTE PTR [rax],al
   14000f184:	add    BYTE PTR [rax],al
   14000f186:	add    BYTE PTR [rax],al
   14000f188:	shr    BYTE PTR [rsi+0x14000],1
	...
   14000f196:	add    BYTE PTR [rax],al
   14000f198:	cs (bad) 
   14000f19a:	push   r14
   14000f19c:	(bad)
   14000f1a1:	(bad)  
   14000f1a2:	jae    0x14000f218
   14000f1a4:	rex jae 0x14000f21b
   14000f1a7:	fs rex
   14000f1a9:	add    BYTE PTR [rax],al
   14000f1ac:	add    BYTE PTR [rax],al
   14000f1ae:	add    BYTE PTR [rax],al
   14000f1b0:	shr    BYTE PTR [rsi+0x14000],1
	...
   14000f1be:	add    BYTE PTR [rax],al
   14000f1c0:	cs (bad) 
   14000f1c2:	push   r14
   14000f1c4:	(bad)  
   14000f1c5:	and    al,0x62
   14000f1c7:	(bad)  
   14000f1c8:	jae    0x14000f233
   14000f1ca:	movsxd ebx,DWORD PTR [rdi+0x66]
   14000f1cd:	imul   ebp,DWORD PTR [rbp+riz*2+0x62],0x44406675
   14000f1d5:	push   rbp
   14000f1d6:	(bad)  
   14000f1d7:	and    al,0x63
   14000f1d9:	push   0x745f7261
   14000f1de:	jb     0x14000f241
   14000f1e0:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000f1e8:	fs rex
   14000f1ea:	rex
   14000f1eb:	rex jae 0x14000f262
   14000f1ee:	fs rex
   14000f1f0:	add    BYTE PTR [rax],al
	...
   14000f1ff:	add    al,dl
   14000f201:	scas   al,BYTE PTR es:[rdi]
   14000f202:	add    BYTE PTR [rax+0x1],al
	...
   14000f20d:	add    BYTE PTR [rax],al
   14000f20f:	add    BYTE PTR [rsi],ch
   14000f211:	(bad)  
   14000f212:	push   r14
   14000f214:	(bad)  
   14000f215:	and    al,0x62
   14000f217:	(bad)  
   14000f218:	jae    0x14000f283
   14000f21a:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000f21d:	je     0x14000f291
   14000f21f:	gs (bad) 
   14000f221:	ins    DWORD PTR es:[rdi],dx
   14000f222:	(bad)  
   14000f223:	jne    0x14000f28b
   14000f225:	rex
   14000f226:	rex.R push rbp
   14000f228:	(bad)  
   14000f229:	and    al,0x63
   14000f22b:	push   0x745f7261
   14000f230:	jb     0x14000f293
   14000f232:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000f23a:	fs rex
   14000f23c:	rex
   14000f23d:	rex jae 0x14000f2b4
   14000f240:	fs rex
   14000f242:	add    BYTE PTR [rax],al
	...
   14000f24d:	add    BYTE PTR [rax],al
   14000f24f:	add    al,dl
   14000f251:	scas   al,BYTE PTR es:[rdi]
   14000f252:	add    BYTE PTR [rax+0x1],al
	...
   14000f25d:	add    BYTE PTR [rax],al
   14000f25f:	add    BYTE PTR [rsi],ch
   14000f261:	(bad)  
   14000f262:	push   r14
   14000f264:	(bad)  
   14000f265:	and    al,0x62
   14000f267:	(bad)  
   14000f268:	jae    0x14000f2d3
   14000f26a:	movsxd ebx,DWORD PTR [rdi+0x66]
   14000f26d:	jae    0x14000f2e3
   14000f26f:	jb     0x14000f2d6
   14000f271:	(bad)  
   14000f272:	ins    DWORD PTR es:[rdi],dx
   14000f273:	rex
   14000f274:	rex.R push rbp
   14000f276:	(bad)  
   14000f277:	and    al,0x63
   14000f279:	push   0x745f7261
   14000f27e:	jb     0x14000f2e1
   14000f280:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000f288:	fs rex
   14000f28a:	rex
   14000f28b:	rex jae 0x14000f302
   14000f28e:	fs rex
   14000f290:	add    BYTE PTR [rax],al
	...
   14000f29f:	add    al,dl
   14000f2a1:	scas   al,BYTE PTR es:[rdi]
   14000f2a2:	add    BYTE PTR [rax+0x1],al
	...
   14000f2ad:	add    BYTE PTR [rax],al
   14000f2af:	add    BYTE PTR [rsi],ch
   14000f2b1:	(bad)  
   14000f2b2:	push   r14
   14000f2b4:	(bad)  
   14000f2b5:	and    al,0x62
   14000f2b7:	(bad)  
   14000f2b8:	jae    0x14000f323
   14000f2ba:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000f2bd:	outs   dx,DWORD PTR ds:[rsi]
   14000f2be:	jae    0x14000f334
   14000f2c0:	jb     0x14000f327
   14000f2c2:	(bad)  
   14000f2c3:	ins    DWORD PTR es:[rdi],dx
   14000f2c4:	rex
   14000f2c5:	rex.R push rbp
   14000f2c7:	(bad)  
   14000f2c8:	and    al,0x63
   14000f2ca:	push   0x745f7261
   14000f2cf:	jb     0x14000f332
   14000f2d1:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000f2d9:	fs rex
   14000f2db:	rex
   14000f2dc:	rex jae 0x14000f353
   14000f2df:	fs rex
   14000f2e1:	add    BYTE PTR [rax],al
	...
   14000f2f0:	shr    BYTE PTR [rsi+0x14000],1
	...
   14000f2fe:	add    BYTE PTR [rax],al
   14000f300:	cs (bad) 
   14000f302:	push   r14
   14000f304:	(bad)  
   14000f305:	and    al,0x62
   14000f307:	(bad)  
   14000f308:	jae    0x14000f373
   14000f30a:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000f30d:	jae    0x14000f383
   14000f30f:	jb     0x14000f376
   14000f311:	(bad)  
   14000f312:	ins    DWORD PTR es:[rdi],dx
   14000f313:	rex
   14000f314:	rex.R push rbp
   14000f316:	(bad)  
   14000f317:	and    al,0x63
   14000f319:	push   0x745f7261
   14000f31e:	jb     0x14000f381
   14000f320:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000f328:	fs rex
   14000f32a:	rex
   14000f32b:	rex jae 0x14000f3a2
   14000f32e:	fs rex
   14000f330:	add    BYTE PTR [rax],al
   14000f333:	add    BYTE PTR [rax],al
   14000f335:	add    BYTE PTR [rax],al
   14000f337:	add    al,dl
   14000f339:	scas   al,BYTE PTR es:[rdi]
   14000f33a:	add    BYTE PTR [rax+0x1],al
	...
   14000f345:	add    BYTE PTR [rax],al
   14000f347:	add    BYTE PTR [rsi],ch
   14000f349:	(bad)  
   14000f34a:	push   r14
   14000f34c:	(bad)  
   14000f34d:	and    al,0x62
   14000f34f:	(bad)  
   14000f350:	jae    0x14000f3bb
   14000f352:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000f355:	outs   dx,DWORD PTR ds:[rsi]
   14000f356:	jae    0x14000f398
   14000f358:	rex.R push rbp
   14000f35a:	(bad)  
   14000f35b:	and    al,0x63
   14000f35d:	push   0x745f7261
   14000f362:	jb     0x14000f3c5
   14000f364:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000f36c:	fs rex
   14000f36e:	rex
   14000f36f:	rex jae 0x14000f3e6
   14000f372:	fs rex
   14000f374:	add    BYTE PTR [rax],al
   14000f377:	add    al,dl
   14000f379:	scas   al,BYTE PTR es:[rdi]
   14000f37a:	add    BYTE PTR [rax+0x1],al
	...
   14000f385:	add    BYTE PTR [rax],al
   14000f387:	add    BYTE PTR [rsi],ch
   14000f389:	(bad)  
   14000f38a:	push   r14
   14000f38c:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
   14000f393:	gs rex jae 0x14000f40b
   14000f397:	fs rex
   14000f399:	add    BYTE PTR [rax],al
   14000f39c:	add    BYTE PTR [rax],al
   14000f39e:	add    BYTE PTR [rax],al
   14000f3a0:	shr    BYTE PTR [rsi+0x14000],1
	...
   14000f3ae:	add    BYTE PTR [rax],al
   14000f3b0:	cs (bad) 
   14000f3b2:	push   r14
   14000f3b4:	(bad)  
   14000f3b5:	and    al,0x5f
   14000f3b7:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000f3b9:	jae    0x14000f41d
   14000f3bb:	rex
   14000f3bc:	rex.W
   14000f3bd:	rex jae 0x14000f434
   14000f3c0:	fs rex
   14000f3c2:	add    BYTE PTR [rax],al
	...
   14000f3cd:	add    BYTE PTR [rax],al
   14000f3cf:	add    al,dl
   14000f3d1:	scas   al,BYTE PTR es:[rdi]
   14000f3d2:	add    BYTE PTR [rax+0x1],al
	...
   14000f3dd:	add    BYTE PTR [rax],al
   14000f3df:	add    BYTE PTR [rsi],ch
   14000f3e1:	(bad)  
   14000f3e2:	push   r14
   14000f3e4:	(bad)  
   14000f3e5:	and    al,0x62
   14000f3e7:	(bad)  
   14000f3e8:	jae    0x14000f453
   14000f3ea:	movsxd ebx,DWORD PTR [rdi+0x6f]
   14000f3ed:	jae    0x14000f463
   14000f3ef:	jb     0x14000f456
   14000f3f1:	(bad)  
   14000f3f2:	ins    DWORD PTR es:[rdi],dx
   14000f3f3:	rex
   14000f3f4:	rex.R push rbp
   14000f3f6:	(bad)  
   14000f3f7:	and    al,0x63
   14000f3f9:	push   0x745f7261
   14000f3fe:	jb     0x14000f461
   14000f400:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000f408:	fs rex
   14000f40a:	rex
   14000f40b:	rex jae 0x14000f482
   14000f40e:	fs rex
   14000f410:	add    BYTE PTR [rax],al
	...
   14000f41f:	add    al,dl
   14000f421:	scas   al,BYTE PTR es:[rdi]
   14000f422:	add    BYTE PTR [rax+0x1],al
	...
   14000f42d:	add    BYTE PTR [rax],al
   14000f42f:	add    BYTE PTR [rsi],ch
   14000f431:	(bad)  
   14000f432:	push   r14
   14000f434:	cmp    al,0x6c
   14000f436:	(bad)  
   14000f437:	ins    DWORD PTR es:[rdi],dx
   14000f438:	(bad)  
   14000f439:	fs (bad) 
   14000f43b:	pop    rdi
   14000f43c:	ss xor esp,DWORD PTR fs:[rcx+0x35]
   14000f441:	movsxd edi,DWORD PTR gs:[rax]
   14000f444:	movsxd esi,DWORD PTR [rax]
   14000f446:	xor    ah,BYTE PTR gs:[rsi+0x36]
   14000f44a:	xor    DWORD PTR [rdx],esi
   14000f44c:	gs xor eax,0x64336539
   14000f452:	gs (bad) 
   14000f454:	cmp    BYTE PTR [rax],dh
   14000f456:	xor    BYTE PTR [rcx],bh
   14000f458:	xor    esi,DWORD PTR [rcx]
   14000f45a:	(bad)  
   14000f45b:	xor    BYTE PTR [rsi],bh
   14000f45d:	rex
   14000f45e:	add    al,dl
   14000f461:	scas   al,BYTE PTR es:[rdi]
   14000f462:	add    BYTE PTR [rax+0x1],al
	...
   14000f46d:	add    BYTE PTR [rax],al
   14000f46f:	add    BYTE PTR [rsi],ch
   14000f471:	(bad)  
   14000f472:	push   r14
   14000f474:	cmp    al,0x6c
   14000f476:	(bad)  
   14000f477:	ins    DWORD PTR es:[rdi],dx
   14000f478:	(bad)  
   14000f479:	fs (bad) 
   14000f47b:	pop    rdi
   14000f47c:	xor    eax,0x63323734
   14000f481:	xor    DWORD PTR [rax],edi
   14000f483:	xor    ah,BYTE PTR [rdx+0x65]
   14000f486:	cmp    DWORD PTR [rdx+0x31],esp
   14000f489:	cmp    BYTE PTR [rax+rsi*1],dh
   14000f48c:	movsxd esp,DWORD PTR fs:[rdx+rsi*1+0x39]
   14000f491:	xor    BYTE PTR [rdi],dh
   14000f493:	fs fs movsxd sp,DWORD PTR ss:[rbx+0x34]
   14000f49a:	xor    BYTE PTR gs:[rsi],bh
   14000f49d:	rex
   14000f49e:	add    al,dl
   14000f4a1:	scas   al,BYTE PTR es:[rdi]
   14000f4a2:	add    BYTE PTR [rax+0x1],al
	...
   14000f4ad:	add    BYTE PTR [rax],al
   14000f4af:	add    BYTE PTR [rsi],ch
   14000f4b1:	(bad)  
   14000f4b2:	push   r14
   14000f4b4:	(bad)  
   14000f4b5:	and    al,0x5f
   14000f4b7:	rex.RX jne 0x14000f528
   14000f4ba:	movsxd ebx,DWORD PTR [rdi+0x62]
   14000f4bd:	(bad)  
   14000f4be:	jae    0x14000f525
   14000f4c0:	rex pop rax
   14000f4c2:	and    al,0x24
   14000f4c4:	and    al,0x56
   14000f4c6:	rex jae 0x14000f53d
   14000f4c9:	fs rex
   14000f4cb:	add    BYTE PTR [rax],al
   14000f4ce:	add    BYTE PTR [rax],al
   14000f4d0:	shr    BYTE PTR [rsi+0x14000],1
	...
   14000f4de:	add    BYTE PTR [rax],al
   14000f4e0:	cs (bad) 
   14000f4e2:	push   r14
   14000f4e4:	(bad)  
   14000f4e5:	and    al,0x5f
   14000f4e7:	rex.RX jne 0x14000f558
   14000f4ea:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000f4ed:	ins    DWORD PTR es:[rdi],dx
   14000f4ee:	jo     0x14000f55c
   14000f4f0:	rex push rbp
   14000f4f2:	(bad)  
   14000f4f3:	and    al,0x5f
   14000f4f5:	rex.XB (bad) 
   14000f4f7:	ins    BYTE PTR es:[rdi],dx
   14000f4f8:	ins    BYTE PTR es:[rdi],dx
   14000f4f9:	(bad)  
   14000f4fa:	(bad)  
   14000f4fb:	ins    BYTE PTR es:[rdi],dx
   14000f4fc:	gs pop rdi
   14000f4fe:	outs   dx,DWORD PTR ds:[rsi]
   14000f4ff:	(bad)  
   14000f500:	push   0x40
   14000f502:	push   rsi
   14000f503:	cmp    al,0x6c
   14000f505:	(bad)  
   14000f506:	ins    DWORD PTR es:[rdi],dx
   14000f507:	(bad)  
   14000f508:	fs (bad) 
   14000f50a:	pop    rdi
   14000f50b:	xor    eax,0x63323734
   14000f510:	xor    DWORD PTR [rax],edi
   14000f512:	xor    ah,BYTE PTR [rdx+0x65]
   14000f515:	cmp    DWORD PTR [rdx+0x31],esp
   14000f518:	cmp    BYTE PTR [rax+rsi*1],dh
   14000f51b:	movsxd esp,DWORD PTR fs:[rdx+rsi*1+0x39]
   14000f520:	xor    BYTE PTR [rdi],dh
   14000f522:	fs fs movsxd sp,DWORD PTR ss:[rbx+0x34]
   14000f529:	xor    BYTE PTR gs:[rsi],bh
   14000f52c:	rex
   14000f52d:	and    al,0x30
   14000f530:	rex.B
   14000f531:	rex
   14000f532:	rex jae 0x14000f5a9
   14000f535:	fs rex
   14000f537:	rex push rsi
   14000f539:	(bad)  
   14000f53a:	and    al,0x61
   14000f53c:	ins    BYTE PTR es:[rdi],dx
   14000f53d:	ins    BYTE PTR es:[rdi],dx
   14000f53e:	outs   dx,DWORD PTR ds:[rsi]
   14000f53f:	movsxd esp,DWORD PTR [rcx+0x74]
   14000f542:	outs   dx,DWORD PTR ds:[rsi]
   14000f543:	jb     0x14000f585
   14000f545:	push   rsi
   14000f546:	(bad)  
   14000f547:	and    al,0x5f
   14000f549:	rex.RX jne 0x14000f5ba
   14000f54c:	movsxd ebx,DWORD PTR [rdi+0x63]
   14000f54f:	ins    BYTE PTR es:[rdi],dx
   14000f550:	(bad)  
   14000f551:	jae    0x14000f5c6
   14000f553:	rex pop rax
   14000f555:	and    al,0x24
   14000f557:	and    al,0x56
   14000f559:	rex jae 0x14000f5d0
   14000f55c:	fs rex
   14000f55e:	rex
   14000f55f:	xor    al,BYTE PTR [rax+0x58]
   14000f563:	and    al,0x24
   14000f565:	and    al,0x56
   14000f567:	rex jae 0x14000f5de
   14000f56a:	fs rex
   14000f56c:	add    BYTE PTR [rax],al
   14000f56f:	add    al,dl
   14000f571:	scas   al,BYTE PTR es:[rdi]
   14000f572:	add    BYTE PTR [rax+0x1],al
	...
   14000f57d:	add    BYTE PTR [rax],al
   14000f57f:	add    BYTE PTR [rsi],ch
   14000f581:	(bad)  
   14000f582:	push   r14
   14000f584:	je     0x14000f5ff
   14000f586:	jo     0x14000f5ed
   14000f588:	pop    rdi
   14000f589:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
	...

Disassembly of section .pdata:

0000000140010000 <.pdata>:
   140010000:	xor    BYTE PTR [rcx],dl
   140010002:	add    BYTE PTR [rax],al
   140010004:	push   rdi
   140010005:	adc    DWORD PTR [rax],eax
   140010007:	add    BYTE PTR [rax-0x41],dl
   14001000a:	add    BYTE PTR [rax],al
   14001000c:	(bad)  
   14001000d:	adc    DWORD PTR [rax],eax
   14001000f:	add    BYTE PTR [rcx+rdx*1-0x40b80000],dl
   140010016:	add    BYTE PTR [rax],al
   140010018:	movabs al,ds:0x10000011af000011
   140010021:	mov    edi,0x11af0000
   140010026:	add    BYTE PTR [rax],al
   140010028:	not    BYTE PTR [rcx]
   14001002a:	add    BYTE PTR [rax],al
   14001002c:	sbb    al,0xbf
   14001002e:	add    BYTE PTR [rax],al
   140010030:	not    BYTE PTR [rcx]
   140010032:	add    BYTE PTR [rax],al
   140010034:	not    DWORD PTR [rcx]
   140010036:	add    BYTE PTR [rax],al
   140010038:	xor    BYTE PTR [rdi+0x12000000],bh
   14001003e:	add    BYTE PTR [rax],al
   140010040:	movlps xmm0,QWORD PTR [rax]
   140010043:	add    al,cl
   140010045:	mov    edi,0x120f0000
   14001004a:	add    BYTE PTR [rax],al
   14001004c:	push   rsi
   14001004d:	adc    al,BYTE PTR [rax]
   14001004f:	add    ah,dl
   140010051:	mov    edi,0x12560000
   140010056:	add    BYTE PTR [rax],al
   140010058:	push   rdi
   140010059:	adc    al,BYTE PTR [rax]
   14001005b:	add    al,ch
   14001005d:	mov    edi,0x12800000
   140010062:	add    BYTE PTR [rax],al
   140010064:	mov    bh,0x12
   140010066:	add    BYTE PTR [rax],al
   140010068:	rex mov edi,0x12d00000
   14001006e:	add    BYTE PTR [rax],al
   140010070:	lock adc al,BYTE PTR [rax]
   140010073:	add    BYTE PTR [rax-0x40],al
   140010076:	add    BYTE PTR [rax],al
   140010078:	lock adc al,BYTE PTR [rax]
   14001007b:	add    BYTE PTR [rbx+rdx*1+0x0],dl
   14001007f:	add    BYTE PTR [rax-0x40],dl
   140010082:	add    BYTE PTR [rax],al
   140010084:	(bad)  
   140010085:	adc    eax,DWORD PTR [rax]
   140010087:	add    BYTE PTR [rax-0x7ffffed],al
   14001008d:	mov    edi,0x13e00000
   140010092:	add    BYTE PTR [rax],al
   140010094:	sub    eax,0x9c000014
   140010099:	mov    esi,0x14300000
   14001009e:	add    BYTE PTR [rax],al
   1400100a0:	jge    0x1400100b6
   1400100a2:	add    BYTE PTR [rax],al
   1400100a4:	add    al,al
   1400100a6:	add    BYTE PTR [rax],al
   1400100a8:	adc    BYTE PTR [rax+rax*1],0x0
   1400100ac:	int    0x14
   1400100ae:	add    BYTE PTR [rax],al
   1400100b0:	pop    rax
   1400100b1:	mov    edi,0x14d00000
   1400100b6:	add    BYTE PTR [rax],al
   1400100b8:	sbb    eax,0xd8000015
   1400100bd:	mov    esi,0x15200000
   1400100c2:	add    BYTE PTR [rax],al
   1400100c4:	ins    DWORD PTR es:[rdi],dx
   1400100c5:	adc    eax,0xbf900000
   1400100ca:	add    BYTE PTR [rax],al
   1400100cc:	jo     0x1400100e3
   1400100ce:	add    BYTE PTR [rax],al
   1400100d0:	add    al,0x16
   1400100d2:	add    BYTE PTR [rax],al
   1400100d4:	call   0x150010199
   1400100d9:	(bad)  
   1400100da:	add    BYTE PTR [rax],al
   1400100dc:	xchg   ecx,eax
   1400100dd:	(bad)  
   1400100de:	add    BYTE PTR [rax],al
   1400100e0:	push   0xffffffffa00000c1
   1400100e5:	(bad)  
   1400100e6:	add    BYTE PTR [rax],al
   1400100e8:	xor    al,0x17
   1400100ea:	add    BYTE PTR [rax],al
   1400100ec:	sub    cl,al
   1400100ee:	add    BYTE PTR [rax],al
   1400100f0:	jo     0x140010109
   1400100f2:	add    BYTE PTR [rax],al
   1400100f4:	movabs eax,ds:0xb00000c038000017
   1400100fd:	(bad)  
   1400100fe:	add    BYTE PTR [rax],al
   140010100:	loope  0x140010119
   140010102:	add    BYTE PTR [rax],al
   140010104:	loopne 0x1400100c6
   140010106:	add    BYTE PTR [rax],al
   140010108:	lock (bad) 
   14001010a:	add    BYTE PTR [rax],al
   14001010c:	and    DWORD PTR [rax],ebx
   14001010e:	add    BYTE PTR [rax],al
   140010110:	rex.W rol BYTE PTR [rax],0x0
   140010114:	xor    BYTE PTR [rcx],bl
   140010116:	add    BYTE PTR [rax],al
   140010118:	test   eax,0x38000019
   14001011d:	mov    ecx,0x19b00000
   140010122:	add    BYTE PTR [rax],al
   140010124:	loope  0x14001013f
   140010126:	add    BYTE PTR [rax],al
   140010128:	sub    BYTE PTR [rcx+0x19f00000],bh
   14001012e:	add    BYTE PTR [rax],al
   140010130:	sub    al,0x1a
   140010132:	add    BYTE PTR [rax],al
   140010134:	xor    BYTE PTR [rcx+0x1a500000],bh
   14001013a:	add    BYTE PTR [rax],al
   14001013c:	neg    DWORD PTR [rdx]
   14001013e:	add    BYTE PTR [rax],al
   140010140:	add    BYTE PTR [rax+rax*1+0x1b0000],bh
   140010147:	add    dl,dh
   140010149:	sbb    eax,DWORD PTR [rax]
   14001014b:	add    BYTE PTR [rbx+rdi*4+0x0],bh
   14001014f:	add    BYTE PTR [rax],al
   140010151:	sbb    al,0x0
   140010153:	add    BYTE PTR [rdx+0x1c],ch
   140010156:	add    BYTE PTR [rax],al
   140010158:	pop    rsp
   140010159:	mov    esi,0x1cc00000
   14001015e:	add    BYTE PTR [rax],al
   140010160:	icebp  
   140010161:	sbb    al,0x0
   140010163:	add    BYTE PTR [rax-0x47],dl
   140010166:	add    BYTE PTR [rax],al
   140010168:	adc    BYTE PTR [rip+0x1d920000],bl        # 0x15d93016e
   14001016e:	add    BYTE PTR [rax],al
   140010170:	movabs rsp,0x1e2300001e000000
   14001017a:	add    BYTE PTR [rax],al
   14001017c:	pop    rax
   14001017d:	mov    ecx,0x1e600000
   140010182:	add    BYTE PTR [rax],al
   140010184:	lods   eax,DWORD PTR ds:[rsi]
   140010185:	(bad)  
   140010186:	add    BYTE PTR [rax],al
   140010188:	sbb    al,0xbb
   14001018a:	add    BYTE PTR [rax],al
   14001018c:	mov    al,0x1e
   14001018e:	add    BYTE PTR [rax],al
   140010190:	fistp  WORD PTR [rsi]
   140010192:	add    BYTE PTR [rax],al
   140010194:	nop
   140010195:	mov    esi,0x1ee00000
   14001019a:	add    BYTE PTR [rax],al
   14001019c:	(bad)  
   14001019d:	(bad)  
   14001019e:	add    BYTE PTR [rax],al
   1400101a0:	rex.R mov ebx,0x1f100000
   1400101a6:	add    BYTE PTR [rax],al
   1400101a8:	ss (bad) 
   1400101aa:	add    BYTE PTR [rax],al
   1400101ac:	push   rsp
   1400101ad:	mov    ebx,0x1f400000
   1400101b2:	add    BYTE PTR [rax],al
   1400101b4:	data16 (bad) 
   1400101b6:	add    BYTE PTR [rax],al
   1400101b8:	je     0x140010175
   1400101ba:	add    BYTE PTR [rax],al
   1400101bc:	jo     0x1400101dd
   1400101be:	add    BYTE PTR [rax],al
   1400101c0:	xchg   esi,eax
   1400101c1:	(bad)  
   1400101c2:	add    BYTE PTR [rax],al
   1400101c4:	xor    BYTE PTR [rbx+0x1fa00000],bh
   1400101ca:	add    BYTE PTR [rax],al
   1400101cc:	or     BYTE PTR [rax],ah
   1400101ce:	add    BYTE PTR [rax],al
   1400101d0:	rex.R mov ecx,0x20200000
   1400101d6:	add    BYTE PTR [rax],al
   1400101d8:	and    ah,BYTE PTR [rcx]
   1400101da:	add    BYTE PTR [rax],al
   1400101dc:	cwde   
   1400101dd:	mov    ecx,0x21300000
   1400101e2:	add    BYTE PTR [rax],al
   1400101e4:	(bad)  
   1400101e5:	and    DWORD PTR [rax],eax
   1400101e7:	add    BYTE PTR [rax-0x43],dl
   1400101ea:	add    BYTE PTR [rax],al
   1400101ec:	(bad)  
   1400101ed:	and    DWORD PTR [rax],eax
   1400101ef:	add    BYTE PTR [rsi+0x5c000021],al
   1400101f5:	mov    ebp,0x21860000
   1400101fa:	add    BYTE PTR [rax],al
   1400101fc:	xchg   DWORD PTR [rcx],esp
   1400101fe:	add    BYTE PTR [rax],al
   140010200:	jo     0x1400101bf
   140010202:	add    BYTE PTR [rax],al
   140010204:	shl    BYTE PTR [rcx],1
   140010206:	add    BYTE PTR [rax],al
   140010208:	sbb    ah,BYTE PTR [rdx]
   14001020a:	add    BYTE PTR [rax],al
   14001020c:	test   BYTE PTR [rdx+0x221a0000],bh
   140010212:	add    BYTE PTR [rax],al
   140010214:	xor    BYTE PTR [rdx],ah
   140010216:	add    BYTE PTR [rax],al
   140010218:	xchg   esp,eax
   140010219:	mov    edx,0x22300000
   14001021e:	add    BYTE PTR [rax],al
   140010220:	push   rbp
   140010221:	and    al,BYTE PTR [rax]
   140010223:	add    BYTE PTR [rax+0x550000ba],ch
   140010229:	and    al,BYTE PTR [rax]
   14001022b:	add    BYTE PTR [rdx+riz*1+0x0],ch
   14001022f:	add    BYTE PTR [rdx+rdi*4+0x226c0000],bh
   140010236:	add    BYTE PTR [rax],al
   140010238:	xchg   edi,eax
   140010239:	and    al,BYTE PTR [rax]
   14001023b:	add    ah,cl
   14001023d:	mov    edx,0x23700000
   140010242:	add    BYTE PTR [rax],al
   140010244:	and    DWORD PTR [rax+rax*1],0x0
   140010248:	cmp    BYTE PTR [rbp+0x24900000],0x0
   14001024f:	add    BYTE PTR [rbx],bl
   140010251:	and    eax,0xbe100000
   140010256:	add    BYTE PTR [rax],al
   140010258:	and    BYTE PTR [rip+0x253b0000],ah        # 0x1653c025e
   14001025e:	add    BYTE PTR [rax],al
   140010260:	fdivr  QWORD PTR [rdx+0x253b0000]
   140010266:	add    BYTE PTR [rax],al
   140010268:	pop    rbp
   140010269:	and    eax,0xbae80000
   14001026e:	add    BYTE PTR [rax],al
   140010270:	pop    rbp
   140010271:	and    eax,0x25780000
   140010276:	add    BYTE PTR [rax],al
   140010278:	cld    
   140010279:	mov    edx,0x25800000
   14001027e:	add    BYTE PTR [rax],al
   140010280:	xchg   ebp,eax
   140010281:	and    eax,0xbe180000
   140010286:	add    BYTE PTR [rax],al
   140010288:	xchg   ebp,eax
   140010289:	and    eax,0x25f40000
   14001028e:	add    BYTE PTR [rax],al
   140010290:	and    al,0xbe
   140010292:	add    BYTE PTR [rax],al
   140010294:	hlt    
   140010295:	and    eax,0x25ff0000
   14001029a:	add    BYTE PTR [rax],al
   14001029c:	cmp    al,0xbe
   14001029e:	add    BYTE PTR [rax],al
   1400102a0:	adc    BYTE PTR [rsi],ah
   1400102a2:	add    BYTE PTR [rax],al
   1400102a4:	and    ah,BYTE PTR [rsi]
   1400102a6:	add    BYTE PTR [rax],al
   1400102a8:	or     al,0xbb
   1400102aa:	add    BYTE PTR [rax],al
   1400102ac:	xor    BYTE PTR [rsi],ah
   1400102ae:	add    BYTE PTR [rax],al
   1400102b0:	rex.X
   1400102b1:	add    BYTE PTR es:[rax],al
   1400102b4:	rex.WR movabs rsi,0x2662000026500000
   1400102be:	add    BYTE PTR [rax],al
   1400102c0:	adc    al,0xbb
   1400102c2:	add    BYTE PTR [rax],al
   1400102c4:	jo     0x1400102ec
   1400102c6:	add    BYTE PTR [rax],al
   1400102c8:	(bad)  
   1400102c9:	add    BYTE PTR es:[rax],al
   1400102cc:	push   rsp
   1400102cd:	mov    esi,0x26900000
   1400102d2:	add    BYTE PTR [rax],al
   1400102d4:	mov    edx,0x20000026
   1400102d9:	mov    ecx,0x26c00000
   1400102de:	add    BYTE PTR [rax],al
   1400102e0:	mul    DWORD PTR [rsi]
   1400102e2:	add    BYTE PTR [rax],al
   1400102e4:	loopne 0x1400102a2
   1400102e6:	add    BYTE PTR [rax],al
   1400102e8:	add    BYTE PTR [rdi],ah
   1400102ea:	add    BYTE PTR [rax],al
   1400102ec:	sub    ah,BYTE PTR [rdi]
   1400102ee:	add    BYTE PTR [rax],al
   1400102f0:	sbb    BYTE PTR [rcx+0x27300000],bh
   1400102f6:	add    BYTE PTR [rax],al
   1400102f8:	addr32 (bad) 
   1400102fa:	add    BYTE PTR [rax],al
   1400102fc:	movabs al,ds:0xa2000027700000bc
   140010305:	(bad)  
   140010306:	add    BYTE PTR [rax],al
   140010308:	push   rax
   140010309:	mov    esp,0x27a20000
   14001030e:	add    BYTE PTR [rax],al
   140010310:	cmp    al,0x29
   140010312:	add    BYTE PTR [rax],al
   140010314:	(bad)  
   140010315:	mov    esp,0x293c0000
   14001031a:	add    BYTE PTR [rax],al
   14001031c:	sub    QWORD PTR [r8],r8
   14001031f:	add    BYTE PTR [rsp+rdi*4+0x0],dh
   140010323:	add    BYTE PTR [rbp+0x29],cl
   140010326:	add    BYTE PTR [rax],al
   140010328:	xchg   ebx,eax
   140010329:	sub    DWORD PTR [rax],eax
   14001032b:	add    BYTE PTR [rsp+rdi*4+0x29b00000],al
   140010332:	add    BYTE PTR [rax],al
   140010334:	shr    BYTE PTR [rdx],cl
   140010336:	add    BYTE PTR [rax],al
   140010338:	(bad)  
   140010339:	mov    ecx,0x2b000000
   14001033e:	add    BYTE PTR [rax],al
   140010340:	(bad)  
   140010341:	sub    al,0x0
   140010343:	add    BYTE PTR [rcx+rdi*4+0x0],dh
   140010347:	add    BYTE PTR [rax+0x2c],al
   14001034a:	add    BYTE PTR [rax],al
   14001034c:	jb     0x14001037a
   14001034e:	add    BYTE PTR [rax],al
   140010350:	call   0x100010411
   140010355:	sub    al,0x0
   140010357:	add    BYTE PTR [rip+0xffffffffa800002d],cl        # 0xe801038a
   14001035d:	mov    esp,0x2d100000
   140010362:	add    BYTE PTR [rax],al
   140010364:	sub    al,0x2d
   140010366:	add    BYTE PTR [rax],al
   140010368:	adc    BYTE PTR [rcx+0x2d700000],bh
   14001036e:	add    BYTE PTR [rax],al
   140010370:	mov    al,0x2d
   140010372:	add    BYTE PTR [rax],al
   140010374:	push   0xfffffffff00000bb
   140010379:	sub    eax,0x2e270000
   14001037e:	add    BYTE PTR [rax],al
   140010380:	sub    BYTE PTR [rbx+0x2e300000],bh
   140010386:	add    BYTE PTR [rax],al
   140010388:	stc    
   140010389:	add    BYTE PTR cs:[rax],al
   14001038c:	mov    WORD PTR [rcx+0x2f000000],?
   140010392:	add    BYTE PTR [rax],al
   140010394:	ds (bad) 
   140010396:	add    BYTE PTR [rax],al
   140010398:	test   BYTE PTR [rcx+0x30300000],bh
   14001039e:	add    BYTE PTR [rax],al
   1400103a0:	xchg   edx,eax
   1400103a1:	xor    BYTE PTR [rax],al
   1400103a3:	add    BYTE PTR [rax],bh
   1400103a5:	mov    ebx,0x30a00000
   1400103aa:	add    BYTE PTR [rax],al
   1400103ac:	in     eax,dx
   1400103ad:	xor    BYTE PTR [rax],al
   1400103af:	add    BYTE PTR [rbx+rdi*4+0x0],cl
   1400103b3:	add    al,dh
   1400103b5:	xor    BYTE PTR [rax],al
   1400103b7:	add    BYTE PTR [rdx+0x31],dl
   1400103ba:	add    BYTE PTR [rax],al
   1400103bc:	pop    rsp
   1400103bd:	mov    ebx,0x31a00000
   1400103c2:	add    BYTE PTR [rax],al
   1400103c4:	jns    0x1400103f8
   1400103c6:	add    BYTE PTR [rax],al
   1400103c8:	lock mov esp,0x33500000
   1400103ce:	add    BYTE PTR [rax],al
   1400103d0:	xchg   edi,eax
   1400103d1:	xor    eax,DWORD PTR [rax]
   1400103d3:	add    BYTE PTR [rax-0x2fffff44],bl
   1400103d9:	xor    eax,DWORD PTR [rax]
   1400103db:	add    BYTE PTR [rax+0x34],cl
   1400103de:	add    BYTE PTR [rax],al
   1400103e0:	je     0x1400103a3
   1400103e2:	add    BYTE PTR [rax],al
   1400103e4:	push   rax
   1400103e5:	xor    al,0x0
   1400103e7:	add    BYTE PTR [rsi-0x7bffffcc],dl
   1400103ed:	rol    DWORD PTR [rax],0x0
   1400103f0:	shl    BYTE PTR [rax+rax*1],0x0
   1400103f4:	mov    BYTE PTR [rsi],dh
   1400103f6:	add    BYTE PTR [rax],al
   1400103f8:	adc    al,0xc7
   1400103fa:	add    BYTE PTR [rax],al
   1400103fc:	nop
   1400103fd:	add    BYTE PTR ss:[rax],al
   140010400:	fnstenv [rsi]
   140010402:	add    BYTE PTR [rax],al
   140010404:	push   0xffffffffe00000c4
   140010409:	add    BYTE PTR ss:[rax],al
   14001040c:	mov    esi,0x28000037
   140010411:	(bad)  
   140010412:	add    BYTE PTR [rax],al
   140010414:	shl    BYTE PTR [rdi],0x0
   140010417:	add    BYTE PTR [rbx],cl
   140010419:	cmp    BYTE PTR [rax],al
   14001041b:	add    BYTE PTR [rax],ah
   14001041d:	(bad)  
   14001041e:	add    BYTE PTR [rax],al
   140010420:	adc    BYTE PTR [rax],bh
   140010422:	add    BYTE PTR [rax],al
   140010424:	lock cmp BYTE PTR [rax],al
   140010427:	add    al,ah
   140010429:	ret    
   14001042a:	add    BYTE PTR [rax],al
   14001042c:	lock cmp BYTE PTR [rax],al
   14001042f:	add    BYTE PTR [rcx],bl
   140010431:	cmp    DWORD PTR [rax],eax
   140010433:	add    BYTE PTR [rax+0x200000c3],dl
   140010439:	cmp    DWORD PTR [rax],eax
   14001043b:	add    BYTE PTR [rax],bh
   14001043d:	cmp    DWORD PTR [rax],eax
   14001043f:	add    BYTE PTR [rax+0x400000c3],bl
   140010445:	cmp    DWORD PTR [rax],eax
   140010447:	add    BYTE PTR [rax+0x39],bl
   14001044a:	add    BYTE PTR [rax],al
   14001044c:	movabs al,ds:0x71000039700000c3
   140010455:	cmp    al,BYTE PTR [rax]
   140010457:	add    al,bl
   140010459:	mov    DWORD PTR [rax],0x3aa000
   14001045f:	add    BYTE PTR [rbx+rdi*1],dh
   140010462:	add    BYTE PTR [rax],al
   140010464:	clc    
   140010465:	(bad)  
   140010466:	add    BYTE PTR [rax],al
   140010468:	rex cmp eax,DWORD PTR [rax]
   14001046b:	add    BYTE PTR [rsi+0x3c],bh
   14001046e:	add    BYTE PTR [rax],al
   140010470:	jo     0x140010436
   140010472:	add    BYTE PTR [rax],al
   140010474:	movabs al,ds:0x9400003cca00003c
   14001047d:	rol    DWORD PTR [rax],0x0
   140010480:	add    BYTE PTR [rip+0x3d2c0000],bh        # 0x17d2d0486
   140010486:	add    BYTE PTR [rax],al
   140010488:	adc    al,cl
   14001048a:	add    BYTE PTR [rax],al
   14001048c:	xor    BYTE PTR [rip+0x3dac0000],bh        # 0x17dad0492
   140010492:	add    BYTE PTR [rax],al
   140010494:	sbb    al,cl
   140010496:	add    BYTE PTR [rax],al
   140010498:	mov    al,0x3d
   14001049a:	add    BYTE PTR [rax],al
   14001049c:	sbb    DWORD PTR [rsi],edi
   14001049e:	add    BYTE PTR [rax],al
   1400104a0:	xor    ch,al
   1400104a2:	add    BYTE PTR [rax],al
   1400104a4:	and    BYTE PTR [rsi],bh
   1400104a6:	add    BYTE PTR [rax],al
   1400104a8:	jae    0x1400104e8
   1400104aa:	add    BYTE PTR [rax],al
   1400104ac:	call   0xe0010575
   1400104b1:	add    BYTE PTR ds:[rax],al
   1400104b4:	(bad)  
   1400104b5:	add    BYTE PTR ds:[rax],al
   1400104b8:	mov    dl,al
   1400104ba:	add    BYTE PTR [rax],al
   1400104bc:	sar    BYTE PTR [rsi],1
   1400104be:	add    BYTE PTR [rax],al
   1400104c0:	adc    bh,BYTE PTR [rdi]
   1400104c2:	add    BYTE PTR [rax],al
   1400104c4:	push   rax
   1400104c5:	enter  0x0,0xb0
   1400104c9:	(bad)  
   1400104ca:	add    BYTE PTR [rax],al
   1400104cc:	sub    DWORD PTR [rax+0x0],eax
   1400104cf:	add    BYTE PTR [rdi+rax*8],cl
   1400104d2:	add    BYTE PTR [rax],al
   1400104d4:	rex
   1400104d5:	add    BYTE PTR [rax],al
   1400104d8:	outs   dx,DWORD PTR ds:[rsi]
   1400104d9:	add    BYTE PTR [rax],al
   1400104dc:	hlt    
   1400104dd:	mov    BYTE PTR [rax],0x0
   1400104e0:	jo     0x140010522
   1400104e2:	add    BYTE PTR [rax],al
   1400104e4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400104e5:	add    BYTE PTR [rax],al
   1400104e8:	add    bh,al
   1400104ea:	add    BYTE PTR [rax],al
   1400104ec:	lock add BYTE PTR [rax],al
   1400104f0:	add    DWORD PTR [rbx+0x0],eax
   1400104f3:	add    BYTE PTR [rsi+rax*8+0x43100000],ch
   1400104fa:	add    BYTE PTR [rax],al
   1400104fc:	(bad)  
   1400104fe:	add    BYTE PTR [rax],al
   140010500:	nop
   140010501:	ret    0x0
   140010504:	jo     0x140010549
   140010506:	add    BYTE PTR [rax],al
   140010508:	in     eax,0x43
   14001050a:	add    BYTE PTR [rax],al
   14001050c:	movabs al,ds:0x38000043f00000c6
   140010515:	add    BYTE PTR [rax],r8b
   140010518:	call   0x1500105e3
   14001051d:	add    BYTE PTR [r8],r8b
   140010520:	rex.RX add BYTE PTR cs:[rax],r8b
   140010524:	pushf  
   140010525:	rol    DWORD PTR [rax],0x0
   140010528:	push   rax
   140010529:	rex.RX add BYTE PTR [rax],r8b
   14001052c:	xchg   ebp,eax
   14001052d:	rex.RXB add BYTE PTR [r8],r8b
   140010530:	mov    ah,0xc1
   140010532:	add    BYTE PTR [rax],al
   140010534:	movabs al,ds:0xc8000048a2000047
   14001053d:	rol    DWORD PTR [rax],0x0
   140010540:	mov    al,0x48
   140010542:	add    BYTE PTR [rax],al
   140010544:	scas   al,BYTE PTR es:[rdi]
   140010545:	rex.WB add BYTE PTR [r8],al
   140010548:	fadd   st(1),st
   14001054a:	add    BYTE PTR [rax],al
   14001054c:	mov    al,0x49
   14001054e:	add    BYTE PTR [rax],al
   140010550:	ror    DWORD PTR [rcx+0x0],1
   140010553:	add    BYTE PTR [rcx+rax*8+0x4a000000],cl
   14001055a:	add    BYTE PTR [rax],al
   14001055c:	xchg   BYTE PTR [rdx+0x0],cl
   14001055f:	add    BYTE PTR [rax-0x3b],dh
   140010562:	add    BYTE PTR [rax],al
   140010564:	nop
   140010565:	rex.WX add BYTE PTR [rax],al
   140010568:	retf   0x4a
   14001056b:	add    al,dh
   14001056d:	(bad)  
   14001056e:	add    BYTE PTR [rax],al
   140010570:	lock rex.WX add BYTE PTR [rax],al
   140010574:	retf   0x4b
   140010577:	add    BYTE PTR [rdx+rax*8+0x4bd00000],bl
   14001057e:	add    BYTE PTR [rax],al
   140010580:	xchg   edx,eax
   140010581:	rex.WR add BYTE PTR [rax],r8b
   140010584:	test   al,0xc3
   140010586:	add    BYTE PTR [rax],al
   140010588:	movabs al,ds:0x9400004cf000004c
   140010591:	mov    BYTE PTR [rax],0x0
   140010594:	lock rex.WR add BYTE PTR [rax],r8b
   140010598:	rex.WRB add BYTE PTR es:[r8],r8b
   14001059c:	in     al,dx
   14001059d:	rol    DWORD PTR [rax],0x0
   1400105a0:	rex.WRB add BYTE PTR es:[r8],r8b
   1400105a4:	pop    rdx
   1400105a5:	rex.WRB add BYTE PTR [r8],r8b
   1400105a8:	cld    
   1400105a9:	rol    DWORD PTR [rax],0x0
   1400105ac:	pop    rdx
   1400105ad:	rex.WRB add BYTE PTR [r8],r8b
   1400105b0:	rex.XB
   1400105b1:	rex.WRX add BYTE PTR [rax],r8b
   1400105b4:	adc    dl,al
   1400105b6:	add    BYTE PTR [rax],al
   1400105b8:	rex.XB
   1400105b9:	rex.WRX add BYTE PTR [rax],r8b
   1400105bc:	pop    rcx
   1400105bd:	rex.WRX add BYTE PTR [rax],r8b
   1400105c0:	and    al,0xc2
   1400105c2:	add    BYTE PTR [rax],al
   1400105c4:	pop    rcx
   1400105c5:	rex.WRX add BYTE PTR [rax],r8b
   1400105c8:	rex.WRX add BYTE PTR [eax],r8b
   1400105cc:	xor    al,0xc2
   1400105ce:	add    BYTE PTR [rax],al
   1400105d0:	jo     0x140010620
   1400105d2:	add    BYTE PTR [rax],al
   1400105d4:	and    DWORD PTR [rdi+0x0],ecx
   1400105d7:	add    BYTE PTR [rdx+rax*8+0x0],al
   1400105db:	add    BYTE PTR [rcx],ah
   1400105dd:	rex.WRXB add BYTE PTR [r8],r8b
   1400105e0:	mov    dh,0x4f
   1400105e2:	add    BYTE PTR [rax],al
   1400105e4:	pop    rax
   1400105e5:	ret    0x0
   1400105e8:	mov    dh,0x4f
   1400105ea:	add    BYTE PTR [rax],al
   1400105ec:	(bad)  
   1400105ed:	rex.WRXB add BYTE PTR [r8],r8b
   1400105f0:	ins    BYTE PTR es:[rdi],dx
   1400105f1:	ret    0x0
   1400105f4:	add    BYTE PTR [rax+0x0],dl
   1400105f7:	add    BYTE PTR [rdi+0x8000051],bh
   1400105fd:	ret    
   1400105fe:	add    BYTE PTR [rax],al
   140010600:	rcl    BYTE PTR [rcx+0x0],1
   140010603:	add    bl,bl
   140010605:	push   rdx
   140010606:	add    BYTE PTR [rax],al
   140010608:	cmp    ch,al
   14001060a:	add    BYTE PTR [rax],al
   14001060c:	loopne 0x140010660
   14001060e:	add    BYTE PTR [rax],al
   140010610:	mov    ebx,0x80000055
   140010615:	(bad)
   140010618:	rcl    BYTE PTR [rbp+0x0],0x0
   14001061c:	ins    BYTE PTR es:[rdi],dx
   14001061d:	push   rsi
   14001061e:	add    BYTE PTR [rax],al
   140010620:	rol    ch,0x0
   140010623:	add    BYTE PTR [rax+0x56],dh
   140010626:	add    BYTE PTR [rax],al
   140010628:	mov    ch,0x56
   14001062a:	add    BYTE PTR [rax],al
   14001062c:	jl     0x1400105f0
   14001062e:	add    BYTE PTR [rax],al
   140010630:	rcl    BYTE PTR [rsi+0x0],0x0
   140010634:	lods   eax,DWORD PTR ds:[rsi]
   140010635:	push   rdi
   140010636:	add    BYTE PTR [rax],al
   140010638:	cmp    dh,al
   14001063a:	add    BYTE PTR [rax],al
   14001063c:	mov    al,0x57
   14001063e:	add    BYTE PTR [rax],al
   140010640:	lea    ebx,[rax+0x0]
   140010643:	add    BYTE PTR [rsi+rax*8+0x0],cl
   140010647:	add    BYTE PTR [rax-0x23ffffa8],ah
   14001064d:	pop    rax
   14001064e:	add    BYTE PTR [rax],al
   140010650:	(bad)  
   140010651:	mov    BYTE PTR [rax],0x0
   140010654:	fcomp  QWORD PTR [rax+0x0]
   140010657:	add    BYTE PTR [rcx+0x59],cl
   14001065a:	add    BYTE PTR [rax],al
   14001065c:	push   0x490000c6
   140010661:	pop    rcx
   140010662:	add    BYTE PTR [rax],al
   140010664:	push   rcx
   140010665:	pop    rcx
   140010666:	add    BYTE PTR [rax],al
   140010668:	jl     0x140010630
   14001066a:	add    BYTE PTR [rax],al
   14001066c:	jo     0x1400106c7
   14001066e:	add    BYTE PTR [rax],al
   140010670:	mov    bl,0x59
   140010672:	add    BYTE PTR [rax],al
   140010674:	mov    esi,es
   140010676:	add    BYTE PTR [rax],al
   140010678:	loopne 0x1400106d3
   14001067a:	add    BYTE PTR [rax],al
   14001067c:	mov    cl,0x5c
   14001067e:	add    BYTE PTR [rax],al
   140010680:	cld    
   140010681:	(bad)
   140010684:	rcr    BYTE PTR [rax+rax*1+0x0],0xf3
   140010689:	pop    rsp
   14001068a:	add    BYTE PTR [rax],al
   14001068c:	int3   
   14001068d:	(bad)
   140010690:	repz pop rsp
   140010692:	add    BYTE PTR [rax],al
   140010694:	minps  xmm0,XMMWORD PTR [rax]
   140010697:	add    ah,dl
   140010699:	(bad)
   14001069c:	minps  xmm0,XMMWORD PTR [rax]
   14001069f:	add    BYTE PTR [rdi],ah
   1400106a1:	pop    rbp
   1400106a2:	add    BYTE PTR [rax],al
   1400106a4:	call   0x1a001076e
   1400106a9:	pop    rbp
   1400106aa:	add    BYTE PTR [rax],al
   1400106ac:	mov    bl,BYTE PTR [rbp+0x0]
   1400106af:	add    BYTE PTR [rsi+rcx*8+0x5db00000],bl
   1400106b6:	add    BYTE PTR [rax],al
   1400106b8:	loope  0x140010717
   1400106ba:	add    BYTE PTR [rax],al
   1400106bc:	mov    esp,0xcd
   1400106c1:	pop    rsi
   1400106c2:	add    BYTE PTR [rax],al
   1400106c4:	push   rdx
   1400106c5:	pop    rsi
   1400106c6:	add    BYTE PTR [rax],al
   1400106c8:	cwde   
   1400106c9:	int3   
   1400106ca:	add    BYTE PTR [rax],al
   1400106cc:	(bad)  
   1400106cd:	pop    rsi
   1400106ce:	add    BYTE PTR [rax],al
   1400106d0:	cwde   
   1400106d1:	pop    rsi
   1400106d2:	add    BYTE PTR [rax],al
   1400106d4:	int3   
   1400106d5:	iret   
   1400106d6:	add    BYTE PTR [rax],al
   1400106d8:	movabs al,ds:0xac00005ed300005e
   1400106e1:	(bad)  
   1400106e2:	add    BYTE PTR [rax],al
   1400106e4:	add    BYTE PTR [rdi+0x0],bl
   1400106e7:	add    BYTE PTR [rcx+0x5f],ch
   1400106ea:	add    BYTE PTR [rax],al
   1400106ec:	add    al,0xcf
   1400106ee:	add    BYTE PTR [rax],al
   1400106f0:	mov    al,0x5f
   1400106f2:	add    BYTE PTR [rax],al
   1400106f4:	(bad)  
   1400106f5:	pop    rdi
   1400106f6:	add    BYTE PTR [rax],al
   1400106f8:	mov    ah,0xce
   1400106fa:	add    BYTE PTR [rax],al
   1400106fc:	shl    BYTE PTR [rax+0x0],0x0
   140010700:	gs (bad) 
   140010702:	add    BYTE PTR [rax],al
   140010704:	mov    esp,0x700000ce
   140010709:	(bad)  
   14001070a:	add    BYTE PTR [rax],al
   14001070c:	sahf   
   14001070d:	(bad)  
   14001070e:	add    BYTE PTR [rax],al
   140010710:	nop
   140010711:	iret   
   140010712:	add    BYTE PTR [rax],al
   140010714:	shl    BYTE PTR [rcx+0x0],0x0
   140010718:	xlat   BYTE PTR ds:[rbx]
   140010719:	(bad)  
   14001071a:	add    BYTE PTR [rax],al
   14001071c:	(bad)  
   14001071d:	iret   
   14001071e:	add    BYTE PTR [rax],al
   140010720:	loopne 0x140010783
   140010722:	add    BYTE PTR [rax],al
   140010724:	outs   dx,DWORD PTR ds:[rsi]
   140010725:	(bad)  
   140010726:	add    BYTE PTR [rax],al
   140010728:	fmul   st(7),st
   14001072a:	add    BYTE PTR [rax],al
   14001072c:	jo     0x140010790
   14001072e:	add    BYTE PTR [rax],al
   140010730:	xchg   DWORD PTR [rdx+0x0],esp
   140010733:	add    ah,al
   140010735:	iret   
   140010736:	add    BYTE PTR [rax],al
   140010738:	loopne 0x14001079c
   14001073a:	add    BYTE PTR [rax],al
   14001073c:	cmp    BYTE PTR [rbx+0x0],ah
   14001073f:	add    BYTE PTR [rax+0x400000d0],dl
   140010745:	movsxd eax,DWORD PTR [rax]
   140010747:	add    BYTE PTR [rax+0x63],bl
   14001074d:	rol    DWORD PTR [rax],1
   14001074f:	add    BYTE PTR [rax-0x7ffff9d],ah
   140010755:	movsxd eax,DWORD PTR [rax]
   140010757:	add    al,cl
   140010759:	rol    BYTE PTR [rax],1
   14001075b:	add    BYTE PTR [rax-0x1dffff9c],dh
   140010761:	add    BYTE PTR fs:[rax],al
   140010764:	xchg   esp,eax
   140010765:	(bad)  
   140010766:	add    BYTE PTR [rax],al
   140010768:	jo     0x1400107d0
   14001076a:	add    BYTE PTR [rax],al
   14001076c:	mov    ecx,0xf4000066
   140010771:	leave  
   140010772:	add    BYTE PTR [rax],al
   140010774:	jo     0x1400107dd
   140010776:	add    BYTE PTR [rax],al
   140010778:	movabs eax,ds:0xcd88000067
   140010781:	push   0x682c0000
   140010786:	add    BYTE PTR [rax],al
   140010788:	call   0x180010859
   14001078d:	push   0x686f0000
   140010792:	add    BYTE PTR [rax],al
   140010794:	cld    
   140010795:	leave  
   140010796:	add    BYTE PTR [rax],al
   140010798:	jo     0x140010802
   14001079a:	add    BYTE PTR [rax],al
   14001079c:	mov    ecx,0xf8000068
   1400107a1:	int3   
   1400107a2:	add    BYTE PTR [rax],al
   1400107a4:	shr    BYTE PTR [rax+0x0],0x0
   1400107a8:	shr    DWORD PTR [rax+0x0],cl
   1400107ab:	add    BYTE PTR [rax-0x2cffff33],dl
   1400107b1:	push   0x68f60000
   1400107b6:	add    BYTE PTR [rax],al
   1400107b8:	cwde   
   1400107b9:	int    0x0
   1400107bb:	add    dh,dh
   1400107bd:	push   0x68fc0000
   1400107c2:	add    BYTE PTR [rax],al
   1400107c4:	lods   al,BYTE PTR ds:[rsi]
   1400107c5:	int    0x0
   1400107c7:	add    BYTE PTR [rax+0x6a],ah
   1400107ca:	add    BYTE PTR [rax],al
   1400107cc:	jg     0x140010838
   1400107ce:	add    BYTE PTR [rax],al
   1400107d0:	loopne 0x14001079e
   1400107d2:	add    BYTE PTR [rax],al
   1400107d4:	sub    BYTE PTR [rdx+0x0],0x0
   1400107d8:	sub    eax,0xc800006b
   1400107dd:	(bad)  
   1400107de:	add    BYTE PTR [rax],al
   1400107e0:	xor    BYTE PTR [rbx+0x0],ch
   1400107e3:	add    dh,bh
   1400107e5:	imul   eax,DWORD PTR [rax],0x0
   1400107e8:	push   rax
   1400107e9:	int3   
   1400107ea:	add    BYTE PTR [rax],al
   1400107ec:	xor    BYTE PTR [rax+rax*1+0x0],ch
   1400107f0:	push   rsi
   1400107f1:	ins    BYTE PTR es:[rdi],dx
   1400107f2:	add    BYTE PTR [rax],al
   1400107f4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400107f5:	(bad)  
   1400107f6:	add    BYTE PTR [rax],al
   1400107f8:	(bad)  
   1400107f9:	ins    BYTE PTR es:[rdi],dx
   1400107fa:	add    BYTE PTR [rax],al
   1400107fc:	xchg   BYTE PTR [rax+rax*1+0x0],ch
   140010800:	mov    esp,0xb00000cf
   140010805:	ins    BYTE PTR es:[rdi],dx
   140010806:	add    BYTE PTR [rax],al
   140010808:	and    ch,BYTE PTR [rbp+0x0]
   14001080b:	add    ah,cl
   14001080d:	retf   
   14001080e:	add    BYTE PTR [rax],al
   140010810:	rex ins DWORD PTR es:[rdi],dx
   140010812:	add    BYTE PTR [rax],al
   140010814:	sub    BYTE PTR [rbp+0x0],0x0
   140010818:	cwde   
   140010819:	iret   
   14001081a:	add    BYTE PTR [rax],al
   14001081c:	sub    BYTE PTR [rbp+0x0],0x0
   140010820:	pushf  
   140010821:	outs   dx,BYTE PTR ds:[rsi]
   140010822:	add    BYTE PTR [rax],al
   140010824:	cmp    al,0xca
   140010826:	add    BYTE PTR [rax],al
   140010828:	movabs al,ds:0x6eb300006e
   140010831:	int    0x0
   140010833:	add    BYTE PTR [rbx-0x29ffff92],dh
   140010839:	outs   dx,BYTE PTR ds:[rsi]
   14001083a:	add    BYTE PTR [rax],al
   14001083c:	or     ch,cl
   14001083e:	add    BYTE PTR [rax],al
   140010840:	(bad)  
   140010841:	outs   dx,BYTE PTR ds:[rsi]
   140010842:	add    BYTE PTR [rax],al
   140010844:	fsubr  QWORD PTR [rsi+0x0]
   140010847:	add    BYTE PTR [rcx*8+0x6ee00000],bl
   14001084e:	add    BYTE PTR [rax],al
   140010850:	adc    ch,BYTE PTR [rdi+0x0]
   140010853:	add    al,bl
   140010855:	retf   
   140010856:	add    BYTE PTR [rax],al
   140010858:	xor    BYTE PTR [rdi+0x0],ch
   14001085b:	add    BYTE PTR [rdi+0x6f],bl
   14001085e:	add    BYTE PTR [rax],al
   140010860:	test   al,0xcf
   140010862:	add    BYTE PTR [rax],al
   140010864:	shr    BYTE PTR [rdi+0x0],1
   140010867:	add    BYTE PTR [rsi],ch
   140010869:	jo     0x14001086b
   14001086b:	add    al,ah
   14001086d:	(bad)  
   14001086e:	add    BYTE PTR [rax],al
   140010870:	xor    BYTE PTR [rax+0x0],dh
   140010873:	add    BYTE PTR [rbx],dh
   140010875:	jno    0x140010877
   140010877:	add    al,dh
   140010879:	(bad)  
   14001087a:	add    BYTE PTR [rax],al
   14001087c:	push   rax
   14001087d:	jno    0x14001087f
   14001087f:	add    BYTE PTR [rbx+0x34000071],ah
   140010885:	retf   
   140010886:	add    BYTE PTR [rax],al
   140010888:	movabs ds:0x44000071b9000071,eax
   140010891:	retf   
   140010892:	add    BYTE PTR [rax],al
   140010894:	mov    ecx,0xdf000071
   140010899:	jno    0x14001089b
   14001089b:	add    BYTE PTR [rax-0x35],bl
   14001089e:	add    BYTE PTR [rax],al
   1400108a0:	fbstp  TBYTE PTR [rcx+0x0]
   1400108a3:	add    bh,dh
   1400108a5:	jno    0x1400108a7
   1400108a7:	add    BYTE PTR [rbx+rcx*8+0x0],ch
   1400108ab:	add    bh,dh
   1400108ad:	jno    0x1400108af
   1400108af:	add    BYTE PTR [rdx],ah
   1400108b1:	jb     0x1400108b3
   1400108b3:	add    BYTE PTR [rbx+rcx*8+0x0],bh
   1400108b7:	add    BYTE PTR [rax-0x1fffff8e],ah
   1400108bd:	jb     0x1400108bf
   1400108bf:	add    BYTE PTR [rax+0xcf],ah
   1400108c5:	jae    0x1400108c7
   1400108c7:	add    dl,ch
   1400108c9:	jae    0x1400108cb
   1400108cb:	add    BYTE PTR [rax+0x500000cc],cl
   1400108d1:	je     0x1400108d3
   1400108d3:	add    BYTE PTR [rdx+0x74],bh
   1400108d6:	add    BYTE PTR [rax],al
   1400108d8:	sub    al,0xcd
   1400108da:	add    BYTE PTR [rax],al
   1400108dc:	jp     0x140010952
   1400108de:	add    BYTE PTR [rax],al
   1400108e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400108e1:	je     0x1400108e3
   1400108e3:	add    BYTE PTR [rax-0x33],al
   1400108e6:	add    BYTE PTR [rax],al
   1400108e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400108e9:	je     0x1400108eb
   1400108eb:	add    BYTE PTR [rcx+0x54000074],bh
   1400108f1:	int    0x0
   1400108f3:	add    BYTE PTR [rcx-0x3dffff8c],bh
   1400108f9:	je     0x1400108fb
   1400108fb:	add    BYTE PTR [rbp+rcx*8+0x0],ah
   1400108ff:	add    dl,al
   140010901:	je     0x140010903
   140010903:	add    bl,cl
   140010905:	je     0x140010907
   140010907:	add    BYTE PTR [rax-0x33],bh
   14001090a:	add    BYTE PTR [rax],al
   14001090c:	add    BYTE PTR [rbp+0x0],dh
   14001090f:	add    BYTE PTR [rsi*2-0x33100000],ch
   140010916:	add    BYTE PTR [rax],al
   140010918:	xor    BYTE PTR [rbp+0x0],dh
   14001091b:	add    BYTE PTR [rbx+0x75],cl
   14001091e:	add    BYTE PTR [rax],al
   140010920:	mov    ebx,cs
   140010922:	add    BYTE PTR [rax],al
   140010924:	rex.WXB jne 0x140010927
   140010927:	add    BYTE PTR [rax+0x75],dh
   14001092a:	add    BYTE PTR [rax],al
   14001092c:	cwde   
   14001092d:	retf   
   14001092e:	add    BYTE PTR [rax],al
   140010930:	jo     0x1400109a7
   140010932:	add    BYTE PTR [rax],al
   140010934:	lea    esi,[rbp+0x0]
   140010937:	add    BYTE PTR [rbx+rcx*8+0x75a00000],ch
   14001093e:	add    BYTE PTR [rax],al
   140010940:	mov    dl,0x75
   140010942:	add    BYTE PTR [rax],al
   140010944:	mov    esp,0xc00000cb
   140010949:	jne    0x14001094b
   14001094b:	add    dl,dl
   14001094d:	jne    0x14001094f
   14001094f:	add    ah,al
   140010951:	retf   
   140010952:	add    BYTE PTR [rax],al
   140010954:	loopne 0x1400109cb
   140010956:	add    BYTE PTR [rax],al
   140010958:	adc    al,0x76
   14001095a:	add    BYTE PTR [rax],al
   14001095c:	in     al,dx
   14001095d:	leave  
   14001095e:	add    BYTE PTR [rax],al
   140010960:	and    BYTE PTR [rsi+0x0],dh
   140010963:	add    BYTE PTR [rax+0x76],bl
   140010966:	add    BYTE PTR [rax],al
   140010968:	mov    ah,0xcf
   14001096a:	add    BYTE PTR [rax],al
   14001096c:	(bad)  
   14001096d:	jbe    0x14001096f
   14001096f:	add    BYTE PTR [rsi+rsi*2-0x361c0000],dl
   140010976:	add    BYTE PTR [rax],al
   140010978:	movabs al,ds:0x4000077da000076
   140010981:	retf   0x0
   140010984:	adc    BYTE PTR [rax+0x0],bh
   140010987:	add    BYTE PTR [rdi+0x79],dl
   14001098a:	add    BYTE PTR [rax],al
   14001098c:	sbb    dl,cl
   14001098e:	add    BYTE PTR [rax],al
   140010990:	adc    BYTE PTR [rdx+0x0],bh
   140010993:	add    BYTE PTR [rdi],ch
   140010995:	jp     0x140010997
   140010997:	add    ah,bl
   140010999:	leave  
   14001099a:	add    BYTE PTR [rax],al
   14001099c:	(bad)  
   14001099d:	jp     0x14001099f
   14001099f:	add    BYTE PTR [rbx+0x7a],dh
   1400109a2:	add    BYTE PTR [rax],al
   1400109a4:	pop    rax
   1400109a5:	int3   
   1400109a6:	add    BYTE PTR [rax],al
   1400109a8:	jae    0x140010a24
   1400109aa:	add    BYTE PTR [rax],al
   1400109ac:	(bad)  
   1400109ad:	jnp    0x1400109af
   1400109af:	add    BYTE PTR [rsp+rcx*8+0x0],ah
   1400109b3:	add    BYTE PTR [rdi],al
   1400109b5:	jnp    0x1400109b7
   1400109b7:	add    BYTE PTR [rax],cl
   1400109b9:	jnp    0x1400109bb
   1400109bb:	add    BYTE PTR [rax-0x34],bh
   1400109be:	add    BYTE PTR [rax],al
   1400109c0:	adc    BYTE PTR [rbx+0x0],bh
   1400109c3:	add    BYTE PTR [rcx+0x7b],cl
   1400109c6:	add    BYTE PTR [rax],al
   1400109c8:	(bad)  
   1400109c9:	(bad)  
   1400109ca:	add    BYTE PTR [rax],al
   1400109cc:	rex.WB jnp 0x1400109cf
   1400109cf:	add    BYTE PTR [rcx],al
   1400109d1:	jl     0x1400109d3
   1400109d3:	add    BYTE PTR [rax-0x32],dh
   1400109d6:	add    BYTE PTR [rax],al
   1400109d8:	add    DWORD PTR [rax+rax*1+0x0],edi
   1400109dc:	xor    bh,BYTE PTR [rax+rax*1+0x0]
   1400109e0:	test   dh,cl
   1400109e2:	add    BYTE PTR [rax],al
   1400109e4:	cmp    BYTE PTR [rax+rax*1+0x0],0x2b
   1400109e9:	jge    0x1400109eb
   1400109eb:	add    BYTE PTR [rax],dh
   1400109ed:	retf   0x0
   1400109f0:	xor    BYTE PTR [rbp+0x0],bh
   1400109f3:	add    BYTE PTR [rsi+0x7d],dh
   1400109f6:	add    BYTE PTR [rax],al
   1400109f8:	sub    dl,cl
   1400109fa:	add    BYTE PTR [rax],al
   1400109fc:	nop
   1400109fd:	jge    0x1400109ff
   1400109ff:	add    cl,ch
   140010a01:	jge    0x140010a03
   140010a03:	add    al,dh
   140010a05:	int    0x0
   140010a07:	add    al,dh
   140010a09:	jge    0x140010a0b
   140010a0b:	add    ah,cl
   140010a0d:	jg     0x140010a0f
   140010a0f:	add    ah,ah
   140010a11:	retf   
   140010a12:	add    BYTE PTR [rax],al
   140010a14:	sar    BYTE PTR [rdi+0x0],1
   140010a17:	add    BYTE PTR [rbp-0x7f],bh
   140010a1a:	add    BYTE PTR [rax],al
   140010a1c:	movabs al,ds:0x2b000081800000cc
   140010a25:	(bad)  
   140010a26:	add    BYTE PTR [rax],al
   140010a28:	nop
   140010a29:	int3   
   140010a2a:	add    BYTE PTR [rax],al
   140010a2c:	rex add DWORD PTR [rax],0x0
   140010a30:	(bad)  
   140010a31:	add    DWORD PTR [rax],0x0
   140010a34:	and    dh,cl
   140010a36:	add    BYTE PTR [rax],al
   140010a38:	adc    BYTE PTR [rax+rax*1+0x857a00],al
   140010a3f:	add    BYTE PTR [rax-0x38],bl
   140010a42:	add    BYTE PTR [rax],al
   140010a44:	add    BYTE PTR [rbp-0x7a660000],0x0
   140010a4b:	add    ah,dl
   140010a4d:	leave  
   140010a4e:	add    BYTE PTR [rax],al
   140010a50:	mov    al,0x85
   140010a52:	add    BYTE PTR [rax],al
   140010a54:	fadd   DWORD PTR [rbp-0x2ec00000]
   140010a5a:	add    BYTE PTR [rax],al
   140010a5c:	fadd   DWORD PTR [rbp-0x79f60000]
   140010a62:	add    BYTE PTR [rax],al
   140010a64:	rol    QWORD PTR [rax],1
   140010a67:	add    BYTE PTR [rdx],cl
   140010a69:	xchg   BYTE PTR [rax],al
   140010a6b:	add    BYTE PTR [rbx],dh
   140010a6d:	xchg   BYTE PTR [rax],al
   140010a6f:	add    BYTE PTR [rcx+rdx*8+0x0],bl
   140010a73:	add    BYTE PTR [rax-0x7a],al
   140010a76:	add    BYTE PTR [rax],al
   140010a78:	jg     0x140010a00
   140010a7a:	add    BYTE PTR [rax],al
   140010a7c:	cmp    cl,dl
   140010a7e:	add    BYTE PTR [rax],al
   140010a80:	call   0x14e010b0b
   140010a85:	xchg   DWORD PTR [rax],eax
   140010a87:	add    BYTE PTR [rcx+rdx*8+0x0],dh
   140010a8b:	add    BYTE PTR [rax],dl
   140010a8d:	xchg   DWORD PTR [rax],eax
   140010a8f:	add    BYTE PTR [rcx-0x79],bl
   140010a92:	add    BYTE PTR [rax],al
   140010a94:	mov    cl,dl
   140010a96:	add    BYTE PTR [rax],al
   140010a98:	pop    rsp
   140010a99:	xchg   DWORD PTR [rax],eax
   140010a9b:	add    BYTE PTR [rdi+rax*4-0x2e840000],ah
   140010aa2:	add    BYTE PTR [rax],al
   140010aa4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010aa5:	xchg   DWORD PTR [rax],eax
   140010aa7:	add    bh,dl
   140010aa9:	xchg   DWORD PTR [rax],eax
   140010aab:	add    BYTE PTR [rcx+rdx*8+0x0],ch
   140010aaf:	add    BYTE PTR [rax-0x29ffff78],cl
   140010ab5:	mov    BYTE PTR [rax],al
   140010ab7:	add    al,cl
   140010ab9:	rol    DWORD PTR [rax],1
   140010abb:	add    al,bl
   140010abd:	mov    BYTE PTR [rax],al
   140010abf:	add    BYTE PTR [rax-0x5fffff77],cl
   140010ac5:	rol    DWORD PTR [rax],1
   140010ac7:	add    BYTE PTR [rax-0x60ffff77],cl
   140010acd:	mov    DWORD PTR [rax],eax
   140010acf:	add    BYTE PTR [rax-0x1fffff2f],bl
   140010ad5:	mov    DWORD PTR [rax],eax
   140010ad7:	add    BYTE PTR [rdx-0x76],cl
   140010ada:	add    BYTE PTR [rax],al
   140010adc:	rcl    cl,1
   140010ade:	add    BYTE PTR [rax],al
   140010ae0:	lock mov al,BYTE PTR [rax]
   140010ae3:	add    BYTE PTR [rsi],bh
   140010ae5:	mov    eax,DWORD PTR [rax]
   140010ae7:	add    al,ah
   140010ae9:	rol    DWORD PTR [rax],1
   140010aeb:	add    BYTE PTR [rbx+rcx*4+0x0],al
   140010aef:	add    BYTE PTR [rdx],dl
   140010af1:	mov    WORD PTR [rax],es
   140010af3:	add    al,ch
   140010af5:	rol    DWORD PTR [rax],1
   140010af7:	add    BYTE PTR [rsp+rcx*4],dl
   140010afa:	add    BYTE PTR [rax],al
   140010afc:	ja     0x140010a8a
   140010afe:	add    BYTE PTR [rax],al
   140010b00:	lock rol DWORD PTR [rax],1
   140010b03:	add    BYTE PTR [rsp+rcx*4-0x736a0000],al
   140010b0a:	add    BYTE PTR [rax],al
   140010b0c:	sub    dl,dl
   140010b0e:	add    BYTE PTR [rax],al
   140010b10:	cwde   
   140010b11:	mov    WORD PTR [rax],es
   140010b13:	add    BYTE PTR [rax-0x7ffff72],al
   140010b19:	rol    DWORD PTR [rax],1
   140010b1b:	add    al,ch
   140010b1d:	mov    es,WORD PTR [rax]
   140010b1f:	add    BYTE PTR [rbp-0x71],al
   140010b22:	add    BYTE PTR [rax],al
   140010b24:	xor    dl,dl
   140010b26:	add    BYTE PTR [rax],al
   140010b28:	rex.W pop QWORD PTR [rax]
   140010b2b:	add    BYTE PTR [rdi+rcx*4+0x0],ah
   140010b2f:	add    BYTE PTR [rax+0x640000d2],dl
   140010b35:	pop    QWORD PTR [rax]
   140010b37:	add    BYTE PTR [rsi+0x6000008f],ch
   140010b3d:	rol    BYTE PTR [rax],cl
   140010b3f:	add    BYTE PTR [rax-0x17ffff71],dh
   140010b45:	pop    QWORD PTR [rax]
   140010b47:	add    BYTE PTR [rax-0x17ffff2e],bl
   140010b4d:	pop    QWORD PTR [rax]
   140010b4f:	add    bh,bh
   140010b51:	pop    QWORD PTR [rax]
   140010b53:	add    BYTE PTR [rax-0x7fffff2e],ah
   140010b59:	nop
   140010b5a:	add    BYTE PTR [rax],al
   140010b5c:	int    0x90
   140010b5e:	add    BYTE PTR [rax],al
   140010b60:	test   al,0xd2
   140010b62:	add    BYTE PTR [rax],al
   140010b64:	or     al,0x91
   140010b66:	add    BYTE PTR [rax],al
   140010b68:	mov    eax,0xd4000091
   140010b6d:	rol    BYTE PTR [rax],cl
   140010b6f:	add    ah,al
   140010b71:	xchg   ecx,eax
   140010b72:	add    BYTE PTR [rax],al
   140010b74:	cld    
   140010b75:	xchg   ecx,eax
   140010b76:	add    BYTE PTR [rax],al
   140010b78:	loopne 0x140010b4c
   140010b7a:	add    BYTE PTR [rax],al
   140010b7c:	cld    
   140010b7d:	xchg   ecx,eax
   140010b7e:	add    BYTE PTR [rax],al
   140010b80:	xor    al,0x92
   140010b82:	add    BYTE PTR [rax],al
   140010b84:	in     al,dx
   140010b85:	rol    BYTE PTR [rax],cl
   140010b87:	add    BYTE PTR [rax-0x30ffff6e],dl
   140010b8d:	xchg   edx,eax
   140010b8e:	add    BYTE PTR [rax],al
   140010b90:	enter  0xc0,0x0
   140010b94:	rcl    BYTE PTR [rdx-0x6d140000],1
   140010b9a:	add    BYTE PTR [rax],al
   140010b9c:	sar    BYTE PTR [rsi-0x6d100000],1
   140010ba2:	add    BYTE PTR [rax],al
   140010ba4:	or     al,0x93
   140010ba6:	add    BYTE PTR [rax],al
   140010ba8:	xor    al,al
   140010baa:	add    BYTE PTR [rax],al
   140010bac:	adc    BYTE PTR [rbx-0x6cd40000],dl
   140010bb2:	add    BYTE PTR [rax],al
   140010bb4:	mov    BYTE PTR [rdi-0x6cd00000],bh
   140010bba:	add    BYTE PTR [rax],al
   140010bbc:	rex.WR xchg rbx,rax
   140010bbe:	add    BYTE PTR [rax],al
   140010bc0:	or     BYTE PTR [rdi-0x6cb00000],bh
   140010bc6:	add    BYTE PTR [rax],al
   140010bc8:	ins    BYTE PTR es:[rdi],dx
   140010bc9:	xchg   ebx,eax
   140010bca:	add    BYTE PTR [rax],al
   140010bcc:	sar    BYTE PTR [rdi-0x6c900000],0x0
   140010bd3:	add    BYTE PTR [rbx+rdx*4-0x3ee00000],cl
   140010bda:	add    BYTE PTR [rax],al
   140010bdc:	nop
   140010bdd:	xchg   ebx,eax
   140010bde:	add    BYTE PTR [rax],al
   140010be0:	lods   al,BYTE PTR ds:[rsi]
   140010be1:	xchg   ebx,eax
   140010be2:	add    BYTE PTR [rax],al
   140010be4:	(bad)  
   140010be5:	rol    DWORD PTR [rax],0x0
   140010be8:	and    BYTE PTR [rax+rax*1+0x946400],dl
   140010bef:	add    BYTE PTR [rax-0x46],ah
   140010bf2:	add    BYTE PTR [rax],al
   140010bf4:	fs xchg esp,eax
   140010bf6:	add    BYTE PTR [rax],al
   140010bf8:	movabs ds:0xb00000ba70000094,al
   140010c01:	xchg   esp,eax
   140010c02:	add    BYTE PTR [rax],al
   140010c04:	rcl    DWORD PTR [rax+rax*1+0xbe0000],cl
   140010c0b:	add    al,ah
   140010c0d:	xchg   esp,eax
   140010c0e:	add    BYTE PTR [rax],al
   140010c10:	cld    
   140010c11:	xchg   esp,eax
   140010c12:	add    BYTE PTR [rax],al
   140010c14:	fdivr  DWORD PTR [rax+rax*1+0x950000]
   140010c1b:	add    BYTE PTR [rdx*4-0x42c00000],bl
   140010c22:	add    BYTE PTR [rax],al
   140010c24:	sbb    al,0x95
   140010c26:	add    BYTE PTR [rax],al
   140010c28:	cmp    BYTE PTR [rbp-0x42b80000],dl
   140010c2e:	add    BYTE PTR [rax],al
   140010c30:	pop    rax
   140010c31:	xchg   ebp,eax
   140010c32:	add    BYTE PTR [rax],al
   140010c34:	nop
   140010c35:	xchg   ebp,eax
   140010c36:	add    BYTE PTR [rax],al
   140010c38:	enter  0xc7,0x0
   140010c3c:	nop
   140010c3d:	xchg   ebp,eax
   140010c3e:	add    BYTE PTR [rax],al
   140010c40:	mov    dh,0x95
   140010c42:	add    BYTE PTR [rax],al
   140010c44:	(bad)  
   140010c45:	(bad)  
   140010c46:	add    BYTE PTR [rax],al
   140010c48:	rcl    BYTE PTR [rbp-0x6a1a0000],0x0
   140010c4f:	add    BYTE PTR [rax],bl
   140010c51:	(bad)  
   140010c52:	add    BYTE PTR [rax],al
   140010c54:	adc    BYTE PTR [rsi-0x69c20000],dl
   140010c5a:	add    BYTE PTR [rax],al
   140010c5c:	loopne 0x140010c22
   140010c5e:	add    BYTE PTR [rax],al
   140010c60:	rcl    BYTE PTR [rsi-0x69170000],0x0
   140010c67:	add    al,bl
   140010c69:	ret    
   140010c6a:	add    BYTE PTR [rax],al
   140010c6c:	(bad)  
   140010c6d:	xchg   edi,eax
   140010c6e:	add    BYTE PTR [rax],al
   140010c70:	adc    BYTE PTR [rdi-0x30800000],0x0
   140010c77:	add    BYTE PTR [rax-0x63ffff69],al
   140010c7d:	xchg   edi,eax
   140010c7e:	add    BYTE PTR [rax],al
   140010c80:	jo     0x140010c52
   140010c82:	add    BYTE PTR [rax],al
   140010c84:	pushf  
   140010c85:	xchg   edi,eax
   140010c86:	add    BYTE PTR [rax],al
   140010c88:	ficom  WORD PTR [rdi-0x2f880000]
   140010c8e:	add    BYTE PTR [rax],al
   140010c90:	loopne 0x140010c29
   140010c92:	add    BYTE PTR [rax],al
   140010c94:	cld    
   140010c95:	xchg   edi,eax
   140010c96:	add    BYTE PTR [rax],al
   140010c98:	rcl    al,0x0
   140010c9b:	add    BYTE PTR [rax],al
   140010c9d:	cwde   
   140010c9e:	add    BYTE PTR [rax],al
   140010ca0:	sbb    al,0x98
   140010ca2:	add    BYTE PTR [rax],al
   140010ca4:	xor    cl,dl
   140010ca6:	add    BYTE PTR [rax],al
   140010ca8:	and    BYTE PTR [rax-0x67c40000],bl
   140010cae:	add    BYTE PTR [rax],al
   140010cb0:	clc    
   140010cb1:	rol    BYTE PTR [rax],1
   140010cb3:	add    BYTE PTR [rax-0x68],al
   140010cb6:	add    BYTE PTR [rax],al
   140010cb8:	nop
   140010cb9:	cwde   
   140010cba:	add    BYTE PTR [rax],al
   140010cbc:	adc    bl,cl
   140010cbe:	add    BYTE PTR [rax],al
   140010cc0:	nop
   140010cc1:	cwde   
   140010cc2:	add    BYTE PTR [rax],al
   140010cc4:	rcr    BYTE PTR [rax-0x34e00000],1
   140010cca:	add    BYTE PTR [rax],al
   140010ccc:	loopne 0x140010c66
   140010cce:	add    BYTE PTR [rax],al
   140010cd0:	or     DWORD PTR [rcx-0x33b80000],ebx
   140010cd6:	add    BYTE PTR [rax],al
   140010cd8:	sbb    BYTE PTR [rcx-0x65af0000],0x0
   140010cdf:	add    BYTE PTR [rax+0x5d0000c9],ah
   140010ce5:	(bad)  
   140010ce6:	add    BYTE PTR [rax],al
   140010ce8:	icebp  
   140010ce9:	(bad)  
   140010cea:	add    BYTE PTR [rax],al
   140010cec:	mov    ah,0xc9
   140010cee:	add    BYTE PTR [rax],al
   140010cf0:	std    
   140010cf1:	(bad)  
   140010cf2:	add    BYTE PTR [rax],al
   140010cf4:	(bad)  
   140010cf5:	fwait
   140010cf6:	add    BYTE PTR [rax],al
   140010cf8:	(bad)  
   140010cf9:	leave  
   140010cfa:	add    BYTE PTR [rax],al
   140010cfc:	ins    BYTE PTR es:[rdi],dx
   140010cfd:	fwait
   140010cfe:	add    BYTE PTR [rax],al
   140010d00:	xchg   DWORD PTR [rbx-0x2e400000],ebx
   140010d06:	add    BYTE PTR [rax],al
   140010d08:	xchg   DWORD PTR [rbx-0x645b0000],ebx
   140010d0e:	add    BYTE PTR [rax],al
   140010d10:	and    dl,dl
   140010d12:	add    BYTE PTR [rax],al
   140010d14:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010d15:	fwait
   140010d16:	add    BYTE PTR [rax],al
   140010d18:	rcr    DWORD PTR [rbx-0x2da80000],1
   140010d1e:	add    BYTE PTR [rax],al
   140010d20:	rcr    DWORD PTR [rbx-0x63ee0000],1
   140010d26:	add    BYTE PTR [rax],al
   140010d28:	mov    dl,dl
   140010d2a:	add    BYTE PTR [rax],al
   140010d2c:	and    BYTE PTR [rax+rax*1+0x9c4000],bl
   140010d33:	add    ah,cl
   140010d35:	rol    BYTE PTR [rax],cl
   140010d37:	add    BYTE PTR [rax],dh
   140010d39:	popf   
   140010d3a:	add    BYTE PTR [rax],al
   140010d3c:	jns    0x140010cdb
   140010d3e:	add    BYTE PTR [rax],al
   140010d40:	nop
   140010d41:	rol    DWORD PTR [rax],1
	...

Disassembly of section .tls:

0000000140011000 <.tls>:
	...

Disassembly of section .rsrc:

0000000140012000 <.rsrc>:
	...
   140012008:	add    al,0x0
   14001200a:	add    BYTE PTR [rax],al
   14001200c:	add    BYTE PTR [rax],al
   14001200e:	add    DWORD PTR [rax],eax
   140012010:	sbb    BYTE PTR [rax],al
   140012012:	add    BYTE PTR [rax],al
   140012014:	sbb    BYTE PTR [rax],al
   140012016:	add    BYTE PTR [rax+0x0],al
   14001201c:	add    BYTE PTR [rax],al
   14001201e:	add    BYTE PTR [rax],al
   140012020:	add    al,0x0
   140012022:	add    BYTE PTR [rax],al
   140012024:	add    BYTE PTR [rax],al
   140012026:	add    DWORD PTR [rax],eax
   140012028:	add    DWORD PTR [rax],eax
   14001202a:	add    BYTE PTR [rax],al
   14001202c:	xor    BYTE PTR [rax],al
   14001202e:	add    BYTE PTR [rax+0x0],al
   140012034:	add    BYTE PTR [rax],al
   140012036:	add    BYTE PTR [rax],al
   140012038:	add    al,0x0
   14001203a:	add    BYTE PTR [rax],al
   14001203c:	add    BYTE PTR [rax],al
   14001203e:	add    DWORD PTR [rax],eax
   140012040:	or     DWORD PTR [rax+rax*1],eax
   140012043:	add    BYTE PTR [rax+0x0],cl
   140012046:	add    BYTE PTR [rax],al
   140012048:	pop    rax
   140012049:	and    BYTE PTR [rcx],al
   14001204b:	add    BYTE PTR [rdx+0x1],bl
   14001204e:	add    BYTE PTR [rax],al
   140012050:	in     al,0x4
   140012052:	add    BYTE PTR [rax],al
   140012054:	add    BYTE PTR [rax],al
   140012056:	add    BYTE PTR [rax],al
   140012058:	cmp    al,0x61
   14001205a:	jae    0x1400120cf
   14001205c:	gs ins DWORD PTR es:[rdi],dx
   14001205e:	(bad)  
   14001205f:	ins    BYTE PTR es:[rdi],dx
   140012060:	jns    0x140012082
   140012062:	js     0x1400120d1
   140012064:	ins    BYTE PTR es:[rdi],dx
   140012065:	outs   dx,BYTE PTR ds:[rsi]
   140012066:	jae    0x1400120a5
   140012068:	and    dh,BYTE PTR [rbp+0x72]
   14001206b:	outs   dx,BYTE PTR ds:[rsi]
   14001206c:	cmp    dh,BYTE PTR [rbx+0x63]
   14001206f:	push   0x73616d65
   140012074:	sub    eax,0x7263696d
   140012079:	outs   dx,DWORD PTR ds:[rsi]
   14001207a:	jae    0x1400120eb
   14001207c:	data16 je 0x1400120ac
   14001207f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140012082:	cmp    ah,BYTE PTR [rcx+0x73]
   140012085:	ins    DWORD PTR es:[rdi],dx
   140012086:	cs jbe 0x1400120ba
   140012089:	and    ah,BYTE PTR [rax]
   14001208b:	ins    DWORD PTR es:[rdi],dx
   14001208c:	(bad)  
   14001208d:	outs   dx,BYTE PTR ds:[rsi]
   14001208e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140012095:	jb     0x14001210a
   140012097:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001209e:	xor    BYTE PTR [rdx],ah
   1400120a0:	ds or  eax,0x3c20200a
   1400120a6:	je     0x14001211a
   1400120a8:	jne    0x14001211d
   1400120aa:	je     0x1400120f5
   1400120ac:	outs   dx,BYTE PTR ds:[rsi]
   1400120ad:	outs   dx,WORD PTR ds:[rsi]
   1400120af:	and    BYTE PTR [rax+0x6d],bh
   1400120b2:	ins    BYTE PTR es:[rdi],dx
   1400120b3:	outs   dx,BYTE PTR ds:[rsi]
   1400120b4:	jae    0x1400120f3
   1400120b6:	and    dh,BYTE PTR [rbp+0x72]
   1400120b9:	outs   dx,BYTE PTR ds:[rsi]
   1400120ba:	cmp    dh,BYTE PTR [rbx+0x63]
   1400120bd:	push   0x73616d65
   1400120c2:	sub    eax,0x7263696d
   1400120c7:	outs   dx,DWORD PTR ds:[rsi]
   1400120c8:	jae    0x140012139
   1400120ca:	data16 je 0x1400120fa
   1400120cd:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400120d0:	cmp    ah,BYTE PTR [rcx+0x73]
   1400120d3:	ins    DWORD PTR es:[rdi],dx
   1400120d4:	cs jbe 0x14001210a
   1400120d7:	and    bh,BYTE PTR [rsi]
   1400120d9:	or     eax,0x2020200a
   1400120de:	and    BYTE PTR [rbx+rsi*2],bh
   1400120e1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400120e5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400120ed:	and    BYTE PTR [rax],ah
   1400120ef:	and    BYTE PTR [rax],ah
   1400120f1:	cmp    al,0x72
   1400120f3:	gs jno 0x14001216b
   1400120f6:	gs jae 0x14001216d
   1400120f9:	gs fs push rax
   1400120fc:	jb     0x140012167
   1400120fe:	jbe    0x140012169
   140012100:	ins    BYTE PTR es:[rdi],dx
   140012101:	gs addr32 gs jae 0x140012144
   140012106:	or     eax,0x2020200a
   14001210b:	and    BYTE PTR [rax],ah
   14001210d:	and    BYTE PTR [rax],ah
   14001210f:	and    BYTE PTR [rdx+rsi*2],bh
   140012112:	gs jno 0x14001218a
   140012115:	gs jae 0x14001218c
   140012118:	gs fs rex.RB js 0x140012182
   14001211d:	movsxd esi,DWORD PTR [rbp+0x74]
   140012120:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140012127:	ins    BYTE PTR es:[rdi],dx
   140012128:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14001212c:	gs ins BYTE PTR es:[rdi],dx
   14001212e:	cmp    eax,0x49736122
   140012133:	outs   dx,BYTE PTR ds:[rsi]
   140012134:	jbe    0x1400121a5
   140012136:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14001213a:	and    BYTE PTR [rbp+0x69],dh
   14001213d:	movsxd esp,DWORD PTR [r11+0x65]
   140012141:	jae    0x1400121b6
   140012143:	cmp    eax,0x6c616622
   140012148:	jae    0x1400121af
   14001214a:	and    bh,BYTE PTR [rsi]
   14001214c:	cmp    al,0x2f
   14001214e:	jb     0x1400121b5
   140012150:	jno    0x1400121c7
   140012152:	gs jae 0x1400121c9
   140012155:	gs fs rex.RB js 0x1400121bf
   14001215a:	movsxd esi,DWORD PTR [rbp+0x74]
   14001215d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140012164:	ins    BYTE PTR es:[rdi],dx
   140012165:	ds or  eax,0x2020200a
   14001216b:	and    BYTE PTR [rax],ah
   14001216d:	and    BYTE PTR [rdi+rbp*1],bh
   140012170:	jb     0x1400121d7
   140012172:	jno    0x1400121e9
   140012174:	gs jae 0x1400121eb
   140012177:	gs fs push rax
   14001217a:	jb     0x1400121e5
   14001217c:	jbe    0x1400121e7
   14001217e:	ins    BYTE PTR es:[rdi],dx
   14001217f:	gs addr32 gs jae 0x1400121c2
   140012184:	or     eax,0x2020200a
   140012189:	and    BYTE PTR [rdi+rbp*1],bh
   14001218c:	jae    0x1400121f3
   14001218e:	movsxd esi,DWORD PTR [rbp+0x72]
   140012191:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140012199:	cmp    al,0x2f
   14001219b:	je     0x14001220f
   14001219d:	jne    0x140012212
   14001219f:	je     0x1400121ea
   1400121a1:	outs   dx,BYTE PTR ds:[rsi]
   1400121a2:	outs   dx,WORD PTR ds:[rsi]
   1400121a4:	ds or  eax,0x612f3c0a
   1400121aa:	jae    0x14001221f
   1400121ac:	gs ins DWORD PTR es:[rdi],dx
   1400121ae:	(bad)  
   1400121af:	ins    BYTE PTR es:[rdi],dx
   1400121b0:	jns    0x1400121f0
   1400121b2:	push   rax
   1400121b3:	rex.B
