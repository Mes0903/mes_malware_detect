
3be77cde3fe49040e294b6e4b4fceb284fcfb65279fcdcad9dc087d2d4406058.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x5ac9]        # 0x140006ad0
   140001007:	jmp    0x140005df4
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x5ac9]        # 0x140006ae0
   140001017:	jmp    0x140005df4
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x5ac9]        # 0x140006af0
   140001027:	jmp    0x140005df4
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	sub    rsp,0x28
   140001034:	call   QWORD PTR [rip+0x6166]        # 0x1400071a0
   14000103a:	mov    QWORD PTR [rip+0xa29f],rax        # 0x14000b2e0
   140001041:	add    rsp,0x28
   140001045:	ret    
   140001046:	int3   
   140001047:	int3   
   140001048:	int3   
   140001049:	int3   
   14000104a:	int3   
   14000104b:	int3   
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	sub    rsp,0x28
   140001054:	call   QWORD PTR [rip+0x614e]        # 0x1400071a8
   14000105a:	mov    QWORD PTR [rip+0xa287],rax        # 0x14000b2e8
   140001061:	add    rsp,0x28
   140001065:	ret    
   140001066:	int3   
   140001067:	int3   
   140001068:	int3   
   140001069:	int3   
   14000106a:	int3   
   14000106b:	int3   
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	sub    rsp,0x28
   140001074:	call   QWORD PTR [rip+0x6126]        # 0x1400071a0
   14000107a:	mov    QWORD PTR [rip+0xa26f],rax        # 0x14000b2f0
   140001081:	add    rsp,0x28
   140001085:	ret    
   140001086:	int3   
   140001087:	int3   
   140001088:	int3   
   140001089:	int3   
   14000108a:	int3   
   14000108b:	int3   
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	lea    rcx,[rip+0x5a69]        # 0x140006b00
   140001097:	jmp    0x140005df4
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	lea    rcx,[rip+0x5a69]        # 0x140006b10
   1400010a7:	jmp    0x140005df4
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	lea    rcx,[rip+0x5a69]        # 0x140006b20
   1400010b7:	jmp    0x140005df4
   1400010bc:	int3   
   1400010bd:	int3   
   1400010be:	int3   
   1400010bf:	int3   
   1400010c0:	mov    rax,rcx
   1400010c3:	ret    
   1400010c4:	int3   
   1400010c5:	int3   
   1400010c6:	int3   
   1400010c7:	int3   
   1400010c8:	int3   
   1400010c9:	int3   
   1400010ca:	int3   
   1400010cb:	int3   
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400010d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400010da:	mov    QWORD PTR [rsp+0x18],rsi
   1400010df:	push   rdi
   1400010e0:	sub    rsp,0x20
   1400010e4:	xor    ebp,ebp
   1400010e6:	mov    QWORD PTR [rcx+0x18],0xf
   1400010ee:	mov    rbx,r8
   1400010f1:	mov    QWORD PTR [rcx+0x10],rbp
   1400010f5:	mov    BYTE PTR [rcx],bpl
   1400010f8:	cmp    QWORD PTR [rdx+0x18],0x10
   1400010fd:	mov    rdi,rdx
   140001100:	mov    rsi,rcx
   140001103:	jae    0x140001116
   140001105:	mov    r8,QWORD PTR [rdx+0x10]
   140001109:	inc    r8
   14000110c:	je     0x14000111f
   14000110e:	call   QWORD PTR [rip+0x6014]        # 0x140007128
   140001114:	jmp    0x14000111f
   140001116:	mov    rax,QWORD PTR [rdx]
   140001119:	mov    QWORD PTR [rcx],rax
   14000111c:	mov    QWORD PTR [rdx],rbp
   14000111f:	mov    rax,QWORD PTR [rdi+0x10]
   140001123:	mov    QWORD PTR [rsi+0x10],rax
   140001127:	mov    rax,QWORD PTR [rdi+0x18]
   14000112b:	mov    QWORD PTR [rsi+0x18],rax
   14000112f:	mov    QWORD PTR [rdi+0x18],0xf
   140001137:	mov    QWORD PTR [rdi+0x10],rbp
   14000113b:	mov    BYTE PTR [rdi],bpl
   14000113e:	mov    QWORD PTR [rsi+0x38],0xf
   140001146:	mov    QWORD PTR [rsi+0x30],rbp
   14000114a:	mov    BYTE PTR [rsi+0x20],bpl
   14000114e:	cmp    QWORD PTR [rbx+0x18],0x10
   140001153:	jae    0x14000116d
   140001155:	mov    r8,QWORD PTR [rbx+0x10]
   140001159:	inc    r8
   14000115c:	je     0x140001177
   14000115e:	lea    rcx,[rsi+0x20]
   140001162:	mov    rdx,rbx
   140001165:	call   QWORD PTR [rip+0x5fbd]        # 0x140007128
   14000116b:	jmp    0x140001177
   14000116d:	mov    rax,QWORD PTR [rbx]
   140001170:	mov    QWORD PTR [rsi+0x20],rax
   140001174:	mov    QWORD PTR [rbx],rbp
   140001177:	mov    rax,QWORD PTR [rbx+0x10]
   14000117b:	mov    QWORD PTR [rsi+0x30],rax
   14000117f:	mov    rax,QWORD PTR [rbx+0x18]
   140001183:	mov    QWORD PTR [rsi+0x38],rax
   140001187:	mov    QWORD PTR [rbx+0x10],rbp
   14000118b:	mov    QWORD PTR [rbx+0x18],0xf
   140001193:	mov    BYTE PTR [rbx],bpl
   140001196:	mov    rbx,QWORD PTR [rsp+0x30]
   14000119b:	mov    rbp,QWORD PTR [rsp+0x38]
   1400011a0:	mov    rax,rsi
   1400011a3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400011a8:	add    rsp,0x20
   1400011ac:	pop    rdi
   1400011ad:	ret    
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	mov    al,0x1
   1400011b2:	ret    
   1400011b3:	int3   
   1400011b4:	int3   
   1400011b5:	int3   
   1400011b6:	int3   
   1400011b7:	int3   
   1400011b8:	int3   
   1400011b9:	int3   
   1400011ba:	int3   
   1400011bb:	int3   
   1400011bc:	int3   
   1400011bd:	int3   
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	rex push rbx
   1400011c2:	sub    rsp,0x30
   1400011c6:	xor    ebx,ebx
   1400011c8:	cmp    BYTE PTR [rdx],bl
   1400011ca:	jne    0x1400011d0
   1400011cc:	mov    eax,ebx
   1400011ce:	jmp    0x1400011dc
   1400011d0:	or     rax,0xffffffffffffffff
   1400011d4:	inc    rax
   1400011d7:	cmp    BYTE PTR [rdx+rax*1],bl
   1400011da:	jne    0x1400011d4
   1400011dc:	mov    r8,QWORD PTR [rcx+0x10]
   1400011e0:	mov    r9,rdx
   1400011e3:	xor    edx,edx
   1400011e5:	mov    QWORD PTR [rsp+0x20],rax
   1400011ea:	call   0x140003d80
   1400011ef:	test   eax,eax
   1400011f1:	sete   al
   1400011f4:	add    rsp,0x30
   1400011f8:	pop    rbx
   1400011f9:	ret    
   1400011fa:	int3   
   1400011fb:	int3   
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	mov    al,0x1
   140001202:	ret    
   140001203:	int3   
   140001204:	int3   
   140001205:	int3   
   140001206:	int3   
   140001207:	int3   
   140001208:	int3   
   140001209:	int3   
   14000120a:	int3   
   14000120b:	int3   
   14000120c:	int3   
   14000120d:	int3   
   14000120e:	int3   
   14000120f:	int3   
   140001210:	mov    al,0x1
   140001212:	ret    
   140001213:	int3   
   140001214:	int3   
   140001215:	int3   
   140001216:	int3   
   140001217:	int3   
   140001218:	int3   
   140001219:	int3   
   14000121a:	int3   
   14000121b:	int3   
   14000121c:	int3   
   14000121d:	int3   
   14000121e:	int3   
   14000121f:	int3   
   140001220:	mov    al,0x1
   140001222:	ret    
   140001223:	int3   
   140001224:	int3   
   140001225:	int3   
   140001226:	int3   
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	mov    al,0x1
   140001232:	ret    
   140001233:	int3   
   140001234:	int3   
   140001235:	int3   
   140001236:	int3   
   140001237:	int3   
   140001238:	int3   
   140001239:	int3   
   14000123a:	int3   
   14000123b:	int3   
   14000123c:	int3   
   14000123d:	int3   
   14000123e:	int3   
   14000123f:	int3   
   140001240:	xor    al,al
   140001242:	ret    
   140001243:	int3   
   140001244:	int3   
   140001245:	int3   
   140001246:	int3   
   140001247:	int3   
   140001248:	int3   
   140001249:	int3   
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	xor    al,al
   140001252:	ret    
   140001253:	int3   
   140001254:	int3   
   140001255:	int3   
   140001256:	int3   
   140001257:	int3   
   140001258:	int3   
   140001259:	int3   
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	sub    rsp,0x28
   140001264:	call   0x140003cc0
   140001269:	test   eax,eax
   14000126b:	sets   al
   14000126e:	add    rsp,0x28
   140001272:	ret    
   140001273:	int3   
   140001274:	int3   
   140001275:	int3   
   140001276:	int3   
   140001277:	int3   
   140001278:	int3   
   140001279:	int3   
   14000127a:	int3   
   14000127b:	int3   
   14000127c:	int3   
   14000127d:	int3   
   14000127e:	int3   
   14000127f:	int3   
   140001280:	sub    rsp,0x28
   140001284:	xor    eax,eax
   140001286:	test   rcx,rcx
   140001289:	je     0x1400012a2
   14000128b:	cmp    rcx,0xffffffffffffffff
   14000128f:	ja     0x14000129b
   140001291:	call   0x140005ce8
   140001296:	test   rax,rax
   140001299:	jne    0x1400012a2
   14000129b:	call   QWORD PTR [rip+0x5db7]        # 0x140007058
   1400012a1:	int3   
   1400012a2:	add    rsp,0x28
   1400012a6:	ret    
   1400012a7:	int3   
   1400012a8:	int3   
   1400012a9:	int3   
   1400012aa:	int3   
   1400012ab:	int3   
   1400012ac:	int3   
   1400012ad:	int3   
   1400012ae:	int3   
   1400012af:	int3   
   1400012b0:	sub    rsp,0x28
   1400012b4:	xor    eax,eax
   1400012b6:	test   rcx,rcx
   1400012b9:	je     0x1400012e3
   1400012bb:	movabs rax,0x2aaaaaaaaaaaaaa
   1400012c5:	cmp    rcx,rax
   1400012c8:	ja     0x1400012dc
   1400012ca:	lea    rcx,[rcx+rcx*2]
   1400012ce:	shl    rcx,0x5
   1400012d2:	call   0x140005ce8
   1400012d7:	test   rax,rax
   1400012da:	jne    0x1400012e3
   1400012dc:	call   QWORD PTR [rip+0x5d76]        # 0x140007058
   1400012e2:	int3   
   1400012e3:	add    rsp,0x28
   1400012e7:	ret    
   1400012e8:	int3   
   1400012e9:	int3   
   1400012ea:	int3   
   1400012eb:	int3   
   1400012ec:	int3   
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	sub    rsp,0x28
   1400012f4:	xor    eax,eax
   1400012f6:	test   rcx,rcx
   1400012f9:	je     0x14000131e
   1400012fb:	movabs rax,0x7fffffffffffffff
   140001305:	cmp    rcx,rax
   140001308:	ja     0x140001317
   14000130a:	add    rcx,rcx
   14000130d:	call   0x140005ce8
   140001312:	test   rax,rax
   140001315:	jne    0x14000131e
   140001317:	call   QWORD PTR [rip+0x5d3b]        # 0x140007058
   14000131d:	int3   
   14000131e:	add    rsp,0x28
   140001322:	ret    
   140001323:	int3   
   140001324:	int3   
   140001325:	int3   
   140001326:	int3   
   140001327:	int3   
   140001328:	int3   
   140001329:	int3   
   14000132a:	int3   
   14000132b:	int3   
   14000132c:	int3   
   14000132d:	int3   
   14000132e:	int3   
   14000132f:	int3   
   140001330:	rex push rdi
   140001332:	sub    rsp,0x30
   140001336:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000133f:	mov    QWORD PTR [rsp+0x40],rbx
   140001344:	mov    rdi,rdx
   140001347:	call   0x140002b00
   14000134c:	mov    rbx,rax
   14000134f:	mov    QWORD PTR [rsp+0x50],rax
   140001354:	mov    WORD PTR [rax+0x18],0x0
   14000135a:	lea    rcx,[rax+0x20]
   14000135e:	mov    QWORD PTR [rsp+0x58],rcx
   140001363:	mov    QWORD PTR [rsp+0x28],rcx
   140001368:	test   rcx,rcx
   14000136b:	je     0x140001376
   14000136d:	mov    rdx,rdi
   140001370:	call   0x140001fc0
   140001375:	nop
   140001376:	mov    rax,rbx
   140001379:	mov    rbx,QWORD PTR [rsp+0x40]
   14000137e:	add    rsp,0x30
   140001382:	pop    rdi
   140001383:	ret    
   140001384:	int3   
   140001385:	int3   
   140001386:	int3   
   140001387:	int3   
   140001388:	int3   
   140001389:	int3   
   14000138a:	int3   
   14000138b:	int3   
   14000138c:	int3   
   14000138d:	int3   
   14000138e:	int3   
   14000138f:	int3   
   140001390:	rex push rdi
   140001392:	sub    rsp,0x40
   140001396:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000139f:	mov    QWORD PTR [rsp+0x50],rbx
   1400013a4:	mov    QWORD PTR [rsp+0x58],rsi
   1400013a9:	mov    rdi,r8
   1400013ac:	mov    rsi,rdx
   1400013af:	call   0x140002b00
   1400013b4:	mov    rbx,rax
   1400013b7:	mov    QWORD PTR [rsp+0x68],rax
   1400013bc:	mov    WORD PTR [rax+0x18],0x0
   1400013c2:	lea    rcx,[rax+0x20]
   1400013c6:	mov    QWORD PTR [rsp+0x28],rcx
   1400013cb:	mov    QWORD PTR [rsp+0x30],rcx
   1400013d0:	test   rcx,rcx
   1400013d3:	je     0x1400013e1
   1400013d5:	mov    r8,rdi
   1400013d8:	mov    rdx,rsi
   1400013db:	call   0x1400010d0
   1400013e0:	nop
   1400013e1:	mov    rax,rbx
   1400013e4:	mov    rbx,QWORD PTR [rsp+0x50]
   1400013e9:	mov    rsi,QWORD PTR [rsp+0x58]
   1400013ee:	add    rsp,0x40
   1400013f2:	pop    rdi
   1400013f3:	ret    
   1400013f4:	int3   
   1400013f5:	int3   
   1400013f6:	int3   
   1400013f7:	int3   
   1400013f8:	int3   
   1400013f9:	int3   
   1400013fa:	int3   
   1400013fb:	int3   
   1400013fc:	int3   
   1400013fd:	int3   
   1400013fe:	int3   
   1400013ff:	int3   
   140001400:	mov    QWORD PTR [rsp+0x8],rbx
   140001405:	mov    QWORD PTR [rsp+0x10],rsi
   14000140a:	push   rdi
   14000140b:	sub    rsp,0x20
   14000140f:	mov    rbx,QWORD PTR [rcx]
   140001412:	mov    rdi,rdx
   140001415:	mov    rdx,QWORD PTR [rdx]
   140001418:	mov    rdx,QWORD PTR [rdx+0x8]
   14000141c:	movzx  r9d,r8b
   140001420:	mov    r8,rbx
   140001423:	mov    rsi,rcx
   140001426:	call   0x140001560
   14000142b:	mov    QWORD PTR [rbx+0x8],rax
   14000142f:	mov    rax,QWORD PTR [rdi+0x8]
   140001433:	mov    rdx,QWORD PTR [rsi]
   140001436:	mov    QWORD PTR [rsi+0x8],rax
   14000143a:	mov    rcx,QWORD PTR [rdx+0x8]
   14000143e:	cmp    BYTE PTR [rcx+0x19],0x0
   140001442:	jne    0x140001491
   140001444:	mov    rax,QWORD PTR [rcx]
   140001447:	cmp    BYTE PTR [rax+0x19],0x0
   14000144b:	jne    0x14000145c
   14000144d:	nop    DWORD PTR [rax]
   140001450:	mov    rcx,rax
   140001453:	mov    rax,QWORD PTR [rax]
   140001456:	cmp    BYTE PTR [rax+0x19],0x0
   14000145a:	je     0x140001450
   14000145c:	mov    QWORD PTR [rdx],rcx
   14000145f:	mov    rdx,QWORD PTR [rsi]
   140001462:	mov    rcx,QWORD PTR [rdx+0x8]
   140001466:	mov    rax,QWORD PTR [rcx+0x10]
   14000146a:	cmp    BYTE PTR [rax+0x19],0x0
   14000146e:	jne    0x14000147d
   140001470:	mov    rcx,rax
   140001473:	mov    rax,QWORD PTR [rax+0x10]
   140001477:	cmp    BYTE PTR [rax+0x19],0x0
   14000147b:	je     0x140001470
   14000147d:	mov    QWORD PTR [rdx+0x10],rcx
   140001481:	mov    rbx,QWORD PTR [rsp+0x30]
   140001486:	mov    rsi,QWORD PTR [rsp+0x38]
   14000148b:	add    rsp,0x20
   14000148f:	pop    rdi
   140001490:	ret    
   140001491:	mov    rbx,QWORD PTR [rsp+0x30]
   140001496:	mov    QWORD PTR [rdx],rdx
   140001499:	mov    rax,QWORD PTR [rsi]
   14000149c:	mov    rsi,QWORD PTR [rsp+0x38]
   1400014a1:	mov    QWORD PTR [rax+0x10],rax
   1400014a5:	add    rsp,0x20
   1400014a9:	pop    rdi
   1400014aa:	ret    
   1400014ab:	int3   
   1400014ac:	int3   
   1400014ad:	int3   
   1400014ae:	int3   
   1400014af:	int3   
   1400014b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400014b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400014ba:	push   rdi
   1400014bb:	sub    rsp,0x20
   1400014bf:	mov    rbx,QWORD PTR [rcx]
   1400014c2:	mov    rdi,rdx
   1400014c5:	mov    rdx,QWORD PTR [rdx]
   1400014c8:	mov    rdx,QWORD PTR [rdx+0x8]
   1400014cc:	movzx  r9d,r8b
   1400014d0:	mov    r8,rbx
   1400014d3:	mov    rsi,rcx
   1400014d6:	call   0x140001610
   1400014db:	mov    QWORD PTR [rbx+0x8],rax
   1400014df:	mov    rax,QWORD PTR [rdi+0x8]
   1400014e3:	mov    rdx,QWORD PTR [rsi]
   1400014e6:	mov    QWORD PTR [rsi+0x8],rax
   1400014ea:	mov    rcx,QWORD PTR [rdx+0x8]
   1400014ee:	cmp    BYTE PTR [rcx+0x19],0x0
   1400014f2:	jne    0x140001541
   1400014f4:	mov    rax,QWORD PTR [rcx]
   1400014f7:	cmp    BYTE PTR [rax+0x19],0x0
   1400014fb:	jne    0x14000150c
   1400014fd:	nop    DWORD PTR [rax]
   140001500:	mov    rcx,rax
   140001503:	mov    rax,QWORD PTR [rax]
   140001506:	cmp    BYTE PTR [rax+0x19],0x0
   14000150a:	je     0x140001500
   14000150c:	mov    QWORD PTR [rdx],rcx
   14000150f:	mov    rdx,QWORD PTR [rsi]
   140001512:	mov    rcx,QWORD PTR [rdx+0x8]
   140001516:	mov    rax,QWORD PTR [rcx+0x10]
   14000151a:	cmp    BYTE PTR [rax+0x19],0x0
   14000151e:	jne    0x14000152d
   140001520:	mov    rcx,rax
   140001523:	mov    rax,QWORD PTR [rax+0x10]
   140001527:	cmp    BYTE PTR [rax+0x19],0x0
   14000152b:	je     0x140001520
   14000152d:	mov    QWORD PTR [rdx+0x10],rcx
   140001531:	mov    rbx,QWORD PTR [rsp+0x30]
   140001536:	mov    rsi,QWORD PTR [rsp+0x38]
   14000153b:	add    rsp,0x20
   14000153f:	pop    rdi
   140001540:	ret    
   140001541:	mov    rbx,QWORD PTR [rsp+0x30]
   140001546:	mov    QWORD PTR [rdx],rdx
   140001549:	mov    rax,QWORD PTR [rsi]
   14000154c:	mov    rsi,QWORD PTR [rsp+0x38]
   140001551:	mov    QWORD PTR [rax+0x10],rax
   140001555:	add    rsp,0x20
   140001559:	pop    rdi
   14000155a:	ret    
   14000155b:	int3   
   14000155c:	int3   
   14000155d:	int3   
   14000155e:	int3   
   14000155f:	int3   
   140001560:	mov    BYTE PTR [rsp+0x20],r9b
   140001565:	mov    QWORD PTR [rsp+0x18],r8
   14000156a:	mov    QWORD PTR [rsp+0x10],rdx
   14000156f:	mov    QWORD PTR [rsp+0x8],rcx
   140001574:	push   rbx
   140001575:	push   rsi
   140001576:	push   rdi
   140001577:	sub    rsp,0x30
   14000157b:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140001584:	mov    rsi,rcx
   140001587:	mov    rdi,QWORD PTR [rcx]
   14000158a:	cmp    BYTE PTR [rdx+0x19],0x0
   14000158e:	jne    0x1400015f7
   140001590:	lea    r8,[rdx+0x40]
   140001594:	add    rdx,0x20
   140001598:	call   0x140001390
   14000159d:	mov    rbx,rax
   1400015a0:	mov    rax,QWORD PTR [rsp+0x60]
   1400015a5:	mov    QWORD PTR [rbx+0x8],rax
   1400015a9:	mov    rcx,QWORD PTR [rsp+0x58]
   1400015ae:	movzx  eax,BYTE PTR [rcx+0x18]
   1400015b2:	mov    BYTE PTR [rbx+0x18],al
   1400015b5:	cmp    BYTE PTR [rdi+0x19],0x0
   1400015b9:	cmovne rdi,rbx
   1400015bd:	mov    QWORD PTR [rsp+0x20],rdi
   1400015c2:	movzx  r9d,BYTE PTR [rsp+0x68]
   1400015c8:	mov    r8,rbx
   1400015cb:	mov    rdx,QWORD PTR [rcx]
   1400015ce:	mov    rcx,rsi
   1400015d1:	call   0x140001560
   1400015d6:	mov    QWORD PTR [rbx],rax
   1400015d9:	movzx  r9d,BYTE PTR [rsp+0x68]
   1400015df:	mov    r8,rbx
   1400015e2:	mov    rdx,QWORD PTR [rsp+0x58]
   1400015e7:	mov    rdx,QWORD PTR [rdx+0x10]
   1400015eb:	mov    rcx,rsi
   1400015ee:	call   0x140001560
   1400015f3:	mov    QWORD PTR [rbx+0x10],rax
   1400015f7:	mov    rax,rdi
   1400015fa:	add    rsp,0x30
   1400015fe:	pop    rdi
   1400015ff:	pop    rsi
   140001600:	pop    rbx
   140001601:	ret    
   140001602:	int3   
   140001603:	int3   
   140001604:	int3   
   140001605:	int3   
   140001606:	int3   
   140001607:	int3   
   140001608:	int3   
   140001609:	int3   
   14000160a:	int3   
   14000160b:	int3   
   14000160c:	int3   
   14000160d:	int3   
   14000160e:	int3   
   14000160f:	int3   
   140001610:	mov    BYTE PTR [rsp+0x20],r9b
   140001615:	mov    QWORD PTR [rsp+0x18],r8
   14000161a:	mov    QWORD PTR [rsp+0x10],rdx
   14000161f:	mov    QWORD PTR [rsp+0x8],rcx
   140001624:	push   rbx
   140001625:	push   rsi
   140001626:	push   rdi
   140001627:	sub    rsp,0x30
   14000162b:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140001634:	mov    rsi,rcx
   140001637:	mov    rdi,QWORD PTR [rcx]
   14000163a:	cmp    BYTE PTR [rdx+0x19],0x0
   14000163e:	jne    0x1400016a3
   140001640:	add    rdx,0x20
   140001644:	call   0x140001330
   140001649:	mov    rbx,rax
   14000164c:	mov    rax,QWORD PTR [rsp+0x60]
   140001651:	mov    QWORD PTR [rbx+0x8],rax
   140001655:	mov    rcx,QWORD PTR [rsp+0x58]
   14000165a:	movzx  eax,BYTE PTR [rcx+0x18]
   14000165e:	mov    BYTE PTR [rbx+0x18],al
   140001661:	cmp    BYTE PTR [rdi+0x19],0x0
   140001665:	cmovne rdi,rbx
   140001669:	mov    QWORD PTR [rsp+0x20],rdi
   14000166e:	movzx  r9d,BYTE PTR [rsp+0x68]
   140001674:	mov    r8,rbx
   140001677:	mov    rdx,QWORD PTR [rcx]
   14000167a:	mov    rcx,rsi
   14000167d:	call   0x140001610
   140001682:	mov    QWORD PTR [rbx],rax
   140001685:	movzx  r9d,BYTE PTR [rsp+0x68]
   14000168b:	mov    r8,rbx
   14000168e:	mov    rdx,QWORD PTR [rsp+0x58]
   140001693:	mov    rdx,QWORD PTR [rdx+0x10]
   140001697:	mov    rcx,rsi
   14000169a:	call   0x140001610
   14000169f:	mov    QWORD PTR [rbx+0x10],rax
   1400016a3:	mov    rax,rdi
   1400016a6:	add    rsp,0x30
   1400016aa:	pop    rdi
   1400016ab:	pop    rsi
   1400016ac:	pop    rbx
   1400016ad:	ret    
   1400016ae:	int3   
   1400016af:	int3   
   1400016b0:	sub    rsp,0x28
   1400016b4:	lea    r8,[rdx+0x40]
   1400016b8:	add    rdx,0x20
   1400016bc:	call   0x140001390
   1400016c1:	add    rsp,0x28
   1400016c5:	ret    
   1400016c6:	int3   
   1400016c7:	int3   
   1400016c8:	int3   
   1400016c9:	int3   
   1400016ca:	int3   
   1400016cb:	int3   
   1400016cc:	int3   
   1400016cd:	int3   
   1400016ce:	int3   
   1400016cf:	int3   
   1400016d0:	sub    rsp,0x28
   1400016d4:	add    rdx,0x20
   1400016d8:	call   0x140001330
   1400016dd:	add    rsp,0x28
   1400016e1:	ret    
   1400016e2:	int3   
   1400016e3:	int3   
   1400016e4:	int3   
   1400016e5:	int3   
   1400016e6:	int3   
   1400016e7:	int3   
   1400016e8:	int3   
   1400016e9:	int3   
   1400016ea:	int3   
   1400016eb:	int3   
   1400016ec:	int3   
   1400016ed:	int3   
   1400016ee:	int3   
   1400016ef:	int3   
   1400016f0:	mov    rax,rcx
   1400016f3:	ret    
   1400016f4:	int3   
   1400016f5:	int3   
   1400016f6:	int3   
   1400016f7:	int3   
   1400016f8:	int3   
   1400016f9:	int3   
   1400016fa:	int3   
   1400016fb:	int3   
   1400016fc:	int3   
   1400016fd:	int3   
   1400016fe:	int3   
   1400016ff:	int3   
   140001700:	mov    rax,rcx
   140001703:	ret    
   140001704:	int3   
   140001705:	int3   
   140001706:	int3   
   140001707:	int3   
   140001708:	int3   
   140001709:	int3   
   14000170a:	int3   
   14000170b:	int3   
   14000170c:	int3   
   14000170d:	int3   
   14000170e:	int3   
   14000170f:	int3   
   140001710:	mov    rax,rcx
   140001713:	ret    
   140001714:	int3   
   140001715:	int3   
   140001716:	int3   
   140001717:	int3   
   140001718:	int3   
   140001719:	int3   
   14000171a:	int3   
   14000171b:	int3   
   14000171c:	int3   
   14000171d:	int3   
   14000171e:	int3   
   14000171f:	int3   
   140001720:	mov    rax,rcx
   140001723:	ret    
   140001724:	int3   
   140001725:	int3   
   140001726:	int3   
   140001727:	int3   
   140001728:	int3   
   140001729:	int3   
   14000172a:	int3   
   14000172b:	int3   
   14000172c:	int3   
   14000172d:	int3   
   14000172e:	int3   
   14000172f:	int3   
   140001730:	mov    rax,QWORD PTR [rdx]
   140001733:	mov    r8,QWORD PTR [rcx]
   140001736:	mov    QWORD PTR [rcx],rax
   140001739:	mov    QWORD PTR [rdx],r8
   14000173c:	ret    
   14000173d:	int3   
   14000173e:	int3   
   14000173f:	int3   
   140001740:	mov    rax,rcx
   140001743:	ret    
   140001744:	int3   
   140001745:	int3   
   140001746:	int3   
   140001747:	int3   
   140001748:	int3   
   140001749:	int3   
   14000174a:	int3   
   14000174b:	int3   
   14000174c:	int3   
   14000174d:	int3   
   14000174e:	int3   
   14000174f:	int3   
   140001750:	mov    rax,rcx
   140001753:	ret    
   140001754:	int3   
   140001755:	int3   
   140001756:	int3   
   140001757:	int3   
   140001758:	int3   
   140001759:	int3   
   14000175a:	int3   
   14000175b:	int3   
   14000175c:	int3   
   14000175d:	int3   
   14000175e:	int3   
   14000175f:	int3   
   140001760:	mov    rax,rcx
   140001763:	ret    
   140001764:	int3   
   140001765:	int3   
   140001766:	int3   
   140001767:	int3   
   140001768:	int3   
   140001769:	int3   
   14000176a:	int3   
   14000176b:	int3   
   14000176c:	int3   
   14000176d:	int3   
   14000176e:	int3   
   14000176f:	int3   
   140001770:	mov    rax,rcx
   140001773:	ret    
   140001774:	int3   
   140001775:	int3   
   140001776:	int3   
   140001777:	int3   
   140001778:	int3   
   140001779:	int3   
   14000177a:	int3   
   14000177b:	int3   
   14000177c:	int3   
   14000177d:	int3   
   14000177e:	int3   
   14000177f:	int3   
   140001780:	test   rdx,rdx
   140001783:	je     0x14000178b
   140001785:	mov    rax,QWORD PTR [r8]
   140001788:	mov    QWORD PTR [rdx],rax
   14000178b:	ret    
   14000178c:	int3   
   14000178d:	int3   
   14000178e:	int3   
   14000178f:	int3   
   140001790:	test   rdx,rdx
   140001793:	je     0x14000179b
   140001795:	mov    rax,QWORD PTR [r8]
   140001798:	mov    QWORD PTR [rdx],rax
   14000179b:	ret    
   14000179c:	int3   
   14000179d:	int3   
   14000179e:	int3   
   14000179f:	int3   
   1400017a0:	test   rdx,rdx
   1400017a3:	je     0x1400017ab
   1400017a5:	mov    rax,QWORD PTR [r8]
   1400017a8:	mov    QWORD PTR [rdx],rax
   1400017ab:	ret    
   1400017ac:	int3   
   1400017ad:	int3   
   1400017ae:	int3   
   1400017af:	int3   
   1400017b0:	test   rdx,rdx
   1400017b3:	je     0x1400017bb
   1400017b5:	mov    rax,QWORD PTR [r8]
   1400017b8:	mov    QWORD PTR [rdx],rax
   1400017bb:	ret    
   1400017bc:	int3   
   1400017bd:	int3   
   1400017be:	int3   
   1400017bf:	int3   
   1400017c0:	test   rdx,rdx
   1400017c3:	je     0x1400017cb
   1400017c5:	mov    rax,QWORD PTR [r8]
   1400017c8:	mov    QWORD PTR [rdx],rax
   1400017cb:	ret    
   1400017cc:	int3   
   1400017cd:	int3   
   1400017ce:	int3   
   1400017cf:	int3   
   1400017d0:	test   rdx,rdx
   1400017d3:	je     0x1400017db
   1400017d5:	mov    rax,QWORD PTR [r8]
   1400017d8:	mov    QWORD PTR [rdx],rax
   1400017db:	ret    
   1400017dc:	int3   
   1400017dd:	int3   
   1400017de:	int3   
   1400017df:	int3   
   1400017e0:	test   rdx,rdx
   1400017e3:	je     0x1400017eb
   1400017e5:	mov    rax,QWORD PTR [r8]
   1400017e8:	mov    QWORD PTR [rdx],rax
   1400017eb:	ret    
   1400017ec:	int3   
   1400017ed:	int3   
   1400017ee:	int3   
   1400017ef:	int3   
   1400017f0:	test   rdx,rdx
   1400017f3:	je     0x1400017fb
   1400017f5:	mov    rax,QWORD PTR [r8]
   1400017f8:	mov    QWORD PTR [rdx],rax
   1400017fb:	ret    
   1400017fc:	int3   
   1400017fd:	int3   
   1400017fe:	int3   
   1400017ff:	int3   
   140001800:	test   rdx,rdx
   140001803:	je     0x14000180b
   140001805:	mov    rax,QWORD PTR [r8]
   140001808:	mov    QWORD PTR [rdx],rax
   14000180b:	ret    
   14000180c:	int3   
   14000180d:	int3   
   14000180e:	int3   
   14000180f:	int3   
   140001810:	mov    QWORD PTR [rsp+0x10],rdx
   140001815:	sub    rsp,0x38
   140001819:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001822:	mov    rax,rdx
   140001825:	mov    QWORD PTR [rsp+0x58],rdx
   14000182a:	test   rdx,rdx
   14000182d:	je     0x14000183b
   14000182f:	mov    rdx,r8
   140001832:	mov    rcx,rax
   140001835:	call   0x140001fc0
   14000183a:	nop
   14000183b:	add    rsp,0x38
   14000183f:	ret    
   140001840:	mov    QWORD PTR [rsp+0x10],rdx
   140001845:	sub    rsp,0x38
   140001849:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001852:	mov    rax,rdx
   140001855:	mov    QWORD PTR [rsp+0x58],rdx
   14000185a:	test   rdx,rdx
   14000185d:	je     0x14000186b
   14000185f:	mov    rdx,r8
   140001862:	mov    rcx,rax
   140001865:	call   0x140001fc0
   14000186a:	nop
   14000186b:	add    rsp,0x38
   14000186f:	ret    
   140001870:	mov    QWORD PTR [rsp+0x10],rdx
   140001875:	sub    rsp,0x38
   140001879:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001882:	mov    rax,rdx
   140001885:	mov    QWORD PTR [rsp+0x58],rdx
   14000188a:	test   rdx,rdx
   14000188d:	je     0x14000189b
   14000188f:	mov    rdx,r8
   140001892:	mov    rcx,rax
   140001895:	call   0x140001fc0
   14000189a:	nop
   14000189b:	add    rsp,0x38
   14000189f:	ret    
   1400018a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400018a5:	sub    rsp,0x38
   1400018a9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400018b2:	mov    r10,r8
   1400018b5:	mov    rax,rdx
   1400018b8:	mov    QWORD PTR [rsp+0x28],rdx
   1400018bd:	test   rdx,rdx
   1400018c0:	je     0x1400018d1
   1400018c2:	mov    r8,r9
   1400018c5:	mov    rdx,r10
   1400018c8:	mov    rcx,rax
   1400018cb:	call   0x1400010d0
   1400018d0:	nop
   1400018d1:	add    rsp,0x38
   1400018d5:	ret    
   1400018d6:	int3   
   1400018d7:	int3   
   1400018d8:	int3   
   1400018d9:	int3   
   1400018da:	int3   
   1400018db:	int3   
   1400018dc:	int3   
   1400018dd:	int3   
   1400018de:	int3   
   1400018df:	int3   
   1400018e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400018e5:	sub    rsp,0x38
   1400018e9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400018f2:	mov    r10,r8
   1400018f5:	mov    rax,rdx
   1400018f8:	mov    QWORD PTR [rsp+0x28],rdx
   1400018fd:	test   rdx,rdx
   140001900:	je     0x140001911
   140001902:	mov    r8,r9
   140001905:	mov    rdx,r10
   140001908:	mov    rcx,rax
   14000190b:	call   0x1400010d0
   140001910:	nop
   140001911:	add    rsp,0x38
   140001915:	ret    
   140001916:	int3   
   140001917:	int3   
   140001918:	int3   
   140001919:	int3   
   14000191a:	int3   
   14000191b:	int3   
   14000191c:	int3   
   14000191d:	int3   
   14000191e:	int3   
   14000191f:	int3   
   140001920:	mov    QWORD PTR [rsp+0x10],rdx
   140001925:	sub    rsp,0x38
   140001929:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001932:	mov    r10,r8
   140001935:	mov    rax,rdx
   140001938:	mov    QWORD PTR [rsp+0x28],rdx
   14000193d:	test   rdx,rdx
   140001940:	je     0x140001951
   140001942:	mov    r8,r9
   140001945:	mov    rdx,r10
   140001948:	mov    rcx,rax
   14000194b:	call   0x1400010d0
   140001950:	nop
   140001951:	add    rsp,0x38
   140001955:	ret    
   140001956:	int3   
   140001957:	int3   
   140001958:	int3   
   140001959:	int3   
   14000195a:	int3   
   14000195b:	int3   
   14000195c:	int3   
   14000195d:	int3   
   14000195e:	int3   
   14000195f:	int3   
   140001960:	ret    0x0
   140001963:	int3   
   140001964:	int3   
   140001965:	int3   
   140001966:	int3   
   140001967:	int3   
   140001968:	int3   
   140001969:	int3   
   14000196a:	int3   
   14000196b:	int3   
   14000196c:	int3   
   14000196d:	int3   
   14000196e:	int3   
   14000196f:	int3   
   140001970:	ret    0x0
   140001973:	int3   
   140001974:	int3   
   140001975:	int3   
   140001976:	int3   
   140001977:	int3   
   140001978:	int3   
   140001979:	int3   
   14000197a:	int3   
   14000197b:	int3   
   14000197c:	int3   
   14000197d:	int3   
   14000197e:	int3   
   14000197f:	int3   
   140001980:	ret    0x0
   140001983:	int3   
   140001984:	int3   
   140001985:	int3   
   140001986:	int3   
   140001987:	int3   
   140001988:	int3   
   140001989:	int3   
   14000198a:	int3   
   14000198b:	int3   
   14000198c:	int3   
   14000198d:	int3   
   14000198e:	int3   
   14000198f:	int3   
   140001990:	ret    0x0
   140001993:	int3   
   140001994:	int3   
   140001995:	int3   
   140001996:	int3   
   140001997:	int3   
   140001998:	int3   
   140001999:	int3   
   14000199a:	int3   
   14000199b:	int3   
   14000199c:	int3   
   14000199d:	int3   
   14000199e:	int3   
   14000199f:	int3   
   1400019a0:	ret    0x0
   1400019a3:	int3   
   1400019a4:	int3   
   1400019a5:	int3   
   1400019a6:	int3   
   1400019a7:	int3   
   1400019a8:	int3   
   1400019a9:	int3   
   1400019aa:	int3   
   1400019ab:	int3   
   1400019ac:	int3   
   1400019ad:	int3   
   1400019ae:	int3   
   1400019af:	int3   
   1400019b0:	ret    0x0
   1400019b3:	int3   
   1400019b4:	int3   
   1400019b5:	int3   
   1400019b6:	int3   
   1400019b7:	int3   
   1400019b8:	int3   
   1400019b9:	int3   
   1400019ba:	int3   
   1400019bb:	int3   
   1400019bc:	int3   
   1400019bd:	int3   
   1400019be:	int3   
   1400019bf:	int3   
   1400019c0:	ret    0x0
   1400019c3:	int3   
   1400019c4:	int3   
   1400019c5:	int3   
   1400019c6:	int3   
   1400019c7:	int3   
   1400019c8:	int3   
   1400019c9:	int3   
   1400019ca:	int3   
   1400019cb:	int3   
   1400019cc:	int3   
   1400019cd:	int3   
   1400019ce:	int3   
   1400019cf:	int3   
   1400019d0:	ret    0x0
   1400019d3:	int3   
   1400019d4:	int3   
   1400019d5:	int3   
   1400019d6:	int3   
   1400019d7:	int3   
   1400019d8:	int3   
   1400019d9:	int3   
   1400019da:	int3   
   1400019db:	int3   
   1400019dc:	int3   
   1400019dd:	int3   
   1400019de:	int3   
   1400019df:	int3   
   1400019e0:	ret    0x0
   1400019e3:	int3   
   1400019e4:	int3   
   1400019e5:	int3   
   1400019e6:	int3   
   1400019e7:	int3   
   1400019e8:	int3   
   1400019e9:	int3   
   1400019ea:	int3   
   1400019eb:	int3   
   1400019ec:	int3   
   1400019ed:	int3   
   1400019ee:	int3   
   1400019ef:	int3   
   1400019f0:	rex push rbx
   1400019f2:	sub    rsp,0x20
   1400019f6:	cmp    QWORD PTR [rdx+0x38],0x10
   1400019fb:	mov    rbx,rdx
   1400019fe:	jb     0x140001a09
   140001a00:	mov    rcx,QWORD PTR [rdx+0x20]
   140001a04:	call   0x140005cee
   140001a09:	mov    QWORD PTR [rbx+0x38],0xf
   140001a11:	mov    QWORD PTR [rbx+0x30],0x0
   140001a19:	mov    BYTE PTR [rbx+0x20],0x0
   140001a1d:	cmp    QWORD PTR [rbx+0x18],0x10
   140001a22:	jb     0x140001a2c
   140001a24:	mov    rcx,QWORD PTR [rbx]
   140001a27:	call   0x140005cee
   140001a2c:	mov    QWORD PTR [rbx+0x18],0xf
   140001a34:	mov    QWORD PTR [rbx+0x10],0x0
   140001a3c:	mov    BYTE PTR [rbx],0x0
   140001a3f:	add    rsp,0x20
   140001a43:	pop    rbx
   140001a44:	ret    
   140001a45:	int3   
   140001a46:	int3   
   140001a47:	int3   
   140001a48:	int3   
   140001a49:	int3   
   140001a4a:	int3   
   140001a4b:	int3   
   140001a4c:	int3   
   140001a4d:	int3   
   140001a4e:	int3   
   140001a4f:	int3   
   140001a50:	rex push rbx
   140001a52:	sub    rsp,0x20
   140001a56:	cmp    QWORD PTR [rdx+0x38],0x10
   140001a5b:	mov    rbx,rdx
   140001a5e:	jb     0x140001a69
   140001a60:	mov    rcx,QWORD PTR [rdx+0x20]
   140001a64:	call   0x140005cee
   140001a69:	mov    QWORD PTR [rbx+0x38],0xf
   140001a71:	mov    QWORD PTR [rbx+0x30],0x0
   140001a79:	mov    BYTE PTR [rbx+0x20],0x0
   140001a7d:	cmp    QWORD PTR [rbx+0x18],0x10
   140001a82:	jb     0x140001a8c
   140001a84:	mov    rcx,QWORD PTR [rbx]
   140001a87:	call   0x140005cee
   140001a8c:	mov    QWORD PTR [rbx+0x18],0xf
   140001a94:	mov    QWORD PTR [rbx+0x10],0x0
   140001a9c:	mov    BYTE PTR [rbx],0x0
   140001a9f:	add    rsp,0x20
   140001aa3:	pop    rbx
   140001aa4:	ret    
   140001aa5:	int3   
   140001aa6:	int3   
   140001aa7:	int3   
   140001aa8:	int3   
   140001aa9:	int3   
   140001aaa:	int3   
   140001aab:	int3   
   140001aac:	int3   
   140001aad:	int3   
   140001aae:	int3   
   140001aaf:	int3   
   140001ab0:	rex push rbx
   140001ab2:	sub    rsp,0x20
   140001ab6:	cmp    QWORD PTR [rdx+0x38],0x10
   140001abb:	mov    rbx,rdx
   140001abe:	jb     0x140001ac9
   140001ac0:	mov    rcx,QWORD PTR [rdx+0x20]
   140001ac4:	call   0x140005cee
   140001ac9:	mov    QWORD PTR [rbx+0x38],0xf
   140001ad1:	mov    QWORD PTR [rbx+0x30],0x0
   140001ad9:	mov    BYTE PTR [rbx+0x20],0x0
   140001add:	cmp    QWORD PTR [rbx+0x18],0x10
   140001ae2:	jb     0x140001aec
   140001ae4:	mov    rcx,QWORD PTR [rbx]
   140001ae7:	call   0x140005cee
   140001aec:	mov    QWORD PTR [rbx+0x18],0xf
   140001af4:	mov    QWORD PTR [rbx+0x10],0x0
   140001afc:	mov    BYTE PTR [rbx],0x0
   140001aff:	add    rsp,0x20
   140001b03:	pop    rbx
   140001b04:	ret    
   140001b05:	int3   
   140001b06:	int3   
   140001b07:	int3   
   140001b08:	int3   
   140001b09:	int3   
   140001b0a:	int3   
   140001b0b:	int3   
   140001b0c:	int3   
   140001b0d:	int3   
   140001b0e:	int3   
   140001b0f:	int3   
   140001b10:	mov    rax,rcx
   140001b13:	ret    
   140001b14:	int3   
   140001b15:	int3   
   140001b16:	int3   
   140001b17:	int3   
   140001b18:	int3   
   140001b19:	int3   
   140001b1a:	int3   
   140001b1b:	int3   
   140001b1c:	int3   
   140001b1d:	int3   
   140001b1e:	int3   
   140001b1f:	int3   
   140001b20:	mov    rax,rcx
   140001b23:	ret    
   140001b24:	int3   
   140001b25:	int3   
   140001b26:	int3   
   140001b27:	int3   
   140001b28:	int3   
   140001b29:	int3   
   140001b2a:	int3   
   140001b2b:	int3   
   140001b2c:	int3   
   140001b2d:	int3   
   140001b2e:	int3   
   140001b2f:	int3   
   140001b30:	mov    rax,rcx
   140001b33:	ret    
   140001b34:	int3   
   140001b35:	int3   
   140001b36:	int3   
   140001b37:	int3   
   140001b38:	int3   
   140001b39:	int3   
   140001b3a:	int3   
   140001b3b:	int3   
   140001b3c:	int3   
   140001b3d:	int3   
   140001b3e:	int3   
   140001b3f:	int3   
   140001b40:	mov    rax,rcx
   140001b43:	ret    
   140001b44:	int3   
   140001b45:	int3   
   140001b46:	int3   
   140001b47:	int3   
   140001b48:	int3   
   140001b49:	int3   
   140001b4a:	int3   
   140001b4b:	int3   
   140001b4c:	int3   
   140001b4d:	int3   
   140001b4e:	int3   
   140001b4f:	int3   
   140001b50:	mov    rax,rcx
   140001b53:	ret    
   140001b54:	int3   
   140001b55:	int3   
   140001b56:	int3   
   140001b57:	int3   
   140001b58:	int3   
   140001b59:	int3   
   140001b5a:	int3   
   140001b5b:	int3   
   140001b5c:	int3   
   140001b5d:	int3   
   140001b5e:	int3   
   140001b5f:	int3   
   140001b60:	mov    rax,rcx
   140001b63:	ret    
   140001b64:	int3   
   140001b65:	int3   
   140001b66:	int3   
   140001b67:	int3   
   140001b68:	int3   
   140001b69:	int3   
   140001b6a:	int3   
   140001b6b:	int3   
   140001b6c:	int3   
   140001b6d:	int3   
   140001b6e:	int3   
   140001b6f:	int3   
   140001b70:	mov    rax,rcx
   140001b73:	ret    
   140001b74:	int3   
   140001b75:	int3   
   140001b76:	int3   
   140001b77:	int3   
   140001b78:	int3   
   140001b79:	int3   
   140001b7a:	int3   
   140001b7b:	int3   
   140001b7c:	int3   
   140001b7d:	int3   
   140001b7e:	int3   
   140001b7f:	int3   
   140001b80:	movzx  eax,BYTE PTR [rdx]
   140001b83:	movzx  r8d,BYTE PTR [rcx]
   140001b87:	mov    BYTE PTR [rcx],al
   140001b89:	mov    BYTE PTR [rdx],r8b
   140001b8c:	ret    
   140001b8d:	int3   
   140001b8e:	int3   
   140001b8f:	int3   
   140001b90:	mov    rax,QWORD PTR [rdx]
   140001b93:	mov    r8,QWORD PTR [rcx]
   140001b96:	mov    QWORD PTR [rcx],rax
   140001b99:	mov    QWORD PTR [rdx],r8
   140001b9c:	ret    
   140001b9d:	int3   
   140001b9e:	int3   
   140001b9f:	int3   
   140001ba0:	mov    rax,QWORD PTR [rdx]
   140001ba3:	mov    r8,QWORD PTR [rcx]
   140001ba6:	mov    QWORD PTR [rcx],rax
   140001ba9:	mov    QWORD PTR [rdx],r8
   140001bac:	ret    
   140001bad:	int3   
   140001bae:	int3   
   140001baf:	int3   
   140001bb0:	xor    eax,eax
   140001bb2:	mov    QWORD PTR [rcx+0x10],rax
   140001bb6:	mov    QWORD PTR [rcx+0x18],rax
   140001bba:	mov    rax,rcx
   140001bbd:	ret    
   140001bbe:	int3   
   140001bbf:	int3   
   140001bc0:	xor    eax,eax
   140001bc2:	mov    QWORD PTR [rcx+0x10],rax
   140001bc6:	mov    QWORD PTR [rcx+0x18],rax
   140001bca:	mov    rax,rcx
   140001bcd:	ret    
   140001bce:	int3   
   140001bcf:	int3   
   140001bd0:	xor    eax,eax
   140001bd2:	mov    QWORD PTR [rcx+0x10],rax
   140001bd6:	mov    QWORD PTR [rcx+0x18],rax
   140001bda:	mov    rax,rcx
   140001bdd:	ret    
   140001bde:	int3   
   140001bdf:	int3   
   140001be0:	xor    eax,eax
   140001be2:	mov    QWORD PTR [rcx+0x10],rax
   140001be6:	mov    QWORD PTR [rcx+0x18],rax
   140001bea:	mov    rax,rcx
   140001bed:	ret    
   140001bee:	int3   
   140001bef:	int3   
   140001bf0:	rex push rbx
   140001bf2:	sub    rsp,0x20
   140001bf6:	xor    eax,eax
   140001bf8:	mov    rbx,rcx
   140001bfb:	mov    QWORD PTR [rcx],rax
   140001bfe:	mov    QWORD PTR [rcx+0x8],rax
   140001c02:	call   0x140002ab0
   140001c07:	mov    QWORD PTR [rbx],rax
   140001c0a:	mov    rax,rbx
   140001c0d:	add    rsp,0x20
   140001c11:	pop    rbx
   140001c12:	ret    
   140001c13:	int3   
   140001c14:	int3   
   140001c15:	int3   
   140001c16:	int3   
   140001c17:	int3   
   140001c18:	int3   
   140001c19:	int3   
   140001c1a:	int3   
   140001c1b:	int3   
   140001c1c:	int3   
   140001c1d:	int3   
   140001c1e:	int3   
   140001c1f:	int3   
   140001c20:	mov    QWORD PTR [rsp+0x8],rcx
   140001c25:	push   rdi
   140001c26:	sub    rsp,0x30
   140001c2a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001c33:	mov    QWORD PTR [rsp+0x48],rbx
   140001c38:	mov    rdi,rdx
   140001c3b:	mov    rbx,rcx
   140001c3e:	xor    eax,eax
   140001c40:	mov    QWORD PTR [rcx],rax
   140001c43:	mov    QWORD PTR [rcx+0x8],rax
   140001c47:	call   0x140002ab0
   140001c4c:	mov    QWORD PTR [rbx],rax
   140001c4f:	xor    eax,eax
   140001c51:	movzx  r8d,al
   140001c55:	mov    rdx,rdi
   140001c58:	mov    rcx,rbx
   140001c5b:	call   0x1400014b0
   140001c60:	nop
   140001c61:	mov    rax,rbx
   140001c64:	mov    rbx,QWORD PTR [rsp+0x48]
   140001c69:	add    rsp,0x30
   140001c6d:	pop    rdi
   140001c6e:	ret    
   140001c6f:	int3   
   140001c70:	rex push rbx
   140001c72:	sub    rsp,0x20
   140001c76:	xor    eax,eax
   140001c78:	mov    rbx,rcx
   140001c7b:	mov    QWORD PTR [rcx],rax
   140001c7e:	mov    QWORD PTR [rcx+0x8],rax
   140001c82:	call   0x140002ab0
   140001c87:	mov    QWORD PTR [rbx],rax
   140001c8a:	mov    rax,rbx
   140001c8d:	add    rsp,0x20
   140001c91:	pop    rbx
   140001c92:	ret    
   140001c93:	int3   
   140001c94:	int3   
   140001c95:	int3   
   140001c96:	int3   
   140001c97:	int3   
   140001c98:	int3   
   140001c99:	int3   
   140001c9a:	int3   
   140001c9b:	int3   
   140001c9c:	int3   
   140001c9d:	int3   
   140001c9e:	int3   
   140001c9f:	int3   
   140001ca0:	rex push rbx
   140001ca2:	sub    rsp,0x20
   140001ca6:	xor    eax,eax
   140001ca8:	mov    rbx,rcx
   140001cab:	mov    QWORD PTR [rcx],rax
   140001cae:	mov    QWORD PTR [rcx+0x8],rax
   140001cb2:	call   0x140002ab0
   140001cb7:	mov    QWORD PTR [rbx],rax
   140001cba:	mov    rax,rbx
   140001cbd:	add    rsp,0x20
   140001cc1:	pop    rbx
   140001cc2:	ret    
   140001cc3:	int3   
   140001cc4:	int3   
   140001cc5:	int3   
   140001cc6:	int3   
   140001cc7:	int3   
   140001cc8:	int3   
   140001cc9:	int3   
   140001cca:	int3   
   140001ccb:	int3   
   140001ccc:	int3   
   140001ccd:	int3   
   140001cce:	int3   
   140001ccf:	int3   
   140001cd0:	rex push rbx
   140001cd2:	sub    rsp,0x20
   140001cd6:	xor    eax,eax
   140001cd8:	mov    rbx,rcx
   140001cdb:	mov    QWORD PTR [rcx],rax
   140001cde:	mov    QWORD PTR [rcx+0x8],rax
   140001ce2:	call   0x140002ab0
   140001ce7:	mov    QWORD PTR [rbx],rax
   140001cea:	mov    rax,rbx
   140001ced:	add    rsp,0x20
   140001cf1:	pop    rbx
   140001cf2:	ret    
   140001cf3:	int3   
   140001cf4:	int3   
   140001cf5:	int3   
   140001cf6:	int3   
   140001cf7:	int3   
   140001cf8:	int3   
   140001cf9:	int3   
   140001cfa:	int3   
   140001cfb:	int3   
   140001cfc:	int3   
   140001cfd:	int3   
   140001cfe:	int3   
   140001cff:	int3   
   140001d00:	mov    QWORD PTR [rcx],rdx
   140001d03:	mov    rax,rcx
   140001d06:	ret    
   140001d07:	int3   
   140001d08:	int3   
   140001d09:	int3   
   140001d0a:	int3   
   140001d0b:	int3   
   140001d0c:	int3   
   140001d0d:	int3   
   140001d0e:	int3   
   140001d0f:	int3   
   140001d10:	mov    QWORD PTR [rcx],0x0
   140001d17:	mov    rax,rcx
   140001d1a:	ret    
   140001d1b:	int3   
   140001d1c:	int3   
   140001d1d:	int3   
   140001d1e:	int3   
   140001d1f:	int3   
   140001d20:	mov    QWORD PTR [rcx],rdx
   140001d23:	mov    rax,rcx
   140001d26:	ret    
   140001d27:	int3   
   140001d28:	int3   
   140001d29:	int3   
   140001d2a:	int3   
   140001d2b:	int3   
   140001d2c:	int3   
   140001d2d:	int3   
   140001d2e:	int3   
   140001d2f:	int3   
   140001d30:	mov    QWORD PTR [rcx],0x0
   140001d37:	mov    rax,rcx
   140001d3a:	ret    
   140001d3b:	int3   
   140001d3c:	int3   
   140001d3d:	int3   
   140001d3e:	int3   
   140001d3f:	int3   
   140001d40:	mov    QWORD PTR [rcx],rdx
   140001d43:	mov    rax,rcx
   140001d46:	ret    
   140001d47:	int3   
   140001d48:	int3   
   140001d49:	int3   
   140001d4a:	int3   
   140001d4b:	int3   
   140001d4c:	int3   
   140001d4d:	int3   
   140001d4e:	int3   
   140001d4f:	int3   
   140001d50:	mov    QWORD PTR [rcx],0x0
   140001d57:	mov    rax,rcx
   140001d5a:	ret    
   140001d5b:	int3   
   140001d5c:	int3   
   140001d5d:	int3   
   140001d5e:	int3   
   140001d5f:	int3   
   140001d60:	xor    eax,eax
   140001d62:	mov    QWORD PTR [rcx],rax
   140001d65:	mov    QWORD PTR [rcx+0x8],rax
   140001d69:	mov    rax,rcx
   140001d6c:	ret    
   140001d6d:	int3   
   140001d6e:	int3   
   140001d6f:	int3   
   140001d70:	mov    rax,rcx
   140001d73:	ret    
   140001d74:	int3   
   140001d75:	int3   
   140001d76:	int3   
   140001d77:	int3   
   140001d78:	int3   
   140001d79:	int3   
   140001d7a:	int3   
   140001d7b:	int3   
   140001d7c:	int3   
   140001d7d:	int3   
   140001d7e:	int3   
   140001d7f:	int3   
   140001d80:	mov    rax,rcx
   140001d83:	ret    
   140001d84:	int3   
   140001d85:	int3   
   140001d86:	int3   
   140001d87:	int3   
   140001d88:	int3   
   140001d89:	int3   
   140001d8a:	int3   
   140001d8b:	int3   
   140001d8c:	int3   
   140001d8d:	int3   
   140001d8e:	int3   
   140001d8f:	int3   
   140001d90:	mov    rax,rcx
   140001d93:	ret    
   140001d94:	int3   
   140001d95:	int3   
   140001d96:	int3   
   140001d97:	int3   
   140001d98:	int3   
   140001d99:	int3   
   140001d9a:	int3   
   140001d9b:	int3   
   140001d9c:	int3   
   140001d9d:	int3   
   140001d9e:	int3   
   140001d9f:	int3   
   140001da0:	mov    rax,rcx
   140001da3:	ret    
   140001da4:	int3   
   140001da5:	int3   
   140001da6:	int3   
   140001da7:	int3   
   140001da8:	int3   
   140001da9:	int3   
   140001daa:	int3   
   140001dab:	int3   
   140001dac:	int3   
   140001dad:	int3   
   140001dae:	int3   
   140001daf:	int3   
   140001db0:	mov    rax,rcx
   140001db3:	ret    
   140001db4:	int3   
   140001db5:	int3   
   140001db6:	int3   
   140001db7:	int3   
   140001db8:	int3   
   140001db9:	int3   
   140001dba:	int3   
   140001dbb:	int3   
   140001dbc:	int3   
   140001dbd:	int3   
   140001dbe:	int3   
   140001dbf:	int3   
   140001dc0:	mov    rax,rcx
   140001dc3:	ret    
   140001dc4:	int3   
   140001dc5:	int3   
   140001dc6:	int3   
   140001dc7:	int3   
   140001dc8:	int3   
   140001dc9:	int3   
   140001dca:	int3   
   140001dcb:	int3   
   140001dcc:	int3   
   140001dcd:	int3   
   140001dce:	int3   
   140001dcf:	int3   
   140001dd0:	mov    rax,rcx
   140001dd3:	ret    
   140001dd4:	int3   
   140001dd5:	int3   
   140001dd6:	int3   
   140001dd7:	int3   
   140001dd8:	int3   
   140001dd9:	int3   
   140001dda:	int3   
   140001ddb:	int3   
   140001ddc:	int3   
   140001ddd:	int3   
   140001dde:	int3   
   140001ddf:	int3   
   140001de0:	mov    rax,rcx
   140001de3:	ret    
   140001de4:	int3   
   140001de5:	int3   
   140001de6:	int3   
   140001de7:	int3   
   140001de8:	int3   
   140001de9:	int3   
   140001dea:	int3   
   140001deb:	int3   
   140001dec:	int3   
   140001ded:	int3   
   140001dee:	int3   
   140001def:	int3   
   140001df0:	mov    rax,rcx
   140001df3:	ret    
   140001df4:	int3   
   140001df5:	int3   
   140001df6:	int3   
   140001df7:	int3   
   140001df8:	int3   
   140001df9:	int3   
   140001dfa:	int3   
   140001dfb:	int3   
   140001dfc:	int3   
   140001dfd:	int3   
   140001dfe:	int3   
   140001dff:	int3   
   140001e00:	mov    rax,rcx
   140001e03:	ret    
   140001e04:	int3   
   140001e05:	int3   
   140001e06:	int3   
   140001e07:	int3   
   140001e08:	int3   
   140001e09:	int3   
   140001e0a:	int3   
   140001e0b:	int3   
   140001e0c:	int3   
   140001e0d:	int3   
   140001e0e:	int3   
   140001e0f:	int3   
   140001e10:	mov    rax,rcx
   140001e13:	ret    
   140001e14:	int3   
   140001e15:	int3   
   140001e16:	int3   
   140001e17:	int3   
   140001e18:	int3   
   140001e19:	int3   
   140001e1a:	int3   
   140001e1b:	int3   
   140001e1c:	int3   
   140001e1d:	int3   
   140001e1e:	int3   
   140001e1f:	int3   
   140001e20:	mov    QWORD PTR [rsp+0x8],rbx
   140001e25:	push   rdi
   140001e26:	sub    rsp,0x20
   140001e2a:	mov    QWORD PTR [rcx+0x18],0xf
   140001e32:	mov    QWORD PTR [rcx+0x10],0x0
   140001e3a:	mov    BYTE PTR [rcx],0x0
   140001e3d:	cmp    QWORD PTR [rdx+0x18],0x10
   140001e42:	mov    rbx,rdx
   140001e45:	mov    rdi,rcx
   140001e48:	jae    0x140001e5b
   140001e4a:	mov    r8,QWORD PTR [rdx+0x10]
   140001e4e:	inc    r8
   140001e51:	je     0x140001e68
   140001e53:	call   QWORD PTR [rip+0x52cf]        # 0x140007128
   140001e59:	jmp    0x140001e68
   140001e5b:	mov    rax,QWORD PTR [rdx]
   140001e5e:	mov    QWORD PTR [rcx],rax
   140001e61:	mov    QWORD PTR [rdx],0x0
   140001e68:	mov    rax,QWORD PTR [rbx+0x10]
   140001e6c:	mov    QWORD PTR [rdi+0x10],rax
   140001e70:	mov    rax,QWORD PTR [rbx+0x18]
   140001e74:	mov    QWORD PTR [rdi+0x18],rax
   140001e78:	mov    QWORD PTR [rbx+0x18],0xf
   140001e80:	mov    QWORD PTR [rbx+0x10],0x0
   140001e88:	mov    BYTE PTR [rbx],0x0
   140001e8b:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e90:	mov    rax,rdi
   140001e93:	add    rsp,0x20
   140001e97:	pop    rdi
   140001e98:	ret    
   140001e99:	int3   
   140001e9a:	int3   
   140001e9b:	int3   
   140001e9c:	int3   
   140001e9d:	int3   
   140001e9e:	int3   
   140001e9f:	int3   
   140001ea0:	rex push rbx
   140001ea2:	sub    rsp,0x20
   140001ea6:	mov    QWORD PTR [rcx+0x18],0xf
   140001eae:	mov    QWORD PTR [rcx+0x10],0x0
   140001eb6:	or     r9,0xffffffffffffffff
   140001eba:	xor    r8d,r8d
   140001ebd:	mov    rbx,rcx
   140001ec0:	mov    BYTE PTR [rcx],0x0
   140001ec3:	call   0x1400036e0
   140001ec8:	mov    rax,rbx
   140001ecb:	add    rsp,0x20
   140001ecf:	pop    rbx
   140001ed0:	ret    
   140001ed1:	int3   
   140001ed2:	int3   
   140001ed3:	int3   
   140001ed4:	int3   
   140001ed5:	int3   
   140001ed6:	int3   
   140001ed7:	int3   
   140001ed8:	int3   
   140001ed9:	int3   
   140001eda:	int3   
   140001edb:	int3   
   140001edc:	int3   
   140001edd:	int3   
   140001ede:	int3   
   140001edf:	int3   
   140001ee0:	rex push rbx
   140001ee2:	sub    rsp,0x20
   140001ee6:	xor    r8d,r8d
   140001ee9:	mov    QWORD PTR [rcx+0x18],0xf
   140001ef1:	mov    rbx,rcx
   140001ef4:	mov    QWORD PTR [rcx+0x10],r8
   140001ef8:	mov    BYTE PTR [rcx],r8b
   140001efb:	cmp    BYTE PTR [rdx],r8b
   140001efe:	je     0x140001f0e
   140001f00:	or     r8,0xffffffffffffffff
   140001f04:	inc    r8
   140001f07:	cmp    BYTE PTR [rdx+r8*1],0x0
   140001f0c:	jne    0x140001f04
   140001f0e:	call   0x140003830
   140001f13:	mov    rax,rbx
   140001f16:	add    rsp,0x20
   140001f1a:	pop    rbx
   140001f1b:	ret    
   140001f1c:	int3   
   140001f1d:	int3   
   140001f1e:	int3   
   140001f1f:	int3   
   140001f20:	rex push rbx
   140001f22:	sub    rsp,0x20
   140001f26:	xor    r8d,r8d
   140001f29:	mov    QWORD PTR [rcx+0x18],0x7
   140001f31:	mov    rbx,rcx
   140001f34:	mov    QWORD PTR [rcx+0x10],r8
   140001f38:	mov    WORD PTR [rcx],r8w
   140001f3c:	cmp    WORD PTR [rdx],r8w
   140001f40:	je     0x140001f5b
   140001f42:	or     r8,0xffffffffffffffff
   140001f46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001f50:	inc    r8
   140001f53:	cmp    WORD PTR [rdx+r8*2],0x0
   140001f59:	jne    0x140001f50
   140001f5b:	call   0x140003ad0
   140001f60:	mov    rax,rbx
   140001f63:	add    rsp,0x20
   140001f67:	pop    rbx
   140001f68:	ret    
   140001f69:	int3   
   140001f6a:	int3   
   140001f6b:	int3   
   140001f6c:	int3   
   140001f6d:	int3   
   140001f6e:	int3   
   140001f6f:	int3   
   140001f70:	rex push rbx
   140001f72:	sub    rsp,0x20
   140001f76:	lea    r8,[rsp+0x30]
   140001f7b:	mov    rbx,rcx
   140001f7e:	call   0x140001c20
   140001f83:	mov    rax,rbx
   140001f86:	add    rsp,0x20
   140001f8a:	pop    rbx
   140001f8b:	ret    
   140001f8c:	int3   
   140001f8d:	int3   
   140001f8e:	int3   
   140001f8f:	int3   
   140001f90:	rex push rbx
   140001f92:	sub    rsp,0x20
   140001f96:	xor    eax,eax
   140001f98:	mov    rbx,rcx
   140001f9b:	mov    QWORD PTR [rcx],rax
   140001f9e:	mov    QWORD PTR [rcx+0x8],rax
   140001fa2:	call   0x140002ab0
   140001fa7:	mov    QWORD PTR [rbx],rax
   140001faa:	mov    rax,rbx
   140001fad:	add    rsp,0x20
   140001fb1:	pop    rbx
   140001fb2:	ret    
   140001fb3:	int3   
   140001fb4:	int3   
   140001fb5:	int3   
   140001fb6:	int3   
   140001fb7:	int3   
   140001fb8:	int3   
   140001fb9:	int3   
   140001fba:	int3   
   140001fbb:	int3   
   140001fbc:	int3   
   140001fbd:	int3   
   140001fbe:	int3   
   140001fbf:	int3   
   140001fc0:	mov    QWORD PTR [rsp+0x8],rcx
   140001fc5:	push   rdi
   140001fc6:	sub    rsp,0x30
   140001fca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001fd3:	mov    QWORD PTR [rsp+0x48],rbx
   140001fd8:	mov    rbx,rdx
   140001fdb:	mov    rdi,rcx
   140001fde:	mov    QWORD PTR [rcx+0x18],0xf
   140001fe6:	mov    QWORD PTR [rcx+0x10],0x0
   140001fee:	mov    BYTE PTR [rcx],0x0
   140001ff1:	or     r9,0xffffffffffffffff
   140001ff5:	xor    r8d,r8d
   140001ff8:	call   0x1400036e0
   140001ffd:	nop
   140001ffe:	lea    rcx,[rdi+0x20]
   140002002:	mov    QWORD PTR [rcx+0x18],0xf
   14000200a:	mov    QWORD PTR [rcx+0x10],0x0
   140002012:	mov    BYTE PTR [rcx],0x0
   140002015:	lea    rdx,[rbx+0x20]
   140002019:	or     r9,0xffffffffffffffff
   14000201d:	xor    r8d,r8d
   140002020:	call   0x1400036e0
   140002025:	nop
   140002026:	mov    rax,rdi
   140002029:	mov    rbx,QWORD PTR [rsp+0x48]
   14000202e:	add    rsp,0x30
   140002032:	pop    rdi
   140002033:	ret    
   140002034:	int3   
   140002035:	int3   
   140002036:	int3   
   140002037:	int3   
   140002038:	int3   
   140002039:	int3   
   14000203a:	int3   
   14000203b:	int3   
   14000203c:	int3   
   14000203d:	int3   
   14000203e:	int3   
   14000203f:	int3   
   140002040:	mov    QWORD PTR [rsp+0x8],rcx
   140002045:	push   rdi
   140002046:	sub    rsp,0x30
   14000204a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002053:	mov    QWORD PTR [rsp+0x50],rbx
   140002058:	mov    QWORD PTR [rsp+0x58],rsi
   14000205d:	mov    rbx,rdx
   140002060:	mov    rdi,rcx
   140002063:	lea    rax,[rip+0x577e]        # 0x1400077e8
   14000206a:	mov    QWORD PTR [rcx],rax
   14000206d:	add    rcx,0x8
   140002071:	mov    QWORD PTR [rcx+0x18],0xf
   140002079:	xor    esi,esi
   14000207b:	mov    QWORD PTR [rcx+0x10],rsi
   14000207f:	mov    BYTE PTR [rcx],sil
   140002082:	add    rdx,0x8
   140002086:	or     r9,0xffffffffffffffff
   14000208a:	xor    r8d,r8d
   14000208d:	call   0x1400036e0
   140002092:	nop
   140002093:	lea    rcx,[rdi+0x28]
   140002097:	mov    QWORD PTR [rcx+0x18],0xf
   14000209f:	mov    QWORD PTR [rcx+0x10],rsi
   1400020a3:	mov    BYTE PTR [rcx],sil
   1400020a6:	lea    rdx,[rbx+0x28]
   1400020aa:	or     r9,0xffffffffffffffff
   1400020ae:	xor    r8d,r8d
   1400020b1:	call   0x1400036e0
   1400020b6:	nop
   1400020b7:	lea    rcx,[rdi+0x48]
   1400020bb:	mov    QWORD PTR [rcx+0x18],0xf
   1400020c3:	mov    QWORD PTR [rcx+0x10],rsi
   1400020c7:	mov    BYTE PTR [rcx],sil
   1400020ca:	lea    rdx,[rbx+0x48]
   1400020ce:	or     r9,0xffffffffffffffff
   1400020d2:	xor    r8d,r8d
   1400020d5:	call   0x1400036e0
   1400020da:	nop
   1400020db:	lea    rcx,[rdi+0x68]
   1400020df:	mov    QWORD PTR [rcx+0x18],0xf
   1400020e7:	mov    QWORD PTR [rcx+0x10],rsi
   1400020eb:	mov    BYTE PTR [rcx],sil
   1400020ee:	lea    rdx,[rbx+0x68]
   1400020f2:	or     r9,0xffffffffffffffff
   1400020f6:	xor    r8d,r8d
   1400020f9:	call   0x1400036e0
   1400020fe:	nop
   1400020ff:	movzx  eax,WORD PTR [rbx+0x88]
   140002106:	mov    WORD PTR [rdi+0x88],ax
   14000210d:	movzx  eax,WORD PTR [rbx+0x8a]
   140002114:	mov    WORD PTR [rdi+0x8a],ax
   14000211b:	lea    rcx,[rdi+0x90]
   140002122:	lea    rdx,[rbx+0x90]
   140002129:	lea    r8,[rsp+0x48]
   14000212e:	call   0x140001c20
   140002133:	nop
   140002134:	mov    rax,rdi
   140002137:	mov    rbx,QWORD PTR [rsp+0x50]
   14000213c:	mov    rsi,QWORD PTR [rsp+0x58]
   140002141:	add    rsp,0x30
   140002145:	pop    rdi
   140002146:	ret    
   140002147:	int3   
   140002148:	int3   
   140002149:	int3   
   14000214a:	int3   
   14000214b:	int3   
   14000214c:	int3   
   14000214d:	int3   
   14000214e:	int3   
   14000214f:	int3   
   140002150:	lea    rax,[rip+0x55a1]        # 0x1400076f8
   140002157:	mov    QWORD PTR [rcx],rax
   14000215a:	mov    rax,rcx
   14000215d:	ret    
   14000215e:	int3   
   14000215f:	int3   
   140002160:	mov    rax,rcx
   140002163:	ret    
   140002164:	int3   
   140002165:	int3   
   140002166:	int3   
   140002167:	int3   
   140002168:	int3   
   140002169:	int3   
   14000216a:	int3   
   14000216b:	int3   
   14000216c:	int3   
   14000216d:	int3   
   14000216e:	int3   
   14000216f:	int3   
   140002170:	lea    rax,[rip+0x55d1]        # 0x140007748
   140002177:	mov    QWORD PTR [rcx],rax
   14000217a:	mov    rax,rcx
   14000217d:	ret    
   14000217e:	int3   
   14000217f:	int3   
   140002180:	lea    rax,[rip+0x5621]        # 0x1400077a8
   140002187:	mov    QWORD PTR [rcx],rax
   14000218a:	mov    rax,rcx
   14000218d:	ret    
   14000218e:	int3   
   14000218f:	int3   
   140002190:	lea    rax,[rip+0x5529]        # 0x1400076c0
   140002197:	mov    QWORD PTR [rcx],rax
   14000219a:	mov    rax,rcx
   14000219d:	ret    
   14000219e:	int3   
   14000219f:	int3   
   1400021a0:	mov    DWORD PTR [rcx],edx
   1400021a2:	mov    QWORD PTR [rcx+0x8],r8
   1400021a6:	mov    rax,rcx
   1400021a9:	ret    
   1400021aa:	int3   
   1400021ab:	int3   
   1400021ac:	int3   
   1400021ad:	int3   
   1400021ae:	int3   
   1400021af:	int3   
   1400021b0:	rex push rbx
   1400021b2:	sub    rsp,0x20
   1400021b6:	mov    r8,QWORD PTR [rcx]
   1400021b9:	lea    rdx,[rsp+0x30]
   1400021be:	mov    rbx,rcx
   1400021c1:	mov    r9,r8
   1400021c4:	mov    r8,QWORD PTR [r8]
   1400021c7:	call   0x140003f90
   1400021cc:	mov    rcx,QWORD PTR [rbx]
   1400021cf:	add    rsp,0x20
   1400021d3:	pop    rbx
   1400021d4:	jmp    0x140005cee
   1400021d9:	int3   
   1400021da:	int3   
   1400021db:	int3   
   1400021dc:	int3   
   1400021dd:	int3   
   1400021de:	int3   
   1400021df:	int3   
   1400021e0:	mov    rcx,QWORD PTR [rcx]
   1400021e3:	jmp    0x140005cee
   1400021e8:	int3   
   1400021e9:	int3   
   1400021ea:	int3   
   1400021eb:	int3   
   1400021ec:	int3   
   1400021ed:	int3   
   1400021ee:	int3   
   1400021ef:	int3   
   1400021f0:	mov    rcx,QWORD PTR [rcx]
   1400021f3:	jmp    0x140005cee
   1400021f8:	int3   
   1400021f9:	int3   
   1400021fa:	int3   
   1400021fb:	int3   
   1400021fc:	int3   
   1400021fd:	int3   
   1400021fe:	int3   
   1400021ff:	int3   
   140002200:	mov    rcx,QWORD PTR [rcx]
   140002203:	jmp    0x140005cee
   140002208:	int3   
   140002209:	int3   
   14000220a:	int3   
   14000220b:	int3   
   14000220c:	int3   
   14000220d:	int3   
   14000220e:	int3   
   14000220f:	int3   
   140002210:	rex push rbx
   140002212:	sub    rsp,0x20
   140002216:	cmp    QWORD PTR [rcx+0x18],0x10
   14000221b:	mov    rbx,rcx
   14000221e:	jb     0x140002228
   140002220:	mov    rcx,QWORD PTR [rcx]
   140002223:	call   0x140005cee
   140002228:	mov    QWORD PTR [rbx+0x18],0xf
   140002230:	mov    QWORD PTR [rbx+0x10],0x0
   140002238:	mov    BYTE PTR [rbx],0x0
   14000223b:	add    rsp,0x20
   14000223f:	pop    rbx
   140002240:	ret    
   140002241:	int3   
   140002242:	int3   
   140002243:	int3   
   140002244:	int3   
   140002245:	int3   
   140002246:	int3   
   140002247:	int3   
   140002248:	int3   
   140002249:	int3   
   14000224a:	int3   
   14000224b:	int3   
   14000224c:	int3   
   14000224d:	int3   
   14000224e:	int3   
   14000224f:	int3   
   140002250:	rex push rbx
   140002252:	sub    rsp,0x20
   140002256:	cmp    QWORD PTR [rcx+0x18],0x8
   14000225b:	mov    rbx,rcx
   14000225e:	jb     0x140002268
   140002260:	mov    rcx,QWORD PTR [rcx]
   140002263:	call   0x140005cee
   140002268:	xor    eax,eax
   14000226a:	mov    QWORD PTR [rbx+0x18],0x7
   140002272:	mov    QWORD PTR [rbx+0x10],rax
   140002276:	mov    WORD PTR [rbx],ax
   140002279:	add    rsp,0x20
   14000227d:	pop    rbx
   14000227e:	ret    
   14000227f:	int3   
   140002280:	rex push rbx
   140002282:	sub    rsp,0x20
   140002286:	mov    r8,QWORD PTR [rcx]
   140002289:	lea    rdx,[rsp+0x30]
   14000228e:	mov    rbx,rcx
   140002291:	mov    r9,r8
   140002294:	mov    r8,QWORD PTR [r8]
   140002297:	call   0x140003f90
   14000229c:	mov    rcx,QWORD PTR [rbx]
   14000229f:	add    rsp,0x20
   1400022a3:	pop    rbx
   1400022a4:	jmp    0x140005cee
   1400022a9:	int3   
   1400022aa:	int3   
   1400022ab:	int3   
   1400022ac:	int3   
   1400022ad:	int3   
   1400022ae:	int3   
   1400022af:	int3   
   1400022b0:	rex push rbx
   1400022b2:	sub    rsp,0x20
   1400022b6:	cmp    QWORD PTR [rcx+0x38],0x10
   1400022bb:	mov    rbx,rcx
   1400022be:	jb     0x1400022c9
   1400022c0:	mov    rcx,QWORD PTR [rcx+0x20]
   1400022c4:	call   0x140005cee
   1400022c9:	mov    QWORD PTR [rbx+0x38],0xf
   1400022d1:	mov    QWORD PTR [rbx+0x30],0x0
   1400022d9:	mov    BYTE PTR [rbx+0x20],0x0
   1400022dd:	cmp    QWORD PTR [rbx+0x18],0x10
   1400022e2:	jb     0x1400022ec
   1400022e4:	mov    rcx,QWORD PTR [rbx]
   1400022e7:	call   0x140005cee
   1400022ec:	mov    QWORD PTR [rbx+0x18],0xf
   1400022f4:	mov    QWORD PTR [rbx+0x10],0x0
   1400022fc:	mov    BYTE PTR [rbx],0x0
   1400022ff:	add    rsp,0x20
   140002303:	pop    rbx
   140002304:	ret    
   140002305:	int3   
   140002306:	int3   
   140002307:	int3   
   140002308:	int3   
   140002309:	int3   
   14000230a:	int3   
   14000230b:	int3   
   14000230c:	int3   
   14000230d:	int3   
   14000230e:	int3   
   14000230f:	int3   
   140002310:	lea    rax,[rip+0x53a9]        # 0x1400076c0
   140002317:	mov    QWORD PTR [rcx],rax
   14000231a:	ret    
   14000231b:	int3   
   14000231c:	int3   
   14000231d:	int3   
   14000231e:	int3   
   14000231f:	int3   
   140002320:	lea    rax,[rip+0x5399]        # 0x1400076c0
   140002327:	mov    QWORD PTR [rcx],rax
   14000232a:	ret    
   14000232b:	int3   
   14000232c:	int3   
   14000232d:	int3   
   14000232e:	int3   
   14000232f:	int3   
   140002330:	lea    rax,[rip+0x5389]        # 0x1400076c0
   140002337:	mov    QWORD PTR [rcx],rax
   14000233a:	ret    
   14000233b:	int3   
   14000233c:	int3   
   14000233d:	int3   
   14000233e:	int3   
   14000233f:	int3   
   140002340:	lea    rax,[rip+0x5379]        # 0x1400076c0
   140002347:	mov    QWORD PTR [rcx],rax
   14000234a:	ret    
   14000234b:	int3   
   14000234c:	int3   
   14000234d:	int3   
   14000234e:	int3   
   14000234f:	int3   
   140002350:	mov    rax,rdx
   140002353:	ret    
   140002354:	int3   
   140002355:	int3   
   140002356:	int3   
   140002357:	int3   
   140002358:	int3   
   140002359:	int3   
   14000235a:	int3   
   14000235b:	int3   
   14000235c:	int3   
   14000235d:	int3   
   14000235e:	int3   
   14000235f:	int3   
   140002360:	ret    0x0
   140002363:	int3   
   140002364:	int3   
   140002365:	int3   
   140002366:	int3   
   140002367:	int3   
   140002368:	int3   
   140002369:	int3   
   14000236a:	int3   
   14000236b:	int3   
   14000236c:	int3   
   14000236d:	int3   
   14000236e:	int3   
   14000236f:	int3   
   140002370:	mov    QWORD PTR [rsp+0x8],rbx
   140002375:	push   rdi
   140002376:	sub    rsp,0x20
   14000237a:	mov    rdi,rdx
   14000237d:	mov    rbx,rcx
   140002380:	cmp    rcx,rdx
   140002383:	je     0x1400023c9
   140002385:	mov    rdx,QWORD PTR [rcx]
   140002388:	mov    rdx,QWORD PTR [rdx+0x8]
   14000238c:	call   0x140002e00
   140002391:	mov    rax,QWORD PTR [rbx]
   140002394:	mov    QWORD PTR [rax+0x8],rax
   140002398:	mov    rax,QWORD PTR [rbx]
   14000239b:	mov    QWORD PTR [rax],rax
   14000239e:	mov    rax,QWORD PTR [rbx]
   1400023a1:	mov    QWORD PTR [rax+0x10],rax
   1400023a5:	mov    rcx,QWORD PTR [rbx]
   1400023a8:	mov    QWORD PTR [rbx+0x8],0x0
   1400023b0:	mov    rax,QWORD PTR [rdi]
   1400023b3:	mov    QWORD PTR [rbx],rax
   1400023b6:	mov    QWORD PTR [rdi],rcx
   1400023b9:	mov    rax,QWORD PTR [rdi+0x8]
   1400023bd:	mov    rcx,QWORD PTR [rbx+0x8]
   1400023c1:	mov    QWORD PTR [rbx+0x8],rax
   1400023c5:	mov    QWORD PTR [rdi+0x8],rcx
   1400023c9:	mov    rax,rbx
   1400023cc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400023d1:	add    rsp,0x20
   1400023d5:	pop    rdi
   1400023d6:	ret    
   1400023d7:	int3   
   1400023d8:	int3   
   1400023d9:	int3   
   1400023da:	int3   
   1400023db:	int3   
   1400023dc:	int3   
   1400023dd:	int3   
   1400023de:	int3   
   1400023df:	int3   
   1400023e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400023e5:	push   rdi
   1400023e6:	sub    rsp,0x20
   1400023ea:	mov    rdi,rdx
   1400023ed:	mov    rbx,rcx
   1400023f0:	cmp    rcx,rdx
   1400023f3:	je     0x14000242e
   1400023f5:	mov    rdx,QWORD PTR [rcx]
   1400023f8:	mov    rdx,QWORD PTR [rdx+0x8]
   1400023fc:	call   0x140002e00
   140002401:	mov    rax,QWORD PTR [rbx]
   140002404:	mov    rdx,rdi
   140002407:	mov    QWORD PTR [rax+0x8],rax
   14000240b:	mov    rax,QWORD PTR [rbx]
   14000240e:	mov    rcx,rbx
   140002411:	mov    QWORD PTR [rax],rax
   140002414:	mov    rax,QWORD PTR [rbx]
   140002417:	mov    QWORD PTR [rax+0x10],rax
   14000241b:	xor    eax,eax
   14000241d:	mov    QWORD PTR [rbx+0x8],0x0
   140002425:	movzx  r8d,al
   140002429:	call   0x1400014b0
   14000242e:	mov    rax,rbx
   140002431:	mov    rbx,QWORD PTR [rsp+0x30]
   140002436:	add    rsp,0x20
   14000243a:	pop    rdi
   14000243b:	ret    
   14000243c:	int3   
   14000243d:	int3   
   14000243e:	int3   
   14000243f:	int3   
   140002440:	rex push rbx
   140002442:	sub    rsp,0x20
   140002446:	mov    rbx,rcx
   140002449:	cmp    rcx,rdx
   14000244c:	je     0x14000245a
   14000244e:	or     r9,0xffffffffffffffff
   140002452:	xor    r8d,r8d
   140002455:	call   0x1400036e0
   14000245a:	mov    rax,rbx
   14000245d:	add    rsp,0x20
   140002461:	pop    rbx
   140002462:	ret    
   140002463:	int3   
   140002464:	int3   
   140002465:	int3   
   140002466:	int3   
   140002467:	int3   
   140002468:	int3   
   140002469:	int3   
   14000246a:	int3   
   14000246b:	int3   
   14000246c:	int3   
   14000246d:	int3   
   14000246e:	int3   
   14000246f:	int3   
   140002470:	mov    QWORD PTR [rsp+0x8],rbx
   140002475:	push   rdi
   140002476:	sub    rsp,0x20
   14000247a:	mov    rdi,rdx
   14000247d:	mov    rbx,rcx
   140002480:	cmp    rcx,rdx
   140002483:	je     0x1400024c9
   140002485:	mov    rdx,QWORD PTR [rcx]
   140002488:	mov    rdx,QWORD PTR [rdx+0x8]
   14000248c:	call   0x140002e00
   140002491:	mov    rax,QWORD PTR [rbx]
   140002494:	mov    QWORD PTR [rax+0x8],rax
   140002498:	mov    rax,QWORD PTR [rbx]
   14000249b:	mov    QWORD PTR [rax],rax
   14000249e:	mov    rax,QWORD PTR [rbx]
   1400024a1:	mov    QWORD PTR [rax+0x10],rax
   1400024a5:	mov    rcx,QWORD PTR [rbx]
   1400024a8:	mov    QWORD PTR [rbx+0x8],0x0
   1400024b0:	mov    rax,QWORD PTR [rdi]
   1400024b3:	mov    QWORD PTR [rbx],rax
   1400024b6:	mov    QWORD PTR [rdi],rcx
   1400024b9:	mov    rax,QWORD PTR [rdi+0x8]
   1400024bd:	mov    rcx,QWORD PTR [rbx+0x8]
   1400024c1:	mov    QWORD PTR [rbx+0x8],rax
   1400024c5:	mov    QWORD PTR [rdi+0x8],rcx
   1400024c9:	mov    rax,rbx
   1400024cc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400024d1:	add    rsp,0x20
   1400024d5:	pop    rdi
   1400024d6:	ret    
   1400024d7:	int3   
   1400024d8:	int3   
   1400024d9:	int3   
   1400024da:	int3   
   1400024db:	int3   
   1400024dc:	int3   
   1400024dd:	int3   
   1400024de:	int3   
   1400024df:	int3   
   1400024e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400024e5:	push   rdi
   1400024e6:	sub    rsp,0x20
   1400024ea:	mov    rdi,rdx
   1400024ed:	mov    rbx,rcx
   1400024f0:	cmp    rcx,rdx
   1400024f3:	je     0x14000252e
   1400024f5:	mov    rdx,QWORD PTR [rcx]
   1400024f8:	mov    rdx,QWORD PTR [rdx+0x8]
   1400024fc:	call   0x140002e00
   140002501:	mov    rax,QWORD PTR [rbx]
   140002504:	mov    rdx,rdi
   140002507:	mov    QWORD PTR [rax+0x8],rax
   14000250b:	mov    rax,QWORD PTR [rbx]
   14000250e:	mov    rcx,rbx
   140002511:	mov    QWORD PTR [rax],rax
   140002514:	mov    rax,QWORD PTR [rbx]
   140002517:	mov    QWORD PTR [rax+0x10],rax
   14000251b:	xor    eax,eax
   14000251d:	mov    QWORD PTR [rbx+0x8],0x0
   140002525:	movzx  r8d,al
   140002529:	call   0x1400014b0
   14000252e:	mov    rax,rbx
   140002531:	mov    rbx,QWORD PTR [rsp+0x30]
   140002536:	add    rsp,0x20
   14000253a:	pop    rdi
   14000253b:	ret    
   14000253c:	int3   
   14000253d:	int3   
   14000253e:	int3   
   14000253f:	int3   
   140002540:	mov    QWORD PTR [rsp+0x8],rbx
   140002545:	mov    QWORD PTR [rsp+0x10],rsi
   14000254a:	push   rdi
   14000254b:	sub    rsp,0x20
   14000254f:	mov    rdi,rdx
   140002552:	mov    rbx,rcx
   140002555:	add    rdx,0x8
   140002559:	add    rcx,0x8
   14000255d:	cmp    rcx,rdx
   140002560:	je     0x14000256e
   140002562:	or     r9,0xffffffffffffffff
   140002566:	xor    r8d,r8d
   140002569:	call   0x1400036e0
   14000256e:	lea    rdx,[rdi+0x28]
   140002572:	lea    rcx,[rbx+0x28]
   140002576:	cmp    rcx,rdx
   140002579:	je     0x140002587
   14000257b:	or     r9,0xffffffffffffffff
   14000257f:	xor    r8d,r8d
   140002582:	call   0x1400036e0
   140002587:	lea    rdx,[rdi+0x48]
   14000258b:	lea    rcx,[rbx+0x48]
   14000258f:	cmp    rcx,rdx
   140002592:	je     0x1400025a0
   140002594:	or     r9,0xffffffffffffffff
   140002598:	xor    r8d,r8d
   14000259b:	call   0x1400036e0
   1400025a0:	lea    rdx,[rdi+0x68]
   1400025a4:	lea    rcx,[rbx+0x68]
   1400025a8:	cmp    rcx,rdx
   1400025ab:	je     0x1400025b9
   1400025ad:	or     r9,0xffffffffffffffff
   1400025b1:	xor    r8d,r8d
   1400025b4:	call   0x1400036e0
   1400025b9:	movzx  eax,WORD PTR [rdi+0x88]
   1400025c0:	lea    rsi,[rdi+0x90]
   1400025c7:	mov    WORD PTR [rbx+0x88],ax
   1400025ce:	movzx  eax,WORD PTR [rdi+0x8a]
   1400025d5:	lea    rdi,[rbx+0x90]
   1400025dc:	mov    WORD PTR [rbx+0x8a],ax
   1400025e3:	cmp    rdi,rsi
   1400025e6:	je     0x140002624
   1400025e8:	mov    rdx,QWORD PTR [rdi]
   1400025eb:	mov    rcx,rdi
   1400025ee:	mov    rdx,QWORD PTR [rdx+0x8]
   1400025f2:	call   0x140002e00
   1400025f7:	mov    rax,QWORD PTR [rdi]
   1400025fa:	mov    rdx,rsi
   1400025fd:	mov    QWORD PTR [rax+0x8],rax
   140002601:	mov    rax,QWORD PTR [rdi]
   140002604:	mov    rcx,rdi
   140002607:	mov    QWORD PTR [rax],rax
   14000260a:	mov    rax,QWORD PTR [rdi]
   14000260d:	mov    QWORD PTR [rax+0x10],rax
   140002611:	xor    eax,eax
   140002613:	mov    QWORD PTR [rdi+0x8],0x0
   14000261b:	movzx  r8d,al
   14000261f:	call   0x1400014b0
   140002624:	mov    rsi,QWORD PTR [rsp+0x38]
   140002629:	mov    rax,rbx
   14000262c:	mov    rbx,QWORD PTR [rsp+0x30]
   140002631:	add    rsp,0x20
   140002635:	pop    rdi
   140002636:	ret    
   140002637:	int3   
   140002638:	int3   
   140002639:	int3   
   14000263a:	int3   
   14000263b:	int3   
   14000263c:	int3   
   14000263d:	int3   
   14000263e:	int3   
   14000263f:	int3   
   140002640:	mov    rax,rcx
   140002643:	ret    
   140002644:	int3   
   140002645:	int3   
   140002646:	int3   
   140002647:	int3   
   140002648:	int3   
   140002649:	int3   
   14000264a:	int3   
   14000264b:	int3   
   14000264c:	int3   
   14000264d:	int3   
   14000264e:	int3   
   14000264f:	int3   
   140002650:	mov    rdx,QWORD PTR [rdx]
   140002653:	cmp    QWORD PTR [rcx],rdx
   140002656:	sete   al
   140002659:	ret    
   14000265a:	int3   
   14000265b:	int3   
   14000265c:	int3   
   14000265d:	int3   
   14000265e:	int3   
   14000265f:	int3   
   140002660:	cmp    rcx,rdx
   140002663:	sete   al
   140002666:	ret    
   140002667:	int3   
   140002668:	int3   
   140002669:	int3   
   14000266a:	int3   
   14000266b:	int3   
   14000266c:	int3   
   14000266d:	int3   
   14000266e:	int3   
   14000266f:	int3   
   140002670:	mov    rax,QWORD PTR [rdx+0x8]
   140002674:	cmp    QWORD PTR [rcx+0x8],rax
   140002678:	jne    0x140002683
   14000267a:	mov    eax,DWORD PTR [rdx]
   14000267c:	cmp    DWORD PTR [rcx],eax
   14000267e:	jne    0x140002683
   140002680:	mov    al,0x1
   140002682:	ret    
   140002683:	xor    al,al
   140002685:	ret    
   140002686:	int3   
   140002687:	int3   
   140002688:	int3   
   140002689:	int3   
   14000268a:	int3   
   14000268b:	int3   
   14000268c:	int3   
   14000268d:	int3   
   14000268e:	int3   
   14000268f:	int3   
   140002690:	mov    rdx,QWORD PTR [rdx]
   140002693:	cmp    QWORD PTR [rcx],rdx
   140002696:	setne  al
   140002699:	ret    
   14000269a:	int3   
   14000269b:	int3   
   14000269c:	int3   
   14000269d:	int3   
   14000269e:	int3   
   14000269f:	int3   
   1400026a0:	mov    rax,QWORD PTR [rcx]
   1400026a3:	mov    r8,rcx
   1400026a6:	cmp    BYTE PTR [rax+0x19],0x0
   1400026aa:	mov    QWORD PTR [rdx],rax
   1400026ad:	jne    0x1400026f9
   1400026af:	mov    rcx,QWORD PTR [rax+0x10]
   1400026b3:	cmp    BYTE PTR [rcx+0x19],0x0
   1400026b7:	jne    0x1400026d5
   1400026b9:	mov    rax,QWORD PTR [rcx]
   1400026bc:	cmp    BYTE PTR [rax+0x19],0x0
   1400026c0:	jne    0x1400026ce
   1400026c2:	mov    rcx,rax
   1400026c5:	mov    rax,QWORD PTR [rax]
   1400026c8:	cmp    BYTE PTR [rax+0x19],0x0
   1400026cc:	je     0x1400026c2
   1400026ce:	mov    QWORD PTR [r8],rcx
   1400026d1:	mov    rax,rdx
   1400026d4:	ret    
   1400026d5:	mov    rax,QWORD PTR [rax+0x8]
   1400026d9:	cmp    BYTE PTR [rax+0x19],0x0
   1400026dd:	jne    0x1400026f6
   1400026df:	nop
   1400026e0:	mov    rcx,QWORD PTR [rax+0x10]
   1400026e4:	cmp    QWORD PTR [r8],rcx
   1400026e7:	jne    0x1400026f6
   1400026e9:	mov    QWORD PTR [r8],rax
   1400026ec:	mov    rax,QWORD PTR [rax+0x8]
   1400026f0:	cmp    BYTE PTR [rax+0x19],0x0
   1400026f4:	je     0x1400026e0
   1400026f6:	mov    QWORD PTR [r8],rax
   1400026f9:	mov    rax,rdx
   1400026fc:	ret    
   1400026fd:	int3   
   1400026fe:	int3   
   1400026ff:	int3   
   140002700:	mov    rax,QWORD PTR [rcx]
   140002703:	mov    rdx,rcx
   140002706:	cmp    BYTE PTR [rax+0x19],0x0
   14000270a:	jne    0x140002759
   14000270c:	mov    rcx,QWORD PTR [rax+0x10]
   140002710:	cmp    BYTE PTR [rcx+0x19],0x0
   140002714:	jne    0x140002733
   140002716:	mov    rax,QWORD PTR [rcx]
   140002719:	cmp    BYTE PTR [rax+0x19],0x0
   14000271d:	jne    0x14000272c
   14000271f:	nop
   140002720:	mov    rcx,rax
   140002723:	mov    rax,QWORD PTR [rax]
   140002726:	cmp    BYTE PTR [rax+0x19],0x0
   14000272a:	je     0x140002720
   14000272c:	mov    QWORD PTR [rdx],rcx
   14000272f:	mov    rax,rdx
   140002732:	ret    
   140002733:	mov    rax,QWORD PTR [rax+0x8]
   140002737:	cmp    BYTE PTR [rax+0x19],0x0
   14000273b:	jne    0x140002756
   14000273d:	nop    DWORD PTR [rax]
   140002740:	mov    rcx,QWORD PTR [rax+0x10]
   140002744:	cmp    QWORD PTR [rdx],rcx
   140002747:	jne    0x140002756
   140002749:	mov    QWORD PTR [rdx],rax
   14000274c:	mov    rax,QWORD PTR [rax+0x8]
   140002750:	cmp    BYTE PTR [rax+0x19],0x0
   140002754:	je     0x140002740
   140002756:	mov    QWORD PTR [rdx],rax
   140002759:	mov    rax,rdx
   14000275c:	ret    
   14000275d:	int3   
   14000275e:	int3   
   14000275f:	int3   
   140002760:	mov    rax,QWORD PTR [rcx]
   140002763:	mov    rdx,rcx
   140002766:	cmp    BYTE PTR [rax+0x19],0x0
   14000276a:	jne    0x1400027b9
   14000276c:	mov    rcx,QWORD PTR [rax+0x10]
   140002770:	cmp    BYTE PTR [rcx+0x19],0x0
   140002774:	jne    0x140002793
   140002776:	mov    rax,QWORD PTR [rcx]
   140002779:	cmp    BYTE PTR [rax+0x19],0x0
   14000277d:	jne    0x14000278c
   14000277f:	nop
   140002780:	mov    rcx,rax
   140002783:	mov    rax,QWORD PTR [rax]
   140002786:	cmp    BYTE PTR [rax+0x19],0x0
   14000278a:	je     0x140002780
   14000278c:	mov    QWORD PTR [rdx],rcx
   14000278f:	mov    rax,rdx
   140002792:	ret    
   140002793:	mov    rax,QWORD PTR [rax+0x8]
   140002797:	cmp    BYTE PTR [rax+0x19],0x0
   14000279b:	jne    0x1400027b6
   14000279d:	nop    DWORD PTR [rax]
   1400027a0:	mov    rcx,QWORD PTR [rax+0x10]
   1400027a4:	cmp    QWORD PTR [rdx],rcx
   1400027a7:	jne    0x1400027b6
   1400027a9:	mov    QWORD PTR [rdx],rax
   1400027ac:	mov    rax,QWORD PTR [rax+0x8]
   1400027b0:	cmp    BYTE PTR [rax+0x19],0x0
   1400027b4:	je     0x1400027a0
   1400027b6:	mov    QWORD PTR [rdx],rax
   1400027b9:	mov    rax,rdx
   1400027bc:	ret    
   1400027bd:	int3   
   1400027be:	int3   
   1400027bf:	int3   
   1400027c0:	sub    rsp,0x28
   1400027c4:	mov    rcx,rdx
   1400027c7:	mov    rdx,r8
   1400027ca:	call   0x140003cc0
   1400027cf:	test   eax,eax
   1400027d1:	sets   al
   1400027d4:	add    rsp,0x28
   1400027d8:	ret    
   1400027d9:	int3   
   1400027da:	int3   
   1400027db:	int3   
   1400027dc:	int3   
   1400027dd:	int3   
   1400027de:	int3   
   1400027df:	int3   
   1400027e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400027e5:	push   rsi
   1400027e6:	sub    rsp,0x20
   1400027ea:	mov    esi,edx
   1400027ec:	mov    rbx,rcx
   1400027ef:	test   dl,0x2
   1400027f2:	je     0x140002831
   1400027f4:	mov    r8d,DWORD PTR [rcx-0x8]
   1400027f8:	lea    r9,[rip+0x3381]        # 0x140005b80
   1400027ff:	mov    edx,0xa0
   140002804:	mov    QWORD PTR [rsp+0x30],rdi
   140002809:	call   0x140005c1c
   14000280e:	test   sil,0x1
   140002812:	je     0x14000281d
   140002814:	lea    rcx,[rbx-0x8]
   140002818:	call   0x140005e2a
   14000281d:	lea    rax,[rbx-0x8]
   140002821:	mov    rdi,QWORD PTR [rsp+0x30]
   140002826:	mov    rbx,QWORD PTR [rsp+0x38]
   14000282b:	add    rsp,0x20
   14000282f:	pop    rsi
   140002830:	ret    
   140002831:	call   0x140005b80
   140002836:	test   sil,0x1
   14000283a:	je     0x140002844
   14000283c:	mov    rcx,rbx
   14000283f:	call   0x140005cee
   140002844:	mov    rax,rbx
   140002847:	mov    rbx,QWORD PTR [rsp+0x38]
   14000284c:	add    rsp,0x20
   140002850:	pop    rsi
   140002851:	ret    
   140002852:	int3   
   140002853:	int3   
   140002854:	int3   
   140002855:	int3   
   140002856:	int3   
   140002857:	int3   
   140002858:	int3   
   140002859:	int3   
   14000285a:	int3   
   14000285b:	int3   
   14000285c:	int3   
   14000285d:	int3   
   14000285e:	int3   
   14000285f:	int3   
   140002860:	mov    QWORD PTR [rsp+0x8],rbx
   140002865:	push   rdi
   140002866:	sub    rsp,0x20
   14000286a:	cmp    QWORD PTR [rcx+0x38],0x10
   14000286f:	mov    edi,edx
   140002871:	mov    rbx,rcx
   140002874:	jb     0x14000287f
   140002876:	mov    rcx,QWORD PTR [rcx+0x20]
   14000287a:	call   0x140005cee
   14000287f:	mov    QWORD PTR [rbx+0x38],0xf
   140002887:	mov    QWORD PTR [rbx+0x30],0x0
   14000288f:	mov    BYTE PTR [rbx+0x20],0x0
   140002893:	cmp    QWORD PTR [rbx+0x18],0x10
   140002898:	jb     0x1400028a2
   14000289a:	mov    rcx,QWORD PTR [rbx]
   14000289d:	call   0x140005cee
   1400028a2:	mov    QWORD PTR [rbx+0x18],0xf
   1400028aa:	mov    QWORD PTR [rbx+0x10],0x0
   1400028b2:	mov    BYTE PTR [rbx],0x0
   1400028b5:	test   dil,0x1
   1400028b9:	je     0x1400028c3
   1400028bb:	mov    rcx,rbx
   1400028be:	call   0x140005cee
   1400028c3:	mov    rax,rbx
   1400028c6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400028cb:	add    rsp,0x20
   1400028cf:	pop    rdi
   1400028d0:	ret    
   1400028d1:	int3   
   1400028d2:	int3   
   1400028d3:	int3   
   1400028d4:	int3   
   1400028d5:	int3   
   1400028d6:	int3   
   1400028d7:	int3   
   1400028d8:	int3   
   1400028d9:	int3   
   1400028da:	int3   
   1400028db:	int3   
   1400028dc:	int3   
   1400028dd:	int3   
   1400028de:	int3   
   1400028df:	int3   
   1400028e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400028e5:	push   rdi
   1400028e6:	sub    rsp,0x20
   1400028ea:	mov    ebx,edx
   1400028ec:	mov    rdi,rcx
   1400028ef:	call   0x140005b80
   1400028f4:	test   bl,0x1
   1400028f7:	je     0x140002901
   1400028f9:	mov    rcx,rdi
   1400028fc:	call   0x140005cee
   140002901:	mov    rax,rdi
   140002904:	mov    rbx,QWORD PTR [rsp+0x30]
   140002909:	add    rsp,0x20
   14000290d:	pop    rdi
   14000290e:	ret    
   14000290f:	int3   
   140002910:	rex push rbx
   140002912:	sub    rsp,0x20
   140002916:	lea    rax,[rip+0x4da3]        # 0x1400076c0
   14000291d:	mov    rbx,rcx
   140002920:	mov    QWORD PTR [rcx],rax
   140002923:	test   dl,0x1
   140002926:	je     0x14000292d
   140002928:	call   0x140005cee
   14000292d:	mov    rax,rbx
   140002930:	add    rsp,0x20
   140002934:	pop    rbx
   140002935:	ret    
   140002936:	int3   
   140002937:	int3   
   140002938:	int3   
   140002939:	int3   
   14000293a:	int3   
   14000293b:	int3   
   14000293c:	int3   
   14000293d:	int3   
   14000293e:	int3   
   14000293f:	int3   
   140002940:	rex push rbx
   140002942:	sub    rsp,0x20
   140002946:	lea    rax,[rip+0x4d73]        # 0x1400076c0
   14000294d:	mov    rbx,rcx
   140002950:	mov    QWORD PTR [rcx],rax
   140002953:	test   dl,0x1
   140002956:	je     0x14000295d
   140002958:	call   0x140005cee
   14000295d:	mov    rax,rbx
   140002960:	add    rsp,0x20
   140002964:	pop    rbx
   140002965:	ret    
   140002966:	int3   
   140002967:	int3   
   140002968:	int3   
   140002969:	int3   
   14000296a:	int3   
   14000296b:	int3   
   14000296c:	int3   
   14000296d:	int3   
   14000296e:	int3   
   14000296f:	int3   
   140002970:	rex push rbx
   140002972:	sub    rsp,0x20
   140002976:	lea    rax,[rip+0x4d43]        # 0x1400076c0
   14000297d:	mov    rbx,rcx
   140002980:	mov    QWORD PTR [rcx],rax
   140002983:	test   dl,0x1
   140002986:	je     0x14000298d
   140002988:	call   0x140005cee
   14000298d:	mov    rax,rbx
   140002990:	add    rsp,0x20
   140002994:	pop    rbx
   140002995:	ret    
   140002996:	int3   
   140002997:	int3   
   140002998:	int3   
   140002999:	int3   
   14000299a:	int3   
   14000299b:	int3   
   14000299c:	int3   
   14000299d:	int3   
   14000299e:	int3   
   14000299f:	int3   
   1400029a0:	rex push rbx
   1400029a2:	sub    rsp,0x20
   1400029a6:	lea    rax,[rip+0x4d13]        # 0x1400076c0
   1400029ad:	mov    rbx,rcx
   1400029b0:	mov    QWORD PTR [rcx],rax
   1400029b3:	test   dl,0x1
   1400029b6:	je     0x1400029bd
   1400029b8:	call   0x140005cee
   1400029bd:	mov    rax,rbx
   1400029c0:	add    rsp,0x20
   1400029c4:	pop    rbx
   1400029c5:	ret    
   1400029c6:	int3   
   1400029c7:	int3   
   1400029c8:	int3   
   1400029c9:	int3   
   1400029ca:	int3   
   1400029cb:	int3   
   1400029cc:	int3   
   1400029cd:	int3   
   1400029ce:	int3   
   1400029cf:	int3   
   1400029d0:	ret    0x0
   1400029d3:	int3   
   1400029d4:	int3   
   1400029d5:	int3   
   1400029d6:	int3   
   1400029d7:	int3   
   1400029d8:	int3   
   1400029d9:	int3   
   1400029da:	int3   
   1400029db:	int3   
   1400029dc:	int3   
   1400029dd:	int3   
   1400029de:	int3   
   1400029df:	int3   
   1400029e0:	mov    rax,QWORD PTR [rdx]
   1400029e3:	mov    r8,QWORD PTR [rcx]
   1400029e6:	mov    QWORD PTR [rcx],rax
   1400029e9:	mov    QWORD PTR [rdx],r8
   1400029ec:	mov    rax,QWORD PTR [rdx+0x8]
   1400029f0:	mov    r8,QWORD PTR [rcx+0x8]
   1400029f4:	mov    QWORD PTR [rcx+0x8],rax
   1400029f8:	mov    QWORD PTR [rdx+0x8],r8
   1400029fc:	ret    
   1400029fd:	int3   
   1400029fe:	int3   
   1400029ff:	int3   
   140002a00:	mov    rax,QWORD PTR [rdx]
   140002a03:	mov    r8,QWORD PTR [rcx]
   140002a06:	mov    QWORD PTR [rcx],rax
   140002a09:	mov    QWORD PTR [rdx],r8
   140002a0c:	mov    rax,QWORD PTR [rdx+0x8]
   140002a10:	mov    r8,QWORD PTR [rcx+0x8]
   140002a14:	mov    QWORD PTR [rcx+0x8],rax
   140002a18:	mov    QWORD PTR [rdx+0x8],r8
   140002a1c:	ret    
   140002a1d:	int3   
   140002a1e:	int3   
   140002a1f:	int3   
   140002a20:	mov    rax,QWORD PTR [rdx]
   140002a23:	mov    r8,QWORD PTR [rcx]
   140002a26:	mov    QWORD PTR [rcx],rax
   140002a29:	mov    QWORD PTR [rdx],r8
   140002a2c:	mov    rax,QWORD PTR [rdx+0x8]
   140002a30:	mov    r8,QWORD PTR [rcx+0x8]
   140002a34:	mov    QWORD PTR [rcx+0x8],rax
   140002a38:	mov    QWORD PTR [rdx+0x8],r8
   140002a3c:	ret    
   140002a3d:	int3   
   140002a3e:	int3   
   140002a3f:	int3   
   140002a40:	mov    QWORD PTR [rsp+0x8],rbx
   140002a45:	push   rdi
   140002a46:	sub    rsp,0x20
   140002a4a:	cmp    QWORD PTR [rdx+0x18],0x10
   140002a4f:	mov    rbx,rdx
   140002a52:	mov    rdi,rcx
   140002a55:	jae    0x140002a68
   140002a57:	mov    r8,QWORD PTR [rdx+0x10]
   140002a5b:	inc    r8
   140002a5e:	je     0x140002a7a
   140002a60:	call   QWORD PTR [rip+0x46c2]        # 0x140007128
   140002a66:	jmp    0x140002a7a
   140002a68:	test   rcx,rcx
   140002a6b:	je     0x140002a73
   140002a6d:	mov    rax,QWORD PTR [rdx]
   140002a70:	mov    QWORD PTR [rcx],rax
   140002a73:	mov    QWORD PTR [rdx],0x0
   140002a7a:	mov    rax,QWORD PTR [rbx+0x10]
   140002a7e:	mov    QWORD PTR [rdi+0x10],rax
   140002a82:	mov    rax,QWORD PTR [rbx+0x18]
   140002a86:	mov    QWORD PTR [rdi+0x18],rax
   140002a8a:	mov    QWORD PTR [rbx+0x18],0xf
   140002a92:	mov    QWORD PTR [rbx+0x10],0x0
   140002a9a:	mov    BYTE PTR [rbx],0x0
   140002a9d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002aa2:	add    rsp,0x20
   140002aa6:	pop    rdi
   140002aa7:	ret    
   140002aa8:	int3   
   140002aa9:	int3   
   140002aaa:	int3   
   140002aab:	int3   
   140002aac:	int3   
   140002aad:	int3   
   140002aae:	int3   
   140002aaf:	int3   
   140002ab0:	sub    rsp,0x38
   140002ab4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002abd:	mov    ecx,0x60
   140002ac2:	call   0x140005ce8
   140002ac7:	mov    QWORD PTR [rsp+0x48],rax
   140002acc:	test   rax,rax
   140002acf:	jne    0x140002ad8
   140002ad1:	call   QWORD PTR [rip+0x4581]        # 0x140007058
   140002ad7:	nop
   140002ad8:	mov    QWORD PTR [rax],rax
   140002adb:	lea    rcx,[rax+0x8]
   140002adf:	test   rcx,rcx
   140002ae2:	je     0x140002ae7
   140002ae4:	mov    QWORD PTR [rcx],rax
   140002ae7:	lea    rcx,[rax+0x10]
   140002aeb:	test   rcx,rcx
   140002aee:	je     0x140002af3
   140002af0:	mov    QWORD PTR [rcx],rax
   140002af3:	mov    WORD PTR [rax+0x18],0x101
   140002af9:	add    rsp,0x38
   140002afd:	ret    
   140002afe:	int3   
   140002aff:	int3   
   140002b00:	rex push rbx
   140002b02:	sub    rsp,0x30
   140002b06:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002b0f:	mov    rbx,rcx
   140002b12:	mov    ecx,0x60
   140002b17:	call   0x140005ce8
   140002b1c:	mov    rdx,rax
   140002b1f:	mov    QWORD PTR [rsp+0x48],rax
   140002b24:	test   rax,rax
   140002b27:	jne    0x140002b30
   140002b29:	call   QWORD PTR [rip+0x4529]        # 0x140007058
   140002b2f:	nop
   140002b30:	mov    rax,QWORD PTR [rbx]
   140002b33:	mov    QWORD PTR [rdx],rax
   140002b36:	lea    rcx,[rdx+0x8]
   140002b3a:	test   rcx,rcx
   140002b3d:	je     0x140002b45
   140002b3f:	mov    rax,QWORD PTR [rbx]
   140002b42:	mov    QWORD PTR [rcx],rax
   140002b45:	lea    rcx,[rdx+0x10]
   140002b49:	test   rcx,rcx
   140002b4c:	je     0x140002b54
   140002b4e:	mov    rax,QWORD PTR [rbx]
   140002b51:	mov    QWORD PTR [rcx],rax
   140002b54:	mov    rax,rdx
   140002b57:	add    rsp,0x30
   140002b5b:	pop    rbx
   140002b5c:	ret    
   140002b5d:	int3   
   140002b5e:	int3   
   140002b5f:	int3   
   140002b60:	ret    0x0
   140002b63:	int3   
   140002b64:	int3   
   140002b65:	int3   
   140002b66:	int3   
   140002b67:	int3   
   140002b68:	int3   
   140002b69:	int3   
   140002b6a:	int3   
   140002b6b:	int3   
   140002b6c:	int3   
   140002b6d:	int3   
   140002b6e:	int3   
   140002b6f:	int3   
   140002b70:	ret    0x0
   140002b73:	int3   
   140002b74:	int3   
   140002b75:	int3   
   140002b76:	int3   
   140002b77:	int3   
   140002b78:	int3   
   140002b79:	int3   
   140002b7a:	int3   
   140002b7b:	int3   
   140002b7c:	int3   
   140002b7d:	int3   
   140002b7e:	int3   
   140002b7f:	int3   
   140002b80:	lea    rax,[rcx+0x18]
   140002b84:	ret    
   140002b85:	int3   
   140002b86:	int3   
   140002b87:	int3   
   140002b88:	int3   
   140002b89:	int3   
   140002b8a:	int3   
   140002b8b:	int3   
   140002b8c:	int3   
   140002b8d:	int3   
   140002b8e:	int3   
   140002b8f:	int3   
   140002b90:	mov    QWORD PTR [rsp+0x18],r8
   140002b95:	mov    QWORD PTR [rsp+0x10],rdx
   140002b9a:	mov    QWORD PTR [rsp+0x8],rcx
   140002b9f:	push   rbx
   140002ba0:	push   rsi
   140002ba1:	push   rdi
   140002ba2:	push   r14
   140002ba4:	sub    rsp,0x38
   140002ba8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002bb1:	mov    rsi,r8
   140002bb4:	mov    rbx,rcx
   140002bb7:	mov    rdi,rdx
   140002bba:	or     rdi,0xf
   140002bbe:	cmp    rdi,0xfffffffffffffffe
   140002bc2:	jbe    0x140002bc9
   140002bc4:	mov    rdi,rdx
   140002bc7:	jmp    0x140002bfe
   140002bc9:	mov    r8,QWORD PTR [rcx+0x18]
   140002bcd:	mov    rcx,r8
   140002bd0:	shr    rcx,1
   140002bd3:	movabs rax,0xaaaaaaaaaaaaaaab
   140002bdd:	mul    rdi
   140002be0:	shr    rdx,1
   140002be3:	cmp    rcx,rdx
   140002be6:	jbe    0x140002bfe
   140002be8:	mov    rdi,0xfffffffffffffffe
   140002bef:	mov    rax,rdi
   140002bf2:	sub    rax,rcx
   140002bf5:	cmp    r8,rax
   140002bf8:	ja     0x140002bfe
   140002bfa:	lea    rdi,[rcx+r8*1]
   140002bfe:	lea    rcx,[rdi+0x1]
   140002c02:	xor    r14d,r14d
   140002c05:	test   rcx,rcx
   140002c08:	je     0x140002c24
   140002c0a:	cmp    rcx,0xffffffffffffffff
   140002c0e:	ja     0x140002c1d
   140002c10:	call   0x140005ce8
   140002c15:	mov    r14,rax
   140002c18:	test   rax,rax
   140002c1b:	jne    0x140002c24
   140002c1d:	call   QWORD PTR [rip+0x4435]        # 0x140007058
   140002c23:	nop
   140002c24:	jmp    0x140002c3a
   140002c26:	mov    rbx,QWORD PTR [rsp+0x60]
   140002c2b:	mov    rsi,QWORD PTR [rsp+0x70]
   140002c30:	mov    rdi,QWORD PTR [rsp+0x68]
   140002c35:	mov    r14,QWORD PTR [rsp+0x78]
   140002c3a:	test   rsi,rsi
   140002c3d:	je     0x140002c5e
   140002c3f:	cmp    QWORD PTR [rbx+0x18],0x10
   140002c44:	jb     0x140002c4b
   140002c46:	mov    rdx,QWORD PTR [rbx]
   140002c49:	jmp    0x140002c4e
   140002c4b:	mov    rdx,rbx
   140002c4e:	test   rsi,rsi
   140002c51:	je     0x140002c5e
   140002c53:	mov    r8,rsi
   140002c56:	mov    rcx,r14
   140002c59:	call   0x140005e42
   140002c5e:	cmp    QWORD PTR [rbx+0x18],0x10
   140002c63:	jb     0x140002c6d
   140002c65:	mov    rcx,QWORD PTR [rbx]
   140002c68:	call   0x140005cee
   140002c6d:	mov    BYTE PTR [rbx],0x0
   140002c70:	mov    QWORD PTR [rbx],r14
   140002c73:	mov    QWORD PTR [rbx+0x18],rdi
   140002c77:	mov    QWORD PTR [rbx+0x10],rsi
   140002c7b:	cmp    rdi,0x10
   140002c7f:	jb     0x140002c84
   140002c81:	mov    rbx,r14
   140002c84:	mov    BYTE PTR [rbx+rsi*1],0x0
   140002c88:	add    rsp,0x38
   140002c8c:	pop    r14
   140002c8e:	pop    rdi
   140002c8f:	pop    rsi
   140002c90:	pop    rbx
   140002c91:	ret    
   140002c92:	int3   
   140002c93:	int3   
   140002c94:	int3   
   140002c95:	int3   
   140002c96:	int3   
   140002c97:	int3   
   140002c98:	int3   
   140002c99:	int3   
   140002c9a:	int3   
   140002c9b:	int3   
   140002c9c:	int3   
   140002c9d:	int3   
   140002c9e:	int3   
   140002c9f:	int3   
   140002ca0:	mov    QWORD PTR [rsp+0x18],r8
   140002ca5:	mov    QWORD PTR [rsp+0x10],rdx
   140002caa:	mov    QWORD PTR [rsp+0x8],rcx
   140002caf:	push   rbx
   140002cb0:	push   rsi
   140002cb1:	push   rdi
   140002cb2:	push   r14
   140002cb4:	push   r15
   140002cb6:	sub    rsp,0x30
   140002cba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002cc3:	mov    rsi,r8
   140002cc6:	mov    rbx,rcx
   140002cc9:	mov    rdi,rdx
   140002ccc:	or     rdi,0x7
   140002cd0:	movabs r9,0x7ffffffffffffffe
   140002cda:	cmp    rdi,r9
   140002cdd:	jbe    0x140002ce4
   140002cdf:	mov    rdi,rdx
   140002ce2:	jmp    0x140002d15
   140002ce4:	mov    r8,QWORD PTR [rcx+0x18]
   140002ce8:	mov    rcx,r8
   140002ceb:	shr    rcx,1
   140002cee:	movabs rax,0xaaaaaaaaaaaaaaab
   140002cf8:	mul    rdi
   140002cfb:	shr    rdx,1
   140002cfe:	cmp    rcx,rdx
   140002d01:	jbe    0x140002d15
   140002d03:	mov    rax,r9
   140002d06:	sub    rax,rcx
   140002d09:	cmp    r8,rax
   140002d0c:	lea    rdi,[rcx+r8*1]
   140002d10:	jbe    0x140002d15
   140002d12:	mov    rdi,r9
   140002d15:	lea    rcx,[rdi+0x1]
   140002d19:	xor    r15d,r15d
   140002d1c:	mov    r14d,r15d
   140002d1f:	test   rcx,rcx
   140002d22:	je     0x140002d4a
   140002d24:	movabs rax,0x7fffffffffffffff
   140002d2e:	cmp    rcx,rax
   140002d31:	ja     0x140002d43
   140002d33:	add    rcx,rcx
   140002d36:	call   0x140005ce8
   140002d3b:	mov    r14,rax
   140002d3e:	test   rax,rax
   140002d41:	jne    0x140002d4a
   140002d43:	call   QWORD PTR [rip+0x430f]        # 0x140007058
   140002d49:	nop
   140002d4a:	jmp    0x140002d63
   140002d4c:	xor    r15d,r15d
   140002d4f:	mov    rbx,QWORD PTR [rsp+0x60]
   140002d54:	mov    rsi,QWORD PTR [rsp+0x70]
   140002d59:	mov    rdi,QWORD PTR [rsp+0x68]
   140002d5e:	mov    r14,QWORD PTR [rsp+0x78]
   140002d63:	test   rsi,rsi
   140002d66:	je     0x140002d88
   140002d68:	cmp    QWORD PTR [rbx+0x18],0x8
   140002d6d:	jb     0x140002d74
   140002d6f:	mov    rdx,QWORD PTR [rbx]
   140002d72:	jmp    0x140002d77
   140002d74:	mov    rdx,rbx
   140002d77:	test   rsi,rsi
   140002d7a:	je     0x140002d88
   140002d7c:	lea    r8,[rsi+rsi*1]
   140002d80:	mov    rcx,r14
   140002d83:	call   0x140005e42
   140002d88:	cmp    QWORD PTR [rbx+0x18],0x8
   140002d8d:	jb     0x140002d97
   140002d8f:	mov    rcx,QWORD PTR [rbx]
   140002d92:	call   0x140005cee
   140002d97:	mov    QWORD PTR [rbx],r14
   140002d9a:	mov    QWORD PTR [rbx+0x18],rdi
   140002d9e:	mov    QWORD PTR [rbx+0x10],rsi
   140002da2:	cmp    rdi,0x8
   140002da6:	jb     0x140002dab
   140002da8:	mov    rbx,r14
   140002dab:	mov    WORD PTR [rbx+rsi*2],r15w
   140002db0:	add    rsp,0x30
   140002db4:	pop    r15
   140002db6:	pop    r14
   140002db8:	pop    rdi
   140002db9:	pop    rsi
   140002dba:	pop    rbx
   140002dbb:	ret    
   140002dbc:	int3   
   140002dbd:	int3   
   140002dbe:	int3   
   140002dbf:	int3   
   140002dc0:	cmp    QWORD PTR [rcx+0x18],0x10
   140002dc5:	mov    QWORD PTR [rcx+0x10],rdx
   140002dc9:	jb     0x140002dd3
   140002dcb:	mov    rax,QWORD PTR [rcx]
   140002dce:	mov    BYTE PTR [rax+rdx*1],0x0
   140002dd2:	ret    
   140002dd3:	mov    BYTE PTR [rcx+rdx*1],0x0
   140002dd7:	ret    
   140002dd8:	int3   
   140002dd9:	int3   
   140002dda:	int3   
   140002ddb:	int3   
   140002ddc:	int3   
   140002ddd:	int3   
   140002dde:	int3   
   140002ddf:	int3   
   140002de0:	cmp    QWORD PTR [rcx+0x18],0x8
   140002de5:	mov    rax,rcx
   140002de8:	mov    QWORD PTR [rcx+0x10],rdx
   140002dec:	jb     0x140002df1
   140002dee:	mov    rax,QWORD PTR [rcx]
   140002df1:	xor    ecx,ecx
   140002df3:	mov    WORD PTR [rax+rdx*2],cx
   140002df7:	ret    
   140002df8:	int3   
   140002df9:	int3   
   140002dfa:	int3   
   140002dfb:	int3   
   140002dfc:	int3   
   140002dfd:	int3   
   140002dfe:	int3   
   140002dff:	int3   
   140002e00:	mov    QWORD PTR [rsp+0x10],rbx
   140002e05:	mov    QWORD PTR [rsp+0x18],rsi
   140002e0a:	push   rdi
   140002e0b:	sub    rsp,0x20
   140002e0f:	cmp    BYTE PTR [rdx+0x19],0x0
   140002e13:	mov    rbx,rdx
   140002e16:	mov    rsi,rcx
   140002e19:	mov    rdi,rdx
   140002e1c:	jne    0x140002e95
   140002e1e:	mov    QWORD PTR [rsp+0x30],rbp
   140002e23:	xor    ebp,ebp
   140002e25:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140002e30:	mov    rdx,QWORD PTR [rdi+0x10]
   140002e34:	mov    rcx,rsi
   140002e37:	call   0x140002e00
   140002e3c:	cmp    QWORD PTR [rbx+0x58],0x10
   140002e41:	mov    rdi,QWORD PTR [rdi]
   140002e44:	jb     0x140002e4f
   140002e46:	mov    rcx,QWORD PTR [rbx+0x40]
   140002e4a:	call   0x140005cee
   140002e4f:	mov    QWORD PTR [rbx+0x58],0xf
   140002e57:	mov    QWORD PTR [rbx+0x50],rbp
   140002e5b:	mov    BYTE PTR [rbx+0x40],bpl
   140002e5f:	cmp    QWORD PTR [rbx+0x38],0x10
   140002e64:	jb     0x140002e6f
   140002e66:	mov    rcx,QWORD PTR [rbx+0x20]
   140002e6a:	call   0x140005cee
   140002e6f:	mov    QWORD PTR [rbx+0x38],0xf
   140002e77:	mov    QWORD PTR [rbx+0x30],rbp
   140002e7b:	mov    rcx,rbx
   140002e7e:	mov    BYTE PTR [rbx+0x20],bpl
   140002e82:	call   0x140005cee
   140002e87:	mov    rbx,rdi
   140002e8a:	cmp    BYTE PTR [rdi+0x19],bpl
   140002e8e:	je     0x140002e30
   140002e90:	mov    rbp,QWORD PTR [rsp+0x30]
   140002e95:	mov    rbx,QWORD PTR [rsp+0x38]
   140002e9a:	mov    rsi,QWORD PTR [rsp+0x40]
   140002e9f:	add    rsp,0x20
   140002ea3:	pop    rdi
   140002ea4:	ret    
   140002ea5:	int3   
   140002ea6:	int3   
   140002ea7:	int3   
   140002ea8:	int3   
   140002ea9:	int3   
   140002eaa:	int3   
   140002eab:	int3   
   140002eac:	int3   
   140002ead:	int3   
   140002eae:	int3   
   140002eaf:	int3   
   140002eb0:	mov    rcx,rdx
   140002eb3:	jmp    0x140005cee
   140002eb8:	int3   
   140002eb9:	int3   
   140002eba:	int3   
   140002ebb:	int3   
   140002ebc:	int3   
   140002ebd:	int3   
   140002ebe:	int3   
   140002ebf:	int3   
   140002ec0:	mov    rcx,rdx
   140002ec3:	jmp    0x140005cee
   140002ec8:	int3   
   140002ec9:	int3   
   140002eca:	int3   
   140002ecb:	int3   
   140002ecc:	int3   
   140002ecd:	int3   
   140002ece:	int3   
   140002ecf:	int3   
   140002ed0:	mov    rax,rdx
   140002ed3:	ret    
   140002ed4:	int3   
   140002ed5:	int3   
   140002ed6:	int3   
   140002ed7:	int3   
   140002ed8:	int3   
   140002ed9:	int3   
   140002eda:	int3   
   140002edb:	int3   
   140002edc:	int3   
   140002edd:	int3   
   140002ede:	int3   
   140002edf:	int3   
   140002ee0:	mov    rax,rdx
   140002ee3:	ret    
   140002ee4:	int3   
   140002ee5:	int3   
   140002ee6:	int3   
   140002ee7:	int3   
   140002ee8:	int3   
   140002ee9:	int3   
   140002eea:	int3   
   140002eeb:	int3   
   140002eec:	int3   
   140002eed:	int3   
   140002eee:	int3   
   140002eef:	int3   
   140002ef0:	mov    rax,rdx
   140002ef3:	ret    
   140002ef4:	int3   
   140002ef5:	int3   
   140002ef6:	int3   
   140002ef7:	int3   
   140002ef8:	int3   
   140002ef9:	int3   
   140002efa:	int3   
   140002efb:	int3   
   140002efc:	int3   
   140002efd:	int3   
   140002efe:	int3   
   140002eff:	int3   
   140002f00:	mov    rax,rdx
   140002f03:	ret    
   140002f04:	int3   
   140002f05:	int3   
   140002f06:	int3   
   140002f07:	int3   
   140002f08:	int3   
   140002f09:	int3   
   140002f0a:	int3   
   140002f0b:	int3   
   140002f0c:	int3   
   140002f0d:	int3   
   140002f0e:	int3   
   140002f0f:	int3   
   140002f10:	mov    QWORD PTR [rsp+0x20],rbx
   140002f15:	push   rdi
   140002f16:	sub    rsp,0x20
   140002f1a:	mov    rdi,rdx
   140002f1d:	mov    rbx,rcx
   140002f20:	cmp    rdx,0xfffffffffffffffe
   140002f24:	jbe    0x140002f34
   140002f26:	lea    rcx,[rip+0x496b]        # 0x140007898
   140002f2d:	call   QWORD PTR [rip+0x411d]        # 0x140007050
   140002f33:	int3   
   140002f34:	mov    rax,QWORD PTR [rcx+0x18]
   140002f38:	mov    QWORD PTR [rsp+0x30],rbp
   140002f3d:	xor    ebp,ebp
   140002f3f:	cmp    rax,rdx
   140002f42:	jae    0x140002f4f
   140002f44:	mov    r8,QWORD PTR [rcx+0x10]
   140002f48:	call   0x140002b90
   140002f4d:	jmp    0x140002fc1
   140002f4f:	test   r8b,r8b
   140002f52:	je     0x140002fac
   140002f54:	cmp    rdx,0x10
   140002f58:	jae    0x140002fac
   140002f5a:	mov    QWORD PTR [rsp+0x38],rsi
   140002f5f:	mov    rsi,QWORD PTR [rcx+0x10]
   140002f63:	cmp    rdx,rsi
   140002f66:	cmovb  rsi,rdx
   140002f6a:	cmp    rax,0x10
   140002f6e:	jb     0x140002f95
   140002f70:	mov    QWORD PTR [rsp+0x40],r14
   140002f75:	mov    r14,QWORD PTR [rcx]
   140002f78:	test   rsi,rsi
   140002f7b:	je     0x140002f88
   140002f7d:	mov    r8,rsi
   140002f80:	mov    rdx,r14
   140002f83:	call   0x140005e42
   140002f88:	mov    rcx,r14
   140002f8b:	call   0x140005cee
   140002f90:	mov    r14,QWORD PTR [rsp+0x40]
   140002f95:	mov    QWORD PTR [rbx+0x10],rsi
   140002f99:	mov    QWORD PTR [rbx+0x18],0xf
   140002fa1:	mov    BYTE PTR [rsi+rbx*1],bpl
   140002fa5:	mov    rsi,QWORD PTR [rsp+0x38]
   140002faa:	jmp    0x140002fc1
   140002fac:	test   rdx,rdx
   140002faf:	jne    0x140002fc1
   140002fb1:	mov    QWORD PTR [rcx+0x10],rbp
   140002fb5:	cmp    rax,0x10
   140002fb9:	jb     0x140002fbe
   140002fbb:	mov    rbx,QWORD PTR [rcx]
   140002fbe:	mov    BYTE PTR [rbx],bpl
   140002fc1:	mov    rbp,QWORD PTR [rsp+0x30]
   140002fc6:	mov    rbx,QWORD PTR [rsp+0x48]
   140002fcb:	test   rdi,rdi
   140002fce:	setne  al
   140002fd1:	add    rsp,0x20
   140002fd5:	pop    rdi
   140002fd6:	ret    
   140002fd7:	int3   
   140002fd8:	int3   
   140002fd9:	int3   
   140002fda:	int3   
   140002fdb:	int3   
   140002fdc:	int3   
   140002fdd:	int3   
   140002fde:	int3   
   140002fdf:	int3   
   140002fe0:	mov    QWORD PTR [rsp+0x20],rbx
   140002fe5:	push   rdi
   140002fe6:	sub    rsp,0x20
   140002fea:	movabs rax,0x7ffffffffffffffe
   140002ff4:	mov    rdi,rdx
   140002ff7:	mov    rbx,rcx
   140002ffa:	cmp    rdx,rax
   140002ffd:	jbe    0x14000300d
   140002fff:	lea    rcx,[rip+0x4892]        # 0x140007898
   140003006:	call   QWORD PTR [rip+0x4044]        # 0x140007050
   14000300c:	int3   
   14000300d:	mov    rax,QWORD PTR [rcx+0x18]
   140003011:	mov    QWORD PTR [rsp+0x38],rsi
   140003016:	xor    esi,esi
   140003018:	cmp    rax,rdx
   14000301b:	jae    0x140003028
   14000301d:	mov    r8,QWORD PTR [rcx+0x10]
   140003021:	call   0x140002ca0
   140003026:	jmp    0x14000309c
   140003028:	test   r8b,r8b
   14000302b:	je     0x140003087
   14000302d:	cmp    rdx,0x8
   140003031:	jae    0x140003087
   140003033:	mov    QWORD PTR [rsp+0x40],r14
   140003038:	mov    r14,QWORD PTR [rcx+0x10]
   14000303c:	cmp    rdx,r14
   14000303f:	cmovb  r14,rdx
   140003043:	cmp    rax,0x8
   140003047:	jb     0x14000306f
   140003049:	mov    QWORD PTR [rsp+0x30],rbp
   14000304e:	mov    rbp,QWORD PTR [rcx]
   140003051:	test   r14,r14
   140003054:	je     0x140003062
   140003056:	lea    r8,[r14+r14*1]
   14000305a:	mov    rdx,rbp
   14000305d:	call   0x140005e42
   140003062:	mov    rcx,rbp
   140003065:	call   0x140005cee
   14000306a:	mov    rbp,QWORD PTR [rsp+0x30]
   14000306f:	mov    QWORD PTR [rbx+0x10],r14
   140003073:	mov    QWORD PTR [rbx+0x18],0x7
   14000307b:	mov    WORD PTR [rbx+r14*2],si
   140003080:	mov    r14,QWORD PTR [rsp+0x40]
   140003085:	jmp    0x14000309c
   140003087:	test   rdx,rdx
   14000308a:	jne    0x14000309c
   14000308c:	mov    QWORD PTR [rcx+0x10],rsi
   140003090:	cmp    rax,0x8
   140003094:	jb     0x140003099
   140003096:	mov    rbx,QWORD PTR [rcx]
   140003099:	mov    WORD PTR [rbx],si
   14000309c:	mov    rsi,QWORD PTR [rsp+0x38]
   1400030a1:	mov    rbx,QWORD PTR [rsp+0x48]
   1400030a6:	test   rdi,rdi
   1400030a9:	setne  al
   1400030ac:	add    rsp,0x20
   1400030b0:	pop    rdi
   1400030b1:	ret    
   1400030b2:	int3   
   1400030b3:	int3   
   1400030b4:	int3   
   1400030b5:	int3   
   1400030b6:	int3   
   1400030b7:	int3   
   1400030b8:	int3   
   1400030b9:	int3   
   1400030ba:	int3   
   1400030bb:	int3   
   1400030bc:	int3   
   1400030bd:	int3   
   1400030be:	int3   
   1400030bf:	int3   
   1400030c0:	test   rdx,rdx
   1400030c3:	je     0x1400030fa
   1400030c5:	mov    rax,QWORD PTR [rcx+0x18]
   1400030c9:	cmp    rax,0x10
   1400030cd:	jb     0x1400030d4
   1400030cf:	mov    r8,QWORD PTR [rcx]
   1400030d2:	jmp    0x1400030d7
   1400030d4:	mov    r8,rcx
   1400030d7:	cmp    rdx,r8
   1400030da:	jb     0x1400030fa
   1400030dc:	cmp    rax,0x10
   1400030e0:	jb     0x1400030e7
   1400030e2:	mov    r8,QWORD PTR [rcx]
   1400030e5:	jmp    0x1400030ea
   1400030e7:	mov    r8,rcx
   1400030ea:	mov    rax,QWORD PTR [rcx+0x10]
   1400030ee:	lea    rcx,[r8+rax*1]
   1400030f2:	cmp    rcx,rdx
   1400030f5:	jbe    0x1400030fa
   1400030f7:	mov    al,0x1
   1400030f9:	ret    
   1400030fa:	xor    al,al
   1400030fc:	ret    
   1400030fd:	int3   
   1400030fe:	int3   
   1400030ff:	int3   
   140003100:	test   rdx,rdx
   140003103:	je     0x14000313a
   140003105:	mov    rax,QWORD PTR [rcx+0x18]
   140003109:	cmp    rax,0x8
   14000310d:	jb     0x140003114
   14000310f:	mov    r8,QWORD PTR [rcx]
   140003112:	jmp    0x140003117
   140003114:	mov    r8,rcx
   140003117:	cmp    rdx,r8
   14000311a:	jb     0x14000313a
   14000311c:	cmp    rax,0x8
   140003120:	jb     0x140003127
   140003122:	mov    r8,QWORD PTR [rcx]
   140003125:	jmp    0x14000312a
   140003127:	mov    r8,rcx
   14000312a:	mov    rax,QWORD PTR [rcx+0x10]
   14000312e:	lea    rcx,[r8+rax*2]
   140003132:	cmp    rcx,rdx
   140003135:	jbe    0x14000313a
   140003137:	mov    al,0x1
   140003139:	ret    
   14000313a:	xor    al,al
   14000313c:	ret    
   14000313d:	int3   
   14000313e:	int3   
   14000313f:	int3   
   140003140:	lea    rax,[rcx+0x19]
   140003144:	ret    
   140003145:	int3   
   140003146:	int3   
   140003147:	int3   
   140003148:	int3   
   140003149:	int3   
   14000314a:	int3   
   14000314b:	int3   
   14000314c:	int3   
   14000314d:	int3   
   14000314e:	int3   
   14000314f:	int3   
   140003150:	lea    rax,[rdx+0x20]
   140003154:	ret    
   140003155:	int3   
   140003156:	int3   
   140003157:	int3   
   140003158:	int3   
   140003159:	int3   
   14000315a:	int3   
   14000315b:	int3   
   14000315c:	int3   
   14000315d:	int3   
   14000315e:	int3   
   14000315f:	int3   
   140003160:	mov    rax,rdx
   140003163:	ret    
   140003164:	int3   
   140003165:	int3   
   140003166:	int3   
   140003167:	int3   
   140003168:	int3   
   140003169:	int3   
   14000316a:	int3   
   14000316b:	int3   
   14000316c:	int3   
   14000316d:	int3   
   14000316e:	int3   
   14000316f:	int3   
   140003170:	rex push rbx
   140003172:	push   rbp
   140003173:	push   r14
   140003175:	sub    rsp,0x20
   140003179:	mov    rbp,QWORD PTR [rcx]
   14000317c:	mov    r14,rdx
   14000317f:	mov    rbx,QWORD PTR [rbp+0x8]
   140003183:	cmp    BYTE PTR [rbx+0x19],0x0
   140003187:	jne    0x140003213
   14000318d:	mov    QWORD PTR [rsp+0x40],rsi
   140003192:	mov    rsi,QWORD PTR [rdx+0x10]
   140003196:	mov    QWORD PTR [rsp+0x48],rdi
   14000319b:	mov    QWORD PTR [rsp+0x50],r15
   1400031a0:	mov    r15,QWORD PTR [rdx+0x18]
   1400031a4:	lea    rcx,[rbx+0x20]
   1400031a8:	cmp    r15,0x10
   1400031ac:	jb     0x1400031b3
   1400031ae:	mov    rdx,QWORD PTR [r14]
   1400031b1:	jmp    0x1400031b6
   1400031b3:	mov    rdx,r14
   1400031b6:	cmp    QWORD PTR [rcx+0x18],0x10
   1400031bb:	mov    rdi,QWORD PTR [rcx+0x10]
   1400031bf:	jb     0x1400031c4
   1400031c1:	mov    rcx,QWORD PTR [rcx]
   1400031c4:	cmp    rdi,rsi
   1400031c7:	mov    r8,rsi
   1400031ca:	cmovb  r8,rdi
   1400031ce:	test   r8,r8
   1400031d1:	jne    0x1400031d7
   1400031d3:	xor    eax,eax
   1400031d5:	jmp    0x1400031dc
   1400031d7:	call   0x140005e3c
   1400031dc:	cdqe   
   1400031de:	test   rax,rax
   1400031e1:	jne    0x1400031ee
   1400031e3:	cmp    rdi,rsi
   1400031e6:	jb     0x1400031fa
   1400031e8:	cmp    rdi,rsi
   1400031eb:	setne  al
   1400031ee:	test   eax,eax
   1400031f0:	js     0x1400031fa
   1400031f2:	mov    rbp,rbx
   1400031f5:	mov    rbx,QWORD PTR [rbx]
   1400031f8:	jmp    0x1400031fe
   1400031fa:	mov    rbx,QWORD PTR [rbx+0x10]
   1400031fe:	cmp    BYTE PTR [rbx+0x19],0x0
   140003202:	je     0x1400031a4
   140003204:	mov    r15,QWORD PTR [rsp+0x50]
   140003209:	mov    rdi,QWORD PTR [rsp+0x48]
   14000320e:	mov    rsi,QWORD PTR [rsp+0x40]
   140003213:	mov    rax,rbp
   140003216:	add    rsp,0x20
   14000321a:	pop    r14
   14000321c:	pop    rbp
   14000321d:	pop    rbx
   14000321e:	ret    
   14000321f:	int3   
   140003220:	mov    rax,rcx
   140003223:	ret    
   140003224:	int3   
   140003225:	int3   
   140003226:	int3   
   140003227:	int3   
   140003228:	int3   
   140003229:	int3   
   14000322a:	int3   
   14000322b:	int3   
   14000322c:	int3   
   14000322d:	int3   
   14000322e:	int3   
   14000322f:	int3   
   140003230:	mov    rax,QWORD PTR [rcx]
   140003233:	ret    
   140003234:	int3   
   140003235:	int3   
   140003236:	int3   
   140003237:	int3   
   140003238:	int3   
   140003239:	int3   
   14000323a:	int3   
   14000323b:	int3   
   14000323c:	int3   
   14000323d:	int3   
   14000323e:	int3   
   14000323f:	int3   
   140003240:	mov    r8,QWORD PTR [rdx+0x10]
   140003244:	mov    rax,QWORD PTR [r8]
   140003247:	mov    QWORD PTR [rdx+0x10],rax
   14000324b:	mov    rax,QWORD PTR [r8]
   14000324e:	cmp    BYTE PTR [rax+0x19],0x0
   140003252:	jne    0x140003258
   140003254:	mov    QWORD PTR [rax+0x8],rdx
   140003258:	mov    rax,QWORD PTR [rdx+0x8]
   14000325c:	mov    QWORD PTR [r8+0x8],rax
   140003260:	mov    rax,QWORD PTR [rcx]
   140003263:	cmp    rdx,QWORD PTR [rax+0x8]
   140003267:	jne    0x140003275
   140003269:	mov    QWORD PTR [rax+0x8],r8
   14000326d:	mov    QWORD PTR [r8],rdx
   140003270:	mov    QWORD PTR [rdx+0x8],r8
   140003274:	ret    
   140003275:	mov    rax,QWORD PTR [rdx+0x8]
   140003279:	cmp    rdx,QWORD PTR [rax]
   14000327c:	jne    0x140003289
   14000327e:	mov    QWORD PTR [rax],r8
   140003281:	mov    QWORD PTR [r8],rdx
   140003284:	mov    QWORD PTR [rdx+0x8],r8
   140003288:	ret    
   140003289:	mov    QWORD PTR [rax+0x10],r8
   14000328d:	mov    QWORD PTR [r8],rdx
   140003290:	mov    QWORD PTR [rdx+0x8],r8
   140003294:	ret    
   140003295:	int3   
   140003296:	int3   
   140003297:	int3   
   140003298:	int3   
   140003299:	int3   
   14000329a:	int3   
   14000329b:	int3   
   14000329c:	int3   
   14000329d:	int3   
   14000329e:	int3   
   14000329f:	int3   
   1400032a0:	mov    rax,QWORD PTR [rcx+0x10]
   1400032a4:	cmp    BYTE PTR [rax+0x19],0x0
   1400032a8:	jne    0x1400032bd
   1400032aa:	nop    WORD PTR [rax+rax*1+0x0]
   1400032b0:	mov    rcx,rax
   1400032b3:	mov    rax,QWORD PTR [rax+0x10]
   1400032b7:	cmp    BYTE PTR [rax+0x19],0x0
   1400032bb:	je     0x1400032b0
   1400032bd:	mov    rax,rcx
   1400032c0:	ret    
   1400032c1:	int3   
   1400032c2:	int3   
   1400032c3:	int3   
   1400032c4:	int3   
   1400032c5:	int3   
   1400032c6:	int3   
   1400032c7:	int3   
   1400032c8:	int3   
   1400032c9:	int3   
   1400032ca:	int3   
   1400032cb:	int3   
   1400032cc:	int3   
   1400032cd:	int3   
   1400032ce:	int3   
   1400032cf:	int3   
   1400032d0:	mov    rax,QWORD PTR [rcx]
   1400032d3:	cmp    BYTE PTR [rax+0x19],0x0
   1400032d7:	jne    0x1400032ec
   1400032d9:	nop    DWORD PTR [rax+0x0]
   1400032e0:	mov    rcx,rax
   1400032e3:	mov    rax,QWORD PTR [rax]
   1400032e6:	cmp    BYTE PTR [rax+0x19],0x0
   1400032ea:	je     0x1400032e0
   1400032ec:	mov    rax,rcx
   1400032ef:	ret    
   1400032f0:	mov    rax,QWORD PTR [rcx]
   1400032f3:	ret    
   1400032f4:	int3   
   1400032f5:	int3   
   1400032f6:	int3   
   1400032f7:	int3   
   1400032f8:	int3   
   1400032f9:	int3   
   1400032fa:	int3   
   1400032fb:	int3   
   1400032fc:	int3   
   1400032fd:	int3   
   1400032fe:	int3   
   1400032ff:	int3   
   140003300:	cmp    QWORD PTR [rcx+0x18],0x10
   140003305:	jb     0x14000330b
   140003307:	mov    rax,QWORD PTR [rcx]
   14000330a:	ret    
   14000330b:	mov    rax,rcx
   14000330e:	ret    
   14000330f:	int3   
   140003310:	cmp    QWORD PTR [rcx+0x18],0x10
   140003315:	jb     0x14000331b
   140003317:	mov    rax,QWORD PTR [rcx]
   14000331a:	ret    
   14000331b:	mov    rax,rcx
   14000331e:	ret    
   14000331f:	int3   
   140003320:	cmp    QWORD PTR [rcx+0x18],0x8
   140003325:	jb     0x14000332b
   140003327:	mov    rax,QWORD PTR [rcx]
   14000332a:	ret    
   14000332b:	mov    rax,rcx
   14000332e:	ret    
   14000332f:	int3   
   140003330:	cmp    QWORD PTR [rcx+0x18],0x8
   140003335:	jb     0x14000333b
   140003337:	mov    rax,QWORD PTR [rcx]
   14000333a:	ret    
   14000333b:	mov    rax,rcx
   14000333e:	ret    
   14000333f:	int3   
   140003340:	lea    rax,[rcx+0x20]
   140003344:	ret    
   140003345:	int3   
   140003346:	int3   
   140003347:	int3   
   140003348:	int3   
   140003349:	int3   
   14000334a:	int3   
   14000334b:	int3   
   14000334c:	int3   
   14000334d:	int3   
   14000334e:	int3   
   14000334f:	int3   
   140003350:	lea    rax,[rcx+0x8]
   140003354:	ret    
   140003355:	int3   
   140003356:	int3   
   140003357:	int3   
   140003358:	int3   
   140003359:	int3   
   14000335a:	int3   
   14000335b:	int3   
   14000335c:	int3   
   14000335d:	int3   
   14000335e:	int3   
   14000335f:	int3   
   140003360:	lea    rax,[rcx+0x10]
   140003364:	ret    
   140003365:	int3   
   140003366:	int3   
   140003367:	int3   
   140003368:	int3   
   140003369:	int3   
   14000336a:	int3   
   14000336b:	int3   
   14000336c:	int3   
   14000336d:	int3   
   14000336e:	int3   
   14000336f:	int3   
   140003370:	mov    rax,QWORD PTR [rcx]
   140003373:	add    rax,0x10
   140003377:	ret    
   140003378:	int3   
   140003379:	int3   
   14000337a:	int3   
   14000337b:	int3   
   14000337c:	int3   
   14000337d:	int3   
   14000337e:	int3   
   14000337f:	int3   
   140003380:	mov    rax,QWORD PTR [rcx]
   140003383:	add    rax,0x8
   140003387:	ret    
   140003388:	int3   
   140003389:	int3   
   14000338a:	int3   
   14000338b:	int3   
   14000338c:	int3   
   14000338d:	int3   
   14000338e:	int3   
   14000338f:	int3   
   140003390:	mov    r8,QWORD PTR [rdx]
   140003393:	mov    rax,QWORD PTR [r8+0x10]
   140003397:	mov    QWORD PTR [rdx],rax
   14000339a:	mov    rax,QWORD PTR [r8+0x10]
   14000339e:	cmp    BYTE PTR [rax+0x19],0x0
   1400033a2:	jne    0x1400033a8
   1400033a4:	mov    QWORD PTR [rax+0x8],rdx
   1400033a8:	mov    rax,QWORD PTR [rdx+0x8]
   1400033ac:	mov    QWORD PTR [r8+0x8],rax
   1400033b0:	mov    rax,QWORD PTR [rcx]
   1400033b3:	cmp    rdx,QWORD PTR [rax+0x8]
   1400033b7:	jne    0x1400033c6
   1400033b9:	mov    QWORD PTR [rax+0x8],r8
   1400033bd:	mov    QWORD PTR [r8+0x10],rdx
   1400033c1:	mov    QWORD PTR [rdx+0x8],r8
   1400033c5:	ret    
   1400033c6:	mov    rax,QWORD PTR [rdx+0x8]
   1400033ca:	cmp    rdx,QWORD PTR [rax+0x10]
   1400033ce:	jne    0x1400033dd
   1400033d0:	mov    QWORD PTR [rax+0x10],r8
   1400033d4:	mov    QWORD PTR [r8+0x10],rdx
   1400033d8:	mov    QWORD PTR [rdx+0x8],r8
   1400033dc:	ret    
   1400033dd:	mov    QWORD PTR [rax],r8
   1400033e0:	mov    QWORD PTR [r8+0x10],rdx
   1400033e4:	mov    QWORD PTR [rdx+0x8],r8
   1400033e8:	ret    
   1400033e9:	int3   
   1400033ea:	int3   
   1400033eb:	int3   
   1400033ec:	int3   
   1400033ed:	int3   
   1400033ee:	int3   
   1400033ef:	int3   
   1400033f0:	ret    0x0
   1400033f3:	int3   
   1400033f4:	int3   
   1400033f5:	int3   
   1400033f6:	int3   
   1400033f7:	int3   
   1400033f8:	int3   
   1400033f9:	int3   
   1400033fa:	int3   
   1400033fb:	int3   
   1400033fc:	int3   
   1400033fd:	int3   
   1400033fe:	int3   
   1400033ff:	int3   
   140003400:	ret    0x0
   140003403:	int3   
   140003404:	int3   
   140003405:	int3   
   140003406:	int3   
   140003407:	int3   
   140003408:	int3   
   140003409:	int3   
   14000340a:	int3   
   14000340b:	int3   
   14000340c:	int3   
   14000340d:	int3   
   14000340e:	int3   
   14000340f:	int3   
   140003410:	sub    rsp,0x28
   140003414:	mov    r8,QWORD PTR [rcx]
   140003417:	lea    rdx,[rsp+0x30]
   14000341c:	mov    r9,r8
   14000341f:	mov    r8,QWORD PTR [r8]
   140003422:	call   0x140003f90
   140003427:	add    rsp,0x28
   14000342b:	ret    
   14000342c:	int3   
   14000342d:	int3   
   14000342e:	int3   
   14000342f:	int3   
   140003430:	mov    QWORD PTR [rsp+0x10],rbx
   140003435:	push   rdi
   140003436:	sub    rsp,0x20
   14000343a:	mov    rdi,r8
   14000343d:	mov    rbx,rcx
   140003440:	test   dl,dl
   140003442:	je     0x14000346d
   140003444:	cmp    QWORD PTR [rcx+0x18],0x10
   140003449:	jb     0x14000346d
   14000344b:	mov    QWORD PTR [rsp+0x30],rsi
   140003450:	mov    rsi,QWORD PTR [rcx]
   140003453:	test   r8,r8
   140003456:	je     0x140003460
   140003458:	mov    rdx,rsi
   14000345b:	call   0x140005e42
   140003460:	mov    rcx,rsi
   140003463:	call   0x140005cee
   140003468:	mov    rsi,QWORD PTR [rsp+0x30]
   14000346d:	mov    QWORD PTR [rbx+0x18],0xf
   140003475:	mov    QWORD PTR [rbx+0x10],rdi
   140003479:	mov    BYTE PTR [rdi+rbx*1],0x0
   14000347d:	mov    rbx,QWORD PTR [rsp+0x38]
   140003482:	add    rsp,0x20
   140003486:	pop    rdi
   140003487:	ret    
   140003488:	int3   
   140003489:	int3   
   14000348a:	int3   
   14000348b:	int3   
   14000348c:	int3   
   14000348d:	int3   
   14000348e:	int3   
   14000348f:	int3   
   140003490:	mov    QWORD PTR [rsp+0x10],rbx
   140003495:	push   rdi
   140003496:	sub    rsp,0x20
   14000349a:	mov    rdi,r8
   14000349d:	mov    rbx,rcx
   1400034a0:	test   dl,dl
   1400034a2:	je     0x1400034d0
   1400034a4:	cmp    QWORD PTR [rcx+0x18],0x8
   1400034a9:	jb     0x1400034d0
   1400034ab:	mov    QWORD PTR [rsp+0x30],rsi
   1400034b0:	mov    rsi,QWORD PTR [rcx]
   1400034b3:	test   r8,r8
   1400034b6:	je     0x1400034c3
   1400034b8:	add    r8,r8
   1400034bb:	mov    rdx,rsi
   1400034be:	call   0x140005e42
   1400034c3:	mov    rcx,rsi
   1400034c6:	call   0x140005cee
   1400034cb:	mov    rsi,QWORD PTR [rsp+0x30]
   1400034d0:	mov    QWORD PTR [rbx+0x18],0x7
   1400034d8:	mov    QWORD PTR [rbx+0x10],rdi
   1400034dc:	xor    eax,eax
   1400034de:	mov    WORD PTR [rbx+rdi*2],ax
   1400034e2:	mov    rbx,QWORD PTR [rsp+0x38]
   1400034e7:	add    rsp,0x20
   1400034eb:	pop    rdi
   1400034ec:	ret    
   1400034ed:	int3   
   1400034ee:	int3   
   1400034ef:	int3   
   1400034f0:	sub    rsp,0x28
   1400034f4:	lea    rcx,[rip+0x439d]        # 0x140007898
   1400034fb:	call   QWORD PTR [rip+0x3b4f]        # 0x140007050
   140003501:	int3   
   140003502:	int3   
   140003503:	int3   
   140003504:	int3   
   140003505:	int3   
   140003506:	int3   
   140003507:	int3   
   140003508:	int3   
   140003509:	int3   
   14000350a:	int3   
   14000350b:	int3   
   14000350c:	int3   
   14000350d:	int3   
   14000350e:	int3   
   14000350f:	int3   
   140003510:	sub    rsp,0x28
   140003514:	lea    rcx,[rip+0x437d]        # 0x140007898
   14000351b:	call   QWORD PTR [rip+0x3b2f]        # 0x140007050
   140003521:	int3   
   140003522:	int3   
   140003523:	int3   
   140003524:	int3   
   140003525:	int3   
   140003526:	int3   
   140003527:	int3   
   140003528:	int3   
   140003529:	int3   
   14000352a:	int3   
   14000352b:	int3   
   14000352c:	int3   
   14000352d:	int3   
   14000352e:	int3   
   14000352f:	int3   
   140003530:	sub    rsp,0x28
   140003534:	lea    rcx,[rip+0x436d]        # 0x1400078a8
   14000353b:	call   QWORD PTR [rip+0x3b07]        # 0x140007048
   140003541:	int3   
   140003542:	int3   
   140003543:	int3   
   140003544:	int3   
   140003545:	int3   
   140003546:	int3   
   140003547:	int3   
   140003548:	int3   
   140003549:	int3   
   14000354a:	int3   
   14000354b:	int3   
   14000354c:	int3   
   14000354d:	int3   
   14000354e:	int3   
   14000354f:	int3   
   140003550:	sub    rsp,0x28
   140003554:	lea    rcx,[rip+0x434d]        # 0x1400078a8
   14000355b:	call   QWORD PTR [rip+0x3ae7]        # 0x140007048
   140003561:	int3   
   140003562:	int3   
   140003563:	int3   
   140003564:	int3   
   140003565:	int3   
   140003566:	int3   
   140003567:	int3   
   140003568:	int3   
   140003569:	int3   
   14000356a:	int3   
   14000356b:	int3   
   14000356c:	int3   
   14000356d:	int3   
   14000356e:	int3   
   14000356f:	int3   
   140003570:	sub    rsp,0x28
   140003574:	xor    eax,eax
   140003576:	test   rdx,rdx
   140003579:	je     0x140003595
   14000357b:	cmp    rdx,0xffffffffffffffff
   14000357f:	ja     0x14000358e
   140003581:	mov    rcx,rdx
   140003584:	call   0x140005ce8
   140003589:	test   rax,rax
   14000358c:	jne    0x140003595
   14000358e:	call   QWORD PTR [rip+0x3ac4]        # 0x140007058
   140003594:	int3   
   140003595:	add    rsp,0x28
   140003599:	ret    
   14000359a:	int3   
   14000359b:	int3   
   14000359c:	int3   
   14000359d:	int3   
   14000359e:	int3   
   14000359f:	int3   
   1400035a0:	sub    rsp,0x28
   1400035a4:	xor    eax,eax
   1400035a6:	test   rdx,rdx
   1400035a9:	je     0x1400035d3
   1400035ab:	movabs rax,0x2aaaaaaaaaaaaaa
   1400035b5:	cmp    rdx,rax
   1400035b8:	ja     0x1400035cc
   1400035ba:	lea    rcx,[rdx+rdx*2]
   1400035be:	shl    rcx,0x5
   1400035c2:	call   0x140005ce8
   1400035c7:	test   rax,rax
   1400035ca:	jne    0x1400035d3
   1400035cc:	call   QWORD PTR [rip+0x3a86]        # 0x140007058
   1400035d2:	int3   
   1400035d3:	add    rsp,0x28
   1400035d7:	ret    
   1400035d8:	int3   
   1400035d9:	int3   
   1400035da:	int3   
   1400035db:	int3   
   1400035dc:	int3   
   1400035dd:	int3   
   1400035de:	int3   
   1400035df:	int3   
   1400035e0:	sub    rsp,0x28
   1400035e4:	xor    eax,eax
   1400035e6:	test   rdx,rdx
   1400035e9:	je     0x14000360f
   1400035eb:	movabs rax,0x7fffffffffffffff
   1400035f5:	cmp    rdx,rax
   1400035f8:	ja     0x140003608
   1400035fa:	lea    rcx,[rdx+rdx*1]
   1400035fe:	call   0x140005ce8
   140003603:	test   rax,rax
   140003606:	jne    0x14000360f
   140003608:	call   QWORD PTR [rip+0x3a4a]        # 0x140007058
   14000360e:	int3   
   14000360f:	add    rsp,0x28
   140003613:	ret    
   140003614:	int3   
   140003615:	int3   
   140003616:	int3   
   140003617:	int3   
   140003618:	int3   
   140003619:	int3   
   14000361a:	int3   
   14000361b:	int3   
   14000361c:	int3   
   14000361d:	int3   
   14000361e:	int3   
   14000361f:	int3   
   140003620:	sub    rsp,0x28
   140003624:	xor    eax,eax
   140003626:	test   rdx,rdx
   140003629:	je     0x140003645
   14000362b:	cmp    rdx,0xffffffffffffffff
   14000362f:	ja     0x14000363e
   140003631:	mov    rcx,rdx
   140003634:	call   0x140005ce8
   140003639:	test   rax,rax
   14000363c:	jne    0x140003645
   14000363e:	call   QWORD PTR [rip+0x3a14]        # 0x140007058
   140003644:	int3   
   140003645:	add    rsp,0x28
   140003649:	ret    
   14000364a:	int3   
   14000364b:	int3   
   14000364c:	int3   
   14000364d:	int3   
   14000364e:	int3   
   14000364f:	int3   
   140003650:	sub    rsp,0x28
   140003654:	xor    eax,eax
   140003656:	test   rdx,rdx
   140003659:	je     0x140003683
   14000365b:	movabs rax,0x2aaaaaaaaaaaaaa
   140003665:	cmp    rdx,rax
   140003668:	ja     0x14000367c
   14000366a:	lea    rcx,[rdx+rdx*2]
   14000366e:	shl    rcx,0x5
   140003672:	call   0x140005ce8
   140003677:	test   rax,rax
   14000367a:	jne    0x140003683
   14000367c:	call   QWORD PTR [rip+0x39d6]        # 0x140007058
   140003682:	int3   
   140003683:	add    rsp,0x28
   140003687:	ret    
   140003688:	int3   
   140003689:	int3   
   14000368a:	int3   
   14000368b:	int3   
   14000368c:	int3   
   14000368d:	int3   
   14000368e:	int3   
   14000368f:	int3   
   140003690:	sub    rsp,0x28
   140003694:	xor    eax,eax
   140003696:	test   rdx,rdx
   140003699:	je     0x1400036bf
   14000369b:	movabs rax,0x7fffffffffffffff
   1400036a5:	cmp    rdx,rax
   1400036a8:	ja     0x1400036b8
   1400036aa:	lea    rcx,[rdx+rdx*1]
   1400036ae:	call   0x140005ce8
   1400036b3:	test   rax,rax
   1400036b6:	jne    0x1400036bf
   1400036b8:	call   QWORD PTR [rip+0x399a]        # 0x140007058
   1400036be:	int3   
   1400036bf:	add    rsp,0x28
   1400036c3:	ret    
   1400036c4:	int3   
   1400036c5:	int3   
   1400036c6:	int3   
   1400036c7:	int3   
   1400036c8:	int3   
   1400036c9:	int3   
   1400036ca:	int3   
   1400036cb:	int3   
   1400036cc:	int3   
   1400036cd:	int3   
   1400036ce:	int3   
   1400036cf:	int3   
   1400036d0:	or     r9,0xffffffffffffffff
   1400036d4:	xor    r8d,r8d
   1400036d7:	jmp    0x1400036e0
   1400036dc:	int3   
   1400036dd:	int3   
   1400036de:	int3   
   1400036df:	int3   
   1400036e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400036e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400036ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400036ef:	push   rdi
   1400036f0:	sub    rsp,0x20
   1400036f4:	mov    rdi,QWORD PTR [rdx+0x10]
   1400036f8:	mov    rbp,r8
   1400036fb:	mov    rsi,rdx
   1400036fe:	mov    rbx,rcx
   140003701:	cmp    rdi,r8
   140003704:	jae    0x140003714
   140003706:	lea    rcx,[rip+0x419b]        # 0x1400078a8
   14000370d:	call   QWORD PTR [rip+0x3935]        # 0x140007048
   140003713:	int3   
   140003714:	sub    rdi,r8
   140003717:	cmp    r9,rdi
   14000371a:	cmovb  rdi,r9
   14000371e:	cmp    rcx,rdx
   140003721:	jne    0x14000375c
   140003723:	lea    rax,[rdi+r8*1]
   140003727:	cmp    QWORD PTR [rcx+0x10],rax
   14000372b:	jae    0x14000373b
   14000372d:	lea    rcx,[rip+0x4174]        # 0x1400078a8
   140003734:	call   QWORD PTR [rip+0x390e]        # 0x140007048
   14000373a:	int3   
   14000373b:	cmp    QWORD PTR [rcx+0x18],0x10
   140003740:	mov    QWORD PTR [rcx+0x10],rax
   140003744:	jb     0x140003749
   140003746:	mov    rcx,QWORD PTR [rcx]
   140003749:	mov    BYTE PTR [rcx+rax*1],0x0
   14000374d:	xor    edx,edx
   14000374f:	mov    rcx,rbx
   140003752:	call   0x1400044a0
   140003757:	jmp    0x1400037ea
   14000375c:	cmp    rdi,0xfffffffffffffffe
   140003760:	jbe    0x140003770
   140003762:	lea    rcx,[rip+0x412f]        # 0x140007898
   140003769:	call   QWORD PTR [rip+0x38e1]        # 0x140007050
   14000376f:	int3   
   140003770:	mov    rax,QWORD PTR [rcx+0x18]
   140003774:	cmp    rax,rdi
   140003777:	jae    0x1400037a0
   140003779:	mov    r8,QWORD PTR [rcx+0x10]
   14000377d:	mov    rdx,rdi
   140003780:	call   0x140002b90
   140003785:	test   rdi,rdi
   140003788:	je     0x1400037ea
   14000378a:	cmp    QWORD PTR [rsi+0x18],0x10
   14000378f:	jb     0x140003794
   140003791:	mov    rsi,QWORD PTR [rsi]
   140003794:	cmp    QWORD PTR [rbx+0x18],0x10
   140003799:	jb     0x1400037bf
   14000379b:	mov    rcx,QWORD PTR [rbx]
   14000379e:	jmp    0x1400037c2
   1400037a0:	test   rdi,rdi
   1400037a3:	jne    0x14000378a
   1400037a5:	mov    QWORD PTR [rcx+0x10],rdi
   1400037a9:	cmp    rax,0x10
   1400037ad:	jb     0x1400037b7
   1400037af:	mov    rax,QWORD PTR [rcx]
   1400037b2:	mov    BYTE PTR [rax],dil
   1400037b5:	jmp    0x1400037ea
   1400037b7:	mov    rax,rcx
   1400037ba:	mov    BYTE PTR [rcx],0x0
   1400037bd:	jmp    0x1400037ea
   1400037bf:	mov    rcx,rbx
   1400037c2:	test   rdi,rdi
   1400037c5:	je     0x1400037d3
   1400037c7:	lea    rdx,[rsi+rbp*1]
   1400037cb:	mov    r8,rdi
   1400037ce:	call   0x140005e42
   1400037d3:	cmp    QWORD PTR [rbx+0x18],0x10
   1400037d8:	mov    QWORD PTR [rbx+0x10],rdi
   1400037dc:	jb     0x1400037e3
   1400037de:	mov    rax,QWORD PTR [rbx]
   1400037e1:	jmp    0x1400037e6
   1400037e3:	mov    rax,rbx
   1400037e6:	mov    BYTE PTR [rax+rdi*1],0x0
   1400037ea:	mov    rbp,QWORD PTR [rsp+0x38]
   1400037ef:	mov    rsi,QWORD PTR [rsp+0x40]
   1400037f4:	mov    rax,rbx
   1400037f7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400037fc:	add    rsp,0x20
   140003800:	pop    rdi
   140003801:	ret    
   140003802:	int3   
   140003803:	int3   
   140003804:	int3   
   140003805:	int3   
   140003806:	int3   
   140003807:	int3   
   140003808:	int3   
   140003809:	int3   
   14000380a:	int3   
   14000380b:	int3   
   14000380c:	int3   
   14000380d:	int3   
   14000380e:	int3   
   14000380f:	int3   
   140003810:	cmp    BYTE PTR [rdx],0x0
   140003813:	jne    0x14000381d
   140003815:	xor    r8d,r8d
   140003818:	jmp    0x140003830
   14000381d:	or     r8,0xffffffffffffffff
   140003821:	inc    r8
   140003824:	cmp    BYTE PTR [rdx+r8*1],0x0
   140003829:	jne    0x140003821
   14000382b:	jmp    0x140003830
   140003830:	mov    QWORD PTR [rsp+0x8],rbx
   140003835:	mov    QWORD PTR [rsp+0x10],rsi
   14000383a:	push   rdi
   14000383b:	sub    rsp,0x20
   14000383f:	mov    rdi,r8
   140003842:	mov    rsi,rdx
   140003845:	mov    rbx,rcx
   140003848:	test   rdx,rdx
   14000384b:	je     0x1400038a7
   14000384d:	mov    rdx,QWORD PTR [rcx+0x18]
   140003851:	cmp    rdx,0x10
   140003855:	jb     0x14000385c
   140003857:	mov    rax,QWORD PTR [rcx]
   14000385a:	jmp    0x14000385f
   14000385c:	mov    rax,rcx
   14000385f:	cmp    rsi,rax
   140003862:	jb     0x1400038a7
   140003864:	cmp    rdx,0x10
   140003868:	jb     0x14000386d
   14000386a:	mov    rcx,QWORD PTR [rcx]
   14000386d:	add    rcx,QWORD PTR [rbx+0x10]
   140003871:	cmp    rcx,rsi
   140003874:	jbe    0x1400038a7
   140003876:	cmp    rdx,0x10
   14000387a:	jb     0x140003881
   14000387c:	mov    rax,QWORD PTR [rbx]
   14000387f:	jmp    0x140003884
   140003881:	mov    rax,rbx
   140003884:	sub    rsi,rax
   140003887:	mov    r9,r8
   14000388a:	mov    rdx,rbx
   14000388d:	mov    r8,rsi
   140003890:	mov    rcx,rbx
   140003893:	mov    rbx,QWORD PTR [rsp+0x30]
   140003898:	mov    rsi,QWORD PTR [rsp+0x38]
   14000389d:	add    rsp,0x20
   1400038a1:	pop    rdi
   1400038a2:	jmp    0x1400036e0
   1400038a7:	cmp    r8,0xfffffffffffffffe
   1400038ab:	jbe    0x1400038bb
   1400038ad:	lea    rcx,[rip+0x3fe4]        # 0x140007898
   1400038b4:	call   QWORD PTR [rip+0x3796]        # 0x140007050
   1400038ba:	int3   
   1400038bb:	mov    rax,QWORD PTR [rbx+0x18]
   1400038bf:	cmp    rax,r8
   1400038c2:	jae    0x1400038e4
   1400038c4:	mov    r8,QWORD PTR [rbx+0x10]
   1400038c8:	mov    rdx,rdi
   1400038cb:	mov    rcx,rbx
   1400038ce:	call   0x140002b90
   1400038d3:	test   rdi,rdi
   1400038d6:	je     0x14000394c
   1400038d8:	cmp    QWORD PTR [rbx+0x18],0x10
   1400038dd:	jb     0x140003922
   1400038df:	mov    rcx,QWORD PTR [rbx]
   1400038e2:	jmp    0x140003925
   1400038e4:	test   r8,r8
   1400038e7:	jne    0x1400038d3
   1400038e9:	mov    QWORD PTR [rbx+0x10],r8
   1400038ed:	cmp    rax,0x10
   1400038f1:	jb     0x14000390c
   1400038f3:	mov    rax,QWORD PTR [rbx]
   1400038f6:	mov    BYTE PTR [rax],r8b
   1400038f9:	mov    rax,rbx
   1400038fc:	mov    rbx,QWORD PTR [rsp+0x30]
   140003901:	mov    rsi,QWORD PTR [rsp+0x38]
   140003906:	add    rsp,0x20
   14000390a:	pop    rdi
   14000390b:	ret    
   14000390c:	mov    rax,rbx
   14000390f:	mov    BYTE PTR [rbx],0x0
   140003912:	mov    rbx,QWORD PTR [rsp+0x30]
   140003917:	mov    rsi,QWORD PTR [rsp+0x38]
   14000391c:	add    rsp,0x20
   140003920:	pop    rdi
   140003921:	ret    
   140003922:	mov    rcx,rbx
   140003925:	test   rdi,rdi
   140003928:	je     0x140003935
   14000392a:	mov    r8,rdi
   14000392d:	mov    rdx,rsi
   140003930:	call   0x140005e42
   140003935:	cmp    QWORD PTR [rbx+0x18],0x10
   14000393a:	mov    QWORD PTR [rbx+0x10],rdi
   14000393e:	jb     0x140003945
   140003940:	mov    rax,QWORD PTR [rbx]
   140003943:	jmp    0x140003948
   140003945:	mov    rax,rbx
   140003948:	mov    BYTE PTR [rax+rdi*1],0x0
   14000394c:	mov    rsi,QWORD PTR [rsp+0x38]
   140003951:	mov    rax,rbx
   140003954:	mov    rbx,QWORD PTR [rsp+0x30]
   140003959:	add    rsp,0x20
   14000395d:	pop    rdi
   14000395e:	ret    
   14000395f:	int3   
   140003960:	mov    QWORD PTR [rsp+0x8],rbx
   140003965:	mov    QWORD PTR [rsp+0x10],rbp
   14000396a:	mov    QWORD PTR [rsp+0x18],rsi
   14000396f:	push   rdi
   140003970:	sub    rsp,0x20
   140003974:	mov    rdi,QWORD PTR [rdx+0x10]
   140003978:	mov    rbp,r8
   14000397b:	mov    rsi,rdx
   14000397e:	mov    rbx,rcx
   140003981:	cmp    rdi,r8
   140003984:	jae    0x140003994
   140003986:	lea    rcx,[rip+0x3f1b]        # 0x1400078a8
   14000398d:	call   QWORD PTR [rip+0x36b5]        # 0x140007048
   140003993:	int3   
   140003994:	sub    rdi,r8
   140003997:	cmp    r9,rdi
   14000399a:	cmovb  rdi,r9
   14000399e:	cmp    rcx,rdx
   1400039a1:	jne    0x1400039e3
   1400039a3:	lea    rcx,[rdi+r8*1]
   1400039a7:	cmp    QWORD PTR [rbx+0x10],rcx
   1400039ab:	jae    0x1400039bb
   1400039ad:	lea    rcx,[rip+0x3ef4]        # 0x1400078a8
   1400039b4:	call   QWORD PTR [rip+0x368e]        # 0x140007048
   1400039ba:	int3   
   1400039bb:	cmp    QWORD PTR [rbx+0x18],0x8
   1400039c0:	mov    QWORD PTR [rbx+0x10],rcx
   1400039c4:	jb     0x1400039cb
   1400039c6:	mov    rdx,QWORD PTR [rbx]
   1400039c9:	jmp    0x1400039ce
   1400039cb:	mov    rdx,rbx
   1400039ce:	xor    eax,eax
   1400039d0:	mov    WORD PTR [rdx+rcx*2],ax
   1400039d4:	xor    edx,edx
   1400039d6:	mov    rcx,rbx
   1400039d9:	call   0x1400045b0
   1400039de:	jmp    0x140003a82
   1400039e3:	movabs rax,0x7ffffffffffffffe
   1400039ed:	cmp    rdi,rax
   1400039f0:	jbe    0x140003a00
   1400039f2:	lea    rcx,[rip+0x3e9f]        # 0x140007898
   1400039f9:	call   QWORD PTR [rip+0x3651]        # 0x140007050
   1400039ff:	int3   
   140003a00:	mov    rcx,QWORD PTR [rcx+0x18]
   140003a04:	cmp    rcx,rdi
   140003a07:	jae    0x140003a33
   140003a09:	mov    r8,QWORD PTR [rbx+0x10]
   140003a0d:	mov    rdx,rdi
   140003a10:	mov    rcx,rbx
   140003a13:	call   0x140002ca0
   140003a18:	test   rdi,rdi
   140003a1b:	je     0x140003a82
   140003a1d:	cmp    QWORD PTR [rsi+0x18],0x8
   140003a22:	jb     0x140003a27
   140003a24:	mov    rsi,QWORD PTR [rsi]
   140003a27:	cmp    QWORD PTR [rbx+0x18],0x8
   140003a2c:	jb     0x140003a54
   140003a2e:	mov    rcx,QWORD PTR [rbx]
   140003a31:	jmp    0x140003a57
   140003a33:	test   rdi,rdi
   140003a36:	jne    0x140003a1d
   140003a38:	xor    eax,eax
   140003a3a:	mov    QWORD PTR [rbx+0x10],rax
   140003a3e:	cmp    rcx,0x8
   140003a42:	jb     0x140003a4c
   140003a44:	mov    rcx,QWORD PTR [rbx]
   140003a47:	mov    WORD PTR [rcx],ax
   140003a4a:	jmp    0x140003a82
   140003a4c:	mov    rcx,rbx
   140003a4f:	mov    WORD PTR [rbx],ax
   140003a52:	jmp    0x140003a82
   140003a54:	mov    rcx,rbx
   140003a57:	test   rdi,rdi
   140003a5a:	je     0x140003a69
   140003a5c:	lea    r8,[rdi+rdi*1]
   140003a60:	lea    rdx,[rsi+rbp*2]
   140003a64:	call   0x140005e42
   140003a69:	cmp    QWORD PTR [rbx+0x18],0x8
   140003a6e:	mov    QWORD PTR [rbx+0x10],rdi
   140003a72:	jb     0x140003a79
   140003a74:	mov    rcx,QWORD PTR [rbx]
   140003a77:	jmp    0x140003a7c
   140003a79:	mov    rcx,rbx
   140003a7c:	xor    eax,eax
   140003a7e:	mov    WORD PTR [rcx+rdi*2],ax
   140003a82:	mov    rbp,QWORD PTR [rsp+0x38]
   140003a87:	mov    rsi,QWORD PTR [rsp+0x40]
   140003a8c:	mov    rax,rbx
   140003a8f:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a94:	add    rsp,0x20
   140003a98:	pop    rdi
   140003a99:	ret    
   140003a9a:	int3   
   140003a9b:	int3   
   140003a9c:	int3   
   140003a9d:	int3   
   140003a9e:	int3   
   140003a9f:	int3   
   140003aa0:	cmp    WORD PTR [rdx],0x0
   140003aa4:	jne    0x140003aae
   140003aa6:	xor    r8d,r8d
   140003aa9:	jmp    0x140003ad0
   140003aae:	or     r8,0xffffffffffffffff
   140003ab2:	inc    r8
   140003ab5:	cmp    WORD PTR [rdx+r8*2],0x0
   140003abb:	jne    0x140003ab2
   140003abd:	jmp    0x140003ad0
   140003ac2:	int3   
   140003ac3:	int3   
   140003ac4:	int3   
   140003ac5:	int3   
   140003ac6:	int3   
   140003ac7:	int3   
   140003ac8:	int3   
   140003ac9:	int3   
   140003aca:	int3   
   140003acb:	int3   
   140003acc:	int3   
   140003acd:	int3   
   140003ace:	int3   
   140003acf:	int3   
   140003ad0:	mov    QWORD PTR [rsp+0x8],rbx
   140003ad5:	mov    QWORD PTR [rsp+0x10],rsi
   140003ada:	push   rdi
   140003adb:	sub    rsp,0x20
   140003adf:	mov    rdi,r8
   140003ae2:	mov    rsi,rdx
   140003ae5:	mov    rbx,rcx
   140003ae8:	test   rdx,rdx
   140003aeb:	je     0x140003b4e
   140003aed:	mov    rdx,QWORD PTR [rcx+0x18]
   140003af1:	cmp    rdx,0x8
   140003af5:	jb     0x140003afc
   140003af7:	mov    rax,QWORD PTR [rcx]
   140003afa:	jmp    0x140003aff
   140003afc:	mov    rax,rcx
   140003aff:	cmp    rsi,rax
   140003b02:	jb     0x140003b4e
   140003b04:	cmp    rdx,0x8
   140003b08:	jb     0x140003b0d
   140003b0a:	mov    rcx,QWORD PTR [rcx]
   140003b0d:	mov    rax,QWORD PTR [rbx+0x10]
   140003b11:	lea    rcx,[rcx+rax*2]
   140003b15:	cmp    rcx,rsi
   140003b18:	jbe    0x140003b4e
   140003b1a:	cmp    rdx,0x8
   140003b1e:	jb     0x140003b25
   140003b20:	mov    rax,QWORD PTR [rbx]
   140003b23:	jmp    0x140003b28
   140003b25:	mov    rax,rbx
   140003b28:	sub    rsi,rax
   140003b2b:	mov    r9,r8
   140003b2e:	mov    rdx,rbx
   140003b31:	sar    rsi,1
   140003b34:	mov    rcx,rbx
   140003b37:	mov    r8,rsi
   140003b3a:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b3f:	mov    rsi,QWORD PTR [rsp+0x38]
   140003b44:	add    rsp,0x20
   140003b48:	pop    rdi
   140003b49:	jmp    0x140003960
   140003b4e:	movabs rax,0x7ffffffffffffffe
   140003b58:	cmp    r8,rax
   140003b5b:	jbe    0x140003b6b
   140003b5d:	lea    rcx,[rip+0x3d34]        # 0x140007898
   140003b64:	call   QWORD PTR [rip+0x34e6]        # 0x140007050
   140003b6a:	int3   
   140003b6b:	mov    rcx,QWORD PTR [rbx+0x18]
   140003b6f:	cmp    rcx,r8
   140003b72:	jae    0x140003b94
   140003b74:	mov    r8,QWORD PTR [rbx+0x10]
   140003b78:	mov    rdx,rdi
   140003b7b:	mov    rcx,rbx
   140003b7e:	call   0x140002ca0
   140003b83:	test   rdi,rdi
   140003b86:	je     0x140003c04
   140003b88:	cmp    QWORD PTR [rbx+0x18],0x8
   140003b8d:	jb     0x140003bd7
   140003b8f:	mov    rcx,QWORD PTR [rbx]
   140003b92:	jmp    0x140003bda
   140003b94:	test   r8,r8
   140003b97:	jne    0x140003b83
   140003b99:	xor    eax,eax
   140003b9b:	mov    QWORD PTR [rbx+0x10],rax
   140003b9f:	cmp    rcx,0x8
   140003ba3:	jb     0x140003bbe
   140003ba5:	mov    rcx,QWORD PTR [rbx]
   140003ba8:	mov    WORD PTR [rcx],ax
   140003bab:	mov    rax,rbx
   140003bae:	mov    rbx,QWORD PTR [rsp+0x30]
   140003bb3:	mov    rsi,QWORD PTR [rsp+0x38]
   140003bb8:	add    rsp,0x20
   140003bbc:	pop    rdi
   140003bbd:	ret    
   140003bbe:	mov    WORD PTR [rbx],ax
   140003bc1:	mov    rcx,rbx
   140003bc4:	mov    rax,rbx
   140003bc7:	mov    rbx,QWORD PTR [rsp+0x30]
   140003bcc:	mov    rsi,QWORD PTR [rsp+0x38]
   140003bd1:	add    rsp,0x20
   140003bd5:	pop    rdi
   140003bd6:	ret    
   140003bd7:	mov    rcx,rbx
   140003bda:	test   rdi,rdi
   140003bdd:	je     0x140003beb
   140003bdf:	lea    r8,[rdi+rdi*1]
   140003be3:	mov    rdx,rsi
   140003be6:	call   0x140005e42
   140003beb:	cmp    QWORD PTR [rbx+0x18],0x8
   140003bf0:	mov    QWORD PTR [rbx+0x10],rdi
   140003bf4:	jb     0x140003bfb
   140003bf6:	mov    rcx,QWORD PTR [rbx]
   140003bf9:	jmp    0x140003bfe
   140003bfb:	mov    rcx,rbx
   140003bfe:	xor    eax,eax
   140003c00:	mov    WORD PTR [rcx+rdi*2],ax
   140003c04:	mov    rsi,QWORD PTR [rsp+0x38]
   140003c09:	mov    rax,rbx
   140003c0c:	mov    rbx,QWORD PTR [rsp+0x30]
   140003c11:	add    rsp,0x20
   140003c15:	pop    rdi
   140003c16:	ret    
   140003c17:	int3   
   140003c18:	int3   
   140003c19:	int3   
   140003c1a:	int3   
   140003c1b:	int3   
   140003c1c:	int3   
   140003c1d:	int3   
   140003c1e:	int3   
   140003c1f:	int3   
   140003c20:	movzx  eax,BYTE PTR [rdx]
   140003c23:	mov    BYTE PTR [rcx],al
   140003c25:	ret    
   140003c26:	int3   
   140003c27:	int3   
   140003c28:	int3   
   140003c29:	int3   
   140003c2a:	int3   
   140003c2b:	int3   
   140003c2c:	int3   
   140003c2d:	int3   
   140003c2e:	int3   
   140003c2f:	int3   
   140003c30:	movzx  eax,WORD PTR [rdx]
   140003c33:	mov    WORD PTR [rcx],ax
   140003c36:	ret    
   140003c37:	int3   
   140003c38:	int3   
   140003c39:	int3   
   140003c3a:	int3   
   140003c3b:	int3   
   140003c3c:	int3   
   140003c3d:	int3   
   140003c3e:	int3   
   140003c3f:	int3   
   140003c40:	mov    rax,QWORD PTR [rcx]
   140003c43:	mov    rcx,QWORD PTR [rax]
   140003c46:	mov    rax,rdx
   140003c49:	mov    QWORD PTR [rdx],rcx
   140003c4c:	ret    
   140003c4d:	int3   
   140003c4e:	int3   
   140003c4f:	int3   
   140003c50:	cmp    QWORD PTR [rcx+0x18],0x10
   140003c55:	jb     0x140003c5b
   140003c57:	mov    rax,QWORD PTR [rcx]
   140003c5a:	ret    
   140003c5b:	mov    rax,rcx
   140003c5e:	ret    
   140003c5f:	int3   
   140003c60:	mov    rax,QWORD PTR [rcx+0x8]
   140003c64:	ret    
   140003c65:	int3   
   140003c66:	int3   
   140003c67:	int3   
   140003c68:	int3   
   140003c69:	int3   
   140003c6a:	int3   
   140003c6b:	int3   
   140003c6c:	int3   
   140003c6d:	int3   
   140003c6e:	int3   
   140003c6f:	int3   
   140003c70:	mov    rax,QWORD PTR [rcx+0x8]
   140003c74:	ret    
   140003c75:	int3   
   140003c76:	int3   
   140003c77:	int3   
   140003c78:	int3   
   140003c79:	int3   
   140003c7a:	int3   
   140003c7b:	int3   
   140003c7c:	int3   
   140003c7d:	int3   
   140003c7e:	int3   
   140003c7f:	int3   
   140003c80:	rex push rbx
   140003c82:	sub    rsp,0x20
   140003c86:	mov    rdx,QWORD PTR [rcx]
   140003c89:	mov    rbx,rcx
   140003c8c:	mov    rdx,QWORD PTR [rdx+0x8]
   140003c90:	call   0x140002e00
   140003c95:	mov    rax,QWORD PTR [rbx]
   140003c98:	mov    QWORD PTR [rax+0x8],rax
   140003c9c:	mov    rax,QWORD PTR [rbx]
   140003c9f:	mov    QWORD PTR [rax],rax
   140003ca2:	mov    rax,QWORD PTR [rbx]
   140003ca5:	mov    QWORD PTR [rax+0x10],rax
   140003ca9:	mov    QWORD PTR [rbx+0x8],0x0
   140003cb1:	add    rsp,0x20
   140003cb5:	pop    rbx
   140003cb6:	ret    
   140003cb7:	int3   
   140003cb8:	int3   
   140003cb9:	int3   
   140003cba:	int3   
   140003cbb:	int3   
   140003cbc:	int3   
   140003cbd:	int3   
   140003cbe:	int3   
   140003cbf:	int3   
   140003cc0:	mov    QWORD PTR [rsp+0x8],rbx
   140003cc5:	mov    QWORD PTR [rsp+0x10],rsi
   140003cca:	push   rdi
   140003ccb:	sub    rsp,0x20
   140003ccf:	cmp    QWORD PTR [rdx+0x18],0x10
   140003cd4:	mov    rdi,QWORD PTR [rdx+0x10]
   140003cd8:	jb     0x140003cdd
   140003cda:	mov    rdx,QWORD PTR [rdx]
   140003cdd:	cmp    QWORD PTR [rcx+0x18],0x10
   140003ce2:	mov    rbx,QWORD PTR [rcx+0x10]
   140003ce6:	jb     0x140003ceb
   140003ce8:	mov    rcx,QWORD PTR [rcx]
   140003ceb:	cmp    rbx,rdi
   140003cee:	mov    r8,rdi
   140003cf1:	cmovb  r8,rbx
   140003cf5:	xor    esi,esi
   140003cf7:	test   r8,r8
   140003cfa:	jne    0x140003d00
   140003cfc:	mov    eax,esi
   140003cfe:	jmp    0x140003d05
   140003d00:	call   0x140005e3c
   140003d05:	cdqe   
   140003d07:	test   rax,rax
   140003d0a:	jne    0x140003d2a
   140003d0c:	cmp    rbx,rdi
   140003d0f:	jae    0x140003d24
   140003d11:	or     eax,0xffffffff
   140003d14:	mov    rbx,QWORD PTR [rsp+0x30]
   140003d19:	mov    rsi,QWORD PTR [rsp+0x38]
   140003d1e:	add    rsp,0x20
   140003d22:	pop    rdi
   140003d23:	ret    
   140003d24:	setne  sil
   140003d28:	mov    eax,esi
   140003d2a:	mov    rbx,QWORD PTR [rsp+0x30]
   140003d2f:	mov    rsi,QWORD PTR [rsp+0x38]
   140003d34:	add    rsp,0x20
   140003d38:	pop    rdi
   140003d39:	ret    
   140003d3a:	int3   
   140003d3b:	int3   
   140003d3c:	int3   
   140003d3d:	int3   
   140003d3e:	int3   
   140003d3f:	int3   
   140003d40:	sub    rsp,0x38
   140003d44:	cmp    BYTE PTR [rdx],0x0
   140003d47:	jne    0x140003d4d
   140003d49:	xor    eax,eax
   140003d4b:	jmp    0x140003d5a
   140003d4d:	or     rax,0xffffffffffffffff
   140003d51:	inc    rax
   140003d54:	cmp    BYTE PTR [rdx+rax*1],0x0
   140003d58:	jne    0x140003d51
   140003d5a:	mov    r8,QWORD PTR [rcx+0x10]
   140003d5e:	mov    r9,rdx
   140003d61:	xor    edx,edx
   140003d63:	mov    QWORD PTR [rsp+0x20],rax
   140003d68:	call   0x140003d80
   140003d6d:	add    rsp,0x38
   140003d71:	ret    
   140003d72:	int3   
   140003d73:	int3   
   140003d74:	int3   
   140003d75:	int3   
   140003d76:	int3   
   140003d77:	int3   
   140003d78:	int3   
   140003d79:	int3   
   140003d7a:	int3   
   140003d7b:	int3   
   140003d7c:	int3   
   140003d7d:	int3   
   140003d7e:	int3   
   140003d7f:	int3   
   140003d80:	rex push rbx
   140003d82:	sub    rsp,0x20
   140003d86:	mov    rax,QWORD PTR [rcx+0x10]
   140003d8a:	mov    rbx,r8
   140003d8d:	cmp    rax,rdx
   140003d90:	jae    0x140003da0
   140003d92:	lea    rcx,[rip+0x3b0f]        # 0x1400078a8
   140003d99:	call   QWORD PTR [rip+0x32a9]        # 0x140007048
   140003d9f:	int3   
   140003da0:	sub    rax,rdx
   140003da3:	mov    QWORD PTR [rsp+0x30],rsi
   140003da8:	mov    QWORD PTR [rsp+0x38],rdi
   140003dad:	cmp    rax,rbx
   140003db0:	cmovb  rbx,rax
   140003db4:	cmp    QWORD PTR [rcx+0x18],0x10
   140003db9:	jb     0x140003dbe
   140003dbb:	mov    rcx,QWORD PTR [rcx]
   140003dbe:	mov    rdi,QWORD PTR [rsp+0x50]
   140003dc3:	cmp    rbx,rdi
   140003dc6:	mov    r8,rdi
   140003dc9:	cmovb  r8,rbx
   140003dcd:	xor    esi,esi
   140003dcf:	test   r8,r8
   140003dd2:	jne    0x140003dd8
   140003dd4:	mov    eax,esi
   140003dd6:	jmp    0x140003de3
   140003dd8:	add    rcx,rdx
   140003ddb:	mov    rdx,r9
   140003dde:	call   0x140005e3c
   140003de3:	cdqe   
   140003de5:	test   rax,rax
   140003de8:	jne    0x140003e08
   140003dea:	cmp    rbx,rdi
   140003ded:	jae    0x140003e02
   140003def:	mov    rdi,QWORD PTR [rsp+0x38]
   140003df4:	mov    rsi,QWORD PTR [rsp+0x30]
   140003df9:	or     eax,0xffffffff
   140003dfc:	add    rsp,0x20
   140003e00:	pop    rbx
   140003e01:	ret    
   140003e02:	setne  sil
   140003e06:	mov    eax,esi
   140003e08:	mov    rdi,QWORD PTR [rsp+0x38]
   140003e0d:	mov    rsi,QWORD PTR [rsp+0x30]
   140003e12:	add    rsp,0x20
   140003e16:	pop    rbx
   140003e17:	ret    
   140003e18:	int3   
   140003e19:	int3   
   140003e1a:	int3   
   140003e1b:	int3   
   140003e1c:	int3   
   140003e1d:	int3   
   140003e1e:	int3   
   140003e1f:	int3   
   140003e20:	test   r8,r8
   140003e23:	jne    0x140003e28
   140003e25:	xor    eax,eax
   140003e27:	ret    
   140003e28:	jmp    0x140005e3c
   140003e2d:	int3   
   140003e2e:	int3   
   140003e2f:	int3   
   140003e30:	rex push rbx
   140003e32:	sub    rsp,0x20
   140003e36:	mov    rbx,rcx
   140003e39:	test   r8,r8
   140003e3c:	je     0x140003e43
   140003e3e:	call   0x140005e42
   140003e43:	mov    rax,rbx
   140003e46:	add    rsp,0x20
   140003e4a:	pop    rbx
   140003e4b:	ret    
   140003e4c:	int3   
   140003e4d:	int3   
   140003e4e:	int3   
   140003e4f:	int3   
   140003e50:	rex push rbx
   140003e52:	sub    rsp,0x20
   140003e56:	mov    rbx,rcx
   140003e59:	test   r8,r8
   140003e5c:	je     0x140003e66
   140003e5e:	add    r8,r8
   140003e61:	call   0x140005e42
   140003e66:	mov    rax,rbx
   140003e69:	add    rsp,0x20
   140003e6d:	pop    rbx
   140003e6e:	ret    
   140003e6f:	int3   
   140003e70:	mov    rcx,rdx
   140003e73:	jmp    0x140005cee
   140003e78:	int3   
   140003e79:	int3   
   140003e7a:	int3   
   140003e7b:	int3   
   140003e7c:	int3   
   140003e7d:	int3   
   140003e7e:	int3   
   140003e7f:	int3   
   140003e80:	mov    rcx,rdx
   140003e83:	jmp    0x140005cee
   140003e88:	int3   
   140003e89:	int3   
   140003e8a:	int3   
   140003e8b:	int3   
   140003e8c:	int3   
   140003e8d:	int3   
   140003e8e:	int3   
   140003e8f:	int3   
   140003e90:	mov    rcx,rdx
   140003e93:	jmp    0x140005cee
   140003e98:	int3   
   140003e99:	int3   
   140003e9a:	int3   
   140003e9b:	int3   
   140003e9c:	int3   
   140003e9d:	int3   
   140003e9e:	int3   
   140003e9f:	int3   
   140003ea0:	mov    rcx,rdx
   140003ea3:	jmp    0x140005cee
   140003ea8:	int3   
   140003ea9:	int3   
   140003eaa:	int3   
   140003eab:	int3   
   140003eac:	int3   
   140003ead:	int3   
   140003eae:	int3   
   140003eaf:	int3   
   140003eb0:	mov    rcx,rdx
   140003eb3:	jmp    0x140005cee
   140003eb8:	int3   
   140003eb9:	int3   
   140003eba:	int3   
   140003ebb:	int3   
   140003ebc:	int3   
   140003ebd:	int3   
   140003ebe:	int3   
   140003ebf:	int3   
   140003ec0:	mov    rcx,rdx
   140003ec3:	jmp    0x140005cee
   140003ec8:	int3   
   140003ec9:	int3   
   140003eca:	int3   
   140003ecb:	int3   
   140003ecc:	int3   
   140003ecd:	int3   
   140003ece:	int3   
   140003ecf:	int3   
   140003ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140003ed5:	push   rdi
   140003ed6:	sub    rsp,0x20
   140003eda:	mov    ecx,r8d
   140003edd:	mov    edi,r8d
   140003ee0:	mov    rbx,rdx
   140003ee3:	call   QWORD PTR [rip+0x3157]        # 0x140007040
   140003ee9:	mov    DWORD PTR [rbx],edi
   140003eeb:	test   rax,rax
   140003eee:	lea    rax,[rip+0x710b]        # 0x14000b000
   140003ef5:	jne    0x140003efe
   140003ef7:	lea    rax,[rip+0x7112]        # 0x14000b010
   140003efe:	mov    QWORD PTR [rbx+0x8],rax
   140003f02:	mov    rax,rbx
   140003f05:	mov    rbx,QWORD PTR [rsp+0x30]
   140003f0a:	add    rsp,0x20
   140003f0e:	pop    rdi
   140003f0f:	ret    
   140003f10:	mov    DWORD PTR [rdx],r8d
   140003f13:	mov    QWORD PTR [rdx+0x8],rcx
   140003f17:	mov    rax,rdx
   140003f1a:	ret    
   140003f1b:	int3   
   140003f1c:	int3   
   140003f1d:	int3   
   140003f1e:	int3   
   140003f1f:	int3   
   140003f20:	mov    rax,QWORD PTR [rcx]
   140003f23:	mov    QWORD PTR [rdx],rax
   140003f26:	mov    rax,rdx
   140003f29:	ret    
   140003f2a:	int3   
   140003f2b:	int3   
   140003f2c:	int3   
   140003f2d:	int3   
   140003f2e:	int3   
   140003f2f:	int3   
   140003f30:	cmp    rcx,QWORD PTR [rdx+0x8]
   140003f34:	jne    0x140003f3e
   140003f36:	cmp    DWORD PTR [rdx],r8d
   140003f39:	jne    0x140003f3e
   140003f3b:	mov    al,0x1
   140003f3d:	ret    
   140003f3e:	xor    al,al
   140003f40:	ret    
   140003f41:	int3   
   140003f42:	int3   
   140003f43:	int3   
   140003f44:	int3   
   140003f45:	int3   
   140003f46:	int3   
   140003f47:	int3   
   140003f48:	int3   
   140003f49:	int3   
   140003f4a:	int3   
   140003f4b:	int3   
   140003f4c:	int3   
   140003f4d:	int3   
   140003f4e:	int3   
   140003f4f:	int3   
   140003f50:	rex push rbx
   140003f52:	sub    rsp,0x30
   140003f56:	mov    rax,QWORD PTR [rcx]
   140003f59:	mov    rbx,r8
   140003f5c:	mov    r8d,edx
   140003f5f:	lea    rdx,[rsp+0x20]
   140003f64:	call   QWORD PTR [rax+0x18]
   140003f67:	mov    rcx,QWORD PTR [rbx+0x8]
   140003f6b:	cmp    QWORD PTR [rax+0x8],rcx
   140003f6f:	jne    0x140003f7f
   140003f71:	mov    ecx,DWORD PTR [rbx]
   140003f73:	cmp    DWORD PTR [rax],ecx
   140003f75:	jne    0x140003f7f
   140003f77:	mov    al,0x1
   140003f79:	add    rsp,0x30
   140003f7d:	pop    rbx
   140003f7e:	ret    
   140003f7f:	xor    al,al
   140003f81:	add    rsp,0x30
   140003f85:	pop    rbx
   140003f86:	ret    
   140003f87:	int3   
   140003f88:	int3   
   140003f89:	int3   
   140003f8a:	int3   
   140003f8b:	int3   
   140003f8c:	int3   
   140003f8d:	int3   
   140003f8e:	int3   
   140003f8f:	int3   
   140003f90:	mov    QWORD PTR [rsp+0x10],rbx
   140003f95:	mov    QWORD PTR [rsp+0x20],r9
   140003f9a:	mov    QWORD PTR [rsp+0x18],r8
   140003f9f:	push   rdi
   140003fa0:	sub    rsp,0x20
   140003fa4:	mov    rdi,rdx
   140003fa7:	mov    rdx,QWORD PTR [rcx]
   140003faa:	mov    rbx,rcx
   140003fad:	cmp    r8,QWORD PTR [rdx]
   140003fb0:	jne    0x140003ff3
   140003fb2:	cmp    r9,rdx
   140003fb5:	jne    0x140003ff3
   140003fb7:	mov    rdx,QWORD PTR [rdx+0x8]
   140003fbb:	call   0x140002e00
   140003fc0:	mov    rax,QWORD PTR [rbx]
   140003fc3:	mov    QWORD PTR [rax+0x8],rax
   140003fc7:	mov    rax,QWORD PTR [rbx]
   140003fca:	mov    QWORD PTR [rax],rax
   140003fcd:	mov    rax,QWORD PTR [rbx]
   140003fd0:	mov    QWORD PTR [rax+0x10],rax
   140003fd4:	mov    rax,QWORD PTR [rbx]
   140003fd7:	mov    QWORD PTR [rbx+0x8],0x0
   140003fdf:	mov    rcx,QWORD PTR [rax]
   140003fe2:	mov    rax,rdi
   140003fe5:	mov    QWORD PTR [rdi],rcx
   140003fe8:	mov    rbx,QWORD PTR [rsp+0x38]
   140003fed:	add    rsp,0x20
   140003ff1:	pop    rdi
   140003ff2:	ret    
   140003ff3:	cmp    r8,r9
   140003ff6:	je     0x140004079
   140003ffc:	nop    DWORD PTR [rax+0x0]
   140004000:	cmp    BYTE PTR [r8+0x19],0x0
   140004005:	mov    rax,r8
   140004008:	jne    0x14000405d
   14000400a:	mov    rdx,QWORD PTR [r8+0x10]
   14000400e:	cmp    BYTE PTR [rdx+0x19],0x0
   140004012:	jne    0x140004033
   140004014:	mov    rcx,QWORD PTR [rdx]
   140004017:	cmp    BYTE PTR [rcx+0x19],0x0
   14000401b:	jne    0x14000402c
   14000401d:	nop    DWORD PTR [rax]
   140004020:	mov    rdx,rcx
   140004023:	mov    rcx,QWORD PTR [rcx]
   140004026:	cmp    BYTE PTR [rcx+0x19],0x0
   14000402a:	je     0x140004020
   14000402c:	mov    QWORD PTR [rsp+0x40],rdx
   140004031:	jmp    0x14000405d
   140004033:	mov    rcx,QWORD PTR [r8+0x8]
   140004037:	cmp    BYTE PTR [rcx+0x19],0x0
   14000403b:	jne    0x140004058
   14000403d:	nop    DWORD PTR [rax]
   140004040:	cmp    r8,QWORD PTR [rcx+0x10]
   140004044:	jne    0x140004058
   140004046:	mov    QWORD PTR [rsp+0x40],rcx
   14000404b:	mov    r8,rcx
   14000404e:	mov    rcx,QWORD PTR [rcx+0x8]
   140004052:	cmp    BYTE PTR [rcx+0x19],0x0
   140004056:	je     0x140004040
   140004058:	mov    QWORD PTR [rsp+0x40],rcx
   14000405d:	lea    rdx,[rsp+0x30]
   140004062:	mov    r8,rax
   140004065:	mov    rcx,rbx
   140004068:	call   0x140004090
   14000406d:	mov    r8,QWORD PTR [rsp+0x40]
   140004072:	cmp    r8,QWORD PTR [rsp+0x48]
   140004077:	jne    0x140004000
   140004079:	mov    rbx,QWORD PTR [rsp+0x38]
   14000407e:	mov    QWORD PTR [rdi],r8
   140004081:	mov    rax,rdi
   140004084:	add    rsp,0x20
   140004088:	pop    rdi
   140004089:	ret    
   14000408a:	int3   
   14000408b:	int3   
   14000408c:	int3   
   14000408d:	int3   
   14000408e:	int3   
   14000408f:	int3   
   140004090:	mov    QWORD PTR [rsp+0x18],r8
   140004095:	push   r14
   140004097:	push   r15
   140004099:	sub    rsp,0x28
   14000409d:	cmp    BYTE PTR [r8+0x19],0x0
   1400040a2:	mov    QWORD PTR [rsp+0x40],rbx
   1400040a7:	mov    QWORD PTR [rsp+0x48],rsi
   1400040ac:	mov    rsi,r8
   1400040af:	mov    r15,rdx
   1400040b2:	mov    r14,rcx
   1400040b5:	jne    0x140004110
   1400040b7:	mov    rax,QWORD PTR [r8+0x10]
   1400040bb:	cmp    BYTE PTR [rax+0x19],0x0
   1400040bf:	jne    0x1400040e3
   1400040c1:	mov    r8,rax
   1400040c4:	mov    rax,QWORD PTR [rax]
   1400040c7:	cmp    BYTE PTR [rax+0x19],0x0
   1400040cb:	jne    0x1400040dc
   1400040cd:	nop    DWORD PTR [rax]
   1400040d0:	mov    r8,rax
   1400040d3:	mov    rax,QWORD PTR [rax]
   1400040d6:	cmp    BYTE PTR [rax+0x19],0x0
   1400040da:	je     0x1400040d0
   1400040dc:	mov    QWORD PTR [rsp+0x50],r8
   1400040e1:	jmp    0x140004110
   1400040e3:	mov    rax,QWORD PTR [r8+0x8]
   1400040e7:	cmp    BYTE PTR [rax+0x19],0x0
   1400040eb:	jne    0x140004108
   1400040ed:	nop    DWORD PTR [rax]
   1400040f0:	cmp    r8,QWORD PTR [rax+0x10]
   1400040f4:	jne    0x140004108
   1400040f6:	mov    QWORD PTR [rsp+0x50],rax
   1400040fb:	mov    r8,rax
   1400040fe:	mov    rax,QWORD PTR [rax+0x8]
   140004102:	cmp    BYTE PTR [rax+0x19],0x0
   140004106:	je     0x1400040f0
   140004108:	mov    r8,rax
   14000410b:	mov    QWORD PTR [rsp+0x50],rax
   140004110:	mov    rcx,QWORD PTR [rsi]
   140004113:	mov    QWORD PTR [rsp+0x20],rdi
   140004118:	cmp    BYTE PTR [rcx+0x19],0x0
   14000411c:	je     0x140004124
   14000411e:	mov    rdi,QWORD PTR [rsi+0x10]
   140004122:	jmp    0x140004140
   140004124:	mov    rax,QWORD PTR [rsi+0x10]
   140004128:	cmp    BYTE PTR [rax+0x19],0x0
   14000412c:	je     0x140004133
   14000412e:	mov    rdi,rcx
   140004131:	jmp    0x140004140
   140004133:	mov    rdi,QWORD PTR [r8+0x10]
   140004137:	cmp    r8,rsi
   14000413a:	jne    0x1400041e3
   140004140:	cmp    BYTE PTR [rdi+0x19],0x0
   140004144:	mov    rbx,QWORD PTR [rsi+0x8]
   140004148:	jne    0x14000414e
   14000414a:	mov    QWORD PTR [rdi+0x8],rbx
   14000414e:	mov    rax,QWORD PTR [r14]
   140004151:	cmp    QWORD PTR [rax+0x8],rsi
   140004155:	jne    0x14000415d
   140004157:	mov    QWORD PTR [rax+0x8],rdi
   14000415b:	jmp    0x14000416b
   14000415d:	cmp    QWORD PTR [rbx],rsi
   140004160:	jne    0x140004167
   140004162:	mov    QWORD PTR [rbx],rdi
   140004165:	jmp    0x14000416b
   140004167:	mov    QWORD PTR [rbx+0x10],rdi
   14000416b:	mov    rdx,QWORD PTR [r14]
   14000416e:	cmp    QWORD PTR [rdx],rsi
   140004171:	jne    0x14000419f
   140004173:	cmp    BYTE PTR [rdi+0x19],0x0
   140004177:	je     0x14000417e
   140004179:	mov    rcx,rbx
   14000417c:	jmp    0x14000419c
   14000417e:	mov    rax,QWORD PTR [rdi]
   140004181:	mov    rcx,rdi
   140004184:	cmp    BYTE PTR [rax+0x19],0x0
   140004188:	jne    0x14000419c
   14000418a:	nop    WORD PTR [rax+rax*1+0x0]
   140004190:	mov    rcx,rax
   140004193:	mov    rax,QWORD PTR [rax]
   140004196:	cmp    BYTE PTR [rax+0x19],0x0
   14000419a:	je     0x140004190
   14000419c:	mov    QWORD PTR [rdx],rcx
   14000419f:	mov    rdx,QWORD PTR [r14]
   1400041a2:	cmp    QWORD PTR [rdx+0x10],rsi
   1400041a6:	jne    0x140004252
   1400041ac:	cmp    BYTE PTR [rdi+0x19],0x0
   1400041b0:	je     0x1400041be
   1400041b2:	mov    rcx,rbx
   1400041b5:	mov    QWORD PTR [rdx+0x10],rbx
   1400041b9:	jmp    0x140004252
   1400041be:	mov    rax,QWORD PTR [rdi+0x10]
   1400041c2:	mov    rcx,rdi
   1400041c5:	cmp    BYTE PTR [rax+0x19],0x0
   1400041c9:	jne    0x1400041dd
   1400041cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400041d0:	mov    rcx,rax
   1400041d3:	mov    rax,QWORD PTR [rax+0x10]
   1400041d7:	cmp    BYTE PTR [rax+0x19],0x0
   1400041db:	je     0x1400041d0
   1400041dd:	mov    QWORD PTR [rdx+0x10],rcx
   1400041e1:	jmp    0x140004252
   1400041e3:	mov    QWORD PTR [rcx+0x8],r8
   1400041e7:	mov    rax,QWORD PTR [rsi]
   1400041ea:	mov    QWORD PTR [r8],rax
   1400041ed:	cmp    r8,QWORD PTR [rsi+0x10]
   1400041f1:	jne    0x1400041f8
   1400041f3:	mov    rbx,r8
   1400041f6:	jmp    0x140004219
   1400041f8:	cmp    BYTE PTR [rdi+0x19],0x0
   1400041fc:	mov    rbx,QWORD PTR [r8+0x8]
   140004200:	jne    0x140004206
   140004202:	mov    QWORD PTR [rdi+0x8],rbx
   140004206:	mov    QWORD PTR [rbx],rdi
   140004209:	mov    rax,QWORD PTR [rsi+0x10]
   14000420d:	mov    QWORD PTR [r8+0x10],rax
   140004211:	mov    rax,QWORD PTR [rsi+0x10]
   140004215:	mov    QWORD PTR [rax+0x8],r8
   140004219:	mov    rax,QWORD PTR [r14]
   14000421c:	cmp    QWORD PTR [rax+0x8],rsi
   140004220:	jne    0x140004228
   140004222:	mov    QWORD PTR [rax+0x8],r8
   140004226:	jmp    0x14000423a
   140004228:	mov    rax,QWORD PTR [rsi+0x8]
   14000422c:	cmp    QWORD PTR [rax],rsi
   14000422f:	jne    0x140004236
   140004231:	mov    QWORD PTR [rax],r8
   140004234:	jmp    0x14000423a
   140004236:	mov    QWORD PTR [rax+0x10],r8
   14000423a:	mov    rax,QWORD PTR [rsi+0x8]
   14000423e:	mov    QWORD PTR [r8+0x8],rax
   140004242:	movzx  eax,BYTE PTR [rsi+0x18]
   140004246:	movzx  ecx,BYTE PTR [r8+0x18]
   14000424b:	mov    BYTE PTR [r8+0x18],al
   14000424f:	mov    BYTE PTR [rsi+0x18],cl
   140004252:	cmp    BYTE PTR [rsi+0x18],0x1
   140004256:	jne    0x14000441e
   14000425c:	mov    rax,QWORD PTR [r14]
   14000425f:	cmp    rdi,QWORD PTR [rax+0x8]
   140004263:	je     0x14000441a
   140004269:	nop    DWORD PTR [rax+0x0]
   140004270:	cmp    BYTE PTR [rdi+0x18],0x1
   140004274:	jne    0x14000441a
   14000427a:	mov    rcx,QWORD PTR [rbx]
   14000427d:	cmp    rdi,rcx
   140004280:	jne    0x14000434c
   140004286:	mov    rcx,QWORD PTR [rbx+0x10]
   14000428a:	cmp    BYTE PTR [rcx+0x18],0x0
   14000428e:	jne    0x1400042e4
   140004290:	mov    BYTE PTR [rcx+0x18],0x1
   140004294:	mov    rcx,QWORD PTR [rbx+0x10]
   140004298:	mov    BYTE PTR [rbx+0x18],0x0
   14000429c:	mov    rax,QWORD PTR [rcx]
   14000429f:	mov    QWORD PTR [rbx+0x10],rax
   1400042a3:	mov    rax,QWORD PTR [rcx]
   1400042a6:	cmp    BYTE PTR [rax+0x19],0x0
   1400042aa:	jne    0x1400042b0
   1400042ac:	mov    QWORD PTR [rax+0x8],rbx
   1400042b0:	mov    rax,QWORD PTR [rbx+0x8]
   1400042b4:	mov    QWORD PTR [rcx+0x8],rax
   1400042b8:	mov    rax,QWORD PTR [r14]
   1400042bb:	cmp    rbx,QWORD PTR [rax+0x8]
   1400042bf:	jne    0x1400042c7
   1400042c1:	mov    QWORD PTR [rax+0x8],rcx
   1400042c5:	jmp    0x1400042d9
   1400042c7:	mov    rax,QWORD PTR [rbx+0x8]
   1400042cb:	cmp    rbx,QWORD PTR [rax]
   1400042ce:	jne    0x1400042d5
   1400042d0:	mov    QWORD PTR [rax],rcx
   1400042d3:	jmp    0x1400042d9
   1400042d5:	mov    QWORD PTR [rax+0x10],rcx
   1400042d9:	mov    QWORD PTR [rcx],rbx
   1400042dc:	mov    QWORD PTR [rbx+0x8],rcx
   1400042e0:	mov    rcx,QWORD PTR [rbx+0x10]
   1400042e4:	cmp    BYTE PTR [rcx+0x19],0x0
   1400042e8:	jne    0x1400043c4
   1400042ee:	mov    rax,QWORD PTR [rcx]
   1400042f1:	cmp    BYTE PTR [rax+0x18],0x1
   1400042f5:	jne    0x140004305
   1400042f7:	mov    rax,QWORD PTR [rcx+0x10]
   1400042fb:	cmp    BYTE PTR [rax+0x18],0x1
   1400042ff:	je     0x1400043c0
   140004305:	mov    rax,QWORD PTR [rcx+0x10]
   140004309:	cmp    BYTE PTR [rax+0x18],0x1
   14000430d:	jne    0x140004329
   14000430f:	mov    rax,QWORD PTR [rcx]
   140004312:	mov    rdx,rcx
   140004315:	mov    BYTE PTR [rax+0x18],0x1
   140004319:	mov    BYTE PTR [rcx+0x18],0x0
   14000431d:	mov    rcx,r14
   140004320:	call   0x140003390
   140004325:	mov    rcx,QWORD PTR [rbx+0x10]
   140004329:	movzx  eax,BYTE PTR [rbx+0x18]
   14000432d:	mov    rdx,rbx
   140004330:	mov    BYTE PTR [rcx+0x18],al
   140004333:	mov    BYTE PTR [rbx+0x18],0x1
   140004337:	mov    rax,QWORD PTR [rcx+0x10]
   14000433b:	mov    rcx,r14
   14000433e:	mov    BYTE PTR [rax+0x18],0x1
   140004342:	call   0x140003240
   140004347:	jmp    0x14000441a
   14000434c:	cmp    BYTE PTR [rcx+0x18],0x0
   140004350:	jne    0x1400043a7
   140004352:	mov    BYTE PTR [rcx+0x18],0x1
   140004356:	mov    rcx,QWORD PTR [rbx]
   140004359:	mov    BYTE PTR [rbx+0x18],0x0
   14000435d:	mov    rax,QWORD PTR [rcx+0x10]
   140004361:	mov    QWORD PTR [rbx],rax
   140004364:	mov    rax,QWORD PTR [rcx+0x10]
   140004368:	cmp    BYTE PTR [rax+0x19],0x0
   14000436c:	jne    0x140004372
   14000436e:	mov    QWORD PTR [rax+0x8],rbx
   140004372:	mov    rax,QWORD PTR [rbx+0x8]
   140004376:	mov    QWORD PTR [rcx+0x8],rax
   14000437a:	mov    rax,QWORD PTR [r14]
   14000437d:	cmp    rbx,QWORD PTR [rax+0x8]
   140004381:	jne    0x140004389
   140004383:	mov    QWORD PTR [rax+0x8],rcx
   140004387:	jmp    0x14000439c
   140004389:	mov    rax,QWORD PTR [rbx+0x8]
   14000438d:	cmp    rbx,QWORD PTR [rax+0x10]
   140004391:	jne    0x140004399
   140004393:	mov    QWORD PTR [rax+0x10],rcx
   140004397:	jmp    0x14000439c
   140004399:	mov    QWORD PTR [rax],rcx
   14000439c:	mov    QWORD PTR [rcx+0x10],rbx
   1400043a0:	mov    QWORD PTR [rbx+0x8],rcx
   1400043a4:	mov    rcx,QWORD PTR [rbx]
   1400043a7:	cmp    BYTE PTR [rcx+0x19],0x0
   1400043ab:	jne    0x1400043c4
   1400043ad:	mov    rax,QWORD PTR [rcx+0x10]
   1400043b1:	cmp    BYTE PTR [rax+0x18],0x1
   1400043b5:	jne    0x1400043da
   1400043b7:	mov    rax,QWORD PTR [rcx]
   1400043ba:	cmp    BYTE PTR [rax+0x18],0x1
   1400043be:	jne    0x1400043da
   1400043c0:	mov    BYTE PTR [rcx+0x18],0x0
   1400043c4:	mov    rax,QWORD PTR [r14]
   1400043c7:	mov    rdi,rbx
   1400043ca:	mov    rbx,QWORD PTR [rbx+0x8]
   1400043ce:	cmp    rdi,QWORD PTR [rax+0x8]
   1400043d2:	jne    0x140004270
   1400043d8:	jmp    0x14000441a
   1400043da:	mov    rax,QWORD PTR [rcx]
   1400043dd:	cmp    BYTE PTR [rax+0x18],0x1
   1400043e1:	jne    0x1400043fd
   1400043e3:	mov    rax,QWORD PTR [rcx+0x10]
   1400043e7:	mov    rdx,rcx
   1400043ea:	mov    BYTE PTR [rax+0x18],0x1
   1400043ee:	mov    BYTE PTR [rcx+0x18],0x0
   1400043f2:	mov    rcx,r14
   1400043f5:	call   0x140003240
   1400043fa:	mov    rcx,QWORD PTR [rbx]
   1400043fd:	movzx  eax,BYTE PTR [rbx+0x18]
   140004401:	mov    rdx,rbx
   140004404:	mov    BYTE PTR [rcx+0x18],al
   140004407:	mov    BYTE PTR [rbx+0x18],0x1
   14000440b:	mov    rax,QWORD PTR [rcx]
   14000440e:	mov    rcx,r14
   140004411:	mov    BYTE PTR [rax+0x18],0x1
   140004415:	call   0x140003390
   14000441a:	mov    BYTE PTR [rdi+0x18],0x1
   14000441e:	cmp    QWORD PTR [rsi+0x58],0x10
   140004423:	mov    rdi,QWORD PTR [rsp+0x20]
   140004428:	jb     0x140004433
   14000442a:	mov    rcx,QWORD PTR [rsi+0x40]
   14000442e:	call   0x140005cee
   140004433:	xor    ebx,ebx
   140004435:	mov    QWORD PTR [rsi+0x58],0xf
   14000443d:	mov    QWORD PTR [rsi+0x50],rbx
   140004441:	mov    BYTE PTR [rsi+0x40],bl
   140004444:	cmp    QWORD PTR [rsi+0x38],0x10
   140004449:	jb     0x140004454
   14000444b:	mov    rcx,QWORD PTR [rsi+0x20]
   14000444f:	call   0x140005cee
   140004454:	mov    QWORD PTR [rsi+0x38],0xf
   14000445c:	mov    QWORD PTR [rsi+0x30],rbx
   140004460:	mov    rcx,rsi
   140004463:	mov    BYTE PTR [rsi+0x20],bl
   140004466:	call   0x140005cee
   14000446b:	mov    rax,QWORD PTR [r14+0x8]
   14000446f:	mov    rsi,QWORD PTR [rsp+0x48]
   140004474:	mov    rbx,QWORD PTR [rsp+0x40]
   140004479:	test   rax,rax
   14000447c:	je     0x140004485
   14000447e:	dec    rax
   140004481:	mov    QWORD PTR [r14+0x8],rax
   140004485:	mov    rax,QWORD PTR [rsp+0x50]
   14000448a:	mov    QWORD PTR [r15],rax
   14000448d:	mov    rax,r15
   140004490:	add    rsp,0x28
   140004494:	pop    r15
   140004496:	pop    r14
   140004498:	ret    
   140004499:	int3   
   14000449a:	int3   
   14000449b:	int3   
   14000449c:	int3   
   14000449d:	int3   
   14000449e:	int3   
   14000449f:	int3   
   1400044a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400044a5:	push   rdi
   1400044a6:	sub    rsp,0x20
   1400044aa:	mov    rdi,QWORD PTR [rcx+0x10]
   1400044ae:	mov    rbx,rcx
   1400044b1:	cmp    rdi,rdx
   1400044b4:	jae    0x1400044c4
   1400044b6:	lea    rcx,[rip+0x33eb]        # 0x1400078a8
   1400044bd:	call   QWORD PTR [rip+0x2b85]        # 0x140007048
   1400044c3:	int3   
   1400044c4:	mov    rax,rdi
   1400044c7:	sub    rax,rdx
   1400044ca:	cmp    rax,r8
   1400044cd:	ja     0x140004504
   1400044cf:	cmp    QWORD PTR [rcx+0x18],0x10
   1400044d4:	mov    QWORD PTR [rcx+0x10],rdx
   1400044d8:	jb     0x1400044ef
   1400044da:	mov    rax,QWORD PTR [rcx]
   1400044dd:	mov    BYTE PTR [rax+rdx*1],0x0
   1400044e1:	mov    rax,rbx
   1400044e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400044e9:	add    rsp,0x20
   1400044ed:	pop    rdi
   1400044ee:	ret    
   1400044ef:	mov    rax,rcx
   1400044f2:	mov    BYTE PTR [rcx+rdx*1],0x0
   1400044f6:	mov    rax,rbx
   1400044f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400044fe:	add    rsp,0x20
   140004502:	pop    rdi
   140004503:	ret    
   140004504:	test   r8,r8
   140004507:	je     0x14000455b
   140004509:	cmp    QWORD PTR [rcx+0x18],0x10
   14000450e:	jb     0x140004515
   140004510:	mov    rax,QWORD PTR [rcx]
   140004513:	jmp    0x140004518
   140004515:	mov    rax,rcx
   140004518:	sub    rdi,r8
   14000451b:	lea    rcx,[rax+rdx*1]
   14000451f:	mov    rax,rdi
   140004522:	sub    rax,rdx
   140004525:	je     0x140004534
   140004527:	lea    rdx,[rcx+r8*1]
   14000452b:	mov    r8,rax
   14000452e:	call   QWORD PTR [rip+0x2bf4]        # 0x140007128
   140004534:	cmp    QWORD PTR [rbx+0x18],0x10
   140004539:	mov    QWORD PTR [rbx+0x10],rdi
   14000453d:	jb     0x140004554
   14000453f:	mov    rax,QWORD PTR [rbx]
   140004542:	mov    BYTE PTR [rax+rdi*1],0x0
   140004546:	mov    rax,rbx
   140004549:	mov    rbx,QWORD PTR [rsp+0x30]
   14000454e:	add    rsp,0x20
   140004552:	pop    rdi
   140004553:	ret    
   140004554:	mov    rax,rbx
   140004557:	mov    BYTE PTR [rbx+rdi*1],0x0
   14000455b:	mov    rax,rbx
   14000455e:	mov    rbx,QWORD PTR [rsp+0x30]
   140004563:	add    rsp,0x20
   140004567:	pop    rdi
   140004568:	ret    
   140004569:	int3   
   14000456a:	int3   
   14000456b:	int3   
   14000456c:	int3   
   14000456d:	int3   
   14000456e:	int3   
   14000456f:	int3   
   140004570:	sub    rsp,0x28
   140004574:	cmp    QWORD PTR [rcx+0x10],rdx
   140004578:	jae    0x140004588
   14000457a:	lea    rcx,[rip+0x3327]        # 0x1400078a8
   140004581:	call   QWORD PTR [rip+0x2ac1]        # 0x140007048
   140004587:	int3   
   140004588:	cmp    QWORD PTR [rcx+0x18],0x10
   14000458d:	mov    QWORD PTR [rcx+0x10],rdx
   140004591:	jb     0x1400045a2
   140004593:	mov    rax,QWORD PTR [rcx]
   140004596:	mov    BYTE PTR [rax+rdx*1],0x0
   14000459a:	mov    rax,rcx
   14000459d:	add    rsp,0x28
   1400045a1:	ret    
   1400045a2:	mov    rax,rcx
   1400045a5:	mov    BYTE PTR [rcx+rdx*1],0x0
   1400045a9:	add    rsp,0x28
   1400045ad:	ret    
   1400045ae:	int3   
   1400045af:	int3   
   1400045b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400045b5:	push   rdi
   1400045b6:	sub    rsp,0x20
   1400045ba:	mov    rdi,QWORD PTR [rcx+0x10]
   1400045be:	mov    r9,r8
   1400045c1:	mov    rbx,rcx
   1400045c4:	cmp    rdi,rdx
   1400045c7:	jae    0x1400045d7
   1400045c9:	lea    rcx,[rip+0x32d8]        # 0x1400078a8
   1400045d0:	call   QWORD PTR [rip+0x2a72]        # 0x140007048
   1400045d6:	int3   
   1400045d7:	mov    rax,rdi
   1400045da:	sub    rax,rdx
   1400045dd:	cmp    rax,r8
   1400045e0:	ja     0x140004604
   1400045e2:	cmp    QWORD PTR [rcx+0x18],0x8
   1400045e7:	mov    QWORD PTR [rcx+0x10],rdx
   1400045eb:	jb     0x1400045f0
   1400045ed:	mov    rcx,QWORD PTR [rcx]
   1400045f0:	xor    eax,eax
   1400045f2:	mov    WORD PTR [rcx+rdx*2],ax
   1400045f6:	mov    rax,rbx
   1400045f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400045fe:	add    rsp,0x20
   140004602:	pop    rdi
   140004603:	ret    
   140004604:	test   r8,r8
   140004607:	je     0x14000464d
   140004609:	cmp    QWORD PTR [rcx+0x18],0x8
   14000460e:	jb     0x140004615
   140004610:	mov    rax,QWORD PTR [rcx]
   140004613:	jmp    0x140004618
   140004615:	mov    rax,rcx
   140004618:	sub    rdi,r8
   14000461b:	lea    rcx,[rax+rdx*2]
   14000461f:	mov    r8,rdi
   140004622:	sub    r8,rdx
   140004625:	je     0x140004634
   140004627:	lea    rdx,[rcx+r9*2]
   14000462b:	add    r8,r8
   14000462e:	call   QWORD PTR [rip+0x2af4]        # 0x140007128
   140004634:	cmp    QWORD PTR [rbx+0x18],0x8
   140004639:	mov    QWORD PTR [rbx+0x10],rdi
   14000463d:	jb     0x140004644
   14000463f:	mov    rcx,QWORD PTR [rbx]
   140004642:	jmp    0x140004647
   140004644:	mov    rcx,rbx
   140004647:	xor    eax,eax
   140004649:	mov    WORD PTR [rcx+rdi*2],ax
   14000464d:	mov    rax,rbx
   140004650:	mov    rbx,QWORD PTR [rsp+0x30]
   140004655:	add    rsp,0x20
   140004659:	pop    rdi
   14000465a:	ret    
   14000465b:	int3   
   14000465c:	int3   
   14000465d:	int3   
   14000465e:	int3   
   14000465f:	int3   
   140004660:	sub    rsp,0x28
   140004664:	cmp    QWORD PTR [rcx+0x10],rdx
   140004668:	jae    0x140004678
   14000466a:	lea    rcx,[rip+0x3237]        # 0x1400078a8
   140004671:	call   QWORD PTR [rip+0x29d1]        # 0x140007048
   140004677:	int3   
   140004678:	cmp    QWORD PTR [rcx+0x18],0x8
   14000467d:	mov    QWORD PTR [rcx+0x10],rdx
   140004681:	jb     0x140004696
   140004683:	mov    rax,QWORD PTR [rcx]
   140004686:	xor    r8d,r8d
   140004689:	mov    WORD PTR [rax+rdx*2],r8w
   14000468e:	mov    rax,rcx
   140004691:	add    rsp,0x28
   140004695:	ret    
   140004696:	xor    r8d,r8d
   140004699:	mov    rax,rcx
   14000469c:	mov    WORD PTR [rcx+rdx*2],r8w
   1400046a1:	add    rsp,0x28
   1400046a5:	ret    
   1400046a6:	int3   
   1400046a7:	int3   
   1400046a8:	int3   
   1400046a9:	int3   
   1400046aa:	int3   
   1400046ab:	int3   
   1400046ac:	int3   
   1400046ad:	int3   
   1400046ae:	int3   
   1400046af:	int3   
   1400046b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400046b5:	mov    QWORD PTR [rsp+0x18],rbp
   1400046ba:	mov    QWORD PTR [rsp+0x20],rsi
   1400046bf:	push   rdi
   1400046c0:	sub    rsp,0x20
   1400046c4:	mov    rdi,rdx
   1400046c7:	mov    rdx,r8
   1400046ca:	mov    rbp,r8
   1400046cd:	mov    rsi,rcx
   1400046d0:	call   0x140003170
   1400046d5:	mov    rbx,rax
   1400046d8:	cmp    rax,QWORD PTR [rsi]
   1400046db:	je     0x1400046f4
   1400046dd:	lea    rdx,[rax+0x20]
   1400046e1:	mov    rcx,rbp
   1400046e4:	call   0x140003cc0
   1400046e9:	test   eax,eax
   1400046eb:	js     0x1400046f4
   1400046ed:	mov    QWORD PTR [rsp+0x30],rbx
   1400046f2:	jmp    0x1400046fc
   1400046f4:	mov    rax,QWORD PTR [rsi]
   1400046f7:	mov    QWORD PTR [rsp+0x30],rax
   1400046fc:	mov    rbx,QWORD PTR [rsp+0x38]
   140004701:	mov    rbp,QWORD PTR [rsp+0x40]
   140004706:	mov    rsi,QWORD PTR [rsp+0x48]
   14000470b:	lea    rax,[rsp+0x30]
   140004710:	mov    rax,QWORD PTR [rax]
   140004713:	mov    QWORD PTR [rdi],rax
   140004716:	mov    rax,rdi
   140004719:	add    rsp,0x20
   14000471d:	pop    rdi
   14000471e:	ret    
   14000471f:	int3   
   140004720:	lea    rax,[rip+0x68d9]        # 0x14000b000
   140004727:	ret    
   140004728:	int3   
   140004729:	int3   
   14000472a:	int3   
   14000472b:	int3   
   14000472c:	int3   
   14000472d:	int3   
   14000472e:	int3   
   14000472f:	int3   
   140004730:	mov    rax,rdx
   140004733:	ret    
   140004734:	int3   
   140004735:	int3   
   140004736:	int3   
   140004737:	int3   
   140004738:	int3   
   140004739:	int3   
   14000473a:	int3   
   14000473b:	int3   
   14000473c:	int3   
   14000473d:	int3   
   14000473e:	int3   
   14000473f:	int3   
   140004740:	mov    rax,rdx
   140004743:	ret    
   140004744:	int3   
   140004745:	int3   
   140004746:	int3   
   140004747:	int3   
   140004748:	int3   
   140004749:	int3   
   14000474a:	int3   
   14000474b:	int3   
   14000474c:	int3   
   14000474d:	int3   
   14000474e:	int3   
   14000474f:	int3   
   140004750:	cmp    BYTE PTR [rcx],0x0
   140004753:	jne    0x140004758
   140004755:	xor    eax,eax
   140004757:	ret    
   140004758:	or     rax,0xffffffffffffffff
   14000475c:	nop    DWORD PTR [rax+0x0]
   140004760:	inc    rax
   140004763:	cmp    BYTE PTR [rcx+rax*1],0x0
   140004767:	jne    0x140004760
   140004769:	ret    
   14000476a:	int3   
   14000476b:	int3   
   14000476c:	int3   
   14000476d:	int3   
   14000476e:	int3   
   14000476f:	int3   
   140004770:	cmp    WORD PTR [rcx],0x0
   140004774:	jne    0x140004779
   140004776:	xor    eax,eax
   140004778:	ret    
   140004779:	or     rax,0xffffffffffffffff
   14000477d:	nop    DWORD PTR [rax]
   140004780:	inc    rax
   140004783:	cmp    WORD PTR [rcx+rax*2],0x0
   140004788:	jne    0x140004780
   14000478a:	ret    
   14000478b:	int3   
   14000478c:	int3   
   14000478d:	int3   
   14000478e:	int3   
   14000478f:	int3   
   140004790:	rex push rbx
   140004792:	sub    rsp,0x20
   140004796:	mov    rbx,rdx
   140004799:	mov    rdx,r8
   14000479c:	call   0x140003170
   1400047a1:	mov    QWORD PTR [rbx],rax
   1400047a4:	mov    rax,rbx
   1400047a7:	add    rsp,0x20
   1400047ab:	pop    rbx
   1400047ac:	ret    
   1400047ad:	int3   
   1400047ae:	int3   
   1400047af:	int3   
   1400047b0:	or     rax,0xffffffffffffffff
   1400047b4:	ret    
   1400047b5:	int3   
   1400047b6:	int3   
   1400047b7:	int3   
   1400047b8:	int3   
   1400047b9:	int3   
   1400047ba:	int3   
   1400047bb:	int3   
   1400047bc:	int3   
   1400047bd:	int3   
   1400047be:	int3   
   1400047bf:	int3   
   1400047c0:	movabs rax,0x7fffffffffffffff
   1400047ca:	ret    
   1400047cb:	int3   
   1400047cc:	int3   
   1400047cd:	int3   
   1400047ce:	int3   
   1400047cf:	int3   
   1400047d0:	or     rax,0xffffffffffffffff
   1400047d4:	ret    
   1400047d5:	int3   
   1400047d6:	int3   
   1400047d7:	int3   
   1400047d8:	int3   
   1400047d9:	int3   
   1400047da:	int3   
   1400047db:	int3   
   1400047dc:	int3   
   1400047dd:	int3   
   1400047de:	int3   
   1400047df:	int3   
   1400047e0:	movabs rax,0x7fffffffffffffff
   1400047ea:	ret    
   1400047eb:	int3   
   1400047ec:	int3   
   1400047ed:	int3   
   1400047ee:	int3   
   1400047ef:	int3   
   1400047f0:	or     rax,0xffffffffffffffff
   1400047f4:	ret    
   1400047f5:	int3   
   1400047f6:	int3   
   1400047f7:	int3   
   1400047f8:	int3   
   1400047f9:	int3   
   1400047fa:	int3   
   1400047fb:	int3   
   1400047fc:	int3   
   1400047fd:	int3   
   1400047fe:	int3   
   1400047ff:	int3   
   140004800:	movabs rax,0x7fffffffffffffff
   14000480a:	ret    
   14000480b:	int3   
   14000480c:	int3   
   14000480d:	int3   
   14000480e:	int3   
   14000480f:	int3   
   140004810:	mov    rax,0xfffffffffffffffe
   140004817:	ret    
   140004818:	int3   
   140004819:	int3   
   14000481a:	int3   
   14000481b:	int3   
   14000481c:	int3   
   14000481d:	int3   
   14000481e:	int3   
   14000481f:	int3   
   140004820:	movabs rax,0x7ffffffffffffffe
   14000482a:	ret    
   14000482b:	int3   
   14000482c:	int3   
   14000482d:	int3   
   14000482e:	int3   
   14000482f:	int3   
   140004830:	mov    QWORD PTR [rsp+0x8],rbx
   140004835:	push   rdi
   140004836:	sub    rsp,0x30
   14000483a:	xor    ebx,ebx
   14000483c:	mov    ecx,r8d
   14000483f:	mov    rdi,rdx
   140004842:	mov    DWORD PTR [rsp+0x20],ebx
   140004846:	call   QWORD PTR [rip+0x27f4]        # 0x140007040
   14000484c:	mov    QWORD PTR [rdi+0x18],0xf
   140004854:	test   rax,rax
   140004857:	mov    QWORD PTR [rdi+0x10],rbx
   14000485b:	lea    rdx,[rip+0x2ece]        # 0x140007730
   140004862:	cmovne rdx,rax
   140004866:	mov    BYTE PTR [rdi],bl
   140004868:	cmp    BYTE PTR [rdx],bl
   14000486a:	je     0x140004879
   14000486c:	or     rbx,0xffffffffffffffff
   140004870:	inc    rbx
   140004873:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140004877:	jne    0x140004870
   140004879:	mov    r8,rbx
   14000487c:	mov    rcx,rdi
   14000487f:	call   0x140003830
   140004884:	mov    rbx,QWORD PTR [rsp+0x40]
   140004889:	mov    rax,rdi
   14000488c:	add    rsp,0x30
   140004890:	pop    rdi
   140004891:	ret    
   140004892:	int3   
   140004893:	int3   
   140004894:	int3   
   140004895:	int3   
   140004896:	int3   
   140004897:	int3   
   140004898:	int3   
   140004899:	int3   
   14000489a:	int3   
   14000489b:	int3   
   14000489c:	int3   
   14000489d:	int3   
   14000489e:	int3   
   14000489f:	int3   
   1400048a0:	rex push rbx
   1400048a2:	sub    rsp,0x30
   1400048a6:	xor    eax,eax
   1400048a8:	mov    rbx,rdx
   1400048ab:	mov    DWORD PTR [rsp+0x20],eax
   1400048af:	cmp    r8d,0x1
   1400048b3:	jne    0x1400048df
   1400048b5:	mov    QWORD PTR [rdx+0x18],0xf
   1400048bd:	mov    QWORD PTR [rdx+0x10],rax
   1400048c1:	mov    BYTE PTR [rdx],al
   1400048c3:	lea    rdx,[rip+0x2ebe]        # 0x140007788
   1400048ca:	lea    r8d,[rax+0x15]
   1400048ce:	mov    rcx,rbx
   1400048d1:	call   0x140003830
   1400048d6:	mov    rax,rbx
   1400048d9:	add    rsp,0x30
   1400048dd:	pop    rbx
   1400048de:	ret    
   1400048df:	call   0x140004830
   1400048e4:	mov    rax,rbx
   1400048e7:	add    rsp,0x30
   1400048eb:	pop    rbx
   1400048ec:	ret    
   1400048ed:	int3   
   1400048ee:	int3   
   1400048ef:	int3   
   1400048f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400048f5:	push   rdi
   1400048f6:	sub    rsp,0x30
   1400048fa:	xor    ebx,ebx
   1400048fc:	mov    ecx,r8d
   1400048ff:	mov    rdi,rdx
   140004902:	mov    DWORD PTR [rsp+0x20],ebx
   140004906:	call   QWORD PTR [rip+0x272c]        # 0x140007038
   14000490c:	mov    QWORD PTR [rdi+0x18],0xf
   140004914:	test   rax,rax
   140004917:	mov    QWORD PTR [rdi+0x10],rbx
   14000491b:	lea    rdx,[rip+0x2e0e]        # 0x140007730
   140004922:	cmovne rdx,rax
   140004926:	mov    BYTE PTR [rdi],bl
   140004928:	cmp    BYTE PTR [rdx],bl
   14000492a:	je     0x140004939
   14000492c:	or     rbx,0xffffffffffffffff
   140004930:	inc    rbx
   140004933:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140004937:	jne    0x140004930
   140004939:	mov    r8,rbx
   14000493c:	mov    rcx,rdi
   14000493f:	call   0x140003830
   140004944:	mov    rbx,QWORD PTR [rsp+0x40]
   140004949:	mov    rax,rdi
   14000494c:	add    rsp,0x30
   140004950:	pop    rdi
   140004951:	ret    
   140004952:	int3   
   140004953:	int3   
   140004954:	int3   
   140004955:	int3   
   140004956:	int3   
   140004957:	int3   
   140004958:	int3   
   140004959:	int3   
   14000495a:	int3   
   14000495b:	int3   
   14000495c:	int3   
   14000495d:	int3   
   14000495e:	int3   
   14000495f:	int3   
   140004960:	test   r8,r8
   140004963:	jne    0x140004969
   140004965:	mov    rax,rcx
   140004968:	ret    
   140004969:	rex.W jmp QWORD PTR [rip+0x27b8]        # 0x140007128
   140004970:	test   r8,r8
   140004973:	jne    0x140004979
   140004975:	mov    rax,rcx
   140004978:	ret    
   140004979:	add    r8,r8
   14000497c:	rex.W jmp QWORD PTR [rip+0x27a5]        # 0x140007128
   140004983:	int3   
   140004984:	int3   
   140004985:	int3   
   140004986:	int3   
   140004987:	int3   
   140004988:	int3   
   140004989:	int3   
   14000498a:	int3   
   14000498b:	int3   
   14000498c:	int3   
   14000498d:	int3   
   14000498e:	int3   
   14000498f:	int3   
   140004990:	lea    rax,[rip+0x2d91]        # 0x140007728
   140004997:	ret    
   140004998:	int3   
   140004999:	int3   
   14000499a:	int3   
   14000499b:	int3   
   14000499c:	int3   
   14000499d:	int3   
   14000499e:	int3   
   14000499f:	int3   
   1400049a0:	lea    rax,[rip+0x2dd1]        # 0x140007778
   1400049a7:	ret    
   1400049a8:	int3   
   1400049a9:	int3   
   1400049aa:	int3   
   1400049ab:	int3   
   1400049ac:	int3   
   1400049ad:	int3   
   1400049ae:	int3   
   1400049af:	int3   
   1400049b0:	lea    rax,[rip+0x2e21]        # 0x1400077d8
   1400049b7:	ret    
   1400049b8:	int3   
   1400049b9:	int3   
   1400049ba:	int3   
   1400049bb:	int3   
   1400049bc:	int3   
   1400049bd:	int3   
   1400049be:	int3   
   1400049bf:	int3   
   1400049c0:	mov    rax,rdx
   1400049c3:	ret    
   1400049c4:	int3   
   1400049c5:	int3   
   1400049c6:	int3   
   1400049c7:	int3   
   1400049c8:	int3   
   1400049c9:	int3   
   1400049ca:	int3   
   1400049cb:	int3   
   1400049cc:	int3   
   1400049cd:	int3   
   1400049ce:	int3   
   1400049cf:	int3   
   1400049d0:	mov    rax,rdx
   1400049d3:	ret    
   1400049d4:	int3   
   1400049d5:	int3   
   1400049d6:	int3   
   1400049d7:	int3   
   1400049d8:	int3   
   1400049d9:	int3   
   1400049da:	int3   
   1400049db:	int3   
   1400049dc:	int3   
   1400049dd:	int3   
   1400049de:	int3   
   1400049df:	int3   
   1400049e0:	mov    rax,rdx
   1400049e3:	ret    
   1400049e4:	int3   
   1400049e5:	int3   
   1400049e6:	int3   
   1400049e7:	int3   
   1400049e8:	int3   
   1400049e9:	int3   
   1400049ea:	int3   
   1400049eb:	int3   
   1400049ec:	int3   
   1400049ed:	int3   
   1400049ee:	int3   
   1400049ef:	int3   
   1400049f0:	mov    rax,rdx
   1400049f3:	ret    
   1400049f4:	int3   
   1400049f5:	int3   
   1400049f6:	int3   
   1400049f7:	int3   
   1400049f8:	int3   
   1400049f9:	int3   
   1400049fa:	int3   
   1400049fb:	int3   
   1400049fc:	int3   
   1400049fd:	int3   
   1400049fe:	int3   
   1400049ff:	int3   
   140004a00:	mov    rax,rcx
   140004a03:	ret    
   140004a04:	int3   
   140004a05:	int3   
   140004a06:	int3   
   140004a07:	int3   
   140004a08:	int3   
   140004a09:	int3   
   140004a0a:	int3   
   140004a0b:	int3   
   140004a0c:	int3   
   140004a0d:	int3   
   140004a0e:	int3   
   140004a0f:	int3   
   140004a10:	mov    rax,rcx
   140004a13:	ret    
   140004a14:	int3   
   140004a15:	int3   
   140004a16:	int3   
   140004a17:	int3   
   140004a18:	int3   
   140004a19:	int3   
   140004a1a:	int3   
   140004a1b:	int3   
   140004a1c:	int3   
   140004a1d:	int3   
   140004a1e:	int3   
   140004a1f:	int3   
   140004a20:	mov    rax,QWORD PTR [rcx+0x8]
   140004a24:	ret    
   140004a25:	int3   
   140004a26:	int3   
   140004a27:	int3   
   140004a28:	int3   
   140004a29:	int3   
   140004a2a:	int3   
   140004a2b:	int3   
   140004a2c:	int3   
   140004a2d:	int3   
   140004a2e:	int3   
   140004a2f:	int3   
   140004a30:	mov    rax,QWORD PTR [rcx+0x10]
   140004a34:	ret    
   140004a35:	int3   
   140004a36:	int3   
   140004a37:	int3   
   140004a38:	int3   
   140004a39:	int3   
   140004a3a:	int3   
   140004a3b:	int3   
   140004a3c:	int3   
   140004a3d:	int3   
   140004a3e:	int3   
   140004a3f:	int3   
   140004a40:	mov    rax,QWORD PTR [rcx+0x10]
   140004a44:	ret    
   140004a45:	int3   
   140004a46:	int3   
   140004a47:	int3   
   140004a48:	int3   
   140004a49:	int3   
   140004a4a:	int3   
   140004a4b:	int3   
   140004a4c:	int3   
   140004a4d:	int3   
   140004a4e:	int3   
   140004a4f:	int3   
   140004a50:	lea    rax,[rip+0x65b9]        # 0x14000b010
   140004a57:	ret    
   140004a58:	int3   
   140004a59:	int3   
   140004a5a:	int3   
   140004a5b:	int3   
   140004a5c:	int3   
   140004a5d:	int3   
   140004a5e:	int3   
   140004a5f:	int3   
   140004a60:	mov    eax,DWORD PTR [rcx]
   140004a62:	ret    
   140004a63:	int3   
   140004a64:	int3   
   140004a65:	int3   
   140004a66:	int3   
   140004a67:	int3   
   140004a68:	int3   
   140004a69:	int3   
   140004a6a:	int3   
   140004a6b:	int3   
   140004a6c:	int3   
   140004a6d:	int3   
   140004a6e:	int3   
   140004a6f:	int3   
   140004a70:	mov    eax,DWORD PTR [rcx]
   140004a72:	ret    
   140004a73:	int3   
   140004a74:	int3   
   140004a75:	int3   
   140004a76:	int3   
   140004a77:	int3   
   140004a78:	int3   
   140004a79:	int3   
   140004a7a:	int3   
   140004a7b:	int3   
   140004a7c:	int3   
   140004a7d:	int3   
   140004a7e:	int3   
   140004a7f:	int3   
   140004a80:	rex.W jmp QWORD PTR [rip+0x2681]        # 0x140007108
   140004a87:	int3   
   140004a88:	int3   
   140004a89:	int3   
   140004a8a:	int3   
   140004a8b:	int3   
   140004a8c:	int3   
   140004a8d:	int3   
   140004a8e:	int3   
   140004a8f:	int3   
   140004a90:	mov    QWORD PTR [rsp+0x10],rdx
   140004a95:	push   rbx
   140004a96:	push   rsi
   140004a97:	push   rdi
   140004a98:	push   r12
   140004a9a:	push   r13
   140004a9c:	push   r14
   140004a9e:	push   r15
   140004aa0:	sub    rsp,0xc0
   140004aa7:	mov    QWORD PTR [rsp+0x88],0xfffffffffffffffe
   140004ab3:	mov    rdi,rdx
   140004ab6:	mov    ebx,ecx
   140004ab8:	mov    QWORD PTR [rsp+0x50],0x7
   140004ac1:	xor    esi,esi
   140004ac3:	mov    QWORD PTR [rsp+0x48],rsi
   140004ac8:	mov    WORD PTR [rsp+0x38],si
   140004acd:	lea    r8d,[rsi+0xd]
   140004ad1:	lea    rdx,[rip+0x2d50]        # 0x140007828
   140004ad8:	lea    rcx,[rsp+0x38]
   140004add:	call   0x140003ad0
   140004ae2:	nop
   140004ae3:	lea    rcx,[rsp+0x38]
   140004ae8:	call   QWORD PTR [rip+0x276a]        # 0x140007258
   140004aee:	nop
   140004aef:	cmp    QWORD PTR [rsp+0x50],0x8
   140004af5:	jb     0x140004b01
   140004af7:	mov    rcx,QWORD PTR [rsp+0x38]
   140004afc:	call   0x140005cee
   140004b01:	mov    BYTE PTR [rsp+0x110],0x0
   140004b09:	lea    rcx,[rsp+0x90]
   140004b11:	call   0x140005bb0
   140004b16:	nop
   140004b17:	mov    QWORD PTR [rsp+0x28],rsi
   140004b1c:	mov    QWORD PTR [rsp+0x30],rsi
   140004b21:	lea    rcx,[rsp+0x28]
   140004b26:	call   0x140002ab0
   140004b2b:	mov    QWORD PTR [rsp+0x28],rax
   140004b30:	mov    r8,rdi
   140004b33:	mov    edx,ebx
   140004b35:	lea    rcx,[rsp+0x38]
   140004b3a:	call   0x140005bbc
   140004b3f:	mov    rbx,rax
   140004b42:	lea    rax,[rsp+0x28]
   140004b47:	cmp    rax,rbx
   140004b4a:	je     0x140004ba0
   140004b4c:	mov    rdx,QWORD PTR [rsp+0x28]
   140004b51:	mov    rdx,QWORD PTR [rdx+0x8]
   140004b55:	lea    rcx,[rsp+0x28]
   140004b5a:	call   0x140002e00
   140004b5f:	mov    rax,QWORD PTR [rsp+0x28]
   140004b64:	mov    QWORD PTR [rax+0x8],rax
   140004b68:	mov    rax,QWORD PTR [rsp+0x28]
   140004b6d:	mov    QWORD PTR [rax],rax
   140004b70:	mov    rax,QWORD PTR [rsp+0x28]
   140004b75:	mov    QWORD PTR [rax+0x10],rax
   140004b79:	mov    QWORD PTR [rsp+0x30],rsi
   140004b7e:	mov    rcx,QWORD PTR [rsp+0x28]
   140004b83:	mov    rax,QWORD PTR [rbx]
   140004b86:	mov    QWORD PTR [rsp+0x28],rax
   140004b8b:	mov    QWORD PTR [rbx],rcx
   140004b8e:	mov    rcx,QWORD PTR [rsp+0x30]
   140004b93:	mov    rax,QWORD PTR [rbx+0x8]
   140004b97:	mov    QWORD PTR [rsp+0x30],rax
   140004b9c:	mov    QWORD PTR [rbx+0x8],rcx
   140004ba0:	mov    r8,QWORD PTR [rsp+0x38]
   140004ba5:	mov    r9,r8
   140004ba8:	mov    r8,QWORD PTR [r8]
   140004bab:	lea    rdx,[rsp+0x20]
   140004bb0:	lea    rcx,[rsp+0x38]
   140004bb5:	call   0x140003f90
   140004bba:	mov    rcx,QWORD PTR [rsp+0x38]
   140004bbf:	call   0x140005cee
   140004bc4:	nop
   140004bc5:	mov    QWORD PTR [rsp+0x50],0xf
   140004bce:	mov    QWORD PTR [rsp+0x48],rsi
   140004bd3:	mov    BYTE PTR [rsp+0x38],0x0
   140004bd8:	mov    r8d,0x8
   140004bde:	lea    rdx,[rip+0x2c63]        # 0x140007848
   140004be5:	lea    rcx,[rsp+0x38]
   140004bea:	call   0x140003830
   140004bef:	nop
   140004bf0:	mov    r15,QWORD PTR [rsp+0x28]
   140004bf5:	mov    rbx,QWORD PTR [r15+0x8]
   140004bf9:	mov    r14,r15
   140004bfc:	mov    r12,QWORD PTR [rsp+0x50]
   140004c01:	mov    r13,QWORD PTR [rsp+0x38]
   140004c06:	cmp    BYTE PTR [rbx+0x19],0x0
   140004c0a:	jne    0x140004ce4
   140004c10:	mov    rsi,QWORD PTR [rsp+0x48]
   140004c15:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140004c20:	lea    rcx,[rbx+0x20]
   140004c24:	lea    rdx,[rsp+0x38]
   140004c29:	cmp    r12,0x10
   140004c2d:	cmovae rdx,r13
   140004c31:	mov    rdi,QWORD PTR [rcx+0x10]
   140004c35:	cmp    QWORD PTR [rcx+0x18],0x10
   140004c3a:	jb     0x140004c3f
   140004c3c:	mov    rcx,QWORD PTR [rcx]
   140004c3f:	mov    r8,rsi
   140004c42:	cmp    rdi,rsi
   140004c45:	cmovb  r8,rdi
   140004c49:	test   r8,r8
   140004c4c:	jne    0x140004c52
   140004c4e:	xor    eax,eax
   140004c50:	jmp    0x140004c57
   140004c52:	call   0x140005e3c
   140004c57:	cdqe   
   140004c59:	test   rax,rax
   140004c5c:	jne    0x140004c70
   140004c5e:	cmp    rdi,rsi
   140004c61:	jae    0x140004c68
   140004c63:	or     eax,0xffffffff
   140004c66:	jmp    0x140004c70
   140004c68:	xor    eax,eax
   140004c6a:	cmp    rdi,rsi
   140004c6d:	setne  al
   140004c70:	test   eax,eax
   140004c72:	jns    0x140004c7a
   140004c74:	mov    rbx,QWORD PTR [rbx+0x10]
   140004c78:	jmp    0x140004c80
   140004c7a:	mov    r14,rbx
   140004c7d:	mov    rbx,QWORD PTR [rbx]
   140004c80:	cmp    BYTE PTR [rbx+0x19],0x0
   140004c84:	je     0x140004c20
   140004c86:	cmp    r14,r15
   140004c89:	je     0x140004ce4
   140004c8b:	lea    rdx,[r14+0x20]
   140004c8f:	mov    rbx,QWORD PTR [rdx+0x10]
   140004c93:	cmp    QWORD PTR [rdx+0x18],0x10
   140004c98:	jb     0x140004c9d
   140004c9a:	mov    rdx,QWORD PTR [rdx]
   140004c9d:	lea    rcx,[rsp+0x38]
   140004ca2:	cmp    r12,0x10
   140004ca6:	cmovae rcx,r13
   140004caa:	mov    r8,rbx
   140004cad:	cmp    rsi,rbx
   140004cb0:	cmovb  r8,rsi
   140004cb4:	test   r8,r8
   140004cb7:	jne    0x140004cbd
   140004cb9:	xor    eax,eax
   140004cbb:	jmp    0x140004cc2
   140004cbd:	call   0x140005e3c
   140004cc2:	cdqe   
   140004cc4:	test   rax,rax
   140004cc7:	jne    0x140004cdb
   140004cc9:	cmp    rsi,rbx
   140004ccc:	jae    0x140004cd3
   140004cce:	or     eax,0xffffffff
   140004cd1:	jmp    0x140004cdb
   140004cd3:	xor    eax,eax
   140004cd5:	cmp    rsi,rbx
   140004cd8:	setne  al
   140004cdb:	test   eax,eax
   140004cdd:	mov    QWORD PTR [rsp+0x20],r14
   140004ce2:	jns    0x140004ce9
   140004ce4:	mov    QWORD PTR [rsp+0x20],r15
   140004ce9:	lea    rbx,[rsp+0x20]
   140004cee:	mov    rbx,QWORD PTR [rbx]
   140004cf1:	cmp    r12,0x10
   140004cf5:	jb     0x140004d04
   140004cf7:	mov    rcx,r13
   140004cfa:	call   0x140005cee
   140004cff:	mov    r15,QWORD PTR [rsp+0x28]
   140004d04:	cmp    rbx,r15
   140004d07:	je     0x140004d23
   140004d09:	mov    BYTE PTR [rsp+0x110],0x1
   140004d11:	mov    r8,rbx
   140004d14:	lea    rdx,[rsp+0x20]
   140004d19:	lea    rcx,[rsp+0x28]
   140004d1e:	call   0x140004090
   140004d23:	mov    QWORD PTR [rsp+0x50],0xf
   140004d2c:	mov    QWORD PTR [rsp+0x48],0x0
   140004d35:	mov    BYTE PTR [rsp+0x38],0x0
   140004d3a:	mov    r8d,0x7
   140004d40:	lea    rdx,[rip+0x2b11]        # 0x140007858
   140004d47:	lea    rcx,[rsp+0x38]
   140004d4c:	call   0x140003830
   140004d51:	nop
   140004d52:	mov    r15,QWORD PTR [rsp+0x28]
   140004d57:	mov    rbx,QWORD PTR [r15+0x8]
   140004d5b:	mov    r14,r15
   140004d5e:	mov    r12,QWORD PTR [rsp+0x50]
   140004d63:	mov    r13,QWORD PTR [rsp+0x38]
   140004d68:	cmp    BYTE PTR [rbx+0x19],0x0
   140004d6c:	jne    0x140004e44
   140004d72:	mov    rsi,QWORD PTR [rsp+0x48]
   140004d77:	nop    WORD PTR [rax+rax*1+0x0]
   140004d80:	lea    rcx,[rbx+0x20]
   140004d84:	lea    rdx,[rsp+0x38]
   140004d89:	cmp    r12,0x10
   140004d8d:	cmovae rdx,r13
   140004d91:	mov    rdi,QWORD PTR [rcx+0x10]
   140004d95:	cmp    QWORD PTR [rcx+0x18],0x10
   140004d9a:	jb     0x140004d9f
   140004d9c:	mov    rcx,QWORD PTR [rcx]
   140004d9f:	mov    r8,rsi
   140004da2:	cmp    rdi,rsi
   140004da5:	cmovb  r8,rdi
   140004da9:	test   r8,r8
   140004dac:	jne    0x140004db2
   140004dae:	xor    eax,eax
   140004db0:	jmp    0x140004db7
   140004db2:	call   0x140005e3c
   140004db7:	cdqe   
   140004db9:	test   rax,rax
   140004dbc:	jne    0x140004dd0
   140004dbe:	cmp    rdi,rsi
   140004dc1:	jae    0x140004dc8
   140004dc3:	or     eax,0xffffffff
   140004dc6:	jmp    0x140004dd0
   140004dc8:	xor    eax,eax
   140004dca:	cmp    rdi,rsi
   140004dcd:	setne  al
   140004dd0:	test   eax,eax
   140004dd2:	jns    0x140004dda
   140004dd4:	mov    rbx,QWORD PTR [rbx+0x10]
   140004dd8:	jmp    0x140004de0
   140004dda:	mov    r14,rbx
   140004ddd:	mov    rbx,QWORD PTR [rbx]
   140004de0:	cmp    BYTE PTR [rbx+0x19],0x0
   140004de4:	je     0x140004d80
   140004de6:	cmp    r14,r15
   140004de9:	je     0x140004e44
   140004deb:	lea    rdx,[r14+0x20]
   140004def:	mov    rbx,QWORD PTR [rdx+0x10]
   140004df3:	cmp    QWORD PTR [rdx+0x18],0x10
   140004df8:	jb     0x140004dfd
   140004dfa:	mov    rdx,QWORD PTR [rdx]
   140004dfd:	lea    rcx,[rsp+0x38]
   140004e02:	cmp    r12,0x10
   140004e06:	cmovae rcx,r13
   140004e0a:	mov    r8,rbx
   140004e0d:	cmp    rsi,rbx
   140004e10:	cmovb  r8,rsi
   140004e14:	test   r8,r8
   140004e17:	jne    0x140004e1d
   140004e19:	xor    eax,eax
   140004e1b:	jmp    0x140004e22
   140004e1d:	call   0x140005e3c
   140004e22:	cdqe   
   140004e24:	test   rax,rax
   140004e27:	jne    0x140004e3b
   140004e29:	cmp    rsi,rbx
   140004e2c:	jae    0x140004e33
   140004e2e:	or     eax,0xffffffff
   140004e31:	jmp    0x140004e3b
   140004e33:	xor    eax,eax
   140004e35:	cmp    rsi,rbx
   140004e38:	setne  al
   140004e3b:	test   eax,eax
   140004e3d:	mov    QWORD PTR [rsp+0x20],r14
   140004e42:	jns    0x140004e49
   140004e44:	mov    QWORD PTR [rsp+0x20],r15
   140004e49:	lea    rbx,[rsp+0x20]
   140004e4e:	mov    rbx,QWORD PTR [rbx]
   140004e51:	cmp    r12,0x10
   140004e55:	jb     0x140004e64
   140004e57:	mov    rcx,r13
   140004e5a:	call   0x140005cee
   140004e5f:	mov    r15,QWORD PTR [rsp+0x28]
   140004e64:	cmp    rbx,r15
   140004e67:	je     0x140004e80
   140004e69:	mov    dil,0x1
   140004e6c:	mov    r8,rbx
   140004e6f:	lea    rdx,[rsp+0x20]
   140004e74:	lea    rcx,[rsp+0x28]
   140004e79:	call   0x140004090
   140004e7e:	jmp    0x140004e83
   140004e80:	xor    dil,dil
   140004e83:	lea    rdx,[rsp+0x58]
   140004e88:	lea    rcx,[rsp+0x90]
   140004e90:	call   0x140005bc2
   140004e95:	nop
   140004e96:	xor    eax,eax
   140004e98:	cmp    QWORD PTR [rsp+0x68],rax
   140004e9d:	setne  al
   140004ea0:	test   eax,eax
   140004ea2:	jne    0x140004ec7
   140004ea4:	call   QWORD PTR [rip+0x2266]        # 0x140007110
   140004eaa:	lea    rcx,[rax+0x60]
   140004eae:	lea    rdx,[rip+0x29ab]        # 0x140007860
   140004eb5:	call   QWORD PTR [rip+0x225d]        # 0x140007118
   140004ebb:	mov    ecx,0x7f
   140004ec0:	call   QWORD PTR [rip+0x225a]        # 0x140007120
   140004ec6:	int3   
   140004ec7:	test   dil,dil
   140004eca:	je     0x140004f19
   140004ecc:	lea    rbx,[rsp+0x58]
   140004ed1:	cmp    QWORD PTR [rsp+0x70],0x10
   140004ed7:	cmovae rbx,QWORD PTR [rsp+0x58]
   140004edd:	call   QWORD PTR [rip+0x222d]        # 0x140007110
   140004ee3:	lea    rcx,[rax+0x60]
   140004ee7:	mov    r8,rbx
   140004eea:	lea    rdx,[rip+0x2987]        # 0x140007878
   140004ef1:	call   QWORD PTR [rip+0x2221]        # 0x140007118
   140004ef7:	call   QWORD PTR [rip+0x2213]        # 0x140007110
   140004efd:	lea    rcx,[rax+0x60]
   140004f01:	mov    r8,QWORD PTR [rsp+0x108]
   140004f09:	mov    r8,QWORD PTR [r8]
   140004f0c:	lea    rdx,[rip+0x2975]        # 0x140007888
   140004f13:	call   QWORD PTR [rip+0x21ff]        # 0x140007118
   140004f19:	cmp    BYTE PTR [rsp+0x110],0x0
   140004f21:	jne    0x140004f4e
   140004f23:	lea    rcx,[rsp+0x38]
   140004f28:	call   QWORD PTR [rip+0x231a]        # 0x140007248
   140004f2e:	nop
   140004f2f:	lea    rcx,[rsp+0x38]
   140004f34:	call   QWORD PTR [rip+0x2306]        # 0x140007240
   140004f3a:	nop
   140004f3b:	cmp    QWORD PTR [rsp+0x50],0x10
   140004f41:	jb     0x140004f4e
   140004f43:	mov    rcx,QWORD PTR [rsp+0x38]
   140004f48:	call   0x140005cee
   140004f4d:	nop
   140004f4e:	mov    QWORD PTR [rsp+0x50],0xf
   140004f57:	mov    QWORD PTR [rsp+0x48],0x0
   140004f60:	mov    BYTE PTR [rsp+0x38],0x0
   140004f65:	or     r9,0xffffffffffffffff
   140004f69:	xor    r8d,r8d
   140004f6c:	lea    rdx,[rsp+0x58]
   140004f71:	lea    rcx,[rsp+0x38]
   140004f76:	call   0x1400036e0
   140004f7b:	lea    r8,[rsp+0x28]
   140004f80:	lea    rdx,[rsp+0x38]
   140004f85:	lea    rcx,[rsp+0x118]
   140004f8d:	call   0x140005980
   140004f92:	mov    ecx,eax
   140004f94:	call   QWORD PTR [rip+0x2186]        # 0x140007120
   140004f9a:	int3   
   140004f9b:	int3   
   140004f9c:	int3   
   140004f9d:	int3   
   140004f9e:	int3   
   140004f9f:	int3   
   140004fa0:	rex push rbx
   140004fa2:	sub    rsp,0x20
   140004fa6:	add    r8,r8
   140004fa9:	mov    rbx,rcx
   140004fac:	call   0x140005e42
   140004fb1:	mov    rax,rbx
   140004fb4:	add    rsp,0x20
   140004fb8:	pop    rbx
   140004fb9:	ret    
   140004fba:	int3   
   140004fbb:	int3   
   140004fbc:	int3   
   140004fbd:	int3   
   140004fbe:	int3   
   140004fbf:	int3   
   140004fc0:	add    r8,r8
   140004fc3:	rex.W jmp QWORD PTR [rip+0x215e]        # 0x140007128
   140004fca:	int3   
   140004fcb:	int3   
   140004fcc:	int3   
   140004fcd:	int3   
   140004fce:	int3   
   140004fcf:	int3   
   140004fd0:	mov    rax,QWORD PTR [rdx]
   140004fd3:	mov    QWORD PTR [rcx],rax
   140004fd6:	mov    rax,rcx
   140004fd9:	ret    
   140004fda:	int3   
   140004fdb:	int3   
   140004fdc:	int3   
   140004fdd:	int3   
   140004fde:	int3   
   140004fdf:	int3   
   140004fe0:	mov    rax,QWORD PTR [rdx]
   140004fe3:	mov    QWORD PTR [rcx],rax
   140004fe6:	mov    rax,rcx
   140004fe9:	ret    
   140004fea:	int3   
   140004feb:	int3   
   140004fec:	int3   
   140004fed:	int3   
   140004fee:	int3   
   140004fef:	int3   
   140004ff0:	sub    rsp,0x18
   140004ff4:	mov    QWORD PTR [rsp],0xfffffffffffffffe
   140004ffc:	xor    eax,eax
   140004ffe:	mov    QWORD PTR [rcx+0x18],rax
   140005002:	cmp    QWORD PTR [rdx],rax
   140005005:	jne    0x14000500d
   140005007:	mov    QWORD PTR [rcx+0x18],rax
   14000500b:	jmp    0x140005022
   14000500d:	lea    rax,[rip+0x2b44]        # 0x140007b58
   140005014:	mov    QWORD PTR [rcx],rax
   140005017:	mov    rax,QWORD PTR [rdx]
   14000501a:	mov    QWORD PTR [rcx+0x8],rax
   14000501e:	mov    QWORD PTR [rcx+0x18],rcx
   140005022:	mov    rax,rcx
   140005025:	add    rsp,0x18
   140005029:	ret    
   14000502a:	int3   
   14000502b:	int3   
   14000502c:	int3   
   14000502d:	int3   
   14000502e:	int3   
   14000502f:	int3   
   140005030:	mov    rax,QWORD PTR [rdx]
   140005033:	mov    QWORD PTR [rcx],rax
   140005036:	mov    rax,rcx
   140005039:	ret    
   14000503a:	int3   
   14000503b:	int3   
   14000503c:	int3   
   14000503d:	int3   
   14000503e:	int3   
   14000503f:	int3   
   140005040:	mov    rax,rcx
   140005043:	ret    
   140005044:	int3   
   140005045:	int3   
   140005046:	int3   
   140005047:	int3   
   140005048:	int3   
   140005049:	int3   
   14000504a:	int3   
   14000504b:	int3   
   14000504c:	int3   
   14000504d:	int3   
   14000504e:	int3   
   14000504f:	int3   
   140005050:	sub    rsp,0x28
   140005054:	xor    eax,eax
   140005056:	test   rcx,rcx
   140005059:	je     0x140005083
   14000505b:	movabs rax,0xaaaaaaaaaaaaaaa
   140005065:	cmp    rcx,rax
   140005068:	ja     0x14000507c
   14000506a:	lea    rcx,[rcx+rcx*2]
   14000506e:	shl    rcx,0x3
   140005072:	call   0x140005ce8
   140005077:	test   rax,rax
   14000507a:	jne    0x140005083
   14000507c:	call   QWORD PTR [rip+0x1fd6]        # 0x140007058
   140005082:	int3   
   140005083:	add    rsp,0x28
   140005087:	ret    
   140005088:	int3   
   140005089:	int3   
   14000508a:	int3   
   14000508b:	int3   
   14000508c:	int3   
   14000508d:	int3   
   14000508e:	int3   
   14000508f:	int3   
   140005090:	mov    rax,rcx
   140005093:	mov    rcx,QWORD PTR [rdx]
   140005096:	rex.W jmp QWORD PTR [rax]
   140005099:	int3   
   14000509a:	int3   
   14000509b:	int3   
   14000509c:	int3   
   14000509d:	int3   
   14000509e:	int3   
   14000509f:	int3   
   1400050a0:	cmp    QWORD PTR [rdx],0x0
   1400050a4:	je     0x1400050c4
   1400050a6:	test   rcx,rcx
   1400050a9:	je     0x1400050c4
   1400050ab:	lea    rax,[rip+0x2aa6]        # 0x140007b58
   1400050b2:	mov    QWORD PTR [rcx],rax
   1400050b5:	mov    rax,QWORD PTR [rdx]
   1400050b8:	mov    QWORD PTR [rcx+0x8],rax
   1400050bc:	mov    rax,rcx
   1400050bf:	mov    QWORD PTR [rcx+0x18],rcx
   1400050c3:	ret    
   1400050c4:	xor    eax,eax
   1400050c6:	mov    QWORD PTR [rcx+0x18],rax
   1400050ca:	ret    
   1400050cb:	int3   
   1400050cc:	int3   
   1400050cd:	int3   
   1400050ce:	int3   
   1400050cf:	int3   
   1400050d0:	cmp    QWORD PTR [rdx],0x0
   1400050d4:	je     0x1400050f4
   1400050d6:	test   rcx,rcx
   1400050d9:	je     0x1400050f4
   1400050db:	lea    rax,[rip+0x2a76]        # 0x140007b58
   1400050e2:	mov    QWORD PTR [rcx],rax
   1400050e5:	mov    rax,QWORD PTR [rdx]
   1400050e8:	mov    QWORD PTR [rcx+0x8],rax
   1400050ec:	mov    rax,rcx
   1400050ef:	mov    QWORD PTR [rcx+0x18],rcx
   1400050f3:	ret    
   1400050f4:	xor    eax,eax
   1400050f6:	mov    QWORD PTR [rcx+0x18],rax
   1400050fa:	ret    
   1400050fb:	int3   
   1400050fc:	int3   
   1400050fd:	int3   
   1400050fe:	int3   
   1400050ff:	int3   
   140005100:	cmp    QWORD PTR [rdx],0x0
   140005104:	je     0x140005124
   140005106:	test   rcx,rcx
   140005109:	je     0x140005124
   14000510b:	lea    rax,[rip+0x2a46]        # 0x140007b58
   140005112:	mov    QWORD PTR [rcx],rax
   140005115:	mov    rax,QWORD PTR [rdx]
   140005118:	mov    QWORD PTR [rcx+0x8],rax
   14000511c:	mov    rax,rcx
   14000511f:	mov    QWORD PTR [rcx+0x18],rcx
   140005123:	ret    
   140005124:	xor    eax,eax
   140005126:	mov    QWORD PTR [rcx+0x18],rax
   14000512a:	ret    
   14000512b:	int3   
   14000512c:	int3   
   14000512d:	int3   
   14000512e:	int3   
   14000512f:	int3   
   140005130:	xor    eax,eax
   140005132:	cmp    QWORD PTR [rcx],rax
   140005135:	setne  al
   140005138:	ret    
   140005139:	int3   
   14000513a:	int3   
   14000513b:	int3   
   14000513c:	int3   
   14000513d:	int3   
   14000513e:	int3   
   14000513f:	int3   
   140005140:	xor    eax,eax
   140005142:	cmp    QWORD PTR [rcx],rax
   140005145:	setne  al
   140005148:	ret    
   140005149:	int3   
   14000514a:	int3   
   14000514b:	int3   
   14000514c:	int3   
   14000514d:	int3   
   14000514e:	int3   
   14000514f:	int3   
   140005150:	mov    rax,QWORD PTR [rdx]
   140005153:	mov    rcx,rdx
   140005156:	xor    edx,edx
   140005158:	rex.W jmp QWORD PTR [rax+0x28]
   14000515c:	int3   
   14000515d:	int3   
   14000515e:	int3   
   14000515f:	int3   
   140005160:	mov    rax,rcx
   140005163:	ret    
   140005164:	int3   
   140005165:	int3   
   140005166:	int3   
   140005167:	int3   
   140005168:	int3   
   140005169:	int3   
   14000516a:	int3   
   14000516b:	int3   
   14000516c:	int3   
   14000516d:	int3   
   14000516e:	int3   
   14000516f:	int3   
   140005170:	mov    rax,rcx
   140005173:	ret    
   140005174:	int3   
   140005175:	int3   
   140005176:	int3   
   140005177:	int3   
   140005178:	int3   
   140005179:	int3   
   14000517a:	int3   
   14000517b:	int3   
   14000517c:	int3   
   14000517d:	int3   
   14000517e:	int3   
   14000517f:	int3   
   140005180:	mov    rax,rcx
   140005183:	ret    
   140005184:	int3   
   140005185:	int3   
   140005186:	int3   
   140005187:	int3   
   140005188:	int3   
   140005189:	int3   
   14000518a:	int3   
   14000518b:	int3   
   14000518c:	int3   
   14000518d:	int3   
   14000518e:	int3   
   14000518f:	int3   
   140005190:	mov    rax,rcx
   140005193:	ret    
   140005194:	int3   
   140005195:	int3   
   140005196:	int3   
   140005197:	int3   
   140005198:	int3   
   140005199:	int3   
   14000519a:	int3   
   14000519b:	int3   
   14000519c:	int3   
   14000519d:	int3   
   14000519e:	int3   
   14000519f:	int3   
   1400051a0:	mov    rax,rcx
   1400051a3:	ret    
   1400051a4:	int3   
   1400051a5:	int3   
   1400051a6:	int3   
   1400051a7:	int3   
   1400051a8:	int3   
   1400051a9:	int3   
   1400051aa:	int3   
   1400051ab:	int3   
   1400051ac:	int3   
   1400051ad:	int3   
   1400051ae:	int3   
   1400051af:	int3   
   1400051b0:	mov    rax,QWORD PTR [rdx]
   1400051b3:	mov    QWORD PTR [rcx],rax
   1400051b6:	mov    rax,rcx
   1400051b9:	ret    
   1400051ba:	int3   
   1400051bb:	int3   
   1400051bc:	int3   
   1400051bd:	int3   
   1400051be:	int3   
   1400051bf:	int3   
   1400051c0:	lea    rax,[rip+0x2951]        # 0x140007b18
   1400051c7:	mov    QWORD PTR [rcx],rax
   1400051ca:	mov    rax,rcx
   1400051cd:	ret    
   1400051ce:	int3   
   1400051cf:	int3   
   1400051d0:	mov    QWORD PTR [rcx+0x18],0x0
   1400051d8:	mov    rax,rcx
   1400051db:	ret    
   1400051dc:	int3   
   1400051dd:	int3   
   1400051de:	int3   
   1400051df:	int3   
   1400051e0:	lea    rax,[rip+0x2971]        # 0x140007b58
   1400051e7:	mov    QWORD PTR [rcx],rax
   1400051ea:	mov    rax,QWORD PTR [rdx]
   1400051ed:	mov    QWORD PTR [rcx+0x8],rax
   1400051f1:	mov    rax,rcx
   1400051f4:	ret    
   1400051f5:	int3   
   1400051f6:	int3   
   1400051f7:	int3   
   1400051f8:	int3   
   1400051f9:	int3   
   1400051fa:	int3   
   1400051fb:	int3   
   1400051fc:	int3   
   1400051fd:	int3   
   1400051fe:	int3   
   1400051ff:	int3   
   140005200:	lea    rax,[rip+0x2951]        # 0x140007b58
   140005207:	mov    QWORD PTR [rcx],rax
   14000520a:	mov    rax,QWORD PTR [rdx+0x8]
   14000520e:	mov    QWORD PTR [rcx+0x8],rax
   140005212:	mov    rax,rcx
   140005215:	ret    
   140005216:	int3   
   140005217:	int3   
   140005218:	int3   
   140005219:	int3   
   14000521a:	int3   
   14000521b:	int3   
   14000521c:	int3   
   14000521d:	int3   
   14000521e:	int3   
   14000521f:	int3   
   140005220:	lea    rax,[rip+0x2931]        # 0x140007b58
   140005227:	mov    QWORD PTR [rcx],rax
   14000522a:	mov    rax,QWORD PTR [rdx+0x8]
   14000522e:	mov    QWORD PTR [rcx+0x8],rax
   140005232:	mov    rax,rcx
   140005235:	ret    
   140005236:	int3   
   140005237:	int3   
   140005238:	int3   
   140005239:	int3   
   14000523a:	int3   
   14000523b:	int3   
   14000523c:	int3   
   14000523d:	int3   
   14000523e:	int3   
   14000523f:	int3   
   140005240:	mov    rax,rcx
   140005243:	ret    
   140005244:	int3   
   140005245:	int3   
   140005246:	int3   
   140005247:	int3   
   140005248:	int3   
   140005249:	int3   
   14000524a:	int3   
   14000524b:	int3   
   14000524c:	int3   
   14000524d:	int3   
   14000524e:	int3   
   14000524f:	int3   
   140005250:	mov    rax,rcx
   140005253:	ret    
   140005254:	int3   
   140005255:	int3   
   140005256:	int3   
   140005257:	int3   
   140005258:	int3   
   140005259:	int3   
   14000525a:	int3   
   14000525b:	int3   
   14000525c:	int3   
   14000525d:	int3   
   14000525e:	int3   
   14000525f:	int3   
   140005260:	mov    rax,rcx
   140005263:	ret    
   140005264:	int3   
   140005265:	int3   
   140005266:	int3   
   140005267:	int3   
   140005268:	int3   
   140005269:	int3   
   14000526a:	int3   
   14000526b:	int3   
   14000526c:	int3   
   14000526d:	int3   
   14000526e:	int3   
   14000526f:	int3   
   140005270:	mov    rax,rcx
   140005273:	ret    
   140005274:	int3   
   140005275:	int3   
   140005276:	int3   
   140005277:	int3   
   140005278:	int3   
   140005279:	int3   
   14000527a:	int3   
   14000527b:	int3   
   14000527c:	int3   
   14000527d:	int3   
   14000527e:	int3   
   14000527f:	int3   
   140005280:	mov    QWORD PTR [rsp+0x8],rcx
   140005285:	push   rdi
   140005286:	sub    rsp,0x30
   14000528a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005293:	mov    QWORD PTR [rsp+0x48],rbx
   140005298:	mov    rbx,rdx
   14000529b:	mov    rdi,rcx
   14000529e:	call   QWORD PTR [rip+0x1eb4]        # 0x140007158
   1400052a4:	nop
   1400052a5:	lea    rax,[rip+0x270c]        # 0x1400079b8
   1400052ac:	mov    QWORD PTR [rdi],rax
   1400052af:	mov    eax,DWORD PTR [rbx+0x18]
   1400052b2:	mov    DWORD PTR [rdi+0x18],eax
   1400052b5:	lea    rcx,[rdi+0x20]
   1400052b9:	mov    QWORD PTR [rcx+0x18],0xf
   1400052c1:	mov    QWORD PTR [rcx+0x10],0x0
   1400052c9:	mov    BYTE PTR [rcx],0x0
   1400052cc:	lea    rdx,[rbx+0x20]
   1400052d0:	or     r9,0xffffffffffffffff
   1400052d4:	xor    r8d,r8d
   1400052d7:	call   0x1400036e0
   1400052dc:	nop
   1400052dd:	mov    rax,rdi
   1400052e0:	mov    rbx,QWORD PTR [rsp+0x48]
   1400052e5:	add    rsp,0x30
   1400052e9:	pop    rdi
   1400052ea:	ret    
   1400052eb:	int3   
   1400052ec:	int3   
   1400052ed:	int3   
   1400052ee:	int3   
   1400052ef:	int3   
   1400052f0:	lea    rax,[rip+0x2821]        # 0x140007b18
   1400052f7:	mov    QWORD PTR [rcx],rax
   1400052fa:	ret    
   1400052fb:	int3   
   1400052fc:	int3   
   1400052fd:	int3   
   1400052fe:	int3   
   1400052ff:	int3   
   140005300:	rex push rbx
   140005302:	sub    rsp,0x20
   140005306:	mov    rbx,rcx
   140005309:	mov    rcx,QWORD PTR [rcx+0x18]
   14000530d:	test   rcx,rcx
   140005310:	je     0x140005326
   140005312:	mov    rax,QWORD PTR [rcx]
   140005315:	cmp    rcx,rbx
   140005318:	setne  dl
   14000531b:	call   QWORD PTR [rax+0x20]
   14000531e:	mov    QWORD PTR [rbx+0x18],0x0
   140005326:	add    rsp,0x20
   14000532a:	pop    rbx
   14000532b:	ret    
   14000532c:	int3   
   14000532d:	int3   
   14000532e:	int3   
   14000532f:	int3   
   140005330:	lea    rax,[rip+0x27e1]        # 0x140007b18
   140005337:	mov    QWORD PTR [rcx],rax
   14000533a:	ret    
   14000533b:	int3   
   14000533c:	int3   
   14000533d:	int3   
   14000533e:	int3   
   14000533f:	int3   
   140005340:	rex push rbx
   140005342:	sub    rsp,0x20
   140005346:	mov    rbx,rcx
   140005349:	mov    rcx,QWORD PTR [rcx+0x18]
   14000534d:	test   rcx,rcx
   140005350:	je     0x140005366
   140005352:	mov    rax,QWORD PTR [rcx]
   140005355:	cmp    rcx,rbx
   140005358:	setne  dl
   14000535b:	call   QWORD PTR [rax+0x20]
   14000535e:	mov    QWORD PTR [rbx+0x18],0x0
   140005366:	mov    rcx,QWORD PTR [rbx+0x18]
   14000536a:	test   rcx,rcx
   14000536d:	je     0x140005383
   14000536f:	mov    rax,QWORD PTR [rcx]
   140005372:	cmp    rcx,rbx
   140005375:	setne  dl
   140005378:	call   QWORD PTR [rax+0x20]
   14000537b:	mov    QWORD PTR [rbx+0x18],0x0
   140005383:	add    rsp,0x20
   140005387:	pop    rbx
   140005388:	ret    
   140005389:	int3   
   14000538a:	int3   
   14000538b:	int3   
   14000538c:	int3   
   14000538d:	int3   
   14000538e:	int3   
   14000538f:	int3   
   140005390:	mov    QWORD PTR [rsp+0x8],rbx
   140005395:	push   rdi
   140005396:	sub    rsp,0x20
   14000539a:	mov    rbx,rdx
   14000539d:	mov    rdi,rcx
   1400053a0:	call   QWORD PTR [rip+0x1dba]        # 0x140007160
   1400053a6:	mov    eax,DWORD PTR [rbx+0x18]
   1400053a9:	lea    rdx,[rbx+0x20]
   1400053ad:	lea    rcx,[rdi+0x20]
   1400053b1:	mov    DWORD PTR [rdi+0x18],eax
   1400053b4:	cmp    rcx,rdx
   1400053b7:	je     0x1400053c5
   1400053b9:	or     r9,0xffffffffffffffff
   1400053bd:	xor    r8d,r8d
   1400053c0:	call   0x1400036e0
   1400053c5:	mov    rax,rdi
   1400053c8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400053cd:	add    rsp,0x20
   1400053d1:	pop    rdi
   1400053d2:	ret    
   1400053d3:	int3   
   1400053d4:	int3   
   1400053d5:	int3   
   1400053d6:	int3   
   1400053d7:	int3   
   1400053d8:	int3   
   1400053d9:	int3   
   1400053da:	int3   
   1400053db:	int3   
   1400053dc:	int3   
   1400053dd:	int3   
   1400053de:	int3   
   1400053df:	int3   
   1400053e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400053e5:	push   rsi
   1400053e6:	sub    rsp,0x20
   1400053ea:	mov    esi,edx
   1400053ec:	mov    rbx,rcx
   1400053ef:	test   dl,0x2
   1400053f2:	je     0x140005431
   1400053f4:	mov    r8d,DWORD PTR [rcx-0x8]
   1400053f8:	lea    r9,[rip+0x7d5]        # 0x140005bd4
   1400053ff:	mov    edx,0x40
   140005404:	mov    QWORD PTR [rsp+0x30],rdi
   140005409:	call   0x140005c1c
   14000540e:	test   sil,0x1
   140005412:	je     0x14000541d
   140005414:	lea    rcx,[rbx-0x8]
   140005418:	call   0x140005e2a
   14000541d:	lea    rax,[rbx-0x8]
   140005421:	mov    rdi,QWORD PTR [rsp+0x30]
   140005426:	mov    rbx,QWORD PTR [rsp+0x38]
   14000542b:	add    rsp,0x20
   14000542f:	pop    rsi
   140005430:	ret    
   140005431:	call   0x140005bd4
   140005436:	test   sil,0x1
   14000543a:	je     0x140005444
   14000543c:	mov    rcx,rbx
   14000543f:	call   0x140005cee
   140005444:	mov    rax,rbx
   140005447:	mov    rbx,QWORD PTR [rsp+0x38]
   14000544c:	add    rsp,0x20
   140005450:	pop    rsi
   140005451:	ret    
   140005452:	int3   
   140005453:	int3   
   140005454:	int3   
   140005455:	int3   
   140005456:	int3   
   140005457:	int3   
   140005458:	int3   
   140005459:	int3   
   14000545a:	int3   
   14000545b:	int3   
   14000545c:	int3   
   14000545d:	int3   
   14000545e:	int3   
   14000545f:	int3   
   140005460:	rex push rbx
   140005462:	sub    rsp,0x20
   140005466:	lea    rax,[rip+0x26ab]        # 0x140007b18
   14000546d:	mov    rbx,rcx
   140005470:	mov    QWORD PTR [rcx],rax
   140005473:	test   dl,0x1
   140005476:	je     0x14000547d
   140005478:	call   0x140005cee
   14000547d:	mov    rax,rbx
   140005480:	add    rsp,0x20
   140005484:	pop    rbx
   140005485:	ret    
   140005486:	int3   
   140005487:	int3   
   140005488:	int3   
   140005489:	int3   
   14000548a:	int3   
   14000548b:	int3   
   14000548c:	int3   
   14000548d:	int3   
   14000548e:	int3   
   14000548f:	int3   
   140005490:	rex push rbx
   140005492:	sub    rsp,0x20
   140005496:	lea    rax,[rip+0x267b]        # 0x140007b18
   14000549d:	mov    rbx,rcx
   1400054a0:	mov    QWORD PTR [rcx],rax
   1400054a3:	test   dl,0x1
   1400054a6:	je     0x1400054ad
   1400054a8:	call   0x140005cee
   1400054ad:	mov    rax,rbx
   1400054b0:	add    rsp,0x20
   1400054b4:	pop    rbx
   1400054b5:	ret    
   1400054b6:	int3   
   1400054b7:	int3   
   1400054b8:	int3   
   1400054b9:	int3   
   1400054ba:	int3   
   1400054bb:	int3   
   1400054bc:	int3   
   1400054bd:	int3   
   1400054be:	int3   
   1400054bf:	int3   
   1400054c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400054c5:	push   rdi
   1400054c6:	sub    rsp,0x20
   1400054ca:	mov    ebx,edx
   1400054cc:	mov    rdi,rcx
   1400054cf:	call   0x140005bd4
   1400054d4:	test   bl,0x1
   1400054d7:	je     0x1400054e1
   1400054d9:	mov    rcx,rdi
   1400054dc:	call   0x140005cee
   1400054e1:	mov    rax,rdi
   1400054e4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400054e9:	add    rsp,0x20
   1400054ed:	pop    rdi
   1400054ee:	ret    
   1400054ef:	int3   
   1400054f0:	mov    QWORD PTR [rsp+0x18],r8
   1400054f5:	mov    QWORD PTR [rsp+0x20],r9
   1400054fa:	sub    rsp,0x28
   1400054fe:	mov    rax,QWORD PTR [rcx]
   140005501:	lea    r9,[rsp+0x48]
   140005506:	call   QWORD PTR [rax+0x470]
   14000550c:	add    rsp,0x28
   140005510:	ret    
   140005511:	int3   
   140005512:	int3   
   140005513:	int3   
   140005514:	int3   
   140005515:	int3   
   140005516:	int3   
   140005517:	int3   
   140005518:	int3   
   140005519:	int3   
   14000551a:	int3   
   14000551b:	int3   
   14000551c:	int3   
   14000551d:	int3   
   14000551e:	int3   
   14000551f:	int3   
   140005520:	mov    rax,QWORD PTR [rcx]
   140005523:	rex.W jmp QWORD PTR [rax+0x720]
   14000552a:	int3   
   14000552b:	int3   
   14000552c:	int3   
   14000552d:	int3   
   14000552e:	int3   
   14000552f:	int3   
   140005530:	mov    rax,QWORD PTR [rcx]
   140005533:	rex.W jmp QWORD PTR [rax+0x80]
   14000553a:	int3   
   14000553b:	int3   
   14000553c:	int3   
   14000553d:	int3   
   14000553e:	int3   
   14000553f:	int3   
   140005540:	mov    rax,QWORD PTR [rcx]
   140005543:	rex.W jmp QWORD PTR [rax+0x30]
   140005547:	int3   
   140005548:	int3   
   140005549:	int3   
   14000554a:	int3   
   14000554b:	int3   
   14000554c:	int3   
   14000554d:	int3   
   14000554e:	int3   
   14000554f:	int3   
   140005550:	mov    rax,QWORD PTR [rcx]
   140005553:	rex.W jmp QWORD PTR [rax+0x388]
   14000555a:	int3   
   14000555b:	int3   
   14000555c:	int3   
   14000555d:	int3   
   14000555e:	int3   
   14000555f:	int3   
   140005560:	rex push rbx
   140005562:	sub    rsp,0x20
   140005566:	mov    rbx,rcx
   140005569:	test   rdx,rdx
   14000556c:	jne    0x140005585
   14000556e:	lea    ecx,[rdx+0x18]
   140005571:	call   0x140005ce8
   140005576:	mov    rdx,rax
   140005579:	test   rax,rax
   14000557c:	jne    0x140005585
   14000557e:	call   QWORD PTR [rip+0x1ad4]        # 0x140007058
   140005584:	int3   
   140005585:	lea    rax,[rip+0x25cc]        # 0x140007b58
   14000558c:	mov    QWORD PTR [rdx],rax
   14000558f:	mov    rax,QWORD PTR [rbx+0x8]
   140005593:	mov    QWORD PTR [rdx+0x8],rax
   140005597:	mov    rax,rdx
   14000559a:	add    rsp,0x20
   14000559e:	pop    rbx
   14000559f:	ret    
   1400055a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400055a5:	push   rdi
   1400055a6:	sub    rsp,0x20
   1400055aa:	mov    rax,QWORD PTR [rcx]
   1400055ad:	movzx  ebx,dl
   1400055b0:	xor    edx,edx
   1400055b2:	mov    rdi,rcx
   1400055b5:	call   QWORD PTR [rax+0x28]
   1400055b8:	test   bl,bl
   1400055ba:	je     0x1400055c4
   1400055bc:	mov    rcx,rdi
   1400055bf:	call   0x140005cee
   1400055c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400055c9:	add    rsp,0x20
   1400055cd:	pop    rdi
   1400055ce:	ret    
   1400055cf:	int3   
   1400055d0:	mov    rax,rcx
   1400055d3:	mov    rcx,QWORD PTR [rdx]
   1400055d6:	rex.W jmp QWORD PTR [rax+0x8]
   1400055da:	int3   
   1400055db:	int3   
   1400055dc:	int3   
   1400055dd:	int3   
   1400055de:	int3   
   1400055df:	int3   
   1400055e0:	mov    rax,rcx
   1400055e3:	ret    
   1400055e4:	int3   
   1400055e5:	int3   
   1400055e6:	int3   
   1400055e7:	int3   
   1400055e8:	int3   
   1400055e9:	int3   
   1400055ea:	int3   
   1400055eb:	int3   
   1400055ec:	int3   
   1400055ed:	int3   
   1400055ee:	int3   
   1400055ef:	int3   
   1400055f0:	mov    rax,rcx
   1400055f3:	ret    
   1400055f4:	int3   
   1400055f5:	int3   
   1400055f6:	int3   
   1400055f7:	int3   
   1400055f8:	int3   
   1400055f9:	int3   
   1400055fa:	int3   
   1400055fb:	int3   
   1400055fc:	int3   
   1400055fd:	int3   
   1400055fe:	int3   
   1400055ff:	int3   
   140005600:	lea    rax,[rcx+0x8]
   140005604:	ret    
   140005605:	int3   
   140005606:	int3   
   140005607:	int3   
   140005608:	int3   
   140005609:	int3   
   14000560a:	int3   
   14000560b:	int3   
   14000560c:	int3   
   14000560d:	int3   
   14000560e:	int3   
   14000560f:	int3   
   140005610:	cmp    QWORD PTR [rcx+0x18],rcx
   140005614:	sete   al
   140005617:	ret    
   140005618:	int3   
   140005619:	int3   
   14000561a:	int3   
   14000561b:	int3   
   14000561c:	int3   
   14000561d:	int3   
   14000561e:	int3   
   14000561f:	int3   
   140005620:	rex push rbx
   140005622:	sub    rsp,0x20
   140005626:	mov    rbx,rcx
   140005629:	test   rdx,rdx
   14000562c:	jne    0x140005645
   14000562e:	lea    ecx,[rdx+0x18]
   140005631:	call   0x140005ce8
   140005636:	mov    rdx,rax
   140005639:	test   rax,rax
   14000563c:	jne    0x140005645
   14000563e:	call   QWORD PTR [rip+0x1a14]        # 0x140007058
   140005644:	int3   
   140005645:	lea    rax,[rip+0x250c]        # 0x140007b58
   14000564c:	mov    QWORD PTR [rdx],rax
   14000564f:	mov    rax,QWORD PTR [rbx+0x8]
   140005653:	mov    QWORD PTR [rdx+0x8],rax
   140005657:	mov    rax,rdx
   14000565a:	add    rsp,0x20
   14000565e:	pop    rbx
   14000565f:	ret    
   140005660:	mov    QWORD PTR [rcx+0x18],rdx
   140005664:	ret    
   140005665:	int3   
   140005666:	int3   
   140005667:	int3   
   140005668:	int3   
   140005669:	int3   
   14000566a:	int3   
   14000566b:	int3   
   14000566c:	int3   
   14000566d:	int3   
   14000566e:	int3   
   14000566f:	int3   
   140005670:	lea    rax,[rip+0x5b41]        # 0x14000b1b8
   140005677:	ret    
   140005678:	int3   
   140005679:	int3   
   14000567a:	int3   
   14000567b:	int3   
   14000567c:	int3   
   14000567d:	int3   
   14000567e:	int3   
   14000567f:	int3   
   140005680:	rex push rbx
   140005682:	sub    rsp,0x20
   140005686:	mov    rbx,rcx
   140005689:	mov    rcx,QWORD PTR [rcx+0x18]
   14000568d:	test   rcx,rcx
   140005690:	je     0x1400056a6
   140005692:	mov    rax,QWORD PTR [rcx]
   140005695:	cmp    rcx,rbx
   140005698:	setne  dl
   14000569b:	call   QWORD PTR [rax+0x20]
   14000569e:	mov    QWORD PTR [rbx+0x18],0x0
   1400056a6:	add    rsp,0x20
   1400056aa:	pop    rbx
   1400056ab:	ret    
   1400056ac:	int3   
   1400056ad:	int3   
   1400056ae:	int3   
   1400056af:	int3   
   1400056b0:	sub    rsp,0x28
   1400056b4:	xor    eax,eax
   1400056b6:	test   rdx,rdx
   1400056b9:	je     0x1400056e3
   1400056bb:	movabs rax,0xaaaaaaaaaaaaaaa
   1400056c5:	cmp    rdx,rax
   1400056c8:	ja     0x1400056dc
   1400056ca:	lea    rcx,[rdx+rdx*2]
   1400056ce:	shl    rcx,0x3
   1400056d2:	call   0x140005ce8
   1400056d7:	test   rax,rax
   1400056da:	jne    0x1400056e3
   1400056dc:	call   QWORD PTR [rip+0x1976]        # 0x140007058
   1400056e2:	int3   
   1400056e3:	add    rsp,0x28
   1400056e7:	ret    
   1400056e8:	int3   
   1400056e9:	int3   
   1400056ea:	int3   
   1400056eb:	int3   
   1400056ec:	int3   
   1400056ed:	int3   
   1400056ee:	int3   
   1400056ef:	int3   
   1400056f0:	rex push rbx
   1400056f2:	sub    rsp,0x90
   1400056f9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005702:	mov    rbx,rcx
   140005705:	mov    rax,QWORD PTR [rcx]
   140005708:	call   QWORD PTR [rax+0x720]
   14000570e:	test   al,al
   140005710:	je     0x140005781
   140005712:	mov    rax,QWORD PTR [rbx]
   140005715:	mov    rcx,rbx
   140005718:	call   QWORD PTR [rax+0x80]
   14000571e:	mov    QWORD PTR [rsp+0x40],0xf
   140005727:	mov    QWORD PTR [rsp+0x38],0x0
   140005730:	mov    BYTE PTR [rsp+0x28],0x0
   140005735:	mov    r8d,0x15
   14000573b:	lea    rdx,[rip+0x2286]        # 0x1400079c8
   140005742:	lea    rcx,[rsp+0x28]
   140005747:	call   0x140003830
   14000574c:	nop
   14000574d:	mov    DWORD PTR [rsp+0xa0],0x2a
   140005758:	lea    r8,[rsp+0x28]
   14000575d:	lea    rdx,[rsp+0xa0]
   140005765:	lea    rcx,[rsp+0x48]
   14000576a:	call   0x140005bce
   14000576f:	lea    rdx,[rip+0x3cd2]        # 0x140009448
   140005776:	lea    rcx,[rsp+0x48]
   14000577b:	call   0x140005e30
   140005780:	nop
   140005781:	add    rsp,0x90
   140005788:	pop    rbx
   140005789:	ret    
   14000578a:	int3   
   14000578b:	int3   
   14000578c:	int3   
   14000578d:	int3   
   14000578e:	int3   
   14000578f:	int3   
   140005790:	mov    rcx,rdx
   140005793:	jmp    0x140005cee
   140005798:	int3   
   140005799:	int3   
   14000579a:	int3   
   14000579b:	int3   
   14000579c:	int3   
   14000579d:	int3   
   14000579e:	int3   
   14000579f:	int3   
   1400057a0:	mov    rax,rsp
   1400057a3:	mov    QWORD PTR [rax+0x18],r8
   1400057a7:	push   rbp
   1400057a8:	push   rdi
   1400057a9:	push   r14
   1400057ab:	lea    rbp,[rsp-0x80]
   1400057b0:	sub    rsp,0x180
   1400057b7:	mov    QWORD PTR [rbp-0x40],0xfffffffffffffffe
   1400057bf:	mov    QWORD PTR [rax+0x8],rbx
   1400057c3:	mov    QWORD PTR [rax+0x10],rsi
   1400057c7:	mov    rbx,r9
   1400057ca:	mov    rdi,r8
   1400057cd:	mov    rsi,rdx
   1400057d0:	mov    QWORD PTR [rsp+0x78],0xf
   1400057d9:	xor    r14d,r14d
   1400057dc:	mov    QWORD PTR [rsp+0x70],r14
   1400057e1:	mov    BYTE PTR [rsp+0x60],r14b
   1400057e6:	lea    r8d,[r14+0x7]
   1400057ea:	lea    rdx,[rip+0x22af]        # 0x140007aa0
   1400057f1:	lea    rcx,[rsp+0x60]
   1400057f6:	call   0x140003830
   1400057fb:	nop
   1400057fc:	mov    QWORD PTR [rsp+0x58],0xf
   140005805:	mov    QWORD PTR [rsp+0x50],r14
   14000580a:	mov    BYTE PTR [rsp+0x40],r14b
   14000580f:	lea    r8d,[r14+0x5]
   140005813:	lea    rdx,[rip+0x228e]        # 0x140007aa8
   14000581a:	lea    rcx,[rsp+0x40]
   14000581f:	call   0x140003830
   140005824:	nop
   140005825:	mov    QWORD PTR [rbp-0x68],0xf
   14000582d:	mov    QWORD PTR [rbp-0x70],r14
   140005831:	mov    BYTE PTR [rbp-0x80],r14b
   140005835:	lea    r8d,[r14+0x33]
   140005839:	lea    rdx,[rip+0x2270]        # 0x140007ab0
   140005840:	lea    rcx,[rbp-0x80]
   140005844:	call   0x140003830
   140005849:	nop
   14000584a:	mov    eax,0x1e0
   14000584f:	mov    ecx,0x226
   140005854:	mov    QWORD PTR [rsp+0x38],rbx
   140005859:	mov    WORD PTR [rsp+0x30],ax
   14000585e:	mov    WORD PTR [rsp+0x28],cx
   140005863:	lea    rax,[rsp+0x60]
   140005868:	mov    QWORD PTR [rsp+0x20],rax
   14000586d:	lea    r9,[rsp+0x40]
   140005872:	mov    r8,rdi
   140005875:	lea    rdx,[rbp-0x80]
   140005879:	lea    rcx,[rbp-0x30]
   14000587d:	call   0x140005bc8
   140005882:	nop
   140005883:	cmp    QWORD PTR [rbp-0x68],0x10
   140005888:	jb     0x140005893
   14000588a:	mov    rcx,QWORD PTR [rbp-0x80]
   14000588e:	call   0x140005cee
   140005893:	mov    QWORD PTR [rbp-0x68],0xf
   14000589b:	mov    QWORD PTR [rbp-0x70],r14
   14000589f:	mov    BYTE PTR [rbp-0x80],0x0
   1400058a3:	cmp    QWORD PTR [rsp+0x58],0x10
   1400058a9:	jb     0x1400058b5
   1400058ab:	mov    rcx,QWORD PTR [rsp+0x40]
   1400058b0:	call   0x140005cee
   1400058b5:	mov    QWORD PTR [rsp+0x58],0xf
   1400058be:	mov    QWORD PTR [rsp+0x50],r14
   1400058c3:	mov    BYTE PTR [rsp+0x40],0x0
   1400058c8:	cmp    QWORD PTR [rsp+0x78],0x10
   1400058ce:	jb     0x1400058da
   1400058d0:	mov    rcx,QWORD PTR [rsp+0x60]
   1400058d5:	call   0x140005cee
   1400058da:	mov    QWORD PTR [rsp+0x78],0xf
   1400058e3:	mov    QWORD PTR [rsp+0x70],r14
   1400058e8:	mov    BYTE PTR [rsp+0x60],0x0
   1400058ed:	lea    rcx,[rip+0x14c]        # 0x140005a40
   1400058f4:	test   rcx,rcx
   1400058f7:	jne    0x1400058ff
   1400058f9:	mov    QWORD PTR [rbp-0x48],r14
   1400058fd:	jmp    0x140005916
   1400058ff:	lea    rax,[rip+0x2252]        # 0x140007b58
   140005906:	mov    QWORD PTR [rbp-0x60],rax
   14000590a:	mov    QWORD PTR [rbp-0x58],rcx
   14000590e:	lea    rax,[rbp-0x60]
   140005912:	mov    QWORD PTR [rbp-0x48],rax
   140005916:	mov    rax,QWORD PTR [rsi]
   140005919:	lea    r9,[rbp-0x60]
   14000591d:	lea    r8,[rip+0x21c4]        # 0x140007ae8
   140005924:	lea    rdx,[rbp-0x30]
   140005928:	mov    rcx,rsi
   14000592b:	call   QWORD PTR [rax+0x10]
   14000592e:	mov    ebx,eax
   140005930:	lea    rcx,[rbp-0x30]
   140005934:	call   0x140005b80
   140005939:	nop
   14000593a:	cmp    QWORD PTR [rdi+0x18],0x10
   14000593f:	jb     0x140005949
   140005941:	mov    rcx,QWORD PTR [rdi]
   140005944:	call   0x140005cee
   140005949:	mov    QWORD PTR [rdi+0x18],0xf
   140005951:	mov    QWORD PTR [rdi+0x10],r14
   140005955:	mov    BYTE PTR [rdi],0x0
   140005958:	mov    eax,ebx
   14000595a:	lea    r11,[rsp+0x180]
   140005962:	mov    rbx,QWORD PTR [r11+0x20]
   140005966:	mov    rsi,QWORD PTR [r11+0x28]
   14000596a:	mov    rsp,r11
   14000596d:	pop    r14
   14000596f:	pop    rdi
   140005970:	pop    rbp
   140005971:	ret    
   140005972:	int3   
   140005973:	int3   
   140005974:	int3   
   140005975:	int3   
   140005976:	int3   
   140005977:	int3   
   140005978:	int3   
   140005979:	int3   
   14000597a:	int3   
   14000597b:	int3   
   14000597c:	int3   
   14000597d:	int3   
   14000597e:	int3   
   14000597f:	int3   
   140005980:	mov    rax,rsp
   140005983:	mov    QWORD PTR [rax+0x10],rdx
   140005987:	push   rdi
   140005988:	sub    rsp,0x70
   14000598c:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   140005994:	mov    QWORD PTR [rax+0x8],rbx
   140005998:	mov    QWORD PTR [rax+0x18],rsi
   14000599c:	mov    rbx,r8
   14000599f:	mov    rsi,rdx
   1400059a2:	mov    rdi,rcx
   1400059a5:	lea    rcx,[rax-0x30]
   1400059a9:	call   0x140005bb0
   1400059ae:	nop
   1400059af:	mov    QWORD PTR [rsp+0x40],0xf
   1400059b8:	mov    QWORD PTR [rsp+0x38],0x0
   1400059c1:	mov    BYTE PTR [rsp+0x28],0x0
   1400059c6:	or     r9,0xffffffffffffffff
   1400059ca:	xor    r8d,r8d
   1400059cd:	mov    rdx,rsi
   1400059d0:	lea    rcx,[rsp+0x28]
   1400059d5:	call   0x1400036e0
   1400059da:	mov    r9,rbx
   1400059dd:	lea    r8,[rsp+0x28]
   1400059e2:	lea    rdx,[rsp+0x48]
   1400059e7:	mov    rcx,rdi
   1400059ea:	call   0x1400057a0
   1400059ef:	mov    ebx,eax
   1400059f1:	lea    rcx,[rsp+0x48]
   1400059f6:	call   0x140005bb6
   1400059fb:	nop
   1400059fc:	cmp    QWORD PTR [rsi+0x18],0x10
   140005a01:	jb     0x140005a0b
   140005a03:	mov    rcx,QWORD PTR [rsi]
   140005a06:	call   0x140005cee
   140005a0b:	mov    QWORD PTR [rsi+0x18],0xf
   140005a13:	mov    QWORD PTR [rsi+0x10],0x0
   140005a1b:	mov    BYTE PTR [rsi],0x0
   140005a1e:	mov    eax,ebx
   140005a20:	lea    r11,[rsp+0x70]
   140005a25:	mov    rbx,QWORD PTR [r11+0x10]
   140005a29:	mov    rsi,QWORD PTR [r11+0x20]
   140005a2d:	mov    rsp,r11
   140005a30:	pop    rdi
   140005a31:	ret    
   140005a32:	int3   
   140005a33:	int3   
   140005a34:	int3   
   140005a35:	int3   
   140005a36:	int3   
   140005a37:	int3   
   140005a38:	int3   
   140005a39:	int3   
   140005a3a:	int3   
   140005a3b:	int3   
   140005a3c:	int3   
   140005a3d:	int3   
   140005a3e:	int3   
   140005a3f:	int3   
   140005a40:	mov    rax,rsp
   140005a43:	push   rdi
   140005a44:	sub    rsp,0x90
   140005a4b:	mov    QWORD PTR [rax-0x78],0xfffffffffffffffe
   140005a53:	mov    QWORD PTR [rax+0x10],rbx
   140005a57:	mov    QWORD PTR [rax+0x18],rsi
   140005a5b:	mov    rsi,rcx
   140005a5e:	test   rcx,rcx
   140005a61:	jne    0x140005abb
   140005a63:	mov    QWORD PTR [rax-0x58],0xf
   140005a6b:	mov    QWORD PTR [rax-0x60],rcx
   140005a6f:	mov    BYTE PTR [rax-0x70],cl
   140005a72:	lea    r8d,[rcx+0x33]
   140005a76:	lea    rdx,[rip+0x1f63]        # 0x1400079e0
   140005a7d:	lea    rcx,[rax-0x70]
   140005a81:	call   0x140003830
   140005a86:	nop
   140005a87:	mov    DWORD PTR [rsp+0xa0],0x2a
   140005a92:	lea    r8,[rsp+0x28]
   140005a97:	lea    rdx,[rsp+0xa0]
   140005a9f:	lea    rcx,[rsp+0x48]
   140005aa4:	call   0x140005bce
   140005aa9:	lea    rdx,[rip+0x3998]        # 0x140009448
   140005ab0:	lea    rcx,[rsp+0x48]
   140005ab5:	call   0x140005e30
   140005aba:	nop
   140005abb:	mov    rax,QWORD PTR [rcx]
   140005abe:	lea    rdx,[rip+0x1f53]        # 0x140007a18
   140005ac5:	call   QWORD PTR [rax+0x30]
   140005ac8:	mov    rdi,rax
   140005acb:	mov    rcx,rsi
   140005ace:	call   0x1400056f0
   140005ad3:	mov    r10,QWORD PTR [rsi]
   140005ad6:	lea    r9,[rip+0x1f63]        # 0x140007a40
   140005add:	lea    r8,[rip+0x1f64]        # 0x140007a48
   140005ae4:	mov    rdx,rdi
   140005ae7:	mov    rcx,rsi
   140005aea:	call   QWORD PTR [r10+0x388]
   140005af1:	mov    rbx,rax
   140005af4:	mov    rcx,rsi
   140005af7:	call   0x1400056f0
   140005afc:	mov    r8,rbx
   140005aff:	mov    rdx,rdi
   140005b02:	mov    rcx,rsi
   140005b05:	call   0x1400054f0
   140005b0a:	mov    rcx,rsi
   140005b0d:	call   0x1400056f0
   140005b12:	mov    rax,QWORD PTR [rsi]
   140005b15:	lea    rdx,[rip+0x1f44]        # 0x140007a60
   140005b1c:	mov    rcx,rsi
   140005b1f:	call   QWORD PTR [rax+0x30]
   140005b22:	mov    rdi,rax
   140005b25:	mov    rcx,rsi
   140005b28:	call   0x1400056f0
   140005b2d:	mov    r10,QWORD PTR [rsi]
   140005b30:	lea    r9,[rip+0x1f09]        # 0x140007a40
   140005b37:	lea    r8,[rip+0x1f4a]        # 0x140007a88
   140005b3e:	mov    rdx,rdi
   140005b41:	mov    rcx,rsi
   140005b44:	call   QWORD PTR [r10+0x388]
   140005b4b:	mov    rbx,rax
   140005b4e:	mov    rcx,rsi
   140005b51:	call   0x1400056f0
   140005b56:	mov    r8,rbx
   140005b59:	mov    rdx,rdi
   140005b5c:	mov    rcx,rsi
   140005b5f:	call   0x1400054f0
   140005b64:	mov    rcx,rsi
   140005b67:	lea    r11,[rsp+0x90]
   140005b6f:	mov    rbx,QWORD PTR [r11+0x18]
   140005b73:	mov    rsi,QWORD PTR [r11+0x20]
   140005b77:	mov    rsp,r11
   140005b7a:	pop    rdi
   140005b7b:	jmp    0x1400056f0
   140005b80:	jmp    QWORD PTR [rip+0x16aa]        # 0x140007230
   140005b86:	jmp    QWORD PTR [rip+0x162c]        # 0x1400071b8
   140005b8c:	jmp    QWORD PTR [rip+0x162e]        # 0x1400071c0
   140005b92:	jmp    QWORD PTR [rip+0x1630]        # 0x1400071c8
   140005b98:	jmp    QWORD PTR [rip+0x1632]        # 0x1400071d0
   140005b9e:	jmp    QWORD PTR [rip+0x1634]        # 0x1400071d8
   140005ba4:	jmp    QWORD PTR [rip+0x167e]        # 0x140007228
   140005baa:	jmp    QWORD PTR [rip+0x1670]        # 0x140007220
   140005bb0:	jmp    QWORD PTR [rip+0x1662]        # 0x140007218
   140005bb6:	jmp    QWORD PTR [rip+0x1654]        # 0x140007210
   140005bbc:	jmp    QWORD PTR [rip+0x1646]        # 0x140007208
   140005bc2:	jmp    QWORD PTR [rip+0x1638]        # 0x140007200
   140005bc8:	jmp    QWORD PTR [rip+0x162a]        # 0x1400071f8
   140005bce:	jmp    QWORD PTR [rip+0x161c]        # 0x1400071f0
   140005bd4:	jmp    QWORD PTR [rip+0x160e]        # 0x1400071e8
   140005bda:	jmp    QWORD PTR [rip+0x1600]        # 0x1400071e0
   140005be0:	jmp    QWORD PTR [rip+0x1662]        # 0x140007248
   140005be6:	jmp    QWORD PTR [rip+0x1654]        # 0x140007240
   140005bec:	jmp    QWORD PTR [rip+0x1666]        # 0x140007258
   140005bf2:	jmp    QWORD PTR [rip+0x15b0]        # 0x1400071a8
   140005bf8:	jmp    QWORD PTR [rip+0x15a2]        # 0x1400071a0
   140005bfe:	jmp    QWORD PTR [rip+0x1454]        # 0x140007058
   140005c04:	jmp    QWORD PTR [rip+0x1446]        # 0x140007050
   140005c0a:	jmp    QWORD PTR [rip+0x1438]        # 0x140007048
   140005c10:	jmp    QWORD PTR [rip+0x142a]        # 0x140007040
   140005c16:	jmp    QWORD PTR [rip+0x141c]        # 0x140007038
   140005c1c:	mov    rax,rsp
   140005c1f:	mov    QWORD PTR [rax+0x20],r9
   140005c23:	mov    DWORD PTR [rax+0x18],r8d
   140005c27:	mov    QWORD PTR [rax+0x10],rdx
   140005c2b:	push   rbx
   140005c2c:	push   rsi
   140005c2d:	push   rdi
   140005c2e:	push   r14
   140005c30:	sub    rsp,0x38
   140005c34:	mov    r14,r9
   140005c37:	movsxd rdi,r8d
   140005c3a:	mov    rsi,rdx
   140005c3d:	and    DWORD PTR [rax-0x38],0x0
   140005c41:	mov    rbx,rdi
   140005c44:	imul   rbx,rdx
   140005c48:	add    rbx,rcx
   140005c4b:	mov    QWORD PTR [rax+0x8],rbx
   140005c4f:	dec    edi
   140005c51:	mov    DWORD PTR [rsp+0x70],edi
   140005c55:	js     0x140005c67
   140005c57:	sub    rbx,rsi
   140005c5a:	mov    QWORD PTR [rsp+0x60],rbx
   140005c5f:	mov    rcx,rbx
   140005c62:	call   r14
   140005c65:	jmp    0x140005c4f
   140005c67:	mov    DWORD PTR [rsp+0x20],0x1
   140005c6f:	add    rsp,0x38
   140005c73:	pop    r14
   140005c75:	pop    rdi
   140005c76:	pop    rsi
   140005c77:	pop    rbx
   140005c78:	ret    
   140005c79:	int3   
   140005c7a:	int3   
   140005c7b:	int3   
   140005c7c:	sub    rsp,0x28
   140005c80:	mov    rax,QWORD PTR [rcx]
   140005c83:	cmp    DWORD PTR [rax],0xe06d7363
   140005c89:	je     0x140005c92
   140005c8b:	xor    eax,eax
   140005c8d:	add    rsp,0x28
   140005c91:	ret    
   140005c92:	call   0x1400061e6
   140005c97:	int3   
   140005c98:	mov    QWORD PTR [rsp+0x10],rbx
   140005c9d:	mov    DWORD PTR [rsp+0x18],r8d
   140005ca2:	mov    QWORD PTR [rsp+0x8],rcx
   140005ca7:	push   rsi
   140005ca8:	push   rdi
   140005ca9:	push   r14
   140005cab:	sub    rsp,0x40
   140005caf:	mov    rsi,r9
   140005cb2:	mov    edi,r8d
   140005cb5:	mov    r14,rdx
   140005cb8:	mov    rbx,rcx
   140005cbb:	dec    edi
   140005cbd:	mov    DWORD PTR [rsp+0x70],edi
   140005cc1:	js     0x140005cd2
   140005cc3:	sub    rbx,r14
   140005cc6:	mov    QWORD PTR [rsp+0x60],rbx
   140005ccb:	mov    rcx,rbx
   140005cce:	call   rsi
   140005cd0:	jmp    0x140005cbb
   140005cd2:	jmp    0x140005cd4
   140005cd4:	mov    rbx,QWORD PTR [rsp+0x68]
   140005cd9:	add    rsp,0x40
   140005cdd:	pop    r14
   140005cdf:	pop    rdi
   140005ce0:	pop    rsi
   140005ce1:	ret    
   140005ce2:	jmp    QWORD PTR [rip+0x1408]        # 0x1400070f0
   140005ce8:	jmp    QWORD PTR [rip+0x140a]        # 0x1400070f8
   140005cee:	jmp    QWORD PTR [rip+0x140c]        # 0x140007100
   140005cf4:	rex push rbx
   140005cf6:	sub    rsp,0x20
   140005cfa:	cmp    QWORD PTR [rip+0x5666],0x0        # 0x14000b368
   140005d02:	jne    0x140005d3a
   140005d04:	mov    edx,0x8
   140005d09:	lea    ecx,[rdx+0x18]
   140005d0c:	call   QWORD PTR [rip+0x147e]        # 0x140007190
   140005d12:	mov    rcx,rax
   140005d15:	mov    rbx,rax
   140005d18:	call   QWORD PTR [rip+0x130a]        # 0x140007028
   140005d1e:	mov    QWORD PTR [rip+0x5643],rax        # 0x14000b368
   140005d25:	mov    QWORD PTR [rip+0x5634],rax        # 0x14000b360
   140005d2c:	test   rbx,rbx
   140005d2f:	jne    0x140005d36
   140005d31:	lea    eax,[rbx+0x18]
   140005d34:	jmp    0x140005d3c
   140005d36:	and    QWORD PTR [rbx],0x0
   140005d3a:	xor    eax,eax
   140005d3c:	add    rsp,0x20
   140005d40:	pop    rbx
   140005d41:	ret    
   140005d42:	int3   
   140005d43:	int3   
   140005d44:	rex push rbx
   140005d46:	sub    rsp,0x20
   140005d4a:	mov    rbx,rcx
   140005d4d:	mov    rcx,QWORD PTR [rip+0x5614]        # 0x14000b368
   140005d54:	call   QWORD PTR [rip+0x12c6]        # 0x140007020
   140005d5a:	mov    QWORD PTR [rsp+0x38],rax
   140005d5f:	cmp    rax,0xffffffffffffffff
   140005d63:	jne    0x140005d70
   140005d65:	mov    rcx,rbx
   140005d68:	call   QWORD PTR [rip+0x134a]        # 0x1400070b8
   140005d6e:	jmp    0x140005dee
   140005d70:	mov    ecx,0x8
   140005d75:	call   0x1400061f2
   140005d7a:	nop
   140005d7b:	mov    rcx,QWORD PTR [rip+0x55e6]        # 0x14000b368
   140005d82:	call   QWORD PTR [rip+0x1298]        # 0x140007020
   140005d88:	mov    QWORD PTR [rsp+0x38],rax
   140005d8d:	mov    rcx,QWORD PTR [rip+0x55cc]        # 0x14000b360
   140005d94:	call   QWORD PTR [rip+0x1286]        # 0x140007020
   140005d9a:	mov    QWORD PTR [rsp+0x40],rax
   140005d9f:	mov    rcx,rbx
   140005da2:	call   QWORD PTR [rip+0x1280]        # 0x140007028
   140005da8:	mov    rcx,rax
   140005dab:	lea    r8,[rsp+0x40]
   140005db0:	lea    rdx,[rsp+0x38]
   140005db5:	call   0x140006204
   140005dba:	mov    rbx,rax
   140005dbd:	mov    rcx,QWORD PTR [rsp+0x38]
   140005dc2:	call   QWORD PTR [rip+0x1260]        # 0x140007028
   140005dc8:	mov    QWORD PTR [rip+0x5599],rax        # 0x14000b368
   140005dcf:	mov    rcx,QWORD PTR [rsp+0x40]
   140005dd4:	call   QWORD PTR [rip+0x124e]        # 0x140007028
   140005dda:	mov    QWORD PTR [rip+0x557f],rax        # 0x14000b360
   140005de1:	mov    ecx,0x8
   140005de6:	call   0x1400061f8
   140005deb:	mov    rax,rbx
   140005dee:	add    rsp,0x20
   140005df2:	pop    rbx
   140005df3:	ret    
   140005df4:	sub    rsp,0x28
   140005df8:	call   0x140005d44
   140005dfd:	neg    rax
   140005e00:	sbb    eax,eax
   140005e02:	neg    eax
   140005e04:	dec    eax
   140005e06:	add    rsp,0x28
   140005e0a:	ret    
   140005e0b:	int3   
   140005e0c:	jmp    QWORD PTR [rip+0x12f6]        # 0x140007108
   140005e12:	jmp    QWORD PTR [rip+0x12f8]        # 0x140007110
   140005e18:	jmp    QWORD PTR [rip+0x12fa]        # 0x140007118
   140005e1e:	jmp    QWORD PTR [rip+0x12fc]        # 0x140007120
   140005e24:	jmp    QWORD PTR [rip+0x12fe]        # 0x140007128
   140005e2a:	jmp    QWORD PTR [rip+0x1300]        # 0x140007130
   140005e30:	jmp    QWORD PTR [rip+0x1302]        # 0x140007138
   140005e36:	jmp    QWORD PTR [rip+0x1304]        # 0x140007140
   140005e3c:	jmp    QWORD PTR [rip+0x1306]        # 0x140007148
   140005e42:	jmp    QWORD PTR [rip+0x1308]        # 0x140007150
   140005e48:	lea    rax,[rip+0x1d81]        # 0x140007bd0
   140005e4f:	mov    QWORD PTR [rcx],rax
   140005e52:	mov    rax,rcx
   140005e55:	ret    
   140005e56:	int3   
   140005e57:	int3   
   140005e58:	mov    rax,rcx
   140005e5b:	ret    
   140005e5c:	mov    QWORD PTR [rsp+0x8],rbx
   140005e61:	mov    QWORD PTR [rsp+0x10],rsi
   140005e66:	push   rdi
   140005e67:	sub    rsp,0x20
   140005e6b:	mov    esi,edx
   140005e6d:	mov    rbx,rcx
   140005e70:	test   dl,0x2
   140005e73:	je     0x140005ea0
   140005e75:	lea    rdi,[rcx-0x8]
   140005e79:	lea    r9,[rip+0x614]        # 0x140006494
   140005e80:	mov    edx,0x18
   140005e85:	mov    r8d,DWORD PTR [rdi]
   140005e88:	call   0x140005c1c
   140005e8d:	test   sil,0x1
   140005e91:	je     0x140005e9b
   140005e93:	mov    rcx,rdi
   140005e96:	call   0x140005cee
   140005e9b:	mov    rax,rdi
   140005e9e:	jmp    0x140005eb6
   140005ea0:	call   0x140006494
   140005ea5:	test   sil,0x1
   140005ea9:	je     0x140005eb3
   140005eab:	mov    rcx,rbx
   140005eae:	call   0x140005cee
   140005eb3:	mov    rax,rbx
   140005eb6:	mov    rbx,QWORD PTR [rsp+0x30]
   140005ebb:	mov    rsi,QWORD PTR [rsp+0x38]
   140005ec0:	add    rsp,0x20
   140005ec4:	pop    rdi
   140005ec5:	ret    
   140005ec6:	jmp    QWORD PTR [rip+0x128c]        # 0x140007158
   140005ecc:	jmp    QWORD PTR [rip+0x128e]        # 0x140007160
   140005ed2:	jmp    QWORD PTR [rip+0x1290]        # 0x140007168
   140005ed8:	sub    rsp,0x28
   140005edc:	mov    eax,0x5a4d
   140005ee1:	cmp    WORD PTR [rip+0xffffffffffffa118],ax        # 0x140000000
   140005ee8:	je     0x140005eee
   140005eea:	xor    ecx,ecx
   140005eec:	jmp    0x140005f26
   140005eee:	movsxd rax,DWORD PTR [rip+0xffffffffffffa147]        # 0x14000003c
   140005ef5:	lea    rcx,[rip+0xffffffffffffa104]        # 0x140000000
   140005efc:	add    rax,rcx
   140005eff:	cmp    DWORD PTR [rax],0x4550
   140005f05:	jne    0x140005eea
   140005f07:	mov    ecx,0x20b
   140005f0c:	cmp    WORD PTR [rax+0x18],cx
   140005f10:	jne    0x140005eea
   140005f12:	xor    ecx,ecx
   140005f14:	cmp    DWORD PTR [rax+0x84],0xe
   140005f1b:	jbe    0x140005f26
   140005f1d:	cmp    DWORD PTR [rax+0xf8],ecx
   140005f23:	setne  cl
   140005f26:	mov    DWORD PTR [rip+0x53ec],ecx        # 0x14000b318
   140005f2c:	mov    ecx,0x1
   140005f31:	call   QWORD PTR [rip+0x1161]        # 0x140007098
   140005f37:	or     rcx,0xffffffffffffffff
   140005f3b:	call   QWORD PTR [rip+0x10e7]        # 0x140007028
   140005f41:	mov    rcx,QWORD PTR [rip+0x1180]        # 0x1400070c8
   140005f48:	mov    QWORD PTR [rip+0x5411],rax        # 0x14000b360
   140005f4f:	mov    QWORD PTR [rip+0x5412],rax        # 0x14000b368
   140005f56:	mov    eax,DWORD PTR [rip+0x53e8]        # 0x14000b344
   140005f5c:	mov    DWORD PTR [rcx],eax
   140005f5e:	mov    rdx,QWORD PTR [rip+0x116b]        # 0x1400070d0
   140005f65:	mov    eax,DWORD PTR [rip+0x53cd]        # 0x14000b338
   140005f6b:	mov    DWORD PTR [rdx],eax
   140005f6d:	call   0x14000640c
   140005f72:	call   0x140006268
   140005f77:	cmp    DWORD PTR [rip+0x50b6],0x0        # 0x14000b034
   140005f7e:	jne    0x140005f8d
   140005f80:	lea    rcx,[rip+0x481]        # 0x140006408
   140005f87:	call   QWORD PTR [rip+0x115b]        # 0x1400070e8
   140005f8d:	cmp    DWORD PTR [rip+0x50a4],0xffffffff        # 0x14000b038
   140005f94:	jne    0x140005f9f
   140005f96:	or     ecx,0xffffffff
   140005f99:	call   QWORD PTR [rip+0x10e1]        # 0x140007080
   140005f9f:	xor    eax,eax
   140005fa1:	add    rsp,0x28
   140005fa5:	ret    
   140005fa6:	int3   
   140005fa7:	int3   
   140005fa8:	sub    rsp,0x38
   140005fac:	lea    rcx,[rip+0x491]        # 0x140006444
   140005fb3:	call   0x140005df4
   140005fb8:	mov    eax,DWORD PTR [rip+0x5382]        # 0x14000b340
   140005fbe:	mov    r9d,DWORD PTR [rip+0x5377]        # 0x14000b33c
   140005fc5:	mov    DWORD PTR [rip+0x5369],eax        # 0x14000b334
   140005fcb:	lea    rax,[rip+0x5362]        # 0x14000b334
   140005fd2:	lea    r8,[rip+0x534f]        # 0x14000b328
   140005fd9:	lea    rdx,[rip+0x5340]        # 0x14000b320
   140005fe0:	lea    rcx,[rip+0x5335]        # 0x14000b31c
   140005fe7:	mov    QWORD PTR [rsp+0x20],rax
   140005fec:	call   QWORD PTR [rip+0x10ae]        # 0x1400070a0
   140005ff2:	mov    DWORD PTR [rip+0x5338],eax        # 0x14000b330
   140005ff8:	test   eax,eax
   140005ffa:	jns    0x140006006
   140005ffc:	mov    ecx,0x8
   140006001:	call   0x140006262
   140006006:	add    rsp,0x38
   14000600a:	ret    
   14000600b:	int3   
   14000600c:	mov    rax,QWORD PTR gs:0x30
   140006015:	ret    
   140006016:	int3   
   140006017:	int3   
   140006018:	rex push rdi
   14000601a:	sub    rsp,0x20
   14000601e:	mov    rax,QWORD PTR gs:0x30
   140006027:	mov    rcx,QWORD PTR [rax+0x8]
   14000602b:	xor    edi,edi
   14000602d:	xor    eax,eax
   14000602f:	lock cmpxchg QWORD PTR [rip+0x5310],rcx        # 0x14000b348
   140006038:	je     0x140006048
   14000603a:	cmp    rax,rcx
   14000603d:	jne    0x140006046
   14000603f:	mov    edi,0x1
   140006044:	jmp    0x140006048
   140006046:	jmp    0x14000602d
   140006048:	mov    eax,DWORD PTR [rip+0x5302]        # 0x14000b350
   14000604e:	cmp    eax,0x1
   140006051:	jne    0x14000605d
   140006053:	lea    ecx,[rax+0x1e]
   140006056:	call   0x140006262
   14000605b:	jmp    0x14000609c
   14000605d:	mov    eax,DWORD PTR [rip+0x52ed]        # 0x14000b350
   140006063:	test   eax,eax
   140006065:	jne    0x140006092
   140006067:	mov    DWORD PTR [rip+0x52df],0x1        # 0x14000b350
   140006071:	lea    rdx,[rip+0x1258]        # 0x1400072d0
   140006078:	lea    rcx,[rip+0x1231]        # 0x1400072b0
   14000607f:	call   0x140006488
   140006084:	test   eax,eax
   140006086:	je     0x14000609c
   140006088:	mov    eax,0xff
   14000608d:	jmp    0x140006182
   140006092:	mov    DWORD PTR [rip+0x5274],0x1        # 0x14000b310
   14000609c:	mov    eax,DWORD PTR [rip+0x52ae]        # 0x14000b350
   1400060a2:	cmp    eax,0x1
   1400060a5:	jne    0x1400060c4
   1400060a7:	lea    rdx,[rip+0x11fa]        # 0x1400072a8
   1400060ae:	lea    rcx,[rip+0x11b3]        # 0x140007268
   1400060b5:	call   0x14000648e
   1400060ba:	mov    DWORD PTR [rip+0x528c],0x2        # 0x14000b350
   1400060c4:	test   edi,edi
   1400060c6:	jne    0x1400060d1
   1400060c8:	xor    eax,eax
   1400060ca:	xchg   QWORD PTR [rip+0x5277],rax        # 0x14000b348
   1400060d1:	cmp    QWORD PTR [rip+0x527f],0x0        # 0x14000b358
   1400060d9:	je     0x1400060fd
   1400060db:	lea    rcx,[rip+0x5276]        # 0x14000b358
   1400060e2:	call   0x1400062d0
   1400060e7:	test   eax,eax
   1400060e9:	je     0x1400060fd
   1400060eb:	xor    r8d,r8d
   1400060ee:	lea    edx,[r8+0x2]
   1400060f2:	xor    ecx,ecx
   1400060f4:	mov    rax,QWORD PTR [rip+0x525d]        # 0x14000b358
   1400060fb:	call   rax
   1400060fd:	mov    rcx,QWORD PTR [rip+0x5224]        # 0x14000b328
   140006104:	mov    rax,QWORD PTR [rip+0xf6d]        # 0x140007078
   14000610b:	mov    QWORD PTR [rax],rcx
   14000610e:	mov    r8,QWORD PTR [rip+0x5213]        # 0x14000b328
   140006115:	mov    rdx,QWORD PTR [rip+0x5204]        # 0x14000b320
   14000611c:	mov    ecx,DWORD PTR [rip+0x51fa]        # 0x14000b31c
   140006122:	call   0x140004a90
   140006127:	mov    DWORD PTR [rip+0x51e7],eax        # 0x14000b314
   14000612d:	cmp    DWORD PTR [rip+0x51e4],0x0        # 0x14000b318
   140006134:	jne    0x14000613e
   140006136:	mov    ecx,eax
   140006138:	call   QWORD PTR [rip+0xfe2]        # 0x140007120
   14000613e:	cmp    DWORD PTR [rip+0x51cb],0x0        # 0x14000b310
   140006145:	jne    0x140006153
   140006147:	call   QWORD PTR [rip+0xf3b]        # 0x140007088
   14000614d:	mov    eax,DWORD PTR [rip+0x51c1]        # 0x14000b314
   140006153:	jmp    0x140006182
   140006155:	mov    DWORD PTR [rip+0x51b9],eax        # 0x14000b314
   14000615b:	cmp    DWORD PTR [rip+0x51b6],0x0        # 0x14000b318
   140006162:	jne    0x14000616d
   140006164:	mov    ecx,eax
   140006166:	call   QWORD PTR [rip+0xf24]        # 0x140007090
   14000616c:	int3   
   14000616d:	cmp    DWORD PTR [rip+0x519c],0x0        # 0x14000b310
   140006174:	jne    0x140006182
   140006176:	call   QWORD PTR [rip+0xf0c]        # 0x140007088
   14000617c:	mov    eax,DWORD PTR [rip+0x5192]        # 0x14000b314
   140006182:	add    rsp,0x20
   140006186:	pop    rdi
   140006187:	ret    
   140006188:	mov    eax,0x5a4d
   14000618d:	cmp    WORD PTR [rip+0xffffffffffff9e6c],ax        # 0x140000000
   140006194:	je     0x140006199
   140006196:	xor    eax,eax
   140006198:	ret    
   140006199:	movsxd rcx,DWORD PTR [rip+0xffffffffffff9e9c]        # 0x14000003c
   1400061a0:	lea    rax,[rip+0xffffffffffff9e59]        # 0x140000000
   1400061a7:	add    rcx,rax
   1400061aa:	cmp    DWORD PTR [rcx],0x4550
   1400061b0:	jne    0x140006196
   1400061b2:	mov    eax,0x20b
   1400061b7:	cmp    WORD PTR [rcx+0x18],ax
   1400061bb:	jne    0x140006196
   1400061bd:	xor    eax,eax
   1400061bf:	cmp    DWORD PTR [rcx+0x84],0xe
   1400061c6:	jbe    0x1400061d1
   1400061c8:	cmp    DWORD PTR [rcx+0xf8],eax
   1400061ce:	setne  al
   1400061d1:	ret    
   1400061d2:	int3   
   1400061d3:	int3   
   1400061d4:	sub    rsp,0x28
   1400061d8:	call   0x14000635c
   1400061dd:	add    rsp,0x28
   1400061e1:	jmp    0x140006018
   1400061e6:	jmp    QWORD PTR [rip+0xf84]        # 0x140007170
   1400061ec:	jmp    QWORD PTR [rip+0xf86]        # 0x140007178
   1400061f2:	jmp    QWORD PTR [rip+0xf88]        # 0x140007180
   1400061f8:	jmp    QWORD PTR [rip+0xf8a]        # 0x140007188
   1400061fe:	jmp    QWORD PTR [rip+0xf8c]        # 0x140007190
   140006204:	jmp    QWORD PTR [rip+0xeb6]        # 0x1400070c0
   14000620a:	int3   
   14000620b:	int3   
   14000620c:	sub    rsp,0x28
   140006210:	mov    rax,QWORD PTR [rcx]
   140006213:	cmp    DWORD PTR [rax],0xe06d7363
   140006219:	jne    0x140006237
   14000621b:	cmp    DWORD PTR [rax+0x18],0x4
   14000621f:	jne    0x140006237
   140006221:	mov    ecx,DWORD PTR [rax+0x20]
   140006224:	lea    eax,[rcx-0x19930520]
   14000622a:	cmp    eax,0x2
   14000622d:	jbe    0x14000623e
   14000622f:	cmp    ecx,0x1994000
   140006235:	je     0x14000623e
   140006237:	xor    eax,eax
   140006239:	add    rsp,0x28
   14000623d:	ret    
   14000623e:	call   0x1400061e6
   140006243:	int3   
   140006244:	sub    rsp,0x28
   140006248:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x14000620c
   14000624f:	call   0x14000649a
   140006254:	xor    eax,eax
   140006256:	add    rsp,0x28
   14000625a:	ret    
   14000625b:	int3   
   14000625c:	jmp    QWORD PTR [rip+0xe4e]        # 0x1400070b0
   140006262:	jmp    QWORD PTR [rip+0xe40]        # 0x1400070a8
   140006268:	xor    eax,eax
   14000626a:	ret    
   14000626b:	int3   
   14000626c:	jmp    QWORD PTR [rip+0xe2e]        # 0x1400070a0
   140006272:	jmp    QWORD PTR [rip+0xe20]        # 0x140007098
   140006278:	int3   
   140006279:	int3   
   14000627a:	int3   
   14000627b:	int3   
   14000627c:	int3   
   14000627d:	int3   
   14000627e:	int3   
   14000627f:	int3   
   140006280:	movsxd r8,DWORD PTR [rcx+0x3c]
   140006284:	xor    r9d,r9d
   140006287:	mov    r10,rdx
   14000628a:	add    r8,rcx
   14000628d:	movzx  eax,WORD PTR [r8+0x14]
   140006292:	movzx  r11d,WORD PTR [r8+0x6]
   140006297:	add    rax,0x18
   14000629b:	add    rax,r8
   14000629e:	test   r11d,r11d
   1400062a1:	je     0x1400062c1
   1400062a3:	mov    edx,DWORD PTR [rax+0xc]
   1400062a6:	cmp    r10,rdx
   1400062a9:	jb     0x1400062b5
   1400062ab:	mov    ecx,DWORD PTR [rax+0x8]
   1400062ae:	add    ecx,edx
   1400062b0:	cmp    r10,rcx
   1400062b3:	jb     0x1400062c3
   1400062b5:	inc    r9d
   1400062b8:	add    rax,0x28
   1400062bc:	cmp    r9d,r11d
   1400062bf:	jb     0x1400062a3
   1400062c1:	xor    eax,eax
   1400062c3:	ret    
   1400062c4:	int3   
   1400062c5:	int3   
   1400062c6:	int3   
   1400062c7:	int3   
   1400062c8:	int3   
   1400062c9:	int3   
   1400062ca:	int3   
   1400062cb:	int3   
   1400062cc:	int3   
   1400062cd:	int3   
   1400062ce:	int3   
   1400062cf:	int3   
   1400062d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400062d5:	push   rdi
   1400062d6:	sub    rsp,0x20
   1400062da:	mov    rbx,rcx
   1400062dd:	lea    rdi,[rip+0xffffffffffff9d1c]        # 0x140000000
   1400062e4:	mov    rcx,rdi
   1400062e7:	call   0x140006320
   1400062ec:	test   eax,eax
   1400062ee:	je     0x140006312
   1400062f0:	sub    rbx,rdi
   1400062f3:	mov    rdx,rbx
   1400062f6:	mov    rcx,rdi
   1400062f9:	call   0x140006280
   1400062fe:	test   rax,rax
   140006301:	je     0x140006312
   140006303:	mov    eax,DWORD PTR [rax+0x24]
   140006306:	shr    eax,0x1f
   140006309:	not    eax
   14000630b:	and    eax,0x1
   14000630e:	jmp    0x140006312
   140006310:	xor    eax,eax
   140006312:	mov    rbx,QWORD PTR [rsp+0x30]
   140006317:	add    rsp,0x20
   14000631b:	pop    rdi
   14000631c:	ret    
   14000631d:	int3   
   14000631e:	int3   
   14000631f:	int3   
   140006320:	mov    rax,rcx
   140006323:	mov    ecx,0x5a4d
   140006328:	cmp    WORD PTR [rax],cx
   14000632b:	je     0x140006330
   14000632d:	xor    eax,eax
   14000632f:	ret    
   140006330:	movsxd rcx,DWORD PTR [rax+0x3c]
   140006334:	add    rcx,rax
   140006337:	xor    eax,eax
   140006339:	cmp    DWORD PTR [rcx],0x4550
   14000633f:	jne    0x14000634d
   140006341:	mov    edx,0x20b
   140006346:	cmp    WORD PTR [rcx+0x18],dx
   14000634a:	sete   al
   14000634d:	ret    
   14000634e:	jmp    QWORD PTR [rip+0xd3c]        # 0x140007090
   140006354:	jmp    QWORD PTR [rip+0xd2e]        # 0x140007088
   14000635a:	int3   
   14000635b:	int3   
   14000635c:	mov    QWORD PTR [rsp+0x20],rbx
   140006361:	push   rbp
   140006362:	mov    rbp,rsp
   140006365:	sub    rsp,0x20
   140006369:	mov    rax,QWORD PTR [rip+0x4cd0]        # 0x14000b040
   140006370:	and    QWORD PTR [rbp+0x18],0x0
   140006375:	movabs rbx,0x2b992ddfa232
   14000637f:	cmp    rax,rbx
   140006382:	jne    0x1400063f3
   140006384:	lea    rcx,[rbp+0x18]
   140006388:	call   QWORD PTR [rip+0xc72]        # 0x140007000
   14000638e:	mov    rax,QWORD PTR [rbp+0x18]
   140006392:	mov    QWORD PTR [rbp+0x10],rax
   140006396:	call   QWORD PTR [rip+0xc6c]        # 0x140007008
   14000639c:	mov    eax,eax
   14000639e:	xor    QWORD PTR [rbp+0x10],rax
   1400063a2:	call   QWORD PTR [rip+0xc68]        # 0x140007010
   1400063a8:	lea    rcx,[rbp+0x20]
   1400063ac:	mov    eax,eax
   1400063ae:	xor    QWORD PTR [rbp+0x10],rax
   1400063b2:	call   QWORD PTR [rip+0xc60]        # 0x140007018
   1400063b8:	mov    eax,DWORD PTR [rbp+0x20]
   1400063bb:	shl    rax,0x20
   1400063bf:	lea    rcx,[rbp+0x10]
   1400063c3:	xor    rax,QWORD PTR [rbp+0x20]
   1400063c7:	xor    rax,QWORD PTR [rbp+0x10]
   1400063cb:	xor    rax,rcx
   1400063ce:	movabs rcx,0xffffffffffff
   1400063d8:	and    rax,rcx
   1400063db:	movabs rcx,0x2b992ddfa233
   1400063e5:	cmp    rax,rbx
   1400063e8:	cmove  rax,rcx
   1400063ec:	mov    QWORD PTR [rip+0x4c4d],rax        # 0x14000b040
   1400063f3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400063f8:	not    rax
   1400063fb:	mov    QWORD PTR [rip+0x4c46],rax        # 0x14000b048
   140006402:	add    rsp,0x20
   140006406:	pop    rbp
   140006407:	ret    
   140006408:	xor    eax,eax
   14000640a:	ret    
   14000640b:	int3   
   14000640c:	mov    QWORD PTR [rsp+0x8],rbx
   140006411:	push   rdi
   140006412:	sub    rsp,0x20
   140006416:	lea    rbx,[rip+0x1d5b]        # 0x140008178
   14000641d:	lea    rdi,[rip+0x1d54]        # 0x140008178
   140006424:	jmp    0x140006434
   140006426:	mov    rax,QWORD PTR [rbx]
   140006429:	test   rax,rax
   14000642c:	je     0x140006430
   14000642e:	call   rax
   140006430:	add    rbx,0x8
   140006434:	cmp    rbx,rdi
   140006437:	jb     0x140006426
   140006439:	mov    rbx,QWORD PTR [rsp+0x30]
   14000643e:	add    rsp,0x20
   140006442:	pop    rdi
   140006443:	ret    
   140006444:	mov    QWORD PTR [rsp+0x8],rbx
   140006449:	push   rdi
   14000644a:	sub    rsp,0x20
   14000644e:	lea    rbx,[rip+0x1d33]        # 0x140008188
   140006455:	lea    rdi,[rip+0x1d2c]        # 0x140008188
   14000645c:	jmp    0x14000646c
   14000645e:	mov    rax,QWORD PTR [rbx]
   140006461:	test   rax,rax
   140006464:	je     0x140006468
   140006466:	call   rax
   140006468:	add    rbx,0x8
   14000646c:	cmp    rbx,rdi
   14000646f:	jb     0x14000645e
   140006471:	mov    rbx,QWORD PTR [rsp+0x30]
   140006476:	add    rsp,0x20
   14000647a:	pop    rdi
   14000647b:	ret    
   14000647c:	jmp    QWORD PTR [rip+0xbfe]        # 0x140007080
   140006482:	jmp    QWORD PTR [rip+0xc60]        # 0x1400070e8
   140006488:	jmp    QWORD PTR [rip+0xbe2]        # 0x140007070
   14000648e:	jmp    QWORD PTR [rip+0xbd4]        # 0x140007068
   140006494:	jmp    QWORD PTR [rip+0xc3e]        # 0x1400070d8
   14000649a:	jmp    QWORD PTR [rip+0xc40]        # 0x1400070e0
   1400064a0:	jmp    QWORD PTR [rip+0xb82]        # 0x140007028
   1400064a6:	jmp    QWORD PTR [rip+0xb74]        # 0x140007020
   1400064ac:	jmp    QWORD PTR [rip+0xb66]        # 0x140007018
   1400064b2:	jmp    QWORD PTR [rip+0xb58]        # 0x140007010
   1400064b8:	jmp    QWORD PTR [rip+0xb4a]        # 0x140007008
   1400064be:	jmp    QWORD PTR [rip+0xb3c]        # 0x140007000
   1400064c4:	int3   
   1400064c5:	int3   
   1400064c6:	int3   
   1400064c7:	int3   
   1400064c8:	int3   
   1400064c9:	int3   
   1400064ca:	int3   
   1400064cb:	int3   
   1400064cc:	int3   
   1400064cd:	int3   
   1400064ce:	int3   
   1400064cf:	int3   
   1400064d0:	rex push rbp
   1400064d2:	sub    rsp,0x20
   1400064d6:	mov    rbp,rdx
   1400064d9:	mov    rdx,QWORD PTR [rbp+0x58]
   1400064dd:	mov    rcx,QWORD PTR [rbp+0x28]
   1400064e1:	call   0x140002360
   1400064e6:	add    rsp,0x20
   1400064ea:	pop    rbp
   1400064eb:	ret    
   1400064ec:	mov    QWORD PTR [rsp+0x10],rdx
   1400064f1:	push   rbp
   1400064f2:	sub    rsp,0x20
   1400064f6:	mov    rbp,rdx
   1400064f9:	mov    rcx,QWORD PTR [rbp+0x50]
   1400064fd:	call   0x140005cee
   140006502:	xor    edx,edx
   140006504:	xor    ecx,ecx
   140006506:	call   0x140005e30
   14000650b:	nop
   14000650c:	int3   
   14000650d:	int3   
   14000650e:	int3   
   14000650f:	int3   
   140006510:	rex push rbp
   140006512:	sub    rsp,0x20
   140006516:	mov    rbp,rdx
   140006519:	mov    rdx,QWORD PTR [rbp+0x28]
   14000651d:	mov    rcx,QWORD PTR [rbp+0x30]
   140006521:	call   0x140002360
   140006526:	add    rsp,0x20
   14000652a:	pop    rbp
   14000652b:	ret    
   14000652c:	mov    QWORD PTR [rsp+0x10],rdx
   140006531:	push   rbp
   140006532:	sub    rsp,0x20
   140006536:	mov    rbp,rdx
   140006539:	mov    rcx,QWORD PTR [rbp+0x68]
   14000653d:	call   0x140005cee
   140006542:	xor    edx,edx
   140006544:	xor    ecx,ecx
   140006546:	call   0x140005e30
   14000654b:	nop
   14000654c:	int3   
   14000654d:	int3   
   14000654e:	int3   
   14000654f:	int3   
   140006550:	mov    QWORD PTR [rsp+0x10],rdx
   140006555:	push   rbp
   140006556:	sub    rsp,0x20
   14000655a:	mov    rbp,rdx
   14000655d:	mov    rdx,QWORD PTR [rbp+0x20]
   140006561:	mov    rcx,QWORD PTR [rbp+0x50]
   140006565:	call   0x140002e00
   14000656a:	xor    edx,edx
   14000656c:	xor    ecx,ecx
   14000656e:	call   0x140005e30
   140006573:	nop
   140006574:	int3   
   140006575:	int3   
   140006576:	int3   
   140006577:	int3   
   140006578:	int3   
   140006579:	int3   
   14000657a:	int3   
   14000657b:	int3   
   14000657c:	int3   
   14000657d:	int3   
   14000657e:	int3   
   14000657f:	int3   
   140006580:	mov    QWORD PTR [rsp+0x10],rdx
   140006585:	push   rbp
   140006586:	sub    rsp,0x20
   14000658a:	mov    rbp,rdx
   14000658d:	mov    rdx,QWORD PTR [rbp+0x20]
   140006591:	mov    rcx,QWORD PTR [rbp+0x50]
   140006595:	call   0x140002e00
   14000659a:	xor    edx,edx
   14000659c:	xor    ecx,ecx
   14000659e:	call   0x140005e30
   1400065a3:	nop
   1400065a4:	int3   
   1400065a5:	int3   
   1400065a6:	int3   
   1400065a7:	int3   
   1400065a8:	int3   
   1400065a9:	int3   
   1400065aa:	int3   
   1400065ab:	int3   
   1400065ac:	int3   
   1400065ad:	int3   
   1400065ae:	int3   
   1400065af:	int3   
   1400065b0:	rex push rbp
   1400065b2:	sub    rsp,0x20
   1400065b6:	mov    rbp,rdx
   1400065b9:	mov    rdx,QWORD PTR [rbp+0x48]
   1400065bd:	mov    rcx,QWORD PTR [rbp+0x58]
   1400065c1:	call   0x140002360
   1400065c6:	add    rsp,0x20
   1400065ca:	pop    rbp
   1400065cb:	ret    
   1400065cc:	int3   
   1400065cd:	int3   
   1400065ce:	int3   
   1400065cf:	int3   
   1400065d0:	rex push rbp
   1400065d2:	sub    rsp,0x20
   1400065d6:	mov    rbp,rdx
   1400065d9:	mov    rdx,QWORD PTR [rbp+0x48]
   1400065dd:	mov    rcx,QWORD PTR [rbp+0x58]
   1400065e1:	call   0x140002360
   1400065e6:	add    rsp,0x20
   1400065ea:	pop    rbp
   1400065eb:	ret    
   1400065ec:	int3   
   1400065ed:	int3   
   1400065ee:	int3   
   1400065ef:	int3   
   1400065f0:	rex push rbp
   1400065f2:	sub    rsp,0x20
   1400065f6:	mov    rbp,rdx
   1400065f9:	mov    rdx,QWORD PTR [rbp+0x48]
   1400065fd:	mov    rcx,QWORD PTR [rbp+0x58]
   140006601:	call   0x140002360
   140006606:	add    rsp,0x20
   14000660a:	pop    rbp
   14000660b:	ret    
   14000660c:	int3   
   14000660d:	int3   
   14000660e:	int3   
   14000660f:	int3   
   140006610:	rex push rbp
   140006612:	sub    rsp,0x20
   140006616:	mov    rbp,rdx
   140006619:	mov    rdx,QWORD PTR [rbp+0x48]
   14000661d:	mov    rcx,QWORD PTR [rbp+0x28]
   140006621:	call   0x140002360
   140006626:	add    rsp,0x20
   14000662a:	pop    rbp
   14000662b:	ret    
   14000662c:	int3   
   14000662d:	int3   
   14000662e:	int3   
   14000662f:	int3   
   140006630:	rex push rbp
   140006632:	sub    rsp,0x20
   140006636:	mov    rbp,rdx
   140006639:	mov    rdx,QWORD PTR [rbp+0x48]
   14000663d:	mov    rcx,QWORD PTR [rbp+0x28]
   140006641:	call   0x140002360
   140006646:	add    rsp,0x20
   14000664a:	pop    rbp
   14000664b:	ret    
   14000664c:	int3   
   14000664d:	int3   
   14000664e:	int3   
   14000664f:	int3   
   140006650:	rex push rbp
   140006652:	sub    rsp,0x20
   140006656:	mov    rbp,rdx
   140006659:	mov    rdx,QWORD PTR [rbp+0x48]
   14000665d:	mov    rcx,QWORD PTR [rbp+0x28]
   140006661:	call   0x140002360
   140006666:	add    rsp,0x20
   14000666a:	pop    rbp
   14000666b:	ret    
   14000666c:	int3   
   14000666d:	int3   
   14000666e:	int3   
   14000666f:	int3   
   140006670:	mov    rcx,QWORD PTR [rdx+0x40]
   140006677:	jmp    0x140002200
   14000667c:	mov    QWORD PTR [rsp+0x10],rdx
   140006681:	push   rbp
   140006682:	sub    rsp,0x20
   140006686:	mov    rbp,rdx
   140006689:	mov    rcx,QWORD PTR [rbp+0x40]
   14000668d:	mov    r8,QWORD PTR [rcx]
   140006690:	mov    r9,r8
   140006693:	mov    r8,QWORD PTR [r8]
   140006696:	lea    rdx,[rbp+0x58]
   14000669a:	call   0x140003f90
   14000669f:	xor    edx,edx
   1400066a1:	xor    ecx,ecx
   1400066a3:	call   0x140005e30
   1400066a8:	nop
   1400066a9:	int3   
   1400066aa:	int3   
   1400066ab:	int3   
   1400066ac:	int3   
   1400066ad:	int3   
   1400066ae:	int3   
   1400066af:	int3   
   1400066b0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400066b7:	jmp    0x140002210
   1400066bc:	int3   
   1400066bd:	int3   
   1400066be:	int3   
   1400066bf:	int3   
   1400066c0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400066c7:	add    rcx,0x8
   1400066cb:	jmp    0x140002210
   1400066d0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400066d7:	add    rcx,0x28
   1400066db:	jmp    0x140002210
   1400066e0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400066e7:	add    rcx,0x48
   1400066eb:	jmp    0x140002210
   1400066f0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400066f7:	add    rcx,0x68
   1400066fb:	jmp    0x140002210
   140006700:	mov    QWORD PTR [rsp+0x10],rdx
   140006705:	push   rbp
   140006706:	sub    rsp,0x20
   14000670a:	mov    rbp,rdx
   14000670d:	mov    rcx,QWORD PTR [rbp+0x48]
   140006711:	call   0x140005cee
   140006716:	xor    edx,edx
   140006718:	xor    ecx,ecx
   14000671a:	call   0x140005e30
   14000671f:	nop
   140006720:	mov    QWORD PTR [rsp+0x10],rdx
   140006725:	push   rbp
   140006726:	sub    rsp,0x20
   14000672a:	mov    rbp,rdx
   14000672d:	mov    rcx,QWORD PTR [rbp+0x48]
   140006731:	call   0x140005cee
   140006736:	xor    edx,edx
   140006738:	xor    ecx,ecx
   14000673a:	call   0x140005e30
   14000673f:	nop
   140006740:	mov    QWORD PTR [rsp+0x10],rdx
   140006745:	push   rbp
   140006746:	sub    rsp,0x20
   14000674a:	mov    rbp,rdx
   14000674d:	mov    rcx,QWORD PTR [rbp+0x68]
   140006751:	mov    QWORD PTR [rbp+0x68],rcx
   140006755:	xor    eax,eax
   140006757:	inc    rcx
   14000675a:	je     0x140006772
   14000675c:	cmp    rcx,0xffffffffffffffff
   140006760:	ja     0x14000676c
   140006762:	call   0x140005ce8
   140006767:	test   rax,rax
   14000676a:	jne    0x140006772
   14000676c:	call   QWORD PTR [rip+0x8e6]        # 0x140007058
   140006772:	mov    QWORD PTR [rbp+0x78],rax
   140006776:	lea    rax,[rip+0xffffffffffffc4a9]        # 0x140002c26
   14000677d:	add    rsp,0x20
   140006781:	pop    rbp
   140006782:	ret    
   140006783:	int3   
   140006784:	mov    QWORD PTR [rsp+0x10],rdx
   140006789:	push   rbx
   14000678a:	push   rbp
   14000678b:	sub    rsp,0x28
   14000678f:	mov    rbp,rdx
   140006792:	mov    rbx,QWORD PTR [rbp+0x60]
   140006796:	cmp    QWORD PTR [rbx+0x18],0x10
   14000679b:	jb     0x1400067a5
   14000679d:	mov    rcx,QWORD PTR [rbx]
   1400067a0:	call   0x140005cee
   1400067a5:	mov    QWORD PTR [rbx+0x18],0xf
   1400067ad:	mov    QWORD PTR [rbx+0x10],0x0
   1400067b5:	mov    BYTE PTR [rbx],0x0
   1400067b8:	xor    edx,edx
   1400067ba:	xor    ecx,ecx
   1400067bc:	call   0x140005e30
   1400067c1:	nop
   1400067c2:	int3   
   1400067c3:	int3   
   1400067c4:	int3   
   1400067c5:	int3   
   1400067c6:	int3   
   1400067c7:	int3   
   1400067c8:	int3   
   1400067c9:	int3   
   1400067ca:	int3   
   1400067cb:	int3   
   1400067cc:	int3   
   1400067cd:	int3   
   1400067ce:	int3   
   1400067cf:	int3   
   1400067d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400067d5:	push   rbp
   1400067d6:	sub    rsp,0x20
   1400067da:	mov    rbp,rdx
   1400067dd:	mov    rcx,QWORD PTR [rbp+0x68]
   1400067e1:	mov    QWORD PTR [rbp+0x68],rcx
   1400067e5:	xor    eax,eax
   1400067e7:	inc    rcx
   1400067ea:	je     0x14000680e
   1400067ec:	movabs rax,0x7fffffffffffffff
   1400067f6:	cmp    rcx,rax
   1400067f9:	ja     0x140006808
   1400067fb:	add    rcx,rcx
   1400067fe:	call   0x140005ce8
   140006803:	test   rax,rax
   140006806:	jne    0x14000680e
   140006808:	call   QWORD PTR [rip+0x84a]        # 0x140007058
   14000680e:	mov    QWORD PTR [rbp+0x78],rax
   140006812:	lea    rax,[rip+0xffffffffffffc533]        # 0x140002d4c
   140006819:	add    rsp,0x20
   14000681d:	pop    rbp
   14000681e:	ret    
   14000681f:	int3   
   140006820:	mov    QWORD PTR [rsp+0x10],rdx
   140006825:	push   rbx
   140006826:	push   rbp
   140006827:	sub    rsp,0x28
   14000682b:	mov    rbp,rdx
   14000682e:	mov    rbx,QWORD PTR [rbp+0x60]
   140006832:	cmp    QWORD PTR [rbx+0x18],0x8
   140006837:	jb     0x140006841
   140006839:	mov    rcx,QWORD PTR [rbx]
   14000683c:	call   0x140005cee
   140006841:	mov    QWORD PTR [rbx+0x18],0x7
   140006849:	mov    QWORD PTR [rbx+0x10],0x0
   140006851:	xor    eax,eax
   140006853:	mov    WORD PTR [rbx],ax
   140006856:	xor    edx,edx
   140006858:	xor    ecx,ecx
   14000685a:	call   0x140005e30
   14000685f:	nop
   140006860:	lea    rcx,[rdx+0x38]
   140006867:	jmp    0x140002250
   14000686c:	lea    rcx,[rdx+0x90]
   140006873:	jmp    0x140005bb6
   140006878:	lea    rcx,[rdx+0x28]
   14000687f:	jmp    0x140002280
   140006884:	lea    rcx,[rdx+0x38]
   14000688b:	jmp    0x140002280
   140006890:	mov    QWORD PTR [rsp+0x10],rdx
   140006895:	push   rbx
   140006896:	push   rbp
   140006897:	sub    rsp,0x28
   14000689b:	mov    rbp,rdx
   14000689e:	mov    rcx,QWORD PTR [rbp+0x78]
   1400068a2:	mov    rax,QWORD PTR [rcx]
   1400068a5:	call   QWORD PTR [rax+0x8]
   1400068a8:	mov    rbx,rax
   1400068ab:	call   QWORD PTR [rip+0x85f]        # 0x140007110
   1400068b1:	lea    rcx,[rax+0x60]
   1400068b5:	mov    r8,rbx
   1400068b8:	lea    rdx,[rip+0xf85]        # 0x140007844
   1400068bf:	call   QWORD PTR [rip+0x853]        # 0x140007118
   1400068c5:	mov    ecx,0x7f
   1400068ca:	call   QWORD PTR [rip+0x850]        # 0x140007120
   1400068d0:	nop
   1400068d1:	lea    rcx,[rdx+0x38]
   1400068d8:	jmp    0x140002210
   1400068dd:	lea    rcx,[rdx+0x38]
   1400068e4:	jmp    0x140002210
   1400068e9:	lea    rcx,[rdx+0x58]
   1400068f0:	jmp    0x140002210
   1400068f5:	lea    rcx,[rdx+0x38]
   1400068fc:	jmp    0x140002210
   140006901:	mov    QWORD PTR [rsp+0x10],rdx
   140006906:	push   rbx
   140006907:	push   rbp
   140006908:	sub    rsp,0x28
   14000690c:	mov    rbp,rdx
   14000690f:	mov    rcx,QWORD PTR [rbp+0x80]
   140006916:	mov    rax,QWORD PTR [rcx]
   140006919:	call   QWORD PTR [rax+0x8]
   14000691c:	mov    rbx,rax
   14000691f:	call   QWORD PTR [rip+0x7eb]        # 0x140007110
   140006925:	lea    rcx,[rax+0x60]
   140006929:	mov    r8,rbx
   14000692c:	lea    rdx,[rip+0xf11]        # 0x140007844
   140006933:	call   QWORD PTR [rip+0x7df]        # 0x140007118
   140006939:	mov    ecx,0x7f
   14000693e:	call   QWORD PTR [rip+0x7dc]        # 0x140007120
   140006944:	nop
   140006945:	int3   
   140006946:	int3   
   140006947:	int3   
   140006948:	int3   
   140006949:	int3   
   14000694a:	int3   
   14000694b:	int3   
   14000694c:	int3   
   14000694d:	int3   
   14000694e:	int3   
   14000694f:	int3   
   140006950:	mov    rcx,QWORD PTR [rdx+0x20]
   140006957:	jmp    0x140005300
   14000695c:	int3   
   14000695d:	int3   
   14000695e:	int3   
   14000695f:	int3   
   140006960:	mov    rcx,QWORD PTR [rdx+0x40]
   140006967:	rex.W jmp QWORD PTR [rip+0x7fa]        # 0x140007168
   14000696e:	int3   
   14000696f:	int3   
   140006970:	lea    rcx,[rdx+0x28]
   140006977:	jmp    0x140002210
   14000697c:	int3   
   14000697d:	int3   
   14000697e:	int3   
   14000697f:	int3   
   140006980:	mov    rcx,QWORD PTR [rdx+0x1b0]
   140006987:	jmp    0x140002210
   14000698c:	lea    rcx,[rdx+0x60]
   140006993:	jmp    0x140002210
   140006998:	lea    rcx,[rdx+0x40]
   14000699f:	jmp    0x140002210
   1400069a4:	lea    rcx,[rdx+0x80]
   1400069ab:	jmp    0x140002210
   1400069b0:	lea    rcx,[rdx+0xd0]
   1400069b7:	jmp    0x140005b80
   1400069bc:	mov    rcx,QWORD PTR [rdx+0x170]
   1400069c3:	jmp    0x140005300
   1400069c8:	int3   
   1400069c9:	int3   
   1400069ca:	int3   
   1400069cb:	int3   
   1400069cc:	int3   
   1400069cd:	int3   
   1400069ce:	int3   
   1400069cf:	int3   
   1400069d0:	mov    rcx,QWORD PTR [rdx+0x88]
   1400069d7:	jmp    0x140002210
   1400069dc:	lea    rcx,[rdx+0x48]
   1400069e3:	jmp    0x140005bb6
   1400069e8:	int3   
   1400069e9:	int3   
   1400069ea:	int3   
   1400069eb:	int3   
   1400069ec:	int3   
   1400069ed:	int3   
   1400069ee:	int3   
   1400069ef:	int3   
   1400069f0:	lea    rcx,[rdx+0x28]
   1400069f7:	jmp    0x140002210
   1400069fc:	rex push rbp
   1400069fe:	sub    rsp,0x20
   140006a02:	mov    rbp,rdx
   140006a05:	cmp    DWORD PTR [rbp+0x20],0x0
   140006a09:	jne    0x140006a21
   140006a0b:	mov    r9,QWORD PTR [rbp+0x78]
   140006a0f:	mov    r8d,DWORD PTR [rbp+0x70]
   140006a13:	mov    rdx,QWORD PTR [rbp+0x68]
   140006a17:	mov    rcx,QWORD PTR [rbp+0x60]
   140006a1b:	call   0x140005c98
   140006a20:	nop
   140006a21:	add    rsp,0x20
   140006a25:	pop    rbp
   140006a26:	ret    
   140006a27:	int3   
   140006a28:	rex push rbp
   140006a2a:	sub    rsp,0x20
   140006a2e:	mov    rbp,rdx
   140006a31:	mov    QWORD PTR [rbp+0x38],rcx
   140006a35:	mov    QWORD PTR [rbp+0x28],rcx
   140006a39:	mov    rax,QWORD PTR [rbp+0x28]
   140006a3d:	mov    rcx,QWORD PTR [rax]
   140006a40:	mov    QWORD PTR [rbp+0x30],rcx
   140006a44:	mov    rax,QWORD PTR [rbp+0x30]
   140006a48:	cmp    DWORD PTR [rax],0xe06d7363
   140006a4e:	je     0x140006a5c
   140006a50:	mov    DWORD PTR [rbp+0x20],0x0
   140006a57:	mov    eax,DWORD PTR [rbp+0x20]
   140006a5a:	jmp    0x140006a62
   140006a5c:	call   0x1400061e6
   140006a61:	nop
   140006a62:	add    rsp,0x20
   140006a66:	pop    rbp
   140006a67:	ret    
   140006a68:	int3   
   140006a69:	rex push rbp
   140006a6b:	sub    rsp,0x20
   140006a6f:	mov    rbp,rdx
   140006a72:	mov    ecx,0x8
   140006a77:	call   0x1400061f8
   140006a7c:	nop
   140006a7d:	add    rsp,0x20
   140006a81:	pop    rbp
   140006a82:	ret    
   140006a83:	int3   
   140006a84:	rex push rbp
   140006a86:	sub    rsp,0x20
   140006a8a:	mov    rbp,rdx
   140006a8d:	mov    rax,QWORD PTR [rcx]
   140006a90:	mov    rdx,rcx
   140006a93:	mov    ecx,DWORD PTR [rax]
   140006a95:	call   0x14000625c
   140006a9a:	nop
   140006a9b:	add    rsp,0x20
   140006a9f:	pop    rbp
   140006aa0:	ret    
   140006aa1:	int3   
   140006aa2:	int3   
   140006aa3:	int3   
   140006aa4:	int3   
   140006aa5:	int3   
   140006aa6:	int3   
   140006aa7:	int3   
   140006aa8:	int3   
   140006aa9:	int3   
   140006aaa:	int3   
   140006aab:	int3   
   140006aac:	int3   
   140006aad:	int3   
   140006aae:	int3   
   140006aaf:	int3   
   140006ab0:	rex push rbp
   140006ab2:	sub    rsp,0x20
   140006ab6:	mov    rbp,rdx
   140006ab9:	mov    rax,QWORD PTR [rcx]
   140006abc:	xor    ecx,ecx
   140006abe:	cmp    DWORD PTR [rax],0xc0000005
   140006ac4:	sete   cl
   140006ac7:	mov    eax,ecx
   140006ac9:	add    rsp,0x20
   140006acd:	pop    rbp
   140006ace:	ret    
   140006acf:	int3   
   140006ad0:	lea    rax,[rip+0xbe9]        # 0x1400076c0
   140006ad7:	mov    QWORD PTR [rip+0x4522],rax        # 0x14000b000
   140006ade:	ret    
   140006adf:	int3   
   140006ae0:	lea    rax,[rip+0xbd9]        # 0x1400076c0
   140006ae7:	mov    QWORD PTR [rip+0x451a],rax        # 0x14000b008
   140006aee:	ret    
   140006aef:	int3   
   140006af0:	lea    rax,[rip+0xbc9]        # 0x1400076c0
   140006af7:	mov    QWORD PTR [rip+0x4512],rax        # 0x14000b010
   140006afe:	ret    
   140006aff:	int3   
   140006b00:	lea    rax,[rip+0xbb9]        # 0x1400076c0
   140006b07:	mov    QWORD PTR [rip+0x44f2],rax        # 0x14000b000
   140006b0e:	ret    
   140006b0f:	int3   
   140006b10:	lea    rax,[rip+0xba9]        # 0x1400076c0
   140006b17:	mov    QWORD PTR [rip+0x44ea],rax        # 0x14000b008
   140006b1e:	ret    
   140006b1f:	int3   
   140006b20:	lea    rax,[rip+0xb99]        # 0x1400076c0
   140006b27:	mov    QWORD PTR [rip+0x44e2],rax        # 0x14000b010
   140006b2e:	ret    

Disassembly of section .rdata:

0000000140007000 <.rdata>:
   140007000:	(bad)  
   140007001:	stos   BYTE PTR es:[rdi],al
   140007002:	add    BYTE PTR [rax],al
   140007004:	add    BYTE PTR [rax],al
   140007006:	add    BYTE PTR [rax],al
   140007008:	shr    BYTE PTR [rdx+0x0],0x0
   14000700f:	add    BYTE PTR [rdx+0xaa],ch
   140007015:	add    BYTE PTR [rax],al
   140007017:	add    BYTE PTR [rax+0xaa],dl
   14000701d:	add    BYTE PTR [rax],al
   14000701f:	add    BYTE PTR [rax+0xaa],al
   140007025:	add    BYTE PTR [rax],al
   140007027:	add    BYTE PTR [rax-0x56],dh
	...
   140007036:	add    BYTE PTR [rax],al
   140007038:	movabs ds:0x82000000000000a7,al
   140007041:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140007042:	add    BYTE PTR [rax],al
   140007044:	add    BYTE PTR [rax],al
   140007046:	add    BYTE PTR [rax],al
   140007048:	(bad)  
   140007049:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000704a:	add    BYTE PTR [rax],al
   14000704c:	add    BYTE PTR [rax],al
   14000704e:	add    BYTE PTR [rax],al
   140007050:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140007052:	add    BYTE PTR [rax],al
   140007054:	add    BYTE PTR [rax],al
   140007056:	add    BYTE PTR [rax],al
   140007058:	and    al,0xa7
	...
   140007066:	add    BYTE PTR [rax],al
   140007068:	call   0x140007116
   14000706d:	add    BYTE PTR [rax],al
   14000706f:	add    dl,bl
   140007071:	test   eax,0x0
   140007076:	add    BYTE PTR [rax],al
   140007078:	hlt    
   140007079:	test   eax,0x0
   14000707e:	add    BYTE PTR [rax],al
   140007080:	mov    al,0xa9
   140007082:	add    BYTE PTR [rax],al
   140007084:	add    BYTE PTR [rax],al
   140007086:	add    BYTE PTR [rax],al
   140007088:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140007089:	test   eax,0x0
   14000708e:	add    BYTE PTR [rax],al
   140007090:	sahf   
   140007091:	test   eax,0x0
   140007096:	add    BYTE PTR [rax],al
   140007098:	mov    WORD PTR [rcx+0x0],gs
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	jl     0x14000704b
   1400070a2:	add    BYTE PTR [rax],al
   1400070a4:	add    BYTE PTR [rax],al
   1400070a6:	add    BYTE PTR [rax],al
   1400070a8:	outs   dx,BYTE PTR ds:[rsi]
   1400070a9:	test   eax,0x0
   1400070ae:	add    BYTE PTR [rax],al
   1400070b0:	(bad)  
   1400070b1:	test   eax,0x0
   1400070b6:	add    BYTE PTR [rax],al
   1400070b8:	push   rsi
   1400070b9:	test   eax,0x0
   1400070be:	add    BYTE PTR [rax],al
   1400070c0:	test   rax,0x0
   1400070c6:	add    BYTE PTR [rax],al
   1400070c8:	add    BYTE PTR [rdx+0x0],ch
   1400070ce:	add    BYTE PTR [rax],al
   1400070d0:	or     ch,BYTE PTR [rdx+0x0]
   1400070d6:	add    BYTE PTR [rax],al
   1400070d8:	(bad)  
   1400070d9:	stos   BYTE PTR es:[rdi],al
   1400070da:	add    BYTE PTR [rax],al
   1400070dc:	add    BYTE PTR [rax],al
   1400070de:	add    BYTE PTR [rax],al
   1400070e0:	rex.WR stos BYTE PTR es:[rdi],al
   1400070e2:	add    BYTE PTR [rax],al
   1400070e4:	add    BYTE PTR [rax],al
   1400070e6:	add    BYTE PTR [rax],al
   1400070e8:	(bad)  
   1400070e9:	test   eax,0x0
   1400070ee:	add    BYTE PTR [rax],al
   1400070f0:	shl    BYTE PTR [rdi+0x0],1
   1400070f6:	add    BYTE PTR [rax],al
   1400070f8:	fsub   QWORD PTR [rdi+0x0]
   1400070fe:	add    BYTE PTR [rax],al
   140007100:	out    dx,al
   140007101:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140007102:	add    BYTE PTR [rax],al
   140007104:	add    BYTE PTR [rax],al
   140007106:	add    BYTE PTR [rax],al
   140007108:	(bad)  
   140007109:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000710a:	add    BYTE PTR [rax],al
   14000710c:	add    BYTE PTR [rax],al
   14000710e:	add    BYTE PTR [rax],al
   140007110:	or     BYTE PTR [rax+0x0],ch
   140007116:	add    BYTE PTR [rax],al
   140007118:	(bad)  
   140007119:	test   al,0x0
   14000711b:	add    BYTE PTR [rax],al
   14000711d:	add    BYTE PTR [rax],al
   14000711f:	add    BYTE PTR [rax],ah
   140007121:	test   al,0x0
   140007123:	add    BYTE PTR [rax],al
   140007125:	add    BYTE PTR [rax],al
   140007127:	add    BYTE PTR [rax],ch
   140007129:	test   al,0x0
   14000712b:	add    BYTE PTR [rax],al
   14000712d:	add    BYTE PTR [rax],al
   14000712f:	add    BYTE PTR [rdx],dh
   140007131:	test   al,0x0
   140007133:	add    BYTE PTR [rax],al
   140007135:	add    BYTE PTR [rax],al
   140007137:	add    BYTE PTR [rax+rbp*4+0x0],al
   14000713b:	add    BYTE PTR [rax],al
   14000713d:	add    BYTE PTR [rax],al
   14000713f:	add    BYTE PTR [rdx-0x58],bl
   140007142:	add    BYTE PTR [rax],al
   140007144:	add    BYTE PTR [rax],al
   140007146:	add    BYTE PTR [rax],al
   140007148:	jo     0x1400070f2
   14000714a:	add    BYTE PTR [rax],al
   14000714c:	add    BYTE PTR [rax],al
   14000714e:	add    BYTE PTR [rax],al
   140007150:	jp     0x1400070fa
   140007152:	add    BYTE PTR [rax],al
   140007154:	add    BYTE PTR [rax],al
   140007156:	add    BYTE PTR [rax],al
   140007158:	test   BYTE PTR [rax+0x0],ch
   14000715e:	add    BYTE PTR [rax],al
   140007160:	test   al,0xa8
   140007162:	add    BYTE PTR [rax],al
   140007164:	add    BYTE PTR [rax],al
   140007166:	add    BYTE PTR [rax],al
   140007168:	shr    BYTE PTR [rax+0x0],cl
   14000716e:	add    BYTE PTR [rax],al
   140007170:	out    dx,al
   140007171:	test   al,0x0
   140007173:	add    BYTE PTR [rax],al
   140007175:	add    BYTE PTR [rax],al
   140007177:	add    BYTE PTR [rdx],al
   140007179:	test   eax,0x0
   14000717e:	add    BYTE PTR [rax],al
   140007180:	sub    BYTE PTR [rcx+0x0],ch
   140007186:	add    BYTE PTR [rax],al
   140007188:	xor    BYTE PTR [rcx+0x0],ch
   14000718e:	add    BYTE PTR [rax],al
   140007190:	cmp    ch,BYTE PTR [rcx+0x0]
	...
   14000719e:	add    BYTE PTR [rax],al
   1400071a0:	(bad)  
   1400071a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400071a2:	add    BYTE PTR [rax],al
   1400071a4:	add    BYTE PTR [rax],al
   1400071a6:	add    BYTE PTR [rax],al
   1400071a8:	mov    ah,BYTE PTR [rsi+0x0]
	...
   1400071b6:	add    BYTE PTR [rax],al
   1400071b8:	(bad)  
   1400071b9:	popf   
   1400071ba:	add    BYTE PTR [rax],al
   1400071bc:	add    BYTE PTR [rax],al
   1400071be:	add    BYTE PTR [rax],al
   1400071c0:	(bad)  
   1400071c1:	popf   
   1400071c2:	add    BYTE PTR [rax],al
   1400071c4:	add    BYTE PTR [rax],al
   1400071c6:	add    BYTE PTR [rax],al
   1400071c8:	cli    
   1400071c9:	popf   
   1400071ca:	add    BYTE PTR [rax],al
   1400071cc:	add    BYTE PTR [rax],al
   1400071ce:	add    BYTE PTR [rax],al
   1400071d0:	jo     0x140007170
   1400071d2:	add    BYTE PTR [rax],al
   1400071d4:	add    BYTE PTR [rax],al
   1400071d6:	add    BYTE PTR [rax],al
   1400071d8:	in     al,dx
   1400071d9:	sahf   
   1400071da:	add    BYTE PTR [rax],al
   1400071dc:	add    BYTE PTR [rax],al
   1400071de:	add    BYTE PTR [rax],al
   1400071e0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400071e1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400071e2:	add    BYTE PTR [rax],al
   1400071e4:	add    BYTE PTR [rax],al
   1400071e6:	add    BYTE PTR [rax],al
   1400071e8:	and    BYTE PTR [rax+rax*1+0x0],0x0
   1400071f0:	(bad)  
   1400071f1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400071f2:	add    BYTE PTR [rax],al
   1400071f4:	add    BYTE PTR [rax],al
   1400071f6:	add    BYTE PTR [rax],al
   1400071f8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400071f9:	movabs ds:0xa236000000000000,al
   140007202:	add    BYTE PTR [rax],al
   140007204:	add    BYTE PTR [rax],al
   140007206:	add    BYTE PTR [rax],al
   140007208:	mul    BYTE PTR [rax+0x0]
   14000720e:	add    BYTE PTR [rax],al
   140007210:	shl    BYTE PTR [rax+0x0],cl
   140007216:	add    BYTE PTR [rax],al
   140007218:	scas   al,BYTE PTR es:[rdi]
   140007219:	movabs al,ds:0x9f68000000000000
   140007222:	add    BYTE PTR [rax],al
   140007224:	add    BYTE PTR [rax],al
   140007226:	add    BYTE PTR [rax],al
   140007228:	sub    bl,BYTE PTR [rdi+0x0]
   14000722e:	add    BYTE PTR [rax],al
   140007230:	fcomp  DWORD PTR [rax+rax*1+0x0]
	...
   14000723f:	add    BYTE PTR [rbp+riz*4+0x0],dh
   140007243:	add    BYTE PTR [rax],al
   140007245:	add    BYTE PTR [rax],al
   140007247:	add    dh,ah
   140007249:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   140007256:	add    BYTE PTR [rax],al
   140007258:	adc    BYTE PTR [rsi+0x0],ah
	...
   14000726e:	add    BYTE PTR [rax],al
   140007270:	test   al,0x5f
   140007272:	add    BYTE PTR [rax+0x1],al
   140007275:	add    BYTE PTR [rax],al
   140007277:	add    BYTE PTR [rax+0x10],dh
   14000727a:	add    BYTE PTR [rax+0x1],al
   14000727d:	add    BYTE PTR [rax],al
   14000727f:	add    BYTE PTR [rax],dh
   140007281:	adc    BYTE PTR [rax],al
   140007283:	rex add DWORD PTR [rax],eax
   140007286:	add    BYTE PTR [rax],al
   140007288:	push   rax
   140007289:	adc    BYTE PTR [rax],al
   14000728b:	rex add DWORD PTR [rax],eax
   14000728e:	add    BYTE PTR [rax],al
   140007290:	add    BYTE PTR [rax],dl
   140007292:	add    BYTE PTR [rax+0x1],al
   140007295:	add    BYTE PTR [rax],al
   140007297:	add    BYTE PTR [rax],dl
   140007299:	adc    BYTE PTR [rax],al
   14000729b:	rex add DWORD PTR [rax],eax
   14000729e:	add    BYTE PTR [rax],al
   1400072a0:	and    BYTE PTR [rax],dl
   1400072a2:	add    BYTE PTR [rax+0x1],al
	...
   1400072b5:	add    BYTE PTR [rax],al
   1400072b7:	add    al,bl
   1400072b9:	pop    rsi
   1400072ba:	add    BYTE PTR [rax+0x1],al
   1400072bd:	add    BYTE PTR [rax],al
   1400072bf:	add    ah,dh
   1400072c1:	pop    rsp
   1400072c2:	add    BYTE PTR [rax+0x1],al
   1400072c5:	add    BYTE PTR [rax],al
   1400072c7:	add    BYTE PTR [rdx+riz*2+0x0],al
   1400072cb:	rex add DWORD PTR [rax],eax
	...
   1400072e2:	add    BYTE PTR [rax],al
   1400072e4:	mov    ch,0x1e
   1400072e6:	sbb    DWORD PTR [rax+0x0],0x2000000
   1400072ed:	add    BYTE PTR [rax],al
   1400072ef:	add    BYTE PTR [rsi],dh
   1400072f1:	add    BYTE PTR [rax],al
   1400072f3:	add    BYTE PTR [rax+0x7c],ah
   1400072f6:	add    BYTE PTR [rax],al
   1400072f8:	(bad)  
   1400072f9:	ins    BYTE PTR es:[rdi],dx
   1400072fa:	add    BYTE PTR [rax],al
   1400072fc:	add    BYTE PTR [rax],al
   1400072fe:	add    BYTE PTR [rax],al
   140007300:	mov    ch,0x1e
   140007302:	sbb    DWORD PTR [rax+0x0],0xc000000
   140007309:	add    BYTE PTR [rax],al
   14000730b:	add    BYTE PTR [rax+rax*1],dl
   14000730e:	add    BYTE PTR [rax],al
   140007310:	cwde   
   140007311:	jl     0x140007313
   140007313:	add    BYTE PTR [rax-0x5cffff94],bl
   140007319:	xchg   edi,eax
   14000731a:	mov    dh,0xf7
   14000731c:	mov    ch,0x4d
   14000731e:	cmp    ecx,DWORD PTR [rbp-0x42]
   140007321:	jno    0x1400072e7
   140007323:	rol    BYTE PTR [rsi+riz*8+0x4a7d2f59],cl
   14000732a:	mov    cl,0x72
   14000732c:	rex.WR jo 0x14000736d
   14000732f:	rex.X xchg edx,eax
   140007331:	clc    
   140007332:	jle    0x1400073a1
   140007334:	fs mov esp,0x1f8a2ab9
   14000733a:	or     edx,esp
   14000733c:	or     bl,BYTE PTR [rsi]
   14000733e:	xor    DWORD PTR [rdi-0x7c],eax
   140007341:	movabs ds:0xbf1f61528a7cd50d,al
   14000734a:	movabs ds:0x53609c4390a86be8,eax
   140007353:	nop
   140007354:	mov    ecx,0xf2cd269
   140007359:	movabs al,ds:0x5682451950be5727
   140007362:	imul   DWORD PTR [rcx-0x68]
   140007365:	jno    0x140007365
   140007367:	retf   
   140007368:	(bad)  
   140007369:	rex.WRX test QWORD PTR [rsi-0x3c],r15
   14000736d:	int    0x5a
   14000736f:	mov    bpl,0xb2
   140007372:	stos   BYTE PTR es:[rdi],al
   140007373:	test   ecx,0x5f0cd4e7
   140007379:	and    BYTE PTR [rdi],0x2f
   14000737c:	jbe    0x140007394
   14000737e:	int3   
   14000737f:	rex.WRX xchg rsi,rax
   140007381:	cli    
   140007382:	jle    0x140007334
   140007384:	popf   
   140007385:	xor    BYTE PTR [rdi],r13b
   140007388:	(bad)  
   140007389:	or     eax,0x5fc879a6
   14000738e:	push   rdx
   14000738f:	rex.WB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007391:	sbb    al,0x11
   140007393:	movsxd ebp,DWORD PTR [rsi+0x5bb85eec]
   140007399:	rcr    BYTE PTR [rax],cl
   14000739b:	(bad)  
   14000739c:	cmc    
   14000739d:	pop    rbx
   14000739e:	jns    0x1400073e4
   1400073a0:	mov    cs,WORD PTR [rax-0x429b4346]
   1400073a6:	mov    edi,0xb5b133ca
   1400073ab:	sar    DWORD PTR [rip+0xffffffff9849f4ec],1        # 0xd84a689d
   1400073b1:	movabs ds:0xda6b82469e1a4d46,eax
   1400073ba:	enter  0x6531,0x61
   1400073be:	rex.X
   1400073bf:	rex mov edx,DWORD PTR [rdx+0x5f319e94]
   1400073c6:	rex.WRB test BYTE PTR [r13+0x665cb7d7],r8b
   1400073cd:	popf   
   1400073ce:	pop    rbp
   1400073cf:	rex.RX mov edx,0x61146e1
   1400073d5:	sbb    edx,DWORD PTR [rsp+rsi*1-0x74]
   1400073d9:	mov    bh,0xb5
   1400073db:	mov    ecx,0x48980713
   1400073e0:	movabs ds:0x2207eddc4979c61a,al
   1400073e9:	add    eax,0x41993
   1400073ee:	add    BYTE PTR [rax],al
   1400073f0:	nop
   1400073f1:	(bad)  
   1400073f2:	add    BYTE PTR [rax],al
   1400073f4:	add    al,BYTE PTR [rax]
   1400073f6:	add    BYTE PTR [rax],al
   1400073f8:	mov    al,0x82
   1400073fa:	add    BYTE PTR [rax],al
   1400073fc:	or     BYTE PTR [rax],al
   1400073fe:	add    BYTE PTR [rax],al
   140007400:	add    BYTE PTR [rbx+0x200000],al
   140007406:	add    BYTE PTR [rax],al
   140007408:	add    BYTE PTR [rax],al
   14000740a:	add    BYTE PTR [rax],al
   14000740c:	add    DWORD PTR [rax],eax
   14000740e:	add    BYTE PTR [rax],al
   140007410:	and    al,BYTE PTR [rip+0x41993]        # 0x140048da9
   140007416:	add    BYTE PTR [rax],al
   140007418:	rol    BYTE PTR [rax+rax*1+0x200],0x0
   140007420:	loopne 0x1400073a6
   140007422:	add    BYTE PTR [rax],al
   140007424:	or     BYTE PTR [rax],al
   140007426:	add    BYTE PTR [rax],al
   140007428:	xor    BYTE PTR [rbp+0x200000],al
   14000742e:	add    BYTE PTR [rax],al
   140007430:	add    BYTE PTR [rax],al
   140007432:	add    BYTE PTR [rax],al
   140007434:	add    DWORD PTR [rax],eax
   140007436:	add    BYTE PTR [rax],al
   140007438:	and    al,BYTE PTR [rip+0x21993]        # 0x140028dd1
   14000743e:	add    BYTE PTR [rax],al
   140007440:	pop    rsp
   140007441:	xchg   BYTE PTR [rax],al
   140007443:	add    BYTE PTR [rcx],al
   140007445:	add    BYTE PTR [rax],al
   140007447:	add    BYTE PTR [rsi+rax*4+0x0],ch
   14000744b:	add    BYTE PTR [rip+0xffffffff98000000],al        # 0xd8007451
   140007451:	xchg   BYTE PTR [rax],al
   140007453:	add    BYTE PTR [rax],ah
   140007455:	add    BYTE PTR [rax],al
   140007457:	add    BYTE PTR [rax],al
   140007459:	add    BYTE PTR [rax],al
   14000745b:	add    BYTE PTR [rcx],al
   14000745d:	add    BYTE PTR [rax],al
   14000745f:	add    BYTE PTR [rdx],ah
   140007461:	add    eax,0x21993
   140007466:	add    BYTE PTR [rax],al
   140007468:	call   0x1410074f3
   14000746d:	add    BYTE PTR [rax],al
   14000746f:	add    al,bh
   140007471:	xchg   BYTE PTR [rax],al
   140007473:	add    BYTE PTR [rip+0x20000000],al        # 0x160007479
   140007479:	xchg   DWORD PTR [rax],eax
   14000747b:	add    BYTE PTR [rax],ah
   14000747d:	add    BYTE PTR [rax],al
   14000747f:	add    BYTE PTR [rax],al
   140007481:	add    BYTE PTR [rax],al
   140007483:	add    BYTE PTR [rcx],al
   140007485:	add    BYTE PTR [rax],al
   140007487:	add    BYTE PTR [rdx],ah
   140007489:	add    eax,0x31993
   14000748e:	add    BYTE PTR [rax],al
   140007490:	jl     0x140007419
   140007492:	add    BYTE PTR [rax],al
   140007494:	add    DWORD PTR [rax],eax
   140007496:	add    BYTE PTR [rax],al
   140007498:	xchg   esp,eax
   140007499:	xchg   DWORD PTR [rax],eax
   14000749b:	add    BYTE PTR [rip+0xffffffffc0000000],al        # 0x1000074a1
   1400074a1:	xchg   DWORD PTR [rax],eax
   1400074a3:	add    BYTE PTR [rax],ah
   1400074a5:	add    BYTE PTR [rax],al
   1400074a7:	add    BYTE PTR [rax],al
   1400074a9:	add    BYTE PTR [rax],al
   1400074ab:	add    BYTE PTR [rcx],al
   1400074ad:	add    BYTE PTR [rax],al
   1400074af:	add    BYTE PTR [rdx],ah
   1400074b1:	add    eax,0x41993
   1400074b6:	add    BYTE PTR [rax],al
   1400074b8:	pop    rsp
   1400074b9:	mov    DWORD PTR [rax],eax
	...
   1400074c3:	add    BYTE PTR [rsi],al
   1400074c5:	add    BYTE PTR [rax],al
   1400074c7:	add    BYTE PTR [rax+0x20000089],al
   1400074cd:	add    BYTE PTR [rax],al
   1400074cf:	add    BYTE PTR [rax],al
   1400074d1:	add    BYTE PTR [rax],al
   1400074d3:	add    BYTE PTR [rcx],al
   1400074d5:	add    BYTE PTR [rax],al
   1400074d7:	add    BYTE PTR [rdx],ah
   1400074d9:	add    eax,0xc1993
   1400074de:	add    BYTE PTR [rax],al
   1400074e0:	xor    al,0x8a
   1400074e2:	add    BYTE PTR [rax],al
   1400074e4:	add    al,BYTE PTR [rax]
   1400074e6:	add    BYTE PTR [rax],al
   1400074e8:	xchg   esp,eax
   1400074e9:	mov    al,BYTE PTR [rax]
   1400074eb:	add    BYTE PTR [rip+0xfffffffff0000000],dl        # 0x1300074f1
   1400074f1:	mov    al,BYTE PTR [rax]
   1400074f3:	add    BYTE PTR [rax+0x0],cl
   1400074f9:	add    BYTE PTR [rax],al
   1400074fb:	add    BYTE PTR [rcx],al
   1400074fd:	add    BYTE PTR [rax],al
   1400074ff:	add    BYTE PTR [rdx],ah
   140007501:	add    eax,0x11993
   140007506:	add    BYTE PTR [rax],al
   140007508:	or     al,0x8c
	...
   140007512:	add    BYTE PTR [rax],al
   140007514:	add    eax,DWORD PTR [rax]
   140007516:	add    BYTE PTR [rax],al
   140007518:	sbb    BYTE PTR [rax+rax*1+0x2000],cl
   14000751f:	add    BYTE PTR [rax],al
   140007521:	add    BYTE PTR [rax],al
   140007523:	add    BYTE PTR [rcx],al
   140007525:	add    BYTE PTR [rax],al
   140007527:	add    BYTE PTR [rdx],ah
   140007529:	add    eax,0x21993
   14000752e:	add    BYTE PTR [rax],al
   140007530:	js     0x1400074be
   140007532:	add    BYTE PTR [rax],al
   140007534:	add    DWORD PTR [rax],eax
   140007536:	add    BYTE PTR [rax],al
   140007538:	mov    BYTE PTR [rax+rax*1+0x500],cl
   14000753f:	add    BYTE PTR [rax+0x2800008c],dh
   140007545:	add    BYTE PTR [rax],al
   140007547:	add    BYTE PTR [rax],al
   140007549:	add    BYTE PTR [rax],al
   14000754b:	add    BYTE PTR [rcx],al
   14000754d:	add    BYTE PTR [rax],al
   14000754f:	add    BYTE PTR [rdx],ah
   140007551:	add    eax,0x21993
   140007556:	add    BYTE PTR [rax],al
   140007558:	cld    
   140007559:	mov    WORD PTR [rax],es
   14000755b:	add    BYTE PTR [rcx],al
   14000755d:	add    BYTE PTR [rax],al
   14000755f:	add    BYTE PTR [rcx*4+0x50000],cl
   140007566:	add    BYTE PTR [rax],al
   140007568:	cmp    BYTE PTR [rbp+0x280000],cl
   14000756e:	add    BYTE PTR [rax],al
   140007570:	add    BYTE PTR [rax],al
   140007572:	add    BYTE PTR [rax],al
   140007574:	add    DWORD PTR [rax],eax
   140007576:	add    BYTE PTR [rax],al
   140007578:	and    al,BYTE PTR [rip+0x31993]        # 0x140038f11
   14000757e:	add    BYTE PTR [rax],al
   140007580:	pushf  
   140007581:	lea    eax,[rax]
   140007583:	add    BYTE PTR [rcx],al
   140007585:	add    BYTE PTR [rax],al
   140007587:	add    BYTE PTR [rbp+rcx*4+0x60000],dh
   14000758e:	add    BYTE PTR [rax],al
   140007590:	loopne 0x14000751f
   140007592:	add    BYTE PTR [rax],al
   140007594:	and    BYTE PTR [rax],al
   140007596:	add    BYTE PTR [rax],al
   140007598:	add    BYTE PTR [rax],al
   14000759a:	add    BYTE PTR [rax],al
   14000759c:	add    DWORD PTR [rax],eax
   14000759e:	add    BYTE PTR [rax],al
   1400075a0:	and    al,BYTE PTR [rip+0x31993]        # 0x140038f39
   1400075a6:	add    BYTE PTR [rax],al
   1400075a8:	rex mov es,WORD PTR [rax]
   1400075ab:	add    BYTE PTR [rcx],al
   1400075ad:	add    BYTE PTR [rax],al
   1400075af:	add    BYTE PTR [rax-0x72],bl
   1400075b2:	add    BYTE PTR [rax],al
   1400075b4:	(bad)  
   1400075b5:	add    BYTE PTR [rax],al
   1400075b7:	add    BYTE PTR [rax+0x2000008e],al
   1400075bd:	add    BYTE PTR [rax],al
   1400075bf:	add    BYTE PTR [rax],al
   1400075c1:	add    BYTE PTR [rax],al
   1400075c3:	add    BYTE PTR [rcx],al
   1400075c5:	add    BYTE PTR [rax],al
   1400075c7:	add    BYTE PTR [rdx],ah
   1400075c9:	add    eax,0x11993
   1400075ce:	add    BYTE PTR [rax],al
   1400075d0:	fmul   DWORD PTR [rsi+0x0]
   1400075d6:	add    BYTE PTR [rax],al
   1400075d8:	add    BYTE PTR [rax],al
   1400075da:	add    BYTE PTR [rax],al
   1400075dc:	add    eax,DWORD PTR [rax]
   1400075de:	add    BYTE PTR [rax],al
   1400075e0:	loopne 0x140007570
   1400075e2:	add    BYTE PTR [rax],al
   1400075e4:	and    BYTE PTR [rax],al
   1400075e6:	add    BYTE PTR [rax],al
   1400075e8:	add    BYTE PTR [rax],al
   1400075ea:	add    BYTE PTR [rax],al
   1400075ec:	add    DWORD PTR [rax],eax
   1400075ee:	add    BYTE PTR [rax],al
   1400075f0:	and    al,BYTE PTR [rip+0x11993]        # 0x140018f89
   1400075f6:	add    BYTE PTR [rax],al
   1400075f8:	adc    BYTE PTR [rdi+0x0],cl
   1400075fe:	add    BYTE PTR [rax],al
   140007600:	add    BYTE PTR [rax],al
   140007602:	add    BYTE PTR [rax],al
   140007604:	add    eax,DWORD PTR [rax]
   140007606:	add    BYTE PTR [rax],al
   140007608:	sbb    BYTE PTR [rdi+0x200000],cl
   14000760e:	add    BYTE PTR [rax],al
   140007610:	add    BYTE PTR [rax],al
   140007612:	add    BYTE PTR [rax],al
   140007614:	add    DWORD PTR [rax],eax
   140007616:	add    BYTE PTR [rax],al
   140007618:	and    al,BYTE PTR [rip+0x11993]        # 0x140018fb1
   14000761e:	add    BYTE PTR [rax],al
   140007620:	rex.W pop QWORD PTR [rax]
	...
   14000762b:	add    BYTE PTR [rbx],al
   14000762d:	add    BYTE PTR [rax],al
   14000762f:	add    BYTE PTR [rax-0x71],dl
   140007632:	add    BYTE PTR [rax],al
   140007634:	and    BYTE PTR [rax],al
   140007636:	add    BYTE PTR [rax],al
   140007638:	add    BYTE PTR [rax],al
   14000763a:	add    BYTE PTR [rax],al
   14000763c:	add    DWORD PTR [rax],eax
   14000763e:	add    BYTE PTR [rax],al
   140007640:	and    al,BYTE PTR [rip+0x11993]        # 0x140018fd9
   140007646:	add    BYTE PTR [rax],al
   140007648:	or     BYTE PTR [rdi+0x0],0x0
   14000764f:	add    BYTE PTR [rax],al
   140007651:	add    BYTE PTR [rax],al
   140007653:	add    BYTE PTR [rbx],al
   140007655:	add    BYTE PTR [rax],al
   140007657:	add    BYTE PTR [rax+0x2000008f],cl
   14000765d:	add    BYTE PTR [rax],al
   14000765f:	add    BYTE PTR [rax],al
   140007661:	add    BYTE PTR [rax],al
   140007663:	add    BYTE PTR [rcx],al
   140007665:	add    BYTE PTR [rax],al
   140007667:	add    BYTE PTR [rdx],ah
   140007669:	add    eax,0x11993
   14000766e:	add    BYTE PTR [rax],al
   140007670:	mov    eax,0x8f
   140007675:	add    BYTE PTR [rax],al
   140007677:	add    BYTE PTR [rax],al
   140007679:	add    BYTE PTR [rax],al
   14000767b:	add    BYTE PTR [rbx],al
   14000767d:	add    BYTE PTR [rax],al
   14000767f:	add    al,al
   140007681:	pop    QWORD PTR [rax]
   140007683:	add    BYTE PTR [rax],ah
   140007685:	add    BYTE PTR [rax],al
   140007687:	add    BYTE PTR [rax],al
   140007689:	add    BYTE PTR [rax],al
   14000768b:	add    BYTE PTR [rcx],al
   14000768d:	add    BYTE PTR [rax],al
   14000768f:	add    BYTE PTR [rdx],ah
   140007691:	add    eax,0x11993
   140007696:	add    BYTE PTR [rax],al
   140007698:	lock pop QWORD PTR [rax]
	...
   1400076a3:	add    BYTE PTR [rbx],al
   1400076a5:	add    BYTE PTR [rax],al
   1400076a7:	add    al,bh
   1400076a9:	pop    QWORD PTR [rax]
   1400076ab:	add    BYTE PTR [rax],ah
   1400076ad:	add    BYTE PTR [rax],al
   1400076af:	add    BYTE PTR [rax],al
   1400076b1:	add    BYTE PTR [rax],al
   1400076b3:	add    BYTE PTR [rcx],al
   1400076b5:	add    BYTE PTR [rax],al
   1400076b7:	add    BYTE PTR [rax+0x140007c],dh
   1400076bd:	add    BYTE PTR [rax],al
   1400076bf:	add    BYTE PTR [rax+0x1400029],ah
   1400076c5:	add    BYTE PTR [rax],al
   1400076c7:	add    dl,ah
   1400076c9:	pop    rsp
   1400076ca:	add    BYTE PTR [rax+0x1],al
   1400076cd:	add    BYTE PTR [rax],al
   1400076cf:	add    dl,ah
   1400076d1:	pop    rsp
   1400076d2:	add    BYTE PTR [rax+0x1],al
   1400076d5:	add    BYTE PTR [rax],al
   1400076d7:	add    BYTE PTR [rax],dl
   1400076d9:	(bad)  
   1400076da:	add    BYTE PTR [rax+0x1],al
   1400076dd:	add    BYTE PTR [rax],al
   1400076df:	add    BYTE PTR [rax],dh
   1400076e1:	(bad)  
   1400076e2:	add    BYTE PTR [rax+0x1],al
   1400076e5:	add    BYTE PTR [rax],al
   1400076e7:	add    BYTE PTR [rax+0x3f],dl
   1400076ea:	add    BYTE PTR [rax+0x1],al
   1400076ed:	add    BYTE PTR [rax],al
   1400076ef:	add    BYTE PTR [rax],ch
   1400076f1:	jge    0x1400076f3
   1400076f3:	rex add DWORD PTR [rax],eax
   1400076f6:	add    BYTE PTR [rax],al
   1400076f8:	adc    BYTE PTR [rcx],ch
   1400076fa:	add    BYTE PTR [rax+0x1],al
   1400076fd:	add    BYTE PTR [rax],al
   1400076ff:	add    BYTE PTR [rax+0x1400049],dl
   140007705:	add    BYTE PTR [rax],al
   140007707:	add    BYTE PTR [rax],dh
   140007709:	rex.W add BYTE PTR [rax+0x1],al
   14000770d:	add    BYTE PTR [rax],al
   14000770f:	add    BYTE PTR [rax],dl
   140007711:	(bad)  
   140007712:	add    BYTE PTR [rax+0x1],al
   140007715:	add    BYTE PTR [rax],al
   140007717:	add    BYTE PTR [rax],dh
   140007719:	(bad)  
   14000771a:	add    BYTE PTR [rax+0x1],al
   14000771d:	add    BYTE PTR [rax],al
   14000771f:	add    BYTE PTR [rax+0x3f],dl
   140007722:	add    BYTE PTR [rax+0x1],al
   140007725:	add    BYTE PTR [rax],al
   140007727:	add    BYTE PTR [rdi+0x65],ah
   14000772a:	outs   dx,BYTE PTR ds:[rsi]
   14000772b:	gs jb  0x140007797
   14000772e:	movsxd eax,DWORD PTR [rax]
   140007730:	jne    0x1400077a0
   140007732:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140007736:	outs   dx,BYTE PTR ds:[rsi]
   140007737:	and    BYTE PTR [rbp+0x72],ah
   14000773a:	jb     0x1400077ab
   14000773c:	jb     0x14000773e
   14000773e:	add    BYTE PTR [rax],al
   140007740:	test   al,0x7d
   140007742:	add    BYTE PTR [rax+0x1],al
   140007745:	add    BYTE PTR [rax],al
   140007747:	add    BYTE PTR [rax+0x29],al
   14000774a:	add    BYTE PTR [rax+0x1],al
   14000774d:	add    BYTE PTR [rax],al
   14000774f:	add    BYTE PTR [rax+0x1400049],ah
   140007755:	add    BYTE PTR [rax],al
   140007757:	add    BYTE PTR [rax+0x1400048],ah
   14000775d:	add    BYTE PTR [rax],al
   14000775f:	add    BYTE PTR [rax],dl
   140007761:	(bad)  
   140007762:	add    BYTE PTR [rax+0x1],al
   140007765:	add    BYTE PTR [rax],al
   140007767:	add    BYTE PTR [rax],dh
   140007769:	(bad)  
   14000776a:	add    BYTE PTR [rax+0x1],al
   14000776d:	add    BYTE PTR [rax],al
   14000776f:	add    BYTE PTR [rax+0x3f],dl
   140007772:	add    BYTE PTR [rax+0x1],al
   140007775:	add    BYTE PTR [rax],al
   140007777:	add    BYTE PTR [rcx+0x6f],ch
   14000777a:	jae    0x1400077f0
   14000777c:	jb     0x1400077e3
   14000777e:	(bad)  
   14000777f:	ins    DWORD PTR es:[rdi],dx
	...
   140007788:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   14000778f:	ins    DWORD PTR es:[rdi],dx
   140007790:	and    BYTE PTR [rbx+0x74],dh
   140007793:	jb     0x1400077fa
   140007795:	(bad)  
   140007796:	ins    DWORD PTR es:[rdi],dx
   140007797:	and    BYTE PTR [rbp+0x72],ah
   14000779a:	jb     0x14000780b
   14000779c:	jb     0x14000779e
   14000779e:	add    BYTE PTR [rax],al
   1400077a0:	xor    BYTE PTR [rsi+0x0],bh
   1400077a3:	rex add DWORD PTR [rax],eax
   1400077a6:	add    BYTE PTR [rax],al
   1400077a8:	jo     0x1400077d3
   1400077aa:	add    BYTE PTR [rax+0x1],al
   1400077ad:	add    BYTE PTR [rax],al
   1400077af:	add    BYTE PTR [rax+0x1400049],dh
   1400077b5:	add    BYTE PTR [rax],al
   1400077b7:	add    al,dh
   1400077b9:	rex.W add BYTE PTR [rax+0x1],al
   1400077bd:	add    BYTE PTR [rax],al
   1400077bf:	add    al,dl
   1400077c1:	add    BYTE PTR ds:[rax+0x1],al
   1400077c5:	add    BYTE PTR [rax],al
   1400077c7:	add    BYTE PTR [rax],dh
   1400077c9:	(bad)  
   1400077ca:	add    BYTE PTR [rax+0x1],al
   1400077cd:	add    BYTE PTR [rax],al
   1400077cf:	add    BYTE PTR [rax+0x3f],dl
   1400077d2:	add    BYTE PTR [rax+0x1],al
   1400077d5:	add    BYTE PTR [rax],al
   1400077d7:	add    BYTE PTR [rbx+0x79],dh
   1400077da:	jae    0x140007850
   1400077dc:	gs ins DWORD PTR es:[rdi],dx
   1400077de:	add    BYTE PTR [rax],al
   1400077e0:	mov    eax,0x140007e
   1400077e5:	add    BYTE PTR [rax],al
   1400077e7:	add    al,ah
   1400077e9:	(bad)  
   1400077ea:	add    BYTE PTR [rax+0x1],al
   1400077ed:	add    BYTE PTR [rax],al
   1400077ef:	add    BYTE PTR [rsi+0x140005b],al
   1400077f5:	add    BYTE PTR [rax],al
   1400077f7:	add    BYTE PTR [rbx+rbx*2+0x14000],cl
   1400077fe:	add    BYTE PTR [rax],al
   140007800:	xchg   edx,eax
   140007801:	pop    rbx
   140007802:	add    BYTE PTR [rax+0x1],al
   140007805:	add    BYTE PTR [rax],al
   140007807:	add    BYTE PTR [rax+0x140005b],bl
   14000780d:	add    BYTE PTR [rax],al
   14000780f:	add    BYTE PTR [rsi+0x140005b],bl
   140007815:	add    BYTE PTR [rax],al
   140007817:	add    BYTE PTR [rbx+rbx*2+0x14000],ah
   14000781e:	add    BYTE PTR [rax],al
   140007820:	stos   BYTE PTR es:[rdi],al
   140007821:	pop    rbx
   140007822:	add    BYTE PTR [rax+0x1],al
   140007825:	add    BYTE PTR [rax],al
   140007827:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000782b:	add    BYTE PTR [rdx+0x0],ah
   14000782e:	ins    DWORD PTR es:[rdi],dx
   14000782f:	add    BYTE PTR [rdi+0x0],dh
   140007832:	ins    BYTE PTR es:[rdi],dx
   140007833:	add    BYTE PTR [rbp+0x0],ch
   140007836:	add    BYTE PTR [edx+0x0],dh
   14000783a:	imul   eax,DWORD PTR [rax],0x70006d
   140007840:	ins    BYTE PTR es:[rdi],dx
   140007841:	add    BYTE PTR [rax],al
   140007843:	add    BYTE PTR [rip+0x74000a73],ah        # 0x1b40082bc
   140007849:	gs jae 0x1400078c0
   14000784c:	ins    DWORD PTR es:[rdi],dx
   14000784d:	outs   dx,DWORD PTR ds:[rsi]
   14000784e:	fs add BYTE PTR gs:[rax],al
   140007852:	add    BYTE PTR [rax],al
   140007854:	add    BYTE PTR [rax],al
   140007856:	add    BYTE PTR [rax],al
   140007858:	jbe    0x1400078bf
   14000785a:	jb     0x1400078be
   14000785c:	outs   dx,DWORD PTR ds:[rsi]
   14000785d:	jae    0x1400078c4
   14000785f:	add    BYTE PTR [rsi+0x6f],cl
   140007862:	and    BYTE PTR [rdi+0x65],dh
   140007865:	(bad)  
   140007866:	and    BYTE PTR [rdx+0x6f],dh
   140007869:	outs   dx,DWORD PTR ds:[rsi]
   14000786a:	je     0x14000788c
   14000786c:	ja     0x1400078cf
   14000786e:	jae    0x140007890
   140007870:	outs   dx,WORD PTR ds:[rsi]
   140007872:	jne    0x1400078e2
   140007874:	or     al,BYTE PTR fs:[rax]
   140007877:	add    BYTE PTR [rcx+0x42],al
   14000787a:	push   rbx
   14000787b:	pop    rdi
   14000787c:	push   rdx
   14000787d:	rex.WRXB
   14000787e:	rex.WRXB push r12
   140007880:	cmp    eax,0xa7325
   140007885:	add    BYTE PTR [rax],al
   140007887:	add    BYTE PTR [rcx+0x52],al
   14000788a:	rex.RXB push r14
   14000788c:	pop    rdi
   14000788d:	push   rax
   14000788e:	push   r12
   140007890:	cmp    rax,0xa7325
   140007896:	add    BYTE PTR [rax],al
   140007898:	jae    0x14000790e
   14000789a:	jb     0x140007905
   14000789c:	outs   dx,BYTE PTR ds:[rsi]
   14000789d:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   1400078a2:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   1400078a6:	add    BYTE PTR [ecx+0x6e],ch
   1400078aa:	jbe    0x14000790d
   1400078ac:	ins    BYTE PTR es:[rdi],dx
   1400078ad:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   1400078b5:	and    BYTE PTR [eax+0x6f],dh
   1400078b9:	jae    0x140007924
   1400078bb:	je     0x140007926
   1400078bd:	outs   dx,DWORD PTR ds:[rsi]
   1400078be:	outs   dx,BYTE PTR ds:[rsi]
   1400078bf:	add    BYTE PTR [rdx],ah
   1400078c1:	add    eax,0x21993
   1400078c6:	add    BYTE PTR [rax],al
   1400078c8:	rex.WR xchg rax,rax
	...
   1400078d2:	add    BYTE PTR [rax],al
   1400078d4:	add    eax,0x60000000
   1400078d9:	nop
   1400078da:	add    BYTE PTR [rax],al
   1400078dc:	and    BYTE PTR [rax],al
   1400078de:	add    BYTE PTR [rax],al
   1400078e0:	add    BYTE PTR [rax],al
   1400078e2:	add    BYTE PTR [rax],al
   1400078e4:	add    DWORD PTR [rax],eax
   1400078e6:	add    BYTE PTR [rax],al
   1400078e8:	and    al,BYTE PTR [rip+0x91993]        # 0x140099281
   1400078ee:	add    BYTE PTR [rax],al
   1400078f0:	test   al,0x90
	...
   1400078fa:	add    BYTE PTR [rax],al
   1400078fc:	or     al,0x0
   1400078fe:	add    BYTE PTR [rax],al
   140007900:	lock nop
   140007902:	add    BYTE PTR [rax],al
   140007904:	rol    BYTE PTR [rax],0x0
   140007907:	add    BYTE PTR [rax],al
   140007909:	add    BYTE PTR [rax],al
   14000790b:	add    BYTE PTR [rcx],al
   14000790d:	add    BYTE PTR [rax],al
   14000790f:	add    BYTE PTR [rdx],ah
   140007911:	add    eax,0x11993
   140007916:	add    BYTE PTR [rax],al
   140007918:	ins    BYTE PTR es:[rdi],dx
   140007919:	xchg   ecx,eax
	...
   140007922:	add    BYTE PTR [rax],al
   140007924:	add    eax,DWORD PTR [rax]
   140007926:	add    BYTE PTR [rax],al
   140007928:	js     0x1400078bb
   14000792a:	add    BYTE PTR [rax],al
   14000792c:	and    BYTE PTR [rax],al
   14000792e:	add    BYTE PTR [rax],al
   140007930:	add    BYTE PTR [rax],al
   140007932:	add    BYTE PTR [rax],al
   140007934:	add    DWORD PTR [rax],eax
   140007936:	add    BYTE PTR [rax],al
   140007938:	and    al,BYTE PTR [rip+0x11993]        # 0x1400192d1
   14000793e:	add    BYTE PTR [rax],al
   140007940:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007941:	xchg   ecx,eax
	...
   14000794a:	add    BYTE PTR [rax],al
   14000794c:	add    eax,DWORD PTR [rax]
   14000794e:	add    BYTE PTR [rax],al
   140007950:	mov    al,0x91
   140007952:	add    BYTE PTR [rax],al
   140007954:	and    BYTE PTR [rax],al
   140007956:	add    BYTE PTR [rax],al
   140007958:	add    BYTE PTR [rax],al
   14000795a:	add    BYTE PTR [rax],al
   14000795c:	add    DWORD PTR [rax],eax
   14000795e:	add    BYTE PTR [rax],al
   140007960:	and    al,BYTE PTR [rip+0x11993]        # 0x1400192f9
   140007966:	add    BYTE PTR [rax],al
   140007968:	and    al,0x92
	...
   140007972:	add    BYTE PTR [rax],al
   140007974:	add    eax,DWORD PTR [rax]
   140007976:	add    BYTE PTR [rax],al
   140007978:	xor    BYTE PTR [rdx+0x200000],dl
   14000797e:	add    BYTE PTR [rax],al
   140007980:	add    BYTE PTR [rax],al
   140007982:	add    BYTE PTR [rax],al
   140007984:	add    DWORD PTR [rax],eax
   140007986:	add    BYTE PTR [rax],al
   140007988:	and    al,BYTE PTR [rip+0x11993]        # 0x140019321
   14000798e:	add    BYTE PTR [rax],al
   140007990:	jo     0x140007924
	...
   14000799a:	add    BYTE PTR [rax],al
   14000799c:	add    eax,DWORD PTR [rax]
   14000799e:	add    BYTE PTR [rax],al
   1400079a0:	js     0x140007934
	...
   1400079aa:	add    BYTE PTR [rax],al
   1400079ac:	add    DWORD PTR [rax],eax
   1400079ae:	add    BYTE PTR [rax],al
   1400079b0:	cmp    BYTE PTR [rdi+0x0],0x40
   1400079b4:	add    DWORD PTR [rax],eax
   1400079b6:	add    BYTE PTR [rax],al
   1400079b8:	loopne 0x140007a0d
   1400079ba:	add    BYTE PTR [rax+0x1],al
   1400079bd:	add    BYTE PTR [rax],al
   1400079bf:	add    dl,bl
   1400079c1:	pop    rbx
   1400079c2:	add    BYTE PTR [rax+0x1],al
   1400079c5:	add    BYTE PTR [rax],al
   1400079c7:	add    BYTE PTR [rbp+0x78],al
   1400079ca:	movsxd esp,DWORD PTR [rbp+0x70]
   1400079cd:	je     0x140007a38
   1400079cf:	outs   dx,DWORD PTR ds:[rsi]
   1400079d0:	outs   dx,BYTE PTR ds:[rsi]
   1400079d1:	and    BYTE PTR [rcx+0x6e],ch
   1400079d4:	and    BYTE PTR [rdx+0x4e],cl
   1400079d7:	rex.WB and BYTE PTR [r11+0x61],spl
   1400079db:	ins    BYTE PTR es:[rdi],dx
   1400079dc:	ins    BYTE PTR es:[rdi],dx
   1400079dd:	add    BYTE PTR [rax],al
   1400079df:	add    BYTE PTR [rdx+0x4e],cl
   1400079e2:	rex.WB and BYTE PTR [r13+0x6e],al
   1400079e6:	jbe    0x140007a08
   1400079e8:	jo     0x140007a59
   1400079ea:	imul   ebp,DWORD PTR [rsi+0x74],0x69207265
   1400079f1:	jae    0x140007a13
   1400079f3:	outs   dx,BYTE PTR ds:[rsi]
   1400079f4:	jne    0x140007a62
   1400079f6:	ins    BYTE PTR es:[rdi],dx
   1400079f7:	and    BYTE PTR [rbp+rsi*2+0x72],ah
   1400079fb:	imul   ebp,DWORD PTR [rsi+0x67],0x72657320
   140007a02:	jbe    0x140007a6d
   140007a04:	movsxd esp,DWORD PTR [rbp+0x20]
   140007a07:	jb     0x140007a6e
   140007a09:	imul   esi,DWORD PTR [ebx+0x74],0x69746172
   140007a11:	outs   dx,DWORD PTR ds:[rsi]
   140007a12:	outs   dx,BYTE PTR ds:[rsi]
   140007a13:	add    BYTE PTR [rax],al
   140007a15:	add    BYTE PTR [rax],al
   140007a17:	add    BYTE PTR [rbx+0x6f],ah
   140007a1a:	ins    DWORD PTR es:[rdi],dx
   140007a1b:	(bad)  
   140007a1c:	ins    DWORD PTR es:[rdi],dx
   140007a1d:	(bad)  
   140007a1e:	je     0x140007a88
   140007a20:	ja     0x140007a91
   140007a22:	jb     0x140007a8f
   140007a24:	jae    0x140007a55
   140007a26:	ins    DWORD PTR es:[rdi],dx
   140007a27:	(bad)  
   140007a28:	je     0x140007a96
   140007a2a:	(bad)  
   140007a2b:	(bad)  
   140007a2c:	pop    rdi
   140007a2d:	ins    BYTE PTR es:[rdi],dx
   140007a2e:	outs   dx,DWORD PTR ds:[rsi]
   140007a2f:	imul   ebp,DWORD PTR [esi+0x2f],0x6c74614d
   140007a37:	(bad)  
   140007a38:	(bad)  
   140007a39:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140007a3b:	imul   ebp,DWORD PTR [esi+0x0],0x56292800
   140007a43:	add    BYTE PTR [rax],al
   140007a45:	add    BYTE PTR [rax],al
   140007a47:	add    BYTE PTR [rcx+0x6e],ch
   140007a4a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140007a52:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140007a54:	imul   ebp,DWORD PTR [esi+0x53],0x69767265
   140007a5c:	movsxd esp,DWORD PTR [rbp+0x73]
   140007a5f:	add    BYTE PTR [rbx+0x6f],ah
   140007a62:	ins    DWORD PTR es:[rdi],dx
   140007a63:	(bad)  
   140007a64:	ins    DWORD PTR es:[rdi],dx
   140007a65:	(bad)  
   140007a66:	je     0x140007ad0
   140007a68:	ja     0x140007ad9
   140007a6a:	jb     0x140007ad7
   140007a6c:	jae    0x140007a9d
   140007a6e:	push   0x69
   140007a70:	je     0x140007ad1
   140007a72:	(bad)  
   140007a73:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140007a77:	(bad)  
   140007a78:	je     0x140007ae3
   140007a7a:	outs   dx,DWORD PTR ds:[rsi]
   140007a7b:	outs   dx,BYTE PTR ds:[rsi]
   140007a7c:	(bad)  
   140007a7d:	rex.WX
   140007a7e:	rex.WB push r12
   140007a80:	push   rbp
   140007a81:	je     0x140007aec
   140007a83:	ins    BYTE PTR es:[rdi],dx
   140007a84:	add    BYTE PTR [rax],al
   140007a86:	add    BYTE PTR [rax],al
   140007a88:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140007a8f:	imul   edi,DWORD PTR [rdx+0x65],0x5374694a
   140007a96:	gs jb  0x140007b0f
   140007a99:	imul   esp,DWORD PTR [rbx+0x65],0x73
   140007aa0:	rex.WRB
   140007aa1:	push   r12
   140007aa3:	rex.WR
   140007aa4:	rex.B
   140007aa5:	rex.X and BYTE PTR [rax],al
   140007aa8:	outs   dx,BYTE PTR gs:[rsi]
   140007aaa:	sub    eax,0x7375
   140007aaf:	add    BYTE PTR [rbp+0x69],dh
   140007ab2:	(bad)  
   140007ab3:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   140007aba:	(bad)  
   140007abb:	push   0x69
   140007abd:	je     0x140007b1e
   140007abf:	(bad)  
   140007ac0:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140007ac4:	(bad)  
   140007ac5:	je     0x140007b30
   140007ac7:	outs   dx,DWORD PTR ds:[rsi]
   140007ac8:	outs   dx,BYTE PTR ds:[rsi]
   140007ac9:	(bad)  
   140007aca:	push   0x69
   140007acc:	je     0x140007b2d
   140007ace:	(bad)  
   140007acf:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140007ad3:	(bad)  
   140007ad4:	je     0x140007b3f
   140007ad6:	outs   dx,DWORD PTR ds:[rsi]
   140007ad7:	outs   dx,BYTE PTR ds:[rsi]
   140007ad8:	(bad)  
   140007ad9:	imul   ebp,DWORD PTR [rsi+0x64],0x682e7865
   140007ae0:	je     0x140007b4f
   140007ae2:	ins    BYTE PTR es:[rdi],dx
   140007ae3:	add    BYTE PTR [rax],al
   140007ae5:	add    BYTE PTR [rax],al
   140007ae7:	add    BYTE PTR [rdx+0x61],ch
   140007aea:	jbe    0x140007b4d
   140007aec:	(bad)  
   140007aed:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140007af0:	imul   sp,WORD PTR [rdi+0x2f],0x696a
   140007af6:	je     0x140007b57
   140007af8:	(bad)  
   140007af9:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140007afd:	(bad)  
   140007afe:	je     0x140007b69
   140007b00:	outs   dx,DWORD PTR ds:[rsi]
   140007b01:	outs   dx,BYTE PTR ds:[rsi]
   140007b02:	(bad)  
   140007b03:	jo     0x140007b66
   140007b05:	je     0x140007b6f
   140007b07:	ins    BYTE PTR es:[rdi],dx
   140007b08:	imul   esi,DWORD PTR [rbx+0x74],0x72616a2e
   140007b0f:	add    BYTE PTR [rax],al
   140007b11:	add    BYTE PTR [rax],0x40
   140007b14:	add    DWORD PTR [rax],eax
   140007b16:	add    BYTE PTR [rax],al
   140007b18:	loop   0x140007b76
   140007b1a:	add    BYTE PTR [rax+0x1],al
   140007b1d:	add    BYTE PTR [rax],al
   140007b1f:	add    dl,ah
   140007b21:	pop    rsp
   140007b22:	add    BYTE PTR [rax+0x1],al
   140007b25:	add    BYTE PTR [rax],al
   140007b27:	add    dl,ah
   140007b29:	pop    rsp
   140007b2a:	add    BYTE PTR [rax+0x1],al
   140007b2d:	add    BYTE PTR [rax],al
   140007b2f:	add    dl,ah
   140007b31:	pop    rsp
   140007b32:	add    BYTE PTR [rax+0x1],al
   140007b35:	add    BYTE PTR [rax],al
   140007b37:	add    dl,ah
   140007b39:	pop    rsp
   140007b3a:	add    BYTE PTR [rax+0x1],al
   140007b3d:	add    BYTE PTR [rax],al
   140007b3f:	add    BYTE PTR [rax+0x54],ah
   140007b42:	add    BYTE PTR [rax+0x1],al
   140007b45:	add    BYTE PTR [rax],al
   140007b47:	add    dl,ah
   140007b49:	pop    rsp
   140007b4a:	add    BYTE PTR [rax+0x1],al
   140007b4d:	add    BYTE PTR [rax],al
   140007b4f:	add    BYTE PTR [rax-0x80],bh
   140007b52:	add    BYTE PTR [rax+0x1],al
   140007b55:	add    BYTE PTR [rax],al
   140007b57:	add    BYTE PTR [rax+0x55],ah
   140007b5a:	add    BYTE PTR [rax+0x1],al
   140007b5d:	add    BYTE PTR [rax],al
   140007b5f:	add    BYTE PTR [rax],ah
   140007b61:	push   rsi
   140007b62:	add    BYTE PTR [rax+0x1],al
   140007b65:	add    BYTE PTR [rax],al
   140007b67:	add    al,dl
   140007b69:	push   rbp
   140007b6a:	add    BYTE PTR [rax+0x1],al
   140007b6d:	add    BYTE PTR [rax],al
   140007b6f:	add    BYTE PTR [rax+0x56],dh
   140007b72:	add    BYTE PTR [rax+0x1],al
   140007b75:	add    BYTE PTR [rax],al
   140007b77:	add    BYTE PTR [rax+0x1400055],ah
   140007b7d:	add    BYTE PTR [rax],al
   140007b7f:	add    BYTE PTR [rax+0x1400054],dl
   140007b85:	add    BYTE PTR [rax],al
   140007b87:	add    BYTE PTR [rax],al
   140007b89:	push   rsi
   140007b8a:	add    BYTE PTR [rax+0x1],al
   140007b8d:	add    BYTE PTR [rax],al
   140007b8f:	add    BYTE PTR [rcx],bh
   140007b91:	xor    ch,BYTE PTR cs:[rsi]
   140007b94:	xor    BYTE PTR [rsi],ch
   140007b96:	xor    eax,0x34363831
   140007b9b:	xor    DWORD PTR [rax],eax
   140007b9d:	add    BYTE PTR [rax],al
   140007b9f:	add    BYTE PTR [rdx+0x61],cl
   140007ba2:	outs   dx,BYTE PTR ds:[rsi]
   140007ba3:	and    BYTE PTR [rcx],dh
   140007ba5:	cmp    DWORD PTR [rax],esp
   140007ba7:	xor    dh,BYTE PTR [rax]
   140007ba9:	xor    DWORD PTR [rdi],esi
   140007bab:	add    BYTE PTR [rax],al
   140007bad:	add    BYTE PTR [rax],al
   140007baf:	add    BYTE PTR [rdx+0x69],ah
   140007bb2:	outs   dx,BYTE PTR ds:[rsi]
   140007bb3:	pop    rsp
   140007bb4:	ja     0x140007c1f
   140007bb6:	outs   dx,BYTE PTR ds:[rsi]
   140007bb7:	ss xor al,0x5c
   140007bba:	ins    DWORD PTR es:[rdi],dx
   140007bbb:	ja     0x140007c1c
   140007bbd:	xor    al,0x61
   140007bbf:	cs gs js 0x140007c28
   140007bc3:	add    BYTE PTR [rax],al
   140007bc5:	add    DWORD PTR [rax],eax
   140007bc7:	add    al,bh
   140007bc9:	add    BYTE PTR [rax],0x40
   140007bcc:	add    DWORD PTR [rax],eax
   140007bce:	add    BYTE PTR [rax],al
   140007bd0:	pop    rsp
   140007bd1:	pop    rsi
   140007bd2:	add    BYTE PTR [rax+0x1],al
   140007bd5:	add    BYTE PTR [rax],al
   140007bd7:	add    BYTE PTR [rax],al
   140007bd9:	add    BYTE PTR [rax],al
   140007bdb:	add    BYTE PTR [rcx],al
   140007bdd:	add    BYTE PTR [rax],al
   140007bdf:	add    BYTE PTR [rdx],al
   140007be1:	add    BYTE PTR [rax],al
   140007be3:	add    BYTE PTR [rbx],al
   140007be5:	add    BYTE PTR [rax],al
   140007be7:	add    BYTE PTR [rax+rax*1],al
   140007bea:	add    BYTE PTR [rax],al
   140007bec:	add    BYTE PTR [rax],al
   140007bee:	add    BYTE PTR [rax],al
   140007bf0:	jo     0x140007bf2
	...
   140007c46:	add    BYTE PTR [rax],al
   140007c48:	mov    al,0x0
   140007c4b:	rex add DWORD PTR [rax],eax
	...
   140007c5e:	add    BYTE PTR [rax],al
   140007c60:	push   rdx
   140007c61:	push   rbx
   140007c62:	rex.R push rbx
   140007c64:	rex.WX
   140007c65:	rex.W (bad) 
   140007c67:	shl    DWORD PTR [rip+0xffffffffb0444676],1        # 0xf044c2e3
   140007c6d:	xor    BYTE PTR [rax-0x1db8fefc],bl
   140007c73:	mov    dl,0x1
   140007c75:	add    BYTE PTR [rax],al
   140007c77:	add    BYTE PTR [rdx+0x3a],al
   140007c7a:	pop    rsp
   140007c7b:	ins    DWORD PTR es:[rdi],dx
   140007c7c:	(bad)  
   140007c7d:	je     0x140007ceb
   140007c7f:	(bad)  
   140007c80:	(bad)  
   140007c81:	pop    rsp
   140007c82:	(bad)  
   140007c83:	imul   ebp,DWORD PTR [rsi+0x5c],0x366e6977
   140007c8a:	xor    al,0x5c
   140007c8c:	ins    DWORD PTR es:[rdi],dx
   140007c8d:	ja     0x140007cee
   140007c8f:	xor    al,0x61
   140007c91:	cs jo  0x140007cf8
   140007c94:	(bad)  
   140007c95:	add    BYTE PTR [rax],al
   140007c97:	add    BYTE PTR [rax],al
   140007c99:	add    BYTE PTR [rax],al
   140007c9b:	add    BYTE PTR [rdi],dl
   140007c9d:	add    BYTE PTR [rax],al
   140007c9f:	add    BYTE PTR [rax+rax*1],dl
	...
   140007cae:	add    BYTE PTR [rax],al
   140007cb0:	add    DWORD PTR [rax],eax
	...
   140007cba:	add    BYTE PTR [rax],al
   140007cbc:	js     0x140007c6e
   140007cbe:	add    BYTE PTR [rax],al
   140007cc0:	fdivr  DWORD PTR [rax+rax*1+0x0]
   140007cc4:	mov    al,0x7c
	...
   140007cde:	add    BYTE PTR [rax],al
   140007ce0:	add    DWORD PTR [rax],eax
   140007ce2:	add    BYTE PTR [rax],al
   140007ce4:	lock jl 0x140007ce7
	...
   140007cef:	add    BYTE PTR [rax],al
   140007cf1:	jge    0x140007cf3
	...
   140007cff:	add    BYTE PTR [rax-0x50],bh
	...
   140007d0a:	add    BYTE PTR [rax],al
   140007d0c:	(bad)  
   140007d0d:	(bad)  
   140007d0e:	(bad)  
   140007d0f:	inc    DWORD PTR [rax]
   140007d11:	add    BYTE PTR [rax],al
   140007d13:	add    BYTE PTR [rax+0x0],al
   140007d16:	add    BYTE PTR [rax],al
   140007d18:	fdivr  DWORD PTR [rax+rax*1+0x0]
	...
   140007d28:	add    DWORD PTR [rax],eax
	...
   140007d32:	add    BYTE PTR [rax],al
   140007d34:	test   al,0xb0
   140007d36:	add    BYTE PTR [rax],al
   140007d38:	push   rax
   140007d39:	jge    0x140007d3b
   140007d3b:	add    BYTE PTR [rax],ch
   140007d3d:	jge    0x140007d3f
	...
   140007d57:	add    BYTE PTR [rdx],al
   140007d59:	add    BYTE PTR [rax],al
   140007d5b:	add    BYTE PTR [rax+0x7d],ch
	...
   140007d66:	add    BYTE PTR [rax],al
   140007d68:	cmp    BYTE PTR [rbp+0x0],0x0
   140007d6c:	add    BYTE PTR [rbp+0x0],bh
	...
   140007d7f:	add    BYTE PTR [rax+0x10000b0],ch
   140007d85:	add    BYTE PTR [rax],al
   140007d87:	add    BYTE PTR [rax],al
   140007d89:	add    BYTE PTR [rax],al
   140007d8b:	add    bh,bh
   140007d8d:	(bad)  
   140007d8e:	(bad)  
   140007d8f:	inc    DWORD PTR [rax]
   140007d91:	add    BYTE PTR [rax],al
   140007d93:	add    BYTE PTR [rax+0x0],al
   140007d96:	add    BYTE PTR [rax],al
   140007d98:	push   rax
   140007d99:	jge    0x140007d9b
	...
   140007da7:	add    BYTE PTR [rcx],al
	...
   140007db1:	add    BYTE PTR [rax],al
   140007db3:	add    al,ah
   140007db5:	mov    al,0x0
   140007db7:	add    al,dl
   140007db9:	jge    0x140007dbb
   140007dbb:	add    BYTE PTR [rax+0x7d],ch
	...
   140007dd5:	add    BYTE PTR [rax],al
   140007dd7:	add    BYTE PTR [rbx],al
   140007dd9:	add    BYTE PTR [rax],al
   140007ddb:	add    al,ch
   140007ddd:	jge    0x140007ddf
	...
   140007de7:	add    BYTE PTR [rax],cl
   140007de9:	jle    0x140007deb
   140007deb:	add    BYTE PTR [rax+0x7d],al
   140007df1:	jge    0x140007df3
	...
   140007e07:	add    al,ah
   140007e09:	mov    al,0x0
   140007e0b:	add    BYTE PTR [rdx],al
   140007e0d:	add    BYTE PTR [rax],al
   140007e0f:	add    BYTE PTR [rax],al
   140007e11:	add    BYTE PTR [rax],al
   140007e13:	add    bh,bh
   140007e15:	(bad)  
   140007e16:	(bad)  
   140007e17:	inc    DWORD PTR [rax]
   140007e19:	add    BYTE PTR [rax],al
   140007e1b:	add    BYTE PTR [rax+0x0],al
   140007e1e:	add    BYTE PTR [rax],al
   140007e20:	sar    BYTE PTR [rbp+0x0],1
	...
   140007e2f:	add    BYTE PTR [rcx],al
	...
   140007e39:	add    BYTE PTR [rax],al
   140007e3b:	add    BYTE PTR [rax],bl
   140007e3d:	mov    cl,0x0
   140007e3f:	add    BYTE PTR [rax+0x7e],bl
   140007e42:	add    BYTE PTR [rax],al
   140007e44:	xor    BYTE PTR [rsi+0x0],bh
	...
   140007e5f:	add    BYTE PTR [rbx],al
   140007e61:	add    BYTE PTR [rax],al
   140007e63:	add    BYTE PTR [rax+0x7e],dh
	...
   140007e6e:	add    BYTE PTR [rax],al
   140007e70:	nop
   140007e71:	jle    0x140007e73
   140007e73:	add    BYTE PTR [rax+0x7d],al
   140007e79:	jge    0x140007e7b
	...
   140007e8f:	add    BYTE PTR [rax],bl
   140007e91:	mov    cl,0x0
   140007e93:	add    BYTE PTR [rdx],al
   140007e95:	add    BYTE PTR [rax],al
   140007e97:	add    BYTE PTR [rax],al
   140007e99:	add    BYTE PTR [rax],al
   140007e9b:	add    bh,bh
   140007e9d:	(bad)  
   140007e9e:	(bad)  
   140007e9f:	inc    DWORD PTR [rax]
   140007ea1:	add    BYTE PTR [rax],al
   140007ea3:	add    BYTE PTR [rax+0x0],al
   140007ea6:	add    BYTE PTR [rax],al
   140007ea8:	pop    rax
   140007ea9:	jle    0x140007eab
	...
   140007eb7:	add    BYTE PTR [rcx],al
	...
   140007ec1:	add    BYTE PTR [rax],al
   140007ec3:	add    BYTE PTR [rax-0x4f],dl
   140007ec6:	add    BYTE PTR [rax],al
   140007ec8:	loopne 0x140007f48
   140007eca:	add    BYTE PTR [rax],al
   140007ecc:	mov    eax,0x7e
	...
   140007ee5:	add    BYTE PTR [rax],al
   140007ee7:	add    BYTE PTR [rcx],al
   140007ee9:	add    BYTE PTR [rax],al
   140007eeb:	add    al,bh
   140007eed:	jle    0x140007eef
	...
   140007ef7:	add    BYTE PTR [rax],cl
   140007ef9:	jg     0x140007efb
	...
   140007f07:	add    BYTE PTR [rax-0x4f],dl
	...
   140007f12:	add    BYTE PTR [rax],al
   140007f14:	(bad)  
   140007f15:	(bad)  
   140007f16:	(bad)  
   140007f17:	inc    DWORD PTR [rax]
   140007f19:	add    BYTE PTR [rax],al
   140007f1b:	add    BYTE PTR [rax+0x0],al
   140007f1e:	add    BYTE PTR [rax],al
   140007f20:	loopne 0x140007fa0
	...
   140007f2e:	add    BYTE PTR [rax],al
   140007f30:	push   rax
   140007f31:	mov    al,0x0
	...
   140007f3b:	add    bh,bh
   140007f3d:	(bad)  
   140007f3e:	(bad)  
   140007f3f:	inc    DWORD PTR [rax]
   140007f41:	add    BYTE PTR [rax],al
   140007f43:	add    BYTE PTR [rax+0x0],al
   140007f46:	add    BYTE PTR [rax],al
   140007f48:	pop    rax
   140007f49:	jg     0x140007f4b
	...
   140007f5f:	add    BYTE PTR [rcx],al
   140007f61:	add    BYTE PTR [rax],al
   140007f63:	add    BYTE PTR [rax+0x7f],dh
	...
   140007f6e:	add    BYTE PTR [rax],al
   140007f70:	xor    BYTE PTR [rdi+0x0],bh
	...
   140007f7f:	add    BYTE PTR [rcx],al
	...
   140007f89:	add    BYTE PTR [rax],al
   140007f8b:	add    BYTE PTR [rax-0x57ffff4f],cl
   140007f91:	jg     0x140007f93
   140007f93:	add    BYTE PTR [rax+0x7f],al
	...
   140007fad:	add    BYTE PTR [rax],al
   140007faf:	add    BYTE PTR [rdx],al
   140007fb1:	add    BYTE PTR [rax],al
   140007fb3:	add    al,al
   140007fb5:	jg     0x140007fb7
	...
   140007fbf:	add    al,bl
   140007fc1:	jg     0x140007fc3
   140007fc3:	add    BYTE PTR [rax],dh
   140007fc5:	jg     0x140007fc7
	...
   140007fd7:	add    BYTE PTR [rax+0x10000b1],cl
   140007fdd:	add    BYTE PTR [rax],al
   140007fdf:	add    BYTE PTR [rax],al
   140007fe1:	add    BYTE PTR [rax],al
   140007fe3:	add    bh,bh
   140007fe5:	(bad)  
   140007fe6:	(bad)  
   140007fe7:	inc    DWORD PTR [rax]
   140007fe9:	add    BYTE PTR [rax],al
   140007feb:	add    BYTE PTR [rax+0x0],al
   140007fee:	add    BYTE PTR [rax],al
   140007ff0:	test   al,0x7f
	...
   140007ffe:	add    BYTE PTR [rax],al
   140008000:	add    DWORD PTR [rax],eax
	...
   14000800a:	add    BYTE PTR [rax],al
   14000800c:	loopne 0x140007fbf
   14000800e:	add    BYTE PTR [rax],al
   140008010:	sub    BYTE PTR [rax-0x80000000],al
	...
   14000802e:	add    BYTE PTR [rax],al
   140008030:	add    DWORD PTR [rax],eax
   140008032:	add    BYTE PTR [rax],al
   140008034:	rex add BYTE PTR [rax],0x0
	...
   140008040:	push   rax
   140008041:	add    BYTE PTR [rax],0x0
	...
   140008050:	loopne 0x140008003
	...
   14000805a:	add    BYTE PTR [rax],al
   14000805c:	(bad)  
   14000805d:	(bad)  
   14000805e:	(bad)  
   14000805f:	inc    DWORD PTR [rax]
   140008061:	add    BYTE PTR [rax],al
   140008063:	add    BYTE PTR [rax+0x0],al
   140008066:	add    BYTE PTR [rax],al
   140008068:	sub    BYTE PTR [rax+0x0],al
	...
   140008076:	add    BYTE PTR [rax],al
   140008078:	add    DWORD PTR [rax],eax
	...
   140008082:	add    BYTE PTR [rax],al
   140008084:	and    BYTE PTR [rdx-0x7f600000],dh
   14000808a:	add    BYTE PTR [rax],al
   14000808c:	js     0x14000800e
	...
   1400080a6:	add    BYTE PTR [rax],al
   1400080a8:	add    al,BYTE PTR [rax]
   1400080aa:	add    BYTE PTR [rax],al
   1400080ac:	mov    eax,0x80
   1400080b1:	add    BYTE PTR [rax],al
   1400080b3:	add    BYTE PTR [rax],al
   1400080b5:	add    BYTE PTR [rax],al
   1400080b7:	add    al,dl
   1400080b9:	add    BYTE PTR [rax],0x0
   1400080bc:	push   rax
   1400080bd:	add    BYTE PTR [rax],0x0
	...
   1400080d0:	and    BYTE PTR [rdx+0x10000],dh
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	add    BYTE PTR [rax],al
   1400080da:	add    BYTE PTR [rax],al
   1400080dc:	(bad)  
   1400080dd:	(bad)  
   1400080de:	(bad)  
   1400080df:	inc    DWORD PTR [rax]
   1400080e1:	add    BYTE PTR [rax],al
   1400080e3:	add    BYTE PTR [rax+0x0],al
   1400080e6:	add    BYTE PTR [rax],al
   1400080e8:	movabs al,ds:0x80
   1400080f1:	add    BYTE PTR [rax],al
   1400080f3:	add    BYTE PTR [rax],al
   1400080f5:	add    BYTE PTR [rax],al
   1400080f7:	add    BYTE PTR [rcx],al
	...
   140008101:	add    BYTE PTR [rax],al
   140008103:	add    BYTE PTR [rax+0x200000b2],bh
   140008109:	add    DWORD PTR [rax],0x80f800
	...
   140008127:	add    BYTE PTR [rcx],al
   140008129:	add    BYTE PTR [rax],al
   14000812b:	add    BYTE PTR [rax],bh
   14000812d:	add    DWORD PTR [rax],0x0
   140008133:	add    BYTE PTR [rax],al
   140008135:	add    BYTE PTR [rax],al
   140008137:	add    BYTE PTR [rax-0x7f],cl
	...
   140008146:	add    BYTE PTR [rax],al
   140008148:	mov    eax,0xb2
   14000814d:	add    BYTE PTR [rax],al
   14000814f:	add    BYTE PTR [rax],al
   140008151:	add    BYTE PTR [rax],al
   140008153:	add    bh,bh
   140008155:	(bad)  
   140008156:	(bad)  
   140008157:	inc    DWORD PTR [rax]
   140008159:	add    BYTE PTR [rax],al
   14000815b:	add    BYTE PTR [rax+0x0],al
   14000815e:	add    BYTE PTR [rax],al
   140008160:	and    BYTE PTR [rcx+0x0],al
	...
   14000818e:	add    BYTE PTR [rax],al
   140008190:	add    DWORD PTR [rsi],eax
   140008192:	add    al,BYTE PTR [rax]
   140008194:	(bad)  
   140008195:	xor    al,BYTE PTR [rdx]
   140008197:	xor    BYTE PTR [rcx],al
   140008199:	(bad)  
   14000819a:	add    al,BYTE PTR [rax]
   14000819c:	(bad)  
   14000819d:	xor    al,BYTE PTR [rdx]
   14000819f:	xor    BYTE PTR [rcx],al
   1400081a1:	(bad)  
   1400081a2:	add    al,BYTE PTR [rax]
   1400081a4:	(bad)  
   1400081a5:	xor    al,BYTE PTR [rdx]
   1400081a7:	xor    BYTE PTR [rcx],al
   1400081a9:	add    al,0x1
   1400081ab:	add    BYTE PTR [rdx+rax*2],al
   1400081ae:	add    BYTE PTR [rax],al
   1400081b0:	add    DWORD PTR [rcx+rax*1],eax
   1400081b3:	add    BYTE PTR [rdx+rax*2],al
   1400081b6:	add    BYTE PTR [rax],al
   1400081b8:	add    DWORD PTR [rsi],eax
   1400081ba:	add    al,BYTE PTR [rax]
   1400081bc:	(bad)  
   1400081bd:	xor    al,BYTE PTR [rdx]
   1400081bf:	xor    BYTE PTR [rcx],al
   1400081c1:	(bad)  
   1400081c2:	add    al,BYTE PTR [rax]
   1400081c4:	(bad)  
   1400081c5:	xor    al,BYTE PTR [rdx]
   1400081c7:	xor    BYTE PTR [rcx],al
   1400081c9:	or     al,BYTE PTR [rax+rax*1]
   1400081cc:	or     dh,BYTE PTR [rsi+rax*1]
   1400081cf:	add    BYTE PTR [rdx],cl
   1400081d1:	xor    al,BYTE PTR [rsi]
   1400081d3:	jo     0x1400081d6
   1400081d5:	or     al,BYTE PTR [rax+rax*1]
   1400081d8:	or     dh,BYTE PTR [rsi+rax*1]
   1400081db:	add    BYTE PTR [rdx],cl
   1400081dd:	xor    al,BYTE PTR [rsi]
   1400081df:	jo     0x1400081e2
   1400081e1:	(bad)  
   1400081e2:	add    al,BYTE PTR [rax]
   1400081e4:	(bad)  
   1400081e5:	xor    al,BYTE PTR [rdx]
   1400081e7:	xor    BYTE PTR [rcx],al
   1400081e9:	(bad)  
   1400081ea:	add    al,BYTE PTR [rax]
   1400081ec:	(bad)  
   1400081ed:	xor    al,BYTE PTR [rdx]
   1400081ef:	xor    BYTE PTR [rcx],al
   1400081f1:	adc    al,0x8
   1400081f3:	add    BYTE PTR [rsp+riz*2],dl
   1400081f6:	or     BYTE PTR [rax],al
   1400081f8:	adc    al,0x54
   1400081fa:	(bad)  
   1400081fb:	add    BYTE PTR [rsp+rsi*1],dl
   1400081fe:	(bad)  
   1400081ff:	add    BYTE PTR [rdx+rsi*1],dl
   140008202:	adc    BYTE PTR [rax+0x1],dh
   140008205:	clts   
   140008207:	add    BYTE PTR [rdi],cl
   140008209:	fs (bad) 
   14000820b:	add    BYTE PTR [rdi],cl
   14000820d:	xor    al,0x6
   14000820f:	add    BYTE PTR [rdi],cl
   140008211:	xor    cl,BYTE PTR [rbx]
   140008213:	jo     0x140008216
   140008215:	add    al,0x1
   140008217:	add    BYTE PTR [rdx+rax*2],al
   14000821a:	add    BYTE PTR [rax],al
   14000821c:	add    DWORD PTR [rdx],ecx
   14000821e:	add    al,0x0
   140008220:	or     dh,BYTE PTR [rsi+rax*1]
   140008223:	add    BYTE PTR [rdx],cl
   140008225:	xor    al,BYTE PTR [rsi]
   140008227:	jo     0x14000822a
   140008229:	clts   
   14000822b:	add    BYTE PTR [rdi],cl
   14000822d:	fs (bad) 
   14000822f:	add    BYTE PTR [rdi],cl
   140008231:	xor    al,0x6
   140008233:	add    BYTE PTR [rdi],cl
   140008235:	xor    cl,BYTE PTR [rbx]
   140008237:	jo     0x14000823a
   140008239:	add    al,0x1
   14000823b:	add    BYTE PTR [rdx+riz*2],al
   14000823e:	add    BYTE PTR [rax],al
   140008240:	add    DWORD PTR [rsi],eax
   140008242:	add    al,BYTE PTR [rax]
   140008244:	(bad)  
   140008245:	xor    al,BYTE PTR [rdx]
   140008247:	xor    BYTE PTR [rcx],ah
   140008249:	or     al,BYTE PTR [rax+rax*1]
   14000824c:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   140008250:	add    eax,0x80000664
   140008255:	cmp    eax,0x3da30000
   14000825a:	add    BYTE PTR [rax],al
   14000825c:	rex (bad) 
   14000825e:	add    BYTE PTR [rax],al
   140008260:	and    DWORD PTR [rax],eax
   140008262:	add    al,0x0
   140008264:	add    BYTE PTR [rdi+rax*1+0x0],dh
   140008268:	add    BYTE PTR [rsi+rax*1+0x0],ah
   14000826c:	cmp    BYTE PTR [rip+0x3da30000],0x0        # 0x17da38273
   140008273:	add    BYTE PTR [rax-0x7e],al
   140008276:	add    BYTE PTR [rax],al
   140008278:	sbb    DWORD PTR [rcx],esp
   14000827a:	add    eax,0x14621800
   14000827f:	loopne 0x140008293
   140008281:	jo     0x140008294
   140008283:	(bad)  
   140008284:	adc    BYTE PTR [rax],dh
   140008286:	add    BYTE PTR [rax],al
   140008288:	ss pop rsi
   14000828a:	add    BYTE PTR [rax],al
   14000828c:	call   0x13f008304
   140008291:	(bad)  
   140008292:	(bad)  
   140008293:	inc    DWORD PTR [rax]
   140008295:	add    BYTE PTR [rax],al
   140008297:	add    bh,bh
   140008299:	(bad)  
   14000829a:	(bad)  
   14000829b:	inc    DWORD PTR [rax]
   14000829d:	add    BYTE PTR [rax],al
   14000829f:	add    BYTE PTR [rcx],al
   1400082a1:	add    BYTE PTR [rax],al
   1400082a3:	add    BYTE PTR [rax],al
   1400082a5:	add    BYTE PTR [rax],al
   1400082a7:	add    BYTE PTR [rcx],al
	...
   1400082b5:	add    BYTE PTR [rax],al
   1400082b7:	add    BYTE PTR [rbx],al
   1400082b9:	add    BYTE PTR [rax],al
   1400082bb:	add    BYTE PTR [rcx],al
   1400082bd:	add    BYTE PTR [rax],al
   1400082bf:	add    al,bl
   1400082c1:	(bad)  
   1400082c2:	add    BYTE PTR [rax],al
   1400082c4:	add    al,BYTE PTR [rax]
   1400082c6:	add    BYTE PTR [rax],al
   1400082c8:	add    al,BYTE PTR [rax]
   1400082ca:	add    BYTE PTR [rax],al
   1400082cc:	add    eax,DWORD PTR [rax]
   1400082ce:	add    BYTE PTR [rax],al
   1400082d0:	add    DWORD PTR [rax],eax
   1400082d2:	add    BYTE PTR [rax],al
   1400082d4:	in     al,dx
   1400082d5:	(bad)  
   1400082d6:	add    BYTE PTR [rax],al
   1400082d8:	add    BYTE PTR [rax],al
	...
   1400082e3:	add    BYTE PTR [rax+0x67],al
   1400082e6:	add    BYTE PTR [rax],al
   1400082e8:	cmp    BYTE PTR [rax],al
   1400082ea:	add    BYTE PTR [rax],al
   1400082ec:	add    BYTE PTR [rax],al
	...
   1400082f7:	add    BYTE PTR [rdi+riz*2+0x480000],al
   1400082fe:	add    BYTE PTR [rax],al
   140008300:	nop
   140008301:	sub    eax,DWORD PTR [rax]
   140008303:	add    bh,bh
   140008305:	(bad)  
   140008306:	(bad)  
   140008307:	(bad)  
   140008308:	(bad)  
   140008309:	sub    eax,DWORD PTR [rax]
   14000830b:	add    BYTE PTR [rax],al
   14000830d:	add    BYTE PTR [rax],al
   14000830f:	add    BYTE PTR [rsp+rbp*1],ah
   140008312:	add    BYTE PTR [rax],al
   140008314:	(bad)  
   140008315:	(bad)  
   140008316:	(bad)  
   140008317:	inc    DWORD PTR [rax+0x67]
   14000831a:	add    BYTE PTR [rax],al
   14000831c:	add    BYTE PTR [rax],al
   14000831e:	add    BYTE PTR [rax],al
   140008320:	rex.WRB
   140008321:	add    BYTE PTR [eax],al
   140008324:	add    DWORD PTR [rax],eax
   140008326:	add    BYTE PTR [rax],al
   140008328:	push   rbp
   140008329:	add    BYTE PTR [eax],al
   14000832c:	add    al,BYTE PTR [rax]
   14000832e:	add    BYTE PTR [rax],al
   140008330:	jbe    0x140008399
   140008332:	add    BYTE PTR [rax],al
   140008334:	add    BYTE PTR [rax],al
   140008336:	add    BYTE PTR [rax],al
   140008338:	xchg   edx,eax
   140008339:	add    BYTE PTR [eax],al
   14000833c:	add    eax,DWORD PTR [rax]
   14000833e:	add    BYTE PTR [rax],al
   140008340:	sbb    DWORD PTR [rdx],ecx
   140008342:	add    al,BYTE PTR [rax]
   140008344:	or     dh,BYTE PTR [rdx]
   140008346:	(bad)  
   140008347:	push   rax
   140008348:	ss pop rsi
   14000834a:	add    BYTE PTR [rax],al
   14000834c:	call   0x1590083c4
   140008351:	or     eax,DWORD PTR [rbx]
   140008353:	add    BYTE PTR [rbx],cl
   140008355:	rex.X (bad) 
   140008357:	push   rax
   140008358:	(bad)  
   140008359:	xor    BYTE PTR [rax],al
   14000835b:	add    BYTE PTR [rsi],dh
   14000835d:	pop    rsi
   14000835e:	add    BYTE PTR [rax],al
   140008360:	call   0x1410083d8
   140008365:	sub    eax,0x542d0006
   14000836a:	(bad)  
   14000836b:	add    BYTE PTR [rdx],cl
   14000836d:	xor    al,0x9
   14000836f:	add    BYTE PTR [rdx],cl
   140008371:	xor    al,BYTE PTR [rsi]
   140008373:	jo     0x140008396
   140008375:	add    eax,0x64050002
   14000837a:	(bad)  
   14000837b:	add    BYTE PTR [rax],dl
   14000837d:	(bad)  
   14000837e:	add    BYTE PTR [rax],al
   140008380:	pop    rdx
   140008381:	(bad)  
   140008382:	add    BYTE PTR [rax],al
   140008384:	add    DWORD PTR fs:[rax],0x0
   140008388:	and    DWORD PTR [rip+0xffffffffe4050002],eax        # 0x124058390
   14000838e:	or     BYTE PTR [rax],al
   140008390:	pop    rdx
   140008391:	(bad)  
   140008392:	add    BYTE PTR [rax],al
   140008394:	jo     0x1400083c5
   140008396:	add    BYTE PTR [rax],al
   140008398:	je     0x14000831d
   14000839a:	add    BYTE PTR [rax],al
   14000839c:	and    DWORD PTR [rax],eax
   14000839e:	add    BYTE PTR [rax],al
   1400083a0:	pop    rdx
   1400083a1:	(bad)  
   1400083a2:	add    BYTE PTR [rax],al
   1400083a4:	jo     0x1400083d5
   1400083a6:	add    BYTE PTR [rax],al
   1400083a8:	je     0x14000832d
   1400083aa:	add    BYTE PTR [rax],al
   1400083ac:	and    DWORD PTR [rax],eax
   1400083ae:	add    BYTE PTR [rax],al
   1400083b0:	adc    BYTE PTR [rdi],ch
   1400083b2:	add    BYTE PTR [rax],al
   1400083b4:	pop    rdx
   1400083b5:	(bad)  
   1400083b6:	add    BYTE PTR [rax],al
   1400083b8:	add    DWORD PTR fs:[rax],0x0
   1400083bc:	add    DWORD PTR [rdx],ecx
   1400083be:	add    al,0x0
   1400083c0:	or     dh,BYTE PTR [rdi+rax*1]
   1400083c3:	add    BYTE PTR [rdx],cl
   1400083c5:	xor    al,BYTE PTR [rsi]
   1400083c7:	jo     0x1400083ea
   1400083c9:	add    eax,0x64050002
   1400083ce:	(bad)  
   1400083cf:	add    BYTE PTR [rax],dh
   1400083d1:	xor    al,0x0
   1400083d3:	add    BYTE PTR [rbx+0x34],cl
   1400083d6:	add    BYTE PTR [rax],al
   1400083d8:	mov    esp,0x21000083
   1400083dd:	add    BYTE PTR [rax],al
   1400083df:	add    BYTE PTR [rax],dh
   1400083e1:	xor    al,0x0
   1400083e3:	add    BYTE PTR [rbx+0x34],cl
   1400083e6:	add    BYTE PTR [rax],al
   1400083e8:	mov    esp,0x1000083
   1400083ed:	add    al,0x1
   1400083ef:	add    BYTE PTR [rdx+rax*2],al
   1400083f2:	add    BYTE PTR [rax],al
   1400083f4:	add    DWORD PTR [rcx+rax*1],eax
   1400083f7:	add    BYTE PTR [rdx+rax*2],al
   1400083fa:	add    BYTE PTR [rax],al
   1400083fc:	add    DWORD PTR [rsi],eax
   1400083fe:	add    al,BYTE PTR [rax]
   140008400:	(bad)  
   140008401:	push   rdx
   140008402:	add    dh,BYTE PTR [rax]
   140008404:	add    DWORD PTR [rsi],eax
   140008406:	add    al,BYTE PTR [rax]
   140008408:	(bad)  
   140008409:	xor    al,BYTE PTR [rdx]
   14000840b:	xor    BYTE PTR [rcx],al
   14000840d:	or     al,BYTE PTR [rax+rax*1]
   140008410:	or     dh,BYTE PTR [rax+rcx*1]
   140008413:	add    BYTE PTR [rdx],cl
   140008415:	push   rdx
   140008416:	(bad)  
   140008417:	jo     0x14000841a
   140008419:	(bad)  
   14000841a:	add    al,BYTE PTR [rax]
   14000841c:	(bad)  
   14000841d:	xor    al,BYTE PTR [rdx]
   14000841f:	xor    BYTE PTR [rcx],al
   140008421:	(bad)  
   140008422:	add    al,BYTE PTR [rax]
   140008424:	(bad)  
   140008425:	push   rdx
   140008426:	add    dh,BYTE PTR [rax]
   140008428:	add    DWORD PTR [rsi],eax
   14000842a:	add    al,BYTE PTR [rax]
   14000842c:	(bad)  
   14000842d:	xor    al,BYTE PTR [rdx]
   14000842f:	xor    BYTE PTR [rcx],al
   140008431:	or     al,BYTE PTR [rax+rax*1]
   140008434:	or     dh,BYTE PTR [rax+rcx*1]
   140008437:	add    BYTE PTR [rdx],cl
   140008439:	push   rdx
   14000843a:	(bad)  
   14000843b:	jo     0x14000843e
   14000843d:	or     al,BYTE PTR [rax+rax*1]
   140008440:	or     dh,BYTE PTR [rsi+rax*1]
   140008443:	add    BYTE PTR [rdx],cl
   140008445:	xor    al,BYTE PTR [rsi]
   140008447:	jo     0x14000844a
   140008449:	(bad)  
   14000844a:	add    al,BYTE PTR [rax]
   14000844c:	(bad)  
   14000844d:	xor    al,BYTE PTR [rdx]
   14000844f:	xor    BYTE PTR [rcx],al
   140008451:	add    al,0x1
   140008453:	add    BYTE PTR [rdx+rax*2],al
   140008456:	add    BYTE PTR [rax],al
   140008458:	add    DWORD PTR [rcx+rax*1],eax
   14000845b:	add    BYTE PTR [rdx+rax*2],al
   14000845e:	add    BYTE PTR [rax],al
   140008460:	add    DWORD PTR [rsi],eax
   140008462:	add    al,BYTE PTR [rax]
   140008464:	(bad)  
   140008465:	xor    al,BYTE PTR [rdx]
   140008467:	xor    BYTE PTR [rcx],al
   140008469:	(bad)  
   14000846a:	add    al,BYTE PTR [rax]
   14000846c:	(bad)  
   14000846d:	xor    al,BYTE PTR [rdx]
   14000846f:	xor    BYTE PTR [rcx],al
   140008471:	adc    al,0x8
   140008473:	add    BYTE PTR [rsp+riz*2],dl
   140008476:	or     BYTE PTR [rax],al
   140008478:	adc    al,0x54
   14000847a:	(bad)  
   14000847b:	add    BYTE PTR [rsp+rsi*1],dl
   14000847e:	(bad)  
   14000847f:	add    BYTE PTR [rdx+rsi*1],dl
   140008482:	adc    BYTE PTR [rax+0x1],dh
   140008485:	clts   
   140008487:	add    BYTE PTR [rdi],cl
   140008489:	fs (bad) 
   14000848b:	add    BYTE PTR [rdi],cl
   14000848d:	xor    al,0x6
   14000848f:	add    BYTE PTR [rdi],cl
   140008491:	xor    cl,BYTE PTR [rbx]
   140008493:	jo     0x140008496
   140008495:	add    al,0x1
   140008497:	add    BYTE PTR [rdx+rax*2],al
   14000849a:	add    BYTE PTR [rax],al
   14000849c:	add    DWORD PTR [rdx],ecx
   14000849e:	add    al,0x0
   1400084a0:	or     dh,BYTE PTR [rsi+rax*1]
   1400084a3:	add    BYTE PTR [rdx],cl
   1400084a5:	xor    al,BYTE PTR [rsi]
   1400084a7:	jo     0x1400084c2
   1400084a9:	and    eax,DWORD PTR [rsi]
   1400084ab:	add    BYTE PTR [rdx],bl
   1400084ad:	push   rdx
   1400084ae:	(bad)  
   1400084af:	lock adc al,0xe0
   1400084b2:	adc    dh,BYTE PTR [rax+0x11]
   1400084b5:	(bad)  
   1400084b6:	adc    BYTE PTR [rax],dh
   1400084b8:	ss pop rsi
   1400084ba:	add    BYTE PTR [rax],al
   1400084bc:	adc    BYTE PTR [rax+rax*1+0x0],dh
   1400084c0:	(bad)  
   1400084c1:	(bad)  
   1400084c2:	(bad)  
   1400084c3:	inc    DWORD PTR [rax]
   1400084c5:	add    BYTE PTR [rax],al
   1400084c7:	add    bh,bh
   1400084c9:	(bad)  
   1400084ca:	(bad)  
   1400084cb:	inc    DWORD PTR [rax]
   1400084cd:	add    BYTE PTR [rax],al
   1400084cf:	add    BYTE PTR [rcx],al
   1400084d1:	add    BYTE PTR [rax],al
   1400084d3:	add    BYTE PTR [rax],al
   1400084d5:	add    BYTE PTR [rax],al
   1400084d7:	add    BYTE PTR [rcx],al
	...
   1400084e5:	add    BYTE PTR [rax],al
   1400084e7:	add    BYTE PTR [rbx],al
   1400084e9:	add    BYTE PTR [rax],al
   1400084eb:	add    BYTE PTR [rcx],al
   1400084ed:	add    BYTE PTR [rax],al
   1400084ef:	add    BYTE PTR [rax],cl
   1400084f1:	test   DWORD PTR [rax],eax
   1400084f3:	add    BYTE PTR [rdx],al
   1400084f5:	add    BYTE PTR [rax],al
   1400084f7:	add    BYTE PTR [rdx],al
   1400084f9:	add    BYTE PTR [rax],al
   1400084fb:	add    BYTE PTR [rbx],al
   1400084fd:	add    BYTE PTR [rax],al
   1400084ff:	add    BYTE PTR [rcx],al
   140008501:	add    BYTE PTR [rax],al
   140008503:	add    BYTE PTR [rax*4+0x400000],bl
	...
   140008512:	add    BYTE PTR [rax],al
   140008514:	shl    BYTE PTR [rdi+0x0],1
   140008517:	add    BYTE PTR [rax],bh
   140008519:	add    BYTE PTR [rax],al
   14000851b:	add    BYTE PTR [rax+0x0],al
	...
   140008526:	add    BYTE PTR [rax],al
   140008528:	and    BYTE PTR [rax+0x0],ch
   14000852b:	add    BYTE PTR [rax+0x0],cl
   14000852e:	add    BYTE PTR [rax],al
   140008530:	movabs al,ds:0x15ffffffff00002c
   140008539:	sub    eax,0x0
   14000853e:	add    BYTE PTR [rax],al
   140008540:	rex.WX sub rax,0xffffffffffff0000
   140008546:	(bad)  
   140008547:	call   rax
   140008549:	add    BYTE PTR [eax],al
   14000854c:	add    BYTE PTR [rax],al
   14000854e:	add    BYTE PTR [rax],al
   140008550:	frstor [rdi+0x0]
   140008553:	add    BYTE PTR [rcx],al
   140008555:	add    BYTE PTR [rax],al
   140008557:	add    ch,ah
   140008559:	add    BYTE PTR [eax],al
   14000855c:	add    al,BYTE PTR [rax]
   14000855e:	add    BYTE PTR [rax],al
   140008560:	adc    ch,BYTE PTR [rax+0x0]
   140008563:	add    BYTE PTR [rax],al
   140008565:	add    BYTE PTR [rax],al
   140008567:	add    BYTE PTR [rsi],ch
   140008569:	push   0x30000
   14000856e:	add    BYTE PTR [rax],al
   140008570:	sbb    DWORD PTR [rdx],ecx
   140008572:	add    al,BYTE PTR [rax]
   140008574:	or     dh,BYTE PTR [rdx]
   140008576:	(bad)  
   140008577:	push   rax
   140008578:	ss pop rsi
   14000857a:	add    BYTE PTR [rax],al
   14000857c:	adc    BYTE PTR [rax+rax*1+0x0],dh
   140008580:	sbb    DWORD PTR [rbx],ecx
   140008582:	add    eax,DWORD PTR [rax]
   140008584:	or     eax,DWORD PTR [rdx+0x7]
   140008587:	push   rax
   140008588:	(bad)  
   140008589:	xor    BYTE PTR [rax],al
   14000858b:	add    BYTE PTR [rsi],dh
   14000858d:	pop    rsi
   14000858e:	add    BYTE PTR [rax],al
   140008590:	adc    BYTE PTR [rax+rax*1+0x0],dh
   140008594:	add    DWORD PTR [rsi],esi
   140008596:	(bad)  
   140008597:	add    BYTE PTR [rsi],dh
   140008599:	fs (bad) 
   14000859b:	add    BYTE PTR [rdx],cl
   14000859d:	xor    al,0x9
   14000859f:	add    BYTE PTR [rdx],cl
   1400085a1:	xor    al,BYTE PTR [rsi]
   1400085a3:	jo     0x1400085c6
   1400085a5:	add    eax,0xe4050002
   1400085aa:	or     BYTE PTR [rax],al
   1400085ac:	loopne 0x1400085dd
   1400085ae:	add    BYTE PTR [rax],al
   1400085b0:	xor    esi,DWORD PTR [rax]
   1400085b2:	add    BYTE PTR [rax],al
   1400085b4:	xchg   esp,eax
   1400085b5:	test   DWORD PTR [rax],eax
   1400085b7:	add    BYTE PTR [rcx],ah
   1400085b9:	add    eax,0x54050002
   1400085be:	(bad)  
   1400085bf:	add    BYTE PTR [rbx],dh
   1400085c1:	xor    BYTE PTR [rax],al
   1400085c3:	add    BYTE PTR [rcx+0x30],cl
   1400085c6:	add    BYTE PTR [rax],al
   1400085c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400085c9:	test   DWORD PTR [rax],eax
   1400085cb:	add    BYTE PTR [rcx],ah
   1400085cd:	add    BYTE PTR [rax],al
   1400085cf:	add    BYTE PTR [rbx],dh
   1400085d1:	xor    BYTE PTR [rax],al
   1400085d3:	add    BYTE PTR [rcx+0x30],cl
   1400085d6:	add    BYTE PTR [rax],al
   1400085d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400085d9:	test   DWORD PTR [rax],eax
   1400085db:	add    BYTE PTR [rcx],ah
   1400085dd:	add    BYTE PTR [rax],al
   1400085df:	add    al,ah
   1400085e1:	(bad)  
   1400085e2:	add    BYTE PTR [rax],al
   1400085e4:	xor    esi,DWORD PTR [rax]
   1400085e6:	add    BYTE PTR [rax],al
   1400085e8:	xchg   esp,eax
   1400085e9:	test   DWORD PTR [rax],eax
   1400085eb:	add    BYTE PTR [rcx],al
   1400085ed:	or     al,BYTE PTR [rax+rax*1]
   1400085f0:	or     dh,BYTE PTR [rdi+rax*1]
   1400085f3:	add    BYTE PTR [rdx],cl
   1400085f5:	xor    al,BYTE PTR [rsi]
   1400085f7:	jo     0x14000861a
   1400085f9:	add    eax,0x64050002
   1400085fe:	(bad)  
   1400085ff:	add    BYTE PTR [rax-0x54ffffcc],dl
   140008605:	xor    al,0x0
   140008607:	add    ah,ch
   140008609:	test   DWORD PTR [rax],eax
   14000860b:	add    BYTE PTR [rcx],ah
   14000860d:	add    BYTE PTR [rax],al
   14000860f:	add    BYTE PTR [rax-0x54ffffcc],dl
   140008615:	xor    al,0x0
   140008617:	add    ah,ch
   140008619:	test   DWORD PTR [rax],eax
   14000861b:	add    BYTE PTR [rcx],al
   14000861d:	add    al,0x1
   14000861f:	add    BYTE PTR [rdx+rax*2],al
   140008622:	add    BYTE PTR [rax],al
   140008624:	add    DWORD PTR [rcx+rax*1],eax
   140008627:	add    BYTE PTR [rdx+rax*2],al
   14000862a:	add    BYTE PTR [rax],al
   14000862c:	add    DWORD PTR [rcx+rax*1],eax
   14000862f:	add    BYTE PTR [rdx+rax*2],al
   140008632:	add    BYTE PTR [rax],al
   140008634:	add    DWORD PTR [rcx+rax*1],eax
   140008637:	add    BYTE PTR [rdx+rax*2],al
   14000863a:	add    BYTE PTR [rax],al
   14000863c:	add    DWORD PTR [rcx+rax*1],eax
   14000863f:	add    BYTE PTR [rdx+rax*2],al
   140008642:	add    BYTE PTR [rax],al
   140008644:	add    DWORD PTR [rsi],eax
   140008646:	add    al,BYTE PTR [rax]
   140008648:	(bad)  
   140008649:	xor    al,BYTE PTR [rdx]
   14000864b:	xor    BYTE PTR [rcx],bl
   14000864d:	or     eax,0x62040001
   140008652:	add    BYTE PTR [rax],al
   140008654:	ss pop rsi
   140008656:	add    BYTE PTR [rax],al
   140008658:	cmp    BYTE PTR [rax+rax*1+0x0],dh
   14000865c:	(bad)  
   14000865d:	(bad)  
   14000865e:	(bad)  
   14000865f:	inc    DWORD PTR [rax]
   140008661:	add    BYTE PTR [rax],al
   140008663:	add    bh,bh
   140008665:	(bad)  
   140008666:	(bad)  
   140008667:	inc    DWORD PTR [rax]
	...
   140008671:	add    BYTE PTR [rax],al
   140008673:	add    BYTE PTR [rcx],al
   140008675:	add    BYTE PTR [rax],al
   140008677:	add    BYTE PTR [rcx],al
   140008679:	add    BYTE PTR [rax],al
   14000867b:	add    BYTE PTR [rax+0x40000086],al
	...
   14000868d:	add    BYTE PTR [eax],al
   140008690:	cmp    BYTE PTR [rax],al
   140008692:	add    BYTE PTR [rax],al
   140008694:	add    BYTE PTR [rax],al
   140008696:	add    BYTE PTR [rax],al
   140008698:	mov    al,0x2a
   14000869a:	add    BYTE PTR [rax],al
   14000869c:	(bad)  
   14000869d:	(bad)  
   14000869e:	(bad)  
   14000869f:	(bad)  
   1400086a0:	fsubr  DWORD PTR [rdx]
   1400086a2:	add    BYTE PTR [rax],al
   1400086a4:	add    BYTE PTR [rax],al
   1400086a6:	add    BYTE PTR [rax],al
   1400086a8:	repz sub al,BYTE PTR [rax]
   1400086ab:	add    bh,bh
   1400086ad:	(bad)  
   1400086ae:	(bad)  
   1400086af:	inc    DWORD PTR [rax]
   1400086b1:	add    BYTE PTR [eax],al
   1400086b4:	add    BYTE PTR [rax],al
   1400086b6:	add    BYTE PTR [rax],al
   1400086b8:	or     eax,0x1000067
   1400086bd:	add    BYTE PTR [rax],al
   1400086bf:	add    BYTE PTR [rcx],bl
   1400086c1:	or     al,BYTE PTR [rdx]
   1400086c3:	add    BYTE PTR [rdx],cl
   1400086c5:	xor    al,BYTE PTR [rsi]
   1400086c7:	push   rax
   1400086c8:	ss pop rsi
   1400086ca:	add    BYTE PTR [rax],al
   1400086cc:	cmp    BYTE PTR [rax+rax*1+0x0],dh
   1400086d0:	add    DWORD PTR [rsi],eax
   1400086d2:	add    al,BYTE PTR [rax]
   1400086d4:	(bad)  
   1400086d5:	xor    al,BYTE PTR [rdx]
   1400086d7:	xor    BYTE PTR [rcx],bl
   1400086d9:	lar    eax,WORD PTR [rax]
   1400086dc:	(bad)  
   1400086dd:	push   rdx
   1400086de:	add    dh,BYTE PTR [rax]
   1400086e0:	ss pop rsi
   1400086e2:	add    BYTE PTR [rax],al
   1400086e4:	(bad)  
   1400086e5:	je     0x1400086e7
   1400086e7:	add    bh,bh
   1400086e9:	(bad)  
   1400086ea:	(bad)  
   1400086eb:	inc    DWORD PTR [rax]
   1400086ed:	add    BYTE PTR [rax],al
   1400086ef:	add    bh,bh
   1400086f1:	(bad)  
   1400086f2:	(bad)  
   1400086f3:	inc    DWORD PTR [rax]
	...
   1400086fd:	add    BYTE PTR [rax],al
   1400086ff:	add    BYTE PTR [rcx],al
   140008701:	add    BYTE PTR [rax],al
   140008703:	add    BYTE PTR [rcx],al
   140008705:	add    BYTE PTR [rax],al
   140008707:	add    BYTE PTR [rdi+rax*4],cl
   14000870a:	add    BYTE PTR [rax],al
   14000870c:	add    BYTE PTR [rax],al
	...
   140008717:	add    BYTE PTR [rax],ah
   140008719:	add    BYTE PTR [eax],al
   14000871c:	cmp    BYTE PTR [rax],al
   14000871e:	add    BYTE PTR [rax],al
   140008720:	add    BYTE PTR [rbx],ch
   140008722:	add    BYTE PTR [rax],al
   140008724:	(bad)  
   140008725:	(bad)  
   140008726:	(bad)  
   140008727:	push   QWORD PTR [rax]
   140008729:	sub    eax,DWORD PTR [rax]
   14000872b:	add    BYTE PTR [rax],al
   14000872d:	add    BYTE PTR [rax],al
   14000872f:	add    BYTE PTR [rbx+rbp*1+0x0],dl
   140008733:	add    bh,bh
   140008735:	(bad)  
   140008736:	(bad)  
   140008737:	jmp    QWORD PTR [rax]
   140008739:	add    BYTE PTR [eax],al
   14000873c:	add    BYTE PTR [rax],al
   14000873e:	add    BYTE PTR [rax],al
   140008740:	sub    eax,0x1000067
   140008745:	add    BYTE PTR [rax],al
   140008747:	add    BYTE PTR [rcx],bl
   140008749:	or     al,BYTE PTR [rdx]
   14000874b:	add    BYTE PTR [rdx],cl
   14000874d:	xor    al,BYTE PTR [rsi]
   14000874f:	push   rax
   140008750:	ss pop rsi
   140008752:	add    BYTE PTR [rax],al
   140008754:	(bad)  
   140008755:	je     0x140008757
   140008757:	add    BYTE PTR [rcx],al
   140008759:	(bad)  
   14000875a:	add    al,BYTE PTR [rax]
   14000875c:	(bad)  
   14000875d:	xor    al,BYTE PTR [rdx]
   14000875f:	xor    BYTE PTR [rcx],al
   140008761:	(bad)  
   140008762:	add    al,BYTE PTR [rax]
   140008764:	(bad)  
   140008765:	xor    al,BYTE PTR [rdx]
   140008767:	xor    BYTE PTR [rcx],bl
   140008769:	sbb    BYTE PTR [rax+rax*1],al
   14000876c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000876f:	add    BYTE PTR [rdx],cl
   140008771:	push   rdx
   140008772:	(bad)  
   140008773:	jo     0x1400087ab
   140008775:	pop    rsi
   140008776:	add    BYTE PTR [rax],al
   140008778:	mov    BYTE PTR [rax+rax*1+0x0],dh
   14000877c:	(bad)  
   14000877d:	(bad)  
   14000877e:	(bad)  
   14000877f:	push   QWORD PTR [rax+0x66]
	...
   140008792:	add    BYTE PTR [rax],al
   140008794:	add    DWORD PTR [rax],eax
   140008796:	add    BYTE PTR [rax],al
   140008798:	add    DWORD PTR [rax],eax
   14000879a:	add    BYTE PTR [rax],al
   14000879c:	add    al,BYTE PTR [rax]
   14000879e:	add    BYTE PTR [rax],al
   1400087a0:	add    DWORD PTR [rax],eax
   1400087a2:	add    BYTE PTR [rax],al
   1400087a4:	test   al,0x87
   1400087a6:	add    BYTE PTR [rax],al
   1400087a8:	add    BYTE PTR [rax],al
	...
   1400087b3:	add    BYTE PTR [rsi+riz*2+0x0],bh
   1400087b7:	add    BYTE PTR [rax],bh
   1400087b9:	add    BYTE PTR [rax],al
   1400087bb:	add    BYTE PTR [rax],al
   1400087bd:	add    BYTE PTR [rax],al
   1400087bf:	add    BYTE PTR [rax],ah
   1400087c1:	sbb    al,0x0
   1400087c3:	add    bh,bh
   1400087c5:	(bad)  
   1400087c6:	(bad)  
   1400087c7:	dec    DWORD PTR [rdi+0x1c]
   1400087ca:	add    BYTE PTR [rax],al
   1400087cc:	add    DWORD PTR [rax],eax
   1400087ce:	add    BYTE PTR [rax],al
   1400087d0:	(bad)  
   1400087d1:	sbb    al,0x0
   1400087d3:	add    bh,bh
   1400087d5:	(bad)  
   1400087d6:	(bad)  
   1400087d7:	(bad)  
   1400087d8:	jl     0x140008840
   1400087da:	add    BYTE PTR [rax],al
   1400087dc:	add    BYTE PTR [rax],al
   1400087de:	add    BYTE PTR [rax],al
   1400087e0:	mov    DWORD PTR [rsi+0x0],esp
   1400087e3:	add    BYTE PTR [rdx],al
   1400087e5:	add    BYTE PTR [rax],al
   1400087e7:	add    BYTE PTR [rcx],bl
   1400087e9:	or     al,BYTE PTR [rdx]
   1400087eb:	add    BYTE PTR [rdx],cl
   1400087ed:	xor    al,BYTE PTR [rsi]
   1400087ef:	push   rax
   1400087f0:	ss pop rsi
   1400087f2:	add    BYTE PTR [rax],al
   1400087f4:	mov    BYTE PTR [rax+rax*1+0x0],dh
   1400087f8:	add    DWORD PTR [rdx],ecx
   1400087fa:	add    al,0x0
   1400087fc:	or     dh,BYTE PTR [rsi+rax*1]
   1400087ff:	add    BYTE PTR [rdx],cl
   140008801:	xor    al,BYTE PTR [rsi]
   140008803:	jo     0x140008806
   140008805:	(bad)  
   140008806:	add    al,BYTE PTR [rax]
   140008808:	(bad)  
   140008809:	xor    al,BYTE PTR [rdx]
   14000880b:	xor    BYTE PTR [rcx],al
   14000880d:	or     al,BYTE PTR [rax+rax*1]
   140008810:	or     dh,BYTE PTR [rsi+rax*1]
   140008813:	add    BYTE PTR [rdx],cl
   140008815:	xor    al,BYTE PTR [rsi]
   140008817:	jo     0x14000881a
   140008819:	or     eax,0x420d0003
   14000881e:	or     eax,esi
   140008820:	(bad)  
   140008821:	loopne 0x140008823
   140008823:	add    BYTE PTR [rcx],ah
   140008825:	or     al,BYTE PTR [rax+rax*1]
   140008828:	or     ah,BYTE PTR [rcx+rcx*1+0x0]
   14000882c:	add    eax,0x90000834
   140008831:	add    BYTE PTR [rax],al
   140008834:	movabs ds:0x2100008818000040,al
   14000883d:	add    eax,0x74050002
   140008842:	add    al,0x0
   140008844:	movabs ds:0x2400004113000040,al
   14000884d:	mov    BYTE PTR [rax],al
   14000884f:	add    BYTE PTR [rcx],ah
   140008851:	add    BYTE PTR [rax],al
   140008853:	add    BYTE PTR [rdx+0x13000040],ah
   140008859:	add    BYTE PTR [r8],al
   14000885c:	and    al,0x88
   14000885e:	add    BYTE PTR [rax],al
   140008860:	and    DWORD PTR [rax],eax
   140008862:	add    BYTE PTR [rax],al
   140008864:	nop
   140008865:	add    BYTE PTR [rax],al
   140008868:	movabs ds:0x100008818000040,al
   140008871:	adc    al,0x4
   140008873:	add    BYTE PTR [rsp+rsi*1],dl
   140008876:	(bad)  
   140008877:	add    BYTE PTR [rdx+rsi*1],dl
   14000887a:	adc    BYTE PTR [rax+0x1],dh
   14000887d:	(bad)  
   14000887e:	add    al,BYTE PTR [rax]
   140008880:	(bad)  
   140008881:	xor    al,BYTE PTR [rdx]
   140008883:	xor    BYTE PTR [rcx],al
   140008885:	adc    al,0x8
   140008887:	add    BYTE PTR [rsp+riz*2],dl
   14000888a:	or     DWORD PTR [rax],eax
   14000888c:	adc    al,0x54
   14000888e:	or     BYTE PTR [rax],al
   140008890:	adc    al,0x34
   140008892:	(bad)  
   140008893:	add    BYTE PTR [rdx+rsi*1],dl
   140008896:	adc    BYTE PTR [rax+0x1],dh
   140008899:	(bad)  
   14000889a:	add    al,BYTE PTR [rax]
   14000889c:	(bad)  
   14000889d:	xor    al,BYTE PTR [rdx]
   14000889f:	xor    BYTE PTR [rcx],al
   1400088a1:	clts   
   1400088a3:	add    BYTE PTR [rdi],cl
   1400088a5:	or     BYTE PTR fs:[rax],al
   1400088a8:	sysenter 
   1400088aa:	(bad)  
   1400088ab:	add    BYTE PTR [rdi],cl
   1400088ad:	xor    cl,BYTE PTR [rbx]
   1400088af:	jo     0x1400088d2
   1400088b1:	add    eax,0x54050002
   1400088b6:	(bad)  
   1400088b7:	add    BYTE PTR [rax],al
   1400088b9:	add    BYTE PTR cs:[rax],al
   1400088bc:	(bad)  
   1400088bd:	add    BYTE PTR cs:[rax],al
   1400088c0:	movabs al,ds:0x21000088
   1400088c9:	add    BYTE PTR cs:[rax],al
   1400088cc:	(bad)  
   1400088cd:	add    BYTE PTR cs:[rax],al
   1400088d0:	movabs al,ds:0x900040901000088
   1400088d9:	xor    al,BYTE PTR [rip+0x25003e0]        # 0x142508cbf
   1400088df:	xor    BYTE PTR [rcx],ah
   1400088e1:	adc    eax,DWORD PTR [rsi]
   1400088e3:	add    BYTE PTR [rbx],dl
   1400088e5:	hlt    
   1400088e6:	or     al,BYTE PTR [rax]
   1400088e8:	(bad)  
   1400088e9:	je     0x1400088f4
   1400088eb:	add    BYTE PTR [rip+0x70000864],al        # 0x1b0009155
   1400088f1:	xor    DWORD PTR [rax],eax
   1400088f3:	add    BYTE PTR [rbp-0x2bffffcf],cl
   1400088f9:	mov    BYTE PTR [rax],al
   1400088fb:	add    BYTE PTR [rcx],ah
   1400088fd:	add    BYTE PTR [rax],al
   1400088ff:	add    BYTE PTR [rax+0x31],dh
   140008902:	add    BYTE PTR [rax],al
   140008904:	lea    esi,[rcx]
   140008906:	add    BYTE PTR [rax],al
   140008908:	(bad)  
   140008909:	mov    BYTE PTR [rax],al
   14000890b:	add    BYTE PTR [rcx],al
   14000890d:	add    al,0x1
   14000890f:	add    BYTE PTR [rdx+rax*2],al
   140008912:	add    BYTE PTR [rax],al
   140008914:	add    DWORD PTR [rsi],eax
   140008916:	add    al,BYTE PTR [rax]
   140008918:	(bad)  
   140008919:	xor    al,BYTE PTR [rdx]
   14000891b:	xor    BYTE PTR [rcx],al
   14000891d:	(bad)  
   14000891e:	add    al,BYTE PTR [rax]
   140008920:	(bad)  
   140008921:	xor    al,BYTE PTR [rdx]
   140008923:	xor    BYTE PTR [rcx],al
   140008925:	or     al,BYTE PTR [rax+rax*1]
   140008928:	or     dh,BYTE PTR [rsi+rax*1]
   14000892b:	add    BYTE PTR [rdx],cl
   14000892d:	xor    al,BYTE PTR [rsi]
   14000892f:	jo     0x140008932
   140008931:	or     al,BYTE PTR [rax+rax*1]
   140008934:	or     dh,BYTE PTR [rsi+rax*1]
   140008937:	add    BYTE PTR [rdx],cl
   140008939:	xor    al,BYTE PTR [rsi]
   14000893b:	jo     0x14000893e
   14000893d:	(bad)  
   14000893e:	add    al,BYTE PTR [rax]
   140008940:	(bad)  
   140008941:	xor    al,BYTE PTR [rdx]
   140008943:	xor    BYTE PTR [rcx],dl
   140008945:	sbb    eax,0x641d0006
   14000894a:	or     eax,DWORD PTR [rax]
   14000894c:	sbb    BYTE PTR [rdx+rcx*1],dh
   14000894f:	add    BYTE PTR [rdx],cl
   140008951:	push   rdx
   140008952:	(bad)  
   140008953:	jo     0x14000898b
   140008955:	pop    rsi
   140008956:	add    BYTE PTR [rax],al
   140008958:	mov    al,0x74
   14000895a:	add    BYTE PTR [rax],al
   14000895c:	(bad)  
   14000895d:	(bad)  
   14000895e:	(bad)  
   14000895f:	inc    eax
   140008961:	data16 add BYTE PTR [rax],al
   140008964:	add    BYTE PTR [rax],al
   140008966:	add    BYTE PTR [rax],al
   140008968:	shl    BYTE PTR [rsi+0x0],1
   14000896b:	add    BYTE PTR [rcx],al
   14000896d:	add    BYTE PTR [rax],al
   14000896f:	add    al,ah
   140008971:	data16 add BYTE PTR [rax],al
   140008974:	add    al,BYTE PTR [rax]
   140008976:	add    BYTE PTR [rax],al
   140008978:	lock data16 add BYTE PTR [rax],al
   14000897c:	add    BYTE PTR [rax],al
   14000897e:	add    BYTE PTR [rax],al
   140008980:	and    BYTE PTR [rax],al
   140008983:	add    bh,bh
   140008985:	(bad)  
   140008986:	(bad)  
   140008987:	call   QWORD PTR [rbx+0x20]
   14000898d:	add    BYTE PTR [rax],al
   14000898f:	add    BYTE PTR [rdi+0x1000020],dh
   140008995:	add    BYTE PTR [rax],al
   140008997:	add    bl,bl
   140008999:	and    BYTE PTR [rax],al
   14000899b:	add    BYTE PTR [rdx],al
   14000899d:	add    BYTE PTR [rax],al
   14000899f:	add    bh,bh
   1400089a1:	and    BYTE PTR [rax],al
   1400089a3:	add    BYTE PTR [rbx],al
   1400089a5:	add    BYTE PTR [rax],al
   1400089a7:	add    BYTE PTR [rcx+riz*1],dh
   1400089aa:	add    BYTE PTR [rax],al
   1400089ac:	(bad)  
   1400089ad:	(bad)  
   1400089ae:	(bad)  
   1400089af:	inc    DWORD PTR [rcx]
   1400089b1:	clts   
   1400089b3:	add    BYTE PTR [rdi],cl
   1400089b5:	fs (bad) 
   1400089b7:	add    BYTE PTR [rdi],cl
   1400089b9:	xor    al,0x6
   1400089bb:	add    BYTE PTR [rdi],cl
   1400089bd:	xor    cl,BYTE PTR [rbx]
   1400089bf:	jo     0x1400089c2
   1400089c1:	or     al,BYTE PTR [rax+rax*1]
   1400089c4:	or     dh,BYTE PTR [rsi+rax*1]
   1400089c7:	add    BYTE PTR [rdx],cl
   1400089c9:	xor    al,BYTE PTR [rsi]
   1400089cb:	jo     0x1400089ce
   1400089cd:	or     al,BYTE PTR [rax+rax*1]
   1400089d0:	or     dh,BYTE PTR [rdi+rax*1]
   1400089d3:	add    BYTE PTR [rdx],cl
   1400089d5:	xor    al,BYTE PTR [rsi]
   1400089d7:	(bad)  
   1400089d8:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b40589e0
   1400089de:	(bad)  
   1400089df:	add    al,ah
   1400089e1:	(bad)  
   1400089e2:	add    BYTE PTR [rax],al
   1400089e4:	add    al,0x28
   1400089e6:	add    BYTE PTR [rax],al
   1400089e8:	int3   
   1400089e9:	mov    DWORD PTR [rax],eax
   1400089eb:	add    BYTE PTR [rcx],ah
   1400089ed:	add    BYTE PTR [rax],al
   1400089ef:	add    al,ah
   1400089f1:	(bad)  
   1400089f2:	add    BYTE PTR [rax],al
   1400089f4:	add    al,0x28
   1400089f6:	add    BYTE PTR [rax],al
   1400089f8:	int3   
   1400089f9:	mov    DWORD PTR [rax],eax
   1400089fb:	add    BYTE PTR [rcx],al
   1400089fd:	add    al,0x1
   1400089ff:	add    BYTE PTR [rdx+rax*2],al
   140008a02:	add    BYTE PTR [rax],al
   140008a04:	add    DWORD PTR [rcx+rax*1],eax
   140008a07:	add    BYTE PTR [rdx+rax*2],al
   140008a0a:	add    BYTE PTR [rax],al
   140008a0c:	add    DWORD PTR [rcx+rax*1],eax
   140008a0f:	add    BYTE PTR [rdx+rax*2],al
   140008a12:	add    BYTE PTR [rax],al
   140008a14:	sbb    DWORD PTR [rbx],esp
   140008a16:	or     DWORD PTR [rax],eax
   140008a18:	(bad)  
   140008a19:	add    DWORD PTR [rax],ebx
   140008a1b:	add    BYTE PTR [rax],dl
   140008a1d:	lock (bad) 
   140008a1f:	loopne 0x140008a2d
   140008a21:	ror    BYTE PTR [rdx],1
   140008a23:	ror    BYTE PTR [rax],0x70
   140008a26:	(bad)  
   140008a27:	(bad)  
   140008a28:	(bad)  
   140008a29:	xor    BYTE PTR [rax],al
   140008a2b:	add    BYTE PTR [rsi],dh
   140008a2d:	pop    rsi
   140008a2e:	add    BYTE PTR [rax],al
   140008a30:	fdiv   DWORD PTR [rax+rax*1+0x0]
   140008a34:	(bad)  
   140008a35:	(bad)  
   140008a36:	(bad)  
   140008a37:	jmp    QWORD PTR [rax+0x68]
   140008a3a:	add    BYTE PTR [rax],al
   140008a3c:	(bad)  
   140008a3d:	(bad)  
   140008a3e:	(bad)  
   140008a3f:	jmp    FWORD PTR [rax+rbp*2+0x0]
   140008a43:	add    BYTE PTR [rcx],al
   140008a45:	add    BYTE PTR [rax],al
   140008a47:	add    BYTE PTR [rax+0x68],bh
   140008a4a:	add    BYTE PTR [rax],al
   140008a4c:	add    al,BYTE PTR [rax]
   140008a4e:	add    BYTE PTR [rax],al
   140008a50:	add    BYTE PTR [rax],al
   140008a52:	add    BYTE PTR [rax],al
   140008a54:	add    eax,DWORD PTR [rax]
   140008a56:	add    BYTE PTR [rax],al
   140008a58:	test   BYTE PTR [rax+0x0],ch
   140008a5b:	add    BYTE PTR [rdx],al
   140008a5d:	add    BYTE PTR [rax],al
   140008a5f:	add    BYTE PTR [rax],al
   140008a61:	add    BYTE PTR [rax],al
   140008a63:	add    BYTE PTR [rdx],al
   140008a65:	add    BYTE PTR [rax],al
   140008a67:	add    cl,dl
   140008a69:	push   0x20000
   140008a6e:	add    BYTE PTR [rax],al
   140008a70:	(bad)  [rax+0x0]
   140008a73:	add    BYTE PTR [rdx],al
   140008a75:	add    BYTE PTR [rax],al
   140008a77:	add    cl,ch
   140008a79:	push   0x80000
   140008a7e:	add    BYTE PTR [rax],al
   140008a80:	add    BYTE PTR [rax],al
   140008a82:	add    BYTE PTR [rax],al
   140008a84:	or     DWORD PTR [rax],eax
   140008a86:	add    BYTE PTR [rax],al
   140008a88:	cmc    
   140008a89:	push   0x80000
   140008a8e:	add    BYTE PTR [rax],al
   140008a90:	add    BYTE PTR [rax],al
   140008a92:	add    BYTE PTR [rax],al
   140008a94:	add    eax,DWORD PTR [rax]
   140008a96:	add    BYTE PTR [rax],al
   140008a98:	add    al,0x0
   140008a9a:	add    BYTE PTR [rax],al
   140008a9c:	add    eax,0x1000000
   140008aa1:	add    BYTE PTR [rax],al
   140008aa3:	add    BYTE PTR [rdx+rcx*4+0x90000],bh
   140008aaa:	add    BYTE PTR [rax],al
   140008aac:	or     al,BYTE PTR [rax]
   140008aae:	add    BYTE PTR [rax],al
   140008ab0:	or     eax,DWORD PTR [rax]
   140008ab2:	add    BYTE PTR [rax],al
   140008ab4:	add    DWORD PTR [rax],eax
   140008ab6:	add    BYTE PTR [rax],al
   140008ab8:	ror    BYTE PTR [rdx+0x90000],1
   140008abe:	add    BYTE PTR [rax],al
   140008ac0:	push   rax
   140008ac1:	mov    al,0x0
   140008ac3:	add    BYTE PTR [rax+0x0],bh
   140008ac6:	add    BYTE PTR [rax],al
   140008ac8:	nop
   140008ac9:	push   0x480000
   140008ace:	add    BYTE PTR [rax],al
   140008ad0:	or     DWORD PTR [rax],eax
   140008ad2:	add    BYTE PTR [rax],al
   140008ad4:	push   rax
   140008ad5:	mov    al,0x0
   140008ad7:	add    BYTE PTR [rax+0x1000000],al
   140008add:	imul   eax,DWORD PTR [rax],0x4800
	...
   140008aef:	add    BYTE PTR [rax-0xffffb6],dl
   140008af5:	(bad)  
   140008af6:	(bad)  
   140008af7:	jmp    rbx
   140008af9:	rex.WX add BYTE PTR [rax],al
   140008afc:	add    BYTE PTR [rax],al
   140008afe:	add    BYTE PTR [rax],al
   140008b00:	out    dx,eax
   140008b01:	rex.WX add BYTE PTR [rax],al
   140008b04:	(bad)  
   140008b05:	(bad)  
   140008b06:	(bad)  
   140008b07:	call   QWORD PTR [rdi]
   140008b09:	rex.WXB add BYTE PTR [r8],al
   140008b0c:	add    DWORD PTR [rax],eax
   140008b0e:	add    BYTE PTR [rax],al
   140008b10:	xor    BYTE PTR [rbx+0x0],cl
   140008b13:	add    BYTE PTR [rbx],al
   140008b15:	add    BYTE PTR [rax],al
   140008b17:	add    BYTE PTR [rdx+0x4b],al
   140008b1a:	add    BYTE PTR [rax],al
   140008b1c:	add    al,0x0
   140008b1e:	add    BYTE PTR [rax],al
   140008b20:	movabs al,ds:0xc50000000300004b
   140008b29:	rex.WXB add BYTE PTR [r8],al
   140008b2c:	add    al,BYTE PTR [rax]
   140008b2e:	add    BYTE PTR [rax],al
   140008b30:	lock rex.WXB add BYTE PTR [r8],al
   140008b34:	(bad)  
   140008b35:	add    BYTE PTR [rax],al
   140008b37:	add    cl,dh
   140008b39:	rex.WR add BYTE PTR [rax],r8b
   140008b3c:	add    al,BYTE PTR [rax]
   140008b3e:	add    BYTE PTR [rax],al
   140008b40:	push   rdx
   140008b41:	rex.WRB add BYTE PTR [r8],r8b
   140008b44:	(bad)  
   140008b45:	add    BYTE PTR [rax],al
   140008b47:	add    BYTE PTR [rcx+0x4e],dl
   140008b4a:	add    BYTE PTR [rax],al
   140008b4c:	add    al,BYTE PTR [rax]
   140008b4e:	add    BYTE PTR [rax],al
   140008b50:	xchg   esi,eax
   140008b51:	rex.WRX add BYTE PTR [rax],r8b
   140008b54:	or     BYTE PTR [rax],al
   140008b56:	add    BYTE PTR [rax],al
   140008b58:	and    ecx,DWORD PTR [rdi+0x0]
   140008b5b:	add    BYTE PTR [rcx],cl
   140008b5d:	add    BYTE PTR [rax],al
   140008b5f:	add    BYTE PTR [rdi],ch
   140008b61:	rex.WRXB add BYTE PTR [r8],r8b
   140008b64:	or     al,BYTE PTR [rax]
   140008b66:	add    BYTE PTR [rax],al
   140008b68:	cmp    ecx,DWORD PTR [rdi+0x0]
   140008b6b:	add    BYTE PTR [rcx],cl
   140008b6d:	add    BYTE PTR [rax],al
   140008b6f:	add    BYTE PTR [rsi+0x4f],cl
   140008b72:	add    BYTE PTR [rax],al
   140008b74:	or     BYTE PTR [rax],al
   140008b76:	add    BYTE PTR [rax],al
   140008b78:	nop
   140008b79:	push   0x0
   140008b7e:	add    BYTE PTR [rax],al
   140008b80:	sahf   
   140008b81:	push   0x50000
   140008b86:	add    BYTE PTR [rax],al
   140008b88:	add    DWORD PTR [rcx+0x0],ebp
   140008b8b:	add    BYTE PTR [rax],al
   140008b8d:	add    BYTE PTR [rax],al
   140008b8f:	add    BYTE PTR [rdi],cl
   140008b91:	imul   eax,DWORD PTR [rax],0xb00
   140008b97:	add    BYTE PTR [rcx],bl
   140008b99:	or     eax,DWORD PTR [rbx]
   140008b9b:	add    BYTE PTR [rbx],cl
   140008b9d:	rex.X (bad) 
   140008b9f:	push   rax
   140008ba0:	(bad)  
   140008ba1:	xor    BYTE PTR [rax],al
   140008ba3:	add    BYTE PTR [rsi],dh
   140008ba5:	pop    rsi
   140008ba6:	add    BYTE PTR [rax],al
   140008ba8:	fdiv   DWORD PTR [rax+rax*1+0x0]
   140008bac:	sbb    DWORD PTR [rbx],ecx
   140008bae:	add    eax,DWORD PTR [rax]
   140008bb0:	or     eax,DWORD PTR [rdx+0x7]
   140008bb3:	push   rax
   140008bb4:	(bad)  
   140008bb5:	xor    BYTE PTR [rax],al
   140008bb7:	add    BYTE PTR [rsi],dh
   140008bb9:	pop    rsi
   140008bba:	add    BYTE PTR [rax],al
   140008bbc:	fdiv   DWORD PTR [rax+rax*1+0x0]
   140008bc0:	add    DWORD PTR [rsi],eax
   140008bc2:	add    al,BYTE PTR [rax]
   140008bc4:	(bad)  
   140008bc5:	push   rdx
   140008bc6:	add    dh,BYTE PTR [rax]
   140008bc8:	add    DWORD PTR [rsi],eax
   140008bca:	add    al,BYTE PTR [rax]
   140008bcc:	(bad)  
   140008bcd:	xor    al,BYTE PTR [rdx]
   140008bcf:	xor    BYTE PTR [rcx],al
   140008bd1:	add    al,0x1
   140008bd3:	add    BYTE PTR [rdx+rax*2],al
   140008bd6:	add    BYTE PTR [rax],al
   140008bd8:	add    DWORD PTR [rdi],ecx
   140008bda:	(bad)  
   140008bdb:	add    BYTE PTR [rdi],cl
   140008bdd:	fs (bad) 
   140008bdf:	add    BYTE PTR [rdi],cl
   140008be1:	xor    al,0x6
   140008be3:	add    BYTE PTR [rdi],cl
   140008be5:	xor    cl,BYTE PTR [rbx]
   140008be7:	jo     0x140008bea
   140008be9:	add    al,0x1
   140008beb:	add    BYTE PTR [rdx+rax*2],al
   140008bee:	add    BYTE PTR [rax],al
   140008bf0:	add    DWORD PTR [rsi],eax
   140008bf2:	add    al,BYTE PTR [rax]
   140008bf4:	(bad)  
   140008bf5:	xor    al,BYTE PTR [rdx]
   140008bf7:	xor    BYTE PTR [rcx],dl
   140008bf9:	sbb    BYTE PTR [rax+rax*1],al
   140008bfc:	sbb    BYTE PTR [rcx+rcx*1],dh
   140008bff:	add    BYTE PTR [rdx],cl
   140008c01:	push   rdx
   140008c02:	(bad)  
   140008c03:	jo     0x140008c3b
   140008c05:	pop    rsi
   140008c06:	add    BYTE PTR [rax],al
   140008c08:	add    BYTE PTR [rbp+0x0],dh
   140008c0b:	add    bh,bh
   140008c0d:	(bad)  
   140008c0e:	(bad)  
   140008c0f:	push   QWORD PTR [rax+0x66]
   140008c15:	add    BYTE PTR [rax],al
   140008c17:	add    al,al
   140008c19:	(bad)  
   140008c1a:	add    BYTE PTR [rax],al
   140008c1c:	(bad)  
   140008c1d:	(bad)  
   140008c1e:	(bad)  
   140008c1f:	(bad)  
   140008c20:	(bad)  
   140008c21:	(bad)  
   140008c22:	add    BYTE PTR [rax],al
   140008c24:	add    BYTE PTR [rax],al
   140008c26:	add    BYTE PTR [rax],al
   140008c28:	and    BYTE PTR es:[rax],al
   140008c2b:	add    bh,bh
   140008c2d:	(bad)  
   140008c2e:	(bad)  
   140008c2f:	inc    DWORD PTR [rcx]
   140008c31:	or     al,BYTE PTR [rax+rax*1]
   140008c34:	or     dh,BYTE PTR [rsi+rax*1]
   140008c37:	add    BYTE PTR [rdx],cl
   140008c39:	xor    al,BYTE PTR [rsi]
   140008c3b:	jo     0x140008c3e
   140008c3d:	clts   
   140008c3f:	add    BYTE PTR [rdi],cl
   140008c41:	fs (bad) 
   140008c43:	add    BYTE PTR [rdi],cl
   140008c45:	xor    al,0x6
   140008c47:	add    BYTE PTR [rdi],cl
   140008c49:	xor    cl,BYTE PTR [rbx]
   140008c4b:	jo     0x140008c4e
   140008c4d:	add    al,0x1
   140008c4f:	add    BYTE PTR [rdx+rax*2],al
   140008c52:	add    BYTE PTR [rax],al
   140008c54:	add    DWORD PTR [rcx+rax*1],eax
   140008c57:	add    BYTE PTR [rdx+rax*2],al
   140008c5a:	add    BYTE PTR [rax],al
   140008c5c:	add    DWORD PTR [rsi],eax
   140008c5e:	add    al,BYTE PTR [rax]
   140008c60:	(bad)  
   140008c61:	xor    al,BYTE PTR [rdx]
   140008c63:	xor    BYTE PTR [rcx],bl
   140008c65:	and    al,0x4
   140008c67:	add    BYTE PTR [rbx],bl
   140008c69:	push   rdx
   140008c6a:	(bad)  
   140008c6b:	jo     0x140008c83
   140008c6d:	(bad)  
   140008c6e:	adc    eax,0x5e3630
   140008c73:	add    BYTE PTR [rax],ch
   140008c75:	jne    0x140008c77
   140008c77:	add    bh,bh
   140008c79:	(bad)  
   140008c7a:	(bad)  
   140008c7b:	inc    DWORD PTR [rax]
   140008c7d:	add    BYTE PTR [rax],al
   140008c7f:	add    bh,bh
   140008c81:	(bad)  
   140008c82:	(bad)  
   140008c83:	inc    DWORD PTR [rax]
	...
   140008c8d:	add    BYTE PTR [rax],al
   140008c8f:	add    BYTE PTR [rcx],al
   140008c91:	add    BYTE PTR [rax],al
   140008c93:	add    BYTE PTR [rcx],al
   140008c95:	add    BYTE PTR [rax],al
   140008c97:	add    BYTE PTR [rsp+rcx*4+0x400000],bl
	...
   140008ca6:	add    BYTE PTR [rax],al
   140008ca8:	and    BYTE PTR [rbp+0x0],0x0
   140008cac:	cmp    BYTE PTR [rax],al
   140008cae:	add    BYTE PTR [rax],al
   140008cb0:	adc    BYTE PTR [rsi],dl
   140008cb2:	add    BYTE PTR [rax],al
   140008cb4:	(bad)  
   140008cb5:	(bad)  
   140008cb6:	(bad)  
   140008cb7:	jmp    FWORD PTR [rsi+0x16]
   140008cba:	add    BYTE PTR [rax],al
   140008cbc:	add    BYTE PTR [rax],al
   140008cbe:	add    BYTE PTR [rax],al
   140008cc0:	movabs ds:0x80ffffffff000016,eax
   140008cc9:	add    BYTE PTR gs:[rax],al
   140008ccc:	add    BYTE PTR [rax],al
   140008cce:	add    BYTE PTR [rax],al
   140008cd0:	lea    esp,[rbp+0x0]
   140008cd3:	add    BYTE PTR [rcx],al
   140008cd5:	add    BYTE PTR [rax],al
   140008cd7:	add    BYTE PTR [rcx],bl
   140008cd9:	or     al,BYTE PTR [rdx]
   140008cdb:	add    BYTE PTR [rdx],cl
   140008cdd:	xor    al,BYTE PTR [rsi]
   140008cdf:	push   rax
   140008ce0:	ss pop rsi
   140008ce2:	add    BYTE PTR [rax],al
   140008ce4:	sub    BYTE PTR [rbp+0x0],dh
   140008ce7:	add    BYTE PTR [rcx],bl
   140008ce9:	and    al,0x4
   140008ceb:	add    BYTE PTR [rbx],bl
   140008ced:	push   rdx
   140008cee:	(bad)  
   140008cef:	jo     0x140008d07
   140008cf1:	(bad)  
   140008cf2:	adc    eax,0x5e3630
   140008cf7:	add    BYTE PTR [rax+0x75],dl
   140008cfa:	add    BYTE PTR [rax],al
   140008cfc:	(bad)  
   140008cfd:	(bad)  
   140008cfe:	(bad)  
   140008cff:	inc    DWORD PTR [rax]
   140008d01:	add    BYTE PTR [rax],al
   140008d03:	add    bh,bh
   140008d05:	(bad)  
   140008d06:	(bad)  
   140008d07:	inc    DWORD PTR [rax]
	...
   140008d11:	add    BYTE PTR [rax],al
   140008d13:	add    BYTE PTR [rcx],al
   140008d15:	add    BYTE PTR [rax],al
   140008d17:	add    BYTE PTR [rcx],al
   140008d19:	add    BYTE PTR [rax],al
   140008d1b:	add    BYTE PTR [rax],ah
   140008d1d:	lea    eax,[rax]
   140008d1f:	add    BYTE PTR [rax+0x0],al
	...
   140008d2a:	add    BYTE PTR [rax],al
   140008d2c:	push   rax
   140008d2d:	add    BYTE PTR gs:[rax],al
   140008d30:	cmp    BYTE PTR [rax],al
   140008d32:	add    BYTE PTR [rax],al
   140008d34:	add    BYTE PTR [rax],al
   140008d36:	add    BYTE PTR [rax],al
   140008d38:	(bad)  
   140008d39:	adc    eax,0xffff0000
   140008d3e:	(bad)  
   140008d3f:	inc    edx
   140008d41:	adc    eax,0x0
   140008d46:	add    BYTE PTR [rax],al
   140008d48:	not    DWORD PTR [rip+0xffffffffffff0000]        # 0x13fff8d4e
   140008d4e:	(bad)  
   140008d4f:	call   QWORD PTR [rax+0x65]
   140008d52:	add    BYTE PTR [rax],al
   140008d54:	add    BYTE PTR [rax],al
   140008d56:	add    BYTE PTR [rax],al
   140008d58:	pop    rbp
   140008d59:	add    BYTE PTR gs:[rax],al
   140008d5c:	add    DWORD PTR [rax],eax
   140008d5e:	add    BYTE PTR [rax],al
   140008d60:	sbb    DWORD PTR [rdx],ecx
   140008d62:	add    al,BYTE PTR [rax]
   140008d64:	or     dh,BYTE PTR [rdx]
   140008d66:	(bad)  
   140008d67:	push   rax
   140008d68:	ss pop rsi
   140008d6a:	add    BYTE PTR [rax],al
   140008d6c:	push   rax
   140008d6d:	jne    0x140008d6f
   140008d6f:	add    BYTE PTR [rcx],al
   140008d71:	(bad)  
   140008d72:	add    al,BYTE PTR [rax]
   140008d74:	(bad)  
   140008d75:	xor    al,BYTE PTR [rdx]
   140008d77:	xor    BYTE PTR [rcx],al
   140008d79:	add    al,0x1
   140008d7b:	add    BYTE PTR [rdx+rax*2],al
   140008d7e:	add    BYTE PTR [rax],al
   140008d80:	add    DWORD PTR [rcx+rax*1],eax
   140008d83:	add    BYTE PTR [rdx+rax*2],al
   140008d86:	add    BYTE PTR [rax],al
   140008d88:	sbb    DWORD PTR [rsp+rax*1],edx
   140008d8b:	add    BYTE PTR [rsp+rsi*1],dl
   140008d8e:	or     BYTE PTR [rax],al
   140008d90:	(bad)  
   140008d91:	push   rdx
   140008d92:	add    dh,BYTE PTR [rax+0x36]
   140008d95:	pop    rsi
   140008d96:	add    BYTE PTR [rax],al
   140008d98:	js     0x140008e0f
   140008d9a:	add    BYTE PTR [rax],al
   140008d9c:	(bad)  
   140008d9d:	(bad)  
   140008d9e:	(bad)  
   140008d9f:	inc    DWORD PTR [rax]
   140008da1:	add    BYTE PTR [rax],al
   140008da3:	add    BYTE PTR [rax],al
   140008da5:	add    BYTE PTR [rax],al
   140008da7:	add    al,dl
   140008da9:	add    BYTE PTR fs:[rax],al
   140008dac:	(bad)  
   140008dad:	(bad)  
   140008dae:	(bad)  
   140008daf:	inc    DWORD PTR [rax]
   140008db1:	add    BYTE PTR [rax],al
   140008db3:	add    BYTE PTR [rax],al
   140008db5:	add    BYTE PTR [rax],al
   140008db7:	add    BYTE PTR [rcx],al
   140008db9:	add    BYTE PTR [rax],al
   140008dbb:	add    BYTE PTR [rdx],al
   140008dbd:	add    BYTE PTR [rax],al
   140008dbf:	add    BYTE PTR [rcx],al
   140008dc1:	add    BYTE PTR [rax],al
   140008dc3:	add    al,cl
   140008dc5:	lea    eax,[rax]
   140008dc7:	add    BYTE PTR [rax+0x0],al
	...
   140008dd2:	add    BYTE PTR [rax],al
   140008dd4:	in     al,dx
   140008dd5:	add    BYTE PTR fs:[rax],al
   140008dd8:	cmp    BYTE PTR [rax],al
   140008dda:	add    BYTE PTR [rax],al
   140008ddc:	add    BYTE PTR [rax],al
   140008dde:	add    BYTE PTR [rax],al
   140008de0:	xor    BYTE PTR [rbx],dl
   140008de2:	add    BYTE PTR [rax],al
   140008de4:	(bad)  
   140008de5:	(bad)  
   140008de6:	(bad)  
   140008de7:	call   FWORD PTR [rdx+0x13]
   140008dea:	add    BYTE PTR [rax],al
   140008dec:	add    BYTE PTR [rax],al
   140008dee:	add    BYTE PTR [rax],al
   140008df0:	push   0x1000013
   140008df5:	add    BYTE PTR [rax],al
   140008df7:	add    BYTE PTR [rsi+0x13],dh
   140008dfa:	add    BYTE PTR [rax],al
   140008dfc:	(bad)  
   140008dfd:	(bad)  
   140008dfe:	(bad)  
   140008dff:	(bad)  
   140008e00:	in     al,dx
   140008e01:	add    BYTE PTR fs:[rax],al
   140008e04:	add    BYTE PTR [rax],al
   140008e06:	add    BYTE PTR [rax],al
   140008e08:	stc    
   140008e09:	add    BYTE PTR fs:[rax],al
   140008e0c:	add    al,BYTE PTR [rax]
   140008e0e:	add    BYTE PTR [rax],al
   140008e10:	add    DWORD PTR [rsi],eax
   140008e12:	add    al,BYTE PTR [rax]
   140008e14:	(bad)  
   140008e15:	xor    al,BYTE PTR [rdx]
   140008e17:	push   rax
   140008e18:	sbb    DWORD PTR [rdx],ecx
   140008e1a:	add    al,BYTE PTR [rax]
   140008e1c:	or     dh,BYTE PTR [rdx]
   140008e1e:	(bad)  
   140008e1f:	push   rax
   140008e20:	ss pop rsi
   140008e22:	add    BYTE PTR [rax],al
   140008e24:	js     0x140008e9b
   140008e26:	add    BYTE PTR [rax],al
   140008e28:	sbb    DWORD PTR [rcx],ebx
   140008e2a:	(bad)  
   140008e2b:	add    BYTE PTR [rcx],bl
   140008e2d:	or     eax,DWORD PTR fs:[rax]
   140008e30:	adc    al,0x34
   140008e32:	or     al,BYTE PTR [rax]
   140008e34:	(bad)  
   140008e35:	jb     0x140008e39
   140008e37:	jo     0x140008e6f
   140008e39:	pop    rsi
   140008e3a:	add    BYTE PTR [rax],al
   140008e3c:	movabs al,ds:0xffffffff000075
   140008e45:	add    BYTE PTR [rax],al
   140008e47:	add    BYTE PTR [rax],al
   140008e49:	add    BYTE PTR [rax],al
   140008e4b:	add    BYTE PTR [rax],dl
   140008e4d:	add    BYTE PTR gs:[rax],al
   140008e50:	(bad)  
   140008e51:	(bad)  
   140008e52:	(bad)  
   140008e53:	inc    DWORD PTR [rax]
   140008e55:	add    BYTE PTR [rax],al
   140008e57:	add    BYTE PTR [rax],al
   140008e59:	add    BYTE PTR [rax],al
   140008e5b:	add    BYTE PTR [rcx],al
   140008e5d:	add    BYTE PTR [rax],al
   140008e5f:	add    BYTE PTR [rdx],al
   140008e61:	add    BYTE PTR [rax],al
   140008e63:	add    BYTE PTR [rcx],al
   140008e65:	add    BYTE PTR [rax],al
   140008e67:	add    BYTE PTR [rsi+rcx*4+0x0],ch
   140008e6b:	add    BYTE PTR [rax+0x0],al
	...
   140008e76:	add    BYTE PTR [rax],al
   140008e78:	sub    al,0x65
   140008e7a:	add    BYTE PTR [rax],al
   140008e7c:	cmp    BYTE PTR [rax],al
   140008e7e:	add    BYTE PTR [rax],al
   140008e80:	nop
   140008e81:	adc    eax,DWORD PTR [rax]
   140008e83:	add    bh,bh
   140008e85:	(bad)  
   140008e86:	(bad)  
   140008e87:	inc    edx
   140008e89:	adc    eax,DWORD PTR [rax]
   140008e8b:	add    BYTE PTR [rax],al
   140008e8d:	add    BYTE PTR [rax],al
   140008e8f:	add    al,dl
   140008e91:	adc    eax,DWORD PTR [rax]
   140008e93:	add    BYTE PTR [rcx],al
   140008e95:	add    BYTE PTR [rax],al
   140008e97:	add    cl,ah
   140008e99:	adc    eax,DWORD PTR [rax]
   140008e9b:	add    bh,bh
   140008e9d:	(bad)  
   140008e9e:	(bad)  
   140008e9f:	jmp    FWORD PTR [riz*2+0x0]
   140008ea6:	add    BYTE PTR [rax],al
   140008ea8:	cmp    DWORD PTR [rbp+0x0],esp
   140008eab:	add    BYTE PTR [rdx],al
   140008ead:	add    BYTE PTR [rax],al
   140008eaf:	add    BYTE PTR [rcx],al
   140008eb1:	(bad)  
   140008eb2:	add    al,BYTE PTR [rax]
   140008eb4:	(bad)  
   140008eb5:	xor    al,BYTE PTR [rdx]
   140008eb7:	push   rax
   140008eb8:	sbb    DWORD PTR [rdx],ecx
   140008eba:	add    al,BYTE PTR [rax]
   140008ebc:	or     dh,BYTE PTR [rdx]
   140008ebe:	(bad)  
   140008ebf:	push   rax
   140008ec0:	ss pop rsi
   140008ec2:	add    BYTE PTR [rax],al
   140008ec4:	movabs al,ds:0x900011211000075
   140008ecd:	(bad)  
   140008ece:	add    BYTE PTR [rax],al
   140008ed0:	ss pop rsi
   140008ed2:	add    BYTE PTR [rax],al
   140008ed4:	enter  0x75,0x0
   140008ed8:	(bad)  
   140008ed9:	(bad)  
   140008eda:	(bad)  
   140008edb:	push   QWORD PTR [rax+0x10000065]
   140008ee1:	sbb    BYTE PTR [rax],al
   140008ee3:	add    bh,bh
   140008ee5:	(bad)  
   140008ee6:	(bad)  
   140008ee7:	jmp    FWORD PTR [rdx]
   140008ee9:	sbb    BYTE PTR [rax],al
   140008eeb:	add    BYTE PTR [rax],al
   140008eed:	add    BYTE PTR [rax],al
   140008eef:	add    BYTE PTR [rbx],bh
   140008ef1:	sbb    BYTE PTR [rax],al
   140008ef3:	add    bh,bh
   140008ef5:	(bad)  
   140008ef6:	(bad)  
   140008ef7:	inc    DWORD PTR [rcx]
   140008ef9:	(bad)  
   140008efa:	add    al,BYTE PTR [rax]
   140008efc:	(bad)  
   140008efd:	xor    al,BYTE PTR [rdx]
   140008eff:	push   rax
   140008f00:	adc    DWORD PTR [rdx],edx
   140008f02:	add    DWORD PTR [rax],eax
   140008f04:	or     DWORD PTR [rdx+0x0],esp
   140008f07:	add    BYTE PTR [rsi],dh
   140008f09:	pop    rsi
   140008f0a:	add    BYTE PTR [rax],al
   140008f0c:	lock jne 0x140008f0f
   140008f0f:	add    bh,bh
   140008f11:	(bad)  
   140008f12:	(bad)  
   140008f13:	call   QWORD PTR [rax]
   140008f15:	data16 add BYTE PTR [rax],al
   140008f18:	movabs al,ds:0xbdffffffff000018
   140008f21:	sbb    BYTE PTR [rax],al
   140008f23:	add    BYTE PTR [rax],al
   140008f25:	add    BYTE PTR [rax],al
   140008f27:	add    cl,dl
   140008f29:	sbb    BYTE PTR [rax],al
   140008f2b:	add    bh,bh
   140008f2d:	(bad)  
   140008f2e:	(bad)  
   140008f2f:	inc    DWORD PTR [rcx]
   140008f31:	(bad)  
   140008f32:	add    al,BYTE PTR [rax]
   140008f34:	(bad)  
   140008f35:	xor    al,BYTE PTR [rdx]
   140008f37:	push   rax
   140008f38:	adc    DWORD PTR [rdx],edx
   140008f3a:	add    DWORD PTR [rax],eax
   140008f3c:	or     DWORD PTR [rdx+0x0],esp
   140008f3f:	add    BYTE PTR [rsi],dh
   140008f41:	pop    rsi
   140008f42:	add    BYTE PTR [rax],al
   140008f44:	sbb    BYTE PTR [rsi+0x0],dh
   140008f47:	add    bh,bh
   140008f49:	(bad)  
   140008f4a:	(bad)  
   140008f4b:	push   rax
   140008f4d:	add    BYTE PTR gs:[rax],al
   140008f50:	jo     0x140008f6a
   140008f52:	add    BYTE PTR [rax],al
   140008f54:	(bad)  
   140008f55:	(bad)  
   140008f56:	(bad)  
   140008f57:	dec    DWORD PTR [rdx+0x18]
   140008f5d:	add    BYTE PTR [rax],al
   140008f5f:	add    BYTE PTR [rbx-0xffffe8],bl
   140008f65:	(bad)  
   140008f66:	(bad)  
   140008f67:	inc    DWORD PTR [rcx]
   140008f69:	(bad)  
   140008f6a:	add    al,BYTE PTR [rax]
   140008f6c:	(bad)  
   140008f6d:	xor    al,BYTE PTR [rdx]
   140008f6f:	push   rax
   140008f70:	adc    DWORD PTR [rdx],edx
   140008f72:	add    DWORD PTR [rax],eax
   140008f74:	or     DWORD PTR [rdx+0x0],esp
   140008f77:	add    BYTE PTR [rsi],dh
   140008f79:	pop    rsi
   140008f7a:	add    BYTE PTR [rax],al
   140008f7c:	rex jbe 0x140008f7f
   140008f7f:	add    bh,bh
   140008f81:	(bad)  
   140008f82:	(bad)  
   140008f83:	call   QWORD PTR [rax+0x66]
   140008f86:	add    BYTE PTR [rax],al
   140008f88:	and    BYTE PTR [rcx],bl
   140008f8a:	add    BYTE PTR [rax],al
   140008f8c:	(bad)  
   140008f8d:	(bad)  
   140008f8e:	(bad)  
   140008f8f:	(bad)  
   140008f90:	cmp    eax,0x19
   140008f95:	add    BYTE PTR [rax],al
   140008f97:	add    BYTE PTR [rcx+0x19],dl
   140008f9a:	add    BYTE PTR [rax],al
   140008f9c:	(bad)  
   140008f9d:	(bad)  
   140008f9e:	(bad)  
   140008f9f:	inc    DWORD PTR [rcx]
   140008fa1:	(bad)  
   140008fa2:	add    al,BYTE PTR [rax]
   140008fa4:	(bad)  
   140008fa5:	xor    al,BYTE PTR [rdx]
   140008fa7:	push   rax
   140008fa8:	adc    DWORD PTR [rdx],edx
   140008faa:	add    DWORD PTR [rax],eax
   140008fac:	or     DWORD PTR [rdx+0x0],esp
   140008faf:	add    BYTE PTR [rsi],dh
   140008fb1:	pop    rsi
   140008fb2:	add    BYTE PTR [rax],al
   140008fb4:	push   0xffffffffff000076
   140008fb9:	(bad)  
   140008fba:	(bad)  
   140008fbb:	call   rax
   140008fbd:	add    BYTE PTR gs:[rax],al
   140008fc0:	sbb    BYTE PTR [rax],al
   140008fc3:	add    bh,bh
   140008fc5:	(bad)  
   140008fc6:	(bad)  
   140008fc7:	call   FWORD PTR [rdx+0x18]
   140008fca:	add    BYTE PTR [rax],al
   140008fcc:	add    BYTE PTR [rax],al
   140008fce:	add    BYTE PTR [rax],al
   140008fd0:	imul   ebx,DWORD PTR [rax],0x0
   140008fd3:	add    bh,bh
   140008fd5:	(bad)  
   140008fd6:	(bad)  
   140008fd7:	inc    DWORD PTR [rcx]
   140008fd9:	(bad)  
   140008fda:	add    al,BYTE PTR [rax]
   140008fdc:	(bad)  
   140008fdd:	xor    al,BYTE PTR [rdx]
   140008fdf:	push   rax
   140008fe0:	adc    DWORD PTR [rdx],edx
   140008fe2:	add    DWORD PTR [rax],eax
   140008fe4:	or     DWORD PTR [rdx+0x0],esp
   140008fe7:	add    BYTE PTR [rsi],dh
   140008fe9:	pop    rsi
   140008fea:	add    BYTE PTR [rax],al
   140008fec:	nop
   140008fed:	jbe    0x140008fef
   140008fef:	add    bh,bh
   140008ff1:	(bad)  
   140008ff2:	(bad)  
   140008ff3:	push   QWORD PTR [rax]
   140008ff5:	data16 add BYTE PTR [rax],al
   140008ff8:	loopne 0x140009012
   140008ffa:	add    BYTE PTR [rax],al
   140008ffc:	(bad)  
   140008ffd:	(bad)  
   140008ffe:	(bad)  
   140008fff:	(bad)  
   140009000:	std    
   140009001:	sbb    BYTE PTR [rax],al
   140009003:	add    BYTE PTR [rax],al
   140009005:	add    BYTE PTR [rax],al
   140009007:	add    BYTE PTR [rcx],dl
   140009009:	sbb    DWORD PTR [rax],eax
   14000900b:	add    bh,bh
   14000900d:	(bad)  
   14000900e:	(bad)  
   14000900f:	inc    DWORD PTR [rcx]
   140009011:	(bad)  
   140009012:	add    al,BYTE PTR [rax]
   140009014:	(bad)  
   140009015:	xor    al,BYTE PTR [rdx]
   140009017:	push   rax
   140009018:	add    DWORD PTR [rax+rcx*1],edx
   14000901b:	add    BYTE PTR [rsp+riz*2],dl
   14000901e:	or     BYTE PTR [rax],al
   140009020:	adc    al,0x54
   140009022:	(bad)  
   140009023:	add    BYTE PTR [rsp+rsi*1],dl
   140009026:	(bad)  
   140009027:	add    BYTE PTR [rdx+rsi*1],dl
   14000902a:	adc    BYTE PTR [rax+0x1],dh
   14000902d:	(bad)  
   14000902e:	add    DWORD PTR [rax],eax
   140009030:	(bad)  
   140009031:	rex.X add BYTE PTR [rax],al
   140009034:	adc    DWORD PTR [rsi+rax*1],ebx
   140009037:	add    BYTE PTR [rsp+riz*2],bl
   14000903a:	adc    al,BYTE PTR [rax]
   14000903c:	sbb    BYTE PTR [rax+rdx*1],dh
   14000903f:	add    BYTE PTR [rdx+rdx*8],cl
   140009042:	or     BYTE PTR [rax+0x36],dh
   140009045:	pop    rsi
   140009046:	add    BYTE PTR [rax],al
   140009048:	sar    BYTE PTR [rax+0x0],0x0
   14000904c:	(bad)  
   14000904d:	(bad)  
   14000904e:	(bad)  
   14000904f:	call   rax
   140009051:	imul   eax,DWORD PTR [rax],0x0
   140009057:	add    ah,bl
   140009059:	imul   eax,DWORD PTR [rax],0x0
   14000905f:	add    BYTE PTR [rax-0xffffa7],al
   140009065:	(bad)  
   140009066:	(bad)  
   140009067:	jmp    QWORD PTR [rbp+0x59]
   14000906d:	add    BYTE PTR [rax],al
   14000906f:	add    BYTE PTR [rdi+0x1000059],ch
   140009075:	add    BYTE PTR [rax],al
   140009077:	add    cl,dh
   140009079:	pop    rcx
   14000907a:	add    BYTE PTR [rax],al
   14000907c:	add    BYTE PTR [rax],al
   14000907e:	add    BYTE PTR [rax],al
   140009080:	cld    
   140009081:	pop    rcx
   140009082:	add    BYTE PTR [rax],al
   140009084:	(bad)  
   140009085:	(bad)  
   140009086:	(bad)  
   140009087:	call   QWORD PTR [rcx]
   140009089:	(bad)  
   14000908a:	or     DWORD PTR [rax],eax
   14000908c:	(bad)  
   14000908d:	fs xor eax,0x34342300
   140009093:	add    BYTE PTR [rdi],dl
   140009095:	add    DWORD PTR [rax],esi
   140009097:	add    BYTE PTR [rbx],cl
   140009099:	loopne 0x1400090a4
   14000909b:	jo     0x1400090a5
   14000909d:	push   rax
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	ss pop rsi
   1400090a2:	add    BYTE PTR [rax],al
   1400090a4:	call   0x13f009121
   1400090a9:	(bad)  
   1400090aa:	(bad)  
   1400090ab:	inc    DWORD PTR [rax+0x69]
   1400090b1:	add    BYTE PTR [rax],al
   1400090b3:	add    BYTE PTR [rcx+rbp*2+0x10000],cl
   1400090ba:	add    BYTE PTR [rax],al
   1400090bc:	cwde   
   1400090bd:	imul   eax,DWORD PTR [rax],0x200
   1400090c3:	add    BYTE PTR [rcx+rbp*2+0x30000],ah
   1400090ca:	add    BYTE PTR [rax],al
   1400090cc:	mov    al,0x69
   1400090ce:	add    BYTE PTR [rax],al
   1400090d0:	add    al,BYTE PTR [rax]
   1400090d2:	add    BYTE PTR [rax],al
   1400090d4:	mov    al,0x69
   1400090d6:	add    BYTE PTR [rax],al
   1400090d8:	add    DWORD PTR [rax],eax
   1400090da:	add    BYTE PTR [rax],al
   1400090dc:	mov    al,0x69
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	add    BYTE PTR [rax],al
   1400090e2:	add    BYTE PTR [rax],al
   1400090e4:	mov    al,0x69
   1400090e6:	add    BYTE PTR [rax],al
   1400090e8:	(bad)  
   1400090e9:	add    BYTE PTR [rax],al
   1400090eb:	add    BYTE PTR [rcx+rbp*2+0x57a00000],bh
   1400090f2:	add    BYTE PTR [rax],al
   1400090f4:	(bad)  
   1400090f5:	(bad)  
   1400090f6:	(bad)  
   1400090f7:	call   rax
   1400090f9:	push   rdi
   1400090fa:	add    BYTE PTR [rax],al
   1400090fc:	add    BYTE PTR [rax],al
   1400090fe:	add    BYTE PTR [rax],al
   140009100:	cld    
   140009101:	push   rdi
   140009102:	add    BYTE PTR [rax],al
   140009104:	add    DWORD PTR [rax],eax
   140009106:	add    BYTE PTR [rax],al
   140009108:	and    eax,0x2000058
   14000910d:	add    BYTE PTR [rax],al
   14000910f:	add    BYTE PTR [rdx+0x58],cl
   140009112:	add    BYTE PTR [rax],al
   140009114:	add    eax,DWORD PTR [rax]
   140009116:	add    BYTE PTR [rax],al
   140009118:	sbb    DWORD PTR [rax+0x0],0x0
   14000911c:	add    eax,0xa3000000
   140009121:	pop    rax
   140009122:	add    BYTE PTR [rax],al
   140009124:	(bad)  
   140009125:	add    BYTE PTR [rax],al
   140009127:	add    al,cl
   140009129:	pop    rax
   14000912a:	add    BYTE PTR [rax],al
   14000912c:	(bad)  
   14000912d:	add    BYTE PTR [rax],al
   14000912f:	add    ch,ch
   140009131:	pop    rax
   140009132:	add    BYTE PTR [rax],al
   140009134:	or     BYTE PTR [rax],al
   140009136:	add    BYTE PTR [rax],al
   140009138:	(bad)  
   140009139:	pop    rcx
   14000913a:	add    BYTE PTR [rax],al
   14000913c:	(bad)  
   14000913d:	add    BYTE PTR [rax],al
   14000913f:	add    BYTE PTR [rax],dh
   140009141:	pop    rcx
   140009142:	add    BYTE PTR [rax],al
   140009144:	add    BYTE PTR [rax],al
   140009146:	add    BYTE PTR [rax],al
   140009148:	cmp    bl,BYTE PTR [rcx+0x0]
   14000914b:	add    bh,bh
   14000914d:	(bad)  
   14000914e:	(bad)  
   14000914f:	call   QWORD PTR [rcx]
   140009151:	sbb    eax,DWORD PTR [rdi]
   140009153:	add    BYTE PTR [rbx],bl
   140009155:	fs (bad) 
   140009157:	add    BYTE PTR [rdi],dl
   140009159:	xor    al,0x15
   14000915b:	add    BYTE PTR [rbx],cl
   14000915d:	add    DWORD PTR [rdx],edx
   14000915f:	add    BYTE PTR [rax+rsi*2],al
   140009162:	add    BYTE PTR [rax],al
   140009164:	ss pop rsi
   140009166:	add    BYTE PTR [rax],al
   140009168:	adc    BYTE PTR [rcx+0x0],bh
   14000916b:	add    bh,bh
   14000916d:	(bad)  
   14000916e:	(bad)  
   14000916f:	push   rax
   140009171:	imul   eax,DWORD PTR [rax],0x0
   140009177:	add    BYTE PTR [rax+0x5a],al
   14000917a:	add    BYTE PTR [rax],al
   14000917c:	(bad)  
   14000917d:	(bad)  
   14000917e:	(bad)  
   14000917f:	inc    DWORD PTR [rdi+0x5a]
   140009185:	add    BYTE PTR [rax],al
   140009187:	add    BYTE PTR [rbx-0xffffa6],bh
   14000918d:	(bad)  
   14000918e:	(bad)  
   14000918f:	call   QWORD PTR [rcx]
   140009191:	sbb    BYTE PTR [rax+rax*1],al
   140009194:	sbb    BYTE PTR [rcx+rcx*1],dh
   140009197:	add    BYTE PTR [rdx],cl
   140009199:	push   rdx
   14000919a:	(bad)  
   14000919b:	jo     0x1400091d3
   14000919d:	pop    rsi
   14000919e:	add    BYTE PTR [rax],al
   1400091a0:	cmp    BYTE PTR [rcx+0x0],bh
   1400091a3:	add    bh,bh
   1400091a5:	(bad)  
   1400091a6:	(bad)  
   1400091a7:	jmp    QWORD PTR [rax+0x69]
   1400091aa:	add    BYTE PTR [rax],al
   1400091ac:	add    BYTE PTR [rax],al
   1400091ae:	add    BYTE PTR [rax],al
   1400091b0:	adc    BYTE PTR [rdx+0x0],0x0
   1400091b4:	(bad)  
   1400091b5:	(bad)  
   1400091b6:	(bad)  
   1400091b7:	jmp    QWORD PTR [rbp+0x52]
   1400091bd:	add    BYTE PTR [rax],al
   1400091bf:	add    ch,bl
   1400091c1:	push   rdx
   1400091c2:	add    BYTE PTR [rax],al
   1400091c4:	(bad)  
   1400091c5:	(bad)  
   1400091c6:	(bad)  
   1400091c7:	inc    DWORD PTR [rcx]
   1400091c9:	or     al,BYTE PTR [rax+rax*1]
   1400091cc:	or     dh,BYTE PTR [rsi+rax*1]
   1400091cf:	add    BYTE PTR [rdx],cl
   1400091d1:	xor    al,BYTE PTR [rsi]
   1400091d3:	jo     0x1400091d6
   1400091d5:	or     al,BYTE PTR [rax+rax*1]
   1400091d8:	or     dh,BYTE PTR [rsi+rax*1]
   1400091db:	add    BYTE PTR [rdx],cl
   1400091dd:	xor    al,BYTE PTR [rsi]
   1400091df:	jo     0x1400091e2
   1400091e1:	or     al,BYTE PTR [rax+rax*1]
   1400091e4:	or     dh,BYTE PTR [rdi+rax*1]
   1400091e7:	add    BYTE PTR [rdx],cl
   1400091e9:	xor    al,BYTE PTR [rsi]
   1400091eb:	(bad)  
   1400091ec:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b40591f4
   1400091f2:	(bad)  
   1400091f3:	add    al,ah
   1400091f5:	push   rbx
   1400091f6:	add    BYTE PTR [rax],al
   1400091f8:	add    al,0x54
   1400091fa:	add    BYTE PTR [rax],al
   1400091fc:	loopne 0x14000918f
   1400091fe:	add    BYTE PTR [rax],al
   140009200:	and    DWORD PTR [rax],eax
   140009202:	add    BYTE PTR [rax],al
   140009204:	loopne 0x140009259
   140009206:	add    BYTE PTR [rax],al
   140009208:	add    al,0x54
   14000920a:	add    BYTE PTR [rax],al
   14000920c:	loopne 0x14000919f
   14000920e:	add    BYTE PTR [rax],al
   140009210:	adc    DWORD PTR [rdx],edx
   140009212:	add    eax,DWORD PTR [rax]
   140009214:	or     DWORD PTR [rcx],eax
   140009216:	adc    al,BYTE PTR [rax]
   140009218:	add    dh,BYTE PTR [rax]
   14000921a:	add    BYTE PTR [rax],al
   14000921c:	ss pop rsi
   14000921e:	add    BYTE PTR [rax],al
   140009220:	(bad)  
   140009221:	jns    0x140009223
   140009223:	add    bh,bh
   140009225:	(bad)  
   140009226:	(bad)  
   140009227:	push   QWORD PTR [rax+0x69]
   14000922a:	add    BYTE PTR [rax],al
   14000922c:	add    BYTE PTR [rax],al
   14000922e:	add    BYTE PTR [rax],al
   140009230:	lock push rsi
   140009232:	add    BYTE PTR [rax],al
   140009234:	(bad)  
   140009235:	(bad)  
   140009236:	(bad)  
   140009237:	dec    DWORD PTR [rbp+0x57]
   14000923a:	add    BYTE PTR [rax],al
   14000923c:	add    BYTE PTR [rax],al
   14000923e:	add    BYTE PTR [rax],al
   140009240:	adc    DWORD PTR [rdi+0x0],0xffffff00
   140009247:	inc    DWORD PTR [rcx]
   140009249:	(bad)  
   14000924a:	add    al,BYTE PTR [rax]
   14000924c:	(bad)  
   14000924d:	xor    al,BYTE PTR [rdx]
   14000924f:	xor    BYTE PTR [rcx],al
   140009251:	(bad)  
   140009252:	add    al,BYTE PTR [rax]
   140009254:	(bad)  
   140009255:	xor    al,BYTE PTR [rdx]
   140009257:	xor    BYTE PTR [rcx],al
   140009259:	(bad)  
   14000925a:	add    al,BYTE PTR [rax]
   14000925c:	(bad)  
   14000925d:	xor    al,BYTE PTR [rdx]
   14000925f:	xor    BYTE PTR [rcx],dl
   140009261:	or     al,0x1
   140009263:	add    BYTE PTR [rdx+riz*1],al
   140009266:	add    BYTE PTR [rax],al
   140009268:	ss pop rsi
   14000926a:	add    BYTE PTR [rax],al
   14000926c:	mov    BYTE PTR [rcx+0x0],bh
   14000926f:	add    bh,bh
   140009271:	(bad)  
   140009272:	(bad)  
   140009273:	call   QWORD PTR [rax+0x69]
   140009276:	add    BYTE PTR [rax],al
   140009278:	lock rex.WRXB add BYTE PTR [r8],r8b
   14000927c:	(bad)  
   14000927d:	(bad)  
   14000927e:	(bad)  
   14000927f:	inc    DWORD PTR [rdx]
   140009281:	push   rax
   140009282:	add    BYTE PTR [rax],al
   140009284:	add    BYTE PTR [rax],al
   140009286:	add    BYTE PTR [rax],al
   140009288:	and    dl,BYTE PTR [rax+0x0]
   14000928b:	add    bh,bh
   14000928d:	(bad)  
   14000928e:	(bad)  
   14000928f:	inc    DWORD PTR [rcx]
   140009291:	(bad)  
   140009292:	add    al,BYTE PTR [rax]
   140009294:	(bad)  
   140009295:	xor    al,BYTE PTR [rdx]
   140009297:	xor    BYTE PTR [rcx],al
   140009299:	(bad)  
   14000929a:	add    al,BYTE PTR [rax]
   14000929c:	(bad)  
   14000929d:	xor    al,BYTE PTR [rdx]
   14000929f:	xor    BYTE PTR [rcx],al
   1400092a1:	(bad)  
   1400092a2:	add    al,BYTE PTR [rax]
   1400092a4:	(bad)  
   1400092a5:	xor    al,BYTE PTR [rdx]
   1400092a7:	xor    BYTE PTR [rcx],al
   1400092a9:	or     al,BYTE PTR [rax+rax*1]
   1400092ac:	or     dh,BYTE PTR [rsi+rax*1]
   1400092af:	add    BYTE PTR [rdx],cl
   1400092b1:	xor    al,BYTE PTR [rsi]
   1400092b3:	jo     0x1400092b6
   1400092b5:	add    al,0x1
   1400092b7:	add    BYTE PTR [rdx+rax*2],al
   1400092ba:	add    BYTE PTR [rax],al
   1400092bc:	add    DWORD PTR [rsi],eax
   1400092be:	add    al,BYTE PTR [rax]
   1400092c0:	(bad)  
   1400092c1:	xor    al,BYTE PTR [rdx]
   1400092c3:	xor    BYTE PTR [rcx],al
   1400092c5:	add    al,0x1
   1400092c7:	add    BYTE PTR [rdx+rax*2],al
   1400092ca:	add    BYTE PTR [rax],al
   1400092cc:	adc    DWORD PTR [rax],ebx
   1400092ce:	add    eax,0x14621800
   1400092d3:	loopne 0x1400092e7
   1400092d5:	jo     0x1400092e8
   1400092d7:	(bad)  
   1400092d8:	adc    BYTE PTR [rax],dh
   1400092da:	add    BYTE PTR [rax],al
   1400092dc:	in     al,dx
   1400092dd:	(bad)  
   1400092de:	add    BYTE PTR [rax],al
   1400092e0:	add    DWORD PTR [rax],eax
   1400092e2:	add    BYTE PTR [rax],al
   1400092e4:	rex.WRXB pop r12
   1400092e6:	add    BYTE PTR [rax],al
   1400092e8:	outs   dx,DWORD PTR ds:[rsi]
   1400092e9:	pop    rsp
   1400092ea:	add    BYTE PTR [rax],al
   1400092ec:	cld    
   1400092ed:	imul   eax,DWORD PTR [rax],0x0
   1400092f3:	add    BYTE PTR [rcx],al
   1400092f5:	(bad)  
   1400092f6:	add    al,BYTE PTR [rax]
   1400092f8:	(bad)  
   1400092f9:	xor    al,BYTE PTR [rdx]
   1400092fb:	push   rax
   1400092fc:	or     DWORD PTR [rdi],edx
   1400092fe:	(bad)  
   1400092ff:	add    BYTE PTR [rdi],dl
   140009301:	xor    al,0xd
   140009303:	add    BYTE PTR [rdi],dl
   140009305:	jb     0x14000931a
   140009307:	loopne 0x14000931a
   140009309:	jo     0x14000931b
   14000930b:	(bad)  
   14000930c:	in     al,dx
   14000930d:	(bad)  
   14000930e:	add    BYTE PTR [rax],al
   140009310:	add    DWORD PTR [rax],eax
   140009312:	add    BYTE PTR [rax],al
   140009314:	mov    ebx,0xd400005c
   140009319:	pop    rsp
   14000931a:	add    BYTE PTR [rax],al
   14000931c:	sub    BYTE PTR [rdx+0x0],ch
   14000931f:	add    ah,dl
   140009321:	pop    rsp
   140009322:	add    BYTE PTR [rax],al
   140009324:	add    DWORD PTR [rsi],eax
   140009326:	add    al,BYTE PTR [rax]
   140009328:	(bad)  
   140009329:	xor    al,BYTE PTR [rdx]
   14000932b:	push   rax
   14000932c:	add    DWORD PTR [rcx+rax*1],eax
   14000932f:	add    BYTE PTR [rdx+rax*2],al
   140009332:	add    BYTE PTR [rax],al
   140009334:	add    DWORD PTR [rcx+rax*1],eax
   140009337:	add    BYTE PTR [rdx+rax*2],al
   14000933a:	add    BYTE PTR [rax],al
   14000933c:	adc    DWORD PTR [rsi],eax
   14000933e:	add    al,BYTE PTR [rax]
   140009340:	(bad)  
   140009341:	xor    al,BYTE PTR [rdx]
   140009343:	xor    ah,ch
   140009345:	(bad)  
   140009346:	add    BYTE PTR [rax],al
   140009348:	add    DWORD PTR [rax],eax
   14000934a:	add    BYTE PTR [rax],al
   14000934c:	jnp    0x1400093ab
   14000934e:	add    BYTE PTR [rax],al
   140009350:	loope  0x1400093af
   140009352:	add    BYTE PTR [rax],al
   140009354:	imul   ebp,DWORD PTR [rdx+0x0],0x0
   14000935b:	add    BYTE PTR [rcx],al
   14000935d:	(bad)  
   14000935e:	add    al,BYTE PTR [rax]
   140009360:	(bad)  
   140009361:	xor    al,BYTE PTR [rdx]
   140009363:	push   rax
   140009364:	add    DWORD PTR [rsi],eax
   140009366:	add    al,BYTE PTR [rax]
   140009368:	(bad)  
   140009369:	xor    al,BYTE PTR [rdx]
   14000936b:	xor    BYTE PTR [rcx],al
   14000936d:	clts   
   14000936f:	add    BYTE PTR [rdi],cl
   140009371:	fs (bad) 
   140009373:	add    BYTE PTR [rdi],cl
   140009375:	xor    al,0x6
   140009377:	add    BYTE PTR [rdi],cl
   140009379:	xor    cl,BYTE PTR [rbx]
   14000937b:	jo     0x14000937e
   14000937d:	add    al,0x1
   14000937f:	add    BYTE PTR [rdx+rax*2],al
   140009382:	add    BYTE PTR [rax],al
   140009384:	add    DWORD PTR [rcx+rax*1],eax
   140009387:	add    BYTE PTR [rdx+riz*2],al
   14000938a:	add    BYTE PTR [rax],al
   14000938c:	or     DWORD PTR [rsi],eax
   14000938e:	add    al,BYTE PTR [rax]
   140009390:	(bad)  
   140009391:	xor    al,BYTE PTR [rdx]
   140009393:	jo     0x140009381
   140009395:	(bad)  
   140009396:	add    BYTE PTR [rax],al
   140009398:	add    DWORD PTR [rax],eax
   14000939a:	add    BYTE PTR [rax],al
   14000939c:	(bad)  
   14000939d:	(bad)  
   14000939e:	add    BYTE PTR [rax],al
   1400093a0:	push   rbp
   1400093a1:	(bad)  
   1400093a2:	add    BYTE PTR [rax],al
   1400093a4:	test   BYTE PTR [rdx+0x0],ch
   1400093a7:	add    BYTE PTR [rbp+0x61],dl
   1400093aa:	add    BYTE PTR [rax],al
   1400093ac:	add    DWORD PTR [rsi],eax
   1400093ae:	add    al,BYTE PTR [rax]
   1400093b0:	(bad)  
   1400093b1:	xor    al,BYTE PTR [rdx]
   1400093b3:	push   rax
   1400093b4:	add    DWORD PTR [rcx+rax*1],eax
   1400093b7:	add    BYTE PTR [rdx+rax*2],al
   1400093ba:	add    BYTE PTR [rax],al
   1400093bc:	add    DWORD PTR [rcx+rax*1],eax
   1400093bf:	add    BYTE PTR [rdx+rax*2],al
   1400093c2:	add    BYTE PTR [rax],al
   1400093c4:	add    DWORD PTR [rcx+rax*1],eax
   1400093c7:	add    BYTE PTR [rdx+rax*2],al
   1400093ca:	add    BYTE PTR [rax],al
   1400093cc:	or     DWORD PTR [rdx],ecx
   1400093ce:	add    al,0x0
   1400093d0:	or     dh,BYTE PTR [rsi+rax*1]
   1400093d3:	add    BYTE PTR [rdx],cl
   1400093d5:	xor    al,BYTE PTR [rsi]
   1400093d7:	jo     0x1400093c5
   1400093d9:	(bad)  
   1400093da:	add    BYTE PTR [rax],al
   1400093dc:	add    DWORD PTR [rax],eax
   1400093de:	add    BYTE PTR [rax],al
   1400093e0:	frstor [rdx+0x0]
   1400093e3:	add    BYTE PTR [rax],dl
   1400093e5:	movsxd eax,DWORD PTR [rax]
   1400093e7:	add    BYTE PTR [rax+0x1000006a],dh
   1400093ed:	movsxd eax,DWORD PTR [rax]
   1400093ef:	add    BYTE PTR [rcx],al
   1400093f1:	(bad)  
   1400093f2:	add    al,BYTE PTR [rax]
   1400093f4:	(bad)  
   1400093f5:	xor    al,BYTE PTR [rdx]
   1400093f7:	push   rax
   1400093f8:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d9402
   1400093fe:	or     DWORD PTR [rax],eax
   140009400:	or     eax,0x1500632
   140009405:	or     al,BYTE PTR [rax+rax*1]
   140009408:	or     dh,BYTE PTR [rsi+rax*1]
   14000940b:	add    BYTE PTR [rdx],cl
   14000940d:	xor    al,BYTE PTR [rsi]
   14000940f:	jo     0x140009412
   140009411:	or     al,BYTE PTR [rax+rax*1]
   140009414:	or     dh,BYTE PTR [rsi+rax*1]
   140009417:	add    BYTE PTR [rdx],cl
   140009419:	xor    al,BYTE PTR [rsi]
   14000941b:	jo     0x14000941d
   14000941d:	add    BYTE PTR [rax],al
   14000941f:	add    BYTE PTR [rax],al
   140009421:	add    BYTE PTR [rax],al
   140009423:	add    BYTE PTR [rax-0x50],dl
   140009426:	add    BYTE PTR [rax],al
   140009428:	add    BYTE PTR [rax],al
   14000942a:	add    BYTE PTR [rax],al
   14000942c:	(bad)  
   14000942d:	(bad)  
   14000942e:	(bad)  
   14000942f:	inc    DWORD PTR [rax]
   140009431:	add    BYTE PTR [rax],al
   140009433:	add    BYTE PTR [rax],bl
   140009435:	add    BYTE PTR [rax],al
   140009437:	add    dh,al
   140009439:	pop    rsi
	...
   14000944a:	add    BYTE PTR [rax],al
   14000944c:	(bad)  
   14000944d:	pop    rbx
   14000944e:	add    BYTE PTR [rax],al
   140009450:	add    BYTE PTR [rax],al
   140009452:	add    BYTE PTR [rax],al
   140009454:	push   0x94
	...
   140009465:	add    BYTE PTR [rax],al
   140009467:	add    BYTE PTR [rdx],al
   140009469:	add    BYTE PTR [rax],al
   14000946b:	add    BYTE PTR [rax+0x20000094],al
   140009471:	xchg   esp,eax
	...
   140009482:	add    BYTE PTR [rax],al
   140009484:	mov    BYTE PTR [rcx+0x0],dh
   14000948a:	add    BYTE PTR [rax],al
   14000948c:	(bad)  
   14000948d:	(bad)  
   14000948e:	(bad)  
   14000948f:	inc    DWORD PTR [rax]
   140009491:	add    BYTE PTR [rax],al
   140009493:	add    BYTE PTR [rax+0x0],al
   140009496:	add    BYTE PTR [rax],al
   140009498:	adc    BYTE PTR [rdx+0x0],0x0
	...
   1400094b4:	mov    ch,0x1e
   1400094b6:	sbb    DWORD PTR [rax+0x0],0x5a000000
   1400094bd:	xchg   ebp,eax
   1400094be:	add    BYTE PTR [rax],al
   1400094c0:	add    DWORD PTR [rax],eax
   1400094c2:	add    BYTE PTR [rax],al
   1400094c4:	or     eax,0xd000000
   1400094c9:	add    BYTE PTR [rax],al
   1400094cb:	add    al,bl
   1400094cd:	xchg   esp,eax
   1400094ce:	add    BYTE PTR [rax],al
   1400094d0:	or     al,0x95
   1400094d2:	add    BYTE PTR [rax],al
   1400094d4:	rex xchg ebp,eax
   1400094d6:	add    BYTE PTR [rax],al
   1400094d8:	adc    BYTE PTR [rdx+0x0],0x0
   1400094dc:	and    BYTE PTR [rax],al
   1400094df:	add    BYTE PTR [rax+0x40000053],dl
   1400094e5:	and    eax,0x26400000
   1400094ea:	add    BYTE PTR [rax],al
   1400094ec:	mov    eax,0xe8000079
   1400094f1:	ja     0x1400094f3
   1400094f3:	add    BYTE PTR [rax-0x7fffffa9],ah
   1400094f9:	pop    rcx
   1400094fa:	add    BYTE PTR [rax],al
   1400094fc:	rex pop rdx
   1400094fe:	add    BYTE PTR [rax],al
   140009500:	and    BYTE PTR [rax-0x4fd80000],dh
   140009506:	add    BYTE PTR [rax],al
   140009508:	sbb    BYTE PTR [rax-0x6a9c0000],dh
   14000950e:	add    BYTE PTR [rax],al
   140009510:	lea    edx,[rbp-0x6a410000]
   140009516:	add    BYTE PTR [rax],al
   140009518:	in     eax,dx
   140009519:	xchg   ebp,eax
   14000951a:	add    BYTE PTR [rax],al
   14000951c:	and    al,0x96
   14000951e:	add    BYTE PTR [rax],al
   140009520:	xchg   r14,rax
   140009522:	add    BYTE PTR [rax],al
   140009524:	imul   edx,DWORD PTR [rsi-0x696e0000],0x98090000
   14000952e:	add    BYTE PTR [rax],al
   140009530:	gs cdq 
   140009532:	add    BYTE PTR [rax],al
   140009534:	cdq    
   140009535:	cdq    
   140009536:	add    BYTE PTR [rax],al
   140009538:	stos   BYTE PTR es:[rdi],al
   140009539:	cdq    
   14000953a:	add    BYTE PTR [rax],al
   14000953c:	mov    esi,0x99
   140009541:	add    BYTE PTR [rcx],al
   140009543:	add    BYTE PTR [rdx],al
   140009545:	add    BYTE PTR [rbx],al
   140009547:	add    BYTE PTR [rax+rax*1],al
   14000954a:	add    eax,0x7000600
   14000954f:	add    BYTE PTR [rax],cl
   140009551:	add    BYTE PTR [rcx],cl
   140009553:	add    BYTE PTR [rdx],cl
   140009555:	add    BYTE PTR [rbx],cl
   140009557:	add    BYTE PTR [rax+rax*1],cl
   14000955a:	ins    DWORD PTR es:[rdi],dx
   14000955b:	ja     0x1400095bc
   14000955d:	xor    al,0x61
   14000955f:	cs gs js 0x1400095c8
   140009563:	add    BYTE PTR [rdi],bh
   140009565:	(bad)  
   140009566:	xor    BYTE PTR [rdx+0x61],cl
   140009569:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   140009571:	outs   dx,BYTE PTR ds:[rsi]
   140009572:	gs jb  0x1400095ba
   140009575:	js     0x1400095da
   140009577:	gs jo  0x1400095ee
   14000957a:	imul   ebp,DWORD PTR [rdi+0x6e],0x45514040
   140009581:	rex.B
   140009582:	rex.B
   140009583:	rex
   140009584:	rex.B
   140009585:	rex.RB
   140009586:	rex.X push rsi
   140009588:	xor    BYTE PTR [rax+0x40],al
   14000958b:	pop    rdx
   14000958c:	add    BYTE PTR [rdi],bh
   14000958e:	(bad)  
   14000958f:	xor    BYTE PTR [rdx+0x61],cl
   140009592:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   14000959a:	outs   dx,BYTE PTR ds:[rsi]
   14000959b:	gs jb  0x1400095ea
   14000959e:	(bad)  
   14000959f:	jne    0x14000960f
   1400095a1:	movsxd ebp,DWORD PTR [rax+0x65]
   1400095a4:	jb     0x1400095f6
   1400095a6:	jb     0x140009617
   1400095a8:	jo     0x14000960f
   1400095aa:	jb     0x140009620
   1400095ac:	imul   esp,DWORD PTR [rbp+0x73],0x45514040
   1400095b3:	rex.B
   1400095b4:	rex.B
   1400095b5:	rex
   1400095b6:	rex.B
   1400095b7:	rex.RB
   1400095b8:	rex.X push rsi
   1400095ba:	xor    BYTE PTR [rax+0x40],al
   1400095bd:	pop    rdx
   1400095be:	add    BYTE PTR [rdi],bh
   1400095c0:	(bad)  
   1400095c1:	xor    al,0x4a
   1400095c3:	(bad)  
   1400095c4:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   1400095cc:	outs   dx,BYTE PTR ds:[rsi]
   1400095cd:	gs jb  0x140009615
   1400095d0:	js     0x140009635
   1400095d2:	gs jo  0x140009649
   1400095d5:	imul   ebp,DWORD PTR [rdi+0x6e],0x45514040
   1400095dc:	rex.B
   1400095dd:	rex.B
   1400095de:	rex.B
   1400095df:	rex.RB
   1400095e0:	push   r14
   1400095e2:	xor    BYTE PTR [rax+0x41],al
   1400095e5:	rex.RB
   1400095e6:	rex.X push rsi
   1400095e8:	xor    BYTE PTR [rax+0x40],al
   1400095eb:	pop    rdx
   1400095ec:	add    BYTE PTR [rdi],bh
   1400095ee:	(bad)  
   1400095ef:	xor    al,0x4a
   1400095f1:	(bad)  
   1400095f2:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   1400095fa:	outs   dx,BYTE PTR ds:[rsi]
   1400095fb:	gs jb  0x14000964a
   1400095fe:	(bad)  
   1400095ff:	jne    0x14000966f
   140009601:	movsxd ebp,DWORD PTR [rax+0x65]
   140009604:	jb     0x140009656
   140009606:	jb     0x140009677
   140009608:	jo     0x14000966f
   14000960a:	jb     0x140009680
   14000960c:	imul   esp,DWORD PTR [rbp+0x73],0x45514040
   140009613:	rex.B
   140009614:	rex.B
   140009615:	rex.B
   140009616:	rex.RB
   140009617:	push   r14
   140009619:	xor    BYTE PTR [rax+0x41],al
   14000961c:	rex.RB
   14000961d:	rex.X push rsi
   14000961f:	xor    BYTE PTR [rax+0x40],al
   140009622:	pop    rdx
   140009623:	add    BYTE PTR [rdi],bh
   140009625:	(bad)  
   140009626:	xor    al,0x4a
   140009628:	imul   esi,DWORD PTR [rcx+rax*2+0x63],0x61766974
   140009630:	je     0x14000969b
   140009632:	outs   dx,DWORD PTR ds:[rsi]
   140009633:	outs   dx,BYTE PTR ds:[rsi]
   140009634:	rex
   140009635:	rex push rcx
   140009637:	rex.RB
   140009638:	rex.B
   140009639:	rex.B
   14000963a:	rex.B
   14000963b:	rex.RB
   14000963c:	push   r14
   14000963e:	xor    BYTE PTR [rax+0x41],al
   140009641:	rex.RB
   140009642:	rex.X push rsi
   140009644:	xor    BYTE PTR [rax+0x40],al
   140009647:	pop    rdx
   140009648:	add    BYTE PTR [rdi],bh
   14000964a:	(bad)  
   14000964b:	pop    rdi
   14000964c:	(bad)  
   14000964d:	rex.WX (bad) 
   14000964f:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   140009657:	outs   dx,BYTE PTR ds:[rsi]
   140009658:	gs jb  0x1400096a0
   14000965b:	js     0x1400096c0
   14000965d:	gs jo  0x1400096d4
   140009660:	imul   ebp,DWORD PTR [rdi+0x6e],0x42364040
   140009667:	add    BYTE PTR [rdi],dil
   14000966a:	(bad)  
   14000966b:	pop    rdi
   14000966c:	(bad)  
   14000966d:	rex.WX (bad) 
   14000966f:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   140009677:	outs   dx,BYTE PTR ds:[rsi]
   140009678:	gs jb  0x1400096c7
   14000967b:	(bad)  
   14000967c:	jne    0x1400096ec
   14000967e:	movsxd ebp,DWORD PTR [rax+0x65]
   140009681:	jb     0x1400096d3
   140009683:	jb     0x1400096f4
   140009685:	jo     0x1400096ec
   140009687:	jb     0x1400096fd
   140009689:	imul   esp,DWORD PTR [rbp+0x73],0x42364040
   140009690:	add    BYTE PTR [rdi],dil
   140009693:	ins    BYTE PTR es:[rdi],dx
   140009694:	(bad)  
   140009695:	jne    0x140009705
   140009697:	movsxd ebp,DWORD PTR [rax+0x4a]
   14000969a:	imul   esi,DWORD PTR [rax+rax*2+0x4a],0x63417469
   1400096a2:	je     0x14000970d
   1400096a4:	jbe    0x140009707
   1400096a6:	je     0x140009711
   1400096a8:	outs   dx,DWORD PTR ds:[rsi]
   1400096a9:	outs   dx,BYTE PTR ds:[rsi]
   1400096aa:	rex
   1400096ab:	rex
   1400096ac:	rex.WB
   1400096ad:	rex.RB
   1400096ae:	rex.B
   1400096af:	rex.B
   1400096b0:	rex.W push rax
   1400096b2:	rex.RB
   1400096b3:	push   r14
   1400096b5:	rex.WX (bad) 
   1400096b7:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   1400096bf:	outs   dx,BYTE PTR ds:[rsi]
   1400096c0:	gs jb  0x14000970f
   1400096c3:	(bad)  
   1400096c4:	jne    0x140009734
   1400096c6:	movsxd ebp,DWORD PTR [rax+0x65]
   1400096c9:	jb     0x14000970b
   1400096cb:	rex push rsi
   1400096cd:	(bad)  
   1400096ce:	and    al,0x62
   1400096d0:	(bad)  
   1400096d1:	jae    0x14000973c
   1400096d3:	movsxd ebx,DWORD PTR [rdi+0x73]
   1400096d6:	je     0x14000974a
   1400096d8:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   1400096df:	and    al,0x63
   1400096e1:	push   0x745f7261
   1400096e6:	jb     0x140009749
   1400096e8:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   1400096f0:	fs rex
   1400096f2:	rex push rsi
   1400096f4:	(bad)  
   1400096f5:	and    al,0x61
   1400096f7:	ins    BYTE PTR es:[rdi],dx
   1400096f8:	ins    BYTE PTR es:[rdi],dx
   1400096f9:	outs   dx,DWORD PTR ds:[rsi]
   1400096fa:	movsxd esp,DWORD PTR [rcx+0x74]
   1400096fd:	outs   dx,DWORD PTR ds:[rsi]
   1400096fe:	jb     0x140009740
   140009700:	rex.R
   140009701:	xor    al,BYTE PTR [rax+0x40]
   140009705:	jae    0x14000977b
   140009707:	fs rex
   140009709:	rex
   14000970a:	rex.B
   14000970b:	rex.RB
   14000970c:	rex.X push rsi
   14000970e:	(bad)  
   14000970f:	and    al,0x6d
   140009711:	(bad)  
   140009712:	jo     0x140009754
   140009714:	push   rsi
   140009715:	(bad)  
   140009716:	and    al,0x62
   140009718:	(bad)  
   140009719:	jae    0x140009784
   14000971b:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000971e:	je     0x140009792
   140009720:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   140009727:	and    al,0x63
   140009729:	push   0x745f7261
   14000972e:	jb     0x140009791
   140009730:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009738:	fs rex
   14000973a:	rex push rsi
   14000973c:	(bad)  
   14000973d:	and    al,0x61
   14000973f:	ins    BYTE PTR es:[rdi],dx
   140009740:	ins    BYTE PTR es:[rdi],dx
   140009741:	outs   dx,DWORD PTR ds:[rsi]
   140009742:	movsxd esp,DWORD PTR [rcx+0x74]
   140009745:	outs   dx,DWORD PTR ds:[rsi]
   140009746:	jb     0x140009788
   140009748:	rex.R
   140009749:	xor    al,BYTE PTR [rax+0x40]
   14000974d:	jae    0x1400097c3
   14000974f:	fs rex
   140009751:	rex push rsi
   140009753:	xor    DWORD PTR [rdx],esi
   140009755:	rex push rbp
   140009757:	(bad)  
   140009758:	and    al,0x6c
   14000975a:	gs jae 0x1400097d0
   14000975d:	rex push rsi
   14000975f:	(bad)  
   140009760:	and    al,0x62
   140009762:	(bad)  
   140009763:	jae    0x1400097ce
   140009765:	movsxd ebx,DWORD PTR [rdi+0x73]
   140009768:	je     0x1400097dc
   14000976a:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   140009771:	and    al,0x63
   140009773:	push   0x745f7261
   140009778:	jb     0x1400097db
   14000977a:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009782:	fs rex
   140009784:	rex push rsi
   140009786:	(bad)  
   140009787:	and    al,0x61
   140009789:	ins    BYTE PTR es:[rdi],dx
   14000978a:	ins    BYTE PTR es:[rdi],dx
   14000978b:	outs   dx,DWORD PTR ds:[rsi]
   14000978c:	movsxd esp,DWORD PTR [rcx+0x74]
   14000978f:	outs   dx,DWORD PTR ds:[rsi]
   140009790:	jb     0x1400097d2
   140009792:	rex.R
   140009793:	xor    al,BYTE PTR [rax+0x40]
   140009797:	jae    0x14000980d
   140009799:	fs rex
   14000979b:	rex
   14000979c:	xor    al,BYTE PTR [rax+0x56]
   1400097a0:	(bad)  
   1400097a1:	and    al,0x61
   1400097a3:	ins    BYTE PTR es:[rdi],dx
   1400097a4:	ins    BYTE PTR es:[rdi],dx
   1400097a5:	outs   dx,DWORD PTR ds:[rsi]
   1400097a6:	movsxd esp,DWORD PTR [rcx+0x74]
   1400097a9:	outs   dx,DWORD PTR ds:[rsi]
   1400097aa:	jb     0x1400097ec
   1400097ac:	push   rbp
   1400097ad:	(bad)  
   1400097ae:	and    al,0x70
   1400097b0:	(bad)  
   1400097b1:	imul   esi,DWORD PTR [rdx+0x40],0x42432424
   1400097b8:	push   rsi
   1400097b9:	(bad)  
   1400097ba:	and    al,0x62
   1400097bc:	(bad)  
   1400097bd:	jae    0x140009828
   1400097bf:	movsxd ebx,DWORD PTR [rdi+0x73]
   1400097c2:	je     0x140009836
   1400097c4:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   1400097cb:	and    al,0x63
   1400097cd:	push   0x745f7261
   1400097d2:	jb     0x140009835
   1400097d4:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   1400097dc:	fs rex
   1400097de:	rex push rsi
   1400097e0:	(bad)  
   1400097e1:	and    al,0x61
   1400097e3:	ins    BYTE PTR es:[rdi],dx
   1400097e4:	ins    BYTE PTR es:[rdi],dx
   1400097e5:	outs   dx,DWORD PTR ds:[rsi]
   1400097e6:	movsxd esp,DWORD PTR [rcx+0x74]
   1400097e9:	outs   dx,DWORD PTR ds:[rsi]
   1400097ea:	jb     0x14000982c
   1400097ec:	rex.R
   1400097ed:	xor    al,BYTE PTR [rax+0x40]
   1400097f1:	jae    0x140009867
   1400097f3:	fs rex
   1400097f5:	rex push rsi
   1400097f7:	xor    DWORD PTR [rdx],esi
   1400097f9:	rex
   1400097fa:	rex jae 0x140009871
   1400097fd:	fs rex
   1400097ff:	rex
   140009800:	xor    al,BYTE PTR [rax+0x40]
   140009804:	xor    al,0x40
   140009806:	rex pop rdx
   140009808:	add    BYTE PTR [rdi],bh
   14000980a:	ins    BYTE PTR es:[rdi],dx
   14000980b:	(bad)  
   14000980c:	jne    0x14000987c
   14000980e:	movsxd ebp,DWORD PTR [rax+0x4a]
   140009811:	imul   esi,DWORD PTR [rax+rax*2+0x4a],0x63417469
   140009819:	je     0x140009884
   14000981b:	jbe    0x14000987e
   14000981d:	je     0x140009888
   14000981f:	outs   dx,DWORD PTR ds:[rsi]
   140009820:	outs   dx,BYTE PTR ds:[rsi]
   140009821:	rex
   140009822:	rex push rcx
   140009824:	rex.RB
   140009825:	rex.B
   140009826:	rex.B
   140009827:	rex.W push rsi
   140009829:	(bad)  
   14000982a:	and    al,0x62
   14000982c:	(bad)  
   14000982d:	jae    0x140009898
   14000982f:	movsxd ebx,DWORD PTR [rdi+0x73]
   140009832:	je     0x1400098a6
   140009834:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14000983b:	and    al,0x63
   14000983d:	push   0x745f7261
   140009842:	jb     0x1400098a5
   140009844:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000984c:	fs rex
   14000984e:	rex push rsi
   140009850:	(bad)  
   140009851:	and    al,0x61
   140009853:	ins    BYTE PTR es:[rdi],dx
   140009854:	ins    BYTE PTR es:[rdi],dx
   140009855:	outs   dx,DWORD PTR ds:[rsi]
   140009856:	movsxd esp,DWORD PTR [rcx+0x74]
   140009859:	outs   dx,DWORD PTR ds:[rsi]
   14000985a:	jb     0x14000989c
   14000985c:	rex.R
   14000985d:	xor    al,BYTE PTR [rax+0x40]
   140009861:	jae    0x1400098d7
   140009863:	fs rex
   140009865:	rex
   140009866:	rex.B
   140009867:	rex.RB
   140009868:	rex.X push rsi
   14000986a:	(bad)  
   14000986b:	and    al,0x6d
   14000986d:	(bad)  
   14000986e:	jo     0x1400098b0
   140009870:	push   rsi
   140009871:	(bad)  
   140009872:	and    al,0x62
   140009874:	(bad)  
   140009875:	jae    0x1400098e0
   140009877:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000987a:	je     0x1400098ee
   14000987c:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   140009883:	and    al,0x63
   140009885:	push   0x745f7261
   14000988a:	jb     0x1400098ed
   14000988c:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009894:	fs rex
   140009896:	rex push rsi
   140009898:	(bad)  
   140009899:	and    al,0x61
   14000989b:	ins    BYTE PTR es:[rdi],dx
   14000989c:	ins    BYTE PTR es:[rdi],dx
   14000989d:	outs   dx,DWORD PTR ds:[rsi]
   14000989e:	movsxd esp,DWORD PTR [rcx+0x74]
   1400098a1:	outs   dx,DWORD PTR ds:[rsi]
   1400098a2:	jb     0x1400098e4
   1400098a4:	rex.R
   1400098a5:	xor    al,BYTE PTR [rax+0x40]
   1400098a9:	jae    0x14000991f
   1400098ab:	fs rex
   1400098ad:	rex push rsi
   1400098af:	xor    DWORD PTR [rdx],esi
   1400098b1:	rex push rbp
   1400098b3:	(bad)  
   1400098b4:	and    al,0x6c
   1400098b6:	gs jae 0x14000992c
   1400098b9:	rex push rsi
   1400098bb:	(bad)  
   1400098bc:	and    al,0x62
   1400098be:	(bad)  
   1400098bf:	jae    0x14000992a
   1400098c1:	movsxd ebx,DWORD PTR [rdi+0x73]
   1400098c4:	je     0x140009938
   1400098c6:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   1400098cd:	and    al,0x63
   1400098cf:	push   0x745f7261
   1400098d4:	jb     0x140009937
   1400098d6:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   1400098de:	fs rex
   1400098e0:	rex push rsi
   1400098e2:	(bad)  
   1400098e3:	and    al,0x61
   1400098e5:	ins    BYTE PTR es:[rdi],dx
   1400098e6:	ins    BYTE PTR es:[rdi],dx
   1400098e7:	outs   dx,DWORD PTR ds:[rsi]
   1400098e8:	movsxd esp,DWORD PTR [rcx+0x74]
   1400098eb:	outs   dx,DWORD PTR ds:[rsi]
   1400098ec:	jb     0x14000992e
   1400098ee:	rex.R
   1400098ef:	xor    al,BYTE PTR [rax+0x40]
   1400098f3:	jae    0x140009969
   1400098f5:	fs rex
   1400098f7:	rex
   1400098f8:	xor    al,BYTE PTR [rax+0x56]
   1400098fc:	(bad)  
   1400098fd:	and    al,0x61
   1400098ff:	ins    BYTE PTR es:[rdi],dx
   140009900:	ins    BYTE PTR es:[rdi],dx
   140009901:	outs   dx,DWORD PTR ds:[rsi]
   140009902:	movsxd esp,DWORD PTR [rcx+0x74]
   140009905:	outs   dx,DWORD PTR ds:[rsi]
   140009906:	jb     0x140009948
   140009908:	push   rbp
   140009909:	(bad)  
   14000990a:	and    al,0x70
   14000990c:	(bad)  
   14000990d:	imul   esi,DWORD PTR [rdx+0x40],0x42432424
   140009914:	push   rsi
   140009915:	(bad)  
   140009916:	and    al,0x62
   140009918:	(bad)  
   140009919:	jae    0x140009984
   14000991b:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000991e:	je     0x140009992
   140009920:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   140009927:	and    al,0x63
   140009929:	push   0x745f7261
   14000992e:	jb     0x140009991
   140009930:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009938:	fs rex
   14000993a:	rex push rsi
   14000993c:	(bad)  
   14000993d:	and    al,0x61
   14000993f:	ins    BYTE PTR es:[rdi],dx
   140009940:	ins    BYTE PTR es:[rdi],dx
   140009941:	outs   dx,DWORD PTR ds:[rsi]
   140009942:	movsxd esp,DWORD PTR [rcx+0x74]
   140009945:	outs   dx,DWORD PTR ds:[rsi]
   140009946:	jb     0x140009988
   140009948:	rex.R
   140009949:	xor    al,BYTE PTR [rax+0x40]
   14000994d:	jae    0x1400099c3
   14000994f:	fs rex
   140009951:	rex push rsi
   140009953:	xor    DWORD PTR [rdx],esi
   140009955:	rex
   140009956:	rex jae 0x1400099cd
   140009959:	fs rex
   14000995b:	rex
   14000995c:	xor    al,BYTE PTR [rax+0x40]
   140009960:	xor    eax,DWORD PTR [rax+0x40]
   140009963:	pop    rdx
   140009964:	add    BYTE PTR [rdi],bh
   140009966:	jb     0x1400099cd
   140009968:	imul   esi,DWORD PTR [ebx+0x74],0x65537265
   140009970:	jb     0x1400099e8
   140009972:	imul   esp,DWORD PTR [rbx+0x65],0x694a4073
   140009979:	je     0x1400099bc
   14000997b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14000997f:	(bad)  
   140009980:	je     0x1400099eb
   140009982:	outs   dx,DWORD PTR ds:[rsi]
   140009983:	outs   dx,BYTE PTR ds:[rsi]
   140009984:	rex
   140009985:	rex
   140009986:	rex.WXB
   140009987:	pop    r8
   140009989:	push   rax
   14000998a:	rex.RB
   14000998b:	push   r13
   14000998d:	rex.WX
   14000998e:	rex.WRX
   14000998f:	rex.WB
   140009990:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140009992:	jbe    0x1400099f3
   140009994:	rex
   140009995:	rex
   140009996:	rex pop rdx
   140009998:	add    BYTE PTR [rbp+0x77],ch
   14000999b:	pop    rdi
   14000999c:	xor    al,0x61
   14000999e:	pop    rdi
   14000999f:	(bad)  
   1400099a0:	jne    0x140009a0b
   1400099a2:	ins    BYTE PTR es:[rdi],dx
   1400099a3:	fs pop rdi
   1400099a5:	fs (bad) 
   1400099a7:	je     0x140009a0e
   1400099a9:	add    BYTE PTR [rbp+0x77],ch
   1400099ac:	pop    rdi
   1400099ad:	xor    al,0x61
   1400099af:	pop    rdi
   1400099b0:	jb     0x140009a17
   1400099b2:	ins    BYTE PTR es:[rdi],dx
   1400099b3:	(bad)  
   1400099b4:	je     0x140009a1f
   1400099b6:	jbe    0x140009a1d
   1400099b8:	pop    rdi
   1400099b9:	jo     0x140009a1c
   1400099bb:	je     0x140009a25
   1400099bd:	add    BYTE PTR [rbp+0x77],ch
   1400099c0:	pop    rdi
   1400099c1:	xor    al,0x61
   1400099c3:	pop    rdi
   1400099c4:	jbe    0x140009a2b
   1400099c6:	jb     0x140009a3b
   1400099c8:	imul   ebp,DWORD PTR [rdi+0x6e],0x9c2800
	...
   1400099d7:	add    dl,dl
   1400099d9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400099da:	add    BYTE PTR [rax],al
   1400099dc:	mov    eax,0xb0000071
   1400099e1:	pushf  
	...
   1400099ea:	add    BYTE PTR [rax],al
   1400099ec:	add    al,0xa6
   1400099ee:	add    BYTE PTR [rax],al
   1400099f0:	rex jb 0x1400099f3
   1400099f3:	add    al,cl
   1400099f5:	pushf  
	...
   1400099fe:	add    BYTE PTR [rax],al
   140009a00:	js     0x1400099a8
   140009a02:	add    BYTE PTR [rax],al
   140009a04:	pop    rax
   140009a05:	jb     0x140009a07
   140009a07:	add    BYTE PTR [rax],dl
   140009a09:	pushf  
	...
   140009a12:	add    BYTE PTR [rax],al
   140009a14:	add    al,0xa7
   140009a16:	add    BYTE PTR [rax],al
   140009a18:	movabs al,ds:0x9aa8000071
   140009a21:	add    BYTE PTR [rax],al
   140009a23:	add    BYTE PTR [rax],al
   140009a25:	add    BYTE PTR [rax],al
   140009a27:	add    dl,al
   140009a29:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009a2a:	add    BYTE PTR [rax],al
   140009a2c:	cmp    BYTE PTR [rax+0x0],dh
   140009a2f:	add    al,bl
   140009a31:	(bad)  
	...
   140009a3a:	add    BYTE PTR [rax],al
   140009a3c:	sbb    ch,BYTE PTR [rcx+0x70680000]
   140009a42:	add    BYTE PTR [rax],al
   140009a44:	jo     0x1400099e0
	...
   140009a4e:	add    BYTE PTR [rax],al
   140009a50:	lock stos BYTE PTR es:[rdi],al
   140009a52:	add    BYTE PTR [rax],al
   140009a54:	add    BYTE PTR [rax+0x0],dh
	...
   140009a6f:	add    dh,dl
   140009a71:	stos   BYTE PTR es:[rdi],al
   140009a72:	add    BYTE PTR [rax],al
   140009a74:	add    BYTE PTR [rax],al
   140009a76:	add    BYTE PTR [rax],al
   140009a78:	shr    BYTE PTR [rdx+0x0],0x0
   140009a7f:	add    BYTE PTR [rdx+0xaa],ch
   140009a85:	add    BYTE PTR [rax],al
   140009a87:	add    BYTE PTR [rax+0xaa],dl
   140009a8d:	add    BYTE PTR [rax],al
   140009a8f:	add    BYTE PTR [rax+0xaa],al
   140009a95:	add    BYTE PTR [rax],al
   140009a97:	add    BYTE PTR [rax-0x56],dh
	...
   140009aa6:	add    BYTE PTR [rax],al
   140009aa8:	movabs ds:0x82000000000000a7,al
   140009ab1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009ab2:	add    BYTE PTR [rax],al
   140009ab4:	add    BYTE PTR [rax],al
   140009ab6:	add    BYTE PTR [rax],al
   140009ab8:	(bad)  
   140009ab9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009aba:	add    BYTE PTR [rax],al
   140009abc:	add    BYTE PTR [rax],al
   140009abe:	add    BYTE PTR [rax],al
   140009ac0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009ac2:	add    BYTE PTR [rax],al
   140009ac4:	add    BYTE PTR [rax],al
   140009ac6:	add    BYTE PTR [rax],al
   140009ac8:	and    al,0xa7
	...
   140009ad6:	add    BYTE PTR [rax],al
   140009ad8:	call   0x140009b86
   140009add:	add    BYTE PTR [rax],al
   140009adf:	add    dl,bl
   140009ae1:	test   eax,0x0
   140009ae6:	add    BYTE PTR [rax],al
   140009ae8:	hlt    
   140009ae9:	test   eax,0x0
   140009aee:	add    BYTE PTR [rax],al
   140009af0:	mov    al,0xa9
   140009af2:	add    BYTE PTR [rax],al
   140009af4:	add    BYTE PTR [rax],al
   140009af6:	add    BYTE PTR [rax],al
   140009af8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009af9:	test   eax,0x0
   140009afe:	add    BYTE PTR [rax],al
   140009b00:	sahf   
   140009b01:	test   eax,0x0
   140009b06:	add    BYTE PTR [rax],al
   140009b08:	mov    WORD PTR [rcx+0x0],gs
   140009b0e:	add    BYTE PTR [rax],al
   140009b10:	jl     0x140009abb
   140009b12:	add    BYTE PTR [rax],al
   140009b14:	add    BYTE PTR [rax],al
   140009b16:	add    BYTE PTR [rax],al
   140009b18:	outs   dx,BYTE PTR ds:[rsi]
   140009b19:	test   eax,0x0
   140009b1e:	add    BYTE PTR [rax],al
   140009b20:	(bad)  
   140009b21:	test   eax,0x0
   140009b26:	add    BYTE PTR [rax],al
   140009b28:	push   rsi
   140009b29:	test   eax,0x0
   140009b2e:	add    BYTE PTR [rax],al
   140009b30:	test   rax,0x0
   140009b36:	add    BYTE PTR [rax],al
   140009b38:	add    BYTE PTR [rdx+0x0],ch
   140009b3e:	add    BYTE PTR [rax],al
   140009b40:	or     ch,BYTE PTR [rdx+0x0]
   140009b46:	add    BYTE PTR [rax],al
   140009b48:	(bad)  
   140009b49:	stos   BYTE PTR es:[rdi],al
   140009b4a:	add    BYTE PTR [rax],al
   140009b4c:	add    BYTE PTR [rax],al
   140009b4e:	add    BYTE PTR [rax],al
   140009b50:	rex.WR stos BYTE PTR es:[rdi],al
   140009b52:	add    BYTE PTR [rax],al
   140009b54:	add    BYTE PTR [rax],al
   140009b56:	add    BYTE PTR [rax],al
   140009b58:	(bad)  
   140009b59:	test   eax,0x0
   140009b5e:	add    BYTE PTR [rax],al
   140009b60:	shl    BYTE PTR [rdi+0x0],1
   140009b66:	add    BYTE PTR [rax],al
   140009b68:	fsub   QWORD PTR [rdi+0x0]
   140009b6e:	add    BYTE PTR [rax],al
   140009b70:	out    dx,al
   140009b71:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009b72:	add    BYTE PTR [rax],al
   140009b74:	add    BYTE PTR [rax],al
   140009b76:	add    BYTE PTR [rax],al
   140009b78:	(bad)  
   140009b79:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009b7a:	add    BYTE PTR [rax],al
   140009b7c:	add    BYTE PTR [rax],al
   140009b7e:	add    BYTE PTR [rax],al
   140009b80:	or     BYTE PTR [rax+0x0],ch
   140009b86:	add    BYTE PTR [rax],al
   140009b88:	(bad)  
   140009b89:	test   al,0x0
   140009b8b:	add    BYTE PTR [rax],al
   140009b8d:	add    BYTE PTR [rax],al
   140009b8f:	add    BYTE PTR [rax],ah
   140009b91:	test   al,0x0
   140009b93:	add    BYTE PTR [rax],al
   140009b95:	add    BYTE PTR [rax],al
   140009b97:	add    BYTE PTR [rax],ch
   140009b99:	test   al,0x0
   140009b9b:	add    BYTE PTR [rax],al
   140009b9d:	add    BYTE PTR [rax],al
   140009b9f:	add    BYTE PTR [rdx],dh
   140009ba1:	test   al,0x0
   140009ba3:	add    BYTE PTR [rax],al
   140009ba5:	add    BYTE PTR [rax],al
   140009ba7:	add    BYTE PTR [rax+rbp*4+0x0],al
   140009bab:	add    BYTE PTR [rax],al
   140009bad:	add    BYTE PTR [rax],al
   140009baf:	add    BYTE PTR [rdx-0x58],bl
   140009bb2:	add    BYTE PTR [rax],al
   140009bb4:	add    BYTE PTR [rax],al
   140009bb6:	add    BYTE PTR [rax],al
   140009bb8:	jo     0x140009b62
   140009bba:	add    BYTE PTR [rax],al
   140009bbc:	add    BYTE PTR [rax],al
   140009bbe:	add    BYTE PTR [rax],al
   140009bc0:	jp     0x140009b6a
   140009bc2:	add    BYTE PTR [rax],al
   140009bc4:	add    BYTE PTR [rax],al
   140009bc6:	add    BYTE PTR [rax],al
   140009bc8:	test   BYTE PTR [rax+0x0],ch
   140009bce:	add    BYTE PTR [rax],al
   140009bd0:	test   al,0xa8
   140009bd2:	add    BYTE PTR [rax],al
   140009bd4:	add    BYTE PTR [rax],al
   140009bd6:	add    BYTE PTR [rax],al
   140009bd8:	shr    BYTE PTR [rax+0x0],cl
   140009bde:	add    BYTE PTR [rax],al
   140009be0:	out    dx,al
   140009be1:	test   al,0x0
   140009be3:	add    BYTE PTR [rax],al
   140009be5:	add    BYTE PTR [rax],al
   140009be7:	add    BYTE PTR [rdx],al
   140009be9:	test   eax,0x0
   140009bee:	add    BYTE PTR [rax],al
   140009bf0:	sub    BYTE PTR [rcx+0x0],ch
   140009bf6:	add    BYTE PTR [rax],al
   140009bf8:	xor    BYTE PTR [rcx+0x0],ch
   140009bfe:	add    BYTE PTR [rax],al
   140009c00:	cmp    ch,BYTE PTR [rcx+0x0]
	...
   140009c0e:	add    BYTE PTR [rax],al
   140009c10:	(bad)  
   140009c11:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009c12:	add    BYTE PTR [rax],al
   140009c14:	add    BYTE PTR [rax],al
   140009c16:	add    BYTE PTR [rax],al
   140009c18:	mov    ah,BYTE PTR [rsi+0x0]
	...
   140009c26:	add    BYTE PTR [rax],al
   140009c28:	(bad)  
   140009c29:	popf   
   140009c2a:	add    BYTE PTR [rax],al
   140009c2c:	add    BYTE PTR [rax],al
   140009c2e:	add    BYTE PTR [rax],al
   140009c30:	(bad)  
   140009c31:	popf   
   140009c32:	add    BYTE PTR [rax],al
   140009c34:	add    BYTE PTR [rax],al
   140009c36:	add    BYTE PTR [rax],al
   140009c38:	cli    
   140009c39:	popf   
   140009c3a:	add    BYTE PTR [rax],al
   140009c3c:	add    BYTE PTR [rax],al
   140009c3e:	add    BYTE PTR [rax],al
   140009c40:	jo     0x140009be0
   140009c42:	add    BYTE PTR [rax],al
   140009c44:	add    BYTE PTR [rax],al
   140009c46:	add    BYTE PTR [rax],al
   140009c48:	in     al,dx
   140009c49:	sahf   
   140009c4a:	add    BYTE PTR [rax],al
   140009c4c:	add    BYTE PTR [rax],al
   140009c4e:	add    BYTE PTR [rax],al
   140009c50:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009c51:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009c52:	add    BYTE PTR [rax],al
   140009c54:	add    BYTE PTR [rax],al
   140009c56:	add    BYTE PTR [rax],al
   140009c58:	and    BYTE PTR [rax+rax*1+0x0],0x0
   140009c60:	(bad)  
   140009c61:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009c62:	add    BYTE PTR [rax],al
   140009c64:	add    BYTE PTR [rax],al
   140009c66:	add    BYTE PTR [rax],al
   140009c68:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009c69:	movabs ds:0xa236000000000000,al
   140009c72:	add    BYTE PTR [rax],al
   140009c74:	add    BYTE PTR [rax],al
   140009c76:	add    BYTE PTR [rax],al
   140009c78:	mul    BYTE PTR [rax+0x0]
   140009c7e:	add    BYTE PTR [rax],al
   140009c80:	shl    BYTE PTR [rax+0x0],cl
   140009c86:	add    BYTE PTR [rax],al
   140009c88:	scas   al,BYTE PTR es:[rdi]
   140009c89:	movabs al,ds:0x9f68000000000000
   140009c92:	add    BYTE PTR [rax],al
   140009c94:	add    BYTE PTR [rax],al
   140009c96:	add    BYTE PTR [rax],al
   140009c98:	sub    bl,BYTE PTR [rdi+0x0]
   140009c9e:	add    BYTE PTR [rax],al
   140009ca0:	fcomp  DWORD PTR [rax+rax*1+0x0]
	...
   140009caf:	add    BYTE PTR [rbp+riz*4+0x0],dh
   140009cb3:	add    BYTE PTR [rax],al
   140009cb5:	add    BYTE PTR [rax],al
   140009cb7:	add    dh,ah
   140009cb9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   140009cc6:	add    BYTE PTR [rax],al
   140009cc8:	adc    BYTE PTR [rsi+0x0],ah
	...
   140009cd6:	add    BYTE PTR [rax],al
   140009cd8:	or     eax,DWORD PTR [rax]
   140009cda:	(bad)  
   140009cdb:	(bad)  
   140009cdc:	xor    DWORD PTR [rdx+0x61],ecx
   140009cdf:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   140009ce7:	outs   dx,BYTE PTR ds:[rsi]
   140009ce8:	gs jb  0x140009d37
   140009ceb:	(bad)  
   140009cec:	jne    0x140009d5c
   140009cee:	movsxd ebp,DWORD PTR [rax+0x65]
   140009cf1:	jb     0x140009d43
   140009cf3:	jb     0x140009d64
   140009cf5:	jo     0x140009d5c
   140009cf7:	jb     0x140009d6d
   140009cf9:	imul   esp,DWORD PTR [rbp+0x73],0x45554040
   140009d00:	rex.B
   140009d01:	rex.B
   140009d02:	rex pop rax
   140009d04:	pop    rdx
   140009d05:	add    BYTE PTR [rdx],bl
   140009d07:	add    BYTE PTR [rdi],bh
   140009d09:	addr32 gs je 0x140009d56
   140009d0d:	outs   dx,BYTE PTR ds:[rsi]
   140009d0e:	fs gs js 0x140009d56
   140009d12:	outs   dx,DWORD PTR ds:[rsi]
   140009d13:	je     0x140009d5d
   140009d15:	je     0x140009d84
   140009d17:	ins    BYTE PTR es:[rdi],dx
   140009d18:	rex
   140009d19:	rex.WX (bad) 
   140009d1b:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   140009d23:	outs   dx,BYTE PTR ds:[rsi]
   140009d24:	gs jb  0x140009d73
   140009d27:	(bad)  
   140009d28:	jne    0x140009d98
   140009d2a:	movsxd ebp,DWORD PTR [rax+0x65]
   140009d2d:	jb     0x140009d7f
   140009d2f:	jb     0x140009da0
   140009d31:	jo     0x140009d98
   140009d33:	jb     0x140009da9
   140009d35:	imul   esp,DWORD PTR [rbp+0x73],0x45554040
   140009d3c:	rex.X
   140009d3d:	rex.B
   140009d3e:	rex.B
   140009d3f:	rex.RB
   140009d40:	rex.X push rsi
   140009d42:	(bad)  
   140009d43:	and    al,0x62
   140009d45:	(bad)  
   140009d46:	jae    0x140009db1
   140009d48:	movsxd ebx,DWORD PTR [rdi+0x73]
   140009d4b:	je     0x140009dbf
   140009d4d:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   140009d54:	and    al,0x63
   140009d56:	push   0x745f7261
   140009d5b:	jb     0x140009dbe
   140009d5d:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009d65:	fs rex
   140009d67:	rex push rsi
   140009d69:	(bad)  
   140009d6a:	and    al,0x61
   140009d6c:	ins    BYTE PTR es:[rdi],dx
   140009d6d:	ins    BYTE PTR es:[rdi],dx
   140009d6e:	outs   dx,DWORD PTR ds:[rsi]
   140009d6f:	movsxd esp,DWORD PTR [rcx+0x74]
   140009d72:	outs   dx,DWORD PTR ds:[rsi]
   140009d73:	jb     0x140009db5
   140009d75:	rex.R
   140009d76:	xor    al,BYTE PTR [rax+0x40]
   140009d7a:	jae    0x140009df0
   140009d7c:	fs rex
   140009d7e:	rex pop rax
   140009d80:	pop    rdx
   140009d81:	add    BYTE PTR [rip+0x65673f00],bl        # 0x1a567dc87
   140009d87:	je     0x140009de0
   140009d89:	(bad)
   140009d8f:	rex
   140009d90:	rex.WX (bad) 
   140009d92:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   140009d9a:	outs   dx,BYTE PTR ds:[rsi]
   140009d9b:	gs jb  0x140009dea
   140009d9e:	(bad)  
   140009d9f:	jne    0x140009e0f
   140009da1:	movsxd ebp,DWORD PTR [rax+0x65]
   140009da4:	jb     0x140009df6
   140009da6:	jb     0x140009e17
   140009da8:	jo     0x140009e0f
   140009daa:	jb     0x140009e20
   140009dac:	imul   esp,DWORD PTR [rbp+0x73],0x45554040
   140009db3:	rex.X
   140009db4:	rex.B
   140009db5:	rex.B
   140009db6:	rex.RB
   140009db7:	rex.X push rsi
   140009db9:	(bad)  
   140009dba:	and    al,0x62
   140009dbc:	(bad)  
   140009dbd:	jae    0x140009e28
   140009dbf:	movsxd ebx,DWORD PTR [rdi+0x73]
   140009dc2:	je     0x140009e36
   140009dc4:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   140009dcb:	and    al,0x63
   140009dcd:	push   0x745f7261
   140009dd2:	jb     0x140009e35
   140009dd4:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009ddc:	fs rex
   140009dde:	rex push rsi
   140009de0:	(bad)  
   140009de1:	and    al,0x61
   140009de3:	ins    BYTE PTR es:[rdi],dx
   140009de4:	ins    BYTE PTR es:[rdi],dx
   140009de5:	outs   dx,DWORD PTR ds:[rsi]
   140009de6:	movsxd esp,DWORD PTR [rcx+0x74]
   140009de9:	outs   dx,DWORD PTR ds:[rsi]
   140009dea:	jb     0x140009e2c
   140009dec:	rex.R
   140009ded:	xor    al,BYTE PTR [rax+0x40]
   140009df1:	jae    0x140009e67
   140009df3:	fs rex
   140009df5:	rex pop rax
   140009df7:	pop    rdx
   140009df8:	add    BYTE PTR [rax],al
   140009dfa:	sbb    eax,DWORD PTR [rax]
   140009dfc:	(bad)  
   140009dfd:	addr32 gs je 0x140009e4d
   140009e01:	outs   dx,DWORD PTR ds:[rsi]
   140009e02:	movsxd esp,DWORD PTR [rcx+0x6c]
   140009e05:	gs rex
   140009e07:	rex.WX (bad) 
   140009e09:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   140009e11:	outs   dx,BYTE PTR ds:[rsi]
   140009e12:	gs jb  0x140009e61
   140009e15:	(bad)  
   140009e16:	jne    0x140009e86
   140009e18:	movsxd ebp,DWORD PTR [rax+0x65]
   140009e1b:	jb     0x140009e6d
   140009e1d:	jb     0x140009e8e
   140009e1f:	jo     0x140009e86
   140009e21:	jb     0x140009e97
   140009e23:	imul   esp,DWORD PTR [rbp+0x73],0x45554040
   140009e2a:	rex.X
   140009e2b:	rex.B
   140009e2c:	rex.B
   140009e2d:	rex.RB
   140009e2e:	rex.X push rsi
   140009e30:	(bad)  
   140009e31:	and    al,0x62
   140009e33:	(bad)  
   140009e34:	jae    0x140009e9f
   140009e36:	movsxd ebx,DWORD PTR [rdi+0x73]
   140009e39:	je     0x140009ead
   140009e3b:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   140009e42:	and    al,0x63
   140009e44:	push   0x745f7261
   140009e49:	jb     0x140009eac
   140009e4b:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009e53:	fs rex
   140009e55:	rex push rsi
   140009e57:	(bad)  
   140009e58:	and    al,0x61
   140009e5a:	ins    BYTE PTR es:[rdi],dx
   140009e5b:	ins    BYTE PTR es:[rdi],dx
   140009e5c:	outs   dx,DWORD PTR ds:[rsi]
   140009e5d:	movsxd esp,DWORD PTR [rcx+0x74]
   140009e60:	outs   dx,DWORD PTR ds:[rsi]
   140009e61:	jb     0x140009ea3
   140009e63:	rex.R
   140009e64:	xor    al,BYTE PTR [rax+0x40]
   140009e68:	jae    0x140009ede
   140009e6a:	fs rex
   140009e6c:	rex pop rax
   140009e6e:	pop    rdx
   140009e6f:	add    BYTE PTR [rdi],bl
   140009e71:	add    BYTE PTR [rdi],bh
   140009e73:	addr32 gs je 0x140009ece
   140009e77:	imul   ebp,DWORD PTR [rsi+0x64],0x6954776f
   140009e7e:	je     0x140009eec
   140009e80:	gs rex
   140009e82:	rex.WX (bad) 
   140009e84:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   140009e8c:	outs   dx,BYTE PTR ds:[rsi]
   140009e8d:	gs jb  0x140009edc
   140009e90:	(bad)  
   140009e91:	jne    0x140009f01
   140009e93:	movsxd ebp,DWORD PTR [rax+0x65]
   140009e96:	jb     0x140009ee8
   140009e98:	jb     0x140009f09
   140009e9a:	jo     0x140009f01
   140009e9c:	jb     0x140009f12
   140009e9e:	imul   esp,DWORD PTR [rbp+0x73],0x45554040
   140009ea5:	rex.X
   140009ea6:	rex.B
   140009ea7:	rex.B
   140009ea8:	rex.RB
   140009ea9:	rex.X push rsi
   140009eab:	(bad)  
   140009eac:	and    al,0x62
   140009eae:	(bad)  
   140009eaf:	jae    0x140009f1a
   140009eb1:	movsxd ebx,DWORD PTR [rdi+0x73]
   140009eb4:	je     0x140009f28
   140009eb6:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   140009ebd:	and    al,0x63
   140009ebf:	push   0x745f7261
   140009ec4:	jb     0x140009f27
   140009ec6:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009ece:	fs rex
   140009ed0:	rex push rsi
   140009ed2:	(bad)  
   140009ed3:	and    al,0x61
   140009ed5:	ins    BYTE PTR es:[rdi],dx
   140009ed6:	ins    BYTE PTR es:[rdi],dx
   140009ed7:	outs   dx,DWORD PTR ds:[rsi]
   140009ed8:	movsxd esp,DWORD PTR [rcx+0x74]
   140009edb:	outs   dx,DWORD PTR ds:[rsi]
   140009edc:	jb     0x140009f1e
   140009ede:	rex.R
   140009edf:	xor    al,BYTE PTR [rax+0x40]
   140009ee3:	jae    0x140009f59
   140009ee5:	fs rex
   140009ee7:	rex pop rax
   140009ee9:	pop    rdx
   140009eea:	add    BYTE PTR [rax],al
   140009eec:	and    BYTE PTR [rax],al
   140009eee:	(bad)  
   140009eef:	addr32 gs je 0x140009f4a
   140009ef3:	imul   ebp,DWORD PTR [rsi+0x64],0x6957776f
   140009efa:	fs je  0x140009f65
   140009efd:	rex
   140009efe:	rex.WX (bad) 
   140009f00:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   140009f08:	outs   dx,BYTE PTR ds:[rsi]
   140009f09:	gs jb  0x140009f58
   140009f0c:	(bad)  
   140009f0d:	jne    0x140009f7d
   140009f0f:	movsxd ebp,DWORD PTR [rax+0x65]
   140009f12:	jb     0x140009f64
   140009f14:	jb     0x140009f85
   140009f16:	jo     0x140009f7d
   140009f18:	jb     0x140009f8e
   140009f1a:	imul   esp,DWORD PTR [rbp+0x73],0x45554040
   140009f21:	rex.X
   140009f22:	rex.B (bad) 
   140009f24:	rex.X
   140009f25:	rex.RX pop rax
   140009f27:	pop    rdx
   140009f28:	add    BYTE PTR [rax],al
   140009f2a:	(bad)  
   140009f2b:	add    BYTE PTR [rdi],bh
   140009f2d:	addr32 gs je 0x140009f88
   140009f31:	imul   ebp,DWORD PTR [rsi+0x64],0x6548776f
   140009f38:	imul   esp,DWORD PTR [rdi+0x68],0x614a4074
   140009f3f:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   140009f47:	outs   dx,BYTE PTR ds:[rsi]
   140009f48:	gs jb  0x140009f97
   140009f4b:	(bad)  
   140009f4c:	jne    0x140009fbc
   140009f4e:	movsxd ebp,DWORD PTR [rax+0x65]
   140009f51:	jb     0x140009fa3
   140009f53:	jb     0x140009fc4
   140009f55:	jo     0x140009fbc
   140009f57:	jb     0x140009fcd
   140009f59:	imul   esp,DWORD PTR [rbp+0x73],0x45554040
   140009f60:	rex.X
   140009f61:	rex.B (bad) 
   140009f63:	rex.X
   140009f64:	rex.RX pop rax
   140009f66:	pop    rdx
   140009f67:	add    BYTE PTR [rdi],dl
   140009f69:	add    BYTE PTR [rdi],bh
   140009f6b:	addr32 gs je 0x140009fb0
   140009f6f:	fs imul esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x516c616e
   140009f79:	jne    0x140009fe0
   140009f7b:	jb     0x140009ff6
   140009f7d:	push   rax
   140009f7e:	(bad)  
   140009f7f:	jb     0x140009fe2
   140009f81:	ins    DWORD PTR es:[rdi],dx
   140009f82:	gs je  0x140009fea
   140009f85:	jb     0x140009ffa
   140009f87:	rex
   140009f88:	rex.WX (bad) 
   140009f8a:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   140009f92:	outs   dx,BYTE PTR ds:[rsi]
   140009f93:	gs jb  0x140009fe2
   140009f96:	(bad)  
   140009f97:	jne    0x14000a007
   140009f99:	movsxd ebp,DWORD PTR [rax+0x65]
   140009f9c:	jb     0x140009fee
   140009f9e:	jb     0x14000a00f
   140009fa0:	jo     0x14000a007
   140009fa2:	jb     0x14000a018
   140009fa4:	imul   esp,DWORD PTR [rbp+0x73],0x45554040
   140009fab:	rex.X
   140009fac:	rex.B (bad) 
   140009fae:	rex.X push rsi
   140009fb0:	(bad)  
   140009fb1:	and    al,0x6d
   140009fb3:	(bad)  
   140009fb4:	jo     0x140009ff6
   140009fb6:	push   rsi
   140009fb7:	(bad)  
   140009fb8:	and    al,0x62
   140009fba:	(bad)  
   140009fbb:	jae    0x14000a026
   140009fbd:	movsxd ebx,DWORD PTR [rdi+0x73]
   140009fc0:	je     0x14000a034
   140009fc2:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   140009fc9:	and    al,0x63
   140009fcb:	push   0x745f7261
   140009fd0:	jb     0x14000a033
   140009fd2:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140009fda:	fs rex
   140009fdc:	rex push rsi
   140009fde:	(bad)  
   140009fdf:	and    al,0x61
   140009fe1:	ins    BYTE PTR es:[rdi],dx
   140009fe2:	ins    BYTE PTR es:[rdi],dx
   140009fe3:	outs   dx,DWORD PTR ds:[rsi]
   140009fe4:	movsxd esp,DWORD PTR [rcx+0x74]
   140009fe7:	outs   dx,DWORD PTR ds:[rsi]
   140009fe8:	jb     0x14000a02a
   140009fea:	rex.R
   140009feb:	xor    al,BYTE PTR [rax+0x40]
   140009fef:	jae    0x14000a065
   140009ff1:	fs rex
   140009ff3:	rex push rsi
   140009ff5:	xor    DWORD PTR [rdx],esi
   140009ff7:	rex push rbp
   140009ff9:	(bad)  
   140009ffa:	and    al,0x6c
   140009ffc:	gs jae 0x14000a072
   140009fff:	rex push rsi
   14000a001:	(bad)  
   14000a002:	and    al,0x62
   14000a004:	(bad)  
   14000a005:	jae    0x14000a070
   14000a007:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000a00a:	je     0x14000a07e
   14000a00c:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14000a013:	and    al,0x63
   14000a015:	push   0x745f7261
   14000a01a:	jb     0x14000a07d
   14000a01c:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a024:	fs rex
   14000a026:	rex push rsi
   14000a028:	(bad)  
   14000a029:	and    al,0x61
   14000a02b:	ins    BYTE PTR es:[rdi],dx
   14000a02c:	ins    BYTE PTR es:[rdi],dx
   14000a02d:	outs   dx,DWORD PTR ds:[rsi]
   14000a02e:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a031:	outs   dx,DWORD PTR ds:[rsi]
   14000a032:	jb     0x14000a074
   14000a034:	rex.R
   14000a035:	xor    al,BYTE PTR [rax+0x40]
   14000a039:	jae    0x14000a0af
   14000a03b:	fs rex
   14000a03d:	rex
   14000a03e:	xor    al,BYTE PTR [rax+0x56]
   14000a042:	(bad)  
   14000a043:	and    al,0x61
   14000a045:	ins    BYTE PTR es:[rdi],dx
   14000a046:	ins    BYTE PTR es:[rdi],dx
   14000a047:	outs   dx,DWORD PTR ds:[rsi]
   14000a048:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a04b:	outs   dx,DWORD PTR ds:[rsi]
   14000a04c:	jb     0x14000a08e
   14000a04e:	push   rbp
   14000a04f:	(bad)  
   14000a050:	and    al,0x70
   14000a052:	(bad)  
   14000a053:	imul   esi,DWORD PTR [rdx+0x40],0x42432424
   14000a05a:	push   rsi
   14000a05b:	(bad)  
   14000a05c:	and    al,0x62
   14000a05e:	(bad)  
   14000a05f:	jae    0x14000a0ca
   14000a061:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000a064:	je     0x14000a0d8
   14000a066:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14000a06d:	and    al,0x63
   14000a06f:	push   0x745f7261
   14000a074:	jb     0x14000a0d7
   14000a076:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a07e:	fs rex
   14000a080:	rex push rsi
   14000a082:	(bad)  
   14000a083:	and    al,0x61
   14000a085:	ins    BYTE PTR es:[rdi],dx
   14000a086:	ins    BYTE PTR es:[rdi],dx
   14000a087:	outs   dx,DWORD PTR ds:[rsi]
   14000a088:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a08b:	outs   dx,DWORD PTR ds:[rsi]
   14000a08c:	jb     0x14000a0ce
   14000a08e:	rex.R
   14000a08f:	xor    al,BYTE PTR [rax+0x40]
   14000a093:	jae    0x14000a109
   14000a095:	fs rex
   14000a097:	rex push rsi
   14000a099:	xor    DWORD PTR [rdx],esi
   14000a09b:	rex
   14000a09c:	rex jae 0x14000a113
   14000a09f:	fs rex
   14000a0a1:	rex
   14000a0a2:	xor    al,BYTE PTR [rax+0x40]
   14000a0a6:	jae    0x14000a11c
   14000a0a8:	fs rex
   14000a0aa:	rex pop rax
   14000a0ac:	pop    rdx
   14000a0ad:	add    BYTE PTR [rbx],al
   14000a0af:	add    BYTE PTR [rdi],bh
   14000a0b1:	(bad)  
   14000a0b2:	xor    BYTE PTR [rdx+0x61],cl
   14000a0b5:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   14000a0bd:	outs   dx,BYTE PTR ds:[rsi]
   14000a0be:	gs jb  0x14000a10d
   14000a0c1:	(bad)  
   14000a0c2:	jne    0x14000a132
   14000a0c4:	movsxd ebp,DWORD PTR [rax+0x65]
   14000a0c7:	jb     0x14000a109
   14000a0c9:	rex push rcx
   14000a0cb:	rex.RB
   14000a0cc:	rex.B
   14000a0cd:	rex.B
   14000a0ce:	rex pop rax
   14000a0d0:	pop    rdx
   14000a0d1:	add    BYTE PTR [rdx],cl
   14000a0d3:	add    BYTE PTR [rdi],bh
   14000a0d5:	(bad)  
   14000a0d6:	xor    DWORD PTR [rdx+0x61],ecx
   14000a0d9:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   14000a0e1:	outs   dx,BYTE PTR ds:[rsi]
   14000a0e2:	gs jb  0x14000a131
   14000a0e5:	(bad)  
   14000a0e6:	jne    0x14000a156
   14000a0e8:	movsxd ebp,DWORD PTR [rax+0x65]
   14000a0eb:	jb     0x14000a12d
   14000a0ed:	rex push rbp
   14000a0ef:	rex.RB
   14000a0f0:	rex.B
   14000a0f1:	rex.B
   14000a0f2:	rex pop rax
   14000a0f4:	pop    rdx
   14000a0f5:	add    BYTE PTR [rcx],ah
   14000a0f7:	add    BYTE PTR [rdi],bh
   14000a0f9:	jo     0x14000a15c
   14000a0fb:	jb     0x14000a170
   14000a0fd:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000a100:	ins    DWORD PTR es:[rdi],dx
   14000a101:	ins    DWORD PTR es:[rdi],dx
   14000a102:	(bad)  
   14000a103:	outs   dx,BYTE PTR ds:[rsi]
   14000a104:	imul   r13,QWORD PTR fs:[rsi+0x65],0x75677241
   14000a10d:	ins    DWORD PTR es:[rdi],dx
   14000a10e:	outs   dx,BYTE PTR gs:[rsi]
   14000a110:	je     0x14000a185
   14000a112:	rex
   14000a113:	rex.WX (bad) 
   14000a115:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   14000a11d:	outs   dx,BYTE PTR ds:[rsi]
   14000a11e:	gs jb  0x14000a16d
   14000a121:	(bad)  
   14000a122:	jne    0x14000a192
   14000a124:	movsxd ebp,DWORD PTR [rax+0x65]
   14000a127:	jb     0x14000a169
   14000a129:	rex push rbx
   14000a12b:	rex.B (bad) 
   14000a12d:	push   r14
   14000a12f:	(bad)  
   14000a130:	and    al,0x6d
   14000a132:	(bad)  
   14000a133:	jo     0x14000a175
   14000a135:	push   rsi
   14000a136:	(bad)  
   14000a137:	and    al,0x62
   14000a139:	(bad)  
   14000a13a:	jae    0x14000a1a5
   14000a13c:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000a13f:	je     0x14000a1b3
   14000a141:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14000a148:	and    al,0x63
   14000a14a:	push   0x745f7261
   14000a14f:	jb     0x14000a1b2
   14000a151:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a159:	fs rex
   14000a15b:	rex push rsi
   14000a15d:	(bad)  
   14000a15e:	and    al,0x61
   14000a160:	ins    BYTE PTR es:[rdi],dx
   14000a161:	ins    BYTE PTR es:[rdi],dx
   14000a162:	outs   dx,DWORD PTR ds:[rsi]
   14000a163:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a166:	outs   dx,DWORD PTR ds:[rsi]
   14000a167:	jb     0x14000a1a9
   14000a169:	rex.R
   14000a16a:	xor    al,BYTE PTR [rax+0x40]
   14000a16e:	jae    0x14000a1e4
   14000a170:	fs rex
   14000a172:	rex push rsi
   14000a174:	xor    DWORD PTR [rdx],esi
   14000a176:	rex push rbp
   14000a178:	(bad)  
   14000a179:	and    al,0x6c
   14000a17b:	gs jae 0x14000a1f1
   14000a17e:	rex push rsi
   14000a180:	(bad)  
   14000a181:	and    al,0x62
   14000a183:	(bad)  
   14000a184:	jae    0x14000a1ef
   14000a186:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000a189:	je     0x14000a1fd
   14000a18b:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14000a192:	and    al,0x63
   14000a194:	push   0x745f7261
   14000a199:	jb     0x14000a1fc
   14000a19b:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a1a3:	fs rex
   14000a1a5:	rex push rsi
   14000a1a7:	(bad)  
   14000a1a8:	and    al,0x61
   14000a1aa:	ins    BYTE PTR es:[rdi],dx
   14000a1ab:	ins    BYTE PTR es:[rdi],dx
   14000a1ac:	outs   dx,DWORD PTR ds:[rsi]
   14000a1ad:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a1b0:	outs   dx,DWORD PTR ds:[rsi]
   14000a1b1:	jb     0x14000a1f3
   14000a1b3:	rex.R
   14000a1b4:	xor    al,BYTE PTR [rax+0x40]
   14000a1b8:	jae    0x14000a22e
   14000a1ba:	fs rex
   14000a1bc:	rex
   14000a1bd:	xor    al,BYTE PTR [rax+0x56]
   14000a1c1:	(bad)  
   14000a1c2:	and    al,0x61
   14000a1c4:	ins    BYTE PTR es:[rdi],dx
   14000a1c5:	ins    BYTE PTR es:[rdi],dx
   14000a1c6:	outs   dx,DWORD PTR ds:[rsi]
   14000a1c7:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a1ca:	outs   dx,DWORD PTR ds:[rsi]
   14000a1cb:	jb     0x14000a20d
   14000a1cd:	push   rbp
   14000a1ce:	(bad)  
   14000a1cf:	and    al,0x70
   14000a1d1:	(bad)  
   14000a1d2:	imul   esi,DWORD PTR [rdx+0x40],0x42432424
   14000a1d9:	push   rsi
   14000a1da:	(bad)  
   14000a1db:	and    al,0x62
   14000a1dd:	(bad)  
   14000a1de:	jae    0x14000a249
   14000a1e0:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000a1e3:	je     0x14000a257
   14000a1e5:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14000a1ec:	and    al,0x63
   14000a1ee:	push   0x745f7261
   14000a1f3:	jb     0x14000a256
   14000a1f5:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a1fd:	fs rex
   14000a1ff:	rex push rsi
   14000a201:	(bad)  
   14000a202:	and    al,0x61
   14000a204:	ins    BYTE PTR es:[rdi],dx
   14000a205:	ins    BYTE PTR es:[rdi],dx
   14000a206:	outs   dx,DWORD PTR ds:[rsi]
   14000a207:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a20a:	outs   dx,DWORD PTR ds:[rsi]
   14000a20b:	jb     0x14000a24d
   14000a20d:	rex.R
   14000a20e:	xor    al,BYTE PTR [rax+0x40]
   14000a212:	jae    0x14000a288
   14000a214:	fs rex
   14000a216:	rex push rsi
   14000a218:	xor    DWORD PTR [rdx],esi
   14000a21a:	rex
   14000a21b:	rex jae 0x14000a292
   14000a21e:	fs rex
   14000a220:	rex
   14000a221:	xor    al,BYTE PTR [rax+0x40]
   14000a225:	jae    0x14000a29b
   14000a227:	fs rex
   14000a229:	rex
   14000a22a:	rex.W push rax
   14000a22c:	rex.RB
   14000a22d:	push   r8
   14000a22f:	rex.RB
   14000a230:	rex.X
   14000a231:	rex.R
   14000a232:	rex pop rdx
   14000a234:	add    BYTE PTR [rax],al
   14000a236:	sbb    DWORD PTR [rax],eax
   14000a238:	(bad)  
   14000a239:	addr32 gs je 0x14000a280
   14000a23d:	jne    0x14000a2b1
   14000a23f:	jb     0x14000a2a6
   14000a241:	outs   dx,BYTE PTR ds:[rsi]
   14000a242:	je     0x14000a296
   14000a244:	outs   dx,DWORD PTR ds:[rsi]
   14000a245:	outs   dx,DWORD PTR ds:[rsi]
   14000a246:	je     0x14000a288
   14000a248:	rex.WX (bad) 
   14000a24a:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   14000a252:	outs   dx,BYTE PTR ds:[rsi]
   14000a253:	gs jb  0x14000a2a2
   14000a256:	(bad)  
   14000a257:	jne    0x14000a2c7
   14000a259:	movsxd ebp,DWORD PTR [rax+0x65]
   14000a25c:	jb     0x14000a29e
   14000a25e:	rex push rcx
   14000a260:	rex.RB
   14000a261:	rex.B
   14000a262:	rex.B (bad) 
   14000a264:	push   r14
   14000a266:	(bad)  
   14000a267:	and    al,0x62
   14000a269:	(bad)  
   14000a26a:	jae    0x14000a2d5
   14000a26c:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000a26f:	je     0x14000a2e3
   14000a271:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14000a278:	and    al,0x63
   14000a27a:	push   0x745f7261
   14000a27f:	jb     0x14000a2e2
   14000a281:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a289:	fs rex
   14000a28b:	rex push rsi
   14000a28d:	(bad)  
   14000a28e:	and    al,0x61
   14000a290:	ins    BYTE PTR es:[rdi],dx
   14000a291:	ins    BYTE PTR es:[rdi],dx
   14000a292:	outs   dx,DWORD PTR ds:[rsi]
   14000a293:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a296:	outs   dx,DWORD PTR ds:[rsi]
   14000a297:	jb     0x14000a2d9
   14000a299:	rex.R
   14000a29a:	xor    al,BYTE PTR [rax+0x40]
   14000a29e:	jae    0x14000a314
   14000a2a0:	fs rex
   14000a2a2:	rex pop rax
   14000a2a4:	pop    rdx
   14000a2a5:	add    BYTE PTR [rdi],al
   14000a2a7:	add    BYTE PTR [rdi],bh
   14000a2a9:	(bad)  
   14000a2aa:	xor    BYTE PTR [rdx+0x61],cl
   14000a2ad:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   14000a2b5:	outs   dx,BYTE PTR ds:[rsi]
   14000a2b6:	gs jb  0x14000a305
   14000a2b9:	(bad)  
   14000a2ba:	jne    0x14000a32a
   14000a2bc:	movsxd ebp,DWORD PTR [rax+0x65]
   14000a2bf:	jb     0x14000a311
   14000a2c1:	jb     0x14000a332
   14000a2c3:	jo     0x14000a32a
   14000a2c5:	jb     0x14000a33b
   14000a2c7:	imul   esp,DWORD PTR [rbp+0x73],0x45514040
   14000a2ce:	rex.B
   14000a2cf:	rex.B
   14000a2d0:	rex
   14000a2d1:	rex.B
   14000a2d2:	rex.RB
   14000a2d3:	rex.X push rsi
   14000a2d5:	(bad)  
   14000a2d6:	and    al,0x62
   14000a2d8:	(bad)  
   14000a2d9:	jae    0x14000a344
   14000a2db:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000a2de:	je     0x14000a352
   14000a2e0:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14000a2e7:	and    al,0x63
   14000a2e9:	push   0x745f7261
   14000a2ee:	jb     0x14000a351
   14000a2f0:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a2f8:	fs rex
   14000a2fa:	rex push rsi
   14000a2fc:	(bad)  
   14000a2fd:	and    al,0x61
   14000a2ff:	ins    BYTE PTR es:[rdi],dx
   14000a300:	ins    BYTE PTR es:[rdi],dx
   14000a301:	outs   dx,DWORD PTR ds:[rsi]
   14000a302:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a305:	outs   dx,DWORD PTR ds:[rsi]
   14000a306:	jb     0x14000a348
   14000a308:	rex.R
   14000a309:	xor    al,BYTE PTR [rax+0x40]
   14000a30d:	jae    0x14000a383
   14000a30f:	fs rex
   14000a311:	xor    BYTE PTR [rax],sil
   14000a314:	xor    BYTE PTR [rsi+0x46],al
   14000a317:	rex.B
   14000a318:	rex.RB
   14000a319:	rex.X push rsi
   14000a31b:	(bad)  
   14000a31c:	and    al,0x6d
   14000a31e:	(bad)  
   14000a31f:	jo     0x14000a361
   14000a321:	push   rsi
   14000a322:	(bad)  
   14000a323:	and    al,0x62
   14000a325:	(bad)  
   14000a326:	jae    0x14000a391
   14000a328:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000a32b:	je     0x14000a39f
   14000a32d:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14000a334:	and    al,0x63
   14000a336:	push   0x745f7261
   14000a33b:	jb     0x14000a39e
   14000a33d:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a345:	fs rex
   14000a347:	rex push rsi
   14000a349:	(bad)  
   14000a34a:	and    al,0x61
   14000a34c:	ins    BYTE PTR es:[rdi],dx
   14000a34d:	ins    BYTE PTR es:[rdi],dx
   14000a34e:	outs   dx,DWORD PTR ds:[rsi]
   14000a34f:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a352:	outs   dx,DWORD PTR ds:[rsi]
   14000a353:	jb     0x14000a395
   14000a355:	rex.R
   14000a356:	xor    al,BYTE PTR [rax+0x40]
   14000a35a:	jae    0x14000a3d0
   14000a35c:	fs rex
   14000a35e:	rex push rsi
   14000a360:	xor    DWORD PTR [rdx],esi
   14000a362:	rex push rbp
   14000a364:	(bad)  
   14000a365:	and    al,0x6c
   14000a367:	gs jae 0x14000a3dd
   14000a36a:	rex push rsi
   14000a36c:	(bad)  
   14000a36d:	and    al,0x62
   14000a36f:	(bad)  
   14000a370:	jae    0x14000a3db
   14000a372:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000a375:	je     0x14000a3e9
   14000a377:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14000a37e:	and    al,0x63
   14000a380:	push   0x745f7261
   14000a385:	jb     0x14000a3e8
   14000a387:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a38f:	fs rex
   14000a391:	rex push rsi
   14000a393:	(bad)  
   14000a394:	and    al,0x61
   14000a396:	ins    BYTE PTR es:[rdi],dx
   14000a397:	ins    BYTE PTR es:[rdi],dx
   14000a398:	outs   dx,DWORD PTR ds:[rsi]
   14000a399:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a39c:	outs   dx,DWORD PTR ds:[rsi]
   14000a39d:	jb     0x14000a3df
   14000a39f:	rex.R
   14000a3a0:	xor    al,BYTE PTR [rax+0x40]
   14000a3a4:	jae    0x14000a41a
   14000a3a6:	fs rex
   14000a3a8:	rex
   14000a3a9:	xor    al,BYTE PTR [rax+0x56]
   14000a3ad:	(bad)  
   14000a3ae:	and    al,0x61
   14000a3b0:	ins    BYTE PTR es:[rdi],dx
   14000a3b1:	ins    BYTE PTR es:[rdi],dx
   14000a3b2:	outs   dx,DWORD PTR ds:[rsi]
   14000a3b3:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a3b6:	outs   dx,DWORD PTR ds:[rsi]
   14000a3b7:	jb     0x14000a3f9
   14000a3b9:	push   rbp
   14000a3ba:	(bad)  
   14000a3bb:	and    al,0x70
   14000a3bd:	(bad)  
   14000a3be:	imul   esi,DWORD PTR [rdx+0x40],0x42432424
   14000a3c5:	push   rsi
   14000a3c6:	(bad)  
   14000a3c7:	and    al,0x62
   14000a3c9:	(bad)  
   14000a3ca:	jae    0x14000a435
   14000a3cc:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000a3cf:	je     0x14000a443
   14000a3d1:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14000a3d8:	and    al,0x63
   14000a3da:	push   0x745f7261
   14000a3df:	jb     0x14000a442
   14000a3e1:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a3e9:	fs rex
   14000a3eb:	rex push rsi
   14000a3ed:	(bad)  
   14000a3ee:	and    al,0x61
   14000a3f0:	ins    BYTE PTR es:[rdi],dx
   14000a3f1:	ins    BYTE PTR es:[rdi],dx
   14000a3f2:	outs   dx,DWORD PTR ds:[rsi]
   14000a3f3:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a3f6:	outs   dx,DWORD PTR ds:[rsi]
   14000a3f7:	jb     0x14000a439
   14000a3f9:	rex.R
   14000a3fa:	xor    al,BYTE PTR [rax+0x40]
   14000a3fe:	jae    0x14000a474
   14000a400:	fs rex
   14000a402:	rex push rsi
   14000a404:	xor    DWORD PTR [rdx],esi
   14000a406:	rex
   14000a407:	rex jae 0x14000a47e
   14000a40a:	fs rex
   14000a40c:	rex
   14000a40d:	xor    al,BYTE PTR [rax+0x40]
   14000a411:	xor    al,BYTE PTR [rax+0x40]
   14000a414:	pop    rdx
   14000a415:	add    BYTE PTR [rax],al
   14000a417:	add    BYTE PTR [rdi],bh
   14000a419:	(bad)  
   14000a41a:	xor    BYTE PTR [rdx+0x61],cl
   14000a41d:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   14000a425:	outs   dx,BYTE PTR ds:[rsi]
   14000a426:	gs jb  0x14000a46e
   14000a429:	js     0x14000a48e
   14000a42b:	gs jo  0x14000a4a2
   14000a42e:	imul   ebp,DWORD PTR [rdi+0x6e],0x45514040
   14000a435:	rex.B
   14000a436:	rex.B
   14000a437:	rex
   14000a438:	rex.B
   14000a439:	rex.RB
   14000a43a:	rex.X
   14000a43b:	rex.W
   14000a43c:	rex.B
   14000a43d:	rex.RB
   14000a43e:	rex.X push rsi
   14000a440:	(bad)  
   14000a441:	and    al,0x62
   14000a443:	(bad)  
   14000a444:	jae    0x14000a4af
   14000a446:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000a449:	je     0x14000a4bd
   14000a44b:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14000a452:	and    al,0x63
   14000a454:	push   0x745f7261
   14000a459:	jb     0x14000a4bc
   14000a45b:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a463:	fs rex
   14000a465:	rex push rsi
   14000a467:	(bad)  
   14000a468:	and    al,0x61
   14000a46a:	ins    BYTE PTR es:[rdi],dx
   14000a46b:	ins    BYTE PTR es:[rdi],dx
   14000a46c:	outs   dx,DWORD PTR ds:[rsi]
   14000a46d:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a470:	outs   dx,DWORD PTR ds:[rsi]
   14000a471:	jb     0x14000a4b3
   14000a473:	rex.R
   14000a474:	xor    al,BYTE PTR [rax+0x40]
   14000a478:	jae    0x14000a4ee
   14000a47a:	fs rex
   14000a47c:	rex
   14000a47d:	rex pop rdx
   14000a47f:	add    BYTE PTR [rcx],cl
   14000a481:	add    BYTE PTR [rdi],bh
   14000a483:	(bad)  
   14000a484:	xor    DWORD PTR [rdx+0x61],ecx
   14000a487:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   14000a48f:	outs   dx,BYTE PTR ds:[rsi]
   14000a490:	gs jb  0x14000a4d8
   14000a493:	js     0x14000a4f8
   14000a495:	gs jo  0x14000a50c
   14000a498:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   14000a49f:	rex.B
   14000a4a0:	rex.B
   14000a4a1:	rex pop rax
   14000a4a3:	pop    rdx
   14000a4a4:	add    BYTE PTR [rax],al
   14000a4a6:	sub    DWORD PTR [rax],eax
   14000a4a8:	(bad)  
   14000a4a9:	ja     0x14000a513
   14000a4ab:	(bad)  
   14000a4ac:	je     0x14000a4ee
   14000a4ae:	rex.WX (bad) 
   14000a4b0:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   14000a4b8:	outs   dx,BYTE PTR ds:[rsi]
   14000a4b9:	gs jb  0x14000a501
   14000a4bc:	js     0x14000a521
   14000a4be:	gs jo  0x14000a535
   14000a4c1:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   14000a4c8:	rex.X
   14000a4c9:	push   r8
   14000a4cb:	rex.RB
   14000a4cc:	rex.X
   14000a4cd:	rex.R pop rax
   14000a4cf:	pop    rdx
   14000a4d0:	add    BYTE PTR [rax],al
   14000a4d2:	push   0x61
   14000a4d4:	imul   ebp,DWORD PTR [rdi+rbx*2+0x63],0x61746e6f
   14000a4dc:	imul   ebp,DWORD PTR [rsi+0x65],0x6c642e72
   14000a4e3:	ins    BYTE PTR es:[rdi],dx
   14000a4e4:	add    BYTE PTR [rax],al
   14000a4e6:	repnz add bh,BYTE PTR [rdi]
   14000a4e9:	(bad)  
   14000a4ea:	je     0x14000a560
   14000a4ec:	(bad)  
   14000a4ed:	movsxd ebp,DWORD PTR [rax+0x54]
   14000a4f0:	outs   dx,DWORD PTR ds:[rsi]
   14000a4f1:	push   rax
   14000a4f2:	(bad)  
   14000a4f3:	jb     0x14000a55a
   14000a4f5:	outs   dx,BYTE PTR ds:[rsi]
   14000a4f6:	je     0x14000a538
   14000a4f8:	rex.XB jb 0x14000a560
   14000a4fb:	(bad)  
   14000a4fc:	je     0x14000a563
   14000a4fe:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000a500:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a503:	push   rax
   14000a504:	jb     0x14000a575
   14000a506:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a509:	jae    0x14000a54b
   14000a50b:	fs gs je 0x14000a570
   14000a50f:	imul   ebp,DWORD PTR [rax+rax*2+0x65],0x61686378
   14000a517:	outs   dx,BYTE PTR ds:[rsi]
   14000a518:	gs rex ins DWORD PTR es:[edi],dx
   14000a51c:	jae    0x14000a585
   14000a51e:	pop    rdi
   14000a51f:	jae    0x14000a597
   14000a521:	movsxd eax,DWORD PTR [rax+0x66]
   14000a524:	outs   dx,DWORD PTR ds:[rsi]
   14000a525:	jne    0x14000a595
   14000a527:	fs (bad) 
   14000a529:	je     0x14000a594
   14000a52b:	outs   dx,DWORD PTR ds:[rsi]
   14000a52c:	outs   dx,BYTE PTR ds:[rsi]
   14000a52d:	rex
   14000a52e:	rex push rbx
   14000a530:	rex.B (bad) 
   14000a532:	push   r14
   14000a534:	(bad)  
   14000a535:	and    al,0x62
   14000a537:	(bad)  
   14000a538:	jae    0x14000a5a3
   14000a53a:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000a53d:	je     0x14000a5b1
   14000a53f:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14000a546:	and    al,0x63
   14000a548:	push   0x745f7261
   14000a54d:	jb     0x14000a5b0
   14000a54f:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a557:	fs rex
   14000a559:	rex push rsi
   14000a55b:	(bad)  
   14000a55c:	and    al,0x61
   14000a55e:	ins    BYTE PTR es:[rdi],dx
   14000a55f:	ins    BYTE PTR es:[rdi],dx
   14000a560:	outs   dx,DWORD PTR ds:[rsi]
   14000a561:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a564:	outs   dx,DWORD PTR ds:[rsi]
   14000a565:	jb     0x14000a5a7
   14000a567:	rex.R
   14000a568:	xor    al,BYTE PTR [rax+0x40]
   14000a56c:	jae    0x14000a5e2
   14000a56e:	fs rex
   14000a570:	rex pop rax
   14000a572:	pop    rdx
   14000a573:	add    BYTE PTR [rsi+0x9],ch
   14000a576:	(bad)  
   14000a577:	jb     0x14000a5de
   14000a579:	jo     0x14000a5e7
   14000a57b:	jns    0x14000a5d1
   14000a57d:	outs   dx,DWORD PTR ds:[rsi]
   14000a57e:	push   rax
   14000a57f:	(bad)  
   14000a580:	jb     0x14000a5e7
   14000a582:	outs   dx,BYTE PTR ds:[rsi]
   14000a583:	je     0x14000a5c5
   14000a585:	rex.XB jb 0x14000a5ed
   14000a588:	(bad)  
   14000a589:	je     0x14000a5f0
   14000a58b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000a58d:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a590:	push   rax
   14000a591:	jb     0x14000a602
   14000a593:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a596:	jae    0x14000a5d8
   14000a598:	fs gs je 0x14000a5fd
   14000a59c:	imul   ebp,DWORD PTR [rax+rax*2+0x65],0x61686378
   14000a5a4:	outs   dx,BYTE PTR ds:[rsi]
   14000a5a5:	gs rex ins DWORD PTR es:[edi],dx
   14000a5a9:	jae    0x14000a612
   14000a5ab:	pop    rdi
   14000a5ac:	jae    0x14000a624
   14000a5ae:	movsxd eax,DWORD PTR [rax+0x66]
   14000a5b1:	outs   dx,DWORD PTR ds:[rsi]
   14000a5b2:	jne    0x14000a622
   14000a5b4:	fs (bad) 
   14000a5b6:	je     0x14000a621
   14000a5b8:	outs   dx,DWORD PTR ds:[rsi]
   14000a5b9:	outs   dx,BYTE PTR ds:[rsi]
   14000a5ba:	rex
   14000a5bb:	rex push rbx
   14000a5bd:	pop    r8
   14000a5bf:	rex.B
   14000a5c0:	rex.RB
   14000a5c1:	rex.X push rsi
   14000a5c3:	(bad)  
   14000a5c4:	and    al,0x62
   14000a5c6:	(bad)  
   14000a5c7:	jae    0x14000a632
   14000a5c9:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000a5cc:	je     0x14000a640
   14000a5ce:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   14000a5d5:	and    al,0x63
   14000a5d7:	push   0x745f7261
   14000a5dc:	jb     0x14000a63f
   14000a5de:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   14000a5e6:	fs rex
   14000a5e8:	rex push rsi
   14000a5ea:	(bad)  
   14000a5eb:	and    al,0x61
   14000a5ed:	ins    BYTE PTR es:[rdi],dx
   14000a5ee:	ins    BYTE PTR es:[rdi],dx
   14000a5ef:	outs   dx,DWORD PTR ds:[rsi]
   14000a5f0:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a5f3:	outs   dx,DWORD PTR ds:[rsi]
   14000a5f4:	jb     0x14000a636
   14000a5f6:	rex.R
   14000a5f7:	xor    al,BYTE PTR [rax+0x40]
   14000a5fb:	jae    0x14000a671
   14000a5fd:	fs rex
   14000a5ff:	rex
   14000a600:	rex pop rdx
   14000a602:	add    BYTE PTR [rax],al
   14000a604:	ins    BYTE PTR es:[rdi],dx
   14000a605:	imul   esp,DWORD PTR [rdx+0x6d],0x2e736d77
   14000a60c:	fs ins BYTE PTR es:[rdi],dx
   14000a60e:	ins    BYTE PTR es:[rdi],dx
   14000a60f:	add    ah,bl
   14000a611:	add    eax,0x6765723f
   14000a616:	imul   esi,DWORD PTR [rbx+0x74],0x6d4c7265
   14000a61d:	addr32 jb 0x14000a660
   14000a620:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000a623:	imul   sp,WORD PTR [rdi+0x40],0x6d6c
   14000a629:	addr32 jb 0x14000a66c
   14000a62c:	rex pop rcx
   14000a62e:	pop    r8
   14000a630:	rex.B
   14000a631:	rex.RB
   14000a632:	rex.X push rsi
   14000a634:	(bad)  
   14000a635:	and    al,0x62
   14000a637:	(bad)  
   14000a638:	jae    0x14000a6a3
   14000a63a:	movsxd ebx,DWORD PTR [rdi+0x73]
   14000a63d:	je     0x14000a6b1
   14000a63f:	imul   ebp,DWORD PTR [rsi+0x67],0x55575f40
   14000a646:	(bad)  
   14000a647:	and    al,0x63
   14000a649:	push   0x745f7261
   14000a64e:	jb     0x14000a6b1
   14000a650:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x7340575f
   14000a658:	je     0x14000a6be
   14000a65a:	rex
   14000a65b:	rex push rsi
   14000a65d:	(bad)  
   14000a65e:	and    al,0x61
   14000a660:	ins    BYTE PTR es:[rdi],dx
   14000a661:	ins    BYTE PTR es:[rdi],dx
   14000a662:	outs   dx,DWORD PTR ds:[rsi]
   14000a663:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a666:	outs   dx,DWORD PTR ds:[rsi]
   14000a667:	jb     0x14000a6a9
   14000a669:	pop    rdi
   14000a66a:	push   rdi
   14000a66b:	xor    al,BYTE PTR [rax+0x40]
   14000a66f:	jae    0x14000a6e5
   14000a671:	fs rex
   14000a673:	rex
   14000a674:	rex pop rdx
   14000a676:	add    BYTE PTR [rax],al
   14000a678:	ins    BYTE PTR es:[rdi],dx
   14000a679:	imul   esp,DWORD PTR [rdx+0x6d],0x72657377
   14000a680:	jbe    0x14000a6eb
   14000a682:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a685:	cs fs ins BYTE PTR es:[rdi],dx
   14000a688:	ins    BYTE PTR es:[rdi],dx
   14000a689:	add    BYTE PTR [rcx],al
   14000a68b:	add    BYTE PTR [rdi],bh
   14000a68d:	jae    0x14000a708
   14000a68f:	jae    0x14000a705
   14000a691:	gs ins DWORD PTR es:[rdi],dx
   14000a693:	pop    rdi
   14000a694:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a697:	outs   dx,DWORD PTR gs:[esi]
   14000a69a:	jb     0x14000a715
   14000a69c:	rex jae 0x14000a718
   14000a69f:	jae    0x14000a715
   14000a6a1:	gs ins DWORD PTR es:[rdi],dx
   14000a6a3:	rex (bad) 
   14000a6a5:	outs   dx,DWORD PTR ds:[rsi]
   14000a6a6:	outs   dx,DWORD PTR ds:[rsi]
   14000a6a7:	jae    0x14000a71d
   14000a6a9:	rex
   14000a6aa:	rex pop rcx
   14000a6ac:	rex.B
   14000a6ad:	rex.B
   14000a6ae:	rex.RB
   14000a6af:	rex.X push rsi
   14000a6b1:	gs jb  0x14000a726
   14000a6b4:	outs   dx,DWORD PTR ds:[rsi]
   14000a6b5:	jb     0x14000a716
   14000a6b7:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a6ba:	outs   dx,DWORD PTR gs:[esi]
   14000a6bd:	jb     0x14000a738
   14000a6bf:	rex xor DWORD PTR [rdx],esi
   14000a6c2:	rex pop rax
   14000a6c4:	pop    rdx
   14000a6c5:	add    BYTE PTR [rax],al
   14000a6c7:	add    BYTE PTR [rdi],bh
   14000a6c9:	outs   dx,BYTE PTR gs:[esi]
   14000a6cc:	gs jb  0x14000a738
   14000a6cf:	movsxd ebx,DWORD PTR [rdi+0x63]
   14000a6d2:	(bad)  
   14000a6d3:	je     0x14000a73a
   14000a6d5:	outs   dx,DWORD PTR ds:[esi]
   14000a6d7:	jb     0x14000a752
   14000a6d9:	rex jae 0x14000a755
   14000a6dc:	jae    0x14000a752
   14000a6de:	gs ins DWORD PTR es:[rdi],dx
   14000a6e0:	rex (bad) 
   14000a6e2:	outs   dx,DWORD PTR ds:[rsi]
   14000a6e3:	outs   dx,DWORD PTR ds:[rsi]
   14000a6e4:	jae    0x14000a75a
   14000a6e6:	rex
   14000a6e7:	rex pop rcx
   14000a6e9:	rex.B
   14000a6ea:	rex.B
   14000a6eb:	rex.RB
   14000a6ec:	rex.X push rsi
   14000a6ee:	gs jb  0x14000a763
   14000a6f1:	outs   dx,DWORD PTR ds:[rsi]
   14000a6f2:	jb     0x14000a753
   14000a6f4:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a6f7:	outs   dx,DWORD PTR gs:[esi]
   14000a6fa:	jb     0x14000a775
   14000a6fc:	rex xor DWORD PTR [rdx],esi
   14000a6ff:	rex pop rax
   14000a701:	pop    rdx
   14000a702:	add    BYTE PTR [rax],al
   14000a704:	(bad)  
   14000a705:	outs   dx,DWORD PTR ds:[rsi]
   14000a706:	outs   dx,DWORD PTR ds:[rsi]
   14000a707:	jae    0x14000a77d
   14000a709:	pop    rdi
   14000a70a:	jae    0x14000a785
   14000a70c:	jae    0x14000a782
   14000a70e:	gs ins DWORD PTR es:[rdi],dx
   14000a710:	sub    eax,0x32316376
   14000a715:	xor    BYTE PTR [rip+0x312d746d],ch        # 0x1712e1b88
   14000a71b:	pop    rdi
   14000a71c:	xor    eax,0x6c642e36
   14000a721:	ins    BYTE PTR es:[rdi],dx
   14000a722:	add    BYTE PTR [rax],al
   14000a724:	leave  
   14000a725:	add    bh,BYTE PTR [rdi]
   14000a727:	pop    rdi
   14000a728:	pop    rax
   14000a729:	(bad)
   14000a72e:	ins    BYTE PTR es:[rdi],dx
   14000a72f:	ins    BYTE PTR es:[rdi],dx
   14000a730:	outs   dx,DWORD PTR ds:[rsi]
   14000a731:	movsxd eax,DWORD PTR [rax+0x73]
   14000a734:	je     0x14000a79a
   14000a736:	rex
   14000a737:	rex pop rcx
   14000a739:	pop    r8
   14000a73b:	pop    rax
   14000a73c:	pop    rdx
   14000a73d:	add    ah,cl
   14000a73f:	add    bh,BYTE PTR [rdi]
   14000a741:	pop    rdi
   14000a742:	pop    rax
   14000a743:	ins    BYTE PTR es:[rdi],dx
   14000a744:	outs   dx,BYTE PTR gs:[rsi]
   14000a746:	addr32 je 0x14000a7b1
   14000a749:	pop    rdi
   14000a74a:	gs jb  0x14000a7bf
   14000a74d:	outs   dx,DWORD PTR ds:[rsi]
   14000a74e:	jb     0x14000a790
   14000a750:	jae    0x14000a7c6
   14000a752:	fs rex
   14000a754:	rex pop rcx
   14000a756:	pop    r8
   14000a758:	push   rax
   14000a759:	rex.RB
   14000a75a:	rex.X
   14000a75b:	rex.R
   14000a75c:	rex pop rdx
   14000a75e:	add    BYTE PTR [rax],al
   14000a760:	int    0x2
   14000a762:	(bad)  
   14000a763:	pop    rdi
   14000a764:	pop    rax
   14000a765:	outs   dx,DWORD PTR ds:[rsi]
   14000a766:	jne    0x14000a7dc
   14000a768:	pop    rdi
   14000a769:	outs   dx,DWORD PTR ds:[rsi]
   14000a76a:	pop    di
   14000a76c:	jb     0x14000a7cf
   14000a76e:	outs   dx,BYTE PTR ds:[rsi]
   14000a76f:	addr32 gs rex jae 0x14000a7e8
   14000a774:	fs rex
   14000a776:	rex pop rcx
   14000a778:	pop    r8
   14000a77a:	push   rax
   14000a77b:	rex.RB
   14000a77c:	rex.X
   14000a77d:	rex.R
   14000a77e:	rex pop rdx
   14000a780:	add    BYTE PTR [rax],al
   14000a782:	mov    al,0x2
   14000a784:	(bad)  
   14000a785:	pop    rdi
   14000a786:	push   rbx
   14000a787:	jns    0x14000a7fc
   14000a789:	gs jb  0x14000a7fe
   14000a78c:	outs   dx,DWORD PTR ds:[rsi]
   14000a78d:	jb     0x14000a7ee
   14000a78f:	ins    DWORD PTR es:[rdi],dx
   14000a790:	(bad)  
   14000a791:	jo     0x14000a7d3
   14000a793:	jae    0x14000a809
   14000a795:	fs rex
   14000a797:	rex pop rcx
   14000a799:	push   r8
   14000a79b:	rex.RB
   14000a79c:	rex.X
   14000a79d:	rex.R
   14000a79e:	rex.W
   14000a79f:	rex pop rdx
   14000a7a1:	add    ch,al
   14000a7a3:	add    bh,BYTE PTR [rdi]
   14000a7a5:	pop    rdi
   14000a7a6:	push   rdi
   14000a7a7:	imul   ebp,DWORD PTR [rsi+0x65],0x726f7272
   14000a7ae:	pop    rdi
   14000a7af:	ins    DWORD PTR es:[rdi],dx
   14000a7b0:	(bad)  
   14000a7b1:	jo     0x14000a7f3
   14000a7b3:	jae    0x14000a829
   14000a7b5:	fs rex
   14000a7b7:	rex pop rcx
   14000a7b9:	push   r8
   14000a7bb:	rex.RB
   14000a7bc:	rex.X
   14000a7bd:	rex.R
   14000a7be:	rex.W
   14000a7bf:	rex pop rdx
   14000a7c1:	add    BYTE PTR [rbp+0x53],cl
   14000a7c4:	push   rsi
   14000a7c5:	rex.XB push r8
   14000a7c7:	xor    DWORD PTR [rdx],esi
   14000a7c9:	xor    BYTE PTR [rsi],ch
   14000a7cb:	fs ins BYTE PTR es:[rdi],dx
   14000a7cd:	ins    BYTE PTR es:[rdi],dx
   14000a7ce:	add    BYTE PTR [rax],al
   14000a7d0:	(bad)  
   14000a7d1:	add    al,0x5f
   14000a7d3:	jo     0x14000a84a
   14000a7d5:	jb     0x14000a83c
   14000a7d7:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a7da:	ins    BYTE PTR es:[rdi],dx
   14000a7db:	add    BYTE PTR [rax+0x0],dh
   14000a7de:	(bad)  
   14000a7df:	(bad)  
   14000a7e0:	xor    al,BYTE PTR [rax+0x59]
   14000a7e3:	push   r8
   14000a7e5:	rex.RB
   14000a7e6:	pop    r8
   14000a7e8:	pop    rdi
   14000a7e9:	rex.WXB
   14000a7ea:	rex pop rdx
   14000a7ec:	add    BYTE PTR [rax],al
   14000a7ee:	jb     0x14000a7f0
   14000a7f0:	(bad)  
   14000a7f1:	(bad)  
   14000a7f2:	xor    eax,DWORD PTR [rax+0x59]
   14000a7f5:	pop    r8
   14000a7f7:	push   rax
   14000a7f8:	rex.RB
   14000a7f9:	pop    r8
   14000a7fb:	rex pop rdx
   14000a7fd:	add    dl,bl
   14000a7ff:	add    bl,BYTE PTR [rdi+0x68]
   14000a802:	jns    0x14000a874
   14000a804:	outs   dx,DWORD PTR ds:[rsi]
   14000a805:	je     0x14000a807
   14000a807:	add    BYTE PTR [rcx+0x695f5f01],ch
   14000a80d:	outs   dx,DWORD PTR ds:[rsi]
   14000a80e:	(bad)  
   14000a80f:	pop    rdi
   14000a810:	data16 jne 0x14000a881
   14000a813:	movsxd eax,DWORD PTR [rax]
   14000a815:	add    BYTE PTR [rax+0x6],cl
   14000a818:	data16 jo 0x14000a88d
   14000a81b:	imul   ebp,DWORD PTR [rsi+0x74],0x6180066
   14000a822:	gs js  0x14000a88e
   14000a825:	je     0x14000a827
   14000a827:	add    BYTE PTR [rdi+0x6d656d06],dh
   14000a82d:	ins    DWORD PTR es:[rdi],dx
   14000a82e:	outs   dx,DWORD PTR ds:[rsi]
   14000a82f:	jbe    0x14000a896
   14000a831:	add    BYTE PTR [rcx+0x5f3f3f00],cl
   14000a837:	push   rsi
   14000a838:	rex pop rcx
   14000a83a:	pop    r8
   14000a83c:	push   rax
   14000a83d:	rex.RB
   14000a83e:	pop    r8
   14000a840:	rex pop rdx
   14000a842:	add    BYTE PTR [rax],al
   14000a844:	add    DWORD PTR [r15+0x43],r11d
   14000a848:	js     0x14000a8c2
   14000a84a:	push   rsp
   14000a84b:	push   0x45776f72
   14000a850:	js     0x14000a8b5
   14000a852:	gs jo  0x14000a8c9
   14000a855:	imul   ebp,DWORD PTR [rdi+0x6e],0x1620000
   14000a85c:	pop    rdi
   14000a85d:	pop    rdi
   14000a85e:	rex.XB js 0x14000a8d9
   14000a861:	rex.RX jb 0x14000a8c5
   14000a864:	ins    DWORD PTR es:[rdi],dx
   14000a865:	gs rex.W (bad) 
   14000a868:	outs   dx,BYTE PTR ds:[rsi]
   14000a869:	fs ins BYTE PTR es:[rdi],dx
   14000a86b:	gs jb  0x14000a8a1
   14000a86e:	add    BYTE PTR [rax],al
   14000a870:	mov    ah,0x6
   14000a872:	ins    DWORD PTR es:[rdi],dx
   14000a873:	gs ins DWORD PTR es:[rdi],dx
   14000a875:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000a878:	add    BYTE PTR [rax],al
   14000a87a:	mov    ch,0x6
   14000a87c:	ins    DWORD PTR es:[rdi],dx
   14000a87d:	gs ins DWORD PTR es:[rdi],dx
   14000a87f:	movsxd esi,DWORD PTR [rax+0x79]
   14000a882:	add    BYTE PTR [rax],al
   14000a884:	sub    al,0x0
   14000a886:	(bad)  
   14000a887:	(bad)  
   14000a888:	xor    BYTE PTR [rbp+0x78],ah
   14000a88b:	movsxd esp,DWORD PTR [rbp+0x70]
   14000a88e:	je     0x14000a8f9
   14000a890:	outs   dx,DWORD PTR ds:[rsi]
   14000a891:	outs   dx,BYTE PTR ds:[rsi]
   14000a892:	rex jae 0x14000a909
   14000a895:	fs rex
   14000a897:	rex push rcx
   14000a899:	rex.RB
   14000a89a:	rex.B
   14000a89b:	rex.B
   14000a89c:	rex
   14000a89d:	rex.B
   14000a89e:	rex.RB
   14000a89f:	rex.X push rsi
   14000a8a1:	xor    BYTE PTR [rcx],dh
   14000a8a3:	rex
   14000a8a4:	rex pop rdx
   14000a8a6:	add    BYTE PTR [rax],al
   14000a8a8:	jp     0x14000a8aa
   14000a8aa:	(bad)  
   14000a8ab:	(bad)  
   14000a8ac:	xor    al,0x65
   14000a8ae:	js     0x14000a913
   14000a8b0:	gs jo  0x14000a927
   14000a8b3:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   14000a8ba:	rex
   14000a8bb:	rex push rcx
   14000a8bd:	rex.RB
   14000a8be:	rex.B
   14000a8bf:	rex.B
   14000a8c0:	rex.B
   14000a8c1:	rex.RB
   14000a8c2:	push   r14
   14000a8c4:	xor    BYTE PTR [rcx],dh
   14000a8c6:	rex
   14000a8c7:	rex.B
   14000a8c8:	rex.RB
   14000a8c9:	rex.X push rsi
   14000a8cb:	xor    BYTE PTR [rcx],dh
   14000a8cd:	rex
   14000a8ce:	rex pop rdx
   14000a8d0:	add    BYTE PTR [rax],al
   14000a8d2:	push   0x0
   14000a8d4:	(bad)  
   14000a8d5:	(bad)  
   14000a8d6:	xor    DWORD PTR [rbp+0x78],esp
   14000a8d9:	movsxd esp,DWORD PTR [rbp+0x70]
   14000a8dc:	je     0x14000a947
   14000a8de:	outs   dx,DWORD PTR ds:[rsi]
   14000a8df:	outs   dx,BYTE PTR ds:[rsi]
   14000a8e0:	rex jae 0x14000a957
   14000a8e3:	fs rex
   14000a8e5:	rex push rbp
   14000a8e7:	rex.RB
   14000a8e8:	rex.B
   14000a8e9:	rex.B
   14000a8ea:	rex pop rax
   14000a8ec:	pop    rdx
   14000a8ed:	add    BYTE PTR [rbx],dh
   14000a8ef:	add    DWORD PTR [rdi],edi
   14000a8f1:	je     0x14000a958
   14000a8f3:	jb     0x14000a962
   14000a8f5:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000a8fc:	pop    rcx
   14000a8fd:	pop    r8
   14000a8ff:	pop    rax
   14000a900:	pop    rdx
   14000a901:	add    BYTE PTR [rcx+rax*1+0x5f],bl
   14000a905:	pop    rdi
   14000a906:	rex.XB pop r15
   14000a908:	jae    0x14000a97a
   14000a90a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000a90e:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000a915:	ins    BYTE PTR es:[rdi],dx
   14000a916:	gs jb  0x14000a919
   14000a919:	add    BYTE PTR [rbp+0x53],cl
   14000a91c:	push   rsi
   14000a91d:	rex.XB push r10
   14000a91f:	xor    DWORD PTR [rdx],esi
   14000a921:	xor    BYTE PTR [rsi],ch
   14000a923:	fs ins BYTE PTR es:[rdi],dx
   14000a925:	ins    BYTE PTR es:[rdi],dx
   14000a926:	add    BYTE PTR [rax],al
   14000a928:	pop    rbx
   14000a929:	add    ebx,DWORD PTR [rdi+0x6c]
   14000a92c:	outs   dx,DWORD PTR ds:[rsi]
   14000a92d:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000a930:	mov    DWORD PTR [rdi+rbx*2],0x6f6c6e75
   14000a937:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000a93a:	or     DWORD PTR [rdx],eax
   14000a93c:	pop    rdi
   14000a93d:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a940:	ins    BYTE PTR es:[rdi],dx
   14000a941:	outs   dx,DWORD PTR ds:[rsi]
   14000a942:	movsxd ebx,DWORD PTR [rdi+0x63]
   14000a945:	jb     0x14000a9bb
   14000a947:	add    BYTE PTR [rdi+0x645f5f01],bl
   14000a94d:	ins    BYTE PTR es:[rdi],dx
   14000a94e:	ins    BYTE PTR es:[rdi],dx
   14000a94f:	outs   dx,DWORD PTR ds:[rsi]
   14000a950:	outs   dx,BYTE PTR ds:[rsi]
   14000a951:	gs js  0x14000a9bd
   14000a954:	je     0x14000a956
   14000a956:	add    al,BYTE PTR [rdi+rbx*2]
   14000a959:	outs   dx,DWORD PTR ds:[rsi]
   14000a95a:	outs   dx,BYTE PTR ds:[rsi]
   14000a95b:	gs js  0x14000a9c7
   14000a95e:	je     0x14000a960
   14000a960:	pop    rax
   14000a961:	add    DWORD PTR [rdi+0x58],ebx
   14000a964:	movsxd esi,DWORD PTR [rax+0x74]
   14000a967:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x1f20072
   14000a970:	pop    rdi
   14000a971:	(bad)  
   14000a972:	ins    DWORD PTR es:[rdi],dx
   14000a973:	jae    0x14000a9dc
   14000a975:	pop    rdi
   14000a976:	gs js  0x14000a9e2
   14000a979:	je     0x14000a97b
   14000a97b:	add    BYTE PTR [rdi+0x675f5f01],ah
   14000a981:	gs je  0x14000a9f1
   14000a984:	(bad)  
   14000a985:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000a98c:	(bad)  
   14000a98d:	add    DWORD PTR [rdi+0x5f],ebx
   14000a990:	jae    0x14000a9f7
   14000a992:	je     0x14000a9f3
   14000a994:	(bad)  
   14000a995:	jo     0x14000aa07
   14000a997:	pop    rdi
   14000a998:	je     0x14000aa13
   14000a99a:	jo     0x14000aa01
   14000a99c:	add    BYTE PTR [rax],al
   14000a99e:	pop    rax
   14000a99f:	add    bl,BYTE PTR [rdi+0x65]
   14000a9a2:	js     0x14000aa0d
   14000a9a4:	je     0x14000a9a6
   14000a9a6:	or     al,BYTE PTR [rdx]
   14000a9a8:	pop    rdi
   14000a9a9:	movsxd esp,DWORD PTR [rbp+0x78]
   14000a9ac:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x635f021a
   14000a9b4:	outs   dx,DWORD PTR ds:[rsi]
   14000a9b5:	outs   dx,BYTE PTR ds:[rsi]
   14000a9b6:	imul   sp,WORD PTR [rdi+0x74],0x7268
   14000a9bc:	gs (bad) 
   14000a9be:	fs ins BYTE PTR es:[rdi],dx
   14000a9c0:	outs   dx,DWORD PTR ds:[rsi]
   14000a9c1:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000a9c4:	gs add al,dl
   14000a9c7:	add    DWORD PTR [rdi+0x5f],ebx
   14000a9ca:	jae    0x14000aa31
   14000a9cc:	je     0x14000aa43
   14000a9ce:	jae    0x14000aa35
   14000a9d0:	jb     0x14000aa3f
   14000a9d2:	(bad)  
   14000a9d3:	je     0x14000aa3d
   14000a9d5:	gs jb  0x14000aa4a
   14000a9d8:	add    BYTE PTR [rax],al
   14000a9da:	loop   0x14000a9de
   14000a9dc:	pop    rdi
   14000a9dd:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000a9e4:	ins    DWORD PTR es:[rdi],dx
   14000a9e5:	pop    rdi
   14000a9e6:	gs add cl,ah
   14000a9e9:	add    bl,BYTE PTR [rdi+0x69]
   14000a9ec:	outs   dx,BYTE PTR ds:[rsi]
   14000a9ed:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0xa8006d72
   14000a9f5:	add    DWORD PTR [rdi+0x5f],ebx
   14000a9f8:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
   14000a9ff:	add    BYTE PTR [rax+0x2],bh
   14000aa02:	pop    rdi
   14000aa03:	ins    WORD PTR es:[rdi],dx
   14000aa05:	outs   dx,DWORD PTR ds:[rsi]
   14000aa06:	fs add BYTE PTR gs:[rax],al
   14000aa0a:	sbb    DWORD PTR [rdx],eax
   14000aa0c:	pop    rdi
   14000aa0d:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000aa10:	ins    DWORD PTR es:[rdi],dx
   14000aa11:	outs   dx,DWORD PTR ds:[rsi]
   14000aa12:	fs add BYTE PTR gs:[rax],al
   14000aa16:	sbb    eax,DWORD PTR [rcx]
   14000aa18:	(bad)  
   14000aa19:	pop    rdi
   14000aa1a:	je     0x14000aa95
   14000aa1c:	jo     0x14000aa83
   14000aa1e:	pop    rdi
   14000aa1f:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   14000aa26:	outs   dx,DWORD PTR ds:[rsi]
   14000aa27:	jb     0x14000aa88
   14000aa29:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14000aa30:	ins    BYTE PTR es:[rdi],dx
   14000aa31:	pop    rdi
   14000aa32:	ins    DWORD PTR es:[rdi],dx
   14000aa33:	gs je  0x14000aa9e
   14000aa36:	outs   dx,DWORD PTR ds:[rsi]
   14000aa37:	fs rex je 0x14000aab4
   14000aa3b:	jo     0x14000aaa2
   14000aa3d:	pop    rdi
   14000aa3e:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   14000aa45:	rex.RB
   14000aa46:	rex.B
   14000aa47:	pop    r8
   14000aa49:	pop    rax
   14000aa4a:	pop    rdx
   14000aa4b:	add    BYTE PTR [rcx+0x635f5f01],bl
   14000aa51:	jb     0x14000aac7
   14000aa53:	push   rbx
   14000aa54:	gs je  0x14000aaac
   14000aa57:	outs   dx,BYTE PTR ds:[rsi]
   14000aa58:	push   0x6c646e61
   14000aa5d:	gs fs rex.RB js 0x14000aac5
   14000aa62:	gs jo  0x14000aad9
   14000aa65:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000aa6c:	gs jb  0x14000aa6f
   14000aa6f:	add    BYTE PTR [rip+0x636e4501],ah        # 0x1a36eef76
   14000aa75:	outs   dx,DWORD PTR ds:[rsi]
   14000aa76:	fs gs push rax
   14000aa79:	outs   dx,DWORD PTR ds:[rsi]
   14000aa7a:	imul   ebp,DWORD PTR [rsi+0x74],0xff007265
   14000aa81:	add    BYTE PTR [rbp+riz*2+0x63],al
   14000aa85:	outs   dx,DWORD PTR ds:[rsi]
   14000aa86:	fs gs push rax
   14000aa89:	outs   dx,DWORD PTR ds:[rsi]
   14000aa8a:	imul   ebp,DWORD PTR [rsi+0x74],0x30007265
   14000aa91:	add    al,0x51
   14000aa93:	jne    0x14000aafa
   14000aa95:	jb     0x14000ab10
   14000aa97:	push   rax
   14000aa98:	gs jb  0x14000ab01
   14000aa9b:	outs   dx,DWORD PTR ds:[rsi]
   14000aa9c:	jb     0x14000ab0b
   14000aa9e:	(bad)  
   14000aa9f:	outs   dx,BYTE PTR ds:[rsi]
   14000aaa0:	movsxd esp,DWORD PTR [rbp+0x43]
   14000aaa3:	outs   dx,DWORD PTR ds:[rsi]
   14000aaa4:	jne    0x14000ab14
   14000aaa6:	je     0x14000ab0d
   14000aaa8:	jb     0x14000aaaa
   14000aaaa:	adc    BYTE PTR [rdx],al
   14000aaac:	rex.RXB
   14000aaad:	gs je  0x14000aaf3
   14000aab0:	jne    0x14000ab24
   14000aab2:	jb     0x14000ab19
   14000aab4:	outs   dx,BYTE PTR ds:[rsi]
   14000aab5:	je     0x14000ab07
   14000aab7:	jb     0x14000ab28
   14000aab9:	movsxd esp,DWORD PTR [rbp+0x73]
   14000aabc:	jae    0x14000ab07
   14000aabe:	add    BYTE PTR fs:[rdx+rax*1],dl
   14000aac2:	rex.RXB
   14000aac3:	gs je  0x14000ab09
   14000aac6:	jne    0x14000ab3a
   14000aac8:	jb     0x14000ab2f
   14000aaca:	outs   dx,BYTE PTR ds:[rsi]
   14000aacb:	je     0x14000ab21
   14000aacd:	push   0x64616572
   14000aad2:	rex.WB
   14000aad3:	add    BYTE PTR fs:[rax],al
   14000aad6:	fld    QWORD PTR [rdx]
   14000aad8:	rex.RXB
   14000aad9:	gs je  0x14000ab2f
   14000aadc:	jns    0x14000ab51
   14000aade:	je     0x14000ab45
   14000aae0:	ins    DWORD PTR es:[rdi],dx
   14000aae1:	push   rsp
   14000aae2:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000aae9:	ins    BYTE PTR es:[rdi],dx
   14000aaea:	gs push rsp
   14000aaec:	imul   ebp,DWORD PTR [rbp+0x65],0x52454b00
   14000aaf3:	rex.WRX
   14000aaf4:	rex.RB
   14000aaf5:	xor    r14,QWORD PTR [rdx]
   14000aaf8:	cs fs ins BYTE PTR es:[rdi],dx
   14000aafb:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .data:

000000014000b000 <.data>:
   14000b000:	clc    
   14000b001:	jbe    0x14000b003
   14000b003:	rex add DWORD PTR [rax],eax
   14000b006:	add    BYTE PTR [rax],al
   14000b008:	rex.W ja 0x14000b00b
   14000b00b:	rex add DWORD PTR [rax],eax
   14000b00e:	add    BYTE PTR [rax],al
   14000b010:	test   al,0x77
   14000b012:	add    BYTE PTR [rax+0x1],al
   14000b015:	add    BYTE PTR [rax],al
   14000b017:	add    BYTE PTR [rax+0x140007b],dl
   14000b01d:	add    BYTE PTR [rax],al
   14000b01f:	add    BYTE PTR [rax+0x140007b],ah
   14000b025:	add    BYTE PTR [rax],al
   14000b027:	add    BYTE PTR [rax+0x140007b],dh
   14000b02d:	add    BYTE PTR [rax],al
   14000b02f:	add    BYTE PTR [rbp-0x68],dh
   14000b032:	add    BYTE PTR [rax],al
   14000b034:	add    DWORD PTR [rax],eax
   14000b036:	add    BYTE PTR [rax],al
   14000b038:	(bad)  
   14000b039:	(bad)  
   14000b03a:	(bad)  
   14000b03b:	(bad)  
   14000b03c:	(bad)  
   14000b03d:	(bad)  
   14000b03e:	(bad)  
   14000b03f:	push   QWORD PTR [rdx]
   14000b041:	movabs ds:0x5dcd00002b992ddf,al
   14000b04a:	and    dl,dl
   14000b04c:	data16 (bad) 
   14000b04e:	(bad)  
   14000b04f:	call   rax
   14000b051:	jnp    0x14000b053
   14000b053:	rex add DWORD PTR [rax],eax
	...
   14000b05e:	add    BYTE PTR [rax],al
   14000b060:	cs (bad) 
   14000b062:	push   r14
   14000b064:	gs js  0x14000b0ca
   14000b067:	gs jo  0x14000b0de
   14000b06a:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   14000b071:	rex
   14000b072:	add    BYTE PTR [rax],al
   14000b075:	add    BYTE PTR [rax],al
   14000b077:	add    al,dl
   14000b079:	jnp    0x14000b07b
   14000b07b:	rex add DWORD PTR [rax],eax
	...
   14000b086:	add    BYTE PTR [rax],al
   14000b088:	cs (bad) 
   14000b08a:	push   r14
   14000b08c:	gs jb  0x14000b101
   14000b08f:	outs   dx,DWORD PTR ds:[rsi]
   14000b090:	jb     0x14000b0f1
   14000b092:	movsxd esp,DWORD PTR [rcx+0x74]
   14000b095:	outs   dx,DWORD PTR gs:[esi]
   14000b098:	jb     0x14000b113
   14000b09a:	rex jae 0x14000b111
   14000b09d:	fs rex
   14000b09f:	add    BYTE PTR [rax],al
   14000b0a2:	add    BYTE PTR [rax],al
   14000b0a4:	add    BYTE PTR [rax],al
   14000b0a6:	add    BYTE PTR [rax],al
   14000b0a8:	sar    BYTE PTR [rbx+0x0],1
   14000b0ab:	rex add DWORD PTR [rax],eax
	...
   14000b0b6:	add    BYTE PTR [rax],al
   14000b0b8:	cs (bad) 
   14000b0ba:	push   r14
   14000b0bc:	pop    rdi
   14000b0bd:	rex.RXB
   14000b0be:	outs   dx,BYTE PTR gs:[rsi]
   14000b0c0:	gs jb  0x14000b12c
   14000b0c3:	movsxd ebx,DWORD PTR [rdi+0x65]
   14000b0c6:	jb     0x14000b13a
   14000b0c8:	outs   dx,DWORD PTR ds:[rsi]
   14000b0c9:	jb     0x14000b12a
   14000b0cb:	movsxd esp,DWORD PTR [rcx+0x74]
   14000b0ce:	outs   dx,DWORD PTR gs:[esi]
   14000b0d1:	jb     0x14000b14c
   14000b0d3:	rex jae 0x14000b14a
   14000b0d6:	fs rex
   14000b0d8:	add    BYTE PTR [rax],al
   14000b0db:	add    BYTE PTR [rax],al
   14000b0dd:	add    BYTE PTR [rax],al
   14000b0df:	add    al,dl
   14000b0e1:	jnp    0x14000b0e3
   14000b0e3:	rex add DWORD PTR [rax],eax
	...
   14000b0ee:	add    BYTE PTR [rax],al
   14000b0f0:	cs (bad) 
   14000b0f2:	push   r14
   14000b0f4:	pop    rdi
   14000b0f5:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000b0f7:	jae    0x14000b16d
   14000b0f9:	jb     0x14000b160
   14000b0fb:	(bad)  
   14000b0fc:	ins    DWORD PTR es:[rdi],dx
   14000b0fd:	pop    rdi
   14000b0fe:	gs jb  0x14000b173
   14000b101:	outs   dx,DWORD PTR ds:[rsi]
   14000b102:	jb     0x14000b163
   14000b104:	movsxd esp,DWORD PTR [rcx+0x74]
   14000b107:	outs   dx,DWORD PTR gs:[esi]
   14000b10a:	jb     0x14000b185
   14000b10c:	rex jae 0x14000b183
   14000b10f:	fs rex
   14000b111:	add    BYTE PTR [rax],al
   14000b114:	add    BYTE PTR [rax],al
   14000b116:	add    BYTE PTR [rax],al
   14000b118:	sar    BYTE PTR [rbx+0x0],1
   14000b11b:	rex add DWORD PTR [rax],eax
	...
   14000b126:	add    BYTE PTR [rax],al
   14000b128:	cs (bad) 
   14000b12a:	push   r14
   14000b12c:	pop    rdi
   14000b12d:	push   rbx
   14000b12e:	jns    0x14000b1a3
   14000b130:	je     0x14000b197
   14000b132:	ins    DWORD PTR es:[rdi],dx
   14000b133:	pop    rdi
   14000b134:	gs jb  0x14000b1a9
   14000b137:	outs   dx,DWORD PTR ds:[rsi]
   14000b138:	jb     0x14000b199
   14000b13a:	movsxd esp,DWORD PTR [rcx+0x74]
   14000b13d:	outs   dx,DWORD PTR gs:[esi]
   14000b140:	jb     0x14000b1bb
   14000b142:	rex jae 0x14000b1b9
   14000b145:	fs rex
   14000b147:	add    BYTE PTR [rax],al
   14000b14a:	add    BYTE PTR [rax],al
   14000b14c:	add    BYTE PTR [rax],al
   14000b14e:	add    BYTE PTR [rax],al
   14000b150:	sar    BYTE PTR [rbx+0x0],1
   14000b153:	rex add DWORD PTR [rax],eax
	...
   14000b15e:	add    BYTE PTR [rax],al
   14000b160:	cs (bad) 
   14000b162:	push   r14
   14000b164:	rex.WX (bad) 
   14000b166:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   14000b16e:	outs   dx,BYTE PTR ds:[rsi]
   14000b16f:	gs jb  0x14000b1be
   14000b172:	(bad)  
   14000b173:	jne    0x14000b1e3
   14000b175:	movsxd ebp,DWORD PTR [rax+0x65]
   14000b178:	jb     0x14000b1ca
   14000b17a:	jb     0x14000b1eb
   14000b17c:	jo     0x14000b1e3
   14000b17e:	jb     0x14000b1f4
   14000b180:	imul   esp,DWORD PTR [rbp+0x73],0x4040
   14000b187:	add    al,dl
   14000b189:	jnp    0x14000b18b
   14000b18b:	rex add DWORD PTR [rax],eax
	...
   14000b196:	add    BYTE PTR [rax],al
   14000b198:	cs (bad) 
   14000b19a:	push   r14
   14000b19c:	rex.WX (bad) 
   14000b19e:	imul   ebp,DWORD PTR [rbx+rax*2+0x6f],0x6961746e
   14000b1a6:	outs   dx,BYTE PTR ds:[rsi]
   14000b1a7:	gs jb  0x14000b1ef
   14000b1aa:	js     0x14000b20f
   14000b1ac:	gs jo  0x14000b223
   14000b1af:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14000b1b6:	add    BYTE PTR [rax],al
   14000b1b8:	sar    BYTE PTR [rbx+0x0],1
   14000b1bb:	rex add DWORD PTR [rax],eax
	...
   14000b1c6:	add    BYTE PTR [rax],al
   14000b1c8:	cs push rax
   14000b1ca:	ss pop r8
   14000b1cd:	push   rax
   14000b1ce:	rex.RB
   14000b1cf:	push   r13
   14000b1d1:	rex.WX
   14000b1d2:	rex.WRX
   14000b1d3:	rex.WB
   14000b1d4:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000b1d6:	jbe    0x14000b237
   14000b1d8:	rex
   14000b1d9:	rex
   14000b1da:	rex pop rdx
   14000b1dc:	add    BYTE PTR [rax],al
   14000b1de:	add    BYTE PTR [rax],al
   14000b1e0:	sar    BYTE PTR [rbx+0x0],1
   14000b1e3:	rex add DWORD PTR [rax],eax
	...
   14000b1ee:	add    BYTE PTR [rax],al
   14000b1f0:	cs (bad) 
   14000b1f2:	push   r14
   14000b1f4:	(bad)  
   14000b1f5:	and    al,0x5f
   14000b1f7:	rex.RX jne 0x14000b268
   14000b1fa:	movsxd ebx,DWORD PTR [rdi+0x62]
   14000b1fd:	(bad)  
   14000b1fe:	jae    0x14000b265
   14000b200:	rex pop rax
   14000b202:	push   rax
   14000b203:	rex.RB
   14000b204:	push   r13
   14000b206:	rex.WX
   14000b207:	rex.WRX
   14000b208:	rex.WB
   14000b209:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000b20b:	jbe    0x14000b26c
   14000b20d:	rex
   14000b20e:	rex
   14000b20f:	rex jae 0x14000b286
   14000b212:	fs rex
   14000b214:	add    BYTE PTR [rax],al
	...
   14000b21f:	add    al,dl
   14000b221:	jnp    0x14000b223
   14000b223:	rex add DWORD PTR [rax],eax
	...
   14000b22e:	add    BYTE PTR [rax],al
   14000b230:	cs (bad) 
   14000b232:	push   r14
   14000b234:	(bad)  
   14000b235:	and    al,0x5f
   14000b237:	rex.RX jne 0x14000b2a8
   14000b23a:	movsxd ebx,DWORD PTR [rdi+0x69]
   14000b23d:	ins    DWORD PTR es:[rdi],dx
   14000b23e:	jo     0x14000b2ac
   14000b240:	rex push rbp
   14000b242:	(bad)  
   14000b243:	and    al,0x5f
   14000b245:	rex.XB (bad) 
   14000b247:	ins    BYTE PTR es:[rdi],dx
   14000b248:	ins    BYTE PTR es:[rdi],dx
   14000b249:	(bad)  
   14000b24a:	(bad)  
   14000b24b:	ins    BYTE PTR es:[rdi],dx
   14000b24c:	gs pop rdi
   14000b24e:	outs   dx,DWORD PTR ds:[rsi]
   14000b24f:	(bad)  
   14000b250:	push   0x40
   14000b252:	push   rax
   14000b253:	ss pop r8
   14000b256:	push   rax
   14000b257:	rex.RB
   14000b258:	push   r13
   14000b25a:	rex.WX
   14000b25b:	rex.WRX
   14000b25c:	rex.WB
   14000b25d:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000b25f:	jbe    0x14000b2c0
   14000b261:	rex
   14000b262:	rex
   14000b263:	rex pop rdx
   14000b265:	and    al,0x30
   14000b267:	rex.B
   14000b268:	rex
   14000b269:	rex jae 0x14000b2e0
   14000b26c:	fs rex
   14000b26e:	rex push rsi
   14000b270:	(bad)  
   14000b271:	and    al,0x61
   14000b273:	ins    BYTE PTR es:[rdi],dx
   14000b274:	ins    BYTE PTR es:[rdi],dx
   14000b275:	outs   dx,DWORD PTR ds:[rsi]
   14000b276:	movsxd esp,DWORD PTR [rcx+0x74]
   14000b279:	outs   dx,DWORD PTR ds:[rsi]
   14000b27a:	jb     0x14000b2bc
   14000b27c:	push   rsi
   14000b27d:	(bad)  
   14000b27e:	and    al,0x5f
   14000b280:	rex.RX jne 0x14000b2f1
   14000b283:	movsxd ebx,DWORD PTR [rdi+0x63]
   14000b286:	ins    BYTE PTR es:[rdi],dx
   14000b287:	(bad)  
   14000b288:	jae    0x14000b2fd
   14000b28a:	rex pop rax
   14000b28c:	push   rax
   14000b28d:	rex.RB
   14000b28e:	push   r13
   14000b290:	rex.WX
   14000b291:	rex.WRX
   14000b292:	rex.WB
   14000b293:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000b295:	jbe    0x14000b2f6
   14000b297:	rex
   14000b298:	rex
   14000b299:	rex jae 0x14000b310
   14000b29c:	fs rex
   14000b29e:	rex
   14000b29f:	xor    al,BYTE PTR [rax+0x58]
   14000b2a3:	push   rax
   14000b2a4:	rex.RB
   14000b2a5:	push   r13
   14000b2a7:	rex.WX
   14000b2a8:	rex.WRX
   14000b2a9:	rex.WB
   14000b2aa:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000b2ac:	jbe    0x14000b30d
   14000b2ae:	rex
   14000b2af:	rex
   14000b2b0:	rex jae 0x14000b327
   14000b2b3:	fs rex
   14000b2b5:	add    BYTE PTR [rax],al
   14000b2b8:	sar    BYTE PTR [rbx+0x0],1
   14000b2bb:	rex add DWORD PTR [rax],eax
	...
   14000b2c6:	add    BYTE PTR [rax],al
   14000b2c8:	cs (bad) 
   14000b2ca:	push   r14
   14000b2cc:	je     0x14000b347
   14000b2ce:	jo     0x14000b335
   14000b2d0:	pop    rdi
   14000b2d1:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
	...

Disassembly of section .pdata:

000000014000c000 <.pdata>:
   14000c000:	xor    BYTE PTR [rax],dl
   14000c002:	add    BYTE PTR [rax],al
   14000c004:	rex.RX adc BYTE PTR [rax],r8b
   14000c007:	add    BYTE PTR [rdx+rcx*4],al
   14000c00a:	add    BYTE PTR [rax],al
   14000c00c:	push   rax
   14000c00d:	adc    BYTE PTR [rax],al
   14000c00f:	add    BYTE PTR [rsi+0x10],ah
   14000c012:	add    BYTE PTR [rax],al
   14000c014:	or     al,0x8a
   14000c016:	add    BYTE PTR [rax],al
   14000c018:	jo     0x14000c02a
   14000c01a:	add    BYTE PTR [rax],al
   14000c01c:	xchg   BYTE PTR [rax],dl
   14000c01e:	add    BYTE PTR [rax],al
   14000c020:	cld    
   14000c021:	mov    DWORD PTR [rax],eax
   14000c023:	add    al,dl
   14000c025:	adc    BYTE PTR [rax],al
   14000c027:	add    BYTE PTR [rsi+0x18000011],ch
   14000c02d:	nop
   14000c02e:	add    BYTE PTR [rax],al
   14000c030:	rcl    BYTE PTR [rcx],0x0
   14000c033:	add    dl,bh
   14000c035:	adc    DWORD PTR [rax],eax
   14000c037:	add    al,al
   14000c039:	mov    eax,DWORD PTR [rax]
   14000c03b:	add    BYTE PTR [rax+0x12],ah
   14000c03e:	add    BYTE PTR [rax],al
   14000c040:	jae    0x14000c054
   14000c042:	add    BYTE PTR [rax],al
   14000c044:	call   0xc000c0d4
   14000c049:	adc    al,BYTE PTR [rax]
   14000c04b:	add    BYTE PTR [rdi-0x2fffffee],ah
   14000c051:	mov    eax,DWORD PTR [rax]
   14000c053:	add    BYTE PTR [rax-0x17ffffee],dh
   14000c059:	adc    al,BYTE PTR [rax]
   14000c05b:	add    BYTE PTR [rsp+rcx*4+0x0],dl
   14000c05f:	add    al,dh
   14000c061:	adc    al,BYTE PTR [rax]
   14000c063:	add    BYTE PTR [rbx],ah
   14000c065:	adc    eax,DWORD PTR [rax]
   14000c067:	add    BYTE PTR [rsp+rcx*4+0x0],cl
   14000c06b:	add    BYTE PTR [rax],dh
   14000c06d:	adc    eax,DWORD PTR [rax]
   14000c06f:	add    BYTE PTR [rbx+rdx*1-0x72780000],al
   14000c076:	add    BYTE PTR [rax],al
   14000c078:	nop
   14000c079:	adc    eax,DWORD PTR [rax]
   14000c07b:	add    ah,dh
   14000c07d:	adc    eax,DWORD PTR [rax]
   14000c07f:	add    BYTE PTR [rax],ch
   14000c081:	mov    es,WORD PTR [rax]
   14000c083:	add    BYTE PTR [rax],al
   14000c085:	adc    al,0x0
   14000c087:	add    BYTE PTR [rbx+0x3c000014],ch
   14000c08d:	mov    WORD PTR [rax],es
   14000c08f:	add    BYTE PTR [rax+0x5b000014],dh
   14000c095:	adc    eax,0x8bd80000
   14000c09a:	add    BYTE PTR [rax],al
   14000c09c:	(bad)  
   14000c09d:	adc    eax,0x16020000
   14000c0a2:	add    BYTE PTR [rax],al
   14000c0a4:	call   0x15000c135
   14000c0a9:	(bad)  
   14000c0aa:	add    BYTE PTR [rax],al
   14000c0ac:	scas   al,BYTE PTR es:[rdi]
   14000c0ad:	(bad)  
   14000c0ae:	add    BYTE PTR [rax],al
   14000c0b0:	mov    WORD PTR fs:[rax],es
   14000c0b3:	add    BYTE PTR [rax-0x39ffffea],dh
   14000c0b9:	(bad)  
   14000c0ba:	add    BYTE PTR [rax],al
   14000c0bc:	js     0x14000c04b
   14000c0be:	add    BYTE PTR [rax],al
   14000c0c0:	rcl    BYTE PTR [rsi],1
   14000c0c2:	add    BYTE PTR [rax],al
   14000c0c4:	loop   0x14000c0dc
   14000c0c6:	add    BYTE PTR [rax],al
   14000c0c8:	or     BYTE PTR [rbp+0x18100000],0x0
   14000c0cf:	add    BYTE PTR [rax+0x18],al
   14000c0d2:	add    BYTE PTR [rax],al
   14000c0d4:	enter  0x8e,0x0
   14000c0d8:	sbb    BYTE PTR [rax],al
   14000c0db:	add    BYTE PTR [rax+0x18],dh
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	test   al,0x8f
   14000c0e2:	add    BYTE PTR [rax],al
   14000c0e4:	jo     0x14000c0fe
   14000c0e6:	add    BYTE PTR [rax],al
   14000c0e8:	movabs al,ds:0xa000008f38000018
   14000c0f1:	sbb    BYTE PTR [rax],al
   14000c0f3:	add    dh,dl
   14000c0f5:	sbb    BYTE PTR [rax],al
   14000c0f7:	add    BYTE PTR [rax],al
   14000c0f9:	pop    QWORD PTR [rax]
   14000c0fb:	add    al,ah
   14000c0fd:	sbb    BYTE PTR [rax],al
   14000c0ff:	add    BYTE PTR [rsi],dl
   14000c101:	sbb    DWORD PTR [rax],eax
   14000c103:	add    al,ah
   14000c105:	pop    QWORD PTR [rax]
   14000c107:	add    BYTE PTR [rax],ah
   14000c109:	sbb    DWORD PTR [rax],eax
   14000c10b:	add    BYTE PTR [rsi+0x19],dl
   14000c10e:	add    BYTE PTR [rax],al
   14000c110:	jo     0x14000c0a1
   14000c112:	add    BYTE PTR [rax],al
   14000c114:	lock sbb DWORD PTR [rax],eax
   14000c117:	add    BYTE PTR [rbp+0x1a],al
   14000c11a:	add    BYTE PTR [rax],al
   14000c11c:	enter  0x8b,0x0
   14000c120:	push   rax
   14000c121:	sbb    al,BYTE PTR [rax]
   14000c123:	add    BYTE PTR [rbp+0x7000001a],ah
   14000c129:	lea    eax,[rax]
   14000c12b:	add    BYTE PTR [rax+0x500001a],dh
   14000c131:	sbb    eax,DWORD PTR [rax]
   14000c133:	add    BYTE PTR [rsp+rcx*4+0x0],bl
   14000c137:	add    al,dh
   14000c139:	sbb    eax,DWORD PTR [rax]
   14000c13b:	add    BYTE PTR [rbx],dl
   14000c13d:	sbb    al,0x0
   14000c13f:	add    BYTE PTR [rax-0x79],ah
   14000c142:	add    BYTE PTR [rax],al
   14000c144:	and    BYTE PTR [rax+rax*1],bl
   14000c147:	add    BYTE PTR [rdi+0x1c],ch
   14000c14a:	add    BYTE PTR [rax],al
   14000c14c:	push   0x70000087
   14000c151:	sbb    al,0x0
   14000c153:	add    BYTE PTR [rbx+0x4400001c],dl
   14000c159:	xchg   BYTE PTR [rax],al
   14000c15b:	add    BYTE PTR [rax-0x3cffffe4],ah
   14000c161:	sbb    al,0x0
   14000c163:	add    al,dl
   14000c165:	xchg   BYTE PTR [rax],al
   14000c167:	add    al,dl
   14000c169:	sbb    al,0x0
   14000c16b:	add    bl,dh
   14000c16d:	sbb    al,0x0
   14000c16f:	add    BYTE PTR [rax-0x79],bl
   14000c172:	add    BYTE PTR [rax],al
   14000c174:	and    BYTE PTR [rsi],bl
   14000c176:	add    BYTE PTR [rax],al
   14000c178:	cdq    
   14000c179:	(bad)  
   14000c17a:	add    BYTE PTR [rax],al
   14000c17c:	enter  0x81,0x0
   14000c180:	movabs al,ds:0xb800001ed100001e
   14000c189:	add    DWORD PTR [rax],0x1ee000
   14000c18f:	add    BYTE PTR [rdi+rbx*1],bl
   14000c192:	add    BYTE PTR [rax],al
   14000c194:	rol    BYTE PTR [rcx+0x1f200000],0x0
   14000c19b:	add    BYTE PTR [rcx+0x1f],ch
   14000c19e:	add    BYTE PTR [rax],al
   14000c1a0:	(bad)  
   14000c1a1:	test   BYTE PTR [rax],al
   14000c1a3:	add    BYTE PTR [rax+0x1f],dh
   14000c1a6:	add    BYTE PTR [rax],al
   14000c1a8:	mov    WORD PTR [rdi],ds
   14000c1aa:	add    BYTE PTR [rax],al
   14000c1ac:	sbb    al,0x89
   14000c1ae:	add    BYTE PTR [rax],al
   14000c1b0:	nop
   14000c1b1:	(bad)  
   14000c1b2:	add    BYTE PTR [rax],al
   14000c1b4:	mov    bl,0x1f
   14000c1b6:	add    BYTE PTR [rax],al
   14000c1b8:	adc    al,0x89
   14000c1ba:	add    BYTE PTR [rax],al
   14000c1bc:	rcr    BYTE PTR [rdi],0x0
   14000c1bf:	add    BYTE PTR [rax+riz*1],dh
   14000c1c2:	add    BYTE PTR [rax],al
   14000c1c4:	clc    
   14000c1c5:	mov    eax,DWORD PTR [rax]
   14000c1c7:	add    BYTE PTR [rax+0x20],al
   14000c1ca:	add    BYTE PTR [rax],al
   14000c1cc:	rex.RXB and DWORD PTR [r8],r8d
   14000c1cf:	add    BYTE PTR [rcx+rcx*4+0x0],al
   14000c1d3:	add    BYTE PTR [rax-0x26ffffdf],dh
   14000c1d9:	and    DWORD PTR [rax],eax
   14000c1db:	add    BYTE PTR [rax+rcx*4],al
   14000c1de:	add    BYTE PTR [rax],al
   14000c1e0:	adc    BYTE PTR [rdx],ah
   14000c1e2:	add    BYTE PTR [rax],al
   14000c1e4:	and    al,BYTE PTR [r8]
   14000c1e7:	add    al,ah
   14000c1e9:	add    DWORD PTR [rax],0x225000
   14000c1ef:	add    BYTE PTR [rdi+0x22],bh
   14000c1f2:	add    BYTE PTR [rax],al
   14000c1f4:	push   0xffffffff80000084
   14000c1f9:	and    al,BYTE PTR [rax]
   14000c1fb:	add    BYTE PTR [rcx+0x3c000022],ch
   14000c201:	mov    DWORD PTR [rax],eax
   14000c203:	add    BYTE PTR [rax+0x5000022],dh
   14000c209:	and    eax,DWORD PTR [rax]
   14000c20b:	add    al,dh
   14000c20d:	mov    eax,DWORD PTR [rax]
   14000c20f:	add    BYTE PTR [rax+0x23],dh
   14000c212:	add    BYTE PTR [rax],al
   14000c214:	xlat   BYTE PTR ds:[rbx]
   14000c215:	and    eax,DWORD PTR [rax]
   14000c217:	add    al,bh
   14000c219:	xchg   DWORD PTR [rax],eax
   14000c21b:	add    al,ah
   14000c21d:	and    eax,DWORD PTR [rax]
   14000c21f:	add    BYTE PTR [rsp],bh
   14000c222:	add    BYTE PTR [rax],al
   14000c224:	or     al,0x88
   14000c226:	add    BYTE PTR [rax],al
   14000c228:	and    al,0x0
   14000c22b:	add    BYTE PTR [rbx+0x24],ah
   14000c22e:	add    BYTE PTR [rax],al
   14000c230:	call   0x1b000c2b6
   14000c235:	and    al,0x0
   14000c237:	add    bh,dl
   14000c239:	and    al,0x0
   14000c23b:	add    BYTE PTR [rax],dh
   14000c23d:	mov    DWORD PTR [rax],eax
   14000c23f:	add    al,ah
   14000c241:	and    al,0x0
   14000c243:	add    BYTE PTR ds:0xffffffff89240000,bh
   14000c24a:	add    BYTE PTR [rax],al
   14000c24c:	rex and eax,0x26370000
   14000c252:	add    BYTE PTR [rax],al
   14000c254:	mov    al,0x89
   14000c256:	add    BYTE PTR [rax],al
   14000c258:	shl    BYTE PTR [rdi],0x0
   14000c25b:	add    cl,bl
   14000c25d:	(bad)  
   14000c25e:	add    BYTE PTR [rax],al
   14000c260:	sub    al,0x86
   14000c262:	add    BYTE PTR [rax],al
   14000c264:	loopne 0x14000c28d
   14000c266:	add    BYTE PTR [rax],al
   14000c268:	add    al,0x28
   14000c26a:	add    BYTE PTR [rax],al
   14000c26c:	int3   
   14000c26d:	mov    DWORD PTR [rax],eax
   14000c26f:	add    BYTE PTR [rax+rbp*1],al
   14000c272:	add    BYTE PTR [rax],al
   14000c274:	xor    DWORD PTR [rax],ebp
   14000c276:	add    BYTE PTR [rax],al
   14000c278:	fmul   DWORD PTR [rcx+0x28310000]
   14000c27e:	add    BYTE PTR [rax],al
   14000c280:	push   rdx
   14000c281:	sub    BYTE PTR [rax],al
   14000c283:	add    ah,ch
   14000c285:	mov    DWORD PTR [rax],eax
   14000c287:	add    BYTE PTR [rax+0x28],ah
   14000c28a:	add    BYTE PTR [rax],al
   14000c28c:	shr    DWORD PTR [rax],1
   14000c28e:	add    BYTE PTR [rax],al
   14000c290:	xor    BYTE PTR [rax+rax*1+0x28e000],cl
   14000c297:	add    BYTE PTR [rdi],cl
   14000c299:	sub    DWORD PTR [rax],eax
   14000c29b:	add    al,al
   14000c29d:	mov    DWORD PTR [rax],eax
   14000c29f:	add    BYTE PTR [rax],dl
   14000c2a1:	sub    DWORD PTR [rax],eax
   14000c2a3:	add    BYTE PTR [rsi],dh
   14000c2a5:	sub    DWORD PTR [rax],eax
   14000c2a7:	add    BYTE PTR [rax],bl
   14000c2a9:	test   BYTE PTR [rax],al
   14000c2ab:	add    BYTE PTR [rax+0x29],al
   14000c2ae:	add    BYTE PTR [rax],al
   14000c2b0:	sub    WORD PTR [rax],ax
   14000c2b3:	add    BYTE PTR [rax],ch
   14000c2b5:	test   BYTE PTR [rax],al
   14000c2b7:	add    BYTE PTR [rax+0x29],dh
   14000c2ba:	add    BYTE PTR [rax],al
   14000c2bc:	xchg   esi,eax
   14000c2bd:	sub    DWORD PTR [rax],eax
   14000c2bf:	add    BYTE PTR [rax-0x7c],cl
   14000c2c2:	add    BYTE PTR [rax],al
   14000c2c4:	movabs al,ds:0x4000029c6000029
   14000c2cd:	test   BYTE PTR [rax],al
   14000c2cf:	add    BYTE PTR [rax+0x2a],al
   14000c2d2:	add    BYTE PTR [rax],al
   14000c2d4:	test   al,0x2a
   14000c2d6:	add    BYTE PTR [rax],al
   14000c2d8:	(bad)  
   14000c2d9:	add    DWORD PTR [rax],0x2ab000
   14000c2df:	add    dh,bh
   14000c2e1:	sub    al,BYTE PTR [rax]
   14000c2e3:	add    BYTE PTR [rsi+rax*4+0x0],cl
   14000c2e7:	add    BYTE PTR [rax],al
   14000c2e9:	sub    eax,DWORD PTR [rax]
   14000c2eb:	add    BYTE PTR [rbp+0x2b],bl
   14000c2ee:	add    BYTE PTR [rax],al
   14000c2f0:	fadd   DWORD PTR [rsi+0x2b900000]
   14000c2f6:	add    BYTE PTR [rax],al
   14000c2f8:	xchg   edx,eax
   14000c2f9:	sub    al,0x0
   14000c2fb:	add    BYTE PTR [rax-0x7e],bh
   14000c2fe:	add    BYTE PTR [rax],al
   14000c300:	movabs al,ds:0xa800002dbc00002c
   14000c309:	test   BYTE PTR [rax],al
   14000c30b:	add    BYTE PTR [rax],al
   14000c30d:	add    BYTE PTR cs:[rax],al
   14000c310:	(bad)  
   14000c311:	add    BYTE PTR cs:[rax],al
   14000c314:	movabs al,ds:0x9500002e1e000088
   14000c31d:	add    BYTE PTR cs:[rax],al
   14000c320:	mov    al,0x88
   14000c322:	add    BYTE PTR [rax],al
   14000c324:	xchg   ebp,eax
   14000c325:	add    BYTE PTR cs:[rax],al
   14000c328:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c329:	add    BYTE PTR cs:[rax],al
   14000c32c:	(bad)  
   14000c32d:	mov    BYTE PTR [rax],al
   14000c32f:	add    BYTE PTR [rax],dl
   14000c331:	(bad)  
   14000c332:	add    BYTE PTR [rax],al
   14000c334:	pop    rdx
   14000c335:	(bad)  
   14000c336:	add    BYTE PTR [rax],al
   14000c338:	add    DWORD PTR fs:[rax],0x0
   14000c33c:	pop    rdx
   14000c33d:	(bad)  
   14000c33e:	add    BYTE PTR [rax],al
   14000c340:	jo     0x14000c371
   14000c342:	add    BYTE PTR [rax],al
   14000c344:	je     0x14000c2c9
   14000c346:	add    BYTE PTR [rax],al
   14000c348:	jo     0x14000c379
   14000c34a:	add    BYTE PTR [rax],al
   14000c34c:	xchg   ebp,eax
   14000c34d:	(bad)  
   14000c34e:	add    BYTE PTR [rax],al
   14000c350:	mov    BYTE PTR [rbx+0x2f950000],al
   14000c356:	add    BYTE PTR [rax],al
   14000c358:	lods   al,BYTE PTR ds:[rsi]
   14000c359:	(bad)  
   14000c35a:	add    BYTE PTR [rax],al
   14000c35c:	pushf  
   14000c35d:	add    DWORD PTR [rax],0x0
   14000c360:	lods   al,BYTE PTR ds:[rsi]
   14000c361:	(bad)  
   14000c362:	add    BYTE PTR [rax],al
   14000c364:	xlat   BYTE PTR ds:[rbx]
   14000c365:	(bad)  
   14000c366:	add    BYTE PTR [rax],al
   14000c368:	lods   al,BYTE PTR ds:[rsi]
   14000c369:	add    DWORD PTR [rax],0x0
   14000c36c:	loopne 0x14000c39d
   14000c36e:	add    BYTE PTR [rax],al
   14000c370:	xor    esi,DWORD PTR [rax]
   14000c372:	add    BYTE PTR [rax],al
   14000c374:	xchg   esp,eax
   14000c375:	test   DWORD PTR [rax],eax
   14000c377:	add    BYTE PTR [rbx],dh
   14000c379:	xor    BYTE PTR [rax],al
   14000c37b:	add    BYTE PTR [rcx+0x30],cl
   14000c37e:	add    BYTE PTR [rax],al
   14000c380:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c381:	test   DWORD PTR [rax],eax
   14000c383:	add    BYTE PTR [rcx+0x30],cl
   14000c386:	add    BYTE PTR [rax],al
   14000c388:	outs   dx,DWORD PTR ds:[rsi]
   14000c389:	xor    BYTE PTR [rax],al
   14000c38b:	add    BYTE PTR [rax+0x6f000085],bh
   14000c391:	xor    BYTE PTR [rax],al
   14000c393:	add    BYTE PTR [rdi-0x33ffffd0],al
   14000c399:	test   DWORD PTR [rax],eax
   14000c39b:	add    BYTE PTR [rdi-0x4dffffd0],al
   14000c3a1:	xor    BYTE PTR [rax],al
   14000c3a3:	add    ah,bl
   14000c3a5:	test   DWORD PTR [rax],eax
   14000c3a7:	add    BYTE PTR [rax+0x31],dh
   14000c3aa:	add    BYTE PTR [rax],al
   14000c3ac:	lea    esi,[rcx]
   14000c3ae:	add    BYTE PTR [rax],al
   14000c3b0:	(bad)  
   14000c3b1:	mov    BYTE PTR [rax],al
   14000c3b3:	add    BYTE PTR [rbp+0x13000031],cl
   14000c3b9:	xor    al,BYTE PTR [rax]
   14000c3bb:	add    al,ah
   14000c3bd:	mov    BYTE PTR [rax],al
   14000c3bf:	add    BYTE PTR [rbx],dl
   14000c3c1:	xor    al,BYTE PTR [rax]
   14000c3c3:	add    BYTE PTR [rdi],bl
   14000c3c5:	xor    al,BYTE PTR [rax]
   14000c3c7:	add    ah,bh
   14000c3c9:	mov    BYTE PTR [rax],al
   14000c3cb:	add    BYTE PTR [rax],dl
   14000c3cd:	xor    al,0x0
   14000c3cf:	add    BYTE PTR [rsp+rsi*1],ch
   14000c3d2:	add    BYTE PTR [rax],al
   14000c3d4:	or     al,0x89
   14000c3d6:	add    BYTE PTR [rax],al
   14000c3d8:	xor    BYTE PTR [rax+rax*1],dh
   14000c3db:	add    BYTE PTR [rbx+0x34],cl
   14000c3de:	add    BYTE PTR [rax],al
   14000c3e0:	mov    esp,0x4b000083
   14000c3e5:	xor    al,0x0
   14000c3e7:	add    BYTE PTR [rbp+0x34],ch
   14000c3ea:	add    BYTE PTR [rax],al
   14000c3ec:	enter  0x83,0x0
   14000c3f0:	ins    DWORD PTR es:[rdi],dx
   14000c3f1:	xor    al,0x0
   14000c3f3:	add    BYTE PTR [rax-0x23ffffcc],cl
   14000c3f9:	add    DWORD PTR [rax],0x0
   14000c3fc:	nop
   14000c3fd:	xor    al,0x0
   14000c3ff:	add    BYTE PTR [rbx-0x13ffffcc],ch
   14000c405:	test   DWORD PTR [rax],eax
   14000c407:	add    BYTE PTR [rbx-0x2fffffcc],ch
   14000c40d:	xor    al,0x0
   14000c40f:	add    al,bh
   14000c411:	test   DWORD PTR [rax],eax
   14000c413:	add    al,dl
   14000c415:	xor    al,0x0
   14000c417:	add    ch,ch
   14000c419:	xor    al,0x0
   14000c41b:	add    BYTE PTR [rsi+rax*4],cl
   14000c41e:	add    BYTE PTR [rax],al
   14000c420:	lock xor al,0x0
   14000c423:	add    BYTE PTR [rdx],al
   14000c425:	xor    eax,0x83ec0000
   14000c42a:	add    BYTE PTR [rax],al
   14000c42c:	adc    BYTE PTR [rip+0x35220000],dh        # 0x17522c432
   14000c432:	add    BYTE PTR [rax],al
   14000c434:	sbb    al,0x86
   14000c436:	add    BYTE PTR [rax],al
   14000c438:	xor    BYTE PTR [rip+0x35420000],dh        # 0x17542c43e
   14000c43e:	add    BYTE PTR [rax],al
   14000c440:	hlt    
   14000c441:	add    DWORD PTR [rax],0x0
   14000c444:	push   rax
   14000c445:	xor    eax,0x35620000
   14000c44a:	add    BYTE PTR [rax],al
   14000c44c:	and    al,0x86
   14000c44e:	add    BYTE PTR [rax],al
   14000c450:	jo     0x14000c487
   14000c452:	add    BYTE PTR [rax],al
   14000c454:	(bad)  
   14000c455:	xor    eax,0x81b00000
   14000c45a:	add    BYTE PTR [rax],al
   14000c45c:	movabs al,ds:0x3c000035d8000035
   14000c465:	xchg   BYTE PTR [rax],al
   14000c467:	add    al,ah
   14000c469:	xor    eax,0x36140000
   14000c46e:	add    BYTE PTR [rax],al
   14000c470:	pop    rax
   14000c471:	test   BYTE PTR [rax],al
   14000c473:	add    BYTE PTR [rax],ah
   14000c475:	add    BYTE PTR ss:[rax],al
   14000c478:	rex.WX
   14000c479:	add    BYTE PTR ss:[rax],al
   14000c47c:	test   al,0x81
   14000c47e:	add    BYTE PTR [rax],al
   14000c480:	push   rax
   14000c481:	add    BYTE PTR ss:[rax],al
   14000c484:	mov    BYTE PTR [rsi],dh
   14000c486:	add    BYTE PTR [rax],al
   14000c488:	xor    al,0x86
   14000c48a:	add    BYTE PTR [rax],al
   14000c48c:	nop
   14000c48d:	add    BYTE PTR ss:[rax],al
   14000c490:	(bad)  
   14000c491:	add    BYTE PTR ss:[rax],al
   14000c494:	push   rax
   14000c495:	test   BYTE PTR [rax],al
   14000c497:	add    al,ah
   14000c499:	add    BYTE PTR ss:[rax],al
   14000c49c:	add    bh,BYTE PTR [rax]
   14000c49e:	add    BYTE PTR [rax],al
   14000c4a0:	lock add DWORD PTR [rax],0x383000
   14000c4a7:	add    BYTE PTR [rdi+0x39],bl
   14000c4aa:	add    BYTE PTR [rax],al
   14000c4ac:	add    al,0x82
   14000c4ae:	add    BYTE PTR [rax],al
   14000c4b0:	(bad)  
   14000c4b1:	cmp    DWORD PTR [rax],eax
   14000c4b3:	add    BYTE PTR [rdx+0x7000003a],bl
   14000c4b9:	test   BYTE PTR [rax],al
   14000c4bb:	add    al,dl
   14000c4bd:	cmp    al,BYTE PTR [rax]
   14000c4bf:	add    BYTE PTR [rdi],dl
   14000c4c1:	cmp    al,0x0
   14000c4c3:	add    BYTE PTR [rsp+rax*4+0x3c800000],al
   14000c4ca:	add    BYTE PTR [rax],al
   14000c4cc:	mov    bh,0x3c
   14000c4ce:	add    BYTE PTR [rax],al
   14000c4d0:	jl     0x14000c45a
   14000c4d2:	add    BYTE PTR [rax],al
   14000c4d4:	sar    BYTE PTR [rax+rax*1],0x0
   14000c4d8:	cmp    bh,BYTE PTR [rip+0xffffffff82280000]        # 0xc228c4de
   14000c4de:	add    BYTE PTR [rax],al
   14000c4e0:	rex cmp eax,0x3d720000
   14000c4e6:	add    BYTE PTR [rax],al
   14000c4e8:	cmp    BYTE PTR [rdx+0x3d800000],al
   14000c4ee:	add    BYTE PTR [rax],al
   14000c4f0:	movabs ds:0xa30000824000003d,eax
   14000c4f9:	cmp    eax,0x3e020000
   14000c4fe:	add    BYTE PTR [rax],al
   14000c500:	rex.W (bad) 
   14000c502:	add    BYTE PTR [rax],al
   14000c504:	add    bh,BYTE PTR [rsi]
   14000c506:	add    BYTE PTR [rax],al
   14000c508:	sbb    BYTE PTR [rsi],bh
   14000c50a:	add    BYTE PTR [rax],al
   14000c50c:	(bad)  
   14000c50d:	(bad)  
   14000c50e:	add    BYTE PTR [rax],al
   14000c510:	xor    BYTE PTR [rsi],bh
   14000c512:	add    BYTE PTR [rax],al
   14000c514:	rex.WR
   14000c515:	add    BYTE PTR ds:[rax],al
   14000c518:	movabs al,ds:0x6f00003e50000081
   14000c521:	add    BYTE PTR ds:[rax],al
   14000c524:	cwde   
   14000c525:	add    DWORD PTR [rax],0x3ed000
   14000c52b:	add    BYTE PTR [rax],dl
   14000c52d:	(bad)  
   14000c52e:	add    BYTE PTR [rax],al
   14000c530:	cmp    al,0x84
   14000c532:	add    BYTE PTR [rax],al
   14000c534:	push   rax
   14000c535:	(bad)  
   14000c536:	add    BYTE PTR [rax],al
   14000c538:	xchg   DWORD PTR [rdi],edi
   14000c53a:	add    BYTE PTR [rax],al
   14000c53c:	cld    
   14000c53d:	add    DWORD PTR [rax],0x0
   14000c540:	nop
   14000c541:	(bad)  
   14000c542:	add    BYTE PTR [rax],al
   14000c544:	mov    al,BYTE PTR [rax+0x0]
   14000c547:	add    BYTE PTR [rax-0x78],dh
   14000c54a:	add    BYTE PTR [rax],al
   14000c54c:	nop
   14000c54d:	add    BYTE PTR [rax],al
   14000c550:	movabs ds:0xa200008818000040,al
   14000c559:	add    BYTE PTR [rax],al
   14000c55c:	adc    eax,DWORD PTR [rcx+0x0]
   14000c55f:	add    BYTE PTR [rax+rcx*4],ah
   14000c562:	add    BYTE PTR [rax],al
   14000c564:	adc    eax,DWORD PTR [rcx+0x0]
   14000c567:	add    BYTE PTR [rdx],ch
   14000c569:	add    BYTE PTR [rax],r8b
   14000c56c:	cmp    al,0x88
   14000c56e:	add    BYTE PTR [rax],al
   14000c570:	sub    al,BYTE PTR [rax+rax*1+0x0]
   14000c574:	jle    0x14000c5ba
   14000c576:	add    BYTE PTR [rax],al
   14000c578:	push   rax
   14000c579:	mov    BYTE PTR [rax],al
   14000c57b:	add    BYTE PTR [rsi+0x44],bh
   14000c57e:	add    BYTE PTR [rax],al
   14000c580:	cdq    
   14000c581:	add    BYTE PTR [rax],r8b
   14000c584:	(bad)  
   14000c585:	mov    BYTE PTR [rax],al
   14000c587:	add    BYTE PTR [rax+0x69000044],ah
   14000c58d:	add    BYTE PTR [r8],r8b
   14000c590:	sbb    al,0x82
   14000c592:	add    BYTE PTR [rax],al
   14000c594:	jo     0x14000c5db
   14000c596:	add    BYTE PTR [rax],al
   14000c598:	scas   al,BYTE PTR es:[rdi]
   14000c599:	add    BYTE PTR [r8],r8b
   14000c59c:	adc    al,0x82
   14000c59e:	add    BYTE PTR [rax],al
   14000c5a0:	mov    al,0x45
   14000c5a2:	add    BYTE PTR [rax],al
   14000c5a4:	pop    rbx
   14000c5a5:	rex.RX add BYTE PTR [rax],r8b
   14000c5a8:	pushf  
   14000c5a9:	test   BYTE PTR [rax],al
   14000c5ab:	add    BYTE PTR [rax+0x46],ah
   14000c5ae:	add    BYTE PTR [rax],al
   14000c5b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c5b1:	rex.RX add BYTE PTR [rax],r8b
   14000c5b4:	xchg   esp,eax
   14000c5b5:	test   BYTE PTR [rax],al
   14000c5b7:	add    BYTE PTR [rax+0x1f000046],dh
   14000c5bd:	rex.RXB add BYTE PTR [r8],r8b
   14000c5c0:	test   BYTE PTR [rax+0x47900000],cl
   14000c5c6:	add    BYTE PTR [rax],al
   14000c5c8:	lods   eax,DWORD PTR ds:[rsi]
   14000c5c9:	rex.RXB add BYTE PTR [r8],r8b
   14000c5cc:	cwde   
   14000c5cd:	mov    BYTE PTR [rax],al
   14000c5cf:	add    BYTE PTR [rax],dh
   14000c5d1:	rex.W add BYTE PTR [rax],al
   14000c5d4:	xchg   edx,eax
   14000c5d5:	rex.W add BYTE PTR [rax],al
   14000c5d8:	or     al,0x84
   14000c5da:	add    BYTE PTR [rax],al
   14000c5dc:	movabs al,ds:0x20000048ed000048
   14000c5e5:	test   BYTE PTR [rax],al
   14000c5e7:	add    al,dh
   14000c5e9:	rex.W add BYTE PTR [rax],al
   14000c5ec:	push   rdx
   14000c5ed:	rex.WB add BYTE PTR [r8],al
   14000c5f0:	xor    BYTE PTR [rax+rax*1+0x4a9000],al
   14000c5f7:	add    BYTE PTR [rbx+0x1400004f],bl
   14000c5fd:	mov    al,BYTE PTR [rax]
   14000c5ff:	add    BYTE PTR [rax-0x45ffffb1],ah
   14000c605:	rex.WRXB add BYTE PTR [r8],r8b
   14000c608:	nop
   14000c609:	add    DWORD PTR [rax],0x4ff000
   14000c60f:	add    BYTE PTR [rdx],ch
   14000c611:	push   rax
   14000c612:	add    BYTE PTR [rax],al
   14000c614:	(bad)  
   14000c615:	xchg   edx,eax
   14000c616:	add    BYTE PTR [rax],al
   14000c618:	push   rax
   14000c619:	push   rax
   14000c61a:	add    BYTE PTR [rax],al
   14000c61c:	mov    BYTE PTR [rax+0x0],dl
   14000c61f:	add    ah,al
   14000c621:	xchg   edx,eax
   14000c622:	add    BYTE PTR [rax],al
   14000c624:	adc    BYTE PTR [rdx+0x0],0x0
   14000c628:	jmp    0x14000c67c
   14000c62a:	add    BYTE PTR [rax],al
   14000c62c:	nop
   14000c62d:	xchg   ecx,eax
   14000c62e:	add    BYTE PTR [rax],al
   14000c630:	add    BYTE PTR [rbx+0x0],dl
   14000c633:	add    BYTE PTR [rbx+rdx*2],ch
   14000c636:	add    BYTE PTR [rax],al
   14000c638:	xchg   rdx,rax
   14000c63a:	add    BYTE PTR [rax],al
   14000c63c:	rex push rbx
   14000c63e:	add    BYTE PTR [rax],al
   14000c640:	mov    DWORD PTR [rbx+0x0],edx
   14000c643:	add    BYTE PTR [rax-0x6e],bl
   14000c646:	add    BYTE PTR [rax],al
   14000c648:	nop
   14000c649:	push   rbx
   14000c64a:	add    BYTE PTR [rax],al
   14000c64c:	rcl    DWORD PTR [rbx+0x0],cl
   14000c64f:	add    al,cl
   14000c651:	xchg   ecx,eax
   14000c652:	add    BYTE PTR [rax],al
   14000c654:	loopne 0x14000c6a9
   14000c656:	add    BYTE PTR [rax],al
   14000c658:	add    al,0x54
   14000c65a:	add    BYTE PTR [rax],al
   14000c65c:	loopne 0x14000c5ef
   14000c65e:	add    BYTE PTR [rax],al
   14000c660:	add    al,0x54
   14000c662:	add    BYTE PTR [rax],al
   14000c664:	xor    DWORD PTR [rax+rax*1+0x0],edx
   14000c668:	in     al,dx
   14000c669:	xchg   ecx,eax
   14000c66a:	add    BYTE PTR [rax],al
   14000c66c:	xor    DWORD PTR [rax+rax*1+0x0],edx
   14000c670:	push   rdx
   14000c671:	push   rsp
   14000c672:	add    BYTE PTR [rax],al
   14000c674:	add    BYTE PTR [rdx+0x54600000],dl
   14000c67a:	add    BYTE PTR [rax],al
   14000c67c:	xchg   BYTE PTR [rax+rax*1+0x0],dl
   14000c680:	nop
   14000c681:	xchg   edx,eax
   14000c682:	add    BYTE PTR [rax],al
   14000c684:	nop
   14000c685:	push   rsp
   14000c686:	add    BYTE PTR [rax],al
   14000c688:	mov    dh,0x54
   14000c68a:	add    BYTE PTR [rax],al
   14000c68c:	mov    esp,0xc0000092
   14000c691:	push   rsp
   14000c692:	add    BYTE PTR [rax],al
   14000c694:	out    dx,eax
   14000c695:	push   rsp
   14000c696:	add    BYTE PTR [rax],al
   14000c698:	(bad)  
   14000c699:	xchg   ecx,eax
   14000c69a:	add    BYTE PTR [rax],al
   14000c69c:	lock push rsp
   14000c69e:	add    BYTE PTR [rax],al
   14000c6a0:	adc    DWORD PTR [rbp+0x0],edx
   14000c6a3:	add    BYTE PTR [rax+rdx*4],ch
   14000c6a6:	add    BYTE PTR [rax],al
   14000c6a8:	(bad)  
   14000c6a9:	push   rbp
   14000c6aa:	add    BYTE PTR [rax],al
   14000c6ac:	movabs al,ds:0xa000009298000055
   14000c6b5:	push   rbp
   14000c6b6:	add    BYTE PTR [rax],al
   14000c6b8:	iret   
   14000c6b9:	push   rbp
   14000c6ba:	add    BYTE PTR [rax],al
   14000c6bc:	test   al,0x92
   14000c6be:	add    BYTE PTR [rax],al
   14000c6c0:	and    BYTE PTR [rsi+0x0],dl
   14000c6c3:	add    BYTE PTR [rax+0x56],ah
   14000c6c6:	add    BYTE PTR [rax],al
   14000c6c8:	movabs al,ds:0xac00005680000092
   14000c6d1:	push   rsi
   14000c6d2:	add    BYTE PTR [rax],al
   14000c6d4:	push   rax
   14000c6d5:	xchg   edx,eax
   14000c6d6:	add    BYTE PTR [rax],al
   14000c6d8:	mov    al,0x56
   14000c6da:	add    BYTE PTR [rax],al
   14000c6dc:	call   0xf400c737
   14000c6e1:	xchg   edx,eax
   14000c6e2:	add    BYTE PTR [rax],al
   14000c6e4:	lock push rsi
   14000c6e6:	add    BYTE PTR [rax],al
   14000c6e8:	mov    dl,BYTE PTR [rdi+0x0]
   14000c6eb:	add    BYTE PTR [rax],dl
   14000c6ed:	xchg   edx,eax
   14000c6ee:	add    BYTE PTR [rax],al
   14000c6f0:	movabs al,ds:0x8800005972000057
   14000c6f9:	nop
   14000c6fa:	add    BYTE PTR [rax],al
   14000c6fc:	sbb    BYTE PTR [rcx+0x0],0x0
   14000c700:	xor    bl,BYTE PTR [rdx+0x0]
   14000c703:	add    BYTE PTR [rax+rdx*4],dh
   14000c706:	add    BYTE PTR [rax],al
   14000c708:	rex pop rdx
   14000c70a:	add    BYTE PTR [rax],al
   14000c70c:	sbb    BYTE PTR [rbx+0x0],0x0
   14000c710:	push   rax
   14000c711:	xchg   ecx,eax
   14000c712:	add    BYTE PTR [rax],al
   14000c714:	sbb    al,0x5c
   14000c716:	add    BYTE PTR [rax],al
   14000c718:	jns    0x14000c776
   14000c71a:	add    BYTE PTR [rax],al
   14000c71c:	int3   
   14000c71d:	xchg   edx,eax
   14000c71e:	add    BYTE PTR [rax],al
   14000c720:	jl     0x14000c77e
   14000c722:	add    BYTE PTR [rax],al
   14000c724:	cwde   
   14000c725:	pop    rsp
   14000c726:	add    BYTE PTR [rax],al
   14000c728:	sub    al,0x93
   14000c72a:	add    BYTE PTR [rax],al
   14000c72c:	cwde   
   14000c72d:	pop    rsp
   14000c72e:	add    BYTE PTR [rax],al
   14000c730:	loop   0x14000c78e
   14000c732:	add    BYTE PTR [rax],al
   14000c734:	cld    
   14000c735:	xchg   edx,eax
   14000c736:	add    BYTE PTR [rax],al
   14000c738:	hlt    
   14000c739:	pop    rsp
   14000c73a:	add    BYTE PTR [rax],al
   14000c73c:	rex.X pop rbp
   14000c73e:	add    BYTE PTR [rax],al
   14000c740:	fs xchg ebx,eax
   14000c742:	add    BYTE PTR [rax],al
   14000c744:	rex.R pop rbp
   14000c746:	add    BYTE PTR [rax],al
   14000c748:	hlt    
   14000c749:	pop    rbp
   14000c74a:	add    BYTE PTR [rax],al
   14000c74c:	cmp    al,0x93
   14000c74e:	add    BYTE PTR [rax],al
   14000c750:	hlt    
   14000c751:	pop    rbp
   14000c752:	add    BYTE PTR [rax],al
   14000c754:	or     ebx,DWORD PTR [rsi+0x0]
   14000c757:	add    BYTE PTR [rbx+rdx*4],dh
   14000c75a:	add    BYTE PTR [rax],al
   14000c75c:	pop    rsp
   14000c75d:	pop    rsi
   14000c75e:	add    BYTE PTR [rax],al
   14000c760:	(bad)  
   14000c761:	pop    rsi
   14000c762:	add    BYTE PTR [rax],al
   14000c764:	ins    BYTE PTR es:[rdi],dx
   14000c765:	xchg   ebx,eax
   14000c766:	add    BYTE PTR [rax],al
   14000c768:	fcomp  DWORD PTR [rsi+0x0]
   14000c76b:	add    BYTE PTR [rsi+0x7c00005f],ah
   14000c771:	xchg   ebx,eax
   14000c772:	add    BYTE PTR [rax],al
   14000c774:	test   al,0x5f
   14000c776:	add    BYTE PTR [rax],al
   14000c778:	or     esp,DWORD PTR [rax+0x0]
   14000c77b:	add    BYTE PTR [rbx+rdx*4+0x60180000],al
   14000c782:	add    BYTE PTR [rax],al
   14000c784:	mov    BYTE PTR [rcx+0x0],ah
   14000c787:	add    BYTE PTR [rbx+rdx*4+0x61d40000],cl
   14000c78e:	add    BYTE PTR [rax],al
   14000c790:	out    0x61,al
   14000c792:	add    BYTE PTR [rax],al
   14000c794:	mov    ah,0x93
   14000c796:	add    BYTE PTR [rax],al
   14000c798:	or     al,0x62
   14000c79a:	add    BYTE PTR [rax],al
   14000c79c:	rex.R (bad) 
   14000c79e:	add    BYTE PTR [rax],al
   14000c7a0:	mov    esp,0x44000093
   14000c7a5:	(bad)  
   14000c7a6:	add    BYTE PTR [rax],al
   14000c7a8:	pop    rbx
   14000c7a9:	(bad)  
   14000c7aa:	add    BYTE PTR [rax],al
   14000c7ac:	(bad)  
   14000c7ad:	xchg   ebx,eax
   14000c7ae:	add    BYTE PTR [rax],al
   14000c7b0:	shl    BYTE PTR [rdx+0x0],1
   14000c7b3:	add    BYTE PTR [rip+0xffffffffcc000063],bl        # 0x10c00c81c
   14000c7b9:	xchg   ebx,eax
   14000c7ba:	add    BYTE PTR [rax],al
   14000c7bc:	pop    rsp
   14000c7bd:	movsxd eax,DWORD PTR [rax]
   14000c7bf:	add    BYTE PTR [rax],cl
   14000c7c1:	add    BYTE PTR fs:[rax],al
   14000c7c4:	clc    
   14000c7c5:	xchg   ebx,eax
   14000c7c6:	add    BYTE PTR [rax],al
   14000c7c8:	or     al,0x64
   14000c7ca:	add    BYTE PTR [rax],al
   14000c7cc:	rex.R
   14000c7cd:	add    BYTE PTR fs:[rax],al
   14000c7d0:	add    al,0x94
   14000c7d2:	add    BYTE PTR [rax],al
   14000c7d4:	rex.R
   14000c7d5:	add    BYTE PTR fs:[rax],al
   14000c7d8:	jl     0x14000c83e
   14000c7da:	add    BYTE PTR [rax],al
   14000c7dc:	adc    BYTE PTR [rax+rax*1+0x64d000],dl
   14000c7e3:	add    ah,ch
   14000c7e5:	add    BYTE PTR fs:[rax],al
   14000c7e8:	adc    BYTE PTR [rsi+0x64ec0000],cl
   14000c7ee:	add    BYTE PTR [rax],al
   14000c7f0:	or     al,0x65
   14000c7f2:	add    BYTE PTR [rax],al
   14000c7f4:	sbb    BYTE PTR [rsi+0x65100000],cl
   14000c7fa:	add    BYTE PTR [rax],al
   14000c7fc:	sub    al,0x65
   14000c7fe:	add    BYTE PTR [rax],al
   14000c800:	mov    al,0x8e
   14000c802:	add    BYTE PTR [rax],al
   14000c804:	sub    al,0x65
   14000c806:	add    BYTE PTR [rax],al
   14000c808:	rex.WR
   14000c809:	add    BYTE PTR gs:[rax],al
   14000c80c:	mov    eax,0x5000008e
   14000c811:	add    BYTE PTR gs:[rax],al
   14000c814:	je     0x14000c87b
   14000c816:	add    BYTE PTR [rax],al
   14000c818:	(bad)  
   14000c819:	lea    eax,[rax]
   14000c81b:	add    BYTE PTR [rax-0x5bffff9b],al
   14000c821:	add    BYTE PTR gs:[rax],al
   14000c824:	fmul   DWORD PTR [rax+rax*1+0x65b000]
   14000c82b:	add    ah,cl
   14000c82d:	add    BYTE PTR gs:[rax],al
   14000c830:	clc    
   14000c831:	mov    es,WORD PTR [rax]
   14000c833:	add    al,dl
   14000c835:	add    BYTE PTR gs:[rax],al
   14000c838:	in     al,dx
   14000c839:	add    BYTE PTR gs:[rax],al
   14000c83c:	fmul   DWORD PTR [rdi+0x65f00000]
   14000c842:	add    BYTE PTR [rax],al
   14000c844:	or     al,0x66
   14000c846:	add    BYTE PTR [rax],al
   14000c848:	push   0x1000008f
   14000c84d:	data16 add BYTE PTR [rax],al
   14000c850:	sub    al,0x66
   14000c852:	add    BYTE PTR [rax],al
   14000c854:	xor    BYTE PTR [rdi+0x66300000],cl
   14000c85a:	add    BYTE PTR [rax],al
   14000c85c:	rex.WR
   14000c85d:	data16 add BYTE PTR [rax],al
   14000c860:	adc    BYTE PTR [rax+0x66500000],dl
   14000c866:	add    BYTE PTR [rax],al
   14000c868:	ins    BYTE PTR es:[rdi],dx
   14000c869:	data16 add BYTE PTR [rax],al
   14000c86c:	movabs al,ds:0xa90000667c00008f
   14000c875:	data16 add BYTE PTR [rax],al
   14000c878:	call   0x14000c904
   14000c87d:	add    BYTE PTR [eax],al
   14000c880:	and    BYTE PTR [rdi+0x0],ah
   14000c883:	add    al,al
   14000c885:	xchg   BYTE PTR [rax],al
   14000c887:	add    BYTE PTR [rax],ah
   14000c889:	add    BYTE PTR [eax],al
   14000c88c:	rex
   14000c88d:	add    BYTE PTR [eax],al
   14000c890:	xchg   QWORD PTR [rax],rax
   14000c893:	add    BYTE PTR [rax+0x67],al
   14000c896:	add    BYTE PTR [rax],al
   14000c898:	test   BYTE PTR [rdi+0x0],ah
   14000c89b:	add    BYTE PTR [rax-0x7d],al
   14000c89e:	add    BYTE PTR [rax],al
   14000c8a0:	test   BYTE PTR [rdi+0x0],ah
   14000c8a3:	add    dl,al
   14000c8a5:	add    BYTE PTR [eax],al
   14000c8a8:	push   rax
   14000c8a9:	add    DWORD PTR [rax],0x0
   14000c8ac:	shl    BYTE PTR [rdi+0x0],1
   14000c8af:	add    BYTE PTR [rax],ah
   14000c8b1:	push   0xffffffff85700000
   14000c8b6:	add    BYTE PTR [rax],al
   14000c8b8:	and    BYTE PTR [rax+0x0],ch
   14000c8bb:	add    BYTE PTR [rax+0x68],ah
   14000c8be:	add    BYTE PTR [rax],al
   14000c8c0:	add    BYTE PTR [rbp+0x68900000],0x0
   14000c8c7:	add    cl,dl
   14000c8c9:	push   0xffffffff8b980000
   14000c8ce:	add    BYTE PTR [rax],al
   14000c8d0:	add    DWORD PTR [rcx+0x0],ebp
   14000c8d3:	add    BYTE PTR [rbp+0x69],al
   14000c8d6:	add    BYTE PTR [rax],al
   14000c8d8:	lods   al,BYTE PTR ds:[rsi]
   14000c8d9:	mov    eax,DWORD PTR [rax]
   14000c8db:	add    ah,bh
   14000c8dd:	imul   eax,DWORD PTR [rax],0x6a2800
   14000c8e3:	add    ah,dh
   14000c8e5:	xchg   edx,eax
   14000c8e6:	add    BYTE PTR [rax],al
   14000c8e8:	sub    BYTE PTR [rdx+0x0],ch
   14000c8eb:	add    BYTE PTR [rcx+0x6a],ch
   14000c8ee:	add    BYTE PTR [rax],al
   14000c8f0:	and    al,0x93
   14000c8f2:	add    BYTE PTR [rax],al
   14000c8f4:	imul   ebp,DWORD PTR [rdx+0x0],0x6a8400
   14000c8fb:	add    BYTE PTR [rbx+rdx*4+0x0],bl
   14000c8ff:	add    BYTE PTR [rdx+rbp*2+0x6aa20000],al
   14000c906:	add    BYTE PTR [rax],al
   14000c908:	lods   al,BYTE PTR ds:[rsi]
   14000c909:	xchg   ebx,eax
   14000c90a:	add    BYTE PTR [rax],al
   14000c90c:	mov    al,0x6a
   14000c90e:	add    BYTE PTR [rax],al
   14000c910:	shr    BYTE PTR [rdx+0x0],1
   14000c913:	add    al,dh
   14000c915:	xchg   ebx,eax
	...

Disassembly of section .rsrc:

000000014000d000 <.rsrc>:
	...
   14000d00c:	add    BYTE PTR [rax],al
   14000d00e:	add    al,0x0
   14000d010:	add    eax,DWORD PTR [rax]
   14000d012:	add    BYTE PTR [rax],al
   14000d014:	xor    BYTE PTR [rax],al
   14000d016:	add    BYTE PTR [rax+0xe],al
   14000d01c:	nop
   14000d01d:	add    BYTE PTR [rax],al
   14000d01f:	adc    BYTE PTR [rax],0x0
   14000d022:	add    BYTE PTR [rax],al
   14000d024:	test   al,0x0
   14000d026:	add    BYTE PTR [rax+0x18],al
   14000d02c:	rol    BYTE PTR [rax],0x0
   14000d02f:	add    BYTE PTR [rax],0x0
	...
   14000d03e:	or     al,BYTE PTR [rax]
   14000d040:	add    DWORD PTR [rax],eax
   14000d042:	add    BYTE PTR [rax],al
   14000d044:	fadd   DWORD PTR [rax]
   14000d046:	add    BYTE PTR [rax+0x2],al
   14000d04c:	lock add BYTE PTR [rax],al
   14000d04f:	add    BYTE PTR [rbx],0x0
   14000d052:	add    BYTE PTR [rax],al
   14000d054:	or     BYTE PTR [rcx],al
   14000d056:	add    BYTE PTR [rax+0x4],al
   14000d05c:	and    BYTE PTR [rcx],al
   14000d05e:	add    BYTE PTR [rax+0x5],al
   14000d064:	cmp    BYTE PTR [rcx],al
   14000d066:	add    BYTE PTR [rax+0x6],al
   14000d06c:	push   rax
   14000d06d:	add    DWORD PTR [rax],eax
   14000d06f:	add    BYTE PTR [rdi],0x0
   14000d072:	add    BYTE PTR [rax],al
   14000d074:	push   0x8800001
   14000d079:	add    BYTE PTR [rax],al
   14000d07b:	add    BYTE PTR [rax+0x9800001],al
   14000d081:	add    BYTE PTR [rax],al
   14000d083:	add    BYTE PTR [rax+0xa800001],bl
   14000d089:	add    BYTE PTR [rax],al
   14000d08b:	add    BYTE PTR [rax+0x800001],dh
	...
   14000d099:	add    BYTE PTR [rax],al
   14000d09b:	add    BYTE PTR [rcx],al
   14000d09d:	add    BYTE PTR [rax],al
   14000d09f:	add    al,ah
   14000d0a1:	add    al,BYTE PTR [rax]
   14000d0a3:	or     al,0x1
   14000d0a6:	add    BYTE PTR [rax+0x0],al
	...
   14000d0b4:	add    BYTE PTR [rax],al
   14000d0b6:	add    DWORD PTR [rax],eax
   14000d0b8:	add    DWORD PTR [rax],eax
   14000d0ba:	add    BYTE PTR [rax],al
   14000d0bc:	loopne 0x14000d0bf
   14000d0be:	add    BYTE PTR [rax+0x0],al
	...
   14000d0cc:	add    BYTE PTR [rax],al
   14000d0ce:	add    DWORD PTR [rax],eax
   14000d0d0:	add    DWORD PTR [rax],eax
   14000d0d2:	add    BYTE PTR [rax],al
   14000d0d4:	clc    
   14000d0d5:	add    DWORD PTR [rax],eax
   14000d0d7:	add    BYTE PTR [rax],0x0
	...
   14000d0e6:	add    DWORD PTR [rax],eax
   14000d0e8:	or     DWORD PTR [rax+rax*1],eax
   14000d0eb:	add    BYTE PTR [rax],dl
   14000d0ed:	add    al,BYTE PTR [rax]
	...
   14000d0fb:	add    BYTE PTR [rax],al
   14000d0fd:	add    BYTE PTR [rcx],al
   14000d0ff:	add    BYTE PTR [rcx],cl
   14000d101:	add    al,0x0
   14000d103:	add    BYTE PTR [rax],ah
   14000d105:	add    al,BYTE PTR [rax]
	...
   14000d113:	add    BYTE PTR [rax],al
   14000d115:	add    BYTE PTR [rcx],al
   14000d117:	add    BYTE PTR [rcx],cl
   14000d119:	add    al,0x0
   14000d11b:	add    BYTE PTR [rax],dh
   14000d11d:	add    al,BYTE PTR [rax]
	...
   14000d12b:	add    BYTE PTR [rax],al
   14000d12d:	add    BYTE PTR [rcx],al
   14000d12f:	add    BYTE PTR [rcx],cl
   14000d131:	add    al,0x0
   14000d133:	add    BYTE PTR [rax+0x2],al
	...
   14000d146:	add    DWORD PTR [rax],eax
   14000d148:	or     DWORD PTR [rax+rax*1],eax
   14000d14b:	add    BYTE PTR [rax+0x2],dl
	...
   14000d15e:	add    DWORD PTR [rax],eax
   14000d160:	or     DWORD PTR [rax+rax*1],eax
   14000d163:	add    BYTE PTR [rax+0x2],ah
	...
   14000d176:	add    DWORD PTR [rax],eax
   14000d178:	or     DWORD PTR [rax+rax*1],eax
   14000d17b:	add    BYTE PTR [rax+0x2],dh
	...
   14000d18e:	add    DWORD PTR [rax],eax
   14000d190:	or     DWORD PTR [rax+rax*1],eax
   14000d193:	add    BYTE PTR [rax+0x2],al
	...
   14000d1a5:	add    BYTE PTR [rcx],al
   14000d1a7:	add    BYTE PTR [rcx],cl
   14000d1a9:	add    al,0x0
   14000d1ab:	add    BYTE PTR [rax+0x2],dl
	...
   14000d1bd:	add    BYTE PTR [rcx],al
   14000d1bf:	add    BYTE PTR [rcx],cl
   14000d1c1:	add    al,0x0
   14000d1c3:	add    BYTE PTR [rax+0x2],ah
	...
   14000d1d5:	add    BYTE PTR [rcx],al
   14000d1d7:	add    BYTE PTR [rcx],cl
   14000d1d9:	add    al,0x0
   14000d1db:	add    BYTE PTR [rax+0x2],dh
	...
   14000d1ed:	add    BYTE PTR [rcx],al
   14000d1ef:	add    BYTE PTR [rcx],cl
   14000d1f1:	add    al,0x0
   14000d1f3:	add    al,al
   14000d1f5:	add    al,BYTE PTR [rax]
	...
   14000d203:	add    BYTE PTR [rax],al
   14000d205:	add    BYTE PTR [rcx],al
   14000d207:	add    BYTE PTR [rcx],cl
   14000d209:	add    al,0x0
   14000d20b:	add    al,dl
   14000d20d:	add    al,BYTE PTR [rax]
   14000d20f:	add    BYTE PTR [rax-0x25],ah
   14000d212:	add    BYTE PTR [rax],al
   14000d214:	push   0x6
   14000d219:	add    BYTE PTR [rax],al
   14000d21b:	add    BYTE PTR [rax],al
   14000d21d:	add    BYTE PTR [rax],al
   14000d21f:	add    al,cl
   14000d221:	loope  0x14000d223
   14000d223:	add    al,ch
   14000d225:	add    al,BYTE PTR [rax]
	...
   14000d22f:	add    BYTE PTR [rax+0x280000e4],dh
   14000d235:	add    DWORD PTR [rax],eax
	...
   14000d23f:	add    al,bl
   14000d241:	in     eax,0x0
   14000d243:	add    BYTE PTR [rax+0xe],ch
   14000d249:	add    BYTE PTR [rax],al
   14000d24b:	add    BYTE PTR [rax],al
   14000d24d:	add    BYTE PTR [rax],al
   14000d24f:	add    BYTE PTR [rax-0x57ffff0c],al
   14000d255:	or     BYTE PTR [rax],al
	...
   14000d25f:	add    BYTE PTR [rax],ch
   14000d261:	std    
   14000d262:	add    BYTE PTR [rax],al
   14000d264:	push   0x5
   14000d269:	add    BYTE PTR [rax],al
   14000d26b:	add    BYTE PTR [rax],al
   14000d26d:	add    BYTE PTR [rax],al
   14000d26f:	add    BYTE PTR [rax-0x33fffefe],dl
   14000d275:	test   al,0x0
	...
   14000d27f:	add    BYTE PTR [rax-0x55],ah
   14000d282:	add    DWORD PTR [rax],eax
   14000d284:	test   al,0x25
	...
   14000d28e:	add    BYTE PTR [rax],al
   14000d290:	or     cl,dl
   14000d292:	add    DWORD PTR [rax],eax
   14000d294:	test   al,0x10
	...
   14000d29e:	add    BYTE PTR [rax],al
   14000d2a0:	mov    al,0xe1
   14000d2a2:	add    DWORD PTR [rax],eax
   14000d2a4:	push   0x4
   14000d2a9:	add    BYTE PTR [rax],al
   14000d2ab:	add    BYTE PTR [rax],al
   14000d2ad:	add    BYTE PTR [rax],al
   14000d2af:	add    BYTE PTR [rax],bl
   14000d2b1:	out    0x1,al
   14000d2b3:	add    BYTE PTR [rdx+0x0],dl
   14000d2b9:	add    BYTE PTR [rax],al
   14000d2bb:	add    BYTE PTR [rax],al
   14000d2bd:	add    BYTE PTR [rax],al
   14000d2bf:	add    BYTE PTR [rax],ch
   14000d2c1:	fld    DWORD PTR [rax]
   14000d2c3:	add    BYTE PTR [rdx+rax*1],dh
	...
   14000d2ce:	add    BYTE PTR [rax],al
   14000d2d0:	add    bl,dl
   14000d2d2:	add    BYTE PTR [rax],al
   14000d2d4:	and    eax,DWORD PTR [rsi]
	...
   14000d2de:	add    BYTE PTR [rax],al
   14000d2e0:	or     DWORD PTR [rax],eax
   14000d2e2:	rex.WB add BYTE PTR [r8+rax*1+0x49],al
   14000d2e7:	add    BYTE PTR [rdi+0x0],bl
   14000d2ea:	rex.WB add BYTE PTR [r11+0x0],al
   14000d2ee:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000d2f2:	xor    DWORD PTR [rax],eax
	...
   14000d300:	cmp    al,0x3f
   14000d302:	js     0x14000d371
   14000d304:	ins    BYTE PTR es:[rdi],dx
   14000d305:	and    BYTE PTR [rsi+0x65],dh
   14000d308:	jb     0x14000d37d
   14000d30a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000d311:	xor    BYTE PTR [rdx],ah
   14000d313:	and    BYTE PTR [rbp+0x6e],ah
   14000d316:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000d319:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000d320:	rex.RX sub eax,0x73202238
   14000d326:	je     0x14000d389
   14000d328:	outs   dx,BYTE PTR ds:[rsi]
   14000d329:	fs (bad) 
   14000d32b:	ins    BYTE PTR es:[rdi],dx
   14000d32c:	outs   dx,DWORD PTR ds:[rsi]
   14000d32d:	outs   dx,BYTE PTR ds:[rsi]
   14000d32e:	gs cmp eax,0x73657922
   14000d334:	and    bh,BYTE PTR [rdi]
   14000d336:	or     bh,BYTE PTR ds:[rcx+riz*2]
   14000d33a:	jae    0x14000d3af
   14000d33c:	gs ins DWORD PTR es:[rdi],dx
   14000d33e:	(bad)  
   14000d33f:	ins    BYTE PTR es:[rdi],dx
   14000d340:	jns    0x14000d362
   14000d342:	js     0x14000d3b1
   14000d344:	ins    BYTE PTR es:[rdi],dx
   14000d345:	outs   dx,BYTE PTR ds:[rsi]
   14000d346:	jae    0x14000d385
   14000d348:	and    dh,BYTE PTR [rbp+0x72]
   14000d34b:	outs   dx,BYTE PTR ds:[rsi]
   14000d34c:	cmp    dh,BYTE PTR [rbx+0x63]
   14000d34f:	push   0x73616d65
   14000d354:	sub    eax,0x7263696d
   14000d359:	outs   dx,DWORD PTR ds:[rsi]
   14000d35a:	jae    0x14000d3cb
   14000d35c:	data16 je 0x14000d38c
   14000d35f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d362:	cmp    ah,BYTE PTR [rcx+0x73]
   14000d365:	ins    DWORD PTR es:[rdi],dx
   14000d366:	cs jbe 0x14000d39a
   14000d369:	and    ah,BYTE PTR [rax]
   14000d36b:	ins    DWORD PTR es:[rdi],dx
   14000d36c:	(bad)  
   14000d36d:	outs   dx,BYTE PTR ds:[rsi]
   14000d36e:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000d375:	jb     0x14000d3ea
   14000d377:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000d37e:	xor    BYTE PTR [rdx],ah
   14000d380:	and    BYTE PTR ds:[rdx],cl
   14000d383:	and    BYTE PTR [rax],ah
   14000d385:	cmp    al,0x61
   14000d387:	jae    0x14000d3fc
   14000d389:	gs ins DWORD PTR es:[rdi],dx
   14000d38b:	(bad)  
   14000d38c:	ins    BYTE PTR es:[rdi],dx
   14000d38d:	jns    0x14000d3d8
   14000d38f:	fs outs dx,BYTE PTR gs:[rsi]
   14000d392:	je     0x14000d3fd
   14000d394:	je     0x14000d40f
   14000d396:	and    BYTE PTR [rsi+0x65],dh
   14000d399:	jb     0x14000d40e
   14000d39b:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e37223d
   14000d3a2:	xor    al,0x2e
   14000d3a4:	xor    BYTE PTR [rsi],ch
   14000d3a6:	xor    BYTE PTR [rdx],ah
   14000d3a8:	or     ah,BYTE PTR [rax]
   14000d3aa:	and    BYTE PTR [rax],ah
   14000d3ac:	and    BYTE PTR [rax],ah
   14000d3ae:	jo     0x14000d422
   14000d3b0:	outs   dx,DWORD PTR ds:[rsi]
   14000d3b1:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d3b4:	jae    0x14000d425
   14000d3b6:	jb     0x14000d3f9
   14000d3b8:	jb     0x14000d41d
   14000d3ba:	push   0x63657469
   14000d3bf:	je     0x14000d436
   14000d3c1:	jb     0x14000d428
   14000d3c3:	cmp    eax,0xa222a22
   14000d3c8:	and    BYTE PTR [rax],ah
   14000d3ca:	and    BYTE PTR [rax],ah
   14000d3cc:	and    BYTE PTR [rsi+0x61],ch
   14000d3cf:	ins    DWORD PTR es:[rdi],dx
   14000d3d0:	gs cmp eax,0x5f776d22
   14000d3d6:	xor    al,0x61
   14000d3d8:	and    cl,BYTE PTR [rdx]
   14000d3da:	and    BYTE PTR [rax],ah
   14000d3dc:	and    BYTE PTR [rax],ah
   14000d3de:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000d3e2:	gs cmp eax,0x6e697722
   14000d3e8:	xor    esi,DWORD PTR [rdx]
   14000d3ea:	and    ch,BYTE PTR [rdi]
   14000d3ec:	and    BYTE PTR ds:[rdx],cl
   14000d3ef:	or     ah,BYTE PTR [rax]
   14000d3f1:	and    BYTE PTR [rsp+riz*2],bh
   14000d3f4:	gs jae 0x14000d45a
   14000d3f7:	jb     0x14000d462
   14000d3f9:	jo     0x14000d46f
   14000d3fb:	imul   ebp,DWORD PTR [rdi+0x6e],0x7463413e
   14000d402:	imul   esi,DWORD PTR [rsi+0x61],0x6e6f6974
   14000d409:	cmp    al,0x2f
   14000d40b:	fs gs jae 0x14000d472
   14000d40f:	jb     0x14000d47a
   14000d411:	jo     0x14000d487
   14000d413:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a203e
   14000d41a:	and    BYTE PTR [rcx+riz*1],bh
   14000d41d:	sub    eax,0x6449202d
   14000d422:	outs   dx,BYTE PTR gs:[rsi]
   14000d424:	je     0x14000d48f
   14000d426:	data16 jns 0x14000d449
   14000d429:	je     0x14000d493
   14000d42b:	and    BYTE PTR gs:[rcx+0x70],ah
   14000d42f:	jo     0x14000d49d
   14000d431:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000d438:	and    BYTE PTR [rbx+0x65],dh
   14000d43b:	movsxd esi,DWORD PTR [rbp+0x72]
   14000d43e:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x75716572
   14000d446:	imul   esi,DWORD PTR [rdx+0x65],0x746e656d
   14000d44d:	jae    0x14000d47d
   14000d44f:	and    BYTE PTR [rip+0x200a3e2d],ch        # 0x1600b1282
   14000d455:	and    BYTE PTR [rbp*2+0x73615f73],bh
   14000d45c:	ins    DWORD PTR es:[rdi],dx
   14000d45d:	jbe    0x14000d491
   14000d45f:	cmp    dh,BYTE PTR [rdx+rsi*2+0x75]
   14000d463:	jae    0x14000d4d9
   14000d465:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d467:	outs   dx,WORD PTR ds:[rsi]
   14000d469:	and    BYTE PTR [rax+0x6d],bh
   14000d46c:	ins    BYTE PTR es:[rdi],dx
   14000d46d:	outs   dx,BYTE PTR ds:[rsi]
   14000d46e:	jae    0x14000d4aa
   14000d470:	ins    DWORD PTR es:[rdi],dx
   14000d471:	jae    0x14000d4d2
   14000d473:	(bad)  
   14000d474:	jae    0x14000d4e3
   14000d476:	jbe    0x14000d4aa
   14000d478:	cmp    eax,0x6e727522
   14000d47d:	cmp    dh,BYTE PTR [rbx+0x63]
   14000d480:	push   0x73616d65
   14000d485:	sub    eax,0x7263696d
   14000d48a:	outs   dx,DWORD PTR ds:[rsi]
   14000d48b:	jae    0x14000d4fc
   14000d48d:	data16 je 0x14000d4bd
   14000d490:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d493:	cmp    ah,BYTE PTR [rcx+0x73]
   14000d496:	ins    DWORD PTR es:[rdi],dx
   14000d497:	cs jbe 0x14000d4cc
   14000d49a:	and    bh,BYTE PTR [rsi]
   14000d49c:	or     ah,BYTE PTR [rax]
   14000d49e:	and    BYTE PTR [rax],ah
   14000d4a0:	and    BYTE PTR [rbp*2+0x73615f73],bh
   14000d4a7:	ins    DWORD PTR es:[rdi],dx
   14000d4a8:	jbe    0x14000d4dc
   14000d4aa:	cmp    dh,BYTE PTR [rbx+0x65]
   14000d4ad:	movsxd esi,DWORD PTR [rbp+0x72]
   14000d4b0:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2020200a
   14000d4b8:	and    BYTE PTR [rax],ah
   14000d4ba:	and    BYTE PTR [rbp*2+0x73615f73],bh
   14000d4c1:	ins    DWORD PTR es:[rdi],dx
   14000d4c2:	jbe    0x14000d4f6
   14000d4c4:	cmp    dh,BYTE PTR [rdx+0x65]
   14000d4c7:	jno    0x14000d53e
   14000d4c9:	gs jae 0x14000d540
   14000d4cc:	gs fs push rax
   14000d4cf:	jb     0x14000d53a
   14000d4d1:	jbe    0x14000d53c
   14000d4d3:	ins    BYTE PTR es:[rdi],dx
   14000d4d4:	gs addr32 gs jae 0x14000d517
   14000d4d9:	or     ah,BYTE PTR [rax]
   14000d4db:	and    BYTE PTR [rax],ah
   14000d4dd:	and    BYTE PTR [rax],ah
   14000d4df:	and    BYTE PTR [rax],ah
   14000d4e1:	and    BYTE PTR [rbp*2+0x73615f73],bh
   14000d4e8:	ins    DWORD PTR es:[rdi],dx
   14000d4e9:	jbe    0x14000d51d
   14000d4eb:	cmp    dh,BYTE PTR [rdx+0x65]
   14000d4ee:	jno    0x14000d565
   14000d4f0:	gs jae 0x14000d567
   14000d4f3:	gs fs rex.RB js 0x14000d55d
   14000d4f8:	movsxd esi,DWORD PTR [rbp+0x74]
   14000d4fb:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000d502:	ins    BYTE PTR es:[rdi],dx
   14000d503:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000d507:	gs ins BYTE PTR es:[rdi],dx
   14000d509:	cmp    eax,0x49736127
   14000d50e:	outs   dx,BYTE PTR ds:[rsi]
   14000d50f:	jbe    0x14000d580
   14000d511:	imul   esp,DWORD PTR [rbp+0x72],0x27
   14000d515:	and    BYTE PTR [rbp+0x69],dh
   14000d518:	movsxd esp,DWORD PTR [r11+0x65]
   14000d51c:	jae    0x14000d591
   14000d51e:	cmp    eax,0x6c616622
   14000d523:	jae    0x14000d58a
   14000d525:	and    bh,BYTE PTR [rsi]
   14000d527:	or     ah,BYTE PTR [rax]
   14000d529:	and    BYTE PTR [rax],ah
   14000d52b:	and    BYTE PTR [rax],ah
   14000d52d:	and    BYTE PTR [rax],ah
   14000d52f:	and    BYTE PTR [rdi+rbp*1],bh
   14000d532:	ins    DWORD PTR es:[rdi],dx
   14000d533:	jae    0x14000d594
   14000d535:	(bad)  
   14000d536:	jae    0x14000d5a5
   14000d538:	jbe    0x14000d56c
   14000d53a:	cmp    dh,BYTE PTR [rdx+0x65]
   14000d53d:	jno    0x14000d5b4
   14000d53f:	gs jae 0x14000d5b6
   14000d542:	gs fs rex.RB js 0x14000d5ac
   14000d547:	movsxd esi,DWORD PTR [rbp+0x74]
   14000d54a:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000d551:	ins    BYTE PTR es:[rdi],dx
   14000d552:	or     ah,BYTE PTR ds:[rax]
   14000d555:	and    BYTE PTR [rax],ah
   14000d557:	and    BYTE PTR [rax],ah
   14000d559:	and    BYTE PTR [rdi+rbp*1],bh
   14000d55c:	ins    DWORD PTR es:[rdi],dx
   14000d55d:	jae    0x14000d5be
   14000d55f:	(bad)  
   14000d560:	jae    0x14000d5cf
   14000d562:	jbe    0x14000d596
   14000d564:	cmp    dh,BYTE PTR [rdx+0x65]
   14000d567:	jno    0x14000d5de
   14000d569:	gs jae 0x14000d5e0
   14000d56c:	gs fs push rax
   14000d56f:	jb     0x14000d5da
   14000d571:	jbe    0x14000d5dc
   14000d573:	ins    BYTE PTR es:[rdi],dx
   14000d574:	gs addr32 gs jae 0x14000d5b7
   14000d579:	or     ah,BYTE PTR [rax]
   14000d57b:	and    BYTE PTR [rax],ah
   14000d57d:	and    BYTE PTR [rdi+rbp*1],bh
   14000d580:	ins    DWORD PTR es:[rdi],dx
   14000d581:	jae    0x14000d5e2
   14000d583:	(bad)  
   14000d584:	jae    0x14000d5f3
   14000d586:	jbe    0x14000d5ba
   14000d588:	cmp    dh,BYTE PTR [rbx+0x65]
   14000d58b:	movsxd esi,DWORD PTR [rbp+0x72]
   14000d58e:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x3c20200a
   14000d596:	(bad)  
   14000d597:	ins    DWORD PTR es:[rdi],dx
   14000d598:	jae    0x14000d5f9
   14000d59a:	(bad)  
   14000d59b:	jae    0x14000d60a
   14000d59d:	jbe    0x14000d5d1
   14000d59f:	cmp    dh,BYTE PTR [rdx+rsi*2+0x75]
   14000d5a3:	jae    0x14000d619
   14000d5a5:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d5a7:	outs   dx,WORD PTR ds:[rsi]
   14000d5a9:	or     cl,BYTE PTR ds:[rdx]
   14000d5ac:	and    BYTE PTR [rbx+riz*2],bh
   14000d5af:	outs   dx,DWORD PTR ds:[rsi]
   14000d5b0:	ins    DWORD PTR es:[rdi],dx
   14000d5b1:	jo     0x14000d614
   14000d5b3:	je     0x14000d61e
   14000d5b5:	(bad)  
   14000d5b6:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6d782079
   14000d5be:	ins    BYTE PTR es:[rdi],dx
   14000d5bf:	outs   dx,BYTE PTR ds:[rsi]
   14000d5c0:	jae    0x14000d5ff
   14000d5c2:	and    dh,BYTE PTR [rbp+0x72]
   14000d5c5:	outs   dx,BYTE PTR ds:[rsi]
   14000d5c6:	cmp    dh,BYTE PTR [rbx+0x63]
   14000d5c9:	push   0x73616d65
   14000d5ce:	sub    eax,0x7263696d
   14000d5d3:	outs   dx,DWORD PTR ds:[rsi]
   14000d5d4:	jae    0x14000d645
   14000d5d6:	data16 je 0x14000d606
   14000d5d9:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d5dc:	cmp    ah,BYTE PTR [rbx+0x6f]
   14000d5df:	ins    DWORD PTR es:[rdi],dx
   14000d5e0:	jo     0x14000d643
   14000d5e2:	je     0x14000d64d
   14000d5e4:	(bad)  
   14000d5e5:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x31762e79
   14000d5ed:	and    bh,BYTE PTR [rsi]
   14000d5ef:	or     ah,BYTE PTR [rax]
   14000d5f1:	and    BYTE PTR [rax],ah
   14000d5f3:	and    BYTE PTR [rcx+riz*2],bh
   14000d5f6:	jo     0x14000d668
   14000d5f8:	ins    BYTE PTR es:[rdi],dx
   14000d5f9:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000d600:	or     ah,BYTE PTR ds:[rax]
   14000d603:	and    BYTE PTR [rax],ah
   14000d605:	and    BYTE PTR [rax],ah
   14000d607:	and    BYTE PTR [rcx+riz*1],bh
   14000d60a:	sub    eax,0x6957202d
   14000d60f:	outs   dx,BYTE PTR ds:[rsi]
   14000d610:	outs   dx,DWORD PTR fs:[rsi]
   14000d612:	ja     0x14000d687
   14000d614:	and    BYTE PTR [rsi+0x69],dl
   14000d617:	jae    0x14000d68d
   14000d619:	(bad)  
   14000d61a:	and    BYTE PTR [rip+0x200a3e2d],ch        # 0x1600b144d
   14000d620:	and    BYTE PTR [rax],ah
   14000d622:	and    BYTE PTR [rax],ah
   14000d624:	and    BYTE PTR [rbx+rsi*2],bh
   14000d627:	jne    0x14000d699
   14000d629:	jo     0x14000d69a
   14000d62b:	jb     0x14000d6a1
   14000d62d:	gs fs rex.WRXB push r11
   14000d631:	and    BYTE PTR [rcx+0x64],cl
   14000d634:	cmp    eax,0x32657b22
   14000d639:	xor    BYTE PTR [rcx],dh
   14000d63b:	xor    DWORD PTR [rsi*1+0x35312d37],esi
   14000d642:	xor    al,0x36
   14000d644:	sub    eax,0x35633334
   14000d649:	sub    eax,0x65663561
   14000d64e:	sub    eax,0x64383030
   14000d653:	gs gs xor esp,DWORD PTR gs:[rbx+rsi*1+0x66]
   14000d65a:	xor    BYTE PTR [rbp+0x22],bh
   14000d65d:	(bad)  
   14000d65e:	or     ah,BYTE PTR ds:[rax]
   14000d661:	and    BYTE PTR [rax],ah
   14000d663:	and    BYTE PTR [rax],ah
   14000d665:	and    BYTE PTR [rcx+riz*1],bh
   14000d668:	sub    eax,0x6957202d
   14000d66d:	outs   dx,BYTE PTR ds:[rsi]
   14000d66e:	outs   dx,DWORD PTR fs:[rsi]
   14000d670:	ja     0x14000d6e5
   14000d672:	and    BYTE PTR [rdi],dh
   14000d674:	and    BYTE PTR [rip+0x200a3e2d],ch        # 0x1600b14a7
   14000d67a:	and    BYTE PTR [rax],ah
   14000d67c:	and    BYTE PTR [rax],ah
   14000d67e:	and    BYTE PTR [rbx+rsi*2],bh
   14000d681:	jne    0x14000d6f3
   14000d683:	jo     0x14000d6f4
   14000d685:	jb     0x14000d6fb
   14000d687:	gs fs rex.WRXB push r11
   14000d68b:	and    BYTE PTR [rcx+0x64],cl
   14000d68e:	cmp    eax,0x35337b22
   14000d693:	xor    DWORD PTR [rbx],esi
   14000d695:	cmp    BYTE PTR [rdx+0x39],ah
   14000d698:	(bad)  
   14000d699:	sub    eax,0x36396435
   14000d69e:	sub    eax,0x64626634
   14000d6a3:	sub    eax,0x64326538
   14000d6a8:	sub    eax,0x34343261
   14000d6ad:	xor    BYTE PTR [rdx],dh
   14000d6af:	xor    dh,BYTE PTR [rip+0x61333966]        # 0x1a134101b
   14000d6b5:	jge    0x14000d6d9
   14000d6b7:	(bad)  
   14000d6b8:	or     ah,BYTE PTR ds:[rax]
   14000d6bb:	and    BYTE PTR [rax],ah
   14000d6bd:	and    BYTE PTR [rax],ah
   14000d6bf:	and    BYTE PTR [rcx+riz*1],bh
   14000d6c2:	sub    eax,0x6957202d
   14000d6c7:	outs   dx,BYTE PTR ds:[rsi]
   14000d6c8:	outs   dx,DWORD PTR fs:[rsi]
   14000d6ca:	ja     0x14000d73f
   14000d6cc:	and    BYTE PTR [rax],bh
   14000d6ce:	and    BYTE PTR [rip+0x200a3e2d],ch        # 0x1600b1501
   14000d6d4:	and    BYTE PTR [rax],ah
   14000d6d6:	and    BYTE PTR [rax],ah
   14000d6d8:	and    BYTE PTR [rbx+rsi*2],bh
   14000d6db:	jne    0x14000d74d
   14000d6dd:	jo     0x14000d74e
   14000d6df:	jb     0x14000d755
   14000d6e1:	gs fs rex.WRXB push r11
   14000d6e5:	and    BYTE PTR [rcx+0x64],cl
   14000d6e8:	cmp    eax,0x61347b22
   14000d6ed:	xor    ah,BYTE PTR [rsi+0x32]
   14000d6f0:	cmp    BYTE PTR [rbp+0x33],ah
   14000d6f3:	sub    eax,0x39623335
   14000d6f8:	sub    eax,0x31343434
   14000d6fd:	sub    eax,0x63396162
   14000d702:	sub    eax,0x64393664
   14000d707:	xor    al,0x61
   14000d709:	xor    al,0x61
   14000d70b:	ss xor edi,DWORD PTR gs:[rax]
   14000d70f:	jge    0x14000d733
   14000d711:	(bad)  
   14000d712:	or     ah,BYTE PTR ds:[rax]
   14000d715:	and    BYTE PTR [rax],ah
   14000d717:	and    BYTE PTR [rax],ah
   14000d719:	and    BYTE PTR [rcx+riz*1],bh
   14000d71c:	sub    eax,0x6957202d
   14000d721:	outs   dx,BYTE PTR ds:[rsi]
   14000d722:	outs   dx,DWORD PTR fs:[rsi]
   14000d724:	ja     0x14000d799
   14000d726:	and    BYTE PTR [rax],bh
   14000d728:	xor    DWORD PTR cs:[rax],esp
   14000d72b:	sub    eax,0x200a3e2d
   14000d730:	and    BYTE PTR [rax],ah
   14000d732:	and    BYTE PTR [rax],ah
   14000d734:	and    BYTE PTR [rbx+rsi*2],bh
   14000d737:	jne    0x14000d7a9
   14000d739:	jo     0x14000d7aa
   14000d73b:	jb     0x14000d7b1
   14000d73d:	gs fs rex.WRXB push r11
   14000d741:	and    BYTE PTR [rcx+0x64],cl
   14000d744:	cmp    eax,0x66317b22
   14000d749:	ss (bad) 
   14000d74b:	movsxd esi,DWORD PTR ss:[rdi]
   14000d74e:	ss sub eax,0x31653038
   14000d754:	sub    eax,0x39333234
   14000d759:	sub    eax,0x62623539
   14000d75e:	sub    eax,0x30643338
   14000d763:	data16 ss xor BYTE PTR fs:[rcx+riz*2+0x37],ah
   14000d76a:	cmp    BYTE PTR [rbp+0x22],bh
   14000d76d:	(bad)  
   14000d76e:	or     ah,BYTE PTR ds:[rax]
   14000d771:	and    BYTE PTR [rax],ah
   14000d773:	and    BYTE PTR [rax],ah
   14000d775:	and    BYTE PTR [rcx+riz*1],bh
   14000d778:	sub    eax,0x6957202d
   14000d77d:	outs   dx,BYTE PTR ds:[rsi]
   14000d77e:	outs   dx,DWORD PTR fs:[rsi]
   14000d780:	ja     0x14000d7f5
   14000d782:	and    BYTE PTR [rcx],dh
   14000d784:	xor    BYTE PTR [rax],ah
   14000d786:	sub    eax,0xa203e2d
   14000d78b:	and    BYTE PTR [rax],ah
   14000d78d:	and    BYTE PTR [rax],ah
   14000d78f:	and    BYTE PTR [rax],ah
   14000d791:	cmp    al,0x73
   14000d793:	jne    0x14000d805
   14000d795:	jo     0x14000d806
   14000d797:	jb     0x14000d80d
   14000d799:	gs fs rex.WRXB push r11
   14000d79d:	and    BYTE PTR [rcx+0x64],cl
   14000d7a0:	cmp    eax,0x65387b22
   14000d7a5:	xor    BYTE PTR [rsi+0x37],ah
   14000d7a8:	(bad)  
   14000d7a9:	xor    DWORD PTR [rdx],esi
   14000d7ab:	sub    eax,0x33626662
   14000d7b0:	sub    eax,0x38656634
   14000d7b5:	sub    eax,0x35613962
   14000d7ba:	sub    eax,0x64663834
   14000d7bf:	xor    eax,0x35316130
   14000d7c4:	(bad)  
   14000d7c5:	cmp    DWORD PTR [rcx+0x7d],esp
   14000d7c8:	and    ch,BYTE PTR [rdi]
   14000d7ca:	and    BYTE PTR ds:[rax],ah
   14000d7cd:	and    BYTE PTR [rdx],cl
   14000d7cf:	and    BYTE PTR [rax],ah
   14000d7d1:	and    BYTE PTR [rax],ah
   14000d7d3:	cmp    al,0x2f
   14000d7d5:	(bad)  
   14000d7d6:	jo     0x14000d848
   14000d7d8:	ins    BYTE PTR es:[rdi],dx
   14000d7d9:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000d7e0:	or     ah,BYTE PTR ds:[rax]
   14000d7e3:	and    BYTE PTR [rdi+rbp*1],bh
   14000d7e6:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d7e9:	jo     0x14000d84c
   14000d7eb:	je     0x14000d856
   14000d7ed:	(bad)  
   14000d7ee:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x20203e79
   14000d7f6:	or     cl,BYTE PTR [rdx]
   14000d7f8:	and    BYTE PTR [rax],ah
   14000d7fa:	cmp    al,0x21
   14000d7fc:	sub    eax,0x614d202d
   14000d801:	imul   esp,DWORD PTR [rbp+0x20],0x74
   14000d805:	push   0x70612065
   14000d80a:	jo     0x14000d878
   14000d80c:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000d813:	and    BYTE PTR [rax+rdx*2+0x49],al
   14000d817:	and    BYTE PTR [rcx+0x77],ah
   14000d81a:	(bad)  
   14000d81b:	jb     0x14000d882
   14000d81d:	and    BYTE PTR cs:[rip+0x200a3e2d],ch        # 0x1600b1651
   14000d824:	and    BYTE PTR [rcx+riz*2],bh
   14000d827:	jae    0x14000d896
   14000d829:	jbe    0x14000d85e
   14000d82b:	cmp    ah,BYTE PTR [rcx+0x70]
   14000d82e:	jo     0x14000d89c
   14000d830:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000d837:	and    BYTE PTR [rax+0x6d],bh
   14000d83a:	ins    BYTE PTR es:[rdi],dx
   14000d83b:	outs   dx,BYTE PTR ds:[rsi]
   14000d83c:	jae    0x14000d878
   14000d83e:	(bad)  
   14000d83f:	jae    0x14000d8ae
   14000d841:	jbe    0x14000d876
   14000d843:	cmp    eax,0x6e727522
   14000d848:	cmp    dh,BYTE PTR [rbx+0x63]
   14000d84b:	push   0x73616d65
   14000d850:	sub    eax,0x7263696d
   14000d855:	outs   dx,DWORD PTR ds:[rsi]
   14000d856:	jae    0x14000d8c7
   14000d858:	data16 je 0x14000d888
   14000d85b:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d85e:	cmp    ah,BYTE PTR [rcx+0x73]
   14000d861:	ins    DWORD PTR es:[rdi],dx
   14000d862:	cs jbe 0x14000d898
   14000d865:	and    bh,BYTE PTR [rsi]
   14000d867:	or     ah,BYTE PTR [rax]
   14000d869:	and    BYTE PTR [rax],ah
   14000d86b:	and    BYTE PTR [rcx+riz*2],bh
   14000d86e:	jae    0x14000d8dd
   14000d870:	jbe    0x14000d8a5
   14000d872:	cmp    dh,BYTE PTR [rdi+0x69]
   14000d875:	outs   dx,BYTE PTR ds:[rsi]
   14000d876:	outs   dx,DWORD PTR fs:[rsi]
   14000d878:	ja     0x14000d8ed
   14000d87a:	push   rbx
   14000d87b:	gs je  0x14000d8f2
   14000d87e:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
   14000d885:	ins    BYTE PTR es:[rdi],dx
   14000d886:	outs   dx,BYTE PTR ds:[rsi]
   14000d887:	jae    0x14000d8c6
   14000d889:	and    ch,BYTE PTR [rax+0x74]
   14000d88c:	je     0x14000d8fe
   14000d88e:	cmp    ch,BYTE PTR [rdi]
   14000d890:	(bad)  
   14000d891:	jae    0x14000d8f6
   14000d893:	push   0x73616d65
   14000d898:	cs ins DWORD PTR es:[rdi],dx
   14000d89a:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14000d8a1:	je     0x14000d8d1
   14000d8a3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d8a6:	(bad)  
   14000d8a7:	push   rbx
   14000d8a8:	rex.WRB
   14000d8a9:	rex.WB (bad) 
   14000d8ab:	xor    dh,BYTE PTR [rax]
   14000d8ad:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6a2fe2
   14000d8b3:	outs   dx,DWORD PTR fs:[rsi]
   14000d8b5:	ja     0x14000d92a
   14000d8b7:	push   rbx
   14000d8b8:	gs je  0x14000d92f
   14000d8bb:	imul   ebp,DWORD PTR [rsi+0x67],0xa3e2273
   14000d8c2:	and    BYTE PTR [rax],ah
   14000d8c4:	and    BYTE PTR [rax],ah
   14000d8c6:	and    BYTE PTR [rax],ah
   14000d8c8:	cmp    al,0x64
   14000d8ca:	jo     0x14000d935
   14000d8cc:	rex.B ja 0x14000d930
   14000d8cf:	jb     0x14000d936
   14000d8d1:	ds je  0x14000d946
   14000d8d4:	jne    0x14000d93b
   14000d8d6:	cmp    al,0x2f
   14000d8d8:	fs jo  0x14000d944
   14000d8db:	rex.B ja 0x14000d93f
   14000d8de:	jb     0x14000d945
   14000d8e0:	or     ah,BYTE PTR ds:[rax]
   14000d8e3:	and    BYTE PTR [rax],ah
   14000d8e5:	and    BYTE PTR [rdi+rbp*1],bh
   14000d8e8:	(bad)  
   14000d8e9:	jae    0x14000d958
   14000d8eb:	jbe    0x14000d920
   14000d8ed:	cmp    dh,BYTE PTR [rdi+0x69]
   14000d8f0:	outs   dx,BYTE PTR ds:[rsi]
   14000d8f1:	outs   dx,DWORD PTR fs:[rsi]
   14000d8f3:	ja     0x14000d968
   14000d8f5:	push   rbx
   14000d8f6:	gs je  0x14000d96d
   14000d8f9:	imul   ebp,DWORD PTR [rsi+0x67],0x200a3e73
   14000d900:	and    BYTE PTR [rdi+rbp*1],bh
   14000d903:	(bad)  
   14000d904:	jae    0x14000d973
   14000d906:	jbe    0x14000d93b
   14000d908:	cmp    ah,BYTE PTR [rcx+0x70]
   14000d90b:	jo     0x14000d979
   14000d90d:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000d914:	or     bh,BYTE PTR ds:[rdi+rbp*1]
   14000d918:	(bad)  
   14000d919:	jae    0x14000d98e
   14000d91b:	gs ins DWORD PTR es:[rdi],dx
   14000d91d:	(bad)  
   14000d91e:	ins    BYTE PTR es:[rdi],dx
   14000d91f:	jns    0x14000d95f
   14000d921:	or     cl,BYTE PTR [rdx]
   14000d923:	add    BYTE PTR [rax],al
   14000d925:	add    BYTE PTR [rax],al
   14000d927:	add    BYTE PTR [rdx+rax*1],dh
   14000d92a:	xor    al,0x0
   14000d92c:	add    BYTE PTR [rax],al
   14000d92e:	push   rsi
   14000d92f:	add    BYTE PTR [rbx+0x0],dl
   14000d932:	pop    rdi
   14000d933:	add    BYTE PTR [rsi+0x0],dl
   14000d936:	add    BYTE PTR [r10+0x0],r10b
   14000d93a:	push   rbx
   14000d93b:	add    BYTE PTR [rcx+0x0],cl
   14000d93e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000d942:	pop    rdi
   14000d943:	add    BYTE PTR [rcx+0x0],cl
   14000d946:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000d94a:	rex.WRXB add BYTE PTR [r8],r8b
   14000d94d:	add    BYTE PTR [rax],al
   14000d94f:	add    BYTE PTR [rbp+0xfeef04],bh
   14000d955:	add    BYTE PTR [rcx],al
   14000d957:	add    BYTE PTR [rax],al
   14000d959:	add    BYTE PTR [rcx],dl
   14000d95b:	add    BYTE PTR [rax],al
   14000d95d:	add    BYTE PTR [rax],al
   14000d95f:	add    BYTE PTR [rax],al
   14000d961:	add    BYTE PTR [rcx],dl
   14000d963:	add    BYTE PTR [rax],al
   14000d965:	add    BYTE PTR [rax],al
   14000d967:	add    BYTE PTR [rdi],bh
   14000d969:	add    BYTE PTR [rax],al
   14000d96b:	add    BYTE PTR [rax],al
   14000d96d:	add    BYTE PTR [rax],al
   14000d96f:	add    BYTE PTR [rax+rax*1],al
   14000d972:	add    al,0x0
   14000d974:	add    DWORD PTR [rax],eax
	...
   14000d982:	add    BYTE PTR [rax],al
   14000d984:	xchg   esp,eax
   14000d985:	add    DWORD PTR [rax],eax
   14000d987:	add    BYTE PTR [rcx],al
   14000d989:	add    BYTE PTR [rbx+0x0],dl
   14000d98c:	je     0x14000d98e
   14000d98e:	jb     0x14000d990
   14000d990:	imul   eax,DWORD PTR [rax],0x67006e
   14000d996:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000d99a:	ins    BYTE PTR es:[rdi],dx
   14000d99b:	add    BYTE PTR [rbp+0x0],ah
   14000d99e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d9a2:	data16 add BYTE PTR [rdi+0x0],ch
   14000d9a6:	add    BYTE PTR [rax],al
   14000d9a8:	jo     0x14000d9ab
   14000d9aa:	add    BYTE PTR [rax],al
   14000d9ac:	add    DWORD PTR [rax],eax
   14000d9ae:	xor    BYTE PTR [rax],al
   14000d9b0:	xor    al,0x0
   14000d9b2:	xor    BYTE PTR [rax],al
   14000d9b4:	cmp    DWORD PTR [rax],eax
   14000d9b6:	xor    BYTE PTR [rax],al
   14000d9b8:	xor    al,0x0
   14000d9ba:	(bad)  
   14000d9bb:	add    BYTE PTR [rax],dh
   14000d9bd:	add    BYTE PTR [rax],al
   14000d9bf:	add    BYTE PTR [rsi+0x0],al
   14000d9c2:	adc    eax,DWORD PTR [rax]
   14000d9c4:	add    DWORD PTR [rax],eax
   14000d9c6:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000d9ca:	ins    DWORD PTR es:[rdi],dx
   14000d9cb:	add    BYTE PTR [rax+0x0],dh
   14000d9ce:	(bad)  
   14000d9cf:	add    BYTE PTR [rsi+0x0],ch
   14000d9d2:	jns    0x14000d9d4
   14000d9d4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000d9d8:	ins    DWORD PTR es:[rdi],dx
   14000d9d9:	add    BYTE PTR [rbp+0x0],ah
   14000d9dc:	add    BYTE PTR [rax],al
   14000d9de:	add    BYTE PTR [rax],al
   14000d9e0:	push   rsp
   14000d9e1:	add    BYTE PTR [rax+0x0],ch
   14000d9e4:	add    BYTE PTR gs:[rax],ah
   14000d9e7:	add    BYTE PTR [rbp+0x0],cl
   14000d9ea:	(bad)  
   14000d9eb:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000d9ef:	add    BYTE PTR [rdi+0x0],dl
   14000d9f2:	outs   dx,DWORD PTR ds:[rsi]
   14000d9f3:	add    BYTE PTR [rdx+0x0],dh
   14000d9f6:	imul   eax,DWORD PTR [rax],0x73
   14000d9f9:	add    BYTE PTR [rax+rax*1],ch
   14000d9fc:	and    BYTE PTR [rax],al
   14000d9fe:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000da02:	movsxd eax,DWORD PTR [rax]
   14000da04:	add    BYTE PTR [rax],al
   14000da06:	add    BYTE PTR [rax],al
   14000da08:	xor    al,0x0
   14000da0a:	(bad)  
   14000da0b:	add    BYTE PTR [rcx],al
   14000da0d:	add    BYTE PTR [rsi+0x0],al
   14000da10:	imul   eax,DWORD PTR [rax],0x65006c
   14000da16:	add    BYTE PTR [rbp+0x0],r12b
   14000da1a:	jae    0x14000da1c
   14000da1c:	movsxd eax,DWORD PTR [rax]
   14000da1e:	jb     0x14000da20
   14000da20:	imul   eax,DWORD PTR [rax],0x740070
   14000da26:	imul   eax,DWORD PTR [rax],0x6e006f
   14000da2c:	add    BYTE PTR [rax],al
   14000da2e:	add    BYTE PTR [rax],al
   14000da30:	ins    DWORD PTR es:[rdi],dx
   14000da31:	add    BYTE PTR [rdi+0x0],dh
   14000da34:	pop    rdi
   14000da35:	add    BYTE PTR [rax+rax*1],dh
   14000da38:	(bad)  
   14000da39:	add    BYTE PTR [rax],al
   14000da3b:	add    BYTE PTR [rax],ah
   14000da3d:	add    BYTE PTR [rax],al
   14000da3f:	add    BYTE PTR [rcx],al
   14000da41:	add    BYTE PTR [rsi+0x0],al
   14000da44:	imul   eax,DWORD PTR [rax],0x65006c
   14000da4a:	push   rsi
   14000da4b:	add    BYTE PTR [rbp+0x0],ah
   14000da4e:	jb     0x14000da50
   14000da50:	jae    0x14000da52
   14000da52:	imul   eax,DWORD PTR [rax],0x6e006f
   14000da58:	add    BYTE PTR [rax],al
   14000da5a:	add    BYTE PTR [rax],al
   14000da5c:	sub    al,0x0
   14000da5e:	(bad)  
   14000da5f:	add    BYTE PTR [rcx],al
   14000da61:	add    BYTE PTR [rcx+0x0],cl
   14000da64:	outs   dx,BYTE PTR ds:[rsi]
   14000da65:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000da69:	add    BYTE PTR [rdx+0x0],dh
   14000da6c:	outs   dx,BYTE PTR ds:[rsi]
   14000da6d:	add    BYTE PTR [rcx+0x0],ah
   14000da70:	ins    BYTE PTR es:[rdi],dx
   14000da71:	add    BYTE PTR [rsi+0x0],cl
   14000da74:	(bad)  
   14000da75:	add    BYTE PTR [rbp+0x0],ch
   14000da78:	add    BYTE PTR gs:[rax],al
   14000da7b:	add    BYTE PTR [rbp+0x0],ch
   14000da7e:	ja     0x14000da80
   14000da80:	pop    rdi
   14000da81:	add    BYTE PTR [rax+rax*1],dh
   14000da84:	(bad)  
   14000da85:	add    BYTE PTR [rax],al
   14000da87:	add    BYTE PTR [rax+rax*1],ah
   14000da8a:	add    BYTE PTR [rax],al
   14000da8c:	add    DWORD PTR [rax],eax
   14000da8e:	rex.WR add BYTE PTR [rbp+0x0],r12b
   14000da92:	add    BYTE PTR [ecx+0x0],ah
   14000da96:	ins    BYTE PTR es:[rdi],dx
   14000da97:	add    BYTE PTR [rbx+0x0],al
   14000da9a:	outs   dx,DWORD PTR ds:[rsi]
   14000da9b:	add    BYTE PTR [rax+0x0],dh
   14000da9e:	jns    0x14000daa0
   14000daa0:	jb     0x14000daa2
   14000daa2:	imul   eax,DWORD PTR [rax],0x680067
   14000daa8:	je     0x14000daaa
   14000daaa:	add    BYTE PTR [rax],al
   14000daac:	sub    BYTE PTR [rax],al
   14000daae:	add    BYTE PTR [rax],al
   14000dab0:	add    DWORD PTR [rax],eax
   14000dab2:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000dab6:	imul   eax,DWORD PTR [rax],0x690067
   14000dabc:	outs   dx,BYTE PTR ds:[rsi]
   14000dabd:	add    BYTE PTR [rcx+0x0],ah
   14000dac0:	ins    BYTE PTR es:[rdi],dx
   14000dac1:	add    BYTE PTR [rsi+0x0],al
   14000dac4:	imul   eax,DWORD PTR [rax],0x65006c
   14000daca:	outs   dx,BYTE PTR ds:[rsi]
   14000dacb:	add    BYTE PTR [rcx+0x0],ah
   14000dace:	ins    DWORD PTR es:[rdi],dx
   14000dacf:	add    BYTE PTR [rbp+0x0],ah
   14000dad2:	add    BYTE PTR [rax],al
   14000dad4:	and    BYTE PTR [rax],al
   14000dad6:	add    BYTE PTR [rax],al
   14000dad8:	add    DWORD PTR [rax],eax
   14000dada:	push   rax
   14000dadb:	add    BYTE PTR [rdx+0x0],dh
   14000dade:	outs   dx,DWORD PTR ds:[rsi]
   14000dadf:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000dae3:	add    BYTE PTR [rbx+0x0],ah
   14000dae6:	je     0x14000dae8
   14000dae8:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000daec:	ins    DWORD PTR es:[rdi],dx
   14000daed:	add    BYTE PTR [rbp+0x0],ah
   14000daf0:	add    BYTE PTR [rax],al
   14000daf2:	add    BYTE PTR [rax],al
   14000daf4:	and    al,0x0
   14000daf6:	add    BYTE PTR [rax],al
   14000daf8:	add    DWORD PTR [rax],eax
   14000dafa:	push   rax
   14000dafb:	add    BYTE PTR [rdx+0x0],dh
   14000dafe:	outs   dx,DWORD PTR ds:[rsi]
   14000daff:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000db03:	add    BYTE PTR [rbx+0x0],ah
   14000db06:	je     0x14000db08
   14000db08:	push   rsi
   14000db09:	add    BYTE PTR [rbp+0x0],ah
   14000db0c:	jb     0x14000db0e
   14000db0e:	jae    0x14000db10
   14000db10:	imul   eax,DWORD PTR [rax],0x6e006f
   14000db16:	add    BYTE PTR [rax],al
   14000db18:	add    BYTE PTR [rax],r8b
   14000db1b:	add    BYTE PTR [rcx],al
   14000db1d:	add    BYTE PTR [rsi+0x0],dl
   14000db20:	(bad)  
   14000db21:	add    BYTE PTR [rdx+0x0],dh
   14000db24:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000db28:	ins    BYTE PTR es:[rdi],dx
   14000db29:	add    BYTE PTR [rbp+0x0],ah
   14000db2c:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000db30:	data16 add BYTE PTR [rdi+0x0],ch
   14000db34:	add    BYTE PTR [rax],al
   14000db36:	add    BYTE PTR [rax],al
   14000db38:	and    al,0x0
   14000db3a:	add    al,0x0
   14000db3c:	add    BYTE PTR [rax],al
   14000db3e:	push   rsp
   14000db3f:	add    BYTE PTR [rdx+0x0],dh
   14000db42:	(bad)  
   14000db43:	add    BYTE PTR [rsi+0x0],ch
   14000db46:	jae    0x14000db48
   14000db48:	ins    BYTE PTR es:[rdi],dx
   14000db49:	add    BYTE PTR [rcx+0x0],ah
   14000db4c:	je     0x14000db4e
   14000db4e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000db54:	add    BYTE PTR [rax],al
   14000db56:	add    BYTE PTR [rax],al
   14000db58:	or     DWORD PTR [rax+rsi*4],eax
   14000db5b:	add    al,0x0
   14000db5d:	add    BYTE PTR [rax],al
   14000db5f:	add    BYTE PTR [rax],ch
   14000db61:	add    BYTE PTR [rax],al
   14000db63:	add    BYTE PTR [rax],dh
   14000db65:	add    BYTE PTR [rax],al
   14000db67:	add    BYTE PTR [rax+0x0],ah
   14000db6a:	add    BYTE PTR [rax],al
   14000db6c:	add    DWORD PTR [rax],eax
   14000db6e:	add    al,0x0
   14000db70:	add    BYTE PTR [rax],al
   14000db72:	add    BYTE PTR [rax],al
   14000db74:	add    BYTE PTR [rax+rax*1],0x0
	...
   14000db8c:	add    BYTE PTR [rax],al
   14000db8e:	add    BYTE PTR [rax],0x0
   14000db91:	add    BYTE PTR [rax],0x0
   14000db94:	add    BYTE PTR [rax+0x800080],al
   14000db9a:	add    BYTE PTR [rax],al
   14000db9c:	add    BYTE PTR [rax],0x80
   14000db9f:	add    BYTE PTR [rax-0x7fffff80],al
   14000dba5:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000dbac:	add    BYTE PTR [rax],al
   14000dbae:	inc    DWORD PTR [rax]
   14000dbb0:	add    bh,bh
   14000dbb2:	add    BYTE PTR [rax],al
   14000dbb4:	add    bh,bh
   14000dbb6:	inc    DWORD PTR [rax]
   14000dbb8:	inc    DWORD PTR [rax]
   14000dbba:	add    BYTE PTR [rax],al
   14000dbbc:	inc    DWORD PTR [rax]
   14000dbbe:	inc    DWORD PTR [rax]
   14000dbc0:	(bad)  
   14000dbc1:	inc    DWORD PTR [rax]
   14000dbc3:	add    bh,bh
   14000dbc5:	(bad)  
   14000dbc6:	inc    DWORD PTR [rax]
	...
   14000dc00:	add    BYTE PTR [rax],al
   14000dc02:	or     BYTE PTR [rax],al
	...
   14000dc18:	add    BYTE PTR [rax],al
   14000dc1a:	mov    edi,DWORD PTR [rax+0x0]
	...
   14000dc30:	add    BYTE PTR [rax],al
   14000dc32:	mov    bh,0xb9
   14000dc34:	mov    al,0x0
	...
   14000dc46:	add    BYTE PTR [rax],al
   14000dc48:	add    BYTE PTR [rax],cl
   14000dc4a:	mov    ecx,0x808b8b
	...
   14000dc5f:	add    BYTE PTR [rax],al
   14000dc61:	(bad)  
   14000dc62:	mov    eax,0x7889b9
	...
   14000dc77:	add    BYTE PTR [rax],al
   14000dc79:	or     ebx,DWORD PTR [rbx-0x7f466485]
	...
   14000dc8f:	add    BYTE PTR [rax],al
   14000dc91:	jns    0x14000dc1c
   14000dc93:	mov    DWORD PTR [rcx+0xb089],ecx
	...
   14000dca9:	cwde   
   14000dcaa:	fwait
   14000dcab:	fwait
   14000dcac:	jnp    0x14000dc46
   14000dcae:	cwde   
	...
   14000dcbf:	add    BYTE PTR [rdi],al
   14000dcc1:	cmp    DWORD PTR [rcx-0x77],edi
   14000dcc4:	cwde   
   14000dcc5:	fwait
   14000dcc6:	jns    0x14000dc48
   14000dcc8:	add    BYTE PTR [rax],al
   14000dcca:	add    BYTE PTR [rax],al
   14000dccc:	add    BYTE PTR [rax],al
   14000dcce:	add    BYTE PTR [rdi],al
	...
   14000dcd8:	add    DWORD PTR [rbx+0x79b99797],edx
   14000dcde:	mov    bh,0x98
   14000dce0:	add    BYTE PTR [rax],al
   14000dce2:	add    BYTE PTR [rax],al
   14000dce4:	add    BYTE PTR [rax],al
   14000dce6:	add    BYTE PTR [rax+0x0],dl
   14000dcec:	add    BYTE PTR [rax],al
   14000dcee:	add    BYTE PTR [rax],al
   14000dcf0:	(bad)  
   14000dcf1:	(bad)  
   14000dcf2:	adc    edi,DWORD PTR [rcx]
   14000dcf4:	jns    0x14000dcad
   14000dcf6:	fwait
   14000dcf7:	fwait
   14000dcf8:	jo     0x14000dcfa
   14000dcfa:	add    BYTE PTR [rax],al
   14000dcfc:	add    BYTE PTR [rax],al
   14000dcfe:	add    esi,DWORD PTR [rax+0x0]
   14000dd01:	add    BYTE PTR [rax],al
   14000dd03:	add    BYTE PTR [rax],al
   14000dd05:	add    BYTE PTR [rax],al
   14000dd07:	(bad)  
   14000dd08:	adc    DWORD PTR [rcx],edx
   14000dd0a:	xchg   ebp,eax
   14000dd0b:	xchg   edi,eax
   14000dd0c:	xchg   edi,eax
   14000dd0d:	xchg   edi,eax
   14000dd0e:	cwde   
   14000dd0f:	jns    0x14000dc98
   14000dd11:	add    BYTE PTR [rax],al
   14000dd13:	add    BYTE PTR [rax],al
   14000dd15:	add    BYTE PTR [rbp+0x0],dl
   14000dd1b:	add    BYTE PTR [rax],al
   14000dd1d:	jo     0x14000dd1f
   14000dd1f:	jno    0x14000dd32
   14000dd21:	jno    0x14000dd54
   14000dd23:	cmp    DWORD PTR [rcx],edi
   14000dd25:	jns    0x14000dce0
   14000dd27:	mov    bh,0x9b
   14000dd29:	jo     0x14000dd2b
   14000dd2b:	add    BYTE PTR [rax],al
   14000dd2d:	jns    0x14000dda8
   14000dd2f:	add    BYTE PTR [rax],al
   14000dd31:	add    BYTE PTR [rax],al
   14000dd33:	add    BYTE PTR [rsi+0x116467e7],al
   14000dd39:	adc    DWORD PTR [rcx+0x71],edx
   14000dd3c:	jns    0x14000dd75
   14000dd3e:	cwde   
   14000dd3f:	fwait
   14000dd40:	jns    0x14000dcf9
   14000dd42:	add    BYTE PTR [rax],0x7
   14000dd45:	xchg   edi,eax
   14000dd46:	cwde   
   14000dd47:	add    BYTE PTR [rax],al
   14000dd49:	add    BYTE PTR [rax],al
   14000dd4b:	(bad)  
   14000dd4c:	out    0xc8,eax
   14000dd4e:	enter  0x1466,0x13
   14000dd52:	adc    DWORD PTR [rcx],ebx
   14000dd54:	(bad)  
   14000dd55:	cdq    
   14000dd56:	jns    0x14000ddd1
   14000dd58:	mov    eax,0x9997989b
   14000dd5d:	jns    0x14000dd8f
   14000dd5f:	add    BYTE PTR [rax],al
   14000dd61:	add    BYTE PTR [rax],al
   14000dd63:	out    0xc8,eax
   14000dd65:	out    0xe7,eax
   14000dd67:	(bad)  
   14000dd68:	(bad)  
   14000dd69:	adc    DWORD PTR [rdi],edx
   14000dd6b:	(bad)  
   14000dd6c:	sbb    DWORD PTR [rbx-0x68],esi
   14000dd6f:	mov    bh,0x98
   14000dd71:	mov    bh,0x7b
   14000dd73:	fwait
   14000dd74:	xchg   edi,eax
   14000dd75:	xchg   ebx,eax
   14000dd76:	push   rax
   14000dd77:	add    BYTE PTR [rax],al
   14000dd79:	add    BYTE PTR [rsi+0x7e],bh
   14000dd7c:	jle    0x14000dd46
   14000dd7e:	enter  0x6668,0x5
   14000dd82:	adc    DWORD PTR [rcx],edx
   14000dd84:	xor    DWORD PTR [rdi+0x79b99793],edx
   14000dd8a:	mov    ecx,0x797989
   14000dd8f:	add    BYTE PTR [rax],al
   14000dd91:	(bad)  
   14000dd92:	out    0xc8,eax
   14000dd94:	enter  0x7e6e,0x7c
   14000dd98:	jbe    0x14000ddea
   14000dd9a:	xor    DWORD PTR [rcx],edx
   14000dd9c:	push   rbx
   14000dd9d:	push   rbx
   14000dd9e:	xchg   edi,eax
   14000dd9f:	cwde   
   14000dda0:	fwait
   14000dda1:	jnp    0x14000de1c
   14000dda3:	jns    0x14000dd3c
   14000dda5:	xchg   edi,eax
   14000dda6:	add    BYTE PTR [rax],al
   14000dda8:	or     bh,ah
   14000ddaa:	jle    0x14000de2a
   14000ddac:	jle    0x14000de2a
   14000ddae:	mov    WORD PTR [rsi+0x71016586],es
   14000ddb4:	adc    DWORD PTR [rdi-0x46764669],edx
   14000ddba:	mov    DWORD PTR [rdi+0x9793],esi
   14000ddc0:	xchg   BYTE PTR [rdi+riz*8+0x6ee87c7e],cl
   14000ddc7:	jl     0x14000de40
   14000ddc9:	jbe    0x14000dddb
   14000ddcb:	adc    DWORD PTR [rip+0xffffffffb8793931],esi        # 0xf87a1702
   14000ddd1:	cwde   
   14000ddd2:	mov    ecx,0x707979
   14000ddd7:	add    BYTE PTR [rax],al
   14000ddd9:	mov    bh,ah
   14000dddb:	jl     0x14000ddc5
   14000dddd:	addr32 out 0x7e,eax
   14000dde0:	jl     0x14000de58
   14000dde2:	push   rcx
   14000dde3:	adc    eax,0x98971711
   14000dde8:	fwait
   14000dde9:	mov    DWORD PTR [rbx-0x69],edi
   14000ddec:	cdq    
   14000dded:	jo     0x14000ddef
   14000ddef:	add    BYTE PTR [rax],al
   14000ddf1:	add    BYTE PTR [rax],cl
   14000ddf3:	call   0xcc8d5a76
   14000ddf8:	xchg   BYTE PTR [rax+riz*2+0x30],dh
   14000ddfc:	xor    DWORD PTR [rcx],edi
   14000ddfe:	jns    0x14000ddb9
   14000de00:	mov    ebx,DWORD PTR [rbx+0x70799997]
   14000de06:	add    BYTE PTR [rax],al
   14000de08:	add    BYTE PTR [rax],al
   14000de0a:	add    BYTE PTR [rax],cl
   14000de0c:	in     al,dx
   14000de0d:	mov    gs,WORD PTR [rsi+0x76]
   14000de10:	je     0x14000de23
   14000de12:	rex.RXB add eax,0x7b395111
   14000de18:	cwde   
   14000de19:	mov    bh,0x79
   14000de1b:	mov    DWORD PTR [rcx+0x0],edi
   14000de1e:	add    BYTE PTR [rax],al
   14000de20:	add    BYTE PTR [rax],al
   14000de22:	add    BYTE PTR [rax],al
   14000de24:	add    BYTE PTR [rdi+rax*4+0x70141c7],cl
   14000de2b:	add    DWORD PTR [rcx],edx
   14000de2d:	xor    DWORD PTR [rbx-0x68],edx
   14000de30:	fwait
   14000de31:	cwde   
   14000de32:	fwait
   14000de33:	xchg   edi,eax
   14000de34:	xchg   edi,eax
	...
   14000de3d:	add    BYTE PTR [rsi+0x14163474],cl
   14000de43:	jo     0x14000de96
   14000de45:	(bad)  
   14000de46:	xchg   edi,eax
   14000de47:	fwait
   14000de48:	js     0x14000de03
   14000de4a:	mov    DWORD PTR [rcx+0x38],edi
	...
   14000de55:	add    BYTE PTR [rax],al
   14000de57:	je     0x14000de70
   14000de59:	add    DWORD PTR [rcx+0x61],eax
   14000de5c:	add    edx,DWORD PTR [rcx]
   14000de5e:	sbb    DWORD PTR [rcx-0x47],edi
   14000de61:	mov    edx,DWORD PTR [rbx+0x9097]
	...
   14000de6f:	(bad)  
   14000de70:	gs gs and eax,0x17175106
   14000de77:	cwde   
   14000de78:	fwait
   14000de79:	jns    0x14000de04
   14000de7b:	jns    0x14000deed
	...
   14000de85:	add    BYTE PTR [rax],al
   14000de87:	add    BYTE PTR [rsi+0x67],ah
   14000de8a:	rex.RXB push r14
   14000de8c:	adc    BYTE PTR [rcx],dl
   14000de8e:	adc    ebx,DWORD PTR [rbx-0x66688475]
	...
   14000dea0:	(bad)  
   14000dea1:	(bad)  
   14000dea2:	data16 rex.RXB (bad) 
   14000dea5:	push   rbx
   14000dea6:	(bad)  
   14000dea7:	xchg   edi,eax
   14000dea8:	fwait
   14000dea9:	jns    0x14000de64
   14000deab:	jns    0x14000dead
	...
   14000deb9:	out    0x67,eax
   14000debb:	fs je  0x14000decf
   14000debe:	adc    DWORD PTR [rbx-0x75],edi
   14000dec1:	jnp    0x14000df1c
   14000dec3:	ja     0x14000dec5
	...
   14000ded1:	add    BYTE PTR [rsi+riz*2+0x66],bh
   14000ded5:	adc    DWORD PTR [rcx-0x67],esi
   14000ded8:	mov    bh,0xb9
   14000deda:	jns    0x14000de6c
	...
   14000dee8:	add    BYTE PTR [rax],al
   14000deea:	add    BYTE PTR [rsi+0x76],dh
   14000deed:	adc    esi,DWORD PTR [r15-0x45]
   14000def1:	jns    0x14000df6c
   14000def3:	jo     0x14000def5
	...
   14000df01:	add    BYTE PTR [rax],al
   14000df03:	(bad)  
   14000df04:	(bad)  
   14000df05:	jo     0x14000df1c
   14000df07:	fwait
   14000df08:	jnp    0x14000df85
   14000df0a:	xchg   edi,eax
   14000df0b:	nop
	...
   14000df1c:	xchg   BYTE PTR [rbp+0x13],ah
   14000df1f:	sbb    DWORD PTR [rbx+0x7979],ecx
	...
   14000df31:	add    BYTE PTR [rax],al
   14000df33:	add    BYTE PTR [riz*8-0x464784ff],cl
   14000df3a:	xchg   edi,eax
	...
   14000df4b:	add    BYTE PTR [rax],al
   14000df4d:	adc    WORD PTR [rdi],dx
   14000df50:	mov    ebx,0x9797
	...
   14000df65:	xchg   BYTE PTR [rbp+0x19],dh
   14000df68:	mov    ecx,DWORD PTR [rcx+0x70]
	...
   14000df7a:	add    BYTE PTR [rax],al
   14000df7c:	add    BYTE PTR [rsi],al
   14000df7e:	(bad)  
   14000df7f:	(bad)  
   14000df80:	mov    eax,0x9093
	...
   14000df95:	add    BYTE PTR [rcx+rbx*1-0x45],dh
   14000df99:	xchg   edi,eax
	...
   14000dfae:	jbe    0x14000dfc7
   14000dfb0:	mov    ebx,DWORD PTR [rcx+0x0]
	...
   14000dfc3:	add    BYTE PTR [rax],al
   14000dfc5:	add    BYTE PTR [rsi],cl
   14000dfc7:	adc    DWORD PTR [rcx+0x70],edi
	...
   14000dfdd:	add    BYTE PTR [rax],al
   14000dfdf:	jno    0x14000e05a
   14000dfe1:	jo     0x14000dfe3
	...
   14000dff7:	jne    0x14000e010
	...
   14000e00d:	add    BYTE PTR [rax],al
   14000e00f:	or     BYTE PTR [rax+0x0],dh
	...
   14000e046:	add    BYTE PTR [rax],al
   14000e048:	(bad)  
   14000e049:	(bad)  
   14000e04a:	(bad)  
   14000e04b:	(bad)  
   14000e04c:	(bad)  
   14000e04d:	inc    DWORD PTR [rax]
   14000e04f:	add    bh,bh
   14000e051:	(bad)  
   14000e052:	(bad)  
   14000e053:	(bad)  
   14000e054:	(bad)  
   14000e055:	inc    DWORD PTR [rax]
   14000e057:	add    bh,bh
   14000e059:	(bad)  
   14000e05a:	sti    
   14000e05b:	(bad)  
   14000e05c:	(bad)  
   14000e05d:	inc    DWORD PTR [rax]
   14000e05f:	add    bh,bh
   14000e061:	push   rax
   14000e063:	(bad)  
   14000e064:	(bad)  
   14000e065:	inc    DWORD PTR [rax]
   14000e067:	add    bh,bh
   14000e069:	push   rax
   14000e06b:	jg     0x14000e06c
   14000e06d:	inc    DWORD PTR [rax]
   14000e06f:	add    bh,bh
   14000e071:	jmp    rax
   14000e073:	(bad)  
   14000e074:	(bad)  
   14000e075:	inc    DWORD PTR [rax]
   14000e077:	add    bh,bh
   14000e079:	jmp    rax
   14000e07b:	ud0    edi,edi
   14000e07e:	add    BYTE PTR [rax],al
   14000e080:	(bad)  
   14000e081:	jmp    rax
   14000e083:	(bad)  
   14000e084:	(bad)  
   14000e085:	inc    DWORD PTR [rax]
   14000e087:	add    bh,bh
   14000e089:	inc    eax
   14000e08b:	(bad)  
   14000e08c:	(bad)  
   14000e08d:	inc    DWORD PTR [rax]
   14000e08f:	add    bh,bh
   14000e091:	inc    eax
   14000e093:	add    edi,edi
   14000e095:	inc    DWORD PTR [rax]
   14000e097:	add    bh,bh
   14000e099:	inc    DWORD PTR [rax+0xfeff01]
   14000e09f:	add    bh,bh
   14000e0a1:	inc    DWORD PTR [rax+0xfdff00]
   14000e0a7:	add    bh,bh
   14000e0a9:	inc    DWORD PTR [rax]
   14000e0ab:	add    BYTE PTR [rdi-0x7],bh
   14000e0ae:	add    BYTE PTR [rax],al
   14000e0b0:	(bad)  
   14000e0b1:	inc    BYTE PTR [rax]
   14000e0b3:	add    BYTE PTR [rdi],bh
   14000e0b5:	repz add BYTE PTR [rax],al
   14000e0b8:	(bad)  
   14000e0b9:	fadd   QWORD PTR [rax]
   14000e0bb:	add    BYTE PTR [rdi],bl
   14000e0bd:	ret    
   14000e0be:	add    BYTE PTR [rax],al
   14000e0c0:	inc    DWORD PTR [rax]
   14000e0c2:	add    BYTE PTR [rax],al
   14000e0c4:	(bad)  
   14000e0c5:	add    DWORD PTR [rax],0x0
   14000e0c8:	inc    BYTE PTR [rax]
   14000e0ca:	add    BYTE PTR [rax],al
   14000e0cc:	add    BYTE PTR [rdi],al
   14000e0ce:	add    BYTE PTR [rax],al
   14000e0d0:	cld    
   14000e0d1:	add    BYTE PTR [rax],al
   14000e0d3:	add    BYTE PTR [rax],al
   14000e0d5:	(bad)  
   14000e0d6:	add    BYTE PTR [rax],al
   14000e0d8:	lock add BYTE PTR [rax],al
   14000e0db:	add    BYTE PTR [rax],al
   14000e0dd:	sldt   WORD PTR [rax]
   14000e0e0:	loopne 0x14000e0e2
   14000e0e2:	add    BYTE PTR [rax],al
   14000e0e4:	add    BYTE PTR [rdi],cl
   14000e0e6:	add    BYTE PTR [rax],al
   14000e0e8:	add    BYTE PTR [rax],0x0
   14000e0eb:	add    BYTE PTR [rax],al
   14000e0ed:	sldt   WORD PTR [rax]
   14000e0f0:	add    BYTE PTR [rax],al
   14000e0f2:	add    BYTE PTR [rax],al
   14000e0f4:	add    BYTE PTR [rdi],bl
   14000e0f6:	add    BYTE PTR [rax],al
   14000e0f8:	rol    BYTE PTR [rax],0x0
   14000e0fb:	add    BYTE PTR [rax],al
   14000e0fd:	(bad)  
   14000e0fe:	add    BYTE PTR [rax],al
   14000e100:	clc    
   14000e101:	add    BYTE PTR [rax],al
   14000e103:	add    BYTE PTR [rax],al
   14000e105:	(bad)  
   14000e106:	add    BYTE PTR [rax],al
   14000e108:	inc    BYTE PTR [rax]
   14000e10a:	add    BYTE PTR [rax],al
   14000e10c:	add    BYTE PTR [rdi],bh
   14000e10e:	add    BYTE PTR [rax],al
   14000e110:	inc    eax
   14000e112:	add    BYTE PTR [rax],al
   14000e114:	add    BYTE PTR [rdi],bh
   14000e116:	add    BYTE PTR [rax],al
   14000e118:	push   rax
   14000e11a:	add    BYTE PTR [rax],al
   14000e11c:	add    BYTE PTR [rdi],bh
   14000e11e:	add    BYTE PTR [rax],al
   14000e120:	(bad)  
   14000e121:	cld    
   14000e122:	add    BYTE PTR [rax],al
   14000e124:	add    BYTE PTR [rdi+0x0],bh
   14000e127:	add    bh,bh
   14000e129:	inc    BYTE PTR [rax]
   14000e12b:	add    BYTE PTR [rax],al
   14000e12d:	jg     0x14000e12f
   14000e12f:	add    bh,bh
   14000e131:	inc    DWORD PTR [rax]
   14000e133:	add    BYTE PTR [rax],al
   14000e135:	inc    DWORD PTR [rax]
   14000e137:	add    bh,bh
   14000e139:	inc    DWORD PTR [rax+0xff0000]
   14000e13f:	add    bh,bh
   14000e141:	inc    eax
   14000e143:	add    BYTE PTR [rax],al
   14000e145:	inc    DWORD PTR [rax]
   14000e147:	add    bh,bh
   14000e149:	push   rax
   14000e14b:	add    BYTE PTR [rcx],al
   14000e14d:	inc    DWORD PTR [rax]
   14000e14f:	add    bh,bh
   14000e151:	(bad)  
   14000e152:	cld    
   14000e153:	add    BYTE PTR [rcx],al
   14000e155:	inc    DWORD PTR [rax]
   14000e157:	add    bh,bh
   14000e159:	(bad)  
   14000e15a:	inc    BYTE PTR [rax]
   14000e15c:	add    edi,edi
   14000e15e:	add    BYTE PTR [rax],al
   14000e160:	(bad)  
   14000e161:	(bad)  
   14000e162:	inc    DWORD PTR [rax]
   14000e164:	add    edi,edi
   14000e166:	add    BYTE PTR [rax],al
   14000e168:	(bad)  
   14000e169:	(bad)  
   14000e16a:	inc    DWORD PTR [rax+0xff03]
   14000e170:	(bad)  
   14000e171:	(bad)  
   14000e172:	inc    eax
   14000e174:	add    edi,edi
   14000e176:	add    BYTE PTR [rax],al
   14000e178:	(bad)  
   14000e179:	(bad)  
   14000e17a:	inc    eax
   14000e17c:	(bad)  
   14000e17d:	inc    DWORD PTR [rax]
   14000e17f:	add    bh,bh
   14000e181:	(bad)  
   14000e182:	jmp    rax
   14000e184:	(bad)  
   14000e185:	inc    DWORD PTR [rax]
   14000e187:	add    bh,bh
   14000e189:	(bad)  
   14000e18a:	push   rax
   14000e18c:	ud0    eax,DWORD PTR [rax]
   14000e18f:	add    bh,bh
   14000e191:	(bad)  
   14000e192:	push   rax
   14000e194:	ud0    eax,DWORD PTR [rax]
   14000e197:	add    bh,bh
   14000e199:	(bad)  
   14000e19a:	(bad)  
   14000e19b:	clc    
   14000e19c:	(bad)  
   14000e19d:	inc    DWORD PTR [rax]
   14000e19f:	add    bh,bh
   14000e1a1:	(bad)  
   14000e1a2:	(bad)  
   14000e1a3:	cld    
   14000e1a4:	(bad)  
   14000e1a5:	inc    DWORD PTR [rax]
   14000e1a7:	add    bh,bh
   14000e1a9:	(bad)  
   14000e1aa:	(bad)  
   14000e1ab:	cld    
   14000e1ac:	(bad)  
   14000e1ad:	inc    DWORD PTR [rax]
   14000e1af:	add    bh,bh
   14000e1b1:	(bad)  
   14000e1b2:	(bad)  
   14000e1b3:	(bad)  
   14000e1b4:	jg     0x14000e1b5
   14000e1b6:	add    BYTE PTR [rax],al
   14000e1b8:	(bad)  
   14000e1b9:	(bad)  
   14000e1ba:	(bad)  
   14000e1bb:	(bad)  
   14000e1bc:	(bad)  
   14000e1bd:	inc    DWORD PTR [rax]
   14000e1bf:	add    bh,bh
   14000e1c1:	(bad)  
   14000e1c2:	(bad)  
   14000e1c3:	(bad)  
   14000e1c4:	(bad)  
   14000e1c5:	inc    DWORD PTR [rax]
   14000e1c7:	add    BYTE PTR [rax],ch
   14000e1c9:	add    BYTE PTR [rax],al
   14000e1cb:	add    BYTE PTR [rax],ah
   14000e1cd:	add    BYTE PTR [rax],al
   14000e1cf:	add    BYTE PTR [rax+0x0],al
   14000e1d2:	add    BYTE PTR [rax],al
   14000e1d4:	add    DWORD PTR [rax],eax
   14000e1d6:	add    al,0x0
   14000e1d8:	add    BYTE PTR [rax],al
   14000e1da:	add    BYTE PTR [rax],al
   14000e1dc:	add    BYTE PTR [rdx],al
	...
   14000e1f6:	add    BYTE PTR [rax],0x0
   14000e1f9:	add    BYTE PTR [rax],0x0
   14000e1fc:	add    BYTE PTR [rax+0x800080],al
   14000e202:	add    BYTE PTR [rax],al
   14000e204:	add    BYTE PTR [rax],0x80
   14000e207:	add    BYTE PTR [rax-0x7fffff80],al
   14000e20d:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000e214:	add    BYTE PTR [rax],al
   14000e216:	inc    DWORD PTR [rax]
   14000e218:	add    bh,bh
   14000e21a:	add    BYTE PTR [rax],al
   14000e21c:	add    bh,bh
   14000e21e:	inc    DWORD PTR [rax]
   14000e220:	inc    DWORD PTR [rax]
   14000e222:	add    BYTE PTR [rax],al
   14000e224:	inc    DWORD PTR [rax]
   14000e226:	inc    DWORD PTR [rax]
   14000e228:	(bad)  
   14000e229:	inc    DWORD PTR [rax]
   14000e22b:	add    bh,bh
   14000e22d:	(bad)  
   14000e22e:	inc    DWORD PTR [rax]
	...
   14000e254:	add    BYTE PTR [rax],al
   14000e256:	or     BYTE PTR [rdi+0x0],dh
	...
   14000e264:	add    BYTE PTR [rax],al
   14000e266:	or     edi,DWORD PTR [rbx-0x48]
	...
   14000e275:	add    BYTE PTR [rax],cl
   14000e277:	mov    ecx,0x8089
	...
   14000e284:	add    BYTE PTR [rax],al
   14000e286:	jns    0x14000e23f
   14000e288:	mov    bh,0xb0
	...
   14000e296:	xchg   edi,eax
   14000e297:	xchg   edi,eax
   14000e298:	cdq    
   14000e299:	jns    0x14000e29b
	...
   14000e2a3:	add    BYTE PTR [rax],al
   14000e2a5:	(bad)  
   14000e2a6:	cmp    DWORD PTR [rcx-0x75],edi
   14000e2a9:	cwde   
   14000e2aa:	mov    al,0x0
   14000e2ac:	add    BYTE PTR [rax],al
   14000e2ae:	add    BYTE PTR [rax],cl
   14000e2b0:	add    BYTE PTR [rax],al
   14000e2b2:	add    BYTE PTR [rax],al
   14000e2b4:	add    BYTE PTR [rcx],al
   14000e2b6:	adc    edx,DWORD PTR [rbx+0x589b97]
   14000e2bc:	add    BYTE PTR [rax],al
   14000e2be:	add    BYTE PTR [rax],dl
   14000e2c0:	add    BYTE PTR [rax],al
   14000e2c2:	add    BYTE PTR [rax],al
   14000e2c4:	add    BYTE PTR [rcx],dl
   14000e2c6:	push   rcx
   14000e2c7:	jns    0x14000e342
   14000e2c9:	jns    0x14000e284
   14000e2cb:	add    BYTE PTR [rax],0x0
   14000e2ce:	jns    0x14000e250
   14000e2d0:	add    BYTE PTR [rax],al
   14000e2d2:	or     BYTE PTR [rdi+0x66],ah
   14000e2d5:	push   rbx
   14000e2d6:	adc    DWORD PTR [rbx],edx
   14000e2d8:	adc    ebx,DWORD PTR [rax+0x7809b9b]
   14000e2de:	xchg   edi,eax
   14000e2df:	add    BYTE PTR [rax],al
   14000e2e1:	add    BYTE PTR [rsi-0x38],bh
   14000e2e4:	out    0x65,eax
   14000e2e6:	adc    edx,DWORD PTR [rcx-0x69]
   14000e2e9:	xchg   edi,eax
   14000e2ea:	mov    bh,0x89
   14000e2ec:	jns    0x14000e327
   14000e2ee:	jns    0x14000e2f0
   14000e2f0:	add    BYTE PTR [rsi],cl
   14000e2f2:	ja     0x14000e2db
   14000e2f4:	enter  0x166,0x13
   14000e2f8:	push   rbx
   14000e2f9:	xchg   edi,eax
   14000e2fa:	cdq    
   14000e2fb:	mov    bh,0xb7
   14000e2fd:	xchg   edi,eax
   14000e2fe:	cwde   
   14000e2ff:	add    BYTE PTR [rdi],al
   14000e301:	out    0xce,eax
   14000e303:	jle    0x14000e381
   14000e305:	xchg   DWORD PTR [rbp+0x11],eax
   14000e308:	adc    eax,0x97988b39
   14000e30d:	xchg   ebx,eax
   14000e30e:	nop
   14000e30f:	add    BYTE PTR [rax],cl
   14000e311:	enter  0x7ce7,0x8e
   14000e315:	jl     0x14000e389
   14000e317:	adc    DWORD PTR [rcx],esi
   14000e319:	xchg   edi,eax
   14000e31a:	cwde   
   14000e31b:	mov    ecx,0x7079b9
   14000e320:	add    BYTE PTR [rax],cl
   14000e322:	out    0xe7,eax
   14000e324:	in     eax,0xe7
   14000e326:	gs add eax,0x779b1317
   14000e32c:	jns    0x14000e3a7
   14000e32e:	add    BYTE PTR [rax],al
   14000e330:	add    BYTE PTR [rax],al
   14000e332:	or     BYTE PTR [rsi-0x39],bh
   14000e335:	je     0x14000e347
   14000e337:	jo     0x14000e34a
   14000e339:	xchg   edi,eax
   14000e33a:	cwde   
   14000e33b:	fwait
   14000e33c:	xchg   edi,eax
   14000e33d:	xchg   edi,eax
   14000e33e:	add    BYTE PTR [rax],al
   14000e340:	add    BYTE PTR [rax],al
   14000e342:	add    BYTE PTR [rax],al
   14000e344:	xchg   BYTE PTR [rax+0x14],dl
   14000e347:	jno    0x14000e35c
   14000e349:	push   rbx
   14000e34a:	fwait
   14000e34b:	jnp    0x14000e3c6
   14000e34d:	(bad)  
   14000e34e:	add    BYTE PTR [rax],al
   14000e350:	add    BYTE PTR [rax],al
   14000e352:	add    BYTE PTR [rax],al
   14000e354:	add    BYTE PTR [rbp+0x61],ah
   14000e357:	(bad)  
   14000e358:	adc    DWORD PTR [rdi],edx
   14000e35a:	cwde   
   14000e35b:	cwde   
   14000e35c:	xchg   edi,eax
   14000e35d:	nop
   14000e35e:	add    BYTE PTR [rax],al
   14000e360:	add    BYTE PTR [rax],al
   14000e362:	add    BYTE PTR [rax],al
   14000e364:	add    BYTE PTR [rsi+0x74],dh
   14000e367:	je     0x14000e37e
   14000e369:	xor    DWORD PTR [rbx-0x47],edi
   14000e36c:	mov    ecx,0x70
   14000e371:	add    BYTE PTR [rax],al
   14000e373:	add    BYTE PTR [rax],al
   14000e375:	or     BYTE PTR [rsi+0x67],ah
   14000e378:	(bad)  
   14000e379:	adc    DWORD PTR [rax+0x9097b7],ebx
   14000e37f:	add    BYTE PTR [rax],al
   14000e381:	add    BYTE PTR [rax],al
   14000e383:	add    BYTE PTR [rax],al
   14000e385:	add    BYTE PTR [rdi],al
   14000e387:	(bad)  
   14000e388:	(bad)  
   14000e389:	(bad)  
   14000e38a:	cmp    DWORD PTR [rdi+0x97],esi
   14000e390:	add    BYTE PTR [rax],al
   14000e392:	add    BYTE PTR [rax],al
   14000e394:	add    BYTE PTR [rax],al
   14000e396:	add    BYTE PTR [rdi],al
   14000e398:	adc    DWORD PTR fs:[rbx-0x77],edi
   14000e39c:	jns    0x14000e39e
	...
   14000e3a6:	add    BYTE PTR [rax],al
   14000e3a8:	push   cx
   14000e3aa:	fwait
   14000e3ab:	mov    bh,0x98
	...
   14000e3b5:	add    BYTE PTR [rax],al
   14000e3b7:	add    BYTE PTR [rsi],al
   14000e3b9:	jno    0x14000e433
   14000e3bb:	mov    ecx,0x70
	...
   14000e3c8:	or     BYTE PTR [rcx+0x1b],ah
   14000e3cb:	mov    DWORD PTR [rax],esi
	...
   14000e3d9:	sbb    edi,DWORD PTR gs:[rcx+0x80]
	...
   14000e3e8:	add    BYTE PTR [rsi],al
   14000e3ea:	push   rdi
   14000e3eb:	jns    0x14000e3ed
	...
   14000e3f9:	or     BYTE PTR [rbx],bl
   14000e3fb:	nop
	...
   14000e408:	add    BYTE PTR [rax],al
   14000e40a:	gs jo  0x14000e40d
	...
   14000e42d:	add    BYTE PTR [rax],al
   14000e42f:	add    bh,bh
   14000e431:	(bad)  
   14000e432:	(bad)  
   14000e433:	(bad)  
   14000e434:	(bad)  
   14000e435:	(bad)  
   14000e436:	(bad)  
   14000e437:	(bad)  
   14000e438:	(bad)  
   14000e439:	clc    
   14000e43a:	(bad)  
   14000e43b:	(bad)  
   14000e43c:	(bad)  
   14000e43d:	clc    
   14000e43e:	(bad)  
   14000e43f:	(bad)  
   14000e440:	(bad)  
   14000e441:	clc    
   14000e442:	(bad)  
   14000e443:	(bad)  
   14000e444:	push   rax
   14000e446:	(bad)  
   14000e447:	(bad)  
   14000e448:	push   rax
   14000e44a:	ud0    edi,edi
   14000e44d:	loopne 0x14000e456
   14000e44f:	(bad)  
   14000e450:	jmp    rax
   14000e452:	add    edi,ebp
   14000e454:	inc    eax
   14000e456:	add    ecx,esi
   14000e458:	clc    
   14000e459:	add    BYTE PTR [rax],al
   14000e45b:	movsxd esi,eax
   14000e45d:	add    BYTE PTR [rax],al
   14000e45f:	add    esp,eax
   14000e461:	add    BYTE PTR [rax],al
   14000e463:	add    eax,DWORD PTR [rax-0x7ff90000]
   14000e469:	add    BYTE PTR [rax],al
   14000e46b:	(bad)  
   14000e46c:	loopne 0x14000e46e
   14000e46e:	add    BYTE PTR [rdi],cl
   14000e470:	clc    
   14000e471:	add    BYTE PTR [rax],al
   14000e473:	ud0    eax,DWORD PTR [rax]
   14000e476:	add    BYTE PTR [rdi],cl
   14000e478:	inc    eax
   14000e47a:	add    BYTE PTR [rdi],bl
   14000e47c:	inc    eax
   14000e47e:	add    BYTE PTR [rdi],bl
   14000e480:	jmp    rax
   14000e482:	add    BYTE PTR [rdi],bl
   14000e484:	(bad)  
   14000e485:	clc    
   14000e486:	add    BYTE PTR [rdi],bh
   14000e488:	(bad)  
   14000e489:	inc    BYTE PTR [rax]
   14000e48b:	(bad)  
   14000e48c:	(bad)  
   14000e48d:	inc    DWORD PTR [rax]
   14000e48f:	(bad)  
   14000e490:	(bad)  
   14000e491:	inc    DWORD PTR [rax-0x7f000081]
   14000e497:	jg     0x14000e498
   14000e499:	inc    eax
   14000e49b:	jg     0x14000e49c
   14000e49d:	jmp    rax
   14000e49f:	(bad)  
   14000e4a0:	(bad)  
   14000e4a1:	jmp    rcx
   14000e4a3:	(bad)  
   14000e4a4:	(bad)  
   14000e4a5:	push   rcx
   14000e4a7:	(bad)  
   14000e4a8:	(bad)  
   14000e4a9:	(bad)  
   14000e4aa:	(bad)  
   14000e4ab:	(bad)  
   14000e4ac:	(bad)  
   14000e4ad:	(bad)  
   14000e4ae:	(bad)  
   14000e4af:	jmp    FWORD PTR [rax]
   14000e4b1:	add    BYTE PTR [rax],al
   14000e4b3:	add    BYTE PTR [rax],dl
   14000e4b5:	add    BYTE PTR [rax],al
   14000e4b7:	add    BYTE PTR [rax],ah
   14000e4b9:	add    BYTE PTR [rax],al
   14000e4bb:	add    BYTE PTR [rcx],al
   14000e4bd:	add    BYTE PTR [rax+rax*1],al
   14000e4c0:	add    BYTE PTR [rax],al
   14000e4c2:	add    BYTE PTR [rax],al
   14000e4c4:	add    BYTE PTR [rax],0x0
	...
   14000e4db:	add    BYTE PTR [rax],al
   14000e4dd:	add    BYTE PTR [rax+0x800000],al
   14000e4e3:	add    BYTE PTR [rax],al
   14000e4e5:	add    BYTE PTR [rax+0x8000],0x0
   14000e4ec:	add    BYTE PTR [rax],0x80
   14000e4ef:	add    BYTE PTR [rax-0x7fffff80],al
   14000e4f5:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000e4fc:	add    BYTE PTR [rax],al
   14000e4fe:	inc    DWORD PTR [rax]
   14000e500:	add    bh,bh
   14000e502:	add    BYTE PTR [rax],al
   14000e504:	add    bh,bh
   14000e506:	inc    DWORD PTR [rax]
   14000e508:	inc    DWORD PTR [rax]
   14000e50a:	add    BYTE PTR [rax],al
   14000e50c:	inc    DWORD PTR [rax]
   14000e50e:	inc    DWORD PTR [rax]
   14000e510:	(bad)  
   14000e511:	inc    DWORD PTR [rax]
   14000e513:	add    bh,bh
   14000e515:	(bad)  
   14000e516:	inc    DWORD PTR [rax]
	...
   14000e520:	add    BYTE PTR [rax],al
   14000e522:	add    BYTE PTR [rbx],cl
   14000e524:	add    BYTE PTR [rax],al
   14000e526:	add    BYTE PTR [rax],al
   14000e528:	add    BYTE PTR [rax],al
   14000e52a:	add    BYTE PTR [rdi-0x48],dh
   14000e52d:	add    BYTE PTR [rax],al
   14000e52f:	add    BYTE PTR [rax],al
   14000e531:	add    BYTE PTR [rax],al
   14000e533:	cdq    
   14000e534:	jns    0x14000e536
   14000e536:	add    BYTE PTR [rax],al
   14000e538:	add    BYTE PTR [rax],al
   14000e53a:	(bad)  
   14000e53b:	adc    ebx,DWORD PTR [rax+0x8000b0]
   14000e541:	xchg   BYTE PTR [rdi+rdx*1-0x6d],dh
   14000e545:	cwde   
   14000e546:	ja     0x14000e4d8
   14000e548:	(bad)  
   14000e549:	out    0xe7,eax
   14000e54b:	adc    DWORD PTR [rdi],edx
   14000e54d:	fwait
   14000e54e:	cdq    
   14000e54f:	or     BYTE PTR [rax],0xce
   14000e552:	push   rdi
   14000e553:	adc    ecx,DWORD PTR gs:[rcx+0x8000083]
   14000e55a:	in     eax,0x5
   14000e55c:	cmp    DWORD PTR [rbx-0x69],edi
   14000e55f:	add    BYTE PTR [rax],al
   14000e561:	add    BYTE PTR [rdi],al
   14000e563:	rex.XB add DWORD PTR [r8+0x98],ebx
   14000e56a:	add    BYTE PTR [rsi+0x57],dh
   14000e56d:	mov    ebx,0x90
   14000e572:	add    BYTE PTR [rax],al
   14000e574:	(bad)  
   14000e575:	jns    0x14000e5e7
   14000e577:	add    BYTE PTR [rax],al
   14000e579:	add    BYTE PTR [rax],al
   14000e57b:	add    BYTE PTR [rip+0x803b],al        # 0x1400165bc
   14000e581:	add    BYTE PTR [rax],al
   14000e583:	add    BYTE PTR [rdi],al
   14000e585:	jns    0x14000e587
   14000e587:	add    BYTE PTR [rax],al
   14000e589:	add    BYTE PTR [rax],al
   14000e58b:	add    BYTE PTR [rax],al
   14000e58d:	js     0x14000e58f
	...
   14000e597:	add    bh,bh
   14000e599:	inc    DWORD PTR [rax]
   14000e59b:	add    dh,bh
   14000e59d:	inc    DWORD PTR [rax]
   14000e59f:	add    ah,bh
   14000e5a1:	(bad)  
   14000e5a2:	add    BYTE PTR [rax],al
   14000e5a4:	cld    
   14000e5a5:	(bad)  
   14000e5a6:	add    BYTE PTR [rax],al
   14000e5a8:	clc    
   14000e5a9:	sbb    eax,0x1c00000
   14000e5ae:	add    BYTE PTR [rax],al
   14000e5b0:	add    BYTE PTR [rcx],0x0
   14000e5b3:	add    BYTE PTR [rax-0x1ffffffd],al
   14000e5b9:	add    eax,DWORD PTR [rax]
   14000e5bb:	add    al,bh
   14000e5bd:	add    eax,DWORD PTR [rax]
   14000e5bf:	add    ah,bh
   14000e5c1:	(bad)  
   14000e5c2:	add    BYTE PTR [rax],al
   14000e5c4:	inc    DWORD PTR [rdi]
   14000e5c6:	add    BYTE PTR [rax],al
   14000e5c8:	inc    DWORD PTR [rdi-0x70010000]
   14000e5ce:	add    BYTE PTR [rax],al
   14000e5d0:	dec    edi
   14000e5d2:	add    BYTE PTR [rax],al
   14000e5d4:	(bad)  
   14000e5d5:	inc    DWORD PTR [rax]
   14000e5d7:	add    BYTE PTR [rax],ch
   14000e5d9:	add    BYTE PTR [rax],al
   14000e5db:	add    BYTE PTR [rax],dh
   14000e5dd:	add    BYTE PTR [rax],al
   14000e5df:	add    BYTE PTR [rax+0x0],ah
   14000e5e2:	add    BYTE PTR [rax],al
   14000e5e4:	add    DWORD PTR [rax],eax
   14000e5e6:	or     BYTE PTR [rax],al
   14000e5e8:	add    BYTE PTR [rax],al
   14000e5ea:	add    BYTE PTR [rax],al
   14000e5ec:	add    BYTE PTR [rcx],cl
	...
   14000e5f6:	add    BYTE PTR [rax],al
   14000e5f8:	add    BYTE PTR [rcx],al
   14000e5fa:	add    BYTE PTR [rax],al
   14000e5fc:	add    BYTE PTR [rcx],al
   14000e5fe:	add    BYTE PTR [rax],al
   14000e600:	add    BYTE PTR [rax],al
   14000e602:	add    BYTE PTR [rax],al
   14000e604:	cmp    eax,0x43003f27
   14000e609:	sub    edi,DWORD PTR [rax+rax*1]
   14000e60c:	rex.WB (bad) 
   14000e60e:	cmp    al,0x0
   14000e610:	rex.WRXB xor r15,QWORD PTR [r15]
   14000e613:	add    BYTE PTR [rbx+0x36],dl
   14000e616:	cmp    eax,0x3b3d5d00
   14000e61b:	add    BYTE PTR [rcx+0x3f],ah
   14000e61e:	xor    eax,0x2e4e7600
   14000e623:	add    BYTE PTR [rcx+0x51],bh
   14000e626:	sub    al,0x0
   14000e628:	imul   eax,DWORD PTR [rbp+0x34],0x38436400
   14000e62f:	add    BYTE PTR [rcx+0x47],ch
   14000e632:	cmp    DWORD PTR [rax],eax
   14000e634:	je     0x14000e684
   14000e636:	xor    BYTE PTR [rax],al
   14000e638:	ja     0x14000e68a
   14000e63a:	xor    BYTE PTR [rax],al
   14000e63c:	jp     0x14000e690
   14000e63e:	xor    eax,0x39517800
   14000e643:	add    BYTE PTR [rbx],bl
   14000e645:	adc    DWORD PTR [rsi+0x0],eax
   14000e648:	(bad)  
   14000e649:	adc    BYTE PTR [rsi+0x0],cl
   14000e64c:	sbb    BYTE PTR [rax],dl
   14000e64e:	rex.WX add BYTE PTR [rsi],dl
   14000e651:	adc    DWORD PTR [rax+rax*1+0x18],edx
   14000e655:	adc    DWORD PTR [rbx+0x0],edx
   14000e658:	(bad)  
   14000e659:	adc    DWORD PTR [rax+rax*1+0x24],ebx
   14000e65d:	adc    eax,0x17290045
   14000e662:	rex.RX add BYTE PTR [rsi],r12b
   14000e665:	sbb    BYTE PTR [rsi+0x0],al
   14000e668:	sub    ebx,DWORD PTR [rdx]
   14000e66a:	add    BYTE PTR [r8],r12b
   14000e66d:	adc    al,0x4a
   14000e66f:	add    BYTE PTR [rbx],ch
   14000e671:	sbb    al,0x4b
   14000e673:	add    BYTE PTR [rcx],dh
   14000e675:	sbb    eax,0x21340044
   14000e67a:	rex.XB add BYTE PTR [r11],dil
   14000e67d:	and    eax,0x283f0041
   14000e682:	add    BYTE PTR [r15+riz*1],r14b
   14000e686:	pop    rbx
   14000e687:	add    BYTE PTR [rip+0x13006313],dl        # 0x1530149a0
   14000e68d:	adc    al,0x6b
   14000e68f:	add    BYTE PTR [rbx],dl
   14000e691:	(bad)  
   14000e692:	jae    0x14000e694
   14000e694:	adc    al,0x18
   14000e696:	ja     0x14000e698
   14000e698:	adc    eax,0x18007b1a
   14000e69d:	sbb    edi,DWORD PTR [rdx+0x0]
   14000e6a0:	rex (bad) 
   14000e6a2:	add    BYTE PTR [rbx+r13*1+0x41],al
   14000e6a7:	add    BYTE PTR [rbp+0x32],cl
   14000e6aa:	add    BYTE PTR [rcx+0x56],r14b
   14000e6ae:	push   rdi
   14000e6af:	add    BYTE PTR [rsi+0x53],ah
   14000e6b2:	add    BYTE PTR gs:[rbp-0x58ffe497],bl
   14000e6b9:	outs   dx,DWORD PTR ds:[rsi]
   14000e6ba:	sbb    BYTE PTR [rax],al
   14000e6bc:	lods   al,BYTE PTR ds:[rsi]
   14000e6bd:	jae    0x14000e6d6
   14000e6bf:	add    BYTE PTR [rbx-0x4dffe58e],ch
   14000e6c5:	jbe    0x14000e6de
   14000e6c7:	add    BYTE PTR [rbp-0x46ffe587],dh
   14000e6cd:	jnp    0x14000e6eb
   14000e6cf:	add    BYTE PTR [rbp-0x76ffd8a8],al
   14000e6d5:	pop    rbp
   14000e6d6:	(bad)  
   14000e6d7:	add    BYTE PTR [rax-0x7affd0ab],al
   14000e6dd:	pop    rcx
   14000e6de:	sub    DWORD PTR [rax],eax
   14000e6e0:	lea    ebx,[rsi+0x2a]
   14000e6e3:	add    BYTE PTR [rax-0x7bffccab],al
   14000e6e9:	pop    rdx
   14000e6ea:	xor    eax,DWORD PTR [rax]
   14000e6ec:	mov    BYTE PTR [rax+rsi*1+0x0],bl
   14000e6f0:	xchg   ecx,eax
   14000e6f1:	(bad)  
   14000e6f2:	and    DWORD PTR [rax],eax
   14000e6f4:	xchg   esp,eax
   14000e6f5:	sub    al,BYTE PTR fs:[rax]
   14000e6f8:	mov    WORD PTR [rcx+0x3d],fs
   14000e6fb:	add    BYTE PTR [rbx-0x5bffcc96],bl
   14000e701:	outs   dx,DWORD PTR ds:[rsi]
   14000e702:	sub    DWORD PTR [rax],eax
   14000e704:	lods   al,BYTE PTR ds:[rsi]
   14000e705:	jne    0x14000e72d
   14000e707:	add    BYTE PTR [rbp-0x57ffd18f],ah
   14000e70d:	ja     0x14000e73e
   14000e70f:	add    BYTE PTR [rcx-0x4bffdb81],bh
   14000e715:	jnp    0x14000e743
   14000e717:	add    BYTE PTR [rsi+rsi*2+0x79a80031],ch
   14000e71e:	xor    al,0x0
   14000e720:	lea    esp,[rdx+0x44]
   14000e723:	add    BYTE PTR [rdi-0x62ffb495],dl
   14000e729:	jno    0x14000e772
   14000e72b:	add    BYTE PTR [rsi-0x63ffab8c],bl
   14000e731:	js     0x14000e785
   14000e733:	add    BYTE PTR [rdi-0x54ffae86],ah
   14000e739:	jge    0x14000e78f
   14000e73b:	add    BYTE PTR [rax+rax*4-0x7f48ffdb],bh
   14000e742:	(bad)  
   14000e743:	add    BYTE PTR [rcx+rax*4-0x7939ffcb],dh
   14000e74a:	es add bl,al
   14000e74d:	mov    DWORD PTR [rip+0x3692ce00],esi        # 0x17693b553
   14000e753:	add    BYTE PTR [rbx-0x46ffbd7e],dh
   14000e759:	test   BYTE PTR [rax+rax*1-0x42],cl
   14000e75d:	mov    BYTE PTR [rsi+0x0],cl
   14000e760:	mov    bl,0x81
   14000e762:	push   rdx
   14000e763:	add    BYTE PTR [rax-0x45ffaf7c],bh
   14000e769:	xchg   esp,eax
   14000e76a:	pop    rsi
   14000e76b:	add    ah,al
   14000e76d:	mov    WORD PTR [rax+rax*1-0x38],cs
   14000e771:	mov    cs,WORD PTR [rbx+0x0]
   14000e774:	iret   
   14000e775:	xchg   edx,eax
   14000e776:	rex.RXB add r15b,r8b
   14000e779:	xchg   ecx,eax
   14000e77a:	rex.WRXB add r12b,r9b
   14000e77d:	nop
   14000e77e:	rex.WB add r9b,dl
   14000e781:	xchg   esp,eax
   14000e782:	rex.X add bpl,dl
   14000e785:	(bad)  
   14000e786:	add    sil,r10b
   14000e789:	popf   
   14000e78a:	rex.W add al,bl
   14000e78d:	sahf   
   14000e78e:	rex.WB add r13b,cl
   14000e791:	pushf  
   14000e792:	pop    rcx
   14000e793:	add    cl,bl
   14000e795:	movabs eax,ds:0xa1d90056a0d4004e
   14000e79e:	push   rdx
   14000e79f:	add    dh,dl
   14000e7a1:	movabs ds:0x9cc800669bc1005b,eax
   14000e7aa:	push   0x0
   14000e7ac:	(bad)  
   14000e7ad:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e7ae:	imul   eax,DWORD PTR [rax],0xffffffd6
   14000e7b1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e7b2:	movsxd eax,DWORD PTR [rax]
   14000e7b4:	(bad)  
   14000e7b5:	stos   BYTE PTR es:[rdi],al
   14000e7b6:	outs   dx,BYTE PTR ds:[rsi]
   14000e7b7:	add    dl,cl
   14000e7b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e7ba:	jnp    0x14000e7bc
   14000e7bc:	(bad)  
   14000e7bd:	scas   al,BYTE PTR es:[rdi]
   14000e7be:	jns    0x14000e7c0
   14000e7c0:	(bad)  
   14000e7c1:	sbb    eax,DWORD PTR [rax-0x7be3e800]
   14000e7c7:	add    BYTE PTR [rdx],bl
   14000e7c9:	(bad)  
   14000e7ca:	mov    DWORD PTR [rax],eax
   14000e7cc:	sbb    esp,DWORD PTR [rcx]
   14000e7ce:	mov    WORD PTR [rax],es
   14000e7d0:	sbb    eax,0x37009225
   14000e7d5:	(bad)  
   14000e7d6:	test   DWORD PTR [rax],eax
   14000e7d8:	and    BYTE PTR [rax],ch
   14000e7da:	xchg   esi,eax
   14000e7db:	add    BYTE PTR [rbx],ah
   14000e7dd:	sub    eax,0x2923009c
   14000e7e2:	movabs al,ds:0xa8352600a3312400
   14000e7eb:	add    BYTE PTR [rsi],ah
   14000e7ed:	cmp    BYTE PTR [rdx-0x51c6d800],ch
   14000e7f3:	add    BYTE PTR [rcx],ch
   14000e7f5:	cmp    eax,0x332c00b2
   14000e7fa:	mov    esi,0xbe373100
   14000e7ff:	add    BYTE PTR [rbx],dh
   14000e801:	cmp    bh,BYTE PTR [rbp-0x49bed600]
   14000e807:	add    BYTE PTR [rbx],ch
   14000e809:	rex.R mov ebx,0xbe4b2c00
   14000e80f:	add    BYTE PTR [rax+rax*2],bh
   14000e812:	mov    ecx,0x83596000
   14000e817:	add    BYTE PTR [rcx+0x5c],bl
   14000e81a:	movabs eax,ds:0xb9484500b34b4900
   14000e823:	add    BYTE PTR [rsi+0x50],cl
   14000e826:	mov    dh,0x0
   14000e828:	rex.WRXB push r14
   14000e82a:	mov    edi,0xb5575700
   14000e82f:	add    BYTE PTR [rbp+0x5c],bl
   14000e832:	mov    bl,0x0
   14000e834:	(bad)  
   14000e835:	pop    rdi
   14000e836:	mov    ah,0x0
   14000e838:	imul   esp,DWORD PTR [rsi-0x4f],0xb26f7400
   14000e83f:	add    BYTE PTR [rbp+0x70],dh
   14000e842:	mov    cl,0x0
   14000e844:	sub    eax,0x2e00c234
   14000e849:	(bad)  
   14000e84a:	enter  0x2e00,0x3a
   14000e84e:	retf   
   14000e84f:	add    BYTE PTR [rax],dh
   14000e851:	cmp    cl,al
   14000e853:	add    BYTE PTR [rdi],ch
   14000e855:	rol    BYTE PTR ds:[rax],1
   14000e858:	xor    BYTE PTR [rdi],bh
   14000e85a:	rol    BYTE PTR [rax],1
   14000e85c:	sub    eax,0x2f00c34a
   14000e861:	rex.X retf 0x2f00
   14000e865:	rex.WRX enter 0x2f00,0x50
   14000e86a:	leave  
   14000e86b:	add    BYTE PTR [rax],dh
   14000e86d:	push   rdx
   14000e86e:	int3   
   14000e86f:	add    BYTE PTR [rax],dh
   14000e871:	rex.XB (bad) 
   14000e873:	add    BYTE PTR [rdx],dh
   14000e875:	rex.RXB fadd DWORD PTR [r8]
   14000e878:	xor    cl,BYTE PTR [rbx-0x25]
   14000e87b:	add    BYTE PTR [rdx],dh
   14000e87d:	push   rsi
   14000e87e:	rol    BYTE PTR [rax],cl
   14000e880:	xor    bl,BYTE PTR [rax-0x2e]
   14000e883:	add    BYTE PTR [rax+rbx*2],dh
   14000e886:	rol    DWORD PTR [rax],cl
   14000e888:	xor    ebx,DWORD PTR [rax-0x2b]
   14000e88b:	add    BYTE PTR [rcx+rbx*2],dh
   14000e88e:	(bad)  
   14000e88f:	add    BYTE PTR [rsp+rbx*2],dh
   14000e892:	xlat   BYTE PTR ds:[rbx]
   14000e893:	add    BYTE PTR [rip+0x3a00db5c],dh        # 0x17a01c3f5
   14000e899:	pop    rbp
   14000e89a:	fild   WORD PTR [rax]
   14000e89c:	xor    DWORD PTR [rcx-0x33],esp
   14000e89f:	add    BYTE PTR [rsi],dh
   14000e8a1:	(bad)  
   14000e8a2:	fld    QWORD PTR [rax]
   14000e8a4:	data16 fild WORD PTR ss:[rax]
   14000e8a8:	xor    al,0x6e
   14000e8aa:	fadd   DWORD PTR [rax]
   14000e8ac:	xor    al,0x54
   14000e8ae:	loope  0x14000e8b0
   14000e8b0:	ss pop rsp
   14000e8b2:	in     al,0x0
   14000e8b4:	ss movsxd esp,ebx
   14000e8b7:	add    BYTE PTR [rax],bh
   14000e8b9:	fs out 0x0,eax
   14000e8bc:	(bad)  
   14000e8bd:	push   0xffffffffffffffe6
   14000e8bf:	add    BYTE PTR [rax],bh
   14000e8c1:	outs   dx,DWORD PTR ds:[rsi]
   14000e8c2:	out    0x0,al
   14000e8c4:	(bad)  
   14000e8c5:	ins    DWORD PTR es:[rdi],dx
   14000e8c6:	call   0x1286d20cb
   14000e8cb:	add    BYTE PTR [rsi],dh
   14000e8cd:	jbe    0x14000e8af
   14000e8cf:	add    BYTE PTR [rdi],dh
   14000e8d1:	jns    0x14000e8b9
   14000e8d3:	add    BYTE PTR [rax],bh
   14000e8d5:	jl     0x14000e8bc
   14000e8d7:	add    BYTE PTR [rax],bh
   14000e8d9:	jno    0x14000e8c4
   14000e8db:	add    BYTE PTR [rcx],bh
   14000e8dd:	jne    0x14000e8c9
   14000e8df:	add    BYTE PTR [rdx],bh
   14000e8e1:	jns    0x14000e8cd
   14000e8e3:	add    BYTE PTR [rip+0x3900ea79],bh        # 0x17901d362
   14000e8e9:	jge    0x14000e8d5
   14000e8eb:	add    BYTE PTR [rdi*2+0x754400ea],bh
   14000e8f2:	fld    QWORD PTR [rax]
   14000e8f4:	rex.XB jnp 0x14000e8df
   14000e8f7:	add    BYTE PTR [rdx],bh
   14000e8f9:	sub    bl,0x0
   14000e8fc:	cmp    al,BYTE PTR [rdx-0x7dc3ff14]
   14000e902:	in     al,dx
   14000e903:	add    BYTE PTR [rdx],bh
   14000e905:	test   esp,ebp
   14000e907:	add    BYTE PTR [rax*4-0x76c4ff14],bh
   14000e90e:	in     al,dx
   14000e90f:	add    BYTE PTR [rdx+rcx*4],bh
   14000e912:	in     eax,dx
   14000e913:	add    BYTE PTR [rbx],bh
   14000e915:	mov    gs,ebp
   14000e917:	add    BYTE PTR [rcx*4-0x6ec4ff12],bh
   14000e91e:	out    dx,al
   14000e91f:	add    BYTE PTR [rcx+rdx*4],bh
   14000e922:	out    dx,al
   14000e923:	add    BYTE PTR [rdx],bh
   14000e925:	xchg   ebp,eax
   14000e926:	out    dx,al
   14000e927:	add    BYTE PTR [rdx],bh
   14000e929:	cdq    
   14000e92a:	out    dx,al
   14000e92b:	add    BYTE PTR [rdx],bh
   14000e92d:	sahf   
   14000e92e:	out    dx,eax
   14000e92f:	add    BYTE PTR [rdx],bh
   14000e931:	fwait
   14000e932:	lock add BYTE PTR [rbx],bh
   14000e935:	movabs al,ds:0xa83a00efa13d00ef
   14000e93e:	(bad)  
   14000e93f:	add    BYTE PTR [rbx],bh
   14000e941:	mov    cl,0xec
   14000e943:	add    BYTE PTR [rdx],bh
   14000e945:	movabs ds:0xa73c00f0a53a00f1,al
   14000e94e:	lock add BYTE PTR [rdx],bh
   14000e951:	test   eax,0xad3900f1
   14000e956:	repnz add BYTE PTR [rbp*4-0x4fc6ff0f],bh
   14000e95e:	repnz add BYTE PTR [rax+rsi*4],bh
   14000e962:	repnz add BYTE PTR [rbx],bh
   14000e965:	mov    ah,0xf3
   14000e967:	add    BYTE PTR [rbx],bh
   14000e969:	mov    bh,0xf4
   14000e96b:	add    BYTE PTR [rax],bh
   14000e96d:	mov    eax,0xba3e00f2
   14000e972:	repnz add BYTE PTR [rbx],bh
   14000e975:	mov    ecx,0x825600f4
   14000e97a:	fld    DWORD PTR [rax]
   14000e97c:	push   rcx
   14000e97d:	sbb    esi,0x0
   14000e980:	push   0xffffffffffffff96
   14000e982:	(bad)  
   14000e983:	add    BYTE PTR [rax-0x67],bh
   14000e986:	mov    DWORD PTR [rax],0xc89472
   14000e98c:	movsxd ecx,DWORD PTR [rbx+rdx*8-0x304a8d00]
   14000e993:	add    BYTE PTR [rsi-0x4a],dh
   14000e996:	(bad)  
   14000e997:	add    BYTE PTR [rdi-0x72],al
   14000e99a:	in     eax,0x0
   14000e99c:	rex.RXB lods eax,DWORD PTR ds:[rsi]
   14000e99e:	jmp    0x14000e9a0
   14000e9a0:	rex.RB mov r12b,0xec
   14000e9a3:	add    BYTE PTR [rip+0x3c00eccc],bh        # 0x17c01d675
   14000e9a9:	shr    ch,cl
   14000e9ab:	add    BYTE PTR [rip+0x3800ebdc],bh        # 0x17801d58d
   14000e9b1:	(bad)  
   14000e9b2:	repnz add BYTE PTR [rsi],dh
   14000e9b5:	int    0xf1
   14000e9b7:	add    BYTE PTR [rdx-0x77ff665a],bh
   14000e9bd:	(bad)  
   14000e9be:	lods   al,BYTE PTR ds:[rsi]
   14000e9bf:	add    BYTE PTR [rsi-0x76ff4d80],al
   14000e9c5:	xor    DWORD PTR [rdx-0x47716c00],0x0
   14000e9cc:	cwde   
   14000e9cd:	nop
   14000e9ce:	mov    bh,0x0
   14000e9d0:	(bad)  
   14000e9d1:	lods   eax,DWORD PTR ds:[rsi]
   14000e9d2:	mov    esi,0xb5a7a000
   14000e9d7:	add    BYTE PTR [rcx-0x31ff4258],ah
   14000e9dd:	lods   al,BYTE PTR ds:[rsi]
   14000e9de:	add    BYTE PTR [rax],0xd4
   14000e9e1:	mov    ah,0x8c
   14000e9e3:	add    dl,bl
   14000e9e5:	mov    esp,0xbfdc0095
   14000e9ea:	fwait
   14000e9eb:	add    BYTE PTR [rsi+riz*4-0x4970ff40],dl
   14000e9f2:	(bad)  
   14000e9f3:	add    BYTE PTR [rdi+rax*8+0xdb],dl
   14000e9fa:	add    BYTE PTR [rax],al
   14000e9fc:	(bad)  
   14000e9fd:	(bad)  
   14000e9fe:	inc    DWORD PTR [rax]
	...
   14000ea74:	add    ch,bh
	...
   14000eaa2:	add    BYTE PTR [rax],al
   14000eaa4:	in     eax,0xdd
   14000eaa6:	fucom  st(5)
	...
   14000ead4:	fstp   st(5)
   14000ead6:	fstp   st(5)
   14000ead8:	call   0x14000eadd
	...
   14000eb01:	add    BYTE PTR [rax],al
   14000eb03:	cld    
   14000eb04:	fstp   st(5)
   14000eb06:	fcmovu st,st(2)
   14000eb08:	(bad)  
   14000eb09:	(bad)  
   14000eb0a:	hlt    
	...
   14000eb33:	out    0xda,eax
   14000eb35:	(bad)  
   14000eb36:	(bad)  
   14000eb37:	ror    dh,cl
   14000eb39:	retf   0xfbc7
	...
   14000eb60:	add    BYTE PTR [rax],al
   14000eb62:	add    dl,cl
   14000eb64:	retf   0xcaca
   14000eb67:	retf   0xc7c7
   14000eb6a:	ret    
   14000eb6b:	shl    dh,0x0
	...
   14000eb92:	faddp  st(0),st
   14000eb94:	ret    
   14000eb95:	ret    
   14000eb96:	ret    
   14000eb97:	ret    
   14000eb98:	rol    al,0xc0
   14000eb9b:	mov    ebx,0xbb
	...
   14000ebc0:	add    BYTE PTR [rax],al
   14000ebc2:	movabs al,ds:0xbbb7bbb7bbb7b0a9
   14000ebcb:	mov    bh,0xb7
   14000ebcd:	mov    ebp,0x0
	...
   14000ebee:	add    BYTE PTR [rax],al
   14000ebf0:	add    BYTE PTR [rsi-0x5b647c83],al
   14000ebf6:	test   eax,0xb2b2afad
   14000ebfb:	mov    bh,0xbb
   14000ebfd:	mov    ebx,0xde
	...
   14000ec0e:	add    dl,dh
	...
   14000ec20:	add    BYTE PTR [rdi+rsi*2+0x7b],dh
   14000ec24:	add    DWORD PTR [rbx-0x525b5f67],0xb7b7b2af
   14000ec2e:	mov    ebx,0xe3
	...
   14000ec3b:	add    BYTE PTR [rax],al
   14000ec3d:	add    BYTE PTR [rax+rax*1+0x0],al
	...
   14000ec50:	jne    0x14000ecc4
   14000ec52:	je     0x14000ecca
   14000ec54:	jns    0x14000ecd1
   14000ec56:	add    DWORD PTR [rbx-0x52565f65],0xbbbbb7b1
   14000ec60:	loop   0x14000ec62
	...
   14000ec6a:	add    BYTE PTR [rax],al
   14000ec6c:	add    BYTE PTR [rax+0x8c],al
	...
   14000ec7e:	add    BYTE PTR [rbp+0x73717025],al
   14000ec84:	je     0x14000ecfd
   14000ec86:	jnp    0x14000ed05
   14000ec88:	add    DWORD PTR [rbx-0x4e505b5e],0xffffffb7
   14000ec8f:	mov    ebx,0xe1c0
	...
   14000ec9c:	xchg   esp,eax
   14000ec9d:	jle    0x14000ec9f
	...
   14000eca7:	add    BYTE PTR [rax],al
   14000eca9:	add    BYTE PTR [rdx+0x0],ch
   14000ecac:	add    BYTE PTR [rax],al
   14000ecae:	sub    al,0x16
   14000ecb0:	and    esp,DWORD PTR [rip+0x74737225]        # 0x1b4745edb
   14000ecb6:	ja     0x14000ed32
   14000ecb8:	jge    0x14000ec3c
   14000ecba:	cdq    
   14000ecbb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ecbc:	lods   eax,DWORD PTR ds:[rsi]
   14000ecbd:	mov    cl,0xb7
   14000ecbf:	mov    ebx,0xe0c3c0
   14000ecc4:	add    BYTE PTR [rax],al
   14000ecc6:	add    BYTE PTR [rax],al
   14000ecc8:	add    BYTE PTR [rax],al
   14000ecca:	icebp  
   14000eccb:	jle    0x14000ed4b
   14000eccd:	test   BYTE PTR [rax],al
	...
   14000ecd7:	add    BYTE PTR [rsi+0x5d],ch
   14000ecda:	pop    rdi
   14000ecdb:	pop    rsp
   14000ecdc:	push   rbp
   14000ecdd:	cmp    BYTE PTR [r14+rdx*1],r11b
   14000ece1:	and    esp,DWORD PTR [rip+0x74737225]        # 0x1b4745f0c
   14000ece7:	ja     0x14000ed64
   14000ece9:	jge    0x14000ec6d
   14000eceb:	fwait
   14000ecec:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000eced:	lods   eax,DWORD PTR ds:[rsi]
   14000ecee:	mov    bh,0xbb
   14000ecf0:	rol    bl,0xc3
   14000ecf3:	out    0xf5,al
   14000ecf5:	add    BYTE PTR [rax],al
   14000ecf7:	add    BYTE PTR [rax],al
   14000ecf9:	mov    dl,BYTE PTR [rbx+0xf17e7e]
	...
   14000ed07:	fs (bad) 
   14000ed09:	(bad)  
   14000ed0a:	pop    rdi
   14000ed0b:	pop    rdi
   14000ed0c:	pop    rbx
   14000ed0d:	push   rsi
   14000ed0e:	rex.RB (bad) 
   14000ed10:	sbb    BYTE PTR [rbx+riz*1],dl
   14000ed13:	and    eax,0x74737225
   14000ed18:	jns    0x14000ed95
   14000ed1a:	add    DWORD PTR [rdx-0x444e525d],0xffffffc0
   14000ed21:	rol    bl,0xc3
   14000ed24:	ret    
   14000ed25:	mov    ebx,0x939ea6bc
   14000ed2a:	xchg   ebx,eax
   14000ed2b:	jle    0x14000edab
	...
   14000ed35:	add    BYTE PTR [rdx+0x61],ah
   14000ed38:	(bad)  
   14000ed39:	(bad)  
   14000ed3a:	(bad)  
   14000ed3b:	pop    rdi
   14000ed3c:	pop    rsp
   14000ed3d:	pop    rbx
   14000ed3e:	pop    rcx
   14000ed3f:	rex.RX or eax,0x2523141b
   14000ed45:	and    eax,0x79767472
   14000ed4a:	jl     0x14000ecce
   14000ed4c:	movabs ds:0xc0c3c3c3c0b7b2a4,al
   14000ed55:	mov    ebx,0x939dabb2
   14000ed5a:	jle    0x14000edda
   14000ed5c:	mov    eax,DWORD PTR [rax]
   14000ed5e:	add    BYTE PTR [rax],al
   14000ed60:	add    BYTE PTR [rax],al
   14000ed62:	add    BYTE PTR [rax],al
   14000ed64:	imul   esp,DWORD PTR [rbx+0x61],0x61
   14000ed68:	(bad)  
   14000ed69:	(bad)  
   14000ed6a:	(bad)  
   14000ed6b:	pop    rdi
   14000ed6c:	pop    rsp
   14000ed6d:	pop    rbx
   14000ed6e:	pop    rcx
   14000ed6f:	pop    rcx
   14000ed70:	rex.X (bad) 
   14000ed72:	adc    edx,DWORD PTR [rsi]
   14000ed74:	and    al,0x25
   14000ed76:	jo     0x14000edea
   14000ed78:	je     0x14000edf1
   14000ed7a:	jnp    0x14000ecfe
   14000ed7c:	cdq    
   14000ed7d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ed7e:	mov    dl,0xb7
   14000ed80:	rol    dh,0xc6
   14000ed83:	ret    
   14000ed84:	ret    
   14000ed85:	mov    ebx,0x9296abb1
   14000ed8a:	jle    0x14000ee0a
   14000ed8c:	add    BYTE PTR [rax],al
   14000ed8e:	add    BYTE PTR [rax],al
   14000ed90:	add    BYTE PTR [rax],al
   14000ed92:	add    BYTE PTR [rsi+0x63],ah
   14000ed95:	movsxd esp,DWORD PTR [rbx+0x61]
   14000ed98:	(bad)  
   14000ed99:	(bad)  
   14000ed9a:	(bad)  
   14000ed9b:	(bad)  
   14000ed9c:	pop    rdi
   14000ed9d:	pop    rbx
   14000ed9e:	push   rdi
   14000ed9f:	pop    rcx
   14000eda0:	pop    rax
   14000eda1:	add    dl,BYTE PTR [rbx]
   14000eda4:	and    ah,BYTE PTR ds:0x79767371
   14000edab:	jge    0x14000ed2f
   14000edad:	movabs ds:0xb7c0c3c6c3c0b7ae,eax
   14000edb6:	lods   eax,DWORD PTR ds:[rsi]
   14000edb7:	sahf   
   14000edb8:	xchg   ebp,eax
   14000edb9:	xchg   edx,eax
   14000edba:	jle    0x14000ed50
   14000edbc:	add    BYTE PTR [rax],al
   14000edbe:	add    BYTE PTR [rax],al
   14000edc0:	add    bh,dh
   14000edc2:	gs gs movsxd esp,DWORD PTR gs:[rbx+0x63]
   14000edc8:	(bad)  
   14000edc9:	(bad)  
   14000edca:	(bad)  
   14000edcb:	(bad)  
   14000edcc:	pop    rdi
   14000edcd:	pop    rbx
   14000edce:	push   rdi
   14000edcf:	pop    rcx
   14000edd0:	pop    rax
   14000edd1:	rex.WRB cmp rax,0x2523131a
   14000edd7:	and    eax,0x7b777473
   14000eddc:	(bad)  
   14000eddd:	movabs ds:0xb7c0c3c6c6c0b7ad,eax
   14000ede6:	lods   al,BYTE PTR ds:[rsi]
   14000ede7:	popf   
   14000ede8:	xchg   ebx,eax
   14000ede9:	jle    0x14000ee69
   14000edeb:	pop    QWORD PTR [rax]
   14000eded:	add    BYTE PTR [rax],al
   14000edef:	add    cl,bh
   14000edf1:	gs gs gs gs movsxd esp,DWORD PTR gs:[rbx+0x63]
   14000edf9:	(bad)  
   14000edfa:	(bad)  
   14000edfb:	(bad)  
   14000edfc:	pop    rdi
   14000edfd:	pop    rsp
   14000edfe:	push   rdi
   14000edff:	pop    rcx
   14000ee00:	pop    rax
   14000ee01:	rex.WRX
   14000ee02:	rex.WX or rax,0x25241511
   14000ee08:	jno    0x14000ee7c
   14000ee0a:	jbe    0x14000ee87
   14000ee0c:	(bad)  
   14000ee0d:	fwait
   14000ee0e:	lods   eax,DWORD PTR ds:[rsi]
   14000ee0f:	mov    bh,0xc0
   14000ee11:	mov    dh,0xc3
   14000ee14:	shl    BYTE PTR [rcx+0x7e9396ab],0x7e
   14000ee1b:	add    BYTE PTR [rax],al
   14000ee1d:	add    BYTE PTR [rax],al
   14000ee1f:	add    BYTE PTR [rax],al
   14000ee21:	add    dl,bh
   14000ee23:	ins    DWORD PTR es:[rdi],dx
   14000ee24:	gs movsxd esp,DWORD PTR gs:[ebx+0x63]
   14000ee2a:	(bad)  
   14000ee2b:	(bad)  
   14000ee2c:	(bad)  
   14000ee2d:	pop    rbx
   14000ee2e:	pop    rbx
   14000ee2f:	pop    rcx
   14000ee30:	rex.WRX
   14000ee31:	rex.WRX
   14000ee32:	rex.WXB cmp rax,QWORD PTR [r11]
   14000ee35:	adc    edx,DWORD PTR [rsi]
   14000ee37:	and    al,0x25
   14000ee39:	jb     0x14000eeb1
   14000ee3b:	jns    0x14000eeba
   14000ee3d:	cdq    
   14000ee3e:	lods   eax,DWORD PTR ds:[rsi]
   14000ee3f:	mov    bh,0xc0
   14000ee41:	mov    bh,0xc3
   14000ee44:	mov    ebx,0x9295abb1
   14000ee49:	jle    0x14000edd3
	...
   14000ee53:	add    BYTE PTR [rax],al
   14000ee55:	outs   dx,DWORD PTR ds:[rsi]
   14000ee56:	gs movsxd esp,DWORD PTR gs:[rdx+0x61]
   14000ee5b:	(bad)  
   14000ee5c:	pop    rbp
   14000ee5d:	pop    rsp
   14000ee5e:	push   rdi
   14000ee5f:	pop    rcx
   14000ee60:	rex.WRX
   14000ee61:	rex.WXB sub bl,BYTE PTR [r9]
   14000ee64:	(bad)  
   14000ee65:	sbb    edx,DWORD PTR [rip+0x73722523]        # 0x1b373138e
   14000ee6b:	ja     0x14000eee9
   14000ee6d:	cdq    
   14000ee6e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ee6f:	mov    bh,0xc0
   14000ee71:	mov    edi,0x9eaebac6
   14000ee77:	xchg   ebx,eax
   14000ee78:	jle    0x14000ee0c
   14000ee7a:	lock add BYTE PTR [rax],al
	...
   14000ee85:	add    BYTE PTR [rax],al
   14000ee87:	cli    
   14000ee88:	push   0x60616163
   14000ee8d:	pop    rsp
   14000ee8e:	push   rdi
   14000ee8f:	pop    rcx
   14000ee90:	rex.WB and BYTE PTR [r9],bl
   14000ee93:	adc    al,BYTE PTR [rdx]
   14000ee95:	or     dl,BYTE PTR [rcx]
   14000ee97:	(bad)  
   14000ee98:	and    al,0x70
   14000ee9a:	jb     0x14000ef12
   14000ee9c:	jnp    0x14000ee20
   14000ee9e:	lods   al,BYTE PTR ds:[rsi]
   14000ee9f:	mov    bh,0xc6
   14000eea1:	mov    edi,0x9daeb7c6
   14000eea7:	xchg   ebx,eax
   14000eea8:	jle    0x14000ef28
	...
   14000eeba:	ins    DWORD PTR es:[rdi],dx
   14000eebb:	(bad)  
   14000eebc:	pop    rbp
   14000eebd:	pop    rsp
   14000eebe:	push   rdi
   14000eebf:	rex.W and BYTE PTR [rcx],bl
   14000eec2:	adc    edx,DWORD PTR [rcx]
   14000eec4:	adc    DWORD PTR [rcx],ecx
   14000eec6:	sbb    eax,0x72252313
   14000eecb:	je     0x14000ef48
   14000eecd:	and    DWORD PTR [rdi+rsi*4-0x3938383a],0xffffffb7
   14000eed5:	lods   al,BYTE PTR ds:[rsi]
   14000eed6:	pushf  
   14000eed7:	xchg   edx,eax
   14000eed8:	jle    0x14000ee62
	...
   14000eeea:	add    BYTE PTR [rax],al
   14000eeec:	clc    
   14000eeed:	pop    rsi
   14000eeee:	sub    DWORD PTR ds:[rax+rbx*1],ebx
   14000eef2:	sbb    BYTE PTR [rbx],bl
   14000eef4:	sbb    BYTE PTR [rsi],bl
   14000eef6:	or     DWORD PTR [rbx],edx
   14000eef8:	(bad)  
   14000eef9:	and    al,0x70
   14000eefb:	jae    0x14000ef74
   14000eefd:	(bad)  
   14000eefe:	movabs ds:0x95abb7c0ccccc6b7,eax
   14000ef07:	jle    0x14000ef87
   14000ef09:	repz add BYTE PTR [rax],al
	...
   14000ef1c:	add    BYTE PTR [rax],al
   14000ef1e:	sub    ebp,DWORD PTR [rcx]
   14000ef20:	sub    DWORD PTR [rax],ebp
   14000ef22:	and    BYTE PTR [rip+0x1f0d1d1e],bl        # 0x15f0e0c46
   14000ef28:	adc    esp,DWORD PTR [rbx]
   14000ef2a:	and    eax,0xa37d7772
   14000ef2f:	mov    bh,0xc6
   14000ef31:	int3   
   14000ef32:	int3   
   14000ef33:	(bad)  
   14000ef34:	mov    cl,0x9e
   14000ef36:	xchg   ebx,eax
   14000ef37:	xchg   edx,eax
   14000ef38:	xchg   esp,eax
	...
   14000ef4d:	add    BYTE PTR [rax],al
   14000ef4f:	cmp    cl,BYTE PTR [rip+0x2904060a]        # 0x16904f55f
   14000ef55:	sub    BYTE PTR [rcx],ch
   14000ef57:	(bad)  
   14000ef58:	adc    esp,DWORD PTR [rdx]
   14000ef5a:	and    eax,0xa27c7472
   14000ef5f:	mov    bh,0xc7
   14000ef61:	ror    ah,cl
   14000ef63:	shl    BYTE PTR [rcx-0x74816d62],0x0
	...
   14000ef7e:	add    BYTE PTR [rax],al
   14000ef80:	rex.WRXB xor BYTE PTR [r9+r9*1],r15b
   14000ef84:	or     eax,DWORD PTR [rip+0x131f3904]        # 0x15320288e
   14000ef8a:	and    al,0x70
   14000ef8c:	je     0x14000f009
   14000ef8e:	fwait
   14000ef8f:	mov    ebx,0xc0ccd6c7
   14000ef94:	scas   al,BYTE PTR es:[rdi]
   14000ef95:	pushf  
   14000ef96:	xchg   edx,eax
   14000ef97:	jle    0x14000ef99
	...
   14000efb1:	push   rsp
   14000efb2:	push   rdx
   14000efb3:	xor    DWORD PTR [rsi+rcx*1],edi
   14000efb6:	or     eax,DWORD PTR [rsi]
   14000efb8:	cmp    edx,DWORD PTR [rbx]
   14000efba:	and    ah,BYTE PTR [rip+0xffffffffb79b7972]        # 0xf79c6932
   14000efc0:	int3   
   14000efc1:	fcmovbe st,st(2)
   14000efc3:	shr    BYTE PTR [rbp+rdx*4+0x947e],0x0
	...
   14000efdf:	add    BYTE PTR [rax],al
   14000efe1:	add    BYTE PTR [rbp+0x33],al
   14000efe4:	xor    DWORD PTR [rip+0x203d0d37],ebp        # 0x1603dfd21
   14000efea:	adc    al,0x24
   14000efec:	jb     0x14000f065
   14000efee:	cmp    DWORD PTR [rsi-0x442e252e],0xffffffab
   14000eff5:	xchg   ebx,eax
   14000eff6:	jle    0x14000ef85
	...
   14000f014:	rex.WR xor BYTE PTR [rsi],r13b
   14000f017:	cmp    al,0x38
   14000f019:	cmp    dl,BYTE PTR [rbx]
   14000f01b:	and    esi,DWORD PTR [rax+0x76]
   14000f01e:	cmp    DWORD PTR [rsi-0x452e132a],0xffffff9e
   14000f025:	xchg   ebx,eax
   14000f026:	jle    0x14000f028
	...
   14000f044:	add    BYTE PTR [rax],al
   14000f046:	rex.X xor BYTE PTR [rip+0x25161d41],bpl        # 0x165170d8e
   14000f04d:	je     0x14000efd2
   14000f04f:	mov    bh,0xda
   14000f051:	in     eax,dx
   14000f052:	(bad)  
   14000f053:	mov    bh,0x9d
   14000f055:	xchg   edx,eax
   14000f056:	jle    0x14000f058
	...
   14000f074:	add    BYTE PTR [rax],al
   14000f076:	add    BYTE PTR [rbp+0x31],dl
   14000f079:	xor    BYTE PTR [rcx],bh
   14000f07b:	adc    esp,DWORD PTR [rdx+rsi*2]
   14000f07e:	jge    0x14000f03b
   14000f080:	in     al,dx
   14000f081:	(bad)  
   14000f082:	(bad)  
   14000f083:	mov    cl,0x95
   14000f085:	jle    0x14000f014
	...
   14000f0a7:	add    BYTE PTR [rcx+0x31],dl
   14000f0aa:	rex.X sbb spl,BYTE PTR [rdx]
   14000f0ad:	jno    0x14000f12a
   14000f0af:	mov    edx,0xaed1ebea
   14000f0b4:	xchg   edx,eax
   14000f0b5:	jle    0x14000f0b7
	...
   14000f0d7:	add    BYTE PTR [rax],al
   14000f0d9:	xor    r9,QWORD PTR [r14+r10*1]
   14000f0dd:	and    eax,0xebebb37a
   14000f0e2:	shr    DWORD PTR [rbx+0x9492],1
	...
   14000f108:	add    BYTE PTR [rax],al
   14000f10a:	xor    eax,DWORD PTR [rax+0x13]
   14000f10d:	and    al,0x76
   14000f10f:	mov    bl,0xeb
   14000f111:	jmp    0x14000f0da
   14000f113:	sahf   
   14000f114:	jle    0x14000f0a6
	...
   14000f13a:	imul   eax,DWORD PTR [rdx+0x6],0xebaa7322
   14000f141:	jmp    0x14000f106
   14000f143:	xchg   ebp,eax
   14000f144:	jle    0x14000f146
	...
   14000f16a:	add    BYTE PTR [rdi+0x3f],al
   14000f16d:	adc    eax,0xebeba771
   14000f172:	scas   eax,DWORD PTR es:[rdi]
   14000f173:	xchg   ebx,eax
   14000f174:	mov    al,BYTE PTR [rax]
	...
   14000f19a:	add    BYTE PTR [rax],al
   14000f19c:	push   rax
   14000f19d:	and    BYTE PTR [rip+0xffffffffa4e9eb83],ah        # 0xe4eadd26
   14000f1a3:	jle    0x14000f1a5
	...
   14000f1c9:	add    BYTE PTR [rax],al
   14000f1cb:	add    BYTE PTR [rdx+0x3a],bl
   14000f1ce:	(bad)  
   14000f1cf:	jnp    0x14000f1bb
   14000f1d1:	rcl    BYTE PTR [rsi+0x88],1
	...
   14000f1fb:	add    BYTE PTR [rax],al
   14000f1fd:	push   rbx
   14000f1fe:	sbb    al,0x74
   14000f200:	iret   
   14000f201:	mov    bl,0x92
	...
   14000f22b:	add    BYTE PTR [rax],al
   14000f22d:	add    BYTE PTR [rax],dl
   14000f22f:	(bad)  
   14000f230:	fwait
   14000f231:	cwde   
   14000f232:	mov    es,WORD PTR [rax]
	...
   14000f25c:	add    BYTE PTR [rax],al
   14000f25e:	imul   esp,DWORD PTR [rcx],0x8779
	...
   14000f28c:	add    BYTE PTR [rax],al
   14000f28e:	add    dh,ch
   14000f290:	out    dx,eax
	...
   14000f2fd:	add    BYTE PTR [rax],al
   14000f2ff:	add    bh,bh
   14000f301:	(bad)  
   14000f302:	(bad)  
   14000f303:	(bad)  
   14000f304:	(bad)  
   14000f305:	inc    DWORD PTR [rax]
   14000f307:	add    bh,bh
   14000f309:	(bad)  
   14000f30a:	(bad)  
   14000f30b:	(bad)  
   14000f30c:	(bad)  
   14000f30d:	inc    DWORD PTR [rax]
   14000f30f:	add    bh,bh
   14000f311:	(bad)  
   14000f312:	sti    
   14000f313:	(bad)  
   14000f314:	(bad)  
   14000f315:	inc    DWORD PTR [rax]
   14000f317:	add    bh,bh
   14000f319:	push   rax
   14000f31b:	(bad)  
   14000f31c:	(bad)  
   14000f31d:	inc    DWORD PTR [rax]
   14000f31f:	add    bh,bh
   14000f321:	push   rax
   14000f323:	jg     0x14000f324
   14000f325:	inc    DWORD PTR [rax]
   14000f327:	add    bh,bh
   14000f329:	jmp    rax
   14000f32b:	(bad)  
   14000f32c:	(bad)  
   14000f32d:	inc    DWORD PTR [rax]
   14000f32f:	add    bh,bh
   14000f331:	jmp    rax
   14000f333:	ud0    edi,edi
   14000f336:	add    BYTE PTR [rax],al
   14000f338:	(bad)  
   14000f339:	jmp    rax
   14000f33b:	(bad)  
   14000f33c:	(bad)  
   14000f33d:	inc    DWORD PTR [rax]
   14000f33f:	add    bh,bh
   14000f341:	inc    eax
   14000f343:	(bad)  
   14000f344:	(bad)  
   14000f345:	inc    DWORD PTR [rax]
   14000f347:	add    bh,bh
   14000f349:	inc    eax
   14000f34b:	add    edi,edi
   14000f34d:	inc    DWORD PTR [rax]
   14000f34f:	add    bh,bh
   14000f351:	inc    DWORD PTR [rax+0xfeff01]
   14000f357:	add    bh,bh
   14000f359:	inc    DWORD PTR [rax+0xfdff00]
   14000f35f:	add    bh,bh
   14000f361:	inc    DWORD PTR [rax]
   14000f363:	add    BYTE PTR [rdi-0x7],bh
   14000f366:	add    BYTE PTR [rax],al
   14000f368:	(bad)  
   14000f369:	inc    BYTE PTR [rax]
   14000f36b:	add    BYTE PTR [rdi],bh
   14000f36d:	repz add BYTE PTR [rax],al
   14000f370:	(bad)  
   14000f371:	fadd   QWORD PTR [rax]
   14000f373:	add    BYTE PTR [rdi],bl
   14000f375:	ret    
   14000f376:	add    BYTE PTR [rax],al
   14000f378:	inc    DWORD PTR [rax]
   14000f37a:	add    BYTE PTR [rax],al
   14000f37c:	(bad)  
   14000f37d:	add    DWORD PTR [rax],0x0
   14000f380:	inc    BYTE PTR [rax]
   14000f382:	add    BYTE PTR [rax],al
   14000f384:	add    BYTE PTR [rdi],al
   14000f386:	add    BYTE PTR [rax],al
   14000f388:	cld    
   14000f389:	add    BYTE PTR [rax],al
   14000f38b:	add    BYTE PTR [rax],al
   14000f38d:	(bad)  
   14000f38e:	add    BYTE PTR [rax],al
   14000f390:	lock add BYTE PTR [rax],al
   14000f393:	add    BYTE PTR [rax],al
   14000f395:	sldt   WORD PTR [rax]
   14000f398:	loopne 0x14000f39a
   14000f39a:	add    BYTE PTR [rax],al
   14000f39c:	add    BYTE PTR [rdi],cl
   14000f39e:	add    BYTE PTR [rax],al
   14000f3a0:	add    BYTE PTR [rax],0x0
   14000f3a3:	add    BYTE PTR [rax],al
   14000f3a5:	sldt   WORD PTR [rax]
   14000f3a8:	add    BYTE PTR [rax],al
   14000f3aa:	add    BYTE PTR [rax],al
   14000f3ac:	add    BYTE PTR [rdi],bl
   14000f3ae:	add    BYTE PTR [rax],al
   14000f3b0:	rol    BYTE PTR [rax],0x0
   14000f3b3:	add    BYTE PTR [rax],al
   14000f3b5:	(bad)  
   14000f3b6:	add    BYTE PTR [rax],al
   14000f3b8:	clc    
   14000f3b9:	add    BYTE PTR [rax],al
   14000f3bb:	add    BYTE PTR [rax],al
   14000f3bd:	(bad)  
   14000f3be:	add    BYTE PTR [rax],al
   14000f3c0:	inc    BYTE PTR [rax]
   14000f3c2:	add    BYTE PTR [rax],al
   14000f3c4:	add    BYTE PTR [rdi],bh
   14000f3c6:	add    BYTE PTR [rax],al
   14000f3c8:	inc    eax
   14000f3ca:	add    BYTE PTR [rax],al
   14000f3cc:	add    BYTE PTR [rdi],bh
   14000f3ce:	add    BYTE PTR [rax],al
   14000f3d0:	push   rax
   14000f3d2:	add    BYTE PTR [rax],al
   14000f3d4:	add    BYTE PTR [rdi],bh
   14000f3d6:	add    BYTE PTR [rax],al
   14000f3d8:	(bad)  
   14000f3d9:	cld    
   14000f3da:	add    BYTE PTR [rax],al
   14000f3dc:	add    BYTE PTR [rdi+0x0],bh
   14000f3df:	add    bh,bh
   14000f3e1:	inc    BYTE PTR [rax]
   14000f3e3:	add    BYTE PTR [rax],al
   14000f3e5:	jg     0x14000f3e7
   14000f3e7:	add    bh,bh
   14000f3e9:	inc    DWORD PTR [rax]
   14000f3eb:	add    BYTE PTR [rax],al
   14000f3ed:	inc    DWORD PTR [rax]
   14000f3ef:	add    bh,bh
   14000f3f1:	inc    DWORD PTR [rax+0xff0000]
   14000f3f7:	add    bh,bh
   14000f3f9:	inc    eax
   14000f3fb:	add    BYTE PTR [rax],al
   14000f3fd:	inc    DWORD PTR [rax]
   14000f3ff:	add    bh,bh
   14000f401:	push   rax
   14000f403:	add    BYTE PTR [rcx],al
   14000f405:	inc    DWORD PTR [rax]
   14000f407:	add    bh,bh
   14000f409:	(bad)  
   14000f40a:	cld    
   14000f40b:	add    BYTE PTR [rcx],al
   14000f40d:	inc    DWORD PTR [rax]
   14000f40f:	add    bh,bh
   14000f411:	(bad)  
   14000f412:	inc    BYTE PTR [rax]
   14000f414:	add    edi,edi
   14000f416:	add    BYTE PTR [rax],al
   14000f418:	(bad)  
   14000f419:	(bad)  
   14000f41a:	inc    DWORD PTR [rax]
   14000f41c:	add    edi,edi
   14000f41e:	add    BYTE PTR [rax],al
   14000f420:	(bad)  
   14000f421:	(bad)  
   14000f422:	inc    DWORD PTR [rax+0xff03]
   14000f428:	(bad)  
   14000f429:	(bad)  
   14000f42a:	inc    eax
   14000f42c:	add    edi,edi
   14000f42e:	add    BYTE PTR [rax],al
   14000f430:	(bad)  
   14000f431:	(bad)  
   14000f432:	inc    eax
   14000f434:	(bad)  
   14000f435:	inc    DWORD PTR [rax]
   14000f437:	add    bh,bh
   14000f439:	(bad)  
   14000f43a:	jmp    rax
   14000f43c:	(bad)  
   14000f43d:	inc    DWORD PTR [rax]
   14000f43f:	add    bh,bh
   14000f441:	(bad)  
   14000f442:	push   rax
   14000f444:	ud0    eax,DWORD PTR [rax]
   14000f447:	add    bh,bh
   14000f449:	(bad)  
   14000f44a:	push   rax
   14000f44c:	ud0    eax,DWORD PTR [rax]
   14000f44f:	add    bh,bh
   14000f451:	(bad)  
   14000f452:	(bad)  
   14000f453:	clc    
   14000f454:	(bad)  
   14000f455:	inc    DWORD PTR [rax]
   14000f457:	add    bh,bh
   14000f459:	(bad)  
   14000f45a:	(bad)  
   14000f45b:	cld    
   14000f45c:	(bad)  
   14000f45d:	inc    DWORD PTR [rax]
   14000f45f:	add    bh,bh
   14000f461:	(bad)  
   14000f462:	(bad)  
   14000f463:	cld    
   14000f464:	(bad)  
   14000f465:	inc    DWORD PTR [rax]
   14000f467:	add    bh,bh
   14000f469:	(bad)  
   14000f46a:	(bad)  
   14000f46b:	(bad)  
   14000f46c:	jg     0x14000f46d
   14000f46e:	add    BYTE PTR [rax],al
   14000f470:	(bad)  
   14000f471:	(bad)  
   14000f472:	(bad)  
   14000f473:	(bad)  
   14000f474:	(bad)  
   14000f475:	inc    DWORD PTR [rax]
   14000f477:	add    bh,bh
   14000f479:	(bad)  
   14000f47a:	(bad)  
   14000f47b:	(bad)  
   14000f47c:	(bad)  
   14000f47d:	inc    DWORD PTR [rax]
   14000f47f:	add    BYTE PTR [rax],ch
   14000f481:	add    BYTE PTR [rax],al
   14000f483:	add    BYTE PTR [rax],ah
   14000f485:	add    BYTE PTR [rax],al
   14000f487:	add    BYTE PTR [rax+0x0],al
   14000f48a:	add    BYTE PTR [rax],al
   14000f48c:	add    DWORD PTR [rax],eax
   14000f48e:	or     BYTE PTR [rax],al
   14000f490:	add    BYTE PTR [rax],al
   14000f492:	add    BYTE PTR [rax],al
   14000f494:	add    BYTE PTR [rax+rax*1],al
	...
   14000f49f:	add    BYTE PTR [rax],al
   14000f4a1:	add    DWORD PTR [rax],eax
   14000f4a3:	add    BYTE PTR [rax],al
   14000f4a5:	add    DWORD PTR [rax],eax
   14000f4a7:	add    BYTE PTR [rax],al
   14000f4a9:	add    BYTE PTR [rax],al
   14000f4ab:	add    BYTE PTR [rdi+riz*1],bh
   14000f4ae:	add    BYTE PTR ds:[rdi+0x39],dl
   14000f4b2:	(bad)  
   14000f4b3:	add    BYTE PTR [rdi+0x3d],bl
   14000f4b6:	xor    eax,0x3e355200
   14000f4bb:	add    BYTE PTR [rdx+0x3d],bl
   14000f4be:	cmp    eax,0x2b547e00
   14000f4c3:	add    BYTE PTR [rbx+rdx*2+0x2d],bh
   14000f4c7:	add    BYTE PTR [rdx+0x40],ah
   14000f4ca:	add    BYTE PTR ss:[rbp+0x42],ah
   14000f4ce:	xor    eax,0x30456900
   14000f4d3:	add    BYTE PTR [rcx+0x47],ch
   14000f4d6:	add    BYTE PTR ss:[rcx+0x40],ah
   14000f4da:	cmp    DWORD PTR [rax],eax
   14000f4dc:	cmp    BYTE PTR gs:[rax],r8b
   14000f4e0:	jo     0x14000f52c
   14000f4e2:	add    BYTE PTR ss:[rip+0x1e004611],bl        # 0x15e013afa
   14000f4e9:	adc    ecx,DWORD PTR [rcx+0x0]
   14000f4ec:	sbb    DWORD PTR [rcx],edx
   14000f4ee:	rex.WRXB add BYTE PTR [r14],r11b
   14000f4f1:	adc    eax,0x1117004f
   14000f4f6:	push   rbx
   14000f4f7:	add    BYTE PTR [rsi],dl
   14000f4f9:	adc    DWORD PTR [rdi+0x0],edx
   14000f4fc:	(bad)  
   14000f4fd:	adc    DWORD PTR [rax+0x0],ebx
   14000f500:	sbb    BYTE PTR [rbx],dl
   14000f502:	pop    rbp
   14000f503:	add    BYTE PTR [rbx],ah
   14000f505:	adc    al,0x46
   14000f507:	add    BYTE PTR [rsp+rdx*1],ah
   14000f50a:	rex.RX add BYTE PTR [rax],r13b
   14000f50d:	(bad)  
   14000f50e:	rex.RX add BYTE PTR [rip+0x2c004618],r12b        # 0x16c013b2d
   14000f515:	sbb    eax,0x1a290042
   14000f51a:	rex.RX add BYTE PTR [rip+0x34004819],r12b        # 0x174013d3a
   14000f521:	and    DWORD PTR [rsi+0x0],eax
   14000f524:	cmp    BYTE PTR [rdx],ah
   14000f526:	rex.XB add BYTE PTR [r15],bpl
   14000f529:	and    al,0x58
   14000f52b:	add    BYTE PTR [rip+0x15006012],dl        # 0x155015543
   14000f531:	adc    esp,DWORD PTR [rbp+0x0]
   14000f534:	sbb    bl,BYTE PTR [rax]
   14000f536:	add    BYTE PTR [esp+edx*1],dl
   14000f53a:	push   0x0
   14000f53c:	adc    al,0x15
   14000f53e:	ins    DWORD PTR es:[rdi],dx
   14000f53f:	add    BYTE PTR [rip+0x14007116],dl        # 0x15401665b
   14000f545:	(bad)  
   14000f546:	je     0x14000f548
   14000f548:	adc    al,0x18
   14000f54a:	jbe    0x14000f54c
   14000f54c:	sbb    BYTE PTR [rdx],bl
   14000f54e:	je     0x14000f550
   14000f550:	adc    al,0x19
   14000f552:	jns    0x14000f554
   14000f554:	(bad)  
   14000f555:	sbb    bh,BYTE PTR [rbp+0x0]
   14000f558:	sub    BYTE PTR [r10+0x0],al
   14000f55c:	rex.XB sub eax,0x2f490046
   14000f562:	rex.X add BYTE PTR [rax+0x2f],cl
   14000f566:	add    BYTE PTR [r10+0x30],r9b
   14000f56a:	add    BYTE PTR [rbp+0x32],cl
   14000f56e:	add    BYTE PTR [rsi+0x3b],dl
   14000f572:	rex.WX add BYTE PTR [rcx-0x5cffe495],spl
   14000f579:	ins    DWORD PTR es:[rdi],dx
   14000f57a:	sbb    eax,0x1970a800
   14000f57f:	add    BYTE PTR [rbp-0x71ffe386],dh
   14000f585:	pop    rdi
   14000f586:	and    eax,DWORD PTR [rax]
   14000f588:	xchg   BYTE PTR [rdx+0x2e],bl
   14000f58b:	add    BYTE PTR [rdi-0x6bffdc96],bl
   14000f591:	sub    al,BYTE PTR fs:[rax]
   14000f594:	xchg   esi,eax
   14000f595:	data16 add BYTE PTR cs:[rdx-0x72ffd398],bl
   14000f59d:	(bad)  
   14000f59e:	xor    eax,0x2b6fa400
   14000f5a3:	add    BYTE PTR [rax-0x53ffda8f],ch
   14000f5a9:	jbe    0x14000f5d0
   14000f5ab:	add    BYTE PTR [rsp+rdi*2+0x6f9c0025],dh
   14000f5b2:	add    BYTE PTR [r9-0x55ffaf94],dl
   14000f5b9:	ja     0x14000f5fd
   14000f5bb:	add    BYTE PTR [rdi-0x5bffb389],ah
   14000f5c1:	jl     0x14000f60e
   14000f5c3:	add    BYTE PTR [rdx-0x4dffb486],ch
   14000f5c9:	jg     0x14000f618
   14000f5cb:	add    BYTE PTR [rbp-0x54ffab87],ah
   14000f5d1:	jge    0x14000f628
   14000f5d3:	add    bl,al
   14000f5d5:	and    DWORD PTR [rbx],0x0
   14000f5d8:	mov    ah,0x86
   14000f5da:	add    BYTE PTR [rcx-0x48ffbb7d],r15b
   14000f5e1:	or     DWORD PTR [rbx+0x0],0xffffffbe
   14000f5e5:	mov    BYTE PTR [rdi+0x0],cl
   14000f5e8:	mov    dh,0x83
   14000f5ea:	push   rcx
   14000f5eb:	add    BYTE PTR [rdx-0x3fff986a],bh
   14000f5f1:	mov    DWORD PTR [rsi+0x0],ecx
   14000f5f4:	(bad)
   14000f5f7:	add    al,cl
   14000f5f9:	(bad)  
   14000f5fa:	rex.WXB add r14b,cl
   14000f5fd:	xchg   edx,eax
   14000f5fe:	rex.RX add dl,r9b
   14000f601:	nop
   14000f602:	rex.WX add bpl,cl
   14000f605:	xchg   ecx,eax
   14000f606:	rex.W add dl,dl
   14000f609:	xchg   ebp,eax
   14000f60a:	rex.X add al,dl
   14000f60d:	xchg   ebx,eax
   14000f60e:	add    r12b,r10b
   14000f611:	cdq    
   14000f612:	rex.XB add r14b,dl
   14000f615:	fwait
   14000f616:	add    r15b,r10b
   14000f619:	popf   
   14000f61a:	rex.RX add sil,r10b
   14000f61d:	lahf   
   14000f61e:	rex.WXB add r8b,bl
   14000f621:	sahf   
   14000f622:	rex.WB add r14b,cl
   14000f625:	pushf  
   14000f626:	push   rdi
   14000f627:	add    cl,bl
   14000f629:	movabs al,ds:0xa1d90052a1d5004e
   14000f632:	push   rax
   14000f633:	add    dh,dl
   14000f635:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f636:	pop    rsi
   14000f637:	add    dh,cl
   14000f639:	movabs ds:0xa3c80069a1ce0065,eax
   14000f642:	outs   dx,DWORD PTR ds:[rsi]
   14000f643:	add    bh,cl
   14000f645:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f646:	ins    BYTE PTR es:[rdi],dx
   14000f647:	add    bl,cl
   14000f649:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f64a:	js     0x14000f64c
   14000f64c:	enter  0x7ca9,0x0
   14000f650:	xlat   BYTE PTR ds:[rbx]
   14000f651:	lods   eax,DWORD PTR ds:[rsi]
   14000f652:	jne    0x14000f654
   14000f654:	(bad)  
   14000f655:	sbb    al,0x80
   14000f657:	add    BYTE PTR [rax],bl
   14000f659:	sbb    al,0x82
   14000f65b:	add    BYTE PTR [rax],bl
   14000f65d:	sbb    eax,0x201b0085
   14000f662:	mov    al,BYTE PTR [rax]
   14000f664:	sbb    esp,DWORD PTR [rcx]
   14000f666:	mov    WORD PTR [rax],es
   14000f668:	sbb    al,0x21
   14000f66a:	lea    eax,[rax]
   14000f66c:	sbb    eax,0x1e008e25
   14000f671:	and    eax,0x261f0092
   14000f676:	xchg   esp,eax
   14000f677:	add    BYTE PTR [rcx],ah
   14000f679:	sub    bl,BYTE PTR [rcx-0x64d3df00]
   14000f67f:	add    BYTE PTR [rbx],ah
   14000f681:	sub    al,0x9c
   14000f683:	add    BYTE PTR [rbx],ah
   14000f685:	xor    ah,BYTE PTR [rcx-0x5dcedc00]
   14000f68b:	add    BYTE PTR [rip+0x2600a432],ah        # 0x166019ac3
   14000f691:	xor    al,0xa7
   14000f693:	add    BYTE PTR [rsi],ah
   14000f695:	ss test eax,0xab382700
   14000f69b:	add    BYTE PTR [rax],ch
   14000f69d:	cmp    ch,BYTE PTR [rdi-0x4dc2d800]
   14000f6a3:	add    BYTE PTR [rip+0x3200be34],ch        # 0x17201b4dd
   14000f6a9:	cmp    DWORD PTR [rsi-0x40c4cc00],edi
   14000f6af:	add    BYTE PTR [rdx],ch
   14000f6b1:	mov    r15b,0x0
   14000f6b4:	sub    eax,DWORD PTR [rbx-0x46]
   14000f6b7:	add    BYTE PTR [rbx],ch
   14000f6b9:	rex.R mov edx,0xbe492c00
   14000f6bf:	add    BYTE PTR [rsi+0x53],dl
   14000f6c2:	xchg   ebp,eax
   14000f6c3:	add    BYTE PTR [rax+0x43],al
   14000f6c6:	mov    ecx,0xba464300
   14000f6cb:	add    BYTE PTR [rsi+0x55],dl
   14000f6ce:	mov    dl,0x0
   14000f6d0:	pop    rcx
   14000f6d1:	pop    rbp
   14000f6d2:	mov    edx,0xb7626100
   14000f6d7:	add    BYTE PTR [rcx+0x66],ch
   14000f6da:	mov    dl,0x0
   14000f6dc:	imul   ebp,DWORD PTR [rcx-0x4c],0x0
   14000f6e0:	je     0x14000f752
   14000f6e2:	mov    dl,0x0
   14000f6e4:	jbe    0x14000f759
   14000f6e6:	mov    ch,0x0
   14000f6e8:	sub    eax,0x2d00c134
   14000f6ed:	(bad)
   14000f6f1:	cmp    ecx,ecx
   14000f6f3:	add    BYTE PTR [rdi],ch
   14000f6f5:	cmp    eax,0x3e3700ce
   14000f6fa:	rol    BYTE PTR [rax],0x2f
   14000f6fd:	(bad)  
   14000f6fe:	rol    BYTE PTR [rax],1
   14000f700:	xor    BYTE PTR [rdi],bh
   14000f702:	rol    BYTE PTR [rax],1
   14000f704:	sub    eax,0x2d00c048
   14000f709:	rex.WX (bad) 
   14000f70b:	add    BYTE PTR [rdi],ch
   14000f70d:	rex.WRB mov QWORD PTR [r8],0xc84e2f
   14000f714:	xor    BYTE PTR [rax-0x32],al
   14000f717:	add    BYTE PTR [rdi],ch
   14000f719:	push   rax
   14000f71a:	mov    DWORD PTR [rax],0xc9502f
   14000f720:	xor    DWORD PTR [rdx-0x33],edx
   14000f723:	add    BYTE PTR [rcx],dh
   14000f725:	push   rbp
   14000f726:	(bad)  
   14000f727:	add    BYTE PTR [rcx],dh
   14000f729:	rex.R (bad) 
   14000f72b:	add    BYTE PTR [rdx],dh
   14000f72d:	rex.WX fld DWORD PTR [rax]
   14000f730:	xor    ecx,DWORD PTR [rbp+rbx*8+0x0]
   14000f734:	xor    edx,DWORD PTR [rdi-0x2c]
   14000f737:	add    BYTE PTR [rdx],dh
   14000f739:	pop    rdx
   14000f73a:	rol    DWORD PTR [rax],cl
   14000f73c:	xor    ebx,DWORD PTR [rcx-0x2b]
   14000f73f:	add    BYTE PTR [rbx+rbx*2],dh
   14000f742:	xlat   BYTE PTR ds:[rbx]
   14000f743:	add    BYTE PTR [rbx],dh
   14000f745:	pop    rbp
   14000f746:	xlat   BYTE PTR ds:[rbx]
   14000f747:	add    BYTE PTR [rbx],dh
   14000f749:	push   rcx
   14000f74a:	fiadd  DWORD PTR [rax]
   14000f74c:	xor    al,0x53
   14000f74e:	fiadd  WORD PTR [rax]
   14000f750:	xor    eax,0x3100d95c
   14000f755:	jno    0x14000f725
   14000f757:	add    BYTE PTR [rax+riz*2],dh
   14000f75a:	fild   DWORD PTR [rax]
   14000f75c:	xor    eax,0x3600de62
   14000f761:	data16 fiadd WORD PTR [rax]
   14000f764:	xor    al,0x53
   14000f766:	loopne 0x14000f768
   14000f768:	xor    al,0x54
   14000f76a:	loope  0x14000f76c
   14000f76c:	ss pop rsp
   14000f76e:	jrcxz  0x14000f770
   14000f770:	ss pop rbx
   14000f772:	in     al,0x0
   14000f774:	ss movsxd esp,ebx
   14000f777:	add    BYTE PTR [rsi],dh
   14000f779:	fs loope 0x14000f77c
   14000f77c:	(bad)  
   14000f77d:	gs in  eax,0x0
   14000f780:	(bad)  
   14000f781:	imul   esp,ebp,0xe76d3700
   14000f787:	add    BYTE PTR [rax],bh
   14000f789:	outs   dx,DWORD PTR ds:[rsi]
   14000f78a:	out    0x0,al
   14000f78c:	cmp    BYTE PTR [rax+rbp*8+0x0],ch
   14000f790:	cmp    BYTE PTR [rdx-0x17],dh
   14000f793:	add    BYTE PTR [rdx],bh
   14000f795:	jne    0x14000f781
   14000f797:	add    BYTE PTR [rcx],bh
   14000f799:	jns    0x14000f785
   14000f79b:	add    BYTE PTR [rdi],bh
   14000f79d:	jns    0x14000f788
   14000f79f:	add    BYTE PTR [rcx],bh
   14000f7a1:	jle    0x14000f78e
   14000f7a3:	add    BYTE PTR [rsi+rdi*2],bh
   14000f7a6:	jmp    0x14000f7a8
   14000f7a8:	cmp    edi,DWORD PTR [rdi-0x14]
   14000f7ab:	add    BYTE PTR [rdi+rdi*2],bh
   14000f7ae:	in     al,dx
   14000f7af:	add    BYTE PTR [rdx],bh
   14000f7b1:	sub    ebx,0xec813b00
   14000f7b7:	add    BYTE PTR [rcx+rax*4],bh
   14000f7ba:	in     al,dx
   14000f7bb:	add    BYTE PTR [rdx],bh
   14000f7bd:	test   esp,ebp
   14000f7bf:	add    BYTE PTR [rdx],bh
   14000f7c1:	mov    ebp,ebp
   14000f7c3:	add    BYTE PTR [rdx+rcx*4],bh
   14000f7c6:	in     eax,dx
   14000f7c7:	add    BYTE PTR [rbx],bh
   14000f7c9:	(bad)  
   14000f7ca:	in     eax,dx
   14000f7cb:	add    BYTE PTR [rbx],bh
   14000f7cd:	xchg   edx,eax
   14000f7ce:	out    dx,al
   14000f7cf:	add    BYTE PTR [rax+rdx*4],bh
   14000f7d2:	out    dx,al
   14000f7d3:	add    BYTE PTR [rbx],bh
   14000f7d5:	xchg   esi,eax
   14000f7d6:	out    dx,eax
   14000f7d7:	add    BYTE PTR [rcx],bh
   14000f7d9:	cwde   
   14000f7da:	call   0x12f9c32df
   14000f7df:	add    BYTE PTR [rdx],bh
   14000f7e1:	cwde   
   14000f7e2:	lock add BYTE PTR [rdx],bh
   14000f7e5:	popf   
   14000f7e6:	lock add BYTE PTR [rcx],bh
   14000f7e9:	stos   BYTE PTR es:[rdi],al
   14000f7ea:	loope  0x14000f7ec
   14000f7ec:	cmp    al,0xbe
   14000f7ee:	(bad)  
   14000f7ef:	add    BYTE PTR [rbx],bh
   14000f7f1:	mov    edx,0xba3c00ef
   14000f7f6:	in     al,dx
   14000f7f7:	add    BYTE PTR [rdx],bh
   14000f7f9:	movabs al,ds:0xa43c00f2a63b00f0
   14000f802:	lock add BYTE PTR [rdx+rbp*4],bh
   14000f806:	icebp  
   14000f807:	add    BYTE PTR [rcx],bh
   14000f809:	lods   al,BYTE PTR ds:[rsi]
   14000f80a:	lock add BYTE PTR [rip+0x3900f1ac],bh        # 0x17901e9bd
   14000f811:	mov    al,0xf2
   14000f813:	add    BYTE PTR [rbx],bh
   14000f815:	mov    dh,0xf3
   14000f817:	add    BYTE PTR [rcx],bh
   14000f819:	mov    ebx,0xb93b00f3
   14000f81e:	hlt    
   14000f81f:	add    BYTE PTR [rbx-0x75],bl
   14000f822:	(bad)  
   14000f823:	add    BYTE PTR [rax+rcx*4-0x28],dl
   14000f827:	add    BYTE PTR [rsi+rcx*4-0x28],dl
   14000f82b:	add    BYTE PTR [rcx-0x7f],cl
   14000f82e:	loop   0x14000f830
   14000f830:	rex.B (bad) 
   14000f832:	jmp    0x12ab84137
   14000f837:	add    BYTE PTR [rbp-0x4b],dl
   14000f83a:	loopne 0x14000f83c
   14000f83c:	cmp    al,0xc2
   14000f83e:	in     eax,dx
   14000f83f:	add    BYTE PTR [rip+0x3d00ecc4],bh        # 0x17d01e509
   14000f845:	retf   
   14000f846:	in     al,dx
   14000f847:	add    BYTE PTR [rbx],bh
   14000f849:	shr    edi,1
   14000f84b:	add    BYTE PTR [rdx+rdx*8],bh
   14000f84e:	in     eax,dx
   14000f84f:	add    BYTE PTR [rax],bh
   14000f851:	enter  0xf1,0x8e
   14000f855:	mov    DWORD PTR [rdx-0x4b716a00],edi
   14000f85b:	add    BYTE PTR [rsi-0x67ff4562],cl
   14000f861:	xchg   edx,eax
   14000f862:	mov    esp,0xbf949a00
   14000f867:	add    ch,bl
   14000f869:	mov    esi,0xa99a0093
   14000f86e:	ret    
   14000f86f:	add    BYTE PTR [rdi-0x5fff3845],dl
   14000f875:	mov    bl,0xc2
	...
   14000f8a3:	add    bh,bh
   14000f8a5:	(bad)  
   14000f8a6:	inc    DWORD PTR [rax]
	...
   14000f8f4:	add    dl,dh
   14000f8f6:	fucom  st(4)
	...
   14000f914:	add    bl,ah
   14000f916:	fstp   st(3)
   14000f918:	fpatan 
	...
   14000f932:	add    BYTE PTR [rax],al
   14000f934:	add    cl,bl
   14000f936:	(bad)  
   14000f938:	int    0xc9
   14000f93a:	icebp  
	...
   14000f953:	add    dh,bl
   14000f955:	enter  0xc8c8,0xc8
   14000f959:	ret    
   14000f95a:	mov    edi,0x0
	...
   14000f973:	add    BYTE PTR [rdi-0x45454752],bl
   14000f979:	mov    edx,0xbabf
	...
   14000f992:	add    BYTE PTR [rsi-0x5b637d87],al
   14000f998:	mov    ah,0xb8
   14000f99a:	mov    ecx,0xe1bf
	...
   14000f9a7:	out    dx,al
	...
   14000f9b0:	add    BYTE PTR [rax],al
   14000f9b2:	add    BYTE PTR [rbp+0x71],ch
   14000f9b5:	jne    0x14000fa33
   14000f9b7:	test   BYTE PTR [rdx-0x4046495c],bl
   14000f9bd:	fild   WORD PTR [rax]
   14000f9bf:	add    BYTE PTR [rax],al
   14000f9c1:	add    BYTE PTR [rax],al
   14000f9c3:	add    BYTE PTR [rax],al
   14000f9c5:	add    BYTE PTR [rax+0x0],al
   14000f9cb:	add    BYTE PTR [rax],al
   14000f9cd:	add    BYTE PTR [rax],al
   14000f9cf:	add    BYTE PTR [rax],al
   14000f9d1:	add    BYTE PTR [rbx],ah
   14000f9d3:	sub    BYTE PTR [rbx+0x71],ch
   14000f9d6:	je     0x14000fa51
   14000f9d8:	test   BYTE PTR [rdx-0x3c454956],bl
   14000f9de:	loopne 0x14000f9e0
   14000f9e0:	add    BYTE PTR [rax],al
   14000f9e2:	add    BYTE PTR [rax],al
   14000f9e4:	in     al,dx
   14000f9e5:	nop
   14000f9e6:	lea    eax,[rax]
   14000f9e8:	add    BYTE PTR [rax],al
   14000f9ea:	add    BYTE PTR [rax],al
   14000f9ec:	add    BYTE PTR [rax+0x55],ch
   14000f9ef:	push   rsp
   14000f9f0:	rex.WRB
   14000f9f1:	ds (bad) 
   14000f9f3:	and    DWORD PTR [rdi],esp
   14000f9f5:	imul   esi,DWORD PTR [rcx+0x74],0x7a
   14000f9f9:	test   BYTE PTR [rdi-0x373c454c],bl
   14000f9ff:	loop   0x14000f9ee
   14000fa01:	add    BYTE PTR [rax],al
   14000fa03:	mov    dl,BYTE PTR [rax+0x90]
   14000fa09:	add    BYTE PTR [rax],al
   14000fa0b:	add    BYTE PTR [rdi+0x58],bl
   14000fa0e:	pop    rax
   14000fa0f:	push   rdi
   14000fa10:	push   rbx
   14000fa11:	rex.WRX cmp al,0x1c
   14000fa14:	and    DWORD PTR [rdi],esp
   14000fa16:	imul   esi,DWORD PTR [rcx+0x75],0x7d
   14000fa1a:	pushf  
   14000fa1b:	stos   BYTE PTR es:[rdi],al
   14000fa1c:	mov    edx,0xc3c8c8bf
   14000fa21:	mov    edx,0x879095b0
   14000fa26:	add    BYTE PTR [rax],al
   14000fa28:	add    BYTE PTR [rax],al
   14000fa2a:	add    BYTE PTR [rbp+0x5c],bl
   14000fa2d:	pop    rsp
   14000fa2e:	pop    rax
   14000fa2f:	pop    rax
   14000fa30:	push   rbx
   14000fa31:	rex.WRXB
   14000fa32:	rex.W cmp BYTE PTR [rax],dl
   14000fa35:	and    DWORD PTR [rdx],ebp
   14000fa37:	ins    DWORD PTR es:[rdi],dx
   14000fa38:	jae    0x14000fab2
   14000fa3a:	(bad)  
   14000fa3b:	movabs ds:0x95a2b9c3c8c3bfb6,eax
   14000fa44:	nop
   14000fa45:	jmp    0x14000fa47
   14000fa47:	add    BYTE PTR [rax],al
   14000fa49:	addr32 (bad) 
   14000fa4b:	pop    rbp
   14000fa4c:	pop    rsi
   14000fa4d:	pop    rsp
   14000fa4e:	pop    rsp
   14000fa4f:	push   rbp
   14000fa50:	push   rdi
   14000fa51:	rex.WRXB push r8
   14000fa53:	rex.RXB or DWORD PTR [r9],r10d
   14000fa56:	and    eax,0x7e756e6b
   14000fa5b:	(bad)  
   14000fa5c:	mov    ecx,0xbfc8c8c3
   14000fa61:	mov    ah,0xa0
   14000fa63:	nop
   14000fa64:	nop
   14000fa65:	add    BYTE PTR [rax],al
   14000fa67:	add    BYTE PTR [rax],al
   14000fa69:	movsxd esp,DWORD PTR [rdx+0x60]
   14000fa6c:	pop    rbp
   14000fa6d:	pop    rsi
   14000fa6e:	pop    rsp
   14000fa6f:	pop    rax
   14000fa70:	push   rbp
   14000fa71:	push   rbx
   14000fa72:	push   rax
   14000fa73:	rex.WX
   14000fa74:	rex.X add DWORD PTR [rip+0x7a736d27],edx        # 0x1ba7467a2
   14000fa7b:	(bad)  
   14000fa7c:	mov    ah,0xc3
   14000fa7e:	enter  0xbfc8,0xb2
   14000fa82:	xchg   ebp,eax
   14000fa83:	nop
   14000fa84:	mov    DWORD PTR [rax],eax
   14000fa86:	add    BYTE PTR [rax],al
   14000fa88:	add    BYTE PTR [rax],al
   14000fa8a:	add    BYTE PTR [rdx+0x60],ch
   14000fa8d:	pop    rbp
   14000fa8e:	pop    rsp
   14000fa8f:	pop    rax
   14000fa90:	push   rbp
   14000fa91:	rex.WRXB push r8
   14000fa93:	rex.WB xor cl,BYTE PTR [r10]
   14000fa96:	adc    BYTE PTR [rcx],ah
   14000fa98:	imul   ebp,DWORD PTR [rsi+0x78],0xffffff98
   14000fa9c:	mov    ah,0xc3
   14000fa9e:	retf   0xbac8
   14000faa1:	mov    al,0x95
   14000faa3:	nop
	...
   14000faac:	add    al,dh
   14000faae:	(bad)  
   14000faaf:	pop    rsp
   14000fab0:	push   rbp
   14000fab1:	push   rbx
   14000fab2:	rex.RB (bad) 
   14000fab4:	cldemote BYTE PTR [rdx]
   14000fab7:	adc    esp,DWORD PTR [rdi]
   14000fab9:	outs   dx,BYTE PTR ds:[rsi]
   14000faba:	jne    0x14000fa40
   14000fabc:	mov    ah,0xc3
   14000fabe:	retf   0xbac8
   14000fac1:	movabs ds:0x9090,al
   14000faca:	add    BYTE PTR [rax],al
   14000facc:	add    BYTE PTR [rax],al
   14000face:	add    BYTE PTR [rax],al
   14000fad0:	addr32 rex.R (bad) 
   14000fad3:	sbb    DWORD PTR [rax],ebx
   14000fad5:	sbb    BYTE PTR [rdx],al
   14000fad7:	sbb    al,0x21
   14000fad9:	imul   esi,DWORD PTR [rbx+0x7e],0xffffffae
   14000fadd:	ret    
   14000fade:	iret   
   14000fadf:	enter  0xa0b9,0x90
   14000fae3:	mov    WORD PTR [rax],es
	...
   14000faf1:	add    BYTE PTR [rax+rsi*1],al
   14000faf4:	(bad)  
   14000faf5:	(bad)  
   14000faf6:	(bad)  
   14000faf7:	or     DWORD PTR [rbx],edx
   14000faf9:	sub    ch,BYTE PTR [rsi+0x7a]
   14000fafc:	stos   BYTE PTR es:[rdi],al
   14000fafd:	enter  0xc8cf,0xb4
   14000fb01:	xchg   ebp,eax
   14000fb02:	nop
	...
   14000fb0f:	add    BYTE PTR [rax],al
   14000fb11:	add    BYTE PTR [rcx+0x39],dl
   14000fb14:	(bad)  
   14000fb15:	or     BYTE PTR [rax],dh
   14000fb17:	(bad)  
   14000fb18:	sbb    al,0x25
   14000fb1a:	ins    DWORD PTR es:[rdi],dx
   14000fb1b:	jns    0x14000fac7
   14000fb1d:	leave  
   14000fb1e:	(bad)  
   14000fb1f:	enter  0x95b2,0x80
	...
   14000fb33:	fs rex.WXB xor al,0x6
   14000fb37:	or     eax,0x756b150a
   14000fb3c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fb3d:	leave  
   14000fb3e:	fcmovne st,st(0)
   14000fb40:	test   eax,0x8e90
	...
   14000fb55:	rex.RX xor eax,0x271d3a37
   14000fb5b:	jae    0x14000fafc
   14000fb5d:	(bad)  
   14000fb5e:	fcmovnb st,st(5)
   14000fb60:	movabs al,ds:0x90
	...
   14000fb75:	add    BYTE PTR [rax],al
   14000fb77:	xor    al,0xa
   14000fb7a:	and    DWORD PTR [rcx-0x64],esi
   14000fb7d:	fsubr  st,st(2)
   14000fb7f:	mov    esi,0x8195
	...
   14000fb98:	rex.B
   14000fb99:	rex adc DWORD PTR [rbx-0x7c],ebp
   14000fb9d:	fucomp st(0)
   14000fb9f:	mov    edx,0x8e95
	...
   14000fbb8:	add    BYTE PTR [rsi],dh
   14000fbba:	add    eax,0xe8e57e25
   14000fbbf:	mov    ah,0x90
	...
   14000fbd9:	imul   edi,DWORD PTR [rdx],0xe7e57916
   14000fbdf:	test   eax,0x87
	...
   14000fbf8:	add    BYTE PTR [rax],al
   14000fbfa:	rex.WR sub rax,0xffffffff93d1d171
   14000fc00:	out    dx,al
	...
   14000fc19:	add    BYTE PTR [rax],al
   14000fc1b:	cmp    eax,0x94c9d029
	...
   14000fc38:	add    BYTE PTR [rax],al
   14000fc3a:	add    BYTE PTR [rdi+0x20],ah
   14000fc3d:	stos   DWORD PTR es:[rdi],eax
   14000fc3e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   14000fc5b:	add    BYTE PTR [rbx+0x75],al
   14000fc5e:	mov    eax,DWORD PTR [rax]
	...
   14000fca8:	(bad)  
   14000fca9:	(bad)  
   14000fcaa:	(bad)  
   14000fcab:	(bad)  
   14000fcac:	(bad)  
   14000fcad:	(bad)  
   14000fcae:	(bad)  
   14000fcaf:	(bad)  
   14000fcb0:	(bad)  
   14000fcb1:	clc    
   14000fcb2:	(bad)  
   14000fcb3:	(bad)  
   14000fcb4:	(bad)  
   14000fcb5:	clc    
   14000fcb6:	(bad)  
   14000fcb7:	(bad)  
   14000fcb8:	(bad)  
   14000fcb9:	clc    
   14000fcba:	(bad)  
   14000fcbb:	(bad)  
   14000fcbc:	push   rax
   14000fcbe:	(bad)  
   14000fcbf:	(bad)  
   14000fcc0:	push   rax
   14000fcc2:	ud0    edi,edi
   14000fcc5:	loopne 0x14000fcce
   14000fcc7:	(bad)  
   14000fcc8:	jmp    rax
   14000fcca:	add    edi,ebp
   14000fccc:	inc    eax
   14000fcce:	add    ecx,esi
   14000fcd0:	clc    
   14000fcd1:	add    BYTE PTR [rax],al
   14000fcd3:	movsxd esi,eax
   14000fcd5:	add    BYTE PTR [rax],al
   14000fcd7:	add    esp,eax
   14000fcd9:	add    BYTE PTR [rax],al
   14000fcdb:	add    eax,DWORD PTR [rax-0x7ff90000]
   14000fce1:	add    BYTE PTR [rax],al
   14000fce3:	(bad)  
   14000fce4:	loopne 0x14000fce6
   14000fce6:	add    BYTE PTR [rdi],cl
   14000fce8:	clc    
   14000fce9:	add    BYTE PTR [rax],al
   14000fceb:	ud0    eax,DWORD PTR [rax]
   14000fcee:	add    BYTE PTR [rdi],cl
   14000fcf0:	inc    eax
   14000fcf2:	add    BYTE PTR [rdi],bl
   14000fcf4:	inc    eax
   14000fcf6:	add    BYTE PTR [rdi],bl
   14000fcf8:	jmp    rax
   14000fcfa:	add    BYTE PTR [rdi],bl
   14000fcfc:	(bad)  
   14000fcfd:	clc    
   14000fcfe:	add    BYTE PTR [rdi],bh
   14000fd00:	(bad)  
   14000fd01:	inc    BYTE PTR [rax]
   14000fd03:	(bad)  
   14000fd04:	(bad)  
   14000fd05:	inc    DWORD PTR [rax]
   14000fd07:	(bad)  
   14000fd08:	(bad)  
   14000fd09:	inc    DWORD PTR [rax-0x7f000081]
   14000fd0f:	jg     0x14000fd10
   14000fd11:	inc    eax
   14000fd13:	jg     0x14000fd14
   14000fd15:	jmp    rax
   14000fd17:	(bad)  
   14000fd18:	(bad)  
   14000fd19:	jmp    rcx
   14000fd1b:	(bad)  
   14000fd1c:	(bad)  
   14000fd1d:	push   rcx
   14000fd1f:	(bad)  
   14000fd20:	(bad)  
   14000fd21:	(bad)  
   14000fd22:	(bad)  
   14000fd23:	(bad)  
   14000fd24:	(bad)  
   14000fd25:	(bad)  
   14000fd26:	(bad)  
   14000fd27:	jmp    FWORD PTR [rax]
   14000fd29:	add    BYTE PTR [rax],al
   14000fd2b:	add    BYTE PTR [rax],dl
   14000fd2d:	add    BYTE PTR [rax],al
   14000fd2f:	add    BYTE PTR [rax],ah
   14000fd31:	add    BYTE PTR [rax],al
   14000fd33:	add    BYTE PTR [rcx],al
   14000fd35:	add    BYTE PTR [rax],cl
   14000fd37:	add    BYTE PTR [rax],al
   14000fd39:	add    BYTE PTR [rax],al
   14000fd3b:	add    BYTE PTR [rax],al
   14000fd3d:	add    DWORD PTR [rax],eax
	...
   14000fd47:	add    BYTE PTR [rax],al
   14000fd49:	add    DWORD PTR [rax],eax
   14000fd4b:	add    BYTE PTR [rax],al
   14000fd4d:	add    DWORD PTR [rax],eax
   14000fd4f:	add    BYTE PTR [rax],al
   14000fd51:	add    BYTE PTR [rax],al
   14000fd53:	add    BYTE PTR [rsi+0x37],dl
   14000fd56:	cmp    al,0x0
   14000fd58:	push   rsi
   14000fd59:	cmp    BYTE PTR [rbx],bh
   14000fd5b:	add    BYTE PTR [rsi+0x45],ah
   14000fd5e:	add    BYTE PTR ds:[rdi],dl
   14000fd61:	adc    al,0x5f
   14000fd63:	add    BYTE PTR [rdx],bl
   14000fd65:	(bad)  
   14000fd66:	pop    rsi
   14000fd67:	add    BYTE PTR [rdx*1+0x1e2c0045],ah
   14000fd6e:	rex.WRB add BYTE PTR [rip+0x19004128],r15b        # 0x159013e9d
   14000fd75:	sbb    DWORD PTR [rsi+0x0],ebp
   14000fd78:	adc    eax,0x16007317
   14000fd7d:	sbb    DWORD PTR [rcx+0x0],edi
   14000fd80:	cmp    edi,DWORD PTR ds:[rbp+0x0]
   14000fd84:	rex.XB sub eax,0x354e0046
   14000fd8a:	add    BYTE PTR [rdi+0x33],al
   14000fd8e:	rex.WRX add BYTE PTR [rax+0x3b],r11b
   14000fd92:	rex.RX add BYTE PTR [rsi-0x65ffd7a6],r8b
   14000fd99:	push   0x5b800027
   14000fd9e:	add    BYTE PTR [rbp-0x59ffa385],bl
   14000fda5:	jbe    0x14000fded
   14000fda7:	add    BYTE PTR [rdi-0x49ffac81],ch
   14000fdad:	add    BYTE PTR [rcx+0x0],0xb2
   14000fdb1:	test   DWORD PTR [rdx+0x0],ecx
   14000fdb4:	(bad)  
   14000fdb5:	mov    cs,WORD PTR [rbx+0x0]
   14000fdb8:	ror    DWORD PTR [rbp-0x733bffb1],0x4d
   14000fdbf:	add    ch,cl
   14000fdc1:	xchg   ecx,eax
   14000fdc2:	rex.RXB add r10b,r10b
   14000fdc5:	xchg   ebp,eax
   14000fdc6:	rex.XB add r13b,dl
   14000fdc9:	cdq    
   14000fdca:	add    dil,r10b
   14000fdcd:	pushf  
   14000fdce:	rex.RX add al,r11b
   14000fdd1:	lahf   
   14000fdd2:	rex.WXB add r9b,dl
   14000fdd5:	movabs al,ds:0xaed8007aa9ce005b
   14000fdde:	jb     0x14000fde0
   14000fde0:	sbb    ah,BYTE PTR [rax]
   14000fde2:	xchg   DWORD PTR [rax],eax
   14000fde4:	sbb    ah,BYTE PTR [rax]
   14000fde6:	mov    BYTE PTR [rax],al
   14000fde8:	sbb    al,0x22
   14000fdea:	lea    eax,[rax]
   14000fdec:	and    BYTE PTR [rcx],ch
   14000fdee:	xchg   edi,eax
   14000fdef:	add    BYTE PTR [rax],ah
   14000fdf1:	sub    bl,BYTE PTR [rax-0x59cbdb00]
   14000fdf7:	add    BYTE PTR [rsi],ah
   14000fdf9:	ss test eax,0xab382700
   14000fdff:	add    BYTE PTR [rdx],ch
   14000fe01:	(bad)  
   14000fe02:	mov    ch,0x0
   14000fe04:	cmp    al,0x42
   14000fe06:	mov    esp,0xb36a2b00
   14000fe0b:	add    BYTE PTR [rdi+0x4b],al
   14000fe0e:	(bad)  
   14000fe0f:	add    BYTE PTR [rbp+riz*2-0x41],bl
   14000fe13:	add    BYTE PTR [rbx+0x72],dh
   14000fe16:	mov    esp,0xc7382e00
   14000fe1b:	add    BYTE PTR [rdx],dh
   14000fe1d:	cmp    eax,eax
   14000fe1f:	add    BYTE PTR [rsi],ch
   14000fe21:	rex.WX ret 
   14000fe23:	add    BYTE PTR [rsi],ch
   14000fe25:	rex.WR ret 0x2f00
   14000fe29:	rex.WRXB enter 0x3000,0x42
   14000fe2e:	iret   
   14000fe2f:	add    BYTE PTR [rax],dh
   14000fe31:	rex rol BYTE PTR [rax],1
   14000fe34:	xor    ecx,DWORD PTR [rsi-0x28]
   14000fe37:	add    BYTE PTR [rdx],dh
   14000fe39:	push   rdi
   14000fe3a:	rol    DWORD PTR [rax],cl
   14000fe3c:	xor    DWORD PTR [rsi-0x35],edi
   14000fe3f:	add    BYTE PTR [rip+0x3700da62],dh        # 0x17701d8a7
   14000fe45:	jae    0x14000fe1f
   14000fe47:	add    BYTE PTR [rip+0x3700e05b],dh        # 0x17701dea8
   14000fe4d:	push   0x683700e3
   14000fe52:	out    0x0,al
   14000fe54:	cmp    BYTE PTR [rbp-0x1a],ch
   14000fe57:	add    BYTE PTR [rdi],dh
   14000fe59:	jne    0x14000fe3e
   14000fe5b:	add    BYTE PTR [rax],bh
   14000fe5d:	je     0x14000fe45
   14000fe5f:	add    BYTE PTR [rsi],dh
   14000fe61:	jp     0x14000fe43
   14000fe63:	add    BYTE PTR [rcx],bh
   14000fe65:	jne    0x14000fe50
   14000fe67:	add    BYTE PTR [rdx],bh
   14000fe69:	jns    0x14000fe55
   14000fe6b:	add    BYTE PTR [rbx+0x49],al
   14000fe6e:	rol    DWORD PTR [rax],0x41
   14000fe71:	jle    0x14000fe58
   14000fe73:	add    BYTE PTR [rax+rax*4],dh
   14000fe76:	fld    DWORD PTR [rax]
   14000fe78:	cmp    al,0x8a
   14000fe7a:	in     al,dx
   14000fe7b:	add    BYTE PTR [rbx],bh
   14000fe7d:	(bad)  
   14000fe7e:	in     eax,dx
   14000fe7f:	add    BYTE PTR [rax],bh
   14000fe81:	xchg   esp,eax
   14000fe82:	in     eax,0x0
   14000fe84:	cmp    edx,DWORD PTR [rcx-0x68c4ff12]
   14000fe8a:	out    dx,eax
   14000fe8b:	add    BYTE PTR [rbx],bh
   14000fe8d:	fwait
   14000fe8e:	out    dx,eax
   14000fe8f:	add    BYTE PTR [rcx],bh
   14000fe91:	lahf   
   14000fe92:	lock add BYTE PTR [rcx],bh
   14000fe95:	movabs ds:0x9d6200c68f7200ed,eax
   14000fe9e:	(bad)  
   14000fe9f:	add    BYTE PTR [rdx-0x49],al
   14000fea2:	out    dx,al
   14000fea3:	add    BYTE PTR [rax-0x23ff4567],ah
   14000fea9:	mov    ebx,0x8385008c
   14000feae:	rol    BYTE PTR [rax],0x8e
   14000feb1:	mov    eax,ebx
   14000feb3:	add    BYTE PTR [rbp-0x5cff3971],cl
   14000feb9:	scas   eax,DWORD PTR es:[rdi]
   14000feba:	enter  0x0,0x0
	...
   14001014a:	add    BYTE PTR [rax],al
   14001014c:	(bad)  
   14001014d:	(bad)  
   14001014e:	inc    DWORD PTR [rax]
	...
   140010164:	add    BYTE PTR [rax],al
   140010166:	add    BYTE PTR [rax+rax*1+0x0],dl
	...
   140010176:	push   rbx
   140010177:	rex.WRXB
   140010178:	rex.WXB pop r10
	...
   140010186:	xor    eax,0x45413c
	...
   140010193:	add    BYTE PTR [rax],al
   140010195:	or     al,0x26
   140010197:	sub    dh,BYTE PTR [rsi]
   140010199:	(bad)  
   14001019a:	rex.W add BYTE PTR [rax],al
   14001019d:	add    BYTE PTR [rbp+0x0],dl
   1400101a0:	add    BYTE PTR [rax],al
   1400101a2:	and    bl,BYTE PTR [rdi+rdx*1]
   1400101a5:	or     eax,0x3a2b260a
   1400101aa:	rex.RX
   1400101ab:	rex.WXB push r10
   1400101ad:	xor    BYTE PTR [rbx],dh
   1400101af:	add    BYTE PTR [rax],al
   1400101b1:	and    DWORD PTR [rdi],ebx
   1400101b3:	sbb    eax,0xb07151b
   1400101b8:	(bad)  
   1400101b9:	xor    eax,0x38454b45
   1400101be:	xor    DWORD PTR [rax],eax
   1400101c0:	add    BYTE PTR [rbx],ah
   1400101c2:	and    BYTE PTR [rdi],bl
   1400101c4:	sbb    edx,DWORD PTR [rsi]
   1400101c6:	add    eax,DWORD PTR [rsi+riz*1]
   1400101c9:	sub    al,0x43
   1400101cb:	rex.WXB
   1400101cc:	xor    al,BYTE PTR [rax]
   1400101cf:	add    BYTE PTR [rax],al
   1400101d1:	add    BYTE PTR [rax],al
   1400101d3:	push   rsi
   1400101d4:	sbb    edx,DWORD PTR [rax]
   1400101d6:	(bad)  
   1400101d7:	or     BYTE PTR [rdx],cl
   1400101d9:	sub    DWORD PTR [rbx+0x4b],eax
   1400101dc:	ds sub eax,0x0
   1400101e2:	add    BYTE PTR [rax],al
   1400101e4:	add    BYTE PTR [rbx],dl
   1400101e6:	add    al,BYTE PTR [rcx]
   1400101e8:	add    eax,0x394f4227
   1400101ed:	push   rdi
	...
   1400101f6:	sbb    BYTE PTR [rcx],dl
   1400101f8:	(bad)  
   1400101f9:	and    al,0x44
   1400101fb:	push   rax
   1400101fc:	(bad)  
	...
   140010205:	add    BYTE PTR [rax],al
   140010207:	add    BYTE PTR [rdx],dl
   140010209:	or     DWORD PTR [rcx+0x51],ecx
   14001020c:	rex.RXB add BYTE PTR [r8],r8b
	...
   140010217:	add    BYTE PTR [rax],al
   140010219:	(bad)  
   14001021b:	rex.WR pop rax
	...
   140010229:	adc    al,0x2e
   14001022b:	cmp    eax,0x0
	...
   140010238:	add    BYTE PTR [rax],al
   14001023a:	(bad)  
   14001023b:	pop    rax
	...
   140010250:	(bad)  
   140010251:	inc    DWORD PTR [rax]
   140010253:	add    dh,bh
   140010255:	inc    DWORD PTR [rax]
   140010257:	add    ah,bh
   140010259:	(bad)  
   14001025a:	add    BYTE PTR [rax],al
   14001025c:	cld    
   14001025d:	(bad)  
   14001025e:	add    BYTE PTR [rax],al
   140010260:	clc    
   140010261:	sbb    eax,0x1c00000
   140010266:	add    BYTE PTR [rax],al
   140010268:	add    BYTE PTR [rcx],0x0
   14001026b:	add    BYTE PTR [rax-0x1ffffffd],al
   140010271:	add    eax,DWORD PTR [rax]
   140010273:	add    al,bh
   140010275:	add    eax,DWORD PTR [rax]
   140010277:	add    ah,bh
   140010279:	(bad)  
   14001027a:	add    BYTE PTR [rax],al
   14001027c:	inc    DWORD PTR [rdi]
   14001027e:	add    BYTE PTR [rax],al
   140010280:	inc    DWORD PTR [rdi-0x70010000]
   140010286:	add    BYTE PTR [rax],al
   140010288:	dec    edi
   14001028a:	add    BYTE PTR [rax],al
   14001028c:	(bad)  
   14001028d:	inc    DWORD PTR [rax]
   14001028f:	add    BYTE PTR [rcx+0xd474e50],cl
   140010295:	or     bl,BYTE PTR [rdx]
   140010297:	or     al,BYTE PTR [rax]
   140010299:	add    BYTE PTR [rax],al
   14001029b:	or     eax,0x52444849
   1400102a0:	add    BYTE PTR [rax],al
   1400102a2:	add    DWORD PTR [rax],eax
   1400102a4:	add    BYTE PTR [rax],al
   1400102a6:	add    DWORD PTR [rax],eax
   1400102a8:	or     BYTE PTR [rsi],al
   1400102aa:	add    BYTE PTR [rax],al
   1400102ac:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   1400102b0:	data16 add BYTE PTR [rax],al
   1400102b3:	and    BYTE PTR [rax],al
   1400102b5:	rex.WB
   1400102b6:	rex.R
   1400102b7:	push   r12
   1400102b9:	js     0x140010257
   1400102bb:	in     al,dx
   1400102bc:	mov    ebp,0xd765b069
   1400102c1:	jne    0x1400102a2
   1400102c3:	neg    DWORD PTR [rbx+0x7b]
   1400102c6:	lahf   
   1400102c7:	jae    0x1400102b7
   1400102c9:	lock out 0xa1,al
   1400102cc:	(bad)  
   1400102cd:	movabs al,ds:0x24ce06201001031b
   1400102d6:	sub    dh,cl
   1400102d8:	and    al,0x38
   1400102da:	push   rbx
   1400102db:	and    al,BYTE PTR [rbp-0x6f]
   1400102de:	adc    ch,BYTE PTR [rcx-0x75b4d25e]
   1400102e4:	and    al,0x47
   1400102e6:	mov    dl,0x2d
   1400102e8:	cmp    esi,DWORD PTR [rdx+0x6cb24b2d]
   1400102ee:	retf   
   1400102ef:	rex.WX cmp al,0xa5
   1400102f2:	(bad)  
   1400102f3:	pop    rbx
   1400102f4:	mov    dl,BYTE PTR [rbx+rbx*8]
   1400102f7:	sub    ecx,ebx
   1400102f9:	sub    al,bh
   1400102fb:	pop    rdi
   1400102fc:	pushf  
   1400102fd:	mov    ah,BYTE PTR [rbp-0x69]
   140010300:	push   rbx
   140010301:	scas   al,BYTE PTR es:[rdi]
   140010302:	jl     0x14001028c
   140010304:	stos   DWORD PTR es:[rdi],eax
   140010305:	xchg   edx,eax
   140010306:	stos   BYTE PTR es:[rdi],al
   140010307:	cmp    BYTE PTR [rcx-0x368e3aac],ch
   14001030d:	mov    gs,WORD PTR [rip+0xffffffffd822e595]        # 0x11823e8a8
   140010313:	call   0xfc3e065e
   140010318:	jle    0x140010357
   14001031a:	mov    edi,0x7bddef7e
   14001031f:	iret   
   140010320:	fldcw  WORD PTR [rbx]
   140010322:	(bad)  
   140010323:	neg    dl
   140010325:	sti    
   140010326:	pushf  
   140010327:	sti    
   140010328:	rcl    BYTE PTR [rcx+rbp*1],1
   14001032b:	or     DWORD PTR [rax-0x5d],esp
   14001032e:	mov    ebx,0xbf5e02cf
   140010333:	sti    
   140010334:	out    dx,al
   140010335:	jo     0x1400102dd
   140010337:	jnp    0x14001030f
   140010339:	hlt    
   14001033a:	pop    rdi
   14001033b:	push   QWORD PTR [rbp+0x4bd2f436]
   140010341:	(bad)  
   140010342:	mov    ebp,0x2f4bd2f4
   140010347:	mov    ebp,0x2f4bd2f4
   14001034c:	mov    ebp,0x2f4bd2f4
   140010351:	mov    ebp,0x2f4bd2f4
   140010356:	mov    ebp,0x2f4bd2f4
   14001035b:	mov    ebp,0x2f4bd2f4
   140010360:	mov    ebp,0x2f4bd2f4
   140010365:	mov    ebp,0x2f4bd2f4
   14001036a:	mov    ebp,0x2f4bd2f4
   14001036f:	mov    ebp,0x2f4bd2f4
   140010374:	mov    ebp,0x2f4bd2f4
   140010379:	ja     0x14001030d
   14001037b:	enter  0x3eed,0x80
   14001037f:	pop    rsi
   140010380:	jp     0x140010383
   140010382:	loopne 0x140010371
   140010384:	(bad)  
   140010385:	sub    al,ah
   140010387:	sti    
   140010388:	push   rcx
   140010389:	add    BYTE PTR [rdi],al
   14001038b:	clc    
   14001038c:	in     eax,0xa7
   14001038e:	fidivr WORD PTR [rdx+0x78]
   140010391:	cmp    BYTE PTR [rax],ch
   140010393:	ds jns 0x14001038e
   140010396:	out    0xa5,al
   140010398:	(bad)  
   140010399:	mov    esp,0x7a9cae1
   14001039e:	(bad)  
   14001039f:	ja     0x140010357
   1400103a1:	retf   0xfdc5
   1400103a4:	sbb    esp,edi
   1400103a6:	stos   DWORD PTR es:[rdi],eax
   1400103a7:	jmp    0x187dfc3aa
   1400103ac:	(bad)  
   1400103ad:	in     eax,0xaf
   1400103af:	(bad)  
   1400103b0:	outs   dx,DWORD PTR ds:[rsi]
   1400103b1:	cli    
   1400103b2:	sub    eax,0x9fb1a0
   1400103b7:	sub    BYTE PTR [rdi-0x4859407],bh
   1400103bd:	rex.WRX loop 0x14001038e
   1400103c0:	adc    edi,DWORD PTR [rdi-0x45]
   1400103c3:	push   fs
   1400103c5:	xchg   edi,eax
   1400103c6:	pop    rsi
   1400103c7:	cmp    cl,dl
   1400103c9:	out    dx,eax
   1400103ca:	add    BYTE PTR [rdx],0x28
   1400103cd:	sub    DWORD PTR [rdx-0xf],0xe33ea7f1
   1400103d4:	mov    ch,0xfe
   1400103d6:	retf   0xdefa
   1400103d9:	in     eax,0xf7
   1400103db:	sbb    al,0xba
   1400103dd:	jno    0x1400103c0
   1400103df:	rex.WRB retf 
   1400103e1:	mov    ebx,0xcd1feed7
   1400103e6:	outs   dx,BYTE PTR ds:[rsi]
   1400103e7:	(bad)  
   1400103e8:	sbb    esi,DWORD PTR [rbx+rdx*8]
   1400103eb:	int    0x31
   1400103ed:	mov    bl,0xea
   1400103ef:	shl    DWORD PTR [rax-0x420198d],0x8d
   1400103f6:	sbb    esi,DWORD PTR [rbx-0x25]
   1400103f9:	cmp    dh,dh
   1400103fb:	(bad)  
   1400103fc:	cmp    dh,dh
   1400103fe:	(bad)  
   1400103ff:	loope  0x1400103dd
   140010401:	outs   dx,DWORD PTR ds:[rsi]
   140010402:	jle    0x1400103ff
   140010404:	iret   
   140010405:	jrcxz  0x140010415
   140010407:	xchg   esp,eax
   140010408:	ds add ch,al
   14001040b:	in     eax,0xf6
   14001040d:	rex.WX stos QWORD PTR es:[rdi],rax
   14001040f:	cld    
   140010410:	fidivr WORD PTR [rsi-0x36]
   140010413:	rex.RXB (bad) 
   140010415:	(bad)  
   140010416:	mov    ecx,0x5616cfb7
   14001041b:	jg     0x14001049b
   14001041d:	test   esi,0x5f36e7e5
   140010423:	(bad)  
   140010424:	sub    eax,0x7fe9e379
   140010429:	(bad)  
   14001042a:	mov    cl,0xed
   14001042c:	(bad)  
   14001042d:	pop    rax
   14001042e:	fnstsw WORD PTR [rdi-0x7398a73e]
   140010434:	mov    esp,0xf38f7a50
   140010439:	(bad)  
   14001043a:	fldcw  WORD PTR [rcx+0x51]
   14001043d:	dec    dl
   14001043f:	call   QWORD PTR [rax+0x3e]
   140010442:	dec    BYTE PTR [rdi]
   140010444:	inc    BYTE PTR [rbx-0x2bf644a5]
   14001044a:	(bad)  
   14001044b:	push   0xffffffff81a3e940
   140010450:	outs   dx,DWORD PTR ds:[rsi]
   140010451:	rex.WB cli 
   140010453:	or     BYTE PTR [rax+0x5127db97],ah
   140010459:	stc    
   14001045a:	sbb    eax,0x802c3ef1
   14001045f:	(bad)  
   140010460:	test   eax,0x3fc3f9ef
   140010465:	mov    ah,0xb0
   140010467:	mov    esi,0xa676f7f9
   14001046c:	mov    bl,0xa7
   14001046e:	xchg   BYTE PTR [rdi-0x1],ah
   140010471:	movabs ds:0xdfd9f0e6bffcfc3c,eax
   14001047a:	(bad)  
   14001047b:	jne    0x140010464
   14001047d:	cmp    al,0x23
   14001047f:	popf   
   140010480:	xor    dh,dh
   140010482:	ret    0xbd8
   140010485:	rex.XB out dx,eax
   140010487:	sbb    BYTE PTR [rbx-0x6a],bh
   14001048a:	(bad)  
   14001048b:	fidivr DWORD PTR [rsp+rbp*8-0x63]
   14001048f:	int    0xe5
   140010491:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010492:	(bad)  
   140010493:	fs neg edi
   140010496:	cld    
   140010497:	imul   edi,DWORD PTR [rdi-0x4918287],0xffffffc7
   14001049e:	fiadd  WORD PTR [rcx+0x1f]
   1400104a1:	or     esp,edi
   1400104a3:	out    dx,al
   1400104a4:	rcr    BYTE PTR [rbx],cl
   1400104a6:	sbb    BYTE PTR [rsi+0x6e],0x8f
   1400104aa:	int3   
   1400104ab:	jnp    0x1400104ab
   1400104ad:	add    ch,BYTE PTR [rax+0x3f7df2de]
   1400104b3:	clc    
   1400104b4:	xor    esp,ebx
   1400104b6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400104b7:	in     eax,0xbf
   1400104b9:	mov    dl,0xdf
   1400104bb:	call   0x189ddf428
   1400104c0:	mov    ?,edi
   1400104c2:	(bad)  
   1400104c3:	dec    ebp
   1400104c5:	movabs eax,ds:0xfb1817bbeb23fe97
   1400104ce:	sbb    ebx,eax
   1400104d0:	movabs ds:0x5161828a0c145c60,al
   1400104d9:	xor    BYTE PTR [rax],ch
   1400104db:	test   BYTE PTR [rdx+0x60],dl
   1400104de:	and    dl,bh
   1400104e0:	fdiv   DWORD PTR [rcx]
   1400104e2:	(bad)  
   1400104e4:	enter  0xdc53,0xf8
   1400104e8:	(bad)  
   1400104e9:	dec    edx
   1400104eb:	sbb    eax,0x8c48be
   1400104f0:	movabs ds:0xf400de9577e046f4,al
   1400104f9:	repnz in eax,dx
   1400104fb:	xchg   edi,eax
   1400104fc:	pop    rbx
   1400104fd:	sub    bh,bh
   1400104ff:	fstp   TBYTE PTR [rsi+0x7a7f07ef]
   140010505:	mov    eax,0x4173f8b0
   14001050a:	sbb    al,0x17
   14001050c:	(bad)  
   14001050d:	pop    rsi
   14001050e:	(bad)  
   14001050f:	jrcxz  0x140010550
   140010511:	(bad)  
   140010512:	lahf   
   140010513:	sbb    al,0x3e
   140010515:	stc    
   140010516:	out    dx,eax
   140010517:	pop    rax
   140010518:	mov    ebx,0xd9158171
   14001051d:	addr32 pop rax
   14001051f:	jp     0x1400104e7
   140010521:	mov    esi,0xa0066460
   140010526:	je     0x14001056a
   140010528:	sub    DWORD PTR [rsi+0x9c28452],ecx
   14001052e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001052f:	or     eax,DWORD PTR [rdi-0x38167af2]
   140010535:	fisubr WORD PTR [rdx-0x3200a9]
   14001053b:	out    dx,al
   14001053c:	mov    ds,WORD PTR [rax+riz*4+0x37]
   140010540:	add    bl,bh
   140010542:	xchg   edx,eax
   140010543:	mov    eax,0xbd007ddb
   140010548:	fsub   QWORD PTR [rbx-0xe]
   14001054b:	rex.WX shr BYTE PTR [rdi+0x7e97cb7a],0xe0
   140010553:	xchg   DWORD PTR [rdi],eax
   140010555:	jrcxz  0x14001051c
   140010557:	lahf   
   140010558:	jae    0x14001057c
   14001055a:	pop    rsp
   14001055b:	(bad)  
   14001055d:	movabs ds:0x862dfe9e6cdbf33a,eax
   140010566:	xlat   BYTE PTR ds:[rbx]
   140010567:	mov    dh,0x18
   140010569:	test   DWORD PTR [rbp+0x53],ebx
   14001056c:	jbe    0x1400105bd
   14001056e:	jmp    0x14a3ae38f
   140010573:	out    0x28,eax
   140010575:	popf   
   140010576:	push   rax
   140010577:	mov    al,ah
   140010579:	popf   
   14001057a:	pop    rax
   14001057b:	(bad)  
   14001057c:	and    DWORD PTR [rsi+rdi*1+0x3c],edx
   140010580:	lock add al,0x37
   140010583:	jle    0x140010582
   140010585:	(bad)  
   140010586:	(bad)  
   140010587:	mov    edi,0x481114fd
   14001058c:	hlt    
   14001058d:	and    al,0x9c
   14001058f:	sub    ebp,esi
   140010591:	mov    bh,0x97
   140010593:	add    edx,edx
   140010595:	sbb    eax,DWORD PTR [rax+0x727dbe5e]
   14001059b:	or     esi,DWORD PTR [rdi+rdi*8-0x16813077]
   1400105a2:	mov    ecx,0x7fd2e2d1
   1400105a7:	in     eax,0x4
   1400105a9:	neg    BYTE PTR [rbx+0x53f9fec0]
   1400105af:	sbb    al,0x3e
   1400105b1:	cmc    
   1400105b2:	push   QWORD PTR [rcx]
   1400105b4:	fdivr  DWORD PTR [rsi]
   1400105b6:	retf   
   1400105b7:	mov    eax,0x4a2465d9
   1400105bc:	loope  0x1400105db
   1400105be:	test   DWORD PTR [rax-0x5c421618],edi
   1400105c4:	adc    al,dh
   1400105c6:	and    bh,BYTE PTR [rax]
   1400105c8:	(bad)  
   1400105c9:	jg     0x140010646
   1400105cb:	mov    cl,0xd7
   1400105cd:	jno    0x140010563
   1400105cf:	call   0x12ae47557
   1400105d4:	scas   eax,DWORD PTR es:[rdi]
   1400105d5:	std    
   1400105d6:	js     0x140010650
   1400105d8:	inc    BYTE PTR [rcx]
   1400105da:	pop    rdx
   1400105db:	and    edx,eax
   1400105dd:	(bad)  
   1400105df:	fild   WORD PTR [rax-0x6]
   1400105e2:	or     edx,ebx
   1400105e4:	retf   
   1400105e5:	mov    bh,0x5b
   1400105e7:	jb     0x1400105d1
   1400105e9:	inc    eax
   1400105eb:	sti    
   1400105ec:	ds cli 
   1400105ee:	enter  0xc6e2,0xa1
   1400105f2:	call   QWORD PTR [rsi+0x44]
   1400105f5:	(bad)  
   1400105f6:	(bad)  
   1400105f7:	cmp    al,0x57
   1400105f9:	scas   eax,DWORD PTR es:[rdi]
   1400105fa:	pop    rbp
   1400105fb:	movsxd esi,ebp
   1400105fd:	test   DWORD PTR [rdi-0x39],edi
   140010600:	ror    bl,cl
   140010602:	iret   
   140010603:	xor    ebx,DWORD PTR [rax+0x3524635c]
   140010609:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001060a:	(bad)  
   14001060b:	lahf   
   14001060c:	cmp    al,0xbe
   14001060e:	not    DWORD PTR [rsi+rbx*8-0x3ce353cf]
   140010615:	rex.B
   140010616:	push   r13
   140010618:	jp     0x1400105a4
   14001061a:	ret    0x7851
   14001061d:	lock sahf 
   14001061f:	sbb    BYTE PTR [rcx],ch
   140010621:	cmp    BYTE PTR [rdi+0x25],al
   140010624:	cli    
   140010625:	hlt    
   140010626:	rex.RXB jne 0x140010624
   140010629:	xchg   edi,eax
   14001062a:	sahf   
   14001062b:	shr    DWORD PTR [rbx-0x75],1
   14001062e:	je     0x1400105bd
   140010630:	rex (bad) 
   140010632:	add    eax,0x37a42bc
   140010637:	ror    bl,1
   140010639:	mov    bh,0x47
   14001063b:	(bad)  
   14001063c:	in     al,0xfd
   14001063e:	rex.WXB
   14001063f:	rex.RXB out dx,al
   140010641:	pop    rbx
   140010642:	pop    rsp
   140010643:	jg     0x140010635
   140010645:	xchg   ecx,eax
   140010646:	mov    edi,0x5fbfbde5
   14001064b:	rex.R fsubr DWORD PTR [rbp-0x18463de5]
   140010652:	fnstcw WORD PTR [rax-0xf]
   140010655:	mov    bh,0x29
   140010657:	scas   eax,DWORD PTR es:[rdi]
   140010658:	pop    rsi
   140010659:	(bad)  
   14001065a:	movabs al,ds:0xe894284ef0120633
   140010663:	std    
   140010664:	or     ecx,edi
   140010666:	movabs al,ds:0x2b8c2878cf438612
   14001066f:	rex.RXB push r13
   140010671:	cmp    BYTE PTR [rdi+rsi*2+0x4e07178],bh
   140010678:	jno    0x14001064b
   14001067a:	(bad)  
   14001067b:	sub    al,0xba
   14001067d:	out    0xe3,al
   14001067f:	(bad)  
   140010680:	(bad)  
   140010681:	jg     0x14001067d
   140010683:	sbb    esi,esp
   140010685:	movabs ds:0xa006f4bcc08de900,eax
   14001068e:	xchg   edi,eax
   14001068f:	xlat   BYTE PTR ds:[rbx]
   140010690:	pop    rsi
   140010691:	out    0x43,al
   140010693:	jg     0x1400106a4
   140010695:	xchg   esp,eax
   140010696:	movd   eax,mm6
   140010699:	adc    edi,DWORD PTR [rdi-0x4e]
   14001069c:	stos   BYTE PTR es:[rdi],al
   14001069d:	stos   BYTE PTR es:[rdi],al
   14001069e:	(bad)  
   1400106a0:	adc    al,0x45
   1400106a2:	mov    eax,0x2b32ed7a
   1400106a7:	(bad)  
   1400106a8:	(bad)  
   1400106a9:	(bad)  
   1400106aa:	ret    
   1400106ab:	in     eax,dx
   1400106ac:	xchg   edi,eax
   1400106ad:	sub    BYTE PTR [rdx-0x57ed79c3],bl
   1400106b3:	add    al,0xcb
   1400106b5:	mul    DWORD PTR [rbx-0x22]
   1400106b8:	pop    rdi
   1400106b9:	jns    0x14001071c
   1400106bb:	xor    al,0xf0
   1400106bd:	sub    al,0x8d
   1400106bf:	sbb    al,0x6b
   1400106c1:	mov    eax,DWORD PTR [rip+0xffffffffa59e8bab]        # 0xe59f9272
   1400106c7:	and    DWORD PTR [rbx+0x5e7042a],0x3881a96f
   1400106d1:	rex.B
   1400106d2:	rex.R pop rax
   1400106d4:	xchg   ebp,eax
   1400106d5:	(bad)  [rdi-0x4]
   1400106d8:	div    edx
   1400106da:	outs   dx,DWORD PTR ds:[rsi]
   1400106db:	mov    edi,0xf8153e8b
   1400106e0:	xchg   dl,dl
   1400106e2:	pop    rdi
   1400106e3:	nop
   1400106e4:	pop    rsi
   1400106e5:	mov    esi,0x7fbc925d
   1400106ea:	jns    0x1400106cb
   1400106ec:	rex.RXB mov r14d,0x68d503eb
   1400106f2:	cld    
   1400106f3:	(bad)  
   1400106f4:	mov    ebp,0x9d8e2208
   1400106f9:	mov    edx,0x1afe5e46
   1400106fe:	jmp    0x14001072f
   140010700:	std    
   140010701:	(bad)  
   140010702:	jb     0x1400106e7
   140010704:	xor    ah,BYTE PTR [rbp+0x28120606]
   14001070a:	push   rdx
   14001070b:	mov    gs,edi
   14001070d:	sbb    al,0x85
   14001070f:	test   esi,edi
   140010711:	mov    esp,DWORD PTR [rbx-0x31]
   140010714:	(bad)  
   140010715:	(bad)
   140010719:	(bad)
   14001071c:	leave  
   14001071d:	(bad)  
   14001071e:	rex.WX adc QWORD PTR [rbp-0x7fa77080],rcx
   140010725:	add    ecx,DWORD PTR [rdx]
   140010727:	adc    DWORD PTR [rax+rcx*1+0x74fbca0e],ebx
   14001072e:	jmp    FWORD PTR [rdi+0x3e4e31fc]
   140010734:	rex (bad) 
   140010736:	sbb    al,0x1c
   140010738:	jge    0x140010764
   14001073a:	xor    BYTE PTR [rdi],ah
   14001073c:	mov    ebp,0xb5e5e801
   140010741:	xchg   ebp,eax
   140010742:	add    esp,DWORD PTR [rdi+rbx*4-0x5b]
   140010746:	(bad)  
   140010747:	sahf   
   140010748:	fstp   DWORD PTR [rbp*2+0xb2ffa1c]
   14001074f:	(bad)  
   140010750:	and    edx,DWORD PTR [rcx+rcx*1+0x22]
   140010754:	pop    rsp
   140010755:	mov    ebx,0x17b5897a
   14001075a:	jg     0x1400106e7
   14001075c:	(bad)  
   14001075d:	rcr    BYTE PTR [rcx-0x5c],cl
   140010760:	cdq    
   140010761:	xor    BYTE PTR [rax-0x7f],dh
   140010764:	or     ah,BYTE PTR [rbp-0x4256ae90]
   14001076a:	or     BYTE PTR [rbp-0x1f],ah
   14001076d:	sbb    BYTE PTR [rip+0x54bab1c],cl        # 0x1454cb28f
   140010773:	sub    eax,DWORD PTR [rdi+0xa47862b]
   140010779:	(bad)  
   14001077a:	xchg   DWORD PTR [rbx+0x16],ecx
   14001077d:	or     dl,BYTE PTR ss:[rsi-0x6a39f569]
   140010784:	push   rax
   140010785:	jp     0x1400107f7
   140010787:	rex.WRX
   140010788:	rex adc eax,0x51c4e02f
   14001078e:	movabs eax,ds:0x146245fc5c63e27
   140010797:	leave  
   140010798:	or     ah,dh
   14001079a:	test   eax,0x6f4980
   14001079f:	jp     0x14001081a
   1400107a1:	in     eax,dx
   1400107a2:	fs mov esi,0xe503c7c1
   1400107a8:	clc    
   1400107a9:	xchg   ecx,eax
   1400107aa:	(bad)  
   1400107ab:	jg     0x14001081f
   1400107ad:	imul   edi,DWORD PTR [rax],0xa1614b78
   1400107b3:	cli    
   1400107b4:	int    0x59
   1400107b6:	lea    ebx,[rbx+rdi*2+0x5fb3d59e]
   1400107bd:	rex.XB jbe 0x14001076f
   1400107c0:	push   rcx
   1400107c1:	rex.W (bad) 
   1400107c3:	sub    dl,cl
   1400107c5:	rcl    BYTE PTR [rbx],0xf3
   1400107c8:	jg     0x14001076a
   1400107ca:	lock rex.X push rbp
   1400107cd:	cmp    dl,BYTE PTR [rsi]
   1400107cf:	mov    DWORD PTR [rip+0xffffffffd525ebab],0x39afc3a6        # 0x11526f384
   1400107d9:	fmul   QWORD PTR [rdx+0x1828dca3]
   1400107df:	scas   eax,DWORD PTR es:[rdi]
   1400107e0:	adc    eax,0x833c8c2c
   1400107e5:	rex.X (bad) 
   1400107e7:	jne    0x140010829
   1400107e9:	movabs ds:0xbe6923089c03b6e,al
   1400107f2:	jg     0x140010793
   1400107f4:	jg     0x1400107f1
   1400107f6:	rex.RB cli 
   1400107f8:	push   rsp
   1400107f9:	loopne 0x140010810
   1400107fb:	rcr    BYTE PTR [rdi-0x78],cl
   1400107fe:	pop    rsi
   1400107ff:	pop    rsi
   140010800:	imul   ecx,ecx,0xffffffca
   140010803:	mov    edi,0xbe0feef1
   140010808:	addr32 cmp al,0x1a
   14001080b:	(bad)  
   14001080c:	call   0x16aa978b1
   140010811:	rex.B cmp al,0x3b
   140010814:	xlat   BYTE PTR ds:[rbx]
   140010815:	scas   eax,DWORD PTR es:[rdi]
   140010816:	mov    cl,0x72
   140010818:	imul   BYTE PTR [rbx+0x54]
   14001081b:	push   rdi
   14001081c:	mov    dh,0xa0
   14001081e:	cdq    
   14001081f:	xor    dl,BYTE PTR [rax]
   140010821:	sbb    BYTE PTR [rax],dl
   140010823:	jo     0x14001080b
   140010825:	sar    DWORD PTR [rbp+0xcf7bc38],0x2a
   14001082c:	iret   
   14001082d:	retf   0xc152
   140010830:	jo     0x1400107df
   140010832:	shr    BYTE PTR [rip+0xfffffffffc575f83],0xaa        # 0x13c5867bc
   140010839:	ret    0xe0a2
   14001083c:	xlat   BYTE PTR ds:[rbx]
   14001083d:	sbb    al,0xb
   14001083f:	rex.WXB sahf 
   140010841:	(bad)  
   140010842:	in     eax,0xa8
   140010844:	or     ch,BYTE PTR [rbx]
   140010846:	adc    DWORD PTR [rdx+0x152c103],ecx
   14001084c:	loope  0x14001088c
   14001084e:	es (bad) 
   140010850:	mul    DWORD PTR [rbx-0x64]
   140010853:	ds rex.RX lahf 
   140010856:	or     cl,ah
   140010858:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14001085a:	add    BYTE PTR [rdx+0x79],bh
   14001085d:	ins    DWORD PTR es:[rdi],dx
   14001085e:	in     al,0x0
   140010860:	(bad)  
   140010861:	pop    rdi
   140010862:	lods   eax,DWORD PTR ds:[rsi]
   140010863:	scas   al,BYTE PTR es:[rdi]
   140010864:	sub    eax,0x5fa5a5f8
   140010869:	pop    rax
   14001086a:	sbb    BYTE PTR [rsi],cl
   14001086c:	(bad)  
   14001086d:	pop    rsi
   14001086e:	add    al,0x9c
   140010870:	xor    BYTE PTR [rcx-0x741d1efd],ch
   140010876:	lods   al,BYTE PTR ds:[rsi]
   140010877:	pop    rsp
   140010878:	cmp    BYTE PTR [rbp+0x13c35eec],al
   14001087e:	cmp    DWORD PTR [rdi-0x4ed5cbae],0x7a507782
   140010888:	(bad)  
   140010889:	js     0x140010873
   14001088b:	pop    rax
   14001088c:	pop    rsp
   14001088d:	sub    al,0x29
   14001088f:	xchg   edi,eax
   140010890:	add    eax,0x91c501b7
   140010895:	rex jno 0x1400108ac
   140010898:	cld    
   140010899:	or     bh,BYTE PTR [rax-0x1d46b0fb]
   14001089f:	sbb    BYTE PTR [rbp-0x6217dfdd],cl
   1400108a5:	and    BYTE PTR [rdx],cl
   1400108a7:	(bad)  
   1400108a8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400108a9:	add    ecx,DWORD PTR [rax]
   1400108ab:	xchg   ebp,eax
   1400108ac:	call   0x12b642874
   1400108b1:	rex.WRXB rcl QWORD PTR [r15+0x5],1
   1400108b5:	out    0xa4,al
   1400108b7:	(bad)  
   1400108b8:	add    BYTE PTR [rbp+0x519296bc],bh
   1400108be:	jmp    QWORD PTR [rbp-0x5e0161d9]
   1400108c4:	jb     0x14001087a
   1400108c6:	hlt    
   1400108c7:	in     al,dx
   1400108c8:	test   al,0x2a
   1400108ca:	jrcxz  0x1400108f7
   1400108cc:	loop   0x140010886
   1400108ce:	jle    0x1400108c3
   1400108d0:	(bad)  
   1400108d1:	mov    esp,edi
   1400108d3:	sahf   
   1400108d4:	addr32 je 0x1400108c0
   1400108d7:	sbb    al,0xd4
   1400108d9:	jnp    0x140010953
   1400108db:	(bad)  
   1400108dc:	adc    eax,0x2e624281
   1400108e1:	out    dx,eax
   1400108e2:	adc    esi,ebx
   1400108e4:	scas   eax,DWORD PTR es:[rdi]
   1400108e5:	adc    cl,0xc0
   1400108e8:	xor    DWORD PTR [rax+0x70],ebx
   1400108eb:	mov    eax,0x521fc165
   1400108f0:	cmp    BYTE PTR [rsi],dl
   1400108f2:	jo     0x1400108eb
   1400108f4:	add    eax,0x164521fc
   1400108f9:	adc    eax,0x2d19ecbf
   1400108fe:	jp     0x1400108aa
   140010900:	rcl    BYTE PTR [rcx+0x16],cl
   140010903:	loopne 0x14001090a
   140010905:	(bad)
   140010909:	or     bl,BYTE PTR [rsi-0x5a]
   14001090c:	(bad)  
   14001090d:	and    edi,edi
   14001090f:	xor    eax,0x445de1ff
   140010914:	and    edx,DWORD PTR [rax]
   140010916:	or     eax,0xbd2e3dc0
   14001091b:	add    eax,ebp
   14001091d:	in     eax,0xd5
   14001091f:	xchg   edi,eax
   140010920:	add    eax,eax
   140010922:	(bad)  
   140010924:	and    ebp,DWORD PTR [rdi+0x7c]
   140010927:	ror    BYTE PTR [rdi],1
   140010929:	rex.RX (bad) 
   14001092b:	mov    ecx,0xf0a05e34
   140010930:	add    al,BYTE PTR [rdx]
   140010932:	xchg   ebx,eax
   140010933:	(bad)  
   140010934:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010935:	(bad)  
   140010936:	pop    rdi
   140010937:	(bad)  
   140010938:	cmc    
   140010939:	in     al,dx
   14001093a:	xlat   BYTE PTR ds:[rbx]
   14001093b:	jo     0x140010974
   14001093d:	movabs eax,cs:0xa27fd175508a535a
   140010947:	adc    DWORD PTR [rax],ebp
   140010949:	or     eax,edi
   14001094b:	ret    0x53d0
   14001094e:	sub    eax,0x1ff618b9
   140010953:	or     eax,0xea0a47d4
   140010958:	movsxd ecx,DWORD PTR [rsi]
   14001095a:	ja     0x140010990
   14001095c:	push   rax
   14001095d:	lods   al,BYTE PTR ds:[rsi]
   14001095e:	sub    DWORD PTR [rax+rcx*1],0xa46397e
   140010965:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010966:	(bad)  
   140010967:	or     bl,BYTE PTR [rdi]
   140010969:	(bad)  
   14001096a:	(bad)  
   14001096b:	xchg   esi,eax
   14001096c:	add    cl,BYTE PTR [rax]
   14001096e:	loopne 0x1400108f5
   140010970:	loope  0x14001098d
   140010972:	fscale 
   140010974:	fst    DWORD PTR [rcx]
   140010976:	rex.WRB
   140010977:	rex.RB invd 
   14001097a:	add    bh,BYTE PTR [rbp-0x2a1a17ff]
   140010980:	xchg   esi,eax
   140010981:	push   rdi
   140010982:	(bad)  
   140010983:	cld    
   140010984:	mov    esi,DWORD PTR [rdx-0xd]
   140010987:	rcr    BYTE PTR [rdi+0x2385c3f1],1
   14001098d:	jrcxz  0x140010970
   14001098f:	sub    al,0x8f
   140010992:	sbb    eax,0x326ef7d7
   140010997:	idiv   DWORD PTR ds:[rbx+riz*8]
   14001099b:	in     eax,dx
   14001099c:	xchg   edi,eax
   14001099d:	(bad)  
   14001099e:	mov    dh,0x8b
   1400109a0:	(bad)  
   1400109a1:	sbb    BYTE PTR [rax+0x6f31a252],ch
   1400109a7:	mov    bh,0x26
   1400109a9:	(bad)  
   1400109aa:	out    0x84,eax
   1400109ac:	rex.B jmp 0x1051d15ca
   1400109b2:	rex.W nop
   1400109b4:	cmc    
   1400109b5:	rex mov ebp,0x2a0d99ee
   1400109bb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400109bc:	or     esp,DWORD PTR [rip+0xffffffffd6e0b0e1]        # 0x116e1baa3
   1400109c2:	adc    al,0x46
   1400109c4:	and    BYTE PTR [rbx-0x5f],ah
   1400109c7:	pop    rdx
   1400109c8:	jo     0x140010a1e
   1400109ca:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400109cb:	push   rax
   1400109cc:	js     0x140010a3e
   1400109ce:	add    ch,BYTE PTR [rax+0x34488082]
   1400109d4:	add    ah,BYTE PTR [rbx+0x9]
   1400109d7:	(bad)  
   1400109d8:	cli    
   1400109d9:	gs inc bl
   1400109dc:	out    0x88,eax
   1400109de:	(bad)  
   1400109df:	loopne 0x14001097f
   1400109e1:	(bad)  
   1400109e2:	add    al,0xef
   1400109e4:	jmp    0x175e6f97c
   1400109e9:	xchg   ebx,eax
   1400109ea:	int3   
   1400109eb:	neg    edi
   1400109ed:	jl     0x1400109d1
   1400109ef:	mov    edi,esi
   1400109f1:	mov    edx,0x78f2fcb2
   1400109f6:	mov    esp,0x54385544
   1400109fb:	(bad)  
   1400109fc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400109fd:	mov    al,0x7f
   1400109ff:	jmp    0xdfe87520
   140010a04:	(bad)  
   140010a05:	pop    rbp
   140010a06:	mov    edi,0x6c598684
   140010a0b:	or     al,0x10
   140010a0d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010a0e:	int3   
   140010a0f:	cld    
   140010a10:	jle    0x140010a45
   140010a12:	add    al,BYTE PTR [rbp-0x39c5af9d]
   140010a18:	jrcxz  0x140010a1c
   140010a1a:	mov    edi,0x3d43ac04
   140010a1f:	sub    BYTE PTR [rcx+0x14],dl
   140010a22:	push   rbp
   140010a23:	test   al,0x97
   140010a25:	or     esp,DWORD PTR [rbx+rsi*1-0x20]
   140010a29:	(bad)  
   140010a2a:	ror    DWORD PTR [rip+0xffffffffa8e0bf05],0x2a        # 0xe8e1c936
   140010a31:	xchg   edi,esi
   140010a33:	data16 rex
   140010a35:	rex.WR icebp 
   140010a37:	rex.RB jae 0x140010a06
   140010a3a:	(bad)  
   140010a3b:	div    DWORD PTR [rcx+0x641f53ff]
   140010a41:	jnp    0x1400109dc
   140010a43:	ds or  ch,al
   140010a46:	or     eax,0xa2af2f40
   140010a4b:	sbb    al,0x68
   140010a4d:	neg    BYTE PTR [rcx]
   140010a4f:	sub    al,0x2e
   140010a51:	cs push rsp
   140010a53:	ret    
   140010a54:	loope  0x140010aa5
   140010a56:	cmp    edx,DWORD PTR [rdi-0x6a]
   140010a59:	jrcxz  0x140010a2c
   140010a5b:	sub    BYTE PTR [rsi],al
   140010a5d:	loop   0x140010a81
   140010a5f:	in     al,dx
   140010a60:	in     al,dx
   140010a61:	rex.WRXB sbb BYTE PTR [r14+0x5b8b3aff],r11b
   140010a68:	(bad)  
   140010a69:	and    dl,bl
   140010a6b:	sbb    eax,0x27550244
   140010a70:	cld    
   140010a71:	(bad)  
   140010a72:	(bad)  
   140010a73:	cmp    BYTE PTR [rbp+0x335f36],dh
   140010a79:	adc    DWORD PTR [rcx+0x58412fc7],0x76
   140010a80:	test   al,0x18
   140010a82:	enter  0x50a7,0x17
   140010a86:	(bad)  
   140010a87:	pop    rbp
   140010a88:	(bad)  
   140010a89:	cld    
   140010a8a:	xor    dh,BYTE PTR [rax]
   140010a8c:	adc    al,0xdc
   140010a8e:	pop    rax
   140010a8f:	test   al,0x86
   140010a91:	rex.X jmp 0xf735f19c
   140010a97:	add    ecx,DWORD PTR [rdx-0x5fc4823c]
   140010a9d:	and    bh,BYTE PTR [rsi*8-0x3c0163dd]
   140010aa4:	hlt    
   140010aa5:	push   rcx
   140010aa6:	sar    BYTE PTR [rbp-0x43421d85],0x66
   140010aad:	xchg   edx,eax
   140010aae:	rex.XB push QWORD PTR [r13+0x2ef81f07]
   140010ab5:	sub    eax,0x8b15f7ca
   140010aba:	retf   
   140010abb:	or     al,0xaa
   140010abd:	or     dl,BYTE PTR [rcx+0x45]
   140010ac0:	cmp    DWORD PTR [rbp+0x3958172b],0xd5c53cf7
   140010aca:	pop    rax
   140010acb:	cli    
   140010acc:	repz loop 0x140010af1
   140010acf:	cli    
   140010ad0:	rex.WRXB push 0xfffffffff4897f73
   140010ad6:	faddp  st(2),st
   140010ad8:	or     esp,DWORD PTR [rbx+0x3918a7a1]
   140010ade:	sbb    BYTE PTR [rcx+0x18],al
   140010ae1:	or     BYTE PTR [rdx-0x57612f3a],cl
   140010ae7:	fdivr  st(5),st
   140010ae9:	movabs ds:0xca38190237145647,al
   140010af2:	mov    cl,0xa3
   140010af4:	sub    ah,BYTE PTR [rbx]
   140010af6:	jnp    0x140010ac8
   140010af8:	sbb    ebp,DWORD PTR [rip+0xffffffff88255938]        # 0xc8266436
   140010afe:	push   rcx
   140010aff:	shl    DWORD PTR [rsi+0x3fe47ecc],0x93
   140010b06:	rol    edi,cl
   140010b08:	mov    eax,0xbd022bc7
   140010b0d:	add    eax,ebp
   140010b0f:	in     eax,0xd5
   140010b11:	xchg   ecx,eax
   140010b12:	add    ebx,esi
   140010b14:	jg     0x140010b87
   140010b16:	movsxd esp,DWORD PTR [rbx-0x4b]
   140010b19:	lods   al,BYTE PTR ds:[rsi]
   140010b1a:	stos   BYTE PTR es:[rdi],al
   140010b1b:	lahf   
   140010b1c:	or     al,BYTE PTR [rbp-0x17]
   140010b1f:	(bad)  
   140010b20:	jrcxz  0x140010ac7
   140010b22:	call   0x179b95100
   140010b27:	lods   eax,DWORD PTR ds:[rsi]
   140010b28:	jno    0x140010b41
   140010b2a:	rex.WRX mov dl,0x7c
   140010b2d:	loope  0x140010b63
   140010b2f:	in     al,dx
   140010b30:	fild   WORD PTR [rax+0x9]
   140010b33:	xchg   esp,eax
   140010b34:	or     BYTE PTR [rbx],al
   140010b36:	xchg   esp,eax
   140010b37:	xor    dl,BYTE PTR [rsi+0x7]
   140010b3a:	jno    0x140010b6a
   140010b3c:	(bad)  
   140010b3d:	js     0x140010b66
   140010b3f:	push   rsp
   140010b40:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010b41:	xor    BYTE PTR [rdx+0x6040c51c],ch
   140010b47:	or     al,0xa1
   140010b49:	mov    edx,cs
   140010b4b:	ins    BYTE PTR es:[rdi],dx
   140010b4c:	cli    
   140010b4d:	(bad)
   140010b51:	adc    DWORD PTR [rip+0x6058dc5],0xffffffe0        # 0x14606991d
   140010b58:	rex.RX
   140010b59:	rex.X push rbp
   140010b5b:	or     esi,ebx
   140010b5d:	fdecstp 
   140010b5f:	sub    al,0x7
   140010b61:	adc    BYTE PTR [rcx+rdx*4],al
   140010b64:	clc    
   140010b65:	rcl    DWORD PTR [rdx],0x7d
   140010b68:	clc    
   140010b69:	movabs ds:0x4f701478f72afc5c,eax
   140010b72:	sahf   
   140010b73:	je     0x140010ba4
   140010b75:	scas   eax,DWORD PTR es:[rdi]
   140010b76:	mov    esp,ecx
   140010b78:	add    DWORD PTR [rdi-0x75],edi
   140010b7b:	neg    edi
   140010b7d:	jmp    QWORD PTR [rbx-0x76]
   140010b80:	cmp    al,0x2e
   140010b82:	ret    
   140010b83:	rex.RB (bad) 
   140010b85:	movabs ds:0x97eb9d8e234aa231,eax
   140010b8e:	pop    rcx
   140010b8f:	cmp    edi,esi
   140010b91:	cmp    al,0x83
   140010b93:	stos   DWORD PTR es:[rdi],eax
   140010b94:	pop    rbx
   140010b95:	push   0xffffffff8939c133
   140010b9a:	sbb    al,0x5d
   140010b9c:	imul   ebp,DWORD PTR [rax],0x38ff245c
   140010ba2:	pop    rsp
   140010ba3:	retf   
   140010ba4:	jmp    FWORD PTR [rdi]
   140010ba6:	cmp    eax,0x18a7a183
   140010bab:	or     BYTE PTR [rdx],dh
   140010bad:	push   rsp
   140010bae:	(bad)  
   140010baf:	or     ebp,DWORD PTR [rdx+0x29eeae4a]
   140010bb5:	xor    al,0xde
   140010bb7:	adc    DWORD PTR [rsi+0x4],edx
   140010bba:	mov    bh,0x18
   140010bbc:	jo     0x140010bc1
   140010bbe:	ror    DWORD PTR [rbp+0x16586022],0x82
   140010bc5:	div    DWORD PTR [rcx+0x58]
   140010bc8:	mov    BYTE PTR [rbx],al
   140010bca:	push   rsp
   140010bcb:	pop    rdx
   140010bcc:	adc    BYTE PTR [rcx-0x80],0xd
   140010bd0:	(bad)  
   140010bd1:	(bad)  
   140010bd2:	(bad)  
   140010bd3:	push   rcx
   140010bd4:	rex.WRX ffree st(7)
   140010bd7:	cmp    eax,0xdea0e4c
   140010bdc:	rex (bad) 
   140010bde:	jg     0x140010c50
   140010be0:	cmp    DWORD PTR [rax-0x6],eax
   140010be3:	fnstcw WORD PTR [rax-0x1c]
   140010be6:	xchg   ecx,eax
   140010be7:	(bad)  
   140010be8:	retf   
   140010be9:	ret    0x38ff
   140010bec:	movabs ds:0x7b008f4aa996160c,al
   140010bf5:	rex.WRB and BYTE PTR [r8+rdi*1-0x33],r11b
   140010bfa:	retf   0x17f9
   140010bfd:	nop
   140010bfe:	fwait
   140010bff:	push   rdi
   140010c00:	add    DWORD PTR [rax+0x57fe18d3],0xe3ee9c68
   140010c0a:	and    al,0x8e
   140010c0c:	(bad)  
   140010c0d:	jbe    0x140010b91
   140010c0f:	test   DWORD PTR [rsi-0x3555ef4e],0x14602ae1
   140010c19:	or     eax,0x7e456a00
   140010c1e:	enter  0x40a1,0x58
   140010c22:	adc    ah,bl
   140010c24:	add    dl,BYTE PTR [rax+0x9]
   140010c27:	pop    rdx
   140010c28:	or     al,ch
   140010c2a:	xor    BYTE PTR [rsi+0x7383ce01],ah
   140010c30:	mov    dh,BYTE PTR [rbx]
   140010c32:	push   rdx
   140010c33:	nop
   140010c34:	test   al,0xb4
   140010c36:	mov    ecx,DWORD PTR [rdi]
   140010c38:	test   al,0x1e
   140010c3a:	jnp    0x140010c8a
   140010c3c:	mov    bh,0x7f
   140010c3e:	mov    BYTE PTR [rsi],dh
   140010c40:	or     bh,BYTE PTR [rax+0x7a1f94a7]
   140010c46:	add    edx,eax
   140010c48:	retf   
   140010c49:	(bad)  
   140010c4a:	push   rsp
   140010c4b:	outs   dx,BYTE PTR ds:[rsi]
   140010c4c:	shr    edx,1
   140010c4e:	cmp    ebx,DWORD PTR [rax+0x59]
   140010c51:	stc    
   140010c52:	imul   esp,DWORD PTR [rdi+0x218b4d61],0xa15c5a3
   140010c5c:	and    BYTE PTR [rax-0x628c4c50],cl
   140010c62:	xchg   ebp,eax
   140010c63:	repz iret 
   140010c65:	xor    edi,DWORD PTR [rsp+rdi*2+0x11f66d16]
   140010c6c:	rcl    DWORD PTR [rdi+rdi*4-0x49c0d64f],0x21
   140010c74:	sbb    esi,ebp
   140010c76:	push   rbp
   140010c77:	clc    
   140010c78:	test   al,0xc4
   140010c7a:	gs and eax,0xd06148c8
   140010c80:	sbb    eax,0x3097f4
   140010c85:	add    DWORD PTR [rbp+0x41643950],eax
   140010c8b:	jno    0x140010c90
   140010c8d:	jo     0x140010ca4
   140010c8f:	add    rax,0xffffffffa5ef04be
   140010c95:	sub    r13,QWORD PTR [r12+rbp*2]
   140010c99:	nop
   140010c9a:	(bad)  
   140010c9b:	movups xmm3,XMMWORD PTR [rax-0x6b]
   140010c9f:	cli    
   140010ca0:	sub    edi,DWORD PTR [rdi-0x64]
   140010ca3:	xchg   ebx,eax
   140010ca4:	(bad)  
   140010ca5:	mov    eax,0xbd022b47
   140010caa:	add    eax,ebp
   140010cac:	in     eax,0xd5
   140010cae:	nop
   140010caf:	lods   al,BYTE PTR ds:[rsi]
   140010cb0:	cld    
   140010cb1:	xchg   DWORD PTR [rsi-0x3a580c87],ebx
   140010cb7:	stc    
   140010cb8:	iret   
   140010cb9:	rex.WXB push r11
   140010cbb:	ret    
   140010cbc:	js     0x140010c57
   140010cbe:	shl    DWORD PTR [rax+0x8],1
   140010cc1:	add    dh,BYTE PTR [rbp-0x18b42cf6]
   140010cc7:	pop    rax
   140010cc8:	cmp    bh,bh
   140010cca:	jne    0x140010d30
   140010ccc:	out    0x1a,eax
   140010cce:	stos   BYTE PTR es:[rdi],al
   140010ccf:	or     eax,0x7fe148e
   140010cd4:	mov    esp,0xd4ecca8b
   140010cd9:	add    BYTE PTR [rax+0x17],al
   140010cdc:	add    eax,eax
   140010cde:	mov    dl,0x70
   140010ce0:	xchg   esp,eax
   140010ce1:	xchg   ebp,eax
   140010ce2:	mov    ebx,DWORD PTR [rsi+0xa8207d]
   140010ce8:	push   0x45812c7
   140010ced:	push   rax
   140010cee:	or     BYTE PTR [rcx+0x1],ah
   140010cf1:	fcom   QWORD PTR [rax]
   140010cf3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010cf4:	adc    BYTE PTR [rax+riz*1-0x6c],ah
   140010cf8:	add    eax,DWORD PTR [rdi-0x17]
   140010cfb:	pop    rbp
   140010cfc:	imul   eax,DWORD PTR [rdx+rdx*8],0xfffffffb
   140010d00:	push   rbp
   140010d01:	movsxd ebx,DWORD PTR [rcx+0x50]
   140010d04:	test   BYTE PTR [rdx-0xc],al
   140010d07:	clc    
   140010d08:	jnp    0x140010cc3
   140010d0a:	bnd jge 0x140010ce9
   140010d0d:	movabs ds:0xcabcbdb2753dc058,eax
   140010d16:	shl    BYTE PTR [rdx],cl
   140010d18:	(bad)  
   140010d19:	and    dh,al
   140010d1b:	ja     0x140010cfc
   140010d1d:	std    
   140010d1e:	sbb    eax,ebp
   140010d20:	ret    0x9fe2
   140010d23:	ja     0x140010cff
   140010d25:	clc    
   140010d26:	adc    BYTE PTR [rax+0x2d],0xaf
   140010d2a:	xor    ebp,DWORD PTR [rax]
   140010d2c:	(bad)  
   140010d2d:	fs mov ebp,0xf0c7b7b3
   140010d33:	(bad)  
   140010d35:	sbb    BYTE PTR [rdi-0x61],ch
   140010d38:	rex.RB (bad) 
   140010d3a:	jge    0x140010d4c
   140010d3c:	sub    ah,al
   140010d3e:	push   rcx
   140010d3f:	rex.WB and al,0xff
   140010d42:	and    al,0xfa
   140010d44:	outs   dx,DWORD PTR ds:[rsi]
   140010d45:	(bad)  
   140010d46:	movabs al,ds:0xa2852837d191779d
   140010d4f:	adc    ah,BYTE PTR [rax+riz*4-0x7c]
   140010d53:	or     sil,BYTE PTR [r14]
   140010d56:	mov    BYTE PTR [rcx],ch
   140010d58:	sub    BYTE PTR [rax-0x4],0xad
   140010d5c:	mov    bh,BYTE PTR [rdx]
   140010d5e:	mov    r12d,0x2904a148
   140010d65:	add    eax,0x1b0a1037
   140010d6a:	(bad)  
   140010d6b:	and    ah,BYTE PTR [rdx]
   140010d6d:	js     0x140010dcb
   140010d6f:	int3   
   140010d70:	inc    DWORD PTR [rbp+0x72]
   140010d73:	(bad)  
   140010d74:	and    eax,eax
   140010d76:	sub    dh,BYTE PTR [rbx+0x2f32f81f]
   140010d7c:	sbb    eax,0x8ac1ee2
   140010d81:	hlt    
   140010d82:	(bad)  
   140010d83:	movabs al,ds:0x1f1ff422dc9fdf97
   140010d8c:	jg     0x140010d6e
   140010d8e:	rex.WRXB mov BYTE PTR [r8-0x7b0aeac9],r15b
   140010d95:	xor    BYTE PTR [rax],bl
   140010d97:	xor    ebx,DWORD PTR [rdx+0x58]
   140010d9a:	(bad)  
   140010d9b:	mov    DWORD PTR [rdx+0x2b],edx
   140010d9e:	fdivr  QWORD PTR [rdx+rsi*2-0x308c4a7f]
   140010da5:	jrcxz  0x140010e1e
   140010da7:	movabs cs:0x71a57f4ac28046a1,eax
   140010db1:	div    BYTE PTR [rbx+0x68]
   140010db4:	out    dx,al
   140010db5:	movabs ds:0x812bec06d88b2ed7,al
   140010dbe:	sar    QWORD PTR [rsp+r8*8],1
   140010dc2:	pop    rsi
   140010dc3:	or     al,0x0
   140010dc5:	rex.WR and BYTE PTR [rax+0x7050ca1d],0x23
   140010dcd:	sub    r12b,BYTE PTR [r8+0x68aa414]
   140010dd4:	sar    BYTE PTR [rbx-0x6ab7eea8],0x80
   140010ddb:	outs   dx,BYTE PTR ds:[rsi]
   140010ddc:	and    al,BYTE PTR [rcx-0x1d85faf8]
   140010de2:	mov    bl,0x6c
   140010de4:	fst    QWORD PTR [rbx+0x733dc051]
   140010dea:	movabs ds:0xf1b9400c9226bcbd,al
   140010df3:	hlt    
   140010df4:	pop    rbx
   140010df5:	fsubrp st(5),st
   140010df7:	stos   DWORD PTR es:[rdi],eax
   140010df8:	(bad)  
   140010df9:	rex.RXB or BYTE PTR [rip+0xffffffff97e29eae],r14b        # 0xd7e3acae
   140010e00:	(bad)  
   140010e01:	rex.WB (bad) 
   140010e03:	fistp  WORD PTR [rbp-0x3157317]
   140010e09:	xchg   r14,rax
   140010e0b:	cs mov esp,0x209bd308
   140010e11:	add    DWORD PTR [rdi],ebp
   140010e13:	(bad)  
   140010e14:	cmp    al,0x7f
   140010e16:	sbb    bl,dh
   140010e18:	xchg   ecx,eax
   140010e19:	ret    0xa8f4
   140010e1c:	lods   al,BYTE PTR ds:[rsi]
   140010e1d:	fiadd  WORD PTR [rbp+0x3]
   140010e20:	push   rax
   140010e21:	push   rsi
   140010e22:	(bad)  
   140010e23:	push   rdi
   140010e24:	or     dl,BYTE PTR [rdx-0x76]
   140010e27:	lods   eax,DWORD PTR ds:[rsi]
   140010e28:	(bad)  
   140010e2a:	xor    DWORD PTR [rsi],eax
   140010e2c:	nop
   140010e2d:	hlt    
   140010e2e:	fsub   DWORD PTR [rdx]
   140010e30:	add    BYTE PTR [rbx*1+0x11890c08],dl
   140010e37:	rex movabs eax,ds:0xc31413ce2af82548
   140010e41:	add    DWORD PTR [rdx+0x40cd0a9],esp
   140010e47:	mov    dl,BYTE PTR [rbp+0x14]
   140010e4a:	(bad)  
   140010e4b:	jne    0x140010e3f
   140010e4d:	(bad)  
   140010e4e:	rex.WRXB mov r11b,0xb5
   140010e51:	(bad)  
   140010e52:	cmp    eax,0x6f40516
   140010e57:	movabs al,ds:0x6b87fd401cbbdf97
   140010e60:	jmp    0x140010ded
   140010e62:	jle    0x140010ed9
   140010e64:	std    
   140010e65:	(bad)  
   140010e66:	xor    eax,0xd3962c52
   140010e6b:	cmp    eax,0xb2b54710
   140010e70:	rex.B jmp 0xfd8654fa
   140010e76:	stos   DWORD PTR es:[rdi],eax
   140010e77:	xchg   edi,eax
   140010e78:	pop    rax
   140010e79:	cmp    ebx,edi
   140010e7b:	xor    eax,0xa117ebca
   140010e80:	cdq    
   140010e81:	cdq    
   140010e82:	xlat   BYTE PTR ds:[rbx]
   140010e83:	(bad)  
   140010e84:	enter  0x497f,0xb0
   140010e88:	jp     0x140010f07
   140010e8a:	push   0xfffffffffffffffe
   140010e8c:	mov    DWORD PTR [rcx],edx
   140010e8e:	rex loope 0x140010e15
   140010e91:	stos   BYTE PTR es:[rdi],al
   140010e92:	mov    WORD PTR [rip+0x7c00aefe],?        # 0x1bc01bd96
   140010e98:	in     al,0xf4
   140010e9a:	rex.RXB adc r8b,r12b
   140010e9d:	loopne 0x140010e31
   140010e9f:	jg     0x140010e52
   140010ea1:	xor    dl,BYTE PTR [rax]
   140010ea3:	mov    esp,0x29630c0
   140010ea8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010ea9:	jo     0x140010ef3
   140010eab:	or     DWORD PTR [rsi-0xebf5a76],edi
   140010eb1:	pop    rax
   140010eb2:	je     0x140010ed5
   140010eb4:	(bad)  
   140010eb5:	or     dh,BYTE PTR [rsi+rdi*8+0x560b2b00]
   140010ebc:	ret    0xdf13
   140010ebf:	retf   
   140010ec0:	(bad)  [rdi-0x2f]
   140010ec3:	sub    eax,0x7203de09
   140010ec8:	rex.WRXB pushf 
   140010eca:	fs (bad) 
   140010ecc:	scas   eax,DWORD PTR es:[rdi]
   140010ecd:	movabs ds:0x1fd1e47e5ff422dc,al
   140010ed6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010ed7:	lods   al,BYTE PTR ds:[rsi]
   140010ed8:	fimul  WORD PTR [rbx+0x68]
   140010edb:	test   al,0x26
   140010edd:	(bad)  
   140010ede:	or     ebx,eax
   140010ee0:	and    eax,0x8cb8bc6
   140010ee5:	retf   0xa36e
   140010ee8:	mov    cl,0xe7
   140010eea:	jg     0x140010ed7
   140010eec:	adc    al,0xb2
   140010eee:	mov    bh,0x43
   140010ef0:	pop    rsp
   140010ef1:	mov    ebx,0xd2e7cd33
   140010ef6:	pushf  
   140010ef7:	repz and edx,DWORD PTR [rcx]
   140010efa:	add    al,0xcc
   140010efc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010efd:	rex add ebp,edi
   140010f00:	(bad)
   140010f04:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010f05:	test   al,0x74
   140010f07:	sbb    al,0xb2
   140010f09:	ret    0xaac1
   140010f0c:	pop    rbp
   140010f0d:	lock (bad) 
   140010f0f:	xchg   al,ah
   140010f11:	rex.WX test QWORD PTR [rdx-0x70],rax
   140010f15:	shl    cl,cl
   140010f17:	sub    ah,BYTE PTR [rcx+0x40af232c]
   140010f1d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010f1e:	cmc    
   140010f1f:	cld    
   140010f20:	in     eax,dx
   140010f21:	movabs ss:0x4c23a1ffdd4d8138,al
   140010f2b:	(bad)  
   140010f2c:	mov    ah,0x25
   140010f2e:	sar    DWORD PTR [rsi],0x2
   140010f31:	call   0x1885ca6db
   140010f36:	pop    rbx
   140010f37:	repz jg 0x140010f0d
   140010f3a:	push   rbx
   140010f3b:	outs   dx,DWORD PTR ds:[rsi]
   140010f3c:	xchg   ebx,eax
   140010f3d:	test   ebp,esp
   140010f3f:	lahf   
   140010f40:	push   rsp
   140010f41:	test   BYTE PTR [rdx+0x13d5c7de],dh
   140010f47:	fmul   st(2),st
   140010f49:	and    DWORD PTR [rsi-0x4f5576ab],eax
   140010f4f:	jae    0x140010f44
   140010f51:	cmp    cl,BYTE PTR [rbx-0x19]
   140010f54:	mov    esi,0x22ed7546
   140010f59:	fimul  DWORD PTR [rax+rdx*2-0x40]
   140010f5d:	jrcxz  0x140010f87
   140010f5f:	push   rax
   140010f60:	rex.WX jrcxz 0x140010f61
   140010f63:	(bad)  
   140010f64:	jb     0x140010fb4
   140010f66:	(bad)  
   140010f67:	loope  0x140010f60
   140010f69:	cs jb  0x140010f65
   140010f6c:	push   rbx
   140010f6d:	or     ah,BYTE PTR [rax]
   140010f6f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010f70:	rex.R mov edi,0x2bfb16c
   140010f76:	push   0x5d
   140010f78:	jle    0x140010fcb
   140010f7a:	movabs ds:0xf9882180a813ab26,al
   140010f83:	jno    0x140010f2e
   140010f85:	add    al,0x5f
   140010f87:	(bad)  
   140010f88:	fld    QWORD PTR [rcx+0x361b3882]
   140010f8e:	(bad)  
   140010f8f:	pop    rbx
   140010f90:	jb     0x140010f1a
   140010f92:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010f93:	add    DWORD PTR [rdx+0x25],eax
   140010f96:	loope  0x140011005
   140010f98:	jg     0x140010f1b
   140010f9a:	push   rsp
   140010f9c:	(bad)  
   140010f9d:	mov    edx,0x3cbb80bc
   140010fa2:	or     eax,0x2f400de8
   140010fa7:	fistp  QWORD PTR [rdx-0x3402f7e4]
   140010fad:	icebp  
   140010fae:	js     0x14001100c
   140010fb0:	lods   al,BYTE PTR ds:[rsi]
   140010fb1:	outs   dx,BYTE PTR ds:[rsi]
   140010fb2:	cld    
   140010fb3:	(bad)  
   140010fb4:	(bad)  
   140010fb5:	ret    
   140010fb6:	jne    0x140010f89
   140010fb8:	rex mov ecx,0x33ce03bf
   140010fbe:	pop    rax
   140010fbf:	cmp    eax,DWORD PTR [rdi+rdx*1-0x196be59f]
   140010fc6:	ret    0xd619
   140010fc9:	(bad)  
   140010fca:	cmp    eax,0x1bddb8f
   140010fcf:	xor    al,0x20
   140010fd1:	mov    ss,WORD PTR [rdx]
   140010fd3:	movabs ds:0xfd0c474ef0f213f2,al
   140010fdc:	popf   
   140010fdd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010fde:	and    DWORD PTR [rax],esp
   140010fe0:	adc    cl,bl
   140010fe2:	ja     0x14001100d
   140010fe4:	or     ch,al
   140010fe6:	mov    edi,gs
   140010fe8:	rex.W (bad) 
   140010fea:	and    DWORD PTR [rax+0x36],ebp
   140010fed:	or     ch,BYTE PTR [rax-0x4]
   140010ff0:	adc    eax,0x252a412a
   140010ff5:	cs adc BYTE PTR es:[rbx-0x7e],cl
   140010ffa:	scas   al,BYTE PTR es:[rdi]
   140010ffb:	adc    BYTE PTR [rdx],cl
   140010ffd:	add    edx,DWORD PTR [rsi]
   140010fff:	mov    ebp,0x38731145
   140011004:	(bad)  
   140011005:	and    r12d,eax
   140011008:	mov    r12b,r11b
   14001100b:	in     al,dx
   14001100c:	jge    0x14001100d
   14001100e:	cwde   
   14001100f:	data16 jle 0x14001107c
   140011012:	rcr    BYTE PTR [rbp+0x2c],1
   140011015:	mov    ebp,0x5be5e801
   14001101a:	xchg   ebx,eax
   14001101b:	pop    rbx
   14001101c:	test   dh,bh
   14001101e:	imul   ecx,DWORD PTR [rdi+0x3e],0xfffffffd
   140011022:	rex.RXB jne 0x140010fe1
   140011025:	hlt    
   140011026:	rex.B adc eax,0xc194f570
   14001102c:	dec    BYTE PTR [rip+0xffffffff8306e2c2]        # 0xc307f2f4
   140011032:	test   DWORD PTR [rbp+0x44],esp
   140011035:	loope  0x140011031
   140011037:	ficomp WORD PTR [rsi]
   140011039:	movabs ds:0x37a6017cba33cff3,eax
   140011042:	push   rcx
   140011043:	add    al,BYTE PTR [rdx+0x5c]
   140011046:	shl    DWORD PTR [rdi-0x3801eb70],1
   14001104c:	jl     0x14001108a
   14001104e:	jmp    0x13002facb
   140011053:	(bad)  
   140011054:	sbb    eax,0x2e589e7d
   140011059:	adc    rax,0x3fd7ae80
   14001105f:	rol    BYTE PTR [rip+0xffffffff904a8050],0x2a        # 0xd04b90b6
   140011066:	xchg   esi,eax
   140011067:	add    ebp,eax
   140011069:	ds (bad) 
   14001106b:	gs (bad) 
   14001106d:	(bad)  
   14001106e:	xor    ch,ah
   140011070:	rex.WRXB stc 
   140011072:	(bad)  
   140011073:	sub    r14b,BYTE PTR [rbp+r9*1-0x1eee7ec5]
   14001107b:	jrcxz  0x1400110fc
   14001107d:	push   rsi
   14001107e:	sahf   
   14001107f:	jg     0x14001101d
   140011081:	jnp    0x140011087
   140011083:	or     al,0xec
   140011085:	or     eax,0x17bf2f40
   14001108a:	leave  
   14001108b:	fidivr WORD PTR [rdi-0x3]
   14001108e:	mov    DWORD PTR [rdi],esp
   140011090:	fmulp  st(4),st
   140011092:	ret    0x9fea
   140011095:	(bad)
   140011098:	jnp    0x1400110e8
   14001109a:	imul   DWORD PTR [rax]
   14001109c:	addr32 adc ebx,esp
   14001109f:	(bad)  
   1400110a0:	jge    0x1400110ae
   1400110a2:	retf   0xa982
   1400110a5:	sub    dl,bl
   1400110a7:	retf   
   1400110a8:	out    0x58,eax
   1400110aa:	cmp    eax,0xcefc75ff
   1400110af:	adc    eax,0x17105308
   1400110b4:	sbb    eax,0x1b4a06b3
   1400110b9:	std    
   1400110ba:	xchg   ebp,eax
   1400110bb:	cmp    BYTE PTR [rcx+0x5ce73d2e],sil
   1400110c2:	(bad)  
   1400110c3:	add    BYTE PTR [rdx-0x68c7fd68],cl
   1400110c9:	(bad)  
   1400110ca:	cli    
   1400110cb:	mov    al,0x23
   1400110cd:	push   rax
   1400110ce:	imul   eax,DWORD PTR [rax],0x48
   1400110d1:	xchg   esi,eax
   1400110d2:	rex cmp ecx,DWORD PTR [rdi+0x58582245]
   1400110d9:	sub    DWORD PTR [rdx+rbx*1-0x31f42b71],edx
   1400110e0:	retf   0xce81
   1400110e3:	mov    ch,0x63
   1400110e5:	ret    0x66a2
   1400110e8:	mov    bh,0xd1
   1400110ea:	or     BYTE PTR [rax-0x1c5ebfa8],0xa7
   1400110f1:	mov    eax,0x9e76fdf1
   1400110f6:	ja     0x140011135
   1400110f8:	cmp    eax,0xbd0037b8
   1400110fd:	jl     0x140011172
   1400110ff:	cmp    DWORD PTR [rax+0x2eacaffa],ecx
   140011105:	xchg   esi,eax
   140011106:	sbb    eax,DWORD PTR [rdi-0x2]
   140011109:	(bad)  
   14001110a:	(bad)  
   14001110b:	or     al,0x17
   14001110d:	popf   
   14001110e:	add    BYTE PTR [rcx-0x6a844f9a],ah
   140011114:	push   rax
   140011115:	lea    ebp,[rax]
   140011117:	(bad)  
   140011118:	(bad)  
   140011119:	push   rdx
   14001111a:	movabs al,ds:0xe1649fcf28cc9cdc
   140011123:	ror    bl,cl
   140011125:	xor    cl,bl
   140011127:	mov    cl,0x16
   140011129:	fsubp  st(0),st
   14001112b:	stc    
   14001112c:	rex.WXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14001112e:	adc    al,0xe8
   140011130:	pop    rsp
   140011131:	mov    bh,0x5e
   140011133:	add    edi,DWORD PTR cs:[rdx]
   140011136:	movabs eax,ds:0xa002b177b8147170
   14001113f:	pop    rsi
   140011140:	push   rcx
   140011141:	xlat   BYTE PTR ds:[rbx]
   140011142:	mov    dh,0x0
   140011144:	imul   edx,DWORD PTR [rdi-0x1f],0x53
   140011148:	clc    
   140011149:	(bad)  
   14001114a:	test   DWORD PTR [rax-0x10],0x5577fd11
   140011151:	mov    WORD PTR [rax],es
   140011153:	ror    BYTE PTR [rdi-0x32bd3cb5],cl
   140011159:	or     ah,al
   14001115b:	push   rax
   14001115c:	rex.RX mov bl,0x9
   14001115f:	nop
   140011160:	mov    ?,WORD PTR [rcx]
   140011162:	pop    rdx
   140011163:	rcr    cl,1
   140011165:	ja     0x1400111e5
   140011167:	(bad)  
   140011168:	(bad)  
   140011169:	fist   WORD PTR [rbx]
   14001116b:	(bad)  
   14001116c:	movabs al,ds:0xf2bccbbbf2f400de
   140011175:	rex.RXB (bad) 
   140011177:	push   QWORD PTR [rcx-0x1cdb0139]
   14001117d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001117e:	test   DWORD PTR [rdx-0x523b1d55],0xdee194d9
   140011188:	jne    0x140011124
   14001118a:	mov    ch,0xa3
   14001118c:	mov    WORD PTR [rsi+0x23],es
   14001118f:	push   0x55
   140011191:	jbe    0x140011142
   140011193:	ins    DWORD PTR es:[rdi],dx
   140011194:	mov    bl,0x72
   140011196:	(bad)  
   140011197:	and    al,0xc5
   140011199:	mov    ch,0xcb
   14001119b:	push   0x1ac4a298
   1400111a0:	jg     0x1400111c7
   1400111a2:	push   rax
   1400111a3:	stos   BYTE PTR es:[rdi],al
   1400111a4:	out    0xf6,al
   1400111a6:	(bad)  
   1400111a7:	xor    edi,ebp
   1400111a9:	out    dx,eax
   1400111aa:	rex.WRB stc 
   1400111ac:	popf   
   1400111ad:	(bad)  
   1400111ae:	or     al,BYTE PTR [rax-0x1f]
   1400111b1:	push   rdx
   1400111b2:	stc    
   1400111b3:	scas   al,BYTE PTR es:[rdi]
   1400111b4:	push   rbp
   1400111b5:	rex.WRX rcr BYTE PTR [rdi+r15*2-0x1ec7e859],0x0
   1400111be:	jmp    0x1685b1938
   1400111c3:	push   rdx
   1400111c4:	push   0xffffffffffffffac
   1400111c6:	(bad)  
   1400111c7:	fcom   DWORD PTR [rcx-0x45]
   1400111ca:	retf   0x530
   1400111cd:	addr32 sub eax,0x523c66c1
   1400111d3:	xchg   edi,eax
   1400111d4:	(bad)  
   1400111d5:	out    0x5,al
   1400111d7:	add    BYTE PTR [rbp+0x6527c0f0],dl
   1400111dd:	jmp    0x1400111b2
   1400111df:	popf   
   1400111e0:	jae    0x1400111a0
   1400111e2:	imul   esi,ebp,0xffffffe4
   1400111e5:	scas   al,BYTE PTR es:[rdi]
   1400111e6:	cmp    eax,0x555e5eb1
   1400111eb:	imul   edi,DWORD PTR [rcx-0xac2b002],0xfb5c597e
   1400111f5:	adc    edx,DWORD PTR [rdx+0xc]
   1400111f8:	movsxd edi,esi
   1400111fa:	lods   al,BYTE PTR ds:[rsi]
   1400111fb:	or     eax,0x6526e4e5
   140011200:	push   rbx
   140011201:	jrcxz  0x140011212
   140011203:	popf   
   140011204:	(bad)  
   140011205:	loopne 0x140011244
   140011207:	jnp    0x14001127e
   140011209:	sub    DWORD PTR [rbp+rdi*4-0x38],0xffffffe2
   14001120e:	neg    BYTE PTR [rcx]
   140011210:	fs (bad) 
   140011212:	cmp    ch,BYTE PTR [rax+0x3]
   140011215:	cmp    edi,esi
   140011217:	(bad)  
   140011218:	out    dx,al
   140011219:	(bad)  
   14001121a:	lods   eax,DWORD PTR ds:[rsi]
   14001121b:	(bad)  
   14001121c:	jbe    0x140011288
   14001121e:	cmp    DWORD PTR [rbx],0x2d
   140011221:	sbb    dh,al
   140011223:	adc    bl,BYTE PTR [rbx+0x59c28a78]
   140011229:	mov    edi,ebx
   14001122b:	sbb    bh,BYTE PTR [rdi-0x6e]
   14001122e:	xchg   BYTE PTR [rsi+0x5573dc4],ah
   140011234:	(bad)  
   140011235:	push   0x3
   140011237:	movabs al,ds:0x850018c9c785b0e
   140011240:	scas   al,BYTE PTR es:[rdi]
   140011241:	rex.W retf 
   140011243:	mov    ebp,es
   140011245:	push   rdx
   140011246:	rex.XB mov WORD PTR [r10],?
   140011249:	mov    ah,0x45
   14001124b:	stc    
   14001124c:	push   rsp
   14001124d:	in     eax,dx
   14001124e:	stc    
   14001124f:	mov    eax,0xf9308dd1
   140011254:	rcr    BYTE PTR [rdx],cl
   140011256:	mov    bl,0x8a
   140011258:	(bad)  
   140011259:	or     ah,ch
   14001125b:	and    eax,DWORD PTR [rax+0x3931ee5e]
   140011261:	enter  0x3ff5,0x72
   140011265:	je     0x14001123a
   140011267:	lods   eax,DWORD PTR ds:[rsi]
   140011268:	outs   dx,BYTE PTR ds:[rsi]
   140011269:	(bad)  
   14001126a:	push   rbp
   14001126b:	sbb    DWORD PTR [rsi],ebp
   14001126d:	lea    eax,[rbp+0x7c]
   140011270:	sbb    al,0xc6
   140011272:	push   rcx
   140011273:	(bad)  
   140011274:	lock mov edi,0xb8675a5e
   14001127a:	mov    edx,0x77372809
   14001127f:	outs   dx,BYTE PTR ds:[rsi]
   140011280:	mov    al,0x78
   140011282:	out    dx,al
   140011283:	imul   ecx,DWORD PTR [rsi+rbp*1],0x5f
   140011287:	rex
   140011288:	mov    bx,0x8471
   14001128c:	xchg   edi,eax
   14001128d:	xchg   ecx,eax
   14001128e:	jg     0x14001121a
   140011290:	adc    al,dh
   140011292:	test   al,0x95
   140011294:	cld    
   140011295:	rex.WR jmp 0x122f101cc
   14001129b:	rex.WX movabs rdi,0x3c1e897bdade8f85
   1400112a5:	(bad)
   1400112a8:	std    
   1400112a9:	rex.WRXB sete BYTE PTR [r10+r11*2-0x26e96f98]
   1400112b2:	not    DWORD PTR [rcx+0x16171809]
   1400112b8:	mov    BYTE PTR [rcx+0x4],dl
   1400112bb:	add    eax,0x8f808d1
   1400112c0:	or     dh,ah
   1400112c2:	test   al,0xa1
   1400112c4:	add    eax,DWORD PTR [rsi]
   1400112c6:	(bad)  
   1400112c7:	sub    al,0x23
   1400112c9:	sbb    al,BYTE PTR [rbp-0x7107b7f]
   1400112cf:	pop    rcx
   1400112d0:	mov    esi,0xf2ee0ef6
   1400112d5:	xor    al,0xa0
   1400112d7:	(bad)  
   1400112d8:	add    BYTE PTR [rbp+0x4c0e5adc],bh
   1400112de:	clc    
   1400112df:	add    edx,ecx
   1400112e1:	icebp  
   1400112e2:	add    ecx,DWORD PTR [rdi]
   1400112e4:	std    
   1400112e5:	jns    0x1400112ad
   1400112e7:	sub    ecx,edi
   1400112e9:	test   al,0x2f
   1400112eb:	int3   
   1400112ec:	(bad)  
   1400112ed:	(bad)  
   1400112ee:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400112ef:	sahf   
   1400112f0:	xor    BYTE PTR [rax+0x3f0e44dc],bl
   1400112f6:	rex xor eax,0x94693018
   1400112fc:	out    0xe2,al
   1400112fe:	rex.WXB lods al,BYTE PTR ds:[rsi]
   140011300:	ins    BYTE PTR es:[rdi],dx
   140011301:	popf   
   140011302:	ret    0xbcdd
   140011305:	mov    ch,BYTE PTR [rdx-0x7d]
   140011308:	mov    al,bl
   14001130a:	test   eax,0x434fd0da
   14001130f:	jmp    QWORD PTR [rcx+0x746cfe05]
   140011315:	ja     0x140011363
   140011317:	add    DWORD PTR [rax+0x37afd2b],ecx
   14001131d:	in     eax,dx
   14001131e:	adc    cl,BYTE PTR [rdi+riz*4]
   140011321:	rex.R (bad) 
   140011323:	xchg   ecx,eax
   140011324:	sub    DWORD PTR [rsi-0x3c],ebp
   140011327:	(bad)  
   140011328:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011329:	jrcxz  0x1400112c1
   14001132b:	jrcxz  0x1400112bd
   14001132d:	shl    al,1
   14001132f:	add    al,0xf5
   140011331:	test   eax,0x89780804
   140011336:	imul   eax,DWORD PTR [rcx+rdx*1-0x7f],0xc87554c5
   14001133e:	imul   eax,DWORD PTR [rbp-0x16b2f4f3],0x4354a44
   140011348:	icebp  
   140011349:	cmpxchg ebx,esi
   14001134c:	mov    ebp,0x2b3e5dc
   140011351:	jp     0x140011356
   140011353:	ror    bl,1
   140011355:	sub    esp,ebp
   140011357:	(bad)  
   140011358:	and    eax,0x7e6fa3bf
   14001135d:	out    0x7b,al
   14001135f:	gs imul esi,ebp,0x221ca507
   140011366:	(bad)  
   140011367:	jmp    0x12d59352a
   14001136c:	mov    edi,0x1e87f0a8
   140011371:	rcl    BYTE PTR [rbx],0xb8
   140011374:	jle    0x140011369
   140011376:	es ret 
   140011378:	repz iret 
   14001137a:	xor    edi,DWORD PTR [rsp+rdi*2+0x4b5dea0e]
   140011381:	adc    ebp,DWORD PTR [rsp+rsi*8]
   140011384:	push   rdi
   140011385:	(bad)
   140011388:	mov    edi,0x1a27f18c
   14001138d:	xchg   ebp,eax
   14001138e:	pop    rsi
   14001138f:	pushf  
   140011390:	out    0x39,al
   140011392:	add    dh,bl
   140011394:	sbb    DWORD PTR [rcx-0x39],esi
   140011397:	addr32 call 0xcaf1c9dc
   14001139d:	rol    DWORD PTR [rax-0x1392a4ac],1
   1400113a3:	xor    al,0x11
   1400113a5:	(bad)  
   1400113a6:	mov    edi,0x14b67cc5
   1400113ab:	xchg   esi,eax
   1400113ac:	ss pop rax
   1400113ae:	or     al,0xe3
   1400113b0:	retf   0x17d8
   1400113b3:	push   rax
   1400113b4:	cwde   
   1400113b5:	movabs eax,ds:0xa536884593829349
   1400113be:	popf   
   1400113bf:	adc    eax,0xd8f848b0
   1400113c4:	(bad)
   1400113c8:	mov    eax,0xde80a38b
   1400113cd:	add    ah,dh
   1400113cf:	repnz lea esp,[rcx+rax*1]
   1400113d3:	jg     0x1400113ba
   1400113d5:	(bad)  
   1400113d6:	sbb    ebx,esi
   1400113d8:	lock rex.RX pop rbp
   1400113db:	fprem  
   1400113dd:	sbb    DWORD PTR [r10+rdi*1],r13d
   1400113e1:	out    0xbc,eax
   1400113e3:	xchg   ebp,eax
   1400113e4:	in     eax,dx
   1400113e5:	add    dl,dl
   1400113e7:	int3   
   1400113e8:	test   al,0x76
   1400113ea:	scas   eax,DWORD PTR es:[rdi]
   1400113eb:	and    ch,BYTE PTR [rbx]
   1400113ed:	fwait
   1400113ee:	or     al,0x17
   1400113f0:	xchg   esi,eax
   1400113f1:	cwde   
   1400113f2:	xor    al,0xca
   1400113f4:	(bad)  
   1400113f5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400113f6:	mov    bl,0xac
   1400113f8:	pushf  
   1400113f9:	(bad)  
   1400113fa:	mov    DWORD PTR [rdi+0xcc2197e],edi
   140011400:	(bad)
   140011404:	add    DWORD PTR [rdi],ebp
   140011406:	sbb    al,bl
   140011408:	jg     0x1400113e1
   14001140a:	jp     0x1400113ec
   14001140c:	xor    al,0xfe
   14001140e:	cmp    ebp,DWORD PTR [rcx]
   140011410:	pop    rsi
   140011411:	(bad)  
   140011412:	add    eax,0x81512ef0
   140011417:	jrcxz  0x140011428
   140011419:	shl    DWORD PTR [rcx],0x8d
   14001141c:	(bad)  
   14001141d:	and    al,0xdf
   14001141f:	rex.X idiv DWORD PTR [rcx]
   140011422:	adc    BYTE PTR [rax],dl
   140011424:	(bad)  
   140011426:	nop
   140011427:	in     eax,0x14
   140011429:	loop   0x140011486
   14001142b:	or     al,0x40
   14001142d:	mov    WORD PTR [rax],ss
   14001142f:	and    al,0x45
   140011431:	fcom   QWORD PTR [rsi-0x5bfae98d]
   140011437:	cmp    ecx,esp
   140011439:	(bad)  
   14001143a:	jmp    0x18852ad00
   14001143f:	fwait
   140011440:	stos   DWORD PTR es:[rdi],eax
   140011441:	test   BYTE PTR [rbx],dl
   140011443:	iret   
   140011444:	retf   0xf95
   140011447:	jae    0x140011460
   140011449:	add    DWORD PTR [rcx-0xaf62289],0xfffffff2
   140011450:	(bad)  
   140011451:	xchg   esp,eax
   140011452:	add    ebp,DWORD PTR [rbx-0x68697306]
   140011458:	(bad)  
   140011459:	stos   DWORD PTR es:[rdi],eax
   14001145a:	int    0xc3
   14001145c:	jg     0x1400114b1
   14001145e:	rex.RXB stos DWORD PTR es:[rdi],eax
   140011460:	rex.RXB (bad) 
   140011462:	(bad)  
   140011463:	gs mov ebp,0x40434514
   140011469:	addr32 jnp 0x1400114c0
   14001146c:	cmc    
   14001146d:	adc    al,0x39
   14001146f:	jl     0x140011473
   140011471:	out    dx,eax
   140011472:	sbb    eax,0x94fb7bbb
   140011477:	out    0xbf,eax
   140011479:	(bad)  
   14001147a:	ret    0x97a5
   14001147d:	jno    0x140011452
   14001147f:	fwait
   140011480:	and    al,0x82
   140011482:	mov    ss,WORD PTR [rdi-0x332c33bc]
   140011488:	jmp    0x161fc0856
   14001148d:	(bad)  
   14001148e:	jmp    0x19f08f9d7
   140011493:	pop    rax
   140011494:	jg     0x140011496
   140011496:	mov    ah,0xda
   140011498:	cwde   
   140011499:	retf   0xd280
   14001149c:	cmc    
   14001149d:	(bad)  
   14001149e:	je     0x14001143a
   1400114a0:	and    esi,0xffffff89
   1400114a3:	std    
   1400114a4:	xchg   edx,eax
   1400114a5:	(bad)  
   1400114a6:	and    BYTE PTR [rcx-0x7afbba53],ch
   1400114ac:	sub    eax,0x886d1e21
   1400114b1:	mov    dh,0xfc
   1400114b3:	(bad)  
   1400114b4:	pop    rbx
   1400114b5:	mov    BYTE PTR [rax-0x681629e4],ah
   1400114bb:	call   0x10bbb200e
   1400114c0:	push   rdx
   1400114c1:	sbb    esi,0xcad2f400
   1400114c7:	sub    eax,0x37f5fef2
   1400114cc:	cmp    al,0xf2
   1400114ce:	out    0x74,eax
   1400114d0:	jno    0x1400114cf
   1400114d2:	add    ebp,DWORD PTR [rsi+0x4108801c]
   1400114d8:	add    al,0xd1
   1400114da:	sub    BYTE PTR [rdx+0x43],0xb1
   1400114de:	ja     0x1400114e3
   1400114e0:	sbb    DWORD PTR [rip+0x423b5c32],ebp        # 0x1823c7118
   1400114e6:	or     dl,cl
   1400114e8:	(bad)  
   1400114ea:	sub    eax,0x40bc2f56
   1400114ef:	jno    0x1400114ee
   1400114f1:	push   rdx
   1400114f2:	out    0xfd,al
   1400114f4:	mov    ebp,DWORD PTR [rdx+0x56]
   1400114f7:	cld    
   1400114f8:	rex.X
   1400114f9:	rex.X outs dx,BYTE PTR ds:[rsi]
   1400114fb:	std    
   1400114fc:	adc    eax,0x6338e323
   140011501:	loopne 0x1400114a8
   140011503:	push   0x246970a0
   140011508:	js     0x1400114a6
   14001150a:	out    0x97,eax
   14001150c:	(bad)  
   14001150d:	scas   al,BYTE PTR es:[rdi]
   14001150e:	add    DWORD PTR [rcx+0x14],ebp
   140011511:	or     DWORD PTR [rcx-0xd525ff2],ecx
   140011517:	(bad)  
   140011518:	fisttp QWORD PTR [rdi+0x55]
   14001151b:	add    DWORD PTR [rsp+rax*1],0x340654ba
   140011522:	rex.WX mov cl,0xfd
   140011525:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011526:	adc    DWORD PTR [rcx-0x37],esp
   140011529:	clc    
   14001152a:	rex.R xor al,0x22
   14001152d:	scas   al,BYTE PTR es:[rdi]
   14001152e:	xor    eax,0x6132a9a0
   140011533:	(bad)  
   140011534:	(bad)  
   140011535:	xchg   ecx,eax
   140011536:	test   BYTE PTR [rdi-0x1],dh
   140011539:	add    bh,BYTE PTR [rdi+0x69770cf3]
   14001153f:	sbb    dl,al
   140011541:	sbb    eax,DWORD PTR [rax+0x22dca25e]
   140011547:	out    dx,eax
   140011548:	mov    edi,0x3e27c9ff
   14001154d:	xlat   BYTE PTR ds:[rbx]
   14001154e:	sub    al,0xad
   140011550:	inc    DWORD PTR [rbx+rax*4]
   140011553:	add    eax,0xd547c44
   140011558:	test   DWORD PTR [rax-0x1ae615ff],esp
   14001155e:	(bad)  
   14001155f:	cs mov dl,0x79
   140011562:	(bad)  
   140011563:	(bad)
   140011566:	out    dx,al
   140011567:	mov    bh,BYTE PTR fs:[rbx-0x745a7590]
   14001156e:	addr32 mov edi,?
   140011571:	(bad)  
   140011572:	shl    BYTE PTR [rsi],0xf0
   140011575:	in     al,0xce
   140011577:	mov    edi,0xac5bfe84
   14001157c:	popf   
   14001157d:	jbe    0x1400115a5
   14001157f:	sbb    eax,0xffa1204c
   140011584:	jle    0x1400115d4
   140011586:	(bad)
   140011589:	in     eax,dx
   14001158a:	iret   
   14001158b:	xor    eax,DWORD PTR [rcx]
   14001158d:	xor    eax,0x144523bf
   140011592:	(bad)  
   140011593:	jnp    0x14001159c
   140011595:	and    dl,BYTE PTR [rsi]
   140011597:	ror    BYTE PTR [rcx-0xa],1
   14001159a:	pop    rbp
   14001159b:	lods   al,BYTE PTR ds:[rsi]
   14001159c:	(bad)  
   14001159d:	and    al,0xce
   14001159f:	add    DWORD PTR [rcx-0x7f969ef6],ebp
   1400115a5:	imul   eax,DWORD PTR [rcx],0x40
   1400115a8:	or     ebp,DWORD PTR [rdx]
   1400115aa:	adc    al,0x27
   1400115ac:	mov    WORD PTR [rsi],ds
   1400115ae:	xlat   BYTE PTR ds:[rbx]
   1400115af:	sbb    ebx,DWORD PTR [rdi-0x20]
   1400115b2:	cs add eax,0xd0037b03
   1400115b8:	rex.WXB push r15
   1400115ba:	jb     0x14001159a
   1400115bc:	jg     0x1400115b2
   1400115be:	movabs eax,ds:0x78e86ffd79649e07
   1400115c7:	mov    ecx,0xd8185f14
   1400115cc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400115cd:	cmp    BYTE PTR [rdx],al
   1400115cf:	test   BYTE PTR [rsi],al
   1400115d1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400115d2:	jnp    0x14001160c
   1400115d4:	out    dx,eax
   1400115d5:	sbb    BYTE PTR [rdx+rdi*4],bl
   1400115d8:	(bad)  
   1400115d9:	push   rcx
   1400115da:	in     eax,0xc6
   1400115dc:	mov    ch,0x6d
   1400115de:	xchg   esi,eax
   1400115df:	(bad)  
   1400115e0:	jg     0x14001161f
   1400115e2:	mov    ?,ebx
   1400115e4:	scas   al,BYTE PTR es:[rdi]
   1400115e5:	test   esp,0x81052a8f
   1400115eb:	rex.X add al,0x2f
   1400115ee:	and    DWORD PTR [rdi-0x48b2ce01],eax
   1400115f4:	(bad)  
   1400115f5:	movabs al,ds:0x419aeaa5d700554
   1400115fe:	rex.WRXB int3 
   140011600:	dec    DWORD PTR [rbp-0x1b]
   140011603:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011604:	sar    DWORD PTR [rdx],0xf7
   140011607:	shl    BYTE PTR [rdi+rdi*4+0x16],cl
   14001160b:	mov    ch,0xcf
   14001160d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001160e:	rex fcmove st,st(6)
   140011611:	sbb    BYTE PTR [rax],0x9
   140011614:	push   0x19105c87
   140011619:	or     DWORD PTR [rcx+0x80ed470],0x3e6fb649
   140011623:	and    eax,0x2d09ab48
   140011628:	mov    ebx,0x71cfb1f0
   14001162d:	outs   dx,BYTE PTR ds:[rsi]
   14001162e:	lea    esi,[rsi+0x18d77a24]
   140011634:	sbb    esi,0x3072f400
   14001163a:	out    dx,eax
   14001163b:	(bad)  
   14001163c:	push   rdi
   14001163d:	(bad)  
   14001163e:	push   rdi
   14001163f:	xlat   BYTE PTR ds:[rbx]
   140011640:	mov    dh,ch
   140011642:	int    0x5f
   140011644:	push   0x16
   140011646:	xlat   BYTE PTR ds:[rbx]
   140011647:	(bad)  
   140011648:	mov    edx,0xf6938062
   14001164d:	ss push rcx
   14001164f:	or     eax,0x727e0210
   140011654:	xchg   ebx,eax
   140011655:	(bad)  
   140011656:	imul   ecx,DWORD PTR [rbp-0x26e873f],0xf1734d59
   140011660:	or     al,0x4b
   140011662:	(bad)  
   140011663:	pop    rdi
   140011664:	rex.R outs dx,BYTE PTR ds:[rsi]
   140011666:	pop    rsi
   140011667:	rex.RB
   140011668:	rex.XB or eax,0x105aaf44
   14001166e:	repz jg 0x140011610
   140011671:	xchg   esi,eax
   140011672:	std    
   140011673:	(bad)  
   140011674:	and    eax,0x6b9ed4b8
   140011679:	(bad)  
   14001167a:	pop    rax
   14001167b:	clc    
   14001167c:	xchg   ecx,eax
   14001167d:	call   0x1662a4543
   140011682:	popf   
   140011683:	jge    0x1400116cc
   140011685:	scas   al,BYTE PTR es:[edi]
   140011687:	out    0x9d,al
   140011689:	(bad)
   14001168c:	push   rsi
   14001168d:	jmp    0x14001166a
   14001168f:	add    eax,0xc46cec43
   140011694:	pop    rcx
   140011695:	sub    ah,al
   140011697:	or     al,0xf4
   140011699:	sub    ebp,DWORD PTR [rsp+rcx*8+0x6a0729d8]
   1400116a0:	xor    dh,BYTE PTR [rax]
   1400116a2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400116a3:	std    
   1400116a4:	fcmovb st,st(1)
   1400116a6:	sbb    DWORD PTR [rbp+rdx*4+0xa],eax
   1400116aa:	jge    0x14001168e
   1400116ac:	movsxd edi,DWORD PTR [rdx-0x3d11b10b]
   1400116b2:	xor    al,0xa0
   1400116b4:	(bad)  
   1400116b5:	add    bh,dh
   1400116b7:	mov    edx,0x9dfbc81c
   1400116bc:	jae    0x140011693
   1400116be:	repnz icebp 
   1400116c0:	adc    edi,DWORD PTR [rdi-0x5b]
   1400116c3:	pop    rsi
   1400116c4:	fidivr WORD PTR [rdi+rsi*4+0x54]
   1400116c8:	movsxd eax,DWORD PTR [rsp+rbx*4+0x71]
   1400116cc:	outs   dx,DWORD PTR ds:[rsi]
   1400116cd:	rex.WR
   1400116ce:	repz and BYTE PTR [rbx+r10*2],sil
   1400116d3:	mov    bh,BYTE PTR [rdx-0x36]
   1400116d6:	jo     0x1400116bb
   1400116d8:	sbb    dh,cl
   1400116da:	jns    0x14001174a
   1400116dc:	fdivr  QWORD PTR [rsi+rcx*8+0x181785e2]
   1400116e3:	pop    rsi
   1400116e4:	mov    ecx,0x125dd300
   1400116e9:	push   rbp
   1400116ea:	xlat   BYTE PTR ds:[rbx]
   1400116eb:	or     ebx,DWORD PTR [rip+0xffffffffd739afef]        # 0x1173ac6e0
   1400116f1:	(bad)  
   1400116f2:	in     eax,dx
   1400116f3:	mov    bh,0x96
   1400116f5:	call   rbx
   1400116f7:	jmp    0x13a198701
   1400116fc:	(bad)  
   1400116fd:	jg     0x1400116ab
   1400116ff:	rex outs dx,DWORD PTR ds:[rsi]
   140011701:	sbb    al,0x0
   140011703:	rex.B push 0x45
   140011706:	rex.X push 0x9c63f09
   14001170c:	mov    al,0x5f
   14001170e:	push   rcx
   14001170f:	adc    dl,BYTE PTR [rbp-0x28]
   140011712:	rex.RB xchg r8d,eax
   140011714:	(bad)  
   140011716:	test   al,0x48
   140011718:	in     al,dx
   140011719:	and    eax,0x6675f530
   14001171e:	or     al,0x52
   140011720:	ja     0x1400116c2
   140011722:	rex.WXB
   140011723:	rex.WR
   140011724:	rex.XB pop r10
   140011726:	and    eax,DWORD PTR [rax+0xe]
   140011729:	cmp    al,0x4
   14001172b:	rex.B in eax,0x7e
   14001172e:	cdq    
   14001172f:	jl     0x140011740
   140011731:	ja     0x140011714
   140011733:	mov    ah,0xa0
   140011735:	mov    ebx,0xf97a44e6
   14001173a:	jge    0x140011704
   14001173c:	and    DWORD PTR [rsi],0xfe3aa01f
   140011742:	clc    
   140011743:	movabs ds:0x2e1887f1bcb66c7f,eax
   14001174c:	and    esi,ecx
   14001174e:	rex.RXB in eax,0x81
   140011751:	sbb    al,0xfa
   140011753:	mov    eax,DWORD PTR [rbp+0x643555ff]
   140011759:	mov    esp,0x9b4c9ba
   14001175e:	rex.WR
   14001175f:	cs mov esi,0x1785cacc
   140011765:	lock (bad) 
   140011767:	scas   al,BYTE PTR es:[rdi]
   140011768:	movabs al,ds:0x4cffb5cd7efc6a61
   140011771:	std    
   140011772:	rex.WRB (bad) 
   140011774:	add    BYTE PTR [rdx+rdi*8+0xc739a9b],cl
   14001177b:	hlt    
   14001177c:	jae    0x1400117eb
   14001177e:	cmp    dl,BYTE PTR [rax-0x54a37e90]
   140011784:	add    esi,DWORD PTR [rsi+rax*1+0x17e22e9a]
   14001178b:	ret    
   14001178c:	jbe    0x1400117db
   14001178e:	cwde   
   14001178f:	movabs ds:0x1abc417a0f75abf8,al
   140011799:	movabs eax,ds:0x8036720a44c000c8
   1400117a2:	and    al,0xf
   1400117a4:	and    al,0xc1
   1400117a6:	mov    BYTE PTR [rbp-0x692fce65],0xf
   1400117ad:	and    BYTE PTR [rdx],ah
   1400117af:	sub    al,0x48
   1400117b1:	clc    
   1400117b2:	ror    BYTE PTR [rdi],1
   1400117b4:	leave  
   1400117b5:	mov    eax,DWORD PTR [rdi-0x48]
   1400117b8:	retf   
   1400117b9:	movabs ds:0xd00b72abdc00de80,al
   1400117c2:	out    dx,eax
   1400117c3:	movabs eax,ds:0x2ff3657acefc1f47
   1400117cc:	call   0x18be81d49
   1400117d1:	sbb    eax,ecx
   1400117d3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400117d4:	mov    BYTE PTR [rsi],al
   1400117d6:	(bad)  
   1400117d7:	sub    ch,BYTE PTR [rax-0x60]
   1400117da:	(bad)  
   1400117db:	mov    cl,0xbf
   1400117de:	retf   
   1400117df:	(bad)  
   1400117e0:	jns    0x1400117ff
   1400117e2:	(bad)  
   1400117e3:	sbb    BYTE PTR [rax-0x1d],dh
   1400117e6:	out    0xe,al
   1400117e8:	movabs ds:0x7e07173e5f19270b,eax
   1400117f1:	adc    al,BYTE PTR [rbx]
   1400117f3:	add    eax,0x17f81a87
   1400117f8:	ret    
   1400117f9:	push   QWORD PTR [rax+rbp*8+0x69fd0e47]
   140011800:	cmp    eax,0x7808aa77
   140011805:	xlat   BYTE PTR ds:[rbx]
   140011806:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011807:	add    BYTE PTR [rsi],bh
   140011809:	(bad)  
   14001180a:	fstp   QWORD PTR [rdx-0x26]
   14001180d:	scas   eax,DWORD PTR es:[rdi]
   14001180e:	test   al,0x20
   140011810:	xor    ebx,DWORD PTR [r9]
   140011813:	sub    dh,ch
   140011815:	in     al,dx
   140011816:	or     BYTE PTR [rsi],0x6a
   140011819:	and    BYTE PTR [rdi-0x2af312fb],dl
   14001181f:	out    0x1,al
   140011821:	(bad)  
   140011822:	or     eax,0xf39af383
   140011827:	sti    
   140011828:	rex.W (bad) 
   14001182a:	in     al,dx
   14001182b:	xor    BYTE PTR [rax],al
   14001182d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001182e:	push   rbp
   14001182f:	mov    ch,BYTE PTR [rax+0x13]
   140011832:	sub    al,0x9a
   140011834:	rex.B (bad) 
   140011836:	jl     0x140011888
   140011838:	(bad)  
   140011839:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001183a:	(bad)  
   14001183b:	movabs eax,ds:0x97a24e2bb80a26bb
   140011844:	fbld   TBYTE PTR [rbx+0x2b2b9eb4]
   14001184a:	push   rcx
   14001184c:	(bad)  
   14001184d:	mov    ?,WORD PTR [rbp-0x726a653]
   140011853:	fcmovne st,st(5)
   140011855:	loop   0x1400118d1
   140011857:	jmp    0x14e5579e6
   14001185c:	xrelease mov BYTE PTR [rdx+0x84feeb1],ch
   140011863:	call   0xc691e2d4
   140011868:	rol    esi,0x11
   14001186b:	(bad)  
   14001186c:	es mov al,0x7b
   14001186f:	stc    
   140011870:	add    ch,BYTE PTR [rbx]
   140011872:	(bad)  
   140011873:	pop    rdi
   140011874:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011875:	mov    eax,0xd4c2097e
   14001187a:	rex mov ebx,0xda17a888
   140011880:	add    edi,edi
   140011882:	cmp    ah,ch
   140011884:	mov    edi,0xc1d7fddc
   140011889:	add    edx,ebx
   14001188b:	xor    al,0xa0
   14001188d:	pop    rbp
   14001188e:	mov    ebx,0x1028b2f
   140011893:	and    al,0x58
   140011895:	sub    DWORD PTR [rax-0x25],edx
   140011898:	imul   eax,eax,0x9ec78f29
   14001189e:	xchg   ebx,eax
   14001189f:	rex.WRX adc BYTE PTR [rax+0x24e280ca],0xf2
   1400118a7:	xchg   DWORD PTR [rax+rcx*4],ebx
   1400118aa:	jae    0x140011834
   1400118ac:	ja     0x1400118e4
   1400118ae:	jns    0x140011848
   1400118b0:	fcomp  QWORD PTR [rsi]
   1400118b2:	pushf  
   1400118b3:	pop    rbp
   1400118b5:	sub    dh,al
   1400118b7:	sub    ah,BYTE PTR [rsi+0x74]
   1400118ba:	sub    al,0x9a
   1400118bc:	adc    DWORD PTR [rax+0x5d],esp
   1400118bf:	data16 lahf 
   1400118c1:	mov    al,0x99
   1400118c3:	xor    DWORD PTR [rdi+0xd],0x37a027
   1400118ca:	imul   DWORD PTR [rsi+0x1e562f24]
   1400118d0:	ds mov edx,0xdb5bbf79
   1400118d6:	cld    
   1400118d7:	cmp    edx,DWORD PTR [rbx-0x5164bc5b]
   1400118dd:	sbb    al,0x76
   1400118df:	pop    rax
   1400118e0:	cmp    BYTE PTR [rcx-0x5ce5581c],dh
   1400118e6:	sbb    BYTE PTR [rdx+0x1b],0xfc
   1400118ea:	in     al,0x26
   1400118ec:	add    DWORD PTR [rbp+0x4b0b8615],0xffffffdc
   1400118f3:	fcomp  st(3)
   1400118f5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400118f6:	mov    eax,0x178b02f0
   1400118fb:	iret   
   1400118fc:	and    BYTE PTR [rbx-0x4f],bh
   1400118ff:	jmp    0x140011950
   140011901:	int    0x68
   140011903:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011904:	(bad)  
   140011905:	pop    rcx
   140011906:	cmp    edi,ecx
   140011908:	xchg   DWORD PTR [rdi+rdx*2-0x7113d6f5],ebx
   14001190f:	rex.WRXB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011911:	cs mov ebp,0xa9700954
   140011917:	fs xchg edi,eax
   140011919:	fstp   TBYTE PTR [rsi-0x13]
   14001191c:	push   rdi
   14001191d:	add    BYTE PTR [rsi+0x1],ah
   140011920:	(bad)  
   140011921:	out    0xdb,al
   140011923:	and    ebx,0xffa724db
   140011929:	fstp   QWORD PTR [rcx]
   14001192b:	and    DWORD PTR [rax+0x4f],esp
   14001192e:	rex.WX add al,0x2
   140011931:	(bad)  
   140011932:	adc    DWORD PTR [rdx+rbx*8-0x76a9017a],0x9a871d48
   14001193d:	mov    bh,0xd4
   14001193f:	out    dx,al
   140011940:	cmp    BYTE PTR [rbp-0x295e3e1],cl
   140011946:	(bad)  
   140011947:	(bad)  
   140011948:	sub    ah,BYTE PTR [rdi+0x4a2ee11f]
   14001194e:	add    edi,DWORD PTR [rdx+0x3]
   140011951:	jo     0x140011902
   140011953:	leave  
   140011954:	add    esp,eax
   140011956:	mov    edi,0x78d1caac
   14001195b:	jae    0x140011950
   14001195d:	outs   dx,DWORD PTR ds:[rsi]
   14001195e:	rex.WRX xchg rdi,rax
   140011960:	(bad)  
   140011962:	jmp    0xcae124ed
   140011967:	in     al,dx
   140011968:	pop    rbp
   140011969:	movabs ds:0x434206877c9887f2,eax
   140011972:	push   rbp
   140011973:	sbb    QWORD PTR [r12+r11*1+0x21],r13
   140011978:	mov    BYTE PTR [rbx-0x19],ah
   14001197b:	rol    BYTE PTR [rip+0xffffffff9d7fced6],cl        # 0xdd80e857
   140011981:	(bad)  
   140011982:	(bad)  
   140011983:	(bad)  
   140011984:	ror    BYTE PTR [rsi+riz*8-0x16],cl
   140011988:	(bad)  
   140011989:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001198a:	rex.W pushf 
   14001198c:	stc    
   14001198d:	lahf   
   14001198e:	out    0xfe,eax
   140011990:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011991:	mov    dl,0x5a
   140011993:	rex.RXB (bad) 
   140011995:	mov    ebx,0xfd2a4151
   14001199a:	fsincos 
   14001199c:	mov    esp,0xd7ba3693
   1400119a1:	fcom   DWORD PTR [rcx+0x2c]
   1400119a4:	add    DWORD PTR [rsp+rax*8],esp
   1400119a7:	xor    al,0x20
   1400119a9:	(bad)  
   1400119aa:	jae    0x1400119da
   1400119ac:	sbb    al,BYTE PTR [rbx]
   1400119ae:	lea    esp,[rax+riz*4+0x7692b8a4]
   1400119b5:	xchg   edx,eax
   1400119b6:	sub    eax,DWORD PTR [rcx]
   1400119b8:	leave  
   1400119b9:	(bad)
   1400119bc:	(bad)  
   1400119bd:	movabs ds:0xc8931171080f2c6,eax
   1400119c6:	sub    BYTE PTR [rdx+0x5a],ch
   1400119c9:	xor    r13d,DWORD PTR ds:[rax+0x69]
   1400119ce:	lods   eax,DWORD PTR ds:[rsi]
   1400119cf:	ret    0xc7e3
   1400119d2:	fyl2xp1 
   1400119d4:	and    al,0x77
   1400119d6:	sar    DWORD PTR [rax+rax*8+0x4bdc00de],1
   1400119dd:	jb     0x1400119ea
   1400119df:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400119e0:	(bad)  
   1400119e2:	outs   dx,DWORD PTR ds:[rsi]
   1400119e3:	js     0x1400119d5
   1400119e5:	not    DWORD PTR [edi-0xe7982f1]
   1400119ec:	or     ch,dl
   1400119ee:	push   rdx
   1400119ef:	test   DWORD PTR [rsp+rsi*8-0x4],0x343e034e
   1400119f7:	mov    eax,0xdc5010d0
   1400119fc:	je     0x14001198d
   1400119fe:	push   rcx
   1400119ff:	pop    rcx
   140011a00:	xor    BYTE PTR [rax-0x27],bl
   140011a03:	loopne 0x1400119eb
   140011a05:	fs add bl,bl
   140011a08:	(bad)  
   140011a09:	mov    dl,0xbc
   140011a0b:	jge    0x140011a13
   140011a0d:	mov    bh,0x7b
   140011a0f:	lea    esp,[rax+0x6e154c75]
   140011a15:	push   rcx
   140011a16:	cli    
   140011a17:	mov    esp,ebp
   140011a19:	mov    edx,0xfbd660a4
   140011a1e:	rex.WRXB and r12b,r8b
   140011a21:	je     0x140011a0a
   140011a23:	add    BYTE PTR [rbx+rbp*8-0x164bdfe],dh
   140011a2a:	addr32 cmp eax,0xaa4d020b
   140011a30:	add    al,0xa4
   140011a32:	jbe    0x140011a94
   140011a34:	add    ecx,DWORD PTR [rax]
   140011a36:	xchg   ebp,eax
   140011a37:	mov    BYTE PTR [rdi],cl
   140011a39:	pop    rax
   140011a3a:	retf   0xfe42
   140011a3d:	cwde   
   140011a3e:	in     al,0xc5
   140011a40:	test   ch,al
   140011a42:	rex.WB
   140011a43:	rex.WRX or rax,r14
   140011a46:	or     DWORD PTR [rdi+0x48],ebp
   140011a49:	mov    ecx,0x63e05abf
   140011a4e:	mov    eax,0xd7127c47
   140011a53:	imul   edi,DWORD PTR [rdx+rdx*1],0x7d985611
   140011a5a:	out    0x1,al
   140011a5c:	test   BYTE PTR [rsi-0x5fb9da24],0x37
   140011a63:	add    bh,dh
   140011a65:	mov    bh,BYTE PTR [rdx+rdx*1+0x7c1f2ff1]
   140011a6c:	jrcxz  0x140011a31
   140011a6e:	(bad)  
   140011a6f:	xor    BYTE PTR [rbx+0x39],bl
   140011a72:	hlt    
   140011a73:	xchg   ebx,eax
   140011a74:	mov    edx,0xe8f88ab0
   140011a79:	stc    
   140011a7a:	push   rbp
   140011a7b:	xchg   ebp,eax
   140011a7c:	es xor al,0x88
   140011a7f:	(bad)  
   140011a80:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011a81:	imul   edx,eax,0x8109a1a6
   140011a87:	adc    BYTE PTR [rdx],al
   140011a89:	(bad)  
   140011a8a:	dec    BYTE PTR [rsi]
   140011a8c:	ret    
   140011a8d:	mov    ch,0x43
   140011a8f:	cmp    BYTE PTR [rdi+0x72],bl
   140011a92:	jrcxz  0x140011a5e
   140011a94:	and    eax,0xa49c2e56
   140011a99:	mov    edx,0xfb660172
   140011a9e:	and    ch,0xd2
   140011aa1:	or     al,BYTE PTR [rip+0xffffffffd37fa162]        # 0x11380bc09
   140011aa7:	xchg   esi,eax
   140011aa8:	stc    
   140011aa9:	ins    BYTE PTR es:[rdi],dx
   140011aaa:	fldcw  WORD PTR [rdi-0x59]
   140011aad:	ins    DWORD PTR es:[rdi],dx
   140011aae:	clc    
   140011aaf:	(bad)  
   140011ab0:	cmp    esi,edi
   140011ab2:	movabs ds:0xe5da42a5cce567d2,al
   140011abb:	(bad)  
   140011abc:	push   rcx
   140011abd:	push   rbx
   140011abe:	(bad)  
   140011abf:	sbb    BYTE PTR [rip+0xffffffff83440750],al        # 0xc3452215
   140011ac5:	jmp    0x122eb3b74
   140011aca:	jo     0x140011adb
   140011acc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011acd:	adc    DWORD PTR [rbx],ebp
   140011acf:	push   rax
   140011ad0:	repnz rcl BYTE PTR [rax+0x658801c8],1
   140011ad7:	mov    r13b,0x4e
   140011ada:	(bad)  
   140011adb:	jno    0x140011abd
   140011add:	mov    al,BYTE PTR [rdx+rsi*8-0x353c4b39]
   140011ae4:	jge    0x140011b13
   140011ae6:	rex.WRXB add QWORD PTR [r11+0x27],r9
   140011aea:	push   0x1500cb69
   140011aef:	loope  0x140011a9a
   140011af1:	lahf   
   140011af2:	in     al,0x85
   140011af4:	mov    bh,0xd1
   140011af6:	pop    rbp
   140011af7:	cmp    esp,eax
   140011af9:	(bad)  
   140011afa:	rex.WRX add r15,QWORD PTR [rdx+0x3]
   140011afe:	jo     0x140011b2f
   140011b00:	enter  0xca2d,0x7d
   140011b04:	(bad)  
   140011b06:	jl     0x140011ae7
   140011b08:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011b09:	jmp    0x140011aa0
   140011b0b:	int    0xbf
   140011b0d:	pop    rdx
   140011b0e:	(bad)  
   140011b0f:	lods   al,BYTE PTR ds:[rsi]
   140011b10:	jns    0x140011b69
   140011b12:	or     al,0x50
   140011b14:	jno    0x140011b4c
   140011b16:	adc    al,0xc3
   140011b18:	cmp    al,0x7e
   140011b1a:	push   rbx
   140011b1b:	xor    ecx,DWORD PTR [rbx]
   140011b1d:	xor    eax,0xd406960d
   140011b22:	adc    eax,esi
   140011b24:	add    ah,ch
   140011b26:	ficom  DWORD PTR [rcx]
   140011b28:	mul    BYTE PTR [rsi+0x33]
   140011b2b:	(bad)  
   140011b2c:	mov    ebp,DWORD PTR [rdi]
   140011b2e:	mov    dl,0xb6
   140011b30:	jne    0x140011b4c
   140011b32:	mov    edi,0x66108573
   140011b37:	sbb    DWORD PTR [rcx],esi
   140011b39:	ja     0x140011ac3
   140011b3b:	sbb    DWORD PTR [rax+0x2e812310],eax
   140011b41:	out    0x3e,eax
   140011b43:	push   rdi
   140011b44:	add    al,cl
   140011b46:	or     eax,0x814ace40
   140011b4b:	fidiv  WORD PTR [rdi-0x2ad14353]
   140011b51:	repz add dl,BYTE PTR [rcx+0x1512a3e8]
   140011b58:	cmp    al,BYTE PTR [rax]
   140011b5a:	test   eax,0x21141814
   140011b5f:	add    BYTE PTR [rcx],ch
   140011b61:	push   rbx
   140011b62:	(bad)  
   140011b63:	pop    rax
   140011b64:	add    eax,0x7021
   140011b69:	enter  0x8d51,0x66
   140011b6d:	rex.WX mov al,0xe4
   140011b70:	push   rcx
   140011b71:	movsxd edx,DWORD PTR [rcx-0x7]
   140011b74:	xor    esp,DWORD PTR [rip+0x16c1b490]        # 0x156c2d00a
   140011b7a:	(bad)  
   140011b7b:	mov    bl,bh
   140011b7d:	add    ah,BYTE PTR [rdx+0x34]
   140011b80:	and    BYTE PTR [rdx],dh
   140011b82:	cmp    al,cl
   140011b84:	fidiv  WORD PTR [rbx-0x24]
   140011b87:	and    eax,0x37b4343
   140011b8c:	jo     0x140011b45
   140011b8e:	retf   
   140011b8f:	sub    eax,0xf23ff3c
   140011b94:	(bad)  
   140011b95:	stc    
   140011b96:	push   0xffffffffabfc3b58
   140011b9b:	mov    bl,0x85
   140011b9d:	cmc    
   140011b9e:	add    eax,0x63510d57
   140011ba3:	cli    
   140011ba4:	mov    DWORD PTR [rsi],eax
   140011ba6:	mov    ah,0x89
   140011ba8:	mov    ch,0x7e
   140011baa:	(bad)  
   140011bab:	call   0xff897915
   140011bb0:	stos   DWORD PTR es:[rdi],eax
   140011bb1:	mov    ebp,0x1b2b061d
   140011bb6:	adc    al,0xc3
   140011bb8:	adc    edi,edx
   140011bba:	scas   eax,DWORD PTR es:[rdi]
   140011bbb:	pop    rdi
   140011bbc:	(bad)  
   140011bbd:	icebp  
   140011bbe:	loop   0x140011be9
   140011bc0:	(bad)  
   140011bc1:	xchg   edi,eax
   140011bc2:	iret   
   140011bc3:	rex.RB out dx,eax
   140011bc5:	(bad)  
   140011bc6:	push   0xfffffffffffffff9
   140011bc8:	jb     0x140011be4
   140011bca:	stc    
   140011bcb:	add    eax,0xba53793e
   140011bd0:	rex.W jp 0x140011b8a
   140011bd3:	cld    
   140011bd4:	xchg   edi,eax
   140011bd5:	adc    BYTE PTR [rcx+rcx*8-0x7c],bh
   140011bd9:	and    BYTE PTR [rdi],ch
   140011bdb:	(bad)  
   140011bdc:	mov    BYTE PTR [rbx-0x21bdbf2f],cl
   140011be2:	(bad)  
   140011be3:	sar    dh,1
   140011be5:	(bad)  
   140011be6:	int    0x3f
   140011be8:	and    DWORD PTR [rdx],edx
   140011bea:	(bad)  
   140011beb:	pushf  
   140011bec:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011bed:	push   0xffffffffe4fe7a21
   140011bf2:	mov    cl,0x45
   140011bf4:	xor    DWORD PTR [rbp+0xebbcfb5],eax
   140011bfa:	clc    
   140011bfb:	mov    bl,BYTE PTR [edi+0x1a5c04fa]
   140011c02:	cmp    ah,dl
   140011c04:	pop    rsi
   140011c05:	fst    DWORD PTR [rip+0xffffffffa6998c98]        # 0xe69aa8a3
   140011c0b:	mov    es,ecx
   140011c0d:	xchg   esp,eax
   140011c0e:	sub    ch,BYTE PTR [rax-0x580ad74e]
   140011c14:	(bad)  
   140011c15:	retf   0x12f6
   140011c18:	ja     0x140011c1b
   140011c1a:	xor    eax,0x770037b8
   140011c1f:	mov    bl,0x1c
   140011c21:	push   0x37aa05ed
   140011c26:	sahf   
   140011c27:	cmp    ah,dh
   140011c29:	fldenv [rsi-0x3]
   140011c2c:	call   0x15f3009e0
   140011c31:	fidiv  WORD PTR [rax-0x2b]
   140011c34:	or     BYTE PTR [rcx],dl
   140011c36:	(bad)  
   140011c37:	adc    eax,0x535c0427
   140011c3c:	adc    eax,DWORD PTR [rdx+0x43]
   140011c3f:	rex.W test BYTE PTR [rdi],bl
   140011c42:	sti    
   140011c43:	or     DWORD PTR [rbp-0x33],esi
   140011c46:	cmp    BYTE PTR [rcx+rbp*1+0x37],cl
   140011c4a:	mov    ?,WORD PTR [rcx]
   140011c4c:	popf   
   140011c4d:	(bad)  
   140011c4e:	rex.WR mov dil,0x5e
   140011c51:	(bad)  
   140011c52:	cmc    
   140011c53:	ret    0x8a69
   140011c56:	popf   
   140011c57:	sub    ebp,DWORD PTR [rax-0x68]
   140011c5a:	mov    ch,0xb5
   140011c5c:	cld    
   140011c5d:	adc    al,0xfe
   140011c5f:	movsxd edi,DWORD PTR [rbp-0x1]
   140011c62:	je     0x140011c2e
   140011c64:	imul   ecx,ecx,0xfffffff3
   140011c67:	shl    DWORD PTR [rsi-0x7dec5200],cl
   140011c6d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011c6e:	mov    al,0x3f
   140011c70:	std    
   140011c71:	(bad)  
   140011c72:	iret   
   140011c73:	gs and al,0xde
   140011c76:	retf   0x91fb
   140011c79:	or     eax,DWORD PTR [rax]
   140011c7b:	(bad)  
   140011c7c:	rex.WRB xor al,0x6
   140011c7f:	movabs ds:0x6400386a0806f5a4,al
   140011c88:	sub    al,0x5f
   140011c8a:	and    al,0x56
   140011c8c:	add    BYTE PTR [rdi+riz*8-0x16],ch
   140011c90:	(bad)  
   140011c91:	pop    QWORD PTR [rax-0x345f48a8]
   140011c97:	and    eax,0x951c949
   140011c9c:	leave  
   140011c9d:	and    BYTE PTR [rdx-0x5a],al
   140011ca0:	adc    al,0x58
   140011ca2:	xchg   esi,eax
   140011ca3:	add    BYTE PTR [rax],0x15
   140011ca6:	int    0x9b
   140011ca8:	mov    esi,0x34a42e4b
   140011cad:	loopne 0x140011c3d
   140011caf:	scas   al,BYTE PTR es:[rdi]
   140011cb0:	(bad)  
   140011cb1:	adc    al,0xb7
   140011cb3:	sti    
   140011cb4:	add    BYTE PTR [rdx+0x79],bh
   140011cb7:	or     eax,0xfe7595e4
   140011cbc:	add    ch,BYTE PTR [rax]
   140011cbe:	fcomip st,st(4)
   140011cc0:	loopne 0x140011c63
   140011cc2:	(bad)  
   140011cc3:	ficomp DWORD PTR [rdi+0x39]
   140011cc6:	cld    
   140011cc7:	push   rdi
   140011cc8:	ja     0x140011c61
   140011cca:	jg     0x1b9c3524c
   140011cd0:	outs   dx,DWORD PTR ds:[rsi]
   140011cd1:	xor    al,0xdf
   140011cd3:	add    BYTE PTR [rsi+rax*4-0x247bb260],0x43
   140011cdb:	rex
   140011cdc:	rex.X
   140011cdd:	rex push rcx
   140011cdf:	data16 or ch,dl
   140011ce2:	fs xchg ecx,esp
   140011ce5:	js     0x140011c70
   140011ce7:	jb     0x140011d5a
   140011ce9:	cdq    
   140011cea:	in     eax,dx
   140011ceb:	sub    edx,DWORD PTR [rdi+0x18]
   140011cee:	outs   dx,DWORD PTR ds:[rsi]
   140011cef:	mov    ebp,0x97a5c2c0
   140011cf4:	(bad)  
   140011cf5:	(bad)  
   140011cf6:	lods   eax,DWORD PTR ds:[rsi]
   140011cf7:	cmc    
   140011cf8:	xlat   BYTE PTR ds:[rbx]
   140011cf9:	push   rdx
   140011cfa:	jg     0x140011cdf
   140011cfc:	loopne 0x140011c8d
   140011cfe:	and    BYTE PTR [rbx],0x32
   140011d01:	lock push rdx
   140011d03:	mov    bh,0x5f
   140011d05:	and    bl,al
   140011d07:	mov    ah,0xbd
   140011d09:	add    BYTE PTR [rdx-0x618b7e73],dl
   140011d0f:	(bad)  
   140011d10:	pop    rsp
   140011d11:	cmp    ebx,DWORD PTR [rsp+rax*1]
   140011d14:	jrcxz  0x140011d36
   140011d16:	rex.RX xchg esp,eax
   140011d18:	(bad)  
   140011d19:	(bad)  
   140011d1a:	and    esp,DWORD PTR [rcx+rdx*2+0x1d5c1a8]
   140011d21:	sub    eax,0x15107a63
   140011d26:	(bad)  
   140011d27:	pop    rax
   140011d28:	jl     0x140011cb7
   140011d2a:	push   rbp
   140011d2b:	or     BYTE PTR [rdx-0x49dd7cb3],bh
   140011d31:	mov    dh,0xa0
   140011d33:	in     eax,dx
   140011d34:	fild   DWORD PTR [rbx-0x563fcb5a]
   140011d3a:	lods   eax,DWORD PTR ds:[rsi]
   140011d3b:	cmp    edx,DWORD PTR [rax]
   140011d3d:	adc    bl,BYTE PTR [rax+rcx*4-0x56f1bddd]
   140011d44:	fnstsw WORD PTR [rax]
   140011d46:	test   DWORD PTR [rdx],0x78508064
   140011d4c:	sbb    ch,0xcf
   140011d4f:	add    edi,edi
   140011d51:	mov    bh,BYTE PTR [rsi]
   140011d53:	add    ch,al
   140011d55:	in     eax,0x75
   140011d57:	and    eax,0x1f860b7
   140011d5c:	(bad)  
   140011d5d:	xor    eax,edi
   140011d5f:	push   rdi
   140011d60:	jmp    rdx
   140011d62:	(bad)  
   140011d63:	(bad)  
   140011d64:	loope  0x140011d25
   140011d66:	jns    0x140011ddb
   140011d68:	cmc    
   140011d69:	enter  0x648,0x63
   140011d6d:	pushf  
   140011d6e:	repz add al,0x8d
   140011d71:	(bad)  
   140011d72:	jg     0x140011d7c
   140011d74:	or     eax,0xafcf468d
   140011d79:	rex.WRB
   140011d7a:	shl    DWORD PTR [r12+r14*1],cl
   140011d7e:	movabs eax,ds:0x7dd30b0d340d3421
   140011d87:	retf   0x63cd
   140011d8a:	(bad)  
   140011d8b:	rex.B cdq 
   140011d8d:	pop    rsp
   140011d8e:	ds (bad) 
   140011d90:	(bad)  
   140011d91:	(bad)  
   140011d92:	sub    esp,edi
   140011d94:	mov    ch,0xd8
   140011d96:	repz (bad) 
   140011d98:	mov    ah,0x4a
   140011d9a:	cmp    bh,ah
   140011d9c:	std    
   140011d9d:	and    eax,0xea4b7f29
   140011da2:	leave  
   140011da3:	sub    DWORD PTR [rax+0x17],eax
   140011da6:	xchg   ebp,eax
   140011da7:	mov    bh,0xa
   140011da9:	and    al,BYTE PTR [rbx]
   140011dac:	test   eax,0xb6e7afb6
   140011db1:	call   QWORD PTR [rdi+rdi*8-0x7d7ff5a5]
   140011db8:	(bad)  
   140011db9:	add    DWORD PTR [rcx-0x7d2f0ce5],ebp
   140011dbf:	rol    DWORD PTR [rax+0x451b406b],cl
   140011dc5:	rex.XB lods al,BYTE PTR ds:[rsi]
   140011dc7:	add    al,0x24
   140011dc9:	test   DWORD PTR [rsi],esi
   140011dcb:	jbe    0x140011e1c
   140011dcd:	mov    dh,0x42
   140011dcf:	cmp    edx,eax
   140011dd1:	lock imul edi,DWORD PTR [rdi+0x730ebb92],0xcf3b6292
   140011ddc:	xor    eax,DWORD PTR [rcx*4+0x44649420]
   140011de3:	std    
   140011de4:	sub    DWORD PTR [rdi],0x3b836e70
   140011dea:	mov    esp,0x801bd01a
   140011def:	mov    ebx,0xe6595e49
   140011df4:	stos   DWORD PTR es:[rdi],eax
   140011df5:	mov    cs,WORD PTR [rdi+0x1cb7d1dd]
   140011dfb:	pop    rdi
   140011dfc:	(bad)  
   140011dfd:	cmc    
   140011dfe:	popf   
   140011dff:	cmc    
   140011e00:	sti    
   140011e01:	jle    0x140011e6d
   140011e03:	outs   dx,DWORD PTR ds:[rsi]
   140011e04:	stc    
   140011e05:	mov    BYTE PTR [rbx-0x50],ah
   140011e08:	add    dl,ah
   140011e0a:	or     BYTE PTR [rdx],dl
   140011e0c:	xchg   ebp,eax
   140011e0d:	test   BYTE PTR es:[rdx],bl
   140011e10:	rex.X or eax,0x8ccd0d4d
   140011e16:	rcl    ah,1
   140011e18:	mov    eax,0x8d43e350
   140011e1d:	xlat   BYTE PTR ds:[rbx]
   140011e1e:	xchg   cl,dl
   140011e20:	xchg   DWORD PTR fs:[rdx+0x38],esi
   140011e24:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011e25:	pop    rax
   140011e26:	fucom  st(4)
   140011e28:	(bad)  
   140011e29:	out    dx,al
   140011e2a:	cs (bad) 
   140011e2c:	(bad)  
   140011e2d:	imul   edx,DWORD PTR [rsi],0xf6465fb7
   140011e33:	ja     0x140011e1d
   140011e35:	mov    dh,0xe0
   140011e37:	(bad)  
   140011e38:	lock lahf 
   140011e3a:	pop    rax
   140011e3b:	cmp    cl,ah
   140011e3d:	rex.WXB jle 0x140011df7
   140011e40:	cmp    dl,BYTE PTR [rbx+0x22b1ffb8]
   140011e46:	loopne 0x140011e2e
   140011e48:	sub    al,al
   140011e4a:	repz cmc 
   140011e4c:	jmp    FWORD PTR [rsi+0x69]
   140011e4f:	mov    cs,WORD PTR [rsi+0x62]
   140011e52:	bndldx (bad),[rbp+rax*1-0x6ff5d2fe]
   140011e5a:	mov    edx,0x30182681
   140011e5f:	sbb    BYTE PTR [rdx-0x69],dh
   140011e62:	(bad)  
   140011e63:	add    bl,BYTE PTR [rip+0xffffffffb6c3bcdb]        # 0xf6c4db44
   140011e69:	xchg   ebx,eax
   140011e6a:	rex.X adc DWORD PTR [rcx],esp
   140011e6d:	iret   
   140011e6e:	or     al,0xec
   140011e70:	jb     0x140011e83
   140011e72:	cmp    r8b,BYTE PTR [rsi]
   140011e75:	and    esp,0xfffffff5
   140011e78:	movabs eax,ds:0x98fe1e10a0141a5b
   140011e81:	ins    BYTE PTR es:[rdi],dx
   140011e82:	mov    edi,0x700e2e93
   140011e87:	(bad)  
   140011e88:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011e89:	add    DWORD PTR [rbp+0xa],edi
   140011e8c:	jo     0x140011ec5
   140011e8e:	enter  0xc87c,0x9f
   140011e92:	cmp    eax,0xc5abe3ff
   140011e97:	xchg   ebx,eax
   140011e98:	ret    
   140011e99:	vmaxpd ymm7,ymm15,YMMWORD PTR [rcx+0x5dfc71be]
   140011ea1:	(bad)  
   140011ea2:	xchg   edi,eax
   140011ea3:	mov    rbx,db0
   140011ea6:	xor    DWORD PTR [rbp+0x774c7114],eax
   140011eac:	or     ah,dl
   140011eae:	and    DWORD PTR [rax],esp
   140011eb0:	movabs eax,ds:0x2c750ca6a6bf416e
   140011eb9:	add    DWORD PTR [rdx],ebp
   140011ebb:	xor    al,0x4e
   140011ebd:	sbb    ah,cl
   140011ebf:	neg    BYTE PTR [rax]
   140011ec1:	sbb    al,0x7b
   140011ec3:	and    eax,DWORD PTR [rcx]
   140011ec5:	(bad)  
   140011ec6:	out    dx,al
   140011ec7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011ec8:	repz sbb al,0xde
   140011ecb:	cmp    cl,BYTE PTR [rcx+0x79]
   140011ece:	in     eax,dx
   140011ecf:	and    dh,BYTE PTR [rbx+rdx*1]
   140011ed2:	xor    BYTE PTR [rsi+rbx*2],dl
   140011ed5:	push   rsp
   140011ed6:	sub    DWORD PTR [rsi+rcx*1],esp
   140011ed9:	(bad)  
   140011eda:	lock movabs ds:0x8c4476af275ccb6d,al
   140011ee4:	and    BYTE PTR [rcx+0x5824bcf6],bh
   140011eea:	mov    dl,BYTE PTR [rax]
   140011eec:	and    r11b,BYTE PTR [rax+0x1401c1d7]
   140011ef3:	(bad)  
   140011ef4:	sahf   
   140011ef5:	scas   eax,DWORD PTR es:[rdi]
   140011ef6:	push   rcx
   140011ef7:	stc    
   140011ef8:	and    eax,0x2140a560
   140011efd:	add    al,0x45
   140011eff:	(bad)  
   140011f00:	push   0xffffffff93319268
   140011f05:	rex.RX rcl DWORD PTR [rax],1
   140011f08:	movabs ds:0x8f62f2e5b07ab884,eax
   140011f11:	push   rbx
   140011f12:	xchg   edi,eax
   140011f13:	movabs al,ds:0x52da02fac5070317
   140011f1c:	gs and cl,BYTE PTR cs:[rax-0x3e]
   140011f21:	adc    cl,al
   140011f23:	(bad)  
   140011f24:	ret    0x8d48
   140011f27:	(bad)  
   140011f28:	or     eax,0xfb28fe87
   140011f2d:	lahf   
   140011f2e:	add    al,0xfe
   140011f30:	and    eax,0xe53b330
   140011f35:	scas   eax,DWORD PTR es:[rdi]
   140011f36:	jmp    0x1881c1c32
   140011f3b:	(bad)  
   140011f3c:	add    esp,ebx
   140011f3e:	jmp    0xff91ea35
   140011f43:	add    BYTE PTR [rsi],al
   140011f45:	outs   dx,DWORD PTR ds:[rsi]
   140011f46:	pop    rsi
   140011f47:	jne    0x140011ee8
   140011f49:	(bad)  
   140011f4a:	lods   al,BYTE PTR ds:[rsi]
   140011f4b:	lods   al,BYTE PTR ds:[rsi]
   140011f4c:	std    
   140011f4d:	xchg   ebx,eax
   140011f4e:	stos   DWORD PTR es:[rdi],eax
   140011f4f:	fwait
   140011f50:	(bad)  
   140011f51:	fidiv  WORD PTR [rbp+0x6047cb7]
   140011f57:	mov    edi,DWORD PTR [rax]
   140011f59:	jecxz  0x140011f18
   140011f5c:	rex.XB mov BYTE PTR [r13-0x2cbcaf02],sil
   140011f63:	(bad)  
   140011f64:	sub    BYTE PTR [rax+0x3334529e],ah
   140011f6a:	jl     0x140011f9f
   140011f6c:	rex.XB (bad) 
   140011f6e:	sbb    dl,ch
   140011f70:	sbb    BYTE PTR [rdi+0x354184e],0x8a
   140011f77:	cmc    
   140011f78:	movabs ds:0x89b69e2fe2eeecec,eax
   140011f81:	(bad)  
   140011f82:	xlat   BYTE PTR ds:[rbx]
   140011f83:	push   rcx
   140011f84:	lods   eax,DWORD PTR ds:[rsi]
   140011f85:	xchg   r9,rax
   140011f87:	mov    dl,0x23
   140011f89:	mov    dh,0xfd
   140011f8b:	(bad)  
   140011f8c:	movabs ds:0xee5b3cb5c4d42378,al
   140011f95:	jg     0x140011f31
   140011f97:	(bad)  
   140011f98:	fwait
   140011f99:	xor    BYTE PTR [rsi+0x3675c7ae],dh
   140011f9f:	or     DWORD PTR [rax-0x32],edi
   140011fa2:	imul   ecx,DWORD PTR [rbx-0x59],0x18672a
   140011fa9:	sub    ch,BYTE PTR [rax+0x50]
   140011fac:	pop    rsp
   140011fad:	nop
   140011fae:	clc    
   140011faf:	mov    eax,0xf809a451
   140011fb4:	push   rax
   140011fb5:	jrcxz  0x140012021
   140011fb7:	sbb    r12d,DWORD PTR [r9]
   140011fba:	test   DWORD PTR [rcx],0xe483ed29
   140011fc0:	fldcw  WORD PTR [rcx-0x73]
   140011fc3:	(bad)  
   140011fc4:	cmp    BYTE PTR [rdi],dl
   140011fc6:	lea    eax,[rax-0x3bd81d7]
   140011fcc:	mov    edx,0x1ded8578
   140011fd1:	adc    DWORD PTR [rbx],esp
   140011fd3:	adc    esp,DWORD PTR [rcx+0x29]
   140011fd6:	test   ch,al
   140011fd8:	add    eax,0xf73cda0b
   140011fdd:	sub    ecx,ebx
   140011fdf:	pop    rdx
   140011fe0:	movabs eax,ds:0x770037a4c3b809cb
   140011fe9:	stos   BYTE PTR es:[rdi],al
   140011fea:	mov    esp,0x56e547fd
   140011fef:	int3   
   140011ff0:	mov    esi,0xbd2c22b5
   140011ff5:	movsxd ebx,ebp
   140011ff7:	(bad)  
   140011ff8:	mov    ecx,0x1ff471b0
   140011ffd:	pop    rbp
   140011ffe:	fnstcw WORD PTR [rsi+rdi*2]
   140012001:	(bad)
   140012006:	pop    rax
   140012007:	sar    BYTE PTR [rcx+0x5410a702],0xd1
   14001200e:	rol    BYTE PTR [rax+0x33],1
   140012011:	rex.XB
   140012012:	fwait
   140012013:	sbb    DWORD PTR [rcx+0x5367e199],esp
   140012019:	jl     0x140012058
   14001201b:	test   ecx,ebx
   14001201d:	adc    al,0x69
   14001201f:	push   0x5c
   140012021:	push   0x4e19a9a0
   140012026:	outs   dx,BYTE PTR ds:[rsi]
   140012027:	push   rdx
   140012028:	ins    BYTE PTR es:[rdi],dx
   140012029:	sbb    al,0x45
   14001202b:	jl     0x140011fee
   14001202d:	(bad)  
   14001202e:	(bad)  
   14001202f:	ins    DWORD PTR es:[rdi],dx
   140012030:	xchg   esi,eax
   140012031:	(bad)  
   140012032:	pushf  
   140012033:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012034:	mov    esp,0x7d9a117a
   140012039:	and    BYTE PTR [rax-0x7ba146f8],dl
   14001203f:	rex.X ret 
   140012041:	add    esp,esp
   140012043:	lahf   
   140012044:	mov    ecx,0x3b95eb1
   140012049:	rcl    dl,1
   14001204b:	xor    ah,0x38
   14001204e:	or     eax,0x20e4c904
   140012053:	sti    
   140012054:	cmp    edx,DWORD PTR [rcx+0x20563b7a]
   14001205a:	cli    
   14001205b:	xlat   BYTE PTR ds:[rbx]
   14001205c:	sub    bh,BYTE PTR es:[rsi+0x5834820b]
   140012063:	cmp    ah,al
   140012065:	push   rax
   140012066:	jne    0x140012038
   140012068:	test   BYTE PTR [rax],bh
   14001206a:	pop    sp
   14001206c:	and    eax,0xb3a40bd9
   140012071:	sbb    BYTE PTR [rax+0x22],ah
   140012074:	add    al,0x25
   140012076:	cmp    BYTE PTR [rax],ah
   140012078:	xor    DWORD PTR [rdx],eax
   14001207a:	movabs ds:0xd4c922390b114a11,eax
   140012083:	loopne 0x140012039
   140012085:	jg     0x140012061
   140012087:	sub    al,0x42
   140012089:	add    BYTE PTR [rdi],ch
   14001208b:	jp     0x140012089
   14001208d:	mov    ebx,0xee41ff39
   140012092:	loopne 0x1400120fe
   140012094:	rex lahf 
   140012096:	add    bl,ah
   140012098:	mov    edx,edx
   14001209a:	sub    bh,BYTE PTR [rsi-0x75aded30]
   1400120a0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400120a1:	stos   DWORD PTR es:[rdi],eax
   1400120a2:	mov    ebp,0x4bcbc727
   1400120a7:	mov    edi,0xfee36378
   1400120ac:	rex.WRXB pop r12
   1400120ae:	pop    rdi
   1400120af:	ds int3 
   1400120b1:	ins    BYTE PTR es:[rdi],dx
   1400120b2:	mov    esp,0x7110e502
   1400120b7:	rcr    DWORD PTR [rdi],1
   1400120b9:	xlat   BYTE PTR ds:[rbx]
   1400120ba:	or     BYTE PTR [rbp+0xc],sil
   1400120be:	sti    
   1400120bf:	fwait
   1400120c0:	(bad)  
   1400120c1:	imul   ebp,DWORD PTR [rdx-0x76],0x7e4b9a66
   1400120c8:	adc    dl,BYTE PTR [rdx+0x6f]
   1400120cb:	cmp    eax,0x65940848
   1400120d0:	rex.RB mov r9d,0x937b1f71
   1400120d6:	or     DWORD PTR [rsi-0x15],ebp
   1400120d9:	je     0x1400120df
   1400120db:	push   QWORD PTR [rsi-0x1e]
   1400120de:	(bad)  
   1400120df:	lahf   
   1400120e0:	cwde   
   1400120e1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400120e2:	rex.RXB iret 
   1400120e4:	fdivrp st(5),st
   1400120e6:	(bad)  
   1400120e7:	icebp  
   1400120e8:	(bad)  
   1400120e9:	jb     0x1400120db
   1400120eb:	(bad)  
   1400120ec:	mov    r14b,0x21
   1400120ef:	mov    edi,0xeb6f63d
   1400120f4:	movabs al,ds:0x77b1b49af3a4e195
   1400120fd:	add    al,0x5
   1400120ff:	or     eax,0x7058bf8
   140012104:	mov    DWORD PTR [rbp-0x2],esi
   140012107:	(bad)  
   140012108:	call   0x130420c9a
   14001210d:	cs push rsi
   14001210f:	xor    dh,BYTE PTR [rdx]
   140012111:	imul   ecx,DWORD PTR [rax-0x4f6ffbb2],0xe1784e84
   14001211b:	mov    WORD PTR [rbp-0x18],es
   14001211e:	shl    BYTE PTR [rcx-0x5c],cl
   140012121:	pop    rsi
   140012122:	or     BYTE PTR [rsi+0x4],0x20
   140012126:	(bad)  
   140012127:	sub    DWORD PTR [rdx],esp
   140012129:	mov    esi,0x5212a8de
   14001212e:	xor    al,0xa0
   140012130:	(bad)  
   140012131:	and    esp,DWORD PTR [rax-0x60d99e36]
   140012137:	add    bh,dh
   140012139:	test   DWORD PTR [rbp+0x7],edi
   14001213c:	or     eax,0xd01a5877
   140012141:	sbb    eax,DWORD PTR [rax-0x30a5bac5]
   140012147:	jb     0x140012179
   140012149:	in     al,0xf7
   14001214b:	mov    edx,edx
   14001214d:	mov    WORD PTR [rsi+0x1abe4c1c],ds
   140012153:	(bad)  
   140012154:	ss jg  0x14001213d
   140012157:	(bad)  
   140012158:	cli    
   140012159:	std    
   14001215a:	rex.RXB outs dx,DWORD PTR ds:[rsi]
   14001215c:	sub    al,0x1e
   14001215e:	and    cl,BYTE PTR [rdi+rdx*4+0x738857c0]
   140012165:	xor    DWORD PTR [rcx],edi
   140012167:	(bad)  
   140012168:	fcom   DWORD PTR [rcx-0x1d]
   14001216b:	(bad)  
   14001216c:	sbb    ch,BYTE PTR [rbp+0x66]
   14001216f:	cdqe   
   140012171:	loope  0x1400121d9
   140012173:	xor    esp,DWORD PTR [rsp+rdx*8]
   140012176:	xor    DWORD PTR [rdi+0x56],edi
   140012179:	(bad)
   14001217c:	rcl    DWORD PTR [rsp+rax*4+0x62],1
   140012180:	mov    dh,0x4f
   140012182:	jns    0x140012170
   140012184:	and    esp,ebx
   140012186:	jo     0x140012154
   140012188:	lea    esi,[rbx+0x2f]
   14001218b:	mov    cl,0x7a
   14001218d:	icebp  
   14001218e:	add    eax,0x43cf9786
   140012193:	mov    ebp,0x45dd644b
   140012198:	rex.RB mov r9b,0xa5
   14001219b:	imul   DWORD PTR [rdi+rbp*8]
   14001219e:	xlat   BYTE PTR ds:[rbx]
   14001219f:	pop    rsp
   1400121a0:	(bad)  
   1400121a1:	rex.WXB
   1400121a2:	rex.RXB sbb r9b,BYTE PTR [r15]
   1400121a5:	mov    ah,0x83
   1400121a7:	(bad)  
   1400121a8:	shl    esi,cl
   1400121aa:	clc    
   1400121ab:	in     eax,dx
   1400121ac:	jrcxz  0x1400121c4
   1400121ae:	add    al,0x9c
   1400121b0:	(bad)  
   1400121b1:	sbb    esi,ebx
   1400121b3:	movabs ds:0x49964b175007007a,al
   1400121bc:	out    0x54,eax
   1400121be:	and    cl,BYTE PTR [rdi-0x40]
   1400121c1:	sub    al,BYTE PTR [rdi]
   1400121c3:	xchg   ecx,eax
   1400121c4:	jle    0x14001222a
   1400121c6:	mov    ebp,0x40067301
   1400121cb:	or     al,0x14
   1400121cd:	(bad)  
   1400121ce:	sub    al,BYTE PTR [rcx]
   1400121d0:	sbb    eax,0x6bbb4403
   1400121d5:	(bad)  
   1400121d6:	push   rsi
   1400121d7:	jl     0x140012189
   1400121d9:	mov    ebx,DWORD PTR [rbp+0x307612aa]
   1400121df:	or     BYTE PTR [rax],dh
   1400121e1:	(bad)  
   1400121e2:	cli    
   1400121e3:	cmp    eax,0x1e2f2c3f
   1400121e8:	stc    
   1400121e9:	jne    0x140012268
   1400121eb:	loopne 0x140012239
   1400121ed:	out    0xc0,eax
   1400121ef:	sar    DWORD PTR [rbx+0x1bd2f75e],cl
   1400121f5:	adc    bh,0xab
   1400121f8:	int3   
   1400121f9:	xchg   DWORD PTR [rdx+0x5df8f5d],edx
   1400121ff:	cli    
   140012200:	mov    dh,BYTE PTR [rdi+0x1def3b96]
   140012206:	mov    es,WORD PTR [rsi-0x2908581]
   14001220c:	(bad)  
   14001220d:	jae    0x1400121e6
   14001220f:	push   rsi
   140012210:	mov    ?,WORD PTR [rcx+0x3346b0bf]
   140012216:	pop    rsp
   140012217:	(bad)  
   140012218:	stc    
   140012219:	xchg   edx,eax
   14001221a:	rex.X sbb al,0x41
   14001221d:	xchg   ebp,eax
   14001221e:	xchg   BYTE PTR [rax-0x2a63b2f5],al
   140012224:	push   rdi
   140012225:	iret   
   140012226:	sub    BYTE PTR [rdx+0x70ccd219],bl
   14001222c:	int    0x2c
   14001222e:	ss (bad) 
   140012230:	push   0xffffffffe389ae6c
   140012235:	mov    esi,0xe72b0ee3
   14001223a:	sub    BYTE PTR [rsi],dh
   14001223c:	(bad)  
   14001223d:	mov    bl,0x3f
   14001223f:	cdq    
   140012240:	rcr    BYTE PTR [rsp+rdi*1-0x3d],1
   140012244:	retf   0x69d6
   140012247:	fmul   st(5),st
   140012249:	imul   esi,DWORD PTR [rcx-0x19996f9e],0x29
   140012250:	(bad)  
   140012251:	(bad)  
   140012252:	test   eax,0xf92d901d
   140012257:	sbb    r9,QWORD PTR [r14+0x3b]
   14001225b:	rex.WB sub al,0xbf
   14001225e:	adc    al,BYTE PTR ss:[rax+0x665ce156]
   140012265:	add    al,0xd2
   140012267:	mov    DWORD PTR [rax],eax
   140012269:	in     al,dx
   14001226a:	jge    0x140012235
   14001226c:	and    BYTE PTR [rdi+rbp*4],ah
   14001226f:	outs   dx,DWORD PTR ds:[rsi]
   140012270:	mov    edi,0x23338035
   140012275:	movabs al,ds:0x73400c268ae7d922
   14001227e:	adc    al,0xa0
   140012280:	enter  0xd5fc,0x4b
   140012284:	rol    DWORD PTR [rbp-0x5659fe8b],1
   14001228a:	ror    esi,0xb0
   14001228d:	mov    BYTE PTR [rsi+0x22],al
   140012290:	retf   
   140012291:	push   rax
   140012292:	push   rbx
   140012293:	lods   al,BYTE PTR ds:[rsi]
   140012294:	(bad)  
   140012295:	rex.X mov ds,WORD PTR [rsi+0x1a]
   140012299:	cmp    esp,DWORD PTR [rdi+0x11]
   14001229c:	leave  
   14001229d:	movsxd edx,edx
   14001229f:	rex.WX loope 0x140012263
   1400122a2:	ja     0x140012317
   1400122a4:	cmc    
   1400122a5:	fnstsw WORD PTR [rdi-0x1698fc32]
   1400122ab:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400122ac:	add    DWORD PTR [rdi-0x7b889407],edi
   1400122b2:	adc    eax,ebp
   1400122b4:	or     eax,0x6e4debc0
   1400122b9:	stos   DWORD PTR es:[rdi],eax
   1400122ba:	mov    ?,WORD PTR [rbx+0x9]
   1400122bd:	add    BYTE PTR [rax],al
   1400122bf:	and    BYTE PTR [rax],al
   1400122c1:	rex.WB
   1400122c2:	rex.R
   1400122c3:	push   r12
   1400122c5:	in     eax,dx
   1400122c6:	jmp    0x140f0ad86
   1400122cb:	push   QWORD PTR [rsi+0x47bbc6e2]
   1400122d1:	push   rbp
   1400122d2:	icebp  
   1400122d3:	xor    DWORD PTR [rbx-0x45a03c1b],0xffffffbe
   1400122da:	jp     0x140012284
   1400122dc:	mov    edx,0x64c9b8b1
   1400122e1:	mov    ah,0x82
   1400122e3:	push   rsp
   1400122e4:	and    ebx,DWORD PTR [rdi+rbp*1+0x8bd44f0]
   1400122eb:	sbb    al,BYTE PTR [rax+0x1b]
   1400122ee:	rex.X cmp eax,0xaf834243
   1400122f4:	(bad)  
   1400122f5:	cmp    BYTE PTR [rbx-0x14],bh
   1400122f8:	rex.X or DWORD PTR [rbx],0xffffffb5
   1400122fc:	xchg   ecx,eax
   1400122fd:	push   0xffffffffca13af92
   140012302:	fld    DWORD PTR [rdi+rsi*2]
   140012305:	in     al,0x41
   140012307:	cld    
   140012308:	loop   0x14001231c
   14001230a:	push   rdi
   14001230b:	mov    dh,0x2e
   14001230d:	mov    al,0x7c
   14001230f:	icebp  
   140012310:	add    eax,0x22ce9786
   140012315:	rcr    DWORD PTR [rbx+0x26dec128],cl
   14001231b:	cmp    BYTE PTR [rdx+rax*1-0x4940454f],dl
   140012322:	mov    eax,esi
   140012324:	pushf  
   140012325:	(bad)  
   140012326:	outs   dx,DWORD PTR ds:[rsi]
   140012327:	jge    0x140012322
   140012329:	pushf  
   14001232a:	xchg   edx,eax
   14001232b:	(bad)  
   14001232c:	cmp    al,0xc0
   14001232e:	cmp    ebx,eax
   140012330:	(bad)  
   140012331:	fiadd  DWORD PTR [rsi+0x1c]
   140012334:	sar    BYTE PTR [rdx+0x0],0x4c
   140012338:	jmp    0xf99b1a12
   14001233d:	add    BYTE PTR [rcx+0x681ae02a],dh
   140012343:	(bad)  
   140012344:	sar    BYTE PTR [rbx+rcx*2],0x17
   140012348:	jl     0x14001235a
   14001234a:	rex.WXB add rax,0xffffffff972406c8
   140012350:	lock jae 0x14001231b
   140012353:	adc    DWORD PTR [rbx+0x7d],eax
   140012356:	adc    eax,0xe5c05c41
   14001235b:	(bad)
   14001235e:	loopne 0x140012377
   140012360:	xor    dl,BYTE PTR [rbx-0x13405f28]
   140012366:	shl    BYTE PTR [rip+0xffffffff9e421f21],cl        # 0xde43428d
   14001236c:	adc    esi,DWORD PTR [rax-0x68]
   14001236f:	leave  
   140012370:	(bad)  
   140012371:	mov    eax,0xde80d343
   140012376:	add    BYTE PTR [rsi+rbx*1-0xb56a1c],bh
   14001237d:	or     al,BYTE PTR [rbp-0x41464781]
   140012383:	mov    dl,0xc9
   140012385:	in     al,0xd1
   140012387:	retf   0x77eb
   14001238a:	xor    BYTE PTR [rsi-0x8],bl
   14001238d:	js     0x140012342
   14001238f:	mov    eax,0xd2ceecf1
   140012394:	(bad)  
   140012395:	js     0x1400123fe
   140012397:	(bad)  
   140012398:	(bad)  
   140012399:	std    
   14001239a:	ror    DWORD PTR [rdx],1
   14001239c:	mov    bl,0xd1
   14001239e:	adc    dl,BYTE PTR [rdx+0x54]
   1400123a1:	loopne 0x1400123ad
   1400123a3:	or     edi,ecx
   1400123a5:	movabs ds:0x299a46a6d0684be2,eax
   1400123ae:	mov    esi,0x37df9e8e
   1400123b3:	or     eax,0x7116612
   1400123b8:	mov    al,0xf0
   1400123ba:	pop    rdi
   1400123bb:	mov    ah,ch
   1400123bd:	mov    ebp,0x4f3bc146
   1400123c2:	jne    0x1400123a8
   1400123c4:	add    DWORD PTR [rsi-0x3a26654d],esp
   1400123ca:	xor    ebp,DWORD PTR [rsi+rbx*2-0x1c80fe88]
   1400123d1:	xor    bl,dl
   1400123d3:	int3   
   1400123d4:	mov    ch,ch
   1400123d6:	jbe    0x1400123c9
   1400123d8:	jo     0x140012457
   1400123da:	retf   0x21fd
   1400123dd:	xlat   BYTE PTR ds:[rbx]
   1400123de:	(bad)  
   1400123df:	rcr    esp,cl
   1400123e1:	jg     0x140012394
   1400123e3:	jl     0x1400123be
   1400123e5:	rol    DWORD PTR [rdx+0x7e79f37c],1
   1400123eb:	rol    BYTE PTR [rdi-0x13],cl
   1400123ee:	nop
   1400123ef:	(bad)  
   1400123f0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400123f1:	xor    eax,0xd2c6d200
   1400123f6:	shl    DWORD PTR [rbx-0x32cfefb9],1
   1400123fc:	add    eax,0x609489a0
   140012401:	xlat   BYTE PTR ds:[rbx]
   140012402:	(bad)  
   140012403:	movabs ds:0xf8d1a8380d224cb,eax
   14001240c:	mov    eax,DWORD PTR [rax]
   14001240e:	sub    BYTE PTR [rdi+0x70],0x75
   140012412:	and    esp,DWORD PTR [rip+0xffffffff81533a58]        # 0xc1545e70
   140012418:	shl    BYTE PTR [rcx+0x77],cl
   14001241b:	and    edx,DWORD PTR [rax+rcx*1+0x58fa677]
   140012422:	retf   
   140012423:	(bad)  
   140012424:	nop
   140012425:	fs add al,0x94
   140012428:	xchg   ecx,eax
   140012429:	(bad)  
   14001242a:	(bad)  
   14001242b:	cli    
   14001242c:	xchg   edx,eax
   14001242d:	pushf  
   14001242e:	(bad)  
   140012430:	or     eax,0xb3ae763d
   140012435:	xchg   DWORD PTR [rsi],edi
   140012437:	add    ch,al
   140012439:	in     eax,0x5b
   14001243b:	nop
   14001243c:	jns    0x14001247e
   14001243e:	scas   eax,DWORD PTR es:[rdi]
   14001243f:	sbb    ebx,esi
   140012441:	sti    
   140012442:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012443:	addr32 (bad) 
   140012445:	rex.WRXB lods al,BYTE PTR ds:[rsi]
   140012447:	xor    DWORD PTR [rbp-0x32],edi
   14001244a:	movabs ds:0x785e337b78a295ef,eax
   140012453:	je     0x140012407
   140012455:	mov    eax,0xd69776ee
   14001245a:	fstp   DWORD PTR [rdi+0x58]
   14001245d:	gs jg  0x140012418
   140012460:	(bad)  
   140012461:	ins    BYTE PTR es:[rdi],dx
   140012462:	mov    eax,0x78472844
   140012467:	pop    rdi
   140012468:	loop   0x14001248f
   14001246a:	mov    dh,0xdc
   14001246c:	add    al,0x2
   14001246e:	(bad)  
   140012470:	hlt    
   140012471:	sti    
   140012472:	jp     0x1400123f6
   140012474:	fwait
   140012475:	rex.WRB movabs ds:0xfaf626d39f32b7c7,al
   14001247f:	xchg   ebx,eax
   140012480:	cli    
   140012481:	jmp    0x1400124e6
   140012483:	add    esp,ebx
   140012485:	(bad)  
   140012486:	xor    eax,0xf8c3f0e1
   14001248b:	in     eax,0x35
   14001248d:	outs   dx,DWORD PTR cs:[rsi]
   14001248f:	outs   dx,DWORD PTR ds:[rsi]
   140012490:	mov    bl,0x70
   140012492:	icebp  
   140012493:	adc    al,0xe3
   140012495:	rex.WXB out 0x90,eax
   140012498:	leave  
   140012499:	pop    rsi
   14001249a:	hlt    
   14001249b:	(bad)  
   14001249c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001249d:	rex.WR movabs ds:0x30b7c618d0afd3b1,al
   1400124a7:	js     0x1400124f4
   1400124a9:	in     eax,0xcd
   1400124ab:	jp     0x140012484
   1400124ad:	repnz test DWORD PTR [rdx],edi
   1400124b0:	retf   0xc9df
   1400124b3:	sti    
   1400124b4:	push   rbx
   1400124b5:	test   eax,0xbd77c4d0
   1400124ba:	mov    ch,0x49
   1400124bc:	retf   0x63bf
   1400124bf:	mov    bl,0x8f
   1400124c1:	fs push rax
   1400124c3:	push   rax
   1400124c4:	test   BYTE PTR [rax+0x18],ch
   1400124c7:	push   rax
   1400124c8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400124c9:	push   rbx
   1400124ca:	(bad)  
   1400124cb:	mov    esi,ds
   1400124cd:	mov    ecx,0xad2ae1f5
   1400124d2:	sbb    eax,0x29d2bb50
   1400124d7:	or     al,al
   1400124d9:	xchg   DWORD PTR [rsp+rax*1-0x3c],ebp
   1400124dd:	(bad)
   1400124e0:	out    dx,al
   1400124e1:	rex.WRX movabs ds:0xb52517749296092d,rax
   1400124eb:	ja     0x1400124f5
   1400124ed:	push   rax
   1400124ee:	movabs al,ds:0x1c1bf83e17ae3f47
   1400124f7:	sti    
   1400124f8:	or     eax,0xa034b0ee
   1400124fd:	(bad)  
   1400124fe:	add    BYTE PTR [rdi-0x75291b5],dh
   140012504:	(bad)
   140012507:	xchg   BYTE PTR [rdi+0x18efddf8],cl
   14001250d:	int    0xf6
   14001250f:	mov    esi,0x61fa57df
   140012514:	lods   eax,DWORD PTR ds:[rsi]
   140012515:	(bad)  
   140012516:	out    dx,eax
   140012517:	fwait
   140012518:	(bad)  
   140012519:	(bad)  
   14001251a:	cwde   
   14001251b:	lea    edx,[rdi-0x4f50e027]
   140012521:	cmp    ebx,DWORD PTR [rdx+0x66]
   140012524:	xor    bl,BYTE PTR [rdx-0x5a]
   140012527:	(bad)  
   140012528:	mov    WORD PTR [rcx],cs
   14001252a:	in     eax,0x10
   14001252c:	out    0x7,eax
   14001252e:	js     0x14001251f
   140012530:	jrcxz  0x14001257f
   140012532:	scas   al,BYTE PTR es:[rdi]
   140012533:	add    DWORD PTR [rsi+0x2d],0x5c1a6fd7
   14001253a:	cwde   
   14001253b:	loope  0x140012528
   14001253d:	sub    DWORD PTR [rdx],esi
   14001253f:	fwait
   140012540:	(bad)  
   140012541:	pop    rdx
   140012542:	jns    0x1400124ec
   140012544:	jae    0x14001253e
   140012546:	pop    rdi
   140012547:	pop    rax
   140012548:	fld    TBYTE PTR [rdi+0x439ecb68]
   14001254e:	add    eax,ecx
   140012550:	adc    eax,0x601e4794
   140012555:	push   rsi
   140012556:	(bad)  
   140012557:	(bad)  
   140012558:	xchg   edi,eax
   140012559:	(bad)  
   14001255a:	jb     0x140012548
   14001255c:	ret    0x8a49
   14001255f:	jmp    0x14001253c
   140012561:	movabs al,ds:0x4a042b739b1a18d3
   14001256a:	adc    eax,0xfd4b470a
   14001256f:	adc    eax,0x451d1872
   140012574:	out    0xf0,al
   140012576:	xor    ah,0x74
   140012579:	(bad)  
   14001257a:	add    BYTE PTR [rsi-0x74],ah
   14001257d:	out    0x1f,al
   140012580:	ja     0x140012517
   140012582:	push   rbp
   140012583:	xor    BYTE PTR [rbp-0x4a],ah
   140012586:	sar    BYTE PTR [rsi],1
   140012588:	xchg   edx,eax
   140012589:	jl     0x140012553
   14001258b:	mov    bl,0x1
   14001258d:	and    bh,bh
   14001258f:	fild   WORD PTR [rsi-0x74]
   140012592:	sbb    BYTE PTR [rbx+0x30],dl
   140012595:	xchg   edx,eax
   140012596:	adc    DWORD PTR [rdx],0x81022021
   14001259c:	jmp    0x1900217a1
   1400125a1:	(bad)  
   1400125a2:	cdq    
   1400125a3:	sbb    BYTE PTR [rcx+riz*8-0x41],ah
   1400125a7:	retf   
   1400125a8:	out    0x80,eax
   1400125aa:	sbb    eax,0x581de447
   1400125af:	push   rdi
   1400125b0:	xor    cl,BYTE PTR [rsi]
   1400125b2:	and    DWORD PTR [rax-0x63],ebx
   1400125b5:	rex.R rcr spl,cl
   1400125b8:	mov    cl,0xf8
   1400125ba:	mov    edi,0xb9ecc43b
   1400125bf:	mov    cl,0x36
   1400125c1:	(bad)  
   1400125c2:	jl     0x1400125db
   1400125c4:	jg     0x14001260d
   1400125c6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400125c7:	add    DWORD PTR [rbp-0x348907ff],edi
   1400125cd:	jl     0x140012587
   1400125cf:	lahf   
   1400125d0:	mov    ebp,0x79bc503d
   1400125d5:	mov    ebp,0x3d42f4fc
   1400125da:	sti    
   1400125db:	xor    DWORD PTR [rdi],esp
   1400125dd:	movabs ds:0xccc60fec8ac5348f,eax
   1400125e6:	(bad)  
   1400125e7:	movsxd esp,DWORD PTR [rsi+0x60c998d5]
   1400125ed:	int3   
   1400125ee:	je     0x1400125a0
   1400125f0:	cmp    rax,0x729a45c
   1400125f6:	js     0x14001264f
   1400125f8:	loopne 0x140012676
   1400125fa:	add    edx,esp
   1400125fc:	(bad)  
   1400125fd:	fldcw  WORD PTR [rax+rbp*1]
   140012600:	mov    ch,0x2a
   140012602:	test   BYTE PTR [rdx],bh
   140012604:	adc    bh,BYTE PTR [rcx-0x16]
   140012607:	test   al,0xfc
   140012609:	scas   al,BYTE PTR es:[rdi]
   14001260a:	sahf   
   14001260b:	loop   0x14001264f
   14001260d:	add    al,0xfc
   14001260f:	jl     0x140012624
   140012611:	jae    0x140012611
   140012613:	and    dl,ah
   140012615:	(bad)  
   140012616:	neg    DWORD PTR [rdi-0x47c9c06c]
   14001261c:	push   0xffffffffc7eb09a8
   140012621:	sbb    DWORD PTR [rsi],ebp
   140012623:	scas   eax,DWORD PTR es:[rdi]
   140012624:	mov    bl,0x7d
   140012626:	in     eax,dx
   140012627:	sub    cl,BYTE PTR [rbx]
   140012629:	pop    rbx
   14001262a:	pop    rdi
   14001262b:	addr32 icebp 
   14001262d:	loop   0x14001267a
   14001262f:	enter  0x4ede,0x5e
   140012633:	in     al,dx
   140012634:	and    esi,DWORD PTR [rcx]
   140012636:	in     al,0xd2
   140012638:	pop    rdx
   140012639:	jg     0x140012654
   14001263b:	cld    
   14001263c:	retf   
   14001263d:	retf   0xce3
   140012640:	rex.WB (bad) 
   140012642:	and    eax,0xefabc4be
   140012647:	and    ch,ch
   140012649:	faddp  st(5),st
   14001264b:	xchg   esi,eax
   14001264c:	fild   WORD PTR [rdx+rax*2-0x77]
   140012650:	sahf   
   140012651:	push   rdi
   140012652:	repz (bad) 
   140012654:	rex.WB jmp 0xc830cf2d
   14001265a:	(bad)  
   14001265b:	xor    eax,0x22443428
   140012660:	push   rax
   140012661:	push   rax
   140012662:	rex.X movsxd eax,esi
   140012665:	ret    
   140012666:	(bad)  
   140012667:	jno    0x140012670
   140012669:	push   0x64
   14001266b:	movabs al,ds:0xd68deb4b45113a10
   140012674:	test   al,0x6d
   140012676:	out    dx,al
   140012677:	leave  
   140012678:	add    BYTE PTR [rax-0x4763fdab],ah
   14001267e:	js     0x14001269c
   140012680:	(bad)  
   140012681:	jne    0x14001269b
   140012683:	fcmovb st,st(1)
   140012685:	pop    rcx
   140012686:	clc    
   140012687:	adc    DWORD PTR [rbp+0x5f],ecx
   14001268a:	data16 sub BYTE PTR [rax+riz*1+0x10],ah
   14001268f:	(bad)  
   140012690:	rex.W
   140012691:	repz mov esi,0x87cbc8af
   140012697:	out    dx,eax
   140012698:	mov    ah,0x6a
   14001269a:	rex outs dx,DWORD PTR ds:[rsi]
   14001269c:	add    BYTE PTR [rsi-0x50b50d63],bh
   1400126a2:	pop    rdi
   1400126a3:	add    ch,al
   1400126a5:	icebp  
   1400126a6:	xchg   DWORD PTR [rdi-0x44],ecx
   1400126a9:	jge    0x140012700
   1400126ab:	data16 jg 0x1400126f4
   1400126ae:	xor    al,0x7c
   1400126b0:	(bad)  
   1400126b1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400126b2:	fld    TBYTE PTR [rax]
   1400126b4:	push   0x5f
   1400126b6:	push   rcx
   1400126b7:	(bad)  
   1400126b8:	add    esp,DWORD PTR [rsi+0x55]
   1400126bb:	rex.RB jrcxz 0x1400126c5
   1400126be:	int3   
   1400126bf:	stos   BYTE PTR es:[rdi],al
   1400126c0:	adc    DWORD PTR [rcx+0x4031411a],esp
   1400126c6:	mov    dl,BYTE PTR [rdx]
   1400126c8:	(bad)  
   1400126c9:	jno    0x140012654
   1400126cb:	out    dx,al
   1400126cc:	mov    eax,0x4da28e22
   1400126d1:	mov    bpl,0xb6
   1400126d4:	or     DWORD PTR [rsi],edi
   1400126d6:	rcr    DWORD PTR [rax-0x7d93019],cl
   1400126dc:	mov    edx,0xae1987c6
   1400126e1:	mov    fs,ecx
   1400126e3:	mov    edi,0xad0a6a6f
   1400126e8:	jno    0x14001270b
   1400126ea:	cwde   
   1400126eb:	repnz rex.RXB (bad) 
   1400126ee:	in     eax,0x0
   1400126f0:	(bad)  
   1400126f1:	shr    BYTE PTR [rax+rbx*1+0x423ff720],0xd
   1400126f9:	int3   
   1400126fa:	cs popf 
   1400126fc:	in     eax,0xc8
   1400126fe:	test   DWORD PTR [rdi],edx
   140012700:	lock xlat BYTE PTR ds:[rbx]
   140012702:	(bad)  
   140012703:	movabs eax,ds:0xdcdfe04b06174261
   14001270c:	enter  0x316f,0x87
   140012710:	(bad)  
   140012711:	ret    0x7b7b
   140012714:	ja     0x1400126cd
   140012716:	in     eax,dx
   140012717:	(bad)  
   140012718:	jns    0x140012713
   14001271a:	clc    
   14001271b:	cmp    al,0xb1
   14001271d:	(bad)  
   14001271e:	out    dx,eax
   14001271f:	and    eax,0x865ce33b
   140012724:	movabs ds:0x773e64b5b7b2168d,eax
   14001272d:	stc    
   14001272e:	sub    DWORD PTR [rcx+0x22e22022],edi
   140012734:	push   0x1f
   140012736:	mov    al,0xf4
   140012738:	loopne 0x14001277a
   14001273a:	repnz (bad) 
   14001273c:	(bad)  
   14001273d:	mov    bh,0xdb
   14001273f:	jae    0x140012777
   140012741:	(bad)  
   140012742:	rcl    BYTE PTR [rdx-0x73],0x8
   140012746:	and    eax,DWORD PTR [rsp+rbx*1+0x30d91805]
   14001274d:	rdpmc  
   14001274f:	lea    eax,[rbp+0x8]
   140012752:	sub    esi,DWORD PTR [rcx]
   140012754:	or     ch,cl
   140012756:	lahf   
   140012757:	int3   
   140012758:	(bad)  
   140012759:	sub    cl,ah
   14001275b:	(bad)  
   14001275c:	mov    ebx,0x3bcefab8
   140012761:	lods   eax,DWORD PTR ds:[rsi]
   140012762:	sbb    dl,al
   140012764:	sbb    eax,DWORD PTR [rax-0x7d236891]
   14001276a:	mov    dl,0x5b
   14001276c:	cs scas eax,DWORD PTR es:[rdi]
   14001276e:	(bad)  
   14001276f:	xlat   BYTE PTR ds:[rbx]
   140012770:	(bad)  
   140012771:	jnp    0x140012767
   140012773:	mov    edi,0xe3fea170
   140012778:	xlat   BYTE PTR ds:[rbx]
   140012779:	rcl    DWORD PTR [rip+0xffffffff97da9e71],1        # 0xd7dbc5f0
   14001277f:	add    al,0x5f
   140012781:	adc    cl,BYTE PTR [rdx+0x704a2d12]
   140012787:	and    eax,0x57389452
   14001278c:	and    BYTE PTR [rsi],ch
   14001278e:	ss icebp 
   140012790:	sub    BYTE PTR [rsi-0x489a4e60],cl
   140012796:	ins    DWORD PTR es:[rdi],dx
   140012797:	out    0x89,al
   140012799:	retf   0x67ef
   14001279c:	adc    edi,DWORD PTR [rbp+rdx*4-0x3ccca308]
   1400127a3:	(bad)  
   1400127a4:	push   rbx
   1400127a5:	or     dh,bl
   1400127a7:	cli    
   1400127a8:	mov    esi,0x87f9ab1
   1400127ad:	(bad)  
   1400127ae:	rex.WRX
   1400127af:	rex.RXB in al,0x5f
   1400127b2:	nop
   1400127b3:	sbb    BYTE PTR [rip+0xffffffffb4609c6c],dh        # 0xf461c425
   1400127b9:	jp     0x140012743
   1400127bb:	imul   edx,DWORD PTR [rdi-0x51],0x30
   1400127bf:	fidivr WORD PTR [rdx]
   1400127c1:	leave  
   1400127c2:	ret    0x4bf6
   1400127c5:	enter  0xdde,0xa0
   1400127c9:	mov    cl,0xe5
   1400127cb:	mov    dl,0xec
   1400127cd:	data16 (bad) 
   1400127cf:	movabs eax,ds:0x464ff79b3618d14
   1400127d8:	push   rdx
   1400127d9:	sar    DWORD PTR [rbx*4-0x6c02f198],1
   1400127e0:	xchg   ecx,eax
   1400127e1:	jo     0x1400127ec
   1400127e3:	add    edx,eax
   1400127e5:	mov    WORD PTR [rbx],ss
   1400127e7:	je     0x1400127c2
   1400127e9:	sbb    BYTE PTR [rip+0xffffffffa3a75ee2],0x4f        # 0xe3a886d2
   1400127f0:	out    0x15,al
   1400127f2:	add    BYTE PTR ds:[rax],r14b
   1400127f6:	test   BYTE PTR [rax],al
   1400127f8:	rex.WRB fdivr QWORD PTR [r8-0x7d3a76c8]
   1400127ff:	pop    rsp
   140012800:	cmp    DWORD PTR [rax-0x22],esp
   140012803:	(bad)  
   140012804:	fidiv  DWORD PTR [rsi]
   140012806:	popf   
   140012807:	rex.W int3 
   140012809:	jmp    0x140012828
   14001280b:	and    al,0x7a
   14001280d:	mov    al,0x78
   14001280f:	loop   0x1400127b3
   140012811:	movabs eax,ds:0x8b089e3e426ea3b5
   14001281a:	push   0xffffffffaa53ffce
   14001281f:	adc    al,0x37
   140012821:	sbb    edi,DWORD PTR [rbx]
   140012823:	add    eax,0x423e6a43
   140012828:	cmp    DWORD PTR [rdx-0xfd306d],esp
   14001282e:	or     esi,DWORD PTR [rdi+0x50]
   140012831:	xor    eax,0xdf0037a0
   140012836:	(bad)  
   140012837:	jns    0x14001285e
   140012839:	gs mov bh,0xd8
   14001283c:	jl     0x140012834
   14001283e:	and    ecx,DWORD PTR [rdi-0x407a7a45]
   140012844:	mov    gs,eax
   140012846:	(bad)  
   140012847:	ins    BYTE PTR es:[rdi],dx
   140012848:	movabs ds:0xf2c69585a8f911e,al
   140012851:	enter  0xc443,0xb5
   140012855:	popf   
   140012856:	mov    DWORD PTR es:[rbx+rdx*1+0x13509a1a],esi
   14001285e:	(bad)  
   14001285f:	sbb    ch,BYTE PTR [rcx+0x66]
   140012862:	cmp    rax,0xfffffffff827a8a5
   140012868:	jp     0x1400127f0
   14001286a:	imul   esp,DWORD PTR [rsi-0x85d948],0xffffffa2
   140012871:	mov    DWORD PTR [rdi],edi
   140012873:	mov    cl,0xe4
   140012875:	(bad)  
   140012876:	sti    
   140012877:	(bad)  
   140012878:	jae    0x140012867
   14001287a:	fbld   TBYTE PTR [rdx]
   14001287c:	add    BYTE PTR [rbp+0x45],dl
   14001287f:	(bad)
   140012882:	cmp    eax,0x7f60134c
   140012887:	sti    
   140012888:	sub    al,0xc7
   14001288a:	(bad)  
   14001288b:	pushf  
   14001288c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001288d:	mov    esp,0x3f4d6dba
   140012892:	xchg   esi,eax
   140012893:	and    bl,BYTE PTR [rax-0x27]
   140012896:	stos   DWORD PTR es:[rdi],eax
   140012897:	add    BYTE PTR [rdx+rbp*4-0x759701cb],bh
   14001289e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001289f:	pop    rbx
   1400128a0:	rex (bad) 
   1400128a2:	(bad)  
   1400128a3:	fld    QWORD PTR [rsi-0xc5959c5]
   1400128a9:	mov    WORD PTR [rax-0x2e],es
   1400128ac:	or     ebx,DWORD PTR [rip+0x2fd340dc]        # 0x16fd4698e
   1400128b2:	int    0xf4
   1400128b4:	(bad)  
   1400128b5:	lods   al,BYTE PTR ds:[rsi]
   1400128b6:	lods   al,BYTE PTR ds:[rsi]
   1400128b7:	xchg   edi,eax
   1400128b8:	xlat   BYTE PTR ds:[rbx]
   1400128b9:	or     BYTE PTR [rcx-0x1b7cb20b],cl
   1400128bf:	jrcxz  0x1400128a4
   1400128c1:	(bad)  
   1400128c2:	rcr    BYTE PTR [rbp+0xc],0x4
   1400128c6:	sar    BYTE PTR [rdx-0x618d1bff],cl
   1400128cc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400128cd:	sub    eax,0xffffff8a
   1400128d0:	rex.WRB add rax,0x54f21756
   1400128d6:	movabs al,ds:0xf2dcd0cf0c08bd34
   1400128df:	xchg   esp,eax
   1400128e0:	lea    edx,[rsi-0x42]
   1400128e3:	adc    cl,dh
   1400128e5:	rex.WRB shl QWORD PTR [r8],1
   1400128e8:	mov    BYTE PTR [rax],dh
   1400128ea:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400128eb:	jns    0x1400128dc
   1400128ed:	(bad)  
   1400128ee:	cmc    
   1400128ef:	fadd   st(6),st
   1400128f1:	(bad)  
   1400128f2:	in     eax,0xce
   1400128f4:	test   eax,0xe006f406
   1400128f9:	mov    ch,0x96
   1400128fb:	stc    
   1400128fc:	xchg   ecx,eax
   1400128fd:	pop    rsp
   1400128fe:	(bad)  
   1400128ff:	sub    BYTE PTR [rdi],bl
   140012901:	std    
   140012902:	hlt    
   140012903:	(bad)  
   140012904:	(bad)  
   140012905:	fimul  DWORD PTR [rdi+rdx*4]
   140012908:	jle    0x14001292f
   14001290a:	test   al,0x9e
   14001290c:	push   rax
   14001290d:	mov    ebx,0x896f9281
   140012912:	xchg   ebx,eax
   140012913:	addr32 pop rdx
   140012915:	gs xor bh,al
   140012918:	(bad)  
   140012919:	sub    BYTE PTR [rdx],bl
   14001291b:	data16 icebp 
   14001291d:	or     si,WORD PTR [rbp-0xc]
   140012921:	cld    
   140012922:	int    0x14
   140012924:	test   eax,0xa13d4867
   140012929:	cwde   
   14001292a:	vmovq  xmm2,QWORD PTR [rcx]
   14001292e:	(bad)  
   14001292f:	leave  
   140012930:	scas   eax,DWORD PTR es:[rdi]
   140012931:	push   0xffffffffc3308a6a
   140012936:	xlat   BYTE PTR ds:[rbx]
   140012937:	xor    edi,DWORD PTR [rbp+rcx*1+0x6b14f8]
   14001293e:	adc    cl,BYTE PTR [rip+0x6edb5a36]        # 0x1aedc837a
   140012944:	hlt    
   140012945:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012946:	out    0xfe,ax
   140012949:	(bad)  
   14001294a:	sbb    BYTE PTR [rdi+rbx*1+0x35cefae3],ch
   140012951:	rex.RX (bad) [rdi+0x197ed859]
   140012958:	mov    bh,0x77
   14001295a:	add    edx,ebp
   14001295c:	es sbb eax,0xf6da220a
   140012962:	cld    
   140012963:	rex.WXB and dil,r12b
   140012966:	mov    ah,0x9e
   140012968:	ficom  WORD PTR [rax-0x7998fbbc]
   14001296e:	sar    BYTE PTR [rax],0x80
   140012971:	popf   
   140012972:	and    DWORD PTR [rdi],ebx
   140012974:	pop    rbp
   140012975:	and    edx,DWORD PTR [rcx-0x6288fb6a]
   14001297b:	out    0x5d,eax
   14001297d:	retf   0x7007
   140012980:	xchg   esi,eax
   140012981:	pop    rsi
   140012982:	mov    edx,DWORD PTR [eax]
   140012985:	jg     0x140012960
   140012987:	add    ah,BYTE PTR [rcx]
   140012989:	fsubr  DWORD PTR [rdx]
   14001298b:	sbb    dl,BYTE PTR [r10-0x5]
   14001298f:	scas   eax,DWORD PTR es:[rdi]
   140012990:	mov    ebp,0x54067a9e
   140012995:	fcmovb st,st(5)
   140012997:	and    edx,0xb
   14001299a:	icebp  
   14001299b:	add    BYTE PTR [rip+0xffffffff98451d32],ah        # 0xd84646d3
   1400129a1:	outs   dx,DWORD PTR ds:[rsi]
   1400129a2:	adc    DWORD PTR [rsi-0x2f],ecx
   1400129a5:	mov    BYTE PTR [rax+rax*2],ah
   1400129a8:	mov    al,0x33
   1400129aa:	rex.WRB movabs r8,0xd9b38a0a0c92c3a3
   1400129b4:	add    eax,0x3d502239
   1400129b9:	test   BYTE PTR [rcx],0xb9
   1400129bc:	clc    
   1400129bd:	(bad)  
   1400129be:	jg     0x14001296a
   1400129c0:	(bad)  
   1400129c1:	(bad)  
   1400129c2:	sbb    DWORD PTR [rdi+0x48],esi
   1400129c5:	sbb    dl,al
   1400129c7:	sbb    eax,DWORD PTR [rax-0x6e25ad29]
   1400129cd:	pop    rsp
   1400129ce:	mov    ecx,0x2f99e759
   1400129d3:	jl     0x1400129ca
   1400129d5:	retf   
   1400129d6:	jle    0x140012994
   1400129d8:	hlt    
   1400129d9:	fild   QWORD PTR [rax+0x3910b2c8]
   1400129df:	out    0x9a,al
   1400129e1:	adc    eax,0x6bb1d63d
   1400129e6:	or     esi,DWORD PTR [rdi]
   1400129e8:	fwait
   1400129e9:	movabs al,ds:0x3423ac38d501a1d4
   1400129f2:	xor    rax,QWORD PTR [rbx+0x13]
   1400129f6:	popf   
   1400129f7:	mov    bh,0x9e
   1400129f9:	loope  0x140012a61
   1400129fb:	sti    
   1400129fc:	(bad)  
   1400129fd:	neg    BYTE PTR [rbx-0x12]
   140012a00:	lahf   
   140012a01:	cmp    eax,0x8d614d7f
   140012a06:	cmp    eax,0xf2add4d2
   140012a0b:	xchg   DWORD PTR [rsi],esp
   140012a0d:	scas   eax,DWORD PTR es:[rdi]
   140012a0e:	clc    
   140012a0f:	xchg   ebx,eax
   140012a10:	push   0x66
   140012a12:	lea    ebp,[rbx]
   140012a14:	xchg   ecx,eax
   140012a15:	sti    
   140012a16:	(bad)  
   140012a17:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012a18:	adc    edi,eax
   140012a1a:	fisub  WORD PTR [rbp+0x3adf1c73]
   140012a20:	rex.WB jns 0x140012a88
   140012a23:	or     ebp,edx
   140012a25:	jge    0x1400129b9
   140012a27:	or     ecx,DWORD PTR [rbp+0x40]
   140012a2a:	(bad)  
   140012a2b:	sub    DWORD PTR [rsi-0x5],eax
   140012a2e:	adc    eax,0x7fccd228
   140012a33:	ficomp DWORD PTR [rdi+rdi*1-0x32]
   140012a37:	repz imul edx,DWORD PTR [rip+0x24028da7],0xffffff87        # 0x16403b7e6
   140012a3f:	loope  0x140012aaa
   140012a41:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012a42:	sbb    eax,0x4ce617b3
   140012a47:	push   rbx
   140012a48:	adc    al,0x60
   140012a4a:	(bad)  
   140012a4b:	sbb    cl,BYTE PTR [rip+0xfffffffff6fcf649]        # 0x136fe209a
   140012a51:	fimul  WORD PTR [rax]
   140012a53:	(bad)  
   140012a54:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012a55:	inc    BYTE PTR [rax+0x37c7ee14]
   140012a5b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012a5c:	or     BYTE PTR ds:[rax+0x7],0x4e
   140012a61:	stos   DWORD PTR es:[rdi],eax
   140012a62:	(bad)  
   140012a63:	sub    ebp,ebp
   140012a65:	pop    rsi
   140012a66:	sub    eax,0x7c354f8f
   140012a6b:	mov    edi,DWORD PTR [rsi]
   140012a6d:	and    dh,BYTE PTR [rdx]
   140012a6f:	or     DWORD PTR [rax],edi
   140012a71:	int    0x95
   140012a73:	mov    BYTE PTR [rsi-0x14],dl
   140012a76:	add    BYTE PTR [rbx+0x318efe7],dl
   140012a7c:	and    eax,0xeada5fee
   140012a81:	(bad)  
   140012a82:	(bad)  
   140012a83:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012a84:	xchg   ebx,eax
   140012a85:	out    0x80,eax
   140012a87:	call   FWORD PTR [rcx-0x17f2dbc5]
   140012a8d:	mov    ebx,0x792b5f01
   140012a92:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012a93:	repnz push rdi
   140012a95:	outs   dx,DWORD PTR ds:[rsi]
   140012a96:	stc    
   140012a97:	ficomp WORD PTR [rdi]
   140012a99:	clc    
   140012a9a:	icebp  
   140012a9b:	ror    edx,0xea
   140012a9e:	scas   eax,DWORD PTR es:[rdi]
   140012a9f:	adc    al,0xa5
   140012aa1:	pop    rdi
   140012aa2:	scas   al,BYTE PTR es:[rdi]
   140012aa3:	or     al,BYTE PTR [rdi-0x17]
   140012aa6:	test   DWORD PTR [rcx-0x57a1ab89],eax
   140012aac:	pushf  
   140012aad:	push   rax
   140012aae:	jns    0x140012a71
   140012ab0:	adc    eax,0x8fc5cf2e
   140012ab5:	mov    esi,DWORD PTR [rbx+0x28]
   140012ab8:	sbb    ch,BYTE PTR [rdx-0x4c]
   140012abb:	cdq    
   140012abc:	movabs ds:0x3209ea109b3094f5,al
   140012ac5:	fisttp QWORD PTR [rbx-0x8b08bb5]
   140012acb:	sub    dl,ch
   140012acd:	push   0x3ed9ca04
   140012ad2:	cmp    DWORD PTR [rdx-0x61],0xffffffaa
   140012ad6:	sahf   
   140012ad7:	push   rax
   140012ad8:	(bad)  
   140012ad9:	push   rbx
   140012ada:	pop    rsp
   140012adb:	cmp    eax,0x7afff58b
   140012ae0:	(bad)  
   140012ae1:	scas   eax,DWORD PTR es:[rdi]
   140012ae2:	and    edx,DWORD PTR [rcx]
   140012ae4:	enter  0x11d5,0x17
   140012ae8:	rex.W jl 0x140012aeb
   140012aeb:	(bad)  
   140012aec:	frstor [rdi-0x4a]
   140012aef:	jbe    0x140012a85
   140012af1:	(bad)  
   140012af2:	std    
   140012af3:	outs   dx,BYTE PTR ds:[rsi]
   140012af5:	fidivr WORD PTR [rax+0x5eb70ca]
   140012afb:	(bad)  
   140012afc:	mov    bh,0xce
   140012afe:	and    BYTE PTR [rbx+0x531a5037],bh
   140012b04:	lods   al,BYTE PTR ds:[rsi]
   140012b05:	test   al,0x44
   140012b07:	test   eax,0xe6d3d8d7
   140012b0c:	dec    BYTE PTR [rcx]
   140012b0e:	xor    al,0xcb
   140012b10:	retf   0x21dd
   140012b13:	sti    
   140012b14:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012b15:	(bad)  
   140012b16:	add    BYTE PTR [rdx+0x1ceef77],dh
   140012b1c:	mov    edi,cs
   140012b1e:	jns    0x140012ab7
   140012b20:	sub    al,BYTE PTR [rbx]
   140012b22:	or     DWORD PTR [rax-0x6b2f5fcd],ecx
   140012b28:	sub    cl,BYTE PTR [rbx-0x61a10d3a]
   140012b2e:	or     DWORD PTR [rax-0x27cafb5a],ebx
   140012b34:	(bad)  
   140012b35:	and    BYTE PTR [rbx-0x6],dl
   140012b38:	xor    al,0xf
   140012b3a:	add    BYTE PTR [rdx+rcx*4],cl
   140012b3d:	xchg   esp,eax
   140012b3e:	rex.WRX stos BYTE PTR es:[rdi],al
   140012b40:	shr    DWORD PTR [rsi+0x4c],1
   140012b43:	jmp    0x16bceaac2
   140012b48:	(bad)  
   140012b49:	addr32 mov esp,0xd20f1d22
   140012b4f:	sahf   
   140012b50:	movsxd ebp,DWORD PTR [rdx-0x63358a07]
   140012b56:	stc    
   140012b57:	imul   esi,DWORD PTR [rbx+0xfea4313],0x3697957c
   140012b61:	imul   ebx,DWORD PTR [rcx],0x8f13079c
   140012b67:	xlat   BYTE PTR ds:[rbx]
   140012b68:	xchg   ebp,eax
   140012b69:	hlt    
   140012b6a:	(bad)  
   140012b6b:	loopne 0x140012b22
   140012b6d:	nop
   140012b6e:	jns    0x140012b55
   140012b70:	(bad)  
   140012b71:	sub    edx,0xc1fe5fad
   140012b77:	(bad)  
   140012b78:	pop    rbp
   140012b79:	cs cs std 
   140012b7c:	jne    0x140012b8f
   140012b7e:	sbb    DWORD PTR [rdx+rdi*4-0x17],eax
   140012b82:	jl     0x140012b5c
   140012b84:	or     DWORD PTR [rax+0x684a0842],eax
   140012b8a:	xchg   esp,eax
   140012b8b:	mov    edx,0x9a9a4c09
   140012b90:	mov    edx,0x299a69a9
   140012b95:	pop    rdx
   140012b96:	rex.WRXB rcr r9b,1
   140012b99:	(bad)  
   140012b9a:	cwde   
   140012b9b:	loop   0x140012b98
   140012b9d:	jmp    0x18fb7a9d0
   140012ba2:	xor    ebx,ebx
   140012ba4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012ba5:	cwde   
   140012ba6:	rex.WRB test al,0xea
   140012ba9:	jge    0x140012bb1
   140012bab:	cmc    
   140012bac:	test   BYTE PTR [rdx+0x62cc529e],dh
   140012bb2:	or     eax,edx
   140012bb4:	iret   
   140012bb5:	div    BYTE PTR [rcx-0x4d]
   140012bb8:	mov    BYTE PTR [rbx],cl
   140012bba:	enter  0x826c,0x9f
   140012bbe:	(bad)
   140012bc1:	xor    eax,0x2869ae0d
   140012bc6:	(bad)  
   140012bc7:	sbb    ecx,eax
   140012bc9:	(bad)  
   140012bca:	in     al,dx
   140012bcb:	(bad)  
   140012bcc:	hlt    
   140012bcd:	xor    al,0x52
   140012bcf:	adc    al,0xec
   140012bd1:	pop    rdi
   140012bd2:	fldenv [rdx-0x1d]
   140012bd5:	ret    0x940b
   140012bd8:	xlat   BYTE PTR ds:[rbx]
   140012bd9:	mov    dh,0xa1
   140012bdb:	fxch   st(7)
   140012bdd:	loope  0x140012c5e
   140012bdf:	bnd jle 0x140012be7
   140012be2:	in     eax,dx
   140012be3:	cli    
   140012be4:	fsubr  DWORD PTR [rcx-0x16]
   140012be7:	out    dx,eax
   140012be8:	pop    rsp
   140012be9:	(bad)  
   140012bea:	pop    rdi
   140012beb:	sub    bh,cl
   140012bed:	jne    0x140012c04
   140012bef:	ret    
   140012bf0:	pop    rsi
   140012bf1:	rex.WRXB (bad) 
   140012bf3:	xchg   ebx,eax
   140012bf4:	ds and al,0xa7
   140012bf7:	cmp    al,bh
   140012bf9:	(bad)  
   140012bfa:	and    al,0x7a
   140012bfc:	outs   dx,DWORD PTR ds:[rsi]
   140012bfd:	in     eax,dx
   140012bfe:	hlt    
   140012bff:	icebp  
   140012c00:	(bad)  
   140012c01:	and    BYTE PTR [rbp+0x4f62f605],ah
   140012c07:	xchg   ebx,eax
   140012c08:	add    DWORD PTR [r11+riz*2-0x60],r8d
   140012c0d:	rex.B ins BYTE PTR es:[rdi],dx
   140012c0f:	sbb    BYTE PTR [rax+0x5c4a3cb],dl
   140012c15:	mov    dl,0xef
   140012c17:	push   rbp
   140012c18:	xor    al,0x2b
   140012c1a:	test   al,0x38
   140012c1c:	leave  
   140012c1d:	fisttp DWORD PTR [rsi-0x3c]
   140012c20:	(bad)  
   140012c21:	rex.XB (bad) 
   140012c23:	int    0x0
   140012c25:	push   0x458056bb
   140012c2a:	xor    al,0xa4
   140012c2c:	mov    ecx,0x5d1b483
   140012c31:	je     0x140012bf9
   140012c33:	xchg   BYTE PTR [rdi+0x3a50260a],ah
   140012c39:	cmp    eax,0xfcb97ef1
   140012c3e:	sub    al,0x77
   140012c40:	mov    rsi,QWORD PTR [rax-0x61]
   140012c44:	add    bh,BYTE PTR [rdx+rbx*8+0x7fe50b72]
   140012c4b:	fcomi  st,st(7)
   140012c4d:	std    
   140012c4e:	lock rex.WRXB (bad) 
   140012c51:	movabs ds:0xa218029489a0cfd1,eax
   140012c5a:	(bad)  
   140012c5b:	add    BYTE PTR [rip+0xffffffffe951a34a],cl        # 0x12952cfab
   140012c61:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012c62:	rex.WRB movabs al,ds:0x506669a1a6ea6bae
   140012c6c:	rex.WRXB movabs ds:0x7c13d712a24d9ff7,rax
   140012c76:	push   0xfffffffff0f44df0
   140012c7b:	rex.RB cmp eax,0xcfb030a5
   140012c81:	xlat   BYTE PTR ds:[rbx]
   140012c82:	xchg   ecx,eax
   140012c83:	loop   0x140012c70
   140012c85:	push   rdx
   140012c86:	rex.WRXB jg 0x140012ca6
   140012c89:	leave  
   140012c8a:	(bad)  
   140012c8b:	imul   edi,DWORD PTR [rdi+rsi*1+0x533fc09a],0xeec67a80
   140012c96:	movabs eax,ds:0x75cee6e09d0f2827
   140012c9f:	rex.RX pop rbx
   140012ca1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012ca2:	pop    rax
   140012ca3:	mov    esp,0x77b70678
   140012ca8:	sbb    eax,0x929f2cc2
   140012cad:	movabs al,ds:0x514b9c06bcfebb9
   140012cb6:	nop
   140012cb7:	(bad)  
   140012cb8:	je     0x140012c8b
   140012cba:	fstp   TBYTE PTR [rdx+0x4d4d9344]
   140012cc0:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012cc2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012cc3:	popf   
   140012cc4:	lock mov esi,0x8b24db25
   140012cca:	rol    BYTE PTR [rcx],1
   140012ccc:	add    ch,cl
   140012cce:	sbb    esi,DWORD PTR [rdi+0x635b8413]
   140012cd4:	xchg   ecx,eax
   140012cd5:	xchg   esp,eax
   140012cd6:	mov    eax,0x44297cd
   140012cdb:	add    DWORD PTR [rbp-0x7dbfb63a],edi
   140012ce1:	xchg   ebp,eax
   140012ce2:	add    ch,ch
   140012ce4:	(bad)  [rcx+0x2a]
   140012ce7:	push   rax
   140012ce8:	rcl    cl,cl
   140012cea:	(bad)  
   140012ceb:	repz out dx,eax
   140012ced:	add    BYTE PTR [rax-0x6f],bh
   140012cf0:	adc    BYTE PTR [rsi+riz*4-0x3cda3b18],ah
   140012cf7:	pop    rsp
   140012cf8:	pop    rsp
   140012cf9:	xor    al,0xb4
   140012cfb:	scas   al,BYTE PTR es:[rdi]
   140012cfc:	sbb    DWORD PTR [rcx],0xffffffac
   140012cff:	pop    rax
   140012d00:	in     eax,dx
   140012d01:	xor    BYTE PTR [rax],dl
   140012d03:	fs scas al,BYTE PTR es:[rdi]
   140012d05:	je     0x140012d41
   140012d07:	(bad)  
   140012d08:	fistp  DWORD PTR [rbx+0x39]
   140012d0b:	adc    BYTE PTR [rip+0x3be4e88e],dl        # 0x17be6159f
   140012d11:	mov    ecx,0xbd01aa43
   140012d16:	add    DWORD PTR [rax+0x35],edi
   140012d19:	gs (bad) 
   140012d1b:	in     eax,dx
   140012d1c:	iret   
   140012d1d:	sahf   
   140012d1e:	mov    edi,0x367f8d18
   140012d23:	mov    dh,0xd9
   140012d25:	(bad)  
   140012d26:	(bad)  
   140012d27:	or     dl,BYTE PTR [rsi]
   140012d29:	fisub  WORD PTR [rbx+0x79]
   140012d2c:	mov    esi,0xa61a6d32
   140012d31:	mov    bl,0xc0
   140012d33:	lods   al,BYTE PTR ds:[rsi]
   140012d34:	cdq    
   140012d35:	push   rdx
   140012d36:	(bad)  
   140012d37:	adc    eax,esp
   140012d39:	sar    DWORD PTR [rdx-0x7a],cl
   140012d3c:	(bad)  
   140012d3d:	push   rsi
   140012d3e:	(bad)  
   140012d3f:	lahf   
   140012d40:	in     eax,dx
   140012d41:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140012d43:	outs   dx,BYTE PTR ds:[rsi]
   140012d44:	mov    BYTE PTR [rsi-0x3cd60851],bh
   140012d4a:	mov    WORD PTR [rdx+0x1f3eec8e],fs
   140012d50:	(bad)  
   140012d51:	enter  0x6bf2,0x6a
   140012d55:	pushf  
   140012d56:	(bad)  
   140012d57:	jo     0x140012da6
   140012d59:	movsxd ebx,DWORD PTR [rdi+rdi*2-0x65]
   140012d5d:	repnz imul esp,ebp,0xffffffbf
   140012d61:	(bad)  
   140012d62:	pop    rax
   140012d63:	and    eax,DWORD PTR [rsi+0x75]
   140012d66:	or     DWORD PTR [rdi],ecx
   140012d68:	or     DWORD PTR ds:[rsi-0xc1d109c],edi
   140012d6f:	sbb    al,0xbb
   140012d71:	jo     0x140012d05
   140012d73:	(bad)  
   140012d74:	(bad)  
   140012d75:	add    eax,0xb4a2ee98
   140012d7a:	adc    eax,0xc4294102
   140012d7f:	(bad)
   140012d82:	pushf  
   140012d83:	in     al,0xda
   140012d85:	jg     0x140012d22
   140012d87:	add    bh,BYTE PTR [rax+0xa2d19e8]
   140012d8d:	lock and al,0x5
   140012d90:	add    edi,DWORD PTR es:[rsi+rcx*2+0x12]
   140012d95:	xor    al,bl
   140012d97:	add    al,BYTE PTR [rax-0x19f9187]
   140012d9d:	iret   
   140012d9e:	and    al,0x67
   140012da0:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012da2:	hlt    
   140012da3:	imul   esi,DWORD PTR [rbp-0x318dbe1],0x97385a76
   140012dad:	imul   edx,DWORD PTR [rcx+rbx*1],0x23
   140012db1:	mov    BYTE PTR [rcx-0x2a1f9586],bh
   140012db7:	pushf  
   140012db8:	(bad)  
   140012db9:	and    al,0x2d
   140012dbb:	adc    r15,QWORD PTR [rsi+0x54]
   140012dbf:	rex.X
   140012dc0:	cs push rbx
   140012dc2:	es cmp al,0x20
   140012dc5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012dc6:	(bad)  
   140012dc7:	pop    rsi
   140012dc8:	jo     0x140012deb
   140012dca:	(bad)  
   140012dcb:	add    BYTE PTR [rax+0x3],dl
   140012dce:	(bad)  
   140012dcf:	pop    rbx
   140012dd0:	xor    eax,0x8d1a474e
   140012dd5:	mov    ebx,edx
   140012dd7:	(bad)  
   140012dd8:	adc    BYTE PTR [rdi+rax*8-0x26196dcf],cl
   140012ddf:	out    dx,eax
   140012de0:	xlat   BYTE PTR ds:[rbx]
   140012de1:	xchg   edi,eax
   140012de2:	(bad)  
   140012de3:	(bad)  
   140012de4:	xor    edi,esi
   140012de6:	mov    edi,0x7d01abee
   140012deb:	or     dh,al
   140012ded:	push   0xffffffffffffffc9
   140012def:	sub    eax,0xcb78e016
   140012df4:	idiv   ebp
   140012df6:	xchg   ecx,eax
   140012df7:	lahf   
   140012df8:	sub    BYTE PTR [rdi+0xb],al
   140012dfb:	(bad)  
   140012dfc:	(bad)
   140012e00:	rex.X enter 0xf7f5,0x18
   140012e05:	loop   0x140012e0e
   140012e07:	es jne 0x140012dcd
   140012e0a:	out    dx,al
   140012e0b:	mov    ah,0x66
   140012e0d:	outs   dx,DWORD PTR ds:[rsi]
   140012e0e:	xor    ah,BYTE PTR [rbx+0x7f]
   140012e11:	mov    dh,0x4f
   140012e13:	cwde   
   140012e14:	out    dx,al
   140012e15:	movabs ds:0xf8bb260f74c25d93,eax
   140012e1e:	leave  
   140012e1f:	(bad)  
   140012e20:	(bad)  
   140012e23:	in     eax,0x74
   140012e25:	(bad)  
   140012e26:	mov    dl,0xde
   140012e28:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012e29:	pushf  
   140012e2a:	in     eax,dx
   140012e2b:	push   rbx
   140012e2c:	rex.WRB outs dx,BYTE PTR ds:[rsi]
   140012e2e:	xor    bl,BYTE PTR [rsi+rbp*8+0x29f74e53]
   140012e35:	addr32 push rsi
   140012e37:	add    DWORD PTR [rax-0x676e6612],ebx
   140012e3d:	loopne 0x140012de6
   140012e3f:	push   rbx
   140012e40:	fsubr  QWORD PTR [rdx+rcx*4-0x2c]
   140012e44:	push   rbx
   140012e45:	fs (bad) 
   140012e47:	rex.WXB test r9b,sil
   140012e4a:	out    dx,eax
   140012e4b:	cmp    dl,BYTE PTR [rdi-0x3d8b2300]
   140012e51:	(bad)  
   140012e52:	loope  0x140012ddb
   140012e54:	or     bh,dh
   140012e56:	cmp    eax,0xab8dceca
   140012e5b:	or     al,0xb6
   140012e5d:	pop    rdi
   140012e5e:	fs jmp 0x11db97a36
   140012e64:	sbb    esp,DWORD PTR [rax-0x6b52c18b]
   140012e6a:	retf   
   140012e6b:	(bad)  
   140012e6c:	(bad)  
   140012e6d:	jns    0x140012eee
   140012e6f:	(bad)
   140012e74:	mov    ah,0x52
   140012e76:	sbb    ah,BYTE PTR [rbx+0x79]
   140012e79:	jo     0x140012e05
   140012e7b:	cs xor r11b,bpl
   140012e7f:	push   rsi
   140012e80:	xchg   edx,eax
   140012e81:	jb     0x140012e28
   140012e83:	not    DWORD PTR [rcx-0xc0c928e]
   140012e89:	popf   
   140012e8a:	rex.B sbb al,0x92
   140012e8d:	ret    0x6efe
   140012e90:	cli    
   140012e91:	fadd   QWORD PTR [rdx-0x4]
   140012e94:	push   rcx
   140012e95:	xchg   ebx,eax
   140012e96:	push   rdx
   140012e97:	imul   esp,DWORD PTR [rcx+rsi*4],0xff0ed075
   140012e9e:	(bad)  
   140012ea0:	(bad)  
   140012ea1:	(bad)  
   140012ea2:	sbb    edx,DWORD PTR [rbx+0x7513a051]
   140012ea8:	in     al,0x78
   140012eaa:	mov    esi,0x122e3073
   140012eaf:	xchg   ebx,eax
   140012eb0:	repnz (bad) 
   140012eb2:	loopne 0x140012e82
   140012eb4:	stc    
   140012eb5:	(bad)  
   140012eb6:	fnsave [rbp-0x5a]
   140012eb9:	sub    eax,0x45b4c8f9
   140012ebe:	sub    DWORD PTR [rdx-0xb],edx
   140012ec1:	and    BYTE PTR [rdx],bl
   140012ec3:	rex cmp eax,0xfed911f1
   140012ec9:	add    BYTE PTR [rdi+0x40],dh
   140012ecc:	sbb    dl,al
   140012ece:	rex.RXB add BYTE PTR [r15-0x169d237a],r13b
   140012ed5:	lods   eax,DWORD PTR ds:[rsi]
   140012ed6:	(bad)  
   140012ed7:	jg     0x140012eca
   140012ed9:	ud0    edx,DWORD PTR [rcx+0x2fe96172]
   140012ee0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012ee1:	enter  0xb631,0xa8
   140012ee5:	(bad)  
   140012ee6:	(bad)  
   140012ee7:	jns    0x140012ee5
   140012ee9:	pop    rcx
   140012eea:	adc    ebx,DWORD PTR [rax-0x56457e2b]
   140012ef0:	cdq    
   140012ef1:	(bad)  
   140012ef2:	or     eax,0x334299a1
   140012ef7:	and    eax,ebx
   140012ef9:	push   0x734cd72e
   140012efe:	jmp    0x140012eae
   140012f00:	imul   edx,DWORD PTR [rdx-0x58],0x5f
   140012f04:	push   rbx
   140012f05:	sbb    al,BYTE PTR [rax-0x54ecbc19]
   140012f0b:	add    BYTE PTR [rbp+0xc],dh
   140012f0e:	stc    
   140012f0f:	jge    0x140012f44
   140012f11:	add    ebp,DWORD PTR [rbx-0xe]
   140012f14:	rex.WB mov r13b,0xfe
   140012f17:	xor    al,0xe5
   140012f19:	(bad)  
   140012f1a:	sub    cl,BYTE PTR [rbp-0x38]
   140012f1d:	retf   0x2123
   140012f20:	jb     0x140012f20
   140012f22:	outs   dx,DWORD PTR ds:[rsi]
   140012f23:	ds repnz (bad) 
   140012f26:	pushf  
   140012f27:	(bad)  
   140012f28:	cdq    
   140012f29:	pop    rsi
   140012f2a:	mov    ecx,0x53adb1c0
   140012f2f:	xchg   esp,eax
   140012f30:	xchg   edi,eax
   140012f31:	mov    bh,0xa0
   140012f33:	fimul  WORD PTR [rbx+0x3d59814b]
   140012f39:	cmp    al,0x87
   140012f3b:	push   rsi
   140012f3d:	xchg   ebx,eax
   140012f3e:	push   rax
   140012f3f:	jg     0x140012ee0
   140012f41:	movabs ds:0xf792f2b3b42ba367,al
   140012f4a:	(bad)  
   140012f4b:	loop   0x140012f9d
   140012f4d:	(bad)  
   140012f4e:	cmp    DWORD PTR [rdx],esp
   140012f50:	mov    eax,0x537edb19
   140012f55:	xor    al,0xd0
   140012f57:	rol    DWORD PTR [rcx],0xba
   140012f5a:	xlat   BYTE PTR ds:[rbx]
   140012f5b:	xor    ebp,ecx
   140012f5d:	sub    dh,BYTE PTR gs:[rax+0x54ef8565]
   140012f64:	add    eax,0x70607752
   140012f69:	and    BYTE PTR [rbp+0x6b],cl
   140012f6c:	cmp    BYTE PTR [rsp+rax*2],al
   140012f6f:	sbb    eax,0xf3c5c1a
   140012f74:	loop   0x140012ff4
   140012f76:	adc    al,BYTE PTR [rdi-0x1cc8cb21]
   140012f7c:	sbb    bh,BYTE PTR [rax]
   140012f7e:	leave  
   140012f7f:	ror    DWORD PTR [rsi+0x349838b8],1
   140012f85:	sub    eax,0x8c7ce266
   140012f8a:	shl    BYTE PTR [rdx],1
   140012f8c:	jns    0x140012fd6
   140012f8e:	(bad)  
   140012f8f:	jmp    0xfa9da0bc
   140012f94:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012f95:	fldcw  WORD PTR cs:[rbp+0x4d23c6db]
   140012f9c:	or     ebx,ecx
   140012f9e:	fs repnz sbb al,0xf0
   140012fa2:	iret   
   140012fa3:	jns    0x140012f42
   140012fa5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012fa6:	add    DWORD PTR [rbp-0x357c07ff],edi
   140012fac:	sub    eax,0xf93ff0e6
   140012fb1:	mov    ecx,0xb86e7f2f
   140012fb6:	mov    eax,0x683437fc
   140012fbb:	add    DWORD PTR [rcx],ebp
   140012fbd:	(bad)  
   140012fbe:	sqrtps xmm6,xmm1
   140012fc1:	jmp    0x140012f83
   140012fc3:	lods   al,BYTE PTR ds:[rsi]
   140012fc4:	mov    DWORD PTR [rdx-0x596565e1],ecx
   140012fca:	cdq    
   140012fcb:	rex.RB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012fcd:	mov    bh,0x3c
   140012fcf:	(bad)  
   140012fd1:	xor    edi,DWORD PTR [rbx+rsi*1-0x67]
   140012fd5:	push   rbx
   140012fd6:	in     al,dx
   140012fd7:	movabs ds:0xbce9137c53365299,al
   140012fe0:	scas   al,BYTE PTR es:[rdi]
   140012fe1:	mov    dh,0xd9
   140012fe3:	jge    0x140012fdb
   140012fe5:	fsub   DWORD PTR [rbp-0x6f97a10e]
   140012feb:	cmp    dh,ch
   140012fed:	imul   DWORD PTR [rbx-0x34]
   140012ff0:	stc    
   140012ff1:	sub    eax,0x3fa54e34
   140012ff6:	adc    ecx,eax
   140012ff8:	int    0xf6
   140012ffa:	mov    ecx,0x70d3c0fe
   140012fff:	jmp    QWORD PTR [rbx+0x635cedec]
   140013005:	mov    eax,0xada59a75
   14001300a:	(bad)  
   14001300b:	jno    0x140012fc8
   14001300d:	push   rdi
   14001300e:	sub    eax,0x4cacd7f7
   140013013:	rex.WRX movabs rax,ds:0xfcceec93b1a78714
   14001301d:	out    dx,eax
   14001301e:	cmp    BYTE PTR [rbx-0x26],dl
   140013021:	(bad)  
   140013022:	sub    DWORD PTR [rdi-0x61],edi
   140013025:	rex.WXB in eax,dx
   140013027:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013028:	repz pop rsp
   14001302a:	jle    0x140012fbb
   14001302c:	xor    eax,0x5cff30dd
   140013031:	sbb    esp,DWORD PTR [rax+0x77]
   140013034:	jrcxz  0x140012fb6
   140013036:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013037:	loope  0x140012fe2
   140013039:	sbb    DWORD PTR [rdi],eax
   14001303b:	fwait
   14001303c:	adc    al,0xec
   14001303e:	ins    BYTE PTR es:[rdi],dx
   14001303f:	xchg   BYTE PTR [rax+0x76bcdae6],ah
   140013045:	sti    
   140013046:	(bad)  
   140013047:	adc    ch,BYTE PTR [rbx]
   140013049:	lock push rsi
   14001304b:	loop   0x1400130b1
   14001304d:	jle    0x140012fd6
   14001304f:	jmp    0x182e0a28c
   140013054:	push   rsp
   140013055:	inc    dh
   140013057:	(bad)  
   140013058:	or     eax,0xf32efb51
   14001305d:	push   0x9392ce0
   140013062:	leave  
   140013063:	(bad)
   140013068:	(bad)  
   140013069:	mov    ah,0x8
   14001306b:	test   DWORD PTR [rsi],0xb7220fe0
   140013071:	cwde   
   140013072:	ret    
   140013073:	jg     0x140013057
   140013075:	mov    ecx,0x2fd07fcf
   14001307a:	scas   al,BYTE PTR es:[rdi]
   14001307b:	(bad)  
   14001307c:	shl    BYTE PTR [rsp+rax*4],cl
   14001307f:	(bad)  
   140013080:	rex.W loopne 0x1400130e1
   140013083:	rex.RXB jmp 0x1637d8bf4
   140013089:	or     eax,0xe299a4e4
   14001308e:	xchg   bx,ax
   140013090:	cmp    BYTE PTR [rbp-0x4ec2ff29],dl
   140013096:	jmp    0x1bb12b657
   14001309b:	jl     0x1400130ba
   14001309d:	jmp    0x14001309a
   14001309f:	adc    dl,BYTE PTR [rdx+0x19]
   1400130a2:	iret   
   1400130a3:	cmp    bh,bl
   1400130a5:	jb     0x140013122
   1400130a7:	outs   dx,DWORD PTR ds:[rsi]
   1400130a8:	mov    ebx,0x22689794
   1400130ad:	(bad)  
   1400130ae:	sub    BYTE PTR [rcx-0x30],bh
   1400130b1:	xchg   DWORD PTR [rdx-0x3a],esp
   1400130b4:	and    dh,bh
   1400130b6:	push   rsi
   1400130b7:	push   rdi
   1400130b8:	jo     0x1400130ad
   1400130ba:	mov    cl,0x77
   1400130bc:	sub    BYTE PTR [rdi],0xd8
   1400130bf:	fstp   TBYTE PTR [rsi]
   1400130c1:	retf   
   1400130c2:	jge    0x1400130db
   1400130c4:	pop    rdi
   1400130c5:	movabs al,ds:0x20a463f6cc85baba
   1400130ce:	test   eax,0x3d951eb4
   1400130d3:	scas   al,BYTE PTR es:[rdi]
   1400130d4:	cmc    
   1400130d5:	(bad)  
   1400130d6:	js     0x1400130e1
   1400130d8:	xchg   ecx,eax
   1400130d9:	add    al,0xe4
   1400130db:	push   rdx
   1400130dc:	in     al,0xdc
   1400130de:	push   0x78
   1400130e0:	pop    rsp
   1400130e1:	sbb    ch,BYTE PTR [rbp+rbp*1+0x5da7c5f3]
   1400130e8:	(bad)  
   1400130e9:	cmc    
   1400130ea:	pop    rbx
   1400130eb:	movabs ds:0x16cf7d0dfffb070,eax
   1400130f4:	shl    BYTE PTR [rsi],cl
   1400130f6:	in     eax,dx
   1400130f7:	lahf   
   1400130f8:	sbb    al,0xc6
   1400130fa:	rex.XB pushf 
   1400130fc:	or     cl,BYTE PTR [rsi+rcx*2]
   1400130ff:	ins    DWORD PTR es:[rdi],dx
   140013100:	sub    dl,BYTE PTR [rax-0x80]
   140013103:	rol    BYTE PTR [rax+rdi*4+0x604b80ce],1
   14001310a:	popf   
   14001310b:	cmp    BYTE PTR [rdx],0x3b
   14001310e:	test   DWORD PTR [rsi+0x29],0xdbb65351
   140013115:	rex.WRX stc 
   140013117:	add    eax,0x4e60f2e2
   14001311c:	loop   0x1400130e9
   14001311e:	imul   edx,DWORD PTR [rip+0x4dc63a61],0xff10fa52        # 0x18dc76b89
   140013128:	rex.WB
   140013129:	repz add DWORD PTR [rax-0x364319c8],edx
   140013130:	(bad)  
   140013131:	mov    ch,BYTE PTR [rax+0x14]
   140013134:	sbb    al,0x31
   140013136:	pop    rdx
   140013137:	lock call 0x116ea010e
   14001313d:	xchg   DWORD PTR [rsi-0x7d],edi
   140013140:	movsxd edi,edi
   140013142:	test   bh,dl
   140013144:	xor    DWORD PTR [rcx],ebp
   140013146:	test   al,0x37
   140013148:	add    BYTE PTR [rdi-0x151066a1],bh
   14001314e:	repz rex mov ecx,0xbd0faef1
   140013155:	leave  
   140013156:	sub    eax,0xbd9dfead
   14001315b:	imul   esi,DWORD PTR [rbx-0x65ef2f22],0xb60fd5c8
   140013165:	fisubr DWORD PTR [rsi-0x55138aca]
   14001316b:	xor    esp,DWORD PTR [rip+0xffffffff9f56b977]        # 0xdf57eae8
   140013171:	cmp    dh,dh
   140013173:	and    bh,BYTE PTR [rbx-0x51]
   140013176:	ins    BYTE PTR es:[rdi],dx
   140013177:	pop    rdx
   140013178:	out    dx,eax
   140013179:	out    dx,eax
   14001317a:	fwait
   14001317b:	adc    BYTE PTR [rip+0xffffffffedf7427e],bh        # 0x12df873ff
   140013181:	rex.RXB mov r8d,fs
   140013184:	jrcxz  0x140013120
   140013186:	mov    dl,dh
   140013188:	out    0xf6,eax
   14001318a:	push   rdi
   14001318b:	ins    DWORD PTR es:[rdi],dx
   14001318c:	mov    DWORD PTR [rsi],edi
   14001318e:	cmp    DWORD PTR [rdx],ecx
   140013190:	cmp    QWORD PTR [rax],rsi
   140013193:	mov    dl,ah
   140013195:	push   rbx
   140013196:	scas   al,BYTE PTR es:[rdi]
   140013197:	cmp    eax,0xfb9a16fc
   14001319c:	(bad)  
   14001319d:	movsxd esi,DWORD PTR [rsi-0x3]
   1400131a0:	sub    ah,BYTE PTR [rbx-0x45a75875]
   1400131a6:	js     0x1400131ae
   1400131a8:	jg     0x14001319d
   1400131aa:	sbb    bl,dl
   1400131ac:	int3   
   1400131ad:	push   rdx
   1400131ae:	rex.WX sbb rax,0xffffffffe4711fbd
   1400131b4:	xchg   edi,eax
   1400131b5:	push   rdi
   1400131b6:	sbb    ebx,DWORD PTR [rcx-0x732c433b]
   1400131bc:	xchg   esi,eax
   1400131bd:	rex.WRXB out 0x74,al
   1400131c0:	movs   DWORD PTR es:[rdi],DWORD PTR ss:[rsi]
   1400131c2:	add    BYTE PTR [rsi],ch
   1400131c4:	jae    0x1400131c4
   1400131c6:	out    0xd9,eax
   1400131c8:	jg     0x14001314c
   1400131ca:	mov    ah,0xe3
   1400131cc:	rcr    DWORD PTR [rdx-0x78],0xfe
   1400131d0:	xchg   ebp,eax
   1400131d1:	out    dx,al
   1400131d2:	fistp  QWORD PTR [rdx+rbp*2-0x635bfc1e]
   1400131d9:	cmp    edx,DWORD PTR [rbp+0x319db05]
   1400131df:	rcl    dh,cl
   1400131e1:	std    
   1400131e2:	and    eax,0xf2434a7e
   1400131e7:	rcr    BYTE PTR [rdx+0x3b2561de],1
   1400131ed:	and    DWORD PTR [rdi],edi
   1400131ef:	fwait
   1400131f0:	loopne 0x1400131f5
   1400131f2:	jb     0x140013179
   1400131f4:	rcl    DWORD PTR [rsp+rdi*1],1
   1400131f7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400131f8:	add    DWORD PTR [rdx],esi
   1400131fa:	(bad)  
   1400131fb:	mov    ch,0xa4
   1400131fd:	push   0x44f989a5
   140013202:	ds mov esi,0x62d3d6e4
   140013208:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013209:	jns    0x14001319a
   14001320b:	stos   BYTE PTR es:[rdi],al
   14001320c:	lods   al,BYTE PTR ds:[rsi]
   14001320d:	xor    edi,ebp
   14001320f:	adc    al,0xf0
   140013211:	iret   
   140013212:	js     0x140013231
   140013214:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013215:	add    DWORD PTR [rbp+0x4983f801],edi
   14001321b:	(bad)  
   14001321c:	sti    
   14001321d:	(bad)  
   14001321e:	(bad)  
   14001321f:	jns    0x140013203
   140013221:	pop    rax
   140013222:	mov    ecx,0x26f7f1be
   140013227:	mov    bl,0xc9
   140013229:	mov    ecx,ebp
   14001322b:	ins    BYTE PTR es:[rdi],dx
   14001322c:	adc    ah,BYTE PTR [rdi]
   14001322e:	repnz and al,0xf6
   140013231:	sahf   
   140013232:	xor    eax,edi
   140013234:	(bad)  
   140013235:	(bad)  
   140013236:	nop
   140013237:	movsxd ebx,DWORD PTR [rsi]
   140013239:	ficomp WORD PTR [rcx]
   14001323b:	(bad)  
   14001323c:	fbld   TBYTE PTR [rdi]
   14001323e:	(bad)  
   14001323f:	ffreep st(4)
   140013241:	xlat   BYTE PTR ds:[rbx]
   140013242:	or     ebx,DWORD PTR [rbx]
   140013244:	(bad)  
   140013245:	and    eax,0xfcf31d4d
   14001324a:	(bad)  
   14001324b:	in     eax,0x6f
   14001324d:	rol    BYTE PTR [rdi+rbx*8-0x3c],cl
   140013251:	lock imul esp,edx,0x32
   140013255:	pop    rax
   140013256:	push   0x2937c55e
   14001325b:	jl     0x14001328b
   14001325d:	mul    DWORD PTR [rip+0xffffffffd0905045]        # 0x1109182a8
   140013263:	rcl    BYTE PTR [rbx+riz*1-0x52],1
   140013267:	cmp    al,0xf1
   140013269:	ds mov esp,0x5fb6ccf3
   14001326f:	loop   0x140013259
   140013271:	(bad)
   140013274:	jmp    0x1400132e5
   140013276:	mov    dh,0x47
   140013278:	pushf  
   140013279:	mov    bl,0x6d
   14001327b:	movabs ds:0xb682dfc4f253f6c6,al
   140013284:	pop    rbx
   140013285:	cmp    ebp,DWORD PTR cs:[rbx+0x53]
   140013289:	xchg   edx,eax
   14001328a:	fadd   DWORD PTR [rbp-0x25]
   14001328d:	movabs eax,ds:0x458fdebe67bed2d3
   140013296:	or     al,0xed
   140013298:	jae    0x1400132c7
   14001329a:	movabs al,ds:0x78032186ec8c5318
   1400132a3:	mov    ecx,0x15c60a7a
   1400132a8:	mov    al,0xc3
   1400132aa:	xchg   ebp,eax
   1400132ab:	xor    al,0xc9
   1400132ad:	pop    rax
   1400132ae:	push   rdx
   1400132af:	(bad)  
   1400132b0:	xor    al,BYTE PTR [rdi+0x3c]
   1400132b3:	(bad)  
   1400132b4:	(bad)  
   1400132b5:	test   BYTE PTR [rsi+0x4d],dh
   1400132b8:	mov    ch,0xa1
   1400132ba:	xchg   ebp,eax
   1400132bb:	push   0xffffffffffffffc7
   1400132bd:	test   eax,0x671f38a2
   1400132c2:	add    edx,esp
   1400132c4:	rex lods eax,DWORD PTR ds:[rsi]
   1400132c6:	sbb    eax,0xec38af38
   1400132cb:	and    al,0xae
   1400132cd:	rex.RXB sub BYTE PTR [r14+0x78],r12b
   1400132d1:	shl    cl,cl
   1400132d3:	addr32 mov esp,0x21d776c1
   1400132d9:	outs   dx,DWORD PTR ds:[rsi]
   1400132da:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400132db:	test   eax,0xde6d43c1
   1400132e0:	repz (bad) 
   1400132e2:	in     al,0xf4
   1400132e4:	mov    edi,edi
   1400132e6:	rex.WRX (bad) 
   1400132e8:	cld    
   1400132e9:	cmp    ch,BYTE PTR [rbp+0x14]
   1400132ec:	shr    bl,0x29
   1400132ef:	or     ch,al
   1400132f1:	or     eax,0xe647efc0
   1400132f6:	push   rdi
   1400132f7:	(bad)  [rip+0xffffffff8bab2b07]        # 0xcbac5e04
   1400132fd:	movabs ds:0xab7ddd30edfdf763,eax
   140013306:	(bad)  
   140013307:	sti    
   140013308:	test   BYTE PTR [rsp+rcx*4+0x4f372c29],ah
   14001330f:	cmp    eax,0xef7b26d0
   140013314:	rex.X jmp 0x140013365
   140013317:	mov    ds,WORD PTR [rdi]
   140013319:	xchg   edi,eax
   14001331a:	loop   0x1400132a6
   14001331c:	add    al,0x1d
   14001331e:	push   rbx
   14001331f:	lock data16 (bad) 
   140013322:	ret    
   140013323:	cld    
   140013324:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013325:	std    
   140013326:	rex.WR sbb r12b,dil
   140013329:	rex.WRB shl QWORD PTR [r14+rbx*8-0x56055ec3],cl
   140013331:	(bad)  
   140013332:	lahf   
   140013333:	cmp    dh,bh
   140013335:	mov    dh,0xa6
   140013337:	jge    0x1400132fd
   140013339:	retf   
   14001333a:	and    ch,BYTE PTR [rax-0x51ec5819]
   140013340:	(bad)  
   140013341:	repnz ss hlt 
   140013344:	fadd   st,st(3)
   140013346:	rex.WR scas al,BYTE PTR es:[rdi]
   140013348:	pop    rdi
   140013349:	(bad)  
   14001334a:	mov    eax,0x8ba59a7d
   14001334f:	(bad)  
   140013350:	fwait
   140013351:	neg    DWORD PTR [rdi-0x3b55a64a]
   140013357:	call   0x10e6e171d
   14001335c:	jg     0x140013399
   14001335e:	icebp  
   14001335f:	(bad)  
   140013360:	paddq  mm1,QWORD PTR [rbp+0x21]
   140013364:	mov    esp,0x1495eb2d
   140013369:	xor    al,0xf7
   14001336b:	(bad)  
   14001336c:	shl    BYTE PTR [rcx],1
   14001336e:	add    esp,DWORD PTR [rcx]
   140013370:	cmp    DWORD PTR [rdx+0x48],edx
   140013373:	rex.W jns 0x140013311
   140013376:	cmp    eax,0x6da0ca58
   14001337b:	rex.WRXB add BYTE PTR [r9+0x25],r13b
   14001337f:	(bad)  
   140013380:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013381:	movabs ds:0x2831126868d04af8,eax
   14001338a:	sub    eax,0x8ce2615
   14001338f:	rex.B
   140013390:	rex.X
   140013391:	div    DWORD PTR ds:[rdi+rcx*2]
   140013395:	rex adc DWORD PTR [rbx+0x46800716],edi
   14001339c:	or     al,0x1f
   14001339e:	call   0xdd354313
   1400133a3:	sbb    BYTE PTR [rip+0xffffffff82674c63],0x35        # 0xc268800d
   1400133aa:	sbb    al,0x6a
   1400133ac:	(bad)  
   1400133ad:	add    bl,ah
   1400133af:	adc    ecx,ebx
   1400133b1:	jo     0x140013347
   1400133b3:	xchg   esp,eax
   1400133b4:	(bad)  
   1400133b5:	xchg   ecx,eax
   1400133b6:	push   rdx
   1400133b7:	mov    es,esp
   1400133b9:	adc    DWORD PTR [rax],edx
   1400133bb:	cmp    al,0x7a
   1400133bd:	fistp  QWORD PTR [rbx]
   1400133bf:	mov    ecx,0x783c2cfa
   1400133c4:	sub    bl,BYTE PTR [rbp+0x3e]
   1400133c7:	(bad)  
   1400133c8:	and    al,0xf0
   1400133ca:	mov    edx,0xfc00de91
   1400133cf:	pop    rsi
   1400133d0:	in     eax,0x16
   1400133d2:	mov    esi,DWORD PTR [rcx+0x6c]
   1400133d5:	cmp    al,0xfc
   1400133d7:	rcr    BYTE PTR [rdi-0x70],1
   1400133da:	(bad)  
   1400133dc:	addr32 rex.X mov ebp,0x5f360b8f
   1400133e3:	sbb    r14,QWORD PTR [r9+r9*4+0x68369dbf]
   1400133eb:	or     BYTE PTR [rax+0x1b],bh
   1400133ee:	ret    0xcde1
   1400133f1:	ret    
   1400133f2:	jnp    0x1400133df
   1400133f4:	rcl    DWORD PTR [rdi+0x411f584e],1
   1400133fa:	mov    ebp,0xdbaeeca8
   1400133ff:	rcl    bl,0x18
   140013402:	stos   BYTE PTR es:[rdi],al
   140013403:	movzx  eax,BYTE PTR [rax]
   140013406:	xchg   BYTE PTR [rbp-0xa],dh
   140013409:	jne    0x1400133d3
   14001340b:	cmp    eax,0xcc971aaa
   140013410:	and    dl,cl
   140013412:	ja     0x140013445
   140013414:	rex.WRXB or BYTE PTR [r10],r10b
   140013417:	add    cl,ch
   140013419:	jo     0x1400133e7
   14001341b:	xchg   ebp,eax
   14001341c:	(bad)  
   14001341d:	fiadd  WORD PTR [rbx-0x6804e39]
   140013423:	sub    al,0x87
   140013425:	mov    dh,0x5f
   140013427:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013428:	mov    esp,0xf6cc8db6
   14001342d:	or     BYTE PTR [rsi],dh
   14001342f:	or     BYTE PTR [rbx],dh
   140013431:	jle    0x140013459
   140013433:	int    0xfb
   140013435:	mov    ecx,DWORD PTR [rbp+0x138aa23f]
   14001343b:	stos   DWORD PTR es:[rdi],eax
   14001343c:	std    
   14001343d:	shl    ebp,cl
   14001343f:	lock sub eax,0xfef12f7b
   140013445:	jae    0x140013463
   140013447:	outs   dx,DWORD PTR ds:[rsi]
   140013448:	xor    al,0xdb
   14001344a:	mov    esp,0x8f9887f8
   14001344f:	rex.WRX cmp QWORD PTR [rdi-0x3aece86b],r15
   140013456:	jbe    0x140013476
   140013458:	push   rax
   140013459:	xchg   esp,eax
   14001345a:	or     al,0xe0
   14001345c:	rex.WB
   14001345d:	rex.WX adc QWORD PTR [rsi],rcx
   140013460:	(bad)  
   140013461:	add    ecx,ebp
   140013463:	popf   
   140013464:	push   0x335ff488
   140013469:	cs (bad) 
   14001346b:	rex.B iret 
   14001346d:	test   BYTE PTR [rbx-0x5c],ah
   140013470:	shr    DWORD PTR [rdx+0x17],cl
   140013473:	or     ebp,DWORD PTR [rcx+0x23]
   140013476:	add    DWORD PTR [rbx],edi
   140013478:	pop    rcx
   140013479:	add    edi,esp
   14001347b:	xchg   esp,eax
   14001347c:	outs   dx,BYTE PTR ds:[rsi]
   14001347d:	cmp    DWORD PTR [rdx+0x72],edx
   140013480:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013481:	xchg   ebx,eax
   140013482:	xor    BYTE PTR [rsp+rsi*8+0x45366759],cl
   140013489:	mov    ah,0xb
   14001348b:	push   rdx
   14001348c:	(bad)  
   14001348d:	ins    DWORD PTR es:[rdi],dx
   14001348e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001348f:	retf   0x7a40
   140013492:	ins    DWORD PTR es:[rdi],dx
   140013493:	popf   
   140013494:	leave  
   140013495:	xor    DWORD PTR [esi+0x54],0x5f666b58
   14001349d:	(bad)  
   14001349e:	rcr    BYTE PTR [rbx],cl
   1400134a0:	sbb    bh,0x8b
   1400134a3:	fadd   QWORD PTR [rdx-0x7]
   1400134a6:	(bad)  
   1400134a7:	jp     0x14001348c
   1400134a9:	rex.XB (bad) 
   1400134ab:	loop   0x14001346f
   1400134ad:	hlt    
   1400134ae:	(bad)  
   1400134af:	(bad)  
   1400134b1:	jmp    0x140013460
   1400134b3:	out    dx,eax
   1400134b4:	sub    BYTE PTR [rbp-0x64],ah
   1400134b7:	mov    ecx,0xfb4bd17
   1400134bc:	add    ecx,edx
   1400134be:	(bad)  
   1400134bf:	xchg   edx,eax
   1400134c0:	sbb    esi,DWORD PTR [rdx+0xe]
   1400134c3:	out    dx,eax
   1400134c4:	je     0x1763573bf
   1400134ca:	(bad)  
   1400134cb:	(bad)  
   1400134cc:	xchg   al,bh
   1400134ce:	cdq    
   1400134cf:	mov    eax,0xd763e213
   1400134d4:	icebp  
   1400134d5:	clc    
   1400134d6:	xor    edi,ebp
   1400134d8:	(bad)  
   1400134da:	mov    dh,0x4a
   1400134dc:	repz (bad) 
   1400134df:	(bad)  
   1400134e0:	test   esp,ebx
   1400134e2:	rex.WRXB (bad) 
   1400134e4:	sub    BYTE PTR [rdi-0x1c093d9],0x6e
   1400134eb:	hlt    
   1400134ec:	enter  0xecc3,0xdf
   1400134f0:	mov    eax,0x2f7f1d62
   1400134f5:	loope  0x14001356d
   1400134f7:	scas   al,BYTE PTR es:[rdi]
   1400134f8:	movabs ds:0xff799c04c626da61,al
   140013501:	xor    al,0xef
   140013503:	scas   eax,DWORD PTR es:[rdi]
   140013504:	xor    ch,al
   140013506:	rex.WRXB loope 0x140013588
   140013509:	pop    rdx
   14001350a:	int    0x37
   14001350c:	xchg   edi,eax
   14001350d:	rol    DWORD PTR [rdx+0x2d2ff066],cl
   140013513:	std    
   140013514:	xor    eax,0xc9140437
   140013519:	iret   
   14001351a:	mov    ch,0x5e
   14001351c:	(bad)  
   14001351d:	movabs ds:0x21cf5e64e2046ae1,eax
   140013526:	(bad)  
   140013527:	mov    eax,0x44c08076
   14001352c:	or     cl,BYTE PTR [rdx-0x593ebf33]
   140013532:	cli    
   140013533:	rex.WX sti 
   140013535:	jl     0x14001354e
   140013537:	cmc    
   140013538:	rex.WRXB loopne 0x1400134e2
   14001353b:	jmp    0x10d65879b
   140013540:	call   FWORD PTR [rcx+0x8]
   140013543:	outs   dx,DWORD PTR ds:[rsi]
   140013544:	sbb    al,0x0
   140013546:	mov    ch,0xf0
   140013548:	(bad)  
   140013549:	cmp    DWORD PTR [rcx],esp
   14001354b:	cmp    BYTE PTR [rdx],bh
   14001354d:	retf   
   14001354e:	xchg   BYTE PTR [rdi+0x4c],al
   140013551:	and    BYTE PTR [rdi-0x6cfc58e0],dh
   140013557:	jbe    0x1400134da
   140013559:	nop
   14001355a:	sbb    BYTE PTR [rcx+0x28],ch
   14001355d:	scas   al,BYTE PTR es:[rdi]
   14001355e:	xor    DWORD PTR [rcx],0xffffffc4
   140013561:	hlt    
   140013562:	sbb    BYTE PTR [rdx-0x3],bpl
   140013566:	sbb    DWORD PTR [rdi],0xffc7d397
   14001356c:	scas   al,BYTE PTR es:[rdi]
   14001356d:	ds clc 
   14001356f:	add    ch,BYTE PTR [rcx]
   140013571:	add    bh,BYTE PTR [rax+0x1d]
   140013574:	add    DWORD PTR [rcx+0x56f801bd],0xffca16e5
   14001357e:	fdivr  DWORD PTR [rbp-0x15]
   140013581:	(bad)  
   140013582:	sbb    eax,edx
   140013584:	cld    
   140013585:	rex.X xor ebx,ebp
   140013588:	jne    0x1400135f7
   14001358a:	mov    ecx,0x76a8292d
   14001358f:	mov    esp,0xc7dfec74
   140013594:	(bad)  
   140013595:	repz jmp 0x11dcc540c
   14001359b:	(bad)  
   14001359c:	out    0xbd,eax
   14001359e:	mov    bh,0x98
   1400135a1:	xchg   ecx,eax
   1400135a2:	push   rax
   1400135a3:	mov    ch,0xc5
   1400135a5:	cmp    ah,dh
   1400135a7:	ret    0x9b7c
   1400135aa:	add    BYTE PTR [rsp+rdi*4+0x102326bc],dl
   1400135b1:	xor    ch,BYTE PTR [rax+0x1fd45d26]
   1400135b7:	nop
   1400135b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400135b9:	data16 cmp bl,BYTE PTR [rsi-0x1a]
   1400135bd:	(bad)  
   1400135be:	xchg   ebx,eax
   1400135bf:	out    dx,eax
   1400135c0:	mov    ecx,eax
   1400135c2:	cmc    
   1400135c3:	test   BYTE PTR [rbx-0x54],0x5f
   1400135c7:	cmp    al,0x4d
   1400135c9:	jne    0x140013644
   1400135cb:	or     ebx,DWORD PTR [rcx+0x3fe71aed]
   1400135d1:	sub    DWORD PTR [rdx+0x494fe266],ecx
   1400135d7:	(bad)  
   1400135d9:	adc    esi,ebx
   1400135db:	loope  0x140013591
   1400135dd:	shr    eax,0xe1
   1400135e0:	jo     0x140013614
   1400135e2:	pslld  mm4,QWORD PTR [rip+0xffffffff81ef4d65]        # 0xc1f0834e
   1400135e9:	cmp    DWORD PTR [rbx],esp
   1400135eb:	(bad)  
   1400135ec:	rex.WRXB rol QWORD PTR [rip+0xffffffffd273e2d0],cl        # 0x1127518c3
   1400135f3:	(bad)  
   1400135f4:	sub    ecx,ecx
   1400135f6:	push   rdi
   1400135f7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400135f8:	push   rdi
   1400135f9:	xor    eax,0x37fce07b
   1400135fe:	mov    ah,0xcf
   140013600:	pop    rcx
   140013601:	sub    dl,BYTE PTR [rax]
   140013603:	(bad)  
   140013604:	(bad)  
   140013605:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013606:	rex.W add spl,0xd8
   14001360a:	and    eax,0xfbc8110f
   14001360f:	in     eax,dx
   140013610:	sbb    al,0x85
   140013612:	jbe    0x1400135ca
   140013614:	xchg   edi,eax
   140013615:	ficom  WORD PTR [rcx+0x8da0423]
   14001361b:	(bad)  
   14001361c:	and    al,BYTE PTR [rip+0x7bbfdcb1]        # 0x1bbc112d3
   140013622:	fsub   st(1),st
   140013624:	movabs rbx,0xdf57037183da4b70
   14001362e:	retf   
   14001362f:	in     eax,0x4f
   140013631:	cld    
   140013632:	pop    rbp
   140013633:	(bad)  
   140013634:	cld    
   140013635:	sti    
   140013636:	mov    esp,0xde80d30e
   14001363b:	add    ah,bh
   14001363d:	fiadd  WORD PTR [rax+rsi*1-0x4e]
   140013641:	iret   
   140013642:	sbb    edx,DWORD PTR [rsi+0x7]
   140013645:	(bad)  
   140013646:	sub    al,0x51
   140013648:	call   QWORD PTR [rdx]
   14001364a:	sti    
   14001364b:	mov    ebx,0x40776a0b
   140013650:	or     al,0x87
   140013652:	int    0x63
   140013654:	imul   esi,DWORD PTR [rdi],0x4f
   140013657:	rex.WRXB mov r12b,0xdc
   14001365a:	shl    cl,1
   14001365c:	in     eax,0x37
   14001365e:	mov    dh,0x6
   140013660:	pop    rdi
   140013661:	rex.WXB (bad) 
   140013663:	and    eax,0x4581c344
   140013668:	or     esp,DWORD PTR [rdx-0x71220b96]
   14001366e:	movabs ds:0x4f50f27252706b5b,al
   140013677:	popf   
   140013678:	cmp    ecx,eax
   14001367a:	fcom   QWORD PTR [rax]
   14001367c:	add    edi,DWORD PTR [rax-0x4e049946]
   140013682:	ja     0x1400136d6
   140013684:	(bad)  
   140013685:	jle    0x14001368f
   140013687:	mov    ecx,0xd6e2c5b6
   14001368c:	sub    DWORD PTR [rsi],edx
   14001368e:	mov    edx,0x73e77fb9
   140013693:	xchg   edx,eax
   140013694:	ret    0x247f
   140013697:	and    bh,bh
   140013699:	mov    cl,0xa4
   14001369b:	adc    eax,0x86dabb69
   1400136a0:	(bad)  
   1400136a1:	imul   eax,DWORD PTR [rax],0x39666188
   1400136a7:	ins    BYTE PTR es:[rdi],dx
   1400136a8:	rex.WRXB pop r13
   1400136aa:	jle    0x140013659
   1400136ac:	repnz (bad) 
   1400136ae:	in     eax,0xd5
   1400136b0:	cld    
   1400136b1:	ja     0x14001368e
   1400136b3:	cmp    cl,BYTE PTR [rbx+rbx*1+0x21]
   1400136b7:	rex.WR movabs al,fs:0x92c3474adeb3b573
   1400136c2:	(bad)  
   1400136c3:	xlat   BYTE PTR ds:[rbx]
   1400136c4:	or     al,0xc2
   1400136c6:	movabs eax,ds:0x4526c099bc404da0
   1400136cf:	rex.XB
   1400136d0:	cs ja  0x140013705
   1400136d3:	mov    dh,0x58
   1400136d5:	movabs ds:0x4d39a0940c361285,al
   1400136de:	rex.WB
   1400136df:	shl    BYTE PTR gs:[rdi+rsi*1],0xb0
   1400136e4:	in     eax,0x2f
   1400136e6:	je     0x140013706
   1400136e8:	sbb    ebx,DWORD PTR [rsi+0x10]
   1400136eb:	jmp    0x18b5f2daf
   1400136f0:	xor    ch,BYTE PTR [rax]
   1400136f2:	(bad)  
   1400136f3:	add    eax,0x52d09024
   1400136f8:	mov    dl,BYTE PTR [rip+0xffffffffca3c9f66]        # 0x10a3dd664
   1400136fe:	in     al,0x1f
   140013700:	popf   
   140013701:	xor    BYTE PTR [ebp-0x69],cl
   140013705:	cdq    
   140013706:	adc    DWORD PTR [rsi+0x6f4936e7],0x0
   14001370d:	mov    esi,0xfd079915
   140013712:	mov    cl,ch
   140013714:	movabs ds:0xf359965f93243e59,al
   14001371d:	movabs al,ds:0x5ccdf25dd5232ed6
   140013726:	std    
   140013727:	cmp    eax,0xe0640247
   14001372c:	mov    gs,esp
   14001372e:	fxch   st(1)
   140013730:	cmc    
   140013731:	jnp    0x14001379a
   140013733:	mov    ebp,0x9fb789ff
   140013738:	cmp    al,0xbc
   14001373a:	in     ax,0x4f
   14001373d:	movabs rdi,0xfef26c95c41f6666
   140013747:	movabs eax,ds:0xf56119ea4057f0d
   140013750:	jno    0x14001374b
   140013752:	mov    edi,esi
   140013754:	push   rdx
   140013755:	test   al,al
   140013757:	je     0x140013754
   140013759:	and    eax,0x514fb6d6
   14001375e:	pop    rbp
   14001375f:	mov    ebp,0xd471d488
   140013764:	ja     0x14001373c
   140013766:	xor    ebp,ebp
   140013768:	mov    al,0xfe
   14001376a:	(bad)  
   14001376b:	rex.W (bad) 
   14001376d:	fmul   st,st(0)
   14001376f:	(bad)  
   140013770:	rex.RXB push r14
   140013772:	cli    
   140013773:	sbb    BYTE PTR [rip+0x1cb025b4],cl        # 0x15cb15d2d
   140013779:	sbb    ah,ch
   14001377b:	xchg   ebp,eax
   14001377c:	cmp    eax,0xcacc5fb2
   140013781:	fst    QWORD PTR [rsi+0x8]
   140013784:	fcmove st,st(3)
   140013786:	fisub  DWORD PTR [rip+0xfffffffff904a506]        # 0x13905dc92
   14001378c:	movabs al,ds:0xa3d88e7bf61fd664
   140013795:	sbb    ecx,ebp
   140013797:	rex.RXB (bad) 
   140013799:	mov    BYTE PTR [rbx-0x2ea558cf],0x4b
   1400137a0:	(bad)  
   1400137a1:	xor    al,0x6d
   1400137a4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400137a5:	shr    DWORD PTR [rax],cl
   1400137a7:	(bad)  
   1400137a8:	shr    DWORD PTR [rbx],0x12
   1400137ab:	push   rsi
   1400137ac:	adc    bl,dh
   1400137ae:	jl     0x14001375b
   1400137b0:	adc    BYTE PTR [rax],bl
   1400137b2:	ds nop
   1400137b4:	shl    BYTE PTR [rbx],cl
   1400137b6:	repnz div BYTE PTR [rdx]
   1400137b9:	rex xchg eax,eax
   1400137bb:	repz std 
   1400137bd:	or     BYTE PTR [rcx+0x68],cl
   1400137c0:	mov    ebx,0x7af1108a
   1400137c5:	or     eax,0xc7f679b4
   1400137ca:	in     al,0xc5
   1400137cc:	(bad)  
   1400137cd:	jle    0x140013820
   1400137cf:	(bad)  
   1400137d0:	sti    
   1400137d1:	mul    DWORD PTR [rsp+rcx*4]
   1400137d4:	lock jne 0x140013769
   1400137d7:	(bad)  
   1400137d8:	hlt    
   1400137d9:	(bad)  
   1400137da:	loopne 0x140013777
   1400137dc:	leave  
   1400137dd:	sub    eax,0x2c6f3ec8
   1400137e2:	idiv   bh
   1400137e4:	xchg   edx,eax
   1400137e5:	fwait
   1400137e6:	retf   0xa807
   1400137e9:	mov    esi,DWORD PTR [rsi]
   1400137eb:	inc    BYTE PTR [rbx+0x2ae9b156]
   1400137f1:	movabs ds:0x634bae16dfee8519,eax
   1400137fa:	mov    eax,0x3a168a41
   1400137ff:	int    0x3a
   140013801:	shl    esi,0xf5
   140013804:	in     eax,0xd0
   140013806:	ds (bad) 
   140013808:	loopne 0x14001386b
   14001380a:	and    DWORD PTR [rdx+0x48],esi
   14001380d:	and    eax,0x58ab4d33
   140013812:	mov    dh,0xd4
   140013814:	push   rdi
   140013815:	enter  0xb52d,0xae
   140013819:	sahf   
   14001381a:	jno    0x14001381a
   14001381c:	mov    cl,0x77
   14001381e:	movabs ds:0xede5817cbd33f71b,eax
   140013827:	push   rbx
   140013828:	mov    WORD PTR [rdi-0x50c8dd31],?
   14001382e:	rex.RB cli 
   140013830:	mov    cl,0xe1
   140013832:	(bad)  
   140013833:	(bad)  
   140013834:	cmp    al,0xff
   140013836:	ret    0xbfbc
   140013839:	(bad)  
   14001383a:	mov    esp,0x9bf6dc84
   14001383f:	sbb    BYTE PTR cs:[rax+0x6e],0x8b
   140013844:	sub    DWORD PTR [rbp+0x7c],esi
   140013847:	scas   al,BYTE PTR es:[rdi]
   140013848:	sub    eax,0x89e525fb
   14001384d:	jns    0x14001380e
   14001384f:	mov    bl,0x32
   140013851:	lahf   
   140013852:	int3   
   140013853:	(bad)  
   140013854:	(bad)  
   140013855:	mov    DWORD PTR [rbx],esp
   140013857:	nop
   140013858:	cmp    edi,edi
   14001385a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001385b:	adc    edi,DWORD PTR [rdx-0x19]
   14001385e:	mov    esp,0x96aac81d
   140013863:	xchg   esp,eax
   140013864:	xor    r8,r15
   140013867:	jg     0x1400138d7
   140013869:	cmp    BYTE PTR [rax-0x701bf25a],ch
   14001386f:	in     eax,0xe7
   140013871:	jb     0x14001389e
   140013873:	xor    DWORD PTR [rbp+0x2134a6ed],ebx
   140013879:	mov    ebx,0xc088b76
   14001387e:	pshufw mm3,QWORD PTR [rsi-0x58],0x25
   140013883:	lods   al,BYTE PTR fs:[rsi]
   140013885:	ret    0xf8b9
   140013888:	adc    ebx,DWORD PTR [rdx+0x21501236]
   14001388e:	(bad)  
   14001388f:	and    BYTE PTR [rax-0x39],cl
   140013892:	test   al,0xb1
   140013894:	xor    eax,0xcbfd921
   140013899:	mov    dh,al
   14001389b:	test   al,0x60
   14001389d:	icebp  
   14001389e:	rex.WRB fdivr QWORD PTR [r8+0xe]
   1400138a2:	clc    
   1400138a3:	ins    DWORD PTR es:[rdi],dx
   1400138a4:	mov    esi,0x2dbbadb1
   1400138a9:	rcr    BYTE PTR [rbx],cl
   1400138ab:	sbb    bh,0x4d
   1400138ae:	outs   dx,BYTE PTR ds:[rsi]
   1400138af:	xchg   ecx,eax
   1400138b0:	idiv   DWORD PTR [rdi+0x7f7f2e47]
   1400138b6:	cmp    ebx,esp
   1400138b8:	(bad)  
   1400138b9:	or     BYTE PTR [rsi],cl
   1400138bb:	(bad)
   1400138be:	adc    BYTE PTR [rdi+0x2b],bh
   1400138c1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400138c2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400138c3:	mov    dh,0x4b
   1400138c6:	stc    
   1400138c7:	in     al,dx
   1400138c8:	sbb    al,0x1f
   1400138ca:	fisttp WORD PTR [rax+0x3a]
   1400138cd:	and    DWORD PTR [rsi],edi
   1400138cf:	(bad)  
   1400138d0:	xchg   edi,eax
   1400138d1:	fidiv  DWORD PTR [rdx]
   1400138d3:	pop    rax
   1400138d4:	sub    al,ah
   1400138d6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400138d7:	mov    ebx,0xe52f8b13
   1400138dc:	repz rex.X push 0x6bd26d1b
   1400138e3:	sub    DWORD PTR [rdx],ebp
   1400138e5:	movabs ds:0xcff7e7696905c801,al
   1400138ef:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400138f0:	rex.WR
   1400138f1:	ss out dx,eax
   1400138f3:	out    0xca,eax
   1400138f5:	xchg   ebx,eax
   1400138f6:	out    dx,eax
   1400138f7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400138f8:	cwde   
   1400138f9:	int    0x68
   1400138fb:	cs popf 
   1400138fd:	(bad)  
   1400138fe:	in     eax,dx
   1400138ff:	loop   0x14001388c
   140013901:	adc    al,0x9
   140013903:	stc    
   140013904:	rex.WRXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140013906:	sub    al,0x92
   140013908:	not    DWORD PTR [rdi+0x3809fe08]
   14001390e:	rex.X
   14001390f:	rex.WRX pop rax
   140013911:	xor    ecx,DWORD PTR [rcx+0x2e]
   140013914:	sub    DWORD PTR [rcx],ecx
   140013916:	popf   
   140013917:	rcr    BYTE PTR [rax-0x1097900a],1
   14001391d:	in     al,dx
   14001391e:	ss je  0x1400138bf
   140013921:	rex.WRXB add r10,r10
   140013924:	fwait
   140013925:	push   rdx
   140013926:	imul   edx,DWORD PTR [rax-0x4f8be47c],0x39d17983
   140013930:	and    ebx,DWORD PTR [rbx+0x71c734df]
   140013936:	nop
   140013937:	or     BYTE PTR [rdx],al
   140013939:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001393a:	push   rax
   14001393b:	sub    BYTE PTR [rbp-0x79],bl
   14001393e:	pushf  
   14001393f:	nop
   140013940:	ja     0x140013972
   140013942:	test   DWORD PTR [rsp+riz*4-0x5b87795e],esp
   140013949:	imul   ebp,DWORD PTR [rbp+rbp*1-0x3b],0x66
   14001394e:	ins    BYTE PTR es:[rdi],dx
   14001394f:	(bad)  
   140013950:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013951:	pushf  
   140013952:	mov    eax,0x2337ed0e
   140013957:	cld    
   140013958:	jns    0x140013981
   14001395a:	popf   
   14001395b:	and    esi,DWORD PTR [rdx-0x4b05db83]
   140013961:	pop    rbp
   140013962:	(bad)  
   140013963:	jl     0x1400139af
   140013965:	rex.WXB int3 
   140013967:	ds mov edi,0x5defecc6
   14001396d:	movabs eax,ds:0xd0047b6e8292d19c
   140013976:	ja     0x14001397b
   140013978:	jle    0x14001399d
   14001397a:	imul   ebx,DWORD PTR [rcx+0x7ff4397e],0x1de37173
   140013984:	rex.XB popf 
   140013986:	std    
   140013987:	(bad)
   14001398c:	or     DWORD PTR [rsi-0x46],edi
   14001398f:	xchg   DWORD PTR [rdi+0x7de3dbee],ebx
   140013995:	mov    ch,BYTE PTR [rcx-0x64]
   140013998:	int3   
   140013999:	jrcxz  0x140013941
   14001399b:	jno    0x1400139bf
   14001399d:	(bad)  
   14001399e:	lahf   
   14001399f:	rex.WRX jo 0x1400139b5
   1400139a2:	pop    rbx
   1400139a3:	xchg   ebp,eax
   1400139a4:	cmp    cl,BYTE PTR [ecx+0x29d3791d]
   1400139ab:	cmp    bl,BYTE PTR [rbp+0x42536612]
   1400139b1:	cmp    eax,0xe938eb41
   1400139b6:	(bad)  
   1400139b7:	jmp    0x140013997
   1400139b9:	jae    0x14001397c
   1400139bb:	pop    rdx
   1400139bc:	jp     0x140013a01
   1400139be:	sbb    eax,0x1ca9ffb9
   1400139c3:	cwde   
   1400139c4:	cwde   
   1400139c5:	test   BYTE PTR [rbp+0x1a],dh
   1400139c8:	or     DWORD PTR [rsi-0x39],edx
   1400139cb:	rex.W and al,BYTE PTR [rbx-0x3b572e7a]
   1400139d2:	hlt    
   1400139d3:	add    DWORD PTR [rax+0x2],ebp
   1400139d6:	test   DWORD PTR [rdx],ebp
   1400139d8:	pop    rbx
   1400139d9:	iret   
   1400139da:	jl     0x1400139e4
   1400139dc:	push   rsi
   1400139dd:	(bad)  
   1400139de:	push   rdx
   1400139df:	pop    rdi
   1400139e0:	(bad)  [rdx+0x75]
   1400139e3:	sti    
   1400139e4:	adc    al,0xc3
   1400139e6:	rex.WXB out 0x71,eax
   1400139e9:	mov    ebx,0x9ff223d7
   1400139ee:	rex.XB pop r9
   1400139f0:	imul   edi,edx,0x11
   1400139f3:	leave  
   1400139f4:	movabs eax,ds:0x2de671fc473093bf
   1400139fd:	fisttp DWORD PTR [rcx-0x41]
   140013a00:	xchg   edx,eax
   140013a01:	ret    
   140013a02:	jp     0x140013a4b
   140013a04:	(bad)  
   140013a05:	std    
   140013a06:	outs   dx,DWORD PTR ds:[rsi]
   140013a07:	cmp    eax,0xa7a10924
   140013a0c:	push   rbx
   140013a0d:	or     eax,0xe77fb948
   140013a12:	jge    0x140013a3d
   140013a14:	jne    0x140013a06
   140013a16:	imul   esi,DWORD PTR [rsi],0xc80f0760
   140013a1c:	(bad)  
   140013a1d:	and    eax,ebx
   140013a1f:	jrcxz  0x1400139b5
   140013a21:	retf   
   140013a22:	(bad)  
   140013a23:	in     eax,0xcf
   140013a25:	xchg   BYTE PTR [rbx],ah
   140013a27:	test   esi,edi
   140013a29:	sar    dh,cl
   140013a2b:	popf   
   140013a2c:	pop    rdi
   140013a2d:	imul   edx,ebx,0xffffff86
   140013a30:	mov    ecx,0xba292320
   140013a35:	in     eax,0x1f
   140013a37:	jns    0x140013a69
   140013a39:	rex.W (bad) 
   140013a3b:	sub    dl,BYTE PTR [rcx]
   140013a3d:	addr32 mov esi,es
   140013a40:	(bad)  
   140013a41:	jne    0x140013a8b
   140013a43:	movs   BYTE PTR es:[rdi],BYTE PTR ss:[rsi]
   140013a45:	and    DWORD PTR [rbx+0x70],0xffffffe0
   140013a49:	pop    rdx
   140013a4a:	mov    ah,0x47
   140013a4c:	fiadd  WORD PTR [rip+0xfffffffff0929547]        # 0x13093cf99
   140013a52:	(bad)  
   140013a53:	iret   
   140013a54:	retf   
   140013a55:	xlat   BYTE PTR ds:[rbx]
   140013a56:	fmulp  st(6),st
   140013a58:	jmp    0x140013a06
   140013a5a:	rex.XB mov r8b,0x8f
   140013a5d:	add    BYTE PTR [rsi+0x25],ch
   140013a60:	mov    bh,0x68
   140013a62:	lock cmp DWORD PTR [rsi-0x1ed17020],edi
   140013a69:	jg     0x140013aa4
   140013a6b:	mov    eax,0xd8d306c1
   140013a70:	(bad)  
   140013a71:	sbb    esi,DWORD PTR [rbx-0xf]
   140013a74:	js     0x140013a99
   140013a76:	rex.RXB jbe 0x140013ae1
   140013a79:	repnz shl dh,1
   140013a7c:	jge    0x140013af0
   140013a7e:	and    DWORD PTR [rdx-0x10b068a5],edi
   140013a84:	mov    cl,0xe8
   140013a86:	sar    BYTE PTR [rsp+rdi*2],0xfa
   140013a8a:	pop    rbx
   140013a8b:	rex.X stos BYTE PTR es:[rdi],al
   140013a8d:	cmps   DWORD PTR gs:[rsi],DWORD PTR es:[rdi]
   140013a8f:	xchg   ebp,eax
   140013a90:	jp     0x140013a27
   140013a92:	outs   dx,BYTE PTR ds:[rsi]
   140013a93:	(bad)  
   140013a94:	sub    al,0xe9
   140013a96:	mov    ecx,0x597bc924
   140013a9b:	(bad)  
   140013a9c:	xchg   ecx,eax
   140013a9d:	(bad)  
   140013a9e:	enter  0x274d,0xec
   140013aa2:	sbb    eax,0xdf97237f
   140013aa7:	clc    
   140013aa8:	sub    al,0xd5
   140013aaa:	fs (bad) 
   140013aac:	mov    dh,0x5f
   140013aae:	movs   DWORD PTR es:[rdi],DWORD PTR fs:[rsi]
   140013ab0:	jrcxz  0x140013aaf
   140013ab2:	movsxd eax,DWORD PTR [rdi]
   140013ab4:	pop    rsp
   140013ab5:	(bad)  
   140013ab6:	jge    0x140013ac5
   140013ab8:	(bad)  
   140013ab9:	stc    
   140013aba:	ja     0x140013ad0
   140013abc:	stos   BYTE PTR es:[rdi],al
   140013abd:	adc    al,0x4e
   140013abf:	jae    0x140013a9a
   140013ac1:	(bad)  
   140013ac2:	scas   eax,DWORD PTR es:[rdi]
   140013ac3:	not    DWORD PTR [rdi+0x18a8f751]
   140013ac9:	sbb    DWORD PTR [rsp+rsi*4],eax
   140013acc:	test   DWORD PTR [rcx],0x4c6f68ed
   140013ad2:	jno    0x140013b0c
   140013ad4:	mov    al,0xea
   140013ad6:	(bad)  
   140013ad7:	mov    ebp,0x292835b1
   140013adc:	(bad)  
   140013add:	outs   dx,BYTE PTR ds:[rsi]
   140013ade:	and    DWORD PTR [rcx+rcx*8+0x3a],ecx
   140013ae2:	sub    al,0x59
   140013ae4:	loope  0x140013a9a
   140013ae6:	jae    0x140013ad6
   140013ae8:	xchg   edx,eax
   140013ae9:	rex.XB sti 
   140013aeb:	xchg   esp,eax
   140013aec:	adc    eax,0x1c7cb9b4
   140013af1:	mul    cl
   140013af3:	sub    al,0x5d
   140013af5:	mov    bh,bl
   140013af7:	iret   
   140013af8:	xchg   ebp,eax
   140013af9:	xchg   edx,eax
   140013afa:	mov    eax,0x3fe103f5
   140013aff:	pop    rcx
   140013b00:	xor    DWORD PTR [rip+0xffffffffef35230d],0x1d88e2f        # 0x12f365e17
   140013b0a:	enter  0xe37c,0x53
   140013b0e:	fwait
   140013b0f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013b10:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013b11:	(bad)  
   140013b12:	mov    esi,0xc250f2b3
   140013b17:	ins    BYTE PTR es:[rdi],dx
   140013b18:	movabs al,ds:0x9b909d19094e41dd
   140013b21:	lahf   
   140013b22:	add    esi,edi
   140013b24:	(bad)  
   140013b25:	pop    rsi
   140013b26:	rex.RXB imul r8d,DWORD PTR [r8+0x6f],0x7adc9200
   140013b2e:	push   rbp
   140013b2f:	pop    rsi
   140013b30:	sete   bl
   140013b33:	stos   BYTE PTR es:[rdi],al
   140013b34:	sbb    al,0xdd
   140013b36:	mov    edi,0xdcd7f4b9
   140013b3b:	cs rex.WRXB jmp 0x140013b3d
   140013b3f:	scas   al,BYTE PTR es:[rdi]
   140013b40:	rex.WRB popf 
   140013b42:	or     ch,al
   140013b44:	fs (bad) 
   140013b46:	(bad)  
   140013b47:	out    0xec,eax
   140013b49:	sbb    BYTE PTR [rsi+0x39],0xff
   140013b4d:	jmp    0x140013b3f
   140013b4f:	out    dx,eax
   140013b50:	adc    esi,DWORD PTR [rdi-0x23]
   140013b53:	(bad)  
   140013b54:	xor    r8b,BYTE PTR [rdx+0x6f]
   140013b58:	(bad)  
   140013b59:	and    BYTE PTR [rbx+0x2a52d6],dh
   140013b5f:	sbb    eax,0x64ff8fa5
   140013b64:	or     al,0x21
   140013b66:	add    eax,0xdb6fe9ae
   140013b6b:	xchg   edi,eax
   140013b6c:	rex retf 
   140013b6e:	xchg   BYTE PTR [rbx+0x2],ch
   140013b71:	(bad)  
   140013b72:	jnp    0x140013b42
   140013b74:	mov    esp,0xc2dc39f5
   140013b79:	sbb    dh,ch
   140013b7b:	(bad)
   140013b7e:	fidivr DWORD PTR [rsi]
   140013b80:	int    0xf0
   140013b82:	mov    dl,0x79
   140013b84:	jmp    QWORD PTR [rsi-0x26]
   140013b87:	cs jg  0x140013bf7
   140013b8a:	cmp    al,0x7f
   140013b8c:	(bad)  
   140013b8d:	mov    dh,0xca
   140013b8f:	(bad)  
   140013b90:	loopne 0x140013bc6
   140013b92:	loopne 0x140013c01
   140013b94:	xchg   ecx,eax
   140013b95:	mov    WORD PTR [rsp+rsi*8+0xf936dc9],gs
   140013b9c:	and    esp,DWORD PTR [rdx+0x10]
   140013b9f:	or     ebp,eax
   140013ba1:	cmp    esi,DWORD PTR [rax]
   140013ba3:	leave  
   140013ba4:	(bad)  
   140013ba5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013ba6:	rcr    BYTE PTR [rcx-0x2e],0xb6
   140013baa:	adc    cl,bl
   140013bac:	(bad)  
   140013bad:	xchg   esp,eax
   140013bae:	rex.WRX
   140013baf:	imul   rdx,QWORD PTR [rbx+rdx*8],0xffffffffffffffce
   140013bb4:	push   rdx
   140013bb5:	pop    rdx
   140013bb6:	sar    DWORD PTR [rcx],1
   140013bb8:	(bad)
   140013bbb:	push   rsi
   140013bbc:	icebp  
   140013bbd:	and    eax,0xa3353d1b
   140013bc2:	(bad)  
   140013bc3:	adc    cl,bl
   140013bc5:	sbb    DWORD PTR [rcx-0x35],0x8d12b7d3
   140013bcc:	rex.WR movabs rbx,0xb8b812779a1b6866
   140013bd6:	or     eax,0xd90daec1
   140013bdb:	sbb    BYTE PTR [rax],bh
   140013bdd:	(bad)  
   140013bde:	rex.W mov bpl,bpl
   140013be1:	shr    DWORD PTR [rdx+0x4c],0xcb
   140013be5:	rex.WRX
   140013be6:	rex xchg eax,eax
   140013be8:	jne    0x140013ba9
   140013bea:	or     edi,DWORD PTR [rax]
   140013bec:	cmp    ah,BYTE PTR [rdx]
   140013bee:	es cdq 
   140013bf0:	rex.WX test QWORD PTR [rsi],rcx
   140013bf3:	gs rex.B
   140013bf5:	fwait
   140013bf6:	(bad)  
   140013bf7:	jge    0x140013b90
   140013bf9:	pop    rsp
   140013bfa:	clc    
   140013bfb:	(bad)  
   140013bfd:	rex.X (bad) 
   140013bff:	ins    BYTE PTR es:[rdi],dx
   140013c00:	xchg   ecx,eax
   140013c01:	rol    al,0xdb
   140013c04:	pushf  
   140013c05:	(bad)  
   140013c06:	hlt    
   140013c07:	(bad)  
   140013c08:	loopne 0x140013be0
   140013c0a:	mov    bl,BYTE PTR [rdi-0x4841006b]
   140013c10:	mov    esi,0xcba3fefb
   140013c15:	ret    
   140013c16:	(bad)  
   140013c17:	push   rbp
   140013c18:	pop    rsp
   140013c19:	jp     0x140013c04
   140013c1b:	mov    esp,DWORD PTR [rdx+0xa9c4db5]
   140013c21:	xor    al,0xa1
   140013c23:	shl    DWORD PTR [rdi-0x2139a4cf],0xcb
   140013c2a:	(bad)  
   140013c2b:	(bad)  
   140013c2c:	in     al,dx
   140013c2d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013c2e:	mov    ds,esi
   140013c30:	(bad)  
   140013c31:	xchg   ecx,eax
   140013c32:	sbb    eax,0x65ec6673
   140013c37:	jnp    0x140013c0a
   140013c39:	xor    DWORD PTR [rsi],eax
   140013c3b:	cdq    
   140013c3c:	(bad)
   140013c3f:	shl    dl,1
   140013c41:	add    dh,dh
   140013c43:	neg    DWORD PTR [esi-0x77]
   140013c47:	pop    rax
   140013c48:	rex.XB mov r12d,0x314e64f3
   140013c4e:	adc    eax,0xf6b94e99
   140013c53:	clc    
   140013c54:	cmp    edi,DWORD PTR [rcx+0x307786fe]
   140013c5a:	fidivr WORD PTR [rdi-0x7e812077]
   140013c60:	in     eax,0xed
   140013c62:	xor    edx,DWORD PTR [rdi+rdx*2]
   140013c65:	mov    bh,0xa1
   140013c67:	fimul  WORD PTR [rbx+0x76112296]
   140013c6d:	and    eax,0xa6c47f11
   140013c72:	std    
   140013c73:	mov    dh,0xd3
   140013c75:	jle    0x140013c31
   140013c77:	fimul  WORD PTR [rdi]
   140013c79:	imul   ebp,DWORD PTR [rcx],0x50036dc0
   140013c7f:	jmp    0x140013c66
   140013c81:	repz movabs al,ds:0x4459f7a40466c14c
   140013c8b:	ror    BYTE PTR [rcx+0x1],1
   140013c8e:	pop    rdx
   140013c8f:	loopne 0x140013cc1
   140013c91:	sbb    bl,BYTE PTR [rdi-0x6d8f4712]
   140013c97:	icebp  
   140013c98:	xor    BYTE PTR [rdx],bl
   140013c9a:	scas   eax,DWORD PTR es:[rdi]
   140013c9b:	fs fcmovnbe st,st(0)
   140013c9e:	push   rcx
   140013c9f:	xlat   BYTE PTR ds:[rbx]
   140013ca0:	pop    rsp
   140013ca1:	jne    0x140013c8c
   140013ca3:	pop    rsp
   140013ca4:	imul   esi,DWORD PTR [rbx],0x7e
   140013ca7:	jmp    0xff9596dc
   140013cac:	jnp    0x140013cd7
   140013cae:	(bad)  [rbp-0x1cbaaff]
   140013cb4:	in     al,0xa8
   140013cb6:	and    BYTE PTR [rdx+0x9],dh
   140013cb9:	xchg   edx,eax
   140013cba:	xchg   ecx,eax
   140013cbb:	adc    bh,ah
   140013cbd:	adc    BYTE PTR [rdi+0x6b6808a6],dl
   140013cc3:	out    0x92,eax
   140013cc5:	xchg   ecx,eax
   140013cc6:	mov    al,0xe8
   140013cc8:	(bad)  
   140013cc9:	mov    ecx,0xf60838b8
   140013cce:	fucom  st(6)
   140013cd0:	push   0x1fb7d346
   140013cd5:	lahf   
   140013cd6:	rex.RXB movabs al,ds:0x2ff9deb629fe3c20
   140013ce0:	cmp    dl,dh
   140013ce2:	mov    edi,0x6e034dd2
   140013ce7:	movsxd esi,DWORD PTR [rip+0x35dee0]        # 0x140371bcd
   140013ced:	repz retf 
   140013cef:	je     0x140013d0e
   140013cf1:	push   rsp
   140013cf2:	jl     0x140013cf3
   140013cf4:	in     al,dx
   140013cf5:	addr32 mov esi,0x6d64ecf0
   140013cfb:	repz mov esi,DWORD PTR [rbp-0x2a348836]
   140013d02:	or     eax,DWORD PTR [rdi+0x74]
   140013d05:	imul   DWORD PTR [rdx]
   140013d07:	pop    rdx
   140013d08:	out    dx,eax
   140013d09:	(bad)  
   140013d0a:	fwait
   140013d0b:	mov    bl,0x69
   140013d0d:	push   0xffffffffe282069a
   140013d12:	lods   eax,DWORD PTR ds:[rsi]
   140013d13:	pushf  
   140013d14:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013d15:	sbb    ah,BYTE PTR [rdi-0x10]
   140013d18:	int    0x95
   140013d1a:	lods   al,BYTE PTR ds:[rsi]
   140013d1b:	mov    edx,0xb4002c92
   140013d20:	ficomp WORD PTR [rax+rsi*1-0x12]
   140013d24:	jle    0x140013d61
   140013d26:	test   DWORD PTR cs:[ecx+ebx*2+0x3f8853a7],esi
   140013d2f:	out    0xf0,eax
   140013d31:	xchg   ebx,eax
   140013d32:	(bad)  
   140013d33:	or     edx,DWORD PTR [rsi]
   140013d35:	jne    0x140013ced
   140013d37:	(bad)  
   140013d38:	test   DWORD PTR [rsi-0x7a],esp
   140013d3b:	or     al,0xc7
   140013d3d:	pushf  
   140013d3e:	jns    0x140013d2b
   140013d40:	(bad)  
   140013d41:	sbb    DWORD PTR [rbx+rcx*1+0x34],edx
   140013d45:	(bad)  
   140013d46:	sahf   
   140013d47:	addr32 jae 0x140013d35
   140013d4a:	xor    al,0xd5
   140013d4c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013d4d:	repz enter 0xdfe,0xd0
   140013d52:	pop    rcx
   140013d53:	sbb    esp,DWORD PTR [rdx+0x63]
   140013d56:	adc    edi,DWORD PTR [rsi+0x24]
   140013d59:	sar    DWORD PTR [rsi-0x2d],1
   140013d5c:	ror    BYTE PTR [rdi+0x5dcc6258],0x7b
   140013d63:	popf   
   140013d64:	mov    esp,0x4723593d
   140013d69:	rex.X clc 
   140013d6b:	fninit 
   140013d6d:	rex.WX cmp BYTE PTR [rdx+0x76],0xf7
   140013d72:	xchg   edx,eax
   140013d73:	push   rdx
   140013d74:	add    BYTE PTR [rip+0xffffffff8ab706b5],ah        # 0xcab8442f
   140013d7a:	adc    al,0x7f
   140013d7c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013d7d:	push   rsp
   140013d7e:	cmp    eax,0x3af9bd1b
   140013d83:	movabs eax,ds:0xc591ae90231dab3d
   140013d8c:	icebp  
   140013d8d:	sub    ebp,ecx
   140013d8f:	rex.WX (bad) 
   140013d91:	rcl    BYTE PTR [rsi+rcx*2+0x7778db4],1
   140013d98:	ror    DWORD PTR [rbx],cl
   140013d9a:	xor    eax,0x6307c23
   140013d9f:	iret   
   140013da0:	jg     0x140013ddd
   140013da2:	jmp    0x16ad99353
   140013da7:	jge    0x140013d5d
   140013da9:	jns    0x140013e14
   140013dab:	mov    WORD PTR [rax-0x56],ds
   140013dae:	cmc    
   140013daf:	mov    bh,0xc7
   140013db1:	and    al,0x29
   140013db3:	in     al,0xcf
   140013db5:	push   rsi
   140013db6:	test   al,0xb3
   140013db8:	in     eax,0xf8
   140013dba:	mov    edx,0xbbff631c
   140013dbf:	cmp    edi,0x46d1980d
   140013dc5:	add    DWORD PTR [rdi+0x32dee4d],esi
   140013dcb:	lock lea edi,[rbp+0x23fc03bd]
   140013dd2:	iret   
   140013dd3:	mov    esp,0x47c1ed7d
   140013dd8:	(bad)  
   140013dd9:	sti    
   140013dda:	push   rsp
   140013ddb:	xor    eax,0xfbd97d1e
   140013de0:	(bad)  
   140013de1:	cmp    eax,0xb858ae7b
   140013de6:	mov    fs,WORD PTR [rbx+0x5612af19]
   140013dec:	(bad)  
   140013ded:	jrcxz  0x140013d8a
   140013def:	cdq    
   140013df0:	and    eax,edi
   140013df2:	mov    cl,0xcb
   140013df4:	(bad)  
   140013df5:	adc    BYTE PTR [rbx+rbp*2+0x259e89af],ch
   140013dfc:	sub    BYTE PTR [rdx-0x39],dl
   140013dff:	leave  
   140013e00:	cmp    al,0xa2
   140013e02:	test   eax,0x98f6cce3
   140013e07:	jb     0x140013e87
   140013e09:	xchg   edx,eax
   140013e0a:	(bad)  
   140013e0b:	vhsubps xmm5,xmm12,XMMWORD PTR [rsi]
   140013e0f:	xchg   edi,eax
   140013e10:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013e11:	movabs ds:0xf9496b18e687ede0,eax
   140013e1a:	movabs ds:0xb099ae2884d3744e,eax
   140013e23:	std    
   140013e24:	clc    
   140013e25:	(bad)  
   140013e26:	fnstcw WORD PTR [rdi]
   140013e28:	icebp  
   140013e29:	or     al,0xc3
   140013e2b:	pop    rbp
   140013e2c:	sbb    esi,ebx
   140013e2e:	mov    ebp,0xc6fe32fd
   140013e33:	adc    eax,0xc89d27a8
   140013e38:	and    al,0xba
   140013e3a:	(bad)
   140013e3d:	ja     0x140013eb7
   140013e3f:	xor    eax,0x7fd09fef
   140013e44:	imul   ebp,DWORD PTR [rdi],0x62e0f44c
   140013e4a:	rex.RX mov DWORD PTR [rdx],0xce3f217c
   140013e51:	movabs al,ds:0x4a7cc0191c9e7e5f
   140013e5a:	sar    BYTE PTR [rdx-0x5],1
   140013e5d:	jns    0x140013ec1
   140013e5f:	push   rax
   140013e60:	mov    dl,0x8
   140013e62:	jae    0x140013eae
   140013e64:	sbb    DWORD PTR [rcx+rbp*1],edx
   140013e67:	adc    cl,BYTE PTR [rcx-0x33a8d5d9]
   140013e6d:	jmp    0x140013eaa
   140013e6f:	sbb    al,0x4
   140013e71:	mov    ch,0x9c
   140013e73:	lahf   
   140013e74:	js     0x140013eb3
   140013e76:	push   rdx
   140013e77:	addr32 jno 0x140013ec5
   140013e7a:	and    DWORD PTR [rsi-0x2d],ebp
   140013e7d:	scas   eax,DWORD PTR es:[rdi]
   140013e7e:	xchg   esp,eax
   140013e7f:	sub    bl,BYTE PTR [rcx+0x7f5f5aaa]
   140013e85:	mov    edx,0x9fe86d70
   140013e8a:	xor    DWORD PTR [rdx],eax
   140013e8c:	or     DWORD PTR [rax+0x62],0xffffffd4
   140013e90:	(bad)
   140013e95:	add    BYTE PTR [rax+0x4750230],dl
   140013e9b:	or     DWORD PTR [rcx+0x88e4474],ebx
   140013ea1:	or     al,0xdf
   140013ea3:	rex.W cmp BYTE PTR [rax],al
   140013ea6:	xor    BYTE PTR [rdx+0x720fc0fe],ah
   140013eac:	out    0xf0,al
   140013eae:	(bad)  
   140013eaf:	in     al,0xc4
   140013eb1:	rex.WXB
   140013eb2:	rex
   140013eb3:	rex.WRB mov WORD PTR [r10],es
   140013eb6:	outs   dx,BYTE PTR ds:[rsi]
   140013eb7:	pop    rbx
   140013eb8:	xchg   eax,esp
   140013eba:	mov    ebp,0x89be0061
   140013ebf:	mov    bh,0x7f
   140013ec1:	mul    DWORD PTR [rdi+0x78d4ff3f]
   140013ec7:	gs in  eax,dx
   140013ec9:	jae    0x140013f20
   140013ecb:	xor    eax,0xbbd29efc
   140013ed0:	(bad)  
   140013ed1:	and    DWORD PTR ss:[rax],esp
   140013ed4:	movabs eax,ds:0xe2cec15de09eb166
   140013edd:	and    dl,bl
   140013edf:	loop   0x140013f22
   140013ee1:	mov    ah,0xa8
   140013ee3:	sub    BYTE PTR [rdi],ch
   140013ee5:	popf   
   140013ee6:	mov    ebx,esp
   140013ee8:	mov    eax,0x666f850c
   140013eed:	or     eax,0xbbfad53e
   140013ef2:	lods   al,BYTE PTR ds:[rsi]
   140013ef3:	mov    ebp,0x460f8666
   140013ef8:	fdiv   DWORD PTR [rcx]
   140013efa:	sub    edx,DWORD PTR [rax-0xd671c47]
   140013f00:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013f01:	in     eax,0xad
   140013f03:	repz pop rbp
   140013f05:	scas   eax,DWORD PTR es:[rdi]
   140013f06:	jmp    0xe6e064a9
   140013f0b:	fnsave [rdx+0x17]
   140013f0e:	popf   
   140013f0f:	sbb    ecx,DWORD PTR [rsi+rsi*8-0x2dcc13b1]
   140013f16:	(bad)  
   140013f17:	test   ch,ah
   140013f19:	rex.WRB (bad) 
   140013f1b:	mov    esp,0x9c0c13e5
   140013f20:	rex.RXB scas eax,DWORD PTR es:[rdi]
   140013f22:	pushf  
   140013f23:	gs jne 0x140013f21
   140013f26:	rex.RB stos BYTE PTR es:[rdi],al
   140013f28:	sub    edx,DWORD PTR [rdi]
   140013f2a:	ficomp DWORD PTR [rcx+0x7f]
   140013f2d:	adc    dh,BYTE PTR [rbx]
   140013f2f:	rcl    BYTE PTR [rbx+rax*8-0x85d1de9],cl
   140013f36:	push   rdi
   140013f37:	lods   al,BYTE PTR ds:[rsi]
   140013f38:	out    0xbf,eax
   140013f3a:	mov    bl,0xd2
   140013f3c:	(bad)  
   140013f3d:	mov    ah,0xde
   140013f3f:	(bad)  
   140013f41:	pop    rbx
   140013f42:	pop    rcx
   140013f43:	mov    ecx,0x2ec6b2b3
   140013f48:	cmp    cl,cl
   140013f4a:	rex.XB
   140013f4b:	rex.X cmp al,bl
   140013f4e:	(bad)  
   140013f4f:	movabs eax,ds:0xefa48028da45fb45
   140013f58:	lods   eax,DWORD PTR ds:[rsi]
   140013f59:	(bad)  
   140013f5a:	outs   dx,BYTE PTR ds:[rsi]
   140013f5b:	fwait
   140013f5c:	mov    edx,edx
   140013f5e:	adc    edx,edx
   140013f60:	(bad)  
   140013f61:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013f62:	push   rsi
   140013f63:	loope  0x140013f52
   140013f65:	fstp   QWORD PTR [rbp-0x6692eaf5]
   140013f6b:	sbb    eax,0x6fab58a3
   140013f70:	(bad)  
   140013f71:	(bad)  
   140013f72:	ins    BYTE PTR es:[rdi],dx
   140013f73:	pop    rbx
   140013f74:	outs   dx,BYTE PTR ds:[rsi]
   140013f75:	or     eax,0x79213a44
   140013f7a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013f7b:	mov    esi,0xace35e49
   140013f80:	cmp    eax,0x889756f
   140013f85:	imul   r15d,DWORD PTR [rax+0x3592373a],0x24
   140013f8d:	and    bx,WORD PTR [rbp*2+0x395a3473]
   140013f95:	movabs ds:0x41fe3c25e2409033,al
   140013f9e:	mov    ecx,0xa87fe1f4
   140013fa3:	(bad)  
   140013fa4:	(bad)  
   140013fa5:	xor    DWORD PTR [rbp-0x7fac1283],ebp
   140013fab:	push   rdi
   140013fac:	pop    rbp
   140013fad:	mov    esi,0xe87fb789
   140013fb2:	lods   eax,DWORD PTR ds:[rsi]
   140013fb3:	out    dx,eax
   140013fb4:	pop    rsp
   140013fb5:	cmp    edx,esi
   140013fb7:	enter  0xef63,0x1b
   140013fbb:	(bad)  
   140013fbc:	sub    al,0x7f
   140013fbe:	(bad)  
   140013fbf:	(bad)  
   140013fc0:	in     eax,0xfb
   140013fc2:	(bad)  
   140013fc3:	mov    al,0x11
   140013fc5:	or     eax,0x570e475
   140013fca:	(bad)  
   140013fcb:	jle    0x140014009
   140013fcd:	push   0x26
   140013fcf:	push   rsp
   140013fd0:	movabs eax,ds:0xba9c79b7b25546e6
   140013fd9:	sub    BYTE PTR [rcx],dl
   140013fdb:	out    0x23,eax
   140013fdd:	gs mov bh,0xa9
   140013fe0:	movabs eax,ds:0xec17134d140869a9
   140013fe9:	int3   
   140013fea:	imul   ebp,esi,0x29
   140013fed:	rex.WX sbb rax,0x6d08ae17
   140013ff3:	push   0x30
   140013ff5:	test   DWORD PTR [rbp-0x59],0x1d8bbeaf
   140013ffc:	nop
   140013ffd:	adc    al,0xbe
   140013fff:	cmp    eax,DWORD PTR [rdx+0x3c]
   140014002:	jns    0x140014003
   140014004:	or     DWORD PTR [rdx+0x2a88f9d0],0x5e
   14001400b:	imul   ecx,esi,0xffffffbc
   14001400e:	in     eax,0xa3
   140014010:	xor    al,0x87
   140014012:	fild   WORD PTR [rax-0x5a7a8645]
   140014018:	mov    esp,DWORD PTR [rdi+0x167cb858]
   14001401e:	mov    bh,0x73
   140014020:	add    eax,0xb42404c2
   140014025:	sahf   
   140014026:	xchg   ecx,eax
   140014027:	fsub   st,st(3)
   140014029:	out    dx,eax
   14001402a:	and    eax,0x304fd35
   14001402f:	add    DWORD PTR [rbp-0x2c4a01bb],esi
   140014035:	(bad)  
   140014036:	rex.XB push r12
   140014038:	add    BYTE PTR [rdi+0x7d7915ee],ah
   14001403e:	or     DWORD PTR cs:[rcx-0x2069317b],0xffffffa7
   140014046:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014047:	ret    0x5245
   14001404a:	push   rbp
   14001404b:	movabs al,ds:0x2d9fde5a19e232fd
   140014054:	rex.X (bad) 
   140014056:	xchg   esp,eax
   140014057:	rex.WRXB (bad) 
   140014059:	jg     0x1400140d6
   14001405b:	mov    ?,ecx
   14001405d:	push   rdx
   14001405e:	in     al,0x32
   140014060:	movabs al,ds:0x84185b75f93e8101
   140014069:	ss fcmovbe st,st(2)
   14001406c:	(bad)  
   14001406d:	push   rdi
   14001406e:	jb     0x14001409e
   140014070:	pop    rsp
   140014071:	out    dx,eax
   140014072:	pop    rsi
   140014073:	mov    edx,0xfbaf8b0e
   140014078:	(bad)  
   140014079:	mov    BYTE PTR [rbp-0x6e7d92cf],dl
   14001407f:	adc    eax,ecx
   140014081:	mov    eax,esi
   140014083:	mov    ebx,0x25f9b323
   140014088:	(bad)  
   140014089:	add    al,0xf6
   14001408b:	and    DWORD PTR [rbx],ecx
   14001408d:	or     al,0xda
   14001408f:	enter  0x25ad,0x31
   140014093:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014094:	jae    0x1400140e6
   140014096:	(bad)  
   140014097:	jne    0x14001408b
   140014099:	rex.WB loopne 0x14001411b
   14001409c:	movabs ds:0xee5db7fbac92141d,al
   1400140a5:	add    esi,DWORD PTR ds:[rax]
   1400140a8:	scas   eax,DWORD PTR es:[rdi]
   1400140a9:	clc    
   1400140aa:	out    dx,al
   1400140ab:	ror    BYTE PTR [rdi-0x601c1981],0x7d
   1400140b2:	ret    
   1400140b3:	repnz loope 0x140014059
   1400140b6:	lahf   
   1400140b7:	scas   eax,DWORD PTR es:[rdi]
   1400140b8:	(bad)  
   1400140b9:	or     edi,0xffffffab
   1400140bc:	(bad)  
   1400140bd:	ficomp WORD PTR [rsi-0x6c5989c4]
   1400140c3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400140c4:	cmp    al,0xdd
   1400140c6:	(bad)  
   1400140c7:	push   rbp
   1400140c8:	sbb    al,0x45
   1400140ca:	test   al,0x59
   1400140cc:	ins    DWORD PTR es:[rdi],dx
   1400140cd:	data16 mov WORD PTR [rbp+rax*8-0x73],ds
   1400140d2:	(bad)  
   1400140d3:	movabs ds:0x1d291497c2928acc,eax
   1400140dc:	rol    BYTE PTR [rax+0x30],1
   1400140df:	(bad)  
   1400140e0:	mov    edi,0xaa1fa75a
   1400140e5:	add    al,0xd
   1400140e7:	mov    cl,0x3d
   1400140e9:	pop    rax
   1400140ea:	adc    eax,0x93409ad5
   1400140ef:	xchg   ebp,eax
   1400140f0:	mov    ebx,0xeb7aa7d3
   1400140f5:	out    0x52,eax
   1400140f7:	sub    BYTE PTR [rbx+0x20],bh
   1400140fa:	rex.XB pushf 
   1400140fc:	sti    
   1400140fd:	rex.W jbe 0x14001417d
   140014100:	loopne 0x140014168
   140014102:	sti    
   140014103:	in     al,dx
   140014104:	sahf   
   140014105:	js     0x140014089
   140014107:	jae    0x140014158
   140014109:	(bad)  
   14001410a:	(bad)  
   14001410b:	push   rax
   14001410c:	add    ebx,DWORD PTR [rdx+rdi*2-0x77]
   140014110:	(bad)  
   140014111:	mov    esp,DWORD PTR [rdi-0x3ba351d7]
   140014117:	in     eax,dx
   140014118:	out    dx,eax
   140014119:	and    dl,bl
   14001411b:	sbb    cl,ch
   14001411d:	xlat   BYTE PTR ds:[rbx]
   14001411e:	fldcw  WORD PTR [rsi-0x3b1cb1fe]
   140014124:	lahf   
   140014125:	fsubr  st,st(5)
   140014127:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014128:	cdq    
   140014129:	cmc    
   14001412a:	xchg   edi,eax
   14001412b:	sub    ah,BYTE PTR [rdx+0xe]
   14001412e:	jb     0x1400140e7
   140014130:	popf   
   140014131:	jp     0x140014119
   140014133:	mov    esp,0x45d70a7e
   140014138:	call   0xd514e3e9
   14001413d:	ds (bad) 
   14001413f:	std    
   140014140:	je     0x1400140df
   140014142:	xor    BYTE PTR [rdi],bh
   140014144:	jns    0x140014142
   140014146:	rex cmp esp,DWORD PTR [rsi]
   140014149:	sub    al,0x1a
   14001414b:	sbb    DWORD PTR [rsp+rbp*4+0x64],eax
   14001414f:	rex.RXB stos DWORD PTR es:[rdi],eax
   140014151:	sub    cl,ch
   140014153:	jno    0x14001415c
   140014155:	sub    BYTE PTR [rax-0x35],dl
   140014158:	mov    cl,0xb3
   14001415a:	icebp  
   14001415b:	retf   
   14001415c:	cmp    BYTE PTR [rax+0x1b],al
   14001415f:	shr    BYTE PTR [rbx],cl
   140014161:	sub    DWORD PTR [rip+0xffffffff88a68368],edx        # 0xc8a7c4cf
   140014167:	(bad)  
   140014168:	mov    eax,0x2818edbc
   14001416d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001416e:	hlt    
   14001416f:	rex.WR ins DWORD PTR es:[rdi],dx
   140014171:	adc    DWORD PTR [rsi],0x9e3edebb
   140014177:	rex.WXB movabs r11,0xfc431e5a6afa5864
   140014181:	ins    DWORD PTR es:[rdi],dx
   140014182:	and    al,0x2f
   140014184:	rex.RXB pop r11
   140014186:	jne    0x1400141d0
   140014188:	xchg   DWORD PTR [rbp-0x39],ebp
   14001418b:	sbb    esp,ebp
   14001418d:	sub    dl,dh
   14001418f:	xor    DWORD PTR [rdi+0x52],esi
   140014192:	ret    0x36a1
   140014195:	(bad)  
   140014196:	std    
   140014197:	sub    ecx,edi
   140014199:	cli    
   14001419a:	rex.XB jg 0x1400141e8
   14001419d:	(bad)  
   14001419e:	stc    
   14001419f:	sbb    dh,BYTE PTR [rdi+0x777c1a99]
   1400141a5:	sbb    BYTE PTR [rax-0x70121d91],al
   1400141ab:	cmp    al,0xfa
   1400141ad:	clc    
   1400141ae:	ret    0x6f43
   1400141b1:	jns    0x14001417a
   1400141b3:	jnp    0x14001413b
   1400141b5:	retf   
   1400141b6:	sub    ebx,DWORD PTR [rdi-0xe]
   1400141b9:	gs cmc 
   1400141bb:	rex.WB push r9
   1400141bd:	cmp    eax,0x7ea4d004
   1400141c2:	repz and al,0xb9
   1400141c5:	sahf   
   1400141c6:	xor    edi,edi
   1400141c8:	cmp    eax,0x95441104
   1400141cd:	(bad)  
   1400141ce:	mov    bl,0x47
   1400141d0:	loope  0x1400141dc
   1400141d2:	outs   dx,BYTE PTR ds:[rsi]
   1400141d3:	sub    al,0xae
   1400141d5:	xor    DWORD PTR [rbx+0x5],esi
   1400141d8:	clc    
   1400141d9:	(bad)  
   1400141da:	ret    0x9c79
   1400141dd:	sahf   
   1400141de:	rex.RXB
   1400141df:	fwait
   1400141e0:	xchg   BYTE PTR [rax+0x13ff7b1a],ah
   1400141e6:	rcl    BYTE PTR [rdx+rax*1],0xea
   1400141ea:	shr    ebp,cl
   1400141ec:	call   0x177730d2b
   1400141f1:	jae    0x140014193
   1400141f3:	(bad)  
   1400141f4:	test   BYTE PTR [rsi],0xe9
   1400141f7:	sub    bh,BYTE PTR [rbx+0x7e]
   1400141fa:	(bad)  [rsi+0x30]
   1400141fd:	movabs eax,ds:0x8342d7b157b3790d
   140014206:	(bad)  
   140014207:	sub    ebx,DWORD PTR [rsi+0x7a]
   14001420a:	(bad)  [rdi+0x130f9628]
   140014210:	scas   al,BYTE PTR es:[rdi]
   140014211:	sahf   
   140014212:	gs ins DWORD PTR es:[rdi],dx
   140014214:	sti    
   140014215:	and    al,0xe3
   140014217:	retf   
   140014218:	out    0x71,eax
   14001421a:	cmp    edx,DWORD PTR [rdi-0x70]
   14001421d:	data16 rex.WX pop rsp
   140014220:	out    0x2b,al
   140014222:	rex.RB pushf 
   140014224:	rol    DWORD PTR [rax],0x3f
   140014227:	mov    DWORD PTR [rbx],ecx
   140014229:	xchg   DWORD PTR [rdx+0x1c],ecx
   14001422c:	stc    
   14001422d:	cmp    eax,0x62920067
   140014232:	ja     0x140014263
   140014234:	lods   al,BYTE PTR ds:[rsi]
   140014235:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014236:	mov    ebx,ebx
   140014238:	imul   ebp,ebx,0x464ae94d
   14001423e:	icebp  
   14001423f:	shl    DWORD PTR [rbp-0x12610864],cl
   140014245:	jae    0x1400142ad
   140014247:	mov    al,0x3a
   140014249:	cmp    DWORD PTR [rdi+0x5b],edi
   14001424c:	rex push 0x758a490d
   140014252:	xor    al,0x3d
   140014254:	addr32 mov ecx,0x7e86c3b4
   14001425a:	jbe    0x14001429c
   14001425c:	mov    esp,0x70e2dd74
   140014261:	shr    dh,1
   140014263:	add    eax,0xc7402e34
   140014268:	push   rax
   140014269:	out    0xe3,al
   14001426b:	and    ebx,ecx
   14001426d:	jnp    0x1400142dc
   14001426f:	mov    edi,0x24e77487
   140014274:	ret    
   140014275:	xchg   esp,eax
   140014276:	rol    BYTE PTR [rax+0x69],0xd3
   14001427a:	adc    esp,DWORD PTR [rdi]
   14001427c:	jbe    0x1400142bd
   14001427e:	rex.W loop 0x1400142e5
   140014281:	(bad)  
   140014282:	adc    DWORD PTR [rdi+0xd],esp
   140014285:	icebp  
   140014286:	(bad)  
   140014287:	rcl    DWORD PTR [rdi+0x0],1
   14001428a:	and    BYTE PTR [rsi-0x2c],0xed
   14001428e:	(bad)  
   14001428f:	mov    dl,0x6b
   140014291:	mov    eax,0x7fae56f4
   140014296:	add    bh,BYTE PTR [rax]
   140014298:	(bad)  
   14001429a:	jrcxz  0x140014309
   14001429c:	xchg   ecx,eax
   14001429d:	cmp    ebx,ebx
   14001429f:	add    BYTE PTR [rdx+rdx*8-0x2cd2f425],bh
   1400142a6:	retf   0xe9bf
   1400142a9:	and    ebx,DWORD PTR [rdi]
   1400142ab:	mov    edi,0x8781f36f
   1400142b0:	mov    edi,0x9f060d50
   1400142b5:	ja     0x140014265
   1400142b7:	js     0x14001430f
   1400142b9:	add    eax,0x1e766909
   1400142be:	ror    BYTE PTR [rcx],1
   1400142c0:	add    BYTE PTR [rcx+0x2b],ch
   1400142c3:	lock adc cl,BYTE PTR [rcx+0x636e1f]
   1400142ca:	add    BYTE PTR [rax],ah
   1400142cc:	add    BYTE PTR [rcx+0x44],cl
   1400142cf:	push   r12
   1400142d1:	rex.XB
   1400142d2:	rex.WXB
   1400142d3:	xrelease rex.WR mov BYTE PTR [rsi+0x67],r12b
   1400142d8:	or     DWORD PTR [rdx],0x65
   1400142db:	xor    esp,DWORD PTR [rbp-0x73]
   1400142de:	(bad)  
   1400142df:	fst    st(1)
   1400142e1:	cwde   
   1400142e2:	frstor [rbx+0x4397508f]
   1400142e8:	retf   0xc0a2
   1400142eb:	jmp    0xe8098509
   1400142f0:	rex.WRB jmp 0x1400142fc
   1400142f3:	sbb    dl,BYTE PTR [rcx]
   1400142f5:	jbe    0x1400142a4
   1400142f7:	(bad)  
   1400142f8:	pop    rdx
   1400142f9:	cmp    DWORD PTR [rbp+0xa316cdd],0x70
   140014300:	popf   
   140014301:	xchg   BYTE PTR [rbp+0x693f6fb6],bl
   140014307:	(bad)  
   140014308:	(bad)  
   140014309:	test   ebx,edi
   14001430b:	not    BYTE PTR [rdi+rsi*1+0x38]
   14001430f:	push   0xffffffffdc049f3d
   140014314:	je     0x1400142b5
   140014316:	sub    ecx,DWORD PTR [rdi+0x7f]
   140014319:	nop
   14001431a:	sub    ecx,DWORD PTR [rdi+0x74c19bbe]
   140014320:	xchg   edi,eax
   140014321:	shl    DWORD PTR [rbp-0x4291532d],0x48
   140014328:	jno    0x14001431f
   14001432a:	and    ch,BYTE PTR [rsi-0x4e]
   14001432d:	mov    ebp,DWORD PTR [rdx+0x6d]
   140014330:	xor    esi,ecx
   140014332:	(bad)  
   140014334:	xchg   edx,eax
   140014335:	and    esp,eax
   140014337:	or     al,0xf9
   140014339:	test   DWORD PTR [rdx],0x7fd8c69e
   14001433f:	sub    DWORD PTR [rdi+rbp*8-0x2f92017c],ebp
   140014346:	nop
   140014347:	ret    
   140014348:	fldcw  WORD PTR [rsi]
   14001434a:	idiv   DWORD PTR [rdi]
   14001434c:	mov    bl,0xf7
   14001434e:	movabs al,ds:0xdbd9e4ae1a374d33
   140014357:	vpsrad xmm12,xmm7,XMMWORD PTR [rdi+0x5cbeb49c]
   14001435f:	rex.W (bad) 
   140014361:	mov    bh,0xf5
   140014363:	mov    dl,0x73
   140014365:	(bad)  
   140014366:	(bad)  
   140014367:	(bad)  
   140014369:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001436a:	push   rcx
   14001436b:	(bad)  
   14001436c:	pop    rbp
   14001436d:	add    edx,DWORD PTR [rcx]
   14001436f:	rex.WB
   140014370:	push   r14
   140014372:	add    ecx,DWORD PTR [rdx+rbx*4]
   140014375:	(bad)  
   140014376:	or     DWORD PTR [rbp+0x370700bd],esi
   14001437c:	(bad)  
   14001437d:	adc    DWORD PTR [rbx],edi
   14001437f:	cmovge eax,DWORD PTR [rbx+0x1e8cc44]
   140014386:	sbb    DWORD PTR [rax],eax
   140014388:	xchg   esp,eax
   140014389:	js     0x14001438d
   14001438b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001438c:	or     ecx,eax
   14001438e:	and    dl,BYTE PTR [rsi-0x33849622]
   140014394:	jmp    0x16fa58c77
   140014399:	rex.RXB (bad) 
   14001439b:	push   rax
   14001439c:	in     al,dx
   14001439d:	mov    eax,0x4c28b3b5
   1400143a2:	fmul   st(6),st
   1400143a4:	stos   BYTE PTR es:[rdi],al
   1400143a5:	rex.WRX
   1400143a6:	ds mov ebx,0x5c1fecc6
   1400143ac:	movabs eax,ds:0x78019e77821dadbc
   1400143b5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400143b6:	mov    bh,0x4f
   1400143b8:	retf   0x1ef
   1400143bb:	mov    bh,0xb8
   1400143bd:	mov    esi,0x63fa7831
   1400143c2:	lahf   
   1400143c3:	jl     0x14001443b
   1400143c5:	mov    esp,0x5f45f6b2
   1400143ca:	push   rsi
   1400143cb:	fisttp WORD PTR [rcx+0x4a1891c8]
   1400143d1:	jmp    0x1400143fe
   1400143d3:	(bad)  
   1400143d4:	scas   eax,DWORD PTR es:[rdi]
   1400143d5:	mov    ah,0xce
   1400143d7:	ds fwait
   1400143d9:	add    ebx,edx
   1400143db:	mov    ah,0x2e
   1400143dd:	repnz fidivr WORD PTR [rbp-0x41]
   1400143e1:	loop   0x140014373
   1400143e3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400143e4:	xor    sp,dx
   1400143e7:	push   rsp
   1400143e8:	(bad)
   1400143ec:	jrcxz  0x1400143ba
   1400143ee:	mov    al,BYTE PTR [rdx-0x31d7575e]
   1400143f4:	popf   
   1400143f5:	mov    WORD PTR [rbx-0x599ab700],?
   1400143fb:	nop
   1400143fc:	(bad)  
   1400143fd:	push   rbp
   1400143fe:	mov    BYTE PTR [rdx],ch
   140014400:	rex.WRX cmp rax,0xffffffffee9a0341
   140014406:	scas   al,BYTE PTR es:[rdi]
   140014407:	(bad)  
   140014408:	add    al,0xd4
   14001440a:	cmps   WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14001440c:	stc    
   14001440d:	ss call 0x1827da8b1
   140014413:	enter  0xd26b,0x75
   140014417:	xchg   esp,eax
   140014418:	rex.RXB
   140014419:	addr32 xor eax,edx
   14001441c:	repnz (bad) 
   14001441e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001441f:	fdivp  st(6),st
   140014421:	sbb    DWORD PTR [rdx+0x1cbd116a],ecx
   140014427:	sbb    DWORD PTR [rdi-0x3d],edi
   14001442a:	retf   
   14001442b:	out    0x71,eax
   14001442d:	(bad)  
   14001442e:	scas   eax,DWORD PTR es:[rdi]
   14001442f:	rex.X cwde 
   140014431:	(bad)  
   140014432:	mov    BYTE PTR [rsi+0x3e],al
   140014435:	(bad)  
   140014436:	(bad)  
   140014437:	(bad)  
   140014438:	icebp  
   140014439:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001443a:	int3   
   14001443b:	mov    ch,0xfc
   14001443d:	mov    dh,0xe3
   14001443f:	mov    esp,0x14d8173a
   140014444:	xor    bl,BYTE PTR [rcx]
   140014446:	(bad)  
   140014447:	xor    cl,BYTE PTR [r11]
   14001444a:	xor    BYTE PTR [rdi+0x14],ah
   14001444d:	rex.WB jno 0x140014423
   140014450:	out    0xc4,eax
   140014452:	enter  0xee33,0x95
   140014456:	out    0x91,eax
   140014458:	test   eax,0xb01a2932
   14001445d:	in     eax,dx
   14001445e:	rex.W fiadd DWORD PTR [rdi+0xa]
   140014462:	cwde   
   140014463:	(bad)  
   140014464:	cli    
   140014465:	rex.R in eax,dx
   140014467:	cmp    al,0xdd
   140014469:	or     edi,edi
   14001446b:	out    0x70,eax
   14001446d:	add    al,BYTE PTR [rax+rdx*8+0x32237984]
   140014474:	addr32 rex.W mov bpl,0x7b
   140014478:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014479:	in     eax,dx
   14001447a:	sti    
   14001447b:	mov    dh,0x5b
   14001447d:	sub    ch,bh
   14001447f:	adc    dl,BYTE PTR [rax+0x27]
   140014482:	push   0x212fa6d3
   140014487:	test   esp,edi
   140014489:	(bad)  
   14001448a:	rex.WRB and BYTE PTR [r14+0x27],r13b
   14001448e:	(bad)  
   14001448f:	(bad)  
   140014490:	addr32 loop 0x140014457
   140014493:	adc    DWORD PTR [rdx+rbx*8-0x19],edx
   140014497:	cmp    ecx,ecx
   140014499:	(bad)  
   14001449a:	(bad)  
   14001449b:	imul   eax,DWORD PTR [rbp-0x39],0xb78457aa
   1400144a2:	(bad)  
   1400144a3:	imul   edi,DWORD PTR [rcx],0xebcfccf9
   1400144a9:	jrcxz  0x1400144aa
   1400144ab:	(bad)  
   1400144ac:	mov    bh,0x31
   1400144ae:	or     eax,0xc00c73b8
   1400144b3:	lods   eax,DWORD PTR ds:[rsi]
   1400144b4:	mov    ebp,0x9ff2467d
   1400144b9:	cli    
   1400144ba:	lock jae 0x140014504
   1400144bd:	(bad)  
   1400144be:	(bad)  
   1400144bf:	jp     0x1400144a5
   1400144c1:	cmp    eax,DWORD PTR [rdi]
   1400144c3:	ret    
   1400144c4:	loope  0x1400144bd
   1400144c6:	mov    eax,0x44567ca2
   1400144cb:	retf   0x9aa0
   1400144ce:	sub    DWORD PTR [rdx+0x725889a],edi
   1400144d4:	ss fwait
   1400144d6:	sub    BYTE PTR [rbx-0x4316840f],bh
   1400144dc:	push   0x37
   1400144de:	rex.RX sub r9b,cl
   1400144e1:	or     DWORD PTR [rdx-0x7],esp
   1400144e4:	js     0x1400144a2
   1400144e6:	jmp    0x14001446d
   1400144e8:	xchg   BYTE PTR [rcx-0x43],ah
   1400144eb:	rex.WRXB loope 0x1400144f8
   1400144ee:	jbe    0x140014546
   1400144f0:	(bad)  
   1400144f1:	xor    BYTE PTR [rip+0xfffffffff10e5087],ch        # 0x1310f957e
   1400144f7:	addr32 mov edi,0x42de5e86
   1400144fd:	(bad)  
   1400144fe:	add    DWORD PTR [rdx+0x7a634141],0xa1155e0
   140014508:	or     ch,dh
   14001450a:	pop    rsp
   14001450b:	jne    0x14001454d
   14001450d:	mov    edx,0xdb439347
   140014512:	xor    ch,BYTE PTR ss:[rcx-0x3d]
   140014516:	push   rbp
   140014517:	fisub  DWORD PTR [rbx-0x286f1dcc]
   14001451d:	xchg   BYTE PTR [rbx],cl
   14001451f:	rex.WRXB jg 0x1400144ba
   140014522:	fucom  st(3)
   140014524:	rex.WRXB xor r14,r11
   140014527:	mov    edi,0x69d2f8c1
   14001452c:	xchg   esi,eax
   14001452d:	(bad)  
   14001452e:	mov    ebp,0xafd714c
   140014533:	outs   dx,BYTE PTR ds:[rsi]
   140014534:	mov    edx,0xa209f917
   140014539:	test   al,0x7a
   14001453b:	nop
   14001453c:	(bad)  
   14001453d:	repnz adc ecx,DWORD PTR [rdx]
   140014540:	lea    esp,[rax+0x27f4b756]
   140014546:	sub    DWORD PTR [rdx],eax
   140014548:	push   rax
   140014549:	fimul  DWORD PTR [rcx+0x3b]
   14001454c:	scas   al,BYTE PTR es:[rdi]
   14001454d:	mov    ebp,0xe927f9d0
   140014552:	rex.WXB mov dl,BYTE PTR [r12+r13*8]
   140014556:	stos   BYTE PTR es:[rdi],al
   140014557:	js     0x140014540
   140014559:	xor    bl,al
   14001455b:	xchg   edi,eax
   14001455c:	(bad)  
   14001455d:	loop   0x1400144e8
   14001455f:	rex.WXB (bad) 
   140014561:	(bad)  
   140014562:	and    eax,0x7479d9c8
   140014567:	and    al,BYTE PTR [rbx]
   140014569:	rex.WB fild WORD PTR [r13+0x5e86fc1c]
   140014570:	imul   ecx,DWORD PTR [rdi],0xdae1b2e2
   140014576:	pushw  0x36
   140014579:	cs cmp al,0x62
   14001457c:	adc    esi,esp
   14001457e:	jg     0x1400145ad
   140014580:	add    bl,BYTE PTR [rax-0x76f2fffd]
   140014586:	iret   
   140014587:	sbb    ah,BYTE PTR [rsi-0x40]
   14001458a:	movsxd edx,esp
   14001458c:	rex.WXB sub rcx,r9
   14001458f:	rex.WXB
   140014590:	fwait
   140014591:	stos   DWORD PTR es:[rdi],eax
   140014592:	mov    bh,0xa5
   140014594:	mov    cl,0xb1
   140014597:	jrcxz  0x1400145db
   140014599:	and    dh,BYTE PTR [rsi+0x5]
   14001459c:	(bad)  
   14001459d:	cdq    
   14001459e:	clc    
   14001459f:	xchg   ebx,eax
   1400145a0:	adc    ecx,DWORD PTR [rdi-0x498e4340]
   1400145a6:	push   rdi
   1400145a7:	mov    edx,0xd55c9515
   1400145ac:	adc    BYTE PTR [rsi],dl
   1400145ae:	faddp  st(0),st
   1400145b0:	(bad)  
   1400145b1:	jae    0x140014573
   1400145b3:	outs   dx,DWORD PTR ds:[rsi]
   1400145b4:	ret    0x4bed
   1400145b7:	add    ebx,DWORD PTR [rsi-0x21]
   1400145ba:	(bad)  
   1400145bb:	loopne 0x140014558
   1400145bd:	js     0x14001463a
   1400145bf:	sar    BYTE PTR [rdi-0x1780d409],0x3b
   1400145c6:	(bad)  
   1400145c7:	retf   
   1400145c8:	sub    ebx,edi
   1400145ca:	pop    rbp
   1400145cb:	push   rsi
   1400145cc:	or     edi,0xffffff8b
   1400145cf:	enter  0xecb1,0x4f
   1400145d3:	push   rbx
   1400145d4:	cmp    DWORD PTR [rsi-0x12],ebp
   1400145d7:	sbb    edx,edi
   1400145d9:	mov    ecx,0x6a97299b
   1400145de:	mov    dl,0xd7
   1400145e0:	in     eax,dx
   1400145e1:	mov    edx,0x9b6e968c
   1400145e6:	outs   dx,BYTE PTR ds:[rsi]
   1400145e7:	mov    ah,dh
   1400145e9:	sub    eax,0x8a76858a
   1400145ee:	loop   0x14001458b
   1400145f0:	sbb    DWORD PTR [rbx],ebp
   1400145f2:	push   rdx
   1400145f3:	mov    bl,0xb7
   1400145f5:	mov    eax,0x2789eecc
   1400145fa:	cdq    
   1400145fb:	or     eax,0xff072817
   140014600:	or     esi,ecx
   140014602:	mov    edi,0x8a013b08
   140014607:	cmp    ah,bh
   140014609:	add    esi,DWORD PTR [rax+0x2b2b00b4]
   14001460f:	sub    DWORD PTR [rdi+rax*1],eax
   140014612:	fidiv  DWORD PTR [rdx+rcx*8-0x2bbf2e93]
   140014619:	add    esp,0xffffffd6
   14001461c:	imul   ecx,DWORD PTR [rdi+0x7cc1793d],0x41
   140014623:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014624:	adc    esp,DWORD PTR [rsi-0x39]
   140014627:	(bad)  
   140014628:	loope  0x1400145ef
   14001462a:	(bad)  
   14001462b:	jg     0x1400145af
   14001462d:	adc    DWORD PTR [rsi],ecx
   14001462f:	mov    ecx,0xbd58e76
   140014634:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014635:	test   al,0xae
   140014637:	ins    BYTE PTR es:[rdi],dx
   140014638:	and    DWORD PTR [rdi],esi
   14001463a:	scas   eax,DWORD PTR es:[rdi]
   14001463b:	adc    al,dl
   14001463d:	or     al,0x91
   14001463f:	rex ja 0x1400145e3
   140014642:	mov    WORD PTR [rax-0xa63b03e],?
   140014648:	out    0x84,eax
   14001464a:	xchg   esi,eax
   14001464b:	(bad)  
   14001464c:	fwait
   14001464d:	(bad)  
   14001464e:	jle    0x140014620
   140014650:	or     DWORD PTR [rbp-0x13],edi
   140014653:	ss (bad) 
   140014655:	pop    rbp
   140014656:	jnp    0x1400146b0
   140014658:	add    al,0x80
   14001465a:	fs out dx,eax
   14001465c:	cwde   
   14001465d:	mov    esp,0x52f9eb66
   140014662:	rex.X rcr sil,1
   140014665:	hlt    
   140014666:	pop    rbp
   140014667:	nop    DWORD PTR [rdi]
   14001466a:	fwait
   14001466b:	cmp    ah,BYTE PTR [rip+0x5cddbfe7]        # 0x19cdf0658
   140014671:	test   BYTE PTR [rcx+rdx*2-0x3f],0x1
   140014676:	popf   
   140014677:	push   0x6dfb7fbd
   14001467c:	mov    ah,BYTE PTR [rsi-0x3f1c4a83]
   140014682:	push   rdx
   140014683:	(bad)  
   140014684:	pop    rdi
   140014685:	jmp    0x14001460f
   140014687:	pop    rbx
   140014688:	test   esp,ecx
   14001468a:	pop    rdi
   14001468b:	outs   dx,DWORD PTR ds:[rsi]
   14001468c:	push   rdx
   14001468d:	jle    0x1400146af
   14001468f:	push   rbp
   140014690:	sub    eax,0x7077c2b2
   140014695:	add    BYTE PTR [rdx-0x687ccd3f],dh
   14001469b:	mov    ds,edi
   14001469d:	xor    DWORD PTR [rdi],edi
   14001469f:	rex.R pop rcx
   1400146a1:	(bad)  
   1400146a2:	xchg   BYTE PTR [rbx-0x2a38b2f6],ah
   1400146a8:	in     al,0xe2
   1400146aa:	rex.RX jb 0x1400146d1
   1400146ad:	sbb    DWORD PTR [rdi],ecx
   1400146af:	and    BYTE PTR [rip+0x28f5df66],0x37        # 0x168f7261c
   1400146b6:	jg     0x1400146ad
   1400146b8:	jns    0x1400146d0
   1400146ba:	outs   dx,BYTE PTR ds:[rsi]
   1400146bb:	pop    rbx
   1400146bc:	xchg   eax,esp
   1400146be:	jmp    0x140014693
   1400146c0:	add    BYTE PTR [rbx+rsi*2+0x6f],bh
   1400146c4:	jg     0x1400146aa
   1400146c6:	enter  0x8f43,0x7c
   1400146ca:	jp     0x1400146fc
   1400146cc:	(bad)  
   1400146cd:	jg     0x140014718
   1400146cf:	mov    esp,0xe322277f
   1400146d4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400146d5:	pop    rsp
   1400146d6:	mov    DWORD PTR [rdx+rdx*1],ecx
   1400146d9:	(bad)  
   1400146da:	fnstsw WORD PTR [rdx-0x5d]
   1400146dd:	mov    ah,0xb9
   1400146df:	mov    ecx,0x86c73020
   1400146e4:	(bad)  
   1400146e5:	pop    rsi
   1400146e6:	ror    dl,cl
   1400146e8:	push   rdi
   1400146e9:	shl    dh,1
   1400146eb:	fdivr  st,st(1)
   1400146ed:	outs   dx,BYTE PTR ds:[rsi]
   1400146ee:	rex.WXB (bad) 
   1400146f0:	mov    dh,0x85
   1400146f2:	mov    cl,0x96
   1400146f4:	sti    
   1400146f5:	stos   BYTE PTR es:[rdi],al
   1400146f6:	(bad)  
   1400146f7:	test   al,al
   1400146f9:	sub    ah,ch
   1400146fb:	push   rdx
   1400146fc:	xchg   esp,eax
   1400146fd:	add    eax,0xa61f47bb
   140014702:	sbb    DWORD PTR [rsi],ebp
   140014704:	loopne 0x1400146b0
   140014706:	and    esi,ebp
   140014708:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014709:	scas   eax,DWORD PTR es:[rdi]
   14001470a:	adc    ebp,DWORD PTR [rsi+0x7f3eb65d]
   140014710:	rcl    BYTE PTR [rax],1
   140014712:	(bad)  
   140014713:	scas   al,BYTE PTR es:[rdi]
   140014714:	lea    eax,[rbx-0x1d777220]
   14001471a:	adc    BYTE PTR [rbx+0x9],ch
   14001471d:	mov    ?,WORD PTR [rdi-0x7c78b7a9]
   140014723:	pop    rdx
   140014724:	scas   al,BYTE PTR es:[rdi]
   140014725:	mov    ds,WORD PTR [rbp-0x1d3bfdbd]
   14001472b:	(bad)  
   14001472c:	fsubrp st(0),st
   14001472e:	retf   
   14001472f:	xchg   edx,eax
   140014730:	xchg   ebx,eax
   140014731:	outs   dx,DWORD PTR ds:[rsi]
   140014732:	dec    DWORD PTR [rcx+riz*2]
   140014735:	in     eax,dx
   140014736:	cmp    BYTE PTR [rdx-0x748134e5],bh
   14001473c:	xchg   edi,eax
   14001473d:	pop    rdi
   14001473e:	(bad)  
   14001473f:	fistp  QWORD PTR [rax+0x4e2ef50c]
   140014745:	sbb    dh,BYTE PTR [rbx]
   140014747:	pop    rsi
   140014748:	ss ins BYTE PTR es:[rdi],dx
   14001474a:	pop    rbx
   14001474b:	jrcxz  0x140014743
   14001474d:	mov    esp,0x42793dc6
   140014752:	ss add ch,ch
   140014755:	ror    BYTE PTR [rdi+0x62],0xce
   140014759:	stos   DWORD PTR es:[rdi],eax
   14001475a:	shl    dl,1
   14001475c:	sti    
   14001475d:	adc    ebx,DWORD PTR [rax-0x69]
   140014760:	pop    rsp
   140014761:	jg     0x14001476d
   140014763:	mov    DWORD PTR [rbx],edx
   140014765:	push   0x7e53b47
   14001476a:	mov    cl,0xfe
   14001476c:	jns    0x140014761
   14001476e:	out    dx,al
   14001476f:	add    WORD PTR [rbx+rsi*8+0x6831cf33],sp
   140014777:	(bad)  
   140014778:	and    esi,0x66
   14001477b:	sbb    al,0xd2
   14001477d:	sub    DWORD PTR [rdi+0x1afa4238],esi
   140014783:	xor    DWORD PTR [r14+riz*1+0x19],r15d
   140014788:	rex.R
   140014789:	repz not BYTE PTR [rsi-0x67bb7f1a]
   140014790:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014791:	imul   edx,DWORD PTR [rax-0x2d],0xfffffff7
   140014795:	rex.R stos BYTE PTR es:[rdi],al
   140014797:	adc    edx,DWORD PTR [rax-0x4f290742]
   14001479d:	sbb    eax,DWORD PTR [rbx-0x33d632d0]
   1400147a3:	add    eax,DWORD PTR [rax+0x5d]
   1400147a6:	pop    rsp
   1400147a7:	cld    
   1400147a8:	and    ecx,ebp
   1400147aa:	(bad)  
   1400147ab:	cmp    al,0x38
   1400147ad:	sti    
   1400147ae:	and    BYTE PTR [rsi+0x5699209f],ch
   1400147b4:	sbb    al,0x3a
   1400147b6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400147b7:	lahf   
   1400147b8:	div    dh
   1400147ba:	shr    BYTE PTR [rax+rdi*8+0x501cbce9],cl
   1400147c1:	push   0xffffffffe09fa6f3
   1400147c6:	(bad)  
   1400147c7:	cmp    edi,DWORD PTR [rdi-0x76]
   1400147ca:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400147cb:	dec    BYTE PTR [rdi-0x64806084]
   1400147d1:	rol    DWORD PTR [rax-0x7fe7029],cl
   1400147d7:	(bad)  
   1400147d8:	mov    esp,0xf2bffbfd
   1400147dd:	xchg   DWORD PTR [rsi-0x6a1a7a3],ebx
   1400147e3:	sahf   
   1400147e4:	jb     0x140014816
   1400147e6:	cld    
   1400147e7:	mov    ah,0x8
   1400147e9:	clts   
   1400147eb:	lea    edi,[rsp+rbp*8]
   1400147ee:	mov    ah,0x88
   1400147f0:	(bad)
   1400147f3:	xchg   esi,eax
   1400147f4:	xchg   BYTE PTR [rbx+0x76],ah
   1400147f7:	jae    0x14001484c
   1400147f9:	and    dl,cl
   1400147fb:	and    eax,0x68dd33be
   140014800:	jbe    0x140014825
   140014802:	jne    0x1400147c6
   140014804:	rex.B (bad) 
   140014806:	test   BYTE PTR [rbx-0x9338c92],0x3b
   14001480d:	leave  
   14001480e:	sahf   
   14001480f:	and    eax,0x3cf32b39
   140014814:	push   rbp
   140014815:	cwde   
   140014816:	push   rdx
   140014817:	cmp    edi,ecx
   140014819:	(bad)  
   14001481b:	adc    DWORD PTR [rsi-0x55],esi
   14001481e:	and    DWORD PTR [rbx+riz*1-0x24],edx
   140014822:	mov    edi,DWORD PTR [rdi+0x1f3ed843]
   140014828:	adc    esp,ebp
   14001482a:	(bad)  
   14001482b:	mov    bl,0xfc
   14001482d:	lods   al,BYTE PTR ds:[rsi]
   14001482e:	jg     0x14001488f
   140014830:	(bad)  
   140014831:	in     eax,0x1b
   140014833:	xor    ebp,ebp
   140014835:	enter  0x7a66,0xa4
   140014839:	rcr    BYTE PTR [rdi-0x53ec2334],0x9c
   140014840:	push   0xffffffffe5366617
   140014845:	out    0x13,al
   140014847:	ffreep st(1)
   140014849:	test   edi,eax
   14001484b:	(bad)  
   14001484d:	rex.X cwde 
   14001484f:	push   rdx
   140014850:	pop    rsp
   140014851:	ds ret 
   140014853:	(bad)  
   140014855:	imul   ecx,edx,0xddb8dbab
   14001485b:	sbb    esi,DWORD PTR [rcx-0x10a26c4]
   140014861:	xchg   edx,eax
   140014862:	adc    al,0xdd
   140014864:	(bad)  
   140014865:	jge    0x140014878
   140014867:	sub    al,0x1d
   140014869:	mov    BYTE PTR [rdi+0x1d8dceb9],ch
   14001486f:	ret    
   140014870:	jl     0x14001485d
   140014872:	ins    DWORD PTR es:[rdi],dx
   140014873:	xchg   edi,eax
   140014874:	mov    dh,0x4c
   140014876:	(bad)  
   140014877:	(bad)  
   140014879:	rex.X (bad) 
   14001487b:	(bad)  
   14001487c:	and    eax,0x9be90ba7
   140014881:	jae    0x14001484c
   140014883:	xchg   ebx,eax
   140014884:	(bad)  [rsi+0x53]
   140014887:	scas   al,BYTE PTR es:[rdi]
   140014888:	ffreep st(6)
   14001488a:	add    al,0x49
   14001488c:	icebp  
   14001488d:	out    0xbd,al
   14001488f:	jnp    0x140014863
   140014891:	retf   
   140014892:	ins    BYTE PTR es:[rdi],dx
   140014893:	stos   DWORD PTR es:[rdi],eax
   140014894:	repz fimul DWORD PTR ss:[rax+0x2d]
   140014899:	icebp  
   14001489a:	mul    bh
   14001489c:	retf   0xab5
   14001489f:	pop    rcx
   1400148a0:	pop    rbx
   1400148a1:	and    eax,0x80c903dd
   1400148a6:	jne    0x140014914
   1400148a8:	rex
   1400148a9:	addr32 xchg ebx,eax
   1400148ab:	or     eax,esi
   1400148ad:	ins    DWORD PTR es:[rdi],dx
   1400148ae:	mov    bl,0x74
   1400148b0:	push   0xffffffffb63c7b0d
   1400148b5:	int3   
   1400148b6:	rcl    DWORD PTR [rax],0xc9
   1400148b9:	imul   eax,DWORD PTR [rip+0x4c486de4],0x17        # 0x18c49b6a4
   1400148c0:	fcmovb st,st(0)
   1400148c2:	mov    dl,0x75
   1400148c4:	adc    ch,ch
   1400148c6:	mov    ecx,0x9148bb98
   1400148cb:	sub    BYTE PTR [rcx+0x3c],ch
   1400148ce:	sbb    ecx,edi
   1400148d0:	cld    
   1400148d1:	popf   
   1400148d2:	mov    bh,BYTE PTR [rdi]
   1400148d4:	shr    esi,0x77
   1400148d7:	add    edi,edi
   1400148d9:	(bad)  
   1400148da:	mov    bh,0x29
   1400148dc:	or     eax,0xe006fdb8
   1400148e1:	fwait
   1400148e2:	js     0x1400148df
   1400148e4:	mov    bh,0x7e
   1400148e6:	loop   0x1400148bb
   1400148e8:	(bad)  
   1400148e9:	ss out dx,al
   1400148eb:	cmp    esi,ecx
   1400148ed:	fdiv   QWORD PTR [rax+0x71]
   1400148f0:	cld    
   1400148f1:	gs out dx,eax
   1400148f3:	retf   
   1400148f4:	ja     0x140014896
   1400148f6:	(bad)  
   1400148f7:	adc    edx,edx
   1400148f9:	jb     0x1400148c7
   1400148fb:	icebp  
   1400148fc:	mov    ecx,DWORD PTR [rcx]
   1400148fe:	sbb    eax,0x44cb10cf
   140014903:	cmp    dh,BYTE PTR [rdi-0x3d]
   140014906:	test   BYTE PTR gs:[rdi+0xe],bl
   14001490a:	mov    esi,0x4dba6906
   14001490f:	int3   
   140014910:	pop    rcx
   140014911:	jrcxz  0x14001492a
   140014913:	in     al,0x88
   140014915:	loope  0x140014911
   140014917:	pop    rsp
   140014918:	out    dx,al
   140014919:	fnstcw WORD PTR [rcx-0x70]
   14001491c:	lahf   
   14001491d:	(bad)  
   14001491e:	mov    es,edi
   140014920:	sahf   
   140014921:	mov    ch,BYTE PTR ss:[rdx+0x68]
   140014925:	sbb    cl,dl
   140014927:	push   rax
   140014928:	sub    al,0x2c
   14001492a:	jb     0x14001491f
   14001492c:	loope  0x140014965
   14001492e:	adc    eax,DWORD PTR [rsi-0x2406a39d]
   140014934:	test   bl,dh
   140014936:	addr32 (bad) 
   140014938:	pop    rcx
   140014939:	nop
   14001493a:	xchg   esp,eax
   14001493b:	out    0x9b,eax
   14001493d:	push   rdx
   14001493e:	test   BYTE PTR [rcx],bl
   140014940:	push   0xffffffffffffffcc
   140014942:	cmp    al,0xba
   140014944:	lods   al,BYTE PTR ds:[rsi]
   140014945:	rex.B jmp 0xde8ee299
   14001494b:	xor    BYTE PTR [rip+0x60cf50b2],dh        # 0x1a0d09a03
   140014951:	imul   ecx,DWORD PTR [rbp+0x3cfaef93],0x708568d5
   14001495b:	in     eax,0xc
   14001495d:	stos   DWORD PTR es:[rdi],eax
   14001495e:	pop    rbx
   14001495f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014960:	sbb    BYTE PTR [rbp+0x3a],bl
   140014963:	(bad)  
   140014964:	fistp  QWORD PTR [rcx-0x1b842976]
   14001496a:	mov    ecx,0x7bd776f5
   14001496f:	push   rbx
   140014970:	not    BYTE PTR [rdx+0x13]
   140014973:	ficomp DWORD PTR [rdi]
   140014975:	repnz ror BYTE PTR [rdi-0x11],0xa4
   14001497a:	mov    ebp,0x3a5b5cfb
   14001497f:	imul   eax,DWORD PTR [rdi-0x70add9a0],0xffffffb4
   140014986:	push   rcx
   140014987:	xchg   ebp,eax
   140014988:	xchg   ebx,eax
   140014989:	cmp    DWORD PTR [rdi-0x72],ecx
   14001498c:	sub    DWORD PTR [rsi+0x2a],edi
   14001498f:	in     eax,0xb5
   140014991:	adc    al,0x62
   140014993:	sti    
   140014994:	cmp    al,0x2e
   140014996:	push   rdi
   140014997:	sbb    BYTE PTR [rdx],dl
   140014999:	jbe    0x14001497b
   14001499b:	shl    dh,cl
   14001499d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001499e:	cmc    
   14001499f:	repnz lods eax,DWORD PTR ds:[rsi]
   1400149a1:	(bad)  
   1400149a2:	rcl    BYTE PTR [rsi-0x5f],1
   1400149a5:	push   0x1239e773
   1400149aa:	nop
   1400149ab:	test   esi,edx
   1400149ad:	xor    DWORD PTR [rdi],edx
   1400149af:	(bad)  
   1400149b0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400149b1:	(bad)  
   1400149b2:	je     0x140014979
   1400149b4:	(bad)  
   1400149b5:	js     0x140014a18
   1400149b7:	xchg   edx,eax
   1400149b8:	mov    al,bh
   1400149ba:	add    edx,DWORD PTR [rsi]
   1400149bc:	xor    edx,DWORD PTR [rax+0x73]
   1400149bf:	mov    eax,0x73e7ca43
   1400149c4:	sbb    eax,0x3edeb434
   1400149c9:	rex.WRXB or QWORD PTR [r14],r14
   1400149cc:	xchg   DWORD PTR [rbx],esp
   1400149ce:	test   eax,0x9116824
   1400149d3:	jbe    0x1400149e8
   1400149d5:	pop    rdx
   1400149d6:	adc    al,0x17
   1400149d8:	add    ebp,DWORD PTR [rax-0x32e4c52]
   1400149de:	rex.WX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400149e0:	(bad)  
   1400149e1:	(bad)  
   1400149e2:	jae    0x140014a01
   1400149e4:	jmp    0x121604dd5
   1400149e9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400149ea:	int    0xff
   1400149ec:	xchg   ecx,eax
   1400149ed:	jrcxz  0x1400149d6
   1400149ef:	shr    BYTE PTR [rbp-0x281bc629],cl
   1400149f5:	pop    rsp
   1400149f6:	outs   dx,BYTE PTR ds:[rsi]
   1400149f7:	pop    QWORD PTR [rcx]
   1400149f9:	clc    
   1400149fa:	(bad)  
   1400149fb:	mov    esp,0xf2be87fd
   140014a00:	(bad)  
   140014a01:	ja     0x140014a30
   140014a03:	lods   al,BYTE PTR ds:[rsi]
   140014a04:	lods   eax,DWORD PTR ds:[rsi]
   140014a05:	jg     0x1400149c8
   140014a07:	xchg   edi,eax
   140014a08:	(bad)  
   140014a09:	addr32 mov esp,0xefc70f73
   140014a0f:	cmp    bl,BYTE PTR [rbp-0x36]
   140014a12:	(bad)  
   140014a13:	call   0x1125dfafe
   140014a18:	jge    0x1400149eb
   140014a1a:	icebp  
   140014a1b:	call   0x105dd16e9
   140014a20:	rex.WRX imul r12,QWORD PTR [rsi+0x44],0xffffffffffffffd1
   140014a25:	jl     0x140014a27
   140014a27:	(bad)  
   140014a28:	sub    eax,0x9b919a73
   140014a2d:	pop    rsp
   140014a2e:	mov    esp,0xd3d5cc6a
   140014a33:	or     al,ch
   140014a35:	je     0x140014a0a
   140014a37:	imul   ebp,eax,0x60
   140014a3a:	or     BYTE PTR [rsi+0x8408a68],ah
   140014a40:	or     al,0xeb
   140014a42:	cmp    eax,0xc6e4b28a
   140014a47:	icebp  
   140014a48:	(bad)  
   140014a49:	test   al,0xab
   140014a4b:	xor    DWORD PTR [rsi-0x6c263fe6],edi
   140014a51:	call   0x14232b5e3
   140014a56:	rex adc DWORD PTR [rbp-0x78],esi
   140014a5a:	sub    edi,eax
   140014a5c:	(bad)  
   140014a5d:	fnstcw WORD PTR [rbx-0xd]
   140014a60:	and    ch,cl
   140014a62:	scas   al,BYTE PTR es:[rdi]
   140014a63:	stos   DWORD PTR es:[rdi],eax
   140014a64:	rex.WRX
   140014a65:	lock ja 0x140014a56
   140014a68:	jge    0x140014a59
   140014a6a:	retf   
   140014a6b:	lods   eax,DWORD PTR ds:[rsi]
   140014a6c:	mov    dl,0x32
   140014a6e:	mov    bl,0xf6
   140014a70:	push   rdx
   140014a71:	xchg   ebp,eax
   140014a72:	test   ch,0xb6
   140014a75:	ins    BYTE PTR es:[rdi],dx
   140014a76:	ins    DWORD PTR es:[rdi],dx
   140014a77:	xchg   esi,eax
   140014a78:	fldcw  WORD PTR gs:[rbp-0x4b]
   140014a7c:	in     eax,0xf1
   140014a7e:	and    bh,BYTE PTR [rbx-0x79c89c93]
   140014a84:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014a85:	jnp    0x140014aa9
   140014a87:	push   0x1a66809a
   140014a8c:	call   0x8631
   140014a90:	push   0x681e987a
   140014a95:	and    BYTE PTR [rsi],al
   140014a97:	(bad)  
   140014a98:	es jp  0x140014afd
   140014a9b:	(bad)
   140014aa0:	adc    BYTE PTR [rsp+rax*2],dh
   140014aa3:	sbb    BYTE PTR [rsi],al
   140014aa5:	rex.RX mov dl,0xc1
   140014aa8:	xor    al,0xb4
   140014aaa:	in     eax,0x7d
   140014aac:	(bad)  
   140014aad:	mov    dh,0x6c
   140014aaf:	pop    rcx
   140014ab0:	xchg   esi,eax
   140014ab1:	sub    al,0x9
   140014ab3:	in     eax,dx
   140014ab4:	stos   BYTE PTR es:[rdi],al
   140014ab5:	stos   BYTE PTR es:[rdi],al
   140014ab6:	int3   
   140014ab7:	stos   BYTE PTR es:[rdi],al
   140014ab8:	retf   0xdcaa
   140014abb:	div    ebp
   140014abd:	jnp    0x140014ab6
   140014abf:	int3   
   140014ac0:	(bad)  
   140014ac1:	addr32 mov ecx,0x22d665f7
   140014ac7:	pop    rcx
   140014ac8:	and    eax,0x117a9961
   140014acd:	pop    rcx
   140014ace:	cmc    
   140014acf:	sub    eax,0xbddb7bef
   140014ad4:	out    0x9c,eax
   140014ad6:	(bad)  
   140014ad8:	popf   
   140014ad9:	in     eax,0x72
   140014adb:	(bad)  
   140014adc:	(bad)  
   140014add:	add    esp,DWORD PTR [rcx+rdx*4]
   140014ae0:	rex.W (bad) 
   140014ae2:	mov    al,0xe8
   140014ae4:	(bad)  
   140014ae5:	xchg   edx,eax
   140014ae6:	int3   
   140014ae7:	rex.X and BYTE PTR [rbx],cl
   140014aea:	(bad)  
   140014aeb:	add    esi,DWORD PTR [rcx+0x4de4e2e9]
   140014af1:	out    dx,eax
   140014af2:	(bad)
   140014af6:	sar    DWORD PTR [rdi-0x26617742],1
   140014afc:	xchg   ebx,eax
   140014afd:	fdivr  DWORD PTR [rcx]
   140014aff:	jae    0x140014b03
   140014b01:	(bad)  
   140014b02:	ret    0x680c
   140014b05:	ins    DWORD PTR es:[rdi],dx
   140014b06:	sbb    eax,esp
   140014b08:	(bad)  
   140014b09:	pop    rsp
   140014b0a:	sub    al,0x5c
   140014b0c:	push   rcx
   140014b0d:	(bad)  
   140014b0e:	cld    
   140014b0f:	enter  0x2e03,0xa0
   140014b13:	jg     0x140014b15
   140014b15:	mov    esp,0xb6877c3
   140014b1a:	adc    BYTE PTR gs:[rcx],bl
   140014b1d:	jo     0x140014b20
   140014b1f:	or     eax,0x1303512c
   140014b24:	jb     0x140014ba1
   140014b26:	xor    BYTE PTR [rdx-0x429d791],0xcb
   140014b2d:	rex.X outs dx,BYTE PTR ds:[rsi]
   140014b2f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014b30:	lahf   
   140014b31:	adc    ebx,DWORD PTR [rax-0x137f30bb]
   140014b37:	out    dx,al
   140014b38:	mov    bl,0x1f
   140014b3a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014b3b:	mov    ebp,0xfa5ebab1
   140014b40:	xchg   edx,eax
   140014b41:	sub    eax,0x286b9f1e
   140014b46:	enter  0xf97d,0xe0
   140014b4a:	popf   
   140014b4b:	xchg   edi,eax
   140014b4c:	rex cdq 
   140014b4e:	jne    0x140014b47
   140014b50:	(bad)
   140014b53:	out    dx,al
   140014b54:	jle    0x140014bba
   140014b56:	mov    ?,WORD PTR [rcx-0x3304d0d5]
   140014b5c:	ror    BYTE PTR [rax-0x71d041bd],cl
   140014b62:	loop   0x140014b32
   140014b64:	xor    al,0x64
   140014b66:	mov    cl,0xee
   140014b69:	xchg   ecx,eax
   140014b6a:	popf   
   140014b6b:	sub    BYTE PTR [rbp+0x3efca9f],dl
   140014b71:	adc    edx,DWORD PTR [rdx-0x40c5ed0d]
   140014b77:	pushf  
   140014b78:	rol    DWORD PTR [rax-0x42],cl
   140014b7b:	(bad)  
   140014b7c:	xchg   edx,eax
   140014b7d:	out    0x59,eax
   140014b7f:	add    DWORD PTR [rdi-0x41],edx
   140014b82:	test   DWORD PTR [rsi+0x6f],esp
   140014b85:	call   QWORD PTR [rbx+0x3e]
   140014b88:	cld    
   140014b89:	push   rdi
   140014b8a:	jle    0x140014b72
   140014b8c:	xchg   edi,eax
   140014b8d:	ror    DWORD PTR [rip+0xffffffffc0157978],1        # 0x10016c50b
   140014b93:	jns    0x140014b41
   140014b95:	std    
   140014b96:	lods   eax,DWORD PTR ds:[rsi]
   140014b97:	ja     0x140014b58
   140014b99:	out    0xe0,eax
   140014b9b:	scas   al,BYTE PTR es:[rdi]
   140014b9c:	adc    DWORD PTR [rdi-0x5f885242],0xffffffff
   140014ba3:	rex.RXB jmp 0x140014bf4
   140014ba6:	out    0x4d,eax
   140014ba8:	mov    DWORD PTR [rcx+0x333834df],edi
   140014bae:	jb     0x140014b83
   140014bb0:	or     edx,DWORD PTR [rax]
   140014bb2:	mov    esp,0xd24e9dfb
   140014bb7:	fcom   QWORD PTR [rcx+rax*1-0xf17e7d0]
   140014bbe:	(bad)  
   140014bbf:	enter  0x1a50,0x68
   140014bc3:	sbb    DWORD PTR [rdi-0x64e9e2fe],edx
   140014bc9:	cmp    DWORD PTR [rdx],edx
   140014bcb:	(bad)  
   140014bcc:	imul   edx,DWORD PTR [rsi-0x6ff9975],0x3c
   140014bd3:	xor    DWORD PTR [rsp+rdi*4],0xec91ae48
   140014bda:	jp     0x140014bef
   140014bdc:	or     BYTE PTR [rbp-0x4d],dl
   140014bdf:	mov    fs,WORD PTR [rcx-0x454ef0]
   140014be5:	xor    ch,BYTE PTR [rbp+rsi*8-0x4857c0a]
   140014bec:	rex.B (bad) 
   140014bee:	sahf   
   140014bef:	rex.X (bad) 
   140014bf1:	rex.R fmul DWORD PTR [rax+0x40]
   140014bf6:	mov    BYTE PTR [rdx],dl
   140014bf8:	and    eax,0xbb35e0d0
   140014bfd:	repnz iret 
   140014bff:	xchg   esi,eax
   140014c00:	mov    edi,0x6c00c36d
   140014c05:	scas   al,BYTE PTR es:[rdi]
   140014c06:	movsxd edi,ebp
   140014c08:	shl    BYTE PTR [rbp+0x38],1
   140014c0b:	jb     0x140014be0
   140014c0d:	mov    ebx,0x2d200bd1
   140014c12:	rex.WR (bad) 
   140014c14:	js     0x140014c80
   140014c16:	adc    al,0x3d
   140014c18:	mov    bl,0x13
   140014c1a:	movabs al,ds:0x38c8a80359a079e5
   140014c23:	mov    ah,0x7
   140014c25:	rex.WR xor r11b,al
   140014c28:	es (bad) 
   140014c2a:	push   rcx
   140014c2b:	in     eax,dx
   140014c2c:	movabs eax,ds:0xf6ae7e73fdfb609
   140014c35:	imul   ebp,DWORD PTR [rbx+0x69],0xb2085c2f
   140014c3c:	mov    al,0x43
   140014c3e:	lods   eax,DWORD PTR ds:[rsi]
   140014c3f:	jle    0x140014c69
   140014c41:	sub    BYTE PTR [rdi+rax*8+0x51a09fa],0x28
   140014c49:	cmp    esp,edi
   140014c4b:	out    0x3e,eax
   140014c4d:	and    DWORD PTR [rcx+0x15bdbbd8],0x5ad2977b
   140014c57:	(bad)  
   140014c58:	jbe    0x140014c90
   140014c5a:	test   BYTE PTR [rcx+rdi*1],al
   140014c5d:	mov    esi,eax
   140014c5f:	jmp    0x160ad0557
   140014c64:	jmp    0x140014bf7
   140014c66:	or     BYTE PTR [rax+rbp*1+0x7c],dl
   140014c6a:	adc    r12d,r8d
   140014c6d:	stc    
   140014c6e:	sub    DWORD PTR [rbx+0x622532a2],ebx
   140014c74:	retf   0xaec9
   140014c77:	mov    al,0x28
   140014c79:	(bad)  
   140014c7b:	xor    BYTE PTR [rcx+rbp*8],al
   140014c7e:	ds jbe 0x140014c59
   140014c81:	rex
   140014c82:	rex ret 
   140014c84:	pop    rbx
   140014c85:	out    dx,al
   140014c86:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014c87:	cwde   
   140014c88:	enter  0xb5b9,0x18
   140014c8c:	or     DWORD PTR [rax+0x7d5a60e8],0x3f
   140014c93:	or     bh,dh
   140014c95:	loope  0x140014d06
   140014c97:	(bad)  
   140014c98:	or     eax,0x15e97c1
   140014c9d:	pushf  
   140014c9e:	fstp   st(2)
   140014ca0:	(bad)  
   140014ca1:	add    BYTE PTR [rcx-0x21521612],dh
   140014ca7:	cld    
   140014ca8:	ror    DWORD PTR [rdi],0xdd
   140014cab:	xor    bh,BYTE PTR [rax]
   140014cad:	cmp    al,0xf2
   140014caf:	(bad)  
   140014cb0:	(bad)  
   140014cb1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014cb2:	repz scas al,BYTE PTR es:[rdi]
   140014cb4:	adc    bl,ah
   140014cb6:	(bad)  
   140014cb7:	(bad)  
   140014cb8:	lods   eax,DWORD PTR ds:[rsi]
   140014cb9:	xor    edi,DWORD PTR [rdx+rsi*1+0x1]
   140014cbd:	es test eax,esi
   140014cc0:	leave  
   140014cc1:	rex.RX (bad) 
   140014cc3:	test   al,0xf5
   140014cc5:	cs rex.RXB (bad) 
   140014cc8:	xor    ecx,ebp
   140014cca:	rex.RXB
   140014ccb:	rex.R loopne 0x140014d22
   140014cce:	je     0x140014c8d
   140014cd0:	test   DWORD PTR [rax+0x59],ebx
   140014cd3:	lahf   
   140014cd4:	(bad)
   140014cd8:	fdiv   DWORD PTR [rcx-0x62]
   140014cdb:	cmp    DWORD PTR [rsi],esi
   140014cdd:	rex.W sub bpl,bl
   140014ce0:	mov    edx,0x234eaeea
   140014ce5:	rex.WRX scas al,BYTE PTR es:[rdi]
   140014ce7:	es pop rsp
   140014ce9:	mov    ebp,0xb202c2b3
   140014cee:	mov    DWORD PTR [rip+0x3b175210],edx        # 0x17b189f04
   140014cf4:	nop
   140014cf5:	push   rax
   140014cf6:	paddsw mm0,mm6
   140014cf9:	repnz cmc 
   140014cfb:	mov    bh,0x83
   140014cfd:	jnp    0x140014d76
   140014cff:	or     BYTE PTR [rsi+0x71348a3c],0x12
   140014d06:	(bad)  
   140014d07:	movsxd edx,DWORD PTR [rbp-0x1f]
   140014d0a:	sub    eax,DWORD PTR [rax]
   140014d0c:	adc    dl,BYTE PTR [rdi+0x40]
   140014d0f:	and    ah,BYTE PTR [rcx+rcx*2+0x2d]
   140014d13:	ja     0x140014d16
   140014d15:	rex.WRXB rol QWORD PTR [r8-0x2d],0x45
   140014d1a:	test   al,0x3b
   140014d1c:	cmp    BYTE PTR [rdx-0x5],bh
   140014d1f:	(bad)  
   140014d20:	and    DWORD PTR [rcx+0x6995804b],0x8e3d98ec
   140014d2a:	shr    DWORD PTR [rcx+0x6716a8e3],0x11
   140014d31:	(bad)  
   140014d32:	xchg   edi,eax
   140014d33:	fsubr  QWORD PTR [r8-0x6bb6ebce]
   140014d3a:	adc    eax,0x7235197e
   140014d3f:	(bad)  
   140014d40:	jg     0x140014d8f
   140014d42:	mov    ecx,0xfd57afdb
   140014d47:	sub    DWORD PTR [rcx+0x17],esi
   140014d4a:	cwde   
   140014d4b:	cmp    al,0xb6
   140014d4d:	out    dx,eax
   140014d4e:	(bad)  
   140014d4f:	ds (bad) 
   140014d51:	retf   0x5b9
   140014d54:	mov    bh,0xe7
   140014d56:	(bad)  
   140014d57:	xlat   BYTE PTR ds:[rbx]
   140014d58:	addr32 out dx,al
   140014d5a:	sub    DWORD PTR [rbx+0x5e3b607],0xbecf635d
   140014d64:	push   rcx
   140014d65:	adc    al,0x43
   140014d67:	add    al,0xa
   140014d69:	add    DWORD PTR [rcx+rbx*1-0x6e],ecx
   140014d6d:	out    0xd0,eax
   140014d6f:	movabs ds:0x9026791a4fe0d53e,al
   140014d78:	cli    
   140014d79:	jnp    0x140014de5
   140014d7b:	cmc    
   140014d7c:	sbb    eax,0xaac241dd
   140014d81:	add    eax,0x5399cfc4
   140014d86:	shl    edi,0x8
   140014d89:	and    eax,0x90c5ddca
   140014d8e:	std    
   140014d8f:	std    
   140014d90:	add    al,0x14
   140014d92:	mov    BYTE PTR [rdx],al
   140014d94:	mov    edx,0x88dd8848
   140014d99:	cmp    al,0x24
   140014d9b:	jbe    0x140014db4
   140014d9d:	add    al,cl
   140014d9f:	sbb    DWORD PTR [rsi+0x17507bd0],ecx
   140014da5:	mov    DWORD PTR [rdx],ebx
   140014da7:	mov    al,0x22
   140014da9:	rex.WRB mov r11b,0xfc
   140014dac:	(bad)  
   140014dad:	out    0x82,al
   140014daf:	sbb    al,cl
   140014db1:	lods   al,BYTE PTR ds:[rsi]
   140014db2:	sti    
   140014db3:	(bad)  
   140014db4:	cs data16 (bad) 
   140014db7:	xor    eax,0x1a71fb6f
   140014dbc:	(bad)  
   140014dbe:	adc    DWORD PTR [rsi-0x331338c],edi
   140014dc4:	jb     0x140014e1b
   140014dc6:	or     BYTE PTR [rsi+0x3ce00a74],bh
   140014dcc:	(bad)  
   140014dcd:	(bad)  
   140014dce:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014dcf:	mov    bh,0xbd
   140014dd1:	movsxd edi,edi
   140014dd3:	shr    DWORD PTR [rbx],0xae
   140014dd6:	jp     0x140014e1f
   140014dd8:	fild   WORD PTR [rax-0x1]
   140014ddb:	xchg   DWORD PTR [rdx-0x54],eax
   140014dde:	out    dx,al
   140014ddf:	rex.WR
   140014de0:	(bad)
   140014de5:	(bad)  
   140014de6:	rex.WRB in al,0xb6
   140014de9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014dea:	jo     0x140014d74
   140014dec:	lods   al,BYTE PTR ds:[rsi]
   140014ded:	jae    0x140014e58
   140014def:	xor    BYTE PTR [rbx-0x7a620a43],cl
   140014df5:	fstp   QWORD PTR [rax]
   140014df7:	mov    dl,0x78
   140014df9:	movsxd ecx,edx
   140014dfb:	rex.RXB sub eax,0xb3c2b2b7
   140014e01:	add    BYTE PTR [rsi],cl
   140014e03:	or     r15b,r8b
   140014e06:	add    BYTE PTR [rcx+rbp*4+0x5ce38379],al
   140014e0d:	or     al,0x26
   140014e0f:	cmp    esp,eax
   140014e11:	and    ecx,esi
   140014e13:	out    0xb1,eax
   140014e15:	mov    esp,0x566deb0
   140014e1a:	push   rbp
   140014e1b:	rex.WRXB lea r10,[r13+0x46c46eab]
   140014e22:	call   QWORD PTR [rax]
   140014e24:	test   al,0xef
   140014e26:	(bad)  
   140014e27:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014e28:	xchg   ebx,eax
   140014e29:	rex.RXB ror DWORD PTR [r11+0x73],0x92
   140014e2e:	(bad)  
   140014e2f:	adc    BYTE PTR [rdx],ch
   140014e31:	ins    DWORD PTR es:[rdi],dx
   140014e32:	adc    ch,BYTE PTR [rdx-0x49]
   140014e35:	rcl    DWORD PTR [rdi+rax*8],cl
   140014e38:	adc    BYTE PTR [rdi],bl
   140014e3a:	cmp    eax,0xe6626e6e
   140014e3f:	(bad)  
   140014e40:	mov    bh,0xe0
   140014e42:	hlt    
   140014e43:	(bad)  
   140014e44:	outs   dx,DWORD PTR ds:[rsi]
   140014e45:	rex.X out dx,eax
   140014e47:	out    0x2a,al
   140014e49:	ret    0x29dc
   140014e4c:	mov    WORD PTR [rsi+rcx*4-0x5e],cs
   140014e50:	sahf   
   140014e51:	lahf   
   140014e52:	add    al,0xad
   140014e54:	sub    al,0x0
   140014e56:	imul   esp,DWORD PTR [rbx],0xeb750437
   140014e5c:	scas   eax,DWORD PTR es:[rdi]
   140014e5d:	int    0x3e
   140014e5f:	cmc    
   140014e60:	dec    ah
   140014e62:	repnz pop rbx
   140014e64:	cmp    al,0xdf
   140014e66:	fcomp  QWORD PTR [rbp-0x25]
   140014e69:	fild   QWORD PTR [rcx+rdi*4+0x2147ac89]
   140014e70:	(bad)  
   140014e71:	lahf   
   140014e72:	adc    eax,0x212cc048
   140014e77:	retf   0x74d5
   140014e7a:	repz movabs al,ds:0x4dccc59e3d23e3db
   140014e84:	sar    DWORD PTR [rdx+0x73194eef],1
   140014e8a:	jns    0x140014e74
   140014e8c:	xchg   ebp,eax
   140014e8d:	repz pop rax
   140014e8f:	(bad)  
   140014e90:	and    esi,ecx
   140014e92:	ret    
   140014e93:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014e94:	lahf   
   140014e95:	cli    
   140014e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   140014e98:	xchg   ecx,eax
   140014e99:	je     0x140014e25
   140014e9b:	jno    0x140014e3e
   140014e9d:	(bad)  
   140014e9e:	or     edi,ebp
   140014ea0:	cdq    
   140014ea1:	(bad)
   140014ea4:	retf   
   140014ea5:	ret    0x592c
   140014ea8:	jge    0x140014e69
   140014eaa:	xchg   DWORD PTR [rcx+0x4d],ebp
   140014ead:	push   0xfffffffff024e515
   140014eb2:	xchg   esi,eax
   140014eb3:	out    0xc3,eax
   140014eb5:	jle    0x140014e6a
   140014eb7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014eb8:	leave  
   140014eb9:	rex.WB xchg BYTE PTR [r8+0x220e9cec],dl
   140014ec0:	sub    bh,bl
   140014ec2:	rex.WXB
   140014ec3:	cmp    ebp,DWORD PTR [r9-0x2084b3db]
   140014eca:	(bad)  
   140014ecb:	xchg   ebx,eax
   140014ecc:	ja     0x140014f4d
   140014ece:	add    al,0x97
   140014ed0:	inc    BYTE PTR [rcx]
   140014ed2:	mov    dl,0x71
   140014ed4:	jl     0x140014f2f
   140014ed6:	(bad)  
   140014ed7:	ud1    esi,DWORD PTR [rax-0x29c31ff6]
   140014ede:	jle    0x140014f48
   140014ee0:	iret   
   140014ee1:	sahf   
   140014ee2:	(bad)  
   140014ee3:	int    0x6f
   140014ee5:	jnp    0x140014eae
   140014ee7:	lea    edi,[rbx]
   140014ee9:	ja     0x140014eda
   140014eeb:	stc    
   140014eec:	xchg   ecx,eax
   140014eed:	mov    edx,0xa44f79d3
   140014ef2:	jo     0x140014f69
   140014ef4:	add    dh,BYTE PTR [rdx]
   140014ef6:	pushf  
   140014ef7:	cpuid  
   140014ef9:	sbb    eax,0x265dfc73
   140014efe:	test   BYTE PTR [rcx+0x77],ch
   140014f01:	rex (bad) 
   140014f03:	pop    rsi
   140014f04:	rex.WX
   140014f05:	rex.X ret 0x4e18
   140014f09:	xor    ch,BYTE PTR [rbx+0xb]
   140014f0c:	(bad)  
   140014f0d:	stos   BYTE PTR es:[rdi],al
   140014f0e:	(bad)  
   140014f0f:	or     edx,ebx
   140014f11:	jmp    0xd7e17832
   140014f16:	or     eax,0xacfc3c9a
   140014f1b:	push   rsp
   140014f1c:	rex.WX loopne 0x140014f8c
   140014f1f:	(bad)  
   140014f20:	loopne 0x140014f82
   140014f22:	sbb    edx,0x92f64168
   140014f28:	cmovb  esp,DWORD PTR [rcx-0x6c6b9b5a]
   140014f2f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014f30:	jge    0x140014eec
   140014f32:	push   rdx
   140014f33:	add    eax,eax
   140014f35:	or     BYTE PTR [rax+0x8ec0d9a],ch
   140014f3b:	add    ebx,ebp
   140014f3d:	xchg   edi,eax
   140014f3e:	pop    rsp
   140014f3f:	mov    ?,WORD PTR [rbp+0x3b344181]
   140014f45:	xchg   BYTE PTR [rcx-0x665fb09d],al
   140014f4b:	cdq    
   140014f4c:	rex fcomp QWORD PTR [rdi+rax*1+0x51]
   140014f51:	test   DWORD PTR [rsi+rbp*4-0x1d7ad0e4],eax
   140014f58:	sub    al,0x8c
   140014f5a:	(bad)  
   140014f5b:	fld    QWORD PTR [rbp*8-0x209877c2]
   140014f62:	lock add esp,edx
   140014f65:	popf   
   140014f66:	test   BYTE PTR ds:[rcx-0x70b373cf],bl
   140014f6d:	(bad)  
   140014f6e:	(bad)  
   140014f6f:	cli    
   140014f70:	cmp    dl,ah
   140014f72:	loop   0x140014f90
   140014f74:	push   0xffffffffaee00563
   140014f79:	(bad)  
   140014f7a:	es cli 
   140014f7c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014f7d:	lods   al,BYTE PTR ds:[rsi]
   140014f7e:	or     BYTE PTR [rcx],bh
   140014f80:	in     eax,0x37
   140014f82:	jo     0x140014f3f
   140014f84:	call   0x1042ffd50
   140014f89:	mov    dl,0x33
   140014f8b:	sar    BYTE PTR [rdx-0x95249cc],0xb
   140014f92:	rex.RX retf 
   140014f94:	cmp    bh,BYTE PTR [rbx-0x4d73aa25]
   140014f9a:	xchg   ebx,eax
   140014f9b:	add    esi,0x15
   140014f9e:	adc    BYTE PTR [rdx+0x2],dh
   140014fa1:	adc    BYTE PTR [rbp-0x5cb36981],dl
   140014fa7:	enter  0x2ac2,0x4
   140014fab:	jne    0x14001502c
   140014fad:	jrcxz  0x140014fe8
   140014faf:	fisubr DWORD PTR [rcx]
   140014fb1:	pop    rbx
   140014fb2:	in     eax,0x3b
   140014fb4:	sub    al,BYTE PTR [rdi+rsi*1]
   140014fb7:	movabs ds:0xb74d03cea0098200,eax
   140014fc0:	(bad)  
   140014fc1:	add    BYTE PTR [rbp-0x22],bl
   140014fc4:	fsub   st,st(2)
   140014fc6:	popf   
   140014fc7:	xor    BYTE PTR [rbx],dh
   140014fc9:	push   rbx
   140014fca:	cld    
   140014fcb:	out    0x56,eax
   140014fcd:	cmp    ah,BYTE PTR [rax-0x5a73cda8]
   140014fd3:	sbb    al,0x58
   140014fd5:	(bad)  
   140014fd6:	add    BYTE PTR [rbp+0x41],al
   140014fd9:	adc    DWORD PTR [rcx],esi
   140014fdb:	adc    eax,0x8f5181d9
   140014fe0:	stos   DWORD PTR es:[rdi],eax
   140014fe1:	pop    rsp
   140014fe2:	mov    DWORD PTR [rcx+0x323ce51d],edi
   140014fe8:	in     al,0x4a
   140014fea:	push   0x1c
   140014fec:	retf   0x2246
   140014fef:	add    al,0x46
   140014ff1:	movabs al,ds:0x7f9b047bbcde2180
   140014ffa:	lods   al,BYTE PTR ds:[rsi]
   140014ffb:	pop    rbp
   140014ffc:	or     DWORD PTR [rbx-0x3],0xfffffff9
   140015000:	xchg   edx,eax
   140015001:	outs   dx,BYTE PTR ds:[rsi]
   140015002:	(bad)  
   140015003:	add    DWORD PTR [rbx+r15*4-0x2283a953],r11d
   14001500b:	popf   
   14001500c:	outs   dx,DWORD PTR ds:[rsi]
   14001500d:	fnsave [rbx-0x8]
   140015010:	(bad)  
   140015012:	(bad)  
   140015014:	(bad)  
   140015015:	sar    bh,1
   140015017:	movabs eax,ds:0x698430e808bbeb18
   140015020:	(bad)  
   140015021:	(bad)  
   140015022:	fcmove st,st(0)
   140015024:	and    BYTE PTR [rdi+0x554004f],al
   14001502a:	movabs al,ds:0xb6edca27c599f130
   140015033:	jno    0x14001509b
   140015035:	(bad)  
   140015036:	mov    bh,0xc4
   140015038:	mov    BYTE PTR [rbp+0x7],ah
   14001503b:	sbb    BYTE PTR [rdi],dh
   14001503d:	sbb    bl,ah
   14001503f:	sbb    ch,BYTE PTR [rbx]
   140015041:	std    
   140015042:	xchg   edx,eax
   140015043:	mov    esp,0xe7379c
   140015048:	ins    BYTE PTR es:[rdi],dx
   140015049:	push   rbp
   14001504a:	enter  0xad84,0x1b
   14001504e:	(bad)  
   14001504f:	fistp  WORD PTR [rax]
   140015051:	cli    
   140015052:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015053:	(bad)  
   140015054:	sahf   
   140015055:	add    al,0x26
   140015057:	sub    DWORD PTR [rax],ecx
   140015059:	(bad)  
   14001505a:	out    0xd,eax
   14001505c:	je     0x140014fe4
   14001505e:	rex.RX mov al,0xf4
   140015061:	(bad)  
   140015062:	fcmovnbe st,st(1)
   140015064:	sbb    eax,0xfa7e09d8
   140015069:	(bad)  
   14001506a:	xor    al,0x93
   14001506c:	(bad)  
   14001506d:	adc    bh,dl
   14001506f:	push   rsi
   140015070:	je     0x140015037
   140015072:	cdq    
   140015073:	add    BYTE PTR [rcx-0x282b14e3],cl
   140015079:	jle    0x140015078
   14001507b:	(bad)  
   14001507c:	outs   dx,BYTE PTR ds:[rsi]
   14001507d:	jnp    0x14001509e
   14001507f:	neg    BYTE PTR ss:[rdi-0x79]
   140015083:	(bad)  
   140015084:	(bad)  
   140015085:	cmp    al,0x7a
   140015087:	out    0xc6,eax
   140015089:	xor    DWORD PTR [rsi*2+0x34dcf51c],edi
   140015090:	ret    0x82ca
   140015093:	xor    al,0xfb
   140015095:	movabs al,ds:0x6fda7215004fc994
   14001509e:	and    ch,0x1
   1400150a1:	jo     0x140015029
   1400150a3:	cld    
   1400150a4:	stos   BYTE PTR es:[rdi],al
   1400150a5:	fdiv   DWORD PTR [rdx-0x5710d0bb]
   1400150ab:	cmp    dh,0xe6
   1400150ae:	(bad)  
   1400150af:	test   al,0x7b
   1400150b1:	and    BYTE PTR [rdi-0x582ecd61],cl
   1400150b7:	push   rcx
   1400150b8:	add    al,0x7b
   1400150ba:	add    BYTE PTR [rbp-0x54],ah
   1400150bd:	mov    esp,0x4419ebc5
   1400150c2:	lock out dx,eax
   1400150c4:	mov    bh,0xa0
   1400150c6:	xchg   BYTE PTR [rdx+0x39],al
   1400150c9:	in     al,0x6b
   1400150cb:	enter  0xc038,0x90
   1400150cf:	sub    DWORD PTR [rax-0x1d],0xffffffb2
   1400150d3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400150d4:	mov    ecx,0x2b9e7248
   1400150d9:	add    dl,BYTE PTR gs:[rbp+0x1e]
   1400150dd:	sbb    eax,0xa66016f
   1400150e2:	add    DWORD PTR [rbp-0x75ff3c7a],ebp
   1400150e8:	pop    rsi
   1400150e9:	(bad)  
   1400150ea:	repz rcl BYTE PTR fs:[rbx+rax*2],cl
   1400150ef:	pop    rcx
   1400150f0:	loope  0x140015119
   1400150f2:	fild   WORD PTR [rdi+0x22]
   1400150f5:	clts   
   1400150f7:	data16 rex.WX
   1400150f9:	add    al,0x5a
   1400150fc:	mov    ss,WORD PTR [rbp+0x3ab24ef3]
   140015102:	shr    bl,1
   140015104:	movabs eax,ds:0xfe6fbb97a0004f3c
   14001510d:	mov    ecx,0xdf9af470
   140015112:	in     al,0x6b
   140015114:	(bad)  
   140015115:	test   DWORD PTR [rbp+0x3],eax
   140015118:	pop    rsi
   140015119:	(bad)  
   14001511a:	xor    dh,al
   14001511c:	jnp    0x140015175
   14001511e:	add    bh,ah
   140015120:	mov    cl,0xf6
   140015122:	add    edi,DWORD PTR [rbx]
   140015124:	ja     0x1400150fc
   140015126:	mov    bh,0xbd
   140015128:	jmp    0x140015167
   14001512a:	(bad)  
   14001512b:	mov    gs,esp
   14001512d:	fsincos 
   14001512f:	and    esi,DWORD PTR [rbp-0x23]
   140015132:	repz mov esi,0xce4ae910
   140015138:	iret   
   140015139:	pop    rsi
   14001513a:	ret    0x9c6c
   14001513d:	(bad)  
   14001513e:	sbb    BYTE PTR [rcx+rsi*4-0x25],dl
   140015142:	(bad)  
   140015143:	or     ah,bh
   140015145:	call   0x1839b67c1
   14001514a:	rol    DWORD PTR [rdi-0x19826a53],1
   140015150:	test   DWORD PTR [rbx],edi
   140015152:	cli    
   140015153:	add    eax,0x1f22c617
   140015158:	(bad)  
   140015159:	(bad)  
   14001515a:	sbb    eax,DWORD PTR [rax]
   14001515c:	fwait
   14001515d:	cs sahf 
   14001515f:	rex.WXB and r10b,cl
   140015162:	mov    edi,0xa7f936b0
   140015167:	(bad)  
   140015168:	mov    bl,0x37
   14001516a:	frstor [rax-0x6a]
   14001516d:	ror    BYTE PTR [rdi],0x6d
   140015170:	or     al,0x74
   140015172:	data16 stos BYTE PTR es:[rdi],al
   140015174:	in     eax,dx
   140015175:	sub    DWORD PTR [rcx],edx
   140015177:	rex.W jge 0x1400151be
   14001517a:	rex.X ins BYTE PTR es:[rdi],dx
   14001517c:	(bad)  
   14001517d:	mov    al,0xa3
   14001517f:	mov    ds,WORD PTR [rax-0x45]
   140015182:	repnz (bad) 
   140015184:	lods   al,BYTE PTR ds:[rsi]
   140015185:	imul   ebp
   140015187:	rex jp 0x140015174
   14001518a:	cmp    ebp,eax
   14001518c:	sahf   
   14001518d:	cmp    al,0x82
   14001518f:	push   0x65
   140015191:	add    DWORD PTR [rcx-0xbbdbf27],esp
   140015197:	repz test DWORD PTR [rbp-0x543d3f3],ecx
   14001519e:	rex.WRB sbb BYTE PTR [r13+0x6be8ede1],r15b
   1400151a5:	ss adc esi,esp
   1400151a8:	movsxd r12,DWORD PTR [r10+r13*2+0x14]
   1400151ad:	mov    ebp,0xcb08e333
   1400151b2:	jae    0x140015154
   1400151b4:	out    dx,al
   1400151b5:	sbb    cl,BYTE PTR [rax-0x3ceb2eae]
   1400151bb:	cwde   
   1400151bc:	jg     0x14001515e
   1400151be:	(bad)  
   1400151bf:	ins    DWORD PTR es:[rdi],dx
   1400151c0:	cmc    
   1400151c1:	adc    eax,0x2b7e524
   1400151c6:	cmp    esi,ebx
   1400151c8:	outs   dx,DWORD PTR ds:[rsi]
   1400151c9:	cs scas al,BYTE PTR es:[rdi]
   1400151cb:	cmp    al,0x8b
   1400151cd:	or     al,0xc7
   1400151cf:	add    edx,DWORD PTR [rdi-0x6752603e]
   1400151d5:	out    0xf8,eax
   1400151d7:	fwait
   1400151d8:	cmp    bpl,spl
   1400151db:	xchg   edi,eax
   1400151dc:	loope  0x1400151ed
   1400151de:	sahf   
   1400151df:	rex.WRXB movabs al,ds:0xc86ee27dc3940e39
   1400151e9:	add    ecx,DWORD PTR [rcx+0x79731f20]
   1400151ef:	loop   0x1400151eb
   1400151f1:	cld    
   1400151f2:	rex.RB ret 0xeb0b
   1400151f6:	outs   dx,DWORD PTR ds:[rsi]
   1400151f7:	cmp    bh,BYTE PTR [rax+rdx*2+0x6feb4503]
   1400151fe:	call   QWORD PTR [rbp+rax*8-0x550f48c1]
   140015205:	rex.XB adc al,0x46
   140015208:	adc    DWORD PTR [rcx],edi
   14001520a:	enter  0x2263,0x37
   14001520e:	rex.WR sub rax,0x711f6140
   140015214:	add    DWORD PTR [rcx-0x24],edi
   140015217:	hlt    
   140015218:	adc    al,0xb5
   14001521a:	add    BYTE PTR [rsi+0x432f9072],bl
   140015220:	xlat   BYTE PTR ds:[rbx]
   140015221:	and    eax,0x5cb4e2e4
   140015226:	ror    dh,0xac
   140015229:	pop    rsp
   14001522a:	or     eax,0xbf3151cf
   14001522f:	ins    DWORD PTR es:[rdi],dx
   140015230:	fisub  WORD PTR [rbp+0x4aaf8340]
   140015236:	or     ebp,DWORD PTR [rdi+0x7]
   140015239:	loope  0x1400152ac
   14001523b:	mov    esp,0x2f01398c
   140015240:	pop    rsp
   140015241:	add    DWORD PTR [rdi+rax*8-0x504a026],ebx
   140015248:	(bad)  
   140015249:	or     al,0x5d
   14001524b:	ja     0x140015220
   14001524d:	sub    eax,0xefebedef
   140015252:	sti    
   140015253:	xchg   DWORD PTR [rbp+0x55],esi
   140015256:	ffreep st(5)
   140015258:	rex
   140015259:	rex.WRXB and r15b,BYTE PTR [r8-0x4e]
   14001525d:	or     al,0x3
   14001525f:	push   0x4b33ca52
   140015264:	out    dx,eax
   140015265:	xor    esi,DWORD PTR [rcx+0x3e]
   140015268:	test   al,0x59
   14001526a:	(bad)  
   14001526b:	cld    
   14001526c:	nop
   14001526d:	int3   
   14001526e:	adc    eax,0x600c0f80
   140015273:	add    ch,BYTE PTR [rdx+rbx*2+0x44]
   140015277:	(bad)  
   140015278:	out    dx,al
   140015279:	rex.WRB (bad) 
   14001527b:	jne    0x14001529c
   14001527d:	(bad)  
   14001527e:	or     DWORD PTR [rbx-0x52],ebx
   140015281:	xchg   esp,eax
   140015282:	fwait
   140015283:	mov    dh,BYTE PTR [rbx-0x4d60264]
   140015289:	push   rax
   14001528a:	retf   0x823b
   14001528d:	mov    ebx,0x1790626
   140015292:	js     0x140015214
   140015294:	shl    BYTE PTR [rdx-0x45],0x72
   140015298:	cmp    ecx,ebx
   14001529a:	(bad)  
   14001529b:	adc    esp,DWORD PTR [rax-0x77ef3536]
   1400152a1:	repnz add bl,ah
   1400152a4:	and    BYTE PTR [rax+0x17],dh
   1400152a7:	cmp    eax,DWORD PTR [rax]
   1400152a9:	push   rsp
   1400152aa:	xchg   edi,eax
   1400152ab:	pop    rsp
   1400152ac:	adc    ebp,0xfd3441be
   1400152b2:	cmp    edx,eax
   1400152b4:	sbb    al,0x7d
   1400152b6:	add    dh,BYTE PTR [rax+rsi*1-0x745115f3]
   1400152bd:	and    bl,BYTE PTR [rbx+0x5f]
   1400152c0:	(bad)  
   1400152c1:	jbe    0x1400152b1
   1400152c3:	(bad)
   1400152c6:	mov    ebp,0x30df751f
   1400152cb:	mov    al,0x70
   1400152cd:	or     bh,BYTE PTR [rbx]
   1400152cf:	addr32 (bad) 
   1400152d1:	movsxd esi,DWORD PTR [rax+0x7a]
   1400152d4:	or     al,0x71
   1400152d6:	(bad)  
   1400152d7:	(bad)  
   1400152d8:	mov    ah,0xba
   1400152da:	and    al,0xb9
   1400152dc:	add    al,0x94
   1400152de:	pushf  
   1400152df:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400152e0:	(bad)  
   1400152e1:	push   sp
   1400152e3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400152e4:	jge    0x1400152e4
   1400152e6:	cmc    
   1400152e7:	(bad)  
   1400152e8:	rex.WR clc 
   1400152ea:	or     eax,0x7e1347fa
   1400152ef:	adc    ebp,DWORD PTR [rsi+riz*1+0x70]
   1400152f3:	adc    BYTE PTR [rdi-0x3f],dh
   1400152f6:	imul   eax,DWORD PTR [rax+rbx*2],0xf61c9fe7
   1400152fd:	movsxd edx,DWORD PTR [rsi+0x36]
   140015300:	mov    edi,0x2882f825
   140015305:	xor    ch,BYTE PTR [rdi-0x70]
   140015308:	fld    QWORD PTR [rsi]
   14001530a:	fsubr  DWORD PTR [rbx+0x12]
   14001530d:	js     0x14001537c
   14001530f:	rex.WX
   140015310:	rex
   140015311:	rex.RXB push r13
   140015313:	lods   al,BYTE PTR ds:[rsi]
   140015314:	and    eax,0x3866dfe5
   140015319:	nop
   14001531a:	(bad)  
   14001531b:	fisub  WORD PTR [rcx+0x796713be]
   140015321:	(bad)  
   140015322:	push   rdx
   140015323:	(bad)  
   140015324:	ins    DWORD PTR es:[rdi],dx
   140015325:	(bad)  
   140015326:	cs xchg edx,eax
   140015328:	in     al,dx
   140015329:	lock fnsave [rax+0x61]
   14001532d:	stos   DWORD PTR es:[rdi],eax
   14001532e:	mov    WORD PTR [rdx-0x1c659c76],ss
   140015334:	sub    DWORD PTR [rdi+0x2bb9ad59],ebp
   14001533a:	xchg   ebp,eax
   14001533b:	adc    ah,al
   14001533d:	fwait
   14001533e:	nop
   14001533f:	mov    al,0x89
   140015341:	scas   eax,DWORD PTR es:[rdi]
   140015342:	sbb    eax,0x8104a28
   140015347:	rex.WB pop r12
   140015349:	sbb    ah,bl
   14001534b:	(bad)  
   14001534c:	ins    BYTE PTR es:[rdi],dx
   14001534d:	(bad)  
   14001534e:	pop    rdx
   14001534f:	faddp  st(4),st
   140015351:	push   rsi
   140015352:	mov    ebx,0x1281e79f
   140015357:	lods   eax,DWORD PTR ds:[rsi]
   140015358:	push   rsp
   140015359:	adc    BYTE PTR [rdx+0x276b9710],al
   14001535f:	fistp  QWORD PTR ss:[rdi]
   140015362:	(bad)  
   140015363:	int    0xdf
   140015365:	jns    0x1400153a0
   140015367:	(bad)  
   140015368:	vmwrite rdi,QWORD PTR [rsi+0xa]
   14001536c:	loopne 0x1400153aa
   14001536e:	(bad)  
   14001536f:	(bad)  
   140015370:	rex jl 0x14001534e
   140015373:	(bad)  
   140015374:	cld    
   140015375:	fmul   DWORD PTR [rbp+0x3b]
   140015378:	ja     0x140015369
   14001537a:	std    
   14001537b:	(bad)  
   14001537c:	rex.WRXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14001537e:	repz rcr DWORD PTR [rax],0xc2
   140015382:	push   rbp
   140015383:	and    cl,cl
   140015385:	mov    DWORD PTR [rsi],edx
   140015387:	(bad)
   14001538a:	js     0x140015319
   14001538c:	sti    
   14001538d:	out    0xe4,eax
   14001538f:	mov    esi,0x68217332
   140015394:	push   0xffffffffef7b72c3
   140015399:	mov    al,0xbd
   14001539b:	mov    al,0xee
   14001539d:	mov    dl,0x43
   14001539f:	(bad)  
   1400153a0:	rex.RX pushf 
   1400153a2:	ror    cl,cl
   1400153a5:	ret    0x73e6
   1400153a8:	push   rdx
   1400153a9:	sti    
   1400153aa:	movabs al,ds:0xe94b2c53252c356a
   1400153b3:	(bad)  
   1400153b4:	retf   
   1400153b5:	and    BYTE PTR [rdx],dl
   1400153b7:	mov    dh,0x3c
   1400153b9:	jge    0x140015378
   1400153bb:	mov    BYTE PTR [rbp+rbp*8+0x71],cl
   1400153bf:	jno    0x1400153fe
   1400153c1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400153c2:	jns    0x14001538c
   1400153c4:	lods   eax,DWORD PTR ds:[rsi]
   1400153c5:	(bad)  
   1400153c6:	push   rbx
   1400153c7:	sbb    DWORD PTR [rdx+0x2a],esi
   1400153ca:	(bad)  
   1400153cb:	(bad)  
   1400153cc:	mov    cl,0xcf
   1400153ce:	retf   
   1400153cf:	(bad)  
   1400153d0:	rex.WB cli 
   1400153d2:	or     al,0x8c
   1400153d4:	mov    WORD PTR [rax-0x1b],fs
   1400153d7:	xchg   BYTE PTR [rdi],dh
   1400153d9:	(bad)  
   1400153da:	mov    bl,0x7f
   1400153dc:	adc    cl,ch
   1400153de:	cdq    
   1400153df:	rex.RXB sbb BYTE PTR [r9+0xac6d071],0x62
   1400153e7:	push   rbp
   1400153e8:	(bad)  
   1400153e9:	hlt    
   1400153ea:	cmc    
   1400153eb:	inc    DWORD PTR [rax]
   1400153ed:	retf   
   1400153ee:	sti    
   1400153ef:	scas   eax,DWORD PTR es:[rdi]
   1400153f0:	rex.RXB (bad) 
   1400153f3:	xor    bh,BYTE PTR [rdx-0x1a]
   1400153f6:	rex.WRX (bad) 
   1400153f8:	js     0x14001546c
   1400153fa:	adc    al,0xf5
   1400153fc:	in     al,dx
   1400153fd:	and    al,0xc2
   1400153ff:	repnz add dl,al
   140015402:	test   al,0xf5
   140015404:	(bad)  
   140015405:	(bad)  
   140015406:	rex.WB jmp 0x14001541f
   140015409:	jrcxz  0x140015442
   14001540b:	call   0x12559fd2f
   140015410:	xchg   DWORD PTR [rdx-0x80],ecx
   140015413:	lods   al,BYTE PTR ds:[rsi]
   140015414:	(bad)  
   140015415:	mov    ebp,0xed6e9a50
   14001541a:	xchg   ecx,eax
   14001541b:	int    0x90
   14001541d:	xchg   ebx,eax
   14001541e:	js     0x1400153e1
   140015420:	(bad)  
   140015421:	or     al,dl
   140015423:	leave  
   140015424:	out    dx,al
   140015425:	ret    0xfe46
   140015428:	cmp    eax,0xc09865d9
   14001542d:	xchg   edi,eax
   14001542e:	xchg   esi,eax
   14001542f:	sar    bh,cl
   140015431:	enter  0x8295,0x23
   140015435:	xor    BYTE PTR [rdi],ah
   140015437:	fst    QWORD PTR [rcx+rsi*4+0x16]
   14001543b:	xchg   esi,eax
   14001543c:	rcr    esi,cl
   14001543e:	fwait
   14001543f:	nop
   140015440:	mov    ebx,0x686bd125
   140015445:	mov    ebx,0xc1435270
   14001544a:	(bad)  
   14001544b:	push   rdx
   14001544d:	mov    ebp,0x373ffce6
   140015452:	shrd   DWORD PTR [rcx-0x73c973d7],edx,cl
   140015459:	jmp    0x14184f515
   14001545e:	rex.X add al,0x96
   140015461:	and    eax,0x5d488c1
   140015466:	sub    BYTE PTR [rdi+rbp*2],0xce
   14001546a:	fs sbb edi,ebx
   14001546d:	jp     0x1400154af
   14001546f:	rcl    BYTE PTR [rdx-0x53482cf],cl
   140015475:	lods   al,BYTE PTR ds:[rsi]
   140015476:	in     al,dx
   140015477:	rol    BYTE PTR [rcx-0x50],cl
   14001547a:	cmc    
   14001547b:	sbb    eax,0x50ec148d
   140015480:	jp     0x14001546f
   140015482:	(bad)  
   140015483:	rcl    ebx,cl
   140015485:	mov    bh,0xfe
   140015487:	adc    bh,BYTE PTR [rdi+0x593eebe6]
   14001548d:	pop    rsi
   14001548e:	(bad)  
   14001548f:	(bad)  
   140015490:	loopne 0x14001546e
   140015492:	or     ah,al
   140015494:	(bad)  
   140015496:	ds pop rsp
   140015498:	jnp    0x140015465
   14001549a:	jmp    0x140015423
   14001549c:	scas   al,BYTE PTR es:[rdi]
   14001549d:	mov    ebp,0xe9eff5e5
   1400154a2:	out    dx,eax
   1400154a3:	out    dx,eax
   1400154a4:	sti    
   1400154a5:	xchg   ecx,eax
   1400154a6:	rex.WRX push rbp
   1400154a8:	mov    edi,0x4300c005
   1400154ad:	(bad)  
   1400154ae:	xchg   esi,eax
   1400154af:	test   ecx,esi
   1400154b1:	xor    rax,0x423df5b9
   1400154b7:	rcr    BYTE PTR [rax+0x76fec3b7],1
   1400154bd:	mov    ah,0x3b
   1400154bf:	add    DWORD PTR [rdx+0x5f619731],ebx
   1400154c5:	sub    al,BYTE PTR [rdx+0x7b]
   1400154c8:	(bad)  
   1400154c9:	dec    DWORD PTR [rax-0x76be1d23]
   1400154cf:	xchg   ebp,eax
   1400154d0:	(bad)  
   1400154d1:	in     al,0xf
   1400154d3:	push   rbx
   1400154d4:	cmp    dh,ch
   1400154d6:	mov    edx,0x161fb01d
   1400154db:	push   rbx
   1400154dc:	and    BYTE PTR [rdi-0x2e2f5f4d],al
   1400154e2:	fdivr  DWORD PTR [rbp+rbp*8+0x23]
   1400154e6:	add    eax,0x6bc9fa4f
   1400154eb:	rex.WRB mov r15b,0x8e
   1400154ee:	push   rbx
   1400154ef:	sbb    dl,BYTE PTR [rdi+0x7b05423c]
   1400154f5:	lods   eax,DWORD PTR ds:[rsi]
   1400154f6:	jle    0x140015534
   1400154f8:	mov    BYTE PTR [rdx+rdi*8-0x1b],bh
   1400154fc:	jrcxz  0x140015496
   1400154fe:	add    BYTE PTR [rax],cl
   140015500:	adc    DWORD PTR [rbp+rbp*2-0x52],0xc2b7b061
   140015508:	fisubr DWORD PTR [rbx-0x71153a92]
   14001550e:	(bad)  
   14001550f:	xor    al,0x4f
   140015511:	or     BYTE PTR ds:[rdx],bh
   140015514:	(bad)  
   140015515:	sub    al,0x96
   140015517:	scas   eax,DWORD PTR es:[rdi]
   140015518:	mov    eax,0xfeafe30a
   14001551d:	sti    
   14001551e:	call   0x1bf3d562e
   140015523:	or     al,BYTE PTR [rbx-0x2d]
   140015526:	movabs ds:0x35363e8d213e9fe8,eax
   14001552f:	jmp    0x16b25e7bb
   140015534:	adc    DWORD PTR [rax],0xa8f61658
   14001553a:	and    DWORD PTR [rcx+0x7f],ebx
   14001553d:	mov    dl,0xe0
   14001553f:	xchg   DWORD PTR [rsi-0x4],edx
   140015542:	push   rcx
   140015543:	adc    esi,esi
   140015545:	push   rbx
   140015546:	stos   DWORD PTR es:[rdi],eax
   140015547:	or     eax,0x5d97340
   14001554c:	(bad)  
   14001554d:	and    eax,DWORD PTR [rcx+0x2d]
   140015550:	mov    ch,0x31
   140015552:	cld    
   140015553:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015554:	add    al,ah
   140015556:	mov    al,0x9d
   140015558:	add    BYTE PTR [rip+0xdc2d8b],ch        # 0x140dd82e9
   14001555e:	shr    BYTE PTR [rdi+rdi*1-0x35],cl
   140015562:	xchg   edi,eax
   140015563:	(bad)  
   140015564:	clc    
   140015565:	sbb    al,BYTE PTR [rax+0x5811cc84]
   14001556b:	push   rax
   14001556c:	xor    BYTE PTR [rdi-0x68ea26e9],al
   140015572:	int    0x15
   140015574:	imul   edi,eax,0xffffff91
   140015577:	(bad)  
   140015578:	pop    rsi
   140015579:	mov    dh,0xf8
   14001557b:	in     eax,0x66
   14001557d:	out    dx,al
   14001557e:	(bad)  
   14001557f:	and    eax,0x331fd348
   140015584:	es (bad) 
   140015586:	xlat   BYTE PTR ds:[rbx]
   140015587:	(bad)  
   140015588:	adc    al,0xe1
   14001558a:	rcl    BYTE PTR [rcx+0xa1b4ad4],1
   140015590:	push   rcx
   140015591:	xchg   DWORD PTR [rsi-0x4ff65634],ecx
   140015597:	sahf   
   140015598:	(bad)  
   140015599:	pushfw 
   14001559b:	or     al,0x5d
   14001559d:	pop    rdx
   14001559e:	clc    
   14001559f:	mov    bl,0x71
   1400155a1:	rex.RX adc al,0xaa
   1400155a4:	xor    BYTE PTR [rdx-0x3477de6e],0x63
   1400155ab:	retf   0x1a47
   1400155ae:	(bad)  
   1400155af:	in     al,0xb9
   1400155b1:	ins    BYTE PTR es:[rdi],dx
   1400155b2:	cmp    esp,ebp
   1400155b4:	pop    rdx
   1400155b5:	mov    al,0xe0
   1400155b7:	repz push rsp
   1400155b9:	jle    0x140015546
   1400155bb:	mov    esi,0x6ee578cb
   1400155c0:	add    bh,bl
   1400155c2:	rex.R (bad) 
   1400155c4:	or     DWORD PTR [rax+0x49],edi
   1400155c7:	mov    bh,0x33
   1400155c9:	sub    eax,DWORD PTR [rax-0x432ecb0d]
   1400155cf:	jmp    0x140015618
   1400155d1:	push   rcx
   1400155d3:	jmp    0x14001555b
   1400155d5:	rex.RX jbe 0x140015657
   1400155d8:	movabs al,ds:0x1aba04387f7b7b7
   1400155e1:	adc    eax,0x6ce69b7a
   1400155e6:	xchg   ebx,eax
   1400155e7:	pop    rbx
   1400155e8:	(bad)  
   1400155e9:	shl    DWORD PTR [rbx],cl
   1400155eb:	icebp  
   1400155ec:	(bad)  
   1400155ed:	xchg   edx,eax
   1400155ee:	mov    edx,0x9d212f32
   1400155f3:	or     cl,BYTE PTR [rax+0x6a]
   1400155f6:	cmp    DWORD PTR [rsi+rbp*1],0x45
   1400155fa:	rex.RXB jg 0x140015660
   1400155fd:	outs   dx,DWORD PTR ds:[rsi]
   1400155fe:	retf   
   1400155ff:	ins    BYTE PTR es:[rdi],dx
   140015600:	mov    edi,0xeecea5b6
   140015605:	rex.X stc 
   140015607:	cdq    
   140015608:	in     eax,0x8
   14001560a:	mov    BYTE PTR [rdx-0x79e25970],dl
   140015610:	add    BYTE PTR [rax+0x26d81ccd],ah
   140015616:	je     0x1400155b1
   140015618:	mov    dl,BYTE PTR [rcx+0x58]
   14001561b:	(bad)  
   14001561c:	rex.RXB adc r12b,BYTE PTR [r13-0x6aae2e0e]
   140015623:	push   rbx
   140015624:	nop
   140015625:	sub    ecx,DWORD PTR [rdi]
   140015627:	imul   ebp,DWORD PTR [rdx+riz*2],0xffffffee
   14001562b:	mov    esp,DWORD PTR [rbp+0x4d6e6c2]
   140015631:	jns    0x140015619
   140015633:	xor    BYTE PTR [rax],cl
   140015635:	sbb    DWORD PTR [rbx],0xea8340ec
   14001563b:	shr    BYTE PTR [rbx+0x2763bab0],cl
   140015641:	mov    edx,0x7a303b03
   140015646:	(bad)
   140015649:	cmp    esi,DWORD PTR [rsi-0x7d]
   14001564c:	push   rdi
   14001564d:	(bad)  
   14001564e:	xor    BYTE PTR [rax],bh
   140015650:	jnp    0x140015664
   140015652:	rex.XB xchg r11d,eax
   140015654:	movsxd ebp,DWORD PTR [rax+0x561067e6]
   14001565a:	xchg   edi,eax
   14001565b:	shr    BYTE PTR [rcx+0x3],0x64
   14001565f:	js     0x1400156be
   140015661:	lahf   
   140015662:	or     BYTE PTR [r10],r9b
   140015665:	std    
   140015666:	and    esi,eax
   140015668:	sub    ah,BYTE PTR [rdx+0x15516bc9]
   14001566e:	(bad)  
   14001566f:	fild   QWORD PTR [rip+0xbc59ad]        # 0x140bdb022
   140015675:	stos   DWORD PTR es:[rdi],eax
   140015676:	(bad)
   140015679:	add    BYTE PTR [rbx-0x3a],bh
   14001567c:	rex.RX (bad) 
   14001567e:	xor    DWORD PTR [rax-0x57],esp
   140015681:	sbb    DWORD PTR [rcx-0x8],0xffffffc9
   140015685:	test   DWORD PTR [rdi],esi
   140015687:	or     ebp,DWORD PTR [rsi+rsi*1-0x3]
   14001568b:	outs   dx,BYTE PTR ds:[rsi]
   14001568c:	sub    BYTE PTR [r15-0x7c58af5],r8b
   140015693:	std    
   140015694:	(bad)  [rbx]
   140015696:	(bad)  [rsi+0x3c8d29b1]
   14001569c:	adc    al,0xf6
   14001569e:	mov    ecx,0xeb16e8c1
   1400156a3:	push   0xffffffffffffffe3
   1400156a5:	mov    edi,0xd316531d
   1400156aa:	xor    edx,0x8a44a9ef
   1400156b0:	pushf  
   1400156b1:	out    0x9b,eax
   1400156b3:	and    bl,BYTE PTR [rax+0x7587e132]
   1400156b9:	(bad)  
   1400156ba:	cdq    
   1400156bb:	icebp  
   1400156bc:	mov    al,0xbc
   1400156be:	and    ecx,edi
   1400156c0:	(bad)  
   1400156c1:	xor    BYTE PTR [rbx-0x33c5da3c],ah
   1400156c7:	push   rdi
   1400156c8:	(bad)  
   1400156c9:	jns    0x140015689
   1400156cb:	in     eax,0x2d
   1400156cd:	fs (bad) 
   1400156cf:	sub    DWORD PTR [rdi+0x6a],ecx
   1400156d2:	(bad)  
   1400156d3:	ja     0x1400156b4
   1400156d5:	std    
   1400156d6:	(bad)  
   1400156d7:	(bad)  
   1400156d8:	clc    
   1400156d9:	(bad)  
   1400156da:	mul    DWORD PTR [rcx-0x21]
   1400156dd:	rex.RX icebp 
   1400156df:	xchg   ebx,eax
   1400156e0:	xchg   edi,eax
   1400156e1:	add    DWORD PTR [rcx],eax
   1400156e3:	pushf  
   1400156e4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400156e5:	lods   eax,DWORD PTR ds:[rsi]
   1400156e6:	(bad)  
   1400156e7:	xor    eax,0xe3bcde37
   1400156ec:	mov    edx,0x577b6f5b
   1400156f1:	inc    eax
   1400156f3:	ror    BYTE PTR [rdi+0x27755556],0x11
   1400156fa:	or     eax,0xbd21c831
   1400156ff:	cmp    eax,0xd68aa0f4
   140015704:	imul   esi,ecx,0xffffffd1
   140015707:	pop    si
   140015709:	gs (bad) 
   14001570b:	in     eax,dx
   14001570c:	cwde   
   14001570d:	add    ebx,DWORD PTR [rbx]
   14001570f:	(bad)  
   140015710:	jbe    0x14001572a
   140015712:	(bad)  
   140015713:	in     eax,0xfe
   140015715:	sub    BYTE PTR [rsi],ah
   140015717:	rex.RB
   140015718:	or     ah,BYTE PTR ss:[rax]
   14001571b:	xchg   esp,eax
   14001571c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001571d:	sbb    BYTE PTR [rsi+0x6e],dh
   140015720:	js     0x140015770
   140015722:	ss mov cl,0xe5
   140015725:	(bad)  
   140015726:	ins    DWORD PTR es:[rdi],dx
   140015727:	icebp  
   140015728:	call   rbp
   14001572a:	loop   0x140015746
   14001572c:	(bad)  
   14001572d:	enter  0xc956,0x5c
   140015731:	cmp    eax,0x409f1fbd
   140015736:	addr32 retf 0xd34e
   14001573a:	jae    0x1400157a6
   14001573c:	sbb    ebp,eax
   14001573e:	lods   eax,DWORD PTR ds:[rsi]
   14001573f:	jl     0x1400156f4
   140015741:	pop    rcx
   140015742:	sbb    al,0x2
   140015744:	rex.R loope 0x14001576c
   140015747:	rex.XB
   140015748:	rex.X stc 
   14001574a:	icebp  
   14001574b:	(bad)  
   14001574c:	(bad)  
   14001574d:	and    ecx,DWORD PTR [rsi-0x66]
   140015750:	out    dx,al
   140015751:	sub    edi,ebx
   140015753:	and    al,0x10
   140015755:	nop
   140015756:	sbb    dh,ah
   140015758:	vpmuludq ymm14,ymm6,ymm4
   14001575c:	jbe    0x14001574e
   14001575e:	(bad)  
   14001575f:	(bad)  
   140015760:	stos   DWORD PTR es:[rdi],eax
   140015761:	mov    cl,0x74
   140015763:	call   0x166d5003d
   140015768:	push   0xffffffffa64614fe
   14001576d:	mov    fs,WORD PTR [rdx+0x6814f667]
   140015773:	jne    0x140015786
   140015775:	fcomp  QWORD PTR [rbp+0x43]
   140015778:	mov    al,0x5a
   14001577a:	jg     0x140015731
   14001577c:	outs   dx,BYTE PTR ds:[rsi]
   14001577d:	push   rcx
   14001577e:	pop    rbx
   14001577f:	jge    0x1400157d6
   140015781:	int3   
   140015782:	rex.WX mov spl,0x49
   140015785:	mov    ebp,0x47edd97f
   14001578a:	lods   al,BYTE PTR ds:[rsi]
   14001578b:	mov    edi,0x5af273c1
   140015790:	or     bl,cl
   140015792:	jnp    0x140015715
   140015794:	jle    0x14001573c
   140015796:	(bad)  
   140015797:	rex.WB lods rax,QWORD PTR ds:[rsi]
   140015799:	jne    0x1400157e9
   14001579b:	(bad)  
   14001579c:	add    eax,ecx
   14001579e:	sub    eax,0xb575167f
   1400157a3:	lahf   
   1400157a4:	rol    DWORD PTR fs:[rip+0xffffffffbdf30c23],1        # 0xfdf463ce
   1400157ab:	push   rbx
   1400157ac:	enter  0x977b,0x4d
   1400157b0:	rex.RX sub al,0x2d
   1400157b3:	mov    eax,0x28a619d4
   1400157b8:	cmc    
   1400157b9:	(bad)  
   1400157ba:	xor    BYTE PTR [rbx-0x12],al
   1400157bd:	repz rex.B
   1400157bf:	gs stos DWORD PTR es:[rdi],eax
   1400157c1:	(bad)
   1400157c4:	lahf   
   1400157c5:	fistp  DWORD PTR [rsp-0xdf9c098]
   1400157cc:	(bad)  
   1400157cd:	(bad)  
   1400157ce:	sahf   
   1400157cf:	cmp    BYTE PTR [rsi+0x45b79527],ah
   1400157d5:	(bad)  
   1400157d6:	lahf   
   1400157d7:	pop    rdi
   1400157d8:	(bad)  
   1400157d9:	and    edi,DWORD PTR [rcx]
   1400157db:	rex.WRXB and rax,0x421517
   1400157e1:	xchg   DWORD PTR [rsp+riz*4-0x494debf],eax
   1400157e8:	in     eax,dx
   1400157e9:	pop    rbp
   1400157ea:	sub    DWORD PTR [rbp+0x6a],0xffffff98
   1400157ee:	movabs ds:0x42082b1b381a6365,al
   1400157f7:	sub    DWORD PTR [rdx],0x627bf28e
   1400157fd:	rex.RX test esi,r12d
   140015800:	push   rbp
   140015801:	ja     0x140015866
   140015803:	loop   0x1400157bb
   140015805:	sti    
   140015806:	mov    al,0xef
   140015808:	ror    eax,cl
   14001580a:	rex.WB
   14001580b:	rex.B (bad) 
   14001580d:	cdq    
   14001580e:	sbb    edx,DWORD PTR [rax-0x63]
   140015811:	xlat   BYTE PTR ds:[rbx]
   140015812:	fidivr DWORD PTR [rdi-0x18]
   140015815:	rex.RXB pop r15
   140015817:	mov    ch,0x6b
   140015819:	iret   
   14001581a:	mov    esi,0xce9d57f7
   14001581f:	ja     0x10f24b73d
   140015825:	fnstcw WORD PTR [rbx+rbx*4+0x2]
   140015829:	(bad)  
   14001582a:	sbb    ah,cl
   14001582c:	sub    DWORD PTR gs:[rax+0x955a648],edx
   140015833:	xchg   edx,eax
   140015834:	rex.B cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015836:	adc    ebp,DWORD PTR [rax-0x37092cfc]
   14001583c:	(bad)  [rax-0x466125ea]
   140015842:	cmp    BYTE PTR [rdi],al
   140015844:	mov    dl,0xa2
   140015846:	xor    BYTE PTR [rbx-0x1f],cl
   140015849:	xor    eax,0x17f7e6df
   14001584e:	jae    0x140015811
   140015850:	mov    es,WORD PTR [rbp-0x3c]
   140015853:	lods   eax,DWORD PTR ds:[rsi]
   140015854:	cld    
   140015855:	jg     0x14001589d
   140015857:	push   rsi
   140015858:	sbb    al,0x66
   14001585a:	stc    
   14001585b:	ins    DWORD PTR es:[rdi],dx
   14001585c:	loop   0x1400157f9
   14001585e:	rex.WRXB jbe 0x140015847
   140015861:	stos   DWORD PTR es:[rdi],eax
   140015862:	or     esi,DWORD PTR [rax-0x68f144e8]
   140015868:	pop    rbx
   140015869:	rex.WRX
   14001586a:	rex.RXB (bad) 
   14001586c:	fdiv   QWORD PTR [rdx+0x76a4f975]
   140015872:	xor    al,0xf
   140015874:	rex.RXB xchg r8d,eax
   140015876:	(bad)  
   140015877:	push   rbx
   140015878:	call   rsi
   14001587a:	mov    edx,0x585c949
   14001587f:	add    al,0x6e
   140015881:	xor    BYTE PTR [rbp-0x1e],dh
   140015884:	or     dh,al
   140015886:	neg    bh
   140015888:	or     dl,ch
   14001588a:	fld    DWORD PTR [rcx-0x2271c0cc]
   140015890:	xor    esp,DWORD PTR [rbx+0x18]
   140015893:	cwde   
   140015894:	cmp    cl,BYTE PTR [rsi-0x4f78c750]
   14001589a:	mov    esi,0x3f03d7ac
   14001589f:	(bad)  
   1400158a0:	rex.B loop 0x14001589e
   1400158a3:	adc    eax,0xf1856a11
   1400158a8:	add    bh,ch
   1400158aa:	loope  0x1400158e5
   1400158ac:	call   QWORD PTR [rip+0xffffffffd5aa7274]        # 0x115abcb26
   1400158b2:	ss stos DWORD PTR es:[rdi],eax
   1400158b4:	cdq    
   1400158b5:	test   ebx,edx
   1400158b7:	add    al,0xbe
   1400158b9:	mov    BYTE PTR [rsi],cl
   1400158bb:	and    BYTE PTR [rbx],ch
   1400158bd:	push   0xffffffffffffffcb
   1400158bf:	adc    ch,BYTE PTR [rdi+rbp*8]
   1400158c2:	stos   DWORD PTR es:[rdi],eax
   1400158c3:	push   rbp
   1400158c4:	(bad)  
   1400158c5:	stos   DWORD PTR es:[rdi],eax
   1400158c6:	out    dx,eax
   1400158c7:	and    eax,0x1e0e5093
   1400158cc:	rex.WRB cdqe 
   1400158ce:	push   rbp
   1400158cf:	rex.W (bad) 
   1400158d1:	test   al,0x30
   1400158d3:	int    0xd5
   1400158d5:	shl    bl,1
   1400158d7:	mov    bh,0xc1
   1400158d9:	fwait
   1400158da:	pop    rbp
   1400158db:	and    al,0x5a
   1400158dd:	outs   dx,BYTE PTR ds:[rsi]
   1400158de:	cmp    DWORD PTR [rbx],0x77962cff
   1400158e4:	imul   ebx,DWORD PTR [rsi+0x33792986],0xe
   1400158eb:	rex.WRX movabs rax,0x1914f943a3c8f589
   1400158f5:	call   0x10288b0aa
   1400158fa:	(bad)  
   1400158fb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400158fc:	xlat   BYTE PTR ds:[rbx]
   1400158fd:	outs   dx,DWORD PTR ds:[rsi]
   1400158fe:	xlat   BYTE PTR ds:[rbx]
   1400158ff:	out    0xde,al
   140015901:	cmp    DWORD PTR [rdi-0x7f99e899],0xa0e5e57c
   14001590b:	cmp    al,0x1
   14001590d:	mov    eax,0x3725e730
   140015912:	mov    ch,0x65
   140015914:	sahf   
   140015915:	adc    BYTE PTR [rcx],al
   140015917:	xchg   edi,eax
   140015918:	repnz retf 0x4107
   14001591c:	clc    
   14001591d:	cmp    al,0x5e
   14001591f:	xchg   ch,al
   140015921:	rex.XB mov WORD PTR [r15],fs
   140015924:	and    dl,BYTE PTR [rax*4-0x14228c8]
   14001592b:	or     eax,0xcd7caf3b
   140015930:	or     eax,0x1c1fe96f
   140015935:	cli    
   140015936:	mov    cl,0xaa
   140015938:	stos   BYTE PTR es:[rdi],al
   140015939:	out    dx,al
   14001593a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001593b:	rol    BYTE PTR [rbx+rdx*8+0x2f],cl
   140015940:	xor    ebx,edi
   140015942:	test   al,0x11
   140015944:	sub    eax,DWORD PTR [rdx]
   140015946:	cmc    
   140015947:	jae    0x1400158d8
   140015949:	hlt    
   14001594a:	pushf  
   14001594b:	jg     0x14001599a
   14001594d:	movabs al,ds:0x260c473bfac7c2a8
   140015956:	cmp    al,0xec
   140015958:	mov    al,0x49
   14001595a:	(bad)  
   14001595b:	mov    DWORD PTR [rip+0x4211e8fc],edx        # 0x18213425d
   140015961:	enter  0x4984,0x31
   140015965:	pop    rax
   140015966:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015967:	cmp    BYTE PTR [rsp+rdx*1],0xa8
   14001596b:	sbb    DWORD PTR [rbx+0x4ec0b0a],0x5d
   140015972:	add    DWORD PTR [rax],ebx
   140015974:	add    cl,dl
   140015976:	and    edi,DWORD PTR fs:[rcx]
   140015979:	scas   eax,DWORD PTR es:[rdi]
   14001597a:	rex
   14001597b:	fs (bad) 
   14001597e:	adc    al,BYTE PTR [rdx+rsi*8+0x248514f0]
   140015985:	cmp    dl,BYTE PTR [rsi]
   140015987:	out    0x6f,al
   140015989:	mov    edx,0xac52688f
   14001598e:	popf   
   14001598f:	(bad)  
   140015991:	sbb    DWORD PTR [rsi],ebp
   140015993:	mov    ecx,0xd35097f0
   140015998:	add    eax,0xde919edf
   14001599d:	pop    rbx
   14001599e:	mov    WORD PTR [rcx],ss
   1400159a0:	retf   
   1400159a1:	movsxd eax,DWORD PTR [rdi-0xf]
   1400159a4:	fs out dx,eax
   1400159a6:	jle    0x14001594c
   1400159a8:	mov    ebp,0xceac2057
   1400159ad:	movabs ds:0x5bf894a68638e67f,eax
   1400159b6:	pop    rbp
   1400159b7:	add    al,0x37
   1400159b9:	imul   ecx,DWORD PTR [rax],0x56
   1400159bc:	leave  
   1400159bd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400159be:	ret    
   1400159bf:	(bad)  
   1400159c0:	shr    DWORD PTR [rax-0x75064b7e],0x44
   1400159c7:	or     dl,bl
   1400159c9:	out    0xcf,eax
   1400159cb:	cdq    
   1400159cc:	jg     0x140015982
   1400159ce:	or     al,0x1f
   1400159d0:	add    ch,dh
   1400159d2:	push   rdi
   1400159d3:	(bad)  
   1400159d4:	ja     0x14001598d
   1400159d6:	xor    DWORD PTR [rbx],ebp
   1400159d8:	(bad)  
   1400159d9:	jbe    0x1400159e3
   1400159db:	push   0x21
   1400159dd:	fisttp QWORD PTR [rdx+0x1b]
   1400159e0:	cld    
   1400159e1:	xor    eax,0x7257cb
   1400159e6:	xchg   BYTE PTR [rax],bh
   1400159e8:	xor    ah,BYTE PTR [rcx]
   1400159ea:	push   0xc1389cb
   1400159ef:	adc    eax,0x760770b0
   1400159f4:	(bad)  
   1400159f5:	xchg   esp,eax
   1400159f6:	mov    edi,0xcd00ab2f
   1400159fb:	add    BYTE PTR [rax-0x3048cdae],bl
   140015a01:	fimul  DWORD PTR [rdi+riz*2-0xd26be95]
   140015a08:	cli    
   140015a09:	data16 loope 0x140015a4c
   140015a0c:	sbb    ebx,DWORD PTR [rbx-0x553f7cca]
   140015a12:	adc    al,0xc
   140015a14:	and    eax,0x439273e6
   140015a19:	jl     0x140015a6e
   140015a1b:	movs   BYTE PTR es:[rdi],BYTE PTR cs:[rsi]
   140015a1d:	sub    eax,eax
   140015a1f:	rex.RX or DWORD PTR [rcx+0x1a122108],r8d
   140015a26:	or     eax,0x8068e5f9
   140015a2b:	and    bl,BYTE PTR [rax+rax*1+0x40686370]
   140015a32:	(bad)  
   140015a33:	jp     0x140015a08
   140015a35:	adc    BYTE PTR [rdx-0x4d],cl
   140015a38:	addr32 mov ds:0x2725d32f,eax
   140015a3e:	rex.RX xchg ebp,eax
   140015a40:	push   rax
   140015a41:	mov    bh,0x17
   140015a43:	int    0xdf
   140015a45:	jmp    FWORD PTR [rcx]
   140015a47:	mov    WORD PTR [rsi],ds
   140015a49:	clc    
   140015a4a:	jge    0x140015aa8
   140015a4c:	mov    dl,BYTE PTR ss:[rdi+0xa90f178]
   140015a53:	enter  0xe246,0x4d
   140015a57:	out    dx,eax
   140015a58:	sti    
   140015a59:	movabs eax,ds:0xa7bac1fc3c1cf62b
   140015a62:	out    0x83,eax
   140015a64:	and    esi,eax
   140015a66:	xlat   BYTE PTR ds:[rbx]
   140015a67:	sti    
   140015a68:	fs push rcx
   140015a6a:	stc    
   140015a6b:	icebp  
   140015a6c:	push   rdx
   140015a6d:	(bad)  
   140015a6e:	add    dh,dh
   140015a70:	(bad)  
   140015a71:	mov    al,0x5f
   140015a73:	jnp    0x140015a4e
   140015a75:	mov    BYTE PTR [rbx+0xa5f098b],al
   140015a7b:	mov    bl,0xdd
   140015a7d:	sub    al,0x97
   140015a7f:	scas   eax,DWORD PTR es:[rdi]
   140015a80:	rex.WRB shl QWORD PTR [r10],1
   140015a83:	xchg   eax,ebp
   140015a85:	jl     0x140015af7
   140015a87:	add    ch,BYTE PTR [rcx-0xb]
   140015a8a:	sbb    al,0x9c
   140015a8c:	clc    
   140015a8d:	movabs ds:0xa42f1f985dbb9ee0,eax
   140015a96:	in     al,0x7
   140015a98:	xor    ebp,DWORD PTR [rax]
   140015a9a:	(bad)  
   140015a9b:	pop    rdx
   140015a9c:	test   BYTE PTR [rax+0x5e4202da],al
   140015aa2:	(bad)  
   140015aa3:	sbb    eax,0x93e6552d
   140015aa8:	fucom  st(0)
   140015aaa:	data16 mov cl,0x93
   140015aad:	adc    esi,DWORD PTR [rsi]
   140015aaf:	and    eax,0xc0b3712e
   140015ab4:	rex.RB
   140015ab5:	data16 sbb cl,cl
   140015ab8:	and    al,0x66
   140015aba:	mov    dh,0x23
   140015abc:	xchg   ebx,eax
   140015abd:	rex.RX not BYTE PTR [rbx-0x5cbeb16d]
   140015ac4:	movabs eax,ds:0x6e7742b14194a7d2
   140015acd:	add    cl,bh
   140015acf:	sub    eax,0xfafe626f
   140015ad4:	xlat   BYTE PTR ds:[rbx]
   140015ad5:	and    DWORD PTR [rsi+rax*1-0x138e0663],esp
   140015adc:	sahf   
   140015add:	cmp    al,0x86
   140015adf:	dec    cl
   140015ae1:	xchg   ebx,eax
   140015ae2:	mov    BYTE PTR [rbx],ch
   140015ae4:	or     esi,DWORD PTR [rdx-0x26c8e04a]
   140015aea:	fist   WORD PTR [rcx+rsi*8]
   140015aed:	(bad)  
   140015aee:	rex.WX (bad) 
   140015af0:	push   rsi
   140015af1:	sub    ebx,DWORD PTR [rdi+0x26c8fe33]
   140015af7:	stos   BYTE PTR es:[rdi],al
   140015af8:	pop    rsi
   140015af9:	(bad)  
   140015afa:	stos   DWORD PTR es:[rdi],eax
   140015afb:	fldenv [rdi]
   140015afd:	xchg   r8d,eax
   140015aff:	adc    al,0x23
   140015b01:	push   rdi
   140015b02:	mov    ch,0x6d
   140015b04:	adc    DWORD PTR [rax],ebx
   140015b06:	jae    0x140015b1f
   140015b08:	cld    
   140015b09:	adc    DWORD PTR [rax-0x30cdcca2],edi
   140015b0f:	jle    0x140015b38
   140015b11:	(bad)
   140015b15:	jb     0x140015b21
   140015b17:	jno    0x140015b0f
   140015b19:	stc    
   140015b1a:	mov    bl,0x12
   140015b1c:	(bad)  
   140015b1d:	mov    al,BYTE PTR [rbx-0x15ce13]
   140015b23:	(bad)  
   140015b24:	mov    edi,0xcfb1bf5b
   140015b29:	ins    DWORD PTR es:[rdi],dx
   140015b2a:	enter  0x7af5,0x51
   140015b2e:	(bad)  
   140015b2f:	cmp    eax,DWORD PTR [rcx-0x5ed14189]
   140015b35:	outs   dx,DWORD PTR ds:[rsi]
   140015b36:	xor    ah,BYTE PTR [rcx+0x7c]
   140015b39:	test   BYTE PTR [rcx],cl
   140015b3b:	enter  0x9fa4,0x22
   140015b3f:	adc    eax,DWORD PTR [rsi-0x39490fe9]
   140015b45:	sbb    bh,BYTE PTR [rsi-0x73]
   140015b48:	ss test al,0x68
   140015b4b:	mov    ch,0x33
   140015b4d:	xor    eax,DWORD PTR [rbx]
   140015b4f:	fs stos BYTE PTR es:[rdi],al
   140015b51:	retf   0x86d2
   140015b54:	cdq    
   140015b55:	push   rax
   140015b56:	(bad)  
   140015b57:	movsxd ecx,ecx
   140015b59:	jne    0x140015ba2
   140015b5b:	shr    BYTE PTR [rdx],cl
   140015b5d:	push   rbx
   140015b5e:	fidiv  WORD PTR [rsi]
   140015b60:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015b61:	pop    rdx
   140015b62:	fs mov dh,0x34
   140015b65:	ins    BYTE PTR es:[rdi],dx
   140015b66:	loope  0x140015b2b
   140015b68:	ja     0x140015bca
   140015b6a:	out    0x2d,al
   140015b6c:	mov    edi,0x3ffecb8f
   140015b71:	mov    ah,0xd7
   140015b73:	(bad)  
   140015b74:	mov    eax,0xc7755be0
   140015b79:	jnp    0x140015bfa
   140015b7b:	push   0x7d9ed0f7
   140015b80:	(bad)  
   140015b81:	div    dh
   140015b83:	idiv   edi
   140015b85:	xchg   ebx,eax
   140015b86:	mov    edx,0x844ddfae
   140015b8b:	std    
   140015b8c:	jo     0x140015bdb
   140015b8e:	imul   esi,DWORD PTR [rdi],0x4f
   140015b91:	cli    
   140015b92:	rex.WX and QWORD PTR [rsi+0x6c405e61],rdi
   140015b99:	(bad)  
   140015b9a:	in     eax,0x7
   140015b9c:	add    eax,eax
   140015b9e:	loope  0x140015b33
   140015ba0:	rex.WR outs dx,BYTE PTR ds:[rsi]
   140015ba2:	cs (bad) 
   140015ba4:	xlat   BYTE PTR ds:[rbx]
   140015ba5:	out    dx,eax
   140015ba6:	ret    0x3f2c
   140015ba9:	sbb    ebp,DWORD PTR [rdx]
   140015bab:	sub    cl,0xfe
   140015bae:	jb     0x140015b51
   140015bb0:	add    eax,0x7c3a3a7b
   140015bb5:	or     al,0x58
   140015bb7:	mov    edx,0xd9c57cb0
   140015bbc:	ins    DWORD PTR es:[rdi],dx
   140015bbd:	push   rax
   140015bbe:	(bad)  
   140015bbf:	fisub  DWORD PTR [rax]
   140015bc1:	movabs ds:0xed71a2666013eb6d,eax
   140015bca:	(bad)  
   140015bcb:	(bad)  
   140015bcc:	jrcxz  0x140015be2
   140015bce:	xchg   esi,eax
   140015bcf:	pop    rdx
   140015bd0:	(bad)
   140015bd4:	(bad)  
   140015bd5:	xchg   ebx,eax
   140015bd6:	retf   
   140015bd7:	(bad)  
   140015bd8:	sub    eax,0x5abf03cf
   140015bdd:	mov    bh,0x36
   140015bdf:	vhaddpd xmm8,xmm0,XMMWORD PTR [rdx+0x45b0309a]
   140015be7:	xor    dh,BYTE PTR [rsi-0x14fb9f6e]
   140015bed:	add    DWORD PTR [rax+0x21],eax
   140015bf0:	and    ch,BYTE PTR [rsi+rbp*4-0x1f]
   140015bf4:	(bad)  
   140015bf5:	leave  
   140015bf6:	jrcxz  0x140015c10
   140015bf8:	mov    ebp,0xdec436ec
   140015bfd:	add    eax,edx
   140015bff:	in     al,dx
   140015c00:	rex.WB in al,dx
   140015c02:	pushf  
   140015c03:	cmp    DWORD PTR [rsi+0x58067fd0],ebp
   140015c09:	pop    rbx
   140015c0a:	xchg   edx,eax
   140015c0b:	mov    ch,0xff
   140015c0d:	(bad)  
   140015c0e:	xor    DWORD PTR [rsi+0x19],ebp
   140015c11:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015c12:	sbb    dl,dl
   140015c14:	(bad)  
   140015c15:	mov    ebx,0x23c3f166
   140015c1a:	sbb    dl,BYTE PTR [rsp+rdx*4-0x6d]
   140015c1e:	jle    0x140015c8c
   140015c20:	test   eax,0xe6e8536f
   140015c25:	repnz mov BYTE PTR [rcx+0x24eb162a],dl
   140015c2c:	push   0x2b
   140015c2e:	or     bl,ch
   140015c30:	pop    rdi
   140015c31:	xchg   esi,eax
   140015c32:	(bad)  
   140015c33:	shl    BYTE PTR [rdi+0x6c],cl
   140015c36:	in     al,dx
   140015c37:	jg     0x140015bf7
   140015c39:	cmp    eax,0xd87188b4
   140015c3e:	pop    rsp
   140015c3f:	scas   ax,WORD PTR es:[rdi]
   140015c41:	(bad)  
   140015c42:	and    esi,DWORD PTR [rbp+0x9]
   140015c45:	jb     0x140015c1b
   140015c47:	rex xchg ebx,eax
   140015c49:	mov    ?,WORD PTR [rdi+rdi*8+0x4c]
   140015c4d:	and    dh,BYTE PTR [rdx]
   140015c4f:	loopne 0x140015c20
   140015c51:	faddp  st(5),st
   140015c53:	ror    DWORD PTR [rsi-0x628c0d79],1
   140015c59:	movsxd esp,DWORD PTR [rax-0x4b261cd4]
   140015c5f:	retf   0x1908
   140015c62:	imul   esi,DWORD PTR [r11],0xffffffae
   140015c66:	and    eax,0xc51b367c
   140015c6b:	repnz (bad) 
   140015c6d:	call   0x1a3fafd34
   140015c72:	cmp    BYTE PTR [rcx+0x64],dl
   140015c75:	rex.WRX movabs rbp,0x8ac8ca224204371e
   140015c7f:	sbb    BYTE PTR [rcx],ah
   140015c81:	xor    BYTE PTR [rdx-0x2318fa5a],dl
   140015c87:	adc    bl,cl
   140015c89:	adc    esp,DWORD PTR [rax]
   140015c8b:	(bad)  
   140015c8c:	(bad)  
   140015c8d:	mov    bl,0xe7
   140015c8f:	out    dx,al
   140015c90:	fist   DWORD PTR [rsi]
   140015c92:	mov    ebp,0xd8c1d723
   140015c97:	ret    
   140015c98:	jmp    0x140015c89
   140015c9a:	add    esp,ecx
   140015c9c:	movabs ds:0xb641747356f92ec8,eax
   140015ca5:	mov    al,0xef
   140015ca7:	mov    dl,0x2b
   140015ca9:	jle    0x140015d21
   140015cab:	(bad)  
   140015cac:	js     0x140015ca6
   140015cae:	xchg   ebx,eax
   140015caf:	mov    cl,0xee
   140015cb1:	cld    
   140015cb2:	add    al,0x13
   140015cb4:	in     eax,dx
   140015cb5:	outs   dx,DWORD PTR ds:[rsi]
   140015cb6:	pop    rax
   140015cb7:	xchg   edx,eax
   140015cb8:	sub    ebx,DWORD PTR [rdx]
   140015cba:	mov    dh,0x3f
   140015cbc:	movabs al,ds:0x6442a4dd01268ccb
   140015cc5:	movabs ds:0xadfcb663d4d2cfec,eax
   140015cce:	out    dx,al
   140015ccf:	(bad)  [rsi-0x51]
   140015cd2:	fs scas al,BYTE PTR es:[rdi]
   140015cd4:	sub    BYTE PTR [rbx+0x11],0xbf
   140015cd8:	mul    DWORD PTR [rdx+rax*2-0xbdcdb2e]
   140015cdf:	add    al,0x88
   140015ce1:	or     edx,ecx
   140015ce3:	(bad)
   140015ce8:	call   0x1373310b0
   140015ced:	add    eax,0xffffff95
   140015cf0:	scas   al,BYTE PTR es:[rdi]
   140015cf1:	sahf   
   140015cf2:	(bad)  
   140015cf3:	xchg   esp,eax
   140015cf4:	adc    esi,DWORD PTR [rdx+0x16]
   140015cf7:	push   rdi
   140015cf8:	or     DWORD PTR [rdx+rbx*2+0x64],0x629943a4
   140015d00:	push   rsp
   140015d01:	or     ah,BYTE PTR [rcx+0x150dd6a7]
   140015d07:	jns    0x140015cee
   140015d09:	jbe    0x140015cea
   140015d0b:	jo     0x140015d6a
   140015d0d:	call   0xe8302a3c
   140015d12:	xchg   ebp,eax
   140015d13:	in     eax,dx
   140015d14:	pop    rax
   140015d15:	adc    BYTE PTR [rdi],0xfb
   140015d18:	(bad)  
   140015d19:	push   rax
   140015d1a:	(bad)
   140015d1e:	js     0x140015d8e
   140015d20:	clc    
   140015d21:	jb     0x140015cf3
   140015d23:	out    dx,al
   140015d24:	rex.WXB
   140015d25:	sub    esi,r11d
   140015d28:	fdiv   DWORD PTR [rcx]
   140015d2a:	ja     0x140015d88
   140015d2c:	(bad)  
   140015d2d:	(bad)  
   140015d2e:	jae    0x140015cc3
   140015d30:	or     BYTE PTR [rbx+0xeb3404b],ch
   140015d36:	imul   ebx,DWORD PTR [rcx+rbp*1+0x7],0xffffffb3
   140015d3b:	adc    eax,0x47ea057d
   140015d40:	xchg   BYTE PTR [rsi-0x7],dh
   140015d43:	loope  0x140015d91
   140015d45:	cld    
   140015d46:	movabs eax,ds:0xb8dbaadd9017e78c
   140015d4f:	mov    ah,0x60
   140015d51:	pop    rcx
   140015d52:	test   al,0x49
   140015d54:	adc    eax,0x7f5ba
   140015d59:	push   rax
   140015d5a:	sub    al,0xff
   140015d5c:	rex.RB scas al,BYTE PTR es:[rdi]
   140015d5e:	enter  0xc3ac,0x52
   140015d62:	(bad)  
   140015d63:	add    dh,BYTE PTR [rsi+rcx*1]
   140015d66:	rol    esi,0x8b
   140015d69:	xchg   ecx,eax
   140015d6a:	jnp    0x140015d6c
   140015d6c:	data16 mov bh,0xc1
   140015d6f:	(bad)  
   140015d70:	fimul  WORD PTR [rdi-0x15eff0f7]
   140015d76:	leave  
   140015d77:	fadd   DWORD PTR [rbx+0x71]
   140015d7a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015d7b:	rex.WR mov dil,0x96
   140015d7e:	jo     0x140015d1f
   140015d80:	jmp    0x1011b4cb8
   140015d85:	test   ah,0xb
   140015d88:	repz ret 
   140015d8a:	pop    rcx
   140015d8b:	cmp    DWORD PTR [rbp+0x64f90155],esi
   140015d91:	jne    0x140015da2
   140015d93:	movabs al,ds:0x4e0de441d5662e40
   140015d9c:	fucomp st(0)
   140015d9e:	xchg   ebp,eax
   140015d9f:	mul    DWORD PTR [rsi-0x31]
   140015da2:	(bad)  
   140015da3:	loopne 0x140015de3
   140015da5:	ds stc 
   140015da7:	add    esp,esi
   140015da9:	not    DWORD PTR [rax+0x45]
   140015dac:	push   ax
   140015dae:	mov    cl,0x78
   140015db0:	out    0xa6,al
   140015db2:	popf   
   140015db3:	or     DWORD PTR [rsi+rbx*2+0x5faef74],eax
   140015dba:	jp     0x140015daa
   140015dbc:	jb     0x140015e22
   140015dbe:	xlat   BYTE PTR ds:[rbx]
   140015dbf:	pushf  
   140015dc0:	or     ah,BYTE PTR [rdx-0x1e927d02]
   140015dc6:	fsub   st,st(3)
   140015dc8:	(bad)  
   140015dc9:	(bad)  
   140015dca:	inc    dh
   140015dcc:	(bad)  
   140015dce:	outs   dx,DWORD PTR ds:[rsi]
   140015dcf:	xor    DWORD PTR [rax-0x2ecdded4],0x4aa88a84
   140015dd9:	(bad)  
   140015dda:	es (bad) 
   140015ddd:	add    DWORD PTR fs:[rbx+rbx*1+0x0],esp
   140015de2:	mov    ebp,0x74e70673
   140015de7:	pop    rbp
   140015de8:	jg     0x140015da2
   140015dea:	pop    rcx
   140015deb:	jne    0x140015d86
   140015ded:	jmp    rbp
   140015def:	(bad)  
   140015df0:	retf   
   140015df1:	(bad)
   140015df5:	mov    ecx,DWORD PTR [rcx-0x56]
   140015df8:	mov    esi,0xcd1585bb
   140015dfd:	(bad)  
   140015dfe:	xchg   esp,eax
   140015dff:	lock iret 
   140015e01:	and    BYTE PTR [rsi],dl
   140015e03:	rex.B jle 0x140015da2
   140015e06:	or     al,BYTE PTR [rcx]
   140015e08:	mov    ch,0x56
   140015e0a:	fdiv   QWORD PTR [rsi+0x79]
   140015e0d:	out    0x52,al
   140015e0f:	add    al,0x3f
   140015e11:	mov    bh,0x41
   140015e13:	jge    0x140015dcd
   140015e15:	cmc    
   140015e16:	ja     0x140015e34
   140015e18:	(bad)  
   140015e1a:	xchg   edx,eax
   140015e1b:	mov    ch,0x48
   140015e1d:	jno    0x140015e6e
   140015e1f:	(bad)
   140015e22:	jne    0x140015dc4
   140015e24:	std    
   140015e25:	push   rbx
   140015e26:	rex.WR outs dx,BYTE PTR ds:[rsi]
   140015e28:	lock (bad) 
   140015e2a:	test   DWORD PTR [rdi+0x1ad9f7f3],0x63554211
   140015e34:	jae    0x140015e9c
   140015e36:	sbb    al,0xcf
   140015e38:	ss sbb eax,0xd7e1f2c
   140015e3e:	(bad)  
   140015e3f:	ja     0x140015e5e
   140015e41:	cmp    eax,0x32312773
   140015e46:	xor    eax,0x71e9de86
   140015e4b:	test   ch,ah
   140015e4d:	jns    0x140015e1f
   140015e4f:	out    0xa,al
   140015e51:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015e52:	mov    ecx,0x15606ba8
   140015e57:	outs   dx,BYTE PTR ds:[rsi]
   140015e58:	not    BYTE PTR [rsi]
   140015e5a:	fist   WORD PTR [rsp]
   140015e5d:	in     eax,0x57
   140015e5f:	sub    al,BYTE PTR [rax]
   140015e61:	movabs eax,ds:0x73dbfa02bebb7cf1
   140015e6a:	jrcxz  0x140015ee8
   140015e6c:	leave  
   140015e6d:	in     ax,0x3
   140015e70:	(bad)  
   140015e71:	add    ch,BYTE PTR [rdx-0x42]
   140015e74:	lods   eax,DWORD PTR ds:[rsi]
   140015e75:	retf   
   140015e76:	push   rcx
   140015e77:	add    edi,esp
   140015e79:	(bad)  
   140015e7a:	mov    ecx,0x5de56602
   140015e7f:	xchg   edx,eax
   140015e80:	rep outs dx,DWORD PTR ds:[rsi]
   140015e82:	in     eax,dx
   140015e83:	ja     0x140015e7f
   140015e85:	cdq    
   140015e86:	out    0x5d,eax
   140015e88:	sbb    BYTE PTR [rdx+0x32860f28],bl
   140015e8e:	fdivr  QWORD PTR [rbx+0x75db6ac5]
   140015e94:	sbb    ecx,edx
   140015e96:	mov    dl,0x11
   140015e98:	jno    0x140015e43
   140015e9a:	(bad)  
   140015e9b:	xchg   esp,eax
   140015e9c:	outs   dx,BYTE PTR ds:[rsi]
   140015e9d:	gs jle 0x140015e6c
   140015ea0:	(bad)
   140015ea3:	xchg   ecx,eax
   140015ea4:	test   al,0xbf
   140015ea6:	movabs al,ds:0x554e2a0d257007f2
   140015eaf:	nop
   140015eb0:	(bad)  
   140015eb1:	in     eax,0xfd
   140015eb3:	mov    eax,0x43fad4bb
   140015eb8:	movabs al,ds:0x5b3f3efec25321cd
   140015ec2:	jae    0x140015efe
   140015ec4:	fcmovnb st,st(4)
   140015ec6:	(bad)  
   140015ec7:	frndint 
   140015ec9:	(bad)  [rcx+0x1b]
   140015ecc:	iret   
   140015ecd:	mov    ebp,0x7802a51f
   140015ed2:	or     DWORD PTR [rsi+0x577d7a78],esi
   140015ed8:	jp     0x140015ec4
   140015eda:	fcmovnu st,st(7)
   140015edc:	cli    
   140015edd:	(bad)  
   140015ede:	sahf   
   140015edf:	ret    
   140015ee0:	xchg   DWORD PTR [rdi-0xfcfcc2d],edi
   140015ee6:	(bad)  
   140015ee7:	adc    bl,ah
   140015ee9:	jle    0x140015ea8
   140015eeb:	rex.X xlat BYTE PTR ds:[rbx]
   140015eed:	movabs al,ds:0xf9159b069b45b4c
   140015ef6:	fs jrcxz 0x140015f4c
   140015ef9:	ds fcmovnbe st,st(2)
   140015efc:	push   rdx
   140015efd:	xchg   edi,eax
   140015efe:	adc    BYTE PTR [rsi+rdi*2-0x36],cl
   140015f02:	rex.WRX xor BYTE PTR [rcx-0x30],r15b
   140015f06:	int    0x14
   140015f08:	mov    DWORD PTR [rcx+0x65e1303e],edx
   140015f0e:	and    eax,0x45619102
   140015f13:	and    dl,BYTE PTR [r10-0xf]
   140015f17:	fimul  WORD PTR [rdi+0x7]
   140015f1a:	jb     0x140015f21
   140015f1c:	(bad)  
   140015f1d:	sub    eax,0x484041c1
   140015f22:	(bad)  
   140015f23:	(bad)  
   140015f24:	sti    
   140015f25:	rex.RB push 0xffffffffffffff87
   140015f28:	pop    rsp
   140015f29:	mov    edi,0xe5ab24cc
   140015f2e:	mov    al,0xc5
   140015f30:	mov    BYTE PTR [rbx-0x13ca74a1],dl
   140015f36:	xor    ecx,DWORD PTR [rbx+0x76ff8505]
   140015f3c:	jle    0x140015f77
   140015f3e:	xchg   edi,eax
   140015f3f:	xor    al,0xf8
   140015f41:	int3   
   140015f42:	rex.WX and al,0x65
   140015f45:	rex.RX popf 
   140015f47:	int3   
   140015f48:	jo     0x140015f2e
   140015f4a:	(bad)  
   140015f4b:	(bad)  
   140015f4c:	mov    BYTE PTR [rax],dl
   140015f4e:	xlat   BYTE PTR ds:[rbx]
   140015f4f:	push   rdi
   140015f50:	xor    BYTE PTR [rdx-0x1e],bh
   140015f53:	cmp    BYTE PTR [rsi+0x2f],al
   140015f56:	mov    ebx,0x4eff5505
   140015f5b:	rcr    ah,1
   140015f5d:	cmp    BYTE PTR [rsi-0x63],dh
   140015f60:	jle    0x140015f78
   140015f62:	ret    
   140015f63:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015f64:	mov    fs,WORD PTR [rax-0x4f7ac662]
   140015f6a:	mov    dl,0x0
   140015f6c:	rex.WRX imul r14,QWORD PTR [rax],0xffffffffffffffe5
   140015f70:	fs add al,0x59
   140015f73:	rex.WRB loop 0x140015f71
   140015f76:	ja     0x140015f10
   140015f78:	xchg   ebp,eax
   140015f79:	add    ecx,DWORD PTR [rax+0xe]
   140015f7c:	std    
   140015f7d:	sub    ecx,ebp
   140015f7f:	(bad)  
   140015f81:	(bad)  
   140015f82:	jg     0x140015f39
   140015f84:	pop    rsi
   140015f85:	add    eax,edx
   140015f87:	nop
   140015f88:	xchg   esi,eax
   140015f89:	out    0xe4,al
   140015f8b:	and    esp,DWORD PTR [rdi-0x1b]
   140015f8e:	rex.RB mov r13b,0xf8
   140015f91:	xchg   edx,eax
   140015f92:	out    dx,eax
   140015f93:	outs   dx,DWORD PTR ds:[rsi]
   140015f94:	ret    0x6e4f
   140015f97:	icebp  
   140015f98:	lods   eax,DWORD PTR ds:[rsi]
   140015f99:	ret    0x862f
   140015f9c:	sub    BYTE PTR [rax+0x11d6c1ca],0x8c
   140015fa3:	xchg   ecx,eax
   140015fa4:	adc    BYTE PTR [rdx+0x40],ah
   140015fa7:	mov    BYTE PTR [rdx+rbp*1-0x571b3f8],al
   140015fae:	fwait
   140015faf:	adc    BYTE PTR [rcx-0x7b2c4098],al
   140015fb5:	(bad)  
   140015fb6:	sub    al,BYTE PTR [rsp+rax*4]
   140015fb9:	or     BYTE PTR [rax+rbp*1-0x6573a53c],al
   140015fc0:	(bad)  
   140015fc1:	or     eax,DWORD PTR [rdx]
   140015fc3:	je     0x140015f4e
   140015fc5:	cs adc ah,dl
   140015fc8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015fc9:	rex.RXB mov cs,WORD PTR [rip+0xffffffffdd16e712]        # 0x11d1846e2
   140015fd0:	pop    rcx
   140015fd1:	fwait
   140015fd2:	mov    ch,0xe6
   140015fd4:	(bad)  
   140015fd5:	lock rol DWORD PTR [rbp-0x4fa39081],0xa1
   140015fdd:	sub    BYTE PTR [rcx+rdx*4-0x58],0xd
   140015fe2:	retf   
   140015fe3:	ins    BYTE PTR es:[rdi],dx
   140015fe4:	ins    DWORD PTR es:[rdi],dx
   140015fe5:	rex.B lahf 
   140015fe7:	sar    DWORD PTR [eip+0xffffffff9ef96670],0x13        # 0xdefac65f
   140015fef:	sti    
   140015ff0:	imul   eax,DWORD PTR [rax+0x7b],0xffffffbe
   140015ff4:	(bad)  
   140015ff5:	rex.RX lods eax,DWORD PTR ds:[rsi]
   140015ff7:	and    eax,0x74ef8214
   140015ffc:	out    dx,al
   140015ffd:	out    0x2f,eax
   140015fff:	repz rex.WR retf 0x9893
   140016004:	or     BYTE PTR [rbp+0x3715004c],al
   14001600a:	jge    0x14001601b
   14001600c:	shr    BYTE PTR [rsi+0x63a0cd8f],1
   140016012:	test   eax,0x7f18cc1
   140016017:	retf   
   140016018:	xor    edi,DWORD PTR [rax+rbp*8+0x689a234d]
   14001601f:	mov    esi,0xfe7bb1f2
   140016024:	cli    
   140016025:	ror    edi,0x7e
   140016028:	cli    
   140016029:	(bad)  
   14001602a:	xlat   BYTE PTR ds:[rbx]
   14001602b:	push   rsi
   14001602c:	push   rsi
   14001602d:	inc    BYTE PTR [rdx+rax*2-0x2a54e1b8]
   140016034:	shl    DWORD PTR [rdi+0x42],0xfe
   140016038:	movsxd esi,esi
   14001603a:	(bad)  
   14001603b:	sahf   
   14001603c:	adc    cl,BYTE PTR [rbp+rdx*4-0x71]
   140016040:	mov    esp,0x91f37e14
   140016045:	pop    rbp
   140016046:	enter  0x7add,0xcb
   14001604a:	sub    DWORD PTR [rax-0x48],0xfffffffc
   14001604e:	pop    rbp
   14001604f:	or     ebp,ecx
   140016051:	mov    dl,0x30
   140016053:	outs   dx,DWORD PTR ds:[rsi]
   140016054:	test   DWORD PTR [rbp-0x22],ebp
   140016057:	rex.WR
   140016058:	rex.X lahf 
   14001605a:	pop    rdx
   14001605b:	cmp    esp,ebp
   14001605d:	(bad)  
   14001605e:	sbb    edx,edx
   140016060:	jmp    0x1407ece54
   140016065:	leave  
   140016066:	adc    ecx,eax
   140016068:	mov    ebx,0x90320a10
   14001606d:	jae    0x140016055
   14001606f:	sahf   
   140016070:	pop    rcx
   140016071:	and    DWORD PTR [rdx-0x40475232],0x3ba4337c
   14001607b:	cli    
   14001607c:	(bad)  [rbp+0x59]
   14001607f:	(bad)  
   140016080:	or     ch,al
   140016082:	push   rbx
   140016083:	popf   
   140016084:	repz (bad) 
   140016086:	sub    bh,ah
   140016088:	add    DWORD PTR [rip+0xffffffffc7e3b301],edx        # 0x107e5138f
   14001608e:	jno    0x1400160f4
   140016090:	iret   
   140016091:	(bad)  
   140016092:	shl    al,0x1e
   140016095:	(bad)  
   140016096:	imul   eax,DWORD PTR [rsi],0xb147a73b
   14001609c:	jae    0x140016110
   14001609e:	adc    al,0xd5
   1400160a0:	mov    WORD PTR [rsi+0x54d69bea],gs
   1400160a6:	and    DWORD PTR [rbp-0x22],esp
   1400160a9:	mov    edx,0x50115002
   1400160ae:	rex.XB movsxd edi,r14d
   1400160b1:	sub    bh,ah
   1400160b3:	in     eax,0xea
   1400160b5:	mov    esi,0xf84d548e
   1400160ba:	in     eax,dx
   1400160bb:	(bad)  
   1400160bc:	adc    QWORD PTR [r9-0x441d1ec1],rax
   1400160c3:	and    BYTE PTR [rbx+0x60],ah
   1400160c6:	cli    
   1400160c7:	fcompp 
   1400160c9:	movabs al,ds:0x2db606052b23b2d2
   1400160d2:	and    DWORD PTR [rsi+0x3e],edx
   1400160d5:	sub    DWORD PTR [rdx],ebp
   1400160d7:	xchg   esp,eax
   1400160d8:	lods   eax,DWORD PTR ds:[rsi]
   1400160d9:	popf   
   1400160da:	shr    DWORD PTR [rip+0xffffffffcc40816d],cl        # 0x10c41e24d
   1400160e0:	pop    rsp
   1400160e1:	jb     0x14001611c
   1400160e3:	cmp    DWORD PTR [rax],eax
   1400160e5:	adc    bh,ah
   1400160e7:	movsxd ebp,DWORD PTR [rbp+0x19]
   1400160ea:	loopne 0x140016159
   1400160ec:	adc    ebp,DWORD PTR [rdi+0xbf90e04]
   1400160f2:	cmp    DWORD PTR [rcx-0x4101ac73],edx
   1400160f8:	push   rax
   1400160f9:	sbb    ah,BYTE PTR [rip+0x4491436a]        # 0x18492a469
   1400160ff:	push   rsi
   140016100:	(bad)  
   140016101:	jmp    0xd7f2bcbb
   140016106:	movabs ds:0xf5858159e0646403,eax
   14001610f:	xchg   edi,eax
   140016110:	shl    DWORD PTR [rdx+0x2b],cl
   140016113:	mov    ss,WORD PTR [rdi+0x3e]
   140016116:	jns    0x1400160ab
   140016118:	mov    cl,0x32
   14001611a:	or     ah,BYTE PTR [rdx+0x4a]
   14001611d:	stos   BYTE PTR es:[rdi],al
   14001611e:	rex.RX mov edx,0xd8e9a7f1
   140016124:	rex.WRB js 0x140016130
   140016127:	fld    QWORD PTR [rax]
   140016129:	push   rbx
   14001612a:	add    BYTE PTR [rbx+0x3f8e3600],bl
   140016130:	icebp  
   140016131:	(bad)  
   140016132:	adc    esi,edi
   140016134:	std    
   140016135:	out    dx,al
   140016136:	xchg   edi,edi
   140016138:	out    0xc9,eax
   14001613a:	jrcxz  0x1400160df
   14001613c:	mov    edi,0xc776edd8
   140016141:	int    0x2f
   140016143:	mov    bh,0xb2
   140016145:	pop    rbp
   140016146:	loope  0x14001610f
   140016148:	fidiv  DWORD PTR [rcx+0x5a]
   14001614b:	sbb    eax,eax
   14001614d:	cmp    al,0x1
   14001614f:	pop    rdx
   140016150:	outs   dx,BYTE PTR ds:[rsi]
   140016151:	sub    DWORD PTR [rdx-0x3c17a323],0xffffffa2
   140016158:	cmp    eax,0x6f90cc81
   14001615d:	adc    DWORD PTR [rbx+rcx*1-0x3b],ebx
   140016161:	xchg   ebx,eax
   140016162:	ds mov eax,0x98fa7f02
   140016168:	pop    rbx
   140016169:	stos   BYTE PTR es:[rdi],al
   14001616a:	mov    cl,0xbb
   14001616c:	or     ch,BYTE PTR [rcx]
   14001616e:	movabs ds:0x6c9ba0eca3363901,eax
   140016177:	shl    BYTE PTR [rbx+0x5c3b054e],cl
   14001617d:	(bad)  
   14001617e:	ror    DWORD PTR [rbp+0x5d],0x98
   140016182:	and    DWORD PTR [rbx],0xffffffd6
   140016185:	pop    rsp
   140016186:	out    dx,al
   140016187:	test   al,0x38
   140016189:	jge    0x140016149
   14001618b:	(bad)  
   14001618c:	rex.WRB
   14001618d:	repz xor eax,0x4527d886
   140016193:	movabs eax,ds:0x4159f5d64ee7c78
   14001619c:	or     BYTE PTR [rcx],ah
   14001619e:	push   rsi
   14001619f:	pop    rax
   1400161a0:	popf   
   1400161a1:	cmp    BYTE PTR [rcx+0x6c21eaa7],cl
   1400161a7:	in     al,dx
   1400161a8:	mov    edi,0x57d7116
   1400161ad:	mov    ebp,0x3c31c733
   1400161b2:	jge    0x1400161b6
   1400161b4:	cmp    eax,0x9710a733
   1400161b9:	out    0x81,eax
   1400161bb:	int    0x15
   1400161bd:	pop    rcx
   1400161be:	pop    rbp
   1400161bf:	cwde   
   1400161c0:	sub    al,0xad
   1400161c2:	rex.WX sub al,0xb5
   1400161c5:	nop
   1400161c6:	jnp    0x1400161b4
   1400161c8:	stos   DWORD PTR es:[rdi],eax
   1400161c9:	sti    
   1400161ca:	or     BYTE PTR [rdx+0x48fffa91],cl
   1400161d0:	fsub   st,st(2)
   1400161d2:	neg    ebx
   1400161d4:	mov    ch,0xa8
   1400161d6:	add    eax,0x46781525
   1400161db:	cs in  al,dx
   1400161dd:	mov    cl,0x31
   1400161df:	fs fcmovne st,st(7)
   1400161e2:	rex.RXB (bad) 
   1400161e4:	pop    rbp
   1400161e5:	add    al,0xa
   1400161e7:	and    eax,0x64679062
   1400161ec:	loope  0x1400161ab
   1400161ee:	push   rsi
   1400161ef:	or     BYTE PTR [rcx-0x747f2c70],dl
   1400161f5:	and    al,0x99
   1400161f7:	ss jl  0x140016260
   1400161fa:	mov    cl,0xd4
   1400161fc:	es rex.R not spl
   140016200:	pop    rsp
   140016201:	stc    
   140016202:	sub    cl,BYTE PTR [rdi+0x53]
   140016205:	rex.RX movsxd r9d,DWORD PTR [rdx]
   140016208:	out    dx,al
   140016209:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001620a:	ins    DWORD PTR es:[rdi],dx
   14001620b:	outs   dx,BYTE PTR ds:[rsi]
   14001620c:	repnz fadd QWORD PTR [rax]
   14001620f:	int3   
   140016210:	sbb    dl,BYTE PTR [rdi-0xc37a2f7]
   140016216:	mov    edx,?
   140016218:	pop    rax
   140016219:	out    0xdf,eax
   14001621b:	push   0x4a
   14001621d:	mov    dh,0x9
   14001621f:	jp     0x14001620c
   140016221:	(bad)  
   140016222:	pop    rcx
   140016223:	or     eax,0x37e6b38
   140016228:	stc    
   140016229:	xor    eax,0x64885202
   14001622e:	sub    eax,0x99b945d0
   140016233:	jne    0x1400161fe
   140016235:	mul    ebp
   140016237:	and    DWORD PTR [rcx+0x1d],ecx
   14001623a:	jmp    FWORD PTR [rip+0x5db2580]        # 0x145dc87c0
   140016240:	mov    dl,0xe3
   140016242:	ret    
   140016243:	stos   BYTE PTR es:[rdi],al
   140016244:	sub    bl,bh
   140016246:	cs jrcxz 0x14001621e
   140016249:	mov    ebx,0x17752391
   14001624e:	push   rsp
   14001624f:	clc    
   140016250:	sub    DWORD PTR [rip+0x1ac0000a],0xdcafd580        # 0x15ac16264
   14001625a:	sti    
   14001625b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001625c:	(bad)  
   14001625d:	jnp    0x140016259
   14001625f:	fcmovnu st,st(7)
   140016261:	cli    
   140016262:	icebp  
   140016263:	cmc    
   140016264:	mov    ch,0xd5
   140016266:	iret   
   140016267:	(bad)  [rbx-0x4f466c31]
   14001626d:	ret    0xa7f6
   140016270:	(bad)  
   140016271:	(bad)  
   140016272:	mov    ch,0x5c
   140016274:	(bad)  
   140016275:	imul   eax,ebp,0xc2853765
   14001627b:	mov    dl,0x93
   14001627d:	in     eax,0xb
   14001627f:	fs lahf 
   140016281:	fstp   st(3)
   140016283:	rex.XB stc 
   140016285:	jae    0x140016251
   140016287:	in     al,dx
   140016288:	ds (bad) 
   14001628a:	mov    edi,0x3790d7cd
   14001628f:	loop   0x1400162f5
   140016291:	rex.W int3 
   140016293:	add    eax,0x99ee0dc
   140016298:	mov    dh,0xfd
   14001629a:	ds (bad) 
   14001629c:	mov    ebx,eax
   14001629e:	mov    ebx,0x5e873383
   1400162a3:	jbe    0x1400162b3
   1400162a5:	cmp    DWORD PTR [rbx+0x6d],0xd27da32e
   1400162ac:	push   rdx
   1400162ad:	mov    ah,0xd1
   1400162af:	push   rdx
   1400162b0:	(bad)  
   1400162b1:	and    eax,0x9a5805c1
   1400162b6:	imul   ecx,DWORD PTR [rbx],0x420000e2
   1400162bc:	mov    WORD PTR [rax+0xb],cs
   1400162bf:	xor    edi,DWORD PTR [rax+0x66]
   1400162c2:	imul   ebx,DWORD PTR [rip+0x5abc97f3],0x29c2fb60        # 0x19abdfabf
   1400162cc:	or     al,0xcf
   1400162ce:	sahf   
   1400162cf:	rex fild WORD PTR [rsi+0x663b3b]
   1400162d6:	add    BYTE PTR [rax],ah
   1400162d8:	add    BYTE PTR [rcx+0x44],cl
   1400162db:	push   r12
   1400162dd:	hlt    
   1400162de:	rex.WB jmp 0x142b322d1
   1400162e4:	out    0x4d,al
   1400162e6:	stc    
   1400162e7:	cdq    
   1400162e8:	ds int3 
   1400162ea:	nop
   1400162eb:	enter  0xf87b,0x57
   1400162ef:	sub    DWORD PTR [rdi],ebp
   1400162f1:	out    dx,al
   1400162f2:	rcr    DWORD PTR [rdx-0x22],1
   1400162f5:	mov    esi,DWORD PTR [rdx-0x2523d57f]
   1400162fb:	ins    BYTE PTR es:[rdi],dx
   1400162fc:	ins    DWORD PTR es:[rdi],dx
   1400162fd:	hlt    
   1400162fe:	cmp    cl,BYTE PTR [rcx*4-0x4efbe94b]
   140016305:	out    0x4c,eax
   140016307:	fcmovbe st,st(3)
   140016309:	mov    edi,0xfa809850
   14001630e:	icebp  
   14001630f:	xchg   esp,eax
   140016310:	xchg   ebp,eax
   140016311:	test   BYTE PTR [rcx],dh
   140016313:	(bad)  
   140016315:	rex.WR cld 
   140016317:	pop    rsp
   140016318:	scas   al,BYTE PTR es:[rdi]
   140016319:	sub    eax,0x9c50ada9
   14001631e:	cdq    
   14001631f:	iret   
   140016320:	xchg   ah,al
   140016322:	(bad)  
   140016323:	out    dx,eax
   140016324:	(bad)  
   140016325:	sub    al,0x23
   140016327:	rex.RXB jns 0x140016300
   14001632a:	stc    
   14001632b:	push   rbx
   14001632c:	mov    ah,0xac
   14001632e:	(bad)  
   14001632f:	push   0xffffffffffffff9f
   140016331:	retf   
   140016332:	movabs eax,ds:0x18c56fb6986eda7d
   14001633b:	xchg   edx,eax
   14001633c:	pop    rbp
   14001633d:	or     eax,0x1181fad0
   140016342:	jl     0x140016365
   140016344:	xchg   ebx,eax
   140016345:	iret   
   140016346:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016347:	ror    ah,0xb
   14001634a:	mov    dh,0x67
   14001634c:	loopne 0x14001631d
   14001634e:	scas   al,BYTE PTR es:[rdi]
   14001634f:	push   rbp
   140016350:	(bad)  
   140016351:	and    edi,edx
   140016353:	rex.WRXB and QWORD PTR [r15+0x78],r14
   140016357:	idiv   bl
   140016359:	xor    ah,ah
   14001635b:	mov    edx,0x4fcbd6ed
   140016360:	or     BYTE PTR [rbx-0x64210e44],al
   140016366:	xor    edi,ebx
   140016368:	xchg   DWORD PTR [rsi],esi
   14001636a:	lahf   
   14001636b:	jnp    0x14001632e
   14001636d:	mov    dh,0x88
   14001636f:	sub    DWORD PTR [rdi-0x43992849],0x19
   140016376:	add    BYTE PTR [rdi-0x73],cl
   140016379:	(bad)  
   14001637a:	(bad)  
   14001637b:	mov    ?,WORD PTR [rdi]
   14001637d:	std    
   14001637e:	in     al,0xa7
   140016380:	neg    DWORD PTR [rsi+0x76]
   140016383:	fnstenv [rdx-0x59]
   140016386:	scas   eax,DWORD PTR es:[rdi]
   140016387:	call   QWORD PTR [rsi]
   140016389:	and    ch,dl
   14001638b:	fadd   DWORD PTR [rbp+0x2e0307b5]
   140016391:	imul   edx,esi,0xcc8dab82
   140016397:	fiadd  DWORD PTR [rbx]
   140016399:	pop    rax
   14001639a:	rex.RX (bad) 
   14001639c:	pop    rdx
   14001639d:	ds mov edi,0x9d24eaee
   1400163a3:	fwait
   1400163a4:	push   rbp
   1400163a5:	jge    0x1400163bb
   1400163a7:	ins    BYTE PTR es:[rdi],dx
   1400163a8:	pop    rcx
   1400163a9:	xchg   BYTE PTR [rsi],dl
   1400163ab:	ret    
   1400163ac:	and    eax,0xfa28a429
   1400163b1:	xchg   ecx,ebx
   1400163b3:	mov    esp,0xdf2fd6c8
   1400163b8:	push   rsp
   1400163b9:	rex.W
   1400163ba:	or     BYTE PTR ss:[rsp+rcx*2+0x18],bl
   1400163bf:	icebp  
   1400163c0:	dec    DWORD PTR [rbp+0x41]
   1400163c3:	or     DWORD PTR [rdi+0x20],esp
   1400163c6:	sbb    eax,0x97681973
   1400163cb:	jbe    0x1400163b7
   1400163cd:	ja     0x1400163bf
   1400163cf:	imul   edx,DWORD PTR [rcx-0x5b],0xffffffe4
   1400163d3:	(bad)  
   1400163d4:	fist   DWORD PTR [rcx+rax*2-0x1fde7a2]
   1400163db:	mov    ebx,0x49010042
   1400163e0:	(bad)  
   1400163e1:	ficomp DWORD PTR [rdi+rax*8-0x4f]
   1400163e5:	icebp  
   1400163e6:	adc    edi,DWORD PTR [rax]
   1400163e8:	mov    dh,0xff
   1400163ea:	xor    eax,0xa043fd88
   1400163ef:	test   DWORD PTR [rcx],ecx
   1400163f1:	or     al,0x4f
   1400163f3:	cmp    al,0x87
   1400163f5:	xchg   ecx,eax
   1400163f6:	mov    DWORD PTR [rbx+0x409f4ce8],esp
   1400163fc:	pop    rsp
   1400163fd:	(bad)  
   1400163fe:	add    edi,DWORD PTR [rdx-0x366c0767]
   140016404:	sbb    eax,0x7508150
   140016409:	movabs al,ds:0x4242b6dd249a84e6
   140016412:	rex.RB lods al,BYTE PTR ds:[rsi]
   140016414:	jne    0x140016415
   140016416:	sbb    DWORD PTR [rdi],ebp
   140016418:	(bad)  
   140016419:	and    dl,BYTE PTR [rax-0x34]
   14001641c:	or     esi,DWORD PTR [rsi+0x20]
   14001641f:	rex.W cmp al,0x5a
   140016422:	repnz xchg ebp,eax
   140016424:	jb     0x14001648e
   140016426:	(bad)  
   140016427:	stos   BYTE PTR es:[rdi],al
   140016428:	movabs al,ds:0x25927bfca46f0a78
   140016431:	mov    edi,0x52f9bbc
   140016436:	rex.WRB not QWORD PTR [rip+0xffffffffcb123e7f]        # 0x10b13a2bc
   14001643d:	xchg   edx,eax
   14001643e:	(bad)  
   14001643f:	rex.R loop 0x140016421
   140016442:	xchg   DWORD PTR [rsp+rax*2-0x144b53a8],edi
   140016449:	jo     0x14001644b
   14001644b:	push   0xffffffffffffff8a
   14001644d:	stc    
   14001644e:	repz pop rax
   140016450:	in     al,dx
   140016451:	imul   ebp,DWORD PTR [rdi+0x200df5a3],0x29
   140016458:	loope  0x1400163e8
   14001645a:	add    BYTE PTR [rbp+0x55],al
   14001645d:	xor    al,BYTE PTR [rbp+0x77]
   140016460:	and    DWORD PTR [rcx+0x45ac54aa],edx
   140016466:	and    bh,dl
   140016468:	in     al,0xbc
   14001646a:	mov    ebp,DWORD PTR [rcx]
   14001646c:	repz cmp al,0x7d
   14001646f:	jl     0x1400164e7
   140016471:	outs   dx,DWORD PTR ds:[rsi]
   140016472:	push   rbx
   140016473:	rex.WRX
   140016474:	test   DWORD PTR ss:[rcx+0x294d961],ebx
   14001647b:	out    dx,al
   14001647c:	hlt    
   14001647d:	xchg   DWORD PTR [rsi],ebx
   14001647f:	mov    dh,0x82
   140016481:	iret   
   140016482:	xor    ebp,DWORD PTR [rdx]
   140016484:	and    al,0x85
   140016486:	adc    esi,DWORD PTR [rdi+rax*1+0x6c04ee69]
   14001648d:	cwde   
   14001648e:	ret    
   14001648f:	retf   
   140016490:	xlat   BYTE PTR ds:[rbx]
   140016491:	mov    bl,0x6a
   140016493:	shl    edi,1
   140016495:	pop    rcx
   140016496:	mov    ecx,0x84c24af9
   14001649b:	pushf  
   14001649c:	pop    rcx
   14001649d:	rex.WX cmp rbx,rdx
   1400164a0:	push   rsp
   1400164a1:	and    bl,BYTE PTR [rdx+0x5a4ae469]
   1400164a7:	stc    
   1400164a8:	(bad)  
   1400164a9:	(bad)  
   1400164aa:	jo     0x14001648c
   1400164ac:	sbb    DWORD PTR [rax-0x37],ebx
   1400164af:	int    0xc1
   1400164b1:	xlat   BYTE PTR ds:[rbx]
   1400164b2:	add    esp,ebx
   1400164b4:	psrad  mm0,QWORD PTR [rdx+0x6c]
   1400164b8:	(bad)  
   1400164b9:	jge    0x1400164f0
   1400164bb:	enter  0x6048,0x1d
   1400164bf:	mov    al,BYTE PTR [rsi+rdx*4]
   1400164c2:	out    0xe7,eax
   1400164c4:	(bad)  
   1400164c5:	notrack call QWORD PTR [rcx+0x4e7ffc3f]
   1400164cc:	cmp    al,0xf9
   1400164ce:	clc    
   1400164cf:	rex.WRXB ins BYTE PTR es:[rdi],dx
   1400164d1:	outs   dx,BYTE PTR ds:[rsi]
   1400164d2:	outs   dx,BYTE PTR ds:[rsi]
   1400164d3:	ds xchg esp,eax
   1400164d5:	pop    rax
   1400164d6:	push   rbx
   1400164d7:	imul   ebx,DWORD PTR [rcx-0x5f],0x25d7e73c
   1400164de:	sti    
   1400164df:	xchg   ecx,eax
   1400164e0:	ins    DWORD PTR es:[rdi],dx
   1400164e1:	cmp    DWORD PTR [rax+rcx*1],0xbe68ba6b
   1400164e8:	mov    esi,0x7e13364d
   1400164ed:	fistp  WORD PTR [rdi+0x6185cb5]
   1400164f3:	xchg   ebx,eax
   1400164f4:	jae    0x140016482
   1400164f6:	pop    rbp
   1400164f7:	(bad)  
   1400164f8:	sub    BYTE PTR [rbx],ch
   1400164fa:	pmaddwd mm1,QWORD PTR [rcx+0x58]
   1400164fe:	sahf   
   1400164ff:	mov    edi,0xa8c87c3e
   140016504:	test   al,0x75
   140016506:	xor    BYTE PTR [rbp+0x75c38603],al
   14001650c:	jae    0x1400164e1
   14001650e:	xchg   edx,eax
   14001650f:	mov    edx,0xaeb54109
   140016514:	sub    DWORD PTR [esi],edx
   140016517:	sbb    edx,DWORD PTR [rbx+0x53b41455]
   14001651d:	pop    rax
   14001651e:	imul   ecx,ebx,0x1570c28b
   140016524:	(bad)  
   140016525:	xchg   edx,eax
   140016526:	mul    DWORD PTR [rcx-0x214a8c0e]
   14001652c:	xchg   ebx,eax
   14001652d:	(bad)  
   14001652e:	(bad)  
   14001652f:	jo     0x140016595
   140016531:	call   0xfda2e968
   140016536:	shr    dl,0x3c
   140016539:	cli    
   14001653a:	addr32 (bad) 
   14001653c:	xor    BYTE PTR [rbx+rsi*2],dh
   14001653f:	sbb    al,0x9d
   140016541:	jmp    0x14b4cee19
   140016546:	and    BYTE PTR [rbp-0x8],cl
   140016549:	jno    0x140016563
   14001654b:	int    0x1
   14001654d:	adc    DWORD PTR [rdx+rbp*1+0xa9fa74a],eax
   140016554:	nop
   140016555:	je     0x1400165b6
   140016557:	or     eax,0x63b445fb
   14001655c:	inc    BYTE PTR [rcx+0x33]
   14001655f:	rol    DWORD PTR [rdx+0x52b35b3d],cl
   140016565:	mov    WORD PTR [rsi-0x2e],ss
   140016568:	(bad)  
   14001656c:	sub    bl,al
   14001656e:	(bad)  
   14001656f:	cmp    BYTE PTR [rsi+0x6e],0x96
   140016573:	(bad)  
   140016574:	test   al,0xf0
   140016576:	stos   DWORD PTR es:[rdi],eax
   140016577:	(bad)  
   140016578:	sub    al,0xcf
   14001657a:	rex.RX add eax,0x2d63c2d0
   140016580:	or     BYTE PTR [rbx-0x71aea60b],bh
   140016586:	sub    cl,al
   140016588:	jae    0x14001651f
   14001658a:	rex.B
   14001658b:	repnz sbb BYTE PTR [rsi-0x5f0367b5],bh
   140016592:	gs (bad) 
   140016594:	in     eax,dx
   140016595:	and    ch,ah
   140016597:	mov    bl,0xec
   140016599:	(bad)  
   14001659a:	shl    al,0x8c
   14001659d:	or     DWORD PTR [rax-0x7664fcb3],ebx
   1400165a3:	pushf  
   1400165a4:	sub    BYTE PTR [rbx],bl
   1400165a6:	or     ah,BYTE PTR [rax]
   1400165a8:	push   rdi
   1400165a9:	cli    
   1400165aa:	stc    
   1400165ab:	test   eax,0x3f2cf9c8
   1400165b0:	xchg   ebp,eax
   1400165b1:	pop    rsi
   1400165b2:	mov    edx,DWORD PTR [rsi]
   1400165b4:	pop    rcx
   1400165b5:	(bad)  
   1400165b6:	cmc    
   1400165b7:	pslld  mm6,QWORD PTR [rax+0x58]
   1400165bb:	xchg   ebx,eax
   1400165bc:	in     eax,0xed
   1400165be:	jnp    0x140016569
   1400165c0:	(bad)  
   1400165c1:	sub    al,0xc6
   1400165c3:	(bad)  
   1400165c4:	(bad)  
   1400165c5:	mov    ebx,0x6e5ef27a
   1400165ca:	xor    al,0x14
   1400165cc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400165cd:	cmc    
   1400165ce:	cmp    ebp,eax
   1400165d0:	in     al,dx
   1400165d1:	retf   
   1400165d2:	xchg   ecx,eax
   1400165d3:	or     DWORD PTR [rdx],ebp
   1400165d5:	int    0xc8
   1400165d7:	add    al,0x81
   1400165d9:	ret    0x5e01
   1400165dc:	jg     0x1400165fd
   1400165de:	mov    al,dh
   1400165e0:	rex.WRX movabs rax,0x44da283f8c45b80
   1400165ea:	or     eax,esi
   1400165ec:	cdq    
   1400165ed:	inc    dh
   1400165ef:	lahf   
   1400165f0:	jns    0x1400165ec
   1400165f2:	(bad)  
   1400165f3:	in     al,dx
   1400165f4:	jmp    0x17eefb5ea
   1400165f9:	je     0x140016664
   1400165fb:	outs   dx,DWORD PTR ds:[rsi]
   1400165fc:	(bad)  
   1400165fd:	jmp    0x168e1a6de
   140016602:	(bad)  
   140016603:	sbb    dl,cl
   140016605:	and    DWORD PTR [rdx+0x5b],esi
   140016608:	lahf   
   140016609:	push   rbx
   14001660a:	jns    0x1400165bf
   14001660c:	ins    DWORD PTR es:[rdi],dx
   14001660d:	xor    al,0x8b
   14001660f:	retf   0x89a4
   140016612:	adc    al,0x66
   140016614:	gs ins DWORD PTR es:[rdi],dx
   140016616:	adc    dl,BYTE PTR [rax+0x12b2e26a]
   14001661c:	test   ch,bh
   14001661e:	movabs al,ds:0xb132975830ab6eb0
   140016627:	(bad)  
   140016629:	(bad)  
   14001662a:	cmp    DWORD PTR [rbx],edx
   14001662c:	jp     0x140016632
   14001662e:	push   rbp
   14001662f:	(bad)  
   140016630:	(bad)  
   140016631:	clc    
   140016632:	xor    al,0xb
   140016634:	(bad)  
   140016635:	pop    rbx
   140016636:	(bad)  
   140016637:	rex.RX jle 0x1400165dc
   14001663a:	or     DWORD PTR [rdx+0x3ca70288],esp
   140016640:	imul   ebx,DWORD PTR [rip+0x1655ead2],0x8bc3c833        # 0x15657511c
   14001664a:	es xor ah,ch
   14001664d:	ja     0x1400166a1
   14001664f:	or     BYTE PTR [rsi-0x757ce7a3],al
   140016655:	mov    edx,0x160218ef
   14001665a:	rex.WRXB (bad) 
   14001665c:	(bad)
   14001665f:	(bad)  
   140016660:	out    0xc1,al
   140016662:	jmp    0x1400165e4
   140016664:	int    0x35
   140016666:	je     0x14001660e
   140016668:	rex.RXB mov r9b,0xe7
   14001666b:	hlt    
   14001666c:	jae    0x140016686
   14001666e:	cwde   
   14001666f:	sbb    BYTE PTR [rbp+0x35],al
   140016672:	(bad)  
   140016673:	xor    DWORD PTR [rax-0x532b774e],0xc4cb3241
   14001667d:	xchg   edx,eax
   14001667e:	rex.R enter 0x3e8a,0x15
   140016683:	pop    rcx
   140016684:	cdq    
   140016685:	(bad)  
   140016686:	movabs eax,ds:0x81dd403a8cfcb326
   14001668f:	ret    0x7fa
   140016692:	imul   ebp,eax,0x1
   140016695:	(bad)  
   140016696:	addr32 or eax,0x823a05b0
   14001669c:	and    eax,DWORD PTR [rbx]
   14001669e:	(bad)
   1400166a2:	pop    rsi
   1400166a3:	rex.XB add spl,BYTE PTR [r8]
   1400166a6:	gs not ebp
   1400166a9:	ret    0x4507
   1400166ac:	add    esi,edx
   1400166ae:	push   rcx
   1400166af:	sub    BYTE PTR [rdx-0x194ad8fb],ch
   1400166b5:	mov    ecx,0x9448ffb
   1400166ba:	test   ch,bh
   1400166bc:	xlat   BYTE PTR ds:[rbx]
   1400166bd:	mov    BYTE PTR [rax-0x78],al
   1400166c0:	scas   al,BYTE PTR es:[rdi]
   1400166c1:	jo     0x140016725
   1400166c3:	push   rsp
   1400166c4:	hlt    
   1400166c5:	movabs al,ds:0x92a86ae619410011
   1400166ce:	lock js 0x14001668c
   1400166d1:	movabs ds:0xa3c8e113f6dffb00,al
   1400166da:	stos   BYTE PTR es:[rdi],al
   1400166db:	test   eax,0x2b8e1ed1
   1400166e0:	xchg   esp,eax
   1400166e1:	xor    BYTE PTR [rdi+0x6f8d9c0c],dl
   1400166e7:	rcr    DWORD PTR [rsi+0x26b5fc8a],1
   1400166ed:	sub    BYTE PTR [rcx-0x16],bl
   1400166f0:	(bad)  
   1400166f1:	xor    al,0x92
   1400166f3:	(bad)  
   1400166f4:	and    al,0x40
   1400166f6:	rex.WR
   1400166f7:	repz fsubr QWORD PTR [rcx]
   1400166fa:	or     DWORD PTR [rdx+0x62b386e2],ecx
   140016700:	sar    DWORD PTR [rsi+0x15ef3e80],1
   140016706:	adc    ebx,ebp
   140016708:	in     al,0x75
   14001670a:	push   rsp
   14001670b:	jmp    0x1400166d2
   14001670d:	rex.W sub BYTE PTR [rcx-0x60fe6ac0],cl
   140016714:	in     al,dx
   140016715:	pop    rsp
   140016716:	sub    BYTE PTR [rbx],ah
   140016718:	rex.X in al,0xb4
   14001671b:	addr32 (bad) 
   14001671d:	jne    0x14001671e
   14001671f:	repnz fwait
   140016721:	sbb    BYTE PTR [rcx+0x14605c3],bl
   140016727:	pop    rcx
   140016728:	fwait
   140016729:	rex.W sahf 
   14001672b:	mov    cl,0x2
   14001672d:	(bad)  
   14001672e:	je     0x140016751
   140016730:	pushf  
   140016731:	and    BYTE PTR [rbx+0x63d1a981],0xd3
   140016738:	lahf   
   140016739:	std    
   14001673a:	sbb    edi,0xfffffff9
   14001673d:	lea    ebp,[rcx+0x32ffa3b1]
   140016743:	xor    eax,0x285da8cd
   140016748:	ror    eax,0x30
   14001674b:	mov    bl,0xb8
   14001674d:	in     al,0x37
   14001674f:	outs   dx,DWORD PTR ds:[rsi]
   140016750:	not    bl
   140016752:	push   rdi
   140016753:	(bad)  
   140016755:	mov    DWORD PTR [rbp-0x7cdbe9ae],edx
   14001675b:	enter  0x7129,0xe1
   14001675f:	pop    rax
   140016760:	rcr    DWORD PTR [rsi],0x8d
   140016763:	and    ecx,DWORD PTR [rip+0x50000be7]        # 0x190017350
   140016769:	xchg   ebx,eax
   14001676a:	cld    
   14001676b:	jl     0x140016723
   14001676d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001676e:	mov    dil,0x4
   140016771:	scas   eax,DWORD PTR es:[rdi]
   140016772:	sbb    DWORD PTR [rax-0x32],eax
   140016775:	sub    BYTE PTR [rsp+rbx*4],cl
   140016778:	and    DWORD PTR [rip+0x621b6120],edi        # 0x1a21cc89e
   14001677e:	rex.WB int 0x15
   140016781:	xchg   esp,eax
   140016782:	(bad)  
   140016783:	lods   eax,DWORD PTR ds:[rsi]
   140016784:	loop   0x14001679d
   140016786:	sbb    eax,DWORD PTR [rcx-0x2e]
   140016789:	adc    DWORD PTR [rip+0x190adfcf],ebp        # 0x1590c475e
   14001678f:	sbb    DWORD PTR [rdx],edi
   140016791:	sbb    DWORD PTR [rax+0x69],0x9b42344f
   140016798:	xchg   DWORD PTR [rax-0x3d4ef042],eax
   14001679e:	fcmovbe st,st(4)
   1400167a0:	rex.WB cmp al,0xb1
   1400167a3:	(bad)  
   1400167a4:	(bad)  
   1400167a5:	jmp    0x105045d8a
   1400167aa:	(bad)  
   1400167ab:	es mov al,0x6b
   1400167ae:	cli    
   1400167af:	cmp    BYTE PTR [rsi],al
   1400167b1:	data16 (bad) 
   1400167b3:	push   rcx
   1400167b4:	int    0x4f
   1400167b6:	and    ebp,DWORD PTR [rsi+0x893812e]
   1400167bc:	mov    edi,0x8b16a4c
   1400167c1:	adc    eax,0x12f8b691
   1400167c6:	loope  0x140016757
   1400167c8:	pop    rdx
   1400167c9:	jrcxz  0x1400167fa
   1400167cb:	add    eax,0x9cd8f240
   1400167d0:	and    eax,0xe7b3c0d2
   1400167d5:	rex.WXB test al,0xd5
   1400167d8:	(bad)  
   1400167d9:	or     dh,BYTE PTR [rbx-0x53]
   1400167dc:	lea    esi,[rdi-0x20]
   1400167df:	(bad)  
   1400167e0:	(bad)  
   1400167e1:	loopne 0x14001680f
   1400167e3:	pop    rsp
   1400167e4:	shr    DWORD PTR [rax+rdi*2-0x130a934],0xf7
   1400167ec:	lods   al,BYTE PTR ds:[rsi]
   1400167ed:	(bad)  
   1400167ee:	sub    al,dl
   1400167f0:	mov    ebp,DWORD PTR [rdx+0x42160850]
   1400167f6:	test   bl,bh
   1400167f8:	(bad)
   1400167fb:	rcr    DWORD PTR [rax],0x32
   1400167fe:	shr    ebx,1
   140016800:	(bad)  
   140016801:	bnd jl 0x140016808
   140016804:	sub    bh,BYTE PTR [rsi]
   140016806:	hlt    
   140016807:	rol    BYTE PTR [rbp-0x52],1
   14001680a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001680b:	xor    bl,al
   14001680d:	(bad)  
   14001680e:	iret   
   14001680f:	sar    DWORD PTR [rdi],1
   140016811:	hlt    
   140016812:	xlat   BYTE PTR ds:[rbx]
   140016813:	pop    rcx
   140016814:	lock rex.WXB not QWORD PTR [r10-0x41b23fed]
   14001681c:	pop    rsi
   14001681d:	sti    
   14001681e:	rex.XB jno 0x140016829
   140016821:	cmp    DWORD PTR [rdx-0x57c69ac3],esi
   140016827:	sub    DWORD PTR [rdx],esp
   140016829:	mov    bh,0x4c
   14001682b:	sahf   
   14001682c:	adc    DWORD PTR [rax],ecx
   14001682e:	pop    QWORD PTR [rcx+rbx*8-0xd4d46f3]
   140016835:	mov    cl,0x2f
   140016837:	iret   
   140016838:	xchg   edi,eax
   140016839:	out    dx,eax
   14001683a:	fwait
   14001683b:	or     BYTE PTR [rdx-0x79a5ea64],bl
   140016841:	int    0xef
   140016843:	(bad)  
   140016844:	lahf   
   140016845:	sub    edi,DWORD PTR [rcx+0x11c7b391]
   14001684b:	add    BYTE PTR [rbx],0x37
   14001684e:	icebp  
   14001684f:	fcomp  QWORD PTR [rbp+0x2e3bf428]
   140016855:	rcl    dh,1
   140016857:	ds push rax
   140016859:	pop    rbx
   14001685a:	or     DWORD PTR [rsi+rbp*1+0x55803ac1],edx
   140016861:	add    BYTE PTR [rbx-0x700c00a1],ch
   140016867:	fdivrp st(7),st
   140016869:	(bad)  
   14001686a:	std    
   14001686b:	pop    rdi
   14001686c:	sti    
   14001686d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001686e:	sbb    ebp,DWORD PTR [rbx-0xe9a8055]
   140016874:	cmc    
   140016875:	(bad)  
   140016876:	pop    rsp
   140016877:	and    BYTE PTR [rax+0x479f7775],bh
   14001687d:	movabs eax,ds:0x1b50fdc00b331a1
   140016886:	or     BYTE PTR [rsi],ah
   140016888:	cmp    edx,0x466f16c3
   14001688e:	cdq    
   14001688f:	gs rex.RB
   140016891:	rex.WX movabs rcx,0x4daae02e8b21609f
   14001689b:	sub    eax,0x42f94fee
   1400168a0:	repnz icebp 
   1400168a2:	pop    rdx
   1400168a3:	push   rdi
   1400168a4:	lods   eax,DWORD PTR ds:[rsi]
   1400168a5:	xchg   esi,eax
   1400168a6:	sahf   
   1400168a7:	xchg   ebx,eax
   1400168a8:	or     al,BYTE PTR [rdi-0x6e067ff4]
   1400168ae:	ins    BYTE PTR es:[rdi],dx
   1400168af:	push   rsi
   1400168b0:	pop    rsp
   1400168b1:	scas   al,BYTE PTR es:[rdi]
   1400168b2:	mov    edx,0xa3ec4098
   1400168b7:	rex.RX cli 
   1400168b9:	jbe    0x140016886
   1400168bb:	cwde   
   1400168bc:	mov    dh,0x14
   1400168be:	push   rsp
   1400168bf:	test   al,0x6a
   1400168c1:	xor    al,0xb3
   1400168c3:	adc    edi,DWORD PTR [rax+0x66]
   1400168c6:	jp     0x1400168d6
   1400168c8:	mov    bl,0x87
   1400168ca:	outs   dx,BYTE PTR ds:[rsi]
   1400168cb:	rex push rbp
   1400168cd:	jne    0x14001685f
   1400168cf:	xchg   esi,eax
   1400168d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400168d1:	xor    BYTE PTR [rbx+rsi*2],dh
   1400168d4:	or     al,0x3b
   1400168d6:	addr32 rex.WRX mov al,ds:0x5c449b9e
   1400168dd:	xchg   ecx,eax
   1400168de:	rex.X (bad) 
   1400168e0:	movabs al,ds:0xfee24047fad43d70
   1400168e9:	(bad)  
   1400168ea:	(bad)  
   1400168eb:	repnz icebp 
   1400168ed:	(bad)  
   1400168ee:	mov    edi,0x9bf0b21
   1400168f3:	jo     0x140016960
   1400168f5:	and    ah,BYTE PTR [rdx+0x2ca46b8]
   1400168fb:	pop    rdx
   1400168fc:	pop    rsp
   1400168fd:	stos   BYTE PTR es:[rdi],al
   1400168fe:	out    dx,eax
   1400168ff:	push   0x6ce19fc2
   140016904:	test   ch,0x43
   140016907:	enter  0x6ff7,0x28
   14001690b:	rex.XB jle 0x140016938
   14001690e:	mov    al,ch
   140016910:	pop    rdx
   140016911:	jae    0x140016980
   140016913:	sub    eax,0x5732ca2a
   140016918:	mov    WORD PTR [rbx+0x21],es
   14001691b:	mov    ch,ah
   14001691d:	and    BYTE PTR [rdx+0x2fa18b5d],dl
   140016923:	jmp    FWORD PTR [rdx]
   140016925:	mov    ebx,0x10edbc04
   14001692a:	rex.RB pushf 
   14001692c:	(bad)  
   14001692d:	in     eax,dx
   14001692e:	loope  0x1400168e6
   140016930:	sti    
   140016931:	outs   dx,BYTE PTR ds:[rsi]
   140016932:	rex.WRXB add r14,QWORD PTR [r14-0x10281e79]
   140016939:	cmp    ebx,ebx
   14001693b:	cwde   
   14001693c:	sti    
   14001693d:	adc    eax,0x6ad52170
   140016942:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016943:	int    0x2d
   140016945:	sub    bl,dl
   140016947:	ds leave 
   140016949:	mov    edx,0xc7615125
   14001694e:	mov    dl,0xea
   140016950:	shr    BYTE PTR [rbx-0x3956182c],cl
   140016956:	je     0xd414a7ac
   14001695c:	neg    DWORD PTR [rdi-0x13fbfe51]
   140016962:	rol    esi,0xf
   140016965:	movabs ds:0x16ebdf827ad7bc5d,eax
   14001696e:	mov    bh,0x7d
   140016970:	shl    BYTE PTR [rsi+0x9],cl
   140016973:	in     al,dx
   140016974:	cli    
   140016975:	(bad)
   140016979:	rex.WRX sahf 
   14001697b:	pop    rax
   14001697c:	cmp    dl,dh
   14001697e:	lock sbb DWORD PTR [rdi+0x55e57fdd],0xfffffff3
   140016986:	popf   
   140016987:	fidivr WORD PTR [rsi-0x48576665]
   14001698d:	mov    ah,0x8b
   14001698f:	jle    0x140016982
   140016991:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016992:	rex.WB
   140016993:	rex.R shl spl,1
   140016996:	pop    rdi
   140016997:	adc    eax,0xfe189b4c
   14001699c:	sbb    esi,edx
   14001699e:	je     0x14001693a
   1400169a0:	(bad)  
   1400169a1:	sub    BYTE PTR [rdx],dh
   1400169a3:	in     eax,0xd4
   1400169a5:	(bad)  
   1400169a6:	rex or edx,eax
   1400169a9:	push   rsp
   1400169aa:	movabs ds:0x900dd07580184309,al
   1400169b3:	cld    
   1400169b4:	mov    WORD PTR [rsi+0x33],es
   1400169b7:	fisub  DWORD PTR [rdx-0x77a3e97b]
   1400169bd:	in     eax,0xb7
   1400169bf:	xor    eax,0x2162d7d4
   1400169c4:	adc    cl,BYTE PTR [rcx+0x57]
   1400169c7:	(bad)  
   1400169c8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400169c9:	jb     0x1400169f1
   1400169cb:	mov    ecx,0x6301b779
   1400169d0:	test   BYTE PTR [rdi+rbx*8+0x18],ah
   1400169d4:	(bad)  
   1400169d5:	loope  0x1400169e7
   1400169d7:	add    BYTE PTR [rsi-0x52efbfb9],dl
   1400169dd:	(bad)  
   1400169de:	test   DWORD PTR [rax+0x9],ecx
   1400169e1:	movabs eax,ds:0x86313d1c19c581aa
   1400169ea:	mov    cl,0x4b
   1400169ec:	pop    rsi
   1400169ed:	mov    edi,DWORD PTR [rdx+0x60]
   1400169f0:	(bad)  
   1400169f1:	shr    dl,cl
   1400169f3:	sbb    al,0x6
   1400169f5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400169f6:	mov    fs,WORD PTR [rdx-0x31]
   1400169f9:	test   eax,0x753bd0e7
   1400169fe:	adc    dl,ch
   140016a00:	fcom   QWORD PTR [rdx+rax*8]
   140016a03:	fisub  DWORD PTR [rdx-0xd2f06cc]
   140016a09:	xor    ebx,DWORD PTR [rcx-0x2c]
   140016a0c:	and    esp,DWORD PTR [rax+0x45fc4ca6]
   140016a12:	add    ch,BYTE PTR [rdx+0x6a]
   140016a15:	xchg   esp,eax
   140016a16:	(bad)  
   140016a17:	shr    BYTE PTR [rax],1
   140016a19:	add    ch,ah
   140016a1b:	xchg   ebp,eax
   140016a1c:	jge    0x1400169c1
   140016a1e:	rex.B jg 0x1400169a4
   140016a21:	xchg   esp,eax
   140016a22:	shr    DWORD PTR [rsi+rsi*4+0x73b57842],1
   140016a29:	xchg   ecx,eax
   140016a2a:	mov    dl,0x60
   140016a2c:	mov    ebx,0xfdac8ee5
   140016a31:	(bad)  
   140016a32:	test   al,0x15
   140016a34:	fisubr WORD PTR [rdx+0x35]
   140016a37:	not    ah
   140016a39:	or     DWORD PTR [rsi],ebp
   140016a3b:	mov    al,0x3e
   140016a3d:	out    dx,eax
   140016a3e:	(bad)  
   140016a3f:	(bad)  
   140016a40:	test   esp,eax
   140016a42:	(bad)  
   140016a43:	pop    rax
   140016a44:	mov    edx,0x3ff05a8a
   140016a49:	test   al,ah
   140016a4b:	test   BYTE PTR [rdx+0x55],ah
   140016a4e:	or     DWORD PTR [rcx],edi
   140016a50:	sbb    DWORD PTR [rbx-0x69977360],eax
   140016a56:	shl    dl,cl
   140016a58:	or     DWORD PTR [rdx],eax
   140016a5a:	test   BYTE PTR [rsp+rcx*1],al
   140016a5d:	stos   BYTE PTR es:[rdi],al
   140016a5e:	test   DWORD PTR [rax-0xa],ecx
   140016a61:	(bad)  
   140016a62:	(bad)  
   140016a63:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016a64:	test   eax,esi
   140016a66:	adc    eax,0x6d19396
   140016a6b:	xchg   ecx,eax
   140016a6c:	push   0xb
   140016a6e:	in     al,0x35
   140016a70:	ins    BYTE PTR es:[rdi],dx
   140016a71:	pop    rdi
   140016a72:	fwait
   140016a73:	addr32 jns 0x140016a9d
   140016a76:	and    eax,DWORD PTR [rcx]
   140016a78:	int    0x1c
   140016a7a:	xor    BYTE PTR [rbx-0x5aa8f1e5],dl
   140016a80:	or     esi,ecx
   140016a82:	and    eax,0x2c001af8
   140016a87:	enter  0x55,0xb
   140016a8b:	cmp    ecx,eax
   140016a8d:	int    0xc5
   140016a8f:	mov    ah,0xf0
   140016a91:	jg     0x140016a4f
   140016a93:	sub    BYTE PTR [rsp+rsi*4],ch
   140016a96:	scas   al,BYTE PTR es:[rdi]
   140016a97:	int    0x39
   140016a99:	(bad)  
   140016a9a:	(bad)  
   140016a9b:	cmp    ah,al
   140016a9d:	jnp    0x140016a69
   140016a9f:	fs rex.B
   140016aa1:	rex.X loopne 0x140016a58
   140016aa4:	out    0x1a,eax
   140016aa6:	pop    rdx
   140016aa7:	stc    
   140016aa8:	int3   
   140016aa9:	xchg   edi,eax
   140016aaa:	mov    al,0x67
   140016aac:	add    ah,BYTE PTR [rsi+0x21]
   140016aaf:	sbb    BYTE PTR cs:[rbx],0x70
   140016ab3:	jbe    0x140016add
   140016ab5:	jno    0x140016b1d
   140016ab7:	xor    al,0xe0
   140016ab9:	movabs eax,ds:0x8f93fe5fcb34d4c2
   140016ac2:	cld    
   140016ac3:	(bad)  
   140016ac4:	fcom   DWORD PTR [rbx-0x391b0271]
   140016aca:	cli    
   140016acb:	(bad)  
   140016acc:	mov    bh,0x45
   140016ace:	jne    0x140016ab6
   140016ad0:	or     eax,DWORD PTR [rsi]
   140016ad2:	or     dh,BYTE PTR [rsi]
   140016ad4:	shl    DWORD PTR [rsi],cl
   140016ad6:	and    eax,DWORD PTR [rip+0xffffffff876554b7]        # 0xc766bf93
   140016adc:	pop    rdi
   140016add:	push   rbx
   140016ade:	es fs sub ax,0xa144
   140016ae4:	add    cl,BYTE PTR [rax+rax*4-0x7c]
   140016ae8:	(bad)  
   140016ae9:	sub    DWORD PTR [rdi+0x11e7ad7],esp
   140016aef:	mov    bl,0xc2
   140016af1:	jl     0x140016b6c
   140016af3:	sub    eax,0xc63b4ffc
   140016af8:	outs   dx,DWORD PTR ds:[rsi]
   140016af9:	ret    0x96f
   140016afc:	push   r9
   140016afe:	iret   
   140016aff:	push   rsp
   140016b00:	ss and ecx,ebp
   140016b03:	leave  
   140016b04:	shr    ch,0xdf
   140016b07:	ins    BYTE PTR es:[rdi],dx
   140016b08:	push   rbx
   140016b09:	mov    ch,0xbc
   140016b0b:	rex.RB or eax,0x835a49eb
   140016b11:	(bad)  
   140016b12:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016b13:	retf   0xd62
   140016b16:	pop    rdx
   140016b17:	pop    rbp
   140016b18:	sar    al,0xd8
   140016b1b:	mov    bl,0x38
   140016b1d:	mov    edx,0xa1c43af7
   140016b22:	add    esp,eax
   140016b24:	lea    eax,[rbp-0xc]
   140016b27:	int3   
   140016b28:	sahf   
   140016b29:	ror    al,0xd4
   140016b2c:	xor    esp,esi
   140016b2e:	int    0x9e
   140016b30:	rex.RX pop rsp
   140016b32:	pushf  
   140016b33:	pop    r8
   140016b35:	pop    rbx
   140016b36:	add    ah,BYTE PTR [rdi+0x1de69075]
   140016b3c:	adc    bl,ch
   140016b3e:	adc    dl,dl
   140016b40:	nop
   140016b41:	test   BYTE PTR [rdi-0x552dad6],bl
   140016b47:	mov    bl,0x1a
   140016b49:	jg     0x140016b19
   140016b4b:	jle    0x140016b05
   140016b4d:	repnz movabs al,ds:0x2753612d85686a23
   140016b58:	sub    esp,DWORD PTR [rcx-0x227ff74]
   140016b5e:	mov    dl,0x36
   140016b60:	mov    esp,0xd903842c
   140016b65:	sub    dl,BYTE PTR [rdx+0x24b9f4fa]
   140016b6b:	mov    eax,0x62841640
   140016b70:	mov    ch,0x9c
   140016b72:	nop
   140016b73:	(bad)  
   140016b74:	sbb    ecx,DWORD PTR [rax]
   140016b76:	gs call 0x12537624f
   140016b7c:	(bad)  
   140016b7d:	call   0x19bdc902f
   140016b82:	(bad)  
   140016b84:	stos   DWORD PTR es:[rdi],eax
   140016b85:	xor    eax,0xb6168ad9
   140016b8a:	pop    rdx
   140016b8b:	(bad)  
   140016b8c:	(bad)  
   140016b8d:	imul   DWORD PTR [rbp+0x9]
   140016b90:	(bad)  
   140016b91:	outs   dx,BYTE PTR ds:[rsi]
   140016b92:	mov    ebp,0xf927bdb9
   140016b97:	(bad)  
   140016b99:	add    ebx,edi
   140016b9b:	(bad)  
   140016b9c:	rex.WXB icebp 
   140016b9e:	cli    
   140016b9f:	or     eax,0xfd4b05c8
   140016ba4:	test   dh,bl
   140016ba6:	adc    BYTE PTR [rbx+rsi*2-0x77370810],dl
   140016bad:	xchg   DWORD PTR [rsp+rax*1-0x4],ebx
   140016bb1:	add    esp,DWORD PTR [rdx]
   140016bb3:	fwait
   140016bb4:	adc    ebp,esp
   140016bb6:	rex.RB fldenv [r13-0x54c70070]
   140016bbd:	or     BYTE PTR [rcx+rbp*4-0x2d],ch
   140016bc1:	loopne 0x140016be0
   140016bc3:	xlat   BYTE PTR ds:[rbx]
   140016bc4:	icebp  
   140016bc5:	loop   0x140016c42
   140016bc7:	jno    0x140016b4a
   140016bc9:	push   rbx
   140016bca:	xor    DWORD PTR [rdi+0x3b728023],0x3b
   140016bd1:	rex.B push 0xfffffffffa7cffa5
   140016bd7:	mov    ecx,0x4c2f4f67
   140016bdc:	rex.WRB jl 0x140016c59
   140016bdf:	in     al,0xe0
   140016be1:	and    eax,0x77dbdd55
   140016be6:	and    ecx,DWORD PTR [rax-0x56]
   140016be9:	call   FWORD PTR [rbx-0x66]
   140016bec:	push   rdi
   140016bed:	xor    eax,0xa5fb4e69
   140016bf2:	pushf  
   140016bf3:	cmp    edi,DWORD PTR [rsi-0x594a9c9b]
   140016bf9:	rex.WRX
   140016bfa:	lock cdq 
   140016bfc:	push   rbp
   140016bfd:	rex.WRX pop rsi
   140016bff:	add    ebp,eax
   140016c01:	sbb    bl,dh
   140016c03:	mov    edx,0x84306b1
   140016c08:	add    BYTE PTR [rdx],dl
   140016c0a:	add    eax,0xb68829af
   140016c0f:	pop    rax
   140016c10:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016c11:	(bad)  
   140016c12:	mov    dl,0xa1
   140016c14:	mov    DWORD PTR [rdx+0x18831fc5],ebx
   140016c1a:	ins    DWORD PTR es:[rdi],dx
   140016c1b:	add    al,0x24
   140016c1d:	adc    DWORD PTR [rax+rax*8],edi
   140016c20:	sub    eax,0x33835b8
   140016c25:	mov    dl,0x62
   140016c27:	xchg   edx,eax
   140016c28:	loope  0x140016c72
   140016c2a:	(bad)  
   140016c2b:	mov    ecx,0xe797f7c8
   140016c30:	sub    eax,0x38003239
   140016c35:	add    al,0x54
   140016c37:	fnsave [rip+0x18fb3f4c]        # 0x158fcab89
   140016c3d:	sahf   
   140016c3e:	sbb    BYTE PTR [rcx+0x3affb402],bh
   140016c44:	test   ch,cl
   140016c46:	adc    eax,0x7638ecd0
   140016c4b:	rex.WRXB
   140016c4c:	xchg   DWORD PTR ds:[rbp+0x67a8a313],ebx
   140016c53:	rex.WRXB and r13,QWORD PTR [r14]
   140016c56:	(bad)  
   140016c57:	add    ebx,ebp
   140016c59:	gs cmp eax,0xfd25267
   140016c5f:	test   al,0x10
   140016c61:	push   rax
   140016c62:	(bad)  
   140016c63:	rex.X lods eax,DWORD PTR ds:[rsi]
   140016c65:	popf   
   140016c66:	jle    0x140016c0c
   140016c68:	(bad)  
   140016c69:	jg     0x140016cdd
   140016c6b:	and    eax,0x53b6c550
   140016c70:	push   0x39023be1
   140016c75:	mov    DWORD PTR [rsi],edx
   140016c77:	cwde   
   140016c78:	jl     0x140016c03
   140016c7a:	scas   eax,DWORD PTR es:[rdi]
   140016c7b:	movabs al,ds:0x288ad0c028163656
   140016c84:	adc    BYTE PTR [rbp-0xa57ce3c],dh
   140016c8a:	cmovp  ecx,esi
   140016c8d:	sbb    ecx,edi
   140016c8f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016c90:	movabs eax,ds:0xd4e53aadced2523b
   140016c99:	pop    rdi
   140016c9a:	xor    dh,BYTE PTR [rax+riz*1]
   140016c9d:	(bad)  
   140016c9e:	mov    eax,0xdefc410a
   140016ca3:	add    dh,BYTE PTR [rcx]
   140016ca5:	rex.R mov ebp,0x9d032336
   140016cab:	sbb    esi,DWORD PTR [rax]
   140016cad:	retf   
   140016cae:	(bad)  
   140016caf:	int3   
   140016cb0:	loop   0x140016c7d
   140016cb2:	vpmulhw xmm2,xmm8,xmm7
   140016cb6:	es xchg ah,ah
   140016cb9:	mov    DWORD PTR [rbx],ecx
   140016cbb:	push   rax
   140016cbc:	xor    al,0x20
   140016cbe:	xlat   BYTE PTR ds:[rbx]
   140016cbf:	ficom  DWORD PTR [rsi-0x25]
   140016cc2:	ss jg  0x140016ccf
   140016cc5:	stos   DWORD PTR es:[rdi],eax
   140016cc6:	out    dx,al
   140016cc7:	pop    rdi
   140016cc8:	adc    eax,0x3146c7da
   140016ccd:	xor    edx,esi
   140016ccf:	cmp    ah,BYTE PTR [rsi-0x66df1b1c]
   140016cd5:	(bad)  
   140016cd6:	(bad)  
   140016cd7:	xor    dl,al
   140016cd9:	and    eax,0xce4190c1
   140016cde:	out    0x6f,eax
   140016ce0:	adc    DWORD PTR [rax-0x1b8943ac],eax
   140016ce6:	(bad)  
   140016ce7:	xchg   ecx,eax
   140016ce8:	cs jne 0x140016d22
   140016ceb:	or     eax,esp
   140016ced:	fwait
   140016cee:	movabs ds:0x50061d22b2e51906,eax
   140016cf7:	xor    DWORD PTR [rdi+0x4e],0x51
   140016cfb:	iret   
   140016cfc:	lahf   
   140016cfd:	(bad)  
   140016cfe:	mov    eax,DWORD PTR [rcx-0x3741d814]
   140016d04:	(bad)  
   140016d05:	loopne 0x140016d7a
   140016d07:	sub    eax,DWORD PTR [rax]
   140016d09:	fcmovne st,st(6)
   140016d0b:	(bad)  
   140016d0c:	and    eax,0x65780048
   140016d11:	jle    0x140016d81
   140016d13:	std    
   140016d14:	call   0x1bd7f7cdc
   140016d19:	clc    
   140016d1a:	loopne 0x140016cdd
   140016d1c:	(bad)  
   140016d1d:	jnp    0x140016d25
   140016d1f:	jbe    0x140016cdd
   140016d21:	mov    es,WORD PTR [rdx+0x18]
   140016d24:	icebp  
   140016d25:	(bad)  
   140016d26:	or     ebp,edx
   140016d28:	lods   al,BYTE PTR ds:[rsi]
   140016d29:	lock mov edi,?
   140016d2c:	or     al,0x7b
   140016d2e:	mov    al,cl
   140016d30:	(bad)  
   140016d31:	xchg   bl,bh
   140016d33:	or     DWORD PTR [r14],r14d
   140016d36:	test   al,0x7a
   140016d38:	out    0x29,eax
   140016d3a:	jns    0x140016d52
   140016d3c:	movabs ds:0x685f79c4c9172659,al
   140016d45:	rcl    DWORD PTR [rdx],cl
   140016d47:	add    al,BYTE PTR [rdx+0x12]
   140016d4a:	repnz (bad) 
   140016d4c:	cdq    
   140016d4d:	push   rbp
   140016d4e:	movabs ds:0x6397a9cb61d46c5c,al
   140016d57:	rex.R xor al,0x6a
   140016d5a:	fnstenv [rbp+riz*4-0x6fe5cde7]
   140016d61:	leave  
   140016d62:	xchg   ebx,eax
   140016d63:	repnz mov ebp,0xa181ee14
   140016d69:	push   rax
   140016d6a:	jo     0x140016d0a
   140016d6c:	push   0xffffffffa021657e
   140016d71:	(bad)  
   140016d72:	(bad)  
   140016d73:	rcl    BYTE PTR [rbx-0x14e1df1],cl
   140016d79:	std    
   140016d7a:	call   0x1822eeb9d
   140016d7f:	fiadd  DWORD PTR [rdi+rbp*1]
   140016d82:	rex.WR (bad) 
   140016d84:	push   0x4d7608ea
   140016d89:	sbb    al,0x45
   140016d8b:	addr32 jp 0x140016daa
   140016d8e:	jno    0x140016df1
   140016d90:	(bad)  
   140016d91:	(bad)  
   140016d92:	jae    0x140016d9d
   140016d94:	pushf  
   140016d95:	mov    edx,0xdf54b0
   140016d9a:	movabs al,ds:0x84fdb960af9dc926
   140016da3:	or     cl,BYTE PTR [rbp+0x5d81fa64]
   140016da9:	clc    
   140016daa:	fstp   QWORD PTR [rsp+rax*1]
   140016dad:	push   0xffffffffef9c8db3
   140016db2:	rex.WRXB xchg r8,rax
   140016db4:	adc    eax,0xe58d0081
   140016db9:	xor    esi,DWORD PTR [rsp+rax*2-0x582ecd69]
   140016dc0:	in     eax,dx
   140016dc1:	scas   eax,DWORD PTR es:[rdi]
   140016dc2:	add    ecx,eax
   140016dc4:	rcr    DWORD PTR [rax+0x850ff43],0x3e
   140016dcb:	xchg   ecx,eax
   140016dcc:	xchg   eax,esi
   140016dce:	(bad)  
   140016dcf:	test   BYTE PTR [rax+0x54cc26fa],dh
   140016dd5:	(bad)  
   140016dd6:	dec    DWORD PTR [rbx]
   140016dd8:	(bad)  
   140016dd9:	rcr    DWORD PTR [rdi+rax*1-0x71],0xff
   140016dde:	(bad)  
   140016ddf:	rex.X movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016de1:	rex.WX and rax,rsp
   140016de4:	ror    ch,cl
   140016de6:	adc    BYTE PTR [rax-0x1b],cl
   140016de9:	xchg   esi,eax
   140016dea:	rcl    DWORD PTR [rax+0x45],cl
   140016ded:	sar    DWORD PTR [rax],0xa
   140016df0:	ja     0x140016d98
   140016df2:	or     dl,al
   140016df4:	sub    eax,0xa172616c
   140016df9:	ret    0x6e2
   140016dfc:	movabs ds:0xe62e5f1a56fa0a4d,al
   140016e05:	movabs al,ds:0x43970dc104571c59
   140016e0e:	stc    
   140016e0f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016e10:	and    DWORD PTR [rbp-0x32],eax
   140016e13:	enter  0x5596,0x1
   140016e17:	pop    rax
   140016e18:	xor    al,0x80
   140016e1a:	xchg   ebx,eax
   140016e1b:	sub    al,BYTE PTR [rdx]
   140016e1d:	lea    edx,[rdx-0x7]
   140016e20:	out    0x7a,eax
   140016e22:	cmp    al,0x99
   140016e24:	pop    rbx
   140016e25:	out    0xf9,al
   140016e27:	(bad)  
   140016e28:	push   rdx
   140016e29:	loopne 0x140016e5d
   140016e2b:	movabs eax,ds:0xfb84277e860b806e
   140016e34:	mov    esi,0xcafdd091
   140016e39:	(bad)  
   140016e3a:	mov    cl,0xef
   140016e3c:	sub    BYTE PTR [rsi],ch
   140016e3e:	push   rax
   140016e3f:	xor    al,0xe0
   140016e41:	stc    
   140016e42:	sub    DWORD PTR [rax],eax
   140016e44:	loopne 0x140016ec2
   140016e46:	push   0xffffffffc9f00180
   140016e4b:	(bad)  
   140016e4c:	(bad)  
   140016e4d:	(bad)  
   140016e4e:	fidiv  DWORD PTR [rbx+rdi*4-0x61]
   140016e52:	fstp   TBYTE PTR [rcx-0x45612099]
   140016e58:	sar    DWORD PTR [rcx-0x6b],cl
   140016e5b:	sub    esi,DWORD PTR [rdi]
   140016e5d:	mov    ebp,0x63a5f241
   140016e62:	mov    ecx,0x1284d650
   140016e67:	xchg   DWORD PTR [rdi-0x695e06a],edx
   140016e6d:	sub    eax,0x58c540b2
   140016e72:	cdq    
   140016e73:	ret    0x8130
   140016e76:	and    al,0x48
   140016e78:	call   0xf4ad653f
   140016e7d:	fistp  WORD PTR [rsi+0x50]
   140016e80:	jmp    0xf5d0c3e9
   140016e85:	repnz add ch,BYTE PTR [rdi+riz*4+0x10379a0d]
   140016e8d:	xchg   ecx,eax
   140016e8e:	test   DWORD PTR [rbx-0x6c],ebx
   140016e91:	mov    bh,0x76
   140016e93:	add    DWORD PTR [rdx+0x23],esp
   140016e96:	or     al,0x49
   140016e98:	movabs eax,ds:0xb3b9ca6e6c2044bf
   140016ea1:	out    0x36,al
   140016ea3:	and    dh,BYTE PTR [rcx]
   140016ea5:	add    bl,BYTE PTR [rax+0x7e]
   140016ea8:	out    0x61,al
   140016eaa:	cmp    al,0x19
   140016eac:	cli    
   140016ead:	mov    cl,0x76
   140016eaf:	vpsubsb ymm14,ymm10,YMMWORD PTR [rax]
   140016eb3:	movabs ds:0x73d863d31d8d34bb,eax
   140016ebc:	cli    
   140016ebd:	pop    rcx
   140016ebe:	hlt    
   140016ebf:	rex.WRX lahf 
   140016ec1:	rex.X pushf 
   140016ec3:	lahf   
   140016ec4:	rex.X pop rsp
   140016ec6:	(bad)  
   140016ec7:	mov    edi,0xe58e525f
   140016ecc:	jle    0x140016ef8
   140016ece:	adc    BYTE PTR [rdx-0x5843daf0],ch
   140016ed4:	lods   al,BYTE PTR ds:[rsi]
   140016ed5:	jg     0x140016e64
   140016ed7:	(bad)  
   140016ed8:	ror    edx,1
   140016eda:	jle    0x140016edf
   140016edc:	push   rsp
   140016edd:	adc    DWORD PTR [rax+rbp*2+0x6d],esp
   140016ee1:	and    DWORD PTR [rdi-0x5a017f00],edi
   140016ee7:	mov    edi,0x2103afef
   140016eec:	jb     0x140016eb7
   140016eee:	(bad)  
   140016eef:	(bad)  
   140016ef0:	ds mov esp,0xd108520a
   140016ef6:	adc    ecx,DWORD PTR [rax+0x430a85a2]
   140016efc:	data16 cld 
   140016efe:	movsxd ecx,eax
   140016f00:	(bad)  
   140016f01:	lahf   
   140016f02:	rex.X pop rcx
   140016f04:	call   0x163f9c84c
   140016f09:	and    DWORD PTR [rax-0x73aafd90],edx
   140016f0f:	sahf   
   140016f10:	rex.R push rsp
   140016f12:	test   eax,0x27df022
   140016f17:	and    DWORD PTR [rsi+0x78],eax
   140016f1a:	jg     0x140016ede
   140016f1c:	(bad)  
   140016f1d:	(bad)  
   140016f1e:	mov    ebp,0x84168022
   140016f23:	(bad)  
   140016f24:	movabs eax,ds:0xe52c9d50f16d1a85
   140016f2d:	jg     0x140016ec8
   140016f2f:	push   rax
   140016f30:	cs ds retf 
   140016f33:	(bad)  
   140016f34:	fbld   TBYTE PTR [rsi+0xb]
   140016f37:	gs rex.W scas al,BYTE PTR es:[rdi]
   140016f3a:	rex.X
   140016f3b:	rex.WRXB
   140016f3c:	pushw  0x21
   140016f3f:	add    eax,0x9bdec13f
   140016f44:	sti    
   140016f45:	ret    
   140016f46:	and    al,0xab
   140016f48:	mov    gs,ecx
   140016f4a:	fdiv   QWORD PTR [rbx+0x57]
   140016f4d:	(bad)  
   140016f4e:	pop    rdi
   140016f4f:	sub    ebp,DWORD PTR [edi]
   140016f52:	shr    DWORD PTR [rbp+0x38c05a88],cl
   140016f58:	add    dh,dl
   140016f5a:	jrcxz  0x140016f71
   140016f5c:	jns    0x140016f6c
   140016f5e:	in     eax,0xc5
   140016f60:	cdq    
   140016f61:	rex.WR clc 
   140016f63:	test   ebx,ebx
   140016f65:	jg     0x140016f99
   140016f67:	xchg   ebx,eax
   140016f68:	jnp    0x140016f23
   140016f6a:	imul   ebp,esi,0x429f43a1
   140016f70:	outs   dx,BYTE PTR ds:[rsi]
   140016f71:	adc    dl,BYTE PTR [rdx+0x60051e5e]
   140016f77:	fstp   TBYTE PTR [rcx+0x3b9e4209]
   140016f7d:	xor    eax,0x3be474be
   140016f82:	(bad)  
   140016f84:	outs   dx,BYTE PTR ds:[rsi]
   140016f85:	fist   WORD PTR [rbp+0x57]
   140016f88:	iret   
   140016f89:	push   rsi
   140016f8a:	cmp    eax,0x310baf7d
   140016f8f:	hlt    
   140016f90:	rex.WXB ror QWORD PTR [r8-0xfebfd1b],1
   140016f97:	lea    esi,[rbx+0x54]
   140016f9a:	rcr    BYTE PTR [rdx+0x5735ba36],0x46
   140016fa1:	and    eax,0x96ab0ba7
   140016fa6:	rex.RXB (bad) 
   140016fa8:	and    di,ax
   140016fab:	or     BYTE PTR [rcx+0xb],bl
   140016fae:	add    DWORD PTR [rax-0x12bec93b],edx
   140016fb4:	rex.B xlat BYTE PTR ds:[rbx]
   140016fb6:	add    DWORD PTR [rsi+0x4ed5b929],ebp
   140016fbc:	add    BYTE PTR [rdx],ah
   140016fbe:	(bad)  
   140016fbf:	(bad)  
   140016fc0:	stc    
   140016fc1:	add    DWORD PTR [rdi],esp
   140016fc3:	adc    eax,0xf6538a05
   140016fc8:	(bad)  
   140016fc9:	push   rsp
   140016fca:	jae    0x140017013
   140016fcc:	mov    edi,0x8052380b
   140016fd1:	jle    0x140016f72
   140016fd3:	sbb    DWORD PTR [rbx+0x23f5e840],0x95c9e18f
   140016fdd:	or     eax,0x3b7d5c2c
   140016fe2:	(bad)  
   140016fe3:	mov    edx,0xd3cb9b0f
   140016fe8:	call   0xfd8fa988
   140016fed:	adc    ecx,edi
   140016fef:	movabs ds:0xeae224dce238e27f,al
   140016ff8:	add    dl,al
   140016ffa:	lods   al,BYTE PTR ds:[rsi]
   140016ffb:	xor    DWORD PTR [rcx+rdi*4+0x75fe31a7],0xffffff88
   140017003:	test   al,0xc1
   140017005:	test   al,0x74
   140017007:	rex.WB mov r8b,0x8a
   14001700a:	adc    esp,DWORD PTR [rdx-0x20]
   14001700d:	push   rsi
   14001700e:	xchg   ebp,eax
   14001700f:	pop    rdi
   140017010:	add    eax,0x2ef3fb8
   140017015:	add    al,0x12
   140017017:	rex.WXB sbb al,BYTE PTR [r10]
   14001701a:	movabs ds:0xc877f7cd4404fdf9,al
   140017023:	scas   eax,DWORD PTR es:[rdi]
   140017024:	add    dl,BYTE PTR [rdx]
   140017026:	rex.XB add BYTE PTR [r13-0x6a],al
   14001702a:	jge    0x140017021
   14001702c:	cmp    BYTE PTR [rbp+0xa441216],dl
   140017032:	movabs ds:0xfe0dfdc5bef88a00,al
   14001703b:	(bad)  
   14001703c:	cwde   
   14001703d:	mov    DWORD PTR [rsi],edi
   14001703f:	rex.WB adc cl,r10b
   140017042:	or     ah,BYTE PTR [rcx]
   140017044:	add    al,0x53
   140017046:	or     al,0xd1
   140017048:	xchg   ebp,eax
   140017049:	mov    WORD PTR [rax],fs
   14001704b:	add    al,0x6d
   14001704d:	or     edx,DWORD PTR [rsi]
   14001704f:	sub    eax,0x35f640c7
   140017054:	in     al,0xc1
   140017056:	rex.RX
   140017057:	data16 rex.R
   140017059:	repnz adc BYTE PTR [rbx-0x6f79d607],bl
   140017060:	vpavgb ymm11,ymm11,YMMWORD PTR [rdi+rax*1+0xbb13590]
   140017069:	mov    ch,0xa1
   14001706b:	mov    DWORD PTR [rdx+0x485d9603],eax
   140017071:	(bad)  
   140017072:	pushf  
   140017073:	mov    edi,0x2d9dcacf
   140017078:	(bad)  
   140017079:	and    ch,ah
   14001707b:	iret   
   14001707c:	fs (bad) 
   14001707e:	jmp    0xdac9982b
   140017083:	lea    ecx,[rsi-0x133497ea]
   140017089:	(bad)  
   14001708a:	ins    DWORD PTR es:[rdi],dx
   14001708b:	xchg   QWORD PTR [r10+0x36b9653],rsp
   140017092:	push   rdi
   140017093:	xor    ah,ch
   140017095:	push   QWORD PTR [rdi-0x4a9261ad]
   14001709b:	sub    eax,DWORD PTR [rdx+0x67258191]
   1400170a1:	and    ch,bl
   1400170a3:	mov    bh,0x2
   1400170a5:	shr    dh,cl
   1400170a7:	rex.WRX rol dil,0x1e
   1400170ab:	ret    0x12d0
   1400170ae:	or     QWORD PTR [rax+rcx*1-0x3a420fec],r15
   1400170b6:	adc    ecx,edi
   1400170b8:	rex.XB adc BYTE PTR [r10],al
   1400170bb:	pop    rax
   1400170bc:	stc    
   1400170bd:	jmp    0x1400170fe
   1400170bf:	std    
   1400170c0:	enter  0x9e1f,0x78
   1400170c4:	cld    
   1400170c5:	xchg   ecx,eax
   1400170c6:	lahf   
   1400170c7:	in     al,dx
   1400170c8:	outs   dx,BYTE PTR ds:[rsi]
   1400170c9:	ins    BYTE PTR es:[rdi],dx
   1400170ca:	jl     0x140017077
   1400170cc:	shl    DWORD PTR [rdi+0x59837e44],1
   1400170d2:	rcr    DWORD PTR [rdx+0x3285cfbf],cl
   1400170d8:	adc    bl,cl
   1400170da:	lahf   
   1400170db:	jb     0x1400170f3
   1400170dd:	lahf   
   1400170de:	jle    0x1400170a6
   1400170e0:	mov    edx,0xe4fd265f
   1400170e5:	jnp    0x140017140
   1400170e7:	(bad)  
   1400170e8:	test   esp,edi
   1400170ea:	mov    bh,0xd1
   1400170ec:	mov    BYTE PTR [rax-0x7d],al
   1400170ef:	cli    
   1400170f0:	and    al,0xf
   1400170f2:	cmp    eax,DWORD PTR [rax-0x4bb9594b]
   1400170f8:	outs   dx,DWORD PTR ds:[rsi]
   1400170f9:	sub    r14b,BYTE PTR [rdi+rbp*2+0x28711e2e]
   140017101:	pop    rdi
   140017102:	pop    rsp
   140017103:	adc    edi,ecx
   140017105:	scas   eax,DWORD PTR es:[rdi]
   140017106:	rex.WR (bad) 
   140017108:	repz mul DWORD PTR [rbp-0x72aaf662]
   14001710f:	int    0x63
   140017111:	(bad)  
   140017112:	jrcxz  0x1400170ad
   140017114:	test   DWORD PTR [rip+0x3b735ecc],esp        # 0x17b74cfe6
   14001711a:	cmp    bl,BYTE PTR [rbp+0x332b3401]
   140017120:	call   0xdec890c2
   140017125:	jmp    0xcf51657b
   14001712a:	movabs ds:0xd77707995846985a,eax
   140017133:	movabs al,ds:0x28215ad5b27d65ed
   14001713c:	sbb    DWORD PTR [rsi-0x5c],edi
   14001713f:	sbb    DWORD PTR [rsi-0x64],edi
   140017142:	loope  0x1400171c2
   140017144:	sbb    edx,esi
   140017146:	repz jo 0x14001715d
   140017149:	cmp    al,0x95
   14001714b:	(bad)  
   14001714c:	pop    rbx
   14001714d:	popf   
   14001714e:	xor    DWORD PTR [rdx+0x6e],ebx
   140017151:	adc    al,0xe9
   140017153:	xchg   edi,eax
   140017154:	xchg   esi,eax
   140017155:	rex.X jmp 0x1400170e8
   140017158:	pop    rsi
   140017159:	punpcklbw mm5,DWORD PTR [rax-0x71a1f3bf]
   140017160:	fucom  st(7)
   140017162:	jb     0x1400171c4
   140017164:	rex.XB sbb eax,DWORD PTR [r8+0x26]
   140017168:	mov    ch,0xe4
   14001716a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001716b:	(bad)  
   14001716c:	pop    rdx
   14001716d:	hlt    
   14001716e:	shl    DWORD PTR [rdx],0x3e
   140017171:	and    eax,ebp
   140017173:	js     0x1400171d0
   140017175:	sahf   
   140017176:	rex.RB push r14
   140017178:	(bad)  
   140017179:	in     eax,dx
   14001717a:	(bad)  
   14001717b:	or     DWORD PTR [rbp-0x66fdd33a],esi
   140017181:	leave  
   140017182:	mov    dl,0x62
   140017184:	jae    0x140017187
   140017186:	sub    eax,0xf7016f14
   14001718b:	loope  0x140017130
   14001718d:	xchg   esi,eax
   14001718e:	rex.WB
   14001718f:	fs loopne 0x14001719e
   140017192:	(bad)  
   140017193:	adc    eax,0x7a0a0ca6
   140017198:	(bad)  
   140017199:	(bad)  [rip+0xffffffffbef6a022]        # 0xfef811c1
   14001719f:	sub    eax,0xbe582b46
   1400171a4:	(bad)  
   1400171a5:	in     eax,0x67
   1400171a7:	out    dx,eax
   1400171a8:	test   esp,0x5f65b4ad
   1400171ae:	or     al,0x95
   1400171b0:	bnd jns 0x140017197
   1400171b3:	jns    0x14001718e
   1400171b5:	jae    0x14001721f
   1400171b7:	fbld   TBYTE PTR [rbp-0x1cacae49]
   1400171bd:	call   0x15780b8da
   1400171c2:	mov    BYTE PTR [rax+0x1],dl
   1400171c5:	xchg   edi,eax
   1400171c6:	fadd   st(5),st
   1400171c8:	push   rbx
   1400171c9:	gs adc eax,0x7809ca8b
   1400171d0:	loope  0x1400171da
   1400171d2:	shl    BYTE PTR [rsi-0x56fb44cd],0xfc
   1400171d9:	fwait
   1400171da:	cmp    al,0xfa
   1400171dc:	fsubr  st(4),st
   1400171de:	cld    
   1400171df:	(bad)  
   1400171e0:	test   eax,0x3c1c8f4f
   1400171e5:	sbb    al,0xea
   1400171e7:	sahf   
   1400171e8:	sahf   
   1400171e9:	fwait
   1400171ea:	add    al,0x7d
   1400171ec:	out    0xc7,eax
   1400171ee:	jmp    0x183f974de
   1400171f3:	(bad)  
   1400171f4:	adc    edi,DWORD PTR [rsi-0x2a]
   1400171f7:	pop    rsp
   1400171f8:	xor    al,0x6b
   1400171fa:	stc    
   1400171fb:	int3   
   1400171fc:	and    eax,DWORD PTR [rdi+rdx*2]
   1400171ff:	jmp    0x140017271
   140017201:	fistp  WORD PTR [rsi]
   140017203:	stos   BYTE PTR es:[rdi],al
   140017204:	in     eax,0x2b
   140017206:	outs   dx,WORD PTR ds:[rsi]
   140017208:	mov    cl,0x4c
   14001720a:	(bad)
   14001720d:	jl     0x14001728e
   14001720f:	mov    al,0x56
   140017211:	adc    ecx,DWORD PTR [rdx]
   140017213:	cld    
   140017214:	(bad)  
   140017215:	mov    dh,0x3d
   140017217:	(bad)  
   140017218:	xor    eax,DWORD PTR [rcx+0x3f]
   14001721b:	ja     0x14001722c
   14001721d:	(bad)
   140017220:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017221:	sbb    al,0x22
   140017223:	and    al,0x81
   140017225:	jnp    0x14001726c
   140017227:	lock push rdx
   140017229:	mov    edx,DWORD PTR ds:[rcx]
   14001722c:	int    0xf8
   14001722e:	jae    0x1400172a8
   140017230:	jbe    0x1400172ac
   140017232:	or     dl,BYTE PTR [rbx]
   140017234:	push   rdi
   140017235:	mov    edi,0x2303fd11
   14001723a:	call   0x10e239fed
   14001723f:	popf   
   140017240:	ret    0xa9ee
   140017243:	movabs ds:0xc204ecce86389c18,eax
   14001724c:	movabs ds:0x3c4b13fab641ea2c,al
   140017255:	mov    edi,0x515010e
   14001725a:	(bad)  
   14001725b:	(bad)  
   14001725c:	sbb    ch,BYTE PTR [rsp+rax*4+0x28ff429f]
   140017263:	in     eax,dx
   140017264:	mov    edi,0x416620d4
   140017269:	test   eax,edi
   14001726b:	std    
   14001726c:	sbb    al,0x2d
   14001726e:	fld    TBYTE PTR [rdi-0x1bd624f8]
   140017274:	(bad)  
   140017276:	mov    esi,0x988722bd
   14001727b:	(bad)  
   14001727c:	ja     0x140017240
   14001727e:	nop
   14001727f:	(bad)  
   140017280:	xor    dl,BYTE PTR [rbx-0x6b6efe48]
   140017286:	adc    ah,dl
   140017288:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017289:	sahf   
   14001728a:	test   al,0x3c
   14001728c:	cmp    esp,0xffffff95
   14001728f:	xchg   esi,eax
   140017290:	pop    rsi
   140017291:	jge    0x140017292
   140017293:	pop    rax
   140017294:	fs (bad) 
   140017296:	adc    ah,BYTE PTR [rcx+0x8511252]
   14001729c:	ret    0x8990
   14001729f:	rex.X cmp esi,DWORD PTR [rdi-0x4c]
   1400172a3:	imul   esi,DWORD PTR [rdx+0x79940ca],0x65
   1400172aa:	jb     0x1400172b9
   1400172ac:	or     esp,DWORD PTR [rcx+rcx*8-0x37]
   1400172b0:	ss test edx,edx
   1400172b3:	sub    ebp,DWORD PTR [rip+0xffffffffce14dbbf]        # 0x10e164e78
   1400172b9:	or     BYTE PTR [rdi-0x1b],al
   1400172bc:	enter  0x8fa6,0xcf
   1400172c0:	adc    DWORD PTR [rdx-0x37],esi
   1400172c3:	sub    cl,BYTE PTR [rsi]
   1400172c5:	(bad)  
   1400172c6:	test   BYTE PTR [rdi],bl
   1400172c8:	sub    al,0x5f
   1400172ca:	and    eax,0x631f4e2b
   1400172cf:	xchg   ah,al
   1400172d1:	cwde   
   1400172d2:	lods   eax,DWORD PTR ds:[rsi]
   1400172d3:	(bad)  
   1400172d4:	xchg   ebp,eax
   1400172d5:	loope  0x1400172ff
   1400172d7:	rol    BYTE PTR [rdx-0x77],0x26
   1400172db:	add    eax,0xbefe32d
   1400172e0:	rex.B adc al,0x2
   1400172e3:	scas   eax,DWORD PTR es:[rdi]
   1400172e4:	cmp    eax,0x52fc881d
   1400172e9:	loopne 0x140017335
   1400172eb:	ret    0xb0d0
   1400172ee:	sub    DWORD PTR [rbx+rax*2+0x26],ecx
   1400172f2:	and    al,0x19
   1400172f4:	mov    ah,0x15
   1400172f6:	jae    0x1400172df
   1400172f8:	push   rbx
   1400172f9:	mov    ah,0xff
   1400172fb:	jrcxz  0x140017368
   1400172fd:	mov    BYTE PTR [rbp-0x44],bl
   140017300:	rex.W xor sil,al
   140017303:	jnp    0x14001735c
   140017305:	add    BYTE PTR [rsi-0x27f6a4b],dh
   14001730b:	out    dx,eax
   14001730c:	movabs al,ds:0xfc3d8fd7e617568
   140017315:	jle    0x14001737a
   140017317:	clc    
   140017318:	rol    cl,0x27
   14001731b:	jp     0x140017393
   14001731d:	in     al,dx
   14001731e:	mov    eax,0x30c2891
   140017323:	(bad)  
   140017324:	stc    
   140017325:	or     ecx,DWORD PTR [rbx-0x60]
   140017328:	push   rsi
   140017329:	pop    rbp
   14001732a:	test   bh,bl
   14001732c:	mov    esi,0x8cc9a7cb
   140017331:	jg     0x140017331
   140017333:	mov    WORD PTR [rax+0x31],cs
   140017336:	nop
   140017337:	pop    rdx
   140017338:	or     eax,0xc5cf0b52
   14001733e:	movabs al,ds:0xc5673192cd485e91
   140017347:	and    r13b,al
   14001734a:	push   rsi
   14001734b:	(bad)
   14001734e:	sub    DWORD PTR [rcx+0x4429f60c],ecx
   140017354:	jae    0x14001733e
   140017356:	xchg   esi,eax
   140017357:	pop    rsp
   140017358:	jns    0x140017372
   14001735a:	sub    al,0x2c
   14001735c:	imul   eax,DWORD PTR [rdi],0xffffffa8
   14001735f:	(bad)  
   140017360:	and    BYTE PTR [rbp-0x61],cl
   140017363:	shl    BYTE PTR [rbx+0x7e314627],0xf9
   14001736a:	lods   eax,DWORD PTR ds:[rsi]
   14001736b:	call   0x11d112d4f
   140017370:	cmc    
   140017371:	and    eax,0xc31c6e60
   140017376:	shl    DWORD PTR [rbx+0x147d3e18],cl
   14001737c:	popf   
   14001737d:	(bad)  [rcx]
   14001737f:	(bad)  
   140017380:	vaddsubpd xmm11,xmm12,xmm2
   140017384:	add    al,al
   140017386:	fwait
   140017387:	scas   al,BYTE PTR es:[rdi]
   140017388:	pop    rsp
   140017389:	add    bl,BYTE PTR [rbx+0x39a80fe5]
   14001738f:	stc    
   140017390:	stos   BYTE PTR es:[rdi],al
   140017391:	mov    esi,0xefcb5235
   140017396:	(bad)  
   140017397:	and    edi,eax
   140017399:	jg     0x140017347
   14001739b:	jrcxz  0x14001734b
   14001739d:	test   esi,ebx
   14001739f:	or     al,0x22
   1400173a1:	jnp    0x140017411
   1400173a3:	(bad)  
   1400173a4:	mov    dl,0xe5
   1400173a6:	jbe    0x14001740d
   1400173a8:	adc    BYTE PTR [rcx+rbx*8-0x60a2008a],al
   1400173af:	and    ebp,eax
   1400173b1:	loopne 0x1400173cf
   1400173b3:	mov    ?,r9d
   1400173b6:	sbb    edx,DWORD PTR [rdi-0x60]
   1400173b9:	pushf  
   1400173ba:	xchg   bl,al
   1400173bc:	jmp    QWORD PTR [rax-0x2355b611]
   1400173c2:	xchg   esp,eax
   1400173c3:	in     eax,0xaf
   1400173c5:	xchg   esp,eax
   1400173c6:	cmc    
   1400173c7:	(bad)  
   1400173c8:	(bad)  
   1400173c9:	ja     0x1400173ab
   1400173cb:	cmp    al,0x1
   1400173cd:	gs out 0xdf,al
   1400173d0:	loopne 0x140017410
   1400173d2:	vmulps ymm3,ymm0,ymm1
   1400173d6:	jno    0x1400173a0
   1400173d8:	sar    DWORD PTR [rbp+0x2d],cl
   1400173db:	add    ah,BYTE PTR [rax+0x68]
   1400173de:	add    esp,esp
   1400173e0:	push   rcx
   1400173e1:	adc    dl,0xe2
   1400173e4:	xchg   esi,eax
   1400173e5:	push   0x4e1e4082
   1400173ea:	xor    al,0xa3
   1400173ec:	rex.X movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400173ee:	lock movabs ds:0x55f5e4a6199b3414,eax
   1400173f8:	pop    rcx
   1400173f9:	(bad)  
   1400173fa:	outs   dx,BYTE PTR ds:[rsi]
   1400173fb:	ret    0xdfaf
   1400173fe:	mov    ecx,0x7cf625
   140017403:	sbb    eax,0x9ad804ff
   140017408:	(bad)  
   140017409:	mov    rax,QWORD PTR [r14+0x46002472]
   140017410:	movsxd esp,DWORD PTR [rcx]
   140017412:	scas   eax,DWORD PTR es:[rdi]
   140017413:	lea    ebx,[rcx-0x369a59af]
   140017419:	adc    ch,ah
   14001741b:	ds cmp ebx,ecx
   14001741e:	test   DWORD PTR [rcx+0x18434293],esp
   140017424:	fimul  DWORD PTR [rcx]
   140017426:	fcomp  QWORD PTR [rsp+rdi*1]
   140017429:	sbb    BYTE PTR [rsi],dh
   14001742b:	out    dx,al
   14001742c:	sti    
   14001742d:	xor    dh,BYTE PTR [rsi-0x41]
   140017430:	call   0xef18f4d1
   140017435:	add    BYTE PTR [rax+0x3c2e15e7],al
   14001743b:	stc    
   14001743c:	in     al,0xe3
   14001743e:	rex.RXB (bad) 
   140017440:	int    0xcd
   140017442:	iret   
   140017443:	or     al,0xee
   140017445:	fnstenv [rdi-0x14158bc9]
   14001744b:	jne    0x1400173e1
   14001744d:	hlt    
   14001744e:	(bad)  
   14001744f:	xor    ebp,DWORD PTR [rax+0x13041a49]
   140017455:	gs push rax
   140017457:	(bad)  
   140017458:	movabs eax,ds:0xf9c0c10ce71fc178
   140017461:	loopne 0x14001741d
   140017463:	fwait
   140017464:	rex jg 0x140017489
   140017467:	(bad)  
   140017468:	ins    BYTE PTR es:[rdi],dx
   140017469:	sar    BYTE PTR [rdx],0xaf
   14001746c:	rex.W jrcxz 0x14001747b
   14001746f:	jae    0x14001747a
   140017471:	push   rdx
   140017472:	rcl    al,cl
   140017474:	lahf   
   140017475:	(bad)  
   140017476:	ror    DWORD PTR [rax+0x2a124899],1
   14001747c:	rex.X
   14001747d:	repnz or ch,BYTE PTR [rcx+0x5a40979c]
   140017484:	or     edx,DWORD PTR [rax+0x22366fa1]
   14001748a:	add    al,0x8a
   14001748c:	adc    eax,0x47147278
   140017491:	rex.WRX lahf 
   140017493:	(bad)  
   140017494:	leave  
   140017495:	rex.WXB outs dx,DWORD PTR ds:[rsi]
   140017497:	(bad)  
   140017498:	mov    fs,ecx
   14001749a:	add    ecx,DWORD PTR [rax-0x65]
   14001749d:	imul   ebp,DWORD PTR [rax-0x1a],0x4e
   1400174a1:	(bad)  
   1400174a2:	push   0x27bb0c7a
   1400174a7:	mov    cs,WORD PTR [rax]
   1400174a9:	jmp    0xf884a565
   1400174ae:	mov    dl,0x20
   1400174b0:	icebp  
   1400174b1:	jle    0x140017509
   1400174b3:	ror    BYTE PTR [rdi+0x54050e80],cl
   1400174b9:	and    DWORD PTR [rax-0x6cbf83b],ecx
   1400174bf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400174c0:	xchg   ecx,eax
   1400174c1:	add    eax,0x7f7e213e
   1400174c6:	and    BYTE PTR [rcx],ah
   1400174c8:	inc    ah
   1400174ca:	cli    
   1400174cb:	(bad)  
   1400174cc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400174cd:	lahf   
   1400174ce:	loope  0x140017542
   1400174d0:	movsxd esi,edx
   1400174d2:	fst    DWORD PTR [rsp+rax*4]
   1400174d5:	jo     0x1400174a0
   1400174d7:	xchg   ecx,eax
   1400174d8:	test   ch,bh
   1400174da:	(bad)  
   1400174db:	movabs ds:0x2c82b00c0b52d519,al
   1400174e4:	rex.WRXB (bad) 
   1400174e6:	and    cl,dl
   1400174e8:	jns    0x1400174e9
   1400174ea:	sub    bl,BYTE PTR [rax+0x39]
   1400174ed:	out    dx,eax
   1400174ee:	(bad)  
   1400174f0:	add    dh,BYTE PTR [rdx-0x21]
   1400174f3:	lahf   
   1400174f4:	(bad)  
   1400174f5:	in     al,0xf5
   1400174f7:	imul   ebx,DWORD PTR [rbp-0x681a575],0x5d
   1400174fe:	adc    eax,0x48832082
   140017503:	test   al,0x5c
   140017505:	sbb    eax,ebp
   140017507:	jno    0x14001756b
   140017509:	rex.RX adc BYTE PTR [rsi-0x7],r15b
   14001750d:	rex.B
   14001750e:	repz (bad) 
   140017510:	(bad)  
   140017511:	rex.RX and al,0xe
   140017514:	xchg   ebx,eax
   140017515:	or     eax,0x68429819
   14001751a:	push   rbp
   14001751b:	xor    al,0xe9
   14001751d:	jle    0x140017585
   14001751f:	cmp    BYTE PTR [rcx+0x28],dl
   140017522:	xchg   edx,eax
   140017523:	or     al,0x2c
   140017525:	xor    ecx,DWORD PTR gs:[rax]
   140017528:	fidiv  WORD PTR [rdx]
   14001752a:	cvtdq2ps xmm4,XMMWORD PTR [rsi-0x54]
   14001752e:	out    dx,eax
   14001752f:	stos   BYTE PTR es:[rdi],al
   140017530:	push   rsi
   140017531:	cmp    ebx,DWORD PTR [rcx-0x48]
   140017534:	rex.WRX test QWORD PTR [rdx],r14
   140017537:	add    esi,edx
   140017539:	xor    ecx,edi
   14001753b:	fcom   QWORD PTR [rcx+0x2]
   14001753e:	mov    esp,0xcd2ec02e
   140017543:	jb     0x140017599
   140017545:	mov    edi,?
   140017547:	iret   
   140017548:	enter  0xe097,0xfe
   14001754c:	xchg   BYTE PTR [rdx+0x6b8a8184],dl
   140017552:	sub    esi,esp
   140017554:	mov    ebp,0x54df0629
   140017559:	pop    rsi
   14001755a:	sbb    BYTE PTR [rbp+rcx*1-0x5e],bl
   14001755e:	pop    rcx
   14001755f:	clc    
   140017560:	sbb    BYTE PTR [rsi],ch
   140017562:	stc    
   140017563:	rex.WX sub QWORD PTR [rbx+0x7f],rsp
   140017567:	jnp    0x140017573
   140017569:	shl    BYTE PTR [rsi+0x7e841333],0x81
   140017570:	repz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017572:	(bad)  
   140017573:	xchg   edi,eax
   140017574:	(bad)  
   140017575:	ds hlt 
   140017577:	shl    BYTE PTR [rdi-0x9],0x5d
   14001757b:	jns    0x140017572
   14001757d:	push   rsp
   14001757e:	rex.WRXB pop r15
   140017580:	dec    DWORD PTR [rbp+0x20]
   140017583:	hlt    
   140017584:	(bad)  
   140017585:	int    0xac
   140017587:	xor    bl,BYTE PTR [rax+0x4e]
   14001758a:	data16 ficom WORD PTR [rbp+rdx*1-0x49]
   14001758f:	sbb    BYTE PTR [rdi-0x6b],bh
   140017592:	data16 jns 0x14001760b
   140017595:	(bad)
   140017598:	and    al,0x16
   14001759a:	fidivr WORD PTR [rbx-0x6b68e8ef]
   1400175a0:	cwde   
   1400175a1:	push   rcx
   1400175a2:	rex.XB loopne 0x140017619
   1400175a5:	pop    rsi
   1400175a6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400175a7:	mov    edx,DWORD PTR [rax]
   1400175a9:	push   rsp
   1400175aa:	jne    0x140017610
   1400175ac:	gs pop r10
   1400175af:	cmp    BYTE PTR [rcx+rbp*4+0x7e],ah
   1400175b3:	ds pop rsp
   1400175b5:	and    dl,BYTE PTR [rax+0x60]
   1400175b8:	out    0x8e,eax
   1400175ba:	lods   al,BYTE PTR ds:[rsi]
   1400175bb:	inc    BYTE PTR [rcx+0xd550840]
   1400175c1:	ds stc 
   1400175c3:	xor    al,0x9e
   1400175c5:	cmp    eax,0x97e30c71
   1400175ca:	fld    QWORD PTR [rdx+0x4803e181]
   1400175d0:	fisttp QWORD PTR [rip+0x604c2e6c]        # 0x1a04da442
   1400175d6:	jo     0x14001763e
   1400175d8:	or     al,0xbb
   1400175da:	es (bad) 
   1400175dc:	movabs al,ds:0xe5aa34c2e224ea6f
   1400175e5:	add    eax,0xd7a2b370
   1400175ea:	sub    dl,ch
   1400175ec:	scas   al,BYTE PTR es:[rdi]
   1400175ed:	xchg   BYTE PTR [rax+0x3a31157e],dl
   1400175f3:	sub    al,0x42
   1400175f5:	pop    rcx
   1400175f6:	push   rcx
   1400175f7:	and    ecx,DWORD PTR [rcx]
   1400175f9:	rex test ebp,esp
   1400175fc:	outs   dx,DWORD PTR ds:[rsi]
   1400175fd:	sub    eax,0x159665ef
   140017602:	sbb    DWORD PTR [rsi],edx
   140017604:	(bad)  
   140017605:	rex sti 
   140017607:	stc    
   140017608:	jmp    0x124fd3f04
   14001760d:	xor    eax,0xc95880fa
   140017612:	cli    
   140017613:	ja     0x1400175b6
   140017615:	and    dh,bh
   140017617:	movabs ds:0x84662220314ebb2,al
   140017620:	sub    al,BYTE PTR [rax+0x31]
   140017623:	adc    BYTE PTR [rdx-0x3bf80498],ch
   140017629:	sub    ch,dh
   14001762b:	add    al,0x16
   14001762d:	add    cl,BYTE PTR [rsi+rax*2-0x54a36e02]
   140017634:	jl     0x14001764c
   140017636:	rex push rcx
   140017638:	sub    al,0x76
   14001763a:	in     eax,0xd6
   14001763c:	lahf   
   14001763d:	push   rsp
   14001763e:	imul   edx,DWORD PTR [rax+rcx*4],0x9605a344
   140017645:	(bad)  
   140017646:	in     al,0x55
   140017648:	mov    eax,DWORD PTR [rbp+0x8]
   14001764b:	shr    BYTE PTR [rdi],1
   14001764d:	(bad)  
   14001764e:	jb     0x14001766e
   140017650:	mul    DWORD PTR [rbx-0x4]
   140017653:	jae    0x1400175fd
   140017655:	(bad)  
   140017656:	enter  0xd2c,0xb5
   14001765a:	and    al,0x1f
   14001765c:	jns    0x14001768a
   14001765e:	cmc    
   14001765f:	(bad)  
   140017660:	int3   
   140017661:	sbb    ebp,esi
   140017663:	xchg   ebp,eax
   140017664:	fcom   st(5)
   140017666:	jg     0x1400176cf
   140017668:	enter  0x540f,0x44
   14001766c:	xchg   DWORD PTR [rax],ebx
   14001766e:	(bad)
   140017672:	ss bswap eax
   140017675:	and    eax,DWORD PTR [rbx]
   140017677:	sub    BYTE PTR [rbp-0x3aa579e1],al
   14001767d:	test   BYTE PTR [rax-0x47],bh
   140017680:	xor    bl,bh
   140017682:	(bad)  
   140017683:	xchg   edx,eax
   140017684:	in     al,dx
   140017685:	sar    DWORD PTR [rdx*8-0x24248d84],0xa0
   14001768d:	repz sbb al,0xea
   140017690:	shl    BYTE PTR [rdx+0x1006572a],cl
   140017696:	cmp    DWORD PTR [rip+0x7bbea29f],ecx        # 0x1bbc0193b
   14001769c:	(bad)  
   14001769d:	movabs ds:0x5585c04e545ff,al
   1400176a6:	pushf  
   1400176a7:	xlat   BYTE PTR ds:[rbx]
   1400176a8:	and    eax,0x3f8e9000
   1400176ad:	neg    ch
   1400176af:	(bad)  
   1400176b0:	jp     0x1400176b8
   1400176b2:	jbe    0x140017730
   1400176b4:	jge    0x140017716
   1400176b6:	out    0xf0,eax
   1400176b8:	mov    ch,0x44
   1400176ba:	loope  0x14001764c
   1400176bc:	pop    rcx
   1400176bd:	jno    0x140017722
   1400176bf:	(bad)  
   1400176c0:	in     eax,0xc6
   1400176c2:	fcmovnb st,st(5)
   1400176c4:	cmp    al,0x79
   1400176c6:	xchg   ecx,eax
   1400176c7:	rex.WRB fldenv [r15+0x511b9e41]
   1400176ce:	and    DWORD PTR [rax],ebx
   1400176d0:	xchg   ebx,eax
   1400176d1:	and    eax,0x1aefc8bd
   1400176d6:	or     eax,0x6fc555ef
   1400176db:	sbb    edx,DWORD PTR [rsi-0x15]
   1400176de:	scas   eax,DWORD PTR es:[rdi]
   1400176df:	mov    esi,0x9fcb0bf
   1400176e4:	or     ecx,eax
   1400176e6:	add    eax,0x77bfcd9d
   1400176eb:	and    eax,0x83023990
   1400176f0:	(bad)
   1400176f4:	ror    BYTE PTR [rcx-0x2b330f59],cl
   1400176fa:	adc    al,0x4e
   1400176fc:	pop    rsi
   1400176fd:	jno    0x14001771a
   1400176ff:	(bad)  
   140017700:	rex.RXB test BYTE PTR [r9+0x16d62e9b],0x26
   140017708:	shl    DWORD PTR [rdi],1
   14001770a:	jnp    0x14001770e
   14001770c:	jnp    0x140017734
   14001770e:	(bad)  
   14001770f:	movabs al,ds:0xaee8fcb52a04f27f
   140017718:	rcl    BYTE PTR [rdx+0x6149087d],0x7f
   14001771f:	rex.R
   140017720:	rex.WRB mov WORD PTR [r10+0x53],ds
   140017724:	xchg   ecx,eax
   140017725:	and    eax,0xdc3dbfd6
   14001772a:	out    0xd0,eax
   14001772c:	pop    rdi
   14001772d:	add    eax,0xcc7b92d1
   140017732:	repnz fwait
   140017734:	pop    rbp
   140017735:	repz hlt 
   140017737:	pop    rsi
   140017738:	push   rdx
   140017739:	call   FWORD PTR [rdi-0x55c029f6]
   14001773f:	lock xor DWORD PTR [rdx],0xffffff8a
   140017743:	push   rax
   140017744:	movabs eax,ds:0xb00a2a32845f96ce
   14001774d:	adc    BYTE PTR [rdi],bl
   14001774f:	cmp    DWORD PTR [rbx-0xf419391],edx
   140017755:	add    edx,DWORD PTR [rcx]
   140017757:	xchg   edx,eax
   140017758:	clc    
   140017759:	and    ebp,DWORD PTR [rcx-0x43]
   14001775c:	(bad)  
   14001775d:	add    al,0x2a
   14001775f:	mov    ch,BYTE PTR [rip+0xfffffffff62d1124]        # 0x1362e8889
   140017765:	rex.WRXB
   140017766:	lods   al,BYTE PTR ds:[rsi]
   140017768:	or     dl,BYTE PTR [rdi-0x40]
   14001776b:	and    al,BYTE PTR [rax]
   14001776d:	(bad)  
   14001776e:	lock pop rbx
   140017770:	push   rsi
   140017771:	(bad)  
   140017772:	push   rsi
   140017773:	ins    BYTE PTR es:[rdi],dx
   140017774:	movabs ds:0xea0c048c9f2b8208,al
   14001777d:	rcl    BYTE PTR [rbp+0x3dd86943],0x5f
   140017784:	test   bl,dh
   140017786:	addr32 ds jg 0x140017756
   14001778a:	(bad)  
   14001778b:	fwait
   14001778c:	outs   dx,DWORD PTR ds:[rsi]
   14001778d:	or     eax,0xbb291f98
   140017792:	(bad)  
   140017793:	(bad)  
   140017794:	cmp    DWORD PTR [rax+0x65],esp
   140017797:	loope  0x1400177d5
   140017799:	retf   0x7e3e
   14001779c:	push   rbx
   14001779d:	jl     0x14001774d
   14001779f:	ror    dh,cl
   1400177a1:	sbb    cl,BYTE PTR [rcx]
   1400177a3:	jo     0x1400177e7
   1400177a5:	pop    rbx
   1400177a6:	jge    0x1400177f5
   1400177a8:	scas   eax,DWORD PTR es:[rdi]
   1400177a9:	cmp    al,0x49
   1400177ab:	vpunpcklqdq xmm15,xmm14,XMMWORD PTR [rsi]
   1400177af:	mov    cl,0xe4
   1400177b1:	(bad)  
   1400177b2:	xchg   esp,eax
   1400177b3:	imul   ecx,DWORD PTR [rdx+rbp*4+0x6e],0xc54b2bb2
   1400177bb:	mov    ecx,0x391b91b3
   1400177c0:	mov    ch,dh
   1400177c2:	out    dx,eax
   1400177c3:	jl     0x1400177c7
   1400177c5:	sti    
   1400177c6:	lahf   
   1400177c7:	(bad)  
   1400177c8:	mov    ecx,eax
   1400177ca:	or     DWORD PTR [rax+0x78000af0],edi
   1400177d0:	pop    rsi
   1400177d1:	add    al,0xe1
   1400177d3:	(bad)  
   1400177d4:	shl    edi,1
   1400177d6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400177d7:	out    0x4f,al
   1400177d9:	(bad)  
   1400177da:	jg     0x140017846
   1400177dc:	call   0x12ea29dc1
   1400177e1:	jmp    0x1af718da3
   1400177e6:	iret   
   1400177e7:	mov    ch,0x27
   1400177e9:	add    BYTE PTR [rsp+rsi*4+0x4270925],al
   1400177f0:	xor    al,0x9c
   1400177f2:	lahf   
   1400177f3:	rex.RB
   1400177f4:	rex.W and spl,spl
   1400177f7:	sub    DWORD PTR [rax-0x4b7dfb99],edx
   1400177fd:	ficomp WORD PTR [rdi]
   1400177ff:	xchg   esi,eax
   140017800:	repz (bad) 
   140017802:	cmp    ebx,ebx
   140017804:	(bad)  
   140017805:	and    DWORD PTR [rcx+0x73],eax
   140017808:	in     eax,dx
   140017809:	movabs ds:0xd07c6e04330d7206,eax
   140017812:	mov    WORD PTR [rax],ds
   140017814:	xor    al,0xed
   140017816:	stos   DWORD PTR es:[rdi],eax
   140017817:	or     ecx,DWORD PTR [rsi-0x5]
   14001781a:	mov    cl,0x62
   14001781c:	or     al,bl
   14001781e:	cmp    al,0xf2
   140017820:	or     BYTE PTR [rsi-0x3b3b6366],bl
   140017826:	xchg   ebp,eax
   140017827:	mov    bh,0x63
   140017829:	js     0x14001788f
   14001782b:	(bad)  
   14001782c:	push   rdx
   14001782d:	rex.WX pop rax
   14001782f:	pop    rbx
   140017830:	pushf  
   140017831:	rex.RX out dx,eax
   140017833:	int3   
   140017834:	sbb    dh,dh
   140017836:	rex.WR (bad) 
   140017838:	ret    
   140017839:	loopne 0x1400177ff
   14001783b:	sbb    dl,ah
   14001783d:	ret    0xaa14
   140017840:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017841:	cmp    DWORD PTR [rbp-0x37],ebx
   140017844:	ja     0x140017859
   140017846:	(bad)  
   140017847:	je     0x1400177ed
   140017849:	rex.XB test BYTE PTR [r10+0xb826a02],bl
   140017850:	jg     0x1400178ab
   140017852:	ficomp WORD PTR [rbx+0x2e]
   140017855:	out    0x25,eax
   140017857:	xor    dl,BYTE PTR [rdx-0x8]
   14001785a:	out    dx,al
   14001785b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001785c:	lock xchg ebx,eax
   14001785e:	rex.WRB out 0x42,al
   140017861:	clc    
   140017862:	and    ebp,ecx
   140017864:	rex.X pop rbp
   140017866:	clc    
   140017867:	mov    ecx,0x553011a8
   14001786c:	(bad)  
   14001786d:	xor    BYTE PTR [rsi-0x71],bl
   140017870:	jrcxz  0x1400177ff
   140017872:	sub    DWORD PTR ds:[rbx+0x9],esi
   140017876:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017877:	add    BYTE PTR [rdx-0x3e8b38d8],ch
   14001787d:	pshufw mm3,mm6,0x20
   140017881:	add    al,0x11
   140017883:	push   0x51
   140017885:	or     al,0x19
   140017887:	dec    BYTE PTR [rbx-0x7e]
   14001788a:	adc    DWORD PTR [rbx+0x4fd23032],ebp
   140017890:	sbb    al,BYTE PTR [rcx+0x6590e25a]
   140017896:	dec    DWORD PTR [rcx+0x22]
   140017899:	xchg   ebx,eax
   14001789a:	pop    rdx
   14001789b:	cmp    cl,BYTE PTR [rip+0xffffffffa3b09871]        # 0xe3b21112
   1400178a1:	clc    
   1400178a2:	mov    gs,ebp
   1400178a4:	mov    ch,0x8d
   1400178a6:	cwde   
   1400178a7:	xchg   BYTE PTR [rsi+0x360b349d],al
   1400178ad:	rex.WX cmp cl,BYTE PTR [rcx]
   1400178b0:	loopne 0x140017911
   1400178b2:	cmp    DWORD PTR [rdx+0x6bdaafb3],edx
   1400178b8:	(bad)  
   1400178b9:	and    bl,ch
   1400178bb:	add    DWORD PTR [rsi+riz*1-0x61],0xc8a1fb0a
   1400178c3:	xchg   ebx,eax
   1400178c4:	fisttp QWORD PTR [rip+0x17432ab0]        # 0x15744a37a
   1400178ca:	jl     0x1400178f2
   1400178cc:	push   rax
   1400178cd:	xchg   ebx,eax
   1400178ce:	pop    rbx
   1400178cf:	loope  0x140017864
   1400178d1:	sub    DWORD PTR [rcx],eax
   1400178d3:	jrcxz  0x1400178d9
   1400178d5:	(bad)  
   1400178d6:	call   0xd636c17c
   1400178db:	outs   dx,BYTE PTR ds:[rsi]
   1400178dc:	(bad)  
   1400178dd:	xor    dl,bl
   1400178df:	jl     0x14001791f
   1400178e1:	push   rbx
   1400178e2:	rex.RX xor r11b,BYTE PTR [rsi]
   1400178e5:	xor    ebx,ecx
   1400178e7:	pop    rcx
   1400178e8:	mov    edi,0x18103959
   1400178ed:	or     BYTE PTR [rip+0x1c1ee6a4],bl        # 0x15c205f97
   1400178f3:	mov    edx,0xe0376d0f
   1400178f8:	add    eax,0x469780a1
   1400178fd:	add    eax,ebx
   1400178ff:	jbe    0x14001793f
   140017901:	(bad)  
   140017902:	jo     0x140017975
   140017904:	(bad)  
   140017905:	movsxd ebp,esp
   140017907:	xchg   ecx,eax
   140017908:	xchg   DWORD PTR [rsi-0x5e3683cf],edi
   14001790e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001790f:	cmp    edi,ebp
   140017911:	cmp    ebp,DWORD PTR [rsi-0x60]
   140017914:	adc    BYTE PTR [rsi+0x508a99e5],al
   14001791a:	rex.RX sbb DWORD PTR [rsi-0x38],0xffffff82
   14001791f:	xlat   BYTE PTR ds:[rbx]
   140017920:	push   rbp
   140017921:	xor    eax,0x31200449
   140017926:	sub    ah,BYTE PTR [rsi+0x34]
   140017929:	rex.R in eax,dx
   14001792b:	add    DWORD PTR [rsi+0x2c0ad9d8],eax
   140017931:	mov    esi,0x64fdaabf
   140017936:	(bad)  
   140017937:	(bad)  
   140017938:	or     al,0xeb
   14001793a:	imul   edx,DWORD PTR [rdi-0x2],0x72f524a6
   140017941:	push   0xffffffffffffffa6
   140017943:	jge    0x1400178f3
   140017945:	(bad)  
   140017946:	pop    rsi
   140017947:	loope  0x140017933
   140017949:	cli    
   14001794a:	push   rbx
   14001794b:	pavgb  mm5,QWORD PTR [rcx+0x5d4c55a5]
   140017952:	jnp    0x14001795b
   140017954:	xchg   BYTE PTR [rsi-0x12],dh
   140017957:	rex.RX xchg ebx,eax
   140017959:	sbb    ch,BYTE PTR [rsi+rbp*1+0x6667a34c]
   140017960:	adc    al,0xbb
   140017962:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017963:	rex.RX xor DWORD PTR [rax],r15d
   140017966:	cmp    DWORD PTR [rsi+0x71126e6a],eax
   14001796c:	jns    0x14001798c
   14001796e:	mov    ah,0x2e
   140017970:	sub    edi,ecx
   140017972:	(bad)  
   140017973:	mov    ebp,0x24221af5
   140017978:	adc    eax,0x284f8159
   14001797d:	add    al,0x5f
   14001797f:	js     0x140017901
   140017981:	adc    bl,dh
   140017983:	mov    dl,0x4d
   140017985:	add    al,0x78
   140017987:	xchg   edx,eax
   140017988:	rex.WR push rsp
   14001798a:	push   0xffffffffc96f176f
   14001798f:	sub    al,BYTE PTR [rcx]
   140017991:	enter  0x3705,0xaa
   140017995:	rex.WX jae 0x140017987
   140017998:	jle    0x1400179d2
   14001799a:	mov    cl,0x16
   14001799c:	mov    ah,0x4b
   14001799e:	mov    BYTE PTR [rbp+0xe],ah
   1400179a1:	rex.X fnstcw WORD PTR [rdi-0x75]
   1400179a5:	jrcxz  0x140017942
   1400179a7:	or     esp,DWORD PTR [rcx+0x2]
   1400179aa:	sub    dh,ch
   1400179ac:	inc    BYTE PTR [rbp+0x2]
   1400179af:	rex.WRXB and BYTE PTR [r15+0x12],r9b
   1400179b3:	mov    ch,BYTE PTR [rdx+0x4b30b20c]
   1400179b9:	fnstenv [rdx]
   1400179bb:	test   DWORD PTR [rdi+rdi*1+0x337edd60],ebx
   1400179c2:	mov    ch,BYTE PTR [rax+0x27]
   1400179c5:	(bad)  
   1400179c6:	in     eax,0xb0
   1400179c8:	sbb    eax,eax
   1400179ca:	and    DWORD PTR [rip+0x4189c801],0x9acf5582        # 0x1818b41d5
   1400179d4:	add    eax,0x80c5510f
   1400179d9:	mov    dl,0x32
   1400179db:	push   0xffffffffa094c207
   1400179e0:	xor    eax,0xfe1f0114
   1400179e5:	ret    0x229a
   1400179e8:	push   rdi
   1400179e9:	mov    ds,edx
   1400179eb:	rex.RXB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400179ed:	test   DWORD PTR [rdi],eax
   1400179ef:	leave  
   1400179f0:	or     al,0x4a
   1400179f2:	add    eax,0x738a67f9
   1400179f7:	mov    edi,DWORD PTR [rcx]
   1400179f9:	movabs ds:0xca9ec0028173eb02,eax
   140017a02:	push   rdx
   140017a03:	fs sti 
   140017a05:	sbb    al,BYTE PTR [rsi+0x1b8bffcc]
   140017a0b:	and    bh,dh
   140017a0d:	adc    esp,ebx
   140017a0f:	test   ecx,esi
   140017a11:	add    BYTE PTR [rbx-0x6ad1d6d5],ch
   140017a17:	(bad)  
   140017a18:	out    dx,al
   140017a19:	push   rdi
   140017a1a:	jno    0x140017a56
   140017a1c:	mov    ah,0x9b
   140017a1e:	ss (bad) 
   140017a20:	jle    0x140017a61
   140017a22:	rex.RX
   140017a23:	data16 rex.WRB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017a26:	pop    rsi
   140017a27:	sub    BYTE PTR [rdx],cl
   140017a29:	js     0x140017a94
   140017a2b:	adc    eax,0x32bcf000
   140017a30:	or     bh,al
   140017a32:	lahf   
   140017a33:	jl     0x140017a31
   140017a35:	cmp    DWORD PTR [rsi-0x33],ecx
   140017a38:	out    0x6,eax
   140017a3a:	jbe    0x140017a2b
   140017a3c:	fst    QWORD PTR [rdi]
   140017a3e:	(bad)  
   140017a3f:	cli    
   140017a40:	cmp    dh,BYTE PTR [rax+0x16c8f325]
   140017a46:	sbb    BYTE PTR [rsi+0x5f96e163],dl
   140017a4c:	jb     0x140017a48
   140017a4e:	(bad)  [rcx]
   140017a50:	(bad)  
   140017a51:	fist   DWORD PTR [rdx]
   140017a53:	fs rex.WRX je 0x140017a33
   140017a57:	mov    al,BYTE PTR [rdi]
   140017a59:	pop    rdi
   140017a5a:	int    0x28
   140017a5c:	sub    BYTE PTR [rbx+0x4509911f],bl
   140017a62:	push   rsi
   140017a63:	jl     0x140017aab
   140017a65:	jo     0x140017a2c
   140017a67:	pop    rsp
   140017a68:	pop    rsp
   140017a69:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017a6a:	mov    ecx,0x85620005
   140017a6f:	fsubr  DWORD PTR [rax+riz*2-0xb]
   140017a73:	outs   dx,DWORD PTR ds:[rsi]
   140017a74:	mov    esi,0x337c781
   140017a79:	(bad)  
   140017a7a:	scas   al,BYTE PTR es:[rdi]
   140017a7b:	jns    0x140017aa0
   140017a7d:	xchg   BYTE PTR [rdi],al
   140017a7f:	ja     0x140017a82
   140017a81:	sub    DWORD PTR [rcx+0x79],esp
   140017a84:	imul   ecx,DWORD PTR [rsi],0xec71ecd5
   140017a8a:	(bad)  
   140017a8b:	(bad)  
   140017a8c:	ret    
   140017a8d:	shl    ah,1
   140017a8f:	test   al,0x32
   140017a91:	(bad)  
   140017a92:	mov    bl,0xa0
   140017a94:	mov    ch,0x25
   140017a96:	and    BYTE PTR [rbp-0x17b775d5],ch
   140017a9c:	adc    BYTE PTR [rbx+0x7235110a],ah
   140017aa2:	movsxd ecx,DWORD PTR [rdi-0x3ca57b78]
   140017aa8:	jge    0x140017a48
   140017aaa:	jrcxz  0x140017adb
   140017aac:	rex.RX sbb r9b,BYTE PTR [rdx+0x6d8b9180]
   140017ab3:	rex.WR
   140017ab4:	sbb    BYTE PTR [rcx],dl
   140017ab7:	push   rcx
   140017ab8:	sub    al,0x33
   140017aba:	sbb    DWORD PTR [rcx-0x79],edi
   140017abd:	sub    eax,0x1ac5bead
   140017ac2:	mov    ch,0xd3
   140017ac4:	outs   dx,BYTE PTR ds:[rsi]
   140017ac5:	rex.WRB enter 0x5a83,0xe2
   140017aca:	push   rax
   140017acb:	in     al,0xf0
   140017acd:	and    ebx,DWORD PTR [rbx-0x1]
   140017ad0:	mov    al,0x1d
   140017ad2:	(bad)  
   140017ad3:	rex
   140017ad4:	rex
   140017ad5:	rex.RXB
   140017ad6:	adc    r8b,BYTE PTR [r14]
   140017ad9:	sti    
   140017ada:	and    eax,0xfdf5079c
   140017adf:	movabs ds:0x9efb8707fcc28193,eax
   140017ae8:	neg    DWORD PTR [rdi]
   140017aea:	or     eax,0x14f2b0cd
   140017aef:	jb     0x140017a80
   140017af1:	jo     0x140017ae5
   140017af3:	iret   
   140017af4:	cs (bad) 
   140017af6:	(bad)  
   140017af7:	adc    DWORD PTR [rbx+rbp*8+0x16bc110],edi
   140017afe:	jb     0x140017a8b
   140017b00:	xor    BYTE PTR [rbx+0x348d85f6],dh
   140017b06:	pop    rcx
   140017b07:	cs pop rsp
   140017b09:	rex.X sti 
   140017b0b:	fadd   st(4),st
   140017b0d:	fmulp  st(5),st
   140017b0f:	xchg   BYTE PTR [rdi+0x4],cl
   140017b12:	jb     0x140017abf
   140017b14:	lahf   
   140017b15:	mov    ch,0x2
   140017b17:	imul   ecx,eax,0x4048cb7
   140017b1d:	(bad)  
   140017b1e:	cld    
   140017b1f:	mov    ah,0xf2
   140017b21:	rex.WR pop rbp
   140017b23:	add    dh,cl
   140017b25:	xor    bh,bl
   140017b27:	addr32 mov edx,0x25bc935c
   140017b2d:	in     al,0x35
   140017b2f:	or     al,0xf4
   140017b31:	xor    eax,0xe741c012
   140017b36:	mov    ch,0xb9
   140017b38:	or     eax,0xcad3c470
   140017b3d:	rex.WRXB
   140017b3e:	lock rex.WX sub dil,BYTE PTR [rbx-0x3de211e2]
   140017b46:	out    0x89,al
   140017b48:	(bad)  
   140017b49:	(bad)  
   140017b4a:	and    eax,0x5316000f
   140017b4f:	(bad)  
   140017b50:	or     esp,DWORD PTR [rdx]
   140017b52:	add    ebx,DWORD PTR [rdi+0x7a]
   140017b55:	add    eax,0x4a79db60
   140017b5a:	mov    edi,fs
   140017b5c:	rex.WRXB lea r13,[r15]
   140017b5f:	lea    edi,[rsi]
   140017b61:	cld    
   140017b62:	in     eax,dx
   140017b63:	iret   
   140017b64:	in     al,dx
   140017b65:	mov    ebp,0x9ed9cafc
   140017b6a:	rex.WRX iretq 
   140017b6c:	int    0x8
   140017b6e:	movabs eax,ds:0x3833f0991f928017
   140017b77:	push   rdi
   140017b78:	sti    
   140017b79:	cwde   
   140017b7a:	push   rcx
   140017b7b:	retf   
   140017b7c:	add    BYTE PTR [rax],bl
   140017b7e:	fsub   st(2),st
   140017b80:	movabs al,ds:0x6e8ea22a8205120
   140017b89:	rex.WRB
   140017b8a:	add    DWORD PTR ss:[rbp-0x40],esp
   140017b8e:	sbb    BYTE PTR [rax],ch
   140017b90:	adc    eax,0x4d2ec173
   140017b95:	ret    0x8140
   140017b98:	sbb    DWORD PTR [rbx+rbp*1],ebx
   140017b9b:	(bad)  
   140017b9c:	int    0x55
   140017b9e:	sub    al,0x3e
   140017ba0:	(bad)  
   140017ba1:	sub    eax,0xac5e813c
   140017ba6:	pop    rbp
   140017ba7:	sti    
   140017ba8:	rex.RX or al,0xed
   140017bab:	sbb    BYTE PTR [rdx+0x4a],al
   140017bae:	or     DWORD PTR [rbx],ebp
   140017bb0:	retf   
   140017bb1:	repz or BYTE PTR [rbx],dh
   140017bb4:	(bad)  
   140017bb5:	xor    DWORD PTR [rdx],esi
   140017bb7:	imul   ebp,DWORD PTR [rbx],0xfffffff9
   140017bba:	rex.WR and BYTE PTR [rsi],r13b
   140017bbd:	iret   
   140017bbe:	and    DWORD PTR [rsi+rbp*1+0x2baacd02],ebp
   140017bc5:	pushf  
   140017bc6:	(bad)  
   140017bc7:	or     BYTE PTR [rax],0xb1
   140017bca:	mul    BYTE PTR [rdx]
   140017bcc:	cld    
   140017bcd:	add    DWORD PTR [rip+0x2e24d425],edx        # 0x16e264ff8
   140017bd3:	rex.RX
   140017bd4:	rex.WRB and r9b,BYTE PTR [r9+rdx*1+0x5a]
   140017bd9:	pop    rbx
   140017bda:	(bad)  
   140017bdb:	sub    BYTE PTR [rax],cl
   140017bdd:	cmp    DWORD PTR [rdx+0x50],eax
   140017be0:	jg     0x140017b73
   140017be2:	movabs ds:0x1081ee5f7c787941,al
   140017beb:	cmp    BYTE PTR [rax],bh
   140017bed:	mov    cl,0x46
   140017bef:	enter  0x8311,0x12
   140017bf3:	push   0x1b
   140017bf5:	fld    TBYTE PTR [rdi]
   140017bf7:	rex.X (bad) 
   140017bf9:	jge    0x140017c7a
   140017bfb:	retf   
   140017bfc:	sti    
   140017bfd:	xchg   edi,eax
   140017bfe:	iret   
   140017bff:	(bad)
   140017c02:	(bad)  
   140017c03:	or     BYTE PTR [rsi],0xff
   140017c06:	jae    0x140017bac
   140017c08:	rcl    BYTE PTR [rsi],0x0
   140017c0b:	mov    ch,0x72
   140017c0d:	pop    rsi
   140017c0e:	rex.WXB cmc 
   140017c10:	xor    eax,0x93dfd102
   140017c15:	and    DWORD PTR [rdi-0x1b3db7d3],eax
   140017c1b:	push   rdi
   140017c1c:	scas   eax,DWORD PTR es:[rdi]
   140017c1d:	fist   WORD PTR [rax+0x6009af89]
   140017c23:	or     al,al
   140017c25:	div    BYTE PTR [rcx]
   140017c27:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017c28:	in     al,dx
   140017c2a:	repz (bad) 
   140017c2c:	sub    edx,DWORD PTR [rcx]
   140017c2e:	pop    rax
   140017c2f:	rex.W push rax
   140017c31:	(bad)  
   140017c32:	push   0xbceffcb
   140017c37:	cmp    al,ah
   140017c39:	sub    ebp,DWORD PTR [rbx+rdi*1]
   140017c3c:	or     al,0x76
   140017c3e:	sub    esp,esp
   140017c40:	mov    bh,0x34
   140017c42:	je     0x140017c3f
   140017c44:	pop    rdx
   140017c45:	xchg   ebp,eax
   140017c46:	and    DWORD PTR [r14-0x3b],ebp
   140017c4a:	call   FWORD PTR [rax+rbp*1+0x4]
   140017c4e:	stc    
   140017c4f:	(bad)  
   140017c50:	and    eax,0x476d5778
   140017c55:	add    esi,DWORD PTR [rsi]
   140017c57:	(bad)  
   140017c58:	cwde   
   140017c59:	mov    dh,BYTE PTR [rsi+0x76]
   140017c5c:	in     al,0xd8
   140017c5e:	shr    BYTE PTR [rsi],0xb4
   140017c61:	mov    esp,0x13bf3b13
   140017c66:	popf   
   140017c67:	jp     0x140017c88
   140017c69:	xor    eax,0x18c3c778
   140017c6e:	cli    
   140017c6f:	fsub   DWORD PTR [rdx+rdi*2]
   140017c72:	ss icebp 
   140017c74:	cmp    eax,0x9f2f01b8
   140017c79:	add    al,BYTE PTR [rax]
   140017c7b:	sahf   
   140017c7c:	(bad)  
   140017c7d:	rex.B js 0x140017c72
   140017c80:	icebp  
   140017c81:	rex.RXB (bad) 
   140017c83:	in     eax,dx
   140017c84:	sbb    eax,0xff7f79dc
   140017c89:	(bad)  
   140017c8a:	loope  0x140017c77
   140017c8c:	(bad)  
   140017c8d:	mov    WORD PTR [rdi],es
   140017c8f:	adc    edx,DWORD PTR [rcx]
   140017c91:	sbb    dh,BYTE PTR [rsi]
   140017c93:	lea    ebp,[rsi]
   140017c95:	add    edx,DWORD PTR [rbp-0x55]
   140017c98:	movsxd esp,DWORD PTR [rbp+0x21]
   140017c9b:	(bad)  
   140017c9c:	adc    al,0x7
   140017c9e:	rex.WXB ins BYTE PTR es:[rdi],dx
   140017ca0:	sub    esp,ebp
   140017ca2:	clc    
   140017ca3:	push   0xffffffffce22076a
   140017ca8:	mov    esi,0xaededbf
   140017cad:	xlat   BYTE PTR ds:[rbx]
   140017cae:	rex.X jg 0x140017c95
   140017cb1:	movabs ds:0x9841dd50008bd064,eax
   140017cba:	lahf   
   140017cbb:	shl    ah,0x13
   140017cbe:	pavgb  mm1,QWORD PTR [rcx+0x5748bdbe]
   140017cc5:	fisttp WORD PTR [rdx+0x481dfee1]
   140017ccb:	sub    DWORD PTR [rcx+0x69],esp
   140017cce:	jns    0x140017cd1
   140017cd0:	xor    al,0x3b
   140017cd2:	xchg   BYTE PTR [rcx-0x66e71c67],dl
   140017cd8:	sbb    al,BYTE PTR [rbp-0x31]
   140017cdb:	int3   
   140017cdc:	imul   eax,esp,0x558459a5
   140017ce2:	jmp    0xdd2dc4d2
   140017ce7:	jnp    0x140017c93
   140017ce9:	add    BYTE PTR [rcx-0xe],cl
   140017cec:	and    DWORD PTR [rax-0x76],ebp
   140017cef:	outs   dx,DWORD PTR ds:[rsi]
   140017cf0:	lock data16 sahf 
   140017cf3:	push   rcx
   140017cf4:	stos   DWORD PTR es:[rdi],eax
   140017cf5:	std    
   140017cf6:	retf   0x1f02
   140017cf9:	add    cl,BYTE PTR [rdx]
   140017cfb:	mov    ebp,DWORD PTR [rip+0xffffffff92467c15]        # 0xd247f916
   140017d01:	cdq    
   140017d02:	(bad)  
   140017d03:	out    dx,eax
   140017d04:	rex.WB cmp al,0x1a
   140017d07:	fisttp DWORD PTR [rdi-0x40b24dd0]
   140017d0d:	(bad)  
   140017d0f:	stos   BYTE PTR es:[rdi],al
   140017d10:	rex.WR clc 
   140017d12:	rex.RB push r8
   140017d14:	lods   al,BYTE PTR ds:[rsi]
   140017d15:	ror    BYTE PTR [rdi],cl
   140017d17:	and    al,0x9
   140017d19:	(bad)  
   140017d1a:	xor    eax,ebx
   140017d1c:	mov    esi,0x5070a3b9
   140017d21:	mov    edi,0x92042f3f
   140017d26:	adc    DWORD PTR [rbp+rdx*8-0x26f2bbeb],eax
   140017d2d:	add    eax,0xad5b0143
   140017d32:	(bad)  
   140017d33:	add    eax,0xf5ad1d27
   140017d38:	push   rdi
   140017d39:	pop    rcx
   140017d3a:	sub    BYTE PTR [rdx+rcx*1+0x3f],dl
   140017d3e:	adc    eax,eax
   140017d40:	xchg   ecx,eax
   140017d41:	std    
   140017d42:	jl     0x140017d72
   140017d44:	cld    
   140017d45:	(bad)  
   140017d46:	movsxd esp,DWORD PTR [rax+0xff91b0a]
   140017d4c:	sub    cl,BYTE PTR [rsi+riz*8]
   140017d4f:	retf   0x5ae9
   140017d52:	sub    DWORD PTR [rsi+rdx*8+0x11835cbc],0xffffffc8
   140017d5a:	rex.X (bad) 
   140017d5c:	out    0x2d,eax
   140017d5e:	cld    
   140017d5f:	jg     0x140017db4
   140017d61:	sbb    ah,BYTE PTR [rsi+0x6e]
   140017d64:	cdq    
   140017d65:	xchg   ecx,eax
   140017d66:	rex.WRB or r13b,BYTE PTR [r11+0x563397c0]
   140017d6d:	pop    rdi
   140017d6e:	xchg   esp,eax
   140017d6f:	jge    0x140017d77
   140017d71:	sbb    DWORD PTR [rsi+0xac9c624],ebx
   140017d77:	test   esp,esp
   140017d79:	jnp    0x140017dde
   140017d7b:	stc    
   140017d7c:	jae    0x140017db9
   140017d7e:	jl     0x140017db1
   140017d80:	push   rax
   140017d81:	rex.R sub eax,0x88d01387
   140017d87:	adc    BYTE PTR [rbx-0x790e857f],0x78
   140017d8e:	mov    bh,0x39
   140017d90:	mov    ecx,0xf78105fa
   140017d95:	pop    rdi
   140017d96:	rex.WRX imul r11,QWORD PTR [rdi-0x3],0x14
   140017d9b:	test   BYTE PTR [rbp+0x3207be2],0x5f
   140017da2:	pop    rsi
   140017da3:	add    eax,0x9c9f3c00
   140017da8:	xor    DWORD PTR [rsi*2-0x1d3b3714],0xd4fe9d4
   140017db3:	sbb    eax,0x3d0aa4b8
   140017db8:	mov    ebp,0x62390337
   140017dbd:	push   rbx
   140017dbe:	sub    ebx,esp
   140017dc0:	rex.WRXB (bad) 
   140017dc2:	std    
   140017dc3:	or     ebp,ebp
   140017dc5:	lahf   
   140017dc6:	cmp    bh,dl
   140017dc8:	ror    BYTE PTR [rbx-0x17],1
   140017dcb:	test   BYTE PTR [rax],bh
   140017dcd:	nop
   140017dce:	or     DWORD PTR [rdx-0x4],ecx
   140017dd1:	add    DWORD PTR [rax+0x3065d9c4],ecx
   140017dd7:	(bad)  
   140017dd8:	leave  
   140017dd9:	(bad)  
   140017dda:	and    edx,DWORD PTR [rbx-0x2cacfc60]
   140017de0:	and    DWORD PTR [rdx-0x2b],ecx
   140017de3:	fucomi st,st(0)
   140017de5:	movsxd edi,DWORD PTR [rax]
   140017de7:	stc    
   140017de8:	hlt    
   140017de9:	and    edi,DWORD PTR [rax+0x7a]
   140017dec:	fcomip st,st(5)
   140017dee:	call   0x14c3c7c4f
   140017df3:	div    edi
   140017df5:	movabs eax,ds:0x27b3401797161269
   140017dfe:	xor    BYTE PTR [rdx],dh
   140017e00:	xor    eax,DWORD PTR [rsi-0x76ce361f]
   140017e06:	cmc    
   140017e07:	(bad)  
   140017e08:	int    0xc8
   140017e0a:	(bad)  
   140017e0b:	(bad)  
   140017e0c:	fwait
   140017e0d:	sub    ecx,DWORD PTR [rax]
   140017e0f:	sbb    rsi,QWORD PTR [r15+0x10]
   140017e13:	stos   DWORD PTR es:[rdi],eax
   140017e14:	lock or ebx,ebx
   140017e17:	pop    rdi
   140017e18:	or     bh,BYTE PTR [rdi-0x398b07cb]
   140017e1e:	pop    rdi
   140017e1f:	out    0x7c,eax
   140017e21:	scas   al,BYTE PTR es:[rdi]
   140017e22:	mov    esi,0x51788d23
   140017e27:	fwait
   140017e28:	icebp  
   140017e29:	xlat   BYTE PTR ds:[rbx]
   140017e2a:	iret   
   140017e2b:	retf   0x1d46
   140017e2e:	outs   dx,BYTE PTR ds:[rsi]
   140017e2f:	icebp  
   140017e30:	cmc    
   140017e31:	jmp    QWORD PTR [rax-0x557dcafb]
   140017e37:	(bad)
   140017e3a:	xor    dh,BYTE PTR [rax]
   140017e3c:	push   rdi
   140017e3d:	out    dx,al
   140017e3e:	add    eax,0xdf647e11
   140017e43:	pop    rdi
   140017e44:	movabs al,ds:0xbdacf040dd92f07a
   140017e4d:	mov    BYTE PTR [rdx],ah
   140017e4f:	jmp    0x140017ea0
   140017e51:	xchg   ebx,eax
   140017e52:	jle    0x140017df8
   140017e54:	rol    bh,1
   140017e56:	pop    rsp
   140017e57:	or     eax,0xbd2a23f1
   140017e5c:	jle    0x140017e29
   140017e5e:	(bad)  
   140017e5f:	jo     0x140017e98
   140017e61:	and    ah,BYTE PTR [rcx+riz*8+0x34]
   140017e65:	(bad)  
   140017e66:	(bad)  
   140017e67:	clc    
   140017e68:	or     edx,DWORD PTR [rsi+rdx*8]
   140017e6b:	(bad)  
   140017e6c:	(bad)  
   140017e6d:	repz sbb eax,0x5067f809
   140017e73:	or     eax,0x5126bc59
   140017e78:	add    cl,BYTE PTR [rsi-0x17]
   140017e7b:	mov    edx,0xd9a8e05b
   140017e80:	out    0x8a,eax
   140017e82:	xor    edi,edx
   140017e84:	xor    cl,al
   140017e86:	xor    bh,BYTE PTR [rax]
   140017e88:	test   eax,0x8ddc339f
   140017e8d:	xchg   edx,eax
   140017e8e:	push   rsi
   140017e8f:	ins    BYTE PTR es:[rdi],dx
   140017e90:	test   BYTE PTR [rdx-0x4a6ec2e8],bl
   140017e96:	cmp    DWORD PTR [rbx],ecx
   140017e98:	or     DWORD PTR [rdi+0xd5ad0c3],ecx
   140017e9e:	adc    edx,edi
   140017ea0:	call   0x149e5809e
   140017ea5:	rex.B leave 
   140017ea7:	cvtps2pi mm2,QWORD PTR [rdi]
   140017eaa:	xchg   ecx,eax
   140017eab:	xor    eax,DWORD PTR [rsi]
   140017ead:	ins    DWORD PTR es:[rdi],dx
   140017eae:	out    0xb9,al
   140017eb0:	ins    DWORD PTR es:[rdi],dx
   140017eb1:	xchg   edi,eax
   140017eb2:	jns    0x140017f11
   140017eb4:	pop    rsp
   140017eb5:	push   rbx
   140017eb6:	jle    0x140017e57
   140017eb8:	scas   eax,DWORD PTR es:[rdi]
   140017eb9:	(bad)  
   140017eba:	neg    dl
   140017ebc:	fist   WORD PTR [rdx-0x18]
   140017ebf:	rex.RB fidivr DWORD PTR [r8-0x7cc178f9]
   140017ec6:	out    dx,eax
   140017ec7:	movabs eax,ds:0xe5b84bcbbfce8840
   140017ed0:	push   rbp
   140017ed1:	rex.WRX (bad) 
   140017ed3:	(bad)  
   140017ed4:	push   rbp
   140017ed5:	cli    
   140017ed6:	xlat   BYTE PTR ds:[rbx]
   140017ed7:	sar    DWORD PTR [rdi-0x4216462],1
   140017edd:	ret    
   140017ede:	out    dx,eax
   140017edf:	sbb    ebx,edx
   140017ee1:	jg     0x140017eac
   140017ee3:	mov    edi,0xab2e10a1
   140017ee8:	cmp    BYTE PTR [rcx],ah
   140017eea:	xor    al,dl
   140017eec:	and    eax,0x240f29d9
   140017ef1:	(bad)  
   140017ef2:	lods   al,BYTE PTR ds:[rsi]
   140017ef3:	(bad)  
   140017ef4:	and    esi,DWORD PTR [rdx-0xe]
   140017ef7:	or     al,0x2a
   140017ef9:	or     DWORD PTR [rip+0x40236826],eax        # 0x18024e725
   140017eff:	and    DWORD PTR [rsi],edx
   140017f01:	cmp    DWORD PTR [rdi],edi
   140017f03:	jbe    0x140017e8b
   140017f05:	mov    al,0xff
   140017f07:	data16 std 
   140017f09:	sub    DWORD PTR [rcx-0x1dca75e2],ebp
   140017f0f:	(bad)  
   140017f10:	sbb    bh,BYTE PTR [rdx-0x38fc8071]
   140017f16:	(bad)  
   140017f17:	(bad)  
   140017f18:	xor    BYTE PTR [rsi-0x1b],bh
   140017f1b:	ins    DWORD PTR es:[rdi],dx
   140017f1c:	fdiv   DWORD PTR [rcx-0x20]
   140017f1f:	rex.WX or al,0x56
   140017f22:	add    ebx,ebp
   140017f24:	fld    QWORD PTR [rbp+rax*4-0x165bba1b]
   140017f2b:	xor    DWORD PTR [rsp+rcx*8-0x3b3738e3],ecx
   140017f32:	sub    BYTE PTR [rdx-0x59],bh
   140017f35:	rex.WRX and BYTE PTR [rsi],r13b
   140017f38:	(bad)  
   140017f39:	and    BYTE PTR [rsi],ch
   140017f3b:	iret   
   140017f3c:	add    DWORD PTR [rbx],ebx
   140017f3e:	sub    esp,DWORD PTR [rax-0x4025e4c]
   140017f44:	lods   al,BYTE PTR ds:[rsi]
   140017f45:	js     0x140017f0e
   140017f47:	rex.X jge 0x140017f8b
   140017f4a:	jrcxz  0x140017f48
   140017f4c:	lods   al,BYTE PTR ds:[rsi]
   140017f4d:	cmp    eax,0xf58ad0fd
   140017f52:	cmp    ebp,esp
   140017f54:	(bad)  
   140017f55:	in     eax,dx
   140017f56:	scas   al,BYTE PTR es:[rdi]
   140017f57:	xchg   esi,eax
   140017f58:	pop    rbx
   140017f59:	es mov edi,0xce6f4b7
   140017f5f:	in     eax,0x9
   140017f61:	enter  0xfff1,0x42
   140017f65:	clc    
   140017f66:	movabs ds:0x908c89904209bf09,eax
   140017f6f:	jge    0x140017fe9
   140017f71:	rex.WXB (bad) 
   140017f73:	or     dl,BYTE PTR [rcx+0x3d84dd5a]
   140017f79:	(bad)  
   140017f7a:	mov    bh,0xa5
   140017f7c:	(bad)  
   140017f7d:	addr32 in eax,0xcc
   140017f80:	(bad)  
   140017f81:	and    edx,DWORD PTR [rbp+rbp*2+0x65]
   140017f85:	push   rbp
   140017f86:	(bad)  
   140017f87:	mov    ch,0xf8
   140017f89:	jp     0x140017f28
   140017f8b:	push   rbp
   140017f8c:	mov    WORD PTR [rdx],ds
   140017f8e:	(bad)  
   140017f8f:	push   rsp
   140017f90:	push   rdi
   140017f91:	and    DWORD PTR [rsi],eax
   140017f93:	sub    DWORD PTR [rbx],esp
   140017f95:	ss (bad) 
   140017f97:	movabs al,ds:0xfa419fe6504008a
   140017fa0:	adc    DWORD PTR [rax+rdi*4-0x5f],0x12098aca
   140017fa8:	adc    eax,0xa1de3a88
   140017fad:	sub    DWORD PTR [rax],edx
   140017faf:	(bad)  
   140017fb0:	call   0xece4d32e
   140017fb5:	and    eax,0x47b5bd5
   140017fba:	xchg   esi,eax
   140017fbb:	fwait
   140017fbc:	adc    eax,0xc2a4a500
   140017fc1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017fc2:	xchg   edx,eax
   140017fc3:	stos   BYTE PTR es:[rdi],al
   140017fc4:	stc    
   140017fc5:	(bad)  
   140017fc6:	call   0x14316c1f0
   140017fcb:	push   si
   140017fcd:	(bad)  
   140017fce:	xor    BYTE PTR [rbx-0x52b09968],bh
   140017fd4:	ror    cl,1
   140017fd6:	mov    cl,0x45
   140017fd8:	cmp    bh,dl
   140017fda:	in     al,dx
   140017fdb:	pop    rsp
   140017fdc:	ja     0x14001804a
   140017fde:	jl     0x140018019
   140017fe0:	rex.WRB lods al,BYTE PTR ds:[rsi]
   140017fe2:	xor    eax,0x1a36561
   140017fe7:	div    DWORD PTR [rdx]
   140017fe9:	ja     0x140018031
   140017feb:	push   0xc
   140017fed:	pop    rbp
   140017fee:	fisttp QWORD PTR [rdi-0x69]
   140017ff1:	sbb    al,0xee
   140017ff3:	rcl    BYTE PTR [rbp-0xd08bc05],1
   140017ff9:	fst    QWORD PTR [rcx-0x2759130a]
   140017fff:	loope  0x140018007
   140018001:	pop    rax
   140018002:	fldenv [rsp+rbp*2+0x36]
   140018006:	mov    WORD PTR [rsi+0x17705d61],fs
   14001800c:	mov    dl,0xf8
   14001800e:	lods   eax,DWORD PTR ds:[rsi]
   14001800f:	es or  eax,0xf968625
   140018015:	rex.WXB adc bl,BYTE PTR [r10+0x62]
   140018019:	rex.X
   14001801a:	rex.WX push rdx
   14001801c:	(bad)  
   14001801d:	outs   dx,BYTE PTR ds:[rsi]
   14001801e:	xlat   BYTE PTR ds:[rbx]
   14001801f:	popf   
   140018020:	push   rdi
   140018021:	adc    DWORD PTR [rcx+rsi*4+0x1834f5b7],0xffffff82
   140018029:	jle    0x14001803d
   14001802b:	add    ecx,DWORD PTR [rbp-0x3e]
   14001802e:	jmp    0x13fe343ae
   140018033:	out    0x3f,al
   140018035:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018037:	movsxd edx,DWORD PTR [rax+0x5d7df6]
   14001803d:	lods   al,BYTE PTR ds:[rsi]
   14001803e:	xor    eax,0xfedce73b
   140018043:	jbe    0x14001805a
   140018045:	sub    BYTE PTR [rbp-0x5e],0x8
   140018049:	ins    BYTE PTR es:[rdi],dx
   14001804a:	fsub   DWORD PTR [rbp+0x4a14617]
   140018050:	cs mov ebx,0xaf2bb6f9
   140018056:	mov    eax,0xd77fe6e1
   14001805b:	rcr    ebx,cl
   14001805d:	sti    
   14001805e:	(bad)  
   14001805f:	adc    DWORD PTR cs:[rdx+0x1c00fa35],eax
   140018066:	loop   0x14001809b
   140018068:	and    al,0x4f
   14001806a:	mov    esi,0x8daeeb72
   14001806f:	(bad)  
   140018070:	adc    dl,BYTE PTR [rax-0x5f]
   140018073:	add    DWORD PTR [rbx],edi
   140018075:	icebp  
   140018076:	xchg   edi,eax
   140018077:	or     edi,DWORD PTR [rax+0x24]
   14001807a:	icebp  
   14001807b:	test   al,0x91
   14001807d:	mov    esi,0x98f50a01
   140018082:	adc    ebp,DWORD PTR [rax-0x6233df16]
   140018088:	(bad)  
   140018089:	retf   0x5fc3
   14001808c:	(bad)  
   14001808d:	mov    bl,0xf5
   14001808f:	and    dh,ah
   140018091:	scas   eax,DWORD PTR es:[rdi]
   140018092:	jge    0x1400180b7
   140018094:	jbe    0x140018025
   140018096:	in     al,dx
   140018097:	rex.XB pop r15
   140018099:	adc    eax,0xc5d1bab0
   14001809e:	cld    
   14001809f:	retf   0x3022
   1400180a2:	xor    ecx,DWORD PTR [rsi+0x3147d39d]
   1400180a8:	xor    dh,BYTE PTR [rbx+0x2]
   1400180ab:	jge    0x140018040
   1400180ad:	(bad)  
   1400180ae:	push   rax
   1400180af:	(bad)  
   1400180b0:	rex.WR retf 
   1400180b2:	and    bl,BYTE PTR [rsi-0x4b5f3415]
   1400180b8:	add    eax,0xf920aa0d
   1400180be:	hlt    
   1400180bf:	xor    eax,0x26534d27
   1400180c4:	pop    rcx
   1400180c5:	mov    ebx,0x543df48f
   1400180ca:	lock test eax,0x4ffafd80
   1400180d0:	push   rsp
   1400180d1:	add    eax,0xa5f27d26
   1400180d6:	cdq    
   1400180d7:	fs (bad) 
   1400180d9:	in     al,0xa
   1400180db:	mov    bpl,0xfc
   1400180de:	xchg   ecx,eax
   1400180df:	add    dl,BYTE PTR [rax-0x3f429e28]
   1400180e5:	jae    0x14001812c
   1400180e7:	pcmpgtd mm7,mm1
   1400180ea:	mov    esp,cs
   1400180ec:	and    esi,ebx
   1400180ee:	iret   
   1400180ef:	retf   
   1400180f0:	ins    BYTE PTR es:[rdi],dx
   1400180f1:	(bad)  
   1400180f2:	sub    edi,0xffffff9a
   1400180f5:	test   BYTE PTR [rbx+rsi*4],dl
   1400180f8:	movabs ds:0xad004f72f284a2a8,al
   140018101:	out    0x8b,al
   140018103:	mov    edx,0xc2b68016
   140018108:	scas   al,BYTE PTR es:[rdi]
   140018109:	(bad)  
   14001810a:	push   rsi
   14001810b:	(bad)  
   14001810c:	stos   BYTE PTR es:[rdi],al
   14001810d:	ret    0x43a8
   140018110:	test   al,0x82
   140018113:	scas   al,BYTE PTR es:[rdi]
   140018114:	sbb    DWORD PTR [rax-0x16],eax
   140018117:	sub    dl,BYTE PTR [rax+0x60c5ff57]
   14001811d:	jo     0x1400180fe
   14001811f:	test   BYTE PTR [rdi+0x43f045],dl
   140018125:	and    bh,BYTE PTR [rbx+0x31]
   140018128:	or     eax,0x982cb413
   14001812d:	or     al,0x6a
   14001812f:	enter  0xab98,0x2
   140018133:	loopne 0x140018157
   140018135:	mov    WORD PTR [rcx+0x73],gs
   140018138:	ror    DWORD PTR [rax],0x37
   14001813b:	jns    0x1400181ab
   14001813d:	lock mov edx,0xb03296fd
   140018143:	leave  
   140018144:	xchg   ebx,eax
   140018145:	pop    rax
   140018146:	(bad)  
   140018147:	add    cl,BYTE PTR [rcx+0x31]
   14001814a:	out    dx,eax
   14001814b:	nop
   14001814c:	int3   
   14001814d:	xchg   edi,eax
   14001814e:	xchg   DWORD PTR [rsi-0x59],ecx
   140018151:	jrcxz  0x1400181b2
   140018153:	cmp    edi,DWORD PTR [rsi-0x646c7207]
   140018159:	std    
   14001815a:	idiv   edi
   14001815c:	xchg   edi,eax
   14001815d:	movabs ds:0x8650c7abc5cf83d5,eax
   140018166:	fidiv  DWORD PTR [rsi-0x3f95f2ee]
   14001816c:	jbe    0x1400181dd
   14001816e:	pushf  
   14001816f:	sbb    bh,BYTE PTR [rsi-0x5]
   140018172:	shr    ah,0x6b
   140018175:	scas   eax,DWORD PTR es:[rdi]
   140018176:	movabs ds:0xeddeff103f5e3bc5,al
   14001817f:	std    
   140018180:	loope  0x140018137
   140018182:	jne    0x140018186
   140018184:	push   rsi
   140018185:	(bad)  
   140018186:	test   BYTE PTR [rbp+0x4e0028ae],cl
   14001818c:	mov    WORD PTR [rsi+0x57],gs
   14001818f:	sbb    eax,0x813994cf
   140018194:	test   BYTE PTR [rsp+rdx*8-0x1a69dbbc],al
   14001819b:	fstp   QWORD PTR [rdx]
   14001819d:	mov    ebp,0x93904960
   1400181a2:	sbb    ecx,DWORD PTR [rax]
   1400181a4:	or     eax,esp
   1400181a6:	and    BYTE PTR [rax-0x29],cl
   1400181a9:	mov    bl,ch
   1400181ab:	adc    al,BYTE PTR [rcx]
   1400181ad:	rex.WRB ret 
   1400181af:	cmp    BYTE PTR [rbp-0x43],cl
   1400181b2:	push   rsi
   1400181b4:	(bad)  
   1400181b5:	jo     0x1400181a2
   1400181b7:	out    dx,eax
   1400181b8:	rex.X adc al,0x80
   1400181bb:	lods   al,BYTE PTR ds:[rsi]
   1400181bc:	and    eax,0x518af8
   1400181c1:	rex test eax,0x9590804
   1400181c7:	cwde   
   1400181c8:	and    ch,al
   1400181ca:	jmp    0x1bfd359e8
   1400181cf:	retf   
   1400181d0:	fucomp st(7)
   1400181d2:	dec    ecx
   1400181d4:	(bad)  
   1400181d5:	movabs eax,ds:0x599dd876891f3f5d
   1400181de:	and    eax,0xa3a02461
   1400181e3:	mov    esi,0x3774ab18
   1400181e8:	add    BYTE PTR [rdx],ch
   1400181ea:	outs   dx,BYTE PTR ds:[rsi]
   1400181eb:	(bad)  
   1400181ec:	stos   DWORD PTR es:[rdi],eax
   1400181ed:	repz cwde 
   1400181ef:	cmc    
   1400181f0:	iret   
   1400181f1:	scas   al,BYTE PTR es:[rdi]
   1400181f2:	jle    0x1400181c6
   1400181f4:	rcr    BYTE PTR [rcx+rdi*4],1
   1400181f7:	push   rdx
   1400181f8:	movabs al,ds:0x8fb3d4c1bfb18110
   140018201:	(bad)  
   140018202:	je     0x1400181e8
   140018204:	jb     0x14001827a
   140018206:	scas   eax,DWORD PTR es:[rdi]
   140018207:	mov    esp,0x7707bb05
   14001820c:	movabs ds:0x5a5c58366f2c626,al
   140018215:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018216:	mov    ecx,0x1e9e1813
   14001821b:	ret    
   14001821c:	lock hlt 
   14001821e:	or     esp,esi
   140018220:	int    0x8c
   140018222:	and    ecx,esi
   140018224:	rex.WRXB movabs rax,ds:0x3ad2065b58479e5a
   14001822e:	sub    cl,bl
   140018230:	loope  0x140018259
   140018232:	in     eax,dx
   140018233:	loop   0x140018200
   140018235:	sbb    cl,BYTE PTR [rdi-0x19]
   140018238:	rex.RX jnp 0x140018233
   14001823b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001823c:	mov    bl,0x8
   14001823e:	mov    edi,0x4607612
   140018243:	rex.WRB
   140018244:	rex.WR loop 0x14001820f
   140018247:	pop    rsi
   140018248:	out    0xef,eax
   14001824a:	mov    ecx,0x19c8462f
   14001824f:	(bad)  
   140018250:	sub    BYTE PTR [rax+rcx*8],0xa2
   140018254:	or     BYTE PTR [rcx+rbx*8+0x0],al
   140018258:	rex.RX (bad) 
   14001825a:	mov    eax,esi
   14001825c:	(bad)  
   14001825d:	xor    al,0xde
   14001825f:	(bad)  
   140018260:	je     0x14001822f
   140018262:	(bad)  
   140018263:	xchg   ebp,eax
   140018264:	sub    DWORD PTR [rdi],edx
   140018266:	(bad)  
   140018267:	and    BYTE PTR [rcx-0x1bea3d43],ch
   14001826d:	cmp    al,0x0
   14001826f:	imul   ecx
   140018271:	mov    DWORD PTR [rsp+rdi*2-0x1a021428],esp
   140018278:	pop    rdx
   140018279:	push   0x47
   14001827b:	or     esp,DWORD PTR [rdx-0x27ad5c4]
   140018281:	xchg   ebp,eax
   140018282:	xchg   BYTE PTR [rbp*1+0x1cc6384d],cl
   140018289:	(bad)  
   14001828a:	sbb    BYTE PTR [rsi+0x29b47493],0x0
   140018291:	mov    dh,0xa6
   140018293:	pop    rcx
   140018294:	mov    ecx,0x32ab00be
   140018299:	add    BYTE PTR [rsi+0x2df0452c],0xe7
   1400182a0:	(bad)  
   1400182a1:	sbb    DWORD PTR [rcx],ecx
   1400182a3:	push   0xffffffffca76488e
   1400182a8:	xor    eax,DWORD PTR [rdi]
   1400182aa:	(bad)  
   1400182ab:	or     al,al
   1400182ad:	ss xchg edi,eax
   1400182af:	mov    ah,BYTE PTR [rsi+rdi*8]
   1400182b2:	jle    0x1400182db
   1400182b4:	xor    dh,dl
   1400182b6:	mov    edx,0xd1e5f9bc
   1400182bb:	hlt    
   1400182bc:	rol    bh,0x9f
   1400182bf:	movabs eax,ds:0x5edfabefb6b63f8f
   1400182c8:	fidivr DWORD PTR [rbx+0xa]
   1400182cb:	jns    0x14001828a
   1400182cd:	or     al,0xa3
   1400182cf:	cld    
   1400182d0:	push   rdx
   1400182d1:	stc    
   1400182d2:	jae    0x1400182b1
   1400182d4:	mov    dh,0x1a
   1400182d6:	scas   eax,DWORD PTR es:[rdi]
   1400182d7:	or     BYTE PTR [rax],ah
   1400182d9:	(bad)  
   1400182da:	(bad)  
   1400182db:	in     al,dx
   1400182dc:	shr    BYTE PTR [rbx+0x4e60d2],1
   1400182e2:	add    BYTE PTR [rax],ah
   1400182e4:	add    BYTE PTR [rcx+0x44],cl
   1400182e7:	push   r12
   1400182e9:	or     eax,0x7fb6ec69
   1400182ee:	xor    BYTE PTR [rax-0xa485e07],bh
   1400182f4:	loope  0x1400182c4
   1400182f6:	and    DWORD PTR [rax+0x60],esp
   1400182f9:	cmp    DWORD PTR [rip+0x6a40366c],esp        # 0x1aa41b96b
   1400182ff:	cmp    bh,dl
   140018301:	or     ah,BYTE PTR [rbx+riz*8]
   140018304:	scas   al,BYTE PTR es:[rdi]
   140018305:	adc    bl,BYTE PTR [rax-0x6fb65fd]
   14001830b:	rcr    ah,1
   14001830d:	add    eax,0x2de7b93d
   140018312:	mov    al,0xe4
   140018314:	mov    esp,0x111b278
   140018319:	ffree  st(4)
   14001831b:	fadd   DWORD PTR [rax-0x8]
   14001831e:	(bad)  
   14001831f:	inc    DWORD PTR [rbx+rbx*1+0xc31ec7e]
   140018326:	(bad)  
   140018327:	rex.XB sub sil,BYTE PTR [r11+0x1b]
   14001832b:	cmp    al,0xf8
   14001832d:	jnp    0x140018338
   14001832f:	out    0xd9,eax
   140018331:	mov    esi,0x7000147f
   140018336:	es xchg edi,eax
   140018338:	(bad)  
   140018339:	sbb    ebx,DWORD PTR [rdx]
   14001833b:	mov    eax,0xb8efade1
   140018340:	ins    DWORD PTR es:[rdi],dx
   140018341:	fbld   TBYTE PTR [rbp+0x57]
   140018344:	jmp    FWORD PTR [rdx-0x54]
   140018347:	jmp    0x140018364
   140018349:	cdq    
   14001834a:	and    eax,0x486a3ff7
   14001834f:	xor    BYTE PTR [rax+0x26e81b9d],al
   140018355:	or     DWORD PTR [rdi+0xe8a3711],ebp
   14001835b:	hlt    
   14001835c:	mov    DWORD PTR [rbx+0x45f2581],esp
   140018362:	xor    al,0xa
   140018364:	stos   DWORD PTR es:[rdi],eax
   140018365:	add    BYTE PTR [rdx-0x7e4447cb],cl
   14001836b:	out    0xc9,al
   14001836d:	sti    
   14001836e:	jno    0x1400183ec
   140018370:	jb     0x140018374
   140018372:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018373:	(bad)  
   140018374:	mov    edi,0xae073d19
   140018379:	ret    0xbeae
   14001837c:	pop    rsi
   14001837d:	add    al,0x30
   14001837f:	xchg   esi,eax
   140018380:	ss mov edx,0x45e5c58
   140018386:	data16 rex.WRXB (bad) 
   140018389:	jo     0x140018381
   14001838b:	cmp    BYTE PTR [rsi-0x5a],al
   14001838e:	(bad)  
   14001838f:	movabs ds:0xac21cdf966a4f26f,eax
   140018398:	sub    eax,0x8eb3423
   14001839d:	fidivr WORD PTR [rax-0x37c0d2bd]
   1400183a3:	pop    rbx
   1400183a4:	jns    0x1400183eb
   1400183a6:	pop    rbp
   1400183a7:	mov    esp,0x185402b3
   1400183ac:	push   rax
   1400183ad:	mov    ah,0xe6
   1400183af:	(bad)  
   1400183b0:	in     al,dx
   1400183b1:	jns    0x1400183a9
   1400183b3:	stc    
   1400183b4:	and    eax,0x3f2c56e5
   1400183b9:	jns    0x140018389
   1400183bb:	mov    eax,0xbfca7e58
   1400183c0:	and    eax,DWORD PTR [rcx+0x43a05688]
   1400183c6:	(bad)  
   1400183c7:	jmp    FWORD PTR [rdi+0x9]
   1400183ca:	xchg   BYTE PTR ds:[rdx],ah
   1400183cd:	and    ah,BYTE PTR [rdx-0x59bb1d79]
   1400183d3:	xor    dh,ah
   1400183d5:	mov    bh,0x42
   1400183d7:	(bad)  
   1400183d8:	sbb    BYTE PTR [rbx+0x7601f96f],dh
   1400183de:	or     al,0xd6
   1400183e0:	or     BYTE PTR [rbp-0xbd940f7],al
   1400183e6:	pop    rax
   1400183e7:	(bad)
   1400183ea:	adc    edi,esi
   1400183ec:	sbb    al,0xfa
   1400183ee:	adc    esp,DWORD PTR [rdx+0x54549490]
   1400183f4:	rex.RB adc al,0x5
   1400183f7:	(bad)  
   1400183f8:	(bad)  
   1400183fa:	movabs eax,ds:0xf1fa801d68443c96
   140018403:	push   0xfffffffffffffff1
   140018405:	lods   eax,DWORD PTR ds:[rsi]
   140018406:	hlt    
   140018407:	(bad)  
   140018408:	js     0x14001840e
   14001840a:	(bad)  
   14001840b:	rex.XB fidivr DWORD PTR [rip+0x39805c95]        # 0x17981e0a7
   140018412:	je     0x140018396
   140018414:	pop    rax
   140018415:	mov    esp,0xadb5248f
   14001841a:	(bad)  
   14001841b:	ins    DWORD PTR es:[rdi],dx
   14001841c:	fwait
   14001841d:	in     eax,dx
   14001841e:	mov    esp,ss
   140018420:	adc    BYTE PTR [rsi-0x460fd82],bh
   140018426:	stos   DWORD PTR es:[rdi],eax
   140018427:	rcr    DWORD PTR [rsi-0x2e6201c1],1
   14001842d:	stos   DWORD PTR es:[rdi],eax
   14001842e:	mov    esi,0x5d9eb102
   140018433:	std    
   140018434:	cmp    ebx,DWORD PTR [rbx-0x5fb56810]
   14001843a:	xor    al,0x5c
   14001843c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001843d:	adc    dh,BYTE PTR [rax]
   14001843f:	add    edx,DWORD PTR [rsi-0x41]
   140018442:	xor    eax,0xf86f13d
   140018447:	or     eax,0xbbc4fd2c
   14001844c:	cli    
   14001844d:	jo     0x140018486
   14001844f:	adc    dl,bl
   140018451:	push   0xffffffffffffffc3
   140018453:	mov    al,0x9c
   140018455:	xor    esp,DWORD PTR [rsi-0x55]
   140018458:	and    eax,0x62607092
   14001845d:	rex.X push rdx
   14001845f:	add    al,cl
   140018461:	rex.WRXB
   140018462:	rex.RX test BYTE PTR [rsi+0x14254f33],r8b
   140018469:	rex.X adc sil,BYTE PTR [rdi]
   14001846c:	rex rol DWORD PTR [rax-0x69],1
   140018470:	mov    cl,0xf1
   140018472:	or     BYTE PTR [rip+0xfffffffff897e07d],cl        # 0x1389964f5
   140018478:	xor    eax,0xe594875f
   14001847d:	rex.WXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14001847f:	loopne 0x1400184fa
   140018481:	push   rax
   140018482:	ror    bl,0x4f
   140018485:	add    bl,BYTE PTR [rsi-0x74e18495]
   14001848b:	xchg   esp,eax
   14001848c:	rex.WR (bad) 
   14001848e:	jnp    0x14001847e
   140018490:	(bad)  
   140018491:	shr    ah,cl
   140018493:	hlt    
   140018494:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018495:	xchg   dh,dh
   140018497:	(bad)  
   140018498:	call   0x117a0222c
   14001849d:	push   rbp
   14001849e:	add    al,0xaa
   1400184a0:	pop    rax
   1400184a1:	enter  0x1334,0x7e
   1400184a5:	stos   DWORD PTR es:[rdi],eax
   1400184a6:	sub    DWORD PTR [rax-0x34db3f98],ecx
   1400184ac:	push   rdi
   1400184ad:	pop    rcx
   1400184ae:	imul   esp,DWORD PTR [rbp-0x2ebd8569],0xadd0a842
   1400184b8:	sti    
   1400184b9:	ror    bl,0xd3
   1400184bc:	pop    rax
   1400184bd:	jl     0x1400184bb
   1400184bf:	fwait
   1400184c0:	cmp    BYTE PTR [rdx-0x4a233a2a],dh
   1400184c6:	ja     0x140018528
   1400184c8:	clc    
   1400184c9:	shl    ch,0x18
   1400184cc:	jmp    0xf18a05be
   1400184d1:	mov    ah,0xb1
   1400184d3:	mov    DWORD PTR [rbp-0x19ffa3b],eax
   1400184d9:	and    al,0x86
   1400184db:	mov    fs,WORD PTR [ebx+0x68]
   1400184df:	mul    BYTE PTR [rdx+rdi*8]
   1400184e2:	data16 rex.WRX movabs rax,ds:0xbeb5405e5c419c5a
   1400184ed:	mov    eax,cs
   1400184ef:	fwait
   1400184f0:	mov    dl,bl
   1400184f2:	mov    dl,0xab
   1400184f4:	push   rsi
   1400184f5:	jg     0x140018536
   1400184f7:	and    ah,ah
   1400184f9:	cs mov esi,0x2a43d856
   1400184ff:	cld    
   140018500:	jo     0x140018550
   140018502:	or     ebx,DWORD PTR [rsi+0x21]
   140018505:	push   rdi
   140018506:	adc    BYTE PTR [rsi-0x54],bh
   140018509:	test   BYTE PTR [rdi+0x2241ec2f],bl
   14001850f:	nop
   140018510:	xchg   ecx,eax
   140018511:	sub    al,0xd1
   140018513:	rex.RXB adc DWORD PTR [r8-0x1d14a03e],r8d
   14001851a:	jrcxz  0x1400184b5
   14001851c:	jle    0x140018582
   14001851e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001851f:	pop    rsi
   140018520:	(bad)  
   140018521:	rol    DWORD PTR [rbx-0x72],0x12
   140018525:	pop    rax
   140018526:	(bad)  
   140018527:	jge    0x140018549
   140018529:	(bad)  
   14001852a:	rex.WXB jne 0x140018508
   14001852d:	out    0x4a,eax
   14001852f:	(bad)  
   140018530:	rex.RX cmc 
   140018532:	shr    DWORD PTR [rip+0x28542fe3],cl        # 0x16855b51b
   140018538:	repnz adc dl,BYTE PTR [rdx+rdi*8]
   14001853c:	xchg   DWORD PTR [rdx+rdx*2],ebx
   14001853f:	or     al,0xda
   140018541:	and    al,0xc4
   140018543:	test   bl,bl
   140018545:	xchg   edx,eax
   140018546:	lea    eax,[rdx+0x2c]
   140018549:	and    BYTE PTR [rdi],bh
   14001854b:	cdq    
   14001854c:	pop    rbx
   14001854d:	xchg   edx,eax
   14001854e:	loope  0x14001850b
   140018550:	scas   eax,DWORD PTR es:[rdi]
   140018551:	(bad)  
   140018552:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018553:	or     al,cl
   140018555:	rex.XB jnp 0x14001851e
   140018558:	adc    DWORD PTR [rax],ebx
   14001855a:	push   rsp
   14001855b:	jno    0x14001859f
   14001855d:	shr    dl,1
   14001855f:	in     al,dx
   140018560:	loope  0x140018588
   140018562:	mov    WORD PTR [rcx+rdi*1-0x26],ss
   140018566:	cs rex.R mov cx,0xea91
   14001856c:	or     DWORD PTR [rsi-0xa067060],eax
   140018572:	clc    
   140018573:	sar    BYTE PTR [rdi+0x7c],1
   140018576:	mov    eax,0xfaff6bf3
   14001857b:	loope  0x140018528
   14001857d:	jg     0x14001857a
   14001857f:	(bad)  
   140018580:	mov    ecx,0x4434fdd
   140018585:	addr32 or eax,0xcfed4162
   14001858b:	adc    al,0x82
   14001858d:	sub    DWORD PTR [rbx-0x40290a0e],eax
   140018593:	je     0x14001853b
   140018595:	out    dx,eax
   140018596:	(bad)  
   140018597:	rcr    DWORD PTR [rsi+0x2f75f713],1
   14001859d:	stc    
   14001859e:	(bad)  
   14001859f:	(bad)  
   1400185a0:	out    0xdc,al
   1400185a2:	and    eax,DWORD PTR [rdi+0x2ee97363]
   1400185a8:	ret    0xd641
   1400185ab:	add    BYTE PTR [rdi+0xe],bh
   1400185ae:	or     ecx,edx
   1400185b0:	(bad)  
   1400185b1:	test   al,0xa2
   1400185b3:	iret   
   1400185b4:	jge    0x1400185dc
   1400185b6:	in     al,0xdf
   1400185b8:	fcomp  QWORD PTR [rdi+rsi*4]
   1400185bb:	movabs al,ds:0xdcfd8ebcc8294d2d
   1400185c4:	lods   al,BYTE PTR ds:[rsi]
   1400185c5:	fisttp WORD PTR [rbx+0xbc39f43]
   1400185cb:	sub    BYTE PTR [rax],dl
   1400185cd:	cli    
   1400185ce:	(bad)  
   1400185cf:	push   rdx
   1400185d0:	add    BYTE PTR [rsi+0x2819cf6d],dh
   1400185d6:	jge    0x140018587
   1400185d8:	mov    ah,0xb2
   1400185da:	xor    BYTE PTR [rdi-0x3c2709c2],dh
   1400185e0:	pop    rdi
   1400185e1:	fnstsw WORD PTR [rbp-0x37]
   1400185e4:	loope  0x1400185b7
   1400185e6:	sbb    eax,0x8baf7dbd
   1400185eb:	rex.R or esi,0xfffffff8
   1400185ef:	mov    bl,0x64
   1400185f1:	add    DWORD PTR [rsi+0x6e],eax
   1400185f4:	(bad)  
   1400185f5:	retf   0xe08b
   1400185f8:	fld    DWORD PTR [rbx]
   1400185fa:	repz (bad) 
   1400185fc:	mov    cr6,rsp
   1400185ff:	popf   
   140018600:	pop    rsi
   140018601:	je     0x140018656
   140018603:	(bad)  
   140018604:	int    0x73
   140018606:	ffreep st(1)
   140018608:	hlt    
   140018609:	jae    0x14001859a
   14001860b:	loop   0x1400185f5
   14001860d:	(bad)  
   14001860e:	ret    
   14001860f:	rex.W push rdi
   140018611:	fiadd  WORD PTR [rdx+0x6376bbbd]
   140018617:	movabs al,ds:0xd2c4db5c58c4e00e
   140018620:	sar    BYTE PTR [rax+rdi*2],cl
   140018623:	out    dx,al
   140018624:	and    al,0x46
   140018626:	data16 mov fs,WORD PTR [rbx+0x68]
   14001862a:	data16 sbb al,0x7d
   14001862d:	mov    bl,0xe3
   14001862f:	test   al,0x17
   140018631:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018632:	push   rcx
   140018633:	lods   eax,DWORD PTR ds:[rsi]
   140018634:	sub    al,0x20
   140018636:	scas   al,BYTE PTR es:[rdi]
   140018637:	(bad)  
   140018638:	and    esp,DWORD PTR [rsi-0x6e1af68b]
   14001863e:	and    al,0x1f
   140018640:	(bad)  
   140018641:	lods   al,BYTE PTR ds:[rsi]
   140018642:	sbb    BYTE PTR [rcx-0x6f],r14b
   140018646:	loopne 0x1400185eb
   140018648:	or     ah,BYTE PTR [rax-0x57ad76de]
   14001864e:	jmp    0x1400186aa
   140018650:	(bad)  
   140018651:	neg    BYTE PTR [rax+0x57e17745]
   140018657:	pop    rsi
   140018658:	ret    0xe9eb
   14001865b:	xchg   ecx,eax
   14001865c:	test   DWORD PTR [rdi+0x38],ebx
   14001865f:	add    BYTE PTR [rcx+0x5b7fe614],bl
   140018665:	clc    
   140018666:	iret   
   140018667:	and    DWORD PTR [rbx+rsi*4-0x2207a611],edi
   14001866e:	out    0x77,eax
   140018670:	clc    
   140018671:	scas   eax,DWORD PTR es:[rdi]
   140018672:	adc    eax,0x39fe647d
   140018677:	adc    eax,0xc756fa79
   14001867c:	(bad)  
   14001867d:	fsub   st(1),st
   14001867f:	(bad)  
   140018680:	sar    BYTE PTR [rax],1
   140018682:	movabs gs:0x899801968aa1eed0,al
   14001868c:	rex.W mov dl,sil
   14001868f:	adc    edx,DWORD PTR [rax]
   140018691:	scas   al,BYTE PTR es:[rdi]
   140018692:	mov    WORD PTR [rsp+riz*8-0x3a3f46f4],ds
   140018699:	jnp    0x14001869e
   14001869b:	and    bh,BYTE PTR [rax+0x32769360]
   1400186a1:	push   0xfffffffffffffff9
   1400186a3:	inc    esp
   1400186a5:	fst    DWORD PTR [rip+0xe64220]        # 0x140e7c8cb
   1400186ab:	in     al,dx
   1400186ac:	rex.RXB
   1400186ad:	rex.WRXB cmps BYTE PTR es:[rsi],BYTE PTR es:[rdi]
   1400186b0:	cmp    al,0x4a
   1400186b2:	retf   
   1400186b3:	(bad)  
   1400186b4:	out    dx,al
   1400186b5:	pop    rsi
   1400186b6:	xor    DWORD PTR [rax],0xfffffff3
   1400186b9:	int3   
   1400186ba:	(bad)  
   1400186bb:	iret   
   1400186bc:	xchg   edi,edi
   1400186be:	jmp    0x11b00961a
   1400186c3:	rex.RXB (bad) 
   1400186c5:	out    dx,eax
   1400186c6:	jnp    0x14001867c
   1400186c8:	loope  0x14001867a
   1400186ca:	xchg   BYTE PTR [rsi+rdi*8-0x7331d93b],bh
   1400186d1:	add    cl,BYTE PTR [rdx+0x24]
   1400186d4:	push   rax
   1400186d5:	(bad)  
   1400186d6:	xchg   ebp,eax
   1400186d7:	repz mov bl,0x29
   1400186da:	(bad)  
   1400186db:	(bad)  
   1400186dc:	jg     0x1400186b1
   1400186de:	add    BYTE PTR [rax+0x1e],ch
   1400186e1:	rex.WXB jnp 0x140018673
   1400186e4:	jge    0x14001868b
   1400186e6:	cmp    esi,esp
   1400186e8:	mov    DWORD PTR [rbx+0x8dcf2e3],ebx
   1400186ee:	jne    0x14001874f
   1400186f0:	rex.WRB loopne 0x1400186f1
   1400186f3:	lods   al,BYTE PTR ds:[rsi]
   1400186f4:	add    BYTE PTR [rsp+rbp*4+0x9],al
   1400186f8:	cmp    DWORD PTR [rdx-0x7ec9d9ab],ebx
   1400186fe:	(bad)  
   1400186ff:	mov    edx,0xdb2fb2b2
   140018704:	div    DWORD PTR [rsi+0x6f]
   140018707:	mov    BYTE PTR [rsi+rsi*8-0x705c17cd],r11b
   14001870f:	(bad)  
   140018710:	out    0xb2,eax
   140018712:	pop    rdi
   140018713:	sar    DWORD PTR [rcx+0x42],cl
   140018716:	(bad)  
   140018717:	fistp  WORD PTR [rdi+0x2e]
   14001871a:	rcr    BYTE PTR [rcx+0x6104edb6],0xad
   140018721:	jg     0x140018740
   140018723:	add    BYTE PTR [rip+0xffffffffc6faddd7],bh        # 0x106fc6500
   140018729:	imul   ebp,DWORD PTR [rdi],0x7f
   14001872c:	(bad)  
   14001872d:	imul   edi,edi,0x7d
   140018730:	fucomp st(1)
   140018732:	mov    ecx,0x1268c193
   140018737:	push   rax
   140018738:	xchg   ecx,eax
   140018739:	mov    al,0xf9
   14001873b:	fiadd  WORD PTR [rip+0x62003948]        # 0x1a201c089
   140018741:	imul   ebp,DWORD PTR [rdx+0x6c2a19b4],0xd4f11ac4
   14001874b:	rcr    DWORD PTR [rax+0x7d],cl
   14001874e:	repnz (bad) [rdi]
   140018751:	(bad)  
   140018752:	rcr    DWORD PTR [rcx],1
   140018754:	lahf   
   140018755:	(bad)  
   140018757:	stos   BYTE PTR es:[rdi],al
   140018758:	mov    DWORD PTR [rsi+0x430b7d91],ebx
   14001875e:	mov    ebp,0x71d6f41d
   140018763:	push   rdi
   140018764:	rex.XB cmc 
   140018766:	adc    ebp,0xb0b15d26
   14001876c:	mov    esp,0x8fcc33b4
   140018771:	movsxd esi,DWORD PTR [rax-0x12]
   140018774:	and    al,0x86
   140018776:	addr32 fs in eax,0xde
   14001877a:	push   0x7e
   14001877c:	(bad)  
   14001877d:	(bad)  
   14001877e:	repnz cmp al,0xe2
   140018781:	ficom  DWORD PTR [rdx]
   140018783:	(bad)
   140018788:	mov    WORD PTR cs:[rbx-0x56953378],?
   14001878f:	xchg   ebx,eax
   140018790:	ss hlt 
   140018792:	(bad)  
   140018793:	jbe    0x140018773
   140018795:	(bad)  
   140018796:	lods   eax,DWORD PTR ds:[rsi]
   140018797:	cmp    edi,ebx
   140018799:	rex.WR scas al,BYTE PTR es:[rdi]
   14001879b:	mov    eax,0x3b7e5893
   1400187a0:	(bad)  
   1400187a1:	(bad)  
   1400187a2:	jo     0x140018773
   1400187a4:	lea    ebx,[rdi]
   1400187a6:	sub    BYTE PTR [rdi+0x1],al
   1400187a9:	(bad)  
   1400187aa:	rex.WX
   1400187ab:	rex.XB fstp QWORD PTR [r14-0x4d]
   1400187af:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400187b0:	es (bad) 
   1400187b2:	out    0xf3,al
   1400187b4:	sbb    ebp,DWORD PTR [rdx+0x4b5fc670]
   1400187ba:	or     BYTE PTR [rbx-0x1f],0xf
   1400187be:	outs   dx,BYTE PTR ds:[rsi]
   1400187bf:	lods   eax,DWORD PTR ds:[rsi]
   1400187c0:	fcmovnb st,st(2)
   1400187c2:	pop    rdi
   1400187c3:	data16 sti 
   1400187c5:	push   rcx
   1400187c6:	fs neg ebp
   1400187c9:	sub    eax,0xc72d17b4
   1400187ce:	fist   WORD PTR [rcx-0x55e9d27a]
   1400187d4:	rex.WX sub cl,BYTE PTR [rdx-0x675975ee]
   1400187db:	add    ch,BYTE PTR [rbx]
   1400187dd:	cmp    dl,BYTE PTR [rax-0x6e]
   1400187e0:	(bad)  
   1400187e2:	in     eax,dx
   1400187e3:	sbb    al,0x58
   1400187e5:	enter  0x233f,0x4
   1400187e9:	rex.WXB neg r15b
   1400187ec:	xchg   esp,eax
   1400187ed:	(bad)  
   1400187ee:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400187ef:	(bad)  
   1400187f0:	retf   
   1400187f1:	ret    
   1400187f2:	nop
   1400187f3:	jns    0x140018842
   1400187f5:	add    DWORD PTR [rsi-0x26ba83c4],ebp
   1400187fb:	adc    BYTE PTR [rax+0xb],ah
   1400187fe:	(bad)  
   1400187ff:	popf   
   140018800:	sub    eax,0x11b0b00a
   140018805:	mov    edi,0x9dd1d1f6
   14001880a:	mov    edi,0x75be6ff5
   14001880f:	loopne 0x140018842
   140018811:	pushf  
   140018812:	fxch   st(2)
   140018814:	xchg   edi,eax
   140018815:	ret    0x980d
   140018818:	add    al,0x3e
   14001881a:	cmovb  ebp,DWORD PTR [rbp-0x19309e90]
   140018821:	adc    bl,al
   140018823:	fsub   st(5),st
   140018825:	stc    
   140018826:	push   rdi
   140018827:	cmp    eax,0x7f7aafa3
   14001882c:	cwde   
   14001882d:	cld    
   14001882e:	vpaddq ymm7,ymm12,YMMWORD PTR [rbp+rdi*1+0x1e5010f7]
   140018837:	rex or eax,0xc2f86257
   14001883d:	xor    al,0xc
   14001883f:	rex.X movabs ds:0x4b959922a4981297,eax
   140018849:	sub    BYTE PTR [rax],0xd2
   14001884c:	es xor esi,eax
   14001884f:	mov    ecx,0x33fd5ff7
   140018854:	mov    edx,0x3cf10ff5
   140018859:	leave  
   14001885a:	shr    bh,0x7f
   14001885d:	add    eax,0x208d9c00
   140018862:	xor    al,0x25
   140018864:	rcr    BYTE PTR [rcx],1
   140018866:	sbb    al,0xd9
   140018868:	cmp    eax,0xef5dcb78
   14001886d:	cld    
   14001886e:	cdq    
   14001886f:	mov    esi,0x117fa1c1
   140018874:	cmp    DWORD PTR [rsi],0xaa8d0cb
   14001887a:	ins    BYTE PTR es:[rdi],dx
   14001887b:	xchg   ebp,eax
   14001887c:	add    BYTE PTR [rax+rdx*2+0x44],ch
   140018880:	xor    DWORD PTR [rax-0x6b87394e],0x1f
   140018887:	cli    
   140018888:	fdiv   QWORD PTR [rdi]
   14001888a:	data16 lahf 
   14001888c:	jp     0x140018882
   14001888e:	fist   DWORD PTR [rbx-0x662e712b]
   140018894:	rex.WRB cmp r10b,BYTE PTR [r13-0x74c9c9ca]
   14001889b:	xor    edx,DWORD PTR [rdx-0x21]
   14001889e:	scas   al,BYTE PTR es:[rdi]
   14001889f:	mov    ebp,0xae87bdfd
   1400188a4:	mov    eax,0xede27434
   1400188a9:	rex.XB retf 
   1400188ab:	push   rbx
   1400188ac:	out    dx,eax
   1400188ad:	fnstsw WORD PTR [rip+0xffffffffbe96ea7f]        # 0xfe987332
   1400188b3:	mov    ecx,0x4fcf50f1
   1400188b8:	and    DWORD PTR [rsi],ebp
   1400188ba:	movabs al,cs:0x5742a2aeec445b5e
   1400188c4:	mov    dl,0xf8
   1400188c6:	xor    al,0xdc
   1400188c8:	sub    BYTE PTR [rsi+rbx*2+0x18f24042],ah
   1400188cf:	mov    edi,0x5f94b045
   1400188d4:	sub    edi,DWORD PTR [rdx-0xacc6f10]
   1400188da:	xor    ch,cl
   1400188dc:	and    eax,0xf6c61795
   1400188e1:	(bad)  
   1400188e2:	jb     0x1400188c3
   1400188e4:	fild   WORD PTR [rip+0xffffffff8e5d0dd9]        # 0xce5e96c3
   1400188ea:	stos   DWORD PTR es:[rdi],eax
   1400188eb:	sbb    esp,DWORD PTR [rdx]
   1400188ed:	add    BYTE PTR [rsp+rax*8],ch
   1400188f0:	xchg   esi,eax
   1400188f1:	sub    eax,0xcab6407a
   1400188f6:	xchg   edx,eax
   1400188f7:	push   rax
   1400188f8:	(bad)  
   1400188f9:	cmp    esi,edx
   1400188fb:	(bad)  
   1400188fc:	in     eax,0x7b
   1400188fe:	mov    dl,0xf7
   140018900:	data16 stc 
   140018902:	leave  
   140018903:	mov    al,BYTE PTR [rbx-0x75947de0]
   140018909:	rex.WX fld QWORD PTR [rdx+r9*2-0x6375fe6f]
   140018911:	add    DWORD PTR [rbx-0x4e952bc4],ecx
   140018917:	mov    bh,0x36
   140018919:	std    
   14001891a:	hlt    
   14001891b:	movsxd ebx,DWORD PTR [rax+0x6f]
   14001891e:	jge    0x140018908
   140018920:	jge    0x14001894a
   140018922:	rex.WB or BYTE PTR [r15+0x2],bpl
   140018926:	(bad)  
   140018927:	(bad)  
   140018928:	movabs al,ds:0xcfec1a2817f5735a
   140018931:	add    al,0xa0
   140018933:	(bad)  
   140018934:	jp     0x1400188c0
   140018936:	retf   0x780d
   140018939:	imul   esi,eax,0x36
   14001893c:	or     DWORD PTR [rax],ecx
   14001893e:	stc    
   14001893f:	fs jrcxz 0x14001891b
   140018942:	test   esi,ecx
   140018944:	jg     0x140018940
   140018946:	test   eax,0xbbf43ebf
   14001894b:	(bad)  
   14001894c:	int3   
   14001894d:	imul   BYTE PTR [rsi]
   14001894f:	and    BYTE PTR [rbx],cl
   140018951:	(bad)  
   140018952:	push   rsi
   140018953:	loope  0x140018924
   140018955:	movabs al,ds:0xb02be7d9fd08f9fc
   14001895e:	pop    rbp
   14001895f:	adc    DWORD PTR [rdx+rax*8-0x122b3c24],esi
   140018966:	push   QWORD PTR [rax-0x19]
   140018969:	icebp  
   14001896a:	(bad)  
   14001896b:	mov    edi,0x3e7ed686
   140018970:	xor    BYTE PTR [rdi],cl
   140018972:	and    eax,0xd272070d
   140018977:	inc    BYTE PTR [rax+0x1176197a]
   14001897d:	(bad)  
   14001897e:	adc    dl,BYTE PTR [rsp+rax*8-0x70]
   140018982:	cld    
   140018983:	jnp    0x1400189da
   140018985:	adc    ah,cl
   140018987:	pop    rax
   140018988:	rex.RB clc 
   14001898a:	loop   0x1400189bb
   14001898c:	repnz imul edi,edi,0xffffffdb
   140018990:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018991:	xor    DWORD PTR [rax-0x9],esp
   140018994:	js     0x1400189e4
   140018996:	xor    dh,al
   140018998:	xchg   ebp,eax
   140018999:	movabs eax,ds:0x151ae8411b38000
   1400189a2:	hlt    
   1400189a3:	fdiv   st(2),st
   1400189a5:	mov    dh,0x77
   1400189a7:	mov    esi,0x43c1ef65
   1400189ac:	mov    edi,0x1d7d6212
   1400189b1:	adc    eax,edx
   1400189b3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400189b4:	mov    BYTE PTR [rdx-0x5aa3f77b],bl
   1400189ba:	cmp    BYTE PTR [rbx-0x20894544],bh
   1400189c0:	int3   
   1400189c1:	leave  
   1400189c2:	mov    cl,0x3f
   1400189c4:	jnp    0x1400189b0
   1400189c6:	scas   eax,DWORD PTR es:[rdi]
   1400189c7:	mov    edi,0xcce30f0
   1400189cc:	in     eax,dx
   1400189cd:	ins    BYTE PTR es:[rdi],dx
   1400189ce:	fld    TBYTE PTR [rdx-0x9281443]
   1400189d4:	ja     0x1400189b5
   1400189d6:	mov    ecx,0x3fe4ee7b
   1400189db:	out    dx,eax
   1400189dc:	lods   al,BYTE PTR ds:[rsi]
   1400189dd:	int3   
   1400189de:	(bad)  
   1400189e0:	pop    rcx
   1400189e1:	pop    rbp
   1400189e2:	rex fcomp QWORD PTR [rbp+rax*2-0x3b]
   1400189e7:	pop    rbp
   1400189e8:	push   rsp
   1400189e9:	(bad)  
   1400189ea:	or     cl,cl
   1400189ec:	mov    edx,0xfd8d24f8
   1400189f1:	addr32 mov dl,0xcf
   1400189f4:	or     DWORD PTR [rip+0x2a116a15],esi        # 0x16a12f40f
   1400189fa:	sub    DWORD PTR [rbp-0x3ecf13da],0xe03c05f3
   140018a04:	jno    0x140018a01
   140018a06:	sbb    al,0xf6
   140018a08:	retf   
   140018a09:	movabs eax,fs:0x5df8633ea169e22d
   140018a13:	clc    
   140018a14:	xor    ecx,0x5
   140018a17:	(bad)  
   140018a18:	xor    ebx,edx
   140018a1a:	ja     0x14001899c
   140018a1c:	sti    
   140018a1d:	cmc    
   140018a1e:	fnstenv [rdx]
   140018a20:	(bad)  
   140018a21:	push   rcx
   140018a22:	add    eax,0xc960d815
   140018a27:	sbb    DWORD PTR ds:[rip+0xffffffff96e58bfa],0xefcf466c        # 0xd6e7162c
   140018a32:	push   rdi
   140018a33:	mul    DWORD PTR [rbx]
   140018a35:	sbb    bh,BYTE PTR [rdi-0x60]
   140018a38:	test   al,0x82
   140018a3a:	stos   BYTE PTR es:[rdi],al
   140018a3b:	cld    
   140018a3c:	cmp    dl,BYTE PTR [rsi-0x38]
   140018a3f:	mov    al,0x1f
   140018a41:	stos   BYTE PTR es:[rdi],al
   140018a42:	add    BYTE PTR [rsi+rdx*4],dl
   140018a45:	mov    bl,0xde
   140018a47:	(bad)  
   140018a48:	sub    DWORD PTR [rbx],ebx
   140018a4a:	push   0xffffffffffffffbe
   140018a4c:	(bad)  
   140018a4d:	ss rex sub ecx,DWORD PTR ds:[rbx]
   140018a52:	add    eax,0x30029bf2
   140018a57:	clc    
   140018a58:	retf   
   140018a59:	test   DWORD PTR [rbx],esp
   140018a5b:	sbb    esi,edx
   140018a5d:	addr32 mov dh,0xf
   140018a60:	add    ebx,DWORD PTR [rbx]
   140018a62:	movsxd r11,DWORD PTR [rdi+0x3a]
   140018a66:	xor    eax,0xf8ff6bf0
   140018a6b:	mov    edx,DWORD PTR [rdi+0x19621e7e]
   140018a71:	rex.WXB loope 0x140018a53
   140018a74:	rex.WRX
   140018a75:	bnd jge 0x140018a27
   140018a78:	(bad)  
   140018a79:	jg     0x140018a21
   140018a7b:	lods   eax,DWORD PTR ds:[rsi]
   140018a7c:	lea    esp,[rax-0x31]
   140018a7f:	rex.R ins BYTE PTR es:[rdi],dx
   140018a81:	ja     0x140018b01
   140018a83:	mov    ebp,0xbbb6f67e
   140018a88:	ret    0x6fdc
   140018a8b:	hlt    
   140018a8c:	jb     0x140018a85
   140018a8e:	xor    eax,0x1baac6e2
   140018a93:	rex
   140018a94:	lock jo 0x140018a36
   140018a97:	test   eax,0x2f6f4683
   140018a9c:	rex push rax
   140018a9e:	and    ah,0xbf
   140018aa1:	mov    al,0x67
   140018aa3:	and    DWORD PTR [rdi-0x67],esi
   140018aa6:	mov    ebx,0x7bc8d10f
   140018aab:	jle    0x140018a46
   140018aad:	pop    rdi
   140018aae:	std    
   140018aaf:	rex.WRB in al,0x9c
   140018ab2:	xor    BYTE PTR [rbx-0x60207e6e],0x1c
   140018ab9:	rcr    BYTE PTR [rcx-0x7bec8c4a],0x9
   140018ac0:	sbb    dil,BYTE PTR [rdi]
   140018ac3:	cli    
   140018ac4:	fdivr  st(1),st
   140018ac6:	xchg   ebp,eax
   140018ac7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018ac8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018ac9:	rex.WRXB out dx,al
   140018acb:	cmp    BYTE PTR [rax+0x68],dh
   140018ace:	cwde   
   140018acf:	cmp    edi,DWORD PTR [rbp-0x7f791551]
   140018ad5:	outs   dx,BYTE PTR ds:[rsi]
   140018ad6:	ret    
   140018ad7:	(bad)  
   140018ad8:	(bad)  
   140018ad9:	push   rdi
   140018ada:	(bad)  
   140018adb:	jmp    FWORD PTR [rax-0x14]
   140018ade:	test   eax,0xd1f37e27
   140018ae3:	iret   
   140018ae4:	jge    0x140018ac8
   140018ae6:	movabs ds:0x4afec2592d4763d3,eax
   140018aef:	sbb    BYTE PTR [rax+0x1f73ffd5],bh
   140018af5:	jo     0x140018b59
   140018af7:	xor    edi,DWORD PTR [rbx+rdi*4]
   140018afa:	rex popf 
   140018afc:	rex.WRXB out dx,al
   140018afe:	pop    rdx
   140018aff:	popf   
   140018b00:	pop    rcx
   140018b01:	out    dx,eax
   140018b02:	pop    rbp
   140018b03:	pop    rdi
   140018b04:	mov    esp,0x4b5346a9
   140018b09:	cmp    al,0x5f
   140018b0b:	jb     0x140018b06
   140018b0d:	sub    ebp,DWORD PTR [rdx+0x64]
   140018b10:	add    DWORD PTR [rdi],ecx
   140018b12:	retf   
   140018b13:	out    dx,al
   140018b14:	and    esp,DWORD PTR [rcx]
   140018b16:	sti    
   140018b17:	lods   al,BYTE PTR ds:[rsi]
   140018b18:	movabs ds:0xc27ad1d9b32f844f,al
   140018b21:	xchg   ebp,eax
   140018b22:	ret    0x640f
   140018b25:	rex.W int 0x4a
   140018b28:	rol    cl,cl
   140018b2a:	rex.W cmp al,0x72
   140018b2d:	loope  0x140018ae6
   140018b2f:	js     0x140018aec
   140018b31:	or     BYTE PTR [rbp-0x10],bl
   140018b34:	push   rax
   140018b35:	lahf   
   140018b36:	cmc    
   140018b37:	(bad)  
   140018b38:	unpcklps xmm6,XMMWORD PTR [rbp+0x30e7013]
   140018b3f:	rex.RX sub r10b,BYTE PTR [rsi]
   140018b42:	out    0xf0,al
   140018b44:	adc    eax,0x9f63337d
   140018b49:	xchg   ebx,eax
   140018b4a:	jle    0x140018b70
   140018b4c:	sbb    BYTE PTR [rbx],r13b
   140018b4f:	rex.WRB adc BYTE PTR [r10-0x1f],r10b
   140018b53:	mov    tr7,esp
   140018b56:	or     sil,r8b
   140018b59:	sbb    DWORD PTR [rax-0x16acf35a],edx
   140018b5f:	rex.WX
   140018b60:	repnz xor DWORD PTR fs:[rax],ebx
   140018b64:	imul   ecx,DWORD PTR [r10],0x9bcd1484
   140018b6b:	lock (bad) 
   140018b6d:	or     al,BYTE PTR [rax+0x7b00cf8a]
   140018b73:	scas   eax,DWORD PTR es:[rdi]
   140018b74:	popf   
   140018b75:	jno    0x140018bc4
   140018b77:	sbb    DWORD PTR [rax+0x15],eax
   140018b7a:	or     BYTE PTR [rsi],0xba
   140018b7d:	pop    rbx
   140018b7e:	js     0x140018bf3
   140018b80:	add    eax,0x33e9b2c8
   140018b85:	xlat   BYTE PTR ds:[rbx]
   140018b86:	xor    edi,DWORD PTR [rdi+0x3bf6bf19]
   140018b8c:	rex.WRXB out dx,al
   140018b8e:	cli    
   140018b8f:	test   edi,edi
   140018b91:	icebp  
   140018b92:	inc    BYTE PTR [rbx-0x41f7bff1]
   140018b98:	rcl    bh,cl
   140018b9a:	(bad)  
   140018b9b:	sub    eax,0x5fe08bf
   140018ba0:	pop    rax
   140018ba1:	jno    0x140018b5a
   140018ba3:	mov    ch,0x9d
   140018ba5:	addr32 (bad) 
   140018ba7:	add    ah,al
   140018ba9:	(bad)  
   140018baa:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018bab:	pop    rbp
   140018bac:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018bad:	(bad)  
   140018bae:	jb     0x140018b8f
   140018bb0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018bb1:	outs   dx,BYTE PTR ds:[rsi]
   140018bb2:	or     DWORD PTR [rbx+0x79a9fafb],ecx
   140018bb8:	xor    eax,0x156fd33b
   140018bbd:	(bad)  
   140018bbe:	jp     0x140018b5b
   140018bc0:	neg    dl
   140018bc2:	call   0xd401d857
   140018bc7:	or     edx,ebx
   140018bc9:	xchg   BYTE PTR [rsi-0x12],bh
   140018bcc:	scas   al,BYTE PTR es:[rdi]
   140018bcd:	fisttp QWORD PTR [rbx-0x30d7a0bd]
   140018bd3:	jno    0x140018b8b
   140018bd5:	sti    
   140018bd6:	jp     0x140018bbd
   140018bd8:	and    BYTE PTR [rax+0x12eedb72],al
   140018bde:	ins    BYTE PTR es:[rdi],dx
   140018bdf:	in     eax,0x6
   140018be1:	(bad)  
   140018be2:	pop    rbx
   140018be3:	fdivrp st(3),st
   140018be5:	pandn  mm1,mm6
   140018be8:	int3   
   140018be9:	jno    0x140018bd7
   140018beb:	mov    cl,0x87
   140018bed:	out    dx,eax
   140018bee:	lahf   
   140018bef:	(bad)  
   140018bf0:	cmp    esi,DWORD PTR [rdx+0x5b50b680]
   140018bf6:	xor    eax,ebp
   140018bf8:	(bad)  
   140018bf9:	cmp    ch,BYTE PTR [rdi]
   140018bfb:	xor    BYTE PTR [rsi+0x286db648],dl
   140018c01:	rex (bad) 
   140018c03:	fnstsw WORD PTR [rcx+0x6fbbea7d]
   140018c09:	ds mov esp,0xf6bffe32
   140018c0f:	jo     0x140018c08
   140018c11:	or     cl,BYTE PTR [rcx-0x4e1cbc0]
   140018c17:	pop    QWORD PTR [rax+0x4cadca5a]
   140018c1d:	(bad)  
   140018c1e:	gs call 0x15bf71532
   140018c24:	in     al,dx
   140018c25:	and    eax,0x4f935d26
   140018c2a:	or     al,BYTE PTR [rax+rax*1+0x4264008b]
   140018c31:	rex.WRB out 0x7f,al
   140018c34:	adc    edx,ebp
   140018c36:	push   rbx
   140018c37:	ja     0x140018bb9
   140018c39:	or     eax,0xb30a93ea
   140018c3e:	mov    edx,0x59b0a50a
   140018c43:	(bad)  
   140018c44:	(bad)  
   140018c45:	sub    edi,ebp
   140018c47:	adc    eax,0xd0b50064
   140018c4c:	rex.X sbb BYTE PTR [rdx-0x6c],bl
   140018c50:	rex iret 
   140018c52:	imul   ebx,ecx,0x87bbea7a
   140018c58:	and    BYTE PTR [rbx+0x41a45914],ch
   140018c5e:	sar    BYTE PTR [rdi-0x70],1
   140018c61:	sahf   
   140018c62:	add    eax,DWORD PTR [rbp+0x3c9227b5]
   140018c68:	add    DWORD PTR [rdi-0x6],ecx
   140018c6b:	add    DWORD PTR [rbp+rcx*1-0x40],edi
   140018c6f:	xor    dh,ah
   140018c71:	rex.RXB add BYTE PTR [r10-0x7b09e88f],r10b
   140018c78:	lods   eax,DWORD PTR ds:[rsi]
   140018c79:	rex.WR pop rcx
   140018c7b:	mov    DWORD PTR [rax+0x43],eax
   140018c7e:	add    eax,0x3ffe140
   140018c83:	movabs al,ds:0xac2b0b14816165a0
   140018c8c:	xor    cl,BYTE PTR [rbp-0x2fd446c0]
   140018c92:	in     al,0x66
   140018c94:	cmc    
   140018c95:	(bad)  
   140018c96:	(bad)  
   140018c97:	div    DWORD PTR [rbp-0x605407d]
   140018c9d:	icebp  
   140018c9e:	sbb    eax,0x5f82c833
   140018ca3:	sub    dh,BYTE PTR [rsi+0x39]
   140018ca6:	rol    BYTE PTR [rbp-0x2518074c],0xce
   140018cad:	outs   dx,DWORD PTR ds:[rsi]
   140018caf:	or     eax,0xdbdef40d
   140018cb4:	jns    0x140018c9e
   140018cb6:	pop    rdi
   140018cb7:	(bad)  
   140018cb8:	out    0x8d,al
   140018cba:	lahf   
   140018cbb:	(bad)  
   140018cbc:	push   rbx
   140018cbd:	rex.W in al,dx
   140018cbf:	and    eax,0x6ad99e70
   140018cc4:	cdq    
   140018cc5:	add    BYTE PTR [rax-0x46f1e434],0xdd
   140018ccc:	cwde   
   140018ccd:	std    
   140018cce:	ins    DWORD PTR es:[rdi],dx
   140018ccf:	xor    BYTE PTR [rdi+0x7b2f847e],cl
   140018cd5:	out    0x9f,eax
   140018cd7:	loopne 0x140018ca9
   140018cd9:	cmp    dh,cl
   140018cdb:	xchg   ebx,eax
   140018cdc:	sbb    eax,edi
   140018cde:	retf   0x41
   140018ce1:	in     eax,0xb6
   140018ce3:	pop    rbp
   140018ce4:	stos   DWORD PTR es:[rdi],eax
   140018ce5:	fisubr DWORD PTR [rbx-0x2d]
   140018ce8:	js     0x140018cc7
   140018cea:	push   rbx
   140018ceb:	iret   
   140018cec:	cmp    al,0xf1
   140018cee:	int3   
   140018cef:	test   eax,0x6a789e67
   140018cf4:	jne    0x140018d57
   140018cf6:	outs   dx,BYTE PTR ds:[rsi]
   140018cf7:	or     ecx,ebx
   140018cf9:	retf   0xc59b
   140018cfc:	(bad)  
   140018cfd:	(bad)  
   140018cfe:	rex.B test eax,0xf2c4ce0c
   140018d04:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140018d05:	lods   eax,DWORD PTR ds:[rsi]
   140018d06:	fistp  WORD PTR [rdi+0x227fdfe8]
   140018d0c:	jb     0x140018d08
   140018d0e:	fidivr DWORD PTR [rsi+0x7b9bf9f5]
   140018d14:	rcr    ch,1
   140018d16:	(bad)  
   140018d17:	mov    ecx,0x2fd585fe
   140018d1c:	test   bh,bl
   140018d1e:	jb     0x140018d12
   140018d20:	mov    ebp,0x71320f0a
   140018d25:	leave  
   140018d26:	(bad)  
   140018d27:	ins    BYTE PTR es:[rdi],dx
   140018d28:	js     0x140018d0a
   140018d2a:	mov    ?,WORD PTR [rbx+0xf7125f5]
   140018d30:	rex.WR clc 
   140018d32:	add    DWORD PTR [rcx+0x8],edx
   140018d35:	mov    cl,0x52
   140018d37:	add    DWORD PTR [rcx+rsi*4+0x7abaede8],0xb901489
   140018d42:	push   rsi
   140018d43:	xor    al,0xc2
   140018d45:	rex.WRXB std 
   140018d47:	clc    
   140018d48:	sub    bl,BYTE PTR [rax+0x53]
   140018d4b:	rex.WRXB movabs r8,0x130a21a27ad5b685
   140018d55:	(bad)  
   140018d56:	adc    eax,0xb04e3b7e
   140018d5b:	fs lahf 
   140018d5d:	(bad)  
   140018d5e:	retf   0x9a02
   140018d61:	in     eax,dx
   140018d62:	(bad)  
   140018d63:	ja     0x140018d6c
   140018d65:	mov    esp,0x15c02076
   140018d6a:	push   rbp
   140018d6b:	fdecstp 
   140018d6d:	retf   
   140018d6e:	jae    0x140018d86
   140018d70:	fdiv   st(2),st
   140018d72:	(bad)  
   140018d74:	stc    
   140018d75:	cmp    esp,ebx
   140018d77:	rex.X cwde 
   140018d79:	sub    al,0xa2
   140018d7b:	push   rcx
   140018d7c:	mov    eax,0x3b3c8002
   140018d81:	rex rol DWORD PTR [rcx-0x1de08f],1
   140018d88:	(bad)  
   140018d89:	add    eax,0x5cba3c36
   140018d8e:	std    
   140018d8f:	ficomp WORD PTR [rbp-0x9]
   140018d92:	pop    rbp
   140018d93:	cmc    
   140018d94:	jmp    0x140018e15
   140018d96:	xor    edx,edi
   140018d98:	cmp    ecx,DWORD PTR [rdi-0x15320694]
   140018d9e:	addr32 xchg edi,eax
   140018da0:	out    dx,eax
   140018da1:	in     eax,0x12
   140018da3:	jle    0x140018d85
   140018da5:	mov    esp,0xe0016c2b
   140018daa:	jnp    0x140018d47
   140018dac:	add    ecx,DWORD PTR [rdi]
   140018dae:	mov    esp,0x1a9dce39
   140018db3:	movabs eax,ds:0x839a6ab5149337cd
   140018dbc:	repnz sbb eax,0x430fd1c8
   140018dc2:	add    dh,cl
   140018dc4:	adc    al,0x68
   140018dc6:	or     BYTE PTR [rcx+0x697b4318],bl
   140018dcc:	jrcxz  0x140018d77
   140018dce:	mov    edi,0xcb4781c0
   140018dd3:	movsxd ebx,DWORD PTR [rdi+0x32bc0509]
   140018dd9:	adc    DWORD PTR [rax-0x47],eax
   140018ddc:	popf   
   140018ddd:	fld    st(7)
   140018ddf:	mov    dl,0xd7
   140018de1:	mov    dh,0x9d
   140018de3:	sub    eax,0x9f76737c
   140018de8:	scas   eax,DWORD PTR es:[rdi]
   140018de9:	rex.WRB in al,0xd8
   140018dec:	icebp  
   140018ded:	rex.WX
   140018dee:	repnz mov cl,0xe7
   140018df1:	mov    edx,0xef87a385
   140018df6:	cwde   
   140018df7:	jnp    0x140018ded
   140018df9:	ret    
   140018dfa:	std    
   140018dfb:	mov    esp,0xf0456b71
   140018e00:	(bad)  
   140018e01:	ds rex.RX
   140018e03:	sbb    r10,QWORD PTR [rcx]
   140018e06:	(bad)  
   140018e07:	(bad)  
   140018e08:	scas   eax,DWORD PTR es:[rdi]
   140018e09:	sub    DWORD PTR [rdi-0x55],esi
   140018e0c:	(bad)  
   140018e0d:	cdq    
   140018e0e:	add    esi,eax
   140018e10:	lods   al,BYTE PTR ds:[rsi]
   140018e11:	cmp    eax,0xadff4213
   140018e16:	push   0xffffffffa4d58379
   140018e1b:	adc    edi,DWORD PTR [rsi]
   140018e1d:	scas   al,BYTE PTR es:[rdi]
   140018e1f:	(bad)  
   140018e20:	loop   0x140018e11
   140018e22:	out    0x8b,al
   140018e24:	xchg   edi,eax
   140018e25:	xor    eax,0x3f09c1fd
   140018e2a:	retf   0x3921
   140018e2d:	fist   DWORD PTR [rdi-0x75]
   140018e30:	js     0x140018dde
   140018e32:	rol    DWORD PTR [rdi+0x7ef1ff75],1
   140018e38:	add    BYTE PTR [rdx+0x3f3ee3ec],bl
   140018e3e:	cdq    
   140018e3f:	jmp    0x140018dd3
   140018e41:	mov    ecx,0x62006f05
   140018e46:	(bad)  
   140018e47:	or     eax,0x8b14309a
   140018e4c:	jrcxz  0x140018e52
   140018e4e:	and    ebp,DWORD PTR [rip+0x3fbc0d59]        # 0x17fbd9bad
   140018e54:	sbb    BYTE PTR [rax-0x23],bh
   140018e57:	jg     0x140018eae
   140018e59:	(bad)  
   140018e5a:	hlt    
   140018e5b:	adc    eax,0xeced4525
   140018e60:	rex.XB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018e62:	adc    DWORD PTR [rdx],eax
   140018e64:	mul    bh
   140018e66:	add    edx,DWORD PTR [rdx+0x1bee4ee8]
   140018e6c:	rol    BYTE PTR [rip+0xffffffff88802366],0x9f        # 0xc881b1d9
   140018e73:	pop    rax
   140018e74:	call   0x12f80ae75
   140018e79:	adc    edx,DWORD PTR [rdi-0x3]
   140018e7c:	(bad)  
   140018e7d:	shl    DWORD PTR fs:[rdi],0x17
   140018e81:	(bad)  
   140018e82:	adc    edi,DWORD PTR [rbp+0x2f]
   140018e85:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018e86:	loopne 0x140018e27
   140018e88:	imul   ebx,ebx,0x3e4b6f3e
   140018e8e:	stos   DWORD PTR es:[rdi],eax
   140018e8f:	idiv   DWORD PTR [rdi]
   140018e91:	(bad)  
   140018e92:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018e93:	(bad)  
   140018e95:	(bad)  
   140018e96:	(bad)  
   140018e97:	std    
   140018e98:	fild   QWORD PTR [rdx-0x1a]
   140018e9b:	and    DWORD PTR [rdx],0xfffffff5
   140018e9e:	cmp    DWORD PTR [rcx],esi
   140018ea0:	enter  0xb026,0xd1
   140018ea4:	sbb    eax,0xb645b56
   140018ea9:	mov    esp,DWORD PTR [rsi+rax*1]
   140018eac:	push   rsi
   140018ead:	cmp    BYTE PTR [rcx+rsi*8-0x61],bh
   140018eb1:	loope  0x140018e89
   140018eb3:	(bad)  
   140018eb4:	fwait
   140018eb5:	rex.RB mov r13d,0x8190738c
   140018ebb:	scas   eax,DWORD PTR es:[rdi]
   140018ebc:	rex.WR add al,0x50
   140018ebf:	outs   dx,BYTE PTR ds:[rsi]
   140018ec0:	scas   eax,DWORD PTR es:[edi]
   140018ec2:	sub    al,0x3c
   140018ec4:	push   rbx
   140018ec5:	(bad)  
   140018ec6:	rex.RX (bad) 
   140018ec8:	jle    0x140018ebd
   140018eca:	test   esi,0xe76df3e6
   140018ed0:	sbb    al,0xec
   140018ed2:	jg     0x140018efb
   140018ed4:	mov    esp,DWORD PTR [rsi+0x1a57867b]
   140018eda:	or     bh,BYTE PTR [rdi+0x7d]
   140018edd:	js     0x140018f42
   140018edf:	(bad)  
   140018ee0:	or     eax,0xcb7ef135
   140018ee5:	stos   BYTE PTR es:[rdi],al
   140018ee6:	adc    ebx,DWORD PTR [rdi+0x3e]
   140018ee9:	or     ecx,DWORD PTR [rbx+rsi*1+0x5bdacefd]
   140018ef0:	fdivr  QWORD PTR [rdi]
   140018ef2:	(bad)  
   140018ef3:	rol    BYTE PTR [rbx-0x6aae0606],1
   140018ef9:	rex.R
   140018efa:	rex.WRX xlat BYTE PTR ds:[rbx]
   140018efc:	xor    eax,0xba773f9f
   140018f01:	adc    DWORD PTR [rcx],eax
   140018f03:	mov    ch,0xda
   140018f05:	cli    
   140018f06:	nop
   140018f07:	jge    0x140018f7c
   140018f09:	gs sti 
   140018f0b:	int    0xf2
   140018f0d:	fwait
   140018f0e:	xor    bh,al
   140018f10:	push   0x4534061
   140018f15:	rex.RB fmul DWORD PTR [r14]
   140018f18:	(bad)  
   140018f19:	movabs ds:0xb4918fe1104dcc1b,al
   140018f22:	lods   eax,DWORD PTR ds:[rsi]
   140018f23:	cwde   
   140018f24:	jno    0x140018f32
   140018f26:	sub    al,BYTE PTR [r9]
   140018f29:	add    edi,DWORD PTR [rdi+riz*4]
   140018f2c:	fist   WORD PTR [rdx+0x7e]
   140018f2f:	in     eax,dx
   140018f30:	ja     0x140018f6b
   140018f32:	xchg   edx,eax
   140018f33:	add    BYTE PTR [rdi+0x34],cl
   140018f36:	repnz mov al,0x9f
   140018f39:	sbb    DWORD PTR [rax-0x7d],esi
   140018f3c:	cmp    BYTE PTR [rax+0x20aa40ba],al
   140018f42:	add    DWORD PTR [rcx+0x3],0x14
   140018f46:	sti    
   140018f47:	(bad)  
   140018f48:	rex.WR movabs rsi,0x14c7d9092d72892b
   140018f52:	add    BYTE PTR [rbx],dl
   140018f54:	lods   eax,DWORD PTR ds:[rsi]
   140018f55:	jg     0x140018fce
   140018f57:	scas   al,BYTE PTR es:[rdi]
   140018f58:	out    dx,eax
   140018f59:	(bad)  
   140018f5a:	fdivp  st(2),st
   140018f5c:	leave  
   140018f5d:	sub    edi,DWORD PTR [rdi+0x1f]
   140018f60:	addr32 (bad) 
   140018f62:	(bad)  
   140018f63:	xchg   edi,eax
   140018f64:	(bad)  
   140018f65:	repnz lahf 
   140018f67:	imul   edi,DWORD PTR [rbx],0x7b
   140018f6a:	imul   edi,DWORD PTR [rbx+rax*1],0xeef0cfe0
   140018f71:	mov    cl,0x4b
   140018f73:	mov    al,0xfe
   140018f75:	popf   
   140018f76:	sub    eax,edx
   140018f78:	(bad)  
   140018f79:	in     eax,dx
   140018f7a:	xor    eax,0xbfa0a230
   140018f7f:	and    BYTE PTR [rsi],bh
   140018f81:	mov    WORD PTR [rdi],?
   140018f83:	es out 0x4a,eax
   140018f86:	sub    al,0x8f
   140018f88:	add    BYTE PTR [rax],al
   140018f8a:	and    dl,dl
   140018f8c:	movabs eax,ds:0x71dec39f33f568ab
   140018f95:	pushf  
   140018f96:	and    esp,DWORD PTR [rdi]
   140018f98:	loopne 0x140018f2f
   140018f9a:	scas   eax,DWORD PTR es:[rdi]
   140018f9b:	add    BYTE PTR [rax+0x3083d3e7],al
   140018fa1:	or     ebp,esi
   140018fa3:	or     esp,DWORD PTR [rip+0x3e4ece7a]        # 0x17e505e23
   140018fa9:	add    al,BYTE PTR [rax]
   140018fab:	rex.WRXB hlt 
   140018fad:	in     al,dx
   140018fae:	pop    rdx
   140018faf:	scas   al,BYTE PTR es:[rdi]
   140018fb0:	sar    DWORD PTR [rbx+rsi*8-0x6e],1
   140018fb4:	int    0xd9
   140018fb6:	mov    ebx,0x15b0f06a
   140018fbb:	jrcxz  0x140018fc1
   140018fbd:	retf   
   140018fbe:	retf   0xd833
   140018fc1:	stos   DWORD PTR es:[rdi],eax
   140018fc2:	(bad)  
   140018fc3:	xor    al,0x32
   140018fc5:	jmp    0x1415ae674
   140018fca:	add    al,0x85
   140018fcc:	cld    
   140018fcd:	rex.RX idiv BYTE PTR [rcx+0x3d]
   140018fd1:	mov    edi,0x9944d8fa
   140018fd6:	or     al,0xc
   140018fd8:	pop    rsi
   140018fd9:	jne    0x140019002
   140018fdb:	retf   0x72a0
   140018fde:	rex.RB xchg r8d,eax
   140018fe0:	test   DWORD PTR [rdi+0x5c],ebx
   140018fe3:	(bad)  
   140018fe4:	rex.RX push rbp
   140018fe6:	add    eax,0x3657cfef
   140018feb:	loop   0x140018fa1
   140018fed:	push   rbp
   140018fee:	jns    0x140018fcd
   140018ff0:	out    dx,eax
   140018ff1:	xlat   BYTE PTR ds:[rbx]
   140018ff2:	add    bl,BYTE PTR [rax+riz*4-0x38617c51]
   140018ff9:	or     DWORD PTR [rdx+0x2f],eax
   140018ffc:	sbb    eax,0x6c1e5ca6
   140019001:	xlat   BYTE PTR ds:[rbx]
   140019002:	rex.WB enter 0xbf21,0xa0
   140019007:	xchg   ebx,eax
   140019008:	iret   
   140019009:	jl     0x140019008
   14001900b:	adc    ch,dh
   14001900d:	jmp    0x140018fcc
   14001900f:	jb     0x140019052
   140019011:	test   BYTE PTR [rdx+0x3655ef2e],dl
   140019017:	sti    
   140019018:	hlt    
   140019019:	adc    al,0x60
   14001901b:	mov    bh,0xf8
   14001901d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001901e:	fadd   QWORD PTR [rax+0x78263998]
   140019024:	sub    BYTE PTR [rbp+rdi*8-0x31f0e4b9],dh
   14001902b:	hlt    
   14001902c:	std    
   14001902d:	sti    
   14001902e:	ja     0x1400190ac
   140019030:	cli    
   140019031:	mov    bh,BYTE PTR [rdi]
   140019033:	rex.RX pop rbx
   140019035:	clc    
   140019036:	mov    bh,0x13
   140019038:	jge    0x140019019
   14001903a:	(bad)  
   14001903b:	pop    rbx
   14001903c:	jnp    0x1400190ac
   14001903e:	add    DWORD PTR [rbx-0x1a],ebx
   140019041:	xlat   BYTE PTR ds:[rbx]
   140019042:	push   rdi
   140019043:	js     0x1400190a9
   140019045:	movabs ds:0x6b5be58f5cafa46,al
   14001904e:	out    dx,eax
   14001904f:	(bad)  
   140019050:	push   rbp
   140019051:	jbe    0x140018ffd
   140019053:	es or  edx,edx
   140019056:	sub    dh,bl
   140019058:	(bad)  
   140019059:	mov    esi,0x747ec511
   14001905e:	xlat   BYTE PTR ds:[rbx]
   14001905f:	out    dx,eax
   140019060:	(bad)
   140019063:	jrcxz  0x140019081
   140019065:	fs loopne 0x140019093
   140019068:	fild   WORD PTR [rip+0xffffffffedb73978]        # 0x12db8c9e6
   14001906e:	rex.WB
   14001906f:	rex.WB sbb rax,0xffffffffef7b6428
   140019075:	in     al,dx
   140019076:	mov    bh,0x6e
   140019078:	jg     0x14001906f
   14001907a:	repnz icebp 
   14001907c:	(bad)  
   14001907d:	mov    WORD PTR [rcx],es
   14001907f:	sbb    esi,0xffffffe6
   140019082:	sbb    dh,BYTE PTR [rdx+0x58f727b7]
   140019088:	jl     0x140019069
   14001908a:	jge    0x140019044
   14001908c:	adc    dh,dl
   14001908e:	ret    
   14001908f:	std    
   140019090:	cmp    ah,BYTE PTR [rbx-0x2c]
   140019093:	lods   eax,DWORD PTR ds:[rsi]
   140019094:	ja     0x140019055
   140019096:	or     DWORD PTR [rdx+0x62f4f637],eax
   14001909c:	movabs al,ds:0x8f42dfd064f6e390
   1400190a5:	mov    ah,0x9b
   1400190a8:	(bad)
   1400190ab:	rex.WB retf 0x6016
   1400190af:	sar    DWORD PTR [rdx],0xc
   1400190b2:	adc    DWORD PTR [rcx+rcx*4+0x58],ebx
   1400190b6:	retf   
   1400190b7:	outs   dx,DWORD PTR ds:[rsi]
   1400190b8:	(bad)  
   1400190b9:	(bad)  
   1400190ba:	movabs eax,ds:0x6d9ebcedfc60bd16
   1400190c3:	push   0x228a01bd
   1400190c8:	(bad)  
   1400190c9:	jrcxz  0x1400190d0
   1400190cb:	or     dl,ch
   1400190cd:	neg    BYTE PTR [rax+0x47722032]
   1400190d3:	rex.WRB movabs r14,0x7e4b0924c19f5f33
   1400190dd:	xor    edi,edx
   1400190df:	(bad)  
   1400190e0:	lods   eax,DWORD PTR ds:[rsi]
   1400190e1:	adc    ecx,DWORD PTR [rsi]
   1400190e3:	test   al,0x68
   1400190e5:	frstor [rsi-0x50eed8f6]
   1400190eb:	(bad)  
   1400190ec:	cmp    bl,bl
   1400190ee:	imul   edi
   1400190f0:	out    dx,al
   1400190f1:	(bad)  
   1400190f2:	in     al,dx
   1400190f3:	xchg   ebp,eax
   1400190f4:	(bad)  
   1400190f5:	rex.RB
   1400190f6:	rex.WRX out 0xb5,eax
   1400190f9:	mov    BYTE PTR [rsi+0x27effe4c],cl
   1400190ff:	sar    DWORD PTR [rdi],0xd3
   140019102:	xchg   esi,eax
   140019103:	out    0x56,eax
   140019105:	rex.WB (bad) 
   140019107:	test   BYTE PTR [rax],0xe8
   14001910a:	stc    
   14001910b:	rex.RXB xor al,0x7e
   14001910e:	(bad)  [rdi-0x79]
   140019111:	adc    edi,edi
   140019113:	out    0x20,eax
   140019115:	xor    eax,0x50184877
   14001911a:	sahf   
   14001911b:	rex.WRXB push r15
   14001911d:	mov    dl,0x80
   14001911f:	(bad)  
   140019120:	stos   DWORD PTR es:[rdi],eax
   140019121:	or     DWORD PTR [rdi],esp
   140019123:	fdiv   DWORD PTR [rdx+0x6cbb223]
   140019129:	push   0x7a1c1ef4
   14001912e:	neg    DWORD PTR [rdi]
   140019130:	repnz movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019132:	(bad)  
   140019133:	jno    0x14001914b
   140019135:	xor    dh,al
   140019137:	(bad)  
   140019138:	add    eax,DWORD PTR [rcx]
   14001913a:	mov    esp,0x5b5b5b5c
   14001913f:	add    ebx,DWORD PTR [rcx]
   140019141:	or     eax,esp
   140019143:	jmp    0x11714d506
   140019148:	ins    BYTE PTR es:[rdi],dx
   140019149:	pushf  
   14001914a:	sahf   
   14001914b:	sbb    esp,edx
   14001914d:	cmc    
   14001914e:	mov    bh,0xb
   140019150:	movabs ds:0xd9181660545fc4cd,al
   140019159:	push   rdi
   14001915a:	xchg   DWORD PTR [rax+0x6f],ebx
   14001915d:	idiv   ebx
   14001915f:	ins    DWORD PTR es:[rdi],dx
   140019160:	fild   WORD PTR [rax+0x2d]
   140019163:	mov    dl,0xcd
   140019165:	fidiv  DWORD PTR [rsi+0x67]
   140019168:	or     DWORD PTR [rsi],0x72d7c1de
   14001916e:	or     al,0x3c
   140019170:	mov    dh,0x4f
   140019172:	ficom  DWORD PTR [rbp+0x28]
   140019175:	pop    rdx
   140019176:	push   rdi
   140019177:	pop    rsi
   140019178:	(bad)  
   140019179:	lods   eax,DWORD PTR ds:[rsi]
   14001917a:	out    0x1b,al
   14001917c:	rex.XB
   14001917d:	lock (bad) 
   14001917f:	lahf   
   140019180:	push   0xffffffff9e11fe79
   140019185:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019186:	sbb    ebx,DWORD PTR [rbp-0x5a7a73cc]
   14001918c:	iret   
   14001918d:	(bad)  
   14001918e:	(bad)  
   14001918f:	pop    rcx
   140019190:	and    cl,ah
   140019192:	test   dh,bl
   140019194:	ds (bad) 
   140019196:	retf   
   140019197:	iret   
   140019198:	add    eax,0x352ed8a9
   14001919d:	jbe    0x140019127
   14001919f:	rex.WRXB (bad) 
   1400191a1:	loop   0x14001918f
   1400191a3:	(bad)  
   1400191a4:	shl    eax,cl
   1400191a6:	mov    esi,0xf3ec9c28
   1400191ab:	sub    esp,DWORD PTR [rbp+rax*1-0xefd7c00]
   1400191b2:	(bad)  
   1400191b3:	jl     0x140019165
   1400191b5:	sub    edx,DWORD PTR [rbp+0x51]
   1400191b8:	sbb    ah,dl
   1400191ba:	jge    0x140019224
   1400191bc:	mov    dh,0xef
   1400191be:	push   rdi
   1400191bf:	fdivrp st(5),st
   1400191c1:	fldcw  WORD PTR [rbx]
   1400191c3:	out    dx,eax
   1400191c4:	test   DWORD PTR [rbx+rcx*2+0x57fe5a59],ebp
   1400191cb:	xchg   al,dh
   1400191cd:	add    esp,edi
   1400191cf:	and    dh,BYTE PTR [rsi+0x2e0c31f9]
   1400191d5:	(bad)  
   1400191d6:	movabs ds:0xb87b2b8585b78bf7,al
   1400191df:	mov    ecx,0xf697c51a
   1400191e4:	scas   eax,DWORD PTR es:[rdi]
   1400191e5:	(bad)  
   1400191e6:	xchg   ebp,eax
   1400191e7:	cmp    al,0x8e
   1400191e9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400191ea:	test   al,0x71
   1400191ec:	push   0xfffffffffa9e3798
   1400191f1:	(bad)  
   1400191f2:	cmp    al,bh
   1400191f4:	or     dh,cl
   1400191f6:	rex.X (bad) 
   1400191f8:	pop    rsi
   1400191f9:	push   rsp
   1400191fa:	add    BYTE PTR [rdi],ch
   1400191fc:	je     0x1400191d9
   1400191fe:	scas   al,BYTE PTR es:[rdi]
   1400191ff:	add    al,0x6c
   140019201:	movabs ds:0xa395d6f278affb87,eax
   14001920a:	sti    
   14001920b:	jp     0x1400191dd
   14001920d:	mov    ebp,0x9b242dd1
   140019212:	(bad)  
   140019213:	sub    al,0x13
   140019215:	pop    rbp
   140019216:	test   eax,0x3beb8f00
   14001921b:	sti    
   14001921c:	mov    fs,WORD PTR [rdx]
   14001921e:	(bad)  
   14001921f:	push   rax
   140019220:	rcr    BYTE PTR [rbx+rsi*8-0x2b],0x4d
   140019225:	add    BYTE PTR [rbx-0x78],ah
   140019228:	vpminub xmm7,xmm1,xmm1
   14001922c:	stc    
   14001922d:	push   rbp
   14001922e:	adc    eax,0x72b3f854
   140019233:	jo     0x14001921a
   140019235:	adc    dl,BYTE PTR [rdi+rsi*1-0x2ce5dfe0]
   14001923c:	scas   eax,DWORD PTR es:[rdi]
   14001923d:	nop
   14001923e:	(bad)  
   14001923f:	stos   BYTE PTR es:[rdi],al
   140019240:	movabs al,ds:0xf280a97d55b1f29a
   140019249:	xchg   ebp,eax
   14001924a:	(bad)  
   14001924b:	adc    eax,DWORD PTR [rsi-0x53650be4]
   140019251:	(bad)  
   140019252:	xchg   edi,eax
   140019253:	rex.W jnp 0x14001925a
   140019256:	test   al,0x9f
   140019258:	outs   dx,BYTE PTR ds:[rsi]
   140019259:	stc    
   14001925a:	or     eax,0xef56b026
   14001925f:	rex.WRXB add al,0xb0
   140019262:	push   rsi
   140019263:	adc    dl,BYTE PTR [rdx+0xdf9775b]
   140019269:	sub    al,0x1e
   14001926b:	loop   0x1400192e9
   14001926d:	(bad)  
   14001926e:	fiadd  DWORD PTR [rdi+rbx*1]
   140019271:	loopne 0x1400192e4
   140019273:	push   rbp
   140019274:	and    al,BYTE PTR [rax-0xc4416f7]
   14001927a:	mov    ebp,0xcf8ef6bf
   14001927f:	pop    rsi
   140019280:	cmc    
   140019281:	jmp    QWORD PTR [rdx-0x45]
   140019284:	lock mov ecx,edi
   140019287:	dec    DWORD PTR [rdx+0x10]
   14001928a:	jle    0x140019267
   14001928c:	(bad)  
   14001928d:	out    dx,al
   14001928e:	(bad)  
   14001928f:	lock xor esp,esi
   140019292:	lods   eax,DWORD PTR ds:[rsi]
   140019293:	jg     0x140019220
   140019295:	xchg   DWORD PTR [rsi-0x1232d888],edi
   14001929b:	out    dx,eax
   14001929c:	rex.XB jp 0x1400192ac
   14001929f:	(bad)  
   1400192a0:	test   al,0x64
   1400192a2:	icebp  
   1400192a3:	xchg   DWORD PTR [rbx+0x22],esi
   1400192a6:	movabs ds:0x827f9da50edfe40c,al
   1400192af:	ret    
   1400192b0:	mul    DWORD PTR [rax+0x22f434dd]
   1400192b6:	add    bh,BYTE PTR [rax+0x51]
   1400192b9:	fcomi  st,st(6)
   1400192bb:	xor    DWORD PTR [rdx+0x1dab668d],0xf37eb9df
   1400192c5:	(bad)  
   1400192c6:	pop    rbx
   1400192c7:	sub    esi,eax
   1400192c9:	pop    rsi
   1400192ca:	pop    rdi
   1400192cb:	add    BYTE PTR [rbx+0x7c2fa58c],0x7c
   1400192d2:	xor    al,ch
   1400192d4:	movabs al,ds:0x54245000068163af
   1400192dd:	and    esi,esp
   1400192df:	jne    0x1400192d5
   1400192e1:	sub    BYTE PTR [rax-0x2a],bh
   1400192e4:	popf   
   1400192e5:	test   esi,edi
   1400192e7:	rex.WR sub BYTE PTR [rbx+0x6f82e48],r13b
   1400192ee:	(bad)  
   1400192ef:	fcmovnbe st,st(6)
   1400192f1:	ds out dx,eax
   1400192f3:	sub    ebp,DWORD PTR [rcx+0x790be4b9]
   1400192f9:	out    0x4e,al
   1400192fb:	mov    edi,0xf0b35f79
   140019300:	rcl    DWORD PTR [rbp+0x112b981],1
   140019306:	jne    0x14001932d
   140019308:	xlat   BYTE PTR ds:[rbx]
   140019309:	(bad)  
   14001930a:	jmp    0x14001930c
   14001930c:	push   0xffffffffad6a3eec
   140019311:	add    DWORD PTR [rcx-0x878dd1e],edi
   140019317:	inc    BYTE PTR [rdi]
   140019319:	xor    BYTE PTR [rbp+0x59f32840],0xc1
   140019320:	xchg   ebx,eax
   140019321:	jg     0x1400192ef
   140019323:	pop    rdi
   140019324:	and    BYTE PTR [rdi-0x2b4e9b33],bl
   14001932a:	cld    
   14001932b:	test   al,0xbd
   14001932d:	verr   WORD PTR [rbp-0x184e8d9]
   140019334:	div    DWORD PTR [rdi-0x151982]
   14001933a:	mov    WORD PTR [rbx],?
   14001933c:	sti    
   14001933d:	cld    
   14001933e:	scas   eax,DWORD PTR es:[rdi]
   14001933f:	sub    al,0xe1
   140019341:	mov    bh,0xed
   140019343:	int3   
   140019344:	sub    BYTE PTR [rbx+0x48],dl
   140019347:	addr32 je 0x140019304
   14001934a:	div    ecx
   14001934c:	sahf   
   14001934d:	(bad)  
   14001934e:	mov    edi,0xef4cc2d
   140019353:	movabs ds:0x96851c9c94010b7b,al
   14001935c:	or     dl,BYTE PTR [rbx]
   14001935e:	sbb    al,0xa
   140019360:	adc    BYTE PTR [rcx],ah
   140019362:	or     BYTE PTR [rdi],0xdc
   140019365:	mov    ch,al
   140019367:	scas   eax,DWORD PTR es:[rdi]
   140019368:	jle    0x140019370
   14001936a:	jnp    0x1400193bb
   14001936c:	loopne 0x14001937a
   14001936e:	retf   
   14001936f:	mov    DWORD PTR [rdi+0x54],ebx
   140019372:	add    bh,bl
   140019374:	jmp    0x1400193ec
   140019376:	(bad)  
   140019377:	and    al,0x30
   140019379:	pop    rbp
   14001937a:	in     eax,dx
   14001937b:	fdivr  DWORD PTR [rax+rbx*8]
   14001937e:	int3   
   14001937f:	sbb    eax,0xf2b9bfdd
   140019384:	fiadd  WORD PTR [rax]
   140019386:	stos   BYTE PTR es:[rdi],al
   140019387:	retf   
   140019388:	clc    
   140019389:	mov    edi,0xe5af7a41
   14001938e:	(bad)  
   14001938f:	push   rsi
   140019390:	(bad)  
   140019391:	in     al,0x10
   140019393:	movabs al,ds:0xa29f9067bd5a6a90
   14001939c:	cld    
   14001939d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001939e:	(bad)  
   14001939f:	sub    DWORD PTR [rdi],0x33
   1400193a2:	cld    
   1400193a3:	xchg   ebp,eax
   1400193a4:	rex.X (bad) 
   1400193a6:	loopne 0x140019332
   1400193a8:	movabs al,ds:0x5b59d5023f49a578
   1400193b2:	js     0x14001940f
   1400193b4:	movsxd ecx,DWORD PTR [rsi+0x5e8fb992]
   1400193ba:	adc    eax,0x9881d1e8
   1400193bf:	mov    edi,0xcadcf4b7
   1400193c4:	lods   eax,DWORD PTR ds:[rsi]
   1400193c5:	cmp    bl,al
   1400193c7:	jp     0x1400193c6
   1400193c9:	rex.WB mov es,WORD PTR [r9+0x41]
   1400193cd:	or     al,0xaa
   1400193cf:	mov    al,0x3
   1400193d1:	sub    BYTE PTR [rip+0xffffffff89c6cd83],0x54        # 0xc9c8615b
   1400193d8:	xchg   edx,eax
   1400193d9:	sub    BYTE PTR [rdx*2-0x2069d286],al
   1400193e0:	rex.XB (bad) 
   1400193e2:	sub    dh,BYTE PTR [rbx-0x1d73dca2]
   1400193e8:	jg     0x1400193a2
   1400193ea:	(bad)  
   1400193eb:	cmp    DWORD PTR [rdx+0x1df0f9dc],edi
   1400193f1:	lahf   
   1400193f2:	mov    esi,0x2ed1b7e6
   1400193f7:	loope  0x140019476
   1400193f9:	or     edi,DWORD PTR gs:[rdi+0x240e76d]
   140019400:	imul   ecx,DWORD PTR [rax-0xfc1a117],0xffffff8d
   140019407:	mov    edi,0x4717661f
   14001940c:	mov    al,0x79
   14001940e:	(bad)  
   14001940f:	sub    DWORD PTR [rdx],0xc9a0d1bb
   140019415:	push   rax
   140019416:	xchg   esi,eax
   140019417:	adc    esp,DWORD PTR [rbp+0x347ec7ff]
   14001941d:	int    0x3d
   14001941f:	cmp    ah,dh
   140019421:	imul   edx,DWORD PTR [rsp+rax*4+0x700545f8],0x4aedb601
   14001942c:	add    BYTE PTR [rax],0xd0
   14001942f:	fcomip st,st(4)
   140019431:	sbb    al,0x3a
   140019433:	jne    0x140019420
   140019435:	(bad)  
   140019437:	popf   
   140019438:	std    
   140019439:	(bad)  
   14001943a:	mov    ebp,0x2c2d84d
   14001943f:	(bad)  
   140019440:	fwait
   140019441:	ret    0xb326
   140019444:	ret    0x59f6
   140019447:	shl    DWORD PTR [rdx+0x10b7259b],0x9f
   14001944e:	pop    rcx
   14001944f:	outs   dx,DWORD PTR ds:[rsi]
   140019450:	adc    r14b,r12b
   140019453:	not    DWORD PTR [rdi+0x2d]
   140019456:	stos   DWORD PTR es:[rdi],eax
   140019457:	rex.WRXB mov es,WORD PTR [r12+r15*1]
   14001945b:	jmp    0x183e460e7
   140019460:	xchg   esi,eax
   140019461:	in     al,0x32
   140019463:	(bad)
   140019466:	icebp  
   140019467:	add    al,0xc4
   140019469:	push   0x4e4f72b
   14001946e:	(bad)  
   14001946f:	out    dx,eax
   140019470:	or     DWORD PTR [rax+0x51],ebp
   140019473:	add    edi,ebx
   140019475:	mov    ebp,0x833c0046
   14001947a:	push   rax
   14001947b:	or     DWORD PTR [rbp+0x73],eax
   14001947e:	rex.RXB lods al,BYTE PTR ds:[rsi]
   140019480:	sub    dl,cl
   140019482:	fnsave [rsi+0x53]
   140019485:	(bad)  
   140019486:	and    BYTE PTR [rdi-0x4],0x51
   14001948a:	shr    esi,0xbb
   14001948d:	mov    cl,0x72
   14001948f:	lahf   
   140019490:	rex.RXB push r9
   140019492:	lods   al,BYTE PTR ds:[rsi]
   140019493:	adc    ecx,DWORD PTR [rax]
   140019495:	test   BYTE PTR [rcx],0xf9
   140019498:	pop    rbx
   140019499:	es (bad) 
   14001949b:	mov    ebp,edx
   14001949d:	cli    
   14001949e:	(bad)  
   14001949f:	outs   dx,BYTE PTR ds:[rsi]
   1400194a0:	std    
   1400194a1:	(bad)  
   1400194a2:	mov    ch,0xbf
   1400194a4:	mov    DWORD PTR [rdi],ebx
   1400194a6:	add    al,0xd8
   1400194a8:	jg     0x140019460
   1400194aa:	in     eax,dx
   1400194ab:	cmp    al,0x61
   1400194ad:	ret    0xf38f
   1400194b0:	inc    BYTE PTR [rdi+0x6e]
   1400194b3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400194b4:	test   DWORD PTR [rbx-0x321c9785],esp
   1400194ba:	add    al,0xf4
   1400194bc:	rex.WX or BYTE PTR [rax],sil
   1400194bf:	fs xchg edi,eax
   1400194c1:	mov    DWORD PTR [rbx+0x72],esi
   1400194c4:	fs add eax,0x9b423fde
   1400194ca:	jg     0x1400194c1
   1400194cc:	rex.WRB mov r12,cs
   1400194cf:	sar    DWORD PTR [rax+0x11],0x45
   1400194d3:	add    DWORD PTR [rdi],edx
   1400194d5:	adc    eax,0xf2dd8bc0
   1400194da:	rex push rcx
   1400194dc:	icebp  
   1400194dd:	imul   ebx,DWORD PTR [rax+0x7d1f06ac],0xb7a9c6ed
   1400194e7:	ja     0x1400194f1
   1400194e9:	jnp    0x1400194a7
   1400194eb:	out    dx,eax
   1400194ec:	ds int3 
   1400194ee:	rex.WX xchg BYTE PTR [rsi],sil
   1400194f1:	movabs ds:0xbf882be49d20594e,eax
   1400194fa:	sbb    dl,dh
   1400194fc:	add    bl,BYTE PTR [rbx+0x43ef0155]
   140019502:	sub    eax,edi
   140019504:	and    DWORD PTR [rdi-0xc],esp
   140019507:	sub    r12b,BYTE PTR [r10-0x5]
   14001950b:	ror    DWORD PTR [rax],1
   14001950d:	mov    esi,0x38e404ac
   140019512:	xor    DWORD PTR [rdi],ebx
   140019514:	and    edx,DWORD PTR [rsi+rbp*2+0x39909180]
   14001951b:	scas   al,BYTE PTR es:[rdi]
   14001951c:	(bad)  
   14001951d:	movabs ds:0xa9611a2809da9191,eax
   140019526:	mov    dl,0x1b
   140019528:	or     al,dl
   14001952a:	paddsb mm4,QWORD PTR [rcx]
   14001952d:	rex.WRXB or r15b,BYTE PTR [r9]
   140019530:	sub    ah,cl
   140019532:	xor    eax,0x3e8c64c8
   140019537:	adc    r12,rsi
   14001953a:	rex.WR
   14001953b:	rex jrcxz 0x140019549
   14001953e:	loopne 0x14001959f
   140019540:	(bad)  
   140019541:	retf   
   140019542:	mov    WORD PTR [rax],es
   140019544:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140019545:	(bad)  
   140019546:	ret    0x7e5f
   140019549:	loopne 0x1400194f6
   14001954b:	xchg   edi,eax
   14001954c:	jmp    FWORD PTR [rdi]
   14001954e:	xor    ebx,DWORD PTR [rbx]
   140019550:	(bad)  
   140019551:	xor    dh,BYTE PTR [rsi+0x183f7e13]
   140019557:	ret    0x9b6f
   14001955a:	int3   
   14001955b:	lods   eax,DWORD PTR ds:[rsi]
   14001955c:	in     al,dx
   14001955d:	(bad)  
   14001955e:	retf   
   14001955f:	out    0x4a,al
   140019561:	loopne 0x1400195a1
   140019563:	fdivp  st(3),st
   140019565:	fsub   QWORD PTR [rbp-0x4c]
   140019568:	neg    BYTE PTR [rbp-0x79094b3d]
   14001956e:	or     BYTE PTR [rbx+rsi*4],cl
   140019571:	jb     0x1400195c1
   140019573:	in     eax,0xf3
   140019575:	(bad)  
   140019576:	rex.R pop rdx
   140019578:	ja     0x140019566
   14001957a:	rex.R ja 0x140019571
   14001957d:	iret   
   14001957e:	jno    0x140019570
   140019580:	xchg   r12d,eax
   140019582:	stc    
   140019583:	adc    BYTE PTR [rdi],dl
   140019585:	adc    eax,0x64da05c0
   14001958a:	nop
   14001958b:	ins    BYTE PTR es:[rdi],dx
   14001958c:	and    eax,DWORD PTR [rax]
   14001958e:	xor    al,0x1b
   140019590:	(bad)  
   140019591:	mov    edx,0x4cce6dd7
   140019596:	mov    fs,WORD PTR [rbp+rdx*4-0x6baffb09]
   14001959d:	cmp    al,0xfa
   14001959f:	fdiv   QWORD PTR [rip+0x546b42d7]        # 0x1946cd87c
   1400195a5:	or     BYTE PTR [rdx+0x68],dh
   1400195a8:	stc    
   1400195a9:	loop   0x14001960d
   1400195ab:	ins    DWORD PTR es:[rdi],dx
   1400195ac:	fst    QWORD PTR [rdx-0x84141e9]
   1400195b2:	(bad)  [rdi-0x405a820e]
   1400195b8:	stos   DWORD PTR es:[rdi],eax
   1400195b9:	in     al,dx
   1400195ba:	sbb    BYTE PTR [rcx],dl
   1400195bc:	lods   eax,DWORD PTR ds:[rsi]
   1400195bd:	mov    dh,0xdd
   1400195bf:	icebp  
   1400195c0:	or     al,0x9c
   1400195c2:	rex
   1400195c3:	rex.WXB rol r12,0xac
   1400195c7:	or     BYTE PTR [rdx-0x4524111a],al
   1400195cd:	add    dl,ah
   1400195cf:	rcr    BYTE PTR ds:[rbp-0x7e],0x56
   1400195d4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400195d5:	movabs eax,ds:0xd23e216f4837dc1
   1400195de:	rcl    DWORD PTR [rcx+0x4fc2fe59],cl
   1400195e4:	push   rbp
   1400195e5:	and    eax,0xd0083c61
   1400195ea:	push   rsi
   1400195eb:	or     BYTE PTR [rsi],dh
   1400195ed:	(bad)  [rbx+0x68]
   1400195f0:	xor    BYTE PTR [rdi],bh
   1400195f2:	fdivr  st,st(1)
   1400195f4:	outs   dx,BYTE PTR ds:[rsi]
   1400195f5:	clc    
   1400195f6:	fcmove st,st(7)
   1400195f8:	ds js  0x1400195e3
   1400195fb:	pop    rdi
   1400195fc:	(bad)  
   1400195fd:	xor    bl,dl
   1400195ff:	(bad)  
   140019600:	xchg   DWORD PTR [rdi+0x2a],edx
   140019603:	(bad)  
   140019605:	rex.X mov dil,0x73
   140019608:	out    0xa,eax
   14001960a:	lock xchg edi,eax
   14001960c:	jns    0x1400195e5
   14001960e:	test   eax,0xfd7ee81d
   140019613:	sbb    bl,BYTE PTR [rdx-0x47]
   140019616:	test   eax,0x7277ef02
   14001961b:	sar    BYTE PTR [rbp+0x0],1
   14001961e:	fnstenv [rbx+0x1fb9ef06]
   140019624:	ret    
   140019625:	test   esp,0x405ad3a2
   14001962b:	in     al,0xa2
   14001962d:	add    bh,BYTE PTR [rax+0x5c59db10]
   140019633:	add    edi,0xbf1ff67b
   140019639:	movsxd esp,ebx
   14001963b:	clc    
   14001963c:	jne    0x14001967b
   14001963e:	rex.W xlat BYTE PTR ds:[rbx]
   140019640:	jns    0x1400196ae
   140019642:	pop    rsi
   140019643:	rex.XB jg 0x14001965a
   140019646:	rex.WX add QWORD PTR [rbx],rcx
   140019649:	or     bl,ch
   14001964b:	movabs ds:0xc5b10d6c5a9d756,eax
   140019654:	and    al,0x9d
   140019656:	test   BYTE PTR [rbx+rbx*1+0x311b46b0],dl
   14001965d:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14001965f:	in     al,0xe9
   140019661:	(bad)  
   140019662:	fisubr WORD PTR [rsi+rdi*4]
   140019665:	sti    
   140019666:	sti    
   140019667:	xchg   edx,eax
   140019668:	or     al,0x54
   14001966a:	rex.RB jno 0x140019694
   14001966d:	rex.WX (bad) 
   14001966f:	(bad)  
   140019670:	lahf   
   140019671:	fild   WORD PTR [rdx-0x70]
   140019674:	cdq    
   140019675:	push   rdi
   140019676:	xor    dh,bh
   140019678:	add    DWORD PTR [rax+0x76500f5a],ecx
   14001967e:	or     al,0x8a
   140019680:	fcmove st,st(0)
   140019682:	shr    dh,1
   140019684:	ret    
   140019685:	jmp    0x140019682
   140019687:	add    esp,DWORD PTR [rax+0x2b9a4e59]
   14001968d:	add    BYTE PTR [rax-0x6b],dh
   140019690:	mov    DWORD PTR [rsi+0x72],ecx
   140019693:	mov    dl,0xcf
   140019695:	std    
   140019696:	and    BYTE PTR [rax-0x61],cl
   140019699:	(bad)  
   14001969a:	in     eax,0xf6
   14001969c:	rex.WX (bad) 
   14001969e:	add    BYTE PTR [rbp-0x294ffe9e],al
   1400196a4:	rcl    BYTE PTR [rbx],1
   1400196a6:	mov    edi,0x9fbef8f1
   1400196ab:	std    
   1400196ac:	fcomp  st(0)
   1400196ae:	shr    BYTE PTR [rcx],1
   1400196b0:	ins    BYTE PTR es:[rdi],dx
   1400196b1:	idiv   ecx
   1400196b3:	jg     0x1400196e5
   1400196b5:	test   DWORD PTR [rdi+0x12eccedc],edi
   1400196bb:	add    BYTE PTR [rax],al
   1400196bd:	(bad)  
   1400196be:	and    cl,0xb9
   1400196c1:	sub    DWORD PTR [rsi+rdi*4+0x70],esi
   1400196c5:	xor    ebp,DWORD PTR [rip+0xffffffffbe0bdf5e]        # 0xfe0d7629
   1400196cb:	pop    rsp
   1400196cc:	mov    esp,0x117bce26
   1400196d1:	and    DWORD PTR [rdx-0x26],edx
   1400196d4:	ja     0x140019713
   1400196d6:	xchg   esi,eax
   1400196d7:	(bad)  
   1400196d8:	(bad)  
   1400196d9:	scas   eax,DWORD PTR es:[rdi]
   1400196da:	pop    rbx
   1400196db:	push   rsi
   1400196dc:	adc    edi,DWORD PTR [rsi-0x2bd1ff58]
   1400196e2:	mov    dh,0xdd
   1400196e4:	adc    eax,0x1a452ea0
   1400196e9:	rex.WRX imul r8,QWORD PTR [rdi+0x2e],0x4d
   1400196ee:	or     edi,DWORD PTR [rdi]
   1400196f0:	sbb    al,0x3
   1400196f2:	jne    0x1400196f6
   1400196f4:	mov    WORD PTR [rcx-0x5e9054c9],es
   1400196fa:	mov    ebp,0xcc6c0b90
   1400196ff:	(bad)  
   140019700:	sbb    esi,esp
   140019702:	(bad)  
   140019703:	and    bh,BYTE PTR [rsi+rsi*4-0x7bf3914e]
   14001970a:	push   rax
   14001970b:	test   eax,0xd7b90fc5
   140019710:	jle    0x14001969e
   140019712:	rex adc eax,0x5e508b9
   140019718:	(bad)  
   140019719:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001971a:	xor    BYTE PTR [rdx-0x2a],bl
   14001971d:	ds repz add al,0x16
   140019721:	rex.RX mov WORD PTR [rip+0xffffffffc2307a39],ss        # 0x102321161
   140019728:	rcr    BYTE PTR [rcx],1
   14001972a:	jle    0x140019773
   14001972c:	adc    DWORD PTR [rcx],esp
   14001972e:	movabs ds:0xaad69a84a806e578,eax
   140019737:	rex.WXB and rcx,QWORD PTR [r11]
   14001973a:	mov    BYTE PTR [rax],al
   14001973c:	push   rdi
   14001973d:	adc    dl,BYTE PTR [rdx-0x50d034ce]
   140019743:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019744:	imul   ebp,DWORD PTR [rcx+0x14d27b99],0x74ae6ce5
   14001974e:	xchg   ebx,eax
   14001974f:	rex.X or BYTE PTR [rax+0x4c299b08],al
   140019756:	(bad)  
   140019757:	shr    eax,1
   140019759:	lock mov edi,0xec4f0ff8
   14001975f:	jns    0x140019767
   140019761:	pop    rcx
   140019762:	clc    
   140019763:	jae    0x1400197d3
   140019765:	dec    DWORD PTR [rdi]
   140019767:	mov    edx,0x8e76dbf0
   14001976c:	jle    0x140019707
   14001976e:	iret   
   14001976f:	(bad)  
   140019770:	(bad)  
   140019771:	cmc    
   140019772:	or     dl,bh
   140019774:	mov    esi,0x7f3086f4
   140019779:	rex.RB (bad) 
   14001977b:	shl    BYTE PTR [rip+0x68241e1e],cl        # 0x1a825b59f
   140019781:	xchg   esi,eax
   140019782:	and    BYTE PTR [rcx+0x2f],dl
   140019785:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019786:	(bad)  
   140019787:	sar    DWORD PTR [rdi+rbp*8+0x7a22aebf],cl
   14001978e:	rex.W
   14001978f:	lock movabs ds:0x27815c19db90b802,al
   140019799:	cmp    bh,BYTE PTR [rbx-0x19]
   14001979c:	(bad)  
   14001979e:	cmp    eax,0xcd03bc3e
   1400197a3:	ins    DWORD PTR es:[rdi],dx
   1400197a4:	sar    ebp,0x7c
   1400197a7:	push   0xfffffffffffffff9
   1400197a9:	cli    
   1400197aa:	xchg   esi,eax
   1400197ab:	add    BYTE PTR [rax+rsi*2-0x21],ah
   1400197af:	jge    0x1400197ab
   1400197b1:	rex.WX test QWORD PTR [rdi-0x4ac236d6],rsi
   1400197b8:	call   0x14c8463e7
   1400197bd:	adc    al,0x31
   1400197bf:	test   al,0xa2
   1400197c1:	test   al,0x82
   1400197c3:	mov    dh,0xea
   1400197c5:	(bad)  
   1400197c6:	rol    DWORD PTR [rbx+0x76],0x21
   1400197ca:	rex.RX push rdi
   1400197cc:	and    BYTE PTR [rbp-0x5f],dl
   1400197cf:	or     al,0xc
   1400197d1:	(bad)  
   1400197d2:	jnp    0x1400197a3
   1400197d4:	jle    0x1400197e1
   1400197d6:	adc    ebx,DWORD PTR [rdx]
   1400197d8:	(bad)  
   1400197d9:	(bad)  [rip+0xffffffff842ef270]        # 0xc4308a50
   1400197e0:	jl     0x140019769
   1400197e2:	add    DWORD PTR [rdx],ebp
   1400197e4:	cld    
   1400197e5:	in     al,0x96
   1400197e7:	(bad)  
   1400197e8:	sbb    ch,dl
   1400197ea:	retf   
   1400197eb:	add    bl,BYTE PTR [rdi-0x4e]
   1400197ee:	clc    
   1400197ef:	mov    ecx,0x90429fc6
   1400197f4:	hlt    
   1400197f5:	pop    rsi
   1400197f6:	mov    dh,0x5a
   1400197f8:	and    BYTE PTR [rdx],0xcf
   1400197fb:	pop    rdi
   1400197fc:	rol    DWORD PTR [rax+0x2],1
   1400197ff:	push   rsi
   140019800:	mov    esi,0xbf03534
   140019805:	(bad)  
   140019806:	fnsave [rdi+0x7f1fb92f]
   14001980c:	(bad)  
   14001980d:	sub    eax,0x1cedd6ff
   140019812:	out    dx,al
   140019813:	shl    BYTE PTR [rcx-0xc],0x6d
   140019817:	cmp    al,0xc0
   140019819:	rex.XB pop r15
   14001981b:	mov    edx,0xf7f76693
   140019820:	jno    0x140019815
   140019822:	sbb    bl,BYTE PTR [rbx+0x17]
   140019825:	sar    esp,cl
   140019827:	or     BYTE PTR [rdx+0x6887a5d3],0xed
   14001982e:	xchg   ebx,eax
   14001982f:	pop    rdi
   140019830:	(bad)  
   140019831:	sahf   
   140019832:	or     DWORD PTR [rsp+rdx*2+0x0],ebx
   140019836:	(bad)  
   140019837:	shl    DWORD PTR [rsi-0xeefea23],0x20
   14001983e:	jp     0x140019836
   140019840:	cli    
   140019841:	data16 cli 
   140019843:	jge    0x140019876
   140019845:	(bad)  
   140019846:	xor    BYTE PTR [rdx+0x7d94ae55],ch
   14001984c:	(bad)  
   14001984d:	xchg   bp,ax
   14001984f:	and    DWORD PTR [rcx-0x4a],esp
   140019852:	rex.WX jge 0x1400198d1
   140019855:	icebp  
   140019856:	cmc    
   140019857:	rex.XB add r11d,esp
   14001985a:	xchg   ebp,eax
   14001985b:	in     al,0x53
   14001985d:	movabs eax,ds:0x91835ed2b10158f
   140019866:	movabs eax,ds:0x826e60c41443a80a
   14001986f:	sub    dl,BYTE PTR [rax+0x3a8a288c]
   140019875:	sub    BYTE PTR [rax-0x2f9c4553],0xc4
   14001987c:	and    BYTE PTR [rbx-0x12],cl
   14001987f:	push   rcx
   140019880:	xchg   esp,eax
   140019881:	adc    DWORD PTR [rip+0x1a16d8bd],ebp        # 0x15a187144
   140019887:	push   rbp
   140019888:	call   0x199b4dcfb
   14001988d:	jge    0x140019827
   14001988f:	ret    0x2780
   140019892:	or     rdi,QWORD PTR [rdx]
   140019895:	(bad)  
   140019896:	fist   WORD PTR [rcx+0x7c]
   140019899:	push   rdx
   14001989a:	fs lahf 
   14001989c:	(bad)  
   14001989d:	add    al,0xf7
   14001989f:	rex.WRB
   1400198a0:	movabs eax,gs:0xca2880512bda5ccb
   1400198aa:	adc    BYTE PTR [rax-0x41061e2],0x95
   1400198b1:	(bad)  
   1400198b2:	cli    
   1400198b3:	(bad)  
   1400198b4:	gs jg  0x140019840
   1400198b7:	jbe    0x1400198dc
   1400198b9:	mov    db6,rdx
   1400198bc:	pop    rsi
   1400198bd:	rcl    BYTE PTR [rdx-0x28],1
   1400198c0:	(bad)  
   1400198c1:	xor    bl,bl
   1400198c3:	cmp    DWORD PTR [rdx+0x5],esi
   1400198c6:	data16 shr cl,1
   1400198c9:	jle    0x14001985d
   1400198cb:	idiv   DWORD PTR [rcx+rdi*8-0x63]
   1400198cf:	(bad)  
   1400198d0:	data16 ja 0x1400198f2
   1400198d3:	mov    edx,0xeed00237
   1400198d8:	xlat   BYTE PTR ds:[rbx]
   1400198d9:	add    al,0x2
   1400198db:	(bad)  
   1400198dc:	rex.B (bad) 
   1400198de:	scas   al,BYTE PTR es:[rdi]
   1400198df:	faddp  st(3),st
   1400198e1:	xchg   edi,eax
   1400198e2:	jl     0x1400198ed
   1400198e4:	(bad)  
   1400198e5:	(bad)  
   1400198e6:	pop    rsp
   1400198e7:	push   rsp
   1400198e8:	add    BYTE PTR [rdi],dl
   1400198ea:	jp     0x1400198b7
   1400198ec:	int3   
   1400198ed:	sub    eax,0x2c7262a0
   1400198f2:	(bad)  
   1400198f3:	scas   eax,DWORD PTR es:[rdi]
   1400198f4:	fist   WORD PTR [rcx-0x5e7cc43a]
   1400198fa:	mov    ecx,0x15445233
   1400198ff:	(bad)  
   140019901:	jb     0x140019886
   140019903:	cli    
   140019904:	fiadd  WORD PTR [rax+0x1d]
   140019907:	jne    0x14001994e
   140019909:	sbb    eax,0xf18d7213
   14001990e:	push   rdi
   14001990f:	fs rex.X
   140019911:	rex.WRXB mov BYTE PTR [r13-0x194a823f],r14b
   140019918:	xor    DWORD PTR [rdx+0x49a10576],esp
   14001991e:	cmp    ah,BYTE PTR [rsi-0xb]
   140019921:	popf   
   140019922:	lock rcl DWORD PTR [rax-0x62],cl
   140019926:	adc    bh,BYTE PTR [rsi+rax*2+0x1e]
   14001992a:	retf   0x9c3e
   14001992d:	xchg   ebx,eax
   14001992e:	jg     0x140019972
   140019930:	rcl    edi,0xb9
   140019933:	pop    rdi
   140019934:	(bad)  
   140019935:	cmp    al,0x5f
   140019937:	add    DWORD PTR [rdx+0x2780a410],ebp
   14001993d:	scas   eax,DWORD PTR es:[rdi]
   14001993e:	loopne 0x140019923
   140019940:	sub    esi,edi
   140019942:	(bad)  
   140019943:	in     al,dx
   140019944:	jmp    0x140019951
   140019946:	call   0x1579c5bef
   14001994b:	(bad)
   14001994e:	push   0x41
   140019950:	push   rdx
   140019951:	fcmovu st,st(3)
   140019953:	add    al,0x60
   140019955:	sbb    esi,edi
   140019957:	cmp    esi,DWORD PTR [rsi-0x310780ae]
   14001995d:	(bad)  
   14001995e:	pop    rsp
   14001995f:	stc    
   140019960:	jnp    0x1400199ca
   140019962:	xlat   BYTE PTR ds:[rbx]
   140019963:	repz jg 0x140019965
   140019966:	xchg   esp,eax
   140019967:	hlt    
   140019968:	(bad)  
   140019969:	ins    DWORD PTR es:[rdi],dx
   14001996a:	outs   dx,BYTE PTR ds:[rsi]
   14001996b:	out    0xce,eax
   14001996d:	adc    eax,0xfef38fe0
   140019972:	scas   eax,DWORD PTR es:[rdi]
   140019973:	ficomp WORD PTR [rip+0xffffffffa80607a6]        # 0xe807a11f
   140019979:	mov    ecx,0x4790f655
   14001997e:	push   rbp
   14001997f:	adc    ebx,DWORD PTR [rdi]
   140019981:	sbb    al,BYTE PTR [rax-0xd]
   140019984:	out    0xdf,eax
   140019986:	(bad)  
   140019987:	lock and ch,BYTE PTR [rsi]
   14001998a:	sub    al,BYTE PTR [rax+0x736b6897]
   140019990:	add    DWORD PTR [rcx],eax
   140019992:	add    BYTE PTR [rip+0x5bb1ce87],ch        # 0x19bb3681f
   140019998:	xor    bl,bh
   14001999a:	out    dx,al
   14001999b:	rex.WRX ror BYTE PTR [rax-0x7f7501a7],0x5a
   1400199a3:	add    eax,0x157eaddf
   1400199a8:	or     dl,BYTE PTR [rsi+0x5f]
   1400199ab:	pop    rsi
   1400199ac:	push   rdi
   1400199ad:	xor    eax,0xa57d0b9
   1400199b2:	fld    TBYTE PTR [rbx-0x65a8aee8]
   1400199b8:	rcl    BYTE PTR [rbx+0x45],0xc4
   1400199bc:	sub    bh,BYTE PTR [rax-0x42]
   1400199bf:	mov    edi,0xa0440644
   1400199c4:	imul   eax,DWORD PTR [rbp+0x2],0x75
   1400199c8:	gs or  al,al
   1400199cb:	rex.WX jg 0x140019963
   1400199ce:	ins    BYTE PTR es:[rdi],dx
   1400199cf:	mov    WORD PTR [rsi+0x3f10abda],ss
   1400199d5:	rex.RXB fistp QWORD PTR fs:[r11+0x12]
   1400199da:	nop
   1400199db:	(bad)  
   1400199dc:	fild   QWORD PTR [rip+0xffffffffa19c17d4]        # 0xe19db1b6
   1400199e2:	iret   
   1400199e3:	mov    al,BYTE PTR [rcx+0x21b4108b]
   1400199e9:	test   dl,dl
   1400199eb:	push   rdi
   1400199ed:	pop    rax
   1400199ee:	mov    edi,0x99940379
   1400199f3:	jle    0x1400199a7
   1400199f5:	jge    0x1400199f8
   1400199f7:	push   rdi
   1400199f8:	(bad)  
   1400199f9:	push   rbx
   1400199fa:	fwait
   1400199fb:	icebp  
   1400199fc:	(bad)  
   1400199fd:	fdivrp st(2),st
   1400199ff:	test   DWORD PTR [rbx-0x6ec28282],ebp
   140019a05:	(bad)  
   140019a08:	or     bh,bh
   140019a0a:	(bad)  
   140019a0b:	in     eax,dx
   140019a0c:	sbb    al,0xc4
   140019a0e:	(bad)  
   140019a0f:	add    esp,edx
   140019a11:	(bad)  
   140019a12:	repnz sub DWORD PTR [rdi-0x2cb3d441],0x9877ba20
   140019a1d:	jmp    0x140019a34
   140019a1f:	cwde   
   140019a20:	(bad)  
   140019a21:	ja     0x1400199f6
   140019a23:	(bad)  
   140019a24:	mov    DWORD PTR [rdi],edi
   140019a26:	jrcxz  0x1400199ab
   140019a28:	ffreep st(6)
   140019a2a:	rex.RB add eax,0x6d6d12f0
   140019a30:	rex.X xchg eax,eax
   140019a32:	add    BYTE PTR [rbx+rdx*4+0x1be6c761],al
   140019a39:	stc    
   140019a3a:	je     0x140019a58
   140019a3c:	or     ebp,ebx
   140019a3e:	mov    ebx,0xea0062
   140019a43:	(bad)  
   140019a44:	xchg   ebp,eax
   140019a45:	cli    
   140019a46:	stc    
   140019a47:	(bad)  
   140019a48:	(bad)  
   140019a49:	adc    ebp,edx
   140019a4b:	retf   0x7b58
   140019a4e:	sub    eax,0x4470575
   140019a54:	jne    0x140019a6b
   140019a56:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019a57:	(bad)  
   140019a58:	(bad)  
   140019a59:	rex.RX jne 0x140019a71
   140019a5c:	push   rsp
   140019a5d:	pop    rcx
   140019a5e:	rex.R pop rbx
   140019a60:	pushf  
   140019a61:	push   rbx
   140019a62:	jns    0x1400199e8
   140019a64:	rex.WX adc rax,0x41c96545
   140019a6a:	lock push rax
   140019a6c:	pop    rsi
   140019a6d:	or     al,0xe6
   140019a6f:	test   ebx,0x4852be89
   140019a75:	or     eax,DWORD PTR [rdx+0x10eeb3de]
   140019a7b:	lods   al,BYTE PTR ds:[rsi]
   140019a7c:	es and ah,ah
   140019a7f:	pop    rax
   140019a80:	mov    esi,0x45bb00a6
   140019a85:	iret   
   140019a86:	mov    esp,0x4b79c39e
   140019a8b:	repnz and DWORD PTR [rip+0xffffffffc9c88346],ecx        # 0x109ca1dd8
   140019a92:	imul   eax,DWORD PTR [rdx],0xe672cdb2
   140019a98:	rex.R neg BYTE PTR [rcx-0x16]
   140019a9c:	xchg   BYTE PTR [rdi-0x3],ch
   140019a9f:	(bad)          # 0x156c9209c
   140019aa0:	nop    esp
   140019aa3:	test   edi,eax
   140019aa5:	(bad)  
   140019aa6:	jp     0x140019a8e
   140019aa8:	mov    cl,0xbd
   140019aaa:	jg     0x140019a8b
   140019aac:	rex.RB loope 0x140019ade
   140019aaf:	mov    bh,0xed
   140019ab1:	mov    ecx,0xf0342d02
   140019ab6:	addr32 jl 0x140019a99
   140019ab9:	xor    DWORD PTR [rdi+0x10dcccd2],0x4441dc6f
   140019ac3:	adc    eax,0xda52f400
   140019ac8:	(bad)  
   140019ac9:	mov    bh,BYTE PTR [rsi+0x7fa18e7b]
   140019acf:	std    
   140019ad0:	movabs ds:0x80006e2db6a97802,al
   140019ad9:	mov    al,0x48
   140019adb:	cmp    eax,0xa9a36ec7
   140019ae0:	ja     0x140019ad9
   140019ae2:	rex.R mov WORD PTR [rax+0xb2ac730],ds
   140019ae9:	jb     0x140019b00
   140019aeb:	test   DWORD PTR [rcx-0x3eed551],edi
   140019af1:	stos   BYTE PTR es:[rdi],al
   140019af2:	xchg   edx,eax
   140019af3:	in     al,0x9d
   140019af5:	rex.WRX or al,0xa8
   140019af8:	stos   DWORD PTR es:[rdi],eax
   140019af9:	test   al,0x82
   140019afb:	(bad)  
   140019afc:	push   rcx
   140019afd:	fwait
   140019afe:	fwait
   140019aff:	(bad)  
   140019b00:	cld    
   140019b01:	or     BYTE PTR [rbx],0xbb
   140019b04:	cld    
   140019b05:	ss (bad) 
   140019b07:	rex.WX movabs rsp,0x7413ca824d6c1ca6
   140019b11:	rex.W (bad) 
   140019b13:	mov    ebp,0x5e6b6d98
   140019b18:	rex.X
   140019b19:	rex.WX fcomp DWORD PTR [rcx+0x43]
   140019b1d:	(bad)  
   140019b1e:	push   rsi
   140019b1f:	mov    eax,0xa5ef84ae
   140019b24:	rol    BYTE PTR [rsi-0x44984393],0xbe
   140019b2b:	mov    edi,0x3fad0ed4
   140019b30:	fstp   st(7)
   140019b32:	js     0x140019b35
   140019b34:	rex.W in al,dx
   140019b36:	jp     0x140019abb
   140019b38:	ret    
   140019b39:	rcr    edi,1
   140019b3b:	jns    0x140019bab
   140019b3d:	in     al,0xbf
   140019b3f:	inc    DWORD PTR [rbx-0x2e38dc5d]
   140019b45:	es std 
   140019b47:	cs pop rdx
   140019b49:	(bad)  
   140019b4a:	mov    bl,0x6d
   140019b4c:	(bad)  [rbx+0x5]
   140019b4f:	and    BYTE PTR [rdx],0x79
   140019b52:	call   0x1b8011386
   140019b57:	fistp  WORD PTR [rax]
   140019b59:	out    0x8f,al
   140019b5b:	in     al,dx
   140019b5c:	(bad)  
   140019b5d:	out    0x1b,al
   140019b5f:	mov    DWORD PTR [rax+0x5ff6303f],edi
   140019b65:	rex.XB sub ecx,DWORD PTR [r15]
   140019b68:	jg     0x140019b06
   140019b6a:	(bad)  
   140019b6c:	jns    0x140019bbf
   140019b6e:	add    DWORD PTR [rsp+rdx*2+0x401476db],edi
   140019b75:	(bad)  
   140019b76:	imul   esp,DWORD PTR [rax-0x53654c47],0x5dcd5776
   140019b80:	jne    0x140019b17
   140019b82:	ret    
   140019b83:	outs   dx,DWORD PTR ds:[rsi]
   140019b84:	sbb    eax,0x22bad815
   140019b89:	push   rsp
   140019b8a:	mov    ch,0x95
   140019b8c:	hlt    
   140019b8d:	adc    ch,dl
   140019b8f:	sbb    BYTE PTR [rcx+0x55],dl
   140019b92:	push   rcx
   140019b93:	lods   eax,DWORD PTR ds:[rsi]
   140019b94:	mov    esi,0x5dda8c28
   140019b99:	add    dl,dl
   140019b9b:	iret   
   140019b9c:	or     eax,0x8278401d
   140019ba1:	movabs al,ds:0x71e5ed6b092a9ee4
   140019baa:	js     0x140019b76
   140019bac:	mov    esi,0xb760539
   140019bb1:	outs   dx,DWORD PTR ds:[rsi]
   140019bb2:	mov    esi,0x56e6b7bc
   140019bb7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019bb8:	loope  0x140019b3c
   140019bba:	pop    rsp
   140019bbb:	or     bh,BYTE PTR [rdi+0x9]
   140019bbe:	adc    eax,DWORD PTR [rax]
   140019bc0:	rex.WRB mul QWORD PTR [rip+0x5dfd88ff]        # 0x19dff24c6
   140019bc7:	mov    cl,0xaf
   140019bc9:	rex.WRXB
   140019bca:	rex.RXB retf 
   140019bcc:	call   rdi
   140019bce:	jrcxz  0x140019ba9
   140019bd0:	retf   0x441d
   140019bd3:	rex.W
   140019bd4:	or     r15d,DWORD PTR [rdi+0x79]
   140019bd8:	push   0xfffffffffffffff0
   140019bda:	out    0x7e,eax
   140019bdc:	jmp    0xe0909f72
   140019be1:	ffree  st(4)
   140019be3:	repz out dx,eax
   140019be5:	es jrcxz 0x140019be7
   140019be8:	rex.X mov dil,0x73
   140019beb:	lock add bl,BYTE PTR [rdi+0x5ccf7de0]
   140019bf2:	lea    edx,[rbp-0x53be391]
   140019bf8:	int    0x11
   140019bfa:	mov    esp,0xf77897b7
   140019bff:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019c00:	jns    0x140019bd1
   140019c02:	cmp    eax,0x4bc01517
   140019c07:	mov    ecx,0x5405019d
   140019c0c:	add    ebx,esp
   140019c0e:	(bad)  
   140019c0f:	ja     0x140019c27
   140019c11:	out    dx,eax
   140019c12:	out    dx,al
   140019c13:	push   rsp
   140019c14:	xor    al,0xdc
   140019c16:	mov    DWORD PTR [rcx-0x23],edx
   140019c19:	add    BYTE PTR [rax+0x2f6b6710],ch
   140019c1f:	jg     0x140019c62
   140019c21:	xchg   ebp,eax
   140019c22:	add    al,0xff
   140019c25:	mov    edx,0x22a01756
   140019c2a:	(bad)  
   140019c2b:	xor    eax,0x168fe165
   140019c30:	adc    eax,0xeca262b0
   140019c35:	mov    ebx,0xd22f343b
   140019c3a:	jo     0x140019c39
   140019c3c:	repz push rax
   140019c3e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019c3f:	loope  0x140019bd7
   140019c41:	(bad)  
   140019c42:	ds mov bl,0xf8
   140019c45:	rex retf 
   140019c47:	(bad)  
   140019c48:	or     eax,DWORD PTR [rbx+0x5f]
   140019c4b:	movabs ds:0x2b210217363bfc82,al
   140019c54:	mov    esp,DWORD PTR [rax+0x30764f25]
   140019c5a:	es mov ah,0x1e
   140019c5d:	or     BYTE PTR [rbx+0x1b],al
   140019c60:	pop    rsp
   140019c61:	rex.RX xor BYTE PTR [rcx+0x7a],r10b
   140019c65:	(bad)  
   140019c66:	scas   al,BYTE PTR es:[rdi]
   140019c67:	out    dx,eax
   140019c68:	xchg   edi,eax
   140019c69:	dec    ecx
   140019c6b:	(bad)  
   140019c6c:	(bad)  
   140019c6d:	std    
   140019c6e:	sub    al,0x32
   140019c70:	jmp    0x19ff9edec
   140019c75:	call   0x13026aaf0
   140019c7a:	rex.RB in al,dx
   140019c7c:	ds add eax,0xc7aefba2
   140019c82:	shr    BYTE PTR [rsi-0x2088cba2],cl
   140019c88:	sbb    DWORD PTR [rsi-0x42],esp
   140019c8b:	jne    0x140019cde
   140019c8d:	add    DWORD PTR [rsp+rdx*4-0x3fafe625],edi
   140019c94:	sar    DWORD PTR [rbx+rsi*2+0x133d9de3],cl
   140019c9b:	ret    
   140019c9c:	mov    ebx,0xbae6f4ab
   140019ca1:	ss cwde 
   140019ca3:	pcmpeqb mm1,mm4
   140019ca6:	mov    bh,0x37
   140019ca8:	mov    ebp,DWORD PTR [rdi+0x1575f02]
   140019cae:	push   rbp
   140019caf:	sub    eax,0x9353a00a
   140019cb4:	mov    ebx,0x50026507
   140019cb9:	test   al,0xe0
   140019cbb:	rex.WR jl 0x140019d29
   140019cbe:	adc    DWORD PTR [rsi-0x51],ecx
   140019cc1:	fmul   DWORD PTR [rbx]
   140019cc3:	fldcw  WORD PTR [rdx+0x4a1fcd2b]
   140019cc9:	call   FWORD PTR [rdi+0x9]
   140019ccc:	cmp    al,0xb
   140019cce:	fistp  QWORD PTR [rcx+0x1f]
   140019cd1:	jle    0x140019cba
   140019cd3:	cli    
   140019cd4:	sub    BYTE PTR [rbx+0x24409a83],dl
   140019cda:	sar    BYTE PTR [rdi],1
   140019cdc:	pop    rbx
   140019cdd:	outs   dx,DWORD PTR ds:[rsi]
   140019cde:	xor    al,BYTE PTR [rcx+0x77]
   140019ce1:	fs push rax
   140019ce3:	and    BYTE PTR [rax],al
   140019ce5:	fcomi  st,st(4)
   140019ce7:	(bad)  
   140019ce8:	retf   0x140a
   140019ceb:	(bad)  
   140019cec:	or     DWORD PTR [rbx*2-0x48500053],ebx
   140019cf3:	jge    0x140019cda
   140019cf5:	retf   0xc03f
   140019cf8:	test   BYTE PTR [rdi+rbx*4-0x41],0xbb
   140019cfd:	loope  0x140019cbd
   140019cff:	out    dx,eax
   140019d00:	jne    0x140019d3d
   140019d02:	rex.RXB and r9d,r10d
   140019d05:	ja     0x140019cb8
   140019d07:	jae    0x140019cf2
   140019d09:	rex.WRXB jo 0x140019cf4
   140019d0c:	adc    ebx,DWORD PTR [rdi]
   140019d0e:	movabs al,ds:0x2a2e9bdd403d3d3
   140019d17:	js     0x140019cc2
   140019d19:	mov    bh,0x36
   140019d1b:	or     cl,BYTE PTR [rax]
   140019d1d:	add    BYTE PTR [rdx+0x27],al
   140019d20:	loopne 0x140019ce6
   140019d22:	sbb    edi,edx
   140019d24:	(bad)  
   140019d25:	ds push rax
   140019d27:	push   rdi
   140019d28:	sbb    al,ch
   140019d2a:	test   eax,0xed663a03
   140019d2f:	jmp    0x140019d19
   140019d31:	(bad)  
   140019d32:	fisttp WORD PTR [rcx-0x17b28aff]
   140019d38:	je     0x140019cfe
   140019d3a:	fcmovbe st,st(7)
   140019d3c:	adc    eax,0xb910686b
   140019d41:	and    bh,al
   140019d43:	adc    ch,BYTE PTR [rsi+0x34]
   140019d46:	cld    
   140019d47:	rex.RXB cli 
   140019d49:	ds imul edi
   140019d4c:	outs   dx,DWORD PTR ds:[rsi]
   140019d4d:	jmp    FWORD PTR [rdi]
   140019d4f:	movabs eax,ds:0x307ec5cdc76b00ba
   140019d58:	movabs eax,ds:0x37e99c7513c05e56
   140019d61:	in     al,0xa0
   140019d63:	jle    0x140019d23
   140019d65:	and    eax,DWORD PTR [rbp-0x66bbae70]
   140019d6b:	sbb    eax,ebx
   140019d6d:	(bad)  
   140019d6e:	clc    
   140019d6f:	mov    dl,0x12
   140019d71:	enter  0x824a,0x61
   140019d75:	mov    cl,0xc6
   140019d77:	mov    DWORD PTR [rbp-0x40a41088],ecx
   140019d7d:	jb     0x140019d64
   140019d7f:	outs   dx,DWORD PTR ds:[rsi]
   140019d80:	ins    DWORD PTR es:[rdi],dx
   140019d81:	(bad)  
   140019d82:	cld    
   140019d83:	(bad)  
   140019d84:	cli    
   140019d85:	std    
   140019d86:	(bad)  
   140019d87:	cmp    cx,di
   140019d8a:	(bad)  
   140019d8b:	and    al,0xf7
   140019d8d:	loopne 0x140019d21
   140019d8f:	(bad)  
   140019d90:	pop    rsi
   140019d91:	and    DWORD PTR [rbp-0x78e31779],0xffffffb8
   140019d98:	mov    eax,0xfa4da85d
   140019d9d:	mov    ebp,0x5eb79f59
   140019da2:	add    ch,bh
   140019da4:	(bad)  
   140019da5:	fcomi  st,st(7)
   140019da7:	loopne 0x140019d58
   140019da9:	(bad)  
   140019daa:	(bad)  
   140019dab:	jmp    0x1855eeaae
   140019db0:	neg    ebp
   140019db2:	rex.XB enter 0x3eb0,0x4
   140019db7:	jbe    0x140019d8f
   140019db9:	fidivr WORD PTR [rdx-0x19]
   140019dbc:	mov    bh,0x2d
   140019dbe:	mov    dl,0x1e
   140019dc0:	jnp    0x140019d6d
   140019dc2:	pop    rdi
   140019dc3:	mov    ?,esp
   140019dc5:	cmp    esp,ecx
   140019dc7:	adc    ecx,edi
   140019dc9:	js     0x140019de6
   140019dcb:	pop    rbx
   140019dcc:	sbb    al,0x72
   140019dce:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019dcf:	in     al,dx
   140019dd0:	iret   
   140019dd1:	jl     0x140019dac
   140019dd3:	mov    dl,0xb8
   140019dd5:	stos   BYTE PTR es:[rdi],al
   140019dd6:	in     al,dx
   140019dd7:	(bad)  
   140019dd8:	ins    DWORD PTR es:[rdi],dx
   140019dd9:	jmp    0x1add6530b
   140019dde:	mov    eax,0xd2ff27ee
   140019de3:	mov    dh,0xf7
   140019de5:	xchg   r14d,eax
   140019de7:	(bad)  
   140019de8:	(bad)  
   140019de9:	(bad)
   140019dec:	loopne 0x140019dd2
   140019dee:	jns    0x140019def
   140019df0:	or     ecx,DWORD PTR [rip+0x1ea7fd7d]        # 0x15ea99b73
   140019df6:	ds cld 
   140019df8:	iret   
   140019df9:	mov    edi,0x8d303930
   140019dfe:	in     eax,dx
   140019dff:	sar    bh,1
   140019e01:	movabs ds:0xaa8918bdadd8bff0,al
   140019e0a:	(bad)  
   140019e0b:	cmp    al,0x54
   140019e0d:	loope  0x140019e7b
   140019e0f:	mov    edi,0xf05db8bb
   140019e14:	int    0xb4
   140019e16:	outs   dx,DWORD PTR ds:[rsi]
   140019e17:	(bad)  
   140019e18:	shl    dh,0xfd
   140019e1b:	fstp   st(5)
   140019e1d:	not    DWORD PTR [rsi-0x63]
   140019e20:	push   0xffffffffffffffa1
   140019e22:	push   rbx
   140019e23:	(bad)  
   140019e24:	je     0x140019e10
   140019e26:	sbb    BYTE PTR [rsi-0x21217f62],0x80
   140019e2d:	ficomp WORD PTR [rsi+0x42]
   140019e30:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019e31:	add    edx,esp
   140019e33:	sbb    eax,0x50075542
   140019e38:	rex.WRB or BYTE PTR [r13-0x2f7e5600],r11b
   140019e3f:	and    DWORD PTR [rsi+rcx*1-0x55fbc57f],eax
   140019e46:	and    bh,bh
   140019e48:	xlat   BYTE PTR ds:[rbx]
   140019e49:	add    DWORD PTR [rcx+rdx*1+0x48],edx
   140019e4d:	push   rdi
   140019e4e:	and    esp,DWORD PTR [rcx-0x1bfa95b6]
   140019e54:	xor    eax,DWORD PTR [rax+0x511ff96a]
   140019e5a:	mov    es,WORD PTR [rbp+0x5503d04a]
   140019e60:	mov    cl,BYTE PTR [rdx]
   140019e62:	mov    dl,BYTE PTR [rbp+0x14]
   140019e65:	and    al,0xb9
   140019e67:	(bad)  
   140019e68:	fidivr DWORD PTR [rcx-0x1b]
   140019e6b:	out    dx,al
   140019e6c:	fidiv  WORD PTR ds:[rcx+0x24381747]
   140019e73:	enter  0x7cfa,0xae
   140019e77:	rex.WRXB ins BYTE PTR es:[rdi],dx
   140019e79:	and    ebp,DWORD PTR [rbx+0x4f]
   140019e7c:	sub    eax,0x356f33fb
   140019e81:	neg    BYTE PTR ds:[rax]
   140019e84:	and    al,0x9
   140019e86:	push   0x6fe8e12d
   140019e8b:	(bad)  
   140019e8c:	fscale 
   140019e8e:	outs   dx,DWORD PTR ds:[rsi]
   140019e8f:	mov    edi,0x8b303930
   140019e94:	(bad)  
   140019e95:	(bad)  
   140019e96:	mov    edx,0x4dedbffe
   140019e9b:	sahf   
   140019e9c:	movabs eax,ds:0xb9c617c7085b3dcd
   140019ea5:	mov    BYTE PTR [rax],al
   140019ea7:	pop    rsi
   140019ea8:	scas   al,BYTE PTR es:[rdi]
   140019ea9:	sub    eax,0x140e80a3
   140019eae:	add    eax,0x479ae57c
   140019eb3:	(bad)  
   140019eb4:	out    dx,eax
   140019eb5:	jge    0x140019ef4
   140019eb7:	fisttp QWORD PTR [rdi]
   140019eb9:	or     al,ah
   140019ebb:	(bad)  
   140019ebc:	pop    rdi
   140019ebd:	push   rdx
   140019ebe:	cmp    eax,DWORD PTR [rcx+rdx*1]
   140019ec1:	push   rdx
   140019ec2:	es adc eax,0xbe6fb2d6
   140019ec8:	stc    
   140019ec9:	out    0xc8,al
   140019ecb:	scas   eax,DWORD PTR es:[rdi]
   140019ecc:	gs jrcxz 0x140019ee5
   140019ecf:	xor    ebp,edi
   140019ed1:	pop    rbp
   140019ed2:	je     0x140019ec1
   140019ed4:	cmp    ecx,DWORD PTR [rdi]
   140019ed6:	shl    BYTE PTR [rbx-0x4704fe80],cl
   140019edc:	sub    BYTE PTR [rcx],bl
   140019ede:	mov    ch,0xaa
   140019ee0:	cmp    al,0xf9
   140019ee2:	push   0x6c909c1b
   140019ee7:	xor    al,BYTE PTR [rbx-0x4a4505ec]
   140019eed:	cld    
   140019eee:	mov    dh,0xa6
   140019ef0:	add    eax,0x9e8b0
   140019ef5:	xchg   edx,eax
   140019ef6:	out    0x2f,eax
   140019ef8:	pop    rcx
   140019ef9:	rex.X and al,0x29
   140019efc:	test   eax,0x36028800
   140019f01:	sbb    DWORD PTR [rbx-0x7cec681],esi
   140019f07:	sar    DWORD PTR [rdi],cl
   140019f09:	repz lock and eax,0xf63723f7
   140019f10:	clc    
   140019f11:	mov    ebx,0x72f3e057
   140019f16:	outs   dx,BYTE PTR ds:[rsi]
   140019f17:	in     eax,dx
   140019f18:	(bad)
   140019f1b:	enter  0x3642,0x17
   140019f1f:	mov    bh,0x97
   140019f21:	outs   dx,DWORD PTR ds:[rsi]
   140019f22:	movsxd edi,esp
   140019f24:	(bad)  
   140019f25:	in     eax,dx
   140019f26:	pop    rbp
   140019f27:	ins    DWORD PTR es:[rdi],dx
   140019f28:	mov    WORD PTR [rbp+riz*2+0x15],ds
   140019f2c:	jle    0x140019f0c
   140019f2e:	neg    esi
   140019f30:	mov    ebx,0xf6ecbbb3
   140019f35:	mov    eax,DWORD PTR [rax+0x6b]
   140019f38:	sub    DWORD PTR [rax+0x29],ecx
   140019f3b:	push   0xffffffffffffff82
   140019f3d:	(bad)  
   140019f3e:	sub    BYTE PTR [rcx-0x7b],cl
   140019f41:	rex.RX and r9d,DWORD PTR [rcx+0x21]
   140019f45:	(bad)  
   140019f46:	test   al,0x1
   140019f48:	jg     0x140019f62
   140019f4a:	adc    esp,DWORD PTR [rcx]
   140019f4c:	rex.RX
   140019f4d:	rex.X test al,0x44
   140019f50:	movsxd eax,DWORD PTR [rax+0x4]
   140019f53:	stc    
   140019f54:	(bad)  
   140019f55:	xor    al,0x84
   140019f57:	add    al,0x49
   140019f59:	add    al,0x7f
   140019f5b:	sub    DWORD PTR [rax+0x3],esp
   140019f5e:	(bad)  
   140019f5f:	sbb    BYTE PTR [rdx+rdi*8-0x4f],cl
   140019f63:	repnz movabs eax,ds:0x5a856bf42a54d42d
   140019f6d:	sti    
   140019f6e:	xchg   r9d,eax
   140019f70:	(bad)  
   140019f71:	rex.X sub eax,0xb6eedafd
   140019f77:	fcmovnu st,st(5)
   140019f79:	ins    DWORD PTR es:[rdi],dx
   140019f7a:	mov    ebx,0xceeeedd3
   140019f7f:	int3   
   140019f80:	cmp    eax,0x79cf78fe
   140019f85:	fcomip st,st(7)
   140019f87:	outs   dx,BYTE PTR ds:[rsi]
   140019f88:	(bad)  
   140019f89:	lahf   
   140019f8a:	jbe    0x140019f7b
   140019f8c:	outs   dx,BYTE PTR ds:[rsi]
   140019f8d:	iret   
   140019f8e:	xchg   ebx,eax
   140019f8f:	int3   
   140019f90:	(bad)  
   140019f91:	popf   
   140019f92:	mov    ecx,0xb6676677
   140019f97:	cmp    eax,0x3be73ce7
   140019f9c:	push   0xfffffffff57bdae1
   140019fa1:	retf   
   140019fa2:	push   rsi
   140019fa3:	pop    rsp
   140019fa4:	cmp    eax,0x9a7b7aa3
   140019fa9:	ret    0x14da
   140019fac:	outs   dx,BYTE PTR ds:[rsi]
   140019fad:	jrcxz  0x140019fde
   140019faf:	sti    
   140019fb0:	div    DWORD PTR [rdx-0x230bdce4]
   140019fb6:	ret    
   140019fb7:	or     DWORD PTR [rax+rdi*4-0x4a088000],ebx
   140019fbe:	lea    esi,[rbp+0x16]
   140019fc1:	xchg   ebp,eax
   140019fc2:	mov    WORD PTR [rdx+riz*8-0x21e49b64],fs
   140019fc9:	(bad)  
   140019fca:	or     BYTE PTR [rax-0x1ff8ce53],al
   140019fd0:	cld    
   140019fd1:	mov    cl,0xdb
   140019fd3:	and    ah,BYTE PTR [rbx-0x37]
   140019fd6:	rex.R cmc 
   140019fd8:	cmp    ah,ah
   140019fda:	test   DWORD PTR [rdi],esi
   140019fdc:	(bad)  
   140019fdd:	mov    al,BYTE PTR [rip+0xffffffffb31fe145]        # 0xf3218128
   140019fe3:	(bad)  
   140019fe4:	retf   
   140019fe5:	mov    edx,0xef53d96a
   140019fea:	mov    edi,0x1794ee6c
   140019fef:	icebp  
   140019ff0:	clc    
   140019ff1:	push   0xffffffffffffff82
   140019ff3:	jae    0x140019ffc
   140019ff5:	jb     0x14001a047
   140019ff7:	ins    DWORD PTR es:[rdi],dx
   140019ff8:	sti    
   140019ff9:	jmp    0x13bc0e7f4
   140019ffe:	(bad)  
   140019fff:	cld    
   14001a000:	in     eax,dx
   14001a001:	push   0xffffffff855fbf36
   14001a006:	(bad)  
   14001a007:	inc    DWORD PTR [rbx]
   14001a009:	stc    
   14001a00a:	mov    ebx,0x3fccb8de
   14001a00f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a010:	or     al,0xe0
   14001a012:	(bad)
   14001a017:	or     DWORD PTR cs:[rax+rax*2],0x5b
   14001a01c:	stos   DWORD PTR es:[rdi],eax
   14001a01d:	int    0x2f
   14001a01f:	(bad)  
   14001a021:	fnstcw WORD PTR [rbp-0x55]
   14001a024:	addr32 push rsi
   14001a026:	call   0xe7943391
   14001a02b:	in     eax,0x7e
   14001a02d:	mov    eax,0x21a61f86
   14001a032:	adc    eax,0x7dfc1477
   14001a037:	xor    DWORD PTR [rdi-0x1110edc2],esi
   14001a03d:	mov    esp,0x5a162f4b
   14001a042:	ins    BYTE PTR es:[rdi],dx
   14001a043:	cmp    ecx,edi
   14001a045:	sub    eax,DWORD PTR [rbx-0x55]
   14001a048:	cmp    cl,al
   14001a04a:	sub    DWORD PTR [rcx],ecx
   14001a04c:	add    al,0x1
   14001a04e:	cmc    
   14001a04f:	and    cl,bh
   14001a051:	in     al,dx
   14001a052:	and    al,cl
   14001a054:	mov    esp,0xa7c31a09
   14001a059:	cmc    
   14001a05a:	fdiv   QWORD PTR [rcx]
   14001a05c:	in     eax,0x91
   14001a05e:	jb     0x14001a029
   14001a060:	popf   
   14001a061:	loop   0x140019ff4
   14001a063:	rex.RB adc eax,0x467c2394
   14001a069:	(bad)  
   14001a06a:	(bad)  
   14001a06b:	(bad)  
   14001a06c:	rex.RX pop rdx
   14001a06e:	lahf   
   14001a06f:	pop    rsp
   14001a070:	sar    BYTE PTR [rbp-0x34c7e610],cl
   14001a076:	(bad)  
   14001a077:	xor    edi,esp
   14001a079:	xor    eax,0xd00937e8
   14001a07e:	sbb    al,al
   14001a080:	(bad)
   14001a083:	ret    0xa802
   14001a086:	(bad)  
   14001a087:	out    0x76,al
   14001a089:	cld    
   14001a08a:	(bad)  
   14001a08b:	lods   eax,DWORD PTR ds:[rsi]
   14001a08c:	jne    0x14001a023
   14001a08e:	int    0x0
   14001a090:	fwait
   14001a091:	mov    DWORD PTR [rdi],ebx
   14001a093:	outs   dx,DWORD PTR ds:[rsi]
   14001a094:	fsubr  st,st(7)
   14001a096:	(bad)  
   14001a097:	fisub  WORD PTR [rdi+0x47]
   14001a09a:	push   0x60
   14001a09c:	xor    ah,dl
   14001a09e:	movsxd eax,DWORD PTR [rax]
   14001a0a0:	test   eax,0xf3a9363b
   14001a0a5:	stc    
   14001a0a6:	in     eax,0x79
   14001a0a8:	xchg   edx,eax
   14001a0a9:	lods   eax,DWORD PTR ds:[rsi]
   14001a0aa:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a0ab:	mov    ecx,esp
   14001a0ad:	(bad)  
   14001a0ae:	and    esi,ecx
   14001a0b0:	jmp    rcx
   14001a0b2:	cli    
   14001a0b3:	adc    esp,DWORD PTR ds:[rdi+0xde12858]
   14001a0ba:	cmp    eax,0xf8848009
   14001a0bf:	xor    eax,0x45c71ee4
   14001a0c4:	jnp    0x14001a117
   14001a0c6:	enter  0xc5c8,0x4
   14001a0ca:	clc    
   14001a0cb:	pop    rdx
   14001a0cc:	rex.WXB sbb al,0xf
   14001a0cf:	cmp    bl,0x2a
   14001a0d2:	shl    DWORD PTR [rax+riz*1],1
   14001a0d5:	mov    edi,0x6ebe53f0
   14001a0da:	fs (bad) 
   14001a0dc:	or     al,0x8
   14001a0de:	jge    0x14001a143
   14001a0e0:	jmp    0x14bdec6cf
   14001a0e5:	lahf   
   14001a0e6:	xor    r13d,r11d
   14001a0e9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a0ea:	ret    0x493f
   14001a0ed:	shl    BYTE PTR [rax+riz*8],1
   14001a0f0:	(bad)
   14001a0f3:	popf   
   14001a0f4:	(bad)  
   14001a0f5:	rex.WB fstp st(2)
   14001a0f8:	push   rbx
   14001a0f9:	mov    bh,0xce
   14001a0fb:	lods   eax,DWORD PTR ds:[rsi]
   14001a0fc:	jle    0x14001a127
   14001a0fe:	retf   
   14001a0ff:	int3   
   14001a100:	sbb    al,0x9b
   14001a102:	pop    rcx
   14001a103:	(bad)  
   14001a104:	ror    bl,0x8c
   14001a107:	adc    esi,edx
   14001a109:	test   BYTE PTR [rbp-0x10f8fec4],al
   14001a10f:	loopne 0x14001a0af
   14001a111:	rex.WXB ret 0xa231
   14001a115:	sbb    BYTE PTR [rsi+0x1f1e6449],0x79
   14001a11c:	xlat   BYTE PTR ds:[rbx]
   14001a11d:	rex.B (bad) 
   14001a11f:	(bad)  
   14001a120:	shr    BYTE PTR [rsi-0x1c836cd5],cl
   14001a126:	(bad)  
   14001a127:	pop    rsp
   14001a128:	mov    edi,0xfb7b8765
   14001a12d:	rex.WB scas al,BYTE PTR es:[rdi]
   14001a12f:	xor    eax,0xa1fc2e0
   14001a134:	mov    WORD PTR [rax+rbx*2+0x5],es
   14001a138:	mov    ebx,0x911dde22
   14001a13d:	scas   eax,DWORD PTR es:[rdi]
   14001a13e:	in     al,0x9c
   14001a140:	jl     0x14001a1c1
   14001a142:	popf   
   14001a143:	jnp    0x14001a11b
   14001a145:	xor    DWORD PTR [rbx-0x348b722d],ecx
   14001a14b:	mov    ebp,0x723c167b
   14001a150:	hlt    
   14001a151:	jl     0x14001a189
   14001a153:	mov    WORD PTR [rax-0x3],es
   14001a156:	mov    ch,0xc1
   14001a158:	adc    ah,BYTE PTR [ecx+0x43e2e00c]
   14001a15f:	rex.X outs dx,DWORD PTR ds:[rsi]
   14001a161:	or     eax,0xbdd5f500
   14001a166:	mov    bl,0x6
   14001a168:	rex.WRX out 0x2d,al
   14001a16b:	imul   ecx,DWORD PTR [rbp-0x75],0x9
   14001a16f:	jnp    0x14001a0f8
   14001a171:	mov    bl,0xbc
   14001a173:	mov    eax,0x9802be35
   14001a178:	or     al,0x30
   14001a17a:	sub    eax,0x716ff91c
   14001a17f:	sar    DWORD PTR [rbp-0x41],1
   14001a182:	rex.WRXB xchg r14,rax
   14001a184:	fld    DWORD PTR [rax-0x71bc3d65]
   14001a18a:	or     DWORD PTR [rax+rax*1+0x7c303331],esp
   14001a191:	popf   
   14001a192:	jae    0x14001a1c7
   14001a194:	mov    BYTE PTR [rdi-0x2b87f79],ah
   14001a19a:	cmp    BYTE PTR [rbp-0x7dc7b7d],ah
   14001a1a0:	pop    rsp
   14001a1a1:	rex.WRXB (bad) 
   14001a1a3:	xchg   ebx,eax
   14001a1a4:	sub    BYTE PTR [rbx-0x76fd4ae0],dh
   14001a1aa:	add    al,0x2a
   14001a1ac:	popf   
   14001a1ad:	add    ah,BYTE PTR [rcx]
   14001a1af:	ret    
   14001a1b0:	adc    eax,0x85371080
   14001a1b5:	clc    
   14001a1b6:	jg     0x14001a1cc
   14001a1b8:	rex.RB ret 0x7eef
   14001a1bc:	mov    WORD PTR [rdx+rdx*4],?
   14001a1bf:	jge    0x14001a180
   14001a1c1:	clc    
   14001a1c2:	iret   
   14001a1c3:	adc    eax,0x6c1eee3f
   14001a1c8:	(bad)  
   14001a1c9:	test   BYTE PTR [rsi-0x4],al
   14001a1cc:	rex.WXB add rdx,QWORD PTR [r13+0x0]
   14001a1d0:	xchg   ebx,eax
   14001a1d1:	add    ebp,edi
   14001a1d3:	(bad)  
   14001a1d4:	add    BYTE PTR [rax-0x6202543],ch
   14001a1da:	rex.WX and rsp,QWORD PTR [rbp-0x59f73656]
   14001a1e1:	and    al,BYTE PTR [rdx-0x12]
   14001a1e4:	cwde   
   14001a1e5:	or     cl,0xc
   14001a1e8:	ins    BYTE PTR es:[rdi],dx
   14001a1e9:	pushfw 
   14001a1eb:	sbb    eax,eax
   14001a1ed:	add    cl,BYTE PTR [rcx-0x34]
   14001a1f0:	or     ah,bh
   14001a1f2:	add    BYTE PTR [rsi-0x545211ac],cl
   14001a1f8:	or     ah,BYTE PTR [rsi+rsi*4+0x60]
   14001a1fc:	xchg   ebx,eax
   14001a1fd:	jo     0x14001a18c
   14001a1ff:	adc    ebx,DWORD PTR [rsi-0x15]
   14001a202:	push   rbx
   14001a203:	jg     0x14001a1cb
   14001a205:	mov    bl,0x8b
   14001a207:	loopne 0x14001a20b
   14001a209:	clc    
   14001a20a:	jmp    0x14001a1a5
   14001a20c:	fimul  WORD PTR [rbx]
   14001a20e:	adc    ecx,DWORD PTR [rax+0xa87ad97]
   14001a214:	add    ch,BYTE PTR ds:[rsi+rcx*1-0x68]
   14001a219:	cmp    al,0xb0
   14001a21b:	add    eax,0x21288739
   14001a220:	(bad)  
   14001a221:	or     al,0xc6
   14001a223:	leave  
   14001a224:	hlt    
   14001a225:	lods   eax,DWORD PTR ds:[rsi]
   14001a226:	in     al,dx
   14001a227:	popf   
   14001a228:	icebp  
   14001a229:	shl    bl,1
   14001a22b:	xchg   DWORD PTR [rdi-0x35],esp
   14001a22e:	mov    ?,WORD PTR [rdx]
   14001a230:	ins    DWORD PTR es:[rdi],dx
   14001a231:	lock sub DWORD PTR [rcx],ecx
   14001a234:	(bad)  
   14001a235:	add    eax,0xd268d8b8
   14001a23a:	sub    bh,BYTE PTR [rcx+rsi*8-0x268ab89c]
   14001a241:	(bad)  
   14001a242:	(bad)  
   14001a243:	(bad)  
   14001a244:	jbe    0x14001a29f
   14001a246:	cmp    ebx,ebp
   14001a248:	rex test eax,0x7de14d81
   14001a24e:	jb     0x14001a2b3
   14001a250:	popf   
   14001a251:	rcr    BYTE PTR [rbx],0x4e
   14001a254:	or     eax,0x76c106c2
   14001a259:	xchg   esi,eax
   14001a25a:	cdq    
   14001a25b:	and    bh,BYTE PTR [rdi-0x63]
   14001a25e:	movabs ds:0xc12c12526f3386f2,eax
   14001a267:	rex.XB movabs eax,ds:0xf4081edf605d92f3
   14001a271:	ds out dx,al
   14001a273:	(bad)  
   14001a274:	lock mov ebp,0x1a043603
   14001a27a:	jge    0x14001a278
   14001a27c:	iret   
   14001a27d:	mov    ebx,0x21c84001
   14001a282:	test   BYTE PTR [rax+0x63f49ba4],ah
   14001a288:	ror    eax,1
   14001a28a:	test   eax,0xf3bfa1ba
   14001a28f:	sub    edi,0x1feab9ef
   14001a295:	rcl    BYTE PTR [rcx+0x3283a55e],1
   14001a29b:	or     cl,0x43
   14001a29e:	movabs eax,ds:0x514a65edb54f6338
   14001a2a7:	(bad)  
   14001a2a8:	ins    BYTE PTR es:[rdi],dx
   14001a2a9:	loope  0x14001a318
   14001a2ab:	rex.R fbld TBYTE PTR [rbp+0x38]
   14001a2af:	(bad)  
   14001a2b0:	and    eax,0xeb9b16c4
   14001a2b5:	std    
   14001a2b6:	rex.RB
   14001a2b7:	rex.WB clc 
   14001a2b9:	fadd   DWORD PTR [rax-0x3e76ad77]
   14001a2bf:	mov    dl,0x3b
   14001a2c1:	(bad)  
   14001a2c2:	(bad)  
   14001a2c3:	and    ah,BYTE PTR [rsi]
   14001a2c5:	(bad)  
   14001a2c6:	add    BYTE PTR [rax+rax*2-0x7709acf7],0x4d
   14001a2ce:	rex.W (bad) 
   14001a2d0:	adc    cl,cl
   14001a2d2:	movsxd ebp,DWORD PTR [rsi]
   14001a2d4:	or     BYTE PTR [rdx-0x741b0127],dl
   14001a2da:	xchg   BYTE PTR [rdx+0x471f1ed2],ah
   14001a2e0:	or     BYTE PTR [rbp+0x1018c608],dh
   14001a2e6:	push   rcx
   14001a2e7:	ins    DWORD PTR es:[rdi],dx
   14001a2e8:	out    0x60,eax
   14001a2ea:	(bad)  
   14001a2eb:	sbb    BYTE PTR [rcx+0x0],dh
   14001a2ee:	add    BYTE PTR [rax],cl
   14001a2f0:	push   rdi
   14001a2f1:	rex.WB
   14001a2f2:	rex.R
   14001a2f3:	push   r12
   14001a2f5:	fdecstp 
   14001a2f7:	rex.RXB mov r15d,0x26c173bd
   14001a2fd:	cld    
   14001a2fe:	scas   eax,DWORD PTR es:[rdi]
   14001a2ff:	sbb    bh,BYTE PTR [rdi-0x3b]
   14001a302:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a303:	rex.X sbb eax,eax
   14001a306:	and    BYTE PTR fs:[rbx+rax*1],al
   14001a30a:	in     eax,0x96
   14001a30c:	mov    esp,0xffbdb275
   14001a311:	out    dx,al
   14001a312:	sbb    ecx,DWORD PTR [rsi+0x7f]
   14001a315:	xor    DWORD PTR [rbx-0x37],ebp
   14001a318:	out    0x8b,eax
   14001a31a:	ror    BYTE PTR [rbx+0x6ffced9f],0x8e
   14001a321:	mov    ah,0x33
   14001a323:	or     ecx,DWORD PTR [rax+0x5d20739b]
   14001a329:	jns    0x14001a301
   14001a32b:	js     0x14001a327
   14001a32d:	(bad)  
   14001a32e:	cli    
   14001a32f:	ins    BYTE PTR es:[rdi],dx
   14001a330:	rex.WR mov al,0xdc
   14001a333:	rex.X jmp 0x14001a383
   14001a336:	xchg   ecx,eax
   14001a337:	movabs ds:0xb7a53c0302cc201b,al
   14001a340:	shl    ebp,1
   14001a342:	repnz sbb bl,BYTE PTR [rdi-0x7c]
   14001a346:	and    al,0xaf
   14001a348:	test   ebp,0xb80d42bf
   14001a34e:	pop    rcx
   14001a34f:	mov    BYTE PTR [rsi+rsi*8],cl
   14001a352:	push   rdi
   14001a353:	pop    rbx
   14001a354:	lahf   
   14001a355:	mov    edx,0x2fb5eb75
   14001a35a:	movabs al,ds:0x3280a5fea55f24d9
   14001a363:	or     cl,0x43
   14001a366:	and    DWORD PTR [rip+0xffffffff9d9aac78],esp        # 0xdd9c4fe4
   14001a36c:	(bad)  
   14001a36d:	js     0x14001a39d
   14001a36f:	jnp    0x14001a3c2
   14001a371:	lods   al,BYTE PTR ds:[rsi]
   14001a372:	cmp    BYTE PTR [rcx+0x3e69f615],dh
   14001a378:	cmovle r9,QWORD PTR [rbp+r15*8+0x49]
   14001a37e:	leave  
   14001a37f:	(bad)  
   14001a380:	xor    ah,bl
   14001a382:	outs   dx,BYTE PTR ds:[rsi]
   14001a383:	or     edi,ebx
   14001a385:	push   rdx
   14001a386:	mov    ecx,0xc09604c7
   14001a38b:	sub    al,0x22
   14001a38d:	and    eax,0x13320d4e
   14001a392:	lock mov al,dh
   14001a395:	clc    
   14001a396:	imul   esi,DWORD PTR [rbx+0x5f],0xffffff8b
   14001a39a:	add    BYTE PTR [rsi+0x1e],ch
   14001a39d:	sub    dl,BYTE PTR [rsi+0x83dc707]
   14001a3a3:	mov    dl,0x97
   14001a3a5:	pop    rsi
   14001a3a6:	mov    dl,BYTE PTR [rax-0x409b7372]
   14001a3ac:	stc    
   14001a3ad:	ret    0x85a6
   14001a3b0:	retf   
   14001a3b1:	movabs eax,ds:0xa164c0194352bee9
   14001a3ba:	cwde   
   14001a3bb:	adc    dh,BYTE PTR [rax+rax*1+0x53a3256c]
   14001a3c2:	mov    bh,0x5c
   14001a3c4:	cmp    eax,0xc12495f2
   14001a3c9:	int3   
   14001a3ca:	and    BYTE PTR [rcx+riz*1+0x7c9647cd],cl
   14001a3d1:	rex.R pop rsi
   14001a3d3:	retf   0x3d84
   14001a3d6:	pop    rbp
   14001a3d7:	xchg   edi,eax
   14001a3d8:	xor    al,0x5e
   14001a3da:	and    al,0xb0
   14001a3dc:	and    DWORD PTR [rip+0xffffffffc3b43088],edx        # 0x103b5d46a
   14001a3e2:	mov    al,BYTE PTR [rbx+rsi*1]
   14001a3e5:	lods   eax,DWORD PTR ds:[rsi]
   14001a3e6:	(bad)  
   14001a3e7:	stc    
   14001a3e8:	cmp    BYTE PTR [rcx],al
   14001a3ea:	jno    0x14001a388
   14001a3ec:	movabs al,ds:0xfdb3f2286a3bbab0
   14001a3f5:	rex.X
   14001a3f6:	adc    QWORD PTR [r13+rdx*1+0x31a57d8],rsp
   14001a3fe:	call   0xf15b111e
   14001a403:	je     0x14001a3d0
   14001a405:	ret    0xce27
   14001a408:	(bad)  
   14001a409:	in     al,dx
   14001a40a:	or     BYTE PTR [rax+rbp*8],dh
   14001a40d:	push   rdi
   14001a40e:	push   0x28
   14001a410:	add    ebx,DWORD PTR [rax-0x7dadeba4]
   14001a416:	retf   
   14001a417:	fistp  QWORD PTR [rcx+0x68c4efbc]
   14001a41d:	mov    dh,0x8e
   14001a41f:	adc    bl,BYTE PTR [rbx]
   14001a421:	sub    al,0xbc
   14001a423:	pop    rax
   14001a424:	out    dx,al
   14001a425:	xor    al,0xb4
   14001a427:	(bad)  
   14001a428:	mov    edx,0x850214c7
   14001a42d:	imul   edx,DWORD PTR [rdi+rcx*1],0x6a4c0d48
   14001a434:	cdq    
   14001a435:	and    eax,0x4840a898
   14001a43a:	cwde   
   14001a43b:	add    al,0x22
   14001a43d:	and    eax,0xc38a8a62
   14001a442:	adc    cl,BYTE PTR [rax]
   14001a444:	cmp    DWORD PTR [rax],ebp
   14001a446:	lods   al,BYTE PTR ds:[rsi]
   14001a447:	loopne 0x14001a43f
   14001a449:	rex.RB (bad) 
   14001a44b:	movabs ds:0xcf7cc4632feb6244,al
   14001a454:	xor    DWORD PTR [rip+0xffffffffafa7a818],0x9afbbd7e        # 0xefa94c76
   14001a45e:	mov    DWORD PTR [rsi],0xddd912c6
   14001a464:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a465:	repz cld 
   14001a467:	rex.WX or al,0x55
   14001a46a:	add    BYTE PTR [rbx+0x3604090f],dl
   14001a470:	add    ah,dl
   14001a472:	(bad)  
   14001a473:	jp     0x14001a429
   14001a475:	movabs ds:0xe3eae9336c314f2b,eax
   14001a47e:	xor    al,0x9f
   14001a480:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a481:	sub    BYTE PTR [rax-0x69],cl
   14001a484:	xchg   DWORD PTR [rsi-0x4c1111ff],ebx
   14001a48a:	loop   0x14001a4aa
   14001a48c:	rex.W add al,dl
   14001a48f:	or     bh,BYTE PTR [rbx]
   14001a491:	(bad)  
   14001a492:	(bad)  
   14001a493:	loopne 0x14001a4aa
   14001a495:	(bad)  
   14001a496:	add    DWORD PTR [rdx+0x72],edx
   14001a499:	out    dx,al
   14001a49a:	test   BYTE PTR [rax],ch
   14001a49c:	adc    al,0x9e
   14001a49e:	adc    BYTE PTR [rdx+0x2c],ch
   14001a4a1:	dec    esi
   14001a4a3:	add    al,0x8e
   14001a4a5:	(bad)  
   14001a4a6:	rex.RXB adc eax,0xf1f7147f
   14001a4ac:	sti    
   14001a4ad:	jmp    0x14fe58970
   14001a4b2:	xor    al,al
   14001a4b4:	loopne 0x14001a52e
   14001a4b6:	mov    dl,0xe1
   14001a4b8:	(bad)  
   14001a4b9:	mov    edi,0x81c8fd5f
   14001a4be:	push   0x4b
   14001a4c0:	pop    rsp
   14001a4c1:	call   0x104c13b69
   14001a4c6:	push   rax
   14001a4c7:	add    eax,0xb0b89930
   14001a4cc:	push   rbp
   14001a4cd:	mov    bl,0xf6
   14001a4cf:	rol    BYTE PTR [rsi-0xc780487],1
   14001a4d5:	and    edx,DWORD PTR fs:[rdx-0x7e]
   14001a4d9:	rex.WRB popf 
   14001a4db:	scas   eax,DWORD PTR es:[rdi]
   14001a4dc:	outs   dx,BYTE PTR ds:[rsi]
   14001a4dd:	adc    dh,dl
   14001a4df:	rex.RB cmp al,0xee
   14001a4e2:	pop    rax
   14001a4e3:	test   BYTE PTR [rdi+0x5bdcb3ad],bl
   14001a4e9:	repnz push rcx
   14001a4eb:	jg     0x14001a4b8
   14001a4ed:	xlat   BYTE PTR ds:[rbx]
   14001a4ee:	pop    rdx
   14001a4ef:	out    dx,eax
   14001a4f0:	call   QWORD PTR [rbx+0x18]
   14001a4f3:	or     al,0x22
   14001a4f5:	ins    BYTE PTR es:[rdi],dx
   14001a4f6:	and    BYTE PTR [rip+0x18905f57],ah        # 0x158920453
   14001a4fc:	(bad)  
   14001a4fd:	and    eax,0x1e86fd66
   14001a502:	clc    
   14001a503:	(bad)  
   14001a504:	(bad)  
   14001a505:	add    edx,DWORD PTR [rdx-0x7b727c54]
   14001a50b:	(bad)  
   14001a50c:	adc    ecx,eax
   14001a50e:	ja     0x14001a51a
   14001a510:	loop   0x14001a57e
   14001a512:	cmp    eax,0x8ec0f2dd
   14001a517:	jns    0x14001a528
   14001a519:	out    dx,eax
   14001a51a:	sbb    BYTE PTR [rbx+rdi*1+0xd],ch
   14001a51e:	rex.WRB test QWORD PTR [r13+0x19],0x72802a8
   14001a526:	(bad)  
   14001a527:	or     eax,0xefa80068
   14001a52c:	cmp    BYTE PTR [rcx+0x59],dl
   14001a52f:	sub    QWORD PTR [rip+0x6e08129c],rsi        # 0x1ae09b7d2
   14001a536:	sub    BYTE PTR [rdi+0x1e56f7c3],0xde
   14001a53d:	fild   WORD PTR [rdi]
   14001a53f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a540:	jmp    0x105c1dbe9
   14001a545:	or     ebx,DWORD PTR [rax+0x21]
   14001a548:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a549:	movabs ds:0x20b72074f0515808,al
   14001a552:	add    BYTE PTR [rsi+0x19],cl
   14001a555:	fs or  bl,dl
   14001a558:	and    DWORD PTR [rsi+rdi*4+0x5f],esp
   14001a55c:	xchg   esp,eax
   14001a55d:	test   DWORD PTR [rdi+0x4d90bc9],0x382b3c80
   14001a567:	push   rbx
   14001a568:	rex.WXB movabs r11,0x667aeb03de63b47f
   14001a572:	hlt    
   14001a573:	and    ebx,DWORD PTR [rax+0x7e]
   14001a576:	ins    DWORD PTR es:[rdi],dx
   14001a577:	in     eax,dx
   14001a578:	popf   
   14001a579:	add    dl,BYTE PTR [rax+0x5]
   14001a57c:	xor    cl,bl
   14001a57e:	sub    BYTE PTR [rdx-0x57fc580],dh
   14001a584:	iret   
   14001a585:	ss pop rsp
   14001a587:	mov    ecx,0xeedd5ced
   14001a58c:	and    sil,BYTE PTR [rsp+r11*1]
   14001a590:	jle    0x14001a5aa
   14001a592:	(bad)  
   14001a593:	adc    al,BYTE PTR [rbx+rcx*8]
   14001a596:	retf   
   14001a597:	adc    al,0x9d
   14001a599:	(bad)  
   14001a59a:	cmp    eax,0x49bbb9b0
   14001a59f:	movsxd ecx,DWORD PTR [rdi]
   14001a5a1:	rex.RXB cld 
   14001a5a3:	(bad)  
   14001a5a4:	int    0x59
   14001a5a6:	lock and eax,0xb7b904e
   14001a5ac:	outs   dx,DWORD PTR ds:[rsi]
   14001a5ad:	mov    esp,0x80dae775
   14001a5b2:	xor    al,0x76
   14001a5b4:	or     eax,0x4fc1ce4
   14001a5b9:	(bad)  
   14001a5ba:	pop    rdi
   14001a5bb:	out    dx,al
   14001a5bc:	retf   
   14001a5bd:	(bad)  
   14001a5be:	and    BYTE PTR [rdi+0x23f7496b],0x3b
   14001a5c5:	out    0xde,al
   14001a5c7:	dec    edx
   14001a5c9:	xchg   ecx,eax
   14001a5ca:	sbb    DWORD PTR [rdi],esp
   14001a5cc:	sar    BYTE PTR [rbx+rax*4-0x71],1
   14001a5d0:	movabs ds:0x8252140e500550c4,al
   14001a5d9:	jnp    0x14001a62a
   14001a5db:	mov    ah,0x8e
   14001a5dd:	sbb    al,0x3c
   14001a5df:	fnsave [rdx+0x1ec2081a]
   14001a5e5:	test   BYTE PTR es:[rsi-0x2fd6c036],0xf1
   14001a5ed:	mov    bl,0x42
   14001a5ef:	or     bl,cl
   14001a5f1:	add    BYTE PTR [rdi-0x29],al
   14001a5f4:	mov    ebp,0x4f8c4902
   14001a5f9:	sti    
   14001a5fa:	jns    0x14001a5bb
   14001a5fc:	popf   
   14001a5fd:	sbb    DWORD PTR [rdx],eax
   14001a5ff:	rex.WB ins DWORD PTR es:[rdi],dx
   14001a601:	or     DWORD PTR [rdi+0x1],0x679ebf06
   14001a608:	jns    0x14001a58e
   14001a60a:	mov    dl,0x60
   14001a60c:	add    edi,DWORD PTR [rdi]
   14001a60e:	icebp  
   14001a60f:	movsxd ebp,DWORD PTR [rax+0x3c]
   14001a612:	jns    0x14001a5f7
   14001a614:	xchg   ebx,ebx
   14001a616:	repnz cmp DWORD PTR ds:[rdi],0x1e
   14001a61b:	repnz sub edi,DWORD PTR [rbx-0x4a81ebd1]
   14001a622:	(bad)  
   14001a623:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a624:	xchg   BYTE PTR [rsi+0x2680cb01],ah
   14001a62a:	pop    rbp
   14001a62b:	(bad)  
   14001a62c:	cmp    eax,0x3b9eb367
   14001a631:	ds jne 0x14001a62a
   14001a634:	stos   DWORD PTR es:[rdi],eax
   14001a635:	imul   eax,DWORD PTR [rdx+0x2f473e59],0x4478b9eb
   14001a63f:	xchg   edi,eax
   14001a640:	lahf   
   14001a641:	adc    ecx,DWORD PTR [rax]
   14001a643:	add    al,0xa1
   14001a645:	(bad)  
   14001a646:	fcom   QWORD PTR [rax+0x50]
   14001a649:	xor    eax,ebx
   14001a64b:	movabs ds:0x4fce42ca2760241d,al
   14001a654:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a655:	cli    
   14001a656:	push   rdx
   14001a657:	(bad)  
   14001a658:	jmp    0x14001a699
   14001a65a:	mov    WORD PTR [rax+rdi*8],ss
   14001a65d:	nop
   14001a65e:	lahf   
   14001a65f:	(bad)  
   14001a660:	(bad)  
   14001a661:	add    BYTE PTR [rsp+rcx*4],cl
   14001a664:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a665:	scas   eax,DWORD PTR es:[rdi]
   14001a666:	fnstsw WORD PTR [rbx-0x28785517]
   14001a66c:	(bad)  
   14001a66d:	jmp    0x14001a6ab
   14001a66f:	test   DWORD PTR [rsi+0x63],esp
   14001a672:	mov    esp,0x29fe1501
   14001a677:	add    BYTE PTR [rbp+0x0],ah
   14001a67a:	in     eax,0x41
   14001a67c:	and    DWORD PTR [rip+0xffffffffc77f7eb8],esp        # 0x10781253a
   14001a682:	cdq    
   14001a683:	fsubrp st(1),st
   14001a685:	lods   al,BYTE PTR ds:[rsi]
   14001a686:	retf   
   14001a687:	lahf   
   14001a688:	xchg   ebp,eax
   14001a689:	mov    cl,0x60
   14001a68b:	pop    rsp
   14001a68c:	(bad)  
   14001a68d:	jmp    0x14001a666
   14001a68f:	imul   ecx,DWORD PTR [rbx-0x42],0x7979679e
   14001a696:	(bad)  
   14001a697:	cmp    eax,0x1cb0ec12
   14001a69c:	add    al,0xbe
   14001a69e:	xchg   eax,eax
   14001a6a0:	(bad)
   14001a6a3:	sub    eax,0x130630bd
   14001a6a8:	pop    rcx
   14001a6a9:	(bad)  
   14001a6aa:	fcom   st(7)
   14001a6ac:	(bad)  
   14001a6ad:	lods   al,BYTE PTR ds:[rsi]
   14001a6ae:	rex.R pop rsp
   14001a6b0:	sahf   
   14001a6b1:	(bad)  
   14001a6b2:	pop    rbp
   14001a6b3:	jne    0x14001a690
   14001a6b5:	(bad)  
   14001a6b6:	test   DWORD PTR [rdi],ecx
   14001a6b8:	outs   dx,BYTE PTR ds:[rsi]
   14001a6b9:	cmp    al,0xde
   14001a6bb:	xor    DWORD PTR [rcx-0x70],esi
   14001a6be:	addr32 sbb eax,0xc2a02452
   14001a6c4:	(bad)  
   14001a6c5:	and    eax,0x5ca00aa0
   14001a6ca:	sub    BYTE PTR [rcx+rcx*1-0x52],dh
   14001a6ce:	(bad)  
   14001a6d0:	stc    
   14001a6d1:	pop    rdx
   14001a6d2:	lea    ecx,[rdi+rdi*2+0x68]
   14001a6d6:	mov    ecx,0x35bb8ce7
   14001a6db:	and    BYTE PTR [rbx+0x7e],al
   14001a6de:	add    al,0x18
   14001a6e0:	jno    0x14001a743
   14001a6e2:	adc    BYTE PTR [rcx],bl
   14001a6e4:	(bad)  
   14001a6e5:	(bad)  
   14001a6e6:	std    
   14001a6e7:	xor    BYTE PTR [rsi-0x67],cl
   14001a6ea:	or     ebp,eax
   14001a6ec:	lods   eax,DWORD PTR ds:[rsi]
   14001a6ed:	mov    ebp,0x7213e48b
   14001a6f2:	jbe    0x14001a70b
   14001a6f4:	movabs ds:0x4bfa8e84821b7f3e,al
   14001a6fd:	lea    eax,[rax+0x637e91f1]
   14001a703:	rex.WR jle 0x14001a76e
   14001a706:	mov    eax,0xba9b99e5
   14001a70b:	(bad)  
   14001a70c:	std    
   14001a70d:	hlt    
   14001a70e:	lock jo 0x14001a767
   14001a711:	rex.RB xchg r9d,eax
   14001a713:	imul   BYTE PTR [rbx-0x46]
   14001a716:	outs   dx,DWORD PTR ds:[rsi]
   14001a717:	or     al,BYTE PTR [rdx+0x5d]
   14001a71a:	xor    BYTE PTR [rdx-0x1f68b660],0x1b
   14001a721:	(bad)  
   14001a722:	je     0x14001a778
   14001a724:	xchg   edi,eax
   14001a725:	sub    eax,0xa3beba19
   14001a72a:	rex.X lahf 
   14001a72c:	mov    gs,WORD PTR [rdi]
   14001a72e:	or     eax,0x649178c5
   14001a733:	add    edi,DWORD PTR [rsi+0x4664047]
   14001a739:	rex.WX stos BYTE PTR es:[rdi],al
   14001a73b:	pop    rsi
   14001a73c:	fadd   QWORD PTR [rip+0xffffffff8ac0b3c3]        # 0xcac25b05
   14001a742:	jmp    0x14001a740
   14001a744:	pop    rax
   14001a745:	mov    eax,0x3cb09ebd
   14001a74a:	es or  al,0xc8
   14001a74d:	frstor [rax+0x76049941]
   14001a753:	out    dx,al
   14001a754:	fst    QWORD PTR [rbx-0x53]
   14001a757:	(bad)  
   14001a758:	(bad)  
   14001a759:	pop    rcx
   14001a75a:	mov    ebp,0xc358f968
   14001a75f:	retf   0xcf10
   14001a762:	mov    ebp,esi
   14001a764:	std    
   14001a765:	push   0xfffffffffffffff9
   14001a767:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a768:	sbb    BYTE PTR [rcx+rax*1+0x46710f94],dl
   14001a76f:	movabs al,ds:0xdcd50095f6c3f9b6
   14001a778:	sub    ebx,eax
   14001a77a:	push   rsi
   14001a77b:	pop    rbp
   14001a77c:	sbb    al,0x79
   14001a77e:	(bad)  
   14001a77f:	push   rdx
   14001a780:	cs setl ch
   14001a784:	mov    bh,0x91
   14001a786:	push   rdx
   14001a787:	mov    BYTE PTR [rdx+0x7f5cdcf5],ch
   14001a78d:	js     0x14001a7a6
   14001a78f:	mov    dil,BYTE PTR [r11+0x5c]
   14001a793:	icebp  
   14001a794:	btc    DWORD PTR [rip+0xffffffffc0380cc2],edx        # 0x10039b45d
   14001a79b:	xor    BYTE PTR [rsi-0x71e41c25],dl
   14001a7a1:	jbe    0x14001a77f
   14001a7a3:	jg     0x14001a7f0
   14001a7a5:	xlat   BYTE PTR ds:[rbx]
   14001a7a6:	jne    0x14001a7d7
   14001a7a8:	and    ah,cl
   14001a7aa:	icebp  
   14001a7ab:	rol    DWORD PTR [rax+0x2a8034df],cl
   14001a7b1:	xor    BYTE PTR [rdx],0xa1
   14001a7b4:	leave  
   14001a7b5:	or     al,0xf7
   14001a7b7:	jnp    0x14001a80f
   14001a7b9:	sub    al,0xd8
   14001a7bb:	xor    eax,0xfa376234
   14001a7c0:	mov    esi,0x8064117e
   14001a7c5:	(bad)  
   14001a7c6:	xchg   ebp,eax
   14001a7c7:	rex.RX jle 0x14001a843
   14001a7ca:	adc    ecx,DWORD PTR [rcx-0xe5c6e1e]
   14001a7d0:	es pushf 
   14001a7d2:	es (bad) 
   14001a7d4:	add    eax,DWORD PTR [rbp-0x2e0e5fa0]
   14001a7da:	(bad)  
   14001a7db:	push   rax
   14001a7dc:	imul   BYTE PTR [rbx]
   14001a7de:	repz add ecx,DWORD PTR [rax]
   14001a7e1:	(bad)  
   14001a7e2:	mov    edx,0xaeecf9dd
   14001a7e7:	fnstenv [rdi+0x7f]
   14001a7ea:	jae    0x14001a7b9
   14001a7ec:	xor    eax,0xbe09c3af
   14001a7f1:	or     bh,bh
   14001a7f3:	xor    al,0x82
   14001a7f5:	mov    es,WORD PTR [rip+0xa0a1f2f]        # 0x14a0bc72a
   14001a7fb:	add    BYTE PTR [rax-0x13],al
   14001a7fe:	mov    ebp,0x3fabad93
   14001a803:	call   rcx
   14001a805:	xchg   ecx,eax
   14001a806:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a807:	(bad)  
   14001a808:	and    BYTE PTR [rcx-0x3e],dh
   14001a80b:	rex.WR xchg rcx,rax
   14001a80d:	xor    BYTE PTR [rbx+0x50],dl
   14001a810:	or     DWORD PTR [rcx+rdx*2],esp
   14001a813:	rex jle 0x14001a82d
   14001a816:	mov    edi,0x7ada4000
   14001a81b:	movabs ds:0xfab054f77af47e88,eax
   14001a824:	(bad)  
   14001a825:	lahf   
   14001a826:	movabs al,ds:0xfee7eb43d2f67cff
   14001a82f:	jl     0x14001a81e
   14001a831:	(bad)  
   14001a832:	popf   
   14001a833:	(bad)  
   14001a834:	push   rcx
   14001a835:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a836:	cld    
   14001a837:	loop   0x14001a828
   14001a839:	imul   edx,DWORD PTR [rcx-0x3978eb31],0x0
   14001a840:	retf   0xe286
   14001a843:	lods   al,BYTE PTR ds:[rsi]
   14001a844:	add    BYTE PTR [rbx],cl
   14001a846:	sar    dh,0xab
   14001a849:	mov    bh,0xd2
   14001a84b:	imul   DWORD PTR [rbp-0x25a26331]
   14001a851:	xchg   edx,eax
   14001a852:	rcr    BYTE PTR [rax+riz*1-0x5a],cl
   14001a856:	lock adc al,0x7c
   14001a859:	jge    0x14001a8cc
   14001a85b:	or     esp,DWORD PTR [rdx+0x4ddefff9]
   14001a861:	(bad)  
   14001a862:	stos   DWORD PTR es:[rdi],eax
   14001a863:	out    dx,eax
   14001a864:	out    0x81,al
   14001a866:	(bad)  
   14001a867:	xchg   ebx,eax
   14001a868:	jl     0x14001a822
   14001a86a:	loop   0x14001a7fb
   14001a86c:	sar    DWORD PTR [rbx-0x72],cl
   14001a86f:	jle    0x14001a889
   14001a871:	adc    BYTE PTR [rax+0x6e],dh
   14001a874:	pop    rdi
   14001a875:	jg     0x14001a85c
   14001a877:	leave  
   14001a878:	fwait
   14001a879:	sahf   
   14001a87a:	mov    ebx,0xa7bda9ee
   14001a87f:	sub    ah,BYTE PTR [rdi-0x30]
   14001a882:	pop    rsp
   14001a883:	clc    
   14001a884:	xor    eax,0xa00d37d8
   14001a889:	rex cmp DWORD PTR cs:[rcx+0x60],edx
   14001a88e:	add    DWORD PTR [rbx+0x3e46da7b],edi
   14001a894:	sbb    al,0xc
   14001a896:	sub    ecx,eax
   14001a898:	xor    BYTE PTR [rsi+0x3a8df00b],al
   14001a89e:	adc    ebx,edi
   14001a8a0:	and    BYTE PTR [rip+0xffffffffe01dc49a],0x8d        # 0x1201f6d41
   14001a8a7:	rex pop rsi
   14001a8a9:	ror    cl,1
   14001a8ab:	out    0x14,eax
   14001a8ad:	cld    
   14001a8ae:	sti    
   14001a8af:	add    al,al
   14001a8b1:	stc    
   14001a8b2:	xchg   BYTE PTR [rcx],bh
   14001a8b4:	lock (bad) 
   14001a8b6:	dec    dh
   14001a8b8:	sti    
   14001a8b9:	outs   dx,BYTE PTR ds:[rsi]
   14001a8ba:	pop    rsi
   14001a8bb:	jle    0x14001a89a
   14001a8bd:	outs   dx,DWORD PTR ds:[rsi]
   14001a8be:	rex.RXB jmp 0x14001a927
   14001a8c1:	add    al,0xc1
   14001a8c3:	out    0xd7,eax
   14001a8c5:	(bad)  
   14001a8c6:	sahf   
   14001a8c7:	imul   ecx,DWORD PTR [rax],0x45e50055
   14001a8cd:	movabs eax,ds:0x6b1baf67b7b9e849
   14001a8d6:	cwde   
   14001a8d7:	movsxd edi,esi
   14001a8d9:	or     al,0xc1
   14001a8db:	(bad)  
   14001a8dc:	out    dx,eax
   14001a8dd:	lock xor al,0x80
   14001a8e0:	xor    BYTE PTR [rcx+0x3e8d87ca],ah
   14001a8e6:	lods   al,BYTE PTR ds:[rsi]
   14001a8e7:	(bad)  
   14001a8e8:	call   0x16204070e
   14001a8ed:	adc    al,0x83
   14001a8ef:	sbb    eax,DWORD PTR [rax+0x37de4041]
   14001a8f5:	pushf  
   14001a8f6:	jbe    0x14001a935
   14001a8f8:	mov    eax,0x779dde76
   14001a8fd:	lods   eax,DWORD PTR ds:[rsi]
   14001a8fe:	pop    rsp
   14001a8ff:	mov    al,0x19
   14001a901:	rex.WRX
   14001a902:	lock jne 0x14001a960
   14001a905:	out    dx,eax
   14001a906:	xor    al,0x87
   14001a908:	mov    edx,0x93446500
   14001a90d:	xchg   esp,eax
   14001a90e:	loopne 0x14001a8be
   14001a910:	sahf   
   14001a911:	mov    dh,0xf1
   14001a913:	out    dx,eax
   14001a914:	sub    al,0x1e
   14001a916:	(bad)  
   14001a917:	cmp    ebp,DWORD PTR [rbx-0x13e3a0d3]
   14001a91d:	jg     0x14001a92f
   14001a91f:	je     0x14001a998
   14001a921:	(bad)  
   14001a922:	pop    rsp
   14001a923:	adc    BYTE PTR [rax],0x17
   14001a926:	xchg   esp,eax
   14001a927:	lahf   
   14001a928:	xchg   ecx,eax
   14001a929:	xchg   edx,eax
   14001a92a:	adc    BYTE PTR [rsp+rcx*1],0xb9
   14001a92e:	jae    0x14001a913
   14001a930:	or     eax,0x91db7473
   14001a935:	test   bh,0x3e
   14001a938:	imul   DWORD PTR [rbx-0x244330bb]
   14001a93e:	fstp   TBYTE PTR [rdx]
   14001a940:	test   dh,ah
   14001a942:	push   rbx
   14001a943:	jl     0x14001a979
   14001a945:	fdiv   DWORD PTR [rdi]
   14001a947:	or     eax,0xdca00ca1
   14001a94c:	sub    ah,cl
   14001a94e:	or     bl,BYTE PTR [rax-0x1]
   14001a951:	jle    0x14001a93a
   14001a953:	rex.WXB or rax,0xfffffffff6ec8ce0
   14001a959:	xchg   edx,eax
   14001a95a:	add    BYTE PTR [rsi-0x2f],bl
   14001a95d:	mov    esp,edi
   14001a95f:	repnz pop rsi
   14001a961:	loop   0x14001a9c3
   14001a963:	(bad)  
   14001a964:	movabs ds:0x50af4ebfa5246275,al
   14001a96d:	rex.WRX jrcxz 0x14001a937
   14001a970:	iret   
   14001a971:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001a972:	pop    rbp
   14001a973:	rex.WRXB cld 
   14001a975:	in     eax,dx
   14001a976:	mov    bh,BYTE PTR [rbx-0x4a230342]
   14001a97c:	(bad)  
   14001a97d:	add    edx,DWORD PTR [rax]
   14001a97f:	retf   0x863f
   14001a982:	retfw  
   14001a984:	cmp    dl,BYTE PTR [rbp-0x8]
   14001a987:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a988:	sbb    eax,0x151e742e
   14001a98d:	in     eax,0x41
   14001a98f:	jno    0x14001a934
   14001a991:	jo     0x14001a998
   14001a993:	rex sti 
   14001a995:	xchg   ecx,eax
   14001a996:	rex.RXB (bad) 
   14001a998:	std    
   14001a999:	in     al,dx
   14001a99a:	pushf  
   14001a99b:	idiv   ah
   14001a99d:	jbe    0x14001a93e
   14001a99f:	(bad)  
   14001a9a0:	idiv   DWORD PTR [rsi-0x591c782]
   14001a9a6:	(bad)
   14001a9aa:	adc    al,BYTE PTR [rip+0xffffffffe77663c3]        # 0x127780d73
   14001a9b0:	(bad)  
   14001a9b1:	pand   mm3,QWORD PTR [rdi-0x50103902]
   14001a9b8:	(bad)  [rax-0x5d906f9e]
   14001a9be:	(bad)  
   14001a9bf:	push   rdi
   14001a9c0:	rcr    DWORD PTR [rdi+0x6034d0c6],0xf9
   14001a9c7:	push   rcx
   14001a9c8:	pushf  
   14001a9c9:	adc    eax,0xd57db470
   14001a9ce:	ins    DWORD PTR es:[rdi],dx
   14001a9cf:	xlat   BYTE PTR ds:[rbx]
   14001a9d0:	movq   mm5,mm1
   14001a9d3:	pop    rax
   14001a9d4:	outs   dx,BYTE PTR ds:[rsi]
   14001a9d5:	std    
   14001a9d6:	adc    DWORD PTR [rcx+0xc530326],ecx
   14001a9dc:	jmp    0x14001aa4f
   14001a9de:	rex.W
   14001a9df:	add    al,0xdf
   14001a9e2:	or     edi,edi
   14001a9e4:	js     0x14001a9a9
   14001a9e6:	sbb    al,0x7c
   14001a9e8:	jmp    QWORD PTR [rbp+riz*8+0xf]
   14001a9ec:	idiv   DWORD PTR [rbp-0x309440c8]
   14001a9f2:	icebp  
   14001a9f3:	(bad)  
   14001a9f4:	(bad)  
   14001a9f5:	cmp    cl,al
   14001a9f7:	(bad)
   14001a9fb:	not    BYTE PTR [rbp+0x50025ff2]
   14001aa01:	(bad)  
   14001aa02:	push   rax
   14001aa03:	jbe    0x14001a989
   14001aa05:	(bad)  
   14001aa06:	ret    0x2d
   14001aa09:	pop    rdx
   14001aa0a:	outs   dx,DWORD PTR ds:[rsi]
   14001aa0b:	cwde   
   14001aa0c:	(bad)  
   14001aa0d:	cmp    dh,bl
   14001aa0f:	int    0xef
   14001aa11:	sbb    eax,0x6951d55a
   14001aa16:	sub    al,0x96
   14001aa18:	or     BYTE PTR [rdi-0x6e85bc77],bh
   14001aa1e:	(bad)  
   14001aa1f:	out    dx,eax
   14001aa20:	sbb    edi,ebx
   14001aa22:	or     al,0x30
   14001aa24:	pop    rdx
   14001aa25:	xor    eax,DWORD PTR [rdi+0x56540e0e]
   14001aa2b:	std    
   14001aa2c:	jp     0x14001aa19
   14001aa2e:	pushf  
   14001aa2f:	push   rdi
   14001aa30:	pop    rsi
   14001aa31:	fdivr  DWORD PTR [rsi]
   14001aa33:	stos   DWORD PTR es:[rdi],eax
   14001aa34:	cmovle esp,eax
   14001aa37:	movsxd eax,ecx
   14001aa39:	push   rdi
   14001aa3a:	stos   DWORD PTR es:[rdi],eax
   14001aa3b:	jg     0x14001aa46
   14001aa3d:	rex.X sbb DWORD PTR [rax-0x7],eax
   14001aa41:	push   rcx
   14001aa42:	or     rsi,rbp
   14001aa45:	in     eax,dx
   14001aa46:	imul   ebx,DWORD PTR [rip+0x7b267c39],0xfffffff9        # 0x1bb282686
   14001aa4d:	xchg   ebx,eax
   14001aa4e:	jae    0x14001aa6b
   14001aa50:	mov    edi,ebp
   14001aa52:	pop    rcx
   14001aa53:	add    BYTE PTR [rax],dh
   14001aa55:	cmp    DWORD PTR [rbp+rdi*8-0x4a],esp
   14001aa59:	(bad)  
   14001aa5a:	test   DWORD PTR [rip+0xffffffffef331d50],0xf968181c        # 0x12f34c7b4
   14001aa64:	shl    ebx,cl
   14001aa66:	scas   eax,DWORD PTR es:[rdi]
   14001aa67:	pop    rdi
   14001aa68:	stc    
   14001aa69:	out    0xbf,eax
   14001aa6b:	in     al,dx
   14001aa6c:	jmp    0x14001aa8a
   14001aa6e:	(bad)  
   14001aa6f:	test   DWORD PTR [rdx-0x52bd13d1],eax
   14001aa75:	(bad)  
   14001aa76:	and    eax,0x53006508
   14001aa7b:	add    DWORD PTR [rbp+0x16],eax
   14001aa7e:	shl    BYTE PTR [rsi-0x31],1
   14001aa81:	int    0x43
   14001aa83:	push   rdi
   14001aa84:	std    
   14001aa85:	repnz mov ds,esi
   14001aa88:	jne    0x14001aa1f
   14001aa8a:	test   dh,ah
   14001aa8c:	add    eax,DWORD PTR [rax]
   14001aa8e:	in     eax,0x70
   14001aa90:	in     eax,dx
   14001aa91:	ror    DWORD PTR [rbx+rsi*8+0x6b],0xd
   14001aa96:	sar    DWORD PTR [rdi],cl
   14001aa98:	jo     0x14001aad8
   14001aa9a:	(bad)  [rdx-0x250d5845]
   14001aaa0:	adc    ebp,DWORD PTR [rdi-0x18924ea1]
   14001aaa6:	mov    cl,0xb6
   14001aaa8:	(bad)  
   14001aaa9:	add    al,0x81
   14001aaab:	lahf   
   14001aaac:	push   0xffffffff8f4b65f1
   14001aab1:	pop    rdx
   14001aab2:	std    
   14001aab3:	rex.WXB adc r10b,cl
   14001aab6:	add    BYTE PTR [rsi+0x159e206],ah
   14001aabc:	mov    ch,0xdf
   14001aabe:	mov    ebp,0x4fc4fb3d
   14001aac3:	outs   dx,BYTE PTR ds:[rsi]
   14001aac4:	jmp    0x14001ab25
   14001aac6:	cmp    ebp,DWORD PTR [rdi+0x66]
   14001aac9:	std    
   14001aaca:	ds add edx,edi
   14001aacd:	jmp    0x14001ab0e
   14001aacf:	push   rsi
   14001aad0:	rex.RXB iret 
   14001aad2:	cdq    
   14001aad3:	mov    cl,0x74
   14001aad5:	mul    DWORD PTR [rcx-0x3a844b3f]
   14001aadb:	(bad)  
   14001aadc:	outs   dx,DWORD PTR ds:[esi]
   14001aade:	jp     0x14001aade
   14001aae0:	lods   eax,DWORD PTR ds:[rsi]
   14001aae1:	cmp    DWORD PTR [rbp-0x641faf48],edi
   14001aae7:	pop    rcx
   14001aae8:	jl     0x14001aad7
   14001aaea:	fistp  QWORD PTR [rdi+0x600aa184]
   14001aaf0:	(bad)  
   14001aaf1:	and    BYTE PTR [rsi-0x1241cfeb],bl
   14001aaf7:	jo     0x14001ab54
   14001aaf9:	xlat   BYTE PTR ds:[rbx]
   14001aafa:	ror    BYTE PTR [rdi-0x72f2e8a9],cl
   14001ab00:	data16 sti 
   14001ab02:	neg    DWORD PTR [rbp-0x19012698]
   14001ab08:	sti    
   14001ab09:	sbb    eax,0xf9bd3c1f
   14001ab0e:	repnz pop rsi
   14001ab10:	test   BYTE PTR [rsi],bl
   14001ab12:	(bad)  
   14001ab13:	pop    rax
   14001ab14:	loopne 0x14001ab3d
   14001ab16:	(bad)  
   14001ab17:	not    DWORD PTR [rax+rsi*8+0x15]
   14001ab1b:	or     al,BYTE PTR [rbp+0x2850a142]
   14001ab21:	adc    al,0xa
   14001ab23:	test   DWORD PTR [rdx-0x5f],eax
   14001ab26:	push   rax
   14001ab27:	sub    BYTE PTR [rdx+rcx*1],dl
   14001ab2a:	test   DWORD PTR [rdx-0x5f],eax
   14001ab2d:	push   rax
   14001ab2e:	sub    BYTE PTR [rdx+rcx*1],dl
   14001ab31:	test   DWORD PTR [rdx-0x5f],eax
   14001ab34:	push   rax
   14001ab35:	sub    BYTE PTR [rdx+rcx*1],dl
   14001ab38:	test   DWORD PTR [rdx-0x5f],eax
   14001ab3b:	push   rax
   14001ab3c:	sub    BYTE PTR [rdx+rcx*1],dl
   14001ab3f:	test   DWORD PTR [rdx-0x5f],eax
   14001ab42:	push   rax
   14001ab43:	sub    BYTE PTR [rsi-0x66f401e0],ah
   14001ab49:	and    esi,DWORD PTR [rax+0x0]
   14001ab4c:	xlat   BYTE PTR ds:[rbx]
   14001ab4d:	lahf   
   14001ab4e:	(bad)  
   14001ab4f:	ret    0x0
   14001ab52:	add    BYTE PTR [rax],al
   14001ab54:	rex.WB
   14001ab55:	rex.RB
   14001ab56:	rex.WRX
   14001ab57:	rex.R scas al,BYTE PTR es:[rdi]
   14001ab59:	rex.X (bad) 
   14001ab5b:	(bad)  
   14001ab5c:	add    BYTE PTR [rax],al
   14001ab5e:	add    BYTE PTR [rax],al
   14001ab60:	sub    BYTE PTR [rax],al
   14001ab62:	add    BYTE PTR [rax],al
   14001ab64:	xor    BYTE PTR [rax],al
   14001ab66:	add    BYTE PTR [rax],al
   14001ab68:	(bad)  
   14001ab69:	add    BYTE PTR [rax],al
   14001ab6b:	add    BYTE PTR [rcx],al
   14001ab6d:	add    BYTE PTR [rax],ah
   14001ab6f:	add    BYTE PTR [rax],al
   14001ab71:	add    BYTE PTR [rax],al
   14001ab73:	add    BYTE PTR [rax+0x25],al
	...
   14001ad55:	add    BYTE PTR [rax],al
   14001ad57:	add    BYTE PTR [rsi+0x79],cl
   14001ad5a:	jg     0x14001ada1
   14001ad5c:	rex.XB sahf 
   14001ad5e:	rcl    BYTE PTR [rcx+0x3f666b53],0x59
   14001ad65:	push   rsi
   14001ad66:	rex.X or BYTE PTR [rax],al
	...
   14001ae11:	add    BYTE PTR [rax],al
   14001ae13:	add    BYTE PTR [rbx+riz*2+0x59],dl
   14001ae17:	add    eax,0xbabc9b44
   14001ae1c:	cmp    edi,DWORD PTR [rdx-0x45c4000c]
   14001ae22:	hlt    
   14001ae23:	inc    BYTE PTR [rsp+rbx*4-0x41]
   14001ae27:	mov    esi,0x34455858
   14001ae2c:	push   rsp
   14001ae2d:	(bad)  
   14001ae2e:	pop    rsp
   14001ae2f:	add    eax,DWORD PTR [rax]
	...
   14001aed1:	add    BYTE PTR [rax],al
   14001aed3:	add    BYTE PTR [rbp+0x64],dl
   14001aed6:	pop    rdx
   14001aed7:	xor    al,0x3b
   14001aed9:	mov    ecx,0xba3bfaf2
   14001aede:	hlt    
   14001aedf:	(bad)  
   14001aee0:	cmp    edi,DWORD PTR [rdx-0x46c4010c]
   14001aee6:	hlt    
   14001aee7:	(bad)  
   14001aee8:	cmp    al,0xb1
   14001aeea:	in     al,dx
   14001aeeb:	repz push rcx
   14001aeed:	push   0x71
   14001aeef:	imul   edx,DWORD PTR [rdi+0x56],0x4d
   14001aef3:	(bad)  
	...
   14001af90:	push   rbp
   14001af91:	(bad)  
   14001af92:	pop    rcx
   14001af93:	add    ecx,DWORD PTR [rcx-0x77]
   14001af96:	lahf   
   14001af97:	pushf  
   14001af98:	cmp    edi,DWORD PTR [rcx-0x46c4010c]
   14001af9e:	hlt    
   14001af9f:	(bad)  
   14001afa0:	cmp    esi,DWORD PTR [rdi-0x4bc4010c]
   14001afa6:	repz (bad) 
   14001afa8:	cmp    al,0xad
   14001afaa:	icebp  
   14001afab:	(bad)  
   14001afac:	cmp    al,0xa1
   14001afae:	out    dx,eax
   14001afaf:	std    
   14001afb0:	rex.WR outs dx,BYTE PTR ds:[rsi]
   14001afb2:	mov    WORD PTR [rdi+0x8515256],cs
	...
   14001b050:	push   rdi
   14001b051:	pop    rax
   14001b052:	rex.WRXB (bad) 
   14001b054:	cmp    eax,0x3cf1eaa9
   14001b059:	mov    al,0xf2
   14001b05b:	(bad)  
   14001b05c:	cmp    al,0xaf
   14001b05e:	repnz (bad) 
   14001b060:	cmp    al,0xac
   14001b062:	icebp  
   14001b063:	(bad)  
   14001b064:	cmp    al,0xa7
   14001b066:	lock (bad) 
   14001b068:	cmp    esp,DWORD PTR [rax-0x66c40011]
   14001b06e:	out    dx,al
   14001b06f:	(bad)  
   14001b070:	cmp    edx,DWORD PTR [rcx+0x684affee]
   14001b076:	xchg   ebp,eax
   14001b077:	xchg   esi,eax
   14001b078:	push   rsi
   14001b079:	rex.WRB push r8
   14001b07b:	or     DWORD PTR [rax],eax
	...
   14001b109:	add    BYTE PTR [rax],al
   14001b10b:	add    BYTE PTR [rbx+0x51],dl
   14001b10e:	pop    rsi
   14001b10f:	add    DWORD PTR [rsi+0x65],ecx
   14001b112:	jge    0x14001b18f
   14001b114:	cmp    ebx,DWORD PTR [rdx-0x61c40111]
   14001b11a:	out    dx,eax
   14001b11b:	(bad)  
   14001b11c:	cmp    ebx,DWORD PTR [rsi-0x64c40011]
   14001b122:	out    dx,eax
   14001b123:	(bad)  
   14001b124:	cmp    ebx,DWORD PTR [rax-0x6bc40112]
   14001b12a:	out    dx,al
   14001b12b:	(bad)  
   14001b12c:	cmp    ecx,DWORD PTR [rdi-0x76c40113]
   14001b132:	in     eax,dx
   14001b133:	(bad)  
   14001b134:	cmp    eax,DWORD PTR [rdx+0x5b4efeec]
   14001b13a:	add    DWORD PTR [rsi+0x6574c55],0x0
	...
   14001b1c9:	add    BYTE PTR [rax],al
   14001b1cb:	add    BYTE PTR [rsi+0x41],dl
   14001b1ce:	rex or edi,DWORD PTR [rip+0x3bded470]        # 0x17be08645
   14001b1d5:	sub    esp,0xfffffffe
   14001b1d8:	cmp    ecx,DWORD PTR [rax-0x75c40113]
   14001b1de:	in     eax,dx
   14001b1df:	(bad)  
   14001b1e0:	cmp    ecx,DWORD PTR [rbx-0x77c40113]
   14001b1e6:	in     al,dx
   14001b1e7:	(bad)  
   14001b1e8:	cmp    eax,DWORD PTR [rbp-0x7cc40014]
   14001b1ee:	in     al,dx
   14001b1ef:	(bad)  
   14001b1f0:	cmp    eax,DWORD PTR [rcx+0x7e3cfeec]
   14001b1f6:	jmp    0x14001b1f7
   14001b1f8:	cmp    al,0x79
   14001b1fa:	(bad)  
   14001b1fb:	cld    
   14001b1fc:	push   rdx
   14001b1fd:	push   rcx
   14001b1fe:	imul   esp,DWORD PTR [rsi+0x54],0x35c4d
	...
   14001b285:	add    BYTE PTR [rax],al
   14001b287:	add    BYTE PTR [rbp+0x35],cl
   14001b28a:	add    DWORD PTR [r12+r15*1+0x56],ecx
   14001b28f:	pop    rbx
   14001b290:	xor    bl,BYTE PTR [rax-0x2e]
   14001b293:	push   QWORD PTR [rsi]
   14001b295:	data16 (bad) 
   14001b298:	cmp    BYTE PTR [rdi-0x1a],ch
   14001b29b:	(bad)  
   14001b29c:	cmp    DWORD PTR [rbx-0x17],esi
   14001b29f:	(bad)  
   14001b2a0:	cmp    dh,BYTE PTR [rsi-0x16]
   14001b2a3:	(bad)  
   14001b2a4:	cmp    dh,BYTE PTR [rdi-0x16]
   14001b2a7:	(bad)  
   14001b2a8:	cmp    dh,BYTE PTR [rsi-0x16]
   14001b2ab:	(bad)  
   14001b2ac:	cmp    dh,BYTE PTR [rdi-0x16]
   14001b2af:	(bad)  
   14001b2b0:	cmp    edi,DWORD PTR [rax-0x15]
   14001b2b3:	(bad)  
   14001b2b4:	cmp    edi,DWORD PTR [rax-0x15]
   14001b2b7:	(bad)  
   14001b2b8:	cmp    al,0x78
   14001b2ba:	jmp    0x14001b2bb
   14001b2bc:	cmp    eax,0x56f7e877
   14001b2c1:	rex.WXB push r10
   14001b2c3:	rex.RB push r12
   14001b2c5:	rex.WRXB pop r15
   14001b2c7:	add    al,BYTE PTR [rax]
	...
   14001b2fd:	add    BYTE PTR [rax],al
   14001b2ff:	add    BYTE PTR [rcx+0x32],dl
   14001b302:	(bad)  
   14001b303:	add    dl,BYTE PTR [rbx+0x32]
   14001b306:	cmp    dl,BYTE PTR [rsi]
	...
   14001b348:	rex.WRXB (bad) 
   14001b34a:	xor    BYTE PTR [rdx],cl
   14001b34c:	(bad)  
   14001b34d:	xor    ecx,DWORD PTR [rdx-0x4cc1d635]
   14001b353:	jmp    FWORD PTR [rip+0x31fec04a]        # 0x1720073a3
   14001b359:	push   rsp
   14001b35a:	int    0xfe
   14001b35c:	xor    al,0x5c
   14001b35e:	xlat   BYTE PTR ds:[rbx]
   14001b35f:	push   QWORD PTR [rsi]
   14001b361:	movsxd ebx,esi
   14001b363:	(bad)  
   14001b364:	(bad)  
   14001b365:	jecxz  0x14001b366
   14001b368:	(bad)  
   14001b369:	push   0xffffffffffffffe6
   14001b36b:	(bad)  
   14001b36c:	cmp    BYTE PTR [rbp-0x18],ch
   14001b36f:	(bad)  
   14001b370:	cmp    BYTE PTR [rax-0x17],dh
   14001b373:	(bad)  
   14001b374:	cmp    DWORD PTR [rdx+rbp*8-0x1],esi
   14001b378:	cmp    dh,BYTE PTR [rdi-0x16]
   14001b37b:	(bad)  
   14001b37c:	cmp    edi,DWORD PTR [rdx-0x15]
   14001b37f:	(bad)  
   14001b380:	(bad)  
   14001b381:	ja     0x14001b35e
   14001b383:	out    0x58,eax
   14001b385:	rex.WB
   14001b386:	rex.RXB sub al,0x54
   14001b389:	push   rcx
   14001b38a:	(bad)  
   14001b38b:	add    DWORD PTR [rax],eax
	...
   14001b3b9:	add    BYTE PTR [rax],al
   14001b3bb:	add    BYTE PTR [rdi+0x32],cl
   14001b3be:	rex.RX add r10b,BYTE PTR [rbx+0x32]
   14001b3c2:	cmp    eax,DWORD PTR [rax+0x3e]
   14001b3c5:	xor    edi,DWORD PTR [rdi-0x73]
	...
   14001b404:	rex.RXB sub DWORD PTR [r9],r14d
   14001b407:	add    DWORD PTR [rdx+rbp*1+0x3e],eax
   14001b40b:	pop    rsi
   14001b40c:	(bad)  
   14001b40d:	es xchg esp,eax
   14001b40f:	(bad)  
   14001b410:	and    ebp,DWORD PTR [rsi]
   14001b412:	popf   
   14001b413:	jmp    QWORD PTR [rsi]
   14001b415:	ss test al,0xff
   14001b418:	sub    bh,BYTE PTR [rdi]
   14001b41a:	mov    ah,0xff
   14001b41c:	sub    al,0x48
   14001b41e:	mov    edi,0xc9502fff
   14001b423:	push   QWORD PTR [rbx]
   14001b425:	push   rdi
   14001b426:	sar    edi,1
   14001b428:	xor    eax,0x36ffda5e
   14001b42d:	fs loope 0x14001b42f
   14001b430:	(bad)  
   14001b431:	push   0xffffffffffffffe6
   14001b433:	push   QWORD PTR [rdi]
   14001b435:	outs   dx,BYTE PTR ds:[rsi]
   14001b436:	call   0x12a75ed3a
   14001b43b:	(bad)  
   14001b43c:	cmp    bh,BYTE PTR [rcx-0x15]
   14001b43f:	(bad)  
   14001b440:	cmp    edi,DWORD PTR [rbx+rbp*8-0x1]
   14001b444:	rex.X je 0x14001b411
   14001b447:	rcr    BYTE PTR [rax+0x49],cl
   14001b44a:	rex.RX sbb r8b,BYTE PTR [rax]
	...
   14001b475:	add    BYTE PTR [rax],al
   14001b477:	add    BYTE PTR [rcx+0x32],dl
   14001b47a:	add    edx,DWORD PTR [r8+0x32]
   14001b47e:	rex.RXB
   14001b47f:	rex.WR (bad) 
   14001b481:	xor    esi,DWORD PTR [rbp+0x633247ee]
   14001b487:	add    BYTE PTR ds:[rax],al
	...
   14001b4c2:	add    BYTE PTR [rax],al
   14001b4c4:	push   rax
   14001b4c5:	sub    ebx,DWORD PTR [rsi]
   14001b4c7:	sbb    eax,0xe2761e1e
   14001b4cc:	sbb    bl,BYTE PTR [rsi]
   14001b4ce:	mov    esi,edi
   14001b4d0:	sbb    eax,0x21ff9023
   14001b4d5:	sub    dl,BYTE PTR [rdi-0x5ecfdb02]
   14001b4db:	(bad)  
   14001b4dc:	(bad)  
   14001b4dd:	cmp    DWORD PTR [rdi+rdi*8-0x149bed6],ebp
   14001b4e4:	sub    al,0x49
   14001b4e6:	sar    dh,0x30
   14001b4e9:	push   rcx
   14001b4ea:	retf   0x34ff
   14001b4ed:	pop    rax
   14001b4ee:	sar    esi,cl
   14001b4f0:	ss (bad) 
   14001b4f2:	fdiv   st(6),st
   14001b4f4:	(bad)  
   14001b4f5:	addr32 in al,0xff
   14001b4f8:	(bad)  
   14001b4f9:	ins    DWORD PTR es:[rdi],dx
   14001b4fa:	call   0x12a76edfd
   14001b4ff:	(bad)  
   14001b500:	cmp    bh,BYTE PTR [rdx-0x15]
   14001b503:	(bad)  
   14001b504:	cmp    eax,0x45feeb7f
   14001b509:	jno    0x14001b4c2
   14001b50b:	rcr    BYTE PTR [rdx+0x47],0x3c
   14001b50f:	adc    al,BYTE PTR [rax]
	...
   14001b531:	add    BYTE PTR [rax],al
   14001b533:	add    BYTE PTR [rcx+0x32],dl
   14001b536:	rex.XB add eax,0x6453334d
   14001b53c:	sub    eax,0x34f7bd34
   14001b541:	xor    esp,DWORD PTR [rax+0x6b3244ca]
   14001b547:	add    eax,0x0
	...
   14001b56c:	test   DWORD PTR [rdi+0x15],ecx
   14001b56f:	add    bh,BYTE PTR [rbx+0x46]
   14001b572:	clts   
   14001b574:	or     DWORD PTR [rsi+0x15],0x2
   14001b578:	add    BYTE PTR [rax],al
   14001b57a:	add    BYTE PTR [rax],al
   14001b57c:	(bad)  
   14001b57d:	xor    eax,0x2b530113
   14001b582:	(bad)  
   14001b583:	adc    ah,BYTE PTR [rsi]
   14001b585:	sbb    al,0x55
   14001b587:	mov    edx,0xfe791914
   14001b58c:	(bad)  
   14001b58d:	sbb    edi,DWORD PTR [rdi-0x2]
   14001b590:	sbb    DWORD PTR [rip+0x211cff86],ebx        # 0x1611eb51c
   14001b596:	(bad)  
   14001b597:	(bad)  
   14001b598:	(bad)  
   14001b599:	(bad)  
   14001b59a:	xchg   ebp,eax
   14001b59b:	(bad)  
   14001b59c:	and    ebp,DWORD PTR [rsi]
   14001b59e:	sahf   
   14001b59f:	jmp    QWORD PTR [rsi]
   14001b5a1:	xor    eax,0x3e29fea8
   14001b5a6:	mov    dl,0xfe
   14001b5a8:	sub    al,0x46
   14001b5aa:	mov    ebp,0xc74e2eff
   14001b5af:	(bad)  
   14001b5b0:	xor    edx,DWORD PTR [rsi-0x2e]
   14001b5b3:	(bad)  
   14001b5b4:	ss (bad) 
   14001b5b6:	fdiv   st(7),st
   14001b5b8:	(bad)  
   14001b5b9:	push   0x6f38fee5
   14001b5be:	jmp    0x12b79efc1
   14001b5c3:	(bad)  
   14001b5c4:	cmp    al,0x7e
   14001b5c6:	jmp    0x14001b5c6
   14001b5c8:	cmp    eax,DWORD PTR [rbx+0x7245ffec]
   14001b5ce:	mov    dl,0xb8
   14001b5d0:	pop    rcx
   14001b5d1:	rex.W
   14001b5d2:	ds (bad) 
   14001b5d4:	push   rbp
   14001b5d5:	push   rdx
   14001b5d6:	push   rdi
   14001b5d7:	add    DWORD PTR [rax],eax
	...
   14001b5ed:	add    BYTE PTR [rax],al
   14001b5ef:	add    BYTE PTR [rbp+0x32],dl
   14001b5f2:	or     BYTE PTR ss:[rax+0x33],cl
   14001b5f6:	gs jns 0x14001b626
   14001b5f9:	xor    eax,0x332cfbc1
   14001b5fe:	mov    edi,0x743241fe
   14001b603:	push   0x0
	...
   14001b628:	test   BYTE PTR [rdi+0x14],cl
   14001b62b:	(bad)  
   14001b62c:	(bad)  
   14001b62d:	pop    rax
   14001b62e:	sbb    eax,0x397cb65d
   14001b633:	mov    edi,0x6b1e578c
   14001b638:	js     0x14001b67f
   14001b63a:	or     eax,0xd477c33
   14001b63f:	push   rax
   14001b640:	cmp    eax,0x17c83b24
   14001b645:	adc    bl,BYTE PTR [rbp-0x1]
   14001b648:	adc    edx,DWORD PTR [rbp*2+0x771814fe]
   14001b64f:	(bad)  
   14001b650:	(bad)  
   14001b651:	sbb    edi,DWORD PTR [rbp-0x1]
   14001b654:	sbb    DWORD PTR [rip+0x201bfe84],ebx        # 0x1601db4de
   14001b65a:	mov    esi,?
   14001b65c:	(bad)  
   14001b65d:	es xchg ebx,eax
   14001b65f:	jmp    QWORD PTR [rbx]
   14001b661:	sub    eax,0x3425fe9c
   14001b666:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b667:	(bad)  
   14001b668:	sub    DWORD PTR [rip+0x462bffb2],edi        # 0x1862db620
   14001b66e:	mov    ebp,0xc84e2ffe
   14001b673:	(bad)  
   14001b674:	xor    edx,DWORD PTR [rdi-0x2c]
   14001b677:	push   QWORD PTR [rsi]
   14001b679:	(bad)  
   14001b67a:	(bad)  
   14001b67c:	(bad)  
   14001b67d:	imul   esp,edi,0xfffffffe
   14001b680:	cmp    BYTE PTR [rdx+rbp*8-0x1],dh
   14001b684:	cmp    al,0x7c
   14001b686:	jmp    0x14001b686
   14001b688:	cmp    eax,DWORD PTR [rbx-0x77c40014]
   14001b68e:	in     al,dx
   14001b68f:	inc    BYTE PTR [rbx+0x7b]
   14001b692:	ret    0x59c9
   14001b695:	rex.WB (bad) 
   14001b697:	sub    al,0x56
   14001b699:	rex.WR
   14001b69a:	rex.WX add rax,QWORD PTR [rax]
	...
   14001b6a5:	add    BYTE PTR [rax],al
   14001b6a7:	add    BYTE PTR [rsi+rsi*1+0x3b],dl
   14001b6ab:	add    bl,BYTE PTR [rax+0x33]
   14001b6ae:	sub    al,0x15
   14001b6b0:	rex.X
   14001b6b1:	sbb    DWORD PTR ss:[rbp-0x23bcad3],0xffc1342d
   14001b6bc:	xor    esi,DWORD PTR cs:[rsi+0x653246ee]
   14001b6c3:	adc    al,0x0
	...
   14001b6dd:	add    BYTE PTR [rax],al
   14001b6df:	add    BYTE PTR [rbp+rdx*2+0x4a7f0117],cl
   14001b6e6:	movhps QWORD PTR [rbx-0x3061d48f],xmm5
   14001b6ed:	xchg   edx,eax
   14001b6ee:	rex.RXB dec r11b
   14001b6f1:	nop
   14001b6f2:	inc    r15
   14001b6f5:	mov    cs,WORD PTR [rbp-0x1]
   14001b6f8:	mov    bh,0x81
   14001b6fa:	rex.R push QWORD PTR [rsi-0x7200d384]
   14001b701:	pop    rsi
   14001b702:	sub    bh,bh
   14001b704:	sub    al,0x1c
   14001b706:	rex.W call QWORD PTR [rdi]
   14001b709:	adc    DWORD PTR [rax-0x1],ebx
   14001b70c:	adc    edx,DWORD PTR [rdx+rbp*2]
   14001b70f:	call   QWORD PTR [rbx]
   14001b711:	(bad)  
   14001b712:	jbe    0x14001b713
   14001b714:	(bad)  
   14001b715:	sbb    edi,DWORD PTR [rdi+rdi*8+0x18]
   14001b719:	sbb    eax,0x201bff84
   14001b71e:	mov    edi,?
   14001b720:	(bad)  
   14001b721:	es xchg ebx,eax
   14001b723:	jmp    QWORD PTR [rbx]
   14001b725:	sub    eax,0x3526ff9c
   14001b72a:	test   al,0xff
   14001b72c:	sub    bh,BYTE PTR [rsi]
   14001b72e:	mov    bl,0xff
   14001b730:	sub    al,0x47
   14001b732:	mov    edi,0xcc5131ff
   14001b737:	push   QWORD PTR [rip+0x37ffd95c]        # 0x178019099
   14001b73d:	push   0x7138ffe5
   14001b742:	jmp    0x12b7cf346
   14001b747:	(bad)  
   14001b748:	cmp    al,0x83
   14001b74a:	in     al,dx
   14001b74b:	(bad)  
   14001b74c:	cmp    ecx,DWORD PTR [rax-0x74c40013]
   14001b752:	in     eax,dx
   14001b753:	(bad)  
   14001b754:	cmp    eax,0x4df1e488
   14001b759:	pop    rdx
   14001b75a:	jne    0x14001b6e3
   14001b75c:	push   rdi
   14001b75d:	xor    ebp,DWORD PTR [r15]
   14001b760:	pop    rax
   14001b761:	cmp    eax,0x39571530
   14001b766:	xor    BYTE PTR [rax],ah
   14001b768:	rex.WRX cmp QWORD PTR [rcx+0x68],r10
   14001b76c:	xor    eax,0x2eddb63d
   14001b771:	cmp    cl,cl
   14001b773:	jmp    FWORD PTR [rip+0x2dffc335]        # 0x16e017aae
   14001b779:	xor    al,0xbf
   14001b77b:	(bad)  
   14001b77c:	cmp    al,0x32
   14001b77e:	test   BYTE PTR [rdx+0x178323f],bl
	...
   14001b79c:	mov    dl,BYTE PTR [rsi+rdx*1+0x4]
   14001b7a0:	xchg   DWORD PTR [rcx+0x14],edx
   14001b7a3:	ds (bad) 
   14001b7a5:	mov    DWORD PTR [rcx],edi
   14001b7a7:	(bad)  
   14001b7a8:	rcl    BYTE PTR [rbp-0x6c2f01bf],cl
   14001b7ae:	rex.XB dec r14d
   14001b7b1:	xchg   edx,eax
   14001b7b2:	rex.W dec cl
   14001b7b5:	(bad)  
   14001b7b6:	rex.WXB inc r12
   14001b7b9:	mov    WORD PTR [rbp-0x2],cs
   14001b7bc:	mov    ecx,0xb0fe4c84
   14001b7c1:	js     0x14001b7f2
   14001b7c3:	inc    BYTE PTR [rsi+0x27ff2b58]
   14001b7c9:	sbb    BYTE PTR [rdi-0x2],al
   14001b7cc:	(bad)  
   14001b7cd:	adc    DWORD PTR [rsi-0x2],edx
   14001b7d0:	adc    edx,DWORD PTR [rcx+rbp*2]
   14001b7d3:	call   QWORD PTR [rbx]
   14001b7d5:	(bad)  
   14001b7d6:	jbe    0x14001b7d6
   14001b7d8:	(bad)  
   14001b7d9:	sbb    edi,DWORD PTR [rbp-0x2]
   14001b7dc:	sbb    DWORD PTR [rip+0x211cff85],ebx        # 0x1611eb767
   14001b7e2:	(bad)  
   14001b7e3:	(bad)  
   14001b7e4:	(bad)  
   14001b7e5:	(bad)  
   14001b7e6:	xchg   ebp,eax
   14001b7e7:	(bad)  
   14001b7e8:	and    al,0x2e
   14001b7ea:	lahf   
   14001b7eb:	jmp    QWORD PTR [rdi]
   14001b7ed:	(bad)  
   14001b7ee:	stos   DWORD PTR es:[rdi],eax
   14001b7ef:	(bad)  
   14001b7f0:	sub    eax,DWORD PTR [rcx-0x49]
   14001b7f3:	(bad)  
   14001b7f4:	sub    eax,0x33ffc54c
   14001b7f9:	push   rsi
   14001b7fa:	sar    esi,cl
   14001b7fc:	(bad)  
   14001b7fd:	fs loope 0x14001b7fe
   14001b800:	(bad)  
   14001b801:	outs   dx,BYTE PTR ds:[rsi]
   14001b802:	jmp    0x12b7af306
   14001b807:	(bad)  
   14001b808:	cmp    al,0x82
   14001b80a:	in     al,dx
   14001b80b:	(bad)  
   14001b80c:	cmp    ecx,DWORD PTR [rax-0x74c40114]
   14001b812:	in     eax,dx
   14001b813:	(bad)  
   14001b814:	cmp    ecx,DWORD PTR [rbx-0x79c40013]
   14001b81a:	in     al,dx
   14001b81b:	(bad)  
   14001b81c:	cmp    bh,BYTE PTR [rbp-0x17]
   14001b81f:	cld    
   14001b820:	cmp    BYTE PTR [rbx+rbx*8-0x11],ch
   14001b824:	xor    eax,0x32f8df59
   14001b829:	rex.WB (bad) 
   14001b82c:	(bad)  
   14001b82d:	cmp    eax,0x362effce
   14001b832:	(bad)  
   14001b833:	(bad)  
   14001b834:	sub    eax,0x2cfec134
   14001b839:	xor    edi,DWORD PTR [rbp+0x663245fe]
   14001b83f:	cmp    BYTE PTR [rax],al
	...
   14001b855:	add    BYTE PTR [rax],al
   14001b857:	add    BYTE PTR [rdx-0x60f4edb3],al
   14001b85d:	push   0xffffffff98d37923
   14001b862:	rex.XB not r12b
   14001b865:	cdq    
   14001b866:	rex.X (bad) 
   14001b868:	rcl    DWORD PTR [rsi-0x6a2e01be],cl
   14001b86e:	rex.X call rax
   14001b871:	xchg   ebx,eax
   14001b872:	rex.R dec spl
   14001b875:	nop
   14001b876:	inc    r14
   14001b879:	lea    ecx,[rbp-0x2]
   14001b87c:	ror    DWORD PTR [rdx-0x7a4601b2],0x50
   14001b883:	(bad)  
   14001b884:	lods   al,BYTE PTR ds:[rsi]
   14001b885:	jbe    0x14001b8b8
   14001b887:	push   QWORD PTR [rsi+0x4e]
   14001b88a:	(bad)  
   14001b88b:	(bad)  
   14001b88c:	(bad)  
   14001b88d:	adc    al,0x47
   14001b88f:	(bad)  
   14001b890:	(bad)  
   14001b891:	adc    DWORD PTR [rdi-0x1],edx
   14001b894:	adc    edx,DWORD PTR [rbx+rbp*2]
   14001b897:	(bad)  
   14001b898:	adc    al,0x18
   14001b89a:	ja     0x14001b89a
   14001b89c:	(bad)  
   14001b89d:	sbb    edi,DWORD PTR [rsi-0x1]
   14001b8a0:	sbb    DWORD PTR [rip+0x221cfe87],ebx        # 0x1621eb72d
   14001b8a6:	(bad)  
   14001b8a7:	(bad)  
   14001b8a8:	and    DWORD PTR [rcx],ebp
   14001b8aa:	xchg   edi,eax
   14001b8ab:	jmp    QWORD PTR [rcx+rsi*1]
   14001b8ae:	movabs ds:0xbe462cfeb03b28fe,eax
   14001b8b7:	push   QWORD PTR [rcx]
   14001b8b9:	push   rdx
   14001b8ba:	(bad)  
   14001b8bb:	(bad)  
   14001b8bc:	ss pop rdi
   14001b8be:	(bad)  
   14001b8c0:	(bad)  
   14001b8c1:	ins    BYTE PTR es:[rdi],dx
   14001b8c2:	call   0x12b79f3c6
   14001b8c7:	(bad)  
   14001b8c8:	cmp    al,0x82
   14001b8ca:	in     al,dx
   14001b8cb:	(bad)  
   14001b8cc:	cmp    ecx,DWORD PTR [rcx-0x74c40114]
   14001b8d2:	in     eax,dx
   14001b8d3:	(bad)  
   14001b8d4:	cmp    ecx,DWORD PTR [rdx-0x7ac40013]
   14001b8da:	in     al,dx
   14001b8db:	(bad)  
   14001b8dc:	cmp    DWORD PTR [rbx+rbp*8-0x2],edi
   14001b8e0:	cmp    DWORD PTR [rbp-0x17],ebp
   14001b8e3:	push   QWORD PTR [rip+0x31fee357]        # 0x172009c40
   14001b8e9:	rex.RX xlat BYTE PTR ds:[rbx]
   14001b8eb:	(bad)  
   14001b8ec:	cs cmp cl,bl
   14001b8ef:	jmp    FWORD PTR [rip+0x2dfec435]        # 0x16e007d2a
   14001b8f5:	xor    al,0xc0
   14001b8f7:	(bad)  
   14001b8f8:	xor    dh,BYTE PTR [rdx]
   14001b8fa:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001b8fb:	rol    BYTE PTR [rbp+0x31],1
   14001b8fe:	data16 add al,0x0
	...
   14001b90d:	add    BYTE PTR [rax],al
   14001b90f:	add    BYTE PTR [rbp-0x7dfde5a8],cl
   14001b915:	rex.WRB adc r12b,BYTE PTR [r15]
   14001b918:	mov    ebp,0xd8bc3785
   14001b91d:	sahf   
   14001b91e:	rex.W (bad) 
   14001b920:	xlat   BYTE PTR ds:[rbx]
   14001b921:	popf   
   14001b922:	rex.RX call rsi
   14001b925:	fwait
   14001b926:	rex.RB call r12
   14001b929:	cwde   
   14001b92a:	rex.X call rbx
   14001b92d:	xchg   esi,eax
   14001b92e:	call   r9
   14001b931:	xchg   esp,eax
   14001b932:	rex.XB dec r15d
   14001b935:	xchg   edx,eax
   14001b936:	rex.RXB dec r8d
   14001b939:	mov    cs,WORD PTR [rdi+rdi*8-0x3d]
   14001b93d:	mov    ecx,DWORD PTR [rbp-0x1]
   14001b940:	mov    esp,0xb6ff5087
   14001b945:	(bad)  
   14001b946:	push   rcx
   14001b947:	jmp    QWORD PTR [rdi+0x61ff2e72]
   14001b94d:	(bad)  
   14001b94e:	xor    eax,0x49111aff
   14001b953:	call   QWORD PTR [rdi]
   14001b955:	adc    DWORD PTR [rdx-0x1],ebx
   14001b958:	adc    edx,DWORD PTR [rsi+rbp*2]
   14001b95b:	call   QWORD PTR [rcx+rbx*1]
   14001b95e:	jns    0x14001b95f
   14001b960:	(bad)  
   14001b961:	sbb    al,0x80
   14001b963:	call   FWORD PTR [rdx]
   14001b965:	(bad)  
   14001b966:	mov    edi,edi
   14001b968:	sbb    eax,0x23ff9225
   14001b96d:	sub    eax,0x3626ff9c
   14001b972:	test   eax,0xb8412bff
   14001b977:	jmp    FWORD PTR [rdi]
   14001b979:	rex.WRX enter 0x35ff,0x5b
   14001b97e:	fcos   
   14001b980:	(bad)  
   14001b981:	push   0xffffffffffffffe7
   14001b983:	(bad)  
   14001b984:	cmp    DWORD PTR [rdi-0x16],esi
   14001b987:	(bad)  
   14001b988:	cmp    al,0x82
   14001b98a:	in     al,dx
   14001b98b:	(bad)  
   14001b98c:	cmp    ecx,DWORD PTR [rcx-0x74c40014]
   14001b992:	in     eax,dx
   14001b993:	(bad)  
   14001b994:	cmp    al,0x8a
   14001b996:	in     eax,dx
   14001b997:	(bad)  
   14001b998:	cmp    eax,DWORD PTR [rsp+rbp*8-0x1585c601]
   14001b99f:	(bad)  
   14001b9a0:	cmp    DWORD PTR [rcx-0x18],ebp
   14001b9a3:	push   QWORD PTR [rdx+rdx*2]
   14001b9a6:	loope  0x14001b9a7
   14001b9a8:	xor    BYTE PTR [rcx-0x2e],al
   14001b9ab:	jmp    FWORD PTR [rsi]
   14001b9ad:	(bad)  
   14001b9ae:	enter  0x2dff,0x34
   14001b9b2:	ret    0x2cff
   14001b9b5:	xor    edi,DWORD PTR [rsi+0x703242ff]
   14001b9bb:	jae    0x14001b9bd
	...
   14001b9c9:	add    BYTE PTR [rax],al
   14001b9cb:	add    BYTE PTR [rax-0x6df8e7ac],cl
   14001b9d1:	pop    rbp
   14001b9d2:	(bad)  
   14001b9d3:	pop    rbx
   14001b9d4:	rcr    DWORD PTR [rax-0x602716b9],1
   14001b9da:	rex.WB (bad) 
   14001b9dc:	fcomp  DWORD PTR [rsi-0x612701b7]
   14001b9e2:	rex.W call rdi
   14001b9e5:	popf   
   14001b9e6:	rex.RX (bad) 
   14001b9e8:	(bad)  
   14001b9e9:	fwait
   14001b9ea:	rex.R (bad) 
   14001b9ec:	rcr    DWORD PTR [rax-0x6a2d00be],cl
   14001b9f2:	rex.B (bad) 
   14001b9f4:	rcl    BYTE PTR [rbx-0x6f3400bb],1
   14001b9fa:	rex.WX inc spl
   14001b9fd:	mov    WORD PTR [rbp-0x2],cs
   14001ba00:	mov    ebp,0xb8fe4f88
   14001ba05:	test   BYTE PTR [rcx-0x1],dl
   14001ba08:	scas   eax,DWORD PTR es:[rdi]
   14001ba09:	jle    0x14001ba5c
   14001ba0b:	(bad)  
   14001ba0c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001ba0d:	outs   dx,DWORD PTR ds:[rsi]
   14001ba0e:	sub    esi,edi
   14001ba10:	rex.XB sub edi,DWORD PTR [r14]
   14001ba13:	call   FWORD PTR [rax]
   14001ba15:	adc    BYTE PTR [rbx-0x2],cl
   14001ba18:	(bad)  
   14001ba19:	adc    bl,BYTE PTR [rdi-0x2]
   14001ba1c:	adc    edx,DWORD PTR [rsi]
   14001ba1e:	jb     0x14001ba1f
   14001ba20:	adc    eax,0x18fe7b1a
   14001ba25:	sbb    eax,0x211cfe84
   14001ba2a:	(bad)  
   14001ba2b:	jmp    QWORD PTR [rax]
   14001ba2d:	sub    BYTE PTR [rsi-0x5cceda02],dl
   14001ba33:	(bad)  
   14001ba34:	sub    DWORD PTR [rip+0x492dffb2],edi        # 0x1892fb9ec
   14001ba3a:	ret    
   14001ba3b:	(bad)  
   14001ba3c:	xor    al,0x58
   14001ba3e:	(bad)  
   14001ba3f:	(bad)  
   14001ba40:	(bad)  
   14001ba41:	push   0x7639ffe5
   14001ba46:	(bad)  
   14001ba47:	(bad)  
   14001ba48:	cmp    al,0x82
   14001ba4a:	in     al,dx
   14001ba4b:	(bad)  
   14001ba4c:	cmp    ecx,DWORD PTR [rcx-0x74c40113]
   14001ba52:	in     eax,dx
   14001ba53:	(bad)  
   14001ba54:	cmp    al,0x8a
   14001ba56:	in     eax,dx
   14001ba57:	(bad)  
   14001ba58:	cmp    al,BYTE PTR [rdx+0x7739feec]
   14001ba5e:	(bad)  
   14001ba5f:	(bad)  
   14001ba60:	cmp    BYTE PTR [rbx-0x19],ah
   14001ba63:	push   QWORD PTR [rbx]
   14001ba65:	rex.WR (bad) 
   14001ba68:	(bad)  
   14001ba69:	cmp    eax,0x362efece
   14001ba6e:	(bad)  
   14001ba6f:	jmp    FWORD PTR [rip+0x2cfec134]        # 0x16d007ba9
   14001ba75:	xor    edi,DWORD PTR [rdx+0x633146f5]
   14001ba7b:	sbb    eax,0x0
	...
   14001ba88:	xchg   DWORD PTR [rbx+0x18],edx
   14001ba8b:	adc    eax,0x9f347bb1
   14001ba90:	fldenv [rcx-0x5e2603b2]
   14001ba96:	rex.WRX (bad) 
   14001ba98:	fsub   DWORD PTR [rax-0x602701b3]
   14001ba9e:	rex.WXB (bad) 
   14001baa0:	fcomp  DWORD PTR [rsi-0x612700b7]
   14001baa6:	rex.W (bad) 
   14001baa8:	xlat   BYTE PTR ds:[rbx]
   14001baa9:	popf   
   14001baaa:	rex.RX (bad) 
   14001baac:	(bad)  
   14001baad:	(bad)  
   14001baae:	rex.XB call r11
   14001bab1:	xchg   esi,eax
   14001bab2:	rex.B (bad) 
   14001bab4:	rcl    DWORD PTR [rbx+rax*2+0x4991cdff],1
   14001babb:	inc    ch
   14001babd:	lea    ecx,[rbp-0x2]
   14001bac0:	mov    esi,0xb8fe4f88
   14001bac5:	test   BYTE PTR [rcx-0x1],dl
   14001bac8:	mov    cl,0x80
   14001baca:	push   rbx
   14001bacb:	(bad)  
   14001bacc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001bacd:	jp     0x14001bb20
   14001bacf:	(bad)  
   14001bad0:	xchg   esp,eax
   14001bad1:	movsxd ebp,DWORD PTR [rax]
   14001bad3:	jmp    FWORD PTR [rcx]
   14001bad5:	sbb    al,BYTE PTR [rbp-0x2]
   14001bad8:	sbb    DWORD PTR [rax],edx
   14001bada:	rex.WRXB (bad) 
   14001badc:	adc    eax,0x13ff6513
   14001bae1:	(bad)  
   14001bae2:	jbe    0x14001bae2
   14001bae4:	(bad)  
   14001bae5:	sbb    edi,DWORD PTR [rsi-0x2]
   14001bae8:	sbb    bl,BYTE PTR [rsi]
   14001baea:	mov    bh,bh
   14001baec:	sbb    eax,0x23fe9124
   14001baf1:	sub    eax,0x3827fe9c
   14001baf6:	lods   al,BYTE PTR ds:[rsi]
   14001baf7:	jmp    FWORD PTR [rsi+rax*2]
   14001bafa:	mov    ebp,0xd15432fe
   14001baff:	(bad)  
   14001bb00:	(bad)  
   14001bb01:	data16 jrcxz 0x14001bb03
   14001bb04:	cmp    DWORD PTR [rbp-0x16],esi
   14001bb07:	(bad)  
   14001bb08:	cmp    al,0x82
   14001bb0a:	in     al,dx
   14001bb0b:	(bad)  
   14001bb0c:	cmp    al,0x8a
   14001bb0e:	in     eax,dx
   14001bb0f:	(bad)  
   14001bb10:	cmp    al,0x8e
   14001bb12:	out    dx,al
   14001bb13:	(bad)  
   14001bb14:	cmp    al,0x8a
   14001bb16:	in     eax,dx
   14001bb17:	(bad)  
   14001bb18:	cmp    al,BYTE PTR [rax+0x7439feeb]
   14001bb1e:	(bad)  
   14001bb1f:	(bad)  
   14001bb20:	ss pop rbp
   14001bb22:	in     eax,0xff
   14001bb24:	xor    al,BYTE PTR [rdi-0x27]
   14001bb27:	(bad)  
   14001bb28:	cs cmp cl,bl
   14001bb2b:	(bad)  
   14001bb2c:	sub    eax,0x2dffc335
   14001bb31:	xor    al,0xbf
   14001bb33:	(bad)  
   14001bb34:	cmp    BYTE PTR [rdx],dh
   14001bb36:	xchg   ecx,eax
   14001bb37:	mov    dl,0x42
   14001bb39:	xor    ch,BYTE PTR [rdi+0x2]
	...
   14001bb48:	mov    ebx,0xd88c3d84
   14001bb4d:	movabs al,ds:0xa1d9ff52a1d9f852
   14001bb56:	push   rcx
   14001bb57:	(bad)  
   14001bb58:	fisub  DWORD PTR [rdx-0x5e2600b1]
   14001bb5e:	rex.WRX (bad) 
   14001bb60:	fcomp  DWORD PTR [rdi-0x612700b4]
   14001bb66:	rex.WB call r15
   14001bb69:	sahf   
   14001bb6a:	rex.W call rsi
   14001bb6d:	pushf  
   14001bb6e:	rex.RB call r11
   14001bb71:	cwde   
   14001bb72:	rex.X call rdx
   14001bb75:	xchg   ebp,eax
   14001bb76:	rex.X dec edi
   14001bb79:	xchg   edx,eax
   14001bb7a:	rex.RXB inc r14d
   14001bb7d:	lea    ecx,[rdi+rdi*8-0x41]
   14001bb81:	mov    DWORD PTR [rsi-0x1],ecx
   14001bb84:	mov    eax,0xb1ff5184
   14001bb89:	adc    BYTE PTR [rbx-0x1],0xa9
   14001bb8d:	jl     0x14001bbe5
   14001bb8f:	call   FWORD PTR [rbp+0x76ff4771]
   14001bb95:	rex.WRX
   14001bb96:	call   FWORD PTR cs:[rdx+rdx*1]
   14001bb9a:	rex.RXB call FWORD PTR [r8]
   14001bb9d:	adc    DWORD PTR [rsi-0x1],edx
   14001bba0:	adc    edx,DWORD PTR [rbp*2+0x791915ff]
   14001bba7:	call   FWORD PTR [rax]
   14001bba9:	sbb    al,0x82
   14001bbab:	call   FWORD PTR [rcx+riz*1]
   14001bbae:	(bad)  
   14001bbaf:	jmp    QWORD PTR [rcx]
   14001bbb1:	sub    DWORD PTR [rdi-0x58cbd901],edx
   14001bbb7:	jmp    FWORD PTR [rbx]
   14001bbb9:	rex.X mov ecx,0xcd5131ff
   14001bbbf:	push   QWORD PTR [rdi]
   14001bbc1:	fs loop 0x14001bbc3
   14001bbc4:	cmp    DWORD PTR [rbp-0x16],esi
   14001bbc7:	(bad)  
   14001bbc8:	cmp    al,0x83
   14001bbca:	in     al,dx
   14001bbcb:	(bad)  
   14001bbcc:	cmp    al,0x8b
   14001bbce:	in     eax,dx
   14001bbcf:	(bad)  
   14001bbd0:	cmp    ecx,DWORD PTR [rdi-0x75c30012]
   14001bbd6:	in     eax,dx
   14001bbd7:	(bad)  
   14001bbd8:	cmp    DWORD PTR [rdi-0x15],edi
   14001bbdb:	(bad)  
   14001bbdc:	cmp    DWORD PTR [rdi-0x17],ebp
   14001bbdf:	push   QWORD PTR [rip+0x31ffe357]        # 0x172019f3c
   14001bbe5:	rex.X (bad) 
   14001bbe7:	jmp    FWORD PTR [rsi]
   14001bbe9:	cmp    al,cl
   14001bbeb:	jmp    FWORD PTR [rip+0x2cffc235]        # 0x16d017e26
   14001bbf1:	xor    edi,DWORD PTR [rsi+0x6c3143fe]
   14001bbf7:	push   rdi
	...
   14001bc08:	mov    dh,0x80
   14001bc0a:	cmp    al,BYTE PTR [rcx]
   14001bc0c:	mov    cl,0x7b
   14001bc0e:	(bad)  
   14001bc0f:	and    eax,0x854085bc
   14001bc14:	rcr    BYTE PTR [rdx-0x5e261cb0],cl
   14001bc1a:	push   rbx
   14001bc1b:	(bad)  
   14001bc1c:	fisub  DWORD PTR [rcx-0x5e2601b0]
   14001bc22:	rex.WRX (bad) 
   14001bc24:	fcomp  DWORD PTR [rdi-0x612701b5]
   14001bc2a:	rex.WB (bad) 
   14001bc2c:	xlat   BYTE PTR ds:[rbx]
   14001bc2d:	popf   
   14001bc2e:	rex.RXB call r12
   14001bc31:	cdq    
   14001bc32:	rex.XB (bad) 
   14001bc34:	rcl    BYTE PTR [rsi-0x6d2f00bf],cl
   14001bc3a:	rex.RX inc dil
   14001bc3d:	mov    cs,WORD PTR [rsi+rdi*8-0x41]
   14001bc41:	mov    DWORD PTR [rsi-0x2],ecx
   14001bc44:	mov    eax,0xb0ff5184
   14001bc49:	adc    BYTE PTR [rsi+rdi*8-0x58],0x7b
   14001bc4e:	push   rsi
   14001bc4f:	(bad)  
   14001bc50:	sahf   
   14001bc51:	jne    0x14001bca9
   14001bc53:	dec    DWORD PTR [rax+0x49fe305c]
   14001bc59:	(bad)  
   14001bc5a:	cmp    al,0xfe
   14001bc5c:	sbb    BYTE PTR [rax],dl
   14001bc5e:	rex.WX call QWORD PTR [rsi]
   14001bc61:	adc    bl,BYTE PTR [rdi-0x2]
   14001bc64:	adc    edx,DWORD PTR [rsi]
   14001bc66:	jae    0x14001bc66
   14001bc68:	(bad)  
   14001bc69:	sbb    edi,DWORD PTR [rbp-0x1]
   14001bc6c:	sbb    bl,BYTE PTR [rsi]
   14001bc6e:	mov    dh,bh
   14001bc70:	(bad)  
   14001bc71:	es xchg ebx,eax
   14001bc73:	(bad)  
   14001bc74:	and    al,0x30
   14001bc76:	movabs eax,ds:0xc94e2ffeb43e2aff
   14001bc7f:	(bad)  
   14001bc80:	ss (bad) 
   14001bc82:	loopne 0x14001bc83
   14001bc84:	cmp    DWORD PTR [rbp-0x16],esi
   14001bc87:	(bad)  
   14001bc88:	cmp    al,0x84
   14001bc8a:	in     al,dx
   14001bc8b:	(bad)  
   14001bc8c:	cmp    ecx,DWORD PTR [rbp-0x6fc40112]
   14001bc92:	out    dx,al
   14001bc93:	(bad)  
   14001bc94:	cmp    ecx,DWORD PTR [rdx+0x7d39ffed]
   14001bc9a:	jmp    0x14001bc9a
   14001bc9c:	cmp    DWORD PTR [rbx-0x18],ebp
   14001bc9f:	(bad)  
   14001bca0:	xor    al,0x51
   14001bca2:	loopne 0x14001bca3
   14001bca4:	(bad)  
   14001bca5:	ds iret 
   14001bca7:	(bad)  
   14001bca8:	cs ss (bad) 
   14001bcab:	(bad)  
   14001bcac:	sub    eax,0x2effc134
   14001bcb1:	xor    dh,BYTE PTR [rdx+rbp*8+0x10623146]
	...
   14001bcd4:	mov    bl,0x7d
   14001bcd6:	cmp    DWORD PTR [rbx],ecx
   14001bcd8:	mov    eax,0xc7553d82
   14001bcdd:	nop
   14001bcde:	rex.RXB mov r9d,0xfc50a1d9
   14001bce4:	fldenv [rcx-0x602701b2]
   14001bcea:	rex.WX (bad) 
   14001bcec:	xlat   BYTE PTR ds:[rbx]
   14001bced:	sahf   
   14001bcee:	rex.W call rsi
   14001bcf1:	fwait
   14001bcf2:	rex.R (bad) 
   14001bcf4:	rcl    DWORD PTR [rdi-0x6c2f00be],cl
   14001bcfa:	rex.RB dec r8b
   14001bcfd:	mov    cs,WORD PTR [rbx-0x2]
   14001bd00:	mov    edi,0xb7fe4e89
   14001bd05:	test   BYTE PTR [rcx-0x1],dl
   14001bd08:	scas   eax,DWORD PTR es:[rdi]
   14001bd09:	jg     0x14001bd5f
   14001bd0b:	(bad)  
   14001bd0c:	sahf   
   14001bd0d:	jae    0x14001bd61
   14001bd0f:	dec    BYTE PTR [rbp+0x33]
   14001bd12:	rex.RXB jmp QWORD PTR [r14+r10*1]
   14001bd16:	rex.R inc BYTE PTR [rbp+0x25fe2758]
   14001bd1d:	(bad)  
   14001bd1e:	rex.RX call FWORD PTR [rax]
   14001bd21:	adc    DWORD PTR [rax-0x2],edx
   14001bd24:	adc    al,0x14
   14001bd26:	push   0xfffffffffffffffe
   14001bd28:	adc    al,0x19
   14001bd2a:	jns    0x14001bd2b
   14001bd2c:	sbb    BYTE PTR [rip+0x221cfe83],bl        # 0x1621ebbb5
   14001bd32:	(bad)  
   14001bd33:	(bad)  
   14001bd34:	and    ebp,DWORD PTR [rsp+rbx*4]
   14001bd37:	jmp    FWORD PTR [rax]
   14001bd39:	cmp    ch,BYTE PTR [rdi-0x3ab4d102]
   14001bd3f:	(bad)  
   14001bd40:	ss (bad) 
   14001bd42:	fdivp  st(7),st
   14001bd44:	cmp    DWORD PTR [rbp-0x16],esi
   14001bd47:	(bad)  
   14001bd48:	cmp    al,0x85
   14001bd4a:	in     al,dx
   14001bd4b:	(bad)  
   14001bd4c:	cmp    al,0x8f
   14001bd4e:	out    dx,al
   14001bd4f:	(bad)  
   14001bd50:	cmp    al,0x91
   14001bd52:	out    dx,al
   14001bd53:	(bad)  
   14001bd54:	cmp    ecx,DWORD PTR [rdx+0x7c39ffed]
   14001bd5a:	(bad)  
   14001bd5b:	(bad)  
   14001bd5c:	cmp    BYTE PTR [rsi-0x19],ah
   14001bd5f:	(bad)  
   14001bd60:	xor    ecx,DWORD PTR [rbx-0x24]
   14001bd63:	jmp    FWORD PTR [rdi]
   14001bd65:	cmp    ecx,esp
   14001bd67:	(bad)  
   14001bd68:	sub    eax,0x2cfec435
   14001bd6d:	xor    al,0xbf
   14001bd6f:	(bad)  
   14001bd70:	cmp    al,0x32
   14001bd72:	(bad)  
   14001bd73:	popf   
   14001bd74:	rex xor DWORD PTR [rbp+0x1],esi
	...
   14001bd9c:	mov    eax,0xb4013b82
   14001bda1:	jge    0x14001bdd9
   14001bda3:	es mov ebp,0xd2883b86
   14001bda9:	cdq    
   14001bdaa:	rex.W in al,0xd8
   14001bdad:	sahf   
   14001bdae:	rex.W (bad) 
   14001bdb0:	(bad)  
   14001bdb1:	pushf  
   14001bdb2:	rex.RB call r11
   14001bdb5:	cwde   
   14001bdb6:	rex.X call rax
   14001bdb9:	xchg   ebx,eax
   14001bdba:	rex.RB dec r8d
   14001bdbd:	mov    cs,WORD PTR [rbx-0x1]
   14001bdc0:	mov    edi,0xb7ff4f88
   14001bdc5:	adc    DWORD PTR [rcx-0x1],0xffffff97
   14001bdc9:	imul   ecx,DWORD PTR [rbx-0x1],0x3f
   14001bdcd:	sub    BYTE PTR [rbp-0x1],al
   14001bdd0:	and    BYTE PTR [rdx],dl
   14001bdd2:	rex.RX call FWORD PTR [rdx]
   14001bdd5:	adc    BYTE PTR [rdi-0x1],al
   14001bdd8:	rex.XB sub al,0x3b
   14001bddb:	jmp    FWORD PTR [rax+0x44]
   14001bdde:	xor    edi,edi
   14001bde0:	sbb    DWORD PTR [rax],edx
   14001bde2:	rex.W call QWORD PTR [rsi]
   14001bde5:	adc    bl,BYTE PTR [rdi+rdi*8+0x13]
   14001bde9:	(bad)  
   14001bdea:	jae    0x14001bdeb
   14001bdec:	(bad)  
   14001bded:	sbb    edi,DWORD PTR [rsi-0x1]
   14001bdf0:	sbb    ebx,DWORD PTR [rdi]
   14001bdf2:	mov    edi,edi
   14001bdf4:	and    BYTE PTR [rcx],ch
   14001bdf6:	xchg   edi,eax
   14001bdf7:	jmp    QWORD PTR [rsi]
   14001bdf9:	ss test eax,0xc1482dff
   14001bdff:	push   QWORD PTR [rip+0x39ffdc5e]        # 0x17a019a63
   14001be05:	jne    0x14001bdf1
   14001be07:	(bad)  
   14001be08:	cmp    al,0x87
   14001be0a:	in     eax,dx
   14001be0b:	(bad)  
   14001be0c:	cmp    edx,DWORD PTR [rdx-0x6cc40011]
   14001be12:	out    dx,eax
   14001be13:	(bad)  
   14001be14:	cmp    ecx,DWORD PTR [rcx+0x7a39ffed]
   14001be1a:	(bad)  
   14001be1b:	push   QWORD PTR [rdi]
   14001be1d:	(bad)  
   14001be1e:	out    0xff,al
   14001be20:	xor    al,BYTE PTR [rdi-0x28]
   14001be23:	jmp    FWORD PTR [rsi]
   14001be25:	cmp    cl,cl
   14001be27:	jmp    FWORD PTR [rip+0x2cffc235]        # 0x16d018062
   14001be2d:	xor    edi,DWORD PTR [rsi+0x683244ff]
   14001be33:	rex.X add BYTE PTR [rax],al
	...
   14001be66:	add    BYTE PTR [rax],al
   14001be68:	mov    dl,0x7c
   14001be6a:	xor    cl,BYTE PTR [rbx]
   14001be6c:	mov    ah,0x7d
   14001be6e:	xor    dl,BYTE PTR [rdi-0x3b]
   14001be71:	mov    WORD PTR [rbx],?
   14001be73:	mov    esp,0xfa4297d3
   14001be78:	rcl    BYTE PTR [rbx-0x713701bc],1
   14001be7e:	rex.WXB (bad) 
   14001be80:	mov    esi,0x8dfe4c88
   14001be85:	(bad)  
   14001be86:	rex.R (bad) 
   14001be88:	(bad)  
   14001be89:	(bad)  
   14001be8a:	rex.XB (bad) 
   14001be8c:	and    al,0x14
   14001be8e:	rex.RX (bad) 
   14001be90:	sbb    eax,0x1cff4611
   14001be95:	adc    DWORD PTR [rsi-0x2],eax
   14001be98:	sbb    edx,DWORD PTR [rax]
   14001be9a:	rex.RX (bad) 
   14001be9c:	jns    0x14001beee
   14001be9e:	sub    edi,edi
   14001bea0:	xor    BYTE PTR [rsi],bl
   14001bea2:	rex.XB (bad) 
   14001bea4:	sbb    BYTE PTR [rax],dl
   14001bea6:	rex.WRX (bad) 
   14001bea8:	adc    al,0x14
   14001beaa:	push   0xffffffffffffffff
   14001beac:	adc    eax,0x19fe7a19
   14001beb1:	sbb    eax,0x251efe86
   14001beb6:	xchg   ebx,eax
   14001beb7:	jmp    QWORD PTR [rip+0x2cfea432]        # 0x16d0062ef
   14001bebd:	rex.RB mov r12d,0xda5d35fe
   14001bec3:	(bad)  
   14001bec4:	cmp    DWORD PTR [rbp-0x16],esi
   14001bec7:	(bad)  
   14001bec8:	cmp    ecx,DWORD PTR [rcx-0x6ac40013]
   14001bece:	out    dx,eax
   14001becf:	(bad)  
   14001bed0:	cmp    edx,DWORD PTR [rbp-0x76c40111]
   14001bed6:	in     eax,dx
   14001bed7:	(bad)  
   14001bed8:	cmp    DWORD PTR [rdi-0x16],esi
   14001bedb:	(bad)  
   14001bedc:	ss pop rdx
   14001bede:	in     al,0xfe
   14001bee0:	xor    BYTE PTR [rdx-0x2d],al
   14001bee3:	jmp    FWORD PTR [rsi]
   14001bee5:	(bad)  
   14001bee6:	(bad)  
   14001bee7:	(bad)  
   14001bee8:	sub    eax,0x30fec134
   14001beed:	xor    ebp,DWORD PTR [rbp+0x613247df]
   14001bef3:	(bad)  
	...
   14001bf30:	mov    dl,0x7a
   14001bf32:	(bad)  
   14001bf33:	add    ch,BYTE PTR [rsi-0x4bd4d38b]
   14001bf39:	jnp    0x14001bf6f
   14001bf3b:	nop
   14001bf3c:	ret    
   14001bf3d:	mov    DWORD PTR [rcx-0x14],eax
   14001bf40:	mov    WORD PTR [rcx+0x3d],fs
   14001bf43:	inc    BYTE PTR [rbp+0x2c]
   14001bf46:	rex.X jmp FWORD PTR [rsi]
   14001bf49:	sbb    al,BYTE PTR [rbp-0x2]
   14001bf4c:	sub    DWORD PTR [rdi],edx
   14001bf4e:	rex.RX (bad) 
   14001bf50:	(bad)  
   14001bf51:	(bad)  
   14001bf52:	rex.RX jmp QWORD PTR [rsi]
   14001bf55:	adc    eax,0x1525fe46
   14001bf5a:	rex.RX (bad) 
   14001bf5c:	cmp    BYTE PTR [rdx],ah
   14001bf5e:	rex push QWORD PTR [rdi+0x4e]
   14001bf62:	(bad)  
   14001bf63:	(bad)  
   14001bf64:	sbb    dl,BYTE PTR [rcx]
   14001bf66:	rex.RXB (bad) 
   14001bf68:	(bad)  
   14001bf69:	adc    bl,BYTE PTR [rdi+rdi*8+0x13]
   14001bf6d:	(bad)  
   14001bf6e:	je     0x14001bf6e
   14001bf70:	(bad)  
   14001bf71:	sbb    al,0x80
   14001bf73:	(bad)  
   14001bf74:	sbb    al,0x22
   14001bf76:	mov    ?,edi
   14001bf78:	and    al,0x2e
   14001bf7a:	lahf   
   14001bf7b:	(bad)  
   14001bf7c:	sub    al,BYTE PTR [rdx-0x48]
   14001bf7f:	(bad)  
   14001bf80:	xor    al,0x5b
   14001bf82:	xlat   BYTE PTR ds:[rbx]
   14001bf83:	(bad)  
   14001bf84:	cmp    DWORD PTR [rsi-0x16],esi
   14001bf87:	(bad)  
   14001bf88:	cmp    al,0x8c
   14001bf8a:	out    dx,al
   14001bf8b:	(bad)  
   14001bf8c:	cmp    bl,BYTE PTR [rcx-0x67c50110]
   14001bf92:	out    dx,eax
   14001bf93:	(bad)  
   14001bf94:	cmp    ecx,DWORD PTR [rax+0x7239ffed]
   14001bf9a:	jmp    0x12155f49d
   14001bf9f:	(bad)  
   14001bfa0:	(bad)  
   14001bfa1:	ds iret 
   14001bfa3:	jmp    FWORD PTR [rip+0x2dfec435]        # 0x16e0083de
   14001bfa9:	xor    al,0xbf
   14001bfab:	inc    BYTE PTR [rax+0x32]
   14001bfae:	jns    0x14001bf39
   14001bfb0:	xor    sil,BYTE PTR [rdi+0x1]
	...
   14001bffc:	test   DWORD PTR [rbx+riz*1+0x16],edx
   14001c000:	push   rdi
   14001c001:	(bad)  
   14001c002:	cmp    bh,dl
   14001c004:	rex.RXB sub eax,0x2b44ff41
   14001c00a:	rex.X inc DWORD PTR [rax+0x28]
   14001c00e:	rex.XB (bad) 
   14001c010:	cmp    esp,DWORD PTR [rbx+rax*2]
   14001c013:	push   QWORD PTR [rsi]
   14001c015:	and    DWORD PTR [rdi+rdi*8+0x33],eax
   14001c019:	(bad)  
   14001c01a:	rex.R push QWORD PTR [rax]
   14001c01d:	sbb    al,0x45
   14001c01f:	push   QWORD PTR [rsp+rcx*2+0x30]
   14001c023:	(bad)  
   14001c024:	cmp    ah,BYTE PTR [rip+0x1018ff40]        # 0x1501abf6a
   14001c02a:	rex.WRX call QWORD PTR [rsp+r10*1]
   14001c02e:	imul   edi,edi,0x15
   14001c031:	sbb    bh,BYTE PTR [rdi+rdi*8+0x1a]
   14001c035:	(bad)  
   14001c036:	mov    bh,bh
   14001c038:	and    ch,BYTE PTR [rbx]
   14001c03a:	(bad)  
   14001c03b:	jmp    FWORD PTR [rcx]
   14001c03d:	cmp    eax,0x5833ffb3
   14001c042:	(bad)  
   14001c043:	(bad)  
   14001c044:	cmp    DWORD PTR [rdi-0x16],esi
   14001c047:	(bad)  
   14001c048:	cmp    ecx,DWORD PTR [rdi-0x63c50012]
   14001c04e:	lock (bad) 
   14001c050:	cmp    bl,BYTE PTR [rdx-0x77c40010]
   14001c056:	in     eax,dx
   14001c057:	(bad)  
   14001c058:	cmp    DWORD PTR [rdi-0x17],ebp
   14001c05b:	push   QWORD PTR [rbx]
   14001c05d:	rex.WRX fdivp st(7),st
   14001c060:	cs cmp cl,bl
   14001c063:	jmp    FWORD PTR [rip+0x2dffc235]        # 0x16e01829e
   14001c069:	xor    edi,DWORD PTR [rsi+0x613247fc]
   14001c06f:	xor    BYTE PTR [rax],al
	...
   14001c0bd:	add    BYTE PTR [rax],al
   14001c0bf:	add    BYTE PTR [rsi+0x3c],ah
   14001c0c2:	(bad)  
   14001c0c3:	xor    DWORD PTR [rbx+0x52],edi
   14001c0c6:	sub    al,0xf1
   14001c0c8:	jne    0x14001c119
   14001c0ca:	xor    dh,bh
   14001c0cc:	push   0x47
   14001c0ce:	ss (bad) 
   14001c0d0:	pop    rbx
   14001c0d1:	cmp    al,0x3c
   14001c0d3:	dec    DWORD PTR [rdi+0x33]
   14001c0d6:	(bad)  
   14001c0d7:	inc    BYTE PTR [rsi+0x2c]
   14001c0da:	inc    BYTE PTR [r8+0x27]
   14001c0de:	rex.X inc DWORD PTR [rbp+0x2b]
   14001c0e2:	rex inc BYTE PTR [rax+0x1afe2f55]
   14001c0e9:	adc    DWORD PTR [rax-0x1],ecx
   14001c0ec:	(bad)  
   14001c0ed:	adc    bl,BYTE PTR [rsi-0x2]
   14001c0f0:	adc    al,0x18
   14001c0f2:	ja     0x14001c0f2
   14001c0f4:	sbb    DWORD PTR [rip+0x271fff85],ebx        # 0x16721c07f
   14001c0fa:	xchg   ebp,eax
   14001c0fb:	(bad)  
   14001c0fc:	sub    BYTE PTR [rcx],bh
   14001c0fe:	scas   al,BYTE PTR es:[rdi]
   14001c0ff:	(bad)  
   14001c100:	xor    dl,BYTE PTR [rsi-0x2e]
   14001c103:	(bad)  
   14001c104:	cmp    DWORD PTR [rdi-0x16],esi
   14001c107:	(bad)  
   14001c108:	cmp    edx,DWORD PTR [rdx-0x5dc50011]
   14001c10e:	icebp  
   14001c10f:	(bad)  
   14001c110:	cmp    bl,BYTE PTR [rax+rsi*8-0x1379c402]
   14001c117:	(bad)  
   14001c118:	cmp    BYTE PTR [rdx-0x18],ch
   14001c11b:	(bad)  
   14001c11c:	xor    cl,BYTE PTR [rax-0x27]
   14001c11f:	(bad)  
   14001c120:	cs cmp al,cl
   14001c123:	jmp    FWORD PTR [rip+0x34fec134]        # 0x17500825d
   14001c129:	xor    esp,DWORD PTR [rdx+0x6b3244cd]
   14001c12f:	add    eax,0x0
	...
   14001c184:	(bad)  
   14001c185:	pop    rax
   14001c186:	adc    edx,DWORD PTR [rbx-0x45]
   14001c189:	jle    0x14001c1ac
   14001c18b:	cli    
   14001c18c:	stos   DWORD PTR es:[rdi],eax
   14001c18d:	jb     0x14001c1ab
   14001c18f:	(bad)  
   14001c190:	xchg   edx,eax
   14001c191:	(bad)  {k2}
   14001c196:	cs (bad) 
   14001c198:	fs rex.XB cmp r14b,dil
   14001c19c:	push   rbp
   14001c19d:	(bad)  
   14001c19e:	dec    DWORD PTR ds:[rbp+0x32]
   14001c1a2:	inc    BYTE PTR [r8+0x3dfe3355]
   14001c1a9:	(bad)  
   14001c1aa:	(bad)  
   14001c1ab:	call   QWORD PTR [rdi]
   14001c1ad:	adc    DWORD PTR [rax-0x2],edx
   14001c1b0:	adc    edx,DWORD PTR [rip+0x1b17fe6f]        # 0x15b19c025
   14001c1b6:	cmp    bh,0x1d
   14001c1b9:	and    al,0x90
   14001c1bb:	(bad)  
   14001c1bc:	es xor eax,0x5331fea8
   14001c1c2:	(bad)  
   14001c1c3:	(bad)  
   14001c1c4:	cmp    bh,BYTE PTR [rcx-0x16]
   14001c1c7:	(bad)  
   14001c1c8:	cmp    edx,DWORD PTR [rdi-0x55c40011]
   14001c1ce:	repnz (bad) 
   14001c1d0:	cmp    ebx,DWORD PTR [rdi-0x7bc40110]
   14001c1d6:	in     al,dx
   14001c1d7:	push   QWORD PTR [rdi]
   14001c1d9:	fs out 0xfe,eax
   14001c1dc:	xor    BYTE PTR [rbx-0x2c],al
   14001c1df:	(bad)  
   14001c1e0:	cs ss (bad) 
   14001c1e3:	jmp    FWORD PTR [rip+0x41fec034]        # 0x18200821d
   14001c1e9:	xor    dh,BYTE PTR [rsi+0x79]
	...
   14001c244:	pushf  
   14001c245:	movsxd edx,DWORD PTR [rdi]
   14001c247:	add    DWORD PTR [rbp-0x3199e195],esp
   14001c24d:	nop
   14001c24e:	xor    bh,dl
   14001c250:	mov    BYTE PTR [rsi+0x75afff26],0x1a
   14001c257:	call   QWORD PTR [rdx+0x77ff2162]
   14001c25d:	push   rax
   14001c25e:	xor    bh,bh
   14001c260:	fs rex.XB cmp r15b,dil
   14001c264:	pop    rdi
   14001c265:	(bad)  
   14001c266:	cmp    edi,edi
   14001c268:	xchg   BYTE PTR [rdx+0x30],bl
   14001c26b:	call   FWORD PTR [rdx]
   14001c26d:	adc    DWORD PTR [rax-0x1],ecx
   14001c270:	adc    eax,0x15ff6313
   14001c275:	sbb    DWORD PTR [rbx-0x1],edi
   14001c278:	sbb    esp,DWORD PTR [rax]
   14001c27a:	mov    edi,edi
   14001c27c:	and    al,0x31
   14001c27e:	movabs ds:0xea7a39ffca5130ff,eax
   14001c287:	(bad)  
   14001c288:	cmp    ebx,DWORD PTR [rbp-0x4fc60010]
   14001c28e:	repnz (bad) 
   14001c290:	cmp    ah,BYTE PTR [rbx-0x7dc5000f]
   14001c296:	in     al,dx
   14001c297:	push   QWORD PTR [rsi]
   14001c299:	pop    rbp
   14001c29a:	in     al,0xff
   14001c29c:	(bad)  
   14001c29d:	ds sar bh,1
   14001c2a0:	sub    eax,0x2dffc335
   14001c2a5:	xor    edi,DWORD PTR [rbp+0x613247fa]
   14001c2ab:	(bad)  
	...
   14001c308:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001c309:	ins    DWORD PTR es:[rdi],dx
   14001c30a:	(bad)  
   14001c30b:	add    DWORD PTR [rdx-0x4da7e498],esp
   14001c311:	ja     0x14001c334
   14001c313:	out    dx,al
   14001c314:	mov    ecx,0xb6fe1c7b
   14001c319:	jns    0x14001c333
   14001c31b:	(bad)  
   14001c31c:	lahf   
   14001c31d:	push   0x1b
   14001c31f:	inc    DWORD PTR [rbp+0x74fe285a]
   14001c325:	rex.WRXB xor r15b,r14b
   14001c328:	xchg   ebp,eax
   14001c329:	gs sub eax,0x40263bff
   14001c32f:	(bad)  
   14001c330:	(bad)  
   14001c331:	adc    DWORD PTR [rsi+rdi*8+0x14],edx
   14001c335:	(bad)  
   14001c336:	je     0x14001c337
   14001c338:	sbb    DWORD PTR [rip+0x2d22fe86],ebx        # 0x16d24c1c4
   14001c33e:	popf   
   14001c33f:	(bad)  
   14001c340:	(bad)  
   14001c341:	rex.WRB (bad) 
   14001c343:	(bad)  
   14001c344:	cmp    bh,BYTE PTR [rbx-0x16]
   14001c347:	(bad)  
   14001c348:	cmp    ah,BYTE PTR [rbp-0x47c7000f]
   14001c34e:	repz (bad) 
   14001c350:	cmp    ah,BYTE PTR [rbp+0x7f3afef1]
   14001c356:	jmp    0x14001c357
   14001c358:	xor    eax,0x2efee155
   14001c35d:	cmp    cl,bl
   14001c35f:	(bad)  
   14001c360:	sub    eax,0x35ffc234
   14001c365:	xor    ebx,DWORD PTR [rdi+0x673245c9]
   14001c36b:	add    al,0x0
	...
   14001c3cd:	add    BYTE PTR [rax],al
   14001c3cf:	add    BYTE PTR [rax+0x6f1b1b56],cl
   14001c3d5:	rex.RB and al,0x7b
   14001c3d8:	adc    DWORD PTR [rbx+0x22],0x1a71abc7
   14001c3df:	(bad)  
   14001c3e0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001c3e1:	outs   dx,DWORD PTR ds:[rsi]
   14001c3e2:	sbb    bh,bh
   14001c3e4:	nop
   14001c3e5:	(bad)  
   14001c3e6:	and    edi,edi
   14001c3e8:	mov    DWORD PTR [rbp+0x27],ebx
   14001c3eb:	inc    DWORD PTR [rcx+rbx*2+0x1118ff32]
   14001c3f2:	rex.WX call QWORD PTR [rsp+r10*1]
   14001c3f6:	push   0xffffffffffffffff
   14001c3f8:	(bad)  
   14001c3f9:	sbb    al,0x80
   14001c3fb:	jmp    QWORD PTR [rax]
   14001c3fd:	sub    BYTE PTR [rsi-0x3eb6d201],dl
   14001c403:	(bad)  
   14001c404:	cmp    bh,BYTE PTR [rdx+rbp*8-0x1]
   14001c408:	cmp    DWORD PTR [rbp-0x3cc7000e],ebp
   14001c40e:	repz (bad) 
   14001c410:	cmp    ah,BYTE PTR [rdi+0x7a3afff1]
   14001c416:	(bad)  
   14001c417:	push   QWORD PTR [rbx]
   14001c419:	rex.WRB fdiv st(7),st
   14001c41c:	cs (bad) 
   14001c41e:	enter  0x2dff,0x34
   14001c422:	sar    bh,0x41
   14001c425:	xor    dh,BYTE PTR [rbp+0x78]
	...
   14001c498:	jl     0x14001c4e7
   14001c49a:	sbb    DWORD PTR [rdx],eax
   14001c49c:	js     0x14001c4e8
   14001c49e:	sbb    edx,DWORD PTR [rax-0x61]
   14001c4a1:	imul   ebx,DWORD PTR [rdx],0x1773ace7
   14001c4a7:	(bad)  
   14001c4a8:	pushf  
   14001c4a9:	push   0x72a9ff1b
   14001c4ae:	es (bad) 
   14001c4b0:	xor    esp,DWORD PTR [rcx]
   14001c4b2:	rex.X (bad) 
   14001c4b4:	adc    eax,0x15ff5b12
   14001c4b9:	sbb    DWORD PTR [rdx-0x2],edi
   14001c4bc:	sbb    eax,0x2bfe9024
   14001c4c1:	rex.R mov edx,0xe97d3aff
   14001c4c7:	(bad)  
   14001c4c8:	cmp    BYTE PTR [rax-0x32c9000e],bh
   14001c4ce:	icebp  
   14001c4cf:	(bad)  
   14001c4d0:	cmp    DWORD PTR [rax+0x7439fef1],ebp
   14001c4d6:	(bad)  
   14001c4d7:	push   QWORD PTR [rcx]
   14001c4d9:	rex.RB xlat BYTE PTR ds:[rbx]
   14001c4db:	(bad)  
   14001c4dc:	sub    eax,0x2cfec536
   14001c4e1:	xor    edi,DWORD PTR [rsi+0x623247fc]
   14001c4e7:	and    eax,0x0
	...
   14001c560:	or     DWORD PTR [rdi+0x14],0x18689f24
   14001c567:	shl    DWORD PTR [rdx-0x5500e88a],1
   14001c56d:	jno    0x14001c58a
   14001c56f:	(bad)  
   14001c570:	jp     0x14001c5c4
   14001c572:	xor    eax,0x4e1017fe
   14001c577:	call   QWORD PTR [rsi+rdx*1]
   14001c57a:	jb     0x14001c57a
   14001c57c:	sbb    esp,DWORD PTR [rax]
   14001c57e:	mov    bh,dh
   14001c580:	sub    DWORD PTR [rsi],edi
   14001c582:	mov    bl,0xff
   14001c584:	cmp    DWORD PTR [rbp-0x18],edi
   14001c587:	(bad)  
   14001c588:	cmp    ebp,eax
   14001c58a:	icebp  
   14001c58b:	(bad)  
   14001c58c:	cmp    ebx,ecx
   14001c58e:	out    dx,eax
   14001c58f:	(bad)  
   14001c590:	cmp    ah,BYTE PTR [rdi+0x6c38fef1]
   14001c596:	call   0x11140f69a
   14001c59b:	(bad)  
   14001c59c:	sub    eax,0x34fec234
   14001c5a1:	xor    esp,DWORD PTR [rax+0x653246c7]
   14001c5a7:	add    eax,DWORD PTR [rax]
	...
   14001c621:	add    BYTE PTR [rax],al
   14001c623:	add    BYTE PTR [rsi-0x56e5f0ae],al
   14001c629:	outs   dx,DWORD PTR ds:[rsi]
   14001c62a:	(bad)  
   14001c62b:	fidiv  WORD PTR [rdi-0x5000e787]
   14001c631:	ja     0x14001c65a
   14001c633:	jmp    QWORD PTR [rsi]
   14001c635:	sbb    DWORD PTR [rbp-0x1],eax
   14001c638:	adc    eax,0x18ff6613
   14001c63d:	sbb    eax,0x3826ff83
   14001c642:	stos   BYTE PTR es:[rdi],al
   14001c643:	(bad)  
   14001c644:	cmp    DWORD PTR [rbp-0x19],edi
   14001c647:	(bad)  
   14001c648:	cmp    edx,eax
   14001c64a:	out    dx,eax
   14001c64b:	(bad)  
   14001c64c:	cmp    eax,0x3affecdd
   14001c651:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001c652:	lock push QWORD PTR [rsi]
   14001c655:	(bad)  
   14001c656:	in     eax,0xff
   14001c658:	cs cmp cl,bl
   14001c65b:	jmp    FWORD PTR [rip+0x40ffc034]        # 0x181018695
   14001c661:	xor    dh,BYTE PTR [rdi+0x71]
	...
   14001c6e8:	mov    dl,BYTE PTR [rdi+rcx*1+0x34]
   14001c6ec:	mov    ch,0x78
   14001c6ee:	sbb    cl,dh
   14001c6f0:	mov    ah,0x79
   14001c6f2:	(bad)  
   14001c6f3:	(bad)  
   14001c6f4:	imul   eax,DWORD PTR [rdi+0x39],0x561117ff
   14001c6fb:	(bad)  
   14001c6fc:	(bad)  
   14001c6fd:	sbb    bh,BYTE PTR [rsi+rdi*8+0x23]
   14001c701:	xor    BYTE PTR [rcx-0x1b84c701],ah
   14001c707:	(bad)  
   14001c708:	cmp    eax,0x3effedd7
   14001c70d:	fucomip st,st(2)
   14001c70f:	(bad)  
   14001c710:	cmp    DWORD PTR [rdi+0x5534feef],ebx
   14001c716:	loopne 0x14001c717
   14001c718:	cs (bad) 
   14001c71a:	(bad)  
   14001c71b:	(bad)  
   14001c71c:	sub    eax,0x47f6bc33
   14001c721:	xor    ah,BYTE PTR [rcx+0x1d]
	...
   14001c7ac:	nop
   14001c7ad:	pop    rcx
   14001c7ae:	punpcklbw mm6,DWORD PTR [rbp-0x5b02e788]
   14001c7b5:	jo     0x14001c7e6
   14001c7b7:	jmp    QWORD PTR [rax]
   14001c7b9:	adc    al,0x4a
   14001c7bb:	(bad)  
   14001c7bc:	adc    eax,0x20fe7216
   14001c7c1:	sub    DWORD PTR [rdi-0x1f89c901],edx
   14001c7c7:	(bad)  
   14001c7c8:	cmp    eax,0x3effecdc
   14001c7cd:	fucomip st,st(2)
   14001c7cf:	(bad)  
   14001c7d0:	cmp    dl,BYTE PTR [rbp+0x4a32feee]
   14001c7d6:	fcos   
   14001c7d8:	sub    eax,0x39fec335
   14001c7dd:	xor    dl,BYTE PTR [rax+0x733241b1]
   14001c7e3:	add    al,BYTE PTR [rax]
	...
   14001c869:	add    BYTE PTR [rax],al
   14001c86b:	add    BYTE PTR [rcx-0x62fcf1a7],dl
   14001c871:	adc    ah,BYTE PTR fs:[rbx-0xd88953]
   14001c878:	push   rdx
   14001c879:	ss cmp al,0xff
   14001c87c:	adc    eax,0x1cff6313
   14001c881:	and    cl,BYTE PTR [rdi+rdi*8-0x2791cc]
   14001c888:	ds fucomp st(3)
   14001c88b:	(bad)  
   14001c88c:	ds fsubp st(2),st
   14001c88f:	(bad)  
   14001c890:	cmp    DWORD PTR [rbp+0x3f30ffec],eax
   14001c896:	sar    bh,1
   14001c898:	sub    eax,0x42fec034
   14001c89d:	xor    ch,BYTE PTR [rdi+0x50]
	...
   14001c930:	mov    DWORD PTR [rdi+rcx*1+0x14],edx
   14001c934:	popf   
   14001c935:	push   0x6a9be21b
   14001c93a:	xor    edi,esi
   14001c93c:	sbb    DWORD PTR [rdx],edx
   14001c93e:	push   rbx
   14001c93f:	(bad)  
   14001c940:	sbb    BYTE PTR [rip+0x6131ff82],bl        # 0x1a133c8c8
   14001c946:	int    0xfe
   14001c948:	ds fucomp st(3)
   14001c94b:	(bad)  
   14001c94c:	cmp    eax,0x37feebd9
   14001c951:	outs   dx,DWORD PTR ds:[rsi]
   14001c952:	out    0xfe,eax
   14001c954:	cs cmp al,cl
   14001c957:	push   QWORD PTR [rcx]
   14001c959:	xor    ebp,DWORD PTR [rdx+0x653246da]
   14001c95f:	or     DWORD PTR [rax],eax
	...
   14001c9f1:	add    BYTE PTR [rax],al
   14001c9f3:	add    BYTE PTR [rcx-0x48adefac],cl
   14001c9f9:	jle    0x14001ca25
   14001c9fb:	std    
   14001c9fc:	cmp    esp,DWORD PTR [rdi]
   14001c9fe:	rex.X (bad) 
   14001ca00:	(bad)  
   14001ca01:	(bad)  
   14001ca02:	je     0x14001ca03
   14001ca04:	sub    al,0x4e
   14001ca06:	mov    ebp,0xebda3efe
   14001ca0b:	(bad)  
   14001ca0c:	cmp    eax,0x34feeccc
   14001ca11:	pop    rax
   14001ca12:	fdivp  st(6),st
   14001ca14:	sub    eax,0x41ffc234
   14001ca19:	xor    dh,BYTE PTR [rsi+0x6f]
	...
   14001cab4:	lea    ebx,[rax+0x13]
   14001cab7:	add    al,0x9e
   14001cab9:	sbb    esi,DWORD PTR [ebx-0xc9a379]
   14001cac0:	(bad)  
   14001cac1:	adc    al,0x62
   14001cac3:	jmp    QWORD PTR [rip+0x3dffa939]        # 0x17e017402
   14001cac9:	shr    ah,1
   14001cacb:	(bad)  
   14001cacc:	cmp    esi,DWORD PTR [rcx+0x4330ffec]
   14001cad2:	sar    edi,1
   14001cad4:	(bad)  
   14001cad5:	xor    esi,DWORD PTR [rcx+0x653246e4]
   14001cadb:	or     eax,0x0
	...
   14001cb78:	nop
   14001cb79:	pop    rcx
   14001cb7a:	adc    ebp,DWORD PTR [rcx+rax*8]
   14001cb7d:	test   DWORD PTR [rip+0x4e1d2bf5],ebp        # 0x18e1ef778
   14001cb83:	call   FWORD PTR [rip+0x3afe9126]        # 0x17b005caf
   14001cb89:	test   al,0xea
   14001cb8b:	push   QWORD PTR [rdi]
   14001cb8d:	jns    0x14001cb75
   14001cb8f:	(bad)  
   14001cb90:	sub    eax,0x42fec236
   14001cb95:	xor    dh,BYTE PTR [rdx+0x64]
	...
   14001cc38:	sahf   
   14001cc39:	sbb    eax,DWORD PTR gs:[rcx]
   14001cc3c:	test   al,0x6d
   14001cc3e:	and    BYTE PTR [rsi+0x78],bh
   14001cc41:	push   rcx
   14001cc42:	cmp    edi,edi
   14001cc44:	sbb    BYTE PTR [rbx],bl
   14001cc46:	jp     0x14001cc46
   14001cc48:	xor    BYTE PTR [rbx-0x33],dl
   14001cc4b:	jmp    FWORD PTR [rdi]
   14001cc4d:	rex.X retf 0x36fe
   14001cc51:	xor    dl,BYTE PTR [rdi+0x733242be]
   14001cc57:	(bad)  
	...
   14001ccfc:	xchg   edx,eax
   14001ccfd:	pop    rbp
   14001ccfe:	(bad)  
   14001ccff:	(bad)  
   14001cd00:	lods   al,BYTE PTR ds:[rsi]
   14001cd01:	jae    0x14001cd2b
   14001cd03:	mov    dh,0x34
   14001cd05:	(bad)  
   14001cd06:	pop    rbx
   14001cd07:	jmp    QWORD PTR [rbx]
   14001cd09:	sub    DWORD PTR [rax-0x5bd0d201],esp
   14001cd0f:	fdivr  QWORD PTR [rsi]
   14001cd11:	xor    bh,BYTE PTR [rcx+0x1f]
	...
   14001cdc0:	jl     0x14001ce11
   14001cdc2:	(bad)  
   14001cdc3:	or     dh,BYTE PTR [rsi+0x4e]
   14001cdc6:	xor    al,0x80
   14001cdc8:	ss sub al,0x73
   14001cdcb:	xchg   esi,eax
   14001cdcc:	cmp    DWORD PTR [rip+0x186f],ebp        # 0x14001e641
	...
   14001cf86:	add    BYTE PTR [rax],al
   14001cf88:	(bad)  
   14001cf89:	(bad)  
   14001cf8a:	(bad)  
   14001cf8b:	(bad)  
   14001cf8c:	(bad)  
   14001cf8d:	inc    DWORD PTR [rax]
   14001cf8f:	add    bh,bh
   14001cf91:	(bad)  
   14001cf92:	(bad)  
   14001cf93:	(bad)  
   14001cf94:	(bad)  
   14001cf95:	inc    DWORD PTR [rax]
   14001cf97:	add    bh,bh
   14001cf99:	push   rax
   14001cf9b:	(bad)  
   14001cf9c:	(bad)  
   14001cf9d:	inc    DWORD PTR [rax]
   14001cf9f:	add    bh,bh
   14001cfa1:	jmp    rax
   14001cfa3:	(bad)  
   14001cfa4:	(bad)  
   14001cfa5:	inc    DWORD PTR [rax]
   14001cfa7:	add    bh,bh
   14001cfa9:	jmp    rax
   14001cfab:	(bad)  
   14001cfac:	(bad)  
   14001cfad:	inc    DWORD PTR [rax]
   14001cfaf:	add    bh,bh
   14001cfb1:	inc    eax
   14001cfb3:	ud0    edi,edi
   14001cfb6:	add    BYTE PTR [rax],al
   14001cfb8:	(bad)  
   14001cfb9:	inc    eax
   14001cfbb:	(bad)  
   14001cfbc:	(bad)  
   14001cfbd:	inc    DWORD PTR [rax]
   14001cfbf:	add    bh,bh
   14001cfc1:	inc    DWORD PTR [rax+0xffff03]
   14001cfc7:	add    bh,bh
   14001cfc9:	inc    DWORD PTR [rax+0xffff01]
   14001cfcf:	add    bh,bh
   14001cfd1:	inc    DWORD PTR [rax]
   14001cfd3:	add    bh,bh
   14001cfd5:	cld    
   14001cfd6:	add    BYTE PTR [rax],al
   14001cfd8:	(bad)  
   14001cfd9:	inc    DWORD PTR [rax]
   14001cfdb:	add    BYTE PTR [rdi-0x8],bh
   14001cfde:	add    BYTE PTR [rax],al
   14001cfe0:	(bad)  
   14001cfe1:	inc    BYTE PTR [rax]
   14001cfe3:	add    BYTE PTR [rdi-0x10],bh
   14001cfe6:	add    BYTE PTR [rax],al
   14001cfe8:	(bad)  
   14001cfe9:	inc    BYTE PTR [rax]
   14001cfeb:	add    BYTE PTR [rdi],bh
   14001cfed:	loopne 0x14001cfef
   14001cfef:	add    bh,bh
   14001cff1:	mov    BYTE PTR [rax],al
   14001cff3:	add    BYTE PTR [rdi],cl
   14001cff5:	rol    DWORD PTR [rax],0x0
   14001cff8:	inc    DWORD PTR [rax]
   14001cffa:	add    BYTE PTR [rax],al
   14001cffc:	(bad)  
   14001cffd:	add    DWORD PTR [rax],eax
   14001cfff:	add    ah,bh
   14001d001:	add    BYTE PTR [rax],al
   14001d003:	add    BYTE PTR [rax],al
   14001d005:	add    DWORD PTR [rax],eax
   14001d007:	add    al,bh
   14001d009:	add    BYTE PTR [rax],al
   14001d00b:	add    BYTE PTR [rax],al
   14001d00d:	add    eax,DWORD PTR [rax]
   14001d00f:	add    al,dh
   14001d011:	add    BYTE PTR [rax],al
   14001d013:	add    BYTE PTR [rax],al
   14001d015:	add    eax,DWORD PTR [rax]
   14001d017:	add    al,al
   14001d019:	add    BYTE PTR [rax],al
   14001d01b:	add    BYTE PTR [rax],al
   14001d01d:	(bad)  
   14001d01e:	add    BYTE PTR [rax],al
   14001d020:	add    BYTE PTR [rax],0x0
   14001d023:	add    BYTE PTR [rax],al
   14001d025:	(bad)  
   14001d026:	add    BYTE PTR [rax],al
   14001d028:	add    BYTE PTR [rax],al
   14001d02a:	add    BYTE PTR [rax],al
   14001d02c:	add    BYTE PTR [rdi],al
   14001d02e:	add    BYTE PTR [rax],al
   14001d030:	add    BYTE PTR [rax],al
   14001d032:	add    BYTE PTR [rax],al
   14001d034:	add    BYTE PTR [rdi],cl
   14001d036:	add    BYTE PTR [rax],al
   14001d038:	add    BYTE PTR [rax],al
   14001d03a:	add    BYTE PTR [rax],al
   14001d03c:	add    BYTE PTR [rdi],cl
   14001d03e:	add    BYTE PTR [rax],al
   14001d040:	loopne 0x14001d042
   14001d042:	add    BYTE PTR [rax],al
   14001d044:	add    BYTE PTR [rdi],cl
   14001d046:	add    BYTE PTR [rax],al
   14001d048:	clc    
   14001d049:	add    BYTE PTR [rax],al
   14001d04b:	add    BYTE PTR [rax],al
   14001d04d:	(bad)  
   14001d04e:	add    BYTE PTR [rax],al
   14001d050:	inc    DWORD PTR [rax]
   14001d052:	add    BYTE PTR [rax],al
   14001d054:	add    BYTE PTR [rdi],bl
   14001d056:	add    BYTE PTR [rax],al
   14001d058:	inc    eax
   14001d05a:	add    BYTE PTR [rax],al
   14001d05c:	add    BYTE PTR [rdi],bl
   14001d05e:	add    BYTE PTR [rax],al
   14001d060:	(bad)  
   14001d061:	clc    
   14001d062:	add    BYTE PTR [rax],al
   14001d064:	add    BYTE PTR [rdi],bh
   14001d066:	add    BYTE PTR [rax],al
   14001d068:	(bad)  
   14001d069:	cld    
   14001d06a:	add    BYTE PTR [rax],al
   14001d06c:	add    BYTE PTR [rdi],bh
   14001d06e:	add    BYTE PTR [rax],al
   14001d070:	(bad)  
   14001d071:	inc    BYTE PTR [rax]
   14001d073:	add    BYTE PTR [rax],al
   14001d075:	jg     0x14001d077
   14001d077:	add    bh,bh
   14001d079:	inc    BYTE PTR [rax]
   14001d07b:	add    BYTE PTR [rax],al
   14001d07d:	jg     0x14001d07f
   14001d07f:	add    bh,bh
   14001d081:	inc    DWORD PTR [rax]
   14001d083:	add    BYTE PTR [rax],al
   14001d085:	jg     0x14001d087
   14001d087:	add    bh,bh
   14001d089:	inc    eax
   14001d08b:	add    BYTE PTR [rax],al
   14001d08d:	inc    DWORD PTR [rax]
   14001d08f:	add    bh,bh
   14001d091:	push   rax
   14001d093:	add    BYTE PTR [rax],al
   14001d095:	inc    DWORD PTR [rax]
   14001d097:	add    bh,bh
   14001d099:	(bad)  
   14001d09a:	cld    
   14001d09b:	add    BYTE PTR [rax],al
   14001d09d:	inc    DWORD PTR [rax]
   14001d09f:	add    bh,bh
   14001d0a1:	(bad)  
   14001d0a2:	inc    BYTE PTR [rax]
   14001d0a4:	add    edi,edi
   14001d0a6:	add    BYTE PTR [rax],al
   14001d0a8:	(bad)  
   14001d0a9:	(bad)  
   14001d0aa:	inc    DWORD PTR [rax]
   14001d0ac:	add    edi,edi
   14001d0ae:	add    BYTE PTR [rax],al
   14001d0b0:	(bad)  
   14001d0b1:	(bad)  
   14001d0b2:	inc    DWORD PTR [rax+0xff01]
   14001d0b8:	(bad)  
   14001d0b9:	(bad)  
   14001d0ba:	inc    DWORD PTR [rax+0xff03]
   14001d0c0:	(bad)  
   14001d0c1:	(bad)  
   14001d0c2:	inc    eax
   14001d0c4:	add    edi,edi
   14001d0c6:	add    BYTE PTR [rax],al
   14001d0c8:	(bad)  
   14001d0c9:	(bad)  
   14001d0ca:	jmp    rax
   14001d0cc:	(bad)  
   14001d0cd:	inc    DWORD PTR [rax]
   14001d0cf:	add    bh,bh
   14001d0d1:	(bad)  
   14001d0d2:	jmp    rax
   14001d0d4:	(bad)  
   14001d0d5:	inc    DWORD PTR [rax]
   14001d0d7:	add    bh,bh
   14001d0d9:	(bad)  
   14001d0da:	push   rax
   14001d0dc:	ud0    eax,DWORD PTR [rax]
   14001d0df:	add    bh,bh
   14001d0e1:	(bad)  
   14001d0e2:	push   rax
   14001d0e4:	ud0    eax,DWORD PTR [rax]
   14001d0e7:	add    bh,bh
   14001d0e9:	(bad)  
   14001d0ea:	(bad)  
   14001d0eb:	clc    
   14001d0ec:	(bad)  
   14001d0ed:	inc    DWORD PTR [rax]
   14001d0ef:	add    bh,bh
   14001d0f1:	(bad)  
   14001d0f2:	(bad)  
   14001d0f3:	cld    
   14001d0f4:	(bad)  
   14001d0f5:	inc    DWORD PTR [rax]
   14001d0f7:	add    bh,bh
   14001d0f9:	(bad)  
   14001d0fa:	(bad)  
   14001d0fb:	(bad)  
   14001d0fc:	(bad)  
   14001d0fd:	inc    DWORD PTR [rax]
   14001d0ff:	add    bh,bh
   14001d101:	(bad)  
   14001d102:	(bad)  
   14001d103:	(bad)  
   14001d104:	(bad)  
   14001d105:	inc    DWORD PTR [rax]
   14001d107:	add    BYTE PTR [rax],ch
   14001d109:	add    BYTE PTR [rax],al
   14001d10b:	add    BYTE PTR [rax],ah
   14001d10d:	add    BYTE PTR [rax],al
   14001d10f:	add    BYTE PTR [rax+0x0],al
   14001d112:	add    BYTE PTR [rax],al
   14001d114:	add    DWORD PTR [rax],eax
   14001d116:	and    BYTE PTR [rax],al
   14001d118:	add    BYTE PTR [rax],al
   14001d11a:	add    BYTE PTR [rax],al
   14001d11c:	adc    BYTE PTR [rax],0x0
	...
   14001d1e3:	add    BYTE PTR [rsi+rdi*2-0x79],cl
   14001d1e7:	(bad)  
   14001d1e8:	lea    rsp,[rbx+0x4b5b5754]
   14001d1ef:	or     al,0x0
	...
   14001d261:	add    BYTE PTR [rax],al
   14001d263:	add    BYTE PTR [rcx-0x77],cl
   14001d266:	popf   
   14001d267:	xchg   ecx,eax
   14001d268:	cmp    edi,DWORD PTR [rdx-0x53c0000c]
   14001d26e:	fsubr  st(1),st
   14001d270:	push   rdx
   14001d271:	ins    BYTE PTR es:[rdi],dx
   14001d272:	imul   edx,DWORD PTR [rbx+0x57],0x59
   14001d276:	rex.WRX add r8b,BYTE PTR [rax]
	...
   14001d2dd:	add    BYTE PTR [rax],al
   14001d2df:	add    BYTE PTR [rsi+0x5e],dl
   14001d2e2:	push   rbx
   14001d2e3:	adc    bh,BYTE PTR [rip+0x3befe9b3]        # 0x17bf1bc9c
   14001d2e9:	mov    ecx,0xb63bfff4
   14001d2ee:	repz (bad) 
   14001d2f0:	cmp    al,0xac
   14001d2f2:	icebp  
   14001d2f3:	std    
   14001d2f4:	rex.WR jo 0x14001d283
   14001d2f7:	xchg   BYTE PTR [rbp+0x54],dl
   14001d2fa:	push   rsi
   14001d2fb:	add    al,0x0
	...
   14001d35d:	add    BYTE PTR [rax],al
   14001d35f:	add    BYTE PTR [rbp+0x72],cl
   14001d362:	xchg   DWORD PTR [rdx+0x3c],esi
   14001d365:	stos   DWORD PTR es:[rdi],eax
   14001d366:	icebp  
   14001d367:	(bad)  
   14001d368:	cmp    al,0xaa
   14001d36a:	icebp  
   14001d36b:	(bad)  
   14001d36c:	cmp    al,0xa4
   14001d36e:	lock (bad) 
   14001d370:	cmp    ebx,DWORD PTR [rbx-0x6ec40011]
   14001d376:	out    dx,al
   14001d377:	dec    DWORD PTR [rbx+0x66]
   14001d37a:	xchg   esp,eax
   14001d37b:	mov    ss,WORD PTR [rsi+0x4c]
   14001d37e:	push   rcx
   14001d37f:	add    eax,DWORD PTR [rax]
	...
   14001d3d9:	add    BYTE PTR [rax],al
   14001d3db:	add    BYTE PTR [rbp+0x42],dl
   14001d3de:	rex.R add eax,0xd9ce773f
   14001d3e4:	cmp    ecx,DWORD PTR [rbp-0x70c40013]
   14001d3ea:	in     eax,dx
   14001d3eb:	(bad)  
   14001d3ec:	cmp    ecx,DWORD PTR [rbp-0x77c40013]
   14001d3f2:	in     eax,dx
   14001d3f3:	(bad)  
   14001d3f4:	cmp    eax,DWORD PTR [rsp+rbp*8-0x1481c301]
   14001d3fb:	dec    BYTE PTR [rsi+0x59]
   14001d3fe:	(bad)  
   14001d3ff:	jne    0x14001d457
   14001d401:	rex.WB
   14001d402:	rex.WRXB add QWORD PTR [r8],r8
	...
   14001d459:	add    BYTE PTR [rax],al
   14001d45b:	add    BYTE PTR [rdi+0x39],al
   14001d45e:	pop    rcx
   14001d45f:	push   rcx
   14001d460:	xor    DWORD PTR [rbp-0x32],edx
   14001d463:	push   QWORD PTR [rsi]
   14001d465:	data16 fdivp st(7),st
   14001d468:	cmp    BYTE PTR [rdi-0x1a],ch
   14001d46b:	(bad)  
   14001d46c:	cmp    DWORD PTR [rbx-0x17],esi
   14001d46f:	(bad)  
   14001d470:	cmp    dh,BYTE PTR [rcx+rbp*8-0x1]
   14001d474:	cmp    dh,BYTE PTR [rbp-0x16]
   14001d477:	(bad)  
   14001d478:	cmp    esi,DWORD PTR [rdi-0x15]
   14001d47b:	(bad)  
   14001d47c:	cmp    al,0x77
   14001d47e:	jmp    0x1a954277e
   14001d483:	push   rax
	...
   14001d4a8:	push   rbp
   14001d4a9:	xor    dh,BYTE PTR [rbx]
   14001d4ab:	add    DWORD PTR [rdi+0x32],ecx
   14001d4ae:	rex.RX sub eax,0x0
	...
   14001d4d8:	sub    r13,QWORD PTR [r11]
   14001d4db:	add    eax,0xcc7b292c
   14001d4e0:	and    eax,0x2affa533
   14001d4e5:	rex.X mov dil,0xff
   14001d4e8:	(bad)  
   14001d4e9:	rex.WRXB (bad) 
   14001d4eb:	push   QWORD PTR [rbx]
   14001d4ed:	pop    rdx
   14001d4ee:	(bad)  
   14001d4ef:	push   QWORD PTR [rsi]
   14001d4f1:	movsxd ebx,edi
   14001d4f3:	push   QWORD PTR [rdi]
   14001d4f5:	push   0xffffffffffffffe6
   14001d4f7:	(bad)  
   14001d4f8:	cmp    BYTE PTR [rcx-0x17],dh
   14001d4fb:	(bad)  
   14001d4fc:	cmp    bh,BYTE PTR [rcx-0x15]
   14001d4ff:	(bad)  
   14001d500:	ds jp  0x14001d4e4
   14001d503:	lock push rbp
   14001d505:	push   rax
   14001d506:	pop    rsp
   14001d507:	xor    eax,DWORD PTR [rax]
	...
   14001d521:	add    BYTE PTR [rax],al
   14001d523:	add    BYTE PTR [rdx+rsi*1+0x36],dl
   14001d527:	add    DWORD PTR [rbx+0x32],ecx
   14001d52a:	push   rdi
   14001d52b:	pop    rax
   14001d52c:	xor    eax,DWORD PTR ds:[rdx+0x88]
	...
   14001d553:	add    BYTE PTR [rdi+0x29],cl
   14001d556:	sbb    al,0x1
   14001d558:	cmp    ah,BYTE PTR [rip+0x1d197441]        # 0x15d1b499f
   14001d55e:	test   bh,bh
   14001d560:	sbb    eax,0x22ff8f23
   14001d565:	sub    al,0x9b
   14001d567:	jmp    QWORD PTR [rdi]
   14001d569:	cmp    BYTE PTR [rbx-0x45bbd401],ch
   14001d56f:	jmp    FWORD PTR [rdi]
   14001d571:	push   rax
   14001d572:	leave  
   14001d573:	push   QWORD PTR [rbx+rbx*2]
   14001d576:	xlat   BYTE PTR ds:[rbx]
   14001d577:	push   QWORD PTR [rdi]
   14001d579:	addr32 in al,0xff
   14001d57c:	cmp    BYTE PTR [rcx-0x17],dh
   14001d57f:	(bad)  
   14001d580:	cmp    edi,DWORD PTR [rbx-0x15]
   14001d583:	inc    DWORD PTR [rax+0x7a]
   14001d586:	(bad)  
   14001d587:	jrcxz  0x14001d5df
   14001d589:	rex.WRXB push r10
   14001d58b:	(bad)  
	...
   14001d5a0:	push   rsp
   14001d5a1:	xor    bh,BYTE PTR [rax]
   14001d5a3:	add    al,BYTE PTR [rdi+0x33]
   14001d5a6:	data16 jo 0x14001d5d6
   14001d5a9:	xor    al,0xbd
   14001d5ab:	stc    
   14001d5ac:	rex.XB xor bpl,BYTE PTR [r13+0x26]
	...
   14001d5c4:	or     DWORD PTR [rbp+0x13],0x3
   14001d5c8:	xchg   esp,eax
   14001d5c9:	pop    rbp
   14001d5ca:	and    DWORD PTR [rcx-0x6f],ebx
   14001d5cd:	pop    rbx
   14001d5ce:	and    BYTE PTR [rdx+0x7c],bl
   14001d5d1:	rex.W adc BYTE PTR [rdx*2+0x16762330],spl
   14001d5d9:	adc    al,0x64
   14001d5db:	cli    
   14001d5dc:	adc    al,0x18
   14001d5de:	ja     0x14001d5df
   14001d5e0:	(bad)  
   14001d5e1:	sbb    al,0x81
   14001d5e3:	call   FWORD PTR [rbx]
   14001d5e5:	and    DWORD PTR [rdi+rdi*8-0x67d5df],ecx
   14001d5ec:	es xor al,0xa7
   14001d5ef:	jmp    FWORD PTR [rdx]
   14001d5f1:	mov    r15b,0xff
   14001d5f4:	(bad)  
   14001d5f5:	rex.WRX enter 0x35ff,0x5c
   14001d5fa:	fcos   
   14001d5fc:	(bad)  
   14001d5fd:	push   0xffffffffffffffe6
   14001d5ff:	(bad)  
   14001d600:	cmp    DWORD PTR [rdi-0x16],esi
   14001d603:	(bad)  
   14001d604:	cmp    al,0x82
   14001d606:	in     al,dx
   14001d607:	(bad)  
   14001d608:	(bad)  
   14001d609:	adc    ah,0xe2
   14001d60c:	push   rbp
   14001d60d:	push   rbx
   14001d60e:	pop    rcx
   14001d60f:	cmp    DWORD PTR [rax+0x48],ebx
   14001d612:	cmp    eax,0x1
   14001d617:	add    BYTE PTR [rax],al
   14001d619:	add    BYTE PTR [rax],al
   14001d61b:	add    BYTE PTR [rsi+0x34],dl
   14001d61e:	xor    ecx,DWORD PTR [rdx]
   14001d620:	rex.XB xor eax,0x342d8e79
   14001d626:	ret    0x36fe
   14001d629:	xor    ebx,DWORD PTR [rcx+0x683244bb]
   14001d62f:	add    DWORD PTR [rax],eax
	...
   14001d63d:	add    BYTE PTR [rax],al
   14001d63f:	add    BYTE PTR [rbp-0x51edecb0],al
   14001d645:	je     0x14001d673
   14001d647:	movabs ds:0xff4b8fc8fe4792cf,al
   14001d650:	mov    ecx,0xa4ff4483
   14001d655:	outs   dx,DWORD PTR ds:[rsi]
   14001d656:	sub    edi,edi
   14001d658:	xor    al,0x21
   14001d65a:	rex.RX call QWORD PTR [rip+0x14ff6112]        # 0x155013773
   14001d661:	(bad)  
   14001d662:	jne    0x14001d663
   14001d664:	(bad)  
   14001d665:	sbb    al,0x80
   14001d667:	call   FWORD PTR [rbx]
   14001d669:	and    DWORD PTR [rdi+rdi*8-0x67d5df],ecx
   14001d670:	es xor eax,0x432bffa8
   14001d676:	mov    edx,0xce5231ff
   14001d67b:	push   QWORD PTR [rsi]
   14001d67d:	fs loope 0x14001d67f
   14001d680:	cmp    BYTE PTR [rbx-0x16],dh
   14001d683:	(bad)  
   14001d684:	cmp    al,0x80
   14001d686:	in     al,dx
   14001d687:	(bad)  
   14001d688:	cmp    ecx,DWORD PTR [rcx-0x75c30013]
   14001d68e:	jmp    0xd066208b
   14001d693:	sahf   
   14001d694:	rex.WRX
   14001d695:	rex.WRB
   14001d696:	gs pop rbp
   14001d698:	rex.WX
   14001d699:	rex.X ins BYTE PTR es:[rdi],dx
   14001d69b:	jno    0x14001d6d5
   14001d69d:	cmp    eax,0x372ed4ad
   14001d6a2:	(bad)  
   14001d6a3:	jmp    FWORD PTR [rip+0x3effc034]        # 0x17f0196dd
   14001d6a9:	xor    bh,BYTE PTR [rdi+rdx*2+0x0]
	...
   14001d6b5:	add    BYTE PTR [rax],al
   14001d6b7:	add    BYTE PTR [rbx-0x70feecb2],al
   14001d6bd:	pop    rcx
   14001d6be:	sbb    bh,BYTE PTR [rbx]
   14001d6c0:	(bad)  
   14001d6c1:	mov    WORD PTR [rbx],?
   14001d6c3:	fcmovbe st,st(3)
   14001d6c5:	xchg   edi,eax
   14001d6c6:	rex.X call rcx
   14001d6c9:	xchg   esp,eax
   14001d6ca:	rex.XB dec r13d
   14001d6cd:	xchg   ecx,eax
   14001d6ce:	inc    r12
   14001d6d1:	mov    WORD PTR [rbp-0x1],cs
   14001d6d4:	mov    bh,0x83
   14001d6d6:	rex.WXB call FWORD PTR [r10+0x29ff2c68]
   14001d6dd:	sbb    al,BYTE PTR [rdi-0x1]
   14001d6e0:	adc    eax,0x14ff6012
   14001d6e5:	sbb    BYTE PTR [rsi-0x1],dh
   14001d6e8:	sbb    BYTE PTR [rdx+rax*4],bl
   14001d6eb:	call   FWORD PTR [rdx+riz*1]
   14001d6ee:	mov    ?,edi
   14001d6f0:	and    ebp,DWORD PTR [rsp+rbx*4]
   14001d6f3:	jmp    FWORD PTR [rax]
   14001d6f5:	cmp    ch,BYTE PTR [rdi-0x3bb5d201]
   14001d6fb:	push   QWORD PTR [rip+0x38ffda5d]        # 0x17901b15e
   14001d701:	jo     0x14001d6ec
   14001d703:	(bad)  
   14001d704:	cmp    al,0x7f
   14001d706:	in     al,dx
   14001d707:	(bad)  
   14001d708:	cmp    ecx,DWORD PTR [rcx-0x74c30013]
   14001d70e:	in     eax,dx
   14001d70f:	(bad)  
   14001d710:	cmp    eax,DWORD PTR [rbx+0x7239ffec]
   14001d716:	jmp    0x121560c1a
   14001d71b:	jmp    FWORD PTR [rdi]
   14001d71d:	cmp    eax,0x352dffce
   14001d722:	ret    
   14001d723:	jmp    FWORD PTR [rdi]
   14001d725:	xor    esi,DWORD PTR [rbx+0x643245ea]
   14001d72b:	or     DWORD PTR [rax],eax
   14001d72d:	add    BYTE PTR [rax],al
   14001d72f:	add    BYTE PTR [rax],al
   14001d731:	add    BYTE PTR [rax],al
   14001d733:	add    BYTE PTR [rsi-0x5bf8eaaf],al
   14001d739:	outs   dx,BYTE PTR ds:[rsi]
   14001d73a:	sub    BYTE PTR [rsi-0x2a],bh
   14001d73d:	popf   
   14001d73e:	rex.RXB stc 
   14001d740:	xlat   BYTE PTR ds:[rbx]
   14001d741:	popf   
   14001d742:	rex.RX call rbp
   14001d745:	(bad)  
   14001d746:	rex.XB call r10
   14001d749:	xchg   esi,eax
   14001d74a:	call   r8
   14001d74d:	xchg   ebx,eax
   14001d74e:	rex.RB inc r15d
   14001d751:	mov    cs,WORD PTR [rdi+rdi*8-0x42]
   14001d755:	mov    BYTE PTR [rdi-0x1],cl
   14001d758:	mov    dl,0x7f
   14001d75a:	rex.WRB inc QWORD PTR [r14+0x1eff2e5a]
   14001d761:	adc    ecx,DWORD PTR [rdx-0x1]
   14001d764:	adc    eax,0x14ff6513
   14001d769:	sbb    DWORD PTR [rcx-0x1],edi
   14001d76c:	sbb    DWORD PTR [rip+0x261eff86],ebx        # 0x16620d6f8
   14001d772:	xchg   ebx,eax
   14001d773:	jmp    QWORD PTR [rip+0x2bffa432]        # 0x16c017bab
   14001d779:	rex.XB mov r10d,0xd45733ff
   14001d77f:	push   QWORD PTR [rdi]
   14001d781:	ins    DWORD PTR es:[rdi],dx
   14001d782:	out    0xff,eax
   14001d784:	cmp    edi,DWORD PTR [rdi-0x14]
   14001d787:	(bad)  
   14001d788:	cmp    ecx,DWORD PTR [rdx-0x75c30013]
   14001d78e:	in     eax,dx
   14001d78f:	(bad)  
   14001d790:	cmp    al,BYTE PTR [rcx+0x6c39ffeb]
   14001d796:	jmp    0x11d4e0b9a
   14001d79b:	jmp    FWORD PTR [rsi]
   14001d79d:	cmp    ecx,ecx
   14001d79f:	jmp    FWORD PTR [rip+0x3bffc134]        # 0x17c0198d9
   14001d7a5:	xor    cl,BYTE PTR [rax+0x92]
   14001d7ab:	add    BYTE PTR [rax],al
   14001d7ad:	add    BYTE PTR [rax],al
   14001d7af:	add    BYTE PTR [rax-0x3fdbe2a5],dl
   14001d7b5:	mov    DWORD PTR [rip+0x4da0d9c1],edi        # 0x18da2b17c
   14001d7bb:	(bad)  
   14001d7bc:	fcomp  DWORD PTR [rdi-0x612700b5]
   14001d7c2:	rex.W call rdi
   14001d7c5:	popf   
   14001d7c6:	rex.RX call rsp
   14001d7c9:	cwde   
   14001d7ca:	rex.XB call r9
   14001d7cd:	xchg   esp,eax
   14001d7ce:	rex.X dec edx
   14001d7d1:	nop
   14001d7d2:	rex.WX inc rax
   14001d7d5:	mov    DWORD PTR [rsi-0x1],ecx
   14001d7d8:	mov    bh,0x83
   14001d7da:	push   rdx
   14001d7db:	jmp    FWORD PTR [rdx+0x65ff4b7a]
   14001d7e1:	rex.X xor eax,0x4f1119ff
   14001d7e7:	call   QWORD PTR [rdx*1+0x1b16ff6d]
   14001d7ee:	jge    0x14001d7ef
   14001d7f0:	sbb    esp,DWORD PTR [rax]
   14001d7f2:	mov    edi,edi
   14001d7f4:	and    ch,BYTE PTR [rbx+rbx*4]
   14001d7f7:	jmp    FWORD PTR [rcx]
   14001d7f9:	cmp    al,0xb2
   14001d7fb:	push   QWORD PTR [rcx]
   14001d7fd:	push   rdx
   14001d7fe:	int    0xff
   14001d800:	(bad)  
   14001d801:	imul   esp,esi,0xffffffff
   14001d804:	cmp    edi,DWORD PTR [rdi-0x14]
   14001d807:	(bad)  
   14001d808:	cmp    al,0x8b
   14001d80a:	in     eax,dx
   14001d80b:	(bad)  
   14001d80c:	cmp    al,0x8b
   14001d80e:	in     eax,dx
   14001d80f:	(bad)  
   14001d810:	cmp    bh,BYTE PTR [rsi-0x15]
   14001d813:	push   QWORD PTR [rdi]
   14001d815:	fs out 0xff,eax
   14001d818:	xor    DWORD PTR [rbp-0x2a],eax
   14001d81b:	jmp    FWORD PTR [rip+0x2cffc636]        # 0x16d019e57
   14001d821:	xor    al,0xbe
   14001d823:	inc    BYTE PTR [rdx+0x31]
   14001d826:	jo     0x14001d85b
	...
   14001d830:	mov    ebx,0xd3793d85
   14001d835:	pushf  
   14001d836:	rex.WRXB jmp 0x13f537a15
   14001d83c:	fldenv [rcx-0x602700b1]
   14001d842:	rex.WXB (bad) 
   14001d844:	fcomp  DWORD PTR [rsi-0x642900b8]
   14001d84a:	rex.RB call r10
   14001d84d:	xchg   esi,eax
   14001d84e:	rex.X dec ebp
   14001d851:	xchg   ecx,eax
   14001d852:	inc    rcx
   14001d855:	mov    cl,BYTE PTR [rsi-0x1]
   14001d858:	mov    bh,0x83
   14001d85a:	push   rcx
   14001d85b:	jmp    FWORD PTR [rbx-0x6300aa83]
   14001d861:	outs   dx,DWORD PTR ds:[rsi]
   14001d862:	rex.B (bad) 
   14001d864:	cmp    al,0x27
   14001d866:	notrack call QWORD PTR [rdi]
   14001d869:	adc    DWORD PTR [rax-0x1],ebx
   14001d86c:	adc    al,0x17
   14001d86e:	jne    0x14001d86f
   14001d870:	sbb    BYTE PTR [rip+0x261fff84],bl        # 0x16621d7fa
   14001d876:	xchg   esp,eax
   14001d877:	jmp    QWORD PTR [rdi]
   14001d879:	ss stos BYTE PTR es:[rdi],al
   14001d87b:	jmp    FWORD PTR [rdi]
   14001d87d:	rex.WR (bad) 
   14001d87f:	push   QWORD PTR [rdi]
   14001d881:	push   0xffffffff803bffe4
   14001d886:	in     al,dx
   14001d887:	(bad)  
   14001d888:	cmp    ecx,DWORD PTR [rbp-0x73c40012]
   14001d88e:	in     eax,dx
   14001d88f:	(bad)  
   14001d890:	cmp    DWORD PTR [rbx-0x15],edi
   14001d893:	push   QWORD PTR [rsi]
   14001d895:	pop    rbx
   14001d896:	in     al,0xff
   14001d898:	(bad)  
   14001d899:	(bad)  
   14001d89a:	sar    bh,1
   14001d89c:	sub    eax,0x33ffc335
   14001d8a1:	xor    ah,BYTE PTR [rbx+0x643145d3]
   14001d8a7:	add    al,BYTE PTR [rax]
	...
   14001d8b1:	add    BYTE PTR [rax],al
   14001d8b3:	add    BYTE PTR [rcx-0x42f7c785],dh
   14001d8b9:	xchg   DWORD PTR [rcx+0x5a],eax
   14001d8bc:	retf   0x4893
   14001d8bf:	rcr    cl,0xa1
   14001d8c2:	rex.WRXB std 
   14001d8c4:	fcomp  DWORD PTR [rdi-0x622800b5]
   14001d8ca:	rex.RXB call r11
   14001d8cd:	xchg   edi,eax
   14001d8ce:	rex.X dec esi
   14001d8d1:	xchg   edx,eax
   14001d8d2:	rex.RXB inc r9d
   14001d8d5:	mov    cl,BYTE PTR [rsi-0x1]
   14001d8d8:	mov    dh,0x83
   14001d8da:	push   rdx
   14001d8db:	jmp    QWORD PTR [rbp+0x56ff5479]
   14001d8e1:	cmp    ecx,DWORD PTR [rdx-0x1]
   14001d8e4:	imul   eax,DWORD PTR [rbp+0x30],0x49131eff
   14001d8eb:	call   QWORD PTR [rip+0x16ff6613]        # 0x157013f04
   14001d8f1:	sbb    bh,BYTE PTR [rdi+rdi*8+0x1c]
   14001d8f5:	and    DWORD PTR [rbp-0x5dcfdb01],ecx
   14001d8fb:	jmp    FWORD PTR [rip+0x37ffc048]        # 0x178019949
   14001d901:	data16 loop 0x14001d903
   14001d904:	cmp    eax,DWORD PTR [rcx-0x6fc30014]
   14001d90a:	out    dx,al
   14001d90b:	(bad)  
   14001d90c:	cmp    ecx,DWORD PTR [rbp+rbp*8-0x1587c601]
   14001d913:	push   QWORD PTR [rbx+rdx*2]
   14001d916:	loopne 0x14001d917
   14001d918:	cs cmp cl,dl
   14001d91b:	jmp    FWORD PTR [rip+0x3cffc134]        # 0x17d019a55
   14001d921:	xor    al,BYTE PTR [rax+rdi*2+0x0]
	...
   14001d940:	mov    bh,0x81
   14001d942:	cmp    BYTE PTR [rcx],ch
   14001d944:	ret    0x3e8b
   14001d947:	mov    ss,edx
   14001d949:	cdq    
   14001d94a:	rex.R jmp 0x14001d921
   14001d94d:	cdq    
   14001d94e:	rex.XB dec r14d
   14001d951:	xchg   edx,eax
   14001d952:	rex.RX inc ecx
   14001d955:	mov    cl,BYTE PTR [rsi-0x1]
   14001d958:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001d959:	ja     0x14001d9a7
   14001d95b:	dec    DWORD PTR [rax+0x2f]
   14001d95e:	rex.RB call FWORD PTR [rip+0x2cff4611]        # 0x16d011f76
   14001d965:	sbb    eax,0x3957ff42
   14001d96a:	(bad)  
   14001d96b:	call   QWORD PTR [rdi]
   14001d96d:	adc    DWORD PTR [rbx-0x1],edx
   14001d970:	adc    al,0x17
   14001d972:	je     0x14001d973
   14001d974:	sbb    DWORD PTR [rsi],ebx
   14001d976:	xchg   bh,bh
   14001d978:	and    DWORD PTR [rbx],ebp
   14001d97a:	(bad)  
   14001d97b:	jmp    FWORD PTR [rbx]
   14001d97d:	rex.XB mov r10d,0xe06436ff
   14001d983:	(bad)  
   14001d984:	cmp    eax,DWORD PTR [rbx-0x6cc40014]
   14001d98a:	out    dx,eax
   14001d98b:	(bad)  
   14001d98c:	cmp    ecx,DWORD PTR [rbp+rbp*8-0x168cc601]
   14001d993:	push   QWORD PTR [rdx]
   14001d995:	rex.WXB (bad) 
   14001d998:	cs (bad) 
   14001d99a:	(bad)  
   14001d99b:	jmp    FWORD PTR [rbx+rsi*1]
   14001d99e:	mov    esi,0x683244fc
   14001d9a3:	(bad)  
	...
   14001d9c8:	scas   eax,DWORD PTR es:[rdi]
   14001d9c9:	ja     0x14001d9f9
   14001d9cb:	or     DWORD PTR [rax-0x3fa1cd81],edi
   14001d9d1:	xchg   BYTE PTR [rsi],bh
   14001d9d3:	(bad)
   14001d9d6:	rex.X dec BYTE PTR [rcx+0x2f]
   14001d9da:	rex.X jmp FWORD PTR [rax]
   14001d9dd:	(bad)  
   14001d9de:	rex.RX jmp QWORD PTR [rsp+r10*1]
   14001d9e2:	rex.RX jmp QWORD PTR [rbx]
   14001d9e5:	adc    al,0x46
   14001d9e7:	call   FWORD PTR [rdi+0x3d]
   14001d9ea:	xor    eax,0x461825ff
   14001d9ef:	call   QWORD PTR [rip+0x17ff6613]        # 0x158014008
   14001d9f5:	sbb    edi,DWORD PTR [rdi-0x1]
   14001d9f8:	(bad)  
   14001d9f9:	es xchg ebx,eax
   14001d9fb:	jmp    FWORD PTR [rcx]
   14001d9fd:	cmp    eax,0x6235ffb3
   14001da02:	(bad)  
   14001da04:	cmp    eax,DWORD PTR [rsi-0x67c50013]
   14001da0a:	lock (bad) 
   14001da0c:	cmp    ecx,DWORD PTR [rbp+0x6c38ffed]
   14001da12:	call   0x115460c16
   14001da17:	jmp    FWORD PTR [rip+0x37ffc335]        # 0x178019d52
   14001da1d:	xor    ebx,DWORD PTR [rcx+0x643245bf]
   14001da23:	add    DWORD PTR [rax],eax
	...
   14001da4d:	add    BYTE PTR [rax],al
   14001da4f:	add    BYTE PTR [rdi+0x65012863],dl
   14001da55:	(bad)  
   14001da56:	sub    eax,0x3e35527c
   14001da5b:	dec    DWORD PTR [rdx+0x30]
   14001da5e:	rex inc DWORD PTR [rcx+0x28]
   14001da62:	rex.X (bad) 
   14001da64:	cmp    BYTE PTR [rdx],ah
   14001da66:	rex.XB (bad) 
   14001da68:	cmp    BYTE PTR [rdx],ah
   14001da6a:	rex.XB jmp QWORD PTR [r10+0x40]
   14001da6e:	call   QWORD PTR ss:[rdi]
   14001da71:	adc    DWORD PTR [rbx-0x1],edx
   14001da74:	adc    al,0x18
   14001da76:	ja     0x14001da77
   14001da78:	sbb    al,0x21
   14001da7a:	mov    edi,?
   14001da7c:	(bad)  
   14001da7d:	(bad)  
   14001da7e:	stos   DWORD PTR es:[rdi],eax
   14001da7f:	push   QWORD PTR [rax+riz*2]
   14001da82:	(bad)  
   14001da84:	cmp    ecx,DWORD PTR [rdx-0x62c50013]
   14001da8a:	lock (bad) 
   14001da8c:	cmp    ecx,DWORD PTR [rbp+0x6537ffee]
   14001da92:	out    0xff,al
   14001da94:	(bad)  
   14001da95:	ds iret 
   14001da97:	jmp    FWORD PTR [rip+0x3effc134]        # 0x17f019bd1
   14001da9d:	xor    bh,BYTE PTR [rsi+0x64]
	...
   14001dad4:	ins    DWORD PTR es:[rdi],dx
   14001dad5:	rex.B sbb al,0x2
   14001dad8:	cwde   
   14001dad9:	(bad)  
   14001dada:	sbb    ebp,DWORD PTR [rdx-0xdc9561]
   14001dae0:	jle    0x14001db36
   14001dae2:	sub    edi,edi
   14001dae4:	(bad)  
   14001dae5:	rex cmp edi,edi
   14001dae8:	rex.WRB xor r8b,BYTE PTR [r8-0x1]
   14001daec:	jo     0x14001db38
   14001daee:	jmp    FWORD PTR ss:[rcx]
   14001daf1:	sbb    eax,DWORD PTR [rbp-0x1]
   14001daf4:	adc    al,0x14
   14001daf6:	push   0xffffffffffffffff
   14001daf8:	sbb    DWORD PTR [rsi],ebx
   14001dafa:	test   edi,edi
   14001dafc:	and    al,0x32
   14001dafe:	movabs ds:0xee8f3bffd75d33ff,eax
   14001db07:	(bad)  
   14001db08:	cmp    esp,DWORD PTR [rsi-0x73c4000e]
   14001db0e:	in     eax,dx
   14001db0f:	push   QWORD PTR [rsi]
   14001db11:	pop    rsp
   14001db12:	jrcxz  0x14001db13
   14001db14:	cs cmp ecx,ecx
   14001db17:	jmp    FWORD PTR [rip+0x46f7bc34]        # 0x186f99751
   14001db1d:	xor    ah,BYTE PTR [rbp+0x13]
	...
   14001db58:	popf   
   14001db59:	sbb    DWORD PTR fs:[rcx],ecx
   14001db5c:	mov    esp,0xc3b7297f
   14001db61:	and    DWORD PTR [rbx],0xffffffff
   14001db64:	movabs ds:0x65ff2d537cff1d6d,eax
   14001db6d:	cmp    dil,r15b
   14001db70:	push   0x47
   14001db72:	call   QWORD PTR ss:[rsi]
   14001db75:	adc    DWORD PTR [rdi-0x1],edx
   14001db78:	(bad)  
   14001db79:	sbb    bh,BYTE PTR [rbp-0x1]
   14001db7c:	and    DWORD PTR [rbx+rbx*4],ebp
   14001db7f:	push   QWORD PTR [rdx]
   14001db81:	pop    rdx
   14001db82:	sar    edi,cl
   14001db84:	cmp    edx,DWORD PTR [rsi-0x4fc60011]
   14001db8a:	repnz (bad) 
   14001db8c:	cmp    cl,BYTE PTR [rdx+0x5334ffed]
   14001db92:	fdivp  st(7),st
   14001db94:	sub    eax,0x39ffc536
   14001db99:	xor    edx,DWORD PTR [rdx+0xb2]
	...
   14001dbdb:	add    BYTE PTR [rbp-0x75fae69c],bl
   14001dbe1:	pop    rax
   14001dbe2:	sbb    eax,0x205d8f70
   14001dbe7:	int    0xa8
   14001dbe9:	jo     0x14001dc04
   14001dbeb:	dec    BYTE PTR [rsi-0x6b00dca1]
   14001dbf1:	fs sub bh,bh
   14001dbf4:	and    eax,0x14ff4819
   14001dbf9:	(bad)  
   14001dbfa:	jb     0x14001dbfb
   14001dbfc:	(bad)  
   14001dbfd:	and    eax,0x5631ff92
   14001dc02:	(bad)  
   14001dc03:	(bad)  
   14001dc04:	cmp    ah,BYTE PTR [rax-0x44c60010]
   14001dc0a:	repz (bad) 
   14001dc0c:	cmp    al,BYTE PTR [rsi+0x4932ffec]
   14001dc12:	fdivr  st,st(7)
   14001dc14:	sub    eax,0x3fffc235
   14001dc19:	xor    bh,BYTE PTR [rbp+0x5e]
	...
   14001dc64:	jbe    0x14001dcae
   14001dc66:	sbb    al,BYTE PTR [rcx]
   14001dc68:	adc    DWORD PTR [rcx+0x1a],0x186ea753
   14001dc6f:	lock movabs eax,ds:0x15ff374769ff1b6b
   14001dc79:	adc    esp,DWORD PTR [rcx-0x1]
   14001dc7c:	sbb    esp,DWORD PTR [rax]
   14001dc7e:	mov    edi,edi
   14001dc80:	(bad)  
   14001dc81:	push   rax
   14001dc82:	(bad)  
   14001dc83:	(bad)  
   14001dc84:	cmp    DWORD PTR [rax+rsi*8-0xe37c701],ebp
   14001dc8b:	(bad)  
   14001dc8c:	cmp    DWORD PTR [rdi-0x15],edi
   14001dc8f:	push   QWORD PTR [rax]
   14001dc91:	(bad)  
   14001dc92:	sar    bh,1
   14001dc94:	sub    eax,0x46f6bd34
   14001dc99:	xor    ah,BYTE PTR [rbx+0x11]
	...
   14001dcec:	mov    dl,BYTE PTR [rbp+0x12]
   14001dcef:	xor    DWORD PTR [rax-0x570fe78c],esi
   14001dcf5:	jno    0x14001dd1c
   14001dcf7:	call   FWORD PTR [rsi]
   14001dcf9:	adc    eax,0x1b17ff4f
   14001dcfe:	jg     0x14001dcff
   14001dd00:	sub    al,0x49
   14001dd02:	mov    esi,0xefba3bff
   14001dd07:	(bad)  
   14001dd08:	cmp    edx,ecx
   14001dd0a:	out    dx,eax
   14001dd0b:	(bad)  
   14001dd0c:	cmp    BYTE PTR [rbx-0x17],dh
   14001dd0f:	jmp    FWORD PTR [rsi]
   14001dd11:	cmp    ecx,ecx
   14001dd13:	(bad)  
   14001dd14:	cmp    BYTE PTR [rbx],dh
   14001dd16:	xchg   esp,eax
   14001dd17:	scas   eax,DWORD PTR es:[rdi]
	...
   14001dd70:	xchg   edx,eax
   14001dd71:	pop    rbx
   14001dd72:	adc    DWORD PTR [rdi-0x4b],ecx
   14001dd75:	jns    0x14001dd92
   14001dd77:	std    
   14001dd78:	pop    rdx
   14001dd79:	cmp    eax,0x1616ff3d
   14001dd7e:	jo     0x14001dd7f
   14001dd80:	sub    BYTE PTR [rsi],bh
   14001dd82:	mov    cl,0xff
   14001dd84:	cmp    al,0xc2
   14001dd86:	in     eax,dx
   14001dd87:	(bad)  
   14001dd88:	cmp    al,0xd2
   14001dd8a:	in     eax,dx
   14001dd8b:	push   QWORD PTR [rsi]
   14001dd8d:	movsxd esp,ebx
   14001dd8f:	jmp    FWORD PTR [rip+0x3fffc435]        # 0x18001a1ca
   14001dd95:	xor    bh,BYTE PTR [rbx+0x53]
	...
   14001ddf4:	pushf  
   14001ddf5:	movsxd edx,DWORD PTR [rcx]
   14001ddf7:	mov    WORD PTR [rsi+0x18ff2e66],ss
   14001ddfd:	adc    ebx,DWORD PTR [rbp-0x1]
   14001de00:	and    esi,DWORD PTR [rdx]
   14001de02:	movabs eax,ds:0xeccb3dffecc43dff
   14001de0b:	push   QWORD PTR [rbx]
   14001de0d:	push   rcx
   14001de0e:	(bad)  
   14001de10:	xor    BYTE PTR [rbx],dh
   14001de12:	mov    bl,0xe7
   14001de14:	xor    r12b,BYTE PTR [r15+0x8]
	...
   14001de74:	mov    WORD PTR [rsi+0xf],ss
   14001de77:	or     DWORD PTR [rbp+0x43d41f6e],esp
   14001de7d:	sub    eax,0x251dff46
   14001de82:	mov    ?,edi
   14001de84:	cmp    al,0xbe
   14001de86:	(bad)  
   14001de87:	(bad)  
   14001de88:	cmp    al,0xba
   14001de8a:	in     al,dx
   14001de8b:	push   QWORD PTR [rax]
   14001de8d:	rex (bad) 
   14001de8f:	(bad)  
   14001de90:	cmp    al,0x32
   14001de92:	test   DWORD PTR [rax+rax*1+0x0],eax
	...
   14001def5:	add    BYTE PTR [rax],al
   14001def7:	add    BYTE PTR [rbx-0x72c0ecaa],cl
   14001defd:	(bad)  
   14001defe:	xor    al,0xfd
   14001df00:	sbb    BYTE PTR [rdx],bl
   14001df02:	je     0x14001df03
   14001df04:	cmp    DWORD PTR [rdx-0x67c6001f],ebp
   14001df0a:	call   0xfd370e0e
   14001df0f:	repz rex.XB xor bpl,BYTE PTR [r13+0x18]
	...
   14001df78:	lea    edx,[rdi+0x12]
   14001df7b:	add    DWORD PTR [rdx+rsi*2+0x242fa622],ebp
   14001df82:	pop    rax
   14001df83:	push   QWORD PTR [rcx]
   14001df85:	jno    0x14001df55
   14001df87:	push   QWORD PTR [rbx]
   14001df89:	pop    rcx
   14001df8a:	xlat   BYTE PTR ds:[rbx]
   14001df8b:	(bad)  
   14001df8c:	cmp    al,0x32
   14001df8e:	test   DWORD PTR [rsi+0x0],edi
	...
   14001dff9:	add    BYTE PTR [rax],al
   14001dffb:	add    BYTE PTR [rdx-0x7eeae29d],bl
   14001e001:	push   rdi
   14001e002:	(bad)  
   14001e003:	fisub  WORD PTR [rcx]
   14001e005:	sub    DWORD PTR [rdx-0x5dcdce01],ebx
   14001e00b:	ret    
   14001e00c:	(bad)  
   14001e00d:	xor    dh,BYTE PTR [rdi+0x7]
	...
   14001e080:	jge    0x14001e0d3
   14001e082:	sub    DWORD PTR [rcx],ebx
   14001e084:	rex.WB
   14001e085:	ss (bad) 
   14001e087:	cmp    BYTE PTR [esi*2+0xb],ch
	...
   14001e12f:	add    bh,bh
   14001e131:	(bad)  
   14001e132:	(bad)  
   14001e133:	(bad)  
   14001e134:	(bad)  
   14001e135:	clc    
   14001e136:	(bad)  
   14001e137:	(bad)  
   14001e138:	(bad)  
   14001e139:	clc    
   14001e13a:	(bad)  
   14001e13b:	(bad)  
   14001e13c:	push   rax
   14001e13e:	(bad)  
   14001e13f:	(bad)  
   14001e140:	push   rax
   14001e142:	ud0    edi,edi
   14001e145:	loopne 0x14001e14e
   14001e147:	(bad)  
   14001e148:	jmp    rax
   14001e14a:	(bad)  
   14001e14b:	cld    
   14001e14c:	inc    eax
   14001e14e:	add    edi,eax
   14001e150:	inc    DWORD PTR [rax+0xf8f001]
   14001e156:	add    BYTE PTR [rax-0x10],ah
   14001e159:	add    BYTE PTR [rax],al
   14001e15b:	add    eax,eax
   14001e15d:	add    BYTE PTR [rax],al
   14001e15f:	add    DWORD PTR [rax+0x30000],eax
   14001e165:	add    BYTE PTR [rax],al
   14001e167:	add    eax,DWORD PTR [rax]
   14001e169:	add    BYTE PTR [rax],al
   14001e16b:	add    eax,DWORD PTR [rax-0xff90000]
   14001e171:	add    BYTE PTR [rax],al
   14001e173:	(bad)  
   14001e174:	cld    
   14001e175:	add    BYTE PTR [rax],al
   14001e177:	(bad)  
   14001e178:	inc    DWORD PTR [rax]
   14001e17a:	add    BYTE PTR [rdi],cl
   14001e17c:	inc    DWORD PTR [rax-0x3f00f100]
   14001e182:	add    BYTE PTR [rdi],bl
   14001e184:	jmp    rax
   14001e186:	add    BYTE PTR [rdi],bl
   14001e188:	(bad)  
   14001e189:	clc    
   14001e18a:	add    BYTE PTR [rdi],bl
   14001e18c:	(bad)  
   14001e18d:	inc    BYTE PTR [rax]
   14001e18f:	(bad)  
   14001e190:	(bad)  
   14001e191:	inc    DWORD PTR [rax]
   14001e193:	(bad)  
   14001e194:	(bad)  
   14001e195:	inc    DWORD PTR [rax-0x7f0000c1]
   14001e19b:	jg     0x14001e19c
   14001e19d:	inc    eax
   14001e19f:	jg     0x14001e1a0
   14001e1a1:	inc    eax
   14001e1a3:	(bad)  
   14001e1a4:	(bad)  
   14001e1a5:	jmp    rax
   14001e1a7:	(bad)  
   14001e1a8:	(bad)  
   14001e1a9:	push   rcx
   14001e1ab:	(bad)  
   14001e1ac:	(bad)  
   14001e1ad:	(bad)  
   14001e1ae:	(bad)  
   14001e1af:	jmp    FWORD PTR [rax]
   14001e1b1:	add    BYTE PTR [rax],al
   14001e1b3:	add    BYTE PTR [rax],dl
   14001e1b5:	add    BYTE PTR [rax],al
   14001e1b7:	add    BYTE PTR [rax],ah
   14001e1b9:	add    BYTE PTR [rax],al
   14001e1bb:	add    BYTE PTR [rcx],al
   14001e1bd:	add    BYTE PTR [rax],ah
   14001e1bf:	add    BYTE PTR [rax],al
   14001e1c1:	add    BYTE PTR [rax],al
   14001e1c3:	add    BYTE PTR [rax+0x4],al
	...
   14001e1ee:	add    BYTE PTR [rax],al
   14001e1f0:	xor    BYTE PTR [rdx],bh
   14001e1f2:	xor    al,0x7
   14001e1f4:	cmp    BYTE PTR [rdx+0x46],cl
   14001e1f7:	sbb    BYTE PTR [rax],al
	...
   14001e22d:	add    BYTE PTR [rax],al
   14001e22f:	add    BYTE PTR [rbp+0x7c],cl
   14001e232:	xchg   DWORD PTR [rbp+0x3c],esp
   14001e235:	mov    ch,0xee
   14001e237:	test   DWORD PTR [rax+rdi*2-0x73],0x202f4076
   14001e23f:	add    DWORD PTR [rax],eax
	...
   14001e269:	add    BYTE PTR [rax],al
   14001e26b:	add    BYTE PTR [rdx],bh
   14001e26d:	sub    DWORD PTR [rsi],ebx
   14001e26f:	add    DWORD PTR [rcx-0x78],eax
   14001e272:	int    0xd2
   14001e274:	cmp    ebx,DWORD PTR [rbx-0x71c40011]
   14001e27a:	in     eax,dx
   14001e27b:	dec    DWORD PTR [rdx+0x62]
   14001e27e:	xchg   esp,eax
   14001e27f:	add    DWORD PTR [rax],0x0
	...
   14001e2a9:	add    BYTE PTR [rax],al
   14001e2ab:	add    BYTE PTR [rdi+rbp*1+0x47],al
   14001e2af:	rex.W
   14001e2b0:	cs rex.WR ret 0x35ff
   14001e2b5:	(bad)  
   14001e2b6:	(bad)  
   14001e2b8:	cmp    BYTE PTR [rbp-0x1a],ch
   14001e2bb:	(bad)  
   14001e2bc:	cmp    dh,BYTE PTR [rsi-0x16]
   14001e2bf:	dec    BYTE PTR [rdi+0x59]
   14001e2c2:	jl     0x14001e321
	...
   14001e2d4:	rex.WXB xor dl,BYTE PTR [r11+r8*2+0x0]
	...
   14001e2e1:	add    BYTE PTR [rax],al
   14001e2e3:	add    BYTE PTR [rbp+rax*2+0x14],dh
   14001e2e7:	sub    al,0x5c
   14001e2e9:	xor    edx,DWORD PTR [rdi+riz*1]
   14001e2ec:	(bad)  
   14001e2ed:	sbb    ebp,DWORD PTR [rax-0x25]
   14001e2f0:	sbb    al,0x23
   14001e2f2:	mov    ?,edi
   14001e2f4:	es ss test eax,0xc84f2fff
   14001e2fb:	push   QWORD PTR [rdi]
   14001e2fd:	push   0x7b3cffe3
   14001e302:	in     eax,0xf8
   14001e304:	push   rcx
   14001e305:	pop    rdx
   14001e306:	outs   dx,BYTE PTR ds:[rsi]
   14001e307:	push   rax
   14001e308:	add    BYTE PTR [rax],al
   14001e30a:	add    BYTE PTR [rax],al
   14001e30c:	rex.XB and eax,0x34430217
   14001e312:	jbe    0x14001e294
   14001e314:	cmp    esi,DWORD PTR [rbx]
   14001e316:	mov    esi,DWORD PTR [rdi+0x0]
   14001e319:	add    BYTE PTR [rax],al
   14001e31b:	add    BYTE PTR [rsi+0x41],ch
   14001e31e:	(bad)  
   14001e31f:	btr    DWORD PTR [rdx+0x2f],edi
   14001e323:	movabs ds:0xff4180b6fe4791cd,eax
   14001e32c:	rex.XB sub eax,0x1715ff46
   14001e332:	jae    0x14001e333
   14001e334:	sbb    al,0x22
   14001e336:	(bad)  
   14001e337:	jmp    QWORD PTR [rdi]
   14001e339:	cmp    BYTE PTR [rbx-0x2ca8cd01],ch
   14001e33f:	(bad)  
   14001e340:	cmp    bh,BYTE PTR [rcx-0x16]
   14001e343:	(bad)  
   14001e344:	cmp    al,0x8a
   14001e346:	in     al,dx
   14001e347:	std    
   14001e348:	rex.X imul esi,DWORD PTR [rbx-0x4dbbc642],0xbf352ed1
   14001e353:	stc    
   14001e354:	rex.B sub al,0x4d
   14001e357:	sbb    BYTE PTR [rax-0x34c4e1a4],dl
   14001e35d:	xchg   edx,eax
   14001e35e:	rex.X fst st(7)
   14001e361:	pushf  
   14001e362:	rex.RX call rdx
   14001e365:	xchg   ebp,eax
   14001e366:	rex.XB inc r12d
   14001e369:	mov    WORD PTR [rbp-0x1],cs
   14001e36c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001e36d:	jbe    0x14001e3b5
   14001e36f:	jmp    FWORD PTR [rsi+rbx*1]
   14001e372:	rex.WRB call QWORD PTR [r14]
   14001e375:	sbb    DWORD PTR [rdx-0x1],edi
   14001e378:	and    BYTE PTR [rcx],ch
   14001e37a:	xchg   edi,eax
   14001e37b:	jmp    FWORD PTR [rsi]
   14001e37d:	rex.WX ret 
   14001e37f:	(bad)  
   14001e380:	cmp    DWORD PTR [rbp-0x17],esi
   14001e383:	(bad)  
   14001e384:	cmp    al,0x8b
   14001e386:	in     eax,dx
   14001e387:	(bad)  
   14001e388:	cmp    DWORD PTR [rcx+rbp*8-0x1],esi
   14001e38c:	xor    BYTE PTR [rax-0x30],al
   14001e38f:	push   QWORD PTR [rip+0xb09e33]        # 0x140b281c8
   14001e395:	add    BYTE PTR [rax],al
   14001e397:	add    BYTE PTR [rcx-0x31a5c27d],bh
   14001e39d:	xchg   edi,eax
   14001e39e:	rex.WX (bad) 
   14001e3a0:	fcomp  DWORD PTR [rdi-0x662a01b5]
   14001e3a6:	rex.R inc edi
   14001e3a9:	mov    cs,WORD PTR [rbx-0x1]
   14001e3ac:	scas   eax,DWORD PTR es:[rdi]
   14001e3ad:	jg     0x14001e402
   14001e3af:	jmp    QWORD PTR [rsi+0x45]
   14001e3b2:	notrack call QWORD PTR [rdi]
   14001e3b5:	adc    al,0x5f
   14001e3b7:	call   FWORD PTR [rdx]
   14001e3b9:	and    BYTE PTR [rax-0x4ac0d501],cl
   14001e3bf:	(bad)  
   14001e3c0:	cmp    DWORD PTR [rdi+riz*8-0x1],esi
   14001e3c4:	cmp    ecx,DWORD PTR [rbp+0x6837ffee]
   14001e3ca:	out    0xff,al
   14001e3cc:	cs cmp bh,al
   14001e3cf:	inc    DWORD PTR [rax+0x32]
   14001e3d2:	jne    0x14001e427
	...
   14001e3e0:	movabs eax,ds:0xbe943a8ac32e2d6e
   14001e3e9:	xchg   BYTE PTR [rbp-0x10],al
   14001e3ec:	pop    rax
   14001e3ed:	cmp    eax,DWORD PTR [rsi-0x1]
   14001e3f0:	and    al,0x15
   14001e3f2:	rex.RB (bad) 
   14001e3f4:	cmp    eax,0x16ff4128
   14001e3f9:	sbb    DWORD PTR [rax-0x1],edi
   14001e3fc:	and    eax,0x38ffa634
   14001e401:	je     0x14001e3e8
   14001e403:	(bad)  
   14001e404:	cmp    edx,DWORD PTR [rcx+0x5b35ffee]
   14001e40a:	loopne 0x14001e40b
   14001e40c:	(bad)  
   14001e40d:	xor    eax,0x273ceeb8
   14001e412:	cmp    al,0x8
	...
   14001e428:	push   0x41
   14001e42a:	(bad)  
   14001e42b:	and    BYTE PTR [rbp+0x4c],dh
   14001e42e:	(bad)  
   14001e42f:	jmp    0x13f3d1c8a
   14001e434:	push   rsi
   14001e435:	(bad)  
   14001e436:	cmp    al,0xff
   14001e438:	sbb    dl,BYTE PTR [rsi]
   14001e43a:	pop    rsi
   14001e43b:	jmp    QWORD PTR [rax]
   14001e43d:	sub    bl,BYTE PTR [rax-0x1c8ac801]
   14001e443:	(bad)  
   14001e444:	cmp    edx,DWORD PTR [rdi+0x4e33ffef]
   14001e44a:	fdivr  st,st(7)
   14001e44c:	(bad)  
   14001e44d:	xor    ebx,DWORD PTR [rax+0x9b]
	...
   14001e46b:	add    BYTE PTR [rdx-0x5fcee59d],bl
   14001e471:	imul   ebx,DWORD PTR [rdi],0x285a86ce
   14001e477:	dec    BYTE PTR [rsi+0x35]
   14001e47a:	rex call FWORD PTR [rdx]
   14001e47d:	and    BYTE PTR [rdi-0x1f85c901],al
   14001e483:	(bad)  
   14001e484:	cmp    DWORD PTR [rdi+0x4230fff0],ebx
   14001e48a:	iret   
   14001e48b:	inc    DWORD PTR [rbx+0x31]
   14001e48e:	push   0x44
	...
   14001e4b4:	mov    dl,BYTE PTR [rdi+0x15]
   14001e4b7:	pop    rbp
   14001e4b8:	cdq    
   14001e4b9:	data16 and al,0xfb
   14001e4bc:	sbb    DWORD PTR [rcx],ebx
   14001e4be:	outs   dx,BYTE PTR ds:[rsi]
   14001e4bf:	push   QWORD PTR [rax+rax*4]
   14001e4c2:	fcos   
   14001e4c4:	cmp    DWORD PTR [rbx+0x3831ffed],esp
   14001e4ca:	mov    ebx,0x372539e8
   14001e4cf:	add    al,0x0
	...
   14001e4f5:	add    BYTE PTR [rax],al
   14001e4f7:	add    BYTE PTR [rbx+riz*2+0x33477613],bl
   14001e4fe:	rex.WRX push QWORD PTR [rcx]
   14001e501:	jle    0x14001e4ce
   14001e503:	(bad)  
   14001e504:	cmp    BYTE PTR [rbp+riz*8-0x69ccc701],dl
   14001e50b:	nop
	...
   14001e538:	push   rsi
   14001e539:	xor    al,BYTE PTR [rdi]
   14001e53b:	add    al,BYTE PTR [rax+0x2bc42b54]
   14001e541:	push   0xffffffffffffffb3
   14001e543:	push   QWORD PTR [rip+0x43fcd872]        # 0x183febdbb
   14001e549:	(bad)  
   14001e54a:	pop    rsp
   14001e54b:	(bad)  
	...
   14001e57c:	mov    ds,WORD PTR [rcx+0x16]
   14001e57f:	(bad)  
   14001e580:	rex.B
   14001e581:	rex.RB jle 0x14001e57a
   14001e584:	cmp    BYTE PTR [rbx*4+0x92],bh
	...
   14001e5bf:	add    BYTE PTR [rbx+rsi*1+0x2f],cl
   14001e5c3:	and    BYTE PTR [rdx],ch
   14001e5c5:	sbb    eax,0x23b
	...
   14001e5d6:	add    BYTE PTR [rax],al
   14001e5d8:	cld    
   14001e5d9:	inc    DWORD PTR [rax]
   14001e5db:	add    ah,bh
   14001e5dd:	(bad)  
   14001e5de:	add    BYTE PTR [rax],al
   14001e5e0:	clc    
   14001e5e1:	(bad)  
   14001e5e2:	add    BYTE PTR [rax],al
   14001e5e4:	clc    
   14001e5e5:	(bad)  
   14001e5e6:	add    BYTE PTR [rax],al
   14001e5e8:	loopne 0x14001e5f2
   14001e5ea:	add    BYTE PTR [rax],al
   14001e5ec:	add    BYTE PTR [rax],0x0
   14001e5ef:	add    BYTE PTR [rax],al
   14001e5f1:	add    DWORD PTR [rax],eax
   14001e5f3:	add    BYTE PTR [rax],al
   14001e5f5:	add    DWORD PTR [rax],eax
   14001e5f7:	add    al,al
   14001e5f9:	add    DWORD PTR [rax],eax
   14001e5fb:	add    al,dh
   14001e5fd:	add    eax,DWORD PTR [rax]
   14001e5ff:	add    al,bh
   14001e601:	add    eax,DWORD PTR [rax]
   14001e603:	add    dh,bh
   14001e605:	add    eax,DWORD PTR [rax]
   14001e607:	add    bh,bh
   14001e609:	(bad)  
   14001e60a:	add    BYTE PTR [rax],al
   14001e60c:	inc    DWORD PTR [rdi]
   14001e60e:	add    BYTE PTR [rax],al
   14001e610:	dec    DWORD PTR [rdi-0x30010000]
   14001e616:	add    BYTE PTR [rax],al
   14001e618:	add    BYTE PTR [rax],al
   14001e61a:	add    DWORD PTR [rax],eax
   14001e61c:	or     al,BYTE PTR [rax]
   14001e61e:	xor    BYTE PTR [rax],dh
   14001e620:	adc    BYTE PTR [rax],al
   14001e622:	add    DWORD PTR [rax],eax
   14001e624:	add    al,0x0
   14001e626:	push   0x1000006
   14001e62b:	add    BYTE PTR [rax],ah
   14001e62d:	and    BYTE PTR [rax],dl
   14001e62f:	add    BYTE PTR [rcx],al
   14001e631:	add    BYTE PTR [rax+rax*1],al
   14001e634:	call   0x14201e63b
   14001e639:	add    BYTE PTR [rax],dl
   14001e63b:	adc    BYTE PTR [rax],dl
   14001e63d:	add    BYTE PTR [rcx],al
   14001e63f:	add    BYTE PTR [rax+rax*1],al
   14001e642:	sub    BYTE PTR [rcx],al
   14001e644:	add    BYTE PTR [rax],al
   14001e646:	add    eax,DWORD PTR [rax]
   14001e648:	xor    BYTE PTR [rax],dh
   14001e64a:	add    BYTE PTR [rax],al
   14001e64c:	add    DWORD PTR [rax],eax
   14001e64e:	or     BYTE PTR [rax],al
   14001e650:	test   al,0xe
   14001e652:	add    BYTE PTR [rax],al
   14001e654:	add    al,0x0
   14001e656:	and    BYTE PTR [rax],ah
   14001e658:	add    BYTE PTR [rax],al
   14001e65a:	add    DWORD PTR [rax],eax
   14001e65c:	or     BYTE PTR [rax],al
   14001e65e:	test   al,0x8
   14001e660:	add    BYTE PTR [rax],al
   14001e662:	add    eax,0x101000
   14001e667:	add    BYTE PTR [rcx],al
   14001e669:	add    BYTE PTR [rax],cl
   14001e66b:	add    BYTE PTR [rax+0x5],ch
   14001e66e:	add    BYTE PTR [rax],al
   14001e670:	(bad)  
   14001e671:	add    BYTE PTR [rax],al
   14001e673:	add    BYTE PTR [rax],al
   14001e675:	add    BYTE PTR [rcx],al
   14001e677:	add    BYTE PTR [rax],ah
   14001e679:	add    ah,cl
   14001e67b:	test   al,0x0
   14001e67d:	add    BYTE PTR [rdi],al
   14001e67f:	add    BYTE PTR [rax],dh
   14001e681:	xor    BYTE PTR [rax],al
   14001e683:	add    BYTE PTR [rcx],al
   14001e685:	add    BYTE PTR [rax],ah
   14001e687:	add    BYTE PTR [rax+0x8000025],ch
   14001e68d:	add    BYTE PTR [rax],ah
   14001e68f:	and    BYTE PTR [rax],al
   14001e691:	add    BYTE PTR [rcx],al
   14001e693:	add    BYTE PTR [rax],ah
   14001e695:	add    BYTE PTR [rax+0x9000010],ch
   14001e69b:	add    BYTE PTR [rax],dl
   14001e69d:	adc    BYTE PTR [rax],al
   14001e69f:	add    BYTE PTR [rcx],al
   14001e6a1:	add    BYTE PTR [rax],ah
   14001e6a3:	add    BYTE PTR [rax+0x4],ch
   14001e6a6:	add    BYTE PTR [rax],al
   14001e6a8:	or     al,BYTE PTR [rax]
   14001e6aa:	add    BYTE PTR [rax],al
   14001e6ac:	add    BYTE PTR [rax],al
	...
