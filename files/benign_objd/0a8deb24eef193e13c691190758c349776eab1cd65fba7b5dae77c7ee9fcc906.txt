
0a8deb24eef193e13c691190758c349776eab1cd65fba7b5dae77c7ee9fcc906.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x181e5]        # 0x419200
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x181e6]        # 0x419210
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x181e9]        # 0x419220
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x181ac]        # 0x4191f0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x1805f]        # 0x4190b0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x18181]        # 0x4191e0
  40105f:	mov    DWORD PTR [rip+0x1bfa3],edx        # 0x41d008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x40a138
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x4087d0
  401081:	mov    rdx,QWORD PTR [rip+0x180b8]        # 0x419140
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x1809e]        # 0x419130
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x18104]        # 0x4191a0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x1803b]        # 0x4190e0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x4083b0
  4010af:	mov    rax,QWORD PTR [rip+0x17f3a]        # 0x418ff0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x40a138
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x7589]        # 0x4086b0
  401127:	call   0x4086a0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x18065]        # 0x4191d0
  40116b:	lea    r8,[rip+0x1bea6]        # 0x41d018
  401172:	lea    rdx,[rip+0x1bea7]        # 0x41d020
  401179:	lea    rcx,[rip+0x1bea8]        # 0x41d028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x1be78],eax        # 0x41d000
  401188:	lea    rax,[rip+0x1be71]        # 0x41d000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x17ff5]        # 0x419190
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x40a150
  4011a3:	mov    DWORD PTR [rip+0x1be67],eax        # 0x41d010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x1801a]        # 0x4191e0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x17f1b]        # 0x419110
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x1e6ea]        # 0x41f8ec
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x17ef7]        # 0x419120
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x1bdba],0x1        # 0x41d004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x17e3c]        # 0x4190a0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x4089c0
  40127d:	lea    rcx,[rip+0x7cdc]        # 0x408f60
  401284:	call   QWORD PTR [rip+0x1e65a]        # 0x41f8e4
  40128a:	mov    rdx,QWORD PTR [rip+0x17e6f]        # 0x419100
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x408e70
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x40a170
  4012a5:	call   0x4087b0
  4012aa:	mov    rax,QWORD PTR [rip+0x17dff]        # 0x4190b0
  4012b1:	mov    QWORD PTR [rip+0x1c810],rax        # 0x41dac8
  4012b8:	mov    rax,QWORD PTR [rip+0x17e11]        # 0x4190d0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x1c7a9],rax        # 0x41dac0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x13cca],eax        # 0x415000
  401336:	mov    r12d,DWORD PTR [rip+0x1bceb]        # 0x41d028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x40a040
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x1bcc2]        # 0x41d020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x409fe8
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x40a040
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x40a030
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x1bc6a],rbp        # 0x41d020
  4013b6:	call   0x408380
  4013bb:	mov    rax,QWORD PTR [rip+0x17cfe]        # 0x4190c0
  4013c2:	mov    rdx,QWORD PTR [rip+0x1bc4f]        # 0x41d018
  4013c9:	mov    ecx,DWORD PTR [rip+0x1bc59]        # 0x41d028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x1bc3c]        # 0x41d018
  4013dc:	mov    rdx,QWORD PTR [rip+0x1bc3d]        # 0x41d020
  4013e3:	call   0x40b060
  4013e8:	mov    ecx,DWORD PTR [rip+0x1bc1a]        # 0x41d008
  4013ee:	mov    DWORD PTR [rip+0x1bc18],eax        # 0x41d00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x1bc02]        # 0x41d004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x40a120
  40140b:	mov    eax,DWORD PTR [rip+0x1bbfb]        # 0x41d00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x17ce9]        # 0x419120
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x40a128
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x17cfd]        # 0x419160
  401463:	mov    rcx,QWORD PTR [rip+0x17ce6]        # 0x419150
  40146a:	call   0x40a0e0
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x1e3fb]        # 0x41f894
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x17cd9]        # 0x419180
  4014a7:	mov    rcx,QWORD PTR [rip+0x17cc2]        # 0x419170
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x40a0e0
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x40a080
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x17d05]        # 0x4191e0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x4083c0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x17cd5]        # 0x4191e0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x4083c0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rsi
  401531:	push   rbx
  401532:	sub    rsp,0x38
  401536:	mov    rbx,rcx
  401539:	mov    rcx,rdx
  40153c:	mov    rsi,r8
  40153f:	call   0x40a048
  401544:	test   rax,rax
  401547:	je     0x40154e
  401549:	cmp    BYTE PTR [rax],0x0
  40154c:	jne    0x401563
  40154e:	mov    rdx,rsi
  401551:	mov    rcx,rbx
  401554:	call   0x408128
  401559:	mov    rax,rbx
  40155c:	add    rsp,0x38
  401560:	pop    rbx
  401561:	pop    rsi
  401562:	ret    
  401563:	lea    r8,[rsp+0x2f]
  401568:	mov    rdx,rax
  40156b:	mov    rcx,rbx
  40156e:	call   0x408138
  401573:	jmp    0x401559
  401575:	nop
  401576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401580:	mov    rcx,QWORD PTR [rip+0x1bab9]        # 0x41d040
  401587:	test   rcx,rcx
  40158a:	je     0x401591
  40158c:	jmp    0x408060
  401591:	repz ret 
  401593:	nop    DWORD PTR [rax]
  401596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015a0:	push   r14
  4015a2:	push   r13
  4015a4:	push   r12
  4015a6:	push   rbp
  4015a7:	push   rdi
  4015a8:	push   rsi
  4015a9:	push   rbx
  4015aa:	sub    rsp,0x190
  4015b1:	lea    rdx,[rip+0x14a49]        # 0x416001
  4015b8:	lea    r12,[rsp+0x50]
  4015bd:	lea    rbx,[rsp+0x80]
  4015c5:	mov    rdi,rcx
  4015c8:	lea    rsi,[rsp+0x70]
  4015cd:	lea    rbp,[rsp+0x30]
  4015d2:	mov    r8,r12
  4015d5:	mov    rcx,rbx
  4015d8:	call   0x408138
  4015dd:	mov    rcx,QWORD PTR [rsp+0x80]
  4015e5:	call   0x40a048
  4015ea:	lea    r9,[rip+0x14a0f]        # 0x416000
  4015f1:	test   rax,rax
  4015f4:	mov    r8,rsi
  4015f7:	mov    rcx,rbp
  4015fa:	mov    rdx,r9
  4015fd:	cmovne rdx,rax
  401601:	call   0x408138
  401606:	mov    rax,QWORD PTR [rsp+0x80]
  40160e:	mov    rdx,rsi
  401611:	lea    rcx,[rax-0x18]
  401615:	call   0x408188
  40161a:	mov    rax,QWORD PTR [rsp+0x30]
  40161f:	cmp    QWORD PTR [rax-0x18],0x0
  401624:	je     0x401657
  401626:	mov    rdx,rbp
  401629:	mov    rcx,rdi
  40162c:	call   0x408128
  401631:	mov    rax,QWORD PTR [rsp+0x30]
  401636:	mov    rdx,rbx
  401639:	lea    rcx,[rax-0x18]
  40163d:	call   0x408188
  401642:	mov    rax,rdi
  401645:	add    rsp,0x190
  40164c:	pop    rbx
  40164d:	pop    rsi
  40164e:	pop    rdi
  40164f:	pop    rbp
  401650:	pop    r12
  401652:	pop    r13
  401654:	pop    r14
  401656:	ret    
  401657:	lea    r13,[rsp+0x2f]
  40165c:	xor    edx,edx
  40165e:	xor    ecx,ecx
  401660:	mov    r8,r13
  401663:	call   0x4081a0
  401668:	lea    r8,[rsp+0x2e]
  40166d:	xor    edx,edx
  40166f:	xor    ecx,ecx
  401671:	mov    QWORD PTR [rsp+0x40],rax
  401676:	call   0x4081a0
  40167b:	mov    QWORD PTR [rsp+0x50],rax
  401680:	xor    ecx,ecx
  401682:	call   QWORD PTR [rip+0x1e1fc]        # 0x41f884
  401688:	mov    r8d,0x104
  40168e:	mov    rdx,rbx
  401691:	mov    rcx,rax
  401694:	call   QWORD PTR [rip+0x1e1da]        # 0x41f874
  40169a:	test   eax,eax
  40169c:	jne    0x401766
  4016a2:	mov    rax,QWORD PTR [rsp+0x50]
  4016a7:	cmp    QWORD PTR [rax-0x18],0x0
  4016ac:	je     0x40175f
  4016b2:	lea    rdx,[rip+0x14956]        # 0x41600f
  4016b9:	or     r8,0xffffffffffffffff
  4016bd:	mov    rcx,r12
  4016c0:	call   0x4081e8
  4016c5:	cmp    rax,0xffffffffffffffff
  4016c9:	je     0x40175a
  4016cf:	lea    r14,[rsp+0x60]
  4016d4:	mov    r9,rax
  4016d7:	xor    r8d,r8d
  4016da:	mov    rdx,r12
  4016dd:	mov    rcx,r14
  4016e0:	call   0x4081d0
  4016e5:	lea    r12,[rsp+0x40]
  4016ea:	mov    rdx,r14
  4016ed:	mov    rcx,r12
  4016f0:	call   0x408180
  4016f5:	mov    rax,QWORD PTR [rsp+0x60]
  4016fa:	mov    rdx,rsi
  4016fd:	lea    rcx,[rax-0x18]
  401701:	call   0x408188
  401706:	mov    rax,QWORD PTR [rsp+0x50]
  40170b:	lea    rcx,[rax-0x18]
  40170f:	mov    rdx,rsi
  401712:	call   0x408188
  401717:	mov    rdx,r12
  40171a:	mov    rcx,rbp
  40171d:	call   0x408180
  401722:	mov    rax,QWORD PTR [rsp+0x40]
  401727:	mov    rdx,rbx
  40172a:	lea    rcx,[rax-0x18]
  40172e:	call   0x408188
  401733:	mov    rax,QWORD PTR [rsp+0x30]
  401738:	cmp    QWORD PTR [rax-0x18],0x0
  40173d:	jne    0x401626
  401743:	lea    rdx,[rip+0x148ce]        # 0x416018
  40174a:	mov    r8,rbx
  40174d:	mov    rcx,rdi
  401750:	call   0x408138
  401755:	jmp    0x401631
  40175a:	mov    rax,QWORD PTR [rsp+0x50]
  40175f:	lea    r12,[rsp+0x40]
  401764:	jmp    0x40170b
  401766:	lea    r14,[rsp+0x60]
  40176b:	mov    r8,rsi
  40176e:	mov    rdx,rbx
  401771:	mov    BYTE PTR [rsp+0x184],0x0
  401779:	mov    rcx,r14
  40177c:	call   0x408138
  401781:	lea    rdx,[rip+0x14885]        # 0x41600d
  401788:	or     r8,0xffffffffffffffff
  40178c:	mov    rcx,r14
  40178f:	call   0x4081e8
  401794:	cmp    rax,0xffffffffffffffff
  401798:	je     0x4017c8
  40179a:	lea    r9,[rax+0x1]
  40179e:	xor    r8d,r8d
  4017a1:	mov    rdx,r14
  4017a4:	mov    rcx,rsi
  4017a7:	call   0x4081d0
  4017ac:	mov    rdx,rsi
  4017af:	mov    rcx,r12
  4017b2:	call   0x408180
  4017b7:	mov    rax,QWORD PTR [rsp+0x70]
  4017bc:	mov    rdx,r13
  4017bf:	lea    rcx,[rax-0x18]
  4017c3:	call   0x408188
  4017c8:	mov    rax,QWORD PTR [rsp+0x60]
  4017cd:	mov    rdx,rsi
  4017d0:	lea    rcx,[rax-0x18]
  4017d4:	call   0x408188
  4017d9:	jmp    0x4016a2
  4017de:	mov    rbx,rax
  4017e1:	mov    rax,QWORD PTR [rsp+0x60]
  4017e6:	mov    rdx,rsi
  4017e9:	lea    rcx,[rax-0x18]
  4017ed:	call   0x408188
  4017f2:	mov    rax,QWORD PTR [rsp+0x50]
  4017f7:	mov    rdx,r13
  4017fa:	lea    rcx,[rax-0x18]
  4017fe:	call   0x408188
  401803:	mov    rax,QWORD PTR [rsp+0x40]
  401808:	mov    rdx,r13
  40180b:	lea    rcx,[rax-0x18]
  40180f:	call   0x408188
  401814:	mov    rax,QWORD PTR [rsp+0x30]
  401819:	lea    rdx,[rsp+0x2d]
  40181e:	lea    rcx,[rax-0x18]
  401822:	call   0x408188
  401827:	mov    rcx,rbx
  40182a:	call   0x409730
  40182f:	mov    rbx,rax
  401832:	jmp    0x401814
  401834:	mov    rbx,rax
  401837:	jmp    0x401803
  401839:	mov    rbx,rax
  40183c:	mov    rax,QWORD PTR [rsp+0x80]
  401844:	lea    rdx,[rsp+0x60]
  401849:	lea    rcx,[rax-0x18]
  40184d:	call   0x408188
  401852:	mov    rcx,rbx
  401855:	call   0x409730
  40185a:	mov    rbx,rax
  40185d:	jmp    0x4017f2
  40185f:	mov    rbx,rax
  401862:	mov    rax,QWORD PTR [rsp+0x70]
  401867:	mov    rdx,r13
  40186a:	lea    rcx,[rax-0x18]
  40186e:	call   0x408188
  401873:	mov    rax,QWORD PTR [rsp+0x60]
  401878:	mov    rdx,r13
  40187b:	lea    rcx,[rax-0x18]
  40187f:	call   0x408188
  401884:	jmp    0x4017f2
  401889:	mov    rbx,rax
  40188c:	jmp    0x401873
  40188e:	jmp    0x40182f
  401890:	mov    rsi,rax
  401893:	mov    rax,QWORD PTR [rsp+0x40]
  401898:	mov    rdx,rbx
  40189b:	mov    rbx,rsi
  40189e:	lea    rcx,[rax-0x18]
  4018a2:	call   0x408188
  4018a7:	jmp    0x401814
  4018ac:	nop    DWORD PTR [rax+0x0]
  4018b0:	push   rdi
  4018b1:	push   rsi
  4018b2:	push   rbx
  4018b3:	sub    rsp,0x20
  4018b7:	test   dl,dl
  4018b9:	mov    rbx,rcx
  4018bc:	jne    0x401950
  4018c2:	cmp    BYTE PTR [rip+0x1b797],0x0        # 0x41d060
  4018c9:	jne    0x4018f0
  4018cb:	mov    rcx,QWORD PTR [rbx]
  4018ce:	call   0x409fc8
  4018d3:	mov    ecx,eax
  4018d5:	mov    ebx,eax
  4018d7:	call   0x406830
  4018dc:	test   al,al
  4018de:	mov    edx,ebx
  4018e0:	jne    0x401940
  4018e2:	mov    eax,edx
  4018e4:	add    rsp,0x20
  4018e8:	pop    rbx
  4018e9:	pop    rsi
  4018ea:	pop    rdi
  4018eb:	ret    
  4018ec:	nop    DWORD PTR [rax+0x0]
  4018f0:	mov    rdx,QWORD PTR [rcx]
  4018f3:	mov    rcx,QWORD PTR [rip+0x17716]        # 0x419010
  4018fa:	mov    r8,QWORD PTR [rdx-0x18]
  4018fe:	call   0x4080a8
  401903:	mov    rdi,rax
  401906:	mov    rax,QWORD PTR [rax]
  401909:	mov    rax,QWORD PTR [rax-0x18]
  40190d:	mov    rsi,QWORD PTR [rdi+rax*1+0xf0]
  401915:	test   rsi,rsi
  401918:	je     0x4019ff
  40191e:	cmp    BYTE PTR [rsi+0x38],0x0
  401922:	je     0x4019a4
  401928:	movsx  edx,BYTE PTR [rsi+0x43]
  40192c:	mov    rcx,rdi
  40192f:	call   0x4081b8
  401934:	mov    rcx,rax
  401937:	call   0x4081b0
  40193c:	jmp    0x4018cb
  40193e:	xchg   ax,ax
  401940:	mov    ecx,ebx
  401942:	add    rsp,0x20
  401946:	pop    rbx
  401947:	pop    rsi
  401948:	pop    rdi
  401949:	jmp    0x406860
  40194e:	xchg   ax,ax
  401950:	mov    rdx,QWORD PTR [rcx]
  401953:	mov    rcx,QWORD PTR [rip+0x176b6]        # 0x419010
  40195a:	mov    r8,QWORD PTR [rdx-0x18]
  40195e:	call   0x4080a8
  401963:	mov    rsi,rax
  401966:	mov    rax,QWORD PTR [rax]
  401969:	mov    rax,QWORD PTR [rax-0x18]
  40196d:	mov    rbx,QWORD PTR [rsi+rax*1+0xf0]
  401975:	test   rbx,rbx
  401978:	je     0x4019ff
  40197e:	cmp    BYTE PTR [rbx+0x38],0x0
  401982:	je     0x4019d5
  401984:	movsx  edx,BYTE PTR [rbx+0x43]
  401988:	mov    rcx,rsi
  40198b:	call   0x4081b8
  401990:	mov    rcx,rax
  401993:	call   0x4081b0
  401998:	xor    edx,edx
  40199a:	mov    eax,edx
  40199c:	add    rsp,0x20
  4019a0:	pop    rbx
  4019a1:	pop    rsi
  4019a2:	pop    rdi
  4019a3:	ret    
  4019a4:	mov    rcx,rsi
  4019a7:	call   0x4081c0
  4019ac:	mov    rax,QWORD PTR [rsi]
  4019af:	lea    rcx,[rip+0x890a]        # 0x40a2c0
  4019b6:	mov    edx,0xa
  4019bb:	mov    rax,QWORD PTR [rax+0x30]
  4019bf:	cmp    rax,rcx
  4019c2:	je     0x40192c
  4019c8:	mov    rcx,rsi
  4019cb:	call   rax
  4019cd:	movsx  edx,al
  4019d0:	jmp    0x40192c
  4019d5:	mov    rcx,rbx
  4019d8:	call   0x4081c0
  4019dd:	mov    rax,QWORD PTR [rbx]
  4019e0:	lea    rcx,[rip+0x88d9]        # 0x40a2c0
  4019e7:	mov    edx,0xa
  4019ec:	mov    rax,QWORD PTR [rax+0x30]
  4019f0:	cmp    rax,rcx
  4019f3:	je     0x401988
  4019f5:	mov    rcx,rbx
  4019f8:	call   rax
  4019fa:	movsx  edx,al
  4019fd:	jmp    0x401988
  4019ff:	call   0x4080a0
  401a04:	nop
  401a05:	nop
  401a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a10:	sub    rsp,0x38
  401a14:	mov    rax,QWORD PTR [rip+0x175c5]        # 0x418fe0
  401a1b:	mov    rcx,QWORD PTR [rip+0x1b636]        # 0x41d058
  401a22:	mov    eax,DWORD PTR [rax]
  401a24:	test   eax,eax
  401a26:	jne    0x401a40
  401a28:	mov    eax,DWORD PTR [rcx-0x8]
  401a2b:	lea    edx,[rax-0x1]
  401a2e:	test   eax,eax
  401a30:	mov    DWORD PTR [rcx-0x8],edx
  401a33:	jle    0x401a4e
  401a35:	add    rsp,0x38
  401a39:	ret    
  401a3a:	nop    WORD PTR [rax+rax*1+0x0]
  401a40:	mov    eax,0xffffffff
  401a45:	lock xadd DWORD PTR [rcx-0x8],eax
  401a4a:	test   eax,eax
  401a4c:	jg     0x401a35
  401a4e:	lea    rdx,[rsp+0x2f]
  401a53:	sub    rcx,0x18
  401a57:	call   0x408190
  401a5c:	nop
  401a5d:	add    rsp,0x38
  401a61:	ret    
  401a62:	nop    DWORD PTR [rax+0x0]
  401a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a70:	sub    rsp,0x38
  401a74:	mov    rax,QWORD PTR [rip+0x17565]        # 0x418fe0
  401a7b:	mov    rcx,QWORD PTR [rip+0x1b5e6]        # 0x41d068
  401a82:	mov    eax,DWORD PTR [rax]
  401a84:	test   eax,eax
  401a86:	jne    0x401aa0
  401a88:	mov    eax,DWORD PTR [rcx-0x8]
  401a8b:	lea    edx,[rax-0x1]
  401a8e:	test   eax,eax
  401a90:	mov    DWORD PTR [rcx-0x8],edx
  401a93:	jle    0x401aae
  401a95:	add    rsp,0x38
  401a99:	ret    
  401a9a:	nop    WORD PTR [rax+rax*1+0x0]
  401aa0:	mov    eax,0xffffffff
  401aa5:	lock xadd DWORD PTR [rcx-0x8],eax
  401aaa:	test   eax,eax
  401aac:	jg     0x401a95
  401aae:	lea    rdx,[rsp+0x2f]
  401ab3:	sub    rcx,0x18
  401ab7:	call   0x408190
  401abc:	nop
  401abd:	add    rsp,0x38
  401ac1:	ret    
  401ac2:	nop    DWORD PTR [rax+0x0]
  401ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ad0:	sub    rsp,0x38
  401ad4:	mov    rax,QWORD PTR [rip+0x17505]        # 0x418fe0
  401adb:	mov    rcx,QWORD PTR [rip+0x1b58e]        # 0x41d070
  401ae2:	mov    eax,DWORD PTR [rax]
  401ae4:	test   eax,eax
  401ae6:	jne    0x401b00
  401ae8:	mov    eax,DWORD PTR [rcx-0x8]
  401aeb:	lea    edx,[rax-0x1]
  401aee:	test   eax,eax
  401af0:	mov    DWORD PTR [rcx-0x8],edx
  401af3:	jle    0x401b0e
  401af5:	add    rsp,0x38
  401af9:	ret    
  401afa:	nop    WORD PTR [rax+rax*1+0x0]
  401b00:	mov    eax,0xffffffff
  401b05:	lock xadd DWORD PTR [rcx-0x8],eax
  401b0a:	test   eax,eax
  401b0c:	jg     0x401af5
  401b0e:	lea    rdx,[rsp+0x2f]
  401b13:	sub    rcx,0x18
  401b17:	call   0x408190
  401b1c:	nop
  401b1d:	add    rsp,0x38
  401b21:	ret    
  401b22:	nop    DWORD PTR [rax+0x0]
  401b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b30:	lea    rcx,[rip+0x1b579]        # 0x41d0b0
  401b37:	jmp    0x4080d0
  401b3c:	nop    DWORD PTR [rax+0x0]
  401b40:	push   rdi
  401b41:	push   rsi
  401b42:	push   rbx
  401b43:	sub    rsp,0x50
  401b47:	lea    rsi,[rsp+0x40]
  401b4c:	mov    rbx,rcx
  401b4f:	mov    rdi,rdx
  401b52:	xor    ecx,ecx
  401b54:	xor    edx,edx
  401b56:	mov    r8,rsi
  401b59:	call   0x4081a0
  401b5e:	mov    r8,0xffffffffffffffff
  401b65:	mov    QWORD PTR [rbx],rax
  401b68:	mov    edx,0x2e
  401b6d:	mov    rcx,rdi
  401b70:	call   0x4081d8
  401b75:	cmp    rax,0xffffffffffffffff
  401b79:	je     0x401c70
  401b7f:	mov    r9,rax
  401b82:	xor    r8d,r8d
  401b85:	mov    rdx,rdi
  401b88:	mov    rcx,rsi
  401b8b:	call   0x408120
  401b90:	mov    rdx,rsi
  401b93:	mov    rcx,rbx
  401b96:	call   0x408180
  401b9b:	mov    rax,QWORD PTR [rip+0x1743e]        # 0x418fe0
  401ba2:	mov    rcx,QWORD PTR [rsp+0x40]
  401ba7:	mov    edx,DWORD PTR [rax]
  401ba9:	test   edx,edx
  401bab:	jne    0x401c90
  401bb1:	mov    eax,DWORD PTR [rcx-0x8]
  401bb4:	lea    edx,[rax-0x1]
  401bb7:	test   eax,eax
  401bb9:	mov    DWORD PTR [rcx-0x8],edx
  401bbc:	jle    0x401ca2
  401bc2:	mov    r8,0xffffffffffffffff
  401bc9:	mov    edx,0x2f
  401bce:	mov    rcx,rbx
  401bd1:	call   0x4081d8
  401bd6:	mov    r8,0xffffffffffffffff
  401bdd:	mov    rdi,rax
  401be0:	mov    edx,0x5c
  401be5:	mov    rcx,rbx
  401be8:	call   0x4081d8
  401bed:	cmp    rdi,0xffffffffffffffff
  401bf1:	mov    r9,rax
  401bf4:	setne  al
  401bf7:	cmp    r9,0xffffffffffffffff
  401bfb:	je     0x401cb5
  401c01:	test   al,al
  401c03:	je     0x401c0c
  401c05:	cmp    r9,rdi
  401c08:	cmovb  r9,rdi
  401c0c:	mov    rax,QWORD PTR [rbx]
  401c0f:	lea    r8,[r9+0x1]
  401c13:	mov    r9,QWORD PTR [rax-0x18]
  401c17:	cmp    r8,r9
  401c1a:	ja     0x401ccf
  401c20:	lea    rdi,[rsp+0x30]
  401c25:	mov    r9,0xffffffffffffffff
  401c2c:	mov    rdx,rbx
  401c2f:	mov    rcx,rdi
  401c32:	call   0x408120
  401c37:	mov    rdx,rdi
  401c3a:	mov    rcx,rbx
  401c3d:	call   0x408180
  401c42:	mov    rax,QWORD PTR [rip+0x17397]        # 0x418fe0
  401c49:	mov    rcx,QWORD PTR [rsp+0x30]
  401c4e:	mov    eax,DWORD PTR [rax]
  401c50:	test   eax,eax
  401c52:	jne    0x401c80
  401c54:	mov    eax,DWORD PTR [rcx-0x8]
  401c57:	lea    edx,[rax-0x1]
  401c5a:	mov    DWORD PTR [rcx-0x8],edx
  401c5d:	test   eax,eax
  401c5f:	jle    0x401cc1
  401c61:	mov    rax,rbx
  401c64:	add    rsp,0x50
  401c68:	pop    rbx
  401c69:	pop    rsi
  401c6a:	pop    rdi
  401c6b:	ret    
  401c6c:	nop    DWORD PTR [rax+0x0]
  401c70:	mov    rdx,rdi
  401c73:	mov    rcx,rbx
  401c76:	call   0x408158
  401c7b:	jmp    0x401bc2
  401c80:	mov    eax,0xffffffff
  401c85:	lock xadd DWORD PTR [rcx-0x8],eax
  401c8a:	jmp    0x401c5d
  401c8c:	nop    DWORD PTR [rax+0x0]
  401c90:	mov    eax,0xffffffff
  401c95:	lock xadd DWORD PTR [rcx-0x8],eax
  401c9a:	test   eax,eax
  401c9c:	jg     0x401bc2
  401ca2:	lea    rdx,[rsp+0x30]
  401ca7:	sub    rcx,0x18
  401cab:	call   0x408190
  401cb0:	jmp    0x401bc2
  401cb5:	test   al,al
  401cb7:	je     0x401c61
  401cb9:	mov    r9,rdi
  401cbc:	jmp    0x401c0c
  401cc1:	sub    rcx,0x18
  401cc5:	mov    rdx,rsi
  401cc8:	call   0x408190
  401ccd:	jmp    0x401c61
  401ccf:	lea    rdx,[rip+0x1437e]        # 0x416054
  401cd6:	lea    rcx,[rip+0x14393]        # 0x416070
  401cdd:	call   0x408080
  401ce2:	mov    rsi,rax
  401ce5:	mov    rcx,QWORD PTR [rbx]
  401ce8:	lea    rdx,[rsp+0x2f]
  401ced:	sub    rcx,0x18
  401cf1:	call   0x408188
  401cf6:	mov    rcx,rsi
  401cf9:	call   0x409730
  401cfe:	mov    rsi,rax
  401d01:	mov    rax,QWORD PTR [rsp+0x40]
  401d06:	lea    rdx,[rsp+0x30]
  401d0b:	lea    rcx,[rax-0x18]
  401d0f:	call   0x408188
  401d14:	jmp    0x401ce5
  401d16:	mov    rdi,rax
  401d19:	mov    rax,QWORD PTR [rsp+0x30]
  401d1e:	mov    rdx,rsi
  401d21:	mov    rsi,rdi
  401d24:	lea    rcx,[rax-0x18]
  401d28:	call   0x408188
  401d2d:	jmp    0x401ce5
  401d2f:	nop
  401d30:	push   rbx
  401d31:	sub    rsp,0x20
  401d35:	lea    rdx,[rip+0x1436b]        # 0x4160a7
  401d3c:	mov    rbx,rcx
  401d3f:	call   0x4081c8
  401d44:	test   eax,eax
  401d46:	mov    edx,0x1
  401d4b:	je     0x401d61
  401d4d:	lea    rdx,[rip+0x14357]        # 0x4160ab
  401d54:	mov    rcx,rbx
  401d57:	call   0x4081c8
  401d5c:	test   eax,eax
  401d5e:	sete   dl
  401d61:	mov    eax,edx
  401d63:	add    rsp,0x20
  401d67:	pop    rbx
  401d68:	ret    
  401d69:	nop    DWORD PTR [rax+0x0]
  401d70:	push   r13
  401d72:	push   r12
  401d74:	push   rbp
  401d75:	push   rdi
  401d76:	push   rsi
  401d77:	push   rbx
  401d78:	sub    rsp,0x78
  401d7c:	lea    rdi,[rsp+0x60]
  401d81:	lea    r12,[rsp+0x40]
  401d86:	mov    rsi,rcx
  401d89:	mov    r13,rdx
  401d8c:	xor    ecx,ecx
  401d8e:	xor    edx,edx
  401d90:	mov    r8,rdi
  401d93:	call   0x4081a0
  401d98:	mov    rcx,r12
  401d9b:	mov    QWORD PTR [rsi],rax
  401d9e:	call   0x4015a0
  401da3:	lea    rbx,[rsp+0x50]
  401da8:	lea    rdx,[rip+0x14269]        # 0x416018
  401daf:	mov    r8,rdi
  401db2:	mov    rcx,rbx
  401db5:	call   0x408138
  401dba:	mov    rdx,r13
  401dbd:	mov    rcx,rsi
  401dc0:	lea    rbp,[rsp+0x3f]
  401dc5:	call   0x408158
  401dca:	mov    rdx,rbx
  401dcd:	mov    rcx,r12
  401dd0:	call   0x40ae70
  401dd5:	test   al,al
  401dd7:	jne    0x401e1f
  401dd9:	mov    rax,QWORD PTR [rsp+0x50]
  401dde:	xor    r8d,r8d
  401de1:	mov    rdx,r13
  401de4:	mov    rcx,rdi
  401de7:	lea    rbp,[rsp+0x3f]
  401dec:	mov    r12,QWORD PTR [rax-0x18]
  401df0:	mov    r9,r12
  401df3:	call   0x4081d0
  401df8:	mov    rdx,rbx
  401dfb:	mov    rcx,rdi
  401dfe:	lea    rbp,[rsp+0x3f]
  401e03:	call   0x40ae70
  401e08:	mov    ebx,eax
  401e0a:	mov    rax,QWORD PTR [rsp+0x60]
  401e0f:	mov    rdx,rbp
  401e12:	lea    rcx,[rax-0x18]
  401e16:	call   0x408188
  401e1b:	test   bl,bl
  401e1d:	jne    0x401e97
  401e1f:	mov    rcx,rsi
  401e22:	lea    rbp,[rsp+0x3f]
  401e27:	call   0x408198
  401e2c:	mov    r9,QWORD PTR [rsi]
  401e2f:	mov    rbx,rax
  401e32:	mov    eax,DWORD PTR [r9-0x8]
  401e36:	test   eax,eax
  401e38:	js     0x401e54
  401e3a:	mov    rcx,rsi
  401e3d:	lea    rbp,[rsp+0x3f]
  401e42:	call   0x4081a8
  401e47:	mov    r9,QWORD PTR [rsi]
  401e4a:	jmp    0x401e54
  401e4c:	nop    DWORD PTR [rax+0x0]
  401e50:	add    r9,0x1
  401e54:	cmp    r9,rbx
  401e57:	je     0x401e65
  401e59:	cmp    BYTE PTR [r9],0x2f
  401e5d:	jne    0x401e50
  401e5f:	mov    BYTE PTR [r9],0x5c
  401e63:	jmp    0x401e50
  401e65:	mov    rax,QWORD PTR [rsp+0x50]
  401e6a:	mov    rdx,rdi
  401e6d:	lea    rcx,[rax-0x18]
  401e71:	call   0x408188
  401e76:	mov    rax,QWORD PTR [rsp+0x40]
  401e7b:	mov    rdx,rdi
  401e7e:	lea    rcx,[rax-0x18]
  401e82:	call   0x408188
  401e87:	mov    rax,rsi
  401e8a:	add    rsp,0x78
  401e8e:	pop    rbx
  401e8f:	pop    rsi
  401e90:	pop    rdi
  401e91:	pop    rbp
  401e92:	pop    r12
  401e94:	pop    r13
  401e96:	ret    
  401e97:	mov    r9,QWORD PTR [rsp+0x40]
  401e9c:	mov    r8,r12
  401e9f:	xor    edx,edx
  401ea1:	mov    rcx,rsi
  401ea4:	mov    rax,QWORD PTR [r9-0x18]
  401ea8:	mov    QWORD PTR [rsp+0x20],rax
  401ead:	call   0x408148
  401eb2:	jmp    0x401e1f
  401eb7:	lea    rbp,[rsp+0x3f]
  401ebc:	mov    rbx,rax
  401ebf:	mov    rcx,QWORD PTR [rsi]
  401ec2:	mov    rdx,rbp
  401ec5:	sub    rcx,0x18
  401ec9:	call   0x408188
  401ece:	mov    rcx,rbx
  401ed1:	call   0x409730
  401ed6:	mov    rbx,rax
  401ed9:	mov    rax,QWORD PTR [rsp+0x50]
  401ede:	mov    rdx,rbp
  401ee1:	lea    rcx,[rax-0x18]
  401ee5:	call   0x408188
  401eea:	mov    rax,QWORD PTR [rsp+0x40]
  401eef:	mov    rdx,rbp
  401ef2:	lea    rcx,[rax-0x18]
  401ef6:	call   0x408188
  401efb:	jmp    0x401ebf
  401efd:	mov    rbx,rax
  401f00:	lea    rbp,[rsp+0x3f]
  401f05:	jmp    0x401eea
  401f07:	nop    WORD PTR [rax+rax*1+0x0]
  401f10:	push   rdi
  401f11:	push   rsi
  401f12:	push   rbx
  401f13:	sub    rsp,0x40
  401f17:	xor    r8d,r8d
  401f1a:	mov    rbx,rdx
  401f1d:	mov    rsi,rcx
  401f20:	mov    edx,0x20
  401f25:	mov    rcx,rbx
  401f28:	call   0x4081f0
  401f2d:	cmp    rax,0xffffffffffffffff
  401f31:	je     0x401fb0
  401f33:	mov    rax,QWORD PTR [rbx]
  401f36:	cmp    BYTE PTR [rax],0x22
  401f39:	je     0x401fb0
  401f3b:	lea    rdi,[rsp+0x30]
  401f40:	lea    rdx,[rip+0x14169]        # 0x4160b0
  401f47:	mov    r8,rbx
  401f4a:	mov    rcx,rdi
  401f4d:	call   0x40af80
  401f52:	lea    rdx,[rip+0x14157]        # 0x4160b0
  401f59:	mov    r8d,0x1
  401f5f:	mov    rcx,rdi
  401f62:	call   0x408170
  401f67:	mov    rbx,rax
  401f6a:	mov    rax,QWORD PTR [rax]
  401f6d:	lea    rdi,[rsp+0x2f]
  401f72:	xor    edx,edx
  401f74:	xor    ecx,ecx
  401f76:	mov    r8,rdi
  401f79:	mov    QWORD PTR [rsi],rax
  401f7c:	call   0x4081a0
  401f81:	mov    QWORD PTR [rbx],rax
  401f84:	mov    rax,QWORD PTR [rip+0x17055]        # 0x418fe0
  401f8b:	mov    rcx,QWORD PTR [rsp+0x30]
  401f90:	mov    eax,DWORD PTR [rax]
  401f92:	test   eax,eax
  401f94:	jne    0x401fd0
  401f96:	mov    eax,DWORD PTR [rcx-0x8]
  401f99:	lea    edx,[rax-0x1]
  401f9c:	mov    DWORD PTR [rcx-0x8],edx
  401f9f:	test   eax,eax
  401fa1:	jle    0x401fe0
  401fa3:	mov    rax,rsi
  401fa6:	add    rsp,0x40
  401faa:	pop    rbx
  401fab:	pop    rsi
  401fac:	pop    rdi
  401fad:	ret    
  401fae:	xchg   ax,ax
  401fb0:	mov    rdx,rbx
  401fb3:	mov    rcx,rsi
  401fb6:	call   0x408128
  401fbb:	mov    rax,rsi
  401fbe:	add    rsp,0x40
  401fc2:	pop    rbx
  401fc3:	pop    rsi
  401fc4:	pop    rdi
  401fc5:	ret    
  401fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401fd0:	mov    eax,0xffffffff
  401fd5:	lock xadd DWORD PTR [rcx-0x8],eax
  401fda:	jmp    0x401f9f
  401fdc:	nop    DWORD PTR [rax+0x0]
  401fe0:	sub    rcx,0x18
  401fe4:	mov    rdx,rdi
  401fe7:	call   0x408190
  401fec:	jmp    0x401fa3
  401fee:	mov    rbx,rax
  401ff1:	mov    rax,QWORD PTR [rsp+0x30]
  401ff6:	lea    rdx,[rsp+0x2e]
  401ffb:	lea    rcx,[rax-0x18]
  401fff:	call   0x408188
  402004:	mov    rcx,rbx
  402007:	call   0x409730
  40200c:	nop
  40200d:	nop    DWORD PTR [rax]
  402010:	push   rbp
  402011:	push   rdi
  402012:	push   rsi
  402013:	push   rbx
  402014:	sub    rsp,0x48
  402018:	cmp    BYTE PTR [rip+0x1b059],0x0        # 0x41d078
  40201f:	mov    rbp,rcx
  402022:	mov    rsi,rdx
  402025:	je     0x4020d5
  40202b:	xor    ebx,ebx
  40202d:	jmp    0x402037
  40202f:	nop
  402030:	add    ebx,0x1
  402033:	mov    BYTE PTR [r9+rdi*1],al
  402037:	mov    rcx,rsi
  40203a:	call   0x40a070
  40203f:	cmp    eax,0xffffffff
  402042:	je     0x402080
  402044:	cmp    eax,0xa
  402047:	je     0x402080
  402049:	mov    r9,QWORD PTR [rip+0x1aff0]        # 0x41d040
  402050:	mov    r10,QWORD PTR [rip+0x1aff1]        # 0x41d048
  402057:	mov    edi,ebx
  402059:	sub    r10,r9
  40205c:	cmp    rdi,r10
  40205f:	jb     0x402030
  402061:	lea    rdx,[r10+0x64]
  402065:	cmp    rdx,r10
  402068:	ja     0x4020b0
  40206a:	jae    0x402030
  40206c:	add    rdx,r9
  40206f:	mov    QWORD PTR [rip+0x1afd2],rdx        # 0x41d048
  402076:	jmp    0x402030
  402078:	nop    DWORD PTR [rax+rax*1+0x0]
  402080:	test   ebx,ebx
  402082:	je     0x402180
  402088:	mov    rdx,QWORD PTR [rip+0x1afb1]        # 0x41d040
  40208f:	lea    r9,[rsp+0x3f]
  402094:	mov    r8d,ebx
  402097:	mov    rcx,rbp
  40209a:	call   0x408130
  40209f:	mov    rax,rbp
  4020a2:	add    rsp,0x48
  4020a6:	pop    rbx
  4020a7:	pop    rsi
  4020a8:	pop    rdi
  4020a9:	pop    rbp
  4020aa:	ret    
  4020ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4020b0:	lea    rcx,[rip+0x1af89]        # 0x41d040
  4020b7:	mov    edx,0x64
  4020bc:	mov    DWORD PTR [rsp+0x2c],eax
  4020c0:	call   0x40a580
  4020c5:	mov    r9,QWORD PTR [rip+0x1af74]        # 0x41d040
  4020cc:	mov    eax,DWORD PTR [rsp+0x2c]
  4020d0:	jmp    0x402030
  4020d5:	lea    rcx,[rip+0x1af9c]        # 0x41d078
  4020dc:	call   0x408038
  4020e1:	test   eax,eax
  4020e3:	je     0x40202b
  4020e9:	mov    ecx,0x64
  4020ee:	mov    QWORD PTR [rip+0x1af47],0x0        # 0x41d040
  4020f9:	mov    QWORD PTR [rip+0x1af44],0x0        # 0x41d048
  402104:	mov    QWORD PTR [rip+0x1af41],0x0        # 0x41d050
  40210f:	call   0x408058
  402114:	lea    rdi,[rax+0x8]
  402118:	lea    rdx,[rax+0x64]
  40211c:	mov    QWORD PTR [rip+0x1af1d],rax        # 0x41d040
  402123:	and    rdi,0xfffffffffffffff8
  402127:	mov    QWORD PTR [rip+0x1af22],rdx        # 0x41d050
  40212e:	mov    QWORD PTR [rax],0x0
  402135:	mov    QWORD PTR [rax+0x5c],0x0
  40213d:	sub    rax,rdi
  402140:	lea    ecx,[rax+0x64]
  402143:	xor    eax,eax
  402145:	shr    ecx,0x3
  402148:	rep stos QWORD PTR es:[rdi],rax
  40214b:	lea    rcx,[rip+0x1af26]        # 0x41d078
  402152:	mov    rax,QWORD PTR [rip+0x1aef7]        # 0x41d050
  402159:	mov    QWORD PTR [rip+0x1aee8],rax        # 0x41d048
  402160:	call   0x408030
  402165:	lea    rcx,[rip+0xfffffffffffff414]        # 0x401580
  40216c:	call   0x4082c0
  402171:	jmp    0x40202b
  402176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402180:	lea    r8,[rsp+0x3f]
  402185:	lea    rdx,[rip+0x13e74]        # 0x416000
  40218c:	mov    rcx,rbp
  40218f:	call   0x408138
  402194:	mov    rax,rbp
  402197:	add    rsp,0x48
  40219b:	pop    rbx
  40219c:	pop    rsi
  40219d:	pop    rdi
  40219e:	pop    rbp
  40219f:	ret    
  4021a0:	lea    rcx,[rip+0x1aed1]        # 0x41d078
  4021a7:	mov    rbx,rax
  4021aa:	call   0x408040
  4021af:	mov    rcx,rbx
  4021b2:	call   0x409730
  4021b7:	nop
  4021b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4021c0:	mov    rdx,QWORD PTR [rip+0x1aec9]        # 0x41d090
  4021c7:	lea    rcx,[rip+0x1aeb2]        # 0x41d080
  4021ce:	jmp    0x40ad90
  4021d3:	nop    DWORD PTR [rax]
  4021d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021e0:	push   r15
  4021e2:	push   r14
  4021e4:	push   r13
  4021e6:	push   r12
  4021e8:	push   rbp
  4021e9:	push   rdi
  4021ea:	push   rsi
  4021eb:	push   rbx
  4021ec:	sub    rsp,0xca8
  4021f3:	lea    rbx,[rsp+0xc90]
  4021fb:	lea    rsi,[rsp+0xc80]
  402203:	mov    rcx,rbx
  402206:	call   0x4015a0
  40220b:	lea    rax,[rsp+0xc60]
  402213:	lea    rdx,[rip+0x13de7]        # 0x416001
  40221a:	mov    rcx,rsi
  40221d:	mov    r8,rax
  402220:	mov    r14,rax
  402223:	mov    QWORD PTR [rsp+0x30],rax
  402228:	call   0x408138
  40222d:	lea    rcx,[rip+0x1ae4c]        # 0x41d080
  402234:	mov    rdx,rsi
  402237:	call   0x40a360
  40223c:	mov    rdx,rbx
  40223f:	mov    rcx,rax
  402242:	call   0x408180
  402247:	mov    rax,QWORD PTR [rsp+0xc80]
  40224f:	lea    rdi,[rsp+0xc70]
  402257:	mov    rdx,rdi
  40225a:	lea    rcx,[rax-0x18]
  40225e:	call   0x408188
  402263:	mov    rax,QWORD PTR [rsp+0xc90]
  40226b:	mov    rdx,rsi
  40226e:	lea    rcx,[rax-0x18]
  402272:	call   0x408188
  402277:	lea    rdx,[rip+0x13e4e]        # 0x4160cc
  40227e:	mov    rcx,rbx
  402281:	mov    r8,rdi
  402284:	call   0x408138
  402289:	lea    rcx,[rip+0x1adf0]        # 0x41d080
  402290:	mov    rdx,rbx
  402293:	call   0x40a360
  402298:	lea    rdx,[rip+0x13d79]        # 0x416018
  40229f:	mov    rcx,rax
  4022a2:	call   0x408160
  4022a7:	mov    rax,QWORD PTR [rsp+0xc90]
  4022af:	mov    rdx,rsi
  4022b2:	lea    rcx,[rax-0x18]
  4022b6:	call   0x408188
  4022bb:	lea    rax,[rsp+0xc50]
  4022c3:	lea    rdx,[rip+0x13e10]        # 0x4160da
  4022ca:	mov    rcx,rsi
  4022cd:	mov    r8,rax
  4022d0:	mov    QWORD PTR [rsp+0x28],rax
  4022d5:	call   0x408138
  4022da:	lea    rdx,[rip+0x13e02]        # 0x4160e3
  4022e1:	mov    r8,rsi
  4022e4:	mov    rcx,rbx
  4022e7:	call   0x401530
  4022ec:	lea    rax,[rsp+0xc40]
  4022f4:	lea    rdx,[rip+0x13de8]        # 0x4160e3
  4022fb:	mov    rcx,rdi
  4022fe:	mov    r8,rax
  402301:	mov    QWORD PTR [rsp+0x50],rax
  402306:	call   0x408138
  40230b:	lea    rcx,[rip+0x1ad6e]        # 0x41d080
  402312:	mov    rdx,rdi
  402315:	call   0x40a360
  40231a:	mov    rdx,rbx
  40231d:	mov    rcx,rax
  402320:	call   0x408180
  402325:	mov    rax,QWORD PTR [rsp+0xc70]
  40232d:	mov    rdx,r14
  402330:	lea    r14,[rsp+0x70]
  402335:	lea    r13,[rsp+0x80]
  40233d:	lea    rcx,[rax-0x18]
  402341:	call   0x408188
  402346:	mov    rax,QWORD PTR [rsp+0xc90]
  40234e:	mov    rdx,rdi
  402351:	lea    rcx,[rax-0x18]
  402355:	call   0x408188
  40235a:	mov    rax,QWORD PTR [rsp+0xc80]
  402362:	mov    rdx,rbx
  402365:	lea    rcx,[rax-0x18]
  402369:	call   0x408188
  40236e:	lea    rdx,[rip+0x13d73]        # 0x4160e8
  402375:	mov    r8,rbx
  402378:	mov    rcx,r14
  40237b:	call   0x408138
  402380:	lea    rdx,[rip+0x13db9]        # 0x416140
  402387:	mov    r8,rbx
  40238a:	mov    rcx,r13
  40238d:	call   0x408138
  402392:	lea    r12,[rsp+0x90]
  40239a:	lea    rdx,[rip+0x13de7]        # 0x416188
  4023a1:	mov    r8,rbx
  4023a4:	mov    rcx,r12
  4023a7:	call   0x408138
  4023ac:	lea    rbp,[rsp+0xa0]
  4023b4:	lea    rdx,[rip+0x13e0d]        # 0x4161c8
  4023bb:	mov    r8,rbx
  4023be:	mov    rcx,rbp
  4023c1:	call   0x408138
  4023c6:	lea    r15,[rsp+0xb0]
  4023ce:	mov    rdx,r14
  4023d1:	mov    rcx,r15
  4023d4:	call   0x401d70
  4023d9:	mov    rdx,r15
  4023dc:	mov    rcx,r14
  4023df:	call   0x408180
  4023e4:	mov    rax,QWORD PTR [rsp+0xb0]
  4023ec:	lea    r15,[rsp+0xc0]
  4023f4:	mov    rdx,rbx
  4023f7:	lea    rcx,[rax-0x18]
  4023fb:	call   0x408188
  402400:	mov    rdx,r13
  402403:	mov    rcx,r15
  402406:	call   0x401d70
  40240b:	mov    rdx,r15
  40240e:	mov    rcx,r13
  402411:	call   0x408180
  402416:	mov    rax,QWORD PTR [rsp+0xc0]
  40241e:	lea    r15,[rsp+0xd0]
  402426:	mov    rdx,rbx
  402429:	lea    rcx,[rax-0x18]
  40242d:	call   0x408188
  402432:	mov    rdx,r12
  402435:	mov    rcx,r15
  402438:	call   0x401d70
  40243d:	mov    rdx,r15
  402440:	mov    rcx,r12
  402443:	call   0x408180
  402448:	mov    rax,QWORD PTR [rsp+0xd0]
  402450:	lea    r15,[rsp+0xe0]
  402458:	mov    rdx,rbx
  40245b:	lea    rcx,[rax-0x18]
  40245f:	call   0x408188
  402464:	mov    rdx,rbp
  402467:	mov    rcx,r15
  40246a:	call   0x401d70
  40246f:	mov    rdx,r15
  402472:	mov    rcx,rbp
  402475:	call   0x408180
  40247a:	mov    rax,QWORD PTR [rsp+0xe0]
  402482:	mov    rdx,rbx
  402485:	lea    r15,[rsp+0x100]
  40248d:	lea    rcx,[rax-0x18]
  402491:	call   0x408188
  402496:	lea    rdx,[rip+0x13d78]        # 0x416215
  40249d:	mov    r8,r14
  4024a0:	mov    rcx,r15
  4024a3:	call   0x401530
  4024a8:	lea    r14,[rsp+0xf0]
  4024b0:	lea    rdx,[rip+0x13d5e]        # 0x416215
  4024b7:	mov    r8,rsi
  4024ba:	mov    rcx,r14
  4024bd:	call   0x408138
  4024c2:	lea    rcx,[rip+0x1abb7]        # 0x41d080
  4024c9:	mov    rdx,r14
  4024cc:	call   0x40a360
  4024d1:	mov    rdx,r15
  4024d4:	mov    rcx,rax
  4024d7:	call   0x408180
  4024dc:	mov    rax,QWORD PTR [rsp+0xf0]
  4024e4:	mov    rdx,rbx
  4024e7:	lea    r14,[rsp+0x120]
  4024ef:	lea    rcx,[rax-0x18]
  4024f3:	call   0x408188
  4024f8:	mov    rax,QWORD PTR [rsp+0x100]
  402500:	mov    rdx,rbx
  402503:	lea    rcx,[rax-0x18]
  402507:	call   0x408188
  40250c:	lea    rdx,[rip+0x13d10]        # 0x416223
  402513:	mov    r8,r13
  402516:	mov    rcx,r14
  402519:	call   0x401530
  40251e:	lea    r13,[rsp+0x110]
  402526:	lea    rdx,[rip+0x13cf6]        # 0x416223
  40252d:	mov    r8,rsi
  402530:	mov    rcx,r13
  402533:	call   0x408138
  402538:	lea    rcx,[rip+0x1ab41]        # 0x41d080
  40253f:	mov    rdx,r13
  402542:	call   0x40a360
  402547:	mov    rdx,r14
  40254a:	mov    rcx,rax
  40254d:	call   0x408180
  402552:	mov    rax,QWORD PTR [rsp+0x110]
  40255a:	mov    rdx,rbx
  40255d:	lea    r13,[rsp+0x140]
  402565:	lea    rcx,[rax-0x18]
  402569:	call   0x408188
  40256e:	mov    rax,QWORD PTR [rsp+0x120]
  402576:	mov    rdx,rbx
  402579:	lea    rcx,[rax-0x18]
  40257d:	call   0x408188
  402582:	lea    rdx,[rip+0x13ca5]        # 0x41622e
  402589:	mov    r8,r12
  40258c:	mov    rcx,r13
  40258f:	call   0x401530
  402594:	lea    r12,[rsp+0x130]
  40259c:	lea    rdx,[rip+0x13c8b]        # 0x41622e
  4025a3:	mov    r8,rsi
  4025a6:	mov    rcx,r12
  4025a9:	call   0x408138
  4025ae:	lea    rcx,[rip+0x1aacb]        # 0x41d080
  4025b5:	mov    rdx,r12
  4025b8:	call   0x40a360
  4025bd:	mov    rdx,r13
  4025c0:	mov    rcx,rax
  4025c3:	call   0x408180
  4025c8:	mov    rax,QWORD PTR [rsp+0x130]
  4025d0:	mov    rdx,rbx
  4025d3:	lea    r12,[rsp+0x160]
  4025db:	lea    rcx,[rax-0x18]
  4025df:	call   0x408188
  4025e4:	mov    rax,QWORD PTR [rsp+0x140]
  4025ec:	mov    rdx,rbx
  4025ef:	lea    rcx,[rax-0x18]
  4025f3:	call   0x408188
  4025f8:	lea    rdx,[rip+0x13c36]        # 0x416235
  4025ff:	mov    r8,rbp
  402602:	mov    rcx,r12
  402605:	call   0x401530
  40260a:	lea    rbp,[rsp+0x150]
  402612:	lea    rdx,[rip+0x13c1c]        # 0x416235
  402619:	mov    r8,rsi
  40261c:	mov    rcx,rbp
  40261f:	call   0x408138
  402624:	lea    rcx,[rip+0x1aa55]        # 0x41d080
  40262b:	mov    rdx,rbp
  40262e:	call   0x40a360
  402633:	mov    rdx,r12
  402636:	mov    rcx,rax
  402639:	call   0x408180
  40263e:	mov    rax,QWORD PTR [rsp+0x150]
  402646:	mov    rdx,rbx
  402649:	lea    rbp,[rsp+0x1d0]
  402651:	lea    rcx,[rax-0x18]
  402655:	call   0x408188
  40265a:	mov    rax,QWORD PTR [rsp+0x160]
  402662:	mov    rdx,rbx
  402665:	lea    rcx,[rax-0x18]
  402669:	call   0x408188
  40266e:	lea    rdx,[rip+0x13ba0]        # 0x416215
  402675:	mov    r8,rsi
  402678:	mov    rcx,rbp
  40267b:	call   0x408138
  402680:	lea    rcx,[rip+0x1a9f9]        # 0x41d080
  402687:	mov    rdx,rbp
  40268a:	call   0x40a360
  40268f:	lea    rdx,[rsp+0x1e0]
  402697:	mov    rcx,rdx
  40269a:	mov    QWORD PTR [rsp+0x38],rdx
  40269f:	mov    rdx,rax
  4026a2:	call   0x401f10
  4026a7:	lea    rbp,[rsp+0x180]
  4026af:	lea    rdx,[rip+0x13b5f]        # 0x416215
  4026b6:	mov    r8,rdi
  4026b9:	mov    rcx,rbp
  4026bc:	call   0x408138
  4026c1:	lea    rcx,[rip+0x1a9b8]        # 0x41d080
  4026c8:	mov    rdx,rbp
  4026cb:	call   0x40a360
  4026d0:	lea    rbp,[rsp+0x190]
  4026d8:	lea    r8,[rip+0x13b60]        # 0x41623f
  4026df:	mov    rdx,rax
  4026e2:	mov    rcx,rbp
  4026e5:	call   0x40b010
  4026ea:	lea    r12,[rsp+0x1a0]
  4026f2:	mov    rdx,rbp
  4026f5:	mov    rcx,r12
  4026f8:	call   0x401f10
  4026fd:	lea    rbp,[rsp+0x1b0]
  402705:	lea    rdx,[rip+0x13b37]        # 0x416243
  40270c:	mov    r8,r12
  40270f:	mov    rcx,rbp
  402712:	call   0x40af30
  402717:	lea    r12,[rsp+0x1c0]
  40271f:	lea    r8,[rip+0x13b20]        # 0x416246
  402726:	mov    rdx,rbp
  402729:	mov    rcx,r12
  40272c:	call   0x40aea0
  402731:	mov    r8,QWORD PTR [rsp+0x1c0]
  402739:	mov    rax,QWORD PTR [rsp+0x1e0]
  402741:	mov    r9,QWORD PTR [r8-0x18]
  402745:	mov    rdx,r9
  402748:	add    rdx,QWORD PTR [rax-0x18]
  40274c:	cmp    rdx,QWORD PTR [r8-0x10]
  402750:	jbe    0x40275c
  402752:	cmp    rdx,QWORD PTR [rax-0x10]
  402756:	jbe    0x404d97
  40275c:	mov    rdx,QWORD PTR [rsp+0x38]
  402761:	mov    rcx,r12
  402764:	call   0x408168
  402769:	mov    rbp,rax
  40276c:	lea    r8,[rsp+0x6f]
  402771:	xor    edx,edx
  402773:	mov    rax,QWORD PTR [rbp+0x0]
  402777:	xor    ecx,ecx
  402779:	mov    QWORD PTR [rsp+0x170],rax
  402781:	call   0x4081a0
  402786:	mov    QWORD PTR [rbp+0x0],rax
  40278a:	mov    rax,QWORD PTR [rsp+0x1c0]
  402792:	mov    rdx,rbx
  402795:	lea    rbp,[rsp+0x1f0]
  40279d:	lea    rcx,[rax-0x18]
  4027a1:	call   0x408188
  4027a6:	mov    rax,QWORD PTR [rsp+0x1b0]
  4027ae:	mov    rdx,rbx
  4027b1:	lea    rcx,[rax-0x18]
  4027b5:	call   0x408188
  4027ba:	mov    rax,QWORD PTR [rsp+0x1a0]
  4027c2:	mov    rdx,rbx
  4027c5:	lea    rcx,[rax-0x18]
  4027c9:	call   0x408188
  4027ce:	mov    rax,QWORD PTR [rsp+0x190]
  4027d6:	mov    rdx,rbx
  4027d9:	lea    rcx,[rax-0x18]
  4027dd:	call   0x408188
  4027e2:	mov    rax,QWORD PTR [rsp+0x180]
  4027ea:	mov    rdx,rbx
  4027ed:	lea    rcx,[rax-0x18]
  4027f1:	call   0x408188
  4027f6:	mov    rax,QWORD PTR [rsp+0x1e0]
  4027fe:	mov    rdx,rbx
  402801:	lea    rcx,[rax-0x18]
  402805:	call   0x408188
  40280a:	mov    rax,QWORD PTR [rsp+0x1d0]
  402812:	mov    rdx,rbx
  402815:	lea    rcx,[rax-0x18]
  402819:	call   0x408188
  40281e:	lea    rdx,[rip+0x139fe]        # 0x416223
  402825:	mov    r8,rsi
  402828:	mov    rcx,rbp
  40282b:	call   0x408138
  402830:	lea    rcx,[rip+0x1a849]        # 0x41d080
  402837:	mov    rdx,rbp
  40283a:	call   0x40a360
  40283f:	lea    rdx,[rip+0x13a04]        # 0x41624a
  402846:	mov    rcx,rax
  402849:	call   0x4081c8
  40284e:	mov    ebp,eax
  402850:	mov    rax,QWORD PTR [rsp+0x1f0]
  402858:	mov    rdx,rbx
  40285b:	lea    rcx,[rax-0x18]
  40285f:	call   0x408188
  402864:	test   ebp,ebp
  402866:	je     0x40290e
  40286c:	lea    rbp,[rsp+0x200]
  402874:	lea    rdx,[rip+0x139a8]        # 0x416223
  40287b:	mov    r8,rsi
  40287e:	mov    rcx,rbp
  402881:	call   0x408138
  402886:	lea    rcx,[rip+0x1a7f3]        # 0x41d080
  40288d:	mov    rdx,rbp
  402890:	call   0x40a360
  402895:	lea    r12,[rsp+0x210]
  40289d:	mov    rdx,rax
  4028a0:	mov    rcx,r12
  4028a3:	call   0x401f10
  4028a8:	lea    rbp,[rsp+0x220]
  4028b0:	lea    rdx,[rip+0x1398f]        # 0x416246
  4028b7:	mov    r8,r12
  4028ba:	mov    rcx,rbp
  4028bd:	call   0x40af30
  4028c2:	lea    rcx,[rsp+0x170]
  4028ca:	mov    rdx,rbp
  4028cd:	call   0x408168
  4028d2:	mov    rax,QWORD PTR [rsp+0x220]
  4028da:	mov    rdx,rbx
  4028dd:	lea    rcx,[rax-0x18]
  4028e1:	call   0x408188
  4028e6:	mov    rax,QWORD PTR [rsp+0x210]
  4028ee:	mov    rdx,rbx
  4028f1:	lea    rcx,[rax-0x18]
  4028f5:	call   0x408188
  4028fa:	mov    rax,QWORD PTR [rsp+0x200]
  402902:	mov    rdx,rbx
  402905:	lea    rcx,[rax-0x18]
  402909:	call   0x408188
  40290e:	lea    rbp,[rsp+0x240]
  402916:	lea    rdx,[rip+0x13918]        # 0x416235
  40291d:	mov    r8,rsi
  402920:	mov    rcx,rbp
  402923:	call   0x408138
  402928:	lea    rcx,[rip+0x1a751]        # 0x41d080
  40292f:	mov    rdx,rbp
  402932:	call   0x40a360
  402937:	lea    rdx,[rsp+0x250]
  40293f:	mov    r14,rdx
  402942:	mov    QWORD PTR [rsp+0x58],rdx
  402947:	mov    rdx,rax
  40294a:	mov    rcx,r14
  40294d:	call   0x401f10
  402952:	lea    rbp,[rsp+0x230]
  40295a:	lea    rdx,[rip+0x138f6]        # 0x416257
  402961:	mov    r8,r14
  402964:	mov    rcx,rbp
  402967:	call   0x40af30
  40296c:	mov    rax,QWORD PTR [rsp+0x250]
  402974:	mov    rdx,rbx
  402977:	lea    r12,[rsp+0x260]
  40297f:	lea    rcx,[rax-0x18]
  402983:	call   0x408188
  402988:	mov    rax,QWORD PTR [rsp+0x240]
  402990:	mov    rdx,rbx
  402993:	lea    rcx,[rax-0x18]
  402997:	call   0x408188
  40299c:	lea    rdx,[rip+0x1388b]        # 0x41622e
  4029a3:	mov    r8,rsi
  4029a6:	mov    rcx,r12
  4029a9:	call   0x408138
  4029ae:	lea    rcx,[rip+0x1a6cb]        # 0x41d080
  4029b5:	mov    rdx,r12
  4029b8:	call   0x40a360
  4029bd:	lea    rdx,[rip+0x13896]        # 0x41625a
  4029c4:	mov    rcx,rax
  4029c7:	call   0x4081c8
  4029cc:	mov    r12d,eax
  4029cf:	mov    rax,QWORD PTR [rsp+0x260]
  4029d7:	mov    rdx,rbx
  4029da:	lea    rcx,[rax-0x18]
  4029de:	call   0x408188
  4029e3:	test   r12d,r12d
  4029e6:	je     0x402a89
  4029ec:	lea    r12,[rsp+0x270]
  4029f4:	lea    rdx,[rip+0x13833]        # 0x41622e
  4029fb:	mov    r8,rsi
  4029fe:	mov    rcx,r12
  402a01:	call   0x408138
  402a06:	lea    rcx,[rip+0x1a673]        # 0x41d080
  402a0d:	mov    rdx,r12
  402a10:	call   0x40a360
  402a15:	lea    r13,[rsp+0x280]
  402a1d:	mov    rdx,rax
  402a20:	mov    rcx,r13
  402a23:	call   0x401f10
  402a28:	lea    r12,[rsp+0x290]
  402a30:	lea    rdx,[rip+0x1382c]        # 0x416263
  402a37:	mov    r8,r13
  402a3a:	mov    rcx,r12
  402a3d:	call   0x40af30
  402a42:	mov    rdx,r12
  402a45:	mov    rcx,rbp
  402a48:	call   0x408168
  402a4d:	mov    rax,QWORD PTR [rsp+0x290]
  402a55:	mov    rdx,rbx
  402a58:	lea    rcx,[rax-0x18]
  402a5c:	call   0x408188
  402a61:	mov    rax,QWORD PTR [rsp+0x280]
  402a69:	mov    rdx,rbx
  402a6c:	lea    rcx,[rax-0x18]
  402a70:	call   0x408188
  402a75:	mov    rax,QWORD PTR [rsp+0x270]
  402a7d:	mov    rdx,rbx
  402a80:	lea    rcx,[rax-0x18]
  402a84:	call   0x408188
  402a89:	lea    r13,[rsp+0x2b0]
  402a91:	lea    rdx,[rip+0x137d0]        # 0x416268
  402a98:	mov    r8,rsi
  402a9b:	mov    rcx,r13
  402a9e:	call   0x408138
  402aa3:	lea    r12,[rsp+0x2c0]
  402aab:	lea    rdx,[rip+0x137fc]        # 0x4162ae
  402ab2:	mov    r8,r13
  402ab5:	mov    rcx,r12
  402ab8:	call   0x401530
  402abd:	lea    r13,[rsp+0x2a0]
  402ac5:	lea    rdx,[rip+0x137e2]        # 0x4162ae
  402acc:	mov    r8,rdi
  402acf:	mov    rcx,r13
  402ad2:	call   0x408138
  402ad7:	lea    rcx,[rip+0x1a5a2]        # 0x41d080
  402ade:	mov    rdx,r13
  402ae1:	call   0x40a360
  402ae6:	mov    rdx,r12
  402ae9:	mov    rcx,rax
  402aec:	call   0x408180
  402af1:	mov    rax,QWORD PTR [rsp+0x2a0]
  402af9:	mov    rdx,rbx
  402afc:	lea    r12,[rsp+0x2e0]
  402b04:	lea    rcx,[rax-0x18]
  402b08:	call   0x408188
  402b0d:	mov    rax,QWORD PTR [rsp+0x2c0]
  402b15:	mov    rdx,rbx
  402b18:	lea    rcx,[rax-0x18]
  402b1c:	call   0x408188
  402b21:	mov    rax,QWORD PTR [rsp+0x2b0]
  402b29:	mov    rdx,rbx
  402b2c:	lea    rcx,[rax-0x18]
  402b30:	call   0x408188
  402b35:	lea    r8,[rsp+0x170]
  402b3d:	lea    rdx,[rip+0x13773]        # 0x4162b7
  402b44:	mov    rcx,r12
  402b47:	call   0x401530
  402b4c:	lea    r13,[rsp+0x2d0]
  402b54:	lea    rdx,[rip+0x1375c]        # 0x4162b7
  402b5b:	mov    r8,rsi
  402b5e:	mov    rcx,r13
  402b61:	call   0x408138
  402b66:	lea    rcx,[rip+0x1a513]        # 0x41d080
  402b6d:	mov    rdx,r13
  402b70:	call   0x40a360
  402b75:	mov    rdx,r12
  402b78:	mov    rcx,rax
  402b7b:	call   0x408180
  402b80:	mov    rax,QWORD PTR [rsp+0x2d0]
  402b88:	mov    rdx,rbx
  402b8b:	lea    r13,[rsp+0x300]
  402b93:	lea    rcx,[rax-0x18]
  402b97:	call   0x408188
  402b9c:	mov    rax,QWORD PTR [rsp+0x2e0]
  402ba4:	mov    rdx,rbx
  402ba7:	lea    rcx,[rax-0x18]
  402bab:	call   0x408188
  402bb0:	lea    rdx,[rip+0x13709]        # 0x4162c0
  402bb7:	mov    r8,rsi
  402bba:	mov    rcx,r13
  402bbd:	call   0x408138
  402bc2:	lea    r12,[rsp+0x310]
  402bca:	lea    rdx,[rip+0x136f8]        # 0x4162c9
  402bd1:	mov    r8,r13
  402bd4:	mov    rcx,r12
  402bd7:	call   0x401530
  402bdc:	lea    r13,[rsp+0x2f0]
  402be4:	lea    rdx,[rip+0x136de]        # 0x4162c9
  402beb:	mov    r8,rdi
  402bee:	mov    rcx,r13
  402bf1:	call   0x408138
  402bf6:	lea    rcx,[rip+0x1a483]        # 0x41d080
  402bfd:	mov    rdx,r13
  402c00:	call   0x40a360
  402c05:	mov    rdx,r12
  402c08:	mov    rcx,rax
  402c0b:	call   0x408180
  402c10:	mov    rax,QWORD PTR [rsp+0x2f0]
  402c18:	mov    rdx,rbx
  402c1b:	lea    r13,[rsp+0x330]
  402c23:	lea    rcx,[rax-0x18]
  402c27:	call   0x408188
  402c2c:	mov    rax,QWORD PTR [rsp+0x310]
  402c34:	mov    rdx,rbx
  402c37:	lea    rcx,[rax-0x18]
  402c3b:	call   0x408188
  402c40:	mov    rax,QWORD PTR [rsp+0x300]
  402c48:	mov    rdx,rbx
  402c4b:	lea    rcx,[rax-0x18]
  402c4f:	call   0x408188
  402c54:	lea    rdx,[rip+0x13672]        # 0x4162cd
  402c5b:	mov    r8,rsi
  402c5e:	mov    rcx,r13
  402c61:	call   0x408138
  402c66:	lea    r12,[rsp+0x340]
  402c6e:	lea    rdx,[rip+0x1365f]        # 0x4162d4
  402c75:	mov    r8,r13
  402c78:	mov    rcx,r12
  402c7b:	call   0x401530
  402c80:	lea    r13,[rsp+0x320]
  402c88:	lea    rdx,[rip+0x13645]        # 0x4162d4
  402c8f:	mov    r8,rdi
  402c92:	mov    rcx,r13
  402c95:	call   0x408138
  402c9a:	lea    rcx,[rip+0x1a3df]        # 0x41d080
  402ca1:	mov    rdx,r13
  402ca4:	call   0x40a360
  402ca9:	mov    rdx,r12
  402cac:	mov    rcx,rax
  402caf:	call   0x408180
  402cb4:	mov    rax,QWORD PTR [rsp+0x320]
  402cbc:	mov    rdx,rbx
  402cbf:	lea    r13,[rsp+0x360]
  402cc7:	lea    rcx,[rax-0x18]
  402ccb:	call   0x408188
  402cd0:	mov    rax,QWORD PTR [rsp+0x340]
  402cd8:	mov    rdx,rbx
  402cdb:	lea    rcx,[rax-0x18]
  402cdf:	call   0x408188
  402ce4:	mov    rax,QWORD PTR [rsp+0x330]
  402cec:	mov    rdx,rbx
  402cef:	lea    rcx,[rax-0x18]
  402cf3:	call   0x408188
  402cf8:	lea    rdx,[rip+0x13301]        # 0x416000
  402cff:	mov    r8,rsi
  402d02:	mov    rcx,r13
  402d05:	call   0x408138
  402d0a:	lea    r12,[rsp+0x370]
  402d12:	lea    rdx,[rip+0x135c2]        # 0x4162db
  402d19:	mov    r8,r13
  402d1c:	mov    rcx,r12
  402d1f:	call   0x401530
  402d24:	lea    r13,[rsp+0x350]
  402d2c:	lea    rdx,[rip+0x135a8]        # 0x4162db
  402d33:	mov    r8,rdi
  402d36:	mov    rcx,r13
  402d39:	call   0x408138
  402d3e:	lea    rcx,[rip+0x1a33b]        # 0x41d080
  402d45:	mov    rdx,r13
  402d48:	call   0x40a360
  402d4d:	mov    rdx,r12
  402d50:	mov    rcx,rax
  402d53:	call   0x408180
  402d58:	mov    rax,QWORD PTR [rsp+0x350]
  402d60:	mov    rdx,rbx
  402d63:	lea    r13,[rsp+0x390]
  402d6b:	lea    rcx,[rax-0x18]
  402d6f:	call   0x408188
  402d74:	mov    rax,QWORD PTR [rsp+0x370]
  402d7c:	mov    rdx,rbx
  402d7f:	lea    rcx,[rax-0x18]
  402d83:	call   0x408188
  402d88:	mov    rax,QWORD PTR [rsp+0x360]
  402d90:	mov    rdx,rbx
  402d93:	lea    rcx,[rax-0x18]
  402d97:	call   0x408188
  402d9c:	lea    rdx,[rip+0x13541]        # 0x4162e4
  402da3:	mov    r8,rsi
  402da6:	mov    rcx,r13
  402da9:	call   0x408138
  402dae:	lea    r12,[rsp+0x3a0]
  402db6:	lea    rdx,[rip+0x13536]        # 0x4162f3
  402dbd:	mov    r8,r13
  402dc0:	mov    rcx,r12
  402dc3:	call   0x401530
  402dc8:	lea    r13,[rsp+0x380]
  402dd0:	lea    rdx,[rip+0x1351c]        # 0x4162f3
  402dd7:	mov    r8,rdi
  402dda:	mov    rcx,r13
  402ddd:	call   0x408138
  402de2:	lea    rcx,[rip+0x1a297]        # 0x41d080
  402de9:	mov    rdx,r13
  402dec:	call   0x40a360
  402df1:	mov    rdx,r12
  402df4:	mov    rcx,rax
  402df7:	call   0x408180
  402dfc:	mov    rax,QWORD PTR [rsp+0x380]
  402e04:	mov    rdx,rbx
  402e07:	lea    r13,[rsp+0x3c0]
  402e0f:	lea    rcx,[rax-0x18]
  402e13:	call   0x408188
  402e18:	mov    rax,QWORD PTR [rsp+0x3a0]
  402e20:	mov    rdx,rbx
  402e23:	lea    rcx,[rax-0x18]
  402e27:	call   0x408188
  402e2c:	mov    rax,QWORD PTR [rsp+0x390]
  402e34:	mov    rdx,rbx
  402e37:	lea    rcx,[rax-0x18]
  402e3b:	call   0x408188
  402e40:	lea    rdx,[rip+0x13486]        # 0x4162cd
  402e47:	mov    r8,rsi
  402e4a:	mov    rcx,r13
  402e4d:	call   0x408138
  402e52:	lea    r12,[rsp+0x3d0]
  402e5a:	lea    rdx,[rip+0x13495]        # 0x4162f6
  402e61:	mov    r8,r13
  402e64:	mov    rcx,r12
  402e67:	call   0x401530
  402e6c:	lea    r13,[rsp+0x3b0]
  402e74:	lea    rdx,[rip+0x1347b]        # 0x4162f6
  402e7b:	mov    r8,rdi
  402e7e:	mov    rcx,r13
  402e81:	call   0x408138
  402e86:	lea    rcx,[rip+0x1a1f3]        # 0x41d080
  402e8d:	mov    rdx,r13
  402e90:	call   0x40a360
  402e95:	mov    rdx,r12
  402e98:	mov    rcx,rax
  402e9b:	call   0x408180
  402ea0:	mov    rax,QWORD PTR [rsp+0x3b0]
  402ea8:	mov    rdx,rbx
  402eab:	lea    r13,[rsp+0x3f0]
  402eb3:	lea    rcx,[rax-0x18]
  402eb7:	call   0x408188
  402ebc:	mov    rax,QWORD PTR [rsp+0x3d0]
  402ec4:	mov    rdx,rbx
  402ec7:	lea    rcx,[rax-0x18]
  402ecb:	call   0x408188
  402ed0:	mov    rax,QWORD PTR [rsp+0x3c0]
  402ed8:	mov    rdx,rbx
  402edb:	lea    rcx,[rax-0x18]
  402edf:	call   0x408188
  402ee4:	lea    rdx,[rip+0x13115]        # 0x416000
  402eeb:	mov    r8,rsi
  402eee:	mov    rcx,r13
  402ef1:	call   0x408138
  402ef6:	lea    r12,[rsp+0x400]
  402efe:	lea    rdx,[rip+0x133f8]        # 0x4162fd
  402f05:	mov    r8,r13
  402f08:	mov    rcx,r12
  402f0b:	call   0x401530
  402f10:	lea    r13,[rsp+0x3e0]
  402f18:	lea    rdx,[rip+0x133de]        # 0x4162fd
  402f1f:	mov    r8,rdi
  402f22:	mov    rcx,r13
  402f25:	call   0x408138
  402f2a:	lea    rcx,[rip+0x1a14f]        # 0x41d080
  402f31:	mov    rdx,r13
  402f34:	call   0x40a360
  402f39:	mov    rdx,r12
  402f3c:	mov    rcx,rax
  402f3f:	call   0x408180
  402f44:	mov    rax,QWORD PTR [rsp+0x3e0]
  402f4c:	mov    rdx,rbx
  402f4f:	lea    r13,[rsp+0x420]
  402f57:	lea    rcx,[rax-0x18]
  402f5b:	call   0x408188
  402f60:	mov    rax,QWORD PTR [rsp+0x400]
  402f68:	mov    rdx,rbx
  402f6b:	lea    rcx,[rax-0x18]
  402f6f:	call   0x408188
  402f74:	mov    rax,QWORD PTR [rsp+0x3f0]
  402f7c:	mov    rdx,rbx
  402f7f:	lea    rcx,[rax-0x18]
  402f83:	call   0x408188
  402f88:	lea    rdx,[rip+0x13377]        # 0x416306
  402f8f:	mov    r8,rsi
  402f92:	mov    rcx,r13
  402f95:	call   0x408138
  402f9a:	lea    r12,[rsp+0x430]
  402fa2:	lea    rdx,[rip+0x1336e]        # 0x416317
  402fa9:	mov    r8,r13
  402fac:	mov    rcx,r12
  402faf:	call   0x401530
  402fb4:	lea    r13,[rsp+0x410]
  402fbc:	lea    rdx,[rip+0x13354]        # 0x416317
  402fc3:	mov    r8,rdi
  402fc6:	mov    rcx,r13
  402fc9:	call   0x408138
  402fce:	lea    rcx,[rip+0x1a0ab]        # 0x41d080
  402fd5:	mov    rdx,r13
  402fd8:	call   0x40a360
  402fdd:	mov    rdx,r12
  402fe0:	mov    rcx,rax
  402fe3:	call   0x408180
  402fe8:	mov    rax,QWORD PTR [rsp+0x410]
  402ff0:	mov    rdx,rbx
  402ff3:	lea    r13,[rsp+0x450]
  402ffb:	lea    rcx,[rax-0x18]
  402fff:	call   0x408188
  403004:	mov    rax,QWORD PTR [rsp+0x430]
  40300c:	mov    rdx,rbx
  40300f:	lea    rcx,[rax-0x18]
  403013:	call   0x408188
  403018:	mov    rax,QWORD PTR [rsp+0x420]
  403020:	mov    rdx,rbx
  403023:	lea    rcx,[rax-0x18]
  403027:	call   0x408188
  40302c:	lea    rdx,[rip+0x1329a]        # 0x4162cd
  403033:	mov    r8,rsi
  403036:	mov    rcx,r13
  403039:	call   0x408138
  40303e:	lea    r12,[rsp+0x460]
  403046:	lea    rdx,[rip+0x132ce]        # 0x41631b
  40304d:	mov    r8,r13
  403050:	mov    rcx,r12
  403053:	call   0x401530
  403058:	lea    r13,[rsp+0x440]
  403060:	lea    rdx,[rip+0x132b4]        # 0x41631b
  403067:	mov    r8,rdi
  40306a:	mov    rcx,r13
  40306d:	call   0x408138
  403072:	lea    rcx,[rip+0x1a007]        # 0x41d080
  403079:	mov    rdx,r13
  40307c:	call   0x40a360
  403081:	mov    rdx,r12
  403084:	mov    rcx,rax
  403087:	call   0x408180
  40308c:	mov    rax,QWORD PTR [rsp+0x440]
  403094:	mov    rdx,rbx
  403097:	lea    r13,[rsp+0x480]
  40309f:	lea    rcx,[rax-0x18]
  4030a3:	call   0x408188
  4030a8:	mov    rax,QWORD PTR [rsp+0x460]
  4030b0:	mov    rdx,rbx
  4030b3:	lea    rcx,[rax-0x18]
  4030b7:	call   0x408188
  4030bc:	mov    rax,QWORD PTR [rsp+0x450]
  4030c4:	mov    rdx,rbx
  4030c7:	lea    rcx,[rax-0x18]
  4030cb:	call   0x408188
  4030d0:	lea    rdx,[rip+0x12f29]        # 0x416000
  4030d7:	mov    r8,rsi
  4030da:	mov    rcx,r13
  4030dd:	call   0x408138
  4030e2:	lea    r12,[rsp+0x490]
  4030ea:	lea    rdx,[rip+0x13233]        # 0x416324
  4030f1:	mov    r8,r13
  4030f4:	mov    rcx,r12
  4030f7:	call   0x401530
  4030fc:	lea    r13,[rsp+0x470]
  403104:	lea    rdx,[rip+0x13219]        # 0x416324
  40310b:	mov    r8,rdi
  40310e:	mov    rcx,r13
  403111:	call   0x408138
  403116:	lea    rcx,[rip+0x19f63]        # 0x41d080
  40311d:	mov    rdx,r13
  403120:	call   0x40a360
  403125:	mov    rdx,r12
  403128:	mov    rcx,rax
  40312b:	call   0x408180
  403130:	mov    rax,QWORD PTR [rsp+0x470]
  403138:	mov    rdx,rbx
  40313b:	lea    r13,[rsp+0x4b0]
  403143:	lea    rcx,[rax-0x18]
  403147:	call   0x408188
  40314c:	mov    rax,QWORD PTR [rsp+0x490]
  403154:	mov    rdx,rbx
  403157:	lea    rcx,[rax-0x18]
  40315b:	call   0x408188
  403160:	mov    rax,QWORD PTR [rsp+0x480]
  403168:	mov    rdx,rbx
  40316b:	lea    rcx,[rax-0x18]
  40316f:	call   0x408188
  403174:	lea    rdx,[rip+0x131b4]        # 0x41632f
  40317b:	mov    r8,rsi
  40317e:	mov    rcx,r13
  403181:	call   0x408138
  403186:	lea    r12,[rsp+0x4c0]
  40318e:	lea    rdx,[rip+0x131ad]        # 0x416342
  403195:	mov    r8,r13
  403198:	mov    rcx,r12
  40319b:	call   0x401530
  4031a0:	lea    r13,[rsp+0x4a0]
  4031a8:	lea    rdx,[rip+0x13193]        # 0x416342
  4031af:	mov    r8,rdi
  4031b2:	mov    rcx,r13
  4031b5:	call   0x408138
  4031ba:	lea    rcx,[rip+0x19ebf]        # 0x41d080
  4031c1:	mov    rdx,r13
  4031c4:	call   0x40a360
  4031c9:	mov    rdx,r12
  4031cc:	mov    rcx,rax
  4031cf:	call   0x408180
  4031d4:	mov    rax,QWORD PTR [rsp+0x4a0]
  4031dc:	mov    rdx,rbx
  4031df:	lea    r13,[rsp+0x4e0]
  4031e7:	lea    rcx,[rax-0x18]
  4031eb:	call   0x408188
  4031f0:	mov    rax,QWORD PTR [rsp+0x4c0]
  4031f8:	mov    rdx,rbx
  4031fb:	lea    rcx,[rax-0x18]
  4031ff:	call   0x408188
  403204:	mov    rax,QWORD PTR [rsp+0x4b0]
  40320c:	mov    rdx,rbx
  40320f:	lea    rcx,[rax-0x18]
  403213:	call   0x408188
  403218:	lea    rdx,[rip+0x13110]        # 0x41632f
  40321f:	mov    r8,rsi
  403222:	mov    rcx,r13
  403225:	call   0x408138
  40322a:	lea    r12,[rsp+0x4f0]
  403232:	lea    rdx,[rip+0x13115]        # 0x41634e
  403239:	mov    r8,r13
  40323c:	mov    rcx,r12
  40323f:	call   0x401530
  403244:	lea    r13,[rsp+0x4d0]
  40324c:	lea    rdx,[rip+0x130fb]        # 0x41634e
  403253:	mov    r8,rdi
  403256:	mov    rcx,r13
  403259:	call   0x408138
  40325e:	lea    rcx,[rip+0x19e1b]        # 0x41d080
  403265:	mov    rdx,r13
  403268:	call   0x40a360
  40326d:	mov    rdx,r12
  403270:	mov    rcx,rax
  403273:	call   0x408180
  403278:	mov    rax,QWORD PTR [rsp+0x4d0]
  403280:	mov    rdx,rbx
  403283:	lea    r13,[rsp+0x510]
  40328b:	lea    rcx,[rax-0x18]
  40328f:	call   0x408188
  403294:	mov    rax,QWORD PTR [rsp+0x4f0]
  40329c:	mov    rdx,rbx
  40329f:	lea    rcx,[rax-0x18]
  4032a3:	call   0x408188
  4032a8:	mov    rax,QWORD PTR [rsp+0x4e0]
  4032b0:	mov    rdx,rbx
  4032b3:	lea    rcx,[rax-0x18]
  4032b7:	call   0x408188
  4032bc:	lea    rdx,[rip+0x13099]        # 0x41635c
  4032c3:	mov    r8,rsi
  4032c6:	mov    rcx,r13
  4032c9:	call   0x408138
  4032ce:	lea    r12,[rsp+0x520]
  4032d6:	lea    rdx,[rip+0x13082]        # 0x41635f
  4032dd:	mov    r8,r13
  4032e0:	mov    rcx,r12
  4032e3:	call   0x401530
  4032e8:	lea    r13,[rsp+0x500]
  4032f0:	lea    rdx,[rip+0x13068]        # 0x41635f
  4032f7:	mov    r8,rdi
  4032fa:	mov    rcx,r13
  4032fd:	call   0x408138
  403302:	lea    rcx,[rip+0x19d77]        # 0x41d080
  403309:	mov    rdx,r13
  40330c:	call   0x40a360
  403311:	mov    rdx,r12
  403314:	mov    rcx,rax
  403317:	call   0x408180
  40331c:	mov    rax,QWORD PTR [rsp+0x500]
  403324:	mov    rdx,rbx
  403327:	lea    r13,[rsp+0x540]
  40332f:	lea    rcx,[rax-0x18]
  403333:	call   0x408188
  403338:	mov    rax,QWORD PTR [rsp+0x520]
  403340:	mov    rdx,rbx
  403343:	lea    rcx,[rax-0x18]
  403347:	call   0x408188
  40334c:	mov    rax,QWORD PTR [rsp+0x510]
  403354:	mov    rdx,rbx
  403357:	lea    rcx,[rax-0x18]
  40335b:	call   0x408188
  403360:	lea    rdx,[rip+0x12ffb]        # 0x416362
  403367:	mov    r8,rsi
  40336a:	mov    rcx,r13
  40336d:	call   0x408138
  403372:	lea    r12,[rsp+0x550]
  40337a:	lea    rdx,[rip+0x12fe8]        # 0x416369
  403381:	mov    r8,r13
  403384:	mov    rcx,r12
  403387:	call   0x401530
  40338c:	lea    r13,[rsp+0x530]
  403394:	lea    rdx,[rip+0x12fce]        # 0x416369
  40339b:	mov    r8,rdi
  40339e:	mov    rcx,r13
  4033a1:	call   0x408138
  4033a6:	lea    rcx,[rip+0x19cd3]        # 0x41d080
  4033ad:	mov    rdx,r13
  4033b0:	call   0x40a360
  4033b5:	mov    rdx,r12
  4033b8:	mov    rcx,rax
  4033bb:	call   0x408180
  4033c0:	mov    rax,QWORD PTR [rsp+0x530]
  4033c8:	mov    rdx,rbx
  4033cb:	lea    r13,[rsp+0x570]
  4033d3:	lea    rcx,[rax-0x18]
  4033d7:	call   0x408188
  4033dc:	mov    rax,QWORD PTR [rsp+0x550]
  4033e4:	mov    rdx,rbx
  4033e7:	lea    rcx,[rax-0x18]
  4033eb:	call   0x408188
  4033f0:	mov    rax,QWORD PTR [rsp+0x540]
  4033f8:	mov    rdx,rbx
  4033fb:	lea    rcx,[rax-0x18]
  4033ff:	call   0x408188
  403404:	lea    rdx,[rip+0x12f65]        # 0x416370
  40340b:	mov    r8,rsi
  40340e:	mov    rcx,r13
  403411:	call   0x408138
  403416:	lea    r12,[rsp+0x580]
  40341e:	lea    rdx,[rip+0x12f4e]        # 0x416373
  403425:	mov    r8,r13
  403428:	mov    rcx,r12
  40342b:	call   0x401530
  403430:	lea    r13,[rsp+0x560]
  403438:	lea    rdx,[rip+0x12f34]        # 0x416373
  40343f:	mov    r8,rdi
  403442:	mov    rcx,r13
  403445:	call   0x408138
  40344a:	lea    rcx,[rip+0x19c2f]        # 0x41d080
  403451:	mov    rdx,r13
  403454:	call   0x40a360
  403459:	mov    rdx,r12
  40345c:	mov    rcx,rax
  40345f:	call   0x408180
  403464:	mov    rax,QWORD PTR [rsp+0x560]
  40346c:	mov    rdx,rbx
  40346f:	lea    r13,[rsp+0x5a0]
  403477:	lea    rcx,[rax-0x18]
  40347b:	call   0x408188
  403480:	mov    rax,QWORD PTR [rsp+0x580]
  403488:	mov    rdx,rbx
  40348b:	lea    rcx,[rax-0x18]
  40348f:	call   0x408188
  403494:	mov    rax,QWORD PTR [rsp+0x570]
  40349c:	mov    rdx,rbx
  40349f:	lea    rcx,[rax-0x18]
  4034a3:	call   0x408188
  4034a8:	lea    rdx,[rip+0x12b51]        # 0x416000
  4034af:	mov    r8,rsi
  4034b2:	mov    rcx,r13
  4034b5:	call   0x408138
  4034ba:	lea    r12,[rsp+0x5b0]
  4034c2:	lea    rdx,[rip+0x12eb7]        # 0x416380
  4034c9:	mov    r8,r13
  4034cc:	mov    rcx,r12
  4034cf:	call   0x401530
  4034d4:	lea    r13,[rsp+0x590]
  4034dc:	lea    rdx,[rip+0x12e9d]        # 0x416380
  4034e3:	mov    r8,rdi
  4034e6:	mov    rcx,r13
  4034e9:	call   0x408138
  4034ee:	lea    rcx,[rip+0x19b8b]        # 0x41d080
  4034f5:	mov    rdx,r13
  4034f8:	call   0x40a360
  4034fd:	mov    rdx,r12
  403500:	mov    rcx,rax
  403503:	call   0x408180
  403508:	mov    rax,QWORD PTR [rsp+0x590]
  403510:	mov    rdx,rbx
  403513:	lea    r13,[rsp+0x5d0]
  40351b:	lea    rcx,[rax-0x18]
  40351f:	call   0x408188
  403524:	mov    rax,QWORD PTR [rsp+0x5b0]
  40352c:	mov    rdx,rbx
  40352f:	lea    rcx,[rax-0x18]
  403533:	call   0x408188
  403538:	mov    rax,QWORD PTR [rsp+0x5a0]
  403540:	mov    rdx,rbx
  403543:	lea    rcx,[rax-0x18]
  403547:	call   0x408188
  40354c:	lea    rdx,[rip+0x12db3]        # 0x416306
  403553:	mov    r8,rsi
  403556:	mov    rcx,r13
  403559:	call   0x408138
  40355e:	lea    r12,[rsp+0x5e0]
  403566:	lea    rdx,[rip+0x12e2c]        # 0x416399
  40356d:	mov    r8,r13
  403570:	mov    rcx,r12
  403573:	call   0x401530
  403578:	lea    r13,[rsp+0x5c0]
  403580:	lea    rdx,[rip+0x12e12]        # 0x416399
  403587:	mov    r8,rdi
  40358a:	mov    rcx,r13
  40358d:	call   0x408138
  403592:	lea    rcx,[rip+0x19ae7]        # 0x41d080
  403599:	mov    rdx,r13
  40359c:	call   0x40a360
  4035a1:	mov    rdx,r12
  4035a4:	mov    rcx,rax
  4035a7:	call   0x408180
  4035ac:	mov    rax,QWORD PTR [rsp+0x5c0]
  4035b4:	mov    rdx,rbx
  4035b7:	lea    r13,[rsp+0x600]
  4035bf:	lea    rcx,[rax-0x18]
  4035c3:	call   0x408188
  4035c8:	mov    rax,QWORD PTR [rsp+0x5e0]
  4035d0:	mov    rdx,rbx
  4035d3:	lea    rcx,[rax-0x18]
  4035d7:	call   0x408188
  4035dc:	mov    rax,QWORD PTR [rsp+0x5d0]
  4035e4:	mov    rdx,rbx
  4035e7:	lea    rcx,[rax-0x18]
  4035eb:	call   0x408188
  4035f0:	lea    rdx,[rip+0x12da8]        # 0x41639f
  4035f7:	mov    r8,rsi
  4035fa:	mov    rcx,r13
  4035fd:	call   0x408138
  403602:	lea    r12,[rsp+0x610]
  40360a:	lea    rdx,[rip+0x12d96]        # 0x4163a7
  403611:	mov    r8,r13
  403614:	mov    rcx,r12
  403617:	call   0x401530
  40361c:	lea    r13,[rsp+0x5f0]
  403624:	lea    rdx,[rip+0x12d7c]        # 0x4163a7
  40362b:	mov    r8,rdi
  40362e:	mov    rcx,r13
  403631:	call   0x408138
  403636:	lea    rcx,[rip+0x19a43]        # 0x41d080
  40363d:	mov    rdx,r13
  403640:	call   0x40a360
  403645:	mov    rdx,r12
  403648:	mov    rcx,rax
  40364b:	call   0x408180
  403650:	mov    rax,QWORD PTR [rsp+0x5f0]
  403658:	mov    rdx,rbx
  40365b:	lea    r13,[rsp+0x630]
  403663:	lea    rcx,[rax-0x18]
  403667:	call   0x408188
  40366c:	mov    rax,QWORD PTR [rsp+0x610]
  403674:	mov    rdx,rbx
  403677:	lea    rcx,[rax-0x18]
  40367b:	call   0x408188
  403680:	mov    rax,QWORD PTR [rsp+0x600]
  403688:	mov    rdx,rbx
  40368b:	lea    rcx,[rax-0x18]
  40368f:	call   0x408188
  403694:	lea    rdx,[rip+0x12965]        # 0x416000
  40369b:	mov    r8,rsi
  40369e:	mov    rcx,r13
  4036a1:	call   0x408138
  4036a6:	lea    r12,[rsp+0x640]
  4036ae:	lea    rdx,[rip+0x12cfd]        # 0x4163b2
  4036b5:	mov    r8,r13
  4036b8:	mov    rcx,r12
  4036bb:	call   0x401530
  4036c0:	lea    r13,[rsp+0x620]
  4036c8:	lea    rdx,[rip+0x12ce3]        # 0x4163b2
  4036cf:	mov    r8,rdi
  4036d2:	mov    rcx,r13
  4036d5:	call   0x408138
  4036da:	lea    rcx,[rip+0x1999f]        # 0x41d080
  4036e1:	mov    rdx,r13
  4036e4:	call   0x40a360
  4036e9:	mov    rdx,r12
  4036ec:	mov    rcx,rax
  4036ef:	call   0x408180
  4036f4:	mov    rax,QWORD PTR [rsp+0x620]
  4036fc:	mov    rdx,rbx
  4036ff:	lea    r12,[rsp+0x650]
  403707:	lea    rcx,[rax-0x18]
  40370b:	call   0x408188
  403710:	mov    rax,QWORD PTR [rsp+0x640]
  403718:	mov    rdx,rbx
  40371b:	lea    rcx,[rax-0x18]
  40371f:	call   0x408188
  403724:	mov    rax,QWORD PTR [rsp+0x630]
  40372c:	mov    rdx,rbx
  40372f:	lea    rcx,[rax-0x18]
  403733:	call   0x408188
  403738:	lea    rdx,[rip+0x12c81]        # 0x4163c0
  40373f:	mov    r8,rsi
  403742:	mov    rcx,r12
  403745:	call   0x408138
  40374a:	lea    rcx,[rip+0x1992f]        # 0x41d080
  403751:	mov    rdx,r12
  403754:	call   0x40a360
  403759:	lea    rdx,[rip+0x12c6a]        # 0x4163ca
  403760:	mov    rcx,rax
  403763:	call   0x408160
  403768:	mov    rax,QWORD PTR [rsp+0x650]
  403770:	mov    rdx,rbx
  403773:	lea    r12,[rsp+0x660]
  40377b:	lea    rcx,[rax-0x18]
  40377f:	call   0x408188
  403784:	lea    rdx,[rip+0x12c48]        # 0x4163d3
  40378b:	mov    r8,rsi
  40378e:	mov    rcx,r12
  403791:	call   0x408138
  403796:	lea    rcx,[rip+0x198e3]        # 0x41d080
  40379d:	mov    rdx,r12
  4037a0:	call   0x40a360
  4037a5:	lea    rdx,[rip+0x12c34]        # 0x4163e0
  4037ac:	mov    rcx,rax
  4037af:	call   0x408160
  4037b4:	mov    rax,QWORD PTR [rsp+0x660]
  4037bc:	mov    rdx,rbx
  4037bf:	lea    r12,[rsp+0x670]
  4037c7:	lea    rcx,[rax-0x18]
  4037cb:	call   0x408188
  4037d0:	lea    rdx,[rip+0x12c15]        # 0x4163ec
  4037d7:	mov    r8,rsi
  4037da:	mov    rcx,r12
  4037dd:	call   0x408138
  4037e2:	lea    rcx,[rip+0x19897]        # 0x41d080
  4037e9:	mov    rdx,r12
  4037ec:	call   0x40a360
  4037f1:	lea    rdx,[rip+0x12c02]        # 0x4163fa
  4037f8:	mov    rcx,rax
  4037fb:	call   0x408160
  403800:	mov    rax,QWORD PTR [rsp+0x670]
  403808:	mov    rdx,rbx
  40380b:	lea    r13,[rsp+0x690]
  403813:	lea    rcx,[rax-0x18]
  403817:	call   0x408188
  40381c:	lea    rdx,[rip+0x12be2]        # 0x416405
  403823:	mov    r8,rsi
  403826:	mov    rcx,r13
  403829:	call   0x408138
  40382e:	lea    r12,[rsp+0x6a0]
  403836:	lea    rdx,[rip+0x12bd1]        # 0x41640e
  40383d:	mov    r8,r13
  403840:	mov    rcx,r12
  403843:	call   0x401530
  403848:	lea    r13,[rsp+0x680]
  403850:	lea    rdx,[rip+0x12bb7]        # 0x41640e
  403857:	mov    r8,rdi
  40385a:	mov    rcx,r13
  40385d:	call   0x408138
  403862:	lea    rcx,[rip+0x19817]        # 0x41d080
  403869:	mov    rdx,r13
  40386c:	call   0x40a360
  403871:	mov    rdx,r12
  403874:	mov    rcx,rax
  403877:	call   0x408180
  40387c:	mov    rax,QWORD PTR [rsp+0x680]
  403884:	mov    rdx,rbx
  403887:	lea    r13,[rsp+0x6c0]
  40388f:	lea    rcx,[rax-0x18]
  403893:	call   0x408188
  403898:	mov    rax,QWORD PTR [rsp+0x6a0]
  4038a0:	mov    rdx,rbx
  4038a3:	lea    rcx,[rax-0x18]
  4038a7:	call   0x408188
  4038ac:	mov    rax,QWORD PTR [rsp+0x690]
  4038b4:	mov    rdx,rbx
  4038b7:	lea    rcx,[rax-0x18]
  4038bb:	call   0x408188
  4038c0:	lea    rdx,[rip+0x12b53]        # 0x41641a
  4038c7:	mov    r8,rsi
  4038ca:	mov    rcx,r13
  4038cd:	call   0x408138
  4038d2:	lea    r12,[rsp+0x6d0]
  4038da:	lea    rdx,[rip+0x12b40]        # 0x416421
  4038e1:	mov    r8,r13
  4038e4:	mov    rcx,r12
  4038e7:	call   0x401530
  4038ec:	lea    r13,[rsp+0x6b0]
  4038f4:	lea    rdx,[rip+0x12b26]        # 0x416421
  4038fb:	mov    r8,rdi
  4038fe:	mov    rcx,r13
  403901:	call   0x408138
  403906:	lea    rcx,[rip+0x19773]        # 0x41d080
  40390d:	mov    rdx,r13
  403910:	call   0x40a360
  403915:	mov    rdx,r12
  403918:	mov    rcx,rax
  40391b:	call   0x408180
  403920:	mov    rax,QWORD PTR [rsp+0x6b0]
  403928:	mov    rdx,rbx
  40392b:	lea    r13,[rsp+0x6f0]
  403933:	lea    rcx,[rax-0x18]
  403937:	call   0x408188
  40393c:	mov    rax,QWORD PTR [rsp+0x6d0]
  403944:	mov    rdx,rbx
  403947:	lea    rcx,[rax-0x18]
  40394b:	call   0x408188
  403950:	mov    rax,QWORD PTR [rsp+0x6c0]
  403958:	mov    rdx,rbx
  40395b:	lea    rcx,[rax-0x18]
  40395f:	call   0x408188
  403964:	lea    rdx,[rip+0x12ac5]        # 0x416430
  40396b:	mov    r8,rsi
  40396e:	mov    rcx,r13
  403971:	call   0x408138
  403976:	lea    r12,[rsp+0x700]
  40397e:	lea    rdx,[rip+0x12aee]        # 0x416473
  403985:	mov    r8,r13
  403988:	mov    rcx,r12
  40398b:	call   0x401530
  403990:	lea    r13,[rsp+0x6e0]
  403998:	lea    rdx,[rip+0x12ad4]        # 0x416473
  40399f:	mov    r8,rdi
  4039a2:	mov    rcx,r13
  4039a5:	call   0x408138
  4039aa:	lea    rcx,[rip+0x196cf]        # 0x41d080
  4039b1:	mov    rdx,r13
  4039b4:	call   0x40a360
  4039b9:	mov    rdx,r12
  4039bc:	mov    rcx,rax
  4039bf:	call   0x408180
  4039c4:	mov    rax,QWORD PTR [rsp+0x6e0]
  4039cc:	mov    rdx,rbx
  4039cf:	lea    r13,[rsp+0x720]
  4039d7:	lea    rcx,[rax-0x18]
  4039db:	call   0x408188
  4039e0:	mov    rax,QWORD PTR [rsp+0x700]
  4039e8:	mov    rdx,rbx
  4039eb:	lea    rcx,[rax-0x18]
  4039ef:	call   0x408188
  4039f4:	mov    rax,QWORD PTR [rsp+0x6f0]
  4039fc:	mov    rdx,rbx
  4039ff:	lea    rcx,[rax-0x18]
  403a03:	call   0x408188
  403a08:	lea    rdx,[rip+0x12a72]        # 0x416481
  403a0f:	mov    r8,rsi
  403a12:	mov    rcx,r13
  403a15:	call   0x408138
  403a1a:	lea    r12,[rsp+0x730]
  403a22:	lea    rdx,[rip+0x12a61]        # 0x41648a
  403a29:	mov    r8,r13
  403a2c:	mov    rcx,r12
  403a2f:	call   0x401530
  403a34:	lea    r13,[rsp+0x710]
  403a3c:	lea    rdx,[rip+0x12a47]        # 0x41648a
  403a43:	mov    r8,rdi
  403a46:	mov    rcx,r13
  403a49:	call   0x408138
  403a4e:	lea    rcx,[rip+0x1962b]        # 0x41d080
  403a55:	mov    rdx,r13
  403a58:	call   0x40a360
  403a5d:	mov    rdx,r12
  403a60:	mov    rcx,rax
  403a63:	call   0x408180
  403a68:	mov    rax,QWORD PTR [rsp+0x710]
  403a70:	mov    rdx,rbx
  403a73:	lea    r13,[rsp+0x750]
  403a7b:	lea    rcx,[rax-0x18]
  403a7f:	call   0x408188
  403a84:	mov    rax,QWORD PTR [rsp+0x730]
  403a8c:	mov    rdx,rbx
  403a8f:	lea    rcx,[rax-0x18]
  403a93:	call   0x408188
  403a98:	mov    rax,QWORD PTR [rsp+0x720]
  403aa0:	mov    rdx,rbx
  403aa3:	lea    rcx,[rax-0x18]
  403aa7:	call   0x408188
  403aac:	lea    rdx,[rip+0x1297d]        # 0x416430
  403ab3:	mov    r8,rsi
  403ab6:	mov    rcx,r13
  403ab9:	call   0x408138
  403abe:	lea    r12,[rsp+0x760]
  403ac6:	lea    rdx,[rip+0x129c8]        # 0x416495
  403acd:	mov    r8,r13
  403ad0:	mov    rcx,r12
  403ad3:	call   0x401530
  403ad8:	lea    r13,[rsp+0x740]
  403ae0:	lea    rdx,[rip+0x129ae]        # 0x416495
  403ae7:	mov    r8,rdi
  403aea:	mov    rcx,r13
  403aed:	call   0x408138
  403af2:	lea    rcx,[rip+0x19587]        # 0x41d080
  403af9:	mov    rdx,r13
  403afc:	call   0x40a360
  403b01:	mov    rdx,r12
  403b04:	mov    rcx,rax
  403b07:	call   0x408180
  403b0c:	mov    rax,QWORD PTR [rsp+0x740]
  403b14:	mov    rdx,rbx
  403b17:	lea    r13,[rsp+0x780]
  403b1f:	lea    rcx,[rax-0x18]
  403b23:	call   0x408188
  403b28:	mov    rax,QWORD PTR [rsp+0x760]
  403b30:	mov    rdx,rbx
  403b33:	lea    rcx,[rax-0x18]
  403b37:	call   0x408188
  403b3c:	mov    rax,QWORD PTR [rsp+0x750]
  403b44:	mov    rdx,rbx
  403b47:	lea    rcx,[rax-0x18]
  403b4b:	call   0x408188
  403b50:	lea    rdx,[rip+0x1294d]        # 0x4164a4
  403b57:	mov    r8,rsi
  403b5a:	mov    rcx,r13
  403b5d:	call   0x408138
  403b62:	lea    r12,[rsp+0x790]
  403b6a:	lea    rdx,[rip+0x1293d]        # 0x4164ae
  403b71:	mov    r8,r13
  403b74:	mov    rcx,r12
  403b77:	call   0x401530
  403b7c:	lea    r13,[rsp+0x770]
  403b84:	lea    rdx,[rip+0x12923]        # 0x4164ae
  403b8b:	mov    r8,rdi
  403b8e:	mov    rcx,r13
  403b91:	call   0x408138
  403b96:	lea    rcx,[rip+0x194e3]        # 0x41d080
  403b9d:	mov    rdx,r13
  403ba0:	call   0x40a360
  403ba5:	mov    rdx,r12
  403ba8:	mov    rcx,rax
  403bab:	call   0x408180
  403bb0:	mov    rax,QWORD PTR [rsp+0x770]
  403bb8:	mov    rdx,rbx
  403bbb:	lea    r13,[rsp+0x7b0]
  403bc3:	lea    rcx,[rax-0x18]
  403bc7:	call   0x408188
  403bcc:	mov    rax,QWORD PTR [rsp+0x790]
  403bd4:	mov    rdx,rbx
  403bd7:	lea    rcx,[rax-0x18]
  403bdb:	call   0x408188
  403be0:	mov    rax,QWORD PTR [rsp+0x780]
  403be8:	mov    rdx,rbx
  403beb:	lea    rcx,[rax-0x18]
  403bef:	call   0x408188
  403bf4:	lea    rdx,[rip+0x128c5]        # 0x4164c0
  403bfb:	mov    r8,rsi
  403bfe:	mov    rcx,r13
  403c01:	call   0x408138
  403c06:	lea    r12,[rsp+0x7c0]
  403c0e:	lea    rdx,[rip+0x128fb]        # 0x416510
  403c15:	mov    r8,r13
  403c18:	mov    rcx,r12
  403c1b:	call   0x401530
  403c20:	lea    r13,[rsp+0x7a0]
  403c28:	lea    rdx,[rip+0x128e1]        # 0x416510
  403c2f:	mov    r8,rdi
  403c32:	mov    rcx,r13
  403c35:	call   0x408138
  403c3a:	lea    rcx,[rip+0x1943f]        # 0x41d080
  403c41:	mov    rdx,r13
  403c44:	call   0x40a360
  403c49:	mov    rdx,r12
  403c4c:	mov    rcx,rax
  403c4f:	call   0x408180
  403c54:	mov    rax,QWORD PTR [rsp+0x7a0]
  403c5c:	mov    rdx,rbx
  403c5f:	lea    r13,[rsp+0x7e0]
  403c67:	lea    rcx,[rax-0x18]
  403c6b:	call   0x408188
  403c70:	mov    rax,QWORD PTR [rsp+0x7c0]
  403c78:	mov    rdx,rbx
  403c7b:	lea    rcx,[rax-0x18]
  403c7f:	call   0x408188
  403c84:	mov    rax,QWORD PTR [rsp+0x7b0]
  403c8c:	mov    rdx,rbx
  403c8f:	lea    rcx,[rax-0x18]
  403c93:	call   0x408188
  403c98:	lea    rdx,[rip+0x12879]        # 0x416518
  403c9f:	mov    r8,rsi
  403ca2:	mov    rcx,r13
  403ca5:	call   0x408138
  403caa:	lea    r12,[rsp+0x7f0]
  403cb2:	lea    rdx,[rip+0x12aaf]        # 0x416768
  403cb9:	mov    r8,r13
  403cbc:	mov    rcx,r12
  403cbf:	call   0x401530
  403cc4:	lea    r13,[rsp+0x7d0]
  403ccc:	lea    rdx,[rip+0x12a95]        # 0x416768
  403cd3:	mov    r8,rdi
  403cd6:	mov    rcx,r13
  403cd9:	call   0x408138
  403cde:	lea    rcx,[rip+0x1939b]        # 0x41d080
  403ce5:	mov    rdx,r13
  403ce8:	call   0x40a360
  403ced:	mov    rdx,r12
  403cf0:	mov    rcx,rax
  403cf3:	call   0x408180
  403cf8:	mov    rax,QWORD PTR [rsp+0x7d0]
  403d00:	mov    rdx,rbx
  403d03:	lea    r13,[rsp+0x810]
  403d0b:	lea    rcx,[rax-0x18]
  403d0f:	call   0x408188
  403d14:	mov    rax,QWORD PTR [rsp+0x7f0]
  403d1c:	mov    rdx,rbx
  403d1f:	lea    rcx,[rax-0x18]
  403d23:	call   0x408188
  403d28:	mov    rax,QWORD PTR [rsp+0x7e0]
  403d30:	mov    rdx,rbx
  403d33:	lea    rcx,[rax-0x18]
  403d37:	call   0x408188
  403d3c:	lea    rdx,[rip+0x12a2d]        # 0x416770
  403d43:	mov    r8,rsi
  403d46:	mov    rcx,r13
  403d49:	call   0x408138
  403d4e:	lea    r12,[rsp+0x820]
  403d56:	lea    rdx,[rip+0x12eec]        # 0x416c49
  403d5d:	mov    r8,r13
  403d60:	mov    rcx,r12
  403d63:	call   0x401530
  403d68:	lea    r13,[rsp+0x800]
  403d70:	lea    rdx,[rip+0x12ed2]        # 0x416c49
  403d77:	mov    r8,rdi
  403d7a:	mov    rcx,r13
  403d7d:	call   0x408138
  403d82:	lea    rcx,[rip+0x192f7]        # 0x41d080
  403d89:	mov    rdx,r13
  403d8c:	call   0x40a360
  403d91:	mov    rdx,r12
  403d94:	mov    rcx,rax
  403d97:	call   0x408180
  403d9c:	mov    rax,QWORD PTR [rsp+0x800]
  403da4:	mov    rdx,rbx
  403da7:	lea    r13,[rsp+0x840]
  403daf:	lea    rcx,[rax-0x18]
  403db3:	call   0x408188
  403db8:	mov    rax,QWORD PTR [rsp+0x820]
  403dc0:	mov    rdx,rbx
  403dc3:	lea    rcx,[rax-0x18]
  403dc7:	call   0x408188
  403dcc:	mov    rax,QWORD PTR [rsp+0x810]
  403dd4:	mov    rdx,rbx
  403dd7:	lea    rcx,[rax-0x18]
  403ddb:	call   0x408188
  403de0:	lea    rdx,[rip+0x12e79]        # 0x416c60
  403de7:	mov    r8,rsi
  403dea:	mov    rcx,r13
  403ded:	call   0x408138
  403df2:	lea    r12,[rsp+0x850]
  403dfa:	lea    rdx,[rip+0x12fff]        # 0x416e00
  403e01:	mov    r8,r13
  403e04:	mov    rcx,r12
  403e07:	call   0x401530
  403e0c:	lea    r13,[rsp+0x830]
  403e14:	lea    rdx,[rip+0x12fe5]        # 0x416e00
  403e1b:	mov    r8,rdi
  403e1e:	mov    rcx,r13
  403e21:	call   0x408138
  403e26:	lea    rcx,[rip+0x19253]        # 0x41d080
  403e2d:	mov    rdx,r13
  403e30:	call   0x40a360
  403e35:	mov    rdx,r12
  403e38:	mov    rcx,rax
  403e3b:	call   0x408180
  403e40:	mov    rax,QWORD PTR [rsp+0x830]
  403e48:	mov    rdx,rbx
  403e4b:	lea    r13,[rsp+0x870]
  403e53:	lea    rcx,[rax-0x18]
  403e57:	call   0x408188
  403e5c:	mov    rax,QWORD PTR [rsp+0x850]
  403e64:	mov    rdx,rbx
  403e67:	lea    rcx,[rax-0x18]
  403e6b:	call   0x408188
  403e70:	mov    rax,QWORD PTR [rsp+0x840]
  403e78:	mov    rdx,rbx
  403e7b:	lea    rcx,[rax-0x18]
  403e7f:	call   0x408188
  403e84:	lea    rdx,[rip+0x12f8d]        # 0x416e18
  403e8b:	mov    r8,rsi
  403e8e:	mov    rcx,r13
  403e91:	call   0x408138
  403e96:	lea    r12,[rsp+0x880]
  403e9e:	lea    rdx,[rip+0x1344d]        # 0x4172f2
  403ea5:	mov    r8,r13
  403ea8:	mov    rcx,r12
  403eab:	call   0x401530
  403eb0:	lea    r13,[rsp+0x860]
  403eb8:	lea    rdx,[rip+0x13433]        # 0x4172f2
  403ebf:	mov    r8,rdi
  403ec2:	mov    rcx,r13
  403ec5:	call   0x408138
  403eca:	lea    rcx,[rip+0x191af]        # 0x41d080
  403ed1:	mov    rdx,r13
  403ed4:	call   0x40a360
  403ed9:	mov    rdx,r12
  403edc:	mov    rcx,rax
  403edf:	call   0x408180
  403ee4:	mov    rax,QWORD PTR [rsp+0x860]
  403eec:	mov    rdx,rbx
  403eef:	lea    r13,[rsp+0x8a0]
  403ef7:	lea    rcx,[rax-0x18]
  403efb:	call   0x408188
  403f00:	mov    rax,QWORD PTR [rsp+0x880]
  403f08:	mov    rdx,rbx
  403f0b:	lea    rcx,[rax-0x18]
  403f0f:	call   0x408188
  403f14:	mov    rax,QWORD PTR [rsp+0x870]
  403f1c:	mov    rdx,rbx
  403f1f:	lea    rcx,[rax-0x18]
  403f23:	call   0x408188
  403f28:	lea    rdx,[rip+0x133d1]        # 0x417300
  403f2f:	mov    r8,rsi
  403f32:	mov    rcx,r13
  403f35:	call   0x408138
  403f3a:	lea    r12,[rsp+0x8b0]
  403f42:	lea    rdx,[rip+0x13644]        # 0x41758d
  403f49:	mov    r8,r13
  403f4c:	mov    rcx,r12
  403f4f:	call   0x401530
  403f54:	lea    r13,[rsp+0x890]
  403f5c:	lea    rdx,[rip+0x1362a]        # 0x41758d
  403f63:	mov    r8,rdi
  403f66:	mov    rcx,r13
  403f69:	call   0x408138
  403f6e:	lea    rcx,[rip+0x1910b]        # 0x41d080
  403f75:	mov    rdx,r13
  403f78:	call   0x40a360
  403f7d:	mov    rdx,r12
  403f80:	mov    rcx,rax
  403f83:	call   0x408180
  403f88:	mov    rax,QWORD PTR [rsp+0x890]
  403f90:	mov    rdx,rbx
  403f93:	lea    r13,[rsp+0x8d0]
  403f9b:	lea    rcx,[rax-0x18]
  403f9f:	call   0x408188
  403fa4:	mov    rax,QWORD PTR [rsp+0x8b0]
  403fac:	mov    rdx,rbx
  403faf:	lea    rcx,[rax-0x18]
  403fb3:	call   0x408188
  403fb8:	mov    rax,QWORD PTR [rsp+0x8a0]
  403fc0:	mov    rdx,rbx
  403fc3:	lea    rcx,[rax-0x18]
  403fc7:	call   0x408188
  403fcc:	lea    rdx,[rip+0x12333]        # 0x416306
  403fd3:	mov    r8,rsi
  403fd6:	mov    rcx,r13
  403fd9:	call   0x408138
  403fde:	lea    r12,[rsp+0x8e0]
  403fe6:	lea    rdx,[rip+0x135ae]        # 0x41759b
  403fed:	mov    r8,r13
  403ff0:	mov    rcx,r12
  403ff3:	call   0x401530
  403ff8:	lea    r13,[rsp+0x8c0]
  404000:	lea    rdx,[rip+0x13594]        # 0x41759b
  404007:	mov    r8,rdi
  40400a:	mov    rcx,r13
  40400d:	call   0x408138
  404012:	lea    rcx,[rip+0x19067]        # 0x41d080
  404019:	mov    rdx,r13
  40401c:	call   0x40a360
  404021:	mov    rdx,r12
  404024:	mov    rcx,rax
  404027:	call   0x408180
  40402c:	mov    rax,QWORD PTR [rsp+0x8c0]
  404034:	mov    rdx,rbx
  404037:	lea    r13,[rsp+0x900]
  40403f:	lea    rcx,[rax-0x18]
  404043:	call   0x408188
  404048:	mov    rax,QWORD PTR [rsp+0x8e0]
  404050:	mov    rdx,rbx
  404053:	lea    rcx,[rax-0x18]
  404057:	call   0x408188
  40405c:	mov    rax,QWORD PTR [rsp+0x8d0]
  404064:	mov    rdx,rbx
  404067:	lea    rcx,[rax-0x18]
  40406b:	call   0x408188
  404070:	lea    rdx,[rip+0x13531]        # 0x4175a8
  404077:	mov    r8,rsi
  40407a:	mov    rcx,r13
  40407d:	call   0x408138
  404082:	lea    r12,[rsp+0x910]
  40408a:	lea    rdx,[rip+0x13604]        # 0x417695
  404091:	mov    r8,r13
  404094:	mov    rcx,r12
  404097:	call   0x401530
  40409c:	lea    r13,[rsp+0x8f0]
  4040a4:	lea    rdx,[rip+0x135ea]        # 0x417695
  4040ab:	mov    r8,rdi
  4040ae:	mov    rcx,r13
  4040b1:	call   0x408138
  4040b6:	lea    rcx,[rip+0x18fc3]        # 0x41d080
  4040bd:	mov    rdx,r13
  4040c0:	call   0x40a360
  4040c5:	mov    rdx,r12
  4040c8:	mov    rcx,rax
  4040cb:	call   0x408180
  4040d0:	mov    rax,QWORD PTR [rsp+0x8f0]
  4040d8:	mov    rdx,rbx
  4040db:	lea    r13,[rsp+0x930]
  4040e3:	lea    rcx,[rax-0x18]
  4040e7:	call   0x408188
  4040ec:	mov    rax,QWORD PTR [rsp+0x910]
  4040f4:	mov    rdx,rbx
  4040f7:	lea    rcx,[rax-0x18]
  4040fb:	call   0x408188
  404100:	mov    rax,QWORD PTR [rsp+0x900]
  404108:	mov    rdx,rbx
  40410b:	lea    rcx,[rax-0x18]
  40410f:	call   0x408188
  404114:	lea    rdx,[rip+0x11ee5]        # 0x416000
  40411b:	mov    r8,rsi
  40411e:	mov    rcx,r13
  404121:	call   0x408138
  404126:	lea    r12,[rsp+0x940]
  40412e:	lea    rdx,[rip+0x13568]        # 0x41769d
  404135:	mov    r8,r13
  404138:	mov    rcx,r12
  40413b:	call   0x401530
  404140:	lea    r13,[rsp+0x920]
  404148:	lea    rdx,[rip+0x1354e]        # 0x41769d
  40414f:	mov    r8,rdi
  404152:	mov    rcx,r13
  404155:	call   0x408138
  40415a:	lea    rcx,[rip+0x18f1f]        # 0x41d080
  404161:	mov    rdx,r13
  404164:	call   0x40a360
  404169:	mov    rdx,r12
  40416c:	mov    rcx,rax
  40416f:	call   0x408180
  404174:	mov    rax,QWORD PTR [rsp+0x920]
  40417c:	mov    rdx,rbx
  40417f:	lea    r12,[rsp+0x960]
  404187:	lea    rcx,[rax-0x18]
  40418b:	call   0x408188
  404190:	mov    rax,QWORD PTR [rsp+0x940]
  404198:	mov    rdx,rbx
  40419b:	lea    rcx,[rax-0x18]
  40419f:	call   0x408188
  4041a4:	mov    rax,QWORD PTR [rsp+0x930]
  4041ac:	mov    rdx,rbx
  4041af:	lea    rcx,[rax-0x18]
  4041b3:	call   0x408188
  4041b8:	lea    rdx,[rip+0x134ed]        # 0x4176ac
  4041bf:	mov    r8,rbp
  4041c2:	mov    rcx,r12
  4041c5:	call   0x401530
  4041ca:	lea    rbp,[rsp+0x950]
  4041d2:	lea    rdx,[rip+0x134d3]        # 0x4176ac
  4041d9:	mov    r8,rsi
  4041dc:	mov    rcx,rbp
  4041df:	call   0x408138
  4041e4:	lea    rcx,[rip+0x18e95]        # 0x41d080
  4041eb:	mov    rdx,rbp
  4041ee:	call   0x40a360
  4041f3:	mov    rdx,r12
  4041f6:	mov    rcx,rax
  4041f9:	call   0x408180
  4041fe:	mov    rax,QWORD PTR [rsp+0x950]
  404206:	mov    rdx,rbx
  404209:	lea    r12,[rsp+0x980]
  404211:	lea    rcx,[rax-0x18]
  404215:	call   0x408188
  40421a:	mov    rax,QWORD PTR [rsp+0x960]
  404222:	mov    rdx,rbx
  404225:	lea    rcx,[rax-0x18]
  404229:	call   0x408188
  40422e:	lea    rdx,[rip+0x11dcb]        # 0x416000
  404235:	mov    r8,rsi
  404238:	mov    rcx,r12
  40423b:	call   0x408138
  404240:	lea    rbp,[rsp+0x990]
  404248:	lea    rdx,[rip+0x13464]        # 0x4176b3
  40424f:	mov    r8,r12
  404252:	mov    rcx,rbp
  404255:	call   0x401530
  40425a:	lea    r12,[rsp+0x970]
  404262:	lea    rdx,[rip+0x1344a]        # 0x4176b3
  404269:	mov    r8,rdi
  40426c:	mov    rcx,r12
  40426f:	call   0x408138
  404274:	lea    rcx,[rip+0x18e05]        # 0x41d080
  40427b:	mov    rdx,r12
  40427e:	call   0x40a360
  404283:	mov    rdx,rbp
  404286:	mov    rcx,rax
  404289:	call   0x408180
  40428e:	mov    rax,QWORD PTR [rsp+0x970]
  404296:	mov    rdx,rbx
  404299:	lea    rbp,[rsp+0x9d0]
  4042a1:	lea    rcx,[rax-0x18]
  4042a5:	call   0x408188
  4042aa:	mov    rax,QWORD PTR [rsp+0x990]
  4042b2:	mov    rdx,rbx
  4042b5:	lea    rcx,[rax-0x18]
  4042b9:	call   0x408188
  4042be:	mov    rax,QWORD PTR [rsp+0x980]
  4042c6:	mov    rdx,rbx
  4042c9:	lea    rcx,[rax-0x18]
  4042cd:	call   0x408188
  4042d2:	lea    rdx,[rip+0x133da]        # 0x4176b3
  4042d9:	mov    r8,rsi
  4042dc:	mov    rcx,rbp
  4042df:	call   0x408138
  4042e4:	lea    rcx,[rip+0x18d95]        # 0x41d080
  4042eb:	mov    rdx,rbp
  4042ee:	call   0x40a360
  4042f3:	lea    rbp,[rsp+0x9b0]
  4042fb:	lea    rdx,[rip+0x11fd2]        # 0x4162d4
  404302:	mov    r8,rdi
  404305:	mov    r13,rax
  404308:	mov    rcx,rbp
  40430b:	call   0x408138
  404310:	lea    rcx,[rip+0x18d69]        # 0x41d080
  404317:	mov    rdx,rbp
  40431a:	call   0x40a360
  40431f:	lea    r12,[rsp+0x9c0]
  404327:	lea    r8,[rip+0x13397]        # 0x4176c5
  40432e:	mov    rdx,rax
  404331:	mov    rcx,r12
  404334:	call   0x40b010
  404339:	lea    rbp,[rsp+0x9e0]
  404341:	mov    r8,r13
  404344:	mov    rdx,r12
  404347:	mov    rcx,rbp
  40434a:	call   0x40aef0
  40434f:	mov    r15,QWORD PTR [rsp+0x30]
  404354:	lea    r12,[rsp+0x9a0]
  40435c:	lea    rdx,[rip+0x13364]        # 0x4176c7
  404363:	mov    rcx,r12
  404366:	mov    r8,r15
  404369:	call   0x408138
  40436e:	lea    rcx,[rip+0x18d0b]        # 0x41d080
  404375:	mov    rdx,r12
  404378:	call   0x40a360
  40437d:	mov    rdx,rbp
  404380:	mov    rcx,rax
  404383:	call   0x408180
  404388:	mov    rax,QWORD PTR [rsp+0x9a0]
  404390:	mov    rdx,rbx
  404393:	lea    rbp,[rsp+0xa50]
  40439b:	lea    rcx,[rax-0x18]
  40439f:	call   0x408188
  4043a4:	mov    rax,QWORD PTR [rsp+0x9e0]
  4043ac:	mov    rdx,rbx
  4043af:	lea    rcx,[rax-0x18]
  4043b3:	call   0x408188
  4043b8:	mov    rax,QWORD PTR [rsp+0x9c0]
  4043c0:	mov    rdx,rbx
  4043c3:	lea    rcx,[rax-0x18]
  4043c7:	call   0x408188
  4043cc:	mov    rax,QWORD PTR [rsp+0x9b0]
  4043d4:	mov    rdx,rbx
  4043d7:	lea    rcx,[rax-0x18]
  4043db:	call   0x408188
  4043e0:	mov    rax,QWORD PTR [rsp+0x9d0]
  4043e8:	mov    rdx,rbx
  4043eb:	lea    rcx,[rax-0x18]
  4043ef:	call   0x408188
  4043f4:	lea    rdx,[rip+0x11efb]        # 0x4162f6
  4043fb:	mov    r8,rsi
  4043fe:	mov    rcx,rbp
  404401:	call   0x408138
  404406:	lea    rcx,[rip+0x18c73]        # 0x41d080
  40440d:	mov    rdx,rbp
  404410:	call   0x40a360
  404415:	lea    rbp,[rsp+0xa20]
  40441d:	lea    rdx,[rip+0x11f1e]        # 0x416342
  404424:	mov    r8,rdi
  404427:	mov    r13,rax
  40442a:	mov    rcx,rbp
  40442d:	call   0x408138
  404432:	lea    rcx,[rip+0x18c47]        # 0x41d080
  404439:	mov    rdx,rbp
  40443c:	call   0x40a360
  404441:	lea    rbp,[rsp+0xa00]
  404449:	lea    rdx,[rip+0x11e67]        # 0x4162b7
  404450:	mov    r8,r15
  404453:	mov    r14,rax
  404456:	mov    rcx,rbp
  404459:	call   0x408138
  40445e:	lea    rcx,[rip+0x18c1b]        # 0x41d080
  404465:	mov    rdx,rbp
  404468:	call   0x40a360
  40446d:	lea    r12,[rsp+0xa10]
  404475:	lea    r8,[rip+0x13249]        # 0x4176c5
  40447c:	mov    rdx,rax
  40447f:	mov    rcx,r12
  404482:	call   0x40b010
  404487:	lea    rbp,[rsp+0xa30]
  40448f:	mov    r8,r14
  404492:	mov    rdx,r12
  404495:	mov    rcx,rbp
  404498:	call   0x40aef0
  40449d:	lea    r12,[rsp+0xa40]
  4044a5:	lea    r8,[rip+0x13219]        # 0x4176c5
  4044ac:	mov    rdx,rbp
  4044af:	mov    rcx,r12
  4044b2:	call   0x40aea0
  4044b7:	lea    rbp,[rsp+0xa60]
  4044bf:	mov    r8,r13
  4044c2:	mov    rdx,r12
  4044c5:	mov    rcx,rbp
  4044c8:	call   0x40aef0
  4044cd:	lea    r12,[rsp+0x9f0]
  4044d5:	mov    r8,QWORD PTR [rsp+0x28]
  4044da:	lea    rdx,[rip+0x131f1]        # 0x4176d2
  4044e1:	mov    rcx,r12
  4044e4:	call   0x408138
  4044e9:	lea    rcx,[rip+0x18b90]        # 0x41d080
  4044f0:	mov    rdx,r12
  4044f3:	call   0x40a360
  4044f8:	mov    rdx,rbp
  4044fb:	mov    rcx,rax
  4044fe:	call   0x408180
  404503:	mov    rax,QWORD PTR [rsp+0x9f0]
  40450b:	mov    rdx,rbx
  40450e:	lea    rbp,[rsp+0xad0]
  404516:	lea    rcx,[rax-0x18]
  40451a:	call   0x408188
  40451f:	mov    rax,QWORD PTR [rsp+0xa60]
  404527:	mov    rdx,rbx
  40452a:	lea    rcx,[rax-0x18]
  40452e:	call   0x408188
  404533:	mov    rax,QWORD PTR [rsp+0xa40]
  40453b:	mov    rdx,rbx
  40453e:	lea    rcx,[rax-0x18]
  404542:	call   0x408188
  404547:	mov    rax,QWORD PTR [rsp+0xa30]
  40454f:	mov    rdx,rbx
  404552:	lea    rcx,[rax-0x18]
  404556:	call   0x408188
  40455b:	mov    rax,QWORD PTR [rsp+0xa10]
  404563:	mov    rdx,rbx
  404566:	lea    rcx,[rax-0x18]
  40456a:	call   0x408188
  40456f:	mov    rax,QWORD PTR [rsp+0xa00]
  404577:	mov    rdx,rbx
  40457a:	lea    rcx,[rax-0x18]
  40457e:	call   0x408188
  404583:	mov    rax,QWORD PTR [rsp+0xa20]
  40458b:	mov    rdx,rbx
  40458e:	lea    rcx,[rax-0x18]
  404592:	call   0x408188
  404597:	mov    rax,QWORD PTR [rsp+0xa50]
  40459f:	mov    rdx,rbx
  4045a2:	lea    rcx,[rax-0x18]
  4045a6:	call   0x408188
  4045ab:	lea    rdx,[rip+0x11d69]        # 0x41631b
  4045b2:	mov    r8,rsi
  4045b5:	mov    rcx,rbp
  4045b8:	call   0x408138
  4045bd:	lea    rcx,[rip+0x18abc]        # 0x41d080
  4045c4:	mov    rdx,rbp
  4045c7:	call   0x40a360
  4045cc:	lea    rbp,[rsp+0xaa0]
  4045d4:	lea    rdx,[rip+0x11d73]        # 0x41634e
  4045db:	mov    r8,rdi
  4045de:	mov    r13,rax
  4045e1:	mov    rcx,rbp
  4045e4:	call   0x408138
  4045e9:	lea    rcx,[rip+0x18a90]        # 0x41d080
  4045f0:	mov    rdx,rbp
  4045f3:	call   0x40a360
  4045f8:	lea    rbp,[rsp+0xa80]
  404600:	lea    rdx,[rip+0x11cb0]        # 0x4162b7
  404607:	mov    r8,r15
  40460a:	mov    r14,rax
  40460d:	mov    rcx,rbp
  404610:	call   0x408138
  404615:	lea    rcx,[rip+0x18a64]        # 0x41d080
  40461c:	mov    rdx,rbp
  40461f:	call   0x40a360
  404624:	lea    r12,[rsp+0xa90]
  40462c:	lea    r8,[rip+0x13092]        # 0x4176c5
  404633:	mov    rdx,rax
  404636:	mov    rcx,r12
  404639:	call   0x40b010
  40463e:	lea    rbp,[rsp+0xab0]
  404646:	mov    r8,r14
  404649:	mov    rdx,r12
  40464c:	mov    rcx,rbp
  40464f:	call   0x40aef0
  404654:	lea    r12,[rsp+0xac0]
  40465c:	lea    r8,[rip+0x13062]        # 0x4176c5
  404663:	mov    rdx,rbp
  404666:	mov    rcx,r12
  404669:	call   0x40aea0
  40466e:	lea    rbp,[rsp+0xae0]
  404676:	mov    r8,r13
  404679:	mov    rdx,r12
  40467c:	mov    rcx,rbp
  40467f:	call   0x40aef0
  404684:	lea    r12,[rsp+0xa70]
  40468c:	mov    r8,QWORD PTR [rsp+0x28]
  404691:	lea    rdx,[rip+0x13045]        # 0x4176dd
  404698:	mov    rcx,r12
  40469b:	call   0x408138
  4046a0:	lea    rcx,[rip+0x189d9]        # 0x41d080
  4046a7:	mov    rdx,r12
  4046aa:	call   0x40a360
  4046af:	mov    rdx,rbp
  4046b2:	mov    rcx,rax
  4046b5:	call   0x408180
  4046ba:	mov    rax,QWORD PTR [rsp+0xa70]
  4046c2:	mov    rdx,rbx
  4046c5:	lea    rbp,[rsp+0xb50]
  4046cd:	lea    rcx,[rax-0x18]
  4046d1:	call   0x408188
  4046d6:	mov    rax,QWORD PTR [rsp+0xae0]
  4046de:	mov    rdx,rbx
  4046e1:	lea    rcx,[rax-0x18]
  4046e5:	call   0x408188
  4046ea:	mov    rax,QWORD PTR [rsp+0xac0]
  4046f2:	mov    rdx,rbx
  4046f5:	lea    rcx,[rax-0x18]
  4046f9:	call   0x408188
  4046fe:	mov    rax,QWORD PTR [rsp+0xab0]
  404706:	mov    rdx,rbx
  404709:	lea    rcx,[rax-0x18]
  40470d:	call   0x408188
  404712:	mov    rax,QWORD PTR [rsp+0xa90]
  40471a:	mov    rdx,rbx
  40471d:	lea    rcx,[rax-0x18]
  404721:	call   0x408188
  404726:	mov    rax,QWORD PTR [rsp+0xa80]
  40472e:	mov    rdx,rbx
  404731:	lea    rcx,[rax-0x18]
  404735:	call   0x408188
  40473a:	mov    rax,QWORD PTR [rsp+0xaa0]
  404742:	mov    rdx,rbx
  404745:	lea    rcx,[rax-0x18]
  404749:	call   0x408188
  40474e:	mov    rax,QWORD PTR [rsp+0xad0]
  404756:	mov    rdx,rbx
  404759:	lea    rcx,[rax-0x18]
  40475d:	call   0x408188
  404762:	lea    rdx,[rip+0x12f2c]        # 0x417695
  404769:	mov    r8,rsi
  40476c:	mov    rcx,rbp
  40476f:	call   0x408138
  404774:	lea    rcx,[rip+0x18905]        # 0x41d080
  40477b:	mov    rdx,rbp
  40477e:	call   0x40a360
  404783:	lea    rbp,[rsp+0xb20]
  40478b:	lea    rdx,[rip+0x11b6b]        # 0x4162fd
  404792:	mov    r8,rdi
  404795:	mov    r13,rax
  404798:	mov    rcx,rbp
  40479b:	call   0x408138
  4047a0:	lea    rcx,[rip+0x188d9]        # 0x41d080
  4047a7:	mov    rdx,rbp
  4047aa:	call   0x40a360
  4047af:	lea    rbp,[rsp+0xb00]
  4047b7:	lea    rdx,[rip+0x12edf]        # 0x41769d
  4047be:	mov    r8,r15
  4047c1:	mov    r14,rax
  4047c4:	mov    rcx,rbp
  4047c7:	call   0x408138
  4047cc:	lea    rcx,[rip+0x188ad]        # 0x41d080
  4047d3:	mov    rdx,rbp
  4047d6:	call   0x40a360
  4047db:	lea    r12,[rsp+0xb10]
  4047e3:	lea    r8,[rip+0x12edb]        # 0x4176c5
  4047ea:	mov    rdx,rax
  4047ed:	mov    rcx,r12
  4047f0:	call   0x40b010
  4047f5:	lea    rbp,[rsp+0xb30]
  4047fd:	mov    r8,r14
  404800:	mov    rdx,r12
  404803:	mov    rcx,rbp
  404806:	call   0x40aef0
  40480b:	lea    r12,[rsp+0xb40]
  404813:	lea    r8,[rip+0x12eab]        # 0x4176c5
  40481a:	mov    rdx,rbp
  40481d:	mov    rcx,r12
  404820:	call   0x40aea0
  404825:	lea    rbp,[rsp+0xb60]
  40482d:	mov    r8,r13
  404830:	mov    rdx,r12
  404833:	mov    rcx,rbp
  404836:	call   0x40aef0
  40483b:	lea    r12,[rsp+0xaf0]
  404843:	mov    r8,QWORD PTR [rsp+0x28]
  404848:	lea    rdx,[rip+0x12e9b]        # 0x4176ea
  40484f:	mov    rcx,r12
  404852:	call   0x408138
  404857:	lea    rcx,[rip+0x18822]        # 0x41d080
  40485e:	mov    rdx,r12
  404861:	call   0x40a360
  404866:	mov    rdx,rbp
  404869:	mov    rcx,rax
  40486c:	call   0x408180
  404871:	mov    rax,QWORD PTR [rsp+0xaf0]
  404879:	mov    rdx,rbx
  40487c:	lea    r14,[rsp+0xbd0]
  404884:	lea    rcx,[rax-0x18]
  404888:	call   0x408188
  40488d:	mov    rax,QWORD PTR [rsp+0xb60]
  404895:	mov    rdx,rbx
  404898:	lea    rcx,[rax-0x18]
  40489c:	call   0x408188
  4048a1:	mov    rax,QWORD PTR [rsp+0xb40]
  4048a9:	mov    rdx,rbx
  4048ac:	lea    rcx,[rax-0x18]
  4048b0:	call   0x408188
  4048b5:	mov    rax,QWORD PTR [rsp+0xb30]
  4048bd:	mov    rdx,rbx
  4048c0:	lea    rcx,[rax-0x18]
  4048c4:	call   0x408188
  4048c9:	mov    rax,QWORD PTR [rsp+0xb10]
  4048d1:	mov    rdx,rbx
  4048d4:	lea    rcx,[rax-0x18]
  4048d8:	call   0x408188
  4048dd:	mov    rax,QWORD PTR [rsp+0xb00]
  4048e5:	mov    rdx,rbx
  4048e8:	lea    rcx,[rax-0x18]
  4048ec:	call   0x408188
  4048f1:	mov    rax,QWORD PTR [rsp+0xb20]
  4048f9:	mov    rdx,rbx
  4048fc:	lea    rcx,[rax-0x18]
  404900:	call   0x408188
  404905:	mov    rax,QWORD PTR [rsp+0xb50]
  40490d:	mov    rdx,rbx
  404910:	lea    rcx,[rax-0x18]
  404914:	call   0x408188
  404919:	lea    rdx,[rip+0x12dd6]        # 0x4176f6
  404920:	mov    r8,rsi
  404923:	mov    rcx,r14
  404926:	call   0x408138
  40492b:	lea    rcx,[rip+0x1874e]        # 0x41d080
  404932:	mov    rdx,r14
  404935:	call   0x40a360
  40493a:	mov    r13,rax
  40493d:	lea    rax,[rsp+0xba0]
  404945:	lea    rdx,[rip+0x11a74]        # 0x4163c0
  40494c:	mov    r8,rdi
  40494f:	mov    rcx,rax
  404952:	mov    rbp,rax
  404955:	call   0x408138
  40495a:	lea    rcx,[rip+0x1871f]        # 0x41d080
  404961:	mov    rdx,rbp
  404964:	mov    QWORD PTR [rsp+0x48],rbp
  404969:	call   0x40a360
  40496e:	lea    rbp,[rsp+0xb80]
  404976:	lea    rdx,[rip+0x11a56]        # 0x4163d3
  40497d:	mov    r8,r15
  404980:	mov    r12,rax
  404983:	mov    QWORD PTR [rsp+0x30],r15
  404988:	mov    rcx,rbp
  40498b:	call   0x408138
  404990:	lea    rcx,[rip+0x186e9]        # 0x41d080
  404997:	mov    rdx,rbp
  40499a:	call   0x40a360
  40499f:	lea    rdx,[rsp+0xb90]
  4049a7:	lea    r8,[rip+0x12d17]        # 0x4176c5
  4049ae:	mov    r15,rdx
  4049b1:	mov    rdx,rax
  4049b4:	mov    rcx,r15
  4049b7:	call   0x40b010
  4049bc:	lea    rbp,[rsp+0xbb0]
  4049c4:	mov    r8,r12
  4049c7:	mov    rdx,r15
  4049ca:	mov    QWORD PTR [rsp+0x40],r15
  4049cf:	mov    rcx,rbp
  4049d2:	call   0x40aef0
  4049d7:	lea    r12,[rsp+0xbc0]
  4049df:	lea    r8,[rip+0x12cdf]        # 0x4176c5
  4049e6:	mov    rdx,rbp
  4049e9:	mov    rcx,r12
  4049ec:	call   0x40aea0
  4049f1:	lea    r15,[rsp+0xbe0]
  4049f9:	mov    r8,r13
  4049fc:	mov    rdx,r12
  4049ff:	mov    rcx,r15
  404a02:	call   0x40aef0
  404a07:	lea    r13,[rsp+0xb70]
  404a0f:	mov    r8,QWORD PTR [rsp+0x28]
  404a14:	lea    rdx,[rip+0x12cec]        # 0x417707
  404a1b:	mov    rcx,r13
  404a1e:	call   0x408138
  404a23:	lea    rcx,[rip+0x18656]        # 0x41d080
  404a2a:	mov    rdx,r13
  404a2d:	call   0x40a360
  404a32:	mov    rdx,r15
  404a35:	mov    rcx,rax
  404a38:	call   0x408180
  404a3d:	mov    rax,QWORD PTR [rsp+0xb70]
  404a45:	mov    rdx,rbx
  404a48:	lea    rcx,[rax-0x18]
  404a4c:	call   0x408188
  404a51:	mov    rax,QWORD PTR [rsp+0xbe0]
  404a59:	mov    rdx,rbx
  404a5c:	lea    rcx,[rax-0x18]
  404a60:	call   0x408188
  404a65:	mov    rax,QWORD PTR [rsp+0xbc0]
  404a6d:	mov    rdx,rbx
  404a70:	lea    rcx,[rax-0x18]
  404a74:	call   0x408188
  404a79:	mov    rax,QWORD PTR [rsp+0xbb0]
  404a81:	mov    rdx,rbx
  404a84:	lea    rcx,[rax-0x18]
  404a88:	call   0x408188
  404a8d:	mov    rax,QWORD PTR [rsp+0xb90]
  404a95:	mov    rdx,rbx
  404a98:	lea    rcx,[rax-0x18]
  404a9c:	call   0x408188
  404aa1:	mov    rax,QWORD PTR [rsp+0xb80]
  404aa9:	mov    rdx,rbx
  404aac:	lea    rcx,[rax-0x18]
  404ab0:	call   0x408188
  404ab5:	mov    rax,QWORD PTR [rsp+0xba0]
  404abd:	mov    rdx,rbx
  404ac0:	lea    rcx,[rax-0x18]
  404ac4:	call   0x408188
  404ac9:	mov    rax,QWORD PTR [rsp+0xbd0]
  404ad1:	mov    rdx,rbx
  404ad4:	lea    rcx,[rax-0x18]
  404ad8:	call   0x408188
  404add:	lea    rdx,[rip+0x119ca]        # 0x4164ae
  404ae4:	mov    r8,r14
  404ae7:	mov    rcx,rsi
  404aea:	call   0x408138
  404aef:	lea    rcx,[rip+0x1858a]        # 0x41d080
  404af6:	mov    rdx,rsi
  404af9:	call   0x40a360
  404afe:	mov    r14,QWORD PTR [rsp+0x28]
  404b03:	lea    rdx,[rip+0x1198b]        # 0x416495
  404b0a:	mov    r8,r12
  404b0d:	mov    r13,rax
  404b10:	mov    rcx,r14
  404b13:	call   0x408138
  404b18:	lea    rcx,[rip+0x18561]        # 0x41d080
  404b1f:	mov    rdx,r14
  404b22:	call   0x40a360
  404b27:	lea    rsi,[rsp+0xc20]
  404b2f:	lea    rdx,[rip+0x11954]        # 0x41648a
  404b36:	mov    r8,rbp
  404b39:	mov    r12,rax
  404b3c:	mov    rcx,rsi
  404b3f:	call   0x408138
  404b44:	lea    rcx,[rip+0x18535]        # 0x41d080
  404b4b:	mov    rdx,rsi
  404b4e:	call   0x40a360
  404b53:	lea    rsi,[rsp+0xc00]
  404b5b:	mov    r8,QWORD PTR [rsp+0x48]
  404b60:	lea    rdx,[rip+0x1190c]        # 0x416473
  404b67:	mov    r14,rax
  404b6a:	mov    rcx,rsi
  404b6d:	call   0x408138
  404b72:	lea    rcx,[rip+0x18507]        # 0x41d080
  404b79:	mov    rdx,rsi
  404b7c:	call   0x40a360
  404b81:	lea    rbp,[rsp+0xc10]
  404b89:	lea    r8,[rip+0x12b35]        # 0x4176c5
  404b90:	mov    rdx,rax
  404b93:	mov    rcx,rbp
  404b96:	call   0x40b010
  404b9b:	lea    rsi,[rsp+0xc30]
  404ba3:	mov    r8,r14
  404ba6:	mov    rdx,rbp
  404ba9:	mov    rcx,rsi
  404bac:	call   0x40aef0
  404bb1:	mov    r14,QWORD PTR [rsp+0x50]
  404bb6:	lea    r8,[rip+0x12b08]        # 0x4176c5
  404bbd:	mov    rdx,rsi
  404bc0:	mov    rcx,r14
  404bc3:	call   0x40aea0
  404bc8:	mov    rsi,QWORD PTR [rsp+0x30]
  404bcd:	mov    r8,r12
  404bd0:	mov    rdx,r14
  404bd3:	mov    rcx,rsi
  404bd6:	call   0x40aef0
  404bdb:	lea    r8,[rip+0x12ae3]        # 0x4176c5
  404be2:	mov    rdx,rsi
  404be5:	mov    rcx,rdi
  404be8:	call   0x40aea0
  404bed:	mov    r8,r13
  404bf0:	mov    rdx,rdi
  404bf3:	mov    rcx,rbx
  404bf6:	call   0x40aef0
  404bfb:	lea    rsi,[rsp+0xbf0]
  404c03:	mov    r8,QWORD PTR [rsp+0x40]
  404c08:	lea    rdx,[rip+0x12b04]        # 0x417713
  404c0f:	mov    rcx,rsi
  404c12:	call   0x408138
  404c17:	lea    rcx,[rip+0x18462]        # 0x41d080
  404c1e:	mov    rdx,rsi
  404c21:	call   0x40a360
  404c26:	mov    rdx,rbx
  404c29:	mov    rcx,rax
  404c2c:	call   0x408180
  404c31:	mov    rax,QWORD PTR [rsp+0xbf0]
  404c39:	mov    rdx,r15
  404c3c:	lea    rcx,[rax-0x18]
  404c40:	call   0x408188
  404c45:	mov    rax,QWORD PTR [rsp+0xc90]
  404c4d:	mov    rdx,rsi
  404c50:	lea    rcx,[rax-0x18]
  404c54:	call   0x408188
  404c59:	mov    rax,QWORD PTR [rsp+0xc70]
  404c61:	mov    rdx,rbx
  404c64:	lea    rcx,[rax-0x18]
  404c68:	call   0x408188
  404c6d:	mov    rax,QWORD PTR [rsp+0xc60]
  404c75:	mov    rdx,rbx
  404c78:	lea    rcx,[rax-0x18]
  404c7c:	call   0x408188
  404c81:	mov    rax,QWORD PTR [rsp+0xc40]
  404c89:	mov    rdx,rbx
  404c8c:	lea    rcx,[rax-0x18]
  404c90:	call   0x408188
  404c95:	mov    rax,QWORD PTR [rsp+0xc30]
  404c9d:	mov    rdx,rbx
  404ca0:	lea    rcx,[rax-0x18]
  404ca4:	call   0x408188
  404ca9:	mov    rax,QWORD PTR [rsp+0xc10]
  404cb1:	mov    rdx,rbx
  404cb4:	lea    rcx,[rax-0x18]
  404cb8:	call   0x408188
  404cbd:	mov    rax,QWORD PTR [rsp+0xc00]
  404cc5:	mov    rdx,rbx
  404cc8:	lea    rcx,[rax-0x18]
  404ccc:	call   0x408188
  404cd1:	mov    rax,QWORD PTR [rsp+0xc20]
  404cd9:	mov    rdx,rbx
  404cdc:	lea    rcx,[rax-0x18]
  404ce0:	call   0x408188
  404ce5:	mov    rax,QWORD PTR [rsp+0xc50]
  404ced:	mov    rdx,rbx
  404cf0:	lea    rcx,[rax-0x18]
  404cf4:	call   0x408188
  404cf9:	mov    rax,QWORD PTR [rsp+0xc80]
  404d01:	mov    rdx,rbx
  404d04:	lea    rcx,[rax-0x18]
  404d08:	call   0x408188
  404d0d:	mov    rax,QWORD PTR [rsp+0x230]
  404d15:	mov    rdx,rbx
  404d18:	lea    rcx,[rax-0x18]
  404d1c:	call   0x408188
  404d21:	mov    rax,QWORD PTR [rsp+0x170]
  404d29:	mov    rdx,rbx
  404d2c:	lea    rcx,[rax-0x18]
  404d30:	call   0x408188
  404d35:	mov    rax,QWORD PTR [rsp+0xa0]
  404d3d:	mov    rdx,rbx
  404d40:	lea    rcx,[rax-0x18]
  404d44:	call   0x408188
  404d49:	mov    rax,QWORD PTR [rsp+0x90]
  404d51:	mov    rdx,rbx
  404d54:	lea    rcx,[rax-0x18]
  404d58:	call   0x408188
  404d5d:	mov    rax,QWORD PTR [rsp+0x80]
  404d65:	mov    rdx,rbx
  404d68:	lea    rcx,[rax-0x18]
  404d6c:	call   0x408188
  404d71:	mov    rax,QWORD PTR [rsp+0x70]
  404d76:	mov    rdx,rbx
  404d79:	lea    rcx,[rax-0x18]
  404d7d:	call   0x408188
  404d82:	nop
  404d83:	add    rsp,0xca8
  404d8a:	pop    rbx
  404d8b:	pop    rsi
  404d8c:	pop    rdi
  404d8d:	pop    rbp
  404d8e:	pop    r12
  404d90:	pop    r13
  404d92:	pop    r14
  404d94:	pop    r15
  404d96:	ret    
  404d97:	mov    rcx,QWORD PTR [rsp+0x38]
  404d9c:	xor    edx,edx
  404d9e:	call   0x408150
  404da3:	jmp    0x402769
  404da8:	mov    rsi,rax
  404dab:	mov    rax,QWORD PTR [rsp+0x1b0]
  404db3:	mov    rdx,rbx
  404db6:	lea    rcx,[rax-0x18]
  404dba:	call   0x408188
  404dbf:	mov    rax,QWORD PTR [rsp+0x1a0]
  404dc7:	mov    rdx,rbx
  404dca:	lea    rcx,[rax-0x18]
  404dce:	call   0x408188
  404dd3:	mov    rax,QWORD PTR [rsp+0x190]
  404ddb:	mov    rdx,rbx
  404dde:	lea    rcx,[rax-0x18]
  404de2:	call   0x408188
  404de7:	mov    rax,QWORD PTR [rsp+0x180]
  404def:	mov    rdx,rbx
  404df2:	lea    rcx,[rax-0x18]
  404df6:	call   0x408188
  404dfb:	mov    rax,QWORD PTR [rsp+0x1e0]
  404e03:	mov    rdx,rbx
  404e06:	lea    rcx,[rax-0x18]
  404e0a:	call   0x408188
  404e0f:	mov    rax,QWORD PTR [rsp+0x1d0]
  404e17:	mov    rdx,rbx
  404e1a:	mov    rbx,rsi
  404e1d:	lea    rcx,[rax-0x18]
  404e21:	call   0x408188
  404e26:	mov    rax,QWORD PTR [rsp+0xa0]
  404e2e:	lea    rsi,[rsp+0x6e]
  404e33:	mov    rdx,rsi
  404e36:	lea    rcx,[rax-0x18]
  404e3a:	call   0x408188
  404e3f:	mov    rax,QWORD PTR [rsp+0x90]
  404e47:	mov    rdx,rsi
  404e4a:	lea    rcx,[rax-0x18]
  404e4e:	call   0x408188
  404e53:	mov    rax,QWORD PTR [rsp+0x80]
  404e5b:	mov    rdx,rsi
  404e5e:	lea    rcx,[rax-0x18]
  404e62:	call   0x408188
  404e67:	mov    rax,QWORD PTR [rsp+0x70]
  404e6c:	lea    rcx,[rax-0x18]
  404e70:	mov    rdx,rsi
  404e73:	call   0x408188
  404e78:	mov    rcx,rbx
  404e7b:	call   0x409730
  404e80:	mov    rsi,rax
  404e83:	jmp    0x404dbf
  404e88:	mov    rsi,rax
  404e8b:	jmp    0x404dd3
  404e90:	mov    rsi,rax
  404e93:	jmp    0x404de7
  404e98:	mov    rsi,rax
  404e9b:	jmp    0x404dfb
  404ea0:	mov    rsi,rax
  404ea3:	jmp    0x404e0f
  404ea8:	mov    rsi,rax
  404eab:	mov    rax,QWORD PTR [rsp+0x150]
  404eb3:	mov    rdx,rbx
  404eb6:	lea    rcx,[rax-0x18]
  404eba:	call   0x408188
  404ebf:	mov    rax,QWORD PTR [rsp+0x160]
  404ec7:	mov    rdx,rbx
  404eca:	mov    rbx,rsi
  404ecd:	lea    rcx,[rax-0x18]
  404ed1:	call   0x408188
  404ed6:	jmp    0x404e26
  404edb:	mov    rsi,rax
  404ede:	jmp    0x404ebf
  404ee0:	mov    rsi,rax
  404ee3:	mov    rax,QWORD PTR [rsp+0x130]
  404eeb:	mov    rdx,rbx
  404eee:	lea    rcx,[rax-0x18]
  404ef2:	call   0x408188
  404ef7:	mov    rax,QWORD PTR [rsp+0x140]
  404eff:	mov    rdx,rbx
  404f02:	mov    rbx,rsi
  404f05:	lea    rcx,[rax-0x18]
  404f09:	call   0x408188
  404f0e:	jmp    0x404e26
  404f13:	mov    rsi,rax
  404f16:	jmp    0x404ef7
  404f18:	mov    rsi,rax
  404f1b:	mov    rax,QWORD PTR [rsp+0x110]
  404f23:	mov    rdx,rbx
  404f26:	lea    rcx,[rax-0x18]
  404f2a:	call   0x408188
  404f2f:	mov    rax,QWORD PTR [rsp+0x120]
  404f37:	mov    rdx,rbx
  404f3a:	mov    rbx,rsi
  404f3d:	lea    rcx,[rax-0x18]
  404f41:	call   0x408188
  404f46:	jmp    0x404e26
  404f4b:	mov    rsi,rax
  404f4e:	jmp    0x404f2f
  404f50:	mov    rsi,rax
  404f53:	mov    rax,QWORD PTR [rsp+0xf0]
  404f5b:	mov    rdx,rbx
  404f5e:	lea    rcx,[rax-0x18]
  404f62:	call   0x408188
  404f67:	mov    rax,QWORD PTR [rsp+0x100]
  404f6f:	mov    rdx,rbx
  404f72:	mov    rbx,rsi
  404f75:	lea    rcx,[rax-0x18]
  404f79:	call   0x408188
  404f7e:	jmp    0x404e26
  404f83:	mov    rsi,rax
  404f86:	jmp    0x404f67
  404f88:	mov    rsi,rax
  404f8b:	mov    rax,QWORD PTR [rsp+0xe0]
  404f93:	mov    rdx,rbx
  404f96:	mov    rbx,rsi
  404f99:	lea    rcx,[rax-0x18]
  404f9d:	call   0x408188
  404fa2:	jmp    0x404e26
  404fa7:	mov    rsi,rax
  404faa:	mov    rax,QWORD PTR [rsp+0xd0]
  404fb2:	mov    rdx,rbx
  404fb5:	mov    rbx,rsi
  404fb8:	lea    rcx,[rax-0x18]
  404fbc:	call   0x408188
  404fc1:	jmp    0x404e26
  404fc6:	mov    rsi,rax
  404fc9:	mov    rax,QWORD PTR [rsp+0xc0]
  404fd1:	mov    rdx,rbx
  404fd4:	mov    rbx,rsi
  404fd7:	lea    rcx,[rax-0x18]
  404fdb:	call   0x408188
  404fe0:	jmp    0x404e26
  404fe5:	mov    rsi,rax
  404fe8:	mov    rax,QWORD PTR [rsp+0xb0]
  404ff0:	mov    rdx,rbx
  404ff3:	mov    rbx,rsi
  404ff6:	lea    rcx,[rax-0x18]
  404ffa:	call   0x408188
  404fff:	jmp    0x404e26
  405004:	mov    rbx,rax
  405007:	jmp    0x404e26
  40500c:	mov    rbx,rax
  40500f:	lea    rsi,[rsp+0x6e]
  405014:	jmp    0x404e3f
  405019:	mov    rbx,rax
  40501c:	lea    rsi,[rsp+0x6e]
  405021:	jmp    0x404e53
  405026:	mov    rbx,rax
  405029:	lea    rsi,[rsp+0x6e]
  40502e:	jmp    0x404e67
  405033:	mov    rbx,rax
  405036:	mov    rax,QWORD PTR [rsp+0xc70]
  40503e:	mov    rdx,QWORD PTR [rsp+0x30]
  405043:	lea    rcx,[rax-0x18]
  405047:	call   0x408188
  40504c:	mov    rax,QWORD PTR [rsp+0xc90]
  405054:	mov    rdx,QWORD PTR [rsp+0x30]
  405059:	lea    rcx,[rax-0x18]
  40505d:	call   0x408188
  405062:	mov    rax,QWORD PTR [rsp+0xc80]
  40506a:	mov    rdx,QWORD PTR [rsp+0x30]
  40506f:	lea    rcx,[rax-0x18]
  405073:	call   0x408188
  405078:	mov    rcx,rbx
  40507b:	call   0x409730
  405080:	mov    rbx,rax
  405083:	jmp    0x40504c
  405085:	mov    rbx,rax
  405088:	jmp    0x405062
  40508a:	mov    rbx,rax
  40508d:	mov    rax,QWORD PTR [rsp+0xc90]
  405095:	jmp    0x404e6c
  40509a:	mov    rbx,rax
  40509d:	mov    rax,QWORD PTR [rsp+0xc80]
  4050a5:	lea    rdi,[rsp+0xc70]
  4050ad:	mov    rdx,rdi
  4050b0:	lea    rcx,[rax-0x18]
  4050b4:	call   0x408188
  4050b9:	mov    rax,QWORD PTR [rsp+0xc90]
  4050c1:	mov    rdx,rdi
  4050c4:	lea    rcx,[rax-0x18]
  4050c8:	call   0x408188
  4050cd:	mov    rcx,rbx
  4050d0:	call   0x409730
  4050d5:	mov    rbx,rax
  4050d8:	lea    rdi,[rsp+0xc70]
  4050e0:	jmp    0x4050b9
  4050e2:	mov    rbx,rax
  4050e5:	mov    rax,QWORD PTR [rsp+0xbf0]
  4050ed:	mov    rdx,r15
  4050f0:	lea    rcx,[rax-0x18]
  4050f4:	call   0x408188
  4050f9:	mov    rax,QWORD PTR [rsp+0xc90]
  405101:	mov    rdx,r15
  405104:	lea    rcx,[rax-0x18]
  405108:	call   0x408188
  40510d:	mov    rax,QWORD PTR [rsp+0xc70]
  405115:	mov    rdx,r15
  405118:	lea    rcx,[rax-0x18]
  40511c:	call   0x408188
  405121:	mov    rax,QWORD PTR [rsp+0xc60]
  405129:	mov    rdx,r15
  40512c:	lea    rcx,[rax-0x18]
  405130:	call   0x408188
  405135:	mov    rax,QWORD PTR [rsp+0xc40]
  40513d:	mov    rdx,r15
  405140:	lea    rcx,[rax-0x18]
  405144:	call   0x408188
  405149:	mov    rax,QWORD PTR [rsp+0xc30]
  405151:	mov    rdx,r15
  405154:	lea    rcx,[rax-0x18]
  405158:	call   0x408188
  40515d:	mov    rax,QWORD PTR [rsp+0xc10]
  405165:	mov    rdx,r15
  405168:	lea    rcx,[rax-0x18]
  40516c:	call   0x408188
  405171:	mov    rax,QWORD PTR [rsp+0xc00]
  405179:	mov    rdx,r15
  40517c:	lea    rcx,[rax-0x18]
  405180:	call   0x408188
  405185:	mov    rax,QWORD PTR [rsp+0xc20]
  40518d:	mov    rdx,r15
  405190:	lea    rcx,[rax-0x18]
  405194:	call   0x408188
  405199:	mov    rax,QWORD PTR [rsp+0xc50]
  4051a1:	mov    rdx,r15
  4051a4:	lea    rcx,[rax-0x18]
  4051a8:	call   0x408188
  4051ad:	mov    rax,QWORD PTR [rsp+0xc80]
  4051b5:	mov    rdx,r15
  4051b8:	lea    rcx,[rax-0x18]
  4051bc:	call   0x408188
  4051c1:	mov    rax,QWORD PTR [rsp+0x230]
  4051c9:	mov    rdx,QWORD PTR [rsp+0x58]
  4051ce:	lea    rcx,[rax-0x18]
  4051d2:	call   0x408188
  4051d7:	mov    rax,QWORD PTR [rsp+0x170]
  4051df:	mov    rdx,QWORD PTR [rsp+0x38]
  4051e4:	lea    rcx,[rax-0x18]
  4051e8:	call   0x408188
  4051ed:	jmp    0x404e26
  4051f2:	mov    rbx,rax
  4051f5:	jmp    0x4050f9
  4051fa:	mov    rbx,rax
  4051fd:	jmp    0x40510d
  405202:	mov    rbx,rax
  405205:	jmp    0x405121
  40520a:	mov    rbx,rax
  40520d:	jmp    0x405135
  405212:	mov    rbx,rax
  405215:	jmp    0x405149
  40521a:	mov    rbx,rax
  40521d:	jmp    0x40515d
  405222:	mov    rbx,rax
  405225:	jmp    0x405171
  40522a:	mov    rbx,rax
  40522d:	jmp    0x405185
  405232:	mov    rbx,rax
  405235:	jmp    0x405199
  40523a:	mov    rbx,rax
  40523d:	jmp    0x4051ad
  405242:	mov    rsi,rax
  405245:	mov    rax,QWORD PTR [rsp+0xb70]
  40524d:	mov    rdx,rbx
  405250:	lea    rcx,[rax-0x18]
  405254:	call   0x408188
  405259:	mov    rax,QWORD PTR [rsp+0xbe0]
  405261:	mov    rdx,rbx
  405264:	lea    rcx,[rax-0x18]
  405268:	call   0x408188
  40526d:	mov    rax,QWORD PTR [rsp+0xbc0]
  405275:	mov    rdx,rbx
  405278:	lea    rcx,[rax-0x18]
  40527c:	call   0x408188
  405281:	mov    rax,QWORD PTR [rsp+0xbb0]
  405289:	mov    rdx,rbx
  40528c:	lea    rcx,[rax-0x18]
  405290:	call   0x408188
  405295:	mov    rax,QWORD PTR [rsp+0xb90]
  40529d:	mov    rdx,rbx
  4052a0:	lea    rcx,[rax-0x18]
  4052a4:	call   0x408188
  4052a9:	mov    rax,QWORD PTR [rsp+0xb80]
  4052b1:	mov    rdx,rbx
  4052b4:	lea    rcx,[rax-0x18]
  4052b8:	call   0x408188
  4052bd:	mov    rax,QWORD PTR [rsp+0xba0]
  4052c5:	mov    rdx,rbx
  4052c8:	lea    rcx,[rax-0x18]
  4052cc:	call   0x408188
  4052d1:	mov    rax,QWORD PTR [rsp+0xbd0]
  4052d9:	mov    rdx,rbx
  4052dc:	mov    rbx,rsi
  4052df:	lea    rcx,[rax-0x18]
  4052e3:	call   0x408188
  4052e8:	jmp    0x4051c1
  4052ed:	mov    rsi,rax
  4052f0:	jmp    0x405259
  4052f5:	mov    rsi,rax
  4052f8:	jmp    0x40526d
  4052fd:	mov    rsi,rax
  405300:	jmp    0x405281
  405305:	mov    rsi,rax
  405308:	jmp    0x405295
  40530a:	mov    rsi,rax
  40530d:	jmp    0x4052a9
  40530f:	mov    rsi,rax
  405312:	jmp    0x4052bd
  405314:	mov    rsi,rax
  405317:	jmp    0x4052d1
  405319:	mov    rsi,rax
  40531c:	mov    rax,QWORD PTR [rsp+0xaf0]
  405324:	mov    rdx,rbx
  405327:	lea    rcx,[rax-0x18]
  40532b:	call   0x408188
  405330:	mov    rax,QWORD PTR [rsp+0xb60]
  405338:	mov    rdx,rbx
  40533b:	lea    rcx,[rax-0x18]
  40533f:	call   0x408188
  405344:	mov    rax,QWORD PTR [rsp+0xb40]
  40534c:	mov    rdx,rbx
  40534f:	lea    rcx,[rax-0x18]
  405353:	call   0x408188
  405358:	mov    rax,QWORD PTR [rsp+0xb30]
  405360:	mov    rdx,rbx
  405363:	lea    rcx,[rax-0x18]
  405367:	call   0x408188
  40536c:	mov    rax,QWORD PTR [rsp+0xb10]
  405374:	mov    rdx,rbx
  405377:	lea    rcx,[rax-0x18]
  40537b:	call   0x408188
  405380:	mov    rax,QWORD PTR [rsp+0xb00]
  405388:	mov    rdx,rbx
  40538b:	lea    rcx,[rax-0x18]
  40538f:	call   0x408188
  405394:	mov    rax,QWORD PTR [rsp+0xb20]
  40539c:	mov    rdx,rbx
  40539f:	lea    rcx,[rax-0x18]
  4053a3:	call   0x408188
  4053a8:	mov    rax,QWORD PTR [rsp+0xb50]
  4053b0:	mov    rdx,rbx
  4053b3:	mov    rbx,rsi
  4053b6:	lea    rcx,[rax-0x18]
  4053ba:	call   0x408188
  4053bf:	jmp    0x4051c1
  4053c4:	mov    rsi,rax
  4053c7:	jmp    0x405330
  4053cc:	mov    rsi,rax
  4053cf:	jmp    0x405344
  4053d4:	mov    rsi,rax
  4053d7:	jmp    0x405358
  4053dc:	mov    rsi,rax
  4053df:	jmp    0x40536c
  4053e1:	mov    rsi,rax
  4053e4:	jmp    0x405380
  4053e6:	mov    rsi,rax
  4053e9:	jmp    0x405394
  4053eb:	mov    rsi,rax
  4053ee:	jmp    0x4053a8
  4053f0:	mov    rsi,rax
  4053f3:	mov    rax,QWORD PTR [rsp+0xa70]
  4053fb:	mov    rdx,rbx
  4053fe:	lea    rcx,[rax-0x18]
  405402:	call   0x408188
  405407:	mov    rax,QWORD PTR [rsp+0xae0]
  40540f:	mov    rdx,rbx
  405412:	lea    rcx,[rax-0x18]
  405416:	call   0x408188
  40541b:	mov    rax,QWORD PTR [rsp+0xac0]
  405423:	mov    rdx,rbx
  405426:	lea    rcx,[rax-0x18]
  40542a:	call   0x408188
  40542f:	mov    rax,QWORD PTR [rsp+0xab0]
  405437:	mov    rdx,rbx
  40543a:	lea    rcx,[rax-0x18]
  40543e:	call   0x408188
  405443:	mov    rax,QWORD PTR [rsp+0xa90]
  40544b:	mov    rdx,rbx
  40544e:	lea    rcx,[rax-0x18]
  405452:	call   0x408188
  405457:	mov    rax,QWORD PTR [rsp+0xa80]
  40545f:	mov    rdx,rbx
  405462:	lea    rcx,[rax-0x18]
  405466:	call   0x408188
  40546b:	mov    rax,QWORD PTR [rsp+0xaa0]
  405473:	mov    rdx,rbx
  405476:	lea    rcx,[rax-0x18]
  40547a:	call   0x408188
  40547f:	mov    rax,QWORD PTR [rsp+0xad0]
  405487:	mov    rdx,rbx
  40548a:	mov    rbx,rsi
  40548d:	lea    rcx,[rax-0x18]
  405491:	call   0x408188
  405496:	jmp    0x4051c1
  40549b:	mov    rsi,rax
  40549e:	jmp    0x405407
  4054a3:	mov    rsi,rax
  4054a6:	jmp    0x40541b
  4054ab:	mov    rsi,rax
  4054ae:	jmp    0x40542f
  4054b3:	mov    rsi,rax
  4054b6:	jmp    0x405443
  4054b8:	mov    rsi,rax
  4054bb:	jmp    0x405457
  4054bd:	mov    rsi,rax
  4054c0:	jmp    0x40546b
  4054c2:	mov    rsi,rax
  4054c5:	jmp    0x40547f
  4054c7:	mov    rsi,rax
  4054ca:	mov    rax,QWORD PTR [rsp+0x9f0]
  4054d2:	mov    rdx,rbx
  4054d5:	lea    rcx,[rax-0x18]
  4054d9:	call   0x408188
  4054de:	mov    rax,QWORD PTR [rsp+0xa60]
  4054e6:	mov    rdx,rbx
  4054e9:	lea    rcx,[rax-0x18]
  4054ed:	call   0x408188
  4054f2:	mov    rax,QWORD PTR [rsp+0xa40]
  4054fa:	mov    rdx,rbx
  4054fd:	lea    rcx,[rax-0x18]
  405501:	call   0x408188
  405506:	mov    rax,QWORD PTR [rsp+0xa30]
  40550e:	mov    rdx,rbx
  405511:	lea    rcx,[rax-0x18]
  405515:	call   0x408188
  40551a:	mov    rax,QWORD PTR [rsp+0xa10]
  405522:	mov    rdx,rbx
  405525:	lea    rcx,[rax-0x18]
  405529:	call   0x408188
  40552e:	mov    rax,QWORD PTR [rsp+0xa00]
  405536:	mov    rdx,rbx
  405539:	lea    rcx,[rax-0x18]
  40553d:	call   0x408188
  405542:	mov    rax,QWORD PTR [rsp+0xa20]
  40554a:	mov    rdx,rbx
  40554d:	lea    rcx,[rax-0x18]
  405551:	call   0x408188
  405556:	mov    rax,QWORD PTR [rsp+0xa50]
  40555e:	mov    rdx,rbx
  405561:	mov    rbx,rsi
  405564:	lea    rcx,[rax-0x18]
  405568:	call   0x408188
  40556d:	jmp    0x4051c1
  405572:	mov    rsi,rax
  405575:	jmp    0x4054de
  40557a:	mov    rsi,rax
  40557d:	jmp    0x4054f2
  405582:	mov    rsi,rax
  405585:	jmp    0x405506
  40558a:	mov    rsi,rax
  40558d:	jmp    0x40551a
  40558f:	mov    rsi,rax
  405592:	jmp    0x40552e
  405594:	mov    rsi,rax
  405597:	jmp    0x405542
  405599:	mov    rsi,rax
  40559c:	jmp    0x405556
  40559e:	mov    rsi,rax
  4055a1:	mov    rax,QWORD PTR [rsp+0x9a0]
  4055a9:	mov    rdx,rbx
  4055ac:	lea    rcx,[rax-0x18]
  4055b0:	call   0x408188
  4055b5:	mov    rax,QWORD PTR [rsp+0x9e0]
  4055bd:	mov    rdx,rbx
  4055c0:	lea    rcx,[rax-0x18]
  4055c4:	call   0x408188
  4055c9:	mov    rax,QWORD PTR [rsp+0x9c0]
  4055d1:	mov    rdx,rbx
  4055d4:	lea    rcx,[rax-0x18]
  4055d8:	call   0x408188
  4055dd:	mov    rax,QWORD PTR [rsp+0x9b0]
  4055e5:	mov    rdx,rbx
  4055e8:	lea    rcx,[rax-0x18]
  4055ec:	call   0x408188
  4055f1:	mov    rax,QWORD PTR [rsp+0x9d0]
  4055f9:	mov    rdx,rbx
  4055fc:	mov    rbx,rsi
  4055ff:	lea    rcx,[rax-0x18]
  405603:	call   0x408188
  405608:	jmp    0x4051c1
  40560d:	mov    rsi,rax
  405610:	jmp    0x4055b5
  405612:	mov    rsi,rax
  405615:	jmp    0x4055c9
  405617:	mov    rsi,rax
  40561a:	jmp    0x4055dd
  40561c:	mov    rsi,rax
  40561f:	jmp    0x4055f1
  405621:	mov    rsi,rax
  405624:	mov    rax,QWORD PTR [rsp+0x970]
  40562c:	mov    rdx,rbx
  40562f:	lea    rcx,[rax-0x18]
  405633:	call   0x408188
  405638:	mov    rax,QWORD PTR [rsp+0x990]
  405640:	mov    rdx,rbx
  405643:	lea    rcx,[rax-0x18]
  405647:	call   0x408188
  40564c:	mov    rax,QWORD PTR [rsp+0x980]
  405654:	mov    rdx,rbx
  405657:	mov    rbx,rsi
  40565a:	lea    rcx,[rax-0x18]
  40565e:	call   0x408188
  405663:	jmp    0x4051c1
  405668:	mov    rsi,rax
  40566b:	jmp    0x405638
  40566d:	mov    rsi,rax
  405670:	jmp    0x40564c
  405672:	mov    rsi,rax
  405675:	mov    rax,QWORD PTR [rsp+0x950]
  40567d:	mov    rdx,rbx
  405680:	lea    rcx,[rax-0x18]
  405684:	call   0x408188
  405689:	mov    rax,QWORD PTR [rsp+0x960]
  405691:	mov    rdx,rbx
  405694:	mov    rbx,rsi
  405697:	lea    rcx,[rax-0x18]
  40569b:	call   0x408188
  4056a0:	jmp    0x4051c1
  4056a5:	mov    rsi,rax
  4056a8:	jmp    0x405689
  4056aa:	mov    rsi,rax
  4056ad:	mov    rax,QWORD PTR [rsp+0x920]
  4056b5:	mov    rdx,rbx
  4056b8:	lea    rcx,[rax-0x18]
  4056bc:	call   0x408188
  4056c1:	mov    rax,QWORD PTR [rsp+0x940]
  4056c9:	mov    rdx,rbx
  4056cc:	lea    rcx,[rax-0x18]
  4056d0:	call   0x408188
  4056d5:	mov    rax,QWORD PTR [rsp+0x930]
  4056dd:	mov    rdx,rbx
  4056e0:	mov    rbx,rsi
  4056e3:	lea    rcx,[rax-0x18]
  4056e7:	call   0x408188
  4056ec:	jmp    0x4051c1
  4056f1:	mov    rsi,rax
  4056f4:	jmp    0x4056c1
  4056f6:	mov    rsi,rax
  4056f9:	jmp    0x4056d5
  4056fb:	mov    rsi,rax
  4056fe:	mov    rax,QWORD PTR [rsp+0x8f0]
  405706:	mov    rdx,rbx
  405709:	lea    rcx,[rax-0x18]
  40570d:	call   0x408188
  405712:	mov    rax,QWORD PTR [rsp+0x910]
  40571a:	mov    rdx,rbx
  40571d:	lea    rcx,[rax-0x18]
  405721:	call   0x408188
  405726:	mov    rax,QWORD PTR [rsp+0x900]
  40572e:	mov    rdx,rbx
  405731:	mov    rbx,rsi
  405734:	lea    rcx,[rax-0x18]
  405738:	call   0x408188
  40573d:	jmp    0x4051c1
  405742:	mov    rsi,rax
  405745:	jmp    0x405712
  405747:	mov    rsi,rax
  40574a:	jmp    0x405726
  40574c:	mov    rsi,rax
  40574f:	mov    rax,QWORD PTR [rsp+0x8c0]
  405757:	mov    rdx,rbx
  40575a:	lea    rcx,[rax-0x18]
  40575e:	call   0x408188
  405763:	mov    rax,QWORD PTR [rsp+0x8e0]
  40576b:	mov    rdx,rbx
  40576e:	lea    rcx,[rax-0x18]
  405772:	call   0x408188
  405777:	mov    rax,QWORD PTR [rsp+0x8d0]
  40577f:	mov    rdx,rbx
  405782:	mov    rbx,rsi
  405785:	lea    rcx,[rax-0x18]
  405789:	call   0x408188
  40578e:	jmp    0x4051c1
  405793:	mov    rsi,rax
  405796:	jmp    0x405763
  405798:	mov    rsi,rax
  40579b:	jmp    0x405777
  40579d:	mov    rsi,rax
  4057a0:	mov    rax,QWORD PTR [rsp+0x890]
  4057a8:	mov    rdx,rbx
  4057ab:	lea    rcx,[rax-0x18]
  4057af:	call   0x408188
  4057b4:	mov    rax,QWORD PTR [rsp+0x8b0]
  4057bc:	mov    rdx,rbx
  4057bf:	lea    rcx,[rax-0x18]
  4057c3:	call   0x408188
  4057c8:	mov    rax,QWORD PTR [rsp+0x8a0]
  4057d0:	mov    rdx,rbx
  4057d3:	mov    rbx,rsi
  4057d6:	lea    rcx,[rax-0x18]
  4057da:	call   0x408188
  4057df:	jmp    0x4051c1
  4057e4:	mov    rsi,rax
  4057e7:	jmp    0x4057b4
  4057e9:	mov    rsi,rax
  4057ec:	jmp    0x4057c8
  4057ee:	mov    rsi,rax
  4057f1:	mov    rax,QWORD PTR [rsp+0x860]
  4057f9:	mov    rdx,rbx
  4057fc:	lea    rcx,[rax-0x18]
  405800:	call   0x408188
  405805:	mov    rax,QWORD PTR [rsp+0x880]
  40580d:	mov    rdx,rbx
  405810:	lea    rcx,[rax-0x18]
  405814:	call   0x408188
  405819:	mov    rax,QWORD PTR [rsp+0x870]
  405821:	mov    rdx,rbx
  405824:	mov    rbx,rsi
  405827:	lea    rcx,[rax-0x18]
  40582b:	call   0x408188
  405830:	jmp    0x4051c1
  405835:	mov    rsi,rax
  405838:	jmp    0x405805
  40583a:	mov    rsi,rax
  40583d:	jmp    0x405819
  40583f:	mov    rsi,rax
  405842:	mov    rax,QWORD PTR [rsp+0x830]
  40584a:	mov    rdx,rbx
  40584d:	lea    rcx,[rax-0x18]
  405851:	call   0x408188
  405856:	mov    rax,QWORD PTR [rsp+0x850]
  40585e:	mov    rdx,rbx
  405861:	lea    rcx,[rax-0x18]
  405865:	call   0x408188
  40586a:	mov    rax,QWORD PTR [rsp+0x840]
  405872:	mov    rdx,rbx
  405875:	mov    rbx,rsi
  405878:	lea    rcx,[rax-0x18]
  40587c:	call   0x408188
  405881:	jmp    0x4051c1
  405886:	mov    rsi,rax
  405889:	jmp    0x405856
  40588b:	mov    rsi,rax
  40588e:	jmp    0x40586a
  405890:	mov    rsi,rax
  405893:	mov    rax,QWORD PTR [rsp+0x800]
  40589b:	mov    rdx,rbx
  40589e:	lea    rcx,[rax-0x18]
  4058a2:	call   0x408188
  4058a7:	mov    rax,QWORD PTR [rsp+0x820]
  4058af:	mov    rdx,rbx
  4058b2:	lea    rcx,[rax-0x18]
  4058b6:	call   0x408188
  4058bb:	mov    rax,QWORD PTR [rsp+0x810]
  4058c3:	mov    rdx,rbx
  4058c6:	mov    rbx,rsi
  4058c9:	lea    rcx,[rax-0x18]
  4058cd:	call   0x408188
  4058d2:	jmp    0x4051c1
  4058d7:	mov    rsi,rax
  4058da:	jmp    0x4058a7
  4058dc:	mov    rsi,rax
  4058df:	jmp    0x4058bb
  4058e1:	mov    rsi,rax
  4058e4:	mov    rax,QWORD PTR [rsp+0x7d0]
  4058ec:	mov    rdx,rbx
  4058ef:	lea    rcx,[rax-0x18]
  4058f3:	call   0x408188
  4058f8:	mov    rax,QWORD PTR [rsp+0x7f0]
  405900:	mov    rdx,rbx
  405903:	lea    rcx,[rax-0x18]
  405907:	call   0x408188
  40590c:	mov    rax,QWORD PTR [rsp+0x7e0]
  405914:	mov    rdx,rbx
  405917:	mov    rbx,rsi
  40591a:	lea    rcx,[rax-0x18]
  40591e:	call   0x408188
  405923:	jmp    0x4051c1
  405928:	mov    rsi,rax
  40592b:	jmp    0x4058f8
  40592d:	mov    rsi,rax
  405930:	jmp    0x40590c
  405932:	mov    rsi,rax
  405935:	mov    rax,QWORD PTR [rsp+0x7a0]
  40593d:	mov    rdx,rbx
  405940:	lea    rcx,[rax-0x18]
  405944:	call   0x408188
  405949:	mov    rax,QWORD PTR [rsp+0x7c0]
  405951:	mov    rdx,rbx
  405954:	lea    rcx,[rax-0x18]
  405958:	call   0x408188
  40595d:	mov    rax,QWORD PTR [rsp+0x7b0]
  405965:	mov    rdx,rbx
  405968:	mov    rbx,rsi
  40596b:	lea    rcx,[rax-0x18]
  40596f:	call   0x408188
  405974:	jmp    0x4051c1
  405979:	mov    rsi,rax
  40597c:	jmp    0x405949
  40597e:	mov    rsi,rax
  405981:	jmp    0x40595d
  405983:	mov    rsi,rax
  405986:	mov    rax,QWORD PTR [rsp+0x770]
  40598e:	mov    rdx,rbx
  405991:	lea    rcx,[rax-0x18]
  405995:	call   0x408188
  40599a:	mov    rax,QWORD PTR [rsp+0x790]
  4059a2:	mov    rdx,rbx
  4059a5:	lea    rcx,[rax-0x18]
  4059a9:	call   0x408188
  4059ae:	mov    rax,QWORD PTR [rsp+0x780]
  4059b6:	mov    rdx,rbx
  4059b9:	mov    rbx,rsi
  4059bc:	lea    rcx,[rax-0x18]
  4059c0:	call   0x408188
  4059c5:	jmp    0x4051c1
  4059ca:	mov    rsi,rax
  4059cd:	jmp    0x40599a
  4059cf:	mov    rsi,rax
  4059d2:	jmp    0x4059ae
  4059d4:	mov    rsi,rax
  4059d7:	mov    rax,QWORD PTR [rsp+0x740]
  4059df:	mov    rdx,rbx
  4059e2:	lea    rcx,[rax-0x18]
  4059e6:	call   0x408188
  4059eb:	mov    rax,QWORD PTR [rsp+0x760]
  4059f3:	mov    rdx,rbx
  4059f6:	lea    rcx,[rax-0x18]
  4059fa:	call   0x408188
  4059ff:	mov    rax,QWORD PTR [rsp+0x750]
  405a07:	mov    rdx,rbx
  405a0a:	mov    rbx,rsi
  405a0d:	lea    rcx,[rax-0x18]
  405a11:	call   0x408188
  405a16:	jmp    0x4051c1
  405a1b:	mov    rsi,rax
  405a1e:	jmp    0x4059eb
  405a20:	mov    rsi,rax
  405a23:	jmp    0x4059ff
  405a25:	mov    rsi,rax
  405a28:	mov    rax,QWORD PTR [rsp+0x710]
  405a30:	mov    rdx,rbx
  405a33:	lea    rcx,[rax-0x18]
  405a37:	call   0x408188
  405a3c:	mov    rax,QWORD PTR [rsp+0x730]
  405a44:	mov    rdx,rbx
  405a47:	lea    rcx,[rax-0x18]
  405a4b:	call   0x408188
  405a50:	mov    rax,QWORD PTR [rsp+0x720]
  405a58:	mov    rdx,rbx
  405a5b:	mov    rbx,rsi
  405a5e:	lea    rcx,[rax-0x18]
  405a62:	call   0x408188
  405a67:	jmp    0x4051c1
  405a6c:	mov    rsi,rax
  405a6f:	jmp    0x405a3c
  405a71:	mov    rsi,rax
  405a74:	jmp    0x405a50
  405a76:	mov    rsi,rax
  405a79:	mov    rax,QWORD PTR [rsp+0x6e0]
  405a81:	mov    rdx,rbx
  405a84:	lea    rcx,[rax-0x18]
  405a88:	call   0x408188
  405a8d:	mov    rax,QWORD PTR [rsp+0x700]
  405a95:	mov    rdx,rbx
  405a98:	lea    rcx,[rax-0x18]
  405a9c:	call   0x408188
  405aa1:	mov    rax,QWORD PTR [rsp+0x6f0]
  405aa9:	mov    rdx,rbx
  405aac:	mov    rbx,rsi
  405aaf:	lea    rcx,[rax-0x18]
  405ab3:	call   0x408188
  405ab8:	jmp    0x4051c1
  405abd:	mov    rsi,rax
  405ac0:	jmp    0x405a8d
  405ac2:	mov    rsi,rax
  405ac5:	jmp    0x405aa1
  405ac7:	mov    rsi,rax
  405aca:	mov    rax,QWORD PTR [rsp+0x6b0]
  405ad2:	mov    rdx,rbx
  405ad5:	lea    rcx,[rax-0x18]
  405ad9:	call   0x408188
  405ade:	mov    rax,QWORD PTR [rsp+0x6d0]
  405ae6:	mov    rdx,rbx
  405ae9:	lea    rcx,[rax-0x18]
  405aed:	call   0x408188
  405af2:	mov    rax,QWORD PTR [rsp+0x6c0]
  405afa:	mov    rdx,rbx
  405afd:	mov    rbx,rsi
  405b00:	lea    rcx,[rax-0x18]
  405b04:	call   0x408188
  405b09:	jmp    0x4051c1
  405b0e:	mov    rsi,rax
  405b11:	jmp    0x405ade
  405b13:	mov    rsi,rax
  405b16:	jmp    0x405af2
  405b18:	mov    rsi,rax
  405b1b:	mov    rax,QWORD PTR [rsp+0x680]
  405b23:	mov    rdx,rbx
  405b26:	lea    rcx,[rax-0x18]
  405b2a:	call   0x408188
  405b2f:	mov    rax,QWORD PTR [rsp+0x6a0]
  405b37:	mov    rdx,rbx
  405b3a:	lea    rcx,[rax-0x18]
  405b3e:	call   0x408188
  405b43:	mov    rax,QWORD PTR [rsp+0x690]
  405b4b:	mov    rdx,rbx
  405b4e:	mov    rbx,rsi
  405b51:	lea    rcx,[rax-0x18]
  405b55:	call   0x408188
  405b5a:	jmp    0x4051c1
  405b5f:	mov    rsi,rax
  405b62:	jmp    0x405b2f
  405b64:	mov    rsi,rax
  405b67:	jmp    0x405b43
  405b69:	mov    rsi,rax
  405b6c:	mov    rax,QWORD PTR [rsp+0x670]
  405b74:	mov    rdx,rbx
  405b77:	mov    rbx,rsi
  405b7a:	lea    rcx,[rax-0x18]
  405b7e:	call   0x408188
  405b83:	jmp    0x4051c1
  405b88:	mov    rsi,rax
  405b8b:	mov    rax,QWORD PTR [rsp+0x660]
  405b93:	mov    rdx,rbx
  405b96:	mov    rbx,rsi
  405b99:	lea    rcx,[rax-0x18]
  405b9d:	call   0x408188
  405ba2:	jmp    0x4051c1
  405ba7:	mov    rsi,rax
  405baa:	mov    rax,QWORD PTR [rsp+0x650]
  405bb2:	mov    rdx,rbx
  405bb5:	mov    rbx,rsi
  405bb8:	lea    rcx,[rax-0x18]
  405bbc:	call   0x408188
  405bc1:	jmp    0x4051c1
  405bc6:	mov    rsi,rax
  405bc9:	mov    rax,QWORD PTR [rsp+0x620]
  405bd1:	mov    rdx,rbx
  405bd4:	lea    rcx,[rax-0x18]
  405bd8:	call   0x408188
  405bdd:	mov    rax,QWORD PTR [rsp+0x640]
  405be5:	mov    rdx,rbx
  405be8:	lea    rcx,[rax-0x18]
  405bec:	call   0x408188
  405bf1:	mov    rax,QWORD PTR [rsp+0x630]
  405bf9:	mov    rdx,rbx
  405bfc:	mov    rbx,rsi
  405bff:	lea    rcx,[rax-0x18]
  405c03:	call   0x408188
  405c08:	jmp    0x4051c1
  405c0d:	mov    rsi,rax
  405c10:	jmp    0x405bdd
  405c12:	mov    rsi,rax
  405c15:	jmp    0x405bf1
  405c17:	mov    rsi,rax
  405c1a:	mov    rax,QWORD PTR [rsp+0x5f0]
  405c22:	mov    rdx,rbx
  405c25:	lea    rcx,[rax-0x18]
  405c29:	call   0x408188
  405c2e:	mov    rax,QWORD PTR [rsp+0x610]
  405c36:	mov    rdx,rbx
  405c39:	lea    rcx,[rax-0x18]
  405c3d:	call   0x408188
  405c42:	mov    rax,QWORD PTR [rsp+0x600]
  405c4a:	mov    rdx,rbx
  405c4d:	mov    rbx,rsi
  405c50:	lea    rcx,[rax-0x18]
  405c54:	call   0x408188
  405c59:	jmp    0x4051c1
  405c5e:	mov    rsi,rax
  405c61:	jmp    0x405c2e
  405c63:	mov    rsi,rax
  405c66:	jmp    0x405c42
  405c68:	mov    rsi,rax
  405c6b:	mov    rax,QWORD PTR [rsp+0x5c0]
  405c73:	mov    rdx,rbx
  405c76:	lea    rcx,[rax-0x18]
  405c7a:	call   0x408188
  405c7f:	mov    rax,QWORD PTR [rsp+0x5e0]
  405c87:	mov    rdx,rbx
  405c8a:	lea    rcx,[rax-0x18]
  405c8e:	call   0x408188
  405c93:	mov    rax,QWORD PTR [rsp+0x5d0]
  405c9b:	mov    rdx,rbx
  405c9e:	mov    rbx,rsi
  405ca1:	lea    rcx,[rax-0x18]
  405ca5:	call   0x408188
  405caa:	jmp    0x4051c1
  405caf:	mov    rsi,rax
  405cb2:	jmp    0x405c7f
  405cb4:	mov    rsi,rax
  405cb7:	jmp    0x405c93
  405cb9:	mov    rsi,rax
  405cbc:	mov    rax,QWORD PTR [rsp+0x590]
  405cc4:	mov    rdx,rbx
  405cc7:	lea    rcx,[rax-0x18]
  405ccb:	call   0x408188
  405cd0:	mov    rax,QWORD PTR [rsp+0x5b0]
  405cd8:	mov    rdx,rbx
  405cdb:	lea    rcx,[rax-0x18]
  405cdf:	call   0x408188
  405ce4:	mov    rax,QWORD PTR [rsp+0x5a0]
  405cec:	mov    rdx,rbx
  405cef:	mov    rbx,rsi
  405cf2:	lea    rcx,[rax-0x18]
  405cf6:	call   0x408188
  405cfb:	jmp    0x4051c1
  405d00:	mov    rsi,rax
  405d03:	jmp    0x405cd0
  405d05:	mov    rsi,rax
  405d08:	jmp    0x405ce4
  405d0a:	mov    rsi,rax
  405d0d:	mov    rax,QWORD PTR [rsp+0x560]
  405d15:	mov    rdx,rbx
  405d18:	lea    rcx,[rax-0x18]
  405d1c:	call   0x408188
  405d21:	mov    rax,QWORD PTR [rsp+0x580]
  405d29:	mov    rdx,rbx
  405d2c:	lea    rcx,[rax-0x18]
  405d30:	call   0x408188
  405d35:	mov    rax,QWORD PTR [rsp+0x570]
  405d3d:	mov    rdx,rbx
  405d40:	mov    rbx,rsi
  405d43:	lea    rcx,[rax-0x18]
  405d47:	call   0x408188
  405d4c:	jmp    0x4051c1
  405d51:	mov    rsi,rax
  405d54:	jmp    0x405d21
  405d56:	mov    rsi,rax
  405d59:	jmp    0x405d35
  405d5b:	mov    rsi,rax
  405d5e:	mov    rax,QWORD PTR [rsp+0x530]
  405d66:	mov    rdx,rbx
  405d69:	lea    rcx,[rax-0x18]
  405d6d:	call   0x408188
  405d72:	mov    rax,QWORD PTR [rsp+0x550]
  405d7a:	mov    rdx,rbx
  405d7d:	lea    rcx,[rax-0x18]
  405d81:	call   0x408188
  405d86:	mov    rax,QWORD PTR [rsp+0x540]
  405d8e:	mov    rdx,rbx
  405d91:	mov    rbx,rsi
  405d94:	lea    rcx,[rax-0x18]
  405d98:	call   0x408188
  405d9d:	jmp    0x4051c1
  405da2:	mov    rsi,rax
  405da5:	jmp    0x405d72
  405da7:	mov    rsi,rax
  405daa:	jmp    0x405d86
  405dac:	mov    rsi,rax
  405daf:	mov    rax,QWORD PTR [rsp+0x500]
  405db7:	mov    rdx,rbx
  405dba:	lea    rcx,[rax-0x18]
  405dbe:	call   0x408188
  405dc3:	mov    rax,QWORD PTR [rsp+0x520]
  405dcb:	mov    rdx,rbx
  405dce:	lea    rcx,[rax-0x18]
  405dd2:	call   0x408188
  405dd7:	mov    rax,QWORD PTR [rsp+0x510]
  405ddf:	mov    rdx,rbx
  405de2:	mov    rbx,rsi
  405de5:	lea    rcx,[rax-0x18]
  405de9:	call   0x408188
  405dee:	jmp    0x4051c1
  405df3:	mov    rsi,rax
  405df6:	jmp    0x405dc3
  405df8:	mov    rsi,rax
  405dfb:	jmp    0x405dd7
  405dfd:	mov    rsi,rax
  405e00:	mov    rax,QWORD PTR [rsp+0x4d0]
  405e08:	mov    rdx,rbx
  405e0b:	lea    rcx,[rax-0x18]
  405e0f:	call   0x408188
  405e14:	mov    rax,QWORD PTR [rsp+0x4f0]
  405e1c:	mov    rdx,rbx
  405e1f:	lea    rcx,[rax-0x18]
  405e23:	call   0x408188
  405e28:	mov    rax,QWORD PTR [rsp+0x4e0]
  405e30:	mov    rdx,rbx
  405e33:	mov    rbx,rsi
  405e36:	lea    rcx,[rax-0x18]
  405e3a:	call   0x408188
  405e3f:	jmp    0x4051c1
  405e44:	mov    rsi,rax
  405e47:	jmp    0x405e14
  405e49:	mov    rsi,rax
  405e4c:	jmp    0x405e28
  405e4e:	mov    rsi,rax
  405e51:	mov    rax,QWORD PTR [rsp+0x4a0]
  405e59:	mov    rdx,rbx
  405e5c:	lea    rcx,[rax-0x18]
  405e60:	call   0x408188
  405e65:	mov    rax,QWORD PTR [rsp+0x4c0]
  405e6d:	mov    rdx,rbx
  405e70:	lea    rcx,[rax-0x18]
  405e74:	call   0x408188
  405e79:	mov    rax,QWORD PTR [rsp+0x4b0]
  405e81:	mov    rdx,rbx
  405e84:	mov    rbx,rsi
  405e87:	lea    rcx,[rax-0x18]
  405e8b:	call   0x408188
  405e90:	jmp    0x4051c1
  405e95:	mov    rsi,rax
  405e98:	jmp    0x405e65
  405e9a:	mov    rsi,rax
  405e9d:	jmp    0x405e79
  405e9f:	mov    rsi,rax
  405ea2:	mov    rax,QWORD PTR [rsp+0x470]
  405eaa:	mov    rdx,rbx
  405ead:	lea    rcx,[rax-0x18]
  405eb1:	call   0x408188
  405eb6:	mov    rax,QWORD PTR [rsp+0x490]
  405ebe:	mov    rdx,rbx
  405ec1:	lea    rcx,[rax-0x18]
  405ec5:	call   0x408188
  405eca:	mov    rax,QWORD PTR [rsp+0x480]
  405ed2:	mov    rdx,rbx
  405ed5:	mov    rbx,rsi
  405ed8:	lea    rcx,[rax-0x18]
  405edc:	call   0x408188
  405ee1:	jmp    0x4051c1
  405ee6:	mov    rsi,rax
  405ee9:	jmp    0x405eb6
  405eeb:	mov    rsi,rax
  405eee:	jmp    0x405eca
  405ef0:	mov    rsi,rax
  405ef3:	mov    rax,QWORD PTR [rsp+0x440]
  405efb:	mov    rdx,rbx
  405efe:	lea    rcx,[rax-0x18]
  405f02:	call   0x408188
  405f07:	mov    rax,QWORD PTR [rsp+0x460]
  405f0f:	mov    rdx,rbx
  405f12:	lea    rcx,[rax-0x18]
  405f16:	call   0x408188
  405f1b:	mov    rax,QWORD PTR [rsp+0x450]
  405f23:	mov    rdx,rbx
  405f26:	mov    rbx,rsi
  405f29:	lea    rcx,[rax-0x18]
  405f2d:	call   0x408188
  405f32:	jmp    0x4051c1
  405f37:	mov    rsi,rax
  405f3a:	jmp    0x405f07
  405f3c:	mov    rsi,rax
  405f3f:	jmp    0x405f1b
  405f41:	mov    rsi,rax
  405f44:	mov    rax,QWORD PTR [rsp+0x410]
  405f4c:	mov    rdx,rbx
  405f4f:	lea    rcx,[rax-0x18]
  405f53:	call   0x408188
  405f58:	mov    rax,QWORD PTR [rsp+0x430]
  405f60:	mov    rdx,rbx
  405f63:	lea    rcx,[rax-0x18]
  405f67:	call   0x408188
  405f6c:	mov    rax,QWORD PTR [rsp+0x420]
  405f74:	mov    rdx,rbx
  405f77:	mov    rbx,rsi
  405f7a:	lea    rcx,[rax-0x18]
  405f7e:	call   0x408188
  405f83:	jmp    0x4051c1
  405f88:	mov    rsi,rax
  405f8b:	jmp    0x405f58
  405f8d:	mov    rsi,rax
  405f90:	jmp    0x405f6c
  405f92:	mov    rsi,rax
  405f95:	mov    rax,QWORD PTR [rsp+0x3e0]
  405f9d:	mov    rdx,rbx
  405fa0:	lea    rcx,[rax-0x18]
  405fa4:	call   0x408188
  405fa9:	mov    rax,QWORD PTR [rsp+0x400]
  405fb1:	mov    rdx,rbx
  405fb4:	lea    rcx,[rax-0x18]
  405fb8:	call   0x408188
  405fbd:	mov    rax,QWORD PTR [rsp+0x3f0]
  405fc5:	mov    rdx,rbx
  405fc8:	mov    rbx,rsi
  405fcb:	lea    rcx,[rax-0x18]
  405fcf:	call   0x408188
  405fd4:	jmp    0x4051c1
  405fd9:	mov    rsi,rax
  405fdc:	jmp    0x405fa9
  405fde:	mov    rsi,rax
  405fe1:	jmp    0x405fbd
  405fe3:	mov    rsi,rax
  405fe6:	mov    rax,QWORD PTR [rsp+0x3b0]
  405fee:	mov    rdx,rbx
  405ff1:	lea    rcx,[rax-0x18]
  405ff5:	call   0x408188
  405ffa:	mov    rax,QWORD PTR [rsp+0x3d0]
  406002:	mov    rdx,rbx
  406005:	lea    rcx,[rax-0x18]
  406009:	call   0x408188
  40600e:	mov    rax,QWORD PTR [rsp+0x3c0]
  406016:	mov    rdx,rbx
  406019:	mov    rbx,rsi
  40601c:	lea    rcx,[rax-0x18]
  406020:	call   0x408188
  406025:	jmp    0x4051c1
  40602a:	mov    rsi,rax
  40602d:	jmp    0x405ffa
  40602f:	mov    rsi,rax
  406032:	jmp    0x40600e
  406034:	mov    rsi,rax
  406037:	mov    rax,QWORD PTR [rsp+0x380]
  40603f:	mov    rdx,rbx
  406042:	lea    rcx,[rax-0x18]
  406046:	call   0x408188
  40604b:	mov    rax,QWORD PTR [rsp+0x3a0]
  406053:	mov    rdx,rbx
  406056:	lea    rcx,[rax-0x18]
  40605a:	call   0x408188
  40605f:	mov    rax,QWORD PTR [rsp+0x390]
  406067:	mov    rdx,rbx
  40606a:	mov    rbx,rsi
  40606d:	lea    rcx,[rax-0x18]
  406071:	call   0x408188
  406076:	jmp    0x4051c1
  40607b:	mov    rsi,rax
  40607e:	jmp    0x40604b
  406080:	mov    rsi,rax
  406083:	jmp    0x40605f
  406085:	mov    rsi,rax
  406088:	mov    rax,QWORD PTR [rsp+0x350]
  406090:	mov    rdx,rbx
  406093:	lea    rcx,[rax-0x18]
  406097:	call   0x408188
  40609c:	mov    rax,QWORD PTR [rsp+0x370]
  4060a4:	mov    rdx,rbx
  4060a7:	lea    rcx,[rax-0x18]
  4060ab:	call   0x408188
  4060b0:	mov    rax,QWORD PTR [rsp+0x360]
  4060b8:	mov    rdx,rbx
  4060bb:	mov    rbx,rsi
  4060be:	lea    rcx,[rax-0x18]
  4060c2:	call   0x408188
  4060c7:	jmp    0x4051c1
  4060cc:	mov    rsi,rax
  4060cf:	jmp    0x40609c
  4060d1:	mov    rsi,rax
  4060d4:	jmp    0x4060b0
  4060d6:	mov    rsi,rax
  4060d9:	mov    rax,QWORD PTR [rsp+0x320]
  4060e1:	mov    rdx,rbx
  4060e4:	lea    rcx,[rax-0x18]
  4060e8:	call   0x408188
  4060ed:	mov    rax,QWORD PTR [rsp+0x340]
  4060f5:	mov    rdx,rbx
  4060f8:	lea    rcx,[rax-0x18]
  4060fc:	call   0x408188
  406101:	mov    rax,QWORD PTR [rsp+0x330]
  406109:	mov    rdx,rbx
  40610c:	mov    rbx,rsi
  40610f:	lea    rcx,[rax-0x18]
  406113:	call   0x408188
  406118:	jmp    0x4051c1
  40611d:	mov    rsi,rax
  406120:	jmp    0x4060ed
  406122:	mov    rsi,rax
  406125:	jmp    0x406101
  406127:	mov    rsi,rax
  40612a:	mov    rax,QWORD PTR [rsp+0x2f0]
  406132:	mov    rdx,rbx
  406135:	lea    rcx,[rax-0x18]
  406139:	call   0x408188
  40613e:	mov    rax,QWORD PTR [rsp+0x310]
  406146:	mov    rdx,rbx
  406149:	lea    rcx,[rax-0x18]
  40614d:	call   0x408188
  406152:	mov    rax,QWORD PTR [rsp+0x300]
  40615a:	mov    rdx,rbx
  40615d:	mov    rbx,rsi
  406160:	lea    rcx,[rax-0x18]
  406164:	call   0x408188
  406169:	jmp    0x4051c1
  40616e:	mov    rsi,rax
  406171:	jmp    0x40613e
  406173:	mov    rsi,rax
  406176:	jmp    0x406152
  406178:	mov    rsi,rax
  40617b:	mov    rax,QWORD PTR [rsp+0x2d0]
  406183:	mov    rdx,rbx
  406186:	lea    rcx,[rax-0x18]
  40618a:	call   0x408188
  40618f:	mov    rax,QWORD PTR [rsp+0x2e0]
  406197:	mov    rdx,rbx
  40619a:	mov    rbx,rsi
  40619d:	lea    rcx,[rax-0x18]
  4061a1:	call   0x408188
  4061a6:	jmp    0x4051c1
  4061ab:	mov    rsi,rax
  4061ae:	jmp    0x40618f
  4061b0:	mov    rsi,rax
  4061b3:	mov    rax,QWORD PTR [rsp+0x2a0]
  4061bb:	mov    rdx,rbx
  4061be:	lea    rcx,[rax-0x18]
  4061c2:	call   0x408188
  4061c7:	mov    rax,QWORD PTR [rsp+0x2c0]
  4061cf:	mov    rdx,rbx
  4061d2:	lea    rcx,[rax-0x18]
  4061d6:	call   0x408188
  4061db:	mov    rax,QWORD PTR [rsp+0x2b0]
  4061e3:	mov    rdx,rbx
  4061e6:	mov    rbx,rsi
  4061e9:	lea    rcx,[rax-0x18]
  4061ed:	call   0x408188
  4061f2:	jmp    0x4051c1
  4061f7:	mov    rsi,rax
  4061fa:	jmp    0x4061c7
  4061fc:	mov    rsi,rax
  4061ff:	jmp    0x4061db
  406201:	mov    rsi,rax
  406204:	mov    rax,QWORD PTR [rsp+0x290]
  40620c:	mov    rdx,rbx
  40620f:	lea    rcx,[rax-0x18]
  406213:	call   0x408188
  406218:	mov    rax,QWORD PTR [rsp+0x280]
  406220:	mov    rdx,rbx
  406223:	lea    rcx,[rax-0x18]
  406227:	call   0x408188
  40622c:	mov    rax,QWORD PTR [rsp+0x270]
  406234:	mov    rdx,rbx
  406237:	mov    rbx,rsi
  40623a:	lea    rcx,[rax-0x18]
  40623e:	call   0x408188
  406243:	jmp    0x4051c1
  406248:	mov    rsi,rax
  40624b:	jmp    0x406218
  40624d:	mov    rsi,rax
  406250:	jmp    0x40622c
  406252:	mov    rsi,rax
  406255:	mov    rax,QWORD PTR [rsp+0x260]
  40625d:	mov    rdx,rbx
  406260:	mov    rbx,rsi
  406263:	lea    rcx,[rax-0x18]
  406267:	call   0x408188
  40626c:	jmp    0x4051c1
  406271:	mov    rbx,rax
  406274:	jmp    0x4051c1
  406279:	mov    rsi,rax
  40627c:	mov    rax,QWORD PTR [rsp+0x250]
  406284:	mov    rdx,rbx
  406287:	lea    rcx,[rax-0x18]
  40628b:	call   0x408188
  406290:	mov    rax,QWORD PTR [rsp+0x240]
  406298:	mov    rdx,rbx
  40629b:	mov    rbx,rsi
  40629e:	lea    rcx,[rax-0x18]
  4062a2:	call   0x408188
  4062a7:	jmp    0x4051d7
  4062ac:	mov    rsi,rax
  4062af:	jmp    0x406290
  4062b1:	mov    rsi,rax
  4062b4:	mov    rax,QWORD PTR [rsp+0x220]
  4062bc:	mov    rdx,rbx
  4062bf:	lea    rcx,[rax-0x18]
  4062c3:	call   0x408188
  4062c8:	mov    rax,QWORD PTR [rsp+0x210]
  4062d0:	mov    rdx,rbx
  4062d3:	lea    rcx,[rax-0x18]
  4062d7:	call   0x408188
  4062dc:	mov    rax,QWORD PTR [rsp+0x200]
  4062e4:	mov    rdx,rbx
  4062e7:	mov    rbx,rsi
  4062ea:	lea    rcx,[rax-0x18]
  4062ee:	call   0x408188
  4062f3:	jmp    0x4051d7
  4062f8:	mov    rsi,rax
  4062fb:	jmp    0x4062c8
  4062fd:	mov    rsi,rax
  406300:	jmp    0x4062dc
  406302:	mov    rsi,rax
  406305:	mov    rax,QWORD PTR [rsp+0x1f0]
  40630d:	mov    rdx,rbx
  406310:	mov    rbx,rsi
  406313:	lea    rcx,[rax-0x18]
  406317:	call   0x408188
  40631c:	jmp    0x4051d7
  406321:	mov    rbx,rax
  406324:	jmp    0x4051d7
  406329:	mov    rsi,rax
  40632c:	mov    rax,QWORD PTR [rsp+0x1c0]
  406334:	mov    rdx,rbx
  406337:	lea    rcx,[rax-0x18]
  40633b:	call   0x408188
  406340:	jmp    0x404dab
  406345:	nop
  406346:	nop
  406347:	nop
  406348:	nop
  406349:	nop
  40634a:	nop
  40634b:	nop
  40634c:	nop
  40634d:	nop
  40634e:	nop
  40634f:	nop
  406350:	xor    eax,eax
  406352:	ret    
  406353:	nop    DWORD PTR [rax]
  406356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406360:	mov    eax,0x4
  406365:	ret    
  406366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406370:	mov    eax,0x2
  406375:	ret    
  406376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406380:	mov    eax,0x1
  406385:	ret    
  406386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406390:	jmp    0x409f60
  406395:	nop
  406396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063a0:	jmp    0x409f68
  4063a5:	nop
  4063a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063b0:	jmp    0x4068d0
  4063b5:	nop
  4063b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063c0:	lea    rax,[rip+0x12789]        # 0x418b50
  4063c7:	ret    
  4063c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4063d0:	jmp    0x406900
  4063d5:	nop
  4063d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063e0:	push   r15
  4063e2:	push   r14
  4063e4:	push   r13
  4063e6:	push   r12
  4063e8:	push   rbp
  4063e9:	push   rdi
  4063ea:	push   rsi
  4063eb:	push   rbx
  4063ec:	sub    rsp,0x28
  4063f0:	cmp    QWORD PTR [rdx],0x0
  4063f4:	mov    QWORD PTR [rsp+0x70],rcx
  4063f9:	mov    rdi,rdx
  4063fc:	je     0x406651
  406402:	xor    ebx,ebx
  406404:	add    rbx,0x1
  406408:	cmp    QWORD PTR [rdi+rbx*8],0x0
  40640d:	lea    r12,[rbx*8+0x0]
  406415:	jne    0x406404
  406417:	lea    rcx,[rbx+0x1]
  40641b:	xor    esi,esi
  40641d:	call   0x407740
  406422:	mov    rbp,rax
  406425:	mov    r15,QWORD PTR [rdi+rsi*8]
  406429:	movzx  r14d,BYTE PTR [r15]
  40642d:	test   r14b,r14b
  406430:	je     0x406610
  406436:	lea    rdx,[rip+0x12723]        # 0x418b60
  40643d:	mov    rcx,r15
  406440:	call   0x409fd0
  406445:	test   rax,rax
  406448:	je     0x406637
  40644e:	lea    rdx,[rip+0x12733]        # 0x418b88
  406455:	mov    rcx,r15
  406458:	call   0x409fd0
  40645d:	test   rax,rax
  406460:	mov    rdx,r15
  406463:	setne  r13b
  406467:	xor    eax,eax
  406469:	xor    r9d,r9d
  40646c:	movzx  ecx,r13b
  406470:	jmp    0x40648e
  406472:	add    eax,0x1
  406475:	add    rcx,0x1
  406479:	cmp    r14b,0x5c
  40647d:	cmovne eax,r9d
  406481:	add    rdx,0x1
  406485:	movzx  r14d,BYTE PTR [rdx]
  406489:	test   r14b,r14b
  40648c:	je     0x4064ab
  40648e:	cmp    r14b,0x22
  406492:	jne    0x406472
  406494:	add    rdx,0x1
  406498:	movzx  r14d,BYTE PTR [rdx]
  40649c:	add    eax,0x1
  40649f:	lea    rcx,[rcx+rax*1+0x1]
  4064a4:	xor    eax,eax
  4064a6:	test   r14b,r14b
  4064a9:	jne    0x40648e
  4064ab:	test   r13b,r13b
  4064ae:	je     0x4065f0
  4064b4:	add    eax,0x1
  4064b7:	lea    rcx,[rcx+rax*1+0x1]
  4064bc:	call   0x407740
  4064c1:	mov    BYTE PTR [rax],0x22
  4064c4:	movzx  r10d,BYTE PTR [r15]
  4064c8:	lea    r9,[rax+0x1]
  4064cc:	test   r10b,r10b
  4064cf:	je     0x406649
  4064d5:	xor    edx,edx
  4064d7:	jmp    0x406503
  4064d9:	nop    DWORD PTR [rax+0x0]
  4064e0:	cmp    r10b,0x5c
  4064e4:	lea    rcx,[r9+0x1]
  4064e8:	mov    BYTE PTR [r9],r10b
  4064eb:	je     0x4065e1
  4064f1:	mov    r9,rcx
  4064f4:	xor    edx,edx
  4064f6:	add    r15,0x1
  4064fa:	movzx  r10d,BYTE PTR [r15]
  4064fe:	test   r10b,r10b
  406501:	je     0x406544
  406503:	cmp    r10b,0x22
  406507:	jne    0x4064e0
  406509:	cmp    edx,0xffffffff
  40650c:	je     0x406626
  406512:	lea    rdx,[r9+rdx*1+0x1]
  406517:	nop    WORD PTR [rax+rax*1+0x0]
  406520:	add    r9,0x1
  406524:	mov    BYTE PTR [r9-0x1],0x5c
  406529:	cmp    r9,rdx
  40652c:	jne    0x406520
  40652e:	lea    r9,[rdx+0x1]
  406532:	mov    BYTE PTR [rdx],0x22
  406535:	xor    edx,edx
  406537:	add    r15,0x1
  40653b:	movzx  r10d,BYTE PTR [r15]
  40653f:	test   r10b,r10b
  406542:	jne    0x406503
  406544:	test   r13b,r13b
  406547:	je     0x406575
  406549:	test   edx,edx
  40654b:	je     0x406649
  406551:	sub    edx,0x1
  406554:	lea    rdx,[r9+rdx*1+0x1]
  406559:	nop    DWORD PTR [rax+0x0]
  406560:	add    r9,0x1
  406564:	mov    BYTE PTR [r9-0x1],0x5c
  406569:	cmp    r9,rdx
  40656c:	jne    0x406560
  40656e:	lea    r9,[rdx+0x1]
  406572:	mov    BYTE PTR [rdx],0x22
  406575:	mov    BYTE PTR [r9],0x0
  406579:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
  40657e:	add    rsi,0x1
  406582:	cmp    rsi,rbx
  406585:	jne    0x406425
  40658b:	mov    rdx,QWORD PTR [rsp+0x70]
  406590:	mov    ecx,0x2
  406595:	mov    QWORD PTR [rbp+r12*1+0x0],0x0
  40659e:	mov    r8,rbp
  4065a1:	mov    rbx,rbp
  4065a4:	call   0x409d50
  4065a9:	mov    rcx,QWORD PTR [rbp+0x0]
  4065ad:	mov    rsi,rax
  4065b0:	test   rcx,rcx
  4065b3:	je     0x4065c6
  4065b5:	add    rbx,0x8
  4065b9:	call   0x40a060
  4065be:	mov    rcx,QWORD PTR [rbx]
  4065c1:	test   rcx,rcx
  4065c4:	jne    0x4065b5
  4065c6:	mov    rcx,rbp
  4065c9:	call   0x40a060
  4065ce:	mov    eax,esi
  4065d0:	add    rsp,0x28
  4065d4:	pop    rbx
  4065d5:	pop    rsi
  4065d6:	pop    rdi
  4065d7:	pop    rbp
  4065d8:	pop    r12
  4065da:	pop    r13
  4065dc:	pop    r14
  4065de:	pop    r15
  4065e0:	ret    
  4065e1:	add    edx,0x1
  4065e4:	mov    r9,rcx
  4065e7:	jmp    0x4064f6
  4065ec:	nop    DWORD PTR [rax+0x0]
  4065f0:	add    rcx,0x1
  4065f4:	call   0x407740
  4065f9:	movzx  r10d,BYTE PTR [r15]
  4065fd:	mov    r9,rax
  406600:	test   r10b,r10b
  406603:	jne    0x4064d5
  406609:	jmp    0x406575
  40660e:	xchg   ax,ax
  406610:	lea    rcx,[rip+0x12542]        # 0x418b59
  406617:	call   0x407a80
  40661c:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
  406621:	jmp    0x40657e
  406626:	mov    rdx,r9
  406629:	lea    r9,[rdx+0x1]
  40662d:	mov    BYTE PTR [rdx],0x22
  406630:	xor    edx,edx
  406632:	jmp    0x406537
  406637:	mov    rcx,r15
  40663a:	call   0x407a80
  40663f:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
  406644:	jmp    0x40657e
  406649:	mov    rdx,r9
  40664c:	jmp    0x40656e
  406651:	mov    ecx,0x1
  406656:	xor    r12d,r12d
  406659:	call   0x407740
  40665e:	mov    rbp,rax
  406661:	jmp    0x40658b
  406666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406670:	jmp    0x409d20
  406675:	nop
  406676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406680:	mov    rax,0xffffffffffffffff
  406687:	ret    
  406688:	nop    DWORD PTR [rax+rax*1+0x0]
  406690:	jmp    0x406d80
  406695:	nop
  406696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4066a0:	jmp    0x406da0
  4066a5:	nop
  4066a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4066b0:	mov    eax,0xffffffff
  4066b5:	ret    
  4066b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4066c0:	mov    eax,0xffffffff
  4066c5:	ret    
  4066c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4066d0:	mov    eax,0xffffffff
  4066d5:	ret    
  4066d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4066e0:	mov    rax,QWORD PTR [rip+0x19475]        # 0x41fb5c
  4066e7:	rex.W jmp rax
  4066ea:	nop    WORD PTR [rax+rax*1+0x0]
  4066f0:	mov    rax,0xffffffffffffffff
  4066f7:	ret    
  4066f8:	nop    DWORD PTR [rax+rax*1+0x0]
  406700:	sub    rsp,0x28
  406704:	call   0x409f90
  406709:	cdqe   
  40670b:	add    rsp,0x28
  40670f:	ret    
  406710:	mov    rax,0xffffffffffffffff
  406717:	ret    
  406718:	nop    DWORD PTR [rax+rax*1+0x0]
  406720:	mov    eax,0xffffffff
  406725:	ret    
  406726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406730:	jmp    0x4073f0
  406735:	nop
  406736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406740:	jmp    0x407470
  406745:	nop
  406746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406750:	jmp    0x4077e0
  406755:	nop
  406756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406760:	jmp    0x407870
  406765:	nop
  406766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406770:	mov    rax,0xffffffffffffffff
  406777:	ret    
  406778:	nop    DWORD PTR [rax+rax*1+0x0]
  406780:	xor    eax,eax
  406782:	ret    
  406783:	nop    DWORD PTR [rax]
  406786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406790:	mov    eax,0x1
  406795:	ret    
  406796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4067a0:	jmp    0x407ac0
  4067a5:	nop
  4067a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4067b0:	jmp    0x407ae0
  4067b5:	nop
  4067b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4067c0:	mov    rax,0xffffffffffffffff
  4067c7:	ret    
  4067c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4067d0:	xor    eax,eax
  4067d2:	ret    
  4067d3:	nop    DWORD PTR [rax]
  4067d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4067e0:	xor    eax,eax
  4067e2:	ret    
  4067e3:	nop
  4067e4:	nop
  4067e5:	nop
  4067e6:	nop
  4067e7:	nop
  4067e8:	nop
  4067e9:	nop
  4067ea:	nop
  4067eb:	nop
  4067ec:	nop
  4067ed:	nop
  4067ee:	nop
  4067ef:	nop
  4067f0:	mov    rax,0xffffffffffffffff
  4067f7:	mov    DWORD PTR [rdx],0x0
  4067fd:	ret    
  4067fe:	xchg   ax,ax
  406800:	xor    eax,eax
  406802:	ret    
  406803:	nop    DWORD PTR [rax]
  406806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406810:	xor    eax,eax
  406812:	ret    
  406813:	nop    DWORD PTR [rax]
  406816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406820:	xor    eax,eax
  406822:	ret    
  406823:	nop    DWORD PTR [rax]
  406826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406830:	cmp    ecx,0x3
  406833:	setne  al
  406836:	ret    
  406837:	nop    WORD PTR [rax+rax*1+0x0]
  406840:	cmp    ecx,0x3
  406843:	sete   al
  406846:	ret    
  406847:	nop    WORD PTR [rax+rax*1+0x0]
  406850:	xor    eax,eax
  406852:	ret    
  406853:	nop    DWORD PTR [rax]
  406856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406860:	mov    eax,ecx
  406862:	ret    
  406863:	nop    DWORD PTR [rax]
  406866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406870:	xor    eax,eax
  406872:	ret    
  406873:	nop    DWORD PTR [rax]
  406876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406880:	xor    eax,eax
  406882:	ret    
  406883:	nop    DWORD PTR [rax]
  406886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406890:	mov    eax,0xf
  406895:	ret    
  406896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068a0:	xor    eax,eax
  4068a2:	ret    
  4068a3:	nop
  4068a4:	nop
  4068a5:	nop
  4068a6:	nop
  4068a7:	nop
  4068a8:	nop
  4068a9:	nop
  4068aa:	nop
  4068ab:	nop
  4068ac:	nop
  4068ad:	nop
  4068ae:	nop
  4068af:	nop
  4068b0:	push   rbx
  4068b1:	sub    rsp,0x20
  4068b5:	mov    ebx,ecx
  4068b7:	call   0x407790
  4068bc:	mov    ecx,ebx
  4068be:	add    rsp,0x20
  4068c2:	pop    rbx
  4068c3:	jmp    0x409f78
  4068c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4068d0:	push   rbx
  4068d1:	sub    rsp,0x30
  4068d5:	mov    edx,ecx
  4068d7:	mov    ebx,ecx
  4068d9:	lea    rcx,[rip+0xffffffffffffffd0]        # 0x4068b0
  4068e0:	call   0x407c20
  4068e5:	test   eax,eax
  4068e7:	js     0x4068f8
  4068e9:	mov    ecx,ebx
  4068eb:	mov    DWORD PTR [rsp+0x2c],eax
  4068ef:	call   0x406a70
  4068f4:	mov    eax,DWORD PTR [rsp+0x2c]
  4068f8:	add    rsp,0x30
  4068fc:	pop    rbx
  4068fd:	ret    
  4068fe:	nop
  4068ff:	nop
  406900:	push   rsi
  406901:	push   rbx
  406902:	sub    rsp,0x28
  406906:	cmp    ecx,edx
  406908:	mov    ebx,ecx
  40690a:	mov    esi,edx
  40690c:	je     0x406960
  40690e:	test   edx,edx
  406910:	js     0x406990
  406912:	call   0x407790
  406917:	mov    edx,esi
  406919:	mov    ecx,ebx
  40691b:	call   0x409f80
  406920:	test   eax,eax
  406922:	jne    0x406935
  406924:	mov    eax,esi
  406926:	mov    edx,eax
  406928:	mov    ecx,ebx
  40692a:	add    rsp,0x28
  40692e:	pop    rbx
  40692f:	pop    rsi
  406930:	jmp    0x406c00
  406935:	cmp    eax,0xffffffff
  406938:	jne    0x406926
  40693a:	mov    rbx,QWORD PTR [rip+0x1903b]        # 0x41f97c
  406941:	call   rbx
  406943:	cmp    DWORD PTR [rax],0x18
  406946:	je     0x406980
  406948:	mov    ebx,0xffffffff
  40694d:	mov    eax,ebx
  40694f:	add    rsp,0x28
  406953:	pop    rbx
  406954:	pop    rsi
  406955:	ret    
  406956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406960:	call   0x4077c0
  406965:	cmp    rax,0xffffffffffffffff
  406969:	je     0x406990
  40696b:	cmp    ebx,0xffffffff
  40696e:	je     0x40693a
  406970:	mov    eax,ebx
  406972:	add    rsp,0x28
  406976:	pop    rbx
  406977:	pop    rsi
  406978:	ret    
  406979:	nop    DWORD PTR [rax+0x0]
  406980:	call   rbx
  406982:	mov    DWORD PTR [rax],0x9
  406988:	jmp    0x406948
  40698a:	nop    WORD PTR [rax+rax*1+0x0]
  406990:	mov    rbx,QWORD PTR [rip+0x18fe5]        # 0x41f97c
  406997:	call   rbx
  406999:	mov    DWORD PTR [rax],0x9
  40699f:	jmp    0x406941
  4069a1:	nop
  4069a2:	nop
  4069a3:	nop
  4069a4:	nop
  4069a5:	nop
  4069a6:	nop
  4069a7:	nop
  4069a8:	nop
  4069a9:	nop
  4069aa:	nop
  4069ab:	nop
  4069ac:	nop
  4069ad:	nop
  4069ae:	nop
  4069af:	nop
  4069b0:	push   rsi
  4069b1:	push   rbx
  4069b2:	sub    rsp,0x28
  4069b6:	mov    rax,QWORD PTR [rip+0x16703]        # 0x41d0c0
  4069bd:	cmp    rax,rcx
  4069c0:	ja     0x406a30
  4069c2:	lea    rbx,[rax+rax*1+0x1]
  4069c7:	lea    rax,[rcx+0x1]
  4069cb:	cmp    rcx,rbx
  4069ce:	mov    rcx,QWORD PTR [rip+0x166f3]        # 0x41d0c8
  4069d5:	cmovae rbx,rax
  4069d9:	test   rcx,rcx
  4069dc:	je     0x406a50
  4069de:	lea    rdx,[rbx*8+0x0]
  4069e6:	call   0x407820
  4069eb:	mov    rsi,rax
  4069ee:	xor    eax,eax
  4069f0:	test   rsi,rsi
  4069f3:	je     0x406a24
  4069f5:	mov    rax,QWORD PTR [rip+0x166c4]        # 0x41d0c0
  4069fc:	mov    r8,rbx
  4069ff:	xor    edx,edx
  406a01:	sub    r8,rax
  406a04:	lea    rcx,[rsi+rax*8]
  406a08:	shl    r8,0x3
  406a0c:	call   0x40a020
  406a11:	mov    QWORD PTR [rip+0x166b0],rsi        # 0x41d0c8
  406a18:	mov    QWORD PTR [rip+0x166a1],rbx        # 0x41d0c0
  406a1f:	mov    eax,0x1
  406a24:	add    rsp,0x28
  406a28:	pop    rbx
  406a29:	pop    rsi
  406a2a:	ret    
  406a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  406a30:	mov    rax,QWORD PTR [rip+0x16691]        # 0x41d0c8
  406a37:	mov    rcx,QWORD PTR [rax+rcx*8]
  406a3b:	call   0x40a060
  406a40:	mov    eax,0x1
  406a45:	add    rsp,0x28
  406a49:	pop    rbx
  406a4a:	pop    rsi
  406a4b:	ret    
  406a4c:	nop    DWORD PTR [rax+0x0]
  406a50:	lea    rcx,[rbx*8+0x0]
  406a58:	call   0x407740
  406a5d:	mov    rsi,rax
  406a60:	jmp    0x4069ee
  406a62:	nop    DWORD PTR [rax+0x0]
  406a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a70:	push   rbx
  406a71:	sub    rsp,0x20
  406a75:	test   ecx,ecx
  406a77:	js     0x406a85
  406a79:	movsxd rcx,ecx
  406a7c:	cmp    rcx,QWORD PTR [rip+0x1663d]        # 0x41d0c0
  406a83:	jb     0x406a90
  406a85:	add    rsp,0x20
  406a89:	pop    rbx
  406a8a:	ret    
  406a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  406a90:	mov    rax,QWORD PTR [rip+0x16631]        # 0x41d0c8
  406a97:	lea    rbx,[rax+rcx*8]
  406a9b:	mov    rcx,QWORD PTR [rbx]
  406a9e:	call   0x40a060
  406aa3:	mov    QWORD PTR [rbx],0x0
  406aaa:	add    rsp,0x20
  406aae:	pop    rbx
  406aaf:	ret    
  406ab0:	push   r13
  406ab2:	push   r12
  406ab4:	push   rbp
  406ab5:	push   rdi
  406ab6:	push   rsi
  406ab7:	push   rbx
  406ab8:	sub    rsp,0x28
  406abc:	test   ecx,ecx
  406abe:	mov    ebx,ecx
  406ac0:	mov    rsi,rdx
  406ac3:	js     0x406bb0
  406ac9:	movsxd rdi,ebx
  406acc:	mov    rcx,rdi
  406acf:	call   0x4069b0
  406ad4:	test   al,al
  406ad6:	je     0x406bd7
  406adc:	movzx  edx,BYTE PTR [rsi]
  406adf:	mov    rax,QWORD PTR [rip+0x165e2]        # 0x41d0c8
  406ae6:	lea    rdi,[rax+rdi*8]
  406aea:	mov    eax,edx
  406aec:	or     eax,0x20
  406aef:	movsx  eax,al
  406af2:	sub    eax,0x61
  406af5:	cmp    eax,0x19
  406af8:	jbe    0x406b74
  406afa:	cmp    dl,0x2f
  406afd:	sete   dl
  406b00:	xor    eax,eax
  406b02:	cmp    BYTE PTR [rsi+rax*1],0x5c
  406b06:	je     0x406b90
  406b0c:	test   dl,dl
  406b0e:	jne    0x406b90
  406b14:	xor    edx,edx
  406b16:	xor    ecx,ecx
  406b18:	call   0x406da0
  406b1d:	test   rax,rax
  406b20:	mov    rbp,rax
  406b23:	je     0x406bd0
  406b29:	cmp    BYTE PTR [rsi],0x2e
  406b2c:	je     0x406ba0
  406b2e:	mov    rdx,rsi
  406b31:	xor    r8d,r8d
  406b34:	mov    rcx,rbp
  406b37:	call   0x407d20
  406b3c:	mov    r12,QWORD PTR [rip+0x18e39]        # 0x41f97c
  406b43:	mov    rsi,rax
  406b46:	call   r12
  406b49:	mov    r13d,DWORD PTR [rax]
  406b4c:	mov    rcx,rbp
  406b4f:	call   0x40a060
  406b54:	call   r12
  406b57:	mov    DWORD PTR [rax],r13d
  406b5a:	mov    rax,rsi
  406b5d:	test   rax,rax
  406b60:	mov    QWORD PTR [rdi],rax
  406b63:	je     0x406bd7
  406b65:	mov    eax,ebx
  406b67:	add    rsp,0x28
  406b6b:	pop    rbx
  406b6c:	pop    rsi
  406b6d:	pop    rdi
  406b6e:	pop    rbp
  406b6f:	pop    r12
  406b71:	pop    r13
  406b73:	ret    
  406b74:	cmp    BYTE PTR [rsi+0x1],0x3a
  406b78:	jne    0x406afa
  406b7a:	cmp    BYTE PTR [rsi+0x2],0x2f
  406b7e:	mov    eax,0x2
  406b83:	sete   dl
  406b86:	cmp    BYTE PTR [rsi+rax*1],0x5c
  406b8a:	jne    0x406b0c
  406b8c:	nop    DWORD PTR [rax+0x0]
  406b90:	mov    rcx,rsi
  406b93:	call   0x407a80
  406b98:	jmp    0x406b5d
  406b9a:	nop    WORD PTR [rax+rax*1+0x0]
  406ba0:	cmp    BYTE PTR [rsi+0x1],0x0
  406ba4:	jne    0x406b2e
  406ba6:	mov    QWORD PTR [rdi],rax
  406ba9:	jmp    0x406b65
  406bab:	nop    DWORD PTR [rax+rax*1+0x0]
  406bb0:	lea    rdx,[rip+0x11ff9]        # 0x418bb0
  406bb7:	lea    rcx,[rip+0x12046]        # 0x418c04
  406bbe:	mov    r8d,0x87
  406bc4:	call   0x409ea0
  406bc9:	jmp    0x406ac9
  406bce:	xchg   ax,ax
  406bd0:	mov    QWORD PTR [rdi],0x0
  406bd7:	mov    rsi,QWORD PTR [rip+0x18d9e]        # 0x41f97c
  406bde:	call   rsi
  406be0:	mov    edi,DWORD PTR [rax]
  406be2:	mov    ecx,ebx
  406be4:	call   0x4068d0
  406be9:	call   rsi
  406beb:	mov    DWORD PTR [rax],edi
  406bed:	mov    eax,0xffffffff
  406bf2:	jmp    0x406b67
  406bf7:	nop    WORD PTR [rax+rax*1+0x0]
  406c00:	push   rdi
  406c01:	push   rsi
  406c02:	push   rbx
  406c03:	sub    rsp,0x20
  406c07:	movsxd rbx,ecx
  406c0a:	mov    esi,edx
  406c0c:	mov    eax,ebx
  406c0e:	not    eax
  406c10:	shr    eax,0x1f
  406c13:	cmp    ebx,edx
  406c15:	setne  dl
  406c18:	test   dl,al
  406c1a:	je     0x406ca0
  406c20:	test   esi,esi
  406c22:	js     0x406ca0
  406c24:	mov    rax,QWORD PTR [rip+0x16495]        # 0x41d0c0
  406c2b:	cmp    rbx,rax
  406c2e:	jae    0x406c73
  406c30:	mov    rdx,QWORD PTR [rip+0x16491]        # 0x41d0c8
  406c37:	cmp    QWORD PTR [rdx+rbx*8],0x0
  406c3c:	je     0x406c73
  406c3e:	movsxd rdi,esi
  406c41:	mov    rcx,rdi
  406c44:	call   0x4069b0
  406c49:	test   al,al
  406c4b:	je     0x406cc0
  406c4d:	mov    rax,QWORD PTR [rip+0x16474]        # 0x41d0c8
  406c54:	mov    rcx,QWORD PTR [rax+rbx*8]
  406c58:	lea    rdi,[rax+rdi*8]
  406c5c:	call   0x407a80
  406c61:	test   rax,rax
  406c64:	mov    QWORD PTR [rdi],rax
  406c67:	je     0x406cc0
  406c69:	mov    eax,esi
  406c6b:	add    rsp,0x20
  406c6f:	pop    rbx
  406c70:	pop    rsi
  406c71:	pop    rdi
  406c72:	ret    
  406c73:	movsxd rdx,esi
  406c76:	cmp    rax,rdx
  406c79:	jbe    0x406c69
  406c7b:	mov    rax,QWORD PTR [rip+0x16446]        # 0x41d0c8
  406c82:	lea    rbx,[rax+rdx*8]
  406c86:	mov    rcx,QWORD PTR [rbx]
  406c89:	call   0x40a060
  406c8e:	mov    eax,esi
  406c90:	mov    QWORD PTR [rbx],0x0
  406c97:	add    rsp,0x20
  406c9b:	pop    rbx
  406c9c:	pop    rsi
  406c9d:	pop    rdi
  406c9e:	ret    
  406c9f:	nop
  406ca0:	lea    rdx,[rip+0x11f09]        # 0x418bb0
  406ca7:	lea    rcx,[rip+0x11f62]        # 0x418c10
  406cae:	mov    r8d,0x9f
  406cb4:	call   0x409ea0
  406cb9:	jmp    0x406c24
  406cbe:	xchg   ax,ax
  406cc0:	mov    rbx,QWORD PTR [rip+0x18cb5]        # 0x41f97c
  406cc7:	call   rbx
  406cc9:	mov    edi,DWORD PTR [rax]
  406ccb:	mov    ecx,esi
  406ccd:	mov    esi,0xffffffff
  406cd2:	call   0x4068d0
  406cd7:	call   rbx
  406cd9:	mov    DWORD PTR [rax],edi
  406cdb:	jmp    0x406c69
  406cdd:	nop    DWORD PTR [rax]
  406ce0:	push   rsi
  406ce1:	push   rbx
  406ce2:	sub    rsp,0x28
  406ce6:	test   ecx,ecx
  406ce8:	mov    ebx,ecx
  406cea:	js     0x406d40
  406cec:	movsxd rax,ecx
  406cef:	cmp    rax,QWORD PTR [rip+0x163ca]        # 0x41d0c0
  406cf6:	jb     0x406d11
  406cf8:	mov    edx,ebx
  406cfa:	mov    ecx,ebx
  406cfc:	xor    esi,esi
  406cfe:	call   0x406900
  406d03:	cmp    eax,ebx
  406d05:	je     0x406d30
  406d07:	mov    rax,rsi
  406d0a:	add    rsp,0x28
  406d0e:	pop    rbx
  406d0f:	pop    rsi
  406d10:	ret    
  406d11:	mov    rdx,QWORD PTR [rip+0x163b0]        # 0x41d0c8
  406d18:	mov    rsi,QWORD PTR [rdx+rax*8]
  406d1c:	test   rsi,rsi
  406d1f:	je     0x406cf8
  406d21:	mov    rax,rsi
  406d24:	add    rsp,0x28
  406d28:	pop    rbx
  406d29:	pop    rsi
  406d2a:	ret    
  406d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  406d30:	call   QWORD PTR [rip+0x18c46]        # 0x41f97c
  406d36:	mov    DWORD PTR [rax],0x14
  406d3c:	jmp    0x406d07
  406d3e:	xchg   ax,ax
  406d40:	call   QWORD PTR [rip+0x18c36]        # 0x41f97c
  406d46:	xor    esi,esi
  406d48:	mov    DWORD PTR [rax],0x9
  406d4e:	jmp    0x406d07
  406d50:	sub    rsp,0x28
  406d54:	call   0x406ce0
  406d59:	test   rax,rax
  406d5c:	je     0x406d70
  406d5e:	mov    rcx,rax
  406d61:	add    rsp,0x28
  406d65:	jmp    0x409f68
  406d6a:	nop    WORD PTR [rax+rax*1+0x0]
  406d70:	mov    eax,0xffffffff
  406d75:	add    rsp,0x28
  406d79:	ret    
  406d7a:	nop
  406d7b:	nop
  406d7c:	nop
  406d7d:	nop
  406d7e:	nop
  406d7f:	nop
  406d80:	push   rsi
  406d81:	push   rbx
  406d82:	sub    rsp,0x28
  406d86:	mov    ebx,ecx
  406d88:	mov    rsi,rdx
  406d8b:	call   0x407790
  406d90:	mov    edx,esi
  406d92:	mov    ecx,ebx
  406d94:	add    rsp,0x28
  406d98:	pop    rbx
  406d99:	pop    rsi
  406d9a:	jmp    0x409f70
  406d9f:	nop
  406da0:	push   r15
  406da2:	push   r14
  406da4:	push   r13
  406da6:	push   r12
  406da8:	push   rbp
  406da9:	push   rdi
  406daa:	push   rsi
  406dab:	push   rbx
  406dac:	sub    rsp,0x2d8
  406db3:	mov    QWORD PTR [rsp+0x328],rdx
  406dbb:	mov    edx,DWORD PTR [rsp+0x328]
  406dc2:	mov    r15,rcx
  406dc5:	call   0x409f88
  406dca:	test   rax,rax
  406dcd:	je     0x406de3
  406dcf:	add    rsp,0x2d8
  406dd6:	pop    rbx
  406dd7:	pop    rsi
  406dd8:	pop    rdi
  406dd9:	pop    rbp
  406dda:	pop    r12
  406ddc:	pop    r13
  406dde:	pop    r14
  406de0:	pop    r15
  406de2:	ret    
  406de3:	cmp    QWORD PTR [rsp+0x328],0x0
  406dec:	mov    r12,QWORD PTR [rip+0x18b89]        # 0x41f97c
  406df3:	je     0x407160
  406df9:	call   r12
  406dfc:	cmp    DWORD PTR [rax],0x22
  406dff:	je     0x407196
  406e05:	call   r12
  406e08:	mov    rax,QWORD PTR [rsp+0x328]
  406e10:	test   r15,r15
  406e13:	mov    QWORD PTR [rsp+0x30],rax
  406e18:	je     0x40717e
  406e1e:	mov    QWORD PTR [rsp+0x38],r15
  406e23:	mov    rbx,QWORD PTR [rsp+0x38]
  406e28:	add    rbx,QWORD PTR [rsp+0x30]
  406e2d:	lea    rcx,[rip+0x11e0c]        # 0x418c40
  406e34:	lea    rax,[rbx-0x1]
  406e38:	mov    BYTE PTR [rbx-0x1],0x0
  406e3c:	mov    QWORD PTR [rsp+0x48],rax
  406e41:	lea    rax,[rsp+0x60]
  406e46:	mov    rdx,rax
  406e49:	mov    rdi,rax
  406e4c:	mov    QWORD PTR [rsp+0x40],rax
  406e51:	call   0x407920
  406e56:	test   eax,eax
  406e58:	js     0x4072b5
  406e5e:	mov    eax,DWORD PTR [rsp+0x60]
  406e62:	lea    rcx,[rip+0x11dd9]        # 0x418c42
  406e69:	mov    rdx,rdi
  406e6c:	mov    DWORD PTR [rsp+0x28],eax
  406e70:	mov    r14d,eax
  406e73:	movzx  eax,WORD PTR [rsp+0x64]
  406e78:	mov    esi,eax
  406e7a:	mov    WORD PTR [rsp+0x52],ax
  406e7f:	call   0x407920
  406e84:	test   eax,eax
  406e86:	js     0x4072b5
  406e8c:	mov    eax,DWORD PTR [rsp+0x60]
  406e90:	mov    edi,eax
  406e92:	mov    DWORD PTR [rsp+0x58],eax
  406e96:	movzx  eax,WORD PTR [rsp+0x64]
  406e9b:	mov    edx,eax
  406e9d:	mov    WORD PTR [rsp+0x5e],ax
  406ea2:	cmp    si,dx
  406ea5:	jne    0x406eb0
  406ea7:	cmp    r14d,edi
  406eaa:	je     0x407310
  406eb0:	lea    rax,[rsp+0xa0]
  406eb8:	mov    r14,QWORD PTR [rsp+0x40]
  406ebd:	mov    QWORD PTR [rsp+0x320],r15
  406ec5:	xor    r13d,r13d
  406ec8:	xor    esi,esi
  406eca:	mov    ebp,0x22c
  406ecf:	mov    QWORD PTR [rsp+0x20],rax
  406ed4:	mov    r15,rax
  406ed7:	lea    rbx,[r15+rsi*1+0x2]
  406edc:	mov    BYTE PTR [r15+rsi*1],0x2e
  406ee1:	mov    BYTE PTR [r15+rsi*1+0x1],0x2e
  406ee7:	mov    rdx,r14
  406eea:	mov    rcx,r15
  406eed:	mov    BYTE PTR [rbx],0x0
  406ef0:	call   0x407920
  406ef5:	test   eax,eax
  406ef7:	jne    0x4072eb
  406efd:	test   r13,r13
  406f00:	je     0x406f12
  406f02:	mov    rcx,r13
  406f05:	call   0x409b80
  406f0a:	test   eax,eax
  406f0c:	jne    0x4072de
  406f12:	mov    eax,DWORD PTR [rsp+0x60]
  406f16:	mov    rcx,r15
  406f19:	mov    DWORD PTR [rsp+0x54],eax
  406f1d:	movzx  eax,WORD PTR [rsp+0x64]
  406f22:	mov    WORD PTR [rsp+0x5c],ax
  406f27:	call   0x409780
  406f2c:	test   rax,rax
  406f2f:	mov    r13,rax
  406f32:	je     0x4072de
  406f38:	add    rsi,0x3
  406f3c:	mov    BYTE PTR [rbx],0x2f
  406f3f:	mov    BYTE PTR [rsp+0x40],0x1
  406f44:	call   r12
  406f47:	mov    rcx,r13
  406f4a:	mov    DWORD PTR [rax],0x0
  406f50:	call   0x409960
  406f55:	test   rax,rax
  406f58:	je     0x4071c4
  406f5e:	cmp    BYTE PTR [rax+0x8],0x2e
  406f62:	je     0x4071a0
  406f68:	lea    rdi,[rax+0x8]
  406f6c:	mov    ebx,0x3
  406f71:	mov    rcx,rdi
  406f74:	call   0x409fe8
  406f79:	lea    r8,[rax+0x1]
  406f7d:	cmp    r8,0x3
  406f81:	cmovae rbx,r8
  406f85:	add    rbx,rsi
  406f88:	jb     0x407221
  406f8e:	cmp    rbp,rbx
  406f91:	jae    0x406ff9
  406f93:	lea    rax,[rbp+rbp*1+0x0]
  406f98:	cmp    rbx,rax
  406f9b:	cmovb  rbx,rax
  406f9f:	cmp    rbp,rbx
  406fa2:	ja     0x407221
  406fa8:	cmp    r15,QWORD PTR [rsp+0x20]
  406fad:	je     0x406fb7
  406faf:	mov    rcx,r15
  406fb2:	call   0x40a060
  406fb7:	mov    rcx,rbx
  406fba:	call   0x407740
  406fbf:	test   rax,rax
  406fc2:	mov    r15,rax
  406fc5:	je     0x407274
  406fcb:	xor    r8d,r8d
  406fce:	xchg   ax,ax
  406fd0:	mov    BYTE PTR [r15+r8*1],0x2e
  406fd5:	mov    BYTE PTR [r15+r8*1+0x1],0x2e
  406fdb:	add    r8,0x3
  406fdf:	cmp    rsi,r8
  406fe2:	mov    BYTE PTR [r15+r8*1-0x1],0x2f
  406fe8:	ja     0x406fd0
  406fea:	mov    rcx,rdi
  406fed:	mov    rbp,rbx
  406ff0:	call   0x409fe8
  406ff5:	lea    r8,[rax+0x1]
  406ff9:	lea    rcx,[r15+rsi*1]
  406ffd:	mov    rdx,rdi
  407000:	call   0x40a030
  407005:	mov    rdx,r14
  407008:	mov    rcx,r15
  40700b:	call   0x407920
  407010:	test   eax,eax
  407012:	jne    0x406f44
  407018:	movzx  eax,WORD PTR [rsp+0x66]
  40701d:	and    ax,0xf000
  407021:	cmp    ax,0x4000
  407025:	jne    0x406f44
  40702b:	mov    eax,DWORD PTR [rsp+0x28]
  40702f:	cmp    DWORD PTR [rsp+0x60],eax
  407033:	jne    0x406f44
  407039:	movzx  eax,WORD PTR [rsp+0x52]
  40703e:	cmp    WORD PTR [rsp+0x64],ax
  407043:	jne    0x406f44
  407049:	mov    r8,QWORD PTR [rsp+0x48]
  40704e:	sub    r8,QWORD PTR [rsp+0x38]
  407053:	mov    rcx,rdi
  407056:	mov    QWORD PTR [rsp+0x28],r8
  40705b:	call   0x409fe8
  407060:	mov    r8,QWORD PTR [rsp+0x28]
  407065:	mov    r10,rax
  407068:	cmp    r8,rax
  40706b:	ja     0x4070fe
  407071:	cmp    QWORD PTR [rsp+0x328],0x0
  40707a:	jne    0x407398
  407080:	mov    rax,QWORD PTR [rsp+0x30]
  407085:	mov    QWORD PTR [rsp+0x28],r8
  40708a:	mov    QWORD PTR [rsp+0x40],r10
  40708f:	cmp    r10,rax
  407092:	mov    rbx,rax
  407095:	cmovae rbx,r10
  407099:	add    rbx,rax
  40709c:	jb     0x407221
  4070a2:	mov    rcx,QWORD PTR [rsp+0x38]
  4070a7:	mov    rdx,rbx
  4070aa:	call   0x407820
  4070af:	test   rax,rax
  4070b2:	mov    r11,rax
  4070b5:	je     0x407221
  4070bb:	mov    r8,QWORD PTR [rsp+0x28]
  4070c0:	mov    rax,QWORD PTR [rsp+0x30]
  4070c5:	mov    QWORD PTR [rsp+0x28],r11
  4070ca:	mov    rcx,r8
  4070cd:	lea    rdx,[r11+r8*1]
  4070d1:	sub    rcx,rax
  4070d4:	sub    rax,r8
  4070d7:	add    rcx,rbx
  4070da:	mov    r8,rax
  4070dd:	add    rcx,r11
  4070e0:	call   0x40a030
  4070e5:	mov    r11,QWORD PTR [rsp+0x28]
  4070ea:	mov    r10,QWORD PTR [rsp+0x40]
  4070ef:	mov    QWORD PTR [rsp+0x48],rax
  4070f4:	mov    QWORD PTR [rsp+0x30],rbx
  4070f9:	mov    QWORD PTR [rsp+0x38],r11
  4070fe:	mov    r11,QWORD PTR [rsp+0x48]
  407103:	mov    rdx,rdi
  407106:	mov    r8,r10
  407109:	sub    r11,r10
  40710c:	mov    rcx,r11
  40710f:	call   0x40a030
  407114:	movzx  edx,WORD PTR [rsp+0x5c]
  407119:	mov    r11,rax
  40711c:	lea    rax,[rax-0x1]
  407120:	cmp    WORD PTR [rsp+0x5e],dx
  407125:	mov    BYTE PTR [r11-0x1],0x2f
  40712a:	mov    QWORD PTR [rsp+0x48],rax
  40712f:	jne    0x40713f
  407131:	mov    edx,DWORD PTR [rsp+0x54]
  407135:	cmp    DWORD PTR [rsp+0x58],edx
  407139:	je     0x4073b1
  40713f:	movzx  eax,WORD PTR [rsp+0x5c]
  407144:	mov    WORD PTR [rsp+0x52],ax
  407149:	mov    eax,DWORD PTR [rsp+0x54]
  40714d:	mov    DWORD PTR [rsp+0x28],eax
  407151:	jmp    0x406ed7
  407156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407160:	call   r12
  407163:	cmp    DWORD PTR [rax],0x16
  407166:	je     0x407237
  40716c:	test   r15,r15
  40716f:	jne    0x40723c
  407175:	mov    QWORD PTR [rsp+0x30],0x104
  40717e:	mov    rcx,QWORD PTR [rsp+0x30]
  407183:	call   0x407740
  407188:	test   rax,rax
  40718b:	mov    QWORD PTR [rsp+0x38],rax
  407190:	jne    0x406e23
  407196:	xor    eax,eax
  407198:	jmp    0x406dcf
  40719d:	nop    DWORD PTR [rax]
  4071a0:	cmp    BYTE PTR [rax+0x9],0x0
  4071a4:	je     0x406f44
  4071aa:	mov    edx,DWORD PTR [rax+0x8]
  4071ad:	and    edx,0xffff00
  4071b3:	cmp    edx,0x2e00
  4071b9:	jne    0x406f68
  4071bf:	jmp    0x406f44
  4071c4:	call   r12
  4071c7:	mov    edx,DWORD PTR [rax]
  4071c9:	test   edx,edx
  4071cb:	jne    0x4071d8
  4071cd:	cmp    BYTE PTR [rsp+0x40],0x0
  4071d2:	jne    0x407284
  4071d8:	mov    r14,r15
  4071db:	mov    r15,QWORD PTR [rsp+0x320]
  4071e3:	call   r12
  4071e6:	mov    eax,DWORD PTR [rax]
  4071e8:	test   eax,eax
  4071ea:	je     0x4072a7
  4071f0:	call   r12
  4071f3:	mov    ebx,DWORD PTR [rax]
  4071f5:	mov    rcx,r13
  4071f8:	call   0x409b80
  4071fd:	cmp    r14,QWORD PTR [rsp+0x20]
  407202:	je     0x40720c
  407204:	mov    rcx,r14
  407207:	call   0x40a060
  40720c:	test   r15,r15
  40720f:	je     0x4072cf
  407215:	call   r12
  407218:	mov    DWORD PTR [rax],ebx
  40721a:	xor    eax,eax
  40721c:	jmp    0x406dcf
  407221:	mov    r14,r15
  407224:	mov    r15,QWORD PTR [rsp+0x320]
  40722c:	call   r12
  40722f:	mov    DWORD PTR [rax],0xc
  407235:	jmp    0x4071f0
  407237:	test   r15,r15
  40723a:	je     0x40724c
  40723c:	call   r12
  40723f:	mov    DWORD PTR [rax],0x16
  407245:	xor    eax,eax
  407247:	jmp    0x406dcf
  40724c:	lea    rcx,[rsp+0xa0]
  407254:	mov    edx,0x104
  407259:	call   0x409f88
  40725e:	test   rax,rax
  407261:	je     0x407175
  407267:	mov    rcx,rax
  40726a:	call   0x407a80
  40726f:	jmp    0x406dcf
  407274:	mov    r14,rax
  407277:	mov    r15,QWORD PTR [rsp+0x320]
  40727f:	jmp    0x4071f0
  407284:	mov    rcx,r13
  407287:	call   0x409be0
  40728c:	mov    rcx,r13
  40728f:	call   0x409960
  407294:	test   rax,rax
  407297:	je     0x4071d8
  40729d:	mov    BYTE PTR [rsp+0x40],0x0
  4072a2:	jmp    0x406f5e
  4072a7:	call   r12
  4072aa:	mov    DWORD PTR [rax],0x2
  4072b0:	jmp    0x4071f0
  4072b5:	lea    rax,[rsp+0xa0]
  4072bd:	mov    QWORD PTR [rsp+0x20],rax
  4072c2:	mov    r14,rax
  4072c5:	call   r12
  4072c8:	mov    ebx,DWORD PTR [rax]
  4072ca:	jmp    0x4071fd
  4072cf:	mov    rcx,QWORD PTR [rsp+0x38]
  4072d4:	call   0x40a060
  4072d9:	jmp    0x407215
  4072de:	mov    r14,r15
  4072e1:	mov    r15,QWORD PTR [rsp+0x320]
  4072e9:	jmp    0x4072c5
  4072eb:	mov    r14,r15
  4072ee:	mov    r15,QWORD PTR [rsp+0x320]
  4072f6:	call   r12
  4072f9:	test   r13,r13
  4072fc:	mov    ebx,DWORD PTR [rax]
  4072fe:	je     0x4071fd
  407304:	jmp    0x4071f5
  407309:	nop    DWORD PTR [rax+0x0]
  407310:	mov    rax,QWORD PTR [rsp+0x38]
  407315:	mov    rdx,QWORD PTR [rsp+0x30]
  40731a:	lea    rax,[rax+rdx*1-0x1]
  40731f:	cmp    QWORD PTR [rsp+0x48],rax
  407324:	je     0x40736a
  407326:	mov    rax,QWORD PTR [rsp+0x48]
  40732b:	mov    rcx,QWORD PTR [rsp+0x38]
  407330:	sub    rbx,rax
  407333:	mov    rdx,rax
  407336:	mov    r8,rbx
  407339:	call   0x40a028
  40733e:	cmp    QWORD PTR [rsp+0x328],0x0
  407347:	jne    0x407359
  407349:	mov    rcx,QWORD PTR [rsp+0x38]
  40734e:	mov    rdx,rbx
  407351:	call   0x407820
  407356:	mov    r15,rax
  407359:	mov    rax,QWORD PTR [rsp+0x38]
  40735e:	test   r15,r15
  407361:	cmovne rax,r15
  407365:	jmp    0x406dcf
  40736a:	lea    rdx,[rsp+0xa0]
  407372:	mov    QWORD PTR [rsp+0x20],rdx
  407377:	mov    r14,rdx
  40737a:	lea    rdx,[rax-0x1]
  40737e:	mov    BYTE PTR [rax-0x1],0x2f
  407382:	mov    QWORD PTR [rsp+0x48],rdx
  407387:	cmp    r14,QWORD PTR [rsp+0x20]
  40738c:	je     0x407326
  40738e:	mov    rcx,r14
  407391:	call   0x40a060
  407396:	jmp    0x407326
  407398:	mov    r14,r15
  40739b:	mov    r15,QWORD PTR [rsp+0x320]
  4073a3:	call   r12
  4073a6:	mov    DWORD PTR [rax],0x22
  4073ac:	jmp    0x4071f0
  4073b1:	mov    rcx,r13
  4073b4:	mov    r14,r15
  4073b7:	mov    r15,QWORD PTR [rsp+0x320]
  4073bf:	call   0x409b80
  4073c4:	test   eax,eax
  4073c6:	jne    0x4072c5
  4073cc:	mov    rax,QWORD PTR [rsp+0x38]
  4073d1:	mov    rdx,QWORD PTR [rsp+0x30]
  4073d6:	mov    rbx,rax
  4073d9:	lea    rax,[rax+rdx*1-0x1]
  4073de:	add    rbx,rdx
  4073e1:	cmp    QWORD PTR [rsp+0x48],rax
  4073e6:	jne    0x407387
  4073e8:	jmp    0x40737a
  4073ea:	nop
  4073eb:	nop
  4073ec:	nop
  4073ed:	nop
  4073ee:	nop
  4073ef:	nop
  4073f0:	push   rsi
  4073f1:	push   rbx
  4073f2:	sub    rsp,0x38
  4073f6:	mov    ebx,ecx
  4073f8:	call   0x4077c0
  4073fd:	cmp    rax,0xffffffffffffffff
  407401:	mov    rsi,rax
  407404:	je     0x407450
  407406:	call   0x407790
  40740b:	mov    ecx,ebx
  40740d:	call   QWORD PTR [rip+0x185b1]        # 0x41f9c4
  407413:	test   eax,eax
  407415:	jne    0x407430
  407417:	call   QWORD PTR [rip+0x1855f]        # 0x41f97c
  40741d:	mov    DWORD PTR [rax],0x19
  407423:	xor    eax,eax
  407425:	add    rsp,0x38
  407429:	pop    rbx
  40742a:	pop    rsi
  40742b:	ret    
  40742c:	nop    DWORD PTR [rax+0x0]
  407430:	lea    rdx,[rsp+0x2c]
  407435:	mov    rcx,rsi
  407438:	call   QWORD PTR [rip+0x18406]        # 0x41f844
  40743e:	test   eax,eax
  407440:	je     0x407417
  407442:	mov    eax,0x1
  407447:	add    rsp,0x38
  40744b:	pop    rbx
  40744c:	pop    rsi
  40744d:	ret    
  40744e:	xchg   ax,ax
  407450:	call   QWORD PTR [rip+0x18526]        # 0x41f97c
  407456:	mov    DWORD PTR [rax],0x9
  40745c:	xor    eax,eax
  40745e:	add    rsp,0x38
  407462:	pop    rbx
  407463:	pop    rsi
  407464:	ret    
  407465:	nop
  407466:	nop
  407467:	nop
  407468:	nop
  407469:	nop
  40746a:	nop
  40746b:	nop
  40746c:	nop
  40746d:	nop
  40746e:	nop
  40746f:	nop
  407470:	push   rbp
  407471:	push   rdi
  407472:	push   rsi
  407473:	push   rbx
  407474:	sub    rsp,0x68
  407478:	mov    rsi,rdx
  40747b:	mov    rbp,rcx
  40747e:	call   0x409fe8
  407483:	mov    rcx,rsi
  407486:	mov    rdi,rax
  407489:	call   0x409fe8
  40748e:	mov    rbx,rax
  407491:	mov    eax,DWORD PTR [rip+0x15c39]        # 0x41d0d0
  407497:	test   eax,eax
  407499:	je     0x407640
  40749f:	mov    rdx,QWORD PTR [rip+0x15c32]        # 0x41d0d8
  4074a6:	test   rdx,rdx
  4074a9:	je     0x4076eb
  4074af:	test   rdi,rdi
  4074b2:	jne    0x4075a0
  4074b8:	test   rbx,rbx
  4074bb:	je     0x4074d2
  4074bd:	movzx  eax,BYTE PTR [rsi+rbx*1-0x1]
  4074c2:	cmp    al,0x5c
  4074c4:	je     0x4075b1
  4074ca:	cmp    al,0x2f
  4074cc:	je     0x4075b1
  4074d2:	mov    rcx,rsi
  4074d5:	call   0x407a80
  4074da:	test   rax,rax
  4074dd:	mov    rbx,rax
  4074e0:	je     0x4075e1
  4074e6:	xor    edx,edx
  4074e8:	mov    rcx,rax
  4074eb:	call   0x40a000
  4074f0:	cmp    rbx,rax
  4074f3:	jae    0x407555
  4074f5:	lea    r8,[rax-0x1]
  4074f9:	movzx  eax,BYTE PTR [rax-0x1]
  4074fd:	cmp    al,0x2f
  4074ff:	je     0x407560
  407501:	cmp    al,0x5c
  407503:	jne    0x407524
  407505:	jmp    0x407560
  407507:	nop    WORD PTR [rax+rax*1+0x0]
  407510:	sub    r8,0x1
  407514:	movzx  r9d,BYTE PTR [r8]
  407518:	cmp    r9b,0x2f
  40751c:	je     0x407560
  40751e:	cmp    r9b,0x5c
  407522:	je     0x407560
  407524:	cmp    r8,rbx
  407527:	jne    0x407510
  407529:	mov    rcx,rbx
  40752c:	xor    edi,edi
  40752e:	call   0x40a060
  407533:	xor    r8d,r8d
  407536:	mov    rdx,rbp
  407539:	mov    rcx,rsi
  40753c:	call   QWORD PTR [rip+0x15b96]        # 0x41d0d8
  407542:	test   eax,eax
  407544:	je     0x4075f0
  40754a:	mov    eax,edi
  40754c:	add    rsp,0x68
  407550:	pop    rbx
  407551:	pop    rsi
  407552:	pop    rdi
  407553:	pop    rbp
  407554:	ret    
  407555:	mov    r8,rax
  407558:	nop    DWORD PTR [rax+rax*1+0x0]
  407560:	cmp    r8,rbx
  407563:	mov    BYTE PTR [r8],0x0
  407567:	je     0x407529
  407569:	lea    rdx,[rsp+0x20]
  40756e:	mov    rcx,rbx
  407571:	call   0x407920
  407576:	cmp    eax,0xffffffff
  407579:	mov    edi,eax
  40757b:	jne    0x407529
  40757d:	mov    rsi,QWORD PTR [rip+0x183f8]        # 0x41f97c
  407584:	call   rsi
  407586:	mov    ebp,DWORD PTR [rax]
  407588:	mov    rcx,rbx
  40758b:	call   0x40a060
  407590:	call   rsi
  407592:	mov    DWORD PTR [rax],ebp
  407594:	jmp    0x40754a
  407596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4075a0:	movzx  eax,BYTE PTR [rbp+rdi*1-0x1]
  4075a5:	cmp    al,0x5c
  4075a7:	je     0x4075b1
  4075a9:	cmp    al,0x2f
  4075ab:	jne    0x4074b8
  4075b1:	lea    rdx,[rsp+0x20]
  4075b6:	mov    rcx,rbp
  4075b9:	call   0x407920
  4075be:	test   eax,eax
  4075c0:	jne    0x4075d5
  4075c2:	movzx  eax,WORD PTR [rsp+0x26]
  4075c7:	and    ax,0xf000
  4075cb:	cmp    ax,0x4000
  4075cf:	je     0x40772d
  4075d5:	call   QWORD PTR [rip+0x183a1]        # 0x41f97c
  4075db:	mov    DWORD PTR [rax],0x14
  4075e1:	mov    edi,0xffffffff
  4075e6:	jmp    0x40754a
  4075eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4075f0:	call   QWORD PTR [rip+0x18276]        # 0x41f86c
  4075f6:	cmp    eax,0x5
  4075f9:	je     0x407701
  4075ff:	jbe    0x407682
  407605:	cmp    eax,0x57
  407608:	je     0x4076bf
  40760e:	jbe    0x4076a4
  407614:	cmp    eax,0xb7
  407619:	je     0x407717
  40761f:	cmp    eax,0x476
  407624:	jne    0x4076d5
  40762a:	call   QWORD PTR [rip+0x1834c]        # 0x41f97c
  407630:	mov    edi,0xffffffff
  407635:	mov    DWORD PTR [rax],0x1f
  40763b:	jmp    0x40754a
  407640:	lea    rcx,[rip+0x11609]        # 0x418c50
  407647:	call   QWORD PTR [rip+0x18237]        # 0x41f884
  40764d:	test   rax,rax
  407650:	mov    rdx,QWORD PTR [rip+0x15a81]        # 0x41d0d8
  407657:	je     0x407673
  407659:	lea    rdx,[rip+0x115fd]        # 0x418c5d
  407660:	mov    rcx,rax
  407663:	call   QWORD PTR [rip+0x18223]        # 0x41f88c
  407669:	mov    QWORD PTR [rip+0x15a68],rax        # 0x41d0d8
  407670:	mov    rdx,rax
  407673:	mov    DWORD PTR [rip+0x15a53],0x1        # 0x41d0d0
  40767d:	jmp    0x4074a6
  407682:	cmp    eax,0x1
  407685:	je     0x4076eb
  407687:	jb     0x4076d5
  407689:	cmp    eax,0x3
  40768c:	ja     0x4076d5
  40768e:	call   QWORD PTR [rip+0x182e8]        # 0x41f97c
  407694:	mov    edi,0xffffffff
  407699:	mov    DWORD PTR [rax],0x2
  40769f:	jmp    0x40754a
  4076a4:	cmp    eax,0x11
  4076a7:	jne    0x4076d5
  4076a9:	call   QWORD PTR [rip+0x182cd]        # 0x41f97c
  4076af:	mov    edi,0xffffffff
  4076b4:	mov    DWORD PTR [rax],0x12
  4076ba:	jmp    0x40754a
  4076bf:	call   QWORD PTR [rip+0x182b7]        # 0x41f97c
  4076c5:	mov    edi,0xffffffff
  4076ca:	mov    DWORD PTR [rax],0x26
  4076d0:	jmp    0x40754a
  4076d5:	call   QWORD PTR [rip+0x182a1]        # 0x41f97c
  4076db:	mov    edi,0xffffffff
  4076e0:	mov    DWORD PTR [rax],0x5
  4076e6:	jmp    0x40754a
  4076eb:	call   QWORD PTR [rip+0x1828b]        # 0x41f97c
  4076f1:	mov    edi,0xffffffff
  4076f6:	mov    DWORD PTR [rax],0x1
  4076fc:	jmp    0x40754a
  407701:	call   QWORD PTR [rip+0x18275]        # 0x41f97c
  407707:	mov    edi,0xffffffff
  40770c:	mov    DWORD PTR [rax],0xd
  407712:	jmp    0x40754a
  407717:	call   QWORD PTR [rip+0x1825f]        # 0x41f97c
  40771d:	mov    edi,0xffffffff
  407722:	mov    DWORD PTR [rax],0x11
  407728:	jmp    0x40754a
  40772d:	call   QWORD PTR [rip+0x18249]        # 0x41f97c
  407733:	mov    DWORD PTR [rax],0x1
  407739:	jmp    0x4075e1
  40773e:	nop
  40773f:	nop
  407740:	push   rbx
  407741:	sub    rsp,0x20
  407745:	call   0x40a040
  40774a:	test   rax,rax
  40774d:	mov    rbx,rax
  407750:	je     0x407760
  407752:	mov    rax,rbx
  407755:	add    rsp,0x20
  407759:	pop    rbx
  40775a:	ret    
  40775b:	nop    DWORD PTR [rax+rax*1+0x0]
  407760:	call   QWORD PTR [rip+0x18216]        # 0x41f97c
  407766:	mov    DWORD PTR [rax],0xc
  40776c:	mov    rax,rbx
  40776f:	add    rsp,0x20
  407773:	pop    rbx
  407774:	ret    
  407775:	nop
  407776:	nop
  407777:	nop
  407778:	nop
  407779:	nop
  40777a:	nop
  40777b:	nop
  40777c:	nop
  40777d:	nop
  40777e:	nop
  40777f:	nop
  407780:	ret    
  407781:	nop    DWORD PTR [rax+rax*1+0x0]
  407786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407790:	sub    rsp,0x28
  407794:	mov    eax,DWORD PTR [rip+0x15946]        # 0x41d0e0
  40779a:	test   eax,eax
  40779c:	jne    0x4077b5
  40779e:	lea    rcx,[rip+0xffffffffffffffdb]        # 0x407780
  4077a5:	call   QWORD PTR [rip+0xd8ed]        # 0x415098
  4077ab:	mov    DWORD PTR [rip+0x1592b],0x1        # 0x41d0e0
  4077b5:	add    rsp,0x28
  4077b9:	ret    
  4077ba:	nop
  4077bb:	nop
  4077bc:	nop
  4077bd:	nop
  4077be:	nop
  4077bf:	nop
  4077c0:	push   rbx
  4077c1:	sub    rsp,0x20
  4077c5:	mov    ebx,ecx
  4077c7:	call   0x407790
  4077cc:	mov    rax,QWORD PTR [rip+0x181e1]        # 0x41f9b4
  4077d3:	mov    ecx,ebx
  4077d5:	add    rsp,0x20
  4077d9:	pop    rbx
  4077da:	rex.W jmp rax
  4077dd:	nop
  4077de:	nop
  4077df:	nop
  4077e0:	push   rbx
  4077e1:	sub    rsp,0x30
  4077e5:	mov    r8d,0x8000
  4077eb:	mov    edx,0x1000
  4077f0:	mov    rbx,rcx
  4077f3:	lea    rcx,[rsp+0x20]
  4077f8:	call   QWORD PTR [rip+0x181e6]        # 0x41f9e4
  4077fe:	test   eax,eax
  407800:	jne    0x40780f
  407802:	mov    edx,DWORD PTR [rsp+0x20]
  407806:	mov    DWORD PTR [rbx],edx
  407808:	mov    edx,DWORD PTR [rsp+0x24]
  40780c:	mov    DWORD PTR [rbx+0x4],edx
  40780f:	add    rsp,0x30
  407813:	pop    rbx
  407814:	ret    
  407815:	nop
  407816:	nop
  407817:	nop
  407818:	nop
  407819:	nop
  40781a:	nop
  40781b:	nop
  40781c:	nop
  40781d:	nop
  40781e:	nop
  40781f:	nop
  407820:	push   rbx
  407821:	sub    rsp,0x20
  407825:	test   rcx,rcx
  407828:	je     0x407840
  40782a:	call   0x40a010
  40782f:	mov    rbx,rax
  407832:	test   rbx,rbx
  407835:	je     0x407850
  407837:	mov    rax,rbx
  40783a:	add    rsp,0x20
  40783e:	pop    rbx
  40783f:	ret    
  407840:	mov    rcx,rdx
  407843:	call   0x40a040
  407848:	mov    rbx,rax
  40784b:	test   rbx,rbx
  40784e:	jne    0x407837
  407850:	call   QWORD PTR [rip+0x18126]        # 0x41f97c
  407856:	mov    DWORD PTR [rax],0xc
  40785c:	mov    rax,rbx
  40785f:	add    rsp,0x20
  407863:	pop    rbx
  407864:	ret    
  407865:	nop
  407866:	nop
  407867:	nop
  407868:	nop
  407869:	nop
  40786a:	nop
  40786b:	nop
  40786c:	nop
  40786d:	nop
  40786e:	nop
  40786f:	nop
  407870:	push   rsi
  407871:	push   rbx
  407872:	sub    rsp,0x28
  407876:	mov    rbx,rcx
  407879:	call   0x409fe8
  40787e:	test   rax,rax
  407881:	je     0x4078b9
  407883:	movzx  r8d,BYTE PTR [rbx+rax*1-0x1]
  407889:	lea    rdx,[rax-0x1]
  40788d:	cmp    r8b,0x5c
  407891:	je     0x4078b4
  407893:	cmp    r8b,0x2f
  407897:	je     0x4078b4
  407899:	mov    rdx,rax
  40789c:	jmp    0x4078d4
  40789e:	xchg   ax,ax
  4078a0:	movzx  eax,BYTE PTR [rbx+rdx*1-0x1]
  4078a5:	lea    r8,[rdx-0x1]
  4078a9:	cmp    al,0x5c
  4078ab:	je     0x4078b1
  4078ad:	cmp    al,0x2f
  4078af:	jne    0x4078d1
  4078b1:	mov    rdx,r8
  4078b4:	test   rdx,rdx
  4078b7:	jne    0x4078a0
  4078b9:	mov    rcx,rbx
  4078bc:	call   0x409f98
  4078c1:	cmp    eax,0xffffffff
  4078c4:	mov    ebx,eax
  4078c6:	je     0x407900
  4078c8:	mov    eax,ebx
  4078ca:	add    rsp,0x28
  4078ce:	pop    rbx
  4078cf:	pop    rsi
  4078d0:	ret    
  4078d1:	mov    r8d,eax
  4078d4:	cmp    r8b,0x2e
  4078d8:	jne    0x4078b9
  4078da:	cmp    rdx,0x1
  4078de:	je     0x4078ed
  4078e0:	movzx  eax,BYTE PTR [rbx+rdx*1-0x2]
  4078e5:	cmp    al,0x5c
  4078e7:	je     0x4078ed
  4078e9:	cmp    al,0x2f
  4078eb:	jne    0x4078b9
  4078ed:	call   QWORD PTR [rip+0x18089]        # 0x41f97c
  4078f3:	mov    ebx,0xffffffff
  4078f8:	mov    DWORD PTR [rax],0x16
  4078fe:	jmp    0x4078c8
  407900:	mov    rsi,QWORD PTR [rip+0x18075]        # 0x41f97c
  407907:	call   rsi
  407909:	cmp    DWORD PTR [rax],0x16
  40790c:	jne    0x4078c8
  40790e:	call   rsi
  407910:	mov    DWORD PTR [rax],0x14
  407916:	jmp    0x4078c8
  407918:	nop
  407919:	nop
  40791a:	nop
  40791b:	nop
  40791c:	nop
  40791d:	nop
  40791e:	nop
  40791f:	nop
  407920:	push   r14
  407922:	push   r13
  407924:	push   r12
  407926:	push   rbp
  407927:	push   rdi
  407928:	push   rsi
  407929:	push   rbx
  40792a:	sub    rsp,0x130
  407931:	mov    r12,QWORD PTR [rip+0x181b4]        # 0x41faec
  407938:	mov    rsi,rcx
  40793b:	mov    rbp,rdx
  40793e:	call   r12
  407941:	cmp    eax,0xffffffff
  407944:	mov    ebx,eax
  407946:	je     0x407960
  407948:	mov    eax,ebx
  40794a:	add    rsp,0x130
  407951:	pop    rbx
  407952:	pop    rsi
  407953:	pop    rdi
  407954:	pop    rbp
  407955:	pop    r12
  407957:	pop    r13
  407959:	pop    r14
  40795b:	ret    
  40795c:	nop    DWORD PTR [rax+0x0]
  407960:	mov    r13,QWORD PTR [rip+0x18015]        # 0x41f97c
  407967:	call   r13
  40796a:	cmp    DWORD PTR [rax],0x2
  40796d:	jne    0x407948
  40796f:	lea    r14,[rsp+0x20]
  407974:	xor    eax,eax
  407976:	mov    ecx,0x20
  40797b:	mov    rdi,r14
  40797e:	rep stos QWORD PTR es:[rdi],rax
  407981:	mov    rcx,rsi
  407984:	mov    DWORD PTR [rdi],0x0
  40798a:	mov    BYTE PTR [rdi+0x4],0x0
  40798e:	call   0x409fe8
  407993:	cmp    rax,0x103
  407999:	ja     0x407a10
  40799b:	test   rax,rax
  40799e:	je     0x407948
  4079a0:	lea    rdx,[rax+0x1]
  4079a4:	mov    rdi,r14
  4079a7:	cmp    edx,0x8
  4079aa:	jb     0x4079b4
  4079ac:	mov    ecx,edx
  4079ae:	shr    ecx,0x3
  4079b1:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4079b4:	xor    ecx,ecx
  4079b6:	test   dl,0x4
  4079b9:	je     0x4079c4
  4079bb:	mov    ecx,DWORD PTR [rsi]
  4079bd:	mov    DWORD PTR [rdi],ecx
  4079bf:	mov    ecx,0x4
  4079c4:	test   dl,0x2
  4079c7:	je     0x4079d7
  4079c9:	movzx  r8d,WORD PTR [rsi+rcx*1]
  4079ce:	mov    WORD PTR [rdi+rcx*1],r8w
  4079d3:	add    rcx,0x2
  4079d7:	and    edx,0x1
  4079da:	je     0x4079e3
  4079dc:	movzx  edx,BYTE PTR [rsi+rcx*1]
  4079e0:	mov    BYTE PTR [rdi+rcx*1],dl
  4079e3:	lea    rdx,[rax-0x1]
  4079e7:	movzx  ecx,BYTE PTR [rsp+rdx*1+0x20]
  4079ec:	cmp    cl,0x5c
  4079ef:	je     0x407a1e
  4079f1:	cmp    cl,0x2f
  4079f4:	je     0x407a1e
  4079f6:	mov    BYTE PTR [rsp+rax*1+0x20],0x2f
  4079fb:	mov    rdx,rbp
  4079fe:	mov    rcx,r14
  407a01:	call   r12
  407a04:	mov    ebx,eax
  407a06:	jmp    0x407948
  407a0b:	nop    DWORD PTR [rax+rax*1+0x0]
  407a10:	call   r13
  407a13:	mov    DWORD PTR [rax],0x26
  407a19:	jmp    0x407948
  407a1e:	lea    rax,[r14+rdx*1]
  407a22:	cmp    rax,r14
  407a25:	mov    BYTE PTR [rax],0x0
  407a28:	je     0x407a65
  407a2a:	movzx  edx,BYTE PTR [rax-0x1]
  407a2e:	sub    rax,0x1
  407a32:	cmp    dl,0x5c
  407a35:	je     0x407a22
  407a37:	cmp    dl,0x2f
  407a3a:	je     0x407a22
  407a3c:	mov    rdx,rbp
  407a3f:	mov    rcx,r14
  407a42:	call   r12
  407a45:	test   eax,eax
  407a47:	jne    0x407a73
  407a49:	movzx  eax,WORD PTR [rbp+0x6]
  407a4d:	and    ax,0xf000
  407a51:	cmp    ax,0x4000
  407a55:	je     0x407a6c
  407a57:	call   r13
  407a5a:	mov    DWORD PTR [rax],0x14
  407a60:	jmp    0x407948
  407a65:	mov    BYTE PTR [rsp+0x20],0x2f
  407a6a:	jmp    0x407a3c
  407a6c:	xor    ebx,ebx
  407a6e:	jmp    0x407948
  407a73:	mov    ebx,eax
  407a75:	jmp    0x407948
  407a7a:	nop
  407a7b:	nop
  407a7c:	nop
  407a7d:	nop
  407a7e:	nop
  407a7f:	nop
  407a80:	push   rsi
  407a81:	push   rbx
  407a82:	sub    rsp,0x28
  407a86:	mov    rsi,rcx
  407a89:	call   0x409fe8
  407a8e:	lea    rbx,[rax+0x1]
  407a92:	mov    rcx,rbx
  407a95:	call   0x407740
  407a9a:	test   rax,rax
  407a9d:	je     0x407ab3
  407a9f:	mov    r8,rbx
  407aa2:	mov    rdx,rsi
  407aa5:	mov    rcx,rax
  407aa8:	add    rsp,0x28
  407aac:	pop    rbx
  407aad:	pop    rsi
  407aae:	jmp    0x40a030
  407ab3:	xor    eax,eax
  407ab5:	add    rsp,0x28
  407ab9:	pop    rbx
  407aba:	pop    rsi
  407abb:	ret    
  407abc:	nop
  407abd:	nop
  407abe:	nop
  407abf:	nop
  407ac0:	sub    rsp,0x28
  407ac4:	call   QWORD PTR [rip+0x17eb2]        # 0x41f97c
  407aca:	mov    DWORD PTR [rax],0x28
  407ad0:	mov    eax,0xffffffff
  407ad5:	add    rsp,0x28
  407ad9:	ret    
  407ada:	nop
  407adb:	nop
  407adc:	nop
  407add:	nop
  407ade:	nop
  407adf:	nop
  407ae0:	push   r12
  407ae2:	push   rbp
  407ae3:	push   rdi
  407ae4:	push   rsi
  407ae5:	push   rbx
  407ae6:	sub    rsp,0x60
  407aea:	mov    rdi,rcx
  407aed:	call   0x409fe8
  407af2:	test   rax,rax
  407af5:	mov    rbx,rax
  407af8:	mov    rsi,rax
  407afb:	jne    0x407b10
  407afd:	mov    rcx,rdi
  407b00:	call   0x409fa0
  407b05:	add    rsp,0x60
  407b09:	pop    rbx
  407b0a:	pop    rsi
  407b0b:	pop    rdi
  407b0c:	pop    rbp
  407b0d:	pop    r12
  407b0f:	ret    
  407b10:	movzx  eax,BYTE PTR [rdi+rax*1-0x1]
  407b15:	cmp    al,0x5c
  407b17:	je     0x407b1d
  407b19:	cmp    al,0x2f
  407b1b:	jne    0x407afd
  407b1d:	lea    r12,[rsp+0x20]
  407b22:	mov    rcx,rdi
  407b25:	mov    rdx,r12
  407b28:	call   0x407920
  407b2d:	test   eax,eax
  407b2f:	jne    0x407b05
  407b31:	mov    rcx,rbx
  407b34:	call   0x407740
  407b39:	test   rax,rax
  407b3c:	mov    rbp,rax
  407b3f:	je     0x407b97
  407b41:	mov    r8,rbx
  407b44:	mov    rdx,rdi
  407b47:	mov    rcx,rax
  407b4a:	call   0x40a030
  407b4f:	nop
  407b50:	sub    rsi,0x1
  407b54:	movzx  r8d,BYTE PTR [rbp+rsi*1+0x0]
  407b5a:	cmp    r8b,0x5c
  407b5e:	je     0x407b66
  407b60:	cmp    r8b,0x2f
  407b64:	jne    0x407b80
  407b66:	test   rsi,rsi
  407b69:	mov    BYTE PTR [rbp+rsi*1+0x0],0x0
  407b6e:	jne    0x407b50
  407b70:	mov    rcx,rbp
  407b73:	call   0x40a060
  407b78:	jmp    0x407afd
  407b7a:	nop    WORD PTR [rax+rax*1+0x0]
  407b80:	mov    rdx,r12
  407b83:	mov    rcx,rbp
  407b86:	call   0x407920
  407b8b:	test   eax,eax
  407b8d:	je     0x407b70
  407b8f:	mov    rcx,rbp
  407b92:	call   0x40a060
  407b97:	call   QWORD PTR [rip+0x17ddf]        # 0x41f97c
  407b9d:	mov    DWORD PTR [rax],0x1
  407ba3:	or     eax,0xffffffff
  407ba6:	jmp    0x407b05
  407bab:	nop
  407bac:	nop
  407bad:	nop
  407bae:	nop
  407baf:	nop
  407bb0:	lea    r9,[rip+0xd469]        # 0x415020
  407bb7:	cmp    rcx,r9
  407bba:	je     0x407bd0
  407bbc:	mov    r9,QWORD PTR [rcx+0x10]
  407bc0:	mov    rcx,QWORD PTR [rcx]
  407bc3:	rex.WB jmp r9
  407bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407bd0:	mov    ecx,r8d
  407bd3:	rex.W jmp rdx
  407bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407be0:	lea    r10,[rip+0xd439]        # 0x415020
  407be7:	mov    rax,rcx
  407bea:	mov    r11,rdx
  407bed:	mov    ecx,r8d
  407bf0:	cmp    rax,r10
  407bf3:	mov    r8,QWORD PTR [rsp+0x28]
  407bf8:	je     0x407c10
  407bfa:	mov    QWORD PTR [rsp+0x28],r8
  407bff:	mov    r8d,ecx
  407c02:	mov    r10,QWORD PTR [rax+0x18]
  407c06:	mov    rcx,QWORD PTR [rax]
  407c09:	rex.WB jmp r10
  407c0c:	nop    DWORD PTR [rax+0x0]
  407c10:	mov    edx,r9d
  407c13:	rex.WB jmp r11
  407c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c20:	mov    r8d,edx
  407c23:	mov    rdx,rcx
  407c26:	mov    rcx,QWORD PTR [rip+0xd3f3]        # 0x415020
  407c2d:	jmp    0x407bb0
  407c2f:	nop
  407c30:	sub    rsp,0x38
  407c34:	mov    QWORD PTR [rsp+0x20],r9
  407c39:	mov    r9d,r8d
  407c3c:	mov    r8d,edx
  407c3f:	mov    rdx,rcx
  407c42:	mov    rcx,QWORD PTR [rip+0xd3d7]        # 0x415020
  407c49:	call   0x407be0
  407c4e:	add    rsp,0x38
  407c52:	ret    
  407c53:	nop    DWORD PTR [rax]
  407c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c60:	sub    rsp,0x28
  407c64:	lea    rax,[rip+0xffffffffffffff45]        # 0x407bb0
  407c6b:	test   rcx,rcx
  407c6e:	cmove  rcx,rax
  407c72:	lea    rax,[rip+0xffffffffffffff67]        # 0x407be0
  407c79:	test   rdx,rdx
  407c7c:	cmove  rdx,rax
  407c80:	cmp    QWORD PTR [r8],0x0
  407c84:	je     0x407ca0
  407c86:	cmp    QWORD PTR [r8+0x10],rcx
  407c8a:	jne    0x407cd8
  407c8c:	cmp    QWORD PTR [r8+0x18],rdx
  407c90:	jne    0x407cd8
  407c92:	add    rsp,0x28
  407c96:	ret    
  407c97:	nop    WORD PTR [rax+rax*1+0x0]
  407ca0:	cmp    QWORD PTR [r8+0x8],0x0
  407ca5:	jne    0x407c86
  407ca7:	mov    rax,QWORD PTR [rip+0xd372]        # 0x415020
  407cae:	mov    QWORD PTR [r8+0x10],rcx
  407cb2:	mov    QWORD PTR [r8+0x18],rdx
  407cb6:	mov    QWORD PTR [r8],rax
  407cb9:	lea    rax,[rip+0xd360]        # 0x415020
  407cc0:	mov    QWORD PTR [r8+0x8],rax
  407cc4:	mov    rax,QWORD PTR [rip+0xd355]        # 0x415020
  407ccb:	mov    QWORD PTR [rip+0xd34e],r8        # 0x415020
  407cd2:	mov    QWORD PTR [rax+0x8],r8
  407cd6:	jmp    0x407c92
  407cd8:	call   0x40a090
  407cdd:	nop
  407cde:	xchg   ax,ax
  407ce0:	mov    rax,QWORD PTR [rcx+0x8]
  407ce4:	mov    rdx,QWORD PTR [rcx]
  407ce7:	test   rax,rax
  407cea:	je     0x407d17
  407cec:	test   rdx,rdx
  407cef:	je     0x407d17
  407cf1:	mov    QWORD PTR [rax],rdx
  407cf4:	mov    QWORD PTR [rdx+0x8],rax
  407cf8:	mov    QWORD PTR [rcx],0x0
  407cff:	mov    QWORD PTR [rcx+0x8],0x0
  407d07:	mov    QWORD PTR [rcx+0x10],0x0
  407d0f:	mov    QWORD PTR [rcx+0x18],0x0
  407d17:	repz ret 
  407d19:	nop
  407d1a:	nop
  407d1b:	nop
  407d1c:	nop
  407d1d:	nop
  407d1e:	nop
  407d1f:	nop
  407d20:	push   r15
  407d22:	push   r14
  407d24:	push   r13
  407d26:	push   r12
  407d28:	push   rbp
  407d29:	push   rdi
  407d2a:	push   rsi
  407d2b:	push   rbx
  407d2c:	sub    rsp,0x28
  407d30:	xor    edi,edi
  407d32:	mov    rbp,rcx
  407d35:	mov    r14,rdx
  407d38:	mov    r12,r8
  407d3b:	call   0x407e90
  407d40:	mov    rbx,rax
  407d43:	mov    rcx,rax
  407d46:	mov    rsi,rbx
  407d49:	sub    rsi,rbp
  407d4c:	call   0x407f20
  407d51:	add    rsi,rax
  407d54:	test   rax,rax
  407d57:	je     0x407d70
  407d59:	movzx  edx,BYTE PTR [rbx+rax*1-0x1]
  407d5e:	cmp    dl,0x5c
  407d61:	setne  al
  407d64:	xor    edi,edi
  407d66:	cmp    dl,0x2f
  407d69:	setne  dil
  407d6d:	and    rdi,rax
  407d70:	movzx  r9d,BYTE PTR [r14]
  407d74:	xor    ebx,ebx
  407d76:	or     r9d,0x20
  407d7a:	movsx  r9d,r9b
  407d7e:	sub    r9d,0x61
  407d82:	cmp    r9d,0x19
  407d86:	ja     0x407d95
  407d88:	xor    ebx,ebx
  407d8a:	cmp    BYTE PTR [r14+0x1],0x3a
  407d8f:	sete   bl
  407d92:	add    rbx,rbx
  407d95:	add    rbx,r14
  407d98:	movzx  eax,BYTE PTR [rbx]
  407d9b:	cmp    al,0x5c
  407d9d:	je     0x407e40
  407da3:	cmp    al,0x2f
  407da5:	je     0x407e40
  407dab:	mov    rcx,rbx
  407dae:	call   0x409fe8
  407db3:	lea    rcx,[rsi+rdi*1+0x1]
  407db8:	mov    r15,rax
  407dbb:	add    rcx,rax
  407dbe:	call   0x407740
  407dc3:	test   rax,rax
  407dc6:	mov    r13,rax
  407dc9:	je     0x407e80
  407dcf:	mov    rcx,rax
  407dd2:	mov    r8,rsi
  407dd5:	mov    rdx,rbp
  407dd8:	call   0x409d30
  407ddd:	test   r12,r12
  407de0:	mov    BYTE PTR [rax],0x2f
  407de3:	lea    rcx,[rax+rdi*1]
  407de7:	je     0x407e1b
  407de9:	movzx  eax,BYTE PTR [r14]
  407ded:	mov    edx,eax
  407def:	or     edx,0x20
  407df2:	movsx  edx,dl
  407df5:	sub    edx,0x61
  407df8:	cmp    edx,0x19
  407dfb:	jbe    0x407e60
  407dfd:	cmp    al,0x2f
  407dff:	sete   dl
  407e02:	xor    eax,eax
  407e04:	cmp    BYTE PTR [r14+rax*1],0x5c
  407e09:	sete   al
  407e0c:	or     edx,eax
  407e0e:	mov    rax,rcx
  407e11:	movzx  edx,dl
  407e14:	sub    rax,rdx
  407e17:	mov    QWORD PTR [r12],rax
  407e1b:	mov    r8,r15
  407e1e:	mov    rdx,rbx
  407e21:	call   0x409d30
  407e26:	mov    BYTE PTR [rax],0x0
  407e29:	mov    rax,r13
  407e2c:	add    rsp,0x28
  407e30:	pop    rbx
  407e31:	pop    rsi
  407e32:	pop    rdi
  407e33:	pop    rbp
  407e34:	pop    r12
  407e36:	pop    r13
  407e38:	pop    r14
  407e3a:	pop    r15
  407e3c:	ret    
  407e3d:	nop    DWORD PTR [rax]
  407e40:	add    rbx,0x1
  407e44:	movzx  eax,BYTE PTR [rbx]
  407e47:	cmp    al,0x5c
  407e49:	jne    0x407da3
  407e4f:	add    rbx,0x1
  407e53:	movzx  eax,BYTE PTR [rbx]
  407e56:	cmp    al,0x5c
  407e58:	jne    0x407da3
  407e5e:	jmp    0x407e40
  407e60:	cmp    BYTE PTR [r14+0x1],0x3a
  407e65:	jne    0x407dfd
  407e67:	cmp    BYTE PTR [r14+0x2],0x2f
  407e6c:	mov    eax,0x2
  407e71:	sete   dl
  407e74:	jmp    0x407e04
  407e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e80:	xor    eax,eax
  407e82:	jmp    0x407e2c
  407e84:	nop
  407e85:	nop
  407e86:	nop
  407e87:	nop
  407e88:	nop
  407e89:	nop
  407e8a:	nop
  407e8b:	nop
  407e8c:	nop
  407e8d:	nop
  407e8e:	nop
  407e8f:	nop
  407e90:	movzx  edx,BYTE PTR [rcx]
  407e93:	xor    eax,eax
  407e95:	or     edx,0x20
  407e98:	movsx  edx,dl
  407e9b:	sub    edx,0x61
  407e9e:	cmp    edx,0x19
  407ea1:	ja     0x407eaf
  407ea3:	xor    eax,eax
  407ea5:	cmp    BYTE PTR [rcx+0x1],0x3a
  407ea9:	sete   al
  407eac:	add    rax,rax
  407eaf:	add    rax,rcx
  407eb2:	movzx  edx,BYTE PTR [rax]
  407eb5:	cmp    dl,0x5c
  407eb8:	jne    0x407ecc
  407eba:	nop    WORD PTR [rax+rax*1+0x0]
  407ec0:	add    rax,0x1
  407ec4:	movzx  edx,BYTE PTR [rax]
  407ec7:	cmp    dl,0x5c
  407eca:	je     0x407ec0
  407ecc:	cmp    dl,0x2f
  407ecf:	je     0x407ec0
  407ed1:	test   dl,dl
  407ed3:	je     0x407f11
  407ed5:	mov    rcx,rax
  407ed8:	xor    r8d,r8d
  407edb:	jmp    0x407efb
  407edd:	nop    DWORD PTR [rax]
  407ee0:	cmp    dl,0x2f
  407ee3:	je     0x407f00
  407ee5:	test   r8b,r8b
  407ee8:	je     0x407ef0
  407eea:	mov    rax,rcx
  407eed:	xor    r8d,r8d
  407ef0:	add    rcx,0x1
  407ef4:	movzx  edx,BYTE PTR [rcx]
  407ef7:	test   dl,dl
  407ef9:	je     0x407f11
  407efb:	cmp    dl,0x5c
  407efe:	jne    0x407ee0
  407f00:	add    rcx,0x1
  407f04:	movzx  edx,BYTE PTR [rcx]
  407f07:	mov    r8d,0x1
  407f0d:	test   dl,dl
  407f0f:	jne    0x407efb
  407f11:	repz ret 
  407f13:	nop    DWORD PTR [rax]
  407f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407f20:	push   rbx
  407f21:	sub    rsp,0x20
  407f25:	movzx  eax,BYTE PTR [rcx]
  407f28:	mov    rbx,rcx
  407f2b:	or     eax,0x20
  407f2e:	movsx  eax,al
  407f31:	sub    eax,0x61
  407f34:	cmp    eax,0x19
  407f37:	ja     0x407f3f
  407f39:	cmp    BYTE PTR [rbx+0x1],0x3a
  407f3d:	je     0x407f80
  407f3f:	call   0x409fe8
  407f44:	xor    r8d,r8d
  407f47:	xor    edx,edx
  407f49:	cmp    rax,0x1
  407f4d:	jbe    0x407f7a
  407f4f:	movzx  ecx,BYTE PTR [rbx+rax*1-0x1]
  407f54:	lea    r9,[rax-0x1]
  407f58:	cmp    cl,0x5c
  407f5b:	je     0x407fa4
  407f5d:	cmp    cl,0x2f
  407f60:	je     0x407fa4
  407f62:	cmp    rax,rdx
  407f65:	jne    0x407f7a
  407f67:	test   r8b,r8b
  407f6a:	je     0x407f7a
  407f6c:	movzx  ecx,BYTE PTR [rbx+rdx*1]
  407f70:	cmp    cl,0x5c
  407f73:	je     0x407fb0
  407f75:	cmp    cl,0x2f
  407f78:	je     0x407fb0
  407f7a:	add    rsp,0x20
  407f7e:	pop    rbx
  407f7f:	ret    
  407f80:	call   0x409fe8
  407f85:	cmp    rax,0x1
  407f89:	jbe    0x407f7a
  407f8b:	movzx  ecx,BYTE PTR [rbx+rax*1-0x1]
  407f90:	mov    r8d,0x1
  407f96:	mov    edx,0x2
  407f9b:	lea    r9,[rax-0x1]
  407f9f:	cmp    cl,0x5c
  407fa2:	jne    0x407f5d
  407fa4:	cmp    r9,0x1
  407fa8:	mov    rax,r9
  407fab:	jne    0x407f4f
  407fad:	jmp    0x407f62
  407faf:	nop
  407fb0:	lea    rax,[rdx+0x1]
  407fb4:	add    rsp,0x20
  407fb8:	pop    rbx
  407fb9:	ret    
  407fba:	nop
  407fbb:	nop
  407fbc:	nop
  407fbd:	nop
  407fbe:	nop
  407fbf:	nop
  407fc0:	jmp    QWORD PTR [rip+0x17b96]        # 0x41fb5c
  407fc6:	nop
  407fc7:	nop
  407fc8:	nop    DWORD PTR [rax+rax*1+0x0]
  407fd0:	jmp    QWORD PTR [rip+0x17946]        # 0x41f91c
  407fd6:	nop
  407fd7:	nop
  407fd8:	jmp    QWORD PTR [rip+0x1790e]        # 0x41f8ec
  407fde:	nop
  407fdf:	nop
  407fe0:	jmp    QWORD PTR [rip+0x178fe]        # 0x41f8e4
  407fe6:	nop
  407fe7:	nop
  407fe8:	jmp    QWORD PTR [rip+0x178a6]        # 0x41f894
  407fee:	nop
  407fef:	nop
  407ff0:	jmp    QWORD PTR [rip+0x17896]        # 0x41f88c
  407ff6:	nop
  407ff7:	nop
  407ff8:	jmp    QWORD PTR [rip+0x17886]        # 0x41f884
  407ffe:	nop
  407fff:	nop
  408000:	jmp    QWORD PTR [rip+0x1786e]        # 0x41f874
  408006:	nop
  408007:	nop
  408008:	jmp    QWORD PTR [rip+0x1785e]        # 0x41f86c
  40800e:	nop
  40800f:	nop
  408010:	jmp    QWORD PTR [rip+0x1782e]        # 0x41f844
  408016:	nop
  408017:	nop
  408018:	nop    DWORD PTR [rax+rax*1+0x0]
  408020:	jmp    QWORD PTR [rip+0x177fe]        # 0x41f824
  408026:	nop
  408027:	nop
  408028:	jmp    QWORD PTR [rip+0x177ee]        # 0x41f81c
  40802e:	nop
  40802f:	nop
  408030:	jmp    QWORD PTR [rip+0x177de]        # 0x41f814
  408036:	nop
  408037:	nop
  408038:	jmp    QWORD PTR [rip+0x177ce]        # 0x41f80c
  40803e:	nop
  40803f:	nop
  408040:	jmp    QWORD PTR [rip+0x177be]        # 0x41f804
  408046:	nop
  408047:	nop
  408048:	jmp    QWORD PTR [rip+0x177ae]        # 0x41f7fc
  40804e:	nop
  40804f:	nop
  408050:	jmp    QWORD PTR [rip+0x1779e]        # 0x41f7f4
  408056:	nop
  408057:	nop
  408058:	jmp    QWORD PTR [rip+0x1778e]        # 0x41f7ec
  40805e:	nop
  40805f:	nop
  408060:	jmp    QWORD PTR [rip+0x1777e]        # 0x41f7e4
  408066:	nop
  408067:	nop
  408068:	jmp    QWORD PTR [rip+0x17746]        # 0x41f7b4
  40806e:	nop
  40806f:	nop
  408070:	jmp    QWORD PTR [rip+0x17736]        # 0x41f7ac
  408076:	nop
  408077:	nop
  408078:	jmp    QWORD PTR [rip+0x17716]        # 0x41f794
  40807e:	nop
  40807f:	nop
  408080:	jmp    QWORD PTR [rip+0x17706]        # 0x41f78c
  408086:	nop
  408087:	nop
  408088:	jmp    QWORD PTR [rip+0x176f6]        # 0x41f784
  40808e:	nop
  40808f:	nop
  408090:	jmp    QWORD PTR [rip+0x176e6]        # 0x41f77c
  408096:	nop
  408097:	nop
  408098:	jmp    QWORD PTR [rip+0x176d6]        # 0x41f774
  40809e:	nop
  40809f:	nop
  4080a0:	jmp    QWORD PTR [rip+0x176c6]        # 0x41f76c
  4080a6:	nop
  4080a7:	nop
  4080a8:	jmp    QWORD PTR [rip+0x176b6]        # 0x41f764
  4080ae:	nop
  4080af:	nop
  4080b0:	jmp    QWORD PTR [rip+0x176a6]        # 0x41f75c
  4080b6:	nop
  4080b7:	nop
  4080b8:	jmp    QWORD PTR [rip+0x17696]        # 0x41f754
  4080be:	nop
  4080bf:	nop
  4080c0:	jmp    QWORD PTR [rip+0x17686]        # 0x41f74c
  4080c6:	nop
  4080c7:	nop
  4080c8:	jmp    QWORD PTR [rip+0x17676]        # 0x41f744
  4080ce:	nop
  4080cf:	nop
  4080d0:	jmp    QWORD PTR [rip+0x17666]        # 0x41f73c
  4080d6:	nop
  4080d7:	nop
  4080d8:	jmp    QWORD PTR [rip+0x17656]        # 0x41f734
  4080de:	nop
  4080df:	nop
  4080e0:	jmp    QWORD PTR [rip+0x17646]        # 0x41f72c
  4080e6:	nop
  4080e7:	nop
  4080e8:	jmp    QWORD PTR [rip+0x17636]        # 0x41f724
  4080ee:	nop
  4080ef:	nop
  4080f0:	jmp    QWORD PTR [rip+0x17626]        # 0x41f71c
  4080f6:	nop
  4080f7:	nop
  4080f8:	jmp    QWORD PTR [rip+0x17616]        # 0x41f714
  4080fe:	nop
  4080ff:	nop
  408100:	jmp    QWORD PTR [rip+0x17606]        # 0x41f70c
  408106:	nop
  408107:	nop
  408108:	jmp    QWORD PTR [rip+0x175f6]        # 0x41f704
  40810e:	nop
  40810f:	nop
  408110:	jmp    QWORD PTR [rip+0x175e6]        # 0x41f6fc
  408116:	nop
  408117:	nop
  408118:	jmp    QWORD PTR [rip+0x175d6]        # 0x41f6f4
  40811e:	nop
  40811f:	nop
  408120:	jmp    QWORD PTR [rip+0x175c6]        # 0x41f6ec
  408126:	nop
  408127:	nop
  408128:	jmp    QWORD PTR [rip+0x175b6]        # 0x41f6e4
  40812e:	nop
  40812f:	nop
  408130:	jmp    QWORD PTR [rip+0x175a6]        # 0x41f6dc
  408136:	nop
  408137:	nop
  408138:	jmp    QWORD PTR [rip+0x17596]        # 0x41f6d4
  40813e:	nop
  40813f:	nop
  408140:	jmp    QWORD PTR [rip+0x17586]        # 0x41f6cc
  408146:	nop
  408147:	nop
  408148:	jmp    QWORD PTR [rip+0x17576]        # 0x41f6c4
  40814e:	nop
  40814f:	nop
  408150:	jmp    QWORD PTR [rip+0x17566]        # 0x41f6bc
  408156:	nop
  408157:	nop
  408158:	jmp    QWORD PTR [rip+0x17556]        # 0x41f6b4
  40815e:	nop
  40815f:	nop
  408160:	jmp    QWORD PTR [rip+0x17546]        # 0x41f6ac
  408166:	nop
  408167:	nop
  408168:	jmp    QWORD PTR [rip+0x17536]        # 0x41f6a4
  40816e:	nop
  40816f:	nop
  408170:	jmp    QWORD PTR [rip+0x17526]        # 0x41f69c
  408176:	nop
  408177:	nop
  408178:	jmp    QWORD PTR [rip+0x17516]        # 0x41f694
  40817e:	nop
  40817f:	nop
  408180:	jmp    QWORD PTR [rip+0x17506]        # 0x41f68c
  408186:	nop
  408187:	nop
  408188:	jmp    QWORD PTR [rip+0x174f6]        # 0x41f684
  40818e:	nop
  40818f:	nop
  408190:	jmp    QWORD PTR [rip+0x174e6]        # 0x41f67c
  408196:	nop
  408197:	nop
  408198:	jmp    QWORD PTR [rip+0x174d6]        # 0x41f674
  40819e:	nop
  40819f:	nop
  4081a0:	jmp    QWORD PTR [rip+0x174c6]        # 0x41f66c
  4081a6:	nop
  4081a7:	nop
  4081a8:	jmp    QWORD PTR [rip+0x174b6]        # 0x41f664
  4081ae:	nop
  4081af:	nop
  4081b0:	jmp    QWORD PTR [rip+0x174a6]        # 0x41f65c
  4081b6:	nop
  4081b7:	nop
  4081b8:	jmp    QWORD PTR [rip+0x17496]        # 0x41f654
  4081be:	nop
  4081bf:	nop
  4081c0:	jmp    QWORD PTR [rip+0x17486]        # 0x41f64c
  4081c6:	nop
  4081c7:	nop
  4081c8:	jmp    QWORD PTR [rip+0x17476]        # 0x41f644
  4081ce:	nop
  4081cf:	nop
  4081d0:	jmp    QWORD PTR [rip+0x17466]        # 0x41f63c
  4081d6:	nop
  4081d7:	nop
  4081d8:	jmp    QWORD PTR [rip+0x17456]        # 0x41f634
  4081de:	nop
  4081df:	nop
  4081e0:	jmp    QWORD PTR [rip+0x17446]        # 0x41f62c
  4081e6:	nop
  4081e7:	nop
  4081e8:	jmp    QWORD PTR [rip+0x17436]        # 0x41f624
  4081ee:	nop
  4081ef:	nop
  4081f0:	jmp    QWORD PTR [rip+0x17426]        # 0x41f61c
  4081f6:	nop
  4081f7:	nop
  4081f8:	jmp    QWORD PTR [rip+0x17416]        # 0x41f614
  4081fe:	nop
  4081ff:	nop
  408200:	jmp    QWORD PTR [rip+0x17406]        # 0x41f60c
  408206:	nop
  408207:	nop
  408208:	nop    DWORD PTR [rax+rax*1+0x0]
  408210:	push   rbx
  408211:	sub    rsp,0x30
  408215:	mov    rbx,rcx
  408218:	mov    rcx,QWORD PTR [rip+0x158b1]        # 0x41dad0
  40821f:	call   0x4087c0
  408224:	cmp    rax,0xffffffffffffffff
  408228:	mov    QWORD PTR [rsp+0x20],rax
  40822d:	je     0x4082a5
  40822f:	mov    ecx,0x8
  408234:	call   0x40a0d0
  408239:	mov    rcx,QWORD PTR [rip+0x15890]        # 0x41dad0
  408240:	call   0x4087c0
  408245:	mov    rcx,QWORD PTR [rip+0x1588c]        # 0x41dad8
  40824c:	mov    QWORD PTR [rsp+0x20],rax
  408251:	call   0x4087c0
  408256:	lea    rdx,[rsp+0x20]
  40825b:	lea    r8,[rsp+0x28]
  408260:	mov    rcx,rbx
  408263:	mov    QWORD PTR [rsp+0x28],rax
  408268:	call   0x40a158
  40826d:	mov    rcx,QWORD PTR [rsp+0x20]
  408272:	mov    rbx,rax
  408275:	call   0x4087d0
  40827a:	mov    rcx,QWORD PTR [rsp+0x28]
  40827f:	mov    QWORD PTR [rip+0x1584a],rax        # 0x41dad0
  408286:	call   0x4087d0
  40828b:	mov    ecx,0x8
  408290:	mov    QWORD PTR [rip+0x15841],rax        # 0x41dad8
  408297:	call   0x40a098
  40829c:	mov    rax,rbx
  40829f:	add    rsp,0x30
  4082a3:	pop    rbx
  4082a4:	ret    
  4082a5:	mov    rax,QWORD PTR [rip+0x10e44]        # 0x4190f0
  4082ac:	mov    rcx,rbx
  4082af:	call   QWORD PTR [rax]
  4082b1:	add    rsp,0x30
  4082b5:	pop    rbx
  4082b6:	ret    
  4082b7:	nop    WORD PTR [rax+rax*1+0x0]
  4082c0:	sub    rsp,0x28
  4082c4:	call   0x408210
  4082c9:	test   rax,rax
  4082cc:	sete   al
  4082cf:	movzx  eax,al
  4082d2:	neg    eax
  4082d4:	add    rsp,0x28
  4082d8:	ret    
  4082d9:	nop
  4082da:	nop
  4082db:	nop
  4082dc:	nop
  4082dd:	nop
  4082de:	nop
  4082df:	nop
  4082e0:	sub    rsp,0x28
  4082e4:	mov    rax,QWORD PTR [rip+0xcd55]        # 0x415040
  4082eb:	mov    rax,QWORD PTR [rax]
  4082ee:	test   rax,rax
  4082f1:	je     0x408310
  4082f3:	call   rax
  4082f5:	mov    rax,QWORD PTR [rip+0xcd44]        # 0x415040
  4082fc:	lea    rdx,[rax+0x8]
  408300:	mov    rax,QWORD PTR [rax+0x8]
  408304:	mov    QWORD PTR [rip+0xcd35],rdx        # 0x415040
  40830b:	test   rax,rax
  40830e:	jne    0x4082f3
  408310:	add    rsp,0x28
  408314:	ret    
  408315:	nop
  408316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408320:	push   rsi
  408321:	push   rbx
  408322:	sub    rsp,0x28
  408326:	mov    rsi,QWORD PTR [rip+0x10d43]        # 0x419070
  40832d:	mov    rax,QWORD PTR [rsi]
  408330:	cmp    eax,0xffffffff
  408333:	mov    ebx,eax
  408335:	je     0x408360
  408337:	test   ebx,ebx
  408339:	je     0x40834a
  40833b:	nop    DWORD PTR [rax+rax*1+0x0]
  408340:	mov    eax,ebx
  408342:	call   QWORD PTR [rsi+rax*8]
  408345:	sub    ebx,0x1
  408348:	jne    0x408340
  40834a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x4082e0
  408351:	add    rsp,0x28
  408355:	pop    rbx
  408356:	pop    rsi
  408357:	jmp    0x4082c0
  40835c:	nop    DWORD PTR [rax+0x0]
  408360:	xor    ebx,ebx
  408362:	jmp    0x408366
  408364:	mov    ebx,eax
  408366:	lea    edx,[rbx+0x1]
  408369:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40836e:	mov    rax,rdx
  408371:	jne    0x408364
  408373:	jmp    0x408337
  408375:	nop
  408376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408380:	mov    eax,DWORD PTR [rip+0x14d6a]        # 0x41d0f0
  408386:	test   eax,eax
  408388:	je     0x408390
  40838a:	repz ret 
  40838c:	nop    DWORD PTR [rax+0x0]
  408390:	mov    DWORD PTR [rip+0x14d56],0x1        # 0x41d0f0
  40839a:	jmp    0x408320
  40839c:	nop
  40839d:	nop
  40839e:	nop
  40839f:	nop
  4083a0:	mov    rax,QWORD PTR [rip+0x175a5]        # 0x41f94c
  4083a7:	rex.W jmp rax
  4083aa:	nop
  4083ab:	nop
  4083ac:	nop
  4083ad:	nop
  4083ae:	nop
  4083af:	nop
  4083b0:	xor    eax,eax
  4083b2:	ret    
  4083b3:	nop
  4083b4:	nop
  4083b5:	nop
  4083b6:	nop
  4083b7:	nop
  4083b8:	nop
  4083b9:	nop
  4083ba:	nop
  4083bb:	nop
  4083bc:	nop
  4083bd:	nop
  4083be:	nop
  4083bf:	nop
  4083c0:	push   r12
  4083c2:	push   rbp
  4083c3:	push   rdi
  4083c4:	push   rsi
  4083c5:	push   rbx
  4083c6:	sub    rsp,0x40
  4083ca:	mov    rbx,QWORD PTR [rip+0xcccf]        # 0x4150a0
  4083d1:	movabs rax,0x2b992ddfa232
  4083db:	mov    QWORD PTR [rsp+0x20],0x0
  4083e4:	cmp    rbx,rax
  4083e7:	je     0x408400
  4083e9:	not    rbx
  4083ec:	mov    QWORD PTR [rip+0xccbd],rbx        # 0x4150b0
  4083f3:	add    rsp,0x40
  4083f7:	pop    rbx
  4083f8:	pop    rsi
  4083f9:	pop    rdi
  4083fa:	pop    rbp
  4083fb:	pop    r12
  4083fd:	ret    
  4083fe:	xchg   ax,ax
  408400:	lea    rcx,[rsp+0x20]
  408405:	call   QWORD PTR [rip+0x17491]        # 0x41f89c
  40840b:	mov    r12,QWORD PTR [rsp+0x20]
  408410:	call   QWORD PTR [rip+0x1743e]        # 0x41f854
  408416:	mov    ebp,eax
  408418:	call   QWORD PTR [rip+0x1743e]        # 0x41f85c
  40841e:	mov    edi,eax
  408420:	call   QWORD PTR [rip+0x1747e]        # 0x41f8a4
  408426:	lea    rcx,[rsp+0x30]
  40842b:	mov    esi,eax
  40842d:	call   QWORD PTR [rip+0x17489]        # 0x41f8bc
  408433:	xor    r12,QWORD PTR [rsp+0x30]
  408438:	mov    edx,edi
  40843a:	movabs rax,0xffffffffffff
  408444:	xor    rbp,r12
  408447:	mov    rdi,rbp
  40844a:	xor    rdi,rdx
  40844d:	mov    edx,esi
  40844f:	xor    rdi,rdx
  408452:	mov    rsi,rdi
  408455:	and    rsi,rax
  408458:	cmp    rsi,rbx
  40845b:	je     0x408480
  40845d:	mov    rax,rsi
  408460:	not    rax
  408463:	mov    QWORD PTR [rip+0xcc36],rsi        # 0x4150a0
  40846a:	mov    QWORD PTR [rip+0xcc3f],rax        # 0x4150b0
  408471:	add    rsp,0x40
  408475:	pop    rbx
  408476:	pop    rsi
  408477:	pop    rdi
  408478:	pop    rbp
  408479:	pop    r12
  40847b:	ret    
  40847c:	nop    DWORD PTR [rax+0x0]
  408480:	movabs rax,0xffffd466d2205dcc
  40848a:	movabs rsi,0x2b992ddfa233
  408494:	jmp    0x408463
  408496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4084a0:	push   rbp
  4084a1:	push   rsi
  4084a2:	push   rbx
  4084a3:	mov    rbp,rsp
  4084a6:	sub    rsp,0x70
  4084aa:	mov    rsi,rcx
  4084ad:	lea    rcx,[rip+0x14c8c]        # 0x41d140
  4084b4:	call   QWORD PTR [rip+0x17412]        # 0x41f8cc
  4084ba:	mov    rbx,QWORD PTR [rip+0x14d77]        # 0x41d238
  4084c1:	xor    r8d,r8d
  4084c4:	lea    rdx,[rbp-0x28]
  4084c8:	mov    rcx,rbx
  4084cb:	call   QWORD PTR [rip+0x17403]        # 0x41f8d4
  4084d1:	test   rax,rax
  4084d4:	mov    r9,rax
  4084d7:	je     0x408580
  4084dd:	lea    rax,[rbp-0x20]
  4084e1:	mov    QWORD PTR [rsp+0x38],0x0
  4084ea:	mov    r8,rbx
  4084ed:	mov    rdx,QWORD PTR [rbp-0x28]
  4084f1:	xor    ecx,ecx
  4084f3:	mov    QWORD PTR [rsp+0x30],rax
  4084f8:	lea    rax,[rbp-0x18]
  4084fc:	mov    QWORD PTR [rsp+0x28],rax
  408501:	lea    rax,[rip+0x14c38]        # 0x41d140
  408508:	mov    QWORD PTR [rsp+0x20],rax
  40850d:	call   QWORD PTR [rip+0x173c9]        # 0x41f8dc
  408513:	mov    rax,QWORD PTR [rip+0x14d1e]        # 0x41d238
  40851a:	xor    ecx,ecx
  40851c:	mov    QWORD PTR [rip+0x14c9d],rsi        # 0x41d1c0
  408523:	mov    DWORD PTR [rip+0x15113],0xc0000409        # 0x41d640
  40852d:	mov    DWORD PTR [rip+0x1510d],0x1        # 0x41d644
  408537:	mov    QWORD PTR [rip+0x15112],rax        # 0x41d650
  40853e:	mov    rax,QWORD PTR [rip+0xcb5b]        # 0x4150a0
  408545:	mov    QWORD PTR [rbp-0x10],rax
  408549:	mov    rax,QWORD PTR [rip+0xcb60]        # 0x4150b0
  408550:	mov    QWORD PTR [rbp-0x8],rax
  408554:	call   QWORD PTR [rip+0x1738a]        # 0x41f8e4
  40855a:	lea    rcx,[rip+0x1070f]        # 0x418c70
  408561:	call   QWORD PTR [rip+0x1739d]        # 0x41f904
  408567:	call   QWORD PTR [rip+0x172df]        # 0x41f84c
  40856d:	mov    edx,0xc0000409
  408572:	mov    rcx,rax
  408575:	call   QWORD PTR [rip+0x17379]        # 0x41f8f4
  40857b:	call   0x40a090
  408580:	mov    rax,QWORD PTR [rbp+0x18]
  408584:	mov    QWORD PTR [rip+0x14cad],rax        # 0x41d238
  40858b:	lea    rax,[rbp+0x8]
  40858f:	mov    QWORD PTR [rip+0x14c42],rax        # 0x41d1d8
  408596:	jmp    0x408513
  40859b:	nop
  40859c:	nop
  40859d:	nop
  40859e:	nop
  40859f:	nop
  4085a0:	sub    rsp,0x28
  4085a4:	test   edx,edx
  4085a6:	je     0x4085c0
  4085a8:	cmp    edx,0x3
  4085ab:	je     0x4085c0
  4085ad:	mov    eax,0x1
  4085b2:	add    rsp,0x28
  4085b6:	ret    
  4085b7:	nop    WORD PTR [rax+rax*1+0x0]
  4085c0:	call   0x4092b0
  4085c5:	mov    eax,0x1
  4085ca:	add    rsp,0x28
  4085ce:	ret    
  4085cf:	nop
  4085d0:	push   rsi
  4085d1:	push   rbx
  4085d2:	sub    rsp,0x28
  4085d6:	mov    rax,QWORD PTR [rip+0x10a03]        # 0x418fe0
  4085dd:	cmp    DWORD PTR [rax],0x2
  4085e0:	je     0x4085e8
  4085e2:	mov    DWORD PTR [rax],0x2
  4085e8:	cmp    edx,0x2
  4085eb:	je     0x408600
  4085ed:	cmp    edx,0x1
  4085f0:	je     0x408632
  4085f2:	mov    eax,0x1
  4085f7:	add    rsp,0x28
  4085fb:	pop    rbx
  4085fc:	pop    rsi
  4085fd:	ret    
  4085fe:	xchg   ax,ax
  408600:	lea    rbx,[rip+0x18a59]        # 0x421060
  408607:	lea    rsi,[rip+0x18a52]        # 0x421060
  40860e:	cmp    rbx,rsi
  408611:	je     0x4085f2
  408613:	mov    rax,QWORD PTR [rbx]
  408616:	test   rax,rax
  408619:	je     0x40861d
  40861b:	call   rax
  40861d:	add    rbx,0x8
  408621:	cmp    rbx,rsi
  408624:	jne    0x408613
  408626:	mov    eax,0x1
  40862b:	add    rsp,0x28
  40862f:	pop    rbx
  408630:	pop    rsi
  408631:	ret    
  408632:	call   0x4092b0
  408637:	jmp    0x4085f2
  408639:	nop    DWORD PTR [rax+0x0]
  408640:	xor    eax,eax
  408642:	ret    
  408643:	nop
  408644:	nop
  408645:	nop
  408646:	nop
  408647:	nop
  408648:	nop
  408649:	nop
  40864a:	nop
  40864b:	nop
  40864c:	nop
  40864d:	nop
  40864e:	nop
  40864f:	nop
  408650:	sub    rsp,0x58
  408654:	mov    rax,QWORD PTR [rip+0x150c5]        # 0x41d720
  40865b:	test   rax,rax
  40865e:	je     0x40868c
  408660:	movsd  xmm0,QWORD PTR [rsp+0x80]
  408669:	mov    DWORD PTR [rsp+0x20],ecx
  40866d:	lea    rcx,[rsp+0x20]
  408672:	mov    QWORD PTR [rsp+0x28],rdx
  408677:	movsd  QWORD PTR [rsp+0x30],xmm2
  40867d:	movsd  QWORD PTR [rsp+0x38],xmm3
  408683:	movsd  QWORD PTR [rsp+0x40],xmm0
  408689:	call   rax
  40868b:	nop
  40868c:	add    rsp,0x58
  408690:	ret    
  408691:	nop    DWORD PTR [rax+rax*1+0x0]
  408696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4086a0:	mov    QWORD PTR [rip+0x15079],rcx        # 0x41d720
  4086a7:	jmp    0x40a130
  4086ac:	nop    DWORD PTR [rax+0x0]
  4086b0:	push   rsi
  4086b1:	push   rbx
  4086b2:	sub    rsp,0x78
  4086b6:	movaps XMMWORD PTR [rsp+0x40],xmm6
  4086bb:	movaps XMMWORD PTR [rsp+0x50],xmm7
  4086c0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  4086c6:	cmp    DWORD PTR [rcx],0x6
  4086c9:	ja     0x4087a0
  4086cf:	mov    edx,DWORD PTR [rcx]
  4086d1:	lea    rax,[rip+0x106dc]        # 0x418db4
  4086d8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4086dc:	add    rax,rdx
  4086df:	jmp    rax
  4086e1:	lea    rbx,[rip+0x105a8]        # 0x418c90
  4086e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4086f0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  4086f6:	mov    rsi,QWORD PTR [rcx+0x8]
  4086fa:	movsd  xmm7,QWORD PTR [rcx+0x18]
  4086ff:	movsd  xmm6,QWORD PTR [rcx+0x10]
  408704:	call   0x40a148
  408709:	movsd  QWORD PTR [rsp+0x30],xmm8
  408710:	lea    rcx,[rax+0x60]
  408714:	lea    rdx,[rip+0x1066d]        # 0x418d88
  40871b:	movsd  QWORD PTR [rsp+0x28],xmm7
  408721:	mov    r9,rsi
  408724:	mov    r8,rbx
  408727:	movsd  QWORD PTR [rsp+0x20],xmm6
  40872d:	call   0x40a068
  408732:	nop
  408733:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  408738:	xor    eax,eax
  40873a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  40873f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  408745:	add    rsp,0x78
  408749:	pop    rbx
  40874a:	pop    rsi
  40874b:	ret    
  40874c:	nop    DWORD PTR [rax+0x0]
  408750:	lea    rbx,[rip+0x10558]        # 0x418caf
  408757:	jmp    0x4086f0
  408759:	nop    DWORD PTR [rax+0x0]
  408760:	lea    rbx,[rip+0x10569]        # 0x418cd0
  408767:	jmp    0x4086f0
  408769:	nop    DWORD PTR [rax+0x0]
  408770:	lea    rbx,[rip+0x105c9]        # 0x418d40
  408777:	jmp    0x4086f0
  40877c:	nop    DWORD PTR [rax+0x0]
  408780:	lea    rbx,[rip+0x10591]        # 0x418d18
  408787:	jmp    0x4086f0
  40878c:	nop    DWORD PTR [rax+0x0]
  408790:	lea    rbx,[rip+0x10559]        # 0x418cf0
  408797:	jmp    0x4086f0
  40879c:	nop    DWORD PTR [rax+0x0]
  4087a0:	lea    rbx,[rip+0x105cf]        # 0x418d76
  4087a7:	jmp    0x4086f0
  4087ac:	nop
  4087ad:	nop
  4087ae:	nop
  4087af:	nop
  4087b0:	fninit 
  4087b2:	ret    
  4087b3:	nop
  4087b4:	nop
  4087b5:	nop
  4087b6:	nop
  4087b7:	nop
  4087b8:	nop
  4087b9:	nop
  4087ba:	nop
  4087bb:	nop
  4087bc:	nop
  4087bd:	nop
  4087be:	nop
  4087bf:	nop
  4087c0:	mov    rax,rcx
  4087c3:	ret    
  4087c4:	xchg   ax,ax
  4087c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4087d0:	mov    rax,rcx
  4087d3:	ret    
  4087d4:	nop
  4087d5:	nop
  4087d6:	nop
  4087d7:	nop
  4087d8:	nop
  4087d9:	nop
  4087da:	nop
  4087db:	nop
  4087dc:	nop
  4087dd:	nop
  4087de:	nop
  4087df:	nop
  4087e0:	push   rsi
  4087e1:	push   rbx
  4087e2:	sub    rsp,0x38
  4087e6:	lea    rax,[rsp+0x58]
  4087eb:	mov    rbx,rcx
  4087ee:	mov    QWORD PTR [rsp+0x58],rdx
  4087f3:	mov    QWORD PTR [rsp+0x60],r8
  4087f8:	mov    QWORD PTR [rsp+0x68],r9
  4087fd:	mov    QWORD PTR [rsp+0x28],rax
  408802:	call   0x40a148
  408807:	lea    rcx,[rip+0x105c2]        # 0x418dd0
  40880e:	lea    r9,[rax+0x60]
  408812:	mov    r8d,0x1b
  408818:	mov    edx,0x1
  40881d:	call   0x40a050
  408822:	mov    rsi,QWORD PTR [rsp+0x28]
  408827:	call   0x40a148
  40882c:	lea    rcx,[rax+0x60]
  408830:	mov    rdx,rbx
  408833:	mov    r8,rsi
  408836:	call   0x409fc0
  40883b:	call   0x40a090
  408840:	nop
  408841:	nop    DWORD PTR [rax+rax*1+0x0]
  408846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408850:	push   r13
  408852:	push   r12
  408854:	push   rbp
  408855:	push   rdi
  408856:	push   rsi
  408857:	push   rbx
  408858:	sub    rsp,0x58
  40885c:	movsxd rbp,DWORD PTR [rip+0x14ee1]        # 0x41d744
  408863:	mov    rbx,rcx
  408866:	mov    rsi,rdx
  408869:	mov    rdi,r8
  40886c:	test   ebp,ebp
  40886e:	jle    0x40896a
  408874:	mov    rax,QWORD PTR [rip+0x14ecd]        # 0x41d748
  40887b:	xor    r9d,r9d
  40887e:	add    rax,0x8
  408882:	mov    r10,QWORD PTR [rax]
  408885:	cmp    rbx,r10
  408888:	jb     0x40889e
  40888a:	mov    rdx,QWORD PTR [rax+0x8]
  40888e:	mov    r11d,DWORD PTR [rdx+0x8]
  408892:	add    r10,r11
  408895:	cmp    rbx,r10
  408898:	jb     0x408950
  40889e:	add    r9d,0x1
  4088a2:	add    rax,0x18
  4088a6:	cmp    r9d,ebp
  4088a9:	jne    0x408882
  4088ab:	mov    rcx,rbx
  4088ae:	call   0x4094c0
  4088b3:	test   rax,rax
  4088b6:	mov    r12,rax
  4088b9:	je     0x4089a2
  4088bf:	lea    rbp,[rbp+rbp*2+0x0]
  4088c4:	shl    rbp,0x3
  4088c8:	mov    r13,rbp
  4088cb:	add    r13,QWORD PTR [rip+0x14e76]        # 0x41d748
  4088d2:	mov    QWORD PTR [r13+0x10],rax
  4088d6:	mov    DWORD PTR [r13+0x0],0x0
  4088de:	call   0x4095e0
  4088e3:	mov    edx,DWORD PTR [r12+0xc]
  4088e8:	mov    r8d,0x30
  4088ee:	add    rax,rdx
  4088f1:	lea    rdx,[rsp+0x20]
  4088f6:	mov    QWORD PTR [r13+0x8],rax
  4088fa:	mov    rax,QWORD PTR [rip+0x14e47]        # 0x41d748
  408901:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  408906:	call   QWORD PTR [rip+0x17008]        # 0x41f914
  40890c:	test   rax,rax
  40890f:	je     0x408985
  408911:	mov    eax,DWORD PTR [rsp+0x44]
  408915:	lea    edx,[rax-0x4]
  408918:	and    edx,0xfffffffb
  40891b:	je     0x408949
  40891d:	sub    eax,0x40
  408920:	and    eax,0xffffffbf
  408923:	je     0x408949
  408925:	mov    r9,rbp
  408928:	add    r9,QWORD PTR [rip+0x14e19]        # 0x41d748
  40892f:	mov    r8d,0x40
  408935:	mov    rdx,QWORD PTR [rsp+0x38]
  40893a:	mov    rcx,QWORD PTR [rsp+0x20]
  40893f:	call   QWORD PTR [rip+0x16fc7]        # 0x41f90c
  408945:	test   eax,eax
  408947:	je     0x408971
  408949:	add    DWORD PTR [rip+0x14df4],0x1        # 0x41d744
  408950:	mov    r8,rdi
  408953:	mov    rdx,rsi
  408956:	mov    rcx,rbx
  408959:	add    rsp,0x58
  40895d:	pop    rbx
  40895e:	pop    rsi
  40895f:	pop    rdi
  408960:	pop    rbp
  408961:	pop    r12
  408963:	pop    r13
  408965:	jmp    0x40a030
  40896a:	xor    ebp,ebp
  40896c:	jmp    0x4088ab
  408971:	call   QWORD PTR [rip+0x16ef5]        # 0x41f86c
  408977:	lea    rcx,[rip+0x104ca]        # 0x418e48
  40897e:	mov    edx,eax
  408980:	call   0x4087e0
  408985:	mov    rax,QWORD PTR [rip+0x14dbc]        # 0x41d748
  40898c:	mov    edx,DWORD PTR [r12+0x8]
  408991:	lea    rcx,[rip+0x10478]        # 0x418e10
  408998:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40899d:	call   0x4087e0
  4089a2:	lea    rcx,[rip+0x10447]        # 0x418df0
  4089a9:	mov    rdx,rbx
  4089ac:	call   0x4087e0
  4089b1:	nop
  4089b2:	nop    DWORD PTR [rax+0x0]
  4089b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4089c0:	push   rbp
  4089c1:	push   r14
  4089c3:	push   r13
  4089c5:	push   r12
  4089c7:	push   rdi
  4089c8:	push   rsi
  4089c9:	push   rbx
  4089ca:	mov    rbp,rsp
  4089cd:	sub    rsp,0x60
  4089d1:	mov    ebx,DWORD PTR [rip+0x14d69]        # 0x41d740
  4089d7:	test   ebx,ebx
  4089d9:	je     0x4089f0
  4089db:	mov    rsp,rbp
  4089de:	pop    rbx
  4089df:	pop    rsi
  4089e0:	pop    rdi
  4089e1:	pop    r12
  4089e3:	pop    r13
  4089e5:	pop    r14
  4089e7:	pop    rbp
  4089e8:	ret    
  4089e9:	nop    DWORD PTR [rax+0x0]
  4089f0:	mov    DWORD PTR [rip+0x14d46],0x1        # 0x41d740
  4089fa:	call   0x409510
  4089ff:	cdqe   
  408a01:	lea    rax,[rax+rax*2]
  408a05:	lea    rax,[rax*8+0x1e]
  408a0d:	and    rax,0xfffffffffffffff0
  408a11:	call   0x409740
  408a16:	mov    rsi,QWORD PTR [rip+0x10663]        # 0x419080
  408a1d:	mov    rbx,QWORD PTR [rip+0x1066c]        # 0x419090
  408a24:	sub    rsp,rax
  408a27:	mov    DWORD PTR [rip+0x14d13],0x0        # 0x41d744
  408a31:	lea    rax,[rsp+0x20]
  408a36:	mov    QWORD PTR [rip+0x14d0b],rax        # 0x41d748
  408a3d:	mov    rax,rsi
  408a40:	sub    rax,rbx
  408a43:	cmp    rax,0x7
  408a47:	jle    0x4089db
  408a49:	cmp    rax,0xb
  408a4d:	jle    0x408a75
  408a4f:	mov    r11d,DWORD PTR [rbx]
  408a52:	test   r11d,r11d
  408a55:	jne    0x408ba0
  408a5b:	mov    r10d,DWORD PTR [rbx+0x4]
  408a5f:	test   r10d,r10d
  408a62:	jne    0x408ba0
  408a68:	mov    r9d,DWORD PTR [rbx+0x8]
  408a6c:	test   r9d,r9d
  408a6f:	jne    0x408a8c
  408a71:	add    rbx,0xc
  408a75:	mov    r8d,DWORD PTR [rbx]
  408a78:	test   r8d,r8d
  408a7b:	jne    0x408ba0
  408a81:	mov    ecx,DWORD PTR [rbx+0x4]
  408a84:	test   ecx,ecx
  408a86:	jne    0x408ba0
  408a8c:	mov    edx,DWORD PTR [rbx+0x8]
  408a8f:	cmp    edx,0x1
  408a92:	jne    0x408cac
  408a98:	add    rbx,0xc
  408a9c:	cmp    rbx,rsi
  408a9f:	jae    0x4089db
  408aa5:	mov    r12,QWORD PTR [rip+0x10604]        # 0x4190b0
  408aac:	lea    r13,[rbp-0x30]
  408ab0:	movabs r14,0xffffffff00000000
  408aba:	mov    ecx,DWORD PTR [rbx+0x4]
  408abd:	mov    eax,DWORD PTR [rbx]
  408abf:	movzx  edx,BYTE PTR [rbx+0x8]
  408ac3:	add    rax,r12
  408ac6:	add    rcx,r12
  408ac9:	cmp    edx,0x10
  408acc:	mov    r8,QWORD PTR [rax]
  408acf:	je     0x408c16
  408ad5:	jbe    0x408bdd
  408adb:	cmp    edx,0x20
  408ade:	je     0x408c5f
  408ae4:	cmp    edx,0x40
  408ae7:	jne    0x408c4b
  408aed:	sub    r8,rax
  408af0:	mov    rdx,r13
  408af3:	mov    rdi,r13
  408af6:	mov    rax,r8
  408af9:	add    rax,QWORD PTR [rcx]
  408afc:	mov    r8d,0x8
  408b02:	mov    QWORD PTR [rbp-0x30],rax
  408b06:	call   0x408850
  408b0b:	add    rbx,0xc
  408b0f:	cmp    rbx,rsi
  408b12:	jb     0x408aba
  408b14:	mov    eax,DWORD PTR [rip+0x14c2a]        # 0x41d744
  408b1a:	xor    ebx,ebx
  408b1c:	xor    esi,esi
  408b1e:	test   eax,eax
  408b20:	jle    0x4089db
  408b26:	mov    r14,QWORD PTR [rip+0x16de7]        # 0x41f914
  408b2d:	lea    r13,[rbp-0x34]
  408b31:	mov    r12,QWORD PTR [rip+0x16dd4]        # 0x41f90c
  408b38:	jmp    0x408b53
  408b3a:	nop    WORD PTR [rax+rax*1+0x0]
  408b40:	add    esi,0x1
  408b43:	add    rbx,0x18
  408b47:	cmp    esi,DWORD PTR [rip+0x14bf7]        # 0x41d744
  408b4d:	jge    0x4089db
  408b53:	mov    rax,rbx
  408b56:	add    rax,QWORD PTR [rip+0x14beb]        # 0x41d748
  408b5d:	mov    edx,DWORD PTR [rax]
  408b5f:	test   edx,edx
  408b61:	je     0x408b40
  408b63:	mov    rcx,QWORD PTR [rax+0x8]
  408b67:	mov    r8d,0x30
  408b6d:	mov    rdx,rdi
  408b70:	call   r14
  408b73:	test   rax,rax
  408b76:	je     0x408c8e
  408b7c:	mov    rax,QWORD PTR [rip+0x14bc5]        # 0x41d748
  408b83:	mov    r9,r13
  408b86:	mov    rdx,QWORD PTR [rbp-0x18]
  408b8a:	mov    rcx,QWORD PTR [rbp-0x30]
  408b8e:	mov    r8d,DWORD PTR [rax+rbx*1]
  408b92:	call   r12
  408b95:	jmp    0x408b40
  408b97:	nop    WORD PTR [rax+rax*1+0x0]
  408ba0:	cmp    rbx,rsi
  408ba3:	jae    0x4089db
  408ba9:	mov    r12,QWORD PTR [rip+0x10500]        # 0x4190b0
  408bb0:	lea    rdi,[rbp-0x30]
  408bb4:	mov    ecx,DWORD PTR [rbx+0x4]
  408bb7:	mov    eax,DWORD PTR [rbx]
  408bb9:	mov    r8d,0x4
  408bbf:	mov    rdx,rdi
  408bc2:	add    rbx,0x8
  408bc6:	add    rcx,r12
  408bc9:	add    eax,DWORD PTR [rcx]
  408bcb:	mov    DWORD PTR [rbp-0x30],eax
  408bce:	call   0x408850
  408bd3:	cmp    rbx,rsi
  408bd6:	jb     0x408bb4
  408bd8:	jmp    0x408b14
  408bdd:	cmp    edx,0x8
  408be0:	jne    0x408c4b
  408be2:	movzx  edx,BYTE PTR [rcx]
  408be5:	mov    rdi,r13
  408be8:	mov    r10,rdx
  408beb:	or     r10,0xffffffffffffff00
  408bf2:	test   dl,dl
  408bf4:	cmovs  rdx,r10
  408bf8:	sub    rdx,rax
  408bfb:	lea    rax,[r8+rdx*1]
  408bff:	mov    r8d,0x1
  408c05:	mov    rdx,r13
  408c08:	mov    QWORD PTR [rbp-0x30],rax
  408c0c:	call   0x408850
  408c11:	jmp    0x408b0b
  408c16:	movzx  edx,WORD PTR [rcx]
  408c19:	mov    rdi,r13
  408c1c:	mov    r10,rdx
  408c1f:	or     r10,0xffffffffffff0000
  408c26:	test   dx,dx
  408c29:	cmovs  rdx,r10
  408c2d:	sub    rdx,rax
  408c30:	lea    rax,[r8+rdx*1]
  408c34:	mov    r8d,0x2
  408c3a:	mov    rdx,r13
  408c3d:	mov    QWORD PTR [rbp-0x30],rax
  408c41:	call   0x408850
  408c46:	jmp    0x408b0b
  408c4b:	lea    rcx,[rip+0x10256]        # 0x418ea8
  408c52:	mov    QWORD PTR [rbp-0x30],0x0
  408c5a:	call   0x4087e0
  408c5f:	mov    edx,DWORD PTR [rcx]
  408c61:	mov    rdi,r13
  408c64:	mov    r10,rdx
  408c67:	or     r10,r14
  408c6a:	test   edx,edx
  408c6c:	cmovs  rdx,r10
  408c70:	sub    rdx,rax
  408c73:	lea    rax,[r8+rdx*1]
  408c77:	mov    r8d,0x4
  408c7d:	mov    rdx,r13
  408c80:	mov    QWORD PTR [rbp-0x30],rax
  408c84:	call   0x408850
  408c89:	jmp    0x408b0b
  408c8e:	add    rbx,QWORD PTR [rip+0x14ab3]        # 0x41d748
  408c95:	lea    rcx,[rip+0x10174]        # 0x418e10
  408c9c:	mov    rax,QWORD PTR [rbx+0x10]
  408ca0:	mov    r8,QWORD PTR [rbx+0x8]
  408ca4:	mov    edx,DWORD PTR [rax+0x8]
  408ca7:	call   0x4087e0
  408cac:	lea    rcx,[rip+0x101bd]        # 0x418e70
  408cb3:	call   0x4087e0
  408cb8:	nop
  408cb9:	nop
  408cba:	nop
  408cbb:	nop
  408cbc:	nop
  408cbd:	nop
  408cbe:	nop
  408cbf:	nop
  408cc0:	sub    rsp,0x28
  408cc4:	mov    eax,DWORD PTR [rcx]
  408cc6:	cmp    eax,0xc0000091
  408ccb:	ja     0x408d30
  408ccd:	cmp    eax,0xc000008d
  408cd2:	jae    0x408d4f
  408cd4:	cmp    eax,0xc0000008
  408cd9:	je     0x408df0
  408cdf:	ja     0x408dc0
  408ce5:	cmp    eax,0x80000002
  408cea:	je     0x408df0
  408cf0:	cmp    eax,0xc0000005
  408cf5:	jne    0x408dce
  408cfb:	xor    edx,edx
  408cfd:	mov    ecx,0xb
  408d02:	call   0x40a008
  408d07:	cmp    rax,0x1
  408d0b:	je     0x408e50
  408d11:	test   rax,rax
  408d14:	je     0x408e30
  408d1a:	mov    ecx,0xb
  408d1f:	call   rax
  408d21:	xor    eax,eax
  408d23:	add    rsp,0x28
  408d27:	ret    
  408d28:	nop    DWORD PTR [rax+rax*1+0x0]
  408d30:	cmp    eax,0xc0000094
  408d35:	je     0x408e00
  408d3b:	ja     0x408d80
  408d3d:	cmp    eax,0xc0000092
  408d42:	je     0x408df0
  408d48:	cmp    eax,0xc0000093
  408d4d:	jne    0x408dce
  408d4f:	xor    edx,edx
  408d51:	mov    ecx,0x8
  408d56:	call   0x40a008
  408d5b:	cmp    rax,0x1
  408d5f:	mov    rdx,rax
  408d62:	je     0x408dd8
  408d64:	test   rdx,rdx
  408d67:	mov    eax,0x1
  408d6c:	je     0x408d23
  408d6e:	mov    ecx,0x8
  408d73:	call   rdx
  408d75:	xor    eax,eax
  408d77:	add    rsp,0x28
  408d7b:	ret    
  408d7c:	nop    DWORD PTR [rax+0x0]
  408d80:	cmp    eax,0xc0000095
  408d85:	je     0x408df0
  408d87:	cmp    eax,0xc0000096
  408d8c:	jne    0x408dce
  408d8e:	xor    edx,edx
  408d90:	mov    ecx,0x4
  408d95:	call   0x40a008
  408d9a:	cmp    rax,0x1
  408d9e:	je     0x408e3a
  408da4:	test   rax,rax
  408da7:	je     0x408e30
  408dad:	mov    ecx,0x4
  408db2:	call   rax
  408db4:	xor    eax,eax
  408db6:	jmp    0x408d23
  408dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  408dc0:	cmp    eax,0xc000001d
  408dc5:	je     0x408d8e
  408dc7:	cmp    eax,0xc000008c
  408dcc:	je     0x408df0
  408dce:	mov    eax,0x1
  408dd3:	add    rsp,0x28
  408dd7:	ret    
  408dd8:	mov    edx,0x1
  408ddd:	mov    ecx,0x8
  408de2:	call   0x40a008
  408de7:	call   0x4087b0
  408dec:	nop    DWORD PTR [rax+0x0]
  408df0:	xor    eax,eax
  408df2:	add    rsp,0x28
  408df6:	ret    
  408df7:	nop    WORD PTR [rax+rax*1+0x0]
  408e00:	xor    edx,edx
  408e02:	mov    ecx,0x8
  408e07:	call   0x40a008
  408e0c:	cmp    rax,0x1
  408e10:	mov    rdx,rax
  408e13:	jne    0x408d64
  408e19:	mov    edx,0x1
  408e1e:	mov    ecx,0x8
  408e23:	call   0x40a008
  408e28:	xor    eax,eax
  408e2a:	jmp    0x408d23
  408e2f:	nop
  408e30:	mov    eax,0x4
  408e35:	add    rsp,0x28
  408e39:	ret    
  408e3a:	mov    edx,0x1
  408e3f:	mov    ecx,0x4
  408e44:	call   0x40a008
  408e49:	xor    eax,eax
  408e4b:	jmp    0x408d23
  408e50:	mov    edx,0x1
  408e55:	mov    ecx,0xb
  408e5a:	call   0x40a008
  408e5f:	xor    eax,eax
  408e61:	jmp    0x408d23
  408e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e70:	push   r12
  408e72:	push   rbp
  408e73:	push   rdi
  408e74:	push   rsi
  408e75:	push   rbx
  408e76:	sub    rsp,0x20
  408e7a:	call   0x4095e0
  408e7f:	mov    rbp,rax
  408e82:	mov    eax,DWORD PTR [rip+0x14900]        # 0x41d788
  408e88:	test   eax,eax
  408e8a:	jne    0x408eb1
  408e8c:	test   rbp,rbp
  408e8f:	je     0x408eb1
  408e91:	lea    rcx,[rip+0x10048]        # 0x418ee0
  408e98:	mov    DWORD PTR [rip+0x148e6],0x1        # 0x41d788
  408ea2:	call   0x409420
  408ea7:	test   rax,rax
  408eaa:	je     0x408ec0
  408eac:	mov    eax,0x1
  408eb1:	add    rsp,0x20
  408eb5:	pop    rbx
  408eb6:	pop    rsi
  408eb7:	pop    rdi
  408eb8:	pop    rbp
  408eb9:	pop    r12
  408ebb:	ret    
  408ebc:	nop    DWORD PTR [rax+0x0]
  408ec0:	lea    rbx,[rip+0x149f9]        # 0x41d8c0
  408ec7:	mov    ecx,0x30
  408ecc:	lea    rdx,[rip+0x148ed]        # 0x41d7c0
  408ed3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x408cc0
  408eda:	xor    esi,esi
  408edc:	mov    rdi,rbx
  408edf:	rep stos QWORD PTR es:[rdi],rax
  408ee2:	mov    rdi,rdx
  408ee5:	sub    r12,rbp
  408ee8:	mov    cl,0x20
  408eea:	rep stos QWORD PTR es:[rdi],rax
  408eed:	mov    rdi,rdx
  408ef0:	jmp    0x408f20
  408ef2:	mov    BYTE PTR [rdi],0x9
  408ef5:	mov    DWORD PTR [rdi+0x4],r12d
  408ef9:	add    rsi,0x1
  408efd:	mov    edx,DWORD PTR [rax+0xc]
  408f00:	add    rbx,0xc
  408f04:	mov    DWORD PTR [rbx-0xc],edx
  408f07:	add    edx,DWORD PTR [rax+0x8]
  408f0a:	mov    rax,rdi
  408f0d:	sub    rax,rbp
  408f10:	add    rdi,0x8
  408f14:	mov    DWORD PTR [rbx-0x4],eax
  408f17:	mov    DWORD PTR [rbx-0x8],edx
  408f1a:	cmp    rsi,0x20
  408f1e:	je     0x408f55
  408f20:	mov    rcx,rsi
  408f23:	call   0x409550
  408f28:	test   rax,rax
  408f2b:	jne    0x408ef2
  408f2d:	test   rsi,rsi
  408f30:	je     0x408eac
  408f36:	mov    edx,esi
  408f38:	nop    DWORD PTR [rax+rax*1+0x0]
  408f40:	mov    r8,rbp
  408f43:	lea    rcx,[rip+0x14976]        # 0x41d8c0
  408f4a:	call   QWORD PTR [rip+0x16974]        # 0x41f8c4
  408f50:	jmp    0x408eac
  408f55:	mov    edx,0x20
  408f5a:	jmp    0x408f40
  408f5c:	nop    DWORD PTR [rax+0x0]
  408f60:	push   rbx
  408f61:	sub    rsp,0x20
  408f65:	mov    rdx,QWORD PTR [rcx]
  408f68:	mov    eax,DWORD PTR [rdx]
  408f6a:	mov    r8d,eax
  408f6d:	and    r8d,0x20ffffff
  408f74:	cmp    r8d,0x20474343
  408f7b:	je     0x409080
  408f81:	cmp    eax,0xc0000091
  408f86:	mov    rbx,rcx
  408f89:	ja     0x409010
  408f8f:	cmp    eax,0xc000008d
  408f94:	jae    0x409027
  408f9a:	cmp    eax,0xc0000008
  408f9f:	je     0x408fd3
  408fa1:	ja     0x408fe0
  408fa3:	cmp    eax,0x80000002
  408fa8:	je     0x408fd3
  408faa:	cmp    eax,0xc0000005
  408faf:	jne    0x408ff2
  408fb1:	xor    edx,edx
  408fb3:	mov    ecx,0xb
  408fb8:	call   0x40a008
  408fbd:	cmp    rax,0x1
  408fc1:	je     0x4090f0
  408fc7:	test   rax,rax
  408fca:	je     0x408ff2
  408fcc:	mov    ecx,0xb
  408fd1:	call   rax
  408fd3:	mov    eax,0xffffffff
  408fd8:	add    rsp,0x20
  408fdc:	pop    rbx
  408fdd:	ret    
  408fde:	xchg   ax,ax
  408fe0:	cmp    eax,0xc000001d
  408fe5:	je     0x4090a6
  408feb:	cmp    eax,0xc000008c
  408ff0:	je     0x408fd3
  408ff2:	mov    rax,QWORD PTR [rip+0x14787]        # 0x41d780
  408ff9:	test   rax,rax
  408ffc:	je     0x408fd8
  408ffe:	mov    rcx,rbx
  409001:	add    rsp,0x20
  409005:	pop    rbx
  409006:	rex.W jmp rax
  409009:	nop    DWORD PTR [rax+0x0]
  409010:	cmp    eax,0xc0000094
  409015:	je     0x409052
  409017:	ja     0x409090
  409019:	cmp    eax,0xc0000092
  40901e:	je     0x408fd3
  409020:	cmp    eax,0xc0000093
  409025:	jne    0x408ff2
  409027:	xor    edx,edx
  409029:	mov    ecx,0x8
  40902e:	call   0x40a008
  409033:	cmp    rax,0x1
  409037:	jne    0x409064
  409039:	mov    edx,0x1
  40903e:	mov    ecx,0x8
  409043:	call   0x40a008
  409048:	call   0x4087b0
  40904d:	jmp    0x408fd3
  409052:	xor    edx,edx
  409054:	mov    ecx,0x8
  409059:	call   0x40a008
  40905e:	cmp    rax,0x1
  409062:	je     0x4090d2
  409064:	test   rax,rax
  409067:	je     0x408ff2
  409069:	mov    ecx,0x8
  40906e:	call   rax
  409070:	mov    eax,0xffffffff
  409075:	jmp    0x408fd8
  40907a:	nop    WORD PTR [rax+rax*1+0x0]
  409080:	test   BYTE PTR [rdx+0x4],0x1
  409084:	jne    0x408f81
  40908a:	jmp    0x408fd3
  40908f:	nop
  409090:	cmp    eax,0xc0000095
  409095:	je     0x408fd3
  40909b:	cmp    eax,0xc0000096
  4090a0:	jne    0x408ff2
  4090a6:	xor    edx,edx
  4090a8:	mov    ecx,0x4
  4090ad:	call   0x40a008
  4090b2:	cmp    rax,0x1
  4090b6:	je     0x409104
  4090b8:	test   rax,rax
  4090bb:	je     0x408ff2
  4090c1:	mov    ecx,0x4
  4090c6:	call   rax
  4090c8:	mov    eax,0xffffffff
  4090cd:	jmp    0x408fd8
  4090d2:	mov    edx,0x1
  4090d7:	mov    ecx,0x8
  4090dc:	call   0x40a008
  4090e1:	jmp    0x408fd3
  4090e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4090f0:	mov    edx,0x1
  4090f5:	mov    ecx,0xb
  4090fa:	call   0x40a008
  4090ff:	jmp    0x408fd3
  409104:	mov    edx,0x1
  409109:	mov    ecx,0x4
  40910e:	call   0x40a008
  409113:	jmp    0x408fd3
  409118:	nop
  409119:	nop
  40911a:	nop
  40911b:	nop
  40911c:	nop
  40911d:	nop
  40911e:	nop
  40911f:	nop
  409120:	push   rbp
  409121:	push   rdi
  409122:	push   rsi
  409123:	push   rbx
  409124:	sub    rsp,0x28
  409128:	lea    rcx,[rip+0x14931]        # 0x41da60
  40912f:	call   QWORD PTR [rip+0x16707]        # 0x41f83c
  409135:	mov    rbx,QWORD PTR [rip+0x14904]        # 0x41da40
  40913c:	test   rbx,rbx
  40913f:	je     0x409174
  409141:	mov    rbp,QWORD PTR [rip+0x167b4]        # 0x41f8fc
  409148:	mov    rdi,QWORD PTR [rip+0x1671d]        # 0x41f86c
  40914f:	nop
  409150:	mov    ecx,DWORD PTR [rbx]
  409152:	call   rbp
  409154:	mov    rsi,rax
  409157:	call   rdi
  409159:	test   eax,eax
  40915b:	jne    0x40916b
  40915d:	test   rsi,rsi
  409160:	je     0x40916b
  409162:	mov    rax,QWORD PTR [rbx+0x8]
  409166:	mov    rcx,rsi
  409169:	call   rax
  40916b:	mov    rbx,QWORD PTR [rbx+0x10]
  40916f:	test   rbx,rbx
  409172:	jne    0x409150
  409174:	mov    rax,QWORD PTR [rip+0x16739]        # 0x41f8b4
  40917b:	lea    rcx,[rip+0x148de]        # 0x41da60
  409182:	add    rsp,0x28
  409186:	pop    rbx
  409187:	pop    rsi
  409188:	pop    rdi
  409189:	pop    rbp
  40918a:	rex.W jmp rax
  40918d:	nop    DWORD PTR [rax]
  409190:	push   rdi
  409191:	push   rsi
  409192:	push   rbx
  409193:	sub    rsp,0x20
  409197:	mov    eax,DWORD PTR [rip+0x148ab]        # 0x41da48
  40919d:	test   eax,eax
  40919f:	jne    0x4091b0
  4091a1:	add    rsp,0x20
  4091a5:	pop    rbx
  4091a6:	pop    rsi
  4091a7:	pop    rdi
  4091a8:	ret    
  4091a9:	nop    DWORD PTR [rax+0x0]
  4091b0:	mov    rsi,rdx
  4091b3:	mov    edi,ecx
  4091b5:	mov    edx,0x18
  4091ba:	mov    ecx,0x1
  4091bf:	call   0x40a088
  4091c4:	test   rax,rax
  4091c7:	mov    rbx,rax
  4091ca:	je     0x409208
  4091cc:	mov    DWORD PTR [rax],edi
  4091ce:	mov    QWORD PTR [rax+0x8],rsi
  4091d2:	lea    rcx,[rip+0x14887]        # 0x41da60
  4091d9:	call   QWORD PTR [rip+0x1665d]        # 0x41f83c
  4091df:	mov    rax,QWORD PTR [rip+0x1485a]        # 0x41da40
  4091e6:	lea    rcx,[rip+0x14873]        # 0x41da60
  4091ed:	mov    QWORD PTR [rip+0x1484c],rbx        # 0x41da40
  4091f4:	mov    QWORD PTR [rbx+0x10],rax
  4091f8:	call   QWORD PTR [rip+0x166b6]        # 0x41f8b4
  4091fe:	xor    eax,eax
  409200:	add    rsp,0x20
  409204:	pop    rbx
  409205:	pop    rsi
  409206:	pop    rdi
  409207:	ret    
  409208:	mov    eax,0xffffffff
  40920d:	jmp    0x4091a1
  40920f:	nop
  409210:	push   rbx
  409211:	sub    rsp,0x20
  409215:	mov    eax,DWORD PTR [rip+0x1482d]        # 0x41da48
  40921b:	test   eax,eax
  40921d:	jne    0x409230
  40921f:	xor    eax,eax
  409221:	add    rsp,0x20
  409225:	pop    rbx
  409226:	ret    
  409227:	nop    WORD PTR [rax+rax*1+0x0]
  409230:	mov    ebx,ecx
  409232:	lea    rcx,[rip+0x14827]        # 0x41da60
  409239:	call   QWORD PTR [rip+0x165fd]        # 0x41f83c
  40923f:	mov    rdx,QWORD PTR [rip+0x147fa]        # 0x41da40
  409246:	test   rdx,rdx
  409249:	je     0x409267
  40924b:	mov    eax,DWORD PTR [rdx]
  40924d:	cmp    eax,ebx
  40924f:	jne    0x40925e
  409251:	jmp    0x40929f
  409253:	mov    r8d,DWORD PTR [rax]
  409256:	cmp    r8d,ebx
  409259:	je     0x409280
  40925b:	mov    rdx,rax
  40925e:	mov    rax,QWORD PTR [rdx+0x10]
  409262:	test   rax,rax
  409265:	jne    0x409253
  409267:	lea    rcx,[rip+0x147f2]        # 0x41da60
  40926e:	call   QWORD PTR [rip+0x16640]        # 0x41f8b4
  409274:	xor    eax,eax
  409276:	add    rsp,0x20
  40927a:	pop    rbx
  40927b:	ret    
  40927c:	nop    DWORD PTR [rax+0x0]
  409280:	mov    rcx,rax
  409283:	mov    rax,QWORD PTR [rax+0x10]
  409287:	mov    QWORD PTR [rdx+0x10],rax
  40928b:	call   0x40a060
  409290:	lea    rcx,[rip+0x147c9]        # 0x41da60
  409297:	call   QWORD PTR [rip+0x16617]        # 0x41f8b4
  40929d:	jmp    0x409274
  40929f:	mov    rax,QWORD PTR [rdx+0x10]
  4092a3:	mov    rcx,rdx
  4092a6:	mov    QWORD PTR [rip+0x14793],rax        # 0x41da40
  4092ad:	jmp    0x40928b
  4092af:	nop
  4092b0:	push   rbx
  4092b1:	sub    rsp,0x20
  4092b5:	cmp    edx,0x1
  4092b8:	je     0x409350
  4092be:	jb     0x4092f0
  4092c0:	cmp    edx,0x2
  4092c3:	je     0x4092e0
  4092c5:	cmp    edx,0x3
  4092c8:	jne    0x4092e5
  4092ca:	mov    eax,DWORD PTR [rip+0x14778]        # 0x41da48
  4092d0:	test   eax,eax
  4092d2:	je     0x4092e5
  4092d4:	call   0x409120
  4092d9:	jmp    0x4092e5
  4092db:	nop    DWORD PTR [rax+rax*1+0x0]
  4092e0:	call   0x4087b0
  4092e5:	mov    eax,0x1
  4092ea:	add    rsp,0x20
  4092ee:	pop    rbx
  4092ef:	ret    
  4092f0:	mov    eax,DWORD PTR [rip+0x14752]        # 0x41da48
  4092f6:	test   eax,eax
  4092f8:	jne    0x409380
  4092fe:	mov    eax,DWORD PTR [rip+0x14744]        # 0x41da48
  409304:	cmp    eax,0x1
  409307:	jne    0x4092e5
  409309:	mov    rcx,QWORD PTR [rip+0x14730]        # 0x41da40
  409310:	test   rcx,rcx
  409313:	je     0x409326
  409315:	mov    rbx,QWORD PTR [rcx+0x10]
  409319:	call   0x40a060
  40931e:	test   rbx,rbx
  409321:	mov    rcx,rbx
  409324:	jne    0x409315
  409326:	lea    rcx,[rip+0x14733]        # 0x41da60
  40932d:	mov    QWORD PTR [rip+0x14708],0x0        # 0x41da40
  409338:	mov    DWORD PTR [rip+0x14706],0x0        # 0x41da48
  409342:	call   QWORD PTR [rip+0x164ec]        # 0x41f834
  409348:	jmp    0x4092e5
  40934a:	nop    WORD PTR [rax+rax*1+0x0]
  409350:	mov    eax,DWORD PTR [rip+0x146f2]        # 0x41da48
  409356:	test   eax,eax
  409358:	je     0x409370
  40935a:	mov    eax,0x1
  40935f:	mov    DWORD PTR [rip+0x146df],0x1        # 0x41da48
  409369:	add    rsp,0x20
  40936d:	pop    rbx
  40936e:	ret    
  40936f:	nop
  409370:	lea    rcx,[rip+0x146e9]        # 0x41da60
  409377:	call   QWORD PTR [rip+0x1652f]        # 0x41f8ac
  40937d:	jmp    0x40935a
  40937f:	nop
  409380:	call   0x409120
  409385:	jmp    0x4092fe
  40938a:	nop
  40938b:	nop
  40938c:	nop
  40938d:	nop
  40938e:	nop
  40938f:	nop
  409390:	movsxd rax,DWORD PTR [rcx+0x3c]
  409394:	add    rcx,rax
  409397:	xor    eax,eax
  409399:	cmp    DWORD PTR [rcx],0x4550
  40939f:	je     0x4093a3
  4093a1:	repz ret 
  4093a3:	xor    eax,eax
  4093a5:	cmp    WORD PTR [rcx+0x18],0x20b
  4093ab:	sete   al
  4093ae:	ret    
  4093af:	nop
  4093b0:	cmp    WORD PTR [rcx],0x5a4d
  4093b5:	je     0x4093c0
  4093b7:	xor    eax,eax
  4093b9:	ret    
  4093ba:	nop    WORD PTR [rax+rax*1+0x0]
  4093c0:	jmp    0x409390
  4093c2:	nop    DWORD PTR [rax+0x0]
  4093c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4093d0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4093d4:	add    rcx,rax
  4093d7:	movzx  eax,WORD PTR [rcx+0x14]
  4093db:	lea    rax,[rcx+rax*1+0x18]
  4093e0:	movzx  ecx,WORD PTR [rcx+0x6]
  4093e4:	test   ecx,ecx
  4093e6:	je     0x409411
  4093e8:	sub    ecx,0x1
  4093eb:	lea    rcx,[rcx+rcx*4]
  4093ef:	lea    r9,[rax+rcx*8+0x28]
  4093f4:	mov    r8d,DWORD PTR [rax+0xc]
  4093f8:	cmp    r8,rdx
  4093fb:	mov    rcx,r8
  4093fe:	ja     0x409408
  409400:	add    ecx,DWORD PTR [rax+0x8]
  409403:	cmp    rdx,rcx
  409406:	jb     0x409413
  409408:	add    rax,0x28
  40940c:	cmp    rax,r9
  40940f:	jne    0x4093f4
  409411:	xor    eax,eax
  409413:	repz ret 
  409415:	nop
  409416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409420:	push   rdi
  409421:	push   rsi
  409422:	push   rbx
  409423:	sub    rsp,0x20
  409427:	mov    rsi,rcx
  40942a:	call   0x409fe8
  40942f:	cmp    rax,0x8
  409433:	ja     0x409450
  409435:	mov    rbx,QWORD PTR [rip+0xfc74]        # 0x4190b0
  40943c:	xor    edi,edi
  40943e:	cmp    WORD PTR [rbx],0x5a4d
  409443:	je     0x409460
  409445:	mov    rax,rdi
  409448:	add    rsp,0x20
  40944c:	pop    rbx
  40944d:	pop    rsi
  40944e:	pop    rdi
  40944f:	ret    
  409450:	xor    edi,edi
  409452:	mov    rax,rdi
  409455:	add    rsp,0x20
  409459:	pop    rbx
  40945a:	pop    rsi
  40945b:	pop    rdi
  40945c:	ret    
  40945d:	nop    DWORD PTR [rax]
  409460:	mov    rcx,rbx
  409463:	call   0x409390
  409468:	test   eax,eax
  40946a:	je     0x409445
  40946c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  409470:	add    rdx,rbx
  409473:	movzx  eax,WORD PTR [rdx+0x14]
  409477:	lea    rbx,[rdx+rax*1+0x18]
  40947c:	movzx  eax,WORD PTR [rdx+0x6]
  409480:	test   eax,eax
  409482:	je     0x409445
  409484:	sub    eax,0x1
  409487:	lea    rax,[rax+rax*4]
  40948b:	lea    rdi,[rbx+rax*8+0x28]
  409490:	jmp    0x40949b
  409492:	add    rbx,0x28
  409496:	cmp    rbx,rdi
  409499:	je     0x409450
  40949b:	mov    r8d,0x8
  4094a1:	mov    rdx,rsi
  4094a4:	mov    rcx,rbx
  4094a7:	call   0x409fe0
  4094ac:	test   eax,eax
  4094ae:	jne    0x409492
  4094b0:	mov    rdi,rbx
  4094b3:	mov    rax,rdi
  4094b6:	add    rsp,0x20
  4094ba:	pop    rbx
  4094bb:	pop    rsi
  4094bc:	pop    rdi
  4094bd:	ret    
  4094be:	xchg   ax,ax
  4094c0:	push   rsi
  4094c1:	push   rbx
  4094c2:	sub    rsp,0x28
  4094c6:	mov    rbx,QWORD PTR [rip+0xfbe3]        # 0x4190b0
  4094cd:	cmp    WORD PTR [rbx],0x5a4d
  4094d2:	je     0x4094e0
  4094d4:	xor    eax,eax
  4094d6:	add    rsp,0x28
  4094da:	pop    rbx
  4094db:	pop    rsi
  4094dc:	ret    
  4094dd:	nop    DWORD PTR [rax]
  4094e0:	mov    rsi,rcx
  4094e3:	mov    rcx,rbx
  4094e6:	call   0x409390
  4094eb:	test   eax,eax
  4094ed:	je     0x4094d4
  4094ef:	sub    rsi,rbx
  4094f2:	mov    rcx,rbx
  4094f5:	mov    rdx,rsi
  4094f8:	add    rsp,0x28
  4094fc:	pop    rbx
  4094fd:	pop    rsi
  4094fe:	jmp    0x4093d0
  409503:	nop    DWORD PTR [rax]
  409506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409510:	push   rbx
  409511:	sub    rsp,0x20
  409515:	mov    rbx,QWORD PTR [rip+0xfb94]        # 0x4190b0
  40951c:	xor    eax,eax
  40951e:	cmp    WORD PTR [rbx],0x5a4d
  409523:	je     0x409530
  409525:	add    rsp,0x20
  409529:	pop    rbx
  40952a:	ret    
  40952b:	nop    DWORD PTR [rax+rax*1+0x0]
  409530:	mov    rcx,rbx
  409533:	call   0x409390
  409538:	test   eax,eax
  40953a:	je     0x409525
  40953c:	movsxd rax,DWORD PTR [rbx+0x3c]
  409540:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  409545:	add    rsp,0x20
  409549:	pop    rbx
  40954a:	ret    
  40954b:	nop    DWORD PTR [rax+rax*1+0x0]
  409550:	push   rdi
  409551:	push   rsi
  409552:	push   rbx
  409553:	sub    rsp,0x20
  409557:	mov    rsi,QWORD PTR [rip+0xfb52]        # 0x4190b0
  40955e:	xor    edi,edi
  409560:	mov    rbx,rcx
  409563:	cmp    WORD PTR [rsi],0x5a4d
  409568:	je     0x409575
  40956a:	mov    rax,rdi
  40956d:	add    rsp,0x20
  409571:	pop    rbx
  409572:	pop    rsi
  409573:	pop    rdi
  409574:	ret    
  409575:	mov    rcx,rsi
  409578:	call   0x409390
  40957d:	test   eax,eax
  40957f:	je     0x40956a
  409581:	movsxd rax,DWORD PTR [rsi+0x3c]
  409585:	add    rsi,rax
  409588:	movzx  eax,WORD PTR [rsi+0x14]
  40958c:	lea    rdx,[rsi+rax*1+0x18]
  409591:	movzx  eax,WORD PTR [rsi+0x6]
  409595:	test   eax,eax
  409597:	je     0x40956a
  409599:	sub    eax,0x1
  40959c:	lea    rax,[rax+rax*4]
  4095a0:	lea    rax,[rdx+rax*8+0x28]
  4095a5:	test   BYTE PTR [rdx+0x27],0x20
  4095a9:	je     0x4095b4
  4095ab:	test   rbx,rbx
  4095ae:	je     0x4095d0
  4095b0:	sub    rbx,0x1
  4095b4:	add    rdx,0x28
  4095b8:	cmp    rdx,rax
  4095bb:	jne    0x4095a5
  4095bd:	xor    edi,edi
  4095bf:	mov    rax,rdi
  4095c2:	add    rsp,0x20
  4095c6:	pop    rbx
  4095c7:	pop    rsi
  4095c8:	pop    rdi
  4095c9:	ret    
  4095ca:	nop    WORD PTR [rax+rax*1+0x0]
  4095d0:	mov    rdi,rdx
  4095d3:	mov    rax,rdi
  4095d6:	add    rsp,0x20
  4095da:	pop    rbx
  4095db:	pop    rsi
  4095dc:	pop    rdi
  4095dd:	ret    
  4095de:	xchg   ax,ax
  4095e0:	push   rsi
  4095e1:	push   rbx
  4095e2:	sub    rsp,0x28
  4095e6:	mov    rsi,QWORD PTR [rip+0xfac3]        # 0x4190b0
  4095ed:	xor    ebx,ebx
  4095ef:	cmp    WORD PTR [rsi],0x5a4d
  4095f4:	je     0x409600
  4095f6:	mov    rax,rbx
  4095f9:	add    rsp,0x28
  4095fd:	pop    rbx
  4095fe:	pop    rsi
  4095ff:	ret    
  409600:	mov    rcx,rsi
  409603:	call   0x409390
  409608:	test   eax,eax
  40960a:	cmovne rbx,rsi
  40960e:	mov    rax,rbx
  409611:	add    rsp,0x28
  409615:	pop    rbx
  409616:	pop    rsi
  409617:	ret    
  409618:	nop    DWORD PTR [rax+rax*1+0x0]
  409620:	push   rsi
  409621:	push   rbx
  409622:	sub    rsp,0x28
  409626:	mov    rbx,QWORD PTR [rip+0xfa83]        # 0x4190b0
  40962d:	xor    eax,eax
  40962f:	cmp    WORD PTR [rbx],0x5a4d
  409634:	je     0x409640
  409636:	add    rsp,0x28
  40963a:	pop    rbx
  40963b:	pop    rsi
  40963c:	ret    
  40963d:	nop    DWORD PTR [rax]
  409640:	mov    rsi,rcx
  409643:	mov    rcx,rbx
  409646:	call   0x409390
  40964b:	test   eax,eax
  40964d:	je     0x409636
  40964f:	sub    rsi,rbx
  409652:	mov    rcx,rbx
  409655:	mov    rdx,rsi
  409658:	call   0x4093d0
  40965d:	test   rax,rax
  409660:	je     0x409671
  409662:	mov    eax,DWORD PTR [rax+0x24]
  409665:	not    eax
  409667:	shr    eax,0x1f
  40966a:	add    rsp,0x28
  40966e:	pop    rbx
  40966f:	pop    rsi
  409670:	ret    
  409671:	xor    eax,eax
  409673:	jmp    0x409636
  409675:	nop
  409676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409680:	push   rbp
  409681:	push   rdi
  409682:	push   rsi
  409683:	push   rbx
  409684:	sub    rsp,0x28
  409688:	mov    rdi,QWORD PTR [rip+0xfa21]        # 0x4190b0
  40968f:	xor    ebp,ebp
  409691:	mov    esi,ecx
  409693:	cmp    WORD PTR [rdi],0x5a4d
  409698:	je     0x4096b0
  40969a:	mov    rax,rbp
  40969d:	add    rsp,0x28
  4096a1:	pop    rbx
  4096a2:	pop    rsi
  4096a3:	pop    rdi
  4096a4:	pop    rbp
  4096a5:	ret    
  4096a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4096b0:	mov    rcx,rdi
  4096b3:	call   0x409390
  4096b8:	test   eax,eax
  4096ba:	je     0x40969a
  4096bc:	movsxd rax,DWORD PTR [rdi+0x3c]
  4096c0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  4096c7:	test   edx,edx
  4096c9:	je     0x40969a
  4096cb:	mov    ebx,edx
  4096cd:	mov    rcx,rdi
  4096d0:	mov    rdx,rbx
  4096d3:	call   0x4093d0
  4096d8:	test   rax,rax
  4096db:	je     0x40969a
  4096dd:	add    rbx,rdi
  4096e0:	mov    rdx,rbx
  4096e3:	jne    0x4096f7
  4096e5:	jmp    0x40969a
  4096e7:	nop    WORD PTR [rax+rax*1+0x0]
  4096f0:	sub    esi,0x1
  4096f3:	add    rdx,0x14
  4096f7:	mov    ecx,DWORD PTR [rdx+0x4]
  4096fa:	test   ecx,ecx
  4096fc:	jne    0x409705
  4096fe:	mov    eax,DWORD PTR [rdx+0xc]
  409701:	test   eax,eax
  409703:	je     0x409720
  409705:	test   esi,esi
  409707:	jg     0x4096f0
  409709:	mov    ebp,DWORD PTR [rdx+0xc]
  40970c:	add    rbp,rdi
  40970f:	mov    rax,rbp
  409712:	add    rsp,0x28
  409716:	pop    rbx
  409717:	pop    rsi
  409718:	pop    rdi
  409719:	pop    rbp
  40971a:	ret    
  40971b:	nop    DWORD PTR [rax+rax*1+0x0]
  409720:	xor    ebp,ebp
  409722:	mov    rax,rbp
  409725:	add    rsp,0x28
  409729:	pop    rbx
  40972a:	pop    rsi
  40972b:	pop    rdi
  40972c:	pop    rbp
  40972d:	ret    
  40972e:	nop
  40972f:	nop
  409730:	jmp    QWORD PTR [rip+0x15ec6]        # 0x41f5fc
  409736:	nop
  409737:	nop
  409738:	nop    DWORD PTR [rax+rax*1+0x0]
  409740:	push   rcx
  409741:	push   rax
  409742:	cmp    rax,0x1000
  409748:	lea    rcx,[rsp+0x18]
  40974d:	jb     0x409768
  40974f:	sub    rcx,0x1000
  409756:	or     QWORD PTR [rcx],0x0
  40975a:	sub    rax,0x1000
  409760:	cmp    rax,0x1000
  409766:	ja     0x40974f
  409768:	sub    rcx,rax
  40976b:	or     QWORD PTR [rcx],0x0
  40976f:	pop    rax
  409770:	pop    rcx
  409771:	ret    
  409772:	nop
  409773:	nop
  409774:	nop
  409775:	nop
  409776:	nop
  409777:	nop
  409778:	nop
  409779:	nop
  40977a:	nop
  40977b:	nop
  40977c:	nop
  40977d:	nop
  40977e:	nop
  40977f:	nop
  409780:	push   rdi
  409781:	push   rsi
  409782:	push   rbx
  409783:	sub    rsp,0x130
  40978a:	mov    rbx,rcx
  40978d:	call   0x40a118
  409792:	test   rbx,rbx
  409795:	mov    DWORD PTR [rax],0x0
  40979b:	je     0x40994e
  4097a1:	cmp    BYTE PTR [rbx],0x0
  4097a4:	je     0x409910
  4097aa:	mov    rcx,rbx
  4097ad:	call   QWORD PTR [rip+0x160b1]        # 0x41f864
  4097b3:	cmp    eax,0xffffffff
  4097b6:	je     0x409930
  4097bc:	test   al,0x10
  4097be:	je     0x409910
  4097c4:	lea    rdi,[rsp+0x20]
  4097c9:	mov    rdx,rbx
  4097cc:	mov    r8d,0x104
  4097d2:	mov    rcx,rdi
  4097d5:	mov    rbx,rdi
  4097d8:	call   0x40a0f0
  4097dd:	mov    r8d,DWORD PTR [rbx]
  4097e0:	add    rbx,0x4
  4097e4:	lea    eax,[r8-0x1010101]
  4097eb:	not    r8d
  4097ee:	and    eax,r8d
  4097f1:	and    eax,0x80808080
  4097f6:	je     0x4097dd
  4097f8:	mov    edx,eax
  4097fa:	shr    edx,0x10
  4097fd:	test   eax,0x8080
  409802:	cmove  eax,edx
  409805:	lea    rdx,[rbx+0x2]
  409809:	cmove  rbx,rdx
  40980d:	add    al,al
  40980f:	sbb    rbx,0x3
  409813:	sub    rbx,rdi
  409816:	lea    rcx,[rbx+0x24b]
  40981d:	call   0x40a040
  409822:	test   rax,rax
  409825:	mov    rsi,rax
  409828:	je     0x40993f
  40982e:	lea    r9,[rax+0x244]
  409835:	lea    r8,[rbx+0x1]
  409839:	mov    rdx,rdi
  40983c:	mov    rcx,r9
  40983f:	call   0x40a030
  409844:	cmp    BYTE PTR [rsi+0x244],0x0
  40984b:	mov    r9,rax
  40984e:	je     0x409870
  409850:	movzx  eax,BYTE PTR [rsi+rbx*1+0x243]
  409858:	cmp    al,0x2f
  40985a:	je     0x409870
  40985c:	cmp    al,0x5c
  40985e:	je     0x409870
  409860:	mov    r8d,0x5c
  409866:	mov    WORD PTR [r9+rbx*1],r8w
  40986b:	nop    DWORD PTR [rax+rax*1+0x0]
  409870:	mov    rcx,r9
  409873:	mov    eax,DWORD PTR [rcx]
  409875:	add    rcx,0x4
  409879:	lea    edx,[rax-0x1010101]
  40987f:	not    eax
  409881:	and    edx,eax
  409883:	and    edx,0x80808080
  409889:	je     0x409873
  40988b:	mov    eax,edx
  40988d:	shr    eax,0x10
  409890:	test   edx,0x8080
  409896:	cmove  edx,eax
  409899:	lea    rax,[rcx+0x2]
  40989d:	cmove  rcx,rax
  4098a1:	add    dl,dl
  4098a3:	mov    eax,0x2a
  4098a8:	sbb    rcx,0x3
  4098ac:	xor    edx,edx
  4098ae:	mov    WORD PTR [rcx],ax
  4098b1:	mov    WORD PTR [rsi+0x12c],dx
  4098b8:	lea    rdx,[rsi+0x130]
  4098bf:	xor    ecx,ecx
  4098c1:	xor    eax,eax
  4098c3:	mov    QWORD PTR [rsi+0x238],0xffffffffffffffff
  4098ce:	mov    WORD PTR [rsi+0x12e],cx
  4098d5:	mov    rdi,rdx
  4098d8:	mov    ecx,0x20
  4098dd:	mov    DWORD PTR [rsi+0x240],0x0
  4098e7:	mov    DWORD PTR [rsi+0x128],0x0
  4098f1:	rep stos QWORD PTR es:[rdi],rax
  4098f4:	mov    rax,rsi
  4098f7:	mov    DWORD PTR [rdi],0x0
  4098fd:	add    rsp,0x130
  409904:	pop    rbx
  409905:	pop    rsi
  409906:	pop    rdi
  409907:	ret    
  409908:	nop    DWORD PTR [rax+rax*1+0x0]
  409910:	call   0x40a118
  409915:	mov    DWORD PTR [rax],0x14
  40991b:	xor    eax,eax
  40991d:	add    rsp,0x130
  409924:	pop    rbx
  409925:	pop    rsi
  409926:	pop    rdi
  409927:	ret    
  409928:	nop    DWORD PTR [rax+rax*1+0x0]
  409930:	call   0x40a118
  409935:	mov    DWORD PTR [rax],0x2
  40993b:	xor    eax,eax
  40993d:	jmp    0x4098fd
  40993f:	call   0x40a118
  409944:	mov    DWORD PTR [rax],0xc
  40994a:	xor    eax,eax
  40994c:	jmp    0x4098fd
  40994e:	call   0x40a118
  409953:	mov    DWORD PTR [rax],0xe
  409959:	xor    eax,eax
  40995b:	jmp    0x4098fd
  40995d:	nop    DWORD PTR [rax]
  409960:	push   rbp
  409961:	push   rdi
  409962:	push   rsi
  409963:	push   rbx
  409964:	sub    rsp,0x158
  40996b:	mov    rbx,rcx
  40996e:	call   0x40a118
  409973:	test   rbx,rbx
  409976:	mov    DWORD PTR [rax],0x0
  40997c:	je     0x409b6d
  409982:	mov    eax,DWORD PTR [rbx+0x240]
  409988:	test   eax,eax
  40998a:	js     0x409b0f
  409990:	lea    rdi,[rsp+0x20]
  409995:	je     0x409a44
  40999b:	mov    rcx,QWORD PTR [rbx+0x238]
  4099a2:	mov    rdx,rdi
  4099a5:	call   0x409fa8
  4099aa:	cmp    eax,0xffffffff
  4099ad:	mov    ebp,eax
  4099af:	je     0x409ab5
  4099b5:	mov    eax,DWORD PTR [rsp+0x20]
  4099b9:	lea    rsi,[rbx+0x24]
  4099bd:	lea    rdx,[rdi+0x28]
  4099c1:	mov    r8d,0x104
  4099c7:	mov    rcx,rsi
  4099ca:	mov    DWORD PTR [rbx],eax
  4099cc:	mov    rax,QWORD PTR [rsp+0x28]
  4099d1:	mov    QWORD PTR [rbx+0x8],rax
  4099d5:	mov    rax,QWORD PTR [rsp+0x30]
  4099da:	mov    QWORD PTR [rbx+0x10],rax
  4099de:	mov    rax,QWORD PTR [rsp+0x38]
  4099e3:	mov    QWORD PTR [rbx+0x18],rax
  4099e7:	mov    rax,QWORD PTR [rsp+0x40]
  4099ec:	mov    DWORD PTR [rbx+0x20],eax
  4099ef:	call   0x409fd8
  4099f4:	test   ebp,ebp
  4099f6:	jne    0x409ae3
  4099fc:	mov    eax,DWORD PTR [rbx+0x240]
  409a02:	add    eax,0x1
  409a05:	test   eax,eax
  409a07:	mov    DWORD PTR [rbx+0x240],eax
  409a0d:	jle    0x409b0f
  409a13:	mov    rcx,rsi
  409a16:	call   0x409fe8
  409a1b:	lea    rcx,[rbx+0x130]
  409a22:	mov    WORD PTR [rbx+0x12e],ax
  409a29:	mov    rdx,rsi
  409a2c:	call   0x409ff0
  409a31:	lea    rax,[rbx+0x128]
  409a38:	add    rsp,0x158
  409a3f:	pop    rbx
  409a40:	pop    rsi
  409a41:	pop    rdi
  409a42:	pop    rbp
  409a43:	ret    
  409a44:	lea    rcx,[rbx+0x244]
  409a4b:	mov    rdx,rdi
  409a4e:	call   0x40a0f8
  409a53:	cmp    rax,0xffffffffffffffff
  409a57:	mov    rbp,rax
  409a5a:	je     0x409b20
  409a60:	mov    eax,DWORD PTR [rsp+0x20]
  409a64:	lea    rsi,[rbx+0x24]
  409a68:	lea    rdx,[rdi+0x28]
  409a6c:	mov    r8d,0x104
  409a72:	mov    rcx,rsi
  409a75:	mov    DWORD PTR [rbx],eax
  409a77:	mov    rax,QWORD PTR [rsp+0x28]
  409a7c:	mov    QWORD PTR [rbx+0x8],rax
  409a80:	mov    rax,QWORD PTR [rsp+0x30]
  409a85:	mov    QWORD PTR [rbx+0x10],rax
  409a89:	mov    rax,QWORD PTR [rsp+0x38]
  409a8e:	mov    QWORD PTR [rbx+0x18],rax
  409a92:	mov    rax,QWORD PTR [rsp+0x40]
  409a97:	mov    DWORD PTR [rbx+0x20],eax
  409a9a:	call   0x409fd8
  409a9f:	mov    QWORD PTR [rbx+0x238],rbp
  409aa6:	mov    DWORD PTR [rbx+0x240],0x1
  409ab0:	jmp    0x409a13
  409ab5:	lea    rdi,[rbx+0x8]
  409ab9:	mov    rcx,rbx
  409abc:	xor    eax,eax
  409abe:	mov    QWORD PTR [rbx],0x0
  409ac5:	mov    QWORD PTR [rbx+0x120],0x0
  409ad0:	and    rdi,0xfffffffffffffff8
  409ad4:	sub    rcx,rdi
  409ad7:	add    ecx,0x128
  409add:	shr    ecx,0x3
  409ae0:	rep stos QWORD PTR es:[rdi],rax
  409ae3:	call   QWORD PTR [rip+0x15d83]        # 0x41f86c
  409ae9:	cmp    eax,0x12
  409aec:	je     0x409b60
  409aee:	mov    rcx,QWORD PTR [rbx+0x238]
  409af5:	call   0x40a100
  409afa:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  409b05:	mov    DWORD PTR [rbx+0x240],0xffffffff
  409b0f:	xor    eax,eax
  409b11:	add    rsp,0x158
  409b18:	pop    rbx
  409b19:	pop    rsi
  409b1a:	pop    rdi
  409b1b:	pop    rbp
  409b1c:	ret    
  409b1d:	nop    DWORD PTR [rax]
  409b20:	lea    rdi,[rbx+0x8]
  409b24:	mov    rcx,rbx
  409b27:	xor    eax,eax
  409b29:	mov    QWORD PTR [rbx],0x0
  409b30:	mov    QWORD PTR [rbx+0x120],0x0
  409b3b:	and    rdi,0xfffffffffffffff8
  409b3f:	sub    rcx,rdi
  409b42:	add    ecx,0x128
  409b48:	shr    ecx,0x3
  409b4b:	rep stos QWORD PTR es:[rdi],rax
  409b4e:	mov    QWORD PTR [rbx+0x238],rbp
  409b55:	mov    DWORD PTR [rbx+0x240],ebp
  409b5b:	xor    eax,eax
  409b5d:	jmp    0x409b11
  409b5f:	nop
  409b60:	call   0x40a118
  409b65:	mov    DWORD PTR [rax],0x0
  409b6b:	jmp    0x409aee
  409b6d:	call   0x40a118
  409b72:	mov    DWORD PTR [rax],0xe
  409b78:	xor    eax,eax
  409b7a:	jmp    0x409a38
  409b7f:	nop
  409b80:	push   rsi
  409b81:	push   rbx
  409b82:	sub    rsp,0x28
  409b86:	mov    rsi,rcx
  409b89:	call   0x40a118
  409b8e:	test   rsi,rsi
  409b91:	mov    DWORD PTR [rax],0x0
  409b97:	je     0x409bc0
  409b99:	mov    rcx,QWORD PTR [rsi+0x238]
  409ba0:	xor    ebx,ebx
  409ba2:	cmp    rcx,0xffffffffffffffff
  409ba6:	je     0x409baf
  409ba8:	call   0x40a100
  409bad:	mov    ebx,eax
  409baf:	mov    rcx,rsi
  409bb2:	call   0x40a060
  409bb7:	mov    eax,ebx
  409bb9:	add    rsp,0x28
  409bbd:	pop    rbx
  409bbe:	pop    rsi
  409bbf:	ret    
  409bc0:	call   0x40a118
  409bc5:	mov    DWORD PTR [rax],0xe
  409bcb:	mov    eax,0xffffffff
  409bd0:	jmp    0x409bb9
  409bd2:	nop    DWORD PTR [rax+0x0]
  409bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409be0:	push   rbx
  409be1:	sub    rsp,0x20
  409be5:	mov    rbx,rcx
  409be8:	call   0x40a118
  409bed:	test   rbx,rbx
  409bf0:	mov    DWORD PTR [rax],0x0
  409bf6:	je     0x409c25
  409bf8:	mov    rcx,QWORD PTR [rbx+0x238]
  409bff:	cmp    rcx,0xffffffffffffffff
  409c03:	je     0x409c0a
  409c05:	call   0x40a100
  409c0a:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  409c15:	mov    DWORD PTR [rbx+0x240],0x0
  409c1f:	add    rsp,0x20
  409c23:	pop    rbx
  409c24:	ret    
  409c25:	call   0x40a118
  409c2a:	mov    DWORD PTR [rax],0xe
  409c30:	jmp    0x409c1f
  409c32:	nop    DWORD PTR [rax+0x0]
  409c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c40:	push   rbx
  409c41:	sub    rsp,0x20
  409c45:	mov    rbx,rcx
  409c48:	call   0x40a118
  409c4d:	test   rbx,rbx
  409c50:	mov    DWORD PTR [rax],0x0
  409c56:	je     0x409c64
  409c58:	mov    eax,DWORD PTR [rbx+0x240]
  409c5e:	add    rsp,0x20
  409c62:	pop    rbx
  409c63:	ret    
  409c64:	call   0x40a118
  409c69:	mov    DWORD PTR [rax],0xe
  409c6f:	mov    eax,0xffffffff
  409c74:	jmp    0x409c5e
  409c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409c80:	push   rsi
  409c81:	push   rbx
  409c82:	sub    rsp,0x28
  409c86:	mov    rbx,rcx
  409c89:	mov    esi,edx
  409c8b:	call   0x40a118
  409c90:	test   rbx,rbx
  409c93:	mov    DWORD PTR [rax],0x0
  409c99:	je     0x409d0d
  409c9b:	cmp    esi,0xffffffff
  409c9e:	jl     0x409d00
  409ca0:	je     0x409cd0
  409ca2:	mov    rcx,rbx
  409ca5:	call   0x409be0
  409caa:	jmp    0x409cbd
  409cac:	nop    DWORD PTR [rax+0x0]
  409cb0:	mov    rcx,rbx
  409cb3:	call   0x409960
  409cb8:	test   rax,rax
  409cbb:	je     0x409cf7
  409cbd:	cmp    esi,DWORD PTR [rbx+0x240]
  409cc3:	jg     0x409cb0
  409cc5:	add    rsp,0x28
  409cc9:	pop    rbx
  409cca:	pop    rsi
  409ccb:	ret    
  409ccc:	nop    DWORD PTR [rax+0x0]
  409cd0:	mov    rcx,QWORD PTR [rbx+0x238]
  409cd7:	cmp    rcx,0xffffffffffffffff
  409cdb:	je     0x409ce2
  409cdd:	call   0x40a100
  409ce2:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  409ced:	mov    DWORD PTR [rbx+0x240],0xffffffff
  409cf7:	add    rsp,0x28
  409cfb:	pop    rbx
  409cfc:	pop    rsi
  409cfd:	ret    
  409cfe:	xchg   ax,ax
  409d00:	call   0x40a118
  409d05:	mov    DWORD PTR [rax],0x16
  409d0b:	jmp    0x409cf7
  409d0d:	call   0x40a118
  409d12:	mov    DWORD PTR [rax],0xe
  409d18:	jmp    0x409cf7
  409d1a:	nop
  409d1b:	nop
  409d1c:	nop
  409d1d:	nop
  409d1e:	nop
  409d1f:	nop
  409d20:	sub    rsp,0x28
  409d24:	call   0x40a110
  409d29:	add    rsp,0x28
  409d2d:	ret    
  409d2e:	nop
  409d2f:	nop
  409d30:	push   rbx
  409d31:	sub    rsp,0x20
  409d35:	test   r8,r8
  409d38:	lea    rbx,[rcx+r8*1]
  409d3c:	je     0x409d43
  409d3e:	call   0x40a030
  409d43:	mov    rax,rbx
  409d46:	add    rsp,0x20
  409d4a:	pop    rbx
  409d4b:	ret    
  409d4c:	nop
  409d4d:	nop
  409d4e:	nop
  409d4f:	nop
  409d50:	jmp    0x40a0a0
  409d55:	nop
  409d56:	nop
  409d57:	nop
  409d58:	nop
  409d59:	nop
  409d5a:	nop
  409d5b:	nop
  409d5c:	nop
  409d5d:	nop
  409d5e:	nop
  409d5f:	nop
  409d60:	push   r12
  409d62:	push   rbp
  409d63:	push   rdi
  409d64:	push   rsi
  409d65:	push   rbx
  409d66:	sub    rsp,0x250
  409d6d:	mov    rbx,rdx
  409d70:	mov    rsi,rcx
  409d73:	mov    ecx,0x4000
  409d78:	mov    r12d,r8d
  409d7b:	call   0x40a040
  409d80:	test   rbx,rbx
  409d83:	mov    rbp,rax
  409d86:	je     0x409e50
  409d8c:	cmp    WORD PTR [rbx],0x0
  409d90:	lea    rax,[rip+0xf159]        # 0x418ef0
  409d97:	cmove  rbx,rax
  409d9b:	test   rsi,rsi
  409d9e:	je     0x409e41
  409da4:	cmp    WORD PTR [rsi],0x0
  409da8:	lea    rax,[rip+0xf155]        # 0x418f04
  409daf:	cmove  rsi,rax
  409db3:	lea    rdi,[rsp+0x40]
  409db8:	xor    ecx,ecx
  409dba:	mov    r8d,0x104
  409dc0:	mov    rdx,rdi
  409dc3:	call   QWORD PTR [rip+0x15ab3]        # 0x41f87c
  409dc9:	test   eax,eax
  409dcb:	je     0x409e30
  409dcd:	lea    r8,[rip+0xf134]        # 0x418f08
  409dd4:	mov    QWORD PTR [rsp+0x30],rsi
  409dd9:	mov    DWORD PTR [rsp+0x28],r12d
  409dde:	mov    QWORD PTR [rsp+0x20],rbx
  409de3:	mov    r9,rdi
  409de6:	mov    edx,0x1fff
  409deb:	mov    rcx,rbp
  409dee:	call   0x40a0a8
  409df3:	mov    rax,QWORD PTR [rip+0xf3e6]        # 0x4191e0
  409dfa:	mov    eax,DWORD PTR [rax]
  409dfc:	test   eax,eax
  409dfe:	je     0x409e75
  409e00:	xor    ecx,ecx
  409e02:	mov    r9d,0x12012
  409e08:	lea    r8,[rip+0xf191]        # 0x418fa0
  409e0f:	mov    rdx,rbp
  409e12:	call   QWORD PTR [rip+0x15d34]        # 0x41fb4c
  409e18:	cmp    eax,0x3
  409e1b:	je     0x409e61
  409e1d:	cmp    eax,0x5
  409e20:	jne    0x409e5c
  409e22:	add    rsp,0x250
  409e29:	pop    rbx
  409e2a:	pop    rsi
  409e2b:	pop    rdi
  409e2c:	pop    rbp
  409e2d:	pop    r12
  409e2f:	ret    
  409e30:	lea    rdx,[rip+0xf0b9]        # 0x418ef0
  409e37:	mov    rcx,rdi
  409e3a:	call   0x409fb8
  409e3f:	jmp    0x409dcd
  409e41:	lea    rsi,[rip+0xf0bc]        # 0x418f04
  409e48:	jmp    0x409db3
  409e4d:	nop    DWORD PTR [rax]
  409e50:	lea    rbx,[rip+0xf099]        # 0x418ef0
  409e57:	jmp    0x409d9b
  409e5c:	call   0x40a090
  409e61:	mov    ecx,0x16
  409e66:	call   0x40a018
  409e6b:	mov    ecx,0x3
  409e70:	call   0x40a108
  409e75:	call   0x40a148
  409e7a:	lea    rdx,[rip+0xf10f]        # 0x418f90
  409e81:	lea    rcx,[rax+0x60]
  409e85:	mov    r8,rbp
  409e88:	call   0x40a058
  409e8d:	call   0x40a090
  409e92:	nop
  409e93:	nop    DWORD PTR [rax]
  409e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ea0:	push   rbp
  409ea1:	push   rdi
  409ea2:	push   rsi
  409ea3:	push   rbx
  409ea4:	sub    rsp,0x38
  409ea8:	mov    rdi,rdx
  409eab:	mov    DWORD PTR [rsp+0x2c],r8d
  409eb0:	mov    rbp,rcx
  409eb3:	call   0x409fe8
  409eb8:	lea    rcx,[rax+rax*1+0x2]
  409ebd:	call   0x40a040
  409ec2:	mov    rcx,rdi
  409ec5:	mov    rsi,rax
  409ec8:	call   0x409fe8
  409ecd:	lea    rcx,[rax+rax*1+0x2]
  409ed2:	call   0x40a040
  409ed7:	movzx  r9d,BYTE PTR [rbp+0x0]
  409edc:	xor    r10d,r10d
  409edf:	mov    rbx,rax
  409ee2:	mov    r8d,DWORD PTR [rsp+0x2c]
  409ee7:	test   r9b,r9b
  409eea:	je     0x409f07
  409eec:	nop    DWORD PTR [rax+0x0]
  409ef0:	mov    WORD PTR [rsi+r10*2],r9w
  409ef5:	add    r10,0x1
  409ef9:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  409eff:	test   r9b,r9b
  409f02:	jne    0x409ef0
  409f04:	add    r10,r10
  409f07:	movzx  r9d,BYTE PTR [rdi]
  409f0b:	xor    edx,edx
  409f0d:	mov    WORD PTR [rsi+r10*1],dx
  409f12:	xor    r10d,r10d
  409f15:	test   r9b,r9b
  409f18:	je     0x409f36
  409f1a:	nop    WORD PTR [rax+rax*1+0x0]
  409f20:	mov    WORD PTR [rbx+r10*2],r9w
  409f25:	add    r10,0x1
  409f29:	movzx  r9d,BYTE PTR [rdi+r10*1]
  409f2e:	test   r9b,r9b
  409f31:	jne    0x409f20
  409f33:	add    r10,r10
  409f36:	xor    eax,eax
  409f38:	mov    rdx,rbx
  409f3b:	mov    rcx,rsi
  409f3e:	mov    WORD PTR [rbx+r10*1],ax
  409f43:	call   0x409d60
  409f48:	mov    rcx,rsi
  409f4b:	call   0x40a060
  409f50:	mov    rcx,rbx
  409f53:	add    rsp,0x38
  409f57:	pop    rbx
  409f58:	pop    rsi
  409f59:	pop    rdi
  409f5a:	pop    rbp
  409f5b:	jmp    0x40a060
  409f60:	jmp    QWORD PTR [rip+0x15bd6]        # 0x41fb3c
  409f66:	nop
  409f67:	nop
  409f68:	jmp    QWORD PTR [rip+0x15bc6]        # 0x41fb34
  409f6e:	nop
  409f6f:	nop
  409f70:	jmp    QWORD PTR [rip+0x15bb6]        # 0x41fb2c
  409f76:	nop
  409f77:	nop
  409f78:	jmp    QWORD PTR [rip+0x15ba6]        # 0x41fb24
  409f7e:	nop
  409f7f:	nop
  409f80:	jmp    QWORD PTR [rip+0x15b96]        # 0x41fb1c
  409f86:	nop
  409f87:	nop
  409f88:	jmp    QWORD PTR [rip+0x15b86]        # 0x41fb14
  409f8e:	nop
  409f8f:	nop
  409f90:	jmp    QWORD PTR [rip+0x15b76]        # 0x41fb0c
  409f96:	nop
  409f97:	nop
  409f98:	jmp    QWORD PTR [rip+0x15b66]        # 0x41fb04
  409f9e:	nop
  409f9f:	nop
  409fa0:	jmp    QWORD PTR [rip+0x15b56]        # 0x41fafc
  409fa6:	nop
  409fa7:	nop
  409fa8:	jmp    QWORD PTR [rip+0x15b46]        # 0x41faf4
  409fae:	nop
  409faf:	nop
  409fb0:	jmp    QWORD PTR [rip+0x15b36]        # 0x41faec
  409fb6:	nop
  409fb7:	nop
  409fb8:	jmp    QWORD PTR [rip+0x15b26]        # 0x41fae4
  409fbe:	nop
  409fbf:	nop
  409fc0:	jmp    QWORD PTR [rip+0x15b16]        # 0x41fadc
  409fc6:	nop
  409fc7:	nop
  409fc8:	jmp    QWORD PTR [rip+0x15b06]        # 0x41fad4
  409fce:	nop
  409fcf:	nop
  409fd0:	jmp    QWORD PTR [rip+0x15af6]        # 0x41facc
  409fd6:	nop
  409fd7:	nop
  409fd8:	jmp    QWORD PTR [rip+0x15ae6]        # 0x41fac4
  409fde:	nop
  409fdf:	nop
  409fe0:	jmp    QWORD PTR [rip+0x15ad6]        # 0x41fabc
  409fe6:	nop
  409fe7:	nop
  409fe8:	jmp    QWORD PTR [rip+0x15ac6]        # 0x41fab4
  409fee:	nop
  409fef:	nop
  409ff0:	jmp    QWORD PTR [rip+0x15ab6]        # 0x41faac
  409ff6:	nop
  409ff7:	nop
  409ff8:	jmp    QWORD PTR [rip+0x15aa6]        # 0x41faa4
  409ffe:	nop
  409fff:	nop
  40a000:	jmp    QWORD PTR [rip+0x15a96]        # 0x41fa9c
  40a006:	nop
  40a007:	nop
  40a008:	jmp    QWORD PTR [rip+0x15a86]        # 0x41fa94
  40a00e:	nop
  40a00f:	nop
  40a010:	jmp    QWORD PTR [rip+0x15a76]        # 0x41fa8c
  40a016:	nop
  40a017:	nop
  40a018:	jmp    QWORD PTR [rip+0x15a66]        # 0x41fa84
  40a01e:	nop
  40a01f:	nop
  40a020:	jmp    QWORD PTR [rip+0x15a56]        # 0x41fa7c
  40a026:	nop
  40a027:	nop
  40a028:	jmp    QWORD PTR [rip+0x15a46]        # 0x41fa74
  40a02e:	nop
  40a02f:	nop
  40a030:	jmp    QWORD PTR [rip+0x15a36]        # 0x41fa6c
  40a036:	nop
  40a037:	nop
  40a038:	jmp    QWORD PTR [rip+0x15a26]        # 0x41fa64
  40a03e:	nop
  40a03f:	nop
  40a040:	jmp    QWORD PTR [rip+0x15a16]        # 0x41fa5c
  40a046:	nop
  40a047:	nop
  40a048:	jmp    QWORD PTR [rip+0x15a06]        # 0x41fa54
  40a04e:	nop
  40a04f:	nop
  40a050:	jmp    QWORD PTR [rip+0x159f6]        # 0x41fa4c
  40a056:	nop
  40a057:	nop
  40a058:	jmp    QWORD PTR [rip+0x159e6]        # 0x41fa44
  40a05e:	nop
  40a05f:	nop
  40a060:	jmp    QWORD PTR [rip+0x159d6]        # 0x41fa3c
  40a066:	nop
  40a067:	nop
  40a068:	jmp    QWORD PTR [rip+0x159c6]        # 0x41fa34
  40a06e:	nop
  40a06f:	nop
  40a070:	jmp    QWORD PTR [rip+0x159b6]        # 0x41fa2c
  40a076:	nop
  40a077:	nop
  40a078:	jmp    QWORD PTR [rip+0x159a6]        # 0x41fa24
  40a07e:	nop
  40a07f:	nop
  40a080:	jmp    QWORD PTR [rip+0x15996]        # 0x41fa1c
  40a086:	nop
  40a087:	nop
  40a088:	jmp    QWORD PTR [rip+0x15986]        # 0x41fa14
  40a08e:	nop
  40a08f:	nop
  40a090:	jmp    QWORD PTR [rip+0x15976]        # 0x41fa0c
  40a096:	nop
  40a097:	nop
  40a098:	jmp    QWORD PTR [rip+0x15966]        # 0x41fa04
  40a09e:	nop
  40a09f:	nop
  40a0a0:	jmp    QWORD PTR [rip+0x15956]        # 0x41f9fc
  40a0a6:	nop
  40a0a7:	nop
  40a0a8:	jmp    QWORD PTR [rip+0x15946]        # 0x41f9f4
  40a0ae:	nop
  40a0af:	nop
  40a0b0:	jmp    QWORD PTR [rip+0x15936]        # 0x41f9ec
  40a0b6:	nop
  40a0b7:	nop
  40a0b8:	jmp    QWORD PTR [rip+0x15926]        # 0x41f9e4
  40a0be:	nop
  40a0bf:	nop
  40a0c0:	jmp    QWORD PTR [rip+0x15916]        # 0x41f9dc
  40a0c6:	nop
  40a0c7:	nop
  40a0c8:	jmp    QWORD PTR [rip+0x15906]        # 0x41f9d4
  40a0ce:	nop
  40a0cf:	nop
  40a0d0:	jmp    QWORD PTR [rip+0x158f6]        # 0x41f9cc
  40a0d6:	nop
  40a0d7:	nop
  40a0d8:	jmp    QWORD PTR [rip+0x158e6]        # 0x41f9c4
  40a0de:	nop
  40a0df:	nop
  40a0e0:	jmp    QWORD PTR [rip+0x158d6]        # 0x41f9bc
  40a0e6:	nop
  40a0e7:	nop
  40a0e8:	jmp    QWORD PTR [rip+0x158c6]        # 0x41f9b4
  40a0ee:	nop
  40a0ef:	nop
  40a0f0:	jmp    QWORD PTR [rip+0x158b6]        # 0x41f9ac
  40a0f6:	nop
  40a0f7:	nop
  40a0f8:	jmp    QWORD PTR [rip+0x1589e]        # 0x41f99c
  40a0fe:	nop
  40a0ff:	nop
  40a100:	jmp    QWORD PTR [rip+0x1588e]        # 0x41f994
  40a106:	nop
  40a107:	nop
  40a108:	jmp    QWORD PTR [rip+0x1587e]        # 0x41f98c
  40a10e:	nop
  40a10f:	nop
  40a110:	jmp    QWORD PTR [rip+0x1586e]        # 0x41f984
  40a116:	nop
  40a117:	nop
  40a118:	jmp    QWORD PTR [rip+0x1585e]        # 0x41f97c
  40a11e:	nop
  40a11f:	nop
  40a120:	jmp    QWORD PTR [rip+0x1584e]        # 0x41f974
  40a126:	nop
  40a127:	nop
  40a128:	jmp    QWORD PTR [rip+0x1583e]        # 0x41f96c
  40a12e:	nop
  40a12f:	nop
  40a130:	jmp    QWORD PTR [rip+0x15826]        # 0x41f95c
  40a136:	nop
  40a137:	nop
  40a138:	jmp    QWORD PTR [rip+0x15816]        # 0x41f954
  40a13e:	nop
  40a13f:	nop
  40a140:	jmp    QWORD PTR [rip+0x15806]        # 0x41f94c
  40a146:	nop
  40a147:	nop
  40a148:	jmp    QWORD PTR [rip+0x157f6]        # 0x41f944
  40a14e:	nop
  40a14f:	nop
  40a150:	jmp    QWORD PTR [rip+0x157de]        # 0x41f934
  40a156:	nop
  40a157:	nop
  40a158:	jmp    QWORD PTR [rip+0x157ce]        # 0x41f92c
  40a15e:	nop
  40a15f:	nop
  40a160:	mov    rax,QWORD PTR [rip+0x13949]        # 0x41dab0
  40a167:	ret    
  40a168:	nop    DWORD PTR [rax+rax*1+0x0]
  40a170:	mov    rax,rcx
  40a173:	xchg   QWORD PTR [rip+0x13936],rax        # 0x41dab0
  40a17a:	ret    
  40a17b:	nop
  40a17c:	nop
  40a17d:	nop
  40a17e:	nop
  40a17f:	nop
  40a180:	jmp    QWORD PTR [rip+0x159c6]        # 0x41fb4c
  40a186:	nop
  40a187:	nop
  40a188:	nop    DWORD PTR [rax+rax*1+0x0]
  40a190:	jmp    QWORD PTR [rip+0x1577e]        # 0x41f914
  40a196:	nop
  40a197:	nop
  40a198:	jmp    QWORD PTR [rip+0x1576e]        # 0x41f90c
  40a19e:	nop
  40a19f:	nop
  40a1a0:	jmp    QWORD PTR [rip+0x1575e]        # 0x41f904
  40a1a6:	nop
  40a1a7:	nop
  40a1a8:	jmp    QWORD PTR [rip+0x1574e]        # 0x41f8fc
  40a1ae:	nop
  40a1af:	nop
  40a1b0:	jmp    QWORD PTR [rip+0x1573e]        # 0x41f8f4
  40a1b6:	nop
  40a1b7:	nop
  40a1b8:	jmp    QWORD PTR [rip+0x1571e]        # 0x41f8dc
  40a1be:	nop
  40a1bf:	nop
  40a1c0:	jmp    QWORD PTR [rip+0x1570e]        # 0x41f8d4
  40a1c6:	nop
  40a1c7:	nop
  40a1c8:	jmp    QWORD PTR [rip+0x156fe]        # 0x41f8cc
  40a1ce:	nop
  40a1cf:	nop
  40a1d0:	jmp    QWORD PTR [rip+0x156ee]        # 0x41f8c4
  40a1d6:	nop
  40a1d7:	nop
  40a1d8:	jmp    QWORD PTR [rip+0x156de]        # 0x41f8bc
  40a1de:	nop
  40a1df:	nop
  40a1e0:	jmp    QWORD PTR [rip+0x156ce]        # 0x41f8b4
  40a1e6:	nop
  40a1e7:	nop
  40a1e8:	jmp    QWORD PTR [rip+0x156be]        # 0x41f8ac
  40a1ee:	nop
  40a1ef:	nop
  40a1f0:	jmp    QWORD PTR [rip+0x156ae]        # 0x41f8a4
  40a1f6:	nop
  40a1f7:	nop
  40a1f8:	jmp    QWORD PTR [rip+0x1569e]        # 0x41f89c
  40a1fe:	nop
  40a1ff:	nop
  40a200:	jmp    QWORD PTR [rip+0x15676]        # 0x41f87c
  40a206:	nop
  40a207:	nop
  40a208:	jmp    QWORD PTR [rip+0x15656]        # 0x41f864
  40a20e:	nop
  40a20f:	nop
  40a210:	jmp    QWORD PTR [rip+0x15646]        # 0x41f85c
  40a216:	nop
  40a217:	nop
  40a218:	jmp    QWORD PTR [rip+0x15636]        # 0x41f854
  40a21e:	nop
  40a21f:	nop
  40a220:	jmp    QWORD PTR [rip+0x15626]        # 0x41f84c
  40a226:	nop
  40a227:	nop
  40a228:	jmp    QWORD PTR [rip+0x1560e]        # 0x41f83c
  40a22e:	nop
  40a22f:	nop
  40a230:	jmp    QWORD PTR [rip+0x155fe]        # 0x41f834
  40a236:	nop
  40a237:	nop
  40a238:	nop    DWORD PTR [rax+rax*1+0x0]
  40a240:	sub    rsp,0x28
  40a244:	mov    rdx,QWORD PTR [rdx]
  40a247:	mov    r8,QWORD PTR [rcx]
  40a24a:	xor    eax,eax
  40a24c:	mov    r9,QWORD PTR [rdx-0x18]
  40a250:	cmp    QWORD PTR [r8-0x18],r9
  40a254:	jb     0x40a264
  40a256:	xor    r8d,r8d
  40a259:	call   0x4081f8
  40a25e:	test   rax,rax
  40a261:	sete   al
  40a264:	add    rsp,0x28
  40a268:	ret    
  40a269:	nop
  40a26a:	nop
  40a26b:	nop
  40a26c:	nop
  40a26d:	nop
  40a26e:	nop
  40a26f:	nop
  40a270:	push   rsi
  40a271:	push   rbx
  40a272:	sub    rsp,0x28
  40a276:	mov    r10,QWORD PTR [rdx]
  40a279:	mov    r8,QWORD PTR [rcx]
  40a27c:	xor    eax,eax
  40a27e:	mov    r9,QWORD PTR [r10-0x18]
  40a282:	cmp    QWORD PTR [r8-0x18],r9
  40a286:	jb     0x40a2b1
  40a288:	mov    rbx,rcx
  40a28b:	mov    rsi,rdx
  40a28e:	mov    r8,0xffffffffffffffff
  40a295:	mov    rdx,r10
  40a298:	call   0x4081e0
  40a29d:	mov    rdx,QWORD PTR [rbx]
  40a2a0:	mov    rcx,QWORD PTR [rsi]
  40a2a3:	mov    rdx,QWORD PTR [rdx-0x18]
  40a2a7:	sub    rdx,QWORD PTR [rcx-0x18]
  40a2ab:	cmp    rdx,rax
  40a2ae:	sete   al
  40a2b1:	add    rsp,0x28
  40a2b5:	pop    rbx
  40a2b6:	pop    rsi
  40a2b7:	ret    
  40a2b8:	nop
  40a2b9:	nop
  40a2ba:	nop
  40a2bb:	nop
  40a2bc:	nop
  40a2bd:	nop
  40a2be:	nop
  40a2bf:	nop
  40a2c0:	mov    eax,edx
  40a2c2:	ret    
  40a2c3:	nop
  40a2c4:	nop
  40a2c5:	nop
  40a2c6:	nop
  40a2c7:	nop
  40a2c8:	nop
  40a2c9:	nop
  40a2ca:	nop
  40a2cb:	nop
  40a2cc:	nop
  40a2cd:	nop
  40a2ce:	nop
  40a2cf:	nop
  40a2d0:	push   r12
  40a2d2:	push   rbp
  40a2d3:	push   rdi
  40a2d4:	push   rsi
  40a2d5:	push   rbx
  40a2d6:	sub    rsp,0x30
  40a2da:	mov    rbx,QWORD PTR [rcx]
  40a2dd:	mov    rbp,QWORD PTR [rip+0xecfc]        # 0x418fe0
  40a2e4:	mov    rdi,rcx
  40a2e7:	lea    r12,[rsp+0x2f]
  40a2ec:	cmp    rbx,rcx
  40a2ef:	jne    0x40a310
  40a2f1:	jmp    0x40a350
  40a2f3:	mov    eax,DWORD PTR [rcx-0x8]
  40a2f6:	lea    edx,[rax-0x1]
  40a2f9:	test   eax,eax
  40a2fb:	mov    DWORD PTR [rcx-0x8],edx
  40a2fe:	jle    0x40a32c
  40a300:	mov    rcx,rbx
  40a303:	mov    rbx,rsi
  40a306:	call   0x408060
  40a30b:	cmp    rsi,rdi
  40a30e:	je     0x40a350
  40a310:	mov    eax,DWORD PTR [rbp+0x0]
  40a313:	mov    rsi,QWORD PTR [rbx]
  40a316:	mov    rcx,QWORD PTR [rbx+0x10]
  40a31a:	test   eax,eax
  40a31c:	je     0x40a2f3
  40a31e:	mov    eax,0xffffffff
  40a323:	lock xadd DWORD PTR [rcx-0x8],eax
  40a328:	test   eax,eax
  40a32a:	jg     0x40a300
  40a32c:	sub    rcx,0x18
  40a330:	mov    rdx,r12
  40a333:	call   0x408190
  40a338:	mov    rcx,rbx
  40a33b:	mov    rbx,rsi
  40a33e:	call   0x408060
  40a343:	cmp    rsi,rdi
  40a346:	jne    0x40a310
  40a348:	nop    DWORD PTR [rax+rax*1+0x0]
  40a350:	add    rsp,0x30
  40a354:	pop    rbx
  40a355:	pop    rsi
  40a356:	pop    rdi
  40a357:	pop    rbp
  40a358:	pop    r12
  40a35a:	ret    
  40a35b:	nop
  40a35c:	nop
  40a35d:	nop
  40a35e:	nop
  40a35f:	nop
  40a360:	push   r15
  40a362:	push   r14
  40a364:	push   r13
  40a366:	push   r12
  40a368:	push   rbp
  40a369:	push   rdi
  40a36a:	push   rsi
  40a36b:	push   rbx
  40a36c:	sub    rsp,0x58
  40a370:	mov    rsi,QWORD PTR [rcx+0x10]
  40a374:	mov    r12,rcx
  40a377:	mov    r14,rdx
  40a37a:	lea    r13,[rcx+0x8]
  40a37e:	test   rsi,rsi
  40a381:	je     0x40a460
  40a387:	mov    rbp,QWORD PTR [rdx]
  40a38a:	mov    rdi,r13
  40a38d:	mov    r15,QWORD PTR [rbp-0x18]
  40a391:	jmp    0x40a3a5
  40a393:	mov    eax,ebx
  40a395:	test   eax,eax
  40a397:	js     0x40a3d8
  40a399:	mov    rdi,rsi
  40a39c:	mov    rsi,QWORD PTR [rsi+0x10]
  40a3a0:	test   rsi,rsi
  40a3a3:	je     0x40a3e1
  40a3a5:	mov    rcx,QWORD PTR [rsi+0x20]
  40a3a9:	mov    r8,r15
  40a3ac:	mov    rdx,rbp
  40a3af:	mov    rbx,QWORD PTR [rcx-0x18]
  40a3b3:	cmp    rbx,r15
  40a3b6:	cmovbe r8,rbx
  40a3ba:	call   0x40a038
  40a3bf:	test   eax,eax
  40a3c1:	jne    0x40a395
  40a3c3:	sub    rbx,r15
  40a3c6:	cmp    rbx,0x7fffffff
  40a3cd:	jg     0x40a399
  40a3cf:	cmp    rbx,0xffffffff80000000
  40a3d6:	jge    0x40a393
  40a3d8:	mov    rsi,QWORD PTR [rsi+0x18]
  40a3dc:	test   rsi,rsi
  40a3df:	jne    0x40a3a5
  40a3e1:	cmp    r13,rdi
  40a3e4:	je     0x40a435
  40a3e6:	mov    rdx,QWORD PTR [rdi+0x20]
  40a3ea:	mov    r8,r15
  40a3ed:	mov    rcx,rbp
  40a3f0:	mov    rbx,QWORD PTR [rdx-0x18]
  40a3f4:	cmp    rbx,r15
  40a3f7:	cmovbe r8,rbx
  40a3fb:	call   0x40a038
  40a400:	test   eax,eax
  40a402:	jne    0x40a431
  40a404:	sub    r15,rbx
  40a407:	cmp    r15,0x7fffffff
  40a40e:	jle    0x40a425
  40a410:	lea    rax,[rdi+0x28]
  40a414:	add    rsp,0x58
  40a418:	pop    rbx
  40a419:	pop    rsi
  40a41a:	pop    rdi
  40a41b:	pop    rbp
  40a41c:	pop    r12
  40a41e:	pop    r13
  40a420:	pop    r14
  40a422:	pop    r15
  40a424:	ret    
  40a425:	cmp    r15,0xffffffff80000000
  40a42c:	jl     0x40a435
  40a42e:	mov    eax,r15d
  40a431:	test   eax,eax
  40a433:	jns    0x40a410
  40a435:	lea    rax,[rsp+0x3f]
  40a43a:	lea    r9,[rsp+0x40]
  40a43f:	lea    r8,[rip+0xe702]        # 0x418b48
  40a446:	mov    rdx,rdi
  40a449:	mov    rcx,r12
  40a44c:	mov    QWORD PTR [rsp+0x40],r14
  40a451:	mov    QWORD PTR [rsp+0x20],rax
  40a456:	call   0x40a730
  40a45b:	mov    rdi,rax
  40a45e:	jmp    0x40a410
  40a460:	mov    rdi,r13
  40a463:	jmp    0x40a435
  40a465:	nop
  40a466:	nop
  40a467:	nop
  40a468:	nop
  40a469:	nop
  40a46a:	nop
  40a46b:	nop
  40a46c:	nop
  40a46d:	nop
  40a46e:	nop
  40a46f:	nop
  40a470:	push   r15
  40a472:	push   r14
  40a474:	push   r13
  40a476:	push   r12
  40a478:	push   rbp
  40a479:	push   rdi
  40a47a:	push   rsi
  40a47b:	push   rbx
  40a47c:	sub    rsp,0x58
  40a480:	mov    rsi,QWORD PTR [rcx+0x10]
  40a484:	mov    r12,rcx
  40a487:	mov    r14,rdx
  40a48a:	lea    r13,[rcx+0x8]
  40a48e:	test   rsi,rsi
  40a491:	je     0x40a570
  40a497:	mov    rbp,QWORD PTR [rdx]
  40a49a:	mov    rdi,r13
  40a49d:	mov    r15,QWORD PTR [rbp-0x18]
  40a4a1:	jmp    0x40a4b5
  40a4a3:	mov    eax,ebx
  40a4a5:	test   eax,eax
  40a4a7:	js     0x40a4e8
  40a4a9:	mov    rdi,rsi
  40a4ac:	mov    rsi,QWORD PTR [rsi+0x10]
  40a4b0:	test   rsi,rsi
  40a4b3:	je     0x40a4f1
  40a4b5:	mov    rcx,QWORD PTR [rsi+0x20]
  40a4b9:	mov    r8,r15
  40a4bc:	mov    rdx,rbp
  40a4bf:	mov    rbx,QWORD PTR [rcx-0x18]
  40a4c3:	cmp    rbx,r15
  40a4c6:	cmovbe r8,rbx
  40a4ca:	call   0x40a038
  40a4cf:	test   eax,eax
  40a4d1:	jne    0x40a4a5
  40a4d3:	sub    rbx,r15
  40a4d6:	cmp    rbx,0x7fffffff
  40a4dd:	jg     0x40a4a9
  40a4df:	cmp    rbx,0xffffffff80000000
  40a4e6:	jge    0x40a4a3
  40a4e8:	mov    rsi,QWORD PTR [rsi+0x18]
  40a4ec:	test   rsi,rsi
  40a4ef:	jne    0x40a4b5
  40a4f1:	cmp    r13,rdi
  40a4f4:	je     0x40a545
  40a4f6:	mov    rdx,QWORD PTR [rdi+0x20]
  40a4fa:	mov    r8,r15
  40a4fd:	mov    rcx,rbp
  40a500:	mov    rbx,QWORD PTR [rdx-0x18]
  40a504:	cmp    rbx,r15
  40a507:	cmovbe r8,rbx
  40a50b:	call   0x40a038
  40a510:	test   eax,eax
  40a512:	jne    0x40a541
  40a514:	sub    r15,rbx
  40a517:	cmp    r15,0x7fffffff
  40a51e:	jle    0x40a535
  40a520:	lea    rax,[rdi+0x28]
  40a524:	add    rsp,0x58
  40a528:	pop    rbx
  40a529:	pop    rsi
  40a52a:	pop    rdi
  40a52b:	pop    rbp
  40a52c:	pop    r12
  40a52e:	pop    r13
  40a530:	pop    r14
  40a532:	pop    r15
  40a534:	ret    
  40a535:	cmp    r15,0xffffffff80000000
  40a53c:	jl     0x40a545
  40a53e:	mov    eax,r15d
  40a541:	test   eax,eax
  40a543:	jns    0x40a520
  40a545:	lea    rax,[rsp+0x3f]
  40a54a:	lea    r9,[rsp+0x40]
  40a54f:	lea    r8,[rip+0xe5f2]        # 0x418b48
  40a556:	mov    rdx,rdi
  40a559:	mov    rcx,r12
  40a55c:	mov    QWORD PTR [rsp+0x40],r14
  40a561:	mov    QWORD PTR [rsp+0x20],rax
  40a566:	call   0x40a8a0
  40a56b:	mov    rdi,rax
  40a56e:	jmp    0x40a520
  40a570:	mov    rdi,r13
  40a573:	jmp    0x40a545
  40a575:	nop
  40a576:	nop
  40a577:	nop
  40a578:	nop
  40a579:	nop
  40a57a:	nop
  40a57b:	nop
  40a57c:	nop
  40a57d:	nop
  40a57e:	nop
  40a57f:	nop
  40a580:	push   r12
  40a582:	push   rbp
  40a583:	push   rdi
  40a584:	push   rsi
  40a585:	push   rbx
  40a586:	sub    rsp,0x20
  40a58a:	test   rdx,rdx
  40a58d:	je     0x40a5b3
  40a58f:	mov    rsi,rcx
  40a592:	mov    rbx,rdx
  40a595:	mov    rcx,QWORD PTR [rcx+0x8]
  40a599:	mov    rdx,QWORD PTR [rsi+0x10]
  40a59d:	sub    rdx,rcx
  40a5a0:	cmp    rbx,rdx
  40a5a3:	ja     0x40a5c0
  40a5a5:	mov    r8,rbx
  40a5a8:	xor    edx,edx
  40a5aa:	call   0x40a020
  40a5af:	add    QWORD PTR [rsi+0x8],rbx
  40a5b3:	add    rsp,0x20
  40a5b7:	pop    rbx
  40a5b8:	pop    rsi
  40a5b9:	pop    rdi
  40a5ba:	pop    rbp
  40a5bb:	pop    r12
  40a5bd:	ret    
  40a5be:	xchg   ax,ax
  40a5c0:	mov    rdx,QWORD PTR [rsi]
  40a5c3:	mov    rax,rcx
  40a5c6:	sub    rax,rdx
  40a5c9:	mov    rcx,rax
  40a5cc:	mov    rdi,rax
  40a5cf:	not    rcx
  40a5d2:	cmp    rbx,rcx
  40a5d5:	ja     0x40a66d
  40a5db:	cmp    rax,rbx
  40a5de:	mov    rcx,rbx
  40a5e1:	mov    rbp,0xffffffffffffffff
  40a5e8:	cmovae rcx,rax
  40a5ec:	add    rax,rcx
  40a5ef:	jae    0x40a650
  40a5f1:	mov    rcx,rbp
  40a5f4:	call   0x408058
  40a5f9:	mov    rdx,QWORD PTR [rsi]
  40a5fc:	mov    r12,rax
  40a5ff:	mov    rax,QWORD PTR [rsi+0x8]
  40a603:	sub    rax,rdx
  40a606:	mov    rdi,rax
  40a609:	test   rax,rax
  40a60c:	jne    0x40a660
  40a60e:	add    rdi,r12
  40a611:	mov    r8,rbx
  40a614:	xor    edx,edx
  40a616:	mov    rcx,rdi
  40a619:	add    rbx,rdi
  40a61c:	call   0x40a020
  40a621:	mov    rcx,QWORD PTR [rsi]
  40a624:	test   rcx,rcx
  40a627:	je     0x40a62e
  40a629:	call   0x408060
  40a62e:	add    rbp,r12
  40a631:	mov    QWORD PTR [rsi],r12
  40a634:	mov    QWORD PTR [rsi+0x8],rbx
  40a638:	mov    QWORD PTR [rsi+0x10],rbp
  40a63c:	add    rsp,0x20
  40a640:	pop    rbx
  40a641:	pop    rsi
  40a642:	pop    rdi
  40a643:	pop    rbp
  40a644:	pop    r12
  40a646:	ret    
  40a647:	nop    WORD PTR [rax+rax*1+0x0]
  40a650:	test   rax,rax
  40a653:	jne    0x40a679
  40a655:	mov    rax,rdi
  40a658:	xor    ebp,ebp
  40a65a:	xor    r12d,r12d
  40a65d:	jmp    0x40a609
  40a65f:	nop
  40a660:	mov    r8,rdi
  40a663:	mov    rcx,r12
  40a666:	call   0x40a028
  40a66b:	jmp    0x40a60e
  40a66d:	lea    rcx,[rip+0xba3e]        # 0x4160b2
  40a674:	call   0x408088
  40a679:	mov    rbp,rax
  40a67c:	jmp    0x40a5f1
  40a681:	nop
  40a682:	nop
  40a683:	nop
  40a684:	nop
  40a685:	nop
  40a686:	nop
  40a687:	nop
  40a688:	nop
  40a689:	nop
  40a68a:	nop
  40a68b:	nop
  40a68c:	nop
  40a68d:	nop
  40a68e:	nop
  40a68f:	nop
  40a690:	push   r12
  40a692:	push   rbp
  40a693:	push   rdi
  40a694:	push   rsi
  40a695:	push   rbx
  40a696:	sub    rsp,0x30
  40a69a:	test   rdx,rdx
  40a69d:	mov    rsi,r9
  40a6a0:	mov    rbx,rcx
  40a6a3:	mov    rdi,r8
  40a6a6:	lea    r9,[rcx+0x8]
  40a6aa:	je     0x40a6d0
  40a6ac:	mov    ecx,0x1
  40a6b1:	mov    r8,rdi
  40a6b4:	mov    rdx,rsi
  40a6b7:	call   0x408078
  40a6bc:	add    QWORD PTR [rbx+0x28],0x1
  40a6c1:	mov    rax,rsi
  40a6c4:	add    rsp,0x30
  40a6c8:	pop    rbx
  40a6c9:	pop    rsi
  40a6ca:	pop    rdi
  40a6cb:	pop    rbp
  40a6cc:	pop    r12
  40a6ce:	ret    
  40a6cf:	nop
  40a6d0:	cmp    r8,r9
  40a6d3:	je     0x40a6ac
  40a6d5:	mov    rdx,QWORD PTR [r8+0x20]
  40a6d9:	mov    rcx,QWORD PTR [rsi+0x20]
  40a6dd:	mov    QWORD PTR [rsp+0x28],r9
  40a6e2:	mov    rbp,QWORD PTR [rcx-0x18]
  40a6e6:	mov    r12,QWORD PTR [rdx-0x18]
  40a6ea:	mov    r8,rbp
  40a6ed:	cmp    r12,rbp
  40a6f0:	cmovbe r8,r12
  40a6f4:	call   0x40a038
  40a6f9:	test   eax,eax
  40a6fb:	mov    r9,QWORD PTR [rsp+0x28]
  40a700:	jne    0x40a71b
  40a702:	sub    rbp,r12
  40a705:	xor    ecx,ecx
  40a707:	cmp    rbp,0x7fffffff
  40a70e:	jg     0x40a6b1
  40a710:	cmp    rbp,0xffffffff80000000
  40a717:	jl     0x40a6ac
  40a719:	mov    eax,ebp
  40a71b:	shr    eax,0x1f
  40a71e:	mov    ecx,eax
  40a720:	jmp    0x40a6b1
  40a722:	nop
  40a723:	nop
  40a724:	nop
  40a725:	nop
  40a726:	nop
  40a727:	nop
  40a728:	nop
  40a729:	nop
  40a72a:	nop
  40a72b:	nop
  40a72c:	nop
  40a72d:	nop
  40a72e:	nop
  40a72f:	nop
  40a730:	push   r14
  40a732:	push   r13
  40a734:	push   r12
  40a736:	push   rbp
  40a737:	push   rdi
  40a738:	push   rsi
  40a739:	push   rbx
  40a73a:	sub    rsp,0x40
  40a73e:	mov    rsi,r9
  40a741:	mov    rdi,rcx
  40a744:	mov    ecx,0x30
  40a749:	mov    r13,rdx
  40a74c:	lea    r12,[rsp+0x3f]
  40a751:	call   0x408058
  40a756:	mov    rsi,QWORD PTR [rsi]
  40a759:	mov    rbx,rax
  40a75c:	lea    r14,[rax+0x20]
  40a760:	mov    r8,r12
  40a763:	xor    edx,edx
  40a765:	xor    ecx,ecx
  40a767:	mov    rax,QWORD PTR [rsi]
  40a76a:	mov    QWORD PTR [rbx+0x20],rax
  40a76e:	call   0x4081a0
  40a773:	lea    r8,[rsp+0x3e]
  40a778:	mov    QWORD PTR [rsi],rax
  40a77b:	xor    edx,edx
  40a77d:	xor    ecx,ecx
  40a77f:	call   0x4081a0
  40a784:	lea    rcx,[rsp+0x20]
  40a789:	mov    r8,r13
  40a78c:	mov    QWORD PTR [rbx+0x28],rax
  40a790:	mov    r9,r14
  40a793:	mov    rdx,rdi
  40a796:	mov    rbp,rax
  40a799:	call   0x40ab60
  40a79e:	mov    r8,QWORD PTR [rsp+0x28]
  40a7a3:	mov    rsi,QWORD PTR [rsp+0x20]
  40a7a8:	test   r8,r8
  40a7ab:	je     0x40a7d0
  40a7ad:	mov    r9,rbx
  40a7b0:	mov    rdx,rsi
  40a7b3:	mov    rcx,rdi
  40a7b6:	call   0x40a690
  40a7bb:	add    rsp,0x40
  40a7bf:	pop    rbx
  40a7c0:	pop    rsi
  40a7c1:	pop    rdi
  40a7c2:	pop    rbp
  40a7c3:	pop    r12
  40a7c5:	pop    r13
  40a7c7:	pop    r14
  40a7c9:	ret    
  40a7ca:	nop    WORD PTR [rax+rax*1+0x0]
  40a7d0:	mov    rdi,QWORD PTR [rip+0xe809]        # 0x418fe0
  40a7d7:	mov    edx,DWORD PTR [rdi]
  40a7d9:	test   edx,edx
  40a7db:	jne    0x40a820
  40a7dd:	mov    eax,DWORD PTR [rbp-0x8]
  40a7e0:	lea    edx,[rax-0x1]
  40a7e3:	mov    DWORD PTR [rbp-0x8],edx
  40a7e6:	test   eax,eax
  40a7e8:	jle    0x40a850
  40a7ea:	mov    eax,DWORD PTR [rdi]
  40a7ec:	mov    rcx,QWORD PTR [rbx+0x20]
  40a7f0:	test   eax,eax
  40a7f2:	jne    0x40a830
  40a7f4:	mov    eax,DWORD PTR [rcx-0x8]
  40a7f7:	lea    edx,[rax-0x1]
  40a7fa:	mov    DWORD PTR [rcx-0x8],edx
  40a7fd:	test   eax,eax
  40a7ff:	jle    0x40a840
  40a801:	mov    rcx,rbx
  40a804:	call   0x408060
  40a809:	mov    rax,rsi
  40a80c:	add    rsp,0x40
  40a810:	pop    rbx
  40a811:	pop    rsi
  40a812:	pop    rdi
  40a813:	pop    rbp
  40a814:	pop    r12
  40a816:	pop    r13
  40a818:	pop    r14
  40a81a:	ret    
  40a81b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a820:	mov    eax,0xffffffff
  40a825:	lock xadd DWORD PTR [rbp-0x8],eax
  40a82a:	jmp    0x40a7e6
  40a82c:	nop    DWORD PTR [rax+0x0]
  40a830:	mov    eax,0xffffffff
  40a835:	lock xadd DWORD PTR [rcx-0x8],eax
  40a83a:	jmp    0x40a7fd
  40a83c:	nop    DWORD PTR [rax+0x0]
  40a840:	sub    rcx,0x18
  40a844:	mov    rdx,r12
  40a847:	call   0x408190
  40a84c:	jmp    0x40a801
  40a84e:	xchg   ax,ax
  40a850:	lea    rcx,[rbp-0x18]
  40a854:	mov    rdx,r12
  40a857:	call   0x408190
  40a85c:	jmp    0x40a7ea
  40a85e:	mov    rsi,rax
  40a861:	mov    rax,QWORD PTR [rbx+0x20]
  40a865:	mov    rdx,r12
  40a868:	lea    rcx,[rax-0x18]
  40a86c:	call   0x408188
  40a871:	mov    rax,rsi
  40a874:	mov    rcx,rax
  40a877:	call   0x408050
  40a87c:	mov    rcx,rbx
  40a87f:	call   0x408060
  40a884:	call   0x408028
  40a889:	jmp    0x40a874
  40a88b:	mov    rbx,rax
  40a88e:	call   0x408048
  40a893:	mov    rcx,rbx
  40a896:	call   0x409730
  40a89b:	nop
  40a89c:	nop
  40a89d:	nop
  40a89e:	nop
  40a89f:	nop
  40a8a0:	push   r13
  40a8a2:	push   r12
  40a8a4:	push   rbp
  40a8a5:	push   rdi
  40a8a6:	push   rsi
  40a8a7:	push   rbx
  40a8a8:	sub    rsp,0x48
  40a8ac:	mov    rbp,r9
  40a8af:	mov    rdi,rcx
  40a8b2:	mov    ecx,0x30
  40a8b7:	mov    r13,rdx
  40a8ba:	call   0x408058
  40a8bf:	mov    rdx,QWORD PTR [rbp+0x0]
  40a8c3:	lea    rsi,[rax+0x20]
  40a8c7:	mov    rbx,rax
  40a8ca:	mov    rcx,rsi
  40a8cd:	call   0x408128
  40a8d2:	lea    r12,[rsp+0x3f]
  40a8d7:	xor    edx,edx
  40a8d9:	xor    ecx,ecx
  40a8db:	mov    r8,r12
  40a8de:	call   0x4081a0
  40a8e3:	lea    rcx,[rsp+0x20]
  40a8e8:	mov    r9,rsi
  40a8eb:	mov    r8,r13
  40a8ee:	mov    QWORD PTR [rbx+0x28],rax
  40a8f2:	mov    rdx,rdi
  40a8f5:	mov    rbp,rax
  40a8f8:	call   0x40ab60
  40a8fd:	mov    r8,QWORD PTR [rsp+0x28]
  40a902:	mov    rsi,QWORD PTR [rsp+0x20]
  40a907:	test   r8,r8
  40a90a:	je     0x40a930
  40a90c:	mov    r9,rbx
  40a90f:	mov    rdx,rsi
  40a912:	mov    rcx,rdi
  40a915:	call   0x40a690
  40a91a:	add    rsp,0x48
  40a91e:	pop    rbx
  40a91f:	pop    rsi
  40a920:	pop    rdi
  40a921:	pop    rbp
  40a922:	pop    r12
  40a924:	pop    r13
  40a926:	ret    
  40a927:	nop    WORD PTR [rax+rax*1+0x0]
  40a930:	mov    rdi,QWORD PTR [rip+0xe6a9]        # 0x418fe0
  40a937:	mov    edx,DWORD PTR [rdi]
  40a939:	test   edx,edx
  40a93b:	jne    0x40a980
  40a93d:	mov    eax,DWORD PTR [rbp-0x8]
  40a940:	lea    edx,[rax-0x1]
  40a943:	mov    DWORD PTR [rbp-0x8],edx
  40a946:	test   eax,eax
  40a948:	jle    0x40a9b0
  40a94a:	mov    eax,DWORD PTR [rdi]
  40a94c:	mov    rcx,QWORD PTR [rbx+0x20]
  40a950:	test   eax,eax
  40a952:	jne    0x40a990
  40a954:	mov    eax,DWORD PTR [rcx-0x8]
  40a957:	lea    edx,[rax-0x1]
  40a95a:	mov    DWORD PTR [rcx-0x8],edx
  40a95d:	test   eax,eax
  40a95f:	jle    0x40a9a0
  40a961:	mov    rcx,rbx
  40a964:	call   0x408060
  40a969:	mov    rax,rsi
  40a96c:	add    rsp,0x48
  40a970:	pop    rbx
  40a971:	pop    rsi
  40a972:	pop    rdi
  40a973:	pop    rbp
  40a974:	pop    r12
  40a976:	pop    r13
  40a978:	ret    
  40a979:	nop    DWORD PTR [rax+0x0]
  40a980:	mov    eax,0xffffffff
  40a985:	lock xadd DWORD PTR [rbp-0x8],eax
  40a98a:	jmp    0x40a946
  40a98c:	nop    DWORD PTR [rax+0x0]
  40a990:	mov    eax,0xffffffff
  40a995:	lock xadd DWORD PTR [rcx-0x8],eax
  40a99a:	jmp    0x40a95d
  40a99c:	nop    DWORD PTR [rax+0x0]
  40a9a0:	sub    rcx,0x18
  40a9a4:	mov    rdx,r12
  40a9a7:	call   0x408190
  40a9ac:	jmp    0x40a961
  40a9ae:	xchg   ax,ax
  40a9b0:	lea    rcx,[rbp-0x18]
  40a9b4:	mov    rdx,r12
  40a9b7:	call   0x408190
  40a9bc:	jmp    0x40a94a
  40a9be:	mov    rsi,rax
  40a9c1:	mov    rax,QWORD PTR [rbx+0x20]
  40a9c5:	lea    rdx,[rsp+0x3e]
  40a9ca:	lea    rcx,[rax-0x18]
  40a9ce:	call   0x408188
  40a9d3:	mov    rax,rsi
  40a9d6:	mov    rcx,rax
  40a9d9:	call   0x408050
  40a9de:	mov    rcx,rbx
  40a9e1:	call   0x408060
  40a9e6:	call   0x408028
  40a9eb:	jmp    0x40a9d6
  40a9ed:	mov    rbx,rax
  40a9f0:	call   0x408048
  40a9f5:	mov    rcx,rbx
  40a9f8:	call   0x409730
  40a9fd:	nop
  40a9fe:	nop
  40a9ff:	nop
  40aa00:	push   r15
  40aa02:	push   r14
  40aa04:	push   r13
  40aa06:	push   r12
  40aa08:	push   rbp
  40aa09:	push   rdi
  40aa0a:	push   rsi
  40aa0b:	push   rbx
  40aa0c:	sub    rsp,0x28
  40aa10:	mov    rsi,QWORD PTR [rdx+0x10]
  40aa14:	mov    r12,rcx
  40aa17:	mov    r13,rdx
  40aa1a:	mov    QWORD PTR [rsp+0x80],r8
  40aa22:	test   rsi,rsi
  40aa25:	je     0x40ab03
  40aa2b:	mov    rax,QWORD PTR [rsp+0x80]
  40aa33:	mov    rbp,QWORD PTR [rax]
  40aa36:	mov    r14,QWORD PTR [rbp-0x18]
  40aa3a:	jmp    0x40aa61
  40aa3c:	nop    DWORD PTR [rax+0x0]
  40aa40:	cmp    r9,0xffffffff80000000
  40aa47:	jl     0x40aa50
  40aa49:	mov    eax,r9d
  40aa4c:	test   eax,eax
  40aa4e:	jns    0x40aa94
  40aa50:	mov    rax,QWORD PTR [rsi+0x10]
  40aa54:	mov    edx,0x1
  40aa59:	test   rax,rax
  40aa5c:	je     0x40aa9f
  40aa5e:	mov    rsi,rax
  40aa61:	mov    r15,QWORD PTR [rsi+0x20]
  40aa65:	mov    rdi,r14
  40aa68:	mov    rcx,rbp
  40aa6b:	mov    rbx,QWORD PTR [r15-0x18]
  40aa6f:	mov    rdx,r15
  40aa72:	cmp    rbx,r14
  40aa75:	cmovbe rdi,rbx
  40aa79:	mov    r8,rdi
  40aa7c:	call   0x40a038
  40aa81:	test   eax,eax
  40aa83:	jne    0x40aa4c
  40aa85:	mov    r9,r14
  40aa88:	sub    r9,rbx
  40aa8b:	cmp    r9,0x7fffffff
  40aa92:	jle    0x40aa40
  40aa94:	mov    rax,QWORD PTR [rsi+0x18]
  40aa98:	xor    edx,edx
  40aa9a:	test   rax,rax
  40aa9d:	jne    0x40aa5e
  40aa9f:	test   dl,dl
  40aaa1:	mov    r8,rdi
  40aaa4:	mov    rdi,rsi
  40aaa7:	jne    0x40ab10
  40aaa9:	mov    rdx,rbp
  40aaac:	mov    rcx,r15
  40aaaf:	call   0x40a038
  40aab4:	test   eax,eax
  40aab6:	jne    0x40aaf0
  40aab8:	sub    rbx,r14
  40aabb:	cmp    rbx,0x7fffffff
  40aac2:	jle    0x40aae5
  40aac4:	mov    QWORD PTR [r12],rsi
  40aac8:	mov    QWORD PTR [r12+0x8],0x0
  40aad1:	mov    rax,r12
  40aad4:	add    rsp,0x28
  40aad8:	pop    rbx
  40aad9:	pop    rsi
  40aada:	pop    rdi
  40aadb:	pop    rbp
  40aadc:	pop    r12
  40aade:	pop    r13
  40aae0:	pop    r14
  40aae2:	pop    r15
  40aae4:	ret    
  40aae5:	cmp    rbx,0xffffffff80000000
  40aaec:	jl     0x40aaf4
  40aaee:	mov    eax,ebx
  40aaf0:	test   eax,eax
  40aaf2:	jns    0x40aac4
  40aaf4:	mov    QWORD PTR [r12],0x0
  40aafc:	mov    QWORD PTR [r12+0x8],rdi
  40ab01:	jmp    0x40aad1
  40ab03:	lea    rsi,[rdx+0x8]
  40ab07:	nop    WORD PTR [rax+rax*1+0x0]
  40ab10:	cmp    QWORD PTR [r13+0x18],rsi
  40ab14:	je     0x40ab4a
  40ab16:	mov    rcx,rsi
  40ab19:	mov    rdi,rsi
  40ab1c:	call   0x408098
  40ab21:	mov    rcx,QWORD PTR [rsp+0x80]
  40ab29:	mov    r15,QWORD PTR [rax+0x20]
  40ab2d:	mov    rsi,rax
  40ab30:	mov    rbp,QWORD PTR [rcx]
  40ab33:	mov    rbx,QWORD PTR [r15-0x18]
  40ab37:	mov    r14,QWORD PTR [rbp-0x18]
  40ab3b:	cmp    rbx,r14
  40ab3e:	mov    r8,r14
  40ab41:	cmovbe r8,rbx
  40ab45:	jmp    0x40aaa9
  40ab4a:	mov    QWORD PTR [r12],0x0
  40ab52:	mov    QWORD PTR [r12+0x8],rsi
  40ab57:	jmp    0x40aad1
  40ab5c:	nop
  40ab5d:	nop
  40ab5e:	nop
  40ab5f:	nop
  40ab60:	push   r15
  40ab62:	push   r14
  40ab64:	push   r13
  40ab66:	push   r12
  40ab68:	push   rbp
  40ab69:	push   rdi
  40ab6a:	push   rsi
  40ab6b:	push   rbx
  40ab6c:	sub    rsp,0x38
  40ab70:	lea    rax,[rdx+0x8]
  40ab74:	mov    rbp,rcx
  40ab77:	mov    r12,rdx
  40ab7a:	mov    rdi,r8
  40ab7d:	mov    r13,r9
  40ab80:	cmp    r8,rax
  40ab83:	je     0x40aca0
  40ab89:	mov    r14,QWORD PTR [r9]
  40ab8c:	mov    r15,QWORD PTR [r8+0x20]
  40ab90:	mov    rbx,QWORD PTR [r14-0x18]
  40ab94:	mov    rsi,QWORD PTR [r15-0x18]
  40ab98:	mov    rdx,r15
  40ab9b:	mov    rcx,r14
  40ab9e:	cmp    rsi,rbx
  40aba1:	mov    r9,rbx
  40aba4:	cmovbe r9,rsi
  40aba8:	mov    r8,r9
  40abab:	mov    QWORD PTR [rsp+0x28],r9
  40abb0:	call   0x40a038
  40abb5:	test   eax,eax
  40abb7:	mov    r9,QWORD PTR [rsp+0x28]
  40abbc:	jne    0x40ac91
  40abc2:	mov    rax,rbx
  40abc5:	sub    rax,rsi
  40abc8:	cmp    rax,0x7fffffff
  40abce:	jle    0x40ac25
  40abd0:	mov    r8,r9
  40abd3:	mov    rdx,r14
  40abd6:	mov    rcx,r15
  40abd9:	call   0x40a038
  40abde:	test   eax,eax
  40abe0:	jne    0x40abfd
  40abe2:	sub    rsi,rbx
  40abe5:	cmp    rsi,0x7fffffff
  40abec:	jg     0x40ac05
  40abee:	cmp    rsi,0xffffffff80000000
  40abf5:	jl     0x40ad03
  40abfb:	mov    eax,esi
  40abfd:	test   eax,eax
  40abff:	js     0x40ad03
  40ac05:	mov    QWORD PTR [rbp+0x0],rdi
  40ac09:	mov    QWORD PTR [rbp+0x8],0x0
  40ac11:	mov    rax,rbp
  40ac14:	add    rsp,0x38
  40ac18:	pop    rbx
  40ac19:	pop    rsi
  40ac1a:	pop    rdi
  40ac1b:	pop    rbp
  40ac1c:	pop    r12
  40ac1e:	pop    r13
  40ac20:	pop    r14
  40ac22:	pop    r15
  40ac24:	ret    
  40ac25:	cmp    rax,0xffffffff80000000
  40ac2b:	jge    0x40ac91
  40ac2d:	cmp    QWORD PTR [r12+0x18],rdi
  40ac32:	je     0x40ac87
  40ac34:	mov    rcx,rdi
  40ac37:	call   0x408098
  40ac3c:	mov    rcx,QWORD PTR [rax+0x20]
  40ac40:	mov    r8,rbx
  40ac43:	mov    rdx,r14
  40ac46:	mov    r15,rax
  40ac49:	mov    rsi,QWORD PTR [rcx-0x18]
  40ac4d:	cmp    rsi,rbx
  40ac50:	cmovbe r8,rsi
  40ac54:	call   0x40a038
  40ac59:	test   eax,eax
  40ac5b:	jne    0x40ac78
  40ac5d:	sub    rsi,rbx
  40ac60:	cmp    rsi,0x7fffffff
  40ac67:	jg     0x40acf0
  40ac6d:	cmp    rsi,0xffffffff80000000
  40ac74:	jl     0x40ac7c
  40ac76:	mov    eax,esi
  40ac78:	test   eax,eax
  40ac7a:	jns    0x40acf0
  40ac7c:	cmp    QWORD PTR [r15+0x18],0x0
  40ac81:	je     0x40ad73
  40ac87:	mov    QWORD PTR [rbp+0x0],rdi
  40ac8b:	mov    QWORD PTR [rbp+0x8],rdi
  40ac8f:	jmp    0x40ac11
  40ac91:	test   eax,eax
  40ac93:	jns    0x40abd0
  40ac99:	jmp    0x40ac2d
  40ac9b:	nop    DWORD PTR [rax+rax*1+0x0]
  40aca0:	cmp    QWORD PTR [rdx+0x28],0x0
  40aca5:	je     0x40acf0
  40aca7:	mov    rdi,QWORD PTR [rdx+0x20]
  40acab:	mov    rdx,QWORD PTR [r9]
  40acae:	mov    rcx,QWORD PTR [rdi+0x20]
  40acb2:	mov    rsi,QWORD PTR [rdx-0x18]
  40acb6:	mov    rbx,QWORD PTR [rcx-0x18]
  40acba:	cmp    rsi,rbx
  40acbd:	mov    r8,rbx
  40acc0:	cmovbe r8,rsi
  40acc4:	call   0x40a038
  40acc9:	test   eax,eax
  40accb:	jne    0x40ace8
  40accd:	sub    rbx,rsi
  40acd0:	cmp    rbx,0x7fffffff
  40acd7:	jg     0x40acf0
  40acd9:	cmp    rbx,0xffffffff80000000
  40ace0:	jl     0x40ad62
  40ace6:	mov    eax,ebx
  40ace8:	test   eax,eax
  40acea:	js     0x40ad62
  40acec:	nop    DWORD PTR [rax+0x0]
  40acf0:	mov    r8,r13
  40acf3:	mov    rdx,r12
  40acf6:	mov    rcx,rbp
  40acf9:	call   0x40aa00
  40acfe:	jmp    0x40ac11
  40ad03:	cmp    QWORD PTR [r12+0x20],rdi
  40ad08:	je     0x40ad62
  40ad0a:	mov    rcx,rdi
  40ad0d:	call   0x408090
  40ad12:	mov    rdx,QWORD PTR [rax+0x20]
  40ad16:	mov    r8,rbx
  40ad19:	mov    rcx,r14
  40ad1c:	mov    r15,rax
  40ad1f:	mov    rsi,QWORD PTR [rdx-0x18]
  40ad23:	cmp    rsi,rbx
  40ad26:	cmovbe r8,rsi
  40ad2a:	call   0x40a038
  40ad2f:	test   eax,eax
  40ad31:	jne    0x40ad4a
  40ad33:	sub    rbx,rsi
  40ad36:	cmp    rbx,0x7fffffff
  40ad3d:	jg     0x40acf0
  40ad3f:	cmp    rbx,0xffffffff80000000
  40ad46:	jl     0x40ad4e
  40ad48:	mov    eax,ebx
  40ad4a:	test   eax,eax
  40ad4c:	jns    0x40acf0
  40ad4e:	cmp    QWORD PTR [rdi+0x18],0x0
  40ad53:	je     0x40ad62
  40ad55:	mov    QWORD PTR [rbp+0x0],r15
  40ad59:	mov    QWORD PTR [rbp+0x8],r15
  40ad5d:	jmp    0x40ac11
  40ad62:	mov    QWORD PTR [rbp+0x0],0x0
  40ad6a:	mov    QWORD PTR [rbp+0x8],rdi
  40ad6e:	jmp    0x40ac11
  40ad73:	mov    QWORD PTR [rbp+0x0],0x0
  40ad7b:	mov    QWORD PTR [rbp+0x8],r15
  40ad7f:	jmp    0x40ac11
  40ad84:	nop
  40ad85:	nop
  40ad86:	nop
  40ad87:	nop
  40ad88:	nop
  40ad89:	nop
  40ad8a:	nop
  40ad8b:	nop
  40ad8c:	nop
  40ad8d:	nop
  40ad8e:	nop
  40ad8f:	nop
  40ad90:	push   r12
  40ad92:	push   rbp
  40ad93:	push   rdi
  40ad94:	push   rsi
  40ad95:	push   rbx
  40ad96:	sub    rsp,0x30
  40ad9a:	mov    rsi,QWORD PTR [rip+0xe23f]        # 0x418fe0
  40ada1:	test   rdx,rdx
  40ada4:	mov    rbp,rcx
  40ada7:	mov    rbx,rdx
  40adaa:	lea    r12,[rsp+0x2f]
  40adaf:	jne    0x40adf4
  40adb1:	jmp    0x40ae60
  40adb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40adc0:	mov    eax,DWORD PTR [rcx-0x8]
  40adc3:	lea    edx,[rax-0x1]
  40adc6:	test   eax,eax
  40adc8:	mov    DWORD PTR [rcx-0x8],edx
  40adcb:	jle    0x40ae1c
  40adcd:	mov    eax,DWORD PTR [rsi]
  40adcf:	mov    rcx,QWORD PTR [rbx+0x20]
  40add3:	test   eax,eax
  40add5:	jne    0x40ae32
  40add7:	mov    eax,DWORD PTR [rcx-0x8]
  40adda:	lea    edx,[rax-0x1]
  40addd:	test   eax,eax
  40addf:	mov    DWORD PTR [rcx-0x8],edx
  40ade2:	jle    0x40ae40
  40ade4:	mov    rcx,rbx
  40ade7:	mov    rbx,rdi
  40adea:	call   0x408060
  40adef:	test   rdi,rdi
  40adf2:	je     0x40ae60
  40adf4:	mov    rdx,QWORD PTR [rbx+0x18]
  40adf8:	mov    rcx,rbp
  40adfb:	call   0x40ad90
  40ae00:	mov    edx,DWORD PTR [rsi]
  40ae02:	mov    rdi,QWORD PTR [rbx+0x10]
  40ae06:	mov    rcx,QWORD PTR [rbx+0x28]
  40ae0a:	test   edx,edx
  40ae0c:	je     0x40adc0
  40ae0e:	mov    eax,0xffffffff
  40ae13:	lock xadd DWORD PTR [rcx-0x8],eax
  40ae18:	test   eax,eax
  40ae1a:	jg     0x40adcd
  40ae1c:	sub    rcx,0x18
  40ae20:	mov    rdx,r12
  40ae23:	call   0x408190
  40ae28:	mov    eax,DWORD PTR [rsi]
  40ae2a:	mov    rcx,QWORD PTR [rbx+0x20]
  40ae2e:	test   eax,eax
  40ae30:	je     0x40add7
  40ae32:	mov    eax,0xffffffff
  40ae37:	lock xadd DWORD PTR [rcx-0x8],eax
  40ae3c:	test   eax,eax
  40ae3e:	jg     0x40ade4
  40ae40:	sub    rcx,0x18
  40ae44:	mov    rdx,r12
  40ae47:	call   0x408190
  40ae4c:	mov    rcx,rbx
  40ae4f:	mov    rbx,rdi
  40ae52:	call   0x408060
  40ae57:	test   rdi,rdi
  40ae5a:	jne    0x40adf4
  40ae5c:	nop    DWORD PTR [rax+0x0]
  40ae60:	add    rsp,0x30
  40ae64:	pop    rbx
  40ae65:	pop    rsi
  40ae66:	pop    rdi
  40ae67:	pop    rbp
  40ae68:	pop    r12
  40ae6a:	ret    
  40ae6b:	nop
  40ae6c:	nop
  40ae6d:	nop
  40ae6e:	nop
  40ae6f:	nop
  40ae70:	sub    rsp,0x28
  40ae74:	mov    rcx,QWORD PTR [rcx]
  40ae77:	mov    rdx,QWORD PTR [rdx]
  40ae7a:	xor    eax,eax
  40ae7c:	mov    r8,QWORD PTR [rcx-0x18]
  40ae80:	cmp    r8,QWORD PTR [rdx-0x18]
  40ae84:	je     0x40ae90
  40ae86:	add    rsp,0x28
  40ae8a:	ret    
  40ae8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ae90:	call   0x40a038
  40ae95:	test   eax,eax
  40ae97:	sete   al
  40ae9a:	add    rsp,0x28
  40ae9e:	ret    
  40ae9f:	nop
  40aea0:	push   rdi
  40aea1:	push   rsi
  40aea2:	push   rbx
  40aea3:	sub    rsp,0x30
  40aea7:	mov    rbx,rcx
  40aeaa:	mov    rdi,rdx
  40aead:	mov    rsi,r8
  40aeb0:	mov    rcx,r8
  40aeb3:	call   0x409fe8
  40aeb8:	mov    rdx,rsi
  40aebb:	mov    rcx,rdi
  40aebe:	mov    r8,rax
  40aec1:	call   0x408170
  40aec6:	mov    rsi,rax
  40aec9:	mov    rax,QWORD PTR [rax]
  40aecc:	lea    r8,[rsp+0x2f]
  40aed1:	xor    edx,edx
  40aed3:	xor    ecx,ecx
  40aed5:	mov    QWORD PTR [rbx],rax
  40aed8:	call   0x4081a0
  40aedd:	mov    QWORD PTR [rsi],rax
  40aee0:	mov    rax,rbx
  40aee3:	add    rsp,0x30
  40aee7:	pop    rbx
  40aee8:	pop    rsi
  40aee9:	pop    rdi
  40aeea:	ret    
  40aeeb:	nop
  40aeec:	nop
  40aeed:	nop
  40aeee:	nop
  40aeef:	nop
  40aef0:	push   rsi
  40aef1:	push   rbx
  40aef2:	sub    rsp,0x38
  40aef6:	mov    rbx,rcx
  40aef9:	mov    rcx,rdx
  40aefc:	mov    rdx,r8
  40aeff:	call   0x408168
  40af04:	mov    rsi,rax
  40af07:	mov    rax,QWORD PTR [rax]
  40af0a:	lea    r8,[rsp+0x2f]
  40af0f:	xor    edx,edx
  40af11:	xor    ecx,ecx
  40af13:	mov    QWORD PTR [rbx],rax
  40af16:	call   0x4081a0
  40af1b:	mov    QWORD PTR [rsi],rax
  40af1e:	mov    rax,rbx
  40af21:	add    rsp,0x38
  40af25:	pop    rbx
  40af26:	pop    rsi
  40af27:	ret    
  40af28:	nop
  40af29:	nop
  40af2a:	nop
  40af2b:	nop
  40af2c:	nop
  40af2d:	nop
  40af2e:	nop
  40af2f:	nop
  40af30:	push   rdi
  40af31:	push   rsi
  40af32:	push   rbx
  40af33:	sub    rsp,0x30
  40af37:	mov    rbx,rcx
  40af3a:	mov    rsi,rdx
  40af3d:	mov    rdi,r8
  40af40:	mov    rcx,rdx
  40af43:	call   0x409fe8
  40af48:	mov    r8,rsi
  40af4b:	mov    r9,rax
  40af4e:	xor    edx,edx
  40af50:	mov    rcx,rdi
  40af53:	call   0x408150
  40af58:	mov    rsi,rax
  40af5b:	mov    rax,QWORD PTR [rax]
  40af5e:	lea    r8,[rsp+0x2f]
  40af63:	xor    edx,edx
  40af65:	xor    ecx,ecx
  40af67:	mov    QWORD PTR [rbx],rax
  40af6a:	call   0x4081a0
  40af6f:	mov    QWORD PTR [rsi],rax
  40af72:	mov    rax,rbx
  40af75:	add    rsp,0x30
  40af79:	pop    rbx
  40af7a:	pop    rsi
  40af7b:	pop    rdi
  40af7c:	ret    
  40af7d:	nop
  40af7e:	nop
  40af7f:	nop
  40af80:	push   r12
  40af82:	push   rbp
  40af83:	push   rdi
  40af84:	push   rsi
  40af85:	push   rbx
  40af86:	sub    rsp,0x30
  40af8a:	lea    r12,[rsp+0x2f]
  40af8f:	mov    rbx,rcx
  40af92:	mov    rcx,rdx
  40af95:	mov    rsi,r8
  40af98:	mov    rdi,rdx
  40af9b:	call   0x409fe8
  40afa0:	xor    edx,edx
  40afa2:	xor    ecx,ecx
  40afa4:	mov    r8,r12
  40afa7:	mov    rbp,rax
  40afaa:	call   0x4081a0
  40afaf:	mov    QWORD PTR [rbx],rax
  40afb2:	mov    rax,QWORD PTR [rsi]
  40afb5:	mov    rdx,rbp
  40afb8:	mov    rcx,rbx
  40afbb:	add    rdx,QWORD PTR [rax-0x18]
  40afbf:	call   0x408140
  40afc4:	mov    r8,rbp
  40afc7:	mov    rdx,rdi
  40afca:	mov    rcx,rbx
  40afcd:	call   0x408170
  40afd2:	mov    rdx,rsi
  40afd5:	mov    rcx,rbx
  40afd8:	call   0x408168
  40afdd:	mov    rax,rbx
  40afe0:	add    rsp,0x30
  40afe4:	pop    rbx
  40afe5:	pop    rsi
  40afe6:	pop    rdi
  40afe7:	pop    rbp
  40afe8:	pop    r12
  40afea:	ret    
  40afeb:	mov    rdx,QWORD PTR [rbx]
  40afee:	mov    rsi,rax
  40aff1:	lea    rcx,[rdx-0x18]
  40aff5:	mov    rdx,r12
  40aff8:	call   0x408188
  40affd:	mov    rcx,rsi
  40b000:	call   0x409730
  40b005:	nop
  40b006:	nop
  40b007:	nop
  40b008:	nop
  40b009:	nop
  40b00a:	nop
  40b00b:	nop
  40b00c:	nop
  40b00d:	nop
  40b00e:	nop
  40b00f:	nop
  40b010:	push   rsi
  40b011:	push   rbx
  40b012:	sub    rsp,0x38
  40b016:	mov    rsi,r8
  40b019:	mov    rbx,rcx
  40b01c:	call   0x408128
  40b021:	mov    rcx,rsi
  40b024:	call   0x409fe8
  40b029:	mov    rdx,rsi
  40b02c:	mov    r8,rax
  40b02f:	mov    rcx,rbx
  40b032:	call   0x408170
  40b037:	mov    rax,rbx
  40b03a:	add    rsp,0x38
  40b03e:	pop    rbx
  40b03f:	pop    rsi
  40b040:	ret    
  40b041:	mov    rcx,QWORD PTR [rbx]
  40b044:	lea    rdx,[rsp+0x2f]
  40b049:	mov    rsi,rax
  40b04c:	sub    rcx,0x18
  40b050:	call   0x408188
  40b055:	mov    rcx,rsi
  40b058:	call   0x409730
  40b05d:	nop
  40b05e:	nop
  40b05f:	nop
  40b060:	push   r15
  40b062:	push   r14
  40b064:	mov    eax,0x11d8
  40b069:	push   r13
  40b06b:	push   r12
  40b06d:	push   rbp
  40b06e:	push   rdi
  40b06f:	push   rsi
  40b070:	push   rbx
  40b071:	call   0x409740
  40b076:	sub    rsp,rax
  40b079:	lea    r14,[rsp+0xff0]
  40b081:	mov    DWORD PTR [rsp+0x1220],ecx
  40b088:	mov    rdi,rdx
  40b08b:	call   0x408380
  40b090:	call   0x4021e0
  40b095:	mov    r8,r14
  40b098:	xor    edx,edx
  40b09a:	xor    ecx,ecx
  40b09c:	call   0x4081a0
  40b0a1:	lea    r8,[rsp+0x100]
  40b0a9:	xor    edx,edx
  40b0ab:	xor    ecx,ecx
  40b0ad:	mov    QWORD PTR [rsp+0x150],rax
  40b0b5:	call   0x4081a0
  40b0ba:	mov    QWORD PTR [rsp+0x160],rax
  40b0c2:	lea    rax,[rsp+0xfc0]
  40b0ca:	lea    rdx,[rip+0xaf2f]        # 0x416000
  40b0d1:	mov    r8,r14
  40b0d4:	mov    QWORD PTR [rsp+0x50],rax
  40b0d9:	mov    QWORD PTR [rsp+0xfc0],rax
  40b0e1:	mov    QWORD PTR [rsp+0xfc8],rax
  40b0e9:	lea    rax,[rsp+0xfd0]
  40b0f1:	mov    QWORD PTR [rsp+0x88],rax
  40b0f9:	mov    QWORD PTR [rsp+0xfd0],rax
  40b101:	mov    QWORD PTR [rsp+0xfd8],rax
  40b109:	lea    rax,[rsp+0xfe0]
  40b111:	mov    QWORD PTR [rsp+0xa0],rax
  40b119:	mov    QWORD PTR [rsp+0xfe0],rax
  40b121:	mov    QWORD PTR [rsp+0xfe8],rax
  40b129:	lea    rax,[rsp+0x170]
  40b131:	mov    rcx,rax
  40b134:	mov    QWORD PTR [rsp+0x68],rax
  40b139:	call   0x408138
  40b13e:	lea    rax,[rsp+0x180]
  40b146:	lea    rdx,[rip+0xaeb3]        # 0x416000
  40b14d:	mov    r8,r14
  40b150:	mov    rcx,rax
  40b153:	mov    QWORD PTR [rsp+0xc8],rax
  40b15b:	call   0x408138
  40b160:	lea    rax,[rsp+0x190]
  40b168:	lea    rdx,[rip+0xae91]        # 0x416000
  40b16f:	mov    r8,r14
  40b172:	mov    rcx,rax
  40b175:	mov    QWORD PTR [rsp+0xa8],rax
  40b17d:	call   0x408138
  40b182:	lea    rax,[rsp+0x1a0]
  40b18a:	lea    rdx,[rip+0xae6f]        # 0x416000
  40b191:	mov    r8,r14
  40b194:	mov    rcx,rax
  40b197:	mov    QWORD PTR [rsp+0xc0],rax
  40b19f:	call   0x408138
  40b1a4:	lea    rax,[rsp+0x1b0]
  40b1ac:	lea    rdx,[rip+0xae4d]        # 0x416000
  40b1b3:	mov    r8,r14
  40b1b6:	mov    rcx,rax
  40b1b9:	mov    QWORD PTR [rsp+0x58],rax
  40b1be:	call   0x408138
  40b1c3:	lea    rax,[rsp+0x1c0]
  40b1cb:	lea    rdx,[rip+0xae2e]        # 0x416000
  40b1d2:	mov    r8,r14
  40b1d5:	mov    rcx,rax
  40b1d8:	mov    QWORD PTR [rsp+0x60],rax
  40b1dd:	call   0x408138
  40b1e2:	lea    rax,[rsp+0x1d0]
  40b1ea:	lea    rdx,[rip+0xae0f]        # 0x416000
  40b1f1:	mov    r8,r14
  40b1f4:	mov    rcx,rax
  40b1f7:	mov    QWORD PTR [rsp+0xd8],rax
  40b1ff:	call   0x408138
  40b204:	lea    rax,[rsp+0x1e0]
  40b20c:	lea    rdx,[rip+0xaded]        # 0x416000
  40b213:	mov    r8,r14
  40b216:	mov    rcx,rax
  40b219:	mov    QWORD PTR [rsp+0x70],rax
  40b21e:	call   0x408138
  40b223:	lea    rax,[rsp+0xfb0]
  40b22b:	lea    rdx,[rip+0xc4eb]        # 0x41771d
  40b232:	mov    r8,rax
  40b235:	mov    QWORD PTR [rsp+0x30],rax
  40b23a:	lea    rax,[rsp+0x1f0]
  40b242:	mov    rcx,rax
  40b245:	mov    rbx,rax
  40b248:	mov    QWORD PTR [rsp+0xe8],rax
  40b250:	call   0x408138
  40b255:	mov    rcx,rbx
  40b258:	call   0x401d30
  40b25d:	mov    BYTE PTR [rsp+0xe7],al
  40b264:	mov    rax,QWORD PTR [rsp+0x1f0]
  40b26c:	mov    rdx,r14
  40b26f:	lea    rcx,[rax-0x18]
  40b273:	call   0x408188
  40b278:	lea    rax,[rsp+0x200]
  40b280:	lea    rdx,[rip+0xc49c]        # 0x417723
  40b287:	mov    r8,r14
  40b28a:	mov    rcx,rax
  40b28d:	mov    QWORD PTR [rsp+0xd0],rax
  40b295:	call   0x408138
  40b29a:	cmp    DWORD PTR [rsp+0x1220],0x1
  40b2a2:	je     0x410c38
  40b2a8:	cmp    DWORD PTR [rsp+0x1220],0x2
  40b2b0:	je     0x40ed45
  40b2b6:	cmp    DWORD PTR [rsp+0x1220],0x1
  40b2be:	jle    0x411620
  40b2c4:	lea    rax,[rsp+0x210]
  40b2cc:	mov    ebx,0x1
  40b2d1:	mov    BYTE PTR [rsp+0x78],0x0
  40b2d6:	mov    BYTE PTR [rsp+0xe5],0x0
  40b2de:	mov    BYTE PTR [rsp+0xe4],0x0
  40b2e6:	lea    r15,[rsp+0xfa0]
  40b2ee:	mov    QWORD PTR [rsp+0x38],rax
  40b2f3:	lea    rax,[rsp+0xf90]
  40b2fb:	mov    BYTE PTR [rsp+0x98],0x1
  40b303:	mov    BYTE PTR [rsp+0xe6],0x0
  40b30b:	mov    rsi,QWORD PTR [rip+0xdcce]        # 0x418fe0
  40b312:	mov    QWORD PTR [rsp+0x40],rax
  40b317:	lea    rax,[rsp+0x220]
  40b31f:	mov    QWORD PTR [rsp+0x48],rax
  40b324:	lea    rax,[rsp+0xf6]
  40b32c:	mov    QWORD PTR [rsp+0x80],rax
  40b334:	jmp    0x40b3ee
  40b339:	nop    DWORD PTR [rax+0x0]
  40b340:	lea    rbp,[rsp+0x150]
  40b348:	mov    rdx,r14
  40b34b:	mov    rcx,rbp
  40b34e:	call   0x408158
  40b353:	mov    ecx,0x18
  40b358:	call   0x408058
  40b35d:	lea    rcx,[rax+0x10]
  40b361:	mov    QWORD PTR [rax],0x0
  40b368:	mov    QWORD PTR [rax+0x8],0x0
  40b370:	mov    rdx,rbp
  40b373:	mov    r12,rax
  40b376:	call   0x408128
  40b37b:	mov    rdx,QWORD PTR [rsp+0x50]
  40b380:	mov    rcx,r12
  40b383:	call   0x4080e0
  40b388:	mov    rax,QWORD PTR [rsp+0x150]
  40b390:	cmp    QWORD PTR [rax-0x18],0x0
  40b395:	je     0x40b3bb
  40b397:	mov    rax,QWORD PTR [rsp+0x190]
  40b39f:	cmp    QWORD PTR [rax-0x18],0x0
  40b3a4:	jne    0x40b3bb
  40b3a6:	mov    rcx,QWORD PTR [rsp+0xa8]
  40b3ae:	lea    rdx,[rsp+0x150]
  40b3b6:	call   0x408158
  40b3bb:	mov    eax,DWORD PTR [rsi]
  40b3bd:	mov    rcx,QWORD PTR [rsp+0xff0]
  40b3c5:	test   eax,eax
  40b3c7:	jne    0x40b730
  40b3cd:	mov    eax,DWORD PTR [rcx-0x8]
  40b3d0:	lea    edx,[rax-0x1]
  40b3d3:	test   eax,eax
  40b3d5:	mov    DWORD PTR [rcx-0x8],edx
  40b3d8:	jle    0x40b742
  40b3de:	add    ebx,0x1
  40b3e1:	cmp    DWORD PTR [rsp+0x1220],ebx
  40b3e8:	jle    0x40b760
  40b3ee:	movsxd rax,ebx
  40b3f1:	mov    r8,QWORD PTR [rsp+0x30]
  40b3f6:	mov    rcx,r14
  40b3f9:	mov    rdx,QWORD PTR [rdi+rax*8]
  40b3fd:	lea    rbp,[rax*8+0x0]
  40b405:	call   0x408138
  40b40a:	mov    rcx,QWORD PTR [rsp+0x38]
  40b40f:	lea    rdx,[rip+0xc328]        # 0x41773e
  40b416:	mov    r8,r15
  40b419:	call   0x408138
  40b41e:	mov    rdx,QWORD PTR [rsp+0x210]
  40b426:	mov    rax,QWORD PTR [rsp+0xff0]
  40b42e:	xor    r8d,r8d
  40b431:	mov    r9,QWORD PTR [rdx-0x18]
  40b435:	cmp    QWORD PTR [rax-0x18],r9
  40b439:	jb     0x40b469
  40b43b:	mov    r8,0xffffffffffffffff
  40b442:	mov    rcx,r14
  40b445:	call   0x4081e0
  40b44a:	mov    rdx,QWORD PTR [rsp+0x210]
  40b452:	mov    rcx,QWORD PTR [rsp+0xff0]
  40b45a:	mov    rcx,QWORD PTR [rcx-0x18]
  40b45e:	sub    rcx,QWORD PTR [rdx-0x18]
  40b462:	cmp    rax,rcx
  40b465:	sete   r8b
  40b469:	mov    r12d,DWORD PTR [rsi]
  40b46c:	test   r12d,r12d
  40b46f:	jne    0x40d400
  40b475:	mov    ecx,DWORD PTR [rdx-0x8]
  40b478:	lea    eax,[rcx-0x1]
  40b47b:	test   ecx,ecx
  40b47d:	mov    DWORD PTR [rdx-0x8],eax
  40b480:	jle    0x40d412
  40b486:	test   r8b,r8b
  40b489:	jne    0x40b340
  40b48f:	mov    r8,QWORD PTR [rsp+0x40]
  40b494:	mov    rcx,QWORD PTR [rsp+0x48]
  40b499:	lea    rdx,[rip+0xc2a1]        # 0x417741
  40b4a0:	call   0x408138
  40b4a5:	mov    rdx,QWORD PTR [rsp+0x220]
  40b4ad:	mov    rax,QWORD PTR [rsp+0xff0]
  40b4b5:	mov    r9,QWORD PTR [rdx-0x18]
  40b4b9:	cmp    QWORD PTR [rax-0x18],r9
  40b4bd:	jae    0x40d440
  40b4c3:	mov    r8,QWORD PTR [rsp+0x80]
  40b4cb:	lea    rcx,[rsp+0x230]
  40b4d3:	lea    rdx,[rip+0xc58b]        # 0x417a65
  40b4da:	call   0x408138
  40b4df:	mov    rdx,QWORD PTR [rsp+0x230]
  40b4e7:	mov    rax,QWORD PTR [rsp+0xff0]
  40b4ef:	mov    r9,QWORD PTR [rdx-0x18]
  40b4f3:	cmp    QWORD PTR [rax-0x18],r9
  40b4f7:	jae    0x40db2f
  40b4fd:	lea    r12,[rsp+0x240]
  40b505:	lea    r8,[rsp+0xf7]
  40b50d:	lea    rdx,[rip+0xc555]        # 0x417a69
  40b514:	mov    rcx,r12
  40b517:	call   0x408138
  40b51c:	mov    rdx,r12
  40b51f:	mov    rcx,r14
  40b522:	call   0x40a270
  40b527:	test   al,al
  40b529:	mov    r13d,eax
  40b52c:	je     0x40e2f6
  40b532:	xor    r13d,r13d
  40b535:	xor    eax,eax
  40b537:	mov    r9d,0x1
  40b53d:	mov    r12d,0x1
  40b543:	mov    r8d,0x1
  40b549:	test   r13b,r13b
  40b54c:	jne    0x40d4d0
  40b552:	test   al,al
  40b554:	jne    0x40d51f
  40b55a:	test   r8b,r8b
  40b55d:	jne    0x40d580
  40b563:	test   r9b,r9b
  40b566:	jne    0x40d482
  40b56c:	mov    eax,DWORD PTR [rsi]
  40b56e:	mov    rdx,QWORD PTR [rsp+0x220]
  40b576:	test   eax,eax
  40b578:	jne    0x40d4aa
  40b57e:	mov    eax,DWORD PTR [rdx-0x8]
  40b581:	lea    ecx,[rax-0x1]
  40b584:	test   eax,eax
  40b586:	mov    DWORD PTR [rdx-0x8],ecx
  40b589:	jle    0x40d4bc
  40b58f:	test   r12b,r12b
  40b592:	je     0x40b5e4
  40b594:	lea    rbp,[rsp+0x150]
  40b59c:	mov    rdx,r14
  40b59f:	mov    rcx,rbp
  40b5a2:	call   0x408158
  40b5a7:	mov    ecx,0x18
  40b5ac:	call   0x408058
  40b5b1:	lea    rcx,[rax+0x10]
  40b5b5:	mov    QWORD PTR [rax],0x0
  40b5bc:	mov    QWORD PTR [rax+0x8],0x0
  40b5c4:	mov    rdx,rbp
  40b5c7:	mov    r12,rax
  40b5ca:	call   0x408128
  40b5cf:	mov    rdx,QWORD PTR [rsp+0x88]
  40b5d7:	mov    rcx,r12
  40b5da:	call   0x4080e0
  40b5df:	jmp    0x40b388
  40b5e4:	mov    r8,QWORD PTR [rsp+0x40]
  40b5e9:	lea    rcx,[rsp+0x290]
  40b5f1:	lea    rdx,[rip+0xc15f]        # 0x417757
  40b5f8:	call   0x408138
  40b5fd:	mov    rdx,QWORD PTR [rsp+0x290]
  40b605:	mov    rax,QWORD PTR [rsp+0xff0]
  40b60d:	mov    r9,QWORD PTR [rdx-0x18]
  40b611:	cmp    QWORD PTR [rax-0x18],r9
  40b615:	jae    0x40d9c4
  40b61b:	lea    rcx,[rsp+0x2a0]
  40b623:	lea    r8,[rsp+0xfb]
  40b62b:	lea    rdx,[rip+0xc43c]        # 0x417a6e
  40b632:	call   0x408138
  40b637:	mov    rdx,QWORD PTR [rsp+0x2a0]
  40b63f:	mov    rax,QWORD PTR [rsp+0xff0]
  40b647:	mov    r9,QWORD PTR [rdx-0x18]
  40b64b:	cmp    QWORD PTR [rax-0x18],r9
  40b64f:	jae    0x40db88
  40b655:	lea    r12,[rsp+0x2b0]
  40b65d:	lea    r8,[rsp+0xfc]
  40b665:	lea    rdx,[rip+0xc405]        # 0x417a71
  40b66c:	mov    rcx,r12
  40b66f:	call   0x408138
  40b674:	mov    rdx,r12
  40b677:	mov    rcx,r14
  40b67a:	call   0x40a270
  40b67f:	test   al,al
  40b681:	mov    r13d,eax
  40b684:	mov    r12d,eax
  40b687:	je     0x40dcdc
  40b68d:	mov    rax,QWORD PTR [rsp+0x2b0]
  40b695:	mov    rdx,QWORD PTR [rsp+0x30]
  40b69a:	lea    rcx,[rax-0x18]
  40b69e:	call   0x408188
  40b6a3:	test   r12b,r12b
  40b6a6:	jne    0x40da03
  40b6ac:	mov    eax,DWORD PTR [rsi]
  40b6ae:	mov    rdx,QWORD PTR [rsp+0x290]
  40b6b6:	test   eax,eax
  40b6b8:	jne    0x40da2b
  40b6be:	mov    eax,DWORD PTR [rdx-0x8]
  40b6c1:	lea    ecx,[rax-0x1]
  40b6c4:	test   eax,eax
  40b6c6:	mov    DWORD PTR [rdx-0x8],ecx
  40b6c9:	jle    0x40da3d
  40b6cf:	test   r13b,r13b
  40b6d2:	je     0x40d5d0
  40b6d8:	lea    rbp,[rsp+0x150]
  40b6e0:	mov    rdx,r14
  40b6e3:	mov    rcx,rbp
  40b6e6:	call   0x408158
  40b6eb:	mov    ecx,0x18
  40b6f0:	call   0x408058
  40b6f5:	lea    rcx,[rax+0x10]
  40b6f9:	mov    QWORD PTR [rax],0x0
  40b700:	mov    QWORD PTR [rax+0x8],0x0
  40b708:	mov    rdx,rbp
  40b70b:	mov    r12,rax
  40b70e:	call   0x408128
  40b713:	mov    rdx,QWORD PTR [rsp+0xa0]
  40b71b:	mov    rcx,r12
  40b71e:	call   0x4080e0
  40b723:	jmp    0x40b388
  40b728:	nop    DWORD PTR [rax+rax*1+0x0]
  40b730:	mov    eax,0xffffffff
  40b735:	lock xadd DWORD PTR [rcx-0x8],eax
  40b73a:	test   eax,eax
  40b73c:	jg     0x40b3de
  40b742:	mov    rdx,QWORD PTR [rsp+0x30]
  40b747:	sub    rcx,0x18
  40b74b:	add    ebx,0x1
  40b74e:	call   0x408190
  40b753:	cmp    DWORD PTR [rsp+0x1220],ebx
  40b75a:	jg     0x40b3ee
  40b760:	mov    rcx,QWORD PTR [rsp+0xd0]
  40b768:	lea    rdx,[rip+0xc1ca]        # 0x417939
  40b76f:	call   0x4081c8
  40b774:	test   eax,eax
  40b776:	je     0x40dc65
  40b77c:	cmp    BYTE PTR [rsp+0xe4],0x0
  40b784:	je     0x40dbc3
  40b78a:	mov    rax,QWORD PTR [rsp+0x1a0]
  40b792:	cmp    QWORD PTR [rax-0x18],0x0
  40b797:	jne    0x410c61
  40b79d:	cmp    BYTE PTR [rsp+0xe5],0x0
  40b7a5:	je     0x40e40b
  40b7ab:	mov    rax,QWORD PTR [rsp+0xfc0]
  40b7b3:	cmp    rax,QWORD PTR [rsp+0x50]
  40b7b8:	lea    rbx,[rsp+0xf50]
  40b7c0:	mov    QWORD PTR [rsp+0x78],rbx
  40b7c5:	mov    QWORD PTR [rsp+0x68],rax
  40b7ca:	je     0x40c652
  40b7d0:	mov    rax,QWORD PTR [rip+0xd889]        # 0x419060
  40b7d7:	mov    rbp,QWORD PTR [rip+0xd802]        # 0x418fe0
  40b7de:	add    rax,0x10
  40b7e2:	mov    QWORD PTR [rsp+0x80],rax
  40b7ea:	mov    rax,QWORD PTR [rip+0xd84f]        # 0x419040
  40b7f1:	add    rax,0x18
  40b7f5:	mov    QWORD PTR [rsp+0x90],rax
  40b7fd:	nop    DWORD PTR [rax]
  40b800:	mov    rax,QWORD PTR [rsp+0x68]
  40b805:	mov    rdi,QWORD PTR [rsp+0x78]
  40b80a:	lea    rdx,[rax+0x10]
  40b80e:	mov    rcx,rdi
  40b811:	call   0x408128
  40b816:	lea    rbx,[rsp+0x520]
  40b81e:	mov    rdx,rdi
  40b821:	mov    rcx,rbx
  40b824:	call   0x401b40
  40b829:	lea    rdx,[rip+0xc146]        # 0x417976
  40b830:	mov    r8d,0x2
  40b836:	mov    rcx,rbx
  40b839:	call   0x408170
  40b83e:	mov    rbx,rax
  40b841:	mov    rax,QWORD PTR [rax]
  40b844:	lea    r8,[rsp+0x108]
  40b84c:	xor    edx,edx
  40b84e:	xor    ecx,ecx
  40b850:	mov    QWORD PTR [rsp+0x38],rax
  40b855:	call   0x4081a0
  40b85a:	mov    QWORD PTR [rbx],rax
  40b85d:	mov    eax,DWORD PTR [rbp+0x0]
  40b860:	mov    rdx,QWORD PTR [rsp+0x520]
  40b868:	test   eax,eax
  40b86a:	jne    0x40e1fd
  40b870:	mov    eax,DWORD PTR [rdx-0x8]
  40b873:	lea    ecx,[rax-0x1]
  40b876:	test   eax,eax
  40b878:	mov    DWORD PTR [rdx-0x8],ecx
  40b87b:	jle    0x40e20f
  40b881:	lea    r8,[rsp+0x101]
  40b889:	xor    edx,edx
  40b88b:	xor    ecx,ecx
  40b88d:	call   0x4081a0
  40b892:	mov    rcx,QWORD PTR [rsp+0x38]
  40b897:	mov    QWORD PTR [rsp+0xf60],rax
  40b89f:	call   0x4067b0
  40b8a4:	lea    rax,[rsp+0x620]
  40b8ac:	mov    rdx,QWORD PTR [rsp+0x78]
  40b8b1:	mov    rcx,rax
  40b8b4:	mov    QWORD PTR [rsp+0xa8],rax
  40b8bc:	call   0x401f10
  40b8c1:	lea    rax,[rsp+0x5b0]
  40b8c9:	mov    r8,QWORD PTR [rsp+0x30]
  40b8ce:	lea    rdx,[rip+0xbdfd]        # 0x4176d2
  40b8d5:	mov    rcx,rax
  40b8d8:	mov    QWORD PTR [rsp+0x40],rax
  40b8dd:	call   0x408138
  40b8e2:	mov    rdi,QWORD PTR [rip+0x117a7]        # 0x41d090
  40b8e9:	test   rdi,rdi
  40b8ec:	je     0x40df10
  40b8f2:	mov    rsi,QWORD PTR [rsp+0x5b0]
  40b8fa:	lea    r13,[rip+0x11787]        # 0x41d088
  40b901:	mov    rbx,r13
  40b904:	mov    r12,QWORD PTR [rsi-0x18]
  40b908:	jmp    0x40b923
  40b90a:	nop    WORD PTR [rax+rax*1+0x0]
  40b910:	mov    eax,r15d
  40b913:	test   eax,eax
  40b915:	js     0x40b956
  40b917:	mov    rbx,rdi
  40b91a:	mov    rdi,QWORD PTR [rdi+0x10]
  40b91e:	test   rdi,rdi
  40b921:	je     0x40b95f
  40b923:	mov    rcx,QWORD PTR [rdi+0x20]
  40b927:	mov    r8,r12
  40b92a:	mov    rdx,rsi
  40b92d:	mov    r15,QWORD PTR [rcx-0x18]
  40b931:	cmp    r15,r12
  40b934:	cmovbe r8,r15
  40b938:	call   0x40a038
  40b93d:	test   eax,eax
  40b93f:	jne    0x40b913
  40b941:	sub    r15,r12
  40b944:	cmp    r15,0x7fffffff
  40b94b:	jg     0x40b917
  40b94d:	cmp    r15,0xffffffff80000000
  40b954:	jge    0x40b910
  40b956:	mov    rdi,QWORD PTR [rdi+0x18]
  40b95a:	test   rdi,rdi
  40b95d:	jne    0x40b923
  40b95f:	cmp    rbx,r13
  40b962:	je     0x40df20
  40b968:	mov    rdx,QWORD PTR [rbx+0x20]
  40b96c:	mov    r8,r12
  40b96f:	mov    rcx,rsi
  40b972:	mov    r15,QWORD PTR [rdx-0x18]
  40b976:	cmp    r15,r12
  40b979:	cmovbe r8,r15
  40b97d:	call   0x40a038
  40b982:	test   eax,eax
  40b984:	jne    0x40b9a5
  40b986:	mov    r10,r12
  40b989:	sub    r10,r15
  40b98c:	cmp    r10,0x7fffffff
  40b993:	jg     0x40b9ad
  40b995:	cmp    r10,0xffffffff80000000
  40b99c:	jl     0x40df20
  40b9a2:	mov    eax,r10d
  40b9a5:	test   eax,eax
  40b9a7:	js     0x40df20
  40b9ad:	lea    rsi,[rsp+0xf70]
  40b9b5:	mov    rax,rbx
  40b9b8:	add    rax,0x28
  40b9bc:	lea    rdx,[rip+0xa8eb]        # 0x4162ae
  40b9c3:	mov    r8,rsi
  40b9c6:	mov    QWORD PTR [rsp+0x40],rax
  40b9cb:	lea    rax,[rsp+0x580]
  40b9d3:	mov    rcx,rax
  40b9d6:	mov    QWORD PTR [rsp+0x48],rax
  40b9db:	call   0x408138
  40b9e0:	mov    rdi,QWORD PTR [rip+0x116a9]        # 0x41d090
  40b9e7:	test   rdi,rdi
  40b9ea:	je     0x40dec5
  40b9f0:	mov    rsi,QWORD PTR [rsp+0x580]
  40b9f8:	mov    rbx,r13
  40b9fb:	mov    r12,QWORD PTR [rsi-0x18]
  40b9ff:	jmp    0x40ba14
  40ba01:	mov    eax,r15d
  40ba04:	test   eax,eax
  40ba06:	js     0x40ba47
  40ba08:	mov    rbx,rdi
  40ba0b:	mov    rdi,QWORD PTR [rdi+0x10]
  40ba0f:	test   rdi,rdi
  40ba12:	je     0x40ba50
  40ba14:	mov    rcx,QWORD PTR [rdi+0x20]
  40ba18:	mov    r8,r12
  40ba1b:	mov    rdx,rsi
  40ba1e:	mov    r15,QWORD PTR [rcx-0x18]
  40ba22:	cmp    r15,r12
  40ba25:	cmovbe r8,r15
  40ba29:	call   0x40a038
  40ba2e:	test   eax,eax
  40ba30:	jne    0x40ba04
  40ba32:	sub    r15,r12
  40ba35:	cmp    r15,0x7fffffff
  40ba3c:	jg     0x40ba08
  40ba3e:	cmp    r15,0xffffffff80000000
  40ba45:	jge    0x40ba01
  40ba47:	mov    rdi,QWORD PTR [rdi+0x18]
  40ba4b:	test   rdi,rdi
  40ba4e:	jne    0x40ba14
  40ba50:	cmp    rbx,r13
  40ba53:	je     0x40ded0
  40ba59:	mov    rdx,QWORD PTR [rbx+0x20]
  40ba5d:	mov    r8,r12
  40ba60:	mov    rcx,rsi
  40ba63:	mov    r15,QWORD PTR [rdx-0x18]
  40ba67:	cmp    r15,r12
  40ba6a:	cmovbe r8,r15
  40ba6e:	call   0x40a038
  40ba73:	test   eax,eax
  40ba75:	jne    0x40ba96
  40ba77:	mov    r10,r12
  40ba7a:	sub    r10,r15
  40ba7d:	cmp    r10,0x7fffffff
  40ba84:	jg     0x40ba9e
  40ba86:	cmp    r10,0xffffffff80000000
  40ba8d:	jl     0x40ded0
  40ba93:	mov    eax,r10d
  40ba96:	test   eax,eax
  40ba98:	js     0x40ded0
  40ba9e:	lea    rsi,[rsp+0xf80]
  40baa6:	mov    rax,rbx
  40baa9:	add    rax,0x28
  40baad:	lea    rdx,[rip+0xa8bf]        # 0x416373
  40bab4:	mov    r8,rsi
  40bab7:	mov    QWORD PTR [rsp+0x70],rax
  40babc:	lea    rax,[rsp+0x550]
  40bac4:	mov    rcx,rax
  40bac7:	mov    QWORD PTR [rsp+0x48],rax
  40bacc:	call   0x408138
  40bad1:	mov    r12,QWORD PTR [rip+0x115b8]        # 0x41d090
  40bad8:	test   r12,r12
  40badb:	je     0x40de7a
  40bae1:	mov    rsi,QWORD PTR [rsp+0x550]
  40bae9:	mov    rbx,r13
  40baec:	mov    rdi,QWORD PTR [rsi-0x18]
  40baf0:	jmp    0x40bb06
  40baf2:	mov    eax,r15d
  40baf5:	test   eax,eax
  40baf7:	js     0x40bb3a
  40baf9:	mov    rbx,r12
  40bafc:	mov    r12,QWORD PTR [r12+0x10]
  40bb01:	test   r12,r12
  40bb04:	je     0x40bb44
  40bb06:	mov    rcx,QWORD PTR [r12+0x20]
  40bb0b:	mov    r8,rdi
  40bb0e:	mov    rdx,rsi
  40bb11:	mov    r15,QWORD PTR [rcx-0x18]
  40bb15:	cmp    r15,rdi
  40bb18:	cmovbe r8,r15
  40bb1c:	call   0x40a038
  40bb21:	test   eax,eax
  40bb23:	jne    0x40baf5
  40bb25:	sub    r15,rdi
  40bb28:	cmp    r15,0x7fffffff
  40bb2f:	jg     0x40baf9
  40bb31:	cmp    r15,0xffffffff80000000
  40bb38:	jge    0x40baf2
  40bb3a:	mov    r12,QWORD PTR [r12+0x18]
  40bb3f:	test   r12,r12
  40bb42:	jne    0x40bb06
  40bb44:	cmp    rbx,r13
  40bb47:	je     0x40de80
  40bb4d:	mov    rdx,QWORD PTR [rbx+0x20]
  40bb51:	mov    r8,rdi
  40bb54:	mov    rcx,rsi
  40bb57:	mov    r15,QWORD PTR [rdx-0x18]
  40bb5b:	cmp    r15,rdi
  40bb5e:	cmovbe r8,r15
  40bb62:	call   0x40a038
  40bb67:	test   eax,eax
  40bb69:	jne    0x40bb86
  40bb6b:	sub    rdi,r15
  40bb6e:	cmp    rdi,0x7fffffff
  40bb75:	jg     0x40bb8e
  40bb77:	cmp    rdi,0xffffffff80000000
  40bb7e:	jl     0x40de80
  40bb84:	mov    eax,edi
  40bb86:	test   eax,eax
  40bb88:	js     0x40de80
  40bb8e:	mov    rax,rbx
  40bb91:	lea    rbx,[rsp+0xf90]
  40bb99:	mov    QWORD PTR [rsp+0x48],rbx
  40bb9e:	add    rax,0x28
  40bba2:	mov    r8,QWORD PTR [rsp+0x48]
  40bba7:	lea    rdx,[rip+0xa745]        # 0x4162f3
  40bbae:	mov    QWORD PTR [rsp+0x98],rax
  40bbb6:	lea    rax,[rsp+0x530]
  40bbbe:	mov    rcx,rax
  40bbc1:	mov    QWORD PTR [rsp+0xb0],rax
  40bbc9:	call   0x408138
  40bbce:	mov    rsi,QWORD PTR [rip+0x114bb]        # 0x41d090
  40bbd5:	test   rsi,rsi
  40bbd8:	je     0x40df60
  40bbde:	mov    rdi,QWORD PTR [rsp+0x530]
  40bbe6:	mov    rbx,r13
  40bbe9:	mov    r15,QWORD PTR [rdi-0x18]
  40bbed:	jmp    0x40bc03
  40bbef:	nop
  40bbf0:	mov    eax,r12d
  40bbf3:	test   eax,eax
  40bbf5:	js     0x40bc36
  40bbf7:	mov    rbx,rsi
  40bbfa:	mov    rsi,QWORD PTR [rsi+0x10]
  40bbfe:	test   rsi,rsi
  40bc01:	je     0x40bc3f
  40bc03:	mov    rcx,QWORD PTR [rsi+0x20]
  40bc07:	mov    r8,r15
  40bc0a:	mov    rdx,rdi
  40bc0d:	mov    r12,QWORD PTR [rcx-0x18]
  40bc11:	cmp    r12,r15
  40bc14:	cmovbe r8,r12
  40bc18:	call   0x40a038
  40bc1d:	test   eax,eax
  40bc1f:	jne    0x40bbf3
  40bc21:	sub    r12,r15
  40bc24:	cmp    r12,0x7fffffff
  40bc2b:	jg     0x40bbf7
  40bc2d:	cmp    r12,0xffffffff80000000
  40bc34:	jge    0x40bbf0
  40bc36:	mov    rsi,QWORD PTR [rsi+0x18]
  40bc3a:	test   rsi,rsi
  40bc3d:	jne    0x40bc03
  40bc3f:	cmp    rbx,r13
  40bc42:	je     0x40df63
  40bc48:	mov    rdx,QWORD PTR [rbx+0x20]
  40bc4c:	mov    r8,r15
  40bc4f:	mov    rcx,rdi
  40bc52:	mov    r13,QWORD PTR [rdx-0x18]
  40bc56:	cmp    r13,r15
  40bc59:	cmovbe r8,r13
  40bc5d:	call   0x40a038
  40bc62:	test   eax,eax
  40bc64:	jne    0x40bc85
  40bc66:	mov    r11,r15
  40bc69:	sub    r11,r13
  40bc6c:	cmp    r11,0x7fffffff
  40bc73:	jg     0x40bc8d
  40bc75:	cmp    r11,0xffffffff80000000
  40bc7c:	jl     0x40df63
  40bc82:	mov    eax,r11d
  40bc85:	test   eax,eax
  40bc87:	js     0x40df63
  40bc8d:	mov    rax,rbx
  40bc90:	lea    rsi,[rsp+0x540]
  40bc98:	lea    rdx,[rax+0x28]
  40bc9c:	mov    rcx,rsi
  40bc9f:	call   0x408128
  40bca4:	lea    rdx,[rip+0xba1a]        # 0x4176c5
  40bcab:	mov    r8d,0x1
  40bcb1:	mov    rcx,rsi
  40bcb4:	call   0x408170
  40bcb9:	mov    rdx,QWORD PTR [rsp+0x98]
  40bcc1:	mov    rcx,rsi
  40bcc4:	call   0x408168
  40bcc9:	mov    rbx,rax
  40bccc:	mov    rax,QWORD PTR [rax]
  40bccf:	lea    r8,[rsp+0x10d]
  40bcd7:	xor    edx,edx
  40bcd9:	xor    ecx,ecx
  40bcdb:	mov    QWORD PTR [rsp+0x560],rax
  40bce3:	call   0x4081a0
  40bce8:	lea    rcx,[rsp+0x560]
  40bcf0:	lea    rdx,[rip+0xb9ce]        # 0x4176c5
  40bcf7:	mov    QWORD PTR [rbx],rax
  40bcfa:	mov    r8d,0x1
  40bd00:	call   0x408170
  40bd05:	mov    rbx,rax
  40bd08:	mov    rax,QWORD PTR [rax]
  40bd0b:	lea    r8,[rsp+0x10e]
  40bd13:	xor    edx,edx
  40bd15:	xor    ecx,ecx
  40bd17:	mov    QWORD PTR [rsp+0x570],rax
  40bd1f:	call   0x4081a0
  40bd24:	mov    rdx,QWORD PTR [rsp+0x70]
  40bd29:	lea    rcx,[rsp+0x570]
  40bd31:	mov    QWORD PTR [rbx],rax
  40bd34:	call   0x408168
  40bd39:	mov    rbx,rax
  40bd3c:	mov    rax,QWORD PTR [rax]
  40bd3f:	lea    r8,[rsp+0x10f]
  40bd47:	xor    edx,edx
  40bd49:	xor    ecx,ecx
  40bd4b:	mov    QWORD PTR [rsp+0x590],rax
  40bd53:	call   0x4081a0
  40bd58:	lea    rcx,[rsp+0x590]
  40bd60:	lea    rdx,[rip+0xb95e]        # 0x4176c5
  40bd67:	mov    QWORD PTR [rbx],rax
  40bd6a:	mov    r8d,0x1
  40bd70:	call   0x408170
  40bd75:	mov    rbx,rax
  40bd78:	mov    rax,QWORD PTR [rax]
  40bd7b:	lea    r8,[rsp+0x110]
  40bd83:	xor    edx,edx
  40bd85:	xor    ecx,ecx
  40bd87:	mov    QWORD PTR [rsp+0x5a0],rax
  40bd8f:	call   0x4081a0
  40bd94:	mov    rdx,QWORD PTR [rsp+0x40]
  40bd99:	lea    rcx,[rsp+0x5a0]
  40bda1:	mov    QWORD PTR [rbx],rax
  40bda4:	call   0x408168
  40bda9:	mov    rbx,rax
  40bdac:	mov    rax,QWORD PTR [rax]
  40bdaf:	lea    r8,[rsp+0x111]
  40bdb7:	xor    edx,edx
  40bdb9:	xor    ecx,ecx
  40bdbb:	mov    QWORD PTR [rsp+0x5c0],rax
  40bdc3:	call   0x4081a0
  40bdc8:	lea    rcx,[rsp+0x5c0]
  40bdd0:	lea    rdx,[rip+0xb8ee]        # 0x4176c5
  40bdd7:	mov    QWORD PTR [rbx],rax
  40bdda:	mov    r8d,0x1
  40bde0:	call   0x408170
  40bde5:	mov    rbx,rax
  40bde8:	mov    rax,QWORD PTR [rax]
  40bdeb:	lea    r8,[rsp+0x112]
  40bdf3:	xor    edx,edx
  40bdf5:	xor    ecx,ecx
  40bdf7:	mov    QWORD PTR [rsp+0x5d0],rax
  40bdff:	call   0x4081a0
  40be04:	mov    rdx,QWORD PTR [rsp+0x58]
  40be09:	lea    rcx,[rsp+0x5d0]
  40be11:	mov    QWORD PTR [rbx],rax
  40be14:	call   0x408168
  40be19:	mov    rbx,rax
  40be1c:	mov    rax,QWORD PTR [rax]
  40be1f:	lea    r8,[rsp+0x113]
  40be27:	xor    edx,edx
  40be29:	xor    ecx,ecx
  40be2b:	mov    QWORD PTR [rsp+0x5e0],rax
  40be33:	call   0x4081a0
  40be38:	lea    rcx,[rsp+0x5e0]
  40be40:	lea    rdx,[rip+0xb87e]        # 0x4176c5
  40be47:	mov    QWORD PTR [rbx],rax
  40be4a:	mov    r8d,0x1
  40be50:	call   0x408170
  40be55:	mov    rbx,rax
  40be58:	mov    rax,QWORD PTR [rax]
  40be5b:	lea    r8,[rsp+0x114]
  40be63:	xor    edx,edx
  40be65:	xor    ecx,ecx
  40be67:	mov    QWORD PTR [rsp+0x5f0],rax
  40be6f:	call   0x4081a0
  40be74:	mov    rdx,QWORD PTR [rsp+0x60]
  40be79:	lea    rcx,[rsp+0x5f0]
  40be81:	mov    QWORD PTR [rbx],rax
  40be84:	call   0x408168
  40be89:	mov    rbx,rax
  40be8c:	mov    rax,QWORD PTR [rax]
  40be8f:	lea    r8,[rsp+0x115]
  40be97:	xor    edx,edx
  40be99:	xor    ecx,ecx
  40be9b:	mov    QWORD PTR [rsp+0x600],rax
  40bea3:	call   0x4081a0
  40bea8:	lea    rcx,[rsp+0x600]
  40beb0:	lea    rdx,[rip+0xb80e]        # 0x4176c5
  40beb7:	mov    QWORD PTR [rbx],rax
  40beba:	mov    r8d,0x1
  40bec0:	call   0x408170
  40bec5:	mov    rbx,rax
  40bec8:	mov    rax,QWORD PTR [rax]
  40becb:	lea    r8,[rsp+0x116]
  40bed3:	xor    edx,edx
  40bed5:	xor    ecx,ecx
  40bed7:	mov    QWORD PTR [rsp+0x610],rax
  40bedf:	call   0x4081a0
  40bee4:	mov    QWORD PTR [rbx],rax
  40bee7:	mov    r8,QWORD PTR [rsp+0x610]
  40beef:	mov    rax,QWORD PTR [rsp+0x620]
  40bef7:	mov    r9,QWORD PTR [r8-0x18]
  40befb:	mov    rdx,r9
  40befe:	add    rdx,QWORD PTR [rax-0x18]
  40bf02:	cmp    rdx,QWORD PTR [r8-0x10]
  40bf06:	jbe    0x40de60
  40bf0c:	cmp    rdx,QWORD PTR [rax-0x10]
  40bf10:	ja     0x40de60
  40bf16:	mov    rcx,QWORD PTR [rsp+0xa8]
  40bf1e:	xor    edx,edx
  40bf20:	call   0x408150
  40bf25:	mov    rbx,rax
  40bf28:	lea    r8,[rsp+0x117]
  40bf30:	xor    edx,edx
  40bf32:	mov    rax,QWORD PTR [rbx]
  40bf35:	xor    ecx,ecx
  40bf37:	mov    QWORD PTR [rsp+0x48],rax
  40bf3c:	call   0x4081a0
  40bf41:	mov    QWORD PTR [rbx],rax
  40bf44:	mov    eax,DWORD PTR [rbp+0x0]
  40bf47:	mov    rdx,QWORD PTR [rsp+0x610]
  40bf4f:	test   eax,eax
  40bf51:	jne    0x40e186
  40bf57:	mov    eax,DWORD PTR [rdx-0x8]
  40bf5a:	lea    ecx,[rax-0x1]
  40bf5d:	test   eax,eax
  40bf5f:	mov    DWORD PTR [rdx-0x8],ecx
  40bf62:	jle    0x40e198
  40bf68:	mov    eax,DWORD PTR [rbp+0x0]
  40bf6b:	mov    rdx,QWORD PTR [rsp+0x600]
  40bf73:	test   eax,eax
  40bf75:	jne    0x40e1b7
  40bf7b:	mov    eax,DWORD PTR [rdx-0x8]
  40bf7e:	lea    ecx,[rax-0x1]
  40bf81:	test   eax,eax
  40bf83:	mov    DWORD PTR [rdx-0x8],ecx
  40bf86:	jle    0x40e1c9
  40bf8c:	mov    r15d,DWORD PTR [rbp+0x0]
  40bf90:	mov    rdx,QWORD PTR [rsp+0x5f0]
  40bf98:	test   r15d,r15d
  40bf9b:	jne    0x40e1da
  40bfa1:	mov    eax,DWORD PTR [rdx-0x8]
  40bfa4:	lea    ecx,[rax-0x1]
  40bfa7:	test   eax,eax
  40bfa9:	mov    DWORD PTR [rdx-0x8],ecx
  40bfac:	jle    0x40e1ec
  40bfb2:	mov    r13d,DWORD PTR [rbp+0x0]
  40bfb6:	mov    rdx,QWORD PTR [rsp+0x5e0]
  40bfbe:	test   r13d,r13d
  40bfc1:	jne    0x40e03d
  40bfc7:	mov    eax,DWORD PTR [rdx-0x8]
  40bfca:	lea    ecx,[rax-0x1]
  40bfcd:	test   eax,eax
  40bfcf:	mov    DWORD PTR [rdx-0x8],ecx
  40bfd2:	jle    0x40e04f
  40bfd8:	mov    r12d,DWORD PTR [rbp+0x0]
  40bfdc:	mov    rdx,QWORD PTR [rsp+0x5d0]
  40bfe4:	test   r12d,r12d
  40bfe7:	jne    0x40e01a
  40bfed:	mov    eax,DWORD PTR [rdx-0x8]
  40bff0:	lea    ecx,[rax-0x1]
  40bff3:	test   eax,eax
  40bff5:	mov    DWORD PTR [rdx-0x8],ecx
  40bff8:	jle    0x40e02c
  40bffe:	mov    edi,DWORD PTR [rbp+0x0]
  40c001:	mov    rdx,QWORD PTR [rsp+0x5c0]
  40c009:	test   edi,edi
  40c00b:	jne    0x40dff7
  40c011:	mov    eax,DWORD PTR [rdx-0x8]
  40c014:	lea    ecx,[rax-0x1]
  40c017:	test   eax,eax
  40c019:	mov    DWORD PTR [rdx-0x8],ecx
  40c01c:	jle    0x40e009
  40c022:	mov    esi,DWORD PTR [rbp+0x0]
  40c025:	mov    rdx,QWORD PTR [rsp+0x5a0]
  40c02d:	test   esi,esi
  40c02f:	jne    0x40dfa3
  40c035:	mov    eax,DWORD PTR [rdx-0x8]
  40c038:	lea    ecx,[rax-0x1]
  40c03b:	test   eax,eax
  40c03d:	mov    DWORD PTR [rdx-0x8],ecx
  40c040:	jle    0x40dfb5
  40c046:	mov    ebx,DWORD PTR [rbp+0x0]
  40c049:	mov    rdx,QWORD PTR [rsp+0x590]
  40c051:	test   ebx,ebx
  40c053:	jne    0x40dfd4
  40c059:	mov    eax,DWORD PTR [rdx-0x8]
  40c05c:	lea    ecx,[rax-0x1]
  40c05f:	test   eax,eax
  40c061:	mov    DWORD PTR [rdx-0x8],ecx
  40c064:	jle    0x40dfe6
  40c06a:	mov    r11d,DWORD PTR [rbp+0x0]
  40c06e:	mov    rdx,QWORD PTR [rsp+0x570]
  40c076:	test   r11d,r11d
  40c079:	jne    0x40e163
  40c07f:	mov    eax,DWORD PTR [rdx-0x8]
  40c082:	lea    ecx,[rax-0x1]
  40c085:	test   eax,eax
  40c087:	mov    DWORD PTR [rdx-0x8],ecx
  40c08a:	jle    0x40e175
  40c090:	mov    r10d,DWORD PTR [rbp+0x0]
  40c094:	mov    rdx,QWORD PTR [rsp+0x560]
  40c09c:	test   r10d,r10d
  40c09f:	jne    0x40e140
  40c0a5:	mov    eax,DWORD PTR [rdx-0x8]
  40c0a8:	lea    ecx,[rax-0x1]
  40c0ab:	test   eax,eax
  40c0ad:	mov    DWORD PTR [rdx-0x8],ecx
  40c0b0:	jle    0x40e152
  40c0b6:	mov    r9d,DWORD PTR [rbp+0x0]
  40c0ba:	mov    rdx,QWORD PTR [rsp+0x540]
  40c0c2:	test   r9d,r9d
  40c0c5:	jne    0x40e11d
  40c0cb:	mov    eax,DWORD PTR [rdx-0x8]
  40c0ce:	lea    ecx,[rax-0x1]
  40c0d1:	test   eax,eax
  40c0d3:	mov    DWORD PTR [rdx-0x8],ecx
  40c0d6:	jle    0x40e12f
  40c0dc:	mov    r8d,DWORD PTR [rbp+0x0]
  40c0e0:	mov    rdx,QWORD PTR [rsp+0x530]
  40c0e8:	test   r8d,r8d
  40c0eb:	jne    0x40e0fa
  40c0f1:	mov    eax,DWORD PTR [rdx-0x8]
  40c0f4:	lea    ecx,[rax-0x1]
  40c0f7:	test   eax,eax
  40c0f9:	mov    DWORD PTR [rdx-0x8],ecx
  40c0fc:	jle    0x40e10c
  40c102:	mov    ecx,DWORD PTR [rbp+0x0]
  40c105:	mov    rdx,QWORD PTR [rsp+0x550]
  40c10d:	test   ecx,ecx
  40c10f:	jne    0x40e0d7
  40c115:	mov    eax,DWORD PTR [rdx-0x8]
  40c118:	lea    ecx,[rax-0x1]
  40c11b:	test   eax,eax
  40c11d:	mov    DWORD PTR [rdx-0x8],ecx
  40c120:	jle    0x40e0e9
  40c126:	mov    eax,DWORD PTR [rbp+0x0]
  40c129:	mov    rdx,QWORD PTR [rsp+0x580]
  40c131:	test   eax,eax
  40c133:	jne    0x40e0b4
  40c139:	mov    eax,DWORD PTR [rdx-0x8]
  40c13c:	lea    ecx,[rax-0x1]
  40c13f:	test   eax,eax
  40c141:	mov    DWORD PTR [rdx-0x8],ecx
  40c144:	jle    0x40e0c6
  40c14a:	mov    eax,DWORD PTR [rbp+0x0]
  40c14d:	mov    rdx,QWORD PTR [rsp+0x5b0]
  40c155:	test   eax,eax
  40c157:	jne    0x40e060
  40c15d:	mov    eax,DWORD PTR [rdx-0x8]
  40c160:	lea    ecx,[rax-0x1]
  40c163:	test   eax,eax
  40c165:	mov    DWORD PTR [rdx-0x8],ecx
  40c168:	jle    0x40e072
  40c16e:	mov    eax,DWORD PTR [rbp+0x0]
  40c171:	mov    rdx,QWORD PTR [rsp+0x620]
  40c179:	test   eax,eax
  40c17b:	jne    0x40e091
  40c181:	mov    eax,DWORD PTR [rdx-0x8]
  40c184:	lea    ecx,[rax-0x1]
  40c187:	test   eax,eax
  40c189:	mov    DWORD PTR [rdx-0x8],ecx
  40c18c:	jle    0x40e0a3
  40c192:	lea    rdx,[rip+0xb7e0]        # 0x417979
  40c199:	mov    rcx,QWORD PTR [rsp+0x48]
  40c19e:	call   QWORD PTR [rip+0x13848]        # 0x41f9ec
  40c1a4:	lea    rcx,[r14+0xd0]
  40c1ab:	mov    r12,rax
  40c1ae:	call   0x4080c8
  40c1b3:	mov    rax,QWORD PTR [rsp+0x80]
  40c1bb:	mov    BYTE PTR [rsp+0x11a0],0x0
  40c1c3:	mov    rcx,r14
  40c1c6:	mov    QWORD PTR [rsp+0x1198],0x0
  40c1d2:	mov    BYTE PTR [rsp+0x11a1],0x0
  40c1da:	xor    edx,edx
  40c1dc:	mov    QWORD PTR [rsp+0x11a8],0x0
  40c1e8:	mov    QWORD PTR [rsp+0x11b0],0x0
  40c1f4:	mov    QWORD PTR [rsp+0x10c0],rax
  40c1fc:	mov    rax,QWORD PTR [rip+0xce1d]        # 0x419020
  40c203:	mov    QWORD PTR [rsp+0x11b8],0x0
  40c20f:	mov    QWORD PTR [rsp+0x11c0],0x0
  40c21b:	mov    rbx,QWORD PTR [rax+0x8]
  40c21f:	mov    rsi,QWORD PTR [rax+0x10]
  40c223:	mov    QWORD PTR [rsp+0x70],rax
  40c228:	add    rcx,QWORD PTR [rbx-0x18]
  40c22c:	mov    QWORD PTR [rsp+0xff0],rbx
  40c234:	mov    QWORD PTR [rcx],rsi
  40c237:	call   0x4080b8
  40c23c:	mov    rax,QWORD PTR [rsp+0x90]
  40c244:	lea    rcx,[r14+0x8]
  40c248:	mov    QWORD PTR [rsp+0xff0],rax
  40c250:	mov    rax,QWORD PTR [rip+0xcde9]        # 0x419040
  40c257:	add    rax,0x40
  40c25b:	mov    QWORD PTR [rsp+0x10c0],rax
  40c263:	call   0x408100
  40c268:	lea    rdx,[r14+0x8]
  40c26c:	lea    rcx,[r14+0xd0]
  40c273:	call   0x4080b8
  40c278:	mov    rdx,QWORD PTR [rsp+0x38]
  40c27d:	lea    rcx,[r14+0x8]
  40c281:	mov    r8d,0x30
  40c287:	call   0x408110
  40c28c:	test   rax,rax
  40c28f:	mov    rcx,r14
  40c292:	mov    rax,QWORD PTR [rsp+0xff0]
  40c29a:	je     0x40e2c3
  40c2a0:	add    rcx,QWORD PTR [rax-0x18]
  40c2a4:	xor    edx,edx
  40c2a6:	call   0x4080b0
  40c2ab:	lea    rax,[rsp+0xfa0]
  40c2b3:	lea    r13,[rsp+0x630]
  40c2bb:	lea    rbx,[rsp+0xf60]
  40c2c3:	lea    r15,[rsp+0x640]
  40c2cb:	mov    QWORD PTR [rsp+0x40],rax
  40c2d0:	mov    rcx,r12
  40c2d3:	call   0x40a078
  40c2d8:	test   eax,eax
  40c2da:	jne    0x40c4f0
  40c2e0:	mov    rdx,r12
  40c2e3:	mov    rcx,r13
  40c2e6:	call   0x402010
  40c2eb:	mov    rdx,r13
  40c2ee:	mov    rcx,rbx
  40c2f1:	call   0x408180
  40c2f6:	mov    eax,DWORD PTR [rbp+0x0]
  40c2f9:	mov    rcx,QWORD PTR [rsp+0x630]
  40c301:	test   eax,eax
  40c303:	jne    0x40ddb2
  40c309:	mov    eax,DWORD PTR [rcx-0x8]
  40c30c:	lea    edx,[rax-0x1]
  40c30f:	test   eax,eax
  40c311:	mov    DWORD PTR [rcx-0x8],edx
  40c314:	jle    0x40ddc4
  40c31a:	lea    rdx,[rip+0xb65a]        # 0x41797b
  40c321:	mov    r9d,0x3
  40c327:	mov    r8,0xffffffffffffffff
  40c32e:	mov    rcx,rbx
  40c331:	call   0x4081e0
  40c336:	cmp    rax,0xffffffffffffffff
  40c33a:	mov    rsi,rax
  40c33d:	je     0x40dd60
  40c343:	mov    r8,rax
  40c346:	mov    edx,0x2f
  40c34b:	mov    rcx,rbx
  40c34e:	call   0x4081d8
  40c353:	cmp    rax,0xffffffffffffffff
  40c357:	je     0x40dde0
  40c35d:	lea    r9,[rsi+0x1]
  40c361:	lea    r8,[rax+0x1]
  40c365:	sub    r9,rax
  40c368:	mov    rax,QWORD PTR [rsp+0xf60]
  40c370:	mov    rax,QWORD PTR [rax-0x18]
  40c374:	cmp    r8,rax
  40c377:	ja     0x410d3d
  40c37d:	mov    rcx,QWORD PTR [rsp+0x30]
  40c382:	mov    rdx,rbx
  40c385:	call   0x408120
  40c38a:	mov    rax,QWORD PTR [rsp+0xf60]
  40c392:	mov    r9,QWORD PTR [rax-0x18]
  40c396:	cmp    rsi,r9
  40c399:	ja     0x410cf6
  40c39f:	mov    r9,0xffffffffffffffff
  40c3a6:	mov    r8,rsi
  40c3a9:	mov    rdx,rbx
  40c3ac:	mov    rcx,r15
  40c3af:	call   0x408120
  40c3b4:	lea    rdx,[rip+0xb5c4]        # 0x41797f
  40c3bb:	mov    r8d,0x4
  40c3c1:	mov    rcx,r14
  40c3c4:	call   0x4080a8
  40c3c9:	mov    rdx,QWORD PTR [rsp+0xfb0]
  40c3d1:	mov    rcx,r14
  40c3d4:	mov    r8,QWORD PTR [rdx-0x18]
  40c3d8:	call   0x4080a8
  40c3dd:	lea    rdx,[rip+0xb2e1]        # 0x4176c5
  40c3e4:	mov    r8d,0x1
  40c3ea:	mov    rcx,rax
  40c3ed:	mov    rsi,rax
  40c3f0:	call   0x4080a8
  40c3f5:	mov    rdx,QWORD PTR [rsp+0xfb0]
  40c3fd:	mov    rcx,rsi
  40c400:	mov    r8,QWORD PTR [rdx-0x18]
  40c404:	call   0x4080a8
  40c409:	lea    rdx,[rip+0xb2b5]        # 0x4176c5
  40c410:	mov    r8d,0x1
  40c416:	mov    rcx,rax
  40c419:	mov    rsi,rax
  40c41c:	call   0x4080a8
  40c421:	mov    rax,QWORD PTR [rsp+0x38]
  40c426:	mov    rcx,rsi
  40c429:	mov    r8,QWORD PTR [rax-0x18]
  40c42d:	mov    rdx,rax
  40c430:	call   0x4080a8
  40c435:	mov    rdx,QWORD PTR [rsp+0x640]
  40c43d:	mov    rcx,rax
  40c440:	mov    r8,QWORD PTR [rdx-0x18]
  40c444:	call   0x4080a8
  40c449:	mov    rdi,rax
  40c44c:	mov    rax,QWORD PTR [rax]
  40c44f:	mov    rax,QWORD PTR [rax-0x18]
  40c453:	mov    rsi,QWORD PTR [rdi+rax*1+0xf0]
  40c45b:	test   rsi,rsi
  40c45e:	je     0x410cf1
  40c464:	cmp    BYTE PTR [rsi+0x38],0x0
  40c468:	je     0x40dd25
  40c46e:	movsx  edx,BYTE PTR [rsi+0x43]
  40c472:	mov    rcx,rdi
  40c475:	call   0x4081b8
  40c47a:	mov    rcx,rax
  40c47d:	call   0x4081b0
  40c482:	mov    eax,DWORD PTR [rbp+0x0]
  40c485:	mov    rcx,QWORD PTR [rsp+0x640]
  40c48d:	test   eax,eax
  40c48f:	jne    0x40de00
  40c495:	mov    eax,DWORD PTR [rcx-0x8]
  40c498:	lea    edx,[rax-0x1]
  40c49b:	test   eax,eax
  40c49d:	mov    DWORD PTR [rcx-0x8],edx
  40c4a0:	jle    0x40de12
  40c4a6:	mov    eax,DWORD PTR [rbp+0x0]
  40c4a9:	mov    rcx,QWORD PTR [rsp+0xfb0]
  40c4b1:	test   eax,eax
  40c4b3:	jne    0x40ddf0
  40c4b9:	mov    eax,DWORD PTR [rcx-0x8]
  40c4bc:	lea    edx,[rax-0x1]
  40c4bf:	mov    DWORD PTR [rcx-0x8],edx
  40c4c2:	test   eax,eax
  40c4c4:	jg     0x40c2d0
  40c4ca:	mov    rdx,QWORD PTR [rsp+0x40]
  40c4cf:	sub    rcx,0x18
  40c4d3:	call   0x408190
  40c4d8:	mov    rcx,r12
  40c4db:	call   0x40a078
  40c4e0:	test   eax,eax
  40c4e2:	je     0x40c2e0
  40c4e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c4f0:	mov    rcx,r12
  40c4f3:	call   QWORD PTR [rip+0x134e3]        # 0x41f9dc
  40c4f9:	lea    rcx,[r14+0x8]
  40c4fd:	call   0x408108
  40c502:	test   rax,rax
  40c505:	je     0x40e2d7
  40c50b:	mov    rax,QWORD PTR [rsp+0x90]
  40c513:	lea    rcx,[r14+0x8]
  40c517:	mov    QWORD PTR [rsp+0xff0],rax
  40c51f:	mov    rax,QWORD PTR [rip+0xcb1a]        # 0x419040
  40c526:	add    rax,0x40
  40c52a:	mov    QWORD PTR [rsp+0x10c0],rax
  40c532:	mov    rax,QWORD PTR [rip+0xcaf7]        # 0x419030
  40c539:	add    rax,0x10
  40c53d:	mov    QWORD PTR [rsp+0xff8],rax
  40c545:	call   0x408108
  40c54a:	lea    rcx,[r14+0x58]
  40c54e:	call   0x408118
  40c553:	mov    rax,QWORD PTR [rip+0xcaf6]        # 0x419050
  40c55a:	lea    rcx,[r14+0x40]
  40c55e:	add    rax,0x10
  40c562:	mov    QWORD PTR [rsp+0xff8],rax
  40c56a:	call   0x4080e8
  40c56f:	mov    rbx,QWORD PTR [rsp+0x70]
  40c574:	lea    rcx,[r14+0xd0]
  40c57b:	mov    rax,QWORD PTR [rbx+0x8]
  40c57f:	mov    rdx,QWORD PTR [rbx+0x10]
  40c583:	mov    QWORD PTR [rsp+0xff0],rax
  40c58b:	mov    rax,QWORD PTR [rax-0x18]
  40c58f:	mov    QWORD PTR [rsp+rax*1+0xff0],rdx
  40c597:	mov    rax,QWORD PTR [rsp+0x80]
  40c59f:	mov    QWORD PTR [rsp+0x10c0],rax
  40c5a7:	call   0x4080c0
  40c5ac:	mov    r12d,DWORD PTR [rbp+0x0]
  40c5b0:	test   r12d,r12d
  40c5b3:	jne    0x40e294
  40c5b9:	mov    rbx,QWORD PTR [rsp+0x48]
  40c5be:	mov    eax,DWORD PTR [rbx-0x8]
  40c5c1:	lea    edx,[rax-0x1]
  40c5c4:	test   eax,eax
  40c5c6:	mov    DWORD PTR [rbx-0x8],edx
  40c5c9:	jle    0x40e2ab
  40c5cf:	mov    edi,DWORD PTR [rbp+0x0]
  40c5d2:	mov    rdx,QWORD PTR [rsp+0xf60]
  40c5da:	test   edi,edi
  40c5dc:	jne    0x40e26f
  40c5e2:	mov    eax,DWORD PTR [rdx-0x8]
  40c5e5:	lea    ecx,[rax-0x1]
  40c5e8:	test   eax,eax
  40c5ea:	mov    DWORD PTR [rdx-0x8],ecx
  40c5ed:	jle    0x40e281
  40c5f3:	mov    esi,DWORD PTR [rbp+0x0]
  40c5f6:	mov    rbx,QWORD PTR [rsp+0x38]
  40c5fb:	test   esi,esi
  40c5fd:	jne    0x40e245
  40c603:	mov    eax,DWORD PTR [rbx-0x8]
  40c606:	lea    edx,[rax-0x1]
  40c609:	test   eax,eax
  40c60b:	mov    DWORD PTR [rbx-0x8],edx
  40c60e:	jle    0x40e257
  40c614:	mov    r11d,DWORD PTR [rbp+0x0]
  40c618:	mov    rdx,QWORD PTR [rsp+0xf50]
  40c620:	test   r11d,r11d
  40c623:	jne    0x40e220
  40c629:	mov    eax,DWORD PTR [rdx-0x8]
  40c62c:	lea    ecx,[rax-0x1]
  40c62f:	test   eax,eax
  40c631:	mov    DWORD PTR [rdx-0x8],ecx
  40c634:	jle    0x40e232
  40c63a:	mov    rax,QWORD PTR [rsp+0x68]
  40c63f:	mov    rax,QWORD PTR [rax]
  40c642:	cmp    rax,QWORD PTR [rsp+0x50]
  40c647:	mov    QWORD PTR [rsp+0x68],rax
  40c64c:	jne    0x40b800
  40c652:	mov    rax,QWORD PTR [rsp+0xfd0]
  40c65a:	cmp    rax,QWORD PTR [rsp+0x88]
  40c662:	lea    rbx,[rsp+0xf90]
  40c66a:	mov    QWORD PTR [rsp+0x48],rbx
  40c66f:	mov    QWORD PTR [rsp+0x78],rax
  40c674:	je     0x40d2e6
  40c67a:	mov    rax,QWORD PTR [rip+0xc9df]        # 0x419060
  40c681:	mov    r12,QWORD PTR [rip+0xc958]        # 0x418fe0
  40c688:	add    rax,0x10
  40c68c:	mov    QWORD PTR [rsp+0x80],rax
  40c694:	mov    rax,QWORD PTR [rip+0xc9a5]        # 0x419040
  40c69b:	add    rax,0x18
  40c69f:	mov    QWORD PTR [rsp+0x90],rax
  40c6a7:	mov    rax,QWORD PTR [rsp+0x78]
  40c6ac:	mov    rdi,QWORD PTR [rsp+0x48]
  40c6b1:	lea    rdx,[rax+0x10]
  40c6b5:	mov    rcx,rdi
  40c6b8:	call   0x408128
  40c6bd:	lea    rbx,[rsp+0x650]
  40c6c5:	mov    rdx,rdi
  40c6c8:	mov    rcx,rbx
  40c6cb:	call   0x401b40
  40c6d0:	lea    rdx,[rip+0xb29f]        # 0x417976
  40c6d7:	mov    r8d,0x2
  40c6dd:	mov    rcx,rbx
  40c6e0:	call   0x408170
  40c6e5:	mov    rbx,rax
  40c6e8:	mov    rax,QWORD PTR [rax]
  40c6eb:	lea    r8,[rsp+0x118]
  40c6f3:	xor    edx,edx
  40c6f5:	xor    ecx,ecx
  40c6f7:	mov    QWORD PTR [rsp+0x38],rax
  40c6fc:	call   0x4081a0
  40c701:	mov    r10d,DWORD PTR [r12]
  40c705:	mov    QWORD PTR [rbx],rax
  40c708:	mov    rdx,QWORD PTR [rsp+0x650]
  40c710:	test   r10d,r10d
  40c713:	jne    0x4109be
  40c719:	mov    eax,DWORD PTR [rdx-0x8]
  40c71c:	lea    ecx,[rax-0x1]
  40c71f:	mov    DWORD PTR [rdx-0x8],ecx
  40c722:	test   eax,eax
  40c724:	jle    0x410b8d
  40c72a:	lea    r8,[rsp+0x102]
  40c732:	xor    edx,edx
  40c734:	xor    ecx,ecx
  40c736:	call   0x4081a0
  40c73b:	mov    rcx,QWORD PTR [rsp+0x38]
  40c740:	mov    QWORD PTR [rsp+0xfa0],rax
  40c748:	call   0x4067b0
  40c74d:	lea    rax,[rsp+0x750]
  40c755:	mov    rdx,QWORD PTR [rsp+0x48]
  40c75a:	mov    rcx,rax
  40c75d:	mov    QWORD PTR [rsp+0x98],rax
  40c765:	call   0x401f10
  40c76a:	lea    rsi,[rsp+0xf80]
  40c772:	lea    rbx,[rsp+0x6e0]
  40c77a:	lea    rdx,[rip+0xaf5c]        # 0x4176dd
  40c781:	mov    r8,rsi
  40c784:	mov    rcx,rbx
  40c787:	call   0x408138
  40c78c:	lea    rcx,[rip+0x108ed]        # 0x41d080
  40c793:	mov    rdx,rbx
  40c796:	call   0x40a360
  40c79b:	lea    rbx,[rsp+0x6b0]
  40c7a3:	lea    r8,[rsp+0xf70]
  40c7ab:	lea    rdx,[rip+0x9afc]        # 0x4162ae
  40c7b2:	mov    QWORD PTR [rsp+0x40],rax
  40c7b7:	mov    rcx,rbx
  40c7ba:	call   0x408138
  40c7bf:	lea    rcx,[rip+0x108ba]        # 0x41d080
  40c7c6:	mov    rdx,rbx
  40c7c9:	call   0x40a360
  40c7ce:	lea    rbx,[rsp+0x680]
  40c7d6:	lea    r8,[rsp+0xf60]
  40c7de:	lea    rdx,[rip+0x9b8e]        # 0x416373
  40c7e5:	mov    QWORD PTR [rsp+0x68],rax
  40c7ea:	mov    rcx,rbx
  40c7ed:	call   0x408138
  40c7f2:	lea    rcx,[rip+0x10887]        # 0x41d080
  40c7f9:	mov    rdx,rbx
  40c7fc:	call   0x40a360
  40c801:	mov    QWORD PTR [rsp+0x70],rax
  40c806:	lea    rax,[rsp+0x660]
  40c80e:	lea    r8,[rsp+0xf50]
  40c816:	lea    rdx,[rip+0x9afa]        # 0x416317
  40c81d:	mov    rcx,rax
  40c820:	mov    QWORD PTR [rsp+0xb8],rax
  40c828:	call   0x408138
  40c82d:	mov    rbp,QWORD PTR [rip+0x1085c]        # 0x41d090
  40c834:	test   rbp,rbp
  40c837:	je     0x4108ef
  40c83d:	mov    rax,QWORD PTR [rsp+0x660]
  40c845:	lea    r13,[rip+0x1083c]        # 0x41d088
  40c84c:	mov    QWORD PTR [rsp+0xa8],rsi
  40c854:	mov    rdi,r13
  40c857:	mov    r15,QWORD PTR [rax-0x18]
  40c85b:	mov    QWORD PTR [rsp+0xb0],rax
  40c863:	mov    rsi,r15
  40c866:	mov    r15,rbp
  40c869:	mov    rbp,rax
  40c86c:	jmp    0x40c882
  40c86e:	xchg   ax,ax
  40c870:	mov    eax,ebx
  40c872:	test   eax,eax
  40c874:	js     0x40c8b5
  40c876:	mov    rdi,r15
  40c879:	mov    r15,QWORD PTR [r15+0x10]
  40c87d:	test   r15,r15
  40c880:	je     0x40c8be
  40c882:	mov    rcx,QWORD PTR [r15+0x20]
  40c886:	mov    r8,rsi
  40c889:	mov    rdx,rbp
  40c88c:	mov    rbx,QWORD PTR [rcx-0x18]
  40c890:	cmp    rbx,rsi
  40c893:	cmovbe r8,rbx
  40c897:	call   0x40a038
  40c89c:	test   eax,eax
  40c89e:	jne    0x40c872
  40c8a0:	sub    rbx,rsi
  40c8a3:	cmp    rbx,0x7fffffff
  40c8aa:	jg     0x40c876
  40c8ac:	cmp    rbx,0xffffffff80000000
  40c8b3:	jge    0x40c870
  40c8b5:	mov    r15,QWORD PTR [r15+0x18]
  40c8b9:	test   r15,r15
  40c8bc:	jne    0x40c882
  40c8be:	cmp    rdi,r13
  40c8c1:	mov    r15,rsi
  40c8c4:	mov    rbx,rdi
  40c8c7:	mov    rsi,QWORD PTR [rsp+0xa8]
  40c8cf:	je     0x4108f6
  40c8d5:	mov    rdx,QWORD PTR [rdi+0x20]
  40c8d9:	mov    rcx,QWORD PTR [rsp+0xb0]
  40c8e1:	mov    r8,r15
  40c8e4:	mov    r13,QWORD PTR [rdx-0x18]
  40c8e8:	cmp    r13,r15
  40c8eb:	cmovbe r8,r13
  40c8ef:	call   0x40a038
  40c8f4:	test   eax,eax
  40c8f6:	jne    0x40c917
  40c8f8:	mov    r11,r15
  40c8fb:	sub    r11,r13
  40c8fe:	cmp    r11,0x7fffffff
  40c905:	jg     0x40c91f
  40c907:	cmp    r11,0xffffffff80000000
  40c90e:	jl     0x4108f6
  40c914:	mov    eax,r11d
  40c917:	test   eax,eax
  40c919:	js     0x4108f6
  40c91f:	lea    rdx,[rbx+0x28]
  40c923:	lea    rbx,[rsp+0x670]
  40c92b:	mov    rcx,rbx
  40c92e:	call   0x408128
  40c933:	lea    rdx,[rip+0xad8b]        # 0x4176c5
  40c93a:	mov    r8d,0x1
  40c940:	mov    rcx,rbx
  40c943:	call   0x408170
  40c948:	mov    rdx,QWORD PTR [rsp+0x70]
  40c94d:	mov    rcx,rbx
  40c950:	call   0x408168
  40c955:	mov    rbx,rax
  40c958:	mov    rax,QWORD PTR [rax]
  40c95b:	lea    r8,[rsp+0x11a]
  40c963:	xor    edx,edx
  40c965:	xor    ecx,ecx
  40c967:	mov    QWORD PTR [rsp+0x690],rax
  40c96f:	call   0x4081a0
  40c974:	lea    rcx,[rsp+0x690]
  40c97c:	lea    rdx,[rip+0xad42]        # 0x4176c5
  40c983:	mov    QWORD PTR [rbx],rax
  40c986:	mov    r8d,0x1
  40c98c:	call   0x408170
  40c991:	mov    rbx,rax
  40c994:	mov    rax,QWORD PTR [rax]
  40c997:	lea    r8,[rsp+0x11b]
  40c99f:	xor    edx,edx
  40c9a1:	xor    ecx,ecx
  40c9a3:	mov    QWORD PTR [rsp+0x6a0],rax
  40c9ab:	call   0x4081a0
  40c9b0:	mov    rdx,QWORD PTR [rsp+0x68]
  40c9b5:	lea    rcx,[rsp+0x6a0]
  40c9bd:	mov    QWORD PTR [rbx],rax
  40c9c0:	call   0x408168
  40c9c5:	mov    rbx,rax
  40c9c8:	mov    rax,QWORD PTR [rax]
  40c9cb:	lea    r8,[rsp+0x11c]
  40c9d3:	xor    edx,edx
  40c9d5:	xor    ecx,ecx
  40c9d7:	mov    QWORD PTR [rsp+0x6c0],rax
  40c9df:	call   0x4081a0
  40c9e4:	lea    rcx,[rsp+0x6c0]
  40c9ec:	lea    rdx,[rip+0xacd2]        # 0x4176c5
  40c9f3:	mov    QWORD PTR [rbx],rax
  40c9f6:	mov    r8d,0x1
  40c9fc:	call   0x408170
  40ca01:	mov    rbx,rax
  40ca04:	mov    rax,QWORD PTR [rax]
  40ca07:	lea    r8,[rsp+0x11d]
  40ca0f:	xor    edx,edx
  40ca11:	xor    ecx,ecx
  40ca13:	mov    QWORD PTR [rsp+0x6d0],rax
  40ca1b:	call   0x4081a0
  40ca20:	mov    rdx,QWORD PTR [rsp+0x40]
  40ca25:	lea    rcx,[rsp+0x6d0]
  40ca2d:	mov    QWORD PTR [rbx],rax
  40ca30:	call   0x408168
  40ca35:	mov    rbx,rax
  40ca38:	mov    rax,QWORD PTR [rax]
  40ca3b:	lea    r8,[rsp+0x11e]
  40ca43:	xor    edx,edx
  40ca45:	xor    ecx,ecx
  40ca47:	mov    QWORD PTR [rsp+0x6f0],rax
  40ca4f:	call   0x4081a0
  40ca54:	lea    rcx,[rsp+0x6f0]
  40ca5c:	lea    rdx,[rip+0xac62]        # 0x4176c5
  40ca63:	mov    QWORD PTR [rbx],rax
  40ca66:	mov    r8d,0x1
  40ca6c:	call   0x408170
  40ca71:	mov    rbx,rax
  40ca74:	mov    rax,QWORD PTR [rax]
  40ca77:	lea    r8,[rsp+0x11f]
  40ca7f:	xor    edx,edx
  40ca81:	xor    ecx,ecx
  40ca83:	mov    QWORD PTR [rsp+0x700],rax
  40ca8b:	call   0x4081a0
  40ca90:	mov    rdx,QWORD PTR [rsp+0x58]
  40ca95:	lea    rcx,[rsp+0x700]
  40ca9d:	mov    QWORD PTR [rbx],rax
  40caa0:	call   0x408168
  40caa5:	mov    rbx,rax
  40caa8:	mov    rax,QWORD PTR [rax]
  40caab:	lea    r8,[rsp+0x120]
  40cab3:	xor    edx,edx
  40cab5:	xor    ecx,ecx
  40cab7:	mov    QWORD PTR [rsp+0x710],rax
  40cabf:	call   0x4081a0
  40cac4:	lea    rcx,[rsp+0x710]
  40cacc:	lea    rdx,[rip+0xabf2]        # 0x4176c5
  40cad3:	mov    QWORD PTR [rbx],rax
  40cad6:	mov    r8d,0x1
  40cadc:	call   0x408170
  40cae1:	mov    rbx,rax
  40cae4:	mov    rax,QWORD PTR [rax]
  40cae7:	lea    r8,[rsp+0x121]
  40caef:	xor    edx,edx
  40caf1:	xor    ecx,ecx
  40caf3:	mov    QWORD PTR [rsp+0x720],rax
  40cafb:	call   0x4081a0
  40cb00:	mov    rdx,QWORD PTR [rsp+0x60]
  40cb05:	lea    rcx,[rsp+0x720]
  40cb0d:	mov    QWORD PTR [rbx],rax
  40cb10:	call   0x408168
  40cb15:	mov    rbx,rax
  40cb18:	mov    rax,QWORD PTR [rax]
  40cb1b:	lea    r8,[rsp+0x122]
  40cb23:	xor    edx,edx
  40cb25:	xor    ecx,ecx
  40cb27:	mov    QWORD PTR [rsp+0x730],rax
  40cb2f:	call   0x4081a0
  40cb34:	lea    rcx,[rsp+0x730]
  40cb3c:	lea    rdx,[rip+0xab82]        # 0x4176c5
  40cb43:	mov    QWORD PTR [rbx],rax
  40cb46:	mov    r8d,0x1
  40cb4c:	call   0x408170
  40cb51:	mov    rbx,rax
  40cb54:	mov    rax,QWORD PTR [rax]
  40cb57:	lea    r8,[rsp+0x123]
  40cb5f:	xor    edx,edx
  40cb61:	xor    ecx,ecx
  40cb63:	mov    QWORD PTR [rsp+0x740],rax
  40cb6b:	call   0x4081a0
  40cb70:	mov    QWORD PTR [rbx],rax
  40cb73:	mov    r8,QWORD PTR [rsp+0x740]
  40cb7b:	mov    rax,QWORD PTR [rsp+0x750]
  40cb83:	mov    r9,QWORD PTR [r8-0x18]
  40cb87:	mov    rdx,r9
  40cb8a:	add    rdx,QWORD PTR [rax-0x18]
  40cb8e:	cmp    rdx,QWORD PTR [r8-0x10]
  40cb92:	jbe    0x4100c0
  40cb98:	cmp    rdx,QWORD PTR [rax-0x10]
  40cb9c:	ja     0x4100c0
  40cba2:	mov    rcx,QWORD PTR [rsp+0x98]
  40cbaa:	xor    edx,edx
  40cbac:	call   0x408150
  40cbb1:	mov    rbx,rax
  40cbb4:	lea    r8,[rsp+0x124]
  40cbbc:	xor    edx,edx
  40cbbe:	mov    rax,QWORD PTR [rbx]
  40cbc1:	xor    ecx,ecx
  40cbc3:	mov    QWORD PTR [rsp+0x68],rax
  40cbc8:	call   0x4081a0
  40cbcd:	mov    r9d,DWORD PTR [r12]
  40cbd1:	mov    QWORD PTR [rbx],rax
  40cbd4:	mov    rdx,QWORD PTR [rsp+0x740]
  40cbdc:	test   r9d,r9d
  40cbdf:	jne    0x4109b1
  40cbe5:	mov    eax,DWORD PTR [rdx-0x8]
  40cbe8:	lea    ecx,[rax-0x1]
  40cbeb:	mov    DWORD PTR [rdx-0x8],ecx
  40cbee:	test   eax,eax
  40cbf0:	jle    0x410b9e
  40cbf6:	mov    r8d,DWORD PTR [r12]
  40cbfa:	mov    rdx,QWORD PTR [rsp+0x730]
  40cc02:	test   r8d,r8d
  40cc05:	jne    0x4109cb
  40cc0b:	mov    eax,DWORD PTR [rdx-0x8]
  40cc0e:	lea    ecx,[rax-0x1]
  40cc11:	mov    DWORD PTR [rdx-0x8],ecx
  40cc14:	test   eax,eax
  40cc16:	jle    0x410ae3
  40cc1c:	mov    ecx,DWORD PTR [r12]
  40cc20:	mov    rdx,QWORD PTR [rsp+0x720]
  40cc28:	test   ecx,ecx
  40cc2a:	jne    0x410a4d
  40cc30:	mov    eax,DWORD PTR [rdx-0x8]
  40cc33:	lea    ecx,[rax-0x1]
  40cc36:	mov    DWORD PTR [rdx-0x8],ecx
  40cc39:	test   eax,eax
  40cc3b:	jle    0x410ad2
  40cc41:	mov    eax,DWORD PTR [r12]
  40cc45:	mov    rdx,QWORD PTR [rsp+0x710]
  40cc4d:	test   eax,eax
  40cc4f:	jne    0x410a40
  40cc55:	mov    eax,DWORD PTR [rdx-0x8]
  40cc58:	lea    ecx,[rax-0x1]
  40cc5b:	mov    DWORD PTR [rdx-0x8],ecx
  40cc5e:	test   eax,eax
  40cc60:	jle    0x410b49
  40cc66:	mov    eax,DWORD PTR [r12]
  40cc6a:	mov    rdx,QWORD PTR [rsp+0x700]
  40cc72:	test   eax,eax
  40cc74:	jne    0x410a33
  40cc7a:	mov    eax,DWORD PTR [rdx-0x8]
  40cc7d:	lea    ecx,[rax-0x1]
  40cc80:	mov    DWORD PTR [rdx-0x8],ecx
  40cc83:	test   eax,eax
  40cc85:	jle    0x410b38
  40cc8b:	mov    eax,DWORD PTR [r12]
  40cc8f:	mov    rdx,QWORD PTR [rsp+0x6f0]
  40cc97:	test   eax,eax
  40cc99:	jne    0x410a26
  40cc9f:	mov    eax,DWORD PTR [rdx-0x8]
  40cca2:	lea    ecx,[rax-0x1]
  40cca5:	mov    DWORD PTR [rdx-0x8],ecx
  40cca8:	test   eax,eax
  40ccaa:	jle    0x410b6b
  40ccb0:	mov    eax,DWORD PTR [r12]
  40ccb4:	mov    rdx,QWORD PTR [rsp+0x6d0]
  40ccbc:	test   eax,eax
  40ccbe:	jne    0x410a19
  40ccc4:	mov    eax,DWORD PTR [rdx-0x8]
  40ccc7:	lea    ecx,[rax-0x1]
  40ccca:	mov    DWORD PTR [rdx-0x8],ecx
  40cccd:	test   eax,eax
  40cccf:	jle    0x410b5a
  40ccd5:	mov    eax,DWORD PTR [r12]
  40ccd9:	mov    rdx,QWORD PTR [rsp+0x6c0]
  40cce1:	test   eax,eax
  40cce3:	jne    0x410a0c
  40cce9:	mov    eax,DWORD PTR [rdx-0x8]
  40ccec:	lea    ecx,[rax-0x1]
  40ccef:	mov    DWORD PTR [rdx-0x8],ecx
  40ccf2:	test   eax,eax
  40ccf4:	jle    0x410b05
  40ccfa:	mov    eax,DWORD PTR [r12]
  40ccfe:	mov    rdx,QWORD PTR [rsp+0x6a0]
  40cd06:	test   eax,eax
  40cd08:	jne    0x4109ff
  40cd0e:	mov    eax,DWORD PTR [rdx-0x8]
  40cd11:	lea    ecx,[rax-0x1]
  40cd14:	mov    DWORD PTR [rdx-0x8],ecx
  40cd17:	test   eax,eax
  40cd19:	jle    0x410af4
  40cd1f:	mov    r15d,DWORD PTR [r12]
  40cd23:	mov    rdx,QWORD PTR [rsp+0x690]
  40cd2b:	test   r15d,r15d
  40cd2e:	jne    0x4109f2
  40cd34:	mov    eax,DWORD PTR [rdx-0x8]
  40cd37:	lea    ecx,[rax-0x1]
  40cd3a:	mov    DWORD PTR [rdx-0x8],ecx
  40cd3d:	test   eax,eax
  40cd3f:	jle    0x410a9f
  40cd45:	mov    r13d,DWORD PTR [r12]
  40cd49:	mov    rdx,QWORD PTR [rsp+0x670]
  40cd51:	test   r13d,r13d
  40cd54:	jne    0x410a81
  40cd5a:	mov    eax,DWORD PTR [rdx-0x8]
  40cd5d:	lea    ecx,[rax-0x1]
  40cd60:	mov    DWORD PTR [rdx-0x8],ecx
  40cd63:	test   eax,eax
  40cd65:	jle    0x410a8e
  40cd6b:	mov    ebp,DWORD PTR [r12]
  40cd6f:	mov    rdx,QWORD PTR [rsp+0x660]
  40cd77:	test   ebp,ebp
  40cd79:	jne    0x410a74
  40cd7f:	mov    eax,DWORD PTR [rdx-0x8]
  40cd82:	lea    ecx,[rax-0x1]
  40cd85:	mov    DWORD PTR [rdx-0x8],ecx
  40cd88:	test   eax,eax
  40cd8a:	jle    0x410ac1
  40cd90:	mov    edi,DWORD PTR [r12]
  40cd94:	mov    rdx,QWORD PTR [rsp+0x680]
  40cd9c:	test   edi,edi
  40cd9e:	jne    0x410a67
  40cda4:	mov    eax,DWORD PTR [rdx-0x8]
  40cda7:	lea    ecx,[rax-0x1]
  40cdaa:	mov    DWORD PTR [rdx-0x8],ecx
  40cdad:	test   eax,eax
  40cdaf:	jle    0x410ab0
  40cdb5:	mov    ebx,DWORD PTR [r12]
  40cdb9:	mov    rdx,QWORD PTR [rsp+0x6b0]
  40cdc1:	test   ebx,ebx
  40cdc3:	jne    0x410a5a
  40cdc9:	mov    eax,DWORD PTR [rdx-0x8]
  40cdcc:	lea    ecx,[rax-0x1]
  40cdcf:	mov    DWORD PTR [rdx-0x8],ecx
  40cdd2:	test   eax,eax
  40cdd4:	jle    0x410b27
  40cdda:	mov    r11d,DWORD PTR [r12]
  40cdde:	mov    rdx,QWORD PTR [rsp+0x6e0]
  40cde6:	test   r11d,r11d
  40cde9:	jne    0x4109e5
  40cdef:	mov    eax,DWORD PTR [rdx-0x8]
  40cdf2:	lea    ecx,[rax-0x1]
  40cdf5:	mov    DWORD PTR [rdx-0x8],ecx
  40cdf8:	test   eax,eax
  40cdfa:	jle    0x410b16
  40ce00:	mov    r10d,DWORD PTR [r12]
  40ce04:	mov    rdx,QWORD PTR [rsp+0x750]
  40ce0c:	test   r10d,r10d
  40ce0f:	jne    0x4109d8
  40ce15:	mov    eax,DWORD PTR [rdx-0x8]
  40ce18:	lea    ecx,[rax-0x1]
  40ce1b:	mov    DWORD PTR [rdx-0x8],ecx
  40ce1e:	test   eax,eax
  40ce20:	jle    0x410b7c
  40ce26:	lea    rdx,[rip+0xab4c]        # 0x417979
  40ce2d:	mov    rcx,QWORD PTR [rsp+0x68]
  40ce32:	call   QWORD PTR [rip+0x12bb4]        # 0x41f9ec
  40ce38:	lea    rcx,[r14+0xd0]
  40ce3f:	mov    r13,rax
  40ce42:	call   0x4080c8
  40ce47:	mov    rax,QWORD PTR [rsp+0x80]
  40ce4f:	mov    BYTE PTR [rsp+0x11a0],0x0
  40ce57:	mov    rcx,r14
  40ce5a:	mov    QWORD PTR [rsp+0x1198],0x0
  40ce66:	mov    BYTE PTR [rsp+0x11a1],0x0
  40ce6e:	xor    edx,edx
  40ce70:	mov    QWORD PTR [rsp+0x11a8],0x0
  40ce7c:	mov    QWORD PTR [rsp+0x11b0],0x0
  40ce88:	mov    QWORD PTR [rsp+0x10c0],rax
  40ce90:	mov    rax,QWORD PTR [rip+0xc189]        # 0x419020
  40ce97:	mov    QWORD PTR [rsp+0x11b8],0x0
  40cea3:	mov    QWORD PTR [rsp+0x11c0],0x0
  40ceaf:	mov    rbx,QWORD PTR [rax+0x8]
  40ceb3:	mov    rdi,QWORD PTR [rax+0x10]
  40ceb7:	mov    QWORD PTR [rsp+0x70],rax
  40cebc:	add    rcx,QWORD PTR [rbx-0x18]
  40cec0:	mov    QWORD PTR [rsp+0xff0],rbx
  40cec8:	mov    QWORD PTR [rcx],rdi
  40cecb:	call   0x4080b8
  40ced0:	mov    rax,QWORD PTR [rsp+0x90]
  40ced8:	lea    rcx,[r14+0x8]
  40cedc:	mov    QWORD PTR [rsp+0xff0],rax
  40cee4:	mov    rax,QWORD PTR [rip+0xc155]        # 0x419040
  40ceeb:	add    rax,0x40
  40ceef:	mov    QWORD PTR [rsp+0x10c0],rax
  40cef7:	call   0x408100
  40cefc:	lea    rdx,[r14+0x8]
  40cf00:	lea    rcx,[r14+0xd0]
  40cf07:	call   0x4080b8
  40cf0c:	mov    rdx,QWORD PTR [rsp+0x38]
  40cf11:	lea    rcx,[r14+0x8]
  40cf15:	mov    r8d,0x30
  40cf1b:	call   0x408110
  40cf20:	test   rax,rax
  40cf23:	mov    rcx,r14
  40cf26:	mov    rax,QWORD PTR [rsp+0xff0]
  40cf2e:	je     0x410c24
  40cf34:	add    rcx,QWORD PTR [rax-0x18]
  40cf38:	xor    edx,edx
  40cf3a:	call   0x4080b0
  40cf3f:	lea    rax,[rsp+0x770]
  40cf47:	lea    r15,[rsp+0x760]
  40cf4f:	lea    rbx,[rsp+0xfa0]
  40cf57:	mov    QWORD PTR [rsp+0x40],rax
  40cf5c:	nop    DWORD PTR [rax+0x0]
  40cf60:	mov    rcx,r13
  40cf63:	call   0x40a078
  40cf68:	test   eax,eax
  40cf6a:	jne    0x40d181
  40cf70:	mov    rdx,r13
  40cf73:	mov    rcx,r15
  40cf76:	call   0x402010
  40cf7b:	mov    rdx,r15
  40cf7e:	mov    rcx,rbx
  40cf81:	call   0x408180
  40cf86:	mov    r9d,DWORD PTR [r12]
  40cf8a:	mov    rcx,QWORD PTR [rsp+0x760]
  40cf92:	test   r9d,r9d
  40cf95:	jne    0x40ffe4
  40cf9b:	mov    eax,DWORD PTR [rcx-0x8]
  40cf9e:	lea    edx,[rax-0x1]
  40cfa1:	test   eax,eax
  40cfa3:	mov    DWORD PTR [rcx-0x8],edx
  40cfa6:	jle    0x40fff6
  40cfac:	lea    rdx,[rip+0xa9c8]        # 0x41797b
  40cfb3:	mov    r9d,0x3
  40cfb9:	mov    r8,0xffffffffffffffff
  40cfc0:	mov    rcx,rbx
  40cfc3:	call   0x4081e0
  40cfc8:	cmp    rax,0xffffffffffffffff
  40cfcc:	mov    rdi,rax
  40cfcf:	je     0x40ff92
  40cfd5:	mov    r8,rax
  40cfd8:	mov    edx,0x2f
  40cfdd:	mov    rcx,rbx
  40cfe0:	call   0x4081d8
  40cfe5:	cmp    rax,0xffffffffffffffff
  40cfe9:	je     0x410010
  40cfef:	lea    r9,[rdi+0x1]
  40cff3:	lea    r8,[rax+0x1]
  40cff7:	sub    r9,rax
  40cffa:	mov    rax,QWORD PTR [rsp+0xfa0]
  40d002:	mov    rax,QWORD PTR [rax-0x18]
  40d006:	cmp    r8,rax
  40d009:	ja     0x411605
  40d00f:	mov    rcx,QWORD PTR [rsp+0x30]
  40d014:	mov    rdx,rbx
  40d017:	call   0x408120
  40d01c:	add    rdi,0x2
  40d020:	mov    rax,QWORD PTR [rsp+0xfa0]
  40d028:	mov    r9,QWORD PTR [rax-0x18]
  40d02c:	cmp    rdi,r9
  40d02f:	ja     0x41157f
  40d035:	mov    rcx,QWORD PTR [rsp+0x40]
  40d03a:	mov    r9,0xffffffffffffffff
  40d041:	mov    r8,rdi
  40d044:	mov    rdx,rbx
  40d047:	call   0x408120
  40d04c:	lea    rdx,[rip+0xa92c]        # 0x41797f
  40d053:	mov    r8d,0x4
  40d059:	mov    rcx,r14
  40d05c:	call   0x4080a8
  40d061:	mov    rdx,QWORD PTR [rsp+0xfb0]
  40d069:	mov    rcx,r14
  40d06c:	mov    r8,QWORD PTR [rdx-0x18]
  40d070:	call   0x4080a8
  40d075:	lea    rdx,[rip+0xa649]        # 0x4176c5
  40d07c:	mov    r8d,0x1
  40d082:	mov    rcx,rax
  40d085:	mov    rdi,rax
  40d088:	call   0x4080a8
  40d08d:	mov    rdx,QWORD PTR [rsp+0xfb0]
  40d095:	mov    rcx,rdi
  40d098:	mov    r8,QWORD PTR [rdx-0x18]
  40d09c:	call   0x4080a8
  40d0a1:	lea    rdx,[rip+0xa61d]        # 0x4176c5
  40d0a8:	mov    r8d,0x1
  40d0ae:	mov    rcx,rax
  40d0b1:	mov    rdi,rax
  40d0b4:	call   0x4080a8
  40d0b9:	mov    rax,QWORD PTR [rsp+0x38]
  40d0be:	mov    rcx,rdi
  40d0c1:	mov    r8,QWORD PTR [rax-0x18]
  40d0c5:	mov    rdx,rax
  40d0c8:	call   0x4080a8
  40d0cd:	mov    rdx,QWORD PTR [rsp+0x770]
  40d0d5:	mov    rcx,rax
  40d0d8:	mov    r8,QWORD PTR [rdx-0x18]
  40d0dc:	call   0x4080a8
  40d0e1:	mov    rbp,rax
  40d0e4:	mov    rax,QWORD PTR [rax]
  40d0e7:	mov    rax,QWORD PTR [rax-0x18]
  40d0eb:	mov    rdi,QWORD PTR [rbp+rax*1+0xf0]
  40d0f3:	test   rdi,rdi
  40d0f6:	je     0x41164a
  40d0fc:	cmp    BYTE PTR [rdi+0x38],0x0
  40d100:	je     0x40ff61
  40d106:	movsx  edx,BYTE PTR [rdi+0x43]
  40d10a:	mov    rcx,rbp
  40d10d:	call   0x4081b8
  40d112:	mov    rcx,rax
  40d115:	call   0x4081b0
  40d11a:	mov    r8d,DWORD PTR [r12]
  40d11e:	mov    rcx,QWORD PTR [rsp+0x770]
  40d126:	test   r8d,r8d
  40d129:	jne    0x410040
  40d12f:	mov    eax,DWORD PTR [rcx-0x8]
  40d132:	lea    edx,[rax-0x1]
  40d135:	test   eax,eax
  40d137:	mov    DWORD PTR [rcx-0x8],edx
  40d13a:	jle    0x410052
  40d140:	mov    edx,DWORD PTR [r12]
  40d144:	mov    rcx,QWORD PTR [rsp+0xfb0]
  40d14c:	test   edx,edx
  40d14e:	jne    0x410030
  40d154:	mov    eax,DWORD PTR [rcx-0x8]
  40d157:	lea    edx,[rax-0x1]
  40d15a:	mov    DWORD PTR [rcx-0x8],edx
  40d15d:	test   eax,eax
  40d15f:	jg     0x40cf60
  40d165:	sub    rcx,0x18
  40d169:	mov    rdx,rsi
  40d16c:	call   0x408190
  40d171:	mov    rcx,r13
  40d174:	call   0x40a078
  40d179:	test   eax,eax
  40d17b:	je     0x40cf70
  40d181:	mov    rcx,r13
  40d184:	call   QWORD PTR [rip+0x12852]        # 0x41f9dc
  40d18a:	lea    rcx,[r14+0x8]
  40d18e:	call   0x408108
  40d193:	test   rax,rax
  40d196:	je     0x410c05
  40d19c:	mov    rax,QWORD PTR [rsp+0x90]
  40d1a4:	lea    rcx,[r14+0x8]
  40d1a8:	mov    QWORD PTR [rsp+0xff0],rax
  40d1b0:	mov    rax,QWORD PTR [rip+0xbe89]        # 0x419040
  40d1b7:	add    rax,0x40
  40d1bb:	mov    QWORD PTR [rsp+0x10c0],rax
  40d1c3:	mov    rax,QWORD PTR [rip+0xbe66]        # 0x419030
  40d1ca:	add    rax,0x10
  40d1ce:	mov    QWORD PTR [rsp+0xff8],rax
  40d1d6:	call   0x408108
  40d1db:	lea    rcx,[r14+0x58]
  40d1df:	call   0x408118
  40d1e4:	mov    rax,QWORD PTR [rip+0xbe65]        # 0x419050
  40d1eb:	lea    rcx,[r14+0x40]
  40d1ef:	add    rax,0x10
  40d1f3:	mov    QWORD PTR [rsp+0xff8],rax
  40d1fb:	call   0x4080e8
  40d200:	mov    rbx,QWORD PTR [rsp+0x70]
  40d205:	lea    rcx,[r14+0xd0]
  40d20c:	mov    rax,QWORD PTR [rbx+0x8]
  40d210:	mov    rdx,QWORD PTR [rbx+0x10]
  40d214:	mov    QWORD PTR [rsp+0xff0],rax
  40d21c:	mov    rax,QWORD PTR [rax-0x18]
  40d220:	mov    QWORD PTR [rsp+rax*1+0xff0],rdx
  40d228:	mov    rax,QWORD PTR [rsp+0x80]
  40d230:	mov    QWORD PTR [rsp+0x10c0],rax
  40d238:	call   0x4080c0
  40d23d:	mov    eax,DWORD PTR [r12]
  40d241:	test   eax,eax
  40d243:	jne    0x41099f
  40d249:	mov    rbx,QWORD PTR [rsp+0x68]
  40d24e:	mov    eax,DWORD PTR [rbx-0x8]
  40d251:	lea    edx,[rax-0x1]
  40d254:	mov    DWORD PTR [rbx-0x8],edx
  40d257:	test   eax,eax
  40d259:	jle    0x410bc2
  40d25f:	mov    eax,DWORD PTR [r12]
  40d263:	mov    rdx,QWORD PTR [rsp+0xfa0]
  40d26b:	test   eax,eax
  40d26d:	jne    0x410992
  40d273:	mov    eax,DWORD PTR [rdx-0x8]
  40d276:	lea    ecx,[rax-0x1]
  40d279:	mov    DWORD PTR [rdx-0x8],ecx
  40d27c:	test   eax,eax
  40d27e:	jle    0x410baf
  40d284:	mov    eax,DWORD PTR [r12]
  40d288:	mov    rbx,QWORD PTR [rsp+0x38]
  40d28d:	test   eax,eax
  40d28f:	jne    0x410985
  40d295:	mov    eax,DWORD PTR [rbx-0x8]
  40d298:	lea    edx,[rax-0x1]
  40d29b:	mov    DWORD PTR [rbx-0x8],edx
  40d29e:	test   eax,eax
  40d2a0:	jle    0x410bed
  40d2a6:	mov    eax,DWORD PTR [r12]
  40d2aa:	mov    rdx,QWORD PTR [rsp+0xf90]
  40d2b2:	test   eax,eax
  40d2b4:	jne    0x410978
  40d2ba:	mov    eax,DWORD PTR [rdx-0x8]
  40d2bd:	lea    ecx,[rax-0x1]
  40d2c0:	mov    DWORD PTR [rdx-0x8],ecx
  40d2c3:	test   eax,eax
  40d2c5:	jle    0x410bda
  40d2cb:	mov    rax,QWORD PTR [rsp+0x78]
  40d2d0:	mov    rax,QWORD PTR [rax]
  40d2d3:	cmp    rax,QWORD PTR [rsp+0x88]
  40d2db:	mov    QWORD PTR [rsp+0x78],rax
  40d2e0:	jne    0x40c6a7
  40d2e6:	xor    ebp,ebp
  40d2e8:	mov    rax,QWORD PTR [rsp+0x200]
  40d2f0:	mov    rdx,r14
  40d2f3:	lea    rcx,[rax-0x18]
  40d2f7:	call   0x408188
  40d2fc:	mov    rax,QWORD PTR [rsp+0x1e0]
  40d304:	mov    rdx,r14
  40d307:	lea    rcx,[rax-0x18]
  40d30b:	call   0x408188
  40d310:	mov    rax,QWORD PTR [rsp+0x1d0]
  40d318:	mov    rdx,r14
  40d31b:	lea    rcx,[rax-0x18]
  40d31f:	call   0x408188
  40d324:	mov    rax,QWORD PTR [rsp+0x1c0]
  40d32c:	mov    rdx,r14
  40d32f:	lea    rcx,[rax-0x18]
  40d333:	call   0x408188
  40d338:	mov    rax,QWORD PTR [rsp+0x1b0]
  40d340:	mov    rdx,r14
  40d343:	lea    rcx,[rax-0x18]
  40d347:	call   0x408188
  40d34c:	mov    rax,QWORD PTR [rsp+0x1a0]
  40d354:	mov    rdx,r14
  40d357:	lea    rcx,[rax-0x18]
  40d35b:	call   0x408188
  40d360:	mov    rax,QWORD PTR [rsp+0x190]
  40d368:	mov    rdx,r14
  40d36b:	lea    rcx,[rax-0x18]
  40d36f:	call   0x408188
  40d374:	mov    rax,QWORD PTR [rsp+0x180]
  40d37c:	mov    rdx,r14
  40d37f:	lea    rcx,[rax-0x18]
  40d383:	call   0x408188
  40d388:	mov    rax,QWORD PTR [rsp+0x170]
  40d390:	mov    rdx,r14
  40d393:	lea    rcx,[rax-0x18]
  40d397:	call   0x408188
  40d39c:	mov    rcx,QWORD PTR [rsp+0xa0]
  40d3a4:	call   0x40a2d0
  40d3a9:	mov    rcx,QWORD PTR [rsp+0x88]
  40d3b1:	call   0x40a2d0
  40d3b6:	mov    rcx,QWORD PTR [rsp+0x50]
  40d3bb:	call   0x40a2d0
  40d3c0:	mov    rax,QWORD PTR [rsp+0x160]
  40d3c8:	mov    rdx,r14
  40d3cb:	lea    rcx,[rax-0x18]
  40d3cf:	call   0x408188
  40d3d4:	mov    rax,QWORD PTR [rsp+0x150]
  40d3dc:	mov    rdx,r14
  40d3df:	lea    rcx,[rax-0x18]
  40d3e3:	call   0x408188
  40d3e8:	mov    eax,ebp
  40d3ea:	add    rsp,0x11d8
  40d3f1:	pop    rbx
  40d3f2:	pop    rsi
  40d3f3:	pop    rdi
  40d3f4:	pop    rbp
  40d3f5:	pop    r12
  40d3f7:	pop    r13
  40d3f9:	pop    r14
  40d3fb:	pop    r15
  40d3fd:	ret    
  40d3fe:	xchg   ax,ax
  40d400:	mov    ecx,0xffffffff
  40d405:	lock xadd DWORD PTR [rdx-0x8],ecx
  40d40a:	test   ecx,ecx
  40d40c:	jg     0x40b486
  40d412:	lea    rcx,[rdx-0x18]
  40d416:	mov    rdx,QWORD PTR [rsp+0x30]
  40d41b:	mov    BYTE PTR [rsp+0x90],r8b
  40d423:	call   0x408190
  40d428:	movzx  r8d,BYTE PTR [rsp+0x90]
  40d431:	jmp    0x40b486
  40d436:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d440:	mov    rcx,r14
  40d443:	mov    r8,0xffffffffffffffff
  40d44a:	call   0x4081e0
  40d44f:	mov    rdx,QWORD PTR [rsp+0xff0]
  40d457:	mov    rcx,QWORD PTR [rsp+0x220]
  40d45f:	mov    rdx,QWORD PTR [rdx-0x18]
  40d463:	sub    rdx,QWORD PTR [rcx-0x18]
  40d467:	cmp    rax,rdx
  40d46a:	jne    0x40b4c3
  40d470:	xor    r9d,r9d
  40d473:	test   r9b,r9b
  40d476:	mov    r12d,0x1
  40d47c:	je     0x40b56c
  40d482:	mov    rax,QWORD PTR [rsp+0x230]
  40d48a:	mov    rdx,QWORD PTR [rsp+0x30]
  40d48f:	lea    rcx,[rax-0x18]
  40d493:	call   0x408188
  40d498:	mov    eax,DWORD PTR [rsi]
  40d49a:	mov    rdx,QWORD PTR [rsp+0x220]
  40d4a2:	test   eax,eax
  40d4a4:	je     0x40b57e
  40d4aa:	mov    eax,0xffffffff
  40d4af:	lock xadd DWORD PTR [rdx-0x8],eax
  40d4b4:	test   eax,eax
  40d4b6:	jg     0x40b58f
  40d4bc:	lea    rcx,[rdx-0x18]
  40d4c0:	mov    rdx,QWORD PTR [rsp+0x30]
  40d4c5:	call   0x408190
  40d4ca:	jmp    0x40b58f
  40d4cf:	nop
  40d4d0:	mov    BYTE PTR [rsp+0x90],al
  40d4d7:	mov    rax,QWORD PTR [rsp+0x260]
  40d4df:	mov    rdx,QWORD PTR [rsp+0x30]
  40d4e4:	mov    BYTE PTR [rsp+0xb8],r8b
  40d4ec:	mov    BYTE PTR [rsp+0xb0],r9b
  40d4f4:	lea    rcx,[rax-0x18]
  40d4f8:	call   0x408188
  40d4fd:	movzx  eax,BYTE PTR [rsp+0x90]
  40d505:	movzx  r8d,BYTE PTR [rsp+0xb8]
  40d50e:	movzx  r9d,BYTE PTR [rsp+0xb0]
  40d517:	test   al,al
  40d519:	je     0x40b55a
  40d51f:	mov    r10d,DWORD PTR [rsi]
  40d522:	mov    rdx,QWORD PTR [rsp+0x250]
  40d52a:	test   r10d,r10d
  40d52d:	jne    0x40db6a
  40d533:	mov    eax,DWORD PTR [rdx-0x8]
  40d536:	lea    ecx,[rax-0x1]
  40d539:	mov    DWORD PTR [rdx-0x8],ecx
  40d53c:	test   eax,eax
  40d53e:	jg     0x40b55a
  40d544:	lea    rcx,[rdx-0x18]
  40d548:	mov    rdx,QWORD PTR [rsp+0x30]
  40d54d:	mov    BYTE PTR [rsp+0xb0],r8b
  40d555:	mov    BYTE PTR [rsp+0x90],r9b
  40d55d:	call   0x408190
  40d562:	movzx  r8d,BYTE PTR [rsp+0xb0]
  40d56b:	movzx  r9d,BYTE PTR [rsp+0x90]
  40d574:	test   r8b,r8b
  40d577:	je     0x40b563
  40d57d:	nop    DWORD PTR [rax]
  40d580:	mov    ecx,DWORD PTR [rsi]
  40d582:	mov    rdx,QWORD PTR [rsp+0x240]
  40d58a:	test   ecx,ecx
  40d58c:	jne    0x40db79
  40d592:	mov    eax,DWORD PTR [rdx-0x8]
  40d595:	lea    ecx,[rax-0x1]
  40d598:	mov    DWORD PTR [rdx-0x8],ecx
  40d59b:	test   eax,eax
  40d59d:	jg     0x40b563
  40d5a3:	lea    rcx,[rdx-0x18]
  40d5a7:	mov    rdx,QWORD PTR [rsp+0x30]
  40d5ac:	mov    BYTE PTR [rsp+0x90],r9b
  40d5b4:	call   0x408190
  40d5b9:	movzx  r9d,BYTE PTR [rsp+0x90]
  40d5c2:	jmp    0x40b563
  40d5c7:	nop    WORD PTR [rax+rax*1+0x0]
  40d5d0:	mov    r8,QWORD PTR [rsp+0x40]
  40d5d5:	lea    rcx,[rsp+0x2d0]
  40d5dd:	lea    rdx,[rip+0xa17b]        # 0x41775f
  40d5e4:	call   0x408138
  40d5e9:	mov    rdx,QWORD PTR [rsp+0x2d0]
  40d5f1:	mov    rax,QWORD PTR [rsp+0xff0]
  40d5f9:	mov    r9,QWORD PTR [rdx-0x18]
  40d5fd:	cmp    QWORD PTR [rax-0x18],r9
  40d601:	jae    0x40da50
  40d607:	lea    r12,[rsp+0x2e0]
  40d60f:	lea    rdx,[rip+0xa45f]        # 0x417a75
  40d616:	mov    r8,r15
  40d619:	mov    rcx,r12
  40d61c:	call   0x408138
  40d621:	mov    rdx,r12
  40d624:	mov    rcx,r14
  40d627:	call   0x40a270
  40d62c:	mov    r12d,eax
  40d62f:	mov    rax,QWORD PTR [rsp+0x2e0]
  40d637:	mov    r13,QWORD PTR [rsp+0x30]
  40d63c:	lea    rcx,[rax-0x18]
  40d640:	mov    rdx,r13
  40d643:	call   0x408188
  40d648:	mov    rax,QWORD PTR [rsp+0x2d0]
  40d650:	mov    rdx,r13
  40d653:	lea    rcx,[rax-0x18]
  40d657:	call   0x408188
  40d65c:	test   r12b,r12b
  40d65f:	jne    0x40da8e
  40d665:	mov    r8,QWORD PTR [rsp+0x40]
  40d66a:	lea    rcx,[rsp+0x310]
  40d672:	lea    rdx,[rip+0xa0e9]        # 0x417762
  40d679:	call   0x408138
  40d67e:	mov    rdx,QWORD PTR [rsp+0x310]
  40d686:	mov    rax,QWORD PTR [rsp+0xff0]
  40d68e:	mov    r9,QWORD PTR [rdx-0x18]
  40d692:	cmp    QWORD PTR [rax-0x18],r9
  40d696:	jae    0x40d907
  40d69c:	lea    r12,[rsp+0x320]
  40d6a4:	lea    rdx,[rip+0xa3cf]        # 0x417a7a
  40d6ab:	mov    r8,r15
  40d6ae:	mov    rcx,r12
  40d6b1:	call   0x408138
  40d6b6:	mov    rdx,r12
  40d6b9:	mov    rcx,r14
  40d6bc:	call   0x40a270
  40d6c1:	mov    r12d,eax
  40d6c4:	mov    rax,QWORD PTR [rsp+0x320]
  40d6cc:	mov    r13,QWORD PTR [rsp+0x30]
  40d6d1:	lea    rcx,[rax-0x18]
  40d6d5:	mov    rdx,r13
  40d6d8:	call   0x408188
  40d6dd:	mov    rax,QWORD PTR [rsp+0x310]
  40d6e5:	mov    rdx,r13
  40d6e8:	lea    rcx,[rax-0x18]
  40d6ec:	call   0x408188
  40d6f1:	test   r12b,r12b
  40d6f4:	jne    0x40d945
  40d6fa:	lea    rdx,[rip+0xa066]        # 0x417767
  40d701:	mov    rcx,r14
  40d704:	call   0x4081c8
  40d709:	test   eax,eax
  40d70b:	jne    0x40ec50
  40d711:	lea    rbp,[rsp+0x350]
  40d719:	lea    rdx,[rip+0x8bd3]        # 0x4162f3
  40d720:	mov    r8,r15
  40d723:	mov    BYTE PTR [rip+0xf936],0x1        # 0x41d060
  40d72a:	mov    rcx,rbp
  40d72d:	call   0x408138
  40d732:	lea    rcx,[rip+0xf947]        # 0x41d080
  40d739:	mov    rdx,rbp
  40d73c:	call   0x40a360
  40d741:	lea    rdx,[rip+0xa044]        # 0x41778c
  40d748:	mov    rcx,rax
  40d74b:	call   0x4081c8
  40d750:	mov    ebp,eax
  40d752:	mov    rax,QWORD PTR [rsp+0x350]
  40d75a:	mov    rdx,QWORD PTR [rsp+0x30]
  40d75f:	lea    rcx,[rax-0x18]
  40d763:	call   0x408188
  40d768:	test   ebp,ebp
  40d76a:	jne    0x40d7ba
  40d76c:	lea    rbp,[rsp+0x360]
  40d774:	lea    rdx,[rip+0x8b78]        # 0x4162f3
  40d77b:	mov    r8,r15
  40d77e:	mov    rcx,rbp
  40d781:	call   0x408138
  40d786:	lea    rcx,[rip+0xf8f3]        # 0x41d080
  40d78d:	mov    rdx,rbp
  40d790:	call   0x40a360
  40d795:	lea    rdx,[rip+0x9ff8]        # 0x417794
  40d79c:	mov    rcx,rax
  40d79f:	call   0x408178
  40d7a4:	mov    rax,QWORD PTR [rsp+0x360]
  40d7ac:	mov    rdx,QWORD PTR [rsp+0x30]
  40d7b1:	lea    rcx,[rax-0x18]
  40d7b5:	call   0x408188
  40d7ba:	lea    rbp,[rsp+0x370]
  40d7c2:	lea    rdx,[rip+0x8b4e]        # 0x416317
  40d7c9:	mov    r8,r15
  40d7cc:	mov    rcx,rbp
  40d7cf:	call   0x408138
  40d7d4:	lea    rcx,[rip+0xf8a5]        # 0x41d080
  40d7db:	mov    rdx,rbp
  40d7de:	call   0x40a360
  40d7e3:	lea    rdx,[rip+0x9fa2]        # 0x41778c
  40d7ea:	mov    rcx,rax
  40d7ed:	call   0x4081c8
  40d7f2:	mov    ebp,eax
  40d7f4:	mov    rax,QWORD PTR [rsp+0x370]
  40d7fc:	mov    rdx,QWORD PTR [rsp+0x30]
  40d801:	lea    rcx,[rax-0x18]
  40d805:	call   0x408188
  40d80a:	test   ebp,ebp
  40d80c:	jne    0x40d85c
  40d80e:	lea    rbp,[rsp+0x380]
  40d816:	lea    rdx,[rip+0x8afa]        # 0x416317
  40d81d:	mov    r8,r15
  40d820:	mov    rcx,rbp
  40d823:	call   0x408138
  40d828:	lea    rcx,[rip+0xf851]        # 0x41d080
  40d82f:	mov    rdx,rbp
  40d832:	call   0x40a360
  40d837:	lea    rdx,[rip+0x9f56]        # 0x417794
  40d83e:	mov    rcx,rax
  40d841:	call   0x408178
  40d846:	mov    rax,QWORD PTR [rsp+0x380]
  40d84e:	mov    rdx,QWORD PTR [rsp+0x30]
  40d853:	lea    rcx,[rax-0x18]
  40d857:	call   0x408188
  40d85c:	lea    rbp,[rsp+0x390]
  40d864:	lea    rdx,[rip+0x8b2e]        # 0x416399
  40d86b:	mov    r8,r15
  40d86e:	mov    rcx,rbp
  40d871:	call   0x408138
  40d876:	lea    rcx,[rip+0xf803]        # 0x41d080
  40d87d:	mov    rdx,rbp
  40d880:	call   0x40a360
  40d885:	lea    rdx,[rip+0x9f00]        # 0x41778c
  40d88c:	mov    rcx,rax
  40d88f:	call   0x4081c8
  40d894:	mov    ebp,eax
  40d896:	mov    rax,QWORD PTR [rsp+0x390]
  40d89e:	mov    rdx,QWORD PTR [rsp+0x30]
  40d8a3:	lea    rcx,[rax-0x18]
  40d8a7:	call   0x408188
  40d8ac:	test   ebp,ebp
  40d8ae:	jne    0x40b388
  40d8b4:	lea    rbp,[rsp+0x3a0]
  40d8bc:	lea    rdx,[rip+0x8ad6]        # 0x416399
  40d8c3:	mov    r8,r15
  40d8c6:	mov    rcx,rbp
  40d8c9:	call   0x408138
  40d8ce:	lea    rcx,[rip+0xf7ab]        # 0x41d080
  40d8d5:	mov    rdx,rbp
  40d8d8:	call   0x40a360
  40d8dd:	lea    rdx,[rip+0x9eb0]        # 0x417794
  40d8e4:	mov    rcx,rax
  40d8e7:	call   0x408178
  40d8ec:	mov    rax,QWORD PTR [rsp+0x3a0]
  40d8f4:	mov    rdx,QWORD PTR [rsp+0x30]
  40d8f9:	lea    rcx,[rax-0x18]
  40d8fd:	call   0x408188
  40d902:	jmp    0x40b388
  40d907:	mov    rcx,r14
  40d90a:	mov    r8,0xffffffffffffffff
  40d911:	call   0x4081e0
  40d916:	mov    rcx,QWORD PTR [rsp+0x310]
  40d91e:	mov    rdx,QWORD PTR [rsp+0xff0]
  40d926:	mov    rdx,QWORD PTR [rdx-0x18]
  40d92a:	sub    rdx,QWORD PTR [rcx-0x18]
  40d92e:	cmp    rax,rdx
  40d931:	jne    0x40d69c
  40d937:	mov    rdx,QWORD PTR [rsp+0x30]
  40d93c:	sub    rcx,0x18
  40d940:	call   0x408188
  40d945:	lea    rcx,[rsp+0x150]
  40d94d:	mov    rdx,r14
  40d950:	call   0x408158
  40d955:	lea    r12,[rsp+0x330]
  40d95d:	mov    rdx,r14
  40d960:	mov    rcx,r12
  40d963:	call   0x401f10
  40d968:	lea    rbp,[rsp+0x340]
  40d970:	lea    rdx,[rip+0x9d4e]        # 0x4176c5
  40d977:	mov    r8,r12
  40d97a:	mov    rcx,rbp
  40d97d:	call   0x40af30
  40d982:	mov    rcx,QWORD PTR [rsp+0xc8]
  40d98a:	mov    rdx,rbp
  40d98d:	call   0x408168
  40d992:	mov    rax,QWORD PTR [rsp+0x340]
  40d99a:	mov    rbp,QWORD PTR [rsp+0x30]
  40d99f:	lea    rcx,[rax-0x18]
  40d9a3:	mov    rdx,rbp
  40d9a6:	call   0x408188
  40d9ab:	mov    rax,QWORD PTR [rsp+0x330]
  40d9b3:	mov    rdx,rbp
  40d9b6:	lea    rcx,[rax-0x18]
  40d9ba:	call   0x408188
  40d9bf:	jmp    0x40b388
  40d9c4:	mov    rcx,r14
  40d9c7:	mov    r8,0xffffffffffffffff
  40d9ce:	call   0x4081e0
  40d9d3:	mov    rdx,QWORD PTR [rsp+0xff0]
  40d9db:	mov    rcx,QWORD PTR [rsp+0x290]
  40d9e3:	mov    rdx,QWORD PTR [rdx-0x18]
  40d9e7:	sub    rdx,QWORD PTR [rcx-0x18]
  40d9eb:	cmp    rax,rdx
  40d9ee:	jne    0x40b61b
  40d9f4:	test   r12b,r12b
  40d9f7:	mov    r13d,0x1
  40d9fd:	je     0x40b6ac
  40da03:	mov    rax,QWORD PTR [rsp+0x2a0]
  40da0b:	mov    rdx,QWORD PTR [rsp+0x30]
  40da10:	lea    rcx,[rax-0x18]
  40da14:	call   0x408188
  40da19:	mov    eax,DWORD PTR [rsi]
  40da1b:	mov    rdx,QWORD PTR [rsp+0x290]
  40da23:	test   eax,eax
  40da25:	je     0x40b6be
  40da2b:	mov    eax,0xffffffff
  40da30:	lock xadd DWORD PTR [rdx-0x8],eax
  40da35:	test   eax,eax
  40da37:	jg     0x40b6cf
  40da3d:	lea    rcx,[rdx-0x18]
  40da41:	mov    rdx,QWORD PTR [rsp+0x30]
  40da46:	call   0x408190
  40da4b:	jmp    0x40b6cf
  40da50:	mov    rcx,r14
  40da53:	mov    r8,0xffffffffffffffff
  40da5a:	call   0x4081e0
  40da5f:	mov    rcx,QWORD PTR [rsp+0x2d0]
  40da67:	mov    rdx,QWORD PTR [rsp+0xff0]
  40da6f:	mov    rdx,QWORD PTR [rdx-0x18]
  40da73:	sub    rdx,QWORD PTR [rcx-0x18]
  40da77:	cmp    rax,rdx
  40da7a:	jne    0x40d607
  40da80:	mov    rdx,QWORD PTR [rsp+0x30]
  40da85:	sub    rcx,0x18
  40da89:	call   0x408188
  40da8e:	lea    rcx,[rsp+0x150]
  40da96:	mov    rdx,r14
  40da99:	call   0x408158
  40da9e:	lea    rbp,[rsp+0x2f0]
  40daa6:	mov    rdx,r14
  40daa9:	mov    rcx,rbp
  40daac:	call   0x401f10
  40dab1:	lea    r8,[rip+0x9c0d]        # 0x4176c5
  40dab8:	mov    r9d,0x1
  40dabe:	xor    edx,edx
  40dac0:	mov    rcx,rbp
  40dac3:	call   0x408150
  40dac8:	mov    rbp,rax
  40dacb:	mov    rax,QWORD PTR [rax]
  40dace:	lea    r8,[rsp+0x107]
  40dad6:	xor    edx,edx
  40dad8:	xor    ecx,ecx
  40dada:	mov    QWORD PTR [rsp+0x300],rax
  40dae2:	call   0x4081a0
  40dae7:	mov    rcx,QWORD PTR [rsp+0x68]
  40daec:	lea    rdx,[rsp+0x300]
  40daf4:	mov    QWORD PTR [rbp+0x0],rax
  40daf8:	call   0x408168
  40dafd:	mov    rax,QWORD PTR [rsp+0x300]
  40db05:	mov    rbp,QWORD PTR [rsp+0x30]
  40db0a:	lea    rcx,[rax-0x18]
  40db0e:	mov    rdx,rbp
  40db11:	call   0x408188
  40db16:	mov    rax,QWORD PTR [rsp+0x2f0]
  40db1e:	mov    rdx,rbp
  40db21:	lea    rcx,[rax-0x18]
  40db25:	call   0x408188
  40db2a:	jmp    0x40b388
  40db2f:	mov    rcx,r14
  40db32:	mov    r8,0xffffffffffffffff
  40db39:	call   0x4081e0
  40db3e:	mov    rdx,QWORD PTR [rsp+0xff0]
  40db46:	mov    rcx,QWORD PTR [rsp+0x230]
  40db4e:	mov    rdx,QWORD PTR [rdx-0x18]
  40db52:	sub    rdx,QWORD PTR [rcx-0x18]
  40db56:	cmp    rax,rdx
  40db59:	jne    0x40b4fd
  40db5f:	mov    r9d,0x1
  40db65:	jmp    0x40d473
  40db6a:	mov    eax,0xffffffff
  40db6f:	lock xadd DWORD PTR [rdx-0x8],eax
  40db74:	jmp    0x40d53c
  40db79:	mov    eax,0xffffffff
  40db7e:	lock xadd DWORD PTR [rdx-0x8],eax
  40db83:	jmp    0x40d59b
  40db88:	mov    rcx,r14
  40db8b:	mov    r8,0xffffffffffffffff
  40db92:	call   0x4081e0
  40db97:	mov    rdx,QWORD PTR [rsp+0xff0]
  40db9f:	mov    rcx,QWORD PTR [rsp+0x2a0]
  40dba7:	mov    rdx,QWORD PTR [rdx-0x18]
  40dbab:	sub    rdx,QWORD PTR [rcx-0x18]
  40dbaf:	cmp    rax,rdx
  40dbb2:	jne    0x40b655
  40dbb8:	mov    r12d,0x1
  40dbbe:	jmp    0x40d9f4
  40dbc3:	mov    rax,QWORD PTR [rsp+0x1a0]
  40dbcb:	cmp    QWORD PTR [rax-0x18],0x0
  40dbd0:	je     0x40f659
  40dbd6:	mov    rdi,QWORD PTR [rsp+0xa8]
  40dbde:	mov    rdx,QWORD PTR [rsp+0xc0]
  40dbe6:	mov    rcx,rdi
  40dbe9:	call   0x408158
  40dbee:	mov    rax,QWORD PTR [rsp+0x190]
  40dbf6:	lea    rbx,[rsp+0x4f0]
  40dbfe:	or     r9,0xffffffffffffffff
  40dc02:	mov    rdx,rdi
  40dc05:	mov    rcx,rbx
  40dc08:	mov    r8,QWORD PTR [rax-0x18]
  40dc0c:	mov    rax,QWORD PTR [rsp+0x200]
  40dc14:	sub    r8,QWORD PTR [rax-0x18]
  40dc18:	call   0x4081d0
  40dc1d:	mov    rdx,QWORD PTR [rsp+0xd0]
  40dc25:	mov    rcx,rbx
  40dc28:	call   0x40ae70
  40dc2d:	mov    ebx,eax
  40dc2f:	mov    rax,QWORD PTR [rsp+0x4f0]
  40dc37:	mov    rdx,r14
  40dc3a:	lea    rcx,[rax-0x18]
  40dc3e:	call   0x408188
  40dc43:	test   bl,bl
  40dc45:	jne    0x40b79d
  40dc4b:	mov    rdx,QWORD PTR [rsp+0xd0]
  40dc53:	mov    rcx,QWORD PTR [rsp+0xa8]
  40dc5b:	call   0x408168
  40dc60:	jmp    0x40b79d
  40dc65:	lea    rbx,[rsp+0x4d0]
  40dc6d:	lea    r8,[rsp+0xff]
  40dc75:	lea    rdx,[rip+0x9a56]        # 0x4176d2
  40dc7c:	mov    rcx,rbx
  40dc7f:	call   0x408138
  40dc84:	lea    rcx,[rip+0xf3f5]        # 0x41d080
  40dc8b:	mov    rdx,rbx
  40dc8e:	call   0x40a360
  40dc93:	lea    rdx,[rip+0x9cc8]        # 0x417962
  40dc9a:	xor    r8d,r8d
  40dc9d:	mov    rcx,rax
  40dca0:	call   0x408200
  40dca5:	mov    rbx,rax
  40dca8:	mov    rax,QWORD PTR [rsp+0x4d0]
  40dcb0:	mov    rdx,r14
  40dcb3:	lea    rcx,[rax-0x18]
  40dcb7:	call   0x408188
  40dcbc:	add    rbx,0x1
  40dcc0:	je     0x40b77c
  40dcc6:	mov    rcx,QWORD PTR [rsp+0x60]
  40dccb:	lea    rdx,[rip+0x9c93]        # 0x417965
  40dcd2:	call   0x408178
  40dcd7:	jmp    0x40b77c
  40dcdc:	lea    r12,[rsp+0x2c0]
  40dce4:	lea    rdx,[rip+0x9a6f]        # 0x41775a
  40dceb:	mov    r8,r15
  40dcee:	mov    rcx,r12
  40dcf1:	call   0x408138
  40dcf6:	mov    rdx,r12
  40dcf9:	mov    rcx,r14
  40dcfc:	mov    r12d,0x1
  40dd02:	call   0x40a270
  40dd07:	mov    r13d,eax
  40dd0a:	mov    rax,QWORD PTR [rsp+0x2c0]
  40dd12:	mov    rdx,QWORD PTR [rsp+0x30]
  40dd17:	lea    rcx,[rax-0x18]
  40dd1b:	call   0x408188
  40dd20:	jmp    0x40b68d
  40dd25:	mov    rcx,rsi
  40dd28:	call   0x4081c0
  40dd2d:	mov    rax,QWORD PTR [rsi]
  40dd30:	lea    rcx,[rip+0xffffffffffffc589]        # 0x40a2c0
  40dd37:	mov    edx,0xa
  40dd3c:	mov    rax,QWORD PTR [rax+0x30]
  40dd40:	cmp    rax,rcx
  40dd43:	je     0x40c472
  40dd49:	mov    rcx,rsi
  40dd4c:	call   rax
  40dd4e:	movsx  edx,al
  40dd51:	jmp    0x40c472
  40dd56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dd60:	mov    rdx,QWORD PTR [rsp+0xf60]
  40dd68:	mov    rcx,r14
  40dd6b:	mov    r8,QWORD PTR [rdx-0x18]
  40dd6f:	call   0x4080a8
  40dd74:	mov    rdi,rax
  40dd77:	mov    rax,QWORD PTR [rax]
  40dd7a:	mov    rax,QWORD PTR [rax-0x18]
  40dd7e:	mov    rsi,QWORD PTR [rdi+rax*1+0xf0]
  40dd86:	test   rsi,rsi
  40dd89:	je     0x41157a
  40dd8f:	cmp    BYTE PTR [rsi+0x38],0x0
  40dd93:	je     0x40de25
  40dd99:	movsx  edx,BYTE PTR [rsi+0x43]
  40dd9d:	mov    rcx,rdi
  40dda0:	call   0x4081b8
  40dda5:	mov    rcx,rax
  40dda8:	call   0x4081b0
  40ddad:	jmp    0x40c2d0
  40ddb2:	mov    eax,0xffffffff
  40ddb7:	lock xadd DWORD PTR [rcx-0x8],eax
  40ddbc:	test   eax,eax
  40ddbe:	jg     0x40c31a
  40ddc4:	mov    rdx,QWORD PTR [rsp+0x30]
  40ddc9:	sub    rcx,0x18
  40ddcd:	call   0x408190
  40ddd2:	jmp    0x40c31a
  40ddd7:	nop    WORD PTR [rax+rax*1+0x0]
  40dde0:	lea    r9,[rsi+0x2]
  40dde4:	xor    r8d,r8d
  40dde7:	jmp    0x40c37d
  40ddec:	nop    DWORD PTR [rax+0x0]
  40ddf0:	mov    eax,0xffffffff
  40ddf5:	lock xadd DWORD PTR [rcx-0x8],eax
  40ddfa:	jmp    0x40c4c2
  40ddff:	nop
  40de00:	mov    eax,0xffffffff
  40de05:	lock xadd DWORD PTR [rcx-0x8],eax
  40de0a:	test   eax,eax
  40de0c:	jg     0x40c4a6
  40de12:	mov    rdx,QWORD PTR [rsp+0x40]
  40de17:	sub    rcx,0x18
  40de1b:	call   0x408190
  40de20:	jmp    0x40c4a6
  40de25:	mov    rcx,rsi
  40de28:	call   0x4081c0
  40de2d:	mov    rax,QWORD PTR [rsi]
  40de30:	lea    rcx,[rip+0xffffffffffffc489]        # 0x40a2c0
  40de37:	mov    edx,0xa
  40de3c:	mov    rax,QWORD PTR [rax+0x30]
  40de40:	cmp    rax,rcx
  40de43:	je     0x40dd9d
  40de49:	mov    rcx,rsi
  40de4c:	call   rax
  40de4e:	movsx  edx,al
  40de51:	jmp    0x40dd9d
  40de56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de60:	mov    rdx,QWORD PTR [rsp+0xa8]
  40de68:	lea    rcx,[rsp+0x610]
  40de70:	call   0x408168
  40de75:	jmp    0x40bf25
  40de7a:	mov    rbx,r13
  40de7d:	nop    DWORD PTR [rax]
  40de80:	mov    rax,QWORD PTR [rsp+0x48]
  40de85:	lea    r8,[rip+0xacbc]        # 0x418b48
  40de8c:	lea    rcx,[rip+0xf1ed]        # 0x41d080
  40de93:	mov    rdx,rbx
  40de96:	mov    QWORD PTR [rsp+0xf90],rax
  40de9e:	lea    rax,[rsp+0xf90]
  40dea6:	mov    r9,rax
  40dea9:	mov    QWORD PTR [rsp+0x48],rax
  40deae:	lea    rax,[rsp+0x10b]
  40deb6:	mov    QWORD PTR [rsp+0x20],rax
  40debb:	call   0x40a730
  40dec0:	jmp    0x40bb9e
  40dec5:	mov    rbx,r13
  40dec8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ded0:	mov    rax,QWORD PTR [rsp+0x48]
  40ded5:	lea    rsi,[rsp+0xf80]
  40dedd:	lea    r8,[rip+0xac64]        # 0x418b48
  40dee4:	lea    rcx,[rip+0xf195]        # 0x41d080
  40deeb:	mov    rdx,rbx
  40deee:	mov    r9,rsi
  40def1:	mov    QWORD PTR [rsp+0xf80],rax
  40def9:	lea    rax,[rsp+0x10a]
  40df01:	mov    QWORD PTR [rsp+0x20],rax
  40df06:	call   0x40a730
  40df0b:	jmp    0x40baa9
  40df10:	lea    r13,[rip+0xf171]        # 0x41d088
  40df17:	mov    rbx,r13
  40df1a:	nop    WORD PTR [rax+rax*1+0x0]
  40df20:	mov    rax,QWORD PTR [rsp+0x40]
  40df25:	lea    rsi,[rsp+0xf70]
  40df2d:	lea    r8,[rip+0xac14]        # 0x418b48
  40df34:	lea    rcx,[rip+0xf145]        # 0x41d080
  40df3b:	mov    rdx,rbx
  40df3e:	mov    r9,rsi
  40df41:	mov    QWORD PTR [rsp+0xf70],rax
  40df49:	lea    rax,[rsp+0x109]
  40df51:	mov    QWORD PTR [rsp+0x20],rax
  40df56:	call   0x40a730
  40df5b:	jmp    0x40b9b8
  40df60:	mov    rbx,r13
  40df63:	mov    rax,QWORD PTR [rsp+0xb0]
  40df6b:	lea    r9,[rsp+0xfa0]
  40df73:	lea    r8,[rip+0xabce]        # 0x418b48
  40df7a:	lea    rcx,[rip+0xf0ff]        # 0x41d080
  40df81:	mov    rdx,rbx
  40df84:	mov    QWORD PTR [rsp+0xfa0],rax
  40df8c:	lea    rax,[rsp+0x10c]
  40df94:	mov    QWORD PTR [rsp+0x20],rax
  40df99:	call   0x40a730
  40df9e:	jmp    0x40bc90
  40dfa3:	mov    eax,0xffffffff
  40dfa8:	lock xadd DWORD PTR [rdx-0x8],eax
  40dfad:	test   eax,eax
  40dfaf:	jg     0x40c046
  40dfb5:	lea    rcx,[rdx-0x18]
  40dfb9:	mov    rdx,r14
  40dfbc:	call   0x408190
  40dfc1:	mov    ebx,DWORD PTR [rbp+0x0]
  40dfc4:	mov    rdx,QWORD PTR [rsp+0x590]
  40dfcc:	test   ebx,ebx
  40dfce:	je     0x40c059
  40dfd4:	mov    eax,0xffffffff
  40dfd9:	lock xadd DWORD PTR [rdx-0x8],eax
  40dfde:	test   eax,eax
  40dfe0:	jg     0x40c06a
  40dfe6:	lea    rcx,[rdx-0x18]
  40dfea:	mov    rdx,r14
  40dfed:	call   0x408190
  40dff2:	jmp    0x40c06a
  40dff7:	mov    eax,0xffffffff
  40dffc:	lock xadd DWORD PTR [rdx-0x8],eax
  40e001:	test   eax,eax
  40e003:	jg     0x40c022
  40e009:	lea    rcx,[rdx-0x18]
  40e00d:	mov    rdx,r14
  40e010:	call   0x408190
  40e015:	jmp    0x40c022
  40e01a:	mov    eax,0xffffffff
  40e01f:	lock xadd DWORD PTR [rdx-0x8],eax
  40e024:	test   eax,eax
  40e026:	jg     0x40bffe
  40e02c:	lea    rcx,[rdx-0x18]
  40e030:	mov    rdx,r14
  40e033:	call   0x408190
  40e038:	jmp    0x40bffe
  40e03d:	mov    eax,0xffffffff
  40e042:	lock xadd DWORD PTR [rdx-0x8],eax
  40e047:	test   eax,eax
  40e049:	jg     0x40bfd8
  40e04f:	lea    rcx,[rdx-0x18]
  40e053:	mov    rdx,r14
  40e056:	call   0x408190
  40e05b:	jmp    0x40bfd8
  40e060:	mov    eax,0xffffffff
  40e065:	lock xadd DWORD PTR [rdx-0x8],eax
  40e06a:	test   eax,eax
  40e06c:	jg     0x40c16e
  40e072:	lea    rcx,[rdx-0x18]
  40e076:	mov    rdx,r14
  40e079:	call   0x408190
  40e07e:	mov    eax,DWORD PTR [rbp+0x0]
  40e081:	mov    rdx,QWORD PTR [rsp+0x620]
  40e089:	test   eax,eax
  40e08b:	je     0x40c181
  40e091:	mov    eax,0xffffffff
  40e096:	lock xadd DWORD PTR [rdx-0x8],eax
  40e09b:	test   eax,eax
  40e09d:	jg     0x40c192
  40e0a3:	lea    rcx,[rdx-0x18]
  40e0a7:	mov    rdx,r14
  40e0aa:	call   0x408190
  40e0af:	jmp    0x40c192
  40e0b4:	mov    eax,0xffffffff
  40e0b9:	lock xadd DWORD PTR [rdx-0x8],eax
  40e0be:	test   eax,eax
  40e0c0:	jg     0x40c14a
  40e0c6:	lea    rcx,[rdx-0x18]
  40e0ca:	mov    rdx,r14
  40e0cd:	call   0x408190
  40e0d2:	jmp    0x40c14a
  40e0d7:	mov    eax,0xffffffff
  40e0dc:	lock xadd DWORD PTR [rdx-0x8],eax
  40e0e1:	test   eax,eax
  40e0e3:	jg     0x40c126
  40e0e9:	lea    rcx,[rdx-0x18]
  40e0ed:	mov    rdx,r14
  40e0f0:	call   0x408190
  40e0f5:	jmp    0x40c126
  40e0fa:	mov    eax,0xffffffff
  40e0ff:	lock xadd DWORD PTR [rdx-0x8],eax
  40e104:	test   eax,eax
  40e106:	jg     0x40c102
  40e10c:	lea    rcx,[rdx-0x18]
  40e110:	mov    rdx,r14
  40e113:	call   0x408190
  40e118:	jmp    0x40c102
  40e11d:	mov    eax,0xffffffff
  40e122:	lock xadd DWORD PTR [rdx-0x8],eax
  40e127:	test   eax,eax
  40e129:	jg     0x40c0dc
  40e12f:	lea    rcx,[rdx-0x18]
  40e133:	mov    rdx,r14
  40e136:	call   0x408190
  40e13b:	jmp    0x40c0dc
  40e140:	mov    eax,0xffffffff
  40e145:	lock xadd DWORD PTR [rdx-0x8],eax
  40e14a:	test   eax,eax
  40e14c:	jg     0x40c0b6
  40e152:	lea    rcx,[rdx-0x18]
  40e156:	mov    rdx,r14
  40e159:	call   0x408190
  40e15e:	jmp    0x40c0b6
  40e163:	mov    eax,0xffffffff
  40e168:	lock xadd DWORD PTR [rdx-0x8],eax
  40e16d:	test   eax,eax
  40e16f:	jg     0x40c090
  40e175:	lea    rcx,[rdx-0x18]
  40e179:	mov    rdx,r14
  40e17c:	call   0x408190
  40e181:	jmp    0x40c090
  40e186:	mov    eax,0xffffffff
  40e18b:	lock xadd DWORD PTR [rdx-0x8],eax
  40e190:	test   eax,eax
  40e192:	jg     0x40bf68
  40e198:	lea    rcx,[rdx-0x18]
  40e19c:	mov    rdx,r14
  40e19f:	call   0x408190
  40e1a4:	mov    eax,DWORD PTR [rbp+0x0]
  40e1a7:	mov    rdx,QWORD PTR [rsp+0x600]
  40e1af:	test   eax,eax
  40e1b1:	je     0x40bf7b
  40e1b7:	mov    eax,0xffffffff
  40e1bc:	lock xadd DWORD PTR [rdx-0x8],eax
  40e1c1:	test   eax,eax
  40e1c3:	jg     0x40bf8c
  40e1c9:	lea    rcx,[rdx-0x18]
  40e1cd:	mov    rdx,r14
  40e1d0:	call   0x408190
  40e1d5:	jmp    0x40bf8c
  40e1da:	mov    eax,0xffffffff
  40e1df:	lock xadd DWORD PTR [rdx-0x8],eax
  40e1e4:	test   eax,eax
  40e1e6:	jg     0x40bfb2
  40e1ec:	lea    rcx,[rdx-0x18]
  40e1f0:	mov    rdx,r14
  40e1f3:	call   0x408190
  40e1f8:	jmp    0x40bfb2
  40e1fd:	mov    eax,0xffffffff
  40e202:	lock xadd DWORD PTR [rdx-0x8],eax
  40e207:	test   eax,eax
  40e209:	jg     0x40b881
  40e20f:	lea    rcx,[rdx-0x18]
  40e213:	mov    rdx,r14
  40e216:	call   0x408190
  40e21b:	jmp    0x40b881
  40e220:	mov    eax,0xffffffff
  40e225:	lock xadd DWORD PTR [rdx-0x8],eax
  40e22a:	test   eax,eax
  40e22c:	jg     0x40c63a
  40e232:	lea    rcx,[rdx-0x18]
  40e236:	mov    rdx,QWORD PTR [rsp+0x30]
  40e23b:	call   0x408190
  40e240:	jmp    0x40c63a
  40e245:	mov    eax,0xffffffff
  40e24a:	lock xadd DWORD PTR [rbx-0x8],eax
  40e24f:	test   eax,eax
  40e251:	jg     0x40c614
  40e257:	mov    rcx,QWORD PTR [rsp+0x38]
  40e25c:	mov    rdx,QWORD PTR [rsp+0x30]
  40e261:	sub    rcx,0x18
  40e265:	call   0x408190
  40e26a:	jmp    0x40c614
  40e26f:	mov    eax,0xffffffff
  40e274:	lock xadd DWORD PTR [rdx-0x8],eax
  40e279:	test   eax,eax
  40e27b:	jg     0x40c5f3
  40e281:	lea    rcx,[rdx-0x18]
  40e285:	mov    rdx,QWORD PTR [rsp+0x30]
  40e28a:	call   0x408190
  40e28f:	jmp    0x40c5f3
  40e294:	mov    rbx,QWORD PTR [rsp+0x48]
  40e299:	mov    eax,0xffffffff
  40e29e:	lock xadd DWORD PTR [rbx-0x8],eax
  40e2a3:	test   eax,eax
  40e2a5:	jg     0x40c5cf
  40e2ab:	mov    rcx,QWORD PTR [rsp+0x48]
  40e2b0:	mov    rdx,QWORD PTR [rsp+0x30]
  40e2b5:	sub    rcx,0x18
  40e2b9:	call   0x408190
  40e2be:	jmp    0x40c5cf
  40e2c3:	add    rcx,QWORD PTR [rax-0x18]
  40e2c7:	mov    edx,DWORD PTR [rcx+0x20]
  40e2ca:	or     edx,0x4
  40e2cd:	call   0x4080b0
  40e2d2:	jmp    0x40c2ab
  40e2d7:	mov    rax,QWORD PTR [rsp+0xff0]
  40e2df:	mov    rcx,r14
  40e2e2:	add    rcx,QWORD PTR [rax-0x18]
  40e2e6:	mov    edx,DWORD PTR [rcx+0x20]
  40e2e9:	or     edx,0x4
  40e2ec:	call   0x4080b0
  40e2f1:	jmp    0x40c50b
  40e2f6:	lea    r12,[rsp+0x250]
  40e2fe:	lea    r8,[rsp+0xf8]
  40e306:	lea    rdx,[rip+0x9438]        # 0x417745
  40e30d:	mov    rcx,r12
  40e310:	call   0x408138
  40e315:	mov    rdx,r12
  40e318:	mov    rcx,r14
  40e31b:	call   0x40a270
  40e320:	test   al,al
  40e322:	jne    0x40b537
  40e328:	lea    r12,[rsp+0x260]
  40e330:	lea    r8,[rsp+0xf9]
  40e338:	lea    rdx,[rip+0x940b]        # 0x41774a
  40e33f:	mov    rcx,r12
  40e342:	call   0x408138
  40e347:	mov    rdx,r12
  40e34a:	mov    rcx,r14
  40e34d:	call   0x40a270
  40e352:	mov    r13d,eax
  40e355:	test   r13b,r13b
  40e358:	jne    0x40b537
  40e35e:	lea    r12,[rsp+0x270]
  40e366:	lea    r8,[rsp+0xfa]
  40e36e:	lea    rdx,[rip+0x93da]        # 0x41774f
  40e375:	mov    rcx,r12
  40e378:	call   0x408138
  40e37d:	mov    rdx,r12
  40e380:	mov    rcx,r14
  40e383:	call   0x40a270
  40e388:	test   al,al
  40e38a:	mov    r8d,eax
  40e38d:	je     0x413500
  40e393:	mov    r13d,eax
  40e396:	mov    r9d,r8d
  40e399:	mov    r12d,r8d
  40e39c:	nop    DWORD PTR [rax+0x0]
  40e3a0:	mov    r11d,DWORD PTR [rsi]
  40e3a3:	mov    rcx,QWORD PTR [rsp+0x270]
  40e3ab:	test   r11d,r11d
  40e3ae:	jne    0x41133f
  40e3b4:	mov    edx,DWORD PTR [rcx-0x8]
  40e3b7:	lea    r10d,[rdx-0x1]
  40e3bb:	mov    DWORD PTR [rcx-0x8],r10d
  40e3bf:	test   edx,edx
  40e3c1:	jg     0x40b549
  40e3c7:	mov    rdx,QWORD PTR [rsp+0x30]
  40e3cc:	sub    rcx,0x18
  40e3d0:	mov    BYTE PTR [rsp+0xb8],r8b
  40e3d8:	mov    BYTE PTR [rsp+0xb0],r9b
  40e3e0:	mov    BYTE PTR [rsp+0x90],al
  40e3e7:	call   0x408190
  40e3ec:	movzx  r8d,BYTE PTR [rsp+0xb8]
  40e3f5:	movzx  r9d,BYTE PTR [rsp+0xb0]
  40e3fe:	movzx  eax,BYTE PTR [rsp+0x90]
  40e406:	jmp    0x40b549
  40e40b:	mov    r12,QWORD PTR [rsp+0xfe0]
  40e413:	cmp    r12,QWORD PTR [rsp+0xa0]
  40e41b:	je     0x40edaa
  40e421:	lea    rax,[rsp+0xf90]
  40e429:	lea    r15,[rsp+0xfa0]
  40e431:	lea    r13,[rsp+0x780]
  40e439:	mov    rbx,QWORD PTR [rip+0xaba0]        # 0x418fe0
  40e440:	mov    QWORD PTR [rsp+0x48],rax
  40e445:	lea    rax,[rsp+0x103]
  40e44d:	mov    QWORD PTR [rsp+0x38],rax
  40e452:	lea    rax,[rsp+0x7a0]
  40e45a:	mov    QWORD PTR [rsp+0x80],rax
  40e462:	lea    rax,[rsp+0x790]
  40e46a:	mov    QWORD PTR [rsp+0x40],rax
  40e46f:	jmp    0x40eb90
  40e474:	mov    rdi,QWORD PTR [rsp+0x40]
  40e479:	mov    rdx,r15
  40e47c:	mov    rcx,rdi
  40e47f:	call   0x408128
  40e484:	lea    rdx,[rip+0x92d4]        # 0x41775f
  40e48b:	mov    r8d,0x2
  40e491:	mov    rcx,rdi
  40e494:	call   0x408170
  40e499:	mov    rcx,QWORD PTR [rsp+0x30]
  40e49e:	mov    rdx,rdi
  40e4a1:	call   0x408180
  40e4a6:	mov    eax,DWORD PTR [rbx]
  40e4a8:	mov    rdx,QWORD PTR [rsp+0x790]
  40e4b0:	test   eax,eax
  40e4b2:	jne    0x41134e
  40e4b8:	mov    eax,DWORD PTR [rdx-0x8]
  40e4bb:	lea    ecx,[rax-0x1]
  40e4be:	mov    DWORD PTR [rdx-0x8],ecx
  40e4c1:	test   eax,eax
  40e4c3:	jle    0x41135b
  40e4c9:	lea    rsi,[rsp+0x7b0]
  40e4d1:	mov    r8,QWORD PTR [rsp+0x30]
  40e4d6:	lea    rdx,[rip+0x91e8]        # 0x4176c5
  40e4dd:	mov    rcx,rsi
  40e4e0:	call   0x40af80
  40e4e5:	mov    rcx,QWORD PTR [rsp+0x68]
  40e4ea:	mov    rdx,rsi
  40e4ed:	call   0x408168
  40e4f2:	mov    ebp,DWORD PTR [rbx]
  40e4f4:	mov    rdx,QWORD PTR [rsp+0x7b0]
  40e4fc:	test   ebp,ebp
  40e4fe:	jne    0x41131c
  40e504:	mov    eax,DWORD PTR [rdx-0x8]
  40e507:	lea    ecx,[rax-0x1]
  40e50a:	test   eax,eax
  40e50c:	mov    DWORD PTR [rdx-0x8],ecx
  40e50f:	jle    0x41132e
  40e515:	lea    rsi,[rsp+0x810]
  40e51d:	lea    r8,[rsp+0xf70]
  40e525:	lea    rdx,[rip+0x919b]        # 0x4176c7
  40e52c:	mov    rcx,rsi
  40e52f:	call   0x408138
  40e534:	lea    rcx,[rip+0xeb45]        # 0x41d080
  40e53b:	mov    rdx,rsi
  40e53e:	call   0x40a360
  40e543:	lea    rsi,[rsp+0x7e0]
  40e54b:	lea    r8,[rsp+0xf60]
  40e553:	lea    rdx,[rip+0x7d81]        # 0x4162db
  40e55a:	mov    rdi,rax
  40e55d:	mov    rcx,rsi
  40e560:	call   0x408138
  40e565:	lea    rcx,[rip+0xeb14]        # 0x41d080
  40e56c:	mov    rdx,rsi
  40e56f:	call   0x40a360
  40e574:	lea    rsi,[rsp+0x7c0]
  40e57c:	lea    r8,[rsp+0xf50]
  40e584:	lea    rdx,[rip+0x7d3e]        # 0x4162c9
  40e58b:	mov    rbp,rax
  40e58e:	mov    rcx,rsi
  40e591:	call   0x408138
  40e596:	lea    rcx,[rip+0xeae3]        # 0x41d080
  40e59d:	mov    rdx,rsi
  40e5a0:	call   0x40a360
  40e5a5:	lea    rsi,[rsp+0x7d0]
  40e5ad:	mov    rdx,rax
  40e5b0:	mov    rcx,rsi
  40e5b3:	call   0x408128
  40e5b8:	lea    rdx,[rip+0x93c5]        # 0x417984
  40e5bf:	mov    r8d,0x4
  40e5c5:	mov    rcx,rsi
  40e5c8:	call   0x408170
  40e5cd:	mov    rdx,rbp
  40e5d0:	mov    rcx,rsi
  40e5d3:	call   0x408168
  40e5d8:	mov    rsi,rax
  40e5db:	mov    rax,QWORD PTR [rax]
  40e5de:	lea    r8,[rsp+0x125]
  40e5e6:	xor    edx,edx
  40e5e8:	xor    ecx,ecx
  40e5ea:	mov    QWORD PTR [rsp+0x7f0],rax
  40e5f2:	call   0x4081a0
  40e5f7:	lea    rcx,[rsp+0x7f0]
  40e5ff:	lea    rdx,[rip+0x90bf]        # 0x4176c5
  40e606:	mov    QWORD PTR [rsi],rax
  40e609:	mov    r8d,0x1
  40e60f:	call   0x408170
  40e614:	mov    rsi,rax
  40e617:	mov    rax,QWORD PTR [rax]
  40e61a:	lea    r8,[rsp+0x126]
  40e622:	xor    edx,edx
  40e624:	xor    ecx,ecx
  40e626:	mov    QWORD PTR [rsp+0x800],rax
  40e62e:	call   0x4081a0
  40e633:	lea    rcx,[rsp+0x800]
  40e63b:	mov    QWORD PTR [rsi],rax
  40e63e:	mov    rdx,rdi
  40e641:	call   0x408168
  40e646:	mov    rsi,rax
  40e649:	mov    rax,QWORD PTR [rax]
  40e64c:	lea    r8,[rsp+0x127]
  40e654:	xor    edx,edx
  40e656:	xor    ecx,ecx
  40e658:	mov    QWORD PTR [rsp+0x820],rax
  40e660:	call   0x4081a0
  40e665:	lea    rcx,[rsp+0x820]
  40e66d:	lea    rdx,[rip+0x9051]        # 0x4176c5
  40e674:	mov    QWORD PTR [rsi],rax
  40e677:	mov    r8d,0x1
  40e67d:	call   0x408170
  40e682:	mov    rsi,rax
  40e685:	mov    rax,QWORD PTR [rax]
  40e688:	lea    r8,[rsp+0x128]
  40e690:	xor    edx,edx
  40e692:	xor    ecx,ecx
  40e694:	mov    QWORD PTR [rsp+0x830],rax
  40e69c:	call   0x4081a0
  40e6a1:	mov    rdx,QWORD PTR [rsp+0x58]
  40e6a6:	lea    rcx,[rsp+0x830]
  40e6ae:	mov    QWORD PTR [rsi],rax
  40e6b1:	call   0x408168
  40e6b6:	mov    rsi,rax
  40e6b9:	mov    rax,QWORD PTR [rax]
  40e6bc:	lea    r8,[rsp+0x129]
  40e6c4:	xor    edx,edx
  40e6c6:	xor    ecx,ecx
  40e6c8:	mov    QWORD PTR [rsp+0x840],rax
  40e6d0:	call   0x4081a0
  40e6d5:	lea    rcx,[rsp+0x840]
  40e6dd:	lea    rdx,[rip+0x8fe1]        # 0x4176c5
  40e6e4:	mov    QWORD PTR [rsi],rax
  40e6e7:	mov    r8d,0x1
  40e6ed:	call   0x408170
  40e6f2:	mov    rsi,rax
  40e6f5:	mov    rax,QWORD PTR [rax]
  40e6f8:	lea    r8,[rsp+0x12a]
  40e700:	xor    edx,edx
  40e702:	xor    ecx,ecx
  40e704:	mov    QWORD PTR [rsp+0x850],rax
  40e70c:	call   0x4081a0
  40e711:	mov    rdx,QWORD PTR [rsp+0x60]
  40e716:	lea    rcx,[rsp+0x850]
  40e71e:	mov    QWORD PTR [rsi],rax
  40e721:	call   0x408168
  40e726:	mov    rsi,rax
  40e729:	mov    rax,QWORD PTR [rax]
  40e72c:	lea    r8,[rsp+0x12b]
  40e734:	xor    edx,edx
  40e736:	xor    ecx,ecx
  40e738:	mov    QWORD PTR [rsp+0x860],rax
  40e740:	call   0x4081a0
  40e745:	lea    rcx,[rsp+0x860]
  40e74d:	lea    rdx,[rip+0x8f71]        # 0x4176c5
  40e754:	mov    QWORD PTR [rsi],rax
  40e757:	mov    r8d,0x1
  40e75d:	call   0x408170
  40e762:	mov    rsi,rax
  40e765:	mov    rax,QWORD PTR [rax]
  40e768:	lea    r8,[rsp+0x12c]
  40e770:	xor    edx,edx
  40e772:	xor    ecx,ecx
  40e774:	mov    QWORD PTR [rsp+0x870],rax
  40e77c:	call   0x4081a0
  40e781:	mov    rdx,QWORD PTR [rsp+0x70]
  40e786:	lea    rcx,[rsp+0x870]
  40e78e:	mov    QWORD PTR [rsi],rax
  40e791:	call   0x408168
  40e796:	mov    rsi,rax
  40e799:	mov    rax,QWORD PTR [rax]
  40e79c:	lea    r8,[rsp+0x12d]
  40e7a4:	xor    edx,edx
  40e7a6:	xor    ecx,ecx
  40e7a8:	mov    QWORD PTR [rsp+0x880],rax
  40e7b0:	call   0x4081a0
  40e7b5:	lea    rcx,[rsp+0x880]
  40e7bd:	lea    rdx,[rip+0x8f01]        # 0x4176c5
  40e7c4:	mov    QWORD PTR [rsi],rax
  40e7c7:	mov    r8d,0x1
  40e7cd:	call   0x408170
  40e7d2:	mov    rsi,rax
  40e7d5:	mov    rax,QWORD PTR [rax]
  40e7d8:	lea    r8,[rsp+0x12e]
  40e7e0:	xor    edx,edx
  40e7e2:	xor    ecx,ecx
  40e7e4:	mov    QWORD PTR [rsp+0x890],rax
  40e7ec:	call   0x4081a0
  40e7f1:	mov    rdx,QWORD PTR [rsp+0x48]
  40e7f6:	lea    rcx,[rsp+0x890]
  40e7fe:	mov    QWORD PTR [rsi],rax
  40e801:	call   0x408168
  40e806:	mov    rsi,rax
  40e809:	mov    rax,QWORD PTR [rax]
  40e80c:	lea    r8,[rsp+0x12f]
  40e814:	xor    edx,edx
  40e816:	xor    ecx,ecx
  40e818:	mov    QWORD PTR [rsp+0x8a0],rax
  40e820:	call   0x4081a0
  40e825:	lea    rcx,[rsp+0x8a0]
  40e82d:	lea    rdx,[rip+0x9155]        # 0x417989
  40e834:	mov    QWORD PTR [rsi],rax
  40e837:	mov    r8d,0x4
  40e83d:	call   0x408170
  40e842:	mov    rsi,rax
  40e845:	mov    rax,QWORD PTR [rax]
  40e848:	lea    r8,[rsp+0x130]
  40e850:	xor    edx,edx
  40e852:	xor    ecx,ecx
  40e854:	mov    QWORD PTR [rsp+0x8b0],rax
  40e85c:	call   0x4081a0
  40e861:	mov    rdx,QWORD PTR [rsp+0x30]
  40e866:	lea    rcx,[rsp+0x8b0]
  40e86e:	mov    QWORD PTR [rsi],rax
  40e871:	call   0x408168
  40e876:	mov    rsi,rax
  40e879:	mov    rax,QWORD PTR [rax]
  40e87c:	lea    r8,[rsp+0x131]
  40e884:	xor    edx,edx
  40e886:	xor    ecx,ecx
  40e888:	mov    QWORD PTR [rsp+0xff0],rax
  40e890:	call   0x4081a0
  40e895:	mov    edi,DWORD PTR [rbx]
  40e897:	mov    QWORD PTR [rsi],rax
  40e89a:	mov    rdx,QWORD PTR [rsp+0x8b0]
  40e8a2:	test   edi,edi
  40e8a4:	jne    0x4112f1
  40e8aa:	mov    eax,DWORD PTR [rdx-0x8]
  40e8ad:	lea    ecx,[rax-0x1]
  40e8b0:	test   eax,eax
  40e8b2:	mov    DWORD PTR [rdx-0x8],ecx
  40e8b5:	jle    0x411303
  40e8bb:	mov    esi,DWORD PTR [rbx]
  40e8bd:	mov    rdx,QWORD PTR [rsp+0x8a0]
  40e8c5:	test   esi,esi
  40e8c7:	jne    0x4112c6
  40e8cd:	mov    eax,DWORD PTR [rdx-0x8]
  40e8d0:	lea    ecx,[rax-0x1]
  40e8d3:	test   eax,eax
  40e8d5:	mov    DWORD PTR [rdx-0x8],ecx
  40e8d8:	jle    0x4112d8
  40e8de:	mov    r11d,DWORD PTR [rbx]
  40e8e1:	mov    rdx,QWORD PTR [rsp+0x890]
  40e8e9:	test   r11d,r11d
  40e8ec:	jne    0x41129b
  40e8f2:	mov    eax,DWORD PTR [rdx-0x8]
  40e8f5:	lea    ecx,[rax-0x1]
  40e8f8:	test   eax,eax
  40e8fa:	mov    DWORD PTR [rdx-0x8],ecx
  40e8fd:	jle    0x4112ad
  40e903:	mov    r10d,DWORD PTR [rbx]
  40e906:	mov    rdx,QWORD PTR [rsp+0x880]
  40e90e:	test   r10d,r10d
  40e911:	jne    0x411270
  40e917:	mov    eax,DWORD PTR [rdx-0x8]
  40e91a:	lea    ecx,[rax-0x1]
  40e91d:	test   eax,eax
  40e91f:	mov    DWORD PTR [rdx-0x8],ecx
  40e922:	jle    0x411282
  40e928:	mov    r9d,DWORD PTR [rbx]
  40e92b:	mov    rdx,QWORD PTR [rsp+0x870]
  40e933:	test   r9d,r9d
  40e936:	jne    0x411245
  40e93c:	mov    eax,DWORD PTR [rdx-0x8]
  40e93f:	lea    ecx,[rax-0x1]
  40e942:	test   eax,eax
  40e944:	mov    DWORD PTR [rdx-0x8],ecx
  40e947:	jle    0x411257
  40e94d:	mov    r8d,DWORD PTR [rbx]
  40e950:	mov    rdx,QWORD PTR [rsp+0x860]
  40e958:	test   r8d,r8d
  40e95b:	jne    0x41121a
  40e961:	mov    eax,DWORD PTR [rdx-0x8]
  40e964:	lea    ecx,[rax-0x1]
  40e967:	test   eax,eax
  40e969:	mov    DWORD PTR [rdx-0x8],ecx
  40e96c:	jle    0x41122c
  40e972:	mov    ecx,DWORD PTR [rbx]
  40e974:	mov    rdx,QWORD PTR [rsp+0x850]
  40e97c:	test   ecx,ecx
  40e97e:	jne    0x4111ef
  40e984:	mov    eax,DWORD PTR [rdx-0x8]
  40e987:	lea    ecx,[rax-0x1]
  40e98a:	test   eax,eax
  40e98c:	mov    DWORD PTR [rdx-0x8],ecx
  40e98f:	jle    0x411201
  40e995:	mov    eax,DWORD PTR [rbx]
  40e997:	mov    rdx,QWORD PTR [rsp+0x840]
  40e99f:	test   eax,eax
  40e9a1:	jne    0x4111c4
  40e9a7:	mov    eax,DWORD PTR [rdx-0x8]
  40e9aa:	lea    ecx,[rax-0x1]
  40e9ad:	test   eax,eax
  40e9af:	mov    DWORD PTR [rdx-0x8],ecx
  40e9b2:	jle    0x4111d6
  40e9b8:	mov    eax,DWORD PTR [rbx]
  40e9ba:	mov    rdx,QWORD PTR [rsp+0x830]
  40e9c2:	test   eax,eax
  40e9c4:	jne    0x411199
  40e9ca:	mov    eax,DWORD PTR [rdx-0x8]
  40e9cd:	lea    ecx,[rax-0x1]
  40e9d0:	test   eax,eax
  40e9d2:	mov    DWORD PTR [rdx-0x8],ecx
  40e9d5:	jle    0x4111ab
  40e9db:	mov    eax,DWORD PTR [rbx]
  40e9dd:	mov    rdx,QWORD PTR [rsp+0x820]
  40e9e5:	test   eax,eax
  40e9e7:	jne    0x41116e
  40e9ed:	mov    eax,DWORD PTR [rdx-0x8]
  40e9f0:	lea    ecx,[rax-0x1]
  40e9f3:	test   eax,eax
  40e9f5:	mov    DWORD PTR [rdx-0x8],ecx
  40e9f8:	jle    0x411180
  40e9fe:	mov    eax,DWORD PTR [rbx]
  40ea00:	mov    rdx,QWORD PTR [rsp+0x800]
  40ea08:	test   eax,eax
  40ea0a:	jne    0x411143
  40ea10:	mov    eax,DWORD PTR [rdx-0x8]
  40ea13:	lea    ecx,[rax-0x1]
  40ea16:	test   eax,eax
  40ea18:	mov    DWORD PTR [rdx-0x8],ecx
  40ea1b:	jle    0x411155
  40ea21:	mov    eax,DWORD PTR [rbx]
  40ea23:	mov    rdx,QWORD PTR [rsp+0x7f0]
  40ea2b:	test   eax,eax
  40ea2d:	jne    0x411118
  40ea33:	mov    eax,DWORD PTR [rdx-0x8]
  40ea36:	lea    ecx,[rax-0x1]
  40ea39:	test   eax,eax
  40ea3b:	mov    DWORD PTR [rdx-0x8],ecx
  40ea3e:	jle    0x41112a
  40ea44:	mov    eax,DWORD PTR [rbx]
  40ea46:	mov    rdx,QWORD PTR [rsp+0x7d0]
  40ea4e:	test   eax,eax
  40ea50:	jne    0x4110ed
  40ea56:	mov    eax,DWORD PTR [rdx-0x8]
  40ea59:	lea    ecx,[rax-0x1]
  40ea5c:	test   eax,eax
  40ea5e:	mov    DWORD PTR [rdx-0x8],ecx
  40ea61:	jle    0x4110ff
  40ea67:	mov    ebp,DWORD PTR [rbx]
  40ea69:	mov    rdx,QWORD PTR [rsp+0x7c0]
  40ea71:	test   ebp,ebp
  40ea73:	jne    0x4110c2
  40ea79:	mov    eax,DWORD PTR [rdx-0x8]
  40ea7c:	lea    ecx,[rax-0x1]
  40ea7f:	test   eax,eax
  40ea81:	mov    DWORD PTR [rdx-0x8],ecx
  40ea84:	jle    0x4110d4
  40ea8a:	mov    edi,DWORD PTR [rbx]
  40ea8c:	mov    rdx,QWORD PTR [rsp+0x7e0]
  40ea94:	test   edi,edi
  40ea96:	jne    0x411097
  40ea9c:	mov    eax,DWORD PTR [rdx-0x8]
  40ea9f:	lea    ecx,[rax-0x1]
  40eaa2:	test   eax,eax
  40eaa4:	mov    DWORD PTR [rdx-0x8],ecx
  40eaa7:	jle    0x4110a9
  40eaad:	mov    esi,DWORD PTR [rbx]
  40eaaf:	mov    rdx,QWORD PTR [rsp+0x810]
  40eab7:	test   esi,esi
  40eab9:	jne    0x41106c
  40eabf:	mov    eax,DWORD PTR [rdx-0x8]
  40eac2:	lea    ecx,[rax-0x1]
  40eac5:	test   eax,eax
  40eac7:	mov    DWORD PTR [rdx-0x8],ecx
  40eaca:	jle    0x41107e
  40ead0:	movzx  edx,BYTE PTR [rsp+0x78]
  40ead5:	mov    rcx,r14
  40ead8:	call   0x4018b0
  40eadd:	mov    r11d,DWORD PTR [rbx]
  40eae0:	mov    ebp,eax
  40eae2:	mov    rdx,QWORD PTR [rsp+0xff0]
  40eaea:	test   r11d,r11d
  40eaed:	jne    0x411041
  40eaf3:	mov    eax,DWORD PTR [rdx-0x8]
  40eaf6:	lea    ecx,[rax-0x1]
  40eaf9:	test   eax,eax
  40eafb:	mov    DWORD PTR [rdx-0x8],ecx
  40eafe:	jle    0x411053
  40eb04:	mov    r10d,DWORD PTR [rbx]
  40eb07:	mov    rdx,QWORD PTR [rsp+0xfb0]
  40eb0f:	test   r10d,r10d
  40eb12:	jne    0x411016
  40eb18:	mov    eax,DWORD PTR [rdx-0x8]
  40eb1b:	lea    ecx,[rax-0x1]
  40eb1e:	test   eax,eax
  40eb20:	mov    DWORD PTR [rdx-0x8],ecx
  40eb23:	jle    0x411028
  40eb29:	mov    r9d,DWORD PTR [rbx]
  40eb2c:	mov    rax,QWORD PTR [rsp+0xfa0]
  40eb34:	test   r9d,r9d
  40eb37:	jne    0x410ff3
  40eb3d:	mov    edx,DWORD PTR [rax-0x8]
  40eb40:	lea    ecx,[rdx-0x1]
  40eb43:	test   edx,edx
  40eb45:	mov    DWORD PTR [rax-0x8],ecx
  40eb48:	jle    0x411005
  40eb4e:	mov    r8d,DWORD PTR [rbx]
  40eb51:	mov    rax,QWORD PTR [rsp+0xf90]
  40eb59:	test   r8d,r8d
  40eb5c:	jne    0x410fd0
  40eb62:	mov    edx,DWORD PTR [rax-0x8]
  40eb65:	lea    ecx,[rdx-0x1]
  40eb68:	test   edx,edx
  40eb6a:	mov    DWORD PTR [rax-0x8],ecx
  40eb6d:	jle    0x410fe2
  40eb73:	test   ebp,ebp
  40eb75:	mov    r12,QWORD PTR [r12]
  40eb79:	sete   al
  40eb7c:	jne    0x40edb1
  40eb82:	cmp    r12,QWORD PTR [rsp+0xa0]
  40eb8a:	je     0x40edb1
  40eb90:	mov    rcx,QWORD PTR [rsp+0x48]
  40eb95:	lea    rdx,[r12+0x10]
  40eb9a:	call   0x408128
  40eb9f:	mov    rdx,QWORD PTR [rsp+0x48]
  40eba4:	mov    rcx,r15
  40eba7:	call   0x401b40
  40ebac:	mov    r8,QWORD PTR [rsp+0x30]
  40ebb1:	lea    rdx,[rip+0x7711]        # 0x4162c9
  40ebb8:	mov    rcx,r13
  40ebbb:	call   0x408138
  40ebc0:	lea    rcx,[rip+0xe4b9]        # 0x41d080
  40ebc7:	mov    rdx,r13
  40ebca:	call   0x40a360
  40ebcf:	mov    rax,QWORD PTR [rax]
  40ebd2:	mov    rdx,QWORD PTR [rsp+0x780]
  40ebda:	mov    rsi,QWORD PTR [rax-0x18]
  40ebde:	mov    eax,DWORD PTR [rbx]
  40ebe0:	test   eax,eax
  40ebe2:	jne    0x410f5e
  40ebe8:	mov    eax,DWORD PTR [rdx-0x8]
  40ebeb:	lea    ecx,[rax-0x1]
  40ebee:	test   eax,eax
  40ebf0:	mov    DWORD PTR [rdx-0x8],ecx
  40ebf3:	jle    0x410f70
  40ebf9:	test   rsi,rsi
  40ebfc:	je     0x410f85
  40ec02:	mov    r8,QWORD PTR [rsp+0x38]
  40ec07:	xor    edx,edx
  40ec09:	xor    ecx,ecx
  40ec0b:	call   0x4081a0
  40ec10:	mov    QWORD PTR [rsp+0xfb0],rax
  40ec18:	mov    rax,QWORD PTR [rsp+0x1a0]
  40ec20:	cmp    QWORD PTR [rax-0x18],0x0
  40ec25:	je     0x410f10
  40ec2b:	cmp    BYTE PTR [rsp+0x98],0x0
  40ec33:	jne    0x40e474
  40ec39:	mov    rdx,QWORD PTR [rsp+0xc0]
  40ec41:	mov    rcx,QWORD PTR [rsp+0x30]
  40ec46:	call   0x408158
  40ec4b:	jmp    0x40e4c9
  40ec50:	lea    rdx,[rip+0x8b13]        # 0x41776a
  40ec57:	mov    rcx,r14
  40ec5a:	call   0x4081c8
  40ec5f:	test   eax,eax
  40ec61:	je     0x40d711
  40ec67:	lea    rdx,[rip+0x8b03]        # 0x417771
  40ec6e:	mov    rcx,r14
  40ec71:	call   0x4081c8
  40ec76:	test   eax,eax
  40ec78:	je     0x40d711
  40ec7e:	lea    rdx,[rip+0x8aa3]        # 0x417728
  40ec85:	mov    rcx,r14
  40ec88:	call   0x4081c8
  40ec8d:	test   eax,eax
  40ec8f:	je     0x40d711
  40ec95:	lea    rdx,[rip+0x8add]        # 0x417779
  40ec9c:	mov    rcx,r14
  40ec9f:	call   0x4081c8
  40eca4:	test   eax,eax
  40eca6:	je     0x40d711
  40ecac:	lea    rdx,[rip+0x8acf]        # 0x417782
  40ecb3:	mov    rcx,r14
  40ecb6:	call   0x4081c8
  40ecbb:	test   eax,eax
  40ecbd:	je     0x40d711
  40ecc3:	lea    rdx,[rip+0x8db3]        # 0x417a7d
  40ecca:	mov    rcx,r14
  40eccd:	call   0x4081c8
  40ecd2:	test   eax,eax
  40ecd4:	je     0x40ed00
  40ecd6:	lea    rdx,[rip+0x8abb]        # 0x417798
  40ecdd:	mov    rcx,r14
  40ece0:	call   0x4081c8
  40ece5:	test   eax,eax
  40ece7:	je     0x40ed00
  40ece9:	lea    rdx,[rip+0x8aab]        # 0x41779b
  40ecf0:	mov    rcx,r14
  40ecf3:	call   0x4081c8
  40ecf8:	test   eax,eax
  40ecfa:	jne    0x41136c
  40ed00:	mov    rdx,QWORD PTR [rip+0xe369]        # 0x41d070
  40ed07:	mov    rcx,QWORD PTR [rip+0xa302]        # 0x419010
  40ed0e:	mov    r8,QWORD PTR [rdx-0x18]
  40ed12:	call   0x4080a8
  40ed17:	mov    rcx,rax
  40ed1a:	call   0x408070
  40ed1f:	mov    rdx,QWORD PTR [rip+0xe332]        # 0x41d058
  40ed26:	mov    rcx,QWORD PTR [rip+0xa2e3]        # 0x419010
  40ed2d:	mov    r8,QWORD PTR [rdx-0x18]
  40ed31:	call   0x4080a8
  40ed36:	mov    rcx,rax
  40ed39:	call   0x408070
  40ed3e:	xor    ebp,ebp
  40ed40:	jmp    0x41082d
  40ed45:	mov    rbx,QWORD PTR [rdi+0x8]
  40ed49:	lea    rdx,[rip+0x89d8]        # 0x417728
  40ed50:	mov    rcx,rbx
  40ed53:	call   0x409ff8
  40ed58:	test   eax,eax
  40ed5a:	je     0x40ed86
  40ed5c:	lea    rdx,[rip+0x89c8]        # 0x41772b
  40ed63:	mov    rcx,rbx
  40ed66:	call   0x409ff8
  40ed6b:	test   eax,eax
  40ed6d:	je     0x40ed86
  40ed6f:	lea    rdx,[rip+0x89be]        # 0x417734
  40ed76:	mov    rcx,rbx
  40ed79:	call   0x409ff8
  40ed7e:	test   eax,eax
  40ed80:	jne    0x40b2c4
  40ed86:	mov    rdx,QWORD PTR [rip+0xe2db]        # 0x41d068
  40ed8d:	mov    rcx,QWORD PTR [rip+0xa27c]        # 0x419010
  40ed94:	mov    r8,QWORD PTR [rdx-0x18]
  40ed98:	call   0x4080a8
  40ed9d:	mov    rcx,rax
  40eda0:	call   0x408070
  40eda5:	jmp    0x40d2e6
  40edaa:	mov    eax,0x1
  40edaf:	xor    ebp,ebp
  40edb1:	test   al,al
  40edb3:	mov    rbx,QWORD PTR [rsp+0xfc0]
  40edbb:	je     0x40f6e5
  40edc1:	cmp    rbx,QWORD PTR [rsp+0x50]
  40edc6:	lea    rdi,[rsp+0xf90]
  40edce:	mov    QWORD PTR [rsp+0x48],rdi
  40edd3:	je     0x40f6e5
  40edd9:	lea    rax,[rsp+0x8c0]
  40ede1:	mov    r13,QWORD PTR [rip+0xa1f8]        # 0x418fe0
  40ede8:	mov    QWORD PTR [rsp+0x80],rax
  40edf0:	lea    rax,[rsp+0xfa0]
  40edf8:	mov    QWORD PTR [rsp+0x40],rax
  40edfd:	lea    rax,[rsp+0x104]
  40ee05:	mov    QWORD PTR [rsp+0x90],rax
  40ee0d:	lea    rax,[rsp+0x8e0]
  40ee15:	mov    QWORD PTR [rsp+0xb8],rax
  40ee1d:	lea    rax,[rsp+0x8d0]
  40ee25:	mov    QWORD PTR [rsp+0xb0],rax
  40ee2d:	jmp    0x40f134
  40ee32:	cmp    rdx,QWORD PTR [rax-0x10]
  40ee36:	ja     0x40f644
  40ee3c:	xor    edx,edx
  40ee3e:	mov    rcx,rbp
  40ee41:	call   0x408150
  40ee46:	mov    rsi,rax
  40ee49:	lea    r8,[rsp+0x13e]
  40ee51:	xor    edx,edx
  40ee53:	mov    rax,QWORD PTR [rsi]
  40ee56:	xor    ecx,ecx
  40ee58:	mov    QWORD PTR [rsp+0xa20],rax
  40ee60:	call   0x4081a0
  40ee65:	lea    rcx,[rsp+0xa20]
  40ee6d:	lea    rdx,[rip+0x8b15]        # 0x417989
  40ee74:	mov    QWORD PTR [rsi],rax
  40ee77:	mov    r8d,0x4
  40ee7d:	call   0x408170
  40ee82:	mov    rsi,rax
  40ee85:	mov    rax,QWORD PTR [rax]
  40ee88:	lea    r8,[rsp+0x13f]
  40ee90:	xor    edx,edx
  40ee92:	xor    ecx,ecx
  40ee94:	mov    QWORD PTR [rsp+0xa30],rax
  40ee9c:	call   0x4081a0
  40eea1:	mov    QWORD PTR [rsi],rax
  40eea4:	mov    r8,QWORD PTR [rsp+0xa30]
  40eeac:	mov    rax,QWORD PTR [rsp+0xa40]
  40eeb4:	mov    r9,QWORD PTR [r8-0x18]
  40eeb8:	mov    rdx,r9
  40eebb:	add    rdx,QWORD PTR [rax-0x18]
  40eebf:	cmp    rdx,QWORD PTR [r8-0x10]
  40eec3:	jbe    0x40f6d0
  40eec9:	cmp    rdx,QWORD PTR [rax-0x10]
  40eecd:	ja     0x40f6d0
  40eed3:	xor    edx,edx
  40eed5:	mov    rcx,r12
  40eed8:	call   0x408150
  40eedd:	mov    rsi,rax
  40eee0:	lea    r8,[rsp+0x140]
  40eee8:	xor    edx,edx
  40eeea:	mov    rax,QWORD PTR [rsi]
  40eeed:	xor    ecx,ecx
  40eeef:	mov    QWORD PTR [rsp+0xff0],rax
  40eef7:	call   0x4081a0
  40eefc:	mov    QWORD PTR [rsi],rax
  40eeff:	mov    rax,QWORD PTR [rsp+0xa30]
  40ef07:	lea    rsi,[rsp+0xf80]
  40ef0f:	mov    rdx,rsi
  40ef12:	lea    rcx,[rax-0x18]
  40ef16:	call   0x408188
  40ef1b:	mov    rax,QWORD PTR [rsp+0xa20]
  40ef23:	mov    rdx,rsi
  40ef26:	lea    rcx,[rax-0x18]
  40ef2a:	call   0x408188
  40ef2f:	mov    rax,QWORD PTR [rsp+0xa00]
  40ef37:	mov    rdx,rsi
  40ef3a:	lea    rcx,[rax-0x18]
  40ef3e:	call   0x408188
  40ef43:	mov    rax,QWORD PTR [rsp+0x9f0]
  40ef4b:	mov    rdx,rsi
  40ef4e:	lea    rcx,[rax-0x18]
  40ef52:	call   0x408188
  40ef57:	mov    rax,QWORD PTR [rsp+0x9e0]
  40ef5f:	mov    rdx,rsi
  40ef62:	lea    rcx,[rax-0x18]
  40ef66:	call   0x408188
  40ef6b:	mov    rax,QWORD PTR [rsp+0x9d0]
  40ef73:	mov    rdx,rsi
  40ef76:	lea    rcx,[rax-0x18]
  40ef7a:	call   0x408188
  40ef7f:	mov    rax,QWORD PTR [rsp+0x9c0]
  40ef87:	mov    rdx,rsi
  40ef8a:	lea    rcx,[rax-0x18]
  40ef8e:	call   0x408188
  40ef93:	mov    rax,QWORD PTR [rsp+0x9b0]
  40ef9b:	mov    rdx,rsi
  40ef9e:	lea    rcx,[rax-0x18]
  40efa2:	call   0x408188
  40efa7:	mov    rax,QWORD PTR [rsp+0x9a0]
  40efaf:	mov    rdx,rsi
  40efb2:	lea    rcx,[rax-0x18]
  40efb6:	call   0x408188
  40efbb:	mov    rax,QWORD PTR [rsp+0x990]
  40efc3:	mov    rdx,rsi
  40efc6:	lea    rcx,[rax-0x18]
  40efca:	call   0x408188
  40efcf:	mov    rax,QWORD PTR [rsp+0x970]
  40efd7:	mov    rdx,rsi
  40efda:	lea    rcx,[rax-0x18]
  40efde:	call   0x408188
  40efe3:	mov    rax,QWORD PTR [rsp+0x960]
  40efeb:	mov    rdx,rsi
  40efee:	lea    rcx,[rax-0x18]
  40eff2:	call   0x408188
  40eff7:	mov    rax,QWORD PTR [rsp+0x940]
  40efff:	mov    rdx,rsi
  40f002:	lea    rcx,[rax-0x18]
  40f006:	call   0x408188
  40f00b:	mov    rax,QWORD PTR [rsp+0x930]
  40f013:	mov    rdx,rsi
  40f016:	lea    rcx,[rax-0x18]
  40f01a:	call   0x408188
  40f01f:	mov    rax,QWORD PTR [rsp+0x910]
  40f027:	mov    rdx,rsi
  40f02a:	lea    rcx,[rax-0x18]
  40f02e:	call   0x408188
  40f033:	mov    rax,QWORD PTR [rsp+0x900]
  40f03b:	mov    rdx,rsi
  40f03e:	lea    rcx,[rax-0x18]
  40f042:	call   0x408188
  40f047:	mov    rax,QWORD PTR [rsp+0x920]
  40f04f:	mov    rdx,rsi
  40f052:	lea    rcx,[rax-0x18]
  40f056:	call   0x408188
  40f05b:	mov    rax,QWORD PTR [rsp+0x950]
  40f063:	mov    rdx,rsi
  40f066:	lea    rcx,[rax-0x18]
  40f06a:	call   0x408188
  40f06f:	mov    rax,QWORD PTR [rsp+0x980]
  40f077:	mov    rdx,rsi
  40f07a:	lea    rcx,[rax-0x18]
  40f07e:	call   0x408188
  40f083:	mov    eax,DWORD PTR [r13+0x0]
  40f087:	mov    rdx,QWORD PTR [rsp+0xa10]
  40f08f:	test   eax,eax
  40f091:	jne    0x410892
  40f097:	mov    eax,DWORD PTR [rdx-0x8]
  40f09a:	lea    ecx,[rax-0x1]
  40f09d:	test   eax,eax
  40f09f:	mov    DWORD PTR [rdx-0x8],ecx
  40f0a2:	jle    0x4108a4
  40f0a8:	mov    rax,QWORD PTR [rsp+0xa40]
  40f0b0:	mov    rdx,rsi
  40f0b3:	lea    rcx,[rax-0x18]
  40f0b7:	call   0x408188
  40f0bc:	movzx  edx,BYTE PTR [rsp+0x78]
  40f0c1:	mov    rcx,r14
  40f0c4:	call   0x4018b0
  40f0c9:	mov    ebp,eax
  40f0cb:	mov    rax,QWORD PTR [rsp+0xff0]
  40f0d3:	mov    rdx,rsi
  40f0d6:	lea    rcx,[rax-0x18]
  40f0da:	call   0x408188
  40f0df:	mov    rax,QWORD PTR [rsp+0xfb0]
  40f0e7:	mov    rdx,rsi
  40f0ea:	lea    rcx,[rax-0x18]
  40f0ee:	call   0x408188
  40f0f3:	mov    rax,QWORD PTR [rsp+0xfa0]
  40f0fb:	mov    rdx,rsi
  40f0fe:	lea    rcx,[rax-0x18]
  40f102:	call   0x408188
  40f107:	mov    rax,QWORD PTR [rsp+0xf90]
  40f10f:	mov    rdx,r14
  40f112:	lea    rcx,[rax-0x18]
  40f116:	call   0x408188
  40f11b:	test   ebp,ebp
  40f11d:	mov    rbx,QWORD PTR [rbx]
  40f120:	sete   al
  40f123:	jne    0x40f6e5
  40f129:	cmp    rbx,QWORD PTR [rsp+0x50]
  40f12e:	je     0x40f6e5
  40f134:	mov    rcx,QWORD PTR [rsp+0x48]
  40f139:	lea    rdx,[rbx+0x10]
  40f13d:	call   0x408128
  40f142:	mov    rdi,QWORD PTR [rsp+0x80]
  40f14a:	mov    r8,QWORD PTR [rsp+0x30]
  40f14f:	lea    rdx,[rip+0x719d]        # 0x4162f3
  40f156:	mov    rcx,rdi
  40f159:	call   0x408138
  40f15e:	lea    rcx,[rip+0xdf1b]        # 0x41d080
  40f165:	mov    rdx,rdi
  40f168:	call   0x40a360
  40f16d:	mov    rax,QWORD PTR [rax]
  40f170:	mov    rdx,r14
  40f173:	mov    rsi,QWORD PTR [rax-0x18]
  40f177:	mov    rax,QWORD PTR [rsp+0x8c0]
  40f17f:	lea    rcx,[rax-0x18]
  40f183:	call   0x408188
  40f188:	test   rsi,rsi
  40f18b:	je     0x410ca9
  40f191:	mov    rdx,QWORD PTR [rsp+0x48]
  40f196:	mov    rcx,QWORD PTR [rsp+0x40]
  40f19b:	call   0x401b40
  40f1a0:	mov    r8,QWORD PTR [rsp+0x90]
  40f1a8:	xor    edx,edx
  40f1aa:	xor    ecx,ecx
  40f1ac:	call   0x4081a0
  40f1b1:	mov    QWORD PTR [rsp+0xfb0],rax
  40f1b9:	mov    rax,QWORD PTR [rsp+0x1a0]
  40f1c1:	cmp    QWORD PTR [rax-0x18],0x0
  40f1c6:	je     0x410850
  40f1cc:	cmp    BYTE PTR [rsp+0x98],0x0
  40f1d4:	je     0x4100a9
  40f1da:	mov    rdi,QWORD PTR [rsp+0xb0]
  40f1e2:	mov    rdx,QWORD PTR [rsp+0x40]
  40f1e7:	mov    rcx,rdi
  40f1ea:	call   0x408128
  40f1ef:	lea    rdx,[rip+0x8569]        # 0x41775f
  40f1f6:	mov    r8d,0x2
  40f1fc:	mov    rcx,rdi
  40f1ff:	call   0x408170
  40f204:	mov    rcx,QWORD PTR [rsp+0x30]
  40f209:	mov    rdx,rdi
  40f20c:	call   0x408180
  40f211:	mov    rax,QWORD PTR [rsp+0x8d0]
  40f219:	mov    rdx,r14
  40f21c:	lea    rcx,[rax-0x18]
  40f220:	call   0x408188
  40f225:	lea    rsi,[rsp+0x8f0]
  40f22d:	mov    r8,QWORD PTR [rsp+0x30]
  40f232:	lea    rdx,[rip+0x848c]        # 0x4176c5
  40f239:	mov    rcx,rsi
  40f23c:	call   0x40af80
  40f241:	mov    rcx,QWORD PTR [rsp+0x68]
  40f246:	mov    rdx,rsi
  40f249:	call   0x408168
  40f24e:	mov    ecx,DWORD PTR [r13+0x0]
  40f252:	mov    rdx,QWORD PTR [rsp+0x8f0]
  40f25a:	test   ecx,ecx
  40f25c:	jne    0x4108b5
  40f262:	mov    eax,DWORD PTR [rdx-0x8]
  40f265:	lea    ecx,[rax-0x1]
  40f268:	test   eax,eax
  40f26a:	mov    DWORD PTR [rdx-0x8],ecx
  40f26d:	jle    0x4108c7
  40f273:	lea    r12,[rsp+0xa40]
  40f27b:	mov    rdx,QWORD PTR [rsp+0x30]
  40f280:	mov    rcx,r12
  40f283:	call   0x401f10
  40f288:	lea    rbp,[rsp+0xa10]
  40f290:	mov    rdx,QWORD PTR [rsp+0x48]
  40f295:	mov    rcx,rbp
  40f298:	call   0x401f10
  40f29d:	lea    rsi,[rsp+0x980]
  40f2a5:	lea    r8,[rsp+0xf70]
  40f2ad:	lea    rdx,[rip+0x841e]        # 0x4176d2
  40f2b4:	mov    rcx,rsi
  40f2b7:	call   0x408138
  40f2bc:	lea    rcx,[rip+0xddbd]        # 0x41d080
  40f2c3:	mov    rdx,rsi
  40f2c6:	call   0x40a360
  40f2cb:	lea    rsi,[rsp+0x950]
  40f2d3:	lea    r8,[rsp+0xf60]
  40f2db:	lea    rdx,[rip+0x701b]        # 0x4162fd
  40f2e2:	mov    r15,rax
  40f2e5:	mov    rcx,rsi
  40f2e8:	call   0x408138
  40f2ed:	lea    rcx,[rip+0xdd8c]        # 0x41d080
  40f2f4:	mov    rdx,rsi
  40f2f7:	call   0x40a360
  40f2fc:	lea    rsi,[rsp+0x920]
  40f304:	lea    r8,[rsp+0xf50]
  40f30c:	lea    rdx,[rip+0x6f9b]        # 0x4162ae
  40f313:	mov    QWORD PTR [rsp+0x38],rax
  40f318:	mov    rcx,rsi
  40f31b:	call   0x408138
  40f320:	lea    rcx,[rip+0xdd59]        # 0x41d080
  40f327:	mov    rdx,rsi
  40f32a:	call   0x40a360
  40f32f:	lea    rsi,[rsp+0x900]
  40f337:	lea    r8,[rsp+0xf40]
  40f33f:	lea    rdx,[rip+0x6fad]        # 0x4162f3
  40f346:	mov    rdi,rax
  40f349:	mov    rcx,rsi
  40f34c:	call   0x408138
  40f351:	lea    rcx,[rip+0xdd28]        # 0x41d080
  40f358:	mov    rdx,rsi
  40f35b:	call   0x40a360
  40f360:	lea    rsi,[rsp+0x910]
  40f368:	mov    rdx,rax
  40f36b:	mov    rcx,rsi
  40f36e:	call   0x408128
  40f373:	lea    rdx,[rip+0x860a]        # 0x417984
  40f37a:	mov    r8d,0x4
  40f380:	mov    rcx,rsi
  40f383:	call   0x408170
  40f388:	mov    rdx,rdi
  40f38b:	mov    rcx,rsi
  40f38e:	call   0x408168
  40f393:	mov    rsi,rax
  40f396:	mov    rax,QWORD PTR [rax]
  40f399:	lea    r8,[rsp+0x132]
  40f3a1:	xor    edx,edx
  40f3a3:	xor    ecx,ecx
  40f3a5:	mov    QWORD PTR [rsp+0x930],rax
  40f3ad:	call   0x4081a0
  40f3b2:	lea    rcx,[rsp+0x930]
  40f3ba:	lea    rdx,[rip+0x8304]        # 0x4176c5
  40f3c1:	mov    QWORD PTR [rsi],rax
  40f3c4:	mov    r8d,0x1
  40f3ca:	call   0x408170
  40f3cf:	mov    rsi,rax
  40f3d2:	mov    rax,QWORD PTR [rax]
  40f3d5:	lea    r8,[rsp+0x133]
  40f3dd:	xor    edx,edx
  40f3df:	xor    ecx,ecx
  40f3e1:	mov    QWORD PTR [rsp+0x940],rax
  40f3e9:	call   0x4081a0
  40f3ee:	mov    rdx,QWORD PTR [rsp+0x38]
  40f3f3:	lea    rcx,[rsp+0x940]
  40f3fb:	mov    QWORD PTR [rsi],rax
  40f3fe:	call   0x408168
  40f403:	mov    rsi,rax
  40f406:	mov    rax,QWORD PTR [rax]
  40f409:	lea    r8,[rsp+0x134]
  40f411:	xor    edx,edx
  40f413:	xor    ecx,ecx
  40f415:	mov    QWORD PTR [rsp+0x960],rax
  40f41d:	call   0x4081a0
  40f422:	lea    rcx,[rsp+0x960]
  40f42a:	lea    rdx,[rip+0x8294]        # 0x4176c5
  40f431:	mov    QWORD PTR [rsi],rax
  40f434:	mov    r8d,0x1
  40f43a:	call   0x408170
  40f43f:	mov    rsi,rax
  40f442:	mov    rax,QWORD PTR [rax]
  40f445:	lea    r8,[rsp+0x135]
  40f44d:	xor    edx,edx
  40f44f:	xor    ecx,ecx
  40f451:	mov    QWORD PTR [rsp+0x970],rax
  40f459:	call   0x4081a0
  40f45e:	lea    rcx,[rsp+0x970]
  40f466:	mov    QWORD PTR [rsi],rax
  40f469:	mov    rdx,r15
  40f46c:	call   0x408168
  40f471:	mov    rsi,rax
  40f474:	mov    rax,QWORD PTR [rax]
  40f477:	lea    r8,[rsp+0x136]
  40f47f:	xor    edx,edx
  40f481:	xor    ecx,ecx
  40f483:	mov    QWORD PTR [rsp+0x990],rax
  40f48b:	call   0x4081a0
  40f490:	lea    rcx,[rsp+0x990]
  40f498:	lea    rdx,[rip+0x8226]        # 0x4176c5
  40f49f:	mov    QWORD PTR [rsi],rax
  40f4a2:	mov    r8d,0x1
  40f4a8:	call   0x408170
  40f4ad:	mov    rsi,rax
  40f4b0:	mov    rax,QWORD PTR [rax]
  40f4b3:	lea    r8,[rsp+0x137]
  40f4bb:	xor    edx,edx
  40f4bd:	xor    ecx,ecx
  40f4bf:	mov    QWORD PTR [rsp+0x9a0],rax
  40f4c7:	call   0x4081a0
  40f4cc:	mov    rdx,QWORD PTR [rsp+0x70]
  40f4d1:	lea    rcx,[rsp+0x9a0]
  40f4d9:	mov    QWORD PTR [rsi],rax
  40f4dc:	call   0x408168
  40f4e1:	mov    rsi,rax
  40f4e4:	mov    rax,QWORD PTR [rax]
  40f4e7:	lea    r8,[rsp+0x138]
  40f4ef:	xor    edx,edx
  40f4f1:	xor    ecx,ecx
  40f4f3:	mov    QWORD PTR [rsp+0x9b0],rax
  40f4fb:	call   0x4081a0
  40f500:	lea    rcx,[rsp+0x9b0]
  40f508:	lea    rdx,[rip+0x81b6]        # 0x4176c5
  40f50f:	mov    QWORD PTR [rsi],rax
  40f512:	mov    r8d,0x1
  40f518:	call   0x408170
  40f51d:	mov    rsi,rax
  40f520:	mov    rax,QWORD PTR [rax]
  40f523:	lea    r8,[rsp+0x139]
  40f52b:	xor    edx,edx
  40f52d:	xor    ecx,ecx
  40f52f:	mov    QWORD PTR [rsp+0x9c0],rax
  40f537:	call   0x4081a0
  40f53c:	mov    rdx,QWORD PTR [rsp+0x58]
  40f541:	lea    rcx,[rsp+0x9c0]
  40f549:	mov    QWORD PTR [rsi],rax
  40f54c:	call   0x408168
  40f551:	mov    rsi,rax
  40f554:	mov    rax,QWORD PTR [rax]
  40f557:	lea    r8,[rsp+0x13a]
  40f55f:	xor    edx,edx
  40f561:	xor    ecx,ecx
  40f563:	mov    QWORD PTR [rsp+0x9d0],rax
  40f56b:	call   0x4081a0
  40f570:	lea    rcx,[rsp+0x9d0]
  40f578:	lea    rdx,[rip+0x8146]        # 0x4176c5
  40f57f:	mov    QWORD PTR [rsi],rax
  40f582:	mov    r8d,0x1
  40f588:	call   0x408170
  40f58d:	mov    rsi,rax
  40f590:	mov    rax,QWORD PTR [rax]
  40f593:	lea    r8,[rsp+0x13b]
  40f59b:	xor    edx,edx
  40f59d:	xor    ecx,ecx
  40f59f:	mov    QWORD PTR [rsp+0x9e0],rax
  40f5a7:	call   0x4081a0
  40f5ac:	mov    rdx,QWORD PTR [rsp+0x60]
  40f5b1:	lea    rcx,[rsp+0x9e0]
  40f5b9:	mov    QWORD PTR [rsi],rax
  40f5bc:	call   0x408168
  40f5c1:	mov    rsi,rax
  40f5c4:	mov    rax,QWORD PTR [rax]
  40f5c7:	lea    r8,[rsp+0x13c]
  40f5cf:	xor    edx,edx
  40f5d1:	xor    ecx,ecx
  40f5d3:	mov    QWORD PTR [rsp+0x9f0],rax
  40f5db:	call   0x4081a0
  40f5e0:	lea    rcx,[rsp+0x9f0]
  40f5e8:	lea    rdx,[rip+0x80d6]        # 0x4176c5
  40f5ef:	mov    QWORD PTR [rsi],rax
  40f5f2:	mov    r8d,0x1
  40f5f8:	call   0x408170
  40f5fd:	mov    rsi,rax
  40f600:	mov    rax,QWORD PTR [rax]
  40f603:	lea    r8,[rsp+0x13d]
  40f60b:	xor    edx,edx
  40f60d:	xor    ecx,ecx
  40f60f:	mov    QWORD PTR [rsp+0xa00],rax
  40f617:	call   0x4081a0
  40f61c:	mov    QWORD PTR [rsi],rax
  40f61f:	mov    r8,QWORD PTR [rsp+0xa00]
  40f627:	mov    rax,QWORD PTR [rsp+0xa10]
  40f62f:	mov    r9,QWORD PTR [r8-0x18]
  40f633:	mov    rdx,r9
  40f636:	add    rdx,QWORD PTR [rax-0x18]
  40f63a:	cmp    rdx,QWORD PTR [r8-0x10]
  40f63e:	ja     0x40ee32
  40f644:	lea    rcx,[rsp+0xa00]
  40f64c:	mov    rdx,rbp
  40f64f:	call   0x408168
  40f654:	jmp    0x40ee46
  40f659:	mov    rdi,QWORD PTR [rsp+0xa8]
  40f661:	lea    rbx,[rsp+0x500]
  40f669:	mov    rcx,rbx
  40f66c:	mov    rdx,rdi
  40f66f:	call   0x401b40
  40f674:	lea    rsi,[rsp+0x510]
  40f67c:	mov    r8,QWORD PTR [rsp+0xd0]
  40f684:	mov    rdx,rbx
  40f687:	mov    rcx,rsi
  40f68a:	call   0x40aef0
  40f68f:	mov    rdx,rsi
  40f692:	mov    rcx,rdi
  40f695:	call   0x408180
  40f69a:	mov    rax,QWORD PTR [rsp+0x510]
  40f6a2:	mov    rdx,r14
  40f6a5:	lea    rcx,[rax-0x18]
  40f6a9:	call   0x408188
  40f6ae:	mov    rax,QWORD PTR [rsp+0x500]
  40f6b6:	mov    rdx,r14
  40f6b9:	lea    rcx,[rax-0x18]
  40f6bd:	call   0x408188
  40f6c2:	jmp    0x40b79d
  40f6c7:	nop    WORD PTR [rax+rax*1+0x0]
  40f6d0:	lea    rcx,[rsp+0xa30]
  40f6d8:	mov    rdx,r12
  40f6db:	call   0x408168
  40f6e0:	jmp    0x40eedd
  40f6e5:	test   al,al
  40f6e7:	mov    rdi,QWORD PTR [rsp+0xfd0]
  40f6ef:	je     0x4100da
  40f6f5:	cmp    rdi,QWORD PTR [rsp+0x88]
  40f6fd:	lea    rax,[rsp+0xf90]
  40f705:	mov    QWORD PTR [rsp+0x48],rax
  40f70a:	je     0x4100da
  40f710:	lea    rax,[rsp+0xa50]
  40f718:	mov    QWORD PTR [rsp+0x40],rax
  40f71d:	lea    rax,[rsp+0xfa0]
  40f725:	mov    QWORD PTR [rsp+0x38],rax
  40f72a:	lea    rax,[rsp+0x105]
  40f732:	mov    QWORD PTR [rsp+0x80],rax
  40f73a:	lea    rax,[rsp+0xa70]
  40f742:	mov    QWORD PTR [rsp+0xb0],rax
  40f74a:	lea    rax,[rsp+0xa60]
  40f752:	mov    QWORD PTR [rsp+0xb8],rax
  40f75a:	lea    rax,[rsp+0xa80]
  40f762:	mov    QWORD PTR [rsp+0x90],rax
  40f76a:	jmp    0x40fa61
  40f76f:	nop
  40f770:	cmp    rdx,QWORD PTR [rax-0x10]
  40f774:	ja     0x40ff4c
  40f77a:	xor    edx,edx
  40f77c:	mov    rcx,rbp
  40f77f:	call   0x408150
  40f784:	mov    rbx,rax
  40f787:	lea    r8,[rsp+0x14d]
  40f78f:	xor    edx,edx
  40f791:	mov    rax,QWORD PTR [rbx]
  40f794:	xor    ecx,ecx
  40f796:	mov    QWORD PTR [rsp+0xbb0],rax
  40f79e:	call   0x4081a0
  40f7a3:	lea    rcx,[rsp+0xbb0]
  40f7ab:	lea    rdx,[rip+0x81d7]        # 0x417989
  40f7b2:	mov    QWORD PTR [rbx],rax
  40f7b5:	mov    r8d,0x4
  40f7bb:	call   0x408170
  40f7c0:	mov    rbx,rax
  40f7c3:	mov    rax,QWORD PTR [rax]
  40f7c6:	lea    r8,[rsp+0x14e]
  40f7ce:	xor    edx,edx
  40f7d0:	xor    ecx,ecx
  40f7d2:	mov    QWORD PTR [rsp+0xbc0],rax
  40f7da:	call   0x4081a0
  40f7df:	mov    QWORD PTR [rbx],rax
  40f7e2:	mov    r8,QWORD PTR [rsp+0xbc0]
  40f7ea:	mov    rax,QWORD PTR [rsp+0xbd0]
  40f7f2:	mov    r9,QWORD PTR [r8-0x18]
  40f7f6:	mov    rdx,r9
  40f7f9:	add    rdx,QWORD PTR [rax-0x18]
  40f7fd:	cmp    rdx,QWORD PTR [r8-0x10]
  40f801:	jbe    0x410094
  40f807:	cmp    rdx,QWORD PTR [rax-0x10]
  40f80b:	ja     0x410094
  40f811:	xor    edx,edx
  40f813:	mov    rcx,r12
  40f816:	call   0x408150
  40f81b:	mov    rbx,rax
  40f81e:	lea    r8,[rsp+0x14f]
  40f826:	xor    edx,edx
  40f828:	mov    rax,QWORD PTR [rbx]
  40f82b:	xor    ecx,ecx
  40f82d:	mov    QWORD PTR [rsp+0xff0],rax
  40f835:	call   0x4081a0
  40f83a:	mov    QWORD PTR [rbx],rax
  40f83d:	mov    rax,QWORD PTR [rsp+0xbc0]
  40f845:	lea    rsi,[rsp+0xf80]
  40f84d:	mov    rdx,rsi
  40f850:	lea    rcx,[rax-0x18]
  40f854:	call   0x408188
  40f859:	mov    rax,QWORD PTR [rsp+0xbb0]
  40f861:	mov    rdx,rsi
  40f864:	lea    rcx,[rax-0x18]
  40f868:	call   0x408188
  40f86d:	mov    rax,QWORD PTR [rsp+0xb90]
  40f875:	mov    rdx,rsi
  40f878:	lea    rcx,[rax-0x18]
  40f87c:	call   0x408188
  40f881:	mov    rax,QWORD PTR [rsp+0xb80]
  40f889:	mov    rdx,rsi
  40f88c:	lea    rcx,[rax-0x18]
  40f890:	call   0x408188
  40f895:	mov    rax,QWORD PTR [rsp+0xb70]
  40f89d:	mov    rdx,rsi
  40f8a0:	lea    rcx,[rax-0x18]
  40f8a4:	call   0x408188
  40f8a9:	mov    rax,QWORD PTR [rsp+0xb60]
  40f8b1:	mov    rdx,rsi
  40f8b4:	lea    rcx,[rax-0x18]
  40f8b8:	call   0x408188
  40f8bd:	mov    rax,QWORD PTR [rsp+0xb50]
  40f8c5:	mov    rdx,rsi
  40f8c8:	lea    rcx,[rax-0x18]
  40f8cc:	call   0x408188
  40f8d1:	mov    rax,QWORD PTR [rsp+0xb40]
  40f8d9:	mov    rdx,rsi
  40f8dc:	lea    rcx,[rax-0x18]
  40f8e0:	call   0x408188
  40f8e5:	mov    rax,QWORD PTR [rsp+0xb30]
  40f8ed:	mov    rdx,rsi
  40f8f0:	lea    rcx,[rax-0x18]
  40f8f4:	call   0x408188
  40f8f9:	mov    rax,QWORD PTR [rsp+0xb20]
  40f901:	mov    rdx,rsi
  40f904:	lea    rcx,[rax-0x18]
  40f908:	call   0x408188
  40f90d:	mov    rax,QWORD PTR [rsp+0xb00]
  40f915:	mov    rdx,rsi
  40f918:	lea    rcx,[rax-0x18]
  40f91c:	call   0x408188
  40f921:	mov    rax,QWORD PTR [rsp+0xaf0]
  40f929:	mov    rdx,rsi
  40f92c:	lea    rcx,[rax-0x18]
  40f930:	call   0x408188
  40f935:	mov    rax,QWORD PTR [rsp+0xad0]
  40f93d:	mov    rdx,rsi
  40f940:	lea    rcx,[rax-0x18]
  40f944:	call   0x408188
  40f949:	mov    rax,QWORD PTR [rsp+0xac0]
  40f951:	mov    rdx,rsi
  40f954:	lea    rcx,[rax-0x18]
  40f958:	call   0x408188
  40f95d:	mov    rax,QWORD PTR [rsp+0xaa0]
  40f965:	mov    rdx,rsi
  40f968:	lea    rcx,[rax-0x18]
  40f96c:	call   0x408188
  40f971:	mov    rax,QWORD PTR [rsp+0xa90]
  40f979:	mov    rdx,rsi
  40f97c:	lea    rcx,[rax-0x18]
  40f980:	call   0x408188
  40f985:	mov    rax,QWORD PTR [rsp+0xab0]
  40f98d:	mov    rdx,rsi
  40f990:	lea    rcx,[rax-0x18]
  40f994:	call   0x408188
  40f999:	mov    rax,QWORD PTR [rsp+0xae0]
  40f9a1:	mov    rdx,rsi
  40f9a4:	lea    rcx,[rax-0x18]
  40f9a8:	call   0x408188
  40f9ad:	mov    rax,QWORD PTR [rsp+0xb10]
  40f9b5:	mov    rdx,rsi
  40f9b8:	lea    rcx,[rax-0x18]
  40f9bc:	call   0x408188
  40f9c1:	mov    rax,QWORD PTR [rsp+0xba0]
  40f9c9:	mov    rdx,rsi
  40f9cc:	lea    rcx,[rax-0x18]
  40f9d0:	call   0x408188
  40f9d5:	mov    rax,QWORD PTR [rsp+0xbd0]
  40f9dd:	mov    rdx,rsi
  40f9e0:	lea    rcx,[rax-0x18]
  40f9e4:	call   0x408188
  40f9e9:	movzx  edx,BYTE PTR [rsp+0x78]
  40f9ee:	mov    rcx,r14
  40f9f1:	call   0x4018b0
  40f9f6:	mov    ebp,eax
  40f9f8:	mov    rax,QWORD PTR [rsp+0xff0]
  40fa00:	mov    rdx,rsi
  40fa03:	lea    rcx,[rax-0x18]
  40fa07:	call   0x408188
  40fa0c:	mov    rax,QWORD PTR [rsp+0xfb0]
  40fa14:	mov    rdx,rsi
  40fa17:	lea    rcx,[rax-0x18]
  40fa1b:	call   0x408188
  40fa20:	mov    rax,QWORD PTR [rsp+0xfa0]
  40fa28:	mov    rdx,rsi
  40fa2b:	lea    rcx,[rax-0x18]
  40fa2f:	call   0x408188
  40fa34:	mov    rax,QWORD PTR [rsp+0xf90]
  40fa3c:	mov    rdx,r14
  40fa3f:	lea    rcx,[rax-0x18]
  40fa43:	call   0x408188
  40fa48:	test   ebp,ebp
  40fa4a:	mov    rdi,QWORD PTR [rdi]
  40fa4d:	jne    0x4100da
  40fa53:	cmp    rdi,QWORD PTR [rsp+0x88]
  40fa5b:	je     0x4100da
  40fa61:	mov    rcx,QWORD PTR [rsp+0x48]
  40fa66:	lea    rdx,[rdi+0x10]
  40fa6a:	call   0x408128
  40fa6f:	mov    rbx,QWORD PTR [rsp+0x40]
  40fa74:	mov    r8,QWORD PTR [rsp+0x30]
  40fa79:	lea    rdx,[rip+0x6897]        # 0x416317
  40fa80:	mov    rcx,rbx
  40fa83:	call   0x408138
  40fa88:	lea    rcx,[rip+0xd5f1]        # 0x41d080
  40fa8f:	mov    rdx,rbx
  40fa92:	call   0x40a360
  40fa97:	mov    rax,QWORD PTR [rax]
  40fa9a:	mov    rdx,r14
  40fa9d:	mov    rbx,QWORD PTR [rax-0x18]
  40faa1:	mov    rax,QWORD PTR [rsp+0xa50]
  40faa9:	lea    rcx,[rax-0x18]
  40faad:	call   0x408188
  40fab2:	test   rbx,rbx
  40fab5:	je     0x410d0c
  40fabb:	mov    rdx,QWORD PTR [rsp+0x48]
  40fac0:	mov    rcx,QWORD PTR [rsp+0x38]
  40fac5:	call   0x401b40
  40faca:	mov    r8,QWORD PTR [rsp+0x80]
  40fad2:	xor    edx,edx
  40fad4:	xor    ecx,ecx
  40fad6:	call   0x4081a0
  40fadb:	mov    QWORD PTR [rsp+0xfb0],rax
  40fae3:	mov    rax,QWORD PTR [rsp+0x1a0]
  40faeb:	cmp    QWORD PTR [rax-0x18],0x0
  40faf0:	je     0x410936
  40faf6:	cmp    BYTE PTR [rsp+0x98],0x0
  40fafe:	je     0x4108d8
  40fb04:	mov    rbx,QWORD PTR [rsp+0xb8]
  40fb0c:	mov    rdx,QWORD PTR [rsp+0x38]
  40fb11:	lea    r8,[rip+0x7c47]        # 0x41775f
  40fb18:	mov    rcx,rbx
  40fb1b:	call   0x40b010
  40fb20:	mov    rcx,QWORD PTR [rsp+0x30]
  40fb25:	mov    rdx,rbx
  40fb28:	call   0x408180
  40fb2d:	mov    rax,QWORD PTR [rsp+0xa60]
  40fb35:	mov    rdx,r14
  40fb38:	lea    rcx,[rax-0x18]
  40fb3c:	call   0x408188
  40fb41:	mov    rsi,QWORD PTR [rsp+0x30]
  40fb46:	mov    rbx,QWORD PTR [rsp+0x90]
  40fb4e:	lea    rdx,[rip+0x7b70]        # 0x4176c5
  40fb55:	mov    r8,rsi
  40fb58:	mov    rcx,rbx
  40fb5b:	call   0x40af80
  40fb60:	mov    rcx,QWORD PTR [rsp+0x68]
  40fb65:	mov    rdx,rbx
  40fb68:	call   0x408168
  40fb6d:	mov    rax,QWORD PTR [rsp+0xa80]
  40fb75:	lea    r12,[rsp+0xbd0]
  40fb7d:	mov    rdx,r14
  40fb80:	lea    rcx,[rax-0x18]
  40fb84:	call   0x408188
  40fb89:	mov    rdx,rsi
  40fb8c:	mov    rcx,r12
  40fb8f:	call   0x401f10
  40fb94:	lea    rbp,[rsp+0xba0]
  40fb9c:	mov    rdx,QWORD PTR [rsp+0x48]
  40fba1:	mov    rcx,rbp
  40fba4:	call   0x401f10
  40fba9:	lea    rbx,[rsp+0xb10]
  40fbb1:	lea    r8,[rsp+0xf70]
  40fbb9:	lea    rdx,[rip+0x7b1d]        # 0x4176dd
  40fbc0:	mov    rcx,rbx
  40fbc3:	call   0x408138
  40fbc8:	lea    rcx,[rip+0xd4b1]        # 0x41d080
  40fbcf:	mov    rdx,rbx
  40fbd2:	call   0x40a360
  40fbd7:	lea    rbx,[rsp+0xae0]
  40fbdf:	lea    r8,[rsp+0xf60]
  40fbe7:	lea    rdx,[rip+0x6736]        # 0x416324
  40fbee:	mov    r15,rax
  40fbf1:	mov    rcx,rbx
  40fbf4:	call   0x408138
  40fbf9:	lea    rcx,[rip+0xd480]        # 0x41d080
  40fc00:	mov    rdx,rbx
  40fc03:	call   0x40a360
  40fc08:	lea    rbx,[rsp+0xab0]
  40fc10:	lea    r8,[rsp+0xf50]
  40fc18:	lea    rdx,[rip+0x668f]        # 0x4162ae
  40fc1f:	mov    r13,rax
  40fc22:	mov    rcx,rbx
  40fc25:	call   0x408138
  40fc2a:	lea    rcx,[rip+0xd44f]        # 0x41d080
  40fc31:	mov    rdx,rbx
  40fc34:	call   0x40a360
  40fc39:	lea    rbx,[rsp+0xa90]
  40fc41:	lea    r8,[rsp+0xf40]
  40fc49:	lea    rdx,[rip+0x66c7]        # 0x416317
  40fc50:	mov    rsi,rax
  40fc53:	mov    rcx,rbx
  40fc56:	call   0x408138
  40fc5b:	lea    rcx,[rip+0xd41e]        # 0x41d080
  40fc62:	mov    rdx,rbx
  40fc65:	call   0x40a360
  40fc6a:	lea    rbx,[rsp+0xaa0]
  40fc72:	mov    rdx,rax
  40fc75:	mov    rcx,rbx
  40fc78:	call   0x408128
  40fc7d:	lea    rdx,[rip+0x7d00]        # 0x417984
  40fc84:	mov    r8d,0x4
  40fc8a:	mov    rcx,rbx
  40fc8d:	call   0x408170
  40fc92:	mov    rdx,rsi
  40fc95:	mov    rcx,rbx
  40fc98:	call   0x408168
  40fc9d:	mov    rbx,rax
  40fca0:	mov    rax,QWORD PTR [rax]
  40fca3:	lea    r8,[rsp+0x141]
  40fcab:	xor    edx,edx
  40fcad:	xor    ecx,ecx
  40fcaf:	mov    QWORD PTR [rsp+0xac0],rax
  40fcb7:	call   0x4081a0
  40fcbc:	lea    rcx,[rsp+0xac0]
  40fcc4:	lea    rdx,[rip+0x79fa]        # 0x4176c5
  40fccb:	mov    QWORD PTR [rbx],rax
  40fcce:	mov    r8d,0x1
  40fcd4:	call   0x408170
  40fcd9:	mov    rbx,rax
  40fcdc:	mov    rax,QWORD PTR [rax]
  40fcdf:	lea    r8,[rsp+0x142]
  40fce7:	xor    edx,edx
  40fce9:	xor    ecx,ecx
  40fceb:	mov    QWORD PTR [rsp+0xad0],rax
  40fcf3:	call   0x4081a0
  40fcf8:	lea    rcx,[rsp+0xad0]
  40fd00:	mov    QWORD PTR [rbx],rax
  40fd03:	mov    rdx,r13
  40fd06:	call   0x408168
  40fd0b:	mov    rbx,rax
  40fd0e:	mov    rax,QWORD PTR [rax]
  40fd11:	lea    r8,[rsp+0x143]
  40fd19:	xor    edx,edx
  40fd1b:	xor    ecx,ecx
  40fd1d:	mov    QWORD PTR [rsp+0xaf0],rax
  40fd25:	call   0x4081a0
  40fd2a:	lea    rcx,[rsp+0xaf0]
  40fd32:	lea    rdx,[rip+0x798c]        # 0x4176c5
  40fd39:	mov    QWORD PTR [rbx],rax
  40fd3c:	mov    r8d,0x1
  40fd42:	call   0x408170
  40fd47:	mov    rbx,rax
  40fd4a:	mov    rax,QWORD PTR [rax]
  40fd4d:	lea    r8,[rsp+0x144]
  40fd55:	xor    edx,edx
  40fd57:	xor    ecx,ecx
  40fd59:	mov    QWORD PTR [rsp+0xb00],rax
  40fd61:	call   0x4081a0
  40fd66:	lea    rcx,[rsp+0xb00]
  40fd6e:	mov    QWORD PTR [rbx],rax
  40fd71:	mov    rdx,r15
  40fd74:	call   0x408168
  40fd79:	mov    rbx,rax
  40fd7c:	mov    rax,QWORD PTR [rax]
  40fd7f:	lea    r8,[rsp+0x145]
  40fd87:	xor    edx,edx
  40fd89:	xor    ecx,ecx
  40fd8b:	mov    QWORD PTR [rsp+0xb20],rax
  40fd93:	call   0x4081a0
  40fd98:	lea    rcx,[rsp+0xb20]
  40fda0:	lea    rdx,[rip+0x791e]        # 0x4176c5
  40fda7:	mov    QWORD PTR [rbx],rax
  40fdaa:	mov    r8d,0x1
  40fdb0:	call   0x408170
  40fdb5:	mov    rbx,rax
  40fdb8:	mov    rax,QWORD PTR [rax]
  40fdbb:	lea    r8,[rsp+0x146]
  40fdc3:	xor    edx,edx
  40fdc5:	xor    ecx,ecx
  40fdc7:	mov    QWORD PTR [rsp+0xb30],rax
  40fdcf:	call   0x4081a0
  40fdd4:	mov    rdx,QWORD PTR [rsp+0x70]
  40fdd9:	lea    rcx,[rsp+0xb30]
  40fde1:	mov    QWORD PTR [rbx],rax
  40fde4:	call   0x408168
  40fde9:	mov    rbx,rax
  40fdec:	mov    rax,QWORD PTR [rax]
  40fdef:	lea    r8,[rsp+0x147]
  40fdf7:	xor    edx,edx
  40fdf9:	xor    ecx,ecx
  40fdfb:	mov    QWORD PTR [rsp+0xb40],rax
  40fe03:	call   0x4081a0
  40fe08:	lea    rcx,[rsp+0xb40]
  40fe10:	lea    rdx,[rip+0x78ae]        # 0x4176c5
  40fe17:	mov    QWORD PTR [rbx],rax
  40fe1a:	mov    r8d,0x1
  40fe20:	call   0x408170
  40fe25:	mov    rbx,rax
  40fe28:	mov    rax,QWORD PTR [rax]
  40fe2b:	lea    r8,[rsp+0x148]
  40fe33:	xor    edx,edx
  40fe35:	xor    ecx,ecx
  40fe37:	mov    QWORD PTR [rsp+0xb50],rax
  40fe3f:	call   0x4081a0
  40fe44:	mov    rdx,QWORD PTR [rsp+0x58]
  40fe49:	lea    rcx,[rsp+0xb50]
  40fe51:	mov    QWORD PTR [rbx],rax
  40fe54:	call   0x408168
  40fe59:	mov    rbx,rax
  40fe5c:	mov    rax,QWORD PTR [rax]
  40fe5f:	lea    r8,[rsp+0x149]
  40fe67:	xor    edx,edx
  40fe69:	xor    ecx,ecx
  40fe6b:	mov    QWORD PTR [rsp+0xb60],rax
  40fe73:	call   0x4081a0
  40fe78:	lea    rcx,[rsp+0xb60]
  40fe80:	lea    rdx,[rip+0x783e]        # 0x4176c5
  40fe87:	mov    QWORD PTR [rbx],rax
  40fe8a:	mov    r8d,0x1
  40fe90:	call   0x408170
  40fe95:	mov    rbx,rax
  40fe98:	mov    rax,QWORD PTR [rax]
  40fe9b:	lea    r8,[rsp+0x14a]
  40fea3:	xor    edx,edx
  40fea5:	xor    ecx,ecx
  40fea7:	mov    QWORD PTR [rsp+0xb70],rax
  40feaf:	call   0x4081a0
  40feb4:	mov    rdx,QWORD PTR [rsp+0x60]
  40feb9:	lea    rcx,[rsp+0xb70]
  40fec1:	mov    QWORD PTR [rbx],rax
  40fec4:	call   0x408168
  40fec9:	mov    rbx,rax
  40fecc:	mov    rax,QWORD PTR [rax]
  40fecf:	lea    r8,[rsp+0x14b]
  40fed7:	xor    edx,edx
  40fed9:	xor    ecx,ecx
  40fedb:	mov    QWORD PTR [rsp+0xb80],rax
  40fee3:	call   0x4081a0
  40fee8:	lea    rcx,[rsp+0xb80]
  40fef0:	lea    rdx,[rip+0x77ce]        # 0x4176c5
  40fef7:	mov    QWORD PTR [rbx],rax
  40fefa:	mov    r8d,0x1
  40ff00:	call   0x408170
  40ff05:	mov    rbx,rax
  40ff08:	mov    rax,QWORD PTR [rax]
  40ff0b:	lea    r8,[rsp+0x14c]
  40ff13:	xor    edx,edx
  40ff15:	xor    ecx,ecx
  40ff17:	mov    QWORD PTR [rsp+0xb90],rax
  40ff1f:	call   0x4081a0
  40ff24:	mov    QWORD PTR [rbx],rax
  40ff27:	mov    r8,QWORD PTR [rsp+0xb90]
  40ff2f:	mov    rax,QWORD PTR [rsp+0xba0]
  40ff37:	mov    r9,QWORD PTR [r8-0x18]
  40ff3b:	mov    rdx,r9
  40ff3e:	add    rdx,QWORD PTR [rax-0x18]
  40ff42:	cmp    rdx,QWORD PTR [r8-0x10]
  40ff46:	ja     0x40f770
  40ff4c:	lea    rcx,[rsp+0xb90]
  40ff54:	mov    rdx,rbp
  40ff57:	call   0x408168
  40ff5c:	jmp    0x40f784
  40ff61:	mov    rcx,rdi
  40ff64:	call   0x4081c0
  40ff69:	mov    rax,QWORD PTR [rdi]
  40ff6c:	lea    rcx,[rip+0xffffffffffffa34d]        # 0x40a2c0
  40ff73:	mov    edx,0xa
  40ff78:	mov    rax,QWORD PTR [rax+0x30]
  40ff7c:	cmp    rax,rcx
  40ff7f:	je     0x40d10a
  40ff85:	mov    rcx,rdi
  40ff88:	call   rax
  40ff8a:	movsx  edx,al
  40ff8d:	jmp    0x40d10a
  40ff92:	mov    rdx,QWORD PTR [rsp+0xfa0]
  40ff9a:	mov    rcx,r14
  40ff9d:	mov    r8,QWORD PTR [rdx-0x18]
  40ffa1:	call   0x4080a8
  40ffa6:	mov    rbp,rax
  40ffa9:	mov    rax,QWORD PTR [rax]
  40ffac:	mov    rax,QWORD PTR [rax-0x18]
  40ffb0:	mov    rdi,QWORD PTR [rbp+rax*1+0xf0]
  40ffb8:	test   rdi,rdi
  40ffbb:	je     0x411da1
  40ffc1:	cmp    BYTE PTR [rdi+0x38],0x0
  40ffc5:	je     0x410063
  40ffcb:	movsx  edx,BYTE PTR [rdi+0x43]
  40ffcf:	mov    rcx,rbp
  40ffd2:	call   0x4081b8
  40ffd7:	mov    rcx,rax
  40ffda:	call   0x4081b0
  40ffdf:	jmp    0x40cf60
  40ffe4:	mov    eax,0xffffffff
  40ffe9:	lock xadd DWORD PTR [rcx-0x8],eax
  40ffee:	test   eax,eax
  40fff0:	jg     0x40cfac
  40fff6:	mov    rdx,QWORD PTR [rsp+0x30]
  40fffb:	sub    rcx,0x18
  40ffff:	call   0x408190
  410004:	jmp    0x40cfac
  410009:	nop    DWORD PTR [rax+0x0]
  410010:	mov    rcx,QWORD PTR [rsp+0x30]
  410015:	add    rdi,0x2
  410019:	xor    r8d,r8d
  41001c:	mov    r9,rdi
  41001f:	mov    rdx,rbx
  410022:	call   0x408120
  410027:	jmp    0x40d020
  41002c:	nop    DWORD PTR [rax+0x0]
  410030:	mov    eax,0xffffffff
  410035:	lock xadd DWORD PTR [rcx-0x8],eax
  41003a:	jmp    0x40d15d
  41003f:	nop
  410040:	mov    eax,0xffffffff
  410045:	lock xadd DWORD PTR [rcx-0x8],eax
  41004a:	test   eax,eax
  41004c:	jg     0x40d140
  410052:	sub    rcx,0x18
  410056:	mov    rdx,rsi
  410059:	call   0x408190
  41005e:	jmp    0x40d140
  410063:	mov    rcx,rdi
  410066:	call   0x4081c0
  41006b:	mov    rax,QWORD PTR [rdi]
  41006e:	lea    rcx,[rip+0xffffffffffffa24b]        # 0x40a2c0
  410075:	mov    edx,0xa
  41007a:	mov    rax,QWORD PTR [rax+0x30]
  41007e:	cmp    rax,rcx
  410081:	je     0x40ffcf
  410087:	mov    rcx,rdi
  41008a:	call   rax
  41008c:	movsx  edx,al
  41008f:	jmp    0x40ffcf
  410094:	lea    rcx,[rsp+0xbc0]
  41009c:	mov    rdx,r12
  41009f:	call   0x408168
  4100a4:	jmp    0x40f81b
  4100a9:	mov    rdx,QWORD PTR [rsp+0xc0]
  4100b1:	mov    rcx,QWORD PTR [rsp+0x30]
  4100b6:	call   0x408158
  4100bb:	jmp    0x40f225
  4100c0:	mov    rdx,QWORD PTR [rsp+0x98]
  4100c8:	lea    rcx,[rsp+0x740]
  4100d0:	call   0x408168
  4100d5:	jmp    0x40cbb1
  4100da:	cmp    BYTE PTR [rsp+0x98],0x0
  4100e2:	je     0x40d2e8
  4100e8:	test   ebp,ebp
  4100ea:	jne    0x40d2e8
  4100f0:	mov    rax,QWORD PTR [rsp+0x170]
  4100f8:	cmp    QWORD PTR [rax-0x18],0x0
  4100fd:	je     0x40d2e8
  410103:	cmp    BYTE PTR [rsp+0xe4],0x0
  41010b:	je     0x412b60
  410111:	lea    rbx,[rsp+0xbe0]
  410119:	mov    r8,QWORD PTR [rsp+0x30]
  41011e:	lea    rdx,[rip+0x7476]        # 0x41759b
  410125:	mov    rcx,rbx
  410128:	call   0x408138
  41012d:	lea    rcx,[rip+0xcf4c]        # 0x41d080
  410134:	mov    rdx,rbx
  410137:	call   0x40a360
  41013c:	mov    rax,QWORD PTR [rax]
  41013f:	mov    rdx,r14
  410142:	mov    rbx,QWORD PTR [rax-0x18]
  410146:	mov    rax,QWORD PTR [rsp+0xbe0]
  41014e:	lea    rcx,[rax-0x18]
  410152:	call   0x408188
  410157:	test   rbx,rbx
  41015a:	je     0x412b2c
  410160:	lea    rbx,[rsp+0xde0]
  410168:	lea    r8,[rsp+0xfa0]
  410170:	lea    rdx,[rip+0x6ad2]        # 0x416c49
  410177:	mov    rcx,rbx
  41017a:	call   0x408138
  41017f:	lea    rcx,[rip+0xcefa]        # 0x41d080
  410186:	mov    rdx,rbx
  410189:	call   0x40a360
  41018e:	lea    rbx,[rsp+0xdb0]
  410196:	lea    r8,[rsp+0xf90]
  41019e:	lea    rdx,[rip+0x6c5b]        # 0x416e00
  4101a5:	mov    QWORD PTR [rsp+0x38],rax
  4101aa:	mov    rcx,rbx
  4101ad:	call   0x408138
  4101b2:	lea    rcx,[rip+0xcec7]        # 0x41d080
  4101b9:	mov    rdx,rbx
  4101bc:	call   0x40a360
  4101c1:	lea    rbx,[rsp+0xd70]
  4101c9:	lea    r8,[rsp+0xf80]
  4101d1:	lea    rdx,[rip+0x74d4]        # 0x4176ac
  4101d8:	mov    r13,rax
  4101db:	mov    rcx,rbx
  4101de:	call   0x408138
  4101e3:	lea    rcx,[rip+0xce96]        # 0x41d080
  4101ea:	mov    rdx,rbx
  4101ed:	call   0x40a360
  4101f2:	lea    rbx,[rsp+0xca0]
  4101fa:	lea    r8,[rsp+0xf70]
  410202:	lea    rdx,[rip+0x74e1]        # 0x4176ea
  410209:	mov    r12,rax
  41020c:	mov    rcx,rbx
  41020f:	call   0x408138
  410214:	lea    rcx,[rip+0xce65]        # 0x41d080
  41021b:	mov    rdx,rbx
  41021e:	call   0x40a360
  410223:	lea    rbx,[rsp+0xc70]
  41022b:	lea    r8,[rsp+0xf60]
  410233:	lea    rdx,[rip+0x6178]        # 0x4163b2
  41023a:	mov    rbp,rax
  41023d:	mov    rcx,rbx
  410240:	call   0x408138
  410245:	lea    rcx,[rip+0xce34]        # 0x41d080
  41024c:	mov    rdx,rbx
  41024f:	call   0x40a360
  410254:	lea    rbx,[rsp+0xc40]
  41025c:	lea    r8,[rsp+0xf50]
  410264:	lea    rdx,[rip+0x7472]        # 0x4176dd
  41026b:	mov    rdi,rax
  41026e:	mov    rcx,rbx
  410271:	call   0x408138
  410276:	lea    rcx,[rip+0xce03]        # 0x41d080
  41027d:	mov    rdx,rbx
  410280:	call   0x40a360
  410285:	lea    rbx,[rsp+0xc10]
  41028d:	lea    r8,[rsp+0xf40]
  410295:	lea    rdx,[rip+0x6012]        # 0x4162ae
  41029c:	mov    QWORD PTR [rsp+0x40],rax
  4102a1:	mov    rcx,rbx
  4102a4:	call   0x408138
  4102a9:	lea    rcx,[rip+0xcdd0]        # 0x41d080
  4102b0:	mov    rdx,rbx
  4102b3:	call   0x40a360
  4102b8:	lea    r15,[rsp+0xbf0]
  4102c0:	lea    r8,[rsp+0xf30]
  4102c8:	lea    rdx,[rip+0x72cc]        # 0x41759b
  4102cf:	mov    rbx,rax
  4102d2:	mov    rcx,r15
  4102d5:	call   0x408138
  4102da:	lea    rcx,[rip+0xcd9f]        # 0x41d080
  4102e1:	mov    rdx,r15
  4102e4:	call   0x40a360
  4102e9:	lea    r15,[rsp+0xc00]
  4102f1:	lea    r8,[rip+0x73cd]        # 0x4176c5
  4102f8:	mov    rdx,rax
  4102fb:	mov    rcx,r15
  4102fe:	call   0x40b010
  410303:	lea    rsi,[rsp+0xc20]
  41030b:	mov    r8,rbx
  41030e:	mov    rdx,r15
  410311:	mov    rcx,rsi
  410314:	call   0x40aef0
  410319:	lea    rbx,[rsp+0xc30]
  410321:	lea    r8,[rip+0x739d]        # 0x4176c5
  410328:	mov    rdx,rsi
  41032b:	mov    rcx,rbx
  41032e:	call   0x40aea0
  410333:	lea    r15,[rsp+0xc50]
  41033b:	mov    r8,QWORD PTR [rsp+0x40]
  410340:	mov    rdx,rbx
  410343:	mov    rcx,r15
  410346:	call   0x40aef0
  41034b:	lea    rbx,[rsp+0xc60]
  410353:	lea    r8,[rip+0x736b]        # 0x4176c5
  41035a:	mov    rdx,r15
  41035d:	mov    rcx,rbx
  410360:	call   0x40aea0
  410365:	lea    rsi,[rsp+0xc80]
  41036d:	mov    r8,rdi
  410370:	mov    rdx,rbx
  410373:	mov    rcx,rsi
  410376:	call   0x40aef0
  41037b:	lea    rbx,[rsp+0xc90]
  410383:	lea    r8,[rip+0x733b]        # 0x4176c5
  41038a:	mov    rdx,rsi
  41038d:	mov    rcx,rbx
  410390:	call   0x40aea0
  410395:	lea    rsi,[rsp+0xcb0]
  41039d:	mov    r8,rbp
  4103a0:	mov    rdx,rbx
  4103a3:	mov    rcx,rsi
  4103a6:	call   0x40aef0
  4103ab:	lea    rbx,[rsp+0xcc0]
  4103b3:	lea    r8,[rip+0x730b]        # 0x4176c5
  4103ba:	mov    rdx,rsi
  4103bd:	mov    rcx,rbx
  4103c0:	call   0x40aea0
  4103c5:	lea    rsi,[rsp+0xcd0]
  4103cd:	mov    r8,QWORD PTR [rsp+0x70]
  4103d2:	mov    rdx,rbx
  4103d5:	mov    rcx,rsi
  4103d8:	call   0x40aef0
  4103dd:	lea    rbx,[rsp+0xce0]
  4103e5:	lea    r8,[rip+0x72d9]        # 0x4176c5
  4103ec:	mov    rdx,rsi
  4103ef:	mov    rcx,rbx
  4103f2:	call   0x40aea0
  4103f7:	lea    rsi,[rsp+0xcf0]
  4103ff:	lea    r8,[rsp+0x160]
  410407:	mov    rdx,rbx
  41040a:	mov    rcx,rsi
  41040d:	call   0x40aef0
  410412:	lea    rbx,[rsp+0xd00]
  41041a:	lea    r8,[rip+0x72a4]        # 0x4176c5
  410421:	mov    rdx,rsi
  410424:	mov    rcx,rbx
  410427:	call   0x40aea0
  41042c:	lea    rsi,[rsp+0xd10]
  410434:	mov    r8,QWORD PTR [rsp+0x68]
  410439:	mov    rdx,rbx
  41043c:	mov    rcx,rsi
  41043f:	call   0x40aef0
  410444:	lea    rbx,[rsp+0xd20]
  41044c:	lea    r8,[rip+0x7272]        # 0x4176c5
  410453:	mov    rdx,rsi
  410456:	mov    rcx,rbx
  410459:	call   0x40aea0
  41045e:	lea    rdi,[rsp+0xd30]
  410466:	mov    r8,QWORD PTR [rsp+0xc8]
  41046e:	mov    rdx,rbx
  410471:	mov    rcx,rdi
  410474:	call   0x40aef0
  410479:	lea    rsi,[rsp+0xd40]
  410481:	lea    r8,[rip+0x723d]        # 0x4176c5
  410488:	mov    rdx,rdi
  41048b:	mov    rcx,rsi
  41048e:	call   0x40aea0
  410493:	lea    rbx,[rsp+0xd50]
  41049b:	mov    r8,QWORD PTR [rsp+0xd8]
  4104a3:	mov    rdx,rsi
  4104a6:	mov    rcx,rbx
  4104a9:	call   0x40aef0
  4104ae:	lea    rsi,[rsp+0xd60]
  4104b6:	lea    r8,[rip+0x7208]        # 0x4176c5
  4104bd:	mov    rdx,rbx
  4104c0:	mov    rcx,rsi
  4104c3:	call   0x40aea0
  4104c8:	lea    rbx,[rsp+0xd80]
  4104d0:	mov    r8,r12
  4104d3:	mov    rdx,rsi
  4104d6:	mov    rcx,rbx
  4104d9:	call   0x40aef0
  4104de:	lea    rsi,[rsp+0xd90]
  4104e6:	lea    r8,[rip+0x7522]        # 0x417a0f
  4104ed:	mov    rdx,rbx
  4104f0:	mov    rcx,rsi
  4104f3:	call   0x40aea0
  4104f8:	lea    rbx,[rsp+0xda0]
  410500:	lea    r8,[rip+0x71be]        # 0x4176c5
  410507:	mov    rdx,rsi
  41050a:	mov    rcx,rbx
  41050d:	call   0x40aea0
  410512:	lea    rsi,[rsp+0xdc0]
  41051a:	mov    r8,r13
  41051d:	mov    rdx,rbx
  410520:	mov    rcx,rsi
  410523:	call   0x40aef0
  410528:	lea    rbx,[rsp+0xdd0]
  410530:	lea    r8,[rip+0x718e]        # 0x4176c5
  410537:	mov    rdx,rsi
  41053a:	mov    rcx,rbx
  41053d:	call   0x40aea0
  410542:	mov    r8,QWORD PTR [rsp+0x38]
  410547:	mov    rdx,rbx
  41054a:	mov    rcx,r14
  41054d:	call   0x40aef0
  410552:	mov    rax,QWORD PTR [rsp+0xdd0]
  41055a:	mov    rdi,QWORD PTR [rsp+0x30]
  41055f:	lea    rcx,[rax-0x18]
  410563:	mov    rdx,rdi
  410566:	call   0x408188
  41056b:	mov    rax,QWORD PTR [rsp+0xdc0]
  410573:	mov    rdx,rdi
  410576:	lea    rcx,[rax-0x18]
  41057a:	call   0x408188
  41057f:	mov    rax,QWORD PTR [rsp+0xda0]
  410587:	mov    rdx,rdi
  41058a:	lea    rcx,[rax-0x18]
  41058e:	call   0x408188
  410593:	mov    rax,QWORD PTR [rsp+0xd90]
  41059b:	mov    rdx,rdi
  41059e:	lea    rcx,[rax-0x18]
  4105a2:	call   0x408188
  4105a7:	mov    rax,QWORD PTR [rsp+0xd80]
  4105af:	mov    rdx,rdi
  4105b2:	lea    rcx,[rax-0x18]
  4105b6:	call   0x408188
  4105bb:	mov    rax,QWORD PTR [rsp+0xd60]
  4105c3:	mov    rdx,rdi
  4105c6:	lea    rcx,[rax-0x18]
  4105ca:	call   0x408188
  4105cf:	mov    rax,QWORD PTR [rsp+0xd50]
  4105d7:	mov    rdx,rdi
  4105da:	lea    rcx,[rax-0x18]
  4105de:	call   0x408188
  4105e3:	mov    rax,QWORD PTR [rsp+0xd40]
  4105eb:	mov    rdx,rdi
  4105ee:	lea    rcx,[rax-0x18]
  4105f2:	call   0x408188
  4105f7:	mov    rax,QWORD PTR [rsp+0xd30]
  4105ff:	mov    rdx,rdi
  410602:	lea    rcx,[rax-0x18]
  410606:	call   0x408188
  41060b:	mov    rax,QWORD PTR [rsp+0xd20]
  410613:	mov    rdx,rdi
  410616:	lea    rcx,[rax-0x18]
  41061a:	call   0x408188
  41061f:	mov    rax,QWORD PTR [rsp+0xd10]
  410627:	mov    rdx,rdi
  41062a:	lea    rcx,[rax-0x18]
  41062e:	call   0x408188
  410633:	mov    rax,QWORD PTR [rsp+0xd00]
  41063b:	mov    rdx,rdi
  41063e:	lea    rcx,[rax-0x18]
  410642:	call   0x408188
  410647:	mov    rax,QWORD PTR [rsp+0xcf0]
  41064f:	mov    rdx,rdi
  410652:	lea    rcx,[rax-0x18]
  410656:	call   0x408188
  41065b:	mov    rax,QWORD PTR [rsp+0xce0]
  410663:	mov    rdx,rdi
  410666:	lea    rcx,[rax-0x18]
  41066a:	call   0x408188
  41066f:	mov    rax,QWORD PTR [rsp+0xcd0]
  410677:	mov    rdx,rdi
  41067a:	lea    rcx,[rax-0x18]
  41067e:	call   0x408188
  410683:	mov    rax,QWORD PTR [rsp+0xcc0]
  41068b:	mov    rdx,rdi
  41068e:	lea    rcx,[rax-0x18]
  410692:	call   0x408188
  410697:	mov    rax,QWORD PTR [rsp+0xcb0]
  41069f:	mov    rdx,rdi
  4106a2:	lea    rcx,[rax-0x18]
  4106a6:	call   0x408188
  4106ab:	mov    rax,QWORD PTR [rsp+0xc90]
  4106b3:	mov    rdx,rdi
  4106b6:	lea    rcx,[rax-0x18]
  4106ba:	call   0x408188
  4106bf:	mov    rax,QWORD PTR [rsp+0xc80]
  4106c7:	mov    rdx,rdi
  4106ca:	lea    rcx,[rax-0x18]
  4106ce:	call   0x408188
  4106d3:	mov    rax,QWORD PTR [rsp+0xc60]
  4106db:	mov    rdx,rdi
  4106de:	lea    rcx,[rax-0x18]
  4106e2:	call   0x408188
  4106e7:	mov    rax,QWORD PTR [rsp+0xc50]
  4106ef:	mov    rdx,rdi
  4106f2:	lea    rcx,[rax-0x18]
  4106f6:	call   0x408188
  4106fb:	mov    rax,QWORD PTR [rsp+0xc30]
  410703:	mov    rdx,rdi
  410706:	lea    rcx,[rax-0x18]
  41070a:	call   0x408188
  41070f:	mov    rax,QWORD PTR [rsp+0xc20]
  410717:	mov    rdx,rdi
  41071a:	lea    rcx,[rax-0x18]
  41071e:	call   0x408188
  410723:	mov    rax,QWORD PTR [rsp+0xc00]
  41072b:	mov    rdx,rdi
  41072e:	lea    rcx,[rax-0x18]
  410732:	call   0x408188
  410737:	mov    rax,QWORD PTR [rsp+0xbf0]
  41073f:	mov    rdx,rdi
  410742:	lea    rcx,[rax-0x18]
  410746:	call   0x408188
  41074b:	mov    rax,QWORD PTR [rsp+0xc10]
  410753:	mov    rdx,rdi
  410756:	lea    rcx,[rax-0x18]
  41075a:	call   0x408188
  41075f:	mov    rax,QWORD PTR [rsp+0xc40]
  410767:	mov    rdx,rdi
  41076a:	lea    rcx,[rax-0x18]
  41076e:	call   0x408188
  410773:	mov    rax,QWORD PTR [rsp+0xc70]
  41077b:	mov    rdx,rdi
  41077e:	lea    rcx,[rax-0x18]
  410782:	call   0x408188
  410787:	mov    rax,QWORD PTR [rsp+0xca0]
  41078f:	mov    rdx,rdi
  410792:	lea    rcx,[rax-0x18]
  410796:	call   0x408188
  41079b:	mov    rax,QWORD PTR [rsp+0xd70]
  4107a3:	mov    rdx,rdi
  4107a6:	lea    rcx,[rax-0x18]
  4107aa:	call   0x408188
  4107af:	mov    rax,QWORD PTR [rsp+0xdb0]
  4107b7:	mov    rdx,rdi
  4107ba:	lea    rcx,[rax-0x18]
  4107be:	call   0x408188
  4107c3:	mov    rax,QWORD PTR [rsp+0xde0]
  4107cb:	mov    rdx,rdi
  4107ce:	lea    rcx,[rax-0x18]
  4107d2:	call   0x408188
  4107d7:	movzx  ebx,BYTE PTR [rsp+0x78]
  4107dc:	mov    rcx,r14
  4107df:	mov    edx,ebx
  4107e1:	call   0x4018b0
  4107e6:	mov    ebp,eax
  4107e8:	mov    rax,QWORD PTR [rsp+0xff0]
  4107f0:	mov    rdx,rdi
  4107f3:	lea    rcx,[rax-0x18]
  4107f7:	call   0x408188
  4107fc:	cmp    BYTE PTR [rsp+0xe6],0x0
  410804:	je     0x40d2e8
  41080a:	mov    r8,QWORD PTR [rsp+0xa8]
  410812:	lea    rdx,[rip+0x7245]        # 0x417a5e
  410819:	mov    rcx,r14
  41081c:	call   0x40af80
  410821:	mov    edx,ebx
  410823:	mov    rcx,r14
  410826:	call   0x4018b0
  41082b:	mov    ebp,eax
  41082d:	mov    rax,QWORD PTR [rsp+0xff0]
  410835:	mov    rdx,QWORD PTR [rsp+0x30]
  41083a:	lea    rcx,[rax-0x18]
  41083e:	call   0x408188
  410843:	jmp    0x40d2e8
  410848:	nop    DWORD PTR [rax+rax*1+0x0]
  410850:	mov    rdi,QWORD PTR [rsp+0xb8]
  410858:	mov    rdx,QWORD PTR [rsp+0x40]
  41085d:	lea    r8,[rip+0x6efb]        # 0x41775f
  410864:	mov    rcx,rdi
  410867:	call   0x40b010
  41086c:	mov    rcx,QWORD PTR [rsp+0x30]
  410871:	mov    rdx,rdi
  410874:	call   0x408180
  410879:	mov    rax,QWORD PTR [rsp+0x8e0]
  410881:	mov    rdx,r14
  410884:	lea    rcx,[rax-0x18]
  410888:	call   0x408188
  41088d:	jmp    0x40f225
  410892:	mov    eax,0xffffffff
  410897:	lock xadd DWORD PTR [rdx-0x8],eax
  41089c:	test   eax,eax
  41089e:	jg     0x40f0a8
  4108a4:	lea    rcx,[rdx-0x18]
  4108a8:	mov    rdx,rsi
  4108ab:	call   0x408190
  4108b0:	jmp    0x40f0a8
  4108b5:	mov    eax,0xffffffff
  4108ba:	lock xadd DWORD PTR [rdx-0x8],eax
  4108bf:	test   eax,eax
  4108c1:	jg     0x40f273
  4108c7:	lea    rcx,[rdx-0x18]
  4108cb:	mov    rdx,r14
  4108ce:	call   0x408190
  4108d3:	jmp    0x40f273
  4108d8:	mov    rdx,QWORD PTR [rsp+0xc0]
  4108e0:	mov    rcx,QWORD PTR [rsp+0x30]
  4108e5:	call   0x408158
  4108ea:	jmp    0x40fb41
  4108ef:	lea    rdi,[rip+0xc792]        # 0x41d088
  4108f6:	mov    rax,QWORD PTR [rsp+0xb8]
  4108fe:	mov    r9,QWORD PTR [rsp+0x30]
  410903:	lea    r8,[rip+0x823e]        # 0x418b48
  41090a:	lea    rcx,[rip+0xc76f]        # 0x41d080
  410911:	mov    rdx,rdi
  410914:	mov    QWORD PTR [rsp+0xfb0],rax
  41091c:	lea    rax,[rsp+0x119]
  410924:	mov    QWORD PTR [rsp+0x20],rax
  410929:	call   0x40a730
  41092e:	mov    rbx,rax
  410931:	jmp    0x40c91f
  410936:	mov    rbx,QWORD PTR [rsp+0xb0]
  41093e:	mov    rdx,QWORD PTR [rsp+0x38]
  410943:	lea    r8,[rip+0x6e15]        # 0x41775f
  41094a:	mov    rcx,rbx
  41094d:	call   0x40b010
  410952:	mov    rcx,QWORD PTR [rsp+0x30]
  410957:	mov    rdx,rbx
  41095a:	call   0x408180
  41095f:	mov    rax,QWORD PTR [rsp+0xa70]
  410967:	mov    rdx,r14
  41096a:	lea    rcx,[rax-0x18]
  41096e:	call   0x408188
  410973:	jmp    0x40fb41
  410978:	or     eax,0xffffffff
  41097b:	lock xadd DWORD PTR [rdx-0x8],eax
  410980:	jmp    0x40d2c3
  410985:	or     eax,0xffffffff
  410988:	lock xadd DWORD PTR [rbx-0x8],eax
  41098d:	jmp    0x40d29e
  410992:	or     eax,0xffffffff
  410995:	lock xadd DWORD PTR [rdx-0x8],eax
  41099a:	jmp    0x40d27c
  41099f:	mov    rbx,QWORD PTR [rsp+0x68]
  4109a4:	or     eax,0xffffffff
  4109a7:	lock xadd DWORD PTR [rbx-0x8],eax
  4109ac:	jmp    0x40d257
  4109b1:	or     eax,0xffffffff
  4109b4:	lock xadd DWORD PTR [rdx-0x8],eax
  4109b9:	jmp    0x40cbee
  4109be:	or     eax,0xffffffff
  4109c1:	lock xadd DWORD PTR [rdx-0x8],eax
  4109c6:	jmp    0x40c722
  4109cb:	or     eax,0xffffffff
  4109ce:	lock xadd DWORD PTR [rdx-0x8],eax
  4109d3:	jmp    0x40cc14
  4109d8:	or     eax,0xffffffff
  4109db:	lock xadd DWORD PTR [rdx-0x8],eax
  4109e0:	jmp    0x40ce1e
  4109e5:	or     eax,0xffffffff
  4109e8:	lock xadd DWORD PTR [rdx-0x8],eax
  4109ed:	jmp    0x40cdf8
  4109f2:	or     eax,0xffffffff
  4109f5:	lock xadd DWORD PTR [rdx-0x8],eax
  4109fa:	jmp    0x40cd3d
  4109ff:	or     eax,0xffffffff
  410a02:	lock xadd DWORD PTR [rdx-0x8],eax
  410a07:	jmp    0x40cd17
  410a0c:	or     eax,0xffffffff
  410a0f:	lock xadd DWORD PTR [rdx-0x8],eax
  410a14:	jmp    0x40ccf2
  410a19:	or     eax,0xffffffff
  410a1c:	lock xadd DWORD PTR [rdx-0x8],eax
  410a21:	jmp    0x40cccd
  410a26:	or     eax,0xffffffff
  410a29:	lock xadd DWORD PTR [rdx-0x8],eax
  410a2e:	jmp    0x40cca8
  410a33:	or     eax,0xffffffff
  410a36:	lock xadd DWORD PTR [rdx-0x8],eax
  410a3b:	jmp    0x40cc83
  410a40:	or     eax,0xffffffff
  410a43:	lock xadd DWORD PTR [rdx-0x8],eax
  410a48:	jmp    0x40cc5e
  410a4d:	or     eax,0xffffffff
  410a50:	lock xadd DWORD PTR [rdx-0x8],eax
  410a55:	jmp    0x40cc39
  410a5a:	or     eax,0xffffffff
  410a5d:	lock xadd DWORD PTR [rdx-0x8],eax
  410a62:	jmp    0x40cdd2
  410a67:	or     eax,0xffffffff
  410a6a:	lock xadd DWORD PTR [rdx-0x8],eax
  410a6f:	jmp    0x40cdad
  410a74:	or     eax,0xffffffff
  410a77:	lock xadd DWORD PTR [rdx-0x8],eax
  410a7c:	jmp    0x40cd88
  410a81:	or     eax,0xffffffff
  410a84:	lock xadd DWORD PTR [rdx-0x8],eax
  410a89:	jmp    0x40cd63
  410a8e:	lea    rcx,[rdx-0x18]
  410a92:	mov    rdx,r14
  410a95:	call   0x408190
  410a9a:	jmp    0x40cd6b
  410a9f:	lea    rcx,[rdx-0x18]
  410aa3:	mov    rdx,r14
  410aa6:	call   0x408190
  410aab:	jmp    0x40cd45
  410ab0:	lea    rcx,[rdx-0x18]
  410ab4:	mov    rdx,r14
  410ab7:	call   0x408190
  410abc:	jmp    0x40cdb5
  410ac1:	lea    rcx,[rdx-0x18]
  410ac5:	mov    rdx,r14
  410ac8:	call   0x408190
  410acd:	jmp    0x40cd90
  410ad2:	lea    rcx,[rdx-0x18]
  410ad6:	mov    rdx,r14
  410ad9:	call   0x408190
  410ade:	jmp    0x40cc41
  410ae3:	lea    rcx,[rdx-0x18]
  410ae7:	mov    rdx,r14
  410aea:	call   0x408190
  410aef:	jmp    0x40cc1c
  410af4:	lea    rcx,[rdx-0x18]
  410af8:	mov    rdx,r14
  410afb:	call   0x408190
  410b00:	jmp    0x40cd1f
  410b05:	lea    rcx,[rdx-0x18]
  410b09:	mov    rdx,r14
  410b0c:	call   0x408190
  410b11:	jmp    0x40ccfa
  410b16:	lea    rcx,[rdx-0x18]
  410b1a:	mov    rdx,r14
  410b1d:	call   0x408190
  410b22:	jmp    0x40ce00
  410b27:	lea    rcx,[rdx-0x18]
  410b2b:	mov    rdx,r14
  410b2e:	call   0x408190
  410b33:	jmp    0x40cdda
  410b38:	lea    rcx,[rdx-0x18]
  410b3c:	mov    rdx,r14
  410b3f:	call   0x408190
  410b44:	jmp    0x40cc8b
  410b49:	lea    rcx,[rdx-0x18]
  410b4d:	mov    rdx,r14
  410b50:	call   0x408190
  410b55:	jmp    0x40cc66
  410b5a:	lea    rcx,[rdx-0x18]
  410b5e:	mov    rdx,r14
  410b61:	call   0x408190
  410b66:	jmp    0x40ccd5
  410b6b:	lea    rcx,[rdx-0x18]
  410b6f:	mov    rdx,r14
  410b72:	call   0x408190
  410b77:	jmp    0x40ccb0
  410b7c:	lea    rcx,[rdx-0x18]
  410b80:	mov    rdx,r14
  410b83:	call   0x408190
  410b88:	jmp    0x40ce26
  410b8d:	lea    rcx,[rdx-0x18]
  410b91:	mov    rdx,r14
  410b94:	call   0x408190
  410b99:	jmp    0x40c72a
  410b9e:	lea    rcx,[rdx-0x18]
  410ba2:	mov    rdx,r14
  410ba5:	call   0x408190
  410baa:	jmp    0x40cbf6
  410baf:	lea    rcx,[rdx-0x18]
  410bb3:	mov    rdx,QWORD PTR [rsp+0x30]
  410bb8:	call   0x408190
  410bbd:	jmp    0x40d284
  410bc2:	mov    rcx,QWORD PTR [rsp+0x68]
  410bc7:	mov    rdx,QWORD PTR [rsp+0x30]
  410bcc:	sub    rcx,0x18
  410bd0:	call   0x408190
  410bd5:	jmp    0x40d25f
  410bda:	lea    rcx,[rdx-0x18]
  410bde:	mov    rdx,QWORD PTR [rsp+0x30]
  410be3:	call   0x408190
  410be8:	jmp    0x40d2cb
  410bed:	mov    rcx,QWORD PTR [rsp+0x38]
  410bf2:	mov    rdx,QWORD PTR [rsp+0x30]
  410bf7:	sub    rcx,0x18
  410bfb:	call   0x408190
  410c00:	jmp    0x40d2a6
  410c05:	mov    rax,QWORD PTR [rsp+0xff0]
  410c0d:	mov    rcx,r14
  410c10:	add    rcx,QWORD PTR [rax-0x18]
  410c14:	mov    edx,DWORD PTR [rcx+0x20]
  410c17:	or     edx,0x4
  410c1a:	call   0x4080b0
  410c1f:	jmp    0x40d19c
  410c24:	add    rcx,QWORD PTR [rax-0x18]
  410c28:	mov    edx,DWORD PTR [rcx+0x20]
  410c2b:	or     edx,0x4
  410c2e:	call   0x4080b0
  410c33:	jmp    0x40cf3f
  410c38:	mov    rdx,QWORD PTR [rip+0xc431]        # 0x41d070
  410c3f:	mov    rcx,QWORD PTR [rip+0x83ca]        # 0x419010
  410c46:	mov    r8,QWORD PTR [rdx-0x18]
  410c4a:	call   0x4080a8
  410c4f:	mov    rcx,rax
  410c52:	call   0x408070
  410c57:	mov    ebp,0x1
  410c5c:	jmp    0x40d2e8
  410c61:	lea    rbx,[rsp+0x4e0]
  410c69:	mov    r8,QWORD PTR [rsp+0xc0]
  410c71:	lea    rdx,[rip+0x6cfa]        # 0x417972
  410c78:	mov    rcx,rbx
  410c7b:	call   0x40af80
  410c80:	lea    rcx,[rsp+0x160]
  410c88:	mov    rdx,rbx
  410c8b:	call   0x408180
  410c90:	mov    rax,QWORD PTR [rsp+0x4e0]
  410c98:	mov    rdx,r14
  410c9b:	lea    rcx,[rax-0x18]
  410c9f:	call   0x408188
  410ca4:	jmp    0x40b79d
  410ca9:	mov    rcx,QWORD PTR [rip+0x8350]        # 0x419000
  410cb0:	lea    rdx,[rip+0x6d09]        # 0x4179c0
  410cb7:	call   0x408068
  410cbc:	mov    rdx,QWORD PTR [rsp+0xf90]
  410cc4:	mov    rcx,rax
  410cc7:	mov    r8,QWORD PTR [rdx-0x18]
  410ccb:	call   0x4080a8
  410cd0:	mov    rcx,rax
  410cd3:	call   0x408070
  410cd8:	mov    rax,QWORD PTR [rsp+0xf90]
  410ce0:	mov    rdx,r14
  410ce3:	lea    rcx,[rax-0x18]
  410ce7:	call   0x408188
  410cec:	jmp    0x410c57
  410cf1:	call   0x4080a0
  410cf6:	lea    rdx,[rip+0x5357]        # 0x416054
  410cfd:	lea    rcx,[rip+0x536c]        # 0x416070
  410d04:	mov    r8,rsi
  410d07:	call   0x408080
  410d0c:	mov    rcx,QWORD PTR [rip+0x82ed]        # 0x419000
  410d13:	lea    rdx,[rip+0x6cce]        # 0x4179e8
  410d1a:	call   0x408068
  410d1f:	mov    rdx,QWORD PTR [rsp+0xf90]
  410d27:	mov    rcx,rax
  410d2a:	mov    r8,QWORD PTR [rdx-0x18]
  410d2e:	call   0x4080a8
  410d33:	mov    rcx,rax
  410d36:	call   0x408070
  410d3b:	jmp    0x410cd8
  410d3d:	lea    rdx,[rip+0x5310]        # 0x416054
  410d44:	lea    rcx,[rip+0x5325]        # 0x416070
  410d4b:	mov    r9,rax
  410d4e:	call   0x408080
  410d53:	lea    rbx,[rsp+0xfa0]
  410d5b:	mov    rsi,rax
  410d5e:	mov    rax,QWORD PTR [rsp+0xfb0]
  410d66:	mov    rdx,rbx
  410d69:	mov    rbx,rsi
  410d6c:	lea    rcx,[rax-0x18]
  410d70:	call   0x408188
  410d75:	mov    rcx,r14
  410d78:	call   0x4080f0
  410d7d:	mov    rcx,QWORD PTR [rsp+0x48]
  410d82:	mov    rdx,QWORD PTR [rsp+0x30]
  410d87:	sub    rcx,0x18
  410d8b:	call   0x408188
  410d90:	mov    rax,QWORD PTR [rsp+0xf60]
  410d98:	mov    rdx,QWORD PTR [rsp+0x30]
  410d9d:	lea    rcx,[rax-0x18]
  410da1:	call   0x408188
  410da6:	mov    rcx,QWORD PTR [rsp+0x38]
  410dab:	mov    rdx,QWORD PTR [rsp+0x30]
  410db0:	sub    rcx,0x18
  410db4:	call   0x408188
  410db9:	mov    rax,QWORD PTR [rsp+0xf50]
  410dc1:	mov    rdx,QWORD PTR [rsp+0x30]
  410dc6:	lea    rcx,[rax-0x18]
  410dca:	call   0x408188
  410dcf:	mov    rax,QWORD PTR [rsp+0x200]
  410dd7:	mov    rdx,QWORD PTR [rsp+0xe8]
  410ddf:	lea    rcx,[rax-0x18]
  410de3:	call   0x408188
  410de8:	mov    rax,QWORD PTR [rsp+0x1e0]
  410df0:	lea    rsi,[rsp+0x106]
  410df8:	mov    rdx,rsi
  410dfb:	lea    rcx,[rax-0x18]
  410dff:	call   0x408188
  410e04:	mov    rax,QWORD PTR [rsp+0x1d0]
  410e0c:	mov    rdx,rsi
  410e0f:	lea    rcx,[rax-0x18]
  410e13:	call   0x408188
  410e18:	mov    rax,QWORD PTR [rsp+0x1c0]
  410e20:	mov    rdx,rsi
  410e23:	lea    rcx,[rax-0x18]
  410e27:	call   0x408188
  410e2c:	mov    rax,QWORD PTR [rsp+0x1b0]
  410e34:	mov    rdx,rsi
  410e37:	lea    rcx,[rax-0x18]
  410e3b:	call   0x408188
  410e40:	mov    rax,QWORD PTR [rsp+0x1a0]
  410e48:	mov    rdx,rsi
  410e4b:	lea    rcx,[rax-0x18]
  410e4f:	call   0x408188
  410e54:	mov    rax,QWORD PTR [rsp+0x190]
  410e5c:	mov    rdx,rsi
  410e5f:	lea    rcx,[rax-0x18]
  410e63:	call   0x408188
  410e68:	mov    rax,QWORD PTR [rsp+0x180]
  410e70:	mov    rdx,rsi
  410e73:	lea    rcx,[rax-0x18]
  410e77:	call   0x408188
  410e7c:	mov    rax,QWORD PTR [rsp+0x170]
  410e84:	mov    rdx,rsi
  410e87:	lea    rcx,[rax-0x18]
  410e8b:	call   0x408188
  410e90:	mov    rcx,QWORD PTR [rsp+0xa0]
  410e98:	call   0x40a2d0
  410e9d:	mov    rcx,QWORD PTR [rsp+0x88]
  410ea5:	call   0x40a2d0
  410eaa:	mov    rcx,QWORD PTR [rsp+0x50]
  410eaf:	call   0x40a2d0
  410eb4:	mov    rax,QWORD PTR [rsp+0x160]
  410ebc:	mov    rdx,rsi
  410ebf:	lea    rcx,[rax-0x18]
  410ec3:	call   0x408188
  410ec8:	mov    rax,QWORD PTR [rsp+0x150]
  410ed0:	mov    rdx,rsi
  410ed3:	lea    rcx,[rax-0x18]
  410ed7:	call   0x408188
  410edc:	mov    rcx,rbx
  410edf:	call   0x409730
  410ee4:	mov    rsi,rax
  410ee7:	mov    rax,QWORD PTR [rsp+0x640]
  410eef:	lea    rbx,[rsp+0xfa0]
  410ef7:	mov    rdx,rbx
  410efa:	lea    rcx,[rax-0x18]
  410efe:	call   0x408188
  410f03:	jmp    0x410d5e
  410f08:	mov    rbx,rax
  410f0b:	jmp    0x410d75
  410f10:	mov    rdi,QWORD PTR [rsp+0x80]
  410f18:	mov    rdx,r15
  410f1b:	mov    rcx,rdi
  410f1e:	call   0x408128
  410f23:	lea    rdx,[rip+0x6835]        # 0x41775f
  410f2a:	mov    r8d,0x2
  410f30:	mov    rcx,rdi
  410f33:	call   0x408170
  410f38:	mov    rcx,QWORD PTR [rsp+0x30]
  410f3d:	mov    rdx,rdi
  410f40:	call   0x408180
  410f45:	mov    rax,QWORD PTR [rsp+0x7a0]
  410f4d:	mov    rdx,r14
  410f50:	lea    rcx,[rax-0x18]
  410f54:	call   0x408188
  410f59:	jmp    0x40e4c9
  410f5e:	mov    eax,0xffffffff
  410f63:	lock xadd DWORD PTR [rdx-0x8],eax
  410f68:	test   eax,eax
  410f6a:	jg     0x40ebf9
  410f70:	lea    rcx,[rdx-0x18]
  410f74:	mov    rdx,r14
  410f77:	call   0x408190
  410f7c:	test   rsi,rsi
  410f7f:	jne    0x40ec02
  410f85:	mov    rcx,QWORD PTR [rip+0x8074]        # 0x419000
  410f8c:	lea    rdx,[rip+0x69fd]        # 0x417990
  410f93:	call   0x408068
  410f98:	mov    rdx,QWORD PTR [rsp+0xf90]
  410fa0:	mov    rcx,rax
  410fa3:	mov    r8,QWORD PTR [rdx-0x18]
  410fa7:	call   0x4080a8
  410fac:	mov    rcx,rax
  410faf:	call   0x408070
  410fb4:	mov    rax,QWORD PTR [rsp+0xfa0]
  410fbc:	mov    rdx,r14
  410fbf:	lea    rcx,[rax-0x18]
  410fc3:	call   0x408188
  410fc8:	jmp    0x410cd8
  410fcd:	nop    DWORD PTR [rax]
  410fd0:	mov    edx,0xffffffff
  410fd5:	lock xadd DWORD PTR [rax-0x8],edx
  410fda:	test   edx,edx
  410fdc:	jg     0x40eb73
  410fe2:	lea    rcx,[rax-0x18]
  410fe6:	mov    rdx,r14
  410fe9:	call   0x408190
  410fee:	jmp    0x40eb73
  410ff3:	mov    edx,0xffffffff
  410ff8:	lock xadd DWORD PTR [rax-0x8],edx
  410ffd:	test   edx,edx
  410fff:	jg     0x40eb4e
  411005:	lea    rcx,[rax-0x18]
  411009:	mov    rdx,r14
  41100c:	call   0x408190
  411011:	jmp    0x40eb4e
  411016:	mov    eax,0xffffffff
  41101b:	lock xadd DWORD PTR [rdx-0x8],eax
  411020:	test   eax,eax
  411022:	jg     0x40eb29
  411028:	lea    rsi,[rsp+0xf80]
  411030:	lea    rcx,[rdx-0x18]
  411034:	mov    rdx,rsi
  411037:	call   0x408190
  41103c:	jmp    0x40eb29
  411041:	mov    eax,0xffffffff
  411046:	lock xadd DWORD PTR [rdx-0x8],eax
  41104b:	test   eax,eax
  41104d:	jg     0x40eb04
  411053:	lea    rsi,[rsp+0xf80]
  41105b:	lea    rcx,[rdx-0x18]
  41105f:	mov    rdx,rsi
  411062:	call   0x408190
  411067:	jmp    0x40eb04
  41106c:	mov    eax,0xffffffff
  411071:	lock xadd DWORD PTR [rdx-0x8],eax
  411076:	test   eax,eax
  411078:	jg     0x40ead0
  41107e:	lea    rsi,[rsp+0xf80]
  411086:	lea    rcx,[rdx-0x18]
  41108a:	mov    rdx,rsi
  41108d:	call   0x408190
  411092:	jmp    0x40ead0
  411097:	mov    eax,0xffffffff
  41109c:	lock xadd DWORD PTR [rdx-0x8],eax
  4110a1:	test   eax,eax
  4110a3:	jg     0x40eaad
  4110a9:	lea    rsi,[rsp+0xf80]
  4110b1:	lea    rcx,[rdx-0x18]
  4110b5:	mov    rdx,rsi
  4110b8:	call   0x408190
  4110bd:	jmp    0x40eaad
  4110c2:	mov    eax,0xffffffff
  4110c7:	lock xadd DWORD PTR [rdx-0x8],eax
  4110cc:	test   eax,eax
  4110ce:	jg     0x40ea8a
  4110d4:	lea    rsi,[rsp+0xf80]
  4110dc:	lea    rcx,[rdx-0x18]
  4110e0:	mov    rdx,rsi
  4110e3:	call   0x408190
  4110e8:	jmp    0x40ea8a
  4110ed:	mov    eax,0xffffffff
  4110f2:	lock xadd DWORD PTR [rdx-0x8],eax
  4110f7:	test   eax,eax
  4110f9:	jg     0x40ea67
  4110ff:	lea    rsi,[rsp+0xf80]
  411107:	lea    rcx,[rdx-0x18]
  41110b:	mov    rdx,rsi
  41110e:	call   0x408190
  411113:	jmp    0x40ea67
  411118:	mov    eax,0xffffffff
  41111d:	lock xadd DWORD PTR [rdx-0x8],eax
  411122:	test   eax,eax
  411124:	jg     0x40ea44
  41112a:	lea    rsi,[rsp+0xf80]
  411132:	lea    rcx,[rdx-0x18]
  411136:	mov    rdx,rsi
  411139:	call   0x408190
  41113e:	jmp    0x40ea44
  411143:	mov    eax,0xffffffff
  411148:	lock xadd DWORD PTR [rdx-0x8],eax
  41114d:	test   eax,eax
  41114f:	jg     0x40ea21
  411155:	lea    rsi,[rsp+0xf80]
  41115d:	lea    rcx,[rdx-0x18]
  411161:	mov    rdx,rsi
  411164:	call   0x408190
  411169:	jmp    0x40ea21
  41116e:	mov    eax,0xffffffff
  411173:	lock xadd DWORD PTR [rdx-0x8],eax
  411178:	test   eax,eax
  41117a:	jg     0x40e9fe
  411180:	lea    rsi,[rsp+0xf80]
  411188:	lea    rcx,[rdx-0x18]
  41118c:	mov    rdx,rsi
  41118f:	call   0x408190
  411194:	jmp    0x40e9fe
  411199:	mov    eax,0xffffffff
  41119e:	lock xadd DWORD PTR [rdx-0x8],eax
  4111a3:	test   eax,eax
  4111a5:	jg     0x40e9db
  4111ab:	lea    rsi,[rsp+0xf80]
  4111b3:	lea    rcx,[rdx-0x18]
  4111b7:	mov    rdx,rsi
  4111ba:	call   0x408190
  4111bf:	jmp    0x40e9db
  4111c4:	mov    eax,0xffffffff
  4111c9:	lock xadd DWORD PTR [rdx-0x8],eax
  4111ce:	test   eax,eax
  4111d0:	jg     0x40e9b8
  4111d6:	lea    rsi,[rsp+0xf80]
  4111de:	lea    rcx,[rdx-0x18]
  4111e2:	mov    rdx,rsi
  4111e5:	call   0x408190
  4111ea:	jmp    0x40e9b8
  4111ef:	mov    eax,0xffffffff
  4111f4:	lock xadd DWORD PTR [rdx-0x8],eax
  4111f9:	test   eax,eax
  4111fb:	jg     0x40e995
  411201:	lea    rsi,[rsp+0xf80]
  411209:	lea    rcx,[rdx-0x18]
  41120d:	mov    rdx,rsi
  411210:	call   0x408190
  411215:	jmp    0x40e995
  41121a:	mov    eax,0xffffffff
  41121f:	lock xadd DWORD PTR [rdx-0x8],eax
  411224:	test   eax,eax
  411226:	jg     0x40e972
  41122c:	lea    rsi,[rsp+0xf80]
  411234:	lea    rcx,[rdx-0x18]
  411238:	mov    rdx,rsi
  41123b:	call   0x408190
  411240:	jmp    0x40e972
  411245:	mov    eax,0xffffffff
  41124a:	lock xadd DWORD PTR [rdx-0x8],eax
  41124f:	test   eax,eax
  411251:	jg     0x40e94d
  411257:	lea    rsi,[rsp+0xf80]
  41125f:	lea    rcx,[rdx-0x18]
  411263:	mov    rdx,rsi
  411266:	call   0x408190
  41126b:	jmp    0x40e94d
  411270:	mov    eax,0xffffffff
  411275:	lock xadd DWORD PTR [rdx-0x8],eax
  41127a:	test   eax,eax
  41127c:	jg     0x40e928
  411282:	lea    rsi,[rsp+0xf80]
  41128a:	lea    rcx,[rdx-0x18]
  41128e:	mov    rdx,rsi
  411291:	call   0x408190
  411296:	jmp    0x40e928
  41129b:	mov    eax,0xffffffff
  4112a0:	lock xadd DWORD PTR [rdx-0x8],eax
  4112a5:	test   eax,eax
  4112a7:	jg     0x40e903
  4112ad:	lea    rsi,[rsp+0xf80]
  4112b5:	lea    rcx,[rdx-0x18]
  4112b9:	mov    rdx,rsi
  4112bc:	call   0x408190
  4112c1:	jmp    0x40e903
  4112c6:	mov    eax,0xffffffff
  4112cb:	lock xadd DWORD PTR [rdx-0x8],eax
  4112d0:	test   eax,eax
  4112d2:	jg     0x40e8de
  4112d8:	lea    rsi,[rsp+0xf80]
  4112e0:	lea    rcx,[rdx-0x18]
  4112e4:	mov    rdx,rsi
  4112e7:	call   0x408190
  4112ec:	jmp    0x40e8de
  4112f1:	mov    eax,0xffffffff
  4112f6:	lock xadd DWORD PTR [rdx-0x8],eax
  4112fb:	test   eax,eax
  4112fd:	jg     0x40e8bb
  411303:	lea    rsi,[rsp+0xf80]
  41130b:	lea    rcx,[rdx-0x18]
  41130f:	mov    rdx,rsi
  411312:	call   0x408190
  411317:	jmp    0x40e8bb
  41131c:	mov    eax,0xffffffff
  411321:	lock xadd DWORD PTR [rdx-0x8],eax
  411326:	test   eax,eax
  411328:	jg     0x40e515
  41132e:	lea    rcx,[rdx-0x18]
  411332:	mov    rdx,r14
  411335:	call   0x408190
  41133a:	jmp    0x40e515
  41133f:	mov    edx,0xffffffff
  411344:	lock xadd DWORD PTR [rcx-0x8],edx
  411349:	jmp    0x40e3bf
  41134e:	or     eax,0xffffffff
  411351:	lock xadd DWORD PTR [rdx-0x8],eax
  411356:	jmp    0x40e4c1
  41135b:	lea    rcx,[rdx-0x18]
  41135f:	mov    rdx,r14
  411362:	call   0x408190
  411367:	jmp    0x40e4c9
  41136c:	lea    rdx,[rip+0x642e]        # 0x4177a1
  411373:	mov    rcx,r14
  411376:	call   0x4081c8
  41137b:	test   eax,eax
  41137d:	je     0x40ed00
  411383:	lea    r12,[rsp+0x3b0]
  41138b:	lea    rdx,[rip+0x4eb1]        # 0x416243
  411392:	mov    r8,r15
  411395:	mov    rcx,r12
  411398:	call   0x408138
  41139d:	mov    rdx,r12
  4113a0:	mov    rcx,r14
  4113a3:	call   0x40a240
  4113a8:	mov    r12d,eax
  4113ab:	mov    rax,QWORD PTR [rsp+0x3b0]
  4113b3:	mov    rdx,QWORD PTR [rsp+0x30]
  4113b8:	lea    rcx,[rax-0x18]
  4113bc:	call   0x408188
  4113c1:	test   r12b,r12b
  4113c4:	je     0x411432
  4113c6:	lea    rbp,[rsp+0x3c0]
  4113ce:	mov    rdx,r14
  4113d1:	mov    rcx,rbp
  4113d4:	call   0x401f10
  4113d9:	lea    r12,[rsp+0x3d0]
  4113e1:	lea    rdx,[rip+0x62dd]        # 0x4176c5
  4113e8:	mov    r8,rbp
  4113eb:	mov    rcx,r12
  4113ee:	call   0x40af30
  4113f3:	mov    rcx,QWORD PTR [rsp+0x58]
  4113f8:	mov    rdx,r12
  4113fb:	call   0x408168
  411400:	mov    rax,QWORD PTR [rsp+0x3d0]
  411408:	mov    rbp,QWORD PTR [rsp+0x30]
  41140d:	lea    rcx,[rax-0x18]
  411411:	mov    rdx,rbp
  411414:	call   0x408188
  411419:	mov    rax,QWORD PTR [rsp+0x3c0]
  411421:	mov    rdx,rbp
  411424:	lea    rcx,[rax-0x18]
  411428:	call   0x408188
  41142d:	jmp    0x40b388
  411432:	lea    rdx,[rip+0x636f]        # 0x4177a8
  411439:	mov    rcx,r14
  41143c:	call   0x4081c8
  411441:	test   eax,eax
  411443:	jne    0x4114a9
  411445:	mov    eax,DWORD PTR [rsp+0x1220]
  41144c:	sub    eax,0x1
  41144f:	cmp    eax,ebx
  411451:	jle    0x41152e
  411457:	mov    rdx,QWORD PTR [rdi+rbp*1+0x8]
  41145c:	mov    rcx,r14
  41145f:	add    ebx,0x1
  411462:	call   0x408160
  411467:	lea    rbp,[rsp+0x3e0]
  41146f:	lea    rdx,[rip+0x633d]        # 0x4177b3
  411476:	mov    r8,r14
  411479:	mov    rcx,rbp
  41147c:	call   0x40af80
  411481:	mov    rcx,QWORD PTR [rsp+0x58]
  411486:	mov    rdx,rbp
  411489:	call   0x408168
  41148e:	mov    rax,QWORD PTR [rsp+0x3e0]
  411496:	mov    rdx,QWORD PTR [rsp+0x30]
  41149b:	lea    rcx,[rax-0x18]
  41149f:	call   0x408188
  4114a4:	jmp    0x40b388
  4114a9:	lea    r12,[rsp+0x3f0]
  4114b1:	lea    rdx,[rip+0x6332]        # 0x4177ea
  4114b8:	mov    r8,r15
  4114bb:	mov    rcx,r12
  4114be:	call   0x408138
  4114c3:	mov    rdx,r12
  4114c6:	mov    rcx,r14
  4114c9:	call   0x40a240
  4114ce:	mov    r12d,eax
  4114d1:	mov    rax,QWORD PTR [rsp+0x3f0]
  4114d9:	mov    rdx,QWORD PTR [rsp+0x30]
  4114de:	lea    rcx,[rax-0x18]
  4114e2:	call   0x408188
  4114e7:	test   r12b,r12b
  4114ea:	je     0x41154e
  4114ec:	lea    rbp,[rsp+0x400]
  4114f4:	lea    rdx,[rip+0x61ca]        # 0x4176c5
  4114fb:	mov    r8,r14
  4114fe:	mov    rcx,rbp
  411501:	call   0x40af80
  411506:	mov    rcx,QWORD PTR [rsp+0x60]
  41150b:	mov    rdx,rbp
  41150e:	call   0x408168
  411513:	mov    rax,QWORD PTR [rsp+0x400]
  41151b:	mov    rdx,QWORD PTR [rsp+0x30]
  411520:	lea    rcx,[rax-0x18]
  411524:	call   0x408188
  411529:	jmp    0x40b388
  41152e:	mov    rcx,QWORD PTR [rip+0x7acb]        # 0x419000
  411535:	lea    rdx,[rip+0x6284]        # 0x4177c0
  41153c:	call   0x408068
  411541:	mov    rcx,rax
  411544:	call   0x408070
  411549:	jmp    0x40b388
  41154e:	lea    rdx,[rip+0x6298]        # 0x4177ed
  411555:	mov    rcx,r14
  411558:	call   0x4081c8
  41155d:	test   eax,eax
  41155f:	jne    0x411ccd
  411565:	mov    rcx,QWORD PTR [rip+0x7aa4]        # 0x419010
  41156c:	lea    rdx,[rip+0x650d]        # 0x417a80
  411573:	call   0x408068
  411578:	jmp    0x411541
  41157a:	call   0x4080a0
  41157f:	lea    rdx,[rip+0x4ace]        # 0x416054
  411586:	lea    rcx,[rip+0x4ae3]        # 0x416070
  41158d:	mov    r8,rdi
  411590:	call   0x408080
  411595:	mov    rbx,rax
  411598:	mov    rax,QWORD PTR [rsp+0xfb0]
  4115a0:	mov    rdx,rsi
  4115a3:	lea    rcx,[rax-0x18]
  4115a7:	call   0x408188
  4115ac:	mov    rcx,r14
  4115af:	call   0x4080f0
  4115b4:	mov    rcx,QWORD PTR [rsp+0x68]
  4115b9:	mov    rdx,QWORD PTR [rsp+0x30]
  4115be:	sub    rcx,0x18
  4115c2:	call   0x408188
  4115c7:	mov    rax,QWORD PTR [rsp+0xfa0]
  4115cf:	mov    rdx,rsi
  4115d2:	lea    rcx,[rax-0x18]
  4115d6:	call   0x408188
  4115db:	mov    rcx,QWORD PTR [rsp+0x38]
  4115e0:	mov    rdx,rsi
  4115e3:	sub    rcx,0x18
  4115e7:	call   0x408188
  4115ec:	mov    rax,QWORD PTR [rsp+0xf90]
  4115f4:	mov    rdx,rsi
  4115f7:	lea    rcx,[rax-0x18]
  4115fb:	call   0x408188
  411600:	jmp    0x410dcf
  411605:	lea    rdx,[rip+0x4a48]        # 0x416054
  41160c:	lea    rcx,[rip+0x4a5d]        # 0x416070
  411613:	mov    r9,rax
  411616:	call   0x408080
  41161b:	mov    rbx,rax
  41161e:	jmp    0x4115ac
  411620:	mov    BYTE PTR [rsp+0x78],0x0
  411625:	mov    BYTE PTR [rsp+0xe5],0x0
  41162d:	mov    BYTE PTR [rsp+0xe4],0x0
  411635:	mov    BYTE PTR [rsp+0x98],0x1
  41163d:	mov    BYTE PTR [rsp+0xe6],0x0
  411645:	jmp    0x40b760
  41164a:	call   0x4080a0
  41164f:	mov    rbx,rax
  411652:	mov    rax,QWORD PTR [rsp+0x770]
  41165a:	mov    rdx,rsi
  41165d:	lea    rcx,[rax-0x18]
  411661:	call   0x408188
  411666:	jmp    0x411598
  41166b:	mov    rbx,rax
  41166e:	mov    rax,QWORD PTR [rsp+0x400]
  411676:	mov    rdx,QWORD PTR [rsp+0x30]
  41167b:	lea    rcx,[rax-0x18]
  41167f:	call   0x408188
  411684:	mov    rax,QWORD PTR [rsp+0xff0]
  41168c:	mov    rdx,QWORD PTR [rsp+0x30]
  411691:	lea    rcx,[rax-0x18]
  411695:	call   0x408188
  41169a:	jmp    0x410dcf
  41169f:	lea    rsi,[rsp+0xf80]
  4116a7:	mov    rbx,rax
  4116aa:	mov    rax,QWORD PTR [rsp+0x8a0]
  4116b2:	mov    rdx,rsi
  4116b5:	lea    rcx,[rax-0x18]
  4116b9:	call   0x408188
  4116be:	mov    rax,QWORD PTR [rsp+0x890]
  4116c6:	mov    rdx,rsi
  4116c9:	lea    rcx,[rax-0x18]
  4116cd:	call   0x408188
  4116d2:	mov    rax,QWORD PTR [rsp+0x880]
  4116da:	mov    rdx,rsi
  4116dd:	lea    rcx,[rax-0x18]
  4116e1:	call   0x408188
  4116e6:	mov    rax,QWORD PTR [rsp+0x870]
  4116ee:	mov    rdx,rsi
  4116f1:	lea    rcx,[rax-0x18]
  4116f5:	call   0x408188
  4116fa:	mov    rax,QWORD PTR [rsp+0x860]
  411702:	mov    rdx,rsi
  411705:	lea    rcx,[rax-0x18]
  411709:	call   0x408188
  41170e:	mov    rax,QWORD PTR [rsp+0x850]
  411716:	mov    rdx,rsi
  411719:	lea    rcx,[rax-0x18]
  41171d:	call   0x408188
  411722:	mov    rax,QWORD PTR [rsp+0x840]
  41172a:	mov    rdx,rsi
  41172d:	lea    rcx,[rax-0x18]
  411731:	call   0x408188
  411736:	mov    rax,QWORD PTR [rsp+0x830]
  41173e:	mov    rdx,rsi
  411741:	lea    rcx,[rax-0x18]
  411745:	call   0x408188
  41174a:	mov    rax,QWORD PTR [rsp+0x820]
  411752:	mov    rdx,rsi
  411755:	lea    rcx,[rax-0x18]
  411759:	call   0x408188
  41175e:	mov    rax,QWORD PTR [rsp+0x800]
  411766:	mov    rdx,rsi
  411769:	lea    rcx,[rax-0x18]
  41176d:	call   0x408188
  411772:	mov    rax,QWORD PTR [rsp+0x7f0]
  41177a:	mov    rdx,rsi
  41177d:	lea    rcx,[rax-0x18]
  411781:	call   0x408188
  411786:	mov    rax,QWORD PTR [rsp+0x7d0]
  41178e:	mov    rdx,rsi
  411791:	lea    rcx,[rax-0x18]
  411795:	call   0x408188
  41179a:	mov    rax,QWORD PTR [rsp+0x7c0]
  4117a2:	mov    rdx,rsi
  4117a5:	lea    rcx,[rax-0x18]
  4117a9:	call   0x408188
  4117ae:	mov    rax,QWORD PTR [rsp+0x7e0]
  4117b6:	mov    rdx,rsi
  4117b9:	lea    rcx,[rax-0x18]
  4117bd:	call   0x408188
  4117c2:	mov    rax,QWORD PTR [rsp+0x810]
  4117ca:	mov    rdx,rsi
  4117cd:	lea    rcx,[rax-0x18]
  4117d1:	call   0x408188
  4117d6:	mov    rax,QWORD PTR [rsp+0xfb0]
  4117de:	mov    rdx,rsi
  4117e1:	lea    rcx,[rax-0x18]
  4117e5:	call   0x408188
  4117ea:	mov    rax,QWORD PTR [rsp+0xfa0]
  4117f2:	mov    rdx,r14
  4117f5:	lea    rcx,[rax-0x18]
  4117f9:	call   0x408188
  4117fe:	mov    rax,QWORD PTR [rsp+0xf90]
  411806:	mov    rdx,r14
  411809:	lea    rcx,[rax-0x18]
  41180d:	call   0x408188
  411812:	jmp    0x410dcf
  411817:	mov    rbx,rax
  41181a:	lea    rsi,[rsp+0xf80]
  411822:	jmp    0x4116be
  411827:	mov    rbx,rax
  41182a:	lea    rsi,[rsp+0xf80]
  411832:	jmp    0x4116d2
  411837:	mov    rbx,rax
  41183a:	lea    rsi,[rsp+0xf80]
  411842:	jmp    0x4116e6
  411847:	mov    rbx,rax
  41184a:	lea    rsi,[rsp+0xf80]
  411852:	jmp    0x4116fa
  411857:	mov    rbx,rax
  41185a:	lea    rsi,[rsp+0xf80]
  411862:	jmp    0x41170e
  411867:	mov    rbx,rax
  41186a:	lea    rsi,[rsp+0xf80]
  411872:	jmp    0x411722
  411877:	mov    rbx,rax
  41187a:	lea    rsi,[rsp+0xf80]
  411882:	jmp    0x411736
  411887:	mov    rbx,rax
  41188a:	mov    rax,QWORD PTR [rsp+0x7b0]
  411892:	mov    rdx,r14
  411895:	lea    rsi,[rsp+0xf80]
  41189d:	lea    rcx,[rax-0x18]
  4118a1:	call   0x408188
  4118a6:	jmp    0x4117d6
  4118ab:	mov    rbx,rax
  4118ae:	mov    rax,QWORD PTR [rsp+0x790]
  4118b6:	mov    rdx,r14
  4118b9:	lea    rsi,[rsp+0xf80]
  4118c1:	lea    rcx,[rax-0x18]
  4118c5:	call   0x408188
  4118ca:	jmp    0x4117d6
  4118cf:	jmp    0x4118ab
  4118d1:	mov    rbx,rax
  4118d4:	lea    rsi,[rsp+0xf80]
  4118dc:	jmp    0x4117d6
  4118e1:	mov    rbx,rax
  4118e4:	mov    rax,QWORD PTR [rsp+0x500]
  4118ec:	mov    rdx,r14
  4118ef:	lea    rcx,[rax-0x18]
  4118f3:	call   0x408188
  4118f8:	jmp    0x410dcf
  4118fd:	mov    rbx,rax
  411900:	mov    rax,QWORD PTR [rsp+0xff0]
  411908:	mov    rdx,rsi
  41190b:	lea    rcx,[rax-0x18]
  41190f:	call   0x408188
  411914:	mov    rax,QWORD PTR [rsp+0xfb0]
  41191c:	mov    rdx,rsi
  41191f:	lea    rcx,[rax-0x18]
  411923:	call   0x408188
  411928:	mov    rax,QWORD PTR [rsp+0xfa0]
  411930:	mov    rdx,rsi
  411933:	lea    rcx,[rax-0x18]
  411937:	call   0x408188
  41193c:	jmp    0x4117fe
  411941:	mov    rbx,rax
  411944:	mov    rax,QWORD PTR [rsp+0xa30]
  41194c:	lea    rsi,[rsp+0xf80]
  411954:	mov    rdx,rsi
  411957:	lea    rcx,[rax-0x18]
  41195b:	call   0x408188
  411960:	mov    rax,QWORD PTR [rsp+0xa20]
  411968:	mov    rdx,rsi
  41196b:	lea    rcx,[rax-0x18]
  41196f:	call   0x408188
  411974:	mov    rax,QWORD PTR [rsp+0xa00]
  41197c:	mov    rdx,rsi
  41197f:	lea    rcx,[rax-0x18]
  411983:	call   0x408188
  411988:	mov    rax,QWORD PTR [rsp+0x9f0]
  411990:	mov    rdx,rsi
  411993:	lea    rcx,[rax-0x18]
  411997:	call   0x408188
  41199c:	mov    rax,QWORD PTR [rsp+0x9e0]
  4119a4:	mov    rdx,rsi
  4119a7:	lea    rcx,[rax-0x18]
  4119ab:	call   0x408188
  4119b0:	mov    rax,QWORD PTR [rsp+0x9d0]
  4119b8:	mov    rdx,rsi
  4119bb:	lea    rcx,[rax-0x18]
  4119bf:	call   0x408188
  4119c4:	mov    rax,QWORD PTR [rsp+0x9c0]
  4119cc:	mov    rdx,rsi
  4119cf:	lea    rcx,[rax-0x18]
  4119d3:	call   0x408188
  4119d8:	mov    rax,QWORD PTR [rsp+0x9b0]
  4119e0:	mov    rdx,rsi
  4119e3:	lea    rcx,[rax-0x18]
  4119e7:	call   0x408188
  4119ec:	mov    rax,QWORD PTR [rsp+0x9a0]
  4119f4:	mov    rdx,rsi
  4119f7:	lea    rcx,[rax-0x18]
  4119fb:	call   0x408188
  411a00:	mov    rax,QWORD PTR [rsp+0x990]
  411a08:	mov    rdx,rsi
  411a0b:	lea    rcx,[rax-0x18]
  411a0f:	call   0x408188
  411a14:	mov    rax,QWORD PTR [rsp+0x970]
  411a1c:	mov    rdx,rsi
  411a1f:	lea    rcx,[rax-0x18]
  411a23:	call   0x408188
  411a28:	mov    rax,QWORD PTR [rsp+0x960]
  411a30:	mov    rdx,rsi
  411a33:	lea    rcx,[rax-0x18]
  411a37:	call   0x408188
  411a3c:	mov    rax,QWORD PTR [rsp+0x940]
  411a44:	mov    rdx,rsi
  411a47:	lea    rcx,[rax-0x18]
  411a4b:	call   0x408188
  411a50:	mov    rax,QWORD PTR [rsp+0x930]
  411a58:	mov    rdx,rsi
  411a5b:	lea    rcx,[rax-0x18]
  411a5f:	call   0x408188
  411a64:	mov    rax,QWORD PTR [rsp+0x910]
  411a6c:	mov    rdx,rsi
  411a6f:	lea    rcx,[rax-0x18]
  411a73:	call   0x408188
  411a78:	mov    rax,QWORD PTR [rsp+0x900]
  411a80:	mov    rdx,rsi
  411a83:	lea    rcx,[rax-0x18]
  411a87:	call   0x408188
  411a8c:	mov    rax,QWORD PTR [rsp+0x920]
  411a94:	mov    rdx,rsi
  411a97:	lea    rcx,[rax-0x18]
  411a9b:	call   0x408188
  411aa0:	mov    rax,QWORD PTR [rsp+0x950]
  411aa8:	mov    rdx,rsi
  411aab:	lea    rcx,[rax-0x18]
  411aaf:	call   0x408188
  411ab4:	mov    rax,QWORD PTR [rsp+0x980]
  411abc:	mov    rdx,rsi
  411abf:	lea    rcx,[rax-0x18]
  411ac3:	call   0x408188
  411ac8:	mov    rax,QWORD PTR [rsp+0xa10]
  411ad0:	mov    rdx,rsi
  411ad3:	lea    rcx,[rax-0x18]
  411ad7:	call   0x408188
  411adc:	mov    rax,QWORD PTR [rsp+0xa40]
  411ae4:	mov    rdx,rsi
  411ae7:	lea    rcx,[rax-0x18]
  411aeb:	call   0x408188
  411af0:	jmp    0x411914
  411af5:	mov    rbx,rax
  411af8:	lea    rsi,[rsp+0xf80]
  411b00:	jmp    0x411960
  411b05:	mov    rbx,rax
  411b08:	lea    rsi,[rsp+0xf80]
  411b10:	jmp    0x41174a
  411b15:	mov    rbx,rax
  411b18:	lea    rsi,[rsp+0xf80]
  411b20:	jmp    0x41175e
  411b25:	mov    rbx,rax
  411b28:	lea    rsi,[rsp+0xf80]
  411b30:	jmp    0x411772
  411b35:	mov    rbx,rax
  411b38:	lea    rsi,[rsp+0xf80]
  411b40:	jmp    0x411786
  411b45:	mov    rbx,rax
  411b48:	mov    rax,QWORD PTR [rsp+0x7d0]
  411b50:	mov    rdx,r14
  411b53:	lea    rsi,[rsp+0xf80]
  411b5b:	lea    rcx,[rax-0x18]
  411b5f:	call   0x408188
  411b64:	jmp    0x41179a
  411b69:	mov    rbx,rax
  411b6c:	lea    rsi,[rsp+0xf80]
  411b74:	jmp    0x41179a
  411b79:	mov    rbx,rax
  411b7c:	lea    rsi,[rsp+0xf80]
  411b84:	jmp    0x4117ae
  411b89:	mov    rbx,rax
  411b8c:	lea    rsi,[rsp+0xf80]
  411b94:	jmp    0x4117c2
  411b99:	mov    rbx,rax
  411b9c:	lea    rsi,[rsp+0xf80]
  411ba4:	jmp    0x411974
  411ba9:	mov    rbx,rax
  411bac:	lea    rsi,[rsp+0xf80]
  411bb4:	jmp    0x411988
  411bb9:	mov    rbx,rax
  411bbc:	lea    rsi,[rsp+0xf80]
  411bc4:	jmp    0x41199c
  411bc9:	mov    rbx,rax
  411bcc:	lea    rsi,[rsp+0xf80]
  411bd4:	jmp    0x4119b0
  411bd9:	mov    rbx,rax
  411bdc:	lea    rsi,[rsp+0xf80]
  411be4:	jmp    0x4119c4
  411be9:	mov    rbx,rax
  411bec:	lea    rsi,[rsp+0xf80]
  411bf4:	jmp    0x4119d8
  411bf9:	mov    rbx,rax
  411bfc:	lea    rsi,[rsp+0xf80]
  411c04:	jmp    0x4119ec
  411c09:	mov    rbx,rax
  411c0c:	lea    rsi,[rsp+0xf80]
  411c14:	jmp    0x411a00
  411c19:	mov    rbx,rax
  411c1c:	lea    rsi,[rsp+0xf80]
  411c24:	jmp    0x411914
  411c29:	mov    rbx,rax
  411c2c:	lea    rsi,[rsp+0xf80]
  411c34:	jmp    0x411928
  411c39:	mov    rbx,rax
  411c3c:	mov    rax,QWORD PTR [rsp+0xa50]
  411c44:	mov    rdx,r14
  411c47:	lea    rcx,[rax-0x18]
  411c4b:	call   0x408188
  411c50:	jmp    0x4117fe
  411c55:	mov    rbx,rax
  411c58:	jmp    0x4117fe
  411c5d:	mov    rbx,rax
  411c60:	mov    rax,QWORD PTR [rsp+0x4e0]
  411c68:	mov    rdx,r14
  411c6b:	lea    rcx,[rax-0x18]
  411c6f:	call   0x408188
  411c74:	jmp    0x410dcf
  411c79:	mov    rbx,rax
  411c7c:	mov    rax,QWORD PTR [rsp+0xa70]
  411c84:	mov    rdx,r14
  411c87:	lea    rsi,[rsp+0xf80]
  411c8f:	lea    rcx,[rax-0x18]
  411c93:	call   0x408188
  411c98:	jmp    0x411914
  411c9d:	mov    rbx,rax
  411ca0:	mov    rax,QWORD PTR [rsp+0x5b0]
  411ca8:	mov    rdx,r14
  411cab:	lea    rcx,[rax-0x18]
  411caf:	call   0x408188
  411cb4:	mov    rax,QWORD PTR [rsp+0x620]
  411cbc:	mov    rdx,r14
  411cbf:	lea    rcx,[rax-0x18]
  411cc3:	call   0x408188
  411cc8:	jmp    0x410d90
  411ccd:	lea    rdx,[rip+0x5b29]        # 0x4177fd
  411cd4:	mov    rcx,r14
  411cd7:	call   0x4081c8
  411cdc:	test   eax,eax
  411cde:	je     0x411565
  411ce4:	lea    r12,[rsp+0x410]
  411cec:	mov    r8,QWORD PTR [rsp+0x40]
  411cf1:	lea    rdx,[rip+0x5de6]        # 0x417ade
  411cf8:	mov    rcx,r12
  411cfb:	call   0x408138
  411d00:	mov    rdx,r12
  411d03:	mov    rcx,r14
  411d06:	mov    r12d,0x1
  411d0c:	call   0x40a240
  411d11:	test   al,al
  411d13:	je     0x413627
  411d19:	mov    rax,QWORD PTR [rsp+0x410]
  411d21:	mov    rdx,QWORD PTR [rsp+0x30]
  411d26:	lea    rcx,[rax-0x18]
  411d2a:	call   0x408188
  411d2f:	test   r12b,r12b
  411d32:	je     0x413603
  411d38:	lea    rbp,[rsp+0x450]
  411d40:	lea    rdx,[rip+0x597e]        # 0x4176c5
  411d47:	mov    r8,r14
  411d4a:	mov    rcx,rbp
  411d4d:	call   0x40af80
  411d52:	mov    rcx,QWORD PTR [rsp+0xd8]
  411d5a:	mov    rdx,rbp
  411d5d:	call   0x408168
  411d62:	mov    rax,QWORD PTR [rsp+0x450]
  411d6a:	mov    rdx,QWORD PTR [rsp+0x30]
  411d6f:	lea    rcx,[rax-0x18]
  411d73:	call   0x408188
  411d78:	jmp    0x40b388
  411d7d:	mov    rbx,rax
  411d80:	mov    rax,QWORD PTR [rsp+0x8e0]
  411d88:	mov    rdx,r14
  411d8b:	lea    rsi,[rsp+0xf80]
  411d93:	lea    rcx,[rax-0x18]
  411d97:	call   0x408188
  411d9c:	jmp    0x411914
  411da1:	call   0x4080a0
  411da6:	mov    rbx,rax
  411da9:	lea    rsi,[rsp+0xf80]
  411db1:	jmp    0x4115ec
  411db6:	mov    rbx,rax
  411db9:	mov    rax,QWORD PTR [rsp+0x3e0]
  411dc1:	mov    rdx,QWORD PTR [rsp+0x30]
  411dc6:	lea    rcx,[rax-0x18]
  411dca:	call   0x408188
  411dcf:	jmp    0x411684
  411dd4:	mov    rbx,rax
  411dd7:	mov    rax,QWORD PTR [rsp+0x760]
  411ddf:	mov    rdx,QWORD PTR [rsp+0x30]
  411de4:	lea    rcx,[rax-0x18]
  411de8:	call   0x408188
  411ded:	jmp    0x4115ac
  411df2:	mov    rbx,rax
  411df5:	mov    rax,QWORD PTR [rsp+0x3d0]
  411dfd:	mov    rdx,QWORD PTR [rsp+0x30]
  411e02:	lea    rcx,[rax-0x18]
  411e06:	call   0x408188
  411e0b:	mov    rax,QWORD PTR [rsp+0x3c0]
  411e13:	mov    rdx,QWORD PTR [rsp+0x30]
  411e18:	lea    rcx,[rax-0x18]
  411e1c:	call   0x408188
  411e21:	jmp    0x411684
  411e26:	mov    rbx,rax
  411e29:	jmp    0x411e0b
  411e2b:	lea    rcx,[r14+0x8]
  411e2f:	mov    rbp,rax
  411e32:	call   0x4080f8
  411e37:	mov    rax,rbp
  411e3a:	mov    rdx,QWORD PTR [rbx-0x18]
  411e3e:	mov    QWORD PTR [rsp+0xff0],rbx
  411e46:	mov    rbx,rax
  411e49:	mov    QWORD PTR [rsp+rdx*1+0xff0],rdi
  411e51:	mov    rax,QWORD PTR [rip+0x7208]        # 0x419060
  411e58:	lea    rcx,[r14+0xd0]
  411e5f:	add    rax,0x10
  411e63:	mov    QWORD PTR [rsp+0x10c0],rax
  411e6b:	call   0x4080c0
  411e70:	jmp    0x4115b4
  411e75:	jmp    0x411e3a
  411e77:	mov    rbx,rax
  411e7a:	jmp    0x411e51
  411e7c:	mov    rbx,rax
  411e7f:	jmp    0x4115b4
  411e84:	mov    rbx,rax
  411e87:	mov    rax,QWORD PTR [rsp+0x740]
  411e8f:	mov    rdx,r14
  411e92:	lea    rcx,[rax-0x18]
  411e96:	call   0x408188
  411e9b:	mov    rax,QWORD PTR [rsp+0x730]
  411ea3:	mov    rdx,r14
  411ea6:	lea    rcx,[rax-0x18]
  411eaa:	call   0x408188
  411eaf:	mov    rax,QWORD PTR [rsp+0x720]
  411eb7:	mov    rdx,r14
  411eba:	lea    rcx,[rax-0x18]
  411ebe:	call   0x408188
  411ec3:	mov    rax,QWORD PTR [rsp+0x710]
  411ecb:	mov    rdx,r14
  411ece:	lea    rcx,[rax-0x18]
  411ed2:	call   0x408188
  411ed7:	mov    rax,QWORD PTR [rsp+0x700]
  411edf:	mov    rdx,r14
  411ee2:	lea    rcx,[rax-0x18]
  411ee6:	call   0x408188
  411eeb:	mov    rax,QWORD PTR [rsp+0x6f0]
  411ef3:	mov    rdx,r14
  411ef6:	lea    rcx,[rax-0x18]
  411efa:	call   0x408188
  411eff:	mov    rax,QWORD PTR [rsp+0x6d0]
  411f07:	mov    rdx,r14
  411f0a:	lea    rcx,[rax-0x18]
  411f0e:	call   0x408188
  411f13:	mov    rax,QWORD PTR [rsp+0x6c0]
  411f1b:	mov    rdx,r14
  411f1e:	lea    rcx,[rax-0x18]
  411f22:	call   0x408188
  411f27:	mov    rax,QWORD PTR [rsp+0x6a0]
  411f2f:	mov    rdx,r14
  411f32:	lea    rcx,[rax-0x18]
  411f36:	call   0x408188
  411f3b:	mov    rax,QWORD PTR [rsp+0x690]
  411f43:	mov    rdx,r14
  411f46:	lea    rcx,[rax-0x18]
  411f4a:	call   0x408188
  411f4f:	mov    rax,QWORD PTR [rsp+0x670]
  411f57:	mov    rdx,r14
  411f5a:	lea    rcx,[rax-0x18]
  411f5e:	call   0x408188
  411f63:	mov    rax,QWORD PTR [rsp+0x660]
  411f6b:	mov    rdx,r14
  411f6e:	lea    rcx,[rax-0x18]
  411f72:	call   0x408188
  411f77:	mov    rax,QWORD PTR [rsp+0x680]
  411f7f:	mov    rdx,r14
  411f82:	lea    rcx,[rax-0x18]
  411f86:	call   0x408188
  411f8b:	mov    rax,QWORD PTR [rsp+0x6b0]
  411f93:	mov    rdx,r14
  411f96:	lea    rcx,[rax-0x18]
  411f9a:	call   0x408188
  411f9f:	mov    rax,QWORD PTR [rsp+0x6e0]
  411fa7:	mov    rdx,r14
  411faa:	lea    rcx,[rax-0x18]
  411fae:	call   0x408188
  411fb3:	mov    rax,QWORD PTR [rsp+0x750]
  411fbb:	mov    rdx,r14
  411fbe:	lea    rcx,[rax-0x18]
  411fc2:	call   0x408188
  411fc7:	jmp    0x4115c7
  411fcc:	mov    rbx,rax
  411fcf:	jmp    0x411e9b
  411fd4:	mov    rbx,rax
  411fd7:	jmp    0x411eaf
  411fdc:	mov    rbx,rax
  411fdf:	jmp    0x411ec3
  411fe4:	mov    rbx,rax
  411fe7:	jmp    0x411ed7
  411fec:	mov    rbx,rax
  411fef:	jmp    0x411eeb
  411ff4:	mov    rbx,rax
  411ff7:	jmp    0x411eff
  411ffc:	mov    rbx,rax
  411fff:	jmp    0x411f13
  412004:	mov    rbx,rax
  412007:	jmp    0x411f27
  41200c:	mov    rbx,rax
  41200f:	jmp    0x411f3b
  412014:	mov    rbx,rax
  412017:	jmp    0x411f4f
  41201c:	jmp    0x412014
  41201e:	mov    rbx,rax
  412021:	jmp    0x411f63
  412026:	jmp    0x4118fd
  41202b:	mov    rbx,rax
  41202e:	mov    rax,QWORD PTR [rsp+0xbc0]
  412036:	lea    rsi,[rsp+0xf80]
  41203e:	mov    rdx,rsi
  412041:	lea    rcx,[rax-0x18]
  412045:	call   0x408188
  41204a:	mov    rax,QWORD PTR [rsp+0xbb0]
  412052:	mov    rdx,rsi
  412055:	lea    rcx,[rax-0x18]
  412059:	call   0x408188
  41205e:	mov    rax,QWORD PTR [rsp+0xb90]
  412066:	mov    rdx,rsi
  412069:	lea    rcx,[rax-0x18]
  41206d:	call   0x408188
  412072:	mov    rax,QWORD PTR [rsp+0xb80]
  41207a:	mov    rdx,rsi
  41207d:	lea    rcx,[rax-0x18]
  412081:	call   0x408188
  412086:	mov    rax,QWORD PTR [rsp+0xb70]
  41208e:	mov    rdx,rsi
  412091:	lea    rcx,[rax-0x18]
  412095:	call   0x408188
  41209a:	mov    rax,QWORD PTR [rsp+0xb60]
  4120a2:	mov    rdx,rsi
  4120a5:	lea    rcx,[rax-0x18]
  4120a9:	call   0x408188
  4120ae:	mov    rax,QWORD PTR [rsp+0xb50]
  4120b6:	mov    rdx,rsi
  4120b9:	lea    rcx,[rax-0x18]
  4120bd:	call   0x408188
  4120c2:	mov    rax,QWORD PTR [rsp+0xb40]
  4120ca:	mov    rdx,rsi
  4120cd:	lea    rcx,[rax-0x18]
  4120d1:	call   0x408188
  4120d6:	mov    rax,QWORD PTR [rsp+0xb30]
  4120de:	mov    rdx,rsi
  4120e1:	lea    rcx,[rax-0x18]
  4120e5:	call   0x408188
  4120ea:	mov    rax,QWORD PTR [rsp+0xb20]
  4120f2:	mov    rdx,rsi
  4120f5:	lea    rcx,[rax-0x18]
  4120f9:	call   0x408188
  4120fe:	mov    rax,QWORD PTR [rsp+0xb00]
  412106:	mov    rdx,rsi
  412109:	lea    rcx,[rax-0x18]
  41210d:	call   0x408188
  412112:	mov    rax,QWORD PTR [rsp+0xaf0]
  41211a:	mov    rdx,rsi
  41211d:	lea    rcx,[rax-0x18]
  412121:	call   0x408188
  412126:	mov    rax,QWORD PTR [rsp+0xad0]
  41212e:	mov    rdx,rsi
  412131:	lea    rcx,[rax-0x18]
  412135:	call   0x408188
  41213a:	mov    rax,QWORD PTR [rsp+0xac0]
  412142:	mov    rdx,rsi
  412145:	lea    rcx,[rax-0x18]
  412149:	call   0x408188
  41214e:	mov    rax,QWORD PTR [rsp+0xaa0]
  412156:	mov    rdx,rsi
  412159:	lea    rcx,[rax-0x18]
  41215d:	call   0x408188
  412162:	mov    rax,QWORD PTR [rsp+0xa90]
  41216a:	mov    rdx,rsi
  41216d:	lea    rcx,[rax-0x18]
  412171:	call   0x408188
  412176:	mov    rax,QWORD PTR [rsp+0xab0]
  41217e:	mov    rdx,rsi
  412181:	lea    rcx,[rax-0x18]
  412185:	call   0x408188
  41218a:	mov    rax,QWORD PTR [rsp+0xae0]
  412192:	mov    rdx,rsi
  412195:	lea    rcx,[rax-0x18]
  412199:	call   0x408188
  41219e:	mov    rax,QWORD PTR [rsp+0xb10]
  4121a6:	mov    rdx,rsi
  4121a9:	lea    rcx,[rax-0x18]
  4121ad:	call   0x408188
  4121b2:	mov    rax,QWORD PTR [rsp+0xba0]
  4121ba:	mov    rdx,rsi
  4121bd:	lea    rcx,[rax-0x18]
  4121c1:	call   0x408188
  4121c6:	mov    rax,QWORD PTR [rsp+0xbd0]
  4121ce:	mov    rdx,rsi
  4121d1:	lea    rcx,[rax-0x18]
  4121d5:	call   0x408188
  4121da:	jmp    0x411914
  4121df:	mov    rbx,rax
  4121e2:	lea    rsi,[rsp+0xf80]
  4121ea:	jmp    0x41204a
  4121ef:	mov    rbx,rax
  4121f2:	lea    rsi,[rsp+0xf80]
  4121fa:	jmp    0x41205e
  4121ff:	mov    rbx,rax
  412202:	lea    rsi,[rsp+0xf80]
  41220a:	jmp    0x412072
  41220f:	mov    rbx,rax
  412212:	lea    rsi,[rsp+0xf80]
  41221a:	jmp    0x412086
  41221f:	mov    rbx,rax
  412222:	lea    rsi,[rsp+0xf80]
  41222a:	jmp    0x41209a
  41222f:	mov    rbx,rax
  412232:	lea    rsi,[rsp+0xf80]
  41223a:	jmp    0x4120ae
  41223f:	mov    rbx,rax
  412242:	lea    rsi,[rsp+0xf80]
  41224a:	jmp    0x4120c2
  41224f:	mov    rbx,rax
  412252:	lea    rsi,[rsp+0xf80]
  41225a:	jmp    0x411a14
  41225f:	mov    rbx,rax
  412262:	lea    rsi,[rsp+0xf80]
  41226a:	jmp    0x411a28
  41226f:	mov    rbx,rax
  412272:	lea    rsi,[rsp+0xf80]
  41227a:	jmp    0x411a3c
  41227f:	mov    rbx,rax
  412282:	lea    rsi,[rsp+0xf80]
  41228a:	jmp    0x411a50
  41228f:	mov    rbx,rax
  412292:	lea    rsi,[rsp+0xf80]
  41229a:	jmp    0x411a64
  41229f:	mov    rbx,rax
  4122a2:	mov    rax,QWORD PTR [rsp+0x910]
  4122aa:	mov    rdx,r14
  4122ad:	lea    rsi,[rsp+0xf80]
  4122b5:	lea    rcx,[rax-0x18]
  4122b9:	call   0x408188
  4122be:	jmp    0x411a78
  4122c3:	mov    rbx,rax
  4122c6:	lea    rsi,[rsp+0xf80]
  4122ce:	jmp    0x411a78
  4122d3:	mov    rbx,rax
  4122d6:	lea    rsi,[rsp+0xf80]
  4122de:	jmp    0x411a8c
  4122e3:	mov    rbx,rax
  4122e6:	lea    rsi,[rsp+0xf80]
  4122ee:	jmp    0x411aa0
  4122f3:	mov    rbx,rax
  4122f6:	lea    rsi,[rsp+0xf80]
  4122fe:	jmp    0x411ab4
  412303:	mov    rbx,rax
  412306:	lea    rsi,[rsp+0xf80]
  41230e:	jmp    0x411ac8
  412313:	mov    rbx,rax
  412316:	lea    rsi,[rsp+0xf80]
  41231e:	jmp    0x411adc
  412323:	mov    rbx,rax
  412326:	mov    rax,QWORD PTR [rsp+0x8f0]
  41232e:	mov    rdx,r14
  412331:	lea    rsi,[rsp+0xf80]
  412339:	lea    rcx,[rax-0x18]
  41233d:	call   0x408188
  412342:	jmp    0x411914
  412347:	mov    rbx,rax
  41234a:	mov    rax,QWORD PTR [rsp+0x8d0]
  412352:	mov    rdx,r14
  412355:	lea    rsi,[rsp+0xf80]
  41235d:	lea    rcx,[rax-0x18]
  412361:	call   0x408188
  412366:	jmp    0x411914
  41236b:	jmp    0x412347
  41236d:	jmp    0x411c19
  412372:	jmp    0x411c29
  412377:	mov    rbx,rax
  41237a:	mov    rax,QWORD PTR [rsp+0x8c0]
  412382:	mov    rdx,r14
  412385:	lea    rcx,[rax-0x18]
  412389:	call   0x408188
  41238e:	jmp    0x4117fe
  412393:	jmp    0x411c55
  412398:	mov    rbx,rax
  41239b:	mov    rax,QWORD PTR [rsp+0x2d0]
  4123a3:	mov    rdx,QWORD PTR [rsp+0x30]
  4123a8:	lea    rcx,[rax-0x18]
  4123ac:	call   0x408188
  4123b1:	jmp    0x411684
  4123b6:	mov    rbx,rax
  4123b9:	jmp    0x411684
  4123be:	mov    rcx,rax
  4123c1:	call   0x408050
  4123c6:	mov    rcx,r12
  4123c9:	call   0x408060
  4123ce:	call   0x408028
  4123d3:	mov    rbx,rax
  4123d6:	mov    rax,QWORD PTR [rsp+0x390]
  4123de:	mov    rdx,QWORD PTR [rsp+0x30]
  4123e3:	lea    rcx,[rax-0x18]
  4123e7:	call   0x408188
  4123ec:	jmp    0x411684
  4123f1:	mov    rbx,rax
  4123f4:	xor    r12d,r12d
  4123f7:	xor    ebp,ebp
  4123f9:	xor    edi,edi
  4123fb:	mov    esi,0x1
  412400:	test   r12b,r12b
  412403:	je     0x41241b
  412405:	mov    rax,QWORD PTR [rsp+0x250]
  41240d:	mov    rdx,QWORD PTR [rsp+0x30]
  412412:	lea    rcx,[rax-0x18]
  412416:	call   0x408188
  41241b:	test   bpl,bpl
  41241e:	je     0x412436
  412420:	mov    rax,QWORD PTR [rsp+0x240]
  412428:	mov    rdx,QWORD PTR [rsp+0x30]
  41242d:	lea    rcx,[rax-0x18]
  412431:	call   0x408188
  412436:	test   dil,dil
  412439:	je     0x412451
  41243b:	mov    rax,QWORD PTR [rsp+0x230]
  412443:	mov    rdx,QWORD PTR [rsp+0x30]
  412448:	lea    rcx,[rax-0x18]
  41244c:	call   0x408188
  412451:	test   sil,sil
  412454:	je     0x411684
  41245a:	mov    rax,QWORD PTR [rsp+0x220]
  412462:	mov    rdx,QWORD PTR [rsp+0x30]
  412467:	lea    rcx,[rax-0x18]
  41246b:	call   0x408188
  412470:	jmp    0x411684
  412475:	mov    rbx,rax
  412478:	call   0x408048
  41247d:	jmp    0x411684
  412482:	mov    rbx,rax
  412485:	xor    r12d,r12d
  412488:	xor    ebp,ebp
  41248a:	xor    edi,edi
  41248c:	xor    esi,esi
  41248e:	jmp    0x412400
  412493:	mov    rbx,rax
  412496:	mov    rax,QWORD PTR [rsp+0x310]
  41249e:	mov    rdx,QWORD PTR [rsp+0x30]
  4124a3:	lea    rcx,[rax-0x18]
  4124a7:	call   0x408188
  4124ac:	jmp    0x411684
  4124b1:	jmp    0x4123b6
  4124b6:	mov    rbx,rax
  4124b9:	xor    r12d,r12d
  4124bc:	xor    ebp,ebp
  4124be:	mov    edi,0x1
  4124c3:	mov    esi,0x1
  4124c8:	jmp    0x412400
  4124cd:	mov    rbx,rax
  4124d0:	mov    rax,QWORD PTR [rsp+0x330]
  4124d8:	mov    rdx,QWORD PTR [rsp+0x30]
  4124dd:	lea    rcx,[rax-0x18]
  4124e1:	call   0x408188
  4124e6:	jmp    0x411684
  4124eb:	mov    rbx,rax
  4124ee:	mov    rax,QWORD PTR [rsp+0x300]
  4124f6:	mov    rdx,QWORD PTR [rsp+0x30]
  4124fb:	lea    rcx,[rax-0x18]
  4124ff:	call   0x408188
  412504:	mov    rax,QWORD PTR [rsp+0x2f0]
  41250c:	mov    rdx,QWORD PTR [rsp+0x30]
  412511:	lea    rcx,[rax-0x18]
  412515:	call   0x408188
  41251a:	jmp    0x411684
  41251f:	mov    rbx,rax
  412522:	lea    rsi,[rsp+0x106]
  41252a:	jmp    0x410ec8
  41252f:	mov    rbx,rax
  412532:	lea    rsi,[rsp+0x106]
  41253a:	jmp    0x410e04
  41253f:	mov    rbx,rax
  412542:	mov    rax,QWORD PTR [rsp+0xff0]
  41254a:	lea    rsi,[rsp+0xf80]
  412552:	mov    rdx,rsi
  412555:	lea    rcx,[rax-0x18]
  412559:	call   0x408188
  41255e:	jmp    0x4117d6
  412563:	mov    rbx,rax
  412566:	mov    rax,QWORD PTR [rsp+0x8b0]
  41256e:	lea    rsi,[rsp+0xf80]
  412576:	mov    rdx,rsi
  412579:	lea    rcx,[rax-0x18]
  41257d:	call   0x408188
  412582:	jmp    0x4116aa
  412587:	mov    rbx,rax
  41258a:	mov    r12d,0x1
  412590:	mov    ebp,0x1
  412595:	mov    edi,0x1
  41259a:	mov    esi,0x1
  41259f:	jmp    0x412400
  4125a4:	mov    rbx,rax
  4125a7:	mov    rax,QWORD PTR [rsp+0x3a0]
  4125af:	mov    rdx,QWORD PTR [rsp+0x30]
  4125b4:	lea    rcx,[rax-0x18]
  4125b8:	call   0x408188
  4125bd:	jmp    0x411684
  4125c2:	mov    rbx,rax
  4125c5:	jmp    0x411fb3
  4125ca:	mov    rbx,rax
  4125cd:	lea    rsi,[rsp+0xf80]
  4125d5:	jmp    0x4115c7
  4125da:	mov    rbx,rax
  4125dd:	lea    rsi,[rsp+0xf80]
  4125e5:	jmp    0x4115db
  4125ea:	mov    rbx,rax
  4125ed:	mov    rax,QWORD PTR [rsp+0x650]
  4125f5:	mov    rdx,r14
  4125f8:	lea    rsi,[rsp+0xf80]
  412600:	lea    rcx,[rax-0x18]
  412604:	call   0x408188
  412609:	jmp    0x4115ec
  41260e:	mov    rbx,rax
  412611:	jmp    0x411f8b
  412616:	mov    rbx,rax
  412619:	jmp    0x411f9f
  41261e:	mov    rbx,rax
  412621:	jmp    0x411f77
  412626:	jmp    0x4123b6
  41262b:	jmp    0x4123b6
  412630:	mov    rbx,rax
  412633:	mov    rax,QWORD PTR [rsp+0xdd0]
  41263b:	mov    rdx,QWORD PTR [rsp+0x30]
  412640:	lea    rcx,[rax-0x18]
  412644:	call   0x408188
  412649:	mov    rax,QWORD PTR [rsp+0xdc0]
  412651:	mov    rdx,QWORD PTR [rsp+0x30]
  412656:	lea    rcx,[rax-0x18]
  41265a:	call   0x408188
  41265f:	mov    rax,QWORD PTR [rsp+0xda0]
  412667:	mov    rdx,QWORD PTR [rsp+0x30]
  41266c:	lea    rcx,[rax-0x18]
  412670:	call   0x408188
  412675:	mov    rax,QWORD PTR [rsp+0xd90]
  41267d:	mov    rdx,QWORD PTR [rsp+0x30]
  412682:	lea    rcx,[rax-0x18]
  412686:	call   0x408188
  41268b:	mov    rax,QWORD PTR [rsp+0xd80]
  412693:	mov    rdx,QWORD PTR [rsp+0x30]
  412698:	lea    rcx,[rax-0x18]
  41269c:	call   0x408188
  4126a1:	mov    rax,QWORD PTR [rsp+0xd60]
  4126a9:	mov    rdx,QWORD PTR [rsp+0x30]
  4126ae:	lea    rcx,[rax-0x18]
  4126b2:	call   0x408188
  4126b7:	mov    rax,QWORD PTR [rsp+0xd50]
  4126bf:	mov    rdx,QWORD PTR [rsp+0x30]
  4126c4:	lea    rcx,[rax-0x18]
  4126c8:	call   0x408188
  4126cd:	mov    rax,QWORD PTR [rsp+0xd40]
  4126d5:	mov    rdx,QWORD PTR [rsp+0x30]
  4126da:	lea    rcx,[rax-0x18]
  4126de:	call   0x408188
  4126e3:	mov    rax,QWORD PTR [rsp+0xd30]
  4126eb:	mov    rdx,QWORD PTR [rsp+0x30]
  4126f0:	lea    rcx,[rax-0x18]
  4126f4:	call   0x408188
  4126f9:	mov    rax,QWORD PTR [rsp+0xd20]
  412701:	mov    rdx,QWORD PTR [rsp+0x30]
  412706:	lea    rcx,[rax-0x18]
  41270a:	call   0x408188
  41270f:	mov    rax,QWORD PTR [rsp+0xd10]
  412717:	mov    rdx,QWORD PTR [rsp+0x30]
  41271c:	lea    rcx,[rax-0x18]
  412720:	call   0x408188
  412725:	mov    rax,QWORD PTR [rsp+0xd00]
  41272d:	mov    rdx,QWORD PTR [rsp+0x30]
  412732:	lea    rcx,[rax-0x18]
  412736:	call   0x408188
  41273b:	mov    rax,QWORD PTR [rsp+0xcf0]
  412743:	mov    rdx,QWORD PTR [rsp+0x30]
  412748:	lea    rcx,[rax-0x18]
  41274c:	call   0x408188
  412751:	mov    rax,QWORD PTR [rsp+0xce0]
  412759:	mov    rdx,QWORD PTR [rsp+0x30]
  41275e:	lea    rcx,[rax-0x18]
  412762:	call   0x408188
  412767:	mov    rax,QWORD PTR [rsp+0xcd0]
  41276f:	mov    rdx,QWORD PTR [rsp+0x30]
  412774:	lea    rcx,[rax-0x18]
  412778:	call   0x408188
  41277d:	mov    rax,QWORD PTR [rsp+0xcc0]
  412785:	mov    rdx,QWORD PTR [rsp+0x30]
  41278a:	lea    rcx,[rax-0x18]
  41278e:	call   0x408188
  412793:	mov    rax,QWORD PTR [rsp+0xcb0]
  41279b:	mov    rdx,QWORD PTR [rsp+0x30]
  4127a0:	lea    rcx,[rax-0x18]
  4127a4:	call   0x408188
  4127a9:	mov    rax,QWORD PTR [rsp+0xc90]
  4127b1:	mov    rdx,QWORD PTR [rsp+0x30]
  4127b6:	lea    rcx,[rax-0x18]
  4127ba:	call   0x408188
  4127bf:	mov    rax,QWORD PTR [rsp+0xc80]
  4127c7:	mov    rdx,QWORD PTR [rsp+0x30]
  4127cc:	lea    rcx,[rax-0x18]
  4127d0:	call   0x408188
  4127d5:	mov    rax,QWORD PTR [rsp+0xc60]
  4127dd:	mov    rdx,QWORD PTR [rsp+0x30]
  4127e2:	lea    rcx,[rax-0x18]
  4127e6:	call   0x408188
  4127eb:	mov    rax,QWORD PTR [rsp+0xc50]
  4127f3:	mov    rdx,QWORD PTR [rsp+0x30]
  4127f8:	lea    rcx,[rax-0x18]
  4127fc:	call   0x408188
  412801:	mov    rax,QWORD PTR [rsp+0xc30]
  412809:	mov    rdx,QWORD PTR [rsp+0x30]
  41280e:	lea    rcx,[rax-0x18]
  412812:	call   0x408188
  412817:	mov    rax,QWORD PTR [rsp+0xc20]
  41281f:	mov    rdx,QWORD PTR [rsp+0x30]
  412824:	lea    rcx,[rax-0x18]
  412828:	call   0x408188
  41282d:	mov    rax,QWORD PTR [rsp+0xc00]
  412835:	mov    rdx,QWORD PTR [rsp+0x30]
  41283a:	lea    rcx,[rax-0x18]
  41283e:	call   0x408188
  412843:	mov    rax,QWORD PTR [rsp+0xbf0]
  41284b:	mov    rdx,QWORD PTR [rsp+0x30]
  412850:	lea    rcx,[rax-0x18]
  412854:	call   0x408188
  412859:	mov    rax,QWORD PTR [rsp+0xc10]
  412861:	mov    rdx,QWORD PTR [rsp+0x30]
  412866:	lea    rcx,[rax-0x18]
  41286a:	call   0x408188
  41286f:	mov    rax,QWORD PTR [rsp+0xc40]
  412877:	mov    rdx,QWORD PTR [rsp+0x30]
  41287c:	lea    rcx,[rax-0x18]
  412880:	call   0x408188
  412885:	mov    rax,QWORD PTR [rsp+0xc70]
  41288d:	mov    rdx,QWORD PTR [rsp+0x30]
  412892:	lea    rcx,[rax-0x18]
  412896:	call   0x408188
  41289b:	mov    rax,QWORD PTR [rsp+0xca0]
  4128a3:	mov    rdx,QWORD PTR [rsp+0x30]
  4128a8:	lea    rcx,[rax-0x18]
  4128ac:	call   0x408188
  4128b1:	mov    rax,QWORD PTR [rsp+0xd70]
  4128b9:	mov    rdx,QWORD PTR [rsp+0x30]
  4128be:	lea    rcx,[rax-0x18]
  4128c2:	call   0x408188
  4128c7:	mov    rax,QWORD PTR [rsp+0xdb0]
  4128cf:	mov    rdx,QWORD PTR [rsp+0x30]
  4128d4:	lea    rcx,[rax-0x18]
  4128d8:	call   0x408188
  4128dd:	mov    rax,QWORD PTR [rsp+0xde0]
  4128e5:	mov    rdx,QWORD PTR [rsp+0x30]
  4128ea:	lea    rcx,[rax-0x18]
  4128ee:	call   0x408188
  4128f3:	jmp    0x410dcf
  4128f8:	mov    rbx,rax
  4128fb:	jmp    0x412649
  412900:	mov    rbx,rax
  412903:	jmp    0x41265f
  412908:	mov    rbx,rax
  41290b:	lea    rsi,[rsp+0xf80]
  412913:	jmp    0x4120d6
  412918:	mov    rbx,rax
  41291b:	lea    rsi,[rsp+0xf80]
  412923:	jmp    0x4120ea
  412928:	mov    rbx,rax
  41292b:	lea    rsi,[rsp+0xf80]
  412933:	jmp    0x4120fe
  412938:	mov    rbx,rax
  41293b:	lea    rsi,[rsp+0xf80]
  412943:	jmp    0x412112
  412948:	mov    rbx,rax
  41294b:	lea    rsi,[rsp+0xf80]
  412953:	jmp    0x412126
  412958:	mov    rbx,rax
  41295b:	lea    rsi,[rsp+0xf80]
  412963:	jmp    0x41213a
  412968:	mov    rbx,rax
  41296b:	lea    rsi,[rsp+0xf80]
  412973:	jmp    0x41214e
  412978:	mov    rbx,rax
  41297b:	mov    rax,QWORD PTR [rsp+0xaa0]
  412983:	mov    rdx,r14
  412986:	lea    rsi,[rsp+0xf80]
  41298e:	lea    rcx,[rax-0x18]
  412992:	call   0x408188
  412997:	jmp    0x412162
  41299c:	mov    rbx,rax
  41299f:	lea    rsi,[rsp+0xf80]
  4129a7:	jmp    0x412162
  4129ac:	mov    rbx,rax
  4129af:	lea    rsi,[rsp+0xf80]
  4129b7:	jmp    0x412176
  4129bc:	mov    rbx,rax
  4129bf:	lea    rsi,[rsp+0xf80]
  4129c7:	jmp    0x41218a
  4129cc:	mov    rbx,rax
  4129cf:	lea    rsi,[rsp+0xf80]
  4129d7:	jmp    0x41219e
  4129dc:	mov    rbx,rax
  4129df:	lea    rsi,[rsp+0xf80]
  4129e7:	jmp    0x4121b2
  4129ec:	mov    rbx,rax
  4129ef:	lea    rsi,[rsp+0xf80]
  4129f7:	jmp    0x4121c6
  4129fc:	mov    rbx,rax
  4129ff:	mov    rax,QWORD PTR [rsp+0xa80]
  412a07:	mov    rdx,r14
  412a0a:	lea    rsi,[rsp+0xf80]
  412a12:	lea    rcx,[rax-0x18]
  412a16:	call   0x408188
  412a1b:	jmp    0x411914
  412a20:	mov    rbx,rax
  412a23:	mov    rax,QWORD PTR [rsp+0xa60]
  412a2b:	mov    rdx,r14
  412a2e:	lea    rsi,[rsp+0xf80]
  412a36:	lea    rcx,[rax-0x18]
  412a3a:	call   0x408188
  412a3f:	jmp    0x411914
  412a44:	mov    rbx,rax
  412a47:	jmp    0x412675
  412a4c:	mov    rbx,rax
  412a4f:	jmp    0x41268b
  412a54:	mov    rbx,rax
  412a57:	jmp    0x4126a1
  412a5c:	mov    rbx,rax
  412a5f:	jmp    0x4126b7
  412a64:	mov    rbx,rax
  412a67:	jmp    0x4126cd
  412a6c:	mov    rbx,rax
  412a6f:	jmp    0x4126e3
  412a74:	mov    rbx,rax
  412a77:	jmp    0x4126f9
  412a7c:	mov    rbx,rax
  412a7f:	jmp    0x41270f
  412a84:	mov    rbx,rax
  412a87:	jmp    0x412725
  412a8c:	mov    rbx,rax
  412a8f:	jmp    0x41273b
  412a94:	mov    rbx,rax
  412a97:	jmp    0x412751
  412a9c:	mov    rbx,rax
  412a9f:	jmp    0x412767
  412aa4:	mov    rbx,rax
  412aa7:	jmp    0x41277d
  412aac:	mov    rbx,rax
  412aaf:	jmp    0x412793
  412ab4:	mov    rbx,rax
  412ab7:	jmp    0x4127a9
  412abc:	mov    rbx,rax
  412abf:	jmp    0x4127bf
  412ac4:	mov    rbx,rax
  412ac7:	jmp    0x4127d5
  412acc:	mov    rbx,rax
  412acf:	jmp    0x4127eb
  412ad4:	mov    rbx,rax
  412ad7:	jmp    0x412801
  412adc:	mov    rbx,rax
  412adf:	jmp    0x412817
  412ae4:	mov    rbx,rax
  412ae7:	jmp    0x41282d
  412aec:	mov    rbx,rax
  412aef:	jmp    0x412843
  412af4:	mov    rbx,rax
  412af7:	jmp    0x412859
  412afc:	mov    rbx,rax
  412aff:	jmp    0x41286f
  412b04:	mov    rbx,rax
  412b07:	jmp    0x412885
  412b0c:	mov    rbx,rax
  412b0f:	jmp    0x41289b
  412b14:	mov    rbx,rax
  412b17:	jmp    0x4128b1
  412b1c:	mov    rbx,rax
  412b1f:	jmp    0x4128c7
  412b24:	mov    rbx,rax
  412b27:	jmp    0x4128dd
  412b2c:	mov    rcx,QWORD PTR [rip+0x64cd]        # 0x419000
  412b33:	lea    rdx,[rip+0x4eee]        # 0x417a28
  412b3a:	call   0x408068
  412b3f:	jmp    0x410c4f
  412b44:	mov    rbx,rax
  412b47:	mov    rax,QWORD PTR [rsp+0xbe0]
  412b4f:	mov    rdx,r14
  412b52:	lea    rcx,[rax-0x18]
  412b56:	call   0x408188
  412b5b:	jmp    0x410dcf
  412b60:	lea    r8,[rsp+0xf90]
  412b68:	lea    rdx,[rip+0x4783]        # 0x4172f2
  412b6f:	mov    rcx,r14
  412b72:	call   0x408138
  412b77:	lea    rcx,[rip+0xa502]        # 0x41d080
  412b7e:	mov    rdx,r14
  412b81:	call   0x40a360
  412b86:	lea    rbx,[rsp+0xf40]
  412b8e:	lea    r8,[rsp+0xf80]
  412b96:	lea    rdx,[rip+0x49f0]        # 0x41758d
  412b9d:	mov    r12,rax
  412ba0:	mov    rcx,rbx
  412ba3:	call   0x408138
  412ba8:	lea    rcx,[rip+0xa4d1]        # 0x41d080
  412baf:	mov    rdx,rbx
  412bb2:	call   0x40a360
  412bb7:	lea    rbx,[rsp+0xf10]
  412bbf:	lea    r8,[rsp+0xf70]
  412bc7:	lea    rdx,[rip+0x4ade]        # 0x4176ac
  412bce:	mov    rbp,rax
  412bd1:	mov    rcx,rbx
  412bd4:	call   0x408138
  412bd9:	lea    rcx,[rip+0xa4a0]        # 0x41d080
  412be0:	mov    rdx,rbx
  412be3:	call   0x40a360
  412be8:	lea    rbx,[rsp+0xe40]
  412bf0:	lea    r8,[rsp+0xde0]
  412bf8:	lea    rdx,[rip+0x37a8]        # 0x4163a7
  412bff:	mov    rdi,rax
  412c02:	mov    rcx,rbx
  412c05:	call   0x408138
  412c0a:	lea    rcx,[rip+0xa46f]        # 0x41d080
  412c11:	mov    rdx,rbx
  412c14:	call   0x40a360
  412c19:	lea    rbx,[rsp+0xe10]
  412c21:	lea    r8,[rsp+0xdd0]
  412c29:	lea    rdx,[rip+0x4aad]        # 0x4176dd
  412c30:	mov    rsi,rax
  412c33:	mov    rcx,rbx
  412c36:	call   0x408138
  412c3b:	lea    rcx,[rip+0xa43e]        # 0x41d080
  412c42:	mov    rdx,rbx
  412c45:	call   0x40a360
  412c4a:	lea    r13,[rsp+0xdf0]
  412c52:	lea    r8,[rsp+0xdc0]
  412c5a:	lea    rdx,[rip+0x3738]        # 0x416399
  412c61:	mov    rbx,rax
  412c64:	mov    rcx,r13
  412c67:	call   0x408138
  412c6c:	lea    rcx,[rip+0xa40d]        # 0x41d080
  412c73:	mov    rdx,r13
  412c76:	call   0x40a360
  412c7b:	lea    r13,[rsp+0xe00]
  412c83:	lea    r8,[rip+0x4a3b]        # 0x4176c5
  412c8a:	mov    rdx,rax
  412c8d:	mov    rcx,r13
  412c90:	call   0x40b010
  412c95:	lea    r15,[rsp+0xe20]
  412c9d:	mov    r8,rbx
  412ca0:	mov    rdx,r13
  412ca3:	mov    rcx,r15
  412ca6:	call   0x40aef0
  412cab:	lea    rbx,[rsp+0xe30]
  412cb3:	lea    r8,[rip+0x4a0b]        # 0x4176c5
  412cba:	mov    rdx,r15
  412cbd:	mov    rcx,rbx
  412cc0:	call   0x40aea0
  412cc5:	lea    r13,[rsp+0xe50]
  412ccd:	mov    r8,rsi
  412cd0:	mov    rdx,rbx
  412cd3:	mov    rcx,r13
  412cd6:	call   0x40aef0
  412cdb:	lea    rbx,[rsp+0xe60]
  412ce3:	lea    r8,[rip+0x49db]        # 0x4176c5
  412cea:	mov    rdx,r13
  412ced:	mov    rcx,rbx
  412cf0:	call   0x40aea0
  412cf5:	lea    rsi,[rsp+0xe70]
  412cfd:	mov    r8,QWORD PTR [rsp+0x70]
  412d02:	mov    rdx,rbx
  412d05:	mov    rcx,rsi
  412d08:	call   0x40aef0
  412d0d:	lea    rbx,[rsp+0xe80]
  412d15:	lea    r8,[rip+0x4c6d]        # 0x417989
  412d1c:	mov    rdx,rsi
  412d1f:	mov    rcx,rbx
  412d22:	call   0x40aea0
  412d27:	lea    rsi,[rsp+0xe90]
  412d2f:	mov    r8,QWORD PTR [rsp+0xa8]
  412d37:	mov    rdx,rbx
  412d3a:	mov    rcx,rsi
  412d3d:	call   0x40aef0
  412d42:	lea    rbx,[rsp+0xea0]
  412d4a:	lea    r8,[rip+0x4974]        # 0x4176c5
  412d51:	mov    rdx,rsi
  412d54:	mov    rcx,rbx
  412d57:	call   0x40aea0
  412d5c:	lea    rsi,[rsp+0xeb0]
  412d64:	mov    r8,QWORD PTR [rsp+0x68]
  412d69:	mov    rdx,rbx
  412d6c:	mov    rcx,rsi
  412d6f:	call   0x40aef0
  412d74:	lea    rbx,[rsp+0xec0]
  412d7c:	lea    r8,[rip+0x4942]        # 0x4176c5
  412d83:	mov    rdx,rsi
  412d86:	mov    rcx,rbx
  412d89:	call   0x40aea0
  412d8e:	lea    rsi,[rsp+0xed0]
  412d96:	mov    r8,QWORD PTR [rsp+0xc8]
  412d9e:	mov    rdx,rbx
  412da1:	mov    rcx,rsi
  412da4:	call   0x40aef0
  412da9:	lea    rbx,[rsp+0xee0]
  412db1:	lea    r8,[rip+0x490d]        # 0x4176c5
  412db8:	mov    rdx,rsi
  412dbb:	mov    rcx,rbx
  412dbe:	call   0x40aea0
  412dc3:	lea    rsi,[rsp+0xef0]
  412dcb:	mov    r8,QWORD PTR [rsp+0xd8]
  412dd3:	mov    rdx,rbx
  412dd6:	mov    rcx,rsi
  412dd9:	call   0x40aef0
  412dde:	lea    rbx,[rsp+0xf00]
  412de6:	lea    r8,[rip+0x48d8]        # 0x4176c5
  412ded:	mov    rdx,rsi
  412df0:	mov    rcx,rbx
  412df3:	call   0x40aea0
  412df8:	lea    rsi,[rsp+0xf20]
  412e00:	mov    r8,rdi
  412e03:	mov    rdx,rbx
  412e06:	mov    rcx,rsi
  412e09:	call   0x40aef0
  412e0e:	lea    rbx,[rsp+0xf30]
  412e16:	lea    r8,[rip+0x4bf2]        # 0x417a0f
  412e1d:	mov    rdx,rsi
  412e20:	mov    rcx,rbx
  412e23:	call   0x40aea0
  412e28:	lea    rax,[rsp+0xf50]
  412e30:	mov    r8,rbp
  412e33:	mov    rdx,rbx
  412e36:	mov    rcx,rax
  412e39:	mov    rdi,rax
  412e3c:	call   0x40aef0
  412e41:	lea    rbx,[rsp+0xf60]
  412e49:	lea    r8,[rip+0x4875]        # 0x4176c5
  412e50:	mov    rdx,rdi
  412e53:	mov    rcx,rbx
  412e56:	call   0x40aea0
  412e5b:	mov    rdi,QWORD PTR [rsp+0x30]
  412e60:	mov    r8,r12
  412e63:	mov    rdx,rbx
  412e66:	mov    rcx,rdi
  412e69:	call   0x40aef0
  412e6e:	mov    rax,QWORD PTR [rsp+0xf60]
  412e76:	lea    rbx,[rsp+0xfa0]
  412e7e:	mov    rdx,rbx
  412e81:	lea    rcx,[rax-0x18]
  412e85:	call   0x408188
  412e8a:	mov    rax,QWORD PTR [rsp+0xf50]
  412e92:	mov    rdx,rbx
  412e95:	lea    rcx,[rax-0x18]
  412e99:	call   0x408188
  412e9e:	mov    rax,QWORD PTR [rsp+0xf30]
  412ea6:	mov    rdx,rbx
  412ea9:	lea    rcx,[rax-0x18]
  412ead:	call   0x408188
  412eb2:	mov    rax,QWORD PTR [rsp+0xf20]
  412eba:	mov    rdx,rbx
  412ebd:	lea    rcx,[rax-0x18]
  412ec1:	call   0x408188
  412ec6:	mov    rax,QWORD PTR [rsp+0xf00]
  412ece:	mov    rdx,rbx
  412ed1:	lea    rcx,[rax-0x18]
  412ed5:	call   0x408188
  412eda:	mov    rax,QWORD PTR [rsp+0xef0]
  412ee2:	mov    rdx,rbx
  412ee5:	lea    rcx,[rax-0x18]
  412ee9:	call   0x408188
  412eee:	mov    rax,QWORD PTR [rsp+0xee0]
  412ef6:	mov    rdx,rbx
  412ef9:	lea    rcx,[rax-0x18]
  412efd:	call   0x408188
  412f02:	mov    rax,QWORD PTR [rsp+0xed0]
  412f0a:	mov    rdx,rbx
  412f0d:	lea    rcx,[rax-0x18]
  412f11:	call   0x408188
  412f16:	mov    rax,QWORD PTR [rsp+0xec0]
  412f1e:	mov    rdx,rbx
  412f21:	lea    rcx,[rax-0x18]
  412f25:	call   0x408188
  412f2a:	mov    rax,QWORD PTR [rsp+0xeb0]
  412f32:	mov    rdx,rbx
  412f35:	lea    rcx,[rax-0x18]
  412f39:	call   0x408188
  412f3e:	mov    rax,QWORD PTR [rsp+0xea0]
  412f46:	mov    rdx,rbx
  412f49:	lea    rcx,[rax-0x18]
  412f4d:	call   0x408188
  412f52:	mov    rax,QWORD PTR [rsp+0xe90]
  412f5a:	mov    rdx,rbx
  412f5d:	lea    rcx,[rax-0x18]
  412f61:	call   0x408188
  412f66:	mov    rax,QWORD PTR [rsp+0xe80]
  412f6e:	mov    rdx,rbx
  412f71:	lea    rcx,[rax-0x18]
  412f75:	call   0x408188
  412f7a:	mov    rax,QWORD PTR [rsp+0xe70]
  412f82:	mov    rdx,rbx
  412f85:	lea    rcx,[rax-0x18]
  412f89:	call   0x408188
  412f8e:	mov    rax,QWORD PTR [rsp+0xe60]
  412f96:	mov    rdx,rbx
  412f99:	lea    rcx,[rax-0x18]
  412f9d:	call   0x408188
  412fa2:	mov    rax,QWORD PTR [rsp+0xe50]
  412faa:	mov    rdx,rbx
  412fad:	lea    rcx,[rax-0x18]
  412fb1:	call   0x408188
  412fb6:	mov    rax,QWORD PTR [rsp+0xe30]
  412fbe:	mov    rdx,rbx
  412fc1:	lea    rcx,[rax-0x18]
  412fc5:	call   0x408188
  412fca:	mov    rax,QWORD PTR [rsp+0xe20]
  412fd2:	mov    rdx,rbx
  412fd5:	lea    rcx,[rax-0x18]
  412fd9:	call   0x408188
  412fde:	mov    rax,QWORD PTR [rsp+0xe00]
  412fe6:	mov    rdx,rbx
  412fe9:	lea    rcx,[rax-0x18]
  412fed:	call   0x408188
  412ff2:	mov    rax,QWORD PTR [rsp+0xdf0]
  412ffa:	mov    rdx,rbx
  412ffd:	lea    rcx,[rax-0x18]
  413001:	call   0x408188
  413006:	mov    rax,QWORD PTR [rsp+0xe10]
  41300e:	mov    rdx,rbx
  413011:	lea    rcx,[rax-0x18]
  413015:	call   0x408188
  41301a:	mov    rax,QWORD PTR [rsp+0xe40]
  413022:	mov    rdx,rbx
  413025:	lea    rcx,[rax-0x18]
  413029:	call   0x408188
  41302e:	mov    rax,QWORD PTR [rsp+0xf10]
  413036:	mov    rdx,rbx
  413039:	lea    rcx,[rax-0x18]
  41303d:	call   0x408188
  413042:	mov    rax,QWORD PTR [rsp+0xf40]
  41304a:	mov    rdx,rbx
  41304d:	lea    rcx,[rax-0x18]
  413051:	call   0x408188
  413056:	mov    rax,QWORD PTR [rsp+0xff0]
  41305e:	mov    rdx,rbx
  413061:	lea    rcx,[rax-0x18]
  413065:	call   0x408188
  41306a:	movzx  ebx,BYTE PTR [rsp+0x78]
  41306f:	mov    rcx,rdi
  413072:	mov    edx,ebx
  413074:	call   0x4018b0
  413079:	mov    ebp,eax
  41307b:	mov    rax,QWORD PTR [rsp+0xfb0]
  413083:	mov    rdx,r14
  413086:	lea    rcx,[rax-0x18]
  41308a:	call   0x408188
  41308f:	jmp    0x4107fc
  413094:	mov    rbx,rax
  413097:	lea    rsi,[rsp+0x106]
  41309f:	jmp    0x410e18
  4130a4:	mov    rbx,rax
  4130a7:	lea    rsi,[rsp+0x106]
  4130af:	jmp    0x410e2c
  4130b4:	mov    rbx,rax
  4130b7:	jmp    0x410dcf
  4130bc:	mov    rbx,rax
  4130bf:	mov    rax,QWORD PTR [rsp+0x370]
  4130c7:	mov    rdx,QWORD PTR [rsp+0x30]
  4130cc:	lea    rcx,[rax-0x18]
  4130d0:	call   0x408188
  4130d5:	jmp    0x411684
  4130da:	mov    rbx,rax
  4130dd:	mov    rax,QWORD PTR [rsp+0x340]
  4130e5:	mov    rdx,QWORD PTR [rsp+0x30]
  4130ea:	lea    rcx,[rax-0x18]
  4130ee:	call   0x408188
  4130f3:	jmp    0x4124d0
  4130f8:	mov    rbx,rax
  4130fb:	mov    rax,QWORD PTR [rsp+0x350]
  413103:	mov    rdx,QWORD PTR [rsp+0x30]
  413108:	lea    rcx,[rax-0x18]
  41310c:	call   0x408188
  413111:	jmp    0x411684
  413116:	jmp    0x4130b4
  413118:	mov    rcx,rax
  41311b:	call   0x408050
  413120:	mov    rcx,r12
  413123:	call   0x408060
  413128:	call   0x408028
  41312d:	jmp    0x4123b6
  413132:	mov    rbx,rax
  413135:	mov    rax,QWORD PTR [rsp+0x1f0]
  41313d:	mov    rdx,r14
  413140:	lea    rcx,[rax-0x18]
  413144:	call   0x408188
  413149:	jmp    0x410de8
  41314e:	mov    rbx,rax
  413151:	call   0x408048
  413156:	jmp    0x411684
  41315b:	mov    rbx,rax
  41315e:	jmp    0x410de8
  413163:	mov    QWORD PTR [rsp+0x30],rax
  413168:	mov    rax,QWORD PTR [rsp+0x4d0]
  413170:	mov    rdx,r14
  413173:	lea    rcx,[rax-0x18]
  413177:	call   0x408188
  41317c:	mov    rax,QWORD PTR [rsp+0x30]
  413181:	jmp    0x4130b4
  413186:	mov    rbx,rax
  413189:	mov    rax,QWORD PTR [rsp+0x2b0]
  413191:	mov    rdx,QWORD PTR [rsp+0x30]
  413196:	mov    esi,0x1
  41319b:	lea    rcx,[rax-0x18]
  41319f:	call   0x408188
  4131a4:	mov    rax,QWORD PTR [rsp+0x2a0]
  4131ac:	mov    rdx,QWORD PTR [rsp+0x30]
  4131b1:	lea    rcx,[rax-0x18]
  4131b5:	call   0x408188
  4131ba:	test   sil,sil
  4131bd:	je     0x411684
  4131c3:	mov    rax,QWORD PTR [rsp+0x290]
  4131cb:	mov    rdx,QWORD PTR [rsp+0x30]
  4131d0:	lea    rcx,[rax-0x18]
  4131d4:	call   0x408188
  4131d9:	jmp    0x411684
  4131de:	mov    rbx,rax
  4131e1:	jmp    0x410db9
  4131e6:	mov    rbx,rax
  4131e9:	mov    rax,QWORD PTR [rsp+0x520]
  4131f1:	mov    rdx,r14
  4131f4:	lea    rcx,[rax-0x18]
  4131f8:	call   0x408188
  4131fd:	jmp    0x410db9
  413202:	mov    rbx,rax
  413205:	jmp    0x410da6
  41320a:	mov    rbx,rax
  41320d:	jmp    0x410d90
  413212:	mov    rbx,rax
  413215:	jmp    0x411cb4
  41321a:	mov    rbx,rax
  41321d:	mov    rax,QWORD PTR [rsp+0x380]
  413225:	mov    rdx,QWORD PTR [rsp+0x30]
  41322a:	lea    rcx,[rax-0x18]
  41322e:	call   0x408188
  413233:	jmp    0x411684
  413238:	mov    rbx,rax
  41323b:	mov    rax,QWORD PTR [rsp+0x360]
  413243:	mov    rdx,QWORD PTR [rsp+0x30]
  413248:	lea    rcx,[rax-0x18]
  41324c:	call   0x408188
  413251:	jmp    0x411684
  413256:	jmp    0x4130b4
  41325b:	mov    rbx,rax
  41325e:	mov    rax,QWORD PTR [rsp+0x530]
  413266:	mov    rdx,r14
  413269:	lea    rcx,[rax-0x18]
  41326d:	call   0x408188
  413272:	mov    rax,QWORD PTR [rsp+0x550]
  41327a:	mov    rdx,r14
  41327d:	lea    rcx,[rax-0x18]
  413281:	call   0x408188
  413286:	mov    rax,QWORD PTR [rsp+0x580]
  41328e:	mov    rdx,r14
  413291:	lea    rcx,[rax-0x18]
  413295:	call   0x408188
  41329a:	jmp    0x411ca0
  41329f:	mov    rbx,rax
  4132a2:	mov    rax,QWORD PTR [rsp+0x540]
  4132aa:	mov    rdx,r14
  4132ad:	lea    rcx,[rax-0x18]
  4132b1:	call   0x408188
  4132b6:	jmp    0x41325e
  4132b8:	jmp    0x41329f
  4132ba:	mov    rbx,rax
  4132bd:	mov    rax,QWORD PTR [rsp+0x560]
  4132c5:	mov    rdx,r14
  4132c8:	lea    rcx,[rax-0x18]
  4132cc:	call   0x408188
  4132d1:	jmp    0x4132a2
  4132d3:	mov    rbx,rax
  4132d6:	mov    rax,QWORD PTR [rsp+0x570]
  4132de:	mov    rdx,r14
  4132e1:	lea    rcx,[rax-0x18]
  4132e5:	call   0x408188
  4132ea:	jmp    0x4132bd
  4132ec:	mov    rbx,rax
  4132ef:	mov    rax,QWORD PTR [rsp+0x590]
  4132f7:	mov    rdx,r14
  4132fa:	lea    rcx,[rax-0x18]
  4132fe:	call   0x408188
  413303:	jmp    0x4132d6
  413305:	mov    rbx,rax
  413308:	mov    rax,QWORD PTR [rsp+0x5a0]
  413310:	mov    rdx,r14
  413313:	lea    rcx,[rax-0x18]
  413317:	call   0x408188
  41331c:	jmp    0x4132ef
  41331e:	mov    rbx,rax
  413321:	mov    rax,QWORD PTR [rsp+0x5c0]
  413329:	mov    rdx,r14
  41332c:	lea    rcx,[rax-0x18]
  413330:	call   0x408188
  413335:	jmp    0x413308
  413337:	mov    rbx,rax
  41333a:	mov    rax,QWORD PTR [rsp+0x5d0]
  413342:	mov    rdx,r14
  413345:	lea    rcx,[rax-0x18]
  413349:	call   0x408188
  41334e:	jmp    0x413321
  413350:	mov    rbx,rax
  413353:	mov    rax,QWORD PTR [rsp+0x5e0]
  41335b:	mov    rdx,r14
  41335e:	lea    rcx,[rax-0x18]
  413362:	call   0x408188
  413367:	jmp    0x41333a
  413369:	mov    rbx,rax
  41336c:	mov    rax,QWORD PTR [rsp+0x5f0]
  413374:	mov    rdx,r14
  413377:	lea    rcx,[rax-0x18]
  41337b:	call   0x408188
  413380:	jmp    0x413353
  413382:	mov    rbx,rax
  413385:	mov    rax,QWORD PTR [rsp+0x600]
  41338d:	mov    rdx,r14
  413390:	lea    rcx,[rax-0x18]
  413394:	call   0x408188
  413399:	jmp    0x41336c
  41339b:	mov    rbx,rax
  41339e:	mov    rax,QWORD PTR [rsp+0x610]
  4133a6:	mov    rdx,r14
  4133a9:	lea    rcx,[rax-0x18]
  4133ad:	call   0x408188
  4133b2:	jmp    0x413385
  4133b4:	mov    rbx,rax
  4133b7:	jmp    0x410d7d
  4133bc:	mov    rbx,rax
  4133bf:	mov    rax,QWORD PTR [rip+0x5c9a]        # 0x419060
  4133c6:	lea    rcx,[r14+0xd0]
  4133cd:	add    rax,0x10
  4133d1:	mov    QWORD PTR [rsp+0x10c0],rax
  4133d9:	call   0x4080c0
  4133de:	jmp    0x410d7d
  4133e3:	mov    rdx,QWORD PTR [rbx-0x18]
  4133e7:	mov    QWORD PTR [rsp+0xff0],rbx
  4133ef:	mov    rbx,rax
  4133f2:	mov    QWORD PTR [rsp+rdx*1+0xff0],rsi
  4133fa:	jmp    0x4133bf
  4133fc:	mov    rbx,rax
  4133ff:	lea    rsi,[rsp+0x106]
  413407:	jmp    0x410e54
  41340c:	mov    rbx,rax
  41340f:	lea    rsi,[rsp+0x106]
  413417:	jmp    0x410e68
  41341c:	mov    rbx,rax
  41341f:	lea    rsi,[rsp+0x106]
  413427:	jmp    0x410e7c
  41342c:	mov    rbx,rax
  41342f:	lea    rsi,[rsp+0x106]
  413437:	jmp    0x410e90
  41343c:	lea    rcx,[r14+0x8]
  413440:	mov    rdi,rax
  413443:	call   0x4080f8
  413448:	mov    rax,rdi
  41344b:	jmp    0x4133e3
  41344d:	mov    rbx,rax
  413450:	mov    rax,QWORD PTR [rsp+0x630]
  413458:	mov    rdx,QWORD PTR [rsp+0x30]
  41345d:	lea    rcx,[rax-0x18]
  413461:	call   0x408188
  413466:	jmp    0x410d75
  41346b:	mov    rbx,rax
  41346e:	jmp    0x413286
  413473:	mov    rbx,rax
  413476:	jmp    0x413272
  41347b:	mov    rbx,rax
  41347e:	xor    r12d,r12d
  413481:	mov    ebp,0x1
  413486:	mov    edi,0x1
  41348b:	mov    esi,0x1
  413490:	jmp    0x412400
  413495:	mov    rbx,rax
  413498:	mov    rax,QWORD PTR [rsp+0x780]
  4134a0:	mov    rdx,r14
  4134a3:	lea    rcx,[rax-0x18]
  4134a7:	call   0x408188
  4134ac:	jmp    0x4117ea
  4134b1:	mov    rbx,rax
  4134b4:	jmp    0x4117ea
  4134b9:	mov    rbx,rax
  4134bc:	mov    rax,QWORD PTR [rsp+0x7a0]
  4134c4:	mov    rdx,r14
  4134c7:	lea    rsi,[rsp+0xf80]
  4134cf:	lea    rcx,[rax-0x18]
  4134d3:	call   0x408188
  4134d8:	jmp    0x4117d6
  4134dd:	jmp    0x4134b9
  4134df:	jmp    0x411c55
  4134e4:	mov    rbx,rax
  4134e7:	mov    rax,QWORD PTR [rsp+0x510]
  4134ef:	mov    rdx,r14
  4134f2:	lea    rcx,[rax-0x18]
  4134f6:	call   0x408188
  4134fb:	jmp    0x4118e4
  413500:	lea    r12,[rsp+0x280]
  413508:	lea    rdx,[rip+0x4245]        # 0x417754
  41350f:	mov    r8,r15
  413512:	mov    rcx,r12
  413515:	call   0x408138
  41351a:	mov    rdx,r12
  41351d:	mov    rcx,r14
  413520:	call   0x40a270
  413525:	mov    rdx,QWORD PTR [rsp+0x280]
  41352d:	cmp    DWORD PTR [rsi],0x0
  413530:	mov    r12d,eax
  413533:	lea    rcx,[rdx-0x18]
  413537:	lea    r8,[rcx+0x10]
  41353b:	jne    0x413568
  41353d:	mov    eax,DWORD PTR [rdx-0x8]
  413540:	lea    r8d,[rax-0x1]
  413544:	test   eax,eax
  413546:	mov    DWORD PTR [rdx-0x8],r8d
  41354a:	jle    0x413576
  41354c:	mov    eax,0x1
  413551:	mov    r9d,0x1
  413557:	mov    r13d,0x1
  41355d:	mov    r8d,0x1
  413563:	jmp    0x40e3a0
  413568:	mov    eax,0xffffffff
  41356d:	lock xadd DWORD PTR [r8],eax
  413572:	test   eax,eax
  413574:	jg     0x41354c
  413576:	mov    rdx,QWORD PTR [rsp+0x30]
  41357b:	call   0x408190
  413580:	jmp    0x41354c
  413582:	mov    rbx,rax
  413585:	mov    rax,QWORD PTR [rsp+0x270]
  41358d:	mov    rdx,QWORD PTR [rsp+0x30]
  413592:	mov    r12d,0x1
  413598:	mov    ebp,0x1
  41359d:	mov    edi,0x1
  4135a2:	mov    esi,0x1
  4135a7:	lea    rcx,[rax-0x18]
  4135ab:	call   0x408188
  4135b0:	mov    rax,QWORD PTR [rsp+0x260]
  4135b8:	mov    rdx,QWORD PTR [rsp+0x30]
  4135bd:	lea    rcx,[rax-0x18]
  4135c1:	call   0x408188
  4135c6:	jmp    0x412400
  4135cb:	mov    rbx,rax
  4135ce:	mov    r12d,0x1
  4135d4:	mov    ebp,0x1
  4135d9:	mov    edi,0x1
  4135de:	mov    esi,0x1
  4135e3:	jmp    0x4135b0
  4135e5:	mov    rbx,rax
  4135e8:	mov    rax,QWORD PTR [rsp+0x450]
  4135f0:	mov    rdx,QWORD PTR [rsp+0x30]
  4135f5:	lea    rcx,[rax-0x18]
  4135f9:	call   0x408188
  4135fe:	jmp    0x411684
  413603:	lea    rdx,[rip+0x2d66]        # 0x416370
  41360a:	mov    rcx,r14
  41360d:	call   0x4081c8
  413612:	test   eax,eax
  413614:	jne    0x4136a0
  41361a:	mov    BYTE PTR [rsp+0xe5],0x1
  413622:	jmp    0x40b388
  413627:	lea    r12,[rsp+0x420]
  41362f:	lea    r8,[rsp+0xfd]
  413637:	lea    rdx,[rip+0x41d4]        # 0x417812
  41363e:	mov    rcx,r12
  413641:	call   0x408138
  413646:	mov    rdx,r12
  413649:	mov    rcx,r14
  41364c:	call   0x40a240
  413651:	test   al,al
  413653:	mov    r12d,eax
  413656:	je     0x41371c
  41365c:	mov    rax,QWORD PTR [rsp+0x420]
  413664:	mov    rdx,QWORD PTR [rsp+0x30]
  413669:	lea    rcx,[rax-0x18]
  41366d:	call   0x408188
  413672:	jmp    0x411d19
  413677:	mov    rbx,rax
  41367a:	xor    esi,esi
  41367c:	test   sil,sil
  41367f:	je     0x411684
  413685:	mov    rax,QWORD PTR [rsp+0x410]
  41368d:	mov    rdx,QWORD PTR [rsp+0x30]
  413692:	lea    rcx,[rax-0x18]
  413696:	call   0x408188
  41369b:	jmp    0x411684
  4136a0:	lea    rdx,[rip+0x4171]        # 0x417818
  4136a7:	mov    rcx,r14
  4136aa:	call   0x4081c8
  4136af:	test   eax,eax
  4136b1:	je     0x41361a
  4136b7:	lea    rdx,[rip+0x4162]        # 0x417820
  4136be:	mov    rcx,r14
  4136c1:	call   0x4081c8
  4136c6:	test   eax,eax
  4136c8:	je     0x41361a
  4136ce:	lea    rdx,[rip+0x440e]        # 0x417ae3
  4136d5:	mov    rcx,r14
  4136d8:	call   0x4081c8
  4136dd:	test   eax,eax
  4136df:	jne    0x413810
  4136e5:	mov    eax,DWORD PTR [rsp+0x1220]
  4136ec:	sub    eax,0x1
  4136ef:	cmp    eax,ebx
  4136f1:	jle    0x4137f8
  4136f7:	mov    rdx,QWORD PTR [rdi+rbp*1+0x8]
  4136fc:	mov    rcx,r14
  4136ff:	add    ebx,0x1
  413702:	call   0x408160
  413707:	mov    rcx,QWORD PTR [rsp+0xc0]
  41370f:	mov    rdx,r14
  413712:	call   0x408158
  413717:	jmp    0x40b388
  41371c:	lea    r12,[rsp+0x430]
  413724:	lea    r8,[rsp+0xfe]
  41372c:	lea    rdx,[rip+0x2b24]        # 0x416257
  413733:	mov    rcx,r12
  413736:	call   0x408138
  41373b:	mov    rdx,r12
  41373e:	mov    rcx,r14
  413741:	call   0x40a240
  413746:	test   al,al
  413748:	mov    r12d,eax
  41374b:	je     0x413775
  41374d:	mov    rax,QWORD PTR [rsp+0x430]
  413755:	mov    rdx,QWORD PTR [rsp+0x30]
  41375a:	lea    rcx,[rax-0x18]
  41375e:	call   0x408188
  413763:	jmp    0x41365c
  413768:	mov    rbx,rax
  41376b:	mov    esi,0x1
  413770:	jmp    0x41367c
  413775:	lea    r12,[rsp+0x440]
  41377d:	lea    rdx,[rip+0x4091]        # 0x417815
  413784:	mov    r8,r15
  413787:	mov    rcx,r12
  41378a:	call   0x408138
  41378f:	mov    rdx,r12
  413792:	mov    rcx,r14
  413795:	call   0x40a240
  41379a:	mov    r12d,eax
  41379d:	mov    rax,QWORD PTR [rsp+0x440]
  4137a5:	mov    rdx,QWORD PTR [rsp+0x30]
  4137aa:	lea    rcx,[rax-0x18]
  4137ae:	call   0x408188
  4137b3:	jmp    0x41374d
  4137b5:	mov    rbx,rax
  4137b8:	mov    esi,0x1
  4137bd:	mov    rax,QWORD PTR [rsp+0x420]
  4137c5:	mov    rdx,QWORD PTR [rsp+0x30]
  4137ca:	lea    rcx,[rax-0x18]
  4137ce:	call   0x408188
  4137d3:	jmp    0x41367c
  4137d8:	mov    rbx,rax
  4137db:	mov    rax,QWORD PTR [rsp+0x430]
  4137e3:	mov    rdx,QWORD PTR [rsp+0x30]
  4137e8:	mov    esi,0x1
  4137ed:	lea    rcx,[rax-0x18]
  4137f1:	call   0x408188
  4137f6:	jmp    0x4137bd
  4137f8:	mov    rcx,QWORD PTR [rip+0x5801]        # 0x419000
  4137ff:	lea    rdx,[rip+0x403a]        # 0x417840
  413806:	call   0x408068
  41380b:	jmp    0x411541
  413810:	lea    rdx,[rip+0x4012]        # 0x417829
  413817:	mov    rcx,r14
  41381a:	call   0x4081c8
  41381f:	test   eax,eax
  413821:	je     0x4136e5
  413827:	lea    rdx,[rip+0x4003]        # 0x417831
  41382e:	mov    rcx,r14
  413831:	call   0x4081c8
  413836:	test   eax,eax
  413838:	je     0x4136e5
  41383e:	lea    rdx,[rip+0x42a1]        # 0x417ae6
  413845:	mov    rcx,r14
  413848:	call   0x4081c8
  41384d:	test   eax,eax
  41384f:	jne    0x413c60
  413855:	mov    BYTE PTR [rsp+0x78],0x1
  41385a:	jmp    0x40b388
  41385f:	mov    rbx,rax
  413862:	mov    esi,0x1
  413867:	jmp    0x4131ba
  41386c:	lea    rbx,[rsp+0xfa0]
  413874:	mov    rsi,rax
  413877:	mov    rax,QWORD PTR [rsp+0xeb0]
  41387f:	mov    rdx,rbx
  413882:	lea    rcx,[rax-0x18]
  413886:	call   0x408188
  41388b:	mov    rax,QWORD PTR [rsp+0xea0]
  413893:	mov    rdx,rbx
  413896:	lea    rcx,[rax-0x18]
  41389a:	call   0x408188
  41389f:	mov    rax,QWORD PTR [rsp+0xe90]
  4138a7:	mov    rdx,rbx
  4138aa:	lea    rcx,[rax-0x18]
  4138ae:	call   0x408188
  4138b3:	mov    rax,QWORD PTR [rsp+0xe80]
  4138bb:	mov    rdx,rbx
  4138be:	lea    rcx,[rax-0x18]
  4138c2:	call   0x408188
  4138c7:	mov    rax,QWORD PTR [rsp+0xe70]
  4138cf:	mov    rdx,rbx
  4138d2:	lea    rcx,[rax-0x18]
  4138d6:	call   0x408188
  4138db:	mov    rax,QWORD PTR [rsp+0xe60]
  4138e3:	mov    rdx,rbx
  4138e6:	lea    rcx,[rax-0x18]
  4138ea:	call   0x408188
  4138ef:	mov    rax,QWORD PTR [rsp+0xe50]
  4138f7:	mov    rdx,rbx
  4138fa:	lea    rcx,[rax-0x18]
  4138fe:	call   0x408188
  413903:	mov    rax,QWORD PTR [rsp+0xe30]
  41390b:	mov    rdx,rbx
  41390e:	lea    rcx,[rax-0x18]
  413912:	call   0x408188
  413917:	mov    rax,QWORD PTR [rsp+0xe20]
  41391f:	mov    rdx,rbx
  413922:	lea    rcx,[rax-0x18]
  413926:	call   0x408188
  41392b:	mov    rax,QWORD PTR [rsp+0xe00]
  413933:	mov    rdx,rbx
  413936:	lea    rcx,[rax-0x18]
  41393a:	call   0x408188
  41393f:	mov    rax,QWORD PTR [rsp+0xdf0]
  413947:	mov    rdx,rbx
  41394a:	lea    rcx,[rax-0x18]
  41394e:	call   0x408188
  413953:	mov    rax,QWORD PTR [rsp+0xe10]
  41395b:	mov    rdx,rbx
  41395e:	lea    rcx,[rax-0x18]
  413962:	call   0x408188
  413967:	mov    rax,QWORD PTR [rsp+0xe40]
  41396f:	mov    rdx,rbx
  413972:	lea    rcx,[rax-0x18]
  413976:	call   0x408188
  41397b:	mov    rax,QWORD PTR [rsp+0xf10]
  413983:	mov    rdx,rbx
  413986:	lea    rcx,[rax-0x18]
  41398a:	call   0x408188
  41398f:	mov    rax,QWORD PTR [rsp+0xf40]
  413997:	mov    rdx,rbx
  41399a:	lea    rcx,[rax-0x18]
  41399e:	call   0x408188
  4139a3:	mov    rax,QWORD PTR [rsp+0xff0]
  4139ab:	mov    rdx,rbx
  4139ae:	mov    rbx,rsi
  4139b1:	lea    rcx,[rax-0x18]
  4139b5:	call   0x408188
  4139ba:	jmp    0x410dcf
  4139bf:	mov    rsi,rax
  4139c2:	lea    rbx,[rsp+0xfa0]
  4139ca:	jmp    0x41388b
  4139cf:	mov    rsi,rax
  4139d2:	lea    rbx,[rsp+0xfa0]
  4139da:	jmp    0x41389f
  4139df:	mov    rsi,rax
  4139e2:	lea    rbx,[rsp+0xfa0]
  4139ea:	jmp    0x4138b3
  4139ef:	mov    rsi,rax
  4139f2:	lea    rbx,[rsp+0xfa0]
  4139fa:	jmp    0x4138c7
  4139ff:	mov    rsi,rax
  413a02:	lea    rbx,[rsp+0xfa0]
  413a0a:	jmp    0x4138db
  413a0f:	mov    rsi,rax
  413a12:	lea    rbx,[rsp+0xfa0]
  413a1a:	jmp    0x4138ef
  413a1f:	mov    rsi,rax
  413a22:	lea    rbx,[rsp+0xfa0]
  413a2a:	jmp    0x413903
  413a2f:	mov    rsi,rax
  413a32:	lea    rbx,[rsp+0xfa0]
  413a3a:	jmp    0x413917
  413a3f:	mov    rsi,rax
  413a42:	lea    rbx,[rsp+0xfa0]
  413a4a:	jmp    0x41392b
  413a4f:	mov    rsi,rax
  413a52:	lea    rbx,[rsp+0xfa0]
  413a5a:	jmp    0x41393f
  413a5f:	mov    rsi,rax
  413a62:	lea    rbx,[rsp+0xfa0]
  413a6a:	jmp    0x413953
  413a6f:	mov    rsi,rax
  413a72:	lea    rbx,[rsp+0xfa0]
  413a7a:	jmp    0x413967
  413a7f:	mov    rsi,rax
  413a82:	lea    rbx,[rsp+0xfa0]
  413a8a:	jmp    0x41397b
  413a8f:	mov    rsi,rax
  413a92:	lea    rbx,[rsp+0xfa0]
  413a9a:	jmp    0x41398f
  413a9f:	mov    rsi,rax
  413aa2:	lea    rbx,[rsp+0xfa0]
  413aaa:	jmp    0x4139a3
  413aaf:	lea    rbx,[rsp+0xfa0]
  413ab7:	mov    rsi,rax
  413aba:	mov    rax,QWORD PTR [rsp+0xf50]
  413ac2:	mov    rdx,rbx
  413ac5:	lea    rcx,[rax-0x18]
  413ac9:	call   0x408188
  413ace:	mov    rax,QWORD PTR [rsp+0xf30]
  413ad6:	mov    rdx,rbx
  413ad9:	lea    rcx,[rax-0x18]
  413add:	call   0x408188
  413ae2:	mov    rax,QWORD PTR [rsp+0xf20]
  413aea:	mov    rdx,rbx
  413aed:	lea    rcx,[rax-0x18]
  413af1:	call   0x408188
  413af6:	mov    rax,QWORD PTR [rsp+0xf00]
  413afe:	mov    rdx,rbx
  413b01:	lea    rcx,[rax-0x18]
  413b05:	call   0x408188
  413b0a:	mov    rax,QWORD PTR [rsp+0xef0]
  413b12:	mov    rdx,rbx
  413b15:	lea    rcx,[rax-0x18]
  413b19:	call   0x408188
  413b1e:	mov    rax,QWORD PTR [rsp+0xee0]
  413b26:	mov    rdx,rbx
  413b29:	lea    rcx,[rax-0x18]
  413b2d:	call   0x408188
  413b32:	mov    rax,QWORD PTR [rsp+0xed0]
  413b3a:	mov    rdx,rbx
  413b3d:	lea    rcx,[rax-0x18]
  413b41:	call   0x408188
  413b46:	mov    rax,QWORD PTR [rsp+0xec0]
  413b4e:	mov    rdx,rbx
  413b51:	lea    rcx,[rax-0x18]
  413b55:	call   0x408188
  413b5a:	jmp    0x413877
  413b5f:	mov    rsi,rax
  413b62:	lea    rbx,[rsp+0xfa0]
  413b6a:	jmp    0x413ace
  413b6f:	mov    rsi,rax
  413b72:	lea    rbx,[rsp+0xfa0]
  413b7a:	jmp    0x413ae2
  413b7f:	mov    rsi,rax
  413b82:	lea    rbx,[rsp+0xfa0]
  413b8a:	jmp    0x413af6
  413b8f:	mov    rsi,rax
  413b92:	lea    rbx,[rsp+0xfa0]
  413b9a:	jmp    0x413b0a
  413b9f:	mov    rsi,rax
  413ba2:	lea    rbx,[rsp+0xfa0]
  413baa:	jmp    0x413b1e
  413baf:	mov    rsi,rax
  413bb2:	lea    rbx,[rsp+0xfa0]
  413bba:	jmp    0x413b32
  413bbf:	mov    rsi,rax
  413bc2:	lea    rbx,[rsp+0xfa0]
  413bca:	jmp    0x413b46
  413bcf:	mov    rbx,rax
  413bd2:	lea    rsi,[rsp+0x106]
  413bda:	jmp    0x410e40
  413bdf:	mov    rbx,rax
  413be2:	mov    esi,0x1
  413be7:	jmp    0x4131a4
  413bec:	mov    rbx,rax
  413bef:	mov    rax,QWORD PTR [rsp+0xfb0]
  413bf7:	mov    rdx,r14
  413bfa:	lea    rcx,[rax-0x18]
  413bfe:	call   0x408188
  413c03:	jmp    0x410dcf
  413c08:	mov    rsi,rax
  413c0b:	mov    rax,QWORD PTR [rsp+0xf60]
  413c13:	lea    rbx,[rsp+0xfa0]
  413c1b:	mov    rdx,rbx
  413c1e:	lea    rcx,[rax-0x18]
  413c22:	call   0x408188
  413c27:	jmp    0x413aba
  413c2c:	mov    rcx,rax
  413c2f:	call   0x408050
  413c34:	mov    rcx,r12
  413c37:	call   0x408060
  413c3c:	call   0x408028
  413c41:	mov    rbx,rax
  413c44:	jmp    0x412504
  413c49:	mov    rbx,rax
  413c4c:	call   0x408048
  413c51:	jmp    0x411684
  413c56:	mov    rbx,rax
  413c59:	xor    esi,esi
  413c5b:	jmp    0x4131ba
  413c60:	lea    rdx,[rip+0x3bfc]        # 0x417863
  413c67:	mov    rcx,r14
  413c6a:	call   0x4081c8
  413c6f:	test   eax,eax
  413c71:	je     0x413855
  413c77:	lea    rdx,[rip+0x3bef]        # 0x41786d
  413c7e:	mov    rcx,r14
  413c81:	call   0x4081c8
  413c86:	test   eax,eax
  413c88:	je     0x413855
  413c8e:	lea    rdx,[rip+0x3e54]        # 0x417ae9
  413c95:	mov    rcx,r14
  413c98:	call   0x4081c8
  413c9d:	test   eax,eax
  413c9f:	jne    0x413cc7
  413ca1:	mov    eax,DWORD PTR [rsp+0x1220]
  413ca8:	sub    eax,0x1
  413cab:	cmp    eax,ebx
  413cad:	jg     0x413d17
  413caf:	mov    rcx,QWORD PTR [rip+0x534a]        # 0x419000
  413cb6:	lea    rdx,[rip+0x3bd3]        # 0x417890
  413cbd:	call   0x408068
  413cc2:	jmp    0x411541
  413cc7:	lea    rdx,[rip+0x3bac]        # 0x41787a
  413cce:	mov    rcx,r14
  413cd1:	call   0x4081c8
  413cd6:	test   eax,eax
  413cd8:	je     0x413ca1
  413cda:	lea    rdx,[rip+0x3ba0]        # 0x417881
  413ce1:	mov    rcx,r14
  413ce4:	call   0x4081c8
  413ce9:	test   eax,eax
  413ceb:	je     0x413ca1
  413ced:	lea    rdx,[rip+0x3df8]        # 0x417aec
  413cf4:	mov    rcx,r14
  413cf7:	call   0x4081c8
  413cfc:	test   eax,eax
  413cfe:	jne    0x413d67
  413d00:	cmp    BYTE PTR [rsp+0xe7],0x0
  413d08:	jne    0x413d4f
  413d0a:	mov    BYTE PTR [rsp+0xe6],0x1
  413d12:	jmp    0x40b388
  413d17:	lea    eax,[rbx+0x1]
  413d1a:	mov    rcx,r14
  413d1d:	cdqe   
  413d1f:	mov    rdx,QWORD PTR [rdi+rax*8]
  413d23:	call   0x408160
  413d28:	lea    rcx,[rip+0x9351]        # 0x41d080
  413d2f:	mov    rdx,r14
  413d32:	call   0x40a470
  413d37:	mov    rdx,QWORD PTR [rax]
  413d3a:	mov    rcx,QWORD PTR [rip+0x52cf]        # 0x419010
  413d41:	mov    r8,QWORD PTR [rdx-0x18]
  413d45:	call   0x4080a8
  413d4a:	jmp    0x40ed36
  413d4f:	mov    rcx,QWORD PTR [rip+0x52aa]        # 0x419000
  413d56:	lea    rdx,[rip+0x3b6b]        # 0x4178c8
  413d5d:	call   0x408068
  413d62:	jmp    0x411541
  413d67:	lea    rdx,[rip+0x3b47]        # 0x4178b5
  413d6e:	mov    rcx,r14
  413d71:	call   0x4081c8
  413d76:	test   eax,eax
  413d78:	je     0x413d00
  413d7a:	lea    rdx,[rip+0x3b3b]        # 0x4178bc
  413d81:	mov    rcx,r14
  413d84:	call   0x4081c8
  413d89:	test   eax,eax
  413d8b:	je     0x413d00
  413d91:	lea    rdx,[rip+0x3d57]        # 0x417aef
  413d98:	mov    rcx,r14
  413d9b:	call   0x4081c8
  413da0:	test   eax,eax
  413da2:	jne    0x413db1
  413da4:	mov    BYTE PTR [rsp+0x98],0x0
  413dac:	jmp    0x40b388
  413db1:	lea    rdx,[rip+0x3b3f]        # 0x4178f7
  413db8:	mov    rcx,r14
  413dbb:	call   0x4081c8
  413dc0:	test   eax,eax
  413dc2:	je     0x413da4
  413dc4:	lea    rdx,[rip+0x3b35]        # 0x417900
  413dcb:	mov    rcx,r14
  413dce:	call   0x4081c8
  413dd3:	test   eax,eax
  413dd5:	je     0x413da4
  413dd7:	lea    rdx,[rip+0x3b84]        # 0x417962
  413dde:	mov    rcx,r14
  413de1:	call   0x4081c8
  413de6:	test   eax,eax
  413de8:	jne    0x413edc
  413dee:	lea    rbp,[rsp+0x460]
  413df6:	lea    rdx,[rip+0x38d5]        # 0x4176d2
  413dfd:	mov    r8,r15
  413e00:	mov    rcx,rbp
  413e03:	call   0x408138
  413e08:	lea    rcx,[rip+0x9271]        # 0x41d080
  413e0f:	mov    rdx,rbp
  413e12:	call   0x40a360
  413e17:	lea    rdx,[rip+0x3aec]        # 0x41790a
  413e1e:	mov    rcx,rax
  413e21:	call   0x408178
  413e26:	mov    rax,QWORD PTR [rsp+0x460]
  413e2e:	mov    r13,QWORD PTR [rsp+0x30]
  413e33:	lea    rbp,[rsp+0x470]
  413e3b:	lea    rcx,[rax-0x18]
  413e3f:	mov    rdx,r13
  413e42:	call   0x408188
  413e47:	lea    rdx,[rip+0x388f]        # 0x4176dd
  413e4e:	mov    r8,r15
  413e51:	mov    rcx,rbp
  413e54:	call   0x408138
  413e59:	lea    rcx,[rip+0x9220]        # 0x41d080
  413e60:	mov    rdx,rbp
  413e63:	call   0x40a360
  413e68:	lea    rdx,[rip+0x3a9b]        # 0x41790a
  413e6f:	mov    rcx,rax
  413e72:	call   0x408178
  413e77:	mov    rax,QWORD PTR [rsp+0x470]
  413e7f:	mov    rdx,r13
  413e82:	lea    rbp,[rsp+0x480]
  413e8a:	lea    rcx,[rax-0x18]
  413e8e:	call   0x408188
  413e93:	lea    rdx,[rip+0x382d]        # 0x4176c7
  413e9a:	mov    r8,r15
  413e9d:	mov    rcx,rbp
  413ea0:	call   0x408138
  413ea5:	lea    rcx,[rip+0x91d4]        # 0x41d080
  413eac:	mov    rdx,rbp
  413eaf:	call   0x40a360
  413eb4:	lea    rdx,[rip+0x3a4f]        # 0x41790a
  413ebb:	mov    rcx,rax
  413ebe:	call   0x408178
  413ec3:	mov    rax,QWORD PTR [rsp+0x480]
  413ecb:	mov    rdx,r13
  413ece:	lea    rcx,[rax-0x18]
  413ed2:	call   0x408188
  413ed7:	jmp    0x40b388
  413edc:	lea    rdx,[rip+0x3a2b]        # 0x41790e
  413ee3:	mov    rcx,r14
  413ee6:	call   0x4081c8
  413eeb:	test   eax,eax
  413eed:	jne    0x413f1a
  413eef:	mov    BYTE PTR [rsp+0xe4],0x1
  413ef7:	jmp    0x40b388
  413efc:	mov    rbx,rax
  413eff:	mov    rax,QWORD PTR [rsp+0x480]
  413f07:	mov    rdx,QWORD PTR [rsp+0x30]
  413f0c:	lea    rcx,[rax-0x18]
  413f10:	call   0x408188
  413f15:	jmp    0x411684
  413f1a:	lea    rdx,[rip+0x39ff]        # 0x417920
  413f21:	mov    rcx,r14
  413f24:	call   0x4081c8
  413f29:	test   eax,eax
  413f2b:	je     0x413eef
  413f2d:	lea    rdx,[rip+0x3bbe]        # 0x417af2
  413f34:	mov    rcx,r14
  413f37:	call   0x4081c8
  413f3c:	test   eax,eax
  413f3e:	jne    0x413fa6
  413f40:	mov    rcx,QWORD PTR [rsp+0x58]
  413f45:	lea    rdx,[rip+0x3bab]        # 0x417af7
  413f4c:	call   0x408178
  413f51:	mov    rcx,QWORD PTR [rsp+0xd0]
  413f59:	lea    rdx,[rip+0x39d9]        # 0x417939
  413f60:	call   0x408160
  413f65:	jmp    0x40b388
  413f6a:	mov    rbx,rax
  413f6d:	mov    rax,QWORD PTR [rsp+0x470]
  413f75:	mov    rdx,QWORD PTR [rsp+0x30]
  413f7a:	lea    rcx,[rax-0x18]
  413f7e:	call   0x408188
  413f83:	jmp    0x411684
  413f88:	mov    rbx,rax
  413f8b:	mov    rax,QWORD PTR [rsp+0x460]
  413f93:	mov    rdx,QWORD PTR [rsp+0x30]
  413f98:	lea    rcx,[rax-0x18]
  413f9c:	call   0x408188
  413fa1:	jmp    0x411684
  413fa6:	lea    rdx,[rip+0x3986]        # 0x417933
  413fad:	mov    rcx,r14
  413fb0:	call   0x4081c8
  413fb5:	test   eax,eax
  413fb7:	je     0x413f40
  413fb9:	lea    rbp,[rsp+0x490]
  413fc1:	lea    rdx,[rip+0x3b34]        # 0x417afc
  413fc8:	mov    r8,r15
  413fcb:	mov    rcx,rbp
  413fce:	call   0x408138
  413fd3:	mov    rdx,rbp
  413fd6:	mov    rcx,r14
  413fd9:	call   0x40a240
  413fde:	mov    ebp,eax
  413fe0:	mov    rax,QWORD PTR [rsp+0x490]
  413fe8:	mov    rdx,QWORD PTR [rsp+0x30]
  413fed:	lea    rcx,[rax-0x18]
  413ff1:	call   0x408188
  413ff6:	test   bpl,bpl
  413ff9:	je     0x41403d
  413ffb:	lea    rbp,[rsp+0x4a0]
  414003:	lea    rdx,[rip+0x36bb]        # 0x4176c5
  41400a:	mov    r8,r14
  41400d:	mov    rcx,rbp
  414010:	call   0x40af80
  414015:	mov    rcx,QWORD PTR [rsp+0x70]
  41401a:	mov    rdx,rbp
  41401d:	call   0x408168
  414022:	mov    rax,QWORD PTR [rsp+0x4a0]
  41402a:	mov    rdx,QWORD PTR [rsp+0x30]
  41402f:	lea    rcx,[rax-0x18]
  414033:	call   0x408188
  414038:	jmp    0x40b388
  41403d:	lea    rbp,[rsp+0x4b0]
  414045:	lea    rdx,[rip+0x38f2]        # 0x41793e
  41404c:	mov    r8,r15
  41404f:	mov    rcx,rbp
  414052:	call   0x408138
  414057:	mov    rdx,rbp
  41405a:	mov    rcx,r14
  41405d:	call   0x40a240
  414062:	mov    ebp,eax
  414064:	mov    rax,QWORD PTR [rsp+0x4b0]
  41406c:	mov    r13,QWORD PTR [rsp+0x30]
  414071:	lea    rcx,[rax-0x18]
  414075:	mov    rdx,r13
  414078:	call   0x408188
  41407d:	test   bpl,bpl
  414080:	je     0x4140fe
  414082:	lea    rbp,[rsp+0x4c0]
  41408a:	lea    rdx,[rip+0x3634]        # 0x4176c5
  414091:	mov    r8,r14
  414094:	mov    rcx,rbp
  414097:	call   0x40af80
  41409c:	mov    rcx,QWORD PTR [rsp+0x70]
  4140a1:	mov    rdx,rbp
  4140a4:	call   0x408168
  4140a9:	mov    rax,QWORD PTR [rsp+0x4c0]
  4140b1:	mov    rdx,r13
  4140b4:	lea    rcx,[rax-0x18]
  4140b8:	call   0x408188
  4140bd:	jmp    0x40b388
  4140c2:	mov    rbx,rax
  4140c5:	mov    rax,QWORD PTR [rsp+0x4a0]
  4140cd:	mov    rdx,QWORD PTR [rsp+0x30]
  4140d2:	lea    rcx,[rax-0x18]
  4140d6:	call   0x408188
  4140db:	jmp    0x411684
  4140e0:	mov    rbx,rax
  4140e3:	mov    rax,QWORD PTR [rsp+0x4c0]
  4140eb:	mov    rdx,QWORD PTR [rsp+0x30]
  4140f0:	lea    rcx,[rax-0x18]
  4140f4:	call   0x408188
  4140f9:	jmp    0x411684
  4140fe:	mov    rcx,QWORD PTR [rip+0x4efb]        # 0x419000
  414105:	lea    rdx,[rip+0x3834]        # 0x417940
  41410c:	call   0x408068
  414111:	mov    rdx,QWORD PTR [rsp+0xff0]
  414119:	mov    rcx,rax
  41411c:	mov    r8,QWORD PTR [rdx-0x18]
  414120:	call   0x4080a8
  414125:	mov    rcx,rax
  414128:	call   0x408070
  41412d:	mov    ebp,0x1
  414132:	jmp    0x41082d
  414137:	nop    WORD PTR [rax+rax*1+0x0]
  414140:	push   rbx
  414141:	sub    rsp,0x30
  414145:	lea    rcx,[rip+0x8f64]        # 0x41d0b0
  41414c:	lea    rbx,[rsp+0x2f]
  414151:	call   0x4080d8
  414156:	lea    rcx,[rip+0xfffffffffffed9d3]        # 0x401b30
  41415d:	call   0x4082c0
  414162:	lea    rax,[rip+0x8f1f]        # 0x41d088
  414169:	lea    rcx,[rip+0xfffffffffffee050]        # 0x4021c0
  414170:	mov    DWORD PTR [rip+0x8f0e],0x0        # 0x41d088
  41417a:	mov    QWORD PTR [rip+0x8f0b],0x0        # 0x41d090
  414185:	mov    QWORD PTR [rip+0x8f18],0x0        # 0x41d0a8
  414190:	mov    QWORD PTR [rip+0x8f01],rax        # 0x41d098
  414197:	mov    QWORD PTR [rip+0x8f02],rax        # 0x41d0a0
  41419e:	call   0x4082c0
  4141a3:	lea    rdx,[rip+0x3956]        # 0x417b00
  4141aa:	lea    rcx,[rip+0x8ebf]        # 0x41d070
  4141b1:	mov    r8,rbx
  4141b4:	call   0x408138
  4141b9:	lea    rcx,[rip+0xfffffffffffed910]        # 0x401ad0
  4141c0:	call   0x4082c0
  4141c5:	lea    rdx,[rip+0x3958]        # 0x417b24
  4141cc:	lea    rcx,[rip+0x8e95]        # 0x41d068
  4141d3:	mov    r8,rbx
  4141d6:	call   0x408138
  4141db:	lea    rcx,[rip+0xfffffffffffed88e]        # 0x401a70
  4141e2:	call   0x4082c0
  4141e7:	lea    rdx,[rip+0x3952]        # 0x417b40
  4141ee:	lea    rcx,[rip+0x8e63]        # 0x41d058
  4141f5:	mov    r8,rbx
  4141f8:	call   0x408138
  4141fd:	lea    rcx,[rip+0xfffffffffffed80c]        # 0x401a10
  414204:	call   0x4082c0
  414209:	nop
  41420a:	add    rsp,0x30
  41420e:	pop    rbx
  41420f:	ret    
  414210:	(bad)  
  414211:	(bad)  
  414212:	(bad)  
  414213:	(bad)  
  414214:	(bad)  
  414215:	(bad)  
  414216:	(bad)  
  414217:	inc    DWORD PTR [rax+0x41]
  41421a:	add    BYTE PTR [r8],al
	...
  414225:	add    BYTE PTR [rax],al
  414227:	add    bh,bh
  414229:	(bad)  
  41422a:	(bad)  
  41422b:	(bad)  
  41422c:	(bad)  
  41422d:	(bad)  
  41422e:	(bad)  
  41422f:	inc    DWORD PTR [rax]
  414231:	add    BYTE PTR [rax],al
  414233:	add    BYTE PTR [rax],al
  414235:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000415000 <.data>:
  415000:	or     al,BYTE PTR [rax]
	...
  41500e:	add    BYTE PTR [rax],al
  415010:	and    BYTE PTR [rax+0x40],al
	...
  41501e:	add    BYTE PTR [rax],al
  415020:	and    BYTE PTR [rax+0x41],dl
  415023:	add    BYTE PTR [rax],al
  415025:	add    BYTE PTR [rax],al
  415027:	add    BYTE PTR [rax],ah
  415029:	push   rax
  41502a:	add    BYTE PTR [r8],al
	...
  41503d:	add    BYTE PTR [rax],al
  41503f:	add    BYTE PTR [rax],dh
  415041:	rex.X
  415042:	add    BYTE PTR [r8],al
	...
  41504d:	add    BYTE PTR [rax],al
  41504f:	add    bh,bh
  415051:	(bad)  
  415052:	(bad)  
  415053:	(bad)  
  415054:	(bad)  
  415055:	(bad)  
  415056:	(bad)  
  415057:	inc    DWORD PTR [rax]
  415059:	add    BYTE PTR [rax],al
  41505b:	add    BYTE PTR [rax],al
  41505d:	add    BYTE PTR [rax],al
  41505f:	add    bh,bh
	...
  41506d:	add    BYTE PTR [rax],al
  41506f:	add    BYTE PTR [rdx],al
	...
  41507d:	add    BYTE PTR [rax],al
  41507f:	add    bh,bh
  415081:	(bad)  
  415082:	(bad)  
  415083:	inc    DWORD PTR [rax]
	...
  41508d:	add    BYTE PTR [rax],al
  41508f:	add    BYTE PTR [rax-0x5f],ah
  415092:	add    BYTE PTR [rax],al
  415095:	add    BYTE PTR [rax],al
  415097:	add    BYTE PTR [rax-0x5f],dh
  41509a:	add    BYTE PTR [rax],al
  41509d:	add    BYTE PTR [rax],al
  41509f:	add    BYTE PTR [rdx],dh
  4150a1:	movabs ds:0x2b992ddf,al
  4150aa:	add    BYTE PTR [rax],al
  4150ac:	add    BYTE PTR [rax],al
  4150ae:	add    BYTE PTR [rax],al
  4150b0:	int    0x5d
  4150b2:	and    dl,dl
  4150b4:	data16 (bad) 
  4150b6:	(bad)  
  4150b7:	inc    DWORD PTR [rax]
  4150b9:	add    BYTE PTR [rax],al
  4150bb:	add    BYTE PTR [rax],al
  4150bd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000416000 <.rdata>:
  416000:	add    BYTE PTR [rdi+0x43],cl
  416003:	push   rsp
  416004:	push   r14
  416006:	rex.RB pop r15
  416008:	rex.W
  416009:	rex.WRXB
  41600a:	rex.WRB
  41600b:	add    BYTE PTR [r8+rax*1+0x5c],r11b
  416010:	(bad)  
  416011:	imul   ebp,DWORD PTR [rsi+0x5c],0x0
  416018:	(bad)  
  416019:	jae    0x41607e
  41601b:	jb     0x41607e
  41601d:	je     0x416082
  41601f:	push   0x65776a2f
  416024:	(bad)  
  416025:	ins    DWORD PTR es:[rdi],dx
  416026:	js     0x41608d
  416028:	sub    eax,0x6174636f
  41602d:	jbe    0x416094
  41602f:	(bad)  
  416030:	xor    al,0x2e
  416032:	xor    ch,BYTE PTR [rsi]
  416034:	xor    DWORD PTR [rdi],ebp
  416036:	ja     0x41606e
  416038:	xor    al,0x2d
  41603a:	xor    esi,DWORD PTR [rdx]
  41603c:	(bad)  
  41603d:	jne    0x4160b2
  41603f:	jb     0x416070
  416041:	js     0x41607b
  416043:	ss pop rdi
  416045:	ss xor al,0x2d
  416048:	ja     0x416080
  41604a:	xor    al,0x2d
  41604c:	ins    DWORD PTR es:[rdi],dx
  41604d:	imul   ebp,DWORD PTR [rsi+0x67],0x323377
  416054:	(bad)  
  416056:	jae    0x4160c1
  416058:	movsxd ebx,DWORD PTR [rdi+0x73]
  41605b:	je     0x4160cf
  41605d:	imul   ebp,DWORD PTR [rsi+0x67],0x75733a3a
  416064:	(bad)
  416069:	add    BYTE PTR [rax],al
  41606b:	add    BYTE PTR [rax],al
  41606d:	add    BYTE PTR [rax],al
  41606f:	add    BYTE PTR [rip+0x5f203a73],ah        # 0x5f619ae8
  416075:	pop    rdi
  416076:	jo     0x4160e7
  416078:	jae    0x41609a
  41607a:	sub    BYTE PTR [rdi+0x68],dh
  41607d:	imul   esp,DWORD PTR [rbx+0x68],0x20736920
  416084:	and    eax,0x2029757a
  416089:	and    BYTE PTR ds:[rax+rbp*2+0x69],dh
  41608e:	jae    0x4160bd
  416090:	ds jae 0x4160fc
  416093:	jp     0x4160fa
  416095:	sub    BYTE PTR [rcx],ch
  416097:	and    BYTE PTR [rax],ch
  416099:	ja     0x416103
  41609b:	imul   esp,DWORD PTR [rbx+0x68],0x20736920
  4160a2:	and    eax,0x29757a
  4160a7:	jns    0x41610e
  4160a9:	jae    0x4160ab
  4160ab:	je     0x41611f
  4160ad:	jne    0x416114
  4160af:	add    BYTE PTR [rdx],ah
  4160b1:	add    BYTE PTR [rsi+0x65],dh
  4160b4:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  4160b8:	cmp    bh,BYTE PTR [rdx]
  4160ba:	pop    rdi
  4160bb:	rex.WRB pop r15
  4160bd:	fs gs data16 (bad) 
  4160c1:	jne    0x41612f
  4160c3:	je     0x416124
  4160c5:	(bad)  
  4160c6:	jo     0x416138
  4160c8:	outs   dx,BYTE PTR gs:[rsi]
  4160ca:	add    BYTE PTR fs:[rdi+0x43],cl
  4160ce:	push   rsp
  4160cf:	push   r14
  4160d1:	rex.RB pop r15
  4160d3:	push   rax
  4160d4:	push   rdx
  4160d5:	rex.RB
  4160d6:	rex.RX
  4160d7:	rex.WB pop r8
  4160d9:	add    BYTE PTR [rdi],ch
  4160db:	(bad)  
  4160dc:	imul   ebp,DWORD PTR [rsi+0x2f],0x646573
  4160e3:	push   rbx
  4160e4:	rex.RB
  4160e5:	add    BYTE PTR [rax],r8b
  4160e8:	(bad)  
  4160e9:	jae    0x41614e
  4160eb:	jb     0x41614e
  4160ed:	je     0x416152
  4160ef:	push   0x65776a2f
  4160f4:	(bad)  
  4160f5:	ins    DWORD PTR es:[rdi],dx
  4160f6:	js     0x41615d
  4160f8:	sub    eax,0x6174636f
  4160fd:	jbe    0x416164
  4160ff:	(bad)  
  416100:	xor    al,0x2e
  416102:	xor    ch,BYTE PTR [rsi]
  416104:	xor    DWORD PTR [rdi],ebp
  416106:	ja     0x41613e
  416108:	xor    al,0x2d
  41610a:	xor    esi,DWORD PTR [rdx]
  41610c:	(bad)  
  41610d:	jne    0x416182
  41610f:	jb     0x416140
  416111:	js     0x41614b
  416113:	ss pop rdi
  416115:	ss xor al,0x2d
  416118:	ja     0x416150
  41611a:	xor    al,0x2d
  41611c:	ins    DWORD PTR es:[rdi],dx
  41611d:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  416124:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  41612b:	(bad)  
  41612c:	outs   dx,DWORD PTR ds:[rsi]
  41612d:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  416131:	gs sub eax,0x2e322e34
  416137:	xor    DWORD PTR [rdi],ebp
  416139:	outs   dx,DWORD PTR ds:[rsi]
  41613a:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41613e:	add    BYTE PTR gs:[rdi],ch
  416141:	jae    0x4161a6
  416143:	jb     0x4161a6
  416145:	je     0x4161aa
  416147:	push   0x65776a2f
  41614c:	(bad)  
  41614d:	ins    DWORD PTR es:[rdi],dx
  41614e:	js     0x4161b5
  416150:	sub    eax,0x6174636f
  416155:	jbe    0x4161bc
  416157:	(bad)  
  416158:	xor    al,0x2e
  41615a:	xor    ch,BYTE PTR [rsi]
  41615c:	xor    DWORD PTR [rdi],ebp
  41615e:	ja     0x416196
  416160:	xor    al,0x2d
  416162:	xor    esi,DWORD PTR [rdx]
  416164:	(bad)  
  416165:	jne    0x4161da
  416167:	jb     0x416198
  416169:	js     0x4161a3
  41616b:	ss pop rdi
  41616d:	ss xor al,0x2d
  416170:	ja     0x4161a8
  416172:	xor    al,0x2d
  416174:	ins    DWORD PTR es:[rdi],dx
  416175:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  41617c:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  416183:	add    BYTE PTR [rax],al
  416185:	add    BYTE PTR [rax],al
  416187:	add    BYTE PTR [rdi],ch
  416189:	jae    0x4161ee
  41618b:	jb     0x4161ee
  41618d:	je     0x4161f2
  41618f:	push   0x65776a2f
  416194:	(bad)  
  416195:	ins    DWORD PTR es:[rdi],dx
  416196:	js     0x4161fd
  416198:	sub    eax,0x6174636f
  41619d:	jbe    0x416204
  41619f:	(bad)  
  4161a0:	xor    al,0x2e
  4161a2:	xor    ch,BYTE PTR [rsi]
  4161a4:	xor    DWORD PTR [rdi],ebp
  4161a6:	ja     0x4161de
  4161a8:	xor    al,0x2d
  4161aa:	xor    esi,DWORD PTR [rdx]
  4161ac:	(bad)  
  4161ad:	jne    0x416222
  4161af:	jb     0x4161e0
  4161b1:	js     0x4161eb
  4161b3:	ss pop rdi
  4161b5:	ss xor al,0x2d
  4161b8:	ja     0x4161f0
  4161ba:	xor    al,0x2d
  4161bc:	ins    DWORD PTR es:[rdi],dx
  4161bd:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4161c4:	ins    BYTE PTR es:[rdi],dx
  4161c5:	imul   esp,DWORD PTR [rdx+0x0],0x7263732f
  4161cc:	(bad)  
  4161cd:	je     0x416232
  4161cf:	push   0x65776a2f
  4161d4:	(bad)  
  4161d5:	ins    DWORD PTR es:[rdi],dx
  4161d6:	js     0x41623d
  4161d8:	sub    eax,0x6174636f
  4161dd:	jbe    0x416244
  4161df:	(bad)  
  4161e0:	xor    al,0x2e
  4161e2:	xor    ch,BYTE PTR [rsi]
  4161e4:	xor    DWORD PTR [rdi],ebp
  4161e6:	ja     0x41621e
  4161e8:	xor    al,0x2d
  4161ea:	xor    esi,DWORD PTR [rdx]
  4161ec:	(bad)  
  4161ed:	jne    0x416262
  4161ef:	jb     0x416220
  4161f1:	js     0x41622b
  4161f3:	ss pop rdi
  4161f5:	ss xor al,0x2d
  4161f8:	ja     0x416230
  4161fa:	xor    al,0x2d
  4161fc:	ins    DWORD PTR es:[rdi],dx
  4161fd:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  416204:	ins    BYTE PTR es:[rdi],dx
  416205:	imul   esp,DWORD PTR [rdx+0x2f],0x6174636f
  41620c:	jbe    0x416273
  41620e:	(bad)  
  41620f:	xor    al,0x2e
  416211:	xor    ch,BYTE PTR [rsi]
  416213:	xor    DWORD PTR [rax],eax
  416215:	rex.WRXB
  416216:	rex.XB push r12
  416218:	rex.WB
  416219:	rex.WRX
  41621a:	rex.XB
  41621b:	rex.WR push rbp
  41621d:	rex.R
  41621e:	rex.RB
  41621f:	rex.R
  416220:	rex.WB push r10
  416222:	add    BYTE PTR [rcx+0x4e],cl
  416225:	rex.XB
  416226:	rex.WR push rbp
  416228:	rex.R
  416229:	rex.RB
  41622a:	rex.R
  41622b:	rex.WB push r10
  41622d:	add    BYTE PTR [rcx+rcx*2+0x42],cl
  416231:	rex.R
  416232:	rex.WB push r10
  416234:	add    BYTE PTR [rdi+0x43],cl
  416237:	push   rsp
  416238:	rex.WR
  416239:	rex.WB
  41623a:	rex.X
  41623b:	rex.R
  41623c:	rex.WB push r10
  41623e:	add    BYTE PTR [rsi+rbp*1+0x2e],bl
  416242:	add    BYTE PTR [rip+0x2d200049],ch        # 0x2d616291
  416248:	rex.WB add BYTE PTR [r15],bpl
  41624b:	jne    0x4162c0
  41624d:	jb     0x41627e
  41624f:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  416256:	add    BYTE PTR [rip+0x752f004c],ch        # 0x757062a8
  41625c:	jae    0x4162d0
  41625e:	(bad)  
  41625f:	ins    BYTE PTR es:[rdi],dx
  416260:	imul   esp,DWORD PTR [rdx+0x0],0x4c2d20
  416267:	add    BYTE PTR [rip+0x63732f49],ch        # 0x63b491b6
  41626d:	jb     0x4162d0
  41626f:	je     0x4162d4
  416271:	push   0x65776a2f
  416276:	(bad)  
  416277:	ins    DWORD PTR es:[rdi],dx
  416278:	js     0x4162df
  41627a:	sub    eax,0x6174636f
  41627f:	jbe    0x4162e6
  416281:	(bad)  
  416282:	xor    al,0x2e
  416284:	xor    ch,BYTE PTR [rsi]
  416286:	xor    DWORD PTR [rdi],ebp
  416288:	ja     0x4162c0
  41628a:	xor    al,0x2d
  41628c:	xor    esi,DWORD PTR [rdx]
  41628e:	(bad)  
  41628f:	jne    0x416304
  416291:	jb     0x4162c2
  416293:	js     0x4162cd
  416295:	ss pop rdi
  416297:	ss xor al,0x2d
  41629a:	ja     0x4162d2
  41629c:	xor    al,0x2d
  41629e:	ins    DWORD PTR es:[rdi],dx
  41629f:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4162a6:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  4162ad:	add    BYTE PTR [rbx+0x50],al
  4162b0:	push   rax
  4162b1:	rex.RX
  4162b2:	rex.WR
  4162b3:	rex.B
  4162b4:	rex.RXB push r11
  4162b6:	add    BYTE PTR [rcx+0x4e],cl
  4162b9:	rex.XB
  4162ba:	rex.RX
  4162bb:	rex.WR
  4162bc:	rex.B
  4162bd:	rex.RXB push r11
  4162bf:	add    BYTE PTR [rdi+0x66],ah
  4162c2:	outs   dx,DWORD PTR ds:[rsi]
  4162c3:	jb     0x416339
  4162c5:	jb     0x416328
  4162c7:	outs   dx,BYTE PTR ds:[rsi]
  4162c8:	add    BYTE PTR [rsi+0x37],al
  4162cb:	(bad)  
  4162cc:	add    BYTE PTR [rip+0x4f2d2067],ch        # 0x4f6e8339
  4162d2:	xor    al,BYTE PTR [rax]
  4162d4:	rex.RX
  4162d5:	rex.RX
  4162d6:	rex.WR
  4162d7:	rex.B
  4162d8:	rex.RXB push r11
  4162da:	add    BYTE PTR [rsi+0x50],al
  4162dd:	rex.WB
  4162de:	rex.XB
  4162df:	rex.RX
  4162e0:	rex.WR
  4162e1:	rex.B
  4162e2:	rex.RXB add BYTE PTR [r15+0x63],r12b
  4162e6:	movsxd esp,DWORD PTR [rax]
  4162e8:	sub    eax,0x3d647473
  4162ed:	outs   dx,BYTE PTR ds:[esi]
  4162ef:	jne    0x416322
  4162f1:	xor    DWORD PTR [rax],eax
  4162f3:	rex.XB
  4162f4:	rex.XB add BYTE PTR [r11+0x46],al
  4162f8:	rex.WR
  4162f9:	rex.B
  4162fa:	rex.RXB push r11
  4162fc:	add    BYTE PTR [rbx+0x50],al
  4162ff:	rex.WB
  416300:	rex.XB
  416301:	rex.RX
  416302:	rex.WR
  416303:	rex.B
  416304:	rex.RXB add BYTE PTR [r15+0x2b],r12b
  416308:	sub    esp,DWORD PTR [rax]
  41630a:	sub    eax,0x3d647473
  41630f:	outs   dx,BYTE PTR ds:[esi]
  416311:	jne    0x41633e
  416313:	sub    esi,DWORD PTR [rcx]
  416315:	xor    DWORD PTR [rax],eax
  416317:	rex.XB pop r8
  416319:	pop    rax
  41631a:	add    BYTE PTR [rbx+0x58],al
  41631d:	pop    rax
  41631e:	rex.RX
  41631f:	rex.WR
  416320:	rex.B
  416321:	rex.RXB push r11
  416323:	add    BYTE PTR [rbx+0x58],al
  416326:	pop    rax
  416327:	push   rax
  416328:	rex.WB
  416329:	rex.XB
  41632a:	rex.RX
  41632b:	rex.WR
  41632c:	rex.B
  41632d:	rex.RXB add BYTE PTR [r8],r12b
  416330:	sub    eax,0x72687470
  416335:	gs (bad) 
  416337:	and    BYTE PTR fs:[rip+0x65706f66],ch        # 0x65b1d2a4
  41633e:	outs   dx,BYTE PTR ds:[rsi]
  41633f:	ins    DWORD PTR es:[rdi],dx
  416340:	jo     0x416342
  416342:	pop    rax
  416343:	push   rsp
  416344:	push   rdx
  416345:	pop    r15
  416347:	rex.XB
  416348:	rex.RX
  416349:	rex.WR
  41634a:	rex.B
  41634b:	rex.RXB push r11
  41634d:	add    BYTE PTR [rax+0x54],bl
  416350:	push   rdx
  416351:	pop    r15
  416353:	rex.XB pop r8
  416355:	pop    rax
  416356:	rex.RX
  416357:	rex.WR
  416358:	rex.B
  416359:	rex.RXB push r11
  41635b:	add    BYTE PTR [rcx+0x72],ah
  41635e:	add    BYTE PTR [rcx+0x52],al
  416361:	add    BYTE PTR [rdx+0x61],dh
  416364:	outs   dx,BYTE PTR ds:[rsi]
  416365:	ins    BYTE PTR es:[rdi],dx
  416366:	imul   esp,DWORD PTR [rdx+0x0],0x4c4e4152
  41636d:	rex.WB
  41636e:	rex.X add BYTE PTR [rip+0x4544004d],bpl        # 0x458563c2
  416375:	push   rax
  416376:	rex.RB
  416377:	rex.WRX
  416378:	rex.R pop rdi
  41637a:	rex.RX
  41637b:	rex.WR
  41637c:	rex.B
  41637d:	rex.RXB push r11
  41637f:	add    BYTE PTR [rbp+rax*2+0x50],al
  416383:	rex.RB
  416384:	rex.WRX
  416385:	rex.R pop rdi
  416387:	rex.RB pop r8
  416389:	push   rsp
  41638a:	push   rdx
  41638b:	pop    r15
  41638d:	push   rbx
  41638e:	rex.RB
  41638f:	rex.R pop rdi
  416391:	push   rax
  416392:	push   r12
  416394:	push   rsp
  416395:	rex.RB push r10
  416397:	rex.WRX add BYTE PTR [rsp+r9*2+0x5f],r8b
  41639c:	rex.WR
  41639d:	add    BYTE PTR [rip+0x72616873],r13b        # 0x72a2cc17
  4163a4:	gs add BYTE PTR fs:[rsp+rcx*2+0x5f],al
  4163aa:	rex.WR
  4163ab:	rex.R
  4163ac:	rex.RX
  4163ad:	rex.WR
  4163ae:	rex.B
  4163af:	rex.RXB push r11
  4163b1:	add    BYTE PTR [rdx+0x44],dl
  4163b4:	pop    rcx
  4163b5:	rex.WRX
  4163b6:	rex.B
  4163b7:	rex.WRB
  4163b8:	rex.WB
  4163b9:	rex.XB pop r15
  4163bb:	rex.RX
  4163bc:	rex.WR
  4163bd:	rex.B
  4163be:	add    BYTE PTR [r9+r9*2+0x42],r9b
  4163c3:	rex.WRXB
  4163c4:	rex.XB push r12
  4163c6:	push   r14
  4163c8:	add    BYTE PTR [rip+0x74636f6c],r13b        # 0x74a4d33b
  4163cf:	(bad)  
  4163d0:	jbe    0x416437
  4163d2:	add    BYTE PTR [rcx+rcx*2+0x42],cl
  4163d6:	rex.WRXB
  4163d7:	rex.XB push r12
  4163d9:	rex.WB
  4163da:	rex.WRX push rsp
  4163dc:	rex.RB push r10
  4163de:	push   rax
  4163df:	add    BYTE PTR [rip+0x74636f6c],ch        # 0x74a4d351
  4163e5:	imul   ebp,DWORD PTR [rsi+0x74],0x707265
  4163ec:	push   rdx
  4163ed:	rex.RB
  4163ee:	rex.B
  4163ef:	rex.R
  4163f0:	rex.WR
  4163f1:	rex.WB
  4163f2:	rex.WRX
  4163f3:	rex.RB pop r15
  4163f5:	rex.WR
  4163f6:	rex.WB
  4163f7:	rex.X push rbx
  4163f9:	add    BYTE PTR [rip+0x6165726c],ch        # 0x61a6d66b
  4163ff:	fs ins BYTE PTR es:[rdi],dx
  416401:	imul   ebp,DWORD PTR [rsi+0x65],0x6c6c2d00
  416408:	(bad)  
  416409:	jo     0x41646c
  41640b:	movsxd ebp,DWORD PTR [rbx+0x0]
  41640e:	rex.WR
  41640f:	push   r8
  416411:	rex.B
  416412:	rex.XB
  416413:	rex.WXB pop r15
  416415:	rex.WR
  416416:	rex.WB
  416417:	rex.X push rbx
  416419:	add    BYTE PTR [rip+0x616c626c],ch        # 0x61adc68b
  41641f:	jae    0x416421
  416421:	rex.X
  416422:	rex.WR
  416423:	push   r11
  416425:	pop    rdi
  416426:	rex.WR
  416427:	rex.WB
  416428:	rex.X push rbx
  41642a:	add    BYTE PTR [rax],al
  41642c:	add    BYTE PTR [rax],al
  41642e:	add    BYTE PTR [rax],al
  416430:	sub    eax,0x63732f4c
  416435:	jb     0x416498
  416437:	je     0x41649c
  416439:	push   0x65776a2f
  41643e:	(bad)  
  41643f:	ins    DWORD PTR es:[rdi],dx
  416440:	js     0x4164a7
  416442:	sub    eax,0x6174636f
  416447:	jbe    0x4164ae
  416449:	(bad)  
  41644a:	xor    al,0x2e
  41644c:	xor    ch,BYTE PTR [rsi]
  41644e:	xor    DWORD PTR [rdi],ebp
  416450:	ja     0x416488
  416452:	xor    al,0x2d
  416454:	xor    esi,DWORD PTR [rdx]
  416456:	(bad)  
  416457:	jne    0x4164cc
  416459:	jb     0x41648a
  41645b:	js     0x416495
  41645d:	ss pop rdi
  41645f:	ss xor al,0x2d
  416462:	ja     0x41649a
  416464:	xor    al,0x2d
  416466:	ins    DWORD PTR es:[rdi],dx
  416467:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  41646e:	ins    BYTE PTR es:[rdi],dx
  41646f:	imul   esp,DWORD PTR [rdx+0x20],0x54464600
  416476:	push   rdi
  416477:	xor    ebx,DWORD PTR [rdi+0x4c]
  41647a:	rex.R
  41647b:	rex.RX
  41647c:	rex.WR
  41647d:	rex.B
  41647e:	rex.RXB push r11
  416480:	add    BYTE PTR [rip+0x7466666c],ch        # 0x74a7caf2
  416486:	ja     0x4164bb
  416488:	and    BYTE PTR [rax],al
  41648a:	rex.RX
  41648b:	rex.RX push rsp
  41648d:	push   rdi
  41648e:	xor    ebx,DWORD PTR [rdi+0x4c]
  416491:	rex.WB
  416492:	rex.X push rbx
  416494:	add    BYTE PTR [rsi+0x46],al
  416497:	push   rsp
  416498:	push   rdi
  416499:	xor    eax,DWORD PTR [rsi+0x5f]
  41649c:	rex.WR
  41649d:	rex.R
  41649e:	rex.RX
  41649f:	rex.WR
  4164a0:	rex.B
  4164a1:	rex.RXB push r11
  4164a3:	add    BYTE PTR [rip+0x7466666c],ch        # 0x74a7cb15
  4164a9:	ja     0x4164de
  4164ab:	data16 and BYTE PTR [rax],al
  4164ae:	rex.RX
  4164af:	rex.RX push rsp
  4164b1:	push   rdi
  4164b2:	xor    eax,DWORD PTR [rsi+0x5f]
  4164b5:	rex.WR
  4164b6:	rex.WB
  4164b7:	rex.X push rbx
  4164b9:	add    BYTE PTR [rax],al
  4164bb:	add    BYTE PTR [rax],al
  4164bd:	add    BYTE PTR [rax],al
  4164bf:	add    BYTE PTR [rip+0x20206d6c],ch        # 0x2061d231
  4164c5:	and    BYTE PTR [rip+0x6964676c],ch        # 0x69a5cc37
  4164cb:	xor    esi,DWORD PTR [rdx]
  4164cd:	and    BYTE PTR [rip+0x3273776c],ch        # 0x32b4dc3f
  4164d3:	pop    rdi
  4164d4:	xor    esi,DWORD PTR [rdx]
  4164d6:	and    BYTE PTR [rip+0x6573756c],ch        # 0x65b4da48
  4164dc:	jb     0x416511
  4164de:	xor    ah,BYTE PTR [rax]
  4164e0:	sub    eax,0x72656b6c
  4164e5:	outs   dx,BYTE PTR ds:[rsi]
  4164e6:	gs ins BYTE PTR es:[rdi],dx
  4164e8:	xor    esi,DWORD PTR [rdx]
  4164ea:	and    BYTE PTR [rip+0x6964676c],ch        # 0x69a5cc5c
  4164f0:	xor    esi,DWORD PTR [rdx]
  4164f2:	and    BYTE PTR [rip+0x3273776c],ch        # 0x32b4dc64
  4164f8:	pop    rdi
  4164f9:	xor    esi,DWORD PTR [rdx]
  4164fb:	and    BYTE PTR [rip+0x6573756c],ch        # 0x65b4da6d
  416501:	jb     0x416536
  416503:	xor    ah,BYTE PTR [rax]
  416505:	sub    eax,0x72656b6c
  41650a:	outs   dx,BYTE PTR ds:[rsi]
  41650b:	gs ins BYTE PTR es:[rdi],dx
  41650d:	xor    esi,DWORD PTR [rdx]
  41650f:	add    BYTE PTR [rcx+rcx*2+0x42],cl
  416513:	push   rbx
  416514:	add    BYTE PTR [rax],al
  416516:	add    BYTE PTR [rax],al
  416518:	and    BYTE PTR [rip+0x63732f4c],ch        # 0x63b4946a
  41651e:	jb     0x416581
  416520:	je     0x416585
  416522:	push   0x65776a2f
  416527:	(bad)  
  416528:	ins    DWORD PTR es:[rdi],dx
  416529:	js     0x416590
  41652b:	sub    eax,0x6174636f
  416530:	jbe    0x416597
  416532:	(bad)  
  416533:	xor    al,0x2e
  416535:	xor    ch,BYTE PTR [rsi]
  416537:	xor    DWORD PTR [rdi],ebp
  416539:	ja     0x416571
  41653b:	xor    al,0x2d
  41653d:	xor    esi,DWORD PTR [rdx]
  41653f:	(bad)  
  416540:	jne    0x4165b5
  416542:	jb     0x416573
  416544:	js     0x41657e
  416546:	ss pop rdi
  416548:	ss xor al,0x2d
  41654b:	ja     0x416583
  41654d:	xor    al,0x2d
  41654f:	ins    DWORD PTR es:[rdi],dx
  416550:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  416557:	ins    BYTE PTR es:[rdi],dx
  416558:	imul   esp,DWORD PTR [rdx+0x20],0x732f4c2d
  41655f:	movsxd esi,DWORD PTR [rdx+0x61]
  416562:	je     0x4165c7
  416564:	push   0x65776a2f
  416569:	(bad)  
  41656a:	ins    DWORD PTR es:[rdi],dx
  41656b:	js     0x4165d2
  41656d:	sub    eax,0x6174636f
  416572:	jbe    0x4165d9
  416574:	(bad)  
  416575:	xor    al,0x2e
  416577:	xor    ch,BYTE PTR [rsi]
  416579:	xor    DWORD PTR [rdi],ebp
  41657b:	ja     0x4165b3
  41657d:	xor    al,0x2d
  41657f:	xor    esi,DWORD PTR [rdx]
  416581:	(bad)  
  416582:	jne    0x4165f7
  416584:	jb     0x4165b5
  416586:	ins    BYTE PTR es:[rdi],dx
  416587:	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  41658e:	js     0x4165c8
  416590:	ss pop rdi
  416592:	ss xor al,0x2d
  416595:	ja     0x4165cd
  416597:	xor    al,0x2d
  416599:	ins    DWORD PTR es:[rdi],dx
  41659a:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4165a1:	xor    al,0x2e
  4165a3:	cmp    DWORD PTR [rsi],ebp
  4165a5:	xor    al,0x20
  4165a7:	sub    eax,0x63732f4c
  4165ac:	jb     0x41660f
  4165ae:	je     0x416613
  4165b0:	push   0x65776a2f
  4165b5:	(bad)  
  4165b6:	ins    DWORD PTR es:[rdi],dx
  4165b7:	js     0x41661e
  4165b9:	sub    eax,0x6174636f
  4165be:	jbe    0x416625
  4165c0:	(bad)  
  4165c1:	xor    al,0x2e
  4165c3:	xor    ch,BYTE PTR [rsi]
  4165c5:	xor    DWORD PTR [rdi],ebp
  4165c7:	ja     0x4165ff
  4165c9:	xor    al,0x2d
  4165cb:	xor    esi,DWORD PTR [rdx]
  4165cd:	(bad)  
  4165ce:	jne    0x416643
  4165d0:	jb     0x416601
  4165d2:	ins    BYTE PTR es:[rdi],dx
  4165d3:	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  4165da:	js     0x416614
  4165dc:	ss pop rdi
  4165de:	ss xor al,0x2d
  4165e1:	ja     0x416619
  4165e3:	xor    al,0x2d
  4165e5:	ins    DWORD PTR es:[rdi],dx
  4165e6:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4165ed:	xor    al,0x2e
  4165ef:	cmp    DWORD PTR [rsi],ebp
  4165f1:	xor    al,0x2f
  4165f3:	cs cs (bad) 
  4165f6:	cs cs (bad) 
  4165f9:	cs cs (bad) 
  4165fc:	cs cs (bad) 
  4165ff:	js     0x416639
  416601:	ss pop rdi
  416603:	ss xor al,0x2d
  416606:	ja     0x41663e
  416608:	xor    al,0x2d
  41660a:	ins    DWORD PTR es:[rdi],dx
  41660b:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  416612:	ins    BYTE PTR es:[rdi],dx
  416613:	imul   esp,DWORD PTR [rdx+0x2f],0x6c2f2e2e
  41661a:	imul   esp,DWORD PTR [rdx+0x20],0x732f4c2d
  416621:	movsxd esi,DWORD PTR [rdx+0x61]
  416624:	je     0x416689
  416626:	push   0x65776a2f
  41662b:	(bad)  
  41662c:	ins    DWORD PTR es:[rdi],dx
  41662d:	js     0x416694
  41662f:	sub    eax,0x6174636f
  416634:	jbe    0x41669b
  416636:	(bad)  
  416637:	xor    al,0x2e
  416639:	xor    ch,BYTE PTR [rsi]
  41663b:	xor    DWORD PTR [rdi],ebp
  41663d:	ja     0x416675
  41663f:	xor    al,0x2d
  416641:	xor    esi,DWORD PTR [rdx]
  416643:	(bad)  
  416644:	jne    0x4166b9
  416646:	jb     0x416677
  416648:	ins    DWORD PTR es:[rdi],dx
  416649:	imul   ebp,DWORD PTR [rsi+0x67],0x696c2f77
  416650:	(bad)  
  416651:	(bad)  
  416652:	cs cs (bad) 
  416655:	ins    BYTE PTR es:[rdi],dx
  416656:	imul   esp,DWORD PTR [rdx+0x20],0x732f4c2d
  41665d:	movsxd esi,DWORD PTR [rdx+0x61]
  416660:	je     0x4166c5
  416662:	push   0x65776a2f
  416667:	(bad)  
  416668:	ins    DWORD PTR es:[rdi],dx
  416669:	js     0x4166d0
  41666b:	sub    eax,0x6174636f
  416670:	jbe    0x4166d7
  416672:	(bad)  
  416673:	xor    al,0x2e
  416675:	xor    ch,BYTE PTR [rsi]
  416677:	xor    DWORD PTR [rdi],ebp
  416679:	ja     0x4166b1
  41667b:	xor    al,0x2d
  41667d:	xor    esi,DWORD PTR [rdx]
  41667f:	(bad)  
  416680:	jne    0x4166f5
  416682:	jb     0x4166b3
  416684:	ins    BYTE PTR es:[rdi],dx
  416685:	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  41668c:	js     0x4166c6
  41668e:	ss pop rdi
  416690:	ss xor al,0x2d
  416693:	ja     0x4166cb
  416695:	xor    al,0x2d
  416697:	ins    DWORD PTR es:[rdi],dx
  416698:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  41669f:	xor    al,0x2e
  4166a1:	cmp    DWORD PTR [rsi],ebp
  4166a3:	xor    al,0x2f
  4166a5:	cs cs (bad) 
  4166a8:	cs cs (bad) 
  4166ab:	cs cs (bad) 
  4166ae:	cs cs (bad) 
  4166b1:	js     0x4166eb
  4166b3:	ss pop rdi
  4166b5:	ss xor al,0x2d
  4166b8:	ja     0x4166f0
  4166ba:	xor    al,0x2d
  4166bc:	ins    DWORD PTR es:[rdi],dx
  4166bd:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4166c4:	ins    BYTE PTR es:[rdi],dx
  4166c5:	imul   esp,DWORD PTR [rdx+0x20],0x732f4c2d
  4166cc:	movsxd esi,DWORD PTR [rdx+0x61]
  4166cf:	je     0x416734
  4166d1:	push   0x65776a2f
  4166d6:	(bad)  
  4166d7:	ins    DWORD PTR es:[rdi],dx
  4166d8:	js     0x41673f
  4166da:	sub    eax,0x6174636f
  4166df:	jbe    0x416746
  4166e1:	(bad)  
  4166e2:	xor    al,0x2e
  4166e4:	xor    ch,BYTE PTR [rsi]
  4166e6:	xor    DWORD PTR [rdi],ebp
  4166e8:	ja     0x416720
  4166ea:	xor    al,0x2d
  4166ec:	xor    esi,DWORD PTR [rdx]
  4166ee:	(bad)  
  4166ef:	jne    0x416764
  4166f1:	jb     0x416722
  4166f3:	ins    DWORD PTR es:[rdi],dx
  4166f4:	imul   ebp,DWORD PTR [rsi+0x67],0x696c2f77
  4166fb:	(bad)  
  4166fc:	and    BYTE PTR [rip+0x2d206d6c],ch        # 0x2d61d46e
  416702:	ins    BYTE PTR es:[rdi],dx
  416703:	outs   dx,WORD PTR ds:[esi]
  416706:	jb     0x41677c
  416708:	jb     0x41676b
  41670a:	outs   dx,BYTE PTR ds:[rsi]
  41670b:	and    BYTE PTR [rip+0x6e696d6c],ch        # 0x6eaad47d
  416711:	addr32 ja 0x416747
  416714:	xor    ah,BYTE PTR [rax]
  416716:	sub    eax,0x6c6f6d6c
  41671b:	outs   dx,BYTE PTR fs:[rsi]
  41671d:	(bad)  
  41671e:	ins    DWORD PTR es:[rdi],dx
  41671f:	and    BYTE PTR gs:[rip+0x6e696d6c],ch        # 0x6eaad492
  416726:	addr32 ja 0x41678e
  416729:	js     0x41674b
  41672b:	sub    eax,0x76736d6c
  416730:	movsxd esi,DWORD PTR [rdx+0x74]
  416733:	and    BYTE PTR [rip+0x6175716c],ch        # 0x61b6d8a5
  416739:	fs ins DWORD PTR es:[rdi],dx
  41673b:	(bad)  
  41673c:	je     0x4167a6
  41673e:	and    BYTE PTR [rip+0x7664616c],ch        # 0x76a5c8b0
  416744:	(bad)  
  416745:	jo     0x4167b0
  416747:	xor    esi,DWORD PTR [rdx]
  416749:	and    BYTE PTR [rip+0x6568736c],ch        # 0x65a9dabb
  41674f:	ins    BYTE PTR es:[rdi],dx
  416750:	ins    BYTE PTR es:[rdi],dx
  416751:	xor    esi,DWORD PTR [rdx]
  416753:	and    BYTE PTR [rip+0x6573756c],ch        # 0x65b4dcc5
  416759:	jb     0x41678e
  41675b:	xor    ah,BYTE PTR [rax]
  41675d:	sub    eax,0x72656b6c
  416762:	outs   dx,BYTE PTR ds:[rsi]
  416763:	gs ins BYTE PTR es:[rdi],dx
  416765:	xor    esi,DWORD PTR [rdx]
  416767:	add    BYTE PTR [rsi+0x4c],al
  41676a:	rex.WB
  41676b:	rex.X push rbx
  41676d:	add    BYTE PTR [rax],al
  41676f:	add    BYTE PTR [rax],ah
  416771:	sub    eax,0x63732f4c
  416776:	jb     0x4167d9
  416778:	je     0x4167dd
  41677a:	push   0x65776a2f
  41677f:	(bad)  
  416780:	ins    DWORD PTR es:[rdi],dx
  416781:	js     0x4167e8
  416783:	sub    eax,0x6174636f
  416788:	jbe    0x4167ef
  41678a:	(bad)  
  41678b:	xor    al,0x2e
  41678d:	xor    ch,BYTE PTR [rsi]
  41678f:	xor    DWORD PTR [rdi],ebp
  416791:	ja     0x4167c9
  416793:	xor    al,0x2d
  416795:	xor    esi,DWORD PTR [rdx]
  416797:	(bad)  
  416798:	jne    0x41680d
  41679a:	jb     0x4167cb
  41679c:	js     0x4167d6
  41679e:	ss pop rdi
  4167a0:	ss xor al,0x2d
  4167a3:	ja     0x4167db
  4167a5:	xor    al,0x2d
  4167a7:	ins    DWORD PTR es:[rdi],dx
  4167a8:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4167af:	ins    BYTE PTR es:[rdi],dx
  4167b0:	imul   esp,DWORD PTR [rdx+0x20],0x72666c2d
  4167b7:	gs gs je 0x416834
  4167bb:	jo     0x416822
  4167bd:	and    BYTE PTR [rax],ah
  4167bf:	sub    eax,0x6664686c
  4167c4:	xor    eax,0x476c2d20
  4167c9:	jb     0x41682c
  4167cb:	jo     0x416835
  4167cd:	imul   esp,DWORD PTR [rbx+0x73],0x6967614d
  4167d4:	movsxd ebp,DWORD PTR [rbx+0x2b]
  4167d7:	sub    esp,DWORD PTR [rax]
  4167d9:	sub    eax,0x6172476c
  4167de:	jo     0x416848
  4167e0:	imul   esp,DWORD PTR [rbx+0x73],0x6967614d
  4167e7:	movsxd ebp,DWORD PTR [rbx+0x20]
  4167ea:	and    BYTE PTR [rip+0x2d207a6c],ch        # 0x2d61e25c
  4167f0:	ins    BYTE PTR es:[rdi],dx
  4167f1:	data16 data16 je 0x41686c
  4167f5:	xor    esp,DWORD PTR [rax]
  4167f7:	and    BYTE PTR [rip+0x7466666c],ch        # 0x74a7ce69
  4167fd:	ja     0x416832
  4167ff:	data16 and BYTE PTR [rax],ah
  416802:	sub    eax,0x65706f6c
  416807:	outs   dx,BYTE PTR ds:[rsi]
  416808:	ins    BYTE PTR es:[edi],dx
  41680a:	xor    esi,DWORD PTR [rdx]
  41680c:	and    BYTE PTR [rip+0x756c676c],ch        # 0x75adcf7e
  416812:	xor    esi,DWORD PTR [rdx]
  416814:	and    BYTE PTR [rip+0x63732f4c],ch        # 0x63b49766
  41681a:	jb     0x41687d
  41681c:	je     0x416881
  41681e:	push   0x65776a2f
  416823:	(bad)  
  416824:	ins    DWORD PTR es:[rdi],dx
  416825:	js     0x41688c
  416827:	sub    eax,0x6174636f
  41682c:	jbe    0x416893
  41682e:	(bad)  
  41682f:	xor    al,0x2e
  416831:	xor    ch,BYTE PTR [rsi]
  416833:	xor    DWORD PTR [rdi],ebp
  416835:	ja     0x41686d
  416837:	xor    al,0x2d
  416839:	xor    esi,DWORD PTR [rdx]
  41683b:	(bad)  
  41683c:	jne    0x4168b1
  41683e:	jb     0x41686f
  416840:	js     0x41687a
  416842:	ss pop rdi
  416844:	ss xor al,0x2d
  416847:	ja     0x41687f
  416849:	xor    al,0x2d
  41684b:	ins    DWORD PTR es:[rdi],dx
  41684c:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  416853:	ins    BYTE PTR es:[rdi],dx
  416854:	imul   esp,DWORD PTR [rdx+0x20],0x6f666c2d
  41685b:	outs   dx,BYTE PTR ds:[rsi]
  41685c:	je     0x4168c1
  41685e:	outs   dx,DWORD PTR ds:[rsi]
  41685f:	outs   dx,BYTE PTR ds:[rsi]
  416860:	imul   sp,WORD PTR [rdi+0x20],0x6c2d
  416866:	data16 jb 0x4168ce
  416869:	gs je  0x4168e5
  41686c:	jo     0x4168d3
  41686e:	and    BYTE PTR [rax],ah
  416870:	and    BYTE PTR [rax],ah
  416872:	and    BYTE PTR [rip+0x326c676c],ch        # 0x32adcfe4
  416878:	jo     0x4168ed
  41687a:	and    BYTE PTR [rax],ah
  41687c:	sub    eax,0x7664616c
  416881:	(bad)  
  416882:	jo     0x4168ed
  416884:	xor    esi,DWORD PTR [rdx]
  416886:	and    BYTE PTR [rip+0x70616c6c],ch        # 0x70a2d4f8
  41688c:	(bad)  
  41688d:	movsxd ebp,DWORD PTR [rbx+0x20]
  416890:	and    BYTE PTR [rax],ah
  416892:	and    BYTE PTR [rax],ah
  416894:	and    BYTE PTR [rip+0x3273776c],ch        # 0x32b4e006
  41689a:	pop    rdi
  41689b:	xor    esi,DWORD PTR [rdx]
  41689d:	and    BYTE PTR [rax],ah
  41689f:	sub    eax,0x3273776c
  4168a4:	pop    rdi
  4168a5:	xor    esi,DWORD PTR [rdx]
  4168a7:	and    BYTE PTR [rip+0x3273776c],ch        # 0x32b4e019
  4168ad:	pop    rdi
  4168ae:	xor    esi,DWORD PTR [rdx]
  4168b0:	and    BYTE PTR [rax],ah
  4168b2:	and    BYTE PTR [rax],ah
  4168b4:	and    BYTE PTR [rax],ah
  4168b6:	sub    eax,0x7275636c
  4168bb:	ins    BYTE PTR es:[rdi],dx
  4168bc:	and    BYTE PTR [rip+0x6f68636c],ch        # 0x6fa9cc2e
  4168c2:	ins    BYTE PTR es:[rdi],dx
  4168c3:	ins    DWORD PTR es:[rdi],dx
  4168c4:	outs   dx,DWORD PTR ds:[rsi]
  4168c5:	and    BYTE PTR fs:[rip+0x666d756c],ch        # 0x66aede38
  4168cc:	jo     0x41692f
  4168ce:	movsxd ebp,DWORD PTR [rbx+0x20]
  4168d1:	sub    eax,0x646d616c
  4168d6:	and    BYTE PTR [rip+0x6d61636c],ch        # 0x6da2cc48
  4168dc:	and    BYTE PTR fs:[rip+0x6c6f636c],ch        # 0x6cb0cc4f
  4168e3:	(bad)  
  4168e4:	ins    DWORD PTR es:[rdi],dx
  4168e5:	and    BYTE PTR fs:[rip+0x6f63636c],ch        # 0x6fa4cc58
  4168ec:	ins    BYTE PTR es:[rdi],dx
  4168ed:	(bad)  
  4168ee:	ins    DWORD PTR es:[rdi],dx
  4168ef:	and    BYTE PTR fs:[rip+0x7378636c],ch        # 0x73b9cc62
  4168f6:	jo     0x416959
  4168f8:	jb     0x41696d
  4168fa:	and    BYTE PTR gs:[rip+0x6975736c],ch        # 0x69b6dc6d
  416901:	je     0x416968
  416903:	jae    0x416975
  416905:	(bad)  
  416906:	jb     0x41697b
  416908:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  41690c:	imul   sp,WORD PTR [rdi+0x20],0x6c2d
  416912:	(bad)  
  416913:	jb     0x416985
  416915:	(bad)  
  416916:	movsxd ebp,DWORD PTR [rbx+0x20]
  416919:	and    BYTE PTR [rip+0x7572716c],ch        # 0x75b3da8b
  41691f:	jo     0x416985
  416921:	(bad)  
  416922:	je     0x416989
  416924:	and    BYTE PTR [rip+0x7466666c],ch        # 0x74a7cf96
  41692a:	ja     0x41695f
  41692c:	and    BYTE PTR [rax],ah
  41692e:	sub    eax,0x7466666c
  416933:	ja     0x416968
  416935:	data16 and BYTE PTR [rax],ah
  416938:	sub    eax,0x70616c6c
  41693d:	(bad)  
  41693e:	movsxd ebp,DWORD PTR [rbx+0x20]
  416941:	sub    eax,0x616c626c
  416946:	jae    0x416968
  416948:	sub    eax,0x6165726c
  41694d:	fs ins BYTE PTR es:[rdi],dx
  41694f:	imul   ebp,DWORD PTR [rsi+0x65],0x746c2d20
  416956:	gs jb  0x4169c6
  416959:	movsxd esp,DWORD PTR [rcx+0x70]
  41695c:	and    BYTE PTR [rax],ah
  41695e:	sub    eax,0x63732f4c
  416963:	jb     0x4169c6
  416965:	je     0x4169ca
  416967:	push   0x65776a2f
  41696c:	(bad)  
  41696d:	ins    DWORD PTR es:[rdi],dx
  41696e:	js     0x4169d5
  416970:	sub    eax,0x6174636f
  416975:	jbe    0x4169dc
  416977:	(bad)  
  416978:	xor    al,0x2e
  41697a:	xor    ch,BYTE PTR [rsi]
  41697c:	xor    DWORD PTR [rdi],ebp
  41697e:	ja     0x4169b6
  416980:	xor    al,0x2d
  416982:	xor    esi,DWORD PTR [rdx]
  416984:	(bad)  
  416985:	jne    0x4169fa
  416987:	jb     0x4169b8
  416989:	js     0x4169c3
  41698b:	ss pop rdi
  41698d:	ss xor al,0x2d
  416990:	ja     0x4169c8
  416992:	xor    al,0x2d
  416994:	ins    DWORD PTR es:[rdi],dx
  416995:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  41699c:	ins    BYTE PTR es:[rdi],dx
  41699d:	imul   esp,DWORD PTR [rdx+0x20],0x63706c2d
  4169a4:	jb     0x416a0b
  4169a6:	and    BYTE PTR [rax],ah
  4169a8:	and    BYTE PTR [rax],ah
  4169aa:	sub    eax,0x63732f4c
  4169af:	jb     0x416a12
  4169b1:	je     0x416a16
  4169b3:	push   0x65776a2f
  4169b8:	(bad)  
  4169b9:	ins    DWORD PTR es:[rdi],dx
  4169ba:	js     0x416a21
  4169bc:	sub    eax,0x6174636f
  4169c1:	jbe    0x416a28
  4169c3:	(bad)  
  4169c4:	xor    al,0x2e
  4169c6:	xor    ch,BYTE PTR [rsi]
  4169c8:	xor    DWORD PTR [rdi],ebp
  4169ca:	ja     0x416a02
  4169cc:	xor    al,0x2d
  4169ce:	xor    esi,DWORD PTR [rdx]
  4169d0:	(bad)  
  4169d1:	jne    0x416a46
  4169d3:	jb     0x416a04
  4169d5:	js     0x416a0f
  4169d7:	ss pop rdi
  4169d9:	ss xor al,0x2d
  4169dc:	ja     0x416a14
  4169de:	xor    al,0x2d
  4169e0:	ins    DWORD PTR es:[rdi],dx
  4169e1:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4169e8:	ins    BYTE PTR es:[rdi],dx
  4169e9:	imul   esp,DWORD PTR [rdx+0x20],0x732f4c2d
  4169f0:	movsxd esi,DWORD PTR [rdx+0x61]
  4169f3:	je     0x416a58
  4169f5:	push   0x65776a2f
  4169fa:	(bad)  
  4169fb:	ins    DWORD PTR es:[rdi],dx
  4169fc:	js     0x416a63
  4169fe:	sub    eax,0x6174636f
  416a03:	jbe    0x416a6a
  416a05:	(bad)  
  416a06:	xor    al,0x2e
  416a08:	xor    ch,BYTE PTR [rsi]
  416a0a:	xor    DWORD PTR [rdi],ebp
  416a0c:	ja     0x416a44
  416a0e:	xor    al,0x2d
  416a10:	xor    esi,DWORD PTR [rdx]
  416a12:	(bad)  
  416a13:	jne    0x416a88
  416a15:	jb     0x416a46
  416a17:	ins    BYTE PTR es:[rdi],dx
  416a18:	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  416a1f:	js     0x416a59
  416a21:	ss pop rdi
  416a23:	ss xor al,0x2d
  416a26:	ja     0x416a5e
  416a28:	xor    al,0x2d
  416a2a:	ins    DWORD PTR es:[rdi],dx
  416a2b:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  416a32:	xor    al,0x2e
  416a34:	cmp    DWORD PTR [rsi],ebp
  416a36:	xor    al,0x20
  416a38:	sub    eax,0x63732f4c
  416a3d:	jb     0x416aa0
  416a3f:	je     0x416aa4
  416a41:	push   0x65776a2f
  416a46:	(bad)  
  416a47:	ins    DWORD PTR es:[rdi],dx
  416a48:	js     0x416aaf
  416a4a:	sub    eax,0x6174636f
  416a4f:	jbe    0x416ab6
  416a51:	(bad)  
  416a52:	xor    al,0x2e
  416a54:	xor    ch,BYTE PTR [rsi]
  416a56:	xor    DWORD PTR [rdi],ebp
  416a58:	ja     0x416a90
  416a5a:	xor    al,0x2d
  416a5c:	xor    esi,DWORD PTR [rdx]
  416a5e:	(bad)  
  416a5f:	jne    0x416ad4
  416a61:	jb     0x416a92
  416a63:	ins    BYTE PTR es:[rdi],dx
  416a64:	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  416a6b:	js     0x416aa5
  416a6d:	ss pop rdi
  416a6f:	ss xor al,0x2d
  416a72:	ja     0x416aaa
  416a74:	xor    al,0x2d
  416a76:	ins    DWORD PTR es:[rdi],dx
  416a77:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  416a7e:	xor    al,0x2e
  416a80:	cmp    DWORD PTR [rsi],ebp
  416a82:	xor    al,0x2f
  416a84:	cs cs (bad) 
  416a87:	cs cs (bad) 
  416a8a:	cs cs (bad) 
  416a8d:	cs cs (bad) 
  416a90:	js     0x416aca
  416a92:	ss pop rdi
  416a94:	ss xor al,0x2d
  416a97:	ja     0x416acf
  416a99:	xor    al,0x2d
  416a9b:	ins    DWORD PTR es:[rdi],dx
  416a9c:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  416aa3:	ins    BYTE PTR es:[rdi],dx
  416aa4:	imul   esp,DWORD PTR [rdx+0x2f],0x6c2f2e2e
  416aab:	imul   esp,DWORD PTR [rdx+0x20],0x732f4c2d
  416ab2:	movsxd esi,DWORD PTR [rdx+0x61]
  416ab5:	je     0x416b1a
  416ab7:	push   0x65776a2f
  416abc:	(bad)  
  416abd:	ins    DWORD PTR es:[rdi],dx
  416abe:	js     0x416b25
  416ac0:	sub    eax,0x6174636f
  416ac5:	jbe    0x416b2c
  416ac7:	(bad)  
  416ac8:	xor    al,0x2e
  416aca:	xor    ch,BYTE PTR [rsi]
  416acc:	xor    DWORD PTR [rdi],ebp
  416ace:	ja     0x416b06
  416ad0:	xor    al,0x2d
  416ad2:	xor    esi,DWORD PTR [rdx]
  416ad4:	(bad)  
  416ad5:	jne    0x416b4a
  416ad7:	jb     0x416b08
  416ad9:	ins    DWORD PTR es:[rdi],dx
  416ada:	imul   ebp,DWORD PTR [rsi+0x67],0x696c2f77
  416ae1:	(bad)  
  416ae2:	(bad)  
  416ae3:	cs cs (bad) 
  416ae6:	ins    BYTE PTR es:[rdi],dx
  416ae7:	imul   esp,DWORD PTR [rdx+0x20],0x732f4c2d
  416aee:	movsxd esi,DWORD PTR [rdx+0x61]
  416af1:	je     0x416b56
  416af3:	push   0x65776a2f
  416af8:	(bad)  
  416af9:	ins    DWORD PTR es:[rdi],dx
  416afa:	js     0x416b61
  416afc:	sub    eax,0x6174636f
  416b01:	jbe    0x416b68
  416b03:	(bad)  
  416b04:	xor    al,0x2e
  416b06:	xor    ch,BYTE PTR [rsi]
  416b08:	xor    DWORD PTR [rdi],ebp
  416b0a:	ja     0x416b42
  416b0c:	xor    al,0x2d
  416b0e:	xor    esi,DWORD PTR [rdx]
  416b10:	(bad)  
  416b11:	jne    0x416b86
  416b13:	jb     0x416b44
  416b15:	ins    BYTE PTR es:[rdi],dx
  416b16:	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  416b1d:	js     0x416b57
  416b1f:	ss pop rdi
  416b21:	ss xor al,0x2d
  416b24:	ja     0x416b5c
  416b26:	xor    al,0x2d
  416b28:	ins    DWORD PTR es:[rdi],dx
  416b29:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  416b30:	xor    al,0x2e
  416b32:	cmp    DWORD PTR [rsi],ebp
  416b34:	xor    al,0x2f
  416b36:	cs cs (bad) 
  416b39:	cs cs (bad) 
  416b3c:	cs cs (bad) 
  416b3f:	cs cs (bad) 
  416b42:	js     0x416b7c
  416b44:	ss pop rdi
  416b46:	ss xor al,0x2d
  416b49:	ja     0x416b81
  416b4b:	xor    al,0x2d
  416b4d:	ins    DWORD PTR es:[rdi],dx
  416b4e:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  416b55:	ins    BYTE PTR es:[rdi],dx
  416b56:	imul   esp,DWORD PTR [rdx+0x20],0x732f4c2d
  416b5d:	movsxd esi,DWORD PTR [rdx+0x61]
  416b60:	je     0x416bc5
  416b62:	push   0x65776a2f
  416b67:	(bad)  
  416b68:	ins    DWORD PTR es:[rdi],dx
  416b69:	js     0x416bd0
  416b6b:	sub    eax,0x6174636f
  416b70:	jbe    0x416bd7
  416b72:	(bad)  
  416b73:	xor    al,0x2e
  416b75:	xor    ch,BYTE PTR [rsi]
  416b77:	xor    DWORD PTR [rdi],ebp
  416b79:	ja     0x416bb1
  416b7b:	xor    al,0x2d
  416b7d:	xor    esi,DWORD PTR [rdx]
  416b7f:	(bad)  
  416b80:	jne    0x416bf5
  416b82:	jb     0x416bb3
  416b84:	ins    DWORD PTR es:[rdi],dx
  416b85:	imul   ebp,DWORD PTR [rsi+0x67],0x696c2f77
  416b8c:	(bad)  
  416b8d:	and    BYTE PTR [rip+0x2d206d6c],ch        # 0x2d61d8ff
  416b93:	ins    BYTE PTR es:[rdi],dx
  416b94:	outs   dx,WORD PTR ds:[esi]
  416b97:	jb     0x416c0d
  416b99:	jb     0x416bfc
  416b9b:	outs   dx,BYTE PTR ds:[rsi]
  416b9c:	and    BYTE PTR [rip+0x6e696d6c],ch        # 0x6eaad90e
  416ba2:	addr32 ja 0x416bd8
  416ba5:	xor    ah,BYTE PTR [rax]
  416ba7:	sub    eax,0x6c6f6d6c
  416bac:	outs   dx,BYTE PTR fs:[rsi]
  416bae:	(bad)  
  416baf:	ins    DWORD PTR es:[rdi],dx
  416bb0:	and    BYTE PTR gs:[rip+0x6e696d6c],ch        # 0x6eaad923
  416bb7:	addr32 ja 0x416c1f
  416bba:	js     0x416bdc
  416bbc:	sub    eax,0x76736d6c
  416bc1:	movsxd esi,DWORD PTR [rdx+0x74]
  416bc4:	and    BYTE PTR [rip+0x6175716c],ch        # 0x61b6dd36
  416bca:	fs ins DWORD PTR es:[rdi],dx
  416bcc:	(bad)  
  416bcd:	je     0x416c37
  416bcf:	and    BYTE PTR [rip+0x7664616c],ch        # 0x76a5cd41
  416bd5:	(bad)  
  416bd6:	jo     0x416c41
  416bd8:	xor    esi,DWORD PTR [rdx]
  416bda:	and    BYTE PTR [rip+0x6568736c],ch        # 0x65a9df4c
  416be0:	ins    BYTE PTR es:[rdi],dx
  416be1:	ins    BYTE PTR es:[rdi],dx
  416be2:	xor    esi,DWORD PTR [rdx]
  416be4:	and    BYTE PTR [rip+0x6573756c],ch        # 0x65b4e156
  416bea:	jb     0x416c1f
  416bec:	xor    ah,BYTE PTR [rax]
  416bee:	sub    eax,0x72656b6c
  416bf3:	outs   dx,BYTE PTR ds:[rsi]
  416bf4:	gs ins BYTE PTR es:[rdi],dx
  416bf6:	xor    esi,DWORD PTR [rdx]
  416bf8:	and    BYTE PTR [rip+0x20206d6c],ch        # 0x2061d96a
  416bfe:	and    BYTE PTR [rip+0x6964676c],ch        # 0x69a5d370
  416c04:	xor    esi,DWORD PTR [rdx]
  416c06:	and    BYTE PTR [rip+0x3273776c],ch        # 0x32b4e378
  416c0c:	pop    rdi
  416c0d:	xor    esi,DWORD PTR [rdx]
  416c0f:	and    BYTE PTR [rip+0x6573756c],ch        # 0x65b4e181
  416c15:	jb     0x416c4a
  416c17:	xor    ah,BYTE PTR [rax]
  416c19:	sub    eax,0x72656b6c
  416c1e:	outs   dx,BYTE PTR ds:[rsi]
  416c1f:	gs ins BYTE PTR es:[rdi],dx
  416c21:	xor    esi,DWORD PTR [rdx]
  416c23:	and    BYTE PTR [rip+0x6964676c],ch        # 0x69a5d395
  416c29:	xor    esi,DWORD PTR [rdx]
  416c2b:	and    BYTE PTR [rip+0x3273776c],ch        # 0x32b4e39d
  416c31:	pop    rdi
  416c32:	xor    esi,DWORD PTR [rdx]
  416c34:	and    BYTE PTR [rip+0x6573756c],ch        # 0x65b4e1a6
  416c3a:	jb     0x416c6f
  416c3c:	xor    ah,BYTE PTR [rax]
  416c3e:	sub    eax,0x72656b6c
  416c43:	outs   dx,BYTE PTR ds:[rsi]
  416c44:	gs ins BYTE PTR es:[rdi],dx
  416c46:	xor    esi,DWORD PTR [rdx]
  416c48:	add    BYTE PTR [rdi+0x43],cl
  416c4b:	push   rsp
  416c4c:	push   r14
  416c4e:	rex.RB pop r15
  416c50:	rex.WR
  416c51:	rex.WB
  416c52:	rex.WRX
  416c53:	rex.WXB pop r15
  416c55:	rex.R
  416c56:	rex.RB push r8
  416c58:	push   rbx
  416c59:	add    BYTE PTR [rax],al
  416c5b:	add    BYTE PTR [rax],al
  416c5d:	add    BYTE PTR [rax],al
  416c5f:	add    BYTE PTR [rax],ah
  416c61:	and    BYTE PTR [rip+0x63732f4c],ch        # 0x63b49bb3
  416c67:	jb     0x416cca
  416c69:	je     0x416cce
  416c6b:	push   0x65776a2f
  416c70:	(bad)  
  416c71:	ins    DWORD PTR es:[rdi],dx
  416c72:	js     0x416cd9
  416c74:	sub    eax,0x6174636f
  416c79:	jbe    0x416ce0
  416c7b:	(bad)  
  416c7c:	xor    al,0x2e
  416c7e:	xor    ch,BYTE PTR [rsi]
  416c80:	xor    DWORD PTR [rdi],ebp
  416c82:	ja     0x416cba
  416c84:	xor    al,0x2d
  416c86:	xor    esi,DWORD PTR [rdx]
  416c88:	(bad)  
  416c89:	jne    0x416cfe
  416c8b:	jb     0x416cbc
  416c8d:	js     0x416cc7
  416c8f:	ss pop rdi
  416c91:	ss xor al,0x2d
  416c94:	ja     0x416ccc
  416c96:	xor    al,0x2d
  416c98:	ins    DWORD PTR es:[rdi],dx
  416c99:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  416ca0:	ins    BYTE PTR es:[rdi],dx
  416ca1:	imul   esp,DWORD PTR [rdx+0x20],0x4c2d2020
  416ca8:	(bad)  
  416ca9:	jae    0x416d0e
  416cab:	jb     0x416d0e
  416cad:	je     0x416d12
  416caf:	push   0x65776a2f
  416cb4:	(bad)  
  416cb5:	ins    DWORD PTR es:[rdi],dx
  416cb6:	js     0x416d1d
  416cb8:	sub    eax,0x6174636f
  416cbd:	jbe    0x416d24
  416cbf:	(bad)  
  416cc0:	xor    al,0x2e
  416cc2:	xor    ch,BYTE PTR [rsi]
  416cc4:	xor    DWORD PTR [rdi],ebp
  416cc6:	ja     0x416cfe
  416cc8:	xor    al,0x2d
  416cca:	xor    esi,DWORD PTR [rdx]
  416ccc:	(bad)  
  416ccd:	jne    0x416d42
  416ccf:	jb     0x416d00
  416cd1:	js     0x416d0b
  416cd3:	ss pop rdi
  416cd5:	ss xor al,0x2d
  416cd8:	ja     0x416d10
  416cda:	xor    al,0x2d
  416cdc:	ins    DWORD PTR es:[rdi],dx
  416cdd:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  416ce4:	ins    BYTE PTR es:[rdi],dx
  416ce5:	imul   esp,DWORD PTR [rdx+0x20],0x2f4c2d20
  416cec:	jae    0x416d51
  416cee:	jb     0x416d51
  416cf0:	je     0x416d55
  416cf2:	push   0x65776a2f
  416cf7:	(bad)  
  416cf8:	ins    DWORD PTR es:[rdi],dx
  416cf9:	js     0x416d60
  416cfb:	sub    eax,0x6174636f
  416d00:	jbe    0x416d67
  416d02:	(bad)  
  416d03:	xor    al,0x2e
  416d05:	xor    ch,BYTE PTR [rsi]
  416d07:	xor    DWORD PTR [rdi],ebp
  416d09:	ja     0x416d41
  416d0b:	xor    al,0x2d
  416d0d:	xor    esi,DWORD PTR [rdx]
  416d0f:	(bad)  
  416d10:	jne    0x416d85
  416d12:	jb     0x416d43
  416d14:	js     0x416d4e
  416d16:	ss pop rdi
  416d18:	ss xor al,0x2d
  416d1b:	ja     0x416d53
  416d1d:	xor    al,0x2d
  416d1f:	ins    DWORD PTR es:[rdi],dx
  416d20:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  416d27:	ins    BYTE PTR es:[rdi],dx
  416d28:	imul   esp,DWORD PTR [rdx+0x20],0x20202020
  416d2f:	and    BYTE PTR [rax],ah
  416d31:	and    BYTE PTR [rax],ah
  416d33:	and    BYTE PTR [rax],ah
  416d35:	and    BYTE PTR [rip+0x63732f4c],ch        # 0x63b49c87
  416d3b:	jb     0x416d9e
  416d3d:	je     0x416da2
  416d3f:	push   0x65776a2f
  416d44:	(bad)  
  416d45:	ins    DWORD PTR es:[rdi],dx
  416d46:	js     0x416dad
  416d48:	sub    eax,0x6174636f
  416d4d:	jbe    0x416db4
  416d4f:	(bad)  
  416d50:	xor    al,0x2e
  416d52:	xor    ch,BYTE PTR [rsi]
  416d54:	xor    DWORD PTR [rdi],ebp
  416d56:	ja     0x416d8e
  416d58:	xor    al,0x2d
  416d5a:	xor    esi,DWORD PTR [rdx]
  416d5c:	(bad)  
  416d5d:	jne    0x416dd2
  416d5f:	jb     0x416d90
  416d61:	js     0x416d9b
  416d63:	ss pop rdi
  416d65:	ss xor al,0x2d
  416d68:	ja     0x416da0
  416d6a:	xor    al,0x2d
  416d6c:	ins    DWORD PTR es:[rdi],dx
  416d6d:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  416d74:	ins    BYTE PTR es:[rdi],dx
  416d75:	imul   esp,DWORD PTR [rdx+0x20],0x4c2d2020
  416d7c:	(bad)  
  416d7d:	jae    0x416de2
  416d7f:	jb     0x416de2
  416d81:	je     0x416de6
  416d83:	push   0x65776a2f
  416d88:	(bad)  
  416d89:	ins    DWORD PTR es:[rdi],dx
  416d8a:	js     0x416df1
  416d8c:	sub    eax,0x6174636f
  416d91:	jbe    0x416df8
  416d93:	(bad)  
  416d94:	xor    al,0x2e
  416d96:	xor    ch,BYTE PTR [rsi]
  416d98:	xor    DWORD PTR [rdi],ebp
  416d9a:	ja     0x416dd2
  416d9c:	xor    al,0x2d
  416d9e:	xor    esi,DWORD PTR [rdx]
  416da0:	(bad)  
  416da1:	jne    0x416e16
  416da3:	jb     0x416dd4
  416da5:	js     0x416ddf
  416da7:	ss pop rdi
  416da9:	ss xor al,0x2d
  416dac:	ja     0x416de4
  416dae:	xor    al,0x2d
  416db0:	ins    DWORD PTR es:[rdi],dx
  416db1:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  416db8:	ins    BYTE PTR es:[rdi],dx
  416db9:	imul   esp,DWORD PTR [rdx+0x20],0x2f4c2d20
  416dc0:	jae    0x416e25
  416dc2:	jb     0x416e25
  416dc4:	je     0x416e29
  416dc6:	push   0x65776a2f
  416dcb:	(bad)  
  416dcc:	ins    DWORD PTR es:[rdi],dx
  416dcd:	js     0x416e34
  416dcf:	sub    eax,0x6174636f
  416dd4:	jbe    0x416e3b
  416dd6:	(bad)  
  416dd7:	xor    al,0x2e
  416dd9:	xor    ch,BYTE PTR [rsi]
  416ddb:	xor    DWORD PTR [rdi],ebp
  416ddd:	ja     0x416e15
  416ddf:	xor    al,0x2d
  416de1:	xor    esi,DWORD PTR [rdx]
  416de3:	(bad)  
  416de4:	jne    0x416e59
  416de6:	jb     0x416e17
  416de8:	js     0x416e22
  416dea:	ss pop rdi
  416dec:	ss xor al,0x2d
  416def:	ja     0x416e27
  416df1:	xor    al,0x2d
  416df3:	ins    DWORD PTR es:[rdi],dx
  416df4:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  416dfb:	ins    BYTE PTR es:[rdi],dx
  416dfc:	imul   esp,DWORD PTR [rdx+0x20],0x54434f00
  416e03:	push   r14
  416e05:	rex.RB pop r15
  416e07:	rex.WR
  416e08:	rex.WB
  416e09:	rex.WRX
  416e0a:	rex.WXB pop r15
  416e0c:	rex.WRXB push r8
  416e0e:	push   rsp
  416e0f:	push   rbx
	...
  416e18:	and    BYTE PTR [rax],ah
  416e1a:	sub    eax,0x63732f4c
  416e1f:	jb     0x416e82
  416e21:	je     0x416e86
  416e23:	push   0x65776a2f
  416e28:	(bad)  
  416e29:	ins    DWORD PTR es:[rdi],dx
  416e2a:	js     0x416e91
  416e2c:	sub    eax,0x6174636f
  416e31:	jbe    0x416e98
  416e33:	(bad)  
  416e34:	xor    al,0x2e
  416e36:	xor    ch,BYTE PTR [rsi]
  416e38:	xor    DWORD PTR [rdi],ebp
  416e3a:	ja     0x416e72
  416e3c:	xor    al,0x2d
  416e3e:	xor    esi,DWORD PTR [rdx]
  416e40:	(bad)  
  416e41:	jne    0x416eb6
  416e43:	jb     0x416e74
  416e45:	js     0x416e7f
  416e47:	ss pop rdi
  416e49:	ss xor al,0x2d
  416e4c:	ja     0x416e84
  416e4e:	xor    al,0x2d
  416e50:	ins    DWORD PTR es:[rdi],dx
  416e51:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  416e58:	ins    BYTE PTR es:[rdi],dx
  416e59:	imul   esp,DWORD PTR [rdx+0x20],0x72666c2d
  416e60:	gs gs je 0x416edd
  416e64:	jo     0x416ecb
  416e66:	and    BYTE PTR [rax],ah
  416e68:	sub    eax,0x6664686c
  416e6d:	xor    eax,0x476c2d20
  416e72:	jb     0x416ed5
  416e74:	jo     0x416ede
  416e76:	imul   esp,DWORD PTR [rbx+0x73],0x6967614d
  416e7d:	movsxd ebp,DWORD PTR [rbx+0x2b]
  416e80:	sub    esp,DWORD PTR [rax]
  416e82:	sub    eax,0x6172476c
  416e87:	jo     0x416ef1
  416e89:	imul   esp,DWORD PTR [rbx+0x73],0x6967614d
  416e90:	movsxd ebp,DWORD PTR [rbx+0x20]
  416e93:	and    BYTE PTR [rip+0x2d207a6c],ch        # 0x2d61e905
  416e99:	ins    BYTE PTR es:[rdi],dx
  416e9a:	data16 data16 je 0x416f15
  416e9e:	xor    esp,DWORD PTR [rax]
  416ea0:	and    BYTE PTR [rip+0x7466666c],ch        # 0x74a7d512
  416ea6:	ja     0x416edb
  416ea8:	data16 and BYTE PTR [rax],ah
  416eab:	sub    eax,0x65706f6c
  416eb0:	outs   dx,BYTE PTR ds:[rsi]
  416eb1:	ins    BYTE PTR es:[edi],dx
  416eb3:	xor    esi,DWORD PTR [rdx]
  416eb5:	and    BYTE PTR [rip+0x756c676c],ch        # 0x75add627
  416ebb:	xor    esi,DWORD PTR [rdx]
  416ebd:	and    BYTE PTR [rip+0x63732f4c],ch        # 0x63b49e0f
  416ec3:	jb     0x416f26
  416ec5:	je     0x416f2a
  416ec7:	push   0x65776a2f
  416ecc:	(bad)  
  416ecd:	ins    DWORD PTR es:[rdi],dx
  416ece:	js     0x416f35
  416ed0:	sub    eax,0x6174636f
  416ed5:	jbe    0x416f3c
  416ed7:	(bad)  
  416ed8:	xor    al,0x2e
  416eda:	xor    ch,BYTE PTR [rsi]
  416edc:	xor    DWORD PTR [rdi],ebp
  416ede:	ja     0x416f16
  416ee0:	xor    al,0x2d
  416ee2:	xor    esi,DWORD PTR [rdx]
  416ee4:	(bad)  
  416ee5:	jne    0x416f5a
  416ee7:	jb     0x416f18
  416ee9:	js     0x416f23
  416eeb:	ss pop rdi
  416eed:	ss xor al,0x2d
  416ef0:	ja     0x416f28
  416ef2:	xor    al,0x2d
  416ef4:	ins    DWORD PTR es:[rdi],dx
  416ef5:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  416efc:	ins    BYTE PTR es:[rdi],dx
  416efd:	imul   esp,DWORD PTR [rdx+0x20],0x6f666c2d
  416f04:	outs   dx,BYTE PTR ds:[rsi]
  416f05:	je     0x416f6a
  416f07:	outs   dx,DWORD PTR ds:[rsi]
  416f08:	outs   dx,BYTE PTR ds:[rsi]
  416f09:	imul   sp,WORD PTR [rdi+0x20],0x6c2d
  416f0f:	data16 jb 0x416f77
  416f12:	gs je  0x416f8e
  416f15:	jo     0x416f7c
  416f17:	and    BYTE PTR [rax],ah
  416f19:	and    BYTE PTR [rax],ah
  416f1b:	and    BYTE PTR [rip+0x326c676c],ch        # 0x32add68d
  416f21:	jo     0x416f96
  416f23:	and    BYTE PTR [rax],ah
  416f25:	sub    eax,0x7664616c
  416f2a:	(bad)  
  416f2b:	jo     0x416f96
  416f2d:	xor    esi,DWORD PTR [rdx]
  416f2f:	and    BYTE PTR [rip+0x70616c6c],ch        # 0x70a2dba1
  416f35:	(bad)  
  416f36:	movsxd ebp,DWORD PTR [rbx+0x20]
  416f39:	and    BYTE PTR [rax],ah
  416f3b:	and    BYTE PTR [rax],ah
  416f3d:	and    BYTE PTR [rip+0x3273776c],ch        # 0x32b4e6af
  416f43:	pop    rdi
  416f44:	xor    esi,DWORD PTR [rdx]
  416f46:	and    BYTE PTR [rax],ah
  416f48:	sub    eax,0x3273776c
  416f4d:	pop    rdi
  416f4e:	xor    esi,DWORD PTR [rdx]
  416f50:	and    BYTE PTR [rip+0x3273776c],ch        # 0x32b4e6c2
  416f56:	pop    rdi
  416f57:	xor    esi,DWORD PTR [rdx]
  416f59:	and    BYTE PTR [rax],ah
  416f5b:	and    BYTE PTR [rax],ah
  416f5d:	and    BYTE PTR [rax],ah
  416f5f:	sub    eax,0x7275636c
  416f64:	ins    BYTE PTR es:[rdi],dx
  416f65:	and    BYTE PTR [rip+0x6f68636c],ch        # 0x6fa9d2d7
  416f6b:	ins    BYTE PTR es:[rdi],dx
  416f6c:	ins    DWORD PTR es:[rdi],dx
  416f6d:	outs   dx,DWORD PTR ds:[rsi]
  416f6e:	and    BYTE PTR fs:[rip+0x666d756c],ch        # 0x66aee4e1
  416f75:	jo     0x416fd8
  416f77:	movsxd ebp,DWORD PTR [rbx+0x20]
  416f7a:	sub    eax,0x646d616c
  416f7f:	and    BYTE PTR [rip+0x6d61636c],ch        # 0x6da2d2f1
  416f85:	and    BYTE PTR fs:[rip+0x6c6f636c],ch        # 0x6cb0d2f8
  416f8c:	(bad)  
  416f8d:	ins    DWORD PTR es:[rdi],dx
  416f8e:	and    BYTE PTR fs:[rip+0x6f63636c],ch        # 0x6fa4d301
  416f95:	ins    BYTE PTR es:[rdi],dx
  416f96:	(bad)  
  416f97:	ins    DWORD PTR es:[rdi],dx
  416f98:	and    BYTE PTR fs:[rip+0x7378636c],ch        # 0x73b9d30b
  416f9f:	jo     0x417002
  416fa1:	jb     0x417016
  416fa3:	and    BYTE PTR gs:[rip+0x6975736c],ch        # 0x69b6e316
  416faa:	je     0x417011
  416fac:	jae    0x41701e
  416fae:	(bad)  
  416faf:	jb     0x417024
  416fb1:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  416fb5:	imul   sp,WORD PTR [rdi+0x20],0x6c2d
  416fbb:	(bad)  
  416fbc:	jb     0x41702e
  416fbe:	(bad)  
  416fbf:	movsxd ebp,DWORD PTR [rbx+0x20]
  416fc2:	and    BYTE PTR [rip+0x7572716c],ch        # 0x75b3e134
  416fc8:	jo     0x41702e
  416fca:	(bad)  
  416fcb:	je     0x417032
  416fcd:	and    BYTE PTR [rip+0x7466666c],ch        # 0x74a7d63f
  416fd3:	ja     0x417008
  416fd5:	and    BYTE PTR [rax],ah
  416fd7:	sub    eax,0x7466666c
  416fdc:	ja     0x417011
  416fde:	data16 and BYTE PTR [rax],ah
  416fe1:	sub    eax,0x70616c6c
  416fe6:	(bad)  
  416fe7:	movsxd ebp,DWORD PTR [rbx+0x20]
  416fea:	sub    eax,0x616c626c
  416fef:	jae    0x417011
  416ff1:	sub    eax,0x6165726c
  416ff6:	fs ins BYTE PTR es:[rdi],dx
  416ff8:	imul   ebp,DWORD PTR [rsi+0x65],0x746c2d20
  416fff:	gs jb  0x41706f
  417002:	movsxd esp,DWORD PTR [rcx+0x70]
  417005:	and    BYTE PTR [rax],ah
  417007:	sub    eax,0x63732f4c
  41700c:	jb     0x41706f
  41700e:	je     0x417073
  417010:	push   0x65776a2f
  417015:	(bad)  
  417016:	ins    DWORD PTR es:[rdi],dx
  417017:	js     0x41707e
  417019:	sub    eax,0x6174636f
  41701e:	jbe    0x417085
  417020:	(bad)  
  417021:	xor    al,0x2e
  417023:	xor    ch,BYTE PTR [rsi]
  417025:	xor    DWORD PTR [rdi],ebp
  417027:	ja     0x41705f
  417029:	xor    al,0x2d
  41702b:	xor    esi,DWORD PTR [rdx]
  41702d:	(bad)  
  41702e:	jne    0x4170a3
  417030:	jb     0x417061
  417032:	js     0x41706c
  417034:	ss pop rdi
  417036:	ss xor al,0x2d
  417039:	ja     0x417071
  41703b:	xor    al,0x2d
  41703d:	ins    DWORD PTR es:[rdi],dx
  41703e:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  417045:	ins    BYTE PTR es:[rdi],dx
  417046:	imul   esp,DWORD PTR [rdx+0x20],0x63706c2d
  41704d:	jb     0x4170b4
  41704f:	and    BYTE PTR [rax],ah
  417051:	and    BYTE PTR [rax],ah
  417053:	sub    eax,0x63732f4c
  417058:	jb     0x4170bb
  41705a:	je     0x4170bf
  41705c:	push   0x65776a2f
  417061:	(bad)  
  417062:	ins    DWORD PTR es:[rdi],dx
  417063:	js     0x4170ca
  417065:	sub    eax,0x6174636f
  41706a:	jbe    0x4170d1
  41706c:	(bad)  
  41706d:	xor    al,0x2e
  41706f:	xor    ch,BYTE PTR [rsi]
  417071:	xor    DWORD PTR [rdi],ebp
  417073:	ja     0x4170ab
  417075:	xor    al,0x2d
  417077:	xor    esi,DWORD PTR [rdx]
  417079:	(bad)  
  41707a:	jne    0x4170ef
  41707c:	jb     0x4170ad
  41707e:	js     0x4170b8
  417080:	ss pop rdi
  417082:	ss xor al,0x2d
  417085:	ja     0x4170bd
  417087:	xor    al,0x2d
  417089:	ins    DWORD PTR es:[rdi],dx
  41708a:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  417091:	ins    BYTE PTR es:[rdi],dx
  417092:	imul   esp,DWORD PTR [rdx+0x20],0x732f4c2d
  417099:	movsxd esi,DWORD PTR [rdx+0x61]
  41709c:	je     0x417101
  41709e:	push   0x65776a2f
  4170a3:	(bad)  
  4170a4:	ins    DWORD PTR es:[rdi],dx
  4170a5:	js     0x41710c
  4170a7:	sub    eax,0x6174636f
  4170ac:	jbe    0x417113
  4170ae:	(bad)  
  4170af:	xor    al,0x2e
  4170b1:	xor    ch,BYTE PTR [rsi]
  4170b3:	xor    DWORD PTR [rdi],ebp
  4170b5:	ja     0x4170ed
  4170b7:	xor    al,0x2d
  4170b9:	xor    esi,DWORD PTR [rdx]
  4170bb:	(bad)  
  4170bc:	jne    0x417131
  4170be:	jb     0x4170ef
  4170c0:	ins    BYTE PTR es:[rdi],dx
  4170c1:	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  4170c8:	js     0x417102
  4170ca:	ss pop rdi
  4170cc:	ss xor al,0x2d
  4170cf:	ja     0x417107
  4170d1:	xor    al,0x2d
  4170d3:	ins    DWORD PTR es:[rdi],dx
  4170d4:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4170db:	xor    al,0x2e
  4170dd:	cmp    DWORD PTR [rsi],ebp
  4170df:	xor    al,0x20
  4170e1:	sub    eax,0x63732f4c
  4170e6:	jb     0x417149
  4170e8:	je     0x41714d
  4170ea:	push   0x65776a2f
  4170ef:	(bad)  
  4170f0:	ins    DWORD PTR es:[rdi],dx
  4170f1:	js     0x417158
  4170f3:	sub    eax,0x6174636f
  4170f8:	jbe    0x41715f
  4170fa:	(bad)  
  4170fb:	xor    al,0x2e
  4170fd:	xor    ch,BYTE PTR [rsi]
  4170ff:	xor    DWORD PTR [rdi],ebp
  417101:	ja     0x417139
  417103:	xor    al,0x2d
  417105:	xor    esi,DWORD PTR [rdx]
  417107:	(bad)  
  417108:	jne    0x41717d
  41710a:	jb     0x41713b
  41710c:	ins    BYTE PTR es:[rdi],dx
  41710d:	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  417114:	js     0x41714e
  417116:	ss pop rdi
  417118:	ss xor al,0x2d
  41711b:	ja     0x417153
  41711d:	xor    al,0x2d
  41711f:	ins    DWORD PTR es:[rdi],dx
  417120:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  417127:	xor    al,0x2e
  417129:	cmp    DWORD PTR [rsi],ebp
  41712b:	xor    al,0x2f
  41712d:	cs cs (bad) 
  417130:	cs cs (bad) 
  417133:	cs cs (bad) 
  417136:	cs cs (bad) 
  417139:	js     0x417173
  41713b:	ss pop rdi
  41713d:	ss xor al,0x2d
  417140:	ja     0x417178
  417142:	xor    al,0x2d
  417144:	ins    DWORD PTR es:[rdi],dx
  417145:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  41714c:	ins    BYTE PTR es:[rdi],dx
  41714d:	imul   esp,DWORD PTR [rdx+0x2f],0x6c2f2e2e
  417154:	imul   esp,DWORD PTR [rdx+0x20],0x732f4c2d
  41715b:	movsxd esi,DWORD PTR [rdx+0x61]
  41715e:	je     0x4171c3
  417160:	push   0x65776a2f
  417165:	(bad)  
  417166:	ins    DWORD PTR es:[rdi],dx
  417167:	js     0x4171ce
  417169:	sub    eax,0x6174636f
  41716e:	jbe    0x4171d5
  417170:	(bad)  
  417171:	xor    al,0x2e
  417173:	xor    ch,BYTE PTR [rsi]
  417175:	xor    DWORD PTR [rdi],ebp
  417177:	ja     0x4171af
  417179:	xor    al,0x2d
  41717b:	xor    esi,DWORD PTR [rdx]
  41717d:	(bad)  
  41717e:	jne    0x4171f3
  417180:	jb     0x4171b1
  417182:	ins    DWORD PTR es:[rdi],dx
  417183:	imul   ebp,DWORD PTR [rsi+0x67],0x696c2f77
  41718a:	(bad)  
  41718b:	(bad)  
  41718c:	cs cs (bad) 
  41718f:	ins    BYTE PTR es:[rdi],dx
  417190:	imul   esp,DWORD PTR [rdx+0x20],0x732f4c2d
  417197:	movsxd esi,DWORD PTR [rdx+0x61]
  41719a:	je     0x4171ff
  41719c:	push   0x65776a2f
  4171a1:	(bad)  
  4171a2:	ins    DWORD PTR es:[rdi],dx
  4171a3:	js     0x41720a
  4171a5:	sub    eax,0x6174636f
  4171aa:	jbe    0x417211
  4171ac:	(bad)  
  4171ad:	xor    al,0x2e
  4171af:	xor    ch,BYTE PTR [rsi]
  4171b1:	xor    DWORD PTR [rdi],ebp
  4171b3:	ja     0x4171eb
  4171b5:	xor    al,0x2d
  4171b7:	xor    esi,DWORD PTR [rdx]
  4171b9:	(bad)  
  4171ba:	jne    0x41722f
  4171bc:	jb     0x4171ed
  4171be:	ins    BYTE PTR es:[rdi],dx
  4171bf:	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  4171c6:	js     0x417200
  4171c8:	ss pop rdi
  4171ca:	ss xor al,0x2d
  4171cd:	ja     0x417205
  4171cf:	xor    al,0x2d
  4171d1:	ins    DWORD PTR es:[rdi],dx
  4171d2:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4171d9:	xor    al,0x2e
  4171db:	cmp    DWORD PTR [rsi],ebp
  4171dd:	xor    al,0x2f
  4171df:	cs cs (bad) 
  4171e2:	cs cs (bad) 
  4171e5:	cs cs (bad) 
  4171e8:	cs cs (bad) 
  4171eb:	js     0x417225
  4171ed:	ss pop rdi
  4171ef:	ss xor al,0x2d
  4171f2:	ja     0x41722a
  4171f4:	xor    al,0x2d
  4171f6:	ins    DWORD PTR es:[rdi],dx
  4171f7:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4171fe:	ins    BYTE PTR es:[rdi],dx
  4171ff:	imul   esp,DWORD PTR [rdx+0x20],0x732f4c2d
  417206:	movsxd esi,DWORD PTR [rdx+0x61]
  417209:	je     0x41726e
  41720b:	push   0x65776a2f
  417210:	(bad)  
  417211:	ins    DWORD PTR es:[rdi],dx
  417212:	js     0x417279
  417214:	sub    eax,0x6174636f
  417219:	jbe    0x417280
  41721b:	(bad)  
  41721c:	xor    al,0x2e
  41721e:	xor    ch,BYTE PTR [rsi]
  417220:	xor    DWORD PTR [rdi],ebp
  417222:	ja     0x41725a
  417224:	xor    al,0x2d
  417226:	xor    esi,DWORD PTR [rdx]
  417228:	(bad)  
  417229:	jne    0x41729e
  41722b:	jb     0x41725c
  41722d:	ins    DWORD PTR es:[rdi],dx
  41722e:	imul   ebp,DWORD PTR [rsi+0x67],0x696c2f77
  417235:	(bad)  
  417236:	and    BYTE PTR [rip+0x2d206d6c],ch        # 0x2d61dfa8
  41723c:	ins    BYTE PTR es:[rdi],dx
  41723d:	outs   dx,WORD PTR ds:[esi]
  417240:	jb     0x4172b6
  417242:	jb     0x4172a5
  417244:	outs   dx,BYTE PTR ds:[rsi]
  417245:	and    BYTE PTR [rip+0x6e696d6c],ch        # 0x6eaadfb7
  41724b:	addr32 ja 0x417281
  41724e:	xor    ah,BYTE PTR [rax]
  417250:	sub    eax,0x6c6f6d6c
  417255:	outs   dx,BYTE PTR fs:[rsi]
  417257:	(bad)  
  417258:	ins    DWORD PTR es:[rdi],dx
  417259:	and    BYTE PTR gs:[rip+0x6e696d6c],ch        # 0x6eaadfcc
  417260:	addr32 ja 0x4172c8
  417263:	js     0x417285
  417265:	sub    eax,0x76736d6c
  41726a:	movsxd esi,DWORD PTR [rdx+0x74]
  41726d:	and    BYTE PTR [rip+0x6175716c],ch        # 0x61b6e3df
  417273:	fs ins DWORD PTR es:[rdi],dx
  417275:	(bad)  
  417276:	je     0x4172e0
  417278:	and    BYTE PTR [rip+0x7664616c],ch        # 0x76a5d3ea
  41727e:	(bad)  
  41727f:	jo     0x4172ea
  417281:	xor    esi,DWORD PTR [rdx]
  417283:	and    BYTE PTR [rip+0x6568736c],ch        # 0x65a9e5f5
  417289:	ins    BYTE PTR es:[rdi],dx
  41728a:	ins    BYTE PTR es:[rdi],dx
  41728b:	xor    esi,DWORD PTR [rdx]
  41728d:	and    BYTE PTR [rip+0x6573756c],ch        # 0x65b4e7ff
  417293:	jb     0x4172c8
  417295:	xor    ah,BYTE PTR [rax]
  417297:	sub    eax,0x72656b6c
  41729c:	outs   dx,BYTE PTR ds:[rsi]
  41729d:	gs ins BYTE PTR es:[rdi],dx
  41729f:	xor    esi,DWORD PTR [rdx]
  4172a1:	and    BYTE PTR [rip+0x20206d6c],ch        # 0x2061e013
  4172a7:	and    BYTE PTR [rip+0x6964676c],ch        # 0x69a5da19
  4172ad:	xor    esi,DWORD PTR [rdx]
  4172af:	and    BYTE PTR [rip+0x3273776c],ch        # 0x32b4ea21
  4172b5:	pop    rdi
  4172b6:	xor    esi,DWORD PTR [rdx]
  4172b8:	and    BYTE PTR [rip+0x6573756c],ch        # 0x65b4e82a
  4172be:	jb     0x4172f3
  4172c0:	xor    ah,BYTE PTR [rax]
  4172c2:	sub    eax,0x72656b6c
  4172c7:	outs   dx,BYTE PTR ds:[rsi]
  4172c8:	gs ins BYTE PTR es:[rdi],dx
  4172ca:	xor    esi,DWORD PTR [rdx]
  4172cc:	and    BYTE PTR [rip+0x6964676c],ch        # 0x69a5da3e
  4172d2:	xor    esi,DWORD PTR [rdx]
  4172d4:	and    BYTE PTR [rip+0x3273776c],ch        # 0x32b4ea46
  4172da:	pop    rdi
  4172db:	xor    esi,DWORD PTR [rdx]
  4172dd:	and    BYTE PTR [rip+0x6573756c],ch        # 0x65b4e84f
  4172e3:	jb     0x417318
  4172e5:	xor    ah,BYTE PTR [rax]
  4172e7:	sub    eax,0x72656b6c
  4172ec:	outs   dx,BYTE PTR ds:[rsi]
  4172ed:	gs ins BYTE PTR es:[rdi],dx
  4172ef:	xor    esi,DWORD PTR [rdx]
  4172f1:	add    BYTE PTR [rdi+0x43],cl
  4172f4:	push   rsp
  4172f5:	pop    rdi
  4172f6:	rex.WR
  4172f7:	rex.WB
  4172f8:	rex.WRX
  4172f9:	rex.WXB pop r15
  4172fb:	rex.R
  4172fc:	rex.RB push r8
  4172fe:	push   rbx
  4172ff:	add    BYTE PTR [rip+0x2d2c6c57],ch        # 0x2d6ddf5c
  417305:	jb     0x417377
  417307:	(bad)  
  417308:	je     0x417372
  41730a:	sub    eax,0x6b6e696c
  41730f:	sub    al,0x2f
  417311:	jae    0x417376
  417313:	jb     0x417376
  417315:	je     0x41737a
  417317:	push   0x65776a2f
  41731c:	(bad)  
  41731d:	ins    DWORD PTR es:[rdi],dx
  41731e:	js     0x417385
  417320:	sub    eax,0x6174636f
  417325:	jbe    0x41738c
  417327:	(bad)  
  417328:	xor    al,0x2e
  41732a:	xor    ch,BYTE PTR [rsi]
  41732c:	xor    DWORD PTR [rdi],ebp
  41732e:	ja     0x417366
  417330:	xor    al,0x2d
  417332:	xor    esi,DWORD PTR [rdx]
  417334:	(bad)  
  417335:	jne    0x4173aa
  417337:	jb     0x417368
  417339:	js     0x417373
  41733b:	ss pop rdi
  41733d:	ss xor al,0x2d
  417340:	ja     0x417378
  417342:	xor    al,0x2d
  417344:	ins    DWORD PTR es:[rdi],dx
  417345:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  41734c:	ins    BYTE PTR es:[rdi],dx
  41734d:	imul   esp,DWORD PTR [rdx+0x20],0x732f4c2d
  417354:	movsxd esi,DWORD PTR [rdx+0x61]
  417357:	je     0x4173bc
  417359:	push   0x65776a2f
  41735e:	(bad)  
  41735f:	ins    DWORD PTR es:[rdi],dx
  417360:	js     0x4173c7
  417362:	sub    eax,0x6174636f
  417367:	jbe    0x4173ce
  417369:	(bad)  
  41736a:	xor    al,0x2e
  41736c:	xor    ch,BYTE PTR [rsi]
  41736e:	xor    DWORD PTR [rdi],ebp
  417370:	ja     0x4173a8
  417372:	xor    al,0x2d
  417374:	xor    esi,DWORD PTR [rdx]
  417376:	(bad)  
  417377:	jne    0x4173ec
  417379:	jb     0x4173aa
  41737b:	js     0x4173b5
  41737d:	ss pop rdi
  41737f:	ss xor al,0x2d
  417382:	ja     0x4173ba
  417384:	xor    al,0x2d
  417386:	ins    DWORD PTR es:[rdi],dx
  417387:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  41738e:	ins    BYTE PTR es:[rdi],dx
  41738f:	imul   esp,DWORD PTR [rdx+0x20],0x732f4c2d
  417396:	movsxd esi,DWORD PTR [rdx+0x61]
  417399:	je     0x4173fe
  41739b:	push   0x65776a2f
  4173a0:	(bad)  
  4173a1:	ins    DWORD PTR es:[rdi],dx
  4173a2:	js     0x417409
  4173a4:	sub    eax,0x6174636f
  4173a9:	jbe    0x417410
  4173ab:	(bad)  
  4173ac:	xor    al,0x2e
  4173ae:	xor    ch,BYTE PTR [rsi]
  4173b0:	xor    DWORD PTR [rdi],ebp
  4173b2:	ja     0x4173ea
  4173b4:	xor    al,0x2d
  4173b6:	xor    esi,DWORD PTR [rdx]
  4173b8:	(bad)  
  4173b9:	jne    0x41742e
  4173bb:	jb     0x4173ec
  4173bd:	js     0x4173f7
  4173bf:	ss pop rdi
  4173c1:	ss xor al,0x2d
  4173c4:	ja     0x4173fc
  4173c6:	xor    al,0x2d
  4173c8:	ins    DWORD PTR es:[rdi],dx
  4173c9:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4173d0:	ins    BYTE PTR es:[rdi],dx
  4173d1:	imul   esp,DWORD PTR [rdx+0x20],0x2c6c572d
  4173d8:	sub    eax,0x7078652d
  4173dd:	outs   dx,DWORD PTR ds:[rsi]
  4173de:	jb     0x417454
  4173e0:	sub    eax,0x2d6c6c61
  4173e5:	jae    0x417460
  4173e7:	ins    DWORD PTR es:[rdi],dx
  4173e8:	(bad)  
  4173e9:	outs   dx,DWORD PTR ds:[rsi]
  4173ea:	ins    BYTE PTR es:[rdi],dx
  4173eb:	jae    0x41740d
  4173ed:	and    BYTE PTR [rax],ah
  4173ef:	sub    eax,0x63732f4c
  4173f4:	jb     0x417457
  4173f6:	je     0x41745b
  4173f8:	push   0x65776a2f
  4173fd:	(bad)  
  4173fe:	ins    DWORD PTR es:[rdi],dx
  4173ff:	js     0x417466
  417401:	sub    eax,0x6174636f
  417406:	jbe    0x41746d
  417408:	(bad)  
  417409:	xor    al,0x2e
  41740b:	xor    ch,BYTE PTR [rsi]
  41740d:	xor    DWORD PTR [rdi],ebp
  41740f:	ja     0x417447
  417411:	xor    al,0x2d
  417413:	xor    esi,DWORD PTR [rdx]
  417415:	(bad)  
  417416:	jne    0x41748b
  417418:	jb     0x417449
  41741a:	js     0x417454
  41741c:	ss pop rdi
  41741e:	ss xor al,0x2d
  417421:	ja     0x417459
  417423:	xor    al,0x2d
  417425:	ins    DWORD PTR es:[rdi],dx
  417426:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  41742d:	ins    BYTE PTR es:[rdi],dx
  41742e:	imul   esp,DWORD PTR [rdx+0x20],0x4c2d2020
  417435:	(bad)  
  417436:	jae    0x41749b
  417438:	jb     0x41749b
  41743a:	je     0x41749f
  41743c:	push   0x65776a2f
  417441:	(bad)  
  417442:	ins    DWORD PTR es:[rdi],dx
  417443:	js     0x4174aa
  417445:	sub    eax,0x6174636f
  41744a:	jbe    0x4174b1
  41744c:	(bad)  
  41744d:	xor    al,0x2e
  41744f:	xor    ch,BYTE PTR [rsi]
  417451:	xor    DWORD PTR [rdi],ebp
  417453:	ja     0x41748b
  417455:	xor    al,0x2d
  417457:	xor    esi,DWORD PTR [rdx]
  417459:	(bad)  
  41745a:	jne    0x4174cf
  41745c:	jb     0x41748d
  41745e:	js     0x417498
  417460:	ss pop rdi
  417462:	ss xor al,0x2d
  417465:	ja     0x41749d
  417467:	xor    al,0x2d
  417469:	ins    DWORD PTR es:[rdi],dx
  41746a:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  417471:	ins    BYTE PTR es:[rdi],dx
  417472:	imul   esp,DWORD PTR [rdx+0x20],0x2f4c2d20
  417479:	jae    0x4174de
  41747b:	jb     0x4174de
  41747d:	je     0x4174e2
  41747f:	push   0x65776a2f
  417484:	(bad)  
  417485:	ins    DWORD PTR es:[rdi],dx
  417486:	js     0x4174ed
  417488:	sub    eax,0x6174636f
  41748d:	jbe    0x4174f4
  41748f:	(bad)  
  417490:	xor    al,0x2e
  417492:	xor    ch,BYTE PTR [rsi]
  417494:	xor    DWORD PTR [rdi],ebp
  417496:	ja     0x4174ce
  417498:	xor    al,0x2d
  41749a:	xor    esi,DWORD PTR [rdx]
  41749c:	(bad)  
  41749d:	jne    0x417512
  41749f:	jb     0x4174d0
  4174a1:	js     0x4174db
  4174a3:	ss pop rdi
  4174a5:	ss xor al,0x2d
  4174a8:	ja     0x4174e0
  4174aa:	xor    al,0x2d
  4174ac:	ins    DWORD PTR es:[rdi],dx
  4174ad:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4174b4:	ins    BYTE PTR es:[rdi],dx
  4174b5:	imul   esp,DWORD PTR [rdx+0x20],0x20202020
  4174bc:	and    BYTE PTR [rax],ah
  4174be:	and    BYTE PTR [rax],ah
  4174c0:	and    BYTE PTR [rax],ah
  4174c2:	and    BYTE PTR [rip+0x63732f4c],ch        # 0x63b4a414
  4174c8:	jb     0x41752b
  4174ca:	je     0x41752f
  4174cc:	push   0x65776a2f
  4174d1:	(bad)  
  4174d2:	ins    DWORD PTR es:[rdi],dx
  4174d3:	js     0x41753a
  4174d5:	sub    eax,0x6174636f
  4174da:	jbe    0x417541
  4174dc:	(bad)  
  4174dd:	xor    al,0x2e
  4174df:	xor    ch,BYTE PTR [rsi]
  4174e1:	xor    DWORD PTR [rdi],ebp
  4174e3:	ja     0x41751b
  4174e5:	xor    al,0x2d
  4174e7:	xor    esi,DWORD PTR [rdx]
  4174e9:	(bad)  
  4174ea:	jne    0x41755f
  4174ec:	jb     0x41751d
  4174ee:	js     0x417528
  4174f0:	ss pop rdi
  4174f2:	ss xor al,0x2d
  4174f5:	ja     0x41752d
  4174f7:	xor    al,0x2d
  4174f9:	ins    DWORD PTR es:[rdi],dx
  4174fa:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  417501:	ins    BYTE PTR es:[rdi],dx
  417502:	imul   esp,DWORD PTR [rdx+0x20],0x4c2d2020
  417509:	(bad)  
  41750a:	jae    0x41756f
  41750c:	jb     0x41756f
  41750e:	je     0x417573
  417510:	push   0x65776a2f
  417515:	(bad)  
  417516:	ins    DWORD PTR es:[rdi],dx
  417517:	js     0x41757e
  417519:	sub    eax,0x6174636f
  41751e:	jbe    0x417585
  417520:	(bad)  
  417521:	xor    al,0x2e
  417523:	xor    ch,BYTE PTR [rsi]
  417525:	xor    DWORD PTR [rdi],ebp
  417527:	ja     0x41755f
  417529:	xor    al,0x2d
  41752b:	xor    esi,DWORD PTR [rdx]
  41752d:	(bad)  
  41752e:	jne    0x4175a3
  417530:	jb     0x417561
  417532:	js     0x41756c
  417534:	ss pop rdi
  417536:	ss xor al,0x2d
  417539:	ja     0x417571
  41753b:	xor    al,0x2d
  41753d:	ins    DWORD PTR es:[rdi],dx
  41753e:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  417545:	ins    BYTE PTR es:[rdi],dx
  417546:	imul   esp,DWORD PTR [rdx+0x20],0x2f4c2d20
  41754d:	jae    0x4175b2
  41754f:	jb     0x4175b2
  417551:	je     0x4175b6
  417553:	push   0x65776a2f
  417558:	(bad)  
  417559:	ins    DWORD PTR es:[rdi],dx
  41755a:	js     0x4175c1
  41755c:	sub    eax,0x6174636f
  417561:	jbe    0x4175c8
  417563:	(bad)  
  417564:	xor    al,0x2e
  417566:	xor    ch,BYTE PTR [rsi]
  417568:	xor    DWORD PTR [rdi],ebp
  41756a:	ja     0x4175a2
  41756c:	xor    al,0x2d
  41756e:	xor    esi,DWORD PTR [rdx]
  417570:	(bad)  
  417571:	jne    0x4175e6
  417573:	jb     0x4175a4
  417575:	js     0x4175af
  417577:	ss pop rdi
  417579:	ss xor al,0x2d
  41757c:	ja     0x4175b4
  41757e:	xor    al,0x2d
  417580:	ins    DWORD PTR es:[rdi],dx
  417581:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  417588:	ins    BYTE PTR es:[rdi],dx
  417589:	imul   esp,DWORD PTR [rdx+0x20],0x54434f00
  417590:	pop    rdi
  417591:	rex.WR
  417592:	rex.WB
  417593:	rex.WRX
  417594:	rex.WXB pop r15
  417596:	rex.WRXB push r8
  417598:	push   rsp
  417599:	push   rbx
  41759a:	add    BYTE PTR [rsp+rax*2+0x5f],cl
  41759e:	rex.XB pop r8
  4175a0:	pop    rax
  4175a1:	add    BYTE PTR [rax],al
  4175a3:	add    BYTE PTR [rax],al
  4175a5:	add    BYTE PTR [rax],al
  4175a7:	add    BYTE PTR [rip+0x2d2c6c57],ch        # 0x2d6de204
  4175ad:	jb     0x41761f
  4175af:	(bad)  
  4175b0:	je     0x41761a
  4175b2:	sub    eax,0x6b6e696c
  4175b7:	sub    al,0x2f
  4175b9:	jae    0x41761e
  4175bb:	jb     0x41761e
  4175bd:	je     0x417622
  4175bf:	push   0x65776a2f
  4175c4:	(bad)  
  4175c5:	ins    DWORD PTR es:[rdi],dx
  4175c6:	js     0x41762d
  4175c8:	sub    eax,0x6174636f
  4175cd:	jbe    0x417634
  4175cf:	(bad)  
  4175d0:	xor    al,0x2e
  4175d2:	xor    ch,BYTE PTR [rsi]
  4175d4:	xor    DWORD PTR [rdi],ebp
  4175d6:	ja     0x41760e
  4175d8:	xor    al,0x2d
  4175da:	xor    esi,DWORD PTR [rdx]
  4175dc:	(bad)  
  4175dd:	jne    0x417652
  4175df:	jb     0x417610
  4175e1:	js     0x41761b
  4175e3:	ss pop rdi
  4175e5:	ss xor al,0x2d
  4175e8:	ja     0x417620
  4175ea:	xor    al,0x2d
  4175ec:	ins    DWORD PTR es:[rdi],dx
  4175ed:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4175f4:	ins    BYTE PTR es:[rdi],dx
  4175f5:	imul   esp,DWORD PTR [rdx+0x20],0x732f4c2d
  4175fc:	movsxd esi,DWORD PTR [rdx+0x61]
  4175ff:	je     0x417664
  417601:	push   0x65776a2f
  417606:	(bad)  
  417607:	ins    DWORD PTR es:[rdi],dx
  417608:	js     0x41766f
  41760a:	sub    eax,0x6174636f
  41760f:	jbe    0x417676
  417611:	(bad)  
  417612:	xor    al,0x2e
  417614:	xor    ch,BYTE PTR [rsi]
  417616:	xor    DWORD PTR [rdi],ebp
  417618:	ja     0x417650
  41761a:	xor    al,0x2d
  41761c:	xor    esi,DWORD PTR [rdx]
  41761e:	(bad)  
  41761f:	jne    0x417694
  417621:	jb     0x417652
  417623:	js     0x41765d
  417625:	ss pop rdi
  417627:	ss xor al,0x2d
  41762a:	ja     0x417662
  41762c:	xor    al,0x2d
  41762e:	ins    DWORD PTR es:[rdi],dx
  41762f:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  417636:	ins    BYTE PTR es:[rdi],dx
  417637:	imul   esp,DWORD PTR [rdx+0x20],0x732f4c2d
  41763e:	movsxd esi,DWORD PTR [rdx+0x61]
  417641:	je     0x4176a6
  417643:	push   0x65776a2f
  417648:	(bad)  
  417649:	ins    DWORD PTR es:[rdi],dx
  41764a:	js     0x4176b1
  41764c:	sub    eax,0x6174636f
  417651:	jbe    0x4176b8
  417653:	(bad)  
  417654:	xor    al,0x2e
  417656:	xor    ch,BYTE PTR [rsi]
  417658:	xor    DWORD PTR [rdi],ebp
  41765a:	ja     0x417692
  41765c:	xor    al,0x2d
  41765e:	xor    esi,DWORD PTR [rdx]
  417660:	(bad)  
  417661:	jne    0x4176d6
  417663:	jb     0x417694
  417665:	js     0x41769f
  417667:	ss pop rdi
  417669:	ss xor al,0x2d
  41766c:	ja     0x4176a4
  41766e:	xor    al,0x2d
  417670:	ins    DWORD PTR es:[rdi],dx
  417671:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  417678:	ins    BYTE PTR es:[rdi],dx
  417679:	imul   esp,DWORD PTR [rdx+0x20],0x2c6c572d
  417680:	sub    eax,0x7078652d
  417685:	outs   dx,DWORD PTR ds:[rsi]
  417686:	jb     0x4176fc
  417688:	sub    eax,0x2d6c6c61
  41768d:	jae    0x417708
  41768f:	ins    DWORD PTR es:[rdi],dx
  417690:	(bad)  
  417691:	outs   dx,DWORD PTR ds:[rsi]
  417692:	ins    BYTE PTR es:[rdi],dx
  417693:	jae    0x417695
  417695:	rex.WR
  417696:	rex.R
  417697:	rex.RX
  417698:	rex.WR
  417699:	rex.B
  41769a:	rex.RXB push r11
  41769c:	add    BYTE PTR [rsp+rax*2+0x5f],cl
  4176a0:	push   rbx
  4176a1:	push   rsp
  4176a2:	push   r12
  4176a4:	rex.WB
  4176a5:	rex.XB pop r15
  4176a7:	rex.RX
  4176a8:	rex.WR
  4176a9:	rex.B
  4176aa:	add    BYTE PTR [r14+r8*2+0x4c],r9b
  4176af:	rex.B
  4176b0:	rex.RXB push r11
  4176b2:	add    BYTE PTR [rsi+0x37],al
  4176b5:	(bad)  
  4176b6:	pop    rdi
  4176b7:	rex.WB
  4176b8:	rex.WRX push rsp
  4176ba:	rex.RB
  4176bb:	rex.RXB
  4176bc:	rex.RB push r10
  4176be:	cmp    BYTE PTR [rdi+0x46],bl
  4176c1:	rex.WR
  4176c2:	rex.B
  4176c3:	rex.RXB add BYTE PTR [r8],r12b
  4176c6:	add    BYTE PTR [rcx+0x4c],al
  4176c9:	rex.WR pop rdi
  4176cb:	rex.RX
  4176cc:	rex.RX
  4176cd:	rex.WR
  4176ce:	rex.B
  4176cf:	rex.RXB push r11
  4176d1:	add    BYTE PTR [rcx+0x4c],al
  4176d4:	rex.WR pop rdi
  4176d6:	rex.XB
  4176d7:	rex.RX
  4176d8:	rex.WR
  4176d9:	rex.B
  4176da:	rex.RXB push r11
  4176dc:	add    BYTE PTR [rcx+0x4c],al
  4176df:	rex.WR pop rdi
  4176e1:	rex.XB pop r8
  4176e3:	pop    rax
  4176e4:	rex.RX
  4176e5:	rex.WR
  4176e6:	rex.B
  4176e7:	rex.RXB push r11
  4176e9:	add    BYTE PTR [rcx+0x4c],al
  4176ec:	rex.WR pop rdi
  4176ee:	rex.WR
  4176ef:	rex.R
  4176f0:	rex.RX
  4176f1:	rex.WR
  4176f2:	rex.B
  4176f3:	rex.RXB push r11
  4176f5:	add    BYTE PTR [rbx+0x50],dl
  4176f8:	rex.RB
  4176f9:	rex.XB
  4176fa:	rex.WB
  4176fb:	rex.B
  4176fc:	rex.WR pop rdi
  4176fe:	rex.WRB
  4176ff:	push   r12
  417701:	rex.W pop rdi
  417703:	rex.WR
  417704:	rex.WB
  417705:	rex.X add BYTE PTR [rdi+0x43],cl
  417709:	push   rsp
  41770a:	push   r14
  41770c:	rex.RB pop r15
  41770e:	rex.WR
  41770f:	rex.WB
  417710:	rex.X push rbx
  417712:	add    BYTE PTR [rsi+0x46],al
  417715:	push   rsp
  417716:	push   rdi
  417717:	pop    rdi
  417718:	rex.WR
  417719:	rex.WB
  41771a:	rex.X push rbx
  41771c:	add    BYTE PTR [rsi+0x61],ah
  41771f:	ins    BYTE PTR es:[rdi],dx
  417720:	jae    0x417787
  417722:	add    BYTE PTR [rsi],ch
  417724:	outs   dx,DWORD PTR ds:[rsi]
  417725:	movsxd esi,DWORD PTR [rax+rax*1+0x2d]
  417729:	jbe    0x41772b
  41772b:	sub    eax,0x73726576
  417730:	imul   ebp,DWORD PTR [rdi+0x6e],0x762d2d00
  417737:	gs jb  0x4177ad
  41773a:	imul   ebp,DWORD PTR [rdi+0x6e],0x632e00
  417741:	movsxd esp,DWORD PTR cs:[rbx+0x0]
  417745:	cs rex.XB push r8
  417748:	push   rax
  417749:	add    BYTE PTR [rsi],ch
  41774b:	movsxd edi,DWORD PTR [rax+0x78]
  41774e:	add    BYTE PTR [rsi],ch
  417750:	movsxd ebp,DWORD PTR [rbx]
  417752:	sub    eax,DWORD PTR [rax]
  417754:	rex.XB add BYTE PTR cs:[r14],bpl
  417758:	data16 add BYTE PTR [rsi],ch
  41775b:	rex.RX cmp DWORD PTR [rax],r14d
  41775e:	add    BYTE PTR [rsi],ch
  417760:	outs   dx,DWORD PTR ds:[rsi]
  417761:	add    BYTE PTR [rsi],ch
  417763:	ins    BYTE PTR es:[rdi],dx
  417764:	imul   esp,DWORD PTR [rdx+0x0],0x2d00642d
  41776b:	fs gs (bad) 
  41776e:	jne    0x4177d7
  417770:	add    BYTE PTR [rip+0x6265642d],ch        # 0x62a6dba3
  417776:	jne    0x4177df
  417778:	add    BYTE PTR [rip+0x62726576],ch        # 0x62b3dcf4
  41777e:	outs   dx,DWORD PTR ds:[rsi]
  41777f:	jae    0x4177e6
  417781:	add    BYTE PTR [rip+0x7265762d],ch        # 0x72a6edb4
  417787:	(bad)  
  417788:	outs   dx,DWORD PTR ds:[rsi]
  417789:	jae    0x4177f0
  41778b:	add    BYTE PTR [rbx+0x63],ah
  41778e:	sub    eax,0x6376736d
  417793:	add    BYTE PTR [rax],ah
  417795:	sub    eax,0x3f2d0064
  41779a:	add    BYTE PTR [rip+0x706c6568],ch        # 0x70addd08
  4177a0:	add    BYTE PTR [rip+0x6c65682d],ch        # 0x6ca6dfd3
  4177a6:	jo     0x4177a8
  4177a8:	sub    eax,0x72696469
  4177ad:	(bad)  
  4177ae:	data16 je 0x417816
  4177b1:	jb     0x4177b3
  4177b3:	and    BYTE PTR [rip+0x72696469],ch        # 0x72aadc22
  4177b9:	(bad)  
  4177ba:	data16 je 0x417822
  4177bd:	jb     0x4177df
  4177bf:	add    BYTE PTR [rbp+0x6b],ch
  4177c2:	outs   dx,DWORD PTR ds:[rsi]
  4177c3:	movsxd esi,DWORD PTR [rsi+riz*2+0x69]
  4177c7:	ins    BYTE PTR es:[rdi],dx
  4177c8:	cmp    ah,BYTE PTR gs:[rax]
  4177cb:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  4177d2:	and    BYTE PTR [rcx+rbp*2+0x72],ah
  4177d6:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  4177db:	jns    0x4177fd
  4177dd:	outs   dx,BYTE PTR ds:[rsi]
  4177de:	(bad)  
  4177df:	ins    DWORD PTR es:[rdi],dx
  4177e0:	and    BYTE PTR gs:[rbp+0x69],ch
  4177e4:	jae    0x417859
  4177e6:	imul   ebp,DWORD PTR [rsi+0x67],0x442d00
  4177ed:	sub    eax,0x6772616c
  4177f2:	gs rex.B jb 0x417868
  4177f6:	(bad)  
  4177f7:	jns    0x41783d
  4177f9:	imul   ebp,DWORD PTR [rbp+0x73],0x6f632d00
  417800:	ins    DWORD PTR es:[rdi],dx
  417801:	jo     0x417864
  417803:	je     0x41786e
  417805:	(bad)  
  417806:	ins    BYTE PTR es:[rdi],dx
  417807:	gs rex.B jb 0x41787d
  41780b:	(bad)  
  41780c:	jns    0x417852
  41780e:	imul   ebp,DWORD PTR [rbp+0x73],0x6c2d00
  417815:	sub    eax,0x642d0052
  41781a:	gs jo  0x417882
  41781d:	outs   dx,BYTE PTR ds:[rsi]
  41781e:	add    BYTE PTR fs:[rip+0x7065642d],ch        # 0x70a6dc52
  417825:	outs   dx,BYTE PTR gs:[rsi]
  417827:	add    BYTE PTR fs:[rip+0x7074756f],ch        # 0x70b5ed9d
  41782e:	jne    0x4178a4
  417830:	add    BYTE PTR [rip+0x74756f2d],ch        # 0x74b6e763
  417836:	jo     0x4178ad
  417838:	je     0x41783a
  41783a:	add    BYTE PTR [rax],al
  41783c:	add    BYTE PTR [rax],al
  41783e:	add    BYTE PTR [rax],al
  417840:	ins    DWORD PTR es:[rdi],dx
  417841:	imul   ebp,DWORD PTR [rdi+0x63],0x74
  417845:	imul   bp,WORD PTR [rbp+riz*2+0x3a],0x6f20
  41784c:	jne    0x4178c2
  41784e:	jo     0x4178c5
  417850:	je     0x417872
  417852:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  417859:	and    BYTE PTR gs:[rbp+0x69],ch
  41785d:	jae    0x4178d2
  41785f:	imul   ebp,DWORD PTR [rsi+0x67],0x642d2d00
  417866:	jb     0x4178e1
  417868:	sub    eax,0x6e7572
  41786d:	sub    eax,0x73756a2d
  417872:	je     0x4178a1
  417874:	jo     0x4178e8
  417876:	imul   ebp,DWORD PTR [rsi+0x74],0x72702d00
  41787d:	imul   ebp,DWORD PTR [rsi+0x74],0x702d2d00
  417884:	jb     0x4178ef
  417886:	outs   dx,BYTE PTR ds:[rsi]
  417887:	je     0x417889
  417889:	add    BYTE PTR [rax],al
  41788b:	add    BYTE PTR [rax],al
  41788d:	add    BYTE PTR [rax],al
  41788f:	add    BYTE PTR [rbp+0x6b],ch
  417892:	outs   dx,DWORD PTR ds:[rsi]
  417893:	movsxd esi,DWORD PTR [rsi+riz*2+0x69]
  417897:	ins    BYTE PTR es:[rdi],dx
  417898:	cmp    ah,BYTE PTR gs:[rax]
  41789b:	sub    eax,0x6972702d
  4178a0:	outs   dx,BYTE PTR ds:[rsi]
  4178a1:	je     0x4178c3
  4178a3:	jb     0x41790a
  4178a5:	jno    0x41791c
  4178a7:	imul   esi,DWORD PTR [rdx+0x65],0x72612073
  4178ae:	addr32 jne 0x41791e
  4178b1:	outs   dx,BYTE PTR gs:[rsi]
  4178b3:	je     0x4178b5
  4178b5:	sub    eax,0x69727473
  4178ba:	jo     0x4178bc
  4178bc:	sub    eax,0x7274732d
  4178c1:	imul   esi,DWORD PTR [rax+0x0],0x0
  4178c8:	ins    DWORD PTR es:[rdi],dx
  4178c9:	imul   ebp,DWORD PTR [rdi+0x63],0x74
  4178cd:	imul   bp,WORD PTR [rbp+riz*2+0x3a],0x7320
  4178d4:	je     0x417948
  4178d6:	imul   esi,DWORD PTR [rax+0x70],0x20676e69
  4178dd:	imul   esi,DWORD PTR fs:[rbx+0x61],0x64656c62
  4178e5:	and    BYTE PTR [rdi+0x6e],ch
  4178e8:	and    BYTE PTR [rax+rbp*2+0x69],dh
  4178ec:	jae    0x41790e
  4178ee:	jo     0x41795c
  4178f0:	(bad)  
  4178f1:	je     0x417959
  4178f3:	outs   dx,DWORD PTR ds:[rsi]
  4178f4:	jb     0x417963
  4178f6:	add    BYTE PTR [rip+0x706d6f63],ch        # 0x70aee85f
  4178fc:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x6f632d2d
  417904:	ins    DWORD PTR es:[rdi],dx
  417905:	jo     0x417970
  417907:	ins    BYTE PTR es:[rdi],dx
  417908:	add    BYTE PTR gs:[rax],ah
  41790b:	sub    eax,0x6c2d0067
  417910:	imul   ebp,DWORD PTR [rsi+0x6b],0x6174732d
  417917:	outs   dx,BYTE PTR ds:[rsi]
  417918:	fs sub eax,0x6e6f6c61
  41791e:	add    BYTE PTR gs:[rip+0x6e696c2d],ch        # 0x6eaae552
  417925:	imul   ebp,DWORD PTR [rip+0x6e617473],0x64        # 0x6ea2ed9f
  41792c:	sub    eax,0x6e6f6c61
  417931:	add    BYTE PTR gs:[rip+0x78656d2d],ch        # 0x78a6e665
  417938:	add    BYTE PTR [rsi],ch
  41793a:	ins    DWORD PTR es:[rdi],dx
  41793b:	gs js  0x41793e
  41793e:	sub    eax,0x6f6b6d00
  417943:	movsxd esi,DWORD PTR [rsi+riz*2+0x69]
  417947:	ins    BYTE PTR es:[rdi],dx
  417948:	cmp    ah,BYTE PTR gs:[rax]
  41794b:	jne    0x4179bb
  41794d:	jb     0x4179b4
  41794f:	movsxd ebp,DWORD PTR [rdi+0x67]
  417952:	outs   dx,BYTE PTR ds:[rsi]
  417953:	imul   edi,DWORD PTR [rdx+0x65],0x72612064
  41795a:	addr32 jne 0x4179ca
  41795d:	outs   dx,BYTE PTR gs:[rsi]
  41795f:	je     0x417981
  417961:	add    BYTE PTR [rip+0x2d200067],ch        # 0x2d6179ce
  417967:	rex.R
  417968:	rex.WRB
  417969:	rex.RB pop r8
  41796b:	pop    rdi
  41796c:	rex.R
  41796d:	rex.RB
  41796e:	rex.X push rbp
  417970:	rex.RXB add BYTE PTR [rip+0x2e00206f],r13b        # 0x2e4199e6
  417977:	add    BYTE PTR fs:[rdx+0x0],dh
  41797b:	outs   dx,DWORD PTR cs:[rsi]
  41797d:	cmp    al,BYTE PTR [rax]
  41797f:	jo     0x4179ea
  417981:	movsxd ebp,DWORD PTR [rdi]
  417983:	add    BYTE PTR [rax],ah
  417985:	sub    eax,0x20002063
  41798a:	sub    eax,0x206f
  41798f:	add    BYTE PTR [rbp+0x6b],ch
  417992:	outs   dx,DWORD PTR ds:[rsi]
  417993:	movsxd esi,DWORD PTR [rsi+riz*2+0x69]
  417997:	ins    BYTE PTR es:[rdi],dx
  417998:	cmp    ah,BYTE PTR gs:[rax]
  41799b:	outs   dx,BYTE PTR ds:[rsi]
  41799c:	outs   dx,DWORD PTR ds:[rsi]
  41799d:	and    BYTE PTR [rdi+0x61],dh
  4179a0:	jns    0x4179c2
  4179a2:	je     0x417a13
  4179a4:	and    BYTE PTR [rbx+0x6f],ah
  4179a7:	ins    DWORD PTR es:[rdi],dx
  4179a8:	jo     0x417a13
  4179aa:	ins    BYTE PTR es:[rdi],dx
  4179ab:	and    BYTE PTR gs:[rsi+0x6f],al
  4179af:	jb     0x417a25
  4179b1:	jb     0x417a14
  4179b3:	outs   dx,BYTE PTR ds:[rsi]
  4179b4:	and    BYTE PTR [rsi+0x69],ah
  4179b7:	ins    BYTE PTR es:[rdi],dx
  4179b8:	and    BYTE PTR gs:[rax],al
  4179bb:	add    BYTE PTR [rax],al
  4179bd:	add    BYTE PTR [rax],al
  4179bf:	add    BYTE PTR [rbp+0x6b],ch
  4179c2:	outs   dx,DWORD PTR ds:[rsi]
  4179c3:	movsxd esi,DWORD PTR [rsi+riz*2+0x69]
  4179c7:	ins    BYTE PTR es:[rdi],dx
  4179c8:	cmp    ah,BYTE PTR gs:[rax]
  4179cb:	outs   dx,BYTE PTR ds:[rsi]
  4179cc:	outs   dx,DWORD PTR ds:[rsi]
  4179cd:	and    BYTE PTR [rdi+0x61],dh
  4179d0:	jns    0x4179f2
  4179d2:	je     0x417a43
  4179d4:	and    BYTE PTR [rbx+0x6f],ah
  4179d7:	ins    DWORD PTR es:[rdi],dx
  4179d8:	jo     0x417a43
  4179da:	ins    BYTE PTR es:[rdi],dx
  4179db:	and    BYTE PTR gs:[rbx+0x20],al
  4179df:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x0
  4179e6:	add    BYTE PTR [rax],al
  4179e8:	ins    DWORD PTR es:[rdi],dx
  4179e9:	imul   ebp,DWORD PTR [rdi+0x63],0x74
  4179ed:	imul   bp,WORD PTR [rbp+riz*2+0x3a],0x6e20
  4179f4:	outs   dx,DWORD PTR ds:[rsi]
  4179f5:	and    BYTE PTR [rdi+0x61],dh
  4179f8:	jns    0x417a1a
  4179fa:	je     0x417a6b
  4179fc:	and    BYTE PTR [rbx+0x6f],ah
  4179ff:	ins    DWORD PTR es:[rdi],dx
  417a00:	jo     0x417a6b
  417a02:	ins    BYTE PTR es:[rdi],dx
  417a03:	and    BYTE PTR gs:[rbx+0x2b],al
  417a07:	sub    esp,DWORD PTR [rax]
  417a09:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2000
  417a10:	sub    eax,0x74636f6c
  417a15:	imul   ebp,DWORD PTR [rsi+0x74],0x20707265
  417a1c:	sub    eax,0x74636f6c
  417a21:	(bad)  
  417a22:	jbe    0x417a89
  417a24:	and    BYTE PTR [rax],al
  417a26:	add    BYTE PTR [rax],al
  417a28:	ins    DWORD PTR es:[rdi],dx
  417a29:	imul   ebp,DWORD PTR [rdi+0x63],0x74
  417a2d:	imul   bp,WORD PTR [rbp+riz*2+0x3a],0x6e20
  417a34:	outs   dx,DWORD PTR ds:[rsi]
  417a35:	and    BYTE PTR [rdi+0x61],dh
  417a38:	jns    0x417a5a
  417a3a:	je     0x417aab
  417a3c:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  417a40:	imul   esp,DWORD PTR [rax],0x73
  417a43:	je     0x417aa6
  417a45:	outs   dx,BYTE PTR ds:[rsi]
  417a46:	fs sub eax,0x6e6f6c61
  417a4c:	and    BYTE PTR gs:[rbp+0x78],ah
  417a50:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  417a54:	(bad)  
  417a55:	(bad)  
  417a56:	ins    BYTE PTR es:[rdi],dx
  417a57:	and    BYTE PTR gs:[rsi+0x69],ah
  417a5b:	ins    BYTE PTR es:[rdi],dx
  417a5c:	add    BYTE PTR gs:[rbx+0x74],dh
  417a60:	jb     0x417acb
  417a62:	jo     0x417a84
  417a64:	add    BYTE PTR [rsi],ch
  417a66:	movsxd esi,DWORD PTR [rax+0x0]
  417a69:	movsxd esi,DWORD PTR cs:[rax+0x70]
  417a6d:	add    BYTE PTR [rsi],ch
  417a6f:	rex.RX add BYTE PTR [rsi+0x39],r12b
  417a73:	xor    BYTE PTR [rax],al
  417a75:	outs   dx,DWORD PTR cs:[rsi]
  417a77:	(bad)  
  417a78:	push   0x0
  417a7a:	cs (bad) 
  417a7c:	add    BYTE PTR [rip+0x61770068],ch        # 0x61b87aea
  417a82:	jb     0x417af2
  417a84:	imul   ebp,DWORD PTR [rsi+0x67],0x6c2d203a
  417a8b:	(bad)  
  417a8c:	jb     0x417af5
  417a8e:	gs rex.B jb 0x417b04
  417a92:	(bad)  
  417a93:	jns    0x417ad9
  417a95:	imul   ebp,DWORD PTR [rbp+0x73],0x646e6120
  417a9c:	and    BYTE PTR [rip+0x706d6f63],ch        # 0x70aeea05
  417aa2:	(bad)  
  417aa3:	je     0x417b0e
  417aa5:	(bad)  
  417aa6:	ins    BYTE PTR es:[rdi],dx
  417aa7:	gs rex.B jb 0x417b1d
  417aab:	(bad)  
  417aac:	jns    0x417af2
  417aae:	imul   ebp,DWORD PTR [rbp+0x73],0x65726120
  417ab5:	and    BYTE PTR [rcx+0x63],ah
  417ab8:	movsxd esp,DWORD PTR [rbp+0x70]
  417abb:	je     0x417b22
  417abd:	and    BYTE PTR fs:[rsi+0x6f],ah
  417ac1:	jb     0x417ae3
  417ac3:	movsxd ebp,DWORD PTR [rdi+0x6d]
  417ac6:	jo     0x417b29
  417ac8:	je     0x417b33
  417aca:	(bad)  
  417acb:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x62202c79
  417ad3:	jne    0x417b49
  417ad5:	and    BYTE PTR [rcx+0x67],ch
  417ad8:	outs   dx,BYTE PTR ds:[rsi]
  417ad9:	outs   dx,DWORD PTR ds:[rsi]
  417ada:	jb     0x417b41
  417adc:	add    BYTE PTR fs:[rip+0x2c6c57],ch        # 0x6de73a
  417ae3:	sub    eax,0x6e2d006f
  417ae8:	add    BYTE PTR [rip+0x732d0070],ch        # 0x736e7b5e
  417aee:	add    BYTE PTR [rip+0x6d2d0063],ch        # 0x6d6e7b57
  417af4:	gs js  0x417af7
  417af7:	and    BYTE PTR [rip+0x2d002e49],ch        # 0x2d41a946
  417afd:	push   rdi
  417afe:	add    BYTE PTR [rax],al
  417b00:	jne    0x417b75
  417b02:	(bad)  
  417b03:	cmp    ah,BYTE PTR gs:[eax]
  417b07:	ins    DWORD PTR es:[rdi],dx
  417b08:	imul   ebp,DWORD PTR [rdi+0x63],0x74
  417b0c:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f5b
  417b13:	jo     0x417b89
  417b15:	imul   ebp,DWORD PTR [rdi+0x6e],0x66205d73
  417b1c:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x2e2e2e
  417b24:	ins    DWORD PTR es:[rdi],dx
  417b25:	imul   ebp,DWORD PTR [rdi+0x63],0x74
  417b29:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x7620
  417b30:	gs jb  0x417ba6
  417b33:	imul   ebp,DWORD PTR [rdi+0x6e],0x322e3420
  417b3a:	xor    DWORD PTR cs:[rax],eax
  417b3d:	add    BYTE PTR [rax],al
  417b3f:	add    BYTE PTR [rdx],cl
  417b41:	rex.WRXB jo 0x417bb8
  417b44:	imul   ebp,DWORD PTR [rdi+0x6e],0xa0a3a73
  417b4b:	and    BYTE PTR [rax],ah
  417b4d:	sub    eax,0x2d202c68
  417b52:	(bad)  
  417b53:	sub    al,0x20
  417b55:	sub    eax,0x6c65682d
  417b5a:	jo     0x417b7c
  417b5c:	and    BYTE PTR [rax],ah
  417b5e:	and    BYTE PTR [rax],ah
  417b60:	and    BYTE PTR [rax],ah
  417b62:	and    BYTE PTR [rax],ah
  417b64:	and    BYTE PTR [rax+0x72],dl
  417b67:	imul   ebp,DWORD PTR [rsi+0x74],0x69687420
  417b6e:	jae    0x417b90
  417b70:	ins    DWORD PTR es:[rdi],dx
  417b71:	gs jae 0x417be7
  417b74:	(bad)  
  417b75:	gs or  cl,BYTE PTR cs:[edx]
  417b7a:	and    BYTE PTR [rax],ah
  417b7c:	sub    eax,0x52494449
  417b81:	and    BYTE PTR [rax],ah
  417b83:	and    BYTE PTR [rax],ah
  417b85:	and    BYTE PTR [rax],ah
  417b87:	and    BYTE PTR [rax],ah
  417b89:	and    BYTE PTR [rax],ah
  417b8b:	and    BYTE PTR [rax],ah
  417b8d:	and    BYTE PTR [rax],ah
  417b8f:	and    BYTE PTR [rax],ah
  417b91:	and    BYTE PTR [rax],ah
  417b93:	and    BYTE PTR [rcx+0x64],al
  417b96:	and    BYTE PTR fs:[rip+0x52494449],ch        # 0x528abfe6
  417b9d:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  417ba1:	movsxd ebp,DWORD PTR [rdi+0x6d]
  417ba4:	jo     0x417c0f
  417ba6:	ins    BYTE PTR es:[rdi],dx
  417ba7:	and    BYTE PTR gs:[rbx+0x6f],ah
  417bab:	ins    DWORD PTR es:[rdi],dx
  417bac:	ins    DWORD PTR es:[rdi],dx
  417bad:	(bad)  
  417bae:	outs   dx,BYTE PTR ds:[rsi]
  417baf:	fs jae 0x417be0
  417bb2:	or     cl,BYTE PTR [rdx]
  417bb4:	and    BYTE PTR [rax],ah
  417bb6:	sub    eax,0x72696469
  417bbb:	(bad)  
  417bbc:	data16 je 0x417c24
  417bbf:	jb     0x417be1
  417bc1:	rex.R
  417bc2:	rex.WB push r10
  417bc4:	and    BYTE PTR [rax],ah
  417bc6:	and    BYTE PTR [rax],ah
  417bc8:	and    BYTE PTR [rax],ah
  417bca:	and    BYTE PTR [rax],ah
  417bcc:	and    BYTE PTR [rax],ah
  417bce:	rex.B
  417bcf:	fs and BYTE PTR fs:[rip+0x72696469],ch        # 0x72aae040
  417bd7:	(bad)  
  417bd8:	data16 je 0x417c40
  417bdb:	jb     0x417bfd
  417bdd:	rex.R
  417bde:	rex.WB push r10
  417be0:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  417be4:	movsxd ebp,DWORD PTR [rdi+0x6d]
  417be7:	jo     0x417c52
  417be9:	ins    BYTE PTR es:[rdi],dx
  417bea:	and    BYTE PTR gs:[rbx+0x6f],ah
  417bee:	ins    DWORD PTR es:[rdi],dx
  417bef:	ins    DWORD PTR es:[rdi],dx
  417bf0:	(bad)  
  417bf1:	outs   dx,BYTE PTR ds:[rsi]
  417bf2:	fs jae 0x417c23
  417bf5:	or     cl,BYTE PTR [rdx]
  417bf7:	and    BYTE PTR [rax],ah
  417bf9:	sub    eax,0x46454444
  417bfe:	and    BYTE PTR [rax],ah
  417c00:	and    BYTE PTR [rax],ah
  417c02:	and    BYTE PTR [rax],ah
  417c04:	and    BYTE PTR [rax],ah
  417c06:	and    BYTE PTR [rax],ah
  417c08:	and    BYTE PTR [rax],ah
  417c0a:	and    BYTE PTR [rax],ah
  417c0c:	and    BYTE PTR [rax],ah
  417c0e:	and    BYTE PTR [rax],ah
  417c10:	and    BYTE PTR [rcx+0x64],al
  417c13:	and    BYTE PTR fs:[rip+0x46454444],ch        # 0x4686c05e
  417c1a:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  417c1e:	movsxd ebp,DWORD PTR [rdi+0x6d]
  417c21:	jo     0x417c8c
  417c23:	ins    BYTE PTR es:[rdi],dx
  417c24:	and    BYTE PTR gs:[rbx+0x6f],ah
  417c28:	ins    DWORD PTR es:[rdi],dx
  417c29:	ins    DWORD PTR es:[rdi],dx
  417c2a:	(bad)  
  417c2b:	outs   dx,BYTE PTR ds:[rsi]
  417c2c:	fs jae 0x417c5d
  417c2f:	or     cl,BYTE PTR [rdx]
  417c31:	and    BYTE PTR [rax],ah
  417c33:	sub    eax,0x42494c6c
  417c38:	and    BYTE PTR [rax],ah
  417c3a:	and    BYTE PTR [rax],ah
  417c3c:	and    BYTE PTR [rax],ah
  417c3e:	and    BYTE PTR [rax],ah
  417c40:	and    BYTE PTR [rax],ah
  417c42:	and    BYTE PTR [rax],ah
  417c44:	and    BYTE PTR [rax],ah
  417c46:	and    BYTE PTR [rax],ah
  417c48:	and    BYTE PTR [rax],ah
  417c4a:	and    BYTE PTR [rcx+0x64],al
  417c4d:	and    BYTE PTR fs:[rcx+rbp*2+0x62],ch
  417c52:	jb     0x417cb5
  417c54:	jb     0x417ccf
  417c56:	and    BYTE PTR [rcx+rcx*2+0x42],cl
  417c5a:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  417c5e:	ins    BYTE PTR es:[rdi],dx
  417c5f:	imul   ebp,DWORD PTR [rsi+0x6b],0x6d6f6320
  417c66:	ins    DWORD PTR es:[rdi],dx
  417c67:	(bad)  
  417c68:	outs   dx,BYTE PTR ds:[rsi]
  417c69:	fs or  cl,BYTE PTR cs:[rdx]
  417c6d:	and    BYTE PTR [rax],ah
  417c6f:	sub    eax,0x5249444c
  417c74:	and    BYTE PTR [rax],ah
  417c76:	and    BYTE PTR [rax],ah
  417c78:	and    BYTE PTR [rax],ah
  417c7a:	and    BYTE PTR [rax],ah
  417c7c:	and    BYTE PTR [rax],ah
  417c7e:	and    BYTE PTR [rax],ah
  417c80:	and    BYTE PTR [rax],ah
  417c82:	and    BYTE PTR [rax],ah
  417c84:	and    BYTE PTR [rax],ah
  417c86:	and    BYTE PTR [rcx+0x64],al
  417c89:	and    BYTE PTR fs:[rip+0x5249444c],ch        # 0x528ac0dc
  417c90:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  417c94:	ins    BYTE PTR es:[rdi],dx
  417c95:	imul   ebp,DWORD PTR [rsi+0x6b],0x6d6f6320
  417c9c:	ins    DWORD PTR es:[rdi],dx
  417c9d:	(bad)  
  417c9e:	outs   dx,BYTE PTR ds:[rsi]
  417c9f:	fs or  cl,BYTE PTR cs:[rdx]
  417ca3:	and    BYTE PTR [rax],ah
  417ca5:	sub    eax,0x2d202c4d
  417caa:	sub    eax,0x65706564
  417caf:	outs   dx,BYTE PTR ds:[rsi]
  417cb0:	and    BYTE PTR fs:[rax],ah
  417cb3:	and    BYTE PTR [rax],ah
  417cb5:	and    BYTE PTR [rax],ah
  417cb7:	and    BYTE PTR [rax],ah
  417cb9:	and    BYTE PTR [rax],ah
  417cbb:	and    BYTE PTR [rax],ah
  417cbd:	rex.RXB
  417cbe:	outs   dx,BYTE PTR gs:[rsi]
  417cc0:	gs jb  0x417d24
  417cc3:	je     0x417d2a
  417cc5:	and    BYTE PTR [rbp+riz*2+0x70],ah
  417cc9:	outs   dx,BYTE PTR gs:[rsi]
  417ccb:	fs outs dx,BYTE PTR gs:[rsi]
  417cce:	movsxd edi,DWORD PTR [rcx+0x20]
  417cd1:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x2820
  417cd8:	cs sub DWORD PTR fs:[rax],esp
  417cdc:	outs   dx,WORD PTR ds:[rsi]
  417cde:	jb     0x417d00
  417ce0:	rex.XB and BYTE PTR [r9+0x6e],spl
  417ce4:	and    BYTE PTR fs:[rbx+0x2b],al
  417ce8:	sub    ecx,DWORD PTR [rdx]
  417cea:	and    BYTE PTR [rax],ah
  417cec:	and    BYTE PTR [rax],ah
  417cee:	and    BYTE PTR [rax],ah
  417cf0:	and    BYTE PTR [rax],ah
  417cf2:	and    BYTE PTR [rax],ah
  417cf4:	and    BYTE PTR [rax],ah
  417cf6:	and    BYTE PTR [rax],ah
  417cf8:	and    BYTE PTR [rax],ah
  417cfa:	and    BYTE PTR [rax],ah
  417cfc:	and    BYTE PTR [rax],ah
  417cfe:	and    BYTE PTR [rax],ah
  417d00:	and    BYTE PTR [rax],ah
  417d02:	and    BYTE PTR [rax],ah
  417d04:	jae    0x417d75
  417d06:	jne    0x417d7a
  417d08:	movsxd esp,DWORD PTR [rbp+0x20]
  417d0b:	imul   bp,WORD PTR [rbp+riz*2+0x73],0xa2e
  417d12:	or     ah,BYTE PTR [rax]
  417d14:	and    BYTE PTR [rip+0x52494452],ch        # 0x528ac16c
  417d1a:	and    BYTE PTR [rax],ah
  417d1c:	and    BYTE PTR [rax],ah
  417d1e:	and    BYTE PTR [rax],ah
  417d20:	and    BYTE PTR [rax],ah
  417d22:	and    BYTE PTR [rax],ah
  417d24:	and    BYTE PTR [rax],ah
  417d26:	and    BYTE PTR [rax],ah
  417d28:	and    BYTE PTR [rax],ah
  417d2a:	and    BYTE PTR [rax],ah
  417d2c:	and    BYTE PTR [rcx+0x64],al
  417d2f:	and    BYTE PTR fs:[rip+0x52494452],ch        # 0x528ac188
  417d36:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  417d3a:	ins    BYTE PTR es:[rdi],dx
  417d3b:	imul   ebp,DWORD PTR [rsi+0x6b],0x6d6f6320
  417d42:	ins    DWORD PTR es:[rdi],dx
  417d43:	(bad)  
  417d44:	outs   dx,BYTE PTR ds:[rsi]
  417d45:	fs or  cl,BYTE PTR cs:[rdx]
  417d49:	and    BYTE PTR [rax],ah
  417d4b:	sub    eax,0x2e2c6c57
  417d50:	cs and BYTE PTR cs:[rax],ah
  417d54:	and    BYTE PTR [rax],ah
  417d56:	and    BYTE PTR [rax],ah
  417d58:	and    BYTE PTR [rax],ah
  417d5a:	and    BYTE PTR [rax],ah
  417d5c:	and    BYTE PTR [rax],ah
  417d5e:	and    BYTE PTR [rax],ah
  417d60:	and    BYTE PTR [rax],ah
  417d62:	and    BYTE PTR [rax+0x61],dl
  417d65:	jae    0x417dda
  417d67:	and    BYTE PTR [rsi+0x6c],ah
  417d6a:	(bad)  
  417d6b:	addr32 jae 0x417d8e
  417d6e:	je     0x417dd8
  417d70:	outs   dx,DWORD PTR ds:[rsi]
  417d71:	jne    0x417dda
  417d73:	push   0x65687420
  417d78:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  417d7c:	imul   esp,DWORD PTR [rbp+0x72],0x20
  417d80:	ins    BYTE PTR es:[rdi],dx
  417d81:	imul   ebp,DWORD PTR [rbx+0x65],0x6c572d20
  417d88:	sub    al,0x2d
  417d8a:	jb     0x417dfc
  417d8c:	(bad)  
  417d8d:	je     0x417df7
  417d8f:	cmp    eax,0xa2e2e2e
  417d94:	or     ah,BYTE PTR [rax]
  417d96:	and    BYTE PTR [rip+0x2e2e2e57],ch        # 0x2e6fabf3
  417d9c:	and    BYTE PTR [rax],ah
  417d9e:	and    BYTE PTR [rax],ah
  417da0:	and    BYTE PTR [rax],ah
  417da2:	and    BYTE PTR [rax],ah
  417da4:	and    BYTE PTR [rax],ah
  417da6:	and    BYTE PTR [rax],ah
  417da8:	and    BYTE PTR [rax],ah
  417daa:	and    BYTE PTR [rax],ah
  417dac:	and    BYTE PTR [rax],ah
  417dae:	and    BYTE PTR [rax+0x61],dl
  417db1:	jae    0x417e26
  417db3:	and    BYTE PTR [rsi+0x6c],ah
  417db6:	(bad)  
  417db7:	addr32 jae 0x417dda
  417dba:	je     0x417e24
  417dbc:	outs   dx,DWORD PTR ds:[rsi]
  417dbd:	jne    0x417e26
  417dbf:	push   0x65687420
  417dc4:	and    BYTE PTR [rbx+0x6f],ah
  417dc7:	ins    DWORD PTR es:[rdi],dx
  417dc8:	jo     0x417e33
  417dca:	ins    BYTE PTR es:[rdi],dx
  417dcb:	gs jb  0x417dee
  417dce:	ins    BYTE PTR es:[rdi],dx
  417dcf:	imul   ebp,DWORD PTR [rbx+0x65],0x61572d20
  417dd6:	sub    al,0x4f
  417dd8:	push   rax
  417dd9:	push   rsp
  417dda:	rex.WB
  417ddb:	rex.WRXB
  417ddc:	rex.WRX
  417ddd:	or     cl,BYTE PTR cs:[rdx]
  417de0:	and    BYTE PTR [rax],ah
  417de2:	sub    eax,0x2d202c63
  417de7:	sub    eax,0x706d6f63
  417dec:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x20202020
  417df4:	and    BYTE PTR [rax],ah
  417df6:	and    BYTE PTR [rax],ah
  417df8:	and    BYTE PTR [rax],ah
  417dfa:	rex.XB outs dx,DWORD PTR ds:[rsi]
  417dfc:	ins    DWORD PTR es:[rdi],dx
  417dfd:	jo     0x417e68
  417dff:	ins    BYTE PTR es:[rdi],dx
  417e00:	gs sub al,0x20
  417e03:	(bad)  
  417e04:	jne    0x417e7a
  417e06:	and    BYTE PTR [rdi+rbp*2+0x20],ah
  417e0a:	outs   dx,BYTE PTR ds:[rsi]
  417e0b:	outs   dx,DWORD PTR ds:[rsi]
  417e0c:	je     0x417e2e
  417e0e:	ins    BYTE PTR es:[rdi],dx
  417e0f:	imul   ebp,DWORD PTR [rsi+0x6b],0x200a0a2e
  417e16:	and    BYTE PTR [rip+0x4946206f],ch        # 0x49879e8b
  417e1c:	rex.WR
  417e1d:	rex.RB sub al,0x20
  417e20:	sub    eax,0x74756f2d
  417e25:	jo     0x417e9c
  417e27:	je     0x417e49
  417e29:	rex.RX
  417e2a:	rex.WB
  417e2b:	rex.WR
  417e2c:	and    BYTE PTR [r8],r12b
  417e2f:	rex.WRXB jne 0x417ea6
  417e32:	jo     0x417ea9
  417e34:	je     0x417e56
  417e36:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  417e3d:	gs and BYTE PTR cs:[rax],ah
  417e41:	rex.R
  417e42:	gs data16 (bad) 
  417e45:	jne    0x417eb3
  417e47:	je     0x417e69
  417e49:	gs js  0x417ec0
  417e4c:	outs   dx,BYTE PTR gs:[rsi]
  417e4e:	jae    0x417eb9
  417e50:	outs   dx,DWORD PTR ds:[rsi]
  417e51:	outs   dx,BYTE PTR ds:[rsi]
  417e52:	and    BYTE PTR [rcx+0x73],ch
  417e55:	and    BYTE PTR [rsi],ch
  417e57:	outs   dx,DWORD PTR ds:[rsi]
  417e58:	movsxd esi,DWORD PTR [rdx+rcx*1+0x20]
  417e5c:	and    BYTE PTR [rax],ah
  417e5e:	and    BYTE PTR [rax],ah
  417e60:	and    BYTE PTR [rax],ah
  417e62:	and    BYTE PTR [rax],ah
  417e64:	and    BYTE PTR [rax],ah
  417e66:	and    BYTE PTR [rax],ah
  417e68:	and    BYTE PTR [rax],ah
  417e6a:	and    BYTE PTR [rax],ah
  417e6c:	and    BYTE PTR [rax],ah
  417e6e:	and    BYTE PTR [rax],ah
  417e70:	and    BYTE PTR [rax],ah
  417e72:	and    BYTE PTR [rax],ah
  417e74:	and    BYTE PTR [rax],ch
  417e76:	outs   dx,DWORD PTR ds:[rsi]
  417e77:	jb     0x417e99
  417e79:	cs ins DWORD PTR es:[rdi],dx
  417e7b:	gs js  0x417e9e
  417e7e:	imul   esp,DWORD PTR [rsi+0x20],0x656d2d2d
  417e85:	js     0x417ea7
  417e87:	imul   esi,DWORD PTR [rbx+0x20],0x63657073
  417e8e:	imul   esp,DWORD PTR [rsi+0x69],0x20296465
  417e95:	jne    0x417f05
  417e97:	ins    BYTE PTR es:[rdi],dx
  417e98:	gs jae 0x417f0e
  417e9b:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  417e9f:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  417ea3:	or     ah,BYTE PTR [rax]
  417ea5:	and    BYTE PTR [rax],ah
  417ea7:	and    BYTE PTR [rax],ah
  417ea9:	and    BYTE PTR [rax],ah
  417eab:	and    BYTE PTR [rax],ah
  417ead:	and    BYTE PTR [rax],ah
  417eaf:	and    BYTE PTR [rax],ah
  417eb1:	and    BYTE PTR [rax],ah
  417eb3:	and    BYTE PTR [rax],ah
  417eb5:	and    BYTE PTR [rax],ah
  417eb7:	and    BYTE PTR [rax],ah
  417eb9:	and    BYTE PTR [rax],ah
  417ebb:	and    BYTE PTR [rax],ah
  417ebd:	and    BYTE PTR [rcx+0x20],ah
  417ec0:	jae    0x417f36
  417ec2:	(bad)  
  417ec3:	outs   dx,BYTE PTR ds:[rsi]
  417ec4:	fs sub eax,0x6e6f6c61
  417eca:	and    BYTE PTR gs:[rbp+0x78],ah
  417ece:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  417ed2:	(bad)  
  417ed3:	(bad)  
  417ed4:	ins    BYTE PTR es:[rdi],dx
  417ed5:	gs or  cl,BYTE PTR cs:[rdx]
  417ed9:	and    BYTE PTR [rax],ah
  417edb:	sub    eax,0x20202067
  417ee0:	and    BYTE PTR [rax],ah
  417ee2:	and    BYTE PTR [rax],ah
  417ee4:	and    BYTE PTR [rax],ah
  417ee6:	and    BYTE PTR [rax],ah
  417ee8:	and    BYTE PTR [rax],ah
  417eea:	and    BYTE PTR [rax],ah
  417eec:	and    BYTE PTR [rax],ah
  417eee:	and    BYTE PTR [rax],ah
  417ef0:	and    BYTE PTR [rax],ah
  417ef2:	and    BYTE PTR [rbp+0x6e],al
  417ef5:	(bad)  
  417ef6:	(bad)  
  417ef7:	ins    BYTE PTR es:[rdi],dx
  417ef8:	and    BYTE PTR gs:[rbp+riz*2+0x62],ah
  417efd:	jne    0x417f66
  417eff:	imul   ebp,DWORD PTR [esi+0x67],0x74706f20
  417f07:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f662073
  417f0e:	jb     0x417f30
  417f10:	movsxd ebp,DWORD PTR [rdi+0x6d]
  417f13:	jo     0x417f7e
  417f15:	ins    BYTE PTR es:[rdi],dx
  417f16:	gs jb  0x417f8c
  417f19:	or     cl,BYTE PTR cs:[rdx]
  417f1c:	and    BYTE PTR [rax],ah
  417f1e:	sub    eax,0x41562070
  417f23:	push   rdx
  417f24:	sub    al,0x20
  417f26:	sub    eax,0x6972702d
  417f2b:	outs   dx,BYTE PTR ds:[rsi]
  417f2c:	je     0x417f4e
  417f2e:	push   rsi
  417f2f:	push   r10
  417f31:	and    BYTE PTR [rax],ah
  417f33:	and    BYTE PTR [rax],ah
  417f35:	and    BYTE PTR [rax+0x72],dl
  417f38:	imul   ebp,DWORD PTR [rsi+0x74],0x6e6f6320
  417f3f:	imul   sp,WORD PTR [rdi+0x75],0x6172
  417f45:	je     0x417fb0
  417f47:	outs   dx,DWORD PTR ds:[rsi]
  417f48:	outs   dx,BYTE PTR ds:[rsi]
  417f49:	and    BYTE PTR [rsi+0x61],dh
  417f4c:	jb     0x417fb7
  417f4e:	(bad)  
  417f4f:	(bad)  
  417f50:	ins    BYTE PTR es:[rdi],dx
  417f51:	and    BYTE PTR gs:[rsi+0x41],dl
  417f55:	push   rdx
  417f56:	and    BYTE PTR cs:[rax],ah
  417f59:	push   rdx
  417f5a:	movsxd ebp,DWORD PTR gs:[rdi+0x67]
  417f5e:	outs   dx,BYTE PTR ds:[rsi]
  417f5f:	imul   edi,DWORD PTR [rdx+0x65],0x20200a64
  417f66:	and    BYTE PTR [rax],ah
  417f68:	and    BYTE PTR [rax],ah
  417f6a:	and    BYTE PTR [rax],ah
  417f6c:	and    BYTE PTR [rax],ah
  417f6e:	and    BYTE PTR [rax],ah
  417f70:	and    BYTE PTR [rax],ah
  417f72:	and    BYTE PTR [rax],ah
  417f74:	and    BYTE PTR [rax],ah
  417f76:	and    BYTE PTR [rax],ah
  417f78:	and    BYTE PTR [rax],ah
  417f7a:	and    BYTE PTR [rax],ah
  417f7c:	and    BYTE PTR [rax],ah
  417f7e:	jbe    0x417fe1
  417f80:	jb     0x417feb
  417f82:	(bad)  
  417f83:	(bad)  
  417f84:	ins    BYTE PTR es:[rdi],dx
  417f85:	gs jae 0x417fa8
  417f88:	(bad)  
  417f89:	jb     0x417ff0
  417f8b:	cmp    cl,BYTE PTR [rdx]
  417f8d:	or     ah,BYTE PTR [rax]
  417f8f:	and    BYTE PTR [rax],ah
  417f91:	and    BYTE PTR [rax],ah
  417f93:	and    BYTE PTR [rax],ah
  417f95:	and    BYTE PTR [rax],ah
  417f97:	and    BYTE PTR [rax],ah
  417f99:	and    BYTE PTR [rax],ah
  417f9b:	and    BYTE PTR [rax],ah
  417f9d:	and    BYTE PTR [rax],ah
  417f9f:	and    BYTE PTR [rax],ah
  417fa1:	and    BYTE PTR [rax],ah
  417fa3:	and    BYTE PTR [rax],ah
  417fa5:	and    BYTE PTR [rax],ah
  417fa7:	and    BYTE PTR [rax],ah
  417fa9:	and    BYTE PTR [rcx+0x4c],al
  417fac:	rex.WR pop rdi
  417fae:	rex.XB
  417faf:	rex.RX
  417fb0:	rex.WR
  417fb1:	rex.B
  417fb2:	rex.RXB push r11
  417fb4:	and    BYTE PTR [rax],ah
  417fb6:	and    BYTE PTR [rax],ah
  417fb8:	and    BYTE PTR [rax],ah
  417fba:	and    BYTE PTR [rax],ah
  417fbc:	and    BYTE PTR [rax],ah
  417fbe:	and    BYTE PTR [rax],ah
  417fc0:	and    BYTE PTR [rax],ah
  417fc2:	and    BYTE PTR [rax],ah
  417fc4:	and    BYTE PTR [rax],ah
  417fc6:	rex.WB
  417fc7:	rex.WRX
  417fc8:	rex.XB
  417fc9:	rex.RX
  417fca:	rex.WR
  417fcb:	rex.B
  417fcc:	rex.RXB push r11
  417fce:	or     ah,BYTE PTR [rax]
  417fd0:	and    BYTE PTR [rax],ah
  417fd2:	and    BYTE PTR [rax],ah
  417fd4:	and    BYTE PTR [rax],ah
  417fd6:	and    BYTE PTR [rax],ah
  417fd8:	and    BYTE PTR [rax],ah
  417fda:	and    BYTE PTR [rax],ah
  417fdc:	and    BYTE PTR [rax],ah
  417fde:	and    BYTE PTR [rax],ah
  417fe0:	and    BYTE PTR [rax],ah
  417fe2:	and    BYTE PTR [rax],ah
  417fe4:	and    BYTE PTR [rax],ah
  417fe6:	and    BYTE PTR [rax],ah
  417fe8:	and    BYTE PTR [rax],ah
  417fea:	and    BYTE PTR [rcx+0x4c],al
  417fed:	rex.WR pop rdi
  417fef:	rex.XB pop r8
  417ff1:	pop    rax
  417ff2:	rex.RX
  417ff3:	rex.WR
  417ff4:	rex.B
  417ff5:	rex.RXB push r11
  417ff7:	and    BYTE PTR [rax],ah
  417ff9:	and    BYTE PTR [rax],ah
  417ffb:	and    BYTE PTR [rax],ah
  417ffd:	and    BYTE PTR [rax],ah
  417fff:	and    BYTE PTR [rax],ah
  418001:	and    BYTE PTR [rax],ah
  418003:	and    BYTE PTR [rax],ah
  418005:	and    BYTE PTR [rax],ah
  418007:	rex.WB
  418008:	rex.WRX
  418009:	rex.XB
  41800a:	rex.WR push rbp
  41800c:	rex.R
  41800d:	rex.RB
  41800e:	rex.R
  41800f:	rex.WB push r10
  418011:	or     ah,BYTE PTR [rax]
  418013:	and    BYTE PTR [rax],ah
  418015:	and    BYTE PTR [rax],ah
  418017:	and    BYTE PTR [rax],ah
  418019:	and    BYTE PTR [rax],ah
  41801b:	and    BYTE PTR [rax],ah
  41801d:	and    BYTE PTR [rax],ah
  41801f:	and    BYTE PTR [rax],ah
  418021:	and    BYTE PTR [rax],ah
  418023:	and    BYTE PTR [rax],ah
  418025:	and    BYTE PTR [rax],ah
  418027:	and    BYTE PTR [rax],ah
  418029:	and    BYTE PTR [rax],ah
  41802b:	and    BYTE PTR [rax],ah
  41802d:	and    BYTE PTR [rcx+0x4c],al
  418030:	rex.WR pop rdi
  418032:	rex.RX
  418033:	rex.RX
  418034:	rex.WR
  418035:	rex.B
  418036:	rex.RXB push r11
  418038:	and    BYTE PTR [rax],ah
  41803a:	and    BYTE PTR [rax],ah
  41803c:	and    BYTE PTR [rax],ah
  41803e:	and    BYTE PTR [rax],ah
  418040:	and    BYTE PTR [rax],ah
  418042:	and    BYTE PTR [rax],ah
  418044:	and    BYTE PTR [rax],ah
  418046:	and    BYTE PTR [rax],ah
  418048:	and    BYTE PTR [rax],ah
  41804a:	rex.WR
  41804b:	push   r8
  41804d:	rex.B
  41804e:	rex.XB
  41804f:	rex.WXB pop r15
  418051:	rex.WR
  418052:	rex.WB
  418053:	rex.X push rbx
  418055:	or     ah,BYTE PTR [rax]
  418057:	and    BYTE PTR [rax],ah
  418059:	and    BYTE PTR [rax],ah
  41805b:	and    BYTE PTR [rax],ah
  41805d:	and    BYTE PTR [rax],ah
  41805f:	and    BYTE PTR [rax],ah
  418061:	and    BYTE PTR [rax],ah
  418063:	and    BYTE PTR [rax],ah
  418065:	and    BYTE PTR [rax],ah
  418067:	and    BYTE PTR [rax],ah
  418069:	and    BYTE PTR [rax],ah
  41806b:	and    BYTE PTR [rax],ah
  41806d:	and    BYTE PTR [rax],ah
  41806f:	and    BYTE PTR [rax],ah
  418071:	and    BYTE PTR [rcx+0x4c],al
  418074:	rex.WR pop rdi
  418076:	rex.WR
  418077:	rex.R
  418078:	rex.RX
  418079:	rex.WR
  41807a:	rex.B
  41807b:	rex.RXB push r11
  41807d:	and    BYTE PTR [rax],ah
  41807f:	and    BYTE PTR [rax],ah
  418081:	and    BYTE PTR [rax],ah
  418083:	and    BYTE PTR [rax],ah
  418085:	and    BYTE PTR [rax],ah
  418087:	and    BYTE PTR [rax],ah
  418089:	and    BYTE PTR [rax],ah
  41808b:	and    BYTE PTR [rax],ah
  41808d:	and    BYTE PTR [rsp+rax*2+0x5f],cl
  418091:	rex.XB pop r8
  418093:	pop    rax
  418094:	or     ah,BYTE PTR [rax]
  418096:	and    BYTE PTR [rax],ah
  418098:	and    BYTE PTR [rax],ah
  41809a:	and    BYTE PTR [rax],ah
  41809c:	and    BYTE PTR [rax],ah
  41809e:	and    BYTE PTR [rax],ah
  4180a0:	and    BYTE PTR [rax],ah
  4180a2:	and    BYTE PTR [rax],ah
  4180a4:	and    BYTE PTR [rax],ah
  4180a6:	and    BYTE PTR [rax],ah
  4180a8:	and    BYTE PTR [rax],ah
  4180aa:	and    BYTE PTR [rax],ah
  4180ac:	and    BYTE PTR [rax],ah
  4180ae:	and    BYTE PTR [rax],ah
  4180b0:	and    BYTE PTR [rcx+0x52],al
  4180b3:	and    BYTE PTR [rax],ah
  4180b5:	and    BYTE PTR [rax],ah
  4180b7:	and    BYTE PTR [rax],ah
  4180b9:	and    BYTE PTR [rax],ah
  4180bb:	and    BYTE PTR [rax],ah
  4180bd:	and    BYTE PTR [rax],ah
  4180bf:	and    BYTE PTR [rax],ah
  4180c1:	and    BYTE PTR [rax],ah
  4180c3:	and    BYTE PTR [rax],ah
  4180c5:	and    BYTE PTR [rax],ah
  4180c7:	and    BYTE PTR [rax],ah
  4180c9:	and    BYTE PTR [rax],ah
  4180cb:	and    BYTE PTR [rax],ah
  4180cd:	rex.WR
  4180ce:	rex.R
  4180cf:	rex.RX
  4180d0:	rex.WR
  4180d1:	rex.B
  4180d2:	rex.RXB push r11
  4180d4:	or     ah,BYTE PTR [rax]
  4180d6:	and    BYTE PTR [rax],ah
  4180d8:	and    BYTE PTR [rax],ah
  4180da:	and    BYTE PTR [rax],ah
  4180dc:	and    BYTE PTR [rax],ah
  4180de:	and    BYTE PTR [rax],ah
  4180e0:	and    BYTE PTR [rax],ah
  4180e2:	and    BYTE PTR [rax],ah
  4180e4:	and    BYTE PTR [rax],ah
  4180e6:	and    BYTE PTR [rax],ah
  4180e8:	and    BYTE PTR [rax],ah
  4180ea:	and    BYTE PTR [rax],ah
  4180ec:	and    BYTE PTR [rax],ah
  4180ee:	and    BYTE PTR [rax],ah
  4180f0:	and    BYTE PTR [rdx+0x4c],al
  4180f3:	push   r11
  4180f5:	pop    rdi
  4180f6:	rex.WR
  4180f7:	rex.WB
  4180f8:	rex.X push rbx
  4180fa:	and    BYTE PTR [rax],ah
  4180fc:	and    BYTE PTR [rax],ah
  4180fe:	and    BYTE PTR [rax],ah
  418100:	and    BYTE PTR [rax],ah
  418102:	and    BYTE PTR [rax],ah
  418104:	and    BYTE PTR [rax],ah
  418106:	and    BYTE PTR [rax],ah
  418108:	and    BYTE PTR [rax],ah
  41810a:	and    BYTE PTR [rax],ah
  41810c:	and    BYTE PTR [rsp+rax*2+0x5f],cl
  418110:	push   rbx
  418111:	push   rsp
  418112:	push   r12
  418114:	rex.WB
  418115:	rex.XB pop r15
  418117:	rex.RX
  418118:	rex.WR
  418119:	rex.B
  41811a:	rex.RXB or r12b,BYTE PTR [r8]
  41811d:	and    BYTE PTR [rax],ah
  41811f:	and    BYTE PTR [rax],ah
  418121:	and    BYTE PTR [rax],ah
  418123:	and    BYTE PTR [rax],ah
  418125:	and    BYTE PTR [rax],ah
  418127:	and    BYTE PTR [rax],ah
  418129:	and    BYTE PTR [rax],ah
  41812b:	and    BYTE PTR [rax],ah
  41812d:	and    BYTE PTR [rax],ah
  41812f:	and    BYTE PTR [rax],ah
  418131:	and    BYTE PTR [rax],ah
  418133:	and    BYTE PTR [rax],ah
  418135:	and    BYTE PTR [rax],ah
  418137:	and    BYTE PTR [rbx+0x43],al
  41813a:	and    BYTE PTR [rax],ah
  41813c:	and    BYTE PTR [rax],ah
  41813e:	and    BYTE PTR [rax],ah
  418140:	and    BYTE PTR [rax],ah
  418142:	and    BYTE PTR [rax],ah
  418144:	and    BYTE PTR [rax],ah
  418146:	and    BYTE PTR [rax],ah
  418148:	and    BYTE PTR [rax],ah
  41814a:	and    BYTE PTR [rax],ah
  41814c:	and    BYTE PTR [rax],ah
  41814e:	and    BYTE PTR [rax],ah
  418150:	and    BYTE PTR [rax],ah
  418152:	and    BYTE PTR [rax],ah
  418154:	rex.WR
  418155:	rex.RX
  418156:	rex.WR
  418157:	rex.B
  418158:	rex.RXB push r11
  41815a:	or     ah,BYTE PTR [rax]
  41815c:	and    BYTE PTR [rax],ah
  41815e:	and    BYTE PTR [rax],ah
  418160:	and    BYTE PTR [rax],ah
  418162:	and    BYTE PTR [rax],ah
  418164:	and    BYTE PTR [rax],ah
  418166:	and    BYTE PTR [rax],ah
  418168:	and    BYTE PTR [rax],ah
  41816a:	and    BYTE PTR [rax],ah
  41816c:	and    BYTE PTR [rax],ah
  41816e:	and    BYTE PTR [rax],ah
  418170:	and    BYTE PTR [rax],ah
  418172:	and    BYTE PTR [rax],ah
  418174:	and    BYTE PTR [rax],ah
  418176:	and    BYTE PTR [rbx+0x46],al
  418179:	rex.WR
  41817a:	rex.B
  41817b:	rex.RXB push r11
  41817d:	and    BYTE PTR [rax],ah
  41817f:	and    BYTE PTR [rax],ah
  418181:	and    BYTE PTR [rax],ah
  418183:	and    BYTE PTR [rax],ah
  418185:	and    BYTE PTR [rax],ah
  418187:	and    BYTE PTR [rax],ah
  418189:	and    BYTE PTR [rax],ah
  41818b:	and    BYTE PTR [rax],ah
  41818d:	and    BYTE PTR [rax],ah
  41818f:	and    BYTE PTR [rax],ah
  418191:	and    BYTE PTR [rax],ah
  418193:	rex.WR
  418194:	rex.WB
  418195:	rex.X
  418196:	rex.R
  418197:	rex.WB push r10
  418199:	or     ah,BYTE PTR [rax]
  41819b:	and    BYTE PTR [rax],ah
  41819d:	and    BYTE PTR [rax],ah
  41819f:	and    BYTE PTR [rax],ah
  4181a1:	and    BYTE PTR [rax],ah
  4181a3:	and    BYTE PTR [rax],ah
  4181a5:	and    BYTE PTR [rax],ah
  4181a7:	and    BYTE PTR [rax],ah
  4181a9:	and    BYTE PTR [rax],ah
  4181ab:	and    BYTE PTR [rax],ah
  4181ad:	and    BYTE PTR [rax],ah
  4181af:	and    BYTE PTR [rax],ah
  4181b1:	and    BYTE PTR [rax],ah
  4181b3:	and    BYTE PTR [rax],ah
  4181b5:	and    BYTE PTR [rbx+0x50],al
  4181b8:	rex.WB
  4181b9:	rex.XB
  4181ba:	rex.RX
  4181bb:	rex.WR
  4181bc:	rex.B
  4181bd:	rex.RXB and BYTE PTR [r8],r12b
  4181c0:	and    BYTE PTR [rax],ah
  4181c2:	and    BYTE PTR [rax],ah
  4181c4:	and    BYTE PTR [rax],ah
  4181c6:	and    BYTE PTR [rax],ah
  4181c8:	and    BYTE PTR [rax],ah
  4181ca:	and    BYTE PTR [rax],ah
  4181cc:	and    BYTE PTR [rax],ah
  4181ce:	and    BYTE PTR [rax],ah
  4181d0:	and    BYTE PTR [rax],ah
  4181d2:	rex.WR
  4181d3:	rex.WB
  4181d4:	rex.X
  4181d5:	rex.WRXB
  4181d6:	rex.XB push r12
  4181d8:	push   r14
  4181da:	or     r12b,BYTE PTR [r8]
  4181dd:	and    BYTE PTR [rax],ah
  4181df:	and    BYTE PTR [rax],ah
  4181e1:	and    BYTE PTR [rax],ah
  4181e3:	and    BYTE PTR [rax],ah
  4181e5:	and    BYTE PTR [rax],ah
  4181e7:	and    BYTE PTR [rax],ah
  4181e9:	and    BYTE PTR [rax],ah
  4181eb:	and    BYTE PTR [rax],ah
  4181ed:	and    BYTE PTR [rax],ah
  4181ef:	and    BYTE PTR [rax],ah
  4181f1:	and    BYTE PTR [rax],ah
  4181f3:	and    BYTE PTR [rax],ah
  4181f5:	and    BYTE PTR [rax],ah
  4181f7:	and    BYTE PTR [rbx+0x50],al
  4181fa:	push   rax
  4181fb:	rex.RX
  4181fc:	rex.WR
  4181fd:	rex.B
  4181fe:	rex.RXB push r11
  418200:	and    BYTE PTR [rax],ah
  418202:	and    BYTE PTR [rax],ah
  418204:	and    BYTE PTR [rax],ah
  418206:	and    BYTE PTR [rax],ah
  418208:	and    BYTE PTR [rax],ah
  41820a:	and    BYTE PTR [rax],ah
  41820c:	and    BYTE PTR [rax],ah
  41820e:	and    BYTE PTR [rax],ah
  418210:	and    BYTE PTR [rax],ah
  418212:	and    BYTE PTR [rax],ah
  418214:	rex.WR
  418215:	rex.WB
  418216:	rex.X
  418217:	rex.WRXB
  418218:	rex.XB push r12
  41821a:	rex.WB
  41821b:	rex.WRX push rsp
  41821d:	rex.RB push r10
  41821f:	push   rax
  418220:	or     ah,BYTE PTR [rax]
  418222:	and    BYTE PTR [rax],ah
  418224:	and    BYTE PTR [rax],ah
  418226:	and    BYTE PTR [rax],ah
  418228:	and    BYTE PTR [rax],ah
  41822a:	and    BYTE PTR [rax],ah
  41822c:	and    BYTE PTR [rax],ah
  41822e:	and    BYTE PTR [rax],ah
  418230:	and    BYTE PTR [rax],ah
  418232:	and    BYTE PTR [rax],ah
  418234:	and    BYTE PTR [rax],ah
  418236:	and    BYTE PTR [rax],ah
  418238:	and    BYTE PTR [rax],ah
  41823a:	and    BYTE PTR [rax],ah
  41823c:	and    BYTE PTR [rbx+0x58],al
  41823f:	pop    rax
  418240:	and    BYTE PTR [rax],ah
  418242:	and    BYTE PTR [rax],ah
  418244:	and    BYTE PTR [rax],ah
  418246:	and    BYTE PTR [rax],ah
  418248:	and    BYTE PTR [rax],ah
  41824a:	and    BYTE PTR [rax],ah
  41824c:	and    BYTE PTR [rax],ah
  41824e:	and    BYTE PTR [rax],ah
  418250:	and    BYTE PTR [rax],ah
  418252:	and    BYTE PTR [rax],ah
  418254:	and    BYTE PTR [rax],ah
  418256:	and    BYTE PTR [rax],ah
  418258:	and    BYTE PTR [rcx+rcx*2+0x42],cl
  41825c:	push   rbx
  41825d:	or     ah,BYTE PTR [rax]
  41825f:	and    BYTE PTR [rax],ah
  418261:	and    BYTE PTR [rax],ah
  418263:	and    BYTE PTR [rax],ah
  418265:	and    BYTE PTR [rax],ah
  418267:	and    BYTE PTR [rax],ah
  418269:	and    BYTE PTR [rax],ah
  41826b:	and    BYTE PTR [rax],ah
  41826d:	and    BYTE PTR [rax],ah
  41826f:	and    BYTE PTR [rax],ah
  418271:	and    BYTE PTR [rax],ah
  418273:	and    BYTE PTR [rax],ah
  418275:	and    BYTE PTR [rax],ah
  418277:	and    BYTE PTR [rax],ah
  418279:	and    BYTE PTR [rbx+0x58],al
  41827c:	pop    rax
  41827d:	rex.RX
  41827e:	rex.WR
  41827f:	rex.B
  418280:	rex.RXB push r11
  418282:	and    BYTE PTR [rax],ah
  418284:	and    BYTE PTR [rax],ah
  418286:	and    BYTE PTR [rax],ah
  418288:	and    BYTE PTR [rax],ah
  41828a:	and    BYTE PTR [rax],ah
  41828c:	and    BYTE PTR [rax],ah
  41828e:	and    BYTE PTR [rax],ah
  418290:	and    BYTE PTR [rax],ah
  418292:	and    BYTE PTR [rax],ah
  418294:	and    BYTE PTR [rax],ah
  418296:	rex.WRXB
  418297:	rex.XB push r12
  418299:	push   r14
  41829b:	rex.RB pop r15
  41829d:	rex.W
  41829e:	rex.WRXB
  41829f:	rex.WRB
  4182a0:	or     r12b,BYTE PTR [r8]
  4182a3:	and    BYTE PTR [rax],ah
  4182a5:	and    BYTE PTR [rax],ah
  4182a7:	and    BYTE PTR [rax],ah
  4182a9:	and    BYTE PTR [rax],ah
  4182ab:	and    BYTE PTR [rax],ah
  4182ad:	and    BYTE PTR [rax],ah
  4182af:	and    BYTE PTR [rax],ah
  4182b1:	and    BYTE PTR [rax],ah
  4182b3:	and    BYTE PTR [rax],ah
  4182b5:	and    BYTE PTR [rax],ah
  4182b7:	and    BYTE PTR [rax],ah
  4182b9:	and    BYTE PTR [rax],ah
  4182bb:	and    BYTE PTR [rax],ah
  4182bd:	and    BYTE PTR [rbx+0x58],al
  4182c0:	pop    rax
  4182c1:	push   rax
  4182c2:	rex.WB
  4182c3:	rex.XB
  4182c4:	rex.RX
  4182c5:	rex.WR
  4182c6:	rex.B
  4182c7:	rex.RXB and BYTE PTR [r8],r12b
  4182ca:	and    BYTE PTR [rax],ah
  4182cc:	and    BYTE PTR [rax],ah
  4182ce:	and    BYTE PTR [rax],ah
  4182d0:	and    BYTE PTR [rax],ah
  4182d2:	and    BYTE PTR [rax],ah
  4182d4:	and    BYTE PTR [rax],ah
  4182d6:	and    BYTE PTR [rax],ah
  4182d8:	and    BYTE PTR [rax],ah
  4182da:	rex.WRXB
  4182db:	rex.XB push r12
  4182dd:	push   r14
  4182df:	rex.RB pop r15
  4182e1:	rex.WR
  4182e2:	rex.WB
  4182e3:	rex.X push rbx
  4182e5:	or     ah,BYTE PTR [rax]
  4182e7:	and    BYTE PTR [rax],ah
  4182e9:	and    BYTE PTR [rax],ah
  4182eb:	and    BYTE PTR [rax],ah
  4182ed:	and    BYTE PTR [rax],ah
  4182ef:	and    BYTE PTR [rax],ah
  4182f1:	and    BYTE PTR [rax],ah
  4182f3:	and    BYTE PTR [rax],ah
  4182f5:	and    BYTE PTR [rax],ah
  4182f7:	and    BYTE PTR [rax],ah
  4182f9:	and    BYTE PTR [rax],ah
  4182fb:	and    BYTE PTR [rax],ah
  4182fd:	and    BYTE PTR [rax],ah
  4182ff:	and    BYTE PTR [rax],ah
  418301:	and    BYTE PTR [rbp+rax*2+0x50],al
  418305:	rex.RB
  418306:	rex.WRX
  418307:	rex.R pop rdi
  418309:	rex.RB pop r8
  41830b:	push   rsp
  41830c:	push   rdx
  41830d:	pop    r15
  41830f:	push   rbx
  418310:	rex.RB
  418311:	rex.R pop rdi
  418313:	push   rax
  418314:	push   r12
  418316:	push   rsp
  418317:	rex.RB push r10
  418319:	rex.WRX and BYTE PTR [rax],r12b
  41831c:	and    BYTE PTR [rax],ah
  41831e:	rex.WRXB
  41831f:	rex.XB push r12
  418321:	push   r14
  418323:	rex.RB pop r15
  418325:	rex.WR
  418326:	rex.WB
  418327:	rex.WRX
  418328:	rex.WXB pop r15
  41832a:	rex.R
  41832b:	rex.RB push r8
  41832d:	push   rbx
  41832e:	or     ah,BYTE PTR [rax]
  418330:	and    BYTE PTR [rax],ah
  418332:	and    BYTE PTR [rax],ah
  418334:	and    BYTE PTR [rax],ah
  418336:	and    BYTE PTR [rax],ah
  418338:	and    BYTE PTR [rax],ah
  41833a:	and    BYTE PTR [rax],ah
  41833c:	and    BYTE PTR [rax],ah
  41833e:	and    BYTE PTR [rax],ah
  418340:	and    BYTE PTR [rax],ah
  418342:	and    BYTE PTR [rax],ah
  418344:	and    BYTE PTR [rax],ah
  418346:	and    BYTE PTR [rax],ah
  418348:	and    BYTE PTR [rax],ah
  41834a:	and    BYTE PTR [rbp+rax*2+0x50],al
  41834e:	rex.RB
  41834f:	rex.WRX
  418350:	rex.R pop rdi
  418352:	rex.RX
  418353:	rex.WR
  418354:	rex.B
  418355:	rex.RXB push r11
  418357:	and    BYTE PTR [rax],ah
  418359:	and    BYTE PTR [rax],ah
  41835b:	and    BYTE PTR [rax],ah
  41835d:	and    BYTE PTR [rax],ah
  41835f:	and    BYTE PTR [rax],ah
  418361:	and    BYTE PTR [rax],ah
  418363:	and    BYTE PTR [rax],ah
  418365:	and    BYTE PTR [rax],ah
  418367:	rex.WRXB
  418368:	rex.XB push r12
  41836a:	push   r14
  41836c:	rex.RB pop r15
  41836e:	rex.WR
  41836f:	rex.WB
  418370:	rex.WRX
  418371:	rex.WXB pop r15
  418373:	rex.WRXB push r8
  418375:	push   rsp
  418376:	push   rbx
  418377:	or     ah,BYTE PTR [rax]
  418379:	and    BYTE PTR [rax],ah
  41837b:	and    BYTE PTR [rax],ah
  41837d:	and    BYTE PTR [rax],ah
  41837f:	and    BYTE PTR [rax],ah
  418381:	and    BYTE PTR [rax],ah
  418383:	and    BYTE PTR [rax],ah
  418385:	and    BYTE PTR [rax],ah
  418387:	and    BYTE PTR [rax],ah
  418389:	and    BYTE PTR [rax],ah
  41838b:	and    BYTE PTR [rax],ah
  41838d:	and    BYTE PTR [rax],ah
  41838f:	and    BYTE PTR [rax],ah
  418391:	and    BYTE PTR [rax],ah
  418393:	and    BYTE PTR [rsp+rcx*2+0x5f],al
  418397:	rex.WR
  418398:	and    BYTE PTR [rax],r12b
  41839b:	and    BYTE PTR [rax],ah
  41839d:	and    BYTE PTR [rax],ah
  41839f:	and    BYTE PTR [rax],ah
  4183a1:	and    BYTE PTR [rax],ah
  4183a3:	and    BYTE PTR [rax],ah
  4183a5:	and    BYTE PTR [rax],ah
  4183a7:	and    BYTE PTR [rax],ah
  4183a9:	and    BYTE PTR [rax],ah
  4183ab:	and    BYTE PTR [rax],ah
  4183ad:	and    BYTE PTR [rax],ah
  4183af:	and    BYTE PTR [rdi+0x43],cl
  4183b2:	push   rsp
  4183b3:	push   r14
  4183b5:	rex.RB pop r15
  4183b7:	push   rax
  4183b8:	push   rdx
  4183b9:	rex.RB
  4183ba:	rex.RX
  4183bb:	rex.WB pop r8
  4183bd:	or     ah,BYTE PTR [rax]
  4183bf:	and    BYTE PTR [rax],ah
  4183c1:	and    BYTE PTR [rax],ah
  4183c3:	and    BYTE PTR [rax],ah
  4183c5:	and    BYTE PTR [rax],ah
  4183c7:	and    BYTE PTR [rax],ah
  4183c9:	and    BYTE PTR [rax],ah
  4183cb:	and    BYTE PTR [rax],ah
  4183cd:	and    BYTE PTR [rax],ah
  4183cf:	and    BYTE PTR [rax],ah
  4183d1:	and    BYTE PTR [rax],ah
  4183d3:	and    BYTE PTR [rax],ah
  4183d5:	and    BYTE PTR [rax],ah
  4183d7:	and    BYTE PTR [rax],ah
  4183d9:	and    BYTE PTR [rsp+rcx*2+0x5f],al
  4183dd:	rex.WR
  4183de:	rex.R
  4183df:	rex.RX
  4183e0:	rex.WR
  4183e1:	rex.B
  4183e2:	rex.RXB push r11
  4183e4:	and    BYTE PTR [rax],ah
  4183e6:	and    BYTE PTR [rax],ah
  4183e8:	and    BYTE PTR [rax],ah
  4183ea:	and    BYTE PTR [rax],ah
  4183ec:	and    BYTE PTR [rax],ah
  4183ee:	and    BYTE PTR [rax],ah
  4183f0:	and    BYTE PTR [rax],ah
  4183f2:	and    BYTE PTR [rax],ah
  4183f4:	and    BYTE PTR [rax],ah
  4183f6:	rex.WRXB
  4183f7:	rex.XB push r12
  4183f9:	rex.WB
  4183fa:	rex.WRX
  4183fb:	rex.XB
  4183fc:	rex.WR push rbp
  4183fe:	rex.R
  4183ff:	rex.RB
  418400:	rex.R
  418401:	rex.WB push r10
  418403:	or     ah,BYTE PTR [rax]
  418405:	and    BYTE PTR [rax],ah
  418407:	and    BYTE PTR [rax],ah
  418409:	and    BYTE PTR [rax],ah
  41840b:	and    BYTE PTR [rax],ah
  41840d:	and    BYTE PTR [rax],ah
  41840f:	and    BYTE PTR [rax],ah
  418411:	and    BYTE PTR [rax],ah
  418413:	and    BYTE PTR [rax],ah
  418415:	and    BYTE PTR [rax],ah
  418417:	and    BYTE PTR [rax],ah
  418419:	and    BYTE PTR [rax],ah
  41841b:	and    BYTE PTR [rax],ah
  41841d:	and    BYTE PTR [rax],ah
  41841f:	and    BYTE PTR [rsi+0x37],al
  418422:	(bad)  
  418423:	and    BYTE PTR [rax],ah
  418425:	and    BYTE PTR [rax],ah
  418427:	and    BYTE PTR [rax],ah
  418429:	and    BYTE PTR [rax],ah
  41842b:	and    BYTE PTR [rax],ah
  41842d:	and    BYTE PTR [rax],ah
  41842f:	and    BYTE PTR [rax],ah
  418431:	and    BYTE PTR [rax],ah
  418433:	and    BYTE PTR [rax],ah
  418435:	and    BYTE PTR [rax],ah
  418437:	and    BYTE PTR [rax],ah
  418439:	and    BYTE PTR [rax],ah
  41843b:	and    BYTE PTR [rdi+0x43],cl
  41843e:	push   rsp
  41843f:	rex.WR
  418440:	rex.WB
  418441:	rex.X
  418442:	rex.R
  418443:	rex.WB push r10
  418445:	or     ah,BYTE PTR [rax]
  418447:	and    BYTE PTR [rax],ah
  418449:	and    BYTE PTR [rax],ah
  41844b:	and    BYTE PTR [rax],ah
  41844d:	and    BYTE PTR [rax],ah
  41844f:	and    BYTE PTR [rax],ah
  418451:	and    BYTE PTR [rax],ah
  418453:	and    BYTE PTR [rax],ah
  418455:	and    BYTE PTR [rax],ah
  418457:	and    BYTE PTR [rax],ah
  418459:	and    BYTE PTR [rax],ah
  41845b:	and    BYTE PTR [rax],ah
  41845d:	and    BYTE PTR [rax],ah
  41845f:	and    BYTE PTR [rax],ah
  418461:	and    BYTE PTR [rsi+0x37],al
  418464:	(bad)  
  418465:	pop    rdi
  418466:	rex.WB
  418467:	rex.WRX push rsp
  418469:	rex.RB
  41846a:	rex.RXB
  41846b:	rex.RB push r10
  41846d:	cmp    BYTE PTR [rdi+0x46],bl
  418470:	rex.WR
  418471:	rex.B
  418472:	rex.RXB and BYTE PTR [r8],r12b
  418475:	and    BYTE PTR [rax],ah
  418477:	and    BYTE PTR [rax],ah
  418479:	and    BYTE PTR [rax],ah
  41847b:	and    BYTE PTR [rax],ah
  41847d:	and    BYTE PTR [rdi+0x43],cl
  418480:	push   rsp
  418481:	pop    rdi
  418482:	rex.WR
  418483:	rex.WB
  418484:	rex.WRX
  418485:	rex.WXB pop r15
  418487:	rex.R
  418488:	rex.RB push r8
  41848a:	push   rbx
  41848b:	or     ah,BYTE PTR [rax]
  41848d:	and    BYTE PTR [rax],ah
  41848f:	and    BYTE PTR [rax],ah
  418491:	and    BYTE PTR [rax],ah
  418493:	and    BYTE PTR [rax],ah
  418495:	and    BYTE PTR [rax],ah
  418497:	and    BYTE PTR [rax],ah
  418499:	and    BYTE PTR [rax],ah
  41849b:	and    BYTE PTR [rax],ah
  41849d:	and    BYTE PTR [rax],ah
  41849f:	and    BYTE PTR [rax],ah
  4184a1:	and    BYTE PTR [rax],ah
  4184a3:	and    BYTE PTR [rax],ah
  4184a5:	and    BYTE PTR [rax],ah
  4184a7:	and    BYTE PTR [rsi+0x46],al
  4184aa:	rex.WR
  4184ab:	rex.B
  4184ac:	rex.RXB push r11
  4184ae:	and    BYTE PTR [rax],ah
  4184b0:	and    BYTE PTR [rax],ah
  4184b2:	and    BYTE PTR [rax],ah
  4184b4:	and    BYTE PTR [rax],ah
  4184b6:	and    BYTE PTR [rax],ah
  4184b8:	and    BYTE PTR [rax],ah
  4184ba:	and    BYTE PTR [rax],ah
  4184bc:	and    BYTE PTR [rax],ah
  4184be:	and    BYTE PTR [rax],ah
  4184c0:	and    BYTE PTR [rax],ah
  4184c2:	and    BYTE PTR [rax],ah
  4184c4:	rex.WRXB
  4184c5:	rex.XB push r12
  4184c7:	pop    rdi
  4184c8:	rex.WR
  4184c9:	rex.WB
  4184ca:	rex.WRX
  4184cb:	rex.WXB pop r15
  4184cd:	rex.WRXB push r8
  4184cf:	push   rsp
  4184d0:	push   rbx
  4184d1:	or     ah,BYTE PTR [rax]
  4184d3:	and    BYTE PTR [rax],ah
  4184d5:	and    BYTE PTR [rax],ah
  4184d7:	and    BYTE PTR [rax],ah
  4184d9:	and    BYTE PTR [rax],ah
  4184db:	and    BYTE PTR [rax],ah
  4184dd:	and    BYTE PTR [rax],ah
  4184df:	and    BYTE PTR [rax],ah
  4184e1:	and    BYTE PTR [rax],ah
  4184e3:	and    BYTE PTR [rax],ah
  4184e5:	and    BYTE PTR [rax],ah
  4184e7:	and    BYTE PTR [rax],ah
  4184e9:	and    BYTE PTR [rax],ah
  4184eb:	and    BYTE PTR [rax],ah
  4184ed:	and    BYTE PTR [rsi+0x46],al
  4184f0:	push   rsp
  4184f1:	push   rdi
  4184f2:	xor    eax,DWORD PTR [rsi+0x5f]
  4184f5:	rex.WR
  4184f6:	rex.R
  4184f7:	rex.RX
  4184f8:	rex.WR
  4184f9:	rex.B
  4184fa:	rex.RXB push r11
  4184fc:	and    BYTE PTR [rax],ah
  4184fe:	and    BYTE PTR [rax],ah
  418500:	and    BYTE PTR [rax],ah
  418502:	and    BYTE PTR [rax],ah
  418504:	and    BYTE PTR [rax],ah
  418506:	and    BYTE PTR [rax],ah
  418508:	and    BYTE PTR [rax],ah
  41850a:	push   rdx
  41850b:	rex.B
  41850c:	rex.WRX
  41850d:	rex.WR
  41850e:	rex.WB
  41850f:	rex.X or spl,BYTE PTR [rax]
  418512:	and    BYTE PTR [rax],ah
  418514:	and    BYTE PTR [rax],ah
  418516:	and    BYTE PTR [rax],ah
  418518:	and    BYTE PTR [rax],ah
  41851a:	and    BYTE PTR [rax],ah
  41851c:	and    BYTE PTR [rax],ah
  41851e:	and    BYTE PTR [rax],ah
  418520:	and    BYTE PTR [rax],ah
  418522:	and    BYTE PTR [rax],ah
  418524:	and    BYTE PTR [rax],ah
  418526:	and    BYTE PTR [rax],ah
  418528:	and    BYTE PTR [rax],ah
  41852a:	and    BYTE PTR [rax],ah
  41852c:	and    BYTE PTR [rsi+0x46],al
  41852f:	push   rsp
  418530:	push   rdi
  418531:	xor    eax,DWORD PTR [rsi+0x5f]
  418534:	rex.WR
  418535:	rex.WB
  418536:	rex.X push rbx
  418538:	and    BYTE PTR [rax],ah
  41853a:	and    BYTE PTR [rax],ah
  41853c:	and    BYTE PTR [rax],ah
  41853e:	and    BYTE PTR [rax],ah
  418540:	and    BYTE PTR [rax],ah
  418542:	and    BYTE PTR [rax],ah
  418544:	and    BYTE PTR [rax],ah
  418546:	and    BYTE PTR [rax],ah
  418548:	and    BYTE PTR [rdx+0x44],dl
  41854b:	pop    rcx
  41854c:	rex.WRX
  41854d:	rex.B
  41854e:	rex.WRB
  41854f:	rex.WB
  418550:	rex.XB pop r15
  418552:	rex.RX
  418553:	rex.WR
  418554:	rex.B
  418555:	rex.RXB or r12b,BYTE PTR [r8]
  418558:	and    BYTE PTR [rax],ah
  41855a:	and    BYTE PTR [rax],ah
  41855c:	and    BYTE PTR [rax],ah
  41855e:	and    BYTE PTR [rax],ah
  418560:	and    BYTE PTR [rax],ah
  418562:	and    BYTE PTR [rax],ah
  418564:	and    BYTE PTR [rax],ah
  418566:	and    BYTE PTR [rax],ah
  418568:	and    BYTE PTR [rax],ah
  41856a:	and    BYTE PTR [rax],ah
  41856c:	and    BYTE PTR [rax],ah
  41856e:	and    BYTE PTR [rax],ah
  418570:	and    BYTE PTR [rax],ah
  418572:	and    BYTE PTR [rsi+0x46],al
  418575:	push   rsp
  418576:	push   rdi
  418577:	xor    ebx,DWORD PTR [rdi+0x4c]
  41857a:	rex.R
  41857b:	rex.RX
  41857c:	rex.WR
  41857d:	rex.B
  41857e:	rex.RXB push r11
  418580:	and    BYTE PTR [rax],ah
  418582:	and    BYTE PTR [rax],ah
  418584:	and    BYTE PTR [rax],ah
  418586:	and    BYTE PTR [rax],ah
  418588:	and    BYTE PTR [rax],ah
  41858a:	and    BYTE PTR [rax],ah
  41858c:	and    BYTE PTR [rax],ah
  41858e:	and    BYTE PTR [rdx+0x45],dl
  418591:	rex.B
  418592:	rex.R
  418593:	rex.WR
  418594:	rex.WB
  418595:	rex.WRX
  418596:	rex.RB pop r15
  418598:	rex.WR
  418599:	rex.WB
  41859a:	rex.X push rbx
  41859c:	or     ah,BYTE PTR [rax]
  41859e:	and    BYTE PTR [rax],ah
  4185a0:	and    BYTE PTR [rax],ah
  4185a2:	and    BYTE PTR [rax],ah
  4185a4:	and    BYTE PTR [rax],ah
  4185a6:	and    BYTE PTR [rax],ah
  4185a8:	and    BYTE PTR [rax],ah
  4185aa:	and    BYTE PTR [rax],ah
  4185ac:	and    BYTE PTR [rax],ah
  4185ae:	and    BYTE PTR [rax],ah
  4185b0:	and    BYTE PTR [rax],ah
  4185b2:	and    BYTE PTR [rax],ah
  4185b4:	and    BYTE PTR [rax],ah
  4185b6:	and    BYTE PTR [rax],ah
  4185b8:	and    BYTE PTR [rsi+0x46],al
  4185bb:	push   rsp
  4185bc:	push   rdi
  4185bd:	xor    ebx,DWORD PTR [rdi+0x4c]
  4185c0:	rex.WB
  4185c1:	rex.X push rbx
  4185c3:	and    BYTE PTR [rax],ah
  4185c5:	and    BYTE PTR [rax],ah
  4185c7:	and    BYTE PTR [rax],ah
  4185c9:	and    BYTE PTR [rax],ah
  4185cb:	and    BYTE PTR [rax],ah
  4185cd:	and    BYTE PTR [rax],ah
  4185cf:	and    BYTE PTR [rax],ah
  4185d1:	and    BYTE PTR [rax],ah
  4185d3:	and    BYTE PTR [rax],ah
  4185d5:	push   rbx
  4185d6:	rex.RB
  4185d7:	or     r12b,BYTE PTR [rax]
  4185da:	and    BYTE PTR [rax],ah
  4185dc:	and    BYTE PTR [rax],ah
  4185de:	and    BYTE PTR [rax],ah
  4185e0:	and    BYTE PTR [rax],ah
  4185e2:	and    BYTE PTR [rax],ah
  4185e4:	and    BYTE PTR [rax],ah
  4185e6:	and    BYTE PTR [rax],ah
  4185e8:	and    BYTE PTR [rax],ah
  4185ea:	and    BYTE PTR [rax],ah
  4185ec:	and    BYTE PTR [rax],ah
  4185ee:	and    BYTE PTR [rax],ah
  4185f0:	and    BYTE PTR [rax],ah
  4185f2:	and    BYTE PTR [rax],ah
  4185f4:	and    BYTE PTR [rsi+0x46],al
  4185f7:	push   rsp
  4185f8:	push   rdi
  4185f9:	pop    rdi
  4185fa:	rex.WR
  4185fb:	rex.WB
  4185fc:	rex.X push rbx
  4185fe:	and    BYTE PTR [rax],ah
  418600:	and    BYTE PTR [rax],ah
  418602:	and    BYTE PTR [rax],ah
  418604:	and    BYTE PTR [rax],ah
  418606:	and    BYTE PTR [rax],ah
  418608:	and    BYTE PTR [rax],ah
  41860a:	and    BYTE PTR [rax],ah
  41860c:	and    BYTE PTR [rax],ah
  41860e:	and    BYTE PTR [rax],ah
  418610:	and    BYTE PTR [rbx+0x50],dl
  418613:	rex.RB
  418614:	rex.XB
  418615:	rex.WB
  418616:	rex.B
  418617:	rex.WR pop rdi
  418619:	rex.WRB
  41861a:	push   r12
  41861c:	rex.W pop rdi
  41861e:	rex.WR
  41861f:	rex.WB
  418620:	rex.X or spl,BYTE PTR [rax]
  418623:	and    BYTE PTR [rax],ah
  418625:	and    BYTE PTR [rax],ah
  418627:	and    BYTE PTR [rax],ah
  418629:	and    BYTE PTR [rax],ah
  41862b:	and    BYTE PTR [rax],ah
  41862d:	and    BYTE PTR [rax],ah
  41862f:	and    BYTE PTR [rax],ah
  418631:	and    BYTE PTR [rax],ah
  418633:	and    BYTE PTR [rax],ah
  418635:	and    BYTE PTR [rax],ah
  418637:	and    BYTE PTR [rax],ah
  418639:	and    BYTE PTR [rax],ah
  41863b:	and    BYTE PTR [rax],ah
  41863d:	and    BYTE PTR [rsi+0x4c],al
  418640:	rex.WB
  418641:	rex.X push rbx
  418643:	and    BYTE PTR [rax],ah
  418645:	and    BYTE PTR [rax],ah
  418647:	and    BYTE PTR [rax],ah
  418649:	and    BYTE PTR [rax],ah
  41864b:	and    BYTE PTR [rax],ah
  41864d:	and    BYTE PTR [rax],ah
  41864f:	and    BYTE PTR [rax],ah
  418651:	and    BYTE PTR [rax],ah
  418653:	and    BYTE PTR [rax],ah
  418655:	and    BYTE PTR [rax],ah
  418657:	and    BYTE PTR [rax],ah
  418659:	and    BYTE PTR [rax+0x54],bl
  41865c:	push   rdx
  41865d:	pop    r15
  41865f:	rex.XB
  418660:	rex.RX
  418661:	rex.WR
  418662:	rex.B
  418663:	rex.RXB push r11
  418665:	or     ah,BYTE PTR [rax]
  418667:	and    BYTE PTR [rax],ah
  418669:	and    BYTE PTR [rax],ah
  41866b:	and    BYTE PTR [rax],ah
  41866d:	and    BYTE PTR [rax],ah
  41866f:	and    BYTE PTR [rax],ah
  418671:	and    BYTE PTR [rax],ah
  418673:	and    BYTE PTR [rax],ah
  418675:	and    BYTE PTR [rax],ah
  418677:	and    BYTE PTR [rax],ah
  418679:	and    BYTE PTR [rax],ah
  41867b:	and    BYTE PTR [rax],ah
  41867d:	and    BYTE PTR [rax],ah
  41867f:	and    BYTE PTR [rax],ah
  418681:	and    BYTE PTR [rsi+0x50],al
  418684:	rex.WB
  418685:	rex.XB
  418686:	rex.RX
  418687:	rex.WR
  418688:	rex.B
  418689:	rex.RXB and BYTE PTR [r8],r12b
  41868c:	and    BYTE PTR [rax],ah
  41868e:	and    BYTE PTR [rax],ah
  418690:	and    BYTE PTR [rax],ah
  418692:	and    BYTE PTR [rax],ah
  418694:	and    BYTE PTR [rax],ah
  418696:	and    BYTE PTR [rax],ah
  418698:	and    BYTE PTR [rax],ah
  41869a:	and    BYTE PTR [rax],ah
  41869c:	and    BYTE PTR [rax],ah
  41869e:	pop    rax
  41869f:	push   rsp
  4186a0:	push   rdx
  4186a1:	pop    r15
  4186a3:	rex.XB pop r8
  4186a5:	pop    rax
  4186a6:	rex.RX
  4186a7:	rex.WR
  4186a8:	rex.B
  4186a9:	rex.RXB push r11
  4186ab:	or     cl,BYTE PTR [rdx]
  4186ad:	and    BYTE PTR [rax],ah
  4186af:	sub    eax,0x6e696c2d
  4186b4:	imul   ebp,DWORD PTR [rip+0x6e617473],0x64        # 0x6ea2fb2e
  4186bb:	sub    eax,0x6e6f6c61
  4186c0:	and    BYTE PTR gs:[rax],ah
  4186c3:	and    BYTE PTR [rax],ah
  4186c5:	and    BYTE PTR [rax],ah
  4186c7:	imul   r13,QWORD PTR [rsi+0x6b],0x73206120
  4186cf:	je     0x418732
  4186d1:	outs   dx,BYTE PTR ds:[rsi]
  4186d2:	fs sub eax,0x6e6f6c61
  4186d8:	and    BYTE PTR gs:[rbp+0x78],ah
  4186dc:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  4186e0:	(bad)  
  4186e1:	(bad)  
  4186e2:	ins    BYTE PTR es:[rdi],dx
  4186e3:	and    BYTE PTR gs:[rsi+0x69],ah
  4186e7:	ins    BYTE PTR es:[rdi],dx
  4186e8:	gs or  cl,BYTE PTR cs:[rdx]
  4186ec:	and    BYTE PTR [rax],ah
  4186ee:	sub    eax,0x78656d2d
  4186f3:	and    BYTE PTR [rax],ah
  4186f5:	and    BYTE PTR [rax],ah
  4186f7:	and    BYTE PTR [rax],ah
  4186f9:	and    BYTE PTR [rax],ah
  4186fb:	and    BYTE PTR [rax],ah
  4186fd:	and    BYTE PTR [rax],ah
  4186ff:	and    BYTE PTR [rax],ah
  418701:	and    BYTE PTR [rax],ah
  418703:	and    BYTE PTR [rax],ah
  418705:	and    BYTE PTR [rcx+0x73],al
  418708:	jae    0x41877f
  41870a:	ins    DWORD PTR es:[rdi],dx
  41870b:	and    BYTE PTR gs:[rdi+0x65],dh
  41870f:	and    BYTE PTR [rcx+0x72],ah
  418712:	and    BYTE PTR gs:[rbx+0x72],ah
  418716:	gs (bad) 
  418718:	je     0x418783
  41871a:	outs   dx,BYTE PTR ds:[rsi]
  41871b:	and    BYTE PTR [ecx+0x20],ah
  41871f:	rex.WRB
  418720:	rex.RB pop r8
  418722:	and    BYTE PTR [rsi+0x69],ah
  418725:	ins    BYTE PTR es:[rdi],dx
  418726:	gs and BYTE PTR cs:[rax],ah
  41872a:	push   rbx
  41872b:	gs je  0x41874e
  41872e:	je     0x418798
  418730:	or     ah,BYTE PTR gs:[rax]
  418733:	and    BYTE PTR [rax],ah
  418735:	and    BYTE PTR [rax],ah
  418737:	and    BYTE PTR [rax],ah
  418739:	and    BYTE PTR [rax],ah
  41873b:	and    BYTE PTR [rax],ah
  41873d:	and    BYTE PTR [rax],ah
  41873f:	and    BYTE PTR [rax],ah
  418741:	and    BYTE PTR [rax],ah
  418743:	and    BYTE PTR [rax],ah
  418745:	and    BYTE PTR [rax],ah
  418747:	and    BYTE PTR [rax],ah
  418749:	and    BYTE PTR [rax],ah
  41874b:	and    BYTE PTR [rbp+riz*2+0x66],ah
  41874f:	(bad)  
  418750:	jne    0x4187be
  418752:	je     0x418774
  418754:	outs   dx,DWORD PTR ds:[rsi]
  418755:	jne    0x4187cb
  418757:	jo     0x4187ce
  418759:	je     0x41877b
  41875b:	gs js  0x4187d2
  41875e:	outs   dx,BYTE PTR gs:[rsi]
  418760:	jae    0x4187cb
  418762:	outs   dx,DWORD PTR ds:[rsi]
  418763:	outs   dx,BYTE PTR ds:[rsi]
  418764:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  418768:	and    ch,BYTE PTR [rsi]
  41876a:	ins    DWORD PTR es:[rdi],dx
  41876b:	gs js  0x418790
  41876e:	or     cl,BYTE PTR cs:[rdx]
  418771:	and    BYTE PTR [rax],ah
  418773:	sub    eax,0x2d202c73
  418778:	sub    eax,0x69727473
  41877d:	jo     0x41879f
  41877f:	and    BYTE PTR [rax],ah
  418781:	and    BYTE PTR [rax],ah
  418783:	and    BYTE PTR [rax],ah
  418785:	and    BYTE PTR [rax],ah
  418787:	and    BYTE PTR [rax],ah
  418789:	and    BYTE PTR [rax],ah
  41878b:	push   rbx
  41878c:	je     0x418800
  41878e:	imul   esi,DWORD PTR [rax+0x20],0x7074756f
  418795:	jne    0x41880b
  418797:	and    BYTE PTR [rsi+0x69],ah
  41879a:	ins    BYTE PTR es:[rdi],dx
  41879b:	gs or  cl,BYTE PTR cs:[rdx]
  41879f:	and    BYTE PTR [rax],ah
  4187a1:	sub    eax,0x2d202c6e
  4187a6:	sub    eax,0x7473756a
  4187ab:	sub    eax,0x6e697270
  4187b0:	je     0x4187de
  4187b2:	and    BYTE PTR [rip+0x7972642d],ch        # 0x79b3ebe5
  4187b8:	sub    eax,0xa6e7572
  4187bd:	and    BYTE PTR [rax],ah
  4187bf:	and    BYTE PTR [rax],ah
  4187c1:	and    BYTE PTR [rax],ah
  4187c3:	and    BYTE PTR [rax],ah
  4187c5:	and    BYTE PTR [rax],ah
  4187c7:	and    BYTE PTR [rax],ah
  4187c9:	and    BYTE PTR [rax],ah
  4187cb:	and    BYTE PTR [rax],ah
  4187cd:	and    BYTE PTR [rax],ah
  4187cf:	and    BYTE PTR [rax],ah
  4187d1:	and    BYTE PTR [rax],ah
  4187d3:	and    BYTE PTR [rax],ah
  4187d5:	and    BYTE PTR [rax],ah
  4187d7:	push   rax
  4187d8:	jb     0x418843
  4187da:	outs   dx,BYTE PTR ds:[rsi]
  4187db:	je     0x4187fd
  4187dd:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4187e0:	ins    DWORD PTR es:[rdi],dx
  4187e1:	(bad)  
  4187e2:	outs   dx,BYTE PTR ds:[rsi]
  4187e3:	fs jae 0x418812
  4187e6:	and    BYTE PTR [rdx+0x75],ah
  4187e9:	je     0x41880b
  4187eb:	outs   dx,DWORD PTR fs:[rsi]
  4187ed:	and    BYTE PTR [rsi+0x6f],ch
  4187f0:	je     0x418812
  4187f2:	gs js  0x41885a
  4187f5:	movsxd esi,DWORD PTR [rbp+0x74]
  4187f8:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  4187fd:	ins    DWORD PTR es:[rdi],dx
  4187fe:	or     cl,BYTE PTR cs:[rdx]
  418801:	and    BYTE PTR [rax],ah
  418803:	sub    eax,0x2d202c76
  418808:	sub    eax,0x62726576
  41880d:	outs   dx,DWORD PTR ds:[rsi]
  41880e:	jae    0x418875
  418810:	and    BYTE PTR [rax],ah
  418812:	and    BYTE PTR [rax],ah
  418814:	and    BYTE PTR [rax],ah
  418816:	and    BYTE PTR [rax],ah
  418818:	and    BYTE PTR [rax],ah
  41881a:	and    BYTE PTR [rbp+0x63],al
  41881d:	push   0x6f63206f
  418822:	ins    DWORD PTR es:[rdi],dx
  418823:	ins    DWORD PTR es:[rdi],dx
  418824:	(bad)  
  418825:	outs   dx,BYTE PTR ds:[rsi]
  418826:	fs jae 0x418849
  418829:	(bad)  
  41882a:	jae    0x41884c
  41882c:	je     0x418896
  41882e:	gs jns 0x418851
  418831:	(bad)  
  418832:	jb     0x418899
  418834:	and    BYTE PTR [rbp+0x78],ah
  418837:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  41883b:	gs fs or cl,BYTE PTR cs:[rdx]
  418840:	and    BYTE PTR [rax],ah
  418842:	rex.RX
  418843:	rex.WB
  418844:	rex.WR
  418845:	and    BYTE PTR [r8],r12b
  418848:	and    BYTE PTR [rax],ah
  41884a:	and    BYTE PTR [rax],ah
  41884c:	and    BYTE PTR [rax],ah
  41884e:	and    BYTE PTR [rax],ah
  418850:	and    BYTE PTR [rax],ah
  418852:	and    BYTE PTR [rax],ah
  418854:	and    BYTE PTR [rax],ah
  418856:	and    BYTE PTR [rax],ah
  418858:	and    BYTE PTR [rax],ah
  41885a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  41885c:	ins    DWORD PTR es:[rdi],dx
  41885d:	jo     0x4188c8
  41885f:	ins    BYTE PTR es:[rdi],dx
  418860:	and    BYTE PTR gs:[rdi+0x72],ch
  418864:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  418868:	imul   esp,DWORD PTR [rax],0x46
  41886b:	rex.WB
  41886c:	rex.WR
  41886d:	rex.RB
  41886e:	and    BYTE PTR cs:[rax],ah
  418871:	push   rdx
  418872:	movsxd ebp,DWORD PTR gs:[rdi+0x67]
  418876:	outs   dx,BYTE PTR ds:[rsi]
  418877:	imul   edi,DWORD PTR [rdx+0x65],0x69662064
  41887e:	ins    BYTE PTR es:[rdi],dx
  41887f:	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
  418884:	gs jae 0x4188a7
  418887:	(bad)  
  418888:	jb     0x4188ef
  41888a:	cmp    cl,BYTE PTR [rdx]
  41888c:	or     ah,BYTE PTR [rax]
  41888e:	and    BYTE PTR [rax],ah
  418890:	and    BYTE PTR [rax],ah
  418892:	and    BYTE PTR [rax],ah
  418894:	and    BYTE PTR [rax],ah
  418896:	and    BYTE PTR [rax],ah
  418898:	and    BYTE PTR [rax],ah
  41889a:	and    BYTE PTR [rax],ah
  41889c:	and    BYTE PTR [rax],ah
  41889e:	and    BYTE PTR [rax],ah
  4188a0:	and    BYTE PTR [rax],ah
  4188a2:	and    BYTE PTR [rax],ah
  4188a4:	and    BYTE PTR [rax],ah
  4188a6:	and    BYTE PTR [rax],ah
  4188a8:	and    BYTE PTR [rsi],ch
  4188aa:	movsxd esp,DWORD PTR [rax]
  4188ac:	and    BYTE PTR [rax],ah
  4188ae:	and    BYTE PTR [rbx+0x20],al
  4188b1:	jae    0x418922
  4188b3:	jne    0x418927
  4188b5:	movsxd esp,DWORD PTR [rbp+0xa]
  4188b8:	and    BYTE PTR [rax],ah
  4188ba:	and    BYTE PTR [rax],ah
  4188bc:	and    BYTE PTR [rax],ah
  4188be:	and    BYTE PTR [rax],ah
  4188c0:	and    BYTE PTR [rax],ah
  4188c2:	and    BYTE PTR [rax],ah
  4188c4:	and    BYTE PTR [rax],ah
  4188c6:	and    BYTE PTR [rax],ah
  4188c8:	and    BYTE PTR [rax],ah
  4188ca:	and    BYTE PTR [rax],ah
  4188cc:	and    BYTE PTR [rax],ah
  4188ce:	and    BYTE PTR [rax],ah
  4188d0:	and    BYTE PTR [rax],ah
  4188d2:	and    BYTE PTR [rax],ah
  4188d4:	movsxd esp,DWORD PTR cs:[rbx+0x20]
  4188d8:	and    BYTE PTR [rax],ah
  4188da:	rex.XB sub ebp,DWORD PTR [r11]
  4188dd:	and    BYTE PTR [rbx+0x6f],dh
  4188e0:	jne    0x418954
  4188e2:	movsxd esp,DWORD PTR [rbp+0xa]
  4188e5:	and    BYTE PTR [rax],ah
  4188e7:	and    BYTE PTR [rax],ah
  4188e9:	and    BYTE PTR [rax],ah
  4188eb:	and    BYTE PTR [rax],ah
  4188ed:	and    BYTE PTR [rax],ah
  4188ef:	and    BYTE PTR [rax],ah
  4188f1:	and    BYTE PTR [rax],ah
  4188f3:	and    BYTE PTR [rax],ah
  4188f5:	and    BYTE PTR [rax],ah
  4188f7:	and    BYTE PTR [rax],ah
  4188f9:	and    BYTE PTR [rax],ah
  4188fb:	and    BYTE PTR [rax],ah
  4188fd:	and    BYTE PTR [rax],ah
  4188ff:	and    BYTE PTR [rax],ah
  418901:	movsxd esi,DWORD PTR cs:[rax+0x20]
  418905:	and    BYTE PTR [rax],ah
  418907:	rex.XB sub ebp,DWORD PTR [r11]
  41890a:	and    BYTE PTR [rbx+0x6f],dh
  41890d:	jne    0x418981
  41890f:	movsxd esp,DWORD PTR [rbp+0xa]
  418912:	and    BYTE PTR [rax],ah
  418914:	and    BYTE PTR [rax],ah
  418916:	and    BYTE PTR [rax],ah
  418918:	and    BYTE PTR [rax],ah
  41891a:	and    BYTE PTR [rax],ah
  41891c:	and    BYTE PTR [rax],ah
  41891e:	and    BYTE PTR [rax],ah
  418920:	and    BYTE PTR [rax],ah
  418922:	and    BYTE PTR [rax],ah
  418924:	and    BYTE PTR [rax],ah
  418926:	and    BYTE PTR [rax],ah
  418928:	and    BYTE PTR [rax],ah
  41892a:	and    BYTE PTR [rax],ah
  41892c:	and    BYTE PTR [rax],ah
  41892e:	movsxd esi,DWORD PTR cs:[rax+0x70]
  418932:	and    BYTE PTR [rax],ah
  418934:	rex.XB sub ebp,DWORD PTR [r11]
  418937:	and    BYTE PTR [rbx+0x6f],dh
  41893a:	jne    0x4189ae
  41893c:	movsxd esp,DWORD PTR [rbp+0xa]
  41893f:	and    BYTE PTR [rax],ah
  418941:	and    BYTE PTR [rax],ah
  418943:	and    BYTE PTR [rax],ah
  418945:	and    BYTE PTR [rax],ah
  418947:	and    BYTE PTR [rax],ah
  418949:	and    BYTE PTR [rax],ah
  41894b:	and    BYTE PTR [rax],ah
  41894d:	and    BYTE PTR [rax],ah
  41894f:	and    BYTE PTR [rax],ah
  418951:	and    BYTE PTR [rax],ah
  418953:	and    BYTE PTR [rax],ah
  418955:	and    BYTE PTR [rax],ah
  418957:	and    BYTE PTR [rax],ah
  418959:	and    BYTE PTR [rax],ah
  41895b:	cs rex.XB push r8
  41895e:	push   rax
  41895f:	and    BYTE PTR [rax],ah
  418961:	rex.XB sub ebp,DWORD PTR [r11]
  418964:	and    BYTE PTR [rbx+0x6f],dh
  418967:	jne    0x4189db
  418969:	movsxd esp,DWORD PTR [rbp+0xa]
  41896c:	and    BYTE PTR [rax],ah
  41896e:	and    BYTE PTR [rax],ah
  418970:	and    BYTE PTR [rax],ah
  418972:	and    BYTE PTR [rax],ah
  418974:	and    BYTE PTR [rax],ah
  418976:	and    BYTE PTR [rax],ah
  418978:	and    BYTE PTR [rax],ah
  41897a:	and    BYTE PTR [rax],ah
  41897c:	and    BYTE PTR [rax],ah
  41897e:	and    BYTE PTR [rax],ah
  418980:	and    BYTE PTR [rax],ah
  418982:	and    BYTE PTR [rax],ah
  418984:	and    BYTE PTR [rax],ah
  418986:	and    BYTE PTR [rax],ah
  418988:	movsxd edi,DWORD PTR cs:[rax+0x78]
  41898c:	and    BYTE PTR [rax],ah
  41898e:	rex.XB sub ebp,DWORD PTR [r11]
  418991:	and    BYTE PTR [rbx+0x6f],dh
  418994:	jne    0x418a08
  418996:	movsxd esp,DWORD PTR [rbp+0xa]
  418999:	and    BYTE PTR [rax],ah
  41899b:	and    BYTE PTR [rax],ah
  41899d:	and    BYTE PTR [rax],ah
  41899f:	and    BYTE PTR [rax],ah
  4189a1:	and    BYTE PTR [rax],ah
  4189a3:	and    BYTE PTR [rax],ah
  4189a5:	and    BYTE PTR [rax],ah
  4189a7:	and    BYTE PTR [rax],ah
  4189a9:	and    BYTE PTR [rax],ah
  4189ab:	and    BYTE PTR [rax],ah
  4189ad:	and    BYTE PTR [rax],ah
  4189af:	and    BYTE PTR [rax],ah
  4189b1:	and    BYTE PTR [rax],ah
  4189b3:	and    BYTE PTR [rax],ah
  4189b5:	movsxd ebp,DWORD PTR cs:[rbx]
  4189b8:	sub    esp,DWORD PTR [rax]
  4189ba:	and    BYTE PTR [rbx+0x2b],al
  4189bd:	sub    esp,DWORD PTR [rax]
  4189bf:	jae    0x418a30
  4189c1:	jne    0x418a35
  4189c3:	movsxd esp,DWORD PTR [rbp+0xa]
  4189c6:	and    BYTE PTR [rax],ah
  4189c8:	and    BYTE PTR [rax],ah
  4189ca:	and    BYTE PTR [rax],ah
  4189cc:	and    BYTE PTR [rax],ah
  4189ce:	and    BYTE PTR [rax],ah
  4189d0:	and    BYTE PTR [rax],ah
  4189d2:	and    BYTE PTR [rax],ah
  4189d4:	and    BYTE PTR [rax],ah
  4189d6:	and    BYTE PTR [rax],ah
  4189d8:	and    BYTE PTR [rax],ah
  4189da:	and    BYTE PTR [rax],ah
  4189dc:	and    BYTE PTR [rax],ah
  4189de:	and    BYTE PTR [rax],ah
  4189e0:	and    BYTE PTR [rax],ah
  4189e2:	rex.XB and BYTE PTR cs:[r8],spl
  4189e6:	and    BYTE PTR [rax],ah
  4189e8:	rex.XB sub ebp,DWORD PTR [r11]
  4189eb:	and    BYTE PTR [rbx+0x6f],dh
  4189ee:	jne    0x418a62
  4189f0:	movsxd esp,DWORD PTR [rbp+0xa]
  4189f3:	and    BYTE PTR [rax],ah
  4189f5:	and    BYTE PTR [rax],ah
  4189f7:	and    BYTE PTR [rax],ah
  4189f9:	and    BYTE PTR [rax],ah
  4189fb:	and    BYTE PTR [rax],ah
  4189fd:	and    BYTE PTR [rax],ah
  4189ff:	and    BYTE PTR [rax],ah
  418a01:	and    BYTE PTR [rax],ah
  418a03:	and    BYTE PTR [rax],ah
  418a05:	and    BYTE PTR [rax],ah
  418a07:	and    BYTE PTR [rax],ah
  418a09:	and    BYTE PTR [rax],ah
  418a0b:	and    BYTE PTR [rax],ah
  418a0d:	and    BYTE PTR [rax],ah
  418a0f:	data16 and BYTE PTR cs:[rax],ah
  418a13:	and    BYTE PTR [rax],ah
  418a15:	rex.RX outs dx,DWORD PTR ds:[rsi]
  418a17:	jb     0x418a8d
  418a19:	jb     0x418a7c
  418a1b:	outs   dx,BYTE PTR ds:[rsi]
  418a1c:	and    BYTE PTR [rbx+0x6f],dh
  418a1f:	jne    0x418a93
  418a21:	movsxd esp,DWORD PTR [rbp+0x20]
  418a24:	sub    BYTE PTR [rsi+0x69],ah
  418a27:	js     0x418a8e
  418a29:	and    BYTE PTR fs:[rsi+0x6f],ah
  418a2d:	jb     0x418a9c
  418a2f:	sub    DWORD PTR [rdx],ecx
  418a31:	and    BYTE PTR [rax],ah
  418a33:	and    BYTE PTR [rax],ah
  418a35:	and    BYTE PTR [rax],ah
  418a37:	and    BYTE PTR [rax],ah
  418a39:	and    BYTE PTR [rax],ah
  418a3b:	and    BYTE PTR [rax],ah
  418a3d:	and    BYTE PTR [rax],ah
  418a3f:	and    BYTE PTR [rax],ah
  418a41:	and    BYTE PTR [rax],ah
  418a43:	and    BYTE PTR [rax],ah
  418a45:	and    BYTE PTR [rax],ah
  418a47:	and    BYTE PTR [rax],ah
  418a49:	and    BYTE PTR [rax],ah
  418a4b:	and    BYTE PTR [rax],ah
  418a4d:	rex.RX and BYTE PTR cs:[rax],r12b
  418a51:	and    BYTE PTR [rax],ah
  418a53:	rex.RX outs dx,DWORD PTR ds:[rsi]
  418a55:	jb     0x418acb
  418a57:	jb     0x418aba
  418a59:	outs   dx,BYTE PTR ds:[rsi]
  418a5a:	and    BYTE PTR [rbx+0x6f],dh
  418a5d:	jne    0x418ad1
  418a5f:	movsxd esp,DWORD PTR [rbp+0x20]
  418a62:	sub    BYTE PTR [rsi+0x69],ah
  418a65:	js     0x418acc
  418a67:	and    BYTE PTR fs:[rsi+0x6f],ah
  418a6b:	jb     0x418ada
  418a6d:	sub    DWORD PTR [rdx],ecx
  418a6f:	and    BYTE PTR [rax],ah
  418a71:	and    BYTE PTR [rax],ah
  418a73:	and    BYTE PTR [rax],ah
  418a75:	and    BYTE PTR [rax],ah
  418a77:	and    BYTE PTR [rax],ah
  418a79:	and    BYTE PTR [rax],ah
  418a7b:	and    BYTE PTR [rax],ah
  418a7d:	and    BYTE PTR [rax],ah
  418a7f:	and    BYTE PTR [rax],ah
  418a81:	and    BYTE PTR [rax],ah
  418a83:	and    BYTE PTR [rax],ah
  418a85:	and    BYTE PTR [rax],ah
  418a87:	and    BYTE PTR [rax],ah
  418a89:	and    BYTE PTR [rax],ah
  418a8b:	cmp    WORD PTR cs:[rax],si
  418a8f:	and    BYTE PTR [rax],ah
  418a91:	rex.RX outs dx,DWORD PTR ds:[rsi]
  418a93:	jb     0x418b09
  418a95:	jb     0x418af8
  418a97:	outs   dx,BYTE PTR ds:[rsi]
  418a98:	and    BYTE PTR [rbx+0x6f],dh
  418a9b:	jne    0x418b0f
  418a9d:	movsxd esp,DWORD PTR [rbp+0x20]
  418aa0:	sub    BYTE PTR [rsi+0x72],ah
  418aa3:	gs and BYTE PTR gs:[rsi+0x6f],ah
  418aa8:	jb     0x418b17
  418aaa:	sub    DWORD PTR [rdx],ecx
  418aac:	and    BYTE PTR [rax],ah
  418aae:	and    BYTE PTR [rax],ah
  418ab0:	and    BYTE PTR [rax],ah
  418ab2:	and    BYTE PTR [rax],ah
  418ab4:	and    BYTE PTR [rax],ah
  418ab6:	and    BYTE PTR [rax],ah
  418ab8:	and    BYTE PTR [rax],ah
  418aba:	and    BYTE PTR [rax],ah
  418abc:	and    BYTE PTR [rax],ah
  418abe:	and    BYTE PTR [rax],ah
  418ac0:	and    BYTE PTR [rax],ah
  418ac2:	and    BYTE PTR [rax],ah
  418ac4:	and    BYTE PTR [rax],ah
  418ac6:	and    BYTE PTR [rax],ah
  418ac8:	rex.RX cmp DWORD PTR cs:[rax],r14d
  418acc:	and    BYTE PTR [rax],ah
  418ace:	rex.RX outs dx,DWORD PTR ds:[rsi]
  418ad0:	jb     0x418b46
  418ad2:	jb     0x418b35
  418ad4:	outs   dx,BYTE PTR ds:[rsi]
  418ad5:	and    BYTE PTR [rbx+0x6f],dh
  418ad8:	jne    0x418b4c
  418ada:	movsxd esp,DWORD PTR [rbp+0x20]
  418add:	sub    BYTE PTR [rsi+0x72],ah
  418ae0:	gs and BYTE PTR gs:[rsi+0x6f],ah
  418ae5:	jb     0x418b54
  418ae7:	sub    DWORD PTR [rdx],ecx
  418ae9:	and    BYTE PTR [rax],ah
  418aeb:	and    BYTE PTR [rax],ah
  418aed:	and    BYTE PTR [rax],ah
  418aef:	and    BYTE PTR [rax],ah
  418af1:	and    BYTE PTR [rax],ah
  418af3:	and    BYTE PTR [rax],ah
  418af5:	and    BYTE PTR [rax],ah
  418af7:	and    BYTE PTR [rax],ah
  418af9:	and    BYTE PTR [rax],ah
  418afb:	and    BYTE PTR [rax],ah
  418afd:	and    BYTE PTR [rax],ah
  418aff:	and    BYTE PTR [rax],ah
  418b01:	and    BYTE PTR [rax],ah
  418b03:	and    BYTE PTR [rax],ah
  418b05:	outs   dx,DWORD PTR cs:[rsi]
  418b07:	and    BYTE PTR [rax],ah
  418b09:	and    BYTE PTR [rax],ah
  418b0b:	outs   dx,DWORD PTR ds:[rsi]
  418b0c:	(bad)  
  418b0d:	push   0x65
  418b0f:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  418b13:	imul   ebp,DWORD PTR [rbp+riz*2+0xa],0x20202020
  418b1b:	and    BYTE PTR [rax],ah
  418b1d:	and    BYTE PTR [rax],ah
  418b1f:	and    BYTE PTR [rax],ah
  418b21:	and    BYTE PTR [rax],ah
  418b23:	and    BYTE PTR [rax],ah
  418b25:	and    BYTE PTR [rax],ah
  418b27:	and    BYTE PTR [rax],ah
  418b29:	and    BYTE PTR [rax],ah
  418b2b:	and    BYTE PTR [rax],ah
  418b2d:	and    BYTE PTR [rax],ah
  418b2f:	and    BYTE PTR [rax],ah
  418b31:	and    BYTE PTR [rax],ah
  418b33:	cs (bad) 
  418b35:	and    BYTE PTR [rax],ah
  418b37:	and    BYTE PTR [rax],ah
  418b39:	ins    BYTE PTR es:[rdi],dx
  418b3a:	imul   esp,DWORD PTR [rdx+0x72],0x20797261
  418b41:	imul   bp,WORD PTR [rbp+riz*2+0xa],0xa
	...
  418b50:	(bad)  
  418b51:	fs gs jbe 0x418b84
  418b55:	je     0x418bcb
  418b57:	jns    0x418b59
  418b59:	and    ah,BYTE PTR [rdx]
  418b5b:	add    BYTE PTR [rax],al
  418b5d:	add    BYTE PTR [rax],al
  418b5f:	add    BYTE PTR [rdx],ah
  418b61:	pop    rsp
  418b62:	and    BYTE PTR [rcx],al
  418b64:	add    al,BYTE PTR [rbx]
  418b66:	add    al,0x5
  418b68:	(bad)  
  418b69:	(bad)  
  418b6a:	or     BYTE PTR [rcx],cl
  418b6c:	or     cl,BYTE PTR [rbx]
  418b6e:	or     al,0xd
  418b70:	(bad)  
  418b71:	movups xmm2,XMMWORD PTR [rcx]
  418b74:	adc    dl,BYTE PTR [rbx]
  418b76:	adc    al,0x15
  418b78:	(bad)  
  418b79:	(bad)  
  418b7a:	sbb    BYTE PTR [rcx],bl
  418b7c:	sbb    bl,BYTE PTR [rbx]
  418b7e:	sbb    al,0x1d
  418b80:	(bad)  
  418b81:	(bad)  
  418b82:	add    BYTE PTR [rax],al
  418b84:	add    BYTE PTR [rax],al
  418b86:	add    BYTE PTR [rax],al
  418b88:	and    BYTE PTR [rcx],al
  418b8a:	add    al,BYTE PTR [rbx]
  418b8c:	add    al,0x5
  418b8e:	(bad)  
  418b8f:	(bad)  
  418b90:	or     BYTE PTR [rcx],cl
  418b92:	or     cl,BYTE PTR [rbx]
  418b94:	or     al,0xd
  418b96:	(bad)  
  418b97:	movups xmm2,XMMWORD PTR [rcx]
  418b9a:	adc    dl,BYTE PTR [rbx]
  418b9c:	adc    al,0x15
  418b9e:	(bad)  
  418b9f:	(bad)  
  418ba0:	sbb    BYTE PTR [rcx],bl
  418ba2:	sbb    bl,BYTE PTR [rbx]
  418ba4:	sbb    al,0x1d
  418ba6:	(bad)  
  418ba7:	(bad)  
	...
  418bb0:	(bad)  
  418bb1:	jae    0x418c16
  418bb3:	jb     0x418c16
  418bb5:	je     0x418c1a
  418bb7:	push   0x65776a2f
  418bbc:	(bad)  
  418bbd:	ins    DWORD PTR es:[rdi],dx
  418bbe:	js     0x418c25
  418bc0:	sub    eax,0x6174636f
  418bc5:	jbe    0x418c2c
  418bc7:	(bad)  
  418bc8:	xor    al,0x2e
  418bca:	xor    ch,BYTE PTR [rsi]
  418bcc:	xor    DWORD PTR [rdi],ebp
  418bce:	ja     0x418c06
  418bd0:	xor    al,0x2d
  418bd2:	xor    esi,DWORD PTR [rdx]
  418bd4:	(bad)  
  418bd5:	je     0x418c44
  418bd7:	jo     0x418c06
  418bd9:	jae    0x418c4f
  418bdb:	(bad)  
  418bdc:	(bad)  
  418bdd:	ins    BYTE PTR es:[rdi],dx
  418bde:	gs sub eax,0x6174636f
  418be4:	jbe    0x418c4b
  418be6:	(bad)  
  418be7:	outs   dx,DWORD PTR ds:[rsi]
  418be8:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  418bec:	gs sub eax,0x2e322e34
  418bf2:	xor    DWORD PTR [rdi],ebp
  418bf4:	ins    BYTE PTR es:[rdi],dx
  418bf5:	imul   esp,DWORD PTR [rdx+0x67],0x662f756e
  418bfc:	movsxd ebp,DWORD PTR [rax+0x64]
  418bff:	imul   esi,DWORD PTR [rdx+0x2e],0x20300063
  418c06:	cmp    al,0x3d
  418c08:	and    BYTE PTR [rsi+0x64],ah
  418c0b:	add    BYTE PTR [rax],al
  418c0d:	add    BYTE PTR [rax],al
  418c0f:	add    BYTE PTR [rax],dh
  418c11:	and    BYTE PTR [rdi*1+0x646c6f20],bh
  418c18:	data16 and BYTE PTR fs:[rsi],ah
  418c1c:	and    BYTE PTR es:[rax],dh
  418c1f:	and    BYTE PTR [rdi*1+0x77656e20],bh
  418c26:	data16 and BYTE PTR fs:[rsi],ah
  418c2a:	and    BYTE PTR es:[rdi+0x6c],ch
  418c2e:	fs data16 and BYTE PTR fs:[rcx],ah
  418c33:	cmp    eax,0x77656e20
  418c38:	data16 add BYTE PTR fs:[rax],al
  418c3c:	add    BYTE PTR [rax],al
  418c3e:	add    BYTE PTR [rax],al
  418c40:	add    BYTE PTR cs:[rdi],ch
	...
  418c4f:	add    BYTE PTR [rbx+0x65],ch
  418c52:	jb     0x418cc2
  418c54:	gs ins BYTE PTR es:[rdi],dx
  418c56:	xor    esi,DWORD PTR [rdx]
  418c58:	cs fs ins BYTE PTR es:[rdi],dx
  418c5b:	ins    BYTE PTR es:[rdi],dx
  418c5c:	add    BYTE PTR [rbx+0x72],al
  418c5f:	gs (bad) 
  418c61:	je     0x418cc8
  418c63:	rex.W (bad) 
  418c65:	jb     0x418ccb
  418c67:	imul   r13,QWORD PTR [rsi+0x6b],0x41
  418c6f:	add    BYTE PTR [rax-0x2a],al
  418c72:	add    BYTE PTR [r8],al
  418c75:	add    BYTE PTR [rax],al
  418c77:	add    BYTE PTR [rax-0x2f],al
  418c7a:	add    BYTE PTR [r8],al
  418c7d:	add    BYTE PTR [rax],al
  418c7f:	add    al,dl
  418c81:	test   DWORD PTR [rax+0x0],eax
	...
  418c90:	rex.B jb 0x418cfa
  418c93:	jne    0x418d02
  418c95:	outs   dx,BYTE PTR gs:[rsi]
  418c97:	je     0x418cb9
  418c99:	outs   dx,DWORD PTR fs:[rsi]
  418c9b:	ins    DWORD PTR es:[rdi],dx
  418c9c:	(bad)  
  418c9d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  418ca4:	jb     0x418cc6
  418ca6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  418caa:	rex.B
  418cab:	rex.WB
  418cac:	rex.WRX sub QWORD PTR [rax],r8
  418caf:	rex.B jb 0x418d19
  418cb2:	jne    0x418d21
  418cb4:	outs   dx,BYTE PTR gs:[rsi]
  418cb6:	je     0x418cd8
  418cb8:	jae    0x418d23
  418cba:	outs   dx,BYTE PTR ds:[rsi]
  418cbb:	addr32 jne 0x418d2a
  418cbe:	(bad)  
  418cbf:	jb     0x418d2a
  418cc1:	je     0x418d3c
  418cc3:	and    BYTE PTR [rax],ch
  418cc5:	push   rbx
  418cc6:	rex.WB
  418cc7:	rex.RXB
  418cc8:	rex.WRX sub QWORD PTR [rax],r8
  418ccb:	add    BYTE PTR [rax],al
  418ccd:	add    BYTE PTR [rax],al
  418ccf:	add    BYTE PTR [rdi+0x76],cl
  418cd2:	gs jb  0x418d3b
  418cd5:	ins    BYTE PTR es:[rdi],dx
  418cd6:	outs   dx,DWORD PTR ds:[rsi]
  418cd7:	ja     0x418cf9
  418cd9:	jb     0x418d3c
  418cdb:	outs   dx,BYTE PTR ds:[rsi]
  418cdc:	and    BYTE PTR gs:[ebp+0x72],ah
  418ce1:	jb     0x418d52
  418ce3:	jb     0x418d05
  418ce5:	sub    BYTE PTR [rdi+0x56],cl
  418ce8:	rex.RB push r10
  418cea:	rex.RX
  418ceb:	rex.WR
  418cec:	rex.WRXB push r15
  418cee:	sub    DWORD PTR [rax],eax
  418cf0:	push   rax
  418cf1:	(bad)  
  418cf2:	jb     0x418d68
  418cf4:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  418cfb:	jae    0x418d1d
  418cfd:	outs   dx,DWORD PTR ds:[rsi]
  418cfe:	data16 and BYTE PTR [rbx+0x69],dh
  418d02:	outs   dx,BYTE PTR ds:[esi]
  418d04:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  418d0b:	and    BYTE PTR gs:[rax],ch
  418d0e:	push   rax
  418d0f:	rex.WR
  418d10:	rex.WRXB push r11
  418d12:	push   rbx
  418d13:	sub    DWORD PTR [rax],eax
  418d15:	add    BYTE PTR [rax],al
  418d17:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  418d1b:	(bad)  
  418d1c:	ins    BYTE PTR es:[rdi],dx
  418d1d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  418d21:	jae    0x418d43
  418d23:	outs   dx,DWORD PTR ds:[rsi]
  418d24:	data16 and BYTE PTR [rbx+0x69],dh
  418d28:	outs   dx,BYTE PTR ds:[esi]
  418d2a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  418d31:	and    BYTE PTR gs:[rax],ch
  418d34:	push   rsp
  418d35:	rex.WR
  418d36:	rex.WRXB push r11
  418d38:	push   rbx
  418d39:	sub    DWORD PTR [rax],eax
  418d3b:	add    BYTE PTR [rax],al
  418d3d:	add    BYTE PTR [rax],al
  418d3f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  418d43:	and    BYTE PTR [rdx+0x65],dh
  418d46:	jae    0x418dbd
  418d48:	ins    BYTE PTR es:[rdi],dx
  418d49:	je     0x418d6b
  418d4b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  418d52:	jae    0x418dc1
  418d54:	(bad)  
  418d55:	ins    BYTE PTR es:[rdi],dx
  418d56:	ins    BYTE PTR es:[rdi],dx
  418d57:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  418d5b:	(bad)  
  418d5c:	and    BYTE PTR gs:[rdx+0x65],dh
  418d60:	jo     0x418dd4
  418d62:	gs jae 0x418dca
  418d65:	outs   dx,BYTE PTR ds:[rsi]
  418d66:	je     0x418dcd
  418d68:	and    BYTE PTR fs:[rax],ch
  418d6b:	push   rbp
  418d6c:	rex.WRX
  418d6d:	rex.R
  418d6e:	rex.RB push r10
  418d70:	rex.RX
  418d71:	rex.WR
  418d72:	rex.WRXB push r15
  418d74:	sub    DWORD PTR [rax],eax
  418d76:	push   rbp
  418d77:	outs   dx,BYTE PTR ds:[rsi]
  418d78:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  418d7c:	outs   dx,BYTE PTR ds:[rsi]
  418d7d:	and    BYTE PTR [rbp+0x72],ah
  418d80:	jb     0x418df1
  418d82:	jb     0x418d84
  418d84:	add    BYTE PTR [rax],al
  418d86:	add    BYTE PTR [rax],al
  418d88:	pop    rdi
  418d89:	ins    DWORD PTR es:[rdi],dx
  418d8a:	(bad)  
  418d8b:	je     0x418df5
  418d8d:	gs jb  0x418e02
  418d90:	sub    BYTE PTR [rcx],ch
  418d92:	cmp    ah,BYTE PTR [rax]
  418d94:	and    eax,0x6e692073
  418d99:	and    BYTE PTR [rip+0x67252873],ah        # 0x6766b612
  418d9f:	sub    al,0x20
  418da1:	and    eax,0x20202967
  418da6:	sub    BYTE PTR [rdx+0x65],dh
  418da9:	je     0x418e21
  418dab:	(bad)  
  418dac:	ins    BYTE PTR es:[rdi],dx
  418dad:	cmp    eax,0xa296725
  418db2:	add    BYTE PTR [rax],al
  418db4:	in     al,dx
  418db5:	stc    
  418db6:	(bad)  
  418db7:	jmp    FWORD PTR [rip+0xffffffff9cfffef9]        # 0xffffffff9d418cb6
  418dbd:	stc    
  418dbe:	(bad)  
  418dbf:	jmp    FWORD PTR [rcx+rdi*8-0x6430002]
  418dc6:	(bad)  
  418dc7:	dec    esp
  418dc9:	stc    
  418dca:	(bad)  
  418dcb:	(bad)  
  418dcc:	fdiv   st(1),st
  418dce:	(bad)  
  418dcf:	dec    DWORD PTR [rbp+0x69]
  418dd2:	outs   dx,BYTE PTR ds:[rsi]
  418dd3:	addr32 ja 0x418e03
  418dd6:	ja     0x418e0e
  418dd8:	xor    al,0x20
  418dda:	jb     0x418e51
  418ddc:	outs   dx,BYTE PTR ds:[rsi]
  418ddd:	je     0x418e48
  418ddf:	ins    DWORD PTR es:[rdi],dx
  418de0:	and    BYTE PTR gs:[rsi+0x61],ah
  418de4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  418dec:	add    BYTE PTR [rax],al
  418dee:	add    BYTE PTR [rax],al
  418df0:	rex.B
  418df1:	fs fs jb 0x418e5a
  418df5:	jae    0x418e6a
  418df7:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a9ae6d
  418dfd:	jae    0x418e1f
  418dff:	outs   dx,BYTE PTR ds:[rsi]
  418e00:	outs   dx,DWORD PTR ds:[rsi]
  418e01:	and    BYTE PTR [rcx+0x6d],ch
  418e04:	(bad)  
  418e05:	addr32 gs sub eax,0x74636573
  418e0c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  418e13:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  418e1a:	jne    0x418e81
  418e1c:	jb     0x418e97
  418e1e:	and    BYTE PTR [rsi+0x61],ah
  418e21:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  418e29:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a3ae93
  418e2f:	je     0x418e96
  418e31:	jae    0x418e53
  418e33:	(bad)  
  418e34:	je     0x418e56
  418e36:	(bad)  
  418e37:	fs fs jb 0x418ea0
  418e3b:	jae    0x418eb0
  418e3d:	and    BYTE PTR [rip+0x70],ah        # 0x418eb3
  418e43:	add    BYTE PTR [rax],al
  418e45:	add    BYTE PTR [rax],al
  418e47:	add    BYTE PTR [rax],ah
  418e49:	and    BYTE PTR [rsi+0x69],dl
  418e4c:	jb     0x418ec2
  418e4e:	jne    0x418eb1
  418e50:	ins    BYTE PTR es:[rdi],dx
  418e51:	push   rax
  418e52:	jb     0x418ec3
  418e54:	je     0x418ebb
  418e56:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  418e5a:	(bad)  
  418e5b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  418e63:	push   0x646f6320
  418e68:	and    BYTE PTR gs:[rax],dh
  418e6b:	js     0x418e92
  418e6d:	js     0x418e6f
  418e6f:	add    BYTE PTR [rax],ah
  418e71:	and    BYTE PTR [rbp+0x6e],dl
  418e74:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  418e78:	outs   dx,BYTE PTR ds:[rsi]
  418e79:	and    BYTE PTR [rax+0x73],dh
  418e7c:	gs jne 0x418ee3
  418e7f:	outs   dx,DWORD PTR ds:[rsi]
  418e80:	and    BYTE PTR [rdx+0x65],dh
  418e83:	ins    BYTE PTR es:[rdi],dx
  418e84:	outs   dx,DWORD PTR ds:[rsi]
  418e85:	movsxd esp,DWORD PTR [rcx+0x74]
  418e88:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  418e8f:	je     0x418f00
  418e91:	movsxd ebp,DWORD PTR [rdi+0x6c]
  418e94:	and    BYTE PTR [rsi+0x65],dh
  418e97:	jb     0x418f0c
  418e99:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  418ea0:	or     al,BYTE PTR [rax]
  418ea2:	add    BYTE PTR [rax],al
  418ea4:	add    BYTE PTR [rax],al
  418ea6:	add    BYTE PTR [rax],al
  418ea8:	and    BYTE PTR [rax],ah
  418eaa:	push   rbp
  418eab:	outs   dx,BYTE PTR ds:[rsi]
  418eac:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  418eb0:	outs   dx,BYTE PTR ds:[rsi]
  418eb1:	and    BYTE PTR [rax+0x73],dh
  418eb4:	gs jne 0x418f1b
  418eb7:	outs   dx,DWORD PTR ds:[rsi]
  418eb8:	and    BYTE PTR [rdx+0x65],dh
  418ebb:	ins    BYTE PTR es:[rdi],dx
  418ebc:	outs   dx,DWORD PTR ds:[rsi]
  418ebd:	movsxd esp,DWORD PTR [rcx+0x74]
  418ec0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  418ec7:	and    BYTE PTR [rbx+0x69],dh
  418eca:	jp     0x418f31
  418ecc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4bbd36
	...
  418ede:	add    BYTE PTR [rax],al
  418ee0:	cs jo  0x418f47
  418ee3:	(bad)  
  418ee4:	je     0x418f47
	...
  418eee:	add    BYTE PTR [rax],al
  418ef0:	cmp    al,0x0
  418ef2:	jne    0x418ef4
  418ef4:	outs   dx,BYTE PTR ds:[rsi]
  418ef5:	add    BYTE PTR [rbx+0x0],ch
  418ef8:	outs   dx,BYTE PTR ds:[rsi]
  418ef9:	add    BYTE PTR [rdi+0x0],ch
  418efc:	ja     0x418efe
  418efe:	outs   dx,BYTE PTR ds:[rsi]
  418eff:	add    BYTE PTR [rsi],bh
  418f01:	add    BYTE PTR [rax],al
  418f03:	add    BYTE PTR [rdi],bh
  418f05:	add    BYTE PTR [rax],al
  418f07:	add    BYTE PTR [rcx+0x0],al
  418f0a:	jae    0x418f0c
  418f0c:	jae    0x418f0e
  418f0e:	add    BYTE PTR gs:[rdx+0x0],dh
  418f12:	je     0x418f14
  418f14:	imul   eax,DWORD PTR [rax],0x6e006f
  418f1a:	and    BYTE PTR [rax],al
  418f1c:	data16 add BYTE PTR [rcx+0x0],ah
  418f20:	imul   eax,DWORD PTR [rax],0x65006c
  418f26:	add    BYTE PTR fs:[rcx],ah
  418f29:	add    BYTE PTR [rdx],cl
  418f2b:	add    BYTE PTR [rdx],cl
  418f2d:	add    BYTE PTR [rax+0x0],dl
  418f30:	jb     0x418f32
  418f32:	outs   dx,DWORD PTR ds:[rsi]
  418f33:	add    BYTE PTR [rdi+0x0],ah
  418f36:	jb     0x418f38
  418f38:	(bad)  
  418f39:	add    BYTE PTR [rbp+0x0],ch
  418f3c:	cmp    al,BYTE PTR [rax]
  418f3e:	and    BYTE PTR [rax],al
  418f40:	and    eax,0x73007700
  418f45:	add    BYTE PTR [rdx],cl
  418f47:	add    BYTE PTR [rsi+0x0],al
  418f4a:	imul   eax,DWORD PTR [rax],0x65006c
  418f50:	cmp    al,BYTE PTR [rax]
  418f52:	and    BYTE PTR [rax],al
  418f54:	and    eax,0x73007700
  418f59:	add    BYTE PTR [rax+rax*1],ch
  418f5c:	and    BYTE PTR [rax],al
  418f5e:	rex.WR add BYTE PTR [rcx+0x0],r13b
  418f62:	outs   dx,BYTE PTR ds:[rsi]
  418f63:	add    BYTE PTR [rbp+0x0],ah
  418f66:	and    BYTE PTR [rax],al
  418f68:	and    eax,0xa007500
  418f6d:	add    BYTE PTR [rdx],cl
  418f6f:	add    BYTE PTR [rbp+0x0],al
  418f72:	js     0x418f74
  418f74:	jo     0x418f76
  418f76:	jb     0x418f78
  418f78:	add    BYTE PTR gs:[rbx+0x0],dh
  418f7c:	jae    0x418f7e
  418f7e:	imul   eax,DWORD PTR [rax],0x6e006f
  418f84:	cmp    al,BYTE PTR [rax]
  418f86:	and    BYTE PTR [rax],al
  418f88:	and    eax,0x73007700
  418f8d:	add    BYTE PTR [rax],al
  418f8f:	add    BYTE PTR [rip+0x73007700],ah        # 0x73420695
  418f95:	add    BYTE PTR [rdx],cl
	...
  418f9f:	add    BYTE PTR [rbp+0x0],cl
  418fa2:	imul   eax,DWORD PTR [rax],0x47006e
  418fa8:	push   rdi
  418fa9:	add    BYTE PTR [rax],ah
  418fab:	add    BYTE PTR [rdx+0x0],dl
  418fae:	jne    0x418fb0
  418fb0:	outs   dx,BYTE PTR ds:[rsi]
  418fb1:	add    BYTE PTR [rax+rax*1+0x69],dh
  418fb5:	add    BYTE PTR [rbp+0x0],ch
  418fb8:	add    BYTE PTR gs:[rax],ah
  418fbb:	add    BYTE PTR [rcx+0x0],al
  418fbe:	jae    0x418fc0
  418fc0:	jae    0x418fc2
  418fc2:	add    BYTE PTR gs:[rdx+0x0],dh
  418fc6:	je     0x418fc8
  418fc8:	imul   eax,DWORD PTR [rax],0x6e006f
  418fce:	add    BYTE PTR [rax],al
  418fd0:	ror    BYTE PTR [rcx+0x0],0x0
	...
  418fdf:	add    BYTE PTR [rax+0x50],dh
  418fe2:	add    BYTE PTR [r8],al
	...
  418fed:	add    BYTE PTR [rax],al
  418fef:	add    BYTE PTR [rax+0x4150],al
	...
  418ffd:	add    BYTE PTR [rax],al
  418fff:	add    BYTE PTR [rdi+rsi*8+0x41],bl
	...
  41900e:	add    BYTE PTR [rax],al
  419010:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  419011:	test   DWORD PTR [rcx+0x0],0x0
	...
  419020:	mov    esp,0x41f7
	...
  41902d:	add    BYTE PTR [rax],al
  41902f:	add    ah,al
  419031:	test   DWORD PTR [rcx+0x0],0x0
	...
  419040:	int3   
  419041:	test   DWORD PTR [rcx+0x0],0x0
	...
  419050:	(bad)  
  419051:	test   DWORD PTR [rcx+0x0],0x0
	...
  419060:	fdivr  st(7),st
  419062:	add    BYTE PTR [r8],al
	...
  41906d:	add    BYTE PTR [rax],al
  41906f:	add    BYTE PTR [rax],dl
  419071:	rex.X
  419072:	add    BYTE PTR [r8],al
	...
  41907d:	add    BYTE PTR [rax],al
  41907f:	add    BYTE PTR [rax-0x67],dl
  419082:	add    BYTE PTR [r8],al
	...
  41908d:	add    BYTE PTR [rax],al
  41908f:	add    al,dh
  419091:	cwde   
  419092:	add    BYTE PTR [r8],al
	...
  41909d:	add    BYTE PTR [rax],al
  41909f:	add    BYTE PTR [rax+0x418c],al
	...
  4190b1:	add    BYTE PTR [rax+0x0],al
	...
  4190c0:	cmp    al,0xf9
  4190c2:	add    BYTE PTR [r8],al
	...
  4190cd:	add    BYTE PTR [rax],al
  4190cf:	add    BYTE PTR [rcx+rdi*8+0x41],ah
	...
  4190df:	add    BYTE PTR [rcx+rdi*8+0x41],ah
	...
  4190ee:	add    BYTE PTR [rax],al
  4190f0:	(bad)  
  4190f1:	stc    
  4190f2:	add    BYTE PTR [r8],al
	...
  4190fd:	add    BYTE PTR [rax],al
  4190ff:	add    BYTE PTR [rax+0x41d7],al
	...
  41910d:	add    BYTE PTR [rax],al
  41910f:	add    al,ch
  419111:	fiadd  DWORD PTR [rcx+0x0]
	...
  419120:	loopne 0x4190fc
  419122:	add    BYTE PTR [r8],al
	...
  41912d:	add    BYTE PTR [rax],al
  41912f:	add    al,dl
  419131:	fiadd  DWORD PTR [rcx+0x0]
	...
  419140:	fcomp  st(2)
  419142:	add    BYTE PTR [r8],al
	...
  419151:	adc    BYTE PTR [rdx+0x0],al
	...
  419160:	adc    BYTE PTR [rax],dl
  419162:	rex.X add BYTE PTR [rax],al
	...
  41916d:	add    BYTE PTR [rax],al
  41916f:	add    BYTE PTR [rax],bl
  419171:	adc    BYTE PTR [rdx+0x0],al
	...
  419180:	xor    BYTE PTR [rax],dl
  419182:	rex.X add BYTE PTR [rax],al
	...
  419191:	rol    DWORD PTR [rcx+0x0],1
	...
  4191a0:	push   rax
  4191a1:	xlat   BYTE PTR ds:[rbx]
  4191a2:	add    BYTE PTR [r8],al
	...
  4191ad:	add    BYTE PTR [rax],al
  4191af:	add    BYTE PTR [rax-0x71],ah
  4191b2:	add    BYTE PTR [rax],al
	...
  4191bd:	add    BYTE PTR [rax],al
  4191bf:	add    BYTE PTR [rax+0x4086],dh
	...
  4191d1:	xlat   BYTE PTR ds:[rbx]
  4191d2:	add    BYTE PTR [r8],al
	...
  4191dd:	add    BYTE PTR [rax],al
  4191df:	add    BYTE PTR [rax],dh
  4191e1:	xlat   BYTE PTR ds:[rbx]
  4191e2:	add    BYTE PTR [r8],al
	...
  4191ed:	add    BYTE PTR [rax],al
  4191ef:	add    BYTE PTR [rax],dl
  4191f1:	rol    DWORD PTR [rcx+0x0],1
	...
  419200:	sbb    bh,dl
  419202:	add    BYTE PTR [r8],al
	...
  41920d:	add    BYTE PTR [rax],al
  41920f:	add    BYTE PTR [rdi+rdx*8],dl
  419212:	add    BYTE PTR [r8],al
	...
  41921d:	add    BYTE PTR [rax],al
  41921f:	add    BYTE PTR [rax],dl
  419221:	xlat   BYTE PTR ds:[rbx]
  419222:	add    BYTE PTR [r8],al
	...
  41922d:	add    BYTE PTR [rax],al
  41922f:	add    BYTE PTR [rdi+0x43],al
  419232:	rex.XB cmp spl,BYTE PTR [r8]
  419235:	sub    BYTE PTR [rdi+0x4e],al
  419238:	push   rbp
  419239:	sub    DWORD PTR [rax],esp
  41923b:	xor    al,0x2e
  41923d:	cmp    DWORD PTR [rsi],ebp
  41923f:	xor    al,0x0
	...
  41924d:	add    BYTE PTR [rax],al
  41924f:	add    BYTE PTR [rdi+0x43],al
  419252:	rex.XB cmp spl,BYTE PTR [r8]
  419255:	sub    BYTE PTR [rdi+0x4e],al
  419258:	push   rbp
  419259:	sub    DWORD PTR [rax],esp
  41925b:	xor    al,0x2e
  41925d:	cmp    DWORD PTR [rsi],ebp
  41925f:	xor    al,0x0
	...
  41926d:	add    BYTE PTR [rax],al
  41926f:	add    BYTE PTR [rdi+0x43],al
  419272:	rex.XB cmp spl,BYTE PTR [r8]
  419275:	sub    BYTE PTR [rdi+0x4e],al
  419278:	push   rbp
  419279:	sub    DWORD PTR [rax],esp
  41927b:	xor    al,0x2e
  41927d:	cmp    DWORD PTR [rsi],ebp
  41927f:	xor    al,0x0
	...
  41928d:	add    BYTE PTR [rax],al
  41928f:	add    BYTE PTR [rdi+0x43],al
  419292:	rex.XB cmp spl,BYTE PTR [r8]
  419295:	sub    BYTE PTR [rdi+0x4e],al
  419298:	push   rbp
  419299:	sub    DWORD PTR [rax],esp
  41929b:	xor    al,0x2e
  41929d:	cmp    DWORD PTR [rsi],ebp
  41929f:	xor    al,0x0
	...
  4192ad:	add    BYTE PTR [rax],al
  4192af:	add    BYTE PTR [rdi+0x43],al
  4192b2:	rex.XB cmp spl,BYTE PTR [r8]
  4192b5:	sub    BYTE PTR [rdi+0x4e],al
  4192b8:	push   rbp
  4192b9:	sub    DWORD PTR [rax],esp
  4192bb:	xor    al,0x2e
  4192bd:	cmp    DWORD PTR [rsi],ebp
  4192bf:	xor    al,0x0
	...
  4192cd:	add    BYTE PTR [rax],al
  4192cf:	add    BYTE PTR [rdi+0x43],al
  4192d2:	rex.XB cmp spl,BYTE PTR [r8]
  4192d5:	sub    BYTE PTR [rdi+0x4e],al
  4192d8:	push   rbp
  4192d9:	sub    DWORD PTR [rax],esp
  4192db:	xor    al,0x2e
  4192dd:	cmp    DWORD PTR [rsi],ebp
  4192df:	xor    al,0x0
	...
  4192ed:	add    BYTE PTR [rax],al
  4192ef:	add    BYTE PTR [rdi+0x43],al
  4192f2:	rex.XB cmp spl,BYTE PTR [r8]
  4192f5:	sub    BYTE PTR [rdi+0x4e],al
  4192f8:	push   rbp
  4192f9:	sub    DWORD PTR [rax],esp
  4192fb:	xor    al,0x2e
  4192fd:	cmp    DWORD PTR [rsi],ebp
  4192ff:	xor    al,0x0
	...
  41930d:	add    BYTE PTR [rax],al
  41930f:	add    BYTE PTR [rdi+0x43],al
  419312:	rex.XB cmp spl,BYTE PTR [r8]
  419315:	sub    BYTE PTR [rdi+0x4e],al
  419318:	push   rbp
  419319:	sub    DWORD PTR [rax],esp
  41931b:	xor    al,0x2e
  41931d:	cmp    DWORD PTR [rsi],ebp
  41931f:	xor    al,0x0
	...
  41932d:	add    BYTE PTR [rax],al
  41932f:	add    BYTE PTR [rdi+0x43],al
  419332:	rex.XB cmp spl,BYTE PTR [r8]
  419335:	sub    BYTE PTR [rdi+0x4e],al
  419338:	push   rbp
  419339:	sub    DWORD PTR [rax],esp
  41933b:	xor    al,0x2e
  41933d:	cmp    DWORD PTR [rsi],ebp
  41933f:	xor    al,0x0
	...
  41934d:	add    BYTE PTR [rax],al
  41934f:	add    BYTE PTR [rdi+0x43],al
  419352:	rex.XB cmp spl,BYTE PTR [r8]
  419355:	sub    BYTE PTR [rdi+0x4e],al
  419358:	push   rbp
  419359:	sub    DWORD PTR [rax],esp
  41935b:	xor    al,0x2e
  41935d:	cmp    DWORD PTR [rsi],ebp
  41935f:	xor    al,0x0
	...
  41936d:	add    BYTE PTR [rax],al
  41936f:	add    BYTE PTR [rdi+0x43],al
  419372:	rex.XB cmp spl,BYTE PTR [r8]
  419375:	sub    BYTE PTR [rdi+0x4e],al
  419378:	push   rbp
  419379:	sub    DWORD PTR [rax],esp
  41937b:	xor    al,0x2e
  41937d:	cmp    DWORD PTR [rsi],ebp
  41937f:	xor    al,0x0
	...
  41938d:	add    BYTE PTR [rax],al
  41938f:	add    BYTE PTR [rdi+0x43],al
  419392:	rex.XB cmp spl,BYTE PTR [r8]
  419395:	sub    BYTE PTR [rdi+0x4e],al
  419398:	push   rbp
  419399:	sub    DWORD PTR [rax],esp
  41939b:	xor    al,0x2e
  41939d:	cmp    DWORD PTR [rsi],ebp
  41939f:	xor    al,0x0
	...
  4193ad:	add    BYTE PTR [rax],al
  4193af:	add    BYTE PTR [rdi+0x43],al
  4193b2:	rex.XB cmp spl,BYTE PTR [r8]
  4193b5:	sub    BYTE PTR [rdi+0x4e],al
  4193b8:	push   rbp
  4193b9:	sub    DWORD PTR [rax],esp
  4193bb:	xor    al,0x2e
  4193bd:	cmp    DWORD PTR [rsi],ebp
  4193bf:	xor    al,0x0
	...
  4193cd:	add    BYTE PTR [rax],al
  4193cf:	add    BYTE PTR [rdi+0x43],al
  4193d2:	rex.XB cmp spl,BYTE PTR [r8]
  4193d5:	sub    BYTE PTR [rdi+0x4e],al
  4193d8:	push   rbp
  4193d9:	sub    DWORD PTR [rax],esp
  4193db:	xor    al,0x2e
  4193dd:	cmp    DWORD PTR [rsi],ebp
  4193df:	xor    al,0x0
	...
  4193ed:	add    BYTE PTR [rax],al
  4193ef:	add    BYTE PTR [rdi+0x43],al
  4193f2:	rex.XB cmp spl,BYTE PTR [r8]
  4193f5:	sub    BYTE PTR [rdi+0x4e],al
  4193f8:	push   rbp
  4193f9:	sub    DWORD PTR [rax],esp
  4193fb:	xor    al,0x2e
  4193fd:	cmp    DWORD PTR [rsi],ebp
  4193ff:	xor    al,0x0
	...
  41940d:	add    BYTE PTR [rax],al
  41940f:	add    BYTE PTR [rdi+0x43],al
  419412:	rex.XB cmp spl,BYTE PTR [r8]
  419415:	sub    BYTE PTR [rdi+0x4e],al
  419418:	push   rbp
  419419:	sub    DWORD PTR [rax],esp
  41941b:	xor    al,0x2e
  41941d:	cmp    DWORD PTR [rsi],ebp
  41941f:	xor    al,0x0
	...
  41942d:	add    BYTE PTR [rax],al
  41942f:	add    BYTE PTR [rdi+0x43],al
  419432:	rex.XB cmp spl,BYTE PTR [r8]
  419435:	sub    BYTE PTR [rdi+0x4e],al
  419438:	push   rbp
  419439:	sub    DWORD PTR [rax],esp
  41943b:	xor    al,0x2e
  41943d:	cmp    DWORD PTR [rsi],ebp
  41943f:	xor    al,0x0
	...
  41944d:	add    BYTE PTR [rax],al
  41944f:	add    BYTE PTR [rdi+0x43],al
  419452:	rex.XB cmp spl,BYTE PTR [r8]
  419455:	sub    BYTE PTR [rdi+0x4e],al
  419458:	push   rbp
  419459:	sub    DWORD PTR [rax],esp
  41945b:	xor    al,0x2e
  41945d:	cmp    DWORD PTR [rsi],ebp
  41945f:	xor    al,0x0
	...
  41946d:	add    BYTE PTR [rax],al
  41946f:	add    BYTE PTR [rdi+0x43],al
  419472:	rex.XB cmp spl,BYTE PTR [r8]
  419475:	sub    BYTE PTR [rdi+0x4e],al
  419478:	push   rbp
  419479:	sub    DWORD PTR [rax],esp
  41947b:	xor    al,0x2e
  41947d:	cmp    DWORD PTR [rsi],ebp
  41947f:	xor    al,0x0
	...
  41948d:	add    BYTE PTR [rax],al
  41948f:	add    BYTE PTR [rdi+0x43],al
  419492:	rex.XB cmp spl,BYTE PTR [r8]
  419495:	sub    BYTE PTR [rdi+0x4e],al
  419498:	push   rbp
  419499:	sub    DWORD PTR [rax],esp
  41949b:	xor    al,0x2e
  41949d:	cmp    DWORD PTR [rsi],ebp
  41949f:	xor    al,0x0
	...
  4194ad:	add    BYTE PTR [rax],al
  4194af:	add    BYTE PTR [rdi+0x43],al
  4194b2:	rex.XB cmp spl,BYTE PTR [r8]
  4194b5:	sub    BYTE PTR [rdi+0x4e],al
  4194b8:	push   rbp
  4194b9:	sub    DWORD PTR [rax],esp
  4194bb:	xor    al,0x2e
  4194bd:	cmp    DWORD PTR [rsi],ebp
  4194bf:	xor    al,0x0
	...
  4194cd:	add    BYTE PTR [rax],al
  4194cf:	add    BYTE PTR [rdi+0x43],al
  4194d2:	rex.XB cmp spl,BYTE PTR [r8]
  4194d5:	sub    BYTE PTR [rdi+0x4e],al
  4194d8:	push   rbp
  4194d9:	sub    DWORD PTR [rax],esp
  4194db:	xor    al,0x2e
  4194dd:	cmp    DWORD PTR [rsi],ebp
  4194df:	xor    al,0x0
	...
  4194ed:	add    BYTE PTR [rax],al
  4194ef:	add    BYTE PTR [rdi+0x43],al
  4194f2:	rex.XB cmp spl,BYTE PTR [r8]
  4194f5:	sub    BYTE PTR [rdi+0x4e],al
  4194f8:	push   rbp
  4194f9:	sub    DWORD PTR [rax],esp
  4194fb:	xor    al,0x2e
  4194fd:	cmp    DWORD PTR [rsi],ebp
  4194ff:	xor    al,0x0
	...
  41950d:	add    BYTE PTR [rax],al
  41950f:	add    BYTE PTR [rdi+0x43],al
  419512:	rex.XB cmp spl,BYTE PTR [r8]
  419515:	sub    BYTE PTR [rdi+0x4e],al
  419518:	push   rbp
  419519:	sub    DWORD PTR [rax],esp
  41951b:	xor    al,0x2e
  41951d:	cmp    DWORD PTR [rsi],ebp
  41951f:	xor    al,0x0
	...
  41952d:	add    BYTE PTR [rax],al
  41952f:	add    BYTE PTR [rdi+0x43],al
  419532:	rex.XB cmp spl,BYTE PTR [r8]
  419535:	sub    BYTE PTR [rdi+0x4e],al
  419538:	push   rbp
  419539:	sub    DWORD PTR [rax],esp
  41953b:	xor    al,0x2e
  41953d:	cmp    DWORD PTR [rsi],ebp
  41953f:	xor    al,0x0
	...
  41954d:	add    BYTE PTR [rax],al
  41954f:	add    BYTE PTR [rdi+0x43],al
  419552:	rex.XB cmp spl,BYTE PTR [r8]
  419555:	sub    BYTE PTR [rdi+0x4e],al
  419558:	push   rbp
  419559:	sub    DWORD PTR [rax],esp
  41955b:	xor    al,0x2e
  41955d:	cmp    DWORD PTR [rsi],ebp
  41955f:	xor    al,0x0
	...
  41956d:	add    BYTE PTR [rax],al
  41956f:	add    BYTE PTR [rdi+0x43],al
  419572:	rex.XB cmp spl,BYTE PTR [r8]
  419575:	sub    BYTE PTR [rdi+0x4e],al
  419578:	push   rbp
  419579:	sub    DWORD PTR [rax],esp
  41957b:	xor    al,0x2e
  41957d:	cmp    DWORD PTR [rsi],ebp
  41957f:	xor    al,0x0
	...
  41958d:	add    BYTE PTR [rax],al
  41958f:	add    BYTE PTR [rdi+0x43],al
  419592:	rex.XB cmp spl,BYTE PTR [r8]
  419595:	sub    BYTE PTR [rdi+0x4e],al
  419598:	push   rbp
  419599:	sub    DWORD PTR [rax],esp
  41959b:	xor    al,0x2e
  41959d:	cmp    DWORD PTR [rsi],ebp
  41959f:	xor    al,0x0
	...
  4195ad:	add    BYTE PTR [rax],al
  4195af:	add    BYTE PTR [rdi+0x43],al
  4195b2:	rex.XB cmp spl,BYTE PTR [r8]
  4195b5:	sub    BYTE PTR [rdi+0x4e],al
  4195b8:	push   rbp
  4195b9:	sub    DWORD PTR [rax],esp
  4195bb:	xor    al,0x2e
  4195bd:	cmp    DWORD PTR [rsi],ebp
  4195bf:	xor    al,0x0
	...
  4195cd:	add    BYTE PTR [rax],al
  4195cf:	add    BYTE PTR [rdi+0x43],al
  4195d2:	rex.XB cmp spl,BYTE PTR [r8]
  4195d5:	sub    BYTE PTR [rdi+0x4e],al
  4195d8:	push   rbp
  4195d9:	sub    DWORD PTR [rax],esp
  4195db:	xor    al,0x2e
  4195dd:	cmp    DWORD PTR [rsi],ebp
  4195df:	xor    al,0x0
	...
  4195ed:	add    BYTE PTR [rax],al
  4195ef:	add    BYTE PTR [rdi+0x43],al
  4195f2:	rex.XB cmp spl,BYTE PTR [r8]
  4195f5:	sub    BYTE PTR [rdi+0x4e],al
  4195f8:	push   rbp
  4195f9:	sub    DWORD PTR [rax],esp
  4195fb:	xor    al,0x2e
  4195fd:	cmp    DWORD PTR [rsi],ebp
  4195ff:	xor    al,0x0
	...
  41960d:	add    BYTE PTR [rax],al
  41960f:	add    BYTE PTR [rdi+0x43],al
  419612:	rex.XB cmp spl,BYTE PTR [r8]
  419615:	sub    BYTE PTR [rdi+0x4e],al
  419618:	push   rbp
  419619:	sub    DWORD PTR [rax],esp
  41961b:	xor    al,0x2e
  41961d:	cmp    DWORD PTR [rsi],ebp
  41961f:	xor    al,0x0
	...
  41962d:	add    BYTE PTR [rax],al
  41962f:	add    BYTE PTR [rdi+0x43],al
  419632:	rex.XB cmp spl,BYTE PTR [r8]
  419635:	sub    BYTE PTR [rdi+0x4e],al
  419638:	push   rbp
  419639:	sub    DWORD PTR [rax],esp
  41963b:	xor    al,0x2e
  41963d:	cmp    DWORD PTR [rsi],ebp
  41963f:	xor    al,0x0
	...
  41964d:	add    BYTE PTR [rax],al
  41964f:	add    BYTE PTR [rdi+0x43],al
  419652:	rex.XB cmp spl,BYTE PTR [r8]
  419655:	sub    BYTE PTR [rdi+0x4e],al
  419658:	push   rbp
  419659:	sub    DWORD PTR [rax],esp
  41965b:	xor    al,0x2e
  41965d:	cmp    DWORD PTR [rsi],ebp
  41965f:	xor    al,0x0
	...
  41966d:	add    BYTE PTR [rax],al
  41966f:	add    BYTE PTR [rdi+0x43],al
  419672:	rex.XB cmp spl,BYTE PTR [r8]
  419675:	sub    BYTE PTR [rdi+0x4e],al
  419678:	push   rbp
  419679:	sub    DWORD PTR [rax],esp
  41967b:	xor    al,0x2e
  41967d:	cmp    DWORD PTR [rsi],ebp
  41967f:	xor    al,0x0
	...
  41968d:	add    BYTE PTR [rax],al
  41968f:	add    BYTE PTR [rdi+0x43],al
  419692:	rex.XB cmp spl,BYTE PTR [r8]
  419695:	sub    BYTE PTR [rdi+0x4e],al
  419698:	push   rbp
  419699:	sub    DWORD PTR [rax],esp
  41969b:	xor    al,0x2e
  41969d:	cmp    DWORD PTR [rsi],ebp
  41969f:	xor    al,0x0
	...
  4196ad:	add    BYTE PTR [rax],al
  4196af:	add    BYTE PTR [rdi+0x43],al
  4196b2:	rex.XB cmp spl,BYTE PTR [r8]
  4196b5:	sub    BYTE PTR [rdi+0x4e],al
  4196b8:	push   rbp
  4196b9:	sub    DWORD PTR [rax],esp
  4196bb:	xor    al,0x2e
  4196bd:	cmp    DWORD PTR [rsi],ebp
  4196bf:	xor    al,0x0
	...
  4196cd:	add    BYTE PTR [rax],al
  4196cf:	add    BYTE PTR [rdi+0x43],al
  4196d2:	rex.XB cmp spl,BYTE PTR [r8]
  4196d5:	sub    BYTE PTR [rdi+0x4e],al
  4196d8:	push   rbp
  4196d9:	sub    DWORD PTR [rax],esp
  4196db:	xor    al,0x2e
  4196dd:	cmp    DWORD PTR [rsi],ebp
  4196df:	xor    al,0x0
	...
  4196ed:	add    BYTE PTR [rax],al
  4196ef:	add    BYTE PTR [rdi+0x43],al
  4196f2:	rex.XB cmp spl,BYTE PTR [r8]
  4196f5:	sub    BYTE PTR [rdi+0x4e],al
  4196f8:	push   rbp
  4196f9:	sub    DWORD PTR [rax],esp
  4196fb:	xor    al,0x2e
  4196fd:	cmp    DWORD PTR [rsi],ebp
  4196ff:	xor    al,0x0
	...
  41970d:	add    BYTE PTR [rax],al
  41970f:	add    BYTE PTR [rdi+0x43],al
  419712:	rex.XB cmp spl,BYTE PTR [r8]
  419715:	sub    BYTE PTR [rdi+0x4e],al
  419718:	push   rbp
  419719:	sub    DWORD PTR [rax],esp
  41971b:	xor    al,0x2e
  41971d:	cmp    DWORD PTR [rsi],ebp
  41971f:	xor    al,0x0
	...
  41972d:	add    BYTE PTR [rax],al
  41972f:	add    BYTE PTR [rdi+0x43],al
  419732:	rex.XB cmp spl,BYTE PTR [r8]
  419735:	sub    BYTE PTR [rdi+0x4e],al
  419738:	push   rbp
  419739:	sub    DWORD PTR [rax],esp
  41973b:	xor    al,0x2e
  41973d:	cmp    DWORD PTR [rsi],ebp
  41973f:	xor    al,0x0
	...
  41974d:	add    BYTE PTR [rax],al
  41974f:	add    BYTE PTR [rdi+0x43],al
  419752:	rex.XB cmp spl,BYTE PTR [r8]
  419755:	sub    BYTE PTR [rdi+0x4e],al
  419758:	push   rbp
  419759:	sub    DWORD PTR [rax],esp
  41975b:	xor    al,0x2e
  41975d:	cmp    DWORD PTR [rsi],ebp
  41975f:	xor    al,0x0
	...
  41976d:	add    BYTE PTR [rax],al
  41976f:	add    BYTE PTR [rdi+0x43],al
  419772:	rex.XB cmp spl,BYTE PTR [r8]
  419775:	sub    BYTE PTR [rdi+0x4e],al
  419778:	push   rbp
  419779:	sub    DWORD PTR [rax],esp
  41977b:	xor    al,0x2e
  41977d:	cmp    DWORD PTR [rsi],ebp
  41977f:	xor    al,0x0
	...
  41978d:	add    BYTE PTR [rax],al
  41978f:	add    BYTE PTR [rdi+0x43],al
  419792:	rex.XB cmp spl,BYTE PTR [r8]
  419795:	sub    BYTE PTR [rdi+0x4e],al
  419798:	push   rbp
  419799:	sub    DWORD PTR [rax],esp
  41979b:	xor    al,0x2e
  41979d:	cmp    DWORD PTR [rsi],ebp
  41979f:	xor    al,0x0
	...
  4197ad:	add    BYTE PTR [rax],al
  4197af:	add    BYTE PTR [rdi+0x43],al
  4197b2:	rex.XB cmp spl,BYTE PTR [r8]
  4197b5:	sub    BYTE PTR [rdi+0x4e],al
  4197b8:	push   rbp
  4197b9:	sub    DWORD PTR [rax],esp
  4197bb:	xor    al,0x2e
  4197bd:	cmp    DWORD PTR [rsi],ebp
  4197bf:	xor    al,0x0
	...
  4197cd:	add    BYTE PTR [rax],al
  4197cf:	add    BYTE PTR [rdi+0x43],al
  4197d2:	rex.XB cmp spl,BYTE PTR [r8]
  4197d5:	sub    BYTE PTR [rdi+0x4e],al
  4197d8:	push   rbp
  4197d9:	sub    DWORD PTR [rax],esp
  4197db:	xor    al,0x2e
  4197dd:	cmp    DWORD PTR [rsi],ebp
  4197df:	xor    al,0x0
	...
  4197ed:	add    BYTE PTR [rax],al
  4197ef:	add    BYTE PTR [rdi+0x43],al
  4197f2:	rex.XB cmp spl,BYTE PTR [r8]
  4197f5:	sub    BYTE PTR [rdi+0x4e],al
  4197f8:	push   rbp
  4197f9:	sub    DWORD PTR [rax],esp
  4197fb:	xor    al,0x2e
  4197fd:	cmp    DWORD PTR [rsi],ebp
  4197ff:	xor    al,0x0
	...
  41980d:	add    BYTE PTR [rax],al
  41980f:	add    BYTE PTR [rdi+0x43],al
  419812:	rex.XB cmp spl,BYTE PTR [r8]
  419815:	sub    BYTE PTR [rdi+0x4e],al
  419818:	push   rbp
  419819:	sub    DWORD PTR [rax],esp
  41981b:	xor    al,0x2e
  41981d:	cmp    DWORD PTR [rsi],ebp
  41981f:	xor    al,0x0
	...
  41982d:	add    BYTE PTR [rax],al
  41982f:	add    BYTE PTR [rdi+0x43],al
  419832:	rex.XB cmp spl,BYTE PTR [r8]
  419835:	sub    BYTE PTR [rdi+0x4e],al
  419838:	push   rbp
  419839:	sub    DWORD PTR [rax],esp
  41983b:	xor    al,0x2e
  41983d:	cmp    DWORD PTR [rsi],ebp
  41983f:	xor    al,0x0
	...
  41984d:	add    BYTE PTR [rax],al
  41984f:	add    BYTE PTR [rdi+0x43],al
  419852:	rex.XB cmp spl,BYTE PTR [r8]
  419855:	sub    BYTE PTR [rdi+0x4e],al
  419858:	push   rbp
  419859:	sub    DWORD PTR [rax],esp
  41985b:	xor    al,0x2e
  41985d:	cmp    DWORD PTR [rsi],ebp
  41985f:	xor    al,0x0
	...
  41986d:	add    BYTE PTR [rax],al
  41986f:	add    BYTE PTR [rdi+0x43],al
  419872:	rex.XB cmp spl,BYTE PTR [r8]
  419875:	sub    BYTE PTR [rdi+0x4e],al
  419878:	push   rbp
  419879:	sub    DWORD PTR [rax],esp
  41987b:	xor    al,0x2e
  41987d:	cmp    DWORD PTR [rsi],ebp
  41987f:	xor    al,0x0
	...
  41988d:	add    BYTE PTR [rax],al
  41988f:	add    BYTE PTR [rdi+0x43],al
  419892:	rex.XB cmp spl,BYTE PTR [r8]
  419895:	sub    BYTE PTR [rdi+0x4e],al
  419898:	push   rbp
  419899:	sub    DWORD PTR [rax],esp
  41989b:	xor    al,0x2e
  41989d:	cmp    DWORD PTR [rsi],ebp
  41989f:	xor    al,0x0
	...
  4198ad:	add    BYTE PTR [rax],al
  4198af:	add    BYTE PTR [rdi+0x43],al
  4198b2:	rex.XB cmp spl,BYTE PTR [r8]
  4198b5:	sub    BYTE PTR [rdi+0x4e],al
  4198b8:	push   rbp
  4198b9:	sub    DWORD PTR [rax],esp
  4198bb:	xor    al,0x2e
  4198bd:	cmp    DWORD PTR [rsi],ebp
  4198bf:	xor    al,0x0
	...
  4198cd:	add    BYTE PTR [rax],al
  4198cf:	add    BYTE PTR [rdi+0x43],al
  4198d2:	rex.XB cmp spl,BYTE PTR [r8]
  4198d5:	sub    BYTE PTR [rdi+0x4e],al
  4198d8:	push   rbp
  4198d9:	sub    DWORD PTR [rax],esp
  4198db:	xor    al,0x2e
  4198dd:	cmp    DWORD PTR [rsi],ebp
  4198df:	xor    al,0x0
	...
  4198f5:	add    BYTE PTR [rax],al
  4198f7:	add    BYTE PTR [rcx],al
  4198f9:	add    BYTE PTR [rax],al
  4198fb:	add    ah,dl
  4198fd:	test   DWORD PTR [rcx],0x1905000
  419903:	add    BYTE PTR [rax+0x0],al
  419906:	add    BYTE PTR [rax],al
  419908:	(bad)  
  419909:	test   DWORD PTR [rcx],0x1903000
  41990f:	add    BYTE PTR [rax+0x0],al
  419912:	add    BYTE PTR [rax],al
  419914:	int3   
  419915:	test   DWORD PTR [rcx],0x1904000
  41991b:	add    BYTE PTR [rax+0x0],al
  41991e:	add    BYTE PTR [rax],al
  419920:	mov    esp,0x200001f7
  419925:	nop
  419926:	add    DWORD PTR [rax],eax
  419928:	add    BYTE PTR [rax],al
  41992b:	add    ah,bl
  41992d:	test   DWORD PTR [rcx],0x1906000
  419933:	add    BYTE PTR [rax+0x0],al
  419936:	add    BYTE PTR [rax],al
  419938:	pushf  
  419939:	test   DWORD PTR [rcx],0x1900000
  41993f:	add    BYTE PTR [rax+0x0],al
  419942:	add    BYTE PTR [rax],al
  419944:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  419945:	test   DWORD PTR [rcx],0x1901000
  41994b:	add    BYTE PTR [rax+0x0],al
	...

Disassembly of section .pdata:

000000000041a000 <.pdata>:
  41a000:	add    BYTE PTR [rax],dl
  41a002:	add    BYTE PTR [rax],al
  41a004:	add    DWORD PTR [rax],edx
  41a006:	add    BYTE PTR [rax],al
  41a008:	add    BYTE PTR [rax+0x10100001],dh
  41a00e:	add    BYTE PTR [rax],al
  41a010:	push   rcx
  41a011:	adc    DWORD PTR [rax],eax
  41a013:	add    BYTE PTR [rax+rsi*4],al
  41a016:	add    DWORD PTR [rax],eax
  41a018:	(bad)  
  41a019:	adc    DWORD PTR [rax],eax
  41a01b:	add    BYTE PTR [rsi+0xc000011],ch
  41a021:	mov    al,0x1
  41a023:	add    BYTE PTR [rax-0x31ffffef],dh
  41a029:	adc    al,0x0
  41a02b:	add    BYTE PTR [rax+rsi*4],dl
  41a02e:	add    DWORD PTR [rax],eax
  41a030:	rcl    BYTE PTR [rax+rax*1],1
  41a033:	add    dl,dh
  41a035:	adc    al,0x0
  41a037:	add    BYTE PTR [rax],ch
  41a039:	mov    al,0x1
  41a03b:	add    BYTE PTR [rax],al
  41a03d:	adc    eax,0x15220000
  41a042:	add    BYTE PTR [rax],al
  41a044:	rex.W mov al,0x1
  41a047:	add    BYTE PTR [rax],dh
  41a049:	adc    eax,0x15750000
  41a04e:	add    BYTE PTR [rax],al
  41a050:	ins    BYTE PTR es:[rdi],dx
  41a051:	mov    al,0x1
  41a053:	add    BYTE PTR [rax-0x6cffffeb],al
  41a059:	adc    eax,0xb0780000
  41a05e:	add    DWORD PTR [rax],eax
  41a060:	movabs al,ds:0x7c000018ac000015
  41a069:	mov    al,0x1
  41a06b:	add    BYTE PTR [rax+0x5000018],dh
  41a071:	sbb    al,BYTE PTR [rax]
  41a073:	add    al,ah
  41a075:	mov    al,0x1
  41a077:	add    BYTE PTR [rax],dl
  41a079:	sbb    al,BYTE PTR [rax]
  41a07b:	add    BYTE PTR [rdx+0x1a],ah
  41a07e:	add    BYTE PTR [rax],al
  41a080:	in     al,dx
  41a081:	mov    al,0x1
  41a083:	add    BYTE PTR [rax+0x1a],dh
  41a086:	add    BYTE PTR [rax],al
  41a088:	ret    0x1a
  41a08b:	add    ah,dh
  41a08d:	mov    al,0x1
  41a08f:	add    al,dl
  41a091:	sbb    al,BYTE PTR [rax]
  41a093:	add    BYTE PTR [rdx],ah
  41a095:	sbb    eax,DWORD PTR [rax]
  41a097:	add    ah,bh
  41a099:	mov    al,0x1
  41a09b:	add    BYTE PTR [rax],dh
  41a09d:	sbb    eax,DWORD PTR [rax]
  41a09f:	add    BYTE PTR [rbx+rbx*1],bh
  41a0a2:	add    BYTE PTR [rax],al
  41a0a4:	add    al,0xb1
  41a0a6:	add    DWORD PTR [rax],eax
  41a0a8:	rex sbb eax,DWORD PTR [rax]
  41a0ab:	add    BYTE PTR [rdi],ch
  41a0ad:	sbb    eax,0xb1080000
  41a0b2:	add    DWORD PTR [rax],eax
  41a0b4:	xor    BYTE PTR [rip+0x1d690000],bl        # 0x1daaa0ba
  41a0ba:	add    BYTE PTR [rax],al
  41a0bc:	rex.R mov cl,0x1
  41a0bf:	add    BYTE PTR [rax+0x1d],dh
  41a0c2:	add    BYTE PTR [rax],al
  41a0c4:	(bad)  
  41a0c5:	(bad)  
  41a0c6:	add    BYTE PTR [rax],al
  41a0c8:	rex.WR mov cl,0x1
  41a0cb:	add    BYTE PTR [rax],dl
  41a0cd:	(bad)  
  41a0ce:	add    BYTE PTR [rax],al
  41a0d0:	or     eax,0x84000020
  41a0d5:	mov    cl,0x1
  41a0d7:	add    BYTE PTR [rax],dl
  41a0d9:	and    BYTE PTR [rax],al
  41a0db:	add    BYTE PTR [rax-0x57ffffdf],bh
  41a0e1:	mov    cl,0x1
  41a0e3:	add    al,al
  41a0e5:	and    DWORD PTR [rax],eax
  41a0e7:	add    bl,dl
  41a0e9:	and    DWORD PTR [rax],eax
  41a0eb:	add    al,dl
  41a0ed:	mov    cl,0x1
  41a0ef:	add    al,ah
  41a0f1:	and    DWORD PTR [rax],eax
  41a0f3:	add    BYTE PTR [rbp+0x63],al
  41a0f6:	add    BYTE PTR [rax],al
  41a0f8:	(bad)  
  41a0f9:	mov    cl,0x1
  41a0fb:	add    BYTE PTR [rax+0x63],dl
  41a0fe:	add    BYTE PTR [rax],al
  41a100:	push   rbx
  41a101:	movsxd eax,DWORD PTR [rax]
  41a103:	add    BYTE PTR [rax*8+0x63600001],cl
  41a10a:	add    BYTE PTR [rax],al
  41a10c:	movsxd ax,DWORD PTR [rax]
  41a10f:	add    BYTE PTR [rax],dl
  41a111:	(bad)
  41a114:	jo     0x41a179
  41a116:	add    BYTE PTR [rax],al
  41a118:	jbe    0x41a17d
  41a11a:	add    BYTE PTR [rax],al
  41a11c:	adc    al,0xc5
  41a11e:	add    DWORD PTR [rax],eax
  41a120:	and    BYTE PTR [rbx+0x0],0x0
  41a124:	xchg   BYTE PTR [rbx+0x0],ah
  41a127:	add    BYTE PTR [rax],bl
  41a129:	(bad)
  41a12c:	nop
  41a12d:	movsxd eax,DWORD PTR [rax]
  41a12f:	add    BYTE PTR [rbp+0x1c000063],dl
  41a135:	(bad)
  41a138:	movabs al,ds:0x20000063a5000063
  41a141:	(bad)
  41a144:	mov    al,0x63
  41a146:	add    BYTE PTR [rax],al
  41a148:	mov    ch,0x63
  41a14a:	add    BYTE PTR [rax],al
  41a14c:	and    al,0xc5
  41a14e:	add    DWORD PTR [rax],eax
  41a150:	shl    BYTE PTR [rbx+0x0],0x0
  41a154:	enter  0x63,0x0
  41a158:	sub    ch,al
  41a15a:	add    DWORD PTR [rax],eax
  41a15c:	shl    BYTE PTR [rbx+0x0],1
  41a15f:	add    ch,dl
  41a161:	movsxd eax,DWORD PTR [rax]
  41a163:	add    BYTE PTR [rax*8+0x63e00001],ch
  41a16a:	add    BYTE PTR [rax],al
  41a16c:	data16 data16 add BYTE PTR [rax],al
  41a170:	xor    ch,al
  41a172:	add    DWORD PTR [rax],eax
  41a174:	jo     0x41a1dc
  41a176:	add    BYTE PTR [rax],al
  41a178:	jne    0x41a1e0
  41a17a:	add    BYTE PTR [rax],al
  41a17c:	(bad)
  41a180:	and    BYTE PTR [rsi+0x0],0x0
  41a184:	mov    BYTE PTR [rsi+0x0],ah
  41a187:	add    BYTE PTR [rbp+rax*8+0x1],cl
  41a18b:	add    BYTE PTR [rax-0x6affff9a],dl
  41a191:	data16 add BYTE PTR [rax],al
  41a194:	push   rax
  41a195:	(bad)
  41a198:	movabs al,ds:0x54000066a5000066
  41a1a1:	(bad)
  41a1a4:	mov    al,0x66
  41a1a6:	add    BYTE PTR [rax],al
  41a1a8:	mov    dh,0x66
  41a1aa:	add    BYTE PTR [rax],al
  41a1ac:	pop    rax
  41a1ad:	(bad)
  41a1b0:	shl    BYTE PTR [rsi+0x0],0x0
  41a1b4:	(bad)  
  41a1b5:	data16 add BYTE PTR [rax],al
  41a1b8:	pop    rsp
  41a1b9:	(bad)
  41a1bc:	shl    BYTE PTR [rsi+0x0],1
  41a1bf:	add    dh,dl
  41a1c1:	data16 add BYTE PTR [rax],al
  41a1c4:	(bad)  
  41a1c5:	(bad)
  41a1c8:	loopne 0x41a230
  41a1ca:	add    BYTE PTR [rax],al
  41a1cc:	(bad)  
  41a1cd:	data16 add BYTE PTR [rax],al
  41a1d0:	(bad)
  41a1d4:	lock data16 add BYTE PTR [rax],al
  41a1d8:	clc    
  41a1d9:	data16 add BYTE PTR [rax],al
  41a1dc:	push   0x1c5
  41a1e1:	add    BYTE PTR [eax],al
  41a1e4:	adc    BYTE PTR [rdi+0x0],ah
  41a1e7:	add    BYTE PTR [rbp+rax*8+0x1],ch
  41a1eb:	add    BYTE PTR [rax],dl
  41a1ed:	add    BYTE PTR [eax],al
  41a1f0:	sbb    BYTE PTR [rdi+0x0],ah
  41a1f3:	add    BYTE PTR [rbp+rax*8+0x1],dh
  41a1f7:	add    BYTE PTR [rax],ah
  41a1f9:	add    BYTE PTR [eax],al
  41a1fc:	add    BYTE PTR es:[eax],al
  41a200:	js     0x41a1c7
  41a202:	add    DWORD PTR [rax],eax
  41a204:	xor    BYTE PTR [rdi+0x0],ah
  41a207:	add    BYTE PTR [rip+0x7c000067],dh        # 0x7c41a274
  41a20d:	(bad)
  41a210:	rex
  41a211:	add    BYTE PTR [eax],al
  41a214:	rex.RB
  41a215:	add    BYTE PTR [eax],al
  41a218:	add    ch,0x1
  41a21b:	add    BYTE PTR [rax+0x67],dl
  41a21e:	add    BYTE PTR [rax],al
  41a220:	push   rbp
  41a221:	add    BYTE PTR [eax],al
  41a224:	test   ch,al
  41a226:	add    DWORD PTR [rax],eax
  41a228:	(bad)  
  41a229:	add    BYTE PTR [eax],al
  41a22c:	add    BYTE PTR gs:[eax],al
  41a230:	mov    ch,al
  41a232:	add    DWORD PTR [rax],eax
  41a234:	jo     0x41a29d
  41a236:	add    BYTE PTR [rax],al
  41a238:	js     0x41a2a1
  41a23a:	add    BYTE PTR [rax],al
  41a23c:	mov    ebp,es
  41a23e:	add    DWORD PTR [rax],eax
  41a240:	and    BYTE PTR [rdi+0x0],0x0
  41a244:	and    DWORD PTR [rdi+0x0],0x0
  41a248:	nop
  41a249:	(bad)
  41a24c:	nop
  41a24d:	add    BYTE PTR [eax],al
  41a250:	xchg   esi,eax
  41a251:	add    BYTE PTR [eax],al
  41a254:	xchg   esp,eax
  41a255:	(bad)
  41a258:	movabs al,ds:0x98000067a5000067
  41a261:	(bad)
  41a264:	mov    al,0x67
  41a266:	add    BYTE PTR [rax],al
  41a268:	mov    ch,0x67
  41a26a:	add    BYTE PTR [rax],al
  41a26c:	pushf  
  41a26d:	(bad)
  41a270:	shl    BYTE PTR [rdi+0x0],0x0
  41a274:	enter  0x67,0x0
  41a278:	movabs al,ds:0xd3000067d00001c5
  41a281:	add    BYTE PTR [eax],al
  41a284:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41a285:	(bad)
  41a288:	loopne 0x41a2f1
  41a28a:	add    BYTE PTR [rax],al
  41a28c:	jrcxz  0x41a2f5
  41a28e:	add    BYTE PTR [rax],al
  41a290:	test   al,0xc5
  41a292:	add    DWORD PTR [rax],eax
  41a294:	lock add BYTE PTR [eax],al
  41a298:	(bad)  
  41a299:	add    BYTE PTR [eax],al
  41a29c:	lods   al,BYTE PTR ds:[rsi]
  41a29d:	(bad)
  41a2a0:	add    BYTE PTR [rax+0x0],ch
  41a2a3:	add    BYTE PTR [rbx],al
  41a2a5:	push   0xffffffffc5b00000
  41a2aa:	add    DWORD PTR [rax],eax
  41a2ac:	adc    BYTE PTR [rax+0x0],ch
  41a2af:	add    BYTE PTR [rbx],dl
  41a2b1:	push   0xffffffffc5b40000
  41a2b6:	add    DWORD PTR [rax],eax
  41a2b8:	and    BYTE PTR [rax+0x0],ch
  41a2bb:	add    BYTE PTR [rbx],ah
  41a2bd:	push   0xffffffffc5b80000
  41a2c2:	add    DWORD PTR [rax],eax
  41a2c4:	xor    BYTE PTR [rax+0x0],ch
  41a2c7:	add    BYTE PTR [rdi],dh
  41a2c9:	push   0xffffffffc5bc0000
  41a2ce:	add    DWORD PTR [rax],eax
  41a2d0:	rex push 0x68470000
  41a2d6:	add    BYTE PTR [rax],al
  41a2d8:	rol    ch,0x1
  41a2db:	add    BYTE PTR [rax+0x68],dl
  41a2de:	add    BYTE PTR [rax],al
  41a2e0:	push   rbx
  41a2e1:	push   0xffffffffc5c40000
  41a2e6:	add    DWORD PTR [rax],eax
  41a2e8:	(bad)  
  41a2e9:	push   0x68630000
  41a2ee:	add    BYTE PTR [rax],al
  41a2f0:	enter  0x1c5,0x0
  41a2f4:	jo     0x41a35e
  41a2f6:	add    BYTE PTR [rax],al
  41a2f8:	jae    0x41a362
  41a2fa:	add    BYTE PTR [rax],al
  41a2fc:	int3   
  41a2fd:	(bad)
  41a300:	sub    BYTE PTR [rax+0x0],0x0
  41a304:	sub    DWORD PTR [rax+0x0],0x0
  41a308:	rol    ch,1
  41a30a:	add    DWORD PTR [rax],eax
  41a30c:	nop
  41a30d:	push   0x68960000
  41a312:	add    BYTE PTR [rax],al
  41a314:	(bad)  
  41a315:	(bad)
  41a318:	movabs al,ds:0xd8000068a3000068
  41a321:	(bad)
  41a324:	mov    al,0x68
  41a326:	add    BYTE PTR [rax],al
  41a328:	enter  0x68,0x0
  41a32c:	fadd   st(5),st
  41a32e:	add    DWORD PTR [rax],eax
  41a330:	shr    BYTE PTR [rax+0x0],1
  41a333:	add    dh,bh
  41a335:	push   0xffffffffc5e40000
  41a33a:	add    DWORD PTR [rax],eax
  41a33c:	add    BYTE PTR [rcx+0x0],ch
  41a33f:	add    BYTE PTR [rcx-0x13ffff97],ah
  41a345:	(bad)
  41a348:	mov    al,0x69
  41a34a:	add    BYTE PTR [rax],al
  41a34c:	(bad)  
  41a34d:	push   0x0
  41a34f:	add    al,bh
  41a351:	(bad)
  41a354:	jo     0x41a3c0
  41a356:	add    BYTE PTR [rax],al
  41a358:	mov    al,0x6a
  41a35a:	add    BYTE PTR [rax],al
  41a35c:	add    al,0xc6
  41a35e:	add    DWORD PTR [rax],eax
  41a360:	mov    al,0x6a
  41a362:	add    BYTE PTR [rax],al
  41a364:	imul   DWORD PTR [rbx+0x0]
  41a367:	add    BYTE PTR [rsi+rax*8],cl
  41a36a:	add    DWORD PTR [rax],eax
  41a36c:	add    BYTE PTR [rax+rax*1+0x0],ch
  41a370:	(bad)  [rax+rax*1+0x0]
  41a374:	and    dh,al
  41a376:	add    DWORD PTR [rax],eax
  41a378:	loopne 0x41a3e6
  41a37a:	add    BYTE PTR [rax],al
  41a37c:	push   rax
  41a37d:	ins    DWORD PTR es:[rdi],dx
  41a37e:	add    BYTE PTR [rax],al
  41a380:	sub    al,0xc6
  41a382:	add    DWORD PTR [rax],eax
  41a384:	push   rax
  41a385:	ins    DWORD PTR es:[rdi],dx
  41a386:	add    BYTE PTR [rax],al
  41a388:	jp     0x41a3f7
  41a38a:	add    BYTE PTR [rax],al
  41a38c:	cmp    dh,al
  41a38e:	add    DWORD PTR [rax],eax
  41a390:	sub    BYTE PTR [rbp+0x0],0x0
  41a394:	lahf   
  41a395:	ins    DWORD PTR es:[rdi],dx
  41a396:	add    BYTE PTR [rax],al
  41a398:	rex mov BYTE PTR [rcx],0x0
  41a39c:	movabs al,ds:0x4c000073ea00006d
  41a3a5:	mov    BYTE PTR [rcx],0x0
  41a3a8:	lock jae 0x41a3ab
  41a3ab:	add    BYTE PTR [rbp+0x74],ah
  41a3ae:	add    BYTE PTR [rax],al
  41a3b0:	mov    BYTE PTR fs:[rcx],0x0
  41a3b4:	jo     0x41a42a
  41a3b6:	add    BYTE PTR [rax],al
  41a3b8:	ds ja  0x41a3bb
  41a3bb:	add    BYTE PTR [rax-0x3a],dh
  41a3be:	add    DWORD PTR [rax],eax
  41a3c0:	rex ja 0x41a3c3
  41a3c3:	add    BYTE PTR [rbp+0x77],dh
  41a3c6:	add    BYTE PTR [rax],al
  41a3c8:	add    dh,0x1
  41a3cb:	add    BYTE PTR [rax-0x7effff89],al
  41a3d1:	ja     0x41a3d3
  41a3d3:	add    BYTE PTR [rax-0x6ffffe3a],cl
  41a3d9:	ja     0x41a3db
  41a3db:	add    BYTE PTR [rdx-0x73ffff89],bh
  41a3e1:	mov    BYTE PTR [rcx],0x0
  41a3e4:	shl    BYTE PTR [rdi+0x0],0x0
  41a3e8:	fnsave [rdi+0x0]
  41a3eb:	add    BYTE PTR [rsi+rax*8+0x77e00001],dl
  41a3f2:	add    BYTE PTR [rax],al
  41a3f4:	adc    eax,0x9c000078
  41a3f9:	mov    BYTE PTR [rcx],0x0
  41a3fc:	and    BYTE PTR [rax+0x0],bh
  41a3ff:	add    BYTE PTR [rbp+0x78],ah
  41a402:	add    BYTE PTR [rax],al
  41a404:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41a405:	mov    BYTE PTR [rcx],0x0
  41a408:	jo     0x41a482
  41a40a:	add    BYTE PTR [rax],al
  41a40c:	sbb    BYTE PTR [rcx+0x0],bh
  41a40f:	add    BYTE PTR [rsi+rax*8+0x79200001],ch
  41a416:	add    BYTE PTR [rax],al
  41a418:	jp     0x41a494
  41a41a:	add    BYTE PTR [rax],al
  41a41c:	mov    eax,0x800001c6
  41a421:	jp     0x41a423
  41a423:	add    BYTE PTR [rdx+rdi*2-0x39300000],bh
  41a42a:	add    DWORD PTR [rax],eax
  41a42c:	sar    BYTE PTR [rdx+0x0],0x0
  41a430:	fidivr DWORD PTR [rdx+0x0]
  41a433:	add    ah,bl
  41a435:	mov    BYTE PTR [rcx],0x0
  41a438:	loopne 0x41a4b4
  41a43a:	add    BYTE PTR [rax],al
  41a43c:	stos   DWORD PTR es:[rdi],eax
  41a43d:	jnp    0x41a43f
  41a43f:	add    ah,ah
  41a441:	mov    BYTE PTR [rcx],0x0
  41a444:	mov    al,0x7b
  41a446:	add    BYTE PTR [rax],al
  41a448:	(bad)  
  41a449:	jnp    0x41a44b
  41a44b:	add    ah,dh
  41a44d:	mov    BYTE PTR [rcx],0x0
  41a450:	loopne 0x41a4cd
  41a452:	add    BYTE PTR [rax],al
  41a454:	(bad)  
  41a455:	jl     0x41a457
  41a457:	add    al,bh
  41a459:	mov    BYTE PTR [rcx],0x0
  41a45c:	and    BYTE PTR [rax+rax*1+0x0],bh
  41a460:	(bad)  
  41a461:	jl     0x41a463
  41a463:	add    ah,bh
  41a465:	mov    BYTE PTR [rcx],0x0
  41a468:	xor    BYTE PTR [rax+rax*1+0x0],bh
  41a46c:	push   rbx
  41a46d:	jl     0x41a46f
  41a46f:	add    BYTE PTR [rax],al
  41a471:	mov    DWORD PTR [rcx],0x7c6000
  41a477:	add    dh,bl
  41a479:	jl     0x41a47b
  41a47b:	add    BYTE PTR [rax],cl
  41a47d:	mov    DWORD PTR [rcx],0x7ce000
  41a483:	add    BYTE PTR [rcx],bl
  41a485:	jge    0x41a487
  41a487:	add    BYTE PTR [rax],dl
  41a489:	mov    DWORD PTR [rcx],0x7d2000
  41a48f:	add    BYTE PTR [rsi+rdi*2-0x38ec0000],al
  41a496:	add    DWORD PTR [rax],eax
  41a498:	nop
  41a499:	jle    0x41a49b
  41a49b:	add    BYTE PTR [rbx],dl
  41a49d:	jg     0x41a49f
  41a49f:	add    BYTE PTR [rdi+rax*8],ch
  41a4a2:	add    DWORD PTR [rax],eax
  41a4a4:	and    BYTE PTR [rdi+0x0],bh
  41a4a7:	add    BYTE PTR [rdx+0x3000007f],bh
  41a4ad:	mov    DWORD PTR [rcx],0x821000
  41a4b3:	add    BYTE PTR [rdi+0x38000082],dh
  41a4b9:	mov    DWORD PTR [rcx],0x82c000
  41a4bf:	add    cl,bl
  41a4c1:	(bad)  
  41a4c2:	add    BYTE PTR [rax],al
  41a4c4:	rex mov DWORD PTR [rcx],0x82e000
  41a4cb:	add    BYTE PTR [rip+0x48000083],dl        # 0x4841a554
  41a4d1:	mov    DWORD PTR [rcx],0x832000
  41a4d7:	add    BYTE PTR [rbp-0x7d],dh
  41a4da:	add    BYTE PTR [rax],al
  41a4dc:	push   rax
  41a4dd:	mov    DWORD PTR [rcx],0x838000
  41a4e3:	add    BYTE PTR [rbx+rax*4-0x38a40000],bl
  41a4ea:	add    DWORD PTR [rax],eax
  41a4ec:	movabs al,ds:0x60000083aa000083
  41a4f5:	mov    DWORD PTR [rcx],0x83b000
  41a4fb:	add    BYTE PTR [rbx+0x64000083],dh
  41a501:	mov    DWORD PTR [rcx],0x83c000
  41a507:	add    BYTE PTR [rsi+0x68000084],dl
  41a50d:	mov    DWORD PTR [rcx],0x84a000
  41a513:	add    BYTE PTR [rbx+0x78000085],bl
  41a519:	mov    DWORD PTR [rcx],0x85a000
  41a51f:	add    bh,cl
  41a521:	test   DWORD PTR [rax],eax
  41a523:	add    BYTE PTR [rax-0x2ffffe39],cl
  41a529:	test   DWORD PTR [rax],eax
  41a52b:	add    BYTE PTR [rcx],bh
  41a52d:	xchg   BYTE PTR [rax],al
  41a52f:	add    BYTE PTR [rax+0x400001c7],dl
  41a535:	xchg   BYTE PTR [rax],al
  41a537:	add    BYTE PTR [rbx-0x7a],al
  41a53a:	add    BYTE PTR [rax],al
  41a53c:	pushf  
  41a53d:	mov    DWORD PTR [rcx],0x865000
  41a543:	add    BYTE PTR [rcx-0x5fffff7a],dl
  41a549:	mov    DWORD PTR [rcx],0x86a000
  41a54f:	add    BYTE PTR [rsi+rax*4-0x38580000],ch
  41a556:	add    DWORD PTR [rax],eax
  41a558:	mov    al,0x86
  41a55a:	add    BYTE PTR [rax],al
  41a55c:	lods   al,BYTE PTR ds:[rsi]
  41a55d:	xchg   DWORD PTR [rax],eax
  41a55f:	add    BYTE PTR [rdi+rax*8-0x784fffff],ch
  41a566:	add    BYTE PTR [rax],al
  41a568:	mov    bl,0x87
  41a56a:	add    BYTE PTR [rax],al
  41a56c:	(bad)  
  41a56d:	mov    DWORD PTR [rcx],0x87c000
  41a573:	add    ah,al
  41a575:	xchg   DWORD PTR [rax],eax
  41a577:	add    al,cl
  41a579:	mov    DWORD PTR [rcx],0x87d000
  41a57f:	add    ah,dl
  41a581:	xchg   DWORD PTR [rax],eax
  41a583:	add    ah,cl
  41a585:	mov    DWORD PTR [rcx],0x87e000
  41a58b:	add    BYTE PTR [rcx-0x78],al
  41a58e:	add    BYTE PTR [rax],al
  41a590:	rol    bh,1
  41a592:	add    DWORD PTR [rax],eax
  41a594:	push   rax
  41a595:	mov    BYTE PTR [rax],al
  41a597:	add    BYTE PTR [rdx-0x23ffff77],dh
  41a59d:	mov    DWORD PTR [rcx],0x89c000
  41a5a3:	add    BYTE PTR [rcx-0xfffff74],bh
  41a5a9:	mov    DWORD PTR [rcx],0x8cc000
  41a5af:	add    BYTE PTR [rsi-0x72],ah
  41a5b2:	add    BYTE PTR [rax],al
  41a5b4:	or     al,cl
  41a5b6:	add    DWORD PTR [rax],eax
  41a5b8:	jo     0x41a548
  41a5ba:	add    BYTE PTR [rax],al
  41a5bc:	pop    rsp
  41a5bd:	pop    QWORD PTR [rax]
  41a5bf:	add    BYTE PTR [rax],dl
  41a5c1:	enter  0x1,0x60
  41a5c5:	pop    QWORD PTR [rax]
  41a5c7:	add    BYTE PTR [rax],bl
  41a5c9:	xchg   ecx,eax
  41a5ca:	add    BYTE PTR [rax],al
  41a5cc:	and    al,cl
  41a5ce:	add    DWORD PTR [rax],eax
  41a5d0:	and    BYTE PTR [rcx-0x6e730000],dl
  41a5d6:	add    BYTE PTR [rax],al
  41a5d8:	sub    al,cl
  41a5da:	add    DWORD PTR [rax],eax
  41a5dc:	nop
  41a5dd:	xchg   ecx,eax
  41a5de:	add    BYTE PTR [rax],al
  41a5e0:	setb   BYTE PTR [rax]
  41a5e3:	add    BYTE PTR [rax],bh
  41a5e5:	enter  0x1,0x10
  41a5e9:	xchg   edx,eax
  41a5ea:	add    BYTE PTR [rax],al
  41a5ec:	scas   eax,DWORD PTR es:[rdi]
  41a5ed:	xchg   edx,eax
  41a5ee:	add    BYTE PTR [rax],al
  41a5f0:	rex.R enter 0x1,0xb0
  41a5f5:	xchg   edx,eax
  41a5f6:	add    BYTE PTR [rax],al
  41a5f8:	mov    dl,BYTE PTR [rbx-0x37b40000]
  41a5fe:	add    DWORD PTR [rax],eax
  41a600:	nop
  41a601:	xchg   ebx,eax
  41a602:	add    BYTE PTR [rax],al
  41a604:	scas   eax,DWORD PTR es:[rdi]
  41a605:	xchg   ebx,eax
  41a606:	add    BYTE PTR [rax],al
  41a608:	push   rsp
  41a609:	enter  0x1,0xb0
  41a60d:	xchg   ebx,eax
  41a60e:	add    BYTE PTR [rax],al
  41a610:	ret    0x93
  41a613:	add    BYTE PTR [rax-0x38],bl
  41a616:	add    DWORD PTR [rax],eax
  41a618:	rcl    BYTE PTR [rbx-0x6beb0000],1
  41a61e:	add    BYTE PTR [rax],al
  41a620:	pop    rsp
  41a621:	enter  0x1,0x20
  41a625:	xchg   esp,eax
  41a626:	add    BYTE PTR [rax],al
  41a628:	mov    esi,0x60000094
  41a62d:	enter  0x1,0xc0
  41a631:	xchg   esp,eax
  41a632:	add    BYTE PTR [rax],al
  41a634:	add    edx,DWORD PTR [rbp-0x37940000]
  41a63a:	add    DWORD PTR [rax],eax
  41a63c:	adc    BYTE PTR [rbp-0x6ab50000],dl
  41a642:	add    BYTE PTR [rax],al
  41a644:	js     0x41a60e
  41a646:	add    DWORD PTR [rax],eax
  41a648:	push   rax
  41a649:	xchg   ebp,eax
  41a64a:	add    BYTE PTR [rax],al
  41a64c:	ficom  WORD PTR [rbp-0x37800000]
  41a652:	add    DWORD PTR [rax],eax
  41a654:	loopne 0x41a5eb
  41a656:	add    BYTE PTR [rax],al
  41a658:	sbb    BYTE PTR [rsi-0x37740000],dl
  41a65e:	add    DWORD PTR [rax],eax
  41a660:	and    BYTE PTR [rsi-0x698b0000],dl
  41a666:	add    BYTE PTR [rax],al
  41a668:	cwde   
  41a669:	enter  0x1,0x80
  41a66d:	xchg   esi,eax
  41a66e:	add    BYTE PTR [rax],al
  41a670:	cs xchg edi,eax
  41a672:	add    BYTE PTR [rax],al
  41a674:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41a675:	enter  0x1,0x80
  41a679:	xchg   edi,eax
  41a67a:	add    BYTE PTR [rax],al
  41a67c:	pop    rbp
  41a67d:	cdq    
  41a67e:	add    BYTE PTR [rax],al
  41a680:	mov    ah,0xc8
  41a682:	add    DWORD PTR [rax],eax
  41a684:	(bad)  
  41a685:	cdq    
  41a686:	add    BYTE PTR [rax],al
  41a688:	jg     0x41a625
  41a68a:	add    BYTE PTR [rax],al
  41a68c:	(bad)  
  41a68d:	enter  0x1,0x80
  41a691:	fwait
  41a692:	add    BYTE PTR [rax],al
  41a694:	rcr    BYTE PTR [rbx-0x372c0000],cl
  41a69a:	add    DWORD PTR [rax],eax
  41a69c:	loopne 0x41a639
  41a69e:	add    BYTE PTR [rax],al
  41a6a0:	xor    bl,BYTE PTR [rax+rax*1+0x1c8e000]
  41a6a7:	add    BYTE PTR [rax-0x64],al
  41a6aa:	add    BYTE PTR [rax],al
  41a6ac:	jbe    0x41a64a
  41a6ae:	add    BYTE PTR [rax],al
  41a6b0:	call   0xffffffff8041a87d
  41a6b5:	pushf  
  41a6b6:	add    BYTE PTR [rax],al
  41a6b8:	sbb    bl,BYTE PTR [rbp-0x37100000]
  41a6be:	add    DWORD PTR [rax],eax
  41a6c0:	and    BYTE PTR [rbp-0x62d20000],bl
  41a6c6:	add    BYTE PTR [rax],al
  41a6c8:	cld    
  41a6c9:	enter  0x1,0x30
  41a6cd:	popf   
  41a6ce:	add    BYTE PTR [rax],al
  41a6d0:	rex.WR popf 
  41a6d2:	add    BYTE PTR [rax],al
  41a6d4:	add    al,0xc9
  41a6d6:	add    DWORD PTR [rax],eax
  41a6d8:	push   rax
  41a6d9:	popf   
  41a6da:	add    BYTE PTR [rax],al
  41a6dc:	push   rbp
  41a6dd:	popf   
  41a6de:	add    BYTE PTR [rax],al
  41a6e0:	or     al,0xc9
  41a6e2:	add    DWORD PTR [rax],eax
  41a6e4:	(bad)  
  41a6e5:	popf   
  41a6e6:	add    BYTE PTR [rax],al
  41a6e8:	xchg   ebx,eax
  41a6e9:	sahf   
  41a6ea:	add    BYTE PTR [rax],al
  41a6ec:	adc    cl,cl
  41a6ee:	add    DWORD PTR [rax],eax
  41a6f0:	movabs al,ds:0x2400009f6000009e
  41a6f9:	leave  
  41a6fa:	add    DWORD PTR [rax],eax
  41a6fc:	(bad)  
  41a6fd:	movabs eax,ds:0xc9340000a1680000
  41a706:	add    DWORD PTR [rax],eax
  41a708:	jo     0x41a6ab
  41a70a:	add    BYTE PTR [rax],al
  41a70c:	jnp    0x41a6af
  41a70e:	add    BYTE PTR [rax],al
  41a710:	cmp    cl,cl
  41a712:	add    DWORD PTR [rax],eax
  41a714:	movabs ds:0xb8600000a2690000,al
  41a71e:	add    DWORD PTR [rax],eax
  41a720:	jo     0x41a6c4
  41a722:	add    BYTE PTR [rax],al
  41a724:	mov    eax,0x700000a2
  41a729:	mov    eax,0xa2c00001
  41a72e:	add    BYTE PTR [rax],al
  41a730:	ret    
  41a731:	movabs ds:0xa2d00001b0680000,al
  41a73a:	add    BYTE PTR [rax],al
  41a73c:	pop    rbx
  41a73d:	movabs ds:0xa3600001b9080000,eax
  41a746:	add    BYTE PTR [rax],al
  41a748:	movs   BYTE PTR es:[rdi],BYTE PTR gs:[rsi]
  41a74a:	add    BYTE PTR [rax],al
  41a74c:	add    BYTE PTR [rdx-0x5b8fffff],bh
  41a752:	add    BYTE PTR [rax],al
  41a754:	jne    0x41a6fb
  41a756:	add    BYTE PTR [rax],al
  41a758:	test   al,0xb9
  41a75a:	add    DWORD PTR [rax],eax
  41a75c:	and    BYTE PTR [rbp-0x597f0000],0x0
  41a763:	add    al,bh
  41a765:	mov    eax,0xa6900001
  41a76a:	add    BYTE PTR [rax],al
  41a76c:	and    ah,BYTE PTR [rdi-0x46d80000]
  41a772:	add    DWORD PTR [rax],eax
  41a774:	xor    BYTE PTR [rdi-0x57640000],ah
  41a77a:	add    BYTE PTR [rax],al
  41a77c:	sar    BYTE PTR [rcx-0x575fffff],0x0
  41a783:	add    dh,bh
  41a785:	test   eax,0xb9680000
  41a78a:	add    DWORD PTR [rax],eax
  41a78c:	add    BYTE PTR [rdx-0x54a40000],ch
  41a792:	add    BYTE PTR [rax],al
  41a794:	cmp    BYTE PTR [rcx-0x549fffff],bh
  41a79a:	add    BYTE PTR [rax],al
  41a79c:	test   BYTE PTR [rbp-0x46b00000],ch
  41a7a2:	add    DWORD PTR [rax],eax
  41a7a4:	nop
  41a7a5:	lods   eax,DWORD PTR ds:[rsi]
  41a7a6:	add    BYTE PTR [rax],al
  41a7a8:	imul   ebp,DWORD PTR [rsi-0x46e80000],0x1
  41a7af:	add    BYTE PTR [rax-0x52],dh
  41a7b2:	add    BYTE PTR [rax],al
  41a7b4:	lahf   
  41a7b5:	scas   al,BYTE PTR es:[rdi]
  41a7b6:	add    BYTE PTR [rax],al
  41a7b8:	test   BYTE PTR [rax-0x515fffff],bh
  41a7be:	add    BYTE PTR [rax],al
  41a7c0:	jmp    0x41a770
  41a7c2:	add    BYTE PTR [rax],al
  41a7c4:	mov    ah,0xb8
  41a7c6:	add    DWORD PTR [rax],eax
  41a7c8:	lock scas al,BYTE PTR es:[rdi]
  41a7ca:	add    BYTE PTR [rax],al
  41a7cc:	sub    BYTE PTR [rdi-0x47140000],ch
  41a7d2:	add    DWORD PTR [rax],eax
  41a7d4:	xor    BYTE PTR [rdi-0x50830000],ch
  41a7da:	add    BYTE PTR [rax],al
  41a7dc:	loopne 0x41a796
  41a7de:	add    DWORD PTR [rax],eax
  41a7e0:	sub    BYTE PTR [rdi-0x4ffa0000],0x0
  41a7e7:	add    BYTE PTR [rax+rdi*4-0x4fefffff],cl
  41a7ee:	add    BYTE PTR [rax],al
  41a7f0:	pop    rsi
  41a7f1:	mov    al,0x0
  41a7f3:	add    al,al
  41a7f5:	mov    eax,0xb0600001
  41a7fa:	add    BYTE PTR [rax],al
  41a7fc:	(bad)  
  41a7fd:	add    DWORD PTR [r8],eax
  41a800:	sbb    BYTE PTR [rdx+0x41400001],bh
  41a806:	add    DWORD PTR [rax],eax
  41a808:	adc    BYTE PTR [rdx+0x1],al
  41a80b:	.byte 0x0
  41a80c:	add    al,0xc5
  41a80e:	add    DWORD PTR [rax],eax

Disassembly of section .xdata:

000000000041b000 <.xdata>:
  41b000:	add    DWORD PTR [rax],eax
  41b002:	add    BYTE PTR [rax],al
  41b004:	add    DWORD PTR [rcx+rax*1],eax
  41b007:	add    BYTE PTR [rdx+rax*2],al
  41b00a:	add    BYTE PTR [rax],al
  41b00c:	add    DWORD PTR [rcx+rax*1],eax
  41b00f:	add    BYTE PTR [rdx+riz*2],al
  41b012:	add    BYTE PTR [rax],al
  41b014:	add    DWORD PTR [rdi],ecx
  41b016:	or     BYTE PTR [rax],al
  41b018:	lgdt   [rbx]
  41b01b:	add    BYTE PTR [rax],cl
  41b01d:	xor    BYTE PTR [rdi],al
  41b01f:	(bad)  
  41b020:	(bad)  
  41b021:	jo     0x41b028
  41b023:	push   rax
  41b024:	add    al,0xc0
  41b026:	add    dl,al
  41b028:	or     DWORD PTR [rcx+rax*1],eax
  41b02b:	add    BYTE PTR [rdx+rax*2],al
  41b02e:	add    BYTE PTR [rax],al
  41b030:	sar    BYTE PTR [rdi+0x0],1
  41b033:	add    BYTE PTR [rcx],al
  41b035:	add    BYTE PTR [rax],al
  41b037:	add    ah,dl
  41b039:	adc    al,0x0
  41b03b:	add    ah,ch
  41b03d:	adc    al,0x0
  41b03f:	add    BYTE PTR [rax-0x71],ah
  41b042:	add    BYTE PTR [rax],al
  41b044:	in     al,dx
  41b045:	adc    al,0x0
  41b047:	add    BYTE PTR [rcx],cl
  41b049:	add    al,0x1
  41b04b:	add    BYTE PTR [rdx+rax*2],al
  41b04e:	add    BYTE PTR [rax],al
  41b050:	sar    BYTE PTR [rdi+0x0],1
  41b053:	add    BYTE PTR [rcx],al
  41b055:	add    BYTE PTR [rax],al
  41b057:	add    BYTE PTR [rdx*1+0x151c0000],al
  41b05e:	add    BYTE PTR [rax],al
  41b060:	(bad)  
  41b061:	pop    QWORD PTR [rax]
  41b063:	add    BYTE PTR [rdx*1+0x10000],bl
  41b06a:	add    BYTE PTR [rax],al
  41b06c:	add    DWORD PTR [rsi],eax
  41b06e:	add    eax,DWORD PTR [rax]
  41b070:	(bad)  
  41b071:	(bad)  
  41b073:	xor    BYTE PTR [rcx],al
  41b075:	(bad)  
  41b076:	add    BYTE PTR [rax],al
  41b078:	add    DWORD PTR [rax],eax
  41b07a:	add    BYTE PTR [rax],al
  41b07c:	sbb    DWORD PTR [rcx],edx
  41b07e:	or     DWORD PTR [rax],eax
  41b080:	adc    DWORD PTR [rcx],eax
  41b082:	xor    al,BYTE PTR [rax]
  41b084:	or     dh,BYTE PTR [rax]
  41b086:	or     DWORD PTR [rax+0x8],esp
  41b089:	jo     0x41b092
  41b08b:	push   rax
  41b08c:	(bad)  
  41b08d:	rol    BYTE PTR [rax+rdx*8],0x2
  41b091:	loopne 0x41b093
  41b093:	add    BYTE PTR [rax],ah
  41b095:	add    BYTE PTR [rax],0x0
  41b098:	(bad)  
  41b099:	inc    DWORD PTR [rcx]
  41b09b:	cmp    BYTE PTR [rip+0x5610000],r8b        # 0x5a2b0a2
  41b0a2:	cdq    
  41b0a3:	add    eax,0x3c018c00
  41b0a8:	pop    QWORD PTR [rip+0x501d600]        # 0x54386ae
  41b0ae:	xchg   esp,eax
  41b0af:	add    eax,0x6301e200
  41b0b4:	mov    edx,0x2d00005
  41b0b9:	add    eax,0xfd0004be
  41b0be:	add    al,BYTE PTR [rip+0xffffffffb00005f0]        # 0xffffffffb041b6b4
  41b0c4:	add    eax,DWORD PTR [rip+0xffffffffdc0005ee]        # 0xffffffffdc41b6b8
  41b0ca:	add    eax,DWORD PTR [rip+0xffffffffef0005ba]        # 0xffffffffef41b68a
  41b0d0:	add    ebx,DWORD PTR [rip+0xffffffff920005e9]        # 0xffffffff9241b6bf
  41b0d6:	add    al,0x5
  41b0d8:	mov    edi,0x58a0005
  41b0dd:	xor    BYTE PTR [rax],al
  41b0df:	add    BYTE PTR [rcx],al
  41b0e1:	(bad)  
  41b0e2:	add    al,0x0
  41b0e4:	(bad)  
  41b0e5:	xor    al,BYTE PTR [rbx]
  41b0e7:	xor    BYTE PTR [rdx],al
  41b0e9:	(bad)  
  41b0ea:	add    DWORD PTR [rax+0x1],esi
  41b0ed:	add    al,0x1
  41b0ef:	add    BYTE PTR [rdx+riz*2],al
  41b0f2:	add    BYTE PTR [rax],al
  41b0f4:	add    DWORD PTR [rcx+rax*1],eax
  41b0f7:	add    BYTE PTR [rdx+riz*2],al
  41b0fa:	add    BYTE PTR [rax],al
  41b0fc:	add    DWORD PTR [rcx+rax*1],eax
  41b0ff:	add    BYTE PTR [rdx+riz*2],al
  41b102:	add    BYTE PTR [rax],al
  41b104:	add    DWORD PTR [rax],eax
  41b106:	add    BYTE PTR [rax],al
  41b108:	sbb    DWORD PTR [rdi],eax
  41b10a:	add    al,0x0
  41b10c:	(bad)  
  41b10d:	xchg   edx,eax
  41b10e:	add    esi,DWORD PTR [rax]
  41b110:	add    ah,BYTE PTR [rax+0x1]
  41b113:	jo     0x41b135
  41b115:	add    BYTE PTR [rax],0x0
  41b118:	(bad)  
  41b119:	inc    DWORD PTR [rcx]
  41b11b:	and    eax,0x519
  41b120:	rex.WXB add rax,0x560003a2
  41b126:	add    eax,0xf20003be
  41b12b:	add    DWORD PTR [rip+0xfffffffffd0003a2],eax        # 0xfffffffffd41b4d3
  41b131:	add    DWORD PTR [rip+0xffffffffb60003d6],eax        # 0xffffffffb641b50d
  41b137:	add    ch,BYTE PTR [rdx+riz*4+0x3]
  41b13b:	add    BYTE PTR [rcx+0x503],bh
  41b141:	add    BYTE PTR [rax],al
  41b143:	add    BYTE PTR [rcx],al
  41b145:	add    eax,0x32050002
  41b14a:	add    DWORD PTR [rax],esi
  41b14c:	sbb    DWORD PTR [rdi+rax*1],ecx
  41b14f:	add    BYTE PTR [rdx+riz*8],cl
  41b152:	or     BYTE PTR [rax],dh
  41b154:	(bad)  
  41b155:	(bad)  
  41b156:	(bad)  
  41b157:	jo     0x41b15e
  41b159:	push   rax
  41b15a:	add    al,0xc0
  41b15c:	add    dl,al
  41b15e:	add    BYTE PTR [rax],al
  41b160:	and    BYTE PTR [rax-0x10000],al
  41b166:	add    DWORD PTR [rcx],ebx
  41b168:	and    eax,DWORD PTR [rip+0x52e0000]        # 0x56fb16e
  41b16e:	mov    DWORD PTR [rdx],0x8d054500
  41b174:	add    eax,DWORD PTR [rax]
  41b176:	push   rbp
  41b177:	in     eax,dx
  41b178:	add    esi,esp
  41b17a:	add    al,BYTE PTR [rax]
  41b17c:	loope  0x41b180
  41b17e:	add    eax,0x0
  41b183:	add    BYTE PTR [rcx],bl
  41b185:	(bad)  
  41b186:	add    al,0x0
  41b188:	(bad)  
  41b189:	jb     0x41b18e
  41b18b:	xor    BYTE PTR [rdx],al
  41b18d:	(bad)  
  41b18e:	add    DWORD PTR [rax+0x20],esi
  41b191:	add    BYTE PTR [rax],0x0
  41b194:	(bad)  
  41b195:	inc    DWORD PTR [rcx]
  41b197:	(bad)  
  41b198:	cmp    eax,0x52000005
  41b19d:	(bad)  
  41b19e:	fiadd  WORD PTR [rcx]
  41b1a0:	add    BYTE PTR [rsi+0x5701],ah
  41b1a6:	add    BYTE PTR [rax],al
  41b1a8:	sbb    DWORD PTR [rax],ecx
  41b1aa:	add    eax,0x4820800
  41b1af:	xor    BYTE PTR [rbx],al
  41b1b1:	(bad)  
  41b1b2:	add    dh,BYTE PTR [rax+0x1]
  41b1b5:	push   rax
  41b1b6:	add    BYTE PTR [rax],al
  41b1b8:	and    BYTE PTR [rax-0x10000],al
  41b1be:	add    DWORD PTR [rax],edx
  41b1c0:	sub    cl,BYTE PTR [rbx-0xffffff]
  41b1c6:	add    DWORD PTR [rip+0xffffffffff000390],eax        # 0xffffffffff41b55c
  41b1cc:	add    ch,BYTE PTR [rcx]
  41b1ce:	add    BYTE PTR [rax],al
  41b1d0:	add    DWORD PTR [rax],eax
  41b1d2:	add    BYTE PTR [rax],al
  41b1d4:	sbb    DWORD PTR [rbx],edx
  41b1d6:	or     al,BYTE PTR [rax]
  41b1d8:	adc    eax,DWORD PTR [rcx]
  41b1da:	xchg   ebp,eax
  41b1db:	add    DWORD PTR [rax+rsi*1],ecx
  41b1de:	or     esp,DWORD PTR [rax+0xa]
  41b1e1:	jo     0x41b1ec
  41b1e3:	push   rax
  41b1e4:	or     al,al
  41b1e6:	(bad)  
  41b1e7:	rol    BYTE PTR [rax+riz*8],1
  41b1ea:	add    dh,al
  41b1ec:	and    BYTE PTR [rax-0x10000],al
  41b1f2:	add    edx,ebp
  41b1f4:	or     al,0x26
  41b1f6:	add    eax,0x5480000
  41b1fb:	cmc    
  41b1fc:	pop    rbp
  41b1fd:	add    BYTE PTR [rdi+0x10],dl
  41b200:	mov    edx,0x1a4005d
  41b205:	add    eax,0x1b30000
  41b20a:	adc    al,0xaa
  41b20c:	pop    rbp
  41b20d:	add    ch,dh
  41b20f:	add    DWORD PTR [rip+0x2870000],eax        # 0x2c8b215
  41b215:	add    eax,0xa6005da5
  41b21a:	add    al,BYTE PTR [rip+0xffffffffb5005da0]        # 0xffffffffb5420fc0
  41b220:	add    dl,BYTE PTR [rax]
  41b222:	rcr    DWORD PTR [rax+rax*1-0x65],cl
  41b226:	add    eax,DWORD PTR [rip+0x3ad0000]        # 0x3eeb22c
  41b22c:	add    eax,0xc7005cc6
  41b231:	add    eax,DWORD PTR [rip+0xffffffffe1005cb9]        # 0xffffffffe1420ef0
  41b237:	add    eax,DWORD PTR [rip+0xfffffffff4005cac]        # 0xfffffffff4420ee9
  41b23d:	add    eax,DWORD PTR [rip+0xffffffffff005ca4]        # 0xffffffffff420ee7
  41b243:	add    eax,DWORD PTR [rip+0xffffffffa6005c85]        # 0xffffffffa6420ece
  41b249:	add    al,0x5
  41b24b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41b24c:	pop    rsp
  41b24d:	add    BYTE PTR [rcx+0x5be60504],dh
  41b253:	add    al,bl
  41b255:	add    al,0x5
  41b257:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41b258:	pop    rsp
  41b259:	add    bl,ah
  41b25b:	add    al,0x5
  41b25d:	(bad)  
  41b25e:	pop    rbx
  41b25f:	add    BYTE PTR [rdx+0x5ca40505],cl
  41b265:	add    BYTE PTR [rbp+0x5ba80505],dl
  41b26b:	add    bl,al
  41b26d:	add    eax,0x5ca405
  41b272:	fld    QWORD PTR [rip+0x5ba305]        # 0x9d557d
  41b278:	in     al,dx
  41b279:	add    eax,0x5af010
  41b27e:	mov    ecx,0x5ca40506
  41b283:	add    bl,dl
  41b285:	(bad)  
  41b286:	add    eax,0xe2005aeb
  41b28b:	(bad)  
  41b28c:	adc    BYTE PTR [rax+0x7af005a],bh
  41b292:	add    eax,0xc9005ca4
  41b297:	(bad)  
  41b298:	add    eax,0xd8005ab3
  41b29d:	(bad)  
  41b29e:	adc    BYTE PTR [rax+0x8a5005a],al
  41b2a4:	add    eax,0xbf005ca4
  41b2a9:	or     BYTE PTR [rip+0xffffffffce0059fb],al        # 0xffffffffce420caa
  41b2af:	or     BYTE PTR [rax],dl
  41b2b1:	enter  0x59,0x9b
  41b2b5:	or     DWORD PTR [rip+0xffffffffaa005ca4],eax        # 0xffffffffaa420f5f
  41b2bb:	or     DWORD PTR [rip+0xffffffffdc0059c0],ebx        # 0xffffffffdc420c81
  41b2c1:	or     DWORD PTR [rip+0xffffffffeb0059b8],eax        # 0xffffffffeb420c7f
  41b2c7:	or     DWORD PTR [rdi],ebx
  41b2c9:	mov    al,0x59
  41b2cb:	add    BYTE PTR [rax+0x59a8050a],bl
  41b2d1:	add    BYTE PTR [rdx+0x59a0050a],dh
  41b2d7:	add    ah,cl
  41b2d9:	or     al,BYTE PTR [rip+0xffffffff840057c8]        # 0xffffffff84420aa7
  41b2df:	or     esp,DWORD PTR [rdx]
  41b2e1:	leave  
  41b2e2:	(bad)  
  41b2e3:	add    DWORD PTR [rax],eax
  41b2e5:	retf   
  41b2e6:	or     al,0x5
  41b2e8:	rol    DWORD PTR [rdx+0xcda0001],0x14
  41b2ef:	movabs ds:0x82c1050da1000182,al
  41b2f8:	add    DWORD PTR [rax],eax
  41b2fa:	mov    al,0xd
  41b2fc:	sbb    BYTE PTR [rbp-0x22fffe7e],bl
  41b302:	or     eax,0x1829805
  41b307:	add    ch,ch
  41b309:	or     eax,0x181d105
  41b30e:	add    bl,al
  41b310:	(bad)  
  41b311:	add    eax,0x182c1
  41b316:	ror    BYTE PTR [rsi],cl
  41b318:	and    ah,cl
  41b31a:	add    DWORD PTR [rcx],0x50f8700
  41b320:	cdq    
  41b321:	add    DWORD PTR [rcx],0x50fc900
  41b327:	xchg   ecx,eax
  41b328:	add    DWORD PTR [rcx],0x140fd800
  41b32e:	repnz add BYTE PTR [rcx],0x0
  41b332:	movabs eax,ds:0x10b0000181910510
  41b33b:	sbb    ch,ch
  41b33d:	add    BYTE PTR [rcx],0x0
  41b340:	fst    QWORD PTR [rax]
  41b342:	add    eax,0x180e8
  41b347:	call   0xffffffff80e2b85c
  41b34c:	add    DWORD PTR [rax],eax
  41b34e:	mov    esi,0x81910511
  41b353:	add    DWORD PTR [rax],eax
  41b355:	fcom   DWORD PTR [rcx]
  41b357:	add    eax,0x1809c
  41b35c:	repnz adc DWORD PTR [rip+0x18097],eax        # 0x4333fa
  41b363:	adc    DWORD PTR [rdx],0x7fd010
  41b369:	out    0x12,eax
  41b36b:	add    eax,0x18191
  41b370:	adc    DWORD PTR [rbx],0x7fcb05
  41b376:	nop
  41b377:	adc    edx,DWORD PTR [rax]
  41b379:	cwde   
  41b37a:	jg     0x41b37c
  41b37c:	fst    QWORD PTR [rbx]
  41b37e:	add    eax,0x18191
  41b383:	not    DWORD PTR [rbx]
  41b385:	add    eax,0x91007f93
  41b38a:	adc    al,0x5
  41b38c:	mov    ?,WORD PTR [rdi+0x0]
  41b38f:	movabs al,ds:0x51581007ec71014
  41b398:	xchg   ecx,eax
  41b399:	add    DWORD PTR [rcx],0x5159b00
  41b39f:	ret    0x7e
  41b3a2:	mov    ch,0x15
  41b3a4:	add    eax,0xc4007ebd
  41b3a9:	adc    eax,0x7df610
  41b3ae:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41b3af:	(bad)  
  41b3b0:	add    eax,0x18191
  41b3b5:	mov    edi,0x7df10516
  41b3ba:	add    cl,bl
  41b3bc:	(bad)  
  41b3bd:	add    eax,0xe8007dec
  41b3c2:	(bad)  
  41b3c3:	adc    BYTE PTR [rbp+0x17c9007d],ah
  41b3c9:	add    eax,0x18191
  41b3ce:	jrcxz  0x41b3e7
  41b3d0:	add    eax,0xfd007da0
  41b3d5:	(bad)  
  41b3d6:	add    eax,0x8c007d9b
  41b3db:	sbb    BYTE PTR [rax],dl
  41b3dd:	(bad)  
  41b3de:	jl     0x41b3e0
  41b3e0:	in     eax,dx
  41b3e1:	sbb    BYTE PTR [rip+0x18191],al        # 0x433578
  41b3e7:	xchg   DWORD PTR [rcx],ebx
  41b3e9:	add    eax,0xa1007ccf
  41b3ee:	sbb    DWORD PTR [rip+0xffffffffb0007cca],eax        # 0xffffffffb04230be
  41b3f4:	sbb    DWORD PTR [rax],edx
  41b3f6:	cmp    DWORD PTR [rax+rax*1-0x6f],0x1a
  41b3fb:	add    eax,0x18191
  41b400:	stos   DWORD PTR es:[rdi],eax
  41b401:	sbb    al,BYTE PTR [rip+0xffffffffc5007bfe]        # 0xffffffffc5423005
  41b407:	sbb    al,BYTE PTR [rip+0xffffffffd4007bf9]        # 0xffffffffd4423006
  41b40d:	sbb    dl,BYTE PTR [rax]
  41b40f:	mov    dl,0x7b
  41b411:	add    BYTE PTR [rbp-0x7e6efae5],dh
  41b417:	add    DWORD PTR [rax],eax
  41b419:	iret   
  41b41a:	sbb    eax,DWORD PTR [rip+0xffffffffe9007bad]        # 0xffffffffe9422fcd
  41b420:	sbb    eax,DWORD PTR [rip+0xfffffffff8007ba8]        # 0xfffffffff8422fce
  41b426:	sbb    edx,DWORD PTR [rax]
  41b428:	loope  0x41b4a4
  41b42a:	add    cl,bl
  41b42c:	sbb    al,0x5
  41b42e:	xchg   ecx,eax
  41b42f:	add    DWORD PTR [rcx],0x51cf300
  41b435:	fdivr  QWORD PTR [rdx+0x0]
  41b438:	lea    ebx,[rip+0x7ad705]        # 0xbc8b43
  41b43e:	pushf  
  41b43f:	sbb    eax,0x7a9010
  41b444:	std    
  41b445:	sbb    eax,0x1819105
  41b44a:	add    BYTE PTR [rdi+0x7a8b051e],dl
  41b450:	add    BYTE PTR [rcx+0x7a86051e],dh
  41b456:	add    al,al
  41b458:	(bad)  
  41b459:	adc    BYTE PTR [rdi+0x1fa10079],bh
  41b45f:	add    eax,0x18191
  41b464:	mov    ebx,0x79ba051f
  41b469:	add    ch,dl
  41b46b:	(bad)  
  41b46c:	add    eax,0xe40079b5
  41b471:	(bad)  
  41b472:	adc    dh,ch
  41b474:	js     0x41b476
  41b476:	(bad)
  41b479:	xchg   ecx,eax
  41b47a:	add    DWORD PTR [rcx],0x520df00
  41b480:	jmp    0x213ab4fd
  41b485:	add    eax,0x880078e4
  41b48a:	and    DWORD PTR [rax],edx
  41b48c:	popf   
  41b48d:	js     0x41b48f
  41b48f:	jmp    0xffffffff81d2b9b5
  41b494:	add    DWORD PTR [rax],eax
  41b496:	and    DWORD PTR [rdx],0x5
  41b499:	cwde   
  41b49a:	js     0x41b49c
  41b49c:	popf   
  41b49d:	and    al,BYTE PTR [rip+0xffffffffac007893]        # 0xffffffffac422d36
  41b4a3:	and    dl,BYTE PTR [rax]
  41b4a5:	int3   
  41b4a6:	ja     0x41b4a8
  41b4a8:	lea    esp,[rbx]
  41b4aa:	add    eax,0x18191
  41b4af:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41b4b0:	and    eax,DWORD PTR [rip+0xffffffffc10077c7]        # 0xffffffffc1422c7d
  41b4b6:	and    eax,DWORD PTR [rip+0xffffffffd00077c2]        # 0xffffffffd0422c7e
  41b4bc:	and    edx,DWORD PTR [rax]
  41b4be:	sti    
  41b4bf:	jbe    0x41b4c1
  41b4c1:	mov    cl,0x24
  41b4c3:	add    eax,0x18191
  41b4c8:	retf   
  41b4c9:	and    al,0x5
  41b4cb:	div    BYTE PTR [rsi+0x0]
  41b4ce:	in     eax,0x24
  41b4d0:	add    eax,0xf40076f1
  41b4d5:	and    al,0x10
  41b4d7:	stos   BYTE PTR es:[rdi],al
  41b4d8:	jbe    0x41b4da
  41b4da:	(bad)  
  41b4db:	and    eax,0x1819105
  41b4e0:	add    bh,ch
  41b4e2:	and    eax,0x76a505
  41b4e7:	mov    DWORD PTR [rsi],esp
  41b4e9:	add    eax,0x980076a0
  41b4ee:	es adc cl,bl
  41b4f1:	jne    0x41b4f3
  41b4f3:	stc    
  41b4f4:	es add eax,0x18191
  41b4fa:	xchg   ebx,eax
  41b4fb:	(bad)  
  41b4fc:	add    eax,0xad0075d4
  41b501:	(bad)  
  41b502:	add    eax,0xbc0075cf
  41b507:	(bad)  
  41b508:	adc    BYTE PTR [rax+0x289d0075],cl
  41b50e:	add    eax,0x18191
  41b513:	mov    bh,0x28
  41b515:	add    eax,0xd1007583
  41b51a:	sub    BYTE PTR [rip+0xffffffffe00074fe],al        # 0xffffffffe0422a1e
  41b520:	sub    BYTE PTR [rax],dl
  41b522:	mov    bh,0x74
  41b524:	add    cl,al
  41b526:	sub    DWORD PTR [rip+0x18191],eax        # 0x4336bd
  41b52c:	fld    TBYTE PTR [rcx]
  41b52e:	add    eax,0xf50074b2
  41b533:	sub    DWORD PTR [rip+0xffffffff840074ad],eax        # 0xffffffff844229e6
  41b539:	sub    dl,BYTE PTR [rax]
  41b53b:	out    0x73,al
  41b53d:	add    ch,ah
  41b53f:	sub    al,BYTE PTR [rip+0x18191]        # 0x4336d6
  41b545:	hlt    
  41b546:	sub    dl,BYTE PTR [rdi+rax*8]
  41b549:	jae    0x41b54b
  41b54b:	mov    cl,0x2b
  41b54d:	add    eax,0x18191
  41b552:	shr    BYTE PTR [rbx],0x14
  41b555:	test   al,0x73
  41b557:	add    ch,bh
  41b559:	sub    eax,DWORD PTR [rip+0x18191]        # 0x4336f0
  41b55f:	mov    WORD PTR [rsp+rdx*1],gs
  41b562:	mov    DWORD PTR [rbx+0x0],esi
  41b565:	leave  
  41b566:	sub    al,0x5
  41b568:	xchg   ecx,eax
  41b569:	add    DWORD PTR [rcx],0x52ce300
  41b56f:	test   BYTE PTR [rbx+0x0],dh
  41b572:	std    
  41b573:	sub    al,0x5
  41b575:	push   QWORD PTR [rdx+0x0]
  41b578:	mov    WORD PTR [rip+0x72b810],gs        # 0xb46d8e
  41b57e:	in     eax,dx
  41b57f:	sub    eax,0x1819105
  41b584:	add    BYTE PTR [rdi+0x72b3052e],al
  41b58a:	add    BYTE PTR [rcx+0x72ae052e],ah
  41b590:	add    BYTE PTR [rax+0x71e7102e],dh
  41b596:	add    BYTE PTR [rcx-0x7e6efad1],dl
  41b59c:	add    DWORD PTR [rax],eax
  41b59e:	stos   DWORD PTR es:[rdi],eax
  41b59f:	(bad)  
  41b5a0:	add    eax,0xc50071e2
  41b5a5:	(bad)  
  41b5a6:	add    eax,0xd40071dd
  41b5ab:	(bad)  
  41b5ac:	adc    BYTE PTR [rsi+0x30b50071],dl
  41b5b2:	add    eax,0x18191
  41b5b7:	iret   
  41b5b8:	xor    BYTE PTR [rip+0xffffffffe9007191],al        # 0xffffffffe942274f
  41b5be:	xor    BYTE PTR [rip+0xfffffffff800718c],al        # 0xfffffffff8422750
  41b5c4:	xor    BYTE PTR [rax],dl
  41b5c6:	(bad)
  41b5c9:	fnstenv [rcx]
  41b5cb:	add    eax,0x18191
  41b5d0:	repz xor DWORD PTR [rip+0xffffffff8d0070c0],eax        # 0xffffffff8d422697
  41b5d7:	xor    al,BYTE PTR [rip+0xffffffff9c0070bb]        # 0xffffffff9c422698
  41b5dd:	xor    dl,BYTE PTR [rax]
  41b5df:	hlt    
  41b5e0:	outs   dx,DWORD PTR ds:[rsi]
  41b5e1:	add    ch,bh
  41b5e3:	xor    al,BYTE PTR [rip+0x18191]        # 0x43377a
  41b5e9:	xchg   edi,eax
  41b5ea:	xor    eax,DWORD PTR [rip+0xffffffffb1006fef]        # 0xffffffffb14225df
  41b5f0:	xor    eax,DWORD PTR [rip+0xffffffffc0006fea]        # 0xffffffffc04225e0
  41b5f6:	xor    edx,DWORD PTR [rax]
  41b5f8:	movabs ds:0x181910534a1006f,eax
  41b601:	add    BYTE PTR [rbx+0x6f9e0534],bh
  41b607:	add    ch,dl
  41b609:	xor    al,0x5
  41b60b:	cdq    
  41b60c:	outs   dx,DWORD PTR ds:[rsi]
  41b60d:	add    ah,ah
  41b60f:	xor    al,0x10
  41b611:	shr    BYTE PTR [rsi+0x0],cl
  41b614:	(bad)
  41b617:	xchg   ecx,eax
  41b618:	add    DWORD PTR [rcx],0x535df00
  41b61e:	int    0x6e
  41b620:	add    cl,bh
  41b622:	xor    eax,0x6ec805
  41b627:	mov    BYTE PTR [rsi],dh
  41b629:	adc    BYTE PTR [rcx+0x36e9006e],al
  41b62f:	add    eax,0x18191
  41b634:	xor    DWORD PTR [rdi],0x5
  41b637:	cld    
  41b638:	ins    DWORD PTR es:[rdi],dx
  41b639:	add    BYTE PTR [rbp+0x6df70537],bl
  41b63f:	add    BYTE PTR [rdi+rsi*1+0x6db010],ch
  41b646:	lea    edi,[rax]
  41b648:	add    eax,0x18191
  41b64d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41b64e:	cmp    BYTE PTR [rip+0xffffffffc1006dab],al        # 0xffffffffc14223ff
  41b654:	cmp    BYTE PTR [rip+0xffffffffd0006da6],al        # 0xffffffffd0422400
  41b65a:	cmp    BYTE PTR [rax],dl
  41b65c:	fild   QWORD PTR [rax+rax*1-0x4f]
  41b660:	cmp    DWORD PTR [rip+0x18191],eax        # 0x4337f7
  41b666:	retf   
  41b667:	cmp    DWORD PTR [rip+0xffffffffe5006cda],eax        # 0xffffffffe5422347
  41b66d:	cmp    DWORD PTR [rip+0xfffffffff4006cd5],eax        # 0xfffffffff4422348
  41b673:	cmp    DWORD PTR [rax],edx
  41b675:	mov    gs,WORD PTR [rax+rax*1-0x2b]
  41b679:	cmp    al,BYTE PTR [rip+0x18191]        # 0x433810
  41b67f:	out    dx,eax
  41b680:	cmp    al,BYTE PTR [rip+0xffffffff89006c89]        # 0xffffffff8942230f
  41b686:	cmp    eax,DWORD PTR [rip+0xffffffff98006c84]        # 0xffffffff98422310
  41b68c:	cmp    edx,DWORD PTR [rax]
  41b68e:	mov    ebp,0x3bf9006b
  41b693:	add    eax,0x18191
  41b698:	xchg   ebx,eax
  41b699:	cmp    al,0x5
  41b69b:	mov    eax,0x3cad006b
  41b6a0:	add    eax,0xbc006bb3
  41b6a5:	cmp    al,0x10
  41b6a7:	in     al,dx
  41b6a8:	push   0x0
  41b6aa:	popf   
  41b6ab:	cmp    eax,0x1819105
  41b6b0:	add    BYTE PTR [rdi+0x6ae7053d],dh
  41b6b6:	add    cl,dl
  41b6b8:	cmp    eax,0x6ae205
  41b6bd:	loopne 0x41b6fc
  41b6bf:	adc    BYTE PTR [rbx+0x3ec1006a],bl
  41b6c5:	add    eax,0x18191
  41b6ca:	fstp   TBYTE PTR [rsi]
  41b6cc:	add    eax,0xf5006a96
  41b6d1:	ds add eax,0x84006a91
  41b6d7:	(bad)  
  41b6d8:	adc    dl,cl
  41b6da:	imul   eax,DWORD PTR [rax],0x91053fe5
  41b6e0:	add    DWORD PTR [rcx],0x53fff00
  41b6e6:	(bad)
  41b6e9:	mov    es,WORD PTR [rax+0x10]
  41b6ec:	xchg   edx,eax
  41b6ed:	imul   eax,DWORD PTR [rax],0x910540db
  41b6f3:	add    DWORD PTR [rcx],0x540f500
  41b6f9:	lea    ebp,[rcx+0x0]
  41b6fc:	pop    QWORD PTR [rcx+0x5]
  41b6ff:	mov    BYTE PTR [rcx+0x0],ch
  41b702:	sahf   
  41b703:	adc    r9b,al
  41b706:	push   0x541ff00
  41b70b:	xchg   ecx,eax
  41b70c:	add    DWORD PTR [rcx],0x22428e00
  41b712:	mov    esp,0x42ba0068
  41b717:	(bad)  
  41b718:	mov    bh,0x68
  41b71a:	add    dl,ch
  41b71c:	rex.X add eax,0x890068b2
  41b722:	rex.XB add eax,0x980068ad
  41b728:	rex.XB adc BYTE PTR [r14+0x44a10067],dil
  41b72f:	add    eax,0x18191
  41b734:	mov    al,0x44
  41b736:	and    bh,BYTE PTR [rcx+0x44dc0067]
  41b73c:	and    dh,BYTE PTR [rdi+riz*2+0x1f458800]
  41b743:	scas   eax,DWORD PTR es:[rdi]
  41b744:	add    BYTE PTR [eax+0x67aa0545],bh
  41b74b:	add    dl,dl
  41b74d:	rex.RB add eax,0xe80067a2
  41b753:	rex.RB add eax,0x8400679a
  41b759:	rex.RX add eax,0x93006792
  41b75f:	rex.RX adc dil,r12b
  41b762:	gs add al,bl
  41b765:	rex.RXB add eax,0x18191
  41b76b:	out    0x47,eax
  41b76d:	and    ah,dl
  41b76f:	add    BYTE PTR gs:[rbx+0x65dd2248],dl
  41b776:	add    BYTE PTR [rdi+0x65d81f48],bh
  41b77c:	add    bh,ch
  41b77e:	add    rax,0xffffffff890065d3
  41b784:	rex.WB add rax,0xffffffff9f0065cb
  41b78a:	rex.WB add rax,0xffffffffbb0065c3
  41b790:	rex.WB add rax,0xffffffffca0065bb
  41b796:	rex.WB adc BYTE PTR [r8+0x4b8f0064],dl
  41b79d:	add    eax,0x18191
  41b7a2:	sahf   
  41b7a3:	rex.WXB and cl,BYTE PTR [r11+0x4bca0064]
  41b7aa:	and    al,BYTE PTR [rsi+0x4bf60064]
  41b7b0:	(bad)  
  41b7b1:	and    DWORD PTR [rax+rax*1-0x5a],0x63fc054c
  41b7b9:	add    al,al
  41b7bb:	rex.WR add rax,0xffffffffd60063f4
  41b7c1:	rex.WR add rax,0xfffffffff20063ec
  41b7c7:	rex.WR add rax,0xffffffff810063e4
  41b7cd:	rex.WRB adc BYTE PTR [r9+0x4ec60062],r15b
  41b7d4:	add    eax,0x18191
  41b7d9:	(bad)  
  41b7da:	rex.WRX and rax,0xffffffff890062b4
  41b7e0:	rex.WRXB (bad) 
  41b7e2:	scas   eax,DWORD PTR es:[rdi]
  41b7e3:	(bad)  
  41b7e4:	add    BYTE PTR [rdx+0x62aa224f],bh
  41b7ea:	add    dl,dh
  41b7ec:	rex.WRXB add rax,0xffffffff8c0062a5
  41b7f2:	push   rax
  41b7f3:	add    eax,0xa200629d
  41b7f8:	push   rax
  41b7f9:	add    eax,0xbe006295
  41b7fe:	push   rax
  41b7ff:	add    eax,0xcd00628d
  41b804:	push   rax
  41b805:	adc    dl,ah
  41b807:	(bad)  
  41b808:	add    BYTE PTR [rdx-0x7e6efaae],cl
  41b80e:	add    DWORD PTR [rax],eax
  41b810:	cdq    
  41b811:	push   rdx
  41b812:	(bad)  
  41b813:	fisub  DWORD PTR [rax+0x0]
  41b816:	ret    0x2252
  41b819:	shl    BYTE PTR [rax+0x0],cl
  41b81c:	out    dx,al
  41b81d:	push   rdx
  41b81e:	and    al,0xca
  41b820:	(bad)  
  41b821:	add    BYTE PTR [rbx+rdx*2+0x60c21f],bl
  41b828:	int3   
  41b829:	push   rbx
  41b82a:	add    eax,0xe30060ba
  41b82f:	push   rbx
  41b830:	add    eax,0xf60060b2
  41b835:	push   rbx
  41b836:	add    eax,0x880060aa
  41b83b:	push   rsp
  41b83c:	add    eax,0x960060a2
  41b841:	push   rsp
  41b842:	add    eax,0xb200609a
  41b847:	push   rsp
  41b848:	add    eax,0xc1006092
  41b84d:	push   rsp
  41b84e:	adc    BYTE PTR [rdx+0x57be005e],al
  41b854:	add    eax,0x182c9
  41b859:	fwait
  41b85a:	pop    rcx
  41b85b:	fiadd  DWORD PTR [rax+rax*1]
  41b85e:	add    BYTE PTR [rax],al
  41b860:	sbb    DWORD PTR [rcx+rax*1],eax
  41b863:	add    BYTE PTR [rdx+rax*2],al
  41b866:	add    BYTE PTR [rax],al
  41b868:	and    BYTE PTR [rax-0x10000],al
  41b86e:	add    DWORD PTR [rax],eax
  41b870:	sbb    DWORD PTR [rsi],eax
  41b872:	add    eax,DWORD PTR [rax]
  41b874:	(bad)  
  41b875:	rex.X add sil,BYTE PTR [rax]
  41b878:	add    DWORD PTR [rax+0x0],esp
  41b87b:	add    BYTE PTR [rax],ah
  41b87d:	add    BYTE PTR [rax],0x0
  41b880:	(bad)  
  41b881:	inc    DWORD PTR [rcx]
  41b883:	add    BYTE PTR [rcx],al
  41b885:	add    al,0x1
  41b887:	add    BYTE PTR [rdx+rax*2],al
  41b88a:	add    BYTE PTR [rax],al
  41b88c:	sbb    DWORD PTR [rdx],ecx
  41b88e:	(bad)  
  41b88f:	add    BYTE PTR [rdx],cl
  41b891:	push   rdx
  41b892:	(bad)  
  41b893:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1bcf9
  41b899:	push   rax
  41b89a:	add    al,al
  41b89c:	and    BYTE PTR [rax-0x10000],al
  41b8a2:	add    DWORD PTR [rip+0x52a],ecx        # 0x41bdd2
  41b8a8:	(bad)  
  41b8a9:	(bad)  
  41b8aa:	imul   eax,DWORD PTR [rax],0xffffff80
  41b8ad:	add    DWORD PTR [rsi],eax
  41b8af:	add    BYTE PTR [rax],al
  41b8b1:	add    BYTE PTR [rax],al
  41b8b3:	add    BYTE PTR [rcx],al
  41b8b5:	(bad)  
  41b8b6:	add    al,0x0
  41b8b8:	(bad)  
  41b8b9:	push   rdx
  41b8ba:	add    esi,DWORD PTR [rax]
  41b8bc:	add    ah,BYTE PTR [rax+0x1]
  41b8bf:	jo     0x41b8da
  41b8c1:	(bad)  
  41b8c2:	add    eax,DWORD PTR [rax]
  41b8c4:	(bad)  
  41b8c5:	(bad)  
  41b8c7:	xor    BYTE PTR [rcx],al
  41b8c9:	(bad)  
  41b8ca:	add    BYTE PTR [rax],al
  41b8cc:	and    BYTE PTR [rax-0x10000],al
  41b8d2:	add    DWORD PTR [rsp+rcx*1],ecx
  41b8d5:	add    eax,0x5220000
  41b8da:	xor    DWORD PTR [rax],eax
  41b8dc:	rex.W (bad) 
  41b8de:	add    BYTE PTR [rax],al
  41b8e0:	add    DWORD PTR [rdi],eax
  41b8e2:	add    al,0x0
  41b8e4:	(bad)  
  41b8e5:	push   rdx
  41b8e6:	add    esi,DWORD PTR [rax]
  41b8e8:	add    ah,BYTE PTR [rax+0x1]
  41b8eb:	jo     0x41b8ee
  41b8ed:	(bad)  
  41b8ee:	add    eax,DWORD PTR [rax]
  41b8f0:	(bad)  
  41b8f1:	(bad)  
  41b8f3:	xor    BYTE PTR [rcx],al
  41b8f5:	(bad)  
  41b8f6:	add    BYTE PTR [rax],al
  41b8f8:	add    DWORD PTR [rdx],ecx
  41b8fa:	(bad)  
  41b8fb:	add    BYTE PTR [rdx],cl
  41b8fd:	xor    al,BYTE PTR [rsi]
  41b8ff:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1bd65
  41b905:	push   rax
  41b906:	add    al,al
  41b908:	add    DWORD PTR [rdx],ecx
  41b90a:	(bad)  
  41b90b:	add    BYTE PTR [rdx],cl
  41b90d:	push   rdx
  41b90e:	(bad)  
  41b90f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1bd75
  41b915:	push   rax
  41b916:	add    al,al
  41b918:	add    DWORD PTR [rdx],ecx
  41b91a:	(bad)  
  41b91b:	add    BYTE PTR [rdx],cl
  41b91d:	push   rdx
  41b91e:	(bad)  
  41b91f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1bd85
  41b925:	push   rax
  41b926:	add    al,al
  41b928:	add    DWORD PTR [rdx],ecx
  41b92a:	(bad)  
  41b92b:	add    BYTE PTR [rdx],cl
  41b92d:	push   rdx
  41b92e:	(bad)  
  41b92f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1bd95
  41b935:	push   rax
  41b936:	add    al,al
  41b938:	add    DWORD PTR [rax],edx
  41b93a:	or     DWORD PTR [rax],eax
  41b93c:	adc    BYTE PTR [rdx+0xc],al
  41b93f:	xor    BYTE PTR [rbx],cl
  41b941:	(bad)  
  41b942:	or     dh,BYTE PTR [rax+0x9]
  41b945:	push   rax
  41b946:	or     al,al
  41b948:	(bad)  
  41b949:	rol    BYTE PTR [rax+riz*8],1
  41b94c:	add    dh,al
  41b94e:	add    BYTE PTR [rax],al
  41b950:	add    DWORD PTR [rax],edx
  41b952:	or     DWORD PTR [rax],eax
  41b954:	adc    BYTE PTR [rdx+0xc],ah
  41b957:	xor    BYTE PTR [rbx],cl
  41b959:	(bad)  
  41b95a:	or     dh,BYTE PTR [rax+0x9]
  41b95d:	push   rax
  41b95e:	or     al,al
  41b960:	(bad)  
  41b961:	rol    BYTE PTR [rax+riz*8],1
  41b964:	add    dh,al
  41b966:	add    BYTE PTR [rax],al
  41b968:	sbb    DWORD PTR [rdi+rax*1],ecx
  41b96b:	add    BYTE PTR [rdx+rax*4],cl
  41b96e:	or     BYTE PTR [rax],dh
  41b970:	(bad)  
  41b971:	(bad)  
  41b972:	(bad)  
  41b973:	jo     0x41b97a
  41b975:	push   rax
  41b976:	add    al,0xc0
  41b978:	add    dl,al
  41b97a:	add    BYTE PTR [rax],al
  41b97c:	and    BYTE PTR [rax-0x64010000],al
  41b982:	and    eax,0x51a1901
  41b987:	add    BYTE PTR [rax],al
  41b989:	sub    eax,0x102cb05
  41b98e:	ds add eax,0xc603029e
  41b994:	add    al,BYTE PTR [rip+0xffffffffd80002cd]        # 0xffffffffd841bc67
  41b99a:	add    al,BYTE PTR [rsi]
  41b99c:	add    BYTE PTR [rax],al
  41b99e:	add    DWORD PTR [rax],eax
  41b9a0:	add    BYTE PTR [rbp+0x0],bh
  41b9a3:	add    BYTE PTR [rax],al
  41b9a5:	add    BYTE PTR [rax],al
  41b9a7:	add    BYTE PTR [rcx],al
  41b9a9:	adc    BYTE PTR [rcx],cl
  41b9ab:	add    BYTE PTR [rax],dl
  41b9ad:	movabs ds:0x5009700a600b300c,al
  41b9b6:	or     al,al
  41b9b8:	(bad)  
  41b9b9:	rol    BYTE PTR [rax+riz*8],1
  41b9bc:	add    dh,al
  41b9be:	add    BYTE PTR [rax],al
  41b9c0:	sbb    DWORD PTR [rsi],ecx
  41b9c2:	or     BYTE PTR [rax],al
  41b9c4:	(bad)  
  41b9c5:	jb     0x41b9d1
  41b9c7:	xor    BYTE PTR [rcx],cl
  41b9c9:	(bad)  
  41b9ca:	or     BYTE PTR [rax+0x7],dh
  41b9cd:	push   rax
  41b9ce:	(bad)  
  41b9cf:	rol    BYTE PTR [rax+rdx*8],0x2
  41b9d3:	loopne 0x41b9f5
  41b9d5:	add    BYTE PTR [rax],0x0
  41b9d8:	call   FWORD PTR [rbx+0x21190125]
  41b9de:	add    eax,0x53e0000
  41b9e3:	fld    DWORD PTR [rdx]
  41b9e5:	add    DWORD PTR [rdi+0x5],ecx
  41b9e8:	scas   al,BYTE PTR es:[rdi]
  41b9e9:	add    al,BYTE PTR [rbx]
  41b9eb:	(bad)  
  41b9ec:	add    al,BYTE PTR [rip+0xffffffffe60002db]        # 0xffffffffe641bccd
  41b9f2:	add    al,BYTE PTR [rsi]
  41b9f4:	add    BYTE PTR [rax],al
  41b9f6:	add    DWORD PTR [rax],eax
  41b9f8:	add    BYTE PTR [rbp+0x0],bh
  41b9fb:	add    BYTE PTR [rax],al
  41b9fd:	add    BYTE PTR [rax],al
  41b9ff:	add    BYTE PTR [rcx],al
  41ba01:	adc    BYTE PTR [rcx],cl
  41ba03:	add    BYTE PTR [rax],dl
  41ba05:	movabs ds:0x5009700a600b300c,al
  41ba0e:	or     al,al
  41ba10:	(bad)  
  41ba11:	rol    BYTE PTR [rax+riz*8],1
  41ba14:	add    dh,al
  41ba16:	add    BYTE PTR [rax],al
  41ba18:	sbb    DWORD PTR [rcx],ebx
  41ba1a:	or     al,BYTE PTR [rax]
  41ba1c:	sbb    DWORD PTR [rcx],eax
  41ba1e:	cmp    eax,DWORD PTR [rdx]
  41ba20:	adc    DWORD PTR [rax],esi
  41ba22:	adc    BYTE PTR [rax+0xf],ah
  41ba25:	jo     0x41ba35
  41ba27:	push   rax
  41ba28:	or     eax,0x4d00bc0
  41ba2d:	loopne 0x41ba31
  41ba2f:	lock and BYTE PTR [rax-0x64010000],al
  41ba36:	int3   
  41ba37:	adc    eax,0x3015c201
  41ba3c:	adc    DWORD PTR [rax],eax
  41ba3e:	add    BYTE PTR [rbp+0x5],dl
  41ba41:	mov    edi,0xd90001e9
  41ba46:	add    DWORD PTR [rip+0x287cc],eax        # 0x444218
  41ba4c:	sti    
  41ba4d:	add    DWORD PTR [rip+0x287bc],eax        # 0x44420f
  41ba53:	popf   
  41ba54:	add    al,BYTE PTR [rip+0x287ac]        # 0x444206
  41ba5a:	mov    edi,0x879c0502
  41ba5f:	add    al,BYTE PTR [rax]
  41ba61:	fiadd  WORD PTR [rdx]
  41ba63:	add    eax,0x296ef
  41ba68:	std    
  41ba69:	add    al,BYTE PTR [rip+0x280c4]        # 0x443b33
  41ba6f:	lahf   
  41ba70:	add    eax,DWORD PTR [rip+0x280b4]        # 0x443b2a
  41ba76:	mov    esi,0xe9cf0503
  41ba7b:	add    DWORD PTR [rax],eax
  41ba7d:	lock add eax,DWORD PTR [rip+0x281fb]        # 0x443c7f
  41ba84:	clc    
  41ba85:	add    eax,DWORD PTR [rip+0x281d2]        # 0x443c5d
  41ba8b:	mov    ch,0x4
  41ba8d:	add    eax,0x281fb
  41ba92:	out    dx,al
  41ba93:	add    eax,0x281cd0f
  41ba98:	add    BYTE PTR [rsi-0x7e47fafa],dl
  41ba9e:	add    al,BYTE PTR [rcx]
  41baa0:	(bad)  
  41baa1:	(bad)  
  41baa2:	add    eax,0x281cd
  41baa7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41baa8:	(bad)  
  41baa9:	add    eax,0x281b6
  41baae:	mov    ecx,0x81cd0507
  41bab3:	add    al,BYTE PTR [rax]
  41bab5:	ror    BYTE PTR [rax],0x5
  41bab8:	movabs ds:0xe7910508fa0001e8,al
  41bac1:	add    DWORD PTR [rax],eax
  41bac3:	mov    bh,0x9
  41bac5:	add    eax,0x1e8d6
  41baca:	ret    0xf0a
  41bacd:	int    0x81
  41bacf:	add    al,BYTE PTR [rax]
  41bad1:	(bad)  
  41bad2:	or     al,BYTE PTR [rip+0x10297cc]        # 0x14452a4
  41bad8:	cwde   
  41bad9:	or     eax,DWORD PTR [rip+0x297f6]        # 0x4452d5
  41badf:	ror    BYTE PTR [rbx],cl
  41bae1:	add    eax,0x28fff
  41bae6:	(bad)  
  41bae7:	or     al,0x5
  41bae9:	call   QWORD PTR [rsi+0xd860002]
  41baef:	bswap  ebp
  41baf1:	add    DWORD PTR [rdx],0x50dae00
  41baf7:	fsubrp st(6),st
  41baf9:	add    DWORD PTR [rcx],eax
  41bafb:	(bad)  
  41bafc:	(bad)  
  41bafd:	add    eax,0x280d4
  41bb02:	mov    cl,0xf
  41bb04:	add    eax,0x281b6
  41bb09:	(bad)  
  41bb0a:	syscall 
  41bb0c:	inc    BYTE PTR [rdx+0xfd90002]
  41bb12:	and    DWORD PTR [rsi-0x52fffd7d],eax
  41bb18:	adc    BYTE PTR [rip+0x283a2],al        # 0x443ec0
  41bb1e:	mov    edi,0x83aa2210
  41bb23:	add    al,BYTE PTR [rax]
  41bb25:	std    
  41bb26:	adc    BYTE PTR [rip+0x283b2],al        # 0x443ede
  41bb2c:	sti    
  41bb2d:	adc    al,BYTE PTR [rip+0x1d8bd]        # 0x4393f0
  41bb33:	in     al,dx
  41bb34:	adc    al,0x5
  41bb36:	mov    ecx,DWORD PTR [rax+0x16e90002]
  41bb3c:	add    eax,0x28893
  41bb41:	mov    edi,0x83fb0518
  41bb46:	add    al,BYTE PTR [rax]
  41bb48:	(bad)  
  41bb49:	sbb    BYTE PTR [rip+0x284bf],al        # 0x44400e
  41bb4f:	in     al,0x18
  41bb51:	and    al,0xd8
  41bb53:	test   BYTE PTR [rdx],al
  41bb55:	add    BYTE PTR [rax-0x7b25dbe7],ah
  41bb5b:	add    al,BYTE PTR [rax]
  41bb5d:	(bad)  
  41bb5e:	sbb    DWORD PTR [rbx+rsi*8],esp
  41bb61:	test   BYTE PTR [rdx],al
  41bb63:	add    BYTE PTR [rax-0x7a73dbe6],dl
  41bb69:	add    al,BYTE PTR [rax]
  41bb6b:	(bad)  
  41bb6c:	sbb    ah,BYTE PTR [riz*4-0x7ffffd7b]
  41bb73:	sbb    esp,DWORD PTR [rsi+rdi*4]
  41bb76:	test   DWORD PTR [rdx],eax
  41bb78:	add    BYTE PTR [rbx+rbx*1+0x285d724],dh
  41bb7f:	add    al,dh
  41bb81:	sbb    esp,DWORD PTR [rax+rsi*8]
  41bb84:	test   DWORD PTR [rdx],eax
  41bb86:	add    BYTE PTR [rsp+rbx*1+0x2868924],ah
  41bb8d:	add    al,ah
  41bb8f:	sbb    al,0x24
  41bb91:	movabs ds:0x86bb211dc0000286,al
  41bb9a:	add    al,BYTE PTR [rax]
  41bb9c:	mov    esi,0x86d40622
  41bba1:	add    al,BYTE PTR [rax]
  41bba3:	xlat   BYTE PTR ds:[rbx]
  41bba4:	and    eax,DWORD PTR [rip+0x286dc]        # 0x444286
  41bbaa:	and    DWORD PTR [rax*1+0x28783],0xffffff93
  41bbb2:	and    al,0x38
  41bbb4:	fadd   QWORD PTR [rdi+0x25860002]
  41bbba:	add    eax,0x1bda8
  41bbbf:	xchg   ecx,eax
  41bbc0:	and    eax,0x287ed05
  41bbc5:	add    cl,dl
  41bbc7:	and    eax,0x1bda859
  41bbcc:	add    bh,cl
  41bbce:	es add eax,0x1b9f3
  41bbd4:	in     al,0x26
  41bbd6:	mov    esi,0x1bd8401
  41bbdb:	add    BYTE PTR [rbx-0x4257f0d7],dl
  41bbe1:	add    DWORD PTR [rax],eax
  41bbe3:	fsubr  DWORD PTR [rax*1+0x281b6]
  41bbea:	jmp    0x41bc18
  41bbec:	add    eax,0x1dac6
  41bbf1:	sub    BYTE PTR [rip+0x1eb8a21],0x0        # 0x22d4619
  41bbf8:	(bad)  
  41bbf9:	sub    eax,0x1eafa05
  41bbfe:	add    al,ch
  41bc00:	sub    eax,0x1eaea22
  41bc05:	add    BYTE PTR [rdi-0x151dfad2],ah
  41bc0b:	add    DWORD PTR [rax],eax
  41bc0d:	mov    dh,0x2e
  41bc0f:	sub    DWORD PTR [rsi-0x16fffe15],esi
  41bc15:	sub    DWORD PTR cs:[rsi-0x63fffe15],ebp
  41bc1c:	(bad)  
  41bc1d:	xor    DWORD PTR [rsi-0x31fffe15],edi
  41bc23:	xor    DWORD PTR [rip+0x1dfbe],eax        # 0x439be7
  41bc29:	jrcxz  0x41bc5c
  41bc2b:	add    eax,0x1dfbc
  41bc30:	lock xor DWORD PTR [rsp+rsi*4],esp
  41bc34:	fild   WORD PTR [rcx]
  41bc36:	add    BYTE PTR [rdx+rsi*1+0x1dfac24],ch
  41bc3d:	add    al,ah
  41bc3f:	xor    ah,BYTE PTR [rsp+riz*4]
  41bc42:	fild   WORD PTR [rcx]
  41bc44:	add    BYTE PTR [rbx+rsi*1+0x1df9c24],bl
  41bc4b:	add    al,dl
  41bc4d:	xor    esp,DWORD PTR [rsp+rdx*4]
  41bc50:	fild   WORD PTR [rcx]
  41bc52:	add    BYTE PTR [rsp+rsi*1+0x1df8c24],cl
  41bc59:	add    al,al
  41bc5b:	xor    al,0x24
  41bc5d:	test   bh,bl
  41bc5f:	add    DWORD PTR [rax],eax
  41bc61:	cld    
  41bc62:	xor    al,0x24
  41bc64:	cld    
  41bc65:	fiadd  WORD PTR [rcx]
  41bc67:	add    BYTE PTR [rax-0x210bdbcb],dh
  41bc6d:	add    DWORD PTR [rax],eax
  41bc6f:	in     al,dx
  41bc70:	xor    eax,0x1deec24
  41bc75:	add    ah,cl
  41bc77:	and    DWORD PTR ss:[rsp+rbx*8+0x3bd20001],esp
  41bc7f:	(bad)  
  41bc80:	pushf  
  41bc81:	fadd   QWORD PTR [rcx]
  41bc83:	add    bl,ch
  41bc85:	cmp    al,0x5
  41bc87:	xchg   edi,eax
  41bc88:	fadd   QWORD PTR [rcx]
  41bc8a:	add    BYTE PTR [rdi-0x236afac3],dl
  41bc90:	add    DWORD PTR [rax],eax
  41bc92:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41bc93:	cmp    eax,0x1dbcb38
  41bc98:	add    BYTE PTR [rsi-0x3444fac2],dl
  41bc9e:	add    DWORD PTR [rax],eax
  41bca0:	movabs eax,ds:0x3ee30001daf4053e
  41bca9:	pop    rcx
  41bcaa:	mov    ebx,0xe70001cb
  41bcaf:	(bad)  
  41bcb0:	add    eax,0x1cab5
  41bcb5:	cld    
  41bcb6:	(bad)  
  41bcb7:	mov    esi,0x1cbef01
  41bcbc:	add    BYTE PTR [rdx+rax*2+0x1cbbb0f],ah
  41bcc3:	add    BYTE PTR [rbx+rcx*2+0x1e6d605],al
  41bcca:	add    BYTE PTR [rbx+rcx*2+0x1e6b805],bh
  41bcd1:	add    BYTE PTR [rcx-0x172efab4],bl
  41bcd7:	add    DWORD PTR [rax],eax
  41bcd9:	ror    DWORD PTR [rbp+rax*1-0x4d],1
  41bcdd:	call   0x4de5bce3
  41bce2:	cs int 0x81
  41bce5:	add    al,BYTE PTR [rax]
  41bce7:	fmul   QWORD PTR [rbp+0x14]
  41bcea:	cwde   
  41bceb:	add    DWORD PTR [rdx],0x54ea100
  41bcf1:	int    0x81
  41bcf3:	add    al,BYTE PTR [rax]
  41bcf5:	mov    al,0x4e
  41bcf7:	adc    al,0xd8
  41bcf9:	add    DWORD PTR [rdx],0x0
  41bcfc:	out    dx,eax
  41bcfd:	rex.WRX add rax,0x281cd
  41bd03:	dec    BYTE PTR [rsi+0x14]
  41bd06:	fadd   QWORD PTR [rax+0x4fc30002]
  41bd0c:	add    eax,0x281cd
  41bd11:	ror    BYTE PTR [rdi+0x14],cl
  41bd14:	mov    edx,0x91000283
  41bd19:	push   rax
  41bd1a:	add    eax,0x281cd
  41bd1f:	movabs al,ds:0x50e90001e6f31450
  41bd28:	add    eax,0x281cd
  41bd2d:	clc    
  41bd2e:	push   rax
  41bd2f:	adc    al,0xc4
  41bd31:	(bad)  
  41bd32:	add    DWORD PTR [rax],eax
  41bd34:	lock push rcx
  41bd36:	sbb    ch,cl
  41bd38:	add    DWORD PTR [rdx],0x5529d00
  41bd3e:	in     eax,dx
  41bd3f:	call   0x52eebd45
  41bd44:	add    eax,0x280fa
  41bd49:	mov    ecx,0x81cd1854
  41bd4e:	add    al,BYTE PTR [rax]
  41bd50:	jrcxz  0x41bda6
  41bd52:	and    al,0xe1
  41bd54:	xchg   edi,eax
  41bd55:	add    al,BYTE PTR [rax]
  41bd57:	cwde   
  41bd58:	push   rbp
  41bd59:	add    eax,0x1e98b
  41bd5e:	mov    DWORD PTR [rdi+0x77],edx
  41bd61:	mov    dh,0x81
  41bd63:	add    al,BYTE PTR [rax]
  41bd65:	lahf   
  41bd66:	pop    rax
  41bd67:	add    eax,0x283f6
  41bd6c:	scas   al,BYTE PTR es:[rdi]
  41bd6d:	pop    rax
  41bd6e:	(bad)  
  41bd6f:	add    DWORD PTR [rdx+0x58f20002],0x5
  41bd76:	mov    dh,0x81
  41bd78:	add    al,BYTE PTR [rax]
  41bd7a:	xchg   ecx,eax
  41bd7b:	pop    rcx
  41bd7c:	add    eax,0x282a6
  41bd81:	enter  0x2659,0x84
  41bd85:	mov    ebp,0x5a8f0001
  41bd8a:	fild   WORD PTR [rcx]
  41bd8c:	test   al,0xbd
  41bd8e:	add    DWORD PTR [rax],eax
  41bd90:	nop
  41bd91:	pop    rsp
  41bd92:	add    eax,0x286bb
  41bd97:	fistp  DWORD PTR [rbp+rax*1-0x6d]
  41bd9b:	mov    BYTE PTR [rdx],al
  41bd9d:	add    BYTE PTR [rsi-0x7774faa3],ah
  41bda3:	add    al,BYTE PTR [rax]
  41bda5:	neg    BYTE PTR [rbp+0x5]
  41bda8:	mov    ebp,0xb90001d8
  41bdad:	pop    rsi
  41bdae:	add    eax,0x283fb
  41bdb3:	in     eax,dx
  41bdb4:	fs add eax,0x287dc
  41bdba:	mov    WORD PTR [rbp+0x5],fs
  41bdbd:	test   al,0xbd
  41bdbf:	add    DWORD PTR [rax],eax
  41bdc1:	mov    al,0x65
  41bdc3:	add    eax,0x2889b
  41bdc8:	loop   0x41be2f
  41bdca:	add    eax,0x1eaa7
  41bdcf:	cwde   
  41bdd0:	add    ax,0x8aeb
  41bdd4:	add    al,BYTE PTR [rax]
  41bdd6:	lahf   
  41bdd7:	push   0x1d0f105
  41bddc:	add    BYTE PTR [rax+rbp*2+0x1d0ef05],dh
  41bde3:	add    cl,al
  41bde5:	push   0x1d0cb05
  41bdea:	add    BYTE PTR [rax-0x2f0efa97],al
  41bdf0:	add    DWORD PTR [rax],eax
  41bdf2:	lea    ebp,[rcx+0x5]
  41bdf5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41bdf6:	rol    BYTE PTR [rcx],1
  41bdf8:	add    bh,cl
  41bdfa:	imul   eax,DWORD PTR [rip+0x1d0f1],0xa92769de        # 0x438ef5
  41be04:	(bad)  
  41be05:	add    DWORD PTR [rax],eax
  41be07:	(bad)
  41be0b:	(bad)  
  41be0c:	add    DWORD PTR [rax],eax
  41be0e:	shr    BYTE PTR [rdx+0x18],0x89
  41be12:	(bad)  
  41be13:	add    DWORD PTR [rax],eax
  41be15:	call   0xffffffffd626c384
  41be1a:	add    DWORD PTR [rax],eax
  41be1c:	repz push 0x24
  41be1f:	(bad)  
  41be20:	(bad)  
  41be21:	add    DWORD PTR [rax],eax
  41be23:	scas   eax,DWORD PTR es:[rdi]
  41be24:	imul   esp,DWORD PTR [rax*8-0x1efffe2b],0x6b
  41be2c:	and    al,0xb5
  41be2e:	(bad)  
  41be2f:	add    DWORD PTR [rax],eax
  41be31:	popf   
  41be32:	ins    BYTE PTR es:[rdi],dx
  41be33:	and    al,0xa5
  41be35:	(bad)  
  41be36:	add    DWORD PTR [rax],eax
  41be38:	shr    DWORD PTR [rsp-0x69],1
  41be3c:	rol    BYTE PTR [rcx],1
  41be3e:	add    BYTE PTR [rbp-0x2f78db93],cl
  41be44:	add    DWORD PTR [rax],eax
  41be46:	shr    DWORD PTR [rbp+0x24],0xf7
  41be4a:	iret   
  41be4b:	add    DWORD PTR [rax],eax
  41be4d:	std    
  41be4e:	ins    DWORD PTR es:[rdi],dx
  41be4f:	and    al,0xe7
  41be51:	iret   
  41be52:	add    DWORD PTR [rax],eax
  41be54:	mov    cl,0x6e
  41be56:	and    al,0xd7
  41be58:	iret   
  41be59:	add    DWORD PTR [rax],eax
  41be5b:	in     eax,dx
  41be5c:	outs   dx,BYTE PTR ds:[rsi]
  41be5d:	and    al,0xc7
  41be5f:	iret   
  41be60:	add    DWORD PTR [rax],eax
  41be62:	movabs eax,ds:0x6fdd0001cfb7246f
  41be6b:	and    al,0xbf
  41be6d:	int3   
  41be6e:	add    DWORD PTR [rax],eax
  41be70:	xchg   ecx,eax
  41be71:	jo     0x41be97
  41be73:	sub    edx,0x1
  41be76:	add    al,bh
  41be78:	je     0x41be7f
  41be7a:	fucomip st,st(1)
  41be7c:	add    DWORD PTR [rax],eax
  41be7e:	mov    edx,0x81b60576
  41be83:	add    al,BYTE PTR [rax]
  41be85:	(bad)  
  41be86:	jbe    0x41be8d
  41be88:	dec    DWORD PTR [rax+0x76db0002]
  41be8e:	add    eax,0x288d1
  41be93:	(bad)  
  41be94:	jbe    0x41be9b
  41be96:	mov    ch,0x88
  41be98:	add    al,BYTE PTR [rax]
  41be9a:	stos   DWORD PTR es:[rdi],eax
  41be9b:	ja     0x41bea2
  41be9d:	ror    DWORD PTR [rax+0x77e60002],1
  41bea3:	add    eax,0x1d0f1
  41bea8:	cli    
  41bea9:	ja     0x41be8f
  41beab:	add    ebp,ecx
  41bead:	add    DWORD PTR [rdx],0xd7ab800
  41beb3:	mov    dh,0x81
  41beb5:	add    al,BYTE PTR [rax]
  41beb7:	loope  0x41bf34
  41beb9:	and    al,0xb9
  41bebb:	(bad)  
  41bebc:	add    DWORD PTR [rax],eax
  41bebe:	popf   
  41bebf:	jl     0x41bee5
  41bec1:	xchg   ebp,eax
  41bec2:	(bad)  
  41bec3:	add    DWORD PTR [rax],eax
  41bec5:	clc    
  41bec6:	jl     0x41beec
  41bec8:	loope  0x41be9b
  41beca:	add    DWORD PTR [rax],eax
  41becc:	in     al,0x80
  41bece:	add    DWORD PTR [rip+0x1d19d],eax        # 0x439071
  41bed4:	fld    QWORD PTR [rcx-0x7e49faff]
  41beda:	add    al,BYTE PTR [rax]
  41bedc:	stc    
  41bedd:	add    DWORD PTR [rcx],0x1e6b305
  41bee3:	add    BYTE PTR [rax-0x68fafe7e],cl
  41bee9:	out    0x1,al
  41beeb:	add    BYTE PTR [rbx-0x4cfafe7e],bh
  41bef1:	out    0x1,al
  41bef3:	add    ah,cl
  41bef5:	(bad)  
  41bef6:	add    DWORD PTR [rip+0x1e692],eax        # 0x43a58e
  41befc:	mov    al,BYTE PTR [rbx-0x1972faff]
  41bf02:	add    DWORD PTR [rax],eax
  41bf04:	lahf   
  41bf05:	add    DWORD PTR [rcx],0x5
  41bf08:	mov    esp,esi
  41bf0a:	add    DWORD PTR [rax],eax
  41bf0c:	lods   al,BYTE PTR ds:[rsi]
  41bf0d:	add    DWORD PTR [rcx],0x5
  41bf10:	out    0xe5,eax
  41bf12:	add    DWORD PTR [rax],eax
  41bf14:	fadd   QWORD PTR [rbx-0x1972faff]
  41bf1a:	add    DWORD PTR [rax],eax
  41bf1c:	jmp    0xffffffffc346c0a4
  41bf21:	in     eax,0x1
  41bf23:	add    BYTE PTR [rbx-0x72fafe7c],ah
  41bf29:	out    0x1,al
  41bf2b:	add    BYTE PTR [rax-0x4cfafe7c],bh
  41bf31:	in     eax,0x1
  41bf33:	add    bh,dl
  41bf35:	test   BYTE PTR [rcx],al
  41bf37:	add    eax,0x1e5a3
  41bf3c:	out    0x84,al
  41bf3e:	add    DWORD PTR [rdi],esp
  41bf40:	xchg   ebx,eax
  41bf41:	in     eax,0x1
  41bf43:	add    BYTE PTR [rdi-0x7cd6fe7b],dl
  41bf49:	in     eax,0x1
  41bf4b:	add    dl,cl
  41bf4d:	test   DWORD PTR [rcx],eax
  41bf4f:	(bad)  
  41bf50:	repz in al,0x1
  41bf53:	add    bl,bh
  41bf55:	test   DWORD PTR [rcx],eax
  41bf57:	sbb    bl,ah
  41bf59:	in     al,0x1
  41bf5b:	add    BYTE PTR [rbx-0x40fafe7a],ah
  41bf61:	in     al,0x1
  41bf63:	add    BYTE PTR [rsi-0x50dbfe7a],ch
  41bf69:	in     al,0x1
  41bf6b:	add    dl,ch
  41bf6d:	xchg   BYTE PTR [rcx],al
  41bf6f:	and    al,0x9f
  41bf71:	in     al,0x1
  41bf73:	add    BYTE PTR [rsi-0x70dbfe79],bl
  41bf79:	in     al,0x1
  41bf7b:	add    dl,bl
  41bf7d:	xchg   DWORD PTR [rcx],eax
  41bf7f:	and    al,0xff
  41bf81:	jrcxz  0x41bf84
  41bf83:	add    BYTE PTR [rax+rcx*4-0x1c10dbff],cl
  41bf8a:	add    DWORD PTR [rax],eax
  41bf8c:	enter  0x188,0x24
  41bf90:	test   eax,0xfc0001d7
  41bf95:	mov    BYTE PTR [rcx],al
  41bf97:	and    al,0x99
  41bf99:	xlat   BYTE PTR ds:[rbx]
  41bf9a:	add    DWORD PTR [rax],eax
  41bf9c:	mov    eax,0x89240189
  41bfa1:	xlat   BYTE PTR ds:[rbx]
  41bfa2:	add    DWORD PTR [rax],eax
  41bfa4:	in     al,dx
  41bfa5:	mov    DWORD PTR [rcx],eax
  41bfa7:	and    al,0xf9
  41bfa9:	(bad)  
  41bfaa:	add    DWORD PTR [rax],eax
  41bfac:	test   al,0x8a
  41bfae:	add    DWORD PTR [rcx+rbp*8],esp
  41bfb1:	(bad)  
  41bfb2:	add    DWORD PTR [rax],eax
  41bfb4:	fmul   QWORD PTR [rdx-0x2926dbff]
  41bfba:	add    DWORD PTR [rax],eax
  41bfbc:	cwde   
  41bfbd:	mov    eax,DWORD PTR [rcx]
  41bfbf:	and    al,0xc9
  41bfc1:	(bad)  
  41bfc2:	add    DWORD PTR [rax],eax
  41bfc4:	out    dx,eax
  41bfc5:	mov    eax,DWORD PTR [rcx]
  41bfc7:	add    eax,0x1d6b9
  41bfcc:	(bad)  
  41bfcd:	mov    WORD PTR [rcx],es
  41bfcf:	add    eax,0x281b6
  41bfd4:	stos   BYTE PTR es:[rdi],al
  41bfd5:	mov    WORD PTR [rcx],es
  41bfd7:	add    eax,0x1d181
  41bfdc:	mov    ch,0x8c
  41bfde:	add    DWORD PTR [rip+0x28984],eax        # 0x444968
  41bfe4:	sti    
  41bfe5:	mov    WORD PTR [rcx],es
  41bfe7:	add    eax,0x1d1e1
  41bfec:	lahf   
  41bfed:	mov    es,WORD PTR [rcx]
  41bfef:	and    al,0x8f
  41bff1:	jrcxz  0x41bff4
  41bff3:	add    bl,bl
  41bff5:	mov    es,WORD PTR [rcx]
  41bff7:	and    al,0xff
  41bff9:	loop   0x41bffc
  41bffb:	add    BYTE PTR [rsi-0x34dbfe71],dh
  41c001:	fild   WORD PTR [rcx]
  41c003:	add    BYTE PTR [rcx-0x39fafe6d],dl
  41c009:	fild   WORD PTR [rcx]
  41c00b:	add    BYTE PTR [rdx-0x49fafe6c],cl
  41c011:	add    DWORD PTR [rdx],0x194a300
  41c017:	add    eax,0x1d7f5
  41c01c:	mov    dl,0x94
  41c01e:	add    DWORD PTR [rip+0x1d7d9],eax        # 0x4397fd
  41c024:	in     eax,0x94
  41c026:	add    DWORD PTR [rip+0x1d7f5],eax        # 0x439821
  41c02c:	not    BYTE PTR [rcx+rax*1+0x1d7c905]
  41c033:	add    BYTE PTR [rbx-0x46fafe6b],bh
  41c039:	xlat   BYTE PTR ds:[rbx]
  41c03a:	add    DWORD PTR [rax],eax
  41c03c:	enter  0x195,0x5
  41c040:	shl    bl,0x1
  41c043:	add    bl,bh
  41c045:	xchg   ebp,eax
  41c046:	add    DWORD PTR [rip+0x1d7b9],eax        # 0x439805
  41c04c:	mov    BYTE PTR [rsi-0xc63faff],dl
  41c052:	add    DWORD PTR [rax],eax
  41c054:	scas   eax,DWORD PTR es:[rdi]
  41c055:	xchg   esi,eax
  41c056:	add    DWORD PTR [rip+0x1d7b9],eax        # 0x439815
  41c05c:	(bad)  
  41c05d:	xchg   esi,eax
  41c05e:	add    DWORD PTR [rip+0x1f38c],eax        # 0x43b3f0
  41c064:	jrcxz  0x41bffc
  41c066:	add    DWORD PTR [rip+0x1f2fc],eax        # 0x43b368
  41c06c:	repnz xchg esi,eax
  41c06e:	add    DWORD PTR [rdi],esp
  41c070:	in     al,dx
  41c071:	repnz add DWORD PTR [rax],eax
  41c074:	movabs ds:0xd40001f2dc270197,eax
  41c07d:	xchg   edi,eax
  41c07e:	add    DWORD PTR [rdi],esp
  41c080:	int3   
  41c081:	repnz add DWORD PTR [rax],eax
  41c084:	test   DWORD PTR [rax-0xd43e7ff],ebx
  41c08a:	add    DWORD PTR [rax],eax
  41c08c:	lods   eax,DWORD PTR ds:[rsi]
  41c08d:	cwde   
  41c08e:	add    DWORD PTR [rip+0x1f298],eax        # 0x43b32c
  41c094:	mov    eax,0x88240198
  41c099:	repnz add DWORD PTR [rax],eax
  41c09c:	hlt    
  41c09d:	cwde   
  41c09e:	add    DWORD PTR [rax+rdi*8],esp
  41c0a1:	icebp  
  41c0a2:	add    DWORD PTR [rax],eax
  41c0a4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41c0a5:	cdq    
  41c0a6:	add    DWORD PTR [rax+rbp*8],esp
  41c0a9:	icebp  
  41c0aa:	add    DWORD PTR [rax],eax
  41c0ac:	loop   0x41c047
  41c0ae:	add    DWORD PTR [rax+rbx*8],esp
  41c0b1:	icebp  
  41c0b2:	add    DWORD PTR [rax],eax
  41c0b4:	xchg   esp,eax
  41c0b5:	(bad)  
  41c0b6:	add    DWORD PTR [rax+rcx*8],esp
  41c0b9:	icebp  
  41c0ba:	add    DWORD PTR [rax],eax
  41c0bc:	rcr    BYTE PTR [rdx-0xe47dbff],1
  41c0c2:	add    DWORD PTR [rax],eax
  41c0c4:	test   BYTE PTR [rbx-0xe57dbff],bl
  41c0ca:	add    DWORD PTR [rax],eax
  41c0cc:	rcr    BYTE PTR [rbx-0x1c20dbff],0x1
  41c0d3:	add    ah,dh
  41c0d5:	fwait
  41c0d6:	add    DWORD PTR [rdi+rcx*8],esp
  41c0d9:	jrcxz  0x41c0dc
  41c0db:	add    BYTE PTR [rax-0x40dbfe64],dh
  41c0e1:	jrcxz  0x41c0e4
  41c0e3:	add    ah,ah
  41c0e5:	pushf  
  41c0e6:	add    DWORD PTR [rdi+rbp*4],esp
  41c0e9:	jrcxz  0x41c0ec
  41c0eb:	add    BYTE PTR [rax-0x60dbfe63],ah
  41c0f1:	jrcxz  0x41c0f4
  41c0f3:	add    bh,dh
  41c0f5:	popf   
  41c0f6:	add    DWORD PTR [rip+0x1e38f],eax        # 0x43a48b
  41c0fc:	test   BYTE PTR [rsi-0x3410d9ff],bl
  41c102:	add    DWORD PTR [rax],eax
  41c104:	rcr    DWORD PTR [rsi-0x44fe14ff],0xcb
  41c10b:	add    DWORD PTR [rax],eax
  41c10d:	mov    edi,0xcb0501a0
  41c112:	fild   WORD PTR [rcx]
  41c114:	add    dh,dl
  41c116:	movabs al,ds:0xa0f00001e68d0501
  41c11f:	add    DWORD PTR [rip+0x1dca4],eax        # 0x439dc9
  41c125:	enter  0x1a1,0x5
  41c129:	mov    dh,0x81
  41c12b:	add    al,BYTE PTR [rax]
  41c12d:	xlat   BYTE PTR ds:[rbx]
  41c12e:	movabs eax,ds:0xa29a0001f5e40501
  41c137:	add    DWORD PTR [rip+0x281b6],eax        # 0x4442f3
  41c13d:	test   eax,0xc42901a2
  41c142:	cmc    
  41c143:	add    DWORD PTR [rax],eax
  41c145:	fsub   QWORD PTR [rdx-0xa43d8ff]
  41c14b:	add    DWORD PTR [rax],eax
  41c14d:	lea    esp,[rbx-0xa4bd8ff]
  41c153:	add    DWORD PTR [rax],eax
  41c155:	mov    esi,0xac2701a3
  41c15a:	cmc    
  41c15b:	add    DWORD PTR [rax],eax
  41c15d:	out    dx,eax
  41c15e:	movabs ds:0xa4a00001f5a42701,eax
  41c167:	add    DWORD PTR [rcx],ebp
  41c169:	pushf  
  41c16a:	cmc    
  41c16b:	add    DWORD PTR [rax],eax
  41c16d:	shl    DWORD PTR [rcx+rax*1+0x1f59427],cl
  41c174:	add    BYTE PTR [rbp+riz*4-0xa73e0ff],al
  41c17b:	add    DWORD PTR [rax],eax
  41c17d:	mov    ah,0xa5
  41c17f:	add    DWORD PTR [rip+0x1f584],eax        # 0x43b709
  41c185:	(bad)  
  41c186:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41c187:	add    DWORD PTR [rip+0x1f4fc],eax        # 0x43b689
  41c18d:	out    0xa5,al
  41c18f:	add    DWORD PTR [rip+0x1f4f4],eax        # 0x43b689
  41c195:	and    BYTE PTR [rsi-0xb13faff],0x1
  41c19c:	add    BYTE PTR [rsi-0x1bfafe5a],dl
  41c1a2:	hlt    
  41c1a3:	add    DWORD PTR [rax],eax
  41c1a5:	mov    al,0xa6
  41c1a7:	add    DWORD PTR [rip+0x1f4dc],eax        # 0x43b689
  41c1ad:	(bad)  
  41c1ae:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41c1af:	add    DWORD PTR [rip+0x1f4d4],eax        # 0x43b689
  41c1b5:	loopne 0x41c15d
  41c1b7:	add    DWORD PTR [rip+0x1f4cc],eax        # 0x43b689
  41c1bd:	clc    
  41c1be:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41c1bf:	add    DWORD PTR [rip+0x1f4c4],eax        # 0x43b689
  41c1c5:	xchg   edx,eax
  41c1c6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41c1c7:	add    DWORD PTR [rip+0x1f4bc],eax        # 0x43b689
  41c1cd:	lods   eax,DWORD PTR ds:[rsi]
  41c1ce:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41c1cf:	add    DWORD PTR [rip+0x1f4b4],eax        # 0x43b689
  41c1d5:	(bad)  
  41c1d6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41c1d7:	add    DWORD PTR [rip+0x1f4ac],eax        # 0x43b689
  41c1dd:	fbld   TBYTE PTR [rdi-0xb5bfaff]
  41c1e3:	add    DWORD PTR [rax],eax
  41c1e5:	stc    
  41c1e6:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41c1e7:	add    DWORD PTR [rip+0x1f49c],eax        # 0x43b689
  41c1ed:	xchg   esp,eax
  41c1ee:	test   al,0x1
  41c1f0:	add    eax,0x1f494
  41c1f5:	scas   al,BYTE PTR es:[rdi]
  41c1f6:	test   al,0x1
  41c1f8:	add    eax,0x1f48c
  41c1fd:	leave  
  41c1fe:	test   al,0x1
  41c200:	add    eax,0x1f484
  41c205:	jrcxz  0x41c1af
  41c207:	add    DWORD PTR [rip+0x1f3fc],eax        # 0x43b609
  41c20d:	stc    
  41c20e:	test   al,0x1
  41c210:	add    eax,0x1f3f4
  41c215:	xchg   ebx,eax
  41c216:	test   eax,0xf3ec0501
  41c21b:	add    DWORD PTR [rax],eax
  41c21d:	lods   eax,DWORD PTR ds:[rsi]
  41c21e:	test   eax,0xf3e40501
  41c223:	add    DWORD PTR [rax],eax
  41c225:	ret    
  41c226:	test   eax,0xf1a00501
  41c22b:	add    DWORD PTR [rax],eax
  41c22d:	(bad)  [rcx-0xe67faff]
  41c233:	add    DWORD PTR [rax],eax
  41c235:	in     eax,dx
  41c236:	test   eax,0xebd00501
  41c23b:	add    DWORD PTR [rax],eax
  41c23d:	sub    DWORD PTR [rdi-0x1434faff],0xafbc0001
  41c247:	add    DWORD PTR [rip+0x281b6],eax        # 0x444403
  41c24d:	(bad)  
  41c24e:	scas   eax,DWORD PTR es:[rdi]
  41c24f:	add    DWORD PTR [rip+0x1ebc6],eax        # 0x43ae1b
  41c255:	xchg   DWORD PTR [rax-0x1972faff],esi
  41c25b:	add    DWORD PTR [rax],eax
  41c25d:	xchg   esp,eax
  41c25e:	mov    al,0x1
  41c260:	add    eax,0x1da9d
  41c265:	test   DWORD PTR [rcx-0x2846faff],esi
  41c26b:	add    DWORD PTR [rax],eax
  41c26d:	leave  
  41c26e:	mov    cl,0x1
  41c270:	add    eax,0x1dfbe
  41c275:	in     eax,dx
  41c276:	mov    cl,0x1
  41c278:	add    eax,0x1d7b9
  41c27d:	cli    
  41c27e:	mov    cl,0x1
  41c280:	add    eax,0x1d899
  41c285:	mov    edx,0xbb0501b7
  41c28a:	retf   
  41c28b:	add    DWORD PTR [rax],eax
  41c28d:	(bad)  
  41c28e:	mov    bh,0x1
  41c290:	add    eax,0x1dbcb
  41c295:	(bad)  
  41c296:	mov    bh,0x1
  41c298:	ss mov dh,0x81
  41c29b:	add    al,BYTE PTR [rax]
  41c29d:	stos   DWORD PTR es:[rdi],eax
  41c29e:	mov    eax,0xd7fd0501
  41c2a3:	add    DWORD PTR [rax],eax
  41c2a5:	xlat   BYTE PTR ds:[rbx]
  41c2a6:	mov    eax,0xe6b32101
  41c2ab:	add    DWORD PTR [rax],eax
  41c2ad:	xchg   ecx,eax
  41c2ae:	mov    ecx,0xbd840501
  41c2b3:	add    DWORD PTR [rax],eax
  41c2b5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41c2b6:	mov    ecx,0xb9f30501
  41c2bb:	add    DWORD PTR [rax],eax
  41c2bd:	mov    edx,0xf52101b9
  41c2c2:	xlat   BYTE PTR ds:[rbx]
  41c2c3:	add    DWORD PTR [rax],eax
  41c2c5:	out    dx,al
  41c2c6:	mov    ecx,0xbda80501
  41c2cb:	add    DWORD PTR [rax],eax
  41c2cd:	(bad)  
  41c2ce:	mov    esp,0x501
  41c2d3:	mov    esi,0xf10501bd
  41c2d8:	rol    BYTE PTR [rcx],1
  41c2da:	add    bl,dl
  41c2dc:	mov    ebp,0x88fd0501
  41c2e1:	add    al,BYTE PTR [rax]
  41c2e3:	loopne 0x41c2a2
  41c2e5:	add    DWORD PTR [rip+0x288d9],eax        # 0x444bc4
  41c2eb:	mov    bl,0xbe
  41c2ed:	add    DWORD PTR [rcx],esp
  41c2ef:	ror    DWORD PTR [rax-0x3969fffe],1
  41c2f5:	add    DWORD PTR [rbx-0x33],esp
  41c2f8:	add    DWORD PTR [rdx],0x1c78e00
  41c2fe:	add    eax,0x1dbc6
  41c303:	fwait
  41c304:	mov    DWORD PTR [rcx],0x1db9205
  41c30a:	add    ah,bl
  41c30c:	mov    DWORD PTR [rcx],0x281cd45
  41c312:	add    BYTE PTR [rcx-0x29fafe38],ch
  41c318:	fiadd  DWORD PTR [rcx]
  41c31a:	add    dh,bl
  41c31c:	enter  0x4801,0xcd
  41c320:	add    DWORD PTR [rdx],0x1c9ae00
  41c326:	add    eax,0x1cc8b
  41c32b:	fmul   st(1),st
  41c32d:	add    DWORD PTR [rcx*8-0x65fffd7f],edi
  41c334:	retf   0x501
  41c337:	test   al,0xbd
  41c339:	add    DWORD PTR [rax],eax
  41c33b:	mov    al,0xca
  41c33d:	add    DWORD PTR [rip+0x1cab5],eax        # 0x438df8
  41c343:	mov    dh,0xcb
  41c345:	add    DWORD PTR [rip+0x1cbbb],eax        # 0x438f06
  41c34b:	(bad)  
  41c34c:	retf   
  41c34d:	add    DWORD PTR [rip+0x1cbef],eax        # 0x438f42
  41c353:	neg    eax
  41c355:	add    DWORD PTR [rip+0x281cd],eax        # 0x444528
  41c35b:	fld    DWORD PTR [rcx]
  41c35e:	add    eax,0x28c97
  41c363:	in     eax,dx
  41c364:	fld    DWORD PTR [rcx]
  41c366:	add    eax,0x281cd
  41c36b:	std    
  41c36c:	fld    DWORD PTR [rcx]
  41c36e:	add    eax,0x28b85
  41c373:	rcr    edx,0x1
  41c376:	add    eax,0x1cbbb
  41c37b:	out    dx,al
  41c37c:	out    0x1,al
  41c37e:	add    eax,0x1e895
  41c383:	(bad)  
  41c385:	add    DWORD PTR [rip+0x281b6],edi        # 0x444541
  41c38b:	movabs eax,ds:0xd2000294bf2701f6
  41c394:	test   BYTE PTR [rcx],0x27
  41c397:	scas   eax,DWORD PTR es:[rdi]
  41c398:	xchg   esp,eax
  41c399:	add    al,BYTE PTR [rax]
  41c39b:	xor    edi,0x1
  41c39e:	(bad)  
  41c39f:	lahf   
  41c3a0:	xchg   esp,eax
  41c3a1:	add    al,BYTE PTR [rax]
  41c3a3:	mov    ah,0xf7
  41c3a5:	add    DWORD PTR [rdi],esp
  41c3a7:	(bad)  
  41c3a8:	xchg   esp,eax
  41c3a9:	add    al,BYTE PTR [rax]
  41c3ab:	in     eax,0xf7
  41c3ad:	add    DWORD PTR [rdi],esp
  41c3af:	call   QWORD PTR [rbx-0x769fffe]
  41c3b5:	add    DWORD PTR [rdi],ebx
  41c3b7:	out    dx,eax
  41c3b8:	xchg   ebx,eax
  41c3b9:	add    al,BYTE PTR [rax]
  41c3bb:	xabort 0x1
  41c3be:	add    eax,0x293df
  41c3c3:	loopne 0x41c3bd
  41c3c5:	add    DWORD PTR [rip+0x293cf],eax        # 0x44579a
  41c3cb:	idiv   al
  41c3cd:	add    DWORD PTR [rip+0x293bf],eax        # 0x445792
  41c3d3:	nop
  41c3d4:	stc    
  41c3d5:	add    DWORD PTR [rip+0x293af],eax        # 0x44578a
  41c3db:	test   al,0xf9
  41c3dd:	add    DWORD PTR [rip+0x2939f],eax        # 0x445782
  41c3e3:	ret    0x1f9
  41c3e6:	add    eax,0x2938f
  41c3eb:	(bad)  
  41c3ed:	add    DWORD PTR [rip+0x292ff],eax        # 0x4456f2
  41c3f3:	idiv   ecx
  41c3f5:	add    DWORD PTR [rip+0x292ef],eax        # 0x4456ea
  41c3fb:	(bad)  
  41c3fc:	cli    
  41c3fd:	add    DWORD PTR [rip+0x292df],eax        # 0x4456e2
  41c403:	test   eax,0x8c0501fa
  41c408:	nop
  41c409:	add    al,BYTE PTR [rax]
  41c40b:	(bad)  
  41c40c:	cli    
  41c40d:	add    DWORD PTR [rip+0x296df],eax        # 0x445af2
  41c413:	fdivp  st(2),st
  41c415:	add    DWORD PTR [rip+0x296cf],eax        # 0x445aea
  41c41b:	stc    
  41c41c:	cli    
  41c41d:	add    DWORD PTR [rip+0x296bf],eax        # 0x445ae2
  41c423:	xchg   ebx,eax
  41c424:	sti    
  41c425:	add    DWORD PTR [rip+0x296af],eax        # 0x445ada
  41c42b:	test   eax,0x9f0501fb
  41c430:	xchg   esi,eax
  41c431:	add    al,BYTE PTR [rax]
  41c433:	ret    
  41c434:	sti    
  41c435:	add    DWORD PTR [rip+0x2968f],eax        # 0x445aca
  41c43b:	fdiv   st(3),st
  41c43d:	add    DWORD PTR [rip+0x295ff],eax        # 0x445a42
  41c443:	idiv   bl
  41c445:	add    DWORD PTR [rip+0x294cf],eax        # 0x44591a
  41c44b:	mov    esp,edi
  41c44d:	add    DWORD PTR [rip+0x297a8],eax        # 0x445bfb
  41c453:	xchg   esp,eax
  41c454:	add    BYTE PTR [rdx],0x5
  41c457:	mov    WORD PTR [rdi-0x7e37fffe],ss
  41c45d:	add    al,BYTE PTR [rip+0x281ee]        # 0x444651
  41c463:	mov    ch,0x89
  41c465:	add    al,BYTE PTR [rip+0x28aa2]        # 0x444f0d
  41c46b:	lods   eax,DWORD PTR ds:[rsi]
  41c46c:	mov    eax,DWORD PTR [rdx]
  41c46e:	add    eax,0x281cd
  41c473:	loope  0x41c400
  41c475:	add    al,BYTE PTR [rip+0x28e88]        # 0x445303
  41c47b:	retf   0x28c
  41c47e:	ins    DWORD PTR es:[rdi],dx
  41c47f:	int    0x81
  41c481:	add    al,BYTE PTR [rax]
  41c483:	(bad)  
  41c484:	lea    eax,[rdx]
  41c486:	add    eax,0x28ed5
  41c48b:	stos   BYTE PTR es:[rdi],al
  41c48c:	mov    es,WORD PTR [rdx]
  41c48e:	add    eax,0x28ef8
  41c493:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41c494:	pop    QWORD PTR [rdx]
  41c496:	rex.RXB int 0x81
  41c499:	add    al,BYTE PTR [rax]
  41c49b:	fcom   QWORD PTR [rdi-0x6816fafe]
  41c4a1:	add    al,BYTE PTR [rax]
  41c4a3:	mov    bl,BYTE PTR [rax-0x32fc61fe]
  41c4a9:	add    DWORD PTR [rdx],0x29bb200
  41c4af:	adc    al,0xa8
  41c4b1:	sahf   
  41c4b2:	add    al,BYTE PTR [rax]
  41c4b4:	hlt    
  41c4b5:	fwait
  41c4b6:	add    al,BYTE PTR [rip+0x281cd]        # 0x444689
  41c4bc:	sbb    DWORD PTR [rdx+rax*1+0x29e8a14],0x0
  41c4c4:	rcr    BYTE PTR [rdx+rax*1+0x281cd05],0x0
  41c4cc:	iret   
  41c4cd:	pushf  
  41c4ce:	add    dl,BYTE PTR [rsp+rbx*4]
  41c4d1:	popf   
  41c4d2:	add    al,BYTE PTR [rax]
  41c4d4:	xchg   BYTE PTR [rbp-0x32fd50fe],bl
  41c4da:	add    DWORD PTR [rdx],0x29fbd00
  41c4e0:	add    eax,0x2a0e2
  41c4e5:	repnz lahf 
  41c4e7:	add    cl,BYTE PTR [rdx-0x33]
  41c4ea:	add    DWORD PTR [rdx],0x2a0c400
  41c4f0:	add    eax,0x2a180
  41c4f5:	lods   al,BYTE PTR ds:[rsi]
  41c4f6:	movabs eax,ds:0x1000281cd2102
  41c4ff:	add    BYTE PTR [rax],al
  41c501:	add    BYTE PTR [rax],al
  41c503:	add    BYTE PTR [rcx],al
  41c505:	add    eax,0x52050002
  41c50a:	add    DWORD PTR [rax],esi
  41c50c:	add    DWORD PTR [rax],eax
  41c50e:	add    BYTE PTR [rax],al
  41c510:	add    DWORD PTR [rax],eax
  41c512:	add    BYTE PTR [rax],al
  41c514:	add    DWORD PTR [rax],eax
  41c516:	add    BYTE PTR [rax],al
  41c518:	add    DWORD PTR [rax],eax
  41c51a:	add    BYTE PTR [rax],al
  41c51c:	add    DWORD PTR [rax],eax
  41c51e:	add    BYTE PTR [rax],al
  41c520:	add    DWORD PTR [rax],eax
  41c522:	add    BYTE PTR [rax],al
  41c524:	add    DWORD PTR [rax],eax
  41c526:	add    BYTE PTR [rax],al
  41c528:	add    DWORD PTR [rax],eax
  41c52a:	add    BYTE PTR [rax],al
  41c52c:	add    DWORD PTR [rax],eax
  41c52e:	add    BYTE PTR [rax],al
  41c530:	add    DWORD PTR [rax],edx
  41c532:	or     DWORD PTR [rax],eax
  41c534:	adc    BYTE PTR [rdx+0xc],al
  41c537:	xor    BYTE PTR [rbx],cl
  41c539:	(bad)  
  41c53a:	or     dh,BYTE PTR [rax+0x9]
  41c53d:	push   rax
  41c53e:	or     al,al
  41c540:	(bad)  
  41c541:	rol    BYTE PTR [rax+riz*8],1
  41c544:	add    dh,al
  41c546:	add    BYTE PTR [rax],al
  41c548:	add    DWORD PTR [rax],eax
  41c54a:	add    BYTE PTR [rax],al
  41c54c:	add    DWORD PTR [rax],eax
  41c54e:	add    BYTE PTR [rax],al
  41c550:	add    DWORD PTR [rax],eax
  41c552:	add    BYTE PTR [rax],al
  41c554:	add    DWORD PTR [rax],eax
  41c556:	add    BYTE PTR [rax],al
  41c558:	add    DWORD PTR [rax],eax
  41c55a:	add    BYTE PTR [rax],al
  41c55c:	add    DWORD PTR [rax],eax
  41c55e:	add    BYTE PTR [rax],al
  41c560:	add    DWORD PTR [rax],eax
  41c562:	add    BYTE PTR [rax],al
  41c564:	add    DWORD PTR [rax],eax
  41c566:	add    BYTE PTR [rax],al
  41c568:	add    DWORD PTR [rax],eax
  41c56a:	add    BYTE PTR [rax],al
  41c56c:	add    DWORD PTR [rcx+rax*1],eax
  41c56f:	add    BYTE PTR [rdx+rax*2],al
  41c572:	add    BYTE PTR [rax],al
  41c574:	add    DWORD PTR [rax],eax
  41c576:	add    BYTE PTR [rax],al
  41c578:	add    DWORD PTR [rax],eax
  41c57a:	add    BYTE PTR [rax],al
  41c57c:	add    DWORD PTR [rax],eax
  41c57e:	add    BYTE PTR [rax],al
  41c580:	add    DWORD PTR [rax],eax
  41c582:	add    BYTE PTR [rax],al
  41c584:	add    DWORD PTR [rax],eax
  41c586:	add    BYTE PTR [rax],al
  41c588:	add    DWORD PTR [rax],eax
  41c58a:	add    BYTE PTR [rax],al
  41c58c:	add    DWORD PTR [rax],eax
  41c58e:	add    BYTE PTR [rax],al
  41c590:	add    DWORD PTR [rax],eax
  41c592:	add    BYTE PTR [rax],al
  41c594:	add    DWORD PTR [rax],eax
  41c596:	add    BYTE PTR [rax],al
  41c598:	add    DWORD PTR [rax],eax
  41c59a:	add    BYTE PTR [rax],al
  41c59c:	add    DWORD PTR [rax],eax
  41c59e:	add    BYTE PTR [rax],al
  41c5a0:	add    DWORD PTR [rax],eax
  41c5a2:	add    BYTE PTR [rax],al
  41c5a4:	add    DWORD PTR [rax],eax
  41c5a6:	add    BYTE PTR [rax],al
  41c5a8:	add    DWORD PTR [rax],eax
  41c5aa:	add    BYTE PTR [rax],al
  41c5ac:	add    DWORD PTR [rax],eax
  41c5ae:	add    BYTE PTR [rax],al
  41c5b0:	add    DWORD PTR [rax],eax
  41c5b2:	add    BYTE PTR [rax],al
  41c5b4:	add    DWORD PTR [rax],eax
  41c5b6:	add    BYTE PTR [rax],al
  41c5b8:	add    DWORD PTR [rax],eax
  41c5ba:	add    BYTE PTR [rax],al
  41c5bc:	add    DWORD PTR [rax],eax
  41c5be:	add    BYTE PTR [rax],al
  41c5c0:	add    DWORD PTR [rax],eax
  41c5c2:	add    BYTE PTR [rax],al
  41c5c4:	add    DWORD PTR [rax],eax
  41c5c6:	add    BYTE PTR [rax],al
  41c5c8:	add    DWORD PTR [rax],eax
  41c5ca:	add    BYTE PTR [rax],al
  41c5cc:	add    DWORD PTR [rax],eax
  41c5ce:	add    BYTE PTR [rax],al
  41c5d0:	add    DWORD PTR [rax],eax
  41c5d2:	add    BYTE PTR [rax],al
  41c5d4:	add    DWORD PTR [rax],eax
  41c5d6:	add    BYTE PTR [rax],al
  41c5d8:	add    DWORD PTR [rax],eax
  41c5da:	add    BYTE PTR [rax],al
  41c5dc:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246c5e4
  41c5e2:	add    DWORD PTR [rax],esi
  41c5e4:	add    DWORD PTR [rip+0x52050002],eax        # 0x5246c5ec
  41c5ea:	add    DWORD PTR [rax],esi
  41c5ec:	add    DWORD PTR [rsi],eax
  41c5ee:	add    eax,DWORD PTR [rax]
  41c5f0:	(bad)  
  41c5f1:	rex.X add sil,BYTE PTR [rax]
  41c5f4:	add    DWORD PTR [rax+0x0],esp
  41c5f7:	add    BYTE PTR [rcx],al
  41c5f9:	(bad)  
  41c5fa:	add    eax,DWORD PTR [rax]
  41c5fc:	(bad)  
  41c5fd:	rex.X add sil,BYTE PTR [rax]
  41c600:	add    DWORD PTR [rax+0x0],esp
  41c603:	add    BYTE PTR [rcx],al
  41c605:	add    eax,0x32050002
  41c60a:	add    DWORD PTR [rax],esi
  41c60c:	add    DWORD PTR [rdi+rax*1],ecx
  41c60f:	add    BYTE PTR [rdx+rax*2],cl
  41c612:	or     BYTE PTR [rax],dh
  41c614:	(bad)  
  41c615:	(bad)  
  41c616:	(bad)  
  41c617:	jo     0x41c61e
  41c619:	push   rax
  41c61a:	add    al,0xc0
  41c61c:	add    dl,al
  41c61e:	add    BYTE PTR [rax],al
  41c620:	add    DWORD PTR [rdi],eax
  41c622:	add    al,0x0
  41c624:	(bad)  
  41c625:	xor    al,BYTE PTR [rbx]
  41c627:	xor    BYTE PTR [rdx],al
  41c629:	(bad)  
  41c62a:	add    DWORD PTR [rax+0x1],esi
  41c62d:	(bad)  
  41c62e:	add    eax,DWORD PTR [rax]
  41c630:	(bad)  
  41c631:	rex.X add sil,BYTE PTR [rax]
  41c634:	add    DWORD PTR [rax+0x0],esp
  41c637:	add    BYTE PTR [rcx],al
  41c639:	add    al,0x1
  41c63b:	add    BYTE PTR [rdx+rax*2],al
  41c63e:	add    BYTE PTR [rax],al
  41c640:	add    DWORD PTR [rsi],eax
  41c642:	add    eax,DWORD PTR [rax]
  41c644:	(bad)  
  41c645:	rex.X add sil,BYTE PTR [rax]
  41c648:	add    DWORD PTR [rax+0x0],esp
  41c64b:	add    BYTE PTR [rcx],al
  41c64d:	adc    ecx,DWORD PTR [rdx]
  41c64f:	add    BYTE PTR [rbx],dl
  41c651:	add    DWORD PTR [rbx+0x0],ebx
  41c654:	or     al,0x30
  41c656:	or     esp,DWORD PTR [rax+0xa]
  41c659:	jo     0x41c664
  41c65b:	push   rax
  41c65c:	or     al,al
  41c65e:	(bad)  
  41c65f:	rol    BYTE PTR [rax+riz*8],1
  41c662:	add    dh,al
  41c664:	add    DWORD PTR [rsi],eax
  41c666:	add    eax,DWORD PTR [rax]
  41c668:	(bad)  
  41c669:	(bad)  
  41c66b:	xor    BYTE PTR [rcx],al
  41c66d:	(bad)  
  41c66e:	add    BYTE PTR [rax],al
  41c670:	add    DWORD PTR [rax],ecx
  41c672:	add    eax,0x4c20800
  41c677:	xor    BYTE PTR [rbx],al
  41c679:	(bad)  
  41c67a:	add    dh,BYTE PTR [rax+0x1]
  41c67d:	push   rax
  41c67e:	add    BYTE PTR [rax],al
  41c680:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246c688
  41c686:	add    DWORD PTR [rax],esi
  41c688:	add    DWORD PTR [rax],eax
  41c68a:	add    BYTE PTR [rax],al
  41c68c:	add    DWORD PTR [rcx+rax*1],eax
  41c68f:	add    BYTE PTR [rdx+rax*2],al
  41c692:	add    BYTE PTR [rax],al
  41c694:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246c69c
  41c69a:	add    DWORD PTR [rax],esi
  41c69c:	add    DWORD PTR [rip+0x52050002],eax        # 0x5246c6a4
  41c6a2:	add    DWORD PTR [rax],esi
  41c6a4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246c6ac
  41c6aa:	add    DWORD PTR [rax],esi
  41c6ac:	add    DWORD PTR [rsi],eax
  41c6ae:	add    eax,DWORD PTR [rax]
  41c6b0:	(bad)  
  41c6b1:	rex.X add sil,BYTE PTR [rax]
  41c6b4:	add    DWORD PTR [rax+0x0],esp
  41c6b7:	add    BYTE PTR [rcx],al
  41c6b9:	adc    DWORD PTR [rcx],ecx
  41c6bb:	add    BYTE PTR [rcx],dl
  41c6bd:	add    DWORD PTR [rsi],esp
  41c6bf:	add    BYTE PTR [rdx],cl
  41c6c1:	xor    BYTE PTR [rcx],cl
  41c6c3:	(bad)  
  41c6c4:	or     BYTE PTR [rax+0x7],dh
  41c6c7:	push   rax
  41c6c8:	(bad)  
  41c6c9:	rol    BYTE PTR [rax+rdx*8],0x2
  41c6cd:	loopne 0x41c6cf
  41c6cf:	add    BYTE PTR [rcx],al
  41c6d1:	(bad)  
  41c6d2:	add    eax,DWORD PTR [rax]
  41c6d4:	(bad)  
  41c6d5:	rex.X add sil,BYTE PTR [rax]
  41c6d8:	add    DWORD PTR [rax+0x0],esp
  41c6db:	add    BYTE PTR [rcx],al
  41c6dd:	add    al,0x1
  41c6df:	add    BYTE PTR [rdx+rax*2],al
  41c6e2:	add    BYTE PTR [rax],al
  41c6e4:	add    DWORD PTR [rdx],ecx
  41c6e6:	(bad)  
  41c6e7:	add    BYTE PTR [rdx],cl
  41c6e9:	mov    dl,0x6
  41c6eb:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1cb51
  41c6f1:	push   rax
  41c6f2:	add    al,al
  41c6f4:	add    DWORD PTR [rax],eax
  41c6f6:	add    BYTE PTR [rax],al
  41c6f8:	add    DWORD PTR [rax],eax
  41c6fa:	add    BYTE PTR [rax],al
  41c6fc:	add    DWORD PTR [rax],eax
  41c6fe:	add    BYTE PTR [rax],al
  41c700:	add    DWORD PTR [rcx+rax*1],eax
  41c703:	add    BYTE PTR [rdx+riz*2],al
  41c706:	add    BYTE PTR [rax],al
  41c708:	add    DWORD PTR [rcx+rax*1],eax
  41c70b:	add    BYTE PTR [rdx+rax*2],al
  41c70e:	add    BYTE PTR [rax],al
  41c710:	add    DWORD PTR [rax],eax
  41c712:	add    BYTE PTR [rax],al
  41c714:	add    DWORD PTR [rax],edx
  41c716:	or     DWORD PTR [rax],eax
  41c718:	adc    BYTE PTR [rdx+0xc],al
  41c71b:	xor    BYTE PTR [rbx],cl
  41c71d:	(bad)  
  41c71e:	or     dh,BYTE PTR [rax+0x9]
  41c721:	push   rax
  41c722:	or     al,al
  41c724:	(bad)  
  41c725:	rol    BYTE PTR [rax+riz*8],1
  41c728:	add    dh,al
  41c72a:	add    BYTE PTR [rax],al
  41c72c:	add    DWORD PTR [rax],eax
  41c72e:	add    BYTE PTR [rax],al
  41c730:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246c738
  41c736:	add    DWORD PTR [rax],esi
  41c738:	add    DWORD PTR [rip+0x52050002],eax        # 0x5246c740
  41c73e:	add    DWORD PTR [rax],esi
  41c740:	add    DWORD PTR [rcx+rax*1],eax
  41c743:	add    BYTE PTR [rdx+rax*2],al
  41c746:	add    BYTE PTR [rax],al
  41c748:	add    DWORD PTR [rcx+rax*1],eax
  41c74b:	add    BYTE PTR [rdx+rax*2],al
  41c74e:	add    BYTE PTR [rax],al
  41c750:	add    DWORD PTR [rsi],eax
  41c752:	add    eax,DWORD PTR [rax]
  41c754:	(bad)  
  41c755:	rex.X add sil,BYTE PTR [rax]
  41c758:	add    DWORD PTR [rax+0x0],esp
  41c75b:	add    BYTE PTR [rcx],al
  41c75d:	add    BYTE PTR [rax],al
  41c75f:	add    BYTE PTR [rcx],al
  41c761:	add    BYTE PTR [rax],al
  41c763:	add    BYTE PTR [rcx],al
  41c765:	add    BYTE PTR [rax],al
  41c767:	add    BYTE PTR [rcx],al
  41c769:	or     al,BYTE PTR [rsi]
  41c76b:	add    BYTE PTR [rdx],cl
  41c76d:	jb     0x41c775
  41c76f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1cbd5
  41c775:	push   rax
  41c776:	add    al,al
  41c778:	add    DWORD PTR [rdx],ecx
  41c77a:	add    eax,0x6d20a05
  41c77f:	add    eax,DWORD PTR [rbx]
  41c781:	xor    BYTE PTR [rdx],al
  41c783:	(bad)  
  41c784:	add    DWORD PTR [rax+0x0],edx
  41c787:	add    BYTE PTR [rcx],al
  41c789:	add    al,0x1
  41c78b:	add    BYTE PTR [rdx+rax*2],al
  41c78e:	add    BYTE PTR [rax],al
  41c790:	add    DWORD PTR [rsi],eax
  41c792:	add    eax,DWORD PTR [rax]
  41c794:	(bad)  
  41c795:	rex.X add sil,BYTE PTR [rax]
  41c798:	add    DWORD PTR [rax+0x0],esp
  41c79b:	add    BYTE PTR [rcx],al
  41c79d:	add    BYTE PTR [rax],al
  41c79f:	add    BYTE PTR [rcx],al
  41c7a1:	add    al,0x1
  41c7a3:	add    BYTE PTR [rdx+riz*4],al
  41c7a6:	add    BYTE PTR [rax],al
  41c7a8:	add    DWORD PTR [rax],eax
  41c7aa:	add    BYTE PTR [rax],al
  41c7ac:	add    DWORD PTR [rsi],edx
  41c7ae:	or     DWORD PTR [rax],eax
  41c7b0:	(bad)  
  41c7b1:	mov    BYTE PTR [rsi],al
  41c7b3:	add    BYTE PTR [rax],dl
  41c7b5:	js     0x41c7bc
  41c7b7:	add    BYTE PTR [rbx],cl
  41c7b9:	push   0xffffffffe2060004
  41c7be:	add    dh,BYTE PTR [rax]
  41c7c0:	add    DWORD PTR [rax+0x0],esp
  41c7c3:	add    BYTE PTR [rcx],al
  41c7c5:	add    BYTE PTR [rax],al
  41c7c7:	add    BYTE PTR [rcx],al
  41c7c9:	add    BYTE PTR [rax],al
  41c7cb:	add    BYTE PTR [rcx],al
  41c7cd:	add    BYTE PTR [rax],al
  41c7cf:	add    BYTE PTR [rcx],al
  41c7d1:	(bad)  
  41c7d2:	add    eax,DWORD PTR [rax]
  41c7d4:	(bad)  
  41c7d5:	(bad)  
  41c7d7:	xor    BYTE PTR [rcx],al
  41c7d9:	(bad)  
  41c7da:	add    BYTE PTR [rax],al
  41c7dc:	add    DWORD PTR [rdi+rax*1],ecx
  41c7df:	add    BYTE PTR [rdx+riz*4],cl
  41c7e2:	or     BYTE PTR [rax],dh
  41c7e4:	(bad)  
  41c7e5:	(bad)  
  41c7e6:	(bad)  
  41c7e7:	jo     0x41c7ee
  41c7e9:	push   rax
  41c7ea:	add    al,0xc0
  41c7ec:	add    dl,al
  41c7ee:	add    BYTE PTR [rax],al
  41c7f0:	add    DWORD PTR [rcx],edx
  41c7f2:	or     DWORD PTR [rip+0x30db211],eax        # 0x34f7a09
  41c7f8:	or     dh,BYTE PTR [rax]
  41c7fa:	or     DWORD PTR [rax+0x8],esp
  41c7fd:	jo     0x41c806
  41c7ff:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x221cbd6
  41c806:	add    BYTE PTR [rax],al
  41c808:	add    DWORD PTR [rcx+rax*1],eax
  41c80b:	add    BYTE PTR [rdx+rax*2],al
  41c80e:	add    BYTE PTR [rax],al
  41c810:	add    DWORD PTR [rdx],ecx
  41c812:	(bad)  
  41c813:	add    BYTE PTR [rdx],cl
  41c815:	xor    al,BYTE PTR [rsi]
  41c817:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1cc7d
  41c81d:	push   rax
  41c81e:	add    al,al
  41c820:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246c828
  41c826:	add    DWORD PTR [rax],esi
  41c828:	add    DWORD PTR [rax],ecx
  41c82a:	add    eax,0x4420800
  41c82f:	xor    BYTE PTR [rbx],al
  41c831:	(bad)  
  41c832:	add    dh,BYTE PTR [rax+0x1]
  41c835:	push   rax
  41c836:	add    BYTE PTR [rax],al
  41c838:	add    DWORD PTR [rdi],eax
  41c83a:	add    al,0x0
  41c83c:	(bad)  
  41c83d:	xor    al,BYTE PTR [rbx]
  41c83f:	xor    BYTE PTR [rdx],al
  41c841:	(bad)  
  41c842:	add    DWORD PTR [rax+0x1],esi
  41c845:	add    eax,0x32050002
  41c84a:	add    DWORD PTR [rax],esi
  41c84c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246c854
  41c852:	add    DWORD PTR [rax],esi
  41c854:	add    DWORD PTR [rax],eax
  41c856:	add    BYTE PTR [rax],al
  41c858:	add    DWORD PTR [rax],eax
  41c85a:	add    BYTE PTR [rax],al
  41c85c:	add    DWORD PTR [rax],eax
  41c85e:	add    BYTE PTR [rax],al
  41c860:	add    DWORD PTR [rdi],eax
  41c862:	add    al,0x0
  41c864:	(bad)  
  41c865:	xor    al,BYTE PTR [rbx]
  41c867:	xor    BYTE PTR [rdx],al
  41c869:	(bad)  
  41c86a:	add    DWORD PTR [rax+0x1],esi
  41c86d:	(bad)  
  41c86e:	add    eax,DWORD PTR [rax]
  41c870:	(bad)  
  41c871:	rex.X add sil,BYTE PTR [rax]
  41c874:	add    DWORD PTR [rax+0x0],esp
  41c877:	add    BYTE PTR [rcx],al
  41c879:	add    eax,0x32050002
  41c87e:	add    DWORD PTR [rax],esi
  41c880:	add    DWORD PTR [rdi],eax
  41c882:	add    al,0x0
  41c884:	(bad)  
  41c885:	xor    al,BYTE PTR [rbx]
  41c887:	xor    BYTE PTR [rdx],al
  41c889:	(bad)  
  41c88a:	add    DWORD PTR [rax+0x1],esi
  41c88d:	(bad)  
  41c88e:	add    eax,DWORD PTR [rax]
  41c890:	(bad)  
  41c891:	rex.X add sil,BYTE PTR [rax]
  41c894:	add    DWORD PTR [rax+0x0],esp
  41c897:	add    BYTE PTR [rcx],al
  41c899:	(bad)  
  41c89a:	add    eax,DWORD PTR [rax]
  41c89c:	(bad)  
  41c89d:	rex.X add sil,BYTE PTR [rax]
  41c8a0:	add    DWORD PTR [rax+0x0],esp
  41c8a3:	add    BYTE PTR [rcx],al
  41c8a5:	or     BYTE PTR [rip+0x4420800],al        # 0x483d0ab
  41c8ab:	xor    BYTE PTR [rbx],al
  41c8ad:	(bad)  
  41c8ae:	add    dh,BYTE PTR [rax+0x1]
  41c8b1:	push   rax
  41c8b2:	add    BYTE PTR [rax],al
  41c8b4:	add    DWORD PTR [rdx],ecx
  41c8b6:	add    eax,0x26010a00
  41c8bb:	add    BYTE PTR [rbx],al
  41c8bd:	xor    BYTE PTR [rdx],al
  41c8bf:	(bad)  
  41c8c0:	add    DWORD PTR [rax+0x0],esi
  41c8c3:	add    BYTE PTR [rcx],al
  41c8c5:	or     eax,DWORD PTR [rsi]
  41c8c7:	add    BYTE PTR [rbx],cl
  41c8c9:	add    DWORD PTR [rbx],ebp
  41c8cb:	add    BYTE PTR [rax+rsi*1],al
  41c8ce:	add    esp,DWORD PTR [rax+0x2]
  41c8d1:	jo     0x41c8d4
  41c8d3:	push   rax
  41c8d4:	add    DWORD PTR [rsi],eax
  41c8d6:	add    eax,DWORD PTR [rax]
  41c8d8:	(bad)  
  41c8d9:	rex.X add sil,BYTE PTR [rax]
  41c8dc:	add    DWORD PTR [rax+0x0],esp
  41c8df:	add    BYTE PTR [rcx],al
  41c8e1:	add    eax,0x32050002
  41c8e6:	add    DWORD PTR [rax],esi
  41c8e8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246c8f0
  41c8ee:	add    DWORD PTR [rax],esi
  41c8f0:	add    DWORD PTR [rsi],eax
  41c8f2:	add    eax,DWORD PTR [rax]
  41c8f4:	(bad)  
  41c8f5:	rex.X add sil,BYTE PTR [rax]
  41c8f8:	add    DWORD PTR [rax+0x0],esp
  41c8fb:	add    BYTE PTR [rcx],al
  41c8fd:	add    al,0x1
  41c8ff:	add    BYTE PTR [rdx+rax*2],al
  41c902:	add    BYTE PTR [rax],al
  41c904:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246c90c
  41c90a:	add    DWORD PTR [rax],esi
  41c90c:	add    DWORD PTR [rax],eax
  41c90e:	add    BYTE PTR [rax],al
  41c910:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x14ec91d
  41c916:	rex.WX add BYTE PTR [rsi],al
  41c919:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1cd7f
  41c91f:	push   rax
  41c920:	add    al,al
  41c922:	add    BYTE PTR [rax],al
  41c924:	add    DWORD PTR [rax],ecx
  41c926:	add    eax,0x4620800
  41c92b:	xor    BYTE PTR [rbx],al
  41c92d:	(bad)  
  41c92e:	add    dh,BYTE PTR [rax+0x1]
  41c931:	push   rax
  41c932:	add    BYTE PTR [rax],al
  41c934:	add    DWORD PTR [rax],eax
  41c936:	add    BYTE PTR [rax],al
  41c938:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000041d000 <.bss>:
	...

Disassembly of section .edata:

000000000041e000 <.edata>:
  41e000:	add    BYTE PTR [rax],al
  41e002:	add    BYTE PTR [rax],al
  41e004:	jno    0x41e06a
  41e006:	scas   eax,DWORD PTR es:[rdi]
  41e007:	pop    rax
  41e008:	add    BYTE PTR [rax],al
  41e00a:	add    BYTE PTR [rax],al
  41e00c:	repnz jrcxz 0x41e010
  41e00f:	add    BYTE PTR [rcx],al
  41e011:	add    BYTE PTR [rax],al
  41e013:	add    BYTE PTR [rcx+0x0],ah
  41e016:	add    BYTE PTR [rax],al
  41e018:	(bad)  
  41e019:	add    BYTE PTR [rax],al
  41e01b:	add    BYTE PTR [rax],ch
  41e01d:	loopne 0x41e020
  41e01f:	add    BYTE PTR [rcx+riz*8-0x1ccfffff],ch
  41e026:	add    DWORD PTR [rax],eax
  41e028:	movabs ds:0xa27000001d300000,al
  41e032:	add    BYTE PTR [rax],al
  41e034:	shl    BYTE PTR [rdx-0x5d300000],0x0
  41e03b:	add    BYTE PTR [rax-0x5d],ah
  41e03e:	add    BYTE PTR [rax],al
  41e040:	jo     0x41dfe6
  41e042:	add    BYTE PTR [rax],al
  41e044:	and    BYTE PTR [rbp-0x59700000],0x0
  41e04b:	add    BYTE PTR [rax],dh
  41e04d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41e04e:	add    BYTE PTR [rax],al
  41e050:	movabs al,ds:0x600000aa000000a8
  41e059:	stos   DWORD PTR es:[rdi],eax
  41e05a:	add    BYTE PTR [rax],al
  41e05c:	nop
  41e05d:	lods   eax,DWORD PTR ds:[rsi]
  41e05e:	add    BYTE PTR [rax],al
  41e060:	jo     0x41e010
  41e062:	add    BYTE PTR [rax],al
  41e064:	movabs al,ds:0x300000aef00000ae
  41e06d:	scas   eax,DWORD PTR es:[rdi]
  41e06e:	add    BYTE PTR [rax],al
  41e070:	sub    BYTE PTR [rdi-0x4ff00000],0x0
  41e077:	add    al,ah
  41e079:	ins    BYTE PTR es:[rdi],dx
  41e07a:	add    BYTE PTR [rax],al
  41e07c:	shl    BYTE PTR [rdi+0x0],0x0
  41e080:	add    BYTE PTR [rax+rax*1+0x0],ch
  41e084:	mov    al,0x6a
  41e086:	add    BYTE PTR [rax],al
  41e088:	jo     0x41e0f4
  41e08a:	add    BYTE PTR [rax],al
  41e08c:	and    BYTE PTR [rdi+0x0],bh
  41e08f:	add    BYTE PTR [rax],ah
  41e091:	jl     0x41e093
  41e093:	add    BYTE PTR [rax],dh
  41e095:	jl     0x41e097
  41e097:	add    BYTE PTR [rax-0x1fffff85],dh
  41e09d:	jnp    0x41e09f
  41e09f:	add    BYTE PTR [rax+0x6d],dl
  41e0a2:	add    BYTE PTR [rax],al
  41e0a4:	nop
  41e0a5:	ja     0x41e0a7
  41e0a7:	add    BYTE PTR [rax+0x7000007e],dl
  41e0ad:	je     0x41e0af
  41e0af:	add    BYTE PTR [rax-0x50],ah
  41e0b2:	add    BYTE PTR [rax],al
  41e0b4:	and    BYTE PTR [rbp+0x0],bh
  41e0b7:	add    BYTE PTR [rax+0x63],dl
  41e0ba:	add    BYTE PTR [rax],al
  41e0bc:	(bad)  
  41e0bd:	movsxd eax,DWORD PTR [rax]
  41e0bf:	add    BYTE PTR [rax+0x63],dh
  41e0c2:	add    BYTE PTR [rax],al
  41e0c4:	nop
  41e0c5:	movsxd eax,DWORD PTR [rax]
  41e0c7:	add    BYTE PTR [rax-0x5fffff9d],al
  41e0cd:	movsxd eax,DWORD PTR [rax]
  41e0cf:	add    BYTE PTR [rax-0x3fffff9d],dh
  41e0d5:	movsxd eax,DWORD PTR [rax]
  41e0d7:	add    al,dl
  41e0d9:	movsxd eax,DWORD PTR [rax]
  41e0db:	add    al,ah
  41e0dd:	movsxd eax,DWORD PTR [rax]
  41e0df:	add    BYTE PTR [rax+0x66],dh
  41e0e2:	add    BYTE PTR [rax],al
  41e0e4:	and    BYTE PTR [rsi+0x0],0x0
  41e0e8:	nop
  41e0e9:	data16 add BYTE PTR [rax],al
  41e0ec:	movabs al,ds:0xc0000066b0000066
  41e0f5:	data16 add BYTE PTR [rax],al
  41e0f8:	shl    BYTE PTR [rsi+0x0],1
  41e0fb:	add    al,ah
  41e0fd:	data16 add BYTE PTR [rax],al
  41e100:	lock data16 add BYTE PTR [rax],al
  41e104:	add    BYTE PTR [rdi+0x0],ah
  41e107:	add    BYTE PTR [rax],dl
  41e109:	add    BYTE PTR [eax],al
  41e10c:	and    BYTE PTR [rdi+0x0],ah
  41e10f:	add    al,dl
  41e111:	add    BYTE PTR [eax],al
  41e114:	loopne 0x41e17d
  41e116:	add    BYTE PTR [rax],al
  41e118:	xor    BYTE PTR [rdi+0x0],ah
  41e11b:	add    BYTE PTR [rax+0x67],al
  41e11e:	add    BYTE PTR [rax],al
  41e120:	push   rax
  41e121:	add    BYTE PTR [eax],al
  41e124:	(bad)  
  41e125:	add    BYTE PTR [eax],al
  41e128:	jo     0x41e191
  41e12a:	add    BYTE PTR [rax],al
  41e12c:	and    BYTE PTR [rdi+0x0],0x0
  41e130:	nop
  41e131:	add    BYTE PTR [eax],al
  41e134:	movabs al,ds:0xc0000067b0000067
  41e13d:	add    BYTE PTR [eax],al
  41e140:	lock add BYTE PTR [eax],al
  41e144:	add    BYTE PTR [rax+0x0],ch
  41e147:	add    BYTE PTR [rax],dl
  41e149:	push   0x68600000
  41e14e:	add    BYTE PTR [rax],al
  41e150:	and    BYTE PTR [rax+0x0],ch
  41e153:	add    BYTE PTR [rax],dh
  41e155:	push   0x68400000
  41e15a:	add    BYTE PTR [rax],al
  41e15c:	push   rax
  41e15d:	push   0x68700000
  41e162:	add    BYTE PTR [rax],al
  41e164:	sub    BYTE PTR [rax+0x0],0x0
  41e168:	nop
  41e169:	push   0x68a00000
  41e16e:	add    BYTE PTR [rax],al
  41e170:	loopne 0x41e1e9
  41e172:	add    BYTE PTR [rax],al
  41e174:	(bad)  
  41e175:	jl     0x41e177
  41e177:	add    al,dl
  41e179:	push   0x69000000
  41e17e:	add    BYTE PTR [rax],al
  41e180:	sub    BYTE PTR [rbp+0x0],0x0
  41e184:	movabs al,ds:0x40000073f000006d
  41e18d:	ja     0x41e18f
  41e18f:	add    BYTE PTR [rax],ah
  41e191:	js     0x41e193
  41e193:	add    BYTE PTR [rax+0x78],dh
  41e196:	add    BYTE PTR [rax],al
  41e198:	and    BYTE PTR [rcx+0x0],bh
  41e19b:	add    BYTE PTR [rax-0x1fffff86],al
  41e1a1:	jp     0x41e1a3
  41e1a3:	add    al,al
  41e1a5:	jp     0x41e1a7
  41e1a7:	add    al,ah
  41e1a9:	jl     0x41e1ab
  41e1ab:	add    BYTE PTR [rax],al
  41e1ad:	in     al,0x1
  41e1af:	add    BYTE PTR [rdi],dl
  41e1b1:	in     al,0x1
  41e1b3:	add    BYTE PTR [rsi],ah
  41e1b5:	in     al,0x1
  41e1b7:	add    BYTE PTR [rdx],bh
  41e1b9:	in     al,0x1
  41e1bb:	add    BYTE PTR [rbp-0x1c],dl
  41e1be:	add    DWORD PTR [rax],eax
  41e1c0:	jl     0x41e1a6
  41e1c2:	add    DWORD PTR [rax],eax
  41e1c4:	scas   eax,DWORD PTR es:[rdi]
  41e1c5:	in     al,0x1
  41e1c7:	add    bl,ah
  41e1c9:	in     al,0x1
  41e1cb:	add    BYTE PTR [rip+0xffffffff950001e5],cl        # 0xffffffff9541e3b6
  41e1d1:	in     eax,0x1
  41e1d3:	add    BYTE PTR [rax-0x1a],ch
  41e1d6:	add    DWORD PTR [rax],eax
  41e1d8:	cmp    al,0xe7
  41e1da:	add    DWORD PTR [rax],eax
  41e1dc:	movabs eax,ds:0x920001e82b0001e7
  41e1e5:	call   0xffffffffe943e1eb
  41e1ea:	add    DWORD PTR [rax],eax
  41e1ec:	cmp    cl,ch
  41e1ee:	add    DWORD PTR [rax],eax
  41e1f0:	outs   dx,BYTE PTR ds:[rsi]
  41e1f1:	jmp    0xffffffffe9e5e1f7
  41e1f6:	add    DWORD PTR [rax],eax
  41e1f8:	fucomi st,st(1)
  41e1fa:	add    DWORD PTR [rax],eax
  41e1fc:	adc    ch,dl
  41e1fe:	add    DWORD PTR [rax],eax
  41e200:	and    eax,0x3f0001ea
  41e205:	(bad)  
  41e206:	add    DWORD PTR [rax],eax
  41e208:	push   rax
  41e209:	(bad)  
  41e20a:	add    DWORD PTR [rax],eax
  41e20c:	(bad)  
  41e20d:	(bad)  
  41e20e:	add    DWORD PTR [rax],eax
  41e210:	jb     0x41e1fc
  41e212:	add    DWORD PTR [rax],eax
  41e214:	jnp    0x41e200
  41e216:	add    DWORD PTR [rax],eax
  41e218:	xchg   ebx,eax
  41e219:	(bad)  
  41e21a:	add    DWORD PTR [rax],eax
  41e21c:	stos   DWORD PTR es:[rdi],eax
  41e21d:	(bad)  
  41e21e:	add    DWORD PTR [rax],eax
  41e220:	mov    edi,0xd30001ea
  41e225:	(bad)  
  41e226:	add    DWORD PTR [rax],eax
  41e228:	(bad)  
  41e22a:	add    DWORD PTR [rax],eax
  41e22c:	imul   edx
  41e22e:	add    DWORD PTR [rax],eax
  41e230:	(bad)  
  41e231:	jmp    0x41e234
  41e233:	add    BYTE PTR [rbx],cl
  41e235:	jmp    0x41e238
  41e237:	add    BYTE PTR [rax],dl
  41e239:	jmp    0x41e23c
  41e23b:	add    BYTE PTR [rdx],ah
  41e23d:	jmp    0x41e240
  41e23f:	add    BYTE PTR [rip+0x480001eb],dh        # 0x4841e430
  41e245:	jmp    0x41e248
  41e247:	add    BYTE PTR [rbx-0x15],bl
  41e24a:	add    DWORD PTR [rax],eax
  41e24c:	jno    0x41e239
  41e24e:	add    DWORD PTR [rax],eax
  41e250:	test   bl,ch
  41e252:	add    DWORD PTR [rax],eax
  41e254:	cdq    
  41e255:	jmp    0x41e258
  41e257:	add    BYTE PTR [rsi-0x3afffe15],ch
  41e25d:	jmp    0x41e260
  41e25f:	add    cl,bl
  41e261:	jmp    0x41e264
  41e263:	add    dh,ch
  41e265:	jmp    0x41e268
  41e267:	add    BYTE PTR [rsp+rbp*8],al
  41e26a:	add    DWORD PTR [rax],eax
  41e26c:	sbb    ah,ch
  41e26e:	add    DWORD PTR [rax],eax
  41e270:	xor    esp,ebp
  41e272:	add    DWORD PTR [rax],eax
  41e274:	rex.RXB in al,dx
  41e276:	add    DWORD PTR [rax],eax
  41e278:	pop    rsi
  41e279:	in     al,dx
  41e27a:	add    DWORD PTR [rax],eax
  41e27c:	jne    0x41e26a
  41e27e:	add    DWORD PTR [rax],eax
  41e280:	mov    ebp,esp
  41e282:	add    DWORD PTR [rax],eax
  41e284:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41e285:	in     al,dx
  41e286:	add    DWORD PTR [rax],eax
  41e288:	mov    ebp,0xd30001ec
  41e28d:	in     al,dx
  41e28e:	add    DWORD PTR [rax],eax
  41e290:	(bad)  
  41e291:	in     al,dx
  41e292:	add    DWORD PTR [rax],eax
  41e294:	add    ch,ch
  41e296:	add    DWORD PTR [rax],eax
  41e298:	adc    ebp,ebp
  41e29a:	add    DWORD PTR [rax],eax
  41e29c:	and    ebp,ebp
  41e29e:	add    DWORD PTR [rax],eax
  41e2a0:	cmp    ebp,ebp
  41e2a2:	add    DWORD PTR [rax],eax
  41e2a4:	rex.WRB in eax,dx
  41e2a6:	add    DWORD PTR [rax],eax
  41e2a8:	(bad)  
  41e2a9:	in     eax,dx
  41e2aa:	add    DWORD PTR [rax],eax
  41e2ac:	jbe    0x41e29b
  41e2ae:	add    DWORD PTR [rax],eax
  41e2b0:	mov    ebp,gs
  41e2b2:	add    DWORD PTR [rax],eax
  41e2b4:	movabs al,ds:0xcc0001edb50001ed
  41e2bd:	in     eax,dx
  41e2be:	add    DWORD PTR [rax],eax
  41e2c0:	loop   0x41e2af
  41e2c2:	add    DWORD PTR [rax],eax
  41e2c4:	imul   ebp
  41e2c6:	add    DWORD PTR [rax],eax
  41e2c8:	(bad)  
  41e2c9:	out    dx,al
  41e2ca:	add    DWORD PTR [rax],eax
  41e2cc:	(bad)  
  41e2cd:	out    dx,al
  41e2ce:	add    DWORD PTR [rax],eax
  41e2d0:	out    dx,al
  41e2d2:	add    DWORD PTR [rax],eax
  41e2d4:	pop    rbx
  41e2d5:	out    dx,al
  41e2d6:	add    DWORD PTR [rax],eax
  41e2d8:	ja     0x41e2c8
  41e2da:	add    DWORD PTR [rax],eax
  41e2dc:	nop
  41e2dd:	out    dx,al
  41e2de:	add    DWORD PTR [rax],eax
  41e2e0:	stos   DWORD PTR es:[rdi],eax
  41e2e1:	out    dx,al
  41e2e2:	add    DWORD PTR [rax],eax
  41e2e4:	(bad)
  41e2e7:	add    ah,bl
  41e2e9:	out    dx,al
  41e2ea:	add    DWORD PTR [rax],eax
  41e2ec:	hlt    
  41e2ed:	out    dx,al
  41e2ee:	add    DWORD PTR [rax],eax
  41e2f0:	or     al,0xef
  41e2f2:	add    DWORD PTR [rax],eax
  41e2f4:	and    eax,0x2a0001ef
  41e2f9:	out    dx,eax
  41e2fa:	add    DWORD PTR [rax],eax
  41e2fc:	cmp    ebp,edi
  41e2fe:	add    DWORD PTR [rax],eax
  41e300:	rex.RB out dx,eax
  41e302:	add    DWORD PTR [rax],eax
  41e304:	rex.WRX out dx,eax
  41e306:	add    DWORD PTR [rax],eax
  41e308:	pop    rsp
  41e309:	out    dx,eax
  41e30a:	add    DWORD PTR [rax],eax
  41e30c:	addr32 out dx,eax
  41e30e:	add    DWORD PTR [rax],eax
  41e310:	jb     0x41e301
  41e312:	add    DWORD PTR [rax],eax
  41e314:	jge    0x41e305
  41e316:	add    DWORD PTR [rax],eax
  41e318:	mov    edi,ebp
  41e31a:	add    DWORD PTR [rax],eax
  41e31c:	xchg   ebx,eax
  41e31d:	out    dx,eax
  41e31e:	add    DWORD PTR [rax],eax
  41e320:	pushf  
  41e321:	out    dx,eax
  41e322:	add    DWORD PTR [rax],eax
  41e324:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41e325:	out    dx,eax
  41e326:	add    DWORD PTR [rax],eax
  41e328:	mov    dl,0xef
  41e32a:	add    DWORD PTR [rax],eax
  41e32c:	mov    edx,0x1ef
  41e331:	add    BYTE PTR [rcx],al
  41e333:	add    BYTE PTR [rdx],al
  41e335:	add    BYTE PTR [rbx],al
  41e337:	add    BYTE PTR [rax+rax*1],al
  41e33a:	add    eax,0x7000600
  41e33f:	add    BYTE PTR [rax],cl
  41e341:	add    BYTE PTR [rcx],cl
  41e343:	add    BYTE PTR [rdx],cl
  41e345:	add    BYTE PTR [rbx],cl
  41e347:	add    BYTE PTR [rax+rax*1],cl
  41e34a:	or     eax,0xf000e00
  41e34f:	add    BYTE PTR [rax],dl
  41e351:	add    BYTE PTR [rcx],dl
  41e353:	add    BYTE PTR [rdx],dl
  41e355:	add    BYTE PTR [rbx],dl
  41e357:	add    BYTE PTR [rax+rax*1],dl
  41e35a:	adc    eax,0x17001600
  41e35f:	add    BYTE PTR [rax],bl
  41e361:	add    BYTE PTR [rcx],bl
  41e363:	add    BYTE PTR [rdx],bl
  41e365:	add    BYTE PTR [rbx],bl
  41e367:	add    BYTE PTR [rax+rax*1],bl
  41e36a:	sbb    eax,0x1f001e00
  41e36f:	add    BYTE PTR [rax],ah
  41e371:	add    BYTE PTR [rcx],ah
  41e373:	add    BYTE PTR [rdx],ah
  41e375:	add    BYTE PTR [rbx],ah
  41e377:	add    BYTE PTR [rax+rax*1],ah
  41e37a:	and    eax,0x27002600
  41e37f:	add    BYTE PTR [rax],ch
  41e381:	add    BYTE PTR [rcx],ch
  41e383:	add    BYTE PTR [rdx],ch
  41e385:	add    BYTE PTR [rbx],ch
  41e387:	add    BYTE PTR [rax+rax*1],ch
  41e38a:	sub    eax,0x2f002e00
  41e38f:	add    BYTE PTR [rax],dh
  41e391:	add    BYTE PTR [rcx],dh
  41e393:	add    BYTE PTR [rdx],dh
  41e395:	add    BYTE PTR [rbx],dh
  41e397:	add    BYTE PTR [rax+rax*1],dh
  41e39a:	xor    eax,0x37003600
  41e39f:	add    BYTE PTR [rax],bh
  41e3a1:	add    BYTE PTR [rcx],bh
  41e3a3:	add    BYTE PTR [rdx],bh
  41e3a5:	add    BYTE PTR [rbx],bh
  41e3a7:	add    BYTE PTR [rax+rax*1],bh
  41e3aa:	cmp    eax,0x3f003e00
  41e3af:	add    BYTE PTR [rax+0x0],al
  41e3b2:	add    BYTE PTR [r10+0x0],al
  41e3b6:	add    BYTE PTR [r8+r8*1+0x45],al
  41e3bb:	add    BYTE PTR [rsi+0x0],al
  41e3be:	rex.RXB add BYTE PTR [r8+0x0],r9b
  41e3c2:	rex.WB add BYTE PTR [r10+0x0],cl
  41e3c6:	rex.WXB add BYTE PTR [r8+r8*1+0x4d],cl
  41e3cb:	add    BYTE PTR [rsi+0x0],cl
  41e3ce:	rex.WRXB add BYTE PTR [r8+0x0],r10b
  41e3d2:	push   rcx
  41e3d3:	add    BYTE PTR [rdx+0x0],dl
  41e3d6:	push   rbx
  41e3d7:	add    BYTE PTR [rax+rax*1+0x55],dl
  41e3db:	add    BYTE PTR [rsi+0x0],dl
  41e3de:	push   rdi
  41e3df:	add    BYTE PTR [rax+0x0],bl
  41e3e2:	pop    rcx
  41e3e3:	add    BYTE PTR [rdx+0x0],bl
  41e3e6:	pop    rbx
  41e3e7:	add    BYTE PTR [rax+rax*1+0x5d],bl
  41e3eb:	add    BYTE PTR [rsi+0x0],bl
  41e3ee:	pop    rdi
  41e3ef:	add    BYTE PTR [rax+0x0],ah
  41e3f2:	ins    DWORD PTR es:[rdi],dx
  41e3f3:	imul   ebp,DWORD PTR [rdi+0x63],0x74
  41e3f7:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0x7865
  41e3fe:	add    BYTE PTR gs:[rdi+0x5a],bl
  41e402:	xor    DWORD PTR [rcx],esi
  41e404:	jae    0x41e47a
  41e406:	(bad)  
  41e407:	jb     0x41e47d
  41e409:	jae    0x41e46a
  41e40b:	ja     0x41e476
  41e40d:	je     0x41e477
  41e40f:	push   rdx
  41e410:	rex.WXB push r11
  41e412:	jae    0x41e467
  41e414:	xor    BYTE PTR [rdi+0x0],bl
  41e417:	pop    rdi
  41e418:	pop    rdx
  41e419:	(bad)  
  41e41a:	imul   esi,DWORD PTR [rbx+0x5f],0x65757274
  41e421:	push   rdx
  41e422:	rex.WXB push r11
  41e424:	jae    0x41e426
  41e426:	pop    rdi
  41e427:	pop    rdx
  41e428:	cmp    DWORD PTR [rbp+0x6e],esp
  41e42b:	fs jae 0x41e48d
  41e42e:	ja     0x41e499
  41e430:	je     0x41e49a
  41e432:	push   rdx
  41e433:	rex.WXB push r11
  41e435:	jae    0x41e48a
  41e437:	xor    BYTE PTR [rdi+0x0],bl
  41e43a:	pop    rdi
  41e43b:	pop    rdx
  41e43c:	rex.WRX
  41e43d:	rex.WXB push r11
  41e43f:	je     0x41e476
  41e441:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
  41e445:	movsxd rax,DWORD PTR gs:[r13+0x38]
  41e44a:	outs   dx,DWORD PTR fs:[rsi]
  41e44c:	pop    rdi
  41e44d:	ja     0x41e4b8
  41e44f:	fs outs dx,BYTE PTR gs:[rsi]
  41e452:	movsxd r8d,DWORD PTR [r8]
  41e455:	pop    rdi
  41e456:	pop    rdx
  41e457:	rex.WRX push rbx
  41e459:	je     0x41e48c
  41e45b:	xor    BYTE PTR [rdi+0x4c],bl
  41e45e:	imul   esi,DWORD PTR [rbx+0x74],0x7361625f
  41e465:	gs rex.WB push r11
  41e468:	jae    0x41e4bd
  41e46a:	(bad)  
  41e46b:	rex.WB push r11
  41e46d:	jae    0x41e4b4
  41e46f:	cmp    BYTE PTR [r15+0x4d],r11b
  41e473:	pop    rdi
  41e474:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  41e478:	jb     0x41e4bf
  41e47a:	jbe    0x41e47c
  41e47c:	pop    rdi
  41e47d:	pop    rdx
  41e47e:	rex.WRX push rbx
  41e480:	je     0x41e4b5
  41e482:	ins    DWORD PTR es:[rdi],dx
  41e483:	(bad)  
  41e484:	jo     0x41e4cf
  41e486:	push   rbx
  41e487:	jae    0x41e4dc
  41e489:	jae    0x41e4de
  41e48b:	je     0x41e4c1
  41e48d:	ins    BYTE PTR es:[rdi],dx
  41e48e:	gs jae 0x41e504
  41e491:	rex.WB push r11
  41e493:	jae    0x41e4da
  41e495:	push   rbx
  41e496:	(bad)  
  41e497:	rex.WB push r11
  41e499:	je     0x41e4cf
  41e49b:	jo     0x41e4fe
  41e49d:	imul   esi,DWORD PTR [rdx+0x49],0x5373534b
  41e4a4:	jae    0x41e4eb
  41e4a6:	rex.RB
  41e4a7:	imul   r15d,DWORD PTR [r8+0x45],0x73534f
  41e4af:	pop    rdi
  41e4b0:	pop    rdx
  41e4b1:	rex.WRX push rbx
  41e4b3:	je     0x41e4e8
  41e4b5:	ins    DWORD PTR es:[rdi],dx
  41e4b6:	(bad)  
  41e4b7:	jo     0x41e502
  41e4b9:	push   rbx
  41e4ba:	jae    0x41e50f
  41e4bc:	jae    0x41e511
  41e4be:	je     0x41e4f4
  41e4c0:	ins    BYTE PTR es:[rdi],dx
  41e4c1:	gs jae 0x41e537
  41e4c4:	rex.WB push r11
  41e4c6:	jae    0x41e50d
  41e4c8:	push   rbx
  41e4c9:	(bad)  
  41e4ca:	rex.WB push r11
  41e4cc:	je     0x41e502
  41e4ce:	jo     0x41e531
  41e4d0:	imul   esi,DWORD PTR [rdx+0x49],0x5373534b
  41e4d7:	jae    0x41e51e
  41e4d9:	rex.RB
  41e4da:	imul   r15d,DWORD PTR [r8+0x45],0x5f335352
  41e4e2:	add    BYTE PTR [rdi+0x5a],bl
  41e4e5:	rex.WRX push rbx
  41e4e7:	je     0x41e51f
  41e4e9:	jbe    0x41e550
  41e4eb:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  41e4ef:	movsxd rdx,DWORD PTR [r11+0x61]
  41e4f3:	movsxd rax,DWORD PTR [r13+0x45]
  41e4f7:	xor    DWORD PTR [rdi],esi
  41e4f9:	pop    rdi
  41e4fa:	rex.WRB pop r15
  41e4fc:	fs gs data16 (bad) 
  41e500:	jne    0x41e56e
  41e502:	je     0x41e563
  41e504:	(bad)  
  41e505:	jo     0x41e577
  41e507:	outs   dx,BYTE PTR gs:[rsi]
  41e509:	fs rex.RB jns 0x41e50d
  41e50d:	pop    rdi
  41e50e:	pop    rdx
  41e50f:	rex.WRX push rbx
  41e511:	je     0x41e54b
  41e513:	pop    rdi
  41e514:	push   rdx
  41e515:	(bad)  
  41e516:	pop    rdi
  41e517:	je     0x41e58b
  41e519:	gs gs rex.WB push r11
  41e51d:	jae    0x41e572
  41e51f:	je     0x41e555
  41e521:	jo     0x41e584
  41e523:	imul   esi,DWORD PTR [rdx+0x49],0x5373534b
  41e52a:	jae    0x41e571
  41e52c:	push   rbx
  41e52d:	je     0x41e560
  41e52f:	xor    BYTE PTR [rdi+0x53],bl
  41e532:	gs ins BYTE PTR es:[rdi],dx
  41e534:	movsxd esi,DWORD PTR gs:[rcx+rsi*1+0x73]
  41e539:	je     0x41e584
  41e53b:	push   rbx
  41e53c:	xor    bl,BYTE PTR [rdi+0x45]
  41e53f:	push   rbx
  41e540:	je     0x41e576
  41e542:	ins    BYTE PTR es:[rdi],dx
  41e543:	gs jae 0x41e5b9
  41e546:	rex.WB push r11
  41e548:	jae    0x41e58f
  41e54a:	push   rbx
  41e54b:	(bad)  
  41e54c:	rex.WB push r11
  41e54e:	xor    bl,BYTE PTR [rdi+0x45]
  41e551:	xor    DWORD PTR [r15+rbx*2],r14d
  41e555:	rex.WRB pop r15
  41e557:	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
  41e55e:	outs   dx,BYTE PTR ds:[rsi]
  41e55f:	outs   dx,DWORD PTR ds:[rsi]
  41e560:	fs gs rex.RB push r8
  41e564:	push   rbx
  41e565:	je     0x41e598
  41e567:	cmp    BYTE PTR [rdi+0x52],bl
  41e56a:	(bad)  
  41e56b:	pop    rdi
  41e56c:	je     0x41e5e0
  41e56e:	gs gs pop rdi
  41e571:	outs   dx,BYTE PTR ds:[rsi]
  41e572:	outs   dx,DWORD PTR ds:[rsi]
  41e573:	fs gs pop rdi
  41e576:	(bad)  
  41e578:	jae    0x41e5df
  41e57a:	push   rbx
  41e57b:	pop    r15
  41e57d:	push   rax
  41e57e:	push   rbx
  41e57f:	je     0x41e5b2
  41e581:	xor    ebx,DWORD PTR [rdi+0x52]
  41e584:	(bad)  
  41e585:	pop    rdi
  41e586:	je     0x41e5fa
  41e588:	gs gs pop rdi
  41e58b:	outs   dx,BYTE PTR ds:[rsi]
  41e58c:	outs   dx,DWORD PTR ds:[rsi]
  41e58d:	fs gs rex.WB push r11
  41e591:	xor    bl,BYTE PTR [rdi+0x45]
  41e594:	add    BYTE PTR [rdi+0x5a],bl
  41e597:	rex.WRX push rbx
  41e599:	je     0x41e5d3
  41e59b:	pop    rdi
  41e59c:	push   rdx
  41e59d:	(bad)  
  41e59e:	pop    rdi
  41e59f:	je     0x41e613
  41e5a1:	gs gs rex.WB push r11
  41e5a5:	jae    0x41e5fa
  41e5a7:	je     0x41e5dd
  41e5a9:	jo     0x41e60c
  41e5ab:	imul   esi,DWORD PTR [rdx+0x49],0x5373534b
  41e5b2:	jae    0x41e5f9
  41e5b4:	push   rbx
  41e5b5:	je     0x41e5e8
  41e5b7:	xor    BYTE PTR [rdi+0x53],bl
  41e5ba:	gs ins BYTE PTR es:[rdi],dx
  41e5bc:	movsxd esi,DWORD PTR gs:[rcx+rsi*1+0x73]
  41e5c1:	je     0x41e60c
  41e5c3:	push   rbx
  41e5c4:	xor    bl,BYTE PTR [rdi+0x45]
  41e5c7:	push   rbx
  41e5c8:	je     0x41e5fe
  41e5ca:	ins    BYTE PTR es:[rdi],dx
  41e5cb:	gs jae 0x41e641
  41e5ce:	rex.WB push r11
  41e5d0:	jae    0x41e617
  41e5d2:	push   rbx
  41e5d3:	(bad)  
  41e5d4:	rex.WB push r11
  41e5d6:	xor    bl,BYTE PTR [rdi+0x45]
  41e5d9:	xor    r14b,BYTE PTR [r10]
  41e5dc:	pop    rdi
  41e5dd:	rex.WRB pop r15
  41e5df:	gs ins DWORD PTR es:[rdi],dx
  41e5e1:	jo     0x41e64f
  41e5e3:	(bad)  
  41e5e4:	movsxd esp,DWORD PTR [rbp+0x5f]
  41e5e7:	push   0x5f746e69
  41e5ec:	jne    0x41e65c
  41e5ee:	imul   esi,DWORD PTR [rcx+0x75],0x52494965
  41e5f5:	rex.WXB push r11
  41e5f7:	je     0x41e62b
  41e5f9:	xor    DWORD PTR [rax+0x69],esi
  41e5fc:	movsxd esp,DWORD PTR gs:[rbp+0x77]
  41e600:	imul   esi,DWORD PTR [rbx+0x65],0x6e6f635f
  41e607:	jae    0x41e67d
  41e609:	jb     0x41e680
  41e60b:	movsxd esi,DWORD PTR [rdi+rbx*2+0x74]
  41e60f:	push   rbx
  41e610:	je     0x41e647
  41e612:	je     0x41e689
  41e614:	jo     0x41e682
  41e616:	gs rex.WB
  41e618:	rex.WB
  41e619:	rex.WRXB push r11
  41e61b:	jae    0x41e662
  41e61d:	rex.RB push r11
  41e61f:	rex.R pop rdi
  41e621:	rex.WB
  41e622:	rex.WB
  41e623:	rex.RB
  41e624:	rex.RB
  41e625:	rex.RB
  41e626:	rex.RB
  41e627:	rex.RB push r11
  41e629:	je     0x41e65c
  41e62b:	(bad)  
  41e62c:	pop    rdi
  41e62d:	push   rdx
  41e62e:	(bad)  
  41e62f:	pop    rdi
  41e630:	je     0x41e6a4
  41e632:	gs gs pop rdi
  41e635:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
  41e63d:	rex.WB push r11
  41e63f:	xor    bl,BYTE PTR [rdi+0x45]
  41e642:	push   rbx
  41e643:	je     0x41e677
  41e645:	xor    ebx,DWORD PTR [rdi+0x52]
  41e648:	(bad)  
  41e649:	pop    rdi
  41e64a:	je     0x41e6be
  41e64c:	gs gs pop rdi
  41e64f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41e652:	jae    0x41e6c8
  41e654:	pop    rdi
  41e655:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
  41e65d:	rex.WB push r11
  41e65f:	xor    bl,BYTE PTR [rdi+0x45]
  41e662:	rex.R jo 0x41e6b4
  41e665:	push   rsp
  41e666:	pop    rdi
  41e667:	add    BYTE PTR [rdi+0x5a],bl
  41e66a:	rex.WRX push rbx
  41e66c:	je     0x41e6a6
  41e66e:	pop    rdi
  41e66f:	push   rdx
  41e670:	(bad)  
  41e671:	pop    rdi
  41e672:	je     0x41e6e6
  41e674:	gs gs rex.WB push r11
  41e678:	jae    0x41e6cd
  41e67a:	je     0x41e6b0
  41e67c:	jo     0x41e6df
  41e67e:	imul   esi,DWORD PTR [rdx+0x49],0x5373534b
  41e685:	jae    0x41e6cc
  41e687:	push   rbx
  41e688:	je     0x41e6bb
  41e68a:	xor    BYTE PTR [rdi+0x53],bl
  41e68d:	gs ins BYTE PTR es:[rdi],dx
  41e68f:	movsxd esi,DWORD PTR gs:[rcx+rsi*1+0x73]
  41e694:	je     0x41e6df
  41e696:	push   rbx
  41e697:	xor    bl,BYTE PTR [rdi+0x45]
  41e69a:	push   rbx
  41e69b:	je     0x41e6d1
  41e69d:	ins    BYTE PTR es:[rdi],dx
  41e69e:	gs jae 0x41e714
  41e6a1:	rex.WB push r11
  41e6a3:	jae    0x41e6ea
  41e6a5:	push   rbx
  41e6a6:	(bad)  
  41e6a7:	rex.WB push r11
  41e6a9:	xor    bl,BYTE PTR [rdi+0x45]
  41e6ac:	xor    r14b,BYTE PTR [r10]
  41e6af:	pop    rdi
  41e6b0:	rex.WRB pop r15
  41e6b2:	gs ins DWORD PTR es:[rdi],dx
  41e6b4:	jo     0x41e722
  41e6b6:	(bad)  
  41e6b7:	movsxd esp,DWORD PTR [rbp+0x5f]
  41e6ba:	push   0x5f746e69
  41e6bf:	jne    0x41e72f
  41e6c1:	imul   esi,DWORD PTR [rcx+0x75],0x52494965
  41e6c8:	rex.WXB push r11
  41e6ca:	je     0x41e6fe
  41e6cc:	xor    DWORD PTR [rax+0x69],esi
  41e6cf:	movsxd esp,DWORD PTR gs:[rbp+0x77]
  41e6d3:	imul   esi,DWORD PTR [rbx+0x65],0x6e6f635f
  41e6da:	jae    0x41e750
  41e6dc:	jb     0x41e753
  41e6de:	movsxd esi,DWORD PTR [rdi+rbx*2+0x74]
  41e6e2:	push   rbx
  41e6e3:	je     0x41e71a
  41e6e5:	je     0x41e75c
  41e6e7:	jo     0x41e755
  41e6e9:	gs rex.WB
  41e6eb:	rex.WB push r10
  41e6ed:	push   rbx
  41e6ee:	xor    DWORD PTR [rdi+0x45],ebx
  41e6f1:	rex.RB push r11
  41e6f3:	rex.R pop rdi
  41e6f5:	rex.WB
  41e6f6:	rex.WB
  41e6f7:	rex.RB
  41e6f8:	rex.RB
  41e6f9:	rex.RB
  41e6fa:	rex.RB
  41e6fb:	rex.RB push r11
  41e6fd:	je     0x41e730
  41e6ff:	(bad)  
  41e700:	pop    rdi
  41e701:	push   rdx
  41e702:	(bad)  
  41e703:	pop    rdi
  41e704:	je     0x41e778
  41e706:	gs gs pop rdi
  41e709:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
  41e711:	rex.WB push r11
  41e713:	xor    bl,BYTE PTR [rdi+0x45]
  41e716:	push   rbx
  41e717:	je     0x41e74b
  41e719:	xor    ebx,DWORD PTR [rdi+0x52]
  41e71c:	(bad)  
  41e71d:	pop    rdi
  41e71e:	je     0x41e792
  41e720:	gs gs pop rdi
  41e723:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41e726:	jae    0x41e79c
  41e728:	pop    rdi
  41e729:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
  41e731:	rex.WB push r11
  41e733:	xor    bl,BYTE PTR [rdi+0x45]
  41e736:	rex.R jo 0x41e788
  41e739:	push   rsp
  41e73a:	pop    rdi
  41e73b:	add    BYTE PTR [rdi+0x5a],bl
  41e73e:	rex.WRX push rbx
  41e740:	je     0x41e77a
  41e742:	pop    rdi
  41e743:	push   rdx
  41e744:	(bad)  
  41e745:	pop    rdi
  41e746:	je     0x41e7ba
  41e748:	gs gs rex.WB push r11
  41e74c:	jae    0x41e7a1
  41e74e:	je     0x41e784
  41e750:	jo     0x41e7b3
  41e752:	imul   esi,DWORD PTR [rdx+0x49],0x5373534b
  41e759:	jae    0x41e7a0
  41e75b:	push   rbx
  41e75c:	je     0x41e78f
  41e75e:	xor    BYTE PTR [rdi+0x53],bl
  41e761:	gs ins BYTE PTR es:[rdi],dx
  41e763:	movsxd esi,DWORD PTR gs:[rcx+rsi*1+0x73]
  41e768:	je     0x41e7b3
  41e76a:	push   rbx
  41e76b:	xor    bl,BYTE PTR [rdi+0x45]
  41e76e:	push   rbx
  41e76f:	je     0x41e7a5
  41e771:	ins    BYTE PTR es:[rdi],dx
  41e772:	gs jae 0x41e7e8
  41e775:	rex.WB push r11
  41e777:	jae    0x41e7be
  41e779:	push   rbx
  41e77a:	(bad)  
  41e77b:	rex.WB push r11
  41e77d:	xor    bl,BYTE PTR [rdi+0x45]
  41e780:	xor    r14b,BYTE PTR [r15+rbx*2]
  41e784:	rex.WRB pop r15
  41e786:	addr32 gs je 0x41e7e9
  41e78a:	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
  41e791:	jne    0x41e801
  41e793:	imul   esi,DWORD PTR [rcx+0x75],0x6f705f65
  41e79a:	jae    0x41e7e1
  41e79c:	push   rdx
  41e79d:	push   rbx
  41e79e:	xor    DWORD PTR [rdi+0x0],ebx
  41e7a1:	pop    rdi
  41e7a2:	pop    rdx
  41e7a3:	rex.WRX push rbx
  41e7a5:	je     0x41e7df
  41e7a7:	pop    rdi
  41e7a8:	push   rdx
  41e7a9:	(bad)  
  41e7aa:	pop    rdi
  41e7ab:	je     0x41e81f
  41e7ad:	gs gs rex.WB push r11
  41e7b1:	jae    0x41e806
  41e7b3:	je     0x41e7e9
  41e7b5:	jo     0x41e818
  41e7b7:	imul   esi,DWORD PTR [rdx+0x49],0x5373534b
  41e7be:	jae    0x41e805
  41e7c0:	push   rbx
  41e7c1:	je     0x41e7f4
  41e7c3:	xor    BYTE PTR [rdi+0x53],bl
  41e7c6:	gs ins BYTE PTR es:[rdi],dx
  41e7c8:	movsxd esi,DWORD PTR gs:[rcx+rsi*1+0x73]
  41e7cd:	je     0x41e818
  41e7cf:	push   rbx
  41e7d0:	xor    bl,BYTE PTR [rdi+0x45]
  41e7d3:	push   rbx
  41e7d4:	je     0x41e80a
  41e7d6:	ins    BYTE PTR es:[rdi],dx
  41e7d7:	gs jae 0x41e84d
  41e7da:	rex.WB push r11
  41e7dc:	jae    0x41e823
  41e7de:	push   rbx
  41e7df:	(bad)  
  41e7e0:	rex.WB push r11
  41e7e2:	xor    bl,BYTE PTR [rdi+0x45]
  41e7e5:	xor    r15b,BYTE PTR [r9]
  41e7e8:	pop    rdi
  41e7e9:	rex.WRB pop r15
  41e7eb:	addr32 gs je 0x41e84e
  41e7ef:	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
  41e7f6:	push   0x5f746e69
  41e7fb:	jne    0x41e86b
  41e7fd:	imul   esi,DWORD PTR [rcx+0x75],0x6f705f65
  41e804:	jae    0x41e84b
  41e806:	push   rbx
  41e807:	je     0x41e83b
  41e809:	xor    ebx,DWORD PTR [rdi+0x52]
  41e80c:	(bad)  
  41e80d:	pop    rdi
  41e80e:	je     0x41e882
  41e810:	gs gs pop rdi
  41e813:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41e816:	jae    0x41e88c
  41e818:	pop    rdi
  41e819:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
  41e821:	rex.WB push r11
  41e823:	xor    bl,BYTE PTR [rdi+0x45]
  41e826:	push   rdx
  41e827:	push   rbx
  41e828:	xor    DWORD PTR [rdi+0x0],ebx
  41e82b:	pop    rdi
  41e82c:	pop    rdx
  41e82d:	rex.WRX push rbx
  41e82f:	je     0x41e869
  41e831:	pop    rdi
  41e832:	push   rdx
  41e833:	(bad)  
  41e834:	pop    rdi
  41e835:	je     0x41e8a9
  41e837:	gs gs rex.WB push r11
  41e83b:	jae    0x41e890
  41e83d:	je     0x41e873
  41e83f:	jo     0x41e8a2
  41e841:	imul   esi,DWORD PTR [rdx+0x49],0x5373534b
  41e848:	jae    0x41e88f
  41e84a:	push   rbx
  41e84b:	je     0x41e87e
  41e84d:	xor    BYTE PTR [rdi+0x53],bl
  41e850:	gs ins BYTE PTR es:[rdi],dx
  41e852:	movsxd esi,DWORD PTR gs:[rcx+rsi*1+0x73]
  41e857:	je     0x41e8a2
  41e859:	push   rbx
  41e85a:	xor    bl,BYTE PTR [rdi+0x45]
  41e85d:	push   rbx
  41e85e:	je     0x41e894
  41e860:	ins    BYTE PTR es:[rdi],dx
  41e861:	gs jae 0x41e8d7
  41e864:	rex.WB push r11
  41e866:	jae    0x41e8ad
  41e868:	push   rbx
  41e869:	(bad)  
  41e86a:	rex.WB push r11
  41e86c:	xor    bl,BYTE PTR [rdi+0x45]
  41e86f:	cmp    BYTE PTR [r15+0x4d],r11b
  41e873:	pop    rdi
  41e874:	gs jb  0x41e8d8
  41e877:	jae    0x41e8de
  41e879:	rex.RB push r8
  41e87b:	push   rbx
  41e87c:	je     0x41e8af
  41e87e:	xor    ebx,DWORD PTR [rdi+0x52]
  41e881:	(bad)  
  41e882:	pop    rdi
  41e883:	je     0x41e8f7
  41e885:	gs gs pop rdi
  41e888:	outs   dx,BYTE PTR ds:[rsi]
  41e889:	outs   dx,DWORD PTR ds:[rsi]
  41e88a:	fs gs rex.WB push r11
  41e88e:	xor    bl,BYTE PTR [rdi+0x45]
  41e891:	add    BYTE PTR [rdi+0x5a],bl
  41e894:	push   rbx
  41e895:	je     0x41e8fc
  41e897:	jno    0x41e8e2
  41e899:	movsxd eax,DWORD PTR [rbp+0x4e]
  41e89c:	cmp    DWORD PTR [rdi+0x5f],ebx
  41e89f:	outs   dx,BYTE PTR ds:[esi]
  41e8a1:	jne    0x41e902
  41e8a3:	movsxd edi,DWORD PTR [rax+0x78]
  41e8a6:	xor    DWORD PTR [rcx],esi
  41e8a8:	pop    rdi
  41e8a9:	pop    rdi
  41e8aa:	outs   dx,BYTE PTR gs:[rsi]
  41e8ac:	(bad)  
  41e8ad:	(bad)  
  41e8ae:	ins    BYTE PTR es:[rdi],dx
  41e8af:	gs pop rdi
  41e8b1:	imul   esp,DWORD PTR [rsi+0x49],0x53727358
  41e8b8:	je     0x41e8f3
  41e8ba:	pop    rdi
  41e8bb:	pop    rdi
  41e8bc:	imul   esi,DWORD PTR [rbx+0x5f],0x72616863
  41e8c3:	rex.WB push r12
  41e8c5:	pop    rdi
  41e8c6:	rex.RB (bad) 
  41e8c8:	pop    rdi
  41e8c9:	pop    rdi
  41e8ca:	jbe    0x41e92d
  41e8cc:	ins    BYTE PTR es:[rdi],dx
  41e8cd:	jne    0x41e934
  41e8cf:	rex.RB (bad) 
  41e8d1:	rex.RB
  41e8d2:	ss pop rdi
  41e8d4:	pop    rdi
  41e8d5:	je     0x41e950
  41e8d7:	jo     0x41e93e
  41e8d9:	rex.RB push r10
  41e8db:	rex.WXB push r11
  41e8dd:	(bad)  
  41e8de:	rex.WB push r11
  41e8e0:	xor    ebx,DWORD PTR [rdi+0x53]
  41e8e3:	je     0x41e916
  41e8e5:	xor    DWORD PTR [rbx+0x68],esp
  41e8e8:	(bad)  
  41e8e9:	jb     0x41e94a
  41e8eb:	je     0x41e95f
  41e8ed:	(bad)  
  41e8ee:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x455f3353
  41e8f6:	push   rbx
  41e8f7:	(bad)  
  41e8f8:	rex.WB push r11
  41e8fa:	xor    ebx,DWORD PTR [rdi+0x45]
  41e8fd:	rex.RB push r11
  41e8ff:	rex.XB pop r15
  41e901:	add    BYTE PTR [rdi+0x5a],bl
  41e904:	push   rbx
  41e905:	je     0x41e977
  41e907:	ins    BYTE PTR es:[rdi],dx
  41e908:	movsxd rdx,DWORD PTR [r11+0x74]
  41e90c:	xor    DWORD PTR [rcx],esi
  41e90e:	movsxd ebp,DWORD PTR [rax+0x61]
  41e911:	jb     0x41e972
  41e913:	je     0x41e987
  41e915:	(bad)  
  41e916:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
  41e91e:	movsxd rax,DWORD PTR [r13+0x45]
  41e922:	push   rbx
  41e923:	(bad)  
  41e924:	rex.WB push r12
  41e926:	pop    rdi
  41e927:	push   rsp
  41e928:	xor    BYTE PTR [rdi+0x54],bl
  41e92b:	xor    DWORD PTR [rdi+0x45],ebx
  41e92e:	rex.WRXB push r11
  41e930:	ss pop rdi
  41e932:	push   rax
  41e933:	rex.WXB push r11
  41e935:	xor    ebx,DWORD PTR [rdi+0x0]
  41e938:	pop    rdi
  41e939:	pop    rdx
  41e93a:	push   rbx
  41e93b:	je     0x41e9ad
  41e93d:	ins    BYTE PTR es:[rdi],dx
  41e93e:	movsxd rdx,DWORD PTR [r11+0x74]
  41e942:	xor    DWORD PTR [rcx],esi
  41e944:	movsxd ebp,DWORD PTR [rax+0x61]
  41e947:	jb     0x41e9a8
  41e949:	je     0x41e9bd
  41e94b:	(bad)  
  41e94c:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
  41e954:	movsxd rax,DWORD PTR [r13+0x45]
  41e958:	push   rbx
  41e959:	(bad)  
  41e95a:	rex.WB push r12
  41e95c:	pop    rdi
  41e95d:	push   rsp
  41e95e:	xor    BYTE PTR [rdi+0x54],bl
  41e961:	xor    DWORD PTR [rdi+0x45],ebx
  41e964:	rex.WRXB push r11
  41e966:	ss pop rdi
  41e968:	push   rdx
  41e969:	rex.WXB push r11
  41e96b:	ss pop rdi
  41e96d:	add    BYTE PTR [rdi+0x5a],bl
  41e970:	push   rbx
  41e971:	je     0x41e9e3
  41e973:	ins    BYTE PTR es:[rdi],dx
  41e974:	movsxd rdx,DWORD PTR [r11+0x74]
  41e978:	xor    DWORD PTR [rcx],esi
  41e97a:	movsxd ebp,DWORD PTR [rax+0x61]
  41e97d:	jb     0x41e9de
  41e97f:	je     0x41e9f3
  41e981:	(bad)  
  41e982:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
  41e98a:	movsxd rax,DWORD PTR [r13+0x45]
  41e98e:	push   rbx
  41e98f:	(bad)  
  41e990:	rex.WB push r12
  41e992:	pop    rdi
  41e993:	push   rsp
  41e994:	xor    BYTE PTR [rdi+0x54],bl
  41e997:	xor    DWORD PTR [rdi+0x45],ebx
  41e99a:	push   rax
  41e99b:	rex.WXB push r11
  41e99d:	xor    ebx,DWORD PTR [rdi+0x4f]
  41e9a0:	push   rbx
  41e9a1:	ss pop rdi
  41e9a3:	add    BYTE PTR [rdi+0x5a],bl
  41e9a6:	push   rbx
  41e9a7:	je     0x41ea19
  41e9a9:	ins    BYTE PTR es:[rdi],dx
  41e9aa:	movsxd rdx,DWORD PTR [r11+0x74]
  41e9ae:	xor    DWORD PTR [rcx],esi
  41e9b0:	movsxd ebp,DWORD PTR [rax+0x61]
  41e9b3:	jb     0x41ea14
  41e9b5:	je     0x41ea29
  41e9b7:	(bad)  
  41e9b8:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
  41e9c0:	movsxd rax,DWORD PTR [r13+0x45]
  41e9c4:	push   rbx
  41e9c5:	(bad)  
  41e9c6:	rex.WB push r12
  41e9c8:	pop    rdi
  41e9c9:	push   rsp
  41e9ca:	xor    BYTE PTR [rdi+0x54],bl
  41e9cd:	xor    DWORD PTR [rdi+0x45],ebx
  41e9d0:	push   rax
  41e9d1:	rex.WXB push r11
  41e9d3:	xor    ebx,DWORD PTR [rdi+0x52]
  41e9d6:	rex.WXB push r11
  41e9d8:	ss pop rdi
  41e9da:	add    BYTE PTR [rdi+0x5a],bl
  41e9dd:	push   rbx
  41e9de:	je     0x41ea50
  41e9e0:	ins    BYTE PTR es:[rdi],dx
  41e9e1:	movsxd rdx,DWORD PTR [r11+0x74]
  41e9e5:	xor    DWORD PTR [rcx],esi
  41e9e7:	movsxd ebp,DWORD PTR [rax+0x61]
  41e9ea:	jb     0x41ea4b
  41e9ec:	je     0x41ea60
  41e9ee:	(bad)  
  41e9ef:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
  41e9f7:	movsxd rax,DWORD PTR [r13+0x45]
  41e9fb:	push   rbx
  41e9fc:	(bad)  
  41e9fd:	rex.WB push r12
  41e9ff:	pop    rdi
  41ea00:	push   rsp
  41ea01:	xor    BYTE PTR [rdi+0x54],bl
  41ea04:	xor    DWORD PTR [rdi+0x45],ebx
  41ea07:	push   rdx
  41ea08:	rex.WXB push r11
  41ea0a:	ss pop rdi
  41ea0c:	push   rax
  41ea0d:	rex.WXB push r11
  41ea0f:	xor    ebx,DWORD PTR [rdi+0x0]
  41ea12:	pop    rdi
  41ea13:	ins    BYTE PTR es:[edi],dx
  41ea15:	pop    rdi
  41ea16:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  41ea1e:	jns    0x41ea7f
  41ea20:	outs   dx,BYTE PTR ds:[rsi]
  41ea21:	(bad)  
  41ea22:	ins    DWORD PTR es:[rdi],dx
  41ea23:	add    BYTE PTR gs:[rdi+0x67],bl
  41ea27:	ins    BYTE PTR es:[rdi],dx
  41ea28:	pop    rdi
  41ea29:	outs   dx,BYTE PTR ds:[rsi]
  41ea2a:	outs   dx,DWORD PTR ds:[rsi]
  41ea2b:	je     0x41ea95
  41ea2d:	jb     0x41ea9e
  41ea2f:	ja     0x41ea90
  41ea31:	addr32 gs je 0x41ea94
  41ea35:	outs   dx,DWORD PTR ds:[rsi]
  41ea36:	jae    0x41ea9e
  41ea38:	push   0x6c646e61
  41ea3d:	add    BYTE PTR gs:[rdi+0x67],bl
  41ea41:	ins    BYTE PTR es:[rdi],dx
  41ea42:	pop    rdi
  41ea43:	jb     0x41eaaa
  41ea45:	imul   esi,DWORD PTR [ebx+0x74],0x645f7265
  41ea4d:	jne    0x41eabf
  41ea4f:	add    BYTE PTR [rdi+0x67],bl
  41ea52:	ins    BYTE PTR es:[rdi],dx
  41ea53:	pop    rdi
  41ea54:	jb     0x41eabb
  41ea56:	imul   esi,DWORD PTR [ebx+0x74],0x665f7265
  41ea5e:	add    BYTE PTR fs:[rdi+0x67],bl
  41ea62:	ins    BYTE PTR es:[rdi],dx
  41ea63:	pop    rdi
  41ea64:	jne    0x41ead4
  41ea66:	jb     0x41eacd
  41ea68:	imul   esi,DWORD PTR [ebx+0x74],0x665f7265
  41ea70:	add    BYTE PTR fs:[rdx+0x61],ah
  41ea74:	jae    0x41eadb
  41ea76:	pop    rdi
  41ea77:	ins    BYTE PTR es:[rdi],dx
  41ea78:	outs   dx,BYTE PTR gs:[rsi]
  41ea7a:	add    BYTE PTR [rbp+0x78],ah
  41ea7d:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  41ea81:	gs pop rdi
  41ea83:	(bad)  
  41ea84:	ins    BYTE PTR es:[rdi],dx
  41ea85:	ins    BYTE PTR es:[rdi],dx
  41ea86:	pop    rdi
  41ea87:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  41ea8b:	gs pop rdi
  41ea8d:	push   0x736b6f6f
  41ea92:	add    BYTE PTR [rbp+0x78],ah
  41ea95:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  41ea99:	gs pop rdi
  41ea9b:	(bad)  
  41ea9c:	ins    BYTE PTR es:[rdi],dx
  41ea9d:	ins    BYTE PTR es:[rdi],dx
  41ea9e:	pop    rdi
  41ea9f:	imul   ebp,DWORD PTR [rdi+0x63],0x685f6c74
  41eaa6:	outs   dx,DWORD PTR ds:[rsi]
  41eaa7:	outs   dx,DWORD PTR ds:[rsi]
  41eaa8:	imul   esi,DWORD PTR [rbx+0x0],0x65
  41eaac:	js     0x41eb13
  41eaae:	movsxd esi,DWORD PTR [rbp+0x74]
  41eab1:	gs pop rdi
  41eab3:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  41eab7:	gs pop rdi
  41eab9:	push   0x736b6f6f
  41eabe:	add    BYTE PTR [rbp+0x78],ah
  41eac1:	movsxd esi,DWORD PTR gs:[rbp+0x74]
  41eac5:	gs pop rdi
  41eac7:	imul   ebp,DWORD PTR [rdi+0x63],0x685f6c74
  41eace:	outs   dx,DWORD PTR ds:[rsi]
  41eacf:	outs   dx,DWORD PTR ds:[rsi]
  41ead0:	imul   esi,DWORD PTR [rbx+0x0],0x66
  41ead4:	movsxd ebp,DWORD PTR [rax+0x64]
  41ead7:	imul   esi,DWORD PTR [rdx+0x0],0x6d5f6c67
  41eade:	jae    0x41eb56
  41eae0:	movsxd ebx,DWORD PTR [rdi+0x69]
  41eae3:	outs   dx,BYTE PTR ds:[rsi]
  41eae4:	jbe    0x41eb47
  41eae6:	ins    BYTE PTR es:[rdi],dx
  41eae7:	pop    rdi
  41eae8:	outs   dx,BYTE PTR gs:[rsi]
  41eaea:	jae    0x41eb61
  41eaec:	jb     0x41eb53
  41eaee:	pop    rdi
  41eaef:	push   0x6c646e61
  41eaf4:	gs jb  0x41eaf7
  41eaf7:	ins    BYTE PTR es:[rdi],dx
  41eaf8:	(bad)  
  41eaf9:	jae    0x41eb6f
  41eafb:	pop    rdi
  41eafc:	movsxd ebp,DWORD PTR [rdi+0x6d]
  41eaff:	jo     0x41eb70
  41eb01:	outs   dx,BYTE PTR ds:[rsi]
  41eb02:	outs   dx,BYTE PTR gs:[rsi]
  41eb04:	je     0x41eb06
  41eb06:	ins    BYTE PTR es:[rdi],dx
  41eb07:	imul   ebp,DWORD PTR [rsi+0x6b],0x69616d00
  41eb0e:	outs   dx,BYTE PTR ds:[rsi]
  41eb0f:	add    BYTE PTR [rbp+0x66],ch
  41eb12:	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x656d616e
  41eb1a:	pop    rdi
  41eb1b:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41eb1e:	movsxd esp,DWORD PTR [rcx+0x74]
  41eb21:	add    BYTE PTR [rdi+0x63],ch
  41eb24:	je     0x41eb87
  41eb26:	jbe    0x41eb8d
  41eb28:	pop    rdi
  41eb29:	(bad)  
  41eb2a:	movsxd esp,DWORD PTR [rbx+0x65]
  41eb2d:	jae    0x41eba2
  41eb2f:	pop    rdi
  41eb30:	pop    di
  41eb32:	outs   dx,DWORD PTR ds:[rsi]
  41eb33:	imul   eax,DWORD PTR [rax],0x6f
  41eb36:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41eb3a:	gs pop rdi
  41eb3c:	(bad)  
  41eb3d:	movsxd esp,DWORD PTR [rbx+0x65]
  41eb40:	jae    0x41ebb5
  41eb42:	pop    rdi
  41eb43:	jb     0x41eba4
  41eb45:	outs   dx,DWORD PTR ds:[rsi]
  41eb46:	imul   eax,DWORD PTR [rax],0x6f
  41eb49:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41eb4d:	gs pop rdi
  41eb4f:	(bad)  
  41eb50:	movsxd esp,DWORD PTR [rbx+0x65]
  41eb53:	jae    0x41ebc8
  41eb55:	pop    rdi
  41eb56:	ja     0x41ebb7
  41eb58:	outs   dx,DWORD PTR ds:[rsi]
  41eb59:	imul   eax,DWORD PTR [rax],0x6f
  41eb5c:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41eb60:	gs pop rdi
  41eb62:	(bad)  
  41eb63:	movsxd esp,DWORD PTR [rbx+0x65]
  41eb66:	jae    0x41ebdb
  41eb68:	pop    rdi
  41eb69:	ja     0x41ebdd
  41eb6b:	(bad)  
  41eb6c:	jo     0x41ebde
  41eb6e:	gs jb  0x41eb71
  41eb71:	outs   dx,DWORD PTR ds:[rsi]
  41eb72:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41eb76:	gs pop rdi
  41eb78:	(bad)  
  41eb79:	movsxd esp,DWORD PTR [rbx+0x65]
  41eb7c:	jae    0x41ebf1
  41eb7e:	pop    rdi
  41eb7f:	js     0x41ebe0
  41eb81:	outs   dx,DWORD PTR ds:[rsi]
  41eb82:	imul   eax,DWORD PTR [rax],0x6f
  41eb85:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41eb89:	gs pop rdi
  41eb8b:	movsxd ebp,DWORD PTR [rax+0x64]
  41eb8e:	imul   esi,DWORD PTR [rdx+0x5f],0x70617277
  41eb95:	jo     0x41ebfc
  41eb97:	jb     0x41eb99
  41eb99:	outs   dx,DWORD PTR ds:[rsi]
  41eb9a:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41eb9e:	gs pop rdi
  41eba0:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  41eba4:	gs pop rdi
  41eba6:	ja     0x41ec1a
  41eba8:	(bad)  
  41eba9:	jo     0x41ec1b
  41ebab:	gs jb  0x41ebae
  41ebae:	outs   dx,DWORD PTR ds:[rsi]
  41ebaf:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ebb3:	gs pop rdi
  41ebb5:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  41ebb9:	ins    DWORD PTR es:[rdi],dx
  41ebba:	imul   esp,DWORD PTR [rdi+rbx*2+0x77],0x70706172
  41ebc2:	gs jb  0x41ebc5
  41ebc5:	outs   dx,DWORD PTR ds:[rsi]
  41ebc6:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ebca:	gs pop rdi
  41ebcc:	fs jne 0x41ec3f
  41ebcf:	xor    bl,BYTE PTR [rdi+0x77]
  41ebd2:	jb     0x41ec35
  41ebd4:	jo     0x41ec46
  41ebd6:	gs jb  0x41ebd9
  41ebd9:	outs   dx,DWORD PTR ds:[rsi]
  41ebda:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ebde:	gs pop rdi
  41ebe0:	gs js  0x41ec48
  41ebe3:	movsxd esi,DWORD PTR [rsi+0x5f]
  41ebe6:	ja     0x41ec5a
  41ebe8:	(bad)  
  41ebe9:	jo     0x41ec5b
  41ebeb:	gs jb  0x41ebee
  41ebee:	outs   dx,DWORD PTR ds:[rsi]
  41ebef:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ebf3:	gs pop rdi
  41ebf5:	gs js  0x41ec5d
  41ebf8:	movsxd esi,DWORD PTR [rsi+0x70]
  41ebfb:	pop    rdi
  41ebfc:	ja     0x41ec70
  41ebfe:	(bad)  
  41ebff:	jo     0x41ec71
  41ec01:	gs jb  0x41ec04
  41ec04:	outs   dx,DWORD PTR ds:[rsi]
  41ec05:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ec09:	gs pop rdi
  41ec0b:	outs   dx,WORD PTR ds:[rsi]
  41ec0d:	jb     0x41ec7a
  41ec0f:	pop    rdi
  41ec10:	ja     0x41ec84
  41ec12:	(bad)  
  41ec13:	jo     0x41ec85
  41ec15:	gs jb  0x41ec18
  41ec18:	outs   dx,DWORD PTR ds:[rsi]
  41ec19:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ec1d:	gs pop rdi
  41ec1f:	data16 je 0x41ec94
  41ec22:	jne    0x41ec92
  41ec24:	movsxd esp,DWORD PTR [rcx+0x74]
  41ec27:	gs pop rdi
  41ec29:	ja     0x41ec9d
  41ec2b:	(bad)  
  41ec2c:	jo     0x41ec9e
  41ec2e:	gs jb  0x41ec31
  41ec31:	outs   dx,DWORD PTR ds:[rsi]
  41ec32:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ec36:	gs pop rdi
  41ec38:	addr32 gs je 0x41ec9f
  41ec3c:	ja     0x41eca2
  41ec3e:	pop    rdi
  41ec3f:	ja     0x41ecb3
  41ec41:	(bad)  
  41ec42:	jo     0x41ecb4
  41ec44:	gs jb  0x41ec47
  41ec47:	outs   dx,DWORD PTR ds:[rsi]
  41ec48:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ec4c:	gs pop rdi
  41ec4e:	addr32 gs je 0x41ecb7
  41ec52:	imul   esp,DWORD PTR [edi+ebx*2+0x77],0x70706172
  41ec5b:	gs jb  0x41ec5e
  41ec5e:	outs   dx,DWORD PTR ds:[rsi]
  41ec5f:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ec63:	gs pop rdi
  41ec65:	addr32 gs je 0x41ecce
  41ec69:	jne    0x41ecd4
  41ec6b:	fs pop rdi
  41ec6d:	ja     0x41ece1
  41ec6f:	(bad)  
  41ec70:	jo     0x41ece2
  41ec72:	gs jb  0x41ec75
  41ec75:	outs   dx,DWORD PTR ds:[rsi]
  41ec76:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ec7a:	gs pop rdi
  41ec7c:	addr32 gs je 0x41ece7
  41ec80:	imul   esp,DWORD PTR [rdi+rbx*2+0x77],0x70706172
  41ec88:	gs jb  0x41ec8b
  41ec8b:	outs   dx,DWORD PTR ds:[rsi]
  41ec8c:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ec90:	gs pop rdi
  41ec92:	addr32 gs je 0x41ecfe
  41ec96:	outs   dx,DWORD PTR ds:[rsi]
  41ec97:	jae    0x41ed0d
  41ec99:	outs   dx,BYTE PTR ds:[rsi]
  41ec9a:	(bad)  
  41ec9b:	ins    DWORD PTR es:[rdi],dx
  41ec9c:	gs pop rdi
  41ec9e:	ja     0x41ed12
  41eca0:	(bad)  
  41eca1:	jo     0x41ed13
  41eca3:	gs jb  0x41eca6
  41eca6:	outs   dx,DWORD PTR ds:[rsi]
  41eca7:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ecab:	gs pop rdi
  41ecad:	addr32 gs je 0x41ed21
  41ecb1:	addr32 jb 0x41ed24
  41ecb4:	pop    rdi
  41ecb5:	ja     0x41ed29
  41ecb7:	(bad)  
  41ecb8:	jo     0x41ed2a
  41ecba:	gs jb  0x41ecbd
  41ecbd:	outs   dx,DWORD PTR ds:[rsi]
  41ecbe:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ecc2:	gs pop rdi
  41ecc4:	addr32 gs je 0x41ed38
  41ecc8:	imul   esp,DWORD PTR [rdi+rbx*2+0x77],0x70706172
  41ecd0:	gs jb  0x41ecd3
  41ecd3:	outs   dx,DWORD PTR ds:[rsi]
  41ecd4:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ecd8:	gs pop rdi
  41ecda:	addr32 gs je 0x41ed4e
  41ecde:	jo     0x41ed49
  41ece0:	fs pop rdi
  41ece2:	ja     0x41ed56
  41ece4:	(bad)  
  41ece5:	jo     0x41ed57
  41ece7:	gs jb  0x41ecea
  41ecea:	outs   dx,DWORD PTR ds:[rsi]
  41eceb:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ecef:	gs pop rdi
  41ecf1:	addr32 gs je 0x41ed6a
  41ecf5:	imul   esp,DWORD PTR [rdi+rbx*2+0x77],0x70706172
  41ecfd:	gs jb  0x41ed00
  41ed00:	outs   dx,DWORD PTR ds:[rsi]
  41ed01:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ed05:	gs pop rdi
  41ed07:	push   0x5f657661
  41ed0c:	outs   dx,WORD PTR ds:[rsi]
  41ed0e:	jb     0x41ed7b
  41ed10:	add    BYTE PTR [rdi+0x63],ch
  41ed13:	je     0x41ed76
  41ed15:	jbe    0x41ed7c
  41ed17:	pop    rdi
  41ed18:	push   0x5f657661
  41ed1d:	jbe    0x41ed85
  41ed1f:	outs   dx,DWORD PTR ds:[rsi]
  41ed20:	jb     0x41ed8d
  41ed22:	add    BYTE PTR [rdi+0x63],ch
  41ed25:	je     0x41ed88
  41ed27:	jbe    0x41ed8e
  41ed29:	pop    rdi
  41ed2a:	imul   esi,DWORD PTR [rbx+0x61],0x5f797474
  41ed31:	ja     0x41eda5
  41ed33:	(bad)  
  41ed34:	jo     0x41eda6
  41ed36:	gs jb  0x41ed39
  41ed39:	outs   dx,DWORD PTR ds:[rsi]
  41ed3a:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ed3e:	gs pop rdi
  41ed40:	ins    BYTE PTR es:[rdi],dx
  41ed41:	imul   ebp,DWORD PTR [rsi+0x6b],0x6172775f
  41ed48:	jo     0x41edba
  41ed4a:	gs jb  0x41ed4d
  41ed4d:	outs   dx,DWORD PTR ds:[rsi]
  41ed4e:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ed52:	gs pop rdi
  41ed54:	jo     0x41edbf
  41ed56:	jo     0x41edbd
  41ed58:	pop    rdi
  41ed59:	ja     0x41edcd
  41ed5b:	(bad)  
  41ed5c:	jo     0x41edce
  41ed5e:	gs jb  0x41ed61
  41ed61:	outs   dx,DWORD PTR ds:[rsi]
  41ed62:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ed66:	gs pop rdi
  41ed68:	jb     0x41edd7
  41ed6a:	imul   esi,DWORD PTR fs:[rdx+0x5f],0x70617277
  41ed72:	jo     0x41edd9
  41ed74:	jb     0x41ed76
  41ed76:	outs   dx,DWORD PTR ds:[rsi]
  41ed77:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ed7b:	gs pop rdi
  41ed7d:	jae    0x41ede4
  41ed7f:	je     0x41edf4
  41ed81:	imul   esp,DWORD PTR [rdi+rbx*2+0x77],0x70706172
  41ed89:	gs jb  0x41ed8c
  41ed8c:	outs   dx,DWORD PTR ds:[rsi]
  41ed8d:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ed91:	gs pop rdi
  41ed93:	jae    0x41ee09
  41ed95:	imul   ebp,DWORD PTR fs:[rsi+0x5f],0x656c6966
  41ed9d:	outs   dx,BYTE PTR ds:[rsi]
  41ed9e:	outs   dx,DWORD PTR ds:[rsi]
  41ed9f:	add    BYTE PTR [rdi+0x63],ch
  41eda2:	je     0x41ee05
  41eda4:	jbe    0x41ee0b
  41eda6:	pop    rdi
  41eda7:	jae    0x41ee1d
  41eda9:	outs   dx,DWORD PTR fs:[rsi]
  41edab:	jne    0x41ee21
  41edad:	pop    rdi
  41edae:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
  41edb5:	outs   dx,DWORD PTR ds:[rsi]
  41edb6:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41edba:	gs pop rdi
  41edbc:	jae    0x41ee37
  41edbe:	ins    DWORD PTR es:[rdi],dx
  41edbf:	ins    BYTE PTR es:[rdi],dx
  41edc0:	imul   ebp,DWORD PTR [rsi+0x6b],0x6172775f
  41edc7:	jo     0x41ee39
  41edc9:	gs jb  0x41edcc
  41edcc:	outs   dx,DWORD PTR ds:[rsi]
  41edcd:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41edd1:	gs pop rdi
  41edd3:	jne    0x41ee43
  41edd5:	ins    BYTE PTR es:[rdi],dx
  41edd6:	imul   ebp,DWORD PTR [rsi+0x6b],0x6172775f
  41eddd:	jo     0x41ee4f
  41eddf:	gs jb  0x41ede2
  41ede2:	outs   dx,DWORD PTR ds:[rsi]
  41ede3:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ede7:	gs pop rdi
  41ede9:	jbe    0x41ee51
  41edeb:	outs   dx,DWORD PTR ds:[rsi]
  41edec:	jb     0x41ee59
  41edee:	pop    rdi
  41edef:	ja     0x41ee63
  41edf1:	(bad)  
  41edf2:	jo     0x41ee64
  41edf4:	gs jb  0x41edf7
  41edf7:	outs   dx,DWORD PTR ds:[rsi]
  41edf8:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41edfc:	gs pop rdi
  41edfe:	ja     0x41ee61
  41ee00:	imul   esi,DWORD PTR [rax+rsi*2+0x69],0x72775f64
  41ee08:	(bad)  
  41ee09:	jo     0x41ee7b
  41ee0b:	gs jb  0x41ee0e
  41ee0e:	outs   dx,DWORD PTR ds:[rsi]
  41ee0f:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ee13:	gs pop rdi
  41ee15:	ja     0x41ee7a
  41ee17:	outs   dx,DWORD PTR ds:[rsi]
  41ee18:	outs   dx,BYTE PTR ds:[rsi]
  41ee19:	je     0x41ee84
  41ee1b:	outs   dx,BYTE PTR ds:[rsi]
  41ee1c:	jne    0x41ee83
  41ee1e:	pop    rdi
  41ee1f:	ja     0x41ee93
  41ee21:	(bad)  
  41ee22:	jo     0x41ee94
  41ee24:	gs jb  0x41ee27
  41ee27:	outs   dx,DWORD PTR ds:[rsi]
  41ee28:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ee2c:	gs pop rdi
  41ee2e:	ja     0x41ee93
  41ee30:	outs   dx,DWORD PTR ds:[rsi]
  41ee31:	jb     0x41ee98
  41ee33:	fs jne 0x41eea3
  41ee36:	jo     0x41ee97
  41ee38:	ja     0x41eeac
  41ee3a:	(bad)  
  41ee3b:	jo     0x41eead
  41ee3d:	gs jb  0x41ee40
  41ee40:	outs   dx,DWORD PTR ds:[rsi]
  41ee41:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ee45:	gs pop rdi
  41ee47:	ja     0x41eeae
  41ee49:	js     0x41eeb4
  41ee4b:	je     0x41eec0
  41ee4d:	je     0x41eeb0
  41ee4f:	je     0x41eec6
  41ee51:	jae    0x41eeb2
  41ee53:	ja     0x41eec7
  41ee55:	(bad)  
  41ee56:	jo     0x41eec8
  41ee58:	gs jb  0x41ee5b
  41ee5b:	outs   dx,DWORD PTR ds:[rsi]
  41ee5c:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ee60:	gs pop rdi
  41ee62:	ja     0x41eecd
  41ee64:	movsxd bp,DWORD PTR [rdi+0x6e]
  41ee68:	je     0x41eed3
  41ee6a:	outs   dx,BYTE PTR ds:[rsi]
  41ee6b:	jne    0x41eed2
  41ee6d:	fs pop rdi
  41ee6f:	ja     0x41eee3
  41ee71:	(bad)  
  41ee72:	jo     0x41eee4
  41ee74:	gs jb  0x41ee77
  41ee77:	outs   dx,DWORD PTR ds:[rsi]
  41ee78:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ee7c:	gs pop rdi
  41ee7e:	ja     0x41eee9
  41ee80:	data16 gs js 0x41eeed
  41ee84:	je     0x41eeeb
  41ee86:	fs pop rdi
  41ee88:	ja     0x41eefc
  41ee8a:	(bad)  
  41ee8b:	jo     0x41eefd
  41ee8d:	gs jb  0x41ee90
  41ee90:	outs   dx,DWORD PTR ds:[rsi]
  41ee91:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ee95:	gs pop rdi
  41ee97:	ja     0x41ef02
  41ee99:	data16 jae 0x41ef05
  41ee9c:	outs   dx,BYTE PTR ds:[esi]
  41ee9e:	(bad)  
  41ee9f:	ins    BYTE PTR es:[rdi],dx
  41eea0:	gs fs pop rdi
  41eea3:	ja     0x41ef17
  41eea5:	(bad)  
  41eea6:	jo     0x41ef18
  41eea8:	gs jb  0x41eeab
  41eeab:	outs   dx,DWORD PTR ds:[rsi]
  41eeac:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41eeb0:	gs pop rdi
  41eeb2:	ja     0x41ef1d
  41eeb4:	data16 jae 0x41ef2b
  41eeb7:	outs   dx,DWORD PTR ds:[rsi]
  41eeb8:	jo     0x41ef2a
  41eeba:	gs fs pop rdi
  41eebd:	ja     0x41ef31
  41eebf:	(bad)  
  41eec0:	jo     0x41ef32
  41eec2:	gs jb  0x41eec5
  41eec5:	outs   dx,DWORD PTR ds:[rsi]
  41eec6:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41eeca:	gs pop rdi
  41eecc:	ja     0x41ef3c
  41eece:	outs   dx,DWORD PTR ds:[rsi]
  41eecf:	push   0x5f676e61
  41eed4:	ja     0x41ef48
  41eed6:	(bad)  
  41eed7:	jo     0x41ef49
  41eed9:	gs jb  0x41eedc
  41eedc:	outs   dx,DWORD PTR ds:[rsi]
  41eedd:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41eee1:	gs pop rdi
  41eee3:	ja     0x41ef58
  41eee5:	je     0x41ef56
  41eee7:	jo     0x41ef5c
  41eee9:	imul   esp,DWORD PTR [rdi+0x5f],0x70617277
  41eef0:	jo     0x41ef57
  41eef2:	jb     0x41eef4
  41eef4:	outs   dx,DWORD PTR ds:[rsi]
  41eef5:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41eef9:	gs pop rdi
  41eefb:	ja     0x41ef71
  41eefd:	gs jb  0x41ef6d
  41ef00:	jae    0x41ef6b
  41ef02:	addr32 pop rdi
  41ef04:	ja     0x41ef78
  41ef06:	(bad)  
  41ef07:	jo     0x41ef79
  41ef09:	gs jb  0x41ef0c
  41ef0c:	outs   dx,DWORD PTR ds:[rsi]
  41ef0d:	movsxd esi,DWORD PTR [rcx+riz*2+0x76]
  41ef11:	gs pop rdi
  41ef13:	ja     0x41ef8a
  41ef15:	outs   dx,BYTE PTR ds:[rsi]
  41ef16:	je     0x41ef8a
  41ef18:	(bad)  
  41ef19:	movsxd esp,DWORD PTR [rbp+0x64]
  41ef1c:	pop    rdi
  41ef1d:	ja     0x41ef91
  41ef1f:	(bad)  
  41ef20:	jo     0x41ef92
  41ef22:	gs jb  0x41ef25
  41ef25:	jo     0x41ef90
  41ef27:	jo     0x41ef8e
  41ef29:	add    BYTE PTR [rdx+0x65],dh
  41ef2c:	imul   esi,DWORD PTR [ebx+0x74],0x665f7265
  41ef34:	fs pop rdi
  41ef36:	push   0x6b6f6f
  41ef3b:	jb     0x41efad
  41ef3d:	ins    BYTE PTR es:[rdi],dx
  41ef3e:	pop    rdi
  41ef3f:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  41ef43:	add    BYTE PTR gs:[rdx+0x70],dh
  41ef47:	ins    BYTE PTR es:[rdi],dx
  41ef48:	pop    rdi
  41ef49:	fs jne 0x41efbc
  41ef4c:	xor    al,BYTE PTR [rax]
  41ef4e:	jb     0x41efc0
  41ef50:	ins    BYTE PTR es:[rdi],dx
  41ef51:	pop    rdi
  41ef52:	data16 je 0x41efc7
  41ef55:	jne    0x41efc5
  41ef57:	movsxd esp,DWORD PTR [rcx+0x74]
  41ef5a:	add    BYTE PTR gs:[rdx+0x70],dh
  41ef5e:	ins    BYTE PTR es:[rdi],dx
  41ef5f:	pop    rdi
  41ef60:	addr32 gs je 0x41efc7
  41ef64:	ja     0x41efca
  41ef66:	add    BYTE PTR [rdx+0x70],dh
  41ef69:	ins    BYTE PTR es:[rdi],dx
  41ef6a:	pop    rdi
  41ef6b:	imul   esi,DWORD PTR [rbx+0x61],0x797474
  41ef72:	jb     0x41efe4
  41ef74:	ins    BYTE PTR es:[rdi],dx
  41ef75:	pop    rdi
  41ef76:	ins    DWORD PTR es:[rdi],dx
  41ef77:	(bad)  
  41ef78:	ins    BYTE PTR es:[rdi],dx
  41ef79:	ins    BYTE PTR es:[rdi],dx
  41ef7a:	outs   dx,DWORD PTR ds:[rsi]
  41ef7b:	movsxd eax,DWORD PTR [rax]
  41ef7d:	jb     0x41efef
  41ef7f:	ins    BYTE PTR es:[rdi],dx
  41ef80:	pop    rdi
  41ef81:	jb     0x41efe8
  41ef83:	(bad)  
  41ef84:	ins    BYTE PTR es:[rdi],dx
  41ef85:	ins    BYTE PTR es:[rdi],dx
  41ef86:	outs   dx,DWORD PTR ds:[rsi]
  41ef87:	movsxd eax,DWORD PTR [rax]
  41ef89:	jb     0x41effb
  41ef8b:	ins    BYTE PTR es:[rdi],dx
  41ef8c:	pop    rdi
  41ef8d:	jb     0x41effc
  41ef8f:	imul   esi,DWORD PTR fs:[rdx+0x0],0x5f6c7072
  41ef97:	jae    0x41f00d
  41ef99:	(bad)  
  41ef9a:	je     0x41ef9c
  41ef9c:	jb     0x41f00e
  41ef9e:	ins    BYTE PTR es:[rdi],dx
  41ef9f:	pop    rdi
  41efa0:	jae    0x41f016
  41efa2:	jb     0x41f008
  41efa4:	jne    0x41f016
  41efa6:	add    BYTE PTR [rdx+0x70],dh
  41efa9:	ins    BYTE PTR es:[rdi],dx
  41efaa:	pop    rdi
  41efab:	jne    0x41f01b
  41efad:	ins    BYTE PTR es:[rdi],dx
  41efae:	imul   ebp,DWORD PTR [rsi+0x6b],0x6d797300
  41efb5:	ins    BYTE PTR es:[rdi],dx
  41efb6:	imul   ebp,DWORD PTR [rsi+0x6b],0x726e7500
  41efbd:	imul   esi,DWORD PTR gs:[ebx+0x74],0x665f7265
  41efc6:	fs pop rdi
  41efc8:	push   0x6b6f6f

Disassembly of section .idata:

000000000041f000 <.idata>:
  41f000:	mov    eax,?
  41f002:	add    DWORD PTR [rax],eax
	...
  41f00c:	ins    BYTE PTR es:[rdi],dx
  41f00d:	or     DWORD PTR [rdx],eax
  41f00f:	add    ah,bh
  41f011:	cmc    
  41f012:	add    DWORD PTR [rax],eax
  41f014:	pushf  
  41f015:	lock add DWORD PTR [rax],eax
	...
  41f020:	nop
  41f021:	or     al,BYTE PTR [rdx]
  41f023:	add    BYTE PTR [rsi+rsi*8],cl
  41f026:	add    DWORD PTR [rax],eax
  41f028:	(bad)  
  41f029:	repnz add DWORD PTR [rax],eax
	...
  41f034:	sbb    BYTE PTR [rbx],cl
  41f036:	add    al,BYTE PTR [rax]
  41f038:	xor    al,0xf8
  41f03a:	add    DWORD PTR [rax],eax
  41f03c:	mov    esp,0x1f3
  41f041:	add    BYTE PTR [rax],al
  41f043:	add    BYTE PTR [rax],al
  41f045:	add    BYTE PTR [rax],al
  41f047:	add    BYTE PTR [rsp+rcx*1],dh
  41f04a:	add    al,BYTE PTR [rax]
  41f04c:	sub    al,0xf9
  41f04e:	add    DWORD PTR [rax],eax
  41f050:	fdivr  st(5),st
  41f052:	add    DWORD PTR [rax],eax
	...
  41f05c:	rex.R or al,0x2
  41f05f:	add    BYTE PTR [rbx+rdi*8+0x1],cl
  41f063:	add    ah,ch
  41f065:	cmc    
  41f066:	add    DWORD PTR [rax],eax
	...
  41f070:	push   rsp
  41f071:	or     al,0x2
  41f073:	add    BYTE PTR [rbx+rdi*8+0x1],bl
	...
  41f08b:	add    BYTE PTR [rbx+rdi*8+0x1],ch
	...
  41f09b:	add    BYTE PTR [rax+0x1fb],al
  41f0a1:	add    BYTE PTR [rax],al
  41f0a3:	add    BYTE PTR [rbx+rdi*8+0x1],dl
  41f0aa:	add    BYTE PTR [rax],al
  41f0ac:	test   al,0xfb
  41f0ae:	add    DWORD PTR [rax],eax
  41f0b0:	add    BYTE PTR [rax],al
  41f0b2:	add    BYTE PTR [rax],al
  41f0b4:	mov    esp,0x1fb
  41f0b9:	add    BYTE PTR [rax],al
  41f0bb:	add    al,dl
  41f0bd:	sti    
  41f0be:	add    DWORD PTR [rax],eax
  41f0c0:	add    BYTE PTR [rax],al
  41f0c2:	add    BYTE PTR [rax],al
  41f0c4:	call   0x41f2c4
  41f0c9:	add    BYTE PTR [rax],al
  41f0cb:	add    ah,bh
  41f0cd:	sti    
  41f0ce:	add    DWORD PTR [rax],eax
  41f0d0:	add    BYTE PTR [rax],al
  41f0d2:	add    BYTE PTR [rax],al
  41f0d4:	adc    ah,bh
  41f0d6:	add    DWORD PTR [rax],eax
  41f0d8:	add    BYTE PTR [rax],al
  41f0da:	add    BYTE PTR [rax],al
  41f0dc:	sub    ah,bh
  41f0de:	add    DWORD PTR [rax],eax
  41f0e0:	add    BYTE PTR [rax],al
  41f0e2:	add    BYTE PTR [rax],al
  41f0e4:	rex.WR cld 
  41f0e6:	add    DWORD PTR [rax],eax
  41f0e8:	add    BYTE PTR [rax],al
  41f0ea:	add    BYTE PTR [rax],al
  41f0ec:	pop    rsp
  41f0ed:	cld    
  41f0ee:	add    DWORD PTR [rax],eax
  41f0f0:	add    BYTE PTR [rax],al
  41f0f2:	add    BYTE PTR [rax],al
  41f0f4:	ins    BYTE PTR es:[rdi],dx
  41f0f5:	cld    
  41f0f6:	add    DWORD PTR [rax],eax
  41f0f8:	add    BYTE PTR [rax],al
  41f0fa:	add    BYTE PTR [rax],al
  41f0fc:	test   ah,bh
  41f0fe:	add    DWORD PTR [rax],eax
  41f100:	add    BYTE PTR [rax],al
  41f102:	add    BYTE PTR [rax],al
  41f104:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41f105:	cld    
  41f106:	add    DWORD PTR [rax],eax
  41f108:	add    BYTE PTR [rax],al
  41f10a:	add    BYTE PTR [rax],al
  41f10c:	mov    ah,0xfc
  41f10e:	add    DWORD PTR [rax],eax
  41f110:	add    BYTE PTR [rax],al
  41f112:	add    BYTE PTR [rax],al
  41f114:	fdivr  st,st(4)
  41f116:	add    DWORD PTR [rax],eax
  41f118:	add    BYTE PTR [rax],al
  41f11a:	add    BYTE PTR [rax],al
  41f11c:	cld    
  41f11d:	cld    
  41f11e:	add    DWORD PTR [rax],eax
  41f120:	add    BYTE PTR [rax],al
  41f122:	add    BYTE PTR [rax],al
  41f124:	adc    ch,bh
  41f126:	add    DWORD PTR [rax],eax
  41f128:	add    BYTE PTR [rax],al
  41f12a:	add    BYTE PTR [rax],al
  41f12c:	and    al,0xfd
  41f12e:	add    DWORD PTR [rax],eax
  41f130:	add    BYTE PTR [rax],al
  41f132:	add    BYTE PTR [rax],al
  41f134:	cmp    ch,bh
  41f136:	add    DWORD PTR [rax],eax
  41f138:	add    BYTE PTR [rax],al
  41f13a:	add    BYTE PTR [rax],al
  41f13c:	rex.WR std 
  41f13e:	add    DWORD PTR [rax],eax
  41f140:	add    BYTE PTR [rax],al
  41f142:	add    BYTE PTR [rax],al
  41f144:	(bad)  
  41f145:	std    
  41f146:	add    DWORD PTR [rax],eax
  41f148:	add    BYTE PTR [rax],al
  41f14a:	add    BYTE PTR [rax],al
  41f14c:	je     0x41f14b
  41f14e:	add    DWORD PTR [rax],eax
  41f150:	add    BYTE PTR [rax],al
  41f152:	add    BYTE PTR [rax],al
  41f154:	mov    ebp,?
  41f156:	add    DWORD PTR [rax],eax
  41f158:	add    BYTE PTR [rax],al
  41f15a:	add    BYTE PTR [rax],al
  41f15c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41f15d:	std    
  41f15e:	add    DWORD PTR [rax],eax
  41f160:	add    BYTE PTR [rax],al
  41f162:	add    BYTE PTR [rax],al
  41f164:	mov    eax,0x1fd
  41f169:	add    BYTE PTR [rax],al
  41f16b:	add    al,dl
  41f16d:	std    
  41f16e:	add    DWORD PTR [rax],eax
  41f170:	add    BYTE PTR [rax],al
  41f172:	add    BYTE PTR [rax],al
  41f174:	call   0x41f376
  41f179:	add    BYTE PTR [rax],al
  41f17b:	add    al,bh
  41f17d:	std    
  41f17e:	add    DWORD PTR [rax],eax
  41f180:	add    BYTE PTR [rax],al
  41f182:	add    BYTE PTR [rax],al
  41f184:	or     al,0xfe
  41f186:	add    DWORD PTR [rax],eax
  41f188:	add    BYTE PTR [rax],al
  41f18a:	add    BYTE PTR [rax],al
  41f18c:	sub    al,0xfe
  41f18e:	add    DWORD PTR [rax],eax
  41f190:	add    BYTE PTR [rax],al
  41f192:	add    BYTE PTR [rax],al
  41f194:	je     0x41f194
  41f196:	add    DWORD PTR [rax],eax
  41f198:	add    BYTE PTR [rax],al
  41f19a:	add    BYTE PTR [rax],al
  41f19c:	test   al,0xfe
  41f19e:	add    DWORD PTR [rax],eax
  41f1a0:	add    BYTE PTR [rax],al
  41f1a2:	add    BYTE PTR [rax],al
  41f1a4:	fdivr  st,st(6)
  41f1a6:	add    DWORD PTR [rax],eax
  41f1a8:	add    BYTE PTR [rax],al
  41f1aa:	add    BYTE PTR [rax],al
  41f1ac:	or     bh,bh
  41f1ae:	add    DWORD PTR [rax],eax
  41f1b0:	add    BYTE PTR [rax],al
  41f1b2:	add    BYTE PTR [rax],al
  41f1b4:	cmp    al,0xff
  41f1b6:	add    DWORD PTR [rax],eax
  41f1b8:	add    BYTE PTR [rax],al
  41f1ba:	add    BYTE PTR [rax],al
  41f1bc:	push   rax
  41f1bd:	inc    DWORD PTR [rcx]
  41f1bf:	add    BYTE PTR [rax],al
  41f1c1:	add    BYTE PTR [rax],al
  41f1c3:	add    BYTE PTR [rax+0x1ff],al
  41f1c9:	add    BYTE PTR [rax],al
  41f1cb:	add    BYTE PTR [rdi+rdi*8+0x1],bl
  41f1d2:	add    BYTE PTR [rax],al
  41f1d4:	mov    eax,0x1ff
  41f1d9:	add    BYTE PTR [rax],al
  41f1db:	add    al,dl
  41f1dd:	inc    DWORD PTR [rcx]
  41f1df:	add    BYTE PTR [rax],al
  41f1e1:	add    BYTE PTR [rax],al
  41f1e3:	add    al,ch
  41f1e5:	inc    DWORD PTR [rcx]
  41f1e7:	add    BYTE PTR [rax],al
  41f1e9:	add    BYTE PTR [rax],al
  41f1eb:	add    BYTE PTR [rax],dh
  41f1ed:	add    BYTE PTR [rdx],al
  41f1ef:	add    BYTE PTR [rax],al
  41f1f1:	add    BYTE PTR [rax],al
  41f1f3:	add    BYTE PTR [rax+0x0],dh
  41f1f6:	add    al,BYTE PTR [rax]
  41f1f8:	add    BYTE PTR [rax],al
  41f1fa:	add    BYTE PTR [rax],al
  41f1fc:	rol    BYTE PTR [rax],0x2
  41f1ff:	add    BYTE PTR [rax],al
  41f201:	add    BYTE PTR [rax],al
  41f203:	add    ah,bl
  41f205:	add    BYTE PTR [rdx],al
  41f207:	add    BYTE PTR [rax],al
  41f209:	add    BYTE PTR [rax],al
  41f20b:	add    BYTE PTR [rax],dl
  41f20d:	add    DWORD PTR [rdx],eax
  41f20f:	add    BYTE PTR [rax],al
  41f211:	add    BYTE PTR [rax],al
  41f213:	add    BYTE PTR [rcx+rax*1+0x2],al
  41f217:	add    BYTE PTR [rax],al
  41f219:	add    BYTE PTR [rax],al
  41f21b:	add    BYTE PTR [rcx+rax*1+0x2],ah
  41f21f:	add    BYTE PTR [rax],al
  41f221:	add    BYTE PTR [rax],al
  41f223:	add    BYTE PTR [rcx+rax*1+0x2],cl
  41f22a:	add    BYTE PTR [rax],al
  41f22c:	rol    BYTE PTR [rcx],1
  41f22e:	add    al,BYTE PTR [rax]
  41f230:	add    BYTE PTR [rax],al
  41f232:	add    BYTE PTR [rax],al
  41f234:	fadd   QWORD PTR [rcx]
  41f236:	add    al,BYTE PTR [rax]
  41f238:	add    BYTE PTR [rax],al
  41f23a:	add    BYTE PTR [rax],al
  41f23c:	call   0x41f442
  41f241:	add    BYTE PTR [rax],al
  41f243:	add    BYTE PTR [rax],ch
  41f245:	add    al,BYTE PTR [rdx]
  41f247:	add    BYTE PTR [rax],al
  41f249:	add    BYTE PTR [rax],al
  41f24b:	add    BYTE PTR [rdx+rax*1+0x2],ah
  41f24f:	add    BYTE PTR [rax],al
  41f251:	add    BYTE PTR [rax],al
  41f253:	add    BYTE PTR [rdx+rax*1+0x2],dl
  41f25a:	add    BYTE PTR [rax],al
  41f25c:	(bad)
  41f260:	add    BYTE PTR [rax],al
  41f262:	add    BYTE PTR [rax],al
  41f264:	hlt    
  41f265:	add    al,BYTE PTR [rdx]
  41f267:	add    BYTE PTR [rax],al
  41f269:	add    BYTE PTR [rax],al
  41f26b:	add    BYTE PTR [rbx+rax*1],ah
  41f26e:	add    al,BYTE PTR [rax]
  41f270:	add    BYTE PTR [rax],al
  41f272:	add    BYTE PTR [rax],al
  41f274:	add    r8,QWORD PTR [rdx]
  41f277:	add    BYTE PTR [rax],al
  41f279:	add    BYTE PTR [rax],al
  41f27b:	add    BYTE PTR [rax+0x3],bl
  41f27e:	add    al,BYTE PTR [rax]
  41f280:	add    BYTE PTR [rax],al
  41f282:	add    BYTE PTR [rax],al
  41f284:	(bad)  
  41f285:	add    eax,DWORD PTR [rdx]
  41f287:	add    BYTE PTR [rax],al
  41f289:	add    BYTE PTR [rax],al
  41f28b:	add    BYTE PTR [rbx+rax*1+0x2],dh
  41f28f:	add    BYTE PTR [rax],al
  41f291:	add    BYTE PTR [rax],al
  41f293:	add    BYTE PTR [rax+0x203],cl
  41f299:	add    BYTE PTR [rax],al
  41f29b:	add    BYTE PTR [rbx+rax*1+0x2],bl
  41f2a2:	add    BYTE PTR [rax],al
  41f2a4:	mov    ah,0x3
  41f2a6:	add    al,BYTE PTR [rax]
  41f2a8:	add    BYTE PTR [rax],al
  41f2aa:	add    BYTE PTR [rax],al
  41f2ac:	int3   
  41f2ad:	add    eax,DWORD PTR [rdx]
  41f2af:	add    BYTE PTR [rax],al
  41f2b1:	add    BYTE PTR [rax],al
  41f2b3:	add    ah,bl
  41f2b5:	add    eax,DWORD PTR [rdx]
	...
  41f2c3:	add    al,bh
  41f2c5:	add    eax,DWORD PTR [rdx]
  41f2c7:	add    BYTE PTR [rax],al
  41f2c9:	add    BYTE PTR [rax],al
  41f2cb:	add    BYTE PTR [rax],dl
  41f2cd:	add    al,0x2
  41f2cf:	add    BYTE PTR [rax],al
  41f2d1:	add    BYTE PTR [rax],al
  41f2d3:	add    BYTE PTR [rax],ch
  41f2d5:	add    al,0x2
  41f2d7:	add    BYTE PTR [rax],al
  41f2d9:	add    BYTE PTR [rax],al
  41f2db:	add    BYTE PTR [rdx],bh
  41f2dd:	add    al,0x2
  41f2df:	add    BYTE PTR [rax],al
  41f2e1:	add    BYTE PTR [rax],al
  41f2e3:	add    BYTE PTR [rsi+0x4],cl
  41f2e6:	add    al,BYTE PTR [rax]
  41f2e8:	add    BYTE PTR [rax],al
  41f2ea:	add    BYTE PTR [rax],al
  41f2ec:	fs add al,0x2
  41f2ef:	add    BYTE PTR [rax],al
  41f2f1:	add    BYTE PTR [rax],al
  41f2f3:	add    BYTE PTR [rdx+0x4],bh
  41f2f6:	add    al,BYTE PTR [rax]
  41f2f8:	add    BYTE PTR [rax],al
  41f2fa:	add    BYTE PTR [rax],al
  41f2fc:	nop
  41f2fd:	add    al,0x2
  41f2ff:	add    BYTE PTR [rax],al
  41f301:	add    BYTE PTR [rax],al
  41f303:	add    BYTE PTR [rax+0x204],ah
  41f309:	add    BYTE PTR [rax],al
  41f30b:	add    BYTE PTR [rsi+0x204],dh
  41f311:	add    BYTE PTR [rax],al
  41f313:	add    ah,cl
  41f315:	add    al,0x2
  41f317:	add    BYTE PTR [rax],al
  41f319:	add    BYTE PTR [rax],al
  41f31b:	add    al,ah
  41f31d:	add    al,0x2
  41f31f:	add    BYTE PTR [rax],al
  41f321:	add    BYTE PTR [rax],al
  41f323:	add    dl,dh
  41f325:	add    al,0x2
  41f327:	add    BYTE PTR [rax],al
  41f329:	add    BYTE PTR [rax],al
  41f32b:	add    BYTE PTR [rax*1+0x2],al
  41f332:	add    BYTE PTR [rax],al
  41f334:	(bad)  
  41f335:	add    eax,0x2
  41f33a:	add    BYTE PTR [rax],al
  41f33c:	cs add eax,0x2
  41f342:	add    BYTE PTR [rax],al
  41f344:	rex.WX add rax,0x2
  41f34a:	add    BYTE PTR [rax],al
  41f34c:	(bad)  
  41f34d:	add    eax,0x2
  41f352:	add    BYTE PTR [rax],al
  41f354:	jl     0x41f35b
  41f356:	add    al,BYTE PTR [rax]
  41f358:	add    BYTE PTR [rax],al
  41f35a:	add    BYTE PTR [rax],al
  41f35c:	xchg   edx,eax
  41f35d:	add    eax,0x2
  41f362:	add    BYTE PTR [rax],al
  41f364:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41f365:	add    eax,0x2
  41f36a:	add    BYTE PTR [rax],al
  41f36c:	rol    BYTE PTR [rip+0x2],0x0        # 0x41f375
  41f373:	add    ah,dl
  41f375:	add    eax,0x2
  41f37a:	add    BYTE PTR [rax],al
  41f37c:	repnz add eax,0x2
  41f382:	add    BYTE PTR [rax],al
  41f384:	cli    
  41f385:	add    eax,0x2
  41f38a:	add    BYTE PTR [rax],al
  41f38c:	(bad)  
  41f38d:	(bad)  
  41f38e:	add    al,BYTE PTR [rax]
  41f390:	add    BYTE PTR [rax],al
  41f392:	add    BYTE PTR [rax],al
  41f394:	sbb    al,0x6
  41f396:	add    al,BYTE PTR [rax]
  41f398:	add    BYTE PTR [rax],al
  41f39a:	add    BYTE PTR [rax],al
  41f39c:	cmp    BYTE PTR [rsi],al
  41f39e:	add    al,BYTE PTR [rax]
  41f3a0:	add    BYTE PTR [rax],al
  41f3a2:	add    BYTE PTR [rax],al
  41f3a4:	rex.WX (bad) 
  41f3a6:	add    al,BYTE PTR [rax]
  41f3a8:	add    BYTE PTR [rax],al
  41f3aa:	add    BYTE PTR [rax],al
  41f3ac:	pop    rdx
  41f3ad:	(bad)  
  41f3ae:	add    al,BYTE PTR [rax]
	...
  41f3bc:	jb     0x41f3c4
  41f3be:	add    al,BYTE PTR [rax]
  41f3c0:	add    BYTE PTR [rax],al
  41f3c2:	add    BYTE PTR [rax],al
  41f3c4:	add    BYTE PTR [rsi],0x2
  41f3c7:	add    BYTE PTR [rax],al
  41f3c9:	add    BYTE PTR [rax],al
  41f3cb:	add    BYTE PTR [rax+0x206],dl
  41f3d1:	add    BYTE PTR [rax],al
  41f3d3:	add    BYTE PTR [rsi+rax*1+0x2],bl
  41f3da:	add    BYTE PTR [rax],al
  41f3dc:	stos   BYTE PTR es:[rdi],al
  41f3dd:	(bad)  
  41f3de:	add    al,BYTE PTR [rax]
  41f3e0:	add    BYTE PTR [rax],al
  41f3e2:	add    BYTE PTR [rax],al
  41f3e4:	mov    edx,0x206
  41f3e9:	add    BYTE PTR [rax],al
  41f3eb:	add    ah,cl
  41f3ed:	(bad)  
  41f3ee:	add    al,BYTE PTR [rax]
  41f3f0:	add    BYTE PTR [rax],al
  41f3f2:	add    BYTE PTR [rax],al
  41f3f4:	loopne 0x41f3fc
  41f3f6:	add    al,BYTE PTR [rax]
  41f3f8:	add    BYTE PTR [rax],al
  41f3fa:	add    BYTE PTR [rax],al
  41f3fc:	(bad)  
  41f3fd:	(bad)  
  41f3fe:	add    al,BYTE PTR [rax]
  41f400:	add    BYTE PTR [rax],al
  41f402:	add    BYTE PTR [rax],al
  41f404:	clc    
  41f405:	(bad)  
  41f406:	add    al,BYTE PTR [rax]
  41f408:	add    BYTE PTR [rax],al
  41f40a:	add    BYTE PTR [rax],al
  41f40c:	add    al,BYTE PTR [rdi]
  41f40e:	add    al,BYTE PTR [rax]
  41f410:	add    BYTE PTR [rax],al
  41f412:	add    BYTE PTR [rax],al
  41f414:	or     al,0x7
  41f416:	add    al,BYTE PTR [rax]
  41f418:	add    BYTE PTR [rax],al
  41f41a:	add    BYTE PTR [rax],al
  41f41c:	(bad)  
  41f41d:	(bad)  
  41f41e:	add    al,BYTE PTR [rax]
  41f420:	add    BYTE PTR [rax],al
  41f422:	add    BYTE PTR [rax],al
  41f424:	(bad)  
  41f425:	(bad)  
  41f426:	add    al,BYTE PTR [rax]
  41f428:	add    BYTE PTR [rax],al
  41f42a:	add    BYTE PTR [rax],al
  41f42c:	sub    al,0x7
  41f42e:	add    al,BYTE PTR [rax]
  41f430:	add    BYTE PTR [rax],al
  41f432:	add    BYTE PTR [rax],al
  41f434:	cmp    al,0x7
  41f436:	add    al,BYTE PTR [rax]
  41f438:	add    BYTE PTR [rax],al
  41f43a:	add    BYTE PTR [rax],al
  41f43c:	rex.RX (bad) 
  41f43e:	add    al,BYTE PTR [rax]
  41f440:	add    BYTE PTR [rax],al
  41f442:	add    BYTE PTR [rax],al
  41f444:	push   rdx
  41f445:	(bad)  
  41f446:	add    al,BYTE PTR [rax]
  41f448:	add    BYTE PTR [rax],al
  41f44a:	add    BYTE PTR [rax],al
  41f44c:	fs (bad) 
  41f44e:	add    al,BYTE PTR [rax]
  41f450:	add    BYTE PTR [rax],al
  41f452:	add    BYTE PTR [rax],al
  41f454:	jo     0x41f45d
  41f456:	add    al,BYTE PTR [rax]
  41f458:	add    BYTE PTR [rax],al
  41f45a:	add    BYTE PTR [rax],al
  41f45c:	jp     0x41f465
  41f45e:	add    al,BYTE PTR [rax]
  41f460:	add    BYTE PTR [rax],al
  41f462:	add    BYTE PTR [rax],al
  41f464:	(bad)  
  41f465:	(bad)  
  41f466:	add    al,BYTE PTR [rax]
  41f468:	add    BYTE PTR [rax],al
  41f46a:	add    BYTE PTR [rax],al
  41f46c:	mov    WORD PTR [rdi],es
  41f46e:	add    al,BYTE PTR [rax]
  41f470:	add    BYTE PTR [rax],al
  41f472:	add    BYTE PTR [rax],al
  41f474:	xchg   esi,eax
  41f475:	(bad)  
  41f476:	add    al,BYTE PTR [rax]
  41f478:	add    BYTE PTR [rax],al
  41f47a:	add    BYTE PTR [rax],al
  41f47c:	sahf   
  41f47d:	(bad)  
  41f47e:	add    al,BYTE PTR [rax]
  41f480:	add    BYTE PTR [rax],al
  41f482:	add    BYTE PTR [rax],al
  41f484:	test   al,0x7
  41f486:	add    al,BYTE PTR [rax]
  41f488:	add    BYTE PTR [rax],al
  41f48a:	add    BYTE PTR [rax],al
  41f48c:	mov    dh,0x7
  41f48e:	add    al,BYTE PTR [rax]
  41f490:	add    BYTE PTR [rax],al
  41f492:	add    BYTE PTR [rax],al
  41f494:	rol    BYTE PTR [rdi],0x2
  41f497:	add    BYTE PTR [rax],al
  41f499:	add    BYTE PTR [rax],al
  41f49b:	add    dl,cl
  41f49d:	(bad)  
  41f49e:	add    al,BYTE PTR [rax]
  41f4a0:	add    BYTE PTR [rax],al
  41f4a2:	add    BYTE PTR [rax],al
  41f4a4:	rol    BYTE PTR [rdi],cl
  41f4a6:	add    al,BYTE PTR [rax]
  41f4a8:	add    BYTE PTR [rax],al
  41f4aa:	add    BYTE PTR [rax],al
  41f4ac:	fadd   QWORD PTR [rdi]
  41f4ae:	add    al,BYTE PTR [rax]
  41f4b0:	add    BYTE PTR [rax],al
  41f4b2:	add    BYTE PTR [rax],al
  41f4b4:	in     al,0x7
  41f4b6:	add    al,BYTE PTR [rax]
  41f4b8:	add    BYTE PTR [rax],al
  41f4ba:	add    BYTE PTR [rax],al
  41f4bc:	in     al,dx
  41f4bd:	(bad)  
  41f4be:	add    al,BYTE PTR [rax]
  41f4c0:	add    BYTE PTR [rax],al
  41f4c2:	add    BYTE PTR [rax],al
  41f4c4:	hlt    
  41f4c5:	(bad)  
  41f4c6:	add    al,BYTE PTR [rax]
  41f4c8:	add    BYTE PTR [rax],al
  41f4ca:	add    BYTE PTR [rax],al
  41f4cc:	inc    BYTE PTR [rdi]
  41f4ce:	add    al,BYTE PTR [rax]
  41f4d0:	add    BYTE PTR [rax],al
  41f4d2:	add    BYTE PTR [rax],al
  41f4d4:	(bad)  
  41f4d5:	or     BYTE PTR [rdx],al
  41f4d7:	add    BYTE PTR [rax],al
  41f4d9:	add    BYTE PTR [rax],al
  41f4db:	add    BYTE PTR [rdx],dl
  41f4dd:	or     BYTE PTR [rdx],al
  41f4df:	add    BYTE PTR [rax],al
  41f4e1:	add    BYTE PTR [rax],al
  41f4e3:	add    BYTE PTR [rax+rcx*1],bl
  41f4e6:	add    al,BYTE PTR [rax]
  41f4e8:	add    BYTE PTR [rax],al
  41f4ea:	add    BYTE PTR [rax],al
  41f4ec:	or     BYTE PTR es:[rdx],al
  41f4ef:	add    BYTE PTR [rax],al
  41f4f1:	add    BYTE PTR [rax],al
  41f4f3:	add    BYTE PTR [rax],dh
  41f4f5:	or     BYTE PTR [rdx],al
  41f4f7:	add    BYTE PTR [rax],al
  41f4f9:	add    BYTE PTR [rax],al
  41f4fb:	add    BYTE PTR [rdx],bh
  41f4fd:	or     BYTE PTR [rdx],al
  41f4ff:	add    BYTE PTR [rax],al
  41f501:	add    BYTE PTR [rax],al
  41f503:	add    BYTE PTR [rax+rcx*1+0x2],al
  41f507:	add    BYTE PTR [rax],al
  41f509:	add    BYTE PTR [rax],al
  41f50b:	add    BYTE PTR [rsi+0x8],cl
  41f50e:	add    al,BYTE PTR [rax]
  41f510:	add    BYTE PTR [rax],al
  41f512:	add    BYTE PTR [rax],al
  41f514:	pop    rax
  41f515:	or     BYTE PTR [rdx],al
  41f517:	add    BYTE PTR [rax],al
  41f519:	add    BYTE PTR [rax],al
  41f51b:	add    BYTE PTR [rax+0x8],ah
  41f51e:	add    al,BYTE PTR [rax]
  41f520:	add    BYTE PTR [rax],al
  41f522:	add    BYTE PTR [rax],al
  41f524:	push   0x8
  41f526:	add    al,BYTE PTR [rax]
  41f528:	add    BYTE PTR [rax],al
  41f52a:	add    BYTE PTR [rax],al
  41f52c:	je     0x41f536
  41f52e:	add    al,BYTE PTR [rax]
  41f530:	add    BYTE PTR [rax],al
  41f532:	add    BYTE PTR [rax],al
  41f534:	jle    0x41f53e
  41f536:	add    al,BYTE PTR [rax]
  41f538:	add    BYTE PTR [rax],al
  41f53a:	add    BYTE PTR [rax],al
  41f53c:	mov    BYTE PTR [rax],cl
  41f53e:	add    al,BYTE PTR [rax]
  41f540:	add    BYTE PTR [rax],al
  41f542:	add    BYTE PTR [rax],al
  41f544:	xchg   edx,eax
  41f545:	or     BYTE PTR [rdx],al
  41f547:	add    BYTE PTR [rax],al
  41f549:	add    BYTE PTR [rax],al
  41f54b:	add    BYTE PTR [rax+rcx*1+0x2],bl
  41f552:	add    BYTE PTR [rax],al
  41f554:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41f555:	or     BYTE PTR [rdx],al
  41f557:	add    BYTE PTR [rax],al
  41f559:	add    BYTE PTR [rax],al
  41f55b:	add    BYTE PTR [rax+0x208],dh
  41f561:	add    BYTE PTR [rax],al
  41f563:	add    BYTE PTR [rdx+0x208],bh
  41f569:	add    BYTE PTR [rax],al
  41f56b:	add    ah,al
  41f56d:	or     BYTE PTR [rdx],al
  41f56f:	add    BYTE PTR [rax],al
  41f571:	add    BYTE PTR [rax],al
  41f573:	add    al,dl
  41f575:	or     BYTE PTR [rdx],al
  41f577:	add    BYTE PTR [rax],al
  41f579:	add    BYTE PTR [rax],al
  41f57b:	add    dl,bl
  41f57d:	or     BYTE PTR [rdx],al
  41f57f:	add    BYTE PTR [rax],al
  41f581:	add    BYTE PTR [rax],al
  41f583:	add    ah,ah
  41f585:	or     BYTE PTR [rdx],al
  41f587:	add    BYTE PTR [rax],al
  41f589:	add    BYTE PTR [rax],al
  41f58b:	add    dl,dh
  41f58d:	or     BYTE PTR [rdx],al
  41f58f:	add    BYTE PTR [rax],al
  41f591:	add    BYTE PTR [rax],al
  41f593:	add    ah,bh
  41f595:	or     BYTE PTR [rdx],al
  41f597:	add    BYTE PTR [rax],al
  41f599:	add    BYTE PTR [rax],al
  41f59b:	add    BYTE PTR [rsi],al
  41f59d:	or     DWORD PTR [rdx],eax
  41f59f:	add    BYTE PTR [rax],al
  41f5a1:	add    BYTE PTR [rax],al
  41f5a3:	add    BYTE PTR [rax],dl
  41f5a5:	or     DWORD PTR [rdx],eax
  41f5a7:	add    BYTE PTR [rax],al
  41f5a9:	add    BYTE PTR [rax],al
  41f5ab:	add    BYTE PTR [rdx],bl
  41f5ad:	or     DWORD PTR [rdx],eax
  41f5af:	add    BYTE PTR [rax],al
  41f5b1:	add    BYTE PTR [rax],al
  41f5b3:	add    BYTE PTR [rdx],ah
  41f5b5:	or     DWORD PTR [rdx],eax
  41f5b7:	add    BYTE PTR [rax],al
  41f5b9:	add    BYTE PTR [rax],al
  41f5bb:	add    BYTE PTR [rcx+rcx*1],ch
  41f5be:	add    al,BYTE PTR [rax]
  41f5c0:	add    BYTE PTR [rax],al
  41f5c2:	add    BYTE PTR [rax],al
  41f5c4:	or     DWORD PTR ss:[rdx],eax
  41f5c7:	add    BYTE PTR [rax],al
  41f5c9:	add    BYTE PTR [rax],al
  41f5cb:	add    BYTE PTR [rax+0x9],al
  41f5ce:	add    al,BYTE PTR [rax]
	...
  41f5dc:	rex.WX or QWORD PTR [rdx],rax
	...
  41f5eb:	add    BYTE PTR [rax+0x9],bl
  41f5ee:	add    al,BYTE PTR [rax]
	...
  41f5fc:	ins    BYTE PTR es:[rdi],dx
  41f5fd:	sti    
  41f5fe:	add    DWORD PTR [rax],eax
	...
  41f60c:	cmp    bl,0x1
  41f60f:	add    BYTE PTR [rax],al
  41f611:	add    BYTE PTR [rax],al
  41f613:	add    BYTE PTR [rbx+rdi*8+0x1],dl
  41f61a:	add    BYTE PTR [rax],al
  41f61c:	test   al,0xfb
  41f61e:	add    DWORD PTR [rax],eax
  41f620:	add    BYTE PTR [rax],al
  41f622:	add    BYTE PTR [rax],al
  41f624:	mov    esp,0x1fb
  41f629:	add    BYTE PTR [rax],al
  41f62b:	add    al,dl
  41f62d:	sti    
  41f62e:	add    DWORD PTR [rax],eax
  41f630:	add    BYTE PTR [rax],al
  41f632:	add    BYTE PTR [rax],al
  41f634:	call   0x41f834
  41f639:	add    BYTE PTR [rax],al
  41f63b:	add    ah,bh
  41f63d:	sti    
  41f63e:	add    DWORD PTR [rax],eax
  41f640:	add    BYTE PTR [rax],al
  41f642:	add    BYTE PTR [rax],al
  41f644:	adc    ah,bh
  41f646:	add    DWORD PTR [rax],eax
  41f648:	add    BYTE PTR [rax],al
  41f64a:	add    BYTE PTR [rax],al
  41f64c:	sub    ah,bh
  41f64e:	add    DWORD PTR [rax],eax
  41f650:	add    BYTE PTR [rax],al
  41f652:	add    BYTE PTR [rax],al
  41f654:	rex.WR cld 
  41f656:	add    DWORD PTR [rax],eax
  41f658:	add    BYTE PTR [rax],al
  41f65a:	add    BYTE PTR [rax],al
  41f65c:	pop    rsp
  41f65d:	cld    
  41f65e:	add    DWORD PTR [rax],eax
  41f660:	add    BYTE PTR [rax],al
  41f662:	add    BYTE PTR [rax],al
  41f664:	ins    BYTE PTR es:[rdi],dx
  41f665:	cld    
  41f666:	add    DWORD PTR [rax],eax
  41f668:	add    BYTE PTR [rax],al
  41f66a:	add    BYTE PTR [rax],al
  41f66c:	test   ah,bh
  41f66e:	add    DWORD PTR [rax],eax
  41f670:	add    BYTE PTR [rax],al
  41f672:	add    BYTE PTR [rax],al
  41f674:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41f675:	cld    
  41f676:	add    DWORD PTR [rax],eax
  41f678:	add    BYTE PTR [rax],al
  41f67a:	add    BYTE PTR [rax],al
  41f67c:	mov    ah,0xfc
  41f67e:	add    DWORD PTR [rax],eax
  41f680:	add    BYTE PTR [rax],al
  41f682:	add    BYTE PTR [rax],al
  41f684:	fdivr  st,st(4)
  41f686:	add    DWORD PTR [rax],eax
  41f688:	add    BYTE PTR [rax],al
  41f68a:	add    BYTE PTR [rax],al
  41f68c:	cld    
  41f68d:	cld    
  41f68e:	add    DWORD PTR [rax],eax
  41f690:	add    BYTE PTR [rax],al
  41f692:	add    BYTE PTR [rax],al
  41f694:	adc    ch,bh
  41f696:	add    DWORD PTR [rax],eax
  41f698:	add    BYTE PTR [rax],al
  41f69a:	add    BYTE PTR [rax],al
  41f69c:	and    al,0xfd
  41f69e:	add    DWORD PTR [rax],eax
  41f6a0:	add    BYTE PTR [rax],al
  41f6a2:	add    BYTE PTR [rax],al
  41f6a4:	cmp    ch,bh
  41f6a6:	add    DWORD PTR [rax],eax
  41f6a8:	add    BYTE PTR [rax],al
  41f6aa:	add    BYTE PTR [rax],al
  41f6ac:	rex.WR std 
  41f6ae:	add    DWORD PTR [rax],eax
  41f6b0:	add    BYTE PTR [rax],al
  41f6b2:	add    BYTE PTR [rax],al
  41f6b4:	(bad)  
  41f6b5:	std    
  41f6b6:	add    DWORD PTR [rax],eax
  41f6b8:	add    BYTE PTR [rax],al
  41f6ba:	add    BYTE PTR [rax],al
  41f6bc:	je     0x41f6bb
  41f6be:	add    DWORD PTR [rax],eax
  41f6c0:	add    BYTE PTR [rax],al
  41f6c2:	add    BYTE PTR [rax],al
  41f6c4:	mov    ebp,?
  41f6c6:	add    DWORD PTR [rax],eax
  41f6c8:	add    BYTE PTR [rax],al
  41f6ca:	add    BYTE PTR [rax],al
  41f6cc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41f6cd:	std    
  41f6ce:	add    DWORD PTR [rax],eax
  41f6d0:	add    BYTE PTR [rax],al
  41f6d2:	add    BYTE PTR [rax],al
  41f6d4:	mov    eax,0x1fd
  41f6d9:	add    BYTE PTR [rax],al
  41f6db:	add    al,dl
  41f6dd:	std    
  41f6de:	add    DWORD PTR [rax],eax
  41f6e0:	add    BYTE PTR [rax],al
  41f6e2:	add    BYTE PTR [rax],al
  41f6e4:	call   0x41f8e6
  41f6e9:	add    BYTE PTR [rax],al
  41f6eb:	add    al,bh
  41f6ed:	std    
  41f6ee:	add    DWORD PTR [rax],eax
  41f6f0:	add    BYTE PTR [rax],al
  41f6f2:	add    BYTE PTR [rax],al
  41f6f4:	or     al,0xfe
  41f6f6:	add    DWORD PTR [rax],eax
  41f6f8:	add    BYTE PTR [rax],al
  41f6fa:	add    BYTE PTR [rax],al
  41f6fc:	sub    al,0xfe
  41f6fe:	add    DWORD PTR [rax],eax
  41f700:	add    BYTE PTR [rax],al
  41f702:	add    BYTE PTR [rax],al
  41f704:	je     0x41f704
  41f706:	add    DWORD PTR [rax],eax
  41f708:	add    BYTE PTR [rax],al
  41f70a:	add    BYTE PTR [rax],al
  41f70c:	test   al,0xfe
  41f70e:	add    DWORD PTR [rax],eax
  41f710:	add    BYTE PTR [rax],al
  41f712:	add    BYTE PTR [rax],al
  41f714:	fdivr  st,st(6)
  41f716:	add    DWORD PTR [rax],eax
  41f718:	add    BYTE PTR [rax],al
  41f71a:	add    BYTE PTR [rax],al
  41f71c:	or     bh,bh
  41f71e:	add    DWORD PTR [rax],eax
  41f720:	add    BYTE PTR [rax],al
  41f722:	add    BYTE PTR [rax],al
  41f724:	cmp    al,0xff
  41f726:	add    DWORD PTR [rax],eax
  41f728:	add    BYTE PTR [rax],al
  41f72a:	add    BYTE PTR [rax],al
  41f72c:	push   rax
  41f72d:	inc    DWORD PTR [rcx]
  41f72f:	add    BYTE PTR [rax],al
  41f731:	add    BYTE PTR [rax],al
  41f733:	add    BYTE PTR [rax+0x1ff],al
  41f739:	add    BYTE PTR [rax],al
  41f73b:	add    BYTE PTR [rdi+rdi*8+0x1],bl
  41f742:	add    BYTE PTR [rax],al
  41f744:	mov    eax,0x1ff
  41f749:	add    BYTE PTR [rax],al
  41f74b:	add    al,dl
  41f74d:	inc    DWORD PTR [rcx]
  41f74f:	add    BYTE PTR [rax],al
  41f751:	add    BYTE PTR [rax],al
  41f753:	add    al,ch
  41f755:	inc    DWORD PTR [rcx]
  41f757:	add    BYTE PTR [rax],al
  41f759:	add    BYTE PTR [rax],al
  41f75b:	add    BYTE PTR [rax],dh
  41f75d:	add    BYTE PTR [rdx],al
  41f75f:	add    BYTE PTR [rax],al
  41f761:	add    BYTE PTR [rax],al
  41f763:	add    BYTE PTR [rax+0x0],dh
  41f766:	add    al,BYTE PTR [rax]
  41f768:	add    BYTE PTR [rax],al
  41f76a:	add    BYTE PTR [rax],al
  41f76c:	rol    BYTE PTR [rax],0x2
  41f76f:	add    BYTE PTR [rax],al
  41f771:	add    BYTE PTR [rax],al
  41f773:	add    ah,bl
  41f775:	add    BYTE PTR [rdx],al
  41f777:	add    BYTE PTR [rax],al
  41f779:	add    BYTE PTR [rax],al
  41f77b:	add    BYTE PTR [rax],dl
  41f77d:	add    DWORD PTR [rdx],eax
  41f77f:	add    BYTE PTR [rax],al
  41f781:	add    BYTE PTR [rax],al
  41f783:	add    BYTE PTR [rcx+rax*1+0x2],al
  41f787:	add    BYTE PTR [rax],al
  41f789:	add    BYTE PTR [rax],al
  41f78b:	add    BYTE PTR [rcx+rax*1+0x2],ah
  41f78f:	add    BYTE PTR [rax],al
  41f791:	add    BYTE PTR [rax],al
  41f793:	add    BYTE PTR [rcx+rax*1+0x2],cl
  41f79a:	add    BYTE PTR [rax],al
  41f79c:	rol    BYTE PTR [rcx],1
  41f79e:	add    al,BYTE PTR [rax]
  41f7a0:	add    BYTE PTR [rax],al
  41f7a2:	add    BYTE PTR [rax],al
  41f7a4:	fadd   QWORD PTR [rcx]
  41f7a6:	add    al,BYTE PTR [rax]
  41f7a8:	add    BYTE PTR [rax],al
  41f7aa:	add    BYTE PTR [rax],al
  41f7ac:	call   0x41f9b2
  41f7b1:	add    BYTE PTR [rax],al
  41f7b3:	add    BYTE PTR [rax],ch
  41f7b5:	add    al,BYTE PTR [rdx]
  41f7b7:	add    BYTE PTR [rax],al
  41f7b9:	add    BYTE PTR [rax],al
  41f7bb:	add    BYTE PTR [rdx+rax*1+0x2],ah
  41f7bf:	add    BYTE PTR [rax],al
  41f7c1:	add    BYTE PTR [rax],al
  41f7c3:	add    BYTE PTR [rdx+rax*1+0x2],dl
  41f7ca:	add    BYTE PTR [rax],al
  41f7cc:	(bad)
  41f7d0:	add    BYTE PTR [rax],al
  41f7d2:	add    BYTE PTR [rax],al
  41f7d4:	hlt    
  41f7d5:	add    al,BYTE PTR [rdx]
  41f7d7:	add    BYTE PTR [rax],al
  41f7d9:	add    BYTE PTR [rax],al
  41f7db:	add    BYTE PTR [rbx+rax*1],ah
  41f7de:	add    al,BYTE PTR [rax]
  41f7e0:	add    BYTE PTR [rax],al
  41f7e2:	add    BYTE PTR [rax],al
  41f7e4:	add    r8,QWORD PTR [rdx]
  41f7e7:	add    BYTE PTR [rax],al
  41f7e9:	add    BYTE PTR [rax],al
  41f7eb:	add    BYTE PTR [rax+0x3],bl
  41f7ee:	add    al,BYTE PTR [rax]
  41f7f0:	add    BYTE PTR [rax],al
  41f7f2:	add    BYTE PTR [rax],al
  41f7f4:	(bad)  
  41f7f5:	add    eax,DWORD PTR [rdx]
  41f7f7:	add    BYTE PTR [rax],al
  41f7f9:	add    BYTE PTR [rax],al
  41f7fb:	add    BYTE PTR [rbx+rax*1+0x2],dh
  41f7ff:	add    BYTE PTR [rax],al
  41f801:	add    BYTE PTR [rax],al
  41f803:	add    BYTE PTR [rax+0x203],cl
  41f809:	add    BYTE PTR [rax],al
  41f80b:	add    BYTE PTR [rbx+rax*1+0x2],bl
  41f812:	add    BYTE PTR [rax],al
  41f814:	mov    ah,0x3
  41f816:	add    al,BYTE PTR [rax]
  41f818:	add    BYTE PTR [rax],al
  41f81a:	add    BYTE PTR [rax],al
  41f81c:	int3   
  41f81d:	add    eax,DWORD PTR [rdx]
  41f81f:	add    BYTE PTR [rax],al
  41f821:	add    BYTE PTR [rax],al
  41f823:	add    ah,bl
  41f825:	add    eax,DWORD PTR [rdx]
	...
  41f833:	add    al,bh
  41f835:	add    eax,DWORD PTR [rdx]
  41f837:	add    BYTE PTR [rax],al
  41f839:	add    BYTE PTR [rax],al
  41f83b:	add    BYTE PTR [rax],dl
  41f83d:	add    al,0x2
  41f83f:	add    BYTE PTR [rax],al
  41f841:	add    BYTE PTR [rax],al
  41f843:	add    BYTE PTR [rax],ch
  41f845:	add    al,0x2
  41f847:	add    BYTE PTR [rax],al
  41f849:	add    BYTE PTR [rax],al
  41f84b:	add    BYTE PTR [rdx],bh
  41f84d:	add    al,0x2
  41f84f:	add    BYTE PTR [rax],al
  41f851:	add    BYTE PTR [rax],al
  41f853:	add    BYTE PTR [rsi+0x4],cl
  41f856:	add    al,BYTE PTR [rax]
  41f858:	add    BYTE PTR [rax],al
  41f85a:	add    BYTE PTR [rax],al
  41f85c:	fs add al,0x2
  41f85f:	add    BYTE PTR [rax],al
  41f861:	add    BYTE PTR [rax],al
  41f863:	add    BYTE PTR [rdx+0x4],bh
  41f866:	add    al,BYTE PTR [rax]
  41f868:	add    BYTE PTR [rax],al
  41f86a:	add    BYTE PTR [rax],al
  41f86c:	nop
  41f86d:	add    al,0x2
  41f86f:	add    BYTE PTR [rax],al
  41f871:	add    BYTE PTR [rax],al
  41f873:	add    BYTE PTR [rax+0x204],ah
  41f879:	add    BYTE PTR [rax],al
  41f87b:	add    BYTE PTR [rsi+0x204],dh
  41f881:	add    BYTE PTR [rax],al
  41f883:	add    ah,cl
  41f885:	add    al,0x2
  41f887:	add    BYTE PTR [rax],al
  41f889:	add    BYTE PTR [rax],al
  41f88b:	add    al,ah
  41f88d:	add    al,0x2
  41f88f:	add    BYTE PTR [rax],al
  41f891:	add    BYTE PTR [rax],al
  41f893:	add    dl,dh
  41f895:	add    al,0x2
  41f897:	add    BYTE PTR [rax],al
  41f899:	add    BYTE PTR [rax],al
  41f89b:	add    BYTE PTR [rax*1+0x2],al
  41f8a2:	add    BYTE PTR [rax],al
  41f8a4:	(bad)  
  41f8a5:	add    eax,0x2
  41f8aa:	add    BYTE PTR [rax],al
  41f8ac:	cs add eax,0x2
  41f8b2:	add    BYTE PTR [rax],al
  41f8b4:	rex.WX add rax,0x2
  41f8ba:	add    BYTE PTR [rax],al
  41f8bc:	(bad)  
  41f8bd:	add    eax,0x2
  41f8c2:	add    BYTE PTR [rax],al
  41f8c4:	jl     0x41f8cb
  41f8c6:	add    al,BYTE PTR [rax]
  41f8c8:	add    BYTE PTR [rax],al
  41f8ca:	add    BYTE PTR [rax],al
  41f8cc:	xchg   edx,eax
  41f8cd:	add    eax,0x2
  41f8d2:	add    BYTE PTR [rax],al
  41f8d4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41f8d5:	add    eax,0x2
  41f8da:	add    BYTE PTR [rax],al
  41f8dc:	rol    BYTE PTR [rip+0x2],0x0        # 0x41f8e5
  41f8e3:	add    ah,dl
  41f8e5:	add    eax,0x2
  41f8ea:	add    BYTE PTR [rax],al
  41f8ec:	repnz add eax,0x2
  41f8f2:	add    BYTE PTR [rax],al
  41f8f4:	cli    
  41f8f5:	add    eax,0x2
  41f8fa:	add    BYTE PTR [rax],al
  41f8fc:	(bad)  
  41f8fd:	(bad)  
  41f8fe:	add    al,BYTE PTR [rax]
  41f900:	add    BYTE PTR [rax],al
  41f902:	add    BYTE PTR [rax],al
  41f904:	sbb    al,0x6
  41f906:	add    al,BYTE PTR [rax]
  41f908:	add    BYTE PTR [rax],al
  41f90a:	add    BYTE PTR [rax],al
  41f90c:	cmp    BYTE PTR [rsi],al
  41f90e:	add    al,BYTE PTR [rax]
  41f910:	add    BYTE PTR [rax],al
  41f912:	add    BYTE PTR [rax],al
  41f914:	rex.WX (bad) 
  41f916:	add    al,BYTE PTR [rax]
  41f918:	add    BYTE PTR [rax],al
  41f91a:	add    BYTE PTR [rax],al
  41f91c:	pop    rdx
  41f91d:	(bad)  
  41f91e:	add    al,BYTE PTR [rax]
	...
  41f92c:	jb     0x41f934
  41f92e:	add    al,BYTE PTR [rax]
  41f930:	add    BYTE PTR [rax],al
  41f932:	add    BYTE PTR [rax],al
  41f934:	add    BYTE PTR [rsi],0x2
  41f937:	add    BYTE PTR [rax],al
  41f939:	add    BYTE PTR [rax],al
  41f93b:	add    BYTE PTR [rax+0x206],dl
  41f941:	add    BYTE PTR [rax],al
  41f943:	add    BYTE PTR [rsi+rax*1+0x2],bl
  41f94a:	add    BYTE PTR [rax],al
  41f94c:	stos   BYTE PTR es:[rdi],al
  41f94d:	(bad)  
  41f94e:	add    al,BYTE PTR [rax]
  41f950:	add    BYTE PTR [rax],al
  41f952:	add    BYTE PTR [rax],al
  41f954:	mov    edx,0x206
  41f959:	add    BYTE PTR [rax],al
  41f95b:	add    ah,cl
  41f95d:	(bad)  
  41f95e:	add    al,BYTE PTR [rax]
  41f960:	add    BYTE PTR [rax],al
  41f962:	add    BYTE PTR [rax],al
  41f964:	loopne 0x41f96c
  41f966:	add    al,BYTE PTR [rax]
  41f968:	add    BYTE PTR [rax],al
  41f96a:	add    BYTE PTR [rax],al
  41f96c:	(bad)  
  41f96d:	(bad)  
  41f96e:	add    al,BYTE PTR [rax]
  41f970:	add    BYTE PTR [rax],al
  41f972:	add    BYTE PTR [rax],al
  41f974:	clc    
  41f975:	(bad)  
  41f976:	add    al,BYTE PTR [rax]
  41f978:	add    BYTE PTR [rax],al
  41f97a:	add    BYTE PTR [rax],al
  41f97c:	add    al,BYTE PTR [rdi]
  41f97e:	add    al,BYTE PTR [rax]
  41f980:	add    BYTE PTR [rax],al
  41f982:	add    BYTE PTR [rax],al
  41f984:	or     al,0x7
  41f986:	add    al,BYTE PTR [rax]
  41f988:	add    BYTE PTR [rax],al
  41f98a:	add    BYTE PTR [rax],al
  41f98c:	(bad)  
  41f98d:	(bad)  
  41f98e:	add    al,BYTE PTR [rax]
  41f990:	add    BYTE PTR [rax],al
  41f992:	add    BYTE PTR [rax],al
  41f994:	(bad)  
  41f995:	(bad)  
  41f996:	add    al,BYTE PTR [rax]
  41f998:	add    BYTE PTR [rax],al
  41f99a:	add    BYTE PTR [rax],al
  41f99c:	sub    al,0x7
  41f99e:	add    al,BYTE PTR [rax]
  41f9a0:	add    BYTE PTR [rax],al
  41f9a2:	add    BYTE PTR [rax],al
  41f9a4:	cmp    al,0x7
  41f9a6:	add    al,BYTE PTR [rax]
  41f9a8:	add    BYTE PTR [rax],al
  41f9aa:	add    BYTE PTR [rax],al
  41f9ac:	rex.RX (bad) 
  41f9ae:	add    al,BYTE PTR [rax]
  41f9b0:	add    BYTE PTR [rax],al
  41f9b2:	add    BYTE PTR [rax],al
  41f9b4:	push   rdx
  41f9b5:	(bad)  
  41f9b6:	add    al,BYTE PTR [rax]
  41f9b8:	add    BYTE PTR [rax],al
  41f9ba:	add    BYTE PTR [rax],al
  41f9bc:	fs (bad) 
  41f9be:	add    al,BYTE PTR [rax]
  41f9c0:	add    BYTE PTR [rax],al
  41f9c2:	add    BYTE PTR [rax],al
  41f9c4:	jo     0x41f9cd
  41f9c6:	add    al,BYTE PTR [rax]
  41f9c8:	add    BYTE PTR [rax],al
  41f9ca:	add    BYTE PTR [rax],al
  41f9cc:	jp     0x41f9d5
  41f9ce:	add    al,BYTE PTR [rax]
  41f9d0:	add    BYTE PTR [rax],al
  41f9d2:	add    BYTE PTR [rax],al
  41f9d4:	(bad)  
  41f9d5:	(bad)  
  41f9d6:	add    al,BYTE PTR [rax]
  41f9d8:	add    BYTE PTR [rax],al
  41f9da:	add    BYTE PTR [rax],al
  41f9dc:	mov    WORD PTR [rdi],es
  41f9de:	add    al,BYTE PTR [rax]
  41f9e0:	add    BYTE PTR [rax],al
  41f9e2:	add    BYTE PTR [rax],al
  41f9e4:	xchg   esi,eax
  41f9e5:	(bad)  
  41f9e6:	add    al,BYTE PTR [rax]
  41f9e8:	add    BYTE PTR [rax],al
  41f9ea:	add    BYTE PTR [rax],al
  41f9ec:	sahf   
  41f9ed:	(bad)  
  41f9ee:	add    al,BYTE PTR [rax]
  41f9f0:	add    BYTE PTR [rax],al
  41f9f2:	add    BYTE PTR [rax],al
  41f9f4:	test   al,0x7
  41f9f6:	add    al,BYTE PTR [rax]
  41f9f8:	add    BYTE PTR [rax],al
  41f9fa:	add    BYTE PTR [rax],al
  41f9fc:	mov    dh,0x7
  41f9fe:	add    al,BYTE PTR [rax]
  41fa00:	add    BYTE PTR [rax],al
  41fa02:	add    BYTE PTR [rax],al
  41fa04:	rol    BYTE PTR [rdi],0x2
  41fa07:	add    BYTE PTR [rax],al
  41fa09:	add    BYTE PTR [rax],al
  41fa0b:	add    dl,cl
  41fa0d:	(bad)  
  41fa0e:	add    al,BYTE PTR [rax]
  41fa10:	add    BYTE PTR [rax],al
  41fa12:	add    BYTE PTR [rax],al
  41fa14:	rol    BYTE PTR [rdi],cl
  41fa16:	add    al,BYTE PTR [rax]
  41fa18:	add    BYTE PTR [rax],al
  41fa1a:	add    BYTE PTR [rax],al
  41fa1c:	fadd   QWORD PTR [rdi]
  41fa1e:	add    al,BYTE PTR [rax]
  41fa20:	add    BYTE PTR [rax],al
  41fa22:	add    BYTE PTR [rax],al
  41fa24:	in     al,0x7
  41fa26:	add    al,BYTE PTR [rax]
  41fa28:	add    BYTE PTR [rax],al
  41fa2a:	add    BYTE PTR [rax],al
  41fa2c:	in     al,dx
  41fa2d:	(bad)  
  41fa2e:	add    al,BYTE PTR [rax]
  41fa30:	add    BYTE PTR [rax],al
  41fa32:	add    BYTE PTR [rax],al
  41fa34:	hlt    
  41fa35:	(bad)  
  41fa36:	add    al,BYTE PTR [rax]
  41fa38:	add    BYTE PTR [rax],al
  41fa3a:	add    BYTE PTR [rax],al
  41fa3c:	inc    BYTE PTR [rdi]
  41fa3e:	add    al,BYTE PTR [rax]
  41fa40:	add    BYTE PTR [rax],al
  41fa42:	add    BYTE PTR [rax],al
  41fa44:	(bad)  
  41fa45:	or     BYTE PTR [rdx],al
  41fa47:	add    BYTE PTR [rax],al
  41fa49:	add    BYTE PTR [rax],al
  41fa4b:	add    BYTE PTR [rdx],dl
  41fa4d:	or     BYTE PTR [rdx],al
  41fa4f:	add    BYTE PTR [rax],al
  41fa51:	add    BYTE PTR [rax],al
  41fa53:	add    BYTE PTR [rax+rcx*1],bl
  41fa56:	add    al,BYTE PTR [rax]
  41fa58:	add    BYTE PTR [rax],al
  41fa5a:	add    BYTE PTR [rax],al
  41fa5c:	or     BYTE PTR es:[rdx],al
  41fa5f:	add    BYTE PTR [rax],al
  41fa61:	add    BYTE PTR [rax],al
  41fa63:	add    BYTE PTR [rax],dh
  41fa65:	or     BYTE PTR [rdx],al
  41fa67:	add    BYTE PTR [rax],al
  41fa69:	add    BYTE PTR [rax],al
  41fa6b:	add    BYTE PTR [rdx],bh
  41fa6d:	or     BYTE PTR [rdx],al
  41fa6f:	add    BYTE PTR [rax],al
  41fa71:	add    BYTE PTR [rax],al
  41fa73:	add    BYTE PTR [rax+rcx*1+0x2],al
  41fa77:	add    BYTE PTR [rax],al
  41fa79:	add    BYTE PTR [rax],al
  41fa7b:	add    BYTE PTR [rsi+0x8],cl
  41fa7e:	add    al,BYTE PTR [rax]
  41fa80:	add    BYTE PTR [rax],al
  41fa82:	add    BYTE PTR [rax],al
  41fa84:	pop    rax
  41fa85:	or     BYTE PTR [rdx],al
  41fa87:	add    BYTE PTR [rax],al
  41fa89:	add    BYTE PTR [rax],al
  41fa8b:	add    BYTE PTR [rax+0x8],ah
  41fa8e:	add    al,BYTE PTR [rax]
  41fa90:	add    BYTE PTR [rax],al
  41fa92:	add    BYTE PTR [rax],al
  41fa94:	push   0x8
  41fa96:	add    al,BYTE PTR [rax]
  41fa98:	add    BYTE PTR [rax],al
  41fa9a:	add    BYTE PTR [rax],al
  41fa9c:	je     0x41faa6
  41fa9e:	add    al,BYTE PTR [rax]
  41faa0:	add    BYTE PTR [rax],al
  41faa2:	add    BYTE PTR [rax],al
  41faa4:	jle    0x41faae
  41faa6:	add    al,BYTE PTR [rax]
  41faa8:	add    BYTE PTR [rax],al
  41faaa:	add    BYTE PTR [rax],al
  41faac:	mov    BYTE PTR [rax],cl
  41faae:	add    al,BYTE PTR [rax]
  41fab0:	add    BYTE PTR [rax],al
  41fab2:	add    BYTE PTR [rax],al
  41fab4:	xchg   edx,eax
  41fab5:	or     BYTE PTR [rdx],al
  41fab7:	add    BYTE PTR [rax],al
  41fab9:	add    BYTE PTR [rax],al
  41fabb:	add    BYTE PTR [rax+rcx*1+0x2],bl
  41fac2:	add    BYTE PTR [rax],al
  41fac4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41fac5:	or     BYTE PTR [rdx],al
  41fac7:	add    BYTE PTR [rax],al
  41fac9:	add    BYTE PTR [rax],al
  41facb:	add    BYTE PTR [rax+0x208],dh
  41fad1:	add    BYTE PTR [rax],al
  41fad3:	add    BYTE PTR [rdx+0x208],bh
  41fad9:	add    BYTE PTR [rax],al
  41fadb:	add    ah,al
  41fadd:	or     BYTE PTR [rdx],al
  41fadf:	add    BYTE PTR [rax],al
  41fae1:	add    BYTE PTR [rax],al
  41fae3:	add    al,dl
  41fae5:	or     BYTE PTR [rdx],al
  41fae7:	add    BYTE PTR [rax],al
  41fae9:	add    BYTE PTR [rax],al
  41faeb:	add    dl,bl
  41faed:	or     BYTE PTR [rdx],al
  41faef:	add    BYTE PTR [rax],al
  41faf1:	add    BYTE PTR [rax],al
  41faf3:	add    ah,ah
  41faf5:	or     BYTE PTR [rdx],al
  41faf7:	add    BYTE PTR [rax],al
  41faf9:	add    BYTE PTR [rax],al
  41fafb:	add    dl,dh
  41fafd:	or     BYTE PTR [rdx],al
  41faff:	add    BYTE PTR [rax],al
  41fb01:	add    BYTE PTR [rax],al
  41fb03:	add    ah,bh
  41fb05:	or     BYTE PTR [rdx],al
  41fb07:	add    BYTE PTR [rax],al
  41fb09:	add    BYTE PTR [rax],al
  41fb0b:	add    BYTE PTR [rsi],al
  41fb0d:	or     DWORD PTR [rdx],eax
  41fb0f:	add    BYTE PTR [rax],al
  41fb11:	add    BYTE PTR [rax],al
  41fb13:	add    BYTE PTR [rax],dl
  41fb15:	or     DWORD PTR [rdx],eax
  41fb17:	add    BYTE PTR [rax],al
  41fb19:	add    BYTE PTR [rax],al
  41fb1b:	add    BYTE PTR [rdx],bl
  41fb1d:	or     DWORD PTR [rdx],eax
  41fb1f:	add    BYTE PTR [rax],al
  41fb21:	add    BYTE PTR [rax],al
  41fb23:	add    BYTE PTR [rdx],ah
  41fb25:	or     DWORD PTR [rdx],eax
  41fb27:	add    BYTE PTR [rax],al
  41fb29:	add    BYTE PTR [rax],al
  41fb2b:	add    BYTE PTR [rcx+rcx*1],ch
  41fb2e:	add    al,BYTE PTR [rax]
  41fb30:	add    BYTE PTR [rax],al
  41fb32:	add    BYTE PTR [rax],al
  41fb34:	or     DWORD PTR ss:[rdx],eax
  41fb37:	add    BYTE PTR [rax],al
  41fb39:	add    BYTE PTR [rax],al
  41fb3b:	add    BYTE PTR [rax+0x9],al
  41fb3e:	add    al,BYTE PTR [rax]
	...
  41fb4c:	rex.WX or QWORD PTR [rdx],rax
	...
  41fb5b:	add    BYTE PTR [rax+0x9],bl
  41fb5e:	add    al,BYTE PTR [rax]
	...
  41fb6c:	(bad)  
  41fb6d:	add    BYTE PTR [rdi+0x55],bl
  41fb70:	outs   dx,BYTE PTR ds:[rsi]
  41fb71:	ja     0x41fbdc
  41fb73:	outs   dx,BYTE PTR ds:[rsi]
  41fb74:	fs pop rdi
  41fb76:	push   rdx
  41fb77:	gs jae 0x41fbef
  41fb7a:	ins    DWORD PTR es:[rdi],dx
  41fb7b:	add    BYTE PTR gs:[rax],al
  41fb7e:	add    BYTE PTR [rax],al
  41fb80:	jmp    0x41fb82
  41fb82:	pop    rdi
  41fb83:	pop    rdx
  41fb84:	rex.WRX
  41fb85:	rex.WXB push r11
  41fb87:	jae    0x41fbbd
  41fb89:	imul   bp,WORD PTR [rsi+0x64],0x5045
  41fb8f:	rex.WXB movsxd rdi,DWORD PTR [r9+0x0]
  41fb93:	add    ah,ch
  41fb95:	add    BYTE PTR [rdi+0x5a],bl
  41fb98:	rex.WRX
  41fb99:	rex.WXB push r11
  41fb9b:	jae    0x41fbd1
  41fb9d:	imul   bp,WORD PTR [rsi+0x64],0x5045
  41fba3:	rex.WXB movsxd rdi,DWORD PTR [r9+0x79]
  41fba7:	add    dh,ch
  41fba9:	add    BYTE PTR [rdi+0x5a],bl
  41fbac:	rex.WRX
  41fbad:	rex.WXB push r11
  41fbaf:	jae    0x41fbe5
  41fbb1:	imul   bp,WORD PTR [rsi+0x64],0x6345
  41fbb7:	jns    0x41fbb9
  41fbb9:	add    BYTE PTR [rax],al
  41fbbb:	add    dh,dh
  41fbbd:	add    BYTE PTR [rdi+0x5a],bl
  41fbc0:	rex.WRX
  41fbc1:	rex.WXB push r11
  41fbc3:	jae    0x41fbfa
  41fbc5:	jb     0x41fc2d
  41fbc7:	imul   ebp,DWORD PTR [rsi+0x64],0x634b5045
  41fbce:	jns    0x41fbd0
  41fbd0:	test   DWORD PTR [rax],0x4b4e5a5f
  41fbd6:	push   rbx
  41fbd7:	jae    0x41fc0e
  41fbd9:	jb     0x41fc41
  41fbdb:	imul   ebp,DWORD PTR [rsi+0x64],0x634b5045
  41fbe2:	jns    0x41fc5d
  41fbe4:	add    BYTE PTR [rax],al
  41fbe6:	add    BYTE PTR [rax],al
  41fbe8:	stc    
  41fbe9:	add    BYTE PTR [rdi+0x5a],bl
  41fbec:	rex.WRX
  41fbed:	rex.WXB push r11
  41fbef:	jae    0x41fc26
  41fbf1:	jb     0x41fc59
  41fbf3:	imul   ebp,DWORD PTR [rsi+0x64],0x796345
  41fbfa:	add    BYTE PTR [rax],al
  41fbfc:	inc    BYTE PTR [rax]
  41fbfe:	pop    rdi
  41fbff:	pop    rdx
  41fc00:	rex.WRX
  41fc01:	rex.WXB push r11
  41fc03:	jae    0x41fc3b
  41fc05:	jae    0x41fc7c
  41fc07:	(bad)
  41fc0c:	jns    0x41fc87
  41fc0e:	add    BYTE PTR [rax],al
  41fc10:	add    DWORD PTR [rcx],eax
  41fc12:	pop    rdi
  41fc13:	pop    rdx
  41fc14:	rex.WRX
  41fc15:	rex.WXB push r11
  41fc17:	jae    0x41fc50
  41fc19:	movsxd ebp,DWORD PTR [rdi+0x6d]
  41fc1c:	jo     0x41fc7f
  41fc1e:	jb     0x41fc85
  41fc20:	rex.RB push r8
  41fc22:	rex.WXB movsxd rax,DWORD PTR [r8]
  41fc25:	add    BYTE PTR [rax],al
  41fc27:	add    BYTE PTR [rbx+0x4e5a5f01],bh
  41fc2d:	rex.WXB push r11
  41fc2f:	je     0x41fc66
  41fc31:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
  41fc35:	movsxd rax,DWORD PTR gs:[r13+0x31]
  41fc3a:	xor    ebx,DWORD PTR [rdi+0x4d]
  41fc3d:	pop    rdi
  41fc3e:	ja     0x41fca9
  41fc40:	fs outs dx,BYTE PTR gs:[rsi]
  41fc43:	pop    rdi
  41fc44:	imul   ebp,DWORD PTR [rsi+0x69],0x764574
  41fc4b:	add    BYTE PTR [rbx+rax*1+0x534e5a5f],dh
  41fc52:	outs   dx,DWORD PTR ds:[rsi]
  41fc53:	xor    esi,DWORD PTR [rax+0x75]
  41fc56:	je     0x41fc9d
  41fc58:	movsxd eax,DWORD PTR [rax]
  41fc5a:	add    BYTE PTR [rax],al
  41fc5c:	mov    ch,0x3
  41fc5e:	pop    rdi
  41fc5f:	pop    rdx
  41fc60:	rex.WRX push rbx
  41fc62:	outs   dx,DWORD PTR ds:[rsi]
  41fc63:	xor    eax,0x73756c66
  41fc68:	push   0xffffffffe2007645
  41fc6d:	add    ebx,DWORD PTR [rdi+0x5a]
  41fc70:	rex.WRX push rbx
  41fc72:	jae    0x41fca5
  41fc74:	xor    bl,BYTE PTR [rdi+0x4d]
  41fc77:	pop    rdi
  41fc78:	ins    BYTE PTR es:[rdi],dx
  41fc79:	gs (bad) 
  41fc7b:	imul   ebx,DWORD PTR [rdi+0x68],0x61
  41fc7f:	jb     0x41fce5
  41fc81:	rex.RB jbe 0x41fc84
  41fc84:	jrcxz  0x41fc89
  41fc86:	pop    rdi
  41fc87:	pop    rdx
  41fc88:	rex.WRX push rbx
  41fc8a:	jae    0x41fcbd
  41fc8c:	xor    bl,BYTE PTR [rdi+0x53]
  41fc8f:	pop    rdi
  41fc90:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41fc93:	jae    0x41fd09
  41fc95:	jb     0x41fd0c
  41fc97:	movsxd esi,DWORD PTR [rbp+rax*2+0x79]
  41fc9b:	movsxd edx,DWORD PTR [rdx+0x4b]
  41fc9e:	push   rbx
  41fc9f:	(bad)  
  41fca0:	movsxd rax,DWORD PTR [r13+0x0]
  41fca4:	icebp  
  41fca5:	add    ebx,DWORD PTR [rdi+0x5a]
  41fca8:	rex.WRX push rbx
  41fcaa:	jae    0x41fcdf
  41fcac:	outs   dx,BYTE PTR gs:[rsi]
  41fcae:	fs rex.RB jbe 0x41fcb2
  41fcb2:	add    BYTE PTR [rax],al
  41fcb4:	repnz add ebx,DWORD PTR [rdi+0x5a]
  41fcb8:	rex.WRX push rbx
  41fcba:	jae    0x41fcf0
  41fcbc:	pop    rdi
  41fcbd:	push   rdx
  41fcbe:	gs jo  0x41fcf2
  41fcc1:	xor    BYTE PTR [rdi+0x4d],bl
  41fcc4:	pop    rdi
  41fcc5:	fs gs jae 0x41fd3d
  41fcc9:	jb     0x41fd3a
  41fccb:	jns    0x41fd12
  41fccd:	push   rdx
  41fcce:	rex.WXB push r11
  41fcd0:	(bad)  
  41fcd1:	movsxd rax,DWORD PTR [r13+0x0]
  41fcd5:	add    BYTE PTR [rax],al
  41fcd7:	add    bl,dh
  41fcd9:	add    ebx,DWORD PTR [rdi+0x5a]
  41fcdc:	rex.WRX push rbx
  41fcde:	jae    0x41fd14
  41fce0:	pop    rdi
  41fce1:	push   rdx
  41fce2:	gs jo  0x41fd16
  41fce5:	xor    BYTE PTR [rdi+0x4d],bl
  41fce8:	pop    rdi
  41fce9:	imul   esi,DWORD PTR fs:[rbx+0x70],0x4565736f
  41fcf1:	push   rdx
  41fcf2:	rex.WXB push r11
  41fcf4:	(bad)  
  41fcf5:	movsxd rax,DWORD PTR [r13+0x0]
  41fcf9:	add    BYTE PTR [rax],al
  41fcfb:	add    BYTE PTR [rbx],al
  41fcfd:	add    al,0x5f
  41fcff:	pop    rdx
  41fd00:	rex.WRX push rbx
  41fd02:	jae    0x41fd38
  41fd04:	jae    0x41fd7d
  41fd06:	(bad)  
  41fd07:	jo     0x41fd4e
  41fd09:	push   rdx
  41fd0a:	push   rbx
  41fd0b:	jae    0x41fd0d
  41fd0d:	add    BYTE PTR [rax],al
  41fd0f:	add    BYTE PTR [rdx],cl
  41fd11:	add    al,0x5f
  41fd13:	pop    rdx
  41fd14:	rex.WRX push rbx
  41fd16:	jae    0x41fd4e
  41fd18:	(bad)  
  41fd19:	jo     0x41fd8b
  41fd1b:	outs   dx,BYTE PTR gs:[rsi]
  41fd1d:	fs rex.RB push r8
  41fd20:	rex.WXB movsxd rax,DWORD PTR [r8]
  41fd23:	add    BYTE PTR [rbx],cl
  41fd25:	add    al,0x5f
  41fd27:	pop    rdx
  41fd28:	rex.WRX push rbx
  41fd2a:	jae    0x41fd62
  41fd2c:	(bad)  
  41fd2d:	jo     0x41fd9f
  41fd2f:	outs   dx,BYTE PTR gs:[rsi]
  41fd31:	fs rex.RB push r8
  41fd34:	rex.WXB movsxd rdi,DWORD PTR [r9+0x0]
  41fd38:	or     al,0x4
  41fd3a:	pop    rdi
  41fd3b:	pop    rdx
  41fd3c:	rex.WRX push rbx
  41fd3e:	jae    0x41fd76
  41fd40:	(bad)  
  41fd41:	jo     0x41fdb3
  41fd43:	outs   dx,BYTE PTR gs:[rsi]
  41fd45:	fs rex.RB push r10
  41fd48:	rex.WXB push r11
  41fd4a:	jae    0x41fd4c
  41fd4c:	adc    DWORD PTR [rdi+rbx*2],eax
  41fd4f:	pop    rdx
  41fd50:	rex.WRX push rbx
  41fd52:	jae    0x41fd8a
  41fd54:	(bad)  
  41fd55:	jae    0x41fdca
  41fd57:	imul   esp,DWORD PTR [rdi+0x6e],0x634b5045
  41fd5e:	add    BYTE PTR [rax],al
  41fd60:	adc    eax,DWORD PTR [rdi+rbx*2]
  41fd63:	pop    rdx
  41fd64:	rex.WRX push rbx
  41fd66:	jae    0x41fd9e
  41fd68:	(bad)  
  41fd69:	jae    0x41fdde
  41fd6b:	imul   esp,DWORD PTR [rdi+0x6e],0x534b5245
  41fd72:	jae    0x41fd74
  41fd74:	sbb    eax,DWORD PTR [rdi+rbx*2]
  41fd77:	pop    rdx
  41fd78:	rex.WRX push rbx
  41fd7a:	jae    0x41fdb2
  41fd7c:	imul   ebp,DWORD PTR [rsi+0x73],0x45747265
  41fd83:	jns    0x41fdd5
  41fd85:	rex.WXB movsxd rdi,DWORD PTR [r9+0x0]
  41fd89:	add    BYTE PTR [rax],al
  41fd8b:	add    BYTE PTR [rax],dh
  41fd8d:	add    al,0x5f
  41fd8f:	pop    rdx
  41fd90:	rex.WRX push rbx
  41fd92:	jae    0x41fdcb
  41fd94:	jb     0x41fdfb
  41fd96:	jo     0x41fe04
  41fd98:	(bad)  
  41fd99:	movsxd esp,DWORD PTR [rbp+0x45]
  41fd9c:	jns    0x41fe17
  41fd9e:	push   rax
  41fd9f:	rex.WXB movsxd rdi,DWORD PTR [r9+0x0]
  41fda3:	add    BYTE PTR [rsp+rax*1],dh
  41fda6:	pop    rdi
  41fda7:	pop    rdx
  41fda8:	rex.WRX push rbx
  41fdaa:	jae    0x41fde3
  41fdac:	jb     0x41fe13
  41fdae:	jae    0x41fe15
  41fdb0:	jb     0x41fe28
  41fdb2:	gs rex.RB jns 0x41fdb6
  41fdb6:	add    BYTE PTR [rax],al
  41fdb8:	cmp    al,BYTE PTR [rdi+rbx*2]
  41fdbb:	pop    rdx
  41fdbc:	rex.WRX push rbx
  41fdbe:	jae    0x41fe03
  41fdc0:	xor    DWORD PTR [rbp+0x50],eax
  41fdc3:	rex.WXB movsxd rdx,DWORD PTR [r10+0x4b]
  41fdc7:	push   rbx
  41fdc8:	(bad)  
  41fdc9:	movsxd rax,DWORD PTR [r13+0x0]
  41fdcd:	add    BYTE PTR [rax],al
  41fdcf:	add    BYTE PTR [rbx],bh
  41fdd1:	add    al,0x5f
  41fdd3:	pop    rdx
  41fdd4:	rex.WRX push rbx
  41fdd6:	jae    0x41fe1b
  41fdd8:	xor    DWORD PTR [rbp+0x50],eax
  41fddb:	rex.WXB movsxd rdi,DWORD PTR [r9+0x52]
  41fddf:	rex.WXB push r11
  41fde1:	(bad)  
  41fde2:	movsxd rax,DWORD PTR [r13+0x0]
  41fde6:	add    BYTE PTR [rax],al
  41fde8:	cmp    eax,0x4e5a5f04
  41fded:	push   rbx
  41fdee:	jae    0x41fe33
  41fdf0:	xor    DWORD PTR [rbp+0x52],eax
  41fdf3:	rex.WXB push r11
  41fdf5:	jae    0x41fdf7
  41fdf7:	add    BYTE PTR [rsi],bh
  41fdf9:	add    al,0x5f
  41fdfb:	pop    rdx
  41fdfc:	rex.WRX push rbx
  41fdfe:	jae    0x41fe43
  41fe00:	xor    DWORD PTR [rbp+0x52],eax
  41fe03:	rex.WXB push r11
  41fe05:	jae    0x41fe80
  41fe07:	jns    0x41fe09
  41fe09:	add    BYTE PTR [rax],al
  41fe0b:	add    dl,ch
  41fe0d:	add    al,0x5f
  41fe0f:	pop    rdx
  41fe10:	rex.WRX push rbx
  41fe12:	je     0x41fe45
  41fe14:	xor    bl,BYTE PTR [rdi+0x5f]
  41fe17:	(bad)  
  41fe19:	jae    0x41fe84
  41fe1b:	movsxd ebx,DWORD PTR [rdi+0x66]
  41fe1e:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x31444563
  41fe26:	rex.RB jbe 0x41fe29
  41fe29:	add    BYTE PTR [rax],al
  41fe2b:	add    BYTE PTR [rbp+rax*1+0x5f],dl
  41fe2f:	pop    rdx
  41fe30:	rex.WRX push rbx
  41fe32:	je     0x41fe65
  41fe34:	xor    esp,DWORD PTR [rdx+0x61]
  41fe37:	jae    0x41fea2
  41fe39:	movsxd ebx,DWORD PTR [rdi+0x66]
  41fe3c:	imul   ebp,DWORD PTR [rbp+riz*2+0x62],0x63496675
  41fe44:	push   rbx
  41fe45:	je     0x41fe78
  41fe47:	xor    DWORD PTR [rbx+0x68],esp
  41fe4a:	(bad)  
  41fe4b:	jb     0x41feac
  41fe4d:	je     0x41fec1
  41fe4f:	(bad)  
  41fe50:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x34454563
  41fe58:	outs   dx,DWORD PTR ds:[rsi]
  41fe59:	jo     0x41fec0
  41fe5b:	outs   dx,BYTE PTR ds:[rsi]
  41fe5c:	rex.RB push r8
  41fe5e:	rex.WXB movsxd rdx,DWORD PTR [r11+0x74]
  41fe62:	xor    DWORD PTR [rbx],esi
  41fe64:	pop    rdi
  41fe65:	rex.WB outs dx,DWORD PTR ds:[rsi]
  41fe67:	jae    0x41fec8
  41fe69:	rex.WRXB jo 0x41fed1
  41fe6c:	outs   dx,BYTE PTR ds:[rsi]
  41fe6d:	ins    DWORD PTR es:[rdi],dx
  41fe6e:	outs   dx,DWORD PTR ds:[rsi]
  41fe6f:	fs add BYTE PTR gs:[rax],al
  41fe73:	add    BYTE PTR [rdi+0x5],dl
  41fe76:	pop    rdi
  41fe77:	pop    rdx
  41fe78:	rex.WRX push rbx
  41fe7a:	je     0x41fead
  41fe7c:	xor    esp,DWORD PTR [rdx+0x61]
  41fe7f:	jae    0x41feea
  41fe81:	movsxd ebx,DWORD PTR [rdi+0x66]
  41fe84:	imul   ebp,DWORD PTR [rbp+riz*2+0x62],0x63496675
  41fe8c:	push   rbx
  41fe8d:	je     0x41fec0
  41fe8f:	xor    DWORD PTR [rbx+0x68],esp
  41fe92:	(bad)  
  41fe93:	jb     0x41fef4
  41fe95:	je     0x41ff09
  41fe97:	(bad)  
  41fe98:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x35454563
  41fea0:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  41fea4:	gs rex.RB jbe 0x41fea8
  41fea8:	movsxd eax,DWORD PTR [rip+0x534e5a5f]        # 0x5390590d
  41feae:	je     0x41fee1
  41feb0:	xor    esp,DWORD PTR [rdx+0x61]
  41feb3:	jae    0x41ff1e
  41feb5:	movsxd ebx,DWORD PTR [rdi+0x66]
  41feb8:	imul   ebp,DWORD PTR [rbp+riz*2+0x62],0x63496675
  41fec0:	push   rbx
  41fec1:	je     0x41fef4
  41fec3:	xor    DWORD PTR [rbx+0x68],esp
  41fec6:	(bad)  
  41fec7:	jb     0x41ff28
  41fec9:	je     0x41ff3d
  41fecb:	(bad)  
  41fecc:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x43454563
  41fed4:	xor    DWORD PTR [rbp+0x76],eax
  41fed7:	add    BYTE PTR [rsi+0x5],ah
  41feda:	pop    rdi
  41fedb:	pop    rdx
  41fedc:	rex.WRX push rbx
  41fede:	je     0x41ff11
  41fee0:	xor    esp,DWORD PTR [rdx+0x61]
  41fee3:	jae    0x41ff4e
  41fee5:	movsxd ebx,DWORD PTR [rdi+0x66]
  41fee8:	imul   ebp,DWORD PTR [rbp+riz*2+0x62],0x63496675
  41fef0:	push   rbx
  41fef1:	je     0x41ff24
  41fef3:	xor    DWORD PTR [rbx+0x68],esp
  41fef6:	(bad)  
  41fef7:	jb     0x41ff58
  41fef9:	je     0x41ff6d
  41fefb:	(bad)  
  41fefc:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x44454563
  41ff04:	xor    DWORD PTR [rbp+0x76],eax
  41ff07:	add    BYTE PTR [rdi],dh
  41ff09:	(bad)  
  41ff0a:	pop    rdi
  41ff0b:	pop    rdx
  41ff0c:	rex.WRX push rbx
  41ff0e:	je     0x41ff41
  41ff10:	xor    al,0x62
  41ff12:	(bad)  
  41ff13:	jae    0x41ff7e
  41ff15:	movsxd ebx,DWORD PTR [rdi+0x6f]
  41ff18:	data16 jae 0x41ff8f
  41ff1b:	jb     0x41ff82
  41ff1d:	(bad)  
  41ff1e:	ins    DWORD PTR es:[rdi],dx
  41ff1f:	movsxd rdx,DWORD PTR [r11+0x74]
  41ff23:	xor    DWORD PTR [rcx],esi
  41ff25:	movsxd ebp,DWORD PTR [rax+0x61]
  41ff28:	jb     0x41ff89
  41ff2a:	je     0x41ff9e
  41ff2c:	(bad)  
  41ff2d:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x44454563
  41ff35:	xor    DWORD PTR [rbp+0x76],eax
  41ff38:	add    BYTE PTR [rax],al
  41ff3a:	add    BYTE PTR [rax],al
  41ff3c:	fimul  DWORD PTR [rcx]
  41ff3e:	pop    rdi
  41ff3f:	pop    rdx
  41ff40:	rex.WRX push rbx
  41ff42:	je     0x41ff7a
  41ff44:	ins    BYTE PTR es:[rdi],dx
  41ff45:	outs   dx,DWORD PTR ds:[rsi]
  41ff46:	movsxd esp,DWORD PTR [rcx+0x6c]
  41ff49:	xor    DWORD PTR gs:[rbp+0x76],r8d
  41ff4e:	add    BYTE PTR [rax],al
  41ff50:	sbb    DWORD PTR [rdx],ecx
  41ff52:	pop    rdi
  41ff53:	pop    rdx
  41ff54:	rex.WRX push rbx
  41ff56:	je     0x41ff90
  41ff58:	pop    rdi
  41ff59:	pop    rdi
  41ff5a:	fs gs je 0x41ffbf
  41ff5e:	imul   ebp,DWORD PTR [rcx+rsi*1+0x35],0x73694c5f
  41ff66:	je     0x41ffc7
  41ff68:	outs   dx,BYTE PTR ds:[rsi]
  41ff69:	outs   dx,DWORD PTR ds:[rsi]
  41ff6a:	fs gs pop rdi
  41ff6d:	(bad)  
  41ff6f:	jae    0x41ffd6
  41ff71:	(bad)  
  41ff72:	pop    rdi
  41ff73:	rex.WRB pop r15
  41ff75:	push   0x456b6f6f
  41ff7a:	push   rax
  41ff7b:	push   rbx
  41ff7c:	xor    BYTE PTR [rdi+0x0],bl
  41ff7f:	add    BYTE PTR [rax],dh
  41ff81:	or     bl,BYTE PTR [rdi+0x5a]
  41ff84:	rex.WRX push rbx
  41ff86:	je     0x41ffc0
  41ff88:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
  41ff8f:	gs xor al,0x49
  41ff92:	outs   dx,BYTE PTR ds:[rsi]
  41ff93:	imul   esi,DWORD PTR [rbx+rax*2+0x31],0x7645
  41ff9b:	add    BYTE PTR [rdx],dh
  41ff9d:	or     bl,BYTE PTR [rdi+0x5a]
  41ffa0:	rex.WRX push rbx
  41ffa2:	je     0x41ffdc
  41ffa4:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
  41ffab:	gs xor al,0x49
  41ffae:	outs   dx,BYTE PTR ds:[rsi]
  41ffaf:	imul   esi,DWORD PTR [rsp+rax*2+0x31],0x7645
  41ffb7:	add    BYTE PTR [rdi+0xa],cl
  41ffba:	pop    rdi
  41ffbb:	pop    rdx
  41ffbc:	rex.WRX push rbx
  41ffbe:	je     0x41fff8
  41ffc0:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
  41ffc7:	rex.XB xor al,BYTE PTR gs:[r13+0x76]
  41ffcc:	add    BYTE PTR [rax],al
  41ffce:	add    BYTE PTR [rax],al
  41ffd0:	push   rdx
  41ffd1:	or     bl,BYTE PTR [rdi+0x5a]
  41ffd4:	rex.WRX push rbx
  41ffd6:	je     0x420010
  41ffd8:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
  41ffdf:	xor    r8b,BYTE PTR gs:[rbp+0x76]
  41ffe4:	add    BYTE PTR [rax],al
  41ffe6:	add    BYTE PTR [rax],al
  41ffe8:	stos   DWORD PTR es:[rdi],eax
  41ffe9:	or     bl,BYTE PTR [rdi+0x5a]
  41ffec:	rex.WRX push rbx
  41ffee:	je     0x420029
  41fff0:	(bad)  
  41fff2:	jae    0x42005d
  41fff4:	movsxd ebx,DWORD PTR [rdi+0x69]
  41fff7:	outs   dx,DWORD PTR ds:[rsi]
  41fff8:	jae    0x420043
  41fffa:	movsxd edx,DWORD PTR [rbx+0x74]
  41fffd:	xor    DWORD PTR [rcx],esi
  41ffff:	movsxd ebp,DWORD PTR [rax+0x61]
  420002:	jb     0x420063
  420004:	je     0x420078
  420006:	(bad)  
  420007:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x34454563
  42000f:	imul   ebp,DWORD PTR [rsi+0x69],0x53504574
  420016:	je     0x420049
  420018:	xor    eax,0x69736162
  42001d:	movsxd ebx,DWORD PTR [rdi+0x73]
  420020:	je     0x420094
  420022:	gs (bad) 
  420024:	ins    DWORD PTR es:[rdi],dx
  420025:	(bad)  
  420026:	jne    0x42008e
  420028:	movsxd rdx,DWORD PTR [r11+0x31]
  42002c:	pop    rdi
  42002d:	add    BYTE PTR [r8],r8b
  420030:	lods   al,BYTE PTR ds:[rsi]
  420031:	or     bl,BYTE PTR [rdi+0x5a]
  420034:	rex.WRX push rbx
  420036:	je     0x420071
  420038:	(bad)  
  42003a:	jae    0x4200a5
  42003c:	movsxd ebx,DWORD PTR [rdi+0x69]
  42003f:	outs   dx,DWORD PTR ds:[rsi]
  420040:	jae    0x42008b
  420042:	movsxd edx,DWORD PTR [rbx+0x74]
  420045:	xor    DWORD PTR [rcx],esi
  420047:	movsxd ebp,DWORD PTR [rax+0x61]
  42004a:	jb     0x4200ab
  42004c:	je     0x4200c0
  42004e:	(bad)  
  42004f:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x35454563
  420057:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  42005b:	jb     0x4200a2
  42005d:	push   rbx
  42005e:	je     0x420091
  420060:	xor    bl,BYTE PTR [rdi+0x49]
  420063:	outs   dx,DWORD PTR ds:[rsi]
  420064:	jae    0x4200c5
  420066:	rex.WB outs dx,DWORD PTR ds:[rsi]
  420068:	jae    0x4200de
  42006a:	(bad)  
  42006b:	je     0x4200d2
  42006d:	add    BYTE PTR [rax],al
  42006f:	add    bh,bh
  420071:	or     bl,BYTE PTR [rdi+0x5a]
  420074:	push   rbx
  420075:	je     0x4200a8
  420077:	ss pop rdi
  420079:	pop    rdi
  42007a:	outs   dx,DWORD PTR ds:[rsi]
  42007b:	jae    0x4200f1
  42007d:	jb     0x4200e4
  42007f:	(bad)  
  420080:	ins    DWORD PTR es:[rdi],dx
  420081:	pop    rdi
  420082:	imul   ebp,DWORD PTR [rsi+0x73],0x49747265
  420089:	movsxd edx,DWORD PTR [rbx+0x74]
  42008c:	xor    DWORD PTR [rcx],esi
  42008e:	movsxd ebp,DWORD PTR [rax+0x61]
  420091:	jb     0x4200f2
  420093:	je     0x420107
  420095:	(bad)  
  420096:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454563
  42009e:	push   rbx
  42009f:	je     0x4200d2
  4200a1:	xor    esp,DWORD PTR [rdx+0x61]
  4200a4:	jae    0x42010f
  4200a6:	movsxd ebx,DWORD PTR [rdi+0x6f]
  4200a9:	jae    0x42011f
  4200ab:	jb     0x420112
  4200ad:	(bad)  
  4200ae:	ins    DWORD PTR es:[rdi],dx
  4200af:	rex.WB push r12
  4200b1:	pop    rdi
  4200b2:	push   rsp
  4200b3:	xor    BYTE PTR [rdi+0x45],bl
  4200b6:	push   rbx
  4200b7:	ss pop rdi
  4200b9:	push   rax
  4200ba:	rex.WXB push r11
  4200bc:	xor    ebx,DWORD PTR [rdi+0x78]
  4200bf:	add    BYTE PTR [rcx],al
  4200c1:	or     ebx,DWORD PTR [rdi+0x5a]
  4200c4:	push   rbx
  4200c5:	je     0x4200f8
  4200c7:	ss pop rdi
  4200c9:	pop    rdi
  4200ca:	je     0x420134
  4200cc:	jb     0x42013d
  4200ce:	ja     0x42012f
  4200d0:	(bad)
  4200d5:	(bad)  
  4200d6:	jae    0x42014c
  4200d8:	jbe    0x4200da
  4200da:	add    BYTE PTR [rax],al
  4200dc:	or     cl,BYTE PTR [rbx]
  4200de:	pop    rdi
  4200df:	pop    rdx
  4200e0:	push   rbx
  4200e1:	je     0x420114
  4200e3:	cmp    BYTE PTR [rdi+0x52],bl
  4200e6:	(bad)  
  4200e7:	pop    rdi
  4200e8:	je     0x42015c
  4200ea:	gs gs pop rdi
  4200ed:	fs movsxd esi,DWORD PTR gs:[rdx+0x65]
  4200f2:	ins    DWORD PTR es:[rdi],dx
  4200f3:	outs   dx,BYTE PTR gs:[rsi]
  4200f5:	je     0x420147
  4200f7:	push   rbx
  4200f8:	je     0x42012b
  4200fa:	cmp    BYTE PTR [rdi+0x52],bl
  4200fd:	(bad)  
  4200fe:	pop    rdi
  4200ff:	je     0x420173
  420101:	gs gs pop rdi
  420104:	outs   dx,BYTE PTR ds:[rsi]
  420105:	outs   dx,DWORD PTR ds:[rsi]
  420106:	fs gs pop rdi
  420109:	(bad)  
  42010b:	jae    0x420172
  42010d:	add    BYTE PTR [rax],al
  42010f:	add    BYTE PTR [rbx+rcx*1],cl
  420112:	pop    rdi
  420113:	pop    rdx
  420114:	push   rbx
  420115:	je     0x420148
  420117:	cmp    BYTE PTR [rdi+0x52],bl
  42011a:	(bad)  
  42011b:	pop    rdi
  42011c:	je     0x420190
  42011e:	gs gs pop rdi
  420121:	imul   ebp,DWORD PTR [rsi+0x63],0x656d6572
  420128:	outs   dx,BYTE PTR ds:[rsi]
  420129:	je     0x42017b
  42012b:	push   rbx
  42012c:	je     0x42015f
  42012e:	cmp    BYTE PTR [rdi+0x52],bl
  420131:	(bad)  
  420132:	pop    rdi
  420133:	je     0x4201a7
  420135:	gs gs pop rdi
  420138:	outs   dx,BYTE PTR ds:[rsi]
  420139:	outs   dx,DWORD PTR ds:[rsi]
  42013a:	fs gs pop rdi
  42013d:	(bad)  
  42013f:	jae    0x4201a6
  420141:	add    BYTE PTR [rax],al
  420143:	add    BYTE PTR [rdi],dl
  420145:	or     ebx,DWORD PTR [rdi+0x5a]
  420148:	push   rbx
  420149:	je     0x42017d
  42014b:	xor    BYTE PTR [rdi+0x5f],bl
  42014e:	je     0x4201b8
  420150:	jb     0x4201c1
  420152:	ja     0x4201b3
  420154:	ins    BYTE PTR es:[rdi],dx
  420155:	outs   dx,BYTE PTR gs:[rsi]
  420157:	addr32 je 0x4201c2
  42015a:	pop    rdi
  42015b:	gs jb  0x4201d0
  42015e:	outs   dx,DWORD PTR ds:[rsi]
  42015f:	jb     0x4201b1
  420161:	rex.WXB movsxd rax,DWORD PTR [r8]
  420164:	and    cl,BYTE PTR [rbx]
  420166:	pop    rdi
  420167:	pop    rdx
  420168:	push   rbx
  420169:	je     0x42019d
  42016b:	xor    al,0x5f
  42016d:	pop    rdi
  42016e:	je     0x4201d8
  420170:	jb     0x4201e1
  420172:	ja     0x4201d3
  420174:	outs   dx,DWORD PTR ds:[rsi]
  420175:	jne    0x4201eb
  420177:	pop    rdi
  420178:	outs   dx,DWORD PTR ds:[rsi]
  420179:	pop    di
  42017b:	jb     0x4201de
  42017d:	outs   dx,BYTE PTR ds:[rsi]
  42017e:	addr32 gs pop rdi
  420181:	ins    WORD PTR es:[rdi],dx
  420183:	je     0x4201d5
  420185:	rex.WXB movsxd rdi,DWORD PTR [r10+0x0]
  420189:	add    BYTE PTR [rax],al
  42018b:	add    BYTE PTR [rip+0x535a5f0b],ah        # 0x539c609c
  420191:	je     0x4201c5
  420193:	cmp    DWORD PTR [rdi+0x52],ebx
  420196:	(bad)  
  420197:	pop    rdi
  420198:	je     0x42020c
  42019a:	gs gs pop rdi
  42019d:	imul   ebp,DWORD PTR [rsi+0x73],0x5f747265
  4201a4:	(bad)  
  4201a5:	outs   dx,BYTE PTR ds:[rsi]
  4201a6:	fs pop rdi
  4201a8:	jb     0x42020f
  4201aa:	(bad)
  4201af:	movsxd esp,DWORD PTR [rbp+0x62]
  4201b2:	push   rax
  4201b3:	push   rbx
  4201b4:	je     0x4201e7
  4201b6:	cmp    BYTE PTR [rdi+0x52],bl
  4201b9:	(bad)  
  4201ba:	pop    rdi
  4201bb:	je     0x42022f
  4201bd:	gs gs pop rdi
  4201c0:	outs   dx,BYTE PTR ds:[rsi]
  4201c1:	outs   dx,DWORD PTR ds:[rsi]
  4201c2:	fs gs pop rdi
  4201c5:	(bad)  
  4201c7:	jae    0x42022e
  4201c9:	push   rbx
  4201ca:	xor    BYTE PTR [rdi+0x52],bl
  4201cd:	push   rbx
  4201ce:	pop    rdi
  4201cf:	add    BYTE PTR [rcx],ch
  4201d1:	or     ebx,DWORD PTR [rdi+0x5a]
  4201d4:	push   rbx
  4201d5:	je     0x42020b
  4201d7:	movsxd esp,DWORD PTR [rbp+0x72]
  4201da:	jb     0x4201dc
  4201dc:	sub    ecx,DWORD PTR [rbx]
  4201de:	pop    rdi
  4201df:	pop    rdx
  4201e0:	push   rbx
  4201e1:	je     0x420217
  4201e3:	movsxd ebp,DWORD PTR [rdi+0x75]
  4201e6:	je     0x4201e8
  4201e8:	sub    al,0xb
  4201ea:	pop    rdi
  4201eb:	pop    rdx
  4201ec:	push   rbx
  4201ed:	je     0x420223
  4201ef:	outs   dx,BYTE PTR gs:[rsi]
  4201f1:	fs ins BYTE PTR es:[rdi],dx
  4201f3:	movsxd rdx,DWORD PTR [r11+0x74]
  4201f7:	xor    DWORD PTR [rcx],esi
  4201f9:	movsxd ebp,DWORD PTR [rax+0x61]
  4201fc:	jb     0x42025d
  4201fe:	je     0x420272
  420200:	(bad)  
  420201:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454563
  420209:	push   rbx
  42020a:	je     0x42023d
  42020c:	xor    esp,DWORD PTR [rdx+0x61]
  42020f:	jae    0x42027a
  420211:	movsxd ebx,DWORD PTR [rdi+0x6f]
  420214:	jae    0x42028a
  420216:	jb     0x42027d
  420218:	(bad)  
  420219:	ins    DWORD PTR es:[rdi],dx
  42021a:	rex.WB push r12
  42021c:	pop    rdi
  42021d:	push   rsp
  42021e:	xor    BYTE PTR [rdi+0x45],bl
  420221:	push   rbx
  420222:	ss pop rdi
  420224:	add    BYTE PTR [rax],al
  420226:	add    BYTE PTR [rax],al
  420228:	jae    0x420235
  42022a:	pop    rdi
  42022b:	pop    rdx
  42022c:	push   rbx
  42022d:	je     0x42029b
  42022f:	jae    0x42027a
  420231:	push   rbx
  420232:	je     0x420265
  420234:	xor    DWORD PTR [rbx+0x68],esp
  420237:	(bad)  
  420238:	jb     0x420299
  42023a:	je     0x4202ae
  42023c:	(bad)  
  42023d:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x52454563
  420245:	push   rbx
  420246:	je     0x420279
  420248:	xor    esp,DWORD PTR [rdx+0x61]
  42024b:	jae    0x4202b6
  42024d:	movsxd ebx,DWORD PTR [rdi+0x6f]
  420250:	jae    0x4202c6
  420252:	jb     0x4202b9
  420254:	(bad)  
  420255:	ins    DWORD PTR es:[rdi],dx
  420256:	movsxd rdx,DWORD PTR [r15+rbx*2+0x45]
  42025b:	push   rbx
  42025c:	xor    eax,0x634b505f
  420261:	add    BYTE PTR [rax],al
  420263:	add    BYTE PTR [rdx],dh
  420265:	or     eax,0x54545a5f
  42026a:	push   rbx
  42026b:	je     0x42029e
  42026d:	xor    al,0x62
  42026f:	(bad)  
  420270:	jae    0x4202db
  420272:	movsxd ebx,DWORD PTR [rdi+0x6f]
  420275:	data16 jae 0x4202ec
  420278:	jb     0x4202df
  42027a:	(bad)  
  42027b:	ins    DWORD PTR es:[rdi],dx
  42027c:	movsxd rdx,DWORD PTR [r11+0x74]
  420280:	xor    DWORD PTR [rcx],esi
  420282:	movsxd ebp,DWORD PTR [rax+0x61]
  420285:	jb     0x4202e6
  420287:	je     0x4202fb
  420289:	(bad)  
  42028a:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x454563
  420292:	add    BYTE PTR [rax],al
  420294:	(bad)  
  420295:	or     eax,0x56545a5f
  42029a:	push   rbx
  42029b:	je     0x4202ce
  42029d:	xor    esp,DWORD PTR [rdx+0x61]
  4202a0:	jae    0x42030b
  4202a2:	movsxd ebx,DWORD PTR [rdi+0x66]
  4202a5:	imul   ebp,DWORD PTR [rbp+riz*2+0x62],0x63496675
  4202ad:	push   rbx
  4202ae:	je     0x4202e1
  4202b0:	xor    DWORD PTR [rbx+0x68],esp
  4202b3:	(bad)  
  4202b4:	jb     0x420315
  4202b6:	je     0x42032a
  4202b8:	(bad)  
  4202b9:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x454563
  4202c1:	add    BYTE PTR [rax],al
  4202c3:	add    BYTE PTR [rbp+rcx*1+0x5f],ch
  4202c7:	pop    rdx
  4202c8:	push   rsp
  4202c9:	push   rsi
  4202ca:	push   rbx
  4202cb:	je     0x4202fe
  4202cd:	xor    al,0x62
  4202cf:	(bad)  
  4202d0:	jae    0x42033b
  4202d2:	movsxd ebx,DWORD PTR [rdi+0x6f]
  4202d5:	data16 jae 0x42034c
  4202d8:	jb     0x42033f
  4202da:	(bad)  
  4202db:	ins    DWORD PTR es:[rdi],dx
  4202dc:	movsxd rdx,DWORD PTR [r11+0x74]
  4202e0:	xor    DWORD PTR [rcx],esi
  4202e2:	movsxd ebp,DWORD PTR [rax+0x61]
  4202e5:	jb     0x420346
  4202e7:	je     0x42035b
  4202e9:	(bad)  
  4202ea:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x454563
  4202f2:	add    BYTE PTR [rax],al
  4202f4:	je     0x420303
  4202f6:	pop    rdi
  4202f7:	pop    rdx
  4202f8:	push   rsp
  4202f9:	push   rsi
  4202fa:	push   rbx
  4202fb:	je     0x42032e
  4202fd:	xor    eax,0x69736162
  420302:	movsxd ebx,DWORD PTR [rdi+0x73]
  420305:	je     0x420379
  420307:	gs (bad) 
  420309:	ins    DWORD PTR es:[rdi],dx
  42030a:	(bad)  
  42030b:	jne    0x420373
  42030d:	movsxd rdx,DWORD PTR [r11+0x74]
  420311:	xor    DWORD PTR [rcx],esi
  420313:	movsxd ebp,DWORD PTR [rax+0x61]
  420316:	jb     0x420377
  420318:	je     0x42038c
  42031a:	(bad)  
  42031b:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x454563
  420323:	add    BYTE PTR [rdi+0x545a5f0d],ah
  420329:	push   rsi
  42032a:	push   rbx
  42032b:	je     0x420366
  42032d:	(bad)  
  42032f:	jae    0x42039a
  420331:	movsxd ebx,DWORD PTR [rdi+0x69]
  420334:	outs   dx,DWORD PTR ds:[rsi]
  420335:	jae    0x420380
  420337:	movsxd edx,DWORD PTR [rbx+0x74]
  42033a:	xor    DWORD PTR [rcx],esi
  42033c:	movsxd ebp,DWORD PTR [rax+0x61]
  42033f:	jb     0x4203a0
  420341:	je     0x4203b5
  420343:	(bad)  
  420344:	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x454563
  42034c:	(bad)  
  42034d:	or     eax,0x6c645a5f
  420352:	push   rax
  420353:	jbe    0x420355
  420355:	add    BYTE PTR [rax],al
  420357:	add    dh,ch
  420359:	or     eax,0x776e5a5f
  42035e:	jns    0x420360
  420360:	test   BYTE PTR [rip+0x78635f5f],0x61        # 0x78a562c6
  420367:	pop    rdi
  420368:	(bad)  
  420369:	imul   ebp,DWORD PTR gs:[esi+0x5f],0x63746163
  420372:	push   0x5f0dfb00
  420377:	pop    rdi
  420378:	movsxd edi,DWORD PTR [rax+0x61]
  42037b:	pop    rdi
  42037c:	outs   dx,BYTE PTR gs:[rsi]
  42037e:	fs pop rdi
  420380:	movsxd esp,DWORD PTR [rcx+0x74]
  420383:	movsxd ebp,DWORD PTR [rax+0x0]
  420386:	add    BYTE PTR [rax],al
  420388:	add    DWORD PTR [rsi],ecx
  42038a:	pop    rdi
  42038b:	pop    rdi
  42038c:	movsxd edi,DWORD PTR [rax+0x61]
  42038f:	pop    rdi
  420390:	addr32 jne 0x4203f4
  420393:	jb     0x4203f9
  420395:	pop    rdi
  420396:	(bad)  
  420397:	(bad)  
  420398:	outs   dx,DWORD PTR ds:[rsi]
  420399:	jb     0x42040f
  42039b:	add    BYTE PTR [rdx],al
  42039d:	(bad)  
  42039e:	pop    rdi
  42039f:	pop    rdi
  4203a0:	movsxd edi,DWORD PTR [rax+0x61]
  4203a3:	pop    rdi
  4203a4:	addr32 jne 0x420408
  4203a7:	jb     0x42040d
  4203a9:	pop    rdi
  4203aa:	(bad)  
  4203ab:	movsxd esi,DWORD PTR [rcx+0x75]
  4203ae:	imul   esi,DWORD PTR [rdx+0x65],0x3000000
  4203b5:	(bad)  
  4203b6:	pop    rdi
  4203b7:	pop    rdi
  4203b8:	movsxd edi,DWORD PTR [rax+0x61]
  4203bb:	pop    rdi
  4203bc:	addr32 jne 0x420420
  4203bf:	jb     0x420425
  4203c1:	pop    rdi
  4203c2:	jb     0x420429
  4203c4:	ins    BYTE PTR es:[rdi],dx
  4203c5:	gs (bad) 
  4203c7:	jae    0x42042e
  4203c9:	add    BYTE PTR [rax],al
  4203cb:	add    BYTE PTR [rip+0x635f5f0e],al        # 0x63a162df
  4203d1:	js     0x420434
  4203d3:	pop    rdi
  4203d4:	jb     0x42043b
  4203d6:	je     0x420440
  4203d8:	jb     0x420449
  4203da:	ja     0x4203dc
  4203dc:	(bad)  
  4203dd:	(bad)  
  4203de:	pop    rdi
  4203df:	pop    rdi
  4203e0:	addr32 js 0x42045b
  4203e3:	pop    rdi
  4203e4:	jo     0x42044b
  4203e6:	jb     0x42045b
  4203e8:	outs   dx,DWORD PTR ds:[rsi]
  4203e9:	outs   dx,BYTE PTR ds:[rsi]
  4203ea:	(bad)  
  4203eb:	ins    BYTE PTR es:[rdi],dx
  4203ec:	imul   esi,DWORD PTR [rcx+rdi*2+0x5f],0x30686573
  4203f4:	add    BYTE PTR [rax],al
  4203f6:	add    BYTE PTR [rax],al
  4203f8:	fadd   DWORD PTR [rax]
  4203fa:	rex.R
  4203fb:	gs ins BYTE PTR es:[rdi],dx
  4203fd:	gs je  0x420465
  420400:	rex.XB jb 0x42046c
  420403:	je     0x42046e
  420405:	movsxd esp,DWORD PTR [rcx+0x6c]
  420408:	push   rbx
  420409:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42040e:	outs   dx,BYTE PTR ds:[rsi]
  42040f:	add    al,bh
  420411:	add    BYTE PTR [rbp+0x6e],al
  420414:	je     0x42047b
  420416:	jb     0x42045b
  420418:	jb     0x420483
  42041a:	je     0x420485
  42041c:	movsxd esp,DWORD PTR [rcx+0x6c]
  42041f:	push   rbx
  420420:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  420425:	outs   dx,BYTE PTR ds:[rsi]
  420426:	add    BYTE PTR [rax],al
  420428:	mov    ecx,0x74654701
  42042d:	rex.XB outs dx,DWORD PTR ds:[rsi]
  42042f:	outs   dx,BYTE PTR ds:[rsi]
  420430:	jae    0x4204a1
  420432:	ins    BYTE PTR es:[rdi],dx
  420433:	rex.WRB outs dx,DWORD PTR gs:[rsi]
  420436:	fs add BYTE PTR gs:[rax],al
  42043a:	int    0x1
  42043c:	rex.RXB
  42043d:	gs je  0x420483
  420440:	jne    0x4204b4
  420442:	jb     0x4204a9
  420444:	outs   dx,BYTE PTR ds:[rsi]
  420445:	je     0x420497
  420447:	jb     0x4204b8
  420449:	movsxd esp,DWORD PTR [rbp+0x73]
  42044c:	jae    0x42044e
  42044e:	(bad)  
  42044f:	add    DWORD PTR [rdi+0x65],eax
  420452:	je     0x420497
  420454:	jne    0x4204c8
  420456:	jb     0x4204bd
  420458:	outs   dx,BYTE PTR ds:[rsi]
  420459:	je     0x4204ab
  42045b:	jb     0x4204cc
  42045d:	movsxd esp,DWORD PTR [rbp+0x73]
  420460:	jae    0x4204ab
  420462:	fs add dl,dl
  420465:	add    DWORD PTR [rdi+0x65],eax
  420468:	je     0x4204ad
  42046a:	jne    0x4204de
  42046c:	jb     0x4204d3
  42046e:	outs   dx,BYTE PTR ds:[rsi]
  42046f:	je     0x4204c5
  420471:	push   0x64616572
  420476:	rex.WB
  420477:	add    BYTE PTR fs:[rax],al
  42047a:	hlt    
  42047b:	add    DWORD PTR [rdi+0x65],eax
  42047e:	je     0x4204c6
  420480:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
  420488:	(bad)  
  420489:	jne    0x4204ff
  42048b:	gs jae 0x4204cf
  42048e:	add    BYTE PTR [rax],al
  420490:	adc    BYTE PTR [rdx],al
  420492:	rex.RXB
  420493:	gs je  0x4204e2
  420496:	(bad)  
  420497:	jae    0x42050d
  420499:	rex.RB jb 0x42050e
  42049c:	outs   dx,DWORD PTR ds:[rsi]
  42049d:	jb     0x42049f
  42049f:	add    BYTE PTR [rdx],ah
  4204a1:	add    al,BYTE PTR [rdi+0x65]
  4204a4:	je     0x4204f3
  4204a6:	outs   dx,DWORD PTR ds:[rsi]
  4204a7:	fs jne 0x420516
  4204aa:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
  4204b4:	add    BYTE PTR [rax],al
  4204b6:	and    eax,DWORD PTR [rdx]
  4204b8:	rex.RXB
  4204b9:	gs je  0x420509
  4204bc:	outs   dx,DWORD PTR ds:[rsi]
  4204bd:	fs jne 0x42052c
  4204c0:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
  4204ca:	add    BYTE PTR [rax],al
  4204cc:	and    al,0x2
  4204ce:	rex.RXB
  4204cf:	gs je  0x42051f
  4204d2:	outs   dx,DWORD PTR ds:[rsi]
  4204d3:	fs jne 0x420542
  4204d6:	gs rex.W (bad) 
  4204d9:	outs   dx,BYTE PTR ds:[rsi]
  4204da:	fs ins BYTE PTR es:[rdi],dx
  4204dc:	add    BYTE PTR gs:[r8],al
  4204e0:	push   rsi
  4204e1:	add    al,BYTE PTR [rdi+0x65]
  4204e4:	je     0x420536
  4204e6:	jb     0x420557
  4204e8:	movsxd eax,DWORD PTR [rcx+0x64]
  4204eb:	fs jb  0x420553
  4204ee:	jae    0x420563
  4204f0:	add    BYTE PTR [rax],al
  4204f2:	jae    0x4204f6
  4204f4:	rex.RXB
  4204f5:	gs je  0x42054b
  4204f8:	je     0x42055b
  4204fa:	jb     0x420570
  4204fc:	jne    0x42056e
  4204fe:	rex.WB outs dx,BYTE PTR ds:[rsi]
  420500:	outs   dx,WORD PTR ds:[rsi]
  420502:	add    BYTE PTR [r10+0x74654702],cl
  420509:	push   rbx
  42050a:	jns    0x42057f
  42050c:	je     0x420573
  42050e:	ins    DWORD PTR es:[rdi],dx
  42050f:	push   rsp
  420510:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  420517:	ins    BYTE PTR es:[rdi],dx
  420518:	gs push rsp
  42051a:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  420521:	gs je  0x420578
  420524:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  42052b:	je     0x42052d
  42052d:	add    cl,bh
  42052f:	add    cl,BYTE PTR [rcx+0x6e]
  420532:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  42053a:	rex.XB jb 0x4205a6
  42053d:	je     0x4205a8
  42053f:	movsxd esp,DWORD PTR [rcx+0x6c]
  420542:	push   rbx
  420543:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  420548:	outs   dx,BYTE PTR ds:[rsi]
  420549:	add    BYTE PTR [rbx+0x3],cl
  42054c:	rex.WR
  42054d:	gs (bad) 
  42054f:	jbe    0x4205b6
  420551:	rex.XB jb 0x4205bd
  420554:	je     0x4205bf
  420556:	movsxd esp,DWORD PTR [rcx+0x6c]
  420559:	push   rbx
  42055a:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42055f:	outs   dx,BYTE PTR ds:[rsi]
  420560:	add    BYTE PTR [rax],al
  420562:	mov    ebx,0x65755103
  420567:	jb     0x4205e2
  420569:	push   rax
  42056a:	gs jb  0x4205d3
  42056d:	outs   dx,DWORD PTR ds:[rsi]
  42056e:	jb     0x4205dd
  420570:	(bad)  
  420571:	outs   dx,BYTE PTR ds:[rsi]
  420572:	movsxd esp,DWORD PTR [rbp+0x43]
  420575:	outs   dx,DWORD PTR ds:[rsi]
  420576:	jne    0x4205e6
  420578:	je     0x4205df
  42057a:	jb     0x42057c
  42057c:	add    DWORD PTR [rdx+rdx*2],eax
  42057f:	je     0x4205ed
  420581:	rex.B
  420582:	fs fs rex.RX jne 0x4205f5
  420587:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42058b:	outs   dx,BYTE PTR ds:[rsi]
  42058c:	push   rsp
  42058d:	(bad)  
  42058e:	(bad)  
  42058f:	ins    BYTE PTR es:[rdi],dx
  420590:	add    BYTE PTR gs:[rdx],al
  420593:	add    al,0x52
  420595:	je     0x420603
  420597:	rex.XB (bad) 
  420599:	jo     0x42060f
  42059b:	jne    0x42060f
  42059d:	rex.XB outs dx,DWORD PTR gs:[rsi]
  4205a0:	outs   dx,BYTE PTR ds:[rsi]
  4205a1:	je     0x420608
  4205a3:	js     0x420619
  4205a5:	add    BYTE PTR [rcx],cl
  4205a7:	add    al,0x52
  4205a9:	je     0x420617
  4205ab:	rex.WR outs dx,DWORD PTR ds:[rsi]
  4205ad:	outs   dx,DWORD PTR ds:[rsi]
  4205ae:	imul   esi,DWORD PTR [rbp+0x70],0x46
  4205b2:	jne    0x420622
  4205b4:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4205b8:	outs   dx,BYTE PTR ds:[rsi]
  4205b9:	rex.RB outs dx,BYTE PTR ds:[rsi]
  4205bb:	je     0x42062f
  4205bd:	jns    0x4205bf
  4205bf:	add    BYTE PTR [rax],dl
  4205c1:	add    al,0x52
  4205c3:	je     0x420631
  4205c5:	push   rsi
  4205c6:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  4205cd:	outs   dx,BYTE PTR ds:[rsi]
  4205ce:	ja     0x420639
  4205d0:	outs   dx,BYTE PTR ds:[rsi]
  4205d1:	add    BYTE PTR fs:[rax],al
  4205d4:	lahf   
  4205d5:	add    al,0x53
  4205d7:	gs je  0x42062f
  4205da:	outs   dx,BYTE PTR ds:[rsi]
  4205db:	push   0x6c646e61
  4205e0:	gs fs rex.RB js 0x420648
  4205e5:	gs jo  0x42065c
  4205e8:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4205ef:	gs jb  0x4205f2
  4205f2:	lods   al,BYTE PTR ds:[rsi]
  4205f3:	add    al,0x53
  4205f5:	ins    BYTE PTR es:[rdi],dx
  4205f6:	gs gs jo 0x4205fa
  4205fa:	mov    edx,0x72655404
  4205ff:	ins    DWORD PTR es:[rdi],dx
  420600:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  420607:	outs   dx,DWORD PTR ds:[rsi]
  420608:	movsxd esp,DWORD PTR [rbp+0x73]
  42060b:	jae    0x42060d
  42060d:	add    cl,al
  42060f:	add    al,0x54
  420611:	ins    BYTE PTR es:[rdi],dx
  420612:	jae    0x42065b
  420614:	gs je  0x42066d
  420617:	(bad)  
  420618:	ins    BYTE PTR es:[rdi],dx
  420619:	jne    0x420680
  42061b:	add    dh,cl
  42061d:	add    al,0x55
  42061f:	outs   dx,BYTE PTR ds:[rsi]
  420620:	push   0x6c646e61
  420625:	gs fs rex.RB js 0x42068d
  42062a:	gs jo  0x4206a1
  42062d:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  420634:	gs jb  0x420637
  420637:	add    ah,ch
  420639:	add    al,0x56
  42063b:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  420642:	jb     0x4206b3
  420644:	je     0x4206ab
  420646:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  42064a:	out    dx,al
  42064b:	add    al,0x56
  42064d:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  420654:	jne    0x4206bb
  420656:	jb     0x4206d1
  420658:	add    BYTE PTR [rax],al
  42065a:	xor    al,BYTE PTR [rip+0x5f435f5f]        # 0x5f8565bf
  420660:	jae    0x4206d2
  420662:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  420666:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  42066d:	ins    BYTE PTR es:[rdi],dx
  42066e:	gs jb  0x420671
  420671:	add    BYTE PTR [rsi+0x0],cl
  420674:	pop    rdi
  420675:	pop    rdi
  420676:	fs ins BYTE PTR es:[rdi],dx
  420678:	ins    BYTE PTR es:[rdi],dx
  420679:	outs   dx,DWORD PTR ds:[rsi]
  42067a:	outs   dx,BYTE PTR ds:[rsi]
  42067b:	gs js  0x4206e7
  42067e:	je     0x420680
  420680:	push   rcx
  420681:	add    BYTE PTR [rdi+0x5f],bl
  420684:	addr32 gs je 0x4206f5
  420688:	(bad)  
  420689:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  420690:	push   rdx
  420691:	add    BYTE PTR [rdi+0x5f],bl
  420694:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  42069b:	add    BYTE PTR [rbx+0x0],dl
  42069e:	pop    rdi
  42069f:	pop    rdi
  4206a0:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  4206a7:	movsxd eax,DWORD PTR [rax]
  4206a9:	add    BYTE PTR [rdx+0x0],bl
  4206ac:	pop    rdi
  4206ad:	pop    rdi
  4206ae:	ins    BYTE PTR es:[rdi],dx
  4206af:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4206b2:	jbe    0x420713
  4206b4:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  4206bb:	add    BYTE PTR [rdi+0x5f],bl
  4206be:	jae    0x420725
  4206c0:	je     0x420721
  4206c2:	(bad)  
  4206c3:	jo     0x420735
  4206c5:	pop    rdi
  4206c6:	je     0x420741
  4206c8:	jo     0x42072f
  4206ca:	add    BYTE PTR [rax],al
  4206cc:	(bad)  
  4206cd:	add    BYTE PTR [rdi+0x5f],bl
  4206d0:	jae    0x420737
  4206d2:	je     0x420749
  4206d4:	jae    0x42073b
  4206d6:	jb     0x420745
  4206d8:	(bad)  
  4206d9:	je     0x420743
  4206db:	gs jb  0x420750
  4206de:	add    BYTE PTR [rax],al
  4206e0:	jno    0x4206e2
  4206e2:	pop    rdi
  4206e3:	(bad)  
  4206e4:	movsxd ebp,DWORD PTR [rbp+0x64]
  4206e7:	ins    BYTE PTR es:[rdi],dx
  4206e8:	outs   dx,BYTE PTR ds:[rsi]
  4206e9:	add    BYTE PTR [rax+0x0],bh
  4206ec:	pop    rdi
  4206ed:	(bad)  
  4206ee:	ins    DWORD PTR es:[rdi],dx
  4206ef:	jae    0x420758
  4206f1:	pop    rdi
  4206f2:	gs js  0x42075e
  4206f5:	je     0x4206f7
  4206f7:	add    BYTE PTR [rdx+0x65635f00],cl
  4206fd:	js     0x420768
  4206ff:	je     0x420701
  420701:	add    BYTE PTR [rdx+0x72655f00],bh
  420707:	jb     0x420777
  420709:	outs   dx,DWORD PTR ds:[rsi]
  42070a:	add    BYTE PTR [rax],al
  42070c:	rol    DWORD PTR [rax],0x5f
  42070f:	gs js  0x420777
  420712:	movsxd esi,DWORD PTR [rsi+0x70]
  420715:	add    bl,al
  420717:	add    BYTE PTR [rdi+0x65],bl
  42071a:	js     0x420785
  42071c:	je     0x42071e
  42071e:	rol    BYTE PTR [rax],1
  420720:	pop    rdi
  420721:	imul   bp,WORD PTR [rsi+0x64],0x6c63
  420727:	outs   dx,DWORD PTR ds:[rsi]
  420728:	jae    0x42078f
  42072a:	add    BYTE PTR [rax],al
  42072c:	rol    BYTE PTR [rax],cl
  42072e:	pop    rdi
  42072f:	imul   bp,WORD PTR [rsi+0x64],0x6966
  420735:	jb     0x4207aa
  420737:	je     0x42076f
  420739:	xor    al,0x0
  42073b:	add    dl,bl
  42073d:	add    BYTE PTR [rdi+0x66],bl
  420740:	ins    DWORD PTR es:[rdi],dx
  420741:	outs   dx,DWORD PTR ds:[rsi]
  420742:	fs add BYTE PTR gs:[rax],al
  420746:	out    dx,al
  420747:	add    BYTE PTR [rdi+0x66],bl
  42074a:	jne    0x4207b8
  42074c:	ins    BYTE PTR es:[rdi],dx
  42074d:	jo     0x4207b0
  42074f:	je     0x4207b9
  420751:	add    dl,bh
  420753:	add    BYTE PTR [rdi+0x67],bl
  420756:	gs je  0x4207b8
  420759:	outs   dx,DWORD PTR ds:[rsi]
  42075a:	jae    0x4207c2
  42075c:	push   0x6c646e61
  420761:	add    BYTE PTR gs:[rax],al
  420764:	sbb    al,BYTE PTR [rcx]
  420766:	pop    rdi
  420767:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  42076e:	ins    DWORD PTR es:[rdi],dx
  42076f:	add    BYTE PTR [rsi],bl
  420771:	add    DWORD PTR [rdi+0x69],ebx
  420774:	jae    0x4207d7
  420776:	je     0x4207ec
  420778:	jns    0x42077a
  42077a:	add    BYTE PTR [rcx],0x5f
  42077d:	ins    BYTE PTR es:[rdi],dx
  42077e:	outs   dx,DWORD PTR ds:[rsi]
  42077f:	movsxd ebp,DWORD PTR [rbx+0x0]
  420782:	and    eax,0x6e6f5f02
  420787:	gs js  0x4207f3
  42078a:	je     0x42078c
  42078c:	sub    al,BYTE PTR [rdx]
  42078e:	pop    rdi
  42078f:	jo     0x4207f4
  420791:	ins    BYTE PTR es:[rdi],dx
  420792:	outs   dx,DWORD PTR ds:[rsi]
  420793:	jae    0x4207fa
  420795:	add    BYTE PTR [rip+0x69705f02],ch        # 0x69b2669d
  42079b:	jo     0x420802
  42079d:	add    BYTE PTR [rsi],ch
  42079f:	add    bl,BYTE PTR [rdi+0x70]
  4207a2:	outs   dx,DWORD PTR ds:[rsi]
  4207a3:	jo     0x42080a
  4207a5:	outs   dx,BYTE PTR ds:[rsi]
  4207a6:	add    BYTE PTR [rax],al
  4207a8:	movsxd eax,DWORD PTR [rdx]
  4207aa:	pop    rdi
  4207ab:	jae    0x42081b
  4207ad:	ja     0x42081f
  4207af:	jb     0x42081a
  4207b1:	outs   dx,BYTE PTR ds:[rsi]
  4207b2:	je     0x42081a
  4207b4:	add    BYTE PTR [rax],al
  4207b6:	jno    0x4207ba
  4207b8:	pop    rdi
  4207b9:	jae    0x42082b
  4207bb:	(bad)  
  4207bc:	ja     0x42082c
  4207be:	jbe    0x4207c0
  4207c0:	(bad)
  4207c4:	outs   dx,BYTE PTR ds:[rsi]
  4207c5:	ins    BYTE PTR es:[rdi],dx
  4207c6:	outs   dx,DWORD PTR ds:[rsi]
  4207c7:	movsxd ebp,DWORD PTR [rbx+0x0]
  4207ca:	jg     0x4207cf
  4207cc:	(bad)  
  4207cd:	(bad)  
  4207ce:	outs   dx,DWORD PTR ds:[rsi]
  4207cf:	jb     0x420845
  4207d1:	add    BYTE PTR [rax+0x6c616303],dl
  4207d7:	ins    BYTE PTR es:[rdi],dx
  4207d8:	outs   dx,DWORD PTR ds:[rsi]
  4207d9:	movsxd eax,DWORD PTR [rax]
  4207db:	add    BYTE PTR [rbp+0x69786503],bl
  4207e1:	je     0x4207e3
  4207e3:	add    BYTE PTR [rdx+0x6f656603],ah
  4207e9:	data16 add BYTE PTR [rax],al
  4207ec:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4207ed:	add    esp,DWORD PTR [rsi+0x67]
  4207f0:	gs je  0x420856
  4207f3:	add    BYTE PTR [rax+0x72706603],dh
  4207f9:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  420800:	data16 jb 0x420868
  420803:	add    BYTE PTR gs:[rax],al
  420806:	rol    BYTE PTR [rbx],0x66
  420809:	ja     0x42087b
  42080b:	jb     0x420876
  42080d:	outs   dx,BYTE PTR ds:[rsi]
  42080e:	je     0x420876
  420810:	add    BYTE PTR [rax],al
  420812:	ret    0x6603
  420815:	ja     0x420889
  420817:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c700
  42081f:	gs je  0x420887
  420822:	outs   dx,BYTE PTR ds:[rsi]
  420823:	jbe    0x420825
  420825:	add    al,dh
  420827:	add    ebp,DWORD PTR [rbp+0x61]
  42082a:	ins    BYTE PTR es:[rdi],dx
  42082b:	ins    BYTE PTR es:[rdi],dx
  42082c:	outs   dx,DWORD PTR ds:[rsi]
  42082d:	movsxd eax,DWORD PTR [rax]
  42082f:	add    bh,dh
  420831:	add    ebp,DWORD PTR [rbp+0x65]
  420834:	ins    DWORD PTR es:[rdi],dx
  420835:	movsxd ebp,DWORD PTR [rbp+0x70]
  420838:	add    BYTE PTR [rax],al
  42083a:	clc    
  42083b:	add    ebp,DWORD PTR [rbp+0x65]
  42083e:	ins    DWORD PTR es:[rdi],dx
  42083f:	movsxd esi,DWORD PTR [rax+0x79]
  420842:	add    BYTE PTR [rax],al
  420844:	stc    
  420845:	add    ebp,DWORD PTR [rbp+0x65]
  420848:	ins    DWORD PTR es:[rdi],dx
  420849:	ins    DWORD PTR es:[rdi],dx
  42084a:	outs   dx,DWORD PTR ds:[rsi]
  42084b:	jbe    0x4208b2
  42084d:	add    dl,bh
  42084f:	add    ebp,DWORD PTR [rbp+0x65]
  420852:	ins    DWORD PTR es:[rdi],dx
  420853:	jae    0x4208ba
  420855:	je     0x420857
  420857:	add    BYTE PTR [rdx],cl
  420859:	add    al,0x72
  42085b:	(bad)  
  42085c:	imul   esi,DWORD PTR [rbx+0x65],0x72040c00
  420863:	gs (bad) 
  420865:	ins    BYTE PTR es:[rdi],dx
  420866:	ins    BYTE PTR es:[rdi],dx
  420867:	outs   dx,DWORD PTR ds:[rsi]
  420868:	movsxd eax,DWORD PTR [rax]
  42086a:	(bad)  
  42086b:	add    al,0x73
  42086d:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  420874:	and    eax,DWORD PTR [rbx+rsi*2]
  420877:	je     0x4208eb
  420879:	movsxd ebp,DWORD PTR [rax+0x72]
  42087c:	add    BYTE PTR [rax],al
  42087e:	and    al,0x4
  420880:	jae    0x4208f6
  420882:	jb     0x4208e7
  420884:	ins    DWORD PTR es:[rdi],dx
  420885:	jo     0x420887
  420887:	add    BYTE PTR [rsi],ah
  420889:	add    al,0x73
  42088b:	je     0x4208ff
  42088d:	movsxd esi,DWORD PTR [rax+0x79]
  420890:	add    BYTE PTR [rax],al
  420892:	sub    eax,DWORD PTR [rbx+rsi*2]
  420895:	je     0x420909
  420897:	ins    BYTE PTR es:[rdi],dx
  420898:	outs   dx,BYTE PTR gs:[rsi]
  42089a:	add    BYTE PTR [rax],al
  42089c:	cs add al,0x73
  42089f:	je     0x420913
  4208a1:	outs   dx,BYTE PTR ds:[rsi]
  4208a2:	movsxd ebp,DWORD PTR [rbp+0x70]
  4208a5:	add    BYTE PTR [rdi],ch
  4208a7:	add    al,0x73
  4208a9:	je     0x42091d
  4208ab:	outs   dx,BYTE PTR ds:[rsi]
  4208ac:	movsxd esi,DWORD PTR [rax+0x79]
  4208af:	add    BYTE PTR [rcx],dh
  4208b1:	add    al,0x73
  4208b3:	je     0x420927
  4208b5:	jo     0x420919
  4208b7:	jb     0x420924
  4208b9:	add    BYTE PTR [rax+0x4],al
  4208bc:	jae    0x420937
  4208be:	jae    0x420934
  4208c0:	gs ins DWORD PTR es:[rdi],dx
  4208c2:	add    BYTE PTR [rax],al
  4208c4:	rex.WRX add al,0x76
  4208c7:	data16 jo 0x42093c
  4208ca:	imul   ebp,DWORD PTR [rsi+0x74],0x5d000066
  4208d1:	add    al,0x77
  4208d3:	movsxd esi,DWORD PTR [rbx+0x63]
  4208d6:	jo     0x420951
  4208d8:	add    BYTE PTR [rax],al
  4208da:	mov    DWORD PTR [rdi+rbx*2],eax
  4208dd:	jae    0x420953
  4208df:	(bad)  
  4208e0:	je     0x420918
  4208e2:	xor    al,0x0
  4208e4:	pop    QWORD PTR [rdi+rbx*2]
  4208e7:	imul   bp,WORD PTR [rsi+0x64],0x656e
  4208ed:	js     0x420963
  4208ef:	ss xor al,0x0
  4208f2:	scas   eax,DWORD PTR es:[rdi]
  4208f3:	add    al,0x5f
  4208f5:	jne    0x420965
  4208f7:	ins    BYTE PTR es:[rdi],dx
  4208f8:	imul   ebp,DWORD PTR [rsi+0x6b],0x5f04cc00
  4208ff:	jb     0x42096e
  420901:	imul   esi,DWORD PTR fs:[rdx+0x0],0x5f04e100
  420909:	addr32 gs je 0x42097d
  42090d:	imul   esp,DWORD PTR [rax+rax*1-0x1e],0x65675f04
  420915:	je     0x42097a
  420917:	ja     0x42097d
  420919:	add    al,bh
  42091b:	add    al,0x5f
  42091d:	fs jne 0x420990
  420920:	xor    al,BYTE PTR [rax]
  420922:	cld    
  420923:	add    al,0x5f
  420925:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  420929:	add    BYTE PTR gs:[rax],al
  42092c:	std    
  42092d:	add    al,0x5f
  42092f:	movsxd ebp,DWORD PTR [rax+0x73]
  420932:	imul   edi,DWORD PTR [rdx+0x65],0x5f04ff00
  420939:	movsxd ebp,DWORD PTR [rax+0x64]
  42093c:	imul   esi,DWORD PTR [rdx+0x0],0x5f050000
  420943:	(bad)  
  420944:	movsxd esp,DWORD PTR [rbx+0x65]
  420947:	jae    0x4209bc
  420949:	add    al,dh
  42094b:	add    DWORD PTR [rbp+0x65],ecx
  42094e:	jae    0x4209c3
  420950:	(bad)  
  420951:	rex.X outs dx,DWORD PTR gs:[esi]
  420955:	js     0x4209ae
  420957:	add    BYTE PTR [rbx+0x74656700],bl
  42095d:	push   0x6e74736f
  420962:	(bad)  
  420963:	ins    DWORD PTR es:[rdi],dx
  420964:	add    BYTE PTR gs:[rax],al
  420967:	add    BYTE PTR [rax],al
  420969:	lock add DWORD PTR [rax],eax
  42096c:	ins    BYTE PTR es:[rdi],dx
  42096d:	imul   esp,DWORD PTR [rdx+0x67],0x735f6363
  420974:	pop    rdi
  420975:	jae    0x4209dc
  420977:	push   0x642e312d
  42097c:	ins    BYTE PTR es:[rdi],dx
  42097d:	ins    BYTE PTR es:[rdi],dx
  42097e:	add    BYTE PTR [rax],al
  420980:	adc    al,0xf0
  420982:	add    DWORD PTR [rax],eax
  420984:	adc    al,0xf0
  420986:	add    DWORD PTR [rax],eax
  420988:	adc    al,0xf0
  42098a:	add    DWORD PTR [rax],eax
  42098c:	adc    al,0xf0
  42098e:	add    DWORD PTR [rax],eax
  420990:	adc    al,0xf0
  420992:	add    DWORD PTR [rax],eax
  420994:	adc    al,0xf0
  420996:	add    DWORD PTR [rax],eax
  420998:	adc    al,0xf0
  42099a:	add    DWORD PTR [rax],eax
  42099c:	adc    al,0xf0
  42099e:	add    DWORD PTR [rax],eax
  4209a0:	adc    al,0xf0
  4209a2:	add    DWORD PTR [rax],eax
  4209a4:	adc    al,0xf0
  4209a6:	add    DWORD PTR [rax],eax
  4209a8:	adc    al,0xf0
  4209aa:	add    DWORD PTR [rax],eax
  4209ac:	adc    al,0xf0
  4209ae:	add    DWORD PTR [rax],eax
  4209b0:	adc    al,0xf0
  4209b2:	add    DWORD PTR [rax],eax
  4209b4:	adc    al,0xf0
  4209b6:	add    DWORD PTR [rax],eax
  4209b8:	adc    al,0xf0
  4209ba:	add    DWORD PTR [rax],eax
  4209bc:	adc    al,0xf0
  4209be:	add    DWORD PTR [rax],eax
  4209c0:	adc    al,0xf0
  4209c2:	add    DWORD PTR [rax],eax
  4209c4:	adc    al,0xf0
  4209c6:	add    DWORD PTR [rax],eax
  4209c8:	adc    al,0xf0
  4209ca:	add    DWORD PTR [rax],eax
  4209cc:	adc    al,0xf0
  4209ce:	add    DWORD PTR [rax],eax
  4209d0:	adc    al,0xf0
  4209d2:	add    DWORD PTR [rax],eax
  4209d4:	adc    al,0xf0
  4209d6:	add    DWORD PTR [rax],eax
  4209d8:	adc    al,0xf0
  4209da:	add    DWORD PTR [rax],eax
  4209dc:	adc    al,0xf0
  4209de:	add    DWORD PTR [rax],eax
  4209e0:	adc    al,0xf0
  4209e2:	add    DWORD PTR [rax],eax
  4209e4:	adc    al,0xf0
  4209e6:	add    DWORD PTR [rax],eax
  4209e8:	adc    al,0xf0
  4209ea:	add    DWORD PTR [rax],eax
  4209ec:	adc    al,0xf0
  4209ee:	add    DWORD PTR [rax],eax
  4209f0:	adc    al,0xf0
  4209f2:	add    DWORD PTR [rax],eax
  4209f4:	adc    al,0xf0
  4209f6:	add    DWORD PTR [rax],eax
  4209f8:	adc    al,0xf0
  4209fa:	add    DWORD PTR [rax],eax
  4209fc:	adc    al,0xf0
  4209fe:	add    DWORD PTR [rax],eax
  420a00:	adc    al,0xf0
  420a02:	add    DWORD PTR [rax],eax
  420a04:	adc    al,0xf0
  420a06:	add    DWORD PTR [rax],eax
  420a08:	adc    al,0xf0
  420a0a:	add    DWORD PTR [rax],eax
  420a0c:	adc    al,0xf0
  420a0e:	add    DWORD PTR [rax],eax
  420a10:	adc    al,0xf0
  420a12:	add    DWORD PTR [rax],eax
  420a14:	adc    al,0xf0
  420a16:	add    DWORD PTR [rax],eax
  420a18:	adc    al,0xf0
  420a1a:	add    DWORD PTR [rax],eax
  420a1c:	adc    al,0xf0
  420a1e:	add    DWORD PTR [rax],eax
  420a20:	adc    al,0xf0
  420a22:	add    DWORD PTR [rax],eax
  420a24:	adc    al,0xf0
  420a26:	add    DWORD PTR [rax],eax
  420a28:	adc    al,0xf0
  420a2a:	add    DWORD PTR [rax],eax
  420a2c:	adc    al,0xf0
  420a2e:	add    DWORD PTR [rax],eax
  420a30:	adc    al,0xf0
  420a32:	add    DWORD PTR [rax],eax
  420a34:	adc    al,0xf0
  420a36:	add    DWORD PTR [rax],eax
  420a38:	adc    al,0xf0
  420a3a:	add    DWORD PTR [rax],eax
  420a3c:	adc    al,0xf0
  420a3e:	add    DWORD PTR [rax],eax
  420a40:	adc    al,0xf0
  420a42:	add    DWORD PTR [rax],eax
  420a44:	adc    al,0xf0
  420a46:	add    DWORD PTR [rax],eax
  420a48:	adc    al,0xf0
  420a4a:	add    DWORD PTR [rax],eax
  420a4c:	adc    al,0xf0
  420a4e:	add    DWORD PTR [rax],eax
  420a50:	adc    al,0xf0
  420a52:	add    DWORD PTR [rax],eax
  420a54:	adc    al,0xf0
  420a56:	add    DWORD PTR [rax],eax
  420a58:	adc    al,0xf0
  420a5a:	add    DWORD PTR [rax],eax
  420a5c:	adc    al,0xf0
  420a5e:	add    DWORD PTR [rax],eax
  420a60:	adc    al,0xf0
  420a62:	add    DWORD PTR [rax],eax
  420a64:	adc    al,0xf0
  420a66:	add    DWORD PTR [rax],eax
  420a68:	adc    al,0xf0
  420a6a:	add    DWORD PTR [rax],eax
  420a6c:	adc    al,0xf0
  420a6e:	add    DWORD PTR [rax],eax
  420a70:	adc    al,0xf0
  420a72:	add    DWORD PTR [rax],eax
  420a74:	adc    al,0xf0
  420a76:	add    DWORD PTR [rax],eax
  420a78:	adc    al,0xf0
  420a7a:	add    DWORD PTR [rax],eax
  420a7c:	adc    al,0xf0
  420a7e:	add    DWORD PTR [rax],eax
  420a80:	adc    al,0xf0
  420a82:	add    DWORD PTR [rax],eax
  420a84:	adc    al,0xf0
  420a86:	add    DWORD PTR [rax],eax
  420a88:	adc    al,0xf0
  420a8a:	add    DWORD PTR [rax],eax
  420a8c:	adc    al,0xf0
  420a8e:	add    DWORD PTR [rax],eax
  420a90:	ins    BYTE PTR es:[rdi],dx
  420a91:	imul   esp,DWORD PTR [rdx+0x73],0x2b636474
  420a98:	sub    ebp,DWORD PTR [rip+0x6c642e36]        # 0x6ca638d4
  420a9e:	ins    BYTE PTR es:[rdi],dx
  420a9f:	add    BYTE PTR [rax],ch
  420aa1:	lock add DWORD PTR [rax],eax
  420aa4:	sub    al,dh
  420aa6:	add    DWORD PTR [rax],eax
  420aa8:	sub    al,dh
  420aaa:	add    DWORD PTR [rax],eax
  420aac:	sub    al,dh
  420aae:	add    DWORD PTR [rax],eax
  420ab0:	sub    al,dh
  420ab2:	add    DWORD PTR [rax],eax
  420ab4:	sub    al,dh
  420ab6:	add    DWORD PTR [rax],eax
  420ab8:	sub    al,dh
  420aba:	add    DWORD PTR [rax],eax
  420abc:	sub    al,dh
  420abe:	add    DWORD PTR [rax],eax
  420ac0:	sub    al,dh
  420ac2:	add    DWORD PTR [rax],eax
  420ac4:	sub    al,dh
  420ac6:	add    DWORD PTR [rax],eax
  420ac8:	sub    al,dh
  420aca:	add    DWORD PTR [rax],eax
  420acc:	sub    al,dh
  420ace:	add    DWORD PTR [rax],eax
  420ad0:	sub    al,dh
  420ad2:	add    DWORD PTR [rax],eax
  420ad4:	sub    al,dh
  420ad6:	add    DWORD PTR [rax],eax
  420ad8:	sub    al,dh
  420ada:	add    DWORD PTR [rax],eax
  420adc:	sub    al,dh
  420ade:	add    DWORD PTR [rax],eax
  420ae0:	sub    al,dh
  420ae2:	add    DWORD PTR [rax],eax
  420ae4:	sub    al,dh
  420ae6:	add    DWORD PTR [rax],eax
  420ae8:	sub    al,dh
  420aea:	add    DWORD PTR [rax],eax
  420aec:	sub    al,dh
  420aee:	add    DWORD PTR [rax],eax
  420af0:	sub    al,dh
  420af2:	add    DWORD PTR [rax],eax
  420af4:	sub    al,dh
  420af6:	add    DWORD PTR [rax],eax
  420af8:	sub    al,dh
  420afa:	add    DWORD PTR [rax],eax
  420afc:	sub    al,dh
  420afe:	add    DWORD PTR [rax],eax
  420b00:	sub    al,dh
  420b02:	add    DWORD PTR [rax],eax
  420b04:	sub    al,dh
  420b06:	add    DWORD PTR [rax],eax
  420b08:	sub    al,dh
  420b0a:	add    DWORD PTR [rax],eax
  420b0c:	sub    al,dh
  420b0e:	add    DWORD PTR [rax],eax
  420b10:	sub    al,dh
  420b12:	add    DWORD PTR [rax],eax
  420b14:	sub    al,dh
  420b16:	add    DWORD PTR [rax],eax
  420b18:	rex.WXB
  420b19:	rex.RB push r10
  420b1b:	rex.WRX
  420b1c:	rex.RB
  420b1d:	xor    r14,QWORD PTR [rdx]
  420b20:	cs fs ins BYTE PTR es:[rdi],dx
  420b23:	ins    BYTE PTR es:[rdi],dx
  420b24:	add    BYTE PTR [rax],al
  420b26:	add    BYTE PTR [rax],al
  420b28:	cmp    al,0xf0
  420b2a:	add    DWORD PTR [rax],eax
  420b2c:	cmp    al,0xf0
  420b2e:	add    DWORD PTR [rax],eax
  420b30:	cmp    al,0xf0
  420b32:	add    DWORD PTR [rax],eax
  420b34:	cmp    al,0xf0
  420b36:	add    DWORD PTR [rax],eax
  420b38:	cmp    al,0xf0
  420b3a:	add    DWORD PTR [rax],eax
  420b3c:	cmp    al,0xf0
  420b3e:	add    DWORD PTR [rax],eax
  420b40:	cmp    al,0xf0
  420b42:	add    DWORD PTR [rax],eax
  420b44:	cmp    al,0xf0
  420b46:	add    DWORD PTR [rax],eax
  420b48:	cmp    al,0xf0
  420b4a:	add    DWORD PTR [rax],eax
  420b4c:	cmp    al,0xf0
  420b4e:	add    DWORD PTR [rax],eax
  420b50:	cmp    al,0xf0
  420b52:	add    DWORD PTR [rax],eax
  420b54:	cmp    al,0xf0
  420b56:	add    DWORD PTR [rax],eax
  420b58:	cmp    al,0xf0
  420b5a:	add    DWORD PTR [rax],eax
  420b5c:	cmp    al,0xf0
  420b5e:	add    DWORD PTR [rax],eax
  420b60:	cmp    al,0xf0
  420b62:	add    DWORD PTR [rax],eax
  420b64:	cmp    al,0xf0
  420b66:	add    DWORD PTR [rax],eax
  420b68:	cmp    al,0xf0
  420b6a:	add    DWORD PTR [rax],eax
  420b6c:	cmp    al,0xf0
  420b6e:	add    DWORD PTR [rax],eax
  420b70:	cmp    al,0xf0
  420b72:	add    DWORD PTR [rax],eax
  420b74:	cmp    al,0xf0
  420b76:	add    DWORD PTR [rax],eax
  420b78:	cmp    al,0xf0
  420b7a:	add    DWORD PTR [rax],eax
  420b7c:	cmp    al,0xf0
  420b7e:	add    DWORD PTR [rax],eax
  420b80:	cmp    al,0xf0
  420b82:	add    DWORD PTR [rax],eax
  420b84:	cmp    al,0xf0
  420b86:	add    DWORD PTR [rax],eax
  420b88:	cmp    al,0xf0
  420b8a:	add    DWORD PTR [rax],eax
  420b8c:	cmp    al,0xf0
  420b8e:	add    DWORD PTR [rax],eax
  420b90:	cmp    al,0xf0
  420b92:	add    DWORD PTR [rax],eax
  420b94:	cmp    al,0xf0
  420b96:	add    DWORD PTR [rax],eax
  420b98:	cmp    al,0xf0
  420b9a:	add    DWORD PTR [rax],eax
  420b9c:	cmp    al,0xf0
  420b9e:	add    DWORD PTR [rax],eax
  420ba0:	cmp    al,0xf0
  420ba2:	add    DWORD PTR [rax],eax
  420ba4:	cmp    al,0xf0
  420ba6:	add    DWORD PTR [rax],eax
  420ba8:	cmp    al,0xf0
  420baa:	add    DWORD PTR [rax],eax
  420bac:	cmp    al,0xf0
  420bae:	add    DWORD PTR [rax],eax
  420bb0:	cmp    al,0xf0
  420bb2:	add    DWORD PTR [rax],eax
  420bb4:	cmp    al,0xf0
  420bb6:	add    DWORD PTR [rax],eax
  420bb8:	cmp    al,0xf0
  420bba:	add    DWORD PTR [rax],eax
  420bbc:	cmp    al,0xf0
  420bbe:	add    DWORD PTR [rax],eax
  420bc0:	cmp    al,0xf0
  420bc2:	add    DWORD PTR [rax],eax
  420bc4:	cmp    al,0xf0
  420bc6:	add    DWORD PTR [rax],eax
  420bc8:	cmp    al,0xf0
  420bca:	add    DWORD PTR [rax],eax
  420bcc:	cmp    al,0xf0
  420bce:	add    DWORD PTR [rax],eax
  420bd0:	cmp    al,0xf0
  420bd2:	add    DWORD PTR [rax],eax
  420bd4:	cmp    al,0xf0
  420bd6:	add    DWORD PTR [rax],eax
  420bd8:	cmp    al,0xf0
  420bda:	add    DWORD PTR [rax],eax
  420bdc:	cmp    al,0xf0
  420bde:	add    DWORD PTR [rax],eax
  420be0:	cmp    al,0xf0
  420be2:	add    DWORD PTR [rax],eax
  420be4:	cmp    al,0xf0
  420be6:	add    DWORD PTR [rax],eax
  420be8:	cmp    al,0xf0
  420bea:	add    DWORD PTR [rax],eax
  420bec:	cmp    al,0xf0
  420bee:	add    DWORD PTR [rax],eax
  420bf0:	cmp    al,0xf0
  420bf2:	add    DWORD PTR [rax],eax
  420bf4:	cmp    al,0xf0
  420bf6:	add    DWORD PTR [rax],eax
  420bf8:	cmp    al,0xf0
  420bfa:	add    DWORD PTR [rax],eax
  420bfc:	cmp    al,0xf0
  420bfe:	add    DWORD PTR [rax],eax
  420c00:	cmp    al,0xf0
  420c02:	add    DWORD PTR [rax],eax
  420c04:	cmp    al,0xf0
  420c06:	add    DWORD PTR [rax],eax
  420c08:	cmp    al,0xf0
  420c0a:	add    DWORD PTR [rax],eax
  420c0c:	cmp    al,0xf0
  420c0e:	add    DWORD PTR [rax],eax
  420c10:	cmp    al,0xf0
  420c12:	add    DWORD PTR [rax],eax
  420c14:	cmp    al,0xf0
  420c16:	add    DWORD PTR [rax],eax
  420c18:	cmp    al,0xf0
  420c1a:	add    DWORD PTR [rax],eax
  420c1c:	cmp    al,0xf0
  420c1e:	add    DWORD PTR [rax],eax
  420c20:	cmp    al,0xf0
  420c22:	add    DWORD PTR [rax],eax
  420c24:	cmp    al,0xf0
  420c26:	add    DWORD PTR [rax],eax
  420c28:	cmp    al,0xf0
  420c2a:	add    DWORD PTR [rax],eax
  420c2c:	cmp    al,0xf0
  420c2e:	add    DWORD PTR [rax],eax
  420c30:	cmp    al,0xf0
  420c32:	add    DWORD PTR [rax],eax
  420c34:	ins    DWORD PTR es:[rdi],dx
  420c35:	jae    0x420cad
  420c37:	movsxd esi,DWORD PTR [rdx+0x74]
  420c3a:	cs fs ins BYTE PTR es:[rdi],dx
  420c3d:	ins    BYTE PTR es:[rdi],dx
  420c3e:	add    BYTE PTR [rax],al
  420c40:	push   rax
  420c41:	lock add DWORD PTR [rax],eax
  420c44:	push   rbp
  420c45:	push   rbx
  420c46:	rex.RB push r10
  420c48:	xor    esi,DWORD PTR [rdx]
  420c4a:	cs fs ins BYTE PTR es:[rdi],dx
  420c4d:	ins    BYTE PTR es:[rdi],dx
  420c4e:	add    BYTE PTR [rax],al
  420c50:	lock add DWORD PTR fs:[rax],eax
  420c54:	push   rdi
  420c55:	push   rbx
  420c56:	xor    bl,BYTE PTR [rdi+0x33]
  420c59:	xor    ch,BYTE PTR [rsi]
  420c5b:	fs ins BYTE PTR es:[rdi],dx
  420c5d:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

0000000000421000 <.CRT>:
	...
  421008:	(bad)  
  421009:	adc    DWORD PTR [rax+0x0],eax
	...
  421020:	adc    BYTE PTR [rax],dl
  421022:	add    BYTE PTR [rax],al
  421025:	add    BYTE PTR [rax],al
  421027:	add    BYTE PTR [rax+0x4083],ah
	...
  42103d:	add    BYTE PTR [rax],al
  42103f:	add    al,dl
  421041:	test   DWORD PTR [rax+0x0],eax
  421044:	add    BYTE PTR [rax],al
  421046:	add    BYTE PTR [rax],al
  421048:	movabs al,ds:0x4085
	...

Disassembly of section .tls:

0000000000422000 <.tls>:
	...
  422020:	add    BYTE PTR [rax],ah
  422022:	rex.X add BYTE PTR [rax],al
  422025:	add    BYTE PTR [rax],al
  422027:	add    BYTE PTR [rax+0x20],ah
  42202a:	rex.X add BYTE PTR [rax],al
  42202d:	add    BYTE PTR [rax],al
  42202f:	add    BYTE PTR [rdi+rdx*8],bl
  422032:	add    BYTE PTR [r8],al
  422035:	add    BYTE PTR [rax],al
  422037:	add    BYTE PTR [rax+0x10],al
  42203a:	rex.X add BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000000423000 <.reloc>:
  423000:	add    BYTE PTR [rax+0x1],al
  423003:	add    BYTE PTR [rax+rax*1],cl
  423006:	add    BYTE PTR [rax],al
  423008:	sbb    BYTE PTR [rdx+0x50000000],ah
  42300e:	add    DWORD PTR [rax],eax
  423010:	adc    al,0x0
  423012:	add    BYTE PTR [rax],al
  423014:	adc    BYTE PTR [rax-0x5fd75fe0],ah
  42301a:	movabs al,ds:0x18000a098a090
  423024:	adc    al,0x0
  423026:	add    BYTE PTR [rax],al
  423028:	jo     0x422fd6
  42302a:	js     0x422fd8
  42302c:	sub    BYTE PTR [rax+riz*8+0xaff0af],0x0
  423034:	add    BYTE PTR [rax+0x500001],dl
  42303a:	add    BYTE PTR [rax],al
  42303c:	add    BYTE PTR [rax-0x5fdf5ff0],ah
  423042:	xor    BYTE PTR [rax-0x5faf5fc0],ah
  423048:	(bad)  
  423049:	movabs al,ds:0xa0a0a090a080a070
  423052:	mov    al,0xa0
  423054:	shl    BYTE PTR [rax-0x5f1f5f30],0xf0
  42305b:	movabs al,ds:0xa130a120a110a100
  423064:	rex movabs eax,ds:0xa180a170a160a150
  42306e:	nop
  42306f:	movabs eax,ds:0xa1d0a1c0a1b0a1a0
  423078:	loopne 0x42301b
  42307a:	lock movabs eax,ds:0xa220a210a200
  423084:	add    BYTE PTR [rax],dl
  423086:	add    al,BYTE PTR [rax]
  423088:	adc    al,0x0
  42308a:	add    BYTE PTR [rax],al
  42308c:	or     BYTE PTR [rax-0x5fd75fe0],ah
  423092:	movabs al,ds:0x220000000a048
  42309c:	adc    BYTE PTR [rax],al
  42309e:	add    BYTE PTR [rax],al
  4230a0:	and    BYTE PTR [rax-0x5fcf5fd8],ah
  4230a6:	.byte 0x38
  4230a7:	.byte 0xa0
