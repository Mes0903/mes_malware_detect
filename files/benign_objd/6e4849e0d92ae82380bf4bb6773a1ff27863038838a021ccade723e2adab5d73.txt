
6e4849e0d92ae82380bf4bb6773a1ff27863038838a021ccade723e2adab5d73.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x5289]        # 0x140006290
   140001007:	jmp    0x140005620
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x5289]        # 0x1400062a0
   140001017:	jmp    0x140005620
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x5289]        # 0x1400062b0
   140001027:	jmp    0x140005620
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	mov    rax,rcx
   140001033:	ret    
   140001034:	int3   
   140001035:	int3   
   140001036:	int3   
   140001037:	int3   
   140001038:	int3   
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	mov    rax,rcx
   140001043:	ret    
   140001044:	int3   
   140001045:	int3   
   140001046:	int3   
   140001047:	int3   
   140001048:	int3   
   140001049:	int3   
   14000104a:	int3   
   14000104b:	int3   
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	mov    rax,QWORD PTR [rdx]
   140001053:	mov    QWORD PTR [rcx],rax
   140001056:	movzx  eax,BYTE PTR [r8]
   14000105a:	mov    BYTE PTR [rcx+0x8],al
   14000105d:	mov    rax,rcx
   140001060:	ret    
   140001061:	int3   
   140001062:	int3   
   140001063:	int3   
   140001064:	int3   
   140001065:	int3   
   140001066:	int3   
   140001067:	int3   
   140001068:	int3   
   140001069:	int3   
   14000106a:	int3   
   14000106b:	int3   
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	mov    rax,rcx
   140001073:	ret    
   140001074:	int3   
   140001075:	int3   
   140001076:	int3   
   140001077:	int3   
   140001078:	int3   
   140001079:	int3   
   14000107a:	int3   
   14000107b:	int3   
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	sub    rsp,0x28
   140001084:	call   0x1400044c0
   140001089:	test   eax,eax
   14000108b:	sete   al
   14000108e:	add    rsp,0x28
   140001092:	ret    
   140001093:	int3   
   140001094:	int3   
   140001095:	int3   
   140001096:	int3   
   140001097:	int3   
   140001098:	int3   
   140001099:	int3   
   14000109a:	int3   
   14000109b:	int3   
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	sub    rsp,0x28
   1400010a4:	xor    eax,eax
   1400010a6:	test   rcx,rcx
   1400010a9:	je     0x1400010c2
   1400010ab:	cmp    rcx,0xffffffffffffffff
   1400010af:	ja     0x1400010bb
   1400010b1:	call   0x140005512
   1400010b6:	test   rax,rax
   1400010b9:	jne    0x1400010c2
   1400010bb:	call   QWORD PTR [rip+0x5fa7]        # 0x140007068
   1400010c1:	int3   
   1400010c2:	add    rsp,0x28
   1400010c6:	ret    
   1400010c7:	int3   
   1400010c8:	int3   
   1400010c9:	int3   
   1400010ca:	int3   
   1400010cb:	int3   
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	sub    rsp,0x28
   1400010d4:	xor    eax,eax
   1400010d6:	test   rcx,rcx
   1400010d9:	je     0x140001103
   1400010db:	movabs rax,0x333333333333333
   1400010e5:	cmp    rcx,rax
   1400010e8:	ja     0x1400010fc
   1400010ea:	lea    rcx,[rcx+rcx*4]
   1400010ee:	shl    rcx,0x4
   1400010f2:	call   0x140005512
   1400010f7:	test   rax,rax
   1400010fa:	jne    0x140001103
   1400010fc:	call   QWORD PTR [rip+0x5f66]        # 0x140007068
   140001102:	int3   
   140001103:	add    rsp,0x28
   140001107:	ret    
   140001108:	int3   
   140001109:	int3   
   14000110a:	int3   
   14000110b:	int3   
   14000110c:	int3   
   14000110d:	int3   
   14000110e:	int3   
   14000110f:	int3   
   140001110:	sub    rsp,0x28
   140001114:	xor    eax,eax
   140001116:	test   rcx,rcx
   140001119:	je     0x140001143
   14000111b:	movabs rax,0x1fffffffffffffff
   140001125:	cmp    rcx,rax
   140001128:	ja     0x14000113c
   14000112a:	lea    rcx,[rcx*8+0x0]
   140001132:	call   0x140005512
   140001137:	test   rax,rax
   14000113a:	jne    0x140001143
   14000113c:	call   QWORD PTR [rip+0x5f26]        # 0x140007068
   140001142:	int3   
   140001143:	add    rsp,0x28
   140001147:	ret    
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	sub    rsp,0x28
   140001154:	xor    eax,eax
   140001156:	test   rcx,rcx
   140001159:	je     0x14000117e
   14000115b:	movabs rax,0x7fffffffffffffff
   140001165:	cmp    rcx,rax
   140001168:	ja     0x140001177
   14000116a:	add    rcx,rcx
   14000116d:	call   0x140005512
   140001172:	test   rax,rax
   140001175:	jne    0x14000117e
   140001177:	call   QWORD PTR [rip+0x5eeb]        # 0x140007068
   14000117d:	int3   
   14000117e:	add    rsp,0x28
   140001182:	ret    
   140001183:	int3   
   140001184:	int3   
   140001185:	int3   
   140001186:	int3   
   140001187:	int3   
   140001188:	int3   
   140001189:	int3   
   14000118a:	int3   
   14000118b:	int3   
   14000118c:	int3   
   14000118d:	int3   
   14000118e:	int3   
   14000118f:	int3   
   140001190:	rex push rdi
   140001192:	sub    rsp,0x40
   140001196:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000119f:	mov    QWORD PTR [rsp+0x50],rbx
   1400011a4:	mov    rdi,r9
   1400011a7:	call   0x140002a10
   1400011ac:	mov    rbx,rax
   1400011af:	mov    QWORD PTR [rsp+0x20],rax
   1400011b4:	lea    rcx,[rax+0x10]
   1400011b8:	mov    QWORD PTR [rsp+0x30],rcx
   1400011bd:	mov    QWORD PTR [rsp+0x38],rcx
   1400011c2:	test   rcx,rcx
   1400011c5:	je     0x1400011d0
   1400011c7:	mov    rdx,rdi
   1400011ca:	call   0x1400021e0
   1400011cf:	nop
   1400011d0:	mov    rax,rbx
   1400011d3:	mov    rbx,QWORD PTR [rsp+0x50]
   1400011d8:	add    rsp,0x40
   1400011dc:	pop    rdi
   1400011dd:	ret    
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	mov    QWORD PTR [rdx],r9
   1400011e3:	mov    rax,rdx
   1400011e6:	ret    
   1400011e7:	int3   
   1400011e8:	int3   
   1400011e9:	int3   
   1400011ea:	int3   
   1400011eb:	int3   
   1400011ec:	int3   
   1400011ed:	int3   
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	mov    rax,r8
   1400011f3:	cmp    rcx,rdx
   1400011f6:	je     0x140001214
   1400011f8:	nop    DWORD PTR [rax+rax*1+0x0]
   140001200:	mov    r8,QWORD PTR [rdx-0x8]
   140001204:	sub    rdx,0x8
   140001208:	sub    rax,0x8
   14000120c:	mov    QWORD PTR [rax],r8
   14000120f:	cmp    rdx,rcx
   140001212:	jne    0x140001200
   140001214:	ret    
   140001215:	int3   
   140001216:	int3   
   140001217:	int3   
   140001218:	int3   
   140001219:	int3   
   14000121a:	int3   
   14000121b:	int3   
   14000121c:	int3   
   14000121d:	int3   
   14000121e:	int3   
   14000121f:	int3   
   140001220:	cmp    rcx,rdx
   140001223:	je     0x140001244
   140001225:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140001230:	mov    rax,QWORD PTR [rdx-0x8]
   140001234:	sub    rdx,0x8
   140001238:	sub    r8,0x8
   14000123c:	mov    QWORD PTR [r8],rax
   14000123f:	cmp    rdx,rcx
   140001242:	jne    0x140001230
   140001244:	mov    rax,r8
   140001247:	ret    
   140001248:	int3   
   140001249:	int3   
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	ret    0x0
   140001253:	int3   
   140001254:	int3   
   140001255:	int3   
   140001256:	int3   
   140001257:	int3   
   140001258:	int3   
   140001259:	int3   
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	ret    0x0
   140001263:	int3   
   140001264:	int3   
   140001265:	int3   
   140001266:	int3   
   140001267:	int3   
   140001268:	int3   
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	xor    r9d,r9d
   140001273:	mov    r10,rdx
   140001276:	sub    r10,rcx
   140001279:	add    r10,0x7
   14000127d:	shr    r10,0x3
   140001281:	cmp    rcx,rdx
   140001284:	cmova  r10,r9
   140001288:	test   r10,r10
   14000128b:	je     0x1400012a3
   14000128d:	nop    DWORD PTR [rax]
   140001290:	mov    rax,QWORD PTR [r8]
   140001293:	inc    r9
   140001296:	lea    rcx,[rcx+0x8]
   14000129a:	mov    QWORD PTR [rcx-0x8],rax
   14000129e:	cmp    r9,r10
   1400012a1:	jne    0x140001290
   1400012a3:	ret    
   1400012a4:	int3   
   1400012a5:	int3   
   1400012a6:	int3   
   1400012a7:	int3   
   1400012a8:	int3   
   1400012a9:	int3   
   1400012aa:	int3   
   1400012ab:	int3   
   1400012ac:	int3   
   1400012ad:	int3   
   1400012ae:	int3   
   1400012af:	int3   
   1400012b0:	movabs rax,0x1fffffffffffffff
   1400012ba:	ret    
   1400012bb:	int3   
   1400012bc:	int3   
   1400012bd:	int3   
   1400012be:	int3   
   1400012bf:	int3   
   1400012c0:	ret    0x0
   1400012c3:	int3   
   1400012c4:	int3   
   1400012c5:	int3   
   1400012c6:	int3   
   1400012c7:	int3   
   1400012c8:	int3   
   1400012c9:	int3   
   1400012ca:	int3   
   1400012cb:	int3   
   1400012cc:	int3   
   1400012cd:	int3   
   1400012ce:	int3   
   1400012cf:	int3   
   1400012d0:	test   r8,r8
   1400012d3:	je     0x1400012db
   1400012d5:	mov    rax,QWORD PTR [r9]
   1400012d8:	mov    QWORD PTR [r8],rax
   1400012db:	ret    
   1400012dc:	int3   
   1400012dd:	int3   
   1400012de:	int3   
   1400012df:	int3   
   1400012e0:	test   r8,r8
   1400012e3:	je     0x1400012eb
   1400012e5:	mov    rax,QWORD PTR [r9]
   1400012e8:	mov    QWORD PTR [r8],rax
   1400012eb:	ret    
   1400012ec:	int3   
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	mov    QWORD PTR [rsp+0x20],r9
   1400012f5:	mov    QWORD PTR [rsp+0x10],rdx
   1400012fa:	mov    QWORD PTR [rsp+0x8],rcx
   1400012ff:	push   rbx
   140001300:	push   rsi
   140001301:	push   rdi
   140001302:	push   r12
   140001304:	push   r13
   140001306:	push   r14
   140001308:	push   r15
   14000130a:	sub    rsp,0x30
   14000130e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001317:	mov    rdi,r9
   14000131a:	mov    r15,r8
   14000131d:	mov    rsi,rdx
   140001320:	mov    r13,rcx
   140001323:	mov    r14,QWORD PTR [r8+0x10]
   140001327:	mov    r10,QWORD PTR [r8+0x18]
   14000132b:	cmp    r10,0x10
   14000132f:	jb     0x140001336
   140001331:	mov    r9,QWORD PTR [r8]
   140001334:	jmp    0x140001339
   140001336:	mov    r9,r8
   140001339:	movabs rcx,0xcbf29ce484222325
   140001343:	xor    edx,edx
   140001345:	test   r14,r14
   140001348:	je     0x140001374
   14000134a:	movabs r8,0x100000001b3
   140001354:	nop    DWORD PTR [rax+0x0]
   140001358:	nop    DWORD PTR [rax+rax*1+0x0]
   140001360:	movzx  eax,BYTE PTR [rdx+r9*1]
   140001365:	xor    rcx,rax
   140001368:	imul   rcx,r8
   14000136c:	inc    rdx
   14000136f:	cmp    rdx,r14
   140001372:	jb     0x140001360
   140001374:	mov    rax,rcx
   140001377:	shr    rax,0x20
   14000137b:	xor    rcx,rax
   14000137e:	mov    rdx,QWORD PTR [r13+0x28]
   140001382:	mov    r12,rdx
   140001385:	and    r12,rcx
   140001388:	cmp    QWORD PTR [r13+0x30],r12
   14000138c:	ja     0x14000139b
   14000138e:	shr    rdx,1
   140001391:	or     rax,0xffffffffffffffff
   140001395:	sub    rax,rdx
   140001398:	add    r12,rax
   14000139b:	mov    rbx,QWORD PTR [r13+0x0]
   14000139f:	mov    r9,QWORD PTR [r13+0x10]
   1400013a3:	mov    r8,r12
   1400013a6:	shl    r8,0x4
   1400013aa:	mov    QWORD PTR [rsp+0x80],r8
   1400013b2:	mov    rax,QWORD PTR [r9+r8*1]
   1400013b6:	cmp    rbx,rax
   1400013b9:	je     0x140001487
   1400013bf:	mov    rbx,QWORD PTR [r9+r8*1+0x8]
   1400013c4:	mov    rbx,QWORD PTR [rbx]
   1400013c7:	cmp    rbx,rax
   1400013ca:	je     0x140001487
   1400013d0:	add    r12,r12
   1400013d3:	mov    rbx,QWORD PTR [rbx+0x8]
   1400013d7:	lea    rdx,[rbx+0x10]
   1400013db:	mov    rsi,QWORD PTR [rdx+0x10]
   1400013df:	cmp    QWORD PTR [rdx+0x18],0x10
   1400013e4:	jb     0x1400013e9
   1400013e6:	mov    rdx,QWORD PTR [rdx]
   1400013e9:	cmp    r10,0x10
   1400013ed:	jb     0x1400013f4
   1400013ef:	mov    rcx,QWORD PTR [r15]
   1400013f2:	jmp    0x1400013f7
   1400013f4:	mov    rcx,r15
   1400013f7:	mov    r8,rsi
   1400013fa:	cmp    r14,rsi
   1400013fd:	cmovb  r8,r14
   140001401:	test   r8,r8
   140001404:	jne    0x14000140a
   140001406:	xor    eax,eax
   140001408:	jmp    0x140001417
   14000140a:	call   0x1400056be
   14000140f:	mov    r9,QWORD PTR [r13+0x10]
   140001413:	mov    r10,QWORD PTR [r15+0x18]
   140001417:	cdqe   
   140001419:	test   rax,rax
   14000141c:	jne    0x140001430
   14000141e:	cmp    r14,rsi
   140001421:	jae    0x140001428
   140001423:	or     eax,0xffffffff
   140001426:	jmp    0x140001430
   140001428:	xor    eax,eax
   14000142a:	cmp    r14,rsi
   14000142d:	setne  al
   140001430:	test   eax,eax
   140001432:	je     0x14000143c
   140001434:	cmp    rbx,QWORD PTR [r9+r12*8]
   140001438:	jne    0x1400013d3
   14000143a:	jmp    0x14000147a
   14000143c:	lea    rcx,[rbx+0x10]
   140001440:	mov    rdx,r15
   140001443:	call   0x1400044c0
   140001448:	test   eax,eax
   14000144a:	je     0x140001459
   14000144c:	mov    rbx,QWORD PTR [rbx]
   14000144f:	mov    rdi,QWORD PTR [rsp+0x88]
   140001457:	jmp    0x14000147a
   140001459:	mov    rdx,QWORD PTR [rsp+0x88]
   140001461:	mov    rcx,r13
   140001464:	call   0x140002e30
   140001469:	mov    rax,QWORD PTR [rsp+0x78]
   14000146e:	mov    QWORD PTR [rax],rbx
   140001471:	mov    BYTE PTR [rax+0x8],0x0
   140001475:	jmp    0x140001518
   14000147a:	mov    rsi,QWORD PTR [rsp+0x78]
   14000147f:	mov    r8,QWORD PTR [rsp+0x80]
   140001487:	mov    rax,QWORD PTR [rdi]
   14000148a:	cmp    rbx,rax
   14000148d:	je     0x1400014bc
   14000148f:	mov    rcx,QWORD PTR [rdi+0x8]
   140001493:	mov    QWORD PTR [rcx],rax
   140001496:	mov    rcx,QWORD PTR [rax+0x8]
   14000149a:	mov    QWORD PTR [rcx],rbx
   14000149d:	mov    rcx,QWORD PTR [rbx+0x8]
   1400014a1:	mov    QWORD PTR [rcx],rdi
   1400014a4:	mov    rdx,QWORD PTR [rbx+0x8]
   1400014a8:	mov    rcx,QWORD PTR [rax+0x8]
   1400014ac:	mov    QWORD PTR [rbx+0x8],rcx
   1400014b0:	mov    rcx,QWORD PTR [rdi+0x8]
   1400014b4:	mov    QWORD PTR [rax+0x8],rcx
   1400014b8:	mov    QWORD PTR [rdi+0x8],rdx
   1400014bc:	mov    rdx,QWORD PTR [r13+0x10]
   1400014c0:	add    rdx,r8
   1400014c3:	mov    rax,QWORD PTR [rdx]
   1400014c6:	cmp    rax,QWORD PTR [r13+0x0]
   1400014ca:	jne    0x1400014da
   1400014cc:	mov    QWORD PTR [rdx],rdi
   1400014cf:	mov    rax,QWORD PTR [r13+0x10]
   1400014d3:	mov    QWORD PTR [rax+r8*1+0x8],rdi
   1400014d8:	jmp    0x140001506
   1400014da:	cmp    rax,rbx
   1400014dd:	jne    0x1400014e4
   1400014df:	mov    QWORD PTR [rdx],rdi
   1400014e2:	jmp    0x140001506
   1400014e4:	mov    rax,QWORD PTR [rdx+0x8]
   1400014e8:	mov    rcx,QWORD PTR [rax]
   1400014eb:	mov    QWORD PTR [rdx+0x8],rcx
   1400014ef:	cmp    rcx,rdi
   1400014f2:	je     0x140001506
   1400014f4:	mov    rdx,QWORD PTR [r13+0x10]
   1400014f8:	mov    rax,QWORD PTR [rdx+r8*1+0x8]
   1400014fd:	mov    rcx,QWORD PTR [rax+0x8]
   140001501:	mov    QWORD PTR [rdx+r8*1+0x8],rcx
   140001506:	mov    rcx,r13
   140001509:	call   0x140002a70
   14000150e:	mov    QWORD PTR [rsi],rdi
   140001511:	mov    BYTE PTR [rsi+0x8],0x1
   140001515:	mov    rax,rsi
   140001518:	add    rsp,0x30
   14000151c:	pop    r15
   14000151e:	pop    r14
   140001520:	pop    r13
   140001522:	pop    r12
   140001524:	pop    rdi
   140001525:	pop    rsi
   140001526:	pop    rbx
   140001527:	ret    
   140001528:	int3   
   140001529:	int3   
   14000152a:	int3   
   14000152b:	int3   
   14000152c:	int3   
   14000152d:	int3   
   14000152e:	int3   
   14000152f:	int3   
   140001530:	mov    QWORD PTR [rsp+0x8],rbx
   140001535:	push   rdi
   140001536:	sub    rsp,0x20
   14000153a:	mov    r9,r8
   14000153d:	mov    r8,QWORD PTR [rdx+0x8]
   140001541:	mov    rbx,rdx
   140001544:	mov    rdi,rcx
   140001547:	call   0x140001190
   14000154c:	movabs rdx,0x333333333333332
   140001556:	mov    r8,rax
   140001559:	mov    rax,QWORD PTR [rdi+0x8]
   14000155d:	sub    rdx,rax
   140001560:	cmp    rdx,0x1
   140001564:	jae    0x140001574
   140001566:	lea    rcx,[rip+0x6283]        # 0x1400077f0
   14000156d:	call   QWORD PTR [rip+0x5aed]        # 0x140007060
   140001573:	int3   
   140001574:	inc    rax
   140001577:	mov    QWORD PTR [rdi+0x8],rax
   14000157b:	mov    QWORD PTR [rbx+0x8],r8
   14000157f:	mov    rax,QWORD PTR [r8+0x8]
   140001583:	mov    rbx,QWORD PTR [rsp+0x30]
   140001588:	mov    QWORD PTR [rax],r8
   14000158b:	add    rsp,0x20
   14000158f:	pop    rdi
   140001590:	ret    
   140001591:	int3   
   140001592:	int3   
   140001593:	int3   
   140001594:	int3   
   140001595:	int3   
   140001596:	int3   
   140001597:	int3   
   140001598:	int3   
   140001599:	int3   
   14000159a:	int3   
   14000159b:	int3   
   14000159c:	int3   
   14000159d:	int3   
   14000159e:	int3   
   14000159f:	int3   
   1400015a0:	mov    rax,rcx
   1400015a3:	ret    
   1400015a4:	int3   
   1400015a5:	int3   
   1400015a6:	int3   
   1400015a7:	int3   
   1400015a8:	int3   
   1400015a9:	int3   
   1400015aa:	int3   
   1400015ab:	int3   
   1400015ac:	int3   
   1400015ad:	int3   
   1400015ae:	int3   
   1400015af:	int3   
   1400015b0:	movzx  eax,BYTE PTR [rsp+0x18]
   1400015b5:	ret    
   1400015b6:	int3   
   1400015b7:	int3   
   1400015b8:	int3   
   1400015b9:	int3   
   1400015ba:	int3   
   1400015bb:	int3   
   1400015bc:	int3   
   1400015bd:	int3   
   1400015be:	int3   
   1400015bf:	int3   
   1400015c0:	mov    QWORD PTR [rcx],rdx
   1400015c3:	mov    rax,rcx
   1400015c6:	ret    
   1400015c7:	int3   
   1400015c8:	int3   
   1400015c9:	int3   
   1400015ca:	int3   
   1400015cb:	int3   
   1400015cc:	int3   
   1400015cd:	int3   
   1400015ce:	int3   
   1400015cf:	int3   
   1400015d0:	rex push rbx
   1400015d2:	sub    rsp,0x30
   1400015d6:	movzx  eax,BYTE PTR [rsp+0x58]
   1400015db:	mov    r10,r9
   1400015de:	mov    r11,r8
   1400015e1:	mov    rcx,rdx
   1400015e4:	mov    BYTE PTR [rsp+0x28],al
   1400015e8:	lea    r9,[rsp+0x58]
   1400015ed:	mov    r8,r10
   1400015f0:	mov    rdx,r11
   1400015f3:	mov    QWORD PTR [rsp+0x20],0x0
   1400015fc:	call   0x140001670
   140001601:	add    rsp,0x30
   140001605:	pop    rbx
   140001606:	ret    
   140001607:	int3   
   140001608:	int3   
   140001609:	int3   
   14000160a:	int3   
   14000160b:	int3   
   14000160c:	int3   
   14000160d:	int3   
   14000160e:	int3   
   14000160f:	int3   
   140001610:	mov    rax,rcx
   140001613:	ret    
   140001614:	int3   
   140001615:	int3   
   140001616:	int3   
   140001617:	int3   
   140001618:	int3   
   140001619:	int3   
   14000161a:	int3   
   14000161b:	int3   
   14000161c:	int3   
   14000161d:	int3   
   14000161e:	int3   
   14000161f:	int3   
   140001620:	sub    rsp,0x38
   140001624:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000162d:	test   rdx,rdx
   140001630:	je     0x140001646
   140001632:	test   rcx,rcx
   140001635:	je     0x14000163d
   140001637:	mov    rax,QWORD PTR [r8]
   14000163a:	mov    QWORD PTR [rcx],rax
   14000163d:	add    rcx,0x8
   140001641:	dec    rdx
   140001644:	jne    0x140001632
   140001646:	add    rsp,0x38
   14000164a:	ret    
   14000164b:	int3   
   14000164c:	int3   
   14000164d:	int3   
   14000164e:	int3   
   14000164f:	int3   
   140001650:	sub    rsp,0x48
   140001654:	movzx  eax,BYTE PTR [rsp+0x30]
   140001659:	mov    BYTE PTR [rsp+0x28],al
   14000165d:	mov    QWORD PTR [rsp+0x20],0x0
   140001666:	call   0x140001670
   14000166b:	add    rsp,0x48
   14000166f:	ret    
   140001670:	sub    rsp,0x38
   140001674:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000167d:	xor    r9d,r9d
   140001680:	mov    r10,rdx
   140001683:	sub    r10,rcx
   140001686:	add    r10,0x7
   14000168a:	shr    r10,0x3
   14000168e:	cmp    rcx,rdx
   140001691:	cmova  r10,r9
   140001695:	test   r10,r10
   140001698:	je     0x1400016b8
   14000169a:	sub    rcx,r8
   14000169d:	nop    DWORD PTR [rax]
   1400016a0:	test   r8,r8
   1400016a3:	je     0x1400016ac
   1400016a5:	mov    rax,QWORD PTR [rcx+r8*1]
   1400016a9:	mov    QWORD PTR [r8],rax
   1400016ac:	add    r8,0x8
   1400016b0:	inc    r9
   1400016b3:	cmp    r9,r10
   1400016b6:	jne    0x1400016a0
   1400016b8:	mov    rax,r8
   1400016bb:	add    rsp,0x38
   1400016bf:	ret    
   1400016c0:	sub    rsp,0x48
   1400016c4:	movzx  eax,BYTE PTR [rsp+0x30]
   1400016c9:	mov    BYTE PTR [rsp+0x28],al
   1400016cd:	mov    QWORD PTR [rsp+0x20],0x0
   1400016d6:	call   0x140001620
   1400016db:	add    rsp,0x48
   1400016df:	ret    
   1400016e0:	sub    rsp,0x38
   1400016e4:	movzx  eax,BYTE PTR [rsp+0x50]
   1400016e9:	mov    BYTE PTR [rsp+0x28],al
   1400016ed:	mov    QWORD PTR [rsp+0x20],0x0
   1400016f6:	call   0x140001670
   1400016fb:	add    rsp,0x38
   1400016ff:	ret    
   140001700:	xor    eax,eax
   140001702:	ret    
   140001703:	int3   
   140001704:	int3   
   140001705:	int3   
   140001706:	int3   
   140001707:	int3   
   140001708:	int3   
   140001709:	int3   
   14000170a:	int3   
   14000170b:	int3   
   14000170c:	int3   
   14000170d:	int3   
   14000170e:	int3   
   14000170f:	int3   
   140001710:	mov    rax,rcx
   140001713:	ret    
   140001714:	int3   
   140001715:	int3   
   140001716:	int3   
   140001717:	int3   
   140001718:	int3   
   140001719:	int3   
   14000171a:	int3   
   14000171b:	int3   
   14000171c:	int3   
   14000171d:	int3   
   14000171e:	int3   
   14000171f:	int3   
   140001720:	mov    rax,rcx
   140001723:	ret    
   140001724:	int3   
   140001725:	int3   
   140001726:	int3   
   140001727:	int3   
   140001728:	int3   
   140001729:	int3   
   14000172a:	int3   
   14000172b:	int3   
   14000172c:	int3   
   14000172d:	int3   
   14000172e:	int3   
   14000172f:	int3   
   140001730:	mov    rax,rcx
   140001733:	ret    
   140001734:	int3   
   140001735:	int3   
   140001736:	int3   
   140001737:	int3   
   140001738:	int3   
   140001739:	int3   
   14000173a:	int3   
   14000173b:	int3   
   14000173c:	int3   
   14000173d:	int3   
   14000173e:	int3   
   14000173f:	int3   
   140001740:	mov    rax,rcx
   140001743:	ret    
   140001744:	int3   
   140001745:	int3   
   140001746:	int3   
   140001747:	int3   
   140001748:	int3   
   140001749:	int3   
   14000174a:	int3   
   14000174b:	int3   
   14000174c:	int3   
   14000174d:	int3   
   14000174e:	int3   
   14000174f:	int3   
   140001750:	mov    rax,rcx
   140001753:	ret    
   140001754:	int3   
   140001755:	int3   
   140001756:	int3   
   140001757:	int3   
   140001758:	int3   
   140001759:	int3   
   14000175a:	int3   
   14000175b:	int3   
   14000175c:	int3   
   14000175d:	int3   
   14000175e:	int3   
   14000175f:	int3   
   140001760:	mov    rax,rcx
   140001763:	ret    
   140001764:	int3   
   140001765:	int3   
   140001766:	int3   
   140001767:	int3   
   140001768:	int3   
   140001769:	int3   
   14000176a:	int3   
   14000176b:	int3   
   14000176c:	int3   
   14000176d:	int3   
   14000176e:	int3   
   14000176f:	int3   
   140001770:	test   rdx,rdx
   140001773:	je     0x14000177b
   140001775:	mov    rax,QWORD PTR [r8]
   140001778:	mov    QWORD PTR [rdx],rax
   14000177b:	ret    
   14000177c:	int3   
   14000177d:	int3   
   14000177e:	int3   
   14000177f:	int3   
   140001780:	test   rdx,rdx
   140001783:	je     0x14000178b
   140001785:	mov    rax,QWORD PTR [r8]
   140001788:	mov    QWORD PTR [rdx],rax
   14000178b:	ret    
   14000178c:	int3   
   14000178d:	int3   
   14000178e:	int3   
   14000178f:	int3   
   140001790:	test   rdx,rdx
   140001793:	je     0x14000179b
   140001795:	mov    rax,QWORD PTR [r8]
   140001798:	mov    QWORD PTR [rdx],rax
   14000179b:	ret    
   14000179c:	int3   
   14000179d:	int3   
   14000179e:	int3   
   14000179f:	int3   
   1400017a0:	test   rdx,rdx
   1400017a3:	je     0x1400017ab
   1400017a5:	mov    rax,QWORD PTR [r8]
   1400017a8:	mov    QWORD PTR [rdx],rax
   1400017ab:	ret    
   1400017ac:	int3   
   1400017ad:	int3   
   1400017ae:	int3   
   1400017af:	int3   
   1400017b0:	test   rdx,rdx
   1400017b3:	je     0x1400017bb
   1400017b5:	mov    rax,QWORD PTR [r8]
   1400017b8:	mov    QWORD PTR [rdx],rax
   1400017bb:	ret    
   1400017bc:	int3   
   1400017bd:	int3   
   1400017be:	int3   
   1400017bf:	int3   
   1400017c0:	test   rdx,rdx
   1400017c3:	je     0x1400017cb
   1400017c5:	mov    rax,QWORD PTR [r8]
   1400017c8:	mov    QWORD PTR [rdx],rax
   1400017cb:	ret    
   1400017cc:	int3   
   1400017cd:	int3   
   1400017ce:	int3   
   1400017cf:	int3   
   1400017d0:	test   rdx,rdx
   1400017d3:	je     0x1400017db
   1400017d5:	mov    rax,QWORD PTR [r8]
   1400017d8:	mov    QWORD PTR [rdx],rax
   1400017db:	ret    
   1400017dc:	int3   
   1400017dd:	int3   
   1400017de:	int3   
   1400017df:	int3   
   1400017e0:	test   rdx,rdx
   1400017e3:	je     0x1400017eb
   1400017e5:	mov    rax,QWORD PTR [r8]
   1400017e8:	mov    QWORD PTR [rdx],rax
   1400017eb:	ret    
   1400017ec:	int3   
   1400017ed:	int3   
   1400017ee:	int3   
   1400017ef:	int3   
   1400017f0:	test   rdx,rdx
   1400017f3:	je     0x1400017fb
   1400017f5:	mov    rax,QWORD PTR [r8]
   1400017f8:	mov    QWORD PTR [rdx],rax
   1400017fb:	ret    
   1400017fc:	int3   
   1400017fd:	int3   
   1400017fe:	int3   
   1400017ff:	int3   
   140001800:	mov    QWORD PTR [rsp+0x10],rdx
   140001805:	sub    rsp,0x38
   140001809:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001812:	mov    rax,rdx
   140001815:	mov    QWORD PTR [rsp+0x58],rdx
   14000181a:	test   rdx,rdx
   14000181d:	je     0x14000182b
   14000181f:	mov    rdx,r8
   140001822:	mov    rcx,rax
   140001825:	call   0x1400021e0
   14000182a:	nop
   14000182b:	add    rsp,0x38
   14000182f:	ret    
   140001830:	mov    QWORD PTR [rsp+0x10],rdx
   140001835:	sub    rsp,0x38
   140001839:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001842:	mov    rax,rdx
   140001845:	mov    QWORD PTR [rsp+0x58],rdx
   14000184a:	test   rdx,rdx
   14000184d:	je     0x14000185b
   14000184f:	mov    rdx,r8
   140001852:	mov    rcx,rax
   140001855:	call   0x1400021e0
   14000185a:	nop
   14000185b:	add    rsp,0x38
   14000185f:	ret    
   140001860:	mov    QWORD PTR [rsp+0x10],rdx
   140001865:	sub    rsp,0x38
   140001869:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001872:	mov    rax,rdx
   140001875:	mov    QWORD PTR [rsp+0x58],rdx
   14000187a:	test   rdx,rdx
   14000187d:	je     0x14000188b
   14000187f:	mov    rdx,r8
   140001882:	mov    rcx,rax
   140001885:	call   0x1400021e0
   14000188a:	nop
   14000188b:	add    rsp,0x38
   14000188f:	ret    
   140001890:	test   rdx,rdx
   140001893:	je     0x14000189b
   140001895:	mov    rax,QWORD PTR [r8]
   140001898:	mov    QWORD PTR [rdx],rax
   14000189b:	ret    
   14000189c:	int3   
   14000189d:	int3   
   14000189e:	int3   
   14000189f:	int3   
   1400018a0:	test   rdx,rdx
   1400018a3:	je     0x1400018ab
   1400018a5:	mov    rax,QWORD PTR [r8]
   1400018a8:	mov    QWORD PTR [rdx],rax
   1400018ab:	ret    
   1400018ac:	int3   
   1400018ad:	int3   
   1400018ae:	int3   
   1400018af:	int3   
   1400018b0:	test   rdx,rdx
   1400018b3:	je     0x1400018bb
   1400018b5:	mov    rax,QWORD PTR [r8]
   1400018b8:	mov    QWORD PTR [rdx],rax
   1400018bb:	ret    
   1400018bc:	int3   
   1400018bd:	int3   
   1400018be:	int3   
   1400018bf:	int3   
   1400018c0:	test   rdx,rdx
   1400018c3:	je     0x1400018cb
   1400018c5:	mov    rax,QWORD PTR [r8]
   1400018c8:	mov    QWORD PTR [rdx],rax
   1400018cb:	ret    
   1400018cc:	int3   
   1400018cd:	int3   
   1400018ce:	int3   
   1400018cf:	int3   
   1400018d0:	test   rdx,rdx
   1400018d3:	je     0x1400018db
   1400018d5:	mov    rax,QWORD PTR [r8]
   1400018d8:	mov    QWORD PTR [rdx],rax
   1400018db:	ret    
   1400018dc:	int3   
   1400018dd:	int3   
   1400018de:	int3   
   1400018df:	int3   
   1400018e0:	test   rdx,rdx
   1400018e3:	je     0x1400018eb
   1400018e5:	mov    rax,QWORD PTR [r8]
   1400018e8:	mov    QWORD PTR [rdx],rax
   1400018eb:	ret    
   1400018ec:	int3   
   1400018ed:	int3   
   1400018ee:	int3   
   1400018ef:	int3   
   1400018f0:	test   rdx,rdx
   1400018f3:	je     0x1400018fb
   1400018f5:	mov    rax,QWORD PTR [r8]
   1400018f8:	mov    QWORD PTR [rdx],rax
   1400018fb:	ret    
   1400018fc:	int3   
   1400018fd:	int3   
   1400018fe:	int3   
   1400018ff:	int3   
   140001900:	test   rdx,rdx
   140001903:	je     0x14000190b
   140001905:	mov    rax,QWORD PTR [r8]
   140001908:	mov    QWORD PTR [rdx],rax
   14000190b:	ret    
   14000190c:	int3   
   14000190d:	int3   
   14000190e:	int3   
   14000190f:	int3   
   140001910:	test   rdx,rdx
   140001913:	je     0x14000191b
   140001915:	mov    rax,QWORD PTR [r8]
   140001918:	mov    QWORD PTR [rdx],rax
   14000191b:	ret    
   14000191c:	int3   
   14000191d:	int3   
   14000191e:	int3   
   14000191f:	int3   
   140001920:	ret    0x0
   140001923:	int3   
   140001924:	int3   
   140001925:	int3   
   140001926:	int3   
   140001927:	int3   
   140001928:	int3   
   140001929:	int3   
   14000192a:	int3   
   14000192b:	int3   
   14000192c:	int3   
   14000192d:	int3   
   14000192e:	int3   
   14000192f:	int3   
   140001930:	ret    0x0
   140001933:	int3   
   140001934:	int3   
   140001935:	int3   
   140001936:	int3   
   140001937:	int3   
   140001938:	int3   
   140001939:	int3   
   14000193a:	int3   
   14000193b:	int3   
   14000193c:	int3   
   14000193d:	int3   
   14000193e:	int3   
   14000193f:	int3   
   140001940:	ret    0x0
   140001943:	int3   
   140001944:	int3   
   140001945:	int3   
   140001946:	int3   
   140001947:	int3   
   140001948:	int3   
   140001949:	int3   
   14000194a:	int3   
   14000194b:	int3   
   14000194c:	int3   
   14000194d:	int3   
   14000194e:	int3   
   14000194f:	int3   
   140001950:	ret    0x0
   140001953:	int3   
   140001954:	int3   
   140001955:	int3   
   140001956:	int3   
   140001957:	int3   
   140001958:	int3   
   140001959:	int3   
   14000195a:	int3   
   14000195b:	int3   
   14000195c:	int3   
   14000195d:	int3   
   14000195e:	int3   
   14000195f:	int3   
   140001960:	ret    0x0
   140001963:	int3   
   140001964:	int3   
   140001965:	int3   
   140001966:	int3   
   140001967:	int3   
   140001968:	int3   
   140001969:	int3   
   14000196a:	int3   
   14000196b:	int3   
   14000196c:	int3   
   14000196d:	int3   
   14000196e:	int3   
   14000196f:	int3   
   140001970:	ret    0x0
   140001973:	int3   
   140001974:	int3   
   140001975:	int3   
   140001976:	int3   
   140001977:	int3   
   140001978:	int3   
   140001979:	int3   
   14000197a:	int3   
   14000197b:	int3   
   14000197c:	int3   
   14000197d:	int3   
   14000197e:	int3   
   14000197f:	int3   
   140001980:	ret    0x0
   140001983:	int3   
   140001984:	int3   
   140001985:	int3   
   140001986:	int3   
   140001987:	int3   
   140001988:	int3   
   140001989:	int3   
   14000198a:	int3   
   14000198b:	int3   
   14000198c:	int3   
   14000198d:	int3   
   14000198e:	int3   
   14000198f:	int3   
   140001990:	ret    0x0
   140001993:	int3   
   140001994:	int3   
   140001995:	int3   
   140001996:	int3   
   140001997:	int3   
   140001998:	int3   
   140001999:	int3   
   14000199a:	int3   
   14000199b:	int3   
   14000199c:	int3   
   14000199d:	int3   
   14000199e:	int3   
   14000199f:	int3   
   1400019a0:	ret    0x0
   1400019a3:	int3   
   1400019a4:	int3   
   1400019a5:	int3   
   1400019a6:	int3   
   1400019a7:	int3   
   1400019a8:	int3   
   1400019a9:	int3   
   1400019aa:	int3   
   1400019ab:	int3   
   1400019ac:	int3   
   1400019ad:	int3   
   1400019ae:	int3   
   1400019af:	int3   
   1400019b0:	rex push rbx
   1400019b2:	sub    rsp,0x20
   1400019b6:	cmp    QWORD PTR [rdx+0x38],0x10
   1400019bb:	mov    rbx,rdx
   1400019be:	jb     0x1400019c9
   1400019c0:	mov    rcx,QWORD PTR [rdx+0x20]
   1400019c4:	call   0x140005518
   1400019c9:	mov    QWORD PTR [rbx+0x38],0xf
   1400019d1:	mov    QWORD PTR [rbx+0x30],0x0
   1400019d9:	mov    BYTE PTR [rbx+0x20],0x0
   1400019dd:	cmp    QWORD PTR [rbx+0x18],0x10
   1400019e2:	jb     0x1400019ec
   1400019e4:	mov    rcx,QWORD PTR [rbx]
   1400019e7:	call   0x140005518
   1400019ec:	mov    QWORD PTR [rbx+0x18],0xf
   1400019f4:	mov    QWORD PTR [rbx+0x10],0x0
   1400019fc:	mov    BYTE PTR [rbx],0x0
   1400019ff:	add    rsp,0x20
   140001a03:	pop    rbx
   140001a04:	ret    
   140001a05:	int3   
   140001a06:	int3   
   140001a07:	int3   
   140001a08:	int3   
   140001a09:	int3   
   140001a0a:	int3   
   140001a0b:	int3   
   140001a0c:	int3   
   140001a0d:	int3   
   140001a0e:	int3   
   140001a0f:	int3   
   140001a10:	rex push rbx
   140001a12:	sub    rsp,0x20
   140001a16:	cmp    QWORD PTR [rdx+0x38],0x10
   140001a1b:	mov    rbx,rdx
   140001a1e:	jb     0x140001a29
   140001a20:	mov    rcx,QWORD PTR [rdx+0x20]
   140001a24:	call   0x140005518
   140001a29:	mov    QWORD PTR [rbx+0x38],0xf
   140001a31:	mov    QWORD PTR [rbx+0x30],0x0
   140001a39:	mov    BYTE PTR [rbx+0x20],0x0
   140001a3d:	cmp    QWORD PTR [rbx+0x18],0x10
   140001a42:	jb     0x140001a4c
   140001a44:	mov    rcx,QWORD PTR [rbx]
   140001a47:	call   0x140005518
   140001a4c:	mov    QWORD PTR [rbx+0x18],0xf
   140001a54:	mov    QWORD PTR [rbx+0x10],0x0
   140001a5c:	mov    BYTE PTR [rbx],0x0
   140001a5f:	add    rsp,0x20
   140001a63:	pop    rbx
   140001a64:	ret    
   140001a65:	int3   
   140001a66:	int3   
   140001a67:	int3   
   140001a68:	int3   
   140001a69:	int3   
   140001a6a:	int3   
   140001a6b:	int3   
   140001a6c:	int3   
   140001a6d:	int3   
   140001a6e:	int3   
   140001a6f:	int3   
   140001a70:	rex push rbx
   140001a72:	sub    rsp,0x20
   140001a76:	cmp    QWORD PTR [rdx+0x38],0x10
   140001a7b:	mov    rbx,rdx
   140001a7e:	jb     0x140001a89
   140001a80:	mov    rcx,QWORD PTR [rdx+0x20]
   140001a84:	call   0x140005518
   140001a89:	mov    QWORD PTR [rbx+0x38],0xf
   140001a91:	mov    QWORD PTR [rbx+0x30],0x0
   140001a99:	mov    BYTE PTR [rbx+0x20],0x0
   140001a9d:	cmp    QWORD PTR [rbx+0x18],0x10
   140001aa2:	jb     0x140001aac
   140001aa4:	mov    rcx,QWORD PTR [rbx]
   140001aa7:	call   0x140005518
   140001aac:	mov    QWORD PTR [rbx+0x18],0xf
   140001ab4:	mov    QWORD PTR [rbx+0x10],0x0
   140001abc:	mov    BYTE PTR [rbx],0x0
   140001abf:	add    rsp,0x20
   140001ac3:	pop    rbx
   140001ac4:	ret    
   140001ac5:	int3   
   140001ac6:	int3   
   140001ac7:	int3   
   140001ac8:	int3   
   140001ac9:	int3   
   140001aca:	int3   
   140001acb:	int3   
   140001acc:	int3   
   140001acd:	int3   
   140001ace:	int3   
   140001acf:	int3   
   140001ad0:	ret    0x0
   140001ad3:	int3   
   140001ad4:	int3   
   140001ad5:	int3   
   140001ad6:	int3   
   140001ad7:	int3   
   140001ad8:	int3   
   140001ad9:	int3   
   140001ada:	int3   
   140001adb:	int3   
   140001adc:	int3   
   140001add:	int3   
   140001ade:	int3   
   140001adf:	int3   
   140001ae0:	ret    0x0
   140001ae3:	int3   
   140001ae4:	int3   
   140001ae5:	int3   
   140001ae6:	int3   
   140001ae7:	int3   
   140001ae8:	int3   
   140001ae9:	int3   
   140001aea:	int3   
   140001aeb:	int3   
   140001aec:	int3   
   140001aed:	int3   
   140001aee:	int3   
   140001aef:	int3   
   140001af0:	ret    0x0
   140001af3:	int3   
   140001af4:	int3   
   140001af5:	int3   
   140001af6:	int3   
   140001af7:	int3   
   140001af8:	int3   
   140001af9:	int3   
   140001afa:	int3   
   140001afb:	int3   
   140001afc:	int3   
   140001afd:	int3   
   140001afe:	int3   
   140001aff:	int3   
   140001b00:	ret    0x0
   140001b03:	int3   
   140001b04:	int3   
   140001b05:	int3   
   140001b06:	int3   
   140001b07:	int3   
   140001b08:	int3   
   140001b09:	int3   
   140001b0a:	int3   
   140001b0b:	int3   
   140001b0c:	int3   
   140001b0d:	int3   
   140001b0e:	int3   
   140001b0f:	int3   
   140001b10:	ret    0x0
   140001b13:	int3   
   140001b14:	int3   
   140001b15:	int3   
   140001b16:	int3   
   140001b17:	int3   
   140001b18:	int3   
   140001b19:	int3   
   140001b1a:	int3   
   140001b1b:	int3   
   140001b1c:	int3   
   140001b1d:	int3   
   140001b1e:	int3   
   140001b1f:	int3   
   140001b20:	mov    QWORD PTR [rsp+0x8],rbx
   140001b25:	mov    QWORD PTR [rsp+0x10],rsi
   140001b2a:	push   rdi
   140001b2b:	sub    rsp,0x20
   140001b2f:	mov    rax,QWORD PTR [rcx]
   140001b32:	mov    r9,r8
   140001b35:	mov    rsi,rdx
   140001b38:	mov    rdi,QWORD PTR [rax]
   140001b3b:	mov    rbx,rcx
   140001b3e:	mov    r8,QWORD PTR [rdi+0x8]
   140001b42:	mov    rdx,rdi
   140001b45:	call   0x140001190
   140001b4a:	movabs r8,0x333333333333332
   140001b54:	mov    rcx,rax
   140001b57:	mov    rax,QWORD PTR [rbx+0x8]
   140001b5b:	sub    r8,rax
   140001b5e:	cmp    r8,0x1
   140001b62:	jae    0x140001b72
   140001b64:	lea    rcx,[rip+0x5c85]        # 0x1400077f0
   140001b6b:	call   QWORD PTR [rip+0x54ef]        # 0x140007060
   140001b71:	int3   
   140001b72:	inc    rax
   140001b75:	mov    rdx,rsi
   140001b78:	mov    QWORD PTR [rbx+0x8],rax
   140001b7c:	mov    QWORD PTR [rdi+0x8],rcx
   140001b80:	mov    rax,QWORD PTR [rcx+0x8]
   140001b84:	mov    QWORD PTR [rax],rcx
   140001b87:	mov    r9,QWORD PTR [rbx]
   140001b8a:	mov    rcx,rbx
   140001b8d:	mov    r9,QWORD PTR [r9]
   140001b90:	lea    r8,[r9+0x10]
   140001b94:	call   0x1400012f0
   140001b99:	mov    rbx,QWORD PTR [rsp+0x30]
   140001b9e:	mov    rax,rsi
   140001ba1:	mov    rsi,QWORD PTR [rsp+0x38]
   140001ba6:	add    rsp,0x20
   140001baa:	pop    rdi
   140001bab:	ret    
   140001bac:	int3   
   140001bad:	int3   
   140001bae:	int3   
   140001baf:	int3   
   140001bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140001bb5:	push   rdi
   140001bb6:	sub    rsp,0x20
   140001bba:	mov    rax,QWORD PTR [rcx]
   140001bbd:	mov    r9,rdx
   140001bc0:	mov    rbx,rcx
   140001bc3:	mov    rdi,QWORD PTR [rax]
   140001bc6:	mov    rdx,rdi
   140001bc9:	mov    r8,QWORD PTR [rdi+0x8]
   140001bcd:	call   0x140001190
   140001bd2:	movabs rdx,0x333333333333332
   140001bdc:	mov    r8,rax
   140001bdf:	mov    rax,QWORD PTR [rbx+0x8]
   140001be3:	sub    rdx,rax
   140001be6:	cmp    rdx,0x1
   140001bea:	jae    0x140001bfa
   140001bec:	lea    rcx,[rip+0x5bfd]        # 0x1400077f0
   140001bf3:	call   QWORD PTR [rip+0x5467]        # 0x140007060
   140001bf9:	int3   
   140001bfa:	inc    rax
   140001bfd:	mov    QWORD PTR [rbx+0x8],rax
   140001c01:	mov    rbx,QWORD PTR [rsp+0x30]
   140001c06:	mov    QWORD PTR [rdi+0x8],r8
   140001c0a:	mov    rax,QWORD PTR [r8+0x8]
   140001c0e:	mov    QWORD PTR [rax],r8
   140001c11:	add    rsp,0x20
   140001c15:	pop    rdi
   140001c16:	ret    
   140001c17:	int3   
   140001c18:	int3   
   140001c19:	int3   
   140001c1a:	int3   
   140001c1b:	int3   
   140001c1c:	int3   
   140001c1d:	int3   
   140001c1e:	int3   
   140001c1f:	int3   
   140001c20:	xor    r9d,r9d
   140001c23:	mov    r10,rdx
   140001c26:	sub    r10,rcx
   140001c29:	add    r10,0x7
   140001c2d:	shr    r10,0x3
   140001c31:	cmp    rcx,rdx
   140001c34:	cmova  r10,r9
   140001c38:	test   r10,r10
   140001c3b:	je     0x140001c53
   140001c3d:	nop    DWORD PTR [rax]
   140001c40:	mov    rax,QWORD PTR [r8]
   140001c43:	inc    r9
   140001c46:	lea    rcx,[rcx+0x8]
   140001c4a:	mov    QWORD PTR [rcx-0x8],rax
   140001c4e:	cmp    r9,r10
   140001c51:	jne    0x140001c40
   140001c53:	ret    
   140001c54:	int3   
   140001c55:	int3   
   140001c56:	int3   
   140001c57:	int3   
   140001c58:	int3   
   140001c59:	int3   
   140001c5a:	int3   
   140001c5b:	int3   
   140001c5c:	int3   
   140001c5d:	int3   
   140001c5e:	int3   
   140001c5f:	int3   
   140001c60:	mov    rax,rcx
   140001c63:	ret    
   140001c64:	int3   
   140001c65:	int3   
   140001c66:	int3   
   140001c67:	int3   
   140001c68:	int3   
   140001c69:	int3   
   140001c6a:	int3   
   140001c6b:	int3   
   140001c6c:	int3   
   140001c6d:	int3   
   140001c6e:	int3   
   140001c6f:	int3   
   140001c70:	mov    rax,rcx
   140001c73:	ret    
   140001c74:	int3   
   140001c75:	int3   
   140001c76:	int3   
   140001c77:	int3   
   140001c78:	int3   
   140001c79:	int3   
   140001c7a:	int3   
   140001c7b:	int3   
   140001c7c:	int3   
   140001c7d:	int3   
   140001c7e:	int3   
   140001c7f:	int3   
   140001c80:	mov    rax,rcx
   140001c83:	ret    
   140001c84:	int3   
   140001c85:	int3   
   140001c86:	int3   
   140001c87:	int3   
   140001c88:	int3   
   140001c89:	int3   
   140001c8a:	int3   
   140001c8b:	int3   
   140001c8c:	int3   
   140001c8d:	int3   
   140001c8e:	int3   
   140001c8f:	int3   
   140001c90:	mov    rax,rcx
   140001c93:	ret    
   140001c94:	int3   
   140001c95:	int3   
   140001c96:	int3   
   140001c97:	int3   
   140001c98:	int3   
   140001c99:	int3   
   140001c9a:	int3   
   140001c9b:	int3   
   140001c9c:	int3   
   140001c9d:	int3   
   140001c9e:	int3   
   140001c9f:	int3   
   140001ca0:	mov    rax,rcx
   140001ca3:	ret    
   140001ca4:	int3   
   140001ca5:	int3   
   140001ca6:	int3   
   140001ca7:	int3   
   140001ca8:	int3   
   140001ca9:	int3   
   140001caa:	int3   
   140001cab:	int3   
   140001cac:	int3   
   140001cad:	int3   
   140001cae:	int3   
   140001caf:	int3   
   140001cb0:	mov    rax,rcx
   140001cb3:	ret    
   140001cb4:	int3   
   140001cb5:	int3   
   140001cb6:	int3   
   140001cb7:	int3   
   140001cb8:	int3   
   140001cb9:	int3   
   140001cba:	int3   
   140001cbb:	int3   
   140001cbc:	int3   
   140001cbd:	int3   
   140001cbe:	int3   
   140001cbf:	int3   
   140001cc0:	mov    rax,rcx
   140001cc3:	ret    
   140001cc4:	int3   
   140001cc5:	int3   
   140001cc6:	int3   
   140001cc7:	int3   
   140001cc8:	int3   
   140001cc9:	int3   
   140001cca:	int3   
   140001ccb:	int3   
   140001ccc:	int3   
   140001ccd:	int3   
   140001cce:	int3   
   140001ccf:	int3   
   140001cd0:	mov    rax,rcx
   140001cd3:	ret    
   140001cd4:	int3   
   140001cd5:	int3   
   140001cd6:	int3   
   140001cd7:	int3   
   140001cd8:	int3   
   140001cd9:	int3   
   140001cda:	int3   
   140001cdb:	int3   
   140001cdc:	int3   
   140001cdd:	int3   
   140001cde:	int3   
   140001cdf:	int3   
   140001ce0:	mov    rax,rcx
   140001ce3:	ret    
   140001ce4:	int3   
   140001ce5:	int3   
   140001ce6:	int3   
   140001ce7:	int3   
   140001ce8:	int3   
   140001ce9:	int3   
   140001cea:	int3   
   140001ceb:	int3   
   140001cec:	int3   
   140001ced:	int3   
   140001cee:	int3   
   140001cef:	int3   
   140001cf0:	cmp    rdx,r8
   140001cf3:	je     0x140001d96
   140001cf9:	mov    QWORD PTR [rsp+0x18],r8
   140001cfe:	mov    QWORD PTR [rsp+0x10],rdx
   140001d03:	push   rbx
   140001d04:	sub    rsp,0x30
   140001d08:	mov    QWORD PTR [rsp+0x40],rsi
   140001d0d:	mov    rbx,rcx
   140001d10:	mov    QWORD PTR [rsp+0x58],rdi
   140001d15:	movabs rsi,0x333333333333332
   140001d1f:	nop
   140001d20:	mov    rax,QWORD PTR [rbx]
   140001d23:	lea    r9,[rdx+0x10]
   140001d27:	mov    rcx,rbx
   140001d2a:	mov    rdi,QWORD PTR [rax]
   140001d2d:	mov    rdx,rdi
   140001d30:	mov    r8,QWORD PTR [rdi+0x8]
   140001d34:	call   0x140001190
   140001d39:	mov    rdx,QWORD PTR [rbx+0x8]
   140001d3d:	mov    rcx,rsi
   140001d40:	sub    rcx,rdx
   140001d43:	cmp    rcx,0x1
   140001d47:	jb     0x140001d97
   140001d49:	lea    rcx,[rdx+0x1]
   140001d4d:	lea    rdx,[rsp+0x20]
   140001d52:	mov    QWORD PTR [rbx+0x8],rcx
   140001d56:	mov    QWORD PTR [rdi+0x8],rax
   140001d5a:	mov    rcx,QWORD PTR [rax+0x8]
   140001d5e:	mov    QWORD PTR [rcx],rax
   140001d61:	mov    r9,QWORD PTR [rbx]
   140001d64:	mov    rcx,rbx
   140001d67:	mov    r9,QWORD PTR [r9]
   140001d6a:	lea    r8,[r9+0x10]
   140001d6e:	call   0x1400012f0
   140001d73:	mov    rdx,QWORD PTR [rsp+0x48]
   140001d78:	mov    rdx,QWORD PTR [rdx]
   140001d7b:	mov    QWORD PTR [rsp+0x48],rdx
   140001d80:	cmp    rdx,QWORD PTR [rsp+0x50]
   140001d85:	jne    0x140001d20
   140001d87:	mov    rsi,QWORD PTR [rsp+0x40]
   140001d8c:	mov    rdi,QWORD PTR [rsp+0x58]
   140001d91:	add    rsp,0x30
   140001d95:	pop    rbx
   140001d96:	ret    
   140001d97:	lea    rcx,[rip+0x5a52]        # 0x1400077f0
   140001d9e:	call   QWORD PTR [rip+0x52bc]        # 0x140007060
   140001da4:	int3   
   140001da5:	int3   
   140001da6:	int3   
   140001da7:	int3   
   140001da8:	int3   
   140001da9:	int3   
   140001daa:	int3   
   140001dab:	int3   
   140001dac:	int3   
   140001dad:	int3   
   140001dae:	int3   
   140001daf:	int3   
   140001db0:	mov    QWORD PTR [rsp+0x8],rcx
   140001db5:	push   rdi
   140001db6:	sub    rsp,0x30
   140001dba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001dc3:	mov    QWORD PTR [rsp+0x48],rbx
   140001dc8:	mov    QWORD PTR [rsp+0x50],rsi
   140001dcd:	mov    rbx,rdx
   140001dd0:	mov    rdi,rcx
   140001dd3:	xor    esi,esi
   140001dd5:	mov    QWORD PTR [rcx],rsi
   140001dd8:	mov    QWORD PTR [rcx+0x8],rsi
   140001ddc:	xor    r8d,r8d
   140001ddf:	xor    edx,edx
   140001de1:	call   0x140002a10
   140001de6:	mov    QWORD PTR [rdi],rax
   140001de9:	mov    QWORD PTR [rdi+0x10],rsi
   140001ded:	mov    QWORD PTR [rdi+0x18],rsi
   140001df1:	mov    QWORD PTR [rdi+0x20],rsi
   140001df5:	mov    DWORD PTR [rdi+0x38],0x3f800000
   140001dfc:	mov    rdx,rbx
   140001dff:	mov    rcx,rdi
   140001e02:	call   0x140002b60
   140001e07:	nop
   140001e08:	mov    rax,rdi
   140001e0b:	mov    rbx,QWORD PTR [rsp+0x48]
   140001e10:	mov    rsi,QWORD PTR [rsp+0x50]
   140001e15:	add    rsp,0x30
   140001e19:	pop    rdi
   140001e1a:	ret    
   140001e1b:	int3   
   140001e1c:	int3   
   140001e1d:	int3   
   140001e1e:	int3   
   140001e1f:	int3   
   140001e20:	mov    rax,rcx
   140001e23:	ret    
   140001e24:	int3   
   140001e25:	int3   
   140001e26:	int3   
   140001e27:	int3   
   140001e28:	int3   
   140001e29:	int3   
   140001e2a:	int3   
   140001e2b:	int3   
   140001e2c:	int3   
   140001e2d:	int3   
   140001e2e:	int3   
   140001e2f:	int3   
   140001e30:	mov    rax,rcx
   140001e33:	ret    
   140001e34:	int3   
   140001e35:	int3   
   140001e36:	int3   
   140001e37:	int3   
   140001e38:	int3   
   140001e39:	int3   
   140001e3a:	int3   
   140001e3b:	int3   
   140001e3c:	int3   
   140001e3d:	int3   
   140001e3e:	int3   
   140001e3f:	int3   
   140001e40:	rex push rbx
   140001e42:	sub    rsp,0x20
   140001e46:	xor    eax,eax
   140001e48:	xor    r8d,r8d
   140001e4b:	xor    edx,edx
   140001e4d:	mov    QWORD PTR [rcx],rax
   140001e50:	mov    QWORD PTR [rcx+0x8],rax
   140001e54:	mov    rbx,rcx
   140001e57:	call   0x140002a10
   140001e5c:	mov    QWORD PTR [rbx],rax
   140001e5f:	mov    rax,rbx
   140001e62:	add    rsp,0x20
   140001e66:	pop    rbx
   140001e67:	ret    
   140001e68:	int3   
   140001e69:	int3   
   140001e6a:	int3   
   140001e6b:	int3   
   140001e6c:	int3   
   140001e6d:	int3   
   140001e6e:	int3   
   140001e6f:	int3   
   140001e70:	rex push rbx
   140001e72:	sub    rsp,0x20
   140001e76:	xor    eax,eax
   140001e78:	xor    r8d,r8d
   140001e7b:	xor    edx,edx
   140001e7d:	mov    QWORD PTR [rcx],rax
   140001e80:	mov    QWORD PTR [rcx+0x8],rax
   140001e84:	mov    rbx,rcx
   140001e87:	call   0x140002a10
   140001e8c:	mov    QWORD PTR [rbx],rax
   140001e8f:	mov    rax,rbx
   140001e92:	add    rsp,0x20
   140001e96:	pop    rbx
   140001e97:	ret    
   140001e98:	int3   
   140001e99:	int3   
   140001e9a:	int3   
   140001e9b:	int3   
   140001e9c:	int3   
   140001e9d:	int3   
   140001e9e:	int3   
   140001e9f:	int3   
   140001ea0:	mov    QWORD PTR [rcx],rdx
   140001ea3:	mov    rax,rcx
   140001ea6:	ret    
   140001ea7:	int3   
   140001ea8:	int3   
   140001ea9:	int3   
   140001eaa:	int3   
   140001eab:	int3   
   140001eac:	int3   
   140001ead:	int3   
   140001eae:	int3   
   140001eaf:	int3   
   140001eb0:	mov    QWORD PTR [rcx],rdx
   140001eb3:	mov    rax,rcx
   140001eb6:	ret    
   140001eb7:	int3   
   140001eb8:	int3   
   140001eb9:	int3   
   140001eba:	int3   
   140001ebb:	int3   
   140001ebc:	int3   
   140001ebd:	int3   
   140001ebe:	int3   
   140001ebf:	int3   
   140001ec0:	mov    QWORD PTR [rcx],rdx
   140001ec3:	mov    rax,rcx
   140001ec6:	ret    
   140001ec7:	int3   
   140001ec8:	int3   
   140001ec9:	int3   
   140001eca:	int3   
   140001ecb:	int3   
   140001ecc:	int3   
   140001ecd:	int3   
   140001ece:	int3   
   140001ecf:	int3   
   140001ed0:	mov    QWORD PTR [rcx],0x0
   140001ed7:	mov    rax,rcx
   140001eda:	ret    
   140001edb:	int3   
   140001edc:	int3   
   140001edd:	int3   
   140001ede:	int3   
   140001edf:	int3   
   140001ee0:	mov    QWORD PTR [rcx],rdx
   140001ee3:	mov    rax,rcx
   140001ee6:	ret    
   140001ee7:	int3   
   140001ee8:	int3   
   140001ee9:	int3   
   140001eea:	int3   
   140001eeb:	int3   
   140001eec:	int3   
   140001eed:	int3   
   140001eee:	int3   
   140001eef:	int3   
   140001ef0:	mov    QWORD PTR [rcx],0x0
   140001ef7:	mov    rax,rcx
   140001efa:	ret    
   140001efb:	int3   
   140001efc:	int3   
   140001efd:	int3   
   140001efe:	int3   
   140001eff:	int3   
   140001f00:	xor    eax,eax
   140001f02:	mov    QWORD PTR [rcx],rax
   140001f05:	mov    QWORD PTR [rcx+0x8],rax
   140001f09:	mov    rax,rcx
   140001f0c:	ret    
   140001f0d:	int3   
   140001f0e:	int3   
   140001f0f:	int3   
   140001f10:	xor    eax,eax
   140001f12:	mov    QWORD PTR [rcx+0x10],rax
   140001f16:	mov    QWORD PTR [rcx+0x18],rax
   140001f1a:	mov    rax,rcx
   140001f1d:	ret    
   140001f1e:	int3   
   140001f1f:	int3   
   140001f20:	xor    eax,eax
   140001f22:	mov    QWORD PTR [rcx+0x10],rax
   140001f26:	mov    QWORD PTR [rcx+0x18],rax
   140001f2a:	mov    rax,rcx
   140001f2d:	ret    
   140001f2e:	int3   
   140001f2f:	int3   
   140001f30:	xor    eax,eax
   140001f32:	mov    QWORD PTR [rcx+0x10],rax
   140001f36:	mov    QWORD PTR [rcx+0x18],rax
   140001f3a:	mov    rax,rcx
   140001f3d:	ret    
   140001f3e:	int3   
   140001f3f:	int3   
   140001f40:	xor    eax,eax
   140001f42:	mov    QWORD PTR [rcx+0x10],rax
   140001f46:	mov    QWORD PTR [rcx+0x18],rax
   140001f4a:	mov    rax,rcx
   140001f4d:	ret    
   140001f4e:	int3   
   140001f4f:	int3   
   140001f50:	mov    rax,rcx
   140001f53:	ret    
   140001f54:	int3   
   140001f55:	int3   
   140001f56:	int3   
   140001f57:	int3   
   140001f58:	int3   
   140001f59:	int3   
   140001f5a:	int3   
   140001f5b:	int3   
   140001f5c:	int3   
   140001f5d:	int3   
   140001f5e:	int3   
   140001f5f:	int3   
   140001f60:	mov    rax,rcx
   140001f63:	ret    
   140001f64:	int3   
   140001f65:	int3   
   140001f66:	int3   
   140001f67:	int3   
   140001f68:	int3   
   140001f69:	int3   
   140001f6a:	int3   
   140001f6b:	int3   
   140001f6c:	int3   
   140001f6d:	int3   
   140001f6e:	int3   
   140001f6f:	int3   
   140001f70:	xor    eax,eax
   140001f72:	mov    QWORD PTR [rcx],rax
   140001f75:	mov    QWORD PTR [rcx+0x8],rax
   140001f79:	mov    QWORD PTR [rcx+0x10],rax
   140001f7d:	mov    rax,rcx
   140001f80:	ret    
   140001f81:	int3   
   140001f82:	int3   
   140001f83:	int3   
   140001f84:	int3   
   140001f85:	int3   
   140001f86:	int3   
   140001f87:	int3   
   140001f88:	int3   
   140001f89:	int3   
   140001f8a:	int3   
   140001f8b:	int3   
   140001f8c:	int3   
   140001f8d:	int3   
   140001f8e:	int3   
   140001f8f:	int3   
   140001f90:	mov    QWORD PTR [rcx],rdx
   140001f93:	mov    rax,rcx
   140001f96:	ret    
   140001f97:	int3   
   140001f98:	int3   
   140001f99:	int3   
   140001f9a:	int3   
   140001f9b:	int3   
   140001f9c:	int3   
   140001f9d:	int3   
   140001f9e:	int3   
   140001f9f:	int3   
   140001fa0:	mov    QWORD PTR [rcx],rdx
   140001fa3:	mov    rax,rcx
   140001fa6:	ret    
   140001fa7:	int3   
   140001fa8:	int3   
   140001fa9:	int3   
   140001faa:	int3   
   140001fab:	int3   
   140001fac:	int3   
   140001fad:	int3   
   140001fae:	int3   
   140001faf:	int3   
   140001fb0:	xor    eax,eax
   140001fb2:	mov    QWORD PTR [rcx],rax
   140001fb5:	mov    QWORD PTR [rcx+0x8],rax
   140001fb9:	mov    QWORD PTR [rcx+0x10],rax
   140001fbd:	mov    rax,rcx
   140001fc0:	ret    
   140001fc1:	int3   
   140001fc2:	int3   
   140001fc3:	int3   
   140001fc4:	int3   
   140001fc5:	int3   
   140001fc6:	int3   
   140001fc7:	int3   
   140001fc8:	int3   
   140001fc9:	int3   
   140001fca:	int3   
   140001fcb:	int3   
   140001fcc:	int3   
   140001fcd:	int3   
   140001fce:	int3   
   140001fcf:	int3   
   140001fd0:	mov    rax,rcx
   140001fd3:	ret    
   140001fd4:	int3   
   140001fd5:	int3   
   140001fd6:	int3   
   140001fd7:	int3   
   140001fd8:	int3   
   140001fd9:	int3   
   140001fda:	int3   
   140001fdb:	int3   
   140001fdc:	int3   
   140001fdd:	int3   
   140001fde:	int3   
   140001fdf:	int3   
   140001fe0:	mov    rax,rcx
   140001fe3:	ret    
   140001fe4:	int3   
   140001fe5:	int3   
   140001fe6:	int3   
   140001fe7:	int3   
   140001fe8:	int3   
   140001fe9:	int3   
   140001fea:	int3   
   140001feb:	int3   
   140001fec:	int3   
   140001fed:	int3   
   140001fee:	int3   
   140001fef:	int3   
   140001ff0:	mov    rax,rcx
   140001ff3:	ret    
   140001ff4:	int3   
   140001ff5:	int3   
   140001ff6:	int3   
   140001ff7:	int3   
   140001ff8:	int3   
   140001ff9:	int3   
   140001ffa:	int3   
   140001ffb:	int3   
   140001ffc:	int3   
   140001ffd:	int3   
   140001ffe:	int3   
   140001fff:	int3   
   140002000:	mov    rax,rcx
   140002003:	ret    
   140002004:	int3   
   140002005:	int3   
   140002006:	int3   
   140002007:	int3   
   140002008:	int3   
   140002009:	int3   
   14000200a:	int3   
   14000200b:	int3   
   14000200c:	int3   
   14000200d:	int3   
   14000200e:	int3   
   14000200f:	int3   
   140002010:	mov    rax,rcx
   140002013:	ret    
   140002014:	int3   
   140002015:	int3   
   140002016:	int3   
   140002017:	int3   
   140002018:	int3   
   140002019:	int3   
   14000201a:	int3   
   14000201b:	int3   
   14000201c:	int3   
   14000201d:	int3   
   14000201e:	int3   
   14000201f:	int3   
   140002020:	mov    rax,rcx
   140002023:	ret    
   140002024:	int3   
   140002025:	int3   
   140002026:	int3   
   140002027:	int3   
   140002028:	int3   
   140002029:	int3   
   14000202a:	int3   
   14000202b:	int3   
   14000202c:	int3   
   14000202d:	int3   
   14000202e:	int3   
   14000202f:	int3   
   140002030:	mov    rax,rcx
   140002033:	ret    
   140002034:	int3   
   140002035:	int3   
   140002036:	int3   
   140002037:	int3   
   140002038:	int3   
   140002039:	int3   
   14000203a:	int3   
   14000203b:	int3   
   14000203c:	int3   
   14000203d:	int3   
   14000203e:	int3   
   14000203f:	int3   
   140002040:	mov    rax,rcx
   140002043:	ret    
   140002044:	int3   
   140002045:	int3   
   140002046:	int3   
   140002047:	int3   
   140002048:	int3   
   140002049:	int3   
   14000204a:	int3   
   14000204b:	int3   
   14000204c:	int3   
   14000204d:	int3   
   14000204e:	int3   
   14000204f:	int3   
   140002050:	mov    rax,rcx
   140002053:	ret    
   140002054:	int3   
   140002055:	int3   
   140002056:	int3   
   140002057:	int3   
   140002058:	int3   
   140002059:	int3   
   14000205a:	int3   
   14000205b:	int3   
   14000205c:	int3   
   14000205d:	int3   
   14000205e:	int3   
   14000205f:	int3   
   140002060:	mov    rax,rcx
   140002063:	ret    
   140002064:	int3   
   140002065:	int3   
   140002066:	int3   
   140002067:	int3   
   140002068:	int3   
   140002069:	int3   
   14000206a:	int3   
   14000206b:	int3   
   14000206c:	int3   
   14000206d:	int3   
   14000206e:	int3   
   14000206f:	int3   
   140002070:	mov    rax,rcx
   140002073:	ret    
   140002074:	int3   
   140002075:	int3   
   140002076:	int3   
   140002077:	int3   
   140002078:	int3   
   140002079:	int3   
   14000207a:	int3   
   14000207b:	int3   
   14000207c:	int3   
   14000207d:	int3   
   14000207e:	int3   
   14000207f:	int3   
   140002080:	mov    rax,rcx
   140002083:	ret    
   140002084:	int3   
   140002085:	int3   
   140002086:	int3   
   140002087:	int3   
   140002088:	int3   
   140002089:	int3   
   14000208a:	int3   
   14000208b:	int3   
   14000208c:	int3   
   14000208d:	int3   
   14000208e:	int3   
   14000208f:	int3   
   140002090:	mov    rax,rcx
   140002093:	ret    
   140002094:	int3   
   140002095:	int3   
   140002096:	int3   
   140002097:	int3   
   140002098:	int3   
   140002099:	int3   
   14000209a:	int3   
   14000209b:	int3   
   14000209c:	int3   
   14000209d:	int3   
   14000209e:	int3   
   14000209f:	int3   
   1400020a0:	mov    rax,rcx
   1400020a3:	ret    
   1400020a4:	int3   
   1400020a5:	int3   
   1400020a6:	int3   
   1400020a7:	int3   
   1400020a8:	int3   
   1400020a9:	int3   
   1400020aa:	int3   
   1400020ab:	int3   
   1400020ac:	int3   
   1400020ad:	int3   
   1400020ae:	int3   
   1400020af:	int3   
   1400020b0:	rex push rbx
   1400020b2:	sub    rsp,0x20
   1400020b6:	mov    QWORD PTR [rcx+0x18],0xf
   1400020be:	mov    QWORD PTR [rcx+0x10],0x0
   1400020c6:	or     r9,0xffffffffffffffff
   1400020ca:	xor    r8d,r8d
   1400020cd:	mov    rbx,rcx
   1400020d0:	mov    BYTE PTR [rcx],0x0
   1400020d3:	call   0x140003d80
   1400020d8:	mov    rax,rbx
   1400020db:	add    rsp,0x20
   1400020df:	pop    rbx
   1400020e0:	ret    
   1400020e1:	int3   
   1400020e2:	int3   
   1400020e3:	int3   
   1400020e4:	int3   
   1400020e5:	int3   
   1400020e6:	int3   
   1400020e7:	int3   
   1400020e8:	int3   
   1400020e9:	int3   
   1400020ea:	int3   
   1400020eb:	int3   
   1400020ec:	int3   
   1400020ed:	int3   
   1400020ee:	int3   
   1400020ef:	int3   
   1400020f0:	rex push rbx
   1400020f2:	sub    rsp,0x20
   1400020f6:	xor    r8d,r8d
   1400020f9:	mov    QWORD PTR [rcx+0x18],0xf
   140002101:	mov    rbx,rcx
   140002104:	mov    QWORD PTR [rcx+0x10],r8
   140002108:	mov    BYTE PTR [rcx],r8b
   14000210b:	cmp    BYTE PTR [rdx],r8b
   14000210e:	je     0x14000211e
   140002110:	or     r8,0xffffffffffffffff
   140002114:	inc    r8
   140002117:	cmp    BYTE PTR [rdx+r8*1],0x0
   14000211c:	jne    0x140002114
   14000211e:	call   0x140003ed0
   140002123:	mov    rax,rbx
   140002126:	add    rsp,0x20
   14000212a:	pop    rbx
   14000212b:	ret    
   14000212c:	int3   
   14000212d:	int3   
   14000212e:	int3   
   14000212f:	int3   
   140002130:	rex push rbx
   140002132:	sub    rsp,0x20
   140002136:	xor    eax,eax
   140002138:	mov    QWORD PTR [rcx+0x18],0x7
   140002140:	mov    rbx,rcx
   140002143:	mov    QWORD PTR [rcx+0x10],rax
   140002147:	mov    WORD PTR [rcx],ax
   14000214a:	call   0x140004000
   14000214f:	mov    rax,rbx
   140002152:	add    rsp,0x20
   140002156:	pop    rbx
   140002157:	ret    
   140002158:	int3   
   140002159:	int3   
   14000215a:	int3   
   14000215b:	int3   
   14000215c:	int3   
   14000215d:	int3   
   14000215e:	int3   
   14000215f:	int3   
   140002160:	rex push rbx
   140002162:	sub    rsp,0x20
   140002166:	xor    r8d,r8d
   140002169:	mov    QWORD PTR [rcx+0x18],0x7
   140002171:	mov    rbx,rcx
   140002174:	mov    QWORD PTR [rcx+0x10],r8
   140002178:	mov    WORD PTR [rcx],r8w
   14000217c:	cmp    WORD PTR [rdx],r8w
   140002180:	je     0x14000219b
   140002182:	or     r8,0xffffffffffffffff
   140002186:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002190:	inc    r8
   140002193:	cmp    WORD PTR [rdx+r8*2],0x0
   140002199:	jne    0x140002190
   14000219b:	call   0x140004170
   1400021a0:	mov    rax,rbx
   1400021a3:	add    rsp,0x20
   1400021a7:	pop    rbx
   1400021a8:	ret    
   1400021a9:	int3   
   1400021aa:	int3   
   1400021ab:	int3   
   1400021ac:	int3   
   1400021ad:	int3   
   1400021ae:	int3   
   1400021af:	int3   
   1400021b0:	rex push rbx
   1400021b2:	sub    rsp,0x20
   1400021b6:	xor    eax,eax
   1400021b8:	xor    r8d,r8d
   1400021bb:	xor    edx,edx
   1400021bd:	mov    QWORD PTR [rcx],rax
   1400021c0:	mov    QWORD PTR [rcx+0x8],rax
   1400021c4:	mov    rbx,rcx
   1400021c7:	call   0x140002a10
   1400021cc:	mov    QWORD PTR [rbx],rax
   1400021cf:	mov    rax,rbx
   1400021d2:	add    rsp,0x20
   1400021d6:	pop    rbx
   1400021d7:	ret    
   1400021d8:	int3   
   1400021d9:	int3   
   1400021da:	int3   
   1400021db:	int3   
   1400021dc:	int3   
   1400021dd:	int3   
   1400021de:	int3   
   1400021df:	int3   
   1400021e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400021e5:	push   rdi
   1400021e6:	sub    rsp,0x30
   1400021ea:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400021f3:	mov    QWORD PTR [rsp+0x48],rbx
   1400021f8:	mov    rbx,rdx
   1400021fb:	mov    rdi,rcx
   1400021fe:	mov    QWORD PTR [rcx+0x18],0xf
   140002206:	mov    QWORD PTR [rcx+0x10],0x0
   14000220e:	mov    BYTE PTR [rcx],0x0
   140002211:	or     r9,0xffffffffffffffff
   140002215:	xor    r8d,r8d
   140002218:	call   0x140003d80
   14000221d:	nop
   14000221e:	lea    rcx,[rdi+0x20]
   140002222:	mov    QWORD PTR [rcx+0x18],0xf
   14000222a:	mov    QWORD PTR [rcx+0x10],0x0
   140002232:	mov    BYTE PTR [rcx],0x0
   140002235:	lea    rdx,[rbx+0x20]
   140002239:	or     r9,0xffffffffffffffff
   14000223d:	xor    r8d,r8d
   140002240:	call   0x140003d80
   140002245:	nop
   140002246:	mov    rax,rdi
   140002249:	mov    rbx,QWORD PTR [rsp+0x48]
   14000224e:	add    rsp,0x30
   140002252:	pop    rdi
   140002253:	ret    
   140002254:	int3   
   140002255:	int3   
   140002256:	int3   
   140002257:	int3   
   140002258:	int3   
   140002259:	int3   
   14000225a:	int3   
   14000225b:	int3   
   14000225c:	int3   
   14000225d:	int3   
   14000225e:	int3   
   14000225f:	int3   
   140002260:	mov    QWORD PTR [rsp+0x8],rcx
   140002265:	push   rdi
   140002266:	sub    rsp,0x30
   14000226a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002273:	mov    QWORD PTR [rsp+0x48],rbx
   140002278:	mov    QWORD PTR [rsp+0x50],rsi
   14000227d:	mov    rbx,rdx
   140002280:	mov    rdi,rcx
   140002283:	xor    esi,esi
   140002285:	mov    QWORD PTR [rcx],rsi
   140002288:	mov    QWORD PTR [rcx+0x8],rsi
   14000228c:	xor    r8d,r8d
   14000228f:	xor    edx,edx
   140002291:	call   0x140002a10
   140002296:	mov    QWORD PTR [rdi],rax
   140002299:	mov    QWORD PTR [rdi+0x10],rsi
   14000229d:	mov    QWORD PTR [rdi+0x18],rsi
   1400022a1:	mov    QWORD PTR [rdi+0x20],rsi
   1400022a5:	mov    DWORD PTR [rdi+0x38],0x3f800000
   1400022ac:	mov    rdx,rbx
   1400022af:	mov    rcx,rdi
   1400022b2:	call   0x140002b60
   1400022b7:	nop
   1400022b8:	mov    rax,rdi
   1400022bb:	mov    rbx,QWORD PTR [rsp+0x48]
   1400022c0:	mov    rsi,QWORD PTR [rsp+0x50]
   1400022c5:	add    rsp,0x30
   1400022c9:	pop    rdi
   1400022ca:	ret    
   1400022cb:	int3   
   1400022cc:	int3   
   1400022cd:	int3   
   1400022ce:	int3   
   1400022cf:	int3   
   1400022d0:	xor    eax,eax
   1400022d2:	mov    QWORD PTR [rcx],rax
   1400022d5:	mov    QWORD PTR [rcx+0x8],rax
   1400022d9:	mov    QWORD PTR [rcx+0x10],rax
   1400022dd:	mov    rax,rcx
   1400022e0:	ret    
   1400022e1:	int3   
   1400022e2:	int3   
   1400022e3:	int3   
   1400022e4:	int3   
   1400022e5:	int3   
   1400022e6:	int3   
   1400022e7:	int3   
   1400022e8:	int3   
   1400022e9:	int3   
   1400022ea:	int3   
   1400022eb:	int3   
   1400022ec:	int3   
   1400022ed:	int3   
   1400022ee:	int3   
   1400022ef:	int3   
   1400022f0:	rex push rdi
   1400022f2:	sub    rsp,0x30
   1400022f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400022ff:	mov    QWORD PTR [rsp+0x48],rbx
   140002304:	mov    QWORD PTR [rsp+0x50],rsi
   140002309:	mov    rbx,rdx
   14000230c:	mov    rdi,rcx
   14000230f:	mov    QWORD PTR [rsp+0x40],rcx
   140002314:	xor    esi,esi
   140002316:	mov    QWORD PTR [rcx],rsi
   140002319:	mov    QWORD PTR [rcx+0x8],rsi
   14000231d:	xor    r8d,r8d
   140002320:	xor    edx,edx
   140002322:	call   0x140002a10
   140002327:	mov    QWORD PTR [rdi],rax
   14000232a:	mov    QWORD PTR [rdi+0x10],rsi
   14000232e:	mov    QWORD PTR [rdi+0x18],rsi
   140002332:	mov    QWORD PTR [rdi+0x20],rsi
   140002336:	mov    DWORD PTR [rdi+0x38],0x3f800000
   14000233d:	mov    rdx,rbx
   140002340:	mov    rcx,rdi
   140002343:	call   0x140002b60
   140002348:	nop
   140002349:	mov    rax,QWORD PTR [rbx+0x40]
   14000234d:	mov    QWORD PTR [rdi+0x40],rax
   140002351:	mov    rax,rdi
   140002354:	mov    rbx,QWORD PTR [rsp+0x48]
   140002359:	mov    rsi,QWORD PTR [rsp+0x50]
   14000235e:	add    rsp,0x30
   140002362:	pop    rdi
   140002363:	ret    
   140002364:	int3   
   140002365:	int3   
   140002366:	int3   
   140002367:	int3   
   140002368:	int3   
   140002369:	int3   
   14000236a:	int3   
   14000236b:	int3   
   14000236c:	int3   
   14000236d:	int3   
   14000236e:	int3   
   14000236f:	int3   
   140002370:	lea    rax,[rip+0x5219]        # 0x140007590
   140002377:	mov    QWORD PTR [rcx],rax
   14000237a:	mov    rax,rcx
   14000237d:	ret    
   14000237e:	int3   
   14000237f:	int3   
   140002380:	mov    rax,rcx
   140002383:	ret    
   140002384:	int3   
   140002385:	int3   
   140002386:	int3   
   140002387:	int3   
   140002388:	int3   
   140002389:	int3   
   14000238a:	int3   
   14000238b:	int3   
   14000238c:	int3   
   14000238d:	int3   
   14000238e:	int3   
   14000238f:	int3   
   140002390:	lea    rax,[rip+0x5249]        # 0x1400075e0
   140002397:	mov    QWORD PTR [rcx],rax
   14000239a:	mov    rax,rcx
   14000239d:	ret    
   14000239e:	int3   
   14000239f:	int3   
   1400023a0:	lea    rax,[rip+0x5299]        # 0x140007640
   1400023a7:	mov    QWORD PTR [rcx],rax
   1400023aa:	mov    rax,rcx
   1400023ad:	ret    
   1400023ae:	int3   
   1400023af:	int3   
   1400023b0:	lea    rax,[rip+0x51a1]        # 0x140007558
   1400023b7:	mov    QWORD PTR [rcx],rax
   1400023ba:	mov    rax,rcx
   1400023bd:	ret    
   1400023be:	int3   
   1400023bf:	int3   
   1400023c0:	mov    DWORD PTR [rcx],edx
   1400023c2:	mov    QWORD PTR [rcx+0x8],r8
   1400023c6:	mov    rax,rcx
   1400023c9:	ret    
   1400023ca:	int3   
   1400023cb:	int3   
   1400023cc:	int3   
   1400023cd:	int3   
   1400023ce:	int3   
   1400023cf:	int3   
   1400023d0:	rex push rbx
   1400023d2:	sub    rsp,0x20
   1400023d6:	mov    rbx,rcx
   1400023d9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400023dd:	test   rcx,rcx
   1400023e0:	je     0x1400023f5
   1400023e2:	call   0x140005518
   1400023e7:	xor    eax,eax
   1400023e9:	mov    QWORD PTR [rbx+0x10],rax
   1400023ed:	mov    QWORD PTR [rbx+0x18],rax
   1400023f1:	mov    QWORD PTR [rbx+0x20],rax
   1400023f5:	mov    rcx,rbx
   1400023f8:	call   0x140004410
   1400023fd:	mov    rcx,QWORD PTR [rbx]
   140002400:	add    rsp,0x20
   140002404:	pop    rbx
   140002405:	jmp    0x140005518
   14000240a:	int3   
   14000240b:	int3   
   14000240c:	int3   
   14000240d:	int3   
   14000240e:	int3   
   14000240f:	int3   
   140002410:	mov    rcx,QWORD PTR [rcx]
   140002413:	jmp    0x140005518
   140002418:	int3   
   140002419:	int3   
   14000241a:	int3   
   14000241b:	int3   
   14000241c:	int3   
   14000241d:	int3   
   14000241e:	int3   
   14000241f:	int3   
   140002420:	mov    rcx,QWORD PTR [rcx]
   140002423:	jmp    0x140005518
   140002428:	int3   
   140002429:	int3   
   14000242a:	int3   
   14000242b:	int3   
   14000242c:	int3   
   14000242d:	int3   
   14000242e:	int3   
   14000242f:	int3   
   140002430:	rex push rbx
   140002432:	sub    rsp,0x20
   140002436:	cmp    QWORD PTR [rcx+0x18],0x10
   14000243b:	mov    rbx,rcx
   14000243e:	jb     0x140002448
   140002440:	mov    rcx,QWORD PTR [rcx]
   140002443:	call   0x140005518
   140002448:	mov    QWORD PTR [rbx+0x18],0xf
   140002450:	mov    QWORD PTR [rbx+0x10],0x0
   140002458:	mov    BYTE PTR [rbx],0x0
   14000245b:	add    rsp,0x20
   14000245f:	pop    rbx
   140002460:	ret    
   140002461:	int3   
   140002462:	int3   
   140002463:	int3   
   140002464:	int3   
   140002465:	int3   
   140002466:	int3   
   140002467:	int3   
   140002468:	int3   
   140002469:	int3   
   14000246a:	int3   
   14000246b:	int3   
   14000246c:	int3   
   14000246d:	int3   
   14000246e:	int3   
   14000246f:	int3   
   140002470:	rex push rbx
   140002472:	sub    rsp,0x20
   140002476:	cmp    QWORD PTR [rcx+0x18],0x8
   14000247b:	mov    rbx,rcx
   14000247e:	jb     0x140002488
   140002480:	mov    rcx,QWORD PTR [rcx]
   140002483:	call   0x140005518
   140002488:	xor    eax,eax
   14000248a:	mov    QWORD PTR [rbx+0x18],0x7
   140002492:	mov    QWORD PTR [rbx+0x10],rax
   140002496:	mov    WORD PTR [rbx],ax
   140002499:	add    rsp,0x20
   14000249d:	pop    rbx
   14000249e:	ret    
   14000249f:	int3   
   1400024a0:	rex push rbx
   1400024a2:	sub    rsp,0x20
   1400024a6:	mov    rbx,rcx
   1400024a9:	call   0x140004410
   1400024ae:	mov    rcx,QWORD PTR [rbx]
   1400024b1:	add    rsp,0x20
   1400024b5:	pop    rbx
   1400024b6:	jmp    0x140005518
   1400024bb:	int3   
   1400024bc:	int3   
   1400024bd:	int3   
   1400024be:	int3   
   1400024bf:	int3   
   1400024c0:	rex push rbx
   1400024c2:	sub    rsp,0x20
   1400024c6:	cmp    QWORD PTR [rcx+0x38],0x10
   1400024cb:	mov    rbx,rcx
   1400024ce:	jb     0x1400024d9
   1400024d0:	mov    rcx,QWORD PTR [rcx+0x20]
   1400024d4:	call   0x140005518
   1400024d9:	mov    QWORD PTR [rbx+0x38],0xf
   1400024e1:	mov    QWORD PTR [rbx+0x30],0x0
   1400024e9:	mov    BYTE PTR [rbx+0x20],0x0
   1400024ed:	cmp    QWORD PTR [rbx+0x18],0x10
   1400024f2:	jb     0x1400024fc
   1400024f4:	mov    rcx,QWORD PTR [rbx]
   1400024f7:	call   0x140005518
   1400024fc:	mov    QWORD PTR [rbx+0x18],0xf
   140002504:	mov    QWORD PTR [rbx+0x10],0x0
   14000250c:	mov    BYTE PTR [rbx],0x0
   14000250f:	add    rsp,0x20
   140002513:	pop    rbx
   140002514:	ret    
   140002515:	int3   
   140002516:	int3   
   140002517:	int3   
   140002518:	int3   
   140002519:	int3   
   14000251a:	int3   
   14000251b:	int3   
   14000251c:	int3   
   14000251d:	int3   
   14000251e:	int3   
   14000251f:	int3   
   140002520:	rex push rbx
   140002522:	sub    rsp,0x20
   140002526:	mov    rbx,rcx
   140002529:	mov    rcx,QWORD PTR [rcx+0x10]
   14000252d:	test   rcx,rcx
   140002530:	je     0x140002545
   140002532:	call   0x140005518
   140002537:	xor    eax,eax
   140002539:	mov    QWORD PTR [rbx+0x10],rax
   14000253d:	mov    QWORD PTR [rbx+0x18],rax
   140002541:	mov    QWORD PTR [rbx+0x20],rax
   140002545:	mov    rcx,rbx
   140002548:	call   0x140004410
   14000254d:	mov    rcx,QWORD PTR [rbx]
   140002550:	add    rsp,0x20
   140002554:	pop    rbx
   140002555:	jmp    0x140005518
   14000255a:	int3   
   14000255b:	int3   
   14000255c:	int3   
   14000255d:	int3   
   14000255e:	int3   
   14000255f:	int3   
   140002560:	rex push rbx
   140002562:	sub    rsp,0x20
   140002566:	mov    rbx,rcx
   140002569:	mov    rcx,QWORD PTR [rcx]
   14000256c:	test   rcx,rcx
   14000256f:	je     0x140002583
   140002571:	call   0x140005518
   140002576:	xor    eax,eax
   140002578:	mov    QWORD PTR [rbx],rax
   14000257b:	mov    QWORD PTR [rbx+0x8],rax
   14000257f:	mov    QWORD PTR [rbx+0x10],rax
   140002583:	add    rsp,0x20
   140002587:	pop    rbx
   140002588:	ret    
   140002589:	int3   
   14000258a:	int3   
   14000258b:	int3   
   14000258c:	int3   
   14000258d:	int3   
   14000258e:	int3   
   14000258f:	int3   
   140002590:	lea    rax,[rip+0x4fc1]        # 0x140007558
   140002597:	mov    QWORD PTR [rcx],rax
   14000259a:	ret    
   14000259b:	int3   
   14000259c:	int3   
   14000259d:	int3   
   14000259e:	int3   
   14000259f:	int3   
   1400025a0:	lea    rax,[rip+0x4fb1]        # 0x140007558
   1400025a7:	mov    QWORD PTR [rcx],rax
   1400025aa:	ret    
   1400025ab:	int3   
   1400025ac:	int3   
   1400025ad:	int3   
   1400025ae:	int3   
   1400025af:	int3   
   1400025b0:	lea    rax,[rip+0x4fa1]        # 0x140007558
   1400025b7:	mov    QWORD PTR [rcx],rax
   1400025ba:	ret    
   1400025bb:	int3   
   1400025bc:	int3   
   1400025bd:	int3   
   1400025be:	int3   
   1400025bf:	int3   
   1400025c0:	lea    rax,[rip+0x4f91]        # 0x140007558
   1400025c7:	mov    QWORD PTR [rcx],rax
   1400025ca:	ret    
   1400025cb:	int3   
   1400025cc:	int3   
   1400025cd:	int3   
   1400025ce:	int3   
   1400025cf:	int3   
   1400025d0:	mov    rax,rdx
   1400025d3:	ret    
   1400025d4:	int3   
   1400025d5:	int3   
   1400025d6:	int3   
   1400025d7:	int3   
   1400025d8:	int3   
   1400025d9:	int3   
   1400025da:	int3   
   1400025db:	int3   
   1400025dc:	int3   
   1400025dd:	int3   
   1400025de:	int3   
   1400025df:	int3   
   1400025e0:	ret    0x0
   1400025e3:	int3   
   1400025e4:	int3   
   1400025e5:	int3   
   1400025e6:	int3   
   1400025e7:	int3   
   1400025e8:	int3   
   1400025e9:	int3   
   1400025ea:	int3   
   1400025eb:	int3   
   1400025ec:	int3   
   1400025ed:	int3   
   1400025ee:	int3   
   1400025ef:	int3   
   1400025f0:	rex push rbx
   1400025f2:	sub    rsp,0x20
   1400025f6:	mov    rbx,rcx
   1400025f9:	cmp    rcx,rdx
   1400025fc:	je     0x140002603
   1400025fe:	call   0x140002b60
   140002603:	mov    rax,rbx
   140002606:	add    rsp,0x20
   14000260a:	pop    rbx
   14000260b:	ret    
   14000260c:	int3   
   14000260d:	int3   
   14000260e:	int3   
   14000260f:	int3   
   140002610:	rex push rbx
   140002612:	sub    rsp,0x20
   140002616:	mov    rbx,rcx
   140002619:	cmp    rcx,rdx
   14000261c:	je     0x140002623
   14000261e:	call   0x140002b60
   140002623:	mov    rax,rbx
   140002626:	add    rsp,0x20
   14000262a:	pop    rbx
   14000262b:	ret    
   14000262c:	int3   
   14000262d:	int3   
   14000262e:	int3   
   14000262f:	int3   
   140002630:	mov    QWORD PTR [rsp+0x8],rbx
   140002635:	push   rdi
   140002636:	sub    rsp,0x20
   14000263a:	mov    rdi,rdx
   14000263d:	mov    rbx,rcx
   140002640:	cmp    rcx,rdx
   140002643:	je     0x14000264a
   140002645:	call   0x140002b60
   14000264a:	mov    rax,QWORD PTR [rdi+0x40]
   14000264e:	mov    QWORD PTR [rbx+0x40],rax
   140002652:	mov    rax,rbx
   140002655:	mov    rbx,QWORD PTR [rsp+0x30]
   14000265a:	add    rsp,0x20
   14000265e:	pop    rdi
   14000265f:	ret    
   140002660:	mov    rdx,QWORD PTR [rdx]
   140002663:	cmp    QWORD PTR [rcx],rdx
   140002666:	sete   al
   140002669:	ret    
   14000266a:	int3   
   14000266b:	int3   
   14000266c:	int3   
   14000266d:	int3   
   14000266e:	int3   
   14000266f:	int3   
   140002670:	mov    rdx,QWORD PTR [rdx]
   140002673:	cmp    QWORD PTR [rcx],rdx
   140002676:	sete   al
   140002679:	ret    
   14000267a:	int3   
   14000267b:	int3   
   14000267c:	int3   
   14000267d:	int3   
   14000267e:	int3   
   14000267f:	int3   
   140002680:	cmp    rcx,rdx
   140002683:	sete   al
   140002686:	ret    
   140002687:	int3   
   140002688:	int3   
   140002689:	int3   
   14000268a:	int3   
   14000268b:	int3   
   14000268c:	int3   
   14000268d:	int3   
   14000268e:	int3   
   14000268f:	int3   
   140002690:	mov    rax,QWORD PTR [rdx+0x8]
   140002694:	cmp    QWORD PTR [rcx+0x8],rax
   140002698:	jne    0x1400026a3
   14000269a:	mov    eax,DWORD PTR [rdx]
   14000269c:	cmp    DWORD PTR [rcx],eax
   14000269e:	jne    0x1400026a3
   1400026a0:	mov    al,0x1
   1400026a2:	ret    
   1400026a3:	xor    al,al
   1400026a5:	ret    
   1400026a6:	int3   
   1400026a7:	int3   
   1400026a8:	int3   
   1400026a9:	int3   
   1400026aa:	int3   
   1400026ab:	int3   
   1400026ac:	int3   
   1400026ad:	int3   
   1400026ae:	int3   
   1400026af:	int3   
   1400026b0:	mov    rdx,QWORD PTR [rdx]
   1400026b3:	cmp    QWORD PTR [rcx],rdx
   1400026b6:	setne  al
   1400026b9:	ret    
   1400026ba:	int3   
   1400026bb:	int3   
   1400026bc:	int3   
   1400026bd:	int3   
   1400026be:	int3   
   1400026bf:	int3   
   1400026c0:	mov    rdx,QWORD PTR [rdx]
   1400026c3:	cmp    QWORD PTR [rcx],rdx
   1400026c6:	setne  al
   1400026c9:	ret    
   1400026ca:	int3   
   1400026cb:	int3   
   1400026cc:	int3   
   1400026cd:	int3   
   1400026ce:	int3   
   1400026cf:	int3   
   1400026d0:	mov    rax,QWORD PTR [rcx]
   1400026d3:	lea    rax,[rax+rdx*8]
   1400026d7:	ret    
   1400026d8:	int3   
   1400026d9:	int3   
   1400026da:	int3   
   1400026db:	int3   
   1400026dc:	int3   
   1400026dd:	int3   
   1400026de:	int3   
   1400026df:	int3   
   1400026e0:	mov    rax,QWORD PTR [rcx]
   1400026e3:	add    rax,0x10
   1400026e7:	ret    
   1400026e8:	int3   
   1400026e9:	int3   
   1400026ea:	int3   
   1400026eb:	int3   
   1400026ec:	int3   
   1400026ed:	int3   
   1400026ee:	int3   
   1400026ef:	int3   
   1400026f0:	mov    rax,QWORD PTR [rcx]
   1400026f3:	add    rax,0x10
   1400026f7:	ret    
   1400026f8:	int3   
   1400026f9:	int3   
   1400026fa:	int3   
   1400026fb:	int3   
   1400026fc:	int3   
   1400026fd:	int3   
   1400026fe:	int3   
   1400026ff:	int3   
   140002700:	mov    rax,QWORD PTR [rcx]
   140002703:	add    rax,0x10
   140002707:	ret    
   140002708:	int3   
   140002709:	int3   
   14000270a:	int3   
   14000270b:	int3   
   14000270c:	int3   
   14000270d:	int3   
   14000270e:	int3   
   14000270f:	int3   
   140002710:	mov    rax,QWORD PTR [rcx]
   140002713:	add    rax,0x10
   140002717:	ret    
   140002718:	int3   
   140002719:	int3   
   14000271a:	int3   
   14000271b:	int3   
   14000271c:	int3   
   14000271d:	int3   
   14000271e:	int3   
   14000271f:	int3   
   140002720:	mov    rax,QWORD PTR [rcx]
   140002723:	mov    QWORD PTR [rdx],rax
   140002726:	mov    rax,QWORD PTR [rax]
   140002729:	mov    QWORD PTR [rcx],rax
   14000272c:	mov    rax,rdx
   14000272f:	ret    
   140002730:	mov    rax,QWORD PTR [rcx]
   140002733:	mov    rdx,QWORD PTR [rax]
   140002736:	mov    rax,rcx
   140002739:	mov    QWORD PTR [rcx],rdx
   14000273c:	ret    
   14000273d:	int3   
   14000273e:	int3   
   14000273f:	int3   
   140002740:	mov    rax,QWORD PTR [rcx]
   140002743:	mov    rdx,QWORD PTR [rax]
   140002746:	mov    rax,rcx
   140002749:	mov    QWORD PTR [rcx],rdx
   14000274c:	ret    
   14000274d:	int3   
   14000274e:	int3   
   14000274f:	int3   
   140002750:	mov    rax,QWORD PTR [rcx]
   140002753:	mov    rdx,QWORD PTR [rax]
   140002756:	mov    rax,rcx
   140002759:	mov    QWORD PTR [rcx],rdx
   14000275c:	ret    
   14000275d:	int3   
   14000275e:	int3   
   14000275f:	int3   
   140002760:	mov    rax,QWORD PTR [rcx]
   140002763:	mov    rdx,QWORD PTR [rax+0x8]
   140002767:	mov    rax,rcx
   14000276a:	mov    QWORD PTR [rcx],rdx
   14000276d:	ret    
   14000276e:	int3   
   14000276f:	int3   
   140002770:	mov    rax,QWORD PTR [rcx]
   140002773:	mov    rdx,QWORD PTR [rax+0x8]
   140002777:	mov    rax,rcx
   14000277a:	mov    QWORD PTR [rcx],rdx
   14000277d:	ret    
   14000277e:	int3   
   14000277f:	int3   
   140002780:	mov    rax,QWORD PTR [rcx]
   140002783:	lea    rcx,[rax+r8*8]
   140002787:	mov    rax,rdx
   14000278a:	mov    QWORD PTR [rdx],rcx
   14000278d:	ret    
   14000278e:	int3   
   14000278f:	int3   
   140002790:	cmp    QWORD PTR [rdx+0x18],0x10
   140002795:	mov    r9,QWORD PTR [rdx+0x10]
   140002799:	mov    r8,rdx
   14000279c:	jb     0x1400027a1
   14000279e:	mov    r8,QWORD PTR [rdx]
   1400027a1:	xor    edx,edx
   1400027a3:	movabs rcx,0xcbf29ce484222325
   1400027ad:	test   r9,r9
   1400027b0:	je     0x1400027d4
   1400027b2:	movabs r10,0x100000001b3
   1400027bc:	nop    DWORD PTR [rax+0x0]
   1400027c0:	movzx  eax,BYTE PTR [r8+rdx*1]
   1400027c5:	inc    rdx
   1400027c8:	xor    rcx,rax
   1400027cb:	imul   rcx,r10
   1400027cf:	cmp    rdx,r9
   1400027d2:	jb     0x1400027c0
   1400027d4:	mov    rax,rcx
   1400027d7:	shr    rax,0x20
   1400027db:	xor    rax,rcx
   1400027de:	ret    
   1400027df:	int3   
   1400027e0:	sub    rsp,0x28
   1400027e4:	mov    rcx,rdx
   1400027e7:	mov    rdx,r8
   1400027ea:	call   0x1400044c0
   1400027ef:	test   eax,eax
   1400027f1:	setne  al
   1400027f4:	add    rsp,0x28
   1400027f8:	ret    
   1400027f9:	int3   
   1400027fa:	int3   
   1400027fb:	int3   
   1400027fc:	int3   
   1400027fd:	int3   
   1400027fe:	int3   
   1400027ff:	int3   
   140002800:	sub    rsp,0x28
   140002804:	mov    rcx,rdx
   140002807:	mov    rdx,r8
   14000280a:	call   0x1400044c0
   14000280f:	test   eax,eax
   140002811:	sete   al
   140002814:	add    rsp,0x28
   140002818:	ret    
   140002819:	int3   
   14000281a:	int3   
   14000281b:	int3   
   14000281c:	int3   
   14000281d:	int3   
   14000281e:	int3   
   14000281f:	int3   
   140002820:	cmp    QWORD PTR [rdx+0x18],0x10
   140002825:	mov    r9,QWORD PTR [rdx+0x10]
   140002829:	mov    r8,rdx
   14000282c:	jb     0x140002831
   14000282e:	mov    r8,QWORD PTR [rdx]
   140002831:	xor    edx,edx
   140002833:	movabs rcx,0xcbf29ce484222325
   14000283d:	test   r9,r9
   140002840:	je     0x140002864
   140002842:	movabs r10,0x100000001b3
   14000284c:	nop    DWORD PTR [rax+0x0]
   140002850:	movzx  eax,BYTE PTR [r8+rdx*1]
   140002855:	inc    rdx
   140002858:	xor    rcx,rax
   14000285b:	imul   rcx,r10
   14000285f:	cmp    rdx,r9
   140002862:	jb     0x140002850
   140002864:	mov    rax,rcx
   140002867:	shr    rax,0x20
   14000286b:	xor    rax,rcx
   14000286e:	ret    
   14000286f:	int3   
   140002870:	lea    rax,[rdx*8+0x0]
   140002878:	add    QWORD PTR [rcx],rax
   14000287b:	mov    rax,rcx
   14000287e:	ret    
   14000287f:	int3   
   140002880:	lea    rax,[rdx*8+0x0]
   140002888:	add    QWORD PTR [rcx],rax
   14000288b:	mov    rax,rcx
   14000288e:	ret    
   14000288f:	int3   
   140002890:	mov    QWORD PTR [rsp+0x8],rbx
   140002895:	push   rdi
   140002896:	sub    rsp,0x20
   14000289a:	cmp    QWORD PTR [rcx+0x38],0x10
   14000289f:	mov    edi,edx
   1400028a1:	mov    rbx,rcx
   1400028a4:	jb     0x1400028af
   1400028a6:	mov    rcx,QWORD PTR [rcx+0x20]
   1400028aa:	call   0x140005518
   1400028af:	mov    QWORD PTR [rbx+0x38],0xf
   1400028b7:	mov    QWORD PTR [rbx+0x30],0x0
   1400028bf:	mov    BYTE PTR [rbx+0x20],0x0
   1400028c3:	cmp    QWORD PTR [rbx+0x18],0x10
   1400028c8:	jb     0x1400028d2
   1400028ca:	mov    rcx,QWORD PTR [rbx]
   1400028cd:	call   0x140005518
   1400028d2:	mov    QWORD PTR [rbx+0x18],0xf
   1400028da:	mov    QWORD PTR [rbx+0x10],0x0
   1400028e2:	mov    BYTE PTR [rbx],0x0
   1400028e5:	test   dil,0x1
   1400028e9:	je     0x1400028f3
   1400028eb:	mov    rcx,rbx
   1400028ee:	call   0x140005518
   1400028f3:	mov    rax,rbx
   1400028f6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400028fb:	add    rsp,0x20
   1400028ff:	pop    rdi
   140002900:	ret    
   140002901:	int3   
   140002902:	int3   
   140002903:	int3   
   140002904:	int3   
   140002905:	int3   
   140002906:	int3   
   140002907:	int3   
   140002908:	int3   
   140002909:	int3   
   14000290a:	int3   
   14000290b:	int3   
   14000290c:	int3   
   14000290d:	int3   
   14000290e:	int3   
   14000290f:	int3   
   140002910:	rex push rbx
   140002912:	sub    rsp,0x20
   140002916:	lea    rax,[rip+0x4c3b]        # 0x140007558
   14000291d:	mov    rbx,rcx
   140002920:	mov    QWORD PTR [rcx],rax
   140002923:	test   dl,0x1
   140002926:	je     0x14000292d
   140002928:	call   0x140005518
   14000292d:	mov    rax,rbx
   140002930:	add    rsp,0x20
   140002934:	pop    rbx
   140002935:	ret    
   140002936:	int3   
   140002937:	int3   
   140002938:	int3   
   140002939:	int3   
   14000293a:	int3   
   14000293b:	int3   
   14000293c:	int3   
   14000293d:	int3   
   14000293e:	int3   
   14000293f:	int3   
   140002940:	rex push rbx
   140002942:	sub    rsp,0x20
   140002946:	lea    rax,[rip+0x4c0b]        # 0x140007558
   14000294d:	mov    rbx,rcx
   140002950:	mov    QWORD PTR [rcx],rax
   140002953:	test   dl,0x1
   140002956:	je     0x14000295d
   140002958:	call   0x140005518
   14000295d:	mov    rax,rbx
   140002960:	add    rsp,0x20
   140002964:	pop    rbx
   140002965:	ret    
   140002966:	int3   
   140002967:	int3   
   140002968:	int3   
   140002969:	int3   
   14000296a:	int3   
   14000296b:	int3   
   14000296c:	int3   
   14000296d:	int3   
   14000296e:	int3   
   14000296f:	int3   
   140002970:	rex push rbx
   140002972:	sub    rsp,0x20
   140002976:	lea    rax,[rip+0x4bdb]        # 0x140007558
   14000297d:	mov    rbx,rcx
   140002980:	mov    QWORD PTR [rcx],rax
   140002983:	test   dl,0x1
   140002986:	je     0x14000298d
   140002988:	call   0x140005518
   14000298d:	mov    rax,rbx
   140002990:	add    rsp,0x20
   140002994:	pop    rbx
   140002995:	ret    
   140002996:	int3   
   140002997:	int3   
   140002998:	int3   
   140002999:	int3   
   14000299a:	int3   
   14000299b:	int3   
   14000299c:	int3   
   14000299d:	int3   
   14000299e:	int3   
   14000299f:	int3   
   1400029a0:	rex push rbx
   1400029a2:	sub    rsp,0x20
   1400029a6:	lea    rax,[rip+0x4bab]        # 0x140007558
   1400029ad:	mov    rbx,rcx
   1400029b0:	mov    QWORD PTR [rcx],rax
   1400029b3:	test   dl,0x1
   1400029b6:	je     0x1400029bd
   1400029b8:	call   0x140005518
   1400029bd:	mov    rax,rbx
   1400029c0:	add    rsp,0x20
   1400029c4:	pop    rbx
   1400029c5:	ret    
   1400029c6:	int3   
   1400029c7:	int3   
   1400029c8:	int3   
   1400029c9:	int3   
   1400029ca:	int3   
   1400029cb:	int3   
   1400029cc:	int3   
   1400029cd:	int3   
   1400029ce:	int3   
   1400029cf:	int3   
   1400029d0:	ret    0x0
   1400029d3:	int3   
   1400029d4:	int3   
   1400029d5:	int3   
   1400029d6:	int3   
   1400029d7:	int3   
   1400029d8:	int3   
   1400029d9:	int3   
   1400029da:	int3   
   1400029db:	int3   
   1400029dc:	int3   
   1400029dd:	int3   
   1400029de:	int3   
   1400029df:	int3   
   1400029e0:	mov    rax,QWORD PTR [rcx+0x10]
   1400029e4:	add    r8,r8
   1400029e7:	mov    rcx,QWORD PTR [rax+r8*8]
   1400029eb:	mov    rax,rdx
   1400029ee:	mov    QWORD PTR [rdx],rcx
   1400029f1:	ret    
   1400029f2:	int3   
   1400029f3:	int3   
   1400029f4:	int3   
   1400029f5:	int3   
   1400029f6:	int3   
   1400029f7:	int3   
   1400029f8:	int3   
   1400029f9:	int3   
   1400029fa:	int3   
   1400029fb:	int3   
   1400029fc:	int3   
   1400029fd:	int3   
   1400029fe:	int3   
   1400029ff:	int3   
   140002a00:	xor    r8d,r8d
   140002a03:	xor    edx,edx
   140002a05:	jmp    0x140002a10
   140002a0a:	int3   
   140002a0b:	int3   
   140002a0c:	int3   
   140002a0d:	int3   
   140002a0e:	int3   
   140002a0f:	int3   
   140002a10:	rex push rdi
   140002a12:	sub    rsp,0x30
   140002a16:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002a1f:	mov    QWORD PTR [rsp+0x40],rbx
   140002a24:	mov    rdi,r8
   140002a27:	mov    rbx,rdx
   140002a2a:	mov    ecx,0x50
   140002a2f:	call   0x140005512
   140002a34:	mov    QWORD PTR [rsp+0x58],rax
   140002a39:	test   rax,rax
   140002a3c:	jne    0x140002a45
   140002a3e:	call   QWORD PTR [rip+0x4624]        # 0x140007068
   140002a44:	int3   
   140002a45:	test   rbx,rbx
   140002a48:	jne    0x140002a50
   140002a4a:	mov    rbx,rax
   140002a4d:	mov    rdi,rax
   140002a50:	mov    QWORD PTR [rax],rbx
   140002a53:	lea    rcx,[rax+0x8]
   140002a57:	test   rcx,rcx
   140002a5a:	je     0x140002a5f
   140002a5c:	mov    QWORD PTR [rcx],rdi
   140002a5f:	mov    rbx,QWORD PTR [rsp+0x40]
   140002a64:	add    rsp,0x30
   140002a68:	pop    rdi
   140002a69:	ret    
   140002a6a:	int3   
   140002a6b:	int3   
   140002a6c:	int3   
   140002a6d:	int3   
   140002a6e:	int3   
   140002a6f:	int3   
   140002a70:	mov    QWORD PTR [rsp+0x20],rbx
   140002a75:	push   rsi
   140002a76:	sub    rsp,0x40
   140002a7a:	mov    rax,QWORD PTR [rcx+0x8]
   140002a7e:	mov    rbx,QWORD PTR [rcx+0x30]
   140002a82:	movss  xmm2,DWORD PTR [rip+0x4d7a]        # 0x140007804
   140002a8a:	xorps  xmm0,xmm0
   140002a8d:	mov    rsi,rcx
   140002a90:	cvtsi2ss xmm0,rax
   140002a95:	test   rax,rax
   140002a98:	jns    0x140002a9e
   140002a9a:	addss  xmm0,xmm2
   140002a9e:	xorps  xmm1,xmm1
   140002aa1:	cvtsi2ss xmm1,rbx
   140002aa6:	test   rbx,rbx
   140002aa9:	jns    0x140002aaf
   140002aab:	addss  xmm1,xmm2
   140002aaf:	divss  xmm0,xmm1
   140002ab3:	comiss xmm0,DWORD PTR [rcx+0x38]
   140002ab7:	jbe    0x140002b54
   140002abd:	mov    QWORD PTR [rsp+0x60],rdi
   140002ac2:	cmp    rbx,0x200
   140002ac9:	jae    0x140002ad5
   140002acb:	lea    rbx,[rbx*8+0x0]
   140002ad3:	jmp    0x140002ae7
   140002ad5:	movabs rax,0xfffffffffffffff
   140002adf:	cmp    rbx,rax
   140002ae2:	jae    0x140002ae7
   140002ae4:	add    rbx,rbx
   140002ae7:	mov    rax,QWORD PTR [rcx]
   140002aea:	mov    r8,QWORD PTR [rcx+0x10]
   140002aee:	add    rcx,0x10
   140002af2:	mov    QWORD PTR [rsp+0x50],rax
   140002af7:	lea    rax,[rsp+0x50]
   140002afc:	lea    r9,[rbx+rbx*1]
   140002b00:	lea    rdx,[rsp+0x58]
   140002b05:	mov    QWORD PTR [rcx+0x8],r8
   140002b09:	mov    QWORD PTR [rsp+0x20],rax
   140002b0e:	call   0x140003390
   140002b13:	mov    rdi,QWORD PTR [rsi]
   140002b16:	lea    rax,[rbx-0x1]
   140002b1a:	mov    QWORD PTR [rsi+0x28],rax
   140002b1e:	mov    QWORD PTR [rsi+0x30],rbx
   140002b22:	cmp    QWORD PTR [rdi],rdi
   140002b25:	je     0x140002b4f
   140002b27:	mov    rdi,QWORD PTR [rdi+0x8]
   140002b2b:	nop    DWORD PTR [rax+rax*1+0x0]
   140002b30:	mov    rbx,QWORD PTR [rsi]
   140002b33:	lea    rdx,[rsp+0x30]
   140002b38:	mov    rcx,rsi
   140002b3b:	mov    rbx,QWORD PTR [rbx]
   140002b3e:	mov    r9,rbx
   140002b41:	lea    r8,[rbx+0x10]
   140002b45:	call   0x1400012f0
   140002b4a:	cmp    rbx,rdi
   140002b4d:	jne    0x140002b30
   140002b4f:	mov    rdi,QWORD PTR [rsp+0x60]
   140002b54:	mov    rbx,QWORD PTR [rsp+0x68]
   140002b59:	add    rsp,0x40
   140002b5d:	pop    rsi
   140002b5e:	ret    
   140002b5f:	int3   
   140002b60:	mov    QWORD PTR [rsp+0x8],rcx
   140002b65:	push   rdi
   140002b66:	sub    rsp,0x40
   140002b6a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140002b73:	mov    QWORD PTR [rsp+0x68],rbx
   140002b78:	mov    rdi,rdx
   140002b7b:	mov    rbx,rcx
   140002b7e:	mov    rax,QWORD PTR [rdx+0x28]
   140002b82:	mov    QWORD PTR [rcx+0x28],rax
   140002b86:	mov    rax,QWORD PTR [rdx+0x30]
   140002b8a:	mov    QWORD PTR [rcx+0x30],rax
   140002b8e:	mov    eax,DWORD PTR [rdx+0x38]
   140002b91:	mov    DWORD PTR [rcx+0x38],eax
   140002b94:	call   0x140004410
   140002b99:	nop
   140002b9a:	mov    rax,QWORD PTR [rbx]
   140002b9d:	mov    QWORD PTR [rsp+0x58],rax
   140002ba2:	mov    r9,QWORD PTR [rdi+0x18]
   140002ba6:	sub    r9,QWORD PTR [rdi+0x10]
   140002baa:	sar    r9,0x3
   140002bae:	lea    rcx,[rbx+0x10]
   140002bb2:	mov    r8,QWORD PTR [rcx]
   140002bb5:	mov    QWORD PTR [rcx+0x8],r8
   140002bb9:	lea    rax,[rsp+0x58]
   140002bbe:	mov    QWORD PTR [rsp+0x20],rax
   140002bc3:	lea    rdx,[rsp+0x60]
   140002bc8:	call   0x140003390
   140002bcd:	mov    rdx,QWORD PTR [rdi]
   140002bd0:	mov    r8,rdx
   140002bd3:	mov    rdx,QWORD PTR [rdx]
   140002bd6:	mov    rcx,rbx
   140002bd9:	call   0x140001cf0
   140002bde:	nop
   140002bdf:	mov    rbx,QWORD PTR [rsp+0x68]
   140002be4:	add    rsp,0x40
   140002be8:	pop    rdi
   140002be9:	ret    
   140002bea:	int3   
   140002beb:	int3   
   140002bec:	int3   
   140002bed:	int3   
   140002bee:	int3   
   140002bef:	int3   
   140002bf0:	mov    QWORD PTR [rsp+0x18],r8
   140002bf5:	mov    QWORD PTR [rsp+0x10],rdx
   140002bfa:	mov    QWORD PTR [rsp+0x8],rcx
   140002bff:	push   rbx
   140002c00:	push   rsi
   140002c01:	push   rdi
   140002c02:	push   r14
   140002c04:	sub    rsp,0x38
   140002c08:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002c11:	mov    rsi,r8
   140002c14:	mov    rbx,rcx
   140002c17:	mov    rdi,rdx
   140002c1a:	or     rdi,0xf
   140002c1e:	cmp    rdi,0xfffffffffffffffe
   140002c22:	jbe    0x140002c29
   140002c24:	mov    rdi,rdx
   140002c27:	jmp    0x140002c5e
   140002c29:	mov    r8,QWORD PTR [rcx+0x18]
   140002c2d:	mov    rcx,r8
   140002c30:	shr    rcx,1
   140002c33:	movabs rax,0xaaaaaaaaaaaaaaab
   140002c3d:	mul    rdi
   140002c40:	shr    rdx,1
   140002c43:	cmp    rcx,rdx
   140002c46:	jbe    0x140002c5e
   140002c48:	mov    rdi,0xfffffffffffffffe
   140002c4f:	mov    rax,rdi
   140002c52:	sub    rax,rcx
   140002c55:	cmp    r8,rax
   140002c58:	ja     0x140002c5e
   140002c5a:	lea    rdi,[rcx+r8*1]
   140002c5e:	lea    rcx,[rdi+0x1]
   140002c62:	xor    r14d,r14d
   140002c65:	test   rcx,rcx
   140002c68:	je     0x140002c84
   140002c6a:	cmp    rcx,0xffffffffffffffff
   140002c6e:	ja     0x140002c7d
   140002c70:	call   0x140005512
   140002c75:	mov    r14,rax
   140002c78:	test   rax,rax
   140002c7b:	jne    0x140002c84
   140002c7d:	call   QWORD PTR [rip+0x43e5]        # 0x140007068
   140002c83:	nop
   140002c84:	jmp    0x140002c9a
   140002c86:	mov    rbx,QWORD PTR [rsp+0x60]
   140002c8b:	mov    rsi,QWORD PTR [rsp+0x70]
   140002c90:	mov    rdi,QWORD PTR [rsp+0x68]
   140002c95:	mov    r14,QWORD PTR [rsp+0x78]
   140002c9a:	test   rsi,rsi
   140002c9d:	je     0x140002cbe
   140002c9f:	cmp    QWORD PTR [rbx+0x18],0x10
   140002ca4:	jb     0x140002cab
   140002ca6:	mov    rdx,QWORD PTR [rbx]
   140002ca9:	jmp    0x140002cae
   140002cab:	mov    rdx,rbx
   140002cae:	test   rsi,rsi
   140002cb1:	je     0x140002cbe
   140002cb3:	mov    r8,rsi
   140002cb6:	mov    rcx,r14
   140002cb9:	call   0x1400056c4
   140002cbe:	cmp    QWORD PTR [rbx+0x18],0x10
   140002cc3:	jb     0x140002ccd
   140002cc5:	mov    rcx,QWORD PTR [rbx]
   140002cc8:	call   0x140005518
   140002ccd:	mov    BYTE PTR [rbx],0x0
   140002cd0:	mov    QWORD PTR [rbx],r14
   140002cd3:	mov    QWORD PTR [rbx+0x18],rdi
   140002cd7:	mov    QWORD PTR [rbx+0x10],rsi
   140002cdb:	cmp    rdi,0x10
   140002cdf:	jb     0x140002ce4
   140002ce1:	mov    rbx,r14
   140002ce4:	mov    BYTE PTR [rbx+rsi*1],0x0
   140002ce8:	add    rsp,0x38
   140002cec:	pop    r14
   140002cee:	pop    rdi
   140002cef:	pop    rsi
   140002cf0:	pop    rbx
   140002cf1:	ret    
   140002cf2:	int3   
   140002cf3:	int3   
   140002cf4:	int3   
   140002cf5:	int3   
   140002cf6:	int3   
   140002cf7:	int3   
   140002cf8:	int3   
   140002cf9:	int3   
   140002cfa:	int3   
   140002cfb:	int3   
   140002cfc:	int3   
   140002cfd:	int3   
   140002cfe:	int3   
   140002cff:	int3   
   140002d00:	mov    QWORD PTR [rsp+0x18],r8
   140002d05:	mov    QWORD PTR [rsp+0x10],rdx
   140002d0a:	mov    QWORD PTR [rsp+0x8],rcx
   140002d0f:	push   rbx
   140002d10:	push   rsi
   140002d11:	push   rdi
   140002d12:	push   r14
   140002d14:	push   r15
   140002d16:	sub    rsp,0x30
   140002d1a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002d23:	mov    rsi,r8
   140002d26:	mov    rbx,rcx
   140002d29:	mov    rdi,rdx
   140002d2c:	or     rdi,0x7
   140002d30:	movabs r9,0x7ffffffffffffffe
   140002d3a:	cmp    rdi,r9
   140002d3d:	jbe    0x140002d44
   140002d3f:	mov    rdi,rdx
   140002d42:	jmp    0x140002d75
   140002d44:	mov    r8,QWORD PTR [rcx+0x18]
   140002d48:	mov    rcx,r8
   140002d4b:	shr    rcx,1
   140002d4e:	movabs rax,0xaaaaaaaaaaaaaaab
   140002d58:	mul    rdi
   140002d5b:	shr    rdx,1
   140002d5e:	cmp    rcx,rdx
   140002d61:	jbe    0x140002d75
   140002d63:	mov    rax,r9
   140002d66:	sub    rax,rcx
   140002d69:	cmp    r8,rax
   140002d6c:	lea    rdi,[rcx+r8*1]
   140002d70:	jbe    0x140002d75
   140002d72:	mov    rdi,r9
   140002d75:	lea    rcx,[rdi+0x1]
   140002d79:	xor    r15d,r15d
   140002d7c:	mov    r14d,r15d
   140002d7f:	test   rcx,rcx
   140002d82:	je     0x140002daa
   140002d84:	movabs rax,0x7fffffffffffffff
   140002d8e:	cmp    rcx,rax
   140002d91:	ja     0x140002da3
   140002d93:	add    rcx,rcx
   140002d96:	call   0x140005512
   140002d9b:	mov    r14,rax
   140002d9e:	test   rax,rax
   140002da1:	jne    0x140002daa
   140002da3:	call   QWORD PTR [rip+0x42bf]        # 0x140007068
   140002da9:	nop
   140002daa:	jmp    0x140002dc3
   140002dac:	xor    r15d,r15d
   140002daf:	mov    rbx,QWORD PTR [rsp+0x60]
   140002db4:	mov    rsi,QWORD PTR [rsp+0x70]
   140002db9:	mov    rdi,QWORD PTR [rsp+0x68]
   140002dbe:	mov    r14,QWORD PTR [rsp+0x78]
   140002dc3:	test   rsi,rsi
   140002dc6:	je     0x140002de8
   140002dc8:	cmp    QWORD PTR [rbx+0x18],0x8
   140002dcd:	jb     0x140002dd4
   140002dcf:	mov    rdx,QWORD PTR [rbx]
   140002dd2:	jmp    0x140002dd7
   140002dd4:	mov    rdx,rbx
   140002dd7:	test   rsi,rsi
   140002dda:	je     0x140002de8
   140002ddc:	lea    r8,[rsi+rsi*1]
   140002de0:	mov    rcx,r14
   140002de3:	call   0x1400056c4
   140002de8:	cmp    QWORD PTR [rbx+0x18],0x8
   140002ded:	jb     0x140002df7
   140002def:	mov    rcx,QWORD PTR [rbx]
   140002df2:	call   0x140005518
   140002df7:	mov    QWORD PTR [rbx],r14
   140002dfa:	mov    QWORD PTR [rbx+0x18],rdi
   140002dfe:	mov    QWORD PTR [rbx+0x10],rsi
   140002e02:	cmp    rdi,0x8
   140002e06:	jb     0x140002e0b
   140002e08:	mov    rbx,r14
   140002e0b:	mov    WORD PTR [rbx+rsi*2],r15w
   140002e10:	add    rsp,0x30
   140002e14:	pop    r15
   140002e16:	pop    r14
   140002e18:	pop    rdi
   140002e19:	pop    rsi
   140002e1a:	pop    rbx
   140002e1b:	ret    
   140002e1c:	int3   
   140002e1d:	int3   
   140002e1e:	int3   
   140002e1f:	int3   
   140002e20:	ret    0x0
   140002e23:	int3   
   140002e24:	int3   
   140002e25:	int3   
   140002e26:	int3   
   140002e27:	int3   
   140002e28:	int3   
   140002e29:	int3   
   140002e2a:	int3   
   140002e2b:	int3   
   140002e2c:	int3   
   140002e2d:	int3   
   140002e2e:	int3   
   140002e2f:	int3   
   140002e30:	rex push rbx
   140002e32:	sub    rsp,0x20
   140002e36:	mov    rbx,rdx
   140002e39:	mov    rdx,QWORD PTR [rdx+0x8]
   140002e3d:	mov    rax,QWORD PTR [rbx]
   140002e40:	mov    QWORD PTR [rdx],rax
   140002e43:	mov    rdx,QWORD PTR [rbx]
   140002e46:	mov    rax,QWORD PTR [rbx+0x8]
   140002e4a:	mov    QWORD PTR [rdx+0x8],rax
   140002e4e:	dec    QWORD PTR [rcx+0x8]
   140002e52:	cmp    QWORD PTR [rbx+0x48],0x10
   140002e57:	jb     0x140002e62
   140002e59:	mov    rcx,QWORD PTR [rbx+0x30]
   140002e5d:	call   0x140005518
   140002e62:	mov    QWORD PTR [rbx+0x48],0xf
   140002e6a:	mov    QWORD PTR [rbx+0x40],0x0
   140002e72:	mov    BYTE PTR [rbx+0x30],0x0
   140002e76:	cmp    QWORD PTR [rbx+0x28],0x10
   140002e7b:	jb     0x140002e86
   140002e7d:	mov    rcx,QWORD PTR [rbx+0x10]
   140002e81:	call   0x140005518
   140002e86:	mov    QWORD PTR [rbx+0x28],0xf
   140002e8e:	mov    QWORD PTR [rbx+0x20],0x0
   140002e96:	mov    rcx,rbx
   140002e99:	mov    BYTE PTR [rbx+0x10],0x0
   140002e9d:	call   0x140005518
   140002ea2:	add    rsp,0x20
   140002ea6:	pop    rbx
   140002ea7:	ret    
   140002ea8:	int3   
   140002ea9:	int3   
   140002eaa:	int3   
   140002eab:	int3   
   140002eac:	int3   
   140002ead:	int3   
   140002eae:	int3   
   140002eaf:	int3   
   140002eb0:	mov    r9,QWORD PTR [rcx+0x10]
   140002eb4:	mov    rax,QWORD PTR [rcx]
   140002eb7:	add    r8,r8
   140002eba:	cmp    QWORD PTR [r9+r8*8],rax
   140002ebe:	jne    0x140002ec7
   140002ec0:	mov    QWORD PTR [rdx],rax
   140002ec3:	mov    rax,rdx
   140002ec6:	ret    
   140002ec7:	mov    rax,QWORD PTR [r9+r8*8+0x8]
   140002ecc:	mov    rcx,QWORD PTR [rax]
   140002ecf:	mov    rax,rdx
   140002ed2:	mov    QWORD PTR [rdx],rcx
   140002ed5:	ret    
   140002ed6:	int3   
   140002ed7:	int3   
   140002ed8:	int3   
   140002ed9:	int3   
   140002eda:	int3   
   140002edb:	int3   
   140002edc:	int3   
   140002edd:	int3   
   140002ede:	int3   
   140002edf:	int3   
   140002ee0:	cmp    QWORD PTR [rcx+0x18],0x10
   140002ee5:	mov    QWORD PTR [rcx+0x10],rdx
   140002ee9:	jb     0x140002ef3
   140002eeb:	mov    rax,QWORD PTR [rcx]
   140002eee:	mov    BYTE PTR [rax+rdx*1],0x0
   140002ef2:	ret    
   140002ef3:	mov    BYTE PTR [rcx+rdx*1],0x0
   140002ef7:	ret    
   140002ef8:	int3   
   140002ef9:	int3   
   140002efa:	int3   
   140002efb:	int3   
   140002efc:	int3   
   140002efd:	int3   
   140002efe:	int3   
   140002eff:	int3   
   140002f00:	cmp    QWORD PTR [rcx+0x18],0x8
   140002f05:	mov    rax,rcx
   140002f08:	mov    QWORD PTR [rcx+0x10],rdx
   140002f0c:	jb     0x140002f11
   140002f0e:	mov    rax,QWORD PTR [rcx]
   140002f11:	xor    ecx,ecx
   140002f13:	mov    WORD PTR [rax+rdx*2],cx
   140002f17:	ret    
   140002f18:	int3   
   140002f19:	int3   
   140002f1a:	int3   
   140002f1b:	int3   
   140002f1c:	int3   
   140002f1d:	int3   
   140002f1e:	int3   
   140002f1f:	int3   
   140002f20:	mov    rcx,rdx
   140002f23:	jmp    0x140005518
   140002f28:	int3   
   140002f29:	int3   
   140002f2a:	int3   
   140002f2b:	int3   
   140002f2c:	int3   
   140002f2d:	int3   
   140002f2e:	int3   
   140002f2f:	int3   
   140002f30:	rex push rbx
   140002f32:	sub    rsp,0x20
   140002f36:	cmp    QWORD PTR [rdx+0x48],0x10
   140002f3b:	mov    rbx,rdx
   140002f3e:	jb     0x140002f49
   140002f40:	mov    rcx,QWORD PTR [rdx+0x30]
   140002f44:	call   0x140005518
   140002f49:	mov    QWORD PTR [rbx+0x48],0xf
   140002f51:	mov    QWORD PTR [rbx+0x40],0x0
   140002f59:	mov    BYTE PTR [rbx+0x30],0x0
   140002f5d:	cmp    QWORD PTR [rbx+0x28],0x10
   140002f62:	jb     0x140002f6d
   140002f64:	mov    rcx,QWORD PTR [rbx+0x10]
   140002f68:	call   0x140005518
   140002f6d:	mov    QWORD PTR [rbx+0x28],0xf
   140002f75:	mov    QWORD PTR [rbx+0x20],0x0
   140002f7d:	mov    rcx,rbx
   140002f80:	mov    BYTE PTR [rbx+0x10],0x0
   140002f84:	add    rsp,0x20
   140002f88:	pop    rbx
   140002f89:	jmp    0x140005518
   140002f8e:	int3   
   140002f8f:	int3   
   140002f90:	mov    rax,rdx
   140002f93:	ret    
   140002f94:	int3   
   140002f95:	int3   
   140002f96:	int3   
   140002f97:	int3   
   140002f98:	int3   
   140002f99:	int3   
   140002f9a:	int3   
   140002f9b:	int3   
   140002f9c:	int3   
   140002f9d:	int3   
   140002f9e:	int3   
   140002f9f:	int3   
   140002fa0:	mov    rax,rdx
   140002fa3:	ret    
   140002fa4:	int3   
   140002fa5:	int3   
   140002fa6:	int3   
   140002fa7:	int3   
   140002fa8:	int3   
   140002fa9:	int3   
   140002faa:	int3   
   140002fab:	int3   
   140002fac:	int3   
   140002fad:	int3   
   140002fae:	int3   
   140002faf:	int3   
   140002fb0:	mov    rax,rdx
   140002fb3:	ret    
   140002fb4:	int3   
   140002fb5:	int3   
   140002fb6:	int3   
   140002fb7:	int3   
   140002fb8:	int3   
   140002fb9:	int3   
   140002fba:	int3   
   140002fbb:	int3   
   140002fbc:	int3   
   140002fbd:	int3   
   140002fbe:	int3   
   140002fbf:	int3   
   140002fc0:	mov    rax,rdx
   140002fc3:	ret    
   140002fc4:	int3   
   140002fc5:	int3   
   140002fc6:	int3   
   140002fc7:	int3   
   140002fc8:	int3   
   140002fc9:	int3   
   140002fca:	int3   
   140002fcb:	int3   
   140002fcc:	int3   
   140002fcd:	int3   
   140002fce:	int3   
   140002fcf:	int3   
   140002fd0:	mov    rax,rdx
   140002fd3:	ret    
   140002fd4:	int3   
   140002fd5:	int3   
   140002fd6:	int3   
   140002fd7:	int3   
   140002fd8:	int3   
   140002fd9:	int3   
   140002fda:	int3   
   140002fdb:	int3   
   140002fdc:	int3   
   140002fdd:	int3   
   140002fde:	int3   
   140002fdf:	int3   
   140002fe0:	mov    rax,rdx
   140002fe3:	ret    
   140002fe4:	int3   
   140002fe5:	int3   
   140002fe6:	int3   
   140002fe7:	int3   
   140002fe8:	int3   
   140002fe9:	int3   
   140002fea:	int3   
   140002feb:	int3   
   140002fec:	int3   
   140002fed:	int3   
   140002fee:	int3   
   140002fef:	int3   
   140002ff0:	mov    QWORD PTR [rsp+0x20],rbx
   140002ff5:	push   rdi
   140002ff6:	sub    rsp,0x20
   140002ffa:	mov    rdi,rdx
   140002ffd:	mov    rbx,rcx
   140003000:	cmp    rdx,0xfffffffffffffffe
   140003004:	jbe    0x140003014
   140003006:	lea    rcx,[rip+0x47a3]        # 0x1400077b0
   14000300d:	call   QWORD PTR [rip+0x404d]        # 0x140007060
   140003013:	int3   
   140003014:	mov    rax,QWORD PTR [rcx+0x18]
   140003018:	mov    QWORD PTR [rsp+0x30],rbp
   14000301d:	xor    ebp,ebp
   14000301f:	cmp    rax,rdx
   140003022:	jae    0x14000302f
   140003024:	mov    r8,QWORD PTR [rcx+0x10]
   140003028:	call   0x140002bf0
   14000302d:	jmp    0x1400030a1
   14000302f:	test   r8b,r8b
   140003032:	je     0x14000308c
   140003034:	cmp    rdx,0x10
   140003038:	jae    0x14000308c
   14000303a:	mov    QWORD PTR [rsp+0x38],rsi
   14000303f:	mov    rsi,QWORD PTR [rcx+0x10]
   140003043:	cmp    rdx,rsi
   140003046:	cmovb  rsi,rdx
   14000304a:	cmp    rax,0x10
   14000304e:	jb     0x140003075
   140003050:	mov    QWORD PTR [rsp+0x40],r14
   140003055:	mov    r14,QWORD PTR [rcx]
   140003058:	test   rsi,rsi
   14000305b:	je     0x140003068
   14000305d:	mov    r8,rsi
   140003060:	mov    rdx,r14
   140003063:	call   0x1400056c4
   140003068:	mov    rcx,r14
   14000306b:	call   0x140005518
   140003070:	mov    r14,QWORD PTR [rsp+0x40]
   140003075:	mov    QWORD PTR [rbx+0x10],rsi
   140003079:	mov    QWORD PTR [rbx+0x18],0xf
   140003081:	mov    BYTE PTR [rsi+rbx*1],bpl
   140003085:	mov    rsi,QWORD PTR [rsp+0x38]
   14000308a:	jmp    0x1400030a1
   14000308c:	test   rdx,rdx
   14000308f:	jne    0x1400030a1
   140003091:	mov    QWORD PTR [rcx+0x10],rbp
   140003095:	cmp    rax,0x10
   140003099:	jb     0x14000309e
   14000309b:	mov    rbx,QWORD PTR [rcx]
   14000309e:	mov    BYTE PTR [rbx],bpl
   1400030a1:	mov    rbp,QWORD PTR [rsp+0x30]
   1400030a6:	mov    rbx,QWORD PTR [rsp+0x48]
   1400030ab:	test   rdi,rdi
   1400030ae:	setne  al
   1400030b1:	add    rsp,0x20
   1400030b5:	pop    rdi
   1400030b6:	ret    
   1400030b7:	int3   
   1400030b8:	int3   
   1400030b9:	int3   
   1400030ba:	int3   
   1400030bb:	int3   
   1400030bc:	int3   
   1400030bd:	int3   
   1400030be:	int3   
   1400030bf:	int3   
   1400030c0:	mov    QWORD PTR [rsp+0x20],rbx
   1400030c5:	push   rdi
   1400030c6:	sub    rsp,0x20
   1400030ca:	movabs rax,0x7ffffffffffffffe
   1400030d4:	mov    rdi,rdx
   1400030d7:	mov    rbx,rcx
   1400030da:	cmp    rdx,rax
   1400030dd:	jbe    0x1400030ed
   1400030df:	lea    rcx,[rip+0x46ca]        # 0x1400077b0
   1400030e6:	call   QWORD PTR [rip+0x3f74]        # 0x140007060
   1400030ec:	int3   
   1400030ed:	mov    rax,QWORD PTR [rcx+0x18]
   1400030f1:	mov    QWORD PTR [rsp+0x38],rsi
   1400030f6:	xor    esi,esi
   1400030f8:	cmp    rax,rdx
   1400030fb:	jae    0x140003108
   1400030fd:	mov    r8,QWORD PTR [rcx+0x10]
   140003101:	call   0x140002d00
   140003106:	jmp    0x14000317c
   140003108:	test   r8b,r8b
   14000310b:	je     0x140003167
   14000310d:	cmp    rdx,0x8
   140003111:	jae    0x140003167
   140003113:	mov    QWORD PTR [rsp+0x40],r14
   140003118:	mov    r14,QWORD PTR [rcx+0x10]
   14000311c:	cmp    rdx,r14
   14000311f:	cmovb  r14,rdx
   140003123:	cmp    rax,0x8
   140003127:	jb     0x14000314f
   140003129:	mov    QWORD PTR [rsp+0x30],rbp
   14000312e:	mov    rbp,QWORD PTR [rcx]
   140003131:	test   r14,r14
   140003134:	je     0x140003142
   140003136:	lea    r8,[r14+r14*1]
   14000313a:	mov    rdx,rbp
   14000313d:	call   0x1400056c4
   140003142:	mov    rcx,rbp
   140003145:	call   0x140005518
   14000314a:	mov    rbp,QWORD PTR [rsp+0x30]
   14000314f:	mov    QWORD PTR [rbx+0x10],r14
   140003153:	mov    QWORD PTR [rbx+0x18],0x7
   14000315b:	mov    WORD PTR [rbx+r14*2],si
   140003160:	mov    r14,QWORD PTR [rsp+0x40]
   140003165:	jmp    0x14000317c
   140003167:	test   rdx,rdx
   14000316a:	jne    0x14000317c
   14000316c:	mov    QWORD PTR [rcx+0x10],rsi
   140003170:	cmp    rax,0x8
   140003174:	jb     0x140003179
   140003176:	mov    rbx,QWORD PTR [rcx]
   140003179:	mov    WORD PTR [rbx],si
   14000317c:	mov    rsi,QWORD PTR [rsp+0x38]
   140003181:	mov    rbx,QWORD PTR [rsp+0x48]
   140003186:	test   rdi,rdi
   140003189:	setne  al
   14000318c:	add    rsp,0x20
   140003190:	pop    rdi
   140003191:	ret    
   140003192:	int3   
   140003193:	int3   
   140003194:	int3   
   140003195:	int3   
   140003196:	int3   
   140003197:	int3   
   140003198:	int3   
   140003199:	int3   
   14000319a:	int3   
   14000319b:	int3   
   14000319c:	int3   
   14000319d:	int3   
   14000319e:	int3   
   14000319f:	int3   
   1400031a0:	mov    r8,QWORD PTR [rcx+0x10]
   1400031a4:	movabs rax,0x1fffffffffffffff
   1400031ae:	sub    r8,QWORD PTR [rcx]
   1400031b1:	sar    r8,0x3
   1400031b5:	mov    rcx,r8
   1400031b8:	shr    rcx,1
   1400031bb:	sub    rax,rcx
   1400031be:	cmp    rax,r8
   1400031c1:	jae    0x1400031d1
   1400031c3:	xor    r8d,r8d
   1400031c6:	cmp    r8,rdx
   1400031c9:	cmovb  r8,rdx
   1400031cd:	mov    rax,r8
   1400031d0:	ret    
   1400031d1:	add    r8,rcx
   1400031d4:	cmp    r8,rdx
   1400031d7:	cmovb  r8,rdx
   1400031db:	mov    rax,r8
   1400031de:	ret    
   1400031df:	int3   
   1400031e0:	xor    r9d,r9d
   1400031e3:	movabs rax,0xcbf29ce484222325
   1400031ed:	test   rdx,rdx
   1400031f0:	je     0x140003214
   1400031f2:	movabs r10,0x100000001b3
   1400031fc:	nop    DWORD PTR [rax+0x0]
   140003200:	movzx  r8d,BYTE PTR [r9+rcx*1]
   140003205:	inc    r9
   140003208:	xor    rax,r8
   14000320b:	imul   rax,r10
   14000320f:	cmp    r9,rdx
   140003212:	jb     0x140003200
   140003214:	mov    rcx,rax
   140003217:	shr    rcx,0x20
   14000321b:	xor    rax,rcx
   14000321e:	ret    
   14000321f:	int3   
   140003220:	cmp    QWORD PTR [rdx+0x18],0x10
   140003225:	mov    r9,QWORD PTR [rdx+0x10]
   140003229:	mov    r8,rdx
   14000322c:	mov    r10,rcx
   14000322f:	jb     0x140003234
   140003231:	mov    r8,QWORD PTR [rdx]
   140003234:	xor    edx,edx
   140003236:	movabs rcx,0xcbf29ce484222325
   140003240:	test   r9,r9
   140003243:	je     0x140003264
   140003245:	movabs r11,0x100000001b3
   14000324f:	nop
   140003250:	movzx  eax,BYTE PTR [r8+rdx*1]
   140003255:	inc    rdx
   140003258:	xor    rcx,rax
   14000325b:	imul   rcx,r11
   14000325f:	cmp    rdx,r9
   140003262:	jb     0x140003250
   140003264:	mov    rdx,QWORD PTR [r10+0x28]
   140003268:	mov    rax,rcx
   14000326b:	shr    rax,0x20
   14000326f:	xor    rax,rcx
   140003272:	and    rax,rdx
   140003275:	cmp    QWORD PTR [r10+0x30],rax
   140003279:	ja     0x140003288
   14000327b:	shr    rdx,1
   14000327e:	or     rcx,0xffffffffffffffff
   140003282:	sub    rcx,rdx
   140003285:	add    rax,rcx
   140003288:	ret    
   140003289:	int3   
   14000328a:	int3   
   14000328b:	int3   
   14000328c:	int3   
   14000328d:	int3   
   14000328e:	int3   
   14000328f:	int3   
   140003290:	sub    rsp,0x28
   140003294:	mov    r8,QWORD PTR [rcx+0x8]
   140003298:	movabs rax,0x333333333333332
   1400032a2:	sub    rax,r8
   1400032a5:	cmp    rax,rdx
   1400032a8:	jae    0x1400032b8
   1400032aa:	lea    rcx,[rip+0x453f]        # 0x1400077f0
   1400032b1:	call   QWORD PTR [rip+0x3da9]        # 0x140007060
   1400032b7:	int3   
   1400032b8:	lea    rax,[r8+rdx*1]
   1400032bc:	mov    QWORD PTR [rcx+0x8],rax
   1400032c0:	add    rsp,0x28
   1400032c4:	ret    
   1400032c5:	int3   
   1400032c6:	int3   
   1400032c7:	int3   
   1400032c8:	int3   
   1400032c9:	int3   
   1400032ca:	int3   
   1400032cb:	int3   
   1400032cc:	int3   
   1400032cd:	int3   
   1400032ce:	int3   
   1400032cf:	int3   
   1400032d0:	mov    QWORD PTR [rsp+0x18],rbx
   1400032d5:	push   rdi
   1400032d6:	sub    rsp,0x30
   1400032da:	mov    rax,QWORD PTR [rcx]
   1400032dd:	mov    r8,QWORD PTR [rcx+0x10]
   1400032e1:	mov    rbx,rcx
   1400032e4:	add    rcx,0x10
   1400032e8:	mov    QWORD PTR [rsp+0x40],rax
   1400032ed:	mov    rdi,rdx
   1400032f0:	lea    rax,[rsp+0x40]
   1400032f5:	lea    r9,[rdx+rdx*1]
   1400032f9:	lea    rdx,[rsp+0x48]
   1400032fe:	mov    QWORD PTR [rsp+0x20],rax
   140003303:	mov    QWORD PTR [rcx+0x8],r8
   140003307:	call   0x140003390
   14000330c:	lea    rax,[rdi-0x1]
   140003310:	mov    QWORD PTR [rbx+0x30],rdi
   140003314:	mov    QWORD PTR [rbx+0x28],rax
   140003318:	mov    rbx,QWORD PTR [rsp+0x50]
   14000331d:	add    rsp,0x30
   140003321:	pop    rdi
   140003322:	ret    
   140003323:	int3   
   140003324:	int3   
   140003325:	int3   
   140003326:	int3   
   140003327:	int3   
   140003328:	int3   
   140003329:	int3   
   14000332a:	int3   
   14000332b:	int3   
   14000332c:	int3   
   14000332d:	int3   
   14000332e:	int3   
   14000332f:	int3   
   140003330:	mov    r10,QWORD PTR [rcx+0x10]
   140003334:	shl    r9,0x4
   140003338:	mov    QWORD PTR [rsp+0x10],rdx
   14000333d:	add    r10,r9
   140003340:	mov    r11,rcx
   140003343:	mov    rax,QWORD PTR [r10]
   140003346:	cmp    rax,QWORD PTR [rcx]
   140003349:	jne    0x14000335d
   14000334b:	mov    QWORD PTR [r10],rdx
   14000334e:	mov    rcx,QWORD PTR [rcx+0x10]
   140003352:	mov    rax,QWORD PTR [rsp+0x10]
   140003357:	mov    QWORD PTR [r9+rcx*1+0x8],rax
   14000335c:	ret    
   14000335d:	cmp    rax,r8
   140003360:	jne    0x140003366
   140003362:	mov    QWORD PTR [r10],rdx
   140003365:	ret    
   140003366:	mov    rax,QWORD PTR [r10+0x8]
   14000336a:	mov    rcx,QWORD PTR [rax]
   14000336d:	mov    QWORD PTR [r10+0x8],rcx
   140003371:	cmp    rcx,QWORD PTR [rsp+0x10]
   140003376:	je     0x14000338a
   140003378:	mov    rdx,QWORD PTR [r11+0x10]
   14000337c:	mov    rax,QWORD PTR [rdx+r9*1+0x8]
   140003381:	mov    rcx,QWORD PTR [rax+0x8]
   140003385:	mov    QWORD PTR [rdx+r9*1+0x8],rcx
   14000338a:	ret    
   14000338b:	int3   
   14000338c:	int3   
   14000338d:	int3   
   14000338e:	int3   
   14000338f:	int3   
   140003390:	mov    QWORD PTR [rsp+0x18],r8
   140003395:	mov    QWORD PTR [rsp+0x10],rdx
   14000339a:	push   rbx
   14000339b:	push   rsi
   14000339c:	push   rdi
   14000339d:	push   r12
   14000339f:	push   r13
   1400033a1:	push   r14
   1400033a3:	push   r15
   1400033a5:	sub    rsp,0x40
   1400033a9:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   1400033b2:	mov    rdi,r9
   1400033b5:	mov    r12,r8
   1400033b8:	mov    r15,rcx
   1400033bb:	mov    rcx,QWORD PTR [rcx]
   1400033be:	mov    r13,r8
   1400033c1:	sub    r13,rcx
   1400033c4:	sar    r13,0x3
   1400033c8:	test   r9,r9
   1400033cb:	je     0x1400036b8
   1400033d1:	mov    rbx,QWORD PTR [r15+0x10]
   1400033d5:	mov    r14,QWORD PTR [r15+0x8]
   1400033d9:	mov    rax,rbx
   1400033dc:	sub    rax,r14
   1400033df:	sar    rax,0x3
   1400033e3:	cmp    rax,r9
   1400033e6:	jae    0x14000354d
   1400033ec:	sub    r14,rcx
   1400033ef:	sar    r14,0x3
   1400033f3:	movabs r8,0x1fffffffffffffff
   1400033fd:	mov    rax,r8
   140003400:	sub    rax,r14
   140003403:	cmp    rax,r9
   140003406:	jae    0x140003416
   140003408:	lea    rcx,[rip+0x43c9]        # 0x1400077d8
   14000340f:	call   QWORD PTR [rip+0x3c4b]        # 0x140007060
   140003415:	int3   
   140003416:	lea    rdx,[r14+r9*1]
   14000341a:	sub    rbx,rcx
   14000341d:	sar    rbx,0x3
   140003421:	mov    rcx,rbx
   140003424:	shr    rcx,1
   140003427:	mov    rax,r8
   14000342a:	sub    rax,rcx
   14000342d:	cmp    rax,rbx
   140003430:	jae    0x140003438
   140003432:	xor    esi,esi
   140003434:	mov    ebx,esi
   140003436:	jmp    0x14000343d
   140003438:	add    rbx,rcx
   14000343b:	xor    esi,esi
   14000343d:	cmp    rbx,rdx
   140003440:	cmovb  rbx,rdx
   140003444:	mov    r14,rsi
   140003447:	mov    QWORD PTR [rsp+0x98],rsi
   14000344f:	test   rbx,rbx
   140003452:	je     0x140003487
   140003454:	cmp    rbx,r8
   140003457:	ja     0x140003480
   140003459:	lea    rcx,[rbx*8+0x0]
   140003461:	call   0x140005512
   140003466:	mov    r14,rax
   140003469:	mov    QWORD PTR [rsp+0x98],rax
   140003471:	test   rax,rax
   140003474:	je     0x140003480
   140003476:	mov    r12,QWORD PTR [rsp+0x90]
   14000347e:	jmp    0x140003487
   140003480:	call   QWORD PTR [rip+0x3be2]        # 0x140007068
   140003486:	int3   
   140003487:	sub    r12,QWORD PTR [r15]
   14000348a:	sar    r12,0x3
   14000348e:	lea    rcx,[r14+r12*8]
   140003492:	movzx  eax,BYTE PTR [rsp+0x90]
   14000349a:	mov    BYTE PTR [rsp+0x28],al
   14000349e:	mov    QWORD PTR [rsp+0x20],rsi
   1400034a3:	lea    r9,[rsp+0x80]
   1400034ab:	mov    r8,QWORD PTR [rsp+0xa0]
   1400034b3:	mov    rdx,rdi
   1400034b6:	call   0x140001620
   1400034bb:	movzx  eax,BYTE PTR [rsp+0x90]
   1400034c3:	mov    BYTE PTR [rsp+0x28],al
   1400034c7:	mov    QWORD PTR [rsp+0x20],rsi
   1400034cc:	lea    r9,[rsp+0x80]
   1400034d4:	mov    r8,r14
   1400034d7:	mov    rdx,QWORD PTR [rsp+0x90]
   1400034df:	mov    rcx,QWORD PTR [r15]
   1400034e2:	call   0x140001670
   1400034e7:	lea    rax,[r12+rdi*1]
   1400034eb:	lea    r8,[r14+rax*8]
   1400034ef:	movzx  eax,BYTE PTR [rsp+0x90]
   1400034f7:	mov    BYTE PTR [rsp+0x28],al
   1400034fb:	mov    QWORD PTR [rsp+0x20],rsi
   140003500:	lea    r9,[rsp+0x80]
   140003508:	mov    rdx,QWORD PTR [r15+0x8]
   14000350c:	mov    rcx,QWORD PTR [rsp+0x90]
   140003514:	call   0x140001670
   140003519:	nop
   14000351a:	mov    rcx,QWORD PTR [r15]
   14000351d:	mov    rax,QWORD PTR [r15+0x8]
   140003521:	sub    rax,rcx
   140003524:	sar    rax,0x3
   140003528:	add    rdi,rax
   14000352b:	test   rcx,rcx
   14000352e:	je     0x140003535
   140003530:	call   0x140005518
   140003535:	lea    rax,[r14+rbx*8]
   140003539:	mov    QWORD PTR [r15+0x10],rax
   14000353d:	lea    rax,[r14+rdi*8]
   140003541:	mov    QWORD PTR [r15+0x8],rax
   140003545:	mov    QWORD PTR [r15],r14
   140003548:	jmp    0x1400036b8
   14000354d:	mov    rax,r14
   140003550:	sub    rax,r8
   140003553:	sar    rax,0x3
   140003557:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000355f:	xor    esi,esi
   140003561:	mov    rdx,r14
   140003564:	mov    rbx,QWORD PTR [rbx]
   140003567:	cmp    rax,r9
   14000356a:	jae    0x140003634
   140003570:	mov    QWORD PTR [rsp+0x98],rbx
   140003578:	lea    rax,[r9*8+0x0]
   140003580:	mov    QWORD PTR [rsp+0x30],rax
   140003585:	add    r8,rax
   140003588:	movzx  eax,BYTE PTR [rsp+0x90]
   140003590:	mov    BYTE PTR [rsp+0x28],al
   140003594:	mov    QWORD PTR [rsp+0x20],rsi
   140003599:	lea    r9,[rsp+0x80]
   1400035a1:	mov    rcx,r12
   1400035a4:	call   0x140001670
   1400035a9:	nop
   1400035aa:	mov    rcx,QWORD PTR [r15+0x8]
   1400035ae:	mov    rax,rcx
   1400035b1:	sub    rax,QWORD PTR [rsp+0x90]
   1400035b9:	sar    rax,0x3
   1400035bd:	sub    rdi,rax
   1400035c0:	movzx  eax,BYTE PTR [rsp+0x90]
   1400035c8:	mov    BYTE PTR [rsp+0x28],al
   1400035cc:	mov    QWORD PTR [rsp+0x20],rsi
   1400035d1:	lea    r9,[rsp+0x80]
   1400035d9:	lea    r8,[rsp+0x98]
   1400035e1:	mov    rdx,rdi
   1400035e4:	call   0x140001620
   1400035e9:	nop
   1400035ea:	mov    rcx,QWORD PTR [rsp+0x30]
   1400035ef:	add    QWORD PTR [r15+0x8],rcx
   1400035f3:	mov    rax,QWORD PTR [r15+0x8]
   1400035f7:	sub    rax,rcx
   1400035fa:	mov    rcx,QWORD PTR [rsp+0x90]
   140003602:	mov    rdx,rax
   140003605:	sub    rdx,rcx
   140003608:	add    rdx,0x7
   14000360c:	shr    rdx,0x3
   140003610:	cmp    rcx,rax
   140003613:	cmova  rdx,rsi
   140003617:	test   rdx,rdx
   14000361a:	je     0x1400036b8
   140003620:	mov    QWORD PTR [rcx],rbx
   140003623:	lea    rcx,[rcx+0x8]
   140003627:	inc    rsi
   14000362a:	cmp    rsi,rdx
   14000362d:	jne    0x140003620
   14000362f:	jmp    0x1400036b8
   140003634:	lea    r12,[r9*8+0x0]
   14000363c:	mov    rdi,r14
   14000363f:	sub    rdi,r12
   140003642:	movzx  eax,BYTE PTR [rsp+0x90]
   14000364a:	mov    BYTE PTR [rsp+0x28],al
   14000364e:	mov    QWORD PTR [rsp+0x20],rsi
   140003653:	lea    r9,[rsp+0x80]
   14000365b:	mov    r8,r14
   14000365e:	mov    rcx,rdi
   140003661:	call   0x140001670
   140003666:	mov    QWORD PTR [r15+0x8],rax
   14000366a:	mov    rdx,QWORD PTR [rsp+0x90]
   140003672:	cmp    rdx,rdi
   140003675:	je     0x140003698
   140003677:	sub    r14,rdi
   14000367a:	nop    WORD PTR [rax+rax*1+0x0]
   140003680:	sub    rdi,0x8
   140003684:	mov    rax,QWORD PTR [rdi]
   140003687:	mov    QWORD PTR [rdi+r14*1],rax
   14000368b:	mov    rdx,QWORD PTR [rsp+0x90]
   140003693:	cmp    rdx,rdi
   140003696:	jne    0x140003680
   140003698:	lea    rax,[r12+rdx*1]
   14000369c:	cmp    rdx,rax
   14000369f:	je     0x1400036b8
   1400036a1:	mov    QWORD PTR [rdx],rbx
   1400036a4:	add    rdx,0x8
   1400036a8:	mov    rcx,QWORD PTR [rsp+0x90]
   1400036b0:	add    rcx,r12
   1400036b3:	cmp    rdx,rcx
   1400036b6:	jne    0x1400036a1
   1400036b8:	mov    rax,QWORD PTR [r15]
   1400036bb:	lea    rcx,[rax+r13*8]
   1400036bf:	mov    rax,QWORD PTR [rsp+0x88]
   1400036c7:	mov    QWORD PTR [rax],rcx
   1400036ca:	add    rsp,0x40
   1400036ce:	pop    r15
   1400036d0:	pop    r14
   1400036d2:	pop    r13
   1400036d4:	pop    r12
   1400036d6:	pop    rdi
   1400036d7:	pop    rsi
   1400036d8:	pop    rbx
   1400036d9:	ret    
   1400036da:	int3   
   1400036db:	int3   
   1400036dc:	int3   
   1400036dd:	int3   
   1400036de:	int3   
   1400036df:	int3   
   1400036e0:	test   rdx,rdx
   1400036e3:	je     0x14000371a
   1400036e5:	mov    rax,QWORD PTR [rcx+0x18]
   1400036e9:	cmp    rax,0x10
   1400036ed:	jb     0x1400036f4
   1400036ef:	mov    r8,QWORD PTR [rcx]
   1400036f2:	jmp    0x1400036f7
   1400036f4:	mov    r8,rcx
   1400036f7:	cmp    rdx,r8
   1400036fa:	jb     0x14000371a
   1400036fc:	cmp    rax,0x10
   140003700:	jb     0x140003707
   140003702:	mov    r8,QWORD PTR [rcx]
   140003705:	jmp    0x14000370a
   140003707:	mov    r8,rcx
   14000370a:	mov    rax,QWORD PTR [rcx+0x10]
   14000370e:	lea    rcx,[r8+rax*1]
   140003712:	cmp    rcx,rdx
   140003715:	jbe    0x14000371a
   140003717:	mov    al,0x1
   140003719:	ret    
   14000371a:	xor    al,al
   14000371c:	ret    
   14000371d:	int3   
   14000371e:	int3   
   14000371f:	int3   
   140003720:	test   rdx,rdx
   140003723:	je     0x14000375a
   140003725:	mov    rax,QWORD PTR [rcx+0x18]
   140003729:	cmp    rax,0x8
   14000372d:	jb     0x140003734
   14000372f:	mov    r8,QWORD PTR [rcx]
   140003732:	jmp    0x140003737
   140003734:	mov    r8,rcx
   140003737:	cmp    rdx,r8
   14000373a:	jb     0x14000375a
   14000373c:	cmp    rax,0x8
   140003740:	jb     0x140003747
   140003742:	mov    r8,QWORD PTR [rcx]
   140003745:	jmp    0x14000374a
   140003747:	mov    r8,rcx
   14000374a:	mov    rax,QWORD PTR [rcx+0x10]
   14000374e:	lea    rcx,[r8+rax*2]
   140003752:	cmp    rcx,rdx
   140003755:	jbe    0x14000375a
   140003757:	mov    al,0x1
   140003759:	ret    
   14000375a:	xor    al,al
   14000375c:	ret    
   14000375d:	int3   
   14000375e:	int3   
   14000375f:	int3   
   140003760:	mov    QWORD PTR [rdx],r8
   140003763:	mov    rax,rdx
   140003766:	ret    
   140003767:	int3   
   140003768:	int3   
   140003769:	int3   
   14000376a:	int3   
   14000376b:	int3   
   14000376c:	int3   
   14000376d:	int3   
   14000376e:	int3   
   14000376f:	int3   
   140003770:	mov    QWORD PTR [rdx],r8
   140003773:	mov    rax,rdx
   140003776:	ret    
   140003777:	int3   
   140003778:	int3   
   140003779:	int3   
   14000377a:	int3   
   14000377b:	int3   
   14000377c:	int3   
   14000377d:	int3   
   14000377e:	int3   
   14000377f:	int3   
   140003780:	mov    QWORD PTR [rdx],r8
   140003783:	mov    rax,rdx
   140003786:	ret    
   140003787:	int3   
   140003788:	int3   
   140003789:	int3   
   14000378a:	int3   
   14000378b:	int3   
   14000378c:	int3   
   14000378d:	int3   
   14000378e:	int3   
   14000378f:	int3   
   140003790:	mov    rax,QWORD PTR [rcx]
   140003793:	ret    
   140003794:	int3   
   140003795:	int3   
   140003796:	int3   
   140003797:	int3   
   140003798:	int3   
   140003799:	int3   
   14000379a:	int3   
   14000379b:	int3   
   14000379c:	int3   
   14000379d:	int3   
   14000379e:	int3   
   14000379f:	int3   
   1400037a0:	cmp    QWORD PTR [rcx+0x18],0x10
   1400037a5:	jb     0x1400037ab
   1400037a7:	mov    rax,QWORD PTR [rcx]
   1400037aa:	ret    
   1400037ab:	mov    rax,rcx
   1400037ae:	ret    
   1400037af:	int3   
   1400037b0:	cmp    QWORD PTR [rcx+0x18],0x10
   1400037b5:	jb     0x1400037bb
   1400037b7:	mov    rax,QWORD PTR [rcx]
   1400037ba:	ret    
   1400037bb:	mov    rax,rcx
   1400037be:	ret    
   1400037bf:	int3   
   1400037c0:	cmp    QWORD PTR [rcx+0x18],0x8
   1400037c5:	jb     0x1400037cb
   1400037c7:	mov    rax,QWORD PTR [rcx]
   1400037ca:	ret    
   1400037cb:	mov    rax,rcx
   1400037ce:	ret    
   1400037cf:	int3   
   1400037d0:	cmp    QWORD PTR [rcx+0x18],0x8
   1400037d5:	jb     0x1400037db
   1400037d7:	mov    rax,QWORD PTR [rcx]
   1400037da:	ret    
   1400037db:	mov    rax,rcx
   1400037de:	ret    
   1400037df:	int3   
   1400037e0:	lea    rax,[rcx+0x10]
   1400037e4:	ret    
   1400037e5:	int3   
   1400037e6:	int3   
   1400037e7:	int3   
   1400037e8:	int3   
   1400037e9:	int3   
   1400037ea:	int3   
   1400037eb:	int3   
   1400037ec:	int3   
   1400037ed:	int3   
   1400037ee:	int3   
   1400037ef:	int3   
   1400037f0:	mov    rax,rcx
   1400037f3:	ret    
   1400037f4:	int3   
   1400037f5:	int3   
   1400037f6:	int3   
   1400037f7:	int3   
   1400037f8:	int3   
   1400037f9:	int3   
   1400037fa:	int3   
   1400037fb:	int3   
   1400037fc:	int3   
   1400037fd:	int3   
   1400037fe:	int3   
   1400037ff:	int3   
   140003800:	ret    0x0
   140003803:	int3   
   140003804:	int3   
   140003805:	int3   
   140003806:	int3   
   140003807:	int3   
   140003808:	int3   
   140003809:	int3   
   14000380a:	int3   
   14000380b:	int3   
   14000380c:	int3   
   14000380d:	int3   
   14000380e:	int3   
   14000380f:	int3   
   140003810:	lea    rax,[rcx+0x8]
   140003814:	ret    
   140003815:	int3   
   140003816:	int3   
   140003817:	int3   
   140003818:	int3   
   140003819:	int3   
   14000381a:	int3   
   14000381b:	int3   
   14000381c:	int3   
   14000381d:	int3   
   14000381e:	int3   
   14000381f:	int3   
   140003820:	rex push rsi
   140003822:	sub    rsp,0x30
   140003826:	mov    rax,QWORD PTR [rcx]
   140003829:	mov    rsi,rcx
   14000382c:	cmp    QWORD PTR [rax],rax
   14000382f:	je     0x140003869
   140003831:	mov    QWORD PTR [rsp+0x40],rbx
   140003836:	mov    QWORD PTR [rsp+0x48],rdi
   14000383b:	mov    rdi,QWORD PTR [rax+0x8]
   14000383f:	nop
   140003840:	mov    rbx,QWORD PTR [rsi]
   140003843:	lea    rdx,[rsp+0x20]
   140003848:	mov    rcx,rsi
   14000384b:	mov    rbx,QWORD PTR [rbx]
   14000384e:	mov    r9,rbx
   140003851:	lea    r8,[rbx+0x10]
   140003855:	call   0x1400012f0
   14000385a:	cmp    rbx,rdi
   14000385d:	jne    0x140003840
   14000385f:	mov    rdi,QWORD PTR [rsp+0x48]
   140003864:	mov    rbx,QWORD PTR [rsp+0x40]
   140003869:	add    rsp,0x30
   14000386d:	pop    rsi
   14000386e:	ret    
   14000386f:	int3   
   140003870:	mov    QWORD PTR [rsp+0x10],rbx
   140003875:	push   rdi
   140003876:	sub    rsp,0x20
   14000387a:	mov    rdi,r8
   14000387d:	mov    rbx,rcx
   140003880:	test   dl,dl
   140003882:	je     0x1400038ad
   140003884:	cmp    QWORD PTR [rcx+0x18],0x10
   140003889:	jb     0x1400038ad
   14000388b:	mov    QWORD PTR [rsp+0x30],rsi
   140003890:	mov    rsi,QWORD PTR [rcx]
   140003893:	test   r8,r8
   140003896:	je     0x1400038a0
   140003898:	mov    rdx,rsi
   14000389b:	call   0x1400056c4
   1400038a0:	mov    rcx,rsi
   1400038a3:	call   0x140005518
   1400038a8:	mov    rsi,QWORD PTR [rsp+0x30]
   1400038ad:	mov    QWORD PTR [rbx+0x18],0xf
   1400038b5:	mov    QWORD PTR [rbx+0x10],rdi
   1400038b9:	mov    BYTE PTR [rdi+rbx*1],0x0
   1400038bd:	mov    rbx,QWORD PTR [rsp+0x38]
   1400038c2:	add    rsp,0x20
   1400038c6:	pop    rdi
   1400038c7:	ret    
   1400038c8:	int3   
   1400038c9:	int3   
   1400038ca:	int3   
   1400038cb:	int3   
   1400038cc:	int3   
   1400038cd:	int3   
   1400038ce:	int3   
   1400038cf:	int3   
   1400038d0:	mov    QWORD PTR [rsp+0x10],rbx
   1400038d5:	push   rdi
   1400038d6:	sub    rsp,0x20
   1400038da:	mov    rdi,r8
   1400038dd:	mov    rbx,rcx
   1400038e0:	test   dl,dl
   1400038e2:	je     0x140003910
   1400038e4:	cmp    QWORD PTR [rcx+0x18],0x8
   1400038e9:	jb     0x140003910
   1400038eb:	mov    QWORD PTR [rsp+0x30],rsi
   1400038f0:	mov    rsi,QWORD PTR [rcx]
   1400038f3:	test   r8,r8
   1400038f6:	je     0x140003903
   1400038f8:	add    r8,r8
   1400038fb:	mov    rdx,rsi
   1400038fe:	call   0x1400056c4
   140003903:	mov    rcx,rsi
   140003906:	call   0x140005518
   14000390b:	mov    rsi,QWORD PTR [rsp+0x30]
   140003910:	mov    QWORD PTR [rbx+0x18],0x7
   140003918:	mov    QWORD PTR [rbx+0x10],rdi
   14000391c:	xor    eax,eax
   14000391e:	mov    WORD PTR [rbx+rdi*2],ax
   140003922:	mov    rbx,QWORD PTR [rsp+0x38]
   140003927:	add    rsp,0x20
   14000392b:	pop    rdi
   14000392c:	ret    
   14000392d:	int3   
   14000392e:	int3   
   14000392f:	int3   
   140003930:	jmp    0x140004410
   140003935:	int3   
   140003936:	int3   
   140003937:	int3   
   140003938:	int3   
   140003939:	int3   
   14000393a:	int3   
   14000393b:	int3   
   14000393c:	int3   
   14000393d:	int3   
   14000393e:	int3   
   14000393f:	int3   
   140003940:	rex push rbx
   140003942:	sub    rsp,0x20
   140003946:	mov    rbx,rcx
   140003949:	mov    rcx,QWORD PTR [rcx]
   14000394c:	test   rcx,rcx
   14000394f:	je     0x140003963
   140003951:	call   0x140005518
   140003956:	xor    eax,eax
   140003958:	mov    QWORD PTR [rbx],rax
   14000395b:	mov    QWORD PTR [rbx+0x8],rax
   14000395f:	mov    QWORD PTR [rbx+0x10],rax
   140003963:	add    rsp,0x20
   140003967:	pop    rbx
   140003968:	ret    
   140003969:	int3   
   14000396a:	int3   
   14000396b:	int3   
   14000396c:	int3   
   14000396d:	int3   
   14000396e:	int3   
   14000396f:	int3   
   140003970:	mov    QWORD PTR [rsp+0x8],rbx
   140003975:	push   rdi
   140003976:	sub    rsp,0x30
   14000397a:	movzx  eax,BYTE PTR [rsp+0x48]
   14000397f:	mov    r10,r9
   140003982:	mov    rdi,r8
   140003985:	mov    rbx,rdx
   140003988:	mov    BYTE PTR [rsp+0x28],al
   14000398c:	lea    r9,[rsp+0x48]
   140003991:	mov    r8,r10
   140003994:	mov    rdx,rdi
   140003997:	mov    rcx,rbx
   14000399a:	mov    QWORD PTR [rsp+0x20],0x0
   1400039a3:	call   0x140001620
   1400039a8:	lea    rax,[rbx+rdi*8]
   1400039ac:	mov    rbx,QWORD PTR [rsp+0x40]
   1400039b1:	add    rsp,0x30
   1400039b5:	pop    rdi
   1400039b6:	ret    
   1400039b7:	int3   
   1400039b8:	int3   
   1400039b9:	int3   
   1400039ba:	int3   
   1400039bb:	int3   
   1400039bc:	int3   
   1400039bd:	int3   
   1400039be:	int3   
   1400039bf:	int3   
   1400039c0:	mov    rax,QWORD PTR [rcx]
   1400039c3:	mov    rcx,QWORD PTR [rax]
   1400039c6:	mov    rax,rdx
   1400039c9:	mov    QWORD PTR [rdx],rcx
   1400039cc:	ret    
   1400039cd:	int3   
   1400039ce:	int3   
   1400039cf:	int3   
   1400039d0:	mov    rax,QWORD PTR [rcx]
   1400039d3:	mov    rcx,QWORD PTR [rax]
   1400039d6:	mov    rax,rdx
   1400039d9:	mov    QWORD PTR [rdx],rcx
   1400039dc:	ret    
   1400039dd:	int3   
   1400039de:	int3   
   1400039df:	int3   
   1400039e0:	mov    rax,QWORD PTR [rcx]
   1400039e3:	mov    QWORD PTR [rdx],rax
   1400039e6:	mov    rax,rdx
   1400039e9:	ret    
   1400039ea:	int3   
   1400039eb:	int3   
   1400039ec:	int3   
   1400039ed:	int3   
   1400039ee:	int3   
   1400039ef:	int3   
   1400039f0:	mov    rax,QWORD PTR [rcx]
   1400039f3:	mov    QWORD PTR [rdx],rax
   1400039f6:	mov    rax,rdx
   1400039f9:	ret    
   1400039fa:	int3   
   1400039fb:	int3   
   1400039fc:	int3   
   1400039fd:	int3   
   1400039fe:	int3   
   1400039ff:	int3   
   140003a00:	mov    QWORD PTR [rsp+0x10],rdx
   140003a05:	mov    r11,rsp
   140003a08:	mov    QWORD PTR [r11+0x20],r9
   140003a0c:	mov    QWORD PTR [r11+0x18],r8
   140003a10:	mov    rax,QWORD PTR [r8+0x8]
   140003a14:	mov    QWORD PTR [rax],r9
   140003a17:	mov    rax,QWORD PTR [r11+0x20]
   140003a1b:	mov    rcx,QWORD PTR [rax+0x8]
   140003a1f:	mov    rax,QWORD PTR [r11+0x10]
   140003a23:	mov    QWORD PTR [rcx],rax
   140003a26:	mov    rax,QWORD PTR [r11+0x10]
   140003a2a:	mov    rcx,QWORD PTR [rax+0x8]
   140003a2e:	mov    rax,QWORD PTR [r11+0x18]
   140003a32:	mov    QWORD PTR [rcx],rax
   140003a35:	mov    rax,QWORD PTR [r11+0x20]
   140003a39:	mov    rdx,QWORD PTR [r11+0x10]
   140003a3d:	mov    rcx,QWORD PTR [rax+0x8]
   140003a41:	mov    r8,QWORD PTR [rdx+0x8]
   140003a45:	mov    QWORD PTR [rdx+0x8],rcx
   140003a49:	mov    rax,QWORD PTR [r11+0x18]
   140003a4d:	mov    rcx,QWORD PTR [rax+0x8]
   140003a51:	mov    rax,QWORD PTR [r11+0x20]
   140003a55:	mov    QWORD PTR [rax+0x8],rcx
   140003a59:	mov    rax,QWORD PTR [r11+0x18]
   140003a5d:	mov    QWORD PTR [rax+0x8],r8
   140003a61:	ret    
   140003a62:	int3   
   140003a63:	int3   
   140003a64:	int3   
   140003a65:	int3   
   140003a66:	int3   
   140003a67:	int3   
   140003a68:	int3   
   140003a69:	int3   
   140003a6a:	int3   
   140003a6b:	int3   
   140003a6c:	int3   
   140003a6d:	int3   
   140003a6e:	int3   
   140003a6f:	int3   
   140003a70:	mov    r8,QWORD PTR [rdx+0x8]
   140003a74:	mov    rax,rdx
   140003a77:	mov    rdx,QWORD PTR [rdx]
   140003a7a:	mov    QWORD PTR [r8],rdx
   140003a7d:	mov    r8,QWORD PTR [rax]
   140003a80:	mov    rdx,QWORD PTR [rax+0x8]
   140003a84:	mov    QWORD PTR [r8+0x8],rdx
   140003a88:	dec    QWORD PTR [rcx+0x8]
   140003a8c:	ret    
   140003a8d:	int3   
   140003a8e:	int3   
   140003a8f:	int3   
   140003a90:	mov    rax,QWORD PTR [rcx+0x10]
   140003a94:	sub    rax,QWORD PTR [rcx+0x8]
   140003a98:	sar    rax,0x3
   140003a9c:	ret    
   140003a9d:	int3   
   140003a9e:	int3   
   140003a9f:	int3   
   140003aa0:	mov    rax,QWORD PTR [rcx+0x10]
   140003aa4:	shl    rdx,0x4
   140003aa8:	add    rax,0x8
   140003aac:	add    rax,rdx
   140003aaf:	ret    
   140003ab0:	shl    rdx,0x4
   140003ab4:	add    rdx,QWORD PTR [rcx+0x10]
   140003ab8:	mov    rax,rdx
   140003abb:	ret    
   140003abc:	int3   
   140003abd:	int3   
   140003abe:	int3   
   140003abf:	int3   
   140003ac0:	sub    rsp,0x28
   140003ac4:	lea    rcx,[rip+0x3ce5]        # 0x1400077b0
   140003acb:	call   QWORD PTR [rip+0x358f]        # 0x140007060
   140003ad1:	int3   
   140003ad2:	int3   
   140003ad3:	int3   
   140003ad4:	int3   
   140003ad5:	int3   
   140003ad6:	int3   
   140003ad7:	int3   
   140003ad8:	int3   
   140003ad9:	int3   
   140003ada:	int3   
   140003adb:	int3   
   140003adc:	int3   
   140003add:	int3   
   140003ade:	int3   
   140003adf:	int3   
   140003ae0:	sub    rsp,0x28
   140003ae4:	lea    rcx,[rip+0x3cc5]        # 0x1400077b0
   140003aeb:	call   QWORD PTR [rip+0x356f]        # 0x140007060
   140003af1:	int3   
   140003af2:	int3   
   140003af3:	int3   
   140003af4:	int3   
   140003af5:	int3   
   140003af6:	int3   
   140003af7:	int3   
   140003af8:	int3   
   140003af9:	int3   
   140003afa:	int3   
   140003afb:	int3   
   140003afc:	int3   
   140003afd:	int3   
   140003afe:	int3   
   140003aff:	int3   
   140003b00:	sub    rsp,0x28
   140003b04:	lea    rcx,[rip+0x3ccd]        # 0x1400077d8
   140003b0b:	call   QWORD PTR [rip+0x354f]        # 0x140007060
   140003b11:	int3   
   140003b12:	int3   
   140003b13:	int3   
   140003b14:	int3   
   140003b15:	int3   
   140003b16:	int3   
   140003b17:	int3   
   140003b18:	int3   
   140003b19:	int3   
   140003b1a:	int3   
   140003b1b:	int3   
   140003b1c:	int3   
   140003b1d:	int3   
   140003b1e:	int3   
   140003b1f:	int3   
   140003b20:	sub    rsp,0x28
   140003b24:	lea    rcx,[rip+0x3c95]        # 0x1400077c0
   140003b2b:	call   QWORD PTR [rip+0x3527]        # 0x140007058
   140003b31:	int3   
   140003b32:	int3   
   140003b33:	int3   
   140003b34:	int3   
   140003b35:	int3   
   140003b36:	int3   
   140003b37:	int3   
   140003b38:	int3   
   140003b39:	int3   
   140003b3a:	int3   
   140003b3b:	int3   
   140003b3c:	int3   
   140003b3d:	int3   
   140003b3e:	int3   
   140003b3f:	int3   
   140003b40:	sub    rsp,0x28
   140003b44:	lea    rcx,[rip+0x3c75]        # 0x1400077c0
   140003b4b:	call   QWORD PTR [rip+0x3507]        # 0x140007058
   140003b51:	int3   
   140003b52:	int3   
   140003b53:	int3   
   140003b54:	int3   
   140003b55:	int3   
   140003b56:	int3   
   140003b57:	int3   
   140003b58:	int3   
   140003b59:	int3   
   140003b5a:	int3   
   140003b5b:	int3   
   140003b5c:	int3   
   140003b5d:	int3   
   140003b5e:	int3   
   140003b5f:	int3   
   140003b60:	sub    rsp,0x28
   140003b64:	xor    eax,eax
   140003b66:	test   rdx,rdx
   140003b69:	je     0x140003b93
   140003b6b:	movabs rax,0x1fffffffffffffff
   140003b75:	cmp    rdx,rax
   140003b78:	ja     0x140003b8c
   140003b7a:	lea    rcx,[rdx*8+0x0]
   140003b82:	call   0x140005512
   140003b87:	test   rax,rax
   140003b8a:	jne    0x140003b93
   140003b8c:	call   QWORD PTR [rip+0x34d6]        # 0x140007068
   140003b92:	int3   
   140003b93:	add    rsp,0x28
   140003b97:	ret    
   140003b98:	int3   
   140003b99:	int3   
   140003b9a:	int3   
   140003b9b:	int3   
   140003b9c:	int3   
   140003b9d:	int3   
   140003b9e:	int3   
   140003b9f:	int3   
   140003ba0:	sub    rsp,0x28
   140003ba4:	xor    eax,eax
   140003ba6:	test   rdx,rdx
   140003ba9:	je     0x140003bc5
   140003bab:	cmp    rdx,0xffffffffffffffff
   140003baf:	ja     0x140003bbe
   140003bb1:	mov    rcx,rdx
   140003bb4:	call   0x140005512
   140003bb9:	test   rax,rax
   140003bbc:	jne    0x140003bc5
   140003bbe:	call   QWORD PTR [rip+0x34a4]        # 0x140007068
   140003bc4:	int3   
   140003bc5:	add    rsp,0x28
   140003bc9:	ret    
   140003bca:	int3   
   140003bcb:	int3   
   140003bcc:	int3   
   140003bcd:	int3   
   140003bce:	int3   
   140003bcf:	int3   
   140003bd0:	sub    rsp,0x28
   140003bd4:	xor    eax,eax
   140003bd6:	test   rdx,rdx
   140003bd9:	je     0x140003c03
   140003bdb:	movabs rax,0x333333333333333
   140003be5:	cmp    rdx,rax
   140003be8:	ja     0x140003bfc
   140003bea:	lea    rcx,[rdx+rdx*4]
   140003bee:	shl    rcx,0x4
   140003bf2:	call   0x140005512
   140003bf7:	test   rax,rax
   140003bfa:	jne    0x140003c03
   140003bfc:	call   QWORD PTR [rip+0x3466]        # 0x140007068
   140003c02:	int3   
   140003c03:	add    rsp,0x28
   140003c07:	ret    
   140003c08:	int3   
   140003c09:	int3   
   140003c0a:	int3   
   140003c0b:	int3   
   140003c0c:	int3   
   140003c0d:	int3   
   140003c0e:	int3   
   140003c0f:	int3   
   140003c10:	sub    rsp,0x28
   140003c14:	xor    eax,eax
   140003c16:	test   rdx,rdx
   140003c19:	je     0x140003c43
   140003c1b:	movabs rax,0x1fffffffffffffff
   140003c25:	cmp    rdx,rax
   140003c28:	ja     0x140003c3c
   140003c2a:	lea    rcx,[rdx*8+0x0]
   140003c32:	call   0x140005512
   140003c37:	test   rax,rax
   140003c3a:	jne    0x140003c43
   140003c3c:	call   QWORD PTR [rip+0x3426]        # 0x140007068
   140003c42:	int3   
   140003c43:	add    rsp,0x28
   140003c47:	ret    
   140003c48:	int3   
   140003c49:	int3   
   140003c4a:	int3   
   140003c4b:	int3   
   140003c4c:	int3   
   140003c4d:	int3   
   140003c4e:	int3   
   140003c4f:	int3   
   140003c50:	sub    rsp,0x28
   140003c54:	xor    eax,eax
   140003c56:	test   rdx,rdx
   140003c59:	je     0x140003c7f
   140003c5b:	movabs rax,0x7fffffffffffffff
   140003c65:	cmp    rdx,rax
   140003c68:	ja     0x140003c78
   140003c6a:	lea    rcx,[rdx+rdx*1]
   140003c6e:	call   0x140005512
   140003c73:	test   rax,rax
   140003c76:	jne    0x140003c7f
   140003c78:	call   QWORD PTR [rip+0x33ea]        # 0x140007068
   140003c7e:	int3   
   140003c7f:	add    rsp,0x28
   140003c83:	ret    
   140003c84:	int3   
   140003c85:	int3   
   140003c86:	int3   
   140003c87:	int3   
   140003c88:	int3   
   140003c89:	int3   
   140003c8a:	int3   
   140003c8b:	int3   
   140003c8c:	int3   
   140003c8d:	int3   
   140003c8e:	int3   
   140003c8f:	int3   
   140003c90:	sub    rsp,0x28
   140003c94:	xor    eax,eax
   140003c96:	test   rdx,rdx
   140003c99:	je     0x140003cb5
   140003c9b:	cmp    rdx,0xffffffffffffffff
   140003c9f:	ja     0x140003cae
   140003ca1:	mov    rcx,rdx
   140003ca4:	call   0x140005512
   140003ca9:	test   rax,rax
   140003cac:	jne    0x140003cb5
   140003cae:	call   QWORD PTR [rip+0x33b4]        # 0x140007068
   140003cb4:	int3   
   140003cb5:	add    rsp,0x28
   140003cb9:	ret    
   140003cba:	int3   
   140003cbb:	int3   
   140003cbc:	int3   
   140003cbd:	int3   
   140003cbe:	int3   
   140003cbf:	int3   
   140003cc0:	sub    rsp,0x28
   140003cc4:	xor    eax,eax
   140003cc6:	test   rdx,rdx
   140003cc9:	je     0x140003cf3
   140003ccb:	movabs rax,0x333333333333333
   140003cd5:	cmp    rdx,rax
   140003cd8:	ja     0x140003cec
   140003cda:	lea    rcx,[rdx+rdx*4]
   140003cde:	shl    rcx,0x4
   140003ce2:	call   0x140005512
   140003ce7:	test   rax,rax
   140003cea:	jne    0x140003cf3
   140003cec:	call   QWORD PTR [rip+0x3376]        # 0x140007068
   140003cf2:	int3   
   140003cf3:	add    rsp,0x28
   140003cf7:	ret    
   140003cf8:	int3   
   140003cf9:	int3   
   140003cfa:	int3   
   140003cfb:	int3   
   140003cfc:	int3   
   140003cfd:	int3   
   140003cfe:	int3   
   140003cff:	int3   
   140003d00:	sub    rsp,0x28
   140003d04:	xor    eax,eax
   140003d06:	test   rdx,rdx
   140003d09:	je     0x140003d33
   140003d0b:	movabs rax,0x1fffffffffffffff
   140003d15:	cmp    rdx,rax
   140003d18:	ja     0x140003d2c
   140003d1a:	lea    rcx,[rdx*8+0x0]
   140003d22:	call   0x140005512
   140003d27:	test   rax,rax
   140003d2a:	jne    0x140003d33
   140003d2c:	call   QWORD PTR [rip+0x3336]        # 0x140007068
   140003d32:	int3   
   140003d33:	add    rsp,0x28
   140003d37:	ret    
   140003d38:	int3   
   140003d39:	int3   
   140003d3a:	int3   
   140003d3b:	int3   
   140003d3c:	int3   
   140003d3d:	int3   
   140003d3e:	int3   
   140003d3f:	int3   
   140003d40:	sub    rsp,0x28
   140003d44:	xor    eax,eax
   140003d46:	test   rdx,rdx
   140003d49:	je     0x140003d6f
   140003d4b:	movabs rax,0x7fffffffffffffff
   140003d55:	cmp    rdx,rax
   140003d58:	ja     0x140003d68
   140003d5a:	lea    rcx,[rdx+rdx*1]
   140003d5e:	call   0x140005512
   140003d63:	test   rax,rax
   140003d66:	jne    0x140003d6f
   140003d68:	call   QWORD PTR [rip+0x32fa]        # 0x140007068
   140003d6e:	int3   
   140003d6f:	add    rsp,0x28
   140003d73:	ret    
   140003d74:	int3   
   140003d75:	int3   
   140003d76:	int3   
   140003d77:	int3   
   140003d78:	int3   
   140003d79:	int3   
   140003d7a:	int3   
   140003d7b:	int3   
   140003d7c:	int3   
   140003d7d:	int3   
   140003d7e:	int3   
   140003d7f:	int3   
   140003d80:	mov    QWORD PTR [rsp+0x8],rbx
   140003d85:	mov    QWORD PTR [rsp+0x10],rbp
   140003d8a:	mov    QWORD PTR [rsp+0x18],rsi
   140003d8f:	push   rdi
   140003d90:	sub    rsp,0x20
   140003d94:	mov    rdi,QWORD PTR [rdx+0x10]
   140003d98:	mov    rbp,r8
   140003d9b:	mov    rsi,rdx
   140003d9e:	mov    rbx,rcx
   140003da1:	cmp    rdi,r8
   140003da4:	jae    0x140003db4
   140003da6:	lea    rcx,[rip+0x3a13]        # 0x1400077c0
   140003dad:	call   QWORD PTR [rip+0x32a5]        # 0x140007058
   140003db3:	int3   
   140003db4:	sub    rdi,r8
   140003db7:	cmp    r9,rdi
   140003dba:	cmovb  rdi,r9
   140003dbe:	cmp    rcx,rdx
   140003dc1:	jne    0x140003dfc
   140003dc3:	lea    rax,[rdi+r8*1]
   140003dc7:	cmp    QWORD PTR [rcx+0x10],rax
   140003dcb:	jae    0x140003ddb
   140003dcd:	lea    rcx,[rip+0x39ec]        # 0x1400077c0
   140003dd4:	call   QWORD PTR [rip+0x327e]        # 0x140007058
   140003dda:	int3   
   140003ddb:	cmp    QWORD PTR [rcx+0x18],0x10
   140003de0:	mov    QWORD PTR [rcx+0x10],rax
   140003de4:	jb     0x140003de9
   140003de6:	mov    rcx,QWORD PTR [rcx]
   140003de9:	mov    BYTE PTR [rcx+rax*1],0x0
   140003ded:	xor    edx,edx
   140003def:	mov    rcx,rbx
   140003df2:	call   0x1400047f0
   140003df7:	jmp    0x140003e8a
   140003dfc:	cmp    rdi,0xfffffffffffffffe
   140003e00:	jbe    0x140003e10
   140003e02:	lea    rcx,[rip+0x39a7]        # 0x1400077b0
   140003e09:	call   QWORD PTR [rip+0x3251]        # 0x140007060
   140003e0f:	int3   
   140003e10:	mov    rax,QWORD PTR [rcx+0x18]
   140003e14:	cmp    rax,rdi
   140003e17:	jae    0x140003e40
   140003e19:	mov    r8,QWORD PTR [rcx+0x10]
   140003e1d:	mov    rdx,rdi
   140003e20:	call   0x140002bf0
   140003e25:	test   rdi,rdi
   140003e28:	je     0x140003e8a
   140003e2a:	cmp    QWORD PTR [rsi+0x18],0x10
   140003e2f:	jb     0x140003e34
   140003e31:	mov    rsi,QWORD PTR [rsi]
   140003e34:	cmp    QWORD PTR [rbx+0x18],0x10
   140003e39:	jb     0x140003e5f
   140003e3b:	mov    rcx,QWORD PTR [rbx]
   140003e3e:	jmp    0x140003e62
   140003e40:	test   rdi,rdi
   140003e43:	jne    0x140003e2a
   140003e45:	mov    QWORD PTR [rcx+0x10],rdi
   140003e49:	cmp    rax,0x10
   140003e4d:	jb     0x140003e57
   140003e4f:	mov    rax,QWORD PTR [rcx]
   140003e52:	mov    BYTE PTR [rax],dil
   140003e55:	jmp    0x140003e8a
   140003e57:	mov    rax,rcx
   140003e5a:	mov    BYTE PTR [rcx],0x0
   140003e5d:	jmp    0x140003e8a
   140003e5f:	mov    rcx,rbx
   140003e62:	test   rdi,rdi
   140003e65:	je     0x140003e73
   140003e67:	lea    rdx,[rsi+rbp*1]
   140003e6b:	mov    r8,rdi
   140003e6e:	call   0x1400056c4
   140003e73:	cmp    QWORD PTR [rbx+0x18],0x10
   140003e78:	mov    QWORD PTR [rbx+0x10],rdi
   140003e7c:	jb     0x140003e83
   140003e7e:	mov    rax,QWORD PTR [rbx]
   140003e81:	jmp    0x140003e86
   140003e83:	mov    rax,rbx
   140003e86:	mov    BYTE PTR [rax+rdi*1],0x0
   140003e8a:	mov    rbp,QWORD PTR [rsp+0x38]
   140003e8f:	mov    rsi,QWORD PTR [rsp+0x40]
   140003e94:	mov    rax,rbx
   140003e97:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e9c:	add    rsp,0x20
   140003ea0:	pop    rdi
   140003ea1:	ret    
   140003ea2:	int3   
   140003ea3:	int3   
   140003ea4:	int3   
   140003ea5:	int3   
   140003ea6:	int3   
   140003ea7:	int3   
   140003ea8:	int3   
   140003ea9:	int3   
   140003eaa:	int3   
   140003eab:	int3   
   140003eac:	int3   
   140003ead:	int3   
   140003eae:	int3   
   140003eaf:	int3   
   140003eb0:	cmp    BYTE PTR [rdx],0x0
   140003eb3:	jne    0x140003ebd
   140003eb5:	xor    r8d,r8d
   140003eb8:	jmp    0x140003ed0
   140003ebd:	or     r8,0xffffffffffffffff
   140003ec1:	inc    r8
   140003ec4:	cmp    BYTE PTR [rdx+r8*1],0x0
   140003ec9:	jne    0x140003ec1
   140003ecb:	jmp    0x140003ed0
   140003ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140003ed5:	mov    QWORD PTR [rsp+0x10],rsi
   140003eda:	push   rdi
   140003edb:	sub    rsp,0x20
   140003edf:	mov    rdi,r8
   140003ee2:	mov    rsi,rdx
   140003ee5:	mov    rbx,rcx
   140003ee8:	test   rdx,rdx
   140003eeb:	je     0x140003f47
   140003eed:	mov    rdx,QWORD PTR [rcx+0x18]
   140003ef1:	cmp    rdx,0x10
   140003ef5:	jb     0x140003efc
   140003ef7:	mov    rax,QWORD PTR [rcx]
   140003efa:	jmp    0x140003eff
   140003efc:	mov    rax,rcx
   140003eff:	cmp    rsi,rax
   140003f02:	jb     0x140003f47
   140003f04:	cmp    rdx,0x10
   140003f08:	jb     0x140003f0d
   140003f0a:	mov    rcx,QWORD PTR [rcx]
   140003f0d:	add    rcx,QWORD PTR [rbx+0x10]
   140003f11:	cmp    rcx,rsi
   140003f14:	jbe    0x140003f47
   140003f16:	cmp    rdx,0x10
   140003f1a:	jb     0x140003f21
   140003f1c:	mov    rax,QWORD PTR [rbx]
   140003f1f:	jmp    0x140003f24
   140003f21:	mov    rax,rbx
   140003f24:	sub    rsi,rax
   140003f27:	mov    r9,r8
   140003f2a:	mov    rdx,rbx
   140003f2d:	mov    r8,rsi
   140003f30:	mov    rcx,rbx
   140003f33:	mov    rbx,QWORD PTR [rsp+0x30]
   140003f38:	mov    rsi,QWORD PTR [rsp+0x38]
   140003f3d:	add    rsp,0x20
   140003f41:	pop    rdi
   140003f42:	jmp    0x140003d80
   140003f47:	cmp    r8,0xfffffffffffffffe
   140003f4b:	jbe    0x140003f5b
   140003f4d:	lea    rcx,[rip+0x385c]        # 0x1400077b0
   140003f54:	call   QWORD PTR [rip+0x3106]        # 0x140007060
   140003f5a:	int3   
   140003f5b:	mov    rax,QWORD PTR [rbx+0x18]
   140003f5f:	cmp    rax,r8
   140003f62:	jae    0x140003f84
   140003f64:	mov    r8,QWORD PTR [rbx+0x10]
   140003f68:	mov    rdx,rdi
   140003f6b:	mov    rcx,rbx
   140003f6e:	call   0x140002bf0
   140003f73:	test   rdi,rdi
   140003f76:	je     0x140003fec
   140003f78:	cmp    QWORD PTR [rbx+0x18],0x10
   140003f7d:	jb     0x140003fc2
   140003f7f:	mov    rcx,QWORD PTR [rbx]
   140003f82:	jmp    0x140003fc5
   140003f84:	test   r8,r8
   140003f87:	jne    0x140003f73
   140003f89:	mov    QWORD PTR [rbx+0x10],r8
   140003f8d:	cmp    rax,0x10
   140003f91:	jb     0x140003fac
   140003f93:	mov    rax,QWORD PTR [rbx]
   140003f96:	mov    BYTE PTR [rax],r8b
   140003f99:	mov    rax,rbx
   140003f9c:	mov    rbx,QWORD PTR [rsp+0x30]
   140003fa1:	mov    rsi,QWORD PTR [rsp+0x38]
   140003fa6:	add    rsp,0x20
   140003faa:	pop    rdi
   140003fab:	ret    
   140003fac:	mov    rax,rbx
   140003faf:	mov    BYTE PTR [rbx],0x0
   140003fb2:	mov    rbx,QWORD PTR [rsp+0x30]
   140003fb7:	mov    rsi,QWORD PTR [rsp+0x38]
   140003fbc:	add    rsp,0x20
   140003fc0:	pop    rdi
   140003fc1:	ret    
   140003fc2:	mov    rcx,rbx
   140003fc5:	test   rdi,rdi
   140003fc8:	je     0x140003fd5
   140003fca:	mov    r8,rdi
   140003fcd:	mov    rdx,rsi
   140003fd0:	call   0x1400056c4
   140003fd5:	cmp    QWORD PTR [rbx+0x18],0x10
   140003fda:	mov    QWORD PTR [rbx+0x10],rdi
   140003fde:	jb     0x140003fe5
   140003fe0:	mov    rax,QWORD PTR [rbx]
   140003fe3:	jmp    0x140003fe8
   140003fe5:	mov    rax,rbx
   140003fe8:	mov    BYTE PTR [rax+rdi*1],0x0
   140003fec:	mov    rsi,QWORD PTR [rsp+0x38]
   140003ff1:	mov    rax,rbx
   140003ff4:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ff9:	add    rsp,0x20
   140003ffd:	pop    rdi
   140003ffe:	ret    
   140003fff:	int3   
   140004000:	mov    QWORD PTR [rsp+0x8],rbx
   140004005:	mov    QWORD PTR [rsp+0x10],rbp
   14000400a:	mov    QWORD PTR [rsp+0x18],rsi
   14000400f:	push   rdi
   140004010:	sub    rsp,0x20
   140004014:	mov    rdi,QWORD PTR [rdx+0x10]
   140004018:	mov    rbp,r8
   14000401b:	mov    rsi,rdx
   14000401e:	mov    rbx,rcx
   140004021:	cmp    rdi,r8
   140004024:	jae    0x140004034
   140004026:	lea    rcx,[rip+0x3793]        # 0x1400077c0
   14000402d:	call   QWORD PTR [rip+0x3025]        # 0x140007058
   140004033:	int3   
   140004034:	sub    rdi,r8
   140004037:	cmp    r9,rdi
   14000403a:	cmovb  rdi,r9
   14000403e:	cmp    rcx,rdx
   140004041:	jne    0x140004083
   140004043:	lea    rcx,[rdi+r8*1]
   140004047:	cmp    QWORD PTR [rbx+0x10],rcx
   14000404b:	jae    0x14000405b
   14000404d:	lea    rcx,[rip+0x376c]        # 0x1400077c0
   140004054:	call   QWORD PTR [rip+0x2ffe]        # 0x140007058
   14000405a:	int3   
   14000405b:	cmp    QWORD PTR [rbx+0x18],0x8
   140004060:	mov    QWORD PTR [rbx+0x10],rcx
   140004064:	jb     0x14000406b
   140004066:	mov    rdx,QWORD PTR [rbx]
   140004069:	jmp    0x14000406e
   14000406b:	mov    rdx,rbx
   14000406e:	xor    eax,eax
   140004070:	mov    WORD PTR [rdx+rcx*2],ax
   140004074:	xor    edx,edx
   140004076:	mov    rcx,rbx
   140004079:	call   0x140004900
   14000407e:	jmp    0x140004122
   140004083:	movabs rax,0x7ffffffffffffffe
   14000408d:	cmp    rdi,rax
   140004090:	jbe    0x1400040a0
   140004092:	lea    rcx,[rip+0x3717]        # 0x1400077b0
   140004099:	call   QWORD PTR [rip+0x2fc1]        # 0x140007060
   14000409f:	int3   
   1400040a0:	mov    rcx,QWORD PTR [rcx+0x18]
   1400040a4:	cmp    rcx,rdi
   1400040a7:	jae    0x1400040d3
   1400040a9:	mov    r8,QWORD PTR [rbx+0x10]
   1400040ad:	mov    rdx,rdi
   1400040b0:	mov    rcx,rbx
   1400040b3:	call   0x140002d00
   1400040b8:	test   rdi,rdi
   1400040bb:	je     0x140004122
   1400040bd:	cmp    QWORD PTR [rsi+0x18],0x8
   1400040c2:	jb     0x1400040c7
   1400040c4:	mov    rsi,QWORD PTR [rsi]
   1400040c7:	cmp    QWORD PTR [rbx+0x18],0x8
   1400040cc:	jb     0x1400040f4
   1400040ce:	mov    rcx,QWORD PTR [rbx]
   1400040d1:	jmp    0x1400040f7
   1400040d3:	test   rdi,rdi
   1400040d6:	jne    0x1400040bd
   1400040d8:	xor    eax,eax
   1400040da:	mov    QWORD PTR [rbx+0x10],rax
   1400040de:	cmp    rcx,0x8
   1400040e2:	jb     0x1400040ec
   1400040e4:	mov    rcx,QWORD PTR [rbx]
   1400040e7:	mov    WORD PTR [rcx],ax
   1400040ea:	jmp    0x140004122
   1400040ec:	mov    rcx,rbx
   1400040ef:	mov    WORD PTR [rbx],ax
   1400040f2:	jmp    0x140004122
   1400040f4:	mov    rcx,rbx
   1400040f7:	test   rdi,rdi
   1400040fa:	je     0x140004109
   1400040fc:	lea    r8,[rdi+rdi*1]
   140004100:	lea    rdx,[rsi+rbp*2]
   140004104:	call   0x1400056c4
   140004109:	cmp    QWORD PTR [rbx+0x18],0x8
   14000410e:	mov    QWORD PTR [rbx+0x10],rdi
   140004112:	jb     0x140004119
   140004114:	mov    rcx,QWORD PTR [rbx]
   140004117:	jmp    0x14000411c
   140004119:	mov    rcx,rbx
   14000411c:	xor    eax,eax
   14000411e:	mov    WORD PTR [rcx+rdi*2],ax
   140004122:	mov    rbp,QWORD PTR [rsp+0x38]
   140004127:	mov    rsi,QWORD PTR [rsp+0x40]
   14000412c:	mov    rax,rbx
   14000412f:	mov    rbx,QWORD PTR [rsp+0x30]
   140004134:	add    rsp,0x20
   140004138:	pop    rdi
   140004139:	ret    
   14000413a:	int3   
   14000413b:	int3   
   14000413c:	int3   
   14000413d:	int3   
   14000413e:	int3   
   14000413f:	int3   
   140004140:	cmp    WORD PTR [rdx],0x0
   140004144:	jne    0x14000414e
   140004146:	xor    r8d,r8d
   140004149:	jmp    0x140004170
   14000414e:	or     r8,0xffffffffffffffff
   140004152:	inc    r8
   140004155:	cmp    WORD PTR [rdx+r8*2],0x0
   14000415b:	jne    0x140004152
   14000415d:	jmp    0x140004170
   140004162:	int3   
   140004163:	int3   
   140004164:	int3   
   140004165:	int3   
   140004166:	int3   
   140004167:	int3   
   140004168:	int3   
   140004169:	int3   
   14000416a:	int3   
   14000416b:	int3   
   14000416c:	int3   
   14000416d:	int3   
   14000416e:	int3   
   14000416f:	int3   
   140004170:	mov    QWORD PTR [rsp+0x8],rbx
   140004175:	mov    QWORD PTR [rsp+0x10],rsi
   14000417a:	push   rdi
   14000417b:	sub    rsp,0x20
   14000417f:	mov    rdi,r8
   140004182:	mov    rsi,rdx
   140004185:	mov    rbx,rcx
   140004188:	test   rdx,rdx
   14000418b:	je     0x1400041ee
   14000418d:	mov    rdx,QWORD PTR [rcx+0x18]
   140004191:	cmp    rdx,0x8
   140004195:	jb     0x14000419c
   140004197:	mov    rax,QWORD PTR [rcx]
   14000419a:	jmp    0x14000419f
   14000419c:	mov    rax,rcx
   14000419f:	cmp    rsi,rax
   1400041a2:	jb     0x1400041ee
   1400041a4:	cmp    rdx,0x8
   1400041a8:	jb     0x1400041ad
   1400041aa:	mov    rcx,QWORD PTR [rcx]
   1400041ad:	mov    rax,QWORD PTR [rbx+0x10]
   1400041b1:	lea    rcx,[rcx+rax*2]
   1400041b5:	cmp    rcx,rsi
   1400041b8:	jbe    0x1400041ee
   1400041ba:	cmp    rdx,0x8
   1400041be:	jb     0x1400041c5
   1400041c0:	mov    rax,QWORD PTR [rbx]
   1400041c3:	jmp    0x1400041c8
   1400041c5:	mov    rax,rbx
   1400041c8:	sub    rsi,rax
   1400041cb:	mov    r9,r8
   1400041ce:	mov    rdx,rbx
   1400041d1:	sar    rsi,1
   1400041d4:	mov    rcx,rbx
   1400041d7:	mov    r8,rsi
   1400041da:	mov    rbx,QWORD PTR [rsp+0x30]
   1400041df:	mov    rsi,QWORD PTR [rsp+0x38]
   1400041e4:	add    rsp,0x20
   1400041e8:	pop    rdi
   1400041e9:	jmp    0x140004000
   1400041ee:	movabs rax,0x7ffffffffffffffe
   1400041f8:	cmp    r8,rax
   1400041fb:	jbe    0x14000420b
   1400041fd:	lea    rcx,[rip+0x35ac]        # 0x1400077b0
   140004204:	call   QWORD PTR [rip+0x2e56]        # 0x140007060
   14000420a:	int3   
   14000420b:	mov    rcx,QWORD PTR [rbx+0x18]
   14000420f:	cmp    rcx,r8
   140004212:	jae    0x140004234
   140004214:	mov    r8,QWORD PTR [rbx+0x10]
   140004218:	mov    rdx,rdi
   14000421b:	mov    rcx,rbx
   14000421e:	call   0x140002d00
   140004223:	test   rdi,rdi
   140004226:	je     0x1400042a4
   140004228:	cmp    QWORD PTR [rbx+0x18],0x8
   14000422d:	jb     0x140004277
   14000422f:	mov    rcx,QWORD PTR [rbx]
   140004232:	jmp    0x14000427a
   140004234:	test   r8,r8
   140004237:	jne    0x140004223
   140004239:	xor    eax,eax
   14000423b:	mov    QWORD PTR [rbx+0x10],rax
   14000423f:	cmp    rcx,0x8
   140004243:	jb     0x14000425e
   140004245:	mov    rcx,QWORD PTR [rbx]
   140004248:	mov    WORD PTR [rcx],ax
   14000424b:	mov    rax,rbx
   14000424e:	mov    rbx,QWORD PTR [rsp+0x30]
   140004253:	mov    rsi,QWORD PTR [rsp+0x38]
   140004258:	add    rsp,0x20
   14000425c:	pop    rdi
   14000425d:	ret    
   14000425e:	mov    WORD PTR [rbx],ax
   140004261:	mov    rcx,rbx
   140004264:	mov    rax,rbx
   140004267:	mov    rbx,QWORD PTR [rsp+0x30]
   14000426c:	mov    rsi,QWORD PTR [rsp+0x38]
   140004271:	add    rsp,0x20
   140004275:	pop    rdi
   140004276:	ret    
   140004277:	mov    rcx,rbx
   14000427a:	test   rdi,rdi
   14000427d:	je     0x14000428b
   14000427f:	lea    r8,[rdi+rdi*1]
   140004283:	mov    rdx,rsi
   140004286:	call   0x1400056c4
   14000428b:	cmp    QWORD PTR [rbx+0x18],0x8
   140004290:	mov    QWORD PTR [rbx+0x10],rdi
   140004294:	jb     0x14000429b
   140004296:	mov    rcx,QWORD PTR [rbx]
   140004299:	jmp    0x14000429e
   14000429b:	mov    rcx,rbx
   14000429e:	xor    eax,eax
   1400042a0:	mov    WORD PTR [rcx+rdi*2],ax
   1400042a4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400042a9:	mov    rax,rbx
   1400042ac:	mov    rbx,QWORD PTR [rsp+0x30]
   1400042b1:	add    rsp,0x20
   1400042b5:	pop    rdi
   1400042b6:	ret    
   1400042b7:	int3   
   1400042b8:	int3   
   1400042b9:	int3   
   1400042ba:	int3   
   1400042bb:	int3   
   1400042bc:	int3   
   1400042bd:	int3   
   1400042be:	int3   
   1400042bf:	int3   
   1400042c0:	movzx  eax,BYTE PTR [rdx]
   1400042c3:	mov    BYTE PTR [rcx],al
   1400042c5:	ret    
   1400042c6:	int3   
   1400042c7:	int3   
   1400042c8:	int3   
   1400042c9:	int3   
   1400042ca:	int3   
   1400042cb:	int3   
   1400042cc:	int3   
   1400042cd:	int3   
   1400042ce:	int3   
   1400042cf:	int3   
   1400042d0:	movzx  eax,WORD PTR [rdx]
   1400042d3:	mov    WORD PTR [rcx],ax
   1400042d6:	ret    
   1400042d7:	int3   
   1400042d8:	int3   
   1400042d9:	int3   
   1400042da:	int3   
   1400042db:	int3   
   1400042dc:	int3   
   1400042dd:	int3   
   1400042de:	int3   
   1400042df:	int3   
   1400042e0:	sub    rsp,0x38
   1400042e4:	mov    rax,r8
   1400042e7:	mov    r8,QWORD PTR [rcx]
   1400042ea:	mov    r9,rdx
   1400042ed:	lea    rdx,[rsp+0x40]
   1400042f2:	mov    QWORD PTR [rcx+0x8],r8
   1400042f6:	mov    QWORD PTR [rsp+0x20],rax
   1400042fb:	call   0x140003390
   140004300:	add    rsp,0x38
   140004304:	ret    
   140004305:	int3   
   140004306:	int3   
   140004307:	int3   
   140004308:	int3   
   140004309:	int3   
   14000430a:	int3   
   14000430b:	int3   
   14000430c:	int3   
   14000430d:	int3   
   14000430e:	int3   
   14000430f:	int3   
   140004310:	mov    rax,QWORD PTR [rcx]
   140004313:	mov    rcx,QWORD PTR [rax]
   140004316:	mov    rax,rdx
   140004319:	mov    QWORD PTR [rdx],rcx
   14000431c:	ret    
   14000431d:	int3   
   14000431e:	int3   
   14000431f:	int3   
   140004320:	mov    rax,QWORD PTR [rcx]
   140004323:	mov    rcx,QWORD PTR [rax]
   140004326:	mov    rax,rdx
   140004329:	mov    QWORD PTR [rdx],rcx
   14000432c:	ret    
   14000432d:	int3   
   14000432e:	int3   
   14000432f:	int3   
   140004330:	mov    rax,QWORD PTR [rcx]
   140004333:	mov    rcx,QWORD PTR [rax]
   140004336:	mov    rax,rdx
   140004339:	mov    QWORD PTR [rdx],rcx
   14000433c:	ret    
   14000433d:	int3   
   14000433e:	int3   
   14000433f:	int3   
   140004340:	mov    rax,QWORD PTR [rcx]
   140004343:	mov    QWORD PTR [rdx],rax
   140004346:	mov    rax,rdx
   140004349:	ret    
   14000434a:	int3   
   14000434b:	int3   
   14000434c:	int3   
   14000434d:	int3   
   14000434e:	int3   
   14000434f:	int3   
   140004350:	mov    rax,QWORD PTR [rcx+0x30]
   140004354:	ret    
   140004355:	int3   
   140004356:	int3   
   140004357:	int3   
   140004358:	int3   
   140004359:	int3   
   14000435a:	int3   
   14000435b:	int3   
   14000435c:	int3   
   14000435d:	int3   
   14000435e:	int3   
   14000435f:	int3   
   140004360:	cmp    QWORD PTR [rcx+0x18],0x10
   140004365:	jb     0x14000436b
   140004367:	mov    rax,QWORD PTR [rcx]
   14000436a:	ret    
   14000436b:	mov    rax,rcx
   14000436e:	ret    
   14000436f:	int3   
   140004370:	cmp    QWORD PTR [rcx+0x18],0x8
   140004375:	jb     0x14000437b
   140004377:	mov    rax,QWORD PTR [rcx]
   14000437a:	ret    
   14000437b:	mov    rax,rcx
   14000437e:	ret    
   14000437f:	int3   
   140004380:	mov    rax,QWORD PTR [rcx+0x10]
   140004384:	sub    rax,QWORD PTR [rcx]
   140004387:	sar    rax,0x3
   14000438b:	ret    
   14000438c:	int3   
   14000438d:	int3   
   14000438e:	int3   
   14000438f:	int3   
   140004390:	mov    rax,QWORD PTR [rcx+0x8]
   140004394:	ret    
   140004395:	int3   
   140004396:	int3   
   140004397:	int3   
   140004398:	int3   
   140004399:	int3   
   14000439a:	int3   
   14000439b:	int3   
   14000439c:	int3   
   14000439d:	int3   
   14000439e:	int3   
   14000439f:	int3   
   1400043a0:	mov    rax,QWORD PTR [rcx+0x8]
   1400043a4:	ret    
   1400043a5:	int3   
   1400043a6:	int3   
   1400043a7:	int3   
   1400043a8:	int3   
   1400043a9:	int3   
   1400043aa:	int3   
   1400043ab:	int3   
   1400043ac:	int3   
   1400043ad:	int3   
   1400043ae:	int3   
   1400043af:	int3   
   1400043b0:	rex push rbx
   1400043b2:	sub    rsp,0x30
   1400043b6:	mov    rbx,rcx
   1400043b9:	call   0x140004410
   1400043be:	mov    rax,QWORD PTR [rbx]
   1400043c1:	mov    r8,QWORD PTR [rbx+0x10]
   1400043c5:	lea    rcx,[rbx+0x10]
   1400043c9:	mov    QWORD PTR [rsp+0x40],rax
   1400043ce:	lea    rax,[rsp+0x40]
   1400043d3:	lea    rdx,[rsp+0x48]
   1400043d8:	mov    r9d,0x10
   1400043de:	mov    QWORD PTR [rcx+0x8],r8
   1400043e2:	mov    QWORD PTR [rsp+0x20],rax
   1400043e7:	call   0x140003390
   1400043ec:	mov    QWORD PTR [rbx+0x28],0x7
   1400043f4:	mov    QWORD PTR [rbx+0x30],0x8
   1400043fc:	add    rsp,0x30
   140004400:	pop    rbx
   140004401:	ret    
   140004402:	int3   
   140004403:	int3   
   140004404:	int3   
   140004405:	int3   
   140004406:	int3   
   140004407:	int3   
   140004408:	int3   
   140004409:	int3   
   14000440a:	int3   
   14000440b:	int3   
   14000440c:	int3   
   14000440d:	int3   
   14000440e:	int3   
   14000440f:	int3   
   140004410:	mov    QWORD PTR [rsp+0x10],rbx
   140004415:	mov    QWORD PTR [rsp+0x18],rbp
   14000441a:	push   rsi
   14000441b:	sub    rsp,0x20
   14000441f:	mov    rax,QWORD PTR [rcx]
   140004422:	xor    ebp,ebp
   140004424:	mov    rsi,rcx
   140004427:	mov    rbx,QWORD PTR [rax]
   14000442a:	mov    QWORD PTR [rax],rax
   14000442d:	mov    rax,QWORD PTR [rcx]
   140004430:	mov    QWORD PTR [rax+0x8],rax
   140004434:	mov    QWORD PTR [rcx+0x8],rbp
   140004438:	cmp    rbx,QWORD PTR [rcx]
   14000443b:	je     0x14000449a
   14000443d:	mov    QWORD PTR [rsp+0x30],rdi
   140004442:	cmp    QWORD PTR [rbx+0x48],0x10
   140004447:	mov    rdi,QWORD PTR [rbx]
   14000444a:	jb     0x140004455
   14000444c:	mov    rcx,QWORD PTR [rbx+0x30]
   140004450:	call   0x140005518
   140004455:	mov    QWORD PTR [rbx+0x48],0xf
   14000445d:	mov    QWORD PTR [rbx+0x40],rbp
   140004461:	mov    BYTE PTR [rbx+0x30],bpl
   140004465:	cmp    QWORD PTR [rbx+0x28],0x10
   14000446a:	jb     0x140004475
   14000446c:	mov    rcx,QWORD PTR [rbx+0x10]
   140004470:	call   0x140005518
   140004475:	mov    QWORD PTR [rbx+0x28],0xf
   14000447d:	mov    QWORD PTR [rbx+0x20],rbp
   140004481:	mov    rcx,rbx
   140004484:	mov    BYTE PTR [rbx+0x10],bpl
   140004488:	call   0x140005518
   14000448d:	mov    rbx,rdi
   140004490:	cmp    rdi,QWORD PTR [rsi]
   140004493:	jne    0x140004442
   140004495:	mov    rdi,QWORD PTR [rsp+0x30]
   14000449a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000449f:	mov    rbp,QWORD PTR [rsp+0x40]
   1400044a4:	add    rsp,0x20
   1400044a8:	pop    rsi
   1400044a9:	ret    
   1400044aa:	int3   
   1400044ab:	int3   
   1400044ac:	int3   
   1400044ad:	int3   
   1400044ae:	int3   
   1400044af:	int3   
   1400044b0:	mov    rax,QWORD PTR [rcx]
   1400044b3:	mov    QWORD PTR [rcx+0x8],rax
   1400044b7:	ret    
   1400044b8:	int3   
   1400044b9:	int3   
   1400044ba:	int3   
   1400044bb:	int3   
   1400044bc:	int3   
   1400044bd:	int3   
   1400044be:	int3   
   1400044bf:	int3   
   1400044c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400044c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400044ca:	push   rdi
   1400044cb:	sub    rsp,0x20
   1400044cf:	cmp    QWORD PTR [rdx+0x18],0x10
   1400044d4:	mov    rdi,QWORD PTR [rdx+0x10]
   1400044d8:	jb     0x1400044dd
   1400044da:	mov    rdx,QWORD PTR [rdx]
   1400044dd:	cmp    QWORD PTR [rcx+0x18],0x10
   1400044e2:	mov    rbx,QWORD PTR [rcx+0x10]
   1400044e6:	jb     0x1400044eb
   1400044e8:	mov    rcx,QWORD PTR [rcx]
   1400044eb:	cmp    rbx,rdi
   1400044ee:	mov    r8,rdi
   1400044f1:	cmovb  r8,rbx
   1400044f5:	xor    esi,esi
   1400044f7:	test   r8,r8
   1400044fa:	jne    0x140004500
   1400044fc:	mov    eax,esi
   1400044fe:	jmp    0x140004505
   140004500:	call   0x1400056be
   140004505:	cdqe   
   140004507:	test   rax,rax
   14000450a:	jne    0x14000452a
   14000450c:	cmp    rbx,rdi
   14000450f:	jae    0x140004524
   140004511:	or     eax,0xffffffff
   140004514:	mov    rbx,QWORD PTR [rsp+0x30]
   140004519:	mov    rsi,QWORD PTR [rsp+0x38]
   14000451e:	add    rsp,0x20
   140004522:	pop    rdi
   140004523:	ret    
   140004524:	setne  sil
   140004528:	mov    eax,esi
   14000452a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000452f:	mov    rsi,QWORD PTR [rsp+0x38]
   140004534:	add    rsp,0x20
   140004538:	pop    rdi
   140004539:	ret    
   14000453a:	int3   
   14000453b:	int3   
   14000453c:	int3   
   14000453d:	int3   
   14000453e:	int3   
   14000453f:	int3   
   140004540:	rex push rbx
   140004542:	sub    rsp,0x20
   140004546:	mov    rax,QWORD PTR [rcx+0x10]
   14000454a:	mov    rbx,r8
   14000454d:	cmp    rax,rdx
   140004550:	jae    0x140004560
   140004552:	lea    rcx,[rip+0x3267]        # 0x1400077c0
   140004559:	call   QWORD PTR [rip+0x2af9]        # 0x140007058
   14000455f:	int3   
   140004560:	sub    rax,rdx
   140004563:	mov    QWORD PTR [rsp+0x30],rsi
   140004568:	mov    QWORD PTR [rsp+0x38],rdi
   14000456d:	cmp    rax,rbx
   140004570:	cmovb  rbx,rax
   140004574:	cmp    QWORD PTR [rcx+0x18],0x10
   140004579:	jb     0x14000457e
   14000457b:	mov    rcx,QWORD PTR [rcx]
   14000457e:	mov    rdi,QWORD PTR [rsp+0x50]
   140004583:	cmp    rbx,rdi
   140004586:	mov    r8,rdi
   140004589:	cmovb  r8,rbx
   14000458d:	xor    esi,esi
   14000458f:	test   r8,r8
   140004592:	jne    0x140004598
   140004594:	mov    eax,esi
   140004596:	jmp    0x1400045a3
   140004598:	add    rcx,rdx
   14000459b:	mov    rdx,r9
   14000459e:	call   0x1400056be
   1400045a3:	cdqe   
   1400045a5:	test   rax,rax
   1400045a8:	jne    0x1400045c8
   1400045aa:	cmp    rbx,rdi
   1400045ad:	jae    0x1400045c2
   1400045af:	mov    rdi,QWORD PTR [rsp+0x38]
   1400045b4:	mov    rsi,QWORD PTR [rsp+0x30]
   1400045b9:	or     eax,0xffffffff
   1400045bc:	add    rsp,0x20
   1400045c0:	pop    rbx
   1400045c1:	ret    
   1400045c2:	setne  sil
   1400045c6:	mov    eax,esi
   1400045c8:	mov    rdi,QWORD PTR [rsp+0x38]
   1400045cd:	mov    rsi,QWORD PTR [rsp+0x30]
   1400045d2:	add    rsp,0x20
   1400045d6:	pop    rbx
   1400045d7:	ret    
   1400045d8:	int3   
   1400045d9:	int3   
   1400045da:	int3   
   1400045db:	int3   
   1400045dc:	int3   
   1400045dd:	int3   
   1400045de:	int3   
   1400045df:	int3   
   1400045e0:	test   r8,r8
   1400045e3:	jne    0x1400045e8
   1400045e5:	xor    eax,eax
   1400045e7:	ret    
   1400045e8:	jmp    0x1400056be
   1400045ed:	int3   
   1400045ee:	int3   
   1400045ef:	int3   
   1400045f0:	mov    r9,rcx
   1400045f3:	test   r8,r8
   1400045f6:	jne    0x140004600
   1400045f8:	xor    eax,eax
   1400045fa:	ret    
   1400045fb:	nop    DWORD PTR [rax+rax*1+0x0]
   140004600:	movzx  eax,WORD PTR [rdx]
   140004603:	cmp    WORD PTR [r9],ax
   140004607:	jne    0x140004616
   140004609:	add    r9,0x2
   14000460d:	add    rdx,0x2
   140004611:	dec    r8
   140004614:	jmp    0x1400045f6
   140004616:	movzx  ecx,WORD PTR [rdx]
   140004619:	or     r8d,0xffffffff
   14000461d:	mov    eax,0x1
   140004622:	cmp    WORD PTR [r9],cx
   140004626:	cmovb  eax,r8d
   14000462a:	ret    
   14000462b:	int3   
   14000462c:	int3   
   14000462d:	int3   
   14000462e:	int3   
   14000462f:	int3   
   140004630:	test   rdx,rdx
   140004633:	je     0x14000463b
   140004635:	mov    rax,QWORD PTR [r8]
   140004638:	mov    QWORD PTR [rdx],rax
   14000463b:	ret    
   14000463c:	int3   
   14000463d:	int3   
   14000463e:	int3   
   14000463f:	int3   
   140004640:	rex push rbx
   140004642:	sub    rsp,0x20
   140004646:	mov    rbx,rcx
   140004649:	test   r8,r8
   14000464c:	je     0x140004653
   14000464e:	call   0x1400056c4
   140004653:	mov    rax,rbx
   140004656:	add    rsp,0x20
   14000465a:	pop    rbx
   14000465b:	ret    
   14000465c:	int3   
   14000465d:	int3   
   14000465e:	int3   
   14000465f:	int3   
   140004660:	rex push rbx
   140004662:	sub    rsp,0x20
   140004666:	mov    rbx,rcx
   140004669:	test   r8,r8
   14000466c:	je     0x140004676
   14000466e:	add    r8,r8
   140004671:	call   0x1400056c4
   140004676:	mov    rax,rbx
   140004679:	add    rsp,0x20
   14000467d:	pop    rbx
   14000467e:	ret    
   14000467f:	int3   
   140004680:	mov    rcx,rdx
   140004683:	jmp    0x140005518
   140004688:	int3   
   140004689:	int3   
   14000468a:	int3   
   14000468b:	int3   
   14000468c:	int3   
   14000468d:	int3   
   14000468e:	int3   
   14000468f:	int3   
   140004690:	mov    rcx,rdx
   140004693:	jmp    0x140005518
   140004698:	int3   
   140004699:	int3   
   14000469a:	int3   
   14000469b:	int3   
   14000469c:	int3   
   14000469d:	int3   
   14000469e:	int3   
   14000469f:	int3   
   1400046a0:	mov    rcx,rdx
   1400046a3:	jmp    0x140005518
   1400046a8:	int3   
   1400046a9:	int3   
   1400046aa:	int3   
   1400046ab:	int3   
   1400046ac:	int3   
   1400046ad:	int3   
   1400046ae:	int3   
   1400046af:	int3   
   1400046b0:	mov    rcx,rdx
   1400046b3:	jmp    0x140005518
   1400046b8:	int3   
   1400046b9:	int3   
   1400046ba:	int3   
   1400046bb:	int3   
   1400046bc:	int3   
   1400046bd:	int3   
   1400046be:	int3   
   1400046bf:	int3   
   1400046c0:	mov    rcx,rdx
   1400046c3:	jmp    0x140005518
   1400046c8:	int3   
   1400046c9:	int3   
   1400046ca:	int3   
   1400046cb:	int3   
   1400046cc:	int3   
   1400046cd:	int3   
   1400046ce:	int3   
   1400046cf:	int3   
   1400046d0:	mov    rcx,rdx
   1400046d3:	jmp    0x140005518
   1400046d8:	int3   
   1400046d9:	int3   
   1400046da:	int3   
   1400046db:	int3   
   1400046dc:	int3   
   1400046dd:	int3   
   1400046de:	int3   
   1400046df:	int3   
   1400046e0:	mov    rcx,rdx
   1400046e3:	jmp    0x140005518
   1400046e8:	int3   
   1400046e9:	int3   
   1400046ea:	int3   
   1400046eb:	int3   
   1400046ec:	int3   
   1400046ed:	int3   
   1400046ee:	int3   
   1400046ef:	int3   
   1400046f0:	mov    rcx,rdx
   1400046f3:	jmp    0x140005518
   1400046f8:	int3   
   1400046f9:	int3   
   1400046fa:	int3   
   1400046fb:	int3   
   1400046fc:	int3   
   1400046fd:	int3   
   1400046fe:	int3   
   1400046ff:	int3   
   140004700:	mov    rcx,rdx
   140004703:	jmp    0x140005518
   140004708:	int3   
   140004709:	int3   
   14000470a:	int3   
   14000470b:	int3   
   14000470c:	int3   
   14000470d:	int3   
   14000470e:	int3   
   14000470f:	int3   
   140004710:	mov    QWORD PTR [rsp+0x8],rbx
   140004715:	push   rdi
   140004716:	sub    rsp,0x20
   14000471a:	mov    ecx,r8d
   14000471d:	mov    edi,r8d
   140004720:	mov    rbx,rdx
   140004723:	call   QWORD PTR [rip+0x2927]        # 0x140007050
   140004729:	mov    DWORD PTR [rbx],edi
   14000472b:	test   rax,rax
   14000472e:	lea    rax,[rip+0x58cb]        # 0x14000a000
   140004735:	jne    0x14000473e
   140004737:	lea    rax,[rip+0x58d2]        # 0x14000a010
   14000473e:	mov    QWORD PTR [rbx+0x8],rax
   140004742:	mov    rax,rbx
   140004745:	mov    rbx,QWORD PTR [rsp+0x30]
   14000474a:	add    rsp,0x20
   14000474e:	pop    rdi
   14000474f:	ret    
   140004750:	mov    DWORD PTR [rdx],r8d
   140004753:	mov    QWORD PTR [rdx+0x8],rcx
   140004757:	mov    rax,rdx
   14000475a:	ret    
   14000475b:	int3   
   14000475c:	int3   
   14000475d:	int3   
   14000475e:	int3   
   14000475f:	int3   
   140004760:	mov    rax,QWORD PTR [rcx]
   140004763:	mov    QWORD PTR [rdx],rax
   140004766:	mov    rax,rdx
   140004769:	ret    
   14000476a:	int3   
   14000476b:	int3   
   14000476c:	int3   
   14000476d:	int3   
   14000476e:	int3   
   14000476f:	int3   
   140004770:	mov    rax,QWORD PTR [rcx]
   140004773:	mov    QWORD PTR [rdx],rax
   140004776:	mov    rax,rdx
   140004779:	ret    
   14000477a:	int3   
   14000477b:	int3   
   14000477c:	int3   
   14000477d:	int3   
   14000477e:	int3   
   14000477f:	int3   
   140004780:	movzx  edx,WORD PTR [rdx]
   140004783:	cmp    WORD PTR [rcx],dx
   140004786:	sete   al
   140004789:	ret    
   14000478a:	int3   
   14000478b:	int3   
   14000478c:	int3   
   14000478d:	int3   
   14000478e:	int3   
   14000478f:	int3   
   140004790:	cmp    rcx,QWORD PTR [rdx+0x8]
   140004794:	jne    0x14000479e
   140004796:	cmp    DWORD PTR [rdx],r8d
   140004799:	jne    0x14000479e
   14000479b:	mov    al,0x1
   14000479d:	ret    
   14000479e:	xor    al,al
   1400047a0:	ret    
   1400047a1:	int3   
   1400047a2:	int3   
   1400047a3:	int3   
   1400047a4:	int3   
   1400047a5:	int3   
   1400047a6:	int3   
   1400047a7:	int3   
   1400047a8:	int3   
   1400047a9:	int3   
   1400047aa:	int3   
   1400047ab:	int3   
   1400047ac:	int3   
   1400047ad:	int3   
   1400047ae:	int3   
   1400047af:	int3   
   1400047b0:	rex push rbx
   1400047b2:	sub    rsp,0x30
   1400047b6:	mov    rax,QWORD PTR [rcx]
   1400047b9:	mov    rbx,r8
   1400047bc:	mov    r8d,edx
   1400047bf:	lea    rdx,[rsp+0x20]
   1400047c4:	call   QWORD PTR [rax+0x18]
   1400047c7:	mov    rcx,QWORD PTR [rbx+0x8]
   1400047cb:	cmp    QWORD PTR [rax+0x8],rcx
   1400047cf:	jne    0x1400047df
   1400047d1:	mov    ecx,DWORD PTR [rbx]
   1400047d3:	cmp    DWORD PTR [rax],ecx
   1400047d5:	jne    0x1400047df
   1400047d7:	mov    al,0x1
   1400047d9:	add    rsp,0x30
   1400047dd:	pop    rbx
   1400047de:	ret    
   1400047df:	xor    al,al
   1400047e1:	add    rsp,0x30
   1400047e5:	pop    rbx
   1400047e6:	ret    
   1400047e7:	int3   
   1400047e8:	int3   
   1400047e9:	int3   
   1400047ea:	int3   
   1400047eb:	int3   
   1400047ec:	int3   
   1400047ed:	int3   
   1400047ee:	int3   
   1400047ef:	int3   
   1400047f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400047f5:	push   rdi
   1400047f6:	sub    rsp,0x20
   1400047fa:	mov    rdi,QWORD PTR [rcx+0x10]
   1400047fe:	mov    rbx,rcx
   140004801:	cmp    rdi,rdx
   140004804:	jae    0x140004814
   140004806:	lea    rcx,[rip+0x2fb3]        # 0x1400077c0
   14000480d:	call   QWORD PTR [rip+0x2845]        # 0x140007058
   140004813:	int3   
   140004814:	mov    rax,rdi
   140004817:	sub    rax,rdx
   14000481a:	cmp    rax,r8
   14000481d:	ja     0x140004854
   14000481f:	cmp    QWORD PTR [rcx+0x18],0x10
   140004824:	mov    QWORD PTR [rcx+0x10],rdx
   140004828:	jb     0x14000483f
   14000482a:	mov    rax,QWORD PTR [rcx]
   14000482d:	mov    BYTE PTR [rax+rdx*1],0x0
   140004831:	mov    rax,rbx
   140004834:	mov    rbx,QWORD PTR [rsp+0x30]
   140004839:	add    rsp,0x20
   14000483d:	pop    rdi
   14000483e:	ret    
   14000483f:	mov    rax,rcx
   140004842:	mov    BYTE PTR [rcx+rdx*1],0x0
   140004846:	mov    rax,rbx
   140004849:	mov    rbx,QWORD PTR [rsp+0x30]
   14000484e:	add    rsp,0x20
   140004852:	pop    rdi
   140004853:	ret    
   140004854:	test   r8,r8
   140004857:	je     0x1400048ab
   140004859:	cmp    QWORD PTR [rcx+0x18],0x10
   14000485e:	jb     0x140004865
   140004860:	mov    rax,QWORD PTR [rcx]
   140004863:	jmp    0x140004868
   140004865:	mov    rax,rcx
   140004868:	sub    rdi,r8
   14000486b:	lea    rcx,[rax+rdx*1]
   14000486f:	mov    rax,rdi
   140004872:	sub    rax,rdx
   140004875:	je     0x140004884
   140004877:	lea    rdx,[rcx+r8*1]
   14000487b:	mov    r8,rax
   14000487e:	call   QWORD PTR [rip+0x2844]        # 0x1400070c8
   140004884:	cmp    QWORD PTR [rbx+0x18],0x10
   140004889:	mov    QWORD PTR [rbx+0x10],rdi
   14000488d:	jb     0x1400048a4
   14000488f:	mov    rax,QWORD PTR [rbx]
   140004892:	mov    BYTE PTR [rax+rdi*1],0x0
   140004896:	mov    rax,rbx
   140004899:	mov    rbx,QWORD PTR [rsp+0x30]
   14000489e:	add    rsp,0x20
   1400048a2:	pop    rdi
   1400048a3:	ret    
   1400048a4:	mov    rax,rbx
   1400048a7:	mov    BYTE PTR [rbx+rdi*1],0x0
   1400048ab:	mov    rax,rbx
   1400048ae:	mov    rbx,QWORD PTR [rsp+0x30]
   1400048b3:	add    rsp,0x20
   1400048b7:	pop    rdi
   1400048b8:	ret    
   1400048b9:	int3   
   1400048ba:	int3   
   1400048bb:	int3   
   1400048bc:	int3   
   1400048bd:	int3   
   1400048be:	int3   
   1400048bf:	int3   
   1400048c0:	sub    rsp,0x28
   1400048c4:	cmp    QWORD PTR [rcx+0x10],rdx
   1400048c8:	jae    0x1400048d8
   1400048ca:	lea    rcx,[rip+0x2eef]        # 0x1400077c0
   1400048d1:	call   QWORD PTR [rip+0x2781]        # 0x140007058
   1400048d7:	int3   
   1400048d8:	cmp    QWORD PTR [rcx+0x18],0x10
   1400048dd:	mov    QWORD PTR [rcx+0x10],rdx
   1400048e1:	jb     0x1400048f2
   1400048e3:	mov    rax,QWORD PTR [rcx]
   1400048e6:	mov    BYTE PTR [rax+rdx*1],0x0
   1400048ea:	mov    rax,rcx
   1400048ed:	add    rsp,0x28
   1400048f1:	ret    
   1400048f2:	mov    rax,rcx
   1400048f5:	mov    BYTE PTR [rcx+rdx*1],0x0
   1400048f9:	add    rsp,0x28
   1400048fd:	ret    
   1400048fe:	int3   
   1400048ff:	int3   
   140004900:	mov    QWORD PTR [rsp+0x8],rbx
   140004905:	push   rdi
   140004906:	sub    rsp,0x20
   14000490a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000490e:	mov    r9,r8
   140004911:	mov    rbx,rcx
   140004914:	cmp    rdi,rdx
   140004917:	jae    0x140004927
   140004919:	lea    rcx,[rip+0x2ea0]        # 0x1400077c0
   140004920:	call   QWORD PTR [rip+0x2732]        # 0x140007058
   140004926:	int3   
   140004927:	mov    rax,rdi
   14000492a:	sub    rax,rdx
   14000492d:	cmp    rax,r8
   140004930:	ja     0x140004954
   140004932:	cmp    QWORD PTR [rcx+0x18],0x8
   140004937:	mov    QWORD PTR [rcx+0x10],rdx
   14000493b:	jb     0x140004940
   14000493d:	mov    rcx,QWORD PTR [rcx]
   140004940:	xor    eax,eax
   140004942:	mov    WORD PTR [rcx+rdx*2],ax
   140004946:	mov    rax,rbx
   140004949:	mov    rbx,QWORD PTR [rsp+0x30]
   14000494e:	add    rsp,0x20
   140004952:	pop    rdi
   140004953:	ret    
   140004954:	test   r8,r8
   140004957:	je     0x14000499d
   140004959:	cmp    QWORD PTR [rcx+0x18],0x8
   14000495e:	jb     0x140004965
   140004960:	mov    rax,QWORD PTR [rcx]
   140004963:	jmp    0x140004968
   140004965:	mov    rax,rcx
   140004968:	sub    rdi,r8
   14000496b:	lea    rcx,[rax+rdx*2]
   14000496f:	mov    r8,rdi
   140004972:	sub    r8,rdx
   140004975:	je     0x140004984
   140004977:	lea    rdx,[rcx+r9*2]
   14000497b:	add    r8,r8
   14000497e:	call   QWORD PTR [rip+0x2744]        # 0x1400070c8
   140004984:	cmp    QWORD PTR [rbx+0x18],0x8
   140004989:	mov    QWORD PTR [rbx+0x10],rdi
   14000498d:	jb     0x140004994
   14000498f:	mov    rcx,QWORD PTR [rbx]
   140004992:	jmp    0x140004997
   140004994:	mov    rcx,rbx
   140004997:	xor    eax,eax
   140004999:	mov    WORD PTR [rcx+rdi*2],ax
   14000499d:	mov    rax,rbx
   1400049a0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400049a5:	add    rsp,0x20
   1400049a9:	pop    rdi
   1400049aa:	ret    
   1400049ab:	int3   
   1400049ac:	int3   
   1400049ad:	int3   
   1400049ae:	int3   
   1400049af:	int3   
   1400049b0:	sub    rsp,0x28
   1400049b4:	cmp    QWORD PTR [rcx+0x10],rdx
   1400049b8:	jae    0x1400049c8
   1400049ba:	lea    rcx,[rip+0x2dff]        # 0x1400077c0
   1400049c1:	call   QWORD PTR [rip+0x2691]        # 0x140007058
   1400049c7:	int3   
   1400049c8:	cmp    QWORD PTR [rcx+0x18],0x8
   1400049cd:	mov    QWORD PTR [rcx+0x10],rdx
   1400049d1:	jb     0x1400049e6
   1400049d3:	mov    rax,QWORD PTR [rcx]
   1400049d6:	xor    r8d,r8d
   1400049d9:	mov    WORD PTR [rax+rdx*2],r8w
   1400049de:	mov    rax,rcx
   1400049e1:	add    rsp,0x28
   1400049e5:	ret    
   1400049e6:	xor    r8d,r8d
   1400049e9:	mov    rax,rcx
   1400049ec:	mov    WORD PTR [rcx+rdx*2],r8w
   1400049f1:	add    rsp,0x28
   1400049f5:	ret    
   1400049f6:	int3   
   1400049f7:	int3   
   1400049f8:	int3   
   1400049f9:	int3   
   1400049fa:	int3   
   1400049fb:	int3   
   1400049fc:	int3   
   1400049fd:	int3   
   1400049fe:	int3   
   1400049ff:	int3   
   140004a00:	mov    QWORD PTR [rsp+0x8],rbx
   140004a05:	mov    QWORD PTR [rsp+0x18],r8
   140004a0a:	push   rdi
   140004a0b:	sub    rsp,0x20
   140004a0f:	mov    rax,QWORD PTR [r8]
   140004a12:	mov    rbx,r8
   140004a15:	mov    rdi,rdx
   140004a18:	mov    QWORD PTR [rsp+0x40],rax
   140004a1d:	mov    r8,QWORD PTR [r8+0x8]
   140004a21:	mov    rax,QWORD PTR [rbx]
   140004a24:	mov    QWORD PTR [r8],rax
   140004a27:	mov    r8,QWORD PTR [rbx]
   140004a2a:	mov    rax,QWORD PTR [rbx+0x8]
   140004a2e:	mov    QWORD PTR [r8+0x8],rax
   140004a32:	dec    QWORD PTR [rcx+0x8]
   140004a36:	cmp    QWORD PTR [rbx+0x48],0x10
   140004a3b:	jb     0x140004a46
   140004a3d:	mov    rcx,QWORD PTR [rbx+0x30]
   140004a41:	call   0x140005518
   140004a46:	mov    QWORD PTR [rbx+0x48],0xf
   140004a4e:	mov    QWORD PTR [rbx+0x40],0x0
   140004a56:	mov    BYTE PTR [rbx+0x30],0x0
   140004a5a:	cmp    QWORD PTR [rbx+0x28],0x10
   140004a5f:	jb     0x140004a6a
   140004a61:	mov    rcx,QWORD PTR [rbx+0x10]
   140004a65:	call   0x140005518
   140004a6a:	mov    QWORD PTR [rbx+0x28],0xf
   140004a72:	mov    QWORD PTR [rbx+0x20],0x0
   140004a7a:	mov    rcx,rbx
   140004a7d:	mov    BYTE PTR [rbx+0x10],0x0
   140004a81:	call   0x140005518
   140004a86:	mov    rax,QWORD PTR [rsp+0x40]
   140004a8b:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a90:	mov    QWORD PTR [rdi],rax
   140004a93:	mov    rax,rdi
   140004a96:	add    rsp,0x20
   140004a9a:	pop    rdi
   140004a9b:	ret    
   140004a9c:	int3   
   140004a9d:	int3   
   140004a9e:	int3   
   140004a9f:	int3   
   140004aa0:	rex push rbx
   140004aa2:	mov    eax,0x20030
   140004aa7:	call   0x140005670
   140004aac:	sub    rsp,rax
   140004aaf:	lea    rcx,[rsp+0x10032]
   140004ab7:	xor    ebx,ebx
   140004ab9:	xor    edx,edx
   140004abb:	mov    r8d,0xfffc
   140004ac1:	mov    WORD PTR [rsp+0x10030],bx
   140004ac9:	call   0x1400056ca
   140004ace:	lea    rcx,[rsp+0x32]
   140004ad3:	xor    edx,edx
   140004ad5:	mov    r8d,0xfffc
   140004adb:	mov    WORD PTR [rsp+0x30],bx
   140004ae0:	call   0x1400056ca
   140004ae5:	call   0x1400054ac
   140004aea:	lea    rdx,[rsp+0x10030]
   140004af2:	lea    rcx,[rip+0x2b7f]        # 0x140007678
   140004af9:	mov    r8d,0x7fff
   140004aff:	mov    rbx,rax
   140004b02:	call   QWORD PTR [rip+0x2530]        # 0x140007038
   140004b08:	test   eax,eax
   140004b0a:	jle    0x140004b3e
   140004b0c:	call   0x1400054be
   140004b11:	lea    rcx,[rsp+0x10030]
   140004b19:	lea    r8,[rip+0x2b68]        # 0x140007688
   140004b20:	mov    QWORD PTR [rsp+0x28],rcx
   140004b25:	lea    rcx,[rsp+0x30]
   140004b2a:	mov    r9,rbx
   140004b2d:	mov    edx,0x7fff
   140004b32:	mov    QWORD PTR [rsp+0x20],rax
   140004b37:	call   0x140005400
   140004b3c:	jmp    0x140004b61
   140004b3e:	call   0x1400054be
   140004b43:	lea    r8,[rip+0x2b5e]        # 0x1400076a8
   140004b4a:	lea    rcx,[rsp+0x30]
   140004b4f:	mov    r9,rbx
   140004b52:	mov    edx,0x7fff
   140004b57:	mov    QWORD PTR [rsp+0x20],rax
   140004b5c:	call   0x140005400
   140004b61:	lea    rdx,[rsp+0x30]
   140004b66:	lea    rcx,[rip+0x2b0b]        # 0x140007678
   140004b6d:	call   QWORD PTR [rip+0x24bd]        # 0x140007030
   140004b73:	add    rsp,0x20030
   140004b7a:	pop    rbx
   140004b7b:	ret    
   140004b7c:	int3   
   140004b7d:	int3   
   140004b7e:	int3   
   140004b7f:	int3   
   140004b80:	mov    rax,QWORD PTR [rcx]
   140004b83:	mov    rax,QWORD PTR [rax]
   140004b86:	add    rax,0x10
   140004b8a:	ret    
   140004b8b:	int3   
   140004b8c:	int3   
   140004b8d:	int3   
   140004b8e:	int3   
   140004b8f:	int3   
   140004b90:	lea    rax,[rip+0x5469]        # 0x14000a000
   140004b97:	ret    
   140004b98:	int3   
   140004b99:	int3   
   140004b9a:	int3   
   140004b9b:	int3   
   140004b9c:	int3   
   140004b9d:	int3   
   140004b9e:	int3   
   140004b9f:	int3   
   140004ba0:	mov    rax,rdx
   140004ba3:	ret    
   140004ba4:	int3   
   140004ba5:	int3   
   140004ba6:	int3   
   140004ba7:	int3   
   140004ba8:	int3   
   140004ba9:	int3   
   140004baa:	int3   
   140004bab:	int3   
   140004bac:	int3   
   140004bad:	int3   
   140004bae:	int3   
   140004baf:	int3   
   140004bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140004bb5:	mov    QWORD PTR [rsp+0x10],rbp
   140004bba:	mov    QWORD PTR [rsp+0x18],rsi
   140004bbf:	push   rdi
   140004bc0:	sub    rsp,0xb0
   140004bc7:	mov    rdi,rdx
   140004bca:	mov    rsi,rcx
   140004bcd:	lea    rbp,[rip+0x2aec]        # 0x1400076c0
   140004bd4:	xor    edx,edx
   140004bd6:	mov    rcx,rbp
   140004bd9:	xor    ebx,ebx
   140004bdb:	call   QWORD PTR [rip+0x25bf]        # 0x1400071a0
   140004be1:	test   rax,rax
   140004be4:	jne    0x140004cb3
   140004bea:	mov    rax,QWORD PTR [rip+0x25cf]        # 0x1400071c0
   140004bf1:	lea    rcx,[rsp+0x60]
   140004bf6:	mov    DWORD PTR [rsp+0x60],0x50
   140004bfe:	mov    QWORD PTR [rsp+0xa0],rbp
   140004c06:	mov    QWORD PTR [rsp+0x78],rsi
   140004c0b:	mov    DWORD PTR [rsp+0x64],0x2
   140004c13:	mov    QWORD PTR [rsp+0x68],rax
   140004c18:	mov    DWORD PTR [rsp+0x70],ebx
   140004c1c:	mov    DWORD PTR [rsp+0x74],0x8
   140004c24:	mov    QWORD PTR [rsp+0x90],rbx
   140004c2c:	mov    QWORD PTR [rsp+0x88],rbx
   140004c34:	mov    QWORD PTR [rsp+0x80],rbx
   140004c3c:	mov    QWORD PTR [rsp+0xa8],rbx
   140004c44:	mov    QWORD PTR [rsp+0x98],rbx
   140004c4c:	call   QWORD PTR [rip+0x2566]        # 0x1400071b8
   140004c52:	test   ax,ax
   140004c55:	jne    0x140004c64
   140004c57:	xor    edx,edx
   140004c59:	mov    rcx,rbp
   140004c5c:	call   QWORD PTR [rip+0x253e]        # 0x1400071a0
   140004c62:	jmp    0x140004cb3
   140004c64:	mov    QWORD PTR [rsp+0x58],rbx
   140004c69:	mov    QWORD PTR [rsp+0x50],rsi
   140004c6e:	mov    QWORD PTR [rsp+0x48],rbx
   140004c73:	mov    QWORD PTR [rsp+0x40],rbx
   140004c78:	mov    DWORD PTR [rsp+0x38],ebx
   140004c7c:	mov    DWORD PTR [rsp+0x30],0x80000000
   140004c84:	lea    r8,[rip+0x2a51]        # 0x1400076dc
   140004c8b:	mov    r9d,0xcf0000
   140004c91:	mov    rdx,rbp
   140004c94:	xor    ecx,ecx
   140004c96:	mov    DWORD PTR [rsp+0x28],ebx
   140004c9a:	mov    DWORD PTR [rsp+0x20],0x80000000
   140004ca2:	call   QWORD PTR [rip+0x2508]        # 0x1400071b0
   140004ca8:	mov    ecx,0x1
   140004cad:	test   rax,rax
   140004cb0:	cmovne ebx,ecx
   140004cb3:	lea    r11,[rsp+0xb0]
   140004cbb:	mov    QWORD PTR [rdi],rax
   140004cbe:	mov    eax,ebx
   140004cc0:	mov    rbx,QWORD PTR [r11+0x10]
   140004cc4:	mov    rbp,QWORD PTR [r11+0x18]
   140004cc8:	mov    rsi,QWORD PTR [r11+0x20]
   140004ccc:	mov    rsp,r11
   140004ccf:	pop    rdi
   140004cd0:	ret    
   140004cd1:	int3   
   140004cd2:	int3   
   140004cd3:	int3   
   140004cd4:	int3   
   140004cd5:	int3   
   140004cd6:	int3   
   140004cd7:	int3   
   140004cd8:	int3   
   140004cd9:	int3   
   140004cda:	int3   
   140004cdb:	int3   
   140004cdc:	int3   
   140004cdd:	int3   
   140004cde:	int3   
   140004cdf:	int3   
   140004ce0:	rex push rbx
   140004ce2:	sub    rsp,0x30
   140004ce6:	mov    rax,QWORD PTR [rsp+0x60]
   140004ceb:	mov    rbx,rdx
   140004cee:	mov    QWORD PTR [rsp+0x20],rax
   140004cf3:	call   0x140003390
   140004cf8:	mov    rax,rbx
   140004cfb:	add    rsp,0x30
   140004cff:	pop    rbx
   140004d00:	ret    
   140004d01:	int3   
   140004d02:	int3   
   140004d03:	int3   
   140004d04:	int3   
   140004d05:	int3   
   140004d06:	int3   
   140004d07:	int3   
   140004d08:	int3   
   140004d09:	int3   
   140004d0a:	int3   
   140004d0b:	int3   
   140004d0c:	int3   
   140004d0d:	int3   
   140004d0e:	int3   
   140004d0f:	int3   
   140004d10:	cmp    BYTE PTR [rcx],0x0
   140004d13:	jne    0x140004d18
   140004d15:	xor    eax,eax
   140004d17:	ret    
   140004d18:	or     rax,0xffffffffffffffff
   140004d1c:	nop    DWORD PTR [rax+0x0]
   140004d20:	inc    rax
   140004d23:	cmp    BYTE PTR [rcx+rax*1],0x0
   140004d27:	jne    0x140004d20
   140004d29:	ret    
   140004d2a:	int3   
   140004d2b:	int3   
   140004d2c:	int3   
   140004d2d:	int3   
   140004d2e:	int3   
   140004d2f:	int3   
   140004d30:	cmp    WORD PTR [rcx],0x0
   140004d34:	jne    0x140004d39
   140004d36:	xor    eax,eax
   140004d38:	ret    
   140004d39:	or     rax,0xffffffffffffffff
   140004d3d:	nop    DWORD PTR [rax]
   140004d40:	inc    rax
   140004d43:	cmp    WORD PTR [rcx+rax*2],0x0
   140004d48:	jne    0x140004d40
   140004d4a:	ret    
   140004d4b:	int3   
   140004d4c:	int3   
   140004d4d:	int3   
   140004d4e:	int3   
   140004d4f:	int3   
   140004d50:	mov    rax,QWORD PTR [rcx+0x8]
   140004d54:	movss  xmm2,DWORD PTR [rip+0x2aa8]        # 0x140007804
   140004d5c:	xorps  xmm0,xmm0
   140004d5f:	cvtsi2ss xmm0,rax
   140004d64:	test   rax,rax
   140004d67:	jns    0x140004d6d
   140004d69:	addss  xmm0,xmm2
   140004d6d:	mov    rax,QWORD PTR [rcx+0x30]
   140004d71:	xorps  xmm1,xmm1
   140004d74:	cvtsi2ss xmm1,rax
   140004d79:	test   rax,rax
   140004d7c:	jns    0x140004d82
   140004d7e:	addss  xmm1,xmm2
   140004d82:	divss  xmm0,xmm1
   140004d86:	ret    
   140004d87:	int3   
   140004d88:	int3   
   140004d89:	int3   
   140004d8a:	int3   
   140004d8b:	int3   
   140004d8c:	int3   
   140004d8d:	int3   
   140004d8e:	int3   
   140004d8f:	int3   
   140004d90:	movss  xmm0,DWORD PTR [rcx+0x38]
   140004d95:	ret    
   140004d96:	int3   
   140004d97:	int3   
   140004d98:	int3   
   140004d99:	int3   
   140004d9a:	int3   
   140004d9b:	int3   
   140004d9c:	int3   
   140004d9d:	int3   
   140004d9e:	int3   
   140004d9f:	int3   
   140004da0:	movabs rax,0x1fffffffffffffff
   140004daa:	ret    
   140004dab:	int3   
   140004dac:	int3   
   140004dad:	int3   
   140004dae:	int3   
   140004daf:	int3   
   140004db0:	or     rax,0xffffffffffffffff
   140004db4:	ret    
   140004db5:	int3   
   140004db6:	int3   
   140004db7:	int3   
   140004db8:	int3   
   140004db9:	int3   
   140004dba:	int3   
   140004dbb:	int3   
   140004dbc:	int3   
   140004dbd:	int3   
   140004dbe:	int3   
   140004dbf:	int3   
   140004dc0:	movabs rax,0x333333333333333
   140004dca:	ret    
   140004dcb:	int3   
   140004dcc:	int3   
   140004dcd:	int3   
   140004dce:	int3   
   140004dcf:	int3   
   140004dd0:	movabs rax,0x1fffffffffffffff
   140004dda:	ret    
   140004ddb:	int3   
   140004ddc:	int3   
   140004ddd:	int3   
   140004dde:	int3   
   140004ddf:	int3   
   140004de0:	movabs rax,0x7fffffffffffffff
   140004dea:	ret    
   140004deb:	int3   
   140004dec:	int3   
   140004ded:	int3   
   140004dee:	int3   
   140004def:	int3   
   140004df0:	or     rax,0xffffffffffffffff
   140004df4:	ret    
   140004df5:	int3   
   140004df6:	int3   
   140004df7:	int3   
   140004df8:	int3   
   140004df9:	int3   
   140004dfa:	int3   
   140004dfb:	int3   
   140004dfc:	int3   
   140004dfd:	int3   
   140004dfe:	int3   
   140004dff:	int3   
   140004e00:	movabs rax,0x333333333333333
   140004e0a:	ret    
   140004e0b:	int3   
   140004e0c:	int3   
   140004e0d:	int3   
   140004e0e:	int3   
   140004e0f:	int3   
   140004e10:	movabs rax,0x1fffffffffffffff
   140004e1a:	ret    
   140004e1b:	int3   
   140004e1c:	int3   
   140004e1d:	int3   
   140004e1e:	int3   
   140004e1f:	int3   
   140004e20:	movabs rax,0x7fffffffffffffff
   140004e2a:	ret    
   140004e2b:	int3   
   140004e2c:	int3   
   140004e2d:	int3   
   140004e2e:	int3   
   140004e2f:	int3   
   140004e30:	movabs rax,0x1fffffffffffffff
   140004e3a:	ret    
   140004e3b:	int3   
   140004e3c:	int3   
   140004e3d:	int3   
   140004e3e:	int3   
   140004e3f:	int3   
   140004e40:	or     rax,0xffffffffffffffff
   140004e44:	ret    
   140004e45:	int3   
   140004e46:	int3   
   140004e47:	int3   
   140004e48:	int3   
   140004e49:	int3   
   140004e4a:	int3   
   140004e4b:	int3   
   140004e4c:	int3   
   140004e4d:	int3   
   140004e4e:	int3   
   140004e4f:	int3   
   140004e50:	movabs rax,0x333333333333333
   140004e5a:	ret    
   140004e5b:	int3   
   140004e5c:	int3   
   140004e5d:	int3   
   140004e5e:	int3   
   140004e5f:	int3   
   140004e60:	movabs rax,0x1fffffffffffffff
   140004e6a:	ret    
   140004e6b:	int3   
   140004e6c:	int3   
   140004e6d:	int3   
   140004e6e:	int3   
   140004e6f:	int3   
   140004e70:	movabs rax,0x7fffffffffffffff
   140004e7a:	ret    
   140004e7b:	int3   
   140004e7c:	int3   
   140004e7d:	int3   
   140004e7e:	int3   
   140004e7f:	int3   
   140004e80:	mov    rax,0xfffffffffffffffe
   140004e87:	ret    
   140004e88:	int3   
   140004e89:	int3   
   140004e8a:	int3   
   140004e8b:	int3   
   140004e8c:	int3   
   140004e8d:	int3   
   140004e8e:	int3   
   140004e8f:	int3   
   140004e90:	movabs rax,0x7ffffffffffffffe
   140004e9a:	ret    
   140004e9b:	int3   
   140004e9c:	int3   
   140004e9d:	int3   
   140004e9e:	int3   
   140004e9f:	int3   
   140004ea0:	movabs rax,0x333333333333333
   140004eaa:	ret    
   140004eab:	int3   
   140004eac:	int3   
   140004ead:	int3   
   140004eae:	int3   
   140004eaf:	int3   
   140004eb0:	movabs rax,0x1fffffffffffffff
   140004eba:	ret    
   140004ebb:	int3   
   140004ebc:	int3   
   140004ebd:	int3   
   140004ebe:	int3   
   140004ebf:	int3   
   140004ec0:	mov    QWORD PTR [rsp+0x8],rbx
   140004ec5:	push   rdi
   140004ec6:	sub    rsp,0x30
   140004eca:	xor    ebx,ebx
   140004ecc:	mov    ecx,r8d
   140004ecf:	mov    rdi,rdx
   140004ed2:	mov    DWORD PTR [rsp+0x20],ebx
   140004ed6:	call   QWORD PTR [rip+0x2174]        # 0x140007050
   140004edc:	mov    QWORD PTR [rdi+0x18],0xf
   140004ee4:	test   rax,rax
   140004ee7:	mov    QWORD PTR [rdi+0x10],rbx
   140004eeb:	lea    rdx,[rip+0x26d6]        # 0x1400075c8
   140004ef2:	cmovne rdx,rax
   140004ef6:	mov    BYTE PTR [rdi],bl
   140004ef8:	cmp    BYTE PTR [rdx],bl
   140004efa:	je     0x140004f09
   140004efc:	or     rbx,0xffffffffffffffff
   140004f00:	inc    rbx
   140004f03:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140004f07:	jne    0x140004f00
   140004f09:	mov    r8,rbx
   140004f0c:	mov    rcx,rdi
   140004f0f:	call   0x140003ed0
   140004f14:	mov    rbx,QWORD PTR [rsp+0x40]
   140004f19:	mov    rax,rdi
   140004f1c:	add    rsp,0x30
   140004f20:	pop    rdi
   140004f21:	ret    
   140004f22:	int3   
   140004f23:	int3   
   140004f24:	int3   
   140004f25:	int3   
   140004f26:	int3   
   140004f27:	int3   
   140004f28:	int3   
   140004f29:	int3   
   140004f2a:	int3   
   140004f2b:	int3   
   140004f2c:	int3   
   140004f2d:	int3   
   140004f2e:	int3   
   140004f2f:	int3   
   140004f30:	rex push rbx
   140004f32:	sub    rsp,0x30
   140004f36:	xor    eax,eax
   140004f38:	mov    rbx,rdx
   140004f3b:	mov    DWORD PTR [rsp+0x20],eax
   140004f3f:	cmp    r8d,0x1
   140004f43:	jne    0x140004f6f
   140004f45:	mov    QWORD PTR [rdx+0x18],0xf
   140004f4d:	mov    QWORD PTR [rdx+0x10],rax
   140004f51:	mov    BYTE PTR [rdx],al
   140004f53:	lea    rdx,[rip+0x26c6]        # 0x140007620
   140004f5a:	lea    r8d,[rax+0x15]
   140004f5e:	mov    rcx,rbx
   140004f61:	call   0x140003ed0
   140004f66:	mov    rax,rbx
   140004f69:	add    rsp,0x30
   140004f6d:	pop    rbx
   140004f6e:	ret    
   140004f6f:	call   0x140004ec0
   140004f74:	mov    rax,rbx
   140004f77:	add    rsp,0x30
   140004f7b:	pop    rbx
   140004f7c:	ret    
   140004f7d:	int3   
   140004f7e:	int3   
   140004f7f:	int3   
   140004f80:	mov    QWORD PTR [rsp+0x8],rbx
   140004f85:	push   rdi
   140004f86:	sub    rsp,0x30
   140004f8a:	xor    ebx,ebx
   140004f8c:	mov    ecx,r8d
   140004f8f:	mov    rdi,rdx
   140004f92:	mov    DWORD PTR [rsp+0x20],ebx
   140004f96:	call   QWORD PTR [rip+0x20ac]        # 0x140007048
   140004f9c:	mov    QWORD PTR [rdi+0x18],0xf
   140004fa4:	test   rax,rax
   140004fa7:	mov    QWORD PTR [rdi+0x10],rbx
   140004fab:	lea    rdx,[rip+0x2616]        # 0x1400075c8
   140004fb2:	cmovne rdx,rax
   140004fb6:	mov    BYTE PTR [rdi],bl
   140004fb8:	cmp    BYTE PTR [rdx],bl
   140004fba:	je     0x140004fc9
   140004fbc:	or     rbx,0xffffffffffffffff
   140004fc0:	inc    rbx
   140004fc3:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140004fc7:	jne    0x140004fc0
   140004fc9:	mov    r8,rbx
   140004fcc:	mov    rcx,rdi
   140004fcf:	call   0x140003ed0
   140004fd4:	mov    rbx,QWORD PTR [rsp+0x40]
   140004fd9:	mov    rax,rdi
   140004fdc:	add    rsp,0x30
   140004fe0:	pop    rdi
   140004fe1:	ret    
   140004fe2:	int3   
   140004fe3:	int3   
   140004fe4:	int3   
   140004fe5:	int3   
   140004fe6:	int3   
   140004fe7:	int3   
   140004fe8:	int3   
   140004fe9:	int3   
   140004fea:	int3   
   140004feb:	int3   
   140004fec:	int3   
   140004fed:	int3   
   140004fee:	int3   
   140004fef:	int3   
   140004ff0:	test   r8,r8
   140004ff3:	jne    0x140004ff9
   140004ff5:	mov    rax,rcx
   140004ff8:	ret    
   140004ff9:	rex.W jmp QWORD PTR [rip+0x20c8]        # 0x1400070c8
   140005000:	test   r8,r8
   140005003:	jne    0x140005009
   140005005:	mov    rax,rcx
   140005008:	ret    
   140005009:	add    r8,r8
   14000500c:	rex.W jmp QWORD PTR [rip+0x20b5]        # 0x1400070c8
   140005013:	int3   
   140005014:	int3   
   140005015:	int3   
   140005016:	int3   
   140005017:	int3   
   140005018:	int3   
   140005019:	int3   
   14000501a:	int3   
   14000501b:	int3   
   14000501c:	int3   
   14000501d:	int3   
   14000501e:	int3   
   14000501f:	int3   
   140005020:	lea    rax,[rip+0x2599]        # 0x1400075c0
   140005027:	ret    
   140005028:	int3   
   140005029:	int3   
   14000502a:	int3   
   14000502b:	int3   
   14000502c:	int3   
   14000502d:	int3   
   14000502e:	int3   
   14000502f:	int3   
   140005030:	lea    rax,[rip+0x25d9]        # 0x140007610
   140005037:	ret    
   140005038:	int3   
   140005039:	int3   
   14000503a:	int3   
   14000503b:	int3   
   14000503c:	int3   
   14000503d:	int3   
   14000503e:	int3   
   14000503f:	int3   
   140005040:	lea    rax,[rip+0x2629]        # 0x140007670
   140005047:	ret    
   140005048:	int3   
   140005049:	int3   
   14000504a:	int3   
   14000504b:	int3   
   14000504c:	int3   
   14000504d:	int3   
   14000504e:	int3   
   14000504f:	int3   
   140005050:	rex push rsi
   140005052:	push   rdi
   140005053:	push   r14
   140005055:	sub    rsp,0x20
   140005059:	mov    rax,QWORD PTR [rcx+0x10]
   14000505d:	mov    rsi,r9
   140005060:	mov    r14,rdx
   140005063:	mov    rdi,rcx
   140005066:	test   r9,r9
   140005069:	jne    0x14000507b
   14000506b:	cmp    r8,rax
   14000506e:	cmovb  rax,r8
   140005072:	add    rsp,0x20
   140005076:	pop    r14
   140005078:	pop    rdi
   140005079:	pop    rsi
   14000507a:	ret    
   14000507b:	mov    QWORD PTR [rsp+0x40],rbx
   140005080:	mov    QWORD PTR [rsp+0x48],rbp
   140005085:	mov    QWORD PTR [rsp+0x50],r12
   14000508a:	or     r12,0xffffffffffffffff
   14000508e:	cmp    r9,rax
   140005091:	ja     0x140005111
   140005093:	sub    rax,r9
   140005096:	cmp    r8,rax
   140005099:	cmovb  rax,r8
   14000509d:	cmp    QWORD PTR [rcx+0x18],0x8
   1400050a2:	jb     0x1400050a7
   1400050a4:	mov    rcx,QWORD PTR [rcx]
   1400050a7:	movzx  ebp,WORD PTR [rdx]
   1400050aa:	lea    rbx,[rcx+rax*2]
   1400050ae:	xchg   ax,ax
   1400050b0:	cmp    WORD PTR [rbx],bp
   1400050b3:	jne    0x1400050fe
   1400050b5:	mov    rdx,rsi
   1400050b8:	mov    r8,r14
   1400050bb:	mov    rax,rbx
   1400050be:	test   rsi,rsi
   1400050c1:	je     0x1400050d9
   1400050c3:	movzx  ecx,WORD PTR [r8]
   1400050c7:	cmp    WORD PTR [rax],cx
   1400050ca:	jne    0x1400050ee
   1400050cc:	add    rax,0x2
   1400050d0:	add    r8,0x2
   1400050d4:	dec    rdx
   1400050d7:	jne    0x1400050c3
   1400050d9:	cmp    QWORD PTR [rdi+0x18],0x8
   1400050de:	jb     0x1400050e3
   1400050e0:	mov    rdi,QWORD PTR [rdi]
   1400050e3:	sub    rbx,rdi
   1400050e6:	sar    rbx,1
   1400050e9:	mov    rax,rbx
   1400050ec:	jmp    0x140005114
   1400050ee:	cmp    WORD PTR [rax],cx
   1400050f1:	mov    edx,0x1
   1400050f6:	cmovb  edx,r12d
   1400050fa:	test   edx,edx
   1400050fc:	je     0x1400050d9
   1400050fe:	mov    rcx,rdi
   140005101:	call   0x1400037d0
   140005106:	cmp    rbx,rax
   140005109:	je     0x140005111
   14000510b:	sub    rbx,0x2
   14000510f:	jmp    0x1400050b0
   140005111:	mov    rax,r12
   140005114:	mov    rbp,QWORD PTR [rsp+0x48]
   140005119:	mov    rbx,QWORD PTR [rsp+0x40]
   14000511e:	mov    r12,QWORD PTR [rsp+0x50]
   140005123:	add    rsp,0x20
   140005127:	pop    r14
   140005129:	pop    rdi
   14000512a:	pop    rsi
   14000512b:	ret    
   14000512c:	int3   
   14000512d:	int3   
   14000512e:	int3   
   14000512f:	int3   
   140005130:	cmp    WORD PTR [rdx],0x0
   140005134:	jne    0x14000513e
   140005136:	xor    r9d,r9d
   140005139:	jmp    0x140005050
   14000513e:	or     r9,0xffffffffffffffff
   140005142:	inc    r9
   140005145:	cmp    WORD PTR [rdx+r9*2],0x0
   14000514b:	jne    0x140005142
   14000514d:	jmp    0x140005050
   140005152:	int3   
   140005153:	int3   
   140005154:	int3   
   140005155:	int3   
   140005156:	int3   
   140005157:	int3   
   140005158:	int3   
   140005159:	int3   
   14000515a:	int3   
   14000515b:	int3   
   14000515c:	int3   
   14000515d:	int3   
   14000515e:	int3   
   14000515f:	int3   
   140005160:	mov    rax,rdx
   140005163:	ret    
   140005164:	int3   
   140005165:	int3   
   140005166:	int3   
   140005167:	int3   
   140005168:	int3   
   140005169:	int3   
   14000516a:	int3   
   14000516b:	int3   
   14000516c:	int3   
   14000516d:	int3   
   14000516e:	int3   
   14000516f:	int3   
   140005170:	mov    rax,rdx
   140005173:	ret    
   140005174:	int3   
   140005175:	int3   
   140005176:	int3   
   140005177:	int3   
   140005178:	int3   
   140005179:	int3   
   14000517a:	int3   
   14000517b:	int3   
   14000517c:	int3   
   14000517d:	int3   
   14000517e:	int3   
   14000517f:	int3   
   140005180:	mov    rax,rdx
   140005183:	ret    
   140005184:	int3   
   140005185:	int3   
   140005186:	int3   
   140005187:	int3   
   140005188:	int3   
   140005189:	int3   
   14000518a:	int3   
   14000518b:	int3   
   14000518c:	int3   
   14000518d:	int3   
   14000518e:	int3   
   14000518f:	int3   
   140005190:	mov    rax,rdx
   140005193:	ret    
   140005194:	int3   
   140005195:	int3   
   140005196:	int3   
   140005197:	int3   
   140005198:	int3   
   140005199:	int3   
   14000519a:	int3   
   14000519b:	int3   
   14000519c:	int3   
   14000519d:	int3   
   14000519e:	int3   
   14000519f:	int3   
   1400051a0:	mov    rax,rcx
   1400051a3:	ret    
   1400051a4:	int3   
   1400051a5:	int3   
   1400051a6:	int3   
   1400051a7:	int3   
   1400051a8:	int3   
   1400051a9:	int3   
   1400051aa:	int3   
   1400051ab:	int3   
   1400051ac:	int3   
   1400051ad:	int3   
   1400051ae:	int3   
   1400051af:	int3   
   1400051b0:	mov    rax,rcx
   1400051b3:	ret    
   1400051b4:	int3   
   1400051b5:	int3   
   1400051b6:	int3   
   1400051b7:	int3   
   1400051b8:	int3   
   1400051b9:	int3   
   1400051ba:	int3   
   1400051bb:	int3   
   1400051bc:	int3   
   1400051bd:	int3   
   1400051be:	int3   
   1400051bf:	int3   
   1400051c0:	mov    rax,QWORD PTR [rcx+0x8]
   1400051c4:	ret    
   1400051c5:	int3   
   1400051c6:	int3   
   1400051c7:	int3   
   1400051c8:	int3   
   1400051c9:	int3   
   1400051ca:	int3   
   1400051cb:	int3   
   1400051cc:	int3   
   1400051cd:	int3   
   1400051ce:	int3   
   1400051cf:	int3   
   1400051d0:	mov    rax,QWORD PTR [rcx+0x10]
   1400051d4:	ret    
   1400051d5:	int3   
   1400051d6:	int3   
   1400051d7:	int3   
   1400051d8:	int3   
   1400051d9:	int3   
   1400051da:	int3   
   1400051db:	int3   
   1400051dc:	int3   
   1400051dd:	int3   
   1400051de:	int3   
   1400051df:	int3   
   1400051e0:	mov    rax,QWORD PTR [rcx+0x10]
   1400051e4:	ret    
   1400051e5:	int3   
   1400051e6:	int3   
   1400051e7:	int3   
   1400051e8:	int3   
   1400051e9:	int3   
   1400051ea:	int3   
   1400051eb:	int3   
   1400051ec:	int3   
   1400051ed:	int3   
   1400051ee:	int3   
   1400051ef:	int3   
   1400051f0:	mov    rax,QWORD PTR [rcx+0x8]
   1400051f4:	ret    
   1400051f5:	int3   
   1400051f6:	int3   
   1400051f7:	int3   
   1400051f8:	int3   
   1400051f9:	int3   
   1400051fa:	int3   
   1400051fb:	int3   
   1400051fc:	int3   
   1400051fd:	int3   
   1400051fe:	int3   
   1400051ff:	int3   
   140005200:	mov    rax,QWORD PTR [rcx+0x8]
   140005204:	sub    rax,QWORD PTR [rcx]
   140005207:	sar    rax,0x3
   14000520b:	ret    
   14000520c:	int3   
   14000520d:	int3   
   14000520e:	int3   
   14000520f:	int3   
   140005210:	rex push rbx
   140005212:	sub    rsp,0x30
   140005216:	xor    eax,eax
   140005218:	mov    rbx,rdx
   14000521b:	mov    QWORD PTR [rdx+0x18],0x7
   140005223:	mov    QWORD PTR [rdx+0x10],rax
   140005227:	mov    WORD PTR [rdx],ax
   14000522a:	mov    rdx,rcx
   14000522d:	mov    rcx,rbx
   140005230:	mov    DWORD PTR [rsp+0x20],eax
   140005234:	call   0x140004000
   140005239:	mov    rax,rbx
   14000523c:	add    rsp,0x30
   140005240:	pop    rbx
   140005241:	ret    
   140005242:	int3   
   140005243:	int3   
   140005244:	int3   
   140005245:	int3   
   140005246:	int3   
   140005247:	int3   
   140005248:	int3   
   140005249:	int3   
   14000524a:	int3   
   14000524b:	int3   
   14000524c:	int3   
   14000524d:	int3   
   14000524e:	int3   
   14000524f:	int3   
   140005250:	lea    rax,[rip+0x4db9]        # 0x14000a010
   140005257:	ret    
   140005258:	int3   
   140005259:	int3   
   14000525a:	int3   
   14000525b:	int3   
   14000525c:	int3   
   14000525d:	int3   
   14000525e:	int3   
   14000525f:	int3   
   140005260:	mov    eax,DWORD PTR [rcx]
   140005262:	ret    
   140005263:	int3   
   140005264:	int3   
   140005265:	int3   
   140005266:	int3   
   140005267:	int3   
   140005268:	int3   
   140005269:	int3   
   14000526a:	int3   
   14000526b:	int3   
   14000526c:	int3   
   14000526d:	int3   
   14000526e:	int3   
   14000526f:	int3   
   140005270:	mov    eax,DWORD PTR [rcx]
   140005272:	ret    
   140005273:	int3   
   140005274:	int3   
   140005275:	int3   
   140005276:	int3   
   140005277:	int3   
   140005278:	int3   
   140005279:	int3   
   14000527a:	int3   
   14000527b:	int3   
   14000527c:	int3   
   14000527d:	int3   
   14000527e:	int3   
   14000527f:	int3   
   140005280:	rex push rbx
   140005282:	sub    rsp,0x70
   140005286:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000528f:	lea    rdx,[rsp+0x20]
   140005294:	call   0x140004bb0
   140005299:	cmp    QWORD PTR [rsp+0x20],0x0
   14000529f:	jne    0x1400052c4
   1400052a1:	xor    r9d,r9d
   1400052a4:	lea    r8,[rip+0x247d]        # 0x140007728
   1400052ab:	lea    rdx,[rip+0x242e]        # 0x1400076e0
   1400052b2:	xor    ecx,ecx
   1400052b4:	call   QWORD PTR [rip+0x1eee]        # 0x1400071a8
   1400052ba:	mov    eax,0x1
   1400052bf:	jmp    0x1400053e3
   1400052c4:	call   0x14000549a
   1400052c9:	call   0x1400054ac
   1400052ce:	mov    rcx,rax
   1400052d1:	call   0x1400054b2
   1400052d6:	call   0x1400054ac
   1400052db:	mov    rcx,rax
   1400052de:	call   0x1400054b8
   1400052e3:	call   0x140004aa0
   1400052e8:	call   0x1400054ac
   1400052ed:	mov    QWORD PTR [rsp+0x48],0x7
   1400052f6:	xor    ebx,ebx
   1400052f8:	mov    QWORD PTR [rsp+0x40],rbx
   1400052fd:	mov    WORD PTR [rsp+0x30],bx
   140005302:	cmp    WORD PTR [rax],bx
   140005305:	jne    0x14000530c
   140005307:	mov    r8d,ebx
   14000530a:	jmp    0x14000531a
   14000530c:	or     r8,0xffffffffffffffff
   140005310:	inc    r8
   140005313:	cmp    WORD PTR [rax+r8*2],bx
   140005318:	jne    0x140005310
   14000531a:	mov    rdx,rax
   14000531d:	lea    rcx,[rsp+0x30]
   140005322:	call   0x140004170
   140005327:	nop
   140005328:	mov    r9d,0xa
   14000532e:	or     r8,0xffffffffffffffff
   140005332:	lea    rdx,[rip+0x2417]        # 0x140007750
   140005339:	lea    rcx,[rsp+0x30]
   14000533e:	call   0x140005050
   140005343:	mov    r9,rax
   140005346:	xor    r8d,r8d
   140005349:	lea    rdx,[rsp+0x50]
   14000534e:	lea    rcx,[rsp+0x30]
   140005353:	call   0x140005210
   140005358:	nop
   140005359:	lea    rcx,[rip+0x2408]        # 0x140007768
   140005360:	call   0x1400054a0
   140005365:	lea    rcx,[rsp+0x50]
   14000536a:	cmp    QWORD PTR [rsp+0x68],0x8
   140005370:	cmovae rcx,QWORD PTR [rsp+0x50]
   140005376:	call   0x1400054a0
   14000537b:	lea    rcx,[rip+0x23f6]        # 0x140007778
   140005382:	call   0x1400054a0
   140005387:	lea    rcx,[rsp+0x30]
   14000538c:	cmp    QWORD PTR [rsp+0x48],0x8
   140005392:	cmovae rcx,QWORD PTR [rsp+0x30]
   140005398:	call   0x1400054a0
   14000539d:	lea    rcx,[rip+0x23e4]        # 0x140007788
   1400053a4:	call   0x1400054a6
   1400053a9:	nop
   1400053aa:	cmp    QWORD PTR [rsp+0x68],0x8
   1400053b0:	jb     0x1400053bc
   1400053b2:	mov    rcx,QWORD PTR [rsp+0x50]
   1400053b7:	call   0x140005518
   1400053bc:	mov    QWORD PTR [rsp+0x68],0x7
   1400053c5:	mov    QWORD PTR [rsp+0x60],rbx
   1400053ca:	mov    WORD PTR [rsp+0x50],bx
   1400053cf:	cmp    QWORD PTR [rsp+0x48],0x8
   1400053d5:	jb     0x1400053e1
   1400053d7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400053dc:	call   0x140005518
   1400053e1:	xor    eax,eax
   1400053e3:	add    rsp,0x70
   1400053e7:	pop    rbx
   1400053e8:	ret    
   1400053e9:	int3   
   1400053ea:	int3   
   1400053eb:	int3   
   1400053ec:	int3   
   1400053ed:	int3   
   1400053ee:	int3   
   1400053ef:	int3   
   1400053f0:	rex.W jmp QWORD PTR [rip+0x1ce1]        # 0x1400070d8
   1400053f7:	int3   
   1400053f8:	int3   
   1400053f9:	int3   
   1400053fa:	int3   
   1400053fb:	int3   
   1400053fc:	int3   
   1400053fd:	int3   
   1400053fe:	int3   
   1400053ff:	int3   
   140005400:	mov    QWORD PTR [rsp+0x18],r8
   140005405:	mov    QWORD PTR [rsp+0x20],r9
   14000540a:	sub    rsp,0x38
   14000540e:	lea    rax,[rsp+0x58]
   140005413:	xor    r9d,r9d
   140005416:	mov    QWORD PTR [rsp+0x20],rax
   14000541b:	call   QWORD PTR [rip+0x1caf]        # 0x1400070d0
   140005421:	add    rsp,0x38
   140005425:	ret    
   140005426:	int3   
   140005427:	int3   
   140005428:	int3   
   140005429:	int3   
   14000542a:	int3   
   14000542b:	int3   
   14000542c:	int3   
   14000542d:	int3   
   14000542e:	int3   
   14000542f:	int3   
   140005430:	test   r8,r8
   140005433:	je     0x14000544a
   140005435:	movzx  eax,WORD PTR [rdx]
   140005438:	cmp    WORD PTR [rcx],ax
   14000543b:	jne    0x14000544d
   14000543d:	add    rcx,0x2
   140005441:	add    rdx,0x2
   140005445:	dec    r8
   140005448:	jne    0x140005435
   14000544a:	xor    eax,eax
   14000544c:	ret    
   14000544d:	movzx  edx,WORD PTR [rdx]
   140005450:	or     r8d,0xffffffff
   140005454:	mov    eax,0x1
   140005459:	cmp    WORD PTR [rcx],dx
   14000545c:	cmovb  eax,r8d
   140005460:	ret    
   140005461:	int3   
   140005462:	int3   
   140005463:	int3   
   140005464:	int3   
   140005465:	int3   
   140005466:	int3   
   140005467:	int3   
   140005468:	int3   
   140005469:	int3   
   14000546a:	int3   
   14000546b:	int3   
   14000546c:	int3   
   14000546d:	int3   
   14000546e:	int3   
   14000546f:	int3   
   140005470:	rex push rbx
   140005472:	sub    rsp,0x20
   140005476:	add    r8,r8
   140005479:	mov    rbx,rcx
   14000547c:	call   0x1400056c4
   140005481:	mov    rax,rbx
   140005484:	add    rsp,0x20
   140005488:	pop    rbx
   140005489:	ret    
   14000548a:	int3   
   14000548b:	int3   
   14000548c:	int3   
   14000548d:	int3   
   14000548e:	int3   
   14000548f:	int3   
   140005490:	add    r8,r8
   140005493:	rex.W jmp QWORD PTR [rip+0x1c2e]        # 0x1400070c8
   14000549a:	jmp    QWORD PTR [rip+0x1d60]        # 0x140007200
   1400054a0:	jmp    QWORD PTR [rip+0x1d52]        # 0x1400071f8
   1400054a6:	jmp    QWORD PTR [rip+0x1d44]        # 0x1400071f0
   1400054ac:	jmp    QWORD PTR [rip+0x1d36]        # 0x1400071e8
   1400054b2:	jmp    QWORD PTR [rip+0x1d28]        # 0x1400071e0
   1400054b8:	jmp    QWORD PTR [rip+0x1d1a]        # 0x1400071d8
   1400054be:	jmp    QWORD PTR [rip+0x1d0c]        # 0x1400071d0
   1400054c4:	jmp    QWORD PTR [rip+0x1b6e]        # 0x140007038
   1400054ca:	jmp    QWORD PTR [rip+0x1b60]        # 0x140007030
   1400054d0:	jmp    QWORD PTR [rip+0x1cea]        # 0x1400071c0
   1400054d6:	jmp    QWORD PTR [rip+0x1cdc]        # 0x1400071b8
   1400054dc:	jmp    QWORD PTR [rip+0x1cce]        # 0x1400071b0
   1400054e2:	jmp    QWORD PTR [rip+0x1cc0]        # 0x1400071a8
   1400054e8:	jmp    QWORD PTR [rip+0x1cb2]        # 0x1400071a0
   1400054ee:	jmp    QWORD PTR [rip+0x1b74]        # 0x140007068
   1400054f4:	jmp    QWORD PTR [rip+0x1b66]        # 0x140007060
   1400054fa:	jmp    QWORD PTR [rip+0x1b58]        # 0x140007058
   140005500:	jmp    QWORD PTR [rip+0x1b4a]        # 0x140007050
   140005506:	jmp    QWORD PTR [rip+0x1b3c]        # 0x140007048
   14000550c:	jmp    QWORD PTR [rip+0x1b9e]        # 0x1400070b0
   140005512:	jmp    QWORD PTR [rip+0x1ba0]        # 0x1400070b8
   140005518:	jmp    QWORD PTR [rip+0x1ba2]        # 0x1400070c0
   14000551e:	int3   
   14000551f:	int3   
   140005520:	rex push rbx
   140005522:	sub    rsp,0x20
   140005526:	cmp    QWORD PTR [rip+0x4c8a],0x0        # 0x14000a1b8
   14000552e:	jne    0x140005566
   140005530:	mov    edx,0x8
   140005535:	lea    ecx,[rdx+0x18]
   140005538:	call   QWORD PTR [rip+0x1bda]        # 0x140007118
   14000553e:	mov    rcx,rax
   140005541:	mov    rbx,rax
   140005544:	call   QWORD PTR [rip+0x1ade]        # 0x140007028
   14000554a:	mov    QWORD PTR [rip+0x4c67],rax        # 0x14000a1b8
   140005551:	mov    QWORD PTR [rip+0x4c58],rax        # 0x14000a1b0
   140005558:	test   rbx,rbx
   14000555b:	jne    0x140005562
   14000555d:	lea    eax,[rbx+0x18]
   140005560:	jmp    0x140005568
   140005562:	and    QWORD PTR [rbx],0x0
   140005566:	xor    eax,eax
   140005568:	add    rsp,0x20
   14000556c:	pop    rbx
   14000556d:	ret    
   14000556e:	int3   
   14000556f:	int3   
   140005570:	rex push rbx
   140005572:	sub    rsp,0x20
   140005576:	mov    rbx,rcx
   140005579:	mov    rcx,QWORD PTR [rip+0x4c38]        # 0x14000a1b8
   140005580:	call   QWORD PTR [rip+0x1a9a]        # 0x140007020
   140005586:	mov    QWORD PTR [rsp+0x38],rax
   14000558b:	cmp    rax,0xffffffffffffffff
   14000558f:	jne    0x14000559c
   140005591:	mov    rcx,rbx
   140005594:	call   QWORD PTR [rip+0x1b96]        # 0x140007130
   14000559a:	jmp    0x14000561a
   14000559c:	mov    ecx,0x8
   1400055a1:	call   0x140005ad6
   1400055a6:	nop
   1400055a7:	mov    rcx,QWORD PTR [rip+0x4c0a]        # 0x14000a1b8
   1400055ae:	call   QWORD PTR [rip+0x1a6c]        # 0x140007020
   1400055b4:	mov    QWORD PTR [rsp+0x38],rax
   1400055b9:	mov    rcx,QWORD PTR [rip+0x4bf0]        # 0x14000a1b0
   1400055c0:	call   QWORD PTR [rip+0x1a5a]        # 0x140007020
   1400055c6:	mov    QWORD PTR [rsp+0x40],rax
   1400055cb:	mov    rcx,rbx
   1400055ce:	call   QWORD PTR [rip+0x1a54]        # 0x140007028
   1400055d4:	mov    rcx,rax
   1400055d7:	lea    r8,[rsp+0x40]
   1400055dc:	lea    rdx,[rsp+0x38]
   1400055e1:	call   0x140005ae8
   1400055e6:	mov    rbx,rax
   1400055e9:	mov    rcx,QWORD PTR [rsp+0x38]
   1400055ee:	call   QWORD PTR [rip+0x1a34]        # 0x140007028
   1400055f4:	mov    QWORD PTR [rip+0x4bbd],rax        # 0x14000a1b8
   1400055fb:	mov    rcx,QWORD PTR [rsp+0x40]
   140005600:	call   QWORD PTR [rip+0x1a22]        # 0x140007028
   140005606:	mov    QWORD PTR [rip+0x4ba3],rax        # 0x14000a1b0
   14000560d:	mov    ecx,0x8
   140005612:	call   0x140005adc
   140005617:	mov    rax,rbx
   14000561a:	add    rsp,0x20
   14000561e:	pop    rbx
   14000561f:	ret    
   140005620:	sub    rsp,0x28
   140005624:	call   0x140005570
   140005629:	neg    rax
   14000562c:	sbb    eax,eax
   14000562e:	neg    eax
   140005630:	dec    eax
   140005632:	add    rsp,0x28
   140005636:	ret    
   140005637:	int3   
   140005638:	jmp    QWORD PTR [rip+0x1a8a]        # 0x1400070c8
   14000563e:	jmp    QWORD PTR [rip+0x1a8c]        # 0x1400070d0
   140005644:	jmp    QWORD PTR [rip+0x1a8e]        # 0x1400070d8
   14000564a:	jmp    QWORD PTR [rip+0x1a90]        # 0x1400070e0
   140005650:	jmp    QWORD PTR [rip+0x1a92]        # 0x1400070e8
   140005656:	int3   
   140005657:	int3   
   140005658:	int3   
   140005659:	int3   
   14000565a:	int3   
   14000565b:	int3   
   14000565c:	int3   
   14000565d:	int3   
   14000565e:	int3   
   14000565f:	int3   
   140005660:	int3   
   140005661:	int3   
   140005662:	int3   
   140005663:	int3   
   140005664:	int3   
   140005665:	int3   
   140005666:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005670:	sub    rsp,0x10
   140005674:	mov    QWORD PTR [rsp],r10
   140005678:	mov    QWORD PTR [rsp+0x8],r11
   14000567d:	xor    r11,r11
   140005680:	lea    r10,[rsp+0x18]
   140005685:	sub    r10,rax
   140005688:	cmovb  r10,r11
   14000568c:	mov    r11,QWORD PTR gs:0x10
   140005695:	cmp    r10,r11
   140005698:	jae    0x1400056b0
   14000569a:	and    r10w,0xf000
   1400056a0:	lea    r11,[r11-0x1000]
   1400056a7:	mov    BYTE PTR [r11],0x0
   1400056ab:	cmp    r10,r11
   1400056ae:	jne    0x1400056a0
   1400056b0:	mov    r10,QWORD PTR [rsp]
   1400056b4:	mov    r11,QWORD PTR [rsp+0x8]
   1400056b9:	add    rsp,0x10
   1400056bd:	ret    
   1400056be:	jmp    QWORD PTR [rip+0x1a2c]        # 0x1400070f0
   1400056c4:	jmp    QWORD PTR [rip+0x1a2e]        # 0x1400070f8
   1400056ca:	jmp    QWORD PTR [rip+0x1a30]        # 0x140007100
   1400056d0:	lea    rax,[rip+0x2199]        # 0x140007870
   1400056d7:	mov    QWORD PTR [rcx],rax
   1400056da:	mov    rax,rcx
   1400056dd:	ret    
   1400056de:	int3   
   1400056df:	int3   
   1400056e0:	mov    rax,rcx
   1400056e3:	ret    
   1400056e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400056e9:	mov    QWORD PTR [rsp+0x10],rsi
   1400056ee:	push   rdi
   1400056ef:	sub    rsp,0x20
   1400056f3:	mov    esi,edx
   1400056f5:	mov    rbx,rcx
   1400056f8:	test   dl,0x2
   1400056fb:	je     0x140005728
   1400056fd:	lea    rdi,[rcx-0x8]
   140005701:	lea    r9,[rip+0x74e]        # 0x140005e56
   140005708:	mov    edx,0x18
   14000570d:	mov    r8d,DWORD PTR [rdi]
   140005710:	call   0x140005af4
   140005715:	test   sil,0x1
   140005719:	je     0x140005723
   14000571b:	mov    rcx,rdi
   14000571e:	call   0x140005518
   140005723:	mov    rax,rdi
   140005726:	jmp    0x14000573e
   140005728:	call   0x140005e56
   14000572d:	test   sil,0x1
   140005731:	je     0x14000573b
   140005733:	mov    rcx,rbx
   140005736:	call   0x140005518
   14000573b:	mov    rax,rbx
   14000573e:	mov    rbx,QWORD PTR [rsp+0x30]
   140005743:	mov    rsi,QWORD PTR [rsp+0x38]
   140005748:	add    rsp,0x20
   14000574c:	pop    rdi
   14000574d:	ret    
   14000574e:	int3   
   14000574f:	int3   
   140005750:	sub    rsp,0x28
   140005754:	mov    eax,0x5a4d
   140005759:	cmp    WORD PTR [rip+0xffffffffffffa8a0],ax        # 0x140000000
   140005760:	je     0x140005766
   140005762:	xor    ecx,ecx
   140005764:	jmp    0x14000579e
   140005766:	movsxd rax,DWORD PTR [rip+0xffffffffffffa8cf]        # 0x14000003c
   14000576d:	lea    rcx,[rip+0xffffffffffffa88c]        # 0x140000000
   140005774:	add    rax,rcx
   140005777:	cmp    DWORD PTR [rax],0x4550
   14000577d:	jne    0x140005762
   14000577f:	mov    ecx,0x20b
   140005784:	cmp    WORD PTR [rax+0x18],cx
   140005788:	jne    0x140005762
   14000578a:	xor    ecx,ecx
   14000578c:	cmp    DWORD PTR [rax+0x84],0xe
   140005793:	jbe    0x14000579e
   140005795:	cmp    DWORD PTR [rax+0xf8],ecx
   14000579b:	setne  cl
   14000579e:	mov    DWORD PTR [rip+0x49c4],ecx        # 0x14000a168
   1400057a4:	mov    ecx,0x2
   1400057a9:	call   QWORD PTR [rip+0x19a9]        # 0x140007158
   1400057af:	or     rcx,0xffffffffffffffff
   1400057b3:	call   QWORD PTR [rip+0x186f]        # 0x140007028
   1400057b9:	mov    rcx,QWORD PTR [rip+0x18c0]        # 0x140007080
   1400057c0:	mov    QWORD PTR [rip+0x49e9],rax        # 0x14000a1b0
   1400057c7:	mov    QWORD PTR [rip+0x49ea],rax        # 0x14000a1b8
   1400057ce:	mov    eax,DWORD PTR [rip+0x49c0]        # 0x14000a194
   1400057d4:	mov    DWORD PTR [rcx],eax
   1400057d6:	mov    rdx,QWORD PTR [rip+0x18ab]        # 0x140007088
   1400057dd:	mov    eax,DWORD PTR [rip+0x49a5]        # 0x14000a188
   1400057e3:	mov    DWORD PTR [rdx],eax
   1400057e5:	call   0x140005dc8
   1400057ea:	call   0x140005c20
   1400057ef:	cmp    DWORD PTR [rip+0x483e],0x0        # 0x14000a034
   1400057f6:	jne    0x140005805
   1400057f8:	lea    rcx,[rip+0x5bd]        # 0x140005dbc
   1400057ff:	call   QWORD PTR [rip+0x1983]        # 0x140007188
   140005805:	cmp    DWORD PTR [rip+0x482c],0xffffffff        # 0x14000a038
   14000580c:	jne    0x140005817
   14000580e:	or     ecx,0xffffffff
   140005811:	call   QWORD PTR [rip+0x1969]        # 0x140007180
   140005817:	xor    eax,eax
   140005819:	add    rsp,0x28
   14000581d:	ret    
   14000581e:	int3   
   14000581f:	int3   
   140005820:	sub    rsp,0x38
   140005824:	lea    rcx,[rip+0x5d5]        # 0x140005e00
   14000582b:	call   0x140005620
   140005830:	mov    eax,DWORD PTR [rip+0x495a]        # 0x14000a190
   140005836:	mov    r9d,DWORD PTR [rip+0x494f]        # 0x14000a18c
   14000583d:	mov    DWORD PTR [rip+0x4941],eax        # 0x14000a184
   140005843:	lea    rax,[rip+0x493a]        # 0x14000a184
   14000584a:	lea    r8,[rip+0x4927]        # 0x14000a178
   140005851:	lea    rdx,[rip+0x4918]        # 0x14000a170
   140005858:	lea    rcx,[rip+0x490d]        # 0x14000a16c
   14000585f:	mov    QWORD PTR [rsp+0x20],rax
   140005864:	call   QWORD PTR [rip+0x18e6]        # 0x140007150
   14000586a:	mov    DWORD PTR [rip+0x4910],eax        # 0x14000a180
   140005870:	test   eax,eax
   140005872:	jns    0x14000587e
   140005874:	mov    ecx,0x8
   140005879:	call   0x140005c18
   14000587e:	add    rsp,0x38
   140005882:	ret    
   140005883:	int3   
   140005884:	mov    rax,QWORD PTR gs:0x30
   14000588d:	ret    
   14000588e:	int3   
   14000588f:	int3   
   140005890:	sub    rsp,0x28
   140005894:	call   0x140005d10
   140005899:	add    rsp,0x28
   14000589d:	jmp    0x1400058a4
   1400058a2:	int3   
   1400058a3:	int3   
   1400058a4:	mov    rax,rsp
   1400058a7:	mov    QWORD PTR [rax+0x8],rbx
   1400058ab:	mov    QWORD PTR [rax+0x10],rsi
   1400058af:	push   rdi
   1400058b0:	sub    rsp,0x30
   1400058b4:	and    QWORD PTR [rax-0x10],0x0
   1400058b9:	and    DWORD PTR [rax-0x18],0x0
   1400058bd:	call   QWORD PTR [rip+0x187d]        # 0x140007140
   1400058c3:	movzx  esi,ax
   1400058c6:	mov    rcx,QWORD PTR gs:0x30
   1400058cf:	mov    rdx,QWORD PTR [rcx+0x8]
   1400058d3:	xor    ebx,ebx
   1400058d5:	xor    eax,eax
   1400058d7:	lock cmpxchg QWORD PTR [rip+0x48b8],rdx        # 0x14000a198
   1400058e0:	je     0x1400058f0
   1400058e2:	cmp    rax,rdx
   1400058e5:	jne    0x1400058ee
   1400058e7:	mov    ebx,0x1
   1400058ec:	jmp    0x1400058f0
   1400058ee:	jmp    0x1400058d5
   1400058f0:	mov    eax,DWORD PTR [rip+0x48aa]        # 0x14000a1a0
   1400058f6:	cmp    eax,0x1
   1400058f9:	jne    0x140005905
   1400058fb:	lea    ecx,[rax+0x1e]
   1400058fe:	call   0x140005c18
   140005903:	jmp    0x140005944
   140005905:	mov    eax,DWORD PTR [rip+0x4895]        # 0x14000a1a0
   14000590b:	test   eax,eax
   14000590d:	jne    0x14000593a
   14000590f:	mov    DWORD PTR [rip+0x4887],0x1        # 0x14000a1a0
   140005919:	lea    rdx,[rip+0x1940]        # 0x140007260
   140005920:	lea    rcx,[rip+0x1919]        # 0x140007240
   140005927:	call   0x140005e44
   14000592c:	test   eax,eax
   14000592e:	je     0x140005944
   140005930:	mov    eax,0xff
   140005935:	jmp    0x140005a7c
   14000593a:	mov    DWORD PTR [rip+0x481c],0x1        # 0x14000a160
   140005944:	mov    eax,DWORD PTR [rip+0x4856]        # 0x14000a1a0
   14000594a:	cmp    eax,0x1
   14000594d:	jne    0x14000596c
   14000594f:	lea    rdx,[rip+0x18e2]        # 0x140007238
   140005956:	lea    rcx,[rip+0x18b3]        # 0x140007210
   14000595d:	call   0x140005e4a
   140005962:	mov    DWORD PTR [rip+0x4834],0x2        # 0x14000a1a0
   14000596c:	test   ebx,ebx
   14000596e:	jne    0x140005979
   140005970:	xor    eax,eax
   140005972:	xchg   QWORD PTR [rip+0x481f],rax        # 0x14000a198
   140005979:	cmp    QWORD PTR [rip+0x4827],0x0        # 0x14000a1a8
   140005981:	je     0x1400059a5
   140005983:	lea    rcx,[rip+0x481e]        # 0x14000a1a8
   14000598a:	call   0x140005c80
   14000598f:	test   eax,eax
   140005991:	je     0x1400059a5
   140005993:	xor    r8d,r8d
   140005996:	lea    edx,[r8+0x2]
   14000599a:	xor    ecx,ecx
   14000599c:	mov    rax,QWORD PTR [rip+0x4805]        # 0x14000a1a8
   1400059a3:	call   rax
   1400059a5:	mov    rax,QWORD PTR [rip+0x16fc]        # 0x1400070a8
   1400059ac:	mov    rbx,QWORD PTR [rax]
   1400059af:	mov    QWORD PTR [rsp+0x28],rbx
   1400059b4:	mov    edi,DWORD PTR [rsp+0x20]
   1400059b8:	cmp    BYTE PTR [rbx],0x20
   1400059bb:	ja     0x140005a1b
   1400059bd:	cmp    BYTE PTR [rbx],0x0
   1400059c0:	je     0x1400059c6
   1400059c2:	test   edi,edi
   1400059c4:	jne    0x140005a1b
   1400059c6:	mov    al,BYTE PTR [rbx]
   1400059c8:	dec    al
   1400059ca:	cmp    al,0x1f
   1400059cc:	ja     0x1400059d8
   1400059ce:	inc    rbx
   1400059d1:	mov    QWORD PTR [rsp+0x28],rbx
   1400059d6:	jmp    0x1400059c6
   1400059d8:	movzx  r9d,si
   1400059dc:	mov    r8,rbx
   1400059df:	xor    edx,edx
   1400059e1:	lea    rcx,[rip+0xffffffffffffa618]        # 0x140000000
   1400059e8:	call   0x140005280
   1400059ed:	mov    DWORD PTR [rip+0x4771],eax        # 0x14000a164
   1400059f3:	cmp    DWORD PTR [rip+0x476e],0x0        # 0x14000a168
   1400059fa:	jne    0x140005a04
   1400059fc:	mov    ecx,eax
   1400059fe:	call   QWORD PTR [rip+0x175c]        # 0x140007160
   140005a04:	cmp    DWORD PTR [rip+0x4755],0x0        # 0x14000a160
   140005a0b:	jne    0x140005a19
   140005a0d:	call   QWORD PTR [rip+0x175d]        # 0x140007170
   140005a13:	mov    eax,DWORD PTR [rip+0x474b]        # 0x14000a164
   140005a19:	jmp    0x140005a7c
   140005a1b:	cmp    BYTE PTR [rbx],0x22
   140005a1e:	jne    0x140005a2d
   140005a20:	xor    eax,eax
   140005a22:	test   edi,edi
   140005a24:	sete   al
   140005a27:	mov    edi,eax
   140005a29:	mov    DWORD PTR [rsp+0x20],eax
   140005a2d:	movzx  ecx,BYTE PTR [rbx]
   140005a30:	call   QWORD PTR [rip+0x1742]        # 0x140007178
   140005a36:	test   eax,eax
   140005a38:	je     0x140005a42
   140005a3a:	inc    rbx
   140005a3d:	mov    QWORD PTR [rsp+0x28],rbx
   140005a42:	inc    rbx
   140005a45:	mov    QWORD PTR [rsp+0x28],rbx
   140005a4a:	jmp    0x1400059b8
   140005a4f:	mov    DWORD PTR [rip+0x470f],eax        # 0x14000a164
   140005a55:	cmp    DWORD PTR [rip+0x470c],0x0        # 0x14000a168
   140005a5c:	jne    0x140005a67
   140005a5e:	mov    ecx,eax
   140005a60:	call   QWORD PTR [rip+0x1702]        # 0x140007168
   140005a66:	int3   
   140005a67:	cmp    DWORD PTR [rip+0x46f2],0x0        # 0x14000a160
   140005a6e:	jne    0x140005a7c
   140005a70:	call   QWORD PTR [rip+0x16fa]        # 0x140007170
   140005a76:	mov    eax,DWORD PTR [rip+0x46e8]        # 0x14000a164
   140005a7c:	mov    rbx,QWORD PTR [rsp+0x40]
   140005a81:	mov    rsi,QWORD PTR [rsp+0x48]
   140005a86:	add    rsp,0x30
   140005a8a:	pop    rdi
   140005a8b:	ret    
   140005a8c:	mov    eax,0x5a4d
   140005a91:	cmp    WORD PTR [rip+0xffffffffffffa568],ax        # 0x140000000
   140005a98:	je     0x140005a9d
   140005a9a:	xor    eax,eax
   140005a9c:	ret    
   140005a9d:	movsxd rcx,DWORD PTR [rip+0xffffffffffffa598]        # 0x14000003c
   140005aa4:	lea    rax,[rip+0xffffffffffffa555]        # 0x140000000
   140005aab:	add    rcx,rax
   140005aae:	cmp    DWORD PTR [rcx],0x4550
   140005ab4:	jne    0x140005a9a
   140005ab6:	mov    eax,0x20b
   140005abb:	cmp    WORD PTR [rcx+0x18],ax
   140005abf:	jne    0x140005a9a
   140005ac1:	xor    eax,eax
   140005ac3:	cmp    DWORD PTR [rcx+0x84],0xe
   140005aca:	jbe    0x140005ad5
   140005acc:	cmp    DWORD PTR [rcx+0xf8],eax
   140005ad2:	setne  al
   140005ad5:	ret    
   140005ad6:	jmp    QWORD PTR [rip+0x162c]        # 0x140007108
   140005adc:	jmp    QWORD PTR [rip+0x162e]        # 0x140007110
   140005ae2:	jmp    QWORD PTR [rip+0x1630]        # 0x140007118
   140005ae8:	jmp    QWORD PTR [rip+0x1632]        # 0x140007120
   140005aee:	jmp    QWORD PTR [rip+0x1634]        # 0x140007128
   140005af4:	mov    rax,rsp
   140005af7:	mov    QWORD PTR [rax+0x20],r9
   140005afb:	mov    DWORD PTR [rax+0x18],r8d
   140005aff:	mov    QWORD PTR [rax+0x10],rdx
   140005b03:	push   rbx
   140005b04:	push   rsi
   140005b05:	push   rdi
   140005b06:	push   r14
   140005b08:	sub    rsp,0x38
   140005b0c:	mov    r14,r9
   140005b0f:	movsxd rdi,r8d
   140005b12:	mov    rsi,rdx
   140005b15:	and    DWORD PTR [rax-0x38],0x0
   140005b19:	mov    rbx,rdi
   140005b1c:	imul   rbx,rdx
   140005b20:	add    rbx,rcx
   140005b23:	mov    QWORD PTR [rax+0x8],rbx
   140005b27:	dec    edi
   140005b29:	mov    DWORD PTR [rsp+0x70],edi
   140005b2d:	js     0x140005b3f
   140005b2f:	sub    rbx,rsi
   140005b32:	mov    QWORD PTR [rsp+0x60],rbx
   140005b37:	mov    rcx,rbx
   140005b3a:	call   r14
   140005b3d:	jmp    0x140005b27
   140005b3f:	mov    DWORD PTR [rsp+0x20],0x1
   140005b47:	add    rsp,0x38
   140005b4b:	pop    r14
   140005b4d:	pop    rdi
   140005b4e:	pop    rsi
   140005b4f:	pop    rbx
   140005b50:	ret    
   140005b51:	int3   
   140005b52:	int3   
   140005b53:	int3   
   140005b54:	sub    rsp,0x28
   140005b58:	mov    rax,QWORD PTR [rcx]
   140005b5b:	cmp    DWORD PTR [rax],0xe06d7363
   140005b61:	je     0x140005b6a
   140005b63:	xor    eax,eax
   140005b65:	add    rsp,0x28
   140005b69:	ret    
   140005b6a:	call   0x140005e50
   140005b6f:	int3   
   140005b70:	mov    QWORD PTR [rsp+0x10],rbx
   140005b75:	mov    DWORD PTR [rsp+0x18],r8d
   140005b7a:	mov    QWORD PTR [rsp+0x8],rcx
   140005b7f:	push   rsi
   140005b80:	push   rdi
   140005b81:	push   r14
   140005b83:	sub    rsp,0x40
   140005b87:	mov    rsi,r9
   140005b8a:	mov    edi,r8d
   140005b8d:	mov    r14,rdx
   140005b90:	mov    rbx,rcx
   140005b93:	dec    edi
   140005b95:	mov    DWORD PTR [rsp+0x70],edi
   140005b99:	js     0x140005baa
   140005b9b:	sub    rbx,r14
   140005b9e:	mov    QWORD PTR [rsp+0x60],rbx
   140005ba3:	mov    rcx,rbx
   140005ba6:	call   rsi
   140005ba8:	jmp    0x140005b93
   140005baa:	jmp    0x140005bac
   140005bac:	mov    rbx,QWORD PTR [rsp+0x68]
   140005bb1:	add    rsp,0x40
   140005bb5:	pop    r14
   140005bb7:	pop    rdi
   140005bb8:	pop    rsi
   140005bb9:	ret    
   140005bba:	int3   
   140005bbb:	int3   
   140005bbc:	sub    rsp,0x28
   140005bc0:	mov    rax,QWORD PTR [rcx]
   140005bc3:	cmp    DWORD PTR [rax],0xe06d7363
   140005bc9:	jne    0x140005be7
   140005bcb:	cmp    DWORD PTR [rax+0x18],0x4
   140005bcf:	jne    0x140005be7
   140005bd1:	mov    ecx,DWORD PTR [rax+0x20]
   140005bd4:	lea    eax,[rcx-0x19930520]
   140005bda:	cmp    eax,0x2
   140005bdd:	jbe    0x140005bee
   140005bdf:	cmp    ecx,0x1994000
   140005be5:	je     0x140005bee
   140005be7:	xor    eax,eax
   140005be9:	add    rsp,0x28
   140005bed:	ret    
   140005bee:	call   0x140005e50
   140005bf3:	int3   
   140005bf4:	sub    rsp,0x28
   140005bf8:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x140005bbc
   140005bff:	call   0x140005e5c
   140005c04:	xor    eax,eax
   140005c06:	add    rsp,0x28
   140005c0a:	ret    
   140005c0b:	int3   
   140005c0c:	jmp    QWORD PTR [rip+0x1526]        # 0x140007138
   140005c12:	jmp    QWORD PTR [rip+0x1528]        # 0x140007140
   140005c18:	jmp    QWORD PTR [rip+0x152a]        # 0x140007148
   140005c1e:	int3   
   140005c1f:	int3   
   140005c20:	xor    eax,eax
   140005c22:	ret    
   140005c23:	int3   
   140005c24:	jmp    QWORD PTR [rip+0x1526]        # 0x140007150
   140005c2a:	jmp    QWORD PTR [rip+0x1528]        # 0x140007158
   140005c30:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005c34:	xor    r9d,r9d
   140005c37:	mov    r10,rdx
   140005c3a:	add    r8,rcx
   140005c3d:	movzx  eax,WORD PTR [r8+0x14]
   140005c42:	movzx  r11d,WORD PTR [r8+0x6]
   140005c47:	add    rax,0x18
   140005c4b:	add    rax,r8
   140005c4e:	test   r11d,r11d
   140005c51:	je     0x140005c71
   140005c53:	mov    edx,DWORD PTR [rax+0xc]
   140005c56:	cmp    r10,rdx
   140005c59:	jb     0x140005c65
   140005c5b:	mov    ecx,DWORD PTR [rax+0x8]
   140005c5e:	add    ecx,edx
   140005c60:	cmp    r10,rcx
   140005c63:	jb     0x140005c73
   140005c65:	inc    r9d
   140005c68:	add    rax,0x28
   140005c6c:	cmp    r9d,r11d
   140005c6f:	jb     0x140005c53
   140005c71:	xor    eax,eax
   140005c73:	ret    
   140005c74:	int3   
   140005c75:	int3   
   140005c76:	int3   
   140005c77:	int3   
   140005c78:	int3   
   140005c79:	int3   
   140005c7a:	int3   
   140005c7b:	int3   
   140005c7c:	int3   
   140005c7d:	int3   
   140005c7e:	int3   
   140005c7f:	int3   
   140005c80:	mov    QWORD PTR [rsp+0x8],rbx
   140005c85:	push   rdi
   140005c86:	sub    rsp,0x20
   140005c8a:	mov    rbx,rcx
   140005c8d:	lea    rdi,[rip+0xffffffffffffa36c]        # 0x140000000
   140005c94:	mov    rcx,rdi
   140005c97:	call   0x140005cd0
   140005c9c:	test   eax,eax
   140005c9e:	je     0x140005cc2
   140005ca0:	sub    rbx,rdi
   140005ca3:	mov    rdx,rbx
   140005ca6:	mov    rcx,rdi
   140005ca9:	call   0x140005c30
   140005cae:	test   rax,rax
   140005cb1:	je     0x140005cc2
   140005cb3:	mov    eax,DWORD PTR [rax+0x24]
   140005cb6:	shr    eax,0x1f
   140005cb9:	not    eax
   140005cbb:	and    eax,0x1
   140005cbe:	jmp    0x140005cc2
   140005cc0:	xor    eax,eax
   140005cc2:	mov    rbx,QWORD PTR [rsp+0x30]
   140005cc7:	add    rsp,0x20
   140005ccb:	pop    rdi
   140005ccc:	ret    
   140005ccd:	int3   
   140005cce:	int3   
   140005ccf:	int3   
   140005cd0:	mov    rax,rcx
   140005cd3:	mov    ecx,0x5a4d
   140005cd8:	cmp    WORD PTR [rax],cx
   140005cdb:	je     0x140005ce0
   140005cdd:	xor    eax,eax
   140005cdf:	ret    
   140005ce0:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005ce4:	add    rcx,rax
   140005ce7:	xor    eax,eax
   140005ce9:	cmp    DWORD PTR [rcx],0x4550
   140005cef:	jne    0x140005cfd
   140005cf1:	mov    edx,0x20b
   140005cf6:	cmp    WORD PTR [rcx+0x18],dx
   140005cfa:	sete   al
   140005cfd:	ret    
   140005cfe:	jmp    QWORD PTR [rip+0x145c]        # 0x140007160
   140005d04:	jmp    QWORD PTR [rip+0x145e]        # 0x140007168
   140005d0a:	jmp    QWORD PTR [rip+0x1460]        # 0x140007170
   140005d10:	mov    QWORD PTR [rsp+0x20],rbx
   140005d15:	push   rbp
   140005d16:	mov    rbp,rsp
   140005d19:	sub    rsp,0x20
   140005d1d:	mov    rax,QWORD PTR [rip+0x431c]        # 0x14000a040
   140005d24:	and    QWORD PTR [rbp+0x18],0x0
   140005d29:	movabs rbx,0x2b992ddfa232
   140005d33:	cmp    rax,rbx
   140005d36:	jne    0x140005da7
   140005d38:	lea    rcx,[rbp+0x18]
   140005d3c:	call   QWORD PTR [rip+0x12be]        # 0x140007000
   140005d42:	mov    rax,QWORD PTR [rbp+0x18]
   140005d46:	mov    QWORD PTR [rbp+0x10],rax
   140005d4a:	call   QWORD PTR [rip+0x12b8]        # 0x140007008
   140005d50:	mov    eax,eax
   140005d52:	xor    QWORD PTR [rbp+0x10],rax
   140005d56:	call   QWORD PTR [rip+0x12b4]        # 0x140007010
   140005d5c:	lea    rcx,[rbp+0x20]
   140005d60:	mov    eax,eax
   140005d62:	xor    QWORD PTR [rbp+0x10],rax
   140005d66:	call   QWORD PTR [rip+0x12ac]        # 0x140007018
   140005d6c:	mov    eax,DWORD PTR [rbp+0x20]
   140005d6f:	shl    rax,0x20
   140005d73:	lea    rcx,[rbp+0x10]
   140005d77:	xor    rax,QWORD PTR [rbp+0x20]
   140005d7b:	xor    rax,QWORD PTR [rbp+0x10]
   140005d7f:	xor    rax,rcx
   140005d82:	movabs rcx,0xffffffffffff
   140005d8c:	and    rax,rcx
   140005d8f:	movabs rcx,0x2b992ddfa233
   140005d99:	cmp    rax,rbx
   140005d9c:	cmove  rax,rcx
   140005da0:	mov    QWORD PTR [rip+0x4299],rax        # 0x14000a040
   140005da7:	mov    rbx,QWORD PTR [rsp+0x48]
   140005dac:	not    rax
   140005daf:	mov    QWORD PTR [rip+0x4292],rax        # 0x14000a048
   140005db6:	add    rsp,0x20
   140005dba:	pop    rbp
   140005dbb:	ret    
   140005dbc:	xor    eax,eax
   140005dbe:	ret    
   140005dbf:	int3   
   140005dc0:	jmp    QWORD PTR [rip+0x13b2]        # 0x140007178
   140005dc6:	int3   
   140005dc7:	int3   
   140005dc8:	mov    QWORD PTR [rsp+0x8],rbx
   140005dcd:	push   rdi
   140005dce:	sub    rsp,0x20
   140005dd2:	lea    rbx,[rip+0x1e1f]        # 0x140007bf8
   140005dd9:	lea    rdi,[rip+0x1e18]        # 0x140007bf8
   140005de0:	jmp    0x140005df0
   140005de2:	mov    rax,QWORD PTR [rbx]
   140005de5:	test   rax,rax
   140005de8:	je     0x140005dec
   140005dea:	call   rax
   140005dec:	add    rbx,0x8
   140005df0:	cmp    rbx,rdi
   140005df3:	jb     0x140005de2
   140005df5:	mov    rbx,QWORD PTR [rsp+0x30]
   140005dfa:	add    rsp,0x20
   140005dfe:	pop    rdi
   140005dff:	ret    
   140005e00:	mov    QWORD PTR [rsp+0x8],rbx
   140005e05:	push   rdi
   140005e06:	sub    rsp,0x20
   140005e0a:	lea    rbx,[rip+0x1df7]        # 0x140007c08
   140005e11:	lea    rdi,[rip+0x1df0]        # 0x140007c08
   140005e18:	jmp    0x140005e28
   140005e1a:	mov    rax,QWORD PTR [rbx]
   140005e1d:	test   rax,rax
   140005e20:	je     0x140005e24
   140005e22:	call   rax
   140005e24:	add    rbx,0x8
   140005e28:	cmp    rbx,rdi
   140005e2b:	jb     0x140005e1a
   140005e2d:	mov    rbx,QWORD PTR [rsp+0x30]
   140005e32:	add    rsp,0x20
   140005e36:	pop    rdi
   140005e37:	ret    
   140005e38:	jmp    QWORD PTR [rip+0x1342]        # 0x140007180
   140005e3e:	jmp    QWORD PTR [rip+0x1344]        # 0x140007188
   140005e44:	jmp    QWORD PTR [rip+0x1346]        # 0x140007190
   140005e4a:	jmp    QWORD PTR [rip+0x1228]        # 0x140007078
   140005e50:	jmp    QWORD PTR [rip+0x124a]        # 0x1400070a0
   140005e56:	jmp    QWORD PTR [rip+0x1234]        # 0x140007090
   140005e5c:	jmp    QWORD PTR [rip+0x1236]        # 0x140007098
   140005e62:	jmp    QWORD PTR [rip+0x11c0]        # 0x140007028
   140005e68:	jmp    QWORD PTR [rip+0x11b2]        # 0x140007020
   140005e6e:	jmp    QWORD PTR [rip+0x11a4]        # 0x140007018
   140005e74:	jmp    QWORD PTR [rip+0x1196]        # 0x140007010
   140005e7a:	jmp    QWORD PTR [rip+0x1188]        # 0x140007008
   140005e80:	jmp    QWORD PTR [rip+0x117a]        # 0x140007000
   140005e86:	int3   
   140005e87:	int3   
   140005e88:	int3   
   140005e89:	int3   
   140005e8a:	int3   
   140005e8b:	int3   
   140005e8c:	int3   
   140005e8d:	int3   
   140005e8e:	int3   
   140005e8f:	int3   
   140005e90:	rex push rbp
   140005e92:	sub    rsp,0x20
   140005e96:	mov    rbp,rdx
   140005e99:	mov    rdx,QWORD PTR [rbp+0x30]
   140005e9d:	mov    rcx,QWORD PTR [rbp+0x38]
   140005ea1:	call   0x1400025e0
   140005ea6:	add    rsp,0x20
   140005eaa:	pop    rbp
   140005eab:	ret    
   140005eac:	mov    QWORD PTR [rsp+0x10],rdx
   140005eb1:	push   rbp
   140005eb2:	sub    rsp,0x20
   140005eb6:	mov    rbp,rdx
   140005eb9:	mov    rcx,QWORD PTR [rbp+0x20]
   140005ebd:	call   0x140005518
   140005ec2:	xor    edx,edx
   140005ec4:	xor    ecx,ecx
   140005ec6:	call   0x14000564a
   140005ecb:	nop
   140005ecc:	int3   
   140005ecd:	int3   
   140005ece:	int3   
   140005ecf:	int3   
   140005ed0:	mov    QWORD PTR [rsp+0x10],rdx
   140005ed5:	push   rbp
   140005ed6:	sub    rsp,0x20
   140005eda:	mov    rbp,rdx
   140005edd:	mov    rdx,QWORD PTR [rbp+0x88]
   140005ee4:	mov    rcx,QWORD PTR [rbp+0x70]
   140005ee8:	call   0x140002e30
   140005eed:	xor    edx,edx
   140005eef:	xor    ecx,ecx
   140005ef1:	call   0x14000564a
   140005ef6:	nop
   140005ef7:	int3   
   140005ef8:	int3   
   140005ef9:	int3   
   140005efa:	int3   
   140005efb:	int3   
   140005efc:	int3   
   140005efd:	int3   
   140005efe:	int3   
   140005eff:	int3   
   140005f00:	mov    QWORD PTR [rsp+0x10],rdx
   140005f05:	push   rbp
   140005f06:	sub    rsp,0x20
   140005f0a:	mov    rbp,rdx
   140005f0d:	xor    edx,edx
   140005f0f:	xor    ecx,ecx
   140005f11:	call   0x14000564a
   140005f16:	nop
   140005f17:	int3   
   140005f18:	int3   
   140005f19:	int3   
   140005f1a:	int3   
   140005f1b:	int3   
   140005f1c:	int3   
   140005f1d:	int3   
   140005f1e:	int3   
   140005f1f:	int3   
   140005f20:	mov    QWORD PTR [rsp+0x10],rdx
   140005f25:	push   rbp
   140005f26:	sub    rsp,0x20
   140005f2a:	mov    rbp,rdx
   140005f2d:	xor    edx,edx
   140005f2f:	xor    ecx,ecx
   140005f31:	call   0x14000564a
   140005f36:	nop
   140005f37:	int3   
   140005f38:	int3   
   140005f39:	int3   
   140005f3a:	int3   
   140005f3b:	int3   
   140005f3c:	int3   
   140005f3d:	int3   
   140005f3e:	int3   
   140005f3f:	int3   
   140005f40:	rex push rbp
   140005f42:	sub    rsp,0x20
   140005f46:	mov    rbp,rdx
   140005f49:	mov    rdx,QWORD PTR [rbp+0x48]
   140005f4d:	mov    rcx,QWORD PTR [rbp+0x58]
   140005f51:	call   0x1400025e0
   140005f56:	add    rsp,0x20
   140005f5a:	pop    rbp
   140005f5b:	ret    
   140005f5c:	int3   
   140005f5d:	int3   
   140005f5e:	int3   
   140005f5f:	int3   
   140005f60:	rex push rbp
   140005f62:	sub    rsp,0x20
   140005f66:	mov    rbp,rdx
   140005f69:	mov    rdx,QWORD PTR [rbp+0x48]
   140005f6d:	mov    rcx,QWORD PTR [rbp+0x58]
   140005f71:	call   0x1400025e0
   140005f76:	add    rsp,0x20
   140005f7a:	pop    rbp
   140005f7b:	ret    
   140005f7c:	int3   
   140005f7d:	int3   
   140005f7e:	int3   
   140005f7f:	int3   
   140005f80:	rex push rbp
   140005f82:	sub    rsp,0x20
   140005f86:	mov    rbp,rdx
   140005f89:	mov    rdx,QWORD PTR [rbp+0x48]
   140005f8d:	mov    rcx,QWORD PTR [rbp+0x58]
   140005f91:	call   0x1400025e0
   140005f96:	add    rsp,0x20
   140005f9a:	pop    rbp
   140005f9b:	ret    
   140005f9c:	int3   
   140005f9d:	int3   
   140005f9e:	int3   
   140005f9f:	int3   
   140005fa0:	mov    rcx,QWORD PTR [rdx+0x40]
   140005fa7:	jmp    0x1400024a0
   140005fac:	mov    rcx,QWORD PTR [rdx+0x40]
   140005fb3:	add    rcx,0x10
   140005fb7:	jmp    0x140002560
   140005fbc:	int3   
   140005fbd:	int3   
   140005fbe:	int3   
   140005fbf:	int3   
   140005fc0:	mov    rcx,QWORD PTR [rdx+0x40]
   140005fc7:	jmp    0x140002430
   140005fcc:	int3   
   140005fcd:	int3   
   140005fce:	int3   
   140005fcf:	int3   
   140005fd0:	mov    rcx,QWORD PTR [rdx+0x40]
   140005fd7:	jmp    0x1400024a0
   140005fdc:	mov    rcx,QWORD PTR [rdx+0x40]
   140005fe3:	add    rcx,0x10
   140005fe7:	jmp    0x140002560
   140005fec:	int3   
   140005fed:	int3   
   140005fee:	int3   
   140005fef:	int3   
   140005ff0:	mov    rcx,QWORD PTR [rdx+0x40]
   140005ff7:	jmp    0x1400024a0
   140005ffc:	mov    rcx,QWORD PTR [rdx+0x40]
   140006003:	add    rcx,0x10
   140006007:	jmp    0x140002560
   14000600c:	int3   
   14000600d:	int3   
   14000600e:	int3   
   14000600f:	int3   
   140006010:	mov    QWORD PTR [rsp+0x10],rdx
   140006015:	push   rbp
   140006016:	sub    rsp,0x20
   14000601a:	mov    rbp,rdx
   14000601d:	mov    rcx,QWORD PTR [rbp+0x58]
   140006021:	call   0x140005518
   140006026:	xor    edx,edx
   140006028:	xor    ecx,ecx
   14000602a:	call   0x14000564a
   14000602f:	nop
   140006030:	mov    QWORD PTR [rsp+0x10],rdx
   140006035:	push   rbp
   140006036:	sub    rsp,0x30
   14000603a:	mov    rbp,rdx
   14000603d:	mov    rcx,QWORD PTR [rbp+0x50]
   140006041:	call   0x1400043b0
   140006046:	xor    edx,edx
   140006048:	xor    ecx,ecx
   14000604a:	call   0x14000564a
   14000604f:	nop
   140006050:	mov    QWORD PTR [rsp+0x10],rdx
   140006055:	push   rbp
   140006056:	sub    rsp,0x20
   14000605a:	mov    rbp,rdx
   14000605d:	mov    rcx,QWORD PTR [rbp+0x68]
   140006061:	mov    QWORD PTR [rbp+0x68],rcx
   140006065:	xor    eax,eax
   140006067:	inc    rcx
   14000606a:	je     0x140006082
   14000606c:	cmp    rcx,0xffffffffffffffff
   140006070:	ja     0x14000607c
   140006072:	call   0x140005512
   140006077:	test   rax,rax
   14000607a:	jne    0x140006082
   14000607c:	call   QWORD PTR [rip+0xfe6]        # 0x140007068
   140006082:	mov    QWORD PTR [rbp+0x78],rax
   140006086:	lea    rax,[rip+0xffffffffffffcbf9]        # 0x140002c86
   14000608d:	add    rsp,0x20
   140006091:	pop    rbp
   140006092:	ret    
   140006093:	int3   
   140006094:	mov    QWORD PTR [rsp+0x10],rdx
   140006099:	push   rbx
   14000609a:	push   rbp
   14000609b:	sub    rsp,0x28
   14000609f:	mov    rbp,rdx
   1400060a2:	mov    rbx,QWORD PTR [rbp+0x60]
   1400060a6:	cmp    QWORD PTR [rbx+0x18],0x10
   1400060ab:	jb     0x1400060b5
   1400060ad:	mov    rcx,QWORD PTR [rbx]
   1400060b0:	call   0x140005518
   1400060b5:	mov    QWORD PTR [rbx+0x18],0xf
   1400060bd:	mov    QWORD PTR [rbx+0x10],0x0
   1400060c5:	mov    BYTE PTR [rbx],0x0
   1400060c8:	xor    edx,edx
   1400060ca:	xor    ecx,ecx
   1400060cc:	call   0x14000564a
   1400060d1:	nop
   1400060d2:	int3   
   1400060d3:	int3   
   1400060d4:	int3   
   1400060d5:	int3   
   1400060d6:	int3   
   1400060d7:	int3   
   1400060d8:	int3   
   1400060d9:	int3   
   1400060da:	int3   
   1400060db:	int3   
   1400060dc:	int3   
   1400060dd:	int3   
   1400060de:	int3   
   1400060df:	int3   
   1400060e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400060e5:	push   rbp
   1400060e6:	sub    rsp,0x20
   1400060ea:	mov    rbp,rdx
   1400060ed:	mov    rcx,QWORD PTR [rbp+0x68]
   1400060f1:	mov    QWORD PTR [rbp+0x68],rcx
   1400060f5:	xor    eax,eax
   1400060f7:	inc    rcx
   1400060fa:	je     0x14000611e
   1400060fc:	movabs rax,0x7fffffffffffffff
   140006106:	cmp    rcx,rax
   140006109:	ja     0x140006118
   14000610b:	add    rcx,rcx
   14000610e:	call   0x140005512
   140006113:	test   rax,rax
   140006116:	jne    0x14000611e
   140006118:	call   QWORD PTR [rip+0xf4a]        # 0x140007068
   14000611e:	mov    QWORD PTR [rbp+0x78],rax
   140006122:	lea    rax,[rip+0xffffffffffffcc83]        # 0x140002dac
   140006129:	add    rsp,0x20
   14000612d:	pop    rbp
   14000612e:	ret    
   14000612f:	int3   
   140006130:	mov    QWORD PTR [rsp+0x10],rdx
   140006135:	push   rbx
   140006136:	push   rbp
   140006137:	sub    rsp,0x28
   14000613b:	mov    rbp,rdx
   14000613e:	mov    rbx,QWORD PTR [rbp+0x60]
   140006142:	cmp    QWORD PTR [rbx+0x18],0x8
   140006147:	jb     0x140006151
   140006149:	mov    rcx,QWORD PTR [rbx]
   14000614c:	call   0x140005518
   140006151:	mov    QWORD PTR [rbx+0x18],0x7
   140006159:	mov    QWORD PTR [rbx+0x10],0x0
   140006161:	xor    eax,eax
   140006163:	mov    WORD PTR [rbx],ax
   140006166:	xor    edx,edx
   140006168:	xor    ecx,ecx
   14000616a:	call   0x14000564a
   14000616f:	nop
   140006170:	mov    QWORD PTR [rsp+0x10],rdx
   140006175:	push   rbp
   140006176:	sub    rsp,0x30
   14000617a:	mov    rbp,rdx
   14000617d:	mov    rcx,QWORD PTR [rbp+0x98]
   140006184:	call   0x140005518
   140006189:	xor    edx,edx
   14000618b:	xor    ecx,ecx
   14000618d:	call   0x14000564a
   140006192:	nop
   140006193:	mov    QWORD PTR [rsp+0x10],rdx
   140006198:	push   rbp
   140006199:	sub    rsp,0x30
   14000619d:	mov    rbp,rdx
   1400061a0:	xor    edx,edx
   1400061a2:	xor    ecx,ecx
   1400061a4:	call   0x14000564a
   1400061a9:	nop
   1400061aa:	int3   
   1400061ab:	int3   
   1400061ac:	int3   
   1400061ad:	int3   
   1400061ae:	int3   
   1400061af:	int3   
   1400061b0:	lea    rcx,[rdx+0x30]
   1400061b7:	jmp    0x140002470
   1400061bc:	lea    rcx,[rdx+0x50]
   1400061c3:	jmp    0x140002470
   1400061c8:	rex push rbp
   1400061ca:	sub    rsp,0x20
   1400061ce:	mov    rbp,rdx
   1400061d1:	mov    ecx,0x8
   1400061d6:	call   0x140005adc
   1400061db:	nop
   1400061dc:	add    rsp,0x20
   1400061e0:	pop    rbp
   1400061e1:	ret    
   1400061e2:	int3   
   1400061e3:	rex push rbp
   1400061e5:	sub    rsp,0x20
   1400061e9:	mov    rbp,rdx
   1400061ec:	mov    rax,QWORD PTR [rcx]
   1400061ef:	mov    rdx,rcx
   1400061f2:	mov    ecx,DWORD PTR [rax]
   1400061f4:	call   0x140005c0c
   1400061f9:	nop
   1400061fa:	add    rsp,0x20
   1400061fe:	pop    rbp
   1400061ff:	ret    
   140006200:	int3   
   140006201:	rex push rbp
   140006203:	sub    rsp,0x20
   140006207:	mov    rbp,rdx
   14000620a:	cmp    DWORD PTR [rbp+0x20],0x0
   14000620e:	jne    0x140006226
   140006210:	mov    r9,QWORD PTR [rbp+0x78]
   140006214:	mov    r8d,DWORD PTR [rbp+0x70]
   140006218:	mov    rdx,QWORD PTR [rbp+0x68]
   14000621c:	mov    rcx,QWORD PTR [rbp+0x60]
   140006220:	call   0x140005b70
   140006225:	nop
   140006226:	add    rsp,0x20
   14000622a:	pop    rbp
   14000622b:	ret    
   14000622c:	int3   
   14000622d:	rex push rbp
   14000622f:	sub    rsp,0x20
   140006233:	mov    rbp,rdx
   140006236:	mov    QWORD PTR [rbp+0x38],rcx
   14000623a:	mov    QWORD PTR [rbp+0x28],rcx
   14000623e:	mov    rax,QWORD PTR [rbp+0x28]
   140006242:	mov    rcx,QWORD PTR [rax]
   140006245:	mov    QWORD PTR [rbp+0x30],rcx
   140006249:	mov    rax,QWORD PTR [rbp+0x30]
   14000624d:	cmp    DWORD PTR [rax],0xe06d7363
   140006253:	je     0x140006261
   140006255:	mov    DWORD PTR [rbp+0x20],0x0
   14000625c:	mov    eax,DWORD PTR [rbp+0x20]
   14000625f:	jmp    0x140006267
   140006261:	call   0x140005e50
   140006266:	nop
   140006267:	add    rsp,0x20
   14000626b:	pop    rbp
   14000626c:	ret    
   14000626d:	int3   
   14000626e:	int3   
   14000626f:	int3   
   140006270:	rex push rbp
   140006272:	sub    rsp,0x20
   140006276:	mov    rbp,rdx
   140006279:	mov    rax,QWORD PTR [rcx]
   14000627c:	xor    ecx,ecx
   14000627e:	cmp    DWORD PTR [rax],0xc0000005
   140006284:	sete   cl
   140006287:	mov    eax,ecx
   140006289:	add    rsp,0x20
   14000628d:	pop    rbp
   14000628e:	ret    
   14000628f:	int3   
   140006290:	lea    rax,[rip+0x12c1]        # 0x140007558
   140006297:	mov    QWORD PTR [rip+0x3d62],rax        # 0x14000a000
   14000629e:	ret    
   14000629f:	int3   
   1400062a0:	lea    rax,[rip+0x12b1]        # 0x140007558
   1400062a7:	mov    QWORD PTR [rip+0x3d5a],rax        # 0x14000a008
   1400062ae:	ret    
   1400062af:	int3   
   1400062b0:	lea    rax,[rip+0x12a1]        # 0x140007558
   1400062b7:	mov    QWORD PTR [rip+0x3d52],rax        # 0x14000a010
   1400062be:	ret    

Disassembly of section .rdata:

0000000140007000 <.rdata>:
   140007000:	jbe    0x140006f95
   140007002:	add    BYTE PTR [rax],al
   140007004:	add    BYTE PTR [rax],al
   140007006:	add    BYTE PTR [rax],al
   140007008:	(bad)  
   140007009:	xchg   ebx,eax
   14000700a:	add    BYTE PTR [rax],al
   14000700c:	add    BYTE PTR [rax],al
   14000700e:	add    BYTE PTR [rax],al
   140007010:	rex.WX xchg rbx,rax
   140007012:	add    BYTE PTR [rax],al
   140007014:	add    BYTE PTR [rax],al
   140007016:	add    BYTE PTR [rax],al
   140007018:	xor    BYTE PTR [rbx+0x0],dl
   14000701e:	add    BYTE PTR [rax],al
   140007020:	and    BYTE PTR [rbx+0x0],dl
   140007026:	add    BYTE PTR [rax],al
   140007028:	adc    BYTE PTR [rbx+0x0],dl
   14000702e:	add    BYTE PTR [rax],al
   140007030:	mov    cs,WORD PTR [rdi+0x0]
   140007036:	add    BYTE PTR [rax],al
   140007038:	je     0x140006fc9
	...
   140007046:	add    BYTE PTR [rax],al
   140007048:	xchg   esp,eax
   140007049:	nop
   14000704a:	add    BYTE PTR [rax],al
   14000704c:	add    BYTE PTR [rax],al
   14000704e:	add    BYTE PTR [rax],al
   140007050:	je     0x140006fe2
   140007052:	add    BYTE PTR [rax],al
   140007054:	add    BYTE PTR [rax],al
   140007056:	add    BYTE PTR [rax],al
   140007058:	push   rdx
   140007059:	nop
   14000705a:	add    BYTE PTR [rax],al
   14000705c:	add    BYTE PTR [rax],al
   14000705e:	add    BYTE PTR [rax],al
   140007060:	xor    BYTE PTR [rax+0x0],dl
   140007066:	add    BYTE PTR [rax],al
   140007068:	(bad)  
   140007069:	nop
	...
   140007076:	add    BYTE PTR [rax],al
   140007078:	jbe    0x14000700c
   14000707a:	add    BYTE PTR [rax],al
   14000707c:	add    BYTE PTR [rax],al
   14000707e:	add    BYTE PTR [rax],al
   140007080:	mov    WORD PTR [rdx+0x0],ss
   140007086:	add    BYTE PTR [rax],al
   140007088:	xchg   esi,eax
   140007089:	xchg   edx,eax
   14000708a:	add    BYTE PTR [rax],al
   14000708c:	add    BYTE PTR [rax],al
   14000708e:	add    BYTE PTR [rax],al
   140007090:	mov    dh,0x92
   140007092:	add    BYTE PTR [rax],al
   140007094:	add    BYTE PTR [rax],al
   140007096:	add    BYTE PTR [rax],al
   140007098:	in     al,dx
   140007099:	xchg   edx,eax
   14000709a:	add    BYTE PTR [rax],al
   14000709c:	add    BYTE PTR [rax],al
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	movabs ds:0x8200000000000092,al
   1400070a9:	xchg   edx,eax
   1400070aa:	add    BYTE PTR [rax],al
   1400070ac:	add    BYTE PTR [rax],al
   1400070ae:	add    BYTE PTR [rax],al
   1400070b0:	ret    0x90
   1400070b3:	add    BYTE PTR [rax],al
   1400070b5:	add    BYTE PTR [rax],al
   1400070b7:	add    dh,cl
   1400070b9:	nop
   1400070ba:	add    BYTE PTR [rax],al
   1400070bc:	add    BYTE PTR [rax],al
   1400070be:	add    BYTE PTR [rax],al
   1400070c0:	loopne 0x140007052
   1400070c2:	add    BYTE PTR [rax],al
   1400070c4:	add    BYTE PTR [rax],al
   1400070c6:	add    BYTE PTR [rax],al
   1400070c8:	lock nop
   1400070ca:	add    BYTE PTR [rax],al
   1400070cc:	add    BYTE PTR [rax],al
   1400070ce:	add    BYTE PTR [rax],al
   1400070d0:	cli    
   1400070d1:	nop
   1400070d2:	add    BYTE PTR [rax],al
   1400070d4:	add    BYTE PTR [rax],al
   1400070d6:	add    BYTE PTR [rax],al
   1400070d8:	or     al,0x91
   1400070da:	add    BYTE PTR [rax],al
   1400070dc:	add    BYTE PTR [rax],al
   1400070de:	add    BYTE PTR [rax],al
   1400070e0:	(bad)  
   1400070e1:	xchg   ecx,eax
   1400070e2:	add    BYTE PTR [rax],al
   1400070e4:	add    BYTE PTR [rax],al
   1400070e6:	add    BYTE PTR [rax],al
   1400070e8:	sub    al,0x91
   1400070ea:	add    BYTE PTR [rax],al
   1400070ec:	add    BYTE PTR [rax],al
   1400070ee:	add    BYTE PTR [rax],al
   1400070f0:	rex.X xchg ecx,eax
   1400070f2:	add    BYTE PTR [rax],al
   1400070f4:	add    BYTE PTR [rax],al
   1400070f6:	add    BYTE PTR [rax],al
   1400070f8:	rex.WR xchg rcx,rax
   1400070fa:	add    BYTE PTR [rax],al
   1400070fc:	add    BYTE PTR [rax],al
   1400070fe:	add    BYTE PTR [rax],al
   140007100:	push   rsi
   140007101:	xchg   ecx,eax
   140007102:	add    BYTE PTR [rax],al
   140007104:	add    BYTE PTR [rax],al
   140007106:	add    BYTE PTR [rax],al
   140007108:	outs   dx,BYTE PTR ds:[rsi]
   140007109:	xchg   ecx,eax
   14000710a:	add    BYTE PTR [rax],al
   14000710c:	add    BYTE PTR [rax],al
   14000710e:	add    BYTE PTR [rax],al
   140007110:	jbe    0x1400070a3
   140007112:	add    BYTE PTR [rax],al
   140007114:	add    BYTE PTR [rax],al
   140007116:	add    BYTE PTR [rax],al
   140007118:	adc    BYTE PTR [rcx+0x0],0x0
   14000711f:	add    BYTE PTR [rsi+0x91],cl
   140007125:	add    BYTE PTR [rax],al
   140007127:	add    BYTE PTR [rcx+rdx*4+0x0],bl
   14000712e:	add    BYTE PTR [rax],al
   140007130:	mov    ah,0x91
   140007132:	add    BYTE PTR [rax],al
   140007134:	add    BYTE PTR [rax],al
   140007136:	add    BYTE PTR [rax],al
   140007138:	mov    esi,0x91
   14000713d:	add    BYTE PTR [rax],al
   14000713f:	add    ah,cl
   140007141:	xchg   ecx,eax
   140007142:	add    BYTE PTR [rax],al
   140007144:	add    BYTE PTR [rax],al
   140007146:	add    BYTE PTR [rax],al
   140007148:	out    0x91,al
   14000714a:	add    BYTE PTR [rax],al
   14000714c:	add    BYTE PTR [rax],al
   14000714e:	add    BYTE PTR [rax],al
   140007150:	hlt    
   140007151:	xchg   ecx,eax
   140007152:	add    BYTE PTR [rax],al
   140007154:	add    BYTE PTR [rax],al
   140007156:	add    BYTE PTR [rax],al
   140007158:	add    al,0x92
   14000715a:	add    BYTE PTR [rax],al
   14000715c:	add    BYTE PTR [rax],al
   14000715e:	add    BYTE PTR [rax],al
   140007160:	(bad)  
   140007161:	xchg   edx,eax
   140007162:	add    BYTE PTR [rax],al
   140007164:	add    BYTE PTR [rax],al
   140007166:	add    BYTE PTR [rax],al
   140007168:	(bad)  
   140007169:	xchg   edx,eax
   14000716a:	add    BYTE PTR [rax],al
   14000716c:	add    BYTE PTR [rax],al
   14000716e:	add    BYTE PTR [rax],al
   140007170:	es xchg edx,eax
   140007172:	add    BYTE PTR [rax],al
   140007174:	add    BYTE PTR [rax],al
   140007176:	add    BYTE PTR [rax],al
   140007178:	xor    BYTE PTR [rdx+0x0],dl
   14000717e:	add    BYTE PTR [rax],al
   140007180:	ds xchg edx,eax
   140007182:	add    BYTE PTR [rax],al
   140007184:	add    BYTE PTR [rax],al
   140007186:	add    BYTE PTR [rax],al
   140007188:	push   rsp
   140007189:	xchg   edx,eax
   14000718a:	add    BYTE PTR [rax],al
   14000718c:	add    BYTE PTR [rax],al
   14000718e:	add    BYTE PTR [rax],al
   140007190:	push   0x92
	...
   14000719d:	add    BYTE PTR [rax],al
   14000719f:	add    ah,bh
   1400071a1:	pop    QWORD PTR [rax]
   1400071a3:	add    BYTE PTR [rax],al
   1400071a5:	add    BYTE PTR [rax],al
   1400071a7:	add    dh,ch
   1400071a9:	pop    QWORD PTR [rax]
   1400071ab:	add    BYTE PTR [rax],al
   1400071ad:	add    BYTE PTR [rax],al
   1400071af:	add    ah,bl
   1400071b1:	pop    QWORD PTR [rax]
   1400071b3:	add    BYTE PTR [rax],al
   1400071b5:	add    BYTE PTR [rax],al
   1400071b7:	add    al,cl
   1400071b9:	pop    QWORD PTR [rax]
   1400071bb:	add    BYTE PTR [rax],al
   1400071bd:	add    BYTE PTR [rax],al
   1400071bf:	add    BYTE PTR [rsi+0x8f],dh
	...
   1400071cd:	add    BYTE PTR [rax],al
   1400071cf:	add    BYTE PTR [rdi+rcx*4+0x0],cl
   1400071d3:	add    BYTE PTR [rax],al
   1400071d5:	add    BYTE PTR [rax],al
   1400071d7:	add    BYTE PTR [rdi+rcx*4],bl
   1400071da:	add    BYTE PTR [rax],al
   1400071dc:	add    BYTE PTR [rax],al
   1400071de:	add    BYTE PTR [rax],al
   1400071e0:	dec    BYTE PTR [rsi+0x0]
   1400071e6:	add    BYTE PTR [rax],al
   1400071e8:	in     al,0x8e
   1400071ea:	add    BYTE PTR [rax],al
   1400071ec:	add    BYTE PTR [rax],al
   1400071ee:	add    BYTE PTR [rax],al
   1400071f0:	retf   0x8e
   1400071f3:	add    BYTE PTR [rax],al
   1400071f5:	add    BYTE PTR [rax],al
   1400071f7:	add    BYTE PTR [rdx+0x8e],ch
   1400071fd:	add    BYTE PTR [rax],al
   1400071ff:	add    BYTE PTR [rax+0x8e],dl
	...
   140007215:	add    BYTE PTR [rax],al
   140007217:	add    BYTE PTR [rax],ah
   140007219:	pop    rax
   14000721a:	add    BYTE PTR [rax+0x1],al
   14000721d:	add    BYTE PTR [rax],al
   14000721f:	add    BYTE PTR [rax],al
   140007221:	adc    BYTE PTR [rax],al
   140007223:	rex add DWORD PTR [rax],eax
   140007226:	add    BYTE PTR [rax],al
   140007228:	adc    BYTE PTR [rax],dl
   14000722a:	add    BYTE PTR [rax+0x1],al
   14000722d:	add    BYTE PTR [rax],al
   14000722f:	add    BYTE PTR [rax],ah
   140007231:	adc    BYTE PTR [rax],al
   140007233:	rex add DWORD PTR [rax],eax
	...
   140007246:	add    BYTE PTR [rax],al
   140007248:	push   rax
   140007249:	push   rdi
   14000724a:	add    BYTE PTR [rax+0x1],al
   14000724d:	add    BYTE PTR [rax],al
   14000724f:	add    BYTE PTR [rax],ah
   140007251:	push   rbp
   140007252:	add    BYTE PTR [rax+0x1],al
   140007255:	add    BYTE PTR [rax],al
   140007257:	add    ah,dh
   140007259:	pop    rbx
   14000725a:	add    BYTE PTR [rax+0x1],al
	...
   140007271:	add    BYTE PTR [rax],al
   140007273:	add    bl,ah
   140007275:	(bad)  
   140007276:	sbb    DWORD PTR [rax+0x0],0x2000000
   14000727d:	add    BYTE PTR [rax],al
   14000727f:	add    BYTE PTR [rax+rax*1+0x0],bl
   140007283:	add    BYTE PTR [rax],al
   140007285:	jns    0x140007287
   140007287:	add    BYTE PTR [rax],al
   140007289:	(bad)  
   14000728a:	add    BYTE PTR [rax],al
   14000728c:	add    BYTE PTR [rax],al
   14000728e:	add    BYTE PTR [rax],al
   140007290:	jrcxz  0x1400072b0
   140007292:	sbb    DWORD PTR [rax+0x0],0xc000000
   140007299:	add    BYTE PTR [rax],al
   14000729b:	add    BYTE PTR [rax+rax*1],dl
   14000729e:	add    BYTE PTR [rax],al
   1400072a0:	pop    rsp
   1400072a1:	jns    0x1400072a3
   1400072a3:	add    BYTE PTR [rcx+riz*2+0x0],bl
   1400072a7:	add    BYTE PTR [rdx],ah
   1400072a9:	add    eax,0x21993
   1400072ae:	add    BYTE PTR [rax],al
   1400072b0:	and    BYTE PTR [rax+rax*1+0x0],bh
	...
   1400072bc:	add    eax,0x30000000
   1400072c1:	jl     0x1400072c3
   1400072c3:	add    BYTE PTR [rax],ch
   1400072c5:	add    BYTE PTR [rax],al
   1400072c7:	add    BYTE PTR [rax],al
   1400072c9:	add    BYTE PTR [rax],al
   1400072cb:	add    BYTE PTR [rcx],al
   1400072cd:	add    BYTE PTR [rax],al
   1400072cf:	add    BYTE PTR [rdx],ah
   1400072d1:	add    eax,0x41993
   1400072d6:	add    BYTE PTR [rax],al
   1400072d8:	cmp    BYTE PTR [rbp+0x0],bh
   1400072db:	add    BYTE PTR [rdx],al
   1400072dd:	add    BYTE PTR [rax],al
   1400072df:	add    BYTE PTR [rax+0x7d],bl
   1400072e2:	add    BYTE PTR [rax],al
   1400072e4:	or     BYTE PTR [rax],al
   1400072e6:	add    BYTE PTR [rax],al
   1400072e8:	mov    al,0x7d
   1400072ea:	add    BYTE PTR [rax],al
   1400072ec:	and    BYTE PTR [rax],al
   1400072ee:	add    BYTE PTR [rax],al
   1400072f0:	add    BYTE PTR [rax],al
   1400072f2:	add    BYTE PTR [rax],al
   1400072f4:	add    DWORD PTR [rax],eax
   1400072f6:	add    BYTE PTR [rax],al
   1400072f8:	and    al,BYTE PTR [rip+0x41993]        # 0x140048c91
   1400072fe:	add    BYTE PTR [rax],al
   140007300:	cwde   
   140007301:	jg     0x140007303
   140007303:	add    BYTE PTR [rdx],al
   140007305:	add    BYTE PTR [rax],al
   140007307:	add    BYTE PTR [rax+0x800007f],bh
   14000730d:	add    BYTE PTR [rax],al
   14000730f:	add    BYTE PTR [rax],dl
   140007311:	add    BYTE PTR [rax],0x0
   140007314:	and    BYTE PTR [rax],al
   140007316:	add    BYTE PTR [rax],al
   140007318:	add    BYTE PTR [rax],al
   14000731a:	add    BYTE PTR [rax],al
   14000731c:	add    DWORD PTR [rax],eax
   14000731e:	add    BYTE PTR [rax],al
   140007320:	and    al,BYTE PTR [rip+0x21993]        # 0x140028cb9
   140007326:	add    BYTE PTR [rax],al
   140007328:	add    QWORD PTR [rax],0x100
   14000732f:	add    BYTE PTR [rax-0x7f],bl
   140007332:	add    BYTE PTR [rax],al
   140007334:	add    eax,0x80000000
   140007339:	add    DWORD PTR [rax],0x2000
   14000733f:	add    BYTE PTR [rax],al
   140007341:	add    BYTE PTR [rax],al
   140007343:	add    BYTE PTR [rcx],al
   140007345:	add    BYTE PTR [rax],al
   140007347:	add    BYTE PTR [rdx],ah
   140007349:	add    eax,0x21993
   14000734e:	add    BYTE PTR [rax],al
   140007350:	cmp    BYTE PTR [rdx+0x0],al
   140007356:	add    BYTE PTR [rax],al
   140007358:	add    BYTE PTR [rax],al
   14000735a:	add    BYTE PTR [rax],al
   14000735c:	add    al,0x0
   14000735e:	add    BYTE PTR [rax],al
   140007360:	rex.W (bad) 
   140007362:	add    BYTE PTR [rax],al
   140007364:	and    BYTE PTR [rax],al
   140007366:	add    BYTE PTR [rax],al
   140007368:	add    BYTE PTR [rax],al
   14000736a:	add    BYTE PTR [rax],al
   14000736c:	add    DWORD PTR [rax],eax
   14000736e:	add    BYTE PTR [rax],al
   140007370:	and    al,BYTE PTR [rip+0x21993]        # 0x140028d09
   140007376:	add    BYTE PTR [rax],al
   140007378:	pushf  
   140007379:	(bad)  
   14000737a:	add    BYTE PTR [rax],al
   14000737c:	add    DWORD PTR [rax],eax
   14000737e:	add    BYTE PTR [rax],al
   140007380:	lods   al,BYTE PTR ds:[rsi]
   140007381:	(bad)  
   140007382:	add    BYTE PTR [rax],al
   140007384:	add    eax,0xd8000000
   140007389:	(bad)  
   14000738a:	add    BYTE PTR [rax],al
   14000738c:	xor    BYTE PTR [rax],al
   14000738e:	add    BYTE PTR [rax],al
   140007390:	add    BYTE PTR [rax],al
   140007392:	add    BYTE PTR [rax],al
   140007394:	add    DWORD PTR [rax],eax
   140007396:	add    BYTE PTR [rax],al
   140007398:	and    al,BYTE PTR [rip+0x41993]        # 0x140048d31
   14000739e:	add    BYTE PTR [rax],al
   1400073a0:	rol    BYTE PTR [rbx+0x20000],1
   1400073a6:	add    BYTE PTR [rax],al
   1400073a8:	lock add DWORD PTR [rax],0x0
   1400073ac:	or     DWORD PTR [rax],eax
   1400073ae:	add    BYTE PTR [rax],al
   1400073b0:	test   BYTE PTR [rax],al
   1400073b3:	add    BYTE PTR [rax],bh
   1400073b5:	add    BYTE PTR [rax],al
   1400073b7:	add    BYTE PTR [rax],al
   1400073b9:	add    BYTE PTR [rax],al
   1400073bb:	add    BYTE PTR [rcx],al
   1400073bd:	add    BYTE PTR [rax],al
   1400073bf:	add    BYTE PTR [rdx],ah
   1400073c1:	add    eax,0x21993
   1400073c6:	add    BYTE PTR [rax],al
   1400073c8:	(bad)  
   1400073c9:	test   BYTE PTR [rax],al
	...
   1400073d3:	add    BYTE PTR [rax+rax*1],al
   1400073d6:	add    BYTE PTR [rax],al
   1400073d8:	call   0x160007461
   1400073dd:	add    BYTE PTR [rax],al
   1400073df:	add    BYTE PTR [rax],al
   1400073e1:	add    BYTE PTR [rax],al
   1400073e3:	add    BYTE PTR [rcx],al
   1400073e5:	add    BYTE PTR [rax],al
   1400073e7:	add    BYTE PTR [rdx],ah
   1400073e9:	add    eax,0x21993
   1400073ee:	add    BYTE PTR [rax],al
   1400073f0:	xor    BYTE PTR [rbp+0x0],al
   1400073f6:	add    BYTE PTR [rax],al
   1400073f8:	add    BYTE PTR [rax],al
   1400073fa:	add    BYTE PTR [rax],al
   1400073fc:	add    al,0x0
   1400073fe:	add    BYTE PTR [rax],al
   140007400:	rex test DWORD PTR [rax],eax
   140007403:	add    BYTE PTR [rax],ah
   140007405:	add    BYTE PTR [rax],al
   140007407:	add    BYTE PTR [rax],al
   140007409:	add    BYTE PTR [rax],al
   14000740b:	add    BYTE PTR [rcx],al
   14000740d:	add    BYTE PTR [rax],al
   14000740f:	add    BYTE PTR [rdx],ah
   140007411:	add    eax,0x11993
   140007416:	add    BYTE PTR [rax],al
   140007418:	hlt    
   140007419:	test   DWORD PTR [rax],eax
	...
   140007423:	add    BYTE PTR [rbx],al
   140007425:	add    BYTE PTR [rax],al
   140007427:	add    BYTE PTR [rax],al
   140007429:	xchg   BYTE PTR [rax],al
   14000742b:	add    BYTE PTR [rax],ah
   14000742d:	add    BYTE PTR [rax],al
   14000742f:	add    BYTE PTR [rax],al
   140007431:	add    BYTE PTR [rax],al
   140007433:	add    BYTE PTR [rcx],al
   140007435:	add    BYTE PTR [rax],al
   140007437:	add    BYTE PTR [rdx],ah
   140007439:	add    eax,0x21993
   14000743e:	add    BYTE PTR [rax],al
   140007440:	mov    WORD PTR [rsi+0x10000],es
   140007446:	add    BYTE PTR [rax],al
   140007448:	pushf  
   140007449:	xchg   BYTE PTR [rax],al
   14000744b:	add    BYTE PTR [rip+0xffffffffc8000000],al        # 0x108007451
   140007451:	xchg   BYTE PTR [rax],al
   140007453:	add    BYTE PTR [rax],ah
   140007455:	add    BYTE PTR [rax],al
   140007457:	add    BYTE PTR [rax],al
   140007459:	add    BYTE PTR [rax],al
   14000745b:	add    BYTE PTR [rcx],al
   14000745d:	add    BYTE PTR [rax],al
   14000745f:	add    BYTE PTR [rdx],ah
   140007461:	add    eax,0x21993
   140007466:	add    BYTE PTR [rax],al
   140007468:	sub    BYTE PTR [rdi+0x10000],al
   14000746e:	add    BYTE PTR [rax],al
   140007470:	cmp    BYTE PTR [rdi+0x50000],al
   140007476:	add    BYTE PTR [rax],al
   140007478:	(bad)  
   140007479:	xchg   DWORD PTR [rax],eax
   14000747b:	add    BYTE PTR [rax],ah
   14000747d:	add    BYTE PTR [rax],al
   14000747f:	add    BYTE PTR [rax],al
   140007481:	add    BYTE PTR [rax],al
   140007483:	add    BYTE PTR [rcx],al
   140007485:	add    BYTE PTR [rax],al
   140007487:	add    BYTE PTR [rdx],ah
   140007489:	add    eax,0x21993
   14000748e:	add    BYTE PTR [rax],al
   140007490:	(bad)  
   140007491:	xchg   DWORD PTR [rax],eax
   140007493:	add    BYTE PTR [rcx],al
   140007495:	add    BYTE PTR [rax],al
   140007497:	add    ah,dl
   140007499:	xchg   DWORD PTR [rax],eax
   14000749b:	add    BYTE PTR [rip+0x0],al        # 0x1400074a1
   1400074a1:	mov    BYTE PTR [rax],al
   1400074a3:	add    BYTE PTR [rax],ah
   1400074a5:	add    BYTE PTR [rax],al
   1400074a7:	add    BYTE PTR [rax],al
   1400074a9:	add    BYTE PTR [rax],al
   1400074ab:	add    BYTE PTR [rcx],al
   1400074ad:	add    BYTE PTR [rax],al
   1400074af:	add    BYTE PTR [rdx],ah
   1400074b1:	add    eax,0x31993
   1400074b6:	add    BYTE PTR [rax],al
   1400074b8:	push   rsp
   1400074b9:	mov    BYTE PTR [rax],al
   1400074bb:	add    BYTE PTR [rcx],al
   1400074bd:	add    BYTE PTR [rax],al
   1400074bf:	add    BYTE PTR [rax+rcx*4+0x0],ch
   1400074c3:	add    BYTE PTR [rsi],al
   1400074c5:	add    BYTE PTR [rax],al
   1400074c7:	add    BYTE PTR [rax+0x28000088],bl
   1400074cd:	add    BYTE PTR [rax],al
   1400074cf:	add    BYTE PTR [rax],al
   1400074d1:	add    BYTE PTR [rax],al
   1400074d3:	add    BYTE PTR [rcx],al
   1400074d5:	add    BYTE PTR [rax],al
   1400074d7:	add    BYTE PTR [rdx],ah
   1400074d9:	add    eax,0x11993
   1400074de:	add    BYTE PTR [rax],al
   1400074e0:	lock mov BYTE PTR [rax],al
	...
   1400074eb:	add    BYTE PTR [rbx],al
   1400074ed:	add    BYTE PTR [rax],al
   1400074ef:	add    al,bh
   1400074f1:	mov    BYTE PTR [rax],al
   1400074f3:	add    BYTE PTR [rax],ah
   1400074f5:	add    BYTE PTR [rax],al
   1400074f7:	add    BYTE PTR [rax],al
   1400074f9:	add    BYTE PTR [rax],al
   1400074fb:	add    BYTE PTR [rcx],al
   1400074fd:	add    BYTE PTR [rax],al
   1400074ff:	add    BYTE PTR [rdx],ah
   140007501:	add    eax,0x11993
   140007506:	add    BYTE PTR [rax],al
   140007508:	sub    BYTE PTR [rcx+0x0],cl
   14000750e:	add    BYTE PTR [rax],al
   140007510:	add    BYTE PTR [rax],al
   140007512:	add    BYTE PTR [rax],al
   140007514:	add    eax,DWORD PTR [rax]
   140007516:	add    BYTE PTR [rax],al
   140007518:	xor    BYTE PTR [rcx+0x200000],cl
   14000751e:	add    BYTE PTR [rax],al
   140007520:	add    BYTE PTR [rax],al
   140007522:	add    BYTE PTR [rax],al
   140007524:	add    DWORD PTR [rax],eax
   140007526:	add    BYTE PTR [rax],al
   140007528:	and    al,BYTE PTR [rip+0x11993]        # 0x140018ec1
   14000752e:	add    BYTE PTR [rax],al
   140007530:	(bad)  
   140007531:	mov    DWORD PTR [rax],eax
	...
   14000753b:	add    BYTE PTR [rbx],al
   14000753d:	add    BYTE PTR [rax],al
   14000753f:	add    BYTE PTR [rax-0x77],ch
   140007542:	add    BYTE PTR [rax],al
   140007544:	and    BYTE PTR [rax],al
   140007546:	add    BYTE PTR [rax],al
   140007548:	add    BYTE PTR [rax],al
   14000754a:	add    BYTE PTR [rax],al
   14000754c:	add    DWORD PTR [rax],eax
   14000754e:	add    BYTE PTR [rax],al
   140007550:	jo     0x1400075cb
   140007552:	add    BYTE PTR [rax+0x1],al
   140007555:	add    BYTE PTR [rax],al
   140007557:	add    BYTE PTR [rax+0x1400029],ah
   14000755d:	add    BYTE PTR [rax],al
   14000755f:	add    BYTE PTR [rdx*2+0x14000],cl
   140007566:	add    BYTE PTR [rax],al
   140007568:	or     al,0x55
   14000756a:	add    BYTE PTR [rax+0x1],al
   14000756d:	add    BYTE PTR [rax],al
   14000756f:	add    BYTE PTR [rax+0x47],dl
   140007572:	add    BYTE PTR [rax+0x1],al
   140007575:	add    BYTE PTR [rax],al
   140007577:	add    BYTE PTR [rax+0x1400047],dl
   14000757d:	add    BYTE PTR [rax],al
   14000757f:	add    BYTE PTR [rax+0x1400047],dh
   140007585:	add    BYTE PTR [rax],al
   140007587:	add    al,ch
   140007589:	jns    0x14000758b
   14000758b:	rex add DWORD PTR [rax],eax
   14000758e:	add    BYTE PTR [rax],al
   140007590:	adc    BYTE PTR [rcx],ch
   140007592:	add    BYTE PTR [rax+0x1],al
   140007595:	add    BYTE PTR [rax],al
   140007597:	add    BYTE PTR [rax],ah
   140007599:	push   rax
   14000759a:	add    BYTE PTR [rax+0x1],al
   14000759d:	add    BYTE PTR [rax],al
   14000759f:	add    al,al
   1400075a1:	rex.WRX add BYTE PTR [rax+0x1],r8b
   1400075a5:	add    BYTE PTR [rax],al
   1400075a7:	add    BYTE PTR [rax+0x47],dl
   1400075aa:	add    BYTE PTR [rax+0x1],al
   1400075ad:	add    BYTE PTR [rax],al
   1400075af:	add    BYTE PTR [rax+0x1400047],dl
   1400075b5:	add    BYTE PTR [rax],al
   1400075b7:	add    BYTE PTR [rax+0x1400047],dh
   1400075bd:	add    BYTE PTR [rax],al
   1400075bf:	add    BYTE PTR [rdi+0x65],ah
   1400075c2:	outs   dx,BYTE PTR ds:[rsi]
   1400075c3:	gs jb  0x14000762f
   1400075c6:	movsxd eax,DWORD PTR [rax]
   1400075c8:	jne    0x140007638
   1400075ca:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   1400075ce:	outs   dx,BYTE PTR ds:[rsi]
   1400075cf:	and    BYTE PTR [rbp+0x72],ah
   1400075d2:	jb     0x140007643
   1400075d4:	jb     0x1400075d6
   1400075d6:	add    BYTE PTR [rax],al
   1400075d8:	push   0x140007a
   1400075dd:	add    BYTE PTR [rax],al
   1400075df:	add    BYTE PTR [rax+0x29],al
   1400075e2:	add    BYTE PTR [rax+0x1],al
   1400075e5:	add    BYTE PTR [rax],al
   1400075e7:	add    BYTE PTR [rax],dh
   1400075e9:	push   rax
   1400075ea:	add    BYTE PTR [rax+0x1],al
   1400075ed:	add    BYTE PTR [rax],al
   1400075ef:	add    BYTE PTR [rax],dh
   1400075f1:	rex.WRXB add BYTE PTR [r8+0x1],r8b
   1400075f5:	add    BYTE PTR [rax],al
   1400075f7:	add    BYTE PTR [rax+0x47],dl
   1400075fa:	add    BYTE PTR [rax+0x1],al
   1400075fd:	add    BYTE PTR [rax],al
   1400075ff:	add    BYTE PTR [rax+0x1400047],dl
   140007605:	add    BYTE PTR [rax],al
   140007607:	add    BYTE PTR [rax+0x1400047],dh
   14000760d:	add    BYTE PTR [rax],al
   14000760f:	add    BYTE PTR [rcx+0x6f],ch
   140007612:	jae    0x140007688
   140007614:	jb     0x14000767b
   140007616:	(bad)  
   140007617:	ins    DWORD PTR es:[rdi],dx
	...
   140007620:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   140007627:	ins    DWORD PTR es:[rdi],dx
   140007628:	and    BYTE PTR [rbx+0x74],dh
   14000762b:	jb     0x140007692
   14000762d:	(bad)  
   14000762e:	ins    DWORD PTR es:[rdi],dx
   14000762f:	and    BYTE PTR [rbp+0x72],ah
   140007632:	jb     0x1400076a3
   140007634:	jb     0x140007636
   140007636:	add    BYTE PTR [rax],al
   140007638:	lock jp 0x14000763b
   14000763b:	rex add DWORD PTR [rax],eax
   14000763e:	add    BYTE PTR [rax],al
   140007640:	jo     0x14000766b
   140007642:	add    BYTE PTR [rax+0x1],al
   140007645:	add    BYTE PTR [rax],al
   140007647:	add    BYTE PTR [rax+0x50],al
   14000764a:	add    BYTE PTR [rax+0x1],al
   14000764d:	add    BYTE PTR [rax],al
   14000764f:	add    BYTE PTR [rax+0x140004f],al
   140007655:	add    BYTE PTR [rax],al
   140007657:	add    BYTE PTR [rax],dl
   140007659:	rex.RXB add BYTE PTR [r8+0x1],r8b
   14000765d:	add    BYTE PTR [rax],al
   14000765f:	add    BYTE PTR [rax+0x1400047],dl
   140007665:	add    BYTE PTR [rax],al
   140007667:	add    BYTE PTR [rax+0x1400047],dh
   14000766d:	add    BYTE PTR [rax],al
   14000766f:	add    BYTE PTR [rbx+0x79],dh
   140007672:	jae    0x1400076e8
   140007674:	gs ins DWORD PTR es:[rdi],dx
   140007676:	add    BYTE PTR [rax],al
   140007678:	push   rax
   140007679:	add    BYTE PTR [rcx+0x0],ah
   14000767c:	je     0x14000767e
   14000767e:	push   0x0
   140007683:	add    BYTE PTR [rax],al
   140007685:	add    BYTE PTR [rax],al
   140007687:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c00e98d
   14000768d:	add    BYTE PTR [rdx+0x0],ah
   140007690:	imul   eax,DWORD PTR [rax],0x5c006e
   140007696:	and    eax,0x3b007300
   14000769b:	add    BYTE PTR [rip+0x7300],ah        # 0x14000e9a1
   1400076a1:	add    BYTE PTR [rax],al
   1400076a3:	add    BYTE PTR [rax],al
   1400076a5:	add    BYTE PTR [rax],al
   1400076a7:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c00e9ad
   1400076ad:	add    BYTE PTR [rdx+0x0],ah
   1400076b0:	imul   eax,DWORD PTR [rax],0x5c006e
   1400076b6:	and    eax,0x7300
   1400076bb:	add    BYTE PTR [rax],al
   1400076bd:	add    BYTE PTR [rax],al
   1400076bf:	add    BYTE PTR [rax+rax*1+0x6d],dh
   1400076c3:	add    BYTE PTR [rdi+0x0],dh
   1400076c6:	add    BYTE PTR fs:[rbp+0x0],ah
   1400076ca:	(bad)  
   1400076cb:	add    BYTE PTR [rbx+0x0],ah
   1400076ce:	je     0x1400076d0
   1400076d0:	imul   eax,DWORD PTR [rax],0x610076
   1400076d6:	je     0x1400076d8
   1400076d8:	add    BYTE PTR gs:[rax],al
   1400076db:	add    BYTE PTR [rax],al
   1400076dd:	add    BYTE PTR [rax],al
   1400076df:	add    BYTE PTR [rbp+0x0],al
   1400076e2:	jb     0x1400076e4
   1400076e4:	jb     0x1400076e6
   1400076e6:	outs   dx,DWORD PTR ds:[rsi]
   1400076e7:	add    BYTE PTR [rdx+0x0],dh
   1400076ea:	and    BYTE PTR [rax],al
   1400076ec:	imul   eax,DWORD PTR [rax],0x69006e
   1400076f2:	je     0x1400076f4
   1400076f4:	imul   eax,DWORD PTR [rax],0x6c0061
   1400076fa:	imul   eax,DWORD PTR [rax],0x69007a
   140007700:	outs   dx,BYTE PTR ds:[rsi]
   140007701:	add    BYTE PTR [rdi+0x0],ah
   140007704:	and    BYTE PTR [rax],al
   140007706:	(bad)  
   140007707:	add    BYTE PTR [rax+0x0],dh
   14000770a:	jo     0x14000770c
   14000770c:	ins    BYTE PTR es:[rdi],dx
   14000770d:	add    BYTE PTR [rcx+0x0],ch
   140007710:	movsxd eax,DWORD PTR [rax]
   140007712:	(bad)  
   140007713:	add    BYTE PTR [rax+rax*1+0x69],dh
   140007717:	add    BYTE PTR [rdi+0x0],ch
   14000771a:	outs   dx,BYTE PTR ds:[rsi]
   14000771b:	add    BYTE PTR [rsi],ch
   14000771d:	add    BYTE PTR [rdx],cl
	...
   140007727:	add    BYTE PTR [rax+rax*1+0x65],al
   14000772b:	add    BYTE PTR [rcx+0x0],ah
   14000772e:	movsxd eax,DWORD PTR [rax]
   140007730:	je     0x140007732
   140007732:	imul   eax,DWORD PTR [rax],0x610076
   140007738:	je     0x14000773a
   14000773a:	add    BYTE PTR gs:[rax],ah
   14000773d:	add    BYTE PTR [rbp+0x0],al
   140007740:	jb     0x140007742
   140007742:	jb     0x140007744
   140007744:	outs   dx,DWORD PTR ds:[rsi]
   140007745:	add    BYTE PTR [rdx+0x0],dh
	...
   140007750:	pop    rsp
   140007751:	add    BYTE PTR [rbp+0x0],dh
   140007754:	outs   dx,BYTE PTR ds:[rsi]
   140007755:	add    BYTE PTR [rcx+0x0],ch
   140007758:	outs   dx,BYTE PTR ds:[rsi]
   140007759:	add    BYTE PTR [rbx+0x0],dh
   14000775c:	je     0x14000775e
   14000775e:	(bad)  
   14000775f:	add    BYTE PTR [rax+rax*1+0x6c],ch
   140007763:	add    BYTE PTR [rax],al
   140007765:	add    BYTE PTR [rax],al
   140007767:	add    BYTE PTR [rip+0x6f007200],ch        # 0x1af00e96d
   14000776d:	add    BYTE PTR [rdi+0x0],ch
   140007770:	je     0x140007772
   140007772:	add    BYTE PTR [rax],al
   140007774:	add    BYTE PTR [rax],al
   140007776:	add    BYTE PTR [rax],al
   140007778:	sub    eax,0x69006c00
   14000777d:	add    BYTE PTR [rdx+0x0],ah
   140007780:	add    BYTE PTR fs:[rcx+0x0],ch
   140007784:	jb     0x140007786
   140007786:	add    BYTE PTR [rax],al
   140007788:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000778b:	(bad)  
   14000778c:	ins    DWORD PTR es:[rdi],dx
   14000778d:	(bad)  
   14000778e:	je     0x1400077f8
   140007790:	ja     0x140007801
   140007792:	jb     0x1400077ff
   140007794:	jae    0x1400077c5
   140007796:	fs gs (bad) 
   140007799:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14000779d:	(bad)  
   14000779e:	je     0x140007809
   1400077a0:	outs   dx,DWORD PTR ds:[rsi]
   1400077a1:	outs   dx,BYTE PTR ds:[rsi]
   1400077a2:	(bad)  
   1400077a3:	rex.R
   1400077a4:	gs (bad) 
   1400077a6:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   1400077aa:	(bad)  
   1400077ab:	je     0x140007812
   1400077ad:	add    BYTE PTR [rax],al
   1400077af:	add    BYTE PTR [rbx+0x74],dh
   1400077b2:	jb     0x14000781d
   1400077b4:	outs   dx,BYTE PTR ds:[rsi]
   1400077b5:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   1400077ba:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   1400077be:	add    BYTE PTR [ecx+0x6e],ch
   1400077c2:	jbe    0x140007825
   1400077c4:	ins    BYTE PTR es:[rdi],dx
   1400077c5:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   1400077cd:	and    BYTE PTR [eax+0x6f],dh
   1400077d1:	jae    0x14000783c
   1400077d3:	je     0x14000783e
   1400077d5:	outs   dx,DWORD PTR ds:[rsi]
   1400077d6:	outs   dx,BYTE PTR ds:[rsi]
   1400077d7:	add    BYTE PTR [rsi+0x65],dh
   1400077da:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400077de:	cmp    al,0x54
   1400077e0:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   1400077e5:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   1400077e9:	add    BYTE PTR [eax],al
   1400077ec:	add    BYTE PTR [rax],al
   1400077ee:	add    BYTE PTR [rax],al
   1400077f0:	ins    BYTE PTR es:[rdi],dx
   1400077f1:	imul   esi,DWORD PTR [rbx+0x74],0x203e543c
   1400077f8:	je     0x140007869
   1400077fa:	outs   dx,DWORD PTR ds:[rsi]
   1400077fb:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   1400077ff:	add    BYTE PTR [eax],al
   140007802:	add    BYTE PTR [rax],al
   140007804:	add    BYTE PTR [rax],al
   140007806:	sbb    BYTE PTR [rdi+0x39],0x2e
   14000780a:	xor    ch,BYTE PTR [rsi]
   14000780c:	xor    BYTE PTR [rsi],ch
   14000780e:	xor    eax,0x34363831
   140007813:	xor    DWORD PTR [rax],eax
   140007815:	add    BYTE PTR [rax],al
   140007817:	add    BYTE PTR [rdx+0x61],cl
   14000781a:	outs   dx,BYTE PTR ds:[rsi]
   14000781b:	and    BYTE PTR [rcx],dh
   14000781d:	cmp    DWORD PTR [rax],esp
   14000781f:	xor    dh,BYTE PTR [rax]
   140007821:	xor    DWORD PTR [rdi],esi
   140007823:	add    BYTE PTR [rax],al
   140007825:	add    BYTE PTR [rax],al
   140007827:	add    BYTE PTR [rcx+0x6e],ch
   14000782a:	jae    0x1400078a0
   14000782c:	(bad)  
   14000782d:	ins    BYTE PTR es:[rdi],dx
   14000782e:	ins    BYTE PTR es:[rdi],dx
   14000782f:	pop    rsp
   140007830:	(bad)  
   140007831:	imul   ebp,DWORD PTR [rsi+0x5c],0x366e6977
   140007838:	xor    al,0x5c
   14000783a:	fs gs (bad) 
   14000783d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140007841:	(bad)  
   140007842:	je     0x1400078a9
   140007844:	pop    rdi
   140007845:	ins    DWORD PTR es:[rdi],dx
   140007846:	(bad)  
   140007847:	je     0x1400078b5
   140007849:	(bad)  
   14000784a:	(bad)  
   14000784b:	pop    rsp
   14000784c:	fs gs (bad) 
   14000784f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140007853:	(bad)  
   140007854:	je     0x1400078bb
   140007856:	pop    rdi
   140007857:	ins    DWORD PTR es:[rdi],dx
   140007858:	(bad)  
   140007859:	je     0x1400078c7
   14000785b:	(bad)  
   14000785c:	(bad)  
   14000785d:	cs gs js 0x1400078c6
   140007861:	add    BYTE PTR [rax],al
   140007863:	add    DWORD PTR [rax],eax
   140007865:	add    BYTE PTR [rax],al
   140007867:	add    BYTE PTR [rax+0x7b],bh
   14000786a:	add    BYTE PTR [rax+0x1],al
   14000786d:	add    BYTE PTR [rax],al
   14000786f:	add    ah,ah
   140007871:	push   rsi
   140007872:	add    BYTE PTR [rax+0x1],al
   140007875:	add    BYTE PTR [rax],al
   140007877:	add    BYTE PTR [rax],al
   140007879:	add    BYTE PTR [rax],al
   14000787b:	add    BYTE PTR [rcx],al
   14000787d:	add    BYTE PTR [rax],al
   14000787f:	add    BYTE PTR [rdx],al
   140007881:	add    BYTE PTR [rax],al
   140007883:	add    BYTE PTR [rbx],al
   140007885:	add    BYTE PTR [rax],al
   140007887:	add    BYTE PTR [rax+rax*1],al
   14000788a:	add    BYTE PTR [rax],al
   14000788c:	add    BYTE PTR [rax],al
   14000788e:	add    BYTE PTR [rax],al
   140007890:	jo     0x140007892
	...
   1400078e6:	add    BYTE PTR [rax],al
   1400078e8:	movabs al,ds:0x14000
	...
   1400078fe:	add    BYTE PTR [rax],al
   140007900:	push   rdx
   140007901:	push   rbx
   140007902:	rex.R push rbx
   140007904:	xor    eax,0xde5bae03
   140007909:	stos   DWORD PTR es:[rdi],eax
   14000790a:	jae    0x140007953
   14000790c:	xchg   esi,eax
   14000790d:	je     0x140007977
   14000790f:	mov    ch,BYTE PTR [rcx+0x1244c2b]
   140007915:	add    BYTE PTR [rax],al
   140007917:	add    BYTE PTR [rdx+0x3a],al
   14000791a:	pop    rsp
   14000791b:	ins    DWORD PTR es:[rdi],dx
   14000791c:	(bad)  
   14000791d:	je     0x14000798b
   14000791f:	(bad)  
   140007920:	(bad)  
   140007921:	pop    rsp
   140007922:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   140007929:	pop    rsp
   14000792a:	(bad)  
   14000792b:	imul   ebp,DWORD PTR [rsi+0x5c],0x366e6977
   140007932:	xor    al,0x5c
   140007934:	fs gs (bad) 
   140007937:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14000793b:	(bad)  
   14000793c:	je     0x1400079a3
   14000793e:	pop    rdi
   14000793f:	ins    DWORD PTR es:[rdi],dx
   140007940:	(bad)  
   140007941:	je     0x1400079af
   140007943:	(bad)  
   140007944:	(bad)  
   140007945:	pop    rsp
   140007946:	fs gs (bad) 
   140007949:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14000794d:	(bad)  
   14000794e:	je     0x1400079b5
   140007950:	pop    rdi
   140007951:	ins    DWORD PTR es:[rdi],dx
   140007952:	(bad)  
   140007953:	je     0x1400079c1
   140007955:	(bad)  
   140007956:	(bad)  
   140007957:	cs jo  0x1400079be
   14000795a:	(bad)  
   14000795b:	add    BYTE PTR [rax],al
   14000795d:	add    BYTE PTR [rax],al
   14000795f:	add    BYTE PTR [rsi],dl
   140007961:	add    BYTE PTR [rax],al
   140007963:	add    BYTE PTR [rax+rax*1],dl
	...
   14000796e:	add    BYTE PTR [rax],al
   140007970:	add    DWORD PTR [rax],eax
	...
   14000797a:	add    BYTE PTR [rax],al
   14000797c:	push   rax
   14000797d:	movabs al,ds:0x7970000079980000
	...
   14000799e:	add    BYTE PTR [rax],al
   1400079a0:	add    DWORD PTR [rax],eax
   1400079a2:	add    BYTE PTR [rax],al
   1400079a4:	mov    al,0x79
	...
   1400079ae:	add    BYTE PTR [rax],al
   1400079b0:	sar    BYTE PTR [rcx+0x0],0x0
	...
   1400079c0:	push   rax
   1400079c1:	movabs al,ds:0x0
   1400079ca:	add    BYTE PTR [rax],al
   1400079cc:	(bad)  
   1400079cd:	(bad)  
   1400079ce:	(bad)  
   1400079cf:	inc    DWORD PTR [rax]
   1400079d1:	add    BYTE PTR [rax],al
   1400079d3:	add    BYTE PTR [rax+0x0],al
   1400079d6:	add    BYTE PTR [rax],al
   1400079d8:	cwde   
   1400079d9:	jns    0x1400079db
	...
   1400079e7:	add    BYTE PTR [rcx],al
	...
   1400079f1:	add    BYTE PTR [rax],al
   1400079f3:	add    BYTE PTR [rax+0x100000a0],al
   1400079f9:	jp     0x1400079fb
   1400079fb:	add    al,ch
   1400079fd:	jns    0x1400079ff
	...
   140007a17:	add    BYTE PTR [rdx],al
   140007a19:	add    BYTE PTR [rax],al
   140007a1b:	add    BYTE PTR [rax],ch
   140007a1d:	jp     0x140007a1f
	...
   140007a27:	add    BYTE PTR [rax+0x7a],al
   140007a2a:	add    BYTE PTR [rax],al
   140007a2c:	sar    BYTE PTR [rcx+0x0],0x0
	...
   140007a40:	and    BYTE PTR [rax+0x10000],0x0
   140007a47:	add    BYTE PTR [rax],al
   140007a49:	add    BYTE PTR [rax],al
   140007a4b:	add    bh,bh
   140007a4d:	(bad)  
   140007a4e:	(bad)  
   140007a4f:	inc    DWORD PTR [rax]
   140007a51:	add    BYTE PTR [rax],al
   140007a53:	add    BYTE PTR [rax+0x0],al
   140007a56:	add    BYTE PTR [rax],al
   140007a58:	adc    BYTE PTR [rdx+0x0],bh
	...
   140007a67:	add    BYTE PTR [rcx],al
	...
   140007a71:	add    BYTE PTR [rax],al
   140007a73:	add    BYTE PTR [rax-0x6fffff60],bh
   140007a79:	jp     0x140007a7b
   140007a7b:	add    BYTE PTR [rax+0x7a],ch
	...
   140007a96:	add    BYTE PTR [rax],al
   140007a98:	add    eax,DWORD PTR [rax]
   140007a9a:	add    BYTE PTR [rax],al
   140007a9c:	test   al,0x7a
	...
   140007aa6:	add    BYTE PTR [rax],al
   140007aa8:	enter  0x7a,0x0
   140007aac:	rex jp 0x140007aaf
   140007aaf:	add    al,al
   140007ab1:	jns    0x140007ab3
	...
   140007ac7:	add    BYTE PTR [rax+0x20000a0],bh
   140007acd:	add    BYTE PTR [rax],al
   140007acf:	add    BYTE PTR [rax],al
   140007ad1:	add    BYTE PTR [rax],al
   140007ad3:	add    bh,bh
   140007ad5:	(bad)  
   140007ad6:	(bad)  
   140007ad7:	inc    DWORD PTR [rax]
   140007ad9:	add    BYTE PTR [rax],al
   140007adb:	add    BYTE PTR [rax+0x0],al
   140007ade:	add    BYTE PTR [rax],al
   140007ae0:	nop
   140007ae1:	jp     0x140007ae3
	...
   140007aef:	add    BYTE PTR [rcx],al
	...
   140007af9:	add    BYTE PTR [rax],al
   140007afb:	add    al,dh
   140007afd:	movabs al,ds:0x7af000007b180000
	...
   140007b1e:	add    BYTE PTR [rax],al
   140007b20:	add    eax,DWORD PTR [rax]
   140007b22:	add    BYTE PTR [rax],al
   140007b24:	xor    BYTE PTR [rbx+0x0],bh
	...
   140007b2f:	add    BYTE PTR [rax+0x7b],dl
   140007b32:	add    BYTE PTR [rax],al
   140007b34:	rex jp 0x140007b37
   140007b37:	add    al,al
   140007b39:	jns    0x140007b3b
	...
   140007b4f:	add    al,dh
   140007b51:	movabs al,ds:0x20000
   140007b5a:	add    BYTE PTR [rax],al
   140007b5c:	(bad)  
   140007b5d:	(bad)  
   140007b5e:	(bad)  
   140007b5f:	inc    DWORD PTR [rax]
   140007b61:	add    BYTE PTR [rax],al
   140007b63:	add    BYTE PTR [rax+0x0],al
   140007b66:	add    BYTE PTR [rax],al
   140007b68:	sbb    BYTE PTR [rbx+0x0],bh
	...
   140007b77:	add    BYTE PTR [rcx],al
	...
   140007b81:	add    BYTE PTR [rax],al
   140007b83:	add    BYTE PTR [rax],ch
   140007b85:	movabs eax,ds:0x7b7800007ba00000
	...
   140007ba6:	add    BYTE PTR [rax],al
   140007ba8:	add    DWORD PTR [rax],eax
   140007baa:	add    BYTE PTR [rax],al
   140007bac:	mov    eax,0x7b
   140007bb1:	add    BYTE PTR [rax],al
   140007bb3:	add    BYTE PTR [rax],al
   140007bb5:	add    BYTE PTR [rax],al
   140007bb7:	add    al,cl
   140007bb9:	jnp    0x140007bbb
	...
   140007bc7:	add    BYTE PTR [rax],ch
   140007bc9:	movabs eax,ds:0x0
   140007bd2:	add    BYTE PTR [rax],al
   140007bd4:	(bad)  
   140007bd5:	(bad)  
   140007bd6:	(bad)  
   140007bd7:	inc    DWORD PTR [rax]
   140007bd9:	add    BYTE PTR [rax],al
   140007bdb:	add    BYTE PTR [rax+0x0],al
   140007bde:	add    BYTE PTR [rax],al
   140007be0:	movabs al,ds:0x7b
	...
   140007c0d:	add    BYTE PTR [rax],al
   140007c0f:	add    BYTE PTR [rcx],dl
   140007c11:	lar    eax,WORD PTR [rax]
   140007c14:	(bad)  
   140007c15:	rol    BYTE PTR [rdx],cl
   140007c17:	xor    BYTE PTR [rax+0x56],dl
   140007c1a:	add    BYTE PTR [rax],al
   140007c1c:	test   al,0x72
   140007c1e:	add    BYTE PTR [rax],al
   140007c20:	(bad)  
   140007c21:	(bad)  
   140007c22:	(bad)  
   140007c23:	push   QWORD PTR [rax+0x61]
   140007c29:	add    BYTE PTR [rax],al
   140007c2b:	add    BYTE PTR [rcx+riz*2+0x52800000],bh
   140007c32:	add    BYTE PTR [rax],al
   140007c34:	(bad)  
   140007c35:	(bad)  
   140007c36:	(bad)  
   140007c37:	jmp    FWORD PTR [rax]
   140007c39:	push   rbx
   140007c3a:	add    BYTE PTR [rax],al
   140007c3c:	add    BYTE PTR [rax],al
   140007c3e:	add    BYTE PTR [rax],al
   140007c40:	pop    rcx
   140007c41:	push   rbx
   140007c42:	add    BYTE PTR [rax],al
   140007c44:	add    DWORD PTR [rax],eax
   140007c46:	add    BYTE PTR [rax],al
   140007c48:	stos   BYTE PTR es:[rdi],al
   140007c49:	push   rbx
   140007c4a:	add    BYTE PTR [rax],al
   140007c4c:	add    BYTE PTR [rax],al
   140007c4e:	add    BYTE PTR [rax],al
   140007c50:	iret   
   140007c51:	push   rbx
   140007c52:	add    BYTE PTR [rax],al
   140007c54:	(bad)  
   140007c55:	(bad)  
   140007c56:	(bad)  
   140007c57:	inc    DWORD PTR [rcx]
   140007c59:	(bad)  
   140007c5a:	add    DWORD PTR [rax],eax
   140007c5c:	(bad)  
   140007c5d:	(bad)  
   140007c5e:	add    BYTE PTR [rax],al
   140007c60:	add    DWORD PTR [rsi],eax
   140007c62:	add    al,BYTE PTR [rax]
   140007c64:	(bad)  
   140007c65:	xor    al,BYTE PTR [rdx]
   140007c67:	xor    BYTE PTR [rcx],al
   140007c69:	(bad)  
   140007c6a:	add    al,BYTE PTR [rax]
   140007c6c:	(bad)  
   140007c6d:	xor    al,BYTE PTR [rdx]
   140007c6f:	xor    BYTE PTR [rcx],al
   140007c71:	(bad)  
   140007c72:	add    al,BYTE PTR [rax]
   140007c74:	(bad)  
   140007c75:	xor    al,BYTE PTR [rdx]
   140007c77:	xor    BYTE PTR [rcx],al
   140007c79:	add    al,0x1
   140007c7b:	add    BYTE PTR [rdx+rax*2],al
   140007c7e:	add    BYTE PTR [rax],al
   140007c80:	add    DWORD PTR [rcx+rax*1],eax
   140007c83:	add    BYTE PTR [rdx+rax*2],al
   140007c86:	add    BYTE PTR [rax],al
   140007c88:	add    DWORD PTR [rsi],eax
   140007c8a:	add    al,BYTE PTR [rax]
   140007c8c:	(bad)  
   140007c8d:	xor    al,BYTE PTR [rdx]
   140007c8f:	xor    BYTE PTR [rcx],al
   140007c91:	(bad)  
   140007c92:	add    al,BYTE PTR [rax]
   140007c94:	(bad)  
   140007c95:	xor    al,BYTE PTR [rdx]
   140007c97:	xor    BYTE PTR [rcx],al
   140007c99:	(bad)  
   140007c9a:	add    al,BYTE PTR [rax]
   140007c9c:	(bad)  
   140007c9d:	xor    al,BYTE PTR [rdx]
   140007c9f:	xor    BYTE PTR [rcx],al
   140007ca1:	adc    al,0x8
   140007ca3:	add    BYTE PTR [rsp+riz*2],dl
   140007ca6:	or     BYTE PTR [rax],al
   140007ca8:	adc    al,0x54
   140007caa:	(bad)  
   140007cab:	add    BYTE PTR [rsp+rsi*1],dl
   140007cae:	(bad)  
   140007caf:	add    BYTE PTR [rdx+rsi*1],dl
   140007cb2:	adc    BYTE PTR [rax+0x1],dh
   140007cb5:	clts   
   140007cb7:	add    BYTE PTR [rdi],cl
   140007cb9:	fs (bad) 
   140007cbb:	add    BYTE PTR [rdi],cl
   140007cbd:	xor    al,0x6
   140007cbf:	add    BYTE PTR [rdi],cl
   140007cc1:	xor    cl,BYTE PTR [rbx]
   140007cc3:	jo     0x140007cc6
   140007cc5:	add    al,0x1
   140007cc7:	add    BYTE PTR [rdx+rax*2],al
   140007cca:	add    BYTE PTR [rax],al
   140007ccc:	add    DWORD PTR [rdx],ecx
   140007cce:	add    al,0x0
   140007cd0:	or     dh,BYTE PTR [rsi+rax*1]
   140007cd3:	add    BYTE PTR [rdx],cl
   140007cd5:	xor    al,BYTE PTR [rsi]
   140007cd7:	jo     0x140007cda
   140007cd9:	clts   
   140007cdb:	add    BYTE PTR [rdi],cl
   140007cdd:	fs (bad) 
   140007cdf:	add    BYTE PTR [rdi],cl
   140007ce1:	xor    al,0x6
   140007ce3:	add    BYTE PTR [rdi],cl
   140007ce5:	xor    cl,BYTE PTR [rbx]
   140007ce7:	jo     0x140007cea
   140007ce9:	(bad)  
   140007cea:	add    al,BYTE PTR [rax]
   140007cec:	(bad)  
   140007ced:	xor    al,BYTE PTR [rdx]
   140007cef:	xor    BYTE PTR [rcx],ah
   140007cf1:	or     al,BYTE PTR [rax+rax*1]
   140007cf4:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   140007cf8:	add    eax,0x40000664
   140007cfd:	add    BYTE PTR [r8],r8b
   140007d00:	movsxd eax,DWORD PTR [rbp+0x0]
   140007d03:	add    al,ch
   140007d05:	jl     0x140007d07
   140007d07:	add    BYTE PTR [rcx],ah
   140007d09:	add    BYTE PTR [rax+rax*1],al
   140007d0c:	add    BYTE PTR [rdi+rax*1+0x0],dh
   140007d10:	add    BYTE PTR [rsi+rax*1+0x0],ah
   140007d14:	rex
   140007d15:	add    BYTE PTR [r8],r8b
   140007d18:	movsxd eax,DWORD PTR [rbp+0x0]
   140007d1b:	add    al,ch
   140007d1d:	jl     0x140007d1f
   140007d1f:	add    BYTE PTR [rcx],bl
   140007d21:	and    DWORD PTR [rip+0x14621800],eax        # 0x154629527
   140007d27:	loopne 0x140007d3b
   140007d29:	jo     0x140007d3c
   140007d2b:	(bad)  
   140007d2c:	adc    BYTE PTR [rax],dh
   140007d2e:	add    BYTE PTR [rax],al
   140007d30:	push   rax
   140007d31:	push   rsi
   140007d32:	add    BYTE PTR [rax],al
   140007d34:	shl    BYTE PTR [rdx+0x0],1
   140007d37:	add    bh,bh
   140007d39:	(bad)  
   140007d3a:	(bad)  
   140007d3b:	inc    DWORD PTR [rax]
   140007d3d:	add    BYTE PTR [rax],al
   140007d3f:	add    bh,bh
   140007d41:	(bad)  
   140007d42:	(bad)  
   140007d43:	inc    DWORD PTR [rax]
   140007d45:	add    BYTE PTR [rax],al
   140007d47:	add    BYTE PTR [rcx],al
   140007d49:	add    BYTE PTR [rax],al
   140007d4b:	add    BYTE PTR [rax],al
   140007d4d:	add    BYTE PTR [rax],al
   140007d4f:	add    BYTE PTR [rcx],al
	...
   140007d5d:	add    BYTE PTR [rax],al
   140007d5f:	add    BYTE PTR [rbx],al
   140007d61:	add    BYTE PTR [rax],al
   140007d63:	add    BYTE PTR [rcx],al
   140007d65:	add    BYTE PTR [rax],al
   140007d67:	add    BYTE PTR [rax+0x200007d],al
   140007d6d:	add    BYTE PTR [rax],al
   140007d6f:	add    BYTE PTR [rdx],al
   140007d71:	add    BYTE PTR [rax],al
   140007d73:	add    BYTE PTR [rbx],al
   140007d75:	add    BYTE PTR [rax],al
   140007d77:	add    BYTE PTR [rcx],al
   140007d79:	add    BYTE PTR [rax],al
   140007d7b:	add    BYTE PTR [rbp+rdi*2+0x400000],dl
	...
   140007d8a:	add    BYTE PTR [rax],al
   140007d8c:	push   rax
   140007d8d:	(bad)  
   140007d8e:	add    BYTE PTR [rax],al
   140007d90:	cmp    BYTE PTR [rax],al
   140007d92:	add    BYTE PTR [rax],al
   140007d94:	add    BYTE PTR [rax],al
	...
   140007d9f:	add    BYTE PTR [rax+riz*2+0x480000],dl
	...
   140007dae:	add    BYTE PTR [rax],al
   140007db0:	lock sub eax,DWORD PTR [rax]
   140007db3:	add    bh,bh
   140007db5:	(bad)  
   140007db6:	(bad)  
   140007db7:	call   FWORD PTR [rsi+0x2c]
   140007dba:	add    BYTE PTR [rax],al
   140007dbc:	add    BYTE PTR [rax],al
   140007dbe:	add    BYTE PTR [rax],al
   140007dc0:	test   BYTE PTR [rax+rax*1],ch
   140007dc3:	add    bh,bh
   140007dc5:	(bad)  
   140007dc6:	(bad)  
   140007dc7:	call   QWORD PTR [rax+0x60]
   140007dca:	add    BYTE PTR [rax],al
   140007dcc:	add    BYTE PTR [rax],al
   140007dce:	add    BYTE PTR [rax],al
   140007dd0:	pop    rbp
   140007dd1:	(bad)  
   140007dd2:	add    BYTE PTR [rax],al
   140007dd4:	add    DWORD PTR [rax],eax
   140007dd6:	add    BYTE PTR [rax],al
   140007dd8:	gs (bad) 
   140007dda:	add    BYTE PTR [rax],al
   140007ddc:	add    al,BYTE PTR [rax]
   140007dde:	add    BYTE PTR [rax],al
   140007de0:	xchg   BYTE PTR [rax+0x0],ah
   140007de3:	add    BYTE PTR [rax],al
   140007de5:	add    BYTE PTR [rax],al
   140007de7:	add    BYTE PTR [rdx+0x3000060],ah
   140007ded:	add    BYTE PTR [rax],al
   140007def:	add    BYTE PTR [rcx],bl
   140007df1:	or     al,BYTE PTR [rdx]
   140007df3:	add    BYTE PTR [rdx],cl
   140007df5:	xor    al,BYTE PTR [rsi]
   140007df7:	push   rax
   140007df8:	push   rax
   140007df9:	push   rsi
   140007dfa:	add    BYTE PTR [rax],al
   140007dfc:	shl    BYTE PTR [rdx+0x0],1
   140007dff:	add    BYTE PTR [rcx],bl
   140007e01:	or     eax,DWORD PTR [rbx]
   140007e03:	add    BYTE PTR [rbx],cl
   140007e05:	rex.X (bad) 
   140007e07:	push   rax
   140007e08:	(bad)  
   140007e09:	xor    BYTE PTR [rax],al
   140007e0b:	add    BYTE PTR [rax+0x56],dl
   140007e0e:	add    BYTE PTR [rax],al
   140007e10:	shl    BYTE PTR [rdx+0x0],1
   140007e13:	add    BYTE PTR [rcx],al
   140007e15:	sub    eax,0x542d0006
   140007e1a:	(bad)  
   140007e1b:	add    BYTE PTR [rdx],cl
   140007e1d:	xor    al,0x9
   140007e1f:	add    BYTE PTR [rdx],cl
   140007e21:	xor    al,BYTE PTR [rsi]
   140007e23:	jo     0x140007e46
   140007e25:	add    eax,0x64050002
   140007e2a:	(bad)  
   140007e2b:	add    al,dh
   140007e2d:	(bad)  
   140007e2e:	add    BYTE PTR [rax],al
   140007e30:	cmp    dh,BYTE PTR [rax]
   140007e32:	add    BYTE PTR [rax],al
   140007e34:	adc    al,0x7e
   140007e36:	add    BYTE PTR [rax],al
   140007e38:	and    DWORD PTR [rip+0xffffffffe4050002],eax        # 0x124057e40
   140007e3e:	or     BYTE PTR [rax],al
   140007e40:	cmp    dh,BYTE PTR [rax]
   140007e42:	add    BYTE PTR [rax],al
   140007e44:	push   rax
   140007e45:	xor    BYTE PTR [rax],al
   140007e47:	add    BYTE PTR [rsi+rdi*2],ah
   140007e4a:	add    BYTE PTR [rax],al
   140007e4c:	and    DWORD PTR [rax],eax
   140007e4e:	add    BYTE PTR [rax],al
   140007e50:	cmp    dh,BYTE PTR [rax]
   140007e52:	add    BYTE PTR [rax],al
   140007e54:	push   rax
   140007e55:	xor    BYTE PTR [rax],al
   140007e57:	add    BYTE PTR [rsi+rdi*2],ah
   140007e5a:	add    BYTE PTR [rax],al
   140007e5c:	and    DWORD PTR [rax],eax
   140007e5e:	add    BYTE PTR [rax],al
   140007e60:	lock (bad) 
   140007e62:	add    BYTE PTR [rax],al
   140007e64:	cmp    dh,BYTE PTR [rax]
   140007e66:	add    BYTE PTR [rax],al
   140007e68:	adc    al,0x7e
   140007e6a:	add    BYTE PTR [rax],al
   140007e6c:	add    DWORD PTR [rdx],ecx
   140007e6e:	add    al,0x0
   140007e70:	or     dh,BYTE PTR [rdi+rax*1]
   140007e73:	add    BYTE PTR [rdx],cl
   140007e75:	xor    al,BYTE PTR [rsi]
   140007e77:	jo     0x140007e9a
   140007e79:	add    eax,0x64050002
   140007e7e:	(bad)  
   140007e7f:	add    BYTE PTR [rax+0x38],dh
   140007e82:	add    BYTE PTR [rax],al
   140007e84:	mov    edi,DWORD PTR [rax]
   140007e86:	add    BYTE PTR [rax],al
   140007e88:	ins    BYTE PTR es:[rdi],dx
   140007e89:	jle    0x140007e8b
   140007e8b:	add    BYTE PTR [rcx],ah
   140007e8d:	add    BYTE PTR [rax],al
   140007e8f:	add    BYTE PTR [rax+0x38],dh
   140007e92:	add    BYTE PTR [rax],al
   140007e94:	mov    edi,DWORD PTR [rax]
   140007e96:	add    BYTE PTR [rax],al
   140007e98:	ins    BYTE PTR es:[rdi],dx
   140007e99:	jle    0x140007e9b
   140007e9b:	add    BYTE PTR [rcx],al
   140007e9d:	add    al,0x1
   140007e9f:	add    BYTE PTR [rdx+rax*2],al
   140007ea2:	add    BYTE PTR [rax],al
   140007ea4:	add    DWORD PTR [rcx+rax*1],eax
   140007ea7:	add    BYTE PTR [rdx+rax*2],al
   140007eaa:	add    BYTE PTR [rax],al
   140007eac:	add    DWORD PTR [rsi],eax
   140007eae:	add    al,BYTE PTR [rax]
   140007eb0:	(bad)  
   140007eb1:	push   rdx
   140007eb2:	add    dh,BYTE PTR [rax]
   140007eb4:	add    DWORD PTR [rsi],eax
   140007eb6:	add    al,BYTE PTR [rax]
   140007eb8:	(bad)  
   140007eb9:	xor    al,BYTE PTR [rdx]
   140007ebb:	xor    BYTE PTR [rcx],al
   140007ebd:	or     al,BYTE PTR [rax+rax*1]
   140007ec0:	or     dh,BYTE PTR [rax+rcx*1]
   140007ec3:	add    BYTE PTR [rdx],cl
   140007ec5:	push   rdx
   140007ec6:	(bad)  
   140007ec7:	jo     0x140007eca
   140007ec9:	(bad)  
   140007eca:	add    al,BYTE PTR [rax]
   140007ecc:	(bad)  
   140007ecd:	xor    al,BYTE PTR [rdx]
   140007ecf:	xor    BYTE PTR [rcx],al
   140007ed1:	(bad)  
   140007ed2:	add    al,BYTE PTR [rax]
   140007ed4:	(bad)  
   140007ed5:	push   rdx
   140007ed6:	add    dh,BYTE PTR [rax]
   140007ed8:	add    DWORD PTR [rsi],eax
   140007eda:	add    al,BYTE PTR [rax]
   140007edc:	(bad)  
   140007edd:	xor    al,BYTE PTR [rdx]
   140007edf:	xor    BYTE PTR [rcx],al
   140007ee1:	or     al,BYTE PTR [rax+rax*1]
   140007ee4:	or     dh,BYTE PTR [rax+rcx*1]
   140007ee7:	add    BYTE PTR [rdx],cl
   140007ee9:	push   rdx
   140007eea:	(bad)  
   140007eeb:	jo     0x140007eee
   140007eed:	or     al,BYTE PTR [rax+rax*1]
   140007ef0:	or     dh,BYTE PTR [rsi+rax*1]
   140007ef3:	add    BYTE PTR [rdx],cl
   140007ef5:	xor    al,BYTE PTR [rsi]
   140007ef7:	jo     0x140007efa
   140007ef9:	(bad)  
   140007efa:	add    al,BYTE PTR [rax]
   140007efc:	(bad)  
   140007efd:	xor    al,BYTE PTR [rdx]
   140007eff:	xor    BYTE PTR [rcx],al
   140007f01:	add    al,0x1
   140007f03:	add    BYTE PTR [rdx+rax*2],al
   140007f06:	add    BYTE PTR [rax],al
   140007f08:	add    DWORD PTR [rcx+rax*1],eax
   140007f0b:	add    BYTE PTR [rdx+rax*2],al
   140007f0e:	add    BYTE PTR [rax],al
   140007f10:	add    DWORD PTR [rsi],eax
   140007f12:	add    al,BYTE PTR [rax]
   140007f14:	(bad)  
   140007f15:	xor    al,BYTE PTR [rdx]
   140007f17:	xor    BYTE PTR [rcx],al
   140007f19:	(bad)  
   140007f1a:	add    al,BYTE PTR [rax]
   140007f1c:	(bad)  
   140007f1d:	xor    al,BYTE PTR [rdx]
   140007f1f:	xor    BYTE PTR [rcx],al
   140007f21:	(bad)  
   140007f22:	add    al,BYTE PTR [rax]
   140007f24:	(bad)  
   140007f25:	xor    al,BYTE PTR [rdx]
   140007f27:	xor    BYTE PTR [rcx],al
   140007f29:	adc    al,0x8
   140007f2b:	add    BYTE PTR [rsp+riz*2],dl
   140007f2e:	or     BYTE PTR [rax],al
   140007f30:	adc    al,0x54
   140007f32:	(bad)  
   140007f33:	add    BYTE PTR [rsp+rsi*1],dl
   140007f36:	(bad)  
   140007f37:	add    BYTE PTR [rdx+rsi*1],dl
   140007f3a:	adc    BYTE PTR [rax+0x1],dh
   140007f3d:	clts   
   140007f3f:	add    BYTE PTR [rdi],cl
   140007f41:	fs (bad) 
   140007f43:	add    BYTE PTR [rdi],cl
   140007f45:	xor    al,0x6
   140007f47:	add    BYTE PTR [rdi],cl
   140007f49:	xor    cl,BYTE PTR [rbx]
   140007f4b:	jo     0x140007f4e
   140007f4d:	add    al,0x1
   140007f4f:	add    BYTE PTR [rdx+rax*2],al
   140007f52:	add    BYTE PTR [rax],al
   140007f54:	add    DWORD PTR [rdx],ecx
   140007f56:	add    al,0x0
   140007f58:	or     dh,BYTE PTR [rsi+rax*1]
   140007f5b:	add    BYTE PTR [rdx],cl
   140007f5d:	xor    al,BYTE PTR [rsi]
   140007f5f:	jo     0x140007f62
   140007f61:	cmp    cl,BYTE PTR [rdx]
   140007f63:	add    BYTE PTR [rdx],bh
   140007f65:	(bad)  
   140007f66:	or     al,BYTE PTR [rax]
   140007f68:	xor    eax,0x30000954
   140007f6d:	xor    al,0x8
   140007f6f:	add    BYTE PTR [rcx],cl
   140007f71:	xor    al,BYTE PTR [rip+0x27003e0]        # 0x142708357
   140007f77:	(bad)  
   140007f78:	add    DWORD PTR [rsi],eax
   140007f7a:	add    al,BYTE PTR [rax]
   140007f7c:	(bad)  
   140007f7d:	push   rdx
   140007f7e:	add    dh,BYTE PTR [rax]
   140007f80:	sbb    DWORD PTR [rbx],esp
   140007f82:	(bad)  
   140007f83:	add    BYTE PTR [rdx],bl
   140007f85:	push   rdx
   140007f86:	(bad)  
   140007f87:	lock adc al,0xe0
   140007f8a:	adc    dh,BYTE PTR [rax+0x11]
   140007f8d:	(bad)  
   140007f8e:	adc    BYTE PTR [rax],dh
   140007f90:	push   rax
   140007f91:	push   rsi
   140007f92:	add    BYTE PTR [rax],al
   140007f94:	clc    
   140007f95:	jb     0x140007f97
   140007f97:	add    bh,bh
   140007f99:	(bad)  
   140007f9a:	(bad)  
   140007f9b:	inc    DWORD PTR [rax]
   140007f9d:	add    BYTE PTR [rax],al
   140007f9f:	add    bh,bh
   140007fa1:	(bad)  
   140007fa2:	(bad)  
   140007fa3:	inc    DWORD PTR [rax]
   140007fa5:	add    BYTE PTR [rax],al
   140007fa7:	add    BYTE PTR [rcx],al
   140007fa9:	add    BYTE PTR [rax],al
   140007fab:	add    BYTE PTR [rax],al
   140007fad:	add    BYTE PTR [rax],al
   140007faf:	add    BYTE PTR [rcx],al
	...
   140007fbd:	add    BYTE PTR [rax],al
   140007fbf:	add    BYTE PTR [rbx],al
   140007fc1:	add    BYTE PTR [rax],al
   140007fc3:	add    BYTE PTR [rcx],al
   140007fc5:	add    BYTE PTR [rax],al
   140007fc7:	add    al,ah
   140007fc9:	jg     0x140007fcb
   140007fcb:	add    BYTE PTR [rdx],al
   140007fcd:	add    BYTE PTR [rax],al
   140007fcf:	add    BYTE PTR [rdx],al
   140007fd1:	add    BYTE PTR [rax],al
   140007fd3:	add    BYTE PTR [rbx],al
   140007fd5:	add    BYTE PTR [rax],al
   140007fd7:	add    BYTE PTR [rcx],al
   140007fd9:	add    BYTE PTR [rax],al
   140007fdb:	add    ah,dh
   140007fdd:	jg     0x140007fdf
   140007fdf:	add    BYTE PTR [rax+0x0],al
	...
   140007fea:	add    BYTE PTR [rax],al
   140007fec:	loopne 0x14000804e
   140007fee:	add    BYTE PTR [rax],al
   140007ff0:	cmp    BYTE PTR [rax],al
   140007ff2:	add    BYTE PTR [rax],al
   140007ff4:	add    BYTE PTR [rax],al
	...
   140007fff:	add    BYTE PTR [rax],dh
   140008001:	(bad)  
   140008002:	add    BYTE PTR [rax],al
   140008004:	rex.W add BYTE PTR [rax],al
	...
   14000800f:	add    BYTE PTR [rax],al
   140008011:	sub    eax,0xffff0000
   140008016:	(bad)  
   140008017:	push   QWORD PTR [rbp+0x2d]
   14000801a:	add    BYTE PTR [rax],al
   14000801c:	add    BYTE PTR [rax],al
   14000801e:	add    BYTE PTR [rax],al
   140008020:	stos   BYTE PTR es:[rdi],al
   140008021:	sub    eax,0xffff0000
   140008026:	(bad)  
   140008027:	jmp    rax
   140008029:	(bad)  
   14000802a:	add    BYTE PTR [rax],al
   14000802c:	add    BYTE PTR [rax],al
   14000802e:	add    BYTE PTR [rax],al
   140008030:	in     eax,dx
   140008031:	(bad)  
   140008032:	add    BYTE PTR [rax],al
   140008034:	add    DWORD PTR [rax],eax
   140008036:	add    BYTE PTR [rax],al
   140008038:	cmc    
   140008039:	(bad)  
   14000803a:	add    BYTE PTR [rax],al
   14000803c:	add    al,BYTE PTR [rax]
   14000803e:	add    BYTE PTR [rax],al
   140008040:	and    ah,BYTE PTR [rcx+0x0]
   140008043:	add    BYTE PTR [rax],al
   140008045:	add    BYTE PTR [rax],al
   140008047:	add    BYTE PTR [rsi],bh
   140008049:	(bad)  
   14000804a:	add    BYTE PTR [rax],al
   14000804c:	add    eax,DWORD PTR [rax]
   14000804e:	add    BYTE PTR [rax],al
   140008050:	sbb    DWORD PTR [rdx],ecx
   140008052:	add    al,BYTE PTR [rax]
   140008054:	or     dh,BYTE PTR [rdx]
   140008056:	(bad)  
   140008057:	push   rax
   140008058:	push   rax
   140008059:	push   rsi
   14000805a:	add    BYTE PTR [rax],al
   14000805c:	clc    
   14000805d:	jb     0x14000805f
   14000805f:	add    BYTE PTR [rcx],bl
   140008061:	or     eax,DWORD PTR [rbx]
   140008063:	add    BYTE PTR [rbx],cl
   140008065:	rex.X (bad) 
   140008067:	push   rax
   140008068:	(bad)  
   140008069:	xor    BYTE PTR [rax],al
   14000806b:	add    BYTE PTR [rax+0x56],dl
   14000806e:	add    BYTE PTR [rax],al
   140008070:	clc    
   140008071:	jb     0x140008073
   140008073:	add    BYTE PTR [rcx],al
   140008075:	ss (bad) 
   140008077:	add    BYTE PTR [rsi],dh
   140008079:	fs (bad) 
   14000807b:	add    BYTE PTR [rdx],cl
   14000807d:	xor    al,0x9
   14000807f:	add    BYTE PTR [rdx],cl
   140008081:	xor    al,BYTE PTR [rsi]
   140008083:	jo     0x1400080a6
   140008085:	add    eax,0xe4050002
   14000808a:	or     BYTE PTR [rax],al
   14000808c:	shl    BYTE PTR [rax],0x0
   14000808f:	add    BYTE PTR [rbx],dl
   140008091:	xor    DWORD PTR [rax],eax
   140008093:	add    BYTE PTR [rax+rax*4+0x0],dh
   140008097:	add    BYTE PTR [rcx],ah
   140008099:	add    eax,0x54050002
   14000809e:	(bad)  
   14000809f:	add    BYTE PTR [rbx],dl
   1400080a1:	xor    DWORD PTR [rax],eax
   1400080a3:	add    BYTE PTR [rcx],ch
   1400080a5:	xor    DWORD PTR [rax],eax
   1400080a7:	add    BYTE PTR [rax+rax*4+0x210000],al
   1400080ae:	add    BYTE PTR [rax],al
   1400080b0:	adc    esi,DWORD PTR [rcx]
   1400080b2:	add    BYTE PTR [rax],al
   1400080b4:	sub    DWORD PTR [rcx],esi
   1400080b6:	add    BYTE PTR [rax],al
   1400080b8:	test   BYTE PTR [rax+0x210000],al
   1400080be:	add    BYTE PTR [rax],al
   1400080c0:	shl    BYTE PTR [rax],0x0
   1400080c3:	add    BYTE PTR [rbx],dl
   1400080c5:	xor    DWORD PTR [rax],eax
   1400080c7:	add    BYTE PTR [rax+rax*4+0x0],dh
   1400080cb:	add    BYTE PTR [rcx],al
   1400080cd:	or     al,BYTE PTR [rax+rax*1]
   1400080d0:	or     dh,BYTE PTR [rdi+rax*1]
   1400080d3:	add    BYTE PTR [rdx],cl
   1400080d5:	xor    al,BYTE PTR [rsi]
   1400080d7:	jo     0x1400080fa
   1400080d9:	add    eax,0x64050002
   1400080de:	(bad)  
   1400080df:	add    al,dl
   1400080e1:	cmp    BYTE PTR [rax],al
   1400080e3:	add    bl,ch
   1400080e5:	cmp    BYTE PTR [rax],al
   1400080e7:	add    ah,cl
   1400080e9:	add    BYTE PTR [rax],0x0
   1400080ec:	and    DWORD PTR [rax],eax
   1400080ee:	add    BYTE PTR [rax],al
   1400080f0:	sar    BYTE PTR [rax],1
   1400080f2:	add    BYTE PTR [rax],al
   1400080f4:	jmp    0x14000812e
   1400080f6:	add    BYTE PTR [rax],al
   1400080f8:	int3   
   1400080f9:	add    BYTE PTR [rax],0x0
   1400080fc:	add    DWORD PTR [rcx+rax*1],eax
   1400080ff:	add    BYTE PTR [rdx+rax*2],al
   140008102:	add    BYTE PTR [rax],al
   140008104:	add    DWORD PTR [rcx+rax*1],eax
   140008107:	add    BYTE PTR [rdx+rax*2],al
   14000810a:	add    BYTE PTR [rax],al
   14000810c:	add    DWORD PTR [rcx+rax*1],eax
   14000810f:	add    BYTE PTR [rdx+rax*2],al
   140008112:	add    BYTE PTR [rax],al
   140008114:	add    DWORD PTR [rcx+rax*1],eax
   140008117:	add    BYTE PTR [rdx+rax*2],al
   14000811a:	add    BYTE PTR [rax],al
   14000811c:	add    DWORD PTR [rcx+rax*1],eax
   14000811f:	add    BYTE PTR [rdx+rax*2],al
   140008122:	add    BYTE PTR [rax],al
   140008124:	add    DWORD PTR [rcx+rax*1],eax
   140008127:	add    BYTE PTR [rdx+rax*2],al
   14000812a:	add    BYTE PTR [rax],al
   14000812c:	add    DWORD PTR [rsi],eax
   14000812e:	add    al,BYTE PTR [rax]
   140008130:	(bad)  
   140008131:	xor    al,BYTE PTR [rdx]
   140008133:	xor    BYTE PTR [rcx],bl
   140008135:	adc    al,0x4
   140008137:	add    BYTE PTR [rsp+rsi*1],dl
   14000813a:	or     BYTE PTR [rax],al
   14000813c:	(bad)  
   14000813d:	push   rdx
   14000813e:	add    dh,BYTE PTR [rax+0x50]
   140008141:	push   rsi
   140008142:	add    BYTE PTR [rax],al
   140008144:	and    BYTE PTR [rbx+0x0],dh
   140008147:	add    bh,bh
   140008149:	(bad)  
   14000814a:	(bad)  
   14000814b:	inc    DWORD PTR [rax]
   14000814d:	add    BYTE PTR [rax],al
   14000814f:	add    bh,bh
   140008151:	(bad)  
   140008152:	(bad)  
   140008153:	inc    DWORD PTR [rax]
	...
   14000815d:	add    BYTE PTR [rax],al
   14000815f:	add    BYTE PTR [rcx],al
   140008161:	add    BYTE PTR [rax],al
   140008163:	add    BYTE PTR [rcx],al
   140008165:	add    BYTE PTR [rax],al
   140008167:	add    BYTE PTR [rcx+rax*4+0x0],ch
   14000816b:	add    BYTE PTR [rax+0x0],al
	...
   140008176:	add    BYTE PTR [rax],al
   140008178:	adc    BYTE PTR [rax+0x0],ah
   14000817b:	add    BYTE PTR [rax],bh
   14000817d:	add    BYTE PTR [rax],al
   14000817f:	add    BYTE PTR [rax],dl
   140008181:	sub    al,BYTE PTR [rax]
   140008183:	add    bh,bh
   140008185:	(bad)  
   140008186:	(bad)  
   140008187:	call   QWORD PTR [rax+0x2a]
   14000818a:	add    BYTE PTR [rax],al
   14000818c:	add    BYTE PTR [rax],al
   14000818e:	add    BYTE PTR [rax],al
   140008190:	pop    rdi
   140008191:	sub    al,BYTE PTR [rax]
   140008193:	add    bh,bh
   140008195:	(bad)  
   140008196:	(bad)  
   140008197:	call   QWORD PTR [rax]
   140008199:	(bad)  
   14000819a:	add    BYTE PTR [rax],al
   14000819c:	add    BYTE PTR [rax],al
   14000819e:	add    BYTE PTR [rax],al
   1400081a0:	sbb    eax,0x1000060
   1400081a5:	add    BYTE PTR [rax],al
   1400081a7:	add    BYTE PTR [rcx],bl
   1400081a9:	or     al,BYTE PTR [rdx]
   1400081ab:	add    BYTE PTR [rdx],cl
   1400081ad:	xor    al,BYTE PTR [rsi]
   1400081af:	push   rax
   1400081b0:	push   rax
   1400081b1:	push   rsi
   1400081b2:	add    BYTE PTR [rax],al
   1400081b4:	and    BYTE PTR [rbx+0x0],dh
   1400081b7:	add    BYTE PTR [rcx],al
   1400081b9:	(bad)  
   1400081ba:	add    al,BYTE PTR [rax]
   1400081bc:	(bad)  
   1400081bd:	xor    al,BYTE PTR [rdx]
   1400081bf:	xor    BYTE PTR [rcx],al
   1400081c1:	(bad)  
   1400081c2:	add    al,BYTE PTR [rax]
   1400081c4:	(bad)  
   1400081c5:	xor    al,BYTE PTR [rdx]
   1400081c7:	xor    BYTE PTR [rcx],al
   1400081c9:	(bad)  
   1400081ca:	add    al,BYTE PTR [rax]
   1400081cc:	(bad)  
   1400081cd:	xor    al,BYTE PTR [rdx]
   1400081cf:	xor    BYTE PTR [rcx],al
   1400081d1:	(bad)  
   1400081d2:	add    al,BYTE PTR [rax]
   1400081d4:	(bad)  
   1400081d5:	xor    al,BYTE PTR [rdx]
   1400081d7:	xor    BYTE PTR [rcx],al
   1400081d9:	(bad)  
   1400081db:	add    BYTE PTR [rdi],cl
   1400081dd:	xor    al,0x6
   1400081df:	add    BYTE PTR [rdi],cl
   1400081e1:	xor    cl,BYTE PTR [rbx]
   1400081e3:	jo     0x1400081e6
   1400081e5:	clts   
   1400081e7:	add    BYTE PTR [rdi],cl
   1400081e9:	push   rsp
   1400081ea:	or     BYTE PTR [rax],al
   1400081ec:	sysenter 
   1400081ee:	(bad)  
   1400081ef:	add    BYTE PTR [rdi],cl
   1400081f1:	xor    cl,BYTE PTR [rbx]
   1400081f3:	(bad)  
   1400081f4:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b40581fc
   1400081fa:	(bad)  
   1400081fb:	add    BYTE PTR [rax],dl
   1400081fd:	add    BYTE PTR [rax],r8b
   140008200:	cmp    eax,0xe4000044
   140008205:	add    DWORD PTR [rax],0x2100
   14000820b:	add    BYTE PTR [rax],dl
   14000820d:	add    BYTE PTR [rax],r8b
   140008210:	cmp    eax,0xe4000044
   140008215:	add    DWORD PTR [rax],0x1040100
   14000821b:	add    BYTE PTR [rdx+rax*2],al
   14000821e:	add    BYTE PTR [rax],al
   140008220:	adc    DWORD PTR [rip+0x641d0006],ebx        # 0x1a41d822c
   140008226:	or     al,BYTE PTR [rax]
   140008228:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000822b:	add    BYTE PTR [rdx],cl
   14000822d:	push   rdx
   14000822e:	(bad)  
   14000822f:	jo     0x140008281
   140008231:	push   rsi
   140008232:	add    BYTE PTR [rax],al
   140008234:	rex.W jae 0x140008237
   140008237:	add    bh,bh
   140008239:	(bad)  
   14000823a:	(bad)  
   14000823b:	jmp    QWORD PTR [rax+0x5f]
   140008241:	add    BYTE PTR [rax],al
   140008243:	add    BYTE PTR [rdi+rbx*2+0x1db00000],ch
   14000824a:	add    BYTE PTR [rax],al
   14000824c:	(bad)  
   14000824d:	(bad)  
   14000824e:	(bad)  
   14000824f:	(bad)  
   140008250:	jmp    0x140008272
   140008255:	add    BYTE PTR [rax],al
   140008257:	add    ch,dh
   140008259:	sbb    eax,0x10000
   14000825e:	add    BYTE PTR [rax],al
   140008260:	or     BYTE PTR [rsi],bl
   140008262:	add    BYTE PTR [rax],al
   140008264:	(bad)  
   140008265:	(bad)  
   140008266:	(bad)  
   140008267:	inc    DWORD PTR [rcx]
   140008269:	(bad)  
   14000826a:	add    al,BYTE PTR [rax]
   14000826c:	(bad)  
   14000826d:	xor    al,BYTE PTR [rdx]
   14000826f:	xor    BYTE PTR [rcx],al
   140008271:	(bad)  
   140008272:	add    al,BYTE PTR [rax]
   140008274:	(bad)  
   140008275:	xor    al,BYTE PTR [rdx]
   140008277:	xor    BYTE PTR [rcx],al
   140008279:	(bad)  
   14000827a:	add    al,BYTE PTR [rax]
   14000827c:	(bad)  
   14000827d:	push   rdx
   14000827e:	add    dh,BYTE PTR [rax]
   140008280:	add    DWORD PTR [rsi],eax
   140008282:	add    al,BYTE PTR [rax]
   140008284:	(bad)  
   140008285:	xor    al,BYTE PTR [rdx]
   140008287:	xor    BYTE PTR [rcx],bl
   140008289:	sbb    BYTE PTR [rax+rax*1],al
   14000828c:	sbb    BYTE PTR [rcx*1+0x6720a00],dh
   140008293:	jo     0x1400082e5
   140008295:	push   rsi
   140008296:	add    BYTE PTR [rax],al
   140008298:	jo     0x14000830d
   14000829a:	add    BYTE PTR [rax],al
   14000829c:	(bad)  
   14000829d:	(bad)  
   14000829e:	(bad)  
   14000829f:	inc    DWORD PTR [rax]
   1400082a1:	add    BYTE PTR [rax],al
   1400082a3:	add    bh,bh
   1400082a5:	(bad)  
   1400082a6:	(bad)  
   1400082a7:	inc    DWORD PTR [rax]
	...
   1400082b1:	add    BYTE PTR [rax],al
   1400082b3:	add    BYTE PTR [rcx],al
   1400082b5:	add    BYTE PTR [rax],al
   1400082b7:	add    BYTE PTR [rcx],al
   1400082b9:	add    BYTE PTR [rax],al
   1400082bb:	add    al,al
   1400082bd:	(bad)  
   1400082be:	add    BYTE PTR [rax],al
   1400082c0:	add    BYTE PTR [rax],al
	...
   1400082cb:	add    BYTE PTR [rax],dh
   1400082cd:	(bad)  
   1400082ce:	add    BYTE PTR [rax],al
   1400082d0:	rex.W add BYTE PTR [rax],al
   1400082d3:	add    BYTE PTR [rax],al
   1400082d5:	add    BYTE PTR [rax],al
   1400082d7:	add    BYTE PTR [rax+0x2b],ah
   1400082da:	add    BYTE PTR [rax],al
   1400082dc:	(bad)  
   1400082dd:	(bad)  
   1400082de:	(bad)  
   1400082df:	call   FWORD PTR [rdx+0x2b]
   1400082e5:	add    BYTE PTR [rax],al
   1400082e7:	add    bh,bl
   1400082e9:	sub    eax,DWORD PTR [rax]
   1400082eb:	add    bh,bh
   1400082ed:	(bad)  
   1400082ee:	(bad)  
   1400082ef:	push   QWORD PTR [rax]
   1400082f1:	(bad)  
   1400082f2:	add    BYTE PTR [rax],al
   1400082f4:	add    BYTE PTR [rax],al
   1400082f6:	add    BYTE PTR [rax],al
   1400082f8:	cmp    eax,0x1000060
   1400082fd:	add    BYTE PTR [rax],al
   1400082ff:	add    BYTE PTR [rcx],bl
   140008301:	or     al,BYTE PTR [rdx]
   140008303:	add    BYTE PTR [rdx],cl
   140008305:	push   rdx
   140008306:	(bad)  
   140008307:	push   rax
   140008308:	push   rax
   140008309:	push   rsi
   14000830a:	add    BYTE PTR [rax],al
   14000830c:	jo     0x140008381
   14000830e:	add    BYTE PTR [rax],al
   140008310:	add    DWORD PTR [rdx],ecx
   140008312:	add    al,0x0
   140008314:	or     dh,BYTE PTR [rdx+rcx*1]
   140008317:	add    BYTE PTR [rdx],cl
   140008319:	push   rdx
   14000831a:	(bad)  
   14000831b:	jo     0x14000831e
   14000831d:	or     al,BYTE PTR [rax+rax*1]
   140008320:	or     dh,BYTE PTR [rcx*1+0x6720a00]
   140008327:	(bad)  
   140008328:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4058330
   14000832e:	or     al,0x0
   140008330:	jo     0x14000835c
   140008332:	add    BYTE PTR [rax],al
   140008334:	mov    ebp,0x1c00002a
   140008339:	add    DWORD PTR [rax],0x0
   14000833c:	and    DWORD PTR [rax],eax
   14000833e:	add    BYTE PTR [rax],al
   140008340:	jo     0x14000836c
   140008342:	add    BYTE PTR [rax],al
   140008344:	mov    ebp,0x1c00002a
   140008349:	add    DWORD PTR [rax],0x0
   14000834c:	add    DWORD PTR [rsi],eax
   14000834e:	add    al,BYTE PTR [rax]
   140008350:	(bad)  
   140008351:	push   rdx
   140008352:	add    ah,BYTE PTR [rax+0x21]
   140008355:	or     al,BYTE PTR [rax+rax*1]
   140008358:	or     dh,BYTE PTR [rcx+rcx*1+0x0]
   14000835c:	add    eax,0x20000834
   140008361:	cmp    BYTE PTR [rax],al
   140008363:	add    BYTE PTR [rcx],dh
   140008365:	cmp    BYTE PTR [rax],al
   140008367:	add    BYTE PTR [rbx+rax*4+0x0],cl
   14000836b:	add    BYTE PTR [rcx],ah
   14000836d:	add    BYTE PTR [rax],al
   14000836f:	add    BYTE PTR [rax],ah
   140008371:	cmp    BYTE PTR [rax],al
   140008373:	add    BYTE PTR [rcx],dh
   140008375:	cmp    BYTE PTR [rax],al
   140008377:	add    BYTE PTR [rbx+rax*4+0x0],cl
   14000837b:	add    BYTE PTR [rcx],al
   14000837d:	add    al,0x1
   14000837f:	add    BYTE PTR [rdx+rax*2],al
   140008382:	add    BYTE PTR [rax],al
   140008384:	add    DWORD PTR [rcx+rax*1],eax
   140008387:	add    BYTE PTR [rdx+rax*2],al
   14000838a:	add    BYTE PTR [rax],al
   14000838c:	add    DWORD PTR [rcx+rax*1],eax
   14000838f:	add    BYTE PTR [rdx+rax*2],al
   140008392:	add    BYTE PTR [rax],al
   140008394:	add    DWORD PTR [rsi],eax
   140008396:	add    al,BYTE PTR [rax]
   140008398:	(bad)  
   140008399:	xor    al,BYTE PTR [rdx]
   14000839b:	xor    BYTE PTR [rcx],al
   14000839d:	add    al,0x1
   14000839f:	add    BYTE PTR [rdx+riz*2],al
   1400083a2:	add    BYTE PTR [rax],al
   1400083a4:	add    DWORD PTR [rsi],eax
   1400083a6:	add    al,BYTE PTR [rax]
   1400083a8:	(bad)  
   1400083a9:	push   rdx
   1400083aa:	add    dh,BYTE PTR [rax]
   1400083ac:	add    DWORD PTR [rsi],eax
   1400083ae:	add    al,BYTE PTR [rax]
   1400083b0:	(bad)  
   1400083b1:	xor    al,BYTE PTR [rdx]
   1400083b3:	xor    BYTE PTR [rcx],bl
   1400083b5:	and    cl,BYTE PTR [rax]
   1400083b7:	add    BYTE PTR [rcx],bl
   1400083b9:	jb     0x1400083d0
   1400083bb:	lock adc esp,eax
   1400083be:	adc    eax,edx
   1400083c0:	xadd   BYTE PTR [rip+0xb600c70],cl        # 0x14b609037
   1400083c7:	xor    BYTE PTR [rax+0x56],dl
   1400083ca:	add    BYTE PTR [rax],al
   1400083cc:	cwde   
   1400083cd:	jae    0x1400083cf
   1400083cf:	add    bh,bh
   1400083d1:	(bad)  
   1400083d2:	(bad)  
   1400083d3:	inc    DWORD PTR [rax]
   1400083d5:	add    BYTE PTR [rax],al
   1400083d7:	add    bh,bh
   1400083d9:	(bad)  
   1400083da:	(bad)  
   1400083db:	inc    DWORD PTR [rax]
   1400083dd:	add    BYTE PTR [rax],al
   1400083df:	add    bh,bh
   1400083e1:	(bad)  
   1400083e2:	(bad)  
   1400083e3:	inc    DWORD PTR [rax]
   1400083e5:	add    BYTE PTR [rax],al
   1400083e7:	add    bh,bh
   1400083e9:	(bad)  
   1400083ea:	(bad)  
   1400083eb:	inc    DWORD PTR [rax]
	...
   1400083f5:	add    BYTE PTR [rax],al
   1400083f7:	add    BYTE PTR [rcx],al
   1400083f9:	add    BYTE PTR [rax],al
   1400083fb:	add    BYTE PTR [rcx],al
   1400083fd:	add    BYTE PTR [rax],al
   1400083ff:	add    BYTE PTR [rax],bl
   140008401:	test   BYTE PTR [rax],al
   140008403:	add    BYTE PTR [rdx],al
   140008405:	add    BYTE PTR [rax],al
   140008407:	add    BYTE PTR [rdx],al
   140008409:	add    BYTE PTR [rax],al
   14000840b:	add    BYTE PTR [rbx],al
   14000840d:	add    BYTE PTR [rax],al
   14000840f:	add    BYTE PTR [rcx],al
   140008411:	add    BYTE PTR [rax],al
   140008413:	add    BYTE PTR [rsp+rax*4],ch
   140008416:	add    BYTE PTR [rax],al
   140008418:	add    BYTE PTR [rax],al
	...
   140008423:	add    BYTE PTR [rax+0x61],dh
   140008426:	add    BYTE PTR [rax],al
   140008428:	rex.W add BYTE PTR [rax],al
   14000842b:	add    BYTE PTR [rax+0x0],al
	...
   140008436:	add    BYTE PTR [rax],al
   140008438:	xchg   ebx,eax
   140008439:	(bad)  
   14000843a:	add    BYTE PTR [rax],al
   14000843c:	rex.W add BYTE PTR [rax],al
   14000843f:	add    BYTE PTR [rax-0xffffcd],dl
   140008445:	(bad)  
   140008446:	(bad)  
   140008447:	dec    DWORD PTR [rsi+0x34]
   14000844d:	add    BYTE PTR [rax],al
   14000844f:	add    BYTE PTR [rdx],bl
   140008451:	xor    eax,0xffff0000
   140008456:	(bad)  
   140008457:	jmp    FWORD PTR [rdx+0x2000035]
   14000845d:	add    BYTE PTR [rax],al
   14000845f:	add    dl,ch
   140008461:	xor    eax,0xffff0000
   140008466:	(bad)  
   140008467:	push   QWORD PTR [rax+0x61]
   14000846a:	add    BYTE PTR [rax],al
   14000846c:	add    BYTE PTR [rax],al
   14000846e:	add    BYTE PTR [rax],al
   140008470:	jge    0x1400084d3
   140008472:	add    BYTE PTR [rax],al
   140008474:	add    DWORD PTR [rax],eax
   140008476:	add    BYTE PTR [rax],al
   140008478:	xchg   ebx,eax
   140008479:	(bad)  
   14000847a:	add    BYTE PTR [rax],al
   14000847c:	add    BYTE PTR [rax],al
   14000847e:	add    BYTE PTR [rax],al
   140008480:	movabs al,ds:0x1900000003000061
   140008489:	or     al,BYTE PTR [rdx]
   14000848b:	add    BYTE PTR [rdx],cl
   14000848d:	push   rdx
   14000848e:	(bad)  
   14000848f:	push   rax
   140008490:	push   rax
   140008491:	push   rsi
   140008492:	add    BYTE PTR [rax],al
   140008494:	cwde   
   140008495:	jae    0x140008497
   140008497:	add    BYTE PTR [rcx],bl
   140008499:	or     al,BYTE PTR [rdx]
   14000849b:	add    BYTE PTR [rdx],cl
   14000849d:	push   rdx
   14000849e:	(bad)  
   14000849f:	push   rax
   1400084a0:	push   rax
   1400084a1:	push   rsi
   1400084a2:	add    BYTE PTR [rax],al
   1400084a4:	cwde   
   1400084a5:	jae    0x1400084a7
   1400084a7:	add    BYTE PTR [rcx],al
   1400084a9:	or     al,BYTE PTR [rax+rax*1]
   1400084ac:	or     dh,BYTE PTR [rax+rcx*1]
   1400084af:	add    BYTE PTR [rdx],cl
   1400084b1:	push   rdx
   1400084b2:	(bad)  
   1400084b3:	jo     0x1400084b6
   1400084b5:	add    al,0x1
   1400084b7:	add    BYTE PTR [rdx+rax*2],al
   1400084ba:	add    BYTE PTR [rax],al
   1400084bc:	adc    DWORD PTR [rip+0x641d0006],ebx        # 0x1a41d84c8
   1400084c2:	or     al,BYTE PTR [rax]
   1400084c4:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400084c7:	add    BYTE PTR [rdx],cl
   1400084c9:	push   rdx
   1400084ca:	(bad)  
   1400084cb:	jo     0x14000851d
   1400084cd:	push   rsi
   1400084ce:	add    BYTE PTR [rax],al
   1400084d0:	shl    BYTE PTR [rbx+0x0],0x0
   1400084d4:	(bad)  
   1400084d5:	(bad)  
   1400084d6:	(bad)  
   1400084d7:	call   rax
   1400084d9:	pop    rdi
   1400084da:	add    BYTE PTR [rax],al
   1400084dc:	add    BYTE PTR [rax],al
   1400084de:	add    BYTE PTR [rax],al
   1400084e0:	fcomp  QWORD PTR [rdi+0x0]
   1400084e3:	add    BYTE PTR [rax],al
   1400084e5:	add    BYTE PTR [rax],al
   1400084e7:	add    BYTE PTR [rax+0x22],ah
   1400084ea:	add    BYTE PTR [rax],al
   1400084ec:	(bad)  
   1400084ed:	(bad)  
   1400084ee:	(bad)  
   1400084ef:	call   FWORD PTR [rcx+0x22]
   1400084f5:	add    BYTE PTR [rax],al
   1400084f7:	add    BYTE PTR [rbp+0x1000022],ah
   1400084fd:	add    BYTE PTR [rax],al
   1400084ff:	add    BYTE PTR [rax-0xffffde],bh
   140008505:	(bad)  
   140008506:	(bad)  
   140008507:	inc    DWORD PTR [rcx]
   140008509:	(bad)  
   14000850a:	add    al,BYTE PTR [rax]
   14000850c:	(bad)  
   14000850d:	xor    al,BYTE PTR [rdx]
   14000850f:	xor    BYTE PTR [rcx],al
   140008511:	(bad)  
   140008512:	add    al,BYTE PTR [rax]
   140008514:	(bad)  
   140008515:	xor    al,BYTE PTR [rdx]
   140008517:	xor    BYTE PTR [rcx],dl
   140008519:	sbb    DWORD PTR [rsi],eax
   14000851b:	add    BYTE PTR [rcx],bl
   14000851d:	or     al,BYTE PTR fs:[rax]
   140008520:	adc    al,0x34
   140008522:	or     DWORD PTR [rax],eax
   140008524:	(bad)  
   140008525:	push   rdx
   140008526:	add    dh,BYTE PTR [rax+0x50]
   140008529:	push   rsi
   14000852a:	add    BYTE PTR [rax],al
   14000852c:	call   0x13f0085a4
   140008531:	(bad)  
   140008532:	(bad)  
   140008533:	push   rax
   140008535:	pop    rdi
   140008536:	add    BYTE PTR [rax],al
   140008538:	add    BYTE PTR [rax],al
   14000853a:	add    BYTE PTR [rax],al
   14000853c:	cld    
   14000853d:	pop    rdi
   14000853e:	add    BYTE PTR [rax],al
   140008540:	lock and al,BYTE PTR [rax]
   140008543:	add    bh,bh
   140008545:	(bad)  
   140008546:	(bad)  
   140008547:	jmp    FWORD PTR [rdx]
   140008549:	and    eax,DWORD PTR [rax]
   14000854b:	add    BYTE PTR [rax],al
   14000854d:	add    BYTE PTR [rax],al
   14000854f:	add    BYTE PTR [rsi],dh
   140008551:	and    eax,DWORD PTR [rax]
   140008553:	add    BYTE PTR [rcx],al
   140008555:	add    BYTE PTR [rax],al
   140008557:	add    BYTE PTR [rcx+0x23],cl
   14000855a:	add    BYTE PTR [rax],al
   14000855c:	(bad)  
   14000855d:	(bad)  
   14000855e:	(bad)  
   14000855f:	inc    DWORD PTR [rcx]
   140008561:	or     al,BYTE PTR [rax+rax*1]
   140008564:	or     dh,BYTE PTR [rsi+rax*1]
   140008567:	add    BYTE PTR [rdx],cl
   140008569:	xor    al,BYTE PTR [rsi]
   14000856b:	jo     0x14000856e
   14000856d:	lsl    eax,WORD PTR [rax]
   140008570:	sgdt   [rsi]
   140008573:	add    sil,BYTE PTR [rax]
   140008576:	add    BYTE PTR [rax],al
   140008578:	add    DWORD PTR [rdi],edx
   14000857a:	or     DWORD PTR [rax],eax
   14000857c:	(bad)  
   14000857d:	sbb    al,BYTE PTR fs:[rax]
   140008580:	(bad)  
   140008581:	push   rsp
   140008582:	sbb    DWORD PTR [rax],eax
   140008584:	(bad)  
   140008585:	xor    al,0x18
   140008587:	add    BYTE PTR [rdi],dl
   140008589:	add    DWORD PTR [rsi],edx
   14000858b:	add    BYTE PTR [rax],dl
   14000858d:	jo     0x14000858f
   14000858f:	add    BYTE PTR [rcx],al
   140008591:	sbb    BYTE PTR [rdx],al
   140008593:	add    BYTE PTR [rax],bl
   140008595:	push   rdx
   140008596:	adc    al,0x30
   140008598:	and    DWORD PTR [rip+0x740d0004],ecx        # 0x1b40d85a2
   14000859e:	or     eax,DWORD PTR [rax]
   1400085a0:	add    eax,0xf0000864
   1400085a5:	sbb    al,0x0
   1400085a7:	add    BYTE PTR [rax],cl
   1400085a9:	sbb    eax,0x85900000
   1400085ae:	add    BYTE PTR [rax],al
   1400085b0:	and    DWORD PTR [rax],eax
   1400085b2:	add    BYTE PTR [rax],al
   1400085b4:	lock sbb al,0x0
   1400085b7:	add    BYTE PTR [rax],cl
   1400085b9:	sbb    eax,0x85900000
   1400085be:	add    BYTE PTR [rax],al
   1400085c0:	and    DWORD PTR [rax],eax
   1400085c2:	add    al,0x0
   1400085c4:	add    BYTE PTR [rbx+rcx*1+0x0],dh
   1400085c8:	add    BYTE PTR [rax+rcx*1+0x0],ah
   1400085cc:	lock sbb al,0x0
   1400085cf:	add    BYTE PTR [rax],cl
   1400085d1:	sbb    eax,0x85900000
   1400085d6:	add    BYTE PTR [rax],al
   1400085d8:	add    DWORD PTR [rsi],eax
   1400085da:	add    al,BYTE PTR [rax]
   1400085dc:	(bad)  
   1400085dd:	xor    al,BYTE PTR [rdx]
   1400085df:	xor    BYTE PTR [rcx],dl
   1400085e1:	sbb    BYTE PTR [rax+rax*1],al
   1400085e4:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400085e7:	add    BYTE PTR [rdx],cl
   1400085e9:	push   rdx
   1400085ea:	(bad)  
   1400085eb:	jo     0x14000863d
   1400085ed:	push   rsi
   1400085ee:	add    BYTE PTR [rax],al
   1400085f0:	adc    BYTE PTR [rax+rax*1+0x0],dh
   1400085f4:	(bad)  
   1400085f5:	(bad)  
   1400085f6:	(bad)  
   1400085f7:	inc    eax
   1400085f9:	pop    rdi
   1400085fa:	add    BYTE PTR [rax],al
   1400085fc:	add    BYTE PTR [rax],al
   1400085fe:	add    BYTE PTR [rax],al
   140008600:	loopne 0x140008623
   140008602:	add    BYTE PTR [rax],al
   140008604:	(bad)  
   140008605:	(bad)  
   140008606:	(bad)  
   140008607:	call   FWORD PTR [rsi]
   140008609:	and    al,BYTE PTR [rax]
   14000860b:	add    BYTE PTR [rax],al
   14000860d:	add    BYTE PTR [rax],al
   14000860f:	add    BYTE PTR [rsi+0x22],al
   140008612:	add    BYTE PTR [rax],al
   140008614:	(bad)  
   140008615:	(bad)  
   140008616:	(bad)  
   140008617:	inc    DWORD PTR [rcx]
   140008619:	or     al,BYTE PTR [rax+rax*1]
   14000861c:	or     dh,BYTE PTR [rsi+rax*1]
   14000861f:	add    BYTE PTR [rdx],cl
   140008621:	xor    al,BYTE PTR [rsi]
   140008623:	jo     0x140008626
   140008625:	(bad)  
   140008626:	add    al,BYTE PTR [rax]
   140008628:	(bad)  
   140008629:	xor    al,BYTE PTR [rdx]
   14000862b:	xor    BYTE PTR [rcx],al
   14000862d:	add    al,0x1
   14000862f:	add    BYTE PTR [rdx+rax*2],al
   140008632:	add    BYTE PTR [rax],al
   140008634:	add    DWORD PTR [rsi],eax
   140008636:	add    al,BYTE PTR [rax]
   140008638:	(bad)  
   140008639:	push   rdx
   14000863a:	add    dh,BYTE PTR [rax]
   14000863c:	add    DWORD PTR [rcx+rax*1],eax
   14000863f:	add    BYTE PTR [rdx+rax*2],al
   140008642:	add    BYTE PTR [rax],al
   140008644:	add    DWORD PTR [rcx+rax*1],eax
   140008647:	add    BYTE PTR [rdx+rax*4],al
   14000864a:	add    BYTE PTR [rax],al
   14000864c:	add    DWORD PTR [rcx+rax*1],eax
   14000864f:	add    BYTE PTR [rdx+rax*2],al
   140008652:	add    BYTE PTR [rax],al
   140008654:	add    DWORD PTR [rcx+rax*1],eax
   140008657:	add    BYTE PTR [rdx+rax*2],al
   14000865a:	add    BYTE PTR [rax],al
   14000865c:	add    DWORD PTR [rdi],ecx
   14000865e:	(bad)  
   14000865f:	add    BYTE PTR [rdi],cl
   140008661:	fs (bad) 
   140008663:	add    BYTE PTR [rdi],cl
   140008665:	xor    al,0x6
   140008667:	add    BYTE PTR [rdi],cl
   140008669:	xor    cl,BYTE PTR [rbx]
   14000866b:	jo     0x14000866e
   14000866d:	(bad)  
   14000866e:	add    al,BYTE PTR [rax]
   140008670:	(bad)  
   140008671:	xor    al,BYTE PTR [rdx]
   140008673:	xor    BYTE PTR [rcx],al
   140008675:	add    al,0x1
   140008677:	add    BYTE PTR [rdx+riz*2],al
   14000867a:	add    BYTE PTR [rax],al
   14000867c:	sbb    DWORD PTR [rip+0x62040001],ecx        # 0x1a2048683
   140008682:	add    BYTE PTR [rax],al
   140008684:	push   rax
   140008685:	push   rsi
   140008686:	add    BYTE PTR [rax],al
   140008688:	cmp    BYTE PTR [rax+rax*1+0x0],dh
   14000868c:	(bad)  
   14000868d:	(bad)  
   14000868e:	(bad)  
   14000868f:	inc    DWORD PTR [rax]
   140008691:	add    BYTE PTR [rax],al
   140008693:	add    bh,bh
   140008695:	(bad)  
   140008696:	(bad)  
   140008697:	inc    DWORD PTR [rax]
	...
   1400086a1:	add    BYTE PTR [rax],al
   1400086a3:	add    BYTE PTR [rcx],al
   1400086a5:	add    BYTE PTR [rax],al
   1400086a7:	add    BYTE PTR [rcx],al
   1400086a9:	add    BYTE PTR [rax],al
   1400086ab:	add    BYTE PTR [rax+0x40000086],dh
	...
   1400086bd:	pop    rdi
   1400086be:	add    BYTE PTR [rax],al
   1400086c0:	cmp    BYTE PTR [rax],al
   1400086c2:	add    BYTE PTR [rax],al
   1400086c4:	add    BYTE PTR [rax],al
   1400086c6:	add    BYTE PTR [rax],al
   1400086c8:	and    BYTE PTR [rsi],dl
   1400086ca:	add    BYTE PTR [rax],al
   1400086cc:	(bad)  
   1400086cd:	(bad)  
   1400086ce:	(bad)  
   1400086cf:	jmp    FWORD PTR [rip+0x16]        # 0x1400086eb
   1400086d5:	add    BYTE PTR [rax],al
   1400086d7:	add    BYTE PTR [rsi+0x16],al
   1400086da:	add    BYTE PTR [rax],al
   1400086dc:	(bad)  
   1400086dd:	(bad)  
   1400086de:	(bad)  
   1400086df:	inc    DWORD PTR [rax]
   1400086e1:	pop    rdi
   1400086e2:	add    BYTE PTR [rax],al
   1400086e4:	add    BYTE PTR [rax],al
   1400086e6:	add    BYTE PTR [rax],al
   1400086e8:	or     eax,0x100005f
   1400086ed:	add    BYTE PTR [rax],al
   1400086ef:	add    BYTE PTR [rcx],bl
   1400086f1:	or     al,BYTE PTR [rdx]
   1400086f3:	add    BYTE PTR [rdx],cl
   1400086f5:	xor    al,BYTE PTR [rsi]
   1400086f7:	push   rax
   1400086f8:	push   rax
   1400086f9:	push   rsi
   1400086fa:	add    BYTE PTR [rax],al
   1400086fc:	cmp    BYTE PTR [rax+rax*1+0x0],dh
   140008700:	add    DWORD PTR [rdx],ecx
   140008702:	add    al,0x0
   140008704:	or     dh,BYTE PTR [rsi+rax*1]
   140008707:	add    BYTE PTR [rdx],cl
   140008709:	xor    al,BYTE PTR [rsi]
   14000870b:	jo     0x140008726
   14000870d:	(bad)  
   14000870e:	or     BYTE PTR [rax],al
   140008710:	(bad)  
   140008711:	push   rdx
   140008712:	sbb    dh,al
   140008714:	sbb    al,ah
   140008716:	(bad)  
   140008717:	rcl    BYTE PTR [rax+rax*8],1
   14000871a:	adc    dh,BYTE PTR [rax+0x11]
   14000871d:	(bad)  
   14000871e:	adc    BYTE PTR [rax],dh
   140008720:	push   rax
   140008721:	push   rsi
   140008722:	add    BYTE PTR [rax],al
   140008724:	(bad)  
   140008725:	je     0x140008727
   140008727:	add    bh,bh
   140008729:	(bad)  
   14000872a:	(bad)  
   14000872b:	inc    DWORD PTR [rax]
   14000872d:	add    BYTE PTR [rax],al
   14000872f:	add    bh,bh
   140008731:	(bad)  
   140008732:	(bad)  
   140008733:	inc    DWORD PTR [rax]
	...
   14000873d:	add    BYTE PTR [rax],al
   14000873f:	add    BYTE PTR [rcx],al
   140008741:	add    BYTE PTR [rax],al
   140008743:	add    BYTE PTR [rcx],al
   140008745:	add    BYTE PTR [rax],al
   140008747:	add    BYTE PTR [rdi+rax*4+0x0],cl
   14000874b:	add    BYTE PTR [rax+0x0],al
	...
   140008756:	add    BYTE PTR [rax],al
   140008758:	rcr    BYTE PTR [rsi+0x0],1
   14000875b:	add    BYTE PTR [rax],bh
   14000875d:	add    BYTE PTR [rax],al
   14000875f:	add    al,dh
   140008761:	adc    al,BYTE PTR [rax]
   140008763:	add    bh,bh
   140008765:	(bad)  
   140008766:	(bad)  
   140008767:	jmp    QWORD PTR [rbx]
   140008769:	adc    eax,DWORD PTR [rax]
   14000876b:	add    BYTE PTR [rax],al
   14000876d:	add    BYTE PTR [rax],al
   14000876f:	add    BYTE PTR [rdi-0xffffec],al
   140008775:	(bad)  
   140008776:	(bad)  
   140008777:	call   FWORD PTR [rax]
   140008779:	adc    eax,0x0
   14000877e:	add    BYTE PTR [rax],al
   140008780:	fstp   QWORD PTR [rsi+0x0]
   140008783:	add    BYTE PTR [rcx],al
   140008785:	add    BYTE PTR [rax],al
   140008787:	add    BYTE PTR [rcx],bl
   140008789:	or     al,BYTE PTR [rdx]
   14000878b:	add    BYTE PTR [rdx],cl
   14000878d:	xor    al,BYTE PTR [rsi]
   14000878f:	push   rax
   140008790:	push   rax
   140008791:	push   rsi
   140008792:	add    BYTE PTR [rax],al
   140008794:	(bad)  
   140008795:	je     0x140008797
   140008797:	add    BYTE PTR [rcx],al
   140008799:	(bad)  
   14000879a:	add    al,BYTE PTR [rax]
   14000879c:	(bad)  
   14000879d:	xor    al,BYTE PTR [rdx]
   14000879f:	xor    BYTE PTR [rcx],al
   1400087a1:	add    al,0x1
   1400087a3:	add    BYTE PTR [rdx+rax*4],al
   1400087a6:	add    BYTE PTR [rax],al
   1400087a8:	add    DWORD PTR [rdx],ecx
   1400087aa:	add    al,0x0
   1400087ac:	or     dh,BYTE PTR [rsi+rax*1]
   1400087af:	add    BYTE PTR [rdx],cl
   1400087b1:	xor    al,BYTE PTR [rsi]
   1400087b3:	jo     0x1400087ce
   1400087b5:	or     eax,0x62040001
   1400087ba:	add    BYTE PTR [rax],al
   1400087bc:	push   rax
   1400087bd:	push   rsi
   1400087be:	add    BYTE PTR [rax],al
   1400087c0:	mov    BYTE PTR [rax+rax*1+0x0],dh
   1400087c4:	(bad)  
   1400087c5:	(bad)  
   1400087c6:	(bad)  
   1400087c7:	inc    DWORD PTR [rax]
   1400087c9:	add    BYTE PTR [rax],al
   1400087cb:	add    bh,bh
   1400087cd:	(bad)  
   1400087ce:	(bad)  
   1400087cf:	inc    DWORD PTR [rax]
	...
   1400087d9:	add    BYTE PTR [rax],al
   1400087db:	add    BYTE PTR [rcx],al
   1400087dd:	add    BYTE PTR [rax],al
   1400087df:	add    BYTE PTR [rcx],al
   1400087e1:	add    BYTE PTR [rax],al
   1400087e3:	add    al,ch
   1400087e5:	xchg   DWORD PTR [rax],eax
   1400087e7:	add    BYTE PTR [rax+0x0],al
	...
   1400087f2:	add    BYTE PTR [rax],al
   1400087f4:	and    BYTE PTR [rdi+0x0],bl
   1400087f7:	add    BYTE PTR [rax],bh
   1400087f9:	add    BYTE PTR [rax],al
   1400087fb:	add    BYTE PTR [rax],al
   1400087fd:	add    BYTE PTR [rax],al
   1400087ff:	add    BYTE PTR [rax+0x16],dh
   140008802:	add    BYTE PTR [rax],al
   140008804:	(bad)  
   140008805:	(bad)  
   140008806:	(bad)  
   140008807:	(bad)  
   140008808:	jge    0x140008820
   14000880a:	add    BYTE PTR [rax],al
   14000880c:	add    BYTE PTR [rax],al
   14000880e:	add    BYTE PTR [rax],al
   140008810:	mov    eax,0xff000016
   140008815:	(bad)  
   140008816:	(bad)  
   140008817:	jmp    QWORD PTR [rax]
   140008819:	pop    rdi
   14000881a:	add    BYTE PTR [rax],al
   14000881c:	add    BYTE PTR [rax],al
   14000881e:	add    BYTE PTR [rax],al
   140008820:	sub    eax,0x100005f
   140008825:	add    BYTE PTR [rax],al
   140008827:	add    BYTE PTR [rcx],bl
   140008829:	or     al,BYTE PTR [rdx]
   14000882b:	add    BYTE PTR [rdx],cl
   14000882d:	xor    al,BYTE PTR [rsi]
   14000882f:	push   rax
   140008830:	push   rax
   140008831:	push   rsi
   140008832:	add    BYTE PTR [rax],al
   140008834:	mov    BYTE PTR [rax+rax*1+0x0],dh
   140008838:	add    DWORD PTR [rcx+rax*1],eax
   14000883b:	add    BYTE PTR [rdx+rax*2],al
   14000883e:	add    BYTE PTR [rax],al
   140008840:	sbb    DWORD PTR [rsp+rax*1],edx
   140008843:	add    BYTE PTR [rsp+rsi*1],dl
   140008846:	or     al,BYTE PTR [rax]
   140008848:	(bad)  
   140008849:	jb     0x14000884d
   14000884b:	jo     0x14000889d
   14000884d:	push   rsi
   14000884e:	add    BYTE PTR [rax],al
   140008850:	mov    al,0x74
   140008852:	add    BYTE PTR [rax],al
   140008854:	(bad)  
   140008855:	(bad)  
   140008856:	(bad)  
   140008857:	inc    DWORD PTR [rax]
   140008859:	add    BYTE PTR [rax],al
   14000885b:	add    BYTE PTR [rax],al
   14000885d:	add    BYTE PTR [rax],al
   14000885f:	add    BYTE PTR [rax-0xffffa2],dl
   140008865:	(bad)  
   140008866:	(bad)  
   140008867:	inc    DWORD PTR [rax]
   140008869:	add    BYTE PTR [rax],al
   14000886b:	add    BYTE PTR [rax],al
   14000886d:	add    BYTE PTR [rax],al
   14000886f:	add    BYTE PTR [rcx],al
   140008871:	add    BYTE PTR [rax],al
   140008873:	add    BYTE PTR [rdx],al
   140008875:	add    BYTE PTR [rax],al
   140008877:	add    BYTE PTR [rcx],al
   140008879:	add    BYTE PTR [rax],al
   14000887b:	add    BYTE PTR [rax+0x40000088],al
	...
   140008889:	add    BYTE PTR [rax],al
   14000888b:	add    BYTE PTR [rsi+rbx*2+0x380000],ch
   140008892:	add    BYTE PTR [rax],al
   140008894:	add    BYTE PTR [rax],al
   140008896:	add    BYTE PTR [rax],al
   140008898:	nop
   140008899:	adc    DWORD PTR [rax],eax
   14000889b:	add    bh,bh
   14000889d:	(bad)  
   14000889e:	(bad)  
   14000889f:	push   QWORD PTR [rcx+rdx*1+0x0]
   1400088a6:	add    BYTE PTR [rax],al
   1400088a8:	ret    0x11
   1400088ab:	add    BYTE PTR [rcx],al
   1400088ad:	add    BYTE PTR [rax],al
   1400088af:	add    al,dl
   1400088b1:	adc    DWORD PTR [rax],eax
   1400088b3:	add    bh,bh
   1400088b5:	(bad)  
   1400088b6:	(bad)  
   1400088b7:	jmp    FWORD PTR [rsi+rbx*2+0x0]
   1400088be:	add    BYTE PTR [rax],al
   1400088c0:	mov    ecx,0x200005e
   1400088c5:	add    BYTE PTR [rax],al
   1400088c7:	add    BYTE PTR [rcx],al
   1400088c9:	(bad)  
   1400088ca:	add    al,BYTE PTR [rax]
   1400088cc:	(bad)  
   1400088cd:	xor    al,BYTE PTR [rdx]
   1400088cf:	push   rax
   1400088d0:	sbb    DWORD PTR [rdx],ecx
   1400088d2:	add    al,BYTE PTR [rax]
   1400088d4:	or     dh,BYTE PTR [rdx]
   1400088d6:	(bad)  
   1400088d7:	push   rax
   1400088d8:	push   rax
   1400088d9:	push   rsi
   1400088da:	add    BYTE PTR [rax],al
   1400088dc:	mov    al,0x74
   1400088de:	add    BYTE PTR [rax],al
   1400088e0:	adc    DWORD PTR [rdx],edx
   1400088e2:	add    DWORD PTR [rax],eax
   1400088e4:	or     DWORD PTR [rdx+0x0],esp
   1400088e7:	add    BYTE PTR [rax+0x56],dl
   1400088ea:	add    BYTE PTR [rax],al
   1400088ec:	fdiv   DWORD PTR [rax+rax*1+0x0]
   1400088f0:	(bad)  
   1400088f1:	(bad)  
   1400088f2:	(bad)  
   1400088f3:	inc    DWORD PTR [rax+0x5f]
   1400088f6:	add    BYTE PTR [rax],al
   1400088f8:	add    BYTE PTR [rax],bl
   1400088fa:	add    BYTE PTR [rax],al
   1400088fc:	(bad)  
   1400088fd:	(bad)  
   1400088fe:	(bad)  
   1400088ff:	call   FWORD PTR [rdx]
   140008901:	sbb    BYTE PTR [rax],al
   140008903:	add    BYTE PTR [rax],al
   140008905:	add    BYTE PTR [rax],al
   140008907:	add    BYTE PTR [rbx],ch
   140008909:	sbb    BYTE PTR [rax],al
   14000890b:	add    bh,bh
   14000890d:	(bad)  
   14000890e:	(bad)  
   14000890f:	inc    DWORD PTR [rcx]
   140008911:	(bad)  
   140008912:	add    al,BYTE PTR [rax]
   140008914:	(bad)  
   140008915:	xor    al,BYTE PTR [rdx]
   140008917:	push   rax
   140008918:	adc    DWORD PTR [rdx],edx
   14000891a:	add    DWORD PTR [rax],eax
   14000891c:	or     DWORD PTR [rdx+0x0],esp
   14000891f:	add    BYTE PTR [rax+0x56],dl
   140008922:	add    BYTE PTR [rax],al
   140008924:	add    BYTE PTR [rbp+0x0],dh
   140008927:	add    bh,bh
   140008929:	(bad)  
   14000892a:	(bad)  
   14000892b:	inc    DWORD PTR [rax+0x6000005f]
   140008931:	sbb    BYTE PTR [rax],al
   140008933:	add    bh,bh
   140008935:	(bad)  
   140008936:	(bad)  
   140008937:	(bad)  
   140008938:	jp     0x140008952
   14000893a:	add    BYTE PTR [rax],al
   14000893c:	add    BYTE PTR [rax],al
   14000893e:	add    BYTE PTR [rax],al
   140008940:	mov    ebx,DWORD PTR [rax]
   140008942:	add    BYTE PTR [rax],al
   140008944:	(bad)  
   140008945:	(bad)  
   140008946:	(bad)  
   140008947:	inc    DWORD PTR [rcx]
   140008949:	(bad)  
   14000894a:	add    al,BYTE PTR [rax]
   14000894c:	(bad)  
   14000894d:	xor    al,BYTE PTR [rdx]
   14000894f:	push   rax
   140008950:	adc    DWORD PTR [rdx],edx
   140008952:	add    DWORD PTR [rax],eax
   140008954:	or     DWORD PTR [rdx+0x0],esp
   140008957:	add    BYTE PTR [rax+0x56],dl
   14000895a:	add    BYTE PTR [rax],al
   14000895c:	sub    BYTE PTR [rbp+0x0],dh
   14000895f:	add    bh,bh
   140008961:	(bad)  
   140008962:	(bad)  
   140008963:	jmp    QWORD PTR [rax+0x5f]
   140008966:	add    BYTE PTR [rax],al
   140008968:	xor    BYTE PTR [rax],bl
   14000896a:	add    BYTE PTR [rax],al
   14000896c:	(bad)  
   14000896d:	(bad)  
   14000896e:	(bad)  
   14000896f:	dec    DWORD PTR [rdx+0x18]
   140008972:	add    BYTE PTR [rax],al
   140008974:	add    BYTE PTR [rax],al
   140008976:	add    BYTE PTR [rax],al
   140008978:	pop    rbx
   140008979:	sbb    BYTE PTR [rax],al
   14000897b:	add    bh,bh
   14000897d:	(bad)  
   14000897e:	(bad)  
   14000897f:	inc    DWORD PTR [rcx]
   140008981:	(bad)  
   140008982:	add    al,BYTE PTR [rax]
   140008984:	(bad)  
   140008985:	xor    al,BYTE PTR [rdx]
   140008987:	push   rax
   140008988:	add    DWORD PTR [rcx+rax*1],eax
   14000898b:	add    BYTE PTR [rdx+rax*2],al
   14000898e:	add    BYTE PTR [rax],al
   140008990:	adc    DWORD PTR [rsi],eax
   140008992:	add    al,BYTE PTR [rax]
   140008994:	(bad)  
   140008995:	xor    al,BYTE PTR [rdx]
   140008997:	xor    dh,ch
   140008999:	pop    rdx
   14000899a:	add    BYTE PTR [rax],al
   14000899c:	add    DWORD PTR [rax],eax
   14000899e:	add    BYTE PTR [rax],al
   1400089a0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400089a1:	push   rbp
   1400089a2:	add    BYTE PTR [rax],al
   1400089a4:	or     eax,0xc8000056
   1400089a9:	(bad)  
   1400089aa:	add    BYTE PTR [rax],al
   1400089ac:	add    BYTE PTR [rax],al
   1400089ae:	add    BYTE PTR [rax],al
   1400089b0:	add    DWORD PTR [rsi],eax
   1400089b2:	add    al,BYTE PTR [rax]
   1400089b4:	(bad)  
   1400089b5:	xor    al,BYTE PTR [rdx]
   1400089b7:	push   rax
   1400089b8:	add    DWORD PTR [rsi],eax
   1400089ba:	add    al,BYTE PTR [rax]
   1400089bc:	(bad)  
   1400089bd:	xor    al,BYTE PTR [rdx]
   1400089bf:	xor    BYTE PTR [rcx],al
   1400089c1:	add    al,0x1
   1400089c3:	add    BYTE PTR [rdx+rdx*1],al
   1400089c6:	add    BYTE PTR [rax],al
   1400089c8:	add    DWORD PTR [rdi],ecx
   1400089ca:	(bad)  
   1400089cb:	add    BYTE PTR [rdi],cl
   1400089cd:	fs (bad) 
   1400089cf:	add    BYTE PTR [rdi],cl
   1400089d1:	xor    al,0x6
   1400089d3:	add    BYTE PTR [rdi],cl
   1400089d5:	xor    cl,BYTE PTR [rbx]
   1400089d7:	jo     0x1400089da
   1400089d9:	add    al,0x1
   1400089db:	add    BYTE PTR [rdx+rax*2],al
   1400089de:	add    BYTE PTR [rax],al
   1400089e0:	add    DWORD PTR [rcx+rax*1],eax
   1400089e3:	add    BYTE PTR [rdx+riz*2],al
   1400089e6:	add    BYTE PTR [rax],al
   1400089e8:	or     DWORD PTR [rax],edx
   1400089ea:	(bad)  
   1400089eb:	add    BYTE PTR [rax],dl
   1400089ed:	or     DWORD PTR fs:[rax],eax
   1400089f0:	adc    BYTE PTR [rax+rcx*1],dh
   1400089f3:	add    BYTE PTR [rax],dl
   1400089f5:	push   rdx
   1400089f6:	or     al,0x70
   1400089f8:	out    dx,al
   1400089f9:	pop    rdx
   1400089fa:	add    BYTE PTR [rax],al
   1400089fc:	add    DWORD PTR [rax],eax
   1400089fe:	add    BYTE PTR [rax],al
   140008a00:	(bad)  
   140008a01:	pop    rax
   140008a02:	add    BYTE PTR [rax],al
   140008a04:	rex.WRXB pop r10
   140008a06:	add    BYTE PTR [rax],al
   140008a08:	jrcxz  0x140008a6b
   140008a0a:	add    BYTE PTR [rax],al
   140008a0c:	rex.WRXB pop r10
   140008a0e:	add    BYTE PTR [rax],al
   140008a10:	add    DWORD PTR [rsi],eax
   140008a12:	add    al,BYTE PTR [rax]
   140008a14:	(bad)  
   140008a15:	xor    al,BYTE PTR [rdx]
   140008a17:	push   rax
   140008a18:	add    DWORD PTR [rcx+rax*1],eax
   140008a1b:	add    BYTE PTR [rdx+rax*2],al
   140008a1e:	add    BYTE PTR [rax],al
   140008a20:	adc    DWORD PTR [rax],ebx
   140008a22:	add    eax,0x14621800
   140008a27:	loopne 0x140008a3b
   140008a29:	jo     0x140008a3c
   140008a2b:	(bad)  
   140008a2c:	adc    BYTE PTR [rax],dh
   140008a2e:	add    BYTE PTR [rax],al
   140008a30:	out    dx,al
   140008a31:	pop    rdx
   140008a32:	add    BYTE PTR [rax],al
   140008a34:	add    DWORD PTR [rax],eax
   140008a36:	add    BYTE PTR [rax],al
   140008a38:	(bad)  
   140008a39:	pop    rbx
   140008a3a:	add    BYTE PTR [rax],al
   140008a3c:	rex.RXB pop r11
   140008a3e:	add    BYTE PTR [rax],al
   140008a40:	add    DWORD PTR [rdx+0x0],esp
   140008a43:	add    BYTE PTR [rax],al
   140008a45:	add    BYTE PTR [rax],al
   140008a47:	add    BYTE PTR [rcx],al
   140008a49:	(bad)  
   140008a4a:	add    al,BYTE PTR [rax]
   140008a4c:	(bad)  
   140008a4d:	xor    al,BYTE PTR [rdx]
   140008a4f:	push   rax
   140008a50:	or     DWORD PTR [rdi],edx
   140008a52:	(bad)  
   140008a53:	add    BYTE PTR [rdi],dl
   140008a55:	xor    al,0xd
   140008a57:	add    BYTE PTR [rdi],dl
   140008a59:	jb     0x140008a6e
   140008a5b:	loopne 0x140008a6e
   140008a5d:	jo     0x140008a6f
   140008a5f:	(bad)  
   140008a60:	out    dx,al
   140008a61:	pop    rdx
   140008a62:	add    BYTE PTR [rax],al
   140008a64:	add    DWORD PTR [rax],eax
   140008a66:	add    BYTE PTR [rax],al
   140008a68:	xchg   ebx,eax
   140008a69:	pop    rbx
   140008a6a:	add    BYTE PTR [rax],al
   140008a6c:	lods   al,BYTE PTR ds:[rsi]
   140008a6d:	pop    rbx
   140008a6e:	add    BYTE PTR [rax],al
   140008a70:	sub    eax,0xac000062
   140008a75:	pop    rbx
   140008a76:	add    BYTE PTR [rax],al
   140008a78:	add    DWORD PTR [rsi],eax
   140008a7a:	add    al,BYTE PTR [rax]
   140008a7c:	(bad)  
   140008a7d:	xor    al,BYTE PTR [rdx]
   140008a7f:	push   rax
   140008a80:	add    DWORD PTR [rcx+rax*1],eax
   140008a83:	add    BYTE PTR [rdx+rax*2],al
   140008a86:	add    BYTE PTR [rax],al
   140008a88:	add    DWORD PTR [rcx+rax*1],eax
   140008a8b:	add    BYTE PTR [rdx+rax*2],al
   140008a8e:	add    BYTE PTR [rax],al
   140008a90:	add    DWORD PTR [rcx+rax*1],eax
   140008a93:	add    BYTE PTR [rdx+rax*2],al
   140008a96:	add    BYTE PTR [rax],al
   140008a98:	or     DWORD PTR [rdx],ecx
   140008a9a:	add    al,0x0
   140008a9c:	or     dh,BYTE PTR [rsi+rax*1]
   140008a9f:	add    BYTE PTR [rdx],cl
   140008aa1:	xor    al,BYTE PTR [rsi]
   140008aa3:	jo     0x140008a93
   140008aa5:	pop    rdx
   140008aa6:	add    BYTE PTR [rax],al
   140008aa8:	add    DWORD PTR [rax],eax
   140008aaa:	add    BYTE PTR [rax],al
   140008aac:	lea    ebx,[rax+rax*1+0x0]
   140008ab0:	rcr    BYTE PTR [rax+rax*1+0x0],0x70
   140008ab5:	(bad)  
   140008ab6:	add    BYTE PTR [rax],al
   140008ab8:	rcr    BYTE PTR [rax+rax*1+0x0],0x1
   140008abd:	(bad)  
   140008abe:	add    al,BYTE PTR [rax]
   140008ac0:	(bad)  
   140008ac1:	xor    al,BYTE PTR [rdx]
   140008ac3:	push   rax
   140008ac4:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d8ace
   140008aca:	or     DWORD PTR [rax],eax
   140008acc:	or     eax,0x1500632
   140008ad1:	or     al,BYTE PTR [rax+rax*1]
   140008ad4:	or     dh,BYTE PTR [rsi+rax*1]
   140008ad7:	add    BYTE PTR [rdx],cl
   140008ad9:	xor    al,BYTE PTR [rsi]
   140008adb:	jo     0x140008ade
   140008add:	or     al,BYTE PTR [rax+rax*1]
   140008ae0:	or     dh,BYTE PTR [rsi+rax*1]
   140008ae3:	add    BYTE PTR [rdx],cl
   140008ae5:	xor    al,BYTE PTR [rsi]
   140008ae7:	jo     0x140008ae9
	...
   140008af1:	add    BYTE PTR [rax],al
   140008af3:	add    bl,ah
   140008af5:	(bad)  
   140008af6:	sbb    DWORD PTR [rax+0x0],0x4a000000
   140008afd:	mov    eax,DWORD PTR [rax]
   140008aff:	add    BYTE PTR [rcx],al
   140008b01:	add    BYTE PTR [rax],al
   140008b03:	add    BYTE PTR [rip+0x5000000],al        # 0x145008b09
   140008b09:	add    BYTE PTR [rax],al
   140008b0b:	add    BYTE PTR [rax],bl
   140008b0d:	mov    eax,DWORD PTR [rax]
   140008b0f:	add    BYTE PTR [rbx+rcx*4],ch
   140008b12:	add    BYTE PTR [rax],al
   140008b14:	rex mov eax,DWORD PTR [rax]
   140008b17:	add    al,dh
   140008b19:	and    al,BYTE PTR [rax]
   140008b1b:	add    BYTE PTR [rax],dh
   140008b1d:	add    BYTE PTR es:[rax],al
   140008b20:	and    BYTE PTR [rax-0x5fd80000],ah
   140008b26:	add    BYTE PTR [rax],al
   140008b28:	sbb    BYTE PTR [rax-0x74a00000],ah
   140008b2e:	add    BYTE PTR [rax],al
   140008b30:	test   DWORD PTR [rbx-0x74510000],ecx
   140008b36:	add    BYTE PTR [rax],al
   140008b38:	int3   
   140008b39:	mov    eax,DWORD PTR [rax]
   140008b3b:	add    ah,ch
   140008b3d:	mov    eax,DWORD PTR [rax]
   140008b3f:	add    BYTE PTR [rax],al
   140008b41:	add    BYTE PTR [rcx],al
   140008b43:	add    BYTE PTR [rdx],al
   140008b45:	add    BYTE PTR [rbx],al
   140008b47:	add    BYTE PTR [rax+rax*1],al
   140008b4a:	fs gs (bad) 
   140008b4d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140008b51:	(bad)  
   140008b52:	je     0x140008bb9
   140008b54:	pop    rdi
   140008b55:	ins    DWORD PTR es:[rdi],dx
   140008b56:	(bad)  
   140008b57:	je     0x140008bc5
   140008b59:	(bad)  
   140008b5a:	(bad)  
   140008b5b:	cs gs js 0x140008bc4
   140008b5f:	add    BYTE PTR [rdi],bh
   140008b61:	(bad)  
   140008b62:	xor    BYTE PTR [rdx+0x61],cl
   140008b65:	jbe    0x140008bc8
   140008b67:	rex.WR (bad) 
   140008b69:	jne    0x140008bd9
   140008b6b:	movsxd ebp,DWORD PTR [rax+0x65]
   140008b6e:	jb     0x140008bb3
   140008b70:	outs   dx,DWORD PTR ds:[rsi]
   140008b71:	outs   dx,BYTE PTR ds:[rsi]
   140008b72:	imul   sp,WORD PTR [rdi+0x40],0x5140
   140008b78:	rex.RB
   140008b79:	rex.B
   140008b7a:	rex.B
   140008b7b:	rex
   140008b7c:	rex.B
   140008b7d:	rex.RB
   140008b7e:	rex.X push rsi
   140008b80:	xor    BYTE PTR [rax+0x40],al
   140008b83:	pop    rdx
   140008b84:	add    BYTE PTR [rdi],bh
   140008b86:	(bad)  
   140008b87:	xor    al,0x4a
   140008b89:	(bad)  
   140008b8a:	jbe    0x140008bed
   140008b8c:	rex.WR (bad) 
   140008b8e:	jne    0x140008bfe
   140008b90:	movsxd ebp,DWORD PTR [rax+0x65]
   140008b93:	jb     0x140008bd8
   140008b95:	outs   dx,DWORD PTR ds:[rsi]
   140008b96:	outs   dx,BYTE PTR ds:[rsi]
   140008b97:	imul   sp,WORD PTR [rdi+0x40],0x5140
   140008b9d:	rex.RB
   140008b9e:	rex.B
   140008b9f:	rex.B
   140008ba0:	rex.B
   140008ba1:	rex.RB
   140008ba2:	push   r14
   140008ba4:	xor    BYTE PTR [rax+0x41],al
   140008ba7:	rex.RB
   140008ba8:	rex.X push rsi
   140008baa:	xor    BYTE PTR [rax+0x40],al
   140008bad:	pop    rdx
   140008bae:	add    BYTE PTR [rbp+riz*2+0x61],ah
   140008bb2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140008bb6:	(bad)  
   140008bb7:	je     0x140008c1e
   140008bb9:	pop    rdi
   140008bba:	ins    DWORD PTR es:[rdi],dx
   140008bbb:	(bad)  
   140008bbc:	je     0x140008c2a
   140008bbe:	(bad)  
   140008bbf:	(bad)  
   140008bc0:	pop    rdi
   140008bc1:	(bad)  
   140008bc2:	jne    0x140008c2d
   140008bc4:	ins    BYTE PTR es:[rdi],dx
   140008bc5:	fs pop rdi
   140008bc7:	fs (bad) 
   140008bc9:	je     0x140008c30
   140008bcb:	add    BYTE PTR [rbp+riz*2+0x61],ah
   140008bcf:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140008bd3:	(bad)  
   140008bd4:	je     0x140008c3b
   140008bd6:	pop    rdi
   140008bd7:	ins    DWORD PTR es:[rdi],dx
   140008bd8:	(bad)  
   140008bd9:	je     0x140008c47
   140008bdb:	(bad)  
   140008bdc:	(bad)  
   140008bdd:	pop    rdi
   140008bde:	jb     0x140008c45
   140008be0:	ins    BYTE PTR es:[rdi],dx
   140008be1:	(bad)  
   140008be2:	je     0x140008c4d
   140008be4:	jbe    0x140008c4b
   140008be6:	pop    rdi
   140008be7:	jo     0x140008c4a
   140008be9:	je     0x140008c53
   140008beb:	add    BYTE PTR [rbp+riz*2+0x61],ah
   140008bef:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140008bf3:	(bad)  
   140008bf4:	je     0x140008c5b
   140008bf6:	pop    rdi
   140008bf7:	ins    DWORD PTR es:[rdi],dx
   140008bf8:	(bad)  
   140008bf9:	je     0x140008c67
   140008bfb:	(bad)  
   140008bfc:	(bad)  
   140008bfd:	pop    rdi
   140008bfe:	jbe    0x140008c65
   140008c00:	jb     0x140008c75
   140008c02:	imul   ebp,DWORD PTR [rdi+0x6e],0x50000000
   140008c09:	mov    es,WORD PTR [rax]
	...
   140008c13:	add    BYTE PTR [rdx-0x71],ah
   140008c16:	add    BYTE PTR [rax],al
   140008c18:	shl    BYTE PTR [rcx+0x0],1
   140008c1b:	add    BYTE PTR [rax+0x8c],al
   140008c21:	add    BYTE PTR [rax],al
   140008c23:	add    BYTE PTR [rax],al
   140008c25:	add    BYTE PTR [rax],al
   140008c27:	add    BYTE PTR [rax+0x8f],ch
   140008c2d:	jo     0x140008c2f
   140008c2f:	add    BYTE PTR [rax],ah
   140008c31:	mov    es,WORD PTR [rax]
	...
   140008c3b:	add    BYTE PTR [rdx],cl
   140008c3d:	nop
   140008c3e:	add    BYTE PTR [rax],al
   140008c40:	movabs al,ds:0x8cc8000071
   140008c49:	add    BYTE PTR [rax],al
   140008c4b:	add    BYTE PTR [rax],al
   140008c4d:	add    BYTE PTR [rax],al
   140008c4f:	add    BYTE PTR [rax+rdx*4+0x70480000],dh
   140008c56:	add    BYTE PTR [rax],al
   140008c58:	clc    
   140008c59:	mov    WORD PTR [rax],es
	...
   140008c63:	add    BYTE PTR [rax-0x6f],ah
   140008c66:	add    BYTE PTR [rax],al
   140008c68:	js     0x140008cda
	...
   140008c7e:	add    BYTE PTR [rax],al
   140008c80:	jbe    0x140008c15
   140008c82:	add    BYTE PTR [rax],al
   140008c84:	add    BYTE PTR [rax],al
   140008c86:	add    BYTE PTR [rax],al
   140008c88:	(bad)  
   140008c89:	xchg   ebx,eax
   140008c8a:	add    BYTE PTR [rax],al
   140008c8c:	add    BYTE PTR [rax],al
   140008c8e:	add    BYTE PTR [rax],al
   140008c90:	rex.WX xchg rbx,rax
   140008c92:	add    BYTE PTR [rax],al
   140008c94:	add    BYTE PTR [rax],al
   140008c96:	add    BYTE PTR [rax],al
   140008c98:	xor    BYTE PTR [rbx+0x0],dl
   140008c9e:	add    BYTE PTR [rax],al
   140008ca0:	and    BYTE PTR [rbx+0x0],dl
   140008ca6:	add    BYTE PTR [rax],al
   140008ca8:	adc    BYTE PTR [rbx+0x0],dl
   140008cae:	add    BYTE PTR [rax],al
   140008cb0:	mov    cs,WORD PTR [rdi+0x0]
   140008cb6:	add    BYTE PTR [rax],al
   140008cb8:	je     0x140008c49
	...
   140008cc6:	add    BYTE PTR [rax],al
   140008cc8:	xchg   esp,eax
   140008cc9:	nop
   140008cca:	add    BYTE PTR [rax],al
   140008ccc:	add    BYTE PTR [rax],al
   140008cce:	add    BYTE PTR [rax],al
   140008cd0:	je     0x140008c62
   140008cd2:	add    BYTE PTR [rax],al
   140008cd4:	add    BYTE PTR [rax],al
   140008cd6:	add    BYTE PTR [rax],al
   140008cd8:	push   rdx
   140008cd9:	nop
   140008cda:	add    BYTE PTR [rax],al
   140008cdc:	add    BYTE PTR [rax],al
   140008cde:	add    BYTE PTR [rax],al
   140008ce0:	xor    BYTE PTR [rax+0x0],dl
   140008ce6:	add    BYTE PTR [rax],al
   140008ce8:	(bad)  
   140008ce9:	nop
	...
   140008cf6:	add    BYTE PTR [rax],al
   140008cf8:	jbe    0x140008c8c
   140008cfa:	add    BYTE PTR [rax],al
   140008cfc:	add    BYTE PTR [rax],al
   140008cfe:	add    BYTE PTR [rax],al
   140008d00:	mov    WORD PTR [rdx+0x0],ss
   140008d06:	add    BYTE PTR [rax],al
   140008d08:	xchg   esi,eax
   140008d09:	xchg   edx,eax
   140008d0a:	add    BYTE PTR [rax],al
   140008d0c:	add    BYTE PTR [rax],al
   140008d0e:	add    BYTE PTR [rax],al
   140008d10:	mov    dh,0x92
   140008d12:	add    BYTE PTR [rax],al
   140008d14:	add    BYTE PTR [rax],al
   140008d16:	add    BYTE PTR [rax],al
   140008d18:	in     al,dx
   140008d19:	xchg   edx,eax
   140008d1a:	add    BYTE PTR [rax],al
   140008d1c:	add    BYTE PTR [rax],al
   140008d1e:	add    BYTE PTR [rax],al
   140008d20:	movabs ds:0x8200000000000092,al
   140008d29:	xchg   edx,eax
   140008d2a:	add    BYTE PTR [rax],al
   140008d2c:	add    BYTE PTR [rax],al
   140008d2e:	add    BYTE PTR [rax],al
   140008d30:	ret    0x90
   140008d33:	add    BYTE PTR [rax],al
   140008d35:	add    BYTE PTR [rax],al
   140008d37:	add    dh,cl
   140008d39:	nop
   140008d3a:	add    BYTE PTR [rax],al
   140008d3c:	add    BYTE PTR [rax],al
   140008d3e:	add    BYTE PTR [rax],al
   140008d40:	loopne 0x140008cd2
   140008d42:	add    BYTE PTR [rax],al
   140008d44:	add    BYTE PTR [rax],al
   140008d46:	add    BYTE PTR [rax],al
   140008d48:	lock nop
   140008d4a:	add    BYTE PTR [rax],al
   140008d4c:	add    BYTE PTR [rax],al
   140008d4e:	add    BYTE PTR [rax],al
   140008d50:	cli    
   140008d51:	nop
   140008d52:	add    BYTE PTR [rax],al
   140008d54:	add    BYTE PTR [rax],al
   140008d56:	add    BYTE PTR [rax],al
   140008d58:	or     al,0x91
   140008d5a:	add    BYTE PTR [rax],al
   140008d5c:	add    BYTE PTR [rax],al
   140008d5e:	add    BYTE PTR [rax],al
   140008d60:	(bad)  
   140008d61:	xchg   ecx,eax
   140008d62:	add    BYTE PTR [rax],al
   140008d64:	add    BYTE PTR [rax],al
   140008d66:	add    BYTE PTR [rax],al
   140008d68:	sub    al,0x91
   140008d6a:	add    BYTE PTR [rax],al
   140008d6c:	add    BYTE PTR [rax],al
   140008d6e:	add    BYTE PTR [rax],al
   140008d70:	rex.X xchg ecx,eax
   140008d72:	add    BYTE PTR [rax],al
   140008d74:	add    BYTE PTR [rax],al
   140008d76:	add    BYTE PTR [rax],al
   140008d78:	rex.WR xchg rcx,rax
   140008d7a:	add    BYTE PTR [rax],al
   140008d7c:	add    BYTE PTR [rax],al
   140008d7e:	add    BYTE PTR [rax],al
   140008d80:	push   rsi
   140008d81:	xchg   ecx,eax
   140008d82:	add    BYTE PTR [rax],al
   140008d84:	add    BYTE PTR [rax],al
   140008d86:	add    BYTE PTR [rax],al
   140008d88:	outs   dx,BYTE PTR ds:[rsi]
   140008d89:	xchg   ecx,eax
   140008d8a:	add    BYTE PTR [rax],al
   140008d8c:	add    BYTE PTR [rax],al
   140008d8e:	add    BYTE PTR [rax],al
   140008d90:	jbe    0x140008d23
   140008d92:	add    BYTE PTR [rax],al
   140008d94:	add    BYTE PTR [rax],al
   140008d96:	add    BYTE PTR [rax],al
   140008d98:	adc    BYTE PTR [rcx+0x0],0x0
   140008d9f:	add    BYTE PTR [rsi+0x91],cl
   140008da5:	add    BYTE PTR [rax],al
   140008da7:	add    BYTE PTR [rcx+rdx*4+0x0],bl
   140008dae:	add    BYTE PTR [rax],al
   140008db0:	mov    ah,0x91
   140008db2:	add    BYTE PTR [rax],al
   140008db4:	add    BYTE PTR [rax],al
   140008db6:	add    BYTE PTR [rax],al
   140008db8:	mov    esi,0x91
   140008dbd:	add    BYTE PTR [rax],al
   140008dbf:	add    ah,cl
   140008dc1:	xchg   ecx,eax
   140008dc2:	add    BYTE PTR [rax],al
   140008dc4:	add    BYTE PTR [rax],al
   140008dc6:	add    BYTE PTR [rax],al
   140008dc8:	out    0x91,al
   140008dca:	add    BYTE PTR [rax],al
   140008dcc:	add    BYTE PTR [rax],al
   140008dce:	add    BYTE PTR [rax],al
   140008dd0:	hlt    
   140008dd1:	xchg   ecx,eax
   140008dd2:	add    BYTE PTR [rax],al
   140008dd4:	add    BYTE PTR [rax],al
   140008dd6:	add    BYTE PTR [rax],al
   140008dd8:	add    al,0x92
   140008dda:	add    BYTE PTR [rax],al
   140008ddc:	add    BYTE PTR [rax],al
   140008dde:	add    BYTE PTR [rax],al
   140008de0:	(bad)  
   140008de1:	xchg   edx,eax
   140008de2:	add    BYTE PTR [rax],al
   140008de4:	add    BYTE PTR [rax],al
   140008de6:	add    BYTE PTR [rax],al
   140008de8:	(bad)  
   140008de9:	xchg   edx,eax
   140008dea:	add    BYTE PTR [rax],al
   140008dec:	add    BYTE PTR [rax],al
   140008dee:	add    BYTE PTR [rax],al
   140008df0:	es xchg edx,eax
   140008df2:	add    BYTE PTR [rax],al
   140008df4:	add    BYTE PTR [rax],al
   140008df6:	add    BYTE PTR [rax],al
   140008df8:	xor    BYTE PTR [rdx+0x0],dl
   140008dfe:	add    BYTE PTR [rax],al
   140008e00:	ds xchg edx,eax
   140008e02:	add    BYTE PTR [rax],al
   140008e04:	add    BYTE PTR [rax],al
   140008e06:	add    BYTE PTR [rax],al
   140008e08:	push   rsp
   140008e09:	xchg   edx,eax
   140008e0a:	add    BYTE PTR [rax],al
   140008e0c:	add    BYTE PTR [rax],al
   140008e0e:	add    BYTE PTR [rax],al
   140008e10:	push   0x92
	...
   140008e1d:	add    BYTE PTR [rax],al
   140008e1f:	add    ah,bh
   140008e21:	pop    QWORD PTR [rax]
   140008e23:	add    BYTE PTR [rax],al
   140008e25:	add    BYTE PTR [rax],al
   140008e27:	add    dh,ch
   140008e29:	pop    QWORD PTR [rax]
   140008e2b:	add    BYTE PTR [rax],al
   140008e2d:	add    BYTE PTR [rax],al
   140008e2f:	add    ah,bl
   140008e31:	pop    QWORD PTR [rax]
   140008e33:	add    BYTE PTR [rax],al
   140008e35:	add    BYTE PTR [rax],al
   140008e37:	add    al,cl
   140008e39:	pop    QWORD PTR [rax]
   140008e3b:	add    BYTE PTR [rax],al
   140008e3d:	add    BYTE PTR [rax],al
   140008e3f:	add    BYTE PTR [rsi+0x8f],dh
	...
   140008e4d:	add    BYTE PTR [rax],al
   140008e4f:	add    BYTE PTR [rdi+rcx*4+0x0],cl
   140008e53:	add    BYTE PTR [rax],al
   140008e55:	add    BYTE PTR [rax],al
   140008e57:	add    BYTE PTR [rdi+rcx*4],bl
   140008e5a:	add    BYTE PTR [rax],al
   140008e5c:	add    BYTE PTR [rax],al
   140008e5e:	add    BYTE PTR [rax],al
   140008e60:	dec    BYTE PTR [rsi+0x0]
   140008e66:	add    BYTE PTR [rax],al
   140008e68:	in     al,0x8e
   140008e6a:	add    BYTE PTR [rax],al
   140008e6c:	add    BYTE PTR [rax],al
   140008e6e:	add    BYTE PTR [rax],al
   140008e70:	retf   0x8e
   140008e73:	add    BYTE PTR [rax],al
   140008e75:	add    BYTE PTR [rax],al
   140008e77:	add    BYTE PTR [rdx+0x8e],ch
   140008e7d:	add    BYTE PTR [rax],al
   140008e7f:	add    BYTE PTR [rax+0x8e],dl
	...
   140008e8d:	add    BYTE PTR [rax],al
   140008e8f:	add    BYTE PTR [rbx],cl
   140008e91:	add    BYTE PTR [rdi],bh
   140008e93:	addr32 gs je 0x140008eda
   140008e97:	ins    DWORD PTR es:[rdi],dx
   140008e98:	imul   r13,QWORD PTR fs:[rsi+0x65],0x73677241
   140008ea1:	rex
   140008ea2:	rex pop rcx
   140008ea4:	pop    r8
   140008ea6:	pop    rax
   140008ea7:	pop    rdx
   140008ea8:	add    BYTE PTR [rax],al
   140008eaa:	(bad)  
   140008eab:	add    BYTE PTR [rdi],bh
   140008ead:	(bad)  
   140008eae:	fs fs push rsp
   140008eb1:	outs   dx,DWORD PTR ds:[rsi]
   140008eb2:	rex.XB ins DWORD PTR es:[rdi],dx
   140008eb4:	imul   r13,QWORD PTR fs:[rsi+0x65],0x73677241
   140008ebd:	rex
   140008ebe:	rex pop rcx
   140008ec0:	pop    r8
   140008ec2:	push   rax
   140008ec3:	rex.RB
   140008ec4:	rex.X pop rdi
   140008ec6:	push   rdi
   140008ec7:	rex pop rdx
   140008ec9:	add    BYTE PTR [rcx],bl
   140008ecb:	add    BYTE PTR [rdi],bh
   140008ecd:	jb     0x140008f44
   140008ecf:	outs   dx,BYTE PTR ds:[rsi]
   140008ed0:	rex.WX (bad) 
   140008ed2:	jbe    0x140008f35
   140008ed4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140008ed6:	fs gs rex
   140008ed9:	rex pop rcx
   140008edb:	rex.B
   140008edc:	rex.W push rax
   140008ede:	rex.RB
   140008edf:	rex.X
   140008ee0:	rex.R
   140008ee1:	rex pop rdx
   140008ee3:	add    BYTE PTR [rip+0x65673f00],dl        # 0x1a567cde9
   140008ee9:	je     0x140008f3e
   140008eeb:	gs je  0x140008f63
   140008eee:	jo     0x140008f34
   140008ef0:	imul   esi,DWORD PTR [rdx+0x40],0x50415940
   140008ef7:	rex.RB
   140008ef8:	rex.X pop rdi
   140008efa:	push   rdi
   140008efb:	pop    rax
   140008efc:	pop    rdx
   140008efd:	add    BYTE PTR [rdi],bl
   140008eff:	add    BYTE PTR [rdi],bh
   140008f01:	jae    0x140008f68
   140008f03:	je     0x140008f51
   140008f05:	outs   dx,DWORD PTR ds:[rsi]
   140008f06:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008f09:	push   rdx
   140008f0a:	jne    0x140008f7a
   140008f0c:	imul   r14d,DWORD PTR [rdx+0x40],0x58415940
   140008f14:	push   rax
   140008f15:	rex.RB
   140008f16:	rex.X pop rdi
   140008f18:	push   rdi
   140008f19:	rex pop rdx
   140008f1b:	add    BYTE PTR [rip+0x65733f00],bl        # 0x1a573ce21
   140008f21:	je     0x140008f6d
   140008f23:	(bad)  
   140008f24:	jbe    0x140008f87
   140008f26:	push   rdx
   140008f27:	gs ins BYTE PTR es:[rdi],dx
   140008f29:	(bad)  
   140008f2a:	je     0x140008f95
   140008f2c:	jbe    0x140008f93
   140008f2e:	push   rsp
   140008f2f:	outs   dx,DWORD PTR ds:[rsi]
   140008f30:	push   rax
   140008f31:	(bad)  
   140008f32:	jb     0x140008f99
   140008f34:	outs   dx,BYTE PTR ds:[rsi]
   140008f35:	je     0x140008f80
   140008f37:	data16 rex.WRX outs dx,DWORD PTR ds:[rsi]
   140008f3a:	je     0x140008f8f
   140008f3c:	gs je  0x140008f7f
   140008f3f:	rex pop rcx
   140008f41:	pop    r8
   140008f43:	push   rax
   140008f44:	rex.RB
   140008f45:	rex.X pop rdi
   140008f47:	push   rdi
   140008f48:	rex pop rdx
   140008f4a:	add    BYTE PTR [rax],al
   140008f4c:	or     DWORD PTR [rax],eax
   140008f4e:	(bad)  
   140008f4f:	addr32 gs je 0x140008f94
   140008f53:	jb     0x140008fb8
   140008f55:	push   0x41594040
   140008f5a:	push   rax
   140008f5b:	rex.RB
   140008f5c:	pop    r15
   140008f5e:	push   rdi
   140008f5f:	pop    rax
   140008f60:	pop    rdx
   140008f61:	add    BYTE PTR [rdx+0x61],ch
   140008f64:	jbe    0x140008fc7
   140008f66:	pop    rdi
   140008f67:	ins    BYTE PTR es:[rdi],dx
   140008f68:	(bad)  
   140008f69:	jne    0x140008fd9
   140008f6b:	movsxd ebp,DWORD PTR [rax+0x65]
   140008f6e:	jb     0x140008f9e
   140008f70:	fs ins BYTE PTR es:[rdi],dx
   140008f72:	ins    BYTE PTR es:[rdi],dx
   140008f73:	add    BYTE PTR [rax],dh
   140008f75:	add    al,BYTE PTR [rdi+0x65]
   140008f78:	je     0x140008fbf
   140008f7a:	outs   dx,BYTE PTR ds:[rsi]
   140008f7b:	jbe    0x140008fe6
   140008f7d:	jb     0x140008fee
   140008f7f:	outs   dx,BYTE PTR ds:[rsi]
   140008f80:	ins    DWORD PTR es:[rdi],dx
   140008f81:	outs   dx,BYTE PTR gs:[rsi]
   140008f83:	je     0x140008fdb
   140008f85:	(bad)  
   140008f86:	jb     0x140008ff1
   140008f88:	(bad)  
   140008f89:	(bad)  
   140008f8a:	ins    BYTE PTR es:[rdi],dx
   140008f8b:	gs push rdi
   140008f8d:	add    ch,bh
   140008f8f:	add    al,0x53
   140008f91:	gs je  0x140008fd9
   140008f94:	outs   dx,BYTE PTR ds:[rsi]
   140008f95:	jbe    0x140009000
   140008f97:	jb     0x140009008
   140008f99:	outs   dx,BYTE PTR ds:[rsi]
   140008f9a:	ins    DWORD PTR es:[rdi],dx
   140008f9b:	outs   dx,BYTE PTR gs:[rsi]
   140008f9d:	je     0x140008ff5
   140008f9f:	(bad)  
   140008fa0:	jb     0x14000900b
   140008fa2:	(bad)  
   140008fa3:	(bad)  
   140008fa4:	ins    BYTE PTR es:[rdi],dx
   140008fa5:	gs push rdi
   140008fa7:	add    BYTE PTR [rbx+0x45],cl
   140008faa:	push   rdx
   140008fab:	rex.WRX
   140008fac:	rex.RB
   140008fad:	xor    r14,QWORD PTR [rdx]
   140008fb0:	cs fs ins BYTE PTR es:[rdi],dx
   140008fb3:	ins    BYTE PTR es:[rdi],dx
   140008fb4:	add    BYTE PTR [rax],al
   140008fb6:	movabs eax,ds:0x646e695766654400
   140008fbf:	outs   dx,DWORD PTR ds:[rsi]
   140008fc0:	ja     0x140009012
   140008fc2:	jb     0x140009033
   140008fc4:	movsxd edx,DWORD PTR [rdi+0x0]
   140008fc7:	add    BYTE PTR [rbp+0x67655202],cl
   140008fcd:	imul   esi,DWORD PTR [rbx+0x74],0x6c437265
   140008fd4:	(bad)  
   140008fd5:	jae    0x14000904a
   140008fd7:	rex.RB js 0x140009031
   140008fda:	add    BYTE PTR [rax],al
   140008fdc:	jno    0x140008fde
   140008fde:	rex.XB jb 0x140009046
   140008fe1:	(bad)  
   140008fe2:	je     0x140009049
   140008fe4:	push   rdi
   140008fe5:	imul   ebp,DWORD PTR [rsi+0x64],0x7845776f
   140008fec:	push   rdi
   140008fed:	add    BYTE PTR [rcx+0x2],dl
   140008ff0:	rex.WRB
   140008ff1:	gs jae 0x140009067
   140008ff4:	(bad)  
   140008ff5:	rex.X outs dx,DWORD PTR gs:[esi]
   140008ff9:	js     0x140009052
   140008ffb:	add    BYTE PTR [rcx],cl
   140008ffd:	add    DWORD PTR [rsi+0x69],eax
   140009000:	outs   dx,BYTE PTR ds:[rsi]
   140009001:	fs push rdi
   140009003:	imul   ebp,DWORD PTR [rsi+0x64],0x57776f
   14000900a:	push   rbp
   14000900b:	push   rbx
   14000900c:	rex.RB push r10
   14000900e:	xor    esi,DWORD PTR [rdx]
   140009010:	cs fs ins BYTE PTR es:[rdi],dx
   140009013:	ins    BYTE PTR es:[rdi],dx
   140009014:	add    BYTE PTR [rax],al
   140009016:	leave  
   140009017:	add    bh,BYTE PTR [rdi]
   140009019:	pop    rdi
   14000901a:	pop    rax
   14000901b:	(bad)
   140009020:	ins    BYTE PTR es:[rdi],dx
   140009021:	ins    BYTE PTR es:[rdi],dx
   140009022:	outs   dx,DWORD PTR ds:[rsi]
   140009023:	movsxd eax,DWORD PTR [rax+0x73]
   140009026:	je     0x14000908c
   140009028:	rex
   140009029:	rex pop rcx
   14000902b:	pop    r8
   14000902d:	pop    rax
   14000902e:	pop    rdx
   14000902f:	add    ah,cl
   140009031:	add    bh,BYTE PTR [rdi]
   140009033:	pop    rdi
   140009034:	pop    rax
   140009035:	ins    BYTE PTR es:[rdi],dx
   140009036:	outs   dx,BYTE PTR gs:[rsi]
   140009038:	addr32 je 0x1400090a3
   14000903b:	pop    rdi
   14000903c:	gs jb  0x1400090b1
   14000903f:	outs   dx,DWORD PTR ds:[rsi]
   140009040:	jb     0x140009082
   140009042:	jae    0x1400090b8
   140009044:	fs rex
   140009046:	rex pop rcx
   140009048:	pop    r8
   14000904a:	push   rax
   14000904b:	rex.RB
   14000904c:	rex.X
   14000904d:	rex.R
   14000904e:	rex pop rdx
   140009050:	add    BYTE PTR [rax],al
   140009052:	int    0x2
   140009054:	(bad)  
   140009055:	pop    rdi
   140009056:	pop    rax
   140009057:	outs   dx,DWORD PTR ds:[rsi]
   140009058:	jne    0x1400090ce
   14000905a:	pop    rdi
   14000905b:	outs   dx,DWORD PTR ds:[rsi]
   14000905c:	pop    di
   14000905e:	jb     0x1400090c1
   140009060:	outs   dx,BYTE PTR ds:[rsi]
   140009061:	addr32 gs rex jae 0x1400090da
   140009066:	fs rex
   140009068:	rex pop rcx
   14000906a:	pop    r8
   14000906c:	push   rax
   14000906d:	rex.RB
   14000906e:	rex.X
   14000906f:	rex.R
   140009070:	rex pop rdx
   140009072:	add    BYTE PTR [rax],al
   140009074:	mov    al,0x2
   140009076:	(bad)  
   140009077:	pop    rdi
   140009078:	push   rbx
   140009079:	jns    0x1400090ee
   14000907b:	gs jb  0x1400090f0
   14000907e:	outs   dx,DWORD PTR ds:[rsi]
   14000907f:	jb     0x1400090e0
   140009081:	ins    DWORD PTR es:[rdi],dx
   140009082:	(bad)  
   140009083:	jo     0x1400090c5
   140009085:	jae    0x1400090fb
   140009087:	fs rex
   140009089:	rex pop rcx
   14000908b:	push   r8
   14000908d:	rex.RB
   14000908e:	rex.X
   14000908f:	rex.R
   140009090:	rex.W
   140009091:	rex pop rdx
   140009093:	add    ch,al
   140009095:	add    bh,BYTE PTR [rdi]
   140009097:	pop    rdi
   140009098:	push   rdi
   140009099:	imul   ebp,DWORD PTR [rsi+0x65],0x726f7272
   1400090a0:	pop    rdi
   1400090a1:	ins    DWORD PTR es:[rdi],dx
   1400090a2:	(bad)  
   1400090a3:	jo     0x1400090e5
   1400090a5:	jae    0x14000911b
   1400090a7:	fs rex
   1400090a9:	rex pop rcx
   1400090ab:	push   r8
   1400090ad:	rex.RB
   1400090ae:	rex.X
   1400090af:	rex.R
   1400090b0:	rex.W
   1400090b1:	rex pop rdx
   1400090b3:	add    BYTE PTR [rbp+0x53],cl
   1400090b6:	push   rsi
   1400090b7:	rex.XB push r8
   1400090b9:	xor    DWORD PTR [rdx],esi
   1400090bb:	xor    BYTE PTR [rsi],ch
   1400090bd:	fs ins BYTE PTR es:[rdi],dx
   1400090bf:	ins    BYTE PTR es:[rdi],dx
   1400090c0:	add    BYTE PTR [rax],al
   1400090c2:	(bad)  
   1400090c3:	add    al,0x5f
   1400090c5:	jo     0x14000913c
   1400090c7:	jb     0x14000912e
   1400090c9:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400090cc:	ins    BYTE PTR es:[rdi],dx
   1400090cd:	add    BYTE PTR [rax+0x0],dh
   1400090d0:	(bad)  
   1400090d1:	(bad)  
   1400090d2:	xor    al,BYTE PTR [rax+0x59]
   1400090d5:	push   r8
   1400090d7:	rex.RB
   1400090d8:	pop    r8
   1400090da:	pop    rdi
   1400090db:	rex.WXB
   1400090dc:	rex pop rdx
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	jb     0x1400090e2
   1400090e2:	(bad)  
   1400090e3:	(bad)  
   1400090e4:	xor    eax,DWORD PTR [rax+0x59]
   1400090e7:	pop    r8
   1400090e9:	push   rax
   1400090ea:	rex.RB
   1400090eb:	pop    r8
   1400090ed:	rex pop rdx
   1400090ef:	add    BYTE PTR [rdi+0x6d656d06],dh
   1400090f5:	ins    DWORD PTR es:[rdi],dx
   1400090f6:	outs   dx,DWORD PTR ds:[rsi]
   1400090f7:	jbe    0x14000915e
   1400090f9:	add    ah,bh
   1400090fb:	add    al,0x5f
   1400090fd:	jbe    0x140009172
   1400090ff:	ja     0x140009171
   140009101:	jb     0x14000916c
   140009103:	outs   dx,BYTE PTR ds:[rsi]
   140009104:	je     0x14000916c
   140009106:	pop    rdi
   140009107:	movsxd ebx,DWORD PTR [rdi+0x6c]
   14000910a:	add    BYTE PTR [rax],al
   14000910c:	fiadd  DWORD PTR [rdx]
   14000910e:	pop    rdi
   14000910f:	push   0x746f7079
   140009114:	add    BYTE PTR [rax],al
   140009116:	add    DWORD PTR [r15+0x43],r11d
   14000911a:	js     0x140009194
   14000911c:	push   rsp
   14000911d:	push   0x45776f72
   140009122:	js     0x140009187
   140009124:	gs jo  0x14000919b
   140009127:	imul   ebp,DWORD PTR [rdi+0x6e],0x1620000
   14000912e:	pop    rdi
   14000912f:	pop    rdi
   140009130:	rex.XB js 0x1400091ab
   140009133:	rex.RX jb 0x140009197
   140009136:	ins    DWORD PTR es:[rdi],dx
   140009137:	gs rex.W (bad) 
   14000913a:	outs   dx,BYTE PTR ds:[rsi]
   14000913b:	fs ins BYTE PTR es:[rdi],dx
   14000913d:	gs jb  0x140009173
   140009140:	add    BYTE PTR [rax],al
   140009142:	mov    ah,0x6
   140009144:	ins    DWORD PTR es:[rdi],dx
   140009145:	gs ins DWORD PTR es:[rdi],dx
   140009147:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000914a:	add    BYTE PTR [rax],al
   14000914c:	mov    ch,0x6
   14000914e:	ins    DWORD PTR es:[rdi],dx
   14000914f:	gs ins DWORD PTR es:[rdi],dx
   140009151:	movsxd esi,DWORD PTR [rax+0x79]
   140009154:	add    BYTE PTR [rax],al
   140009156:	mov    ecx,0x6d656d06
   14000915b:	jae    0x1400091c2
   14000915d:	je     0x14000915f
   14000915f:	add    BYTE PTR [rbp+0x53],cl
   140009162:	push   rsi
   140009163:	rex.XB push r10
   140009165:	xor    DWORD PTR [rdx],esi
   140009167:	xor    BYTE PTR [rsi],ch
   140009169:	fs ins BYTE PTR es:[rdi],dx
   14000916b:	ins    BYTE PTR es:[rdi],dx
   14000916c:	add    BYTE PTR [rax],al
   14000916e:	pop    rbx
   14000916f:	add    ebx,DWORD PTR [rdi+0x6c]
   140009172:	outs   dx,DWORD PTR ds:[rsi]
   140009173:	movsxd ebp,DWORD PTR [rbx+0x0]
   140009176:	mov    DWORD PTR [rdi+rbx*2],0x6f6c6e75
   14000917d:	movsxd ebp,DWORD PTR [rbx+0x0]
   140009180:	or     DWORD PTR [rdx],eax
   140009182:	pop    rdi
   140009183:	movsxd esp,DWORD PTR [rcx+0x6c]
   140009186:	ins    BYTE PTR es:[rdi],dx
   140009187:	outs   dx,DWORD PTR ds:[rsi]
   140009188:	movsxd ebx,DWORD PTR [rdi+0x63]
   14000918b:	jb     0x140009201
   14000918d:	add    BYTE PTR [rdi+0x645f5f01],bl
   140009193:	ins    BYTE PTR es:[rdi],dx
   140009194:	ins    BYTE PTR es:[rdi],dx
   140009195:	outs   dx,DWORD PTR ds:[rsi]
   140009196:	outs   dx,BYTE PTR ds:[rsi]
   140009197:	gs js  0x140009203
   14000919a:	je     0x14000919c
   14000919c:	pop    rsp
   14000919d:	add    DWORD PTR [rdi+0x5f],ebx
   1400091a0:	rex.XB pop r15
   1400091a2:	jae    0x140009214
   1400091a4:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   1400091a8:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   1400091af:	ins    BYTE PTR es:[rdi],dx
   1400091b0:	gs jb  0x1400091b3
   1400091b3:	add    BYTE PTR [rdx],al
   1400091b5:	add    al,0x5f
   1400091b7:	outs   dx,DWORD PTR ds:[rsi]
   1400091b8:	outs   dx,BYTE PTR ds:[rsi]
   1400091b9:	gs js  0x140009225
   1400091bc:	je     0x1400091be
   1400091be:	pop    rax
   1400091bf:	add    DWORD PTR [rdi+0x58],ebx
   1400091c2:	movsxd esi,DWORD PTR [rax+0x74]
   1400091c5:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x18d0072
   1400091ce:	pop    rdi
   1400091cf:	pop    rdi
   1400091d0:	movsxd esi,DWORD PTR [rdx+0x74]
   1400091d3:	rex.RXB
   1400091d4:	gs je  0x14000922a
   1400091d7:	push   0x6957776f
   1400091dc:	outs   dx,BYTE PTR ds:[rsi]
   1400091dd:	outs   dx,DWORD PTR fs:[rsi]
   1400091df:	ja     0x14000922e
   1400091e1:	outs   dx,DWORD PTR ds:[rsi]
   1400091e2:	fs add BYTE PTR gs:[rax],al
   1400091e6:	repnz add DWORD PTR [rdi+0x61],ebx
   1400091ea:	ins    DWORD PTR es:[rdi],dx
   1400091eb:	jae    0x140009254
   1400091ed:	pop    rdi
   1400091ee:	gs js  0x14000925a
   1400091f1:	je     0x1400091f3
   1400091f3:	add    BYTE PTR [rdi+0x675f5f01],ah
   1400091f9:	gs je  0x140009269
   1400091fc:	(bad)  
   1400091fd:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140009204:	(bad)  
   140009205:	add    DWORD PTR [rdi+0x5f],ebx
   140009208:	jae    0x14000926f
   14000920a:	je     0x14000926b
   14000920c:	(bad)  
   14000920d:	jo     0x14000927f
   14000920f:	pop    rdi
   140009210:	je     0x14000928b
   140009212:	jo     0x140009279
   140009214:	add    BYTE PTR [rax],al
   140009216:	sbb    BYTE PTR [rsi],al
   140009218:	gs js  0x140009284
   14000921b:	je     0x14000921d
   14000921d:	add    BYTE PTR [rax+0x2],bl
   140009220:	pop    rdi
   140009221:	gs js  0x14000928d
   140009224:	je     0x140009226
   140009226:	or     al,BYTE PTR [rdx]
   140009228:	pop    rdi
   140009229:	movsxd esp,DWORD PTR [rbp+0x78]
   14000922c:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0303
   140009234:	jae    0x1400092a3
   140009236:	(bad)
   14000923b:	add    BYTE PTR fs:[rax],al
   14000923e:	sbb    al,BYTE PTR [rdx]
   140009240:	pop    rdi
   140009241:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140009244:	imul   sp,WORD PTR [rdi+0x74],0x7268
   14000924a:	gs (bad) 
   14000924c:	fs ins BYTE PTR es:[rdi],dx
   14000924e:	outs   dx,DWORD PTR ds:[rsi]
   14000924f:	movsxd esp,DWORD PTR [rcx+0x6c]
   140009252:	gs add al,dl
   140009255:	add    DWORD PTR [rdi+0x5f],ebx
   140009258:	jae    0x1400092bf
   14000925a:	je     0x1400092d1
   14000925c:	jae    0x1400092c3
   14000925e:	jb     0x1400092cd
   140009260:	(bad)  
   140009261:	je     0x1400092cb
   140009263:	gs jb  0x1400092d8
   140009266:	add    BYTE PTR [rax],al
   140009268:	loop   0x14000926c
   14000926a:	pop    rdi
   14000926b:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140009272:	ins    DWORD PTR es:[rdi],dx
   140009273:	pop    rdi
   140009274:	gs add cl,ah
   140009277:	add    bl,BYTE PTR [rdi+0x69]
   14000927a:	outs   dx,BYTE PTR ds:[rsi]
   14000927b:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0xe9006d72
   140009283:	add    DWORD PTR [rdi+0x61],ebx
   140009286:	movsxd ebp,DWORD PTR [rbp+0x64]
   140009289:	ins    BYTE PTR es:[rdi],dx
   14000928a:	outs   dx,BYTE PTR ds:[rsi]
   14000928b:	add    BYTE PTR [rax+0x2],bh
   14000928e:	pop    rdi
   14000928f:	ins    WORD PTR es:[rdi],dx
   140009291:	outs   dx,DWORD PTR ds:[rsi]
   140009292:	fs add BYTE PTR gs:[rax],al
   140009296:	sbb    DWORD PTR [rdx],eax
   140009298:	pop    rdi
   140009299:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000929c:	ins    DWORD PTR es:[rdi],dx
   14000929d:	outs   dx,DWORD PTR ds:[rsi]
   14000929e:	fs add BYTE PTR gs:[rax],al
   1400092a2:	xor    eax,DWORD PTR [rcx]
   1400092a4:	(bad)  
   1400092a5:	je     0x14000930c
   1400092a7:	jb     0x140009316
   1400092a9:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   1400092b0:	pop    rcx
   1400092b1:	pop    r8
   1400092b3:	pop    rax
   1400092b4:	pop    rdx
   1400092b5:	add    BYTE PTR [rbx],bl
   1400092b7:	add    DWORD PTR [rdi],edi
   1400092b9:	pop    rdi
   1400092ba:	je     0x140009335
   1400092bc:	jo     0x140009323
   1400092be:	pop    rdi
   1400092bf:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   1400092c6:	outs   dx,DWORD PTR ds:[rsi]
   1400092c7:	jb     0x140009328
   1400092c9:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   1400092d0:	ins    BYTE PTR es:[rdi],dx
   1400092d1:	pop    rdi
   1400092d2:	ins    DWORD PTR es:[rdi],dx
   1400092d3:	gs je  0x14000933e
   1400092d6:	outs   dx,DWORD PTR ds:[rsi]
   1400092d7:	fs rex je 0x140009354
   1400092db:	jo     0x140009342
   1400092dd:	pop    rdi
   1400092de:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   1400092e5:	rex.RB
   1400092e6:	rex.B
   1400092e7:	pop    r8
   1400092e9:	pop    rax
   1400092ea:	pop    rdx
   1400092eb:	add    BYTE PTR [rcx+0x635f5f01],bl
   1400092f1:	jb     0x140009367
   1400092f3:	push   rbx
   1400092f4:	gs je  0x14000934c
   1400092f7:	outs   dx,BYTE PTR ds:[rsi]
   1400092f8:	push   0x6c646e61
   1400092fd:	gs fs rex.RB js 0x140009365
   140009302:	gs jo  0x140009379
   140009305:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000930c:	gs jb  0x14000930f
   14000930f:	add    BYTE PTR [rip+0x636e4501],ah        # 0x1a36ed816
   140009315:	outs   dx,DWORD PTR ds:[rsi]
   140009316:	fs gs push rax
   140009319:	outs   dx,DWORD PTR ds:[rsi]
   14000931a:	imul   ebp,DWORD PTR [rsi+0x74],0xff007265
   140009321:	add    BYTE PTR [rbp+riz*2+0x63],al
   140009325:	outs   dx,DWORD PTR ds:[rsi]
   140009326:	fs gs push rax
   140009329:	outs   dx,DWORD PTR ds:[rsi]
   14000932a:	imul   ebp,DWORD PTR [rsi+0x74],0x30007265
   140009331:	add    al,0x51
   140009333:	jne    0x14000939a
   140009335:	jb     0x1400093b0
   140009337:	push   rax
   140009338:	gs jb  0x1400093a1
   14000933b:	outs   dx,DWORD PTR ds:[rsi]
   14000933c:	jb     0x1400093ab
   14000933e:	(bad)  
   14000933f:	outs   dx,BYTE PTR ds:[rsi]
   140009340:	movsxd esp,DWORD PTR [rbp+0x43]
   140009343:	outs   dx,DWORD PTR ds:[rsi]
   140009344:	jne    0x1400093b4
   140009346:	je     0x1400093ad
   140009348:	jb     0x14000934a
   14000934a:	adc    BYTE PTR [rdx],al
   14000934c:	rex.RXB
   14000934d:	gs je  0x140009393
   140009350:	jne    0x1400093c4
   140009352:	jb     0x1400093b9
   140009354:	outs   dx,BYTE PTR ds:[rsi]
   140009355:	je     0x1400093a7
   140009357:	jb     0x1400093c8
   140009359:	movsxd esp,DWORD PTR [rbp+0x73]
   14000935c:	jae    0x1400093a7
   14000935e:	add    BYTE PTR fs:[rdx+rax*1],dl
   140009362:	rex.RXB
   140009363:	gs je  0x1400093a9
   140009366:	jne    0x1400093da
   140009368:	jb     0x1400093cf
   14000936a:	outs   dx,BYTE PTR ds:[rsi]
   14000936b:	je     0x1400093c1
   14000936d:	push   0x64616572
   140009372:	rex.WB
   140009373:	add    BYTE PTR fs:[rax],al
   140009376:	fld    QWORD PTR [rdx]
   140009378:	rex.RXB
   140009379:	gs je  0x1400093cf
   14000937c:	jns    0x1400093f1
   14000937e:	je     0x1400093e5
   140009380:	ins    DWORD PTR es:[rdi],dx
   140009381:	push   rsp
   140009382:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140009389:	ins    BYTE PTR es:[rdi],dx
   14000938a:	gs push rsp
   14000938c:	.byte 0x69
   14000938d:	ins    DWORD PTR es:[rdi],dx
   14000938e:	gs
	...

Disassembly of section .data:

000000014000a000 <.data>:
   14000a000:	nop
   14000a001:	jne    0x14000a003
   14000a003:	rex add DWORD PTR [rax],eax
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	loopne 0x14000a07f
   14000a00a:	add    BYTE PTR [rax+0x1],al
   14000a00d:	add    BYTE PTR [rax],al
   14000a00f:	add    BYTE PTR [rax+0x76],al
   14000a012:	add    BYTE PTR [rax+0x1],al
   14000a015:	add    BYTE PTR [rax],al
   14000a017:	add    BYTE PTR [rax],cl
   14000a019:	js     0x14000a01b
   14000a01b:	rex add DWORD PTR [rax],eax
   14000a01e:	add    BYTE PTR [rax],al
   14000a020:	sbb    BYTE PTR [rax+0x0],bh
   14000a023:	rex add DWORD PTR [rax],eax
   14000a026:	add    BYTE PTR [rax],al
   14000a028:	sub    BYTE PTR [rax+0x0],bh
   14000a02b:	rex add DWORD PTR [rax],eax
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	jne    0x140009fca
   14000a032:	add    BYTE PTR [rax],al
   14000a034:	add    DWORD PTR [rax],eax
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	(bad)  
   14000a039:	(bad)  
   14000a03a:	(bad)  
   14000a03b:	(bad)  
   14000a03c:	(bad)  
   14000a03d:	(bad)  
   14000a03e:	(bad)  
   14000a03f:	push   QWORD PTR [rdx]
   14000a041:	movabs ds:0x5dcd00002b992ddf,al
   14000a04a:	and    dl,dl
   14000a04c:	data16 (bad) 
   14000a04e:	(bad)  
   14000a04f:	push   QWORD PTR [rax+0x78]
   14000a052:	add    BYTE PTR [rax+0x1],al
	...
   14000a05d:	add    BYTE PTR [rax],al
   14000a05f:	add    BYTE PTR [rsi],ch
   14000a061:	(bad)  
   14000a062:	push   r14
   14000a064:	gs jb  0x14000a0d9
   14000a067:	outs   dx,DWORD PTR ds:[rsi]
   14000a068:	jb     0x14000a0c9
   14000a06a:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a06d:	outs   dx,DWORD PTR gs:[esi]
   14000a070:	jb     0x14000a0eb
   14000a072:	rex jae 0x14000a0e9
   14000a075:	fs rex
   14000a077:	add    BYTE PTR [rax],al
   14000a07a:	add    BYTE PTR [rax],al
   14000a07c:	add    BYTE PTR [rax],al
   14000a07e:	add    BYTE PTR [rax],al
   14000a080:	jo     0x14000a0fa
   14000a082:	add    BYTE PTR [rax+0x1],al
	...
   14000a08d:	add    BYTE PTR [rax],al
   14000a08f:	add    BYTE PTR [rsi],ch
   14000a091:	(bad)  
   14000a092:	push   r14
   14000a094:	pop    rdi
   14000a095:	rex.RXB
   14000a096:	outs   dx,BYTE PTR gs:[rsi]
   14000a098:	gs jb  0x14000a104
   14000a09b:	movsxd ebx,DWORD PTR [rdi+0x65]
   14000a09e:	jb     0x14000a112
   14000a0a0:	outs   dx,DWORD PTR ds:[rsi]
   14000a0a1:	jb     0x14000a102
   14000a0a3:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a0a6:	outs   dx,DWORD PTR gs:[esi]
   14000a0a9:	jb     0x14000a124
   14000a0ab:	rex jae 0x14000a122
   14000a0ae:	fs rex
   14000a0b0:	add    BYTE PTR [rax],al
   14000a0b3:	add    BYTE PTR [rax],al
   14000a0b5:	add    BYTE PTR [rax],al
   14000a0b7:	add    BYTE PTR [rax+0x78],dh
   14000a0ba:	add    BYTE PTR [rax+0x1],al
	...
   14000a0c5:	add    BYTE PTR [rax],al
   14000a0c7:	add    BYTE PTR [rsi],ch
   14000a0c9:	(bad)  
   14000a0ca:	push   r14
   14000a0cc:	pop    rdi
   14000a0cd:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000a0cf:	jae    0x14000a145
   14000a0d1:	jb     0x14000a138
   14000a0d3:	(bad)  
   14000a0d4:	ins    DWORD PTR es:[rdi],dx
   14000a0d5:	pop    rdi
   14000a0d6:	gs jb  0x14000a14b
   14000a0d9:	outs   dx,DWORD PTR ds:[rsi]
   14000a0da:	jb     0x14000a13b
   14000a0dc:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a0df:	outs   dx,DWORD PTR gs:[esi]
   14000a0e2:	jb     0x14000a15d
   14000a0e4:	rex jae 0x14000a15b
   14000a0e7:	fs rex
   14000a0e9:	add    BYTE PTR [rax],al
   14000a0ec:	add    BYTE PTR [rax],al
   14000a0ee:	add    BYTE PTR [rax],al
   14000a0f0:	jo     0x14000a16a
   14000a0f2:	add    BYTE PTR [rax+0x1],al
	...
   14000a0fd:	add    BYTE PTR [rax],al
   14000a0ff:	add    BYTE PTR [rsi],ch
   14000a101:	(bad)  
   14000a102:	push   r14
   14000a104:	pop    rdi
   14000a105:	push   rbx
   14000a106:	jns    0x14000a17b
   14000a108:	je     0x14000a16f
   14000a10a:	ins    DWORD PTR es:[rdi],dx
   14000a10b:	pop    rdi
   14000a10c:	gs jb  0x14000a181
   14000a10f:	outs   dx,DWORD PTR ds:[rsi]
   14000a110:	jb     0x14000a171
   14000a112:	movsxd esp,DWORD PTR [rcx+0x74]
   14000a115:	outs   dx,DWORD PTR gs:[esi]
   14000a118:	jb     0x14000a193
   14000a11a:	rex jae 0x14000a191
   14000a11d:	fs rex
   14000a11f:	add    BYTE PTR [rax],al
   14000a122:	add    BYTE PTR [rax],al
   14000a124:	add    BYTE PTR [rax],al
   14000a126:	add    BYTE PTR [rax],al
   14000a128:	jo     0x14000a1a2
   14000a12a:	add    BYTE PTR [rax+0x1],al
	...
   14000a135:	add    BYTE PTR [rax],al
   14000a137:	add    BYTE PTR [rsi],ch
   14000a139:	(bad)  
   14000a13a:	push   r14
   14000a13c:	je     0x14000a1b7
   14000a13e:	jo     0x14000a1a5
   14000a140:	pop    rdi
   14000a141:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
	...

Disassembly of section .pdata:

000000014000b000 <.pdata>:
   14000b000:	adc    BYTE PTR [rax],0x0
   14000b003:	add    BYTE PTR [rbx+0x38000010],dl
   14000b009:	mov    BYTE PTR [rax],al
   14000b00b:	add    BYTE PTR [rax-0x38fffff0],ah
   14000b011:	adc    BYTE PTR [rax],al
   14000b013:	add    BYTE PTR [rsi+rax*4],ch
   14000b016:	add    BYTE PTR [rax],al
   14000b018:	rcl    BYTE PTR [rax],1
   14000b01a:	add    BYTE PTR [rax],al
   14000b01c:	or     BYTE PTR [rcx],dl
   14000b01e:	add    BYTE PTR [rax],al
   14000b020:	rex.WR xchg BYTE PTR [rax],r8b
   14000b023:	add    BYTE PTR [rax],dl
   14000b025:	adc    DWORD PTR [rax],eax
   14000b027:	add    BYTE PTR [rax+0x11],cl
   14000b02a:	add    BYTE PTR [rax],al
   14000b02c:	push   rsp
   14000b02d:	xchg   BYTE PTR [rax],al
   14000b02f:	add    BYTE PTR [rax+0x11],dl
   14000b032:	add    BYTE PTR [rax],al
   14000b034:	adc    DWORD PTR [rcx],0x0
   14000b037:	add    BYTE PTR [rsi+rax*4],bh
   14000b03a:	add    BYTE PTR [rax],al
   14000b03c:	nop
   14000b03d:	adc    DWORD PTR [rax],eax
   14000b03f:	add    dh,bl
   14000b041:	adc    DWORD PTR [rax],eax
   14000b043:	add    BYTE PTR [rax-0x78],al
   14000b046:	add    BYTE PTR [rax],al
   14000b048:	lock adc al,BYTE PTR [rax]
   14000b04b:	add    BYTE PTR [rcx],ch
   14000b04d:	adc    eax,0x870c0000
   14000b052:	add    BYTE PTR [rax],al
   14000b054:	xor    BYTE PTR [rip+0x15910000],dl        # 0x15591b05a
   14000b05a:	add    BYTE PTR [rax],al
   14000b05c:	test   al,0x87
   14000b05e:	add    BYTE PTR [rax],al
   14000b060:	rcl    BYTE PTR [rip+0x16070000],1        # 0x15607b066
   14000b066:	add    BYTE PTR [rax],al
   14000b068:	xor    al,0x86
   14000b06a:	add    BYTE PTR [rax],al
   14000b06c:	and    BYTE PTR [rsi],dl
   14000b06e:	add    BYTE PTR [rax],al
   14000b070:	rex.WXB (bad) 
   14000b072:	add    BYTE PTR [rax],al
   14000b074:	jl     0x14000affc
   14000b076:	add    BYTE PTR [rax],al
   14000b078:	push   rax
   14000b079:	(bad)  
   14000b07a:	add    BYTE PTR [rax],al
   14000b07c:	jo     0x14000b094
   14000b07e:	add    BYTE PTR [rax],al
   14000b080:	movabs al,ds:0xc000001670000087
   14000b089:	(bad)  
   14000b08a:	add    BYTE PTR [rax],al
   14000b08c:	mov    ah,0x87
   14000b08e:	add    BYTE PTR [rax],al
   14000b090:	rcl    BYTE PTR [rsi],0x0
   14000b093:	add    al,ah
   14000b095:	(bad)  
   14000b096:	add    BYTE PTR [rax],al
   14000b098:	xchg   BYTE PTR [rax],r8b
   14000b09b:	add    al,ah
   14000b09d:	(bad)  
   14000b09e:	add    BYTE PTR [rax],al
   14000b0a0:	add    BYTE PTR [rdi],dl
   14000b0a2:	add    BYTE PTR [rax],al
   14000b0a4:	je     0x14000b02c
   14000b0a6:	add    BYTE PTR [rax],al
   14000b0a8:	add    BYTE PTR [rax],bl
   14000b0aa:	add    BYTE PTR [rax],al
   14000b0ac:	xor    BYTE PTR [rax],bl
   14000b0ae:	add    BYTE PTR [rax],al
   14000b0b0:	loopne 0x14000b03a
   14000b0b2:	add    BYTE PTR [rax],al
   14000b0b4:	xor    BYTE PTR [rax],bl
   14000b0b6:	add    BYTE PTR [rax],al
   14000b0b8:	(bad)  
   14000b0b9:	sbb    BYTE PTR [rax],al
   14000b0bb:	add    BYTE PTR [rax-0x77],dl
   14000b0be:	add    BYTE PTR [rax],al
   14000b0c0:	(bad)  
   14000b0c1:	sbb    BYTE PTR [rax],al
   14000b0c3:	add    BYTE PTR [rax+0x18000018],dl
   14000b0c9:	mov    DWORD PTR [rax],eax
   14000b0cb:	add    BYTE PTR [rax+0x5000019],dh
   14000b0d1:	sbb    al,BYTE PTR [rax]
   14000b0d3:	add    BYTE PTR [rsi+rax*4],ah
   14000b0d6:	add    BYTE PTR [rax],al
   14000b0d8:	adc    BYTE PTR [rdx],bl
   14000b0da:	add    BYTE PTR [rax],al
   14000b0dc:	sbb    al,BYTE PTR gs:[rax]
   14000b0df:	add    BYTE PTR [rax+0x70000087],bl
   14000b0e5:	sbb    al,BYTE PTR [rax]
   14000b0e7:	add    ch,al
   14000b0e9:	sbb    al,BYTE PTR [rax]
   14000b0eb:	add    BYTE PTR [rsi+rax*4+0x0],ch
   14000b0ef:	add    BYTE PTR [rax],ah
   14000b0f1:	sbb    eax,DWORD PTR [rax]
   14000b0f3:	add    BYTE PTR [rbx+rbx*1-0x79a40000],ch
   14000b0fa:	add    BYTE PTR [rax],al
   14000b0fc:	mov    al,0x1b
   14000b0fe:	add    BYTE PTR [rax],al
   14000b100:	(bad)  
   14000b101:	sbb    al,0x0
   14000b103:	add    BYTE PTR [rax],al
   14000b105:	xchg   DWORD PTR [rax],eax
   14000b107:	add    al,dh
   14000b109:	sbb    al,0x0
   14000b10b:	add    BYTE PTR [rax],cl
   14000b10d:	sbb    eax,0x85900000
   14000b112:	add    BYTE PTR [rax],al
   14000b114:	or     BYTE PTR [rip+0x1d960000],bl        # 0x15d96b11a
   14000b11a:	add    BYTE PTR [rax],al
   14000b11c:	cwde   
   14000b11d:	test   DWORD PTR [rax],eax
   14000b11f:	add    BYTE PTR [rsi-0x68ffffe3],dl
   14000b125:	sbb    eax,0x85b00000
   14000b12a:	add    BYTE PTR [rax],al
   14000b12c:	xchg   edi,eax
   14000b12d:	sbb    eax,0x1da50000
   14000b132:	add    BYTE PTR [rax],al
   14000b134:	rol    BYTE PTR [rbp+0x1db00000],0x0
   14000b13b:	add    BYTE PTR [rbx],bl
   14000b13d:	(bad)  
   14000b13e:	add    BYTE PTR [rax],al
   14000b140:	and    BYTE PTR [rdx+0x1e400000],al
   14000b146:	add    BYTE PTR [rax],al
   14000b148:	push   0x2c00001e
   14000b14d:	add    DWORD PTR [rax],0x1e7000
   14000b153:	add    BYTE PTR [rax-0x47ffffe2],bl
   14000b159:	add    DWORD PTR [rax],0x20b000
   14000b15f:	add    cl,ah
   14000b161:	and    BYTE PTR [rax],al
   14000b163:	add    BYTE PTR [rax-0xfffff84],cl
   14000b169:	and    BYTE PTR [rax],al
   14000b16b:	add    BYTE PTR [rcx+riz*1],ch
   14000b16e:	add    BYTE PTR [rax],al
   14000b170:	nop
   14000b171:	jl     0x14000b173
   14000b173:	add    BYTE PTR [rax],dh
   14000b175:	and    DWORD PTR [rax],eax
   14000b177:	add    BYTE PTR [rax+0x21],bl
   14000b17a:	add    BYTE PTR [rax],al
   14000b17c:	adc    BYTE PTR [rdi+0x0],bh
   14000b17f:	add    BYTE PTR [rax+0x21],ah
   14000b182:	add    BYTE PTR [rax],al
   14000b184:	test   eax,0x18000021
   14000b189:	jg     0x14000b18b
   14000b18b:	add    BYTE PTR [rax-0x27ffffdf],dh
   14000b191:	and    DWORD PTR [rax],eax
   14000b193:	add    al,cl
   14000b195:	add    DWORD PTR [rax],0x21e000
   14000b19b:	add    BYTE PTR [rdx+riz*1+0x0],dl
   14000b19f:	add    al,ah
   14000b1a1:	test   DWORD PTR [rax],eax
   14000b1a3:	add    BYTE PTR [rax+0x22],ah
   14000b1a6:	add    BYTE PTR [rax],al
   14000b1a8:	retf   
   14000b1a9:	and    al,BYTE PTR [rax]
   14000b1ab:	add    BYTE PTR [rsp+rax*4+0x22f00000],bh
   14000b1b2:	add    BYTE PTR [rax],al
   14000b1b4:	and    eax,DWORD PTR fs:[rax]
   14000b1b7:	add    BYTE PTR [rax],bl
   14000b1b9:	test   DWORD PTR [rax],eax
   14000b1bb:	add    al,dl
   14000b1bd:	and    eax,DWORD PTR [rax]
   14000b1bf:	add    BYTE PTR [rdx],cl
   14000b1c1:	and    al,0x0
   14000b1c3:	add    BYTE PTR [rax-0x7e],ch
   14000b1c6:	add    BYTE PTR [rax],al
   14000b1c8:	xor    BYTE PTR [rax+rax*1],ah
   14000b1cb:	add    BYTE PTR [rcx+0x24],ah
   14000b1ce:	add    BYTE PTR [rax],al
   14000b1d0:	cwde   
   14000b1d1:	jl     0x14000b1d3
   14000b1d3:	add    BYTE PTR [rax+0x24],dh
   14000b1d6:	add    BYTE PTR [rax],al
   14000b1d8:	lahf   
   14000b1d9:	and    al,0x0
   14000b1db:	add    BYTE PTR [rax],ah
   14000b1dd:	jg     0x14000b1df
   14000b1df:	add    BYTE PTR [rax-0x44ffffdc],ah
   14000b1e5:	and    al,0x0
   14000b1e7:	add    al,dl
   14000b1e9:	add    DWORD PTR [rax],0x24c000
   14000b1ef:	add    BYTE PTR [rip+0xffffffffd8000025],dl        # 0x11800b21a
   14000b1f5:	test   DWORD PTR [rax],eax
   14000b1f7:	add    BYTE PTR [rax],ah
   14000b1f9:	and    eax,0x255a0000
   14000b1fe:	add    BYTE PTR [rax],al
   14000b200:	adc    BYTE PTR [rbp+0x25600000],al
   14000b206:	add    BYTE PTR [rax],al
   14000b208:	mov    DWORD PTR [rip+0xffffffff83940000],esp        # 0xc394b20e
   14000b20e:	add    BYTE PTR [rax],al
   14000b210:	lock and eax,0x260c0000
   14000b216:	add    BYTE PTR [rax],al
   14000b218:	jo     0x14000b19c
   14000b21a:	add    BYTE PTR [rax],al
   14000b21c:	adc    BYTE PTR [rsi],ah
   14000b21e:	add    BYTE PTR [rax],al
   14000b220:	sub    al,0x26
   14000b222:	add    BYTE PTR [rax],al
   14000b224:	or     BYTE PTR [rbp+0x26300000],al
   14000b22a:	add    BYTE PTR [rax],al
   14000b22c:	(bad)  
   14000b22d:	add    BYTE PTR es:[rax],al
   14000b230:	(bad)  
   14000b231:	test   DWORD PTR [rax],eax
   14000b233:	add    al,ah
   14000b235:	(bad)  
   14000b236:	add    BYTE PTR [rax],al
   14000b238:	stc    
   14000b239:	(bad)  
   14000b23a:	add    BYTE PTR [rax],al
   14000b23c:	adc    al,0x81
   14000b23e:	add    BYTE PTR [rax],al
   14000b240:	add    BYTE PTR [rax],ch
   14000b242:	add    BYTE PTR [rax],al
   14000b244:	sbb    DWORD PTR [rax],ebp
   14000b246:	add    BYTE PTR [rax],al
   14000b248:	or     al,0x81
   14000b24a:	add    BYTE PTR [rax],al
   14000b24c:	nop
   14000b24d:	sub    BYTE PTR [rax],al
   14000b24f:	add    BYTE PTR [rcx],al
   14000b251:	sub    DWORD PTR [rax],eax
   14000b253:	add    BYTE PTR [rax],bl
   14000b255:	xchg   BYTE PTR [rax],al
   14000b257:	add    BYTE PTR [rax],dl
   14000b259:	sub    DWORD PTR [rax],eax
   14000b25b:	add    BYTE PTR [rsi],dh
   14000b25d:	sub    DWORD PTR [rax],eax
   14000b25f:	add    al,cl
   14000b261:	jle    0x14000b263
   14000b263:	add    BYTE PTR [rax+0x29],al
   14000b266:	add    BYTE PTR [rax],al
   14000b268:	sub    WORD PTR [rax],ax
   14000b26b:	add    al,bl
   14000b26d:	jle    0x14000b26f
   14000b26f:	add    BYTE PTR [rax+0x29],dh
   14000b272:	add    BYTE PTR [rax],al
   14000b274:	xchg   esi,eax
   14000b275:	sub    DWORD PTR [rax],eax
   14000b277:	add    al,bh
   14000b279:	jle    0x14000b27b
   14000b27b:	add    BYTE PTR [rax-0x39ffffd7],ah
   14000b281:	sub    DWORD PTR [rax],eax
   14000b283:	add    BYTE PTR [rsi+rdi*2+0x2a100000],dh
   14000b28a:	add    BYTE PTR [rax],al
   14000b28c:	push   0x2a
   14000b28e:	add    BYTE PTR [rax],al
   14000b290:	xor    al,0x81
   14000b292:	add    BYTE PTR [rax],al
   14000b294:	jo     0x14000b2c0
   14000b296:	add    BYTE PTR [rax],al
   14000b298:	mov    ebp,0x1c00002a
   14000b29d:	add    DWORD PTR [rax],0x0
   14000b2a0:	mov    ebp,0x5400002a
   14000b2a5:	sub    eax,DWORD PTR [rax]
   14000b2a7:	add    BYTE PTR [rax],ch
   14000b2a9:	add    DWORD PTR [rax],0x0
   14000b2ac:	push   rsp
   14000b2ad:	sub    eax,DWORD PTR [rax]
   14000b2af:	add    BYTE PTR [rdi+0x2b],bl
   14000b2b2:	add    BYTE PTR [rax],al
   14000b2b4:	cmp    al,0x83
   14000b2b6:	add    BYTE PTR [rax],al
   14000b2b8:	(bad)  
   14000b2b9:	sub    eax,DWORD PTR [rax]
   14000b2bb:	add    dl,ch
   14000b2bd:	sub    eax,DWORD PTR [rax]
   14000b2bf:	add    BYTE PTR [rax-0xfffff7e],cl
   14000b2c5:	sub    eax,DWORD PTR [rax]
   14000b2c7:	add    dl,dh
   14000b2c9:	sub    al,0x0
   14000b2cb:	add    BYTE PTR [rax],ah
   14000b2cd:	jge    0x14000b2cf
   14000b2cf:	add    BYTE PTR [rax],al
   14000b2d1:	sub    eax,0x2e1c0000
   14000b2d6:	add    BYTE PTR [rax],al
   14000b2d8:	cmp    BYTE PTR [rdi+0x0],0x0
   14000b2dc:	xor    BYTE PTR [rsi],ch
   14000b2de:	add    BYTE PTR [rax],al
   14000b2e0:	test   al,0x2e
   14000b2e2:	add    BYTE PTR [rax],al
   14000b2e4:	add    BYTE PTR [rdx+0x2f300000],0x0
   14000b2eb:	add    BYTE PTR [rsi-0x3fffffd1],cl
   14000b2f1:	add    DWORD PTR [rax],0x2ff000
   14000b2f7:	add    BYTE PTR [rdx],bh
   14000b2f9:	xor    BYTE PTR [rax],al
   14000b2fb:	add    BYTE PTR [rsi+rdi*2],dl
   14000b2fe:	add    BYTE PTR [rax],al
   14000b300:	cmp    dh,BYTE PTR [rax]
   14000b302:	add    BYTE PTR [rax],al
   14000b304:	push   rax
   14000b305:	xor    BYTE PTR [rax],al
   14000b307:	add    BYTE PTR [rsi+rdi*2],ah
   14000b30a:	add    BYTE PTR [rax],al
   14000b30c:	push   rax
   14000b30d:	xor    BYTE PTR [rax],al
   14000b30f:	add    BYTE PTR [rbp+0x30],dh
   14000b312:	add    BYTE PTR [rax],al
   14000b314:	cmp    BYTE PTR [rsi+0x0],bh
   14000b317:	add    BYTE PTR [rbp+0x30],dh
   14000b31a:	add    BYTE PTR [rax],al
   14000b31c:	mov    WORD PTR [rax],?
   14000b31e:	add    BYTE PTR [rax],al
   14000b320:	rex.WR jle 0x14000b323
   14000b323:	add    BYTE PTR [rax+rsi*1+0x30b70000],cl
   14000b32a:	add    BYTE PTR [rax],al
   14000b32c:	pop    rsp
   14000b32d:	jle    0x14000b32f
   14000b32f:	add    al,al
   14000b331:	xor    BYTE PTR [rax],al
   14000b333:	add    BYTE PTR [rbx],dl
   14000b335:	xor    DWORD PTR [rax],eax
   14000b337:	add    BYTE PTR [rax+rax*4+0x0],dh
   14000b33b:	add    BYTE PTR [rbx],dl
   14000b33d:	xor    DWORD PTR [rax],eax
   14000b33f:	add    BYTE PTR [rcx],ch
   14000b341:	xor    DWORD PTR [rax],eax
   14000b343:	add    BYTE PTR [rax+rax*4+0x31290000],al
   14000b34a:	add    BYTE PTR [rax],al
   14000b34c:	rex.WRXB xor QWORD PTR [r8],r8
   14000b34f:	add    BYTE PTR [rax+0x4f000080],bl
   14000b355:	xor    DWORD PTR [rax],eax
   14000b357:	add    BYTE PTR [rdi+0x31],ah
   14000b35a:	add    BYTE PTR [rax],al
   14000b35c:	lods   al,BYTE PTR ds:[rsi]
   14000b35d:	add    BYTE PTR [rax],0x0
   14000b360:	xor    DWORD PTR [eax],eax
   14000b363:	add    BYTE PTR [rdx-0x43ffffcf],dl
   14000b369:	add    BYTE PTR [rax],0x0
   14000b36c:	nop
   14000b36d:	xor    al,BYTE PTR [rax]
   14000b36f:	add    ch,al
   14000b371:	xor    al,BYTE PTR [rax]
   14000b373:	add    BYTE PTR [rax],bl
   14000b375:	(bad)  
   14000b376:	add    BYTE PTR [rax],al
   14000b378:	shl    BYTE PTR [rdx],1
   14000b37a:	add    BYTE PTR [rax],al
   14000b37c:	and    esi,DWORD PTR [rbx]
   14000b37e:	add    BYTE PTR [rax],al
   14000b380:	adc    BYTE PTR [rbx+0x33900000],al
   14000b386:	add    BYTE PTR [rax],al
   14000b388:	fidiv  DWORD PTR [rsi]
   14000b38a:	add    BYTE PTR [rax],al
   14000b38c:	mov    ah,0x83
   14000b38e:	add    BYTE PTR [rax],al
   14000b390:	and    BYTE PTR [rax],bh
   14000b392:	add    BYTE PTR [rax],al
   14000b394:	xor    DWORD PTR [rax],edi
   14000b396:	add    BYTE PTR [rax],al
   14000b398:	rex.WR add QWORD PTR [rax],0x0
   14000b39c:	xor    DWORD PTR [rax],edi
   14000b39e:	add    BYTE PTR [rax],al
   14000b3a0:	imul   edi,DWORD PTR [rax],0x83540000
   14000b3a6:	add    BYTE PTR [rax],al
   14000b3a8:	imul   edi,DWORD PTR [rax],0x386f0000
   14000b3ae:	add    BYTE PTR [rax],al
   14000b3b0:	ins    BYTE PTR es:[rdi],dx
   14000b3b1:	add    DWORD PTR [rax],0x0
   14000b3b4:	jo     0x14000b3ee
   14000b3b6:	add    BYTE PTR [rax],al
   14000b3b8:	mov    edi,DWORD PTR [rax]
   14000b3ba:	add    BYTE PTR [rax],al
   14000b3bc:	ins    BYTE PTR es:[rdi],dx
   14000b3bd:	jle    0x14000b3bf
   14000b3bf:	add    BYTE PTR [rbx-0x52ffffc8],cl
   14000b3c5:	cmp    BYTE PTR [rax],al
   14000b3c7:	add    BYTE PTR [rax+0x7e],bh
   14000b3ca:	add    BYTE PTR [rax],al
   14000b3cc:	lods   eax,DWORD PTR ds:[rsi]
   14000b3cd:	cmp    BYTE PTR [rax],al
   14000b3cf:	add    al,cl
   14000b3d1:	cmp    BYTE PTR [rax],al
   14000b3d3:	add    BYTE PTR [rsi+rdi*2+0x38d00000],cl
   14000b3da:	add    BYTE PTR [rax],al
   14000b3dc:	jmp    0x14000b416
   14000b3de:	add    BYTE PTR [rax],al
   14000b3e0:	int3   
   14000b3e1:	add    BYTE PTR [rax],0x0
   14000b3e4:	jmp    0x14000b41e
   14000b3e6:	add    BYTE PTR [rax],al
   14000b3e8:	adc    BYTE PTR [rcx],bh
   14000b3ea:	add    BYTE PTR [rax],al
   14000b3ec:	fadd   DWORD PTR [rax+0x39100000]
   14000b3f2:	add    BYTE PTR [rax],al
   14000b3f4:	sub    eax,0xec000039
   14000b3f9:	add    BYTE PTR [rax],0x0
   14000b3fc:	rex cmp DWORD PTR [rax],eax
   14000b3ff:	add    BYTE PTR [rcx+0x39],ch
   14000b402:	add    BYTE PTR [rax],al
   14000b404:	lods   al,BYTE PTR ds:[rsi]
   14000b405:	add    DWORD PTR [rax],0x0
   14000b408:	jo     0x14000b443
   14000b40a:	add    BYTE PTR [rax],al
   14000b40c:	mov    bh,0x39
   14000b40e:	add    BYTE PTR [rax],al
   14000b410:	test   al,0x84
   14000b412:	add    BYTE PTR [rax],al
   14000b414:	sar    BYTE PTR [rdx],0x0
   14000b417:	add    dl,dl
   14000b419:	cmp    al,BYTE PTR [rax]
   14000b41b:	add    BYTE PTR [rsi+rdi*2+0x3ae00000],bl
   14000b422:	add    BYTE PTR [rax],al
   14000b424:	repnz cmp al,BYTE PTR [rax]
   14000b427:	add    ah,bh
   14000b429:	add    BYTE PTR [rax],0x0
   14000b42c:	add    BYTE PTR [rbx],bh
   14000b42e:	add    BYTE PTR [rax],al
   14000b430:	adc    bh,BYTE PTR [rbx]
   14000b432:	add    BYTE PTR [rax],al
   14000b434:	mov    ah,0x84
   14000b436:	add    BYTE PTR [rax],al
   14000b438:	and    BYTE PTR [rbx],bh
   14000b43a:	add    BYTE PTR [rax],al
   14000b43c:	xor    bh,BYTE PTR [rbx]
   14000b43e:	add    BYTE PTR [rax],al
   14000b440:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b441:	jle    0x14000b443
   14000b443:	add    BYTE PTR [rax+0x3b],al
   14000b446:	add    BYTE PTR [rax],al
   14000b448:	push   rdx
   14000b449:	cmp    eax,DWORD PTR [rax]
   14000b44b:	add    BYTE PTR [rcx+rax*4],al
   14000b44e:	add    BYTE PTR [rax],al
   14000b450:	(bad)  
   14000b451:	cmp    eax,DWORD PTR [rax]
   14000b453:	add    BYTE PTR [rax-0x73ffffc5],bl
   14000b459:	add    DWORD PTR [rax],0x0
   14000b45c:	movabs al,ds:0x8000003bca00003b
   14000b465:	jl     0x14000b467
   14000b467:	add    al,dl
   14000b469:	cmp    eax,DWORD PTR [rax]
   14000b46b:	add    BYTE PTR [rax],cl
   14000b46d:	cmp    al,0x0
   14000b46f:	add    BYTE PTR [rcx+rax*4],ah
   14000b472:	add    BYTE PTR [rax],al
   14000b474:	adc    BYTE PTR [rax+rax*1],bh
   14000b477:	add    BYTE PTR [rax+0x3c],cl
   14000b47a:	add    BYTE PTR [rax],al
   14000b47c:	test   BYTE PTR [rbx+0x3c500000],al
   14000b482:	add    BYTE PTR [rax],al
   14000b484:	test   BYTE PTR [rax+rax*1],bh
   14000b487:	add    BYTE PTR [rax],cl
   14000b489:	jg     0x14000b48b
   14000b48b:	add    BYTE PTR [rax-0x45ffffc4],dl
   14000b491:	cmp    al,0x0
   14000b493:	add    BYTE PTR [rax+0x7c],bh
   14000b496:	add    BYTE PTR [rax],al
   14000b498:	sar    BYTE PTR [rax+rax*1],0x0
   14000b49c:	clc    
   14000b49d:	cmp    al,0x0
   14000b49f:	add    BYTE PTR [rcx+rax*4],bl
   14000b4a2:	add    BYTE PTR [rax],al
   14000b4a4:	add    BYTE PTR [rip+0x3d380000],bh        # 0x17d38b4aa
   14000b4aa:	add    BYTE PTR [rax],al
   14000b4ac:	jl     0x14000b431
   14000b4ae:	add    BYTE PTR [rax],al
   14000b4b0:	rex cmp eax,0x3d740000
   14000b4b6:	add    BYTE PTR [rax],al
   14000b4b8:	add    BYTE PTR [rdi+0x0],bh
   14000b4bb:	add    BYTE PTR [rax-0x5dffffc3],al
   14000b4c1:	add    BYTE PTR ds:[rax],al
   14000b4c4:	movabs al,ds:0xff00003ed000007c
   14000b4cd:	(bad)  
   14000b4ce:	add    BYTE PTR [rax],al
   14000b4d0:	mov    ah,0x7c
   14000b4d2:	add    BYTE PTR [rax],al
   14000b4d4:	add    BYTE PTR [rax+0x0],al
   14000b4d7:	add    BYTE PTR [rdx],bh
   14000b4d9:	add    BYTE PTR [r8],al
   14000b4dc:	sub    BYTE PTR [rdi+0x0],bh
   14000b4df:	add    BYTE PTR [rax+0x41],dh
   14000b4e2:	add    BYTE PTR [rax],al
   14000b4e4:	mov    bh,0x42
   14000b4e6:	add    BYTE PTR [rax],al
   14000b4e8:	cmp    al,0x7f
   14000b4ea:	add    BYTE PTR [rax],al
   14000b4ec:	loopne 0x14000b530
   14000b4ee:	add    BYTE PTR [rax],al
   14000b4f0:	add    eax,0x9c000043
   14000b4f5:	add    DWORD PTR [rax],0x0
   14000b4f8:	mov    al,0x43
   14000b4fa:	add    BYTE PTR [rax],al
   14000b4fc:	add    al,BYTE PTR [rax+rax*1+0x0]
   14000b500:	js     0x14000b484
   14000b502:	add    BYTE PTR [rax],al
   14000b504:	adc    BYTE PTR [rax+rax*1+0x0],al
   14000b508:	cmp    eax,0xe4000044
   14000b50d:	add    DWORD PTR [rax],0x443d00
   14000b513:	add    BYTE PTR [rdx-0xbffffbc],bl
   14000b519:	add    DWORD PTR [rax],0x449a00
   14000b51f:	add    BYTE PTR [rdx+0x8000044],ch
   14000b525:	(bad)  
   14000b526:	add    BYTE PTR [rax],al
   14000b528:	rol    BYTE PTR [rax+rax*1+0x0],0x3a
   14000b52d:	add    BYTE PTR [r8],r8b
   14000b530:	fdivr  DWORD PTR [rax+rax*1+0x0]
   14000b534:	rex
   14000b535:	add    BYTE PTR [r8],r8b
   14000b538:	movsxd eax,DWORD PTR [rbp+0x0]
   14000b53b:	add    al,ch
   14000b53d:	jl     0x14000b53f
   14000b53f:	add    BYTE PTR [rbx+0x45],ah
   14000b542:	add    BYTE PTR [rax],al
   14000b544:	ret    0x45
   14000b547:	add    al,dh
   14000b549:	jl     0x14000b54b
   14000b54b:	add    dl,al
   14000b54d:	add    BYTE PTR [r8],r8b
   14000b550:	fadd   DWORD PTR [rbp+0x0]
   14000b553:	add    BYTE PTR [rax],cl
   14000b555:	jge    0x14000b557
   14000b557:	add    BYTE PTR [rax+0x46],al
   14000b55a:	add    BYTE PTR [rax],al
   14000b55c:	pop    rsp
   14000b55d:	rex.RX add BYTE PTR [rax],r8b
   14000b560:	jo     0x14000b5de
   14000b562:	add    BYTE PTR [rax],al
   14000b564:	(bad)  
   14000b565:	rex.RX add BYTE PTR [rax],r8b
   14000b568:	jg     0x14000b5b0
   14000b56a:	add    BYTE PTR [rax],al
   14000b56c:	push   0x1000007c
   14000b571:	rex.RXB add BYTE PTR [r8],r8b
   14000b574:	push   rax
   14000b575:	rex.RXB add BYTE PTR [r8],r8b
   14000b578:	in     al,dx
   14000b579:	jle    0x14000b57b
   14000b57b:	add    BYTE PTR [rax-0x18ffffb9],dh
   14000b581:	rex.RXB add BYTE PTR [r8],r8b
   14000b584:	lods   al,BYTE PTR ds:[rsi]
   14000b585:	jle    0x14000b587
   14000b587:	add    al,dh
   14000b589:	rex.RXB add BYTE PTR [r8],r8b
   14000b58c:	mov    ecx,0xcc000048
   14000b591:	jl     0x14000b593
   14000b593:	add    al,al
   14000b595:	rex.W add BYTE PTR [rax],al
   14000b598:	dec    BYTE PTR [rax+0x0]
   14000b59b:	add    ah,al
   14000b59d:	jl     0x14000b59f
   14000b59f:	add    BYTE PTR [rax],al
   14000b5a1:	rex.WB add BYTE PTR [r8],al
   14000b5a4:	stos   DWORD PTR es:[rdi],eax
   14000b5a5:	rex.WB add BYTE PTR [r8],al
   14000b5a8:	push   rsp
   14000b5a9:	jg     0x14000b5ab
   14000b5ab:	add    BYTE PTR [rax-0x9ffffb7],dh
   14000b5b1:	rex.WB add BYTE PTR [r8],al
   14000b5b4:	rex.WR jg 0x14000b5b7
   14000b5b7:	add    BYTE PTR [rax],al
   14000b5b9:	rex.WX add BYTE PTR [rax],al
   14000b5bc:	pushf  
   14000b5bd:	rex.WX add BYTE PTR [rax],al
   14000b5c0:	fadd   DWORD PTR [rcx+0x4aa00000]
   14000b5c6:	add    BYTE PTR [rax],al
   14000b5c8:	jl     0x14000b615
   14000b5ca:	add    BYTE PTR [rax],al
   14000b5cc:	ins    BYTE PTR es:[rdi],dx
   14000b5cd:	test   DWORD PTR [rax],eax
   14000b5cf:	add    BYTE PTR [rax-0x2effffb5],dh
   14000b5d5:	rex.WR add BYTE PTR [rax],r8b
   14000b5d8:	js     0x14000b55f
   14000b5da:	add    BYTE PTR [rax],al
   14000b5dc:	loopne 0x14000b62a
   14000b5de:	add    BYTE PTR [rax],al
   14000b5e0:	add    DWORD PTR [rbp+0x0],ecx
   14000b5e3:	add    BYTE PTR [rbx+rax*4+0x4ec00000],ah
   14000b5ea:	add    BYTE PTR [rax],al
   14000b5ec:	and    cl,BYTE PTR [rdi+0x0]
   14000b5ef:	add    BYTE PTR [rsi+rdi*2+0x4f300000],bh
   14000b5f6:	add    BYTE PTR [rax],al
   14000b5f8:	jge    0x14000b649
   14000b5fa:	add    BYTE PTR [rax],al
   14000b5fc:	sar    BYTE PTR [rsi+0x0],1
   14000b5ff:	add    BYTE PTR [rax-0x1dffffb1],al
   14000b605:	rex.WRXB add BYTE PTR [r8],r8b
   14000b608:	loopne 0x14000b688
   14000b60a:	add    BYTE PTR [rax],al
   14000b60c:	push   rax
   14000b60d:	push   rax
   14000b60e:	add    BYTE PTR [rax],al
   14000b610:	sub    al,0x51
   14000b612:	add    BYTE PTR [rax],al
   14000b614:	(bad)  
   14000b615:	jg     0x14000b617
   14000b617:	add    BYTE PTR [rax],dl
   14000b619:	push   rdx
   14000b61a:	add    BYTE PTR [rax],al
   14000b61c:	rex.X push rdx
   14000b61e:	add    BYTE PTR [rax],al
   14000b620:	js     0x14000b6a1
   14000b622:	add    BYTE PTR [rax],al
   14000b624:	adc    BYTE PTR [rdx+0x0],0x0
   14000b628:	jmp    0x15000b680
   14000b62d:	jl     0x14000b62f
   14000b62f:	add    BYTE PTR [rax],al
   14000b631:	push   rsp
   14000b632:	add    BYTE PTR [rax],al
   14000b634:	es push rsp
   14000b636:	add    BYTE PTR [rax],al
   14000b638:	pop    rax
   14000b639:	jl     0x14000b63b
   14000b63b:	add    BYTE PTR [rax+0x54],dh
   14000b63e:	add    BYTE PTR [rax],al
   14000b640:	mov    dl,BYTE PTR [rax+rax*1+0x0]
   14000b644:	(bad)  
   14000b645:	jl     0x14000b647
   14000b647:	add    BYTE PTR [rax],ah
   14000b649:	push   rbp
   14000b64a:	add    BYTE PTR [rax],al
   14000b64c:	outs   dx,BYTE PTR ds:[rsi]
   14000b64d:	push   rbp
   14000b64e:	add    BYTE PTR [rax],al
   14000b650:	mov    eax,0x70000089
   14000b655:	push   rbp
   14000b656:	add    BYTE PTR [rax],al
   14000b658:	and    BYTE PTR [rsi+0x0],dl
   14000b65b:	add    BYTE PTR [rax+0x20000089],dl
   14000b661:	push   rsi
   14000b662:	add    BYTE PTR [rax],al
   14000b664:	(bad)  
   14000b665:	push   rsi
   14000b666:	add    BYTE PTR [rax],al
   14000b668:	mov    BYTE PTR [rcx+0x56700000],cl
   14000b66e:	add    BYTE PTR [rax],al
   14000b670:	mov    esi,0xc0000056
   14000b675:	mov    DWORD PTR [rax],eax
   14000b677:	add    ah,ah
   14000b679:	push   rsi
   14000b67a:	add    BYTE PTR [rax],al
   14000b67c:	rex.WRX push rdi
   14000b67e:	add    BYTE PTR [rax],al
   14000b680:	enter  0x89,0x0
   14000b684:	push   rax
   14000b685:	push   rdi
   14000b686:	add    BYTE PTR [rax],al
   14000b688:	(bad)  
   14000b689:	pop    rax
   14000b68a:	add    BYTE PTR [rax],al
   14000b68c:	fmul   DWORD PTR [rcx+0x58200000]
   14000b692:	add    BYTE PTR [rax],al
   14000b694:	sbb    DWORD PTR [rax+0x0],0x0
   14000b698:	loopne 0x14000b623
   14000b69a:	add    BYTE PTR [rax],al
   14000b69c:	nop
   14000b69d:	pop    rax
   14000b69e:	add    BYTE PTR [rax],al
   14000b6a0:	movabs ds:0xa400008a18000058,al
   14000b6a9:	pop    rax
   14000b6aa:	add    BYTE PTR [rax],al
   14000b6ac:	mov    WORD PTR [rdx+0x0],ds
   14000b6af:	add    al,ch
   14000b6b1:	mov    DWORD PTR [rax],eax
   14000b6b3:	add    ah,dh
   14000b6b5:	pop    rdx
   14000b6b6:	add    BYTE PTR [rax],al
   14000b6b8:	push   rcx
   14000b6b9:	pop    rbx
   14000b6ba:	add    BYTE PTR [rax],al
   14000b6bc:	and    BYTE PTR [rdx+0x5b540000],cl
   14000b6c2:	add    BYTE PTR [rax],al
   14000b6c4:	jo     0x14000b721
   14000b6c6:	add    BYTE PTR [rax],al
   14000b6c8:	or     BYTE PTR [rdx+0x5b700000],0x0
   14000b6cf:	add    BYTE PTR [rdx+0x5000005b],bh
   14000b6d5:	mov    al,BYTE PTR [rax]
   14000b6d7:	add    BYTE PTR [rbx+rbx*2+0x5bf40000],bh
   14000b6de:	add    BYTE PTR [rax],al
   14000b6e0:	mov    BYTE PTR [rdx+0x5bf40000],cl
   14000b6e6:	add    BYTE PTR [rax],al
   14000b6e8:	or     ebx,DWORD PTR [rax+rax*1+0x0]
   14000b6ec:	nop
   14000b6ed:	mov    al,BYTE PTR [rax]
   14000b6ef:	add    BYTE PTR [rax-0x32ffffa4],al
   14000b6f5:	pop    rsp
   14000b6f6:	add    BYTE PTR [rax],al
   14000b6f8:	cwde   
   14000b6f9:	mov    al,BYTE PTR [rax]
   14000b6fb:	add    BYTE PTR [rax],dl
   14000b6fd:	pop    rbp
   14000b6fe:	add    BYTE PTR [rax],al
   14000b700:	mov    esp,0xc400005d
   14000b705:	mov    al,BYTE PTR [rax]
   14000b707:	add    al,cl
   14000b709:	pop    rbp
   14000b70a:	add    BYTE PTR [rax],al
   14000b70c:	add    BYTE PTR [rsi+0x0],bl
   14000b70f:	add    al,dl
   14000b711:	mov    al,BYTE PTR [rax]
   14000b713:	add    BYTE PTR [rax],al
   14000b715:	pop    rsi
   14000b716:	add    BYTE PTR [rax],al
   14000b718:	cmp    BYTE PTR [rsi+0x0],bl
   14000b71b:	add    ah,bl
   14000b71d:	mov    al,BYTE PTR [rax]
   14000b71f:	add    BYTE PTR [rax-0x53ffffa2],dl
   14000b725:	pop    rsi
   14000b726:	add    BYTE PTR [rax],al
   14000b728:	enter  0x88,0x0
   14000b72c:	lods   al,BYTE PTR ds:[rsi]
   14000b72d:	pop    rsi
   14000b72e:	add    BYTE PTR [rax],al
   14000b730:	int3   
   14000b731:	pop    rsi
   14000b732:	add    BYTE PTR [rax],al
   14000b734:	ror    BYTE PTR [rax+0x5ed00000],1
   14000b73a:	add    BYTE PTR [rax],al
   14000b73c:	neg    DWORD PTR [rsi+0x0]
   14000b73f:	add    BYTE PTR [rax+0x87],cl
   14000b745:	pop    rdi
   14000b746:	add    BYTE PTR [rax],al
   14000b748:	(bad)  
   14000b749:	pop    rdi
   14000b74a:	add    BYTE PTR [rax],al
   14000b74c:	lock xchg BYTE PTR [rax],al
   14000b74f:	add    BYTE PTR [rax],ah
   14000b751:	pop    rdi
   14000b752:	add    BYTE PTR [rax],al
   14000b754:	(bad)  
   14000b755:	pop    rdi
   14000b756:	add    BYTE PTR [rax],al
   14000b758:	sub    BYTE PTR [rax+0x5f400000],cl
   14000b75e:	add    BYTE PTR [rax],al
   14000b760:	pop    rsp
   14000b761:	pop    rdi
   14000b762:	add    BYTE PTR [rax],al
   14000b764:	adc    BYTE PTR [rcx+0x5f600000],cl
   14000b76a:	add    BYTE PTR [rax],al
   14000b76c:	jl     0x14000b7cd
   14000b76e:	add    BYTE PTR [rax],al
   14000b770:	or     BYTE PTR [rcx+0x5f800000],0x0
   14000b777:	add    BYTE PTR [rdi+rbx*2-0x76b80000],bl
   14000b77e:	add    BYTE PTR [rax],al
   14000b780:	adc    BYTE PTR [rax+0x0],ah
   14000b783:	add    BYTE PTR [rax],dh
   14000b785:	(bad)  
   14000b786:	add    BYTE PTR [rax],al
   14000b788:	test   al,0x81
   14000b78a:	add    BYTE PTR [rax],al
   14000b78c:	xor    BYTE PTR [rax+0x0],ah
   14000b78f:	add    BYTE PTR [rax+0x60],dl
   14000b792:	add    BYTE PTR [rax],al
   14000b794:	add    BYTE PTR [rbx+0x60500000],al
   14000b79a:	add    BYTE PTR [rax],al
   14000b79c:	xchg   esp,eax
   14000b79d:	(bad)  
   14000b79e:	add    BYTE PTR [rax],al
   14000b7a0:	lock jge 0x14000b7a3
   14000b7a3:	add    BYTE PTR [rax+riz*2+0x60d20000],dl
   14000b7aa:	add    BYTE PTR [rax],al
   14000b7ac:	add    BYTE PTR [rsi+0x0],bh
   14000b7af:	add    al,ah
   14000b7b1:	(bad)  
   14000b7b2:	add    BYTE PTR [rax],al
   14000b7b4:	xor    BYTE PTR [rcx+0x0],ah
   14000b7b7:	add    BYTE PTR [rax-0x80],dl
   14000b7ba:	add    BYTE PTR [rax],al
   14000b7bc:	xor    BYTE PTR [rcx+0x0],ah
   14000b7bf:	add    BYTE PTR [rax+0x61],dh
   14000b7c2:	add    BYTE PTR [rax],al
   14000b7c4:	(bad)  
   14000b7c5:	add    BYTE PTR [rax],0x0
   14000b7c8:	jo     0x14000b82b
   14000b7ca:	add    BYTE PTR [rax],al
   14000b7cc:	xchg   ebx,eax
   14000b7cd:	(bad)  
   14000b7ce:	add    BYTE PTR [rax],al
   14000b7d0:	mov    BYTE PTR [rax+rax*1+0x619300],al
   14000b7d7:	add    BYTE PTR [rdx-0x67ffff9f],ch
   14000b7dd:	test   BYTE PTR [rax],al
   14000b7df:	add    al,cl
   14000b7e1:	(bad)  
   14000b7e2:	add    BYTE PTR [rax],al
   14000b7e4:	jrcxz  0x14000b847
   14000b7e6:	add    BYTE PTR [rax],al
   14000b7e8:	mov    al,0x89
   14000b7ea:	add    BYTE PTR [rax],al
   14000b7ec:	jrcxz  0x14000b84f
   14000b7ee:	add    BYTE PTR [rax],al
   14000b7f0:	add    DWORD PTR [rdx+0x0],esp
   14000b7f3:	add    BYTE PTR [rax],dl
   14000b7f5:	mov    al,BYTE PTR [rax]
   14000b7f7:	add    BYTE PTR [rcx],al
   14000b7f9:	(bad)  
   14000b7fa:	add    BYTE PTR [rax],al
   14000b7fc:	sub    eax,0x48000062
   14000b801:	mov    al,BYTE PTR [rax]
   14000b803:	add    BYTE PTR [rip+0x6e000062],ch        # 0x1ae00b86b
   14000b809:	(bad)  
   14000b80a:	add    BYTE PTR [rax],al
   14000b80c:	js     0x14000b798
   14000b80e:	add    BYTE PTR [rax],al
   14000b810:	jo     0x14000b874
   14000b812:	add    BYTE PTR [rax],al
   14000b814:	nop
   14000b815:	(bad)  
   14000b816:	add    BYTE PTR [rax],al
   14000b818:	.byte 0xbc
   14000b819:	mov    al,BYTE PTR [rax]
	...

Disassembly of section .rsrc:

000000014000c000 <.rsrc>:
	...
   14000c008:	add    al,0x0
   14000c00a:	add    BYTE PTR [rax],al
   14000c00c:	add    BYTE PTR [rax],al
   14000c00e:	add    al,0x0
   14000c010:	add    eax,DWORD PTR [rax]
   14000c012:	add    BYTE PTR [rax],al
   14000c014:	xor    BYTE PTR [rax],al
   14000c016:	add    BYTE PTR [rax+0xe],al
   14000c01c:	nop
   14000c01d:	add    BYTE PTR [rax],al
   14000c01f:	adc    BYTE PTR [rax],0x0
   14000c022:	add    BYTE PTR [rax],al
   14000c024:	test   al,0x0
   14000c026:	add    BYTE PTR [rax+0x18],al
   14000c02c:	rol    BYTE PTR [rax],0x0
   14000c02f:	add    BYTE PTR [rax],0x0
   14000c032:	add    BYTE PTR [rax],al
   14000c034:	add    BYTE PTR [rax],al
   14000c036:	add    BYTE PTR [rax],al
   14000c038:	add    al,0x0
   14000c03a:	add    BYTE PTR [rax],al
   14000c03c:	add    BYTE PTR [rax],al
   14000c03e:	or     al,BYTE PTR [rax]
   14000c040:	add    DWORD PTR [rax],eax
   14000c042:	add    BYTE PTR [rax],al
   14000c044:	fadd   DWORD PTR [rax]
   14000c046:	add    BYTE PTR [rax+0x2],al
   14000c04c:	lock add BYTE PTR [rax],al
   14000c04f:	add    BYTE PTR [rbx],0x0
   14000c052:	add    BYTE PTR [rax],al
   14000c054:	or     BYTE PTR [rcx],al
   14000c056:	add    BYTE PTR [rax+0x4],al
   14000c05c:	and    BYTE PTR [rcx],al
   14000c05e:	add    BYTE PTR [rax+0x5],al
   14000c064:	cmp    BYTE PTR [rcx],al
   14000c066:	add    BYTE PTR [rax+0x6],al
   14000c06c:	push   rax
   14000c06d:	add    DWORD PTR [rax],eax
   14000c06f:	add    BYTE PTR [rdi],0x0
   14000c072:	add    BYTE PTR [rax],al
   14000c074:	push   0x8800001
   14000c079:	add    BYTE PTR [rax],al
   14000c07b:	add    BYTE PTR [rax+0x9800001],al
   14000c081:	add    BYTE PTR [rax],al
   14000c083:	add    BYTE PTR [rax+0xa800001],bl
   14000c089:	add    BYTE PTR [rax],al
   14000c08b:	add    BYTE PTR [rax+0x800001],dh
   14000c091:	add    BYTE PTR [rax],al
   14000c093:	add    BYTE PTR [rax],al
   14000c095:	add    BYTE PTR [rax],al
   14000c097:	add    BYTE PTR [rax+rax*1],al
   14000c09a:	add    BYTE PTR [rax],al
   14000c09c:	add    BYTE PTR [rax],al
   14000c09e:	add    DWORD PTR [rax],eax
   14000c0a0:	data16 add BYTE PTR [rax],al
   14000c0a3:	add    al,cl
   14000c0a5:	add    DWORD PTR [rax],eax
   14000c0a7:	add    BYTE PTR [rax],0x0
   14000c0aa:	add    BYTE PTR [rax],al
   14000c0ac:	add    BYTE PTR [rax],al
   14000c0ae:	add    BYTE PTR [rax],al
   14000c0b0:	add    al,0x0
   14000c0b2:	add    BYTE PTR [rax],al
   14000c0b4:	add    BYTE PTR [rax],al
   14000c0b6:	add    DWORD PTR [rax],eax
   14000c0b8:	add    DWORD PTR [rax],eax
   14000c0ba:	add    BYTE PTR [rax],al
   14000c0bc:	loopne 0x14000c0bf
   14000c0be:	add    BYTE PTR [rax+0x0],al
   14000c0c4:	add    BYTE PTR [rax],al
   14000c0c6:	add    BYTE PTR [rax],al
   14000c0c8:	add    al,0x0
   14000c0ca:	add    BYTE PTR [rax],al
   14000c0cc:	add    BYTE PTR [rax],al
   14000c0ce:	add    DWORD PTR [rax],eax
   14000c0d0:	add    DWORD PTR [rax],eax
   14000c0d2:	add    BYTE PTR [rax],al
   14000c0d4:	clc    
   14000c0d5:	add    DWORD PTR [rax],eax
   14000c0d7:	add    BYTE PTR [rax],0x0
   14000c0da:	add    BYTE PTR [rax],al
   14000c0dc:	add    BYTE PTR [rax],al
   14000c0de:	add    BYTE PTR [rax],al
   14000c0e0:	add    al,0x0
   14000c0e2:	add    BYTE PTR [rax],al
   14000c0e4:	add    BYTE PTR [rax],al
   14000c0e6:	add    DWORD PTR [rax],eax
   14000c0e8:	or     DWORD PTR [rax+rax*1],eax
   14000c0eb:	add    BYTE PTR [rax],dl
   14000c0ed:	add    al,BYTE PTR [rax]
	...
   14000c0f7:	add    BYTE PTR [rax+rax*1],al
   14000c0fa:	add    BYTE PTR [rax],al
   14000c0fc:	add    BYTE PTR [rax],al
   14000c0fe:	add    DWORD PTR [rax],eax
   14000c100:	or     DWORD PTR [rax+rax*1],eax
   14000c103:	add    BYTE PTR [rax],ah
   14000c105:	add    al,BYTE PTR [rax]
	...
   14000c10f:	add    BYTE PTR [rax+rax*1],al
   14000c112:	add    BYTE PTR [rax],al
   14000c114:	add    BYTE PTR [rax],al
   14000c116:	add    DWORD PTR [rax],eax
   14000c118:	or     DWORD PTR [rax+rax*1],eax
   14000c11b:	add    BYTE PTR [rax],dh
   14000c11d:	add    al,BYTE PTR [rax]
	...
   14000c127:	add    BYTE PTR [rax+rax*1],al
   14000c12a:	add    BYTE PTR [rax],al
   14000c12c:	add    BYTE PTR [rax],al
   14000c12e:	add    DWORD PTR [rax],eax
   14000c130:	or     DWORD PTR [rax+rax*1],eax
   14000c133:	add    BYTE PTR [rax+0x2],al
	...
   14000c13e:	add    BYTE PTR [rax],al
   14000c140:	add    al,0x0
   14000c142:	add    BYTE PTR [rax],al
   14000c144:	add    BYTE PTR [rax],al
   14000c146:	add    DWORD PTR [rax],eax
   14000c148:	or     DWORD PTR [rax+rax*1],eax
   14000c14b:	add    BYTE PTR [rax+0x2],dl
	...
   14000c156:	add    BYTE PTR [rax],al
   14000c158:	add    al,0x0
   14000c15a:	add    BYTE PTR [rax],al
   14000c15c:	add    BYTE PTR [rax],al
   14000c15e:	add    DWORD PTR [rax],eax
   14000c160:	or     DWORD PTR [rax+rax*1],eax
   14000c163:	add    BYTE PTR [rax+0x2],ah
	...
   14000c16e:	add    BYTE PTR [rax],al
   14000c170:	add    al,0x0
   14000c172:	add    BYTE PTR [rax],al
   14000c174:	add    BYTE PTR [rax],al
   14000c176:	add    DWORD PTR [rax],eax
   14000c178:	or     DWORD PTR [rax+rax*1],eax
   14000c17b:	add    BYTE PTR [rax+0x2],dh
	...
   14000c186:	add    BYTE PTR [rax],al
   14000c188:	add    al,0x0
   14000c18a:	add    BYTE PTR [rax],al
   14000c18c:	add    BYTE PTR [rax],al
   14000c18e:	add    DWORD PTR [rax],eax
   14000c190:	or     DWORD PTR [rax+rax*1],eax
   14000c193:	add    BYTE PTR [rax+0x2],al
   14000c199:	add    BYTE PTR [rax],al
   14000c19b:	add    BYTE PTR [rax],al
   14000c19d:	add    BYTE PTR [rax],al
   14000c19f:	add    BYTE PTR [rax+rax*1],al
   14000c1a2:	add    BYTE PTR [rax],al
   14000c1a4:	add    BYTE PTR [rax],al
   14000c1a6:	add    DWORD PTR [rax],eax
   14000c1a8:	or     DWORD PTR [rax+rax*1],eax
   14000c1ab:	add    BYTE PTR [rax+0x2],dl
   14000c1b1:	add    BYTE PTR [rax],al
   14000c1b3:	add    BYTE PTR [rax],al
   14000c1b5:	add    BYTE PTR [rax],al
   14000c1b7:	add    BYTE PTR [rax+rax*1],al
   14000c1ba:	add    BYTE PTR [rax],al
   14000c1bc:	add    BYTE PTR [rax],al
   14000c1be:	add    DWORD PTR [rax],eax
   14000c1c0:	or     DWORD PTR [rax+rax*1],eax
   14000c1c3:	add    BYTE PTR [rax+0x2],ah
   14000c1c9:	add    BYTE PTR [rax],al
   14000c1cb:	add    BYTE PTR [rax],al
   14000c1cd:	add    BYTE PTR [rax],al
   14000c1cf:	add    BYTE PTR [rax+rax*1],al
   14000c1d2:	add    BYTE PTR [rax],al
   14000c1d4:	add    BYTE PTR [rax],al
   14000c1d6:	add    DWORD PTR [rax],eax
   14000c1d8:	or     DWORD PTR [rax+rax*1],eax
   14000c1db:	add    BYTE PTR [rax+0x2],dh
   14000c1e1:	add    BYTE PTR [rax],al
   14000c1e3:	add    BYTE PTR [rax],al
   14000c1e5:	add    BYTE PTR [rax],al
   14000c1e7:	add    BYTE PTR [rax+rax*1],al
   14000c1ea:	add    BYTE PTR [rax],al
   14000c1ec:	add    BYTE PTR [rax],al
   14000c1ee:	add    DWORD PTR [rax],eax
   14000c1f0:	or     DWORD PTR [rax+rax*1],eax
   14000c1f3:	add    al,al
   14000c1f5:	add    al,BYTE PTR [rax]
	...
   14000c1ff:	add    BYTE PTR [rax+rax*1],al
   14000c202:	add    BYTE PTR [rax],al
   14000c204:	add    BYTE PTR [rax],al
   14000c206:	add    DWORD PTR [rax],eax
   14000c208:	or     DWORD PTR [rax+rax*1],eax
   14000c20b:	add    al,dl
   14000c20d:	add    al,BYTE PTR [rax]
   14000c20f:	add    al,ah
   14000c211:	ret    0x0
   14000c214:	push   0xffffffffe4000006
   14000c219:	add    al,0x0
   14000c21b:	add    BYTE PTR [rax],al
   14000c21d:	add    BYTE PTR [rax],al
   14000c21f:	add    BYTE PTR [rax-0x37],cl
   14000c222:	add    BYTE PTR [rax],al
   14000c224:	call   0x12400c22b
   14000c229:	add    al,0x0
   14000c22b:	add    BYTE PTR [rax],al
   14000c22d:	add    BYTE PTR [rax],al
   14000c22f:	add    BYTE PTR [rax],dh
   14000c231:	int3   
   14000c232:	add    BYTE PTR [rax],al
   14000c234:	sub    BYTE PTR [rcx],al
   14000c236:	add    BYTE PTR [rax],al
   14000c238:	in     al,0x4
   14000c23a:	add    BYTE PTR [rax],al
   14000c23c:	add    BYTE PTR [rax],al
   14000c23e:	add    BYTE PTR [rax],al
   14000c240:	pop    rax
   14000c241:	int    0x0
   14000c243:	add    BYTE PTR [rax-0x1bfffff2],ch
   14000c249:	add    al,0x0
   14000c24b:	add    BYTE PTR [rax],al
   14000c24d:	add    BYTE PTR [rax],al
   14000c24f:	add    BYTE PTR [rax],al
   14000c251:	fadd   QWORD PTR [rax]
   14000c253:	add    BYTE PTR [rax-0x1bfffff8],ch
   14000c259:	add    al,0x0
   14000c25b:	add    BYTE PTR [rax],al
   14000c25d:	add    BYTE PTR [rax],al
   14000c25f:	add    BYTE PTR [rax+0x680000e4],ch
   14000c265:	add    eax,0x4e40000
   14000c26a:	add    BYTE PTR [rax],al
   14000c26c:	add    BYTE PTR [rax],al
   14000c26e:	add    BYTE PTR [rax],al
   14000c270:	adc    dl,ch
   14000c272:	add    BYTE PTR [rax],al
   14000c274:	int3   
   14000c275:	test   al,0x0
   14000c277:	add    ah,ah
   14000c279:	add    al,0x0
   14000c27b:	add    BYTE PTR [rax],al
   14000c27d:	add    BYTE PTR [rax],al
   14000c27f:	add    ah,bl
   14000c281:	xchg   edx,eax
   14000c282:	add    DWORD PTR [rax],eax
   14000c284:	test   al,0x25
   14000c286:	add    BYTE PTR [rax],al
   14000c288:	in     al,0x4
   14000c28a:	add    BYTE PTR [rax],al
   14000c28c:	add    BYTE PTR [rax],al
   14000c28e:	add    BYTE PTR [rax],al
   14000c290:	test   BYTE PTR [rax+0x10a80001],bh
   14000c296:	add    BYTE PTR [rax],al
   14000c298:	in     al,0x4
   14000c29a:	add    BYTE PTR [rax],al
   14000c29c:	add    BYTE PTR [rax],al
   14000c29e:	add    BYTE PTR [rax],al
   14000c2a0:	sub    al,0xc9
   14000c2a2:	add    DWORD PTR [rax],eax
   14000c2a4:	push   0xffffffffe4000004
   14000c2a9:	add    al,0x0
   14000c2ab:	add    BYTE PTR [rax],al
   14000c2ad:	add    BYTE PTR [rax],al
   14000c2af:	add    BYTE PTR [rbp+rcx*8+0x920001],dl
   14000c2b6:	add    BYTE PTR [rax],al
   14000c2b8:	in     al,0x4
   14000c2ba:	add    BYTE PTR [rax],al
   14000c2bc:	add    BYTE PTR [rax],al
   14000c2be:	add    BYTE PTR [rax],al
   14000c2c0:	sub    dh,cl
   14000c2c2:	add    DWORD PTR [rax],eax
   14000c2c4:	add    BYTE PTR [rdx],0x0
   14000c2c7:	add    ah,ah
   14000c2c9:	add    al,0x0
   14000c2cb:	add    BYTE PTR [rax],al
   14000c2cd:	add    BYTE PTR [rax],al
   14000c2cf:	add    BYTE PTR [rax+0x1d0],ch
   14000c2d5:	add    al,BYTE PTR [rax]
   14000c2d7:	add    ah,ah
   14000c2d9:	add    al,0x0
   14000c2db:	add    BYTE PTR [rax],al
   14000c2dd:	add    BYTE PTR [rax],al
   14000c2df:	add    BYTE PTR [rax],ch
   14000c2e1:	add    BYTE PTR [rax],al
   14000c2e3:	add    BYTE PTR [rax],dh
   14000c2e5:	add    BYTE PTR [rax],al
   14000c2e7:	add    BYTE PTR [rax+0x0],ah
   14000c2ea:	add    BYTE PTR [rax],al
   14000c2ec:	add    DWORD PTR [rax],eax
   14000c2ee:	add    al,0x0
   14000c2f0:	add    BYTE PTR [rax],al
   14000c2f2:	add    BYTE PTR [rax],al
   14000c2f4:	add    BYTE PTR [rax+rax*1],0x0
	...
   14000c30c:	add    BYTE PTR [rax],al
   14000c30e:	add    BYTE PTR [rax],0x0
   14000c311:	add    BYTE PTR [rax],0x0
   14000c314:	add    BYTE PTR [rax+0x800080],al
   14000c31a:	add    BYTE PTR [rax],al
   14000c31c:	add    BYTE PTR [rax],0x80
   14000c31f:	add    BYTE PTR [rax-0x7fffff80],al
   14000c325:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000c32c:	add    BYTE PTR [rax],al
   14000c32e:	inc    DWORD PTR [rax]
   14000c330:	add    bh,bh
   14000c332:	add    BYTE PTR [rax],al
   14000c334:	add    bh,bh
   14000c336:	inc    DWORD PTR [rax]
   14000c338:	inc    DWORD PTR [rax]
   14000c33a:	add    BYTE PTR [rax],al
   14000c33c:	inc    DWORD PTR [rax]
   14000c33e:	inc    DWORD PTR [rax]
   14000c340:	(bad)  
   14000c341:	inc    DWORD PTR [rax]
   14000c343:	add    bh,bh
   14000c345:	(bad)  
   14000c346:	inc    DWORD PTR [rax]
	...
   14000c380:	add    BYTE PTR [rax],al
   14000c382:	or     BYTE PTR [rax],al
	...
   14000c398:	add    BYTE PTR [rax],al
   14000c39a:	mov    edi,DWORD PTR [rax+0x0]
	...
   14000c3b0:	add    BYTE PTR [rax],al
   14000c3b2:	mov    bh,0xb9
   14000c3b4:	mov    al,0x0
	...
   14000c3c6:	add    BYTE PTR [rax],al
   14000c3c8:	add    BYTE PTR [rax],cl
   14000c3ca:	mov    ecx,0x808b8b
	...
   14000c3df:	add    BYTE PTR [rax],al
   14000c3e1:	(bad)  
   14000c3e2:	mov    eax,0x7889b9
	...
   14000c3f7:	add    BYTE PTR [rax],al
   14000c3f9:	or     ebx,DWORD PTR [rbx-0x7f466485]
	...
   14000c40f:	add    BYTE PTR [rax],al
   14000c411:	jns    0x14000c39c
   14000c413:	mov    DWORD PTR [rcx+0xb089],ecx
	...
   14000c429:	cwde   
   14000c42a:	fwait
   14000c42b:	fwait
   14000c42c:	jnp    0x14000c3c6
   14000c42e:	cwde   
	...
   14000c43f:	add    BYTE PTR [rdi],al
   14000c441:	cmp    DWORD PTR [rcx-0x77],edi
   14000c444:	cwde   
   14000c445:	fwait
   14000c446:	jns    0x14000c3c8
   14000c448:	add    BYTE PTR [rax],al
   14000c44a:	add    BYTE PTR [rax],al
   14000c44c:	add    BYTE PTR [rax],al
   14000c44e:	add    BYTE PTR [rdi],al
	...
   14000c458:	add    DWORD PTR [rbx+0x79b99797],edx
   14000c45e:	mov    bh,0x98
   14000c460:	add    BYTE PTR [rax],al
   14000c462:	add    BYTE PTR [rax],al
   14000c464:	add    BYTE PTR [rax],al
   14000c466:	add    BYTE PTR [rax+0x0],dl
   14000c46c:	add    BYTE PTR [rax],al
   14000c46e:	add    BYTE PTR [rax],al
   14000c470:	(bad)  
   14000c471:	(bad)  
   14000c472:	adc    edi,DWORD PTR [rcx]
   14000c474:	jns    0x14000c42d
   14000c476:	fwait
   14000c477:	fwait
   14000c478:	jo     0x14000c47a
   14000c47a:	add    BYTE PTR [rax],al
   14000c47c:	add    BYTE PTR [rax],al
   14000c47e:	add    esi,DWORD PTR [rax+0x0]
   14000c481:	add    BYTE PTR [rax],al
   14000c483:	add    BYTE PTR [rax],al
   14000c485:	add    BYTE PTR [rax],al
   14000c487:	(bad)  
   14000c488:	adc    DWORD PTR [rcx],edx
   14000c48a:	xchg   ebp,eax
   14000c48b:	xchg   edi,eax
   14000c48c:	xchg   edi,eax
   14000c48d:	xchg   edi,eax
   14000c48e:	cwde   
   14000c48f:	jns    0x14000c418
   14000c491:	add    BYTE PTR [rax],al
   14000c493:	add    BYTE PTR [rax],al
   14000c495:	add    BYTE PTR [rbp+0x0],dl
   14000c49b:	add    BYTE PTR [rax],al
   14000c49d:	jo     0x14000c49f
   14000c49f:	jno    0x14000c4b2
   14000c4a1:	jno    0x14000c4d4
   14000c4a3:	cmp    DWORD PTR [rcx],edi
   14000c4a5:	jns    0x14000c460
   14000c4a7:	mov    bh,0x9b
   14000c4a9:	jo     0x14000c4ab
   14000c4ab:	add    BYTE PTR [rax],al
   14000c4ad:	jns    0x14000c528
   14000c4af:	add    BYTE PTR [rax],al
   14000c4b1:	add    BYTE PTR [rax],al
   14000c4b3:	add    BYTE PTR [rsi+0x116467e7],al
   14000c4b9:	adc    DWORD PTR [rcx+0x71],edx
   14000c4bc:	jns    0x14000c4f5
   14000c4be:	cwde   
   14000c4bf:	fwait
   14000c4c0:	jns    0x14000c479
   14000c4c2:	add    BYTE PTR [rax],0x7
   14000c4c5:	xchg   edi,eax
   14000c4c6:	cwde   
   14000c4c7:	add    BYTE PTR [rax],al
   14000c4c9:	add    BYTE PTR [rax],al
   14000c4cb:	(bad)  
   14000c4cc:	out    0xc8,eax
   14000c4ce:	enter  0x1466,0x13
   14000c4d2:	adc    DWORD PTR [rcx],ebx
   14000c4d4:	(bad)  
   14000c4d5:	cdq    
   14000c4d6:	jns    0x14000c551
   14000c4d8:	mov    eax,0x9997989b
   14000c4dd:	jns    0x14000c50f
   14000c4df:	add    BYTE PTR [rax],al
   14000c4e1:	add    BYTE PTR [rax],al
   14000c4e3:	out    0xc8,eax
   14000c4e5:	out    0xe7,eax
   14000c4e7:	(bad)  
   14000c4e8:	(bad)  
   14000c4e9:	adc    DWORD PTR [rdi],edx
   14000c4eb:	(bad)  
   14000c4ec:	sbb    DWORD PTR [rbx-0x68],esi
   14000c4ef:	mov    bh,0x98
   14000c4f1:	mov    bh,0x7b
   14000c4f3:	fwait
   14000c4f4:	xchg   edi,eax
   14000c4f5:	xchg   ebx,eax
   14000c4f6:	push   rax
   14000c4f7:	add    BYTE PTR [rax],al
   14000c4f9:	add    BYTE PTR [rsi+0x7e],bh
   14000c4fc:	jle    0x14000c4c6
   14000c4fe:	enter  0x6668,0x5
   14000c502:	adc    DWORD PTR [rcx],edx
   14000c504:	xor    DWORD PTR [rdi+0x79b99793],edx
   14000c50a:	mov    ecx,0x797989
   14000c50f:	add    BYTE PTR [rax],al
   14000c511:	(bad)  
   14000c512:	out    0xc8,eax
   14000c514:	enter  0x7e6e,0x7c
   14000c518:	jbe    0x14000c56a
   14000c51a:	xor    DWORD PTR [rcx],edx
   14000c51c:	push   rbx
   14000c51d:	push   rbx
   14000c51e:	xchg   edi,eax
   14000c51f:	cwde   
   14000c520:	fwait
   14000c521:	jnp    0x14000c59c
   14000c523:	jns    0x14000c4bc
   14000c525:	xchg   edi,eax
   14000c526:	add    BYTE PTR [rax],al
   14000c528:	or     bh,ah
   14000c52a:	jle    0x14000c5aa
   14000c52c:	jle    0x14000c5aa
   14000c52e:	mov    WORD PTR [rsi+0x71016586],es
   14000c534:	adc    DWORD PTR [rdi-0x46764669],edx
   14000c53a:	mov    DWORD PTR [rdi+0x9793],esi
   14000c540:	xchg   BYTE PTR [rdi+riz*8+0x6ee87c7e],cl
   14000c547:	jl     0x14000c5c0
   14000c549:	jbe    0x14000c55b
   14000c54b:	adc    DWORD PTR [rip+0xffffffffb8793931],esi        # 0xf879fe82
   14000c551:	cwde   
   14000c552:	mov    ecx,0x707979
   14000c557:	add    BYTE PTR [rax],al
   14000c559:	mov    bh,ah
   14000c55b:	jl     0x14000c545
   14000c55d:	addr32 out 0x7e,eax
   14000c560:	jl     0x14000c5d8
   14000c562:	push   rcx
   14000c563:	adc    eax,0x98971711
   14000c568:	fwait
   14000c569:	mov    DWORD PTR [rbx-0x69],edi
   14000c56c:	cdq    
   14000c56d:	jo     0x14000c56f
   14000c56f:	add    BYTE PTR [rax],al
   14000c571:	add    BYTE PTR [rax],cl
   14000c573:	call   0xcc8d41f6
   14000c578:	xchg   BYTE PTR [rax+riz*2+0x30],dh
   14000c57c:	xor    DWORD PTR [rcx],edi
   14000c57e:	jns    0x14000c539
   14000c580:	mov    ebx,DWORD PTR [rbx+0x70799997]
   14000c586:	add    BYTE PTR [rax],al
   14000c588:	add    BYTE PTR [rax],al
   14000c58a:	add    BYTE PTR [rax],cl
   14000c58c:	in     al,dx
   14000c58d:	mov    gs,WORD PTR [rsi+0x76]
   14000c590:	je     0x14000c5a3
   14000c592:	rex.RXB add eax,0x7b395111
   14000c598:	cwde   
   14000c599:	mov    bh,0x79
   14000c59b:	mov    DWORD PTR [rcx+0x0],edi
   14000c59e:	add    BYTE PTR [rax],al
   14000c5a0:	add    BYTE PTR [rax],al
   14000c5a2:	add    BYTE PTR [rax],al
   14000c5a4:	add    BYTE PTR [rdi+rax*4+0x70141c7],cl
   14000c5ab:	add    DWORD PTR [rcx],edx
   14000c5ad:	xor    DWORD PTR [rbx-0x68],edx
   14000c5b0:	fwait
   14000c5b1:	cwde   
   14000c5b2:	fwait
   14000c5b3:	xchg   edi,eax
   14000c5b4:	xchg   edi,eax
	...
   14000c5bd:	add    BYTE PTR [rsi+0x14163474],cl
   14000c5c3:	jo     0x14000c616
   14000c5c5:	(bad)  
   14000c5c6:	xchg   edi,eax
   14000c5c7:	fwait
   14000c5c8:	js     0x14000c583
   14000c5ca:	mov    DWORD PTR [rcx+0x38],edi
	...
   14000c5d5:	add    BYTE PTR [rax],al
   14000c5d7:	je     0x14000c5f0
   14000c5d9:	add    DWORD PTR [rcx+0x61],eax
   14000c5dc:	add    edx,DWORD PTR [rcx]
   14000c5de:	sbb    DWORD PTR [rcx-0x47],edi
   14000c5e1:	mov    edx,DWORD PTR [rbx+0x9097]
	...
   14000c5ef:	(bad)  
   14000c5f0:	gs gs and eax,0x17175106
   14000c5f7:	cwde   
   14000c5f8:	fwait
   14000c5f9:	jns    0x14000c584
   14000c5fb:	jns    0x14000c66d
	...
   14000c605:	add    BYTE PTR [rax],al
   14000c607:	add    BYTE PTR [rsi+0x67],ah
   14000c60a:	rex.RXB push r14
   14000c60c:	adc    BYTE PTR [rcx],dl
   14000c60e:	adc    ebx,DWORD PTR [rbx-0x66688475]
	...
   14000c620:	(bad)  
   14000c621:	(bad)  
   14000c622:	data16 rex.RXB (bad) 
   14000c625:	push   rbx
   14000c626:	(bad)  
   14000c627:	xchg   edi,eax
   14000c628:	fwait
   14000c629:	jns    0x14000c5e4
   14000c62b:	jns    0x14000c62d
	...
   14000c639:	out    0x67,eax
   14000c63b:	fs je  0x14000c64f
   14000c63e:	adc    DWORD PTR [rbx-0x75],edi
   14000c641:	jnp    0x14000c69c
   14000c643:	ja     0x14000c645
	...
   14000c651:	add    BYTE PTR [rsi+riz*2+0x66],bh
   14000c655:	adc    DWORD PTR [rcx-0x67],esi
   14000c658:	mov    bh,0xb9
   14000c65a:	jns    0x14000c5ec
	...
   14000c668:	add    BYTE PTR [rax],al
   14000c66a:	add    BYTE PTR [rsi+0x76],dh
   14000c66d:	adc    esi,DWORD PTR [r15-0x45]
   14000c671:	jns    0x14000c6ec
   14000c673:	jo     0x14000c675
	...
   14000c681:	add    BYTE PTR [rax],al
   14000c683:	(bad)  
   14000c684:	(bad)  
   14000c685:	jo     0x14000c69c
   14000c687:	fwait
   14000c688:	jnp    0x14000c705
   14000c68a:	xchg   edi,eax
   14000c68b:	nop
	...
   14000c69c:	xchg   BYTE PTR [rbp+0x13],ah
   14000c69f:	sbb    DWORD PTR [rbx+0x7979],ecx
	...
   14000c6b1:	add    BYTE PTR [rax],al
   14000c6b3:	add    BYTE PTR [riz*8-0x464784ff],cl
   14000c6ba:	xchg   edi,eax
	...
   14000c6cb:	add    BYTE PTR [rax],al
   14000c6cd:	adc    WORD PTR [rdi],dx
   14000c6d0:	mov    ebx,0x9797
	...
   14000c6e5:	xchg   BYTE PTR [rbp+0x19],dh
   14000c6e8:	mov    ecx,DWORD PTR [rcx+0x70]
	...
   14000c6fa:	add    BYTE PTR [rax],al
   14000c6fc:	add    BYTE PTR [rsi],al
   14000c6fe:	(bad)  
   14000c6ff:	(bad)  
   14000c700:	mov    eax,0x9093
	...
   14000c715:	add    BYTE PTR [rcx+rbx*1-0x45],dh
   14000c719:	xchg   edi,eax
	...
   14000c72e:	jbe    0x14000c747
   14000c730:	mov    ebx,DWORD PTR [rcx+0x0]
	...
   14000c743:	add    BYTE PTR [rax],al
   14000c745:	add    BYTE PTR [rsi],cl
   14000c747:	adc    DWORD PTR [rcx+0x70],edi
	...
   14000c75d:	add    BYTE PTR [rax],al
   14000c75f:	jno    0x14000c7da
   14000c761:	jo     0x14000c763
	...
   14000c777:	jne    0x14000c790
	...
   14000c78d:	add    BYTE PTR [rax],al
   14000c78f:	or     BYTE PTR [rax+0x0],dh
	...
   14000c7c6:	add    BYTE PTR [rax],al
   14000c7c8:	(bad)  
   14000c7c9:	(bad)  
   14000c7ca:	(bad)  
   14000c7cb:	(bad)  
   14000c7cc:	(bad)  
   14000c7cd:	inc    DWORD PTR [rax]
   14000c7cf:	add    bh,bh
   14000c7d1:	(bad)  
   14000c7d2:	(bad)  
   14000c7d3:	(bad)  
   14000c7d4:	(bad)  
   14000c7d5:	inc    DWORD PTR [rax]
   14000c7d7:	add    bh,bh
   14000c7d9:	(bad)  
   14000c7da:	sti    
   14000c7db:	(bad)  
   14000c7dc:	(bad)  
   14000c7dd:	inc    DWORD PTR [rax]
   14000c7df:	add    bh,bh
   14000c7e1:	push   rax
   14000c7e3:	(bad)  
   14000c7e4:	(bad)  
   14000c7e5:	inc    DWORD PTR [rax]
   14000c7e7:	add    bh,bh
   14000c7e9:	push   rax
   14000c7eb:	jg     0x14000c7ec
   14000c7ed:	inc    DWORD PTR [rax]
   14000c7ef:	add    bh,bh
   14000c7f1:	jmp    rax
   14000c7f3:	(bad)  
   14000c7f4:	(bad)  
   14000c7f5:	inc    DWORD PTR [rax]
   14000c7f7:	add    bh,bh
   14000c7f9:	jmp    rax
   14000c7fb:	ud0    edi,edi
   14000c7fe:	add    BYTE PTR [rax],al
   14000c800:	(bad)  
   14000c801:	jmp    rax
   14000c803:	(bad)  
   14000c804:	(bad)  
   14000c805:	inc    DWORD PTR [rax]
   14000c807:	add    bh,bh
   14000c809:	inc    eax
   14000c80b:	(bad)  
   14000c80c:	(bad)  
   14000c80d:	inc    DWORD PTR [rax]
   14000c80f:	add    bh,bh
   14000c811:	inc    eax
   14000c813:	add    edi,edi
   14000c815:	inc    DWORD PTR [rax]
   14000c817:	add    bh,bh
   14000c819:	inc    DWORD PTR [rax+0xfeff01]
   14000c81f:	add    bh,bh
   14000c821:	inc    DWORD PTR [rax+0xfdff00]
   14000c827:	add    bh,bh
   14000c829:	inc    DWORD PTR [rax]
   14000c82b:	add    BYTE PTR [rdi-0x7],bh
   14000c82e:	add    BYTE PTR [rax],al
   14000c830:	(bad)  
   14000c831:	inc    BYTE PTR [rax]
   14000c833:	add    BYTE PTR [rdi],bh
   14000c835:	repz add BYTE PTR [rax],al
   14000c838:	(bad)  
   14000c839:	fadd   QWORD PTR [rax]
   14000c83b:	add    BYTE PTR [rdi],bl
   14000c83d:	ret    
   14000c83e:	add    BYTE PTR [rax],al
   14000c840:	inc    DWORD PTR [rax]
   14000c842:	add    BYTE PTR [rax],al
   14000c844:	(bad)  
   14000c845:	add    DWORD PTR [rax],0x0
   14000c848:	inc    BYTE PTR [rax]
   14000c84a:	add    BYTE PTR [rax],al
   14000c84c:	add    BYTE PTR [rdi],al
   14000c84e:	add    BYTE PTR [rax],al
   14000c850:	cld    
   14000c851:	add    BYTE PTR [rax],al
   14000c853:	add    BYTE PTR [rax],al
   14000c855:	(bad)  
   14000c856:	add    BYTE PTR [rax],al
   14000c858:	lock add BYTE PTR [rax],al
   14000c85b:	add    BYTE PTR [rax],al
   14000c85d:	sldt   WORD PTR [rax]
   14000c860:	loopne 0x14000c862
   14000c862:	add    BYTE PTR [rax],al
   14000c864:	add    BYTE PTR [rdi],cl
   14000c866:	add    BYTE PTR [rax],al
   14000c868:	add    BYTE PTR [rax],0x0
   14000c86b:	add    BYTE PTR [rax],al
   14000c86d:	sldt   WORD PTR [rax]
   14000c870:	add    BYTE PTR [rax],al
   14000c872:	add    BYTE PTR [rax],al
   14000c874:	add    BYTE PTR [rdi],bl
   14000c876:	add    BYTE PTR [rax],al
   14000c878:	rol    BYTE PTR [rax],0x0
   14000c87b:	add    BYTE PTR [rax],al
   14000c87d:	(bad)  
   14000c87e:	add    BYTE PTR [rax],al
   14000c880:	clc    
   14000c881:	add    BYTE PTR [rax],al
   14000c883:	add    BYTE PTR [rax],al
   14000c885:	(bad)  
   14000c886:	add    BYTE PTR [rax],al
   14000c888:	inc    BYTE PTR [rax]
   14000c88a:	add    BYTE PTR [rax],al
   14000c88c:	add    BYTE PTR [rdi],bh
   14000c88e:	add    BYTE PTR [rax],al
   14000c890:	inc    eax
   14000c892:	add    BYTE PTR [rax],al
   14000c894:	add    BYTE PTR [rdi],bh
   14000c896:	add    BYTE PTR [rax],al
   14000c898:	push   rax
   14000c89a:	add    BYTE PTR [rax],al
   14000c89c:	add    BYTE PTR [rdi],bh
   14000c89e:	add    BYTE PTR [rax],al
   14000c8a0:	(bad)  
   14000c8a1:	cld    
   14000c8a2:	add    BYTE PTR [rax],al
   14000c8a4:	add    BYTE PTR [rdi+0x0],bh
   14000c8a7:	add    bh,bh
   14000c8a9:	inc    BYTE PTR [rax]
   14000c8ab:	add    BYTE PTR [rax],al
   14000c8ad:	jg     0x14000c8af
   14000c8af:	add    bh,bh
   14000c8b1:	inc    DWORD PTR [rax]
   14000c8b3:	add    BYTE PTR [rax],al
   14000c8b5:	inc    DWORD PTR [rax]
   14000c8b7:	add    bh,bh
   14000c8b9:	inc    DWORD PTR [rax+0xff0000]
   14000c8bf:	add    bh,bh
   14000c8c1:	inc    eax
   14000c8c3:	add    BYTE PTR [rax],al
   14000c8c5:	inc    DWORD PTR [rax]
   14000c8c7:	add    bh,bh
   14000c8c9:	push   rax
   14000c8cb:	add    BYTE PTR [rcx],al
   14000c8cd:	inc    DWORD PTR [rax]
   14000c8cf:	add    bh,bh
   14000c8d1:	(bad)  
   14000c8d2:	cld    
   14000c8d3:	add    BYTE PTR [rcx],al
   14000c8d5:	inc    DWORD PTR [rax]
   14000c8d7:	add    bh,bh
   14000c8d9:	(bad)  
   14000c8da:	inc    BYTE PTR [rax]
   14000c8dc:	add    edi,edi
   14000c8de:	add    BYTE PTR [rax],al
   14000c8e0:	(bad)  
   14000c8e1:	(bad)  
   14000c8e2:	inc    DWORD PTR [rax]
   14000c8e4:	add    edi,edi
   14000c8e6:	add    BYTE PTR [rax],al
   14000c8e8:	(bad)  
   14000c8e9:	(bad)  
   14000c8ea:	inc    DWORD PTR [rax+0xff03]
   14000c8f0:	(bad)  
   14000c8f1:	(bad)  
   14000c8f2:	inc    eax
   14000c8f4:	add    edi,edi
   14000c8f6:	add    BYTE PTR [rax],al
   14000c8f8:	(bad)  
   14000c8f9:	(bad)  
   14000c8fa:	inc    eax
   14000c8fc:	(bad)  
   14000c8fd:	inc    DWORD PTR [rax]
   14000c8ff:	add    bh,bh
   14000c901:	(bad)  
   14000c902:	jmp    rax
   14000c904:	(bad)  
   14000c905:	inc    DWORD PTR [rax]
   14000c907:	add    bh,bh
   14000c909:	(bad)  
   14000c90a:	push   rax
   14000c90c:	ud0    eax,DWORD PTR [rax]
   14000c90f:	add    bh,bh
   14000c911:	(bad)  
   14000c912:	push   rax
   14000c914:	ud0    eax,DWORD PTR [rax]
   14000c917:	add    bh,bh
   14000c919:	(bad)  
   14000c91a:	(bad)  
   14000c91b:	clc    
   14000c91c:	(bad)  
   14000c91d:	inc    DWORD PTR [rax]
   14000c91f:	add    bh,bh
   14000c921:	(bad)  
   14000c922:	(bad)  
   14000c923:	cld    
   14000c924:	(bad)  
   14000c925:	inc    DWORD PTR [rax]
   14000c927:	add    bh,bh
   14000c929:	(bad)  
   14000c92a:	(bad)  
   14000c92b:	cld    
   14000c92c:	(bad)  
   14000c92d:	inc    DWORD PTR [rax]
   14000c92f:	add    bh,bh
   14000c931:	(bad)  
   14000c932:	(bad)  
   14000c933:	(bad)  
   14000c934:	jg     0x14000c935
   14000c936:	add    BYTE PTR [rax],al
   14000c938:	(bad)  
   14000c939:	(bad)  
   14000c93a:	(bad)  
   14000c93b:	(bad)  
   14000c93c:	(bad)  
   14000c93d:	inc    DWORD PTR [rax]
   14000c93f:	add    bh,bh
   14000c941:	(bad)  
   14000c942:	(bad)  
   14000c943:	(bad)  
   14000c944:	(bad)  
   14000c945:	inc    DWORD PTR [rax]
   14000c947:	add    BYTE PTR [rax],ch
   14000c949:	add    BYTE PTR [rax],al
   14000c94b:	add    BYTE PTR [rax],ah
   14000c94d:	add    BYTE PTR [rax],al
   14000c94f:	add    BYTE PTR [rax+0x0],al
   14000c952:	add    BYTE PTR [rax],al
   14000c954:	add    DWORD PTR [rax],eax
   14000c956:	add    al,0x0
   14000c958:	add    BYTE PTR [rax],al
   14000c95a:	add    BYTE PTR [rax],al
   14000c95c:	add    BYTE PTR [rdx],al
	...
   14000c976:	add    BYTE PTR [rax],0x0
   14000c979:	add    BYTE PTR [rax],0x0
   14000c97c:	add    BYTE PTR [rax+0x800080],al
   14000c982:	add    BYTE PTR [rax],al
   14000c984:	add    BYTE PTR [rax],0x80
   14000c987:	add    BYTE PTR [rax-0x7fffff80],al
   14000c98d:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000c994:	add    BYTE PTR [rax],al
   14000c996:	inc    DWORD PTR [rax]
   14000c998:	add    bh,bh
   14000c99a:	add    BYTE PTR [rax],al
   14000c99c:	add    bh,bh
   14000c99e:	inc    DWORD PTR [rax]
   14000c9a0:	inc    DWORD PTR [rax]
   14000c9a2:	add    BYTE PTR [rax],al
   14000c9a4:	inc    DWORD PTR [rax]
   14000c9a6:	inc    DWORD PTR [rax]
   14000c9a8:	(bad)  
   14000c9a9:	inc    DWORD PTR [rax]
   14000c9ab:	add    bh,bh
   14000c9ad:	(bad)  
   14000c9ae:	inc    DWORD PTR [rax]
	...
   14000c9d4:	add    BYTE PTR [rax],al
   14000c9d6:	or     BYTE PTR [rdi+0x0],dh
	...
   14000c9e4:	add    BYTE PTR [rax],al
   14000c9e6:	or     edi,DWORD PTR [rbx-0x48]
	...
   14000c9f5:	add    BYTE PTR [rax],cl
   14000c9f7:	mov    ecx,0x8089
	...
   14000ca04:	add    BYTE PTR [rax],al
   14000ca06:	jns    0x14000c9bf
   14000ca08:	mov    bh,0xb0
	...
   14000ca16:	xchg   edi,eax
   14000ca17:	xchg   edi,eax
   14000ca18:	cdq    
   14000ca19:	jns    0x14000ca1b
	...
   14000ca23:	add    BYTE PTR [rax],al
   14000ca25:	(bad)  
   14000ca26:	cmp    DWORD PTR [rcx-0x75],edi
   14000ca29:	cwde   
   14000ca2a:	mov    al,0x0
   14000ca2c:	add    BYTE PTR [rax],al
   14000ca2e:	add    BYTE PTR [rax],cl
   14000ca30:	add    BYTE PTR [rax],al
   14000ca32:	add    BYTE PTR [rax],al
   14000ca34:	add    BYTE PTR [rcx],al
   14000ca36:	adc    edx,DWORD PTR [rbx+0x589b97]
   14000ca3c:	add    BYTE PTR [rax],al
   14000ca3e:	add    BYTE PTR [rax],dl
   14000ca40:	add    BYTE PTR [rax],al
   14000ca42:	add    BYTE PTR [rax],al
   14000ca44:	add    BYTE PTR [rcx],dl
   14000ca46:	push   rcx
   14000ca47:	jns    0x14000cac2
   14000ca49:	jns    0x14000ca04
   14000ca4b:	add    BYTE PTR [rax],0x0
   14000ca4e:	jns    0x14000c9d0
   14000ca50:	add    BYTE PTR [rax],al
   14000ca52:	or     BYTE PTR [rdi+0x66],ah
   14000ca55:	push   rbx
   14000ca56:	adc    DWORD PTR [rbx],edx
   14000ca58:	adc    ebx,DWORD PTR [rax+0x7809b9b]
   14000ca5e:	xchg   edi,eax
   14000ca5f:	add    BYTE PTR [rax],al
   14000ca61:	add    BYTE PTR [rsi-0x38],bh
   14000ca64:	out    0x65,eax
   14000ca66:	adc    edx,DWORD PTR [rcx-0x69]
   14000ca69:	xchg   edi,eax
   14000ca6a:	mov    bh,0x89
   14000ca6c:	jns    0x14000caa7
   14000ca6e:	jns    0x14000ca70
   14000ca70:	add    BYTE PTR [rsi],cl
   14000ca72:	ja     0x14000ca5b
   14000ca74:	enter  0x166,0x13
   14000ca78:	push   rbx
   14000ca79:	xchg   edi,eax
   14000ca7a:	cdq    
   14000ca7b:	mov    bh,0xb7
   14000ca7d:	xchg   edi,eax
   14000ca7e:	cwde   
   14000ca7f:	add    BYTE PTR [rdi],al
   14000ca81:	out    0xce,eax
   14000ca83:	jle    0x14000cb01
   14000ca85:	xchg   DWORD PTR [rbp+0x11],eax
   14000ca88:	adc    eax,0x97988b39
   14000ca8d:	xchg   ebx,eax
   14000ca8e:	nop
   14000ca8f:	add    BYTE PTR [rax],cl
   14000ca91:	enter  0x7ce7,0x8e
   14000ca95:	jl     0x14000cb09
   14000ca97:	adc    DWORD PTR [rcx],esi
   14000ca99:	xchg   edi,eax
   14000ca9a:	cwde   
   14000ca9b:	mov    ecx,0x7079b9
   14000caa0:	add    BYTE PTR [rax],cl
   14000caa2:	out    0xe7,eax
   14000caa4:	in     eax,0xe7
   14000caa6:	gs add eax,0x779b1317
   14000caac:	jns    0x14000cb27
   14000caae:	add    BYTE PTR [rax],al
   14000cab0:	add    BYTE PTR [rax],al
   14000cab2:	or     BYTE PTR [rsi-0x39],bh
   14000cab5:	je     0x14000cac7
   14000cab7:	jo     0x14000caca
   14000cab9:	xchg   edi,eax
   14000caba:	cwde   
   14000cabb:	fwait
   14000cabc:	xchg   edi,eax
   14000cabd:	xchg   edi,eax
   14000cabe:	add    BYTE PTR [rax],al
   14000cac0:	add    BYTE PTR [rax],al
   14000cac2:	add    BYTE PTR [rax],al
   14000cac4:	xchg   BYTE PTR [rax+0x14],dl
   14000cac7:	jno    0x14000cadc
   14000cac9:	push   rbx
   14000caca:	fwait
   14000cacb:	jnp    0x14000cb46
   14000cacd:	(bad)  
   14000cace:	add    BYTE PTR [rax],al
   14000cad0:	add    BYTE PTR [rax],al
   14000cad2:	add    BYTE PTR [rax],al
   14000cad4:	add    BYTE PTR [rbp+0x61],ah
   14000cad7:	(bad)  
   14000cad8:	adc    DWORD PTR [rdi],edx
   14000cada:	cwde   
   14000cadb:	cwde   
   14000cadc:	xchg   edi,eax
   14000cadd:	nop
   14000cade:	add    BYTE PTR [rax],al
   14000cae0:	add    BYTE PTR [rax],al
   14000cae2:	add    BYTE PTR [rax],al
   14000cae4:	add    BYTE PTR [rsi+0x74],dh
   14000cae7:	je     0x14000cafe
   14000cae9:	xor    DWORD PTR [rbx-0x47],edi
   14000caec:	mov    ecx,0x70
   14000caf1:	add    BYTE PTR [rax],al
   14000caf3:	add    BYTE PTR [rax],al
   14000caf5:	or     BYTE PTR [rsi+0x67],ah
   14000caf8:	(bad)  
   14000caf9:	adc    DWORD PTR [rax+0x9097b7],ebx
   14000caff:	add    BYTE PTR [rax],al
   14000cb01:	add    BYTE PTR [rax],al
   14000cb03:	add    BYTE PTR [rax],al
   14000cb05:	add    BYTE PTR [rdi],al
   14000cb07:	(bad)  
   14000cb08:	(bad)  
   14000cb09:	(bad)  
   14000cb0a:	cmp    DWORD PTR [rdi+0x97],esi
   14000cb10:	add    BYTE PTR [rax],al
   14000cb12:	add    BYTE PTR [rax],al
   14000cb14:	add    BYTE PTR [rax],al
   14000cb16:	add    BYTE PTR [rdi],al
   14000cb18:	adc    DWORD PTR fs:[rbx-0x77],edi
   14000cb1c:	jns    0x14000cb1e
	...
   14000cb26:	add    BYTE PTR [rax],al
   14000cb28:	push   cx
   14000cb2a:	fwait
   14000cb2b:	mov    bh,0x98
	...
   14000cb35:	add    BYTE PTR [rax],al
   14000cb37:	add    BYTE PTR [rsi],al
   14000cb39:	jno    0x14000cbb3
   14000cb3b:	mov    ecx,0x70
	...
   14000cb48:	or     BYTE PTR [rcx+0x1b],ah
   14000cb4b:	mov    DWORD PTR [rax],esi
	...
   14000cb59:	sbb    edi,DWORD PTR gs:[rcx+0x80]
	...
   14000cb68:	add    BYTE PTR [rsi],al
   14000cb6a:	push   rdi
   14000cb6b:	jns    0x14000cb6d
	...
   14000cb79:	or     BYTE PTR [rbx],bl
   14000cb7b:	nop
	...
   14000cb88:	add    BYTE PTR [rax],al
   14000cb8a:	gs jo  0x14000cb8d
	...
   14000cbad:	add    BYTE PTR [rax],al
   14000cbaf:	add    bh,bh
   14000cbb1:	(bad)  
   14000cbb2:	(bad)  
   14000cbb3:	(bad)  
   14000cbb4:	(bad)  
   14000cbb5:	(bad)  
   14000cbb6:	(bad)  
   14000cbb7:	(bad)  
   14000cbb8:	(bad)  
   14000cbb9:	clc    
   14000cbba:	(bad)  
   14000cbbb:	(bad)  
   14000cbbc:	(bad)  
   14000cbbd:	clc    
   14000cbbe:	(bad)  
   14000cbbf:	(bad)  
   14000cbc0:	(bad)  
   14000cbc1:	clc    
   14000cbc2:	(bad)  
   14000cbc3:	(bad)  
   14000cbc4:	push   rax
   14000cbc6:	(bad)  
   14000cbc7:	(bad)  
   14000cbc8:	push   rax
   14000cbca:	ud0    edi,edi
   14000cbcd:	loopne 0x14000cbd6
   14000cbcf:	(bad)  
   14000cbd0:	jmp    rax
   14000cbd2:	add    edi,ebp
   14000cbd4:	inc    eax
   14000cbd6:	add    ecx,esi
   14000cbd8:	clc    
   14000cbd9:	add    BYTE PTR [rax],al
   14000cbdb:	movsxd esi,eax
   14000cbdd:	add    BYTE PTR [rax],al
   14000cbdf:	add    esp,eax
   14000cbe1:	add    BYTE PTR [rax],al
   14000cbe3:	add    eax,DWORD PTR [rax-0x7ff90000]
   14000cbe9:	add    BYTE PTR [rax],al
   14000cbeb:	(bad)  
   14000cbec:	loopne 0x14000cbee
   14000cbee:	add    BYTE PTR [rdi],cl
   14000cbf0:	clc    
   14000cbf1:	add    BYTE PTR [rax],al
   14000cbf3:	ud0    eax,DWORD PTR [rax]
   14000cbf6:	add    BYTE PTR [rdi],cl
   14000cbf8:	inc    eax
   14000cbfa:	add    BYTE PTR [rdi],bl
   14000cbfc:	inc    eax
   14000cbfe:	add    BYTE PTR [rdi],bl
   14000cc00:	jmp    rax
   14000cc02:	add    BYTE PTR [rdi],bl
   14000cc04:	(bad)  
   14000cc05:	clc    
   14000cc06:	add    BYTE PTR [rdi],bh
   14000cc08:	(bad)  
   14000cc09:	inc    BYTE PTR [rax]
   14000cc0b:	(bad)  
   14000cc0c:	(bad)  
   14000cc0d:	inc    DWORD PTR [rax]
   14000cc0f:	(bad)  
   14000cc10:	(bad)  
   14000cc11:	inc    DWORD PTR [rax-0x7f000081]
   14000cc17:	jg     0x14000cc18
   14000cc19:	inc    eax
   14000cc1b:	jg     0x14000cc1c
   14000cc1d:	jmp    rax
   14000cc1f:	(bad)  
   14000cc20:	(bad)  
   14000cc21:	jmp    rcx
   14000cc23:	(bad)  
   14000cc24:	(bad)  
   14000cc25:	push   rcx
   14000cc27:	(bad)  
   14000cc28:	(bad)  
   14000cc29:	(bad)  
   14000cc2a:	(bad)  
   14000cc2b:	(bad)  
   14000cc2c:	(bad)  
   14000cc2d:	(bad)  
   14000cc2e:	(bad)  
   14000cc2f:	jmp    FWORD PTR [rax]
   14000cc31:	add    BYTE PTR [rax],al
   14000cc33:	add    BYTE PTR [rax],dl
   14000cc35:	add    BYTE PTR [rax],al
   14000cc37:	add    BYTE PTR [rax],ah
   14000cc39:	add    BYTE PTR [rax],al
   14000cc3b:	add    BYTE PTR [rcx],al
   14000cc3d:	add    BYTE PTR [rax+rax*1],al
   14000cc40:	add    BYTE PTR [rax],al
   14000cc42:	add    BYTE PTR [rax],al
   14000cc44:	add    BYTE PTR [rax],0x0
	...
   14000cc5b:	add    BYTE PTR [rax],al
   14000cc5d:	add    BYTE PTR [rax+0x800000],al
   14000cc63:	add    BYTE PTR [rax],al
   14000cc65:	add    BYTE PTR [rax+0x8000],0x0
   14000cc6c:	add    BYTE PTR [rax],0x80
   14000cc6f:	add    BYTE PTR [rax-0x7fffff80],al
   14000cc75:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000cc7c:	add    BYTE PTR [rax],al
   14000cc7e:	inc    DWORD PTR [rax]
   14000cc80:	add    bh,bh
   14000cc82:	add    BYTE PTR [rax],al
   14000cc84:	add    bh,bh
   14000cc86:	inc    DWORD PTR [rax]
   14000cc88:	inc    DWORD PTR [rax]
   14000cc8a:	add    BYTE PTR [rax],al
   14000cc8c:	inc    DWORD PTR [rax]
   14000cc8e:	inc    DWORD PTR [rax]
   14000cc90:	(bad)  
   14000cc91:	inc    DWORD PTR [rax]
   14000cc93:	add    bh,bh
   14000cc95:	(bad)  
   14000cc96:	inc    DWORD PTR [rax]
	...
   14000cca0:	add    BYTE PTR [rax],al
   14000cca2:	add    BYTE PTR [rbx],cl
   14000cca4:	add    BYTE PTR [rax],al
   14000cca6:	add    BYTE PTR [rax],al
   14000cca8:	add    BYTE PTR [rax],al
   14000ccaa:	add    BYTE PTR [rdi-0x48],dh
   14000ccad:	add    BYTE PTR [rax],al
   14000ccaf:	add    BYTE PTR [rax],al
   14000ccb1:	add    BYTE PTR [rax],al
   14000ccb3:	cdq    
   14000ccb4:	jns    0x14000ccb6
   14000ccb6:	add    BYTE PTR [rax],al
   14000ccb8:	add    BYTE PTR [rax],al
   14000ccba:	(bad)  
   14000ccbb:	adc    ebx,DWORD PTR [rax+0x8000b0]
   14000ccc1:	xchg   BYTE PTR [rdi+rdx*1-0x6d],dh
   14000ccc5:	cwde   
   14000ccc6:	ja     0x14000cc58
   14000ccc8:	(bad)  
   14000ccc9:	out    0xe7,eax
   14000cccb:	adc    DWORD PTR [rdi],edx
   14000cccd:	fwait
   14000ccce:	cdq    
   14000cccf:	or     BYTE PTR [rax],0xce
   14000ccd2:	push   rdi
   14000ccd3:	adc    ecx,DWORD PTR gs:[rcx+0x8000083]
   14000ccda:	in     eax,0x5
   14000ccdc:	cmp    DWORD PTR [rbx-0x69],edi
   14000ccdf:	add    BYTE PTR [rax],al
   14000cce1:	add    BYTE PTR [rdi],al
   14000cce3:	rex.XB add DWORD PTR [r8+0x98],ebx
   14000ccea:	add    BYTE PTR [rsi+0x57],dh
   14000cced:	mov    ebx,0x90
   14000ccf2:	add    BYTE PTR [rax],al
   14000ccf4:	(bad)  
   14000ccf5:	jns    0x14000cd67
   14000ccf7:	add    BYTE PTR [rax],al
   14000ccf9:	add    BYTE PTR [rax],al
   14000ccfb:	add    BYTE PTR [rip+0x803b],al        # 0x140014d3c
   14000cd01:	add    BYTE PTR [rax],al
   14000cd03:	add    BYTE PTR [rdi],al
   14000cd05:	jns    0x14000cd07
   14000cd07:	add    BYTE PTR [rax],al
   14000cd09:	add    BYTE PTR [rax],al
   14000cd0b:	add    BYTE PTR [rax],al
   14000cd0d:	js     0x14000cd0f
	...
   14000cd17:	add    bh,bh
   14000cd19:	inc    DWORD PTR [rax]
   14000cd1b:	add    dh,bh
   14000cd1d:	inc    DWORD PTR [rax]
   14000cd1f:	add    ah,bh
   14000cd21:	(bad)  
   14000cd22:	add    BYTE PTR [rax],al
   14000cd24:	cld    
   14000cd25:	(bad)  
   14000cd26:	add    BYTE PTR [rax],al
   14000cd28:	clc    
   14000cd29:	sbb    eax,0x1c00000
   14000cd2e:	add    BYTE PTR [rax],al
   14000cd30:	add    BYTE PTR [rcx],0x0
   14000cd33:	add    BYTE PTR [rax-0x1ffffffd],al
   14000cd39:	add    eax,DWORD PTR [rax]
   14000cd3b:	add    al,bh
   14000cd3d:	add    eax,DWORD PTR [rax]
   14000cd3f:	add    ah,bh
   14000cd41:	(bad)  
   14000cd42:	add    BYTE PTR [rax],al
   14000cd44:	inc    DWORD PTR [rdi]
   14000cd46:	add    BYTE PTR [rax],al
   14000cd48:	inc    DWORD PTR [rdi-0x70010000]
   14000cd4e:	add    BYTE PTR [rax],al
   14000cd50:	dec    edi
   14000cd52:	add    BYTE PTR [rax],al
   14000cd54:	(bad)  
   14000cd55:	inc    DWORD PTR [rax]
   14000cd57:	add    BYTE PTR [rax],ch
   14000cd59:	add    BYTE PTR [rax],al
   14000cd5b:	add    BYTE PTR [rax],dh
   14000cd5d:	add    BYTE PTR [rax],al
   14000cd5f:	add    BYTE PTR [rax+0x0],ah
   14000cd62:	add    BYTE PTR [rax],al
   14000cd64:	add    DWORD PTR [rax],eax
   14000cd66:	or     BYTE PTR [rax],al
   14000cd68:	add    BYTE PTR [rax],al
   14000cd6a:	add    BYTE PTR [rax],al
   14000cd6c:	add    BYTE PTR [rcx],cl
	...
   14000cd76:	add    BYTE PTR [rax],al
   14000cd78:	add    BYTE PTR [rcx],al
   14000cd7a:	add    BYTE PTR [rax],al
   14000cd7c:	add    BYTE PTR [rcx],al
   14000cd7e:	add    BYTE PTR [rax],al
   14000cd80:	add    BYTE PTR [rax],al
   14000cd82:	add    BYTE PTR [rax],al
   14000cd84:	cmp    eax,0x43003f27
   14000cd89:	sub    edi,DWORD PTR [rax+rax*1]
   14000cd8c:	rex.WB (bad) 
   14000cd8e:	cmp    al,0x0
   14000cd90:	rex.WRXB xor r15,QWORD PTR [r15]
   14000cd93:	add    BYTE PTR [rbx+0x36],dl
   14000cd96:	cmp    eax,0x3b3d5d00
   14000cd9b:	add    BYTE PTR [rcx+0x3f],ah
   14000cd9e:	xor    eax,0x2e4e7600
   14000cda3:	add    BYTE PTR [rcx+0x51],bh
   14000cda6:	sub    al,0x0
   14000cda8:	imul   eax,DWORD PTR [rbp+0x34],0x38436400
   14000cdaf:	add    BYTE PTR [rcx+0x47],ch
   14000cdb2:	cmp    DWORD PTR [rax],eax
   14000cdb4:	je     0x14000ce04
   14000cdb6:	xor    BYTE PTR [rax],al
   14000cdb8:	ja     0x14000ce0a
   14000cdba:	xor    BYTE PTR [rax],al
   14000cdbc:	jp     0x14000ce10
   14000cdbe:	xor    eax,0x39517800
   14000cdc3:	add    BYTE PTR [rbx],bl
   14000cdc5:	adc    DWORD PTR [rsi+0x0],eax
   14000cdc8:	(bad)  
   14000cdc9:	adc    BYTE PTR [rsi+0x0],cl
   14000cdcc:	sbb    BYTE PTR [rax],dl
   14000cdce:	rex.WX add BYTE PTR [rsi],dl
   14000cdd1:	adc    DWORD PTR [rax+rax*1+0x18],edx
   14000cdd5:	adc    DWORD PTR [rbx+0x0],edx
   14000cdd8:	(bad)  
   14000cdd9:	adc    DWORD PTR [rax+rax*1+0x24],ebx
   14000cddd:	adc    eax,0x17290045
   14000cde2:	rex.RX add BYTE PTR [rsi],r12b
   14000cde5:	sbb    BYTE PTR [rsi+0x0],al
   14000cde8:	sub    ebx,DWORD PTR [rdx]
   14000cdea:	add    BYTE PTR [r8],r12b
   14000cded:	adc    al,0x4a
   14000cdef:	add    BYTE PTR [rbx],ch
   14000cdf1:	sbb    al,0x4b
   14000cdf3:	add    BYTE PTR [rcx],dh
   14000cdf5:	sbb    eax,0x21340044
   14000cdfa:	rex.XB add BYTE PTR [r11],dil
   14000cdfd:	and    eax,0x283f0041
   14000ce02:	add    BYTE PTR [r15+riz*1],r14b
   14000ce06:	pop    rbx
   14000ce07:	add    BYTE PTR [rip+0x13006313],dl        # 0x153013120
   14000ce0d:	adc    al,0x6b
   14000ce0f:	add    BYTE PTR [rbx],dl
   14000ce11:	(bad)  
   14000ce12:	jae    0x14000ce14
   14000ce14:	adc    al,0x18
   14000ce16:	ja     0x14000ce18
   14000ce18:	adc    eax,0x18007b1a
   14000ce1d:	sbb    edi,DWORD PTR [rdx+0x0]
   14000ce20:	rex (bad) 
   14000ce22:	add    BYTE PTR [rbx+r13*1+0x41],al
   14000ce27:	add    BYTE PTR [rbp+0x32],cl
   14000ce2a:	add    BYTE PTR [rcx+0x56],r14b
   14000ce2e:	push   rdi
   14000ce2f:	add    BYTE PTR [rsi+0x53],ah
   14000ce32:	add    BYTE PTR gs:[rbp-0x58ffe497],bl
   14000ce39:	outs   dx,DWORD PTR ds:[rsi]
   14000ce3a:	sbb    BYTE PTR [rax],al
   14000ce3c:	lods   al,BYTE PTR ds:[rsi]
   14000ce3d:	jae    0x14000ce56
   14000ce3f:	add    BYTE PTR [rbx-0x4dffe58e],ch
   14000ce45:	jbe    0x14000ce5e
   14000ce47:	add    BYTE PTR [rbp-0x46ffe587],dh
   14000ce4d:	jnp    0x14000ce6b
   14000ce4f:	add    BYTE PTR [rbp-0x76ffd8a8],al
   14000ce55:	pop    rbp
   14000ce56:	(bad)  
   14000ce57:	add    BYTE PTR [rax-0x7affd0ab],al
   14000ce5d:	pop    rcx
   14000ce5e:	sub    DWORD PTR [rax],eax
   14000ce60:	lea    ebx,[rsi+0x2a]
   14000ce63:	add    BYTE PTR [rax-0x7bffccab],al
   14000ce69:	pop    rdx
   14000ce6a:	xor    eax,DWORD PTR [rax]
   14000ce6c:	mov    BYTE PTR [rax+rsi*1+0x0],bl
   14000ce70:	xchg   ecx,eax
   14000ce71:	(bad)  
   14000ce72:	and    DWORD PTR [rax],eax
   14000ce74:	xchg   esp,eax
   14000ce75:	sub    al,BYTE PTR fs:[rax]
   14000ce78:	mov    WORD PTR [rcx+0x3d],fs
   14000ce7b:	add    BYTE PTR [rbx-0x5bffcc96],bl
   14000ce81:	outs   dx,DWORD PTR ds:[rsi]
   14000ce82:	sub    DWORD PTR [rax],eax
   14000ce84:	lods   al,BYTE PTR ds:[rsi]
   14000ce85:	jne    0x14000cead
   14000ce87:	add    BYTE PTR [rbp-0x57ffd18f],ah
   14000ce8d:	ja     0x14000cebe
   14000ce8f:	add    BYTE PTR [rcx-0x4bffdb81],bh
   14000ce95:	jnp    0x14000cec3
   14000ce97:	add    BYTE PTR [rsi+rsi*2+0x79a80031],ch
   14000ce9e:	xor    al,0x0
   14000cea0:	lea    esp,[rdx+0x44]
   14000cea3:	add    BYTE PTR [rdi-0x62ffb495],dl
   14000cea9:	jno    0x14000cef2
   14000ceab:	add    BYTE PTR [rsi-0x63ffab8c],bl
   14000ceb1:	js     0x14000cf05
   14000ceb3:	add    BYTE PTR [rdi-0x54ffae86],ah
   14000ceb9:	jge    0x14000cf0f
   14000cebb:	add    BYTE PTR [rax+rax*4-0x7f48ffdb],bh
   14000cec2:	(bad)  
   14000cec3:	add    BYTE PTR [rcx+rax*4-0x7939ffcb],dh
   14000ceca:	es add bl,al
   14000cecd:	mov    DWORD PTR [rip+0x3692ce00],esi        # 0x176939cd3
   14000ced3:	add    BYTE PTR [rbx-0x46ffbd7e],dh
   14000ced9:	test   BYTE PTR [rax+rax*1-0x42],cl
   14000cedd:	mov    BYTE PTR [rsi+0x0],cl
   14000cee0:	mov    bl,0x81
   14000cee2:	push   rdx
   14000cee3:	add    BYTE PTR [rax-0x45ffaf7c],bh
   14000cee9:	xchg   esp,eax
   14000ceea:	pop    rsi
   14000ceeb:	add    ah,al
   14000ceed:	mov    WORD PTR [rax+rax*1-0x38],cs
   14000cef1:	mov    cs,WORD PTR [rbx+0x0]
   14000cef4:	iret   
   14000cef5:	xchg   edx,eax
   14000cef6:	rex.RXB add r15b,r8b
   14000cef9:	xchg   ecx,eax
   14000cefa:	rex.WRXB add r12b,r9b
   14000cefd:	nop
   14000cefe:	rex.WB add r9b,dl
   14000cf01:	xchg   esp,eax
   14000cf02:	rex.X add bpl,dl
   14000cf05:	(bad)  
   14000cf06:	add    sil,r10b
   14000cf09:	popf   
   14000cf0a:	rex.W add al,bl
   14000cf0d:	sahf   
   14000cf0e:	rex.WB add r13b,cl
   14000cf11:	pushf  
   14000cf12:	pop    rcx
   14000cf13:	add    cl,bl
   14000cf15:	movabs eax,ds:0xa1d90056a0d4004e
   14000cf1e:	push   rdx
   14000cf1f:	add    dh,dl
   14000cf21:	movabs ds:0x9cc800669bc1005b,eax
   14000cf2a:	push   0x0
   14000cf2c:	(bad)  
   14000cf2d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000cf2e:	imul   eax,DWORD PTR [rax],0xffffffd6
   14000cf31:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000cf32:	movsxd eax,DWORD PTR [rax]
   14000cf34:	(bad)  
   14000cf35:	stos   BYTE PTR es:[rdi],al
   14000cf36:	outs   dx,BYTE PTR ds:[rsi]
   14000cf37:	add    dl,cl
   14000cf39:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000cf3a:	jnp    0x14000cf3c
   14000cf3c:	(bad)  
   14000cf3d:	scas   al,BYTE PTR es:[rdi]
   14000cf3e:	jns    0x14000cf40
   14000cf40:	(bad)  
   14000cf41:	sbb    eax,DWORD PTR [rax-0x7be3e800]
   14000cf47:	add    BYTE PTR [rdx],bl
   14000cf49:	(bad)  
   14000cf4a:	mov    DWORD PTR [rax],eax
   14000cf4c:	sbb    esp,DWORD PTR [rcx]
   14000cf4e:	mov    WORD PTR [rax],es
   14000cf50:	sbb    eax,0x37009225
   14000cf55:	(bad)  
   14000cf56:	test   DWORD PTR [rax],eax
   14000cf58:	and    BYTE PTR [rax],ch
   14000cf5a:	xchg   esi,eax
   14000cf5b:	add    BYTE PTR [rbx],ah
   14000cf5d:	sub    eax,0x2923009c
   14000cf62:	movabs al,ds:0xa8352600a3312400
   14000cf6b:	add    BYTE PTR [rsi],ah
   14000cf6d:	cmp    BYTE PTR [rdx-0x51c6d800],ch
   14000cf73:	add    BYTE PTR [rcx],ch
   14000cf75:	cmp    eax,0x332c00b2
   14000cf7a:	mov    esi,0xbe373100
   14000cf7f:	add    BYTE PTR [rbx],dh
   14000cf81:	cmp    bh,BYTE PTR [rbp-0x49bed600]
   14000cf87:	add    BYTE PTR [rbx],ch
   14000cf89:	rex.R mov ebx,0xbe4b2c00
   14000cf8f:	add    BYTE PTR [rax+rax*2],bh
   14000cf92:	mov    ecx,0x83596000
   14000cf97:	add    BYTE PTR [rcx+0x5c],bl
   14000cf9a:	movabs eax,ds:0xb9484500b34b4900
   14000cfa3:	add    BYTE PTR [rsi+0x50],cl
   14000cfa6:	mov    dh,0x0
   14000cfa8:	rex.WRXB push r14
   14000cfaa:	mov    edi,0xb5575700
   14000cfaf:	add    BYTE PTR [rbp+0x5c],bl
   14000cfb2:	mov    bl,0x0
   14000cfb4:	(bad)  
   14000cfb5:	pop    rdi
   14000cfb6:	mov    ah,0x0
   14000cfb8:	imul   esp,DWORD PTR [rsi-0x4f],0xb26f7400
   14000cfbf:	add    BYTE PTR [rbp+0x70],dh
   14000cfc2:	mov    cl,0x0
   14000cfc4:	sub    eax,0x2e00c234
   14000cfc9:	(bad)  
   14000cfca:	enter  0x2e00,0x3a
   14000cfce:	retf   
   14000cfcf:	add    BYTE PTR [rax],dh
   14000cfd1:	cmp    cl,al
   14000cfd3:	add    BYTE PTR [rdi],ch
   14000cfd5:	rol    BYTE PTR ds:[rax],1
   14000cfd8:	xor    BYTE PTR [rdi],bh
   14000cfda:	rol    BYTE PTR [rax],1
   14000cfdc:	sub    eax,0x2f00c34a
   14000cfe1:	rex.X retf 0x2f00
   14000cfe5:	rex.WRX enter 0x2f00,0x50
   14000cfea:	leave  
   14000cfeb:	add    BYTE PTR [rax],dh
   14000cfed:	push   rdx
   14000cfee:	int3   
   14000cfef:	add    BYTE PTR [rax],dh
   14000cff1:	rex.XB (bad) 
   14000cff3:	add    BYTE PTR [rdx],dh
   14000cff5:	rex.RXB fadd DWORD PTR [r8]
   14000cff8:	xor    cl,BYTE PTR [rbx-0x25]
   14000cffb:	add    BYTE PTR [rdx],dh
   14000cffd:	push   rsi
   14000cffe:	rol    BYTE PTR [rax],cl
   14000d000:	xor    bl,BYTE PTR [rax-0x2e]
   14000d003:	add    BYTE PTR [rax+rbx*2],dh
   14000d006:	rol    DWORD PTR [rax],cl
   14000d008:	xor    ebx,DWORD PTR [rax-0x2b]
   14000d00b:	add    BYTE PTR [rcx+rbx*2],dh
   14000d00e:	(bad)  
   14000d00f:	add    BYTE PTR [rsp+rbx*2],dh
   14000d012:	xlat   BYTE PTR ds:[rbx]
   14000d013:	add    BYTE PTR [rip+0x3a00db5c],dh        # 0x17a01ab75
   14000d019:	pop    rbp
   14000d01a:	fild   WORD PTR [rax]
   14000d01c:	xor    DWORD PTR [rcx-0x33],esp
   14000d01f:	add    BYTE PTR [rsi],dh
   14000d021:	(bad)  
   14000d022:	fld    QWORD PTR [rax]
   14000d024:	data16 fild WORD PTR ss:[rax]
   14000d028:	xor    al,0x6e
   14000d02a:	fadd   DWORD PTR [rax]
   14000d02c:	xor    al,0x54
   14000d02e:	loope  0x14000d030
   14000d030:	ss pop rsp
   14000d032:	in     al,0x0
   14000d034:	ss movsxd esp,ebx
   14000d037:	add    BYTE PTR [rax],bh
   14000d039:	fs out 0x0,eax
   14000d03c:	(bad)  
   14000d03d:	push   0xffffffffffffffe6
   14000d03f:	add    BYTE PTR [rax],bh
   14000d041:	outs   dx,DWORD PTR ds:[rsi]
   14000d042:	out    0x0,al
   14000d044:	(bad)  
   14000d045:	ins    DWORD PTR es:[rdi],dx
   14000d046:	call   0x1286d084b
   14000d04b:	add    BYTE PTR [rsi],dh
   14000d04d:	jbe    0x14000d02f
   14000d04f:	add    BYTE PTR [rdi],dh
   14000d051:	jns    0x14000d039
   14000d053:	add    BYTE PTR [rax],bh
   14000d055:	jl     0x14000d03c
   14000d057:	add    BYTE PTR [rax],bh
   14000d059:	jno    0x14000d044
   14000d05b:	add    BYTE PTR [rcx],bh
   14000d05d:	jne    0x14000d049
   14000d05f:	add    BYTE PTR [rdx],bh
   14000d061:	jns    0x14000d04d
   14000d063:	add    BYTE PTR [rip+0x3900ea79],bh        # 0x17901bae2
   14000d069:	jge    0x14000d055
   14000d06b:	add    BYTE PTR [rdi*2+0x754400ea],bh
   14000d072:	fld    QWORD PTR [rax]
   14000d074:	rex.XB jnp 0x14000d05f
   14000d077:	add    BYTE PTR [rdx],bh
   14000d079:	sub    bl,0x0
   14000d07c:	cmp    al,BYTE PTR [rdx-0x7dc3ff14]
   14000d082:	in     al,dx
   14000d083:	add    BYTE PTR [rdx],bh
   14000d085:	test   esp,ebp
   14000d087:	add    BYTE PTR [rax*4-0x76c4ff14],bh
   14000d08e:	in     al,dx
   14000d08f:	add    BYTE PTR [rdx+rcx*4],bh
   14000d092:	in     eax,dx
   14000d093:	add    BYTE PTR [rbx],bh
   14000d095:	mov    gs,ebp
   14000d097:	add    BYTE PTR [rcx*4-0x6ec4ff12],bh
   14000d09e:	out    dx,al
   14000d09f:	add    BYTE PTR [rcx+rdx*4],bh
   14000d0a2:	out    dx,al
   14000d0a3:	add    BYTE PTR [rdx],bh
   14000d0a5:	xchg   ebp,eax
   14000d0a6:	out    dx,al
   14000d0a7:	add    BYTE PTR [rdx],bh
   14000d0a9:	cdq    
   14000d0aa:	out    dx,al
   14000d0ab:	add    BYTE PTR [rdx],bh
   14000d0ad:	sahf   
   14000d0ae:	out    dx,eax
   14000d0af:	add    BYTE PTR [rdx],bh
   14000d0b1:	fwait
   14000d0b2:	lock add BYTE PTR [rbx],bh
   14000d0b5:	movabs al,ds:0xa83a00efa13d00ef
   14000d0be:	(bad)  
   14000d0bf:	add    BYTE PTR [rbx],bh
   14000d0c1:	mov    cl,0xec
   14000d0c3:	add    BYTE PTR [rdx],bh
   14000d0c5:	movabs ds:0xa73c00f0a53a00f1,al
   14000d0ce:	lock add BYTE PTR [rdx],bh
   14000d0d1:	test   eax,0xad3900f1
   14000d0d6:	repnz add BYTE PTR [rbp*4-0x4fc6ff0f],bh
   14000d0de:	repnz add BYTE PTR [rax+rsi*4],bh
   14000d0e2:	repnz add BYTE PTR [rbx],bh
   14000d0e5:	mov    ah,0xf3
   14000d0e7:	add    BYTE PTR [rbx],bh
   14000d0e9:	mov    bh,0xf4
   14000d0eb:	add    BYTE PTR [rax],bh
   14000d0ed:	mov    eax,0xba3e00f2
   14000d0f2:	repnz add BYTE PTR [rbx],bh
   14000d0f5:	mov    ecx,0x825600f4
   14000d0fa:	fld    DWORD PTR [rax]
   14000d0fc:	push   rcx
   14000d0fd:	sbb    esi,0x0
   14000d100:	push   0xffffffffffffff96
   14000d102:	(bad)  
   14000d103:	add    BYTE PTR [rax-0x67],bh
   14000d106:	mov    DWORD PTR [rax],0xc89472
   14000d10c:	movsxd ecx,DWORD PTR [rbx+rdx*8-0x304a8d00]
   14000d113:	add    BYTE PTR [rsi-0x4a],dh
   14000d116:	(bad)  
   14000d117:	add    BYTE PTR [rdi-0x72],al
   14000d11a:	in     eax,0x0
   14000d11c:	rex.RXB lods eax,DWORD PTR ds:[rsi]
   14000d11e:	jmp    0x14000d120
   14000d120:	rex.RB mov r12b,0xec
   14000d123:	add    BYTE PTR [rip+0x3c00eccc],bh        # 0x17c01bdf5
   14000d129:	shr    ch,cl
   14000d12b:	add    BYTE PTR [rip+0x3800ebdc],bh        # 0x17801bd0d
   14000d131:	(bad)  
   14000d132:	repnz add BYTE PTR [rsi],dh
   14000d135:	int    0xf1
   14000d137:	add    BYTE PTR [rdx-0x77ff665a],bh
   14000d13d:	(bad)  
   14000d13e:	lods   al,BYTE PTR ds:[rsi]
   14000d13f:	add    BYTE PTR [rsi-0x76ff4d80],al
   14000d145:	xor    DWORD PTR [rdx-0x47716c00],0x0
   14000d14c:	cwde   
   14000d14d:	nop
   14000d14e:	mov    bh,0x0
   14000d150:	(bad)  
   14000d151:	lods   eax,DWORD PTR ds:[rsi]
   14000d152:	mov    esi,0xb5a7a000
   14000d157:	add    BYTE PTR [rcx-0x31ff4258],ah
   14000d15d:	lods   al,BYTE PTR ds:[rsi]
   14000d15e:	add    BYTE PTR [rax],0xd4
   14000d161:	mov    ah,0x8c
   14000d163:	add    dl,bl
   14000d165:	mov    esp,0xbfdc0095
   14000d16a:	fwait
   14000d16b:	add    BYTE PTR [rsi+riz*4-0x4970ff40],dl
   14000d172:	(bad)  
   14000d173:	add    BYTE PTR [rdi+rax*8+0xdb],dl
   14000d17a:	add    BYTE PTR [rax],al
   14000d17c:	(bad)  
   14000d17d:	(bad)  
   14000d17e:	inc    DWORD PTR [rax]
	...
   14000d1f4:	add    ch,bh
	...
   14000d222:	add    BYTE PTR [rax],al
   14000d224:	in     eax,0xdd
   14000d226:	fucom  st(5)
	...
   14000d254:	fstp   st(5)
   14000d256:	fstp   st(5)
   14000d258:	call   0x14000d25d
	...
   14000d281:	add    BYTE PTR [rax],al
   14000d283:	cld    
   14000d284:	fstp   st(5)
   14000d286:	fcmovu st,st(2)
   14000d288:	(bad)  
   14000d289:	(bad)  
   14000d28a:	hlt    
	...
   14000d2b3:	out    0xda,eax
   14000d2b5:	(bad)  
   14000d2b6:	(bad)  
   14000d2b7:	ror    dh,cl
   14000d2b9:	retf   0xfbc7
	...
   14000d2e0:	add    BYTE PTR [rax],al
   14000d2e2:	add    dl,cl
   14000d2e4:	retf   0xcaca
   14000d2e7:	retf   0xc7c7
   14000d2ea:	ret    
   14000d2eb:	shl    dh,0x0
	...
   14000d312:	faddp  st(0),st
   14000d314:	ret    
   14000d315:	ret    
   14000d316:	ret    
   14000d317:	ret    
   14000d318:	rol    al,0xc0
   14000d31b:	mov    ebx,0xbb
	...
   14000d340:	add    BYTE PTR [rax],al
   14000d342:	movabs al,ds:0xbbb7bbb7bbb7b0a9
   14000d34b:	mov    bh,0xb7
   14000d34d:	mov    ebp,0x0
	...
   14000d36e:	add    BYTE PTR [rax],al
   14000d370:	add    BYTE PTR [rsi-0x5b647c83],al
   14000d376:	test   eax,0xb2b2afad
   14000d37b:	mov    bh,0xbb
   14000d37d:	mov    ebx,0xde
	...
   14000d38e:	add    dl,dh
	...
   14000d3a0:	add    BYTE PTR [rdi+rsi*2+0x7b],dh
   14000d3a4:	add    DWORD PTR [rbx-0x525b5f67],0xb7b7b2af
   14000d3ae:	mov    ebx,0xe3
	...
   14000d3bb:	add    BYTE PTR [rax],al
   14000d3bd:	add    BYTE PTR [rax+rax*1+0x0],al
	...
   14000d3d0:	jne    0x14000d444
   14000d3d2:	je     0x14000d44a
   14000d3d4:	jns    0x14000d451
   14000d3d6:	add    DWORD PTR [rbx-0x52565f65],0xbbbbb7b1
   14000d3e0:	loop   0x14000d3e2
	...
   14000d3ea:	add    BYTE PTR [rax],al
   14000d3ec:	add    BYTE PTR [rax+0x8c],al
	...
   14000d3fe:	add    BYTE PTR [rbp+0x73717025],al
   14000d404:	je     0x14000d47d
   14000d406:	jnp    0x14000d485
   14000d408:	add    DWORD PTR [rbx-0x4e505b5e],0xffffffb7
   14000d40f:	mov    ebx,0xe1c0
	...
   14000d41c:	xchg   esp,eax
   14000d41d:	jle    0x14000d41f
	...
   14000d427:	add    BYTE PTR [rax],al
   14000d429:	add    BYTE PTR [rdx+0x0],ch
   14000d42c:	add    BYTE PTR [rax],al
   14000d42e:	sub    al,0x16
   14000d430:	and    esp,DWORD PTR [rip+0x74737225]        # 0x1b474465b
   14000d436:	ja     0x14000d4b2
   14000d438:	jge    0x14000d3bc
   14000d43a:	cdq    
   14000d43b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d43c:	lods   eax,DWORD PTR ds:[rsi]
   14000d43d:	mov    cl,0xb7
   14000d43f:	mov    ebx,0xe0c3c0
   14000d444:	add    BYTE PTR [rax],al
   14000d446:	add    BYTE PTR [rax],al
   14000d448:	add    BYTE PTR [rax],al
   14000d44a:	icebp  
   14000d44b:	jle    0x14000d4cb
   14000d44d:	test   BYTE PTR [rax],al
	...
   14000d457:	add    BYTE PTR [rsi+0x5d],ch
   14000d45a:	pop    rdi
   14000d45b:	pop    rsp
   14000d45c:	push   rbp
   14000d45d:	cmp    BYTE PTR [r14+rdx*1],r11b
   14000d461:	and    esp,DWORD PTR [rip+0x74737225]        # 0x1b474468c
   14000d467:	ja     0x14000d4e4
   14000d469:	jge    0x14000d3ed
   14000d46b:	fwait
   14000d46c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d46d:	lods   eax,DWORD PTR ds:[rsi]
   14000d46e:	mov    bh,0xbb
   14000d470:	rol    bl,0xc3
   14000d473:	out    0xf5,al
   14000d475:	add    BYTE PTR [rax],al
   14000d477:	add    BYTE PTR [rax],al
   14000d479:	mov    dl,BYTE PTR [rbx+0xf17e7e]
	...
   14000d487:	fs (bad) 
   14000d489:	(bad)  
   14000d48a:	pop    rdi
   14000d48b:	pop    rdi
   14000d48c:	pop    rbx
   14000d48d:	push   rsi
   14000d48e:	rex.RB (bad) 
   14000d490:	sbb    BYTE PTR [rbx+riz*1],dl
   14000d493:	and    eax,0x74737225
   14000d498:	jns    0x14000d515
   14000d49a:	add    DWORD PTR [rdx-0x444e525d],0xffffffc0
   14000d4a1:	rol    bl,0xc3
   14000d4a4:	ret    
   14000d4a5:	mov    ebx,0x939ea6bc
   14000d4aa:	xchg   ebx,eax
   14000d4ab:	jle    0x14000d52b
	...
   14000d4b5:	add    BYTE PTR [rdx+0x61],ah
   14000d4b8:	(bad)  
   14000d4b9:	(bad)  
   14000d4ba:	(bad)  
   14000d4bb:	pop    rdi
   14000d4bc:	pop    rsp
   14000d4bd:	pop    rbx
   14000d4be:	pop    rcx
   14000d4bf:	rex.RX or eax,0x2523141b
   14000d4c5:	and    eax,0x79767472
   14000d4ca:	jl     0x14000d44e
   14000d4cc:	movabs ds:0xc0c3c3c3c0b7b2a4,al
   14000d4d5:	mov    ebx,0x939dabb2
   14000d4da:	jle    0x14000d55a
   14000d4dc:	mov    eax,DWORD PTR [rax]
   14000d4de:	add    BYTE PTR [rax],al
   14000d4e0:	add    BYTE PTR [rax],al
   14000d4e2:	add    BYTE PTR [rax],al
   14000d4e4:	imul   esp,DWORD PTR [rbx+0x61],0x61
   14000d4e8:	(bad)  
   14000d4e9:	(bad)  
   14000d4ea:	(bad)  
   14000d4eb:	pop    rdi
   14000d4ec:	pop    rsp
   14000d4ed:	pop    rbx
   14000d4ee:	pop    rcx
   14000d4ef:	pop    rcx
   14000d4f0:	rex.X (bad) 
   14000d4f2:	adc    edx,DWORD PTR [rsi]
   14000d4f4:	and    al,0x25
   14000d4f6:	jo     0x14000d56a
   14000d4f8:	je     0x14000d571
   14000d4fa:	jnp    0x14000d47e
   14000d4fc:	cdq    
   14000d4fd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d4fe:	mov    dl,0xb7
   14000d500:	rol    dh,0xc6
   14000d503:	ret    
   14000d504:	ret    
   14000d505:	mov    ebx,0x9296abb1
   14000d50a:	jle    0x14000d58a
   14000d50c:	add    BYTE PTR [rax],al
   14000d50e:	add    BYTE PTR [rax],al
   14000d510:	add    BYTE PTR [rax],al
   14000d512:	add    BYTE PTR [rsi+0x63],ah
   14000d515:	movsxd esp,DWORD PTR [rbx+0x61]
   14000d518:	(bad)  
   14000d519:	(bad)  
   14000d51a:	(bad)  
   14000d51b:	(bad)  
   14000d51c:	pop    rdi
   14000d51d:	pop    rbx
   14000d51e:	push   rdi
   14000d51f:	pop    rcx
   14000d520:	pop    rax
   14000d521:	add    dl,BYTE PTR [rbx]
   14000d524:	and    ah,BYTE PTR ds:0x79767371
   14000d52b:	jge    0x14000d4af
   14000d52d:	movabs ds:0xb7c0c3c6c3c0b7ae,eax
   14000d536:	lods   eax,DWORD PTR ds:[rsi]
   14000d537:	sahf   
   14000d538:	xchg   ebp,eax
   14000d539:	xchg   edx,eax
   14000d53a:	jle    0x14000d4d0
   14000d53c:	add    BYTE PTR [rax],al
   14000d53e:	add    BYTE PTR [rax],al
   14000d540:	add    bh,dh
   14000d542:	gs gs movsxd esp,DWORD PTR gs:[rbx+0x63]
   14000d548:	(bad)  
   14000d549:	(bad)  
   14000d54a:	(bad)  
   14000d54b:	(bad)  
   14000d54c:	pop    rdi
   14000d54d:	pop    rbx
   14000d54e:	push   rdi
   14000d54f:	pop    rcx
   14000d550:	pop    rax
   14000d551:	rex.WRB cmp rax,0x2523131a
   14000d557:	and    eax,0x7b777473
   14000d55c:	(bad)  
   14000d55d:	movabs ds:0xb7c0c3c6c6c0b7ad,eax
   14000d566:	lods   al,BYTE PTR ds:[rsi]
   14000d567:	popf   
   14000d568:	xchg   ebx,eax
   14000d569:	jle    0x14000d5e9
   14000d56b:	pop    QWORD PTR [rax]
   14000d56d:	add    BYTE PTR [rax],al
   14000d56f:	add    cl,bh
   14000d571:	gs gs gs gs movsxd esp,DWORD PTR gs:[rbx+0x63]
   14000d579:	(bad)  
   14000d57a:	(bad)  
   14000d57b:	(bad)  
   14000d57c:	pop    rdi
   14000d57d:	pop    rsp
   14000d57e:	push   rdi
   14000d57f:	pop    rcx
   14000d580:	pop    rax
   14000d581:	rex.WRX
   14000d582:	rex.WX or rax,0x25241511
   14000d588:	jno    0x14000d5fc
   14000d58a:	jbe    0x14000d607
   14000d58c:	(bad)  
   14000d58d:	fwait
   14000d58e:	lods   eax,DWORD PTR ds:[rsi]
   14000d58f:	mov    bh,0xc0
   14000d591:	mov    dh,0xc3
   14000d594:	shl    BYTE PTR [rcx+0x7e9396ab],0x7e
   14000d59b:	add    BYTE PTR [rax],al
   14000d59d:	add    BYTE PTR [rax],al
   14000d59f:	add    BYTE PTR [rax],al
   14000d5a1:	add    dl,bh
   14000d5a3:	ins    DWORD PTR es:[rdi],dx
   14000d5a4:	gs movsxd esp,DWORD PTR gs:[ebx+0x63]
   14000d5aa:	(bad)  
   14000d5ab:	(bad)  
   14000d5ac:	(bad)  
   14000d5ad:	pop    rbx
   14000d5ae:	pop    rbx
   14000d5af:	pop    rcx
   14000d5b0:	rex.WRX
   14000d5b1:	rex.WRX
   14000d5b2:	rex.WXB cmp rax,QWORD PTR [r11]
   14000d5b5:	adc    edx,DWORD PTR [rsi]
   14000d5b7:	and    al,0x25
   14000d5b9:	jb     0x14000d631
   14000d5bb:	jns    0x14000d63a
   14000d5bd:	cdq    
   14000d5be:	lods   eax,DWORD PTR ds:[rsi]
   14000d5bf:	mov    bh,0xc0
   14000d5c1:	mov    bh,0xc3
   14000d5c4:	mov    ebx,0x9295abb1
   14000d5c9:	jle    0x14000d553
	...
   14000d5d3:	add    BYTE PTR [rax],al
   14000d5d5:	outs   dx,DWORD PTR ds:[rsi]
   14000d5d6:	gs movsxd esp,DWORD PTR gs:[rdx+0x61]
   14000d5db:	(bad)  
   14000d5dc:	pop    rbp
   14000d5dd:	pop    rsp
   14000d5de:	push   rdi
   14000d5df:	pop    rcx
   14000d5e0:	rex.WRX
   14000d5e1:	rex.WXB sub bl,BYTE PTR [r9]
   14000d5e4:	(bad)  
   14000d5e5:	sbb    edx,DWORD PTR [rip+0x73722523]        # 0x1b372fb0e
   14000d5eb:	ja     0x14000d669
   14000d5ed:	cdq    
   14000d5ee:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d5ef:	mov    bh,0xc0
   14000d5f1:	mov    edi,0x9eaebac6
   14000d5f7:	xchg   ebx,eax
   14000d5f8:	jle    0x14000d58c
   14000d5fa:	lock add BYTE PTR [rax],al
	...
   14000d605:	add    BYTE PTR [rax],al
   14000d607:	cli    
   14000d608:	push   0x60616163
   14000d60d:	pop    rsp
   14000d60e:	push   rdi
   14000d60f:	pop    rcx
   14000d610:	rex.WB and BYTE PTR [r9],bl
   14000d613:	adc    al,BYTE PTR [rdx]
   14000d615:	or     dl,BYTE PTR [rcx]
   14000d617:	(bad)  
   14000d618:	and    al,0x70
   14000d61a:	jb     0x14000d692
   14000d61c:	jnp    0x14000d5a0
   14000d61e:	lods   al,BYTE PTR ds:[rsi]
   14000d61f:	mov    bh,0xc6
   14000d621:	mov    edi,0x9daeb7c6
   14000d627:	xchg   ebx,eax
   14000d628:	jle    0x14000d6a8
	...
   14000d63a:	ins    DWORD PTR es:[rdi],dx
   14000d63b:	(bad)  
   14000d63c:	pop    rbp
   14000d63d:	pop    rsp
   14000d63e:	push   rdi
   14000d63f:	rex.W and BYTE PTR [rcx],bl
   14000d642:	adc    edx,DWORD PTR [rcx]
   14000d644:	adc    DWORD PTR [rcx],ecx
   14000d646:	sbb    eax,0x72252313
   14000d64b:	je     0x14000d6c8
   14000d64d:	and    DWORD PTR [rdi+rsi*4-0x3938383a],0xffffffb7
   14000d655:	lods   al,BYTE PTR ds:[rsi]
   14000d656:	pushf  
   14000d657:	xchg   edx,eax
   14000d658:	jle    0x14000d5e2
	...
   14000d66a:	add    BYTE PTR [rax],al
   14000d66c:	clc    
   14000d66d:	pop    rsi
   14000d66e:	sub    DWORD PTR ds:[rax+rbx*1],ebx
   14000d672:	sbb    BYTE PTR [rbx],bl
   14000d674:	sbb    BYTE PTR [rsi],bl
   14000d676:	or     DWORD PTR [rbx],edx
   14000d678:	(bad)  
   14000d679:	and    al,0x70
   14000d67b:	jae    0x14000d6f4
   14000d67d:	(bad)  
   14000d67e:	movabs ds:0x95abb7c0ccccc6b7,eax
   14000d687:	jle    0x14000d707
   14000d689:	repz add BYTE PTR [rax],al
	...
   14000d69c:	add    BYTE PTR [rax],al
   14000d69e:	sub    ebp,DWORD PTR [rcx]
   14000d6a0:	sub    DWORD PTR [rax],ebp
   14000d6a2:	and    BYTE PTR [rip+0x1f0d1d1e],bl        # 0x15f0df3c6
   14000d6a8:	adc    esp,DWORD PTR [rbx]
   14000d6aa:	and    eax,0xa37d7772
   14000d6af:	mov    bh,0xc6
   14000d6b1:	int3   
   14000d6b2:	int3   
   14000d6b3:	(bad)  
   14000d6b4:	mov    cl,0x9e
   14000d6b6:	xchg   ebx,eax
   14000d6b7:	xchg   edx,eax
   14000d6b8:	xchg   esp,eax
	...
   14000d6cd:	add    BYTE PTR [rax],al
   14000d6cf:	cmp    cl,BYTE PTR [rip+0x2904060a]        # 0x16904dcdf
   14000d6d5:	sub    BYTE PTR [rcx],ch
   14000d6d7:	(bad)  
   14000d6d8:	adc    esp,DWORD PTR [rdx]
   14000d6da:	and    eax,0xa27c7472
   14000d6df:	mov    bh,0xc7
   14000d6e1:	ror    ah,cl
   14000d6e3:	shl    BYTE PTR [rcx-0x74816d62],0x0
	...
   14000d6fe:	add    BYTE PTR [rax],al
   14000d700:	rex.WRXB xor BYTE PTR [r9+r9*1],r15b
   14000d704:	or     eax,DWORD PTR [rip+0x131f3904]        # 0x15320100e
   14000d70a:	and    al,0x70
   14000d70c:	je     0x14000d789
   14000d70e:	fwait
   14000d70f:	mov    ebx,0xc0ccd6c7
   14000d714:	scas   al,BYTE PTR es:[rdi]
   14000d715:	pushf  
   14000d716:	xchg   edx,eax
   14000d717:	jle    0x14000d719
	...
   14000d731:	push   rsp
   14000d732:	push   rdx
   14000d733:	xor    DWORD PTR [rsi+rcx*1],edi
   14000d736:	or     eax,DWORD PTR [rsi]
   14000d738:	cmp    edx,DWORD PTR [rbx]
   14000d73a:	and    ah,BYTE PTR [rip+0xffffffffb79b7972]        # 0xf79c50b2
   14000d740:	int3   
   14000d741:	fcmovbe st,st(2)
   14000d743:	shr    BYTE PTR [rbp+rdx*4+0x947e],0x0
	...
   14000d75f:	add    BYTE PTR [rax],al
   14000d761:	add    BYTE PTR [rbp+0x33],al
   14000d764:	xor    DWORD PTR [rip+0x203d0d37],ebp        # 0x1603de4a1
   14000d76a:	adc    al,0x24
   14000d76c:	jb     0x14000d7e5
   14000d76e:	cmp    DWORD PTR [rsi-0x442e252e],0xffffffab
   14000d775:	xchg   ebx,eax
   14000d776:	jle    0x14000d705
	...
   14000d794:	rex.WR xor BYTE PTR [rsi],r13b
   14000d797:	cmp    al,0x38
   14000d799:	cmp    dl,BYTE PTR [rbx]
   14000d79b:	and    esi,DWORD PTR [rax+0x76]
   14000d79e:	cmp    DWORD PTR [rsi-0x452e132a],0xffffff9e
   14000d7a5:	xchg   ebx,eax
   14000d7a6:	jle    0x14000d7a8
	...
   14000d7c4:	add    BYTE PTR [rax],al
   14000d7c6:	rex.X xor BYTE PTR [rip+0x25161d41],bpl        # 0x16516f50e
   14000d7cd:	je     0x14000d752
   14000d7cf:	mov    bh,0xda
   14000d7d1:	in     eax,dx
   14000d7d2:	(bad)  
   14000d7d3:	mov    bh,0x9d
   14000d7d5:	xchg   edx,eax
   14000d7d6:	jle    0x14000d7d8
	...
   14000d7f4:	add    BYTE PTR [rax],al
   14000d7f6:	add    BYTE PTR [rbp+0x31],dl
   14000d7f9:	xor    BYTE PTR [rcx],bh
   14000d7fb:	adc    esp,DWORD PTR [rdx+rsi*2]
   14000d7fe:	jge    0x14000d7bb
   14000d800:	in     al,dx
   14000d801:	(bad)  
   14000d802:	(bad)  
   14000d803:	mov    cl,0x95
   14000d805:	jle    0x14000d794
	...
   14000d827:	add    BYTE PTR [rcx+0x31],dl
   14000d82a:	rex.X sbb spl,BYTE PTR [rdx]
   14000d82d:	jno    0x14000d8aa
   14000d82f:	mov    edx,0xaed1ebea
   14000d834:	xchg   edx,eax
   14000d835:	jle    0x14000d837
	...
   14000d857:	add    BYTE PTR [rax],al
   14000d859:	xor    r9,QWORD PTR [r14+r10*1]
   14000d85d:	and    eax,0xebebb37a
   14000d862:	shr    DWORD PTR [rbx+0x9492],1
	...
   14000d888:	add    BYTE PTR [rax],al
   14000d88a:	xor    eax,DWORD PTR [rax+0x13]
   14000d88d:	and    al,0x76
   14000d88f:	mov    bl,0xeb
   14000d891:	jmp    0x14000d85a
   14000d893:	sahf   
   14000d894:	jle    0x14000d826
	...
   14000d8ba:	imul   eax,DWORD PTR [rdx+0x6],0xebaa7322
   14000d8c1:	jmp    0x14000d886
   14000d8c3:	xchg   ebp,eax
   14000d8c4:	jle    0x14000d8c6
	...
   14000d8ea:	add    BYTE PTR [rdi+0x3f],al
   14000d8ed:	adc    eax,0xebeba771
   14000d8f2:	scas   eax,DWORD PTR es:[rdi]
   14000d8f3:	xchg   ebx,eax
   14000d8f4:	mov    al,BYTE PTR [rax]
	...
   14000d91a:	add    BYTE PTR [rax],al
   14000d91c:	push   rax
   14000d91d:	and    BYTE PTR [rip+0xffffffffa4e9eb83],ah        # 0xe4eac4a6
   14000d923:	jle    0x14000d925
	...
   14000d949:	add    BYTE PTR [rax],al
   14000d94b:	add    BYTE PTR [rdx+0x3a],bl
   14000d94e:	(bad)  
   14000d94f:	jnp    0x14000d93b
   14000d951:	rcl    BYTE PTR [rsi+0x88],1
	...
   14000d97b:	add    BYTE PTR [rax],al
   14000d97d:	push   rbx
   14000d97e:	sbb    al,0x74
   14000d980:	iret   
   14000d981:	mov    bl,0x92
	...
   14000d9ab:	add    BYTE PTR [rax],al
   14000d9ad:	add    BYTE PTR [rax],dl
   14000d9af:	(bad)  
   14000d9b0:	fwait
   14000d9b1:	cwde   
   14000d9b2:	mov    es,WORD PTR [rax]
	...
   14000d9dc:	add    BYTE PTR [rax],al
   14000d9de:	imul   esp,DWORD PTR [rcx],0x8779
	...
   14000da0c:	add    BYTE PTR [rax],al
   14000da0e:	add    dh,ch
   14000da10:	out    dx,eax
	...
   14000da7d:	add    BYTE PTR [rax],al
   14000da7f:	add    bh,bh
   14000da81:	(bad)  
   14000da82:	(bad)  
   14000da83:	(bad)  
   14000da84:	(bad)  
   14000da85:	inc    DWORD PTR [rax]
   14000da87:	add    bh,bh
   14000da89:	(bad)  
   14000da8a:	(bad)  
   14000da8b:	(bad)  
   14000da8c:	(bad)  
   14000da8d:	inc    DWORD PTR [rax]
   14000da8f:	add    bh,bh
   14000da91:	(bad)  
   14000da92:	sti    
   14000da93:	(bad)  
   14000da94:	(bad)  
   14000da95:	inc    DWORD PTR [rax]
   14000da97:	add    bh,bh
   14000da99:	push   rax
   14000da9b:	(bad)  
   14000da9c:	(bad)  
   14000da9d:	inc    DWORD PTR [rax]
   14000da9f:	add    bh,bh
   14000daa1:	push   rax
   14000daa3:	jg     0x14000daa4
   14000daa5:	inc    DWORD PTR [rax]
   14000daa7:	add    bh,bh
   14000daa9:	jmp    rax
   14000daab:	(bad)  
   14000daac:	(bad)  
   14000daad:	inc    DWORD PTR [rax]
   14000daaf:	add    bh,bh
   14000dab1:	jmp    rax
   14000dab3:	ud0    edi,edi
   14000dab6:	add    BYTE PTR [rax],al
   14000dab8:	(bad)  
   14000dab9:	jmp    rax
   14000dabb:	(bad)  
   14000dabc:	(bad)  
   14000dabd:	inc    DWORD PTR [rax]
   14000dabf:	add    bh,bh
   14000dac1:	inc    eax
   14000dac3:	(bad)  
   14000dac4:	(bad)  
   14000dac5:	inc    DWORD PTR [rax]
   14000dac7:	add    bh,bh
   14000dac9:	inc    eax
   14000dacb:	add    edi,edi
   14000dacd:	inc    DWORD PTR [rax]
   14000dacf:	add    bh,bh
   14000dad1:	inc    DWORD PTR [rax+0xfeff01]
   14000dad7:	add    bh,bh
   14000dad9:	inc    DWORD PTR [rax+0xfdff00]
   14000dadf:	add    bh,bh
   14000dae1:	inc    DWORD PTR [rax]
   14000dae3:	add    BYTE PTR [rdi-0x7],bh
   14000dae6:	add    BYTE PTR [rax],al
   14000dae8:	(bad)  
   14000dae9:	inc    BYTE PTR [rax]
   14000daeb:	add    BYTE PTR [rdi],bh
   14000daed:	repz add BYTE PTR [rax],al
   14000daf0:	(bad)  
   14000daf1:	fadd   QWORD PTR [rax]
   14000daf3:	add    BYTE PTR [rdi],bl
   14000daf5:	ret    
   14000daf6:	add    BYTE PTR [rax],al
   14000daf8:	inc    DWORD PTR [rax]
   14000dafa:	add    BYTE PTR [rax],al
   14000dafc:	(bad)  
   14000dafd:	add    DWORD PTR [rax],0x0
   14000db00:	inc    BYTE PTR [rax]
   14000db02:	add    BYTE PTR [rax],al
   14000db04:	add    BYTE PTR [rdi],al
   14000db06:	add    BYTE PTR [rax],al
   14000db08:	cld    
   14000db09:	add    BYTE PTR [rax],al
   14000db0b:	add    BYTE PTR [rax],al
   14000db0d:	(bad)  
   14000db0e:	add    BYTE PTR [rax],al
   14000db10:	lock add BYTE PTR [rax],al
   14000db13:	add    BYTE PTR [rax],al
   14000db15:	sldt   WORD PTR [rax]
   14000db18:	loopne 0x14000db1a
   14000db1a:	add    BYTE PTR [rax],al
   14000db1c:	add    BYTE PTR [rdi],cl
   14000db1e:	add    BYTE PTR [rax],al
   14000db20:	add    BYTE PTR [rax],0x0
   14000db23:	add    BYTE PTR [rax],al
   14000db25:	sldt   WORD PTR [rax]
   14000db28:	add    BYTE PTR [rax],al
   14000db2a:	add    BYTE PTR [rax],al
   14000db2c:	add    BYTE PTR [rdi],bl
   14000db2e:	add    BYTE PTR [rax],al
   14000db30:	rol    BYTE PTR [rax],0x0
   14000db33:	add    BYTE PTR [rax],al
   14000db35:	(bad)  
   14000db36:	add    BYTE PTR [rax],al
   14000db38:	clc    
   14000db39:	add    BYTE PTR [rax],al
   14000db3b:	add    BYTE PTR [rax],al
   14000db3d:	(bad)  
   14000db3e:	add    BYTE PTR [rax],al
   14000db40:	inc    BYTE PTR [rax]
   14000db42:	add    BYTE PTR [rax],al
   14000db44:	add    BYTE PTR [rdi],bh
   14000db46:	add    BYTE PTR [rax],al
   14000db48:	inc    eax
   14000db4a:	add    BYTE PTR [rax],al
   14000db4c:	add    BYTE PTR [rdi],bh
   14000db4e:	add    BYTE PTR [rax],al
   14000db50:	push   rax
   14000db52:	add    BYTE PTR [rax],al
   14000db54:	add    BYTE PTR [rdi],bh
   14000db56:	add    BYTE PTR [rax],al
   14000db58:	(bad)  
   14000db59:	cld    
   14000db5a:	add    BYTE PTR [rax],al
   14000db5c:	add    BYTE PTR [rdi+0x0],bh
   14000db5f:	add    bh,bh
   14000db61:	inc    BYTE PTR [rax]
   14000db63:	add    BYTE PTR [rax],al
   14000db65:	jg     0x14000db67
   14000db67:	add    bh,bh
   14000db69:	inc    DWORD PTR [rax]
   14000db6b:	add    BYTE PTR [rax],al
   14000db6d:	inc    DWORD PTR [rax]
   14000db6f:	add    bh,bh
   14000db71:	inc    DWORD PTR [rax+0xff0000]
   14000db77:	add    bh,bh
   14000db79:	inc    eax
   14000db7b:	add    BYTE PTR [rax],al
   14000db7d:	inc    DWORD PTR [rax]
   14000db7f:	add    bh,bh
   14000db81:	push   rax
   14000db83:	add    BYTE PTR [rcx],al
   14000db85:	inc    DWORD PTR [rax]
   14000db87:	add    bh,bh
   14000db89:	(bad)  
   14000db8a:	cld    
   14000db8b:	add    BYTE PTR [rcx],al
   14000db8d:	inc    DWORD PTR [rax]
   14000db8f:	add    bh,bh
   14000db91:	(bad)  
   14000db92:	inc    BYTE PTR [rax]
   14000db94:	add    edi,edi
   14000db96:	add    BYTE PTR [rax],al
   14000db98:	(bad)  
   14000db99:	(bad)  
   14000db9a:	inc    DWORD PTR [rax]
   14000db9c:	add    edi,edi
   14000db9e:	add    BYTE PTR [rax],al
   14000dba0:	(bad)  
   14000dba1:	(bad)  
   14000dba2:	inc    DWORD PTR [rax+0xff03]
   14000dba8:	(bad)  
   14000dba9:	(bad)  
   14000dbaa:	inc    eax
   14000dbac:	add    edi,edi
   14000dbae:	add    BYTE PTR [rax],al
   14000dbb0:	(bad)  
   14000dbb1:	(bad)  
   14000dbb2:	inc    eax
   14000dbb4:	(bad)  
   14000dbb5:	inc    DWORD PTR [rax]
   14000dbb7:	add    bh,bh
   14000dbb9:	(bad)  
   14000dbba:	jmp    rax
   14000dbbc:	(bad)  
   14000dbbd:	inc    DWORD PTR [rax]
   14000dbbf:	add    bh,bh
   14000dbc1:	(bad)  
   14000dbc2:	push   rax
   14000dbc4:	ud0    eax,DWORD PTR [rax]
   14000dbc7:	add    bh,bh
   14000dbc9:	(bad)  
   14000dbca:	push   rax
   14000dbcc:	ud0    eax,DWORD PTR [rax]
   14000dbcf:	add    bh,bh
   14000dbd1:	(bad)  
   14000dbd2:	(bad)  
   14000dbd3:	clc    
   14000dbd4:	(bad)  
   14000dbd5:	inc    DWORD PTR [rax]
   14000dbd7:	add    bh,bh
   14000dbd9:	(bad)  
   14000dbda:	(bad)  
   14000dbdb:	cld    
   14000dbdc:	(bad)  
   14000dbdd:	inc    DWORD PTR [rax]
   14000dbdf:	add    bh,bh
   14000dbe1:	(bad)  
   14000dbe2:	(bad)  
   14000dbe3:	cld    
   14000dbe4:	(bad)  
   14000dbe5:	inc    DWORD PTR [rax]
   14000dbe7:	add    bh,bh
   14000dbe9:	(bad)  
   14000dbea:	(bad)  
   14000dbeb:	(bad)  
   14000dbec:	jg     0x14000dbed
   14000dbee:	add    BYTE PTR [rax],al
   14000dbf0:	(bad)  
   14000dbf1:	(bad)  
   14000dbf2:	(bad)  
   14000dbf3:	(bad)  
   14000dbf4:	(bad)  
   14000dbf5:	inc    DWORD PTR [rax]
   14000dbf7:	add    bh,bh
   14000dbf9:	(bad)  
   14000dbfa:	(bad)  
   14000dbfb:	(bad)  
   14000dbfc:	(bad)  
   14000dbfd:	inc    DWORD PTR [rax]
   14000dbff:	add    BYTE PTR [rax],ch
   14000dc01:	add    BYTE PTR [rax],al
   14000dc03:	add    BYTE PTR [rax],ah
   14000dc05:	add    BYTE PTR [rax],al
   14000dc07:	add    BYTE PTR [rax+0x0],al
   14000dc0a:	add    BYTE PTR [rax],al
   14000dc0c:	add    DWORD PTR [rax],eax
   14000dc0e:	or     BYTE PTR [rax],al
   14000dc10:	add    BYTE PTR [rax],al
   14000dc12:	add    BYTE PTR [rax],al
   14000dc14:	add    BYTE PTR [rax+rax*1],al
	...
   14000dc1f:	add    BYTE PTR [rax],al
   14000dc21:	add    DWORD PTR [rax],eax
   14000dc23:	add    BYTE PTR [rax],al
   14000dc25:	add    DWORD PTR [rax],eax
   14000dc27:	add    BYTE PTR [rax],al
   14000dc29:	add    BYTE PTR [rax],al
   14000dc2b:	add    BYTE PTR [rdi+riz*1],bh
   14000dc2e:	add    BYTE PTR ds:[rdi+0x39],dl
   14000dc32:	(bad)  
   14000dc33:	add    BYTE PTR [rdi+0x3d],bl
   14000dc36:	xor    eax,0x3e355200
   14000dc3b:	add    BYTE PTR [rdx+0x3d],bl
   14000dc3e:	cmp    eax,0x2b547e00
   14000dc43:	add    BYTE PTR [rbx+rdx*2+0x2d],bh
   14000dc47:	add    BYTE PTR [rdx+0x40],ah
   14000dc4a:	add    BYTE PTR ss:[rbp+0x42],ah
   14000dc4e:	xor    eax,0x30456900
   14000dc53:	add    BYTE PTR [rcx+0x47],ch
   14000dc56:	add    BYTE PTR ss:[rcx+0x40],ah
   14000dc5a:	cmp    DWORD PTR [rax],eax
   14000dc5c:	cmp    BYTE PTR gs:[rax],r8b
   14000dc60:	jo     0x14000dcac
   14000dc62:	add    BYTE PTR ss:[rip+0x1e004611],bl        # 0x15e01227a
   14000dc69:	adc    ecx,DWORD PTR [rcx+0x0]
   14000dc6c:	sbb    DWORD PTR [rcx],edx
   14000dc6e:	rex.WRXB add BYTE PTR [r14],r11b
   14000dc71:	adc    eax,0x1117004f
   14000dc76:	push   rbx
   14000dc77:	add    BYTE PTR [rsi],dl
   14000dc79:	adc    DWORD PTR [rdi+0x0],edx
   14000dc7c:	(bad)  
   14000dc7d:	adc    DWORD PTR [rax+0x0],ebx
   14000dc80:	sbb    BYTE PTR [rbx],dl
   14000dc82:	pop    rbp
   14000dc83:	add    BYTE PTR [rbx],ah
   14000dc85:	adc    al,0x46
   14000dc87:	add    BYTE PTR [rsp+rdx*1],ah
   14000dc8a:	rex.RX add BYTE PTR [rax],r13b
   14000dc8d:	(bad)  
   14000dc8e:	rex.RX add BYTE PTR [rip+0x2c004618],r12b        # 0x16c0122ad
   14000dc95:	sbb    eax,0x1a290042
   14000dc9a:	rex.RX add BYTE PTR [rip+0x34004819],r12b        # 0x1740124ba
   14000dca1:	and    DWORD PTR [rsi+0x0],eax
   14000dca4:	cmp    BYTE PTR [rdx],ah
   14000dca6:	rex.XB add BYTE PTR [r15],bpl
   14000dca9:	and    al,0x58
   14000dcab:	add    BYTE PTR [rip+0x15006012],dl        # 0x155013cc3
   14000dcb1:	adc    esp,DWORD PTR [rbp+0x0]
   14000dcb4:	sbb    bl,BYTE PTR [rax]
   14000dcb6:	add    BYTE PTR [esp+edx*1],dl
   14000dcba:	push   0x0
   14000dcbc:	adc    al,0x15
   14000dcbe:	ins    DWORD PTR es:[rdi],dx
   14000dcbf:	add    BYTE PTR [rip+0x14007116],dl        # 0x154014ddb
   14000dcc5:	(bad)  
   14000dcc6:	je     0x14000dcc8
   14000dcc8:	adc    al,0x18
   14000dcca:	jbe    0x14000dccc
   14000dccc:	sbb    BYTE PTR [rdx],bl
   14000dcce:	je     0x14000dcd0
   14000dcd0:	adc    al,0x19
   14000dcd2:	jns    0x14000dcd4
   14000dcd4:	(bad)  
   14000dcd5:	sbb    bh,BYTE PTR [rbp+0x0]
   14000dcd8:	sub    BYTE PTR [r10+0x0],al
   14000dcdc:	rex.XB sub eax,0x2f490046
   14000dce2:	rex.X add BYTE PTR [rax+0x2f],cl
   14000dce6:	add    BYTE PTR [r10+0x30],r9b
   14000dcea:	add    BYTE PTR [rbp+0x32],cl
   14000dcee:	add    BYTE PTR [rsi+0x3b],dl
   14000dcf2:	rex.WX add BYTE PTR [rcx-0x5cffe495],spl
   14000dcf9:	ins    DWORD PTR es:[rdi],dx
   14000dcfa:	sbb    eax,0x1970a800
   14000dcff:	add    BYTE PTR [rbp-0x71ffe386],dh
   14000dd05:	pop    rdi
   14000dd06:	and    eax,DWORD PTR [rax]
   14000dd08:	xchg   BYTE PTR [rdx+0x2e],bl
   14000dd0b:	add    BYTE PTR [rdi-0x6bffdc96],bl
   14000dd11:	sub    al,BYTE PTR fs:[rax]
   14000dd14:	xchg   esi,eax
   14000dd15:	data16 add BYTE PTR cs:[rdx-0x72ffd398],bl
   14000dd1d:	(bad)  
   14000dd1e:	xor    eax,0x2b6fa400
   14000dd23:	add    BYTE PTR [rax-0x53ffda8f],ch
   14000dd29:	jbe    0x14000dd50
   14000dd2b:	add    BYTE PTR [rsp+rdi*2+0x6f9c0025],dh
   14000dd32:	add    BYTE PTR [r9-0x55ffaf94],dl
   14000dd39:	ja     0x14000dd7d
   14000dd3b:	add    BYTE PTR [rdi-0x5bffb389],ah
   14000dd41:	jl     0x14000dd8e
   14000dd43:	add    BYTE PTR [rdx-0x4dffb486],ch
   14000dd49:	jg     0x14000dd98
   14000dd4b:	add    BYTE PTR [rbp-0x54ffab87],ah
   14000dd51:	jge    0x14000dda8
   14000dd53:	add    bl,al
   14000dd55:	and    DWORD PTR [rbx],0x0
   14000dd58:	mov    ah,0x86
   14000dd5a:	add    BYTE PTR [rcx-0x48ffbb7d],r15b
   14000dd61:	or     DWORD PTR [rbx+0x0],0xffffffbe
   14000dd65:	mov    BYTE PTR [rdi+0x0],cl
   14000dd68:	mov    dh,0x83
   14000dd6a:	push   rcx
   14000dd6b:	add    BYTE PTR [rdx-0x3fff986a],bh
   14000dd71:	mov    DWORD PTR [rsi+0x0],ecx
   14000dd74:	(bad)
   14000dd77:	add    al,cl
   14000dd79:	(bad)  
   14000dd7a:	rex.WXB add r14b,cl
   14000dd7d:	xchg   edx,eax
   14000dd7e:	rex.RX add dl,r9b
   14000dd81:	nop
   14000dd82:	rex.WX add bpl,cl
   14000dd85:	xchg   ecx,eax
   14000dd86:	rex.W add dl,dl
   14000dd89:	xchg   ebp,eax
   14000dd8a:	rex.X add al,dl
   14000dd8d:	xchg   ebx,eax
   14000dd8e:	add    r12b,r10b
   14000dd91:	cdq    
   14000dd92:	rex.XB add r14b,dl
   14000dd95:	fwait
   14000dd96:	add    r15b,r10b
   14000dd99:	popf   
   14000dd9a:	rex.RX add sil,r10b
   14000dd9d:	lahf   
   14000dd9e:	rex.WXB add r8b,bl
   14000dda1:	sahf   
   14000dda2:	rex.WB add r14b,cl
   14000dda5:	pushf  
   14000dda6:	push   rdi
   14000dda7:	add    cl,bl
   14000dda9:	movabs al,ds:0xa1d90052a1d5004e
   14000ddb2:	push   rax
   14000ddb3:	add    dh,dl
   14000ddb5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ddb6:	pop    rsi
   14000ddb7:	add    dh,cl
   14000ddb9:	movabs ds:0xa3c80069a1ce0065,eax
   14000ddc2:	outs   dx,DWORD PTR ds:[rsi]
   14000ddc3:	add    bh,cl
   14000ddc5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ddc6:	ins    BYTE PTR es:[rdi],dx
   14000ddc7:	add    bl,cl
   14000ddc9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ddca:	js     0x14000ddcc
   14000ddcc:	enter  0x7ca9,0x0
   14000ddd0:	xlat   BYTE PTR ds:[rbx]
   14000ddd1:	lods   eax,DWORD PTR ds:[rsi]
   14000ddd2:	jne    0x14000ddd4
   14000ddd4:	(bad)  
   14000ddd5:	sbb    al,0x80
   14000ddd7:	add    BYTE PTR [rax],bl
   14000ddd9:	sbb    al,0x82
   14000dddb:	add    BYTE PTR [rax],bl
   14000dddd:	sbb    eax,0x201b0085
   14000dde2:	mov    al,BYTE PTR [rax]
   14000dde4:	sbb    esp,DWORD PTR [rcx]
   14000dde6:	mov    WORD PTR [rax],es
   14000dde8:	sbb    al,0x21
   14000ddea:	lea    eax,[rax]
   14000ddec:	sbb    eax,0x1e008e25
   14000ddf1:	and    eax,0x261f0092
   14000ddf6:	xchg   esp,eax
   14000ddf7:	add    BYTE PTR [rcx],ah
   14000ddf9:	sub    bl,BYTE PTR [rcx-0x64d3df00]
   14000ddff:	add    BYTE PTR [rbx],ah
   14000de01:	sub    al,0x9c
   14000de03:	add    BYTE PTR [rbx],ah
   14000de05:	xor    ah,BYTE PTR [rcx-0x5dcedc00]
   14000de0b:	add    BYTE PTR [rip+0x2600a432],ah        # 0x166018243
   14000de11:	xor    al,0xa7
   14000de13:	add    BYTE PTR [rsi],ah
   14000de15:	ss test eax,0xab382700
   14000de1b:	add    BYTE PTR [rax],ch
   14000de1d:	cmp    ch,BYTE PTR [rdi-0x4dc2d800]
   14000de23:	add    BYTE PTR [rip+0x3200be34],ch        # 0x172019c5d
   14000de29:	cmp    DWORD PTR [rsi-0x40c4cc00],edi
   14000de2f:	add    BYTE PTR [rdx],ch
   14000de31:	mov    r15b,0x0
   14000de34:	sub    eax,DWORD PTR [rbx-0x46]
   14000de37:	add    BYTE PTR [rbx],ch
   14000de39:	rex.R mov edx,0xbe492c00
   14000de3f:	add    BYTE PTR [rsi+0x53],dl
   14000de42:	xchg   ebp,eax
   14000de43:	add    BYTE PTR [rax+0x43],al
   14000de46:	mov    ecx,0xba464300
   14000de4b:	add    BYTE PTR [rsi+0x55],dl
   14000de4e:	mov    dl,0x0
   14000de50:	pop    rcx
   14000de51:	pop    rbp
   14000de52:	mov    edx,0xb7626100
   14000de57:	add    BYTE PTR [rcx+0x66],ch
   14000de5a:	mov    dl,0x0
   14000de5c:	imul   ebp,DWORD PTR [rcx-0x4c],0x0
   14000de60:	je     0x14000ded2
   14000de62:	mov    dl,0x0
   14000de64:	jbe    0x14000ded9
   14000de66:	mov    ch,0x0
   14000de68:	sub    eax,0x2d00c134
   14000de6d:	(bad)
   14000de71:	cmp    ecx,ecx
   14000de73:	add    BYTE PTR [rdi],ch
   14000de75:	cmp    eax,0x3e3700ce
   14000de7a:	rol    BYTE PTR [rax],0x2f
   14000de7d:	(bad)  
   14000de7e:	rol    BYTE PTR [rax],1
   14000de80:	xor    BYTE PTR [rdi],bh
   14000de82:	rol    BYTE PTR [rax],1
   14000de84:	sub    eax,0x2d00c048
   14000de89:	rex.WX (bad) 
   14000de8b:	add    BYTE PTR [rdi],ch
   14000de8d:	rex.WRB mov QWORD PTR [r8],0xc84e2f
   14000de94:	xor    BYTE PTR [rax-0x32],al
   14000de97:	add    BYTE PTR [rdi],ch
   14000de99:	push   rax
   14000de9a:	mov    DWORD PTR [rax],0xc9502f
   14000dea0:	xor    DWORD PTR [rdx-0x33],edx
   14000dea3:	add    BYTE PTR [rcx],dh
   14000dea5:	push   rbp
   14000dea6:	(bad)  
   14000dea7:	add    BYTE PTR [rcx],dh
   14000dea9:	rex.R (bad) 
   14000deab:	add    BYTE PTR [rdx],dh
   14000dead:	rex.WX fld DWORD PTR [rax]
   14000deb0:	xor    ecx,DWORD PTR [rbp+rbx*8+0x0]
   14000deb4:	xor    edx,DWORD PTR [rdi-0x2c]
   14000deb7:	add    BYTE PTR [rdx],dh
   14000deb9:	pop    rdx
   14000deba:	rol    DWORD PTR [rax],cl
   14000debc:	xor    ebx,DWORD PTR [rcx-0x2b]
   14000debf:	add    BYTE PTR [rbx+rbx*2],dh
   14000dec2:	xlat   BYTE PTR ds:[rbx]
   14000dec3:	add    BYTE PTR [rbx],dh
   14000dec5:	pop    rbp
   14000dec6:	xlat   BYTE PTR ds:[rbx]
   14000dec7:	add    BYTE PTR [rbx],dh
   14000dec9:	push   rcx
   14000deca:	fiadd  DWORD PTR [rax]
   14000decc:	xor    al,0x53
   14000dece:	fiadd  WORD PTR [rax]
   14000ded0:	xor    eax,0x3100d95c
   14000ded5:	jno    0x14000dea5
   14000ded7:	add    BYTE PTR [rax+riz*2],dh
   14000deda:	fild   DWORD PTR [rax]
   14000dedc:	xor    eax,0x3600de62
   14000dee1:	data16 fiadd WORD PTR [rax]
   14000dee4:	xor    al,0x53
   14000dee6:	loopne 0x14000dee8
   14000dee8:	xor    al,0x54
   14000deea:	loope  0x14000deec
   14000deec:	ss pop rsp
   14000deee:	jrcxz  0x14000def0
   14000def0:	ss pop rbx
   14000def2:	in     al,0x0
   14000def4:	ss movsxd esp,ebx
   14000def7:	add    BYTE PTR [rsi],dh
   14000def9:	fs loope 0x14000defc
   14000defc:	(bad)  
   14000defd:	gs in  eax,0x0
   14000df00:	(bad)  
   14000df01:	imul   esp,ebp,0xe76d3700
   14000df07:	add    BYTE PTR [rax],bh
   14000df09:	outs   dx,DWORD PTR ds:[rsi]
   14000df0a:	out    0x0,al
   14000df0c:	cmp    BYTE PTR [rax+rbp*8+0x0],ch
   14000df10:	cmp    BYTE PTR [rdx-0x17],dh
   14000df13:	add    BYTE PTR [rdx],bh
   14000df15:	jne    0x14000df01
   14000df17:	add    BYTE PTR [rcx],bh
   14000df19:	jns    0x14000df05
   14000df1b:	add    BYTE PTR [rdi],bh
   14000df1d:	jns    0x14000df08
   14000df1f:	add    BYTE PTR [rcx],bh
   14000df21:	jle    0x14000df0e
   14000df23:	add    BYTE PTR [rsi+rdi*2],bh
   14000df26:	jmp    0x14000df28
   14000df28:	cmp    edi,DWORD PTR [rdi-0x14]
   14000df2b:	add    BYTE PTR [rdi+rdi*2],bh
   14000df2e:	in     al,dx
   14000df2f:	add    BYTE PTR [rdx],bh
   14000df31:	sub    ebx,0xec813b00
   14000df37:	add    BYTE PTR [rcx+rax*4],bh
   14000df3a:	in     al,dx
   14000df3b:	add    BYTE PTR [rdx],bh
   14000df3d:	test   esp,ebp
   14000df3f:	add    BYTE PTR [rdx],bh
   14000df41:	mov    ebp,ebp
   14000df43:	add    BYTE PTR [rdx+rcx*4],bh
   14000df46:	in     eax,dx
   14000df47:	add    BYTE PTR [rbx],bh
   14000df49:	(bad)  
   14000df4a:	in     eax,dx
   14000df4b:	add    BYTE PTR [rbx],bh
   14000df4d:	xchg   edx,eax
   14000df4e:	out    dx,al
   14000df4f:	add    BYTE PTR [rax+rdx*4],bh
   14000df52:	out    dx,al
   14000df53:	add    BYTE PTR [rbx],bh
   14000df55:	xchg   esi,eax
   14000df56:	out    dx,eax
   14000df57:	add    BYTE PTR [rcx],bh
   14000df59:	cwde   
   14000df5a:	call   0x12f9c1a5f
   14000df5f:	add    BYTE PTR [rdx],bh
   14000df61:	cwde   
   14000df62:	lock add BYTE PTR [rdx],bh
   14000df65:	popf   
   14000df66:	lock add BYTE PTR [rcx],bh
   14000df69:	stos   BYTE PTR es:[rdi],al
   14000df6a:	loope  0x14000df6c
   14000df6c:	cmp    al,0xbe
   14000df6e:	(bad)  
   14000df6f:	add    BYTE PTR [rbx],bh
   14000df71:	mov    edx,0xba3c00ef
   14000df76:	in     al,dx
   14000df77:	add    BYTE PTR [rdx],bh
   14000df79:	movabs al,ds:0xa43c00f2a63b00f0
   14000df82:	lock add BYTE PTR [rdx+rbp*4],bh
   14000df86:	icebp  
   14000df87:	add    BYTE PTR [rcx],bh
   14000df89:	lods   al,BYTE PTR ds:[rsi]
   14000df8a:	lock add BYTE PTR [rip+0x3900f1ac],bh        # 0x17901d13d
   14000df91:	mov    al,0xf2
   14000df93:	add    BYTE PTR [rbx],bh
   14000df95:	mov    dh,0xf3
   14000df97:	add    BYTE PTR [rcx],bh
   14000df99:	mov    ebx,0xb93b00f3
   14000df9e:	hlt    
   14000df9f:	add    BYTE PTR [rbx-0x75],bl
   14000dfa2:	(bad)  
   14000dfa3:	add    BYTE PTR [rax+rcx*4-0x28],dl
   14000dfa7:	add    BYTE PTR [rsi+rcx*4-0x28],dl
   14000dfab:	add    BYTE PTR [rcx-0x7f],cl
   14000dfae:	loop   0x14000dfb0
   14000dfb0:	rex.B (bad) 
   14000dfb2:	jmp    0x12ab828b7
   14000dfb7:	add    BYTE PTR [rbp-0x4b],dl
   14000dfba:	loopne 0x14000dfbc
   14000dfbc:	cmp    al,0xc2
   14000dfbe:	in     eax,dx
   14000dfbf:	add    BYTE PTR [rip+0x3d00ecc4],bh        # 0x17d01cc89
   14000dfc5:	retf   
   14000dfc6:	in     al,dx
   14000dfc7:	add    BYTE PTR [rbx],bh
   14000dfc9:	shr    edi,1
   14000dfcb:	add    BYTE PTR [rdx+rdx*8],bh
   14000dfce:	in     eax,dx
   14000dfcf:	add    BYTE PTR [rax],bh
   14000dfd1:	enter  0xf1,0x8e
   14000dfd5:	mov    DWORD PTR [rdx-0x4b716a00],edi
   14000dfdb:	add    BYTE PTR [rsi-0x67ff4562],cl
   14000dfe1:	xchg   edx,eax
   14000dfe2:	mov    esp,0xbf949a00
   14000dfe7:	add    ch,bl
   14000dfe9:	mov    esi,0xa99a0093
   14000dfee:	ret    
   14000dfef:	add    BYTE PTR [rdi-0x5fff3845],dl
   14000dff5:	mov    bl,0xc2
	...
   14000e023:	add    bh,bh
   14000e025:	(bad)  
   14000e026:	inc    DWORD PTR [rax]
	...
   14000e074:	add    dl,dh
   14000e076:	fucom  st(4)
	...
   14000e094:	add    bl,ah
   14000e096:	fstp   st(3)
   14000e098:	fpatan 
	...
   14000e0b2:	add    BYTE PTR [rax],al
   14000e0b4:	add    cl,bl
   14000e0b6:	(bad)  
   14000e0b8:	int    0xc9
   14000e0ba:	icebp  
	...
   14000e0d3:	add    dh,bl
   14000e0d5:	enter  0xc8c8,0xc8
   14000e0d9:	ret    
   14000e0da:	mov    edi,0x0
	...
   14000e0f3:	add    BYTE PTR [rdi-0x45454752],bl
   14000e0f9:	mov    edx,0xbabf
	...
   14000e112:	add    BYTE PTR [rsi-0x5b637d87],al
   14000e118:	mov    ah,0xb8
   14000e11a:	mov    ecx,0xe1bf
	...
   14000e127:	out    dx,al
	...
   14000e130:	add    BYTE PTR [rax],al
   14000e132:	add    BYTE PTR [rbp+0x71],ch
   14000e135:	jne    0x14000e1b3
   14000e137:	test   BYTE PTR [rdx-0x4046495c],bl
   14000e13d:	fild   WORD PTR [rax]
   14000e13f:	add    BYTE PTR [rax],al
   14000e141:	add    BYTE PTR [rax],al
   14000e143:	add    BYTE PTR [rax],al
   14000e145:	add    BYTE PTR [rax+0x0],al
   14000e14b:	add    BYTE PTR [rax],al
   14000e14d:	add    BYTE PTR [rax],al
   14000e14f:	add    BYTE PTR [rax],al
   14000e151:	add    BYTE PTR [rbx],ah
   14000e153:	sub    BYTE PTR [rbx+0x71],ch
   14000e156:	je     0x14000e1d1
   14000e158:	test   BYTE PTR [rdx-0x3c454956],bl
   14000e15e:	loopne 0x14000e160
   14000e160:	add    BYTE PTR [rax],al
   14000e162:	add    BYTE PTR [rax],al
   14000e164:	in     al,dx
   14000e165:	nop
   14000e166:	lea    eax,[rax]
   14000e168:	add    BYTE PTR [rax],al
   14000e16a:	add    BYTE PTR [rax],al
   14000e16c:	add    BYTE PTR [rax+0x55],ch
   14000e16f:	push   rsp
   14000e170:	rex.WRB
   14000e171:	ds (bad) 
   14000e173:	and    DWORD PTR [rdi],esp
   14000e175:	imul   esi,DWORD PTR [rcx+0x74],0x7a
   14000e179:	test   BYTE PTR [rdi-0x373c454c],bl
   14000e17f:	loop   0x14000e16e
   14000e181:	add    BYTE PTR [rax],al
   14000e183:	mov    dl,BYTE PTR [rax+0x90]
   14000e189:	add    BYTE PTR [rax],al
   14000e18b:	add    BYTE PTR [rdi+0x58],bl
   14000e18e:	pop    rax
   14000e18f:	push   rdi
   14000e190:	push   rbx
   14000e191:	rex.WRX cmp al,0x1c
   14000e194:	and    DWORD PTR [rdi],esp
   14000e196:	imul   esi,DWORD PTR [rcx+0x75],0x7d
   14000e19a:	pushf  
   14000e19b:	stos   BYTE PTR es:[rdi],al
   14000e19c:	mov    edx,0xc3c8c8bf
   14000e1a1:	mov    edx,0x879095b0
   14000e1a6:	add    BYTE PTR [rax],al
   14000e1a8:	add    BYTE PTR [rax],al
   14000e1aa:	add    BYTE PTR [rbp+0x5c],bl
   14000e1ad:	pop    rsp
   14000e1ae:	pop    rax
   14000e1af:	pop    rax
   14000e1b0:	push   rbx
   14000e1b1:	rex.WRXB
   14000e1b2:	rex.W cmp BYTE PTR [rax],dl
   14000e1b5:	and    DWORD PTR [rdx],ebp
   14000e1b7:	ins    DWORD PTR es:[rdi],dx
   14000e1b8:	jae    0x14000e232
   14000e1ba:	(bad)  
   14000e1bb:	movabs ds:0x95a2b9c3c8c3bfb6,eax
   14000e1c4:	nop
   14000e1c5:	jmp    0x14000e1c7
   14000e1c7:	add    BYTE PTR [rax],al
   14000e1c9:	addr32 (bad) 
   14000e1cb:	pop    rbp
   14000e1cc:	pop    rsi
   14000e1cd:	pop    rsp
   14000e1ce:	pop    rsp
   14000e1cf:	push   rbp
   14000e1d0:	push   rdi
   14000e1d1:	rex.WRXB push r8
   14000e1d3:	rex.RXB or DWORD PTR [r9],r10d
   14000e1d6:	and    eax,0x7e756e6b
   14000e1db:	(bad)  
   14000e1dc:	mov    ecx,0xbfc8c8c3
   14000e1e1:	mov    ah,0xa0
   14000e1e3:	nop
   14000e1e4:	nop
   14000e1e5:	add    BYTE PTR [rax],al
   14000e1e7:	add    BYTE PTR [rax],al
   14000e1e9:	movsxd esp,DWORD PTR [rdx+0x60]
   14000e1ec:	pop    rbp
   14000e1ed:	pop    rsi
   14000e1ee:	pop    rsp
   14000e1ef:	pop    rax
   14000e1f0:	push   rbp
   14000e1f1:	push   rbx
   14000e1f2:	push   rax
   14000e1f3:	rex.WX
   14000e1f4:	rex.X add DWORD PTR [rip+0x7a736d27],edx        # 0x1ba744f22
   14000e1fb:	(bad)  
   14000e1fc:	mov    ah,0xc3
   14000e1fe:	enter  0xbfc8,0xb2
   14000e202:	xchg   ebp,eax
   14000e203:	nop
   14000e204:	mov    DWORD PTR [rax],eax
   14000e206:	add    BYTE PTR [rax],al
   14000e208:	add    BYTE PTR [rax],al
   14000e20a:	add    BYTE PTR [rdx+0x60],ch
   14000e20d:	pop    rbp
   14000e20e:	pop    rsp
   14000e20f:	pop    rax
   14000e210:	push   rbp
   14000e211:	rex.WRXB push r8
   14000e213:	rex.WB xor cl,BYTE PTR [r10]
   14000e216:	adc    BYTE PTR [rcx],ah
   14000e218:	imul   ebp,DWORD PTR [rsi+0x78],0xffffff98
   14000e21c:	mov    ah,0xc3
   14000e21e:	retf   0xbac8
   14000e221:	mov    al,0x95
   14000e223:	nop
	...
   14000e22c:	add    al,dh
   14000e22e:	(bad)  
   14000e22f:	pop    rsp
   14000e230:	push   rbp
   14000e231:	push   rbx
   14000e232:	rex.RB (bad) 
   14000e234:	cldemote BYTE PTR [rdx]
   14000e237:	adc    esp,DWORD PTR [rdi]
   14000e239:	outs   dx,BYTE PTR ds:[rsi]
   14000e23a:	jne    0x14000e1c0
   14000e23c:	mov    ah,0xc3
   14000e23e:	retf   0xbac8
   14000e241:	movabs ds:0x9090,al
   14000e24a:	add    BYTE PTR [rax],al
   14000e24c:	add    BYTE PTR [rax],al
   14000e24e:	add    BYTE PTR [rax],al
   14000e250:	addr32 rex.R (bad) 
   14000e253:	sbb    DWORD PTR [rax],ebx
   14000e255:	sbb    BYTE PTR [rdx],al
   14000e257:	sbb    al,0x21
   14000e259:	imul   esi,DWORD PTR [rbx+0x7e],0xffffffae
   14000e25d:	ret    
   14000e25e:	iret   
   14000e25f:	enter  0xa0b9,0x90
   14000e263:	mov    WORD PTR [rax],es
	...
   14000e271:	add    BYTE PTR [rax+rsi*1],al
   14000e274:	(bad)  
   14000e275:	(bad)  
   14000e276:	(bad)  
   14000e277:	or     DWORD PTR [rbx],edx
   14000e279:	sub    ch,BYTE PTR [rsi+0x7a]
   14000e27c:	stos   BYTE PTR es:[rdi],al
   14000e27d:	enter  0xc8cf,0xb4
   14000e281:	xchg   ebp,eax
   14000e282:	nop
	...
   14000e28f:	add    BYTE PTR [rax],al
   14000e291:	add    BYTE PTR [rcx+0x39],dl
   14000e294:	(bad)  
   14000e295:	or     BYTE PTR [rax],dh
   14000e297:	(bad)  
   14000e298:	sbb    al,0x25
   14000e29a:	ins    DWORD PTR es:[rdi],dx
   14000e29b:	jns    0x14000e247
   14000e29d:	leave  
   14000e29e:	(bad)  
   14000e29f:	enter  0x95b2,0x80
	...
   14000e2b3:	fs rex.WXB xor al,0x6
   14000e2b7:	or     eax,0x756b150a
   14000e2bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e2bd:	leave  
   14000e2be:	fcmovne st,st(0)
   14000e2c0:	test   eax,0x8e90
	...
   14000e2d5:	rex.RX xor eax,0x271d3a37
   14000e2db:	jae    0x14000e27c
   14000e2dd:	(bad)  
   14000e2de:	fcmovnb st,st(5)
   14000e2e0:	movabs al,ds:0x90
	...
   14000e2f5:	add    BYTE PTR [rax],al
   14000e2f7:	xor    al,0xa
   14000e2fa:	and    DWORD PTR [rcx-0x64],esi
   14000e2fd:	fsubr  st,st(2)
   14000e2ff:	mov    esi,0x8195
	...
   14000e318:	rex.B
   14000e319:	rex adc DWORD PTR [rbx-0x7c],ebp
   14000e31d:	fucomp st(0)
   14000e31f:	mov    edx,0x8e95
	...
   14000e338:	add    BYTE PTR [rsi],dh
   14000e33a:	add    eax,0xe8e57e25
   14000e33f:	mov    ah,0x90
	...
   14000e359:	imul   edi,DWORD PTR [rdx],0xe7e57916
   14000e35f:	test   eax,0x87
	...
   14000e378:	add    BYTE PTR [rax],al
   14000e37a:	rex.WR sub rax,0xffffffff93d1d171
   14000e380:	out    dx,al
	...
   14000e399:	add    BYTE PTR [rax],al
   14000e39b:	cmp    eax,0x94c9d029
	...
   14000e3b8:	add    BYTE PTR [rax],al
   14000e3ba:	add    BYTE PTR [rdi+0x20],ah
   14000e3bd:	stos   DWORD PTR es:[rdi],eax
   14000e3be:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   14000e3db:	add    BYTE PTR [rbx+0x75],al
   14000e3de:	mov    eax,DWORD PTR [rax]
	...
   14000e428:	(bad)  
   14000e429:	(bad)  
   14000e42a:	(bad)  
   14000e42b:	(bad)  
   14000e42c:	(bad)  
   14000e42d:	(bad)  
   14000e42e:	(bad)  
   14000e42f:	(bad)  
   14000e430:	(bad)  
   14000e431:	clc    
   14000e432:	(bad)  
   14000e433:	(bad)  
   14000e434:	(bad)  
   14000e435:	clc    
   14000e436:	(bad)  
   14000e437:	(bad)  
   14000e438:	(bad)  
   14000e439:	clc    
   14000e43a:	(bad)  
   14000e43b:	(bad)  
   14000e43c:	push   rax
   14000e43e:	(bad)  
   14000e43f:	(bad)  
   14000e440:	push   rax
   14000e442:	ud0    edi,edi
   14000e445:	loopne 0x14000e44e
   14000e447:	(bad)  
   14000e448:	jmp    rax
   14000e44a:	add    edi,ebp
   14000e44c:	inc    eax
   14000e44e:	add    ecx,esi
   14000e450:	clc    
   14000e451:	add    BYTE PTR [rax],al
   14000e453:	movsxd esi,eax
   14000e455:	add    BYTE PTR [rax],al
   14000e457:	add    esp,eax
   14000e459:	add    BYTE PTR [rax],al
   14000e45b:	add    eax,DWORD PTR [rax-0x7ff90000]
   14000e461:	add    BYTE PTR [rax],al
   14000e463:	(bad)  
   14000e464:	loopne 0x14000e466
   14000e466:	add    BYTE PTR [rdi],cl
   14000e468:	clc    
   14000e469:	add    BYTE PTR [rax],al
   14000e46b:	ud0    eax,DWORD PTR [rax]
   14000e46e:	add    BYTE PTR [rdi],cl
   14000e470:	inc    eax
   14000e472:	add    BYTE PTR [rdi],bl
   14000e474:	inc    eax
   14000e476:	add    BYTE PTR [rdi],bl
   14000e478:	jmp    rax
   14000e47a:	add    BYTE PTR [rdi],bl
   14000e47c:	(bad)  
   14000e47d:	clc    
   14000e47e:	add    BYTE PTR [rdi],bh
   14000e480:	(bad)  
   14000e481:	inc    BYTE PTR [rax]
   14000e483:	(bad)  
   14000e484:	(bad)  
   14000e485:	inc    DWORD PTR [rax]
   14000e487:	(bad)  
   14000e488:	(bad)  
   14000e489:	inc    DWORD PTR [rax-0x7f000081]
   14000e48f:	jg     0x14000e490
   14000e491:	inc    eax
   14000e493:	jg     0x14000e494
   14000e495:	jmp    rax
   14000e497:	(bad)  
   14000e498:	(bad)  
   14000e499:	jmp    rcx
   14000e49b:	(bad)  
   14000e49c:	(bad)  
   14000e49d:	push   rcx
   14000e49f:	(bad)  
   14000e4a0:	(bad)  
   14000e4a1:	(bad)  
   14000e4a2:	(bad)  
   14000e4a3:	(bad)  
   14000e4a4:	(bad)  
   14000e4a5:	(bad)  
   14000e4a6:	(bad)  
   14000e4a7:	jmp    FWORD PTR [rax]
   14000e4a9:	add    BYTE PTR [rax],al
   14000e4ab:	add    BYTE PTR [rax],dl
   14000e4ad:	add    BYTE PTR [rax],al
   14000e4af:	add    BYTE PTR [rax],ah
   14000e4b1:	add    BYTE PTR [rax],al
   14000e4b3:	add    BYTE PTR [rcx],al
   14000e4b5:	add    BYTE PTR [rax],cl
   14000e4b7:	add    BYTE PTR [rax],al
   14000e4b9:	add    BYTE PTR [rax],al
   14000e4bb:	add    BYTE PTR [rax],al
   14000e4bd:	add    DWORD PTR [rax],eax
	...
   14000e4c7:	add    BYTE PTR [rax],al
   14000e4c9:	add    DWORD PTR [rax],eax
   14000e4cb:	add    BYTE PTR [rax],al
   14000e4cd:	add    DWORD PTR [rax],eax
   14000e4cf:	add    BYTE PTR [rax],al
   14000e4d1:	add    BYTE PTR [rax],al
   14000e4d3:	add    BYTE PTR [rsi+0x37],dl
   14000e4d6:	cmp    al,0x0
   14000e4d8:	push   rsi
   14000e4d9:	cmp    BYTE PTR [rbx],bh
   14000e4db:	add    BYTE PTR [rsi+0x45],ah
   14000e4de:	add    BYTE PTR ds:[rdi],dl
   14000e4e1:	adc    al,0x5f
   14000e4e3:	add    BYTE PTR [rdx],bl
   14000e4e5:	(bad)  
   14000e4e6:	pop    rsi
   14000e4e7:	add    BYTE PTR [rdx*1+0x1e2c0045],ah
   14000e4ee:	rex.WRB add BYTE PTR [rip+0x19004128],r15b        # 0x15901261d
   14000e4f5:	sbb    DWORD PTR [rsi+0x0],ebp
   14000e4f8:	adc    eax,0x16007317
   14000e4fd:	sbb    DWORD PTR [rcx+0x0],edi
   14000e500:	cmp    edi,DWORD PTR ds:[rbp+0x0]
   14000e504:	rex.XB sub eax,0x354e0046
   14000e50a:	add    BYTE PTR [rdi+0x33],al
   14000e50e:	rex.WRX add BYTE PTR [rax+0x3b],r11b
   14000e512:	rex.RX add BYTE PTR [rsi-0x65ffd7a6],r8b
   14000e519:	push   0x5b800027
   14000e51e:	add    BYTE PTR [rbp-0x59ffa385],bl
   14000e525:	jbe    0x14000e56d
   14000e527:	add    BYTE PTR [rdi-0x49ffac81],ch
   14000e52d:	add    BYTE PTR [rcx+0x0],0xb2
   14000e531:	test   DWORD PTR [rdx+0x0],ecx
   14000e534:	(bad)  
   14000e535:	mov    cs,WORD PTR [rbx+0x0]
   14000e538:	ror    DWORD PTR [rbp-0x733bffb1],0x4d
   14000e53f:	add    ch,cl
   14000e541:	xchg   ecx,eax
   14000e542:	rex.RXB add r10b,r10b
   14000e545:	xchg   ebp,eax
   14000e546:	rex.XB add r13b,dl
   14000e549:	cdq    
   14000e54a:	add    dil,r10b
   14000e54d:	pushf  
   14000e54e:	rex.RX add al,r11b
   14000e551:	lahf   
   14000e552:	rex.WXB add r9b,dl
   14000e555:	movabs al,ds:0xaed8007aa9ce005b
   14000e55e:	jb     0x14000e560
   14000e560:	sbb    ah,BYTE PTR [rax]
   14000e562:	xchg   DWORD PTR [rax],eax
   14000e564:	sbb    ah,BYTE PTR [rax]
   14000e566:	mov    BYTE PTR [rax],al
   14000e568:	sbb    al,0x22
   14000e56a:	lea    eax,[rax]
   14000e56c:	and    BYTE PTR [rcx],ch
   14000e56e:	xchg   edi,eax
   14000e56f:	add    BYTE PTR [rax],ah
   14000e571:	sub    bl,BYTE PTR [rax-0x59cbdb00]
   14000e577:	add    BYTE PTR [rsi],ah
   14000e579:	ss test eax,0xab382700
   14000e57f:	add    BYTE PTR [rdx],ch
   14000e581:	(bad)  
   14000e582:	mov    ch,0x0
   14000e584:	cmp    al,0x42
   14000e586:	mov    esp,0xb36a2b00
   14000e58b:	add    BYTE PTR [rdi+0x4b],al
   14000e58e:	(bad)  
   14000e58f:	add    BYTE PTR [rbp+riz*2-0x41],bl
   14000e593:	add    BYTE PTR [rbx+0x72],dh
   14000e596:	mov    esp,0xc7382e00
   14000e59b:	add    BYTE PTR [rdx],dh
   14000e59d:	cmp    eax,eax
   14000e59f:	add    BYTE PTR [rsi],ch
   14000e5a1:	rex.WX ret 
   14000e5a3:	add    BYTE PTR [rsi],ch
   14000e5a5:	rex.WR ret 0x2f00
   14000e5a9:	rex.WRXB enter 0x3000,0x42
   14000e5ae:	iret   
   14000e5af:	add    BYTE PTR [rax],dh
   14000e5b1:	rex rol BYTE PTR [rax],1
   14000e5b4:	xor    ecx,DWORD PTR [rsi-0x28]
   14000e5b7:	add    BYTE PTR [rdx],dh
   14000e5b9:	push   rdi
   14000e5ba:	rol    DWORD PTR [rax],cl
   14000e5bc:	xor    DWORD PTR [rsi-0x35],edi
   14000e5bf:	add    BYTE PTR [rip+0x3700da62],dh        # 0x17701c027
   14000e5c5:	jae    0x14000e59f
   14000e5c7:	add    BYTE PTR [rip+0x3700e05b],dh        # 0x17701c628
   14000e5cd:	push   0x683700e3
   14000e5d2:	out    0x0,al
   14000e5d4:	cmp    BYTE PTR [rbp-0x1a],ch
   14000e5d7:	add    BYTE PTR [rdi],dh
   14000e5d9:	jne    0x14000e5be
   14000e5db:	add    BYTE PTR [rax],bh
   14000e5dd:	je     0x14000e5c5
   14000e5df:	add    BYTE PTR [rsi],dh
   14000e5e1:	jp     0x14000e5c3
   14000e5e3:	add    BYTE PTR [rcx],bh
   14000e5e5:	jne    0x14000e5d0
   14000e5e7:	add    BYTE PTR [rdx],bh
   14000e5e9:	jns    0x14000e5d5
   14000e5eb:	add    BYTE PTR [rbx+0x49],al
   14000e5ee:	rol    DWORD PTR [rax],0x41
   14000e5f1:	jle    0x14000e5d8
   14000e5f3:	add    BYTE PTR [rax+rax*4],dh
   14000e5f6:	fld    DWORD PTR [rax]
   14000e5f8:	cmp    al,0x8a
   14000e5fa:	in     al,dx
   14000e5fb:	add    BYTE PTR [rbx],bh
   14000e5fd:	(bad)  
   14000e5fe:	in     eax,dx
   14000e5ff:	add    BYTE PTR [rax],bh
   14000e601:	xchg   esp,eax
   14000e602:	in     eax,0x0
   14000e604:	cmp    edx,DWORD PTR [rcx-0x68c4ff12]
   14000e60a:	out    dx,eax
   14000e60b:	add    BYTE PTR [rbx],bh
   14000e60d:	fwait
   14000e60e:	out    dx,eax
   14000e60f:	add    BYTE PTR [rcx],bh
   14000e611:	lahf   
   14000e612:	lock add BYTE PTR [rcx],bh
   14000e615:	movabs ds:0x9d6200c68f7200ed,eax
   14000e61e:	(bad)  
   14000e61f:	add    BYTE PTR [rdx-0x49],al
   14000e622:	out    dx,al
   14000e623:	add    BYTE PTR [rax-0x23ff4567],ah
   14000e629:	mov    ebx,0x8385008c
   14000e62e:	rol    BYTE PTR [rax],0x8e
   14000e631:	mov    eax,ebx
   14000e633:	add    BYTE PTR [rbp-0x5cff3971],cl
   14000e639:	scas   eax,DWORD PTR es:[rdi]
   14000e63a:	enter  0x0,0x0
	...
   14000e8ca:	add    BYTE PTR [rax],al
   14000e8cc:	(bad)  
   14000e8cd:	(bad)  
   14000e8ce:	inc    DWORD PTR [rax]
	...
   14000e8e4:	add    BYTE PTR [rax],al
   14000e8e6:	add    BYTE PTR [rax+rax*1+0x0],dl
	...
   14000e8f6:	push   rbx
   14000e8f7:	rex.WRXB
   14000e8f8:	rex.WXB pop r10
	...
   14000e906:	xor    eax,0x45413c
	...
   14000e913:	add    BYTE PTR [rax],al
   14000e915:	or     al,0x26
   14000e917:	sub    dh,BYTE PTR [rsi]
   14000e919:	(bad)  
   14000e91a:	rex.W add BYTE PTR [rax],al
   14000e91d:	add    BYTE PTR [rbp+0x0],dl
   14000e920:	add    BYTE PTR [rax],al
   14000e922:	and    bl,BYTE PTR [rdi+rdx*1]
   14000e925:	or     eax,0x3a2b260a
   14000e92a:	rex.RX
   14000e92b:	rex.WXB push r10
   14000e92d:	xor    BYTE PTR [rbx],dh
   14000e92f:	add    BYTE PTR [rax],al
   14000e931:	and    DWORD PTR [rdi],ebx
   14000e933:	sbb    eax,0xb07151b
   14000e938:	(bad)  
   14000e939:	xor    eax,0x38454b45
   14000e93e:	xor    DWORD PTR [rax],eax
   14000e940:	add    BYTE PTR [rbx],ah
   14000e942:	and    BYTE PTR [rdi],bl
   14000e944:	sbb    edx,DWORD PTR [rsi]
   14000e946:	add    eax,DWORD PTR [rsi+riz*1]
   14000e949:	sub    al,0x43
   14000e94b:	rex.WXB
   14000e94c:	xor    al,BYTE PTR [rax]
   14000e94f:	add    BYTE PTR [rax],al
   14000e951:	add    BYTE PTR [rax],al
   14000e953:	push   rsi
   14000e954:	sbb    edx,DWORD PTR [rax]
   14000e956:	(bad)  
   14000e957:	or     BYTE PTR [rdx],cl
   14000e959:	sub    DWORD PTR [rbx+0x4b],eax
   14000e95c:	ds sub eax,0x0
   14000e962:	add    BYTE PTR [rax],al
   14000e964:	add    BYTE PTR [rbx],dl
   14000e966:	add    al,BYTE PTR [rcx]
   14000e968:	add    eax,0x394f4227
   14000e96d:	push   rdi
	...
   14000e976:	sbb    BYTE PTR [rcx],dl
   14000e978:	(bad)  
   14000e979:	and    al,0x44
   14000e97b:	push   rax
   14000e97c:	(bad)  
	...
   14000e985:	add    BYTE PTR [rax],al
   14000e987:	add    BYTE PTR [rdx],dl
   14000e989:	or     DWORD PTR [rcx+0x51],ecx
   14000e98c:	rex.RXB add BYTE PTR [r8],r8b
	...
   14000e997:	add    BYTE PTR [rax],al
   14000e999:	(bad)  
   14000e99b:	rex.WR pop rax
	...
   14000e9a9:	adc    al,0x2e
   14000e9ab:	cmp    eax,0x0
	...
   14000e9b8:	add    BYTE PTR [rax],al
   14000e9ba:	(bad)  
   14000e9bb:	pop    rax
	...
   14000e9d0:	(bad)  
   14000e9d1:	inc    DWORD PTR [rax]
   14000e9d3:	add    dh,bh
   14000e9d5:	inc    DWORD PTR [rax]
   14000e9d7:	add    ah,bh
   14000e9d9:	(bad)  
   14000e9da:	add    BYTE PTR [rax],al
   14000e9dc:	cld    
   14000e9dd:	(bad)  
   14000e9de:	add    BYTE PTR [rax],al
   14000e9e0:	clc    
   14000e9e1:	sbb    eax,0x1c00000
   14000e9e6:	add    BYTE PTR [rax],al
   14000e9e8:	add    BYTE PTR [rcx],0x0
   14000e9eb:	add    BYTE PTR [rax-0x1ffffffd],al
   14000e9f1:	add    eax,DWORD PTR [rax]
   14000e9f3:	add    al,bh
   14000e9f5:	add    eax,DWORD PTR [rax]
   14000e9f7:	add    ah,bh
   14000e9f9:	(bad)  
   14000e9fa:	add    BYTE PTR [rax],al
   14000e9fc:	inc    DWORD PTR [rdi]
   14000e9fe:	add    BYTE PTR [rax],al
   14000ea00:	inc    DWORD PTR [rdi-0x70010000]
   14000ea06:	add    BYTE PTR [rax],al
   14000ea08:	dec    edi
   14000ea0a:	add    BYTE PTR [rax],al
   14000ea0c:	(bad)  
   14000ea0d:	inc    DWORD PTR [rax]
   14000ea0f:	add    BYTE PTR [rcx+0xd474e50],cl
   14000ea15:	or     bl,BYTE PTR [rdx]
   14000ea17:	or     al,BYTE PTR [rax]
   14000ea19:	add    BYTE PTR [rax],al
   14000ea1b:	or     eax,0x52444849
   14000ea20:	add    BYTE PTR [rax],al
   14000ea22:	add    DWORD PTR [rax],eax
   14000ea24:	add    BYTE PTR [rax],al
   14000ea26:	add    DWORD PTR [rax],eax
   14000ea28:	or     BYTE PTR [rsi],al
   14000ea2a:	add    BYTE PTR [rax],al
   14000ea2c:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   14000ea30:	data16 add BYTE PTR [rax],al
   14000ea33:	and    BYTE PTR [rax],al
   14000ea35:	rex.WB
   14000ea36:	rex.R
   14000ea37:	push   r12
   14000ea39:	js     0x14000e9d7
   14000ea3b:	in     al,dx
   14000ea3c:	mov    ebp,0xd765b069
   14000ea41:	jne    0x14000ea22
   14000ea43:	neg    DWORD PTR [rbx+0x7b]
   14000ea46:	lahf   
   14000ea47:	jae    0x14000ea37
   14000ea49:	lock out 0xa1,al
   14000ea4c:	(bad)  
   14000ea4d:	movabs al,ds:0x24ce06201001031b
   14000ea56:	sub    dh,cl
   14000ea58:	and    al,0x38
   14000ea5a:	push   rbx
   14000ea5b:	and    al,BYTE PTR [rbp-0x6f]
   14000ea5e:	adc    ch,BYTE PTR [rcx-0x75b4d25e]
   14000ea64:	and    al,0x47
   14000ea66:	mov    dl,0x2d
   14000ea68:	cmp    esi,DWORD PTR [rdx+0x6cb24b2d]
   14000ea6e:	retf   
   14000ea6f:	rex.WX cmp al,0xa5
   14000ea72:	(bad)  
   14000ea73:	pop    rbx
   14000ea74:	mov    dl,BYTE PTR [rbx+rbx*8]
   14000ea77:	sub    ecx,ebx
   14000ea79:	sub    al,bh
   14000ea7b:	pop    rdi
   14000ea7c:	pushf  
   14000ea7d:	mov    ah,BYTE PTR [rbp-0x69]
   14000ea80:	push   rbx
   14000ea81:	scas   al,BYTE PTR es:[rdi]
   14000ea82:	jl     0x14000ea0c
   14000ea84:	stos   DWORD PTR es:[rdi],eax
   14000ea85:	xchg   edx,eax
   14000ea86:	stos   BYTE PTR es:[rdi],al
   14000ea87:	cmp    BYTE PTR [rcx-0x368e3aac],ch
   14000ea8d:	mov    gs,WORD PTR [rip+0xffffffffd822e595]        # 0x11823d028
   14000ea93:	call   0xfc3dedde
   14000ea98:	jle    0x14000ead7
   14000ea9a:	mov    edi,0x7bddef7e
   14000ea9f:	iret   
   14000eaa0:	fldcw  WORD PTR [rbx]
   14000eaa2:	(bad)  
   14000eaa3:	neg    dl
   14000eaa5:	sti    
   14000eaa6:	pushf  
   14000eaa7:	sti    
   14000eaa8:	rcl    BYTE PTR [rcx+rbp*1],1
   14000eaab:	or     DWORD PTR [rax-0x5d],esp
   14000eaae:	mov    ebx,0xbf5e02cf
   14000eab3:	sti    
   14000eab4:	out    dx,al
   14000eab5:	jo     0x14000ea5d
   14000eab7:	jnp    0x14000ea8f
   14000eab9:	hlt    
   14000eaba:	pop    rdi
   14000eabb:	push   QWORD PTR [rbp+0x4bd2f436]
   14000eac1:	(bad)  
   14000eac2:	mov    ebp,0x2f4bd2f4
   14000eac7:	mov    ebp,0x2f4bd2f4
   14000eacc:	mov    ebp,0x2f4bd2f4
   14000ead1:	mov    ebp,0x2f4bd2f4
   14000ead6:	mov    ebp,0x2f4bd2f4
   14000eadb:	mov    ebp,0x2f4bd2f4
   14000eae0:	mov    ebp,0x2f4bd2f4
   14000eae5:	mov    ebp,0x2f4bd2f4
   14000eaea:	mov    ebp,0x2f4bd2f4
   14000eaef:	mov    ebp,0x2f4bd2f4
   14000eaf4:	mov    ebp,0x2f4bd2f4
   14000eaf9:	ja     0x14000ea8d
   14000eafb:	enter  0x3eed,0x80
   14000eaff:	pop    rsi
   14000eb00:	jp     0x14000eb03
   14000eb02:	loopne 0x14000eaf1
   14000eb04:	(bad)  
   14000eb05:	sub    al,ah
   14000eb07:	sti    
   14000eb08:	push   rcx
   14000eb09:	add    BYTE PTR [rdi],al
   14000eb0b:	clc    
   14000eb0c:	in     eax,0xa7
   14000eb0e:	fidivr WORD PTR [rdx+0x78]
   14000eb11:	cmp    BYTE PTR [rax],ch
   14000eb13:	ds jns 0x14000eb0e
   14000eb16:	out    0xa5,al
   14000eb18:	(bad)  
   14000eb19:	mov    esp,0x7a9cae1
   14000eb1e:	(bad)  
   14000eb1f:	ja     0x14000ead7
   14000eb21:	retf   0xfdc5
   14000eb24:	sbb    esp,edi
   14000eb26:	stos   DWORD PTR es:[rdi],eax
   14000eb27:	jmp    0x187dfab2a
   14000eb2c:	(bad)  
   14000eb2d:	in     eax,0xaf
   14000eb2f:	(bad)  
   14000eb30:	outs   dx,DWORD PTR ds:[rsi]
   14000eb31:	cli    
   14000eb32:	sub    eax,0x9fb1a0
   14000eb37:	sub    BYTE PTR [rdi-0x4859407],bh
   14000eb3d:	rex.WRX loop 0x14000eb0e
   14000eb40:	adc    edi,DWORD PTR [rdi-0x45]
   14000eb43:	push   fs
   14000eb45:	xchg   edi,eax
   14000eb46:	pop    rsi
   14000eb47:	cmp    cl,dl
   14000eb49:	out    dx,eax
   14000eb4a:	add    BYTE PTR [rdx],0x28
   14000eb4d:	sub    DWORD PTR [rdx-0xf],0xe33ea7f1
   14000eb54:	mov    ch,0xfe
   14000eb56:	retf   0xdefa
   14000eb59:	in     eax,0xf7
   14000eb5b:	sbb    al,0xba
   14000eb5d:	jno    0x14000eb40
   14000eb5f:	rex.WRB retf 
   14000eb61:	mov    ebx,0xcd1feed7
   14000eb66:	outs   dx,BYTE PTR ds:[rsi]
   14000eb67:	(bad)  
   14000eb68:	sbb    esi,DWORD PTR [rbx+rdx*8]
   14000eb6b:	int    0x31
   14000eb6d:	mov    bl,0xea
   14000eb6f:	shl    DWORD PTR [rax-0x420198d],0x8d
   14000eb76:	sbb    esi,DWORD PTR [rbx-0x25]
   14000eb79:	cmp    dh,dh
   14000eb7b:	(bad)  
   14000eb7c:	cmp    dh,dh
   14000eb7e:	(bad)  
   14000eb7f:	loope  0x14000eb5d
   14000eb81:	outs   dx,DWORD PTR ds:[rsi]
   14000eb82:	jle    0x14000eb7f
   14000eb84:	iret   
   14000eb85:	jrcxz  0x14000eb95
   14000eb87:	xchg   esp,eax
   14000eb88:	ds add ch,al
   14000eb8b:	in     eax,0xf6
   14000eb8d:	rex.WX stos QWORD PTR es:[rdi],rax
   14000eb8f:	cld    
   14000eb90:	fidivr WORD PTR [rsi-0x36]
   14000eb93:	rex.RXB (bad) 
   14000eb95:	(bad)  
   14000eb96:	mov    ecx,0x5616cfb7
   14000eb9b:	jg     0x14000ec1b
   14000eb9d:	test   esi,0x5f36e7e5
   14000eba3:	(bad)  
   14000eba4:	sub    eax,0x7fe9e379
   14000eba9:	(bad)  
   14000ebaa:	mov    cl,0xed
   14000ebac:	(bad)  
   14000ebad:	pop    rax
   14000ebae:	fnstsw WORD PTR [rdi-0x7398a73e]
   14000ebb4:	mov    esp,0xf38f7a50
   14000ebb9:	(bad)  
   14000ebba:	fldcw  WORD PTR [rcx+0x51]
   14000ebbd:	dec    dl
   14000ebbf:	call   QWORD PTR [rax+0x3e]
   14000ebc2:	dec    BYTE PTR [rdi]
   14000ebc4:	inc    BYTE PTR [rbx-0x2bf644a5]
   14000ebca:	(bad)  
   14000ebcb:	push   0xffffffff81a3e940
   14000ebd0:	outs   dx,DWORD PTR ds:[rsi]
   14000ebd1:	rex.WB cli 
   14000ebd3:	or     BYTE PTR [rax+0x5127db97],ah
   14000ebd9:	stc    
   14000ebda:	sbb    eax,0x802c3ef1
   14000ebdf:	(bad)  
   14000ebe0:	test   eax,0x3fc3f9ef
   14000ebe5:	mov    ah,0xb0
   14000ebe7:	mov    esi,0xa676f7f9
   14000ebec:	mov    bl,0xa7
   14000ebee:	xchg   BYTE PTR [rdi-0x1],ah
   14000ebf1:	movabs ds:0xdfd9f0e6bffcfc3c,eax
   14000ebfa:	(bad)  
   14000ebfb:	jne    0x14000ebe4
   14000ebfd:	cmp    al,0x23
   14000ebff:	popf   
   14000ec00:	xor    dh,dh
   14000ec02:	ret    0xbd8
   14000ec05:	rex.XB out dx,eax
   14000ec07:	sbb    BYTE PTR [rbx-0x6a],bh
   14000ec0a:	(bad)  
   14000ec0b:	fidivr DWORD PTR [rsp+rbp*8-0x63]
   14000ec0f:	int    0xe5
   14000ec11:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ec12:	(bad)  
   14000ec13:	fs neg edi
   14000ec16:	cld    
   14000ec17:	imul   edi,DWORD PTR [rdi-0x4918287],0xffffffc7
   14000ec1e:	fiadd  WORD PTR [rcx+0x1f]
   14000ec21:	or     esp,edi
   14000ec23:	out    dx,al
   14000ec24:	rcr    BYTE PTR [rbx],cl
   14000ec26:	sbb    BYTE PTR [rsi+0x6e],0x8f
   14000ec2a:	int3   
   14000ec2b:	jnp    0x14000ec2b
   14000ec2d:	add    ch,BYTE PTR [rax+0x3f7df2de]
   14000ec33:	clc    
   14000ec34:	xor    esp,ebx
   14000ec36:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ec37:	in     eax,0xbf
   14000ec39:	mov    dl,0xdf
   14000ec3b:	call   0x189dddba8
   14000ec40:	mov    ?,edi
   14000ec42:	(bad)  
   14000ec43:	dec    ebp
   14000ec45:	movabs eax,ds:0xfb1817bbeb23fe97
   14000ec4e:	sbb    ebx,eax
   14000ec50:	movabs ds:0x5161828a0c145c60,al
   14000ec59:	xor    BYTE PTR [rax],ch
   14000ec5b:	test   BYTE PTR [rdx+0x60],dl
   14000ec5e:	and    dl,bh
   14000ec60:	fdiv   DWORD PTR [rcx]
   14000ec62:	(bad)  
   14000ec64:	enter  0xdc53,0xf8
   14000ec68:	(bad)  
   14000ec69:	dec    edx
   14000ec6b:	sbb    eax,0x8c48be
   14000ec70:	movabs ds:0xf400de9577e046f4,al
   14000ec79:	repnz in eax,dx
   14000ec7b:	xchg   edi,eax
   14000ec7c:	pop    rbx
   14000ec7d:	sub    bh,bh
   14000ec7f:	fstp   TBYTE PTR [rsi+0x7a7f07ef]
   14000ec85:	mov    eax,0x4173f8b0
   14000ec8a:	sbb    al,0x17
   14000ec8c:	(bad)  
   14000ec8d:	pop    rsi
   14000ec8e:	(bad)  
   14000ec8f:	jrcxz  0x14000ecd0
   14000ec91:	(bad)  
   14000ec92:	lahf   
   14000ec93:	sbb    al,0x3e
   14000ec95:	stc    
   14000ec96:	out    dx,eax
   14000ec97:	pop    rax
   14000ec98:	mov    ebx,0xd9158171
   14000ec9d:	addr32 pop rax
   14000ec9f:	jp     0x14000ec67
   14000eca1:	mov    esi,0xa0066460
   14000eca6:	je     0x14000ecea
   14000eca8:	sub    DWORD PTR [rsi+0x9c28452],ecx
   14000ecae:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ecaf:	or     eax,DWORD PTR [rdi-0x38167af2]
   14000ecb5:	fisubr WORD PTR [rdx-0x3200a9]
   14000ecbb:	out    dx,al
   14000ecbc:	mov    ds,WORD PTR [rax+riz*4+0x37]
   14000ecc0:	add    bl,bh
   14000ecc2:	xchg   edx,eax
   14000ecc3:	mov    eax,0xbd007ddb
   14000ecc8:	fsub   QWORD PTR [rbx-0xe]
   14000eccb:	rex.WX shr BYTE PTR [rdi+0x7e97cb7a],0xe0
   14000ecd3:	xchg   DWORD PTR [rdi],eax
   14000ecd5:	jrcxz  0x14000ec9c
   14000ecd7:	lahf   
   14000ecd8:	jae    0x14000ecfc
   14000ecda:	pop    rsp
   14000ecdb:	(bad)  
   14000ecdd:	movabs ds:0x862dfe9e6cdbf33a,eax
   14000ece6:	xlat   BYTE PTR ds:[rbx]
   14000ece7:	mov    dh,0x18
   14000ece9:	test   DWORD PTR [rbp+0x53],ebx
   14000ecec:	jbe    0x14000ed3d
   14000ecee:	jmp    0x14a3acb0f
   14000ecf3:	out    0x28,eax
   14000ecf5:	popf   
   14000ecf6:	push   rax
   14000ecf7:	mov    al,ah
   14000ecf9:	popf   
   14000ecfa:	pop    rax
   14000ecfb:	(bad)  
   14000ecfc:	and    DWORD PTR [rsi+rdi*1+0x3c],edx
   14000ed00:	lock add al,0x37
   14000ed03:	jle    0x14000ed02
   14000ed05:	(bad)  
   14000ed06:	(bad)  
   14000ed07:	mov    edi,0x481114fd
   14000ed0c:	hlt    
   14000ed0d:	and    al,0x9c
   14000ed0f:	sub    ebp,esi
   14000ed11:	mov    bh,0x97
   14000ed13:	add    edx,edx
   14000ed15:	sbb    eax,DWORD PTR [rax+0x727dbe5e]
   14000ed1b:	or     esi,DWORD PTR [rdi+rdi*8-0x16813077]
   14000ed22:	mov    ecx,0x7fd2e2d1
   14000ed27:	in     eax,0x4
   14000ed29:	neg    BYTE PTR [rbx+0x53f9fec0]
   14000ed2f:	sbb    al,0x3e
   14000ed31:	cmc    
   14000ed32:	push   QWORD PTR [rcx]
   14000ed34:	fdivr  DWORD PTR [rsi]
   14000ed36:	retf   
   14000ed37:	mov    eax,0x4a2465d9
   14000ed3c:	loope  0x14000ed5b
   14000ed3e:	test   DWORD PTR [rax-0x5c421618],edi
   14000ed44:	adc    al,dh
   14000ed46:	and    bh,BYTE PTR [rax]
   14000ed48:	(bad)  
   14000ed49:	jg     0x14000edc6
   14000ed4b:	mov    cl,0xd7
   14000ed4d:	jno    0x14000ece3
   14000ed4f:	call   0x12ae45cd7
   14000ed54:	scas   eax,DWORD PTR es:[rdi]
   14000ed55:	std    
   14000ed56:	js     0x14000edd0
   14000ed58:	inc    BYTE PTR [rcx]
   14000ed5a:	pop    rdx
   14000ed5b:	and    edx,eax
   14000ed5d:	(bad)  
   14000ed5f:	fild   WORD PTR [rax-0x6]
   14000ed62:	or     edx,ebx
   14000ed64:	retf   
   14000ed65:	mov    bh,0x5b
   14000ed67:	jb     0x14000ed51
   14000ed69:	inc    eax
   14000ed6b:	sti    
   14000ed6c:	ds cli 
   14000ed6e:	enter  0xc6e2,0xa1
   14000ed72:	call   QWORD PTR [rsi+0x44]
   14000ed75:	(bad)  
   14000ed76:	(bad)  
   14000ed77:	cmp    al,0x57
   14000ed79:	scas   eax,DWORD PTR es:[rdi]
   14000ed7a:	pop    rbp
   14000ed7b:	movsxd esi,ebp
   14000ed7d:	test   DWORD PTR [rdi-0x39],edi
   14000ed80:	ror    bl,cl
   14000ed82:	iret   
   14000ed83:	xor    ebx,DWORD PTR [rax+0x3524635c]
   14000ed89:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ed8a:	(bad)  
   14000ed8b:	lahf   
   14000ed8c:	cmp    al,0xbe
   14000ed8e:	not    DWORD PTR [rsi+rbx*8-0x3ce353cf]
   14000ed95:	rex.B
   14000ed96:	push   r13
   14000ed98:	jp     0x14000ed24
   14000ed9a:	ret    0x7851
   14000ed9d:	lock sahf 
   14000ed9f:	sbb    BYTE PTR [rcx],ch
   14000eda1:	cmp    BYTE PTR [rdi+0x25],al
   14000eda4:	cli    
   14000eda5:	hlt    
   14000eda6:	rex.RXB jne 0x14000eda4
   14000eda9:	xchg   edi,eax
   14000edaa:	sahf   
   14000edab:	shr    DWORD PTR [rbx-0x75],1
   14000edae:	je     0x14000ed3d
   14000edb0:	rex (bad) 
   14000edb2:	add    eax,0x37a42bc
   14000edb7:	ror    bl,1
   14000edb9:	mov    bh,0x47
   14000edbb:	(bad)  
   14000edbc:	in     al,0xfd
   14000edbe:	rex.WXB
   14000edbf:	rex.RXB out dx,al
   14000edc1:	pop    rbx
   14000edc2:	pop    rsp
   14000edc3:	jg     0x14000edb5
   14000edc5:	xchg   ecx,eax
   14000edc6:	mov    edi,0x5fbfbde5
   14000edcb:	rex.R fsubr DWORD PTR [rbp-0x18463de5]
   14000edd2:	fnstcw WORD PTR [rax-0xf]
   14000edd5:	mov    bh,0x29
   14000edd7:	scas   eax,DWORD PTR es:[rdi]
   14000edd8:	pop    rsi
   14000edd9:	(bad)  
   14000edda:	movabs al,ds:0xe894284ef0120633
   14000ede3:	std    
   14000ede4:	or     ecx,edi
   14000ede6:	movabs al,ds:0x2b8c2878cf438612
   14000edef:	rex.RXB push r13
   14000edf1:	cmp    BYTE PTR [rdi+rsi*2+0x4e07178],bh
   14000edf8:	jno    0x14000edcb
   14000edfa:	(bad)  
   14000edfb:	sub    al,0xba
   14000edfd:	out    0xe3,al
   14000edff:	(bad)  
   14000ee00:	(bad)  
   14000ee01:	jg     0x14000edfd
   14000ee03:	sbb    esi,esp
   14000ee05:	movabs ds:0xa006f4bcc08de900,eax
   14000ee0e:	xchg   edi,eax
   14000ee0f:	xlat   BYTE PTR ds:[rbx]
   14000ee10:	pop    rsi
   14000ee11:	out    0x43,al
   14000ee13:	jg     0x14000ee24
   14000ee15:	xchg   esp,eax
   14000ee16:	movd   eax,mm6
   14000ee19:	adc    edi,DWORD PTR [rdi-0x4e]
   14000ee1c:	stos   BYTE PTR es:[rdi],al
   14000ee1d:	stos   BYTE PTR es:[rdi],al
   14000ee1e:	(bad)  
   14000ee20:	adc    al,0x45
   14000ee22:	mov    eax,0x2b32ed7a
   14000ee27:	(bad)  
   14000ee28:	(bad)  
   14000ee29:	(bad)  
   14000ee2a:	ret    
   14000ee2b:	in     eax,dx
   14000ee2c:	xchg   edi,eax
   14000ee2d:	sub    BYTE PTR [rdx-0x57ed79c3],bl
   14000ee33:	add    al,0xcb
   14000ee35:	mul    DWORD PTR [rbx-0x22]
   14000ee38:	pop    rdi
   14000ee39:	jns    0x14000ee9c
   14000ee3b:	xor    al,0xf0
   14000ee3d:	sub    al,0x8d
   14000ee3f:	sbb    al,0x6b
   14000ee41:	mov    eax,DWORD PTR [rip+0xffffffffa59e8bab]        # 0xe59f79f2
   14000ee47:	and    DWORD PTR [rbx+0x5e7042a],0x3881a96f
   14000ee51:	rex.B
   14000ee52:	rex.R pop rax
   14000ee54:	xchg   ebp,eax
   14000ee55:	(bad)  [rdi-0x4]
   14000ee58:	div    edx
   14000ee5a:	outs   dx,DWORD PTR ds:[rsi]
   14000ee5b:	mov    edi,0xf8153e8b
   14000ee60:	xchg   dl,dl
   14000ee62:	pop    rdi
   14000ee63:	nop
   14000ee64:	pop    rsi
   14000ee65:	mov    esi,0x7fbc925d
   14000ee6a:	jns    0x14000ee4b
   14000ee6c:	rex.RXB mov r14d,0x68d503eb
   14000ee72:	cld    
   14000ee73:	(bad)  
   14000ee74:	mov    ebp,0x9d8e2208
   14000ee79:	mov    edx,0x1afe5e46
   14000ee7e:	jmp    0x14000eeaf
   14000ee80:	std    
   14000ee81:	(bad)  
   14000ee82:	jb     0x14000ee67
   14000ee84:	xor    ah,BYTE PTR [rbp+0x28120606]
   14000ee8a:	push   rdx
   14000ee8b:	mov    gs,edi
   14000ee8d:	sbb    al,0x85
   14000ee8f:	test   esi,edi
   14000ee91:	mov    esp,DWORD PTR [rbx-0x31]
   14000ee94:	(bad)  
   14000ee95:	(bad)
   14000ee99:	(bad)
   14000ee9c:	leave  
   14000ee9d:	(bad)  
   14000ee9e:	rex.WX adc QWORD PTR [rbp-0x7fa77080],rcx
   14000eea5:	add    ecx,DWORD PTR [rdx]
   14000eea7:	adc    DWORD PTR [rax+rcx*1+0x74fbca0e],ebx
   14000eeae:	jmp    FWORD PTR [rdi+0x3e4e31fc]
   14000eeb4:	rex (bad) 
   14000eeb6:	sbb    al,0x1c
   14000eeb8:	jge    0x14000eee4
   14000eeba:	xor    BYTE PTR [rdi],ah
   14000eebc:	mov    ebp,0xb5e5e801
   14000eec1:	xchg   ebp,eax
   14000eec2:	add    esp,DWORD PTR [rdi+rbx*4-0x5b]
   14000eec6:	(bad)  
   14000eec7:	sahf   
   14000eec8:	fstp   DWORD PTR [rbp*2+0xb2ffa1c]
   14000eecf:	(bad)  
   14000eed0:	and    edx,DWORD PTR [rcx+rcx*1+0x22]
   14000eed4:	pop    rsp
   14000eed5:	mov    ebx,0x17b5897a
   14000eeda:	jg     0x14000ee67
   14000eedc:	(bad)  
   14000eedd:	rcr    BYTE PTR [rcx-0x5c],cl
   14000eee0:	cdq    
   14000eee1:	xor    BYTE PTR [rax-0x7f],dh
   14000eee4:	or     ah,BYTE PTR [rbp-0x4256ae90]
   14000eeea:	or     BYTE PTR [rbp-0x1f],ah
   14000eeed:	sbb    BYTE PTR [rip+0x54bab1c],cl        # 0x1454c9a0f
   14000eef3:	sub    eax,DWORD PTR [rdi+0xa47862b]
   14000eef9:	(bad)  
   14000eefa:	xchg   DWORD PTR [rbx+0x16],ecx
   14000eefd:	or     dl,BYTE PTR ss:[rsi-0x6a39f569]
   14000ef04:	push   rax
   14000ef05:	jp     0x14000ef77
   14000ef07:	rex.WRX
   14000ef08:	rex adc eax,0x51c4e02f
   14000ef0e:	movabs eax,ds:0x146245fc5c63e27
   14000ef17:	leave  
   14000ef18:	or     ah,dh
   14000ef1a:	test   eax,0x6f4980
   14000ef1f:	jp     0x14000ef9a
   14000ef21:	in     eax,dx
   14000ef22:	fs mov esi,0xe503c7c1
   14000ef28:	clc    
   14000ef29:	xchg   ecx,eax
   14000ef2a:	(bad)  
   14000ef2b:	jg     0x14000ef9f
   14000ef2d:	imul   edi,DWORD PTR [rax],0xa1614b78
   14000ef33:	cli    
   14000ef34:	int    0x59
   14000ef36:	lea    ebx,[rbx+rdi*2+0x5fb3d59e]
   14000ef3d:	rex.XB jbe 0x14000eeef
   14000ef40:	push   rcx
   14000ef41:	rex.W (bad) 
   14000ef43:	sub    dl,cl
   14000ef45:	rcl    BYTE PTR [rbx],0xf3
   14000ef48:	jg     0x14000eeea
   14000ef4a:	lock rex.X push rbp
   14000ef4d:	cmp    dl,BYTE PTR [rsi]
   14000ef4f:	mov    DWORD PTR [rip+0xffffffffd525ebab],0x39afc3a6        # 0x11526db04
   14000ef59:	fmul   QWORD PTR [rdx+0x1828dca3]
   14000ef5f:	scas   eax,DWORD PTR es:[rdi]
   14000ef60:	adc    eax,0x833c8c2c
   14000ef65:	rex.X (bad) 
   14000ef67:	jne    0x14000efa9
   14000ef69:	movabs ds:0xbe6923089c03b6e,al
   14000ef72:	jg     0x14000ef13
   14000ef74:	jg     0x14000ef71
   14000ef76:	rex.RB cli 
   14000ef78:	push   rsp
   14000ef79:	loopne 0x14000ef90
   14000ef7b:	rcr    BYTE PTR [rdi-0x78],cl
   14000ef7e:	pop    rsi
   14000ef7f:	pop    rsi
   14000ef80:	imul   ecx,ecx,0xffffffca
   14000ef83:	mov    edi,0xbe0feef1
   14000ef88:	addr32 cmp al,0x1a
   14000ef8b:	(bad)  
   14000ef8c:	call   0x16aa96031
   14000ef91:	rex.B cmp al,0x3b
   14000ef94:	xlat   BYTE PTR ds:[rbx]
   14000ef95:	scas   eax,DWORD PTR es:[rdi]
   14000ef96:	mov    cl,0x72
   14000ef98:	imul   BYTE PTR [rbx+0x54]
   14000ef9b:	push   rdi
   14000ef9c:	mov    dh,0xa0
   14000ef9e:	cdq    
   14000ef9f:	xor    dl,BYTE PTR [rax]
   14000efa1:	sbb    BYTE PTR [rax],dl
   14000efa3:	jo     0x14000ef8b
   14000efa5:	sar    DWORD PTR [rbp+0xcf7bc38],0x2a
   14000efac:	iret   
   14000efad:	retf   0xc152
   14000efb0:	jo     0x14000ef5f
   14000efb2:	shr    BYTE PTR [rip+0xfffffffffc575f83],0xaa        # 0x13c584f3c
   14000efb9:	ret    0xe0a2
   14000efbc:	xlat   BYTE PTR ds:[rbx]
   14000efbd:	sbb    al,0xb
   14000efbf:	rex.WXB sahf 
   14000efc1:	(bad)  
   14000efc2:	in     eax,0xa8
   14000efc4:	or     ch,BYTE PTR [rbx]
   14000efc6:	adc    DWORD PTR [rdx+0x152c103],ecx
   14000efcc:	loope  0x14000f00c
   14000efce:	es (bad) 
   14000efd0:	mul    DWORD PTR [rbx-0x64]
   14000efd3:	ds rex.RX lahf 
   14000efd6:	or     cl,ah
   14000efd8:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000efda:	add    BYTE PTR [rdx+0x79],bh
   14000efdd:	ins    DWORD PTR es:[rdi],dx
   14000efde:	in     al,0x0
   14000efe0:	(bad)  
   14000efe1:	pop    rdi
   14000efe2:	lods   eax,DWORD PTR ds:[rsi]
   14000efe3:	scas   al,BYTE PTR es:[rdi]
   14000efe4:	sub    eax,0x5fa5a5f8
   14000efe9:	pop    rax
   14000efea:	sbb    BYTE PTR [rsi],cl
   14000efec:	(bad)  
   14000efed:	pop    rsi
   14000efee:	add    al,0x9c
   14000eff0:	xor    BYTE PTR [rcx-0x741d1efd],ch
   14000eff6:	lods   al,BYTE PTR ds:[rsi]
   14000eff7:	pop    rsp
   14000eff8:	cmp    BYTE PTR [rbp+0x13c35eec],al
   14000effe:	cmp    DWORD PTR [rdi-0x4ed5cbae],0x7a507782
   14000f008:	(bad)  
   14000f009:	js     0x14000eff3
   14000f00b:	pop    rax
   14000f00c:	pop    rsp
   14000f00d:	sub    al,0x29
   14000f00f:	xchg   edi,eax
   14000f010:	add    eax,0x91c501b7
   14000f015:	rex jno 0x14000f02c
   14000f018:	cld    
   14000f019:	or     bh,BYTE PTR [rax-0x1d46b0fb]
   14000f01f:	sbb    BYTE PTR [rbp-0x6217dfdd],cl
   14000f025:	and    BYTE PTR [rdx],cl
   14000f027:	(bad)  
   14000f028:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f029:	add    ecx,DWORD PTR [rax]
   14000f02b:	xchg   ebp,eax
   14000f02c:	call   0x12b640ff4
   14000f031:	rex.WRXB rcl QWORD PTR [r15+0x5],1
   14000f035:	out    0xa4,al
   14000f037:	(bad)  
   14000f038:	add    BYTE PTR [rbp+0x519296bc],bh
   14000f03e:	jmp    QWORD PTR [rbp-0x5e0161d9]
   14000f044:	jb     0x14000effa
   14000f046:	hlt    
   14000f047:	in     al,dx
   14000f048:	test   al,0x2a
   14000f04a:	jrcxz  0x14000f077
   14000f04c:	loop   0x14000f006
   14000f04e:	jle    0x14000f043
   14000f050:	(bad)  
   14000f051:	mov    esp,edi
   14000f053:	sahf   
   14000f054:	addr32 je 0x14000f040
   14000f057:	sbb    al,0xd4
   14000f059:	jnp    0x14000f0d3
   14000f05b:	(bad)  
   14000f05c:	adc    eax,0x2e624281
   14000f061:	out    dx,eax
   14000f062:	adc    esi,ebx
   14000f064:	scas   eax,DWORD PTR es:[rdi]
   14000f065:	adc    cl,0xc0
   14000f068:	xor    DWORD PTR [rax+0x70],ebx
   14000f06b:	mov    eax,0x521fc165
   14000f070:	cmp    BYTE PTR [rsi],dl
   14000f072:	jo     0x14000f06b
   14000f074:	add    eax,0x164521fc
   14000f079:	adc    eax,0x2d19ecbf
   14000f07e:	jp     0x14000f02a
   14000f080:	rcl    BYTE PTR [rcx+0x16],cl
   14000f083:	loopne 0x14000f08a
   14000f085:	(bad)
   14000f089:	or     bl,BYTE PTR [rsi-0x5a]
   14000f08c:	(bad)  
   14000f08d:	and    edi,edi
   14000f08f:	xor    eax,0x445de1ff
   14000f094:	and    edx,DWORD PTR [rax]
   14000f096:	or     eax,0xbd2e3dc0
   14000f09b:	add    eax,ebp
   14000f09d:	in     eax,0xd5
   14000f09f:	xchg   edi,eax
   14000f0a0:	add    eax,eax
   14000f0a2:	(bad)  
   14000f0a4:	and    ebp,DWORD PTR [rdi+0x7c]
   14000f0a7:	ror    BYTE PTR [rdi],1
   14000f0a9:	rex.RX (bad) 
   14000f0ab:	mov    ecx,0xf0a05e34
   14000f0b0:	add    al,BYTE PTR [rdx]
   14000f0b2:	xchg   ebx,eax
   14000f0b3:	(bad)  
   14000f0b4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f0b5:	(bad)  
   14000f0b6:	pop    rdi
   14000f0b7:	(bad)  
   14000f0b8:	cmc    
   14000f0b9:	in     al,dx
   14000f0ba:	xlat   BYTE PTR ds:[rbx]
   14000f0bb:	jo     0x14000f0f4
   14000f0bd:	movabs eax,cs:0xa27fd175508a535a
   14000f0c7:	adc    DWORD PTR [rax],ebp
   14000f0c9:	or     eax,edi
   14000f0cb:	ret    0x53d0
   14000f0ce:	sub    eax,0x1ff618b9
   14000f0d3:	or     eax,0xea0a47d4
   14000f0d8:	movsxd ecx,DWORD PTR [rsi]
   14000f0da:	ja     0x14000f110
   14000f0dc:	push   rax
   14000f0dd:	lods   al,BYTE PTR ds:[rsi]
   14000f0de:	sub    DWORD PTR [rax+rcx*1],0xa46397e
   14000f0e5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f0e6:	(bad)  
   14000f0e7:	or     bl,BYTE PTR [rdi]
   14000f0e9:	(bad)  
   14000f0ea:	(bad)  
   14000f0eb:	xchg   esi,eax
   14000f0ec:	add    cl,BYTE PTR [rax]
   14000f0ee:	loopne 0x14000f075
   14000f0f0:	loope  0x14000f10d
   14000f0f2:	fscale 
   14000f0f4:	fst    DWORD PTR [rcx]
   14000f0f6:	rex.WRB
   14000f0f7:	rex.RB invd 
   14000f0fa:	add    bh,BYTE PTR [rbp-0x2a1a17ff]
   14000f100:	xchg   esi,eax
   14000f101:	push   rdi
   14000f102:	(bad)  
   14000f103:	cld    
   14000f104:	mov    esi,DWORD PTR [rdx-0xd]
   14000f107:	rcr    BYTE PTR [rdi+0x2385c3f1],1
   14000f10d:	jrcxz  0x14000f0f0
   14000f10f:	sub    al,0x8f
   14000f112:	sbb    eax,0x326ef7d7
   14000f117:	idiv   DWORD PTR ds:[rbx+riz*8]
   14000f11b:	in     eax,dx
   14000f11c:	xchg   edi,eax
   14000f11d:	(bad)  
   14000f11e:	mov    dh,0x8b
   14000f120:	(bad)  
   14000f121:	sbb    BYTE PTR [rax+0x6f31a252],ch
   14000f127:	mov    bh,0x26
   14000f129:	(bad)  
   14000f12a:	out    0x84,eax
   14000f12c:	rex.B jmp 0x1051cfd4a
   14000f132:	rex.W nop
   14000f134:	cmc    
   14000f135:	rex mov ebp,0x2a0d99ee
   14000f13b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f13c:	or     esp,DWORD PTR [rip+0xffffffffd6e0b0e1]        # 0x116e1a223
   14000f142:	adc    al,0x46
   14000f144:	and    BYTE PTR [rbx-0x5f],ah
   14000f147:	pop    rdx
   14000f148:	jo     0x14000f19e
   14000f14a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f14b:	push   rax
   14000f14c:	js     0x14000f1be
   14000f14e:	add    ch,BYTE PTR [rax+0x34488082]
   14000f154:	add    ah,BYTE PTR [rbx+0x9]
   14000f157:	(bad)  
   14000f158:	cli    
   14000f159:	gs inc bl
   14000f15c:	out    0x88,eax
   14000f15e:	(bad)  
   14000f15f:	loopne 0x14000f0ff
   14000f161:	(bad)  
   14000f162:	add    al,0xef
   14000f164:	jmp    0x175e6e0fc
   14000f169:	xchg   ebx,eax
   14000f16a:	int3   
   14000f16b:	neg    edi
   14000f16d:	jl     0x14000f151
   14000f16f:	mov    edi,esi
   14000f171:	mov    edx,0x78f2fcb2
   14000f176:	mov    esp,0x54385544
   14000f17b:	(bad)  
   14000f17c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f17d:	mov    al,0x7f
   14000f17f:	jmp    0xdfe85ca0
   14000f184:	(bad)  
   14000f185:	pop    rbp
   14000f186:	mov    edi,0x6c598684
   14000f18b:	or     al,0x10
   14000f18d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f18e:	int3   
   14000f18f:	cld    
   14000f190:	jle    0x14000f1c5
   14000f192:	add    al,BYTE PTR [rbp-0x39c5af9d]
   14000f198:	jrcxz  0x14000f19c
   14000f19a:	mov    edi,0x3d43ac04
   14000f19f:	sub    BYTE PTR [rcx+0x14],dl
   14000f1a2:	push   rbp
   14000f1a3:	test   al,0x97
   14000f1a5:	or     esp,DWORD PTR [rbx+rsi*1-0x20]
   14000f1a9:	(bad)  
   14000f1aa:	ror    DWORD PTR [rip+0xffffffffa8e0bf05],0x2a        # 0xe8e1b0b6
   14000f1b1:	xchg   edi,esi
   14000f1b3:	data16 rex
   14000f1b5:	rex.WR icebp 
   14000f1b7:	rex.RB jae 0x14000f186
   14000f1ba:	(bad)  
   14000f1bb:	div    DWORD PTR [rcx+0x641f53ff]
   14000f1c1:	jnp    0x14000f15c
   14000f1c3:	ds or  ch,al
   14000f1c6:	or     eax,0xa2af2f40
   14000f1cb:	sbb    al,0x68
   14000f1cd:	neg    BYTE PTR [rcx]
   14000f1cf:	sub    al,0x2e
   14000f1d1:	cs push rsp
   14000f1d3:	ret    
   14000f1d4:	loope  0x14000f225
   14000f1d6:	cmp    edx,DWORD PTR [rdi-0x6a]
   14000f1d9:	jrcxz  0x14000f1ac
   14000f1db:	sub    BYTE PTR [rsi],al
   14000f1dd:	loop   0x14000f201
   14000f1df:	in     al,dx
   14000f1e0:	in     al,dx
   14000f1e1:	rex.WRXB sbb BYTE PTR [r14+0x5b8b3aff],r11b
   14000f1e8:	(bad)  
   14000f1e9:	and    dl,bl
   14000f1eb:	sbb    eax,0x27550244
   14000f1f0:	cld    
   14000f1f1:	(bad)  
   14000f1f2:	(bad)  
   14000f1f3:	cmp    BYTE PTR [rbp+0x335f36],dh
   14000f1f9:	adc    DWORD PTR [rcx+0x58412fc7],0x76
   14000f200:	test   al,0x18
   14000f202:	enter  0x50a7,0x17
   14000f206:	(bad)  
   14000f207:	pop    rbp
   14000f208:	(bad)  
   14000f209:	cld    
   14000f20a:	xor    dh,BYTE PTR [rax]
   14000f20c:	adc    al,0xdc
   14000f20e:	pop    rax
   14000f20f:	test   al,0x86
   14000f211:	rex.X jmp 0xf735d91c
   14000f217:	add    ecx,DWORD PTR [rdx-0x5fc4823c]
   14000f21d:	and    bh,BYTE PTR [rsi*8-0x3c0163dd]
   14000f224:	hlt    
   14000f225:	push   rcx
   14000f226:	sar    BYTE PTR [rbp-0x43421d85],0x66
   14000f22d:	xchg   edx,eax
   14000f22e:	rex.XB push QWORD PTR [r13+0x2ef81f07]
   14000f235:	sub    eax,0x8b15f7ca
   14000f23a:	retf   
   14000f23b:	or     al,0xaa
   14000f23d:	or     dl,BYTE PTR [rcx+0x45]
   14000f240:	cmp    DWORD PTR [rbp+0x3958172b],0xd5c53cf7
   14000f24a:	pop    rax
   14000f24b:	cli    
   14000f24c:	repz loop 0x14000f271
   14000f24f:	cli    
   14000f250:	rex.WRXB push 0xfffffffff4897f73
   14000f256:	faddp  st(2),st
   14000f258:	or     esp,DWORD PTR [rbx+0x3918a7a1]
   14000f25e:	sbb    BYTE PTR [rcx+0x18],al
   14000f261:	or     BYTE PTR [rdx-0x57612f3a],cl
   14000f267:	fdivr  st(5),st
   14000f269:	movabs ds:0xca38190237145647,al
   14000f272:	mov    cl,0xa3
   14000f274:	sub    ah,BYTE PTR [rbx]
   14000f276:	jnp    0x14000f248
   14000f278:	sbb    ebp,DWORD PTR [rip+0xffffffff88255938]        # 0xc8264bb6
   14000f27e:	push   rcx
   14000f27f:	shl    DWORD PTR [rsi+0x3fe47ecc],0x93
   14000f286:	rol    edi,cl
   14000f288:	mov    eax,0xbd022bc7
   14000f28d:	add    eax,ebp
   14000f28f:	in     eax,0xd5
   14000f291:	xchg   ecx,eax
   14000f292:	add    ebx,esi
   14000f294:	jg     0x14000f307
   14000f296:	movsxd esp,DWORD PTR [rbx-0x4b]
   14000f299:	lods   al,BYTE PTR ds:[rsi]
   14000f29a:	stos   BYTE PTR es:[rdi],al
   14000f29b:	lahf   
   14000f29c:	or     al,BYTE PTR [rbp-0x17]
   14000f29f:	(bad)  
   14000f2a0:	jrcxz  0x14000f247
   14000f2a2:	call   0x179b93880
   14000f2a7:	lods   eax,DWORD PTR ds:[rsi]
   14000f2a8:	jno    0x14000f2c1
   14000f2aa:	rex.WRX mov dl,0x7c
   14000f2ad:	loope  0x14000f2e3
   14000f2af:	in     al,dx
   14000f2b0:	fild   WORD PTR [rax+0x9]
   14000f2b3:	xchg   esp,eax
   14000f2b4:	or     BYTE PTR [rbx],al
   14000f2b6:	xchg   esp,eax
   14000f2b7:	xor    dl,BYTE PTR [rsi+0x7]
   14000f2ba:	jno    0x14000f2ea
   14000f2bc:	(bad)  
   14000f2bd:	js     0x14000f2e6
   14000f2bf:	push   rsp
   14000f2c0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f2c1:	xor    BYTE PTR [rdx+0x6040c51c],ch
   14000f2c7:	or     al,0xa1
   14000f2c9:	mov    edx,cs
   14000f2cb:	ins    BYTE PTR es:[rdi],dx
   14000f2cc:	cli    
   14000f2cd:	(bad)
   14000f2d1:	adc    DWORD PTR [rip+0x6058dc5],0xffffffe0        # 0x14606809d
   14000f2d8:	rex.RX
   14000f2d9:	rex.X push rbp
   14000f2db:	or     esi,ebx
   14000f2dd:	fdecstp 
   14000f2df:	sub    al,0x7
   14000f2e1:	adc    BYTE PTR [rcx+rdx*4],al
   14000f2e4:	clc    
   14000f2e5:	rcl    DWORD PTR [rdx],0x7d
   14000f2e8:	clc    
   14000f2e9:	movabs ds:0x4f701478f72afc5c,eax
   14000f2f2:	sahf   
   14000f2f3:	je     0x14000f324
   14000f2f5:	scas   eax,DWORD PTR es:[rdi]
   14000f2f6:	mov    esp,ecx
   14000f2f8:	add    DWORD PTR [rdi-0x75],edi
   14000f2fb:	neg    edi
   14000f2fd:	jmp    QWORD PTR [rbx-0x76]
   14000f300:	cmp    al,0x2e
   14000f302:	ret    
   14000f303:	rex.RB (bad) 
   14000f305:	movabs ds:0x97eb9d8e234aa231,eax
   14000f30e:	pop    rcx
   14000f30f:	cmp    edi,esi
   14000f311:	cmp    al,0x83
   14000f313:	stos   DWORD PTR es:[rdi],eax
   14000f314:	pop    rbx
   14000f315:	push   0xffffffff8939c133
   14000f31a:	sbb    al,0x5d
   14000f31c:	imul   ebp,DWORD PTR [rax],0x38ff245c
   14000f322:	pop    rsp
   14000f323:	retf   
   14000f324:	jmp    FWORD PTR [rdi]
   14000f326:	cmp    eax,0x18a7a183
   14000f32b:	or     BYTE PTR [rdx],dh
   14000f32d:	push   rsp
   14000f32e:	(bad)  
   14000f32f:	or     ebp,DWORD PTR [rdx+0x29eeae4a]
   14000f335:	xor    al,0xde
   14000f337:	adc    DWORD PTR [rsi+0x4],edx
   14000f33a:	mov    bh,0x18
   14000f33c:	jo     0x14000f341
   14000f33e:	ror    DWORD PTR [rbp+0x16586022],0x82
   14000f345:	div    DWORD PTR [rcx+0x58]
   14000f348:	mov    BYTE PTR [rbx],al
   14000f34a:	push   rsp
   14000f34b:	pop    rdx
   14000f34c:	adc    BYTE PTR [rcx-0x80],0xd
   14000f350:	(bad)  
   14000f351:	(bad)  
   14000f352:	(bad)  
   14000f353:	push   rcx
   14000f354:	rex.WRX ffree st(7)
   14000f357:	cmp    eax,0xdea0e4c
   14000f35c:	rex (bad) 
   14000f35e:	jg     0x14000f3d0
   14000f360:	cmp    DWORD PTR [rax-0x6],eax
   14000f363:	fnstcw WORD PTR [rax-0x1c]
   14000f366:	xchg   ecx,eax
   14000f367:	(bad)  
   14000f368:	retf   
   14000f369:	ret    0x38ff
   14000f36c:	movabs ds:0x7b008f4aa996160c,al
   14000f375:	rex.WRB and BYTE PTR [r8+rdi*1-0x33],r11b
   14000f37a:	retf   0x17f9
   14000f37d:	nop
   14000f37e:	fwait
   14000f37f:	push   rdi
   14000f380:	add    DWORD PTR [rax+0x57fe18d3],0xe3ee9c68
   14000f38a:	and    al,0x8e
   14000f38c:	(bad)  
   14000f38d:	jbe    0x14000f311
   14000f38f:	test   DWORD PTR [rsi-0x3555ef4e],0x14602ae1
   14000f399:	or     eax,0x7e456a00
   14000f39e:	enter  0x40a1,0x58
   14000f3a2:	adc    ah,bl
   14000f3a4:	add    dl,BYTE PTR [rax+0x9]
   14000f3a7:	pop    rdx
   14000f3a8:	or     al,ch
   14000f3aa:	xor    BYTE PTR [rsi+0x7383ce01],ah
   14000f3b0:	mov    dh,BYTE PTR [rbx]
   14000f3b2:	push   rdx
   14000f3b3:	nop
   14000f3b4:	test   al,0xb4
   14000f3b6:	mov    ecx,DWORD PTR [rdi]
   14000f3b8:	test   al,0x1e
   14000f3ba:	jnp    0x14000f40a
   14000f3bc:	mov    bh,0x7f
   14000f3be:	mov    BYTE PTR [rsi],dh
   14000f3c0:	or     bh,BYTE PTR [rax+0x7a1f94a7]
   14000f3c6:	add    edx,eax
   14000f3c8:	retf   
   14000f3c9:	(bad)  
   14000f3ca:	push   rsp
   14000f3cb:	outs   dx,BYTE PTR ds:[rsi]
   14000f3cc:	shr    edx,1
   14000f3ce:	cmp    ebx,DWORD PTR [rax+0x59]
   14000f3d1:	stc    
   14000f3d2:	imul   esp,DWORD PTR [rdi+0x218b4d61],0xa15c5a3
   14000f3dc:	and    BYTE PTR [rax-0x628c4c50],cl
   14000f3e2:	xchg   ebp,eax
   14000f3e3:	repz iret 
   14000f3e5:	xor    edi,DWORD PTR [rsp+rdi*2+0x11f66d16]
   14000f3ec:	rcl    DWORD PTR [rdi+rdi*4-0x49c0d64f],0x21
   14000f3f4:	sbb    esi,ebp
   14000f3f6:	push   rbp
   14000f3f7:	clc    
   14000f3f8:	test   al,0xc4
   14000f3fa:	gs and eax,0xd06148c8
   14000f400:	sbb    eax,0x3097f4
   14000f405:	add    DWORD PTR [rbp+0x41643950],eax
   14000f40b:	jno    0x14000f410
   14000f40d:	jo     0x14000f424
   14000f40f:	add    rax,0xffffffffa5ef04be
   14000f415:	sub    r13,QWORD PTR [r12+rbp*2]
   14000f419:	nop
   14000f41a:	(bad)  
   14000f41b:	movups xmm3,XMMWORD PTR [rax-0x6b]
   14000f41f:	cli    
   14000f420:	sub    edi,DWORD PTR [rdi-0x64]
   14000f423:	xchg   ebx,eax
   14000f424:	(bad)  
   14000f425:	mov    eax,0xbd022b47
   14000f42a:	add    eax,ebp
   14000f42c:	in     eax,0xd5
   14000f42e:	nop
   14000f42f:	lods   al,BYTE PTR ds:[rsi]
   14000f430:	cld    
   14000f431:	xchg   DWORD PTR [rsi-0x3a580c87],ebx
   14000f437:	stc    
   14000f438:	iret   
   14000f439:	rex.WXB push r11
   14000f43b:	ret    
   14000f43c:	js     0x14000f3d7
   14000f43e:	shl    DWORD PTR [rax+0x8],1
   14000f441:	add    dh,BYTE PTR [rbp-0x18b42cf6]
   14000f447:	pop    rax
   14000f448:	cmp    bh,bh
   14000f44a:	jne    0x14000f4b0
   14000f44c:	out    0x1a,eax
   14000f44e:	stos   BYTE PTR es:[rdi],al
   14000f44f:	or     eax,0x7fe148e
   14000f454:	mov    esp,0xd4ecca8b
   14000f459:	add    BYTE PTR [rax+0x17],al
   14000f45c:	add    eax,eax
   14000f45e:	mov    dl,0x70
   14000f460:	xchg   esp,eax
   14000f461:	xchg   ebp,eax
   14000f462:	mov    ebx,DWORD PTR [rsi+0xa8207d]
   14000f468:	push   0x45812c7
   14000f46d:	push   rax
   14000f46e:	or     BYTE PTR [rcx+0x1],ah
   14000f471:	fcom   QWORD PTR [rax]
   14000f473:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f474:	adc    BYTE PTR [rax+riz*1-0x6c],ah
   14000f478:	add    eax,DWORD PTR [rdi-0x17]
   14000f47b:	pop    rbp
   14000f47c:	imul   eax,DWORD PTR [rdx+rdx*8],0xfffffffb
   14000f480:	push   rbp
   14000f481:	movsxd ebx,DWORD PTR [rcx+0x50]
   14000f484:	test   BYTE PTR [rdx-0xc],al
   14000f487:	clc    
   14000f488:	jnp    0x14000f443
   14000f48a:	bnd jge 0x14000f469
   14000f48d:	movabs ds:0xcabcbdb2753dc058,eax
   14000f496:	shl    BYTE PTR [rdx],cl
   14000f498:	(bad)  
   14000f499:	and    dh,al
   14000f49b:	ja     0x14000f47c
   14000f49d:	std    
   14000f49e:	sbb    eax,ebp
   14000f4a0:	ret    0x9fe2
   14000f4a3:	ja     0x14000f47f
   14000f4a5:	clc    
   14000f4a6:	adc    BYTE PTR [rax+0x2d],0xaf
   14000f4aa:	xor    ebp,DWORD PTR [rax]
   14000f4ac:	(bad)  
   14000f4ad:	fs mov ebp,0xf0c7b7b3
   14000f4b3:	(bad)  
   14000f4b5:	sbb    BYTE PTR [rdi-0x61],ch
   14000f4b8:	rex.RB (bad) 
   14000f4ba:	jge    0x14000f4cc
   14000f4bc:	sub    ah,al
   14000f4be:	push   rcx
   14000f4bf:	rex.WB and al,0xff
   14000f4c2:	and    al,0xfa
   14000f4c4:	outs   dx,DWORD PTR ds:[rsi]
   14000f4c5:	(bad)  
   14000f4c6:	movabs al,ds:0xa2852837d191779d
   14000f4cf:	adc    ah,BYTE PTR [rax+riz*4-0x7c]
   14000f4d3:	or     sil,BYTE PTR [r14]
   14000f4d6:	mov    BYTE PTR [rcx],ch
   14000f4d8:	sub    BYTE PTR [rax-0x4],0xad
   14000f4dc:	mov    bh,BYTE PTR [rdx]
   14000f4de:	mov    r12d,0x2904a148
   14000f4e5:	add    eax,0x1b0a1037
   14000f4ea:	(bad)  
   14000f4eb:	and    ah,BYTE PTR [rdx]
   14000f4ed:	js     0x14000f54b
   14000f4ef:	int3   
   14000f4f0:	inc    DWORD PTR [rbp+0x72]
   14000f4f3:	(bad)  
   14000f4f4:	and    eax,eax
   14000f4f6:	sub    dh,BYTE PTR [rbx+0x2f32f81f]
   14000f4fc:	sbb    eax,0x8ac1ee2
   14000f501:	hlt    
   14000f502:	(bad)  
   14000f503:	movabs al,ds:0x1f1ff422dc9fdf97
   14000f50c:	jg     0x14000f4ee
   14000f50e:	rex.WRXB mov BYTE PTR [r8-0x7b0aeac9],r15b
   14000f515:	xor    BYTE PTR [rax],bl
   14000f517:	xor    ebx,DWORD PTR [rdx+0x58]
   14000f51a:	(bad)  
   14000f51b:	mov    DWORD PTR [rdx+0x2b],edx
   14000f51e:	fdivr  QWORD PTR [rdx+rsi*2-0x308c4a7f]
   14000f525:	jrcxz  0x14000f59e
   14000f527:	movabs cs:0x71a57f4ac28046a1,eax
   14000f531:	div    BYTE PTR [rbx+0x68]
   14000f534:	out    dx,al
   14000f535:	movabs ds:0x812bec06d88b2ed7,al
   14000f53e:	sar    QWORD PTR [rsp+r8*8],1
   14000f542:	pop    rsi
   14000f543:	or     al,0x0
   14000f545:	rex.WR and BYTE PTR [rax+0x7050ca1d],0x23
   14000f54d:	sub    r12b,BYTE PTR [r8+0x68aa414]
   14000f554:	sar    BYTE PTR [rbx-0x6ab7eea8],0x80
   14000f55b:	outs   dx,BYTE PTR ds:[rsi]
   14000f55c:	and    al,BYTE PTR [rcx-0x1d85faf8]
   14000f562:	mov    bl,0x6c
   14000f564:	fst    QWORD PTR [rbx+0x733dc051]
   14000f56a:	movabs ds:0xf1b9400c9226bcbd,al
   14000f573:	hlt    
   14000f574:	pop    rbx
   14000f575:	fsubrp st(5),st
   14000f577:	stos   DWORD PTR es:[rdi],eax
   14000f578:	(bad)  
   14000f579:	rex.RXB or BYTE PTR [rip+0xffffffff97e29eae],r14b        # 0xd7e3942e
   14000f580:	(bad)  
   14000f581:	rex.WB (bad) 
   14000f583:	fistp  WORD PTR [rbp-0x3157317]
   14000f589:	xchg   r14,rax
   14000f58b:	cs mov esp,0x209bd308
   14000f591:	add    DWORD PTR [rdi],ebp
   14000f593:	(bad)  
   14000f594:	cmp    al,0x7f
   14000f596:	sbb    bl,dh
   14000f598:	xchg   ecx,eax
   14000f599:	ret    0xa8f4
   14000f59c:	lods   al,BYTE PTR ds:[rsi]
   14000f59d:	fiadd  WORD PTR [rbp+0x3]
   14000f5a0:	push   rax
   14000f5a1:	push   rsi
   14000f5a2:	(bad)  
   14000f5a3:	push   rdi
   14000f5a4:	or     dl,BYTE PTR [rdx-0x76]
   14000f5a7:	lods   eax,DWORD PTR ds:[rsi]
   14000f5a8:	(bad)  
   14000f5aa:	xor    DWORD PTR [rsi],eax
   14000f5ac:	nop
   14000f5ad:	hlt    
   14000f5ae:	fsub   DWORD PTR [rdx]
   14000f5b0:	add    BYTE PTR [rbx*1+0x11890c08],dl
   14000f5b7:	rex movabs eax,ds:0xc31413ce2af82548
   14000f5c1:	add    DWORD PTR [rdx+0x40cd0a9],esp
   14000f5c7:	mov    dl,BYTE PTR [rbp+0x14]
   14000f5ca:	(bad)  
   14000f5cb:	jne    0x14000f5bf
   14000f5cd:	(bad)  
   14000f5ce:	rex.WRXB mov r11b,0xb5
   14000f5d1:	(bad)  
   14000f5d2:	cmp    eax,0x6f40516
   14000f5d7:	movabs al,ds:0x6b87fd401cbbdf97
   14000f5e0:	jmp    0x14000f56d
   14000f5e2:	jle    0x14000f659
   14000f5e4:	std    
   14000f5e5:	(bad)  
   14000f5e6:	xor    eax,0xd3962c52
   14000f5eb:	cmp    eax,0xb2b54710
   14000f5f0:	rex.B jmp 0xfd863c7a
   14000f5f6:	stos   DWORD PTR es:[rdi],eax
   14000f5f7:	xchg   edi,eax
   14000f5f8:	pop    rax
   14000f5f9:	cmp    ebx,edi
   14000f5fb:	xor    eax,0xa117ebca
   14000f600:	cdq    
   14000f601:	cdq    
   14000f602:	xlat   BYTE PTR ds:[rbx]
   14000f603:	(bad)  
   14000f604:	enter  0x497f,0xb0
   14000f608:	jp     0x14000f687
   14000f60a:	push   0xfffffffffffffffe
   14000f60c:	mov    DWORD PTR [rcx],edx
   14000f60e:	rex loope 0x14000f595
   14000f611:	stos   BYTE PTR es:[rdi],al
   14000f612:	mov    WORD PTR [rip+0x7c00aefe],?        # 0x1bc01a516
   14000f618:	in     al,0xf4
   14000f61a:	rex.RXB adc r8b,r12b
   14000f61d:	loopne 0x14000f5b1
   14000f61f:	jg     0x14000f5d2
   14000f621:	xor    dl,BYTE PTR [rax]
   14000f623:	mov    esp,0x29630c0
   14000f628:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f629:	jo     0x14000f673
   14000f62b:	or     DWORD PTR [rsi-0xebf5a76],edi
   14000f631:	pop    rax
   14000f632:	je     0x14000f655
   14000f634:	(bad)  
   14000f635:	or     dh,BYTE PTR [rsi+rdi*8+0x560b2b00]
   14000f63c:	ret    0xdf13
   14000f63f:	retf   
   14000f640:	(bad)  [rdi-0x2f]
   14000f643:	sub    eax,0x7203de09
   14000f648:	rex.WRXB pushf 
   14000f64a:	fs (bad) 
   14000f64c:	scas   eax,DWORD PTR es:[rdi]
   14000f64d:	movabs ds:0x1fd1e47e5ff422dc,al
   14000f656:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f657:	lods   al,BYTE PTR ds:[rsi]
   14000f658:	fimul  WORD PTR [rbx+0x68]
   14000f65b:	test   al,0x26
   14000f65d:	(bad)  
   14000f65e:	or     ebx,eax
   14000f660:	and    eax,0x8cb8bc6
   14000f665:	retf   0xa36e
   14000f668:	mov    cl,0xe7
   14000f66a:	jg     0x14000f657
   14000f66c:	adc    al,0xb2
   14000f66e:	mov    bh,0x43
   14000f670:	pop    rsp
   14000f671:	mov    ebx,0xd2e7cd33
   14000f676:	pushf  
   14000f677:	repz and edx,DWORD PTR [rcx]
   14000f67a:	add    al,0xcc
   14000f67c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f67d:	rex add ebp,edi
   14000f680:	(bad)
   14000f684:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f685:	test   al,0x74
   14000f687:	sbb    al,0xb2
   14000f689:	ret    0xaac1
   14000f68c:	pop    rbp
   14000f68d:	lock (bad) 
   14000f68f:	xchg   al,ah
   14000f691:	rex.WX test QWORD PTR [rdx-0x70],rax
   14000f695:	shl    cl,cl
   14000f697:	sub    ah,BYTE PTR [rcx+0x40af232c]
   14000f69d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f69e:	cmc    
   14000f69f:	cld    
   14000f6a0:	in     eax,dx
   14000f6a1:	movabs ss:0x4c23a1ffdd4d8138,al
   14000f6ab:	(bad)  
   14000f6ac:	mov    ah,0x25
   14000f6ae:	sar    DWORD PTR [rsi],0x2
   14000f6b1:	call   0x1885c8e5b
   14000f6b6:	pop    rbx
   14000f6b7:	repz jg 0x14000f68d
   14000f6ba:	push   rbx
   14000f6bb:	outs   dx,DWORD PTR ds:[rsi]
   14000f6bc:	xchg   ebx,eax
   14000f6bd:	test   ebp,esp
   14000f6bf:	lahf   
   14000f6c0:	push   rsp
   14000f6c1:	test   BYTE PTR [rdx+0x13d5c7de],dh
   14000f6c7:	fmul   st(2),st
   14000f6c9:	and    DWORD PTR [rsi-0x4f5576ab],eax
   14000f6cf:	jae    0x14000f6c4
   14000f6d1:	cmp    cl,BYTE PTR [rbx-0x19]
   14000f6d4:	mov    esi,0x22ed7546
   14000f6d9:	fimul  DWORD PTR [rax+rdx*2-0x40]
   14000f6dd:	jrcxz  0x14000f707
   14000f6df:	push   rax
   14000f6e0:	rex.WX jrcxz 0x14000f6e1
   14000f6e3:	(bad)  
   14000f6e4:	jb     0x14000f734
   14000f6e6:	(bad)  
   14000f6e7:	loope  0x14000f6e0
   14000f6e9:	cs jb  0x14000f6e5
   14000f6ec:	push   rbx
   14000f6ed:	or     ah,BYTE PTR [rax]
   14000f6ef:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f6f0:	rex.R mov edi,0x2bfb16c
   14000f6f6:	push   0x5d
   14000f6f8:	jle    0x14000f74b
   14000f6fa:	movabs ds:0xf9882180a813ab26,al
   14000f703:	jno    0x14000f6ae
   14000f705:	add    al,0x5f
   14000f707:	(bad)  
   14000f708:	fld    QWORD PTR [rcx+0x361b3882]
   14000f70e:	(bad)  
   14000f70f:	pop    rbx
   14000f710:	jb     0x14000f69a
   14000f712:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f713:	add    DWORD PTR [rdx+0x25],eax
   14000f716:	loope  0x14000f785
   14000f718:	jg     0x14000f69b
   14000f71a:	push   rsp
   14000f71c:	(bad)  
   14000f71d:	mov    edx,0x3cbb80bc
   14000f722:	or     eax,0x2f400de8
   14000f727:	fistp  QWORD PTR [rdx-0x3402f7e4]
   14000f72d:	icebp  
   14000f72e:	js     0x14000f78c
   14000f730:	lods   al,BYTE PTR ds:[rsi]
   14000f731:	outs   dx,BYTE PTR ds:[rsi]
   14000f732:	cld    
   14000f733:	(bad)  
   14000f734:	(bad)  
   14000f735:	ret    
   14000f736:	jne    0x14000f709
   14000f738:	rex mov ecx,0x33ce03bf
   14000f73e:	pop    rax
   14000f73f:	cmp    eax,DWORD PTR [rdi+rdx*1-0x196be59f]
   14000f746:	ret    0xd619
   14000f749:	(bad)  
   14000f74a:	cmp    eax,0x1bddb8f
   14000f74f:	xor    al,0x20
   14000f751:	mov    ss,WORD PTR [rdx]
   14000f753:	movabs ds:0xfd0c474ef0f213f2,al
   14000f75c:	popf   
   14000f75d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f75e:	and    DWORD PTR [rax],esp
   14000f760:	adc    cl,bl
   14000f762:	ja     0x14000f78d
   14000f764:	or     ch,al
   14000f766:	mov    edi,gs
   14000f768:	rex.W (bad) 
   14000f76a:	and    DWORD PTR [rax+0x36],ebp
   14000f76d:	or     ch,BYTE PTR [rax-0x4]
   14000f770:	adc    eax,0x252a412a
   14000f775:	cs adc BYTE PTR es:[rbx-0x7e],cl
   14000f77a:	scas   al,BYTE PTR es:[rdi]
   14000f77b:	adc    BYTE PTR [rdx],cl
   14000f77d:	add    edx,DWORD PTR [rsi]
   14000f77f:	mov    ebp,0x38731145
   14000f784:	(bad)  
   14000f785:	and    r12d,eax
   14000f788:	mov    r12b,r11b
   14000f78b:	in     al,dx
   14000f78c:	jge    0x14000f78d
   14000f78e:	cwde   
   14000f78f:	data16 jle 0x14000f7fc
   14000f792:	rcr    BYTE PTR [rbp+0x2c],1
   14000f795:	mov    ebp,0x5be5e801
   14000f79a:	xchg   ebx,eax
   14000f79b:	pop    rbx
   14000f79c:	test   dh,bh
   14000f79e:	imul   ecx,DWORD PTR [rdi+0x3e],0xfffffffd
   14000f7a2:	rex.RXB jne 0x14000f761
   14000f7a5:	hlt    
   14000f7a6:	rex.B adc eax,0xc194f570
   14000f7ac:	dec    BYTE PTR [rip+0xffffffff8306e2c2]        # 0xc307da74
   14000f7b2:	test   DWORD PTR [rbp+0x44],esp
   14000f7b5:	loope  0x14000f7b1
   14000f7b7:	ficomp WORD PTR [rsi]
   14000f7b9:	movabs ds:0x37a6017cba33cff3,eax
   14000f7c2:	push   rcx
   14000f7c3:	add    al,BYTE PTR [rdx+0x5c]
   14000f7c6:	shl    DWORD PTR [rdi-0x3801eb70],1
   14000f7cc:	jl     0x14000f80a
   14000f7ce:	jmp    0x13002e24b
   14000f7d3:	(bad)  
   14000f7d4:	sbb    eax,0x2e589e7d
   14000f7d9:	adc    rax,0x3fd7ae80
   14000f7df:	rol    BYTE PTR [rip+0xffffffff904a8050],0x2a        # 0xd04b7836
   14000f7e6:	xchg   esi,eax
   14000f7e7:	add    ebp,eax
   14000f7e9:	ds (bad) 
   14000f7eb:	gs (bad) 
   14000f7ed:	(bad)  
   14000f7ee:	xor    ch,ah
   14000f7f0:	rex.WRXB stc 
   14000f7f2:	(bad)  
   14000f7f3:	sub    r14b,BYTE PTR [rbp+r9*1-0x1eee7ec5]
   14000f7fb:	jrcxz  0x14000f87c
   14000f7fd:	push   rsi
   14000f7fe:	sahf   
   14000f7ff:	jg     0x14000f79d
   14000f801:	jnp    0x14000f807
   14000f803:	or     al,0xec
   14000f805:	or     eax,0x17bf2f40
   14000f80a:	leave  
   14000f80b:	fidivr WORD PTR [rdi-0x3]
   14000f80e:	mov    DWORD PTR [rdi],esp
   14000f810:	fmulp  st(4),st
   14000f812:	ret    0x9fea
   14000f815:	(bad)
   14000f818:	jnp    0x14000f868
   14000f81a:	imul   DWORD PTR [rax]
   14000f81c:	addr32 adc ebx,esp
   14000f81f:	(bad)  
   14000f820:	jge    0x14000f82e
   14000f822:	retf   0xa982
   14000f825:	sub    dl,bl
   14000f827:	retf   
   14000f828:	out    0x58,eax
   14000f82a:	cmp    eax,0xcefc75ff
   14000f82f:	adc    eax,0x17105308
   14000f834:	sbb    eax,0x1b4a06b3
   14000f839:	std    
   14000f83a:	xchg   ebp,eax
   14000f83b:	cmp    BYTE PTR [rcx+0x5ce73d2e],sil
   14000f842:	(bad)  
   14000f843:	add    BYTE PTR [rdx-0x68c7fd68],cl
   14000f849:	(bad)  
   14000f84a:	cli    
   14000f84b:	mov    al,0x23
   14000f84d:	push   rax
   14000f84e:	imul   eax,DWORD PTR [rax],0x48
   14000f851:	xchg   esi,eax
   14000f852:	rex cmp ecx,DWORD PTR [rdi+0x58582245]
   14000f859:	sub    DWORD PTR [rdx+rbx*1-0x31f42b71],edx
   14000f860:	retf   0xce81
   14000f863:	mov    ch,0x63
   14000f865:	ret    0x66a2
   14000f868:	mov    bh,0xd1
   14000f86a:	or     BYTE PTR [rax-0x1c5ebfa8],0xa7
   14000f871:	mov    eax,0x9e76fdf1
   14000f876:	ja     0x14000f8b5
   14000f878:	cmp    eax,0xbd0037b8
   14000f87d:	jl     0x14000f8f2
   14000f87f:	cmp    DWORD PTR [rax+0x2eacaffa],ecx
   14000f885:	xchg   esi,eax
   14000f886:	sbb    eax,DWORD PTR [rdi-0x2]
   14000f889:	(bad)  
   14000f88a:	(bad)  
   14000f88b:	or     al,0x17
   14000f88d:	popf   
   14000f88e:	add    BYTE PTR [rcx-0x6a844f9a],ah
   14000f894:	push   rax
   14000f895:	lea    ebp,[rax]
   14000f897:	(bad)  
   14000f898:	(bad)  
   14000f899:	push   rdx
   14000f89a:	movabs al,ds:0xe1649fcf28cc9cdc
   14000f8a3:	ror    bl,cl
   14000f8a5:	xor    cl,bl
   14000f8a7:	mov    cl,0x16
   14000f8a9:	fsubp  st(0),st
   14000f8ab:	stc    
   14000f8ac:	rex.WXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000f8ae:	adc    al,0xe8
   14000f8b0:	pop    rsp
   14000f8b1:	mov    bh,0x5e
   14000f8b3:	add    edi,DWORD PTR cs:[rdx]
   14000f8b6:	movabs eax,ds:0xa002b177b8147170
   14000f8bf:	pop    rsi
   14000f8c0:	push   rcx
   14000f8c1:	xlat   BYTE PTR ds:[rbx]
   14000f8c2:	mov    dh,0x0
   14000f8c4:	imul   edx,DWORD PTR [rdi-0x1f],0x53
   14000f8c8:	clc    
   14000f8c9:	(bad)  
   14000f8ca:	test   DWORD PTR [rax-0x10],0x5577fd11
   14000f8d1:	mov    WORD PTR [rax],es
   14000f8d3:	ror    BYTE PTR [rdi-0x32bd3cb5],cl
   14000f8d9:	or     ah,al
   14000f8db:	push   rax
   14000f8dc:	rex.RX mov bl,0x9
   14000f8df:	nop
   14000f8e0:	mov    ?,WORD PTR [rcx]
   14000f8e2:	pop    rdx
   14000f8e3:	rcr    cl,1
   14000f8e5:	ja     0x14000f965
   14000f8e7:	(bad)  
   14000f8e8:	(bad)  
   14000f8e9:	fist   WORD PTR [rbx]
   14000f8eb:	(bad)  
   14000f8ec:	movabs al,ds:0xf2bccbbbf2f400de
   14000f8f5:	rex.RXB (bad) 
   14000f8f7:	push   QWORD PTR [rcx-0x1cdb0139]
   14000f8fd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f8fe:	test   DWORD PTR [rdx-0x523b1d55],0xdee194d9
   14000f908:	jne    0x14000f8a4
   14000f90a:	mov    ch,0xa3
   14000f90c:	mov    WORD PTR [rsi+0x23],es
   14000f90f:	push   0x55
   14000f911:	jbe    0x14000f8c2
   14000f913:	ins    DWORD PTR es:[rdi],dx
   14000f914:	mov    bl,0x72
   14000f916:	(bad)  
   14000f917:	and    al,0xc5
   14000f919:	mov    ch,0xcb
   14000f91b:	push   0x1ac4a298
   14000f920:	jg     0x14000f947
   14000f922:	push   rax
   14000f923:	stos   BYTE PTR es:[rdi],al
   14000f924:	out    0xf6,al
   14000f926:	(bad)  
   14000f927:	xor    edi,ebp
   14000f929:	out    dx,eax
   14000f92a:	rex.WRB stc 
   14000f92c:	popf   
   14000f92d:	(bad)  
   14000f92e:	or     al,BYTE PTR [rax-0x1f]
   14000f931:	push   rdx
   14000f932:	stc    
   14000f933:	scas   al,BYTE PTR es:[rdi]
   14000f934:	push   rbp
   14000f935:	rex.WRX rcr BYTE PTR [rdi+r15*2-0x1ec7e859],0x0
   14000f93e:	jmp    0x1685b00b8
   14000f943:	push   rdx
   14000f944:	push   0xffffffffffffffac
   14000f946:	(bad)  
   14000f947:	fcom   DWORD PTR [rcx-0x45]
   14000f94a:	retf   0x530
   14000f94d:	addr32 sub eax,0x523c66c1
   14000f953:	xchg   edi,eax
   14000f954:	(bad)  
   14000f955:	out    0x5,al
   14000f957:	add    BYTE PTR [rbp+0x6527c0f0],dl
   14000f95d:	jmp    0x14000f932
   14000f95f:	popf   
   14000f960:	jae    0x14000f920
   14000f962:	imul   esi,ebp,0xffffffe4
   14000f965:	scas   al,BYTE PTR es:[rdi]
   14000f966:	cmp    eax,0x555e5eb1
   14000f96b:	imul   edi,DWORD PTR [rcx-0xac2b002],0xfb5c597e
   14000f975:	adc    edx,DWORD PTR [rdx+0xc]
   14000f978:	movsxd edi,esi
   14000f97a:	lods   al,BYTE PTR ds:[rsi]
   14000f97b:	or     eax,0x6526e4e5
   14000f980:	push   rbx
   14000f981:	jrcxz  0x14000f992
   14000f983:	popf   
   14000f984:	(bad)  
   14000f985:	loopne 0x14000f9c4
   14000f987:	jnp    0x14000f9fe
   14000f989:	sub    DWORD PTR [rbp+rdi*4-0x38],0xffffffe2
   14000f98e:	neg    BYTE PTR [rcx]
   14000f990:	fs (bad) 
   14000f992:	cmp    ch,BYTE PTR [rax+0x3]
   14000f995:	cmp    edi,esi
   14000f997:	(bad)  
   14000f998:	out    dx,al
   14000f999:	(bad)  
   14000f99a:	lods   eax,DWORD PTR ds:[rsi]
   14000f99b:	(bad)  
   14000f99c:	jbe    0x14000fa08
   14000f99e:	cmp    DWORD PTR [rbx],0x2d
   14000f9a1:	sbb    dh,al
   14000f9a3:	adc    bl,BYTE PTR [rbx+0x59c28a78]
   14000f9a9:	mov    edi,ebx
   14000f9ab:	sbb    bh,BYTE PTR [rdi-0x6e]
   14000f9ae:	xchg   BYTE PTR [rsi+0x5573dc4],ah
   14000f9b4:	(bad)  
   14000f9b5:	push   0x3
   14000f9b7:	movabs al,ds:0x850018c9c785b0e
   14000f9c0:	scas   al,BYTE PTR es:[rdi]
   14000f9c1:	rex.W retf 
   14000f9c3:	mov    ebp,es
   14000f9c5:	push   rdx
   14000f9c6:	rex.XB mov WORD PTR [r10],?
   14000f9c9:	mov    ah,0x45
   14000f9cb:	stc    
   14000f9cc:	push   rsp
   14000f9cd:	in     eax,dx
   14000f9ce:	stc    
   14000f9cf:	mov    eax,0xf9308dd1
   14000f9d4:	rcr    BYTE PTR [rdx],cl
   14000f9d6:	mov    bl,0x8a
   14000f9d8:	(bad)  
   14000f9d9:	or     ah,ch
   14000f9db:	and    eax,DWORD PTR [rax+0x3931ee5e]
   14000f9e1:	enter  0x3ff5,0x72
   14000f9e5:	je     0x14000f9ba
   14000f9e7:	lods   eax,DWORD PTR ds:[rsi]
   14000f9e8:	outs   dx,BYTE PTR ds:[rsi]
   14000f9e9:	(bad)  
   14000f9ea:	push   rbp
   14000f9eb:	sbb    DWORD PTR [rsi],ebp
   14000f9ed:	lea    eax,[rbp+0x7c]
   14000f9f0:	sbb    al,0xc6
   14000f9f2:	push   rcx
   14000f9f3:	(bad)  
   14000f9f4:	lock mov edi,0xb8675a5e
   14000f9fa:	mov    edx,0x77372809
   14000f9ff:	outs   dx,BYTE PTR ds:[rsi]
   14000fa00:	mov    al,0x78
   14000fa02:	out    dx,al
   14000fa03:	imul   ecx,DWORD PTR [rsi+rbp*1],0x5f
   14000fa07:	rex
   14000fa08:	mov    bx,0x8471
   14000fa0c:	xchg   edi,eax
   14000fa0d:	xchg   ecx,eax
   14000fa0e:	jg     0x14000f99a
   14000fa10:	adc    al,dh
   14000fa12:	test   al,0x95
   14000fa14:	cld    
   14000fa15:	rex.WR jmp 0x122f0e94c
   14000fa1b:	rex.WX movabs rdi,0x3c1e897bdade8f85
   14000fa25:	(bad)
   14000fa28:	std    
   14000fa29:	rex.WRXB sete BYTE PTR [r10+r11*2-0x26e96f98]
   14000fa32:	not    DWORD PTR [rcx+0x16171809]
   14000fa38:	mov    BYTE PTR [rcx+0x4],dl
   14000fa3b:	add    eax,0x8f808d1
   14000fa40:	or     dh,ah
   14000fa42:	test   al,0xa1
   14000fa44:	add    eax,DWORD PTR [rsi]
   14000fa46:	(bad)  
   14000fa47:	sub    al,0x23
   14000fa49:	sbb    al,BYTE PTR [rbp-0x7107b7f]
   14000fa4f:	pop    rcx
   14000fa50:	mov    esi,0xf2ee0ef6
   14000fa55:	xor    al,0xa0
   14000fa57:	(bad)  
   14000fa58:	add    BYTE PTR [rbp+0x4c0e5adc],bh
   14000fa5e:	clc    
   14000fa5f:	add    edx,ecx
   14000fa61:	icebp  
   14000fa62:	add    ecx,DWORD PTR [rdi]
   14000fa64:	std    
   14000fa65:	jns    0x14000fa2d
   14000fa67:	sub    ecx,edi
   14000fa69:	test   al,0x2f
   14000fa6b:	int3   
   14000fa6c:	(bad)  
   14000fa6d:	(bad)  
   14000fa6e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fa6f:	sahf   
   14000fa70:	xor    BYTE PTR [rax+0x3f0e44dc],bl
   14000fa76:	rex xor eax,0x94693018
   14000fa7c:	out    0xe2,al
   14000fa7e:	rex.WXB lods al,BYTE PTR ds:[rsi]
   14000fa80:	ins    BYTE PTR es:[rdi],dx
   14000fa81:	popf   
   14000fa82:	ret    0xbcdd
   14000fa85:	mov    ch,BYTE PTR [rdx-0x7d]
   14000fa88:	mov    al,bl
   14000fa8a:	test   eax,0x434fd0da
   14000fa8f:	jmp    QWORD PTR [rcx+0x746cfe05]
   14000fa95:	ja     0x14000fae3
   14000fa97:	add    DWORD PTR [rax+0x37afd2b],ecx
   14000fa9d:	in     eax,dx
   14000fa9e:	adc    cl,BYTE PTR [rdi+riz*4]
   14000faa1:	rex.R (bad) 
   14000faa3:	xchg   ecx,eax
   14000faa4:	sub    DWORD PTR [rsi-0x3c],ebp
   14000faa7:	(bad)  
   14000faa8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000faa9:	jrcxz  0x14000fa41
   14000faab:	jrcxz  0x14000fa3d
   14000faad:	shl    al,1
   14000faaf:	add    al,0xf5
   14000fab1:	test   eax,0x89780804
   14000fab6:	imul   eax,DWORD PTR [rcx+rdx*1-0x7f],0xc87554c5
   14000fabe:	imul   eax,DWORD PTR [rbp-0x16b2f4f3],0x4354a44
   14000fac8:	icebp  
   14000fac9:	cmpxchg ebx,esi
   14000facc:	mov    ebp,0x2b3e5dc
   14000fad1:	jp     0x14000fad6
   14000fad3:	ror    bl,1
   14000fad5:	sub    esp,ebp
   14000fad7:	(bad)  
   14000fad8:	and    eax,0x7e6fa3bf
   14000fadd:	out    0x7b,al
   14000fadf:	gs imul esi,ebp,0x221ca507
   14000fae6:	(bad)  
   14000fae7:	jmp    0x12d591caa
   14000faec:	mov    edi,0x1e87f0a8
   14000faf1:	rcl    BYTE PTR [rbx],0xb8
   14000faf4:	jle    0x14000fae9
   14000faf6:	es ret 
   14000faf8:	repz iret 
   14000fafa:	xor    edi,DWORD PTR [rsp+rdi*2+0x4b5dea0e]
   14000fb01:	adc    ebp,DWORD PTR [rsp+rsi*8]
   14000fb04:	push   rdi
   14000fb05:	(bad)
   14000fb08:	mov    edi,0x1a27f18c
   14000fb0d:	xchg   ebp,eax
   14000fb0e:	pop    rsi
   14000fb0f:	pushf  
   14000fb10:	out    0x39,al
   14000fb12:	add    dh,bl
   14000fb14:	sbb    DWORD PTR [rcx-0x39],esi
   14000fb17:	addr32 call 0xcaf1b15c
   14000fb1d:	rol    DWORD PTR [rax-0x1392a4ac],1
   14000fb23:	xor    al,0x11
   14000fb25:	(bad)  
   14000fb26:	mov    edi,0x14b67cc5
   14000fb2b:	xchg   esi,eax
   14000fb2c:	ss pop rax
   14000fb2e:	or     al,0xe3
   14000fb30:	retf   0x17d8
   14000fb33:	push   rax
   14000fb34:	cwde   
   14000fb35:	movabs eax,ds:0xa536884593829349
   14000fb3e:	popf   
   14000fb3f:	adc    eax,0xd8f848b0
   14000fb44:	(bad)
   14000fb48:	mov    eax,0xde80a38b
   14000fb4d:	add    ah,dh
   14000fb4f:	repnz lea esp,[rcx+rax*1]
   14000fb53:	jg     0x14000fb3a
   14000fb55:	(bad)  
   14000fb56:	sbb    ebx,esi
   14000fb58:	lock rex.RX pop rbp
   14000fb5b:	fprem  
   14000fb5d:	sbb    DWORD PTR [r10+rdi*1],r13d
   14000fb61:	out    0xbc,eax
   14000fb63:	xchg   ebp,eax
   14000fb64:	in     eax,dx
   14000fb65:	add    dl,dl
   14000fb67:	int3   
   14000fb68:	test   al,0x76
   14000fb6a:	scas   eax,DWORD PTR es:[rdi]
   14000fb6b:	and    ch,BYTE PTR [rbx]
   14000fb6d:	fwait
   14000fb6e:	or     al,0x17
   14000fb70:	xchg   esi,eax
   14000fb71:	cwde   
   14000fb72:	xor    al,0xca
   14000fb74:	(bad)  
   14000fb75:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000fb76:	mov    bl,0xac
   14000fb78:	pushf  
   14000fb79:	(bad)  
   14000fb7a:	mov    DWORD PTR [rdi+0xcc2197e],edi
   14000fb80:	(bad)
   14000fb84:	add    DWORD PTR [rdi],ebp
   14000fb86:	sbb    al,bl
   14000fb88:	jg     0x14000fb61
   14000fb8a:	jp     0x14000fb6c
   14000fb8c:	xor    al,0xfe
   14000fb8e:	cmp    ebp,DWORD PTR [rcx]
   14000fb90:	pop    rsi
   14000fb91:	(bad)  
   14000fb92:	add    eax,0x81512ef0
   14000fb97:	jrcxz  0x14000fba8
   14000fb99:	shl    DWORD PTR [rcx],0x8d
   14000fb9c:	(bad)  
   14000fb9d:	and    al,0xdf
   14000fb9f:	rex.X idiv DWORD PTR [rcx]
   14000fba2:	adc    BYTE PTR [rax],dl
   14000fba4:	(bad)  
   14000fba6:	nop
   14000fba7:	in     eax,0x14
   14000fba9:	loop   0x14000fc06
   14000fbab:	or     al,0x40
   14000fbad:	mov    WORD PTR [rax],ss
   14000fbaf:	and    al,0x45
   14000fbb1:	fcom   QWORD PTR [rsi-0x5bfae98d]
   14000fbb7:	cmp    ecx,esp
   14000fbb9:	(bad)  
   14000fbba:	jmp    0x188529480
   14000fbbf:	fwait
   14000fbc0:	stos   DWORD PTR es:[rdi],eax
   14000fbc1:	test   BYTE PTR [rbx],dl
   14000fbc3:	iret   
   14000fbc4:	retf   0xf95
   14000fbc7:	jae    0x14000fbe0
   14000fbc9:	add    DWORD PTR [rcx-0xaf62289],0xfffffff2
   14000fbd0:	(bad)  
   14000fbd1:	xchg   esp,eax
   14000fbd2:	add    ebp,DWORD PTR [rbx-0x68697306]
   14000fbd8:	(bad)  
   14000fbd9:	stos   DWORD PTR es:[rdi],eax
   14000fbda:	int    0xc3
   14000fbdc:	jg     0x14000fc31
   14000fbde:	rex.RXB stos DWORD PTR es:[rdi],eax
   14000fbe0:	rex.RXB (bad) 
   14000fbe2:	(bad)  
   14000fbe3:	gs mov ebp,0x40434514
   14000fbe9:	addr32 jnp 0x14000fc40
   14000fbec:	cmc    
   14000fbed:	adc    al,0x39
   14000fbef:	jl     0x14000fbf3
   14000fbf1:	out    dx,eax
   14000fbf2:	sbb    eax,0x94fb7bbb
   14000fbf7:	out    0xbf,eax
   14000fbf9:	(bad)  
   14000fbfa:	ret    0x97a5
   14000fbfd:	jno    0x14000fbd2
   14000fbff:	fwait
   14000fc00:	and    al,0x82
   14000fc02:	mov    ss,WORD PTR [rdi-0x332c33bc]
   14000fc08:	jmp    0x161fbefd6
   14000fc0d:	(bad)  
   14000fc0e:	jmp    0x19f08e157
   14000fc13:	pop    rax
   14000fc14:	jg     0x14000fc16
   14000fc16:	mov    ah,0xda
   14000fc18:	cwde   
   14000fc19:	retf   0xd280
   14000fc1c:	cmc    
   14000fc1d:	(bad)  
   14000fc1e:	je     0x14000fbba
   14000fc20:	and    esi,0xffffff89
   14000fc23:	std    
   14000fc24:	xchg   edx,eax
   14000fc25:	(bad)  
   14000fc26:	and    BYTE PTR [rcx-0x7afbba53],ch
   14000fc2c:	sub    eax,0x886d1e21
   14000fc31:	mov    dh,0xfc
   14000fc33:	(bad)  
   14000fc34:	pop    rbx
   14000fc35:	mov    BYTE PTR [rax-0x681629e4],ah
   14000fc3b:	call   0x10bbb078e
   14000fc40:	push   rdx
   14000fc41:	sbb    esi,0xcad2f400
   14000fc47:	sub    eax,0x37f5fef2
   14000fc4c:	cmp    al,0xf2
   14000fc4e:	out    0x74,eax
   14000fc50:	jno    0x14000fc4f
   14000fc52:	add    ebp,DWORD PTR [rsi+0x4108801c]
   14000fc58:	add    al,0xd1
   14000fc5a:	sub    BYTE PTR [rdx+0x43],0xb1
   14000fc5e:	ja     0x14000fc63
   14000fc60:	sbb    DWORD PTR [rip+0x423b5c32],ebp        # 0x1823c5898
   14000fc66:	or     dl,cl
   14000fc68:	(bad)  
   14000fc6a:	sub    eax,0x40bc2f56
   14000fc6f:	jno    0x14000fc6e
   14000fc71:	push   rdx
   14000fc72:	out    0xfd,al
   14000fc74:	mov    ebp,DWORD PTR [rdx+0x56]
   14000fc77:	cld    
   14000fc78:	rex.X
   14000fc79:	rex.X outs dx,BYTE PTR ds:[rsi]
   14000fc7b:	std    
   14000fc7c:	adc    eax,0x6338e323
   14000fc81:	loopne 0x14000fc28
   14000fc83:	push   0x246970a0
   14000fc88:	js     0x14000fc26
   14000fc8a:	out    0x97,eax
   14000fc8c:	(bad)  
   14000fc8d:	scas   al,BYTE PTR es:[rdi]
   14000fc8e:	add    DWORD PTR [rcx+0x14],ebp
   14000fc91:	or     DWORD PTR [rcx-0xd525ff2],ecx
   14000fc97:	(bad)  
   14000fc98:	fisttp QWORD PTR [rdi+0x55]
   14000fc9b:	add    DWORD PTR [rsp+rax*1],0x340654ba
   14000fca2:	rex.WX mov cl,0xfd
   14000fca5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fca6:	adc    DWORD PTR [rcx-0x37],esp
   14000fca9:	clc    
   14000fcaa:	rex.R xor al,0x22
   14000fcad:	scas   al,BYTE PTR es:[rdi]
   14000fcae:	xor    eax,0x6132a9a0
   14000fcb3:	(bad)  
   14000fcb4:	(bad)  
   14000fcb5:	xchg   ecx,eax
   14000fcb6:	test   BYTE PTR [rdi-0x1],dh
   14000fcb9:	add    bh,BYTE PTR [rdi+0x69770cf3]
   14000fcbf:	sbb    dl,al
   14000fcc1:	sbb    eax,DWORD PTR [rax+0x22dca25e]
   14000fcc7:	out    dx,eax
   14000fcc8:	mov    edi,0x3e27c9ff
   14000fccd:	xlat   BYTE PTR ds:[rbx]
   14000fcce:	sub    al,0xad
   14000fcd0:	inc    DWORD PTR [rbx+rax*4]
   14000fcd3:	add    eax,0xd547c44
   14000fcd8:	test   DWORD PTR [rax-0x1ae615ff],esp
   14000fcde:	(bad)  
   14000fcdf:	cs mov dl,0x79
   14000fce2:	(bad)  
   14000fce3:	(bad)
   14000fce6:	out    dx,al
   14000fce7:	mov    bh,BYTE PTR fs:[rbx-0x745a7590]
   14000fcee:	addr32 mov edi,?
   14000fcf1:	(bad)  
   14000fcf2:	shl    BYTE PTR [rsi],0xf0
   14000fcf5:	in     al,0xce
   14000fcf7:	mov    edi,0xac5bfe84
   14000fcfc:	popf   
   14000fcfd:	jbe    0x14000fd25
   14000fcff:	sbb    eax,0xffa1204c
   14000fd04:	jle    0x14000fd54
   14000fd06:	(bad)
   14000fd09:	in     eax,dx
   14000fd0a:	iret   
   14000fd0b:	xor    eax,DWORD PTR [rcx]
   14000fd0d:	xor    eax,0x144523bf
   14000fd12:	(bad)  
   14000fd13:	jnp    0x14000fd1c
   14000fd15:	and    dl,BYTE PTR [rsi]
   14000fd17:	ror    BYTE PTR [rcx-0xa],1
   14000fd1a:	pop    rbp
   14000fd1b:	lods   al,BYTE PTR ds:[rsi]
   14000fd1c:	(bad)  
   14000fd1d:	and    al,0xce
   14000fd1f:	add    DWORD PTR [rcx-0x7f969ef6],ebp
   14000fd25:	imul   eax,DWORD PTR [rcx],0x40
   14000fd28:	or     ebp,DWORD PTR [rdx]
   14000fd2a:	adc    al,0x27
   14000fd2c:	mov    WORD PTR [rsi],ds
   14000fd2e:	xlat   BYTE PTR ds:[rbx]
   14000fd2f:	sbb    ebx,DWORD PTR [rdi-0x20]
   14000fd32:	cs add eax,0xd0037b03
   14000fd38:	rex.WXB push r15
   14000fd3a:	jb     0x14000fd1a
   14000fd3c:	jg     0x14000fd32
   14000fd3e:	movabs eax,ds:0x78e86ffd79649e07
   14000fd47:	mov    ecx,0xd8185f14
   14000fd4c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fd4d:	cmp    BYTE PTR [rdx],al
   14000fd4f:	test   BYTE PTR [rsi],al
   14000fd51:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fd52:	jnp    0x14000fd8c
   14000fd54:	out    dx,eax
   14000fd55:	sbb    BYTE PTR [rdx+rdi*4],bl
   14000fd58:	(bad)  
   14000fd59:	push   rcx
   14000fd5a:	in     eax,0xc6
   14000fd5c:	mov    ch,0x6d
   14000fd5e:	xchg   esi,eax
   14000fd5f:	(bad)  
   14000fd60:	jg     0x14000fd9f
   14000fd62:	mov    ?,ebx
   14000fd64:	scas   al,BYTE PTR es:[rdi]
   14000fd65:	test   esp,0x81052a8f
   14000fd6b:	rex.X add al,0x2f
   14000fd6e:	and    DWORD PTR [rdi-0x48b2ce01],eax
   14000fd74:	(bad)  
   14000fd75:	movabs al,ds:0x419aeaa5d700554
   14000fd7e:	rex.WRXB int3 
   14000fd80:	dec    DWORD PTR [rbp-0x1b]
   14000fd83:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fd84:	sar    DWORD PTR [rdx],0xf7
   14000fd87:	shl    BYTE PTR [rdi+rdi*4+0x16],cl
   14000fd8b:	mov    ch,0xcf
   14000fd8d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fd8e:	rex fcmove st,st(6)
   14000fd91:	sbb    BYTE PTR [rax],0x9
   14000fd94:	push   0x19105c87
   14000fd99:	or     DWORD PTR [rcx+0x80ed470],0x3e6fb649
   14000fda3:	and    eax,0x2d09ab48
   14000fda8:	mov    ebx,0x71cfb1f0
   14000fdad:	outs   dx,BYTE PTR ds:[rsi]
   14000fdae:	lea    esi,[rsi+0x18d77a24]
   14000fdb4:	sbb    esi,0x3072f400
   14000fdba:	out    dx,eax
   14000fdbb:	(bad)  
   14000fdbc:	push   rdi
   14000fdbd:	(bad)  
   14000fdbe:	push   rdi
   14000fdbf:	xlat   BYTE PTR ds:[rbx]
   14000fdc0:	mov    dh,ch
   14000fdc2:	int    0x5f
   14000fdc4:	push   0x16
   14000fdc6:	xlat   BYTE PTR ds:[rbx]
   14000fdc7:	(bad)  
   14000fdc8:	mov    edx,0xf6938062
   14000fdcd:	ss push rcx
   14000fdcf:	or     eax,0x727e0210
   14000fdd4:	xchg   ebx,eax
   14000fdd5:	(bad)  
   14000fdd6:	imul   ecx,DWORD PTR [rbp-0x26e873f],0xf1734d59
   14000fde0:	or     al,0x4b
   14000fde2:	(bad)  
   14000fde3:	pop    rdi
   14000fde4:	rex.R outs dx,BYTE PTR ds:[rsi]
   14000fde6:	pop    rsi
   14000fde7:	rex.RB
   14000fde8:	rex.XB or eax,0x105aaf44
   14000fdee:	repz jg 0x14000fd90
   14000fdf1:	xchg   esi,eax
   14000fdf2:	std    
   14000fdf3:	(bad)  
   14000fdf4:	and    eax,0x6b9ed4b8
   14000fdf9:	(bad)  
   14000fdfa:	pop    rax
   14000fdfb:	clc    
   14000fdfc:	xchg   ecx,eax
   14000fdfd:	call   0x1662a2cc3
   14000fe02:	popf   
   14000fe03:	jge    0x14000fe4c
   14000fe05:	scas   al,BYTE PTR es:[edi]
   14000fe07:	out    0x9d,al
   14000fe09:	(bad)
   14000fe0c:	push   rsi
   14000fe0d:	jmp    0x14000fdea
   14000fe0f:	add    eax,0xc46cec43
   14000fe14:	pop    rcx
   14000fe15:	sub    ah,al
   14000fe17:	or     al,0xf4
   14000fe19:	sub    ebp,DWORD PTR [rsp+rcx*8+0x6a0729d8]
   14000fe20:	xor    dh,BYTE PTR [rax]
   14000fe22:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fe23:	std    
   14000fe24:	fcmovb st,st(1)
   14000fe26:	sbb    DWORD PTR [rbp+rdx*4+0xa],eax
   14000fe2a:	jge    0x14000fe0e
   14000fe2c:	movsxd edi,DWORD PTR [rdx-0x3d11b10b]
   14000fe32:	xor    al,0xa0
   14000fe34:	(bad)  
   14000fe35:	add    bh,dh
   14000fe37:	mov    edx,0x9dfbc81c
   14000fe3c:	jae    0x14000fe13
   14000fe3e:	repnz icebp 
   14000fe40:	adc    edi,DWORD PTR [rdi-0x5b]
   14000fe43:	pop    rsi
   14000fe44:	fidivr WORD PTR [rdi+rsi*4+0x54]
   14000fe48:	movsxd eax,DWORD PTR [rsp+rbx*4+0x71]
   14000fe4c:	outs   dx,DWORD PTR ds:[rsi]
   14000fe4d:	rex.WR
   14000fe4e:	repz and BYTE PTR [rbx+r10*2],sil
   14000fe53:	mov    bh,BYTE PTR [rdx-0x36]
   14000fe56:	jo     0x14000fe3b
   14000fe58:	sbb    dh,cl
   14000fe5a:	jns    0x14000feca
   14000fe5c:	fdivr  QWORD PTR [rsi+rcx*8+0x181785e2]
   14000fe63:	pop    rsi
   14000fe64:	mov    ecx,0x125dd300
   14000fe69:	push   rbp
   14000fe6a:	xlat   BYTE PTR ds:[rbx]
   14000fe6b:	or     ebx,DWORD PTR [rip+0xffffffffd739afef]        # 0x1173aae60
   14000fe71:	(bad)  
   14000fe72:	in     eax,dx
   14000fe73:	mov    bh,0x96
   14000fe75:	call   rbx
   14000fe77:	jmp    0x13a196e81
   14000fe7c:	(bad)  
   14000fe7d:	jg     0x14000fe2b
   14000fe7f:	rex outs dx,DWORD PTR ds:[rsi]
   14000fe81:	sbb    al,0x0
   14000fe83:	rex.B push 0x45
   14000fe86:	rex.X push 0x9c63f09
   14000fe8c:	mov    al,0x5f
   14000fe8e:	push   rcx
   14000fe8f:	adc    dl,BYTE PTR [rbp-0x28]
   14000fe92:	rex.RB xchg r8d,eax
   14000fe94:	(bad)  
   14000fe96:	test   al,0x48
   14000fe98:	in     al,dx
   14000fe99:	and    eax,0x6675f530
   14000fe9e:	or     al,0x52
   14000fea0:	ja     0x14000fe42
   14000fea2:	rex.WXB
   14000fea3:	rex.WR
   14000fea4:	rex.XB pop r10
   14000fea6:	and    eax,DWORD PTR [rax+0xe]
   14000fea9:	cmp    al,0x4
   14000feab:	rex.B in eax,0x7e
   14000feae:	cdq    
   14000feaf:	jl     0x14000fec0
   14000feb1:	ja     0x14000fe94
   14000feb3:	mov    ah,0xa0
   14000feb5:	mov    ebx,0xf97a44e6
   14000feba:	jge    0x14000fe84
   14000febc:	and    DWORD PTR [rsi],0xfe3aa01f
   14000fec2:	clc    
   14000fec3:	movabs ds:0x2e1887f1bcb66c7f,eax
   14000fecc:	and    esi,ecx
   14000fece:	rex.RXB in eax,0x81
   14000fed1:	sbb    al,0xfa
   14000fed3:	mov    eax,DWORD PTR [rbp+0x643555ff]
   14000fed9:	mov    esp,0x9b4c9ba
   14000fede:	rex.WR
   14000fedf:	cs mov esi,0x1785cacc
   14000fee5:	lock (bad) 
   14000fee7:	scas   al,BYTE PTR es:[rdi]
   14000fee8:	movabs al,ds:0x4cffb5cd7efc6a61
   14000fef1:	std    
   14000fef2:	rex.WRB (bad) 
   14000fef4:	add    BYTE PTR [rdx+rdi*8+0xc739a9b],cl
   14000fefb:	hlt    
   14000fefc:	jae    0x14000ff6b
   14000fefe:	cmp    dl,BYTE PTR [rax-0x54a37e90]
   14000ff04:	add    esi,DWORD PTR [rsi+rax*1+0x17e22e9a]
   14000ff0b:	ret    
   14000ff0c:	jbe    0x14000ff5b
   14000ff0e:	cwde   
   14000ff0f:	movabs ds:0x1abc417a0f75abf8,al
   14000ff19:	movabs eax,ds:0x8036720a44c000c8
   14000ff22:	and    al,0xf
   14000ff24:	and    al,0xc1
   14000ff26:	mov    BYTE PTR [rbp-0x692fce65],0xf
   14000ff2d:	and    BYTE PTR [rdx],ah
   14000ff2f:	sub    al,0x48
   14000ff31:	clc    
   14000ff32:	ror    BYTE PTR [rdi],1
   14000ff34:	leave  
   14000ff35:	mov    eax,DWORD PTR [rdi-0x48]
   14000ff38:	retf   
   14000ff39:	movabs ds:0xd00b72abdc00de80,al
   14000ff42:	out    dx,eax
   14000ff43:	movabs eax,ds:0x2ff3657acefc1f47
   14000ff4c:	call   0x18be804c9
   14000ff51:	sbb    eax,ecx
   14000ff53:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ff54:	mov    BYTE PTR [rsi],al
   14000ff56:	(bad)  
   14000ff57:	sub    ch,BYTE PTR [rax-0x60]
   14000ff5a:	(bad)  
   14000ff5b:	mov    cl,0xbf
   14000ff5e:	retf   
   14000ff5f:	(bad)  
   14000ff60:	jns    0x14000ff7f
   14000ff62:	(bad)  
   14000ff63:	sbb    BYTE PTR [rax-0x1d],dh
   14000ff66:	out    0xe,al
   14000ff68:	movabs ds:0x7e07173e5f19270b,eax
   14000ff71:	adc    al,BYTE PTR [rbx]
   14000ff73:	add    eax,0x17f81a87
   14000ff78:	ret    
   14000ff79:	push   QWORD PTR [rax+rbp*8+0x69fd0e47]
   14000ff80:	cmp    eax,0x7808aa77
   14000ff85:	xlat   BYTE PTR ds:[rbx]
   14000ff86:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ff87:	add    BYTE PTR [rsi],bh
   14000ff89:	(bad)  
   14000ff8a:	fstp   QWORD PTR [rdx-0x26]
   14000ff8d:	scas   eax,DWORD PTR es:[rdi]
   14000ff8e:	test   al,0x20
   14000ff90:	xor    ebx,DWORD PTR [r9]
   14000ff93:	sub    dh,ch
   14000ff95:	in     al,dx
   14000ff96:	or     BYTE PTR [rsi],0x6a
   14000ff99:	and    BYTE PTR [rdi-0x2af312fb],dl
   14000ff9f:	out    0x1,al
   14000ffa1:	(bad)  
   14000ffa2:	or     eax,0xf39af383
   14000ffa7:	sti    
   14000ffa8:	rex.W (bad) 
   14000ffaa:	in     al,dx
   14000ffab:	xor    BYTE PTR [rax],al
   14000ffad:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ffae:	push   rbp
   14000ffaf:	mov    ch,BYTE PTR [rax+0x13]
   14000ffb2:	sub    al,0x9a
   14000ffb4:	rex.B (bad) 
   14000ffb6:	jl     0x140010008
   14000ffb8:	(bad)  
   14000ffb9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ffba:	(bad)  
   14000ffbb:	movabs eax,ds:0x97a24e2bb80a26bb
   14000ffc4:	fbld   TBYTE PTR [rbx+0x2b2b9eb4]
   14000ffca:	push   rcx
   14000ffcc:	(bad)  
   14000ffcd:	mov    ?,WORD PTR [rbp-0x726a653]
   14000ffd3:	fcmovne st,st(5)
   14000ffd5:	loop   0x140010051
   14000ffd7:	jmp    0x14e556166
   14000ffdc:	xrelease mov BYTE PTR [rdx+0x84feeb1],ch
   14000ffe3:	call   0xc691ca54
   14000ffe8:	rol    esi,0x11
   14000ffeb:	(bad)  
   14000ffec:	es mov al,0x7b
   14000ffef:	stc    
   14000fff0:	add    ch,BYTE PTR [rbx]
   14000fff2:	(bad)  
   14000fff3:	pop    rdi
   14000fff4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fff5:	mov    eax,0xd4c2097e
   14000fffa:	rex mov ebx,0xda17a888
   140010000:	add    edi,edi
   140010002:	cmp    ah,ch
   140010004:	mov    edi,0xc1d7fddc
   140010009:	add    edx,ebx
   14001000b:	xor    al,0xa0
   14001000d:	pop    rbp
   14001000e:	mov    ebx,0x1028b2f
   140010013:	and    al,0x58
   140010015:	sub    DWORD PTR [rax-0x25],edx
   140010018:	imul   eax,eax,0x9ec78f29
   14001001e:	xchg   ebx,eax
   14001001f:	rex.WRX adc BYTE PTR [rax+0x24e280ca],0xf2
   140010027:	xchg   DWORD PTR [rax+rcx*4],ebx
   14001002a:	jae    0x14000ffb4
   14001002c:	ja     0x140010064
   14001002e:	jns    0x14000ffc8
   140010030:	fcomp  QWORD PTR [rsi]
   140010032:	pushf  
   140010033:	pop    rbp
   140010035:	sub    dh,al
   140010037:	sub    ah,BYTE PTR [rsi+0x74]
   14001003a:	sub    al,0x9a
   14001003c:	adc    DWORD PTR [rax+0x5d],esp
   14001003f:	data16 lahf 
   140010041:	mov    al,0x99
   140010043:	xor    DWORD PTR [rdi+0xd],0x37a027
   14001004a:	imul   DWORD PTR [rsi+0x1e562f24]
   140010050:	ds mov edx,0xdb5bbf79
   140010056:	cld    
   140010057:	cmp    edx,DWORD PTR [rbx-0x5164bc5b]
   14001005d:	sbb    al,0x76
   14001005f:	pop    rax
   140010060:	cmp    BYTE PTR [rcx-0x5ce5581c],dh
   140010066:	sbb    BYTE PTR [rdx+0x1b],0xfc
   14001006a:	in     al,0x26
   14001006c:	add    DWORD PTR [rbp+0x4b0b8615],0xffffffdc
   140010073:	fcomp  st(3)
   140010075:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010076:	mov    eax,0x178b02f0
   14001007b:	iret   
   14001007c:	and    BYTE PTR [rbx-0x4f],bh
   14001007f:	jmp    0x1400100d0
   140010081:	int    0x68
   140010083:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010084:	(bad)  
   140010085:	pop    rcx
   140010086:	cmp    edi,ecx
   140010088:	xchg   DWORD PTR [rdi+rdx*2-0x7113d6f5],ebx
   14001008f:	rex.WRXB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010091:	cs mov ebp,0xa9700954
   140010097:	fs xchg edi,eax
   140010099:	fstp   TBYTE PTR [rsi-0x13]
   14001009c:	push   rdi
   14001009d:	add    BYTE PTR [rsi+0x1],ah
   1400100a0:	(bad)  
   1400100a1:	out    0xdb,al
   1400100a3:	and    ebx,0xffa724db
   1400100a9:	fstp   QWORD PTR [rcx]
   1400100ab:	and    DWORD PTR [rax+0x4f],esp
   1400100ae:	rex.WX add al,0x2
   1400100b1:	(bad)  
   1400100b2:	adc    DWORD PTR [rdx+rbx*8-0x76a9017a],0x9a871d48
   1400100bd:	mov    bh,0xd4
   1400100bf:	out    dx,al
   1400100c0:	cmp    BYTE PTR [rbp-0x295e3e1],cl
   1400100c6:	(bad)  
   1400100c7:	(bad)  
   1400100c8:	sub    ah,BYTE PTR [rdi+0x4a2ee11f]
   1400100ce:	add    edi,DWORD PTR [rdx+0x3]
   1400100d1:	jo     0x140010082
   1400100d3:	leave  
   1400100d4:	add    esp,eax
   1400100d6:	mov    edi,0x78d1caac
   1400100db:	jae    0x1400100d0
   1400100dd:	outs   dx,DWORD PTR ds:[rsi]
   1400100de:	rex.WRX xchg rdi,rax
   1400100e0:	(bad)  
   1400100e2:	jmp    0xcae10c6d
   1400100e7:	in     al,dx
   1400100e8:	pop    rbp
   1400100e9:	movabs ds:0x434206877c9887f2,eax
   1400100f2:	push   rbp
   1400100f3:	sbb    QWORD PTR [r12+r11*1+0x21],r13
   1400100f8:	mov    BYTE PTR [rbx-0x19],ah
   1400100fb:	rol    BYTE PTR [rip+0xffffffff9d7fced6],cl        # 0xdd80cfd7
   140010101:	(bad)  
   140010102:	(bad)  
   140010103:	(bad)  
   140010104:	ror    BYTE PTR [rsi+riz*8-0x16],cl
   140010108:	(bad)  
   140010109:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001010a:	rex.W pushf 
   14001010c:	stc    
   14001010d:	lahf   
   14001010e:	out    0xfe,eax
   140010110:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010111:	mov    dl,0x5a
   140010113:	rex.RXB (bad) 
   140010115:	mov    ebx,0xfd2a4151
   14001011a:	fsincos 
   14001011c:	mov    esp,0xd7ba3693
   140010121:	fcom   DWORD PTR [rcx+0x2c]
   140010124:	add    DWORD PTR [rsp+rax*8],esp
   140010127:	xor    al,0x20
   140010129:	(bad)  
   14001012a:	jae    0x14001015a
   14001012c:	sbb    al,BYTE PTR [rbx]
   14001012e:	lea    esp,[rax+riz*4+0x7692b8a4]
   140010135:	xchg   edx,eax
   140010136:	sub    eax,DWORD PTR [rcx]
   140010138:	leave  
   140010139:	(bad)
   14001013c:	(bad)  
   14001013d:	movabs ds:0xc8931171080f2c6,eax
   140010146:	sub    BYTE PTR [rdx+0x5a],ch
   140010149:	xor    r13d,DWORD PTR ds:[rax+0x69]
   14001014e:	lods   eax,DWORD PTR ds:[rsi]
   14001014f:	ret    0xc7e3
   140010152:	fyl2xp1 
   140010154:	and    al,0x77
   140010156:	sar    DWORD PTR [rax+rax*8+0x4bdc00de],1
   14001015d:	jb     0x14001016a
   14001015f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010160:	(bad)  
   140010162:	outs   dx,DWORD PTR ds:[rsi]
   140010163:	js     0x140010155
   140010165:	not    DWORD PTR [edi-0xe7982f1]
   14001016c:	or     ch,dl
   14001016e:	push   rdx
   14001016f:	test   DWORD PTR [rsp+rsi*8-0x4],0x343e034e
   140010177:	mov    eax,0xdc5010d0
   14001017c:	je     0x14001010d
   14001017e:	push   rcx
   14001017f:	pop    rcx
   140010180:	xor    BYTE PTR [rax-0x27],bl
   140010183:	loopne 0x14001016b
   140010185:	fs add bl,bl
   140010188:	(bad)  
   140010189:	mov    dl,0xbc
   14001018b:	jge    0x140010193
   14001018d:	mov    bh,0x7b
   14001018f:	lea    esp,[rax+0x6e154c75]
   140010195:	push   rcx
   140010196:	cli    
   140010197:	mov    esp,ebp
   140010199:	mov    edx,0xfbd660a4
   14001019e:	rex.WRXB and r12b,r8b
   1400101a1:	je     0x14001018a
   1400101a3:	add    BYTE PTR [rbx+rbp*8-0x164bdfe],dh
   1400101aa:	addr32 cmp eax,0xaa4d020b
   1400101b0:	add    al,0xa4
   1400101b2:	jbe    0x140010214
   1400101b4:	add    ecx,DWORD PTR [rax]
   1400101b6:	xchg   ebp,eax
   1400101b7:	mov    BYTE PTR [rdi],cl
   1400101b9:	pop    rax
   1400101ba:	retf   0xfe42
   1400101bd:	cwde   
   1400101be:	in     al,0xc5
   1400101c0:	test   ch,al
   1400101c2:	rex.WB
   1400101c3:	rex.WRX or rax,r14
   1400101c6:	or     DWORD PTR [rdi+0x48],ebp
   1400101c9:	mov    ecx,0x63e05abf
   1400101ce:	mov    eax,0xd7127c47
   1400101d3:	imul   edi,DWORD PTR [rdx+rdx*1],0x7d985611
   1400101da:	out    0x1,al
   1400101dc:	test   BYTE PTR [rsi-0x5fb9da24],0x37
   1400101e3:	add    bh,dh
   1400101e5:	mov    bh,BYTE PTR [rdx+rdx*1+0x7c1f2ff1]
   1400101ec:	jrcxz  0x1400101b1
   1400101ee:	(bad)  
   1400101ef:	xor    BYTE PTR [rbx+0x39],bl
   1400101f2:	hlt    
   1400101f3:	xchg   ebx,eax
   1400101f4:	mov    edx,0xe8f88ab0
   1400101f9:	stc    
   1400101fa:	push   rbp
   1400101fb:	xchg   ebp,eax
   1400101fc:	es xor al,0x88
   1400101ff:	(bad)  
   140010200:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010201:	imul   edx,eax,0x8109a1a6
   140010207:	adc    BYTE PTR [rdx],al
   140010209:	(bad)  
   14001020a:	dec    BYTE PTR [rsi]
   14001020c:	ret    
   14001020d:	mov    ch,0x43
   14001020f:	cmp    BYTE PTR [rdi+0x72],bl
   140010212:	jrcxz  0x1400101de
   140010214:	and    eax,0xa49c2e56
   140010219:	mov    edx,0xfb660172
   14001021e:	and    ch,0xd2
   140010221:	or     al,BYTE PTR [rip+0xffffffffd37fa162]        # 0x11380a389
   140010227:	xchg   esi,eax
   140010228:	stc    
   140010229:	ins    BYTE PTR es:[rdi],dx
   14001022a:	fldcw  WORD PTR [rdi-0x59]
   14001022d:	ins    DWORD PTR es:[rdi],dx
   14001022e:	clc    
   14001022f:	(bad)  
   140010230:	cmp    esi,edi
   140010232:	movabs ds:0xe5da42a5cce567d2,al
   14001023b:	(bad)  
   14001023c:	push   rcx
   14001023d:	push   rbx
   14001023e:	(bad)  
   14001023f:	sbb    BYTE PTR [rip+0xffffffff83440750],al        # 0xc3450995
   140010245:	jmp    0x122eb22f4
   14001024a:	jo     0x14001025b
   14001024c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001024d:	adc    DWORD PTR [rbx],ebp
   14001024f:	push   rax
   140010250:	repnz rcl BYTE PTR [rax+0x658801c8],1
   140010257:	mov    r13b,0x4e
   14001025a:	(bad)  
   14001025b:	jno    0x14001023d
   14001025d:	mov    al,BYTE PTR [rdx+rsi*8-0x353c4b39]
   140010264:	jge    0x140010293
   140010266:	rex.WRXB add QWORD PTR [r11+0x27],r9
   14001026a:	push   0x1500cb69
   14001026f:	loope  0x14001021a
   140010271:	lahf   
   140010272:	in     al,0x85
   140010274:	mov    bh,0xd1
   140010276:	pop    rbp
   140010277:	cmp    esp,eax
   140010279:	(bad)  
   14001027a:	rex.WRX add r15,QWORD PTR [rdx+0x3]
   14001027e:	jo     0x1400102af
   140010280:	enter  0xca2d,0x7d
   140010284:	(bad)  
   140010286:	jl     0x140010267
   140010288:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010289:	jmp    0x140010220
   14001028b:	int    0xbf
   14001028d:	pop    rdx
   14001028e:	(bad)  
   14001028f:	lods   al,BYTE PTR ds:[rsi]
   140010290:	jns    0x1400102e9
   140010292:	or     al,0x50
   140010294:	jno    0x1400102cc
   140010296:	adc    al,0xc3
   140010298:	cmp    al,0x7e
   14001029a:	push   rbx
   14001029b:	xor    ecx,DWORD PTR [rbx]
   14001029d:	xor    eax,0xd406960d
   1400102a2:	adc    eax,esi
   1400102a4:	add    ah,ch
   1400102a6:	ficom  DWORD PTR [rcx]
   1400102a8:	mul    BYTE PTR [rsi+0x33]
   1400102ab:	(bad)  
   1400102ac:	mov    ebp,DWORD PTR [rdi]
   1400102ae:	mov    dl,0xb6
   1400102b0:	jne    0x1400102cc
   1400102b2:	mov    edi,0x66108573
   1400102b7:	sbb    DWORD PTR [rcx],esi
   1400102b9:	ja     0x140010243
   1400102bb:	sbb    DWORD PTR [rax+0x2e812310],eax
   1400102c1:	out    0x3e,eax
   1400102c3:	push   rdi
   1400102c4:	add    al,cl
   1400102c6:	or     eax,0x814ace40
   1400102cb:	fidiv  WORD PTR [rdi-0x2ad14353]
   1400102d1:	repz add dl,BYTE PTR [rcx+0x1512a3e8]
   1400102d8:	cmp    al,BYTE PTR [rax]
   1400102da:	test   eax,0x21141814
   1400102df:	add    BYTE PTR [rcx],ch
   1400102e1:	push   rbx
   1400102e2:	(bad)  
   1400102e3:	pop    rax
   1400102e4:	add    eax,0x7021
   1400102e9:	enter  0x8d51,0x66
   1400102ed:	rex.WX mov al,0xe4
   1400102f0:	push   rcx
   1400102f1:	movsxd edx,DWORD PTR [rcx-0x7]
   1400102f4:	xor    esp,DWORD PTR [rip+0x16c1b490]        # 0x156c2b78a
   1400102fa:	(bad)  
   1400102fb:	mov    bl,bh
   1400102fd:	add    ah,BYTE PTR [rdx+0x34]
   140010300:	and    BYTE PTR [rdx],dh
   140010302:	cmp    al,cl
   140010304:	fidiv  WORD PTR [rbx-0x24]
   140010307:	and    eax,0x37b4343
   14001030c:	jo     0x1400102c5
   14001030e:	retf   
   14001030f:	sub    eax,0xf23ff3c
   140010314:	(bad)  
   140010315:	stc    
   140010316:	push   0xffffffffabfc3b58
   14001031b:	mov    bl,0x85
   14001031d:	cmc    
   14001031e:	add    eax,0x63510d57
   140010323:	cli    
   140010324:	mov    DWORD PTR [rsi],eax
   140010326:	mov    ah,0x89
   140010328:	mov    ch,0x7e
   14001032a:	(bad)  
   14001032b:	call   0xff896095
   140010330:	stos   DWORD PTR es:[rdi],eax
   140010331:	mov    ebp,0x1b2b061d
   140010336:	adc    al,0xc3
   140010338:	adc    edi,edx
   14001033a:	scas   eax,DWORD PTR es:[rdi]
   14001033b:	pop    rdi
   14001033c:	(bad)  
   14001033d:	icebp  
   14001033e:	loop   0x140010369
   140010340:	(bad)  
   140010341:	xchg   edi,eax
   140010342:	iret   
   140010343:	rex.RB out dx,eax
   140010345:	(bad)  
   140010346:	push   0xfffffffffffffff9
   140010348:	jb     0x140010364
   14001034a:	stc    
   14001034b:	add    eax,0xba53793e
   140010350:	rex.W jp 0x14001030a
   140010353:	cld    
   140010354:	xchg   edi,eax
   140010355:	adc    BYTE PTR [rcx+rcx*8-0x7c],bh
   140010359:	and    BYTE PTR [rdi],ch
   14001035b:	(bad)  
   14001035c:	mov    BYTE PTR [rbx-0x21bdbf2f],cl
   140010362:	(bad)  
   140010363:	sar    dh,1
   140010365:	(bad)  
   140010366:	int    0x3f
   140010368:	and    DWORD PTR [rdx],edx
   14001036a:	(bad)  
   14001036b:	pushf  
   14001036c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001036d:	push   0xffffffffe4fe7a21
   140010372:	mov    cl,0x45
   140010374:	xor    DWORD PTR [rbp+0xebbcfb5],eax
   14001037a:	clc    
   14001037b:	mov    bl,BYTE PTR [edi+0x1a5c04fa]
   140010382:	cmp    ah,dl
   140010384:	pop    rsi
   140010385:	fst    DWORD PTR [rip+0xffffffffa6998c98]        # 0xe69a9023
   14001038b:	mov    es,ecx
   14001038d:	xchg   esp,eax
   14001038e:	sub    ch,BYTE PTR [rax-0x580ad74e]
   140010394:	(bad)  
   140010395:	retf   0x12f6
   140010398:	ja     0x14001039b
   14001039a:	xor    eax,0x770037b8
   14001039f:	mov    bl,0x1c
   1400103a1:	push   0x37aa05ed
   1400103a6:	sahf   
   1400103a7:	cmp    ah,dh
   1400103a9:	fldenv [rsi-0x3]
   1400103ac:	call   0x15f2ff160
   1400103b1:	fidiv  WORD PTR [rax-0x2b]
   1400103b4:	or     BYTE PTR [rcx],dl
   1400103b6:	(bad)  
   1400103b7:	adc    eax,0x535c0427
   1400103bc:	adc    eax,DWORD PTR [rdx+0x43]
   1400103bf:	rex.W test BYTE PTR [rdi],bl
   1400103c2:	sti    
   1400103c3:	or     DWORD PTR [rbp-0x33],esi
   1400103c6:	cmp    BYTE PTR [rcx+rbp*1+0x37],cl
   1400103ca:	mov    ?,WORD PTR [rcx]
   1400103cc:	popf   
   1400103cd:	(bad)  
   1400103ce:	rex.WR mov dil,0x5e
   1400103d1:	(bad)  
   1400103d2:	cmc    
   1400103d3:	ret    0x8a69
   1400103d6:	popf   
   1400103d7:	sub    ebp,DWORD PTR [rax-0x68]
   1400103da:	mov    ch,0xb5
   1400103dc:	cld    
   1400103dd:	adc    al,0xfe
   1400103df:	movsxd edi,DWORD PTR [rbp-0x1]
   1400103e2:	je     0x1400103ae
   1400103e4:	imul   ecx,ecx,0xfffffff3
   1400103e7:	shl    DWORD PTR [rsi-0x7dec5200],cl
   1400103ed:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400103ee:	mov    al,0x3f
   1400103f0:	std    
   1400103f1:	(bad)  
   1400103f2:	iret   
   1400103f3:	gs and al,0xde
   1400103f6:	retf   0x91fb
   1400103f9:	or     eax,DWORD PTR [rax]
   1400103fb:	(bad)  
   1400103fc:	rex.WRB xor al,0x6
   1400103ff:	movabs ds:0x6400386a0806f5a4,al
   140010408:	sub    al,0x5f
   14001040a:	and    al,0x56
   14001040c:	add    BYTE PTR [rdi+riz*8-0x16],ch
   140010410:	(bad)  
   140010411:	pop    QWORD PTR [rax-0x345f48a8]
   140010417:	and    eax,0x951c949
   14001041c:	leave  
   14001041d:	and    BYTE PTR [rdx-0x5a],al
   140010420:	adc    al,0x58
   140010422:	xchg   esi,eax
   140010423:	add    BYTE PTR [rax],0x15
   140010426:	int    0x9b
   140010428:	mov    esi,0x34a42e4b
   14001042d:	loopne 0x1400103bd
   14001042f:	scas   al,BYTE PTR es:[rdi]
   140010430:	(bad)  
   140010431:	adc    al,0xb7
   140010433:	sti    
   140010434:	add    BYTE PTR [rdx+0x79],bh
   140010437:	or     eax,0xfe7595e4
   14001043c:	add    ch,BYTE PTR [rax]
   14001043e:	fcomip st,st(4)
   140010440:	loopne 0x1400103e3
   140010442:	(bad)  
   140010443:	ficomp DWORD PTR [rdi+0x39]
   140010446:	cld    
   140010447:	push   rdi
   140010448:	ja     0x1400103e1
   14001044a:	jg     0x1b9c339cc
   140010450:	outs   dx,DWORD PTR ds:[rsi]
   140010451:	xor    al,0xdf
   140010453:	add    BYTE PTR [rsi+rax*4-0x247bb260],0x43
   14001045b:	rex
   14001045c:	rex.X
   14001045d:	rex push rcx
   14001045f:	data16 or ch,dl
   140010462:	fs xchg ecx,esp
   140010465:	js     0x1400103f0
   140010467:	jb     0x1400104da
   140010469:	cdq    
   14001046a:	in     eax,dx
   14001046b:	sub    edx,DWORD PTR [rdi+0x18]
   14001046e:	outs   dx,DWORD PTR ds:[rsi]
   14001046f:	mov    ebp,0x97a5c2c0
   140010474:	(bad)  
   140010475:	(bad)  
   140010476:	lods   eax,DWORD PTR ds:[rsi]
   140010477:	cmc    
   140010478:	xlat   BYTE PTR ds:[rbx]
   140010479:	push   rdx
   14001047a:	jg     0x14001045f
   14001047c:	loopne 0x14001040d
   14001047e:	and    BYTE PTR [rbx],0x32
   140010481:	lock push rdx
   140010483:	mov    bh,0x5f
   140010485:	and    bl,al
   140010487:	mov    ah,0xbd
   140010489:	add    BYTE PTR [rdx-0x618b7e73],dl
   14001048f:	(bad)  
   140010490:	pop    rsp
   140010491:	cmp    ebx,DWORD PTR [rsp+rax*1]
   140010494:	jrcxz  0x1400104b6
   140010496:	rex.RX xchg esp,eax
   140010498:	(bad)  
   140010499:	(bad)  
   14001049a:	and    esp,DWORD PTR [rcx+rdx*2+0x1d5c1a8]
   1400104a1:	sub    eax,0x15107a63
   1400104a6:	(bad)  
   1400104a7:	pop    rax
   1400104a8:	jl     0x140010437
   1400104aa:	push   rbp
   1400104ab:	or     BYTE PTR [rdx-0x49dd7cb3],bh
   1400104b1:	mov    dh,0xa0
   1400104b3:	in     eax,dx
   1400104b4:	fild   DWORD PTR [rbx-0x563fcb5a]
   1400104ba:	lods   eax,DWORD PTR ds:[rsi]
   1400104bb:	cmp    edx,DWORD PTR [rax]
   1400104bd:	adc    bl,BYTE PTR [rax+rcx*4-0x56f1bddd]
   1400104c4:	fnstsw WORD PTR [rax]
   1400104c6:	test   DWORD PTR [rdx],0x78508064
   1400104cc:	sbb    ch,0xcf
   1400104cf:	add    edi,edi
   1400104d1:	mov    bh,BYTE PTR [rsi]
   1400104d3:	add    ch,al
   1400104d5:	in     eax,0x75
   1400104d7:	and    eax,0x1f860b7
   1400104dc:	(bad)  
   1400104dd:	xor    eax,edi
   1400104df:	push   rdi
   1400104e0:	jmp    rdx
   1400104e2:	(bad)  
   1400104e3:	(bad)  
   1400104e4:	loope  0x1400104a5
   1400104e6:	jns    0x14001055b
   1400104e8:	cmc    
   1400104e9:	enter  0x648,0x63
   1400104ed:	pushf  
   1400104ee:	repz add al,0x8d
   1400104f1:	(bad)  
   1400104f2:	jg     0x1400104fc
   1400104f4:	or     eax,0xafcf468d
   1400104f9:	rex.WRB
   1400104fa:	shl    DWORD PTR [r12+r14*1],cl
   1400104fe:	movabs eax,ds:0x7dd30b0d340d3421
   140010507:	retf   0x63cd
   14001050a:	(bad)  
   14001050b:	rex.B cdq 
   14001050d:	pop    rsp
   14001050e:	ds (bad) 
   140010510:	(bad)  
   140010511:	(bad)  
   140010512:	sub    esp,edi
   140010514:	mov    ch,0xd8
   140010516:	repz (bad) 
   140010518:	mov    ah,0x4a
   14001051a:	cmp    bh,ah
   14001051c:	std    
   14001051d:	and    eax,0xea4b7f29
   140010522:	leave  
   140010523:	sub    DWORD PTR [rax+0x17],eax
   140010526:	xchg   ebp,eax
   140010527:	mov    bh,0xa
   140010529:	and    al,BYTE PTR [rbx]
   14001052c:	test   eax,0xb6e7afb6
   140010531:	call   QWORD PTR [rdi+rdi*8-0x7d7ff5a5]
   140010538:	(bad)  
   140010539:	add    DWORD PTR [rcx-0x7d2f0ce5],ebp
   14001053f:	rol    DWORD PTR [rax+0x451b406b],cl
   140010545:	rex.XB lods al,BYTE PTR ds:[rsi]
   140010547:	add    al,0x24
   140010549:	test   DWORD PTR [rsi],esi
   14001054b:	jbe    0x14001059c
   14001054d:	mov    dh,0x42
   14001054f:	cmp    edx,eax
   140010551:	lock imul edi,DWORD PTR [rdi+0x730ebb92],0xcf3b6292
   14001055c:	xor    eax,DWORD PTR [rcx*4+0x44649420]
   140010563:	std    
   140010564:	sub    DWORD PTR [rdi],0x3b836e70
   14001056a:	mov    esp,0x801bd01a
   14001056f:	mov    ebx,0xe6595e49
   140010574:	stos   DWORD PTR es:[rdi],eax
   140010575:	mov    cs,WORD PTR [rdi+0x1cb7d1dd]
   14001057b:	pop    rdi
   14001057c:	(bad)  
   14001057d:	cmc    
   14001057e:	popf   
   14001057f:	cmc    
   140010580:	sti    
   140010581:	jle    0x1400105ed
   140010583:	outs   dx,DWORD PTR ds:[rsi]
   140010584:	stc    
   140010585:	mov    BYTE PTR [rbx-0x50],ah
   140010588:	add    dl,ah
   14001058a:	or     BYTE PTR [rdx],dl
   14001058c:	xchg   ebp,eax
   14001058d:	test   BYTE PTR es:[rdx],bl
   140010590:	rex.X or eax,0x8ccd0d4d
   140010596:	rcl    ah,1
   140010598:	mov    eax,0x8d43e350
   14001059d:	xlat   BYTE PTR ds:[rbx]
   14001059e:	xchg   cl,dl
   1400105a0:	xchg   DWORD PTR fs:[rdx+0x38],esi
   1400105a4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400105a5:	pop    rax
   1400105a6:	fucom  st(4)
   1400105a8:	(bad)  
   1400105a9:	out    dx,al
   1400105aa:	cs (bad) 
   1400105ac:	(bad)  
   1400105ad:	imul   edx,DWORD PTR [rsi],0xf6465fb7
   1400105b3:	ja     0x14001059d
   1400105b5:	mov    dh,0xe0
   1400105b7:	(bad)  
   1400105b8:	lock lahf 
   1400105ba:	pop    rax
   1400105bb:	cmp    cl,ah
   1400105bd:	rex.WXB jle 0x140010577
   1400105c0:	cmp    dl,BYTE PTR [rbx+0x22b1ffb8]
   1400105c6:	loopne 0x1400105ae
   1400105c8:	sub    al,al
   1400105ca:	repz cmc 
   1400105cc:	jmp    FWORD PTR [rsi+0x69]
   1400105cf:	mov    cs,WORD PTR [rsi+0x62]
   1400105d2:	bndldx (bad),[rbp+rax*1-0x6ff5d2fe]
   1400105da:	mov    edx,0x30182681
   1400105df:	sbb    BYTE PTR [rdx-0x69],dh
   1400105e2:	(bad)  
   1400105e3:	add    bl,BYTE PTR [rip+0xffffffffb6c3bcdb]        # 0xf6c4c2c4
   1400105e9:	xchg   ebx,eax
   1400105ea:	rex.X adc DWORD PTR [rcx],esp
   1400105ed:	iret   
   1400105ee:	or     al,0xec
   1400105f0:	jb     0x140010603
   1400105f2:	cmp    r8b,BYTE PTR [rsi]
   1400105f5:	and    esp,0xfffffff5
   1400105f8:	movabs eax,ds:0x98fe1e10a0141a5b
   140010601:	ins    BYTE PTR es:[rdi],dx
   140010602:	mov    edi,0x700e2e93
   140010607:	(bad)  
   140010608:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010609:	add    DWORD PTR [rbp+0xa],edi
   14001060c:	jo     0x140010645
   14001060e:	enter  0xc87c,0x9f
   140010612:	cmp    eax,0xc5abe3ff
   140010617:	xchg   ebx,eax
   140010618:	ret    
   140010619:	vmaxpd ymm7,ymm15,YMMWORD PTR [rcx+0x5dfc71be]
   140010621:	(bad)  
   140010622:	xchg   edi,eax
   140010623:	mov    rbx,db0
   140010626:	xor    DWORD PTR [rbp+0x774c7114],eax
   14001062c:	or     ah,dl
   14001062e:	and    DWORD PTR [rax],esp
   140010630:	movabs eax,ds:0x2c750ca6a6bf416e
   140010639:	add    DWORD PTR [rdx],ebp
   14001063b:	xor    al,0x4e
   14001063d:	sbb    ah,cl
   14001063f:	neg    BYTE PTR [rax]
   140010641:	sbb    al,0x7b
   140010643:	and    eax,DWORD PTR [rcx]
   140010645:	(bad)  
   140010646:	out    dx,al
   140010647:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010648:	repz sbb al,0xde
   14001064b:	cmp    cl,BYTE PTR [rcx+0x79]
   14001064e:	in     eax,dx
   14001064f:	and    dh,BYTE PTR [rbx+rdx*1]
   140010652:	xor    BYTE PTR [rsi+rbx*2],dl
   140010655:	push   rsp
   140010656:	sub    DWORD PTR [rsi+rcx*1],esp
   140010659:	(bad)  
   14001065a:	lock movabs ds:0x8c4476af275ccb6d,al
   140010664:	and    BYTE PTR [rcx+0x5824bcf6],bh
   14001066a:	mov    dl,BYTE PTR [rax]
   14001066c:	and    r11b,BYTE PTR [rax+0x1401c1d7]
   140010673:	(bad)  
   140010674:	sahf   
   140010675:	scas   eax,DWORD PTR es:[rdi]
   140010676:	push   rcx
   140010677:	stc    
   140010678:	and    eax,0x2140a560
   14001067d:	add    al,0x45
   14001067f:	(bad)  
   140010680:	push   0xffffffff93319268
   140010685:	rex.RX rcl DWORD PTR [rax],1
   140010688:	movabs ds:0x8f62f2e5b07ab884,eax
   140010691:	push   rbx
   140010692:	xchg   edi,eax
   140010693:	movabs al,ds:0x52da02fac5070317
   14001069c:	gs and cl,BYTE PTR cs:[rax-0x3e]
   1400106a1:	adc    cl,al
   1400106a3:	(bad)  
   1400106a4:	ret    0x8d48
   1400106a7:	(bad)  
   1400106a8:	or     eax,0xfb28fe87
   1400106ad:	lahf   
   1400106ae:	add    al,0xfe
   1400106b0:	and    eax,0xe53b330
   1400106b5:	scas   eax,DWORD PTR es:[rdi]
   1400106b6:	jmp    0x1881c03b2
   1400106bb:	(bad)  
   1400106bc:	add    esp,ebx
   1400106be:	jmp    0xff91d1b5
   1400106c3:	add    BYTE PTR [rsi],al
   1400106c5:	outs   dx,DWORD PTR ds:[rsi]
   1400106c6:	pop    rsi
   1400106c7:	jne    0x140010668
   1400106c9:	(bad)  
   1400106ca:	lods   al,BYTE PTR ds:[rsi]
   1400106cb:	lods   al,BYTE PTR ds:[rsi]
   1400106cc:	std    
   1400106cd:	xchg   ebx,eax
   1400106ce:	stos   DWORD PTR es:[rdi],eax
   1400106cf:	fwait
   1400106d0:	(bad)  
   1400106d1:	fidiv  WORD PTR [rbp+0x6047cb7]
   1400106d7:	mov    edi,DWORD PTR [rax]
   1400106d9:	jecxz  0x140010698
   1400106dc:	rex.XB mov BYTE PTR [r13-0x2cbcaf02],sil
   1400106e3:	(bad)  
   1400106e4:	sub    BYTE PTR [rax+0x3334529e],ah
   1400106ea:	jl     0x14001071f
   1400106ec:	rex.XB (bad) 
   1400106ee:	sbb    dl,ch
   1400106f0:	sbb    BYTE PTR [rdi+0x354184e],0x8a
   1400106f7:	cmc    
   1400106f8:	movabs ds:0x89b69e2fe2eeecec,eax
   140010701:	(bad)  
   140010702:	xlat   BYTE PTR ds:[rbx]
   140010703:	push   rcx
   140010704:	lods   eax,DWORD PTR ds:[rsi]
   140010705:	xchg   r9,rax
   140010707:	mov    dl,0x23
   140010709:	mov    dh,0xfd
   14001070b:	(bad)  
   14001070c:	movabs ds:0xee5b3cb5c4d42378,al
   140010715:	jg     0x1400106b1
   140010717:	(bad)  
   140010718:	fwait
   140010719:	xor    BYTE PTR [rsi+0x3675c7ae],dh
   14001071f:	or     DWORD PTR [rax-0x32],edi
   140010722:	imul   ecx,DWORD PTR [rbx-0x59],0x18672a
   140010729:	sub    ch,BYTE PTR [rax+0x50]
   14001072c:	pop    rsp
   14001072d:	nop
   14001072e:	clc    
   14001072f:	mov    eax,0xf809a451
   140010734:	push   rax
   140010735:	jrcxz  0x1400107a1
   140010737:	sbb    r12d,DWORD PTR [r9]
   14001073a:	test   DWORD PTR [rcx],0xe483ed29
   140010740:	fldcw  WORD PTR [rcx-0x73]
   140010743:	(bad)  
   140010744:	cmp    BYTE PTR [rdi],dl
   140010746:	lea    eax,[rax-0x3bd81d7]
   14001074c:	mov    edx,0x1ded8578
   140010751:	adc    DWORD PTR [rbx],esp
   140010753:	adc    esp,DWORD PTR [rcx+0x29]
   140010756:	test   ch,al
   140010758:	add    eax,0xf73cda0b
   14001075d:	sub    ecx,ebx
   14001075f:	pop    rdx
   140010760:	movabs eax,ds:0x770037a4c3b809cb
   140010769:	stos   BYTE PTR es:[rdi],al
   14001076a:	mov    esp,0x56e547fd
   14001076f:	int3   
   140010770:	mov    esi,0xbd2c22b5
   140010775:	movsxd ebx,ebp
   140010777:	(bad)  
   140010778:	mov    ecx,0x1ff471b0
   14001077d:	pop    rbp
   14001077e:	fnstcw WORD PTR [rsi+rdi*2]
   140010781:	(bad)
   140010786:	pop    rax
   140010787:	sar    BYTE PTR [rcx+0x5410a702],0xd1
   14001078e:	rol    BYTE PTR [rax+0x33],1
   140010791:	rex.XB
   140010792:	fwait
   140010793:	sbb    DWORD PTR [rcx+0x5367e199],esp
   140010799:	jl     0x1400107d8
   14001079b:	test   ecx,ebx
   14001079d:	adc    al,0x69
   14001079f:	push   0x5c
   1400107a1:	push   0x4e19a9a0
   1400107a6:	outs   dx,BYTE PTR ds:[rsi]
   1400107a7:	push   rdx
   1400107a8:	ins    BYTE PTR es:[rdi],dx
   1400107a9:	sbb    al,0x45
   1400107ab:	jl     0x14001076e
   1400107ad:	(bad)  
   1400107ae:	(bad)  
   1400107af:	ins    DWORD PTR es:[rdi],dx
   1400107b0:	xchg   esi,eax
   1400107b1:	(bad)  
   1400107b2:	pushf  
   1400107b3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400107b4:	mov    esp,0x7d9a117a
   1400107b9:	and    BYTE PTR [rax-0x7ba146f8],dl
   1400107bf:	rex.X ret 
   1400107c1:	add    esp,esp
   1400107c3:	lahf   
   1400107c4:	mov    ecx,0x3b95eb1
   1400107c9:	rcl    dl,1
   1400107cb:	xor    ah,0x38
   1400107ce:	or     eax,0x20e4c904
   1400107d3:	sti    
   1400107d4:	cmp    edx,DWORD PTR [rcx+0x20563b7a]
   1400107da:	cli    
   1400107db:	xlat   BYTE PTR ds:[rbx]
   1400107dc:	sub    bh,BYTE PTR es:[rsi+0x5834820b]
   1400107e3:	cmp    ah,al
   1400107e5:	push   rax
   1400107e6:	jne    0x1400107b8
   1400107e8:	test   BYTE PTR [rax],bh
   1400107ea:	pop    sp
   1400107ec:	and    eax,0xb3a40bd9
   1400107f1:	sbb    BYTE PTR [rax+0x22],ah
   1400107f4:	add    al,0x25
   1400107f6:	cmp    BYTE PTR [rax],ah
   1400107f8:	xor    DWORD PTR [rdx],eax
   1400107fa:	movabs ds:0xd4c922390b114a11,eax
   140010803:	loopne 0x1400107b9
   140010805:	jg     0x1400107e1
   140010807:	sub    al,0x42
   140010809:	add    BYTE PTR [rdi],ch
   14001080b:	jp     0x140010809
   14001080d:	mov    ebx,0xee41ff39
   140010812:	loopne 0x14001087e
   140010814:	rex lahf 
   140010816:	add    bl,ah
   140010818:	mov    edx,edx
   14001081a:	sub    bh,BYTE PTR [rsi-0x75aded30]
   140010820:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010821:	stos   DWORD PTR es:[rdi],eax
   140010822:	mov    ebp,0x4bcbc727
   140010827:	mov    edi,0xfee36378
   14001082c:	rex.WRXB pop r12
   14001082e:	pop    rdi
   14001082f:	ds int3 
   140010831:	ins    BYTE PTR es:[rdi],dx
   140010832:	mov    esp,0x7110e502
   140010837:	rcr    DWORD PTR [rdi],1
   140010839:	xlat   BYTE PTR ds:[rbx]
   14001083a:	or     BYTE PTR [rbp+0xc],sil
   14001083e:	sti    
   14001083f:	fwait
   140010840:	(bad)  
   140010841:	imul   ebp,DWORD PTR [rdx-0x76],0x7e4b9a66
   140010848:	adc    dl,BYTE PTR [rdx+0x6f]
   14001084b:	cmp    eax,0x65940848
   140010850:	rex.RB mov r9d,0x937b1f71
   140010856:	or     DWORD PTR [rsi-0x15],ebp
   140010859:	je     0x14001085f
   14001085b:	push   QWORD PTR [rsi-0x1e]
   14001085e:	(bad)  
   14001085f:	lahf   
   140010860:	cwde   
   140010861:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010862:	rex.RXB iret 
   140010864:	fdivrp st(5),st
   140010866:	(bad)  
   140010867:	icebp  
   140010868:	(bad)  
   140010869:	jb     0x14001085b
   14001086b:	(bad)  
   14001086c:	mov    r14b,0x21
   14001086f:	mov    edi,0xeb6f63d
   140010874:	movabs al,ds:0x77b1b49af3a4e195
   14001087d:	add    al,0x5
   14001087f:	or     eax,0x7058bf8
   140010884:	mov    DWORD PTR [rbp-0x2],esi
   140010887:	(bad)  
   140010888:	call   0x13041f41a
   14001088d:	cs push rsi
   14001088f:	xor    dh,BYTE PTR [rdx]
   140010891:	imul   ecx,DWORD PTR [rax-0x4f6ffbb2],0xe1784e84
   14001089b:	mov    WORD PTR [rbp-0x18],es
   14001089e:	shl    BYTE PTR [rcx-0x5c],cl
   1400108a1:	pop    rsi
   1400108a2:	or     BYTE PTR [rsi+0x4],0x20
   1400108a6:	(bad)  
   1400108a7:	sub    DWORD PTR [rdx],esp
   1400108a9:	mov    esi,0x5212a8de
   1400108ae:	xor    al,0xa0
   1400108b0:	(bad)  
   1400108b1:	and    esp,DWORD PTR [rax-0x60d99e36]
   1400108b7:	add    bh,dh
   1400108b9:	test   DWORD PTR [rbp+0x7],edi
   1400108bc:	or     eax,0xd01a5877
   1400108c1:	sbb    eax,DWORD PTR [rax-0x30a5bac5]
   1400108c7:	jb     0x1400108f9
   1400108c9:	in     al,0xf7
   1400108cb:	mov    edx,edx
   1400108cd:	mov    WORD PTR [rsi+0x1abe4c1c],ds
   1400108d3:	(bad)  
   1400108d4:	ss jg  0x1400108bd
   1400108d7:	(bad)  
   1400108d8:	cli    
   1400108d9:	std    
   1400108da:	rex.RXB outs dx,DWORD PTR ds:[rsi]
   1400108dc:	sub    al,0x1e
   1400108de:	and    cl,BYTE PTR [rdi+rdx*4+0x738857c0]
   1400108e5:	xor    DWORD PTR [rcx],edi
   1400108e7:	(bad)  
   1400108e8:	fcom   DWORD PTR [rcx-0x1d]
   1400108eb:	(bad)  
   1400108ec:	sbb    ch,BYTE PTR [rbp+0x66]
   1400108ef:	cdqe   
   1400108f1:	loope  0x140010959
   1400108f3:	xor    esp,DWORD PTR [rsp+rdx*8]
   1400108f6:	xor    DWORD PTR [rdi+0x56],edi
   1400108f9:	(bad)
   1400108fc:	rcl    DWORD PTR [rsp+rax*4+0x62],1
   140010900:	mov    dh,0x4f
   140010902:	jns    0x1400108f0
   140010904:	and    esp,ebx
   140010906:	jo     0x1400108d4
   140010908:	lea    esi,[rbx+0x2f]
   14001090b:	mov    cl,0x7a
   14001090d:	icebp  
   14001090e:	add    eax,0x43cf9786
   140010913:	mov    ebp,0x45dd644b
   140010918:	rex.RB mov r9b,0xa5
   14001091b:	imul   DWORD PTR [rdi+rbp*8]
   14001091e:	xlat   BYTE PTR ds:[rbx]
   14001091f:	pop    rsp
   140010920:	(bad)  
   140010921:	rex.WXB
   140010922:	rex.RXB sbb r9b,BYTE PTR [r15]
   140010925:	mov    ah,0x83
   140010927:	(bad)  
   140010928:	shl    esi,cl
   14001092a:	clc    
   14001092b:	in     eax,dx
   14001092c:	jrcxz  0x140010944
   14001092e:	add    al,0x9c
   140010930:	(bad)  
   140010931:	sbb    esi,ebx
   140010933:	movabs ds:0x49964b175007007a,al
   14001093c:	out    0x54,eax
   14001093e:	and    cl,BYTE PTR [rdi-0x40]
   140010941:	sub    al,BYTE PTR [rdi]
   140010943:	xchg   ecx,eax
   140010944:	jle    0x1400109aa
   140010946:	mov    ebp,0x40067301
   14001094b:	or     al,0x14
   14001094d:	(bad)  
   14001094e:	sub    al,BYTE PTR [rcx]
   140010950:	sbb    eax,0x6bbb4403
   140010955:	(bad)  
   140010956:	push   rsi
   140010957:	jl     0x140010909
   140010959:	mov    ebx,DWORD PTR [rbp+0x307612aa]
   14001095f:	or     BYTE PTR [rax],dh
   140010961:	(bad)  
   140010962:	cli    
   140010963:	cmp    eax,0x1e2f2c3f
   140010968:	stc    
   140010969:	jne    0x1400109e8
   14001096b:	loopne 0x1400109b9
   14001096d:	out    0xc0,eax
   14001096f:	sar    DWORD PTR [rbx+0x1bd2f75e],cl
   140010975:	adc    bh,0xab
   140010978:	int3   
   140010979:	xchg   DWORD PTR [rdx+0x5df8f5d],edx
   14001097f:	cli    
   140010980:	mov    dh,BYTE PTR [rdi+0x1def3b96]
   140010986:	mov    es,WORD PTR [rsi-0x2908581]
   14001098c:	(bad)  
   14001098d:	jae    0x140010966
   14001098f:	push   rsi
   140010990:	mov    ?,WORD PTR [rcx+0x3346b0bf]
   140010996:	pop    rsp
   140010997:	(bad)  
   140010998:	stc    
   140010999:	xchg   edx,eax
   14001099a:	rex.X sbb al,0x41
   14001099d:	xchg   ebp,eax
   14001099e:	xchg   BYTE PTR [rax-0x2a63b2f5],al
   1400109a4:	push   rdi
   1400109a5:	iret   
   1400109a6:	sub    BYTE PTR [rdx+0x70ccd219],bl
   1400109ac:	int    0x2c
   1400109ae:	ss (bad) 
   1400109b0:	push   0xffffffffe389ae6c
   1400109b5:	mov    esi,0xe72b0ee3
   1400109ba:	sub    BYTE PTR [rsi],dh
   1400109bc:	(bad)  
   1400109bd:	mov    bl,0x3f
   1400109bf:	cdq    
   1400109c0:	rcr    BYTE PTR [rsp+rdi*1-0x3d],1
   1400109c4:	retf   0x69d6
   1400109c7:	fmul   st(5),st
   1400109c9:	imul   esi,DWORD PTR [rcx-0x19996f9e],0x29
   1400109d0:	(bad)  
   1400109d1:	(bad)  
   1400109d2:	test   eax,0xf92d901d
   1400109d7:	sbb    r9,QWORD PTR [r14+0x3b]
   1400109db:	rex.WB sub al,0xbf
   1400109de:	adc    al,BYTE PTR ss:[rax+0x665ce156]
   1400109e5:	add    al,0xd2
   1400109e7:	mov    DWORD PTR [rax],eax
   1400109e9:	in     al,dx
   1400109ea:	jge    0x1400109b5
   1400109ec:	and    BYTE PTR [rdi+rbp*4],ah
   1400109ef:	outs   dx,DWORD PTR ds:[rsi]
   1400109f0:	mov    edi,0x23338035
   1400109f5:	movabs al,ds:0x73400c268ae7d922
   1400109fe:	adc    al,0xa0
   140010a00:	enter  0xd5fc,0x4b
   140010a04:	rol    DWORD PTR [rbp-0x5659fe8b],1
   140010a0a:	ror    esi,0xb0
   140010a0d:	mov    BYTE PTR [rsi+0x22],al
   140010a10:	retf   
   140010a11:	push   rax
   140010a12:	push   rbx
   140010a13:	lods   al,BYTE PTR ds:[rsi]
   140010a14:	(bad)  
   140010a15:	rex.X mov ds,WORD PTR [rsi+0x1a]
   140010a19:	cmp    esp,DWORD PTR [rdi+0x11]
   140010a1c:	leave  
   140010a1d:	movsxd edx,edx
   140010a1f:	rex.WX loope 0x1400109e3
   140010a22:	ja     0x140010a97
   140010a24:	cmc    
   140010a25:	fnstsw WORD PTR [rdi-0x1698fc32]
   140010a2b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010a2c:	add    DWORD PTR [rdi-0x7b889407],edi
   140010a32:	adc    eax,ebp
   140010a34:	or     eax,0x6e4debc0
   140010a39:	stos   DWORD PTR es:[rdi],eax
   140010a3a:	mov    ?,WORD PTR [rbx+0x9]
   140010a3d:	add    BYTE PTR [rax],al
   140010a3f:	and    BYTE PTR [rax],al
   140010a41:	rex.WB
   140010a42:	rex.R
   140010a43:	push   r12
   140010a45:	in     eax,dx
   140010a46:	jmp    0x140f09506
   140010a4b:	push   QWORD PTR [rsi+0x47bbc6e2]
   140010a51:	push   rbp
   140010a52:	icebp  
   140010a53:	xor    DWORD PTR [rbx-0x45a03c1b],0xffffffbe
   140010a5a:	jp     0x140010a04
   140010a5c:	mov    edx,0x64c9b8b1
   140010a61:	mov    ah,0x82
   140010a63:	push   rsp
   140010a64:	and    ebx,DWORD PTR [rdi+rbp*1+0x8bd44f0]
   140010a6b:	sbb    al,BYTE PTR [rax+0x1b]
   140010a6e:	rex.X cmp eax,0xaf834243
   140010a74:	(bad)  
   140010a75:	cmp    BYTE PTR [rbx-0x14],bh
   140010a78:	rex.X or DWORD PTR [rbx],0xffffffb5
   140010a7c:	xchg   ecx,eax
   140010a7d:	push   0xffffffffca13af92
   140010a82:	fld    DWORD PTR [rdi+rsi*2]
   140010a85:	in     al,0x41
   140010a87:	cld    
   140010a88:	loop   0x140010a9c
   140010a8a:	push   rdi
   140010a8b:	mov    dh,0x2e
   140010a8d:	mov    al,0x7c
   140010a8f:	icebp  
   140010a90:	add    eax,0x22ce9786
   140010a95:	rcr    DWORD PTR [rbx+0x26dec128],cl
   140010a9b:	cmp    BYTE PTR [rdx+rax*1-0x4940454f],dl
   140010aa2:	mov    eax,esi
   140010aa4:	pushf  
   140010aa5:	(bad)  
   140010aa6:	outs   dx,DWORD PTR ds:[rsi]
   140010aa7:	jge    0x140010aa2
   140010aa9:	pushf  
   140010aaa:	xchg   edx,eax
   140010aab:	(bad)  
   140010aac:	cmp    al,0xc0
   140010aae:	cmp    ebx,eax
   140010ab0:	(bad)  
   140010ab1:	fiadd  DWORD PTR [rsi+0x1c]
   140010ab4:	sar    BYTE PTR [rdx+0x0],0x4c
   140010ab8:	jmp    0xf99b0192
   140010abd:	add    BYTE PTR [rcx+0x681ae02a],dh
   140010ac3:	(bad)  
   140010ac4:	sar    BYTE PTR [rbx+rcx*2],0x17
   140010ac8:	jl     0x140010ada
   140010aca:	rex.WXB add rax,0xffffffff972406c8
   140010ad0:	lock jae 0x140010a9b
   140010ad3:	adc    DWORD PTR [rbx+0x7d],eax
   140010ad6:	adc    eax,0xe5c05c41
   140010adb:	(bad)
   140010ade:	loopne 0x140010af7
   140010ae0:	xor    dl,BYTE PTR [rbx-0x13405f28]
   140010ae6:	shl    BYTE PTR [rip+0xffffffff9e421f21],cl        # 0xde432a0d
   140010aec:	adc    esi,DWORD PTR [rax-0x68]
   140010aef:	leave  
   140010af0:	(bad)  
   140010af1:	mov    eax,0xde80d343
   140010af6:	add    BYTE PTR [rsi+rbx*1-0xb56a1c],bh
   140010afd:	or     al,BYTE PTR [rbp-0x41464781]
   140010b03:	mov    dl,0xc9
   140010b05:	in     al,0xd1
   140010b07:	retf   0x77eb
   140010b0a:	xor    BYTE PTR [rsi-0x8],bl
   140010b0d:	js     0x140010ac2
   140010b0f:	mov    eax,0xd2ceecf1
   140010b14:	(bad)  
   140010b15:	js     0x140010b7e
   140010b17:	(bad)  
   140010b18:	(bad)  
   140010b19:	std    
   140010b1a:	ror    DWORD PTR [rdx],1
   140010b1c:	mov    bl,0xd1
   140010b1e:	adc    dl,BYTE PTR [rdx+0x54]
   140010b21:	loopne 0x140010b2d
   140010b23:	or     edi,ecx
   140010b25:	movabs ds:0x299a46a6d0684be2,eax
   140010b2e:	mov    esi,0x37df9e8e
   140010b33:	or     eax,0x7116612
   140010b38:	mov    al,0xf0
   140010b3a:	pop    rdi
   140010b3b:	mov    ah,ch
   140010b3d:	mov    ebp,0x4f3bc146
   140010b42:	jne    0x140010b28
   140010b44:	add    DWORD PTR [rsi-0x3a26654d],esp
   140010b4a:	xor    ebp,DWORD PTR [rsi+rbx*2-0x1c80fe88]
   140010b51:	xor    bl,dl
   140010b53:	int3   
   140010b54:	mov    ch,ch
   140010b56:	jbe    0x140010b49
   140010b58:	jo     0x140010bd7
   140010b5a:	retf   0x21fd
   140010b5d:	xlat   BYTE PTR ds:[rbx]
   140010b5e:	(bad)  
   140010b5f:	rcr    esp,cl
   140010b61:	jg     0x140010b14
   140010b63:	jl     0x140010b3e
   140010b65:	rol    DWORD PTR [rdx+0x7e79f37c],1
   140010b6b:	rol    BYTE PTR [rdi-0x13],cl
   140010b6e:	nop
   140010b6f:	(bad)  
   140010b70:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010b71:	xor    eax,0xd2c6d200
   140010b76:	shl    DWORD PTR [rbx-0x32cfefb9],1
   140010b7c:	add    eax,0x609489a0
   140010b81:	xlat   BYTE PTR ds:[rbx]
   140010b82:	(bad)  
   140010b83:	movabs ds:0xf8d1a8380d224cb,eax
   140010b8c:	mov    eax,DWORD PTR [rax]
   140010b8e:	sub    BYTE PTR [rdi+0x70],0x75
   140010b92:	and    esp,DWORD PTR [rip+0xffffffff81533a58]        # 0xc15445f0
   140010b98:	shl    BYTE PTR [rcx+0x77],cl
   140010b9b:	and    edx,DWORD PTR [rax+rcx*1+0x58fa677]
   140010ba2:	retf   
   140010ba3:	(bad)  
   140010ba4:	nop
   140010ba5:	fs add al,0x94
   140010ba8:	xchg   ecx,eax
   140010ba9:	(bad)  
   140010baa:	(bad)  
   140010bab:	cli    
   140010bac:	xchg   edx,eax
   140010bad:	pushf  
   140010bae:	(bad)  
   140010bb0:	or     eax,0xb3ae763d
   140010bb5:	xchg   DWORD PTR [rsi],edi
   140010bb7:	add    ch,al
   140010bb9:	in     eax,0x5b
   140010bbb:	nop
   140010bbc:	jns    0x140010bfe
   140010bbe:	scas   eax,DWORD PTR es:[rdi]
   140010bbf:	sbb    ebx,esi
   140010bc1:	sti    
   140010bc2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010bc3:	addr32 (bad) 
   140010bc5:	rex.WRXB lods al,BYTE PTR ds:[rsi]
   140010bc7:	xor    DWORD PTR [rbp-0x32],edi
   140010bca:	movabs ds:0x785e337b78a295ef,eax
   140010bd3:	je     0x140010b87
   140010bd5:	mov    eax,0xd69776ee
   140010bda:	fstp   DWORD PTR [rdi+0x58]
   140010bdd:	gs jg  0x140010b98
   140010be0:	(bad)  
   140010be1:	ins    BYTE PTR es:[rdi],dx
   140010be2:	mov    eax,0x78472844
   140010be7:	pop    rdi
   140010be8:	loop   0x140010c0f
   140010bea:	mov    dh,0xdc
   140010bec:	add    al,0x2
   140010bee:	(bad)  
   140010bf0:	hlt    
   140010bf1:	sti    
   140010bf2:	jp     0x140010b76
   140010bf4:	fwait
   140010bf5:	rex.WRB movabs ds:0xfaf626d39f32b7c7,al
   140010bff:	xchg   ebx,eax
   140010c00:	cli    
   140010c01:	jmp    0x140010c66
   140010c03:	add    esp,ebx
   140010c05:	(bad)  
   140010c06:	xor    eax,0xf8c3f0e1
   140010c0b:	in     eax,0x35
   140010c0d:	outs   dx,DWORD PTR cs:[rsi]
   140010c0f:	outs   dx,DWORD PTR ds:[rsi]
   140010c10:	mov    bl,0x70
   140010c12:	icebp  
   140010c13:	adc    al,0xe3
   140010c15:	rex.WXB out 0x90,eax
   140010c18:	leave  
   140010c19:	pop    rsi
   140010c1a:	hlt    
   140010c1b:	(bad)  
   140010c1c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010c1d:	rex.WR movabs ds:0x30b7c618d0afd3b1,al
   140010c27:	js     0x140010c74
   140010c29:	in     eax,0xcd
   140010c2b:	jp     0x140010c04
   140010c2d:	repnz test DWORD PTR [rdx],edi
   140010c30:	retf   0xc9df
   140010c33:	sti    
   140010c34:	push   rbx
   140010c35:	test   eax,0xbd77c4d0
   140010c3a:	mov    ch,0x49
   140010c3c:	retf   0x63bf
   140010c3f:	mov    bl,0x8f
   140010c41:	fs push rax
   140010c43:	push   rax
   140010c44:	test   BYTE PTR [rax+0x18],ch
   140010c47:	push   rax
   140010c48:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010c49:	push   rbx
   140010c4a:	(bad)  
   140010c4b:	mov    esi,ds
   140010c4d:	mov    ecx,0xad2ae1f5
   140010c52:	sbb    eax,0x29d2bb50
   140010c57:	or     al,al
   140010c59:	xchg   DWORD PTR [rsp+rax*1-0x3c],ebp
   140010c5d:	(bad)
   140010c60:	out    dx,al
   140010c61:	rex.WRX movabs ds:0xb52517749296092d,rax
   140010c6b:	ja     0x140010c75
   140010c6d:	push   rax
   140010c6e:	movabs al,ds:0x1c1bf83e17ae3f47
   140010c77:	sti    
   140010c78:	or     eax,0xa034b0ee
   140010c7d:	(bad)  
   140010c7e:	add    BYTE PTR [rdi-0x75291b5],dh
   140010c84:	(bad)
   140010c87:	xchg   BYTE PTR [rdi+0x18efddf8],cl
   140010c8d:	int    0xf6
   140010c8f:	mov    esi,0x61fa57df
   140010c94:	lods   eax,DWORD PTR ds:[rsi]
   140010c95:	(bad)  
   140010c96:	out    dx,eax
   140010c97:	fwait
   140010c98:	(bad)  
   140010c99:	(bad)  
   140010c9a:	cwde   
   140010c9b:	lea    edx,[rdi-0x4f50e027]
   140010ca1:	cmp    ebx,DWORD PTR [rdx+0x66]
   140010ca4:	xor    bl,BYTE PTR [rdx-0x5a]
   140010ca7:	(bad)  
   140010ca8:	mov    WORD PTR [rcx],cs
   140010caa:	in     eax,0x10
   140010cac:	out    0x7,eax
   140010cae:	js     0x140010c9f
   140010cb0:	jrcxz  0x140010cff
   140010cb2:	scas   al,BYTE PTR es:[rdi]
   140010cb3:	add    DWORD PTR [rsi+0x2d],0x5c1a6fd7
   140010cba:	cwde   
   140010cbb:	loope  0x140010ca8
   140010cbd:	sub    DWORD PTR [rdx],esi
   140010cbf:	fwait
   140010cc0:	(bad)  
   140010cc1:	pop    rdx
   140010cc2:	jns    0x140010c6c
   140010cc4:	jae    0x140010cbe
   140010cc6:	pop    rdi
   140010cc7:	pop    rax
   140010cc8:	fld    TBYTE PTR [rdi+0x439ecb68]
   140010cce:	add    eax,ecx
   140010cd0:	adc    eax,0x601e4794
   140010cd5:	push   rsi
   140010cd6:	(bad)  
   140010cd7:	(bad)  
   140010cd8:	xchg   edi,eax
   140010cd9:	(bad)  
   140010cda:	jb     0x140010cc8
   140010cdc:	ret    0x8a49
   140010cdf:	jmp    0x140010cbc
   140010ce1:	movabs al,ds:0x4a042b739b1a18d3
   140010cea:	adc    eax,0xfd4b470a
   140010cef:	adc    eax,0x451d1872
   140010cf4:	out    0xf0,al
   140010cf6:	xor    ah,0x74
   140010cf9:	(bad)  
   140010cfa:	add    BYTE PTR [rsi-0x74],ah
   140010cfd:	out    0x1f,al
   140010d00:	ja     0x140010c97
   140010d02:	push   rbp
   140010d03:	xor    BYTE PTR [rbp-0x4a],ah
   140010d06:	sar    BYTE PTR [rsi],1
   140010d08:	xchg   edx,eax
   140010d09:	jl     0x140010cd3
   140010d0b:	mov    bl,0x1
   140010d0d:	and    bh,bh
   140010d0f:	fild   WORD PTR [rsi-0x74]
   140010d12:	sbb    BYTE PTR [rbx+0x30],dl
   140010d15:	xchg   edx,eax
   140010d16:	adc    DWORD PTR [rdx],0x81022021
   140010d1c:	jmp    0x19001ff21
   140010d21:	(bad)  
   140010d22:	cdq    
   140010d23:	sbb    BYTE PTR [rcx+riz*8-0x41],ah
   140010d27:	retf   
   140010d28:	out    0x80,eax
   140010d2a:	sbb    eax,0x581de447
   140010d2f:	push   rdi
   140010d30:	xor    cl,BYTE PTR [rsi]
   140010d32:	and    DWORD PTR [rax-0x63],ebx
   140010d35:	rex.R rcr spl,cl
   140010d38:	mov    cl,0xf8
   140010d3a:	mov    edi,0xb9ecc43b
   140010d3f:	mov    cl,0x36
   140010d41:	(bad)  
   140010d42:	jl     0x140010d5b
   140010d44:	jg     0x140010d8d
   140010d46:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010d47:	add    DWORD PTR [rbp-0x348907ff],edi
   140010d4d:	jl     0x140010d07
   140010d4f:	lahf   
   140010d50:	mov    ebp,0x79bc503d
   140010d55:	mov    ebp,0x3d42f4fc
   140010d5a:	sti    
   140010d5b:	xor    DWORD PTR [rdi],esp
   140010d5d:	movabs ds:0xccc60fec8ac5348f,eax
   140010d66:	(bad)  
   140010d67:	movsxd esp,DWORD PTR [rsi+0x60c998d5]
   140010d6d:	int3   
   140010d6e:	je     0x140010d20
   140010d70:	cmp    rax,0x729a45c
   140010d76:	js     0x140010dcf
   140010d78:	loopne 0x140010df6
   140010d7a:	add    edx,esp
   140010d7c:	(bad)  
   140010d7d:	fldcw  WORD PTR [rax+rbp*1]
   140010d80:	mov    ch,0x2a
   140010d82:	test   BYTE PTR [rdx],bh
   140010d84:	adc    bh,BYTE PTR [rcx-0x16]
   140010d87:	test   al,0xfc
   140010d89:	scas   al,BYTE PTR es:[rdi]
   140010d8a:	sahf   
   140010d8b:	loop   0x140010dcf
   140010d8d:	add    al,0xfc
   140010d8f:	jl     0x140010da4
   140010d91:	jae    0x140010d91
   140010d93:	and    dl,ah
   140010d95:	(bad)  
   140010d96:	neg    DWORD PTR [rdi-0x47c9c06c]
   140010d9c:	push   0xffffffffc7eb09a8
   140010da1:	sbb    DWORD PTR [rsi],ebp
   140010da3:	scas   eax,DWORD PTR es:[rdi]
   140010da4:	mov    bl,0x7d
   140010da6:	in     eax,dx
   140010da7:	sub    cl,BYTE PTR [rbx]
   140010da9:	pop    rbx
   140010daa:	pop    rdi
   140010dab:	addr32 icebp 
   140010dad:	loop   0x140010dfa
   140010daf:	enter  0x4ede,0x5e
   140010db3:	in     al,dx
   140010db4:	and    esi,DWORD PTR [rcx]
   140010db6:	in     al,0xd2
   140010db8:	pop    rdx
   140010db9:	jg     0x140010dd4
   140010dbb:	cld    
   140010dbc:	retf   
   140010dbd:	retf   0xce3
   140010dc0:	rex.WB (bad) 
   140010dc2:	and    eax,0xefabc4be
   140010dc7:	and    ch,ch
   140010dc9:	faddp  st(5),st
   140010dcb:	xchg   esi,eax
   140010dcc:	fild   WORD PTR [rdx+rax*2-0x77]
   140010dd0:	sahf   
   140010dd1:	push   rdi
   140010dd2:	repz (bad) 
   140010dd4:	rex.WB jmp 0xc830b6ad
   140010dda:	(bad)  
   140010ddb:	xor    eax,0x22443428
   140010de0:	push   rax
   140010de1:	push   rax
   140010de2:	rex.X movsxd eax,esi
   140010de5:	ret    
   140010de6:	(bad)  
   140010de7:	jno    0x140010df0
   140010de9:	push   0x64
   140010deb:	movabs al,ds:0xd68deb4b45113a10
   140010df4:	test   al,0x6d
   140010df6:	out    dx,al
   140010df7:	leave  
   140010df8:	add    BYTE PTR [rax-0x4763fdab],ah
   140010dfe:	js     0x140010e1c
   140010e00:	(bad)  
   140010e01:	jne    0x140010e1b
   140010e03:	fcmovb st,st(1)
   140010e05:	pop    rcx
   140010e06:	clc    
   140010e07:	adc    DWORD PTR [rbp+0x5f],ecx
   140010e0a:	data16 sub BYTE PTR [rax+riz*1+0x10],ah
   140010e0f:	(bad)  
   140010e10:	rex.W
   140010e11:	repz mov esi,0x87cbc8af
   140010e17:	out    dx,eax
   140010e18:	mov    ah,0x6a
   140010e1a:	rex outs dx,DWORD PTR ds:[rsi]
   140010e1c:	add    BYTE PTR [rsi-0x50b50d63],bh
   140010e22:	pop    rdi
   140010e23:	add    ch,al
   140010e25:	icebp  
   140010e26:	xchg   DWORD PTR [rdi-0x44],ecx
   140010e29:	jge    0x140010e80
   140010e2b:	data16 jg 0x140010e74
   140010e2e:	xor    al,0x7c
   140010e30:	(bad)  
   140010e31:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010e32:	fld    TBYTE PTR [rax]
   140010e34:	push   0x5f
   140010e36:	push   rcx
   140010e37:	(bad)  
   140010e38:	add    esp,DWORD PTR [rsi+0x55]
   140010e3b:	rex.RB jrcxz 0x140010e45
   140010e3e:	int3   
   140010e3f:	stos   BYTE PTR es:[rdi],al
   140010e40:	adc    DWORD PTR [rcx+0x4031411a],esp
   140010e46:	mov    dl,BYTE PTR [rdx]
   140010e48:	(bad)  
   140010e49:	jno    0x140010dd4
   140010e4b:	out    dx,al
   140010e4c:	mov    eax,0x4da28e22
   140010e51:	mov    bpl,0xb6
   140010e54:	or     DWORD PTR [rsi],edi
   140010e56:	rcr    DWORD PTR [rax-0x7d93019],cl
   140010e5c:	mov    edx,0xae1987c6
   140010e61:	mov    fs,ecx
   140010e63:	mov    edi,0xad0a6a6f
   140010e68:	jno    0x140010e8b
   140010e6a:	cwde   
   140010e6b:	repnz rex.RXB (bad) 
   140010e6e:	in     eax,0x0
   140010e70:	(bad)  
   140010e71:	shr    BYTE PTR [rax+rbx*1+0x423ff720],0xd
   140010e79:	int3   
   140010e7a:	cs popf 
   140010e7c:	in     eax,0xc8
   140010e7e:	test   DWORD PTR [rdi],edx
   140010e80:	lock xlat BYTE PTR ds:[rbx]
   140010e82:	(bad)  
   140010e83:	movabs eax,ds:0xdcdfe04b06174261
   140010e8c:	enter  0x316f,0x87
   140010e90:	(bad)  
   140010e91:	ret    0x7b7b
   140010e94:	ja     0x140010e4d
   140010e96:	in     eax,dx
   140010e97:	(bad)  
   140010e98:	jns    0x140010e93
   140010e9a:	clc    
   140010e9b:	cmp    al,0xb1
   140010e9d:	(bad)  
   140010e9e:	out    dx,eax
   140010e9f:	and    eax,0x865ce33b
   140010ea4:	movabs ds:0x773e64b5b7b2168d,eax
   140010ead:	stc    
   140010eae:	sub    DWORD PTR [rcx+0x22e22022],edi
   140010eb4:	push   0x1f
   140010eb6:	mov    al,0xf4
   140010eb8:	loopne 0x140010efa
   140010eba:	repnz (bad) 
   140010ebc:	(bad)  
   140010ebd:	mov    bh,0xdb
   140010ebf:	jae    0x140010ef7
   140010ec1:	(bad)  
   140010ec2:	rcl    BYTE PTR [rdx-0x73],0x8
   140010ec6:	and    eax,DWORD PTR [rsp+rbx*1+0x30d91805]
   140010ecd:	rdpmc  
   140010ecf:	lea    eax,[rbp+0x8]
   140010ed2:	sub    esi,DWORD PTR [rcx]
   140010ed4:	or     ch,cl
   140010ed6:	lahf   
   140010ed7:	int3   
   140010ed8:	(bad)  
   140010ed9:	sub    cl,ah
   140010edb:	(bad)  
   140010edc:	mov    ebx,0x3bcefab8
   140010ee1:	lods   eax,DWORD PTR ds:[rsi]
   140010ee2:	sbb    dl,al
   140010ee4:	sbb    eax,DWORD PTR [rax-0x7d236891]
   140010eea:	mov    dl,0x5b
   140010eec:	cs scas eax,DWORD PTR es:[rdi]
   140010eee:	(bad)  
   140010eef:	xlat   BYTE PTR ds:[rbx]
   140010ef0:	(bad)  
   140010ef1:	jnp    0x140010ee7
   140010ef3:	mov    edi,0xe3fea170
   140010ef8:	xlat   BYTE PTR ds:[rbx]
   140010ef9:	rcl    DWORD PTR [rip+0xffffffff97da9e71],1        # 0xd7dbad70
   140010eff:	add    al,0x5f
   140010f01:	adc    cl,BYTE PTR [rdx+0x704a2d12]
   140010f07:	and    eax,0x57389452
   140010f0c:	and    BYTE PTR [rsi],ch
   140010f0e:	ss icebp 
   140010f10:	sub    BYTE PTR [rsi-0x489a4e60],cl
   140010f16:	ins    DWORD PTR es:[rdi],dx
   140010f17:	out    0x89,al
   140010f19:	retf   0x67ef
   140010f1c:	adc    edi,DWORD PTR [rbp+rdx*4-0x3ccca308]
   140010f23:	(bad)  
   140010f24:	push   rbx
   140010f25:	or     dh,bl
   140010f27:	cli    
   140010f28:	mov    esi,0x87f9ab1
   140010f2d:	(bad)  
   140010f2e:	rex.WRX
   140010f2f:	rex.RXB in al,0x5f
   140010f32:	nop
   140010f33:	sbb    BYTE PTR [rip+0xffffffffb4609c6c],dh        # 0xf461aba5
   140010f39:	jp     0x140010ec3
   140010f3b:	imul   edx,DWORD PTR [rdi-0x51],0x30
   140010f3f:	fidivr WORD PTR [rdx]
   140010f41:	leave  
   140010f42:	ret    0x4bf6
   140010f45:	enter  0xdde,0xa0
   140010f49:	mov    cl,0xe5
   140010f4b:	mov    dl,0xec
   140010f4d:	data16 (bad) 
   140010f4f:	movabs eax,ds:0x464ff79b3618d14
   140010f58:	push   rdx
   140010f59:	sar    DWORD PTR [rbx*4-0x6c02f198],1
   140010f60:	xchg   ecx,eax
   140010f61:	jo     0x140010f6c
   140010f63:	add    edx,eax
   140010f65:	mov    WORD PTR [rbx],ss
   140010f67:	je     0x140010f42
   140010f69:	sbb    BYTE PTR [rip+0xffffffffa3a75ee2],0x4f        # 0xe3a86e52
   140010f70:	out    0x15,al
   140010f72:	add    BYTE PTR ds:[rax],r14b
   140010f76:	test   BYTE PTR [rax],al
   140010f78:	rex.WRB fdivr QWORD PTR [r8-0x7d3a76c8]
   140010f7f:	pop    rsp
   140010f80:	cmp    DWORD PTR [rax-0x22],esp
   140010f83:	(bad)  
   140010f84:	fidiv  DWORD PTR [rsi]
   140010f86:	popf   
   140010f87:	rex.W int3 
   140010f89:	jmp    0x140010fa8
   140010f8b:	and    al,0x7a
   140010f8d:	mov    al,0x78
   140010f8f:	loop   0x140010f33
   140010f91:	movabs eax,ds:0x8b089e3e426ea3b5
   140010f9a:	push   0xffffffffaa53ffce
   140010f9f:	adc    al,0x37
   140010fa1:	sbb    edi,DWORD PTR [rbx]
   140010fa3:	add    eax,0x423e6a43
   140010fa8:	cmp    DWORD PTR [rdx-0xfd306d],esp
   140010fae:	or     esi,DWORD PTR [rdi+0x50]
   140010fb1:	xor    eax,0xdf0037a0
   140010fb6:	(bad)  
   140010fb7:	jns    0x140010fde
   140010fb9:	gs mov bh,0xd8
   140010fbc:	jl     0x140010fb4
   140010fbe:	and    ecx,DWORD PTR [rdi-0x407a7a45]
   140010fc4:	mov    gs,eax
   140010fc6:	(bad)  
   140010fc7:	ins    BYTE PTR es:[rdi],dx
   140010fc8:	movabs ds:0xf2c69585a8f911e,al
   140010fd1:	enter  0xc443,0xb5
   140010fd5:	popf   
   140010fd6:	mov    DWORD PTR es:[rbx+rdx*1+0x13509a1a],esi
   140010fde:	(bad)  
   140010fdf:	sbb    ch,BYTE PTR [rcx+0x66]
   140010fe2:	cmp    rax,0xfffffffff827a8a5
   140010fe8:	jp     0x140010f70
   140010fea:	imul   esp,DWORD PTR [rsi-0x85d948],0xffffffa2
   140010ff1:	mov    DWORD PTR [rdi],edi
   140010ff3:	mov    cl,0xe4
   140010ff5:	(bad)  
   140010ff6:	sti    
   140010ff7:	(bad)  
   140010ff8:	jae    0x140010fe7
   140010ffa:	fbld   TBYTE PTR [rdx]
   140010ffc:	add    BYTE PTR [rbp+0x45],dl
   140010fff:	(bad)
   140011002:	cmp    eax,0x7f60134c
   140011007:	sti    
   140011008:	sub    al,0xc7
   14001100a:	(bad)  
   14001100b:	pushf  
   14001100c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001100d:	mov    esp,0x3f4d6dba
   140011012:	xchg   esi,eax
   140011013:	and    bl,BYTE PTR [rax-0x27]
   140011016:	stos   DWORD PTR es:[rdi],eax
   140011017:	add    BYTE PTR [rdx+rbp*4-0x759701cb],bh
   14001101e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001101f:	pop    rbx
   140011020:	rex (bad) 
   140011022:	(bad)  
   140011023:	fld    QWORD PTR [rsi-0xc5959c5]
   140011029:	mov    WORD PTR [rax-0x2e],es
   14001102c:	or     ebx,DWORD PTR [rip+0x2fd340dc]        # 0x16fd4510e
   140011032:	int    0xf4
   140011034:	(bad)  
   140011035:	lods   al,BYTE PTR ds:[rsi]
   140011036:	lods   al,BYTE PTR ds:[rsi]
   140011037:	xchg   edi,eax
   140011038:	xlat   BYTE PTR ds:[rbx]
   140011039:	or     BYTE PTR [rcx-0x1b7cb20b],cl
   14001103f:	jrcxz  0x140011024
   140011041:	(bad)  
   140011042:	rcr    BYTE PTR [rbp+0xc],0x4
   140011046:	sar    BYTE PTR [rdx-0x618d1bff],cl
   14001104c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001104d:	sub    eax,0xffffff8a
   140011050:	rex.WRB add rax,0x54f21756
   140011056:	movabs al,ds:0xf2dcd0cf0c08bd34
   14001105f:	xchg   esp,eax
   140011060:	lea    edx,[rsi-0x42]
   140011063:	adc    cl,dh
   140011065:	rex.WRB shl QWORD PTR [r8],1
   140011068:	mov    BYTE PTR [rax],dh
   14001106a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001106b:	jns    0x14001105c
   14001106d:	(bad)  
   14001106e:	cmc    
   14001106f:	fadd   st(6),st
   140011071:	(bad)  
   140011072:	in     eax,0xce
   140011074:	test   eax,0xe006f406
   140011079:	mov    ch,0x96
   14001107b:	stc    
   14001107c:	xchg   ecx,eax
   14001107d:	pop    rsp
   14001107e:	(bad)  
   14001107f:	sub    BYTE PTR [rdi],bl
   140011081:	std    
   140011082:	hlt    
   140011083:	(bad)  
   140011084:	(bad)  
   140011085:	fimul  DWORD PTR [rdi+rdx*4]
   140011088:	jle    0x1400110af
   14001108a:	test   al,0x9e
   14001108c:	push   rax
   14001108d:	mov    ebx,0x896f9281
   140011092:	xchg   ebx,eax
   140011093:	addr32 pop rdx
   140011095:	gs xor bh,al
   140011098:	(bad)  
   140011099:	sub    BYTE PTR [rdx],bl
   14001109b:	data16 icebp 
   14001109d:	or     si,WORD PTR [rbp-0xc]
   1400110a1:	cld    
   1400110a2:	int    0x14
   1400110a4:	test   eax,0xa13d4867
   1400110a9:	cwde   
   1400110aa:	vmovq  xmm2,QWORD PTR [rcx]
   1400110ae:	(bad)  
   1400110af:	leave  
   1400110b0:	scas   eax,DWORD PTR es:[rdi]
   1400110b1:	push   0xffffffffc3308a6a
   1400110b6:	xlat   BYTE PTR ds:[rbx]
   1400110b7:	xor    edi,DWORD PTR [rbp+rcx*1+0x6b14f8]
   1400110be:	adc    cl,BYTE PTR [rip+0x6edb5a36]        # 0x1aedc6afa
   1400110c4:	hlt    
   1400110c5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400110c6:	out    0xfe,ax
   1400110c9:	(bad)  
   1400110ca:	sbb    BYTE PTR [rdi+rbx*1+0x35cefae3],ch
   1400110d1:	rex.RX (bad) [rdi+0x197ed859]
   1400110d8:	mov    bh,0x77
   1400110da:	add    edx,ebp
   1400110dc:	es sbb eax,0xf6da220a
   1400110e2:	cld    
   1400110e3:	rex.WXB and dil,r12b
   1400110e6:	mov    ah,0x9e
   1400110e8:	ficom  WORD PTR [rax-0x7998fbbc]
   1400110ee:	sar    BYTE PTR [rax],0x80
   1400110f1:	popf   
   1400110f2:	and    DWORD PTR [rdi],ebx
   1400110f4:	pop    rbp
   1400110f5:	and    edx,DWORD PTR [rcx-0x6288fb6a]
   1400110fb:	out    0x5d,eax
   1400110fd:	retf   0x7007
   140011100:	xchg   esi,eax
   140011101:	pop    rsi
   140011102:	mov    edx,DWORD PTR [eax]
   140011105:	jg     0x1400110e0
   140011107:	add    ah,BYTE PTR [rcx]
   140011109:	fsubr  DWORD PTR [rdx]
   14001110b:	sbb    dl,BYTE PTR [r10-0x5]
   14001110f:	scas   eax,DWORD PTR es:[rdi]
   140011110:	mov    ebp,0x54067a9e
   140011115:	fcmovb st,st(5)
   140011117:	and    edx,0xb
   14001111a:	icebp  
   14001111b:	add    BYTE PTR [rip+0xffffffff98451d32],ah        # 0xd8462e53
   140011121:	outs   dx,DWORD PTR ds:[rsi]
   140011122:	adc    DWORD PTR [rsi-0x2f],ecx
   140011125:	mov    BYTE PTR [rax+rax*2],ah
   140011128:	mov    al,0x33
   14001112a:	rex.WRB movabs r8,0xd9b38a0a0c92c3a3
   140011134:	add    eax,0x3d502239
   140011139:	test   BYTE PTR [rcx],0xb9
   14001113c:	clc    
   14001113d:	(bad)  
   14001113e:	jg     0x1400110ea
   140011140:	(bad)  
   140011141:	(bad)  
   140011142:	sbb    DWORD PTR [rdi+0x48],esi
   140011145:	sbb    dl,al
   140011147:	sbb    eax,DWORD PTR [rax-0x6e25ad29]
   14001114d:	pop    rsp
   14001114e:	mov    ecx,0x2f99e759
   140011153:	jl     0x14001114a
   140011155:	retf   
   140011156:	jle    0x140011114
   140011158:	hlt    
   140011159:	fild   QWORD PTR [rax+0x3910b2c8]
   14001115f:	out    0x9a,al
   140011161:	adc    eax,0x6bb1d63d
   140011166:	or     esi,DWORD PTR [rdi]
   140011168:	fwait
   140011169:	movabs al,ds:0x3423ac38d501a1d4
   140011172:	xor    rax,QWORD PTR [rbx+0x13]
   140011176:	popf   
   140011177:	mov    bh,0x9e
   140011179:	loope  0x1400111e1
   14001117b:	sti    
   14001117c:	(bad)  
   14001117d:	neg    BYTE PTR [rbx-0x12]
   140011180:	lahf   
   140011181:	cmp    eax,0x8d614d7f
   140011186:	cmp    eax,0xf2add4d2
   14001118b:	xchg   DWORD PTR [rsi],esp
   14001118d:	scas   eax,DWORD PTR es:[rdi]
   14001118e:	clc    
   14001118f:	xchg   ebx,eax
   140011190:	push   0x66
   140011192:	lea    ebp,[rbx]
   140011194:	xchg   ecx,eax
   140011195:	sti    
   140011196:	(bad)  
   140011197:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011198:	adc    edi,eax
   14001119a:	fisub  WORD PTR [rbp+0x3adf1c73]
   1400111a0:	rex.WB jns 0x140011208
   1400111a3:	or     ebp,edx
   1400111a5:	jge    0x140011139
   1400111a7:	or     ecx,DWORD PTR [rbp+0x40]
   1400111aa:	(bad)  
   1400111ab:	sub    DWORD PTR [rsi-0x5],eax
   1400111ae:	adc    eax,0x7fccd228
   1400111b3:	ficomp DWORD PTR [rdi+rdi*1-0x32]
   1400111b7:	repz imul edx,DWORD PTR [rip+0x24028da7],0xffffff87        # 0x164039f66
   1400111bf:	loope  0x14001122a
   1400111c1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400111c2:	sbb    eax,0x4ce617b3
   1400111c7:	push   rbx
   1400111c8:	adc    al,0x60
   1400111ca:	(bad)  
   1400111cb:	sbb    cl,BYTE PTR [rip+0xfffffffff6fcf649]        # 0x136fe081a
   1400111d1:	fimul  WORD PTR [rax]
   1400111d3:	(bad)  
   1400111d4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400111d5:	inc    BYTE PTR [rax+0x37c7ee14]
   1400111db:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400111dc:	or     BYTE PTR ds:[rax+0x7],0x4e
   1400111e1:	stos   DWORD PTR es:[rdi],eax
   1400111e2:	(bad)  
   1400111e3:	sub    ebp,ebp
   1400111e5:	pop    rsi
   1400111e6:	sub    eax,0x7c354f8f
   1400111eb:	mov    edi,DWORD PTR [rsi]
   1400111ed:	and    dh,BYTE PTR [rdx]
   1400111ef:	or     DWORD PTR [rax],edi
   1400111f1:	int    0x95
   1400111f3:	mov    BYTE PTR [rsi-0x14],dl
   1400111f6:	add    BYTE PTR [rbx+0x318efe7],dl
   1400111fc:	and    eax,0xeada5fee
   140011201:	(bad)  
   140011202:	(bad)  
   140011203:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011204:	xchg   ebx,eax
   140011205:	out    0x80,eax
   140011207:	call   FWORD PTR [rcx-0x17f2dbc5]
   14001120d:	mov    ebx,0x792b5f01
   140011212:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011213:	repnz push rdi
   140011215:	outs   dx,DWORD PTR ds:[rsi]
   140011216:	stc    
   140011217:	ficomp WORD PTR [rdi]
   140011219:	clc    
   14001121a:	icebp  
   14001121b:	ror    edx,0xea
   14001121e:	scas   eax,DWORD PTR es:[rdi]
   14001121f:	adc    al,0xa5
   140011221:	pop    rdi
   140011222:	scas   al,BYTE PTR es:[rdi]
   140011223:	or     al,BYTE PTR [rdi-0x17]
   140011226:	test   DWORD PTR [rcx-0x57a1ab89],eax
   14001122c:	pushf  
   14001122d:	push   rax
   14001122e:	jns    0x1400111f1
   140011230:	adc    eax,0x8fc5cf2e
   140011235:	mov    esi,DWORD PTR [rbx+0x28]
   140011238:	sbb    ch,BYTE PTR [rdx-0x4c]
   14001123b:	cdq    
   14001123c:	movabs ds:0x3209ea109b3094f5,al
   140011245:	fisttp QWORD PTR [rbx-0x8b08bb5]
   14001124b:	sub    dl,ch
   14001124d:	push   0x3ed9ca04
   140011252:	cmp    DWORD PTR [rdx-0x61],0xffffffaa
   140011256:	sahf   
   140011257:	push   rax
   140011258:	(bad)  
   140011259:	push   rbx
   14001125a:	pop    rsp
   14001125b:	cmp    eax,0x7afff58b
   140011260:	(bad)  
   140011261:	scas   eax,DWORD PTR es:[rdi]
   140011262:	and    edx,DWORD PTR [rcx]
   140011264:	enter  0x11d5,0x17
   140011268:	rex.W jl 0x14001126b
   14001126b:	(bad)  
   14001126c:	frstor [rdi-0x4a]
   14001126f:	jbe    0x140011205
   140011271:	(bad)  
   140011272:	std    
   140011273:	outs   dx,BYTE PTR ds:[rsi]
   140011275:	fidivr WORD PTR [rax+0x5eb70ca]
   14001127b:	(bad)  
   14001127c:	mov    bh,0xce
   14001127e:	and    BYTE PTR [rbx+0x531a5037],bh
   140011284:	lods   al,BYTE PTR ds:[rsi]
   140011285:	test   al,0x44
   140011287:	test   eax,0xe6d3d8d7
   14001128c:	dec    BYTE PTR [rcx]
   14001128e:	xor    al,0xcb
   140011290:	retf   0x21dd
   140011293:	sti    
   140011294:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011295:	(bad)  
   140011296:	add    BYTE PTR [rdx+0x1ceef77],dh
   14001129c:	mov    edi,cs
   14001129e:	jns    0x140011237
   1400112a0:	sub    al,BYTE PTR [rbx]
   1400112a2:	or     DWORD PTR [rax-0x6b2f5fcd],ecx
   1400112a8:	sub    cl,BYTE PTR [rbx-0x61a10d3a]
   1400112ae:	or     DWORD PTR [rax-0x27cafb5a],ebx
   1400112b4:	(bad)  
   1400112b5:	and    BYTE PTR [rbx-0x6],dl
   1400112b8:	xor    al,0xf
   1400112ba:	add    BYTE PTR [rdx+rcx*4],cl
   1400112bd:	xchg   esp,eax
   1400112be:	rex.WRX stos BYTE PTR es:[rdi],al
   1400112c0:	shr    DWORD PTR [rsi+0x4c],1
   1400112c3:	jmp    0x16bce9242
   1400112c8:	(bad)  
   1400112c9:	addr32 mov esp,0xd20f1d22
   1400112cf:	sahf   
   1400112d0:	movsxd ebp,DWORD PTR [rdx-0x63358a07]
   1400112d6:	stc    
   1400112d7:	imul   esi,DWORD PTR [rbx+0xfea4313],0x3697957c
   1400112e1:	imul   ebx,DWORD PTR [rcx],0x8f13079c
   1400112e7:	xlat   BYTE PTR ds:[rbx]
   1400112e8:	xchg   ebp,eax
   1400112e9:	hlt    
   1400112ea:	(bad)  
   1400112eb:	loopne 0x1400112a2
   1400112ed:	nop
   1400112ee:	jns    0x1400112d5
   1400112f0:	(bad)  
   1400112f1:	sub    edx,0xc1fe5fad
   1400112f7:	(bad)  
   1400112f8:	pop    rbp
   1400112f9:	cs cs std 
   1400112fc:	jne    0x14001130f
   1400112fe:	sbb    DWORD PTR [rdx+rdi*4-0x17],eax
   140011302:	jl     0x1400112dc
   140011304:	or     DWORD PTR [rax+0x684a0842],eax
   14001130a:	xchg   esp,eax
   14001130b:	mov    edx,0x9a9a4c09
   140011310:	mov    edx,0x299a69a9
   140011315:	pop    rdx
   140011316:	rex.WRXB rcr r9b,1
   140011319:	(bad)  
   14001131a:	cwde   
   14001131b:	loop   0x140011318
   14001131d:	jmp    0x18fb79150
   140011322:	xor    ebx,ebx
   140011324:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011325:	cwde   
   140011326:	rex.WRB test al,0xea
   140011329:	jge    0x140011331
   14001132b:	cmc    
   14001132c:	test   BYTE PTR [rdx+0x62cc529e],dh
   140011332:	or     eax,edx
   140011334:	iret   
   140011335:	div    BYTE PTR [rcx-0x4d]
   140011338:	mov    BYTE PTR [rbx],cl
   14001133a:	enter  0x826c,0x9f
   14001133e:	(bad)
   140011341:	xor    eax,0x2869ae0d
   140011346:	(bad)  
   140011347:	sbb    ecx,eax
   140011349:	(bad)  
   14001134a:	in     al,dx
   14001134b:	(bad)  
   14001134c:	hlt    
   14001134d:	xor    al,0x52
   14001134f:	adc    al,0xec
   140011351:	pop    rdi
   140011352:	fldenv [rdx-0x1d]
   140011355:	ret    0x940b
   140011358:	xlat   BYTE PTR ds:[rbx]
   140011359:	mov    dh,0xa1
   14001135b:	fxch   st(7)
   14001135d:	loope  0x1400113de
   14001135f:	bnd jle 0x140011367
   140011362:	in     eax,dx
   140011363:	cli    
   140011364:	fsubr  DWORD PTR [rcx-0x16]
   140011367:	out    dx,eax
   140011368:	pop    rsp
   140011369:	(bad)  
   14001136a:	pop    rdi
   14001136b:	sub    bh,cl
   14001136d:	jne    0x140011384
   14001136f:	ret    
   140011370:	pop    rsi
   140011371:	rex.WRXB (bad) 
   140011373:	xchg   ebx,eax
   140011374:	ds and al,0xa7
   140011377:	cmp    al,bh
   140011379:	(bad)  
   14001137a:	and    al,0x7a
   14001137c:	outs   dx,DWORD PTR ds:[rsi]
   14001137d:	in     eax,dx
   14001137e:	hlt    
   14001137f:	icebp  
   140011380:	(bad)  
   140011381:	and    BYTE PTR [rbp+0x4f62f605],ah
   140011387:	xchg   ebx,eax
   140011388:	add    DWORD PTR [r11+riz*2-0x60],r8d
   14001138d:	rex.B ins BYTE PTR es:[rdi],dx
   14001138f:	sbb    BYTE PTR [rax+0x5c4a3cb],dl
   140011395:	mov    dl,0xef
   140011397:	push   rbp
   140011398:	xor    al,0x2b
   14001139a:	test   al,0x38
   14001139c:	leave  
   14001139d:	fisttp DWORD PTR [rsi-0x3c]
   1400113a0:	(bad)  
   1400113a1:	rex.XB (bad) 
   1400113a3:	int    0x0
   1400113a5:	push   0x458056bb
   1400113aa:	xor    al,0xa4
   1400113ac:	mov    ecx,0x5d1b483
   1400113b1:	je     0x140011379
   1400113b3:	xchg   BYTE PTR [rdi+0x3a50260a],ah
   1400113b9:	cmp    eax,0xfcb97ef1
   1400113be:	sub    al,0x77
   1400113c0:	mov    rsi,QWORD PTR [rax-0x61]
   1400113c4:	add    bh,BYTE PTR [rdx+rbx*8+0x7fe50b72]
   1400113cb:	fcomi  st,st(7)
   1400113cd:	std    
   1400113ce:	lock rex.WRXB (bad) 
   1400113d1:	movabs ds:0xa218029489a0cfd1,eax
   1400113da:	(bad)  
   1400113db:	add    BYTE PTR [rip+0xffffffffe951a34a],cl        # 0x12952b72b
   1400113e1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400113e2:	rex.WRB movabs al,ds:0x506669a1a6ea6bae
   1400113ec:	rex.WRXB movabs ds:0x7c13d712a24d9ff7,rax
   1400113f6:	push   0xfffffffff0f44df0
   1400113fb:	rex.RB cmp eax,0xcfb030a5
   140011401:	xlat   BYTE PTR ds:[rbx]
   140011402:	xchg   ecx,eax
   140011403:	loop   0x1400113f0
   140011405:	push   rdx
   140011406:	rex.WRXB jg 0x140011426
   140011409:	leave  
   14001140a:	(bad)  
   14001140b:	imul   edi,DWORD PTR [rdi+rsi*1+0x533fc09a],0xeec67a80
   140011416:	movabs eax,ds:0x75cee6e09d0f2827
   14001141f:	rex.RX pop rbx
   140011421:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011422:	pop    rax
   140011423:	mov    esp,0x77b70678
   140011428:	sbb    eax,0x929f2cc2
   14001142d:	movabs al,ds:0x514b9c06bcfebb9
   140011436:	nop
   140011437:	(bad)  
   140011438:	je     0x14001140b
   14001143a:	fstp   TBYTE PTR [rdx+0x4d4d9344]
   140011440:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011442:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011443:	popf   
   140011444:	lock mov esi,0x8b24db25
   14001144a:	rol    BYTE PTR [rcx],1
   14001144c:	add    ch,cl
   14001144e:	sbb    esi,DWORD PTR [rdi+0x635b8413]
   140011454:	xchg   ecx,eax
   140011455:	xchg   esp,eax
   140011456:	mov    eax,0x44297cd
   14001145b:	add    DWORD PTR [rbp-0x7dbfb63a],edi
   140011461:	xchg   ebp,eax
   140011462:	add    ch,ch
   140011464:	(bad)  [rcx+0x2a]
   140011467:	push   rax
   140011468:	rcl    cl,cl
   14001146a:	(bad)  
   14001146b:	repz out dx,eax
   14001146d:	add    BYTE PTR [rax-0x6f],bh
   140011470:	adc    BYTE PTR [rsi+riz*4-0x3cda3b18],ah
   140011477:	pop    rsp
   140011478:	pop    rsp
   140011479:	xor    al,0xb4
   14001147b:	scas   al,BYTE PTR es:[rdi]
   14001147c:	sbb    DWORD PTR [rcx],0xffffffac
   14001147f:	pop    rax
   140011480:	in     eax,dx
   140011481:	xor    BYTE PTR [rax],dl
   140011483:	fs scas al,BYTE PTR es:[rdi]
   140011485:	je     0x1400114c1
   140011487:	(bad)  
   140011488:	fistp  DWORD PTR [rbx+0x39]
   14001148b:	adc    BYTE PTR [rip+0x3be4e88e],dl        # 0x17be5fd1f
   140011491:	mov    ecx,0xbd01aa43
   140011496:	add    DWORD PTR [rax+0x35],edi
   140011499:	gs (bad) 
   14001149b:	in     eax,dx
   14001149c:	iret   
   14001149d:	sahf   
   14001149e:	mov    edi,0x367f8d18
   1400114a3:	mov    dh,0xd9
   1400114a5:	(bad)  
   1400114a6:	(bad)  
   1400114a7:	or     dl,BYTE PTR [rsi]
   1400114a9:	fisub  WORD PTR [rbx+0x79]
   1400114ac:	mov    esi,0xa61a6d32
   1400114b1:	mov    bl,0xc0
   1400114b3:	lods   al,BYTE PTR ds:[rsi]
   1400114b4:	cdq    
   1400114b5:	push   rdx
   1400114b6:	(bad)  
   1400114b7:	adc    eax,esp
   1400114b9:	sar    DWORD PTR [rdx-0x7a],cl
   1400114bc:	(bad)  
   1400114bd:	push   rsi
   1400114be:	(bad)  
   1400114bf:	lahf   
   1400114c0:	in     eax,dx
   1400114c1:	rex.RXB scas eax,DWORD PTR es:[rdi]
   1400114c3:	outs   dx,BYTE PTR ds:[rsi]
   1400114c4:	mov    BYTE PTR [rsi-0x3cd60851],bh
   1400114ca:	mov    WORD PTR [rdx+0x1f3eec8e],fs
   1400114d0:	(bad)  
   1400114d1:	enter  0x6bf2,0x6a
   1400114d5:	pushf  
   1400114d6:	(bad)  
   1400114d7:	jo     0x140011526
   1400114d9:	movsxd ebx,DWORD PTR [rdi+rdi*2-0x65]
   1400114dd:	repnz imul esp,ebp,0xffffffbf
   1400114e1:	(bad)  
   1400114e2:	pop    rax
   1400114e3:	and    eax,DWORD PTR [rsi+0x75]
   1400114e6:	or     DWORD PTR [rdi],ecx
   1400114e8:	or     DWORD PTR ds:[rsi-0xc1d109c],edi
   1400114ef:	sbb    al,0xbb
   1400114f1:	jo     0x140011485
   1400114f3:	(bad)  
   1400114f4:	(bad)  
   1400114f5:	add    eax,0xb4a2ee98
   1400114fa:	adc    eax,0xc4294102
   1400114ff:	(bad)
   140011502:	pushf  
   140011503:	in     al,0xda
   140011505:	jg     0x1400114a2
   140011507:	add    bh,BYTE PTR [rax+0xa2d19e8]
   14001150d:	lock and al,0x5
   140011510:	add    edi,DWORD PTR es:[rsi+rcx*2+0x12]
   140011515:	xor    al,bl
   140011517:	add    al,BYTE PTR [rax-0x19f9187]
   14001151d:	iret   
   14001151e:	and    al,0x67
   140011520:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011522:	hlt    
   140011523:	imul   esi,DWORD PTR [rbp-0x318dbe1],0x97385a76
   14001152d:	imul   edx,DWORD PTR [rcx+rbx*1],0x23
   140011531:	mov    BYTE PTR [rcx-0x2a1f9586],bh
   140011537:	pushf  
   140011538:	(bad)  
   140011539:	and    al,0x2d
   14001153b:	adc    r15,QWORD PTR [rsi+0x54]
   14001153f:	rex.X
   140011540:	cs push rbx
   140011542:	es cmp al,0x20
   140011545:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011546:	(bad)  
   140011547:	pop    rsi
   140011548:	jo     0x14001156b
   14001154a:	(bad)  
   14001154b:	add    BYTE PTR [rax+0x3],dl
   14001154e:	(bad)  
   14001154f:	pop    rbx
   140011550:	xor    eax,0x8d1a474e
   140011555:	mov    ebx,edx
   140011557:	(bad)  
   140011558:	adc    BYTE PTR [rdi+rax*8-0x26196dcf],cl
   14001155f:	out    dx,eax
   140011560:	xlat   BYTE PTR ds:[rbx]
   140011561:	xchg   edi,eax
   140011562:	(bad)  
   140011563:	(bad)  
   140011564:	xor    edi,esi
   140011566:	mov    edi,0x7d01abee
   14001156b:	or     dh,al
   14001156d:	push   0xffffffffffffffc9
   14001156f:	sub    eax,0xcb78e016
   140011574:	idiv   ebp
   140011576:	xchg   ecx,eax
   140011577:	lahf   
   140011578:	sub    BYTE PTR [rdi+0xb],al
   14001157b:	(bad)  
   14001157c:	(bad)
   140011580:	rex.X enter 0xf7f5,0x18
   140011585:	loop   0x14001158e
   140011587:	es jne 0x14001154d
   14001158a:	out    dx,al
   14001158b:	mov    ah,0x66
   14001158d:	outs   dx,DWORD PTR ds:[rsi]
   14001158e:	xor    ah,BYTE PTR [rbx+0x7f]
   140011591:	mov    dh,0x4f
   140011593:	cwde   
   140011594:	out    dx,al
   140011595:	movabs ds:0xf8bb260f74c25d93,eax
   14001159e:	leave  
   14001159f:	(bad)  
   1400115a0:	(bad)  
   1400115a3:	in     eax,0x74
   1400115a5:	(bad)  
   1400115a6:	mov    dl,0xde
   1400115a8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400115a9:	pushf  
   1400115aa:	in     eax,dx
   1400115ab:	push   rbx
   1400115ac:	rex.WRB outs dx,BYTE PTR ds:[rsi]
   1400115ae:	xor    bl,BYTE PTR [rsi+rbp*8+0x29f74e53]
   1400115b5:	addr32 push rsi
   1400115b7:	add    DWORD PTR [rax-0x676e6612],ebx
   1400115bd:	loopne 0x140011566
   1400115bf:	push   rbx
   1400115c0:	fsubr  QWORD PTR [rdx+rcx*4-0x2c]
   1400115c4:	push   rbx
   1400115c5:	fs (bad) 
   1400115c7:	rex.WXB test r9b,sil
   1400115ca:	out    dx,eax
   1400115cb:	cmp    dl,BYTE PTR [rdi-0x3d8b2300]
   1400115d1:	(bad)  
   1400115d2:	loope  0x14001155b
   1400115d4:	or     bh,dh
   1400115d6:	cmp    eax,0xab8dceca
   1400115db:	or     al,0xb6
   1400115dd:	pop    rdi
   1400115de:	fs jmp 0x11db961b6
   1400115e4:	sbb    esp,DWORD PTR [rax-0x6b52c18b]
   1400115ea:	retf   
   1400115eb:	(bad)  
   1400115ec:	(bad)  
   1400115ed:	jns    0x14001166e
   1400115ef:	(bad)
   1400115f4:	mov    ah,0x52
   1400115f6:	sbb    ah,BYTE PTR [rbx+0x79]
   1400115f9:	jo     0x140011585
   1400115fb:	cs xor r11b,bpl
   1400115ff:	push   rsi
   140011600:	xchg   edx,eax
   140011601:	jb     0x1400115a8
   140011603:	not    DWORD PTR [rcx-0xc0c928e]
   140011609:	popf   
   14001160a:	rex.B sbb al,0x92
   14001160d:	ret    0x6efe
   140011610:	cli    
   140011611:	fadd   QWORD PTR [rdx-0x4]
   140011614:	push   rcx
   140011615:	xchg   ebx,eax
   140011616:	push   rdx
   140011617:	imul   esp,DWORD PTR [rcx+rsi*4],0xff0ed075
   14001161e:	(bad)  
   140011620:	(bad)  
   140011621:	(bad)  
   140011622:	sbb    edx,DWORD PTR [rbx+0x7513a051]
   140011628:	in     al,0x78
   14001162a:	mov    esi,0x122e3073
   14001162f:	xchg   ebx,eax
   140011630:	repnz (bad) 
   140011632:	loopne 0x140011602
   140011634:	stc    
   140011635:	(bad)  
   140011636:	fnsave [rbp-0x5a]
   140011639:	sub    eax,0x45b4c8f9
   14001163e:	sub    DWORD PTR [rdx-0xb],edx
   140011641:	and    BYTE PTR [rdx],bl
   140011643:	rex cmp eax,0xfed911f1
   140011649:	add    BYTE PTR [rdi+0x40],dh
   14001164c:	sbb    dl,al
   14001164e:	rex.RXB add BYTE PTR [r15-0x169d237a],r13b
   140011655:	lods   eax,DWORD PTR ds:[rsi]
   140011656:	(bad)  
   140011657:	jg     0x14001164a
   140011659:	ud0    edx,DWORD PTR [rcx+0x2fe96172]
   140011660:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011661:	enter  0xb631,0xa8
   140011665:	(bad)  
   140011666:	(bad)  
   140011667:	jns    0x140011665
   140011669:	pop    rcx
   14001166a:	adc    ebx,DWORD PTR [rax-0x56457e2b]
   140011670:	cdq    
   140011671:	(bad)  
   140011672:	or     eax,0x334299a1
   140011677:	and    eax,ebx
   140011679:	push   0x734cd72e
   14001167e:	jmp    0x14001162e
   140011680:	imul   edx,DWORD PTR [rdx-0x58],0x5f
   140011684:	push   rbx
   140011685:	sbb    al,BYTE PTR [rax-0x54ecbc19]
   14001168b:	add    BYTE PTR [rbp+0xc],dh
   14001168e:	stc    
   14001168f:	jge    0x1400116c4
   140011691:	add    ebp,DWORD PTR [rbx-0xe]
   140011694:	rex.WB mov r13b,0xfe
   140011697:	xor    al,0xe5
   140011699:	(bad)  
   14001169a:	sub    cl,BYTE PTR [rbp-0x38]
   14001169d:	retf   0x2123
   1400116a0:	jb     0x1400116a0
   1400116a2:	outs   dx,DWORD PTR ds:[rsi]
   1400116a3:	ds repnz (bad) 
   1400116a6:	pushf  
   1400116a7:	(bad)  
   1400116a8:	cdq    
   1400116a9:	pop    rsi
   1400116aa:	mov    ecx,0x53adb1c0
   1400116af:	xchg   esp,eax
   1400116b0:	xchg   edi,eax
   1400116b1:	mov    bh,0xa0
   1400116b3:	fimul  WORD PTR [rbx+0x3d59814b]
   1400116b9:	cmp    al,0x87
   1400116bb:	push   rsi
   1400116bd:	xchg   ebx,eax
   1400116be:	push   rax
   1400116bf:	jg     0x140011660
   1400116c1:	movabs ds:0xf792f2b3b42ba367,al
   1400116ca:	(bad)  
   1400116cb:	loop   0x14001171d
   1400116cd:	(bad)  
   1400116ce:	cmp    DWORD PTR [rdx],esp
   1400116d0:	mov    eax,0x537edb19
   1400116d5:	xor    al,0xd0
   1400116d7:	rol    DWORD PTR [rcx],0xba
   1400116da:	xlat   BYTE PTR ds:[rbx]
   1400116db:	xor    ebp,ecx
   1400116dd:	sub    dh,BYTE PTR gs:[rax+0x54ef8565]
   1400116e4:	add    eax,0x70607752
   1400116e9:	and    BYTE PTR [rbp+0x6b],cl
   1400116ec:	cmp    BYTE PTR [rsp+rax*2],al
   1400116ef:	sbb    eax,0xf3c5c1a
   1400116f4:	loop   0x140011774
   1400116f6:	adc    al,BYTE PTR [rdi-0x1cc8cb21]
   1400116fc:	sbb    bh,BYTE PTR [rax]
   1400116fe:	leave  
   1400116ff:	ror    DWORD PTR [rsi+0x349838b8],1
   140011705:	sub    eax,0x8c7ce266
   14001170a:	shl    BYTE PTR [rdx],1
   14001170c:	jns    0x140011756
   14001170e:	(bad)  
   14001170f:	jmp    0xfa9d883c
   140011714:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011715:	fldcw  WORD PTR cs:[rbp+0x4d23c6db]
   14001171c:	or     ebx,ecx
   14001171e:	fs repnz sbb al,0xf0
   140011722:	iret   
   140011723:	jns    0x1400116c2
   140011725:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011726:	add    DWORD PTR [rbp-0x357c07ff],edi
   14001172c:	sub    eax,0xf93ff0e6
   140011731:	mov    ecx,0xb86e7f2f
   140011736:	mov    eax,0x683437fc
   14001173b:	add    DWORD PTR [rcx],ebp
   14001173d:	(bad)  
   14001173e:	sqrtps xmm6,xmm1
   140011741:	jmp    0x140011703
   140011743:	lods   al,BYTE PTR ds:[rsi]
   140011744:	mov    DWORD PTR [rdx-0x596565e1],ecx
   14001174a:	cdq    
   14001174b:	rex.RB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001174d:	mov    bh,0x3c
   14001174f:	(bad)  
   140011751:	xor    edi,DWORD PTR [rbx+rsi*1-0x67]
   140011755:	push   rbx
   140011756:	in     al,dx
   140011757:	movabs ds:0xbce9137c53365299,al
   140011760:	scas   al,BYTE PTR es:[rdi]
   140011761:	mov    dh,0xd9
   140011763:	jge    0x14001175b
   140011765:	fsub   DWORD PTR [rbp-0x6f97a10e]
   14001176b:	cmp    dh,ch
   14001176d:	imul   DWORD PTR [rbx-0x34]
   140011770:	stc    
   140011771:	sub    eax,0x3fa54e34
   140011776:	adc    ecx,eax
   140011778:	int    0xf6
   14001177a:	mov    ecx,0x70d3c0fe
   14001177f:	jmp    QWORD PTR [rbx+0x635cedec]
   140011785:	mov    eax,0xada59a75
   14001178a:	(bad)  
   14001178b:	jno    0x140011748
   14001178d:	push   rdi
   14001178e:	sub    eax,0x4cacd7f7
   140011793:	rex.WRX movabs rax,ds:0xfcceec93b1a78714
   14001179d:	out    dx,eax
   14001179e:	cmp    BYTE PTR [rbx-0x26],dl
   1400117a1:	(bad)  
   1400117a2:	sub    DWORD PTR [rdi-0x61],edi
   1400117a5:	rex.WXB in eax,dx
   1400117a7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400117a8:	repz pop rsp
   1400117aa:	jle    0x14001173b
   1400117ac:	xor    eax,0x5cff30dd
   1400117b1:	sbb    esp,DWORD PTR [rax+0x77]
   1400117b4:	jrcxz  0x140011736
   1400117b6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400117b7:	loope  0x140011762
   1400117b9:	sbb    DWORD PTR [rdi],eax
   1400117bb:	fwait
   1400117bc:	adc    al,0xec
   1400117be:	ins    BYTE PTR es:[rdi],dx
   1400117bf:	xchg   BYTE PTR [rax+0x76bcdae6],ah
   1400117c5:	sti    
   1400117c6:	(bad)  
   1400117c7:	adc    ch,BYTE PTR [rbx]
   1400117c9:	lock push rsi
   1400117cb:	loop   0x140011831
   1400117cd:	jle    0x140011756
   1400117cf:	jmp    0x182e08a0c
   1400117d4:	push   rsp
   1400117d5:	inc    dh
   1400117d7:	(bad)  
   1400117d8:	or     eax,0xf32efb51
   1400117dd:	push   0x9392ce0
   1400117e2:	leave  
   1400117e3:	(bad)
   1400117e8:	(bad)  
   1400117e9:	mov    ah,0x8
   1400117eb:	test   DWORD PTR [rsi],0xb7220fe0
   1400117f1:	cwde   
   1400117f2:	ret    
   1400117f3:	jg     0x1400117d7
   1400117f5:	mov    ecx,0x2fd07fcf
   1400117fa:	scas   al,BYTE PTR es:[rdi]
   1400117fb:	(bad)  
   1400117fc:	shl    BYTE PTR [rsp+rax*4],cl
   1400117ff:	(bad)  
   140011800:	rex.W loopne 0x140011861
   140011803:	rex.RXB jmp 0x1637d7374
   140011809:	or     eax,0xe299a4e4
   14001180e:	xchg   bx,ax
   140011810:	cmp    BYTE PTR [rbp-0x4ec2ff29],dl
   140011816:	jmp    0x1bb129dd7
   14001181b:	jl     0x14001183a
   14001181d:	jmp    0x14001181a
   14001181f:	adc    dl,BYTE PTR [rdx+0x19]
   140011822:	iret   
   140011823:	cmp    bh,bl
   140011825:	jb     0x1400118a2
   140011827:	outs   dx,DWORD PTR ds:[rsi]
   140011828:	mov    ebx,0x22689794
   14001182d:	(bad)  
   14001182e:	sub    BYTE PTR [rcx-0x30],bh
   140011831:	xchg   DWORD PTR [rdx-0x3a],esp
   140011834:	and    dh,bh
   140011836:	push   rsi
   140011837:	push   rdi
   140011838:	jo     0x14001182d
   14001183a:	mov    cl,0x77
   14001183c:	sub    BYTE PTR [rdi],0xd8
   14001183f:	fstp   TBYTE PTR [rsi]
   140011841:	retf   
   140011842:	jge    0x14001185b
   140011844:	pop    rdi
   140011845:	movabs al,ds:0x20a463f6cc85baba
   14001184e:	test   eax,0x3d951eb4
   140011853:	scas   al,BYTE PTR es:[rdi]
   140011854:	cmc    
   140011855:	(bad)  
   140011856:	js     0x140011861
   140011858:	xchg   ecx,eax
   140011859:	add    al,0xe4
   14001185b:	push   rdx
   14001185c:	in     al,0xdc
   14001185e:	push   0x78
   140011860:	pop    rsp
   140011861:	sbb    ch,BYTE PTR [rbp+rbp*1+0x5da7c5f3]
   140011868:	(bad)  
   140011869:	cmc    
   14001186a:	pop    rbx
   14001186b:	movabs ds:0x16cf7d0dfffb070,eax
   140011874:	shl    BYTE PTR [rsi],cl
   140011876:	in     eax,dx
   140011877:	lahf   
   140011878:	sbb    al,0xc6
   14001187a:	rex.XB pushf 
   14001187c:	or     cl,BYTE PTR [rsi+rcx*2]
   14001187f:	ins    DWORD PTR es:[rdi],dx
   140011880:	sub    dl,BYTE PTR [rax-0x80]
   140011883:	rol    BYTE PTR [rax+rdi*4+0x604b80ce],1
   14001188a:	popf   
   14001188b:	cmp    BYTE PTR [rdx],0x3b
   14001188e:	test   DWORD PTR [rsi+0x29],0xdbb65351
   140011895:	rex.WRX stc 
   140011897:	add    eax,0x4e60f2e2
   14001189c:	loop   0x140011869
   14001189e:	imul   edx,DWORD PTR [rip+0x4dc63a61],0xff10fa52        # 0x18dc75309
   1400118a8:	rex.WB
   1400118a9:	repz add DWORD PTR [rax-0x364319c8],edx
   1400118b0:	(bad)  
   1400118b1:	mov    ch,BYTE PTR [rax+0x14]
   1400118b4:	sbb    al,0x31
   1400118b6:	pop    rdx
   1400118b7:	lock call 0x116e9e88e
   1400118bd:	xchg   DWORD PTR [rsi-0x7d],edi
   1400118c0:	movsxd edi,edi
   1400118c2:	test   bh,dl
   1400118c4:	xor    DWORD PTR [rcx],ebp
   1400118c6:	test   al,0x37
   1400118c8:	add    BYTE PTR [rdi-0x151066a1],bh
   1400118ce:	repz rex mov ecx,0xbd0faef1
   1400118d5:	leave  
   1400118d6:	sub    eax,0xbd9dfead
   1400118db:	imul   esi,DWORD PTR [rbx-0x65ef2f22],0xb60fd5c8
   1400118e5:	fisubr DWORD PTR [rsi-0x55138aca]
   1400118eb:	xor    esp,DWORD PTR [rip+0xffffffff9f56b977]        # 0xdf57d268
   1400118f1:	cmp    dh,dh
   1400118f3:	and    bh,BYTE PTR [rbx-0x51]
   1400118f6:	ins    BYTE PTR es:[rdi],dx
   1400118f7:	pop    rdx
   1400118f8:	out    dx,eax
   1400118f9:	out    dx,eax
   1400118fa:	fwait
   1400118fb:	adc    BYTE PTR [rip+0xffffffffedf7427e],bh        # 0x12df85b7f
   140011901:	rex.RXB mov r8d,fs
   140011904:	jrcxz  0x1400118a0
   140011906:	mov    dl,dh
   140011908:	out    0xf6,eax
   14001190a:	push   rdi
   14001190b:	ins    DWORD PTR es:[rdi],dx
   14001190c:	mov    DWORD PTR [rsi],edi
   14001190e:	cmp    DWORD PTR [rdx],ecx
   140011910:	cmp    QWORD PTR [rax],rsi
   140011913:	mov    dl,ah
   140011915:	push   rbx
   140011916:	scas   al,BYTE PTR es:[rdi]
   140011917:	cmp    eax,0xfb9a16fc
   14001191c:	(bad)  
   14001191d:	movsxd esi,DWORD PTR [rsi-0x3]
   140011920:	sub    ah,BYTE PTR [rbx-0x45a75875]
   140011926:	js     0x14001192e
   140011928:	jg     0x14001191d
   14001192a:	sbb    bl,dl
   14001192c:	int3   
   14001192d:	push   rdx
   14001192e:	rex.WX sbb rax,0xffffffffe4711fbd
   140011934:	xchg   edi,eax
   140011935:	push   rdi
   140011936:	sbb    ebx,DWORD PTR [rcx-0x732c433b]
   14001193c:	xchg   esi,eax
   14001193d:	rex.WRXB out 0x74,al
   140011940:	movs   DWORD PTR es:[rdi],DWORD PTR ss:[rsi]
   140011942:	add    BYTE PTR [rsi],ch
   140011944:	jae    0x140011944
   140011946:	out    0xd9,eax
   140011948:	jg     0x1400118cc
   14001194a:	mov    ah,0xe3
   14001194c:	rcr    DWORD PTR [rdx-0x78],0xfe
   140011950:	xchg   ebp,eax
   140011951:	out    dx,al
   140011952:	fistp  QWORD PTR [rdx+rbp*2-0x635bfc1e]
   140011959:	cmp    edx,DWORD PTR [rbp+0x319db05]
   14001195f:	rcl    dh,cl
   140011961:	std    
   140011962:	and    eax,0xf2434a7e
   140011967:	rcr    BYTE PTR [rdx+0x3b2561de],1
   14001196d:	and    DWORD PTR [rdi],edi
   14001196f:	fwait
   140011970:	loopne 0x140011975
   140011972:	jb     0x1400118f9
   140011974:	rcl    DWORD PTR [rsp+rdi*1],1
   140011977:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011978:	add    DWORD PTR [rdx],esi
   14001197a:	(bad)  
   14001197b:	mov    ch,0xa4
   14001197d:	push   0x44f989a5
   140011982:	ds mov esi,0x62d3d6e4
   140011988:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011989:	jns    0x14001191a
   14001198b:	stos   BYTE PTR es:[rdi],al
   14001198c:	lods   al,BYTE PTR ds:[rsi]
   14001198d:	xor    edi,ebp
   14001198f:	adc    al,0xf0
   140011991:	iret   
   140011992:	js     0x1400119b1
   140011994:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011995:	add    DWORD PTR [rbp+0x4983f801],edi
   14001199b:	(bad)  
   14001199c:	sti    
   14001199d:	(bad)  
   14001199e:	(bad)  
   14001199f:	jns    0x140011983
   1400119a1:	pop    rax
   1400119a2:	mov    ecx,0x26f7f1be
   1400119a7:	mov    bl,0xc9
   1400119a9:	mov    ecx,ebp
   1400119ab:	ins    BYTE PTR es:[rdi],dx
   1400119ac:	adc    ah,BYTE PTR [rdi]
   1400119ae:	repnz and al,0xf6
   1400119b1:	sahf   
   1400119b2:	xor    eax,edi
   1400119b4:	(bad)  
   1400119b5:	(bad)  
   1400119b6:	nop
   1400119b7:	movsxd ebx,DWORD PTR [rsi]
   1400119b9:	ficomp WORD PTR [rcx]
   1400119bb:	(bad)  
   1400119bc:	fbld   TBYTE PTR [rdi]
   1400119be:	(bad)  
   1400119bf:	ffreep st(4)
   1400119c1:	xlat   BYTE PTR ds:[rbx]
   1400119c2:	or     ebx,DWORD PTR [rbx]
   1400119c4:	(bad)  
   1400119c5:	and    eax,0xfcf31d4d
   1400119ca:	(bad)  
   1400119cb:	in     eax,0x6f
   1400119cd:	rol    BYTE PTR [rdi+rbx*8-0x3c],cl
   1400119d1:	lock imul esp,edx,0x32
   1400119d5:	pop    rax
   1400119d6:	push   0x2937c55e
   1400119db:	jl     0x140011a0b
   1400119dd:	mul    DWORD PTR [rip+0xffffffffd0905045]        # 0x110916a28
   1400119e3:	rcl    BYTE PTR [rbx+riz*1-0x52],1
   1400119e7:	cmp    al,0xf1
   1400119e9:	ds mov esp,0x5fb6ccf3
   1400119ef:	loop   0x1400119d9
   1400119f1:	(bad)
   1400119f4:	jmp    0x140011a65
   1400119f6:	mov    dh,0x47
   1400119f8:	pushf  
   1400119f9:	mov    bl,0x6d
   1400119fb:	movabs ds:0xb682dfc4f253f6c6,al
   140011a04:	pop    rbx
   140011a05:	cmp    ebp,DWORD PTR cs:[rbx+0x53]
   140011a09:	xchg   edx,eax
   140011a0a:	fadd   DWORD PTR [rbp-0x25]
   140011a0d:	movabs eax,ds:0x458fdebe67bed2d3
   140011a16:	or     al,0xed
   140011a18:	jae    0x140011a47
   140011a1a:	movabs al,ds:0x78032186ec8c5318
   140011a23:	mov    ecx,0x15c60a7a
   140011a28:	mov    al,0xc3
   140011a2a:	xchg   ebp,eax
   140011a2b:	xor    al,0xc9
   140011a2d:	pop    rax
   140011a2e:	push   rdx
   140011a2f:	(bad)  
   140011a30:	xor    al,BYTE PTR [rdi+0x3c]
   140011a33:	(bad)  
   140011a34:	(bad)  
   140011a35:	test   BYTE PTR [rsi+0x4d],dh
   140011a38:	mov    ch,0xa1
   140011a3a:	xchg   ebp,eax
   140011a3b:	push   0xffffffffffffffc7
   140011a3d:	test   eax,0x671f38a2
   140011a42:	add    edx,esp
   140011a44:	rex lods eax,DWORD PTR ds:[rsi]
   140011a46:	sbb    eax,0xec38af38
   140011a4b:	and    al,0xae
   140011a4d:	rex.RXB sub BYTE PTR [r14+0x78],r12b
   140011a51:	shl    cl,cl
   140011a53:	addr32 mov esp,0x21d776c1
   140011a59:	outs   dx,DWORD PTR ds:[rsi]
   140011a5a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011a5b:	test   eax,0xde6d43c1
   140011a60:	repz (bad) 
   140011a62:	in     al,0xf4
   140011a64:	mov    edi,edi
   140011a66:	rex.WRX (bad) 
   140011a68:	cld    
   140011a69:	cmp    ch,BYTE PTR [rbp+0x14]
   140011a6c:	shr    bl,0x29
   140011a6f:	or     ch,al
   140011a71:	or     eax,0xe647efc0
   140011a76:	push   rdi
   140011a77:	(bad)  [rip+0xffffffff8bab2b07]        # 0xcbac4584
   140011a7d:	movabs ds:0xab7ddd30edfdf763,eax
   140011a86:	(bad)  
   140011a87:	sti    
   140011a88:	test   BYTE PTR [rsp+rcx*4+0x4f372c29],ah
   140011a8f:	cmp    eax,0xef7b26d0
   140011a94:	rex.X jmp 0x140011ae5
   140011a97:	mov    ds,WORD PTR [rdi]
   140011a99:	xchg   edi,eax
   140011a9a:	loop   0x140011a26
   140011a9c:	add    al,0x1d
   140011a9e:	push   rbx
   140011a9f:	lock data16 (bad) 
   140011aa2:	ret    
   140011aa3:	cld    
   140011aa4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011aa5:	std    
   140011aa6:	rex.WR sbb r12b,dil
   140011aa9:	rex.WRB shl QWORD PTR [r14+rbx*8-0x56055ec3],cl
   140011ab1:	(bad)  
   140011ab2:	lahf   
   140011ab3:	cmp    dh,bh
   140011ab5:	mov    dh,0xa6
   140011ab7:	jge    0x140011a7d
   140011ab9:	retf   
   140011aba:	and    ch,BYTE PTR [rax-0x51ec5819]
   140011ac0:	(bad)  
   140011ac1:	repnz ss hlt 
   140011ac4:	fadd   st,st(3)
   140011ac6:	rex.WR scas al,BYTE PTR es:[rdi]
   140011ac8:	pop    rdi
   140011ac9:	(bad)  
   140011aca:	mov    eax,0x8ba59a7d
   140011acf:	(bad)  
   140011ad0:	fwait
   140011ad1:	neg    DWORD PTR [rdi-0x3b55a64a]
   140011ad7:	call   0x10e6dfe9d
   140011adc:	jg     0x140011b19
   140011ade:	icebp  
   140011adf:	(bad)  
   140011ae0:	paddq  mm1,QWORD PTR [rbp+0x21]
   140011ae4:	mov    esp,0x1495eb2d
   140011ae9:	xor    al,0xf7
   140011aeb:	(bad)  
   140011aec:	shl    BYTE PTR [rcx],1
   140011aee:	add    esp,DWORD PTR [rcx]
   140011af0:	cmp    DWORD PTR [rdx+0x48],edx
   140011af3:	rex.W jns 0x140011a91
   140011af6:	cmp    eax,0x6da0ca58
   140011afb:	rex.WRXB add BYTE PTR [r9+0x25],r13b
   140011aff:	(bad)  
   140011b00:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011b01:	movabs ds:0x2831126868d04af8,eax
   140011b0a:	sub    eax,0x8ce2615
   140011b0f:	rex.B
   140011b10:	rex.X
   140011b11:	div    DWORD PTR ds:[rdi+rcx*2]
   140011b15:	rex adc DWORD PTR [rbx+0x46800716],edi
   140011b1c:	or     al,0x1f
   140011b1e:	call   0xdd352a93
   140011b23:	sbb    BYTE PTR [rip+0xffffffff82674c63],0x35        # 0xc268678d
   140011b2a:	sbb    al,0x6a
   140011b2c:	(bad)  
   140011b2d:	add    bl,ah
   140011b2f:	adc    ecx,ebx
   140011b31:	jo     0x140011ac7
   140011b33:	xchg   esp,eax
   140011b34:	(bad)  
   140011b35:	xchg   ecx,eax
   140011b36:	push   rdx
   140011b37:	mov    es,esp
   140011b39:	adc    DWORD PTR [rax],edx
   140011b3b:	cmp    al,0x7a
   140011b3d:	fistp  QWORD PTR [rbx]
   140011b3f:	mov    ecx,0x783c2cfa
   140011b44:	sub    bl,BYTE PTR [rbp+0x3e]
   140011b47:	(bad)  
   140011b48:	and    al,0xf0
   140011b4a:	mov    edx,0xfc00de91
   140011b4f:	pop    rsi
   140011b50:	in     eax,0x16
   140011b52:	mov    esi,DWORD PTR [rcx+0x6c]
   140011b55:	cmp    al,0xfc
   140011b57:	rcr    BYTE PTR [rdi-0x70],1
   140011b5a:	(bad)  
   140011b5c:	addr32 rex.X mov ebp,0x5f360b8f
   140011b63:	sbb    r14,QWORD PTR [r9+r9*4+0x68369dbf]
   140011b6b:	or     BYTE PTR [rax+0x1b],bh
   140011b6e:	ret    0xcde1
   140011b71:	ret    
   140011b72:	jnp    0x140011b5f
   140011b74:	rcl    DWORD PTR [rdi+0x411f584e],1
   140011b7a:	mov    ebp,0xdbaeeca8
   140011b7f:	rcl    bl,0x18
   140011b82:	stos   BYTE PTR es:[rdi],al
   140011b83:	movzx  eax,BYTE PTR [rax]
   140011b86:	xchg   BYTE PTR [rbp-0xa],dh
   140011b89:	jne    0x140011b53
   140011b8b:	cmp    eax,0xcc971aaa
   140011b90:	and    dl,cl
   140011b92:	ja     0x140011bc5
   140011b94:	rex.WRXB or BYTE PTR [r10],r10b
   140011b97:	add    cl,ch
   140011b99:	jo     0x140011b67
   140011b9b:	xchg   ebp,eax
   140011b9c:	(bad)  
   140011b9d:	fiadd  WORD PTR [rbx-0x6804e39]
   140011ba3:	sub    al,0x87
   140011ba5:	mov    dh,0x5f
   140011ba7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011ba8:	mov    esp,0xf6cc8db6
   140011bad:	or     BYTE PTR [rsi],dh
   140011baf:	or     BYTE PTR [rbx],dh
   140011bb1:	jle    0x140011bd9
   140011bb3:	int    0xfb
   140011bb5:	mov    ecx,DWORD PTR [rbp+0x138aa23f]
   140011bbb:	stos   DWORD PTR es:[rdi],eax
   140011bbc:	std    
   140011bbd:	shl    ebp,cl
   140011bbf:	lock sub eax,0xfef12f7b
   140011bc5:	jae    0x140011be3
   140011bc7:	outs   dx,DWORD PTR ds:[rsi]
   140011bc8:	xor    al,0xdb
   140011bca:	mov    esp,0x8f9887f8
   140011bcf:	rex.WRX cmp QWORD PTR [rdi-0x3aece86b],r15
   140011bd6:	jbe    0x140011bf6
   140011bd8:	push   rax
   140011bd9:	xchg   esp,eax
   140011bda:	or     al,0xe0
   140011bdc:	rex.WB
   140011bdd:	rex.WX adc QWORD PTR [rsi],rcx
   140011be0:	(bad)  
   140011be1:	add    ecx,ebp
   140011be3:	popf   
   140011be4:	push   0x335ff488
   140011be9:	cs (bad) 
   140011beb:	rex.B iret 
   140011bed:	test   BYTE PTR [rbx-0x5c],ah
   140011bf0:	shr    DWORD PTR [rdx+0x17],cl
   140011bf3:	or     ebp,DWORD PTR [rcx+0x23]
   140011bf6:	add    DWORD PTR [rbx],edi
   140011bf8:	pop    rcx
   140011bf9:	add    edi,esp
   140011bfb:	xchg   esp,eax
   140011bfc:	outs   dx,BYTE PTR ds:[rsi]
   140011bfd:	cmp    DWORD PTR [rdx+0x72],edx
   140011c00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011c01:	xchg   ebx,eax
   140011c02:	xor    BYTE PTR [rsp+rsi*8+0x45366759],cl
   140011c09:	mov    ah,0xb
   140011c0b:	push   rdx
   140011c0c:	(bad)  
   140011c0d:	ins    DWORD PTR es:[rdi],dx
   140011c0e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011c0f:	retf   0x7a40
   140011c12:	ins    DWORD PTR es:[rdi],dx
   140011c13:	popf   
   140011c14:	leave  
   140011c15:	xor    DWORD PTR [esi+0x54],0x5f666b58
   140011c1d:	(bad)  
   140011c1e:	rcr    BYTE PTR [rbx],cl
   140011c20:	sbb    bh,0x8b
   140011c23:	fadd   QWORD PTR [rdx-0x7]
   140011c26:	(bad)  
   140011c27:	jp     0x140011c0c
   140011c29:	rex.XB (bad) 
   140011c2b:	loop   0x140011bef
   140011c2d:	hlt    
   140011c2e:	(bad)  
   140011c2f:	(bad)  
   140011c31:	jmp    0x140011be0
   140011c33:	out    dx,eax
   140011c34:	sub    BYTE PTR [rbp-0x64],ah
   140011c37:	mov    ecx,0xfb4bd17
   140011c3c:	add    ecx,edx
   140011c3e:	(bad)  
   140011c3f:	xchg   edx,eax
   140011c40:	sbb    esi,DWORD PTR [rdx+0xe]
   140011c43:	out    dx,eax
   140011c44:	je     0x176355b3f
   140011c4a:	(bad)  
   140011c4b:	(bad)  
   140011c4c:	xchg   al,bh
   140011c4e:	cdq    
   140011c4f:	mov    eax,0xd763e213
   140011c54:	icebp  
   140011c55:	clc    
   140011c56:	xor    edi,ebp
   140011c58:	(bad)  
   140011c5a:	mov    dh,0x4a
   140011c5c:	repz (bad) 
   140011c5f:	(bad)  
   140011c60:	test   esp,ebx
   140011c62:	rex.WRXB (bad) 
   140011c64:	sub    BYTE PTR [rdi-0x1c093d9],0x6e
   140011c6b:	hlt    
   140011c6c:	enter  0xecc3,0xdf
   140011c70:	mov    eax,0x2f7f1d62
   140011c75:	loope  0x140011ced
   140011c77:	scas   al,BYTE PTR es:[rdi]
   140011c78:	movabs ds:0xff799c04c626da61,al
   140011c81:	xor    al,0xef
   140011c83:	scas   eax,DWORD PTR es:[rdi]
   140011c84:	xor    ch,al
   140011c86:	rex.WRXB loope 0x140011d08
   140011c89:	pop    rdx
   140011c8a:	int    0x37
   140011c8c:	xchg   edi,eax
   140011c8d:	rol    DWORD PTR [rdx+0x2d2ff066],cl
   140011c93:	std    
   140011c94:	xor    eax,0xc9140437
   140011c99:	iret   
   140011c9a:	mov    ch,0x5e
   140011c9c:	(bad)  
   140011c9d:	movabs ds:0x21cf5e64e2046ae1,eax
   140011ca6:	(bad)  
   140011ca7:	mov    eax,0x44c08076
   140011cac:	or     cl,BYTE PTR [rdx-0x593ebf33]
   140011cb2:	cli    
   140011cb3:	rex.WX sti 
   140011cb5:	jl     0x140011cce
   140011cb7:	cmc    
   140011cb8:	rex.WRXB loopne 0x140011c62
   140011cbb:	jmp    0x10d656f1b
   140011cc0:	call   FWORD PTR [rcx+0x8]
   140011cc3:	outs   dx,DWORD PTR ds:[rsi]
   140011cc4:	sbb    al,0x0
   140011cc6:	mov    ch,0xf0
   140011cc8:	(bad)  
   140011cc9:	cmp    DWORD PTR [rcx],esp
   140011ccb:	cmp    BYTE PTR [rdx],bh
   140011ccd:	retf   
   140011cce:	xchg   BYTE PTR [rdi+0x4c],al
   140011cd1:	and    BYTE PTR [rdi-0x6cfc58e0],dh
   140011cd7:	jbe    0x140011c5a
   140011cd9:	nop
   140011cda:	sbb    BYTE PTR [rcx+0x28],ch
   140011cdd:	scas   al,BYTE PTR es:[rdi]
   140011cde:	xor    DWORD PTR [rcx],0xffffffc4
   140011ce1:	hlt    
   140011ce2:	sbb    BYTE PTR [rdx-0x3],bpl
   140011ce6:	sbb    DWORD PTR [rdi],0xffc7d397
   140011cec:	scas   al,BYTE PTR es:[rdi]
   140011ced:	ds clc 
   140011cef:	add    ch,BYTE PTR [rcx]
   140011cf1:	add    bh,BYTE PTR [rax+0x1d]
   140011cf4:	add    DWORD PTR [rcx+0x56f801bd],0xffca16e5
   140011cfe:	fdivr  DWORD PTR [rbp-0x15]
   140011d01:	(bad)  
   140011d02:	sbb    eax,edx
   140011d04:	cld    
   140011d05:	rex.X xor ebx,ebp
   140011d08:	jne    0x140011d77
   140011d0a:	mov    ecx,0x76a8292d
   140011d0f:	mov    esp,0xc7dfec74
   140011d14:	(bad)  
   140011d15:	repz jmp 0x11dcc3b8c
   140011d1b:	(bad)  
   140011d1c:	out    0xbd,eax
   140011d1e:	mov    bh,0x98
   140011d21:	xchg   ecx,eax
   140011d22:	push   rax
   140011d23:	mov    ch,0xc5
   140011d25:	cmp    ah,dh
   140011d27:	ret    0x9b7c
   140011d2a:	add    BYTE PTR [rsp+rdi*4+0x102326bc],dl
   140011d31:	xor    ch,BYTE PTR [rax+0x1fd45d26]
   140011d37:	nop
   140011d38:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011d39:	data16 cmp bl,BYTE PTR [rsi-0x1a]
   140011d3d:	(bad)  
   140011d3e:	xchg   ebx,eax
   140011d3f:	out    dx,eax
   140011d40:	mov    ecx,eax
   140011d42:	cmc    
   140011d43:	test   BYTE PTR [rbx-0x54],0x5f
   140011d47:	cmp    al,0x4d
   140011d49:	jne    0x140011dc4
   140011d4b:	or     ebx,DWORD PTR [rcx+0x3fe71aed]
   140011d51:	sub    DWORD PTR [rdx+0x494fe266],ecx
   140011d57:	(bad)  
   140011d59:	adc    esi,ebx
   140011d5b:	loope  0x140011d11
   140011d5d:	shr    eax,0xe1
   140011d60:	jo     0x140011d94
   140011d62:	pslld  mm4,QWORD PTR [rip+0xffffffff81ef4d65]        # 0xc1f06ace
   140011d69:	cmp    DWORD PTR [rbx],esp
   140011d6b:	(bad)  
   140011d6c:	rex.WRXB rol QWORD PTR [rip+0xffffffffd273e2d0],cl        # 0x112750043
   140011d73:	(bad)  
   140011d74:	sub    ecx,ecx
   140011d76:	push   rdi
   140011d77:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011d78:	push   rdi
   140011d79:	xor    eax,0x37fce07b
   140011d7e:	mov    ah,0xcf
   140011d80:	pop    rcx
   140011d81:	sub    dl,BYTE PTR [rax]
   140011d83:	(bad)  
   140011d84:	(bad)  
   140011d85:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011d86:	rex.W add spl,0xd8
   140011d8a:	and    eax,0xfbc8110f
   140011d8f:	in     eax,dx
   140011d90:	sbb    al,0x85
   140011d92:	jbe    0x140011d4a
   140011d94:	xchg   edi,eax
   140011d95:	ficom  WORD PTR [rcx+0x8da0423]
   140011d9b:	(bad)  
   140011d9c:	and    al,BYTE PTR [rip+0x7bbfdcb1]        # 0x1bbc0fa53
   140011da2:	fsub   st(1),st
   140011da4:	movabs rbx,0xdf57037183da4b70
   140011dae:	retf   
   140011daf:	in     eax,0x4f
   140011db1:	cld    
   140011db2:	pop    rbp
   140011db3:	(bad)  
   140011db4:	cld    
   140011db5:	sti    
   140011db6:	mov    esp,0xde80d30e
   140011dbb:	add    ah,bh
   140011dbd:	fiadd  WORD PTR [rax+rsi*1-0x4e]
   140011dc1:	iret   
   140011dc2:	sbb    edx,DWORD PTR [rsi+0x7]
   140011dc5:	(bad)  
   140011dc6:	sub    al,0x51
   140011dc8:	call   QWORD PTR [rdx]
   140011dca:	sti    
   140011dcb:	mov    ebx,0x40776a0b
   140011dd0:	or     al,0x87
   140011dd2:	int    0x63
   140011dd4:	imul   esi,DWORD PTR [rdi],0x4f
   140011dd7:	rex.WRXB mov r12b,0xdc
   140011dda:	shl    cl,1
   140011ddc:	in     eax,0x37
   140011dde:	mov    dh,0x6
   140011de0:	pop    rdi
   140011de1:	rex.WXB (bad) 
   140011de3:	and    eax,0x4581c344
   140011de8:	or     esp,DWORD PTR [rdx-0x71220b96]
   140011dee:	movabs ds:0x4f50f27252706b5b,al
   140011df7:	popf   
   140011df8:	cmp    ecx,eax
   140011dfa:	fcom   QWORD PTR [rax]
   140011dfc:	add    edi,DWORD PTR [rax-0x4e049946]
   140011e02:	ja     0x140011e56
   140011e04:	(bad)  
   140011e05:	jle    0x140011e0f
   140011e07:	mov    ecx,0xd6e2c5b6
   140011e0c:	sub    DWORD PTR [rsi],edx
   140011e0e:	mov    edx,0x73e77fb9
   140011e13:	xchg   edx,eax
   140011e14:	ret    0x247f
   140011e17:	and    bh,bh
   140011e19:	mov    cl,0xa4
   140011e1b:	adc    eax,0x86dabb69
   140011e20:	(bad)  
   140011e21:	imul   eax,DWORD PTR [rax],0x39666188
   140011e27:	ins    BYTE PTR es:[rdi],dx
   140011e28:	rex.WRXB pop r13
   140011e2a:	jle    0x140011dd9
   140011e2c:	repnz (bad) 
   140011e2e:	in     eax,0xd5
   140011e30:	cld    
   140011e31:	ja     0x140011e0e
   140011e33:	cmp    cl,BYTE PTR [rbx+rbx*1+0x21]
   140011e37:	rex.WR movabs al,fs:0x92c3474adeb3b573
   140011e42:	(bad)  
   140011e43:	xlat   BYTE PTR ds:[rbx]
   140011e44:	or     al,0xc2
   140011e46:	movabs eax,ds:0x4526c099bc404da0
   140011e4f:	rex.XB
   140011e50:	cs ja  0x140011e85
   140011e53:	mov    dh,0x58
   140011e55:	movabs ds:0x4d39a0940c361285,al
   140011e5e:	rex.WB
   140011e5f:	shl    BYTE PTR gs:[rdi+rsi*1],0xb0
   140011e64:	in     eax,0x2f
   140011e66:	je     0x140011e86
   140011e68:	sbb    ebx,DWORD PTR [rsi+0x10]
   140011e6b:	jmp    0x18b5f152f
   140011e70:	xor    ch,BYTE PTR [rax]
   140011e72:	(bad)  
   140011e73:	add    eax,0x52d09024
   140011e78:	mov    dl,BYTE PTR [rip+0xffffffffca3c9f66]        # 0x10a3dbde4
   140011e7e:	in     al,0x1f
   140011e80:	popf   
   140011e81:	xor    BYTE PTR [ebp-0x69],cl
   140011e85:	cdq    
   140011e86:	adc    DWORD PTR [rsi+0x6f4936e7],0x0
   140011e8d:	mov    esi,0xfd079915
   140011e92:	mov    cl,ch
   140011e94:	movabs ds:0xf359965f93243e59,al
   140011e9d:	movabs al,ds:0x5ccdf25dd5232ed6
   140011ea6:	std    
   140011ea7:	cmp    eax,0xe0640247
   140011eac:	mov    gs,esp
   140011eae:	fxch   st(1)
   140011eb0:	cmc    
   140011eb1:	jnp    0x140011f1a
   140011eb3:	mov    ebp,0x9fb789ff
   140011eb8:	cmp    al,0xbc
   140011eba:	in     ax,0x4f
   140011ebd:	movabs rdi,0xfef26c95c41f6666
   140011ec7:	movabs eax,ds:0xf56119ea4057f0d
   140011ed0:	jno    0x140011ecb
   140011ed2:	mov    edi,esi
   140011ed4:	push   rdx
   140011ed5:	test   al,al
   140011ed7:	je     0x140011ed4
   140011ed9:	and    eax,0x514fb6d6
   140011ede:	pop    rbp
   140011edf:	mov    ebp,0xd471d488
   140011ee4:	ja     0x140011ebc
   140011ee6:	xor    ebp,ebp
   140011ee8:	mov    al,0xfe
   140011eea:	(bad)  
   140011eeb:	rex.W (bad) 
   140011eed:	fmul   st,st(0)
   140011eef:	(bad)  
   140011ef0:	rex.RXB push r14
   140011ef2:	cli    
   140011ef3:	sbb    BYTE PTR [rip+0x1cb025b4],cl        # 0x15cb144ad
   140011ef9:	sbb    ah,ch
   140011efb:	xchg   ebp,eax
   140011efc:	cmp    eax,0xcacc5fb2
   140011f01:	fst    QWORD PTR [rsi+0x8]
   140011f04:	fcmove st,st(3)
   140011f06:	fisub  DWORD PTR [rip+0xfffffffff904a506]        # 0x13905c412
   140011f0c:	movabs al,ds:0xa3d88e7bf61fd664
   140011f15:	sbb    ecx,ebp
   140011f17:	rex.RXB (bad) 
   140011f19:	mov    BYTE PTR [rbx-0x2ea558cf],0x4b
   140011f20:	(bad)  
   140011f21:	xor    al,0x6d
   140011f24:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011f25:	shr    DWORD PTR [rax],cl
   140011f27:	(bad)  
   140011f28:	shr    DWORD PTR [rbx],0x12
   140011f2b:	push   rsi
   140011f2c:	adc    bl,dh
   140011f2e:	jl     0x140011edb
   140011f30:	adc    BYTE PTR [rax],bl
   140011f32:	ds nop
   140011f34:	shl    BYTE PTR [rbx],cl
   140011f36:	repnz div BYTE PTR [rdx]
   140011f39:	rex xchg eax,eax
   140011f3b:	repz std 
   140011f3d:	or     BYTE PTR [rcx+0x68],cl
   140011f40:	mov    ebx,0x7af1108a
   140011f45:	or     eax,0xc7f679b4
   140011f4a:	in     al,0xc5
   140011f4c:	(bad)  
   140011f4d:	jle    0x140011fa0
   140011f4f:	(bad)  
   140011f50:	sti    
   140011f51:	mul    DWORD PTR [rsp+rcx*4]
   140011f54:	lock jne 0x140011ee9
   140011f57:	(bad)  
   140011f58:	hlt    
   140011f59:	(bad)  
   140011f5a:	loopne 0x140011ef7
   140011f5c:	leave  
   140011f5d:	sub    eax,0x2c6f3ec8
   140011f62:	idiv   bh
   140011f64:	xchg   edx,eax
   140011f65:	fwait
   140011f66:	retf   0xa807
   140011f69:	mov    esi,DWORD PTR [rsi]
   140011f6b:	inc    BYTE PTR [rbx+0x2ae9b156]
   140011f71:	movabs ds:0x634bae16dfee8519,eax
   140011f7a:	mov    eax,0x3a168a41
   140011f7f:	int    0x3a
   140011f81:	shl    esi,0xf5
   140011f84:	in     eax,0xd0
   140011f86:	ds (bad) 
   140011f88:	loopne 0x140011feb
   140011f8a:	and    DWORD PTR [rdx+0x48],esi
   140011f8d:	and    eax,0x58ab4d33
   140011f92:	mov    dh,0xd4
   140011f94:	push   rdi
   140011f95:	enter  0xb52d,0xae
   140011f99:	sahf   
   140011f9a:	jno    0x140011f9a
   140011f9c:	mov    cl,0x77
   140011f9e:	movabs ds:0xede5817cbd33f71b,eax
   140011fa7:	push   rbx
   140011fa8:	mov    WORD PTR [rdi-0x50c8dd31],?
   140011fae:	rex.RB cli 
   140011fb0:	mov    cl,0xe1
   140011fb2:	(bad)  
   140011fb3:	(bad)  
   140011fb4:	cmp    al,0xff
   140011fb6:	ret    0xbfbc
   140011fb9:	(bad)  
   140011fba:	mov    esp,0x9bf6dc84
   140011fbf:	sbb    BYTE PTR cs:[rax+0x6e],0x8b
   140011fc4:	sub    DWORD PTR [rbp+0x7c],esi
   140011fc7:	scas   al,BYTE PTR es:[rdi]
   140011fc8:	sub    eax,0x89e525fb
   140011fcd:	jns    0x140011f8e
   140011fcf:	mov    bl,0x32
   140011fd1:	lahf   
   140011fd2:	int3   
   140011fd3:	(bad)  
   140011fd4:	(bad)  
   140011fd5:	mov    DWORD PTR [rbx],esp
   140011fd7:	nop
   140011fd8:	cmp    edi,edi
   140011fda:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011fdb:	adc    edi,DWORD PTR [rdx-0x19]
   140011fde:	mov    esp,0x96aac81d
   140011fe3:	xchg   esp,eax
   140011fe4:	xor    r8,r15
   140011fe7:	jg     0x140012057
   140011fe9:	cmp    BYTE PTR [rax-0x701bf25a],ch
   140011fef:	in     eax,0xe7
   140011ff1:	jb     0x14001201e
   140011ff3:	xor    DWORD PTR [rbp+0x2134a6ed],ebx
   140011ff9:	mov    ebx,0xc088b76
   140011ffe:	pshufw mm3,QWORD PTR [rsi-0x58],0x25
   140012003:	lods   al,BYTE PTR fs:[rsi]
   140012005:	ret    0xf8b9
   140012008:	adc    ebx,DWORD PTR [rdx+0x21501236]
   14001200e:	(bad)  
   14001200f:	and    BYTE PTR [rax-0x39],cl
   140012012:	test   al,0xb1
   140012014:	xor    eax,0xcbfd921
   140012019:	mov    dh,al
   14001201b:	test   al,0x60
   14001201d:	icebp  
   14001201e:	rex.WRB fdivr QWORD PTR [r8+0xe]
   140012022:	clc    
   140012023:	ins    DWORD PTR es:[rdi],dx
   140012024:	mov    esi,0x2dbbadb1
   140012029:	rcr    BYTE PTR [rbx],cl
   14001202b:	sbb    bh,0x4d
   14001202e:	outs   dx,BYTE PTR ds:[rsi]
   14001202f:	xchg   ecx,eax
   140012030:	idiv   DWORD PTR [rdi+0x7f7f2e47]
   140012036:	cmp    ebx,esp
   140012038:	(bad)  
   140012039:	or     BYTE PTR [rsi],cl
   14001203b:	(bad)
   14001203e:	adc    BYTE PTR [rdi+0x2b],bh
   140012041:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012042:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012043:	mov    dh,0x4b
   140012046:	stc    
   140012047:	in     al,dx
   140012048:	sbb    al,0x1f
   14001204a:	fisttp WORD PTR [rax+0x3a]
   14001204d:	and    DWORD PTR [rsi],edi
   14001204f:	(bad)  
   140012050:	xchg   edi,eax
   140012051:	fidiv  DWORD PTR [rdx]
   140012053:	pop    rax
   140012054:	sub    al,ah
   140012056:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012057:	mov    ebx,0xe52f8b13
   14001205c:	repz rex.X push 0x6bd26d1b
   140012063:	sub    DWORD PTR [rdx],ebp
   140012065:	movabs ds:0xcff7e7696905c801,al
   14001206f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012070:	rex.WR
   140012071:	ss out dx,eax
   140012073:	out    0xca,eax
   140012075:	xchg   ebx,eax
   140012076:	out    dx,eax
   140012077:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012078:	cwde   
   140012079:	int    0x68
   14001207b:	cs popf 
   14001207d:	(bad)  
   14001207e:	in     eax,dx
   14001207f:	loop   0x14001200c
   140012081:	adc    al,0x9
   140012083:	stc    
   140012084:	rex.WRXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140012086:	sub    al,0x92
   140012088:	not    DWORD PTR [rdi+0x3809fe08]
   14001208e:	rex.X
   14001208f:	rex.WRX pop rax
   140012091:	xor    ecx,DWORD PTR [rcx+0x2e]
   140012094:	sub    DWORD PTR [rcx],ecx
   140012096:	popf   
   140012097:	rcr    BYTE PTR [rax-0x1097900a],1
   14001209d:	in     al,dx
   14001209e:	ss je  0x14001203f
   1400120a1:	rex.WRXB add r10,r10
   1400120a4:	fwait
   1400120a5:	push   rdx
   1400120a6:	imul   edx,DWORD PTR [rax-0x4f8be47c],0x39d17983
   1400120b0:	and    ebx,DWORD PTR [rbx+0x71c734df]
   1400120b6:	nop
   1400120b7:	or     BYTE PTR [rdx],al
   1400120b9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400120ba:	push   rax
   1400120bb:	sub    BYTE PTR [rbp-0x79],bl
   1400120be:	pushf  
   1400120bf:	nop
   1400120c0:	ja     0x1400120f2
   1400120c2:	test   DWORD PTR [rsp+riz*4-0x5b87795e],esp
   1400120c9:	imul   ebp,DWORD PTR [rbp+rbp*1-0x3b],0x66
   1400120ce:	ins    BYTE PTR es:[rdi],dx
   1400120cf:	(bad)  
   1400120d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400120d1:	pushf  
   1400120d2:	mov    eax,0x2337ed0e
   1400120d7:	cld    
   1400120d8:	jns    0x140012101
   1400120da:	popf   
   1400120db:	and    esi,DWORD PTR [rdx-0x4b05db83]
   1400120e1:	pop    rbp
   1400120e2:	(bad)  
   1400120e3:	jl     0x14001212f
   1400120e5:	rex.WXB int3 
   1400120e7:	ds mov edi,0x5defecc6
   1400120ed:	movabs eax,ds:0xd0047b6e8292d19c
   1400120f6:	ja     0x1400120fb
   1400120f8:	jle    0x14001211d
   1400120fa:	imul   ebx,DWORD PTR [rcx+0x7ff4397e],0x1de37173
   140012104:	rex.XB popf 
   140012106:	std    
   140012107:	(bad)
   14001210c:	or     DWORD PTR [rsi-0x46],edi
   14001210f:	xchg   DWORD PTR [rdi+0x7de3dbee],ebx
   140012115:	mov    ch,BYTE PTR [rcx-0x64]
   140012118:	int3   
   140012119:	jrcxz  0x1400120c1
   14001211b:	jno    0x14001213f
   14001211d:	(bad)  
   14001211e:	lahf   
   14001211f:	rex.WRX jo 0x140012135
   140012122:	pop    rbx
   140012123:	xchg   ebp,eax
   140012124:	cmp    cl,BYTE PTR [ecx+0x29d3791d]
   14001212b:	cmp    bl,BYTE PTR [rbp+0x42536612]
   140012131:	cmp    eax,0xe938eb41
   140012136:	(bad)  
   140012137:	jmp    0x140012117
   140012139:	jae    0x1400120fc
   14001213b:	pop    rdx
   14001213c:	jp     0x140012181
   14001213e:	sbb    eax,0x1ca9ffb9
   140012143:	cwde   
   140012144:	cwde   
   140012145:	test   BYTE PTR [rbp+0x1a],dh
   140012148:	or     DWORD PTR [rsi-0x39],edx
   14001214b:	rex.W and al,BYTE PTR [rbx-0x3b572e7a]
   140012152:	hlt    
   140012153:	add    DWORD PTR [rax+0x2],ebp
   140012156:	test   DWORD PTR [rdx],ebp
   140012158:	pop    rbx
   140012159:	iret   
   14001215a:	jl     0x140012164
   14001215c:	push   rsi
   14001215d:	(bad)  
   14001215e:	push   rdx
   14001215f:	pop    rdi
   140012160:	(bad)  [rdx+0x75]
   140012163:	sti    
   140012164:	adc    al,0xc3
   140012166:	rex.WXB out 0x71,eax
   140012169:	mov    ebx,0x9ff223d7
   14001216e:	rex.XB pop r9
   140012170:	imul   edi,edx,0x11
   140012173:	leave  
   140012174:	movabs eax,ds:0x2de671fc473093bf
   14001217d:	fisttp DWORD PTR [rcx-0x41]
   140012180:	xchg   edx,eax
   140012181:	ret    
   140012182:	jp     0x1400121cb
   140012184:	(bad)  
   140012185:	std    
   140012186:	outs   dx,DWORD PTR ds:[rsi]
   140012187:	cmp    eax,0xa7a10924
   14001218c:	push   rbx
   14001218d:	or     eax,0xe77fb948
   140012192:	jge    0x1400121bd
   140012194:	jne    0x140012186
   140012196:	imul   esi,DWORD PTR [rsi],0xc80f0760
   14001219c:	(bad)  
   14001219d:	and    eax,ebx
   14001219f:	jrcxz  0x140012135
   1400121a1:	retf   
   1400121a2:	(bad)  
   1400121a3:	in     eax,0xcf
   1400121a5:	xchg   BYTE PTR [rbx],ah
   1400121a7:	test   esi,edi
   1400121a9:	sar    dh,cl
   1400121ab:	popf   
   1400121ac:	pop    rdi
   1400121ad:	imul   edx,ebx,0xffffff86
   1400121b0:	mov    ecx,0xba292320
   1400121b5:	in     eax,0x1f
   1400121b7:	jns    0x1400121e9
   1400121b9:	rex.W (bad) 
   1400121bb:	sub    dl,BYTE PTR [rcx]
   1400121bd:	addr32 mov esi,es
   1400121c0:	(bad)  
   1400121c1:	jne    0x14001220b
   1400121c3:	movs   BYTE PTR es:[rdi],BYTE PTR ss:[rsi]
   1400121c5:	and    DWORD PTR [rbx+0x70],0xffffffe0
   1400121c9:	pop    rdx
   1400121ca:	mov    ah,0x47
   1400121cc:	fiadd  WORD PTR [rip+0xfffffffff0929547]        # 0x13093b719
   1400121d2:	(bad)  
   1400121d3:	iret   
   1400121d4:	retf   
   1400121d5:	xlat   BYTE PTR ds:[rbx]
   1400121d6:	fmulp  st(6),st
   1400121d8:	jmp    0x140012186
   1400121da:	rex.XB mov r8b,0x8f
   1400121dd:	add    BYTE PTR [rsi+0x25],ch
   1400121e0:	mov    bh,0x68
   1400121e2:	lock cmp DWORD PTR [rsi-0x1ed17020],edi
   1400121e9:	jg     0x140012224
   1400121eb:	mov    eax,0xd8d306c1
   1400121f0:	(bad)  
   1400121f1:	sbb    esi,DWORD PTR [rbx-0xf]
   1400121f4:	js     0x140012219
   1400121f6:	rex.RXB jbe 0x140012261
   1400121f9:	repnz shl dh,1
   1400121fc:	jge    0x140012270
   1400121fe:	and    DWORD PTR [rdx-0x10b068a5],edi
   140012204:	mov    cl,0xe8
   140012206:	sar    BYTE PTR [rsp+rdi*2],0xfa
   14001220a:	pop    rbx
   14001220b:	rex.X stos BYTE PTR es:[rdi],al
   14001220d:	cmps   DWORD PTR gs:[rsi],DWORD PTR es:[rdi]
   14001220f:	xchg   ebp,eax
   140012210:	jp     0x1400121a7
   140012212:	outs   dx,BYTE PTR ds:[rsi]
   140012213:	(bad)  
   140012214:	sub    al,0xe9
   140012216:	mov    ecx,0x597bc924
   14001221b:	(bad)  
   14001221c:	xchg   ecx,eax
   14001221d:	(bad)  
   14001221e:	enter  0x274d,0xec
   140012222:	sbb    eax,0xdf97237f
   140012227:	clc    
   140012228:	sub    al,0xd5
   14001222a:	fs (bad) 
   14001222c:	mov    dh,0x5f
   14001222e:	movs   DWORD PTR es:[rdi],DWORD PTR fs:[rsi]
   140012230:	jrcxz  0x14001222f
   140012232:	movsxd eax,DWORD PTR [rdi]
   140012234:	pop    rsp
   140012235:	(bad)  
   140012236:	jge    0x140012245
   140012238:	(bad)  
   140012239:	stc    
   14001223a:	ja     0x140012250
   14001223c:	stos   BYTE PTR es:[rdi],al
   14001223d:	adc    al,0x4e
   14001223f:	jae    0x14001221a
   140012241:	(bad)  
   140012242:	scas   eax,DWORD PTR es:[rdi]
   140012243:	not    DWORD PTR [rdi+0x18a8f751]
   140012249:	sbb    DWORD PTR [rsp+rsi*4],eax
   14001224c:	test   DWORD PTR [rcx],0x4c6f68ed
   140012252:	jno    0x14001228c
   140012254:	mov    al,0xea
   140012256:	(bad)  
   140012257:	mov    ebp,0x292835b1
   14001225c:	(bad)  
   14001225d:	outs   dx,BYTE PTR ds:[rsi]
   14001225e:	and    DWORD PTR [rcx+rcx*8+0x3a],ecx
   140012262:	sub    al,0x59
   140012264:	loope  0x14001221a
   140012266:	jae    0x140012256
   140012268:	xchg   edx,eax
   140012269:	rex.XB sti 
   14001226b:	xchg   esp,eax
   14001226c:	adc    eax,0x1c7cb9b4
   140012271:	mul    cl
   140012273:	sub    al,0x5d
   140012275:	mov    bh,bl
   140012277:	iret   
   140012278:	xchg   ebp,eax
   140012279:	xchg   edx,eax
   14001227a:	mov    eax,0x3fe103f5
   14001227f:	pop    rcx
   140012280:	xor    DWORD PTR [rip+0xffffffffef35230d],0x1d88e2f        # 0x12f364597
   14001228a:	enter  0xe37c,0x53
   14001228e:	fwait
   14001228f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012290:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012291:	(bad)  
   140012292:	mov    esi,0xc250f2b3
   140012297:	ins    BYTE PTR es:[rdi],dx
   140012298:	movabs al,ds:0x9b909d19094e41dd
   1400122a1:	lahf   
   1400122a2:	add    esi,edi
   1400122a4:	(bad)  
   1400122a5:	pop    rsi
   1400122a6:	rex.RXB imul r8d,DWORD PTR [r8+0x6f],0x7adc9200
   1400122ae:	push   rbp
   1400122af:	pop    rsi
   1400122b0:	sete   bl
   1400122b3:	stos   BYTE PTR es:[rdi],al
   1400122b4:	sbb    al,0xdd
   1400122b6:	mov    edi,0xdcd7f4b9
   1400122bb:	cs rex.WRXB jmp 0x1400122bd
   1400122bf:	scas   al,BYTE PTR es:[rdi]
   1400122c0:	rex.WRB popf 
   1400122c2:	or     ch,al
   1400122c4:	fs (bad) 
   1400122c6:	(bad)  
   1400122c7:	out    0xec,eax
   1400122c9:	sbb    BYTE PTR [rsi+0x39],0xff
   1400122cd:	jmp    0x1400122bf
   1400122cf:	out    dx,eax
   1400122d0:	adc    esi,DWORD PTR [rdi-0x23]
   1400122d3:	(bad)  
   1400122d4:	xor    r8b,BYTE PTR [rdx+0x6f]
   1400122d8:	(bad)  
   1400122d9:	and    BYTE PTR [rbx+0x2a52d6],dh
   1400122df:	sbb    eax,0x64ff8fa5
   1400122e4:	or     al,0x21
   1400122e6:	add    eax,0xdb6fe9ae
   1400122eb:	xchg   edi,eax
   1400122ec:	rex retf 
   1400122ee:	xchg   BYTE PTR [rbx+0x2],ch
   1400122f1:	(bad)  
   1400122f2:	jnp    0x1400122c2
   1400122f4:	mov    esp,0xc2dc39f5
   1400122f9:	sbb    dh,ch
   1400122fb:	(bad)
   1400122fe:	fidivr DWORD PTR [rsi]
   140012300:	int    0xf0
   140012302:	mov    dl,0x79
   140012304:	jmp    QWORD PTR [rsi-0x26]
   140012307:	cs jg  0x140012377
   14001230a:	cmp    al,0x7f
   14001230c:	(bad)  
   14001230d:	mov    dh,0xca
   14001230f:	(bad)  
   140012310:	loopne 0x140012346
   140012312:	loopne 0x140012381
   140012314:	xchg   ecx,eax
   140012315:	mov    WORD PTR [rsp+rsi*8+0xf936dc9],gs
   14001231c:	and    esp,DWORD PTR [rdx+0x10]
   14001231f:	or     ebp,eax
   140012321:	cmp    esi,DWORD PTR [rax]
   140012323:	leave  
   140012324:	(bad)  
   140012325:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012326:	rcr    BYTE PTR [rcx-0x2e],0xb6
   14001232a:	adc    cl,bl
   14001232c:	(bad)  
   14001232d:	xchg   esp,eax
   14001232e:	rex.WRX
   14001232f:	imul   rdx,QWORD PTR [rbx+rdx*8],0xffffffffffffffce
   140012334:	push   rdx
   140012335:	pop    rdx
   140012336:	sar    DWORD PTR [rcx],1
   140012338:	(bad)
   14001233b:	push   rsi
   14001233c:	icebp  
   14001233d:	and    eax,0xa3353d1b
   140012342:	(bad)  
   140012343:	adc    cl,bl
   140012345:	sbb    DWORD PTR [rcx-0x35],0x8d12b7d3
   14001234c:	rex.WR movabs rbx,0xb8b812779a1b6866
   140012356:	or     eax,0xd90daec1
   14001235b:	sbb    BYTE PTR [rax],bh
   14001235d:	(bad)  
   14001235e:	rex.W mov bpl,bpl
   140012361:	shr    DWORD PTR [rdx+0x4c],0xcb
   140012365:	rex.WRX
   140012366:	rex xchg eax,eax
   140012368:	jne    0x140012329
   14001236a:	or     edi,DWORD PTR [rax]
   14001236c:	cmp    ah,BYTE PTR [rdx]
   14001236e:	es cdq 
   140012370:	rex.WX test QWORD PTR [rsi],rcx
   140012373:	gs rex.B
   140012375:	fwait
   140012376:	(bad)  
   140012377:	jge    0x140012310
   140012379:	pop    rsp
   14001237a:	clc    
   14001237b:	(bad)  
   14001237d:	rex.X (bad) 
   14001237f:	ins    BYTE PTR es:[rdi],dx
   140012380:	xchg   ecx,eax
   140012381:	rol    al,0xdb
   140012384:	pushf  
   140012385:	(bad)  
   140012386:	hlt    
   140012387:	(bad)  
   140012388:	loopne 0x140012360
   14001238a:	mov    bl,BYTE PTR [rdi-0x4841006b]
   140012390:	mov    esi,0xcba3fefb
   140012395:	ret    
   140012396:	(bad)  
   140012397:	push   rbp
   140012398:	pop    rsp
   140012399:	jp     0x140012384
   14001239b:	mov    esp,DWORD PTR [rdx+0xa9c4db5]
   1400123a1:	xor    al,0xa1
   1400123a3:	shl    DWORD PTR [rdi-0x2139a4cf],0xcb
   1400123aa:	(bad)  
   1400123ab:	(bad)  
   1400123ac:	in     al,dx
   1400123ad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400123ae:	mov    ds,esi
   1400123b0:	(bad)  
   1400123b1:	xchg   ecx,eax
   1400123b2:	sbb    eax,0x65ec6673
   1400123b7:	jnp    0x14001238a
   1400123b9:	xor    DWORD PTR [rsi],eax
   1400123bb:	cdq    
   1400123bc:	(bad)
   1400123bf:	shl    dl,1
   1400123c1:	add    dh,dh
   1400123c3:	neg    DWORD PTR [esi-0x77]
   1400123c7:	pop    rax
   1400123c8:	rex.XB mov r12d,0x314e64f3
   1400123ce:	adc    eax,0xf6b94e99
   1400123d3:	clc    
   1400123d4:	cmp    edi,DWORD PTR [rcx+0x307786fe]
   1400123da:	fidivr WORD PTR [rdi-0x7e812077]
   1400123e0:	in     eax,0xed
   1400123e2:	xor    edx,DWORD PTR [rdi+rdx*2]
   1400123e5:	mov    bh,0xa1
   1400123e7:	fimul  WORD PTR [rbx+0x76112296]
   1400123ed:	and    eax,0xa6c47f11
   1400123f2:	std    
   1400123f3:	mov    dh,0xd3
   1400123f5:	jle    0x1400123b1
   1400123f7:	fimul  WORD PTR [rdi]
   1400123f9:	imul   ebp,DWORD PTR [rcx],0x50036dc0
   1400123ff:	jmp    0x1400123e6
   140012401:	repz movabs al,ds:0x4459f7a40466c14c
   14001240b:	ror    BYTE PTR [rcx+0x1],1
   14001240e:	pop    rdx
   14001240f:	loopne 0x140012441
   140012411:	sbb    bl,BYTE PTR [rdi-0x6d8f4712]
   140012417:	icebp  
   140012418:	xor    BYTE PTR [rdx],bl
   14001241a:	scas   eax,DWORD PTR es:[rdi]
   14001241b:	fs fcmovnbe st,st(0)
   14001241e:	push   rcx
   14001241f:	xlat   BYTE PTR ds:[rbx]
   140012420:	pop    rsp
   140012421:	jne    0x14001240c
   140012423:	pop    rsp
   140012424:	imul   esi,DWORD PTR [rbx],0x7e
   140012427:	jmp    0xff957e5c
   14001242c:	jnp    0x140012457
   14001242e:	(bad)  [rbp-0x1cbaaff]
   140012434:	in     al,0xa8
   140012436:	and    BYTE PTR [rdx+0x9],dh
   140012439:	xchg   edx,eax
   14001243a:	xchg   ecx,eax
   14001243b:	adc    bh,ah
   14001243d:	adc    BYTE PTR [rdi+0x6b6808a6],dl
   140012443:	out    0x92,eax
   140012445:	xchg   ecx,eax
   140012446:	mov    al,0xe8
   140012448:	(bad)  
   140012449:	mov    ecx,0xf60838b8
   14001244e:	fucom  st(6)
   140012450:	push   0x1fb7d346
   140012455:	lahf   
   140012456:	rex.RXB movabs al,ds:0x2ff9deb629fe3c20
   140012460:	cmp    dl,dh
   140012462:	mov    edi,0x6e034dd2
   140012467:	movsxd esi,DWORD PTR [rip+0x35dee0]        # 0x14037034d
   14001246d:	repz retf 
   14001246f:	je     0x14001248e
   140012471:	push   rsp
   140012472:	jl     0x140012473
   140012474:	in     al,dx
   140012475:	addr32 mov esi,0x6d64ecf0
   14001247b:	repz mov esi,DWORD PTR [rbp-0x2a348836]
   140012482:	or     eax,DWORD PTR [rdi+0x74]
   140012485:	imul   DWORD PTR [rdx]
   140012487:	pop    rdx
   140012488:	out    dx,eax
   140012489:	(bad)  
   14001248a:	fwait
   14001248b:	mov    bl,0x69
   14001248d:	push   0xffffffffe282069a
   140012492:	lods   eax,DWORD PTR ds:[rsi]
   140012493:	pushf  
   140012494:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012495:	sbb    ah,BYTE PTR [rdi-0x10]
   140012498:	int    0x95
   14001249a:	lods   al,BYTE PTR ds:[rsi]
   14001249b:	mov    edx,0xb4002c92
   1400124a0:	ficomp WORD PTR [rax+rsi*1-0x12]
   1400124a4:	jle    0x1400124e1
   1400124a6:	test   DWORD PTR cs:[ecx+ebx*2+0x3f8853a7],esi
   1400124af:	out    0xf0,eax
   1400124b1:	xchg   ebx,eax
   1400124b2:	(bad)  
   1400124b3:	or     edx,DWORD PTR [rsi]
   1400124b5:	jne    0x14001246d
   1400124b7:	(bad)  
   1400124b8:	test   DWORD PTR [rsi-0x7a],esp
   1400124bb:	or     al,0xc7
   1400124bd:	pushf  
   1400124be:	jns    0x1400124ab
   1400124c0:	(bad)  
   1400124c1:	sbb    DWORD PTR [rbx+rcx*1+0x34],edx
   1400124c5:	(bad)  
   1400124c6:	sahf   
   1400124c7:	addr32 jae 0x1400124b5
   1400124ca:	xor    al,0xd5
   1400124cc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400124cd:	repz enter 0xdfe,0xd0
   1400124d2:	pop    rcx
   1400124d3:	sbb    esp,DWORD PTR [rdx+0x63]
   1400124d6:	adc    edi,DWORD PTR [rsi+0x24]
   1400124d9:	sar    DWORD PTR [rsi-0x2d],1
   1400124dc:	ror    BYTE PTR [rdi+0x5dcc6258],0x7b
   1400124e3:	popf   
   1400124e4:	mov    esp,0x4723593d
   1400124e9:	rex.X clc 
   1400124eb:	fninit 
   1400124ed:	rex.WX cmp BYTE PTR [rdx+0x76],0xf7
   1400124f2:	xchg   edx,eax
   1400124f3:	push   rdx
   1400124f4:	add    BYTE PTR [rip+0xffffffff8ab706b5],ah        # 0xcab82baf
   1400124fa:	adc    al,0x7f
   1400124fc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400124fd:	push   rsp
   1400124fe:	cmp    eax,0x3af9bd1b
   140012503:	movabs eax,ds:0xc591ae90231dab3d
   14001250c:	icebp  
   14001250d:	sub    ebp,ecx
   14001250f:	rex.WX (bad) 
   140012511:	rcl    BYTE PTR [rsi+rcx*2+0x7778db4],1
   140012518:	ror    DWORD PTR [rbx],cl
   14001251a:	xor    eax,0x6307c23
   14001251f:	iret   
   140012520:	jg     0x14001255d
   140012522:	jmp    0x16ad97ad3
   140012527:	jge    0x1400124dd
   140012529:	jns    0x140012594
   14001252b:	mov    WORD PTR [rax-0x56],ds
   14001252e:	cmc    
   14001252f:	mov    bh,0xc7
   140012531:	and    al,0x29
   140012533:	in     al,0xcf
   140012535:	push   rsi
   140012536:	test   al,0xb3
   140012538:	in     eax,0xf8
   14001253a:	mov    edx,0xbbff631c
   14001253f:	cmp    edi,0x46d1980d
   140012545:	add    DWORD PTR [rdi+0x32dee4d],esi
   14001254b:	lock lea edi,[rbp+0x23fc03bd]
   140012552:	iret   
   140012553:	mov    esp,0x47c1ed7d
   140012558:	(bad)  
   140012559:	sti    
   14001255a:	push   rsp
   14001255b:	xor    eax,0xfbd97d1e
   140012560:	(bad)  
   140012561:	cmp    eax,0xb858ae7b
   140012566:	mov    fs,WORD PTR [rbx+0x5612af19]
   14001256c:	(bad)  
   14001256d:	jrcxz  0x14001250a
   14001256f:	cdq    
   140012570:	and    eax,edi
   140012572:	mov    cl,0xcb
   140012574:	(bad)  
   140012575:	adc    BYTE PTR [rbx+rbp*2+0x259e89af],ch
   14001257c:	sub    BYTE PTR [rdx-0x39],dl
   14001257f:	leave  
   140012580:	cmp    al,0xa2
   140012582:	test   eax,0x98f6cce3
   140012587:	jb     0x140012607
   140012589:	xchg   edx,eax
   14001258a:	(bad)  
   14001258b:	vhsubps xmm5,xmm12,XMMWORD PTR [rsi]
   14001258f:	xchg   edi,eax
   140012590:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012591:	movabs ds:0xf9496b18e687ede0,eax
   14001259a:	movabs ds:0xb099ae2884d3744e,eax
   1400125a3:	std    
   1400125a4:	clc    
   1400125a5:	(bad)  
   1400125a6:	fnstcw WORD PTR [rdi]
   1400125a8:	icebp  
   1400125a9:	or     al,0xc3
   1400125ab:	pop    rbp
   1400125ac:	sbb    esi,ebx
   1400125ae:	mov    ebp,0xc6fe32fd
   1400125b3:	adc    eax,0xc89d27a8
   1400125b8:	and    al,0xba
   1400125ba:	(bad)
   1400125bd:	ja     0x140012637
   1400125bf:	xor    eax,0x7fd09fef
   1400125c4:	imul   ebp,DWORD PTR [rdi],0x62e0f44c
   1400125ca:	rex.RX mov DWORD PTR [rdx],0xce3f217c
   1400125d1:	movabs al,ds:0x4a7cc0191c9e7e5f
   1400125da:	sar    BYTE PTR [rdx-0x5],1
   1400125dd:	jns    0x140012641
   1400125df:	push   rax
   1400125e0:	mov    dl,0x8
   1400125e2:	jae    0x14001262e
   1400125e4:	sbb    DWORD PTR [rcx+rbp*1],edx
   1400125e7:	adc    cl,BYTE PTR [rcx-0x33a8d5d9]
   1400125ed:	jmp    0x14001262a
   1400125ef:	sbb    al,0x4
   1400125f1:	mov    ch,0x9c
   1400125f3:	lahf   
   1400125f4:	js     0x140012633
   1400125f6:	push   rdx
   1400125f7:	addr32 jno 0x140012645
   1400125fa:	and    DWORD PTR [rsi-0x2d],ebp
   1400125fd:	scas   eax,DWORD PTR es:[rdi]
   1400125fe:	xchg   esp,eax
   1400125ff:	sub    bl,BYTE PTR [rcx+0x7f5f5aaa]
   140012605:	mov    edx,0x9fe86d70
   14001260a:	xor    DWORD PTR [rdx],eax
   14001260c:	or     DWORD PTR [rax+0x62],0xffffffd4
   140012610:	(bad)
   140012615:	add    BYTE PTR [rax+0x4750230],dl
   14001261b:	or     DWORD PTR [rcx+0x88e4474],ebx
   140012621:	or     al,0xdf
   140012623:	rex.W cmp BYTE PTR [rax],al
   140012626:	xor    BYTE PTR [rdx+0x720fc0fe],ah
   14001262c:	out    0xf0,al
   14001262e:	(bad)  
   14001262f:	in     al,0xc4
   140012631:	rex.WXB
   140012632:	rex
   140012633:	rex.WRB mov WORD PTR [r10],es
   140012636:	outs   dx,BYTE PTR ds:[rsi]
   140012637:	pop    rbx
   140012638:	xchg   eax,esp
   14001263a:	mov    ebp,0x89be0061
   14001263f:	mov    bh,0x7f
   140012641:	mul    DWORD PTR [rdi+0x78d4ff3f]
   140012647:	gs in  eax,dx
   140012649:	jae    0x1400126a0
   14001264b:	xor    eax,0xbbd29efc
   140012650:	(bad)  
   140012651:	and    DWORD PTR ss:[rax],esp
   140012654:	movabs eax,ds:0xe2cec15de09eb166
   14001265d:	and    dl,bl
   14001265f:	loop   0x1400126a2
   140012661:	mov    ah,0xa8
   140012663:	sub    BYTE PTR [rdi],ch
   140012665:	popf   
   140012666:	mov    ebx,esp
   140012668:	mov    eax,0x666f850c
   14001266d:	or     eax,0xbbfad53e
   140012672:	lods   al,BYTE PTR ds:[rsi]
   140012673:	mov    ebp,0x460f8666
   140012678:	fdiv   DWORD PTR [rcx]
   14001267a:	sub    edx,DWORD PTR [rax-0xd671c47]
   140012680:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012681:	in     eax,0xad
   140012683:	repz pop rbp
   140012685:	scas   eax,DWORD PTR es:[rdi]
   140012686:	jmp    0xe6e04c29
   14001268b:	fnsave [rdx+0x17]
   14001268e:	popf   
   14001268f:	sbb    ecx,DWORD PTR [rsi+rsi*8-0x2dcc13b1]
   140012696:	(bad)  
   140012697:	test   ch,ah
   140012699:	rex.WRB (bad) 
   14001269b:	mov    esp,0x9c0c13e5
   1400126a0:	rex.RXB scas eax,DWORD PTR es:[rdi]
   1400126a2:	pushf  
   1400126a3:	gs jne 0x1400126a1
   1400126a6:	rex.RB stos BYTE PTR es:[rdi],al
   1400126a8:	sub    edx,DWORD PTR [rdi]
   1400126aa:	ficomp DWORD PTR [rcx+0x7f]
   1400126ad:	adc    dh,BYTE PTR [rbx]
   1400126af:	rcl    BYTE PTR [rbx+rax*8-0x85d1de9],cl
   1400126b6:	push   rdi
   1400126b7:	lods   al,BYTE PTR ds:[rsi]
   1400126b8:	out    0xbf,eax
   1400126ba:	mov    bl,0xd2
   1400126bc:	(bad)  
   1400126bd:	mov    ah,0xde
   1400126bf:	(bad)  
   1400126c1:	pop    rbx
   1400126c2:	pop    rcx
   1400126c3:	mov    ecx,0x2ec6b2b3
   1400126c8:	cmp    cl,cl
   1400126ca:	rex.XB
   1400126cb:	rex.X cmp al,bl
   1400126ce:	(bad)  
   1400126cf:	movabs eax,ds:0xefa48028da45fb45
   1400126d8:	lods   eax,DWORD PTR ds:[rsi]
   1400126d9:	(bad)  
   1400126da:	outs   dx,BYTE PTR ds:[rsi]
   1400126db:	fwait
   1400126dc:	mov    edx,edx
   1400126de:	adc    edx,edx
   1400126e0:	(bad)  
   1400126e1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400126e2:	push   rsi
   1400126e3:	loope  0x1400126d2
   1400126e5:	fstp   QWORD PTR [rbp-0x6692eaf5]
   1400126eb:	sbb    eax,0x6fab58a3
   1400126f0:	(bad)  
   1400126f1:	(bad)  
   1400126f2:	ins    BYTE PTR es:[rdi],dx
   1400126f3:	pop    rbx
   1400126f4:	outs   dx,BYTE PTR ds:[rsi]
   1400126f5:	or     eax,0x79213a44
   1400126fa:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400126fb:	mov    esi,0xace35e49
   140012700:	cmp    eax,0x889756f
   140012705:	imul   r15d,DWORD PTR [rax+0x3592373a],0x24
   14001270d:	and    bx,WORD PTR [rbp*2+0x395a3473]
   140012715:	movabs ds:0x41fe3c25e2409033,al
   14001271e:	mov    ecx,0xa87fe1f4
   140012723:	(bad)  
   140012724:	(bad)  
   140012725:	xor    DWORD PTR [rbp-0x7fac1283],ebp
   14001272b:	push   rdi
   14001272c:	pop    rbp
   14001272d:	mov    esi,0xe87fb789
   140012732:	lods   eax,DWORD PTR ds:[rsi]
   140012733:	out    dx,eax
   140012734:	pop    rsp
   140012735:	cmp    edx,esi
   140012737:	enter  0xef63,0x1b
   14001273b:	(bad)  
   14001273c:	sub    al,0x7f
   14001273e:	(bad)  
   14001273f:	(bad)  
   140012740:	in     eax,0xfb
   140012742:	(bad)  
   140012743:	mov    al,0x11
   140012745:	or     eax,0x570e475
   14001274a:	(bad)  
   14001274b:	jle    0x140012789
   14001274d:	push   0x26
   14001274f:	push   rsp
   140012750:	movabs eax,ds:0xba9c79b7b25546e6
   140012759:	sub    BYTE PTR [rcx],dl
   14001275b:	out    0x23,eax
   14001275d:	gs mov bh,0xa9
   140012760:	movabs eax,ds:0xec17134d140869a9
   140012769:	int3   
   14001276a:	imul   ebp,esi,0x29
   14001276d:	rex.WX sbb rax,0x6d08ae17
   140012773:	push   0x30
   140012775:	test   DWORD PTR [rbp-0x59],0x1d8bbeaf
   14001277c:	nop
   14001277d:	adc    al,0xbe
   14001277f:	cmp    eax,DWORD PTR [rdx+0x3c]
   140012782:	jns    0x140012783
   140012784:	or     DWORD PTR [rdx+0x2a88f9d0],0x5e
   14001278b:	imul   ecx,esi,0xffffffbc
   14001278e:	in     eax,0xa3
   140012790:	xor    al,0x87
   140012792:	fild   WORD PTR [rax-0x5a7a8645]
   140012798:	mov    esp,DWORD PTR [rdi+0x167cb858]
   14001279e:	mov    bh,0x73
   1400127a0:	add    eax,0xb42404c2
   1400127a5:	sahf   
   1400127a6:	xchg   ecx,eax
   1400127a7:	fsub   st,st(3)
   1400127a9:	out    dx,eax
   1400127aa:	and    eax,0x304fd35
   1400127af:	add    DWORD PTR [rbp-0x2c4a01bb],esi
   1400127b5:	(bad)  
   1400127b6:	rex.XB push r12
   1400127b8:	add    BYTE PTR [rdi+0x7d7915ee],ah
   1400127be:	or     DWORD PTR cs:[rcx-0x2069317b],0xffffffa7
   1400127c6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400127c7:	ret    0x5245
   1400127ca:	push   rbp
   1400127cb:	movabs al,ds:0x2d9fde5a19e232fd
   1400127d4:	rex.X (bad) 
   1400127d6:	xchg   esp,eax
   1400127d7:	rex.WRXB (bad) 
   1400127d9:	jg     0x140012856
   1400127db:	mov    ?,ecx
   1400127dd:	push   rdx
   1400127de:	in     al,0x32
   1400127e0:	movabs al,ds:0x84185b75f93e8101
   1400127e9:	ss fcmovbe st,st(2)
   1400127ec:	(bad)  
   1400127ed:	push   rdi
   1400127ee:	jb     0x14001281e
   1400127f0:	pop    rsp
   1400127f1:	out    dx,eax
   1400127f2:	pop    rsi
   1400127f3:	mov    edx,0xfbaf8b0e
   1400127f8:	(bad)  
   1400127f9:	mov    BYTE PTR [rbp-0x6e7d92cf],dl
   1400127ff:	adc    eax,ecx
   140012801:	mov    eax,esi
   140012803:	mov    ebx,0x25f9b323
   140012808:	(bad)  
   140012809:	add    al,0xf6
   14001280b:	and    DWORD PTR [rbx],ecx
   14001280d:	or     al,0xda
   14001280f:	enter  0x25ad,0x31
   140012813:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012814:	jae    0x140012866
   140012816:	(bad)  
   140012817:	jne    0x14001280b
   140012819:	rex.WB loopne 0x14001289b
   14001281c:	movabs ds:0xee5db7fbac92141d,al
   140012825:	add    esi,DWORD PTR ds:[rax]
   140012828:	scas   eax,DWORD PTR es:[rdi]
   140012829:	clc    
   14001282a:	out    dx,al
   14001282b:	ror    BYTE PTR [rdi-0x601c1981],0x7d
   140012832:	ret    
   140012833:	repnz loope 0x1400127d9
   140012836:	lahf   
   140012837:	scas   eax,DWORD PTR es:[rdi]
   140012838:	(bad)  
   140012839:	or     edi,0xffffffab
   14001283c:	(bad)  
   14001283d:	ficomp WORD PTR [rsi-0x6c5989c4]
   140012843:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012844:	cmp    al,0xdd
   140012846:	(bad)  
   140012847:	push   rbp
   140012848:	sbb    al,0x45
   14001284a:	test   al,0x59
   14001284c:	ins    DWORD PTR es:[rdi],dx
   14001284d:	data16 mov WORD PTR [rbp+rax*8-0x73],ds
   140012852:	(bad)  
   140012853:	movabs ds:0x1d291497c2928acc,eax
   14001285c:	rol    BYTE PTR [rax+0x30],1
   14001285f:	(bad)  
   140012860:	mov    edi,0xaa1fa75a
   140012865:	add    al,0xd
   140012867:	mov    cl,0x3d
   140012869:	pop    rax
   14001286a:	adc    eax,0x93409ad5
   14001286f:	xchg   ebp,eax
   140012870:	mov    ebx,0xeb7aa7d3
   140012875:	out    0x52,eax
   140012877:	sub    BYTE PTR [rbx+0x20],bh
   14001287a:	rex.XB pushf 
   14001287c:	sti    
   14001287d:	rex.W jbe 0x1400128fd
   140012880:	loopne 0x1400128e8
   140012882:	sti    
   140012883:	in     al,dx
   140012884:	sahf   
   140012885:	js     0x140012809
   140012887:	jae    0x1400128d8
   140012889:	(bad)  
   14001288a:	(bad)  
   14001288b:	push   rax
   14001288c:	add    ebx,DWORD PTR [rdx+rdi*2-0x77]
   140012890:	(bad)  
   140012891:	mov    esp,DWORD PTR [rdi-0x3ba351d7]
   140012897:	in     eax,dx
   140012898:	out    dx,eax
   140012899:	and    dl,bl
   14001289b:	sbb    cl,ch
   14001289d:	xlat   BYTE PTR ds:[rbx]
   14001289e:	fldcw  WORD PTR [rsi-0x3b1cb1fe]
   1400128a4:	lahf   
   1400128a5:	fsubr  st,st(5)
   1400128a7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400128a8:	cdq    
   1400128a9:	cmc    
   1400128aa:	xchg   edi,eax
   1400128ab:	sub    ah,BYTE PTR [rdx+0xe]
   1400128ae:	jb     0x140012867
   1400128b0:	popf   
   1400128b1:	jp     0x140012899
   1400128b3:	mov    esp,0x45d70a7e
   1400128b8:	call   0xd514cb69
   1400128bd:	ds (bad) 
   1400128bf:	std    
   1400128c0:	je     0x14001285f
   1400128c2:	xor    BYTE PTR [rdi],bh
   1400128c4:	jns    0x1400128c2
   1400128c6:	rex cmp esp,DWORD PTR [rsi]
   1400128c9:	sub    al,0x1a
   1400128cb:	sbb    DWORD PTR [rsp+rbp*4+0x64],eax
   1400128cf:	rex.RXB stos DWORD PTR es:[rdi],eax
   1400128d1:	sub    cl,ch
   1400128d3:	jno    0x1400128dc
   1400128d5:	sub    BYTE PTR [rax-0x35],dl
   1400128d8:	mov    cl,0xb3
   1400128da:	icebp  
   1400128db:	retf   
   1400128dc:	cmp    BYTE PTR [rax+0x1b],al
   1400128df:	shr    BYTE PTR [rbx],cl
   1400128e1:	sub    DWORD PTR [rip+0xffffffff88a68368],edx        # 0xc8a7ac4f
   1400128e7:	(bad)  
   1400128e8:	mov    eax,0x2818edbc
   1400128ed:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400128ee:	hlt    
   1400128ef:	rex.WR ins DWORD PTR es:[rdi],dx
   1400128f1:	adc    DWORD PTR [rsi],0x9e3edebb
   1400128f7:	rex.WXB movabs r11,0xfc431e5a6afa5864
   140012901:	ins    DWORD PTR es:[rdi],dx
   140012902:	and    al,0x2f
   140012904:	rex.RXB pop r11
   140012906:	jne    0x140012950
   140012908:	xchg   DWORD PTR [rbp-0x39],ebp
   14001290b:	sbb    esp,ebp
   14001290d:	sub    dl,dh
   14001290f:	xor    DWORD PTR [rdi+0x52],esi
   140012912:	ret    0x36a1
   140012915:	(bad)  
   140012916:	std    
   140012917:	sub    ecx,edi
   140012919:	cli    
   14001291a:	rex.XB jg 0x140012968
   14001291d:	(bad)  
   14001291e:	stc    
   14001291f:	sbb    dh,BYTE PTR [rdi+0x777c1a99]
   140012925:	sbb    BYTE PTR [rax-0x70121d91],al
   14001292b:	cmp    al,0xfa
   14001292d:	clc    
   14001292e:	ret    0x6f43
   140012931:	jns    0x1400128fa
   140012933:	jnp    0x1400128bb
   140012935:	retf   
   140012936:	sub    ebx,DWORD PTR [rdi-0xe]
   140012939:	gs cmc 
   14001293b:	rex.WB push r9
   14001293d:	cmp    eax,0x7ea4d004
   140012942:	repz and al,0xb9
   140012945:	sahf   
   140012946:	xor    edi,edi
   140012948:	cmp    eax,0x95441104
   14001294d:	(bad)  
   14001294e:	mov    bl,0x47
   140012950:	loope  0x14001295c
   140012952:	outs   dx,BYTE PTR ds:[rsi]
   140012953:	sub    al,0xae
   140012955:	xor    DWORD PTR [rbx+0x5],esi
   140012958:	clc    
   140012959:	(bad)  
   14001295a:	ret    0x9c79
   14001295d:	sahf   
   14001295e:	rex.RXB
   14001295f:	fwait
   140012960:	xchg   BYTE PTR [rax+0x13ff7b1a],ah
   140012966:	rcl    BYTE PTR [rdx+rax*1],0xea
   14001296a:	shr    ebp,cl
   14001296c:	call   0x17772f4ab
   140012971:	jae    0x140012913
   140012973:	(bad)  
   140012974:	test   BYTE PTR [rsi],0xe9
   140012977:	sub    bh,BYTE PTR [rbx+0x7e]
   14001297a:	(bad)  [rsi+0x30]
   14001297d:	movabs eax,ds:0x8342d7b157b3790d
   140012986:	(bad)  
   140012987:	sub    ebx,DWORD PTR [rsi+0x7a]
   14001298a:	(bad)  [rdi+0x130f9628]
   140012990:	scas   al,BYTE PTR es:[rdi]
   140012991:	sahf   
   140012992:	gs ins DWORD PTR es:[rdi],dx
   140012994:	sti    
   140012995:	and    al,0xe3
   140012997:	retf   
   140012998:	out    0x71,eax
   14001299a:	cmp    edx,DWORD PTR [rdi-0x70]
   14001299d:	data16 rex.WX pop rsp
   1400129a0:	out    0x2b,al
   1400129a2:	rex.RB pushf 
   1400129a4:	rol    DWORD PTR [rax],0x3f
   1400129a7:	mov    DWORD PTR [rbx],ecx
   1400129a9:	xchg   DWORD PTR [rdx+0x1c],ecx
   1400129ac:	stc    
   1400129ad:	cmp    eax,0x62920067
   1400129b2:	ja     0x1400129e3
   1400129b4:	lods   al,BYTE PTR ds:[rsi]
   1400129b5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400129b6:	mov    ebx,ebx
   1400129b8:	imul   ebp,ebx,0x464ae94d
   1400129be:	icebp  
   1400129bf:	shl    DWORD PTR [rbp-0x12610864],cl
   1400129c5:	jae    0x140012a2d
   1400129c7:	mov    al,0x3a
   1400129c9:	cmp    DWORD PTR [rdi+0x5b],edi
   1400129cc:	rex push 0x758a490d
   1400129d2:	xor    al,0x3d
   1400129d4:	addr32 mov ecx,0x7e86c3b4
   1400129da:	jbe    0x140012a1c
   1400129dc:	mov    esp,0x70e2dd74
   1400129e1:	shr    dh,1
   1400129e3:	add    eax,0xc7402e34
   1400129e8:	push   rax
   1400129e9:	out    0xe3,al
   1400129eb:	and    ebx,ecx
   1400129ed:	jnp    0x140012a5c
   1400129ef:	mov    edi,0x24e77487
   1400129f4:	ret    
   1400129f5:	xchg   esp,eax
   1400129f6:	rol    BYTE PTR [rax+0x69],0xd3
   1400129fa:	adc    esp,DWORD PTR [rdi]
   1400129fc:	jbe    0x140012a3d
   1400129fe:	rex.W loop 0x140012a65
   140012a01:	(bad)  
   140012a02:	adc    DWORD PTR [rdi+0xd],esp
   140012a05:	icebp  
   140012a06:	(bad)  
   140012a07:	rcl    DWORD PTR [rdi+0x0],1
   140012a0a:	and    BYTE PTR [rsi-0x2c],0xed
   140012a0e:	(bad)  
   140012a0f:	mov    dl,0x6b
   140012a11:	mov    eax,0x7fae56f4
   140012a16:	add    bh,BYTE PTR [rax]
   140012a18:	(bad)  
   140012a1a:	jrcxz  0x140012a89
   140012a1c:	xchg   ecx,eax
   140012a1d:	cmp    ebx,ebx
   140012a1f:	add    BYTE PTR [rdx+rdx*8-0x2cd2f425],bh
   140012a26:	retf   0xe9bf
   140012a29:	and    ebx,DWORD PTR [rdi]
   140012a2b:	mov    edi,0x8781f36f
   140012a30:	mov    edi,0x9f060d50
   140012a35:	ja     0x1400129e5
   140012a37:	js     0x140012a8f
   140012a39:	add    eax,0x1e766909
   140012a3e:	ror    BYTE PTR [rcx],1
   140012a40:	add    BYTE PTR [rcx+0x2b],ch
   140012a43:	lock adc cl,BYTE PTR [rcx+0x636e1f]
   140012a4a:	add    BYTE PTR [rax],ah
   140012a4c:	add    BYTE PTR [rcx+0x44],cl
   140012a4f:	push   r12
   140012a51:	rex.XB
   140012a52:	rex.WXB
   140012a53:	xrelease rex.WR mov BYTE PTR [rsi+0x67],r12b
   140012a58:	or     DWORD PTR [rdx],0x65
   140012a5b:	xor    esp,DWORD PTR [rbp-0x73]
   140012a5e:	(bad)  
   140012a5f:	fst    st(1)
   140012a61:	cwde   
   140012a62:	frstor [rbx+0x4397508f]
   140012a68:	retf   0xc0a2
   140012a6b:	jmp    0xe8096c89
   140012a70:	rex.WRB jmp 0x140012a7c
   140012a73:	sbb    dl,BYTE PTR [rcx]
   140012a75:	jbe    0x140012a24
   140012a77:	(bad)  
   140012a78:	pop    rdx
   140012a79:	cmp    DWORD PTR [rbp+0xa316cdd],0x70
   140012a80:	popf   
   140012a81:	xchg   BYTE PTR [rbp+0x693f6fb6],bl
   140012a87:	(bad)  
   140012a88:	(bad)  
   140012a89:	test   ebx,edi
   140012a8b:	not    BYTE PTR [rdi+rsi*1+0x38]
   140012a8f:	push   0xffffffffdc049f3d
   140012a94:	je     0x140012a35
   140012a96:	sub    ecx,DWORD PTR [rdi+0x7f]
   140012a99:	nop
   140012a9a:	sub    ecx,DWORD PTR [rdi+0x74c19bbe]
   140012aa0:	xchg   edi,eax
   140012aa1:	shl    DWORD PTR [rbp-0x4291532d],0x48
   140012aa8:	jno    0x140012a9f
   140012aaa:	and    ch,BYTE PTR [rsi-0x4e]
   140012aad:	mov    ebp,DWORD PTR [rdx+0x6d]
   140012ab0:	xor    esi,ecx
   140012ab2:	(bad)  
   140012ab4:	xchg   edx,eax
   140012ab5:	and    esp,eax
   140012ab7:	or     al,0xf9
   140012ab9:	test   DWORD PTR [rdx],0x7fd8c69e
   140012abf:	sub    DWORD PTR [rdi+rbp*8-0x2f92017c],ebp
   140012ac6:	nop
   140012ac7:	ret    
   140012ac8:	fldcw  WORD PTR [rsi]
   140012aca:	idiv   DWORD PTR [rdi]
   140012acc:	mov    bl,0xf7
   140012ace:	movabs al,ds:0xdbd9e4ae1a374d33
   140012ad7:	vpsrad xmm12,xmm7,XMMWORD PTR [rdi+0x5cbeb49c]
   140012adf:	rex.W (bad) 
   140012ae1:	mov    bh,0xf5
   140012ae3:	mov    dl,0x73
   140012ae5:	(bad)  
   140012ae6:	(bad)  
   140012ae7:	(bad)  
   140012ae9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012aea:	push   rcx
   140012aeb:	(bad)  
   140012aec:	pop    rbp
   140012aed:	add    edx,DWORD PTR [rcx]
   140012aef:	rex.WB
   140012af0:	push   r14
   140012af2:	add    ecx,DWORD PTR [rdx+rbx*4]
   140012af5:	(bad)  
   140012af6:	or     DWORD PTR [rbp+0x370700bd],esi
   140012afc:	(bad)  
   140012afd:	adc    DWORD PTR [rbx],edi
   140012aff:	cmovge eax,DWORD PTR [rbx+0x1e8cc44]
   140012b06:	sbb    DWORD PTR [rax],eax
   140012b08:	xchg   esp,eax
   140012b09:	js     0x140012b0d
   140012b0b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012b0c:	or     ecx,eax
   140012b0e:	and    dl,BYTE PTR [rsi-0x33849622]
   140012b14:	jmp    0x16fa573f7
   140012b19:	rex.RXB (bad) 
   140012b1b:	push   rax
   140012b1c:	in     al,dx
   140012b1d:	mov    eax,0x4c28b3b5
   140012b22:	fmul   st(6),st
   140012b24:	stos   BYTE PTR es:[rdi],al
   140012b25:	rex.WRX
   140012b26:	ds mov ebx,0x5c1fecc6
   140012b2c:	movabs eax,ds:0x78019e77821dadbc
   140012b35:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012b36:	mov    bh,0x4f
   140012b38:	retf   0x1ef
   140012b3b:	mov    bh,0xb8
   140012b3d:	mov    esi,0x63fa7831
   140012b42:	lahf   
   140012b43:	jl     0x140012bbb
   140012b45:	mov    esp,0x5f45f6b2
   140012b4a:	push   rsi
   140012b4b:	fisttp WORD PTR [rcx+0x4a1891c8]
   140012b51:	jmp    0x140012b7e
   140012b53:	(bad)  
   140012b54:	scas   eax,DWORD PTR es:[rdi]
   140012b55:	mov    ah,0xce
   140012b57:	ds fwait
   140012b59:	add    ebx,edx
   140012b5b:	mov    ah,0x2e
   140012b5d:	repnz fidivr WORD PTR [rbp-0x41]
   140012b61:	loop   0x140012af3
   140012b63:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012b64:	xor    sp,dx
   140012b67:	push   rsp
   140012b68:	(bad)
   140012b6c:	jrcxz  0x140012b3a
   140012b6e:	mov    al,BYTE PTR [rdx-0x31d7575e]
   140012b74:	popf   
   140012b75:	mov    WORD PTR [rbx-0x599ab700],?
   140012b7b:	nop
   140012b7c:	(bad)  
   140012b7d:	push   rbp
   140012b7e:	mov    BYTE PTR [rdx],ch
   140012b80:	rex.WRX cmp rax,0xffffffffee9a0341
   140012b86:	scas   al,BYTE PTR es:[rdi]
   140012b87:	(bad)  
   140012b88:	add    al,0xd4
   140012b8a:	cmps   WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140012b8c:	stc    
   140012b8d:	ss call 0x1827d9031
   140012b93:	enter  0xd26b,0x75
   140012b97:	xchg   esp,eax
   140012b98:	rex.RXB
   140012b99:	addr32 xor eax,edx
   140012b9c:	repnz (bad) 
   140012b9e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012b9f:	fdivp  st(6),st
   140012ba1:	sbb    DWORD PTR [rdx+0x1cbd116a],ecx
   140012ba7:	sbb    DWORD PTR [rdi-0x3d],edi
   140012baa:	retf   
   140012bab:	out    0x71,eax
   140012bad:	(bad)  
   140012bae:	scas   eax,DWORD PTR es:[rdi]
   140012baf:	rex.X cwde 
   140012bb1:	(bad)  
   140012bb2:	mov    BYTE PTR [rsi+0x3e],al
   140012bb5:	(bad)  
   140012bb6:	(bad)  
   140012bb7:	(bad)  
   140012bb8:	icebp  
   140012bb9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012bba:	int3   
   140012bbb:	mov    ch,0xfc
   140012bbd:	mov    dh,0xe3
   140012bbf:	mov    esp,0x14d8173a
   140012bc4:	xor    bl,BYTE PTR [rcx]
   140012bc6:	(bad)  
   140012bc7:	xor    cl,BYTE PTR [r11]
   140012bca:	xor    BYTE PTR [rdi+0x14],ah
   140012bcd:	rex.WB jno 0x140012ba3
   140012bd0:	out    0xc4,eax
   140012bd2:	enter  0xee33,0x95
   140012bd6:	out    0x91,eax
   140012bd8:	test   eax,0xb01a2932
   140012bdd:	in     eax,dx
   140012bde:	rex.W fiadd DWORD PTR [rdi+0xa]
   140012be2:	cwde   
   140012be3:	(bad)  
   140012be4:	cli    
   140012be5:	rex.R in eax,dx
   140012be7:	cmp    al,0xdd
   140012be9:	or     edi,edi
   140012beb:	out    0x70,eax
   140012bed:	add    al,BYTE PTR [rax+rdx*8+0x32237984]
   140012bf4:	addr32 rex.W mov bpl,0x7b
   140012bf8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012bf9:	in     eax,dx
   140012bfa:	sti    
   140012bfb:	mov    dh,0x5b
   140012bfd:	sub    ch,bh
   140012bff:	adc    dl,BYTE PTR [rax+0x27]
   140012c02:	push   0x212fa6d3
   140012c07:	test   esp,edi
   140012c09:	(bad)  
   140012c0a:	rex.WRB and BYTE PTR [r14+0x27],r13b
   140012c0e:	(bad)  
   140012c0f:	(bad)  
   140012c10:	addr32 loop 0x140012bd7
   140012c13:	adc    DWORD PTR [rdx+rbx*8-0x19],edx
   140012c17:	cmp    ecx,ecx
   140012c19:	(bad)  
   140012c1a:	(bad)  
   140012c1b:	imul   eax,DWORD PTR [rbp-0x39],0xb78457aa
   140012c22:	(bad)  
   140012c23:	imul   edi,DWORD PTR [rcx],0xebcfccf9
   140012c29:	jrcxz  0x140012c2a
   140012c2b:	(bad)  
   140012c2c:	mov    bh,0x31
   140012c2e:	or     eax,0xc00c73b8
   140012c33:	lods   eax,DWORD PTR ds:[rsi]
   140012c34:	mov    ebp,0x9ff2467d
   140012c39:	cli    
   140012c3a:	lock jae 0x140012c84
   140012c3d:	(bad)  
   140012c3e:	(bad)  
   140012c3f:	jp     0x140012c25
   140012c41:	cmp    eax,DWORD PTR [rdi]
   140012c43:	ret    
   140012c44:	loope  0x140012c3d
   140012c46:	mov    eax,0x44567ca2
   140012c4b:	retf   0x9aa0
   140012c4e:	sub    DWORD PTR [rdx+0x725889a],edi
   140012c54:	ss fwait
   140012c56:	sub    BYTE PTR [rbx-0x4316840f],bh
   140012c5c:	push   0x37
   140012c5e:	rex.RX sub r9b,cl
   140012c61:	or     DWORD PTR [rdx-0x7],esp
   140012c64:	js     0x140012c22
   140012c66:	jmp    0x140012bed
   140012c68:	xchg   BYTE PTR [rcx-0x43],ah
   140012c6b:	rex.WRXB loope 0x140012c78
   140012c6e:	jbe    0x140012cc6
   140012c70:	(bad)  
   140012c71:	xor    BYTE PTR [rip+0xfffffffff10e5087],ch        # 0x1310f7cfe
   140012c77:	addr32 mov edi,0x42de5e86
   140012c7d:	(bad)  
   140012c7e:	add    DWORD PTR [rdx+0x7a634141],0xa1155e0
   140012c88:	or     ch,dh
   140012c8a:	pop    rsp
   140012c8b:	jne    0x140012ccd
   140012c8d:	mov    edx,0xdb439347
   140012c92:	xor    ch,BYTE PTR ss:[rcx-0x3d]
   140012c96:	push   rbp
   140012c97:	fisub  DWORD PTR [rbx-0x286f1dcc]
   140012c9d:	xchg   BYTE PTR [rbx],cl
   140012c9f:	rex.WRXB jg 0x140012c3a
   140012ca2:	fucom  st(3)
   140012ca4:	rex.WRXB xor r14,r11
   140012ca7:	mov    edi,0x69d2f8c1
   140012cac:	xchg   esi,eax
   140012cad:	(bad)  
   140012cae:	mov    ebp,0xafd714c
   140012cb3:	outs   dx,BYTE PTR ds:[rsi]
   140012cb4:	mov    edx,0xa209f917
   140012cb9:	test   al,0x7a
   140012cbb:	nop
   140012cbc:	(bad)  
   140012cbd:	repnz adc ecx,DWORD PTR [rdx]
   140012cc0:	lea    esp,[rax+0x27f4b756]
   140012cc6:	sub    DWORD PTR [rdx],eax
   140012cc8:	push   rax
   140012cc9:	fimul  DWORD PTR [rcx+0x3b]
   140012ccc:	scas   al,BYTE PTR es:[rdi]
   140012ccd:	mov    ebp,0xe927f9d0
   140012cd2:	rex.WXB mov dl,BYTE PTR [r12+r13*8]
   140012cd6:	stos   BYTE PTR es:[rdi],al
   140012cd7:	js     0x140012cc0
   140012cd9:	xor    bl,al
   140012cdb:	xchg   edi,eax
   140012cdc:	(bad)  
   140012cdd:	loop   0x140012c68
   140012cdf:	rex.WXB (bad) 
   140012ce1:	(bad)  
   140012ce2:	and    eax,0x7479d9c8
   140012ce7:	and    al,BYTE PTR [rbx]
   140012ce9:	rex.WB fild WORD PTR [r13+0x5e86fc1c]
   140012cf0:	imul   ecx,DWORD PTR [rdi],0xdae1b2e2
   140012cf6:	pushw  0x36
   140012cf9:	cs cmp al,0x62
   140012cfc:	adc    esi,esp
   140012cfe:	jg     0x140012d2d
   140012d00:	add    bl,BYTE PTR [rax-0x76f2fffd]
   140012d06:	iret   
   140012d07:	sbb    ah,BYTE PTR [rsi-0x40]
   140012d0a:	movsxd edx,esp
   140012d0c:	rex.WXB sub rcx,r9
   140012d0f:	rex.WXB
   140012d10:	fwait
   140012d11:	stos   DWORD PTR es:[rdi],eax
   140012d12:	mov    bh,0xa5
   140012d14:	mov    cl,0xb1
   140012d17:	jrcxz  0x140012d5b
   140012d19:	and    dh,BYTE PTR [rsi+0x5]
   140012d1c:	(bad)  
   140012d1d:	cdq    
   140012d1e:	clc    
   140012d1f:	xchg   ebx,eax
   140012d20:	adc    ecx,DWORD PTR [rdi-0x498e4340]
   140012d26:	push   rdi
   140012d27:	mov    edx,0xd55c9515
   140012d2c:	adc    BYTE PTR [rsi],dl
   140012d2e:	faddp  st(0),st
   140012d30:	(bad)  
   140012d31:	jae    0x140012cf3
   140012d33:	outs   dx,DWORD PTR ds:[rsi]
   140012d34:	ret    0x4bed
   140012d37:	add    ebx,DWORD PTR [rsi-0x21]
   140012d3a:	(bad)  
   140012d3b:	loopne 0x140012cd8
   140012d3d:	js     0x140012dba
   140012d3f:	sar    BYTE PTR [rdi-0x1780d409],0x3b
   140012d46:	(bad)  
   140012d47:	retf   
   140012d48:	sub    ebx,edi
   140012d4a:	pop    rbp
   140012d4b:	push   rsi
   140012d4c:	or     edi,0xffffff8b
   140012d4f:	enter  0xecb1,0x4f
   140012d53:	push   rbx
   140012d54:	cmp    DWORD PTR [rsi-0x12],ebp
   140012d57:	sbb    edx,edi
   140012d59:	mov    ecx,0x6a97299b
   140012d5e:	mov    dl,0xd7
   140012d60:	in     eax,dx
   140012d61:	mov    edx,0x9b6e968c
   140012d66:	outs   dx,BYTE PTR ds:[rsi]
   140012d67:	mov    ah,dh
   140012d69:	sub    eax,0x8a76858a
   140012d6e:	loop   0x140012d0b
   140012d70:	sbb    DWORD PTR [rbx],ebp
   140012d72:	push   rdx
   140012d73:	mov    bl,0xb7
   140012d75:	mov    eax,0x2789eecc
   140012d7a:	cdq    
   140012d7b:	or     eax,0xff072817
   140012d80:	or     esi,ecx
   140012d82:	mov    edi,0x8a013b08
   140012d87:	cmp    ah,bh
   140012d89:	add    esi,DWORD PTR [rax+0x2b2b00b4]
   140012d8f:	sub    DWORD PTR [rdi+rax*1],eax
   140012d92:	fidiv  DWORD PTR [rdx+rcx*8-0x2bbf2e93]
   140012d99:	add    esp,0xffffffd6
   140012d9c:	imul   ecx,DWORD PTR [rdi+0x7cc1793d],0x41
   140012da3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012da4:	adc    esp,DWORD PTR [rsi-0x39]
   140012da7:	(bad)  
   140012da8:	loope  0x140012d6f
   140012daa:	(bad)  
   140012dab:	jg     0x140012d2f
   140012dad:	adc    DWORD PTR [rsi],ecx
   140012daf:	mov    ecx,0xbd58e76
   140012db4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012db5:	test   al,0xae
   140012db7:	ins    BYTE PTR es:[rdi],dx
   140012db8:	and    DWORD PTR [rdi],esi
   140012dba:	scas   eax,DWORD PTR es:[rdi]
   140012dbb:	adc    al,dl
   140012dbd:	or     al,0x91
   140012dbf:	rex ja 0x140012d63
   140012dc2:	mov    WORD PTR [rax-0xa63b03e],?
   140012dc8:	out    0x84,eax
   140012dca:	xchg   esi,eax
   140012dcb:	(bad)  
   140012dcc:	fwait
   140012dcd:	(bad)  
   140012dce:	jle    0x140012da0
   140012dd0:	or     DWORD PTR [rbp-0x13],edi
   140012dd3:	ss (bad) 
   140012dd5:	pop    rbp
   140012dd6:	jnp    0x140012e30
   140012dd8:	add    al,0x80
   140012dda:	fs out dx,eax
   140012ddc:	cwde   
   140012ddd:	mov    esp,0x52f9eb66
   140012de2:	rex.X rcr sil,1
   140012de5:	hlt    
   140012de6:	pop    rbp
   140012de7:	nop    DWORD PTR [rdi]
   140012dea:	fwait
   140012deb:	cmp    ah,BYTE PTR [rip+0x5cddbfe7]        # 0x19cdeedd8
   140012df1:	test   BYTE PTR [rcx+rdx*2-0x3f],0x1
   140012df6:	popf   
   140012df7:	push   0x6dfb7fbd
   140012dfc:	mov    ah,BYTE PTR [rsi-0x3f1c4a83]
   140012e02:	push   rdx
   140012e03:	(bad)  
   140012e04:	pop    rdi
   140012e05:	jmp    0x140012d8f
   140012e07:	pop    rbx
   140012e08:	test   esp,ecx
   140012e0a:	pop    rdi
   140012e0b:	outs   dx,DWORD PTR ds:[rsi]
   140012e0c:	push   rdx
   140012e0d:	jle    0x140012e2f
   140012e0f:	push   rbp
   140012e10:	sub    eax,0x7077c2b2
   140012e15:	add    BYTE PTR [rdx-0x687ccd3f],dh
   140012e1b:	mov    ds,edi
   140012e1d:	xor    DWORD PTR [rdi],edi
   140012e1f:	rex.R pop rcx
   140012e21:	(bad)  
   140012e22:	xchg   BYTE PTR [rbx-0x2a38b2f6],ah
   140012e28:	in     al,0xe2
   140012e2a:	rex.RX jb 0x140012e51
   140012e2d:	sbb    DWORD PTR [rdi],ecx
   140012e2f:	and    BYTE PTR [rip+0x28f5df66],0x37        # 0x168f70d9c
   140012e36:	jg     0x140012e2d
   140012e38:	jns    0x140012e50
   140012e3a:	outs   dx,BYTE PTR ds:[rsi]
   140012e3b:	pop    rbx
   140012e3c:	xchg   eax,esp
   140012e3e:	jmp    0x140012e13
   140012e40:	add    BYTE PTR [rbx+rsi*2+0x6f],bh
   140012e44:	jg     0x140012e2a
   140012e46:	enter  0x8f43,0x7c
   140012e4a:	jp     0x140012e7c
   140012e4c:	(bad)  
   140012e4d:	jg     0x140012e98
   140012e4f:	mov    esp,0xe322277f
   140012e54:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012e55:	pop    rsp
   140012e56:	mov    DWORD PTR [rdx+rdx*1],ecx
   140012e59:	(bad)  
   140012e5a:	fnstsw WORD PTR [rdx-0x5d]
   140012e5d:	mov    ah,0xb9
   140012e5f:	mov    ecx,0x86c73020
   140012e64:	(bad)  
   140012e65:	pop    rsi
   140012e66:	ror    dl,cl
   140012e68:	push   rdi
   140012e69:	shl    dh,1
   140012e6b:	fdivr  st,st(1)
   140012e6d:	outs   dx,BYTE PTR ds:[rsi]
   140012e6e:	rex.WXB (bad) 
   140012e70:	mov    dh,0x85
   140012e72:	mov    cl,0x96
   140012e74:	sti    
   140012e75:	stos   BYTE PTR es:[rdi],al
   140012e76:	(bad)  
   140012e77:	test   al,al
   140012e79:	sub    ah,ch
   140012e7b:	push   rdx
   140012e7c:	xchg   esp,eax
   140012e7d:	add    eax,0xa61f47bb
   140012e82:	sbb    DWORD PTR [rsi],ebp
   140012e84:	loopne 0x140012e30
   140012e86:	and    esi,ebp
   140012e88:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012e89:	scas   eax,DWORD PTR es:[rdi]
   140012e8a:	adc    ebp,DWORD PTR [rsi+0x7f3eb65d]
   140012e90:	rcl    BYTE PTR [rax],1
   140012e92:	(bad)  
   140012e93:	scas   al,BYTE PTR es:[rdi]
   140012e94:	lea    eax,[rbx-0x1d777220]
   140012e9a:	adc    BYTE PTR [rbx+0x9],ch
   140012e9d:	mov    ?,WORD PTR [rdi-0x7c78b7a9]
   140012ea3:	pop    rdx
   140012ea4:	scas   al,BYTE PTR es:[rdi]
   140012ea5:	mov    ds,WORD PTR [rbp-0x1d3bfdbd]
   140012eab:	(bad)  
   140012eac:	fsubrp st(0),st
   140012eae:	retf   
   140012eaf:	xchg   edx,eax
   140012eb0:	xchg   ebx,eax
   140012eb1:	outs   dx,DWORD PTR ds:[rsi]
   140012eb2:	dec    DWORD PTR [rcx+riz*2]
   140012eb5:	in     eax,dx
   140012eb6:	cmp    BYTE PTR [rdx-0x748134e5],bh
   140012ebc:	xchg   edi,eax
   140012ebd:	pop    rdi
   140012ebe:	(bad)  
   140012ebf:	fistp  QWORD PTR [rax+0x4e2ef50c]
   140012ec5:	sbb    dh,BYTE PTR [rbx]
   140012ec7:	pop    rsi
   140012ec8:	ss ins BYTE PTR es:[rdi],dx
   140012eca:	pop    rbx
   140012ecb:	jrcxz  0x140012ec3
   140012ecd:	mov    esp,0x42793dc6
   140012ed2:	ss add ch,ch
   140012ed5:	ror    BYTE PTR [rdi+0x62],0xce
   140012ed9:	stos   DWORD PTR es:[rdi],eax
   140012eda:	shl    dl,1
   140012edc:	sti    
   140012edd:	adc    ebx,DWORD PTR [rax-0x69]
   140012ee0:	pop    rsp
   140012ee1:	jg     0x140012eed
   140012ee3:	mov    DWORD PTR [rbx],edx
   140012ee5:	push   0x7e53b47
   140012eea:	mov    cl,0xfe
   140012eec:	jns    0x140012ee1
   140012eee:	out    dx,al
   140012eef:	add    WORD PTR [rbx+rsi*8+0x6831cf33],sp
   140012ef7:	(bad)  
   140012ef8:	and    esi,0x66
   140012efb:	sbb    al,0xd2
   140012efd:	sub    DWORD PTR [rdi+0x1afa4238],esi
   140012f03:	xor    DWORD PTR [r14+riz*1+0x19],r15d
   140012f08:	rex.R
   140012f09:	repz not BYTE PTR [rsi-0x67bb7f1a]
   140012f10:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012f11:	imul   edx,DWORD PTR [rax-0x2d],0xfffffff7
   140012f15:	rex.R stos BYTE PTR es:[rdi],al
   140012f17:	adc    edx,DWORD PTR [rax-0x4f290742]
   140012f1d:	sbb    eax,DWORD PTR [rbx-0x33d632d0]
   140012f23:	add    eax,DWORD PTR [rax+0x5d]
   140012f26:	pop    rsp
   140012f27:	cld    
   140012f28:	and    ecx,ebp
   140012f2a:	(bad)  
   140012f2b:	cmp    al,0x38
   140012f2d:	sti    
   140012f2e:	and    BYTE PTR [rsi+0x5699209f],ch
   140012f34:	sbb    al,0x3a
   140012f36:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012f37:	lahf   
   140012f38:	div    dh
   140012f3a:	shr    BYTE PTR [rax+rdi*8+0x501cbce9],cl
   140012f41:	push   0xffffffffe09fa6f3
   140012f46:	(bad)  
   140012f47:	cmp    edi,DWORD PTR [rdi-0x76]
   140012f4a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012f4b:	dec    BYTE PTR [rdi-0x64806084]
   140012f51:	rol    DWORD PTR [rax-0x7fe7029],cl
   140012f57:	(bad)  
   140012f58:	mov    esp,0xf2bffbfd
   140012f5d:	xchg   DWORD PTR [rsi-0x6a1a7a3],ebx
   140012f63:	sahf   
   140012f64:	jb     0x140012f96
   140012f66:	cld    
   140012f67:	mov    ah,0x8
   140012f69:	clts   
   140012f6b:	lea    edi,[rsp+rbp*8]
   140012f6e:	mov    ah,0x88
   140012f70:	(bad)
   140012f73:	xchg   esi,eax
   140012f74:	xchg   BYTE PTR [rbx+0x76],ah
   140012f77:	jae    0x140012fcc
   140012f79:	and    dl,cl
   140012f7b:	and    eax,0x68dd33be
   140012f80:	jbe    0x140012fa5
   140012f82:	jne    0x140012f46
   140012f84:	rex.B (bad) 
   140012f86:	test   BYTE PTR [rbx-0x9338c92],0x3b
   140012f8d:	leave  
   140012f8e:	sahf   
   140012f8f:	and    eax,0x3cf32b39
   140012f94:	push   rbp
   140012f95:	cwde   
   140012f96:	push   rdx
   140012f97:	cmp    edi,ecx
   140012f99:	(bad)  
   140012f9b:	adc    DWORD PTR [rsi-0x55],esi
   140012f9e:	and    DWORD PTR [rbx+riz*1-0x24],edx
   140012fa2:	mov    edi,DWORD PTR [rdi+0x1f3ed843]
   140012fa8:	adc    esp,ebp
   140012faa:	(bad)  
   140012fab:	mov    bl,0xfc
   140012fad:	lods   al,BYTE PTR ds:[rsi]
   140012fae:	jg     0x14001300f
   140012fb0:	(bad)  
   140012fb1:	in     eax,0x1b
   140012fb3:	xor    ebp,ebp
   140012fb5:	enter  0x7a66,0xa4
   140012fb9:	rcr    BYTE PTR [rdi-0x53ec2334],0x9c
   140012fc0:	push   0xffffffffe5366617
   140012fc5:	out    0x13,al
   140012fc7:	ffreep st(1)
   140012fc9:	test   edi,eax
   140012fcb:	(bad)  
   140012fcd:	rex.X cwde 
   140012fcf:	push   rdx
   140012fd0:	pop    rsp
   140012fd1:	ds ret 
   140012fd3:	(bad)  
   140012fd5:	imul   ecx,edx,0xddb8dbab
   140012fdb:	sbb    esi,DWORD PTR [rcx-0x10a26c4]
   140012fe1:	xchg   edx,eax
   140012fe2:	adc    al,0xdd
   140012fe4:	(bad)  
   140012fe5:	jge    0x140012ff8
   140012fe7:	sub    al,0x1d
   140012fe9:	mov    BYTE PTR [rdi+0x1d8dceb9],ch
   140012fef:	ret    
   140012ff0:	jl     0x140012fdd
   140012ff2:	ins    DWORD PTR es:[rdi],dx
   140012ff3:	xchg   edi,eax
   140012ff4:	mov    dh,0x4c
   140012ff6:	(bad)  
   140012ff7:	(bad)  
   140012ff9:	rex.X (bad) 
   140012ffb:	(bad)  
   140012ffc:	and    eax,0x9be90ba7
   140013001:	jae    0x140012fcc
   140013003:	xchg   ebx,eax
   140013004:	(bad)  [rsi+0x53]
   140013007:	scas   al,BYTE PTR es:[rdi]
   140013008:	ffreep st(6)
   14001300a:	add    al,0x49
   14001300c:	icebp  
   14001300d:	out    0xbd,al
   14001300f:	jnp    0x140012fe3
   140013011:	retf   
   140013012:	ins    BYTE PTR es:[rdi],dx
   140013013:	stos   DWORD PTR es:[rdi],eax
   140013014:	repz fimul DWORD PTR ss:[rax+0x2d]
   140013019:	icebp  
   14001301a:	mul    bh
   14001301c:	retf   0xab5
   14001301f:	pop    rcx
   140013020:	pop    rbx
   140013021:	and    eax,0x80c903dd
   140013026:	jne    0x140013094
   140013028:	rex
   140013029:	addr32 xchg ebx,eax
   14001302b:	or     eax,esi
   14001302d:	ins    DWORD PTR es:[rdi],dx
   14001302e:	mov    bl,0x74
   140013030:	push   0xffffffffb63c7b0d
   140013035:	int3   
   140013036:	rcl    DWORD PTR [rax],0xc9
   140013039:	imul   eax,DWORD PTR [rip+0x4c486de4],0x17        # 0x18c499e24
   140013040:	fcmovb st,st(0)
   140013042:	mov    dl,0x75
   140013044:	adc    ch,ch
   140013046:	mov    ecx,0x9148bb98
   14001304b:	sub    BYTE PTR [rcx+0x3c],ch
   14001304e:	sbb    ecx,edi
   140013050:	cld    
   140013051:	popf   
   140013052:	mov    bh,BYTE PTR [rdi]
   140013054:	shr    esi,0x77
   140013057:	add    edi,edi
   140013059:	(bad)  
   14001305a:	mov    bh,0x29
   14001305c:	or     eax,0xe006fdb8
   140013061:	fwait
   140013062:	js     0x14001305f
   140013064:	mov    bh,0x7e
   140013066:	loop   0x14001303b
   140013068:	(bad)  
   140013069:	ss out dx,al
   14001306b:	cmp    esi,ecx
   14001306d:	fdiv   QWORD PTR [rax+0x71]
   140013070:	cld    
   140013071:	gs out dx,eax
   140013073:	retf   
   140013074:	ja     0x140013016
   140013076:	(bad)  
   140013077:	adc    edx,edx
   140013079:	jb     0x140013047
   14001307b:	icebp  
   14001307c:	mov    ecx,DWORD PTR [rcx]
   14001307e:	sbb    eax,0x44cb10cf
   140013083:	cmp    dh,BYTE PTR [rdi-0x3d]
   140013086:	test   BYTE PTR gs:[rdi+0xe],bl
   14001308a:	mov    esi,0x4dba6906
   14001308f:	int3   
   140013090:	pop    rcx
   140013091:	jrcxz  0x1400130aa
   140013093:	in     al,0x88
   140013095:	loope  0x140013091
   140013097:	pop    rsp
   140013098:	out    dx,al
   140013099:	fnstcw WORD PTR [rcx-0x70]
   14001309c:	lahf   
   14001309d:	(bad)  
   14001309e:	mov    es,edi
   1400130a0:	sahf   
   1400130a1:	mov    ch,BYTE PTR ss:[rdx+0x68]
   1400130a5:	sbb    cl,dl
   1400130a7:	push   rax
   1400130a8:	sub    al,0x2c
   1400130aa:	jb     0x14001309f
   1400130ac:	loope  0x1400130e5
   1400130ae:	adc    eax,DWORD PTR [rsi-0x2406a39d]
   1400130b4:	test   bl,dh
   1400130b6:	addr32 (bad) 
   1400130b8:	pop    rcx
   1400130b9:	nop
   1400130ba:	xchg   esp,eax
   1400130bb:	out    0x9b,eax
   1400130bd:	push   rdx
   1400130be:	test   BYTE PTR [rcx],bl
   1400130c0:	push   0xffffffffffffffcc
   1400130c2:	cmp    al,0xba
   1400130c4:	lods   al,BYTE PTR ds:[rsi]
   1400130c5:	rex.B jmp 0xde8eca19
   1400130cb:	xor    BYTE PTR [rip+0x60cf50b2],dh        # 0x1a0d08183
   1400130d1:	imul   ecx,DWORD PTR [rbp+0x3cfaef93],0x708568d5
   1400130db:	in     eax,0xc
   1400130dd:	stos   DWORD PTR es:[rdi],eax
   1400130de:	pop    rbx
   1400130df:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400130e0:	sbb    BYTE PTR [rbp+0x3a],bl
   1400130e3:	(bad)  
   1400130e4:	fistp  QWORD PTR [rcx-0x1b842976]
   1400130ea:	mov    ecx,0x7bd776f5
   1400130ef:	push   rbx
   1400130f0:	not    BYTE PTR [rdx+0x13]
   1400130f3:	ficomp DWORD PTR [rdi]
   1400130f5:	repnz ror BYTE PTR [rdi-0x11],0xa4
   1400130fa:	mov    ebp,0x3a5b5cfb
   1400130ff:	imul   eax,DWORD PTR [rdi-0x70add9a0],0xffffffb4
   140013106:	push   rcx
   140013107:	xchg   ebp,eax
   140013108:	xchg   ebx,eax
   140013109:	cmp    DWORD PTR [rdi-0x72],ecx
   14001310c:	sub    DWORD PTR [rsi+0x2a],edi
   14001310f:	in     eax,0xb5
   140013111:	adc    al,0x62
   140013113:	sti    
   140013114:	cmp    al,0x2e
   140013116:	push   rdi
   140013117:	sbb    BYTE PTR [rdx],dl
   140013119:	jbe    0x1400130fb
   14001311b:	shl    dh,cl
   14001311d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001311e:	cmc    
   14001311f:	repnz lods eax,DWORD PTR ds:[rsi]
   140013121:	(bad)  
   140013122:	rcl    BYTE PTR [rsi-0x5f],1
   140013125:	push   0x1239e773
   14001312a:	nop
   14001312b:	test   esi,edx
   14001312d:	xor    DWORD PTR [rdi],edx
   14001312f:	(bad)  
   140013130:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013131:	(bad)  
   140013132:	je     0x1400130f9
   140013134:	(bad)  
   140013135:	js     0x140013198
   140013137:	xchg   edx,eax
   140013138:	mov    al,bh
   14001313a:	add    edx,DWORD PTR [rsi]
   14001313c:	xor    edx,DWORD PTR [rax+0x73]
   14001313f:	mov    eax,0x73e7ca43
   140013144:	sbb    eax,0x3edeb434
   140013149:	rex.WRXB or QWORD PTR [r14],r14
   14001314c:	xchg   DWORD PTR [rbx],esp
   14001314e:	test   eax,0x9116824
   140013153:	jbe    0x140013168
   140013155:	pop    rdx
   140013156:	adc    al,0x17
   140013158:	add    ebp,DWORD PTR [rax-0x32e4c52]
   14001315e:	rex.WX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013160:	(bad)  
   140013161:	(bad)  
   140013162:	jae    0x140013181
   140013164:	jmp    0x121603555
   140013169:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001316a:	int    0xff
   14001316c:	xchg   ecx,eax
   14001316d:	jrcxz  0x140013156
   14001316f:	shr    BYTE PTR [rbp-0x281bc629],cl
   140013175:	pop    rsp
   140013176:	outs   dx,BYTE PTR ds:[rsi]
   140013177:	pop    QWORD PTR [rcx]
   140013179:	clc    
   14001317a:	(bad)  
   14001317b:	mov    esp,0xf2be87fd
   140013180:	(bad)  
   140013181:	ja     0x1400131b0
   140013183:	lods   al,BYTE PTR ds:[rsi]
   140013184:	lods   eax,DWORD PTR ds:[rsi]
   140013185:	jg     0x140013148
   140013187:	xchg   edi,eax
   140013188:	(bad)  
   140013189:	addr32 mov esp,0xefc70f73
   14001318f:	cmp    bl,BYTE PTR [rbp-0x36]
   140013192:	(bad)  
   140013193:	call   0x1125de27e
   140013198:	jge    0x14001316b
   14001319a:	icebp  
   14001319b:	call   0x105dcfe69
   1400131a0:	rex.WRX imul r12,QWORD PTR [rsi+0x44],0xffffffffffffffd1
   1400131a5:	jl     0x1400131a7
   1400131a7:	(bad)  
   1400131a8:	sub    eax,0x9b919a73
   1400131ad:	pop    rsp
   1400131ae:	mov    esp,0xd3d5cc6a
   1400131b3:	or     al,ch
   1400131b5:	je     0x14001318a
   1400131b7:	imul   ebp,eax,0x60
   1400131ba:	or     BYTE PTR [rsi+0x8408a68],ah
   1400131c0:	or     al,0xeb
   1400131c2:	cmp    eax,0xc6e4b28a
   1400131c7:	icebp  
   1400131c8:	(bad)  
   1400131c9:	test   al,0xab
   1400131cb:	xor    DWORD PTR [rsi-0x6c263fe6],edi
   1400131d1:	call   0x142329d63
   1400131d6:	rex adc DWORD PTR [rbp-0x78],esi
   1400131da:	sub    edi,eax
   1400131dc:	(bad)  
   1400131dd:	fnstcw WORD PTR [rbx-0xd]
   1400131e0:	and    ch,cl
   1400131e2:	scas   al,BYTE PTR es:[rdi]
   1400131e3:	stos   DWORD PTR es:[rdi],eax
   1400131e4:	rex.WRX
   1400131e5:	lock ja 0x1400131d6
   1400131e8:	jge    0x1400131d9
   1400131ea:	retf   
   1400131eb:	lods   eax,DWORD PTR ds:[rsi]
   1400131ec:	mov    dl,0x32
   1400131ee:	mov    bl,0xf6
   1400131f0:	push   rdx
   1400131f1:	xchg   ebp,eax
   1400131f2:	test   ch,0xb6
   1400131f5:	ins    BYTE PTR es:[rdi],dx
   1400131f6:	ins    DWORD PTR es:[rdi],dx
   1400131f7:	xchg   esi,eax
   1400131f8:	fldcw  WORD PTR gs:[rbp-0x4b]
   1400131fc:	in     eax,0xf1
   1400131fe:	and    bh,BYTE PTR [rbx-0x79c89c93]
   140013204:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013205:	jnp    0x140013229
   140013207:	push   0x1a66809a
   14001320c:	call   0x6db1
   140013210:	push   0x681e987a
   140013215:	and    BYTE PTR [rsi],al
   140013217:	(bad)  
   140013218:	es jp  0x14001327d
   14001321b:	(bad)
   140013220:	adc    BYTE PTR [rsp+rax*2],dh
   140013223:	sbb    BYTE PTR [rsi],al
   140013225:	rex.RX mov dl,0xc1
   140013228:	xor    al,0xb4
   14001322a:	in     eax,0x7d
   14001322c:	(bad)  
   14001322d:	mov    dh,0x6c
   14001322f:	pop    rcx
   140013230:	xchg   esi,eax
   140013231:	sub    al,0x9
   140013233:	in     eax,dx
   140013234:	stos   BYTE PTR es:[rdi],al
   140013235:	stos   BYTE PTR es:[rdi],al
   140013236:	int3   
   140013237:	stos   BYTE PTR es:[rdi],al
   140013238:	retf   0xdcaa
   14001323b:	div    ebp
   14001323d:	jnp    0x140013236
   14001323f:	int3   
   140013240:	(bad)  
   140013241:	addr32 mov ecx,0x22d665f7
   140013247:	pop    rcx
   140013248:	and    eax,0x117a9961
   14001324d:	pop    rcx
   14001324e:	cmc    
   14001324f:	sub    eax,0xbddb7bef
   140013254:	out    0x9c,eax
   140013256:	(bad)  
   140013258:	popf   
   140013259:	in     eax,0x72
   14001325b:	(bad)  
   14001325c:	(bad)  
   14001325d:	add    esp,DWORD PTR [rcx+rdx*4]
   140013260:	rex.W (bad) 
   140013262:	mov    al,0xe8
   140013264:	(bad)  
   140013265:	xchg   edx,eax
   140013266:	int3   
   140013267:	rex.X and BYTE PTR [rbx],cl
   14001326a:	(bad)  
   14001326b:	add    esi,DWORD PTR [rcx+0x4de4e2e9]
   140013271:	out    dx,eax
   140013272:	(bad)
   140013276:	sar    DWORD PTR [rdi-0x26617742],1
   14001327c:	xchg   ebx,eax
   14001327d:	fdivr  DWORD PTR [rcx]
   14001327f:	jae    0x140013283
   140013281:	(bad)  
   140013282:	ret    0x680c
   140013285:	ins    DWORD PTR es:[rdi],dx
   140013286:	sbb    eax,esp
   140013288:	(bad)  
   140013289:	pop    rsp
   14001328a:	sub    al,0x5c
   14001328c:	push   rcx
   14001328d:	(bad)  
   14001328e:	cld    
   14001328f:	enter  0x2e03,0xa0
   140013293:	jg     0x140013295
   140013295:	mov    esp,0xb6877c3
   14001329a:	adc    BYTE PTR gs:[rcx],bl
   14001329d:	jo     0x1400132a0
   14001329f:	or     eax,0x1303512c
   1400132a4:	jb     0x140013321
   1400132a6:	xor    BYTE PTR [rdx-0x429d791],0xcb
   1400132ad:	rex.X outs dx,BYTE PTR ds:[rsi]
   1400132af:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400132b0:	lahf   
   1400132b1:	adc    ebx,DWORD PTR [rax-0x137f30bb]
   1400132b7:	out    dx,al
   1400132b8:	mov    bl,0x1f
   1400132ba:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400132bb:	mov    ebp,0xfa5ebab1
   1400132c0:	xchg   edx,eax
   1400132c1:	sub    eax,0x286b9f1e
   1400132c6:	enter  0xf97d,0xe0
   1400132ca:	popf   
   1400132cb:	xchg   edi,eax
   1400132cc:	rex cdq 
   1400132ce:	jne    0x1400132c7
   1400132d0:	(bad)
   1400132d3:	out    dx,al
   1400132d4:	jle    0x14001333a
   1400132d6:	mov    ?,WORD PTR [rcx-0x3304d0d5]
   1400132dc:	ror    BYTE PTR [rax-0x71d041bd],cl
   1400132e2:	loop   0x1400132b2
   1400132e4:	xor    al,0x64
   1400132e6:	mov    cl,0xee
   1400132e9:	xchg   ecx,eax
   1400132ea:	popf   
   1400132eb:	sub    BYTE PTR [rbp+0x3efca9f],dl
   1400132f1:	adc    edx,DWORD PTR [rdx-0x40c5ed0d]
   1400132f7:	pushf  
   1400132f8:	rol    DWORD PTR [rax-0x42],cl
   1400132fb:	(bad)  
   1400132fc:	xchg   edx,eax
   1400132fd:	out    0x59,eax
   1400132ff:	add    DWORD PTR [rdi-0x41],edx
   140013302:	test   DWORD PTR [rsi+0x6f],esp
   140013305:	call   QWORD PTR [rbx+0x3e]
   140013308:	cld    
   140013309:	push   rdi
   14001330a:	jle    0x1400132f2
   14001330c:	xchg   edi,eax
   14001330d:	ror    DWORD PTR [rip+0xffffffffc0157978],1        # 0x10016ac8b
   140013313:	jns    0x1400132c1
   140013315:	std    
   140013316:	lods   eax,DWORD PTR ds:[rsi]
   140013317:	ja     0x1400132d8
   140013319:	out    0xe0,eax
   14001331b:	scas   al,BYTE PTR es:[rdi]
   14001331c:	adc    DWORD PTR [rdi-0x5f885242],0xffffffff
   140013323:	rex.RXB jmp 0x140013374
   140013326:	out    0x4d,eax
   140013328:	mov    DWORD PTR [rcx+0x333834df],edi
   14001332e:	jb     0x140013303
   140013330:	or     edx,DWORD PTR [rax]
   140013332:	mov    esp,0xd24e9dfb
   140013337:	fcom   QWORD PTR [rcx+rax*1-0xf17e7d0]
   14001333e:	(bad)  
   14001333f:	enter  0x1a50,0x68
   140013343:	sbb    DWORD PTR [rdi-0x64e9e2fe],edx
   140013349:	cmp    DWORD PTR [rdx],edx
   14001334b:	(bad)  
   14001334c:	imul   edx,DWORD PTR [rsi-0x6ff9975],0x3c
   140013353:	xor    DWORD PTR [rsp+rdi*4],0xec91ae48
   14001335a:	jp     0x14001336f
   14001335c:	or     BYTE PTR [rbp-0x4d],dl
   14001335f:	mov    fs,WORD PTR [rcx-0x454ef0]
   140013365:	xor    ch,BYTE PTR [rbp+rsi*8-0x4857c0a]
   14001336c:	rex.B (bad) 
   14001336e:	sahf   
   14001336f:	rex.X (bad) 
   140013371:	rex.R fmul DWORD PTR [rax+0x40]
   140013376:	mov    BYTE PTR [rdx],dl
   140013378:	and    eax,0xbb35e0d0
   14001337d:	repnz iret 
   14001337f:	xchg   esi,eax
   140013380:	mov    edi,0x6c00c36d
   140013385:	scas   al,BYTE PTR es:[rdi]
   140013386:	movsxd edi,ebp
   140013388:	shl    BYTE PTR [rbp+0x38],1
   14001338b:	jb     0x140013360
   14001338d:	mov    ebx,0x2d200bd1
   140013392:	rex.WR (bad) 
   140013394:	js     0x140013400
   140013396:	adc    al,0x3d
   140013398:	mov    bl,0x13
   14001339a:	movabs al,ds:0x38c8a80359a079e5
   1400133a3:	mov    ah,0x7
   1400133a5:	rex.WR xor r11b,al
   1400133a8:	es (bad) 
   1400133aa:	push   rcx
   1400133ab:	in     eax,dx
   1400133ac:	movabs eax,ds:0xf6ae7e73fdfb609
   1400133b5:	imul   ebp,DWORD PTR [rbx+0x69],0xb2085c2f
   1400133bc:	mov    al,0x43
   1400133be:	lods   eax,DWORD PTR ds:[rsi]
   1400133bf:	jle    0x1400133e9
   1400133c1:	sub    BYTE PTR [rdi+rax*8+0x51a09fa],0x28
   1400133c9:	cmp    esp,edi
   1400133cb:	out    0x3e,eax
   1400133cd:	and    DWORD PTR [rcx+0x15bdbbd8],0x5ad2977b
   1400133d7:	(bad)  
   1400133d8:	jbe    0x140013410
   1400133da:	test   BYTE PTR [rcx+rdi*1],al
   1400133dd:	mov    esi,eax
   1400133df:	jmp    0x160acecd7
   1400133e4:	jmp    0x140013377
   1400133e6:	or     BYTE PTR [rax+rbp*1+0x7c],dl
   1400133ea:	adc    r12d,r8d
   1400133ed:	stc    
   1400133ee:	sub    DWORD PTR [rbx+0x622532a2],ebx
   1400133f4:	retf   0xaec9
   1400133f7:	mov    al,0x28
   1400133f9:	(bad)  
   1400133fb:	xor    BYTE PTR [rcx+rbp*8],al
   1400133fe:	ds jbe 0x1400133d9
   140013401:	rex
   140013402:	rex ret 
   140013404:	pop    rbx
   140013405:	out    dx,al
   140013406:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013407:	cwde   
   140013408:	enter  0xb5b9,0x18
   14001340c:	or     DWORD PTR [rax+0x7d5a60e8],0x3f
   140013413:	or     bh,dh
   140013415:	loope  0x140013486
   140013417:	(bad)  
   140013418:	or     eax,0x15e97c1
   14001341d:	pushf  
   14001341e:	fstp   st(2)
   140013420:	(bad)  
   140013421:	add    BYTE PTR [rcx-0x21521612],dh
   140013427:	cld    
   140013428:	ror    DWORD PTR [rdi],0xdd
   14001342b:	xor    bh,BYTE PTR [rax]
   14001342d:	cmp    al,0xf2
   14001342f:	(bad)  
   140013430:	(bad)  
   140013431:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013432:	repz scas al,BYTE PTR es:[rdi]
   140013434:	adc    bl,ah
   140013436:	(bad)  
   140013437:	(bad)  
   140013438:	lods   eax,DWORD PTR ds:[rsi]
   140013439:	xor    edi,DWORD PTR [rdx+rsi*1+0x1]
   14001343d:	es test eax,esi
   140013440:	leave  
   140013441:	rex.RX (bad) 
   140013443:	test   al,0xf5
   140013445:	cs rex.RXB (bad) 
   140013448:	xor    ecx,ebp
   14001344a:	rex.RXB
   14001344b:	rex.R loopne 0x1400134a2
   14001344e:	je     0x14001340d
   140013450:	test   DWORD PTR [rax+0x59],ebx
   140013453:	lahf   
   140013454:	(bad)
   140013458:	fdiv   DWORD PTR [rcx-0x62]
   14001345b:	cmp    DWORD PTR [rsi],esi
   14001345d:	rex.W sub bpl,bl
   140013460:	mov    edx,0x234eaeea
   140013465:	rex.WRX scas al,BYTE PTR es:[rdi]
   140013467:	es pop rsp
   140013469:	mov    ebp,0xb202c2b3
   14001346e:	mov    DWORD PTR [rip+0x3b175210],edx        # 0x17b188684
   140013474:	nop
   140013475:	push   rax
   140013476:	paddsw mm0,mm6
   140013479:	repnz cmc 
   14001347b:	mov    bh,0x83
   14001347d:	jnp    0x1400134f6
   14001347f:	or     BYTE PTR [rsi+0x71348a3c],0x12
   140013486:	(bad)  
   140013487:	movsxd edx,DWORD PTR [rbp-0x1f]
   14001348a:	sub    eax,DWORD PTR [rax]
   14001348c:	adc    dl,BYTE PTR [rdi+0x40]
   14001348f:	and    ah,BYTE PTR [rcx+rcx*2+0x2d]
   140013493:	ja     0x140013496
   140013495:	rex.WRXB rol QWORD PTR [r8-0x2d],0x45
   14001349a:	test   al,0x3b
   14001349c:	cmp    BYTE PTR [rdx-0x5],bh
   14001349f:	(bad)  
   1400134a0:	and    DWORD PTR [rcx+0x6995804b],0x8e3d98ec
   1400134aa:	shr    DWORD PTR [rcx+0x6716a8e3],0x11
   1400134b1:	(bad)  
   1400134b2:	xchg   edi,eax
   1400134b3:	fsubr  QWORD PTR [r8-0x6bb6ebce]
   1400134ba:	adc    eax,0x7235197e
   1400134bf:	(bad)  
   1400134c0:	jg     0x14001350f
   1400134c2:	mov    ecx,0xfd57afdb
   1400134c7:	sub    DWORD PTR [rcx+0x17],esi
   1400134ca:	cwde   
   1400134cb:	cmp    al,0xb6
   1400134cd:	out    dx,eax
   1400134ce:	(bad)  
   1400134cf:	ds (bad) 
   1400134d1:	retf   0x5b9
   1400134d4:	mov    bh,0xe7
   1400134d6:	(bad)  
   1400134d7:	xlat   BYTE PTR ds:[rbx]
   1400134d8:	addr32 out dx,al
   1400134da:	sub    DWORD PTR [rbx+0x5e3b607],0xbecf635d
   1400134e4:	push   rcx
   1400134e5:	adc    al,0x43
   1400134e7:	add    al,0xa
   1400134e9:	add    DWORD PTR [rcx+rbx*1-0x6e],ecx
   1400134ed:	out    0xd0,eax
   1400134ef:	movabs ds:0x9026791a4fe0d53e,al
   1400134f8:	cli    
   1400134f9:	jnp    0x140013565
   1400134fb:	cmc    
   1400134fc:	sbb    eax,0xaac241dd
   140013501:	add    eax,0x5399cfc4
   140013506:	shl    edi,0x8
   140013509:	and    eax,0x90c5ddca
   14001350e:	std    
   14001350f:	std    
   140013510:	add    al,0x14
   140013512:	mov    BYTE PTR [rdx],al
   140013514:	mov    edx,0x88dd8848
   140013519:	cmp    al,0x24
   14001351b:	jbe    0x140013534
   14001351d:	add    al,cl
   14001351f:	sbb    DWORD PTR [rsi+0x17507bd0],ecx
   140013525:	mov    DWORD PTR [rdx],ebx
   140013527:	mov    al,0x22
   140013529:	rex.WRB mov r11b,0xfc
   14001352c:	(bad)  
   14001352d:	out    0x82,al
   14001352f:	sbb    al,cl
   140013531:	lods   al,BYTE PTR ds:[rsi]
   140013532:	sti    
   140013533:	(bad)  
   140013534:	cs data16 (bad) 
   140013537:	xor    eax,0x1a71fb6f
   14001353c:	(bad)  
   14001353e:	adc    DWORD PTR [rsi-0x331338c],edi
   140013544:	jb     0x14001359b
   140013546:	or     BYTE PTR [rsi+0x3ce00a74],bh
   14001354c:	(bad)  
   14001354d:	(bad)  
   14001354e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001354f:	mov    bh,0xbd
   140013551:	movsxd edi,edi
   140013553:	shr    DWORD PTR [rbx],0xae
   140013556:	jp     0x14001359f
   140013558:	fild   WORD PTR [rax-0x1]
   14001355b:	xchg   DWORD PTR [rdx-0x54],eax
   14001355e:	out    dx,al
   14001355f:	rex.WR
   140013560:	(bad)
   140013565:	(bad)  
   140013566:	rex.WRB in al,0xb6
   140013569:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001356a:	jo     0x1400134f4
   14001356c:	lods   al,BYTE PTR ds:[rsi]
   14001356d:	jae    0x1400135d8
   14001356f:	xor    BYTE PTR [rbx-0x7a620a43],cl
   140013575:	fstp   QWORD PTR [rax]
   140013577:	mov    dl,0x78
   140013579:	movsxd ecx,edx
   14001357b:	rex.RXB sub eax,0xb3c2b2b7
   140013581:	add    BYTE PTR [rsi],cl
   140013583:	or     r15b,r8b
   140013586:	add    BYTE PTR [rcx+rbp*4+0x5ce38379],al
   14001358d:	or     al,0x26
   14001358f:	cmp    esp,eax
   140013591:	and    ecx,esi
   140013593:	out    0xb1,eax
   140013595:	mov    esp,0x566deb0
   14001359a:	push   rbp
   14001359b:	rex.WRXB lea r10,[r13+0x46c46eab]
   1400135a2:	call   QWORD PTR [rax]
   1400135a4:	test   al,0xef
   1400135a6:	(bad)  
   1400135a7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400135a8:	xchg   ebx,eax
   1400135a9:	rex.RXB ror DWORD PTR [r11+0x73],0x92
   1400135ae:	(bad)  
   1400135af:	adc    BYTE PTR [rdx],ch
   1400135b1:	ins    DWORD PTR es:[rdi],dx
   1400135b2:	adc    ch,BYTE PTR [rdx-0x49]
   1400135b5:	rcl    DWORD PTR [rdi+rax*8],cl
   1400135b8:	adc    BYTE PTR [rdi],bl
   1400135ba:	cmp    eax,0xe6626e6e
   1400135bf:	(bad)  
   1400135c0:	mov    bh,0xe0
   1400135c2:	hlt    
   1400135c3:	(bad)  
   1400135c4:	outs   dx,DWORD PTR ds:[rsi]
   1400135c5:	rex.X out dx,eax
   1400135c7:	out    0x2a,al
   1400135c9:	ret    0x29dc
   1400135cc:	mov    WORD PTR [rsi+rcx*4-0x5e],cs
   1400135d0:	sahf   
   1400135d1:	lahf   
   1400135d2:	add    al,0xad
   1400135d4:	sub    al,0x0
   1400135d6:	imul   esp,DWORD PTR [rbx],0xeb750437
   1400135dc:	scas   eax,DWORD PTR es:[rdi]
   1400135dd:	int    0x3e
   1400135df:	cmc    
   1400135e0:	dec    ah
   1400135e2:	repnz pop rbx
   1400135e4:	cmp    al,0xdf
   1400135e6:	fcomp  QWORD PTR [rbp-0x25]
   1400135e9:	fild   QWORD PTR [rcx+rdi*4+0x2147ac89]
   1400135f0:	(bad)  
   1400135f1:	lahf   
   1400135f2:	adc    eax,0x212cc048
   1400135f7:	retf   0x74d5
   1400135fa:	repz movabs al,ds:0x4dccc59e3d23e3db
   140013604:	sar    DWORD PTR [rdx+0x73194eef],1
   14001360a:	jns    0x1400135f4
   14001360c:	xchg   ebp,eax
   14001360d:	repz pop rax
   14001360f:	(bad)  
   140013610:	and    esi,ecx
   140013612:	ret    
   140013613:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013614:	lahf   
   140013615:	cli    
   140013616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   140013618:	xchg   ecx,eax
   140013619:	je     0x1400135a5
   14001361b:	jno    0x1400135be
   14001361d:	(bad)  
   14001361e:	or     edi,ebp
   140013620:	cdq    
   140013621:	(bad)
   140013624:	retf   
   140013625:	ret    0x592c
   140013628:	jge    0x1400135e9
   14001362a:	xchg   DWORD PTR [rcx+0x4d],ebp
   14001362d:	push   0xfffffffff024e515
   140013632:	xchg   esi,eax
   140013633:	out    0xc3,eax
   140013635:	jle    0x1400135ea
   140013637:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013638:	leave  
   140013639:	rex.WB xchg BYTE PTR [r8+0x220e9cec],dl
   140013640:	sub    bh,bl
   140013642:	rex.WXB
   140013643:	cmp    ebp,DWORD PTR [r9-0x2084b3db]
   14001364a:	(bad)  
   14001364b:	xchg   ebx,eax
   14001364c:	ja     0x1400136cd
   14001364e:	add    al,0x97
   140013650:	inc    BYTE PTR [rcx]
   140013652:	mov    dl,0x71
   140013654:	jl     0x1400136af
   140013656:	(bad)  
   140013657:	ud1    esi,DWORD PTR [rax-0x29c31ff6]
   14001365e:	jle    0x1400136c8
   140013660:	iret   
   140013661:	sahf   
   140013662:	(bad)  
   140013663:	int    0x6f
   140013665:	jnp    0x14001362e
   140013667:	lea    edi,[rbx]
   140013669:	ja     0x14001365a
   14001366b:	stc    
   14001366c:	xchg   ecx,eax
   14001366d:	mov    edx,0xa44f79d3
   140013672:	jo     0x1400136e9
   140013674:	add    dh,BYTE PTR [rdx]
   140013676:	pushf  
   140013677:	cpuid  
   140013679:	sbb    eax,0x265dfc73
   14001367e:	test   BYTE PTR [rcx+0x77],ch
   140013681:	rex (bad) 
   140013683:	pop    rsi
   140013684:	rex.WX
   140013685:	rex.X ret 0x4e18
   140013689:	xor    ch,BYTE PTR [rbx+0xb]
   14001368c:	(bad)  
   14001368d:	stos   BYTE PTR es:[rdi],al
   14001368e:	(bad)  
   14001368f:	or     edx,ebx
   140013691:	jmp    0xd7e15fb2
   140013696:	or     eax,0xacfc3c9a
   14001369b:	push   rsp
   14001369c:	rex.WX loopne 0x14001370c
   14001369f:	(bad)  
   1400136a0:	loopne 0x140013702
   1400136a2:	sbb    edx,0x92f64168
   1400136a8:	cmovb  esp,DWORD PTR [rcx-0x6c6b9b5a]
   1400136af:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400136b0:	jge    0x14001366c
   1400136b2:	push   rdx
   1400136b3:	add    eax,eax
   1400136b5:	or     BYTE PTR [rax+0x8ec0d9a],ch
   1400136bb:	add    ebx,ebp
   1400136bd:	xchg   edi,eax
   1400136be:	pop    rsp
   1400136bf:	mov    ?,WORD PTR [rbp+0x3b344181]
   1400136c5:	xchg   BYTE PTR [rcx-0x665fb09d],al
   1400136cb:	cdq    
   1400136cc:	rex fcomp QWORD PTR [rdi+rax*1+0x51]
   1400136d1:	test   DWORD PTR [rsi+rbp*4-0x1d7ad0e4],eax
   1400136d8:	sub    al,0x8c
   1400136da:	(bad)  
   1400136db:	fld    QWORD PTR [rbp*8-0x209877c2]
   1400136e2:	lock add esp,edx
   1400136e5:	popf   
   1400136e6:	test   BYTE PTR ds:[rcx-0x70b373cf],bl
   1400136ed:	(bad)  
   1400136ee:	(bad)  
   1400136ef:	cli    
   1400136f0:	cmp    dl,ah
   1400136f2:	loop   0x140013710
   1400136f4:	push   0xffffffffaee00563
   1400136f9:	(bad)  
   1400136fa:	es cli 
   1400136fc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400136fd:	lods   al,BYTE PTR ds:[rsi]
   1400136fe:	or     BYTE PTR [rcx],bh
   140013700:	in     eax,0x37
   140013702:	jo     0x1400136bf
   140013704:	call   0x1042fe4d0
   140013709:	mov    dl,0x33
   14001370b:	sar    BYTE PTR [rdx-0x95249cc],0xb
   140013712:	rex.RX retf 
   140013714:	cmp    bh,BYTE PTR [rbx-0x4d73aa25]
   14001371a:	xchg   ebx,eax
   14001371b:	add    esi,0x15
   14001371e:	adc    BYTE PTR [rdx+0x2],dh
   140013721:	adc    BYTE PTR [rbp-0x5cb36981],dl
   140013727:	enter  0x2ac2,0x4
   14001372b:	jne    0x1400137ac
   14001372d:	jrcxz  0x140013768
   14001372f:	fisubr DWORD PTR [rcx]
   140013731:	pop    rbx
   140013732:	in     eax,0x3b
   140013734:	sub    al,BYTE PTR [rdi+rsi*1]
   140013737:	movabs ds:0xb74d03cea0098200,eax
   140013740:	(bad)  
   140013741:	add    BYTE PTR [rbp-0x22],bl
   140013744:	fsub   st,st(2)
   140013746:	popf   
   140013747:	xor    BYTE PTR [rbx],dh
   140013749:	push   rbx
   14001374a:	cld    
   14001374b:	out    0x56,eax
   14001374d:	cmp    ah,BYTE PTR [rax-0x5a73cda8]
   140013753:	sbb    al,0x58
   140013755:	(bad)  
   140013756:	add    BYTE PTR [rbp+0x41],al
   140013759:	adc    DWORD PTR [rcx],esi
   14001375b:	adc    eax,0x8f5181d9
   140013760:	stos   DWORD PTR es:[rdi],eax
   140013761:	pop    rsp
   140013762:	mov    DWORD PTR [rcx+0x323ce51d],edi
   140013768:	in     al,0x4a
   14001376a:	push   0x1c
   14001376c:	retf   0x2246
   14001376f:	add    al,0x46
   140013771:	movabs al,ds:0x7f9b047bbcde2180
   14001377a:	lods   al,BYTE PTR ds:[rsi]
   14001377b:	pop    rbp
   14001377c:	or     DWORD PTR [rbx-0x3],0xfffffff9
   140013780:	xchg   edx,eax
   140013781:	outs   dx,BYTE PTR ds:[rsi]
   140013782:	(bad)  
   140013783:	add    DWORD PTR [rbx+r15*4-0x2283a953],r11d
   14001378b:	popf   
   14001378c:	outs   dx,DWORD PTR ds:[rsi]
   14001378d:	fnsave [rbx-0x8]
   140013790:	(bad)  
   140013792:	(bad)  
   140013794:	(bad)  
   140013795:	sar    bh,1
   140013797:	movabs eax,ds:0x698430e808bbeb18
   1400137a0:	(bad)  
   1400137a1:	(bad)  
   1400137a2:	fcmove st,st(0)
   1400137a4:	and    BYTE PTR [rdi+0x554004f],al
   1400137aa:	movabs al,ds:0xb6edca27c599f130
   1400137b3:	jno    0x14001381b
   1400137b5:	(bad)  
   1400137b6:	mov    bh,0xc4
   1400137b8:	mov    BYTE PTR [rbp+0x7],ah
   1400137bb:	sbb    BYTE PTR [rdi],dh
   1400137bd:	sbb    bl,ah
   1400137bf:	sbb    ch,BYTE PTR [rbx]
   1400137c1:	std    
   1400137c2:	xchg   edx,eax
   1400137c3:	mov    esp,0xe7379c
   1400137c8:	ins    BYTE PTR es:[rdi],dx
   1400137c9:	push   rbp
   1400137ca:	enter  0xad84,0x1b
   1400137ce:	(bad)  
   1400137cf:	fistp  WORD PTR [rax]
   1400137d1:	cli    
   1400137d2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400137d3:	(bad)  
   1400137d4:	sahf   
   1400137d5:	add    al,0x26
   1400137d7:	sub    DWORD PTR [rax],ecx
   1400137d9:	(bad)  
   1400137da:	out    0xd,eax
   1400137dc:	je     0x140013764
   1400137de:	rex.RX mov al,0xf4
   1400137e1:	(bad)  
   1400137e2:	fcmovnbe st,st(1)
   1400137e4:	sbb    eax,0xfa7e09d8
   1400137e9:	(bad)  
   1400137ea:	xor    al,0x93
   1400137ec:	(bad)  
   1400137ed:	adc    bh,dl
   1400137ef:	push   rsi
   1400137f0:	je     0x1400137b7
   1400137f2:	cdq    
   1400137f3:	add    BYTE PTR [rcx-0x282b14e3],cl
   1400137f9:	jle    0x1400137f8
   1400137fb:	(bad)  
   1400137fc:	outs   dx,BYTE PTR ds:[rsi]
   1400137fd:	jnp    0x14001381e
   1400137ff:	neg    BYTE PTR ss:[rdi-0x79]
   140013803:	(bad)  
   140013804:	(bad)  
   140013805:	cmp    al,0x7a
   140013807:	out    0xc6,eax
   140013809:	xor    DWORD PTR [rsi*2+0x34dcf51c],edi
   140013810:	ret    0x82ca
   140013813:	xor    al,0xfb
   140013815:	movabs al,ds:0x6fda7215004fc994
   14001381e:	and    ch,0x1
   140013821:	jo     0x1400137a9
   140013823:	cld    
   140013824:	stos   BYTE PTR es:[rdi],al
   140013825:	fdiv   DWORD PTR [rdx-0x5710d0bb]
   14001382b:	cmp    dh,0xe6
   14001382e:	(bad)  
   14001382f:	test   al,0x7b
   140013831:	and    BYTE PTR [rdi-0x582ecd61],cl
   140013837:	push   rcx
   140013838:	add    al,0x7b
   14001383a:	add    BYTE PTR [rbp-0x54],ah
   14001383d:	mov    esp,0x4419ebc5
   140013842:	lock out dx,eax
   140013844:	mov    bh,0xa0
   140013846:	xchg   BYTE PTR [rdx+0x39],al
   140013849:	in     al,0x6b
   14001384b:	enter  0xc038,0x90
   14001384f:	sub    DWORD PTR [rax-0x1d],0xffffffb2
   140013853:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013854:	mov    ecx,0x2b9e7248
   140013859:	add    dl,BYTE PTR gs:[rbp+0x1e]
   14001385d:	sbb    eax,0xa66016f
   140013862:	add    DWORD PTR [rbp-0x75ff3c7a],ebp
   140013868:	pop    rsi
   140013869:	(bad)  
   14001386a:	repz rcl BYTE PTR fs:[rbx+rax*2],cl
   14001386f:	pop    rcx
   140013870:	loope  0x140013899
   140013872:	fild   WORD PTR [rdi+0x22]
   140013875:	clts   
   140013877:	data16 rex.WX
   140013879:	add    al,0x5a
   14001387c:	mov    ss,WORD PTR [rbp+0x3ab24ef3]
   140013882:	shr    bl,1
   140013884:	movabs eax,ds:0xfe6fbb97a0004f3c
   14001388d:	mov    ecx,0xdf9af470
   140013892:	in     al,0x6b
   140013894:	(bad)  
   140013895:	test   DWORD PTR [rbp+0x3],eax
   140013898:	pop    rsi
   140013899:	(bad)  
   14001389a:	xor    dh,al
   14001389c:	jnp    0x1400138f5
   14001389e:	add    bh,ah
   1400138a0:	mov    cl,0xf6
   1400138a2:	add    edi,DWORD PTR [rbx]
   1400138a4:	ja     0x14001387c
   1400138a6:	mov    bh,0xbd
   1400138a8:	jmp    0x1400138e7
   1400138aa:	(bad)  
   1400138ab:	mov    gs,esp
   1400138ad:	fsincos 
   1400138af:	and    esi,DWORD PTR [rbp-0x23]
   1400138b2:	repz mov esi,0xce4ae910
   1400138b8:	iret   
   1400138b9:	pop    rsi
   1400138ba:	ret    0x9c6c
   1400138bd:	(bad)  
   1400138be:	sbb    BYTE PTR [rcx+rsi*4-0x25],dl
   1400138c2:	(bad)  
   1400138c3:	or     ah,bh
   1400138c5:	call   0x1839b4f41
   1400138ca:	rol    DWORD PTR [rdi-0x19826a53],1
   1400138d0:	test   DWORD PTR [rbx],edi
   1400138d2:	cli    
   1400138d3:	add    eax,0x1f22c617
   1400138d8:	(bad)  
   1400138d9:	(bad)  
   1400138da:	sbb    eax,DWORD PTR [rax]
   1400138dc:	fwait
   1400138dd:	cs sahf 
   1400138df:	rex.WXB and r10b,cl
   1400138e2:	mov    edi,0xa7f936b0
   1400138e7:	(bad)  
   1400138e8:	mov    bl,0x37
   1400138ea:	frstor [rax-0x6a]
   1400138ed:	ror    BYTE PTR [rdi],0x6d
   1400138f0:	or     al,0x74
   1400138f2:	data16 stos BYTE PTR es:[rdi],al
   1400138f4:	in     eax,dx
   1400138f5:	sub    DWORD PTR [rcx],edx
   1400138f7:	rex.W jge 0x14001393e
   1400138fa:	rex.X ins BYTE PTR es:[rdi],dx
   1400138fc:	(bad)  
   1400138fd:	mov    al,0xa3
   1400138ff:	mov    ds,WORD PTR [rax-0x45]
   140013902:	repnz (bad) 
   140013904:	lods   al,BYTE PTR ds:[rsi]
   140013905:	imul   ebp
   140013907:	rex jp 0x1400138f4
   14001390a:	cmp    ebp,eax
   14001390c:	sahf   
   14001390d:	cmp    al,0x82
   14001390f:	push   0x65
   140013911:	add    DWORD PTR [rcx-0xbbdbf27],esp
   140013917:	repz test DWORD PTR [rbp-0x543d3f3],ecx
   14001391e:	rex.WRB sbb BYTE PTR [r13+0x6be8ede1],r15b
   140013925:	ss adc esi,esp
   140013928:	movsxd r12,DWORD PTR [r10+r13*2+0x14]
   14001392d:	mov    ebp,0xcb08e333
   140013932:	jae    0x1400138d4
   140013934:	out    dx,al
   140013935:	sbb    cl,BYTE PTR [rax-0x3ceb2eae]
   14001393b:	cwde   
   14001393c:	jg     0x1400138de
   14001393e:	(bad)  
   14001393f:	ins    DWORD PTR es:[rdi],dx
   140013940:	cmc    
   140013941:	adc    eax,0x2b7e524
   140013946:	cmp    esi,ebx
   140013948:	outs   dx,DWORD PTR ds:[rsi]
   140013949:	cs scas al,BYTE PTR es:[rdi]
   14001394b:	cmp    al,0x8b
   14001394d:	or     al,0xc7
   14001394f:	add    edx,DWORD PTR [rdi-0x6752603e]
   140013955:	out    0xf8,eax
   140013957:	fwait
   140013958:	cmp    bpl,spl
   14001395b:	xchg   edi,eax
   14001395c:	loope  0x14001396d
   14001395e:	sahf   
   14001395f:	rex.WRXB movabs al,ds:0xc86ee27dc3940e39
   140013969:	add    ecx,DWORD PTR [rcx+0x79731f20]
   14001396f:	loop   0x14001396b
   140013971:	cld    
   140013972:	rex.RB ret 0xeb0b
   140013976:	outs   dx,DWORD PTR ds:[rsi]
   140013977:	cmp    bh,BYTE PTR [rax+rdx*2+0x6feb4503]
   14001397e:	call   QWORD PTR [rbp+rax*8-0x550f48c1]
   140013985:	rex.XB adc al,0x46
   140013988:	adc    DWORD PTR [rcx],edi
   14001398a:	enter  0x2263,0x37
   14001398e:	rex.WR sub rax,0x711f6140
   140013994:	add    DWORD PTR [rcx-0x24],edi
   140013997:	hlt    
   140013998:	adc    al,0xb5
   14001399a:	add    BYTE PTR [rsi+0x432f9072],bl
   1400139a0:	xlat   BYTE PTR ds:[rbx]
   1400139a1:	and    eax,0x5cb4e2e4
   1400139a6:	ror    dh,0xac
   1400139a9:	pop    rsp
   1400139aa:	or     eax,0xbf3151cf
   1400139af:	ins    DWORD PTR es:[rdi],dx
   1400139b0:	fisub  WORD PTR [rbp+0x4aaf8340]
   1400139b6:	or     ebp,DWORD PTR [rdi+0x7]
   1400139b9:	loope  0x140013a2c
   1400139bb:	mov    esp,0x2f01398c
   1400139c0:	pop    rsp
   1400139c1:	add    DWORD PTR [rdi+rax*8-0x504a026],ebx
   1400139c8:	(bad)  
   1400139c9:	or     al,0x5d
   1400139cb:	ja     0x1400139a0
   1400139cd:	sub    eax,0xefebedef
   1400139d2:	sti    
   1400139d3:	xchg   DWORD PTR [rbp+0x55],esi
   1400139d6:	ffreep st(5)
   1400139d8:	rex
   1400139d9:	rex.WRXB and r15b,BYTE PTR [r8-0x4e]
   1400139dd:	or     al,0x3
   1400139df:	push   0x4b33ca52
   1400139e4:	out    dx,eax
   1400139e5:	xor    esi,DWORD PTR [rcx+0x3e]
   1400139e8:	test   al,0x59
   1400139ea:	(bad)  
   1400139eb:	cld    
   1400139ec:	nop
   1400139ed:	int3   
   1400139ee:	adc    eax,0x600c0f80
   1400139f3:	add    ch,BYTE PTR [rdx+rbx*2+0x44]
   1400139f7:	(bad)  
   1400139f8:	out    dx,al
   1400139f9:	rex.WRB (bad) 
   1400139fb:	jne    0x140013a1c
   1400139fd:	(bad)  
   1400139fe:	or     DWORD PTR [rbx-0x52],ebx
   140013a01:	xchg   esp,eax
   140013a02:	fwait
   140013a03:	mov    dh,BYTE PTR [rbx-0x4d60264]
   140013a09:	push   rax
   140013a0a:	retf   0x823b
   140013a0d:	mov    ebx,0x1790626
   140013a12:	js     0x140013994
   140013a14:	shl    BYTE PTR [rdx-0x45],0x72
   140013a18:	cmp    ecx,ebx
   140013a1a:	(bad)  
   140013a1b:	adc    esp,DWORD PTR [rax-0x77ef3536]
   140013a21:	repnz add bl,ah
   140013a24:	and    BYTE PTR [rax+0x17],dh
   140013a27:	cmp    eax,DWORD PTR [rax]
   140013a29:	push   rsp
   140013a2a:	xchg   edi,eax
   140013a2b:	pop    rsp
   140013a2c:	adc    ebp,0xfd3441be
   140013a32:	cmp    edx,eax
   140013a34:	sbb    al,0x7d
   140013a36:	add    dh,BYTE PTR [rax+rsi*1-0x745115f3]
   140013a3d:	and    bl,BYTE PTR [rbx+0x5f]
   140013a40:	(bad)  
   140013a41:	jbe    0x140013a31
   140013a43:	(bad)
   140013a46:	mov    ebp,0x30df751f
   140013a4b:	mov    al,0x70
   140013a4d:	or     bh,BYTE PTR [rbx]
   140013a4f:	addr32 (bad) 
   140013a51:	movsxd esi,DWORD PTR [rax+0x7a]
   140013a54:	or     al,0x71
   140013a56:	(bad)  
   140013a57:	(bad)  
   140013a58:	mov    ah,0xba
   140013a5a:	and    al,0xb9
   140013a5c:	add    al,0x94
   140013a5e:	pushf  
   140013a5f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013a60:	(bad)  
   140013a61:	push   sp
   140013a63:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140013a64:	jge    0x140013a64
   140013a66:	cmc    
   140013a67:	(bad)  
   140013a68:	rex.WR clc 
   140013a6a:	or     eax,0x7e1347fa
   140013a6f:	adc    ebp,DWORD PTR [rsi+riz*1+0x70]
   140013a73:	adc    BYTE PTR [rdi-0x3f],dh
   140013a76:	imul   eax,DWORD PTR [rax+rbx*2],0xf61c9fe7
   140013a7d:	movsxd edx,DWORD PTR [rsi+0x36]
   140013a80:	mov    edi,0x2882f825
   140013a85:	xor    ch,BYTE PTR [rdi-0x70]
   140013a88:	fld    QWORD PTR [rsi]
   140013a8a:	fsubr  DWORD PTR [rbx+0x12]
   140013a8d:	js     0x140013afc
   140013a8f:	rex.WX
   140013a90:	rex
   140013a91:	rex.RXB push r13
   140013a93:	lods   al,BYTE PTR ds:[rsi]
   140013a94:	and    eax,0x3866dfe5
   140013a99:	nop
   140013a9a:	(bad)  
   140013a9b:	fisub  WORD PTR [rcx+0x796713be]
   140013aa1:	(bad)  
   140013aa2:	push   rdx
   140013aa3:	(bad)  
   140013aa4:	ins    DWORD PTR es:[rdi],dx
   140013aa5:	(bad)  
   140013aa6:	cs xchg edx,eax
   140013aa8:	in     al,dx
   140013aa9:	lock fnsave [rax+0x61]
   140013aad:	stos   DWORD PTR es:[rdi],eax
   140013aae:	mov    WORD PTR [rdx-0x1c659c76],ss
   140013ab4:	sub    DWORD PTR [rdi+0x2bb9ad59],ebp
   140013aba:	xchg   ebp,eax
   140013abb:	adc    ah,al
   140013abd:	fwait
   140013abe:	nop
   140013abf:	mov    al,0x89
   140013ac1:	scas   eax,DWORD PTR es:[rdi]
   140013ac2:	sbb    eax,0x8104a28
   140013ac7:	rex.WB pop r12
   140013ac9:	sbb    ah,bl
   140013acb:	(bad)  
   140013acc:	ins    BYTE PTR es:[rdi],dx
   140013acd:	(bad)  
   140013ace:	pop    rdx
   140013acf:	faddp  st(4),st
   140013ad1:	push   rsi
   140013ad2:	mov    ebx,0x1281e79f
   140013ad7:	lods   eax,DWORD PTR ds:[rsi]
   140013ad8:	push   rsp
   140013ad9:	adc    BYTE PTR [rdx+0x276b9710],al
   140013adf:	fistp  QWORD PTR ss:[rdi]
   140013ae2:	(bad)  
   140013ae3:	int    0xdf
   140013ae5:	jns    0x140013b20
   140013ae7:	(bad)  
   140013ae8:	vmwrite rdi,QWORD PTR [rsi+0xa]
   140013aec:	loopne 0x140013b2a
   140013aee:	(bad)  
   140013aef:	(bad)  
   140013af0:	rex jl 0x140013ace
   140013af3:	(bad)  
   140013af4:	cld    
   140013af5:	fmul   DWORD PTR [rbp+0x3b]
   140013af8:	ja     0x140013ae9
   140013afa:	std    
   140013afb:	(bad)  
   140013afc:	rex.WRXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140013afe:	repz rcr DWORD PTR [rax],0xc2
   140013b02:	push   rbp
   140013b03:	and    cl,cl
   140013b05:	mov    DWORD PTR [rsi],edx
   140013b07:	(bad)
   140013b0a:	js     0x140013a99
   140013b0c:	sti    
   140013b0d:	out    0xe4,eax
   140013b0f:	mov    esi,0x68217332
   140013b14:	push   0xffffffffef7b72c3
   140013b19:	mov    al,0xbd
   140013b1b:	mov    al,0xee
   140013b1d:	mov    dl,0x43
   140013b1f:	(bad)  
   140013b20:	rex.RX pushf 
   140013b22:	ror    cl,cl
   140013b25:	ret    0x73e6
   140013b28:	push   rdx
   140013b29:	sti    
   140013b2a:	movabs al,ds:0xe94b2c53252c356a
   140013b33:	(bad)  
   140013b34:	retf   
   140013b35:	and    BYTE PTR [rdx],dl
   140013b37:	mov    dh,0x3c
   140013b39:	jge    0x140013af8
   140013b3b:	mov    BYTE PTR [rbp+rbp*8+0x71],cl
   140013b3f:	jno    0x140013b7e
   140013b41:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013b42:	jns    0x140013b0c
   140013b44:	lods   eax,DWORD PTR ds:[rsi]
   140013b45:	(bad)  
   140013b46:	push   rbx
   140013b47:	sbb    DWORD PTR [rdx+0x2a],esi
   140013b4a:	(bad)  
   140013b4b:	(bad)  
   140013b4c:	mov    cl,0xcf
   140013b4e:	retf   
   140013b4f:	(bad)  
   140013b50:	rex.WB cli 
   140013b52:	or     al,0x8c
   140013b54:	mov    WORD PTR [rax-0x1b],fs
   140013b57:	xchg   BYTE PTR [rdi],dh
   140013b59:	(bad)  
   140013b5a:	mov    bl,0x7f
   140013b5c:	adc    cl,ch
   140013b5e:	cdq    
   140013b5f:	rex.RXB sbb BYTE PTR [r9+0xac6d071],0x62
   140013b67:	push   rbp
   140013b68:	(bad)  
   140013b69:	hlt    
   140013b6a:	cmc    
   140013b6b:	inc    DWORD PTR [rax]
   140013b6d:	retf   
   140013b6e:	sti    
   140013b6f:	scas   eax,DWORD PTR es:[rdi]
   140013b70:	rex.RXB (bad) 
   140013b73:	xor    bh,BYTE PTR [rdx-0x1a]
   140013b76:	rex.WRX (bad) 
   140013b78:	js     0x140013bec
   140013b7a:	adc    al,0xf5
   140013b7c:	in     al,dx
   140013b7d:	and    al,0xc2
   140013b7f:	repnz add dl,al
   140013b82:	test   al,0xf5
   140013b84:	(bad)  
   140013b85:	(bad)  
   140013b86:	rex.WB jmp 0x140013b9f
   140013b89:	jrcxz  0x140013bc2
   140013b8b:	call   0x12559e4af
   140013b90:	xchg   DWORD PTR [rdx-0x80],ecx
   140013b93:	lods   al,BYTE PTR ds:[rsi]
   140013b94:	(bad)  
   140013b95:	mov    ebp,0xed6e9a50
   140013b9a:	xchg   ecx,eax
   140013b9b:	int    0x90
   140013b9d:	xchg   ebx,eax
   140013b9e:	js     0x140013b61
   140013ba0:	(bad)  
   140013ba1:	or     al,dl
   140013ba3:	leave  
   140013ba4:	out    dx,al
   140013ba5:	ret    0xfe46
   140013ba8:	cmp    eax,0xc09865d9
   140013bad:	xchg   edi,eax
   140013bae:	xchg   esi,eax
   140013baf:	sar    bh,cl
   140013bb1:	enter  0x8295,0x23
   140013bb5:	xor    BYTE PTR [rdi],ah
   140013bb7:	fst    QWORD PTR [rcx+rsi*4+0x16]
   140013bbb:	xchg   esi,eax
   140013bbc:	rcr    esi,cl
   140013bbe:	fwait
   140013bbf:	nop
   140013bc0:	mov    ebx,0x686bd125
   140013bc5:	mov    ebx,0xc1435270
   140013bca:	(bad)  
   140013bcb:	push   rdx
   140013bcd:	mov    ebp,0x373ffce6
   140013bd2:	shrd   DWORD PTR [rcx-0x73c973d7],edx,cl
   140013bd9:	jmp    0x14184dc95
   140013bde:	rex.X add al,0x96
   140013be1:	and    eax,0x5d488c1
   140013be6:	sub    BYTE PTR [rdi+rbp*2],0xce
   140013bea:	fs sbb edi,ebx
   140013bed:	jp     0x140013c2f
   140013bef:	rcl    BYTE PTR [rdx-0x53482cf],cl
   140013bf5:	lods   al,BYTE PTR ds:[rsi]
   140013bf6:	in     al,dx
   140013bf7:	rol    BYTE PTR [rcx-0x50],cl
   140013bfa:	cmc    
   140013bfb:	sbb    eax,0x50ec148d
   140013c00:	jp     0x140013bef
   140013c02:	(bad)  
   140013c03:	rcl    ebx,cl
   140013c05:	mov    bh,0xfe
   140013c07:	adc    bh,BYTE PTR [rdi+0x593eebe6]
   140013c0d:	pop    rsi
   140013c0e:	(bad)  
   140013c0f:	(bad)  
   140013c10:	loopne 0x140013bee
   140013c12:	or     ah,al
   140013c14:	(bad)  
   140013c16:	ds pop rsp
   140013c18:	jnp    0x140013be5
   140013c1a:	jmp    0x140013ba3
   140013c1c:	scas   al,BYTE PTR es:[rdi]
   140013c1d:	mov    ebp,0xe9eff5e5
   140013c22:	out    dx,eax
   140013c23:	out    dx,eax
   140013c24:	sti    
   140013c25:	xchg   ecx,eax
   140013c26:	rex.WRX push rbp
   140013c28:	mov    edi,0x4300c005
   140013c2d:	(bad)  
   140013c2e:	xchg   esi,eax
   140013c2f:	test   ecx,esi
   140013c31:	xor    rax,0x423df5b9
   140013c37:	rcr    BYTE PTR [rax+0x76fec3b7],1
   140013c3d:	mov    ah,0x3b
   140013c3f:	add    DWORD PTR [rdx+0x5f619731],ebx
   140013c45:	sub    al,BYTE PTR [rdx+0x7b]
   140013c48:	(bad)  
   140013c49:	dec    DWORD PTR [rax-0x76be1d23]
   140013c4f:	xchg   ebp,eax
   140013c50:	(bad)  
   140013c51:	in     al,0xf
   140013c53:	push   rbx
   140013c54:	cmp    dh,ch
   140013c56:	mov    edx,0x161fb01d
   140013c5b:	push   rbx
   140013c5c:	and    BYTE PTR [rdi-0x2e2f5f4d],al
   140013c62:	fdivr  DWORD PTR [rbp+rbp*8+0x23]
   140013c66:	add    eax,0x6bc9fa4f
   140013c6b:	rex.WRB mov r15b,0x8e
   140013c6e:	push   rbx
   140013c6f:	sbb    dl,BYTE PTR [rdi+0x7b05423c]
   140013c75:	lods   eax,DWORD PTR ds:[rsi]
   140013c76:	jle    0x140013cb4
   140013c78:	mov    BYTE PTR [rdx+rdi*8-0x1b],bh
   140013c7c:	jrcxz  0x140013c16
   140013c7e:	add    BYTE PTR [rax],cl
   140013c80:	adc    DWORD PTR [rbp+rbp*2-0x52],0xc2b7b061
   140013c88:	fisubr DWORD PTR [rbx-0x71153a92]
   140013c8e:	(bad)  
   140013c8f:	xor    al,0x4f
   140013c91:	or     BYTE PTR ds:[rdx],bh
   140013c94:	(bad)  
   140013c95:	sub    al,0x96
   140013c97:	scas   eax,DWORD PTR es:[rdi]
   140013c98:	mov    eax,0xfeafe30a
   140013c9d:	sti    
   140013c9e:	call   0x1bf3d3dae
   140013ca3:	or     al,BYTE PTR [rbx-0x2d]
   140013ca6:	movabs ds:0x35363e8d213e9fe8,eax
   140013caf:	jmp    0x16b25cf3b
   140013cb4:	adc    DWORD PTR [rax],0xa8f61658
   140013cba:	and    DWORD PTR [rcx+0x7f],ebx
   140013cbd:	mov    dl,0xe0
   140013cbf:	xchg   DWORD PTR [rsi-0x4],edx
   140013cc2:	push   rcx
   140013cc3:	adc    esi,esi
   140013cc5:	push   rbx
   140013cc6:	stos   DWORD PTR es:[rdi],eax
   140013cc7:	or     eax,0x5d97340
   140013ccc:	(bad)  
   140013ccd:	and    eax,DWORD PTR [rcx+0x2d]
   140013cd0:	mov    ch,0x31
   140013cd2:	cld    
   140013cd3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013cd4:	add    al,ah
   140013cd6:	mov    al,0x9d
   140013cd8:	add    BYTE PTR [rip+0xdc2d8b],ch        # 0x140dd6a69
   140013cde:	shr    BYTE PTR [rdi+rdi*1-0x35],cl
   140013ce2:	xchg   edi,eax
   140013ce3:	(bad)  
   140013ce4:	clc    
   140013ce5:	sbb    al,BYTE PTR [rax+0x5811cc84]
   140013ceb:	push   rax
   140013cec:	xor    BYTE PTR [rdi-0x68ea26e9],al
   140013cf2:	int    0x15
   140013cf4:	imul   edi,eax,0xffffff91
   140013cf7:	(bad)  
   140013cf8:	pop    rsi
   140013cf9:	mov    dh,0xf8
   140013cfb:	in     eax,0x66
   140013cfd:	out    dx,al
   140013cfe:	(bad)  
   140013cff:	and    eax,0x331fd348
   140013d04:	es (bad) 
   140013d06:	xlat   BYTE PTR ds:[rbx]
   140013d07:	(bad)  
   140013d08:	adc    al,0xe1
   140013d0a:	rcl    BYTE PTR [rcx+0xa1b4ad4],1
   140013d10:	push   rcx
   140013d11:	xchg   DWORD PTR [rsi-0x4ff65634],ecx
   140013d17:	sahf   
   140013d18:	(bad)  
   140013d19:	pushfw 
   140013d1b:	or     al,0x5d
   140013d1d:	pop    rdx
   140013d1e:	clc    
   140013d1f:	mov    bl,0x71
   140013d21:	rex.RX adc al,0xaa
   140013d24:	xor    BYTE PTR [rdx-0x3477de6e],0x63
   140013d2b:	retf   0x1a47
   140013d2e:	(bad)  
   140013d2f:	in     al,0xb9
   140013d31:	ins    BYTE PTR es:[rdi],dx
   140013d32:	cmp    esp,ebp
   140013d34:	pop    rdx
   140013d35:	mov    al,0xe0
   140013d37:	repz push rsp
   140013d39:	jle    0x140013cc6
   140013d3b:	mov    esi,0x6ee578cb
   140013d40:	add    bh,bl
   140013d42:	rex.R (bad) 
   140013d44:	or     DWORD PTR [rax+0x49],edi
   140013d47:	mov    bh,0x33
   140013d49:	sub    eax,DWORD PTR [rax-0x432ecb0d]
   140013d4f:	jmp    0x140013d98
   140013d51:	push   rcx
   140013d53:	jmp    0x140013cdb
   140013d55:	rex.RX jbe 0x140013dd7
   140013d58:	movabs al,ds:0x1aba04387f7b7b7
   140013d61:	adc    eax,0x6ce69b7a
   140013d66:	xchg   ebx,eax
   140013d67:	pop    rbx
   140013d68:	(bad)  
   140013d69:	shl    DWORD PTR [rbx],cl
   140013d6b:	icebp  
   140013d6c:	(bad)  
   140013d6d:	xchg   edx,eax
   140013d6e:	mov    edx,0x9d212f32
   140013d73:	or     cl,BYTE PTR [rax+0x6a]
   140013d76:	cmp    DWORD PTR [rsi+rbp*1],0x45
   140013d7a:	rex.RXB jg 0x140013de0
   140013d7d:	outs   dx,DWORD PTR ds:[rsi]
   140013d7e:	retf   
   140013d7f:	ins    BYTE PTR es:[rdi],dx
   140013d80:	mov    edi,0xeecea5b6
   140013d85:	rex.X stc 
   140013d87:	cdq    
   140013d88:	in     eax,0x8
   140013d8a:	mov    BYTE PTR [rdx-0x79e25970],dl
   140013d90:	add    BYTE PTR [rax+0x26d81ccd],ah
   140013d96:	je     0x140013d31
   140013d98:	mov    dl,BYTE PTR [rcx+0x58]
   140013d9b:	(bad)  
   140013d9c:	rex.RXB adc r12b,BYTE PTR [r13-0x6aae2e0e]
   140013da3:	push   rbx
   140013da4:	nop
   140013da5:	sub    ecx,DWORD PTR [rdi]
   140013da7:	imul   ebp,DWORD PTR [rdx+riz*2],0xffffffee
   140013dab:	mov    esp,DWORD PTR [rbp+0x4d6e6c2]
   140013db1:	jns    0x140013d99
   140013db3:	xor    BYTE PTR [rax],cl
   140013db5:	sbb    DWORD PTR [rbx],0xea8340ec
   140013dbb:	shr    BYTE PTR [rbx+0x2763bab0],cl
   140013dc1:	mov    edx,0x7a303b03
   140013dc6:	(bad)
   140013dc9:	cmp    esi,DWORD PTR [rsi-0x7d]
   140013dcc:	push   rdi
   140013dcd:	(bad)  
   140013dce:	xor    BYTE PTR [rax],bh
   140013dd0:	jnp    0x140013de4
   140013dd2:	rex.XB xchg r11d,eax
   140013dd4:	movsxd ebp,DWORD PTR [rax+0x561067e6]
   140013dda:	xchg   edi,eax
   140013ddb:	shr    BYTE PTR [rcx+0x3],0x64
   140013ddf:	js     0x140013e3e
   140013de1:	lahf   
   140013de2:	or     BYTE PTR [r10],r9b
   140013de5:	std    
   140013de6:	and    esi,eax
   140013de8:	sub    ah,BYTE PTR [rdx+0x15516bc9]
   140013dee:	(bad)  
   140013def:	fild   QWORD PTR [rip+0xbc59ad]        # 0x140bd97a2
   140013df5:	stos   DWORD PTR es:[rdi],eax
   140013df6:	(bad)
   140013df9:	add    BYTE PTR [rbx-0x3a],bh
   140013dfc:	rex.RX (bad) 
   140013dfe:	xor    DWORD PTR [rax-0x57],esp
   140013e01:	sbb    DWORD PTR [rcx-0x8],0xffffffc9
   140013e05:	test   DWORD PTR [rdi],esi
   140013e07:	or     ebp,DWORD PTR [rsi+rsi*1-0x3]
   140013e0b:	outs   dx,BYTE PTR ds:[rsi]
   140013e0c:	sub    BYTE PTR [r15-0x7c58af5],r8b
   140013e13:	std    
   140013e14:	(bad)  [rbx]
   140013e16:	(bad)  [rsi+0x3c8d29b1]
   140013e1c:	adc    al,0xf6
   140013e1e:	mov    ecx,0xeb16e8c1
   140013e23:	push   0xffffffffffffffe3
   140013e25:	mov    edi,0xd316531d
   140013e2a:	xor    edx,0x8a44a9ef
   140013e30:	pushf  
   140013e31:	out    0x9b,eax
   140013e33:	and    bl,BYTE PTR [rax+0x7587e132]
   140013e39:	(bad)  
   140013e3a:	cdq    
   140013e3b:	icebp  
   140013e3c:	mov    al,0xbc
   140013e3e:	and    ecx,edi
   140013e40:	(bad)  
   140013e41:	xor    BYTE PTR [rbx-0x33c5da3c],ah
   140013e47:	push   rdi
   140013e48:	(bad)  
   140013e49:	jns    0x140013e09
   140013e4b:	in     eax,0x2d
   140013e4d:	fs (bad) 
   140013e4f:	sub    DWORD PTR [rdi+0x6a],ecx
   140013e52:	(bad)  
   140013e53:	ja     0x140013e34
   140013e55:	std    
   140013e56:	(bad)  
   140013e57:	(bad)  
   140013e58:	clc    
   140013e59:	(bad)  
   140013e5a:	mul    DWORD PTR [rcx-0x21]
   140013e5d:	rex.RX icebp 
   140013e5f:	xchg   ebx,eax
   140013e60:	xchg   edi,eax
   140013e61:	add    DWORD PTR [rcx],eax
   140013e63:	pushf  
   140013e64:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013e65:	lods   eax,DWORD PTR ds:[rsi]
   140013e66:	(bad)  
   140013e67:	xor    eax,0xe3bcde37
   140013e6c:	mov    edx,0x577b6f5b
   140013e71:	inc    eax
   140013e73:	ror    BYTE PTR [rdi+0x27755556],0x11
   140013e7a:	or     eax,0xbd21c831
   140013e7f:	cmp    eax,0xd68aa0f4
   140013e84:	imul   esi,ecx,0xffffffd1
   140013e87:	pop    si
   140013e89:	gs (bad) 
   140013e8b:	in     eax,dx
   140013e8c:	cwde   
   140013e8d:	add    ebx,DWORD PTR [rbx]
   140013e8f:	(bad)  
   140013e90:	jbe    0x140013eaa
   140013e92:	(bad)  
   140013e93:	in     eax,0xfe
   140013e95:	sub    BYTE PTR [rsi],ah
   140013e97:	rex.RB
   140013e98:	or     ah,BYTE PTR ss:[rax]
   140013e9b:	xchg   esp,eax
   140013e9c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140013e9d:	sbb    BYTE PTR [rsi+0x6e],dh
   140013ea0:	js     0x140013ef0
   140013ea2:	ss mov cl,0xe5
   140013ea5:	(bad)  
   140013ea6:	ins    DWORD PTR es:[rdi],dx
   140013ea7:	icebp  
   140013ea8:	call   rbp
   140013eaa:	loop   0x140013ec6
   140013eac:	(bad)  
   140013ead:	enter  0xc956,0x5c
   140013eb1:	cmp    eax,0x409f1fbd
   140013eb6:	addr32 retf 0xd34e
   140013eba:	jae    0x140013f26
   140013ebc:	sbb    ebp,eax
   140013ebe:	lods   eax,DWORD PTR ds:[rsi]
   140013ebf:	jl     0x140013e74
   140013ec1:	pop    rcx
   140013ec2:	sbb    al,0x2
   140013ec4:	rex.R loope 0x140013eec
   140013ec7:	rex.XB
   140013ec8:	rex.X stc 
   140013eca:	icebp  
   140013ecb:	(bad)  
   140013ecc:	(bad)  
   140013ecd:	and    ecx,DWORD PTR [rsi-0x66]
   140013ed0:	out    dx,al
   140013ed1:	sub    edi,ebx
   140013ed3:	and    al,0x10
   140013ed5:	nop
   140013ed6:	sbb    dh,ah
   140013ed8:	vpmuludq ymm14,ymm6,ymm4
   140013edc:	jbe    0x140013ece
   140013ede:	(bad)  
   140013edf:	(bad)  
   140013ee0:	stos   DWORD PTR es:[rdi],eax
   140013ee1:	mov    cl,0x74
   140013ee3:	call   0x166d4e7bd
   140013ee8:	push   0xffffffffa64614fe
   140013eed:	mov    fs,WORD PTR [rdx+0x6814f667]
   140013ef3:	jne    0x140013f06
   140013ef5:	fcomp  QWORD PTR [rbp+0x43]
   140013ef8:	mov    al,0x5a
   140013efa:	jg     0x140013eb1
   140013efc:	outs   dx,BYTE PTR ds:[rsi]
   140013efd:	push   rcx
   140013efe:	pop    rbx
   140013eff:	jge    0x140013f56
   140013f01:	int3   
   140013f02:	rex.WX mov spl,0x49
   140013f05:	mov    ebp,0x47edd97f
   140013f0a:	lods   al,BYTE PTR ds:[rsi]
   140013f0b:	mov    edi,0x5af273c1
   140013f10:	or     bl,cl
   140013f12:	jnp    0x140013e95
   140013f14:	jle    0x140013ebc
   140013f16:	(bad)  
   140013f17:	rex.WB lods rax,QWORD PTR ds:[rsi]
   140013f19:	jne    0x140013f69
   140013f1b:	(bad)  
   140013f1c:	add    eax,ecx
   140013f1e:	sub    eax,0xb575167f
   140013f23:	lahf   
   140013f24:	rol    DWORD PTR fs:[rip+0xffffffffbdf30c23],1        # 0xfdf44b4e
   140013f2b:	push   rbx
   140013f2c:	enter  0x977b,0x4d
   140013f30:	rex.RX sub al,0x2d
   140013f33:	mov    eax,0x28a619d4
   140013f38:	cmc    
   140013f39:	(bad)  
   140013f3a:	xor    BYTE PTR [rbx-0x12],al
   140013f3d:	repz rex.B
   140013f3f:	gs stos DWORD PTR es:[rdi],eax
   140013f41:	(bad)
   140013f44:	lahf   
   140013f45:	fistp  DWORD PTR [rsp-0xdf9c098]
   140013f4c:	(bad)  
   140013f4d:	(bad)  
   140013f4e:	sahf   
   140013f4f:	cmp    BYTE PTR [rsi+0x45b79527],ah
   140013f55:	(bad)  
   140013f56:	lahf   
   140013f57:	pop    rdi
   140013f58:	(bad)  
   140013f59:	and    edi,DWORD PTR [rcx]
   140013f5b:	rex.WRXB and rax,0x421517
   140013f61:	xchg   DWORD PTR [rsp+riz*4-0x494debf],eax
   140013f68:	in     eax,dx
   140013f69:	pop    rbp
   140013f6a:	sub    DWORD PTR [rbp+0x6a],0xffffff98
   140013f6e:	movabs ds:0x42082b1b381a6365,al
   140013f77:	sub    DWORD PTR [rdx],0x627bf28e
   140013f7d:	rex.RX test esi,r12d
   140013f80:	push   rbp
   140013f81:	ja     0x140013fe6
   140013f83:	loop   0x140013f3b
   140013f85:	sti    
   140013f86:	mov    al,0xef
   140013f88:	ror    eax,cl
   140013f8a:	rex.WB
   140013f8b:	rex.B (bad) 
   140013f8d:	cdq    
   140013f8e:	sbb    edx,DWORD PTR [rax-0x63]
   140013f91:	xlat   BYTE PTR ds:[rbx]
   140013f92:	fidivr DWORD PTR [rdi-0x18]
   140013f95:	rex.RXB pop r15
   140013f97:	mov    ch,0x6b
   140013f99:	iret   
   140013f9a:	mov    esi,0xce9d57f7
   140013f9f:	ja     0x10f249ebd
   140013fa5:	fnstcw WORD PTR [rbx+rbx*4+0x2]
   140013fa9:	(bad)  
   140013faa:	sbb    ah,cl
   140013fac:	sub    DWORD PTR gs:[rax+0x955a648],edx
   140013fb3:	xchg   edx,eax
   140013fb4:	rex.B cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013fb6:	adc    ebp,DWORD PTR [rax-0x37092cfc]
   140013fbc:	(bad)  [rax-0x466125ea]
   140013fc2:	cmp    BYTE PTR [rdi],al
   140013fc4:	mov    dl,0xa2
   140013fc6:	xor    BYTE PTR [rbx-0x1f],cl
   140013fc9:	xor    eax,0x17f7e6df
   140013fce:	jae    0x140013f91
   140013fd0:	mov    es,WORD PTR [rbp-0x3c]
   140013fd3:	lods   eax,DWORD PTR ds:[rsi]
   140013fd4:	cld    
   140013fd5:	jg     0x14001401d
   140013fd7:	push   rsi
   140013fd8:	sbb    al,0x66
   140013fda:	stc    
   140013fdb:	ins    DWORD PTR es:[rdi],dx
   140013fdc:	loop   0x140013f79
   140013fde:	rex.WRXB jbe 0x140013fc7
   140013fe1:	stos   DWORD PTR es:[rdi],eax
   140013fe2:	or     esi,DWORD PTR [rax-0x68f144e8]
   140013fe8:	pop    rbx
   140013fe9:	rex.WRX
   140013fea:	rex.RXB (bad) 
   140013fec:	fdiv   QWORD PTR [rdx+0x76a4f975]
   140013ff2:	xor    al,0xf
   140013ff4:	rex.RXB xchg r8d,eax
   140013ff6:	(bad)  
   140013ff7:	push   rbx
   140013ff8:	call   rsi
   140013ffa:	mov    edx,0x585c949
   140013fff:	add    al,0x6e
   140014001:	xor    BYTE PTR [rbp-0x1e],dh
   140014004:	or     dh,al
   140014006:	neg    bh
   140014008:	or     dl,ch
   14001400a:	fld    DWORD PTR [rcx-0x2271c0cc]
   140014010:	xor    esp,DWORD PTR [rbx+0x18]
   140014013:	cwde   
   140014014:	cmp    cl,BYTE PTR [rsi-0x4f78c750]
   14001401a:	mov    esi,0x3f03d7ac
   14001401f:	(bad)  
   140014020:	rex.B loop 0x14001401e
   140014023:	adc    eax,0xf1856a11
   140014028:	add    bh,ch
   14001402a:	loope  0x140014065
   14001402c:	call   QWORD PTR [rip+0xffffffffd5aa7274]        # 0x115abb2a6
   140014032:	ss stos DWORD PTR es:[rdi],eax
   140014034:	cdq    
   140014035:	test   ebx,edx
   140014037:	add    al,0xbe
   140014039:	mov    BYTE PTR [rsi],cl
   14001403b:	and    BYTE PTR [rbx],ch
   14001403d:	push   0xffffffffffffffcb
   14001403f:	adc    ch,BYTE PTR [rdi+rbp*8]
   140014042:	stos   DWORD PTR es:[rdi],eax
   140014043:	push   rbp
   140014044:	(bad)  
   140014045:	stos   DWORD PTR es:[rdi],eax
   140014046:	out    dx,eax
   140014047:	and    eax,0x1e0e5093
   14001404c:	rex.WRB cdqe 
   14001404e:	push   rbp
   14001404f:	rex.W (bad) 
   140014051:	test   al,0x30
   140014053:	int    0xd5
   140014055:	shl    bl,1
   140014057:	mov    bh,0xc1
   140014059:	fwait
   14001405a:	pop    rbp
   14001405b:	and    al,0x5a
   14001405d:	outs   dx,BYTE PTR ds:[rsi]
   14001405e:	cmp    DWORD PTR [rbx],0x77962cff
   140014064:	imul   ebx,DWORD PTR [rsi+0x33792986],0xe
   14001406b:	rex.WRX movabs rax,0x1914f943a3c8f589
   140014075:	call   0x10288982a
   14001407a:	(bad)  
   14001407b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001407c:	xlat   BYTE PTR ds:[rbx]
   14001407d:	outs   dx,DWORD PTR ds:[rsi]
   14001407e:	xlat   BYTE PTR ds:[rbx]
   14001407f:	out    0xde,al
   140014081:	cmp    DWORD PTR [rdi-0x7f99e899],0xa0e5e57c
   14001408b:	cmp    al,0x1
   14001408d:	mov    eax,0x3725e730
   140014092:	mov    ch,0x65
   140014094:	sahf   
   140014095:	adc    BYTE PTR [rcx],al
   140014097:	xchg   edi,eax
   140014098:	repnz retf 0x4107
   14001409c:	clc    
   14001409d:	cmp    al,0x5e
   14001409f:	xchg   ch,al
   1400140a1:	rex.XB mov WORD PTR [r15],fs
   1400140a4:	and    dl,BYTE PTR [rax*4-0x14228c8]
   1400140ab:	or     eax,0xcd7caf3b
   1400140b0:	or     eax,0x1c1fe96f
   1400140b5:	cli    
   1400140b6:	mov    cl,0xaa
   1400140b8:	stos   BYTE PTR es:[rdi],al
   1400140b9:	out    dx,al
   1400140ba:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400140bb:	rol    BYTE PTR [rbx+rdx*8+0x2f],cl
   1400140c0:	xor    ebx,edi
   1400140c2:	test   al,0x11
   1400140c4:	sub    eax,DWORD PTR [rdx]
   1400140c6:	cmc    
   1400140c7:	jae    0x140014058
   1400140c9:	hlt    
   1400140ca:	pushf  
   1400140cb:	jg     0x14001411a
   1400140cd:	movabs al,ds:0x260c473bfac7c2a8
   1400140d6:	cmp    al,0xec
   1400140d8:	mov    al,0x49
   1400140da:	(bad)  
   1400140db:	mov    DWORD PTR [rip+0x4211e8fc],edx        # 0x1821329dd
   1400140e1:	enter  0x4984,0x31
   1400140e5:	pop    rax
   1400140e6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400140e7:	cmp    BYTE PTR [rsp+rdx*1],0xa8
   1400140eb:	sbb    DWORD PTR [rbx+0x4ec0b0a],0x5d
   1400140f2:	add    DWORD PTR [rax],ebx
   1400140f4:	add    cl,dl
   1400140f6:	and    edi,DWORD PTR fs:[rcx]
   1400140f9:	scas   eax,DWORD PTR es:[rdi]
   1400140fa:	rex
   1400140fb:	fs (bad) 
   1400140fe:	adc    al,BYTE PTR [rdx+rsi*8+0x248514f0]
   140014105:	cmp    dl,BYTE PTR [rsi]
   140014107:	out    0x6f,al
   140014109:	mov    edx,0xac52688f
   14001410e:	popf   
   14001410f:	(bad)  
   140014111:	sbb    DWORD PTR [rsi],ebp
   140014113:	mov    ecx,0xd35097f0
   140014118:	add    eax,0xde919edf
   14001411d:	pop    rbx
   14001411e:	mov    WORD PTR [rcx],ss
   140014120:	retf   
   140014121:	movsxd eax,DWORD PTR [rdi-0xf]
   140014124:	fs out dx,eax
   140014126:	jle    0x1400140cc
   140014128:	mov    ebp,0xceac2057
   14001412d:	movabs ds:0x5bf894a68638e67f,eax
   140014136:	pop    rbp
   140014137:	add    al,0x37
   140014139:	imul   ecx,DWORD PTR [rax],0x56
   14001413c:	leave  
   14001413d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001413e:	ret    
   14001413f:	(bad)  
   140014140:	shr    DWORD PTR [rax-0x75064b7e],0x44
   140014147:	or     dl,bl
   140014149:	out    0xcf,eax
   14001414b:	cdq    
   14001414c:	jg     0x140014102
   14001414e:	or     al,0x1f
   140014150:	add    ch,dh
   140014152:	push   rdi
   140014153:	(bad)  
   140014154:	ja     0x14001410d
   140014156:	xor    DWORD PTR [rbx],ebp
   140014158:	(bad)  
   140014159:	jbe    0x140014163
   14001415b:	push   0x21
   14001415d:	fisttp QWORD PTR [rdx+0x1b]
   140014160:	cld    
   140014161:	xor    eax,0x7257cb
   140014166:	xchg   BYTE PTR [rax],bh
   140014168:	xor    ah,BYTE PTR [rcx]
   14001416a:	push   0xc1389cb
   14001416f:	adc    eax,0x760770b0
   140014174:	(bad)  
   140014175:	xchg   esp,eax
   140014176:	mov    edi,0xcd00ab2f
   14001417b:	add    BYTE PTR [rax-0x3048cdae],bl
   140014181:	fimul  DWORD PTR [rdi+riz*2-0xd26be95]
   140014188:	cli    
   140014189:	data16 loope 0x1400141cc
   14001418c:	sbb    ebx,DWORD PTR [rbx-0x553f7cca]
   140014192:	adc    al,0xc
   140014194:	and    eax,0x439273e6
   140014199:	jl     0x1400141ee
   14001419b:	movs   BYTE PTR es:[rdi],BYTE PTR cs:[rsi]
   14001419d:	sub    eax,eax
   14001419f:	rex.RX or DWORD PTR [rcx+0x1a122108],r8d
   1400141a6:	or     eax,0x8068e5f9
   1400141ab:	and    bl,BYTE PTR [rax+rax*1+0x40686370]
   1400141b2:	(bad)  
   1400141b3:	jp     0x140014188
   1400141b5:	adc    BYTE PTR [rdx-0x4d],cl
   1400141b8:	addr32 mov ds:0x2725d32f,eax
   1400141be:	rex.RX xchg ebp,eax
   1400141c0:	push   rax
   1400141c1:	mov    bh,0x17
   1400141c3:	int    0xdf
   1400141c5:	jmp    FWORD PTR [rcx]
   1400141c7:	mov    WORD PTR [rsi],ds
   1400141c9:	clc    
   1400141ca:	jge    0x140014228
   1400141cc:	mov    dl,BYTE PTR ss:[rdi+0xa90f178]
   1400141d3:	enter  0xe246,0x4d
   1400141d7:	out    dx,eax
   1400141d8:	sti    
   1400141d9:	movabs eax,ds:0xa7bac1fc3c1cf62b
   1400141e2:	out    0x83,eax
   1400141e4:	and    esi,eax
   1400141e6:	xlat   BYTE PTR ds:[rbx]
   1400141e7:	sti    
   1400141e8:	fs push rcx
   1400141ea:	stc    
   1400141eb:	icebp  
   1400141ec:	push   rdx
   1400141ed:	(bad)  
   1400141ee:	add    dh,dh
   1400141f0:	(bad)  
   1400141f1:	mov    al,0x5f
   1400141f3:	jnp    0x1400141ce
   1400141f5:	mov    BYTE PTR [rbx+0xa5f098b],al
   1400141fb:	mov    bl,0xdd
   1400141fd:	sub    al,0x97
   1400141ff:	scas   eax,DWORD PTR es:[rdi]
   140014200:	rex.WRB shl QWORD PTR [r10],1
   140014203:	xchg   eax,ebp
   140014205:	jl     0x140014277
   140014207:	add    ch,BYTE PTR [rcx-0xb]
   14001420a:	sbb    al,0x9c
   14001420c:	clc    
   14001420d:	movabs ds:0xa42f1f985dbb9ee0,eax
   140014216:	in     al,0x7
   140014218:	xor    ebp,DWORD PTR [rax]
   14001421a:	(bad)  
   14001421b:	pop    rdx
   14001421c:	test   BYTE PTR [rax+0x5e4202da],al
   140014222:	(bad)  
   140014223:	sbb    eax,0x93e6552d
   140014228:	fucom  st(0)
   14001422a:	data16 mov cl,0x93
   14001422d:	adc    esi,DWORD PTR [rsi]
   14001422f:	and    eax,0xc0b3712e
   140014234:	rex.RB
   140014235:	data16 sbb cl,cl
   140014238:	and    al,0x66
   14001423a:	mov    dh,0x23
   14001423c:	xchg   ebx,eax
   14001423d:	rex.RX not BYTE PTR [rbx-0x5cbeb16d]
   140014244:	movabs eax,ds:0x6e7742b14194a7d2
   14001424d:	add    cl,bh
   14001424f:	sub    eax,0xfafe626f
   140014254:	xlat   BYTE PTR ds:[rbx]
   140014255:	and    DWORD PTR [rsi+rax*1-0x138e0663],esp
   14001425c:	sahf   
   14001425d:	cmp    al,0x86
   14001425f:	dec    cl
   140014261:	xchg   ebx,eax
   140014262:	mov    BYTE PTR [rbx],ch
   140014264:	or     esi,DWORD PTR [rdx-0x26c8e04a]
   14001426a:	fist   WORD PTR [rcx+rsi*8]
   14001426d:	(bad)  
   14001426e:	rex.WX (bad) 
   140014270:	push   rsi
   140014271:	sub    ebx,DWORD PTR [rdi+0x26c8fe33]
   140014277:	stos   BYTE PTR es:[rdi],al
   140014278:	pop    rsi
   140014279:	(bad)  
   14001427a:	stos   DWORD PTR es:[rdi],eax
   14001427b:	fldenv [rdi]
   14001427d:	xchg   r8d,eax
   14001427f:	adc    al,0x23
   140014281:	push   rdi
   140014282:	mov    ch,0x6d
   140014284:	adc    DWORD PTR [rax],ebx
   140014286:	jae    0x14001429f
   140014288:	cld    
   140014289:	adc    DWORD PTR [rax-0x30cdcca2],edi
   14001428f:	jle    0x1400142b8
   140014291:	(bad)
   140014295:	jb     0x1400142a1
   140014297:	jno    0x14001428f
   140014299:	stc    
   14001429a:	mov    bl,0x12
   14001429c:	(bad)  
   14001429d:	mov    al,BYTE PTR [rbx-0x15ce13]
   1400142a3:	(bad)  
   1400142a4:	mov    edi,0xcfb1bf5b
   1400142a9:	ins    DWORD PTR es:[rdi],dx
   1400142aa:	enter  0x7af5,0x51
   1400142ae:	(bad)  
   1400142af:	cmp    eax,DWORD PTR [rcx-0x5ed14189]
   1400142b5:	outs   dx,DWORD PTR ds:[rsi]
   1400142b6:	xor    ah,BYTE PTR [rcx+0x7c]
   1400142b9:	test   BYTE PTR [rcx],cl
   1400142bb:	enter  0x9fa4,0x22
   1400142bf:	adc    eax,DWORD PTR [rsi-0x39490fe9]
   1400142c5:	sbb    bh,BYTE PTR [rsi-0x73]
   1400142c8:	ss test al,0x68
   1400142cb:	mov    ch,0x33
   1400142cd:	xor    eax,DWORD PTR [rbx]
   1400142cf:	fs stos BYTE PTR es:[rdi],al
   1400142d1:	retf   0x86d2
   1400142d4:	cdq    
   1400142d5:	push   rax
   1400142d6:	(bad)  
   1400142d7:	movsxd ecx,ecx
   1400142d9:	jne    0x140014322
   1400142db:	shr    BYTE PTR [rdx],cl
   1400142dd:	push   rbx
   1400142de:	fidiv  WORD PTR [rsi]
   1400142e0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400142e1:	pop    rdx
   1400142e2:	fs mov dh,0x34
   1400142e5:	ins    BYTE PTR es:[rdi],dx
   1400142e6:	loope  0x1400142ab
   1400142e8:	ja     0x14001434a
   1400142ea:	out    0x2d,al
   1400142ec:	mov    edi,0x3ffecb8f
   1400142f1:	mov    ah,0xd7
   1400142f3:	(bad)  
   1400142f4:	mov    eax,0xc7755be0
   1400142f9:	jnp    0x14001437a
   1400142fb:	push   0x7d9ed0f7
   140014300:	(bad)  
   140014301:	div    dh
   140014303:	idiv   edi
   140014305:	xchg   ebx,eax
   140014306:	mov    edx,0x844ddfae
   14001430b:	std    
   14001430c:	jo     0x14001435b
   14001430e:	imul   esi,DWORD PTR [rdi],0x4f
   140014311:	cli    
   140014312:	rex.WX and QWORD PTR [rsi+0x6c405e61],rdi
   140014319:	(bad)  
   14001431a:	in     eax,0x7
   14001431c:	add    eax,eax
   14001431e:	loope  0x1400142b3
   140014320:	rex.WR outs dx,BYTE PTR ds:[rsi]
   140014322:	cs (bad) 
   140014324:	xlat   BYTE PTR ds:[rbx]
   140014325:	out    dx,eax
   140014326:	ret    0x3f2c
   140014329:	sbb    ebp,DWORD PTR [rdx]
   14001432b:	sub    cl,0xfe
   14001432e:	jb     0x1400142d1
   140014330:	add    eax,0x7c3a3a7b
   140014335:	or     al,0x58
   140014337:	mov    edx,0xd9c57cb0
   14001433c:	ins    DWORD PTR es:[rdi],dx
   14001433d:	push   rax
   14001433e:	(bad)  
   14001433f:	fisub  DWORD PTR [rax]
   140014341:	movabs ds:0xed71a2666013eb6d,eax
   14001434a:	(bad)  
   14001434b:	(bad)  
   14001434c:	jrcxz  0x140014362
   14001434e:	xchg   esi,eax
   14001434f:	pop    rdx
   140014350:	(bad)
   140014354:	(bad)  
   140014355:	xchg   ebx,eax
   140014356:	retf   
   140014357:	(bad)  
   140014358:	sub    eax,0x5abf03cf
   14001435d:	mov    bh,0x36
   14001435f:	vhaddpd xmm8,xmm0,XMMWORD PTR [rdx+0x45b0309a]
   140014367:	xor    dh,BYTE PTR [rsi-0x14fb9f6e]
   14001436d:	add    DWORD PTR [rax+0x21],eax
   140014370:	and    ch,BYTE PTR [rsi+rbp*4-0x1f]
   140014374:	(bad)  
   140014375:	leave  
   140014376:	jrcxz  0x140014390
   140014378:	mov    ebp,0xdec436ec
   14001437d:	add    eax,edx
   14001437f:	in     al,dx
   140014380:	rex.WB in al,dx
   140014382:	pushf  
   140014383:	cmp    DWORD PTR [rsi+0x58067fd0],ebp
   140014389:	pop    rbx
   14001438a:	xchg   edx,eax
   14001438b:	mov    ch,0xff
   14001438d:	(bad)  
   14001438e:	xor    DWORD PTR [rsi+0x19],ebp
   140014391:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014392:	sbb    dl,dl
   140014394:	(bad)  
   140014395:	mov    ebx,0x23c3f166
   14001439a:	sbb    dl,BYTE PTR [rsp+rdx*4-0x6d]
   14001439e:	jle    0x14001440c
   1400143a0:	test   eax,0xe6e8536f
   1400143a5:	repnz mov BYTE PTR [rcx+0x24eb162a],dl
   1400143ac:	push   0x2b
   1400143ae:	or     bl,ch
   1400143b0:	pop    rdi
   1400143b1:	xchg   esi,eax
   1400143b2:	(bad)  
   1400143b3:	shl    BYTE PTR [rdi+0x6c],cl
   1400143b6:	in     al,dx
   1400143b7:	jg     0x140014377
   1400143b9:	cmp    eax,0xd87188b4
   1400143be:	pop    rsp
   1400143bf:	scas   ax,WORD PTR es:[rdi]
   1400143c1:	(bad)  
   1400143c2:	and    esi,DWORD PTR [rbp+0x9]
   1400143c5:	jb     0x14001439b
   1400143c7:	rex xchg ebx,eax
   1400143c9:	mov    ?,WORD PTR [rdi+rdi*8+0x4c]
   1400143cd:	and    dh,BYTE PTR [rdx]
   1400143cf:	loopne 0x1400143a0
   1400143d1:	faddp  st(5),st
   1400143d3:	ror    DWORD PTR [rsi-0x628c0d79],1
   1400143d9:	movsxd esp,DWORD PTR [rax-0x4b261cd4]
   1400143df:	retf   0x1908
   1400143e2:	imul   esi,DWORD PTR [r11],0xffffffae
   1400143e6:	and    eax,0xc51b367c
   1400143eb:	repnz (bad) 
   1400143ed:	call   0x1a3fae4b4
   1400143f2:	cmp    BYTE PTR [rcx+0x64],dl
   1400143f5:	rex.WRX movabs rbp,0x8ac8ca224204371e
   1400143ff:	sbb    BYTE PTR [rcx],ah
   140014401:	xor    BYTE PTR [rdx-0x2318fa5a],dl
   140014407:	adc    bl,cl
   140014409:	adc    esp,DWORD PTR [rax]
   14001440b:	(bad)  
   14001440c:	(bad)  
   14001440d:	mov    bl,0xe7
   14001440f:	out    dx,al
   140014410:	fist   DWORD PTR [rsi]
   140014412:	mov    ebp,0xd8c1d723
   140014417:	ret    
   140014418:	jmp    0x140014409
   14001441a:	add    esp,ecx
   14001441c:	movabs ds:0xb641747356f92ec8,eax
   140014425:	mov    al,0xef
   140014427:	mov    dl,0x2b
   140014429:	jle    0x1400144a1
   14001442b:	(bad)  
   14001442c:	js     0x140014426
   14001442e:	xchg   ebx,eax
   14001442f:	mov    cl,0xee
   140014431:	cld    
   140014432:	add    al,0x13
   140014434:	in     eax,dx
   140014435:	outs   dx,DWORD PTR ds:[rsi]
   140014436:	pop    rax
   140014437:	xchg   edx,eax
   140014438:	sub    ebx,DWORD PTR [rdx]
   14001443a:	mov    dh,0x3f
   14001443c:	movabs al,ds:0x6442a4dd01268ccb
   140014445:	movabs ds:0xadfcb663d4d2cfec,eax
   14001444e:	out    dx,al
   14001444f:	(bad)  [rsi-0x51]
   140014452:	fs scas al,BYTE PTR es:[rdi]
   140014454:	sub    BYTE PTR [rbx+0x11],0xbf
   140014458:	mul    DWORD PTR [rdx+rax*2-0xbdcdb2e]
   14001445f:	add    al,0x88
   140014461:	or     edx,ecx
   140014463:	(bad)
   140014468:	call   0x13732f830
   14001446d:	add    eax,0xffffff95
   140014470:	scas   al,BYTE PTR es:[rdi]
   140014471:	sahf   
   140014472:	(bad)  
   140014473:	xchg   esp,eax
   140014474:	adc    esi,DWORD PTR [rdx+0x16]
   140014477:	push   rdi
   140014478:	or     DWORD PTR [rdx+rbx*2+0x64],0x629943a4
   140014480:	push   rsp
   140014481:	or     ah,BYTE PTR [rcx+0x150dd6a7]
   140014487:	jns    0x14001446e
   140014489:	jbe    0x14001446a
   14001448b:	jo     0x1400144ea
   14001448d:	call   0xe83011bc
   140014492:	xchg   ebp,eax
   140014493:	in     eax,dx
   140014494:	pop    rax
   140014495:	adc    BYTE PTR [rdi],0xfb
   140014498:	(bad)  
   140014499:	push   rax
   14001449a:	(bad)
   14001449e:	js     0x14001450e
   1400144a0:	clc    
   1400144a1:	jb     0x140014473
   1400144a3:	out    dx,al
   1400144a4:	rex.WXB
   1400144a5:	sub    esi,r11d
   1400144a8:	fdiv   DWORD PTR [rcx]
   1400144aa:	ja     0x140014508
   1400144ac:	(bad)  
   1400144ad:	(bad)  
   1400144ae:	jae    0x140014443
   1400144b0:	or     BYTE PTR [rbx+0xeb3404b],ch
   1400144b6:	imul   ebx,DWORD PTR [rcx+rbp*1+0x7],0xffffffb3
   1400144bb:	adc    eax,0x47ea057d
   1400144c0:	xchg   BYTE PTR [rsi-0x7],dh
   1400144c3:	loope  0x140014511
   1400144c5:	cld    
   1400144c6:	movabs eax,ds:0xb8dbaadd9017e78c
   1400144cf:	mov    ah,0x60
   1400144d1:	pop    rcx
   1400144d2:	test   al,0x49
   1400144d4:	adc    eax,0x7f5ba
   1400144d9:	push   rax
   1400144da:	sub    al,0xff
   1400144dc:	rex.RB scas al,BYTE PTR es:[rdi]
   1400144de:	enter  0xc3ac,0x52
   1400144e2:	(bad)  
   1400144e3:	add    dh,BYTE PTR [rsi+rcx*1]
   1400144e6:	rol    esi,0x8b
   1400144e9:	xchg   ecx,eax
   1400144ea:	jnp    0x1400144ec
   1400144ec:	data16 mov bh,0xc1
   1400144ef:	(bad)  
   1400144f0:	fimul  WORD PTR [rdi-0x15eff0f7]
   1400144f6:	leave  
   1400144f7:	fadd   DWORD PTR [rbx+0x71]
   1400144fa:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400144fb:	rex.WR mov dil,0x96
   1400144fe:	jo     0x14001449f
   140014500:	jmp    0x1011b3438
   140014505:	test   ah,0xb
   140014508:	repz ret 
   14001450a:	pop    rcx
   14001450b:	cmp    DWORD PTR [rbp+0x64f90155],esi
   140014511:	jne    0x140014522
   140014513:	movabs al,ds:0x4e0de441d5662e40
   14001451c:	fucomp st(0)
   14001451e:	xchg   ebp,eax
   14001451f:	mul    DWORD PTR [rsi-0x31]
   140014522:	(bad)  
   140014523:	loopne 0x140014563
   140014525:	ds stc 
   140014527:	add    esp,esi
   140014529:	not    DWORD PTR [rax+0x45]
   14001452c:	push   ax
   14001452e:	mov    cl,0x78
   140014530:	out    0xa6,al
   140014532:	popf   
   140014533:	or     DWORD PTR [rsi+rbx*2+0x5faef74],eax
   14001453a:	jp     0x14001452a
   14001453c:	jb     0x1400145a2
   14001453e:	xlat   BYTE PTR ds:[rbx]
   14001453f:	pushf  
   140014540:	or     ah,BYTE PTR [rdx-0x1e927d02]
   140014546:	fsub   st,st(3)
   140014548:	(bad)  
   140014549:	(bad)  
   14001454a:	inc    dh
   14001454c:	(bad)  
   14001454e:	outs   dx,DWORD PTR ds:[rsi]
   14001454f:	xor    DWORD PTR [rax-0x2ecdded4],0x4aa88a84
   140014559:	(bad)  
   14001455a:	es (bad) 
   14001455d:	add    DWORD PTR fs:[rbx+rbx*1+0x0],esp
   140014562:	mov    ebp,0x74e70673
   140014567:	pop    rbp
   140014568:	jg     0x140014522
   14001456a:	pop    rcx
   14001456b:	jne    0x140014506
   14001456d:	jmp    rbp
   14001456f:	(bad)  
   140014570:	retf   
   140014571:	(bad)
   140014575:	mov    ecx,DWORD PTR [rcx-0x56]
   140014578:	mov    esi,0xcd1585bb
   14001457d:	(bad)  
   14001457e:	xchg   esp,eax
   14001457f:	lock iret 
   140014581:	and    BYTE PTR [rsi],dl
   140014583:	rex.B jle 0x140014522
   140014586:	or     al,BYTE PTR [rcx]
   140014588:	mov    ch,0x56
   14001458a:	fdiv   QWORD PTR [rsi+0x79]
   14001458d:	out    0x52,al
   14001458f:	add    al,0x3f
   140014591:	mov    bh,0x41
   140014593:	jge    0x14001454d
   140014595:	cmc    
   140014596:	ja     0x1400145b4
   140014598:	(bad)  
   14001459a:	xchg   edx,eax
   14001459b:	mov    ch,0x48
   14001459d:	jno    0x1400145ee
   14001459f:	(bad)
   1400145a2:	jne    0x140014544
   1400145a4:	std    
   1400145a5:	push   rbx
   1400145a6:	rex.WR outs dx,BYTE PTR ds:[rsi]
   1400145a8:	lock (bad) 
   1400145aa:	test   DWORD PTR [rdi+0x1ad9f7f3],0x63554211
   1400145b4:	jae    0x14001461c
   1400145b6:	sbb    al,0xcf
   1400145b8:	ss sbb eax,0xd7e1f2c
   1400145be:	(bad)  
   1400145bf:	ja     0x1400145de
   1400145c1:	cmp    eax,0x32312773
   1400145c6:	xor    eax,0x71e9de86
   1400145cb:	test   ch,ah
   1400145cd:	jns    0x14001459f
   1400145cf:	out    0xa,al
   1400145d1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400145d2:	mov    ecx,0x15606ba8
   1400145d7:	outs   dx,BYTE PTR ds:[rsi]
   1400145d8:	not    BYTE PTR [rsi]
   1400145da:	fist   WORD PTR [rsp]
   1400145dd:	in     eax,0x57
   1400145df:	sub    al,BYTE PTR [rax]
   1400145e1:	movabs eax,ds:0x73dbfa02bebb7cf1
   1400145ea:	jrcxz  0x140014668
   1400145ec:	leave  
   1400145ed:	in     ax,0x3
   1400145f0:	(bad)  
   1400145f1:	add    ch,BYTE PTR [rdx-0x42]
   1400145f4:	lods   eax,DWORD PTR ds:[rsi]
   1400145f5:	retf   
   1400145f6:	push   rcx
   1400145f7:	add    edi,esp
   1400145f9:	(bad)  
   1400145fa:	mov    ecx,0x5de56602
   1400145ff:	xchg   edx,eax
   140014600:	rep outs dx,DWORD PTR ds:[rsi]
   140014602:	in     eax,dx
   140014603:	ja     0x1400145ff
   140014605:	cdq    
   140014606:	out    0x5d,eax
   140014608:	sbb    BYTE PTR [rdx+0x32860f28],bl
   14001460e:	fdivr  QWORD PTR [rbx+0x75db6ac5]
   140014614:	sbb    ecx,edx
   140014616:	mov    dl,0x11
   140014618:	jno    0x1400145c3
   14001461a:	(bad)  
   14001461b:	xchg   esp,eax
   14001461c:	outs   dx,BYTE PTR ds:[rsi]
   14001461d:	gs jle 0x1400145ec
   140014620:	(bad)
   140014623:	xchg   ecx,eax
   140014624:	test   al,0xbf
   140014626:	movabs al,ds:0x554e2a0d257007f2
   14001462f:	nop
   140014630:	(bad)  
   140014631:	in     eax,0xfd
   140014633:	mov    eax,0x43fad4bb
   140014638:	movabs al,ds:0x5b3f3efec25321cd
   140014642:	jae    0x14001467e
   140014644:	fcmovnb st,st(4)
   140014646:	(bad)  
   140014647:	frndint 
   140014649:	(bad)  [rcx+0x1b]
   14001464c:	iret   
   14001464d:	mov    ebp,0x7802a51f
   140014652:	or     DWORD PTR [rsi+0x577d7a78],esi
   140014658:	jp     0x140014644
   14001465a:	fcmovnu st,st(7)
   14001465c:	cli    
   14001465d:	(bad)  
   14001465e:	sahf   
   14001465f:	ret    
   140014660:	xchg   DWORD PTR [rdi-0xfcfcc2d],edi
   140014666:	(bad)  
   140014667:	adc    bl,ah
   140014669:	jle    0x140014628
   14001466b:	rex.X xlat BYTE PTR ds:[rbx]
   14001466d:	movabs al,ds:0xf9159b069b45b4c
   140014676:	fs jrcxz 0x1400146cc
   140014679:	ds fcmovnbe st,st(2)
   14001467c:	push   rdx
   14001467d:	xchg   edi,eax
   14001467e:	adc    BYTE PTR [rsi+rdi*2-0x36],cl
   140014682:	rex.WRX xor BYTE PTR [rcx-0x30],r15b
   140014686:	int    0x14
   140014688:	mov    DWORD PTR [rcx+0x65e1303e],edx
   14001468e:	and    eax,0x45619102
   140014693:	and    dl,BYTE PTR [r10-0xf]
   140014697:	fimul  WORD PTR [rdi+0x7]
   14001469a:	jb     0x1400146a1
   14001469c:	(bad)  
   14001469d:	sub    eax,0x484041c1
   1400146a2:	(bad)  
   1400146a3:	(bad)  
   1400146a4:	sti    
   1400146a5:	rex.RB push 0xffffffffffffff87
   1400146a8:	pop    rsp
   1400146a9:	mov    edi,0xe5ab24cc
   1400146ae:	mov    al,0xc5
   1400146b0:	mov    BYTE PTR [rbx-0x13ca74a1],dl
   1400146b6:	xor    ecx,DWORD PTR [rbx+0x76ff8505]
   1400146bc:	jle    0x1400146f7
   1400146be:	xchg   edi,eax
   1400146bf:	xor    al,0xf8
   1400146c1:	int3   
   1400146c2:	rex.WX and al,0x65
   1400146c5:	rex.RX popf 
   1400146c7:	int3   
   1400146c8:	jo     0x1400146ae
   1400146ca:	(bad)  
   1400146cb:	(bad)  
   1400146cc:	mov    BYTE PTR [rax],dl
   1400146ce:	xlat   BYTE PTR ds:[rbx]
   1400146cf:	push   rdi
   1400146d0:	xor    BYTE PTR [rdx-0x1e],bh
   1400146d3:	cmp    BYTE PTR [rsi+0x2f],al
   1400146d6:	mov    ebx,0x4eff5505
   1400146db:	rcr    ah,1
   1400146dd:	cmp    BYTE PTR [rsi-0x63],dh
   1400146e0:	jle    0x1400146f8
   1400146e2:	ret    
   1400146e3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400146e4:	mov    fs,WORD PTR [rax-0x4f7ac662]
   1400146ea:	mov    dl,0x0
   1400146ec:	rex.WRX imul r14,QWORD PTR [rax],0xffffffffffffffe5
   1400146f0:	fs add al,0x59
   1400146f3:	rex.WRB loop 0x1400146f1
   1400146f6:	ja     0x140014690
   1400146f8:	xchg   ebp,eax
   1400146f9:	add    ecx,DWORD PTR [rax+0xe]
   1400146fc:	std    
   1400146fd:	sub    ecx,ebp
   1400146ff:	(bad)  
   140014701:	(bad)  
   140014702:	jg     0x1400146b9
   140014704:	pop    rsi
   140014705:	add    eax,edx
   140014707:	nop
   140014708:	xchg   esi,eax
   140014709:	out    0xe4,al
   14001470b:	and    esp,DWORD PTR [rdi-0x1b]
   14001470e:	rex.RB mov r13b,0xf8
   140014711:	xchg   edx,eax
   140014712:	out    dx,eax
   140014713:	outs   dx,DWORD PTR ds:[rsi]
   140014714:	ret    0x6e4f
   140014717:	icebp  
   140014718:	lods   eax,DWORD PTR ds:[rsi]
   140014719:	ret    0x862f
   14001471c:	sub    BYTE PTR [rax+0x11d6c1ca],0x8c
   140014723:	xchg   ecx,eax
   140014724:	adc    BYTE PTR [rdx+0x40],ah
   140014727:	mov    BYTE PTR [rdx+rbp*1-0x571b3f8],al
   14001472e:	fwait
   14001472f:	adc    BYTE PTR [rcx-0x7b2c4098],al
   140014735:	(bad)  
   140014736:	sub    al,BYTE PTR [rsp+rax*4]
   140014739:	or     BYTE PTR [rax+rbp*1-0x6573a53c],al
   140014740:	(bad)  
   140014741:	or     eax,DWORD PTR [rdx]
   140014743:	je     0x1400146ce
   140014745:	cs adc ah,dl
   140014748:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014749:	rex.RXB mov cs,WORD PTR [rip+0xffffffffdd16e712]        # 0x11d182e62
   140014750:	pop    rcx
   140014751:	fwait
   140014752:	mov    ch,0xe6
   140014754:	(bad)  
   140014755:	lock rol DWORD PTR [rbp-0x4fa39081],0xa1
   14001475d:	sub    BYTE PTR [rcx+rdx*4-0x58],0xd
   140014762:	retf   
   140014763:	ins    BYTE PTR es:[rdi],dx
   140014764:	ins    DWORD PTR es:[rdi],dx
   140014765:	rex.B lahf 
   140014767:	sar    DWORD PTR [eip+0xffffffff9ef96670],0x13        # 0xdefaaddf
   14001476f:	sti    
   140014770:	imul   eax,DWORD PTR [rax+0x7b],0xffffffbe
   140014774:	(bad)  
   140014775:	rex.RX lods eax,DWORD PTR ds:[rsi]
   140014777:	and    eax,0x74ef8214
   14001477c:	out    dx,al
   14001477d:	out    0x2f,eax
   14001477f:	repz rex.WR retf 0x9893
   140014784:	or     BYTE PTR [rbp+0x3715004c],al
   14001478a:	jge    0x14001479b
   14001478c:	shr    BYTE PTR [rsi+0x63a0cd8f],1
   140014792:	test   eax,0x7f18cc1
   140014797:	retf   
   140014798:	xor    edi,DWORD PTR [rax+rbp*8+0x689a234d]
   14001479f:	mov    esi,0xfe7bb1f2
   1400147a4:	cli    
   1400147a5:	ror    edi,0x7e
   1400147a8:	cli    
   1400147a9:	(bad)  
   1400147aa:	xlat   BYTE PTR ds:[rbx]
   1400147ab:	push   rsi
   1400147ac:	push   rsi
   1400147ad:	inc    BYTE PTR [rdx+rax*2-0x2a54e1b8]
   1400147b4:	shl    DWORD PTR [rdi+0x42],0xfe
   1400147b8:	movsxd esi,esi
   1400147ba:	(bad)  
   1400147bb:	sahf   
   1400147bc:	adc    cl,BYTE PTR [rbp+rdx*4-0x71]
   1400147c0:	mov    esp,0x91f37e14
   1400147c5:	pop    rbp
   1400147c6:	enter  0x7add,0xcb
   1400147ca:	sub    DWORD PTR [rax-0x48],0xfffffffc
   1400147ce:	pop    rbp
   1400147cf:	or     ebp,ecx
   1400147d1:	mov    dl,0x30
   1400147d3:	outs   dx,DWORD PTR ds:[rsi]
   1400147d4:	test   DWORD PTR [rbp-0x22],ebp
   1400147d7:	rex.WR
   1400147d8:	rex.X lahf 
   1400147da:	pop    rdx
   1400147db:	cmp    esp,ebp
   1400147dd:	(bad)  
   1400147de:	sbb    edx,edx
   1400147e0:	jmp    0x1407eb5d4
   1400147e5:	leave  
   1400147e6:	adc    ecx,eax
   1400147e8:	mov    ebx,0x90320a10
   1400147ed:	jae    0x1400147d5
   1400147ef:	sahf   
   1400147f0:	pop    rcx
   1400147f1:	and    DWORD PTR [rdx-0x40475232],0x3ba4337c
   1400147fb:	cli    
   1400147fc:	(bad)  [rbp+0x59]
   1400147ff:	(bad)  
   140014800:	or     ch,al
   140014802:	push   rbx
   140014803:	popf   
   140014804:	repz (bad) 
   140014806:	sub    bh,ah
   140014808:	add    DWORD PTR [rip+0xffffffffc7e3b301],edx        # 0x107e4fb0f
   14001480e:	jno    0x140014874
   140014810:	iret   
   140014811:	(bad)  
   140014812:	shl    al,0x1e
   140014815:	(bad)  
   140014816:	imul   eax,DWORD PTR [rsi],0xb147a73b
   14001481c:	jae    0x140014890
   14001481e:	adc    al,0xd5
   140014820:	mov    WORD PTR [rsi+0x54d69bea],gs
   140014826:	and    DWORD PTR [rbp-0x22],esp
   140014829:	mov    edx,0x50115002
   14001482e:	rex.XB movsxd edi,r14d
   140014831:	sub    bh,ah
   140014833:	in     eax,0xea
   140014835:	mov    esi,0xf84d548e
   14001483a:	in     eax,dx
   14001483b:	(bad)  
   14001483c:	adc    QWORD PTR [r9-0x441d1ec1],rax
   140014843:	and    BYTE PTR [rbx+0x60],ah
   140014846:	cli    
   140014847:	fcompp 
   140014849:	movabs al,ds:0x2db606052b23b2d2
   140014852:	and    DWORD PTR [rsi+0x3e],edx
   140014855:	sub    DWORD PTR [rdx],ebp
   140014857:	xchg   esp,eax
   140014858:	lods   eax,DWORD PTR ds:[rsi]
   140014859:	popf   
   14001485a:	shr    DWORD PTR [rip+0xffffffffcc40816d],cl        # 0x10c41c9cd
   140014860:	pop    rsp
   140014861:	jb     0x14001489c
   140014863:	cmp    DWORD PTR [rax],eax
   140014865:	adc    bh,ah
   140014867:	movsxd ebp,DWORD PTR [rbp+0x19]
   14001486a:	loopne 0x1400148d9
   14001486c:	adc    ebp,DWORD PTR [rdi+0xbf90e04]
   140014872:	cmp    DWORD PTR [rcx-0x4101ac73],edx
   140014878:	push   rax
   140014879:	sbb    ah,BYTE PTR [rip+0x4491436a]        # 0x184928be9
   14001487f:	push   rsi
   140014880:	(bad)  
   140014881:	jmp    0xd7f2a43b
   140014886:	movabs ds:0xf5858159e0646403,eax
   14001488f:	xchg   edi,eax
   140014890:	shl    DWORD PTR [rdx+0x2b],cl
   140014893:	mov    ss,WORD PTR [rdi+0x3e]
   140014896:	jns    0x14001482b
   140014898:	mov    cl,0x32
   14001489a:	or     ah,BYTE PTR [rdx+0x4a]
   14001489d:	stos   BYTE PTR es:[rdi],al
   14001489e:	rex.RX mov edx,0xd8e9a7f1
   1400148a4:	rex.WRB js 0x1400148b0
   1400148a7:	fld    QWORD PTR [rax]
   1400148a9:	push   rbx
   1400148aa:	add    BYTE PTR [rbx+0x3f8e3600],bl
   1400148b0:	icebp  
   1400148b1:	(bad)  
   1400148b2:	adc    esi,edi
   1400148b4:	std    
   1400148b5:	out    dx,al
   1400148b6:	xchg   edi,edi
   1400148b8:	out    0xc9,eax
   1400148ba:	jrcxz  0x14001485f
   1400148bc:	mov    edi,0xc776edd8
   1400148c1:	int    0x2f
   1400148c3:	mov    bh,0xb2
   1400148c5:	pop    rbp
   1400148c6:	loope  0x14001488f
   1400148c8:	fidiv  DWORD PTR [rcx+0x5a]
   1400148cb:	sbb    eax,eax
   1400148cd:	cmp    al,0x1
   1400148cf:	pop    rdx
   1400148d0:	outs   dx,BYTE PTR ds:[rsi]
   1400148d1:	sub    DWORD PTR [rdx-0x3c17a323],0xffffffa2
   1400148d8:	cmp    eax,0x6f90cc81
   1400148dd:	adc    DWORD PTR [rbx+rcx*1-0x3b],ebx
   1400148e1:	xchg   ebx,eax
   1400148e2:	ds mov eax,0x98fa7f02
   1400148e8:	pop    rbx
   1400148e9:	stos   BYTE PTR es:[rdi],al
   1400148ea:	mov    cl,0xbb
   1400148ec:	or     ch,BYTE PTR [rcx]
   1400148ee:	movabs ds:0x6c9ba0eca3363901,eax
   1400148f7:	shl    BYTE PTR [rbx+0x5c3b054e],cl
   1400148fd:	(bad)  
   1400148fe:	ror    DWORD PTR [rbp+0x5d],0x98
   140014902:	and    DWORD PTR [rbx],0xffffffd6
   140014905:	pop    rsp
   140014906:	out    dx,al
   140014907:	test   al,0x38
   140014909:	jge    0x1400148c9
   14001490b:	(bad)  
   14001490c:	rex.WRB
   14001490d:	repz xor eax,0x4527d886
   140014913:	movabs eax,ds:0x4159f5d64ee7c78
   14001491c:	or     BYTE PTR [rcx],ah
   14001491e:	push   rsi
   14001491f:	pop    rax
   140014920:	popf   
   140014921:	cmp    BYTE PTR [rcx+0x6c21eaa7],cl
   140014927:	in     al,dx
   140014928:	mov    edi,0x57d7116
   14001492d:	mov    ebp,0x3c31c733
   140014932:	jge    0x140014936
   140014934:	cmp    eax,0x9710a733
   140014939:	out    0x81,eax
   14001493b:	int    0x15
   14001493d:	pop    rcx
   14001493e:	pop    rbp
   14001493f:	cwde   
   140014940:	sub    al,0xad
   140014942:	rex.WX sub al,0xb5
   140014945:	nop
   140014946:	jnp    0x140014934
   140014948:	stos   DWORD PTR es:[rdi],eax
   140014949:	sti    
   14001494a:	or     BYTE PTR [rdx+0x48fffa91],cl
   140014950:	fsub   st,st(2)
   140014952:	neg    ebx
   140014954:	mov    ch,0xa8
   140014956:	add    eax,0x46781525
   14001495b:	cs in  al,dx
   14001495d:	mov    cl,0x31
   14001495f:	fs fcmovne st,st(7)
   140014962:	rex.RXB (bad) 
   140014964:	pop    rbp
   140014965:	add    al,0xa
   140014967:	and    eax,0x64679062
   14001496c:	loope  0x14001492b
   14001496e:	push   rsi
   14001496f:	or     BYTE PTR [rcx-0x747f2c70],dl
   140014975:	and    al,0x99
   140014977:	ss jl  0x1400149e0
   14001497a:	mov    cl,0xd4
   14001497c:	es rex.R not spl
   140014980:	pop    rsp
   140014981:	stc    
   140014982:	sub    cl,BYTE PTR [rdi+0x53]
   140014985:	rex.RX movsxd r9d,DWORD PTR [rdx]
   140014988:	out    dx,al
   140014989:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001498a:	ins    DWORD PTR es:[rdi],dx
   14001498b:	outs   dx,BYTE PTR ds:[rsi]
   14001498c:	repnz fadd QWORD PTR [rax]
   14001498f:	int3   
   140014990:	sbb    dl,BYTE PTR [rdi-0xc37a2f7]
   140014996:	mov    edx,?
   140014998:	pop    rax
   140014999:	out    0xdf,eax
   14001499b:	push   0x4a
   14001499d:	mov    dh,0x9
   14001499f:	jp     0x14001498c
   1400149a1:	(bad)  
   1400149a2:	pop    rcx
   1400149a3:	or     eax,0x37e6b38
   1400149a8:	stc    
   1400149a9:	xor    eax,0x64885202
   1400149ae:	sub    eax,0x99b945d0
   1400149b3:	jne    0x14001497e
   1400149b5:	mul    ebp
   1400149b7:	and    DWORD PTR [rcx+0x1d],ecx
   1400149ba:	jmp    FWORD PTR [rip+0x5db2580]        # 0x145dc6f40
   1400149c0:	mov    dl,0xe3
   1400149c2:	ret    
   1400149c3:	stos   BYTE PTR es:[rdi],al
   1400149c4:	sub    bl,bh
   1400149c6:	cs jrcxz 0x14001499e
   1400149c9:	mov    ebx,0x17752391
   1400149ce:	push   rsp
   1400149cf:	clc    
   1400149d0:	sub    DWORD PTR [rip+0x1ac0000a],0xdcafd580        # 0x15ac149e4
   1400149da:	sti    
   1400149db:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400149dc:	(bad)  
   1400149dd:	jnp    0x1400149d9
   1400149df:	fcmovnu st,st(7)
   1400149e1:	cli    
   1400149e2:	icebp  
   1400149e3:	cmc    
   1400149e4:	mov    ch,0xd5
   1400149e6:	iret   
   1400149e7:	(bad)  [rbx-0x4f466c31]
   1400149ed:	ret    0xa7f6
   1400149f0:	(bad)  
   1400149f1:	(bad)  
   1400149f2:	mov    ch,0x5c
   1400149f4:	(bad)  
   1400149f5:	imul   eax,ebp,0xc2853765
   1400149fb:	mov    dl,0x93
   1400149fd:	in     eax,0xb
   1400149ff:	fs lahf 
   140014a01:	fstp   st(3)
   140014a03:	rex.XB stc 
   140014a05:	jae    0x1400149d1
   140014a07:	in     al,dx
   140014a08:	ds (bad) 
   140014a0a:	mov    edi,0x3790d7cd
   140014a0f:	loop   0x140014a75
   140014a11:	rex.W int3 
   140014a13:	add    eax,0x99ee0dc
   140014a18:	mov    dh,0xfd
   140014a1a:	ds (bad) 
   140014a1c:	mov    ebx,eax
   140014a1e:	mov    ebx,0x5e873383
   140014a23:	jbe    0x140014a33
   140014a25:	cmp    DWORD PTR [rbx+0x6d],0xd27da32e
   140014a2c:	push   rdx
   140014a2d:	mov    ah,0xd1
   140014a2f:	push   rdx
   140014a30:	(bad)  
   140014a31:	and    eax,0x9a5805c1
   140014a36:	imul   ecx,DWORD PTR [rbx],0x420000e2
   140014a3c:	mov    WORD PTR [rax+0xb],cs
   140014a3f:	xor    edi,DWORD PTR [rax+0x66]
   140014a42:	imul   ebx,DWORD PTR [rip+0x5abc97f3],0x29c2fb60        # 0x19abde23f
   140014a4c:	or     al,0xcf
   140014a4e:	sahf   
   140014a4f:	rex fild WORD PTR [rsi+0x663b3b]
   140014a56:	add    BYTE PTR [rax],ah
   140014a58:	add    BYTE PTR [rcx+0x44],cl
   140014a5b:	push   r12
   140014a5d:	hlt    
   140014a5e:	rex.WB jmp 0x142b30a51
   140014a64:	out    0x4d,al
   140014a66:	stc    
   140014a67:	cdq    
   140014a68:	ds int3 
   140014a6a:	nop
   140014a6b:	enter  0xf87b,0x57
   140014a6f:	sub    DWORD PTR [rdi],ebp
   140014a71:	out    dx,al
   140014a72:	rcr    DWORD PTR [rdx-0x22],1
   140014a75:	mov    esi,DWORD PTR [rdx-0x2523d57f]
   140014a7b:	ins    BYTE PTR es:[rdi],dx
   140014a7c:	ins    DWORD PTR es:[rdi],dx
   140014a7d:	hlt    
   140014a7e:	cmp    cl,BYTE PTR [rcx*4-0x4efbe94b]
   140014a85:	out    0x4c,eax
   140014a87:	fcmovbe st,st(3)
   140014a89:	mov    edi,0xfa809850
   140014a8e:	icebp  
   140014a8f:	xchg   esp,eax
   140014a90:	xchg   ebp,eax
   140014a91:	test   BYTE PTR [rcx],dh
   140014a93:	(bad)  
   140014a95:	rex.WR cld 
   140014a97:	pop    rsp
   140014a98:	scas   al,BYTE PTR es:[rdi]
   140014a99:	sub    eax,0x9c50ada9
   140014a9e:	cdq    
   140014a9f:	iret   
   140014aa0:	xchg   ah,al
   140014aa2:	(bad)  
   140014aa3:	out    dx,eax
   140014aa4:	(bad)  
   140014aa5:	sub    al,0x23
   140014aa7:	rex.RXB jns 0x140014a80
   140014aaa:	stc    
   140014aab:	push   rbx
   140014aac:	mov    ah,0xac
   140014aae:	(bad)  
   140014aaf:	push   0xffffffffffffff9f
   140014ab1:	retf   
   140014ab2:	movabs eax,ds:0x18c56fb6986eda7d
   140014abb:	xchg   edx,eax
   140014abc:	pop    rbp
   140014abd:	or     eax,0x1181fad0
   140014ac2:	jl     0x140014ae5
   140014ac4:	xchg   ebx,eax
   140014ac5:	iret   
   140014ac6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014ac7:	ror    ah,0xb
   140014aca:	mov    dh,0x67
   140014acc:	loopne 0x140014a9d
   140014ace:	scas   al,BYTE PTR es:[rdi]
   140014acf:	push   rbp
   140014ad0:	(bad)  
   140014ad1:	and    edi,edx
   140014ad3:	rex.WRXB and QWORD PTR [r15+0x78],r14
   140014ad7:	idiv   bl
   140014ad9:	xor    ah,ah
   140014adb:	mov    edx,0x4fcbd6ed
   140014ae0:	or     BYTE PTR [rbx-0x64210e44],al
   140014ae6:	xor    edi,ebx
   140014ae8:	xchg   DWORD PTR [rsi],esi
   140014aea:	lahf   
   140014aeb:	jnp    0x140014aae
   140014aed:	mov    dh,0x88
   140014aef:	sub    DWORD PTR [rdi-0x43992849],0x19
   140014af6:	add    BYTE PTR [rdi-0x73],cl
   140014af9:	(bad)  
   140014afa:	(bad)  
   140014afb:	mov    ?,WORD PTR [rdi]
   140014afd:	std    
   140014afe:	in     al,0xa7
   140014b00:	neg    DWORD PTR [rsi+0x76]
   140014b03:	fnstenv [rdx-0x59]
   140014b06:	scas   eax,DWORD PTR es:[rdi]
   140014b07:	call   QWORD PTR [rsi]
   140014b09:	and    ch,dl
   140014b0b:	fadd   DWORD PTR [rbp+0x2e0307b5]
   140014b11:	imul   edx,esi,0xcc8dab82
   140014b17:	fiadd  DWORD PTR [rbx]
   140014b19:	pop    rax
   140014b1a:	rex.RX (bad) 
   140014b1c:	pop    rdx
   140014b1d:	ds mov edi,0x9d24eaee
   140014b23:	fwait
   140014b24:	push   rbp
   140014b25:	jge    0x140014b3b
   140014b27:	ins    BYTE PTR es:[rdi],dx
   140014b28:	pop    rcx
   140014b29:	xchg   BYTE PTR [rsi],dl
   140014b2b:	ret    
   140014b2c:	and    eax,0xfa28a429
   140014b31:	xchg   ecx,ebx
   140014b33:	mov    esp,0xdf2fd6c8
   140014b38:	push   rsp
   140014b39:	rex.W
   140014b3a:	or     BYTE PTR ss:[rsp+rcx*2+0x18],bl
   140014b3f:	icebp  
   140014b40:	dec    DWORD PTR [rbp+0x41]
   140014b43:	or     DWORD PTR [rdi+0x20],esp
   140014b46:	sbb    eax,0x97681973
   140014b4b:	jbe    0x140014b37
   140014b4d:	ja     0x140014b3f
   140014b4f:	imul   edx,DWORD PTR [rcx-0x5b],0xffffffe4
   140014b53:	(bad)  
   140014b54:	fist   DWORD PTR [rcx+rax*2-0x1fde7a2]
   140014b5b:	mov    ebx,0x49010042
   140014b60:	(bad)  
   140014b61:	ficomp DWORD PTR [rdi+rax*8-0x4f]
   140014b65:	icebp  
   140014b66:	adc    edi,DWORD PTR [rax]
   140014b68:	mov    dh,0xff
   140014b6a:	xor    eax,0xa043fd88
   140014b6f:	test   DWORD PTR [rcx],ecx
   140014b71:	or     al,0x4f
   140014b73:	cmp    al,0x87
   140014b75:	xchg   ecx,eax
   140014b76:	mov    DWORD PTR [rbx+0x409f4ce8],esp
   140014b7c:	pop    rsp
   140014b7d:	(bad)  
   140014b7e:	add    edi,DWORD PTR [rdx-0x366c0767]
   140014b84:	sbb    eax,0x7508150
   140014b89:	movabs al,ds:0x4242b6dd249a84e6
   140014b92:	rex.RB lods al,BYTE PTR ds:[rsi]
   140014b94:	jne    0x140014b95
   140014b96:	sbb    DWORD PTR [rdi],ebp
   140014b98:	(bad)  
   140014b99:	and    dl,BYTE PTR [rax-0x34]
   140014b9c:	or     esi,DWORD PTR [rsi+0x20]
   140014b9f:	rex.W cmp al,0x5a
   140014ba2:	repnz xchg ebp,eax
   140014ba4:	jb     0x140014c0e
   140014ba6:	(bad)  
   140014ba7:	stos   BYTE PTR es:[rdi],al
   140014ba8:	movabs al,ds:0x25927bfca46f0a78
   140014bb1:	mov    edi,0x52f9bbc
   140014bb6:	rex.WRB not QWORD PTR [rip+0xffffffffcb123e7f]        # 0x10b138a3c
   140014bbd:	xchg   edx,eax
   140014bbe:	(bad)  
   140014bbf:	rex.R loop 0x140014ba1
   140014bc2:	xchg   DWORD PTR [rsp+rax*2-0x144b53a8],edi
   140014bc9:	jo     0x140014bcb
   140014bcb:	push   0xffffffffffffff8a
   140014bcd:	stc    
   140014bce:	repz pop rax
   140014bd0:	in     al,dx
   140014bd1:	imul   ebp,DWORD PTR [rdi+0x200df5a3],0x29
   140014bd8:	loope  0x140014b68
   140014bda:	add    BYTE PTR [rbp+0x55],al
   140014bdd:	xor    al,BYTE PTR [rbp+0x77]
   140014be0:	and    DWORD PTR [rcx+0x45ac54aa],edx
   140014be6:	and    bh,dl
   140014be8:	in     al,0xbc
   140014bea:	mov    ebp,DWORD PTR [rcx]
   140014bec:	repz cmp al,0x7d
   140014bef:	jl     0x140014c67
   140014bf1:	outs   dx,DWORD PTR ds:[rsi]
   140014bf2:	push   rbx
   140014bf3:	rex.WRX
   140014bf4:	test   DWORD PTR ss:[rcx+0x294d961],ebx
   140014bfb:	out    dx,al
   140014bfc:	hlt    
   140014bfd:	xchg   DWORD PTR [rsi],ebx
   140014bff:	mov    dh,0x82
   140014c01:	iret   
   140014c02:	xor    ebp,DWORD PTR [rdx]
   140014c04:	and    al,0x85
   140014c06:	adc    esi,DWORD PTR [rdi+rax*1+0x6c04ee69]
   140014c0d:	cwde   
   140014c0e:	ret    
   140014c0f:	retf   
   140014c10:	xlat   BYTE PTR ds:[rbx]
   140014c11:	mov    bl,0x6a
   140014c13:	shl    edi,1
   140014c15:	pop    rcx
   140014c16:	mov    ecx,0x84c24af9
   140014c1b:	pushf  
   140014c1c:	pop    rcx
   140014c1d:	rex.WX cmp rbx,rdx
   140014c20:	push   rsp
   140014c21:	and    bl,BYTE PTR [rdx+0x5a4ae469]
   140014c27:	stc    
   140014c28:	(bad)  
   140014c29:	(bad)  
   140014c2a:	jo     0x140014c0c
   140014c2c:	sbb    DWORD PTR [rax-0x37],ebx
   140014c2f:	int    0xc1
   140014c31:	xlat   BYTE PTR ds:[rbx]
   140014c32:	add    esp,ebx
   140014c34:	psrad  mm0,QWORD PTR [rdx+0x6c]
   140014c38:	(bad)  
   140014c39:	jge    0x140014c70
   140014c3b:	enter  0x6048,0x1d
   140014c3f:	mov    al,BYTE PTR [rsi+rdx*4]
   140014c42:	out    0xe7,eax
   140014c44:	(bad)  
   140014c45:	notrack call QWORD PTR [rcx+0x4e7ffc3f]
   140014c4c:	cmp    al,0xf9
   140014c4e:	clc    
   140014c4f:	rex.WRXB ins BYTE PTR es:[rdi],dx
   140014c51:	outs   dx,BYTE PTR ds:[rsi]
   140014c52:	outs   dx,BYTE PTR ds:[rsi]
   140014c53:	ds xchg esp,eax
   140014c55:	pop    rax
   140014c56:	push   rbx
   140014c57:	imul   ebx,DWORD PTR [rcx-0x5f],0x25d7e73c
   140014c5e:	sti    
   140014c5f:	xchg   ecx,eax
   140014c60:	ins    DWORD PTR es:[rdi],dx
   140014c61:	cmp    DWORD PTR [rax+rcx*1],0xbe68ba6b
   140014c68:	mov    esi,0x7e13364d
   140014c6d:	fistp  WORD PTR [rdi+0x6185cb5]
   140014c73:	xchg   ebx,eax
   140014c74:	jae    0x140014c02
   140014c76:	pop    rbp
   140014c77:	(bad)  
   140014c78:	sub    BYTE PTR [rbx],ch
   140014c7a:	pmaddwd mm1,QWORD PTR [rcx+0x58]
   140014c7e:	sahf   
   140014c7f:	mov    edi,0xa8c87c3e
   140014c84:	test   al,0x75
   140014c86:	xor    BYTE PTR [rbp+0x75c38603],al
   140014c8c:	jae    0x140014c61
   140014c8e:	xchg   edx,eax
   140014c8f:	mov    edx,0xaeb54109
   140014c94:	sub    DWORD PTR [esi],edx
   140014c97:	sbb    edx,DWORD PTR [rbx+0x53b41455]
   140014c9d:	pop    rax
   140014c9e:	imul   ecx,ebx,0x1570c28b
   140014ca4:	(bad)  
   140014ca5:	xchg   edx,eax
   140014ca6:	mul    DWORD PTR [rcx-0x214a8c0e]
   140014cac:	xchg   ebx,eax
   140014cad:	(bad)  
   140014cae:	(bad)  
   140014caf:	jo     0x140014d15
   140014cb1:	call   0xfda2d0e8
   140014cb6:	shr    dl,0x3c
   140014cb9:	cli    
   140014cba:	addr32 (bad) 
   140014cbc:	xor    BYTE PTR [rbx+rsi*2],dh
   140014cbf:	sbb    al,0x9d
   140014cc1:	jmp    0x14b4cd599
   140014cc6:	and    BYTE PTR [rbp-0x8],cl
   140014cc9:	jno    0x140014ce3
   140014ccb:	int    0x1
   140014ccd:	adc    DWORD PTR [rdx+rbp*1+0xa9fa74a],eax
   140014cd4:	nop
   140014cd5:	je     0x140014d36
   140014cd7:	or     eax,0x63b445fb
   140014cdc:	inc    BYTE PTR [rcx+0x33]
   140014cdf:	rol    DWORD PTR [rdx+0x52b35b3d],cl
   140014ce5:	mov    WORD PTR [rsi-0x2e],ss
   140014ce8:	(bad)  
   140014cec:	sub    bl,al
   140014cee:	(bad)  
   140014cef:	cmp    BYTE PTR [rsi+0x6e],0x96
   140014cf3:	(bad)  
   140014cf4:	test   al,0xf0
   140014cf6:	stos   DWORD PTR es:[rdi],eax
   140014cf7:	(bad)  
   140014cf8:	sub    al,0xcf
   140014cfa:	rex.RX add eax,0x2d63c2d0
   140014d00:	or     BYTE PTR [rbx-0x71aea60b],bh
   140014d06:	sub    cl,al
   140014d08:	jae    0x140014c9f
   140014d0a:	rex.B
   140014d0b:	repnz sbb BYTE PTR [rsi-0x5f0367b5],bh
   140014d12:	gs (bad) 
   140014d14:	in     eax,dx
   140014d15:	and    ch,ah
   140014d17:	mov    bl,0xec
   140014d19:	(bad)  
   140014d1a:	shl    al,0x8c
   140014d1d:	or     DWORD PTR [rax-0x7664fcb3],ebx
   140014d23:	pushf  
   140014d24:	sub    BYTE PTR [rbx],bl
   140014d26:	or     ah,BYTE PTR [rax]
   140014d28:	push   rdi
   140014d29:	cli    
   140014d2a:	stc    
   140014d2b:	test   eax,0x3f2cf9c8
   140014d30:	xchg   ebp,eax
   140014d31:	pop    rsi
   140014d32:	mov    edx,DWORD PTR [rsi]
   140014d34:	pop    rcx
   140014d35:	(bad)  
   140014d36:	cmc    
   140014d37:	pslld  mm6,QWORD PTR [rax+0x58]
   140014d3b:	xchg   ebx,eax
   140014d3c:	in     eax,0xed
   140014d3e:	jnp    0x140014ce9
   140014d40:	(bad)  
   140014d41:	sub    al,0xc6
   140014d43:	(bad)  
   140014d44:	(bad)  
   140014d45:	mov    ebx,0x6e5ef27a
   140014d4a:	xor    al,0x14
   140014d4c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014d4d:	cmc    
   140014d4e:	cmp    ebp,eax
   140014d50:	in     al,dx
   140014d51:	retf   
   140014d52:	xchg   ecx,eax
   140014d53:	or     DWORD PTR [rdx],ebp
   140014d55:	int    0xc8
   140014d57:	add    al,0x81
   140014d59:	ret    0x5e01
   140014d5c:	jg     0x140014d7d
   140014d5e:	mov    al,dh
   140014d60:	rex.WRX movabs rax,0x44da283f8c45b80
   140014d6a:	or     eax,esi
   140014d6c:	cdq    
   140014d6d:	inc    dh
   140014d6f:	lahf   
   140014d70:	jns    0x140014d6c
   140014d72:	(bad)  
   140014d73:	in     al,dx
   140014d74:	jmp    0x17eef9d6a
   140014d79:	je     0x140014de4
   140014d7b:	outs   dx,DWORD PTR ds:[rsi]
   140014d7c:	(bad)  
   140014d7d:	jmp    0x168e18e5e
   140014d82:	(bad)  
   140014d83:	sbb    dl,cl
   140014d85:	and    DWORD PTR [rdx+0x5b],esi
   140014d88:	lahf   
   140014d89:	push   rbx
   140014d8a:	jns    0x140014d3f
   140014d8c:	ins    DWORD PTR es:[rdi],dx
   140014d8d:	xor    al,0x8b
   140014d8f:	retf   0x89a4
   140014d92:	adc    al,0x66
   140014d94:	gs ins DWORD PTR es:[rdi],dx
   140014d96:	adc    dl,BYTE PTR [rax+0x12b2e26a]
   140014d9c:	test   ch,bh
   140014d9e:	movabs al,ds:0xb132975830ab6eb0
   140014da7:	(bad)  
   140014da9:	(bad)  
   140014daa:	cmp    DWORD PTR [rbx],edx
   140014dac:	jp     0x140014db2
   140014dae:	push   rbp
   140014daf:	(bad)  
   140014db0:	(bad)  
   140014db1:	clc    
   140014db2:	xor    al,0xb
   140014db4:	(bad)  
   140014db5:	pop    rbx
   140014db6:	(bad)  
   140014db7:	rex.RX jle 0x140014d5c
   140014dba:	or     DWORD PTR [rdx+0x3ca70288],esp
   140014dc0:	imul   ebx,DWORD PTR [rip+0x1655ead2],0x8bc3c833        # 0x15657389c
   140014dca:	es xor ah,ch
   140014dcd:	ja     0x140014e21
   140014dcf:	or     BYTE PTR [rsi-0x757ce7a3],al
   140014dd5:	mov    edx,0x160218ef
   140014dda:	rex.WRXB (bad) 
   140014ddc:	(bad)
   140014ddf:	(bad)  
   140014de0:	out    0xc1,al
   140014de2:	jmp    0x140014d64
   140014de4:	int    0x35
   140014de6:	je     0x140014d8e
   140014de8:	rex.RXB mov r9b,0xe7
   140014deb:	hlt    
   140014dec:	jae    0x140014e06
   140014dee:	cwde   
   140014def:	sbb    BYTE PTR [rbp+0x35],al
   140014df2:	(bad)  
   140014df3:	xor    DWORD PTR [rax-0x532b774e],0xc4cb3241
   140014dfd:	xchg   edx,eax
   140014dfe:	rex.R enter 0x3e8a,0x15
   140014e03:	pop    rcx
   140014e04:	cdq    
   140014e05:	(bad)  
   140014e06:	movabs eax,ds:0x81dd403a8cfcb326
   140014e0f:	ret    0x7fa
   140014e12:	imul   ebp,eax,0x1
   140014e15:	(bad)  
   140014e16:	addr32 or eax,0x823a05b0
   140014e1c:	and    eax,DWORD PTR [rbx]
   140014e1e:	(bad)
   140014e22:	pop    rsi
   140014e23:	rex.XB add spl,BYTE PTR [r8]
   140014e26:	gs not ebp
   140014e29:	ret    0x4507
   140014e2c:	add    esi,edx
   140014e2e:	push   rcx
   140014e2f:	sub    BYTE PTR [rdx-0x194ad8fb],ch
   140014e35:	mov    ecx,0x9448ffb
   140014e3a:	test   ch,bh
   140014e3c:	xlat   BYTE PTR ds:[rbx]
   140014e3d:	mov    BYTE PTR [rax-0x78],al
   140014e40:	scas   al,BYTE PTR es:[rdi]
   140014e41:	jo     0x140014ea5
   140014e43:	push   rsp
   140014e44:	hlt    
   140014e45:	movabs al,ds:0x92a86ae619410011
   140014e4e:	lock js 0x140014e0c
   140014e51:	movabs ds:0xa3c8e113f6dffb00,al
   140014e5a:	stos   BYTE PTR es:[rdi],al
   140014e5b:	test   eax,0x2b8e1ed1
   140014e60:	xchg   esp,eax
   140014e61:	xor    BYTE PTR [rdi+0x6f8d9c0c],dl
   140014e67:	rcr    DWORD PTR [rsi+0x26b5fc8a],1
   140014e6d:	sub    BYTE PTR [rcx-0x16],bl
   140014e70:	(bad)  
   140014e71:	xor    al,0x92
   140014e73:	(bad)  
   140014e74:	and    al,0x40
   140014e76:	rex.WR
   140014e77:	repz fsubr QWORD PTR [rcx]
   140014e7a:	or     DWORD PTR [rdx+0x62b386e2],ecx
   140014e80:	sar    DWORD PTR [rsi+0x15ef3e80],1
   140014e86:	adc    ebx,ebp
   140014e88:	in     al,0x75
   140014e8a:	push   rsp
   140014e8b:	jmp    0x140014e52
   140014e8d:	rex.W sub BYTE PTR [rcx-0x60fe6ac0],cl
   140014e94:	in     al,dx
   140014e95:	pop    rsp
   140014e96:	sub    BYTE PTR [rbx],ah
   140014e98:	rex.X in al,0xb4
   140014e9b:	addr32 (bad) 
   140014e9d:	jne    0x140014e9e
   140014e9f:	repnz fwait
   140014ea1:	sbb    BYTE PTR [rcx+0x14605c3],bl
   140014ea7:	pop    rcx
   140014ea8:	fwait
   140014ea9:	rex.W sahf 
   140014eab:	mov    cl,0x2
   140014ead:	(bad)  
   140014eae:	je     0x140014ed1
   140014eb0:	pushf  
   140014eb1:	and    BYTE PTR [rbx+0x63d1a981],0xd3
   140014eb8:	lahf   
   140014eb9:	std    
   140014eba:	sbb    edi,0xfffffff9
   140014ebd:	lea    ebp,[rcx+0x32ffa3b1]
   140014ec3:	xor    eax,0x285da8cd
   140014ec8:	ror    eax,0x30
   140014ecb:	mov    bl,0xb8
   140014ecd:	in     al,0x37
   140014ecf:	outs   dx,DWORD PTR ds:[rsi]
   140014ed0:	not    bl
   140014ed2:	push   rdi
   140014ed3:	(bad)  
   140014ed5:	mov    DWORD PTR [rbp-0x7cdbe9ae],edx
   140014edb:	enter  0x7129,0xe1
   140014edf:	pop    rax
   140014ee0:	rcr    DWORD PTR [rsi],0x8d
   140014ee3:	and    ecx,DWORD PTR [rip+0x50000be7]        # 0x190015ad0
   140014ee9:	xchg   ebx,eax
   140014eea:	cld    
   140014eeb:	jl     0x140014ea3
   140014eed:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014eee:	mov    dil,0x4
   140014ef1:	scas   eax,DWORD PTR es:[rdi]
   140014ef2:	sbb    DWORD PTR [rax-0x32],eax
   140014ef5:	sub    BYTE PTR [rsp+rbx*4],cl
   140014ef8:	and    DWORD PTR [rip+0x621b6120],edi        # 0x1a21cb01e
   140014efe:	rex.WB int 0x15
   140014f01:	xchg   esp,eax
   140014f02:	(bad)  
   140014f03:	lods   eax,DWORD PTR ds:[rsi]
   140014f04:	loop   0x140014f1d
   140014f06:	sbb    eax,DWORD PTR [rcx-0x2e]
   140014f09:	adc    DWORD PTR [rip+0x190adfcf],ebp        # 0x1590c2ede
   140014f0f:	sbb    DWORD PTR [rdx],edi
   140014f11:	sbb    DWORD PTR [rax+0x69],0x9b42344f
   140014f18:	xchg   DWORD PTR [rax-0x3d4ef042],eax
   140014f1e:	fcmovbe st,st(4)
   140014f20:	rex.WB cmp al,0xb1
   140014f23:	(bad)  
   140014f24:	(bad)  
   140014f25:	jmp    0x10504450a
   140014f2a:	(bad)  
   140014f2b:	es mov al,0x6b
   140014f2e:	cli    
   140014f2f:	cmp    BYTE PTR [rsi],al
   140014f31:	data16 (bad) 
   140014f33:	push   rcx
   140014f34:	int    0x4f
   140014f36:	and    ebp,DWORD PTR [rsi+0x893812e]
   140014f3c:	mov    edi,0x8b16a4c
   140014f41:	adc    eax,0x12f8b691
   140014f46:	loope  0x140014ed7
   140014f48:	pop    rdx
   140014f49:	jrcxz  0x140014f7a
   140014f4b:	add    eax,0x9cd8f240
   140014f50:	and    eax,0xe7b3c0d2
   140014f55:	rex.WXB test al,0xd5
   140014f58:	(bad)  
   140014f59:	or     dh,BYTE PTR [rbx-0x53]
   140014f5c:	lea    esi,[rdi-0x20]
   140014f5f:	(bad)  
   140014f60:	(bad)  
   140014f61:	loopne 0x140014f8f
   140014f63:	pop    rsp
   140014f64:	shr    DWORD PTR [rax+rdi*2-0x130a934],0xf7
   140014f6c:	lods   al,BYTE PTR ds:[rsi]
   140014f6d:	(bad)  
   140014f6e:	sub    al,dl
   140014f70:	mov    ebp,DWORD PTR [rdx+0x42160850]
   140014f76:	test   bl,bh
   140014f78:	(bad)
   140014f7b:	rcr    DWORD PTR [rax],0x32
   140014f7e:	shr    ebx,1
   140014f80:	(bad)  
   140014f81:	bnd jl 0x140014f88
   140014f84:	sub    bh,BYTE PTR [rsi]
   140014f86:	hlt    
   140014f87:	rol    BYTE PTR [rbp-0x52],1
   140014f8a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014f8b:	xor    bl,al
   140014f8d:	(bad)  
   140014f8e:	iret   
   140014f8f:	sar    DWORD PTR [rdi],1
   140014f91:	hlt    
   140014f92:	xlat   BYTE PTR ds:[rbx]
   140014f93:	pop    rcx
   140014f94:	lock rex.WXB not QWORD PTR [r10-0x41b23fed]
   140014f9c:	pop    rsi
   140014f9d:	sti    
   140014f9e:	rex.XB jno 0x140014fa9
   140014fa1:	cmp    DWORD PTR [rdx-0x57c69ac3],esi
   140014fa7:	sub    DWORD PTR [rdx],esp
   140014fa9:	mov    bh,0x4c
   140014fab:	sahf   
   140014fac:	adc    DWORD PTR [rax],ecx
   140014fae:	pop    QWORD PTR [rcx+rbx*8-0xd4d46f3]
   140014fb5:	mov    cl,0x2f
   140014fb7:	iret   
   140014fb8:	xchg   edi,eax
   140014fb9:	out    dx,eax
   140014fba:	fwait
   140014fbb:	or     BYTE PTR [rdx-0x79a5ea64],bl
   140014fc1:	int    0xef
   140014fc3:	(bad)  
   140014fc4:	lahf   
   140014fc5:	sub    edi,DWORD PTR [rcx+0x11c7b391]
   140014fcb:	add    BYTE PTR [rbx],0x37
   140014fce:	icebp  
   140014fcf:	fcomp  QWORD PTR [rbp+0x2e3bf428]
   140014fd5:	rcl    dh,1
   140014fd7:	ds push rax
   140014fd9:	pop    rbx
   140014fda:	or     DWORD PTR [rsi+rbp*1+0x55803ac1],edx
   140014fe1:	add    BYTE PTR [rbx-0x700c00a1],ch
   140014fe7:	fdivrp st(7),st
   140014fe9:	(bad)  
   140014fea:	std    
   140014feb:	pop    rdi
   140014fec:	sti    
   140014fed:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014fee:	sbb    ebp,DWORD PTR [rbx-0xe9a8055]
   140014ff4:	cmc    
   140014ff5:	(bad)  
   140014ff6:	pop    rsp
   140014ff7:	and    BYTE PTR [rax+0x479f7775],bh
   140014ffd:	movabs eax,ds:0x1b50fdc00b331a1
   140015006:	or     BYTE PTR [rsi],ah
   140015008:	cmp    edx,0x466f16c3
   14001500e:	cdq    
   14001500f:	gs rex.RB
   140015011:	rex.WX movabs rcx,0x4daae02e8b21609f
   14001501b:	sub    eax,0x42f94fee
   140015020:	repnz icebp 
   140015022:	pop    rdx
   140015023:	push   rdi
   140015024:	lods   eax,DWORD PTR ds:[rsi]
   140015025:	xchg   esi,eax
   140015026:	sahf   
   140015027:	xchg   ebx,eax
   140015028:	or     al,BYTE PTR [rdi-0x6e067ff4]
   14001502e:	ins    BYTE PTR es:[rdi],dx
   14001502f:	push   rsi
   140015030:	pop    rsp
   140015031:	scas   al,BYTE PTR es:[rdi]
   140015032:	mov    edx,0xa3ec4098
   140015037:	rex.RX cli 
   140015039:	jbe    0x140015006
   14001503b:	cwde   
   14001503c:	mov    dh,0x14
   14001503e:	push   rsp
   14001503f:	test   al,0x6a
   140015041:	xor    al,0xb3
   140015043:	adc    edi,DWORD PTR [rax+0x66]
   140015046:	jp     0x140015056
   140015048:	mov    bl,0x87
   14001504a:	outs   dx,BYTE PTR ds:[rsi]
   14001504b:	rex push rbp
   14001504d:	jne    0x140014fdf
   14001504f:	xchg   esi,eax
   140015050:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015051:	xor    BYTE PTR [rbx+rsi*2],dh
   140015054:	or     al,0x3b
   140015056:	addr32 rex.WRX mov al,ds:0x5c449b9e
   14001505d:	xchg   ecx,eax
   14001505e:	rex.X (bad) 
   140015060:	movabs al,ds:0xfee24047fad43d70
   140015069:	(bad)  
   14001506a:	(bad)  
   14001506b:	repnz icebp 
   14001506d:	(bad)  
   14001506e:	mov    edi,0x9bf0b21
   140015073:	jo     0x1400150e0
   140015075:	and    ah,BYTE PTR [rdx+0x2ca46b8]
   14001507b:	pop    rdx
   14001507c:	pop    rsp
   14001507d:	stos   BYTE PTR es:[rdi],al
   14001507e:	out    dx,eax
   14001507f:	push   0x6ce19fc2
   140015084:	test   ch,0x43
   140015087:	enter  0x6ff7,0x28
   14001508b:	rex.XB jle 0x1400150b8
   14001508e:	mov    al,ch
   140015090:	pop    rdx
   140015091:	jae    0x140015100
   140015093:	sub    eax,0x5732ca2a
   140015098:	mov    WORD PTR [rbx+0x21],es
   14001509b:	mov    ch,ah
   14001509d:	and    BYTE PTR [rdx+0x2fa18b5d],dl
   1400150a3:	jmp    FWORD PTR [rdx]
   1400150a5:	mov    ebx,0x10edbc04
   1400150aa:	rex.RB pushf 
   1400150ac:	(bad)  
   1400150ad:	in     eax,dx
   1400150ae:	loope  0x140015066
   1400150b0:	sti    
   1400150b1:	outs   dx,BYTE PTR ds:[rsi]
   1400150b2:	rex.WRXB add r14,QWORD PTR [r14-0x10281e79]
   1400150b9:	cmp    ebx,ebx
   1400150bb:	cwde   
   1400150bc:	sti    
   1400150bd:	adc    eax,0x6ad52170
   1400150c2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400150c3:	int    0x2d
   1400150c5:	sub    bl,dl
   1400150c7:	ds leave 
   1400150c9:	mov    edx,0xc7615125
   1400150ce:	mov    dl,0xea
   1400150d0:	shr    BYTE PTR [rbx-0x3956182c],cl
   1400150d6:	je     0xd4148f2c
   1400150dc:	neg    DWORD PTR [rdi-0x13fbfe51]
   1400150e2:	rol    esi,0xf
   1400150e5:	movabs ds:0x16ebdf827ad7bc5d,eax
   1400150ee:	mov    bh,0x7d
   1400150f0:	shl    BYTE PTR [rsi+0x9],cl
   1400150f3:	in     al,dx
   1400150f4:	cli    
   1400150f5:	(bad)
   1400150f9:	rex.WRX sahf 
   1400150fb:	pop    rax
   1400150fc:	cmp    dl,dh
   1400150fe:	lock sbb DWORD PTR [rdi+0x55e57fdd],0xfffffff3
   140015106:	popf   
   140015107:	fidivr WORD PTR [rsi-0x48576665]
   14001510d:	mov    ah,0x8b
   14001510f:	jle    0x140015102
   140015111:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015112:	rex.WB
   140015113:	rex.R shl spl,1
   140015116:	pop    rdi
   140015117:	adc    eax,0xfe189b4c
   14001511c:	sbb    esi,edx
   14001511e:	je     0x1400150ba
   140015120:	(bad)  
   140015121:	sub    BYTE PTR [rdx],dh
   140015123:	in     eax,0xd4
   140015125:	(bad)  
   140015126:	rex or edx,eax
   140015129:	push   rsp
   14001512a:	movabs ds:0x900dd07580184309,al
   140015133:	cld    
   140015134:	mov    WORD PTR [rsi+0x33],es
   140015137:	fisub  DWORD PTR [rdx-0x77a3e97b]
   14001513d:	in     eax,0xb7
   14001513f:	xor    eax,0x2162d7d4
   140015144:	adc    cl,BYTE PTR [rcx+0x57]
   140015147:	(bad)  
   140015148:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015149:	jb     0x140015171
   14001514b:	mov    ecx,0x6301b779
   140015150:	test   BYTE PTR [rdi+rbx*8+0x18],ah
   140015154:	(bad)  
   140015155:	loope  0x140015167
   140015157:	add    BYTE PTR [rsi-0x52efbfb9],dl
   14001515d:	(bad)  
   14001515e:	test   DWORD PTR [rax+0x9],ecx
   140015161:	movabs eax,ds:0x86313d1c19c581aa
   14001516a:	mov    cl,0x4b
   14001516c:	pop    rsi
   14001516d:	mov    edi,DWORD PTR [rdx+0x60]
   140015170:	(bad)  
   140015171:	shr    dl,cl
   140015173:	sbb    al,0x6
   140015175:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015176:	mov    fs,WORD PTR [rdx-0x31]
   140015179:	test   eax,0x753bd0e7
   14001517e:	adc    dl,ch
   140015180:	fcom   QWORD PTR [rdx+rax*8]
   140015183:	fisub  DWORD PTR [rdx-0xd2f06cc]
   140015189:	xor    ebx,DWORD PTR [rcx-0x2c]
   14001518c:	and    esp,DWORD PTR [rax+0x45fc4ca6]
   140015192:	add    ch,BYTE PTR [rdx+0x6a]
   140015195:	xchg   esp,eax
   140015196:	(bad)  
   140015197:	shr    BYTE PTR [rax],1
   140015199:	add    ch,ah
   14001519b:	xchg   ebp,eax
   14001519c:	jge    0x140015141
   14001519e:	rex.B jg 0x140015124
   1400151a1:	xchg   esp,eax
   1400151a2:	shr    DWORD PTR [rsi+rsi*4+0x73b57842],1
   1400151a9:	xchg   ecx,eax
   1400151aa:	mov    dl,0x60
   1400151ac:	mov    ebx,0xfdac8ee5
   1400151b1:	(bad)  
   1400151b2:	test   al,0x15
   1400151b4:	fisubr WORD PTR [rdx+0x35]
   1400151b7:	not    ah
   1400151b9:	or     DWORD PTR [rsi],ebp
   1400151bb:	mov    al,0x3e
   1400151bd:	out    dx,eax
   1400151be:	(bad)  
   1400151bf:	(bad)  
   1400151c0:	test   esp,eax
   1400151c2:	(bad)  
   1400151c3:	pop    rax
   1400151c4:	mov    edx,0x3ff05a8a
   1400151c9:	test   al,ah
   1400151cb:	test   BYTE PTR [rdx+0x55],ah
   1400151ce:	or     DWORD PTR [rcx],edi
   1400151d0:	sbb    DWORD PTR [rbx-0x69977360],eax
   1400151d6:	shl    dl,cl
   1400151d8:	or     DWORD PTR [rdx],eax
   1400151da:	test   BYTE PTR [rsp+rcx*1],al
   1400151dd:	stos   BYTE PTR es:[rdi],al
   1400151de:	test   DWORD PTR [rax-0xa],ecx
   1400151e1:	(bad)  
   1400151e2:	(bad)  
   1400151e3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400151e4:	test   eax,esi
   1400151e6:	adc    eax,0x6d19396
   1400151eb:	xchg   ecx,eax
   1400151ec:	push   0xb
   1400151ee:	in     al,0x35
   1400151f0:	ins    BYTE PTR es:[rdi],dx
   1400151f1:	pop    rdi
   1400151f2:	fwait
   1400151f3:	addr32 jns 0x14001521d
   1400151f6:	and    eax,DWORD PTR [rcx]
   1400151f8:	int    0x1c
   1400151fa:	xor    BYTE PTR [rbx-0x5aa8f1e5],dl
   140015200:	or     esi,ecx
   140015202:	and    eax,0x2c001af8
   140015207:	enter  0x55,0xb
   14001520b:	cmp    ecx,eax
   14001520d:	int    0xc5
   14001520f:	mov    ah,0xf0
   140015211:	jg     0x1400151cf
   140015213:	sub    BYTE PTR [rsp+rsi*4],ch
   140015216:	scas   al,BYTE PTR es:[rdi]
   140015217:	int    0x39
   140015219:	(bad)  
   14001521a:	(bad)  
   14001521b:	cmp    ah,al
   14001521d:	jnp    0x1400151e9
   14001521f:	fs rex.B
   140015221:	rex.X loopne 0x1400151d8
   140015224:	out    0x1a,eax
   140015226:	pop    rdx
   140015227:	stc    
   140015228:	int3   
   140015229:	xchg   edi,eax
   14001522a:	mov    al,0x67
   14001522c:	add    ah,BYTE PTR [rsi+0x21]
   14001522f:	sbb    BYTE PTR cs:[rbx],0x70
   140015233:	jbe    0x14001525d
   140015235:	jno    0x14001529d
   140015237:	xor    al,0xe0
   140015239:	movabs eax,ds:0x8f93fe5fcb34d4c2
   140015242:	cld    
   140015243:	(bad)  
   140015244:	fcom   DWORD PTR [rbx-0x391b0271]
   14001524a:	cli    
   14001524b:	(bad)  
   14001524c:	mov    bh,0x45
   14001524e:	jne    0x140015236
   140015250:	or     eax,DWORD PTR [rsi]
   140015252:	or     dh,BYTE PTR [rsi]
   140015254:	shl    DWORD PTR [rsi],cl
   140015256:	and    eax,DWORD PTR [rip+0xffffffff876554b7]        # 0xc766a713
   14001525c:	pop    rdi
   14001525d:	push   rbx
   14001525e:	es fs sub ax,0xa144
   140015264:	add    cl,BYTE PTR [rax+rax*4-0x7c]
   140015268:	(bad)  
   140015269:	sub    DWORD PTR [rdi+0x11e7ad7],esp
   14001526f:	mov    bl,0xc2
   140015271:	jl     0x1400152ec
   140015273:	sub    eax,0xc63b4ffc
   140015278:	outs   dx,DWORD PTR ds:[rsi]
   140015279:	ret    0x96f
   14001527c:	push   r9
   14001527e:	iret   
   14001527f:	push   rsp
   140015280:	ss and ecx,ebp
   140015283:	leave  
   140015284:	shr    ch,0xdf
   140015287:	ins    BYTE PTR es:[rdi],dx
   140015288:	push   rbx
   140015289:	mov    ch,0xbc
   14001528b:	rex.RB or eax,0x835a49eb
   140015291:	(bad)  
   140015292:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015293:	retf   0xd62
   140015296:	pop    rdx
   140015297:	pop    rbp
   140015298:	sar    al,0xd8
   14001529b:	mov    bl,0x38
   14001529d:	mov    edx,0xa1c43af7
   1400152a2:	add    esp,eax
   1400152a4:	lea    eax,[rbp-0xc]
   1400152a7:	int3   
   1400152a8:	sahf   
   1400152a9:	ror    al,0xd4
   1400152ac:	xor    esp,esi
   1400152ae:	int    0x9e
   1400152b0:	rex.RX pop rsp
   1400152b2:	pushf  
   1400152b3:	pop    r8
   1400152b5:	pop    rbx
   1400152b6:	add    ah,BYTE PTR [rdi+0x1de69075]
   1400152bc:	adc    bl,ch
   1400152be:	adc    dl,dl
   1400152c0:	nop
   1400152c1:	test   BYTE PTR [rdi-0x552dad6],bl
   1400152c7:	mov    bl,0x1a
   1400152c9:	jg     0x140015299
   1400152cb:	jle    0x140015285
   1400152cd:	repnz movabs al,ds:0x2753612d85686a23
   1400152d8:	sub    esp,DWORD PTR [rcx-0x227ff74]
   1400152de:	mov    dl,0x36
   1400152e0:	mov    esp,0xd903842c
   1400152e5:	sub    dl,BYTE PTR [rdx+0x24b9f4fa]
   1400152eb:	mov    eax,0x62841640
   1400152f0:	mov    ch,0x9c
   1400152f2:	nop
   1400152f3:	(bad)  
   1400152f4:	sbb    ecx,DWORD PTR [rax]
   1400152f6:	gs call 0x1253749cf
   1400152fc:	(bad)  
   1400152fd:	call   0x19bdc77af
   140015302:	(bad)  
   140015304:	stos   DWORD PTR es:[rdi],eax
   140015305:	xor    eax,0xb6168ad9
   14001530a:	pop    rdx
   14001530b:	(bad)  
   14001530c:	(bad)  
   14001530d:	imul   DWORD PTR [rbp+0x9]
   140015310:	(bad)  
   140015311:	outs   dx,BYTE PTR ds:[rsi]
   140015312:	mov    ebp,0xf927bdb9
   140015317:	(bad)  
   140015319:	add    ebx,edi
   14001531b:	(bad)  
   14001531c:	rex.WXB icebp 
   14001531e:	cli    
   14001531f:	or     eax,0xfd4b05c8
   140015324:	test   dh,bl
   140015326:	adc    BYTE PTR [rbx+rsi*2-0x77370810],dl
   14001532d:	xchg   DWORD PTR [rsp+rax*1-0x4],ebx
   140015331:	add    esp,DWORD PTR [rdx]
   140015333:	fwait
   140015334:	adc    ebp,esp
   140015336:	rex.RB fldenv [r13-0x54c70070]
   14001533d:	or     BYTE PTR [rcx+rbp*4-0x2d],ch
   140015341:	loopne 0x140015360
   140015343:	xlat   BYTE PTR ds:[rbx]
   140015344:	icebp  
   140015345:	loop   0x1400153c2
   140015347:	jno    0x1400152ca
   140015349:	push   rbx
   14001534a:	xor    DWORD PTR [rdi+0x3b728023],0x3b
   140015351:	rex.B push 0xfffffffffa7cffa5
   140015357:	mov    ecx,0x4c2f4f67
   14001535c:	rex.WRB jl 0x1400153d9
   14001535f:	in     al,0xe0
   140015361:	and    eax,0x77dbdd55
   140015366:	and    ecx,DWORD PTR [rax-0x56]
   140015369:	call   FWORD PTR [rbx-0x66]
   14001536c:	push   rdi
   14001536d:	xor    eax,0xa5fb4e69
   140015372:	pushf  
   140015373:	cmp    edi,DWORD PTR [rsi-0x594a9c9b]
   140015379:	rex.WRX
   14001537a:	lock cdq 
   14001537c:	push   rbp
   14001537d:	rex.WRX pop rsi
   14001537f:	add    ebp,eax
   140015381:	sbb    bl,dh
   140015383:	mov    edx,0x84306b1
   140015388:	add    BYTE PTR [rdx],dl
   14001538a:	add    eax,0xb68829af
   14001538f:	pop    rax
   140015390:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015391:	(bad)  
   140015392:	mov    dl,0xa1
   140015394:	mov    DWORD PTR [rdx+0x18831fc5],ebx
   14001539a:	ins    DWORD PTR es:[rdi],dx
   14001539b:	add    al,0x24
   14001539d:	adc    DWORD PTR [rax+rax*8],edi
   1400153a0:	sub    eax,0x33835b8
   1400153a5:	mov    dl,0x62
   1400153a7:	xchg   edx,eax
   1400153a8:	loope  0x1400153f2
   1400153aa:	(bad)  
   1400153ab:	mov    ecx,0xe797f7c8
   1400153b0:	sub    eax,0x38003239
   1400153b5:	add    al,0x54
   1400153b7:	fnsave [rip+0x18fb3f4c]        # 0x158fc9309
   1400153bd:	sahf   
   1400153be:	sbb    BYTE PTR [rcx+0x3affb402],bh
   1400153c4:	test   ch,cl
   1400153c6:	adc    eax,0x7638ecd0
   1400153cb:	rex.WRXB
   1400153cc:	xchg   DWORD PTR ds:[rbp+0x67a8a313],ebx
   1400153d3:	rex.WRXB and r13,QWORD PTR [r14]
   1400153d6:	(bad)  
   1400153d7:	add    ebx,ebp
   1400153d9:	gs cmp eax,0xfd25267
   1400153df:	test   al,0x10
   1400153e1:	push   rax
   1400153e2:	(bad)  
   1400153e3:	rex.X lods eax,DWORD PTR ds:[rsi]
   1400153e5:	popf   
   1400153e6:	jle    0x14001538c
   1400153e8:	(bad)  
   1400153e9:	jg     0x14001545d
   1400153eb:	and    eax,0x53b6c550
   1400153f0:	push   0x39023be1
   1400153f5:	mov    DWORD PTR [rsi],edx
   1400153f7:	cwde   
   1400153f8:	jl     0x140015383
   1400153fa:	scas   eax,DWORD PTR es:[rdi]
   1400153fb:	movabs al,ds:0x288ad0c028163656
   140015404:	adc    BYTE PTR [rbp-0xa57ce3c],dh
   14001540a:	cmovp  ecx,esi
   14001540d:	sbb    ecx,edi
   14001540f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015410:	movabs eax,ds:0xd4e53aadced2523b
   140015419:	pop    rdi
   14001541a:	xor    dh,BYTE PTR [rax+riz*1]
   14001541d:	(bad)  
   14001541e:	mov    eax,0xdefc410a
   140015423:	add    dh,BYTE PTR [rcx]
   140015425:	rex.R mov ebp,0x9d032336
   14001542b:	sbb    esi,DWORD PTR [rax]
   14001542d:	retf   
   14001542e:	(bad)  
   14001542f:	int3   
   140015430:	loop   0x1400153fd
   140015432:	vpmulhw xmm2,xmm8,xmm7
   140015436:	es xchg ah,ah
   140015439:	mov    DWORD PTR [rbx],ecx
   14001543b:	push   rax
   14001543c:	xor    al,0x20
   14001543e:	xlat   BYTE PTR ds:[rbx]
   14001543f:	ficom  DWORD PTR [rsi-0x25]
   140015442:	ss jg  0x14001544f
   140015445:	stos   DWORD PTR es:[rdi],eax
   140015446:	out    dx,al
   140015447:	pop    rdi
   140015448:	adc    eax,0x3146c7da
   14001544d:	xor    edx,esi
   14001544f:	cmp    ah,BYTE PTR [rsi-0x66df1b1c]
   140015455:	(bad)  
   140015456:	(bad)  
   140015457:	xor    dl,al
   140015459:	and    eax,0xce4190c1
   14001545e:	out    0x6f,eax
   140015460:	adc    DWORD PTR [rax-0x1b8943ac],eax
   140015466:	(bad)  
   140015467:	xchg   ecx,eax
   140015468:	cs jne 0x1400154a2
   14001546b:	or     eax,esp
   14001546d:	fwait
   14001546e:	movabs ds:0x50061d22b2e51906,eax
   140015477:	xor    DWORD PTR [rdi+0x4e],0x51
   14001547b:	iret   
   14001547c:	lahf   
   14001547d:	(bad)  
   14001547e:	mov    eax,DWORD PTR [rcx-0x3741d814]
   140015484:	(bad)  
   140015485:	loopne 0x1400154fa
   140015487:	sub    eax,DWORD PTR [rax]
   140015489:	fcmovne st,st(6)
   14001548b:	(bad)  
   14001548c:	and    eax,0x65780048
   140015491:	jle    0x140015501
   140015493:	std    
   140015494:	call   0x1bd7f645c
   140015499:	clc    
   14001549a:	loopne 0x14001545d
   14001549c:	(bad)  
   14001549d:	jnp    0x1400154a5
   14001549f:	jbe    0x14001545d
   1400154a1:	mov    es,WORD PTR [rdx+0x18]
   1400154a4:	icebp  
   1400154a5:	(bad)  
   1400154a6:	or     ebp,edx
   1400154a8:	lods   al,BYTE PTR ds:[rsi]
   1400154a9:	lock mov edi,?
   1400154ac:	or     al,0x7b
   1400154ae:	mov    al,cl
   1400154b0:	(bad)  
   1400154b1:	xchg   bl,bh
   1400154b3:	or     DWORD PTR [r14],r14d
   1400154b6:	test   al,0x7a
   1400154b8:	out    0x29,eax
   1400154ba:	jns    0x1400154d2
   1400154bc:	movabs ds:0x685f79c4c9172659,al
   1400154c5:	rcl    DWORD PTR [rdx],cl
   1400154c7:	add    al,BYTE PTR [rdx+0x12]
   1400154ca:	repnz (bad) 
   1400154cc:	cdq    
   1400154cd:	push   rbp
   1400154ce:	movabs ds:0x6397a9cb61d46c5c,al
   1400154d7:	rex.R xor al,0x6a
   1400154da:	fnstenv [rbp+riz*4-0x6fe5cde7]
   1400154e1:	leave  
   1400154e2:	xchg   ebx,eax
   1400154e3:	repnz mov ebp,0xa181ee14
   1400154e9:	push   rax
   1400154ea:	jo     0x14001548a
   1400154ec:	push   0xffffffffa021657e
   1400154f1:	(bad)  
   1400154f2:	(bad)  
   1400154f3:	rcl    BYTE PTR [rbx-0x14e1df1],cl
   1400154f9:	std    
   1400154fa:	call   0x1822ed31d
   1400154ff:	fiadd  DWORD PTR [rdi+rbp*1]
   140015502:	rex.WR (bad) 
   140015504:	push   0x4d7608ea
   140015509:	sbb    al,0x45
   14001550b:	addr32 jp 0x14001552a
   14001550e:	jno    0x140015571
   140015510:	(bad)  
   140015511:	(bad)  
   140015512:	jae    0x14001551d
   140015514:	pushf  
   140015515:	mov    edx,0xdf54b0
   14001551a:	movabs al,ds:0x84fdb960af9dc926
   140015523:	or     cl,BYTE PTR [rbp+0x5d81fa64]
   140015529:	clc    
   14001552a:	fstp   QWORD PTR [rsp+rax*1]
   14001552d:	push   0xffffffffef9c8db3
   140015532:	rex.WRXB xchg r8,rax
   140015534:	adc    eax,0xe58d0081
   140015539:	xor    esi,DWORD PTR [rsp+rax*2-0x582ecd69]
   140015540:	in     eax,dx
   140015541:	scas   eax,DWORD PTR es:[rdi]
   140015542:	add    ecx,eax
   140015544:	rcr    DWORD PTR [rax+0x850ff43],0x3e
   14001554b:	xchg   ecx,eax
   14001554c:	xchg   eax,esi
   14001554e:	(bad)  
   14001554f:	test   BYTE PTR [rax+0x54cc26fa],dh
   140015555:	(bad)  
   140015556:	dec    DWORD PTR [rbx]
   140015558:	(bad)  
   140015559:	rcr    DWORD PTR [rdi+rax*1-0x71],0xff
   14001555e:	(bad)  
   14001555f:	rex.X movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015561:	rex.WX and rax,rsp
   140015564:	ror    ch,cl
   140015566:	adc    BYTE PTR [rax-0x1b],cl
   140015569:	xchg   esi,eax
   14001556a:	rcl    DWORD PTR [rax+0x45],cl
   14001556d:	sar    DWORD PTR [rax],0xa
   140015570:	ja     0x140015518
   140015572:	or     dl,al
   140015574:	sub    eax,0xa172616c
   140015579:	ret    0x6e2
   14001557c:	movabs ds:0xe62e5f1a56fa0a4d,al
   140015585:	movabs al,ds:0x43970dc104571c59
   14001558e:	stc    
   14001558f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015590:	and    DWORD PTR [rbp-0x32],eax
   140015593:	enter  0x5596,0x1
   140015597:	pop    rax
   140015598:	xor    al,0x80
   14001559a:	xchg   ebx,eax
   14001559b:	sub    al,BYTE PTR [rdx]
   14001559d:	lea    edx,[rdx-0x7]
   1400155a0:	out    0x7a,eax
   1400155a2:	cmp    al,0x99
   1400155a4:	pop    rbx
   1400155a5:	out    0xf9,al
   1400155a7:	(bad)  
   1400155a8:	push   rdx
   1400155a9:	loopne 0x1400155dd
   1400155ab:	movabs eax,ds:0xfb84277e860b806e
   1400155b4:	mov    esi,0xcafdd091
   1400155b9:	(bad)  
   1400155ba:	mov    cl,0xef
   1400155bc:	sub    BYTE PTR [rsi],ch
   1400155be:	push   rax
   1400155bf:	xor    al,0xe0
   1400155c1:	stc    
   1400155c2:	sub    DWORD PTR [rax],eax
   1400155c4:	loopne 0x140015642
   1400155c6:	push   0xffffffffc9f00180
   1400155cb:	(bad)  
   1400155cc:	(bad)  
   1400155cd:	(bad)  
   1400155ce:	fidiv  DWORD PTR [rbx+rdi*4-0x61]
   1400155d2:	fstp   TBYTE PTR [rcx-0x45612099]
   1400155d8:	sar    DWORD PTR [rcx-0x6b],cl
   1400155db:	sub    esi,DWORD PTR [rdi]
   1400155dd:	mov    ebp,0x63a5f241
   1400155e2:	mov    ecx,0x1284d650
   1400155e7:	xchg   DWORD PTR [rdi-0x695e06a],edx
   1400155ed:	sub    eax,0x58c540b2
   1400155f2:	cdq    
   1400155f3:	ret    0x8130
   1400155f6:	and    al,0x48
   1400155f8:	call   0xf4ad4cbf
   1400155fd:	fistp  WORD PTR [rsi+0x50]
   140015600:	jmp    0xf5d0ab69
   140015605:	repnz add ch,BYTE PTR [rdi+riz*4+0x10379a0d]
   14001560d:	xchg   ecx,eax
   14001560e:	test   DWORD PTR [rbx-0x6c],ebx
   140015611:	mov    bh,0x76
   140015613:	add    DWORD PTR [rdx+0x23],esp
   140015616:	or     al,0x49
   140015618:	movabs eax,ds:0xb3b9ca6e6c2044bf
   140015621:	out    0x36,al
   140015623:	and    dh,BYTE PTR [rcx]
   140015625:	add    bl,BYTE PTR [rax+0x7e]
   140015628:	out    0x61,al
   14001562a:	cmp    al,0x19
   14001562c:	cli    
   14001562d:	mov    cl,0x76
   14001562f:	vpsubsb ymm14,ymm10,YMMWORD PTR [rax]
   140015633:	movabs ds:0x73d863d31d8d34bb,eax
   14001563c:	cli    
   14001563d:	pop    rcx
   14001563e:	hlt    
   14001563f:	rex.WRX lahf 
   140015641:	rex.X pushf 
   140015643:	lahf   
   140015644:	rex.X pop rsp
   140015646:	(bad)  
   140015647:	mov    edi,0xe58e525f
   14001564c:	jle    0x140015678
   14001564e:	adc    BYTE PTR [rdx-0x5843daf0],ch
   140015654:	lods   al,BYTE PTR ds:[rsi]
   140015655:	jg     0x1400155e4
   140015657:	(bad)  
   140015658:	ror    edx,1
   14001565a:	jle    0x14001565f
   14001565c:	push   rsp
   14001565d:	adc    DWORD PTR [rax+rbp*2+0x6d],esp
   140015661:	and    DWORD PTR [rdi-0x5a017f00],edi
   140015667:	mov    edi,0x2103afef
   14001566c:	jb     0x140015637
   14001566e:	(bad)  
   14001566f:	(bad)  
   140015670:	ds mov esp,0xd108520a
   140015676:	adc    ecx,DWORD PTR [rax+0x430a85a2]
   14001567c:	data16 cld 
   14001567e:	movsxd ecx,eax
   140015680:	(bad)  
   140015681:	lahf   
   140015682:	rex.X pop rcx
   140015684:	call   0x163f9afcc
   140015689:	and    DWORD PTR [rax-0x73aafd90],edx
   14001568f:	sahf   
   140015690:	rex.R push rsp
   140015692:	test   eax,0x27df022
   140015697:	and    DWORD PTR [rsi+0x78],eax
   14001569a:	jg     0x14001565e
   14001569c:	(bad)  
   14001569d:	(bad)  
   14001569e:	mov    ebp,0x84168022
   1400156a3:	(bad)  
   1400156a4:	movabs eax,ds:0xe52c9d50f16d1a85
   1400156ad:	jg     0x140015648
   1400156af:	push   rax
   1400156b0:	cs ds retf 
   1400156b3:	(bad)  
   1400156b4:	fbld   TBYTE PTR [rsi+0xb]
   1400156b7:	gs rex.W scas al,BYTE PTR es:[rdi]
   1400156ba:	rex.X
   1400156bb:	rex.WRXB
   1400156bc:	pushw  0x21
   1400156bf:	add    eax,0x9bdec13f
   1400156c4:	sti    
   1400156c5:	ret    
   1400156c6:	and    al,0xab
   1400156c8:	mov    gs,ecx
   1400156ca:	fdiv   QWORD PTR [rbx+0x57]
   1400156cd:	(bad)  
   1400156ce:	pop    rdi
   1400156cf:	sub    ebp,DWORD PTR [edi]
   1400156d2:	shr    DWORD PTR [rbp+0x38c05a88],cl
   1400156d8:	add    dh,dl
   1400156da:	jrcxz  0x1400156f1
   1400156dc:	jns    0x1400156ec
   1400156de:	in     eax,0xc5
   1400156e0:	cdq    
   1400156e1:	rex.WR clc 
   1400156e3:	test   ebx,ebx
   1400156e5:	jg     0x140015719
   1400156e7:	xchg   ebx,eax
   1400156e8:	jnp    0x1400156a3
   1400156ea:	imul   ebp,esi,0x429f43a1
   1400156f0:	outs   dx,BYTE PTR ds:[rsi]
   1400156f1:	adc    dl,BYTE PTR [rdx+0x60051e5e]
   1400156f7:	fstp   TBYTE PTR [rcx+0x3b9e4209]
   1400156fd:	xor    eax,0x3be474be
   140015702:	(bad)  
   140015704:	outs   dx,BYTE PTR ds:[rsi]
   140015705:	fist   WORD PTR [rbp+0x57]
   140015708:	iret   
   140015709:	push   rsi
   14001570a:	cmp    eax,0x310baf7d
   14001570f:	hlt    
   140015710:	rex.WXB ror QWORD PTR [r8-0xfebfd1b],1
   140015717:	lea    esi,[rbx+0x54]
   14001571a:	rcr    BYTE PTR [rdx+0x5735ba36],0x46
   140015721:	and    eax,0x96ab0ba7
   140015726:	rex.RXB (bad) 
   140015728:	and    di,ax
   14001572b:	or     BYTE PTR [rcx+0xb],bl
   14001572e:	add    DWORD PTR [rax-0x12bec93b],edx
   140015734:	rex.B xlat BYTE PTR ds:[rbx]
   140015736:	add    DWORD PTR [rsi+0x4ed5b929],ebp
   14001573c:	add    BYTE PTR [rdx],ah
   14001573e:	(bad)  
   14001573f:	(bad)  
   140015740:	stc    
   140015741:	add    DWORD PTR [rdi],esp
   140015743:	adc    eax,0xf6538a05
   140015748:	(bad)  
   140015749:	push   rsp
   14001574a:	jae    0x140015793
   14001574c:	mov    edi,0x8052380b
   140015751:	jle    0x1400156f2
   140015753:	sbb    DWORD PTR [rbx+0x23f5e840],0x95c9e18f
   14001575d:	or     eax,0x3b7d5c2c
   140015762:	(bad)  
   140015763:	mov    edx,0xd3cb9b0f
   140015768:	call   0xfd8f9108
   14001576d:	adc    ecx,edi
   14001576f:	movabs ds:0xeae224dce238e27f,al
   140015778:	add    dl,al
   14001577a:	lods   al,BYTE PTR ds:[rsi]
   14001577b:	xor    DWORD PTR [rcx+rdi*4+0x75fe31a7],0xffffff88
   140015783:	test   al,0xc1
   140015785:	test   al,0x74
   140015787:	rex.WB mov r8b,0x8a
   14001578a:	adc    esp,DWORD PTR [rdx-0x20]
   14001578d:	push   rsi
   14001578e:	xchg   ebp,eax
   14001578f:	pop    rdi
   140015790:	add    eax,0x2ef3fb8
   140015795:	add    al,0x12
   140015797:	rex.WXB sbb al,BYTE PTR [r10]
   14001579a:	movabs ds:0xc877f7cd4404fdf9,al
   1400157a3:	scas   eax,DWORD PTR es:[rdi]
   1400157a4:	add    dl,BYTE PTR [rdx]
   1400157a6:	rex.XB add BYTE PTR [r13-0x6a],al
   1400157aa:	jge    0x1400157a1
   1400157ac:	cmp    BYTE PTR [rbp+0xa441216],dl
   1400157b2:	movabs ds:0xfe0dfdc5bef88a00,al
   1400157bb:	(bad)  
   1400157bc:	cwde   
   1400157bd:	mov    DWORD PTR [rsi],edi
   1400157bf:	rex.WB adc cl,r10b
   1400157c2:	or     ah,BYTE PTR [rcx]
   1400157c4:	add    al,0x53
   1400157c6:	or     al,0xd1
   1400157c8:	xchg   ebp,eax
   1400157c9:	mov    WORD PTR [rax],fs
   1400157cb:	add    al,0x6d
   1400157cd:	or     edx,DWORD PTR [rsi]
   1400157cf:	sub    eax,0x35f640c7
   1400157d4:	in     al,0xc1
   1400157d6:	rex.RX
   1400157d7:	data16 rex.R
   1400157d9:	repnz adc BYTE PTR [rbx-0x6f79d607],bl
   1400157e0:	vpavgb ymm11,ymm11,YMMWORD PTR [rdi+rax*1+0xbb13590]
   1400157e9:	mov    ch,0xa1
   1400157eb:	mov    DWORD PTR [rdx+0x485d9603],eax
   1400157f1:	(bad)  
   1400157f2:	pushf  
   1400157f3:	mov    edi,0x2d9dcacf
   1400157f8:	(bad)  
   1400157f9:	and    ch,ah
   1400157fb:	iret   
   1400157fc:	fs (bad) 
   1400157fe:	jmp    0xdac97fab
   140015803:	lea    ecx,[rsi-0x133497ea]
   140015809:	(bad)  
   14001580a:	ins    DWORD PTR es:[rdi],dx
   14001580b:	xchg   QWORD PTR [r10+0x36b9653],rsp
   140015812:	push   rdi
   140015813:	xor    ah,ch
   140015815:	push   QWORD PTR [rdi-0x4a9261ad]
   14001581b:	sub    eax,DWORD PTR [rdx+0x67258191]
   140015821:	and    ch,bl
   140015823:	mov    bh,0x2
   140015825:	shr    dh,cl
   140015827:	rex.WRX rol dil,0x1e
   14001582b:	ret    0x12d0
   14001582e:	or     QWORD PTR [rax+rcx*1-0x3a420fec],r15
   140015836:	adc    ecx,edi
   140015838:	rex.XB adc BYTE PTR [r10],al
   14001583b:	pop    rax
   14001583c:	stc    
   14001583d:	jmp    0x14001587e
   14001583f:	std    
   140015840:	enter  0x9e1f,0x78
   140015844:	cld    
   140015845:	xchg   ecx,eax
   140015846:	lahf   
   140015847:	in     al,dx
   140015848:	outs   dx,BYTE PTR ds:[rsi]
   140015849:	ins    BYTE PTR es:[rdi],dx
   14001584a:	jl     0x1400157f7
   14001584c:	shl    DWORD PTR [rdi+0x59837e44],1
   140015852:	rcr    DWORD PTR [rdx+0x3285cfbf],cl
   140015858:	adc    bl,cl
   14001585a:	lahf   
   14001585b:	jb     0x140015873
   14001585d:	lahf   
   14001585e:	jle    0x140015826
   140015860:	mov    edx,0xe4fd265f
   140015865:	jnp    0x1400158c0
   140015867:	(bad)  
   140015868:	test   esp,edi
   14001586a:	mov    bh,0xd1
   14001586c:	mov    BYTE PTR [rax-0x7d],al
   14001586f:	cli    
   140015870:	and    al,0xf
   140015872:	cmp    eax,DWORD PTR [rax-0x4bb9594b]
   140015878:	outs   dx,DWORD PTR ds:[rsi]
   140015879:	sub    r14b,BYTE PTR [rdi+rbp*2+0x28711e2e]
   140015881:	pop    rdi
   140015882:	pop    rsp
   140015883:	adc    edi,ecx
   140015885:	scas   eax,DWORD PTR es:[rdi]
   140015886:	rex.WR (bad) 
   140015888:	repz mul DWORD PTR [rbp-0x72aaf662]
   14001588f:	int    0x63
   140015891:	(bad)  
   140015892:	jrcxz  0x14001582d
   140015894:	test   DWORD PTR [rip+0x3b735ecc],esp        # 0x17b74b766
   14001589a:	cmp    bl,BYTE PTR [rbp+0x332b3401]
   1400158a0:	call   0xdec87842
   1400158a5:	jmp    0xcf514cfb
   1400158aa:	movabs ds:0xd77707995846985a,eax
   1400158b3:	movabs al,ds:0x28215ad5b27d65ed
   1400158bc:	sbb    DWORD PTR [rsi-0x5c],edi
   1400158bf:	sbb    DWORD PTR [rsi-0x64],edi
   1400158c2:	loope  0x140015942
   1400158c4:	sbb    edx,esi
   1400158c6:	repz jo 0x1400158dd
   1400158c9:	cmp    al,0x95
   1400158cb:	(bad)  
   1400158cc:	pop    rbx
   1400158cd:	popf   
   1400158ce:	xor    DWORD PTR [rdx+0x6e],ebx
   1400158d1:	adc    al,0xe9
   1400158d3:	xchg   edi,eax
   1400158d4:	xchg   esi,eax
   1400158d5:	rex.X jmp 0x140015868
   1400158d8:	pop    rsi
   1400158d9:	punpcklbw mm5,DWORD PTR [rax-0x71a1f3bf]
   1400158e0:	fucom  st(7)
   1400158e2:	jb     0x140015944
   1400158e4:	rex.XB sbb eax,DWORD PTR [r8+0x26]
   1400158e8:	mov    ch,0xe4
   1400158ea:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400158eb:	(bad)  
   1400158ec:	pop    rdx
   1400158ed:	hlt    
   1400158ee:	shl    DWORD PTR [rdx],0x3e
   1400158f1:	and    eax,ebp
   1400158f3:	js     0x140015950
   1400158f5:	sahf   
   1400158f6:	rex.RB push r14
   1400158f8:	(bad)  
   1400158f9:	in     eax,dx
   1400158fa:	(bad)  
   1400158fb:	or     DWORD PTR [rbp-0x66fdd33a],esi
   140015901:	leave  
   140015902:	mov    dl,0x62
   140015904:	jae    0x140015907
   140015906:	sub    eax,0xf7016f14
   14001590b:	loope  0x1400158b0
   14001590d:	xchg   esi,eax
   14001590e:	rex.WB
   14001590f:	fs loopne 0x14001591e
   140015912:	(bad)  
   140015913:	adc    eax,0x7a0a0ca6
   140015918:	(bad)  
   140015919:	(bad)  [rip+0xffffffffbef6a022]        # 0xfef7f941
   14001591f:	sub    eax,0xbe582b46
   140015924:	(bad)  
   140015925:	in     eax,0x67
   140015927:	out    dx,eax
   140015928:	test   esp,0x5f65b4ad
   14001592e:	or     al,0x95
   140015930:	bnd jns 0x140015917
   140015933:	jns    0x14001590e
   140015935:	jae    0x14001599f
   140015937:	fbld   TBYTE PTR [rbp-0x1cacae49]
   14001593d:	call   0x15780a05a
   140015942:	mov    BYTE PTR [rax+0x1],dl
   140015945:	xchg   edi,eax
   140015946:	fadd   st(5),st
   140015948:	push   rbx
   140015949:	gs adc eax,0x7809ca8b
   140015950:	loope  0x14001595a
   140015952:	shl    BYTE PTR [rsi-0x56fb44cd],0xfc
   140015959:	fwait
   14001595a:	cmp    al,0xfa
   14001595c:	fsubr  st(4),st
   14001595e:	cld    
   14001595f:	(bad)  
   140015960:	test   eax,0x3c1c8f4f
   140015965:	sbb    al,0xea
   140015967:	sahf   
   140015968:	sahf   
   140015969:	fwait
   14001596a:	add    al,0x7d
   14001596c:	out    0xc7,eax
   14001596e:	jmp    0x183f95c5e
   140015973:	(bad)  
   140015974:	adc    edi,DWORD PTR [rsi-0x2a]
   140015977:	pop    rsp
   140015978:	xor    al,0x6b
   14001597a:	stc    
   14001597b:	int3   
   14001597c:	and    eax,DWORD PTR [rdi+rdx*2]
   14001597f:	jmp    0x1400159f1
   140015981:	fistp  WORD PTR [rsi]
   140015983:	stos   BYTE PTR es:[rdi],al
   140015984:	in     eax,0x2b
   140015986:	outs   dx,WORD PTR ds:[rsi]
   140015988:	mov    cl,0x4c
   14001598a:	(bad)
   14001598d:	jl     0x140015a0e
   14001598f:	mov    al,0x56
   140015991:	adc    ecx,DWORD PTR [rdx]
   140015993:	cld    
   140015994:	(bad)  
   140015995:	mov    dh,0x3d
   140015997:	(bad)  
   140015998:	xor    eax,DWORD PTR [rcx+0x3f]
   14001599b:	ja     0x1400159ac
   14001599d:	(bad)
   1400159a0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400159a1:	sbb    al,0x22
   1400159a3:	and    al,0x81
   1400159a5:	jnp    0x1400159ec
   1400159a7:	lock push rdx
   1400159a9:	mov    edx,DWORD PTR ds:[rcx]
   1400159ac:	int    0xf8
   1400159ae:	jae    0x140015a28
   1400159b0:	jbe    0x140015a2c
   1400159b2:	or     dl,BYTE PTR [rbx]
   1400159b4:	push   rdi
   1400159b5:	mov    edi,0x2303fd11
   1400159ba:	call   0x10e23876d
   1400159bf:	popf   
   1400159c0:	ret    0xa9ee
   1400159c3:	movabs ds:0xc204ecce86389c18,eax
   1400159cc:	movabs ds:0x3c4b13fab641ea2c,al
   1400159d5:	mov    edi,0x515010e
   1400159da:	(bad)  
   1400159db:	(bad)  
   1400159dc:	sbb    ch,BYTE PTR [rsp+rax*4+0x28ff429f]
   1400159e3:	in     eax,dx
   1400159e4:	mov    edi,0x416620d4
   1400159e9:	test   eax,edi
   1400159eb:	std    
   1400159ec:	sbb    al,0x2d
   1400159ee:	fld    TBYTE PTR [rdi-0x1bd624f8]
   1400159f4:	(bad)  
   1400159f6:	mov    esi,0x988722bd
   1400159fb:	(bad)  
   1400159fc:	ja     0x1400159c0
   1400159fe:	nop
   1400159ff:	(bad)  
   140015a00:	xor    dl,BYTE PTR [rbx-0x6b6efe48]
   140015a06:	adc    ah,dl
   140015a08:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015a09:	sahf   
   140015a0a:	test   al,0x3c
   140015a0c:	cmp    esp,0xffffff95
   140015a0f:	xchg   esi,eax
   140015a10:	pop    rsi
   140015a11:	jge    0x140015a12
   140015a13:	pop    rax
   140015a14:	fs (bad) 
   140015a16:	adc    ah,BYTE PTR [rcx+0x8511252]
   140015a1c:	ret    0x8990
   140015a1f:	rex.X cmp esi,DWORD PTR [rdi-0x4c]
   140015a23:	imul   esi,DWORD PTR [rdx+0x79940ca],0x65
   140015a2a:	jb     0x140015a39
   140015a2c:	or     esp,DWORD PTR [rcx+rcx*8-0x37]
   140015a30:	ss test edx,edx
   140015a33:	sub    ebp,DWORD PTR [rip+0xffffffffce14dbbf]        # 0x10e1635f8
   140015a39:	or     BYTE PTR [rdi-0x1b],al
   140015a3c:	enter  0x8fa6,0xcf
   140015a40:	adc    DWORD PTR [rdx-0x37],esi
   140015a43:	sub    cl,BYTE PTR [rsi]
   140015a45:	(bad)  
   140015a46:	test   BYTE PTR [rdi],bl
   140015a48:	sub    al,0x5f
   140015a4a:	and    eax,0x631f4e2b
   140015a4f:	xchg   ah,al
   140015a51:	cwde   
   140015a52:	lods   eax,DWORD PTR ds:[rsi]
   140015a53:	(bad)  
   140015a54:	xchg   ebp,eax
   140015a55:	loope  0x140015a7f
   140015a57:	rol    BYTE PTR [rdx-0x77],0x26
   140015a5b:	add    eax,0xbefe32d
   140015a60:	rex.B adc al,0x2
   140015a63:	scas   eax,DWORD PTR es:[rdi]
   140015a64:	cmp    eax,0x52fc881d
   140015a69:	loopne 0x140015ab5
   140015a6b:	ret    0xb0d0
   140015a6e:	sub    DWORD PTR [rbx+rax*2+0x26],ecx
   140015a72:	and    al,0x19
   140015a74:	mov    ah,0x15
   140015a76:	jae    0x140015a5f
   140015a78:	push   rbx
   140015a79:	mov    ah,0xff
   140015a7b:	jrcxz  0x140015ae8
   140015a7d:	mov    BYTE PTR [rbp-0x44],bl
   140015a80:	rex.W xor sil,al
   140015a83:	jnp    0x140015adc
   140015a85:	add    BYTE PTR [rsi-0x27f6a4b],dh
   140015a8b:	out    dx,eax
   140015a8c:	movabs al,ds:0xfc3d8fd7e617568
   140015a95:	jle    0x140015afa
   140015a97:	clc    
   140015a98:	rol    cl,0x27
   140015a9b:	jp     0x140015b13
   140015a9d:	in     al,dx
   140015a9e:	mov    eax,0x30c2891
   140015aa3:	(bad)  
   140015aa4:	stc    
   140015aa5:	or     ecx,DWORD PTR [rbx-0x60]
   140015aa8:	push   rsi
   140015aa9:	pop    rbp
   140015aaa:	test   bh,bl
   140015aac:	mov    esi,0x8cc9a7cb
   140015ab1:	jg     0x140015ab1
   140015ab3:	mov    WORD PTR [rax+0x31],cs
   140015ab6:	nop
   140015ab7:	pop    rdx
   140015ab8:	or     eax,0xc5cf0b52
   140015abe:	movabs al,ds:0xc5673192cd485e91
   140015ac7:	and    r13b,al
   140015aca:	push   rsi
   140015acb:	(bad)
   140015ace:	sub    DWORD PTR [rcx+0x4429f60c],ecx
   140015ad4:	jae    0x140015abe
   140015ad6:	xchg   esi,eax
   140015ad7:	pop    rsp
   140015ad8:	jns    0x140015af2
   140015ada:	sub    al,0x2c
   140015adc:	imul   eax,DWORD PTR [rdi],0xffffffa8
   140015adf:	(bad)  
   140015ae0:	and    BYTE PTR [rbp-0x61],cl
   140015ae3:	shl    BYTE PTR [rbx+0x7e314627],0xf9
   140015aea:	lods   eax,DWORD PTR ds:[rsi]
   140015aeb:	call   0x11d1114cf
   140015af0:	cmc    
   140015af1:	and    eax,0xc31c6e60
   140015af6:	shl    DWORD PTR [rbx+0x147d3e18],cl
   140015afc:	popf   
   140015afd:	(bad)  [rcx]
   140015aff:	(bad)  
   140015b00:	vaddsubpd xmm11,xmm12,xmm2
   140015b04:	add    al,al
   140015b06:	fwait
   140015b07:	scas   al,BYTE PTR es:[rdi]
   140015b08:	pop    rsp
   140015b09:	add    bl,BYTE PTR [rbx+0x39a80fe5]
   140015b0f:	stc    
   140015b10:	stos   BYTE PTR es:[rdi],al
   140015b11:	mov    esi,0xefcb5235
   140015b16:	(bad)  
   140015b17:	and    edi,eax
   140015b19:	jg     0x140015ac7
   140015b1b:	jrcxz  0x140015acb
   140015b1d:	test   esi,ebx
   140015b1f:	or     al,0x22
   140015b21:	jnp    0x140015b91
   140015b23:	(bad)  
   140015b24:	mov    dl,0xe5
   140015b26:	jbe    0x140015b8d
   140015b28:	adc    BYTE PTR [rcx+rbx*8-0x60a2008a],al
   140015b2f:	and    ebp,eax
   140015b31:	loopne 0x140015b4f
   140015b33:	mov    ?,r9d
   140015b36:	sbb    edx,DWORD PTR [rdi-0x60]
   140015b39:	pushf  
   140015b3a:	xchg   bl,al
   140015b3c:	jmp    QWORD PTR [rax-0x2355b611]
   140015b42:	xchg   esp,eax
   140015b43:	in     eax,0xaf
   140015b45:	xchg   esp,eax
   140015b46:	cmc    
   140015b47:	(bad)  
   140015b48:	(bad)  
   140015b49:	ja     0x140015b2b
   140015b4b:	cmp    al,0x1
   140015b4d:	gs out 0xdf,al
   140015b50:	loopne 0x140015b90
   140015b52:	vmulps ymm3,ymm0,ymm1
   140015b56:	jno    0x140015b20
   140015b58:	sar    DWORD PTR [rbp+0x2d],cl
   140015b5b:	add    ah,BYTE PTR [rax+0x68]
   140015b5e:	add    esp,esp
   140015b60:	push   rcx
   140015b61:	adc    dl,0xe2
   140015b64:	xchg   esi,eax
   140015b65:	push   0x4e1e4082
   140015b6a:	xor    al,0xa3
   140015b6c:	rex.X movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015b6e:	lock movabs ds:0x55f5e4a6199b3414,eax
   140015b78:	pop    rcx
   140015b79:	(bad)  
   140015b7a:	outs   dx,BYTE PTR ds:[rsi]
   140015b7b:	ret    0xdfaf
   140015b7e:	mov    ecx,0x7cf625
   140015b83:	sbb    eax,0x9ad804ff
   140015b88:	(bad)  
   140015b89:	mov    rax,QWORD PTR [r14+0x46002472]
   140015b90:	movsxd esp,DWORD PTR [rcx]
   140015b92:	scas   eax,DWORD PTR es:[rdi]
   140015b93:	lea    ebx,[rcx-0x369a59af]
   140015b99:	adc    ch,ah
   140015b9b:	ds cmp ebx,ecx
   140015b9e:	test   DWORD PTR [rcx+0x18434293],esp
   140015ba4:	fimul  DWORD PTR [rcx]
   140015ba6:	fcomp  QWORD PTR [rsp+rdi*1]
   140015ba9:	sbb    BYTE PTR [rsi],dh
   140015bab:	out    dx,al
   140015bac:	sti    
   140015bad:	xor    dh,BYTE PTR [rsi-0x41]
   140015bb0:	call   0xef18dc51
   140015bb5:	add    BYTE PTR [rax+0x3c2e15e7],al
   140015bbb:	stc    
   140015bbc:	in     al,0xe3
   140015bbe:	rex.RXB (bad) 
   140015bc0:	int    0xcd
   140015bc2:	iret   
   140015bc3:	or     al,0xee
   140015bc5:	fnstenv [rdi-0x14158bc9]
   140015bcb:	jne    0x140015b61
   140015bcd:	hlt    
   140015bce:	(bad)  
   140015bcf:	xor    ebp,DWORD PTR [rax+0x13041a49]
   140015bd5:	gs push rax
   140015bd7:	(bad)  
   140015bd8:	movabs eax,ds:0xf9c0c10ce71fc178
   140015be1:	loopne 0x140015b9d
   140015be3:	fwait
   140015be4:	rex jg 0x140015c09
   140015be7:	(bad)  
   140015be8:	ins    BYTE PTR es:[rdi],dx
   140015be9:	sar    BYTE PTR [rdx],0xaf
   140015bec:	rex.W jrcxz 0x140015bfb
   140015bef:	jae    0x140015bfa
   140015bf1:	push   rdx
   140015bf2:	rcl    al,cl
   140015bf4:	lahf   
   140015bf5:	(bad)  
   140015bf6:	ror    DWORD PTR [rax+0x2a124899],1
   140015bfc:	rex.X
   140015bfd:	repnz or ch,BYTE PTR [rcx+0x5a40979c]
   140015c04:	or     edx,DWORD PTR [rax+0x22366fa1]
   140015c0a:	add    al,0x8a
   140015c0c:	adc    eax,0x47147278
   140015c11:	rex.WRX lahf 
   140015c13:	(bad)  
   140015c14:	leave  
   140015c15:	rex.WXB outs dx,DWORD PTR ds:[rsi]
   140015c17:	(bad)  
   140015c18:	mov    fs,ecx
   140015c1a:	add    ecx,DWORD PTR [rax-0x65]
   140015c1d:	imul   ebp,DWORD PTR [rax-0x1a],0x4e
   140015c21:	(bad)  
   140015c22:	push   0x27bb0c7a
   140015c27:	mov    cs,WORD PTR [rax]
   140015c29:	jmp    0xf8848ce5
   140015c2e:	mov    dl,0x20
   140015c30:	icebp  
   140015c31:	jle    0x140015c89
   140015c33:	ror    BYTE PTR [rdi+0x54050e80],cl
   140015c39:	and    DWORD PTR [rax-0x6cbf83b],ecx
   140015c3f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015c40:	xchg   ecx,eax
   140015c41:	add    eax,0x7f7e213e
   140015c46:	and    BYTE PTR [rcx],ah
   140015c48:	inc    ah
   140015c4a:	cli    
   140015c4b:	(bad)  
   140015c4c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015c4d:	lahf   
   140015c4e:	loope  0x140015cc2
   140015c50:	movsxd esi,edx
   140015c52:	fst    DWORD PTR [rsp+rax*4]
   140015c55:	jo     0x140015c20
   140015c57:	xchg   ecx,eax
   140015c58:	test   ch,bh
   140015c5a:	(bad)  
   140015c5b:	movabs ds:0x2c82b00c0b52d519,al
   140015c64:	rex.WRXB (bad) 
   140015c66:	and    cl,dl
   140015c68:	jns    0x140015c69
   140015c6a:	sub    bl,BYTE PTR [rax+0x39]
   140015c6d:	out    dx,eax
   140015c6e:	(bad)  
   140015c70:	add    dh,BYTE PTR [rdx-0x21]
   140015c73:	lahf   
   140015c74:	(bad)  
   140015c75:	in     al,0xf5
   140015c77:	imul   ebx,DWORD PTR [rbp-0x681a575],0x5d
   140015c7e:	adc    eax,0x48832082
   140015c83:	test   al,0x5c
   140015c85:	sbb    eax,ebp
   140015c87:	jno    0x140015ceb
   140015c89:	rex.RX adc BYTE PTR [rsi-0x7],r15b
   140015c8d:	rex.B
   140015c8e:	repz (bad) 
   140015c90:	(bad)  
   140015c91:	rex.RX and al,0xe
   140015c94:	xchg   ebx,eax
   140015c95:	or     eax,0x68429819
   140015c9a:	push   rbp
   140015c9b:	xor    al,0xe9
   140015c9d:	jle    0x140015d05
   140015c9f:	cmp    BYTE PTR [rcx+0x28],dl
   140015ca2:	xchg   edx,eax
   140015ca3:	or     al,0x2c
   140015ca5:	xor    ecx,DWORD PTR gs:[rax]
   140015ca8:	fidiv  WORD PTR [rdx]
   140015caa:	cvtdq2ps xmm4,XMMWORD PTR [rsi-0x54]
   140015cae:	out    dx,eax
   140015caf:	stos   BYTE PTR es:[rdi],al
   140015cb0:	push   rsi
   140015cb1:	cmp    ebx,DWORD PTR [rcx-0x48]
   140015cb4:	rex.WRX test QWORD PTR [rdx],r14
   140015cb7:	add    esi,edx
   140015cb9:	xor    ecx,edi
   140015cbb:	fcom   QWORD PTR [rcx+0x2]
   140015cbe:	mov    esp,0xcd2ec02e
   140015cc3:	jb     0x140015d19
   140015cc5:	mov    edi,?
   140015cc7:	iret   
   140015cc8:	enter  0xe097,0xfe
   140015ccc:	xchg   BYTE PTR [rdx+0x6b8a8184],dl
   140015cd2:	sub    esi,esp
   140015cd4:	mov    ebp,0x54df0629
   140015cd9:	pop    rsi
   140015cda:	sbb    BYTE PTR [rbp+rcx*1-0x5e],bl
   140015cde:	pop    rcx
   140015cdf:	clc    
   140015ce0:	sbb    BYTE PTR [rsi],ch
   140015ce2:	stc    
   140015ce3:	rex.WX sub QWORD PTR [rbx+0x7f],rsp
   140015ce7:	jnp    0x140015cf3
   140015ce9:	shl    BYTE PTR [rsi+0x7e841333],0x81
   140015cf0:	repz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015cf2:	(bad)  
   140015cf3:	xchg   edi,eax
   140015cf4:	(bad)  
   140015cf5:	ds hlt 
   140015cf7:	shl    BYTE PTR [rdi-0x9],0x5d
   140015cfb:	jns    0x140015cf2
   140015cfd:	push   rsp
   140015cfe:	rex.WRXB pop r15
   140015d00:	dec    DWORD PTR [rbp+0x20]
   140015d03:	hlt    
   140015d04:	(bad)  
   140015d05:	int    0xac
   140015d07:	xor    bl,BYTE PTR [rax+0x4e]
   140015d0a:	data16 ficom WORD PTR [rbp+rdx*1-0x49]
   140015d0f:	sbb    BYTE PTR [rdi-0x6b],bh
   140015d12:	data16 jns 0x140015d8b
   140015d15:	(bad)
   140015d18:	and    al,0x16
   140015d1a:	fidivr WORD PTR [rbx-0x6b68e8ef]
   140015d20:	cwde   
   140015d21:	push   rcx
   140015d22:	rex.XB loopne 0x140015d99
   140015d25:	pop    rsi
   140015d26:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015d27:	mov    edx,DWORD PTR [rax]
   140015d29:	push   rsp
   140015d2a:	jne    0x140015d90
   140015d2c:	gs pop r10
   140015d2f:	cmp    BYTE PTR [rcx+rbp*4+0x7e],ah
   140015d33:	ds pop rsp
   140015d35:	and    dl,BYTE PTR [rax+0x60]
   140015d38:	out    0x8e,eax
   140015d3a:	lods   al,BYTE PTR ds:[rsi]
   140015d3b:	inc    BYTE PTR [rcx+0xd550840]
   140015d41:	ds stc 
   140015d43:	xor    al,0x9e
   140015d45:	cmp    eax,0x97e30c71
   140015d4a:	fld    QWORD PTR [rdx+0x4803e181]
   140015d50:	fisttp QWORD PTR [rip+0x604c2e6c]        # 0x1a04d8bc2
   140015d56:	jo     0x140015dbe
   140015d58:	or     al,0xbb
   140015d5a:	es (bad) 
   140015d5c:	movabs al,ds:0xe5aa34c2e224ea6f
   140015d65:	add    eax,0xd7a2b370
   140015d6a:	sub    dl,ch
   140015d6c:	scas   al,BYTE PTR es:[rdi]
   140015d6d:	xchg   BYTE PTR [rax+0x3a31157e],dl
   140015d73:	sub    al,0x42
   140015d75:	pop    rcx
   140015d76:	push   rcx
   140015d77:	and    ecx,DWORD PTR [rcx]
   140015d79:	rex test ebp,esp
   140015d7c:	outs   dx,DWORD PTR ds:[rsi]
   140015d7d:	sub    eax,0x159665ef
   140015d82:	sbb    DWORD PTR [rsi],edx
   140015d84:	(bad)  
   140015d85:	rex sti 
   140015d87:	stc    
   140015d88:	jmp    0x124fd2684
   140015d8d:	xor    eax,0xc95880fa
   140015d92:	cli    
   140015d93:	ja     0x140015d36
   140015d95:	and    dh,bh
   140015d97:	movabs ds:0x84662220314ebb2,al
   140015da0:	sub    al,BYTE PTR [rax+0x31]
   140015da3:	adc    BYTE PTR [rdx-0x3bf80498],ch
   140015da9:	sub    ch,dh
   140015dab:	add    al,0x16
   140015dad:	add    cl,BYTE PTR [rsi+rax*2-0x54a36e02]
   140015db4:	jl     0x140015dcc
   140015db6:	rex push rcx
   140015db8:	sub    al,0x76
   140015dba:	in     eax,0xd6
   140015dbc:	lahf   
   140015dbd:	push   rsp
   140015dbe:	imul   edx,DWORD PTR [rax+rcx*4],0x9605a344
   140015dc5:	(bad)  
   140015dc6:	in     al,0x55
   140015dc8:	mov    eax,DWORD PTR [rbp+0x8]
   140015dcb:	shr    BYTE PTR [rdi],1
   140015dcd:	(bad)  
   140015dce:	jb     0x140015dee
   140015dd0:	mul    DWORD PTR [rbx-0x4]
   140015dd3:	jae    0x140015d7d
   140015dd5:	(bad)  
   140015dd6:	enter  0xd2c,0xb5
   140015dda:	and    al,0x1f
   140015ddc:	jns    0x140015e0a
   140015dde:	cmc    
   140015ddf:	(bad)  
   140015de0:	int3   
   140015de1:	sbb    ebp,esi
   140015de3:	xchg   ebp,eax
   140015de4:	fcom   st(5)
   140015de6:	jg     0x140015e4f
   140015de8:	enter  0x540f,0x44
   140015dec:	xchg   DWORD PTR [rax],ebx
   140015dee:	(bad)
   140015df2:	ss bswap eax
   140015df5:	and    eax,DWORD PTR [rbx]
   140015df7:	sub    BYTE PTR [rbp-0x3aa579e1],al
   140015dfd:	test   BYTE PTR [rax-0x47],bh
   140015e00:	xor    bl,bh
   140015e02:	(bad)  
   140015e03:	xchg   edx,eax
   140015e04:	in     al,dx
   140015e05:	sar    DWORD PTR [rdx*8-0x24248d84],0xa0
   140015e0d:	repz sbb al,0xea
   140015e10:	shl    BYTE PTR [rdx+0x1006572a],cl
   140015e16:	cmp    DWORD PTR [rip+0x7bbea29f],ecx        # 0x1bbc000bb
   140015e1c:	(bad)  
   140015e1d:	movabs ds:0x5585c04e545ff,al
   140015e26:	pushf  
   140015e27:	xlat   BYTE PTR ds:[rbx]
   140015e28:	and    eax,0x3f8e9000
   140015e2d:	neg    ch
   140015e2f:	(bad)  
   140015e30:	jp     0x140015e38
   140015e32:	jbe    0x140015eb0
   140015e34:	jge    0x140015e96
   140015e36:	out    0xf0,eax
   140015e38:	mov    ch,0x44
   140015e3a:	loope  0x140015dcc
   140015e3c:	pop    rcx
   140015e3d:	jno    0x140015ea2
   140015e3f:	(bad)  
   140015e40:	in     eax,0xc6
   140015e42:	fcmovnb st,st(5)
   140015e44:	cmp    al,0x79
   140015e46:	xchg   ecx,eax
   140015e47:	rex.WRB fldenv [r15+0x511b9e41]
   140015e4e:	and    DWORD PTR [rax],ebx
   140015e50:	xchg   ebx,eax
   140015e51:	and    eax,0x1aefc8bd
   140015e56:	or     eax,0x6fc555ef
   140015e5b:	sbb    edx,DWORD PTR [rsi-0x15]
   140015e5e:	scas   eax,DWORD PTR es:[rdi]
   140015e5f:	mov    esi,0x9fcb0bf
   140015e64:	or     ecx,eax
   140015e66:	add    eax,0x77bfcd9d
   140015e6b:	and    eax,0x83023990
   140015e70:	(bad)
   140015e74:	ror    BYTE PTR [rcx-0x2b330f59],cl
   140015e7a:	adc    al,0x4e
   140015e7c:	pop    rsi
   140015e7d:	jno    0x140015e9a
   140015e7f:	(bad)  
   140015e80:	rex.RXB test BYTE PTR [r9+0x16d62e9b],0x26
   140015e88:	shl    DWORD PTR [rdi],1
   140015e8a:	jnp    0x140015e8e
   140015e8c:	jnp    0x140015eb4
   140015e8e:	(bad)  
   140015e8f:	movabs al,ds:0xaee8fcb52a04f27f
   140015e98:	rcl    BYTE PTR [rdx+0x6149087d],0x7f
   140015e9f:	rex.R
   140015ea0:	rex.WRB mov WORD PTR [r10+0x53],ds
   140015ea4:	xchg   ecx,eax
   140015ea5:	and    eax,0xdc3dbfd6
   140015eaa:	out    0xd0,eax
   140015eac:	pop    rdi
   140015ead:	add    eax,0xcc7b92d1
   140015eb2:	repnz fwait
   140015eb4:	pop    rbp
   140015eb5:	repz hlt 
   140015eb7:	pop    rsi
   140015eb8:	push   rdx
   140015eb9:	call   FWORD PTR [rdi-0x55c029f6]
   140015ebf:	lock xor DWORD PTR [rdx],0xffffff8a
   140015ec3:	push   rax
   140015ec4:	movabs eax,ds:0xb00a2a32845f96ce
   140015ecd:	adc    BYTE PTR [rdi],bl
   140015ecf:	cmp    DWORD PTR [rbx-0xf419391],edx
   140015ed5:	add    edx,DWORD PTR [rcx]
   140015ed7:	xchg   edx,eax
   140015ed8:	clc    
   140015ed9:	and    ebp,DWORD PTR [rcx-0x43]
   140015edc:	(bad)  
   140015edd:	add    al,0x2a
   140015edf:	mov    ch,BYTE PTR [rip+0xfffffffff62d1124]        # 0x1362e7009
   140015ee5:	rex.WRXB
   140015ee6:	lods   al,BYTE PTR ds:[rsi]
   140015ee8:	or     dl,BYTE PTR [rdi-0x40]
   140015eeb:	and    al,BYTE PTR [rax]
   140015eed:	(bad)  
   140015eee:	lock pop rbx
   140015ef0:	push   rsi
   140015ef1:	(bad)  
   140015ef2:	push   rsi
   140015ef3:	ins    BYTE PTR es:[rdi],dx
   140015ef4:	movabs ds:0xea0c048c9f2b8208,al
   140015efd:	rcl    BYTE PTR [rbp+0x3dd86943],0x5f
   140015f04:	test   bl,dh
   140015f06:	addr32 ds jg 0x140015ed6
   140015f0a:	(bad)  
   140015f0b:	fwait
   140015f0c:	outs   dx,DWORD PTR ds:[rsi]
   140015f0d:	or     eax,0xbb291f98
   140015f12:	(bad)  
   140015f13:	(bad)  
   140015f14:	cmp    DWORD PTR [rax+0x65],esp
   140015f17:	loope  0x140015f55
   140015f19:	retf   0x7e3e
   140015f1c:	push   rbx
   140015f1d:	jl     0x140015ecd
   140015f1f:	ror    dh,cl
   140015f21:	sbb    cl,BYTE PTR [rcx]
   140015f23:	jo     0x140015f67
   140015f25:	pop    rbx
   140015f26:	jge    0x140015f75
   140015f28:	scas   eax,DWORD PTR es:[rdi]
   140015f29:	cmp    al,0x49
   140015f2b:	vpunpcklqdq xmm15,xmm14,XMMWORD PTR [rsi]
   140015f2f:	mov    cl,0xe4
   140015f31:	(bad)  
   140015f32:	xchg   esp,eax
   140015f33:	imul   ecx,DWORD PTR [rdx+rbp*4+0x6e],0xc54b2bb2
   140015f3b:	mov    ecx,0x391b91b3
   140015f40:	mov    ch,dh
   140015f42:	out    dx,eax
   140015f43:	jl     0x140015f47
   140015f45:	sti    
   140015f46:	lahf   
   140015f47:	(bad)  
   140015f48:	mov    ecx,eax
   140015f4a:	or     DWORD PTR [rax+0x78000af0],edi
   140015f50:	pop    rsi
   140015f51:	add    al,0xe1
   140015f53:	(bad)  
   140015f54:	shl    edi,1
   140015f56:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015f57:	out    0x4f,al
   140015f59:	(bad)  
   140015f5a:	jg     0x140015fc6
   140015f5c:	call   0x12ea28541
   140015f61:	jmp    0x1af717523
   140015f66:	iret   
   140015f67:	mov    ch,0x27
   140015f69:	add    BYTE PTR [rsp+rsi*4+0x4270925],al
   140015f70:	xor    al,0x9c
   140015f72:	lahf   
   140015f73:	rex.RB
   140015f74:	rex.W and spl,spl
   140015f77:	sub    DWORD PTR [rax-0x4b7dfb99],edx
   140015f7d:	ficomp WORD PTR [rdi]
   140015f7f:	xchg   esi,eax
   140015f80:	repz (bad) 
   140015f82:	cmp    ebx,ebx
   140015f84:	(bad)  
   140015f85:	and    DWORD PTR [rcx+0x73],eax
   140015f88:	in     eax,dx
   140015f89:	movabs ds:0xd07c6e04330d7206,eax
   140015f92:	mov    WORD PTR [rax],ds
   140015f94:	xor    al,0xed
   140015f96:	stos   DWORD PTR es:[rdi],eax
   140015f97:	or     ecx,DWORD PTR [rsi-0x5]
   140015f9a:	mov    cl,0x62
   140015f9c:	or     al,bl
   140015f9e:	cmp    al,0xf2
   140015fa0:	or     BYTE PTR [rsi-0x3b3b6366],bl
   140015fa6:	xchg   ebp,eax
   140015fa7:	mov    bh,0x63
   140015fa9:	js     0x14001600f
   140015fab:	(bad)  
   140015fac:	push   rdx
   140015fad:	rex.WX pop rax
   140015faf:	pop    rbx
   140015fb0:	pushf  
   140015fb1:	rex.RX out dx,eax
   140015fb3:	int3   
   140015fb4:	sbb    dh,dh
   140015fb6:	rex.WR (bad) 
   140015fb8:	ret    
   140015fb9:	loopne 0x140015f7f
   140015fbb:	sbb    dl,ah
   140015fbd:	ret    0xaa14
   140015fc0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015fc1:	cmp    DWORD PTR [rbp-0x37],ebx
   140015fc4:	ja     0x140015fd9
   140015fc6:	(bad)  
   140015fc7:	je     0x140015f6d
   140015fc9:	rex.XB test BYTE PTR [r10+0xb826a02],bl
   140015fd0:	jg     0x14001602b
   140015fd2:	ficomp WORD PTR [rbx+0x2e]
   140015fd5:	out    0x25,eax
   140015fd7:	xor    dl,BYTE PTR [rdx-0x8]
   140015fda:	out    dx,al
   140015fdb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015fdc:	lock xchg ebx,eax
   140015fde:	rex.WRB out 0x42,al
   140015fe1:	clc    
   140015fe2:	and    ebp,ecx
   140015fe4:	rex.X pop rbp
   140015fe6:	clc    
   140015fe7:	mov    ecx,0x553011a8
   140015fec:	(bad)  
   140015fed:	xor    BYTE PTR [rsi-0x71],bl
   140015ff0:	jrcxz  0x140015f7f
   140015ff2:	sub    DWORD PTR ds:[rbx+0x9],esi
   140015ff6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015ff7:	add    BYTE PTR [rdx-0x3e8b38d8],ch
   140015ffd:	pshufw mm3,mm6,0x20
   140016001:	add    al,0x11
   140016003:	push   0x51
   140016005:	or     al,0x19
   140016007:	dec    BYTE PTR [rbx-0x7e]
   14001600a:	adc    DWORD PTR [rbx+0x4fd23032],ebp
   140016010:	sbb    al,BYTE PTR [rcx+0x6590e25a]
   140016016:	dec    DWORD PTR [rcx+0x22]
   140016019:	xchg   ebx,eax
   14001601a:	pop    rdx
   14001601b:	cmp    cl,BYTE PTR [rip+0xffffffffa3b09871]        # 0xe3b1f892
   140016021:	clc    
   140016022:	mov    gs,ebp
   140016024:	mov    ch,0x8d
   140016026:	cwde   
   140016027:	xchg   BYTE PTR [rsi+0x360b349d],al
   14001602d:	rex.WX cmp cl,BYTE PTR [rcx]
   140016030:	loopne 0x140016091
   140016032:	cmp    DWORD PTR [rdx+0x6bdaafb3],edx
   140016038:	(bad)  
   140016039:	and    bl,ch
   14001603b:	add    DWORD PTR [rsi+riz*1-0x61],0xc8a1fb0a
   140016043:	xchg   ebx,eax
   140016044:	fisttp QWORD PTR [rip+0x17432ab0]        # 0x157448afa
   14001604a:	jl     0x140016072
   14001604c:	push   rax
   14001604d:	xchg   ebx,eax
   14001604e:	pop    rbx
   14001604f:	loope  0x140015fe4
   140016051:	sub    DWORD PTR [rcx],eax
   140016053:	jrcxz  0x140016059
   140016055:	(bad)  
   140016056:	call   0xd636a8fc
   14001605b:	outs   dx,BYTE PTR ds:[rsi]
   14001605c:	(bad)  
   14001605d:	xor    dl,bl
   14001605f:	jl     0x14001609f
   140016061:	push   rbx
   140016062:	rex.RX xor r11b,BYTE PTR [rsi]
   140016065:	xor    ebx,ecx
   140016067:	pop    rcx
   140016068:	mov    edi,0x18103959
   14001606d:	or     BYTE PTR [rip+0x1c1ee6a4],bl        # 0x15c204717
   140016073:	mov    edx,0xe0376d0f
   140016078:	add    eax,0x469780a1
   14001607d:	add    eax,ebx
   14001607f:	jbe    0x1400160bf
   140016081:	(bad)  
   140016082:	jo     0x1400160f5
   140016084:	(bad)  
   140016085:	movsxd ebp,esp
   140016087:	xchg   ecx,eax
   140016088:	xchg   DWORD PTR [rsi-0x5e3683cf],edi
   14001608e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001608f:	cmp    edi,ebp
   140016091:	cmp    ebp,DWORD PTR [rsi-0x60]
   140016094:	adc    BYTE PTR [rsi+0x508a99e5],al
   14001609a:	rex.RX sbb DWORD PTR [rsi-0x38],0xffffff82
   14001609f:	xlat   BYTE PTR ds:[rbx]
   1400160a0:	push   rbp
   1400160a1:	xor    eax,0x31200449
   1400160a6:	sub    ah,BYTE PTR [rsi+0x34]
   1400160a9:	rex.R in eax,dx
   1400160ab:	add    DWORD PTR [rsi+0x2c0ad9d8],eax
   1400160b1:	mov    esi,0x64fdaabf
   1400160b6:	(bad)  
   1400160b7:	(bad)  
   1400160b8:	or     al,0xeb
   1400160ba:	imul   edx,DWORD PTR [rdi-0x2],0x72f524a6
   1400160c1:	push   0xffffffffffffffa6
   1400160c3:	jge    0x140016073
   1400160c5:	(bad)  
   1400160c6:	pop    rsi
   1400160c7:	loope  0x1400160b3
   1400160c9:	cli    
   1400160ca:	push   rbx
   1400160cb:	pavgb  mm5,QWORD PTR [rcx+0x5d4c55a5]
   1400160d2:	jnp    0x1400160db
   1400160d4:	xchg   BYTE PTR [rsi-0x12],dh
   1400160d7:	rex.RX xchg ebx,eax
   1400160d9:	sbb    ch,BYTE PTR [rsi+rbp*1+0x6667a34c]
   1400160e0:	adc    al,0xbb
   1400160e2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400160e3:	rex.RX xor DWORD PTR [rax],r15d
   1400160e6:	cmp    DWORD PTR [rsi+0x71126e6a],eax
   1400160ec:	jns    0x14001610c
   1400160ee:	mov    ah,0x2e
   1400160f0:	sub    edi,ecx
   1400160f2:	(bad)  
   1400160f3:	mov    ebp,0x24221af5
   1400160f8:	adc    eax,0x284f8159
   1400160fd:	add    al,0x5f
   1400160ff:	js     0x140016081
   140016101:	adc    bl,dh
   140016103:	mov    dl,0x4d
   140016105:	add    al,0x78
   140016107:	xchg   edx,eax
   140016108:	rex.WR push rsp
   14001610a:	push   0xffffffffc96f176f
   14001610f:	sub    al,BYTE PTR [rcx]
   140016111:	enter  0x3705,0xaa
   140016115:	rex.WX jae 0x140016107
   140016118:	jle    0x140016152
   14001611a:	mov    cl,0x16
   14001611c:	mov    ah,0x4b
   14001611e:	mov    BYTE PTR [rbp+0xe],ah
   140016121:	rex.X fnstcw WORD PTR [rdi-0x75]
   140016125:	jrcxz  0x1400160c2
   140016127:	or     esp,DWORD PTR [rcx+0x2]
   14001612a:	sub    dh,ch
   14001612c:	inc    BYTE PTR [rbp+0x2]
   14001612f:	rex.WRXB and BYTE PTR [r15+0x12],r9b
   140016133:	mov    ch,BYTE PTR [rdx+0x4b30b20c]
   140016139:	fnstenv [rdx]
   14001613b:	test   DWORD PTR [rdi+rdi*1+0x337edd60],ebx
   140016142:	mov    ch,BYTE PTR [rax+0x27]
   140016145:	(bad)  
   140016146:	in     eax,0xb0
   140016148:	sbb    eax,eax
   14001614a:	and    DWORD PTR [rip+0x4189c801],0x9acf5582        # 0x1818b2955
   140016154:	add    eax,0x80c5510f
   140016159:	mov    dl,0x32
   14001615b:	push   0xffffffffa094c207
   140016160:	xor    eax,0xfe1f0114
   140016165:	ret    0x229a
   140016168:	push   rdi
   140016169:	mov    ds,edx
   14001616b:	rex.RXB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001616d:	test   DWORD PTR [rdi],eax
   14001616f:	leave  
   140016170:	or     al,0x4a
   140016172:	add    eax,0x738a67f9
   140016177:	mov    edi,DWORD PTR [rcx]
   140016179:	movabs ds:0xca9ec0028173eb02,eax
   140016182:	push   rdx
   140016183:	fs sti 
   140016185:	sbb    al,BYTE PTR [rsi+0x1b8bffcc]
   14001618b:	and    bh,dh
   14001618d:	adc    esp,ebx
   14001618f:	test   ecx,esi
   140016191:	add    BYTE PTR [rbx-0x6ad1d6d5],ch
   140016197:	(bad)  
   140016198:	out    dx,al
   140016199:	push   rdi
   14001619a:	jno    0x1400161d6
   14001619c:	mov    ah,0x9b
   14001619e:	ss (bad) 
   1400161a0:	jle    0x1400161e1
   1400161a2:	rex.RX
   1400161a3:	data16 rex.WRB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400161a6:	pop    rsi
   1400161a7:	sub    BYTE PTR [rdx],cl
   1400161a9:	js     0x140016214
   1400161ab:	adc    eax,0x32bcf000
   1400161b0:	or     bh,al
   1400161b2:	lahf   
   1400161b3:	jl     0x1400161b1
   1400161b5:	cmp    DWORD PTR [rsi-0x33],ecx
   1400161b8:	out    0x6,eax
   1400161ba:	jbe    0x1400161ab
   1400161bc:	fst    QWORD PTR [rdi]
   1400161be:	(bad)  
   1400161bf:	cli    
   1400161c0:	cmp    dh,BYTE PTR [rax+0x16c8f325]
   1400161c6:	sbb    BYTE PTR [rsi+0x5f96e163],dl
   1400161cc:	jb     0x1400161c8
   1400161ce:	(bad)  [rcx]
   1400161d0:	(bad)  
   1400161d1:	fist   DWORD PTR [rdx]
   1400161d3:	fs rex.WRX je 0x1400161b3
   1400161d7:	mov    al,BYTE PTR [rdi]
   1400161d9:	pop    rdi
   1400161da:	int    0x28
   1400161dc:	sub    BYTE PTR [rbx+0x4509911f],bl
   1400161e2:	push   rsi
   1400161e3:	jl     0x14001622b
   1400161e5:	jo     0x1400161ac
   1400161e7:	pop    rsp
   1400161e8:	pop    rsp
   1400161e9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400161ea:	mov    ecx,0x85620005
   1400161ef:	fsubr  DWORD PTR [rax+riz*2-0xb]
   1400161f3:	outs   dx,DWORD PTR ds:[rsi]
   1400161f4:	mov    esi,0x337c781
   1400161f9:	(bad)  
   1400161fa:	scas   al,BYTE PTR es:[rdi]
   1400161fb:	jns    0x140016220
   1400161fd:	xchg   BYTE PTR [rdi],al
   1400161ff:	ja     0x140016202
   140016201:	sub    DWORD PTR [rcx+0x79],esp
   140016204:	imul   ecx,DWORD PTR [rsi],0xec71ecd5
   14001620a:	(bad)  
   14001620b:	(bad)  
   14001620c:	ret    
   14001620d:	shl    ah,1
   14001620f:	test   al,0x32
   140016211:	(bad)  
   140016212:	mov    bl,0xa0
   140016214:	mov    ch,0x25
   140016216:	and    BYTE PTR [rbp-0x17b775d5],ch
   14001621c:	adc    BYTE PTR [rbx+0x7235110a],ah
   140016222:	movsxd ecx,DWORD PTR [rdi-0x3ca57b78]
   140016228:	jge    0x1400161c8
   14001622a:	jrcxz  0x14001625b
   14001622c:	rex.RX sbb r9b,BYTE PTR [rdx+0x6d8b9180]
   140016233:	rex.WR
   140016234:	sbb    BYTE PTR [rcx],dl
   140016237:	push   rcx
   140016238:	sub    al,0x33
   14001623a:	sbb    DWORD PTR [rcx-0x79],edi
   14001623d:	sub    eax,0x1ac5bead
   140016242:	mov    ch,0xd3
   140016244:	outs   dx,BYTE PTR ds:[rsi]
   140016245:	rex.WRB enter 0x5a83,0xe2
   14001624a:	push   rax
   14001624b:	in     al,0xf0
   14001624d:	and    ebx,DWORD PTR [rbx-0x1]
   140016250:	mov    al,0x1d
   140016252:	(bad)  
   140016253:	rex
   140016254:	rex
   140016255:	rex.RXB
   140016256:	adc    r8b,BYTE PTR [r14]
   140016259:	sti    
   14001625a:	and    eax,0xfdf5079c
   14001625f:	movabs ds:0x9efb8707fcc28193,eax
   140016268:	neg    DWORD PTR [rdi]
   14001626a:	or     eax,0x14f2b0cd
   14001626f:	jb     0x140016200
   140016271:	jo     0x140016265
   140016273:	iret   
   140016274:	cs (bad) 
   140016276:	(bad)  
   140016277:	adc    DWORD PTR [rbx+rbp*8+0x16bc110],edi
   14001627e:	jb     0x14001620b
   140016280:	xor    BYTE PTR [rbx+0x348d85f6],dh
   140016286:	pop    rcx
   140016287:	cs pop rsp
   140016289:	rex.X sti 
   14001628b:	fadd   st(4),st
   14001628d:	fmulp  st(5),st
   14001628f:	xchg   BYTE PTR [rdi+0x4],cl
   140016292:	jb     0x14001623f
   140016294:	lahf   
   140016295:	mov    ch,0x2
   140016297:	imul   ecx,eax,0x4048cb7
   14001629d:	(bad)  
   14001629e:	cld    
   14001629f:	mov    ah,0xf2
   1400162a1:	rex.WR pop rbp
   1400162a3:	add    dh,cl
   1400162a5:	xor    bh,bl
   1400162a7:	addr32 mov edx,0x25bc935c
   1400162ad:	in     al,0x35
   1400162af:	or     al,0xf4
   1400162b1:	xor    eax,0xe741c012
   1400162b6:	mov    ch,0xb9
   1400162b8:	or     eax,0xcad3c470
   1400162bd:	rex.WRXB
   1400162be:	lock rex.WX sub dil,BYTE PTR [rbx-0x3de211e2]
   1400162c6:	out    0x89,al
   1400162c8:	(bad)  
   1400162c9:	(bad)  
   1400162ca:	and    eax,0x5316000f
   1400162cf:	(bad)  
   1400162d0:	or     esp,DWORD PTR [rdx]
   1400162d2:	add    ebx,DWORD PTR [rdi+0x7a]
   1400162d5:	add    eax,0x4a79db60
   1400162da:	mov    edi,fs
   1400162dc:	rex.WRXB lea r13,[r15]
   1400162df:	lea    edi,[rsi]
   1400162e1:	cld    
   1400162e2:	in     eax,dx
   1400162e3:	iret   
   1400162e4:	in     al,dx
   1400162e5:	mov    ebp,0x9ed9cafc
   1400162ea:	rex.WRX iretq 
   1400162ec:	int    0x8
   1400162ee:	movabs eax,ds:0x3833f0991f928017
   1400162f7:	push   rdi
   1400162f8:	sti    
   1400162f9:	cwde   
   1400162fa:	push   rcx
   1400162fb:	retf   
   1400162fc:	add    BYTE PTR [rax],bl
   1400162fe:	fsub   st(2),st
   140016300:	movabs al,ds:0x6e8ea22a8205120
   140016309:	rex.WRB
   14001630a:	add    DWORD PTR ss:[rbp-0x40],esp
   14001630e:	sbb    BYTE PTR [rax],ch
   140016310:	adc    eax,0x4d2ec173
   140016315:	ret    0x8140
   140016318:	sbb    DWORD PTR [rbx+rbp*1],ebx
   14001631b:	(bad)  
   14001631c:	int    0x55
   14001631e:	sub    al,0x3e
   140016320:	(bad)  
   140016321:	sub    eax,0xac5e813c
   140016326:	pop    rbp
   140016327:	sti    
   140016328:	rex.RX or al,0xed
   14001632b:	sbb    BYTE PTR [rdx+0x4a],al
   14001632e:	or     DWORD PTR [rbx],ebp
   140016330:	retf   
   140016331:	repz or BYTE PTR [rbx],dh
   140016334:	(bad)  
   140016335:	xor    DWORD PTR [rdx],esi
   140016337:	imul   ebp,DWORD PTR [rbx],0xfffffff9
   14001633a:	rex.WR and BYTE PTR [rsi],r13b
   14001633d:	iret   
   14001633e:	and    DWORD PTR [rsi+rbp*1+0x2baacd02],ebp
   140016345:	pushf  
   140016346:	(bad)  
   140016347:	or     BYTE PTR [rax],0xb1
   14001634a:	mul    BYTE PTR [rdx]
   14001634c:	cld    
   14001634d:	add    DWORD PTR [rip+0x2e24d425],edx        # 0x16e263778
   140016353:	rex.RX
   140016354:	rex.WRB and r9b,BYTE PTR [r9+rdx*1+0x5a]
   140016359:	pop    rbx
   14001635a:	(bad)  
   14001635b:	sub    BYTE PTR [rax],cl
   14001635d:	cmp    DWORD PTR [rdx+0x50],eax
   140016360:	jg     0x1400162f3
   140016362:	movabs ds:0x1081ee5f7c787941,al
   14001636b:	cmp    BYTE PTR [rax],bh
   14001636d:	mov    cl,0x46
   14001636f:	enter  0x8311,0x12
   140016373:	push   0x1b
   140016375:	fld    TBYTE PTR [rdi]
   140016377:	rex.X (bad) 
   140016379:	jge    0x1400163fa
   14001637b:	retf   
   14001637c:	sti    
   14001637d:	xchg   edi,eax
   14001637e:	iret   
   14001637f:	(bad)
   140016382:	(bad)  
   140016383:	or     BYTE PTR [rsi],0xff
   140016386:	jae    0x14001632c
   140016388:	rcl    BYTE PTR [rsi],0x0
   14001638b:	mov    ch,0x72
   14001638d:	pop    rsi
   14001638e:	rex.WXB cmc 
   140016390:	xor    eax,0x93dfd102
   140016395:	and    DWORD PTR [rdi-0x1b3db7d3],eax
   14001639b:	push   rdi
   14001639c:	scas   eax,DWORD PTR es:[rdi]
   14001639d:	fist   WORD PTR [rax+0x6009af89]
   1400163a3:	or     al,al
   1400163a5:	div    BYTE PTR [rcx]
   1400163a7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400163a8:	in     al,dx
   1400163aa:	repz (bad) 
   1400163ac:	sub    edx,DWORD PTR [rcx]
   1400163ae:	pop    rax
   1400163af:	rex.W push rax
   1400163b1:	(bad)  
   1400163b2:	push   0xbceffcb
   1400163b7:	cmp    al,ah
   1400163b9:	sub    ebp,DWORD PTR [rbx+rdi*1]
   1400163bc:	or     al,0x76
   1400163be:	sub    esp,esp
   1400163c0:	mov    bh,0x34
   1400163c2:	je     0x1400163bf
   1400163c4:	pop    rdx
   1400163c5:	xchg   ebp,eax
   1400163c6:	and    DWORD PTR [r14-0x3b],ebp
   1400163ca:	call   FWORD PTR [rax+rbp*1+0x4]
   1400163ce:	stc    
   1400163cf:	(bad)  
   1400163d0:	and    eax,0x476d5778
   1400163d5:	add    esi,DWORD PTR [rsi]
   1400163d7:	(bad)  
   1400163d8:	cwde   
   1400163d9:	mov    dh,BYTE PTR [rsi+0x76]
   1400163dc:	in     al,0xd8
   1400163de:	shr    BYTE PTR [rsi],0xb4
   1400163e1:	mov    esp,0x13bf3b13
   1400163e6:	popf   
   1400163e7:	jp     0x140016408
   1400163e9:	xor    eax,0x18c3c778
   1400163ee:	cli    
   1400163ef:	fsub   DWORD PTR [rdx+rdi*2]
   1400163f2:	ss icebp 
   1400163f4:	cmp    eax,0x9f2f01b8
   1400163f9:	add    al,BYTE PTR [rax]
   1400163fb:	sahf   
   1400163fc:	(bad)  
   1400163fd:	rex.B js 0x1400163f2
   140016400:	icebp  
   140016401:	rex.RXB (bad) 
   140016403:	in     eax,dx
   140016404:	sbb    eax,0xff7f79dc
   140016409:	(bad)  
   14001640a:	loope  0x1400163f7
   14001640c:	(bad)  
   14001640d:	mov    WORD PTR [rdi],es
   14001640f:	adc    edx,DWORD PTR [rcx]
   140016411:	sbb    dh,BYTE PTR [rsi]
   140016413:	lea    ebp,[rsi]
   140016415:	add    edx,DWORD PTR [rbp-0x55]
   140016418:	movsxd esp,DWORD PTR [rbp+0x21]
   14001641b:	(bad)  
   14001641c:	adc    al,0x7
   14001641e:	rex.WXB ins BYTE PTR es:[rdi],dx
   140016420:	sub    esp,ebp
   140016422:	clc    
   140016423:	push   0xffffffffce22076a
   140016428:	mov    esi,0xaededbf
   14001642d:	xlat   BYTE PTR ds:[rbx]
   14001642e:	rex.X jg 0x140016415
   140016431:	movabs ds:0x9841dd50008bd064,eax
   14001643a:	lahf   
   14001643b:	shl    ah,0x13
   14001643e:	pavgb  mm1,QWORD PTR [rcx+0x5748bdbe]
   140016445:	fisttp WORD PTR [rdx+0x481dfee1]
   14001644b:	sub    DWORD PTR [rcx+0x69],esp
   14001644e:	jns    0x140016451
   140016450:	xor    al,0x3b
   140016452:	xchg   BYTE PTR [rcx-0x66e71c67],dl
   140016458:	sbb    al,BYTE PTR [rbp-0x31]
   14001645b:	int3   
   14001645c:	imul   eax,esp,0x558459a5
   140016462:	jmp    0xdd2dac52
   140016467:	jnp    0x140016413
   140016469:	add    BYTE PTR [rcx-0xe],cl
   14001646c:	and    DWORD PTR [rax-0x76],ebp
   14001646f:	outs   dx,DWORD PTR ds:[rsi]
   140016470:	lock data16 sahf 
   140016473:	push   rcx
   140016474:	stos   DWORD PTR es:[rdi],eax
   140016475:	std    
   140016476:	retf   0x1f02
   140016479:	add    cl,BYTE PTR [rdx]
   14001647b:	mov    ebp,DWORD PTR [rip+0xffffffff92467c15]        # 0xd247e096
   140016481:	cdq    
   140016482:	(bad)  
   140016483:	out    dx,eax
   140016484:	rex.WB cmp al,0x1a
   140016487:	fisttp DWORD PTR [rdi-0x40b24dd0]
   14001648d:	(bad)  
   14001648f:	stos   BYTE PTR es:[rdi],al
   140016490:	rex.WR clc 
   140016492:	rex.RB push r8
   140016494:	lods   al,BYTE PTR ds:[rsi]
   140016495:	ror    BYTE PTR [rdi],cl
   140016497:	and    al,0x9
   140016499:	(bad)  
   14001649a:	xor    eax,ebx
   14001649c:	mov    esi,0x5070a3b9
   1400164a1:	mov    edi,0x92042f3f
   1400164a6:	adc    DWORD PTR [rbp+rdx*8-0x26f2bbeb],eax
   1400164ad:	add    eax,0xad5b0143
   1400164b2:	(bad)  
   1400164b3:	add    eax,0xf5ad1d27
   1400164b8:	push   rdi
   1400164b9:	pop    rcx
   1400164ba:	sub    BYTE PTR [rdx+rcx*1+0x3f],dl
   1400164be:	adc    eax,eax
   1400164c0:	xchg   ecx,eax
   1400164c1:	std    
   1400164c2:	jl     0x1400164f2
   1400164c4:	cld    
   1400164c5:	(bad)  
   1400164c6:	movsxd esp,DWORD PTR [rax+0xff91b0a]
   1400164cc:	sub    cl,BYTE PTR [rsi+riz*8]
   1400164cf:	retf   0x5ae9
   1400164d2:	sub    DWORD PTR [rsi+rdx*8+0x11835cbc],0xffffffc8
   1400164da:	rex.X (bad) 
   1400164dc:	out    0x2d,eax
   1400164de:	cld    
   1400164df:	jg     0x140016534
   1400164e1:	sbb    ah,BYTE PTR [rsi+0x6e]
   1400164e4:	cdq    
   1400164e5:	xchg   ecx,eax
   1400164e6:	rex.WRB or r13b,BYTE PTR [r11+0x563397c0]
   1400164ed:	pop    rdi
   1400164ee:	xchg   esp,eax
   1400164ef:	jge    0x1400164f7
   1400164f1:	sbb    DWORD PTR [rsi+0xac9c624],ebx
   1400164f7:	test   esp,esp
   1400164f9:	jnp    0x14001655e
   1400164fb:	stc    
   1400164fc:	jae    0x140016539
   1400164fe:	jl     0x140016531
   140016500:	push   rax
   140016501:	rex.R sub eax,0x88d01387
   140016507:	adc    BYTE PTR [rbx-0x790e857f],0x78
   14001650e:	mov    bh,0x39
   140016510:	mov    ecx,0xf78105fa
   140016515:	pop    rdi
   140016516:	rex.WRX imul r11,QWORD PTR [rdi-0x3],0x14
   14001651b:	test   BYTE PTR [rbp+0x3207be2],0x5f
   140016522:	pop    rsi
   140016523:	add    eax,0x9c9f3c00
   140016528:	xor    DWORD PTR [rsi*2-0x1d3b3714],0xd4fe9d4
   140016533:	sbb    eax,0x3d0aa4b8
   140016538:	mov    ebp,0x62390337
   14001653d:	push   rbx
   14001653e:	sub    ebx,esp
   140016540:	rex.WRXB (bad) 
   140016542:	std    
   140016543:	or     ebp,ebp
   140016545:	lahf   
   140016546:	cmp    bh,dl
   140016548:	ror    BYTE PTR [rbx-0x17],1
   14001654b:	test   BYTE PTR [rax],bh
   14001654d:	nop
   14001654e:	or     DWORD PTR [rdx-0x4],ecx
   140016551:	add    DWORD PTR [rax+0x3065d9c4],ecx
   140016557:	(bad)  
   140016558:	leave  
   140016559:	(bad)  
   14001655a:	and    edx,DWORD PTR [rbx-0x2cacfc60]
   140016560:	and    DWORD PTR [rdx-0x2b],ecx
   140016563:	fucomi st,st(0)
   140016565:	movsxd edi,DWORD PTR [rax]
   140016567:	stc    
   140016568:	hlt    
   140016569:	and    edi,DWORD PTR [rax+0x7a]
   14001656c:	fcomip st,st(5)
   14001656e:	call   0x14c3c63cf
   140016573:	div    edi
   140016575:	movabs eax,ds:0x27b3401797161269
   14001657e:	xor    BYTE PTR [rdx],dh
   140016580:	xor    eax,DWORD PTR [rsi-0x76ce361f]
   140016586:	cmc    
   140016587:	(bad)  
   140016588:	int    0xc8
   14001658a:	(bad)  
   14001658b:	(bad)  
   14001658c:	fwait
   14001658d:	sub    ecx,DWORD PTR [rax]
   14001658f:	sbb    rsi,QWORD PTR [r15+0x10]
   140016593:	stos   DWORD PTR es:[rdi],eax
   140016594:	lock or ebx,ebx
   140016597:	pop    rdi
   140016598:	or     bh,BYTE PTR [rdi-0x398b07cb]
   14001659e:	pop    rdi
   14001659f:	out    0x7c,eax
   1400165a1:	scas   al,BYTE PTR es:[rdi]
   1400165a2:	mov    esi,0x51788d23
   1400165a7:	fwait
   1400165a8:	icebp  
   1400165a9:	xlat   BYTE PTR ds:[rbx]
   1400165aa:	iret   
   1400165ab:	retf   0x1d46
   1400165ae:	outs   dx,BYTE PTR ds:[rsi]
   1400165af:	icebp  
   1400165b0:	cmc    
   1400165b1:	jmp    QWORD PTR [rax-0x557dcafb]
   1400165b7:	(bad)
   1400165ba:	xor    dh,BYTE PTR [rax]
   1400165bc:	push   rdi
   1400165bd:	out    dx,al
   1400165be:	add    eax,0xdf647e11
   1400165c3:	pop    rdi
   1400165c4:	movabs al,ds:0xbdacf040dd92f07a
   1400165cd:	mov    BYTE PTR [rdx],ah
   1400165cf:	jmp    0x140016620
   1400165d1:	xchg   ebx,eax
   1400165d2:	jle    0x140016578
   1400165d4:	rol    bh,1
   1400165d6:	pop    rsp
   1400165d7:	or     eax,0xbd2a23f1
   1400165dc:	jle    0x1400165a9
   1400165de:	(bad)  
   1400165df:	jo     0x140016618
   1400165e1:	and    ah,BYTE PTR [rcx+riz*8+0x34]
   1400165e5:	(bad)  
   1400165e6:	(bad)  
   1400165e7:	clc    
   1400165e8:	or     edx,DWORD PTR [rsi+rdx*8]
   1400165eb:	(bad)  
   1400165ec:	(bad)  
   1400165ed:	repz sbb eax,0x5067f809
   1400165f3:	or     eax,0x5126bc59
   1400165f8:	add    cl,BYTE PTR [rsi-0x17]
   1400165fb:	mov    edx,0xd9a8e05b
   140016600:	out    0x8a,eax
   140016602:	xor    edi,edx
   140016604:	xor    cl,al
   140016606:	xor    bh,BYTE PTR [rax]
   140016608:	test   eax,0x8ddc339f
   14001660d:	xchg   edx,eax
   14001660e:	push   rsi
   14001660f:	ins    BYTE PTR es:[rdi],dx
   140016610:	test   BYTE PTR [rdx-0x4a6ec2e8],bl
   140016616:	cmp    DWORD PTR [rbx],ecx
   140016618:	or     DWORD PTR [rdi+0xd5ad0c3],ecx
   14001661e:	adc    edx,edi
   140016620:	call   0x149e5681e
   140016625:	rex.B leave 
   140016627:	cvtps2pi mm2,QWORD PTR [rdi]
   14001662a:	xchg   ecx,eax
   14001662b:	xor    eax,DWORD PTR [rsi]
   14001662d:	ins    DWORD PTR es:[rdi],dx
   14001662e:	out    0xb9,al
   140016630:	ins    DWORD PTR es:[rdi],dx
   140016631:	xchg   edi,eax
   140016632:	jns    0x140016691
   140016634:	pop    rsp
   140016635:	push   rbx
   140016636:	jle    0x1400165d7
   140016638:	scas   eax,DWORD PTR es:[rdi]
   140016639:	(bad)  
   14001663a:	neg    dl
   14001663c:	fist   WORD PTR [rdx-0x18]
   14001663f:	rex.RB fidivr DWORD PTR [r8-0x7cc178f9]
   140016646:	out    dx,eax
   140016647:	movabs eax,ds:0xe5b84bcbbfce8840
   140016650:	push   rbp
   140016651:	rex.WRX (bad) 
   140016653:	(bad)  
   140016654:	push   rbp
   140016655:	cli    
   140016656:	xlat   BYTE PTR ds:[rbx]
   140016657:	sar    DWORD PTR [rdi-0x4216462],1
   14001665d:	ret    
   14001665e:	out    dx,eax
   14001665f:	sbb    ebx,edx
   140016661:	jg     0x14001662c
   140016663:	mov    edi,0xab2e10a1
   140016668:	cmp    BYTE PTR [rcx],ah
   14001666a:	xor    al,dl
   14001666c:	and    eax,0x240f29d9
   140016671:	(bad)  
   140016672:	lods   al,BYTE PTR ds:[rsi]
   140016673:	(bad)  
   140016674:	and    esi,DWORD PTR [rdx-0xe]
   140016677:	or     al,0x2a
   140016679:	or     DWORD PTR [rip+0x40236826],eax        # 0x18024cea5
   14001667f:	and    DWORD PTR [rsi],edx
   140016681:	cmp    DWORD PTR [rdi],edi
   140016683:	jbe    0x14001660b
   140016685:	mov    al,0xff
   140016687:	data16 std 
   140016689:	sub    DWORD PTR [rcx-0x1dca75e2],ebp
   14001668f:	(bad)  
   140016690:	sbb    bh,BYTE PTR [rdx-0x38fc8071]
   140016696:	(bad)  
   140016697:	(bad)  
   140016698:	xor    BYTE PTR [rsi-0x1b],bh
   14001669b:	ins    DWORD PTR es:[rdi],dx
   14001669c:	fdiv   DWORD PTR [rcx-0x20]
   14001669f:	rex.WX or al,0x56
   1400166a2:	add    ebx,ebp
   1400166a4:	fld    QWORD PTR [rbp+rax*4-0x165bba1b]
   1400166ab:	xor    DWORD PTR [rsp+rcx*8-0x3b3738e3],ecx
   1400166b2:	sub    BYTE PTR [rdx-0x59],bh
   1400166b5:	rex.WRX and BYTE PTR [rsi],r13b
   1400166b8:	(bad)  
   1400166b9:	and    BYTE PTR [rsi],ch
   1400166bb:	iret   
   1400166bc:	add    DWORD PTR [rbx],ebx
   1400166be:	sub    esp,DWORD PTR [rax-0x4025e4c]
   1400166c4:	lods   al,BYTE PTR ds:[rsi]
   1400166c5:	js     0x14001668e
   1400166c7:	rex.X jge 0x14001670b
   1400166ca:	jrcxz  0x1400166c8
   1400166cc:	lods   al,BYTE PTR ds:[rsi]
   1400166cd:	cmp    eax,0xf58ad0fd
   1400166d2:	cmp    ebp,esp
   1400166d4:	(bad)  
   1400166d5:	in     eax,dx
   1400166d6:	scas   al,BYTE PTR es:[rdi]
   1400166d7:	xchg   esi,eax
   1400166d8:	pop    rbx
   1400166d9:	es mov edi,0xce6f4b7
   1400166df:	in     eax,0x9
   1400166e1:	enter  0xfff1,0x42
   1400166e5:	clc    
   1400166e6:	movabs ds:0x908c89904209bf09,eax
   1400166ef:	jge    0x140016769
   1400166f1:	rex.WXB (bad) 
   1400166f3:	or     dl,BYTE PTR [rcx+0x3d84dd5a]
   1400166f9:	(bad)  
   1400166fa:	mov    bh,0xa5
   1400166fc:	(bad)  
   1400166fd:	addr32 in eax,0xcc
   140016700:	(bad)  
   140016701:	and    edx,DWORD PTR [rbp+rbp*2+0x65]
   140016705:	push   rbp
   140016706:	(bad)  
   140016707:	mov    ch,0xf8
   140016709:	jp     0x1400166a8
   14001670b:	push   rbp
   14001670c:	mov    WORD PTR [rdx],ds
   14001670e:	(bad)  
   14001670f:	push   rsp
   140016710:	push   rdi
   140016711:	and    DWORD PTR [rsi],eax
   140016713:	sub    DWORD PTR [rbx],esp
   140016715:	ss (bad) 
   140016717:	movabs al,ds:0xfa419fe6504008a
   140016720:	adc    DWORD PTR [rax+rdi*4-0x5f],0x12098aca
   140016728:	adc    eax,0xa1de3a88
   14001672d:	sub    DWORD PTR [rax],edx
   14001672f:	(bad)  
   140016730:	call   0xece4baae
   140016735:	and    eax,0x47b5bd5
   14001673a:	xchg   esi,eax
   14001673b:	fwait
   14001673c:	adc    eax,0xc2a4a500
   140016741:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016742:	xchg   edx,eax
   140016743:	stos   BYTE PTR es:[rdi],al
   140016744:	stc    
   140016745:	(bad)  
   140016746:	call   0x14316a970
   14001674b:	push   si
   14001674d:	(bad)  
   14001674e:	xor    BYTE PTR [rbx-0x52b09968],bh
   140016754:	ror    cl,1
   140016756:	mov    cl,0x45
   140016758:	cmp    bh,dl
   14001675a:	in     al,dx
   14001675b:	pop    rsp
   14001675c:	ja     0x1400167ca
   14001675e:	jl     0x140016799
   140016760:	rex.WRB lods al,BYTE PTR ds:[rsi]
   140016762:	xor    eax,0x1a36561
   140016767:	div    DWORD PTR [rdx]
   140016769:	ja     0x1400167b1
   14001676b:	push   0xc
   14001676d:	pop    rbp
   14001676e:	fisttp QWORD PTR [rdi-0x69]
   140016771:	sbb    al,0xee
   140016773:	rcl    BYTE PTR [rbp-0xd08bc05],1
   140016779:	fst    QWORD PTR [rcx-0x2759130a]
   14001677f:	loope  0x140016787
   140016781:	pop    rax
   140016782:	fldenv [rsp+rbp*2+0x36]
   140016786:	mov    WORD PTR [rsi+0x17705d61],fs
   14001678c:	mov    dl,0xf8
   14001678e:	lods   eax,DWORD PTR ds:[rsi]
   14001678f:	es or  eax,0xf968625
   140016795:	rex.WXB adc bl,BYTE PTR [r10+0x62]
   140016799:	rex.X
   14001679a:	rex.WX push rdx
   14001679c:	(bad)  
   14001679d:	outs   dx,BYTE PTR ds:[rsi]
   14001679e:	xlat   BYTE PTR ds:[rbx]
   14001679f:	popf   
   1400167a0:	push   rdi
   1400167a1:	adc    DWORD PTR [rcx+rsi*4+0x1834f5b7],0xffffff82
   1400167a9:	jle    0x1400167bd
   1400167ab:	add    ecx,DWORD PTR [rbp-0x3e]
   1400167ae:	jmp    0x13fe32b2e
   1400167b3:	out    0x3f,al
   1400167b5:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400167b7:	movsxd edx,DWORD PTR [rax+0x5d7df6]
   1400167bd:	lods   al,BYTE PTR ds:[rsi]
   1400167be:	xor    eax,0xfedce73b
   1400167c3:	jbe    0x1400167da
   1400167c5:	sub    BYTE PTR [rbp-0x5e],0x8
   1400167c9:	ins    BYTE PTR es:[rdi],dx
   1400167ca:	fsub   DWORD PTR [rbp+0x4a14617]
   1400167d0:	cs mov ebx,0xaf2bb6f9
   1400167d6:	mov    eax,0xd77fe6e1
   1400167db:	rcr    ebx,cl
   1400167dd:	sti    
   1400167de:	(bad)  
   1400167df:	adc    DWORD PTR cs:[rdx+0x1c00fa35],eax
   1400167e6:	loop   0x14001681b
   1400167e8:	and    al,0x4f
   1400167ea:	mov    esi,0x8daeeb72
   1400167ef:	(bad)  
   1400167f0:	adc    dl,BYTE PTR [rax-0x5f]
   1400167f3:	add    DWORD PTR [rbx],edi
   1400167f5:	icebp  
   1400167f6:	xchg   edi,eax
   1400167f7:	or     edi,DWORD PTR [rax+0x24]
   1400167fa:	icebp  
   1400167fb:	test   al,0x91
   1400167fd:	mov    esi,0x98f50a01
   140016802:	adc    ebp,DWORD PTR [rax-0x6233df16]
   140016808:	(bad)  
   140016809:	retf   0x5fc3
   14001680c:	(bad)  
   14001680d:	mov    bl,0xf5
   14001680f:	and    dh,ah
   140016811:	scas   eax,DWORD PTR es:[rdi]
   140016812:	jge    0x140016837
   140016814:	jbe    0x1400167a5
   140016816:	in     al,dx
   140016817:	rex.XB pop r15
   140016819:	adc    eax,0xc5d1bab0
   14001681e:	cld    
   14001681f:	retf   0x3022
   140016822:	xor    ecx,DWORD PTR [rsi+0x3147d39d]
   140016828:	xor    dh,BYTE PTR [rbx+0x2]
   14001682b:	jge    0x1400167c0
   14001682d:	(bad)  
   14001682e:	push   rax
   14001682f:	(bad)  
   140016830:	rex.WR retf 
   140016832:	and    bl,BYTE PTR [rsi-0x4b5f3415]
   140016838:	add    eax,0xf920aa0d
   14001683e:	hlt    
   14001683f:	xor    eax,0x26534d27
   140016844:	pop    rcx
   140016845:	mov    ebx,0x543df48f
   14001684a:	lock test eax,0x4ffafd80
   140016850:	push   rsp
   140016851:	add    eax,0xa5f27d26
   140016856:	cdq    
   140016857:	fs (bad) 
   140016859:	in     al,0xa
   14001685b:	mov    bpl,0xfc
   14001685e:	xchg   ecx,eax
   14001685f:	add    dl,BYTE PTR [rax-0x3f429e28]
   140016865:	jae    0x1400168ac
   140016867:	pcmpgtd mm7,mm1
   14001686a:	mov    esp,cs
   14001686c:	and    esi,ebx
   14001686e:	iret   
   14001686f:	retf   
   140016870:	ins    BYTE PTR es:[rdi],dx
   140016871:	(bad)  
   140016872:	sub    edi,0xffffff9a
   140016875:	test   BYTE PTR [rbx+rsi*4],dl
   140016878:	movabs ds:0xad004f72f284a2a8,al
   140016881:	out    0x8b,al
   140016883:	mov    edx,0xc2b68016
   140016888:	scas   al,BYTE PTR es:[rdi]
   140016889:	(bad)  
   14001688a:	push   rsi
   14001688b:	(bad)  
   14001688c:	stos   BYTE PTR es:[rdi],al
   14001688d:	ret    0x43a8
   140016890:	test   al,0x82
   140016893:	scas   al,BYTE PTR es:[rdi]
   140016894:	sbb    DWORD PTR [rax-0x16],eax
   140016897:	sub    dl,BYTE PTR [rax+0x60c5ff57]
   14001689d:	jo     0x14001687e
   14001689f:	test   BYTE PTR [rdi+0x43f045],dl
   1400168a5:	and    bh,BYTE PTR [rbx+0x31]
   1400168a8:	or     eax,0x982cb413
   1400168ad:	or     al,0x6a
   1400168af:	enter  0xab98,0x2
   1400168b3:	loopne 0x1400168d7
   1400168b5:	mov    WORD PTR [rcx+0x73],gs
   1400168b8:	ror    DWORD PTR [rax],0x37
   1400168bb:	jns    0x14001692b
   1400168bd:	lock mov edx,0xb03296fd
   1400168c3:	leave  
   1400168c4:	xchg   ebx,eax
   1400168c5:	pop    rax
   1400168c6:	(bad)  
   1400168c7:	add    cl,BYTE PTR [rcx+0x31]
   1400168ca:	out    dx,eax
   1400168cb:	nop
   1400168cc:	int3   
   1400168cd:	xchg   edi,eax
   1400168ce:	xchg   DWORD PTR [rsi-0x59],ecx
   1400168d1:	jrcxz  0x140016932
   1400168d3:	cmp    edi,DWORD PTR [rsi-0x646c7207]
   1400168d9:	std    
   1400168da:	idiv   edi
   1400168dc:	xchg   edi,eax
   1400168dd:	movabs ds:0x8650c7abc5cf83d5,eax
   1400168e6:	fidiv  DWORD PTR [rsi-0x3f95f2ee]
   1400168ec:	jbe    0x14001695d
   1400168ee:	pushf  
   1400168ef:	sbb    bh,BYTE PTR [rsi-0x5]
   1400168f2:	shr    ah,0x6b
   1400168f5:	scas   eax,DWORD PTR es:[rdi]
   1400168f6:	movabs ds:0xeddeff103f5e3bc5,al
   1400168ff:	std    
   140016900:	loope  0x1400168b7
   140016902:	jne    0x140016906
   140016904:	push   rsi
   140016905:	(bad)  
   140016906:	test   BYTE PTR [rbp+0x4e0028ae],cl
   14001690c:	mov    WORD PTR [rsi+0x57],gs
   14001690f:	sbb    eax,0x813994cf
   140016914:	test   BYTE PTR [rsp+rdx*8-0x1a69dbbc],al
   14001691b:	fstp   QWORD PTR [rdx]
   14001691d:	mov    ebp,0x93904960
   140016922:	sbb    ecx,DWORD PTR [rax]
   140016924:	or     eax,esp
   140016926:	and    BYTE PTR [rax-0x29],cl
   140016929:	mov    bl,ch
   14001692b:	adc    al,BYTE PTR [rcx]
   14001692d:	rex.WRB ret 
   14001692f:	cmp    BYTE PTR [rbp-0x43],cl
   140016932:	push   rsi
   140016934:	(bad)  
   140016935:	jo     0x140016922
   140016937:	out    dx,eax
   140016938:	rex.X adc al,0x80
   14001693b:	lods   al,BYTE PTR ds:[rsi]
   14001693c:	and    eax,0x518af8
   140016941:	rex test eax,0x9590804
   140016947:	cwde   
   140016948:	and    ch,al
   14001694a:	jmp    0x1bfd34168
   14001694f:	retf   
   140016950:	fucomp st(7)
   140016952:	dec    ecx
   140016954:	(bad)  
   140016955:	movabs eax,ds:0x599dd876891f3f5d
   14001695e:	and    eax,0xa3a02461
   140016963:	mov    esi,0x3774ab18
   140016968:	add    BYTE PTR [rdx],ch
   14001696a:	outs   dx,BYTE PTR ds:[rsi]
   14001696b:	(bad)  
   14001696c:	stos   DWORD PTR es:[rdi],eax
   14001696d:	repz cwde 
   14001696f:	cmc    
   140016970:	iret   
   140016971:	scas   al,BYTE PTR es:[rdi]
   140016972:	jle    0x140016946
   140016974:	rcr    BYTE PTR [rcx+rdi*4],1
   140016977:	push   rdx
   140016978:	movabs al,ds:0x8fb3d4c1bfb18110
   140016981:	(bad)  
   140016982:	je     0x140016968
   140016984:	jb     0x1400169fa
   140016986:	scas   eax,DWORD PTR es:[rdi]
   140016987:	mov    esp,0x7707bb05
   14001698c:	movabs ds:0x5a5c58366f2c626,al
   140016995:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016996:	mov    ecx,0x1e9e1813
   14001699b:	ret    
   14001699c:	lock hlt 
   14001699e:	or     esp,esi
   1400169a0:	int    0x8c
   1400169a2:	and    ecx,esi
   1400169a4:	rex.WRXB movabs rax,ds:0x3ad2065b58479e5a
   1400169ae:	sub    cl,bl
   1400169b0:	loope  0x1400169d9
   1400169b2:	in     eax,dx
   1400169b3:	loop   0x140016980
   1400169b5:	sbb    cl,BYTE PTR [rdi-0x19]
   1400169b8:	rex.RX jnp 0x1400169b3
   1400169bb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400169bc:	mov    bl,0x8
   1400169be:	mov    edi,0x4607612
   1400169c3:	rex.WRB
   1400169c4:	rex.WR loop 0x14001698f
   1400169c7:	pop    rsi
   1400169c8:	out    0xef,eax
   1400169ca:	mov    ecx,0x19c8462f
   1400169cf:	(bad)  
   1400169d0:	sub    BYTE PTR [rax+rcx*8],0xa2
   1400169d4:	or     BYTE PTR [rcx+rbx*8+0x0],al
   1400169d8:	rex.RX (bad) 
   1400169da:	mov    eax,esi
   1400169dc:	(bad)  
   1400169dd:	xor    al,0xde
   1400169df:	(bad)  
   1400169e0:	je     0x1400169af
   1400169e2:	(bad)  
   1400169e3:	xchg   ebp,eax
   1400169e4:	sub    DWORD PTR [rdi],edx
   1400169e6:	(bad)  
   1400169e7:	and    BYTE PTR [rcx-0x1bea3d43],ch
   1400169ed:	cmp    al,0x0
   1400169ef:	imul   ecx
   1400169f1:	mov    DWORD PTR [rsp+rdi*2-0x1a021428],esp
   1400169f8:	pop    rdx
   1400169f9:	push   0x47
   1400169fb:	or     esp,DWORD PTR [rdx-0x27ad5c4]
   140016a01:	xchg   ebp,eax
   140016a02:	xchg   BYTE PTR [rbp*1+0x1cc6384d],cl
   140016a09:	(bad)  
   140016a0a:	sbb    BYTE PTR [rsi+0x29b47493],0x0
   140016a11:	mov    dh,0xa6
   140016a13:	pop    rcx
   140016a14:	mov    ecx,0x32ab00be
   140016a19:	add    BYTE PTR [rsi+0x2df0452c],0xe7
   140016a20:	(bad)  
   140016a21:	sbb    DWORD PTR [rcx],ecx
   140016a23:	push   0xffffffffca76488e
   140016a28:	xor    eax,DWORD PTR [rdi]
   140016a2a:	(bad)  
   140016a2b:	or     al,al
   140016a2d:	ss xchg edi,eax
   140016a2f:	mov    ah,BYTE PTR [rsi+rdi*8]
   140016a32:	jle    0x140016a5b
   140016a34:	xor    dh,dl
   140016a36:	mov    edx,0xd1e5f9bc
   140016a3b:	hlt    
   140016a3c:	rol    bh,0x9f
   140016a3f:	movabs eax,ds:0x5edfabefb6b63f8f
   140016a48:	fidivr DWORD PTR [rbx+0xa]
   140016a4b:	jns    0x140016a0a
   140016a4d:	or     al,0xa3
   140016a4f:	cld    
   140016a50:	push   rdx
   140016a51:	stc    
   140016a52:	jae    0x140016a31
   140016a54:	mov    dh,0x1a
   140016a56:	scas   eax,DWORD PTR es:[rdi]
   140016a57:	or     BYTE PTR [rax],ah
   140016a59:	(bad)  
   140016a5a:	(bad)  
   140016a5b:	in     al,dx
   140016a5c:	shr    BYTE PTR [rbx+0x4e60d2],1
   140016a62:	add    BYTE PTR [rax],ah
   140016a64:	add    BYTE PTR [rcx+0x44],cl
   140016a67:	push   r12
   140016a69:	or     eax,0x7fb6ec69
   140016a6e:	xor    BYTE PTR [rax-0xa485e07],bh
   140016a74:	loope  0x140016a44
   140016a76:	and    DWORD PTR [rax+0x60],esp
   140016a79:	cmp    DWORD PTR [rip+0x6a40366c],esp        # 0x1aa41a0eb
   140016a7f:	cmp    bh,dl
   140016a81:	or     ah,BYTE PTR [rbx+riz*8]
   140016a84:	scas   al,BYTE PTR es:[rdi]
   140016a85:	adc    bl,BYTE PTR [rax-0x6fb65fd]
   140016a8b:	rcr    ah,1
   140016a8d:	add    eax,0x2de7b93d
   140016a92:	mov    al,0xe4
   140016a94:	mov    esp,0x111b278
   140016a99:	ffree  st(4)
   140016a9b:	fadd   DWORD PTR [rax-0x8]
   140016a9e:	(bad)  
   140016a9f:	inc    DWORD PTR [rbx+rbx*1+0xc31ec7e]
   140016aa6:	(bad)  
   140016aa7:	rex.XB sub sil,BYTE PTR [r11+0x1b]
   140016aab:	cmp    al,0xf8
   140016aad:	jnp    0x140016ab8
   140016aaf:	out    0xd9,eax
   140016ab1:	mov    esi,0x7000147f
   140016ab6:	es xchg edi,eax
   140016ab8:	(bad)  
   140016ab9:	sbb    ebx,DWORD PTR [rdx]
   140016abb:	mov    eax,0xb8efade1
   140016ac0:	ins    DWORD PTR es:[rdi],dx
   140016ac1:	fbld   TBYTE PTR [rbp+0x57]
   140016ac4:	jmp    FWORD PTR [rdx-0x54]
   140016ac7:	jmp    0x140016ae4
   140016ac9:	cdq    
   140016aca:	and    eax,0x486a3ff7
   140016acf:	xor    BYTE PTR [rax+0x26e81b9d],al
   140016ad5:	or     DWORD PTR [rdi+0xe8a3711],ebp
   140016adb:	hlt    
   140016adc:	mov    DWORD PTR [rbx+0x45f2581],esp
   140016ae2:	xor    al,0xa
   140016ae4:	stos   DWORD PTR es:[rdi],eax
   140016ae5:	add    BYTE PTR [rdx-0x7e4447cb],cl
   140016aeb:	out    0xc9,al
   140016aed:	sti    
   140016aee:	jno    0x140016b6c
   140016af0:	jb     0x140016af4
   140016af2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016af3:	(bad)  
   140016af4:	mov    edi,0xae073d19
   140016af9:	ret    0xbeae
   140016afc:	pop    rsi
   140016afd:	add    al,0x30
   140016aff:	xchg   esi,eax
   140016b00:	ss mov edx,0x45e5c58
   140016b06:	data16 rex.WRXB (bad) 
   140016b09:	jo     0x140016b01
   140016b0b:	cmp    BYTE PTR [rsi-0x5a],al
   140016b0e:	(bad)  
   140016b0f:	movabs ds:0xac21cdf966a4f26f,eax
   140016b18:	sub    eax,0x8eb3423
   140016b1d:	fidivr WORD PTR [rax-0x37c0d2bd]
   140016b23:	pop    rbx
   140016b24:	jns    0x140016b6b
   140016b26:	pop    rbp
   140016b27:	mov    esp,0x185402b3
   140016b2c:	push   rax
   140016b2d:	mov    ah,0xe6
   140016b2f:	(bad)  
   140016b30:	in     al,dx
   140016b31:	jns    0x140016b29
   140016b33:	stc    
   140016b34:	and    eax,0x3f2c56e5
   140016b39:	jns    0x140016b09
   140016b3b:	mov    eax,0xbfca7e58
   140016b40:	and    eax,DWORD PTR [rcx+0x43a05688]
   140016b46:	(bad)  
   140016b47:	jmp    FWORD PTR [rdi+0x9]
   140016b4a:	xchg   BYTE PTR ds:[rdx],ah
   140016b4d:	and    ah,BYTE PTR [rdx-0x59bb1d79]
   140016b53:	xor    dh,ah
   140016b55:	mov    bh,0x42
   140016b57:	(bad)  
   140016b58:	sbb    BYTE PTR [rbx+0x7601f96f],dh
   140016b5e:	or     al,0xd6
   140016b60:	or     BYTE PTR [rbp-0xbd940f7],al
   140016b66:	pop    rax
   140016b67:	(bad)
   140016b6a:	adc    edi,esi
   140016b6c:	sbb    al,0xfa
   140016b6e:	adc    esp,DWORD PTR [rdx+0x54549490]
   140016b74:	rex.RB adc al,0x5
   140016b77:	(bad)  
   140016b78:	(bad)  
   140016b7a:	movabs eax,ds:0xf1fa801d68443c96
   140016b83:	push   0xfffffffffffffff1
   140016b85:	lods   eax,DWORD PTR ds:[rsi]
   140016b86:	hlt    
   140016b87:	(bad)  
   140016b88:	js     0x140016b8e
   140016b8a:	(bad)  
   140016b8b:	rex.XB fidivr DWORD PTR [rip+0x39805c95]        # 0x17981c827
   140016b92:	je     0x140016b16
   140016b94:	pop    rax
   140016b95:	mov    esp,0xadb5248f
   140016b9a:	(bad)  
   140016b9b:	ins    DWORD PTR es:[rdi],dx
   140016b9c:	fwait
   140016b9d:	in     eax,dx
   140016b9e:	mov    esp,ss
   140016ba0:	adc    BYTE PTR [rsi-0x460fd82],bh
   140016ba6:	stos   DWORD PTR es:[rdi],eax
   140016ba7:	rcr    DWORD PTR [rsi-0x2e6201c1],1
   140016bad:	stos   DWORD PTR es:[rdi],eax
   140016bae:	mov    esi,0x5d9eb102
   140016bb3:	std    
   140016bb4:	cmp    ebx,DWORD PTR [rbx-0x5fb56810]
   140016bba:	xor    al,0x5c
   140016bbc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016bbd:	adc    dh,BYTE PTR [rax]
   140016bbf:	add    edx,DWORD PTR [rsi-0x41]
   140016bc2:	xor    eax,0xf86f13d
   140016bc7:	or     eax,0xbbc4fd2c
   140016bcc:	cli    
   140016bcd:	jo     0x140016c06
   140016bcf:	adc    dl,bl
   140016bd1:	push   0xffffffffffffffc3
   140016bd3:	mov    al,0x9c
   140016bd5:	xor    esp,DWORD PTR [rsi-0x55]
   140016bd8:	and    eax,0x62607092
   140016bdd:	rex.X push rdx
   140016bdf:	add    al,cl
   140016be1:	rex.WRXB
   140016be2:	rex.RX test BYTE PTR [rsi+0x14254f33],r8b
   140016be9:	rex.X adc sil,BYTE PTR [rdi]
   140016bec:	rex rol DWORD PTR [rax-0x69],1
   140016bf0:	mov    cl,0xf1
   140016bf2:	or     BYTE PTR [rip+0xfffffffff897e07d],cl        # 0x138994c75
   140016bf8:	xor    eax,0xe594875f
   140016bfd:	rex.WXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140016bff:	loopne 0x140016c7a
   140016c01:	push   rax
   140016c02:	ror    bl,0x4f
   140016c05:	add    bl,BYTE PTR [rsi-0x74e18495]
   140016c0b:	xchg   esp,eax
   140016c0c:	rex.WR (bad) 
   140016c0e:	jnp    0x140016bfe
   140016c10:	(bad)  
   140016c11:	shr    ah,cl
   140016c13:	hlt    
   140016c14:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016c15:	xchg   dh,dh
   140016c17:	(bad)  
   140016c18:	call   0x117a009ac
   140016c1d:	push   rbp
   140016c1e:	add    al,0xaa
   140016c20:	pop    rax
   140016c21:	enter  0x1334,0x7e
   140016c25:	stos   DWORD PTR es:[rdi],eax
   140016c26:	sub    DWORD PTR [rax-0x34db3f98],ecx
   140016c2c:	push   rdi
   140016c2d:	pop    rcx
   140016c2e:	imul   esp,DWORD PTR [rbp-0x2ebd8569],0xadd0a842
   140016c38:	sti    
   140016c39:	ror    bl,0xd3
   140016c3c:	pop    rax
   140016c3d:	jl     0x140016c3b
   140016c3f:	fwait
   140016c40:	cmp    BYTE PTR [rdx-0x4a233a2a],dh
   140016c46:	ja     0x140016ca8
   140016c48:	clc    
   140016c49:	shl    ch,0x18
   140016c4c:	jmp    0xf189ed3e
   140016c51:	mov    ah,0xb1
   140016c53:	mov    DWORD PTR [rbp-0x19ffa3b],eax
   140016c59:	and    al,0x86
   140016c5b:	mov    fs,WORD PTR [ebx+0x68]
   140016c5f:	mul    BYTE PTR [rdx+rdi*8]
   140016c62:	data16 rex.WRX movabs rax,ds:0xbeb5405e5c419c5a
   140016c6d:	mov    eax,cs
   140016c6f:	fwait
   140016c70:	mov    dl,bl
   140016c72:	mov    dl,0xab
   140016c74:	push   rsi
   140016c75:	jg     0x140016cb6
   140016c77:	and    ah,ah
   140016c79:	cs mov esi,0x2a43d856
   140016c7f:	cld    
   140016c80:	jo     0x140016cd0
   140016c82:	or     ebx,DWORD PTR [rsi+0x21]
   140016c85:	push   rdi
   140016c86:	adc    BYTE PTR [rsi-0x54],bh
   140016c89:	test   BYTE PTR [rdi+0x2241ec2f],bl
   140016c8f:	nop
   140016c90:	xchg   ecx,eax
   140016c91:	sub    al,0xd1
   140016c93:	rex.RXB adc DWORD PTR [r8-0x1d14a03e],r8d
   140016c9a:	jrcxz  0x140016c35
   140016c9c:	jle    0x140016d02
   140016c9e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016c9f:	pop    rsi
   140016ca0:	(bad)  
   140016ca1:	rol    DWORD PTR [rbx-0x72],0x12
   140016ca5:	pop    rax
   140016ca6:	(bad)  
   140016ca7:	jge    0x140016cc9
   140016ca9:	(bad)  
   140016caa:	rex.WXB jne 0x140016c88
   140016cad:	out    0x4a,eax
   140016caf:	(bad)  
   140016cb0:	rex.RX cmc 
   140016cb2:	shr    DWORD PTR [rip+0x28542fe3],cl        # 0x168559c9b
   140016cb8:	repnz adc dl,BYTE PTR [rdx+rdi*8]
   140016cbc:	xchg   DWORD PTR [rdx+rdx*2],ebx
   140016cbf:	or     al,0xda
   140016cc1:	and    al,0xc4
   140016cc3:	test   bl,bl
   140016cc5:	xchg   edx,eax
   140016cc6:	lea    eax,[rdx+0x2c]
   140016cc9:	and    BYTE PTR [rdi],bh
   140016ccb:	cdq    
   140016ccc:	pop    rbx
   140016ccd:	xchg   edx,eax
   140016cce:	loope  0x140016c8b
   140016cd0:	scas   eax,DWORD PTR es:[rdi]
   140016cd1:	(bad)  
   140016cd2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140016cd3:	or     al,cl
   140016cd5:	rex.XB jnp 0x140016c9e
   140016cd8:	adc    DWORD PTR [rax],ebx
   140016cda:	push   rsp
   140016cdb:	jno    0x140016d1f
   140016cdd:	shr    dl,1
   140016cdf:	in     al,dx
   140016ce0:	loope  0x140016d08
   140016ce2:	mov    WORD PTR [rcx+rdi*1-0x26],ss
   140016ce6:	cs rex.R mov cx,0xea91
   140016cec:	or     DWORD PTR [rsi-0xa067060],eax
   140016cf2:	clc    
   140016cf3:	sar    BYTE PTR [rdi+0x7c],1
   140016cf6:	mov    eax,0xfaff6bf3
   140016cfb:	loope  0x140016ca8
   140016cfd:	jg     0x140016cfa
   140016cff:	(bad)  
   140016d00:	mov    ecx,0x4434fdd
   140016d05:	addr32 or eax,0xcfed4162
   140016d0b:	adc    al,0x82
   140016d0d:	sub    DWORD PTR [rbx-0x40290a0e],eax
   140016d13:	je     0x140016cbb
   140016d15:	out    dx,eax
   140016d16:	(bad)  
   140016d17:	rcr    DWORD PTR [rsi+0x2f75f713],1
   140016d1d:	stc    
   140016d1e:	(bad)  
   140016d1f:	(bad)  
   140016d20:	out    0xdc,al
   140016d22:	and    eax,DWORD PTR [rdi+0x2ee97363]
   140016d28:	ret    0xd641
   140016d2b:	add    BYTE PTR [rdi+0xe],bh
   140016d2e:	or     ecx,edx
   140016d30:	(bad)  
   140016d31:	test   al,0xa2
   140016d33:	iret   
   140016d34:	jge    0x140016d5c
   140016d36:	in     al,0xdf
   140016d38:	fcomp  QWORD PTR [rdi+rsi*4]
   140016d3b:	movabs al,ds:0xdcfd8ebcc8294d2d
   140016d44:	lods   al,BYTE PTR ds:[rsi]
   140016d45:	fisttp WORD PTR [rbx+0xbc39f43]
   140016d4b:	sub    BYTE PTR [rax],dl
   140016d4d:	cli    
   140016d4e:	(bad)  
   140016d4f:	push   rdx
   140016d50:	add    BYTE PTR [rsi+0x2819cf6d],dh
   140016d56:	jge    0x140016d07
   140016d58:	mov    ah,0xb2
   140016d5a:	xor    BYTE PTR [rdi-0x3c2709c2],dh
   140016d60:	pop    rdi
   140016d61:	fnstsw WORD PTR [rbp-0x37]
   140016d64:	loope  0x140016d37
   140016d66:	sbb    eax,0x8baf7dbd
   140016d6b:	rex.R or esi,0xfffffff8
   140016d6f:	mov    bl,0x64
   140016d71:	add    DWORD PTR [rsi+0x6e],eax
   140016d74:	(bad)  
   140016d75:	retf   0xe08b
   140016d78:	fld    DWORD PTR [rbx]
   140016d7a:	repz (bad) 
   140016d7c:	mov    cr6,rsp
   140016d7f:	popf   
   140016d80:	pop    rsi
   140016d81:	je     0x140016dd6
   140016d83:	(bad)  
   140016d84:	int    0x73
   140016d86:	ffreep st(1)
   140016d88:	hlt    
   140016d89:	jae    0x140016d1a
   140016d8b:	loop   0x140016d75
   140016d8d:	(bad)  
   140016d8e:	ret    
   140016d8f:	rex.W push rdi
   140016d91:	fiadd  WORD PTR [rdx+0x6376bbbd]
   140016d97:	movabs al,ds:0xd2c4db5c58c4e00e
   140016da0:	sar    BYTE PTR [rax+rdi*2],cl
   140016da3:	out    dx,al
   140016da4:	and    al,0x46
   140016da6:	data16 mov fs,WORD PTR [rbx+0x68]
   140016daa:	data16 sbb al,0x7d
   140016dad:	mov    bl,0xe3
   140016daf:	test   al,0x17
   140016db1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016db2:	push   rcx
   140016db3:	lods   eax,DWORD PTR ds:[rsi]
   140016db4:	sub    al,0x20
   140016db6:	scas   al,BYTE PTR es:[rdi]
   140016db7:	(bad)  
   140016db8:	and    esp,DWORD PTR [rsi-0x6e1af68b]
   140016dbe:	and    al,0x1f
   140016dc0:	(bad)  
   140016dc1:	lods   al,BYTE PTR ds:[rsi]
   140016dc2:	sbb    BYTE PTR [rcx-0x6f],r14b
   140016dc6:	loopne 0x140016d6b
   140016dc8:	or     ah,BYTE PTR [rax-0x57ad76de]
   140016dce:	jmp    0x140016e2a
   140016dd0:	(bad)  
   140016dd1:	neg    BYTE PTR [rax+0x57e17745]
   140016dd7:	pop    rsi
   140016dd8:	ret    0xe9eb
   140016ddb:	xchg   ecx,eax
   140016ddc:	test   DWORD PTR [rdi+0x38],ebx
   140016ddf:	add    BYTE PTR [rcx+0x5b7fe614],bl
   140016de5:	clc    
   140016de6:	iret   
   140016de7:	and    DWORD PTR [rbx+rsi*4-0x2207a611],edi
   140016dee:	out    0x77,eax
   140016df0:	clc    
   140016df1:	scas   eax,DWORD PTR es:[rdi]
   140016df2:	adc    eax,0x39fe647d
   140016df7:	adc    eax,0xc756fa79
   140016dfc:	(bad)  
   140016dfd:	fsub   st(1),st
   140016dff:	(bad)  
   140016e00:	sar    BYTE PTR [rax],1
   140016e02:	movabs gs:0x899801968aa1eed0,al
   140016e0c:	rex.W mov dl,sil
   140016e0f:	adc    edx,DWORD PTR [rax]
   140016e11:	scas   al,BYTE PTR es:[rdi]
   140016e12:	mov    WORD PTR [rsp+riz*8-0x3a3f46f4],ds
   140016e19:	jnp    0x140016e1e
   140016e1b:	and    bh,BYTE PTR [rax+0x32769360]
   140016e21:	push   0xfffffffffffffff9
   140016e23:	inc    esp
   140016e25:	fst    DWORD PTR [rip+0xe64220]        # 0x140e7b04b
   140016e2b:	in     al,dx
   140016e2c:	rex.RXB
   140016e2d:	rex.WRXB cmps BYTE PTR es:[rsi],BYTE PTR es:[rdi]
   140016e30:	cmp    al,0x4a
   140016e32:	retf   
   140016e33:	(bad)  
   140016e34:	out    dx,al
   140016e35:	pop    rsi
   140016e36:	xor    DWORD PTR [rax],0xfffffff3
   140016e39:	int3   
   140016e3a:	(bad)  
   140016e3b:	iret   
   140016e3c:	xchg   edi,edi
   140016e3e:	jmp    0x11b007d9a
   140016e43:	rex.RXB (bad) 
   140016e45:	out    dx,eax
   140016e46:	jnp    0x140016dfc
   140016e48:	loope  0x140016dfa
   140016e4a:	xchg   BYTE PTR [rsi+rdi*8-0x7331d93b],bh
   140016e51:	add    cl,BYTE PTR [rdx+0x24]
   140016e54:	push   rax
   140016e55:	(bad)  
   140016e56:	xchg   ebp,eax
   140016e57:	repz mov bl,0x29
   140016e5a:	(bad)  
   140016e5b:	(bad)  
   140016e5c:	jg     0x140016e31
   140016e5e:	add    BYTE PTR [rax+0x1e],ch
   140016e61:	rex.WXB jnp 0x140016df3
   140016e64:	jge    0x140016e0b
   140016e66:	cmp    esi,esp
   140016e68:	mov    DWORD PTR [rbx+0x8dcf2e3],ebx
   140016e6e:	jne    0x140016ecf
   140016e70:	rex.WRB loopne 0x140016e71
   140016e73:	lods   al,BYTE PTR ds:[rsi]
   140016e74:	add    BYTE PTR [rsp+rbp*4+0x9],al
   140016e78:	cmp    DWORD PTR [rdx-0x7ec9d9ab],ebx
   140016e7e:	(bad)  
   140016e7f:	mov    edx,0xdb2fb2b2
   140016e84:	div    DWORD PTR [rsi+0x6f]
   140016e87:	mov    BYTE PTR [rsi+rsi*8-0x705c17cd],r11b
   140016e8f:	(bad)  
   140016e90:	out    0xb2,eax
   140016e92:	pop    rdi
   140016e93:	sar    DWORD PTR [rcx+0x42],cl
   140016e96:	(bad)  
   140016e97:	fistp  WORD PTR [rdi+0x2e]
   140016e9a:	rcr    BYTE PTR [rcx+0x6104edb6],0xad
   140016ea1:	jg     0x140016ec0
   140016ea3:	add    BYTE PTR [rip+0xffffffffc6faddd7],bh        # 0x106fc4c80
   140016ea9:	imul   ebp,DWORD PTR [rdi],0x7f
   140016eac:	(bad)  
   140016ead:	imul   edi,edi,0x7d
   140016eb0:	fucomp st(1)
   140016eb2:	mov    ecx,0x1268c193
   140016eb7:	push   rax
   140016eb8:	xchg   ecx,eax
   140016eb9:	mov    al,0xf9
   140016ebb:	fiadd  WORD PTR [rip+0x62003948]        # 0x1a201a809
   140016ec1:	imul   ebp,DWORD PTR [rdx+0x6c2a19b4],0xd4f11ac4
   140016ecb:	rcr    DWORD PTR [rax+0x7d],cl
   140016ece:	repnz (bad) [rdi]
   140016ed1:	(bad)  
   140016ed2:	rcr    DWORD PTR [rcx],1
   140016ed4:	lahf   
   140016ed5:	(bad)  
   140016ed7:	stos   BYTE PTR es:[rdi],al
   140016ed8:	mov    DWORD PTR [rsi+0x430b7d91],ebx
   140016ede:	mov    ebp,0x71d6f41d
   140016ee3:	push   rdi
   140016ee4:	rex.XB cmc 
   140016ee6:	adc    ebp,0xb0b15d26
   140016eec:	mov    esp,0x8fcc33b4
   140016ef1:	movsxd esi,DWORD PTR [rax-0x12]
   140016ef4:	and    al,0x86
   140016ef6:	addr32 fs in eax,0xde
   140016efa:	push   0x7e
   140016efc:	(bad)  
   140016efd:	(bad)  
   140016efe:	repnz cmp al,0xe2
   140016f01:	ficom  DWORD PTR [rdx]
   140016f03:	(bad)
   140016f08:	mov    WORD PTR cs:[rbx-0x56953378],?
   140016f0f:	xchg   ebx,eax
   140016f10:	ss hlt 
   140016f12:	(bad)  
   140016f13:	jbe    0x140016ef3
   140016f15:	(bad)  
   140016f16:	lods   eax,DWORD PTR ds:[rsi]
   140016f17:	cmp    edi,ebx
   140016f19:	rex.WR scas al,BYTE PTR es:[rdi]
   140016f1b:	mov    eax,0x3b7e5893
   140016f20:	(bad)  
   140016f21:	(bad)  
   140016f22:	jo     0x140016ef3
   140016f24:	lea    ebx,[rdi]
   140016f26:	sub    BYTE PTR [rdi+0x1],al
   140016f29:	(bad)  
   140016f2a:	rex.WX
   140016f2b:	rex.XB fstp QWORD PTR [r14-0x4d]
   140016f2f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016f30:	es (bad) 
   140016f32:	out    0xf3,al
   140016f34:	sbb    ebp,DWORD PTR [rdx+0x4b5fc670]
   140016f3a:	or     BYTE PTR [rbx-0x1f],0xf
   140016f3e:	outs   dx,BYTE PTR ds:[rsi]
   140016f3f:	lods   eax,DWORD PTR ds:[rsi]
   140016f40:	fcmovnb st,st(2)
   140016f42:	pop    rdi
   140016f43:	data16 sti 
   140016f45:	push   rcx
   140016f46:	fs neg ebp
   140016f49:	sub    eax,0xc72d17b4
   140016f4e:	fist   WORD PTR [rcx-0x55e9d27a]
   140016f54:	rex.WX sub cl,BYTE PTR [rdx-0x675975ee]
   140016f5b:	add    ch,BYTE PTR [rbx]
   140016f5d:	cmp    dl,BYTE PTR [rax-0x6e]
   140016f60:	(bad)  
   140016f62:	in     eax,dx
   140016f63:	sbb    al,0x58
   140016f65:	enter  0x233f,0x4
   140016f69:	rex.WXB neg r15b
   140016f6c:	xchg   esp,eax
   140016f6d:	(bad)  
   140016f6e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016f6f:	(bad)  
   140016f70:	retf   
   140016f71:	ret    
   140016f72:	nop
   140016f73:	jns    0x140016fc2
   140016f75:	add    DWORD PTR [rsi-0x26ba83c4],ebp
   140016f7b:	adc    BYTE PTR [rax+0xb],ah
   140016f7e:	(bad)  
   140016f7f:	popf   
   140016f80:	sub    eax,0x11b0b00a
   140016f85:	mov    edi,0x9dd1d1f6
   140016f8a:	mov    edi,0x75be6ff5
   140016f8f:	loopne 0x140016fc2
   140016f91:	pushf  
   140016f92:	fxch   st(2)
   140016f94:	xchg   edi,eax
   140016f95:	ret    0x980d
   140016f98:	add    al,0x3e
   140016f9a:	cmovb  ebp,DWORD PTR [rbp-0x19309e90]
   140016fa1:	adc    bl,al
   140016fa3:	fsub   st(5),st
   140016fa5:	stc    
   140016fa6:	push   rdi
   140016fa7:	cmp    eax,0x7f7aafa3
   140016fac:	cwde   
   140016fad:	cld    
   140016fae:	vpaddq ymm7,ymm12,YMMWORD PTR [rbp+rdi*1+0x1e5010f7]
   140016fb7:	rex or eax,0xc2f86257
   140016fbd:	xor    al,0xc
   140016fbf:	rex.X movabs ds:0x4b959922a4981297,eax
   140016fc9:	sub    BYTE PTR [rax],0xd2
   140016fcc:	es xor esi,eax
   140016fcf:	mov    ecx,0x33fd5ff7
   140016fd4:	mov    edx,0x3cf10ff5
   140016fd9:	leave  
   140016fda:	shr    bh,0x7f
   140016fdd:	add    eax,0x208d9c00
   140016fe2:	xor    al,0x25
   140016fe4:	rcr    BYTE PTR [rcx],1
   140016fe6:	sbb    al,0xd9
   140016fe8:	cmp    eax,0xef5dcb78
   140016fed:	cld    
   140016fee:	cdq    
   140016fef:	mov    esi,0x117fa1c1
   140016ff4:	cmp    DWORD PTR [rsi],0xaa8d0cb
   140016ffa:	ins    BYTE PTR es:[rdi],dx
   140016ffb:	xchg   ebp,eax
   140016ffc:	add    BYTE PTR [rax+rdx*2+0x44],ch
   140017000:	xor    DWORD PTR [rax-0x6b87394e],0x1f
   140017007:	cli    
   140017008:	fdiv   QWORD PTR [rdi]
   14001700a:	data16 lahf 
   14001700c:	jp     0x140017002
   14001700e:	fist   DWORD PTR [rbx-0x662e712b]
   140017014:	rex.WRB cmp r10b,BYTE PTR [r13-0x74c9c9ca]
   14001701b:	xor    edx,DWORD PTR [rdx-0x21]
   14001701e:	scas   al,BYTE PTR es:[rdi]
   14001701f:	mov    ebp,0xae87bdfd
   140017024:	mov    eax,0xede27434
   140017029:	rex.XB retf 
   14001702b:	push   rbx
   14001702c:	out    dx,eax
   14001702d:	fnstsw WORD PTR [rip+0xffffffffbe96ea7f]        # 0xfe985ab2
   140017033:	mov    ecx,0x4fcf50f1
   140017038:	and    DWORD PTR [rsi],ebp
   14001703a:	movabs al,cs:0x5742a2aeec445b5e
   140017044:	mov    dl,0xf8
   140017046:	xor    al,0xdc
   140017048:	sub    BYTE PTR [rsi+rbx*2+0x18f24042],ah
   14001704f:	mov    edi,0x5f94b045
   140017054:	sub    edi,DWORD PTR [rdx-0xacc6f10]
   14001705a:	xor    ch,cl
   14001705c:	and    eax,0xf6c61795
   140017061:	(bad)  
   140017062:	jb     0x140017043
   140017064:	fild   WORD PTR [rip+0xffffffff8e5d0dd9]        # 0xce5e7e43
   14001706a:	stos   DWORD PTR es:[rdi],eax
   14001706b:	sbb    esp,DWORD PTR [rdx]
   14001706d:	add    BYTE PTR [rsp+rax*8],ch
   140017070:	xchg   esi,eax
   140017071:	sub    eax,0xcab6407a
   140017076:	xchg   edx,eax
   140017077:	push   rax
   140017078:	(bad)  
   140017079:	cmp    esi,edx
   14001707b:	(bad)  
   14001707c:	in     eax,0x7b
   14001707e:	mov    dl,0xf7
   140017080:	data16 stc 
   140017082:	leave  
   140017083:	mov    al,BYTE PTR [rbx-0x75947de0]
   140017089:	rex.WX fld QWORD PTR [rdx+r9*2-0x6375fe6f]
   140017091:	add    DWORD PTR [rbx-0x4e952bc4],ecx
   140017097:	mov    bh,0x36
   140017099:	std    
   14001709a:	hlt    
   14001709b:	movsxd ebx,DWORD PTR [rax+0x6f]
   14001709e:	jge    0x140017088
   1400170a0:	jge    0x1400170ca
   1400170a2:	rex.WB or BYTE PTR [r15+0x2],bpl
   1400170a6:	(bad)  
   1400170a7:	(bad)  
   1400170a8:	movabs al,ds:0xcfec1a2817f5735a
   1400170b1:	add    al,0xa0
   1400170b3:	(bad)  
   1400170b4:	jp     0x140017040
   1400170b6:	retf   0x780d
   1400170b9:	imul   esi,eax,0x36
   1400170bc:	or     DWORD PTR [rax],ecx
   1400170be:	stc    
   1400170bf:	fs jrcxz 0x14001709b
   1400170c2:	test   esi,ecx
   1400170c4:	jg     0x1400170c0
   1400170c6:	test   eax,0xbbf43ebf
   1400170cb:	(bad)  
   1400170cc:	int3   
   1400170cd:	imul   BYTE PTR [rsi]
   1400170cf:	and    BYTE PTR [rbx],cl
   1400170d1:	(bad)  
   1400170d2:	push   rsi
   1400170d3:	loope  0x1400170a4
   1400170d5:	movabs al,ds:0xb02be7d9fd08f9fc
   1400170de:	pop    rbp
   1400170df:	adc    DWORD PTR [rdx+rax*8-0x122b3c24],esi
   1400170e6:	push   QWORD PTR [rax-0x19]
   1400170e9:	icebp  
   1400170ea:	(bad)  
   1400170eb:	mov    edi,0x3e7ed686
   1400170f0:	xor    BYTE PTR [rdi],cl
   1400170f2:	and    eax,0xd272070d
   1400170f7:	inc    BYTE PTR [rax+0x1176197a]
   1400170fd:	(bad)  
   1400170fe:	adc    dl,BYTE PTR [rsp+rax*8-0x70]
   140017102:	cld    
   140017103:	jnp    0x14001715a
   140017105:	adc    ah,cl
   140017107:	pop    rax
   140017108:	rex.RB clc 
   14001710a:	loop   0x14001713b
   14001710c:	repnz imul edi,edi,0xffffffdb
   140017110:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017111:	xor    DWORD PTR [rax-0x9],esp
   140017114:	js     0x140017164
   140017116:	xor    dh,al
   140017118:	xchg   ebp,eax
   140017119:	movabs eax,ds:0x151ae8411b38000
   140017122:	hlt    
   140017123:	fdiv   st(2),st
   140017125:	mov    dh,0x77
   140017127:	mov    esi,0x43c1ef65
   14001712c:	mov    edi,0x1d7d6212
   140017131:	adc    eax,edx
   140017133:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017134:	mov    BYTE PTR [rdx-0x5aa3f77b],bl
   14001713a:	cmp    BYTE PTR [rbx-0x20894544],bh
   140017140:	int3   
   140017141:	leave  
   140017142:	mov    cl,0x3f
   140017144:	jnp    0x140017130
   140017146:	scas   eax,DWORD PTR es:[rdi]
   140017147:	mov    edi,0xcce30f0
   14001714c:	in     eax,dx
   14001714d:	ins    BYTE PTR es:[rdi],dx
   14001714e:	fld    TBYTE PTR [rdx-0x9281443]
   140017154:	ja     0x140017135
   140017156:	mov    ecx,0x3fe4ee7b
   14001715b:	out    dx,eax
   14001715c:	lods   al,BYTE PTR ds:[rsi]
   14001715d:	int3   
   14001715e:	(bad)  
   140017160:	pop    rcx
   140017161:	pop    rbp
   140017162:	rex fcomp QWORD PTR [rbp+rax*2-0x3b]
   140017167:	pop    rbp
   140017168:	push   rsp
   140017169:	(bad)  
   14001716a:	or     cl,cl
   14001716c:	mov    edx,0xfd8d24f8
   140017171:	addr32 mov dl,0xcf
   140017174:	or     DWORD PTR [rip+0x2a116a15],esi        # 0x16a12db8f
   14001717a:	sub    DWORD PTR [rbp-0x3ecf13da],0xe03c05f3
   140017184:	jno    0x140017181
   140017186:	sbb    al,0xf6
   140017188:	retf   
   140017189:	movabs eax,fs:0x5df8633ea169e22d
   140017193:	clc    
   140017194:	xor    ecx,0x5
   140017197:	(bad)  
   140017198:	xor    ebx,edx
   14001719a:	ja     0x14001711c
   14001719c:	sti    
   14001719d:	cmc    
   14001719e:	fnstenv [rdx]
   1400171a0:	(bad)  
   1400171a1:	push   rcx
   1400171a2:	add    eax,0xc960d815
   1400171a7:	sbb    DWORD PTR ds:[rip+0xffffffff96e58bfa],0xefcf466c        # 0xd6e6fdac
   1400171b2:	push   rdi
   1400171b3:	mul    DWORD PTR [rbx]
   1400171b5:	sbb    bh,BYTE PTR [rdi-0x60]
   1400171b8:	test   al,0x82
   1400171ba:	stos   BYTE PTR es:[rdi],al
   1400171bb:	cld    
   1400171bc:	cmp    dl,BYTE PTR [rsi-0x38]
   1400171bf:	mov    al,0x1f
   1400171c1:	stos   BYTE PTR es:[rdi],al
   1400171c2:	add    BYTE PTR [rsi+rdx*4],dl
   1400171c5:	mov    bl,0xde
   1400171c7:	(bad)  
   1400171c8:	sub    DWORD PTR [rbx],ebx
   1400171ca:	push   0xffffffffffffffbe
   1400171cc:	(bad)  
   1400171cd:	ss rex sub ecx,DWORD PTR ds:[rbx]
   1400171d2:	add    eax,0x30029bf2
   1400171d7:	clc    
   1400171d8:	retf   
   1400171d9:	test   DWORD PTR [rbx],esp
   1400171db:	sbb    esi,edx
   1400171dd:	addr32 mov dh,0xf
   1400171e0:	add    ebx,DWORD PTR [rbx]
   1400171e2:	movsxd r11,DWORD PTR [rdi+0x3a]
   1400171e6:	xor    eax,0xf8ff6bf0
   1400171eb:	mov    edx,DWORD PTR [rdi+0x19621e7e]
   1400171f1:	rex.WXB loope 0x1400171d3
   1400171f4:	rex.WRX
   1400171f5:	bnd jge 0x1400171a7
   1400171f8:	(bad)  
   1400171f9:	jg     0x1400171a1
   1400171fb:	lods   eax,DWORD PTR ds:[rsi]
   1400171fc:	lea    esp,[rax-0x31]
   1400171ff:	rex.R ins BYTE PTR es:[rdi],dx
   140017201:	ja     0x140017281
   140017203:	mov    ebp,0xbbb6f67e
   140017208:	ret    0x6fdc
   14001720b:	hlt    
   14001720c:	jb     0x140017205
   14001720e:	xor    eax,0x1baac6e2
   140017213:	rex
   140017214:	lock jo 0x1400171b6
   140017217:	test   eax,0x2f6f4683
   14001721c:	rex push rax
   14001721e:	and    ah,0xbf
   140017221:	mov    al,0x67
   140017223:	and    DWORD PTR [rdi-0x67],esi
   140017226:	mov    ebx,0x7bc8d10f
   14001722b:	jle    0x1400171c6
   14001722d:	pop    rdi
   14001722e:	std    
   14001722f:	rex.WRB in al,0x9c
   140017232:	xor    BYTE PTR [rbx-0x60207e6e],0x1c
   140017239:	rcr    BYTE PTR [rcx-0x7bec8c4a],0x9
   140017240:	sbb    dil,BYTE PTR [rdi]
   140017243:	cli    
   140017244:	fdivr  st(1),st
   140017246:	xchg   ebp,eax
   140017247:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017248:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017249:	rex.WRXB out dx,al
   14001724b:	cmp    BYTE PTR [rax+0x68],dh
   14001724e:	cwde   
   14001724f:	cmp    edi,DWORD PTR [rbp-0x7f791551]
   140017255:	outs   dx,BYTE PTR ds:[rsi]
   140017256:	ret    
   140017257:	(bad)  
   140017258:	(bad)  
   140017259:	push   rdi
   14001725a:	(bad)  
   14001725b:	jmp    FWORD PTR [rax-0x14]
   14001725e:	test   eax,0xd1f37e27
   140017263:	iret   
   140017264:	jge    0x140017248
   140017266:	movabs ds:0x4afec2592d4763d3,eax
   14001726f:	sbb    BYTE PTR [rax+0x1f73ffd5],bh
   140017275:	jo     0x1400172d9
   140017277:	xor    edi,DWORD PTR [rbx+rdi*4]
   14001727a:	rex popf 
   14001727c:	rex.WRXB out dx,al
   14001727e:	pop    rdx
   14001727f:	popf   
   140017280:	pop    rcx
   140017281:	out    dx,eax
   140017282:	pop    rbp
   140017283:	pop    rdi
   140017284:	mov    esp,0x4b5346a9
   140017289:	cmp    al,0x5f
   14001728b:	jb     0x140017286
   14001728d:	sub    ebp,DWORD PTR [rdx+0x64]
   140017290:	add    DWORD PTR [rdi],ecx
   140017292:	retf   
   140017293:	out    dx,al
   140017294:	and    esp,DWORD PTR [rcx]
   140017296:	sti    
   140017297:	lods   al,BYTE PTR ds:[rsi]
   140017298:	movabs ds:0xc27ad1d9b32f844f,al
   1400172a1:	xchg   ebp,eax
   1400172a2:	ret    0x640f
   1400172a5:	rex.W int 0x4a
   1400172a8:	rol    cl,cl
   1400172aa:	rex.W cmp al,0x72
   1400172ad:	loope  0x140017266
   1400172af:	js     0x14001726c
   1400172b1:	or     BYTE PTR [rbp-0x10],bl
   1400172b4:	push   rax
   1400172b5:	lahf   
   1400172b6:	cmc    
   1400172b7:	(bad)  
   1400172b8:	unpcklps xmm6,XMMWORD PTR [rbp+0x30e7013]
   1400172bf:	rex.RX sub r10b,BYTE PTR [rsi]
   1400172c2:	out    0xf0,al
   1400172c4:	adc    eax,0x9f63337d
   1400172c9:	xchg   ebx,eax
   1400172ca:	jle    0x1400172f0
   1400172cc:	sbb    BYTE PTR [rbx],r13b
   1400172cf:	rex.WRB adc BYTE PTR [r10-0x1f],r10b
   1400172d3:	mov    tr7,esp
   1400172d6:	or     sil,r8b
   1400172d9:	sbb    DWORD PTR [rax-0x16acf35a],edx
   1400172df:	rex.WX
   1400172e0:	repnz xor DWORD PTR fs:[rax],ebx
   1400172e4:	imul   ecx,DWORD PTR [r10],0x9bcd1484
   1400172eb:	lock (bad) 
   1400172ed:	or     al,BYTE PTR [rax+0x7b00cf8a]
   1400172f3:	scas   eax,DWORD PTR es:[rdi]
   1400172f4:	popf   
   1400172f5:	jno    0x140017344
   1400172f7:	sbb    DWORD PTR [rax+0x15],eax
   1400172fa:	or     BYTE PTR [rsi],0xba
   1400172fd:	pop    rbx
   1400172fe:	js     0x140017373
   140017300:	add    eax,0x33e9b2c8
   140017305:	xlat   BYTE PTR ds:[rbx]
   140017306:	xor    edi,DWORD PTR [rdi+0x3bf6bf19]
   14001730c:	rex.WRXB out dx,al
   14001730e:	cli    
   14001730f:	test   edi,edi
   140017311:	icebp  
   140017312:	inc    BYTE PTR [rbx-0x41f7bff1]
   140017318:	rcl    bh,cl
   14001731a:	(bad)  
   14001731b:	sub    eax,0x5fe08bf
   140017320:	pop    rax
   140017321:	jno    0x1400172da
   140017323:	mov    ch,0x9d
   140017325:	addr32 (bad) 
   140017327:	add    ah,al
   140017329:	(bad)  
   14001732a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001732b:	pop    rbp
   14001732c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001732d:	(bad)  
   14001732e:	jb     0x14001730f
   140017330:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017331:	outs   dx,BYTE PTR ds:[rsi]
   140017332:	or     DWORD PTR [rbx+0x79a9fafb],ecx
   140017338:	xor    eax,0x156fd33b
   14001733d:	(bad)  
   14001733e:	jp     0x1400172db
   140017340:	neg    dl
   140017342:	call   0xd401bfd7
   140017347:	or     edx,ebx
   140017349:	xchg   BYTE PTR [rsi-0x12],bh
   14001734c:	scas   al,BYTE PTR es:[rdi]
   14001734d:	fisttp QWORD PTR [rbx-0x30d7a0bd]
   140017353:	jno    0x14001730b
   140017355:	sti    
   140017356:	jp     0x14001733d
   140017358:	and    BYTE PTR [rax+0x12eedb72],al
   14001735e:	ins    BYTE PTR es:[rdi],dx
   14001735f:	in     eax,0x6
   140017361:	(bad)  
   140017362:	pop    rbx
   140017363:	fdivrp st(3),st
   140017365:	pandn  mm1,mm6
   140017368:	int3   
   140017369:	jno    0x140017357
   14001736b:	mov    cl,0x87
   14001736d:	out    dx,eax
   14001736e:	lahf   
   14001736f:	(bad)  
   140017370:	cmp    esi,DWORD PTR [rdx+0x5b50b680]
   140017376:	xor    eax,ebp
   140017378:	(bad)  
   140017379:	cmp    ch,BYTE PTR [rdi]
   14001737b:	xor    BYTE PTR [rsi+0x286db648],dl
   140017381:	rex (bad) 
   140017383:	fnstsw WORD PTR [rcx+0x6fbbea7d]
   140017389:	ds mov esp,0xf6bffe32
   14001738f:	jo     0x140017388
   140017391:	or     cl,BYTE PTR [rcx-0x4e1cbc0]
   140017397:	pop    QWORD PTR [rax+0x4cadca5a]
   14001739d:	(bad)  
   14001739e:	gs call 0x15bf6fcb2
   1400173a4:	in     al,dx
   1400173a5:	and    eax,0x4f935d26
   1400173aa:	or     al,BYTE PTR [rax+rax*1+0x4264008b]
   1400173b1:	rex.WRB out 0x7f,al
   1400173b4:	adc    edx,ebp
   1400173b6:	push   rbx
   1400173b7:	ja     0x140017339
   1400173b9:	or     eax,0xb30a93ea
   1400173be:	mov    edx,0x59b0a50a
   1400173c3:	(bad)  
   1400173c4:	(bad)  
   1400173c5:	sub    edi,ebp
   1400173c7:	adc    eax,0xd0b50064
   1400173cc:	rex.X sbb BYTE PTR [rdx-0x6c],bl
   1400173d0:	rex iret 
   1400173d2:	imul   ebx,ecx,0x87bbea7a
   1400173d8:	and    BYTE PTR [rbx+0x41a45914],ch
   1400173de:	sar    BYTE PTR [rdi-0x70],1
   1400173e1:	sahf   
   1400173e2:	add    eax,DWORD PTR [rbp+0x3c9227b5]
   1400173e8:	add    DWORD PTR [rdi-0x6],ecx
   1400173eb:	add    DWORD PTR [rbp+rcx*1-0x40],edi
   1400173ef:	xor    dh,ah
   1400173f1:	rex.RXB add BYTE PTR [r10-0x7b09e88f],r10b
   1400173f8:	lods   eax,DWORD PTR ds:[rsi]
   1400173f9:	rex.WR pop rcx
   1400173fb:	mov    DWORD PTR [rax+0x43],eax
   1400173fe:	add    eax,0x3ffe140
   140017403:	movabs al,ds:0xac2b0b14816165a0
   14001740c:	xor    cl,BYTE PTR [rbp-0x2fd446c0]
   140017412:	in     al,0x66
   140017414:	cmc    
   140017415:	(bad)  
   140017416:	(bad)  
   140017417:	div    DWORD PTR [rbp-0x605407d]
   14001741d:	icebp  
   14001741e:	sbb    eax,0x5f82c833
   140017423:	sub    dh,BYTE PTR [rsi+0x39]
   140017426:	rol    BYTE PTR [rbp-0x2518074c],0xce
   14001742d:	outs   dx,DWORD PTR ds:[rsi]
   14001742f:	or     eax,0xdbdef40d
   140017434:	jns    0x14001741e
   140017436:	pop    rdi
   140017437:	(bad)  
   140017438:	out    0x8d,al
   14001743a:	lahf   
   14001743b:	(bad)  
   14001743c:	push   rbx
   14001743d:	rex.W in al,dx
   14001743f:	and    eax,0x6ad99e70
   140017444:	cdq    
   140017445:	add    BYTE PTR [rax-0x46f1e434],0xdd
   14001744c:	cwde   
   14001744d:	std    
   14001744e:	ins    DWORD PTR es:[rdi],dx
   14001744f:	xor    BYTE PTR [rdi+0x7b2f847e],cl
   140017455:	out    0x9f,eax
   140017457:	loopne 0x140017429
   140017459:	cmp    dh,cl
   14001745b:	xchg   ebx,eax
   14001745c:	sbb    eax,edi
   14001745e:	retf   0x41
   140017461:	in     eax,0xb6
   140017463:	pop    rbp
   140017464:	stos   DWORD PTR es:[rdi],eax
   140017465:	fisubr DWORD PTR [rbx-0x2d]
   140017468:	js     0x140017447
   14001746a:	push   rbx
   14001746b:	iret   
   14001746c:	cmp    al,0xf1
   14001746e:	int3   
   14001746f:	test   eax,0x6a789e67
   140017474:	jne    0x1400174d7
   140017476:	outs   dx,BYTE PTR ds:[rsi]
   140017477:	or     ecx,ebx
   140017479:	retf   0xc59b
   14001747c:	(bad)  
   14001747d:	(bad)  
   14001747e:	rex.B test eax,0xf2c4ce0c
   140017484:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017485:	lods   eax,DWORD PTR ds:[rsi]
   140017486:	fistp  WORD PTR [rdi+0x227fdfe8]
   14001748c:	jb     0x140017488
   14001748e:	fidivr DWORD PTR [rsi+0x7b9bf9f5]
   140017494:	rcr    ch,1
   140017496:	(bad)  
   140017497:	mov    ecx,0x2fd585fe
   14001749c:	test   bh,bl
   14001749e:	jb     0x140017492
   1400174a0:	mov    ebp,0x71320f0a
   1400174a5:	leave  
   1400174a6:	(bad)  
   1400174a7:	ins    BYTE PTR es:[rdi],dx
   1400174a8:	js     0x14001748a
   1400174aa:	mov    ?,WORD PTR [rbx+0xf7125f5]
   1400174b0:	rex.WR clc 
   1400174b2:	add    DWORD PTR [rcx+0x8],edx
   1400174b5:	mov    cl,0x52
   1400174b7:	add    DWORD PTR [rcx+rsi*4+0x7abaede8],0xb901489
   1400174c2:	push   rsi
   1400174c3:	xor    al,0xc2
   1400174c5:	rex.WRXB std 
   1400174c7:	clc    
   1400174c8:	sub    bl,BYTE PTR [rax+0x53]
   1400174cb:	rex.WRXB movabs r8,0x130a21a27ad5b685
   1400174d5:	(bad)  
   1400174d6:	adc    eax,0xb04e3b7e
   1400174db:	fs lahf 
   1400174dd:	(bad)  
   1400174de:	retf   0x9a02
   1400174e1:	in     eax,dx
   1400174e2:	(bad)  
   1400174e3:	ja     0x1400174ec
   1400174e5:	mov    esp,0x15c02076
   1400174ea:	push   rbp
   1400174eb:	fdecstp 
   1400174ed:	retf   
   1400174ee:	jae    0x140017506
   1400174f0:	fdiv   st(2),st
   1400174f2:	(bad)  
   1400174f4:	stc    
   1400174f5:	cmp    esp,ebx
   1400174f7:	rex.X cwde 
   1400174f9:	sub    al,0xa2
   1400174fb:	push   rcx
   1400174fc:	mov    eax,0x3b3c8002
   140017501:	rex rol DWORD PTR [rcx-0x1de08f],1
   140017508:	(bad)  
   140017509:	add    eax,0x5cba3c36
   14001750e:	std    
   14001750f:	ficomp WORD PTR [rbp-0x9]
   140017512:	pop    rbp
   140017513:	cmc    
   140017514:	jmp    0x140017595
   140017516:	xor    edx,edi
   140017518:	cmp    ecx,DWORD PTR [rdi-0x15320694]
   14001751e:	addr32 xchg edi,eax
   140017520:	out    dx,eax
   140017521:	in     eax,0x12
   140017523:	jle    0x140017505
   140017525:	mov    esp,0xe0016c2b
   14001752a:	jnp    0x1400174c7
   14001752c:	add    ecx,DWORD PTR [rdi]
   14001752e:	mov    esp,0x1a9dce39
   140017533:	movabs eax,ds:0x839a6ab5149337cd
   14001753c:	repnz sbb eax,0x430fd1c8
   140017542:	add    dh,cl
   140017544:	adc    al,0x68
   140017546:	or     BYTE PTR [rcx+0x697b4318],bl
   14001754c:	jrcxz  0x1400174f7
   14001754e:	mov    edi,0xcb4781c0
   140017553:	movsxd ebx,DWORD PTR [rdi+0x32bc0509]
   140017559:	adc    DWORD PTR [rax-0x47],eax
   14001755c:	popf   
   14001755d:	fld    st(7)
   14001755f:	mov    dl,0xd7
   140017561:	mov    dh,0x9d
   140017563:	sub    eax,0x9f76737c
   140017568:	scas   eax,DWORD PTR es:[rdi]
   140017569:	rex.WRB in al,0xd8
   14001756c:	icebp  
   14001756d:	rex.WX
   14001756e:	repnz mov cl,0xe7
   140017571:	mov    edx,0xef87a385
   140017576:	cwde   
   140017577:	jnp    0x14001756d
   140017579:	ret    
   14001757a:	std    
   14001757b:	mov    esp,0xf0456b71
   140017580:	(bad)  
   140017581:	ds rex.RX
   140017583:	sbb    r10,QWORD PTR [rcx]
   140017586:	(bad)  
   140017587:	(bad)  
   140017588:	scas   eax,DWORD PTR es:[rdi]
   140017589:	sub    DWORD PTR [rdi-0x55],esi
   14001758c:	(bad)  
   14001758d:	cdq    
   14001758e:	add    esi,eax
   140017590:	lods   al,BYTE PTR ds:[rsi]
   140017591:	cmp    eax,0xadff4213
   140017596:	push   0xffffffffa4d58379
   14001759b:	adc    edi,DWORD PTR [rsi]
   14001759d:	scas   al,BYTE PTR es:[rdi]
   14001759f:	(bad)  
   1400175a0:	loop   0x140017591
   1400175a2:	out    0x8b,al
   1400175a4:	xchg   edi,eax
   1400175a5:	xor    eax,0x3f09c1fd
   1400175aa:	retf   0x3921
   1400175ad:	fist   DWORD PTR [rdi-0x75]
   1400175b0:	js     0x14001755e
   1400175b2:	rol    DWORD PTR [rdi+0x7ef1ff75],1
   1400175b8:	add    BYTE PTR [rdx+0x3f3ee3ec],bl
   1400175be:	cdq    
   1400175bf:	jmp    0x140017553
   1400175c1:	mov    ecx,0x62006f05
   1400175c6:	(bad)  
   1400175c7:	or     eax,0x8b14309a
   1400175cc:	jrcxz  0x1400175d2
   1400175ce:	and    ebp,DWORD PTR [rip+0x3fbc0d59]        # 0x17fbd832d
   1400175d4:	sbb    BYTE PTR [rax-0x23],bh
   1400175d7:	jg     0x14001762e
   1400175d9:	(bad)  
   1400175da:	hlt    
   1400175db:	adc    eax,0xeced4525
   1400175e0:	rex.XB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400175e2:	adc    DWORD PTR [rdx],eax
   1400175e4:	mul    bh
   1400175e6:	add    edx,DWORD PTR [rdx+0x1bee4ee8]
   1400175ec:	rol    BYTE PTR [rip+0xffffffff88802366],0x9f        # 0xc8819959
   1400175f3:	pop    rax
   1400175f4:	call   0x12f8095f5
   1400175f9:	adc    edx,DWORD PTR [rdi-0x3]
   1400175fc:	(bad)  
   1400175fd:	shl    DWORD PTR fs:[rdi],0x17
   140017601:	(bad)  
   140017602:	adc    edi,DWORD PTR [rbp+0x2f]
   140017605:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017606:	loopne 0x1400175a7
   140017608:	imul   ebx,ebx,0x3e4b6f3e
   14001760e:	stos   DWORD PTR es:[rdi],eax
   14001760f:	idiv   DWORD PTR [rdi]
   140017611:	(bad)  
   140017612:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017613:	(bad)  
   140017615:	(bad)  
   140017616:	(bad)  
   140017617:	std    
   140017618:	fild   QWORD PTR [rdx-0x1a]
   14001761b:	and    DWORD PTR [rdx],0xfffffff5
   14001761e:	cmp    DWORD PTR [rcx],esi
   140017620:	enter  0xb026,0xd1
   140017624:	sbb    eax,0xb645b56
   140017629:	mov    esp,DWORD PTR [rsi+rax*1]
   14001762c:	push   rsi
   14001762d:	cmp    BYTE PTR [rcx+rsi*8-0x61],bh
   140017631:	loope  0x140017609
   140017633:	(bad)  
   140017634:	fwait
   140017635:	rex.RB mov r13d,0x8190738c
   14001763b:	scas   eax,DWORD PTR es:[rdi]
   14001763c:	rex.WR add al,0x50
   14001763f:	outs   dx,BYTE PTR ds:[rsi]
   140017640:	scas   eax,DWORD PTR es:[edi]
   140017642:	sub    al,0x3c
   140017644:	push   rbx
   140017645:	(bad)  
   140017646:	rex.RX (bad) 
   140017648:	jle    0x14001763d
   14001764a:	test   esi,0xe76df3e6
   140017650:	sbb    al,0xec
   140017652:	jg     0x14001767b
   140017654:	mov    esp,DWORD PTR [rsi+0x1a57867b]
   14001765a:	or     bh,BYTE PTR [rdi+0x7d]
   14001765d:	js     0x1400176c2
   14001765f:	(bad)  
   140017660:	or     eax,0xcb7ef135
   140017665:	stos   BYTE PTR es:[rdi],al
   140017666:	adc    ebx,DWORD PTR [rdi+0x3e]
   140017669:	or     ecx,DWORD PTR [rbx+rsi*1+0x5bdacefd]
   140017670:	fdivr  QWORD PTR [rdi]
   140017672:	(bad)  
   140017673:	rol    BYTE PTR [rbx-0x6aae0606],1
   140017679:	rex.R
   14001767a:	rex.WRX xlat BYTE PTR ds:[rbx]
   14001767c:	xor    eax,0xba773f9f
   140017681:	adc    DWORD PTR [rcx],eax
   140017683:	mov    ch,0xda
   140017685:	cli    
   140017686:	nop
   140017687:	jge    0x1400176fc
   140017689:	gs sti 
   14001768b:	int    0xf2
   14001768d:	fwait
   14001768e:	xor    bh,al
   140017690:	push   0x4534061
   140017695:	rex.RB fmul DWORD PTR [r14]
   140017698:	(bad)  
   140017699:	movabs ds:0xb4918fe1104dcc1b,al
   1400176a2:	lods   eax,DWORD PTR ds:[rsi]
   1400176a3:	cwde   
   1400176a4:	jno    0x1400176b2
   1400176a6:	sub    al,BYTE PTR [r9]
   1400176a9:	add    edi,DWORD PTR [rdi+riz*4]
   1400176ac:	fist   WORD PTR [rdx+0x7e]
   1400176af:	in     eax,dx
   1400176b0:	ja     0x1400176eb
   1400176b2:	xchg   edx,eax
   1400176b3:	add    BYTE PTR [rdi+0x34],cl
   1400176b6:	repnz mov al,0x9f
   1400176b9:	sbb    DWORD PTR [rax-0x7d],esi
   1400176bc:	cmp    BYTE PTR [rax+0x20aa40ba],al
   1400176c2:	add    DWORD PTR [rcx+0x3],0x14
   1400176c6:	sti    
   1400176c7:	(bad)  
   1400176c8:	rex.WR movabs rsi,0x14c7d9092d72892b
   1400176d2:	add    BYTE PTR [rbx],dl
   1400176d4:	lods   eax,DWORD PTR ds:[rsi]
   1400176d5:	jg     0x14001774e
   1400176d7:	scas   al,BYTE PTR es:[rdi]
   1400176d8:	out    dx,eax
   1400176d9:	(bad)  
   1400176da:	fdivp  st(2),st
   1400176dc:	leave  
   1400176dd:	sub    edi,DWORD PTR [rdi+0x1f]
   1400176e0:	addr32 (bad) 
   1400176e2:	(bad)  
   1400176e3:	xchg   edi,eax
   1400176e4:	(bad)  
   1400176e5:	repnz lahf 
   1400176e7:	imul   edi,DWORD PTR [rbx],0x7b
   1400176ea:	imul   edi,DWORD PTR [rbx+rax*1],0xeef0cfe0
   1400176f1:	mov    cl,0x4b
   1400176f3:	mov    al,0xfe
   1400176f5:	popf   
   1400176f6:	sub    eax,edx
   1400176f8:	(bad)  
   1400176f9:	in     eax,dx
   1400176fa:	xor    eax,0xbfa0a230
   1400176ff:	and    BYTE PTR [rsi],bh
   140017701:	mov    WORD PTR [rdi],?
   140017703:	es out 0x4a,eax
   140017706:	sub    al,0x8f
   140017708:	add    BYTE PTR [rax],al
   14001770a:	and    dl,dl
   14001770c:	movabs eax,ds:0x71dec39f33f568ab
   140017715:	pushf  
   140017716:	and    esp,DWORD PTR [rdi]
   140017718:	loopne 0x1400176af
   14001771a:	scas   eax,DWORD PTR es:[rdi]
   14001771b:	add    BYTE PTR [rax+0x3083d3e7],al
   140017721:	or     ebp,esi
   140017723:	or     esp,DWORD PTR [rip+0x3e4ece7a]        # 0x17e5045a3
   140017729:	add    al,BYTE PTR [rax]
   14001772b:	rex.WRXB hlt 
   14001772d:	in     al,dx
   14001772e:	pop    rdx
   14001772f:	scas   al,BYTE PTR es:[rdi]
   140017730:	sar    DWORD PTR [rbx+rsi*8-0x6e],1
   140017734:	int    0xd9
   140017736:	mov    ebx,0x15b0f06a
   14001773b:	jrcxz  0x140017741
   14001773d:	retf   
   14001773e:	retf   0xd833
   140017741:	stos   DWORD PTR es:[rdi],eax
   140017742:	(bad)  
   140017743:	xor    al,0x32
   140017745:	jmp    0x1415acdf4
   14001774a:	add    al,0x85
   14001774c:	cld    
   14001774d:	rex.RX idiv BYTE PTR [rcx+0x3d]
   140017751:	mov    edi,0x9944d8fa
   140017756:	or     al,0xc
   140017758:	pop    rsi
   140017759:	jne    0x140017782
   14001775b:	retf   0x72a0
   14001775e:	rex.RB xchg r8d,eax
   140017760:	test   DWORD PTR [rdi+0x5c],ebx
   140017763:	(bad)  
   140017764:	rex.RX push rbp
   140017766:	add    eax,0x3657cfef
   14001776b:	loop   0x140017721
   14001776d:	push   rbp
   14001776e:	jns    0x14001774d
   140017770:	out    dx,eax
   140017771:	xlat   BYTE PTR ds:[rbx]
   140017772:	add    bl,BYTE PTR [rax+riz*4-0x38617c51]
   140017779:	or     DWORD PTR [rdx+0x2f],eax
   14001777c:	sbb    eax,0x6c1e5ca6
   140017781:	xlat   BYTE PTR ds:[rbx]
   140017782:	rex.WB enter 0xbf21,0xa0
   140017787:	xchg   ebx,eax
   140017788:	iret   
   140017789:	jl     0x140017788
   14001778b:	adc    ch,dh
   14001778d:	jmp    0x14001774c
   14001778f:	jb     0x1400177d2
   140017791:	test   BYTE PTR [rdx+0x3655ef2e],dl
   140017797:	sti    
   140017798:	hlt    
   140017799:	adc    al,0x60
   14001779b:	mov    bh,0xf8
   14001779d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001779e:	fadd   QWORD PTR [rax+0x78263998]
   1400177a4:	sub    BYTE PTR [rbp+rdi*8-0x31f0e4b9],dh
   1400177ab:	hlt    
   1400177ac:	std    
   1400177ad:	sti    
   1400177ae:	ja     0x14001782c
   1400177b0:	cli    
   1400177b1:	mov    bh,BYTE PTR [rdi]
   1400177b3:	rex.RX pop rbx
   1400177b5:	clc    
   1400177b6:	mov    bh,0x13
   1400177b8:	jge    0x140017799
   1400177ba:	(bad)  
   1400177bb:	pop    rbx
   1400177bc:	jnp    0x14001782c
   1400177be:	add    DWORD PTR [rbx-0x1a],ebx
   1400177c1:	xlat   BYTE PTR ds:[rbx]
   1400177c2:	push   rdi
   1400177c3:	js     0x140017829
   1400177c5:	movabs ds:0x6b5be58f5cafa46,al
   1400177ce:	out    dx,eax
   1400177cf:	(bad)  
   1400177d0:	push   rbp
   1400177d1:	jbe    0x14001777d
   1400177d3:	es or  edx,edx
   1400177d6:	sub    dh,bl
   1400177d8:	(bad)  
   1400177d9:	mov    esi,0x747ec511
   1400177de:	xlat   BYTE PTR ds:[rbx]
   1400177df:	out    dx,eax
   1400177e0:	(bad)
   1400177e3:	jrcxz  0x140017801
   1400177e5:	fs loopne 0x140017813
   1400177e8:	fild   WORD PTR [rip+0xffffffffedb73978]        # 0x12db8b166
   1400177ee:	rex.WB
   1400177ef:	rex.WB sbb rax,0xffffffffef7b6428
   1400177f5:	in     al,dx
   1400177f6:	mov    bh,0x6e
   1400177f8:	jg     0x1400177ef
   1400177fa:	repnz icebp 
   1400177fc:	(bad)  
   1400177fd:	mov    WORD PTR [rcx],es
   1400177ff:	sbb    esi,0xffffffe6
   140017802:	sbb    dh,BYTE PTR [rdx+0x58f727b7]
   140017808:	jl     0x1400177e9
   14001780a:	jge    0x1400177c4
   14001780c:	adc    dh,dl
   14001780e:	ret    
   14001780f:	std    
   140017810:	cmp    ah,BYTE PTR [rbx-0x2c]
   140017813:	lods   eax,DWORD PTR ds:[rsi]
   140017814:	ja     0x1400177d5
   140017816:	or     DWORD PTR [rdx+0x62f4f637],eax
   14001781c:	movabs al,ds:0x8f42dfd064f6e390
   140017825:	mov    ah,0x9b
   140017828:	(bad)
   14001782b:	rex.WB retf 0x6016
   14001782f:	sar    DWORD PTR [rdx],0xc
   140017832:	adc    DWORD PTR [rcx+rcx*4+0x58],ebx
   140017836:	retf   
   140017837:	outs   dx,DWORD PTR ds:[rsi]
   140017838:	(bad)  
   140017839:	(bad)  
   14001783a:	movabs eax,ds:0x6d9ebcedfc60bd16
   140017843:	push   0x228a01bd
   140017848:	(bad)  
   140017849:	jrcxz  0x140017850
   14001784b:	or     dl,ch
   14001784d:	neg    BYTE PTR [rax+0x47722032]
   140017853:	rex.WRB movabs r14,0x7e4b0924c19f5f33
   14001785d:	xor    edi,edx
   14001785f:	(bad)  
   140017860:	lods   eax,DWORD PTR ds:[rsi]
   140017861:	adc    ecx,DWORD PTR [rsi]
   140017863:	test   al,0x68
   140017865:	frstor [rsi-0x50eed8f6]
   14001786b:	(bad)  
   14001786c:	cmp    bl,bl
   14001786e:	imul   edi
   140017870:	out    dx,al
   140017871:	(bad)  
   140017872:	in     al,dx
   140017873:	xchg   ebp,eax
   140017874:	(bad)  
   140017875:	rex.RB
   140017876:	rex.WRX out 0xb5,eax
   140017879:	mov    BYTE PTR [rsi+0x27effe4c],cl
   14001787f:	sar    DWORD PTR [rdi],0xd3
   140017882:	xchg   esi,eax
   140017883:	out    0x56,eax
   140017885:	rex.WB (bad) 
   140017887:	test   BYTE PTR [rax],0xe8
   14001788a:	stc    
   14001788b:	rex.RXB xor al,0x7e
   14001788e:	(bad)  [rdi-0x79]
   140017891:	adc    edi,edi
   140017893:	out    0x20,eax
   140017895:	xor    eax,0x50184877
   14001789a:	sahf   
   14001789b:	rex.WRXB push r15
   14001789d:	mov    dl,0x80
   14001789f:	(bad)  
   1400178a0:	stos   DWORD PTR es:[rdi],eax
   1400178a1:	or     DWORD PTR [rdi],esp
   1400178a3:	fdiv   DWORD PTR [rdx+0x6cbb223]
   1400178a9:	push   0x7a1c1ef4
   1400178ae:	neg    DWORD PTR [rdi]
   1400178b0:	repnz movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400178b2:	(bad)  
   1400178b3:	jno    0x1400178cb
   1400178b5:	xor    dh,al
   1400178b7:	(bad)  
   1400178b8:	add    eax,DWORD PTR [rcx]
   1400178ba:	mov    esp,0x5b5b5b5c
   1400178bf:	add    ebx,DWORD PTR [rcx]
   1400178c1:	or     eax,esp
   1400178c3:	jmp    0x11714bc86
   1400178c8:	ins    BYTE PTR es:[rdi],dx
   1400178c9:	pushf  
   1400178ca:	sahf   
   1400178cb:	sbb    esp,edx
   1400178cd:	cmc    
   1400178ce:	mov    bh,0xb
   1400178d0:	movabs ds:0xd9181660545fc4cd,al
   1400178d9:	push   rdi
   1400178da:	xchg   DWORD PTR [rax+0x6f],ebx
   1400178dd:	idiv   ebx
   1400178df:	ins    DWORD PTR es:[rdi],dx
   1400178e0:	fild   WORD PTR [rax+0x2d]
   1400178e3:	mov    dl,0xcd
   1400178e5:	fidiv  DWORD PTR [rsi+0x67]
   1400178e8:	or     DWORD PTR [rsi],0x72d7c1de
   1400178ee:	or     al,0x3c
   1400178f0:	mov    dh,0x4f
   1400178f2:	ficom  DWORD PTR [rbp+0x28]
   1400178f5:	pop    rdx
   1400178f6:	push   rdi
   1400178f7:	pop    rsi
   1400178f8:	(bad)  
   1400178f9:	lods   eax,DWORD PTR ds:[rsi]
   1400178fa:	out    0x1b,al
   1400178fc:	rex.XB
   1400178fd:	lock (bad) 
   1400178ff:	lahf   
   140017900:	push   0xffffffff9e11fe79
   140017905:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017906:	sbb    ebx,DWORD PTR [rbp-0x5a7a73cc]
   14001790c:	iret   
   14001790d:	(bad)  
   14001790e:	(bad)  
   14001790f:	pop    rcx
   140017910:	and    cl,ah
   140017912:	test   dh,bl
   140017914:	ds (bad) 
   140017916:	retf   
   140017917:	iret   
   140017918:	add    eax,0x352ed8a9
   14001791d:	jbe    0x1400178a7
   14001791f:	rex.WRXB (bad) 
   140017921:	loop   0x14001790f
   140017923:	(bad)  
   140017924:	shl    eax,cl
   140017926:	mov    esi,0xf3ec9c28
   14001792b:	sub    esp,DWORD PTR [rbp+rax*1-0xefd7c00]
   140017932:	(bad)  
   140017933:	jl     0x1400178e5
   140017935:	sub    edx,DWORD PTR [rbp+0x51]
   140017938:	sbb    ah,dl
   14001793a:	jge    0x1400179a4
   14001793c:	mov    dh,0xef
   14001793e:	push   rdi
   14001793f:	fdivrp st(5),st
   140017941:	fldcw  WORD PTR [rbx]
   140017943:	out    dx,eax
   140017944:	test   DWORD PTR [rbx+rcx*2+0x57fe5a59],ebp
   14001794b:	xchg   al,dh
   14001794d:	add    esp,edi
   14001794f:	and    dh,BYTE PTR [rsi+0x2e0c31f9]
   140017955:	(bad)  
   140017956:	movabs ds:0xb87b2b8585b78bf7,al
   14001795f:	mov    ecx,0xf697c51a
   140017964:	scas   eax,DWORD PTR es:[rdi]
   140017965:	(bad)  
   140017966:	xchg   ebp,eax
   140017967:	cmp    al,0x8e
   140017969:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001796a:	test   al,0x71
   14001796c:	push   0xfffffffffa9e3798
   140017971:	(bad)  
   140017972:	cmp    al,bh
   140017974:	or     dh,cl
   140017976:	rex.X (bad) 
   140017978:	pop    rsi
   140017979:	push   rsp
   14001797a:	add    BYTE PTR [rdi],ch
   14001797c:	je     0x140017959
   14001797e:	scas   al,BYTE PTR es:[rdi]
   14001797f:	add    al,0x6c
   140017981:	movabs ds:0xa395d6f278affb87,eax
   14001798a:	sti    
   14001798b:	jp     0x14001795d
   14001798d:	mov    ebp,0x9b242dd1
   140017992:	(bad)  
   140017993:	sub    al,0x13
   140017995:	pop    rbp
   140017996:	test   eax,0x3beb8f00
   14001799b:	sti    
   14001799c:	mov    fs,WORD PTR [rdx]
   14001799e:	(bad)  
   14001799f:	push   rax
   1400179a0:	rcr    BYTE PTR [rbx+rsi*8-0x2b],0x4d
   1400179a5:	add    BYTE PTR [rbx-0x78],ah
   1400179a8:	vpminub xmm7,xmm1,xmm1
   1400179ac:	stc    
   1400179ad:	push   rbp
   1400179ae:	adc    eax,0x72b3f854
   1400179b3:	jo     0x14001799a
   1400179b5:	adc    dl,BYTE PTR [rdi+rsi*1-0x2ce5dfe0]
   1400179bc:	scas   eax,DWORD PTR es:[rdi]
   1400179bd:	nop
   1400179be:	(bad)  
   1400179bf:	stos   BYTE PTR es:[rdi],al
   1400179c0:	movabs al,ds:0xf280a97d55b1f29a
   1400179c9:	xchg   ebp,eax
   1400179ca:	(bad)  
   1400179cb:	adc    eax,DWORD PTR [rsi-0x53650be4]
   1400179d1:	(bad)  
   1400179d2:	xchg   edi,eax
   1400179d3:	rex.W jnp 0x1400179da
   1400179d6:	test   al,0x9f
   1400179d8:	outs   dx,BYTE PTR ds:[rsi]
   1400179d9:	stc    
   1400179da:	or     eax,0xef56b026
   1400179df:	rex.WRXB add al,0xb0
   1400179e2:	push   rsi
   1400179e3:	adc    dl,BYTE PTR [rdx+0xdf9775b]
   1400179e9:	sub    al,0x1e
   1400179eb:	loop   0x140017a69
   1400179ed:	(bad)  
   1400179ee:	fiadd  DWORD PTR [rdi+rbx*1]
   1400179f1:	loopne 0x140017a64
   1400179f3:	push   rbp
   1400179f4:	and    al,BYTE PTR [rax-0xc4416f7]
   1400179fa:	mov    ebp,0xcf8ef6bf
   1400179ff:	pop    rsi
   140017a00:	cmc    
   140017a01:	jmp    QWORD PTR [rdx-0x45]
   140017a04:	lock mov ecx,edi
   140017a07:	dec    DWORD PTR [rdx+0x10]
   140017a0a:	jle    0x1400179e7
   140017a0c:	(bad)  
   140017a0d:	out    dx,al
   140017a0e:	(bad)  
   140017a0f:	lock xor esp,esi
   140017a12:	lods   eax,DWORD PTR ds:[rsi]
   140017a13:	jg     0x1400179a0
   140017a15:	xchg   DWORD PTR [rsi-0x1232d888],edi
   140017a1b:	out    dx,eax
   140017a1c:	rex.XB jp 0x140017a2c
   140017a1f:	(bad)  
   140017a20:	test   al,0x64
   140017a22:	icebp  
   140017a23:	xchg   DWORD PTR [rbx+0x22],esi
   140017a26:	movabs ds:0x827f9da50edfe40c,al
   140017a2f:	ret    
   140017a30:	mul    DWORD PTR [rax+0x22f434dd]
   140017a36:	add    bh,BYTE PTR [rax+0x51]
   140017a39:	fcomi  st,st(6)
   140017a3b:	xor    DWORD PTR [rdx+0x1dab668d],0xf37eb9df
   140017a45:	(bad)  
   140017a46:	pop    rbx
   140017a47:	sub    esi,eax
   140017a49:	pop    rsi
   140017a4a:	pop    rdi
   140017a4b:	add    BYTE PTR [rbx+0x7c2fa58c],0x7c
   140017a52:	xor    al,ch
   140017a54:	movabs al,ds:0x54245000068163af
   140017a5d:	and    esi,esp
   140017a5f:	jne    0x140017a55
   140017a61:	sub    BYTE PTR [rax-0x2a],bh
   140017a64:	popf   
   140017a65:	test   esi,edi
   140017a67:	rex.WR sub BYTE PTR [rbx+0x6f82e48],r13b
   140017a6e:	(bad)  
   140017a6f:	fcmovnbe st,st(6)
   140017a71:	ds out dx,eax
   140017a73:	sub    ebp,DWORD PTR [rcx+0x790be4b9]
   140017a79:	out    0x4e,al
   140017a7b:	mov    edi,0xf0b35f79
   140017a80:	rcl    DWORD PTR [rbp+0x112b981],1
   140017a86:	jne    0x140017aad
   140017a88:	xlat   BYTE PTR ds:[rbx]
   140017a89:	(bad)  
   140017a8a:	jmp    0x140017a8c
   140017a8c:	push   0xffffffffad6a3eec
   140017a91:	add    DWORD PTR [rcx-0x878dd1e],edi
   140017a97:	inc    BYTE PTR [rdi]
   140017a99:	xor    BYTE PTR [rbp+0x59f32840],0xc1
   140017aa0:	xchg   ebx,eax
   140017aa1:	jg     0x140017a6f
   140017aa3:	pop    rdi
   140017aa4:	and    BYTE PTR [rdi-0x2b4e9b33],bl
   140017aaa:	cld    
   140017aab:	test   al,0xbd
   140017aad:	verr   WORD PTR [rbp-0x184e8d9]
   140017ab4:	div    DWORD PTR [rdi-0x151982]
   140017aba:	mov    WORD PTR [rbx],?
   140017abc:	sti    
   140017abd:	cld    
   140017abe:	scas   eax,DWORD PTR es:[rdi]
   140017abf:	sub    al,0xe1
   140017ac1:	mov    bh,0xed
   140017ac3:	int3   
   140017ac4:	sub    BYTE PTR [rbx+0x48],dl
   140017ac7:	addr32 je 0x140017a84
   140017aca:	div    ecx
   140017acc:	sahf   
   140017acd:	(bad)  
   140017ace:	mov    edi,0xef4cc2d
   140017ad3:	movabs ds:0x96851c9c94010b7b,al
   140017adc:	or     dl,BYTE PTR [rbx]
   140017ade:	sbb    al,0xa
   140017ae0:	adc    BYTE PTR [rcx],ah
   140017ae2:	or     BYTE PTR [rdi],0xdc
   140017ae5:	mov    ch,al
   140017ae7:	scas   eax,DWORD PTR es:[rdi]
   140017ae8:	jle    0x140017af0
   140017aea:	jnp    0x140017b3b
   140017aec:	loopne 0x140017afa
   140017aee:	retf   
   140017aef:	mov    DWORD PTR [rdi+0x54],ebx
   140017af2:	add    bh,bl
   140017af4:	jmp    0x140017b6c
   140017af6:	(bad)  
   140017af7:	and    al,0x30
   140017af9:	pop    rbp
   140017afa:	in     eax,dx
   140017afb:	fdivr  DWORD PTR [rax+rbx*8]
   140017afe:	int3   
   140017aff:	sbb    eax,0xf2b9bfdd
   140017b04:	fiadd  WORD PTR [rax]
   140017b06:	stos   BYTE PTR es:[rdi],al
   140017b07:	retf   
   140017b08:	clc    
   140017b09:	mov    edi,0xe5af7a41
   140017b0e:	(bad)  
   140017b0f:	push   rsi
   140017b10:	(bad)  
   140017b11:	in     al,0x10
   140017b13:	movabs al,ds:0xa29f9067bd5a6a90
   140017b1c:	cld    
   140017b1d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017b1e:	(bad)  
   140017b1f:	sub    DWORD PTR [rdi],0x33
   140017b22:	cld    
   140017b23:	xchg   ebp,eax
   140017b24:	rex.X (bad) 
   140017b26:	loopne 0x140017ab2
   140017b28:	movabs al,ds:0x5b59d5023f49a578
   140017b32:	js     0x140017b8f
   140017b34:	movsxd ecx,DWORD PTR [rsi+0x5e8fb992]
   140017b3a:	adc    eax,0x9881d1e8
   140017b3f:	mov    edi,0xcadcf4b7
   140017b44:	lods   eax,DWORD PTR ds:[rsi]
   140017b45:	cmp    bl,al
   140017b47:	jp     0x140017b46
   140017b49:	rex.WB mov es,WORD PTR [r9+0x41]
   140017b4d:	or     al,0xaa
   140017b4f:	mov    al,0x3
   140017b51:	sub    BYTE PTR [rip+0xffffffff89c6cd83],0x54        # 0xc9c848db
   140017b58:	xchg   edx,eax
   140017b59:	sub    BYTE PTR [rdx*2-0x2069d286],al
   140017b60:	rex.XB (bad) 
   140017b62:	sub    dh,BYTE PTR [rbx-0x1d73dca2]
   140017b68:	jg     0x140017b22
   140017b6a:	(bad)  
   140017b6b:	cmp    DWORD PTR [rdx+0x1df0f9dc],edi
   140017b71:	lahf   
   140017b72:	mov    esi,0x2ed1b7e6
   140017b77:	loope  0x140017bf6
   140017b79:	or     edi,DWORD PTR gs:[rdi+0x240e76d]
   140017b80:	imul   ecx,DWORD PTR [rax-0xfc1a117],0xffffff8d
   140017b87:	mov    edi,0x4717661f
   140017b8c:	mov    al,0x79
   140017b8e:	(bad)  
   140017b8f:	sub    DWORD PTR [rdx],0xc9a0d1bb
   140017b95:	push   rax
   140017b96:	xchg   esi,eax
   140017b97:	adc    esp,DWORD PTR [rbp+0x347ec7ff]
   140017b9d:	int    0x3d
   140017b9f:	cmp    ah,dh
   140017ba1:	imul   edx,DWORD PTR [rsp+rax*4+0x700545f8],0x4aedb601
   140017bac:	add    BYTE PTR [rax],0xd0
   140017baf:	fcomip st,st(4)
   140017bb1:	sbb    al,0x3a
   140017bb3:	jne    0x140017ba0
   140017bb5:	(bad)  
   140017bb7:	popf   
   140017bb8:	std    
   140017bb9:	(bad)  
   140017bba:	mov    ebp,0x2c2d84d
   140017bbf:	(bad)  
   140017bc0:	fwait
   140017bc1:	ret    0xb326
   140017bc4:	ret    0x59f6
   140017bc7:	shl    DWORD PTR [rdx+0x10b7259b],0x9f
   140017bce:	pop    rcx
   140017bcf:	outs   dx,DWORD PTR ds:[rsi]
   140017bd0:	adc    r14b,r12b
   140017bd3:	not    DWORD PTR [rdi+0x2d]
   140017bd6:	stos   DWORD PTR es:[rdi],eax
   140017bd7:	rex.WRXB mov es,WORD PTR [r12+r15*1]
   140017bdb:	jmp    0x183e44867
   140017be0:	xchg   esi,eax
   140017be1:	in     al,0x32
   140017be3:	(bad)
   140017be6:	icebp  
   140017be7:	add    al,0xc4
   140017be9:	push   0x4e4f72b
   140017bee:	(bad)  
   140017bef:	out    dx,eax
   140017bf0:	or     DWORD PTR [rax+0x51],ebp
   140017bf3:	add    edi,ebx
   140017bf5:	mov    ebp,0x833c0046
   140017bfa:	push   rax
   140017bfb:	or     DWORD PTR [rbp+0x73],eax
   140017bfe:	rex.RXB lods al,BYTE PTR ds:[rsi]
   140017c00:	sub    dl,cl
   140017c02:	fnsave [rsi+0x53]
   140017c05:	(bad)  
   140017c06:	and    BYTE PTR [rdi-0x4],0x51
   140017c0a:	shr    esi,0xbb
   140017c0d:	mov    cl,0x72
   140017c0f:	lahf   
   140017c10:	rex.RXB push r9
   140017c12:	lods   al,BYTE PTR ds:[rsi]
   140017c13:	adc    ecx,DWORD PTR [rax]
   140017c15:	test   BYTE PTR [rcx],0xf9
   140017c18:	pop    rbx
   140017c19:	es (bad) 
   140017c1b:	mov    ebp,edx
   140017c1d:	cli    
   140017c1e:	(bad)  
   140017c1f:	outs   dx,BYTE PTR ds:[rsi]
   140017c20:	std    
   140017c21:	(bad)  
   140017c22:	mov    ch,0xbf
   140017c24:	mov    DWORD PTR [rdi],ebx
   140017c26:	add    al,0xd8
   140017c28:	jg     0x140017be0
   140017c2a:	in     eax,dx
   140017c2b:	cmp    al,0x61
   140017c2d:	ret    0xf38f
   140017c30:	inc    BYTE PTR [rdi+0x6e]
   140017c33:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017c34:	test   DWORD PTR [rbx-0x321c9785],esp
   140017c3a:	add    al,0xf4
   140017c3c:	rex.WX or BYTE PTR [rax],sil
   140017c3f:	fs xchg edi,eax
   140017c41:	mov    DWORD PTR [rbx+0x72],esi
   140017c44:	fs add eax,0x9b423fde
   140017c4a:	jg     0x140017c41
   140017c4c:	rex.WRB mov r12,cs
   140017c4f:	sar    DWORD PTR [rax+0x11],0x45
   140017c53:	add    DWORD PTR [rdi],edx
   140017c55:	adc    eax,0xf2dd8bc0
   140017c5a:	rex push rcx
   140017c5c:	icebp  
   140017c5d:	imul   ebx,DWORD PTR [rax+0x7d1f06ac],0xb7a9c6ed
   140017c67:	ja     0x140017c71
   140017c69:	jnp    0x140017c27
   140017c6b:	out    dx,eax
   140017c6c:	ds int3 
   140017c6e:	rex.WX xchg BYTE PTR [rsi],sil
   140017c71:	movabs ds:0xbf882be49d20594e,eax
   140017c7a:	sbb    dl,dh
   140017c7c:	add    bl,BYTE PTR [rbx+0x43ef0155]
   140017c82:	sub    eax,edi
   140017c84:	and    DWORD PTR [rdi-0xc],esp
   140017c87:	sub    r12b,BYTE PTR [r10-0x5]
   140017c8b:	ror    DWORD PTR [rax],1
   140017c8d:	mov    esi,0x38e404ac
   140017c92:	xor    DWORD PTR [rdi],ebx
   140017c94:	and    edx,DWORD PTR [rsi+rbp*2+0x39909180]
   140017c9b:	scas   al,BYTE PTR es:[rdi]
   140017c9c:	(bad)  
   140017c9d:	movabs ds:0xa9611a2809da9191,eax
   140017ca6:	mov    dl,0x1b
   140017ca8:	or     al,dl
   140017caa:	paddsb mm4,QWORD PTR [rcx]
   140017cad:	rex.WRXB or r15b,BYTE PTR [r9]
   140017cb0:	sub    ah,cl
   140017cb2:	xor    eax,0x3e8c64c8
   140017cb7:	adc    r12,rsi
   140017cba:	rex.WR
   140017cbb:	rex jrcxz 0x140017cc9
   140017cbe:	loopne 0x140017d1f
   140017cc0:	(bad)  
   140017cc1:	retf   
   140017cc2:	mov    WORD PTR [rax],es
   140017cc4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017cc5:	(bad)  
   140017cc6:	ret    0x7e5f
   140017cc9:	loopne 0x140017c76
   140017ccb:	xchg   edi,eax
   140017ccc:	jmp    FWORD PTR [rdi]
   140017cce:	xor    ebx,DWORD PTR [rbx]
   140017cd0:	(bad)  
   140017cd1:	xor    dh,BYTE PTR [rsi+0x183f7e13]
   140017cd7:	ret    0x9b6f
   140017cda:	int3   
   140017cdb:	lods   eax,DWORD PTR ds:[rsi]
   140017cdc:	in     al,dx
   140017cdd:	(bad)  
   140017cde:	retf   
   140017cdf:	out    0x4a,al
   140017ce1:	loopne 0x140017d21
   140017ce3:	fdivp  st(3),st
   140017ce5:	fsub   QWORD PTR [rbp-0x4c]
   140017ce8:	neg    BYTE PTR [rbp-0x79094b3d]
   140017cee:	or     BYTE PTR [rbx+rsi*4],cl
   140017cf1:	jb     0x140017d41
   140017cf3:	in     eax,0xf3
   140017cf5:	(bad)  
   140017cf6:	rex.R pop rdx
   140017cf8:	ja     0x140017ce6
   140017cfa:	rex.R ja 0x140017cf1
   140017cfd:	iret   
   140017cfe:	jno    0x140017cf0
   140017d00:	xchg   r12d,eax
   140017d02:	stc    
   140017d03:	adc    BYTE PTR [rdi],dl
   140017d05:	adc    eax,0x64da05c0
   140017d0a:	nop
   140017d0b:	ins    BYTE PTR es:[rdi],dx
   140017d0c:	and    eax,DWORD PTR [rax]
   140017d0e:	xor    al,0x1b
   140017d10:	(bad)  
   140017d11:	mov    edx,0x4cce6dd7
   140017d16:	mov    fs,WORD PTR [rbp+rdx*4-0x6baffb09]
   140017d1d:	cmp    al,0xfa
   140017d1f:	fdiv   QWORD PTR [rip+0x546b42d7]        # 0x1946cbffc
   140017d25:	or     BYTE PTR [rdx+0x68],dh
   140017d28:	stc    
   140017d29:	loop   0x140017d8d
   140017d2b:	ins    DWORD PTR es:[rdi],dx
   140017d2c:	fst    QWORD PTR [rdx-0x84141e9]
   140017d32:	(bad)  [rdi-0x405a820e]
   140017d38:	stos   DWORD PTR es:[rdi],eax
   140017d39:	in     al,dx
   140017d3a:	sbb    BYTE PTR [rcx],dl
   140017d3c:	lods   eax,DWORD PTR ds:[rsi]
   140017d3d:	mov    dh,0xdd
   140017d3f:	icebp  
   140017d40:	or     al,0x9c
   140017d42:	rex
   140017d43:	rex.WXB rol r12,0xac
   140017d47:	or     BYTE PTR [rdx-0x4524111a],al
   140017d4d:	add    dl,ah
   140017d4f:	rcr    BYTE PTR ds:[rbp-0x7e],0x56
   140017d54:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017d55:	movabs eax,ds:0xd23e216f4837dc1
   140017d5e:	rcl    DWORD PTR [rcx+0x4fc2fe59],cl
   140017d64:	push   rbp
   140017d65:	and    eax,0xd0083c61
   140017d6a:	push   rsi
   140017d6b:	or     BYTE PTR [rsi],dh
   140017d6d:	(bad)  [rbx+0x68]
   140017d70:	xor    BYTE PTR [rdi],bh
   140017d72:	fdivr  st,st(1)
   140017d74:	outs   dx,BYTE PTR ds:[rsi]
   140017d75:	clc    
   140017d76:	fcmove st,st(7)
   140017d78:	ds js  0x140017d63
   140017d7b:	pop    rdi
   140017d7c:	(bad)  
   140017d7d:	xor    bl,dl
   140017d7f:	(bad)  
   140017d80:	xchg   DWORD PTR [rdi+0x2a],edx
   140017d83:	(bad)  
   140017d85:	rex.X mov dil,0x73
   140017d88:	out    0xa,eax
   140017d8a:	lock xchg edi,eax
   140017d8c:	jns    0x140017d65
   140017d8e:	test   eax,0xfd7ee81d
   140017d93:	sbb    bl,BYTE PTR [rdx-0x47]
   140017d96:	test   eax,0x7277ef02
   140017d9b:	sar    BYTE PTR [rbp+0x0],1
   140017d9e:	fnstenv [rbx+0x1fb9ef06]
   140017da4:	ret    
   140017da5:	test   esp,0x405ad3a2
   140017dab:	in     al,0xa2
   140017dad:	add    bh,BYTE PTR [rax+0x5c59db10]
   140017db3:	add    edi,0xbf1ff67b
   140017db9:	movsxd esp,ebx
   140017dbb:	clc    
   140017dbc:	jne    0x140017dfb
   140017dbe:	rex.W xlat BYTE PTR ds:[rbx]
   140017dc0:	jns    0x140017e2e
   140017dc2:	pop    rsi
   140017dc3:	rex.XB jg 0x140017dda
   140017dc6:	rex.WX add QWORD PTR [rbx],rcx
   140017dc9:	or     bl,ch
   140017dcb:	movabs ds:0xc5b10d6c5a9d756,eax
   140017dd4:	and    al,0x9d
   140017dd6:	test   BYTE PTR [rbx+rbx*1+0x311b46b0],dl
   140017ddd:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140017ddf:	in     al,0xe9
   140017de1:	(bad)  
   140017de2:	fisubr WORD PTR [rsi+rdi*4]
   140017de5:	sti    
   140017de6:	sti    
   140017de7:	xchg   edx,eax
   140017de8:	or     al,0x54
   140017dea:	rex.RB jno 0x140017e14
   140017ded:	rex.WX (bad) 
   140017def:	(bad)  
   140017df0:	lahf   
   140017df1:	fild   WORD PTR [rdx-0x70]
   140017df4:	cdq    
   140017df5:	push   rdi
   140017df6:	xor    dh,bh
   140017df8:	add    DWORD PTR [rax+0x76500f5a],ecx
   140017dfe:	or     al,0x8a
   140017e00:	fcmove st,st(0)
   140017e02:	shr    dh,1
   140017e04:	ret    
   140017e05:	jmp    0x140017e02
   140017e07:	add    esp,DWORD PTR [rax+0x2b9a4e59]
   140017e0d:	add    BYTE PTR [rax-0x6b],dh
   140017e10:	mov    DWORD PTR [rsi+0x72],ecx
   140017e13:	mov    dl,0xcf
   140017e15:	std    
   140017e16:	and    BYTE PTR [rax-0x61],cl
   140017e19:	(bad)  
   140017e1a:	in     eax,0xf6
   140017e1c:	rex.WX (bad) 
   140017e1e:	add    BYTE PTR [rbp-0x294ffe9e],al
   140017e24:	rcl    BYTE PTR [rbx],1
   140017e26:	mov    edi,0x9fbef8f1
   140017e2b:	std    
   140017e2c:	fcomp  st(0)
   140017e2e:	shr    BYTE PTR [rcx],1
   140017e30:	ins    BYTE PTR es:[rdi],dx
   140017e31:	idiv   ecx
   140017e33:	jg     0x140017e65
   140017e35:	test   DWORD PTR [rdi+0x12eccedc],edi
   140017e3b:	add    BYTE PTR [rax],al
   140017e3d:	(bad)  
   140017e3e:	and    cl,0xb9
   140017e41:	sub    DWORD PTR [rsi+rdi*4+0x70],esi
   140017e45:	xor    ebp,DWORD PTR [rip+0xffffffffbe0bdf5e]        # 0xfe0d5da9
   140017e4b:	pop    rsp
   140017e4c:	mov    esp,0x117bce26
   140017e51:	and    DWORD PTR [rdx-0x26],edx
   140017e54:	ja     0x140017e93
   140017e56:	xchg   esi,eax
   140017e57:	(bad)  
   140017e58:	(bad)  
   140017e59:	scas   eax,DWORD PTR es:[rdi]
   140017e5a:	pop    rbx
   140017e5b:	push   rsi
   140017e5c:	adc    edi,DWORD PTR [rsi-0x2bd1ff58]
   140017e62:	mov    dh,0xdd
   140017e64:	adc    eax,0x1a452ea0
   140017e69:	rex.WRX imul r8,QWORD PTR [rdi+0x2e],0x4d
   140017e6e:	or     edi,DWORD PTR [rdi]
   140017e70:	sbb    al,0x3
   140017e72:	jne    0x140017e76
   140017e74:	mov    WORD PTR [rcx-0x5e9054c9],es
   140017e7a:	mov    ebp,0xcc6c0b90
   140017e7f:	(bad)  
   140017e80:	sbb    esi,esp
   140017e82:	(bad)  
   140017e83:	and    bh,BYTE PTR [rsi+rsi*4-0x7bf3914e]
   140017e8a:	push   rax
   140017e8b:	test   eax,0xd7b90fc5
   140017e90:	jle    0x140017e1e
   140017e92:	rex adc eax,0x5e508b9
   140017e98:	(bad)  
   140017e99:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140017e9a:	xor    BYTE PTR [rdx-0x2a],bl
   140017e9d:	ds repz add al,0x16
   140017ea1:	rex.RX mov WORD PTR [rip+0xffffffffc2307a39],ss        # 0x10231f8e1
   140017ea8:	rcr    BYTE PTR [rcx],1
   140017eaa:	jle    0x140017ef3
   140017eac:	adc    DWORD PTR [rcx],esp
   140017eae:	movabs ds:0xaad69a84a806e578,eax
   140017eb7:	rex.WXB and rcx,QWORD PTR [r11]
   140017eba:	mov    BYTE PTR [rax],al
   140017ebc:	push   rdi
   140017ebd:	adc    dl,BYTE PTR [rdx-0x50d034ce]
   140017ec3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017ec4:	imul   ebp,DWORD PTR [rcx+0x14d27b99],0x74ae6ce5
   140017ece:	xchg   ebx,eax
   140017ecf:	rex.X or BYTE PTR [rax+0x4c299b08],al
   140017ed6:	(bad)  
   140017ed7:	shr    eax,1
   140017ed9:	lock mov edi,0xec4f0ff8
   140017edf:	jns    0x140017ee7
   140017ee1:	pop    rcx
   140017ee2:	clc    
   140017ee3:	jae    0x140017f53
   140017ee5:	dec    DWORD PTR [rdi]
   140017ee7:	mov    edx,0x8e76dbf0
   140017eec:	jle    0x140017e87
   140017eee:	iret   
   140017eef:	(bad)  
   140017ef0:	(bad)  
   140017ef1:	cmc    
   140017ef2:	or     dl,bh
   140017ef4:	mov    esi,0x7f3086f4
   140017ef9:	rex.RB (bad) 
   140017efb:	shl    BYTE PTR [rip+0x68241e1e],cl        # 0x1a8259d1f
   140017f01:	xchg   esi,eax
   140017f02:	and    BYTE PTR [rcx+0x2f],dl
   140017f05:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017f06:	(bad)  
   140017f07:	sar    DWORD PTR [rdi+rbp*8+0x7a22aebf],cl
   140017f0e:	rex.W
   140017f0f:	lock movabs ds:0x27815c19db90b802,al
   140017f19:	cmp    bh,BYTE PTR [rbx-0x19]
   140017f1c:	(bad)  
   140017f1e:	cmp    eax,0xcd03bc3e
   140017f23:	ins    DWORD PTR es:[rdi],dx
   140017f24:	sar    ebp,0x7c
   140017f27:	push   0xfffffffffffffff9
   140017f29:	cli    
   140017f2a:	xchg   esi,eax
   140017f2b:	add    BYTE PTR [rax+rsi*2-0x21],ah
   140017f2f:	jge    0x140017f2b
   140017f31:	rex.WX test QWORD PTR [rdi-0x4ac236d6],rsi
   140017f38:	call   0x14c844b67
   140017f3d:	adc    al,0x31
   140017f3f:	test   al,0xa2
   140017f41:	test   al,0x82
   140017f43:	mov    dh,0xea
   140017f45:	(bad)  
   140017f46:	rol    DWORD PTR [rbx+0x76],0x21
   140017f4a:	rex.RX push rdi
   140017f4c:	and    BYTE PTR [rbp-0x5f],dl
   140017f4f:	or     al,0xc
   140017f51:	(bad)  
   140017f52:	jnp    0x140017f23
   140017f54:	jle    0x140017f61
   140017f56:	adc    ebx,DWORD PTR [rdx]
   140017f58:	(bad)  
   140017f59:	(bad)  [rip+0xffffffff842ef270]        # 0xc43071d0
   140017f60:	jl     0x140017ee9
   140017f62:	add    DWORD PTR [rdx],ebp
   140017f64:	cld    
   140017f65:	in     al,0x96
   140017f67:	(bad)  
   140017f68:	sbb    ch,dl
   140017f6a:	retf   
   140017f6b:	add    bl,BYTE PTR [rdi-0x4e]
   140017f6e:	clc    
   140017f6f:	mov    ecx,0x90429fc6
   140017f74:	hlt    
   140017f75:	pop    rsi
   140017f76:	mov    dh,0x5a
   140017f78:	and    BYTE PTR [rdx],0xcf
   140017f7b:	pop    rdi
   140017f7c:	rol    DWORD PTR [rax+0x2],1
   140017f7f:	push   rsi
   140017f80:	mov    esi,0xbf03534
   140017f85:	(bad)  
   140017f86:	fnsave [rdi+0x7f1fb92f]
   140017f8c:	(bad)  
   140017f8d:	sub    eax,0x1cedd6ff
   140017f92:	out    dx,al
   140017f93:	shl    BYTE PTR [rcx-0xc],0x6d
   140017f97:	cmp    al,0xc0
   140017f99:	rex.XB pop r15
   140017f9b:	mov    edx,0xf7f76693
   140017fa0:	jno    0x140017f95
   140017fa2:	sbb    bl,BYTE PTR [rbx+0x17]
   140017fa5:	sar    esp,cl
   140017fa7:	or     BYTE PTR [rdx+0x6887a5d3],0xed
   140017fae:	xchg   ebx,eax
   140017faf:	pop    rdi
   140017fb0:	(bad)  
   140017fb1:	sahf   
   140017fb2:	or     DWORD PTR [rsp+rdx*2+0x0],ebx
   140017fb6:	(bad)  
   140017fb7:	shl    DWORD PTR [rsi-0xeefea23],0x20
   140017fbe:	jp     0x140017fb6
   140017fc0:	cli    
   140017fc1:	data16 cli 
   140017fc3:	jge    0x140017ff6
   140017fc5:	(bad)  
   140017fc6:	xor    BYTE PTR [rdx+0x7d94ae55],ch
   140017fcc:	(bad)  
   140017fcd:	xchg   bp,ax
   140017fcf:	and    DWORD PTR [rcx-0x4a],esp
   140017fd2:	rex.WX jge 0x140018051
   140017fd5:	icebp  
   140017fd6:	cmc    
   140017fd7:	rex.XB add r11d,esp
   140017fda:	xchg   ebp,eax
   140017fdb:	in     al,0x53
   140017fdd:	movabs eax,ds:0x91835ed2b10158f
   140017fe6:	movabs eax,ds:0x826e60c41443a80a
   140017fef:	sub    dl,BYTE PTR [rax+0x3a8a288c]
   140017ff5:	sub    BYTE PTR [rax-0x2f9c4553],0xc4
   140017ffc:	and    BYTE PTR [rbx-0x12],cl
   140017fff:	push   rcx
   140018000:	xchg   esp,eax
   140018001:	adc    DWORD PTR [rip+0x1a16d8bd],ebp        # 0x15a1858c4
   140018007:	push   rbp
   140018008:	call   0x199b4c47b
   14001800d:	jge    0x140017fa7
   14001800f:	ret    0x2780
   140018012:	or     rdi,QWORD PTR [rdx]
   140018015:	(bad)  
   140018016:	fist   WORD PTR [rcx+0x7c]
   140018019:	push   rdx
   14001801a:	fs lahf 
   14001801c:	(bad)  
   14001801d:	add    al,0xf7
   14001801f:	rex.WRB
   140018020:	movabs eax,gs:0xca2880512bda5ccb
   14001802a:	adc    BYTE PTR [rax-0x41061e2],0x95
   140018031:	(bad)  
   140018032:	cli    
   140018033:	(bad)  
   140018034:	gs jg  0x140017fc0
   140018037:	jbe    0x14001805c
   140018039:	mov    db6,rdx
   14001803c:	pop    rsi
   14001803d:	rcl    BYTE PTR [rdx-0x28],1
   140018040:	(bad)  
   140018041:	xor    bl,bl
   140018043:	cmp    DWORD PTR [rdx+0x5],esi
   140018046:	data16 shr cl,1
   140018049:	jle    0x140017fdd
   14001804b:	idiv   DWORD PTR [rcx+rdi*8-0x63]
   14001804f:	(bad)  
   140018050:	data16 ja 0x140018072
   140018053:	mov    edx,0xeed00237
   140018058:	xlat   BYTE PTR ds:[rbx]
   140018059:	add    al,0x2
   14001805b:	(bad)  
   14001805c:	rex.B (bad) 
   14001805e:	scas   al,BYTE PTR es:[rdi]
   14001805f:	faddp  st(3),st
   140018061:	xchg   edi,eax
   140018062:	jl     0x14001806d
   140018064:	(bad)  
   140018065:	(bad)  
   140018066:	pop    rsp
   140018067:	push   rsp
   140018068:	add    BYTE PTR [rdi],dl
   14001806a:	jp     0x140018037
   14001806c:	int3   
   14001806d:	sub    eax,0x2c7262a0
   140018072:	(bad)  
   140018073:	scas   eax,DWORD PTR es:[rdi]
   140018074:	fist   WORD PTR [rcx-0x5e7cc43a]
   14001807a:	mov    ecx,0x15445233
   14001807f:	(bad)  
   140018081:	jb     0x140018006
   140018083:	cli    
   140018084:	fiadd  WORD PTR [rax+0x1d]
   140018087:	jne    0x1400180ce
   140018089:	sbb    eax,0xf18d7213
   14001808e:	push   rdi
   14001808f:	fs rex.X
   140018091:	rex.WRXB mov BYTE PTR [r13-0x194a823f],r14b
   140018098:	xor    DWORD PTR [rdx+0x49a10576],esp
   14001809e:	cmp    ah,BYTE PTR [rsi-0xb]
   1400180a1:	popf   
   1400180a2:	lock rcl DWORD PTR [rax-0x62],cl
   1400180a6:	adc    bh,BYTE PTR [rsi+rax*2+0x1e]
   1400180aa:	retf   0x9c3e
   1400180ad:	xchg   ebx,eax
   1400180ae:	jg     0x1400180f2
   1400180b0:	rcl    edi,0xb9
   1400180b3:	pop    rdi
   1400180b4:	(bad)  
   1400180b5:	cmp    al,0x5f
   1400180b7:	add    DWORD PTR [rdx+0x2780a410],ebp
   1400180bd:	scas   eax,DWORD PTR es:[rdi]
   1400180be:	loopne 0x1400180a3
   1400180c0:	sub    esi,edi
   1400180c2:	(bad)  
   1400180c3:	in     al,dx
   1400180c4:	jmp    0x1400180d1
   1400180c6:	call   0x1579c436f
   1400180cb:	(bad)
   1400180ce:	push   0x41
   1400180d0:	push   rdx
   1400180d1:	fcmovu st,st(3)
   1400180d3:	add    al,0x60
   1400180d5:	sbb    esi,edi
   1400180d7:	cmp    esi,DWORD PTR [rsi-0x310780ae]
   1400180dd:	(bad)  
   1400180de:	pop    rsp
   1400180df:	stc    
   1400180e0:	jnp    0x14001814a
   1400180e2:	xlat   BYTE PTR ds:[rbx]
   1400180e3:	repz jg 0x1400180e5
   1400180e6:	xchg   esp,eax
   1400180e7:	hlt    
   1400180e8:	(bad)  
   1400180e9:	ins    DWORD PTR es:[rdi],dx
   1400180ea:	outs   dx,BYTE PTR ds:[rsi]
   1400180eb:	out    0xce,eax
   1400180ed:	adc    eax,0xfef38fe0
   1400180f2:	scas   eax,DWORD PTR es:[rdi]
   1400180f3:	ficomp WORD PTR [rip+0xffffffffa80607a6]        # 0xe807889f
   1400180f9:	mov    ecx,0x4790f655
   1400180fe:	push   rbp
   1400180ff:	adc    ebx,DWORD PTR [rdi]
   140018101:	sbb    al,BYTE PTR [rax-0xd]
   140018104:	out    0xdf,eax
   140018106:	(bad)  
   140018107:	lock and ch,BYTE PTR [rsi]
   14001810a:	sub    al,BYTE PTR [rax+0x736b6897]
   140018110:	add    DWORD PTR [rcx],eax
   140018112:	add    BYTE PTR [rip+0x5bb1ce87],ch        # 0x19bb34f9f
   140018118:	xor    bl,bh
   14001811a:	out    dx,al
   14001811b:	rex.WRX ror BYTE PTR [rax-0x7f7501a7],0x5a
   140018123:	add    eax,0x157eaddf
   140018128:	or     dl,BYTE PTR [rsi+0x5f]
   14001812b:	pop    rsi
   14001812c:	push   rdi
   14001812d:	xor    eax,0xa57d0b9
   140018132:	fld    TBYTE PTR [rbx-0x65a8aee8]
   140018138:	rcl    BYTE PTR [rbx+0x45],0xc4
   14001813c:	sub    bh,BYTE PTR [rax-0x42]
   14001813f:	mov    edi,0xa0440644
   140018144:	imul   eax,DWORD PTR [rbp+0x2],0x75
   140018148:	gs or  al,al
   14001814b:	rex.WX jg 0x1400180e3
   14001814e:	ins    BYTE PTR es:[rdi],dx
   14001814f:	mov    WORD PTR [rsi+0x3f10abda],ss
   140018155:	rex.RXB fistp QWORD PTR fs:[r11+0x12]
   14001815a:	nop
   14001815b:	(bad)  
   14001815c:	fild   QWORD PTR [rip+0xffffffffa19c17d4]        # 0xe19d9936
   140018162:	iret   
   140018163:	mov    al,BYTE PTR [rcx+0x21b4108b]
   140018169:	test   dl,dl
   14001816b:	push   rdi
   14001816d:	pop    rax
   14001816e:	mov    edi,0x99940379
   140018173:	jle    0x140018127
   140018175:	jge    0x140018178
   140018177:	push   rdi
   140018178:	(bad)  
   140018179:	push   rbx
   14001817a:	fwait
   14001817b:	icebp  
   14001817c:	(bad)  
   14001817d:	fdivrp st(2),st
   14001817f:	test   DWORD PTR [rbx-0x6ec28282],ebp
   140018185:	(bad)  
   140018188:	or     bh,bh
   14001818a:	(bad)  
   14001818b:	in     eax,dx
   14001818c:	sbb    al,0xc4
   14001818e:	(bad)  
   14001818f:	add    esp,edx
   140018191:	(bad)  
   140018192:	repnz sub DWORD PTR [rdi-0x2cb3d441],0x9877ba20
   14001819d:	jmp    0x1400181b4
   14001819f:	cwde   
   1400181a0:	(bad)  
   1400181a1:	ja     0x140018176
   1400181a3:	(bad)  
   1400181a4:	mov    DWORD PTR [rdi],edi
   1400181a6:	jrcxz  0x14001812b
   1400181a8:	ffreep st(6)
   1400181aa:	rex.RB add eax,0x6d6d12f0
   1400181b0:	rex.X xchg eax,eax
   1400181b2:	add    BYTE PTR [rbx+rdx*4+0x1be6c761],al
   1400181b9:	stc    
   1400181ba:	je     0x1400181d8
   1400181bc:	or     ebp,ebx
   1400181be:	mov    ebx,0xea0062
   1400181c3:	(bad)  
   1400181c4:	xchg   ebp,eax
   1400181c5:	cli    
   1400181c6:	stc    
   1400181c7:	(bad)  
   1400181c8:	(bad)  
   1400181c9:	adc    ebp,edx
   1400181cb:	retf   0x7b58
   1400181ce:	sub    eax,0x4470575
   1400181d4:	jne    0x1400181eb
   1400181d6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400181d7:	(bad)  
   1400181d8:	(bad)  
   1400181d9:	rex.RX jne 0x1400181f1
   1400181dc:	push   rsp
   1400181dd:	pop    rcx
   1400181de:	rex.R pop rbx
   1400181e0:	pushf  
   1400181e1:	push   rbx
   1400181e2:	jns    0x140018168
   1400181e4:	rex.WX adc rax,0x41c96545
   1400181ea:	lock push rax
   1400181ec:	pop    rsi
   1400181ed:	or     al,0xe6
   1400181ef:	test   ebx,0x4852be89
   1400181f5:	or     eax,DWORD PTR [rdx+0x10eeb3de]
   1400181fb:	lods   al,BYTE PTR ds:[rsi]
   1400181fc:	es and ah,ah
   1400181ff:	pop    rax
   140018200:	mov    esi,0x45bb00a6
   140018205:	iret   
   140018206:	mov    esp,0x4b79c39e
   14001820b:	repnz and DWORD PTR [rip+0xffffffffc9c88346],ecx        # 0x109ca0558
   140018212:	imul   eax,DWORD PTR [rdx],0xe672cdb2
   140018218:	rex.R neg BYTE PTR [rcx-0x16]
   14001821c:	xchg   BYTE PTR [rdi-0x3],ch
   14001821f:	(bad)          # 0x156c9081c
   140018220:	nop    esp
   140018223:	test   edi,eax
   140018225:	(bad)  
   140018226:	jp     0x14001820e
   140018228:	mov    cl,0xbd
   14001822a:	jg     0x14001820b
   14001822c:	rex.RB loope 0x14001825e
   14001822f:	mov    bh,0xed
   140018231:	mov    ecx,0xf0342d02
   140018236:	addr32 jl 0x140018219
   140018239:	xor    DWORD PTR [rdi+0x10dcccd2],0x4441dc6f
   140018243:	adc    eax,0xda52f400
   140018248:	(bad)  
   140018249:	mov    bh,BYTE PTR [rsi+0x7fa18e7b]
   14001824f:	std    
   140018250:	movabs ds:0x80006e2db6a97802,al
   140018259:	mov    al,0x48
   14001825b:	cmp    eax,0xa9a36ec7
   140018260:	ja     0x140018259
   140018262:	rex.R mov WORD PTR [rax+0xb2ac730],ds
   140018269:	jb     0x140018280
   14001826b:	test   DWORD PTR [rcx-0x3eed551],edi
   140018271:	stos   BYTE PTR es:[rdi],al
   140018272:	xchg   edx,eax
   140018273:	in     al,0x9d
   140018275:	rex.WRX or al,0xa8
   140018278:	stos   DWORD PTR es:[rdi],eax
   140018279:	test   al,0x82
   14001827b:	(bad)  
   14001827c:	push   rcx
   14001827d:	fwait
   14001827e:	fwait
   14001827f:	(bad)  
   140018280:	cld    
   140018281:	or     BYTE PTR [rbx],0xbb
   140018284:	cld    
   140018285:	ss (bad) 
   140018287:	rex.WX movabs rsp,0x7413ca824d6c1ca6
   140018291:	rex.W (bad) 
   140018293:	mov    ebp,0x5e6b6d98
   140018298:	rex.X
   140018299:	rex.WX fcomp DWORD PTR [rcx+0x43]
   14001829d:	(bad)  
   14001829e:	push   rsi
   14001829f:	mov    eax,0xa5ef84ae
   1400182a4:	rol    BYTE PTR [rsi-0x44984393],0xbe
   1400182ab:	mov    edi,0x3fad0ed4
   1400182b0:	fstp   st(7)
   1400182b2:	js     0x1400182b5
   1400182b4:	rex.W in al,dx
   1400182b6:	jp     0x14001823b
   1400182b8:	ret    
   1400182b9:	rcr    edi,1
   1400182bb:	jns    0x14001832b
   1400182bd:	in     al,0xbf
   1400182bf:	inc    DWORD PTR [rbx-0x2e38dc5d]
   1400182c5:	es std 
   1400182c7:	cs pop rdx
   1400182c9:	(bad)  
   1400182ca:	mov    bl,0x6d
   1400182cc:	(bad)  [rbx+0x5]
   1400182cf:	and    BYTE PTR [rdx],0x79
   1400182d2:	call   0x1b800fb06
   1400182d7:	fistp  WORD PTR [rax]
   1400182d9:	out    0x8f,al
   1400182db:	in     al,dx
   1400182dc:	(bad)  
   1400182dd:	out    0x1b,al
   1400182df:	mov    DWORD PTR [rax+0x5ff6303f],edi
   1400182e5:	rex.XB sub ecx,DWORD PTR [r15]
   1400182e8:	jg     0x140018286
   1400182ea:	(bad)  
   1400182ec:	jns    0x14001833f
   1400182ee:	add    DWORD PTR [rsp+rdx*2+0x401476db],edi
   1400182f5:	(bad)  
   1400182f6:	imul   esp,DWORD PTR [rax-0x53654c47],0x5dcd5776
   140018300:	jne    0x140018297
   140018302:	ret    
   140018303:	outs   dx,DWORD PTR ds:[rsi]
   140018304:	sbb    eax,0x22bad815
   140018309:	push   rsp
   14001830a:	mov    ch,0x95
   14001830c:	hlt    
   14001830d:	adc    ch,dl
   14001830f:	sbb    BYTE PTR [rcx+0x55],dl
   140018312:	push   rcx
   140018313:	lods   eax,DWORD PTR ds:[rsi]
   140018314:	mov    esi,0x5dda8c28
   140018319:	add    dl,dl
   14001831b:	iret   
   14001831c:	or     eax,0x8278401d
   140018321:	movabs al,ds:0x71e5ed6b092a9ee4
   14001832a:	js     0x1400182f6
   14001832c:	mov    esi,0xb760539
   140018331:	outs   dx,DWORD PTR ds:[rsi]
   140018332:	mov    esi,0x56e6b7bc
   140018337:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018338:	loope  0x1400182bc
   14001833a:	pop    rsp
   14001833b:	or     bh,BYTE PTR [rdi+0x9]
   14001833e:	adc    eax,DWORD PTR [rax]
   140018340:	rex.WRB mul QWORD PTR [rip+0x5dfd88ff]        # 0x19dff0c46
   140018347:	mov    cl,0xaf
   140018349:	rex.WRXB
   14001834a:	rex.RXB retf 
   14001834c:	call   rdi
   14001834e:	jrcxz  0x140018329
   140018350:	retf   0x441d
   140018353:	rex.W
   140018354:	or     r15d,DWORD PTR [rdi+0x79]
   140018358:	push   0xfffffffffffffff0
   14001835a:	out    0x7e,eax
   14001835c:	jmp    0xe09086f2
   140018361:	ffree  st(4)
   140018363:	repz out dx,eax
   140018365:	es jrcxz 0x140018367
   140018368:	rex.X mov dil,0x73
   14001836b:	lock add bl,BYTE PTR [rdi+0x5ccf7de0]
   140018372:	lea    edx,[rbp-0x53be391]
   140018378:	int    0x11
   14001837a:	mov    esp,0xf77897b7
   14001837f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018380:	jns    0x140018351
   140018382:	cmp    eax,0x4bc01517
   140018387:	mov    ecx,0x5405019d
   14001838c:	add    ebx,esp
   14001838e:	(bad)  
   14001838f:	ja     0x1400183a7
   140018391:	out    dx,eax
   140018392:	out    dx,al
   140018393:	push   rsp
   140018394:	xor    al,0xdc
   140018396:	mov    DWORD PTR [rcx-0x23],edx
   140018399:	add    BYTE PTR [rax+0x2f6b6710],ch
   14001839f:	jg     0x1400183e2
   1400183a1:	xchg   ebp,eax
   1400183a2:	add    al,0xff
   1400183a5:	mov    edx,0x22a01756
   1400183aa:	(bad)  
   1400183ab:	xor    eax,0x168fe165
   1400183b0:	adc    eax,0xeca262b0
   1400183b5:	mov    ebx,0xd22f343b
   1400183ba:	jo     0x1400183b9
   1400183bc:	repz push rax
   1400183be:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400183bf:	loope  0x140018357
   1400183c1:	(bad)  
   1400183c2:	ds mov bl,0xf8
   1400183c5:	rex retf 
   1400183c7:	(bad)  
   1400183c8:	or     eax,DWORD PTR [rbx+0x5f]
   1400183cb:	movabs ds:0x2b210217363bfc82,al
   1400183d4:	mov    esp,DWORD PTR [rax+0x30764f25]
   1400183da:	es mov ah,0x1e
   1400183dd:	or     BYTE PTR [rbx+0x1b],al
   1400183e0:	pop    rsp
   1400183e1:	rex.RX xor BYTE PTR [rcx+0x7a],r10b
   1400183e5:	(bad)  
   1400183e6:	scas   al,BYTE PTR es:[rdi]
   1400183e7:	out    dx,eax
   1400183e8:	xchg   edi,eax
   1400183e9:	dec    ecx
   1400183eb:	(bad)  
   1400183ec:	(bad)  
   1400183ed:	std    
   1400183ee:	sub    al,0x32
   1400183f0:	jmp    0x19ff9d56c
   1400183f5:	call   0x130269270
   1400183fa:	rex.RB in al,dx
   1400183fc:	ds add eax,0xc7aefba2
   140018402:	shr    BYTE PTR [rsi-0x2088cba2],cl
   140018408:	sbb    DWORD PTR [rsi-0x42],esp
   14001840b:	jne    0x14001845e
   14001840d:	add    DWORD PTR [rsp+rdx*4-0x3fafe625],edi
   140018414:	sar    DWORD PTR [rbx+rsi*2+0x133d9de3],cl
   14001841b:	ret    
   14001841c:	mov    ebx,0xbae6f4ab
   140018421:	ss cwde 
   140018423:	pcmpeqb mm1,mm4
   140018426:	mov    bh,0x37
   140018428:	mov    ebp,DWORD PTR [rdi+0x1575f02]
   14001842e:	push   rbp
   14001842f:	sub    eax,0x9353a00a
   140018434:	mov    ebx,0x50026507
   140018439:	test   al,0xe0
   14001843b:	rex.WR jl 0x1400184a9
   14001843e:	adc    DWORD PTR [rsi-0x51],ecx
   140018441:	fmul   DWORD PTR [rbx]
   140018443:	fldcw  WORD PTR [rdx+0x4a1fcd2b]
   140018449:	call   FWORD PTR [rdi+0x9]
   14001844c:	cmp    al,0xb
   14001844e:	fistp  QWORD PTR [rcx+0x1f]
   140018451:	jle    0x14001843a
   140018453:	cli    
   140018454:	sub    BYTE PTR [rbx+0x24409a83],dl
   14001845a:	sar    BYTE PTR [rdi],1
   14001845c:	pop    rbx
   14001845d:	outs   dx,DWORD PTR ds:[rsi]
   14001845e:	xor    al,BYTE PTR [rcx+0x77]
   140018461:	fs push rax
   140018463:	and    BYTE PTR [rax],al
   140018465:	fcomi  st,st(4)
   140018467:	(bad)  
   140018468:	retf   0x140a
   14001846b:	(bad)  
   14001846c:	or     DWORD PTR [rbx*2-0x48500053],ebx
   140018473:	jge    0x14001845a
   140018475:	retf   0xc03f
   140018478:	test   BYTE PTR [rdi+rbx*4-0x41],0xbb
   14001847d:	loope  0x14001843d
   14001847f:	out    dx,eax
   140018480:	jne    0x1400184bd
   140018482:	rex.RXB and r9d,r10d
   140018485:	ja     0x140018438
   140018487:	jae    0x140018472
   140018489:	rex.WRXB jo 0x140018474
   14001848c:	adc    ebx,DWORD PTR [rdi]
   14001848e:	movabs al,ds:0x2a2e9bdd403d3d3
   140018497:	js     0x140018442
   140018499:	mov    bh,0x36
   14001849b:	or     cl,BYTE PTR [rax]
   14001849d:	add    BYTE PTR [rdx+0x27],al
   1400184a0:	loopne 0x140018466
   1400184a2:	sbb    edi,edx
   1400184a4:	(bad)  
   1400184a5:	ds push rax
   1400184a7:	push   rdi
   1400184a8:	sbb    al,ch
   1400184aa:	test   eax,0xed663a03
   1400184af:	jmp    0x140018499
   1400184b1:	(bad)  
   1400184b2:	fisttp WORD PTR [rcx-0x17b28aff]
   1400184b8:	je     0x14001847e
   1400184ba:	fcmovbe st,st(7)
   1400184bc:	adc    eax,0xb910686b
   1400184c1:	and    bh,al
   1400184c3:	adc    ch,BYTE PTR [rsi+0x34]
   1400184c6:	cld    
   1400184c7:	rex.RXB cli 
   1400184c9:	ds imul edi
   1400184cc:	outs   dx,DWORD PTR ds:[rsi]
   1400184cd:	jmp    FWORD PTR [rdi]
   1400184cf:	movabs eax,ds:0x307ec5cdc76b00ba
   1400184d8:	movabs eax,ds:0x37e99c7513c05e56
   1400184e1:	in     al,0xa0
   1400184e3:	jle    0x1400184a3
   1400184e5:	and    eax,DWORD PTR [rbp-0x66bbae70]
   1400184eb:	sbb    eax,ebx
   1400184ed:	(bad)  
   1400184ee:	clc    
   1400184ef:	mov    dl,0x12
   1400184f1:	enter  0x824a,0x61
   1400184f5:	mov    cl,0xc6
   1400184f7:	mov    DWORD PTR [rbp-0x40a41088],ecx
   1400184fd:	jb     0x1400184e4
   1400184ff:	outs   dx,DWORD PTR ds:[rsi]
   140018500:	ins    DWORD PTR es:[rdi],dx
   140018501:	(bad)  
   140018502:	cld    
   140018503:	(bad)  
   140018504:	cli    
   140018505:	std    
   140018506:	(bad)  
   140018507:	cmp    cx,di
   14001850a:	(bad)  
   14001850b:	and    al,0xf7
   14001850d:	loopne 0x1400184a1
   14001850f:	(bad)  
   140018510:	pop    rsi
   140018511:	and    DWORD PTR [rbp-0x78e31779],0xffffffb8
   140018518:	mov    eax,0xfa4da85d
   14001851d:	mov    ebp,0x5eb79f59
   140018522:	add    ch,bh
   140018524:	(bad)  
   140018525:	fcomi  st,st(7)
   140018527:	loopne 0x1400184d8
   140018529:	(bad)  
   14001852a:	(bad)  
   14001852b:	jmp    0x1855ed22e
   140018530:	neg    ebp
   140018532:	rex.XB enter 0x3eb0,0x4
   140018537:	jbe    0x14001850f
   140018539:	fidivr WORD PTR [rdx-0x19]
   14001853c:	mov    bh,0x2d
   14001853e:	mov    dl,0x1e
   140018540:	jnp    0x1400184ed
   140018542:	pop    rdi
   140018543:	mov    ?,esp
   140018545:	cmp    esp,ecx
   140018547:	adc    ecx,edi
   140018549:	js     0x140018566
   14001854b:	pop    rbx
   14001854c:	sbb    al,0x72
   14001854e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001854f:	in     al,dx
   140018550:	iret   
   140018551:	jl     0x14001852c
   140018553:	mov    dl,0xb8
   140018555:	stos   BYTE PTR es:[rdi],al
   140018556:	in     al,dx
   140018557:	(bad)  
   140018558:	ins    DWORD PTR es:[rdi],dx
   140018559:	jmp    0x1add63a8b
   14001855e:	mov    eax,0xd2ff27ee
   140018563:	mov    dh,0xf7
   140018565:	xchg   r14d,eax
   140018567:	(bad)  
   140018568:	(bad)  
   140018569:	(bad)
   14001856c:	loopne 0x140018552
   14001856e:	jns    0x14001856f
   140018570:	or     ecx,DWORD PTR [rip+0x1ea7fd7d]        # 0x15ea982f3
   140018576:	ds cld 
   140018578:	iret   
   140018579:	mov    edi,0x8d303930
   14001857e:	in     eax,dx
   14001857f:	sar    bh,1
   140018581:	movabs ds:0xaa8918bdadd8bff0,al
   14001858a:	(bad)  
   14001858b:	cmp    al,0x54
   14001858d:	loope  0x1400185fb
   14001858f:	mov    edi,0xf05db8bb
   140018594:	int    0xb4
   140018596:	outs   dx,DWORD PTR ds:[rsi]
   140018597:	(bad)  
   140018598:	shl    dh,0xfd
   14001859b:	fstp   st(5)
   14001859d:	not    DWORD PTR [rsi-0x63]
   1400185a0:	push   0xffffffffffffffa1
   1400185a2:	push   rbx
   1400185a3:	(bad)  
   1400185a4:	je     0x140018590
   1400185a6:	sbb    BYTE PTR [rsi-0x21217f62],0x80
   1400185ad:	ficomp WORD PTR [rsi+0x42]
   1400185b0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400185b1:	add    edx,esp
   1400185b3:	sbb    eax,0x50075542
   1400185b8:	rex.WRB or BYTE PTR [r13-0x2f7e5600],r11b
   1400185bf:	and    DWORD PTR [rsi+rcx*1-0x55fbc57f],eax
   1400185c6:	and    bh,bh
   1400185c8:	xlat   BYTE PTR ds:[rbx]
   1400185c9:	add    DWORD PTR [rcx+rdx*1+0x48],edx
   1400185cd:	push   rdi
   1400185ce:	and    esp,DWORD PTR [rcx-0x1bfa95b6]
   1400185d4:	xor    eax,DWORD PTR [rax+0x511ff96a]
   1400185da:	mov    es,WORD PTR [rbp+0x5503d04a]
   1400185e0:	mov    cl,BYTE PTR [rdx]
   1400185e2:	mov    dl,BYTE PTR [rbp+0x14]
   1400185e5:	and    al,0xb9
   1400185e7:	(bad)  
   1400185e8:	fidivr DWORD PTR [rcx-0x1b]
   1400185eb:	out    dx,al
   1400185ec:	fidiv  WORD PTR ds:[rcx+0x24381747]
   1400185f3:	enter  0x7cfa,0xae
   1400185f7:	rex.WRXB ins BYTE PTR es:[rdi],dx
   1400185f9:	and    ebp,DWORD PTR [rbx+0x4f]
   1400185fc:	sub    eax,0x356f33fb
   140018601:	neg    BYTE PTR ds:[rax]
   140018604:	and    al,0x9
   140018606:	push   0x6fe8e12d
   14001860b:	(bad)  
   14001860c:	fscale 
   14001860e:	outs   dx,DWORD PTR ds:[rsi]
   14001860f:	mov    edi,0x8b303930
   140018614:	(bad)  
   140018615:	(bad)  
   140018616:	mov    edx,0x4dedbffe
   14001861b:	sahf   
   14001861c:	movabs eax,ds:0xb9c617c7085b3dcd
   140018625:	mov    BYTE PTR [rax],al
   140018627:	pop    rsi
   140018628:	scas   al,BYTE PTR es:[rdi]
   140018629:	sub    eax,0x140e80a3
   14001862e:	add    eax,0x479ae57c
   140018633:	(bad)  
   140018634:	out    dx,eax
   140018635:	jge    0x140018674
   140018637:	fisttp QWORD PTR [rdi]
   140018639:	or     al,ah
   14001863b:	(bad)  
   14001863c:	pop    rdi
   14001863d:	push   rdx
   14001863e:	cmp    eax,DWORD PTR [rcx+rdx*1]
   140018641:	push   rdx
   140018642:	es adc eax,0xbe6fb2d6
   140018648:	stc    
   140018649:	out    0xc8,al
   14001864b:	scas   eax,DWORD PTR es:[rdi]
   14001864c:	gs jrcxz 0x140018665
   14001864f:	xor    ebp,edi
   140018651:	pop    rbp
   140018652:	je     0x140018641
   140018654:	cmp    ecx,DWORD PTR [rdi]
   140018656:	shl    BYTE PTR [rbx-0x4704fe80],cl
   14001865c:	sub    BYTE PTR [rcx],bl
   14001865e:	mov    ch,0xaa
   140018660:	cmp    al,0xf9
   140018662:	push   0x6c909c1b
   140018667:	xor    al,BYTE PTR [rbx-0x4a4505ec]
   14001866d:	cld    
   14001866e:	mov    dh,0xa6
   140018670:	add    eax,0x9e8b0
   140018675:	xchg   edx,eax
   140018676:	out    0x2f,eax
   140018678:	pop    rcx
   140018679:	rex.X and al,0x29
   14001867c:	test   eax,0x36028800
   140018681:	sbb    DWORD PTR [rbx-0x7cec681],esi
   140018687:	sar    DWORD PTR [rdi],cl
   140018689:	repz lock and eax,0xf63723f7
   140018690:	clc    
   140018691:	mov    ebx,0x72f3e057
   140018696:	outs   dx,BYTE PTR ds:[rsi]
   140018697:	in     eax,dx
   140018698:	(bad)
   14001869b:	enter  0x3642,0x17
   14001869f:	mov    bh,0x97
   1400186a1:	outs   dx,DWORD PTR ds:[rsi]
   1400186a2:	movsxd edi,esp
   1400186a4:	(bad)  
   1400186a5:	in     eax,dx
   1400186a6:	pop    rbp
   1400186a7:	ins    DWORD PTR es:[rdi],dx
   1400186a8:	mov    WORD PTR [rbp+riz*2+0x15],ds
   1400186ac:	jle    0x14001868c
   1400186ae:	neg    esi
   1400186b0:	mov    ebx,0xf6ecbbb3
   1400186b5:	mov    eax,DWORD PTR [rax+0x6b]
   1400186b8:	sub    DWORD PTR [rax+0x29],ecx
   1400186bb:	push   0xffffffffffffff82
   1400186bd:	(bad)  
   1400186be:	sub    BYTE PTR [rcx-0x7b],cl
   1400186c1:	rex.RX and r9d,DWORD PTR [rcx+0x21]
   1400186c5:	(bad)  
   1400186c6:	test   al,0x1
   1400186c8:	jg     0x1400186e2
   1400186ca:	adc    esp,DWORD PTR [rcx]
   1400186cc:	rex.RX
   1400186cd:	rex.X test al,0x44
   1400186d0:	movsxd eax,DWORD PTR [rax+0x4]
   1400186d3:	stc    
   1400186d4:	(bad)  
   1400186d5:	xor    al,0x84
   1400186d7:	add    al,0x49
   1400186d9:	add    al,0x7f
   1400186db:	sub    DWORD PTR [rax+0x3],esp
   1400186de:	(bad)  
   1400186df:	sbb    BYTE PTR [rdx+rdi*8-0x4f],cl
   1400186e3:	repnz movabs eax,ds:0x5a856bf42a54d42d
   1400186ed:	sti    
   1400186ee:	xchg   r9d,eax
   1400186f0:	(bad)  
   1400186f1:	rex.X sub eax,0xb6eedafd
   1400186f7:	fcmovnu st,st(5)
   1400186f9:	ins    DWORD PTR es:[rdi],dx
   1400186fa:	mov    ebx,0xceeeedd3
   1400186ff:	int3   
   140018700:	cmp    eax,0x79cf78fe
   140018705:	fcomip st,st(7)
   140018707:	outs   dx,BYTE PTR ds:[rsi]
   140018708:	(bad)  
   140018709:	lahf   
   14001870a:	jbe    0x1400186fb
   14001870c:	outs   dx,BYTE PTR ds:[rsi]
   14001870d:	iret   
   14001870e:	xchg   ebx,eax
   14001870f:	int3   
   140018710:	(bad)  
   140018711:	popf   
   140018712:	mov    ecx,0xb6676677
   140018717:	cmp    eax,0x3be73ce7
   14001871c:	push   0xfffffffff57bdae1
   140018721:	retf   
   140018722:	push   rsi
   140018723:	pop    rsp
   140018724:	cmp    eax,0x9a7b7aa3
   140018729:	ret    0x14da
   14001872c:	outs   dx,BYTE PTR ds:[rsi]
   14001872d:	jrcxz  0x14001875e
   14001872f:	sti    
   140018730:	div    DWORD PTR [rdx-0x230bdce4]
   140018736:	ret    
   140018737:	or     DWORD PTR [rax+rdi*4-0x4a088000],ebx
   14001873e:	lea    esi,[rbp+0x16]
   140018741:	xchg   ebp,eax
   140018742:	mov    WORD PTR [rdx+riz*8-0x21e49b64],fs
   140018749:	(bad)  
   14001874a:	or     BYTE PTR [rax-0x1ff8ce53],al
   140018750:	cld    
   140018751:	mov    cl,0xdb
   140018753:	and    ah,BYTE PTR [rbx-0x37]
   140018756:	rex.R cmc 
   140018758:	cmp    ah,ah
   14001875a:	test   DWORD PTR [rdi],esi
   14001875c:	(bad)  
   14001875d:	mov    al,BYTE PTR [rip+0xffffffffb31fe145]        # 0xf32168a8
   140018763:	(bad)  
   140018764:	retf   
   140018765:	mov    edx,0xef53d96a
   14001876a:	mov    edi,0x1794ee6c
   14001876f:	icebp  
   140018770:	clc    
   140018771:	push   0xffffffffffffff82
   140018773:	jae    0x14001877c
   140018775:	jb     0x1400187c7
   140018777:	ins    DWORD PTR es:[rdi],dx
   140018778:	sti    
   140018779:	jmp    0x13bc0cf74
   14001877e:	(bad)  
   14001877f:	cld    
   140018780:	in     eax,dx
   140018781:	push   0xffffffff855fbf36
   140018786:	(bad)  
   140018787:	inc    DWORD PTR [rbx]
   140018789:	stc    
   14001878a:	mov    ebx,0x3fccb8de
   14001878f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018790:	or     al,0xe0
   140018792:	(bad)
   140018797:	or     DWORD PTR cs:[rax+rax*2],0x5b
   14001879c:	stos   DWORD PTR es:[rdi],eax
   14001879d:	int    0x2f
   14001879f:	(bad)  
   1400187a1:	fnstcw WORD PTR [rbp-0x55]
   1400187a4:	addr32 push rsi
   1400187a6:	call   0xe7941b11
   1400187ab:	in     eax,0x7e
   1400187ad:	mov    eax,0x21a61f86
   1400187b2:	adc    eax,0x7dfc1477
   1400187b7:	xor    DWORD PTR [rdi-0x1110edc2],esi
   1400187bd:	mov    esp,0x5a162f4b
   1400187c2:	ins    BYTE PTR es:[rdi],dx
   1400187c3:	cmp    ecx,edi
   1400187c5:	sub    eax,DWORD PTR [rbx-0x55]
   1400187c8:	cmp    cl,al
   1400187ca:	sub    DWORD PTR [rcx],ecx
   1400187cc:	add    al,0x1
   1400187ce:	cmc    
   1400187cf:	and    cl,bh
   1400187d1:	in     al,dx
   1400187d2:	and    al,cl
   1400187d4:	mov    esp,0xa7c31a09
   1400187d9:	cmc    
   1400187da:	fdiv   QWORD PTR [rcx]
   1400187dc:	in     eax,0x91
   1400187de:	jb     0x1400187a9
   1400187e0:	popf   
   1400187e1:	loop   0x140018774
   1400187e3:	rex.RB adc eax,0x467c2394
   1400187e9:	(bad)  
   1400187ea:	(bad)  
   1400187eb:	(bad)  
   1400187ec:	rex.RX pop rdx
   1400187ee:	lahf   
   1400187ef:	pop    rsp
   1400187f0:	sar    BYTE PTR [rbp-0x34c7e610],cl
   1400187f6:	(bad)  
   1400187f7:	xor    edi,esp
   1400187f9:	xor    eax,0xd00937e8
   1400187fe:	sbb    al,al
   140018800:	(bad)
   140018803:	ret    0xa802
   140018806:	(bad)  
   140018807:	out    0x76,al
   140018809:	cld    
   14001880a:	(bad)  
   14001880b:	lods   eax,DWORD PTR ds:[rsi]
   14001880c:	jne    0x1400187a3
   14001880e:	int    0x0
   140018810:	fwait
   140018811:	mov    DWORD PTR [rdi],ebx
   140018813:	outs   dx,DWORD PTR ds:[rsi]
   140018814:	fsubr  st,st(7)
   140018816:	(bad)  
   140018817:	fisub  WORD PTR [rdi+0x47]
   14001881a:	push   0x60
   14001881c:	xor    ah,dl
   14001881e:	movsxd eax,DWORD PTR [rax]
   140018820:	test   eax,0xf3a9363b
   140018825:	stc    
   140018826:	in     eax,0x79
   140018828:	xchg   edx,eax
   140018829:	lods   eax,DWORD PTR ds:[rsi]
   14001882a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001882b:	mov    ecx,esp
   14001882d:	(bad)  
   14001882e:	and    esi,ecx
   140018830:	jmp    rcx
   140018832:	cli    
   140018833:	adc    esp,DWORD PTR ds:[rdi+0xde12858]
   14001883a:	cmp    eax,0xf8848009
   14001883f:	xor    eax,0x45c71ee4
   140018844:	jnp    0x140018897
   140018846:	enter  0xc5c8,0x4
   14001884a:	clc    
   14001884b:	pop    rdx
   14001884c:	rex.WXB sbb al,0xf
   14001884f:	cmp    bl,0x2a
   140018852:	shl    DWORD PTR [rax+riz*1],1
   140018855:	mov    edi,0x6ebe53f0
   14001885a:	fs (bad) 
   14001885c:	or     al,0x8
   14001885e:	jge    0x1400188c3
   140018860:	jmp    0x14bdeae4f
   140018865:	lahf   
   140018866:	xor    r13d,r11d
   140018869:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001886a:	ret    0x493f
   14001886d:	shl    BYTE PTR [rax+riz*8],1
   140018870:	(bad)
   140018873:	popf   
   140018874:	(bad)  
   140018875:	rex.WB fstp st(2)
   140018878:	push   rbx
   140018879:	mov    bh,0xce
   14001887b:	lods   eax,DWORD PTR ds:[rsi]
   14001887c:	jle    0x1400188a7
   14001887e:	retf   
   14001887f:	int3   
   140018880:	sbb    al,0x9b
   140018882:	pop    rcx
   140018883:	(bad)  
   140018884:	ror    bl,0x8c
   140018887:	adc    esi,edx
   140018889:	test   BYTE PTR [rbp-0x10f8fec4],al
   14001888f:	loopne 0x14001882f
   140018891:	rex.WXB ret 0xa231
   140018895:	sbb    BYTE PTR [rsi+0x1f1e6449],0x79
   14001889c:	xlat   BYTE PTR ds:[rbx]
   14001889d:	rex.B (bad) 
   14001889f:	(bad)  
   1400188a0:	shr    BYTE PTR [rsi-0x1c836cd5],cl
   1400188a6:	(bad)  
   1400188a7:	pop    rsp
   1400188a8:	mov    edi,0xfb7b8765
   1400188ad:	rex.WB scas al,BYTE PTR es:[rdi]
   1400188af:	xor    eax,0xa1fc2e0
   1400188b4:	mov    WORD PTR [rax+rbx*2+0x5],es
   1400188b8:	mov    ebx,0x911dde22
   1400188bd:	scas   eax,DWORD PTR es:[rdi]
   1400188be:	in     al,0x9c
   1400188c0:	jl     0x140018941
   1400188c2:	popf   
   1400188c3:	jnp    0x14001889b
   1400188c5:	xor    DWORD PTR [rbx-0x348b722d],ecx
   1400188cb:	mov    ebp,0x723c167b
   1400188d0:	hlt    
   1400188d1:	jl     0x140018909
   1400188d3:	mov    WORD PTR [rax-0x3],es
   1400188d6:	mov    ch,0xc1
   1400188d8:	adc    ah,BYTE PTR [ecx+0x43e2e00c]
   1400188df:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400188e1:	or     eax,0xbdd5f500
   1400188e6:	mov    bl,0x6
   1400188e8:	rex.WRX out 0x2d,al
   1400188eb:	imul   ecx,DWORD PTR [rbp-0x75],0x9
   1400188ef:	jnp    0x140018878
   1400188f1:	mov    bl,0xbc
   1400188f3:	mov    eax,0x9802be35
   1400188f8:	or     al,0x30
   1400188fa:	sub    eax,0x716ff91c
   1400188ff:	sar    DWORD PTR [rbp-0x41],1
   140018902:	rex.WRXB xchg r14,rax
   140018904:	fld    DWORD PTR [rax-0x71bc3d65]
   14001890a:	or     DWORD PTR [rax+rax*1+0x7c303331],esp
   140018911:	popf   
   140018912:	jae    0x140018947
   140018914:	mov    BYTE PTR [rdi-0x2b87f79],ah
   14001891a:	cmp    BYTE PTR [rbp-0x7dc7b7d],ah
   140018920:	pop    rsp
   140018921:	rex.WRXB (bad) 
   140018923:	xchg   ebx,eax
   140018924:	sub    BYTE PTR [rbx-0x76fd4ae0],dh
   14001892a:	add    al,0x2a
   14001892c:	popf   
   14001892d:	add    ah,BYTE PTR [rcx]
   14001892f:	ret    
   140018930:	adc    eax,0x85371080
   140018935:	clc    
   140018936:	jg     0x14001894c
   140018938:	rex.RB ret 0x7eef
   14001893c:	mov    WORD PTR [rdx+rdx*4],?
   14001893f:	jge    0x140018900
   140018941:	clc    
   140018942:	iret   
   140018943:	adc    eax,0x6c1eee3f
   140018948:	(bad)  
   140018949:	test   BYTE PTR [rsi-0x4],al
   14001894c:	rex.WXB add rdx,QWORD PTR [r13+0x0]
   140018950:	xchg   ebx,eax
   140018951:	add    ebp,edi
   140018953:	(bad)  
   140018954:	add    BYTE PTR [rax-0x6202543],ch
   14001895a:	rex.WX and rsp,QWORD PTR [rbp-0x59f73656]
   140018961:	and    al,BYTE PTR [rdx-0x12]
   140018964:	cwde   
   140018965:	or     cl,0xc
   140018968:	ins    BYTE PTR es:[rdi],dx
   140018969:	pushfw 
   14001896b:	sbb    eax,eax
   14001896d:	add    cl,BYTE PTR [rcx-0x34]
   140018970:	or     ah,bh
   140018972:	add    BYTE PTR [rsi-0x545211ac],cl
   140018978:	or     ah,BYTE PTR [rsi+rsi*4+0x60]
   14001897c:	xchg   ebx,eax
   14001897d:	jo     0x14001890c
   14001897f:	adc    ebx,DWORD PTR [rsi-0x15]
   140018982:	push   rbx
   140018983:	jg     0x14001894b
   140018985:	mov    bl,0x8b
   140018987:	loopne 0x14001898b
   140018989:	clc    
   14001898a:	jmp    0x140018925
   14001898c:	fimul  WORD PTR [rbx]
   14001898e:	adc    ecx,DWORD PTR [rax+0xa87ad97]
   140018994:	add    ch,BYTE PTR ds:[rsi+rcx*1-0x68]
   140018999:	cmp    al,0xb0
   14001899b:	add    eax,0x21288739
   1400189a0:	(bad)  
   1400189a1:	or     al,0xc6
   1400189a3:	leave  
   1400189a4:	hlt    
   1400189a5:	lods   eax,DWORD PTR ds:[rsi]
   1400189a6:	in     al,dx
   1400189a7:	popf   
   1400189a8:	icebp  
   1400189a9:	shl    bl,1
   1400189ab:	xchg   DWORD PTR [rdi-0x35],esp
   1400189ae:	mov    ?,WORD PTR [rdx]
   1400189b0:	ins    DWORD PTR es:[rdi],dx
   1400189b1:	lock sub DWORD PTR [rcx],ecx
   1400189b4:	(bad)  
   1400189b5:	add    eax,0xd268d8b8
   1400189ba:	sub    bh,BYTE PTR [rcx+rsi*8-0x268ab89c]
   1400189c1:	(bad)  
   1400189c2:	(bad)  
   1400189c3:	(bad)  
   1400189c4:	jbe    0x140018a1f
   1400189c6:	cmp    ebx,ebp
   1400189c8:	rex test eax,0x7de14d81
   1400189ce:	jb     0x140018a33
   1400189d0:	popf   
   1400189d1:	rcr    BYTE PTR [rbx],0x4e
   1400189d4:	or     eax,0x76c106c2
   1400189d9:	xchg   esi,eax
   1400189da:	cdq    
   1400189db:	and    bh,BYTE PTR [rdi-0x63]
   1400189de:	movabs ds:0xc12c12526f3386f2,eax
   1400189e7:	rex.XB movabs eax,ds:0xf4081edf605d92f3
   1400189f1:	ds out dx,al
   1400189f3:	(bad)  
   1400189f4:	lock mov ebp,0x1a043603
   1400189fa:	jge    0x1400189f8
   1400189fc:	iret   
   1400189fd:	mov    ebx,0x21c84001
   140018a02:	test   BYTE PTR [rax+0x63f49ba4],ah
   140018a08:	ror    eax,1
   140018a0a:	test   eax,0xf3bfa1ba
   140018a0f:	sub    edi,0x1feab9ef
   140018a15:	rcl    BYTE PTR [rcx+0x3283a55e],1
   140018a1b:	or     cl,0x43
   140018a1e:	movabs eax,ds:0x514a65edb54f6338
   140018a27:	(bad)  
   140018a28:	ins    BYTE PTR es:[rdi],dx
   140018a29:	loope  0x140018a98
   140018a2b:	rex.R fbld TBYTE PTR [rbp+0x38]
   140018a2f:	(bad)  
   140018a30:	and    eax,0xeb9b16c4
   140018a35:	std    
   140018a36:	rex.RB
   140018a37:	rex.WB clc 
   140018a39:	fadd   DWORD PTR [rax-0x3e76ad77]
   140018a3f:	mov    dl,0x3b
   140018a41:	(bad)  
   140018a42:	(bad)  
   140018a43:	and    ah,BYTE PTR [rsi]
   140018a45:	(bad)  
   140018a46:	add    BYTE PTR [rax+rax*2-0x7709acf7],0x4d
   140018a4e:	rex.W (bad) 
   140018a50:	adc    cl,cl
   140018a52:	movsxd ebp,DWORD PTR [rsi]
   140018a54:	or     BYTE PTR [rdx-0x741b0127],dl
   140018a5a:	xchg   BYTE PTR [rdx+0x471f1ed2],ah
   140018a60:	or     BYTE PTR [rbp+0x1018c608],dh
   140018a66:	push   rcx
   140018a67:	ins    DWORD PTR es:[rdi],dx
   140018a68:	out    0x60,eax
   140018a6a:	(bad)  
   140018a6b:	sbb    BYTE PTR [rcx+0x0],dh
   140018a6e:	add    BYTE PTR [rax],cl
   140018a70:	push   rdi
   140018a71:	rex.WB
   140018a72:	rex.R
   140018a73:	push   r12
   140018a75:	fdecstp 
   140018a77:	rex.RXB mov r15d,0x26c173bd
   140018a7d:	cld    
   140018a7e:	scas   eax,DWORD PTR es:[rdi]
   140018a7f:	sbb    bh,BYTE PTR [rdi-0x3b]
   140018a82:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018a83:	rex.X sbb eax,eax
   140018a86:	and    BYTE PTR fs:[rbx+rax*1],al
   140018a8a:	in     eax,0x96
   140018a8c:	mov    esp,0xffbdb275
   140018a91:	out    dx,al
   140018a92:	sbb    ecx,DWORD PTR [rsi+0x7f]
   140018a95:	xor    DWORD PTR [rbx-0x37],ebp
   140018a98:	out    0x8b,eax
   140018a9a:	ror    BYTE PTR [rbx+0x6ffced9f],0x8e
   140018aa1:	mov    ah,0x33
   140018aa3:	or     ecx,DWORD PTR [rax+0x5d20739b]
   140018aa9:	jns    0x140018a81
   140018aab:	js     0x140018aa7
   140018aad:	(bad)  
   140018aae:	cli    
   140018aaf:	ins    BYTE PTR es:[rdi],dx
   140018ab0:	rex.WR mov al,0xdc
   140018ab3:	rex.X jmp 0x140018b03
   140018ab6:	xchg   ecx,eax
   140018ab7:	movabs ds:0xb7a53c0302cc201b,al
   140018ac0:	shl    ebp,1
   140018ac2:	repnz sbb bl,BYTE PTR [rdi-0x7c]
   140018ac6:	and    al,0xaf
   140018ac8:	test   ebp,0xb80d42bf
   140018ace:	pop    rcx
   140018acf:	mov    BYTE PTR [rsi+rsi*8],cl
   140018ad2:	push   rdi
   140018ad3:	pop    rbx
   140018ad4:	lahf   
   140018ad5:	mov    edx,0x2fb5eb75
   140018ada:	movabs al,ds:0x3280a5fea55f24d9
   140018ae3:	or     cl,0x43
   140018ae6:	and    DWORD PTR [rip+0xffffffff9d9aac78],esp        # 0xdd9c3764
   140018aec:	(bad)  
   140018aed:	js     0x140018b1d
   140018aef:	jnp    0x140018b42
   140018af1:	lods   al,BYTE PTR ds:[rsi]
   140018af2:	cmp    BYTE PTR [rcx+0x3e69f615],dh
   140018af8:	cmovle r9,QWORD PTR [rbp+r15*8+0x49]
   140018afe:	leave  
   140018aff:	(bad)  
   140018b00:	xor    ah,bl
   140018b02:	outs   dx,BYTE PTR ds:[rsi]
   140018b03:	or     edi,ebx
   140018b05:	push   rdx
   140018b06:	mov    ecx,0xc09604c7
   140018b0b:	sub    al,0x22
   140018b0d:	and    eax,0x13320d4e
   140018b12:	lock mov al,dh
   140018b15:	clc    
   140018b16:	imul   esi,DWORD PTR [rbx+0x5f],0xffffff8b
   140018b1a:	add    BYTE PTR [rsi+0x1e],ch
   140018b1d:	sub    dl,BYTE PTR [rsi+0x83dc707]
   140018b23:	mov    dl,0x97
   140018b25:	pop    rsi
   140018b26:	mov    dl,BYTE PTR [rax-0x409b7372]
   140018b2c:	stc    
   140018b2d:	ret    0x85a6
   140018b30:	retf   
   140018b31:	movabs eax,ds:0xa164c0194352bee9
   140018b3a:	cwde   
   140018b3b:	adc    dh,BYTE PTR [rax+rax*1+0x53a3256c]
   140018b42:	mov    bh,0x5c
   140018b44:	cmp    eax,0xc12495f2
   140018b49:	int3   
   140018b4a:	and    BYTE PTR [rcx+riz*1+0x7c9647cd],cl
   140018b51:	rex.R pop rsi
   140018b53:	retf   0x3d84
   140018b56:	pop    rbp
   140018b57:	xchg   edi,eax
   140018b58:	xor    al,0x5e
   140018b5a:	and    al,0xb0
   140018b5c:	and    DWORD PTR [rip+0xffffffffc3b43088],edx        # 0x103b5bbea
   140018b62:	mov    al,BYTE PTR [rbx+rsi*1]
   140018b65:	lods   eax,DWORD PTR ds:[rsi]
   140018b66:	(bad)  
   140018b67:	stc    
   140018b68:	cmp    BYTE PTR [rcx],al
   140018b6a:	jno    0x140018b08
   140018b6c:	movabs al,ds:0xfdb3f2286a3bbab0
   140018b75:	rex.X
   140018b76:	adc    QWORD PTR [r13+rdx*1+0x31a57d8],rsp
   140018b7e:	call   0xf15af89e
   140018b83:	je     0x140018b50
   140018b85:	ret    0xce27
   140018b88:	(bad)  
   140018b89:	in     al,dx
   140018b8a:	or     BYTE PTR [rax+rbp*8],dh
   140018b8d:	push   rdi
   140018b8e:	push   0x28
   140018b90:	add    ebx,DWORD PTR [rax-0x7dadeba4]
   140018b96:	retf   
   140018b97:	fistp  QWORD PTR [rcx+0x68c4efbc]
   140018b9d:	mov    dh,0x8e
   140018b9f:	adc    bl,BYTE PTR [rbx]
   140018ba1:	sub    al,0xbc
   140018ba3:	pop    rax
   140018ba4:	out    dx,al
   140018ba5:	xor    al,0xb4
   140018ba7:	(bad)  
   140018ba8:	mov    edx,0x850214c7
   140018bad:	imul   edx,DWORD PTR [rdi+rcx*1],0x6a4c0d48
   140018bb4:	cdq    
   140018bb5:	and    eax,0x4840a898
   140018bba:	cwde   
   140018bbb:	add    al,0x22
   140018bbd:	and    eax,0xc38a8a62
   140018bc2:	adc    cl,BYTE PTR [rax]
   140018bc4:	cmp    DWORD PTR [rax],ebp
   140018bc6:	lods   al,BYTE PTR ds:[rsi]
   140018bc7:	loopne 0x140018bbf
   140018bc9:	rex.RB (bad) 
   140018bcb:	movabs ds:0xcf7cc4632feb6244,al
   140018bd4:	xor    DWORD PTR [rip+0xffffffffafa7a818],0x9afbbd7e        # 0xefa933f6
   140018bde:	mov    DWORD PTR [rsi],0xddd912c6
   140018be4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018be5:	repz cld 
   140018be7:	rex.WX or al,0x55
   140018bea:	add    BYTE PTR [rbx+0x3604090f],dl
   140018bf0:	add    ah,dl
   140018bf2:	(bad)  
   140018bf3:	jp     0x140018ba9
   140018bf5:	movabs ds:0xe3eae9336c314f2b,eax
   140018bfe:	xor    al,0x9f
   140018c00:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018c01:	sub    BYTE PTR [rax-0x69],cl
   140018c04:	xchg   DWORD PTR [rsi-0x4c1111ff],ebx
   140018c0a:	loop   0x140018c2a
   140018c0c:	rex.W add al,dl
   140018c0f:	or     bh,BYTE PTR [rbx]
   140018c11:	(bad)  
   140018c12:	(bad)  
   140018c13:	loopne 0x140018c2a
   140018c15:	(bad)  
   140018c16:	add    DWORD PTR [rdx+0x72],edx
   140018c19:	out    dx,al
   140018c1a:	test   BYTE PTR [rax],ch
   140018c1c:	adc    al,0x9e
   140018c1e:	adc    BYTE PTR [rdx+0x2c],ch
   140018c21:	dec    esi
   140018c23:	add    al,0x8e
   140018c25:	(bad)  
   140018c26:	rex.RXB adc eax,0xf1f7147f
   140018c2c:	sti    
   140018c2d:	jmp    0x14fe570f0
   140018c32:	xor    al,al
   140018c34:	loopne 0x140018cae
   140018c36:	mov    dl,0xe1
   140018c38:	(bad)  
   140018c39:	mov    edi,0x81c8fd5f
   140018c3e:	push   0x4b
   140018c40:	pop    rsp
   140018c41:	call   0x104c122e9
   140018c46:	push   rax
   140018c47:	add    eax,0xb0b89930
   140018c4c:	push   rbp
   140018c4d:	mov    bl,0xf6
   140018c4f:	rol    BYTE PTR [rsi-0xc780487],1
   140018c55:	and    edx,DWORD PTR fs:[rdx-0x7e]
   140018c59:	rex.WRB popf 
   140018c5b:	scas   eax,DWORD PTR es:[rdi]
   140018c5c:	outs   dx,BYTE PTR ds:[rsi]
   140018c5d:	adc    dh,dl
   140018c5f:	rex.RB cmp al,0xee
   140018c62:	pop    rax
   140018c63:	test   BYTE PTR [rdi+0x5bdcb3ad],bl
   140018c69:	repnz push rcx
   140018c6b:	jg     0x140018c38
   140018c6d:	xlat   BYTE PTR ds:[rbx]
   140018c6e:	pop    rdx
   140018c6f:	out    dx,eax
   140018c70:	call   QWORD PTR [rbx+0x18]
   140018c73:	or     al,0x22
   140018c75:	ins    BYTE PTR es:[rdi],dx
   140018c76:	and    BYTE PTR [rip+0x18905f57],ah        # 0x15891ebd3
   140018c7c:	(bad)  
   140018c7d:	and    eax,0x1e86fd66
   140018c82:	clc    
   140018c83:	(bad)  
   140018c84:	(bad)  
   140018c85:	add    edx,DWORD PTR [rdx-0x7b727c54]
   140018c8b:	(bad)  
   140018c8c:	adc    ecx,eax
   140018c8e:	ja     0x140018c9a
   140018c90:	loop   0x140018cfe
   140018c92:	cmp    eax,0x8ec0f2dd
   140018c97:	jns    0x140018ca8
   140018c99:	out    dx,eax
   140018c9a:	sbb    BYTE PTR [rbx+rdi*1+0xd],ch
   140018c9e:	rex.WRB test QWORD PTR [r13+0x19],0x72802a8
   140018ca6:	(bad)  
   140018ca7:	or     eax,0xefa80068
   140018cac:	cmp    BYTE PTR [rcx+0x59],dl
   140018caf:	sub    QWORD PTR [rip+0x6e08129c],rsi        # 0x1ae099f52
   140018cb6:	sub    BYTE PTR [rdi+0x1e56f7c3],0xde
   140018cbd:	fild   WORD PTR [rdi]
   140018cbf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018cc0:	jmp    0x105c1c369
   140018cc5:	or     ebx,DWORD PTR [rax+0x21]
   140018cc8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018cc9:	movabs ds:0x20b72074f0515808,al
   140018cd2:	add    BYTE PTR [rsi+0x19],cl
   140018cd5:	fs or  bl,dl
   140018cd8:	and    DWORD PTR [rsi+rdi*4+0x5f],esp
   140018cdc:	xchg   esp,eax
   140018cdd:	test   DWORD PTR [rdi+0x4d90bc9],0x382b3c80
   140018ce7:	push   rbx
   140018ce8:	rex.WXB movabs r11,0x667aeb03de63b47f
   140018cf2:	hlt    
   140018cf3:	and    ebx,DWORD PTR [rax+0x7e]
   140018cf6:	ins    DWORD PTR es:[rdi],dx
   140018cf7:	in     eax,dx
   140018cf8:	popf   
   140018cf9:	add    dl,BYTE PTR [rax+0x5]
   140018cfc:	xor    cl,bl
   140018cfe:	sub    BYTE PTR [rdx-0x57fc580],dh
   140018d04:	iret   
   140018d05:	ss pop rsp
   140018d07:	mov    ecx,0xeedd5ced
   140018d0c:	and    sil,BYTE PTR [rsp+r11*1]
   140018d10:	jle    0x140018d2a
   140018d12:	(bad)  
   140018d13:	adc    al,BYTE PTR [rbx+rcx*8]
   140018d16:	retf   
   140018d17:	adc    al,0x9d
   140018d19:	(bad)  
   140018d1a:	cmp    eax,0x49bbb9b0
   140018d1f:	movsxd ecx,DWORD PTR [rdi]
   140018d21:	rex.RXB cld 
   140018d23:	(bad)  
   140018d24:	int    0x59
   140018d26:	lock and eax,0xb7b904e
   140018d2c:	outs   dx,DWORD PTR ds:[rsi]
   140018d2d:	mov    esp,0x80dae775
   140018d32:	xor    al,0x76
   140018d34:	or     eax,0x4fc1ce4
   140018d39:	(bad)  
   140018d3a:	pop    rdi
   140018d3b:	out    dx,al
   140018d3c:	retf   
   140018d3d:	(bad)  
   140018d3e:	and    BYTE PTR [rdi+0x23f7496b],0x3b
   140018d45:	out    0xde,al
   140018d47:	dec    edx
   140018d49:	xchg   ecx,eax
   140018d4a:	sbb    DWORD PTR [rdi],esp
   140018d4c:	sar    BYTE PTR [rbx+rax*4-0x71],1
   140018d50:	movabs ds:0x8252140e500550c4,al
   140018d59:	jnp    0x140018daa
   140018d5b:	mov    ah,0x8e
   140018d5d:	sbb    al,0x3c
   140018d5f:	fnsave [rdx+0x1ec2081a]
   140018d65:	test   BYTE PTR es:[rsi-0x2fd6c036],0xf1
   140018d6d:	mov    bl,0x42
   140018d6f:	or     bl,cl
   140018d71:	add    BYTE PTR [rdi-0x29],al
   140018d74:	mov    ebp,0x4f8c4902
   140018d79:	sti    
   140018d7a:	jns    0x140018d3b
   140018d7c:	popf   
   140018d7d:	sbb    DWORD PTR [rdx],eax
   140018d7f:	rex.WB ins DWORD PTR es:[rdi],dx
   140018d81:	or     DWORD PTR [rdi+0x1],0x679ebf06
   140018d88:	jns    0x140018d0e
   140018d8a:	mov    dl,0x60
   140018d8c:	add    edi,DWORD PTR [rdi]
   140018d8e:	icebp  
   140018d8f:	movsxd ebp,DWORD PTR [rax+0x3c]
   140018d92:	jns    0x140018d77
   140018d94:	xchg   ebx,ebx
   140018d96:	repnz cmp DWORD PTR ds:[rdi],0x1e
   140018d9b:	repnz sub edi,DWORD PTR [rbx-0x4a81ebd1]
   140018da2:	(bad)  
   140018da3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018da4:	xchg   BYTE PTR [rsi+0x2680cb01],ah
   140018daa:	pop    rbp
   140018dab:	(bad)  
   140018dac:	cmp    eax,0x3b9eb367
   140018db1:	ds jne 0x140018daa
   140018db4:	stos   DWORD PTR es:[rdi],eax
   140018db5:	imul   eax,DWORD PTR [rdx+0x2f473e59],0x4478b9eb
   140018dbf:	xchg   edi,eax
   140018dc0:	lahf   
   140018dc1:	adc    ecx,DWORD PTR [rax]
   140018dc3:	add    al,0xa1
   140018dc5:	(bad)  
   140018dc6:	fcom   QWORD PTR [rax+0x50]
   140018dc9:	xor    eax,ebx
   140018dcb:	movabs ds:0x4fce42ca2760241d,al
   140018dd4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018dd5:	cli    
   140018dd6:	push   rdx
   140018dd7:	(bad)  
   140018dd8:	jmp    0x140018e19
   140018dda:	mov    WORD PTR [rax+rdi*8],ss
   140018ddd:	nop
   140018dde:	lahf   
   140018ddf:	(bad)  
   140018de0:	(bad)  
   140018de1:	add    BYTE PTR [rsp+rcx*4],cl
   140018de4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018de5:	scas   eax,DWORD PTR es:[rdi]
   140018de6:	fnstsw WORD PTR [rbx-0x28785517]
   140018dec:	(bad)  
   140018ded:	jmp    0x140018e2b
   140018def:	test   DWORD PTR [rsi+0x63],esp
   140018df2:	mov    esp,0x29fe1501
   140018df7:	add    BYTE PTR [rbp+0x0],ah
   140018dfa:	in     eax,0x41
   140018dfc:	and    DWORD PTR [rip+0xffffffffc77f7eb8],esp        # 0x107810cba
   140018e02:	cdq    
   140018e03:	fsubrp st(1),st
   140018e05:	lods   al,BYTE PTR ds:[rsi]
   140018e06:	retf   
   140018e07:	lahf   
   140018e08:	xchg   ebp,eax
   140018e09:	mov    cl,0x60
   140018e0b:	pop    rsp
   140018e0c:	(bad)  
   140018e0d:	jmp    0x140018de6
   140018e0f:	imul   ecx,DWORD PTR [rbx-0x42],0x7979679e
   140018e16:	(bad)  
   140018e17:	cmp    eax,0x1cb0ec12
   140018e1c:	add    al,0xbe
   140018e1e:	xchg   eax,eax
   140018e20:	(bad)
   140018e23:	sub    eax,0x130630bd
   140018e28:	pop    rcx
   140018e29:	(bad)  
   140018e2a:	fcom   st(7)
   140018e2c:	(bad)  
   140018e2d:	lods   al,BYTE PTR ds:[rsi]
   140018e2e:	rex.R pop rsp
   140018e30:	sahf   
   140018e31:	(bad)  
   140018e32:	pop    rbp
   140018e33:	jne    0x140018e10
   140018e35:	(bad)  
   140018e36:	test   DWORD PTR [rdi],ecx
   140018e38:	outs   dx,BYTE PTR ds:[rsi]
   140018e39:	cmp    al,0xde
   140018e3b:	xor    DWORD PTR [rcx-0x70],esi
   140018e3e:	addr32 sbb eax,0xc2a02452
   140018e44:	(bad)  
   140018e45:	and    eax,0x5ca00aa0
   140018e4a:	sub    BYTE PTR [rcx+rcx*1-0x52],dh
   140018e4e:	(bad)  
   140018e50:	stc    
   140018e51:	pop    rdx
   140018e52:	lea    ecx,[rdi+rdi*2+0x68]
   140018e56:	mov    ecx,0x35bb8ce7
   140018e5b:	and    BYTE PTR [rbx+0x7e],al
   140018e5e:	add    al,0x18
   140018e60:	jno    0x140018ec3
   140018e62:	adc    BYTE PTR [rcx],bl
   140018e64:	(bad)  
   140018e65:	(bad)  
   140018e66:	std    
   140018e67:	xor    BYTE PTR [rsi-0x67],cl
   140018e6a:	or     ebp,eax
   140018e6c:	lods   eax,DWORD PTR ds:[rsi]
   140018e6d:	mov    ebp,0x7213e48b
   140018e72:	jbe    0x140018e8b
   140018e74:	movabs ds:0x4bfa8e84821b7f3e,al
   140018e7d:	lea    eax,[rax+0x637e91f1]
   140018e83:	rex.WR jle 0x140018eee
   140018e86:	mov    eax,0xba9b99e5
   140018e8b:	(bad)  
   140018e8c:	std    
   140018e8d:	hlt    
   140018e8e:	lock jo 0x140018ee7
   140018e91:	rex.RB xchg r9d,eax
   140018e93:	imul   BYTE PTR [rbx-0x46]
   140018e96:	outs   dx,DWORD PTR ds:[rsi]
   140018e97:	or     al,BYTE PTR [rdx+0x5d]
   140018e9a:	xor    BYTE PTR [rdx-0x1f68b660],0x1b
   140018ea1:	(bad)  
   140018ea2:	je     0x140018ef8
   140018ea4:	xchg   edi,eax
   140018ea5:	sub    eax,0xa3beba19
   140018eaa:	rex.X lahf 
   140018eac:	mov    gs,WORD PTR [rdi]
   140018eae:	or     eax,0x649178c5
   140018eb3:	add    edi,DWORD PTR [rsi+0x4664047]
   140018eb9:	rex.WX stos BYTE PTR es:[rdi],al
   140018ebb:	pop    rsi
   140018ebc:	fadd   QWORD PTR [rip+0xffffffff8ac0b3c3]        # 0xcac24285
   140018ec2:	jmp    0x140018ec0
   140018ec4:	pop    rax
   140018ec5:	mov    eax,0x3cb09ebd
   140018eca:	es or  al,0xc8
   140018ecd:	frstor [rax+0x76049941]
   140018ed3:	out    dx,al
   140018ed4:	fst    QWORD PTR [rbx-0x53]
   140018ed7:	(bad)  
   140018ed8:	(bad)  
   140018ed9:	pop    rcx
   140018eda:	mov    ebp,0xc358f968
   140018edf:	retf   0xcf10
   140018ee2:	mov    ebp,esi
   140018ee4:	std    
   140018ee5:	push   0xfffffffffffffff9
   140018ee7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018ee8:	sbb    BYTE PTR [rcx+rax*1+0x46710f94],dl
   140018eef:	movabs al,ds:0xdcd50095f6c3f9b6
   140018ef8:	sub    ebx,eax
   140018efa:	push   rsi
   140018efb:	pop    rbp
   140018efc:	sbb    al,0x79
   140018efe:	(bad)  
   140018eff:	push   rdx
   140018f00:	cs setl ch
   140018f04:	mov    bh,0x91
   140018f06:	push   rdx
   140018f07:	mov    BYTE PTR [rdx+0x7f5cdcf5],ch
   140018f0d:	js     0x140018f26
   140018f0f:	mov    dil,BYTE PTR [r11+0x5c]
   140018f13:	icebp  
   140018f14:	btc    DWORD PTR [rip+0xffffffffc0380cc2],edx        # 0x100399bdd
   140018f1b:	xor    BYTE PTR [rsi-0x71e41c25],dl
   140018f21:	jbe    0x140018eff
   140018f23:	jg     0x140018f70
   140018f25:	xlat   BYTE PTR ds:[rbx]
   140018f26:	jne    0x140018f57
   140018f28:	and    ah,cl
   140018f2a:	icebp  
   140018f2b:	rol    DWORD PTR [rax+0x2a8034df],cl
   140018f31:	xor    BYTE PTR [rdx],0xa1
   140018f34:	leave  
   140018f35:	or     al,0xf7
   140018f37:	jnp    0x140018f8f
   140018f39:	sub    al,0xd8
   140018f3b:	xor    eax,0xfa376234
   140018f40:	mov    esi,0x8064117e
   140018f45:	(bad)  
   140018f46:	xchg   ebp,eax
   140018f47:	rex.RX jle 0x140018fc3
   140018f4a:	adc    ecx,DWORD PTR [rcx-0xe5c6e1e]
   140018f50:	es pushf 
   140018f52:	es (bad) 
   140018f54:	add    eax,DWORD PTR [rbp-0x2e0e5fa0]
   140018f5a:	(bad)  
   140018f5b:	push   rax
   140018f5c:	imul   BYTE PTR [rbx]
   140018f5e:	repz add ecx,DWORD PTR [rax]
   140018f61:	(bad)  
   140018f62:	mov    edx,0xaeecf9dd
   140018f67:	fnstenv [rdi+0x7f]
   140018f6a:	jae    0x140018f39
   140018f6c:	xor    eax,0xbe09c3af
   140018f71:	or     bh,bh
   140018f73:	xor    al,0x82
   140018f75:	mov    es,WORD PTR [rip+0xa0a1f2f]        # 0x14a0baeaa
   140018f7b:	add    BYTE PTR [rax-0x13],al
   140018f7e:	mov    ebp,0x3fabad93
   140018f83:	call   rcx
   140018f85:	xchg   ecx,eax
   140018f86:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140018f87:	(bad)  
   140018f88:	and    BYTE PTR [rcx-0x3e],dh
   140018f8b:	rex.WR xchg rcx,rax
   140018f8d:	xor    BYTE PTR [rbx+0x50],dl
   140018f90:	or     DWORD PTR [rcx+rdx*2],esp
   140018f93:	rex jle 0x140018fad
   140018f96:	mov    edi,0x7ada4000
   140018f9b:	movabs ds:0xfab054f77af47e88,eax
   140018fa4:	(bad)  
   140018fa5:	lahf   
   140018fa6:	movabs al,ds:0xfee7eb43d2f67cff
   140018faf:	jl     0x140018f9e
   140018fb1:	(bad)  
   140018fb2:	popf   
   140018fb3:	(bad)  
   140018fb4:	push   rcx
   140018fb5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140018fb6:	cld    
   140018fb7:	loop   0x140018fa8
   140018fb9:	imul   edx,DWORD PTR [rcx-0x3978eb31],0x0
   140018fc0:	retf   0xe286
   140018fc3:	lods   al,BYTE PTR ds:[rsi]
   140018fc4:	add    BYTE PTR [rbx],cl
   140018fc6:	sar    dh,0xab
   140018fc9:	mov    bh,0xd2
   140018fcb:	imul   DWORD PTR [rbp-0x25a26331]
   140018fd1:	xchg   edx,eax
   140018fd2:	rcr    BYTE PTR [rax+riz*1-0x5a],cl
   140018fd6:	lock adc al,0x7c
   140018fd9:	jge    0x14001904c
   140018fdb:	or     esp,DWORD PTR [rdx+0x4ddefff9]
   140018fe1:	(bad)  
   140018fe2:	stos   DWORD PTR es:[rdi],eax
   140018fe3:	out    dx,eax
   140018fe4:	out    0x81,al
   140018fe6:	(bad)  
   140018fe7:	xchg   ebx,eax
   140018fe8:	jl     0x140018fa2
   140018fea:	loop   0x140018f7b
   140018fec:	sar    DWORD PTR [rbx-0x72],cl
   140018fef:	jle    0x140019009
   140018ff1:	adc    BYTE PTR [rax+0x6e],dh
   140018ff4:	pop    rdi
   140018ff5:	jg     0x140018fdc
   140018ff7:	leave  
   140018ff8:	fwait
   140018ff9:	sahf   
   140018ffa:	mov    ebx,0xa7bda9ee
   140018fff:	sub    ah,BYTE PTR [rdi-0x30]
   140019002:	pop    rsp
   140019003:	clc    
   140019004:	xor    eax,0xa00d37d8
   140019009:	rex cmp DWORD PTR cs:[rcx+0x60],edx
   14001900e:	add    DWORD PTR [rbx+0x3e46da7b],edi
   140019014:	sbb    al,0xc
   140019016:	sub    ecx,eax
   140019018:	xor    BYTE PTR [rsi+0x3a8df00b],al
   14001901e:	adc    ebx,edi
   140019020:	and    BYTE PTR [rip+0xffffffffe01dc49a],0x8d        # 0x1201f54c1
   140019027:	rex pop rsi
   140019029:	ror    cl,1
   14001902b:	out    0x14,eax
   14001902d:	cld    
   14001902e:	sti    
   14001902f:	add    al,al
   140019031:	stc    
   140019032:	xchg   BYTE PTR [rcx],bh
   140019034:	lock (bad) 
   140019036:	dec    dh
   140019038:	sti    
   140019039:	outs   dx,BYTE PTR ds:[rsi]
   14001903a:	pop    rsi
   14001903b:	jle    0x14001901a
   14001903d:	outs   dx,DWORD PTR ds:[rsi]
   14001903e:	rex.RXB jmp 0x1400190a7
   140019041:	add    al,0xc1
   140019043:	out    0xd7,eax
   140019045:	(bad)  
   140019046:	sahf   
   140019047:	imul   ecx,DWORD PTR [rax],0x45e50055
   14001904d:	movabs eax,ds:0x6b1baf67b7b9e849
   140019056:	cwde   
   140019057:	movsxd edi,esi
   140019059:	or     al,0xc1
   14001905b:	(bad)  
   14001905c:	out    dx,eax
   14001905d:	lock xor al,0x80
   140019060:	xor    BYTE PTR [rcx+0x3e8d87ca],ah
   140019066:	lods   al,BYTE PTR ds:[rsi]
   140019067:	(bad)  
   140019068:	call   0x16203ee8e
   14001906d:	adc    al,0x83
   14001906f:	sbb    eax,DWORD PTR [rax+0x37de4041]
   140019075:	pushf  
   140019076:	jbe    0x1400190b5
   140019078:	mov    eax,0x779dde76
   14001907d:	lods   eax,DWORD PTR ds:[rsi]
   14001907e:	pop    rsp
   14001907f:	mov    al,0x19
   140019081:	rex.WRX
   140019082:	lock jne 0x1400190e0
   140019085:	out    dx,eax
   140019086:	xor    al,0x87
   140019088:	mov    edx,0x93446500
   14001908d:	xchg   esp,eax
   14001908e:	loopne 0x14001903e
   140019090:	sahf   
   140019091:	mov    dh,0xf1
   140019093:	out    dx,eax
   140019094:	sub    al,0x1e
   140019096:	(bad)  
   140019097:	cmp    ebp,DWORD PTR [rbx-0x13e3a0d3]
   14001909d:	jg     0x1400190af
   14001909f:	je     0x140019118
   1400190a1:	(bad)  
   1400190a2:	pop    rsp
   1400190a3:	adc    BYTE PTR [rax],0x17
   1400190a6:	xchg   esp,eax
   1400190a7:	lahf   
   1400190a8:	xchg   ecx,eax
   1400190a9:	xchg   edx,eax
   1400190aa:	adc    BYTE PTR [rsp+rcx*1],0xb9
   1400190ae:	jae    0x140019093
   1400190b0:	or     eax,0x91db7473
   1400190b5:	test   bh,0x3e
   1400190b8:	imul   DWORD PTR [rbx-0x244330bb]
   1400190be:	fstp   TBYTE PTR [rdx]
   1400190c0:	test   dh,ah
   1400190c2:	push   rbx
   1400190c3:	jl     0x1400190f9
   1400190c5:	fdiv   DWORD PTR [rdi]
   1400190c7:	or     eax,0xdca00ca1
   1400190cc:	sub    ah,cl
   1400190ce:	or     bl,BYTE PTR [rax-0x1]
   1400190d1:	jle    0x1400190ba
   1400190d3:	rex.WXB or rax,0xfffffffff6ec8ce0
   1400190d9:	xchg   edx,eax
   1400190da:	add    BYTE PTR [rsi-0x2f],bl
   1400190dd:	mov    esp,edi
   1400190df:	repnz pop rsi
   1400190e1:	loop   0x140019143
   1400190e3:	(bad)  
   1400190e4:	movabs ds:0x50af4ebfa5246275,al
   1400190ed:	rex.WRX jrcxz 0x1400190b7
   1400190f0:	iret   
   1400190f1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400190f2:	pop    rbp
   1400190f3:	rex.WRXB cld 
   1400190f5:	in     eax,dx
   1400190f6:	mov    bh,BYTE PTR [rbx-0x4a230342]
   1400190fc:	(bad)  
   1400190fd:	add    edx,DWORD PTR [rax]
   1400190ff:	retf   0x863f
   140019102:	retfw  
   140019104:	cmp    dl,BYTE PTR [rbp-0x8]
   140019107:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019108:	sbb    eax,0x151e742e
   14001910d:	in     eax,0x41
   14001910f:	jno    0x1400190b4
   140019111:	jo     0x140019118
   140019113:	rex sti 
   140019115:	xchg   ecx,eax
   140019116:	rex.RXB (bad) 
   140019118:	std    
   140019119:	in     al,dx
   14001911a:	pushf  
   14001911b:	idiv   ah
   14001911d:	jbe    0x1400190be
   14001911f:	(bad)  
   140019120:	idiv   DWORD PTR [rsi-0x591c782]
   140019126:	(bad)
   14001912a:	adc    al,BYTE PTR [rip+0xffffffffe77663c3]        # 0x12777f4f3
   140019130:	(bad)  
   140019131:	pand   mm3,QWORD PTR [rdi-0x50103902]
   140019138:	(bad)  [rax-0x5d906f9e]
   14001913e:	(bad)  
   14001913f:	push   rdi
   140019140:	rcr    DWORD PTR [rdi+0x6034d0c6],0xf9
   140019147:	push   rcx
   140019148:	pushf  
   140019149:	adc    eax,0xd57db470
   14001914e:	ins    DWORD PTR es:[rdi],dx
   14001914f:	xlat   BYTE PTR ds:[rbx]
   140019150:	movq   mm5,mm1
   140019153:	pop    rax
   140019154:	outs   dx,BYTE PTR ds:[rsi]
   140019155:	std    
   140019156:	adc    DWORD PTR [rcx+0xc530326],ecx
   14001915c:	jmp    0x1400191cf
   14001915e:	rex.W
   14001915f:	add    al,0xdf
   140019162:	or     edi,edi
   140019164:	js     0x140019129
   140019166:	sbb    al,0x7c
   140019168:	jmp    QWORD PTR [rbp+riz*8+0xf]
   14001916c:	idiv   DWORD PTR [rbp-0x309440c8]
   140019172:	icebp  
   140019173:	(bad)  
   140019174:	(bad)  
   140019175:	cmp    cl,al
   140019177:	(bad)
   14001917b:	not    BYTE PTR [rbp+0x50025ff2]
   140019181:	(bad)  
   140019182:	push   rax
   140019183:	jbe    0x140019109
   140019185:	(bad)  
   140019186:	ret    0x2d
   140019189:	pop    rdx
   14001918a:	outs   dx,DWORD PTR ds:[rsi]
   14001918b:	cwde   
   14001918c:	(bad)  
   14001918d:	cmp    dh,bl
   14001918f:	int    0xef
   140019191:	sbb    eax,0x6951d55a
   140019196:	sub    al,0x96
   140019198:	or     BYTE PTR [rdi-0x6e85bc77],bh
   14001919e:	(bad)  
   14001919f:	out    dx,eax
   1400191a0:	sbb    edi,ebx
   1400191a2:	or     al,0x30
   1400191a4:	pop    rdx
   1400191a5:	xor    eax,DWORD PTR [rdi+0x56540e0e]
   1400191ab:	std    
   1400191ac:	jp     0x140019199
   1400191ae:	pushf  
   1400191af:	push   rdi
   1400191b0:	pop    rsi
   1400191b1:	fdivr  DWORD PTR [rsi]
   1400191b3:	stos   DWORD PTR es:[rdi],eax
   1400191b4:	cmovle esp,eax
   1400191b7:	movsxd eax,ecx
   1400191b9:	push   rdi
   1400191ba:	stos   DWORD PTR es:[rdi],eax
   1400191bb:	jg     0x1400191c6
   1400191bd:	rex.X sbb DWORD PTR [rax-0x7],eax
   1400191c1:	push   rcx
   1400191c2:	or     rsi,rbp
   1400191c5:	in     eax,dx
   1400191c6:	imul   ebx,DWORD PTR [rip+0x7b267c39],0xfffffff9        # 0x1bb280e06
   1400191cd:	xchg   ebx,eax
   1400191ce:	jae    0x1400191eb
   1400191d0:	mov    edi,ebp
   1400191d2:	pop    rcx
   1400191d3:	add    BYTE PTR [rax],dh
   1400191d5:	cmp    DWORD PTR [rbp+rdi*8-0x4a],esp
   1400191d9:	(bad)  
   1400191da:	test   DWORD PTR [rip+0xffffffffef331d50],0xf968181c        # 0x12f34af34
   1400191e4:	shl    ebx,cl
   1400191e6:	scas   eax,DWORD PTR es:[rdi]
   1400191e7:	pop    rdi
   1400191e8:	stc    
   1400191e9:	out    0xbf,eax
   1400191eb:	in     al,dx
   1400191ec:	jmp    0x14001920a
   1400191ee:	(bad)  
   1400191ef:	test   DWORD PTR [rdx-0x52bd13d1],eax
   1400191f5:	(bad)  
   1400191f6:	and    eax,0x53006508
   1400191fb:	add    DWORD PTR [rbp+0x16],eax
   1400191fe:	shl    BYTE PTR [rsi-0x31],1
   140019201:	int    0x43
   140019203:	push   rdi
   140019204:	std    
   140019205:	repnz mov ds,esi
   140019208:	jne    0x14001919f
   14001920a:	test   dh,ah
   14001920c:	add    eax,DWORD PTR [rax]
   14001920e:	in     eax,0x70
   140019210:	in     eax,dx
   140019211:	ror    DWORD PTR [rbx+rsi*8+0x6b],0xd
   140019216:	sar    DWORD PTR [rdi],cl
   140019218:	jo     0x140019258
   14001921a:	(bad)  [rdx-0x250d5845]
   140019220:	adc    ebp,DWORD PTR [rdi-0x18924ea1]
   140019226:	mov    cl,0xb6
   140019228:	(bad)  
   140019229:	add    al,0x81
   14001922b:	lahf   
   14001922c:	push   0xffffffff8f4b65f1
   140019231:	pop    rdx
   140019232:	std    
   140019233:	rex.WXB adc r10b,cl
   140019236:	add    BYTE PTR [rsi+0x159e206],ah
   14001923c:	mov    ch,0xdf
   14001923e:	mov    ebp,0x4fc4fb3d
   140019243:	outs   dx,BYTE PTR ds:[rsi]
   140019244:	jmp    0x1400192a5
   140019246:	cmp    ebp,DWORD PTR [rdi+0x66]
   140019249:	std    
   14001924a:	ds add edx,edi
   14001924d:	jmp    0x14001928e
   14001924f:	push   rsi
   140019250:	rex.RXB iret 
   140019252:	cdq    
   140019253:	mov    cl,0x74
   140019255:	mul    DWORD PTR [rcx-0x3a844b3f]
   14001925b:	(bad)  
   14001925c:	outs   dx,DWORD PTR ds:[esi]
   14001925e:	jp     0x14001925e
   140019260:	lods   eax,DWORD PTR ds:[rsi]
   140019261:	cmp    DWORD PTR [rbp-0x641faf48],edi
   140019267:	pop    rcx
   140019268:	jl     0x140019257
   14001926a:	fistp  QWORD PTR [rdi+0x600aa184]
   140019270:	(bad)  
   140019271:	and    BYTE PTR [rsi-0x1241cfeb],bl
   140019277:	jo     0x1400192d4
   140019279:	xlat   BYTE PTR ds:[rbx]
   14001927a:	ror    BYTE PTR [rdi-0x72f2e8a9],cl
   140019280:	data16 sti 
   140019282:	neg    DWORD PTR [rbp-0x19012698]
   140019288:	sti    
   140019289:	sbb    eax,0xf9bd3c1f
   14001928e:	repnz pop rsi
   140019290:	test   BYTE PTR [rsi],bl
   140019292:	(bad)  
   140019293:	pop    rax
   140019294:	loopne 0x1400192bd
   140019296:	(bad)  
   140019297:	not    DWORD PTR [rax+rsi*8+0x15]
   14001929b:	or     al,BYTE PTR [rbp+0x2850a142]
   1400192a1:	adc    al,0xa
   1400192a3:	test   DWORD PTR [rdx-0x5f],eax
   1400192a6:	push   rax
   1400192a7:	sub    BYTE PTR [rdx+rcx*1],dl
   1400192aa:	test   DWORD PTR [rdx-0x5f],eax
   1400192ad:	push   rax
   1400192ae:	sub    BYTE PTR [rdx+rcx*1],dl
   1400192b1:	test   DWORD PTR [rdx-0x5f],eax
   1400192b4:	push   rax
   1400192b5:	sub    BYTE PTR [rdx+rcx*1],dl
   1400192b8:	test   DWORD PTR [rdx-0x5f],eax
   1400192bb:	push   rax
   1400192bc:	sub    BYTE PTR [rdx+rcx*1],dl
   1400192bf:	test   DWORD PTR [rdx-0x5f],eax
   1400192c2:	push   rax
   1400192c3:	sub    BYTE PTR [rsi-0x66f401e0],ah
   1400192c9:	and    esi,DWORD PTR [rax+0x0]
   1400192cc:	xlat   BYTE PTR ds:[rbx]
   1400192cd:	lahf   
   1400192ce:	(bad)  
   1400192cf:	ret    0x0
   1400192d2:	add    BYTE PTR [rax],al
   1400192d4:	rex.WB
   1400192d5:	rex.RB
   1400192d6:	rex.WRX
   1400192d7:	rex.R scas al,BYTE PTR es:[rdi]
   1400192d9:	rex.X (bad) 
   1400192db:	(bad)  
   1400192dc:	sub    BYTE PTR [rax],al
   1400192de:	add    BYTE PTR [rax],al
   1400192e0:	xor    BYTE PTR [rax],al
   1400192e2:	add    BYTE PTR [rax],al
   1400192e4:	(bad)  
   1400192e5:	add    BYTE PTR [rax],al
   1400192e7:	add    BYTE PTR [rcx],al
   1400192e9:	add    BYTE PTR [rax],ah
   1400192eb:	add    BYTE PTR [rax],al
   1400192ed:	add    BYTE PTR [rax],al
   1400192ef:	add    BYTE PTR [rax+0x25],al
	...
   1400194d1:	add    BYTE PTR [rax],al
   1400194d3:	add    BYTE PTR [rsi+0x79],cl
   1400194d6:	jg     0x14001951d
   1400194d8:	rex.XB sahf 
   1400194da:	rcl    BYTE PTR [rcx+0x3f666b53],0x59
   1400194e1:	push   rsi
   1400194e2:	rex.X or BYTE PTR [rax],al
	...
   14001958d:	add    BYTE PTR [rax],al
   14001958f:	add    BYTE PTR [rbx+riz*2+0x59],dl
   140019593:	add    eax,0xbabc9b44
   140019598:	cmp    edi,DWORD PTR [rdx-0x45c4000c]
   14001959e:	hlt    
   14001959f:	inc    BYTE PTR [rsp+rbx*4-0x41]
   1400195a3:	mov    esi,0x34455858
   1400195a8:	push   rsp
   1400195a9:	(bad)  
   1400195aa:	pop    rsp
   1400195ab:	add    eax,DWORD PTR [rax]
	...
   14001964d:	add    BYTE PTR [rax],al
   14001964f:	add    BYTE PTR [rbp+0x64],dl
   140019652:	pop    rdx
   140019653:	xor    al,0x3b
   140019655:	mov    ecx,0xba3bfaf2
   14001965a:	hlt    
   14001965b:	(bad)  
   14001965c:	cmp    edi,DWORD PTR [rdx-0x46c4010c]
   140019662:	hlt    
   140019663:	(bad)  
   140019664:	cmp    al,0xb1
   140019666:	in     al,dx
   140019667:	repz push rcx
   140019669:	push   0x71
   14001966b:	imul   edx,DWORD PTR [rdi+0x56],0x4d
   14001966f:	(bad)  
	...
   14001970c:	push   rbp
   14001970d:	(bad)  
   14001970e:	pop    rcx
   14001970f:	add    ecx,DWORD PTR [rcx-0x77]
   140019712:	lahf   
   140019713:	pushf  
   140019714:	cmp    edi,DWORD PTR [rcx-0x46c4010c]
   14001971a:	hlt    
   14001971b:	(bad)  
   14001971c:	cmp    esi,DWORD PTR [rdi-0x4bc4010c]
   140019722:	repz (bad) 
   140019724:	cmp    al,0xad
   140019726:	icebp  
   140019727:	(bad)  
   140019728:	cmp    al,0xa1
   14001972a:	out    dx,eax
   14001972b:	std    
   14001972c:	rex.WR outs dx,BYTE PTR ds:[rsi]
   14001972e:	mov    WORD PTR [rdi+0x8515256],cs
	...
   1400197cc:	push   rdi
   1400197cd:	pop    rax
   1400197ce:	rex.WRXB (bad) 
   1400197d0:	cmp    eax,0x3cf1eaa9
   1400197d5:	mov    al,0xf2
   1400197d7:	(bad)  
   1400197d8:	cmp    al,0xaf
   1400197da:	repnz (bad) 
   1400197dc:	cmp    al,0xac
   1400197de:	icebp  
   1400197df:	(bad)  
   1400197e0:	cmp    al,0xa7
   1400197e2:	lock (bad) 
   1400197e4:	cmp    esp,DWORD PTR [rax-0x66c40011]
   1400197ea:	out    dx,al
   1400197eb:	(bad)  
   1400197ec:	cmp    edx,DWORD PTR [rcx+0x684affee]
   1400197f2:	xchg   ebp,eax
   1400197f3:	xchg   esi,eax
   1400197f4:	push   rsi
   1400197f5:	rex.WRB push r8
   1400197f7:	or     DWORD PTR [rax],eax
	...
   140019885:	add    BYTE PTR [rax],al
   140019887:	add    BYTE PTR [rbx+0x51],dl
   14001988a:	pop    rsi
   14001988b:	add    DWORD PTR [rsi+0x65],ecx
   14001988e:	jge    0x14001990b
   140019890:	cmp    ebx,DWORD PTR [rdx-0x61c40111]
   140019896:	out    dx,eax
   140019897:	(bad)  
   140019898:	cmp    ebx,DWORD PTR [rsi-0x64c40011]
   14001989e:	out    dx,eax
   14001989f:	(bad)  
   1400198a0:	cmp    ebx,DWORD PTR [rax-0x6bc40112]
   1400198a6:	out    dx,al
   1400198a7:	(bad)  
   1400198a8:	cmp    ecx,DWORD PTR [rdi-0x76c40113]
   1400198ae:	in     eax,dx
   1400198af:	(bad)  
   1400198b0:	cmp    eax,DWORD PTR [rdx+0x5b4efeec]
   1400198b6:	add    DWORD PTR [rsi+0x6574c55],0x0
	...
   140019945:	add    BYTE PTR [rax],al
   140019947:	add    BYTE PTR [rsi+0x41],dl
   14001994a:	rex or edi,DWORD PTR [rip+0x3bded470]        # 0x17be06dc1
   140019951:	sub    esp,0xfffffffe
   140019954:	cmp    ecx,DWORD PTR [rax-0x75c40113]
   14001995a:	in     eax,dx
   14001995b:	(bad)  
   14001995c:	cmp    ecx,DWORD PTR [rbx-0x77c40113]
   140019962:	in     al,dx
   140019963:	(bad)  
   140019964:	cmp    eax,DWORD PTR [rbp-0x7cc40014]
   14001996a:	in     al,dx
   14001996b:	(bad)  
   14001996c:	cmp    eax,DWORD PTR [rcx+0x7e3cfeec]
   140019972:	jmp    0x140019973
   140019974:	cmp    al,0x79
   140019976:	(bad)  
   140019977:	cld    
   140019978:	push   rdx
   140019979:	push   rcx
   14001997a:	imul   esp,DWORD PTR [rsi+0x54],0x35c4d
	...
   140019a01:	add    BYTE PTR [rax],al
   140019a03:	add    BYTE PTR [rbp+0x35],cl
   140019a06:	add    DWORD PTR [r12+r15*1+0x56],ecx
   140019a0b:	pop    rbx
   140019a0c:	xor    bl,BYTE PTR [rax-0x2e]
   140019a0f:	push   QWORD PTR [rsi]
   140019a11:	data16 (bad) 
   140019a14:	cmp    BYTE PTR [rdi-0x1a],ch
   140019a17:	(bad)  
   140019a18:	cmp    DWORD PTR [rbx-0x17],esi
   140019a1b:	(bad)  
   140019a1c:	cmp    dh,BYTE PTR [rsi-0x16]
   140019a1f:	(bad)  
   140019a20:	cmp    dh,BYTE PTR [rdi-0x16]
   140019a23:	(bad)  
   140019a24:	cmp    dh,BYTE PTR [rsi-0x16]
   140019a27:	(bad)  
   140019a28:	cmp    dh,BYTE PTR [rdi-0x16]
   140019a2b:	(bad)  
   140019a2c:	cmp    edi,DWORD PTR [rax-0x15]
   140019a2f:	(bad)  
   140019a30:	cmp    edi,DWORD PTR [rax-0x15]
   140019a33:	(bad)  
   140019a34:	cmp    al,0x78
   140019a36:	jmp    0x140019a37
   140019a38:	cmp    eax,0x56f7e877
   140019a3d:	rex.WXB push r10
   140019a3f:	rex.RB push r12
   140019a41:	rex.WRXB pop r15
   140019a43:	add    al,BYTE PTR [rax]
	...
   140019a79:	add    BYTE PTR [rax],al
   140019a7b:	add    BYTE PTR [rcx+0x32],dl
   140019a7e:	(bad)  
   140019a7f:	add    dl,BYTE PTR [rbx+0x32]
   140019a82:	cmp    dl,BYTE PTR [rsi]
	...
   140019ac4:	rex.WRXB (bad) 
   140019ac6:	xor    BYTE PTR [rdx],cl
   140019ac8:	(bad)  
   140019ac9:	xor    ecx,DWORD PTR [rdx-0x4cc1d635]
   140019acf:	jmp    FWORD PTR [rip+0x31fec04a]        # 0x172005b1f
   140019ad5:	push   rsp
   140019ad6:	int    0xfe
   140019ad8:	xor    al,0x5c
   140019ada:	xlat   BYTE PTR ds:[rbx]
   140019adb:	push   QWORD PTR [rsi]
   140019add:	movsxd ebx,esi
   140019adf:	(bad)  
   140019ae0:	(bad)  
   140019ae1:	jecxz  0x140019ae2
   140019ae4:	(bad)  
   140019ae5:	push   0xffffffffffffffe6
   140019ae7:	(bad)  
   140019ae8:	cmp    BYTE PTR [rbp-0x18],ch
   140019aeb:	(bad)  
   140019aec:	cmp    BYTE PTR [rax-0x17],dh
   140019aef:	(bad)  
   140019af0:	cmp    DWORD PTR [rdx+rbp*8-0x1],esi
   140019af4:	cmp    dh,BYTE PTR [rdi-0x16]
   140019af7:	(bad)  
   140019af8:	cmp    edi,DWORD PTR [rdx-0x15]
   140019afb:	(bad)  
   140019afc:	(bad)  
   140019afd:	ja     0x140019ada
   140019aff:	out    0x58,eax
   140019b01:	rex.WB
   140019b02:	rex.RXB sub al,0x54
   140019b05:	push   rcx
   140019b06:	(bad)  
   140019b07:	add    DWORD PTR [rax],eax
	...
   140019b35:	add    BYTE PTR [rax],al
   140019b37:	add    BYTE PTR [rdi+0x32],cl
   140019b3a:	rex.RX add r10b,BYTE PTR [rbx+0x32]
   140019b3e:	cmp    eax,DWORD PTR [rax+0x3e]
   140019b41:	xor    edi,DWORD PTR [rdi-0x73]
	...
   140019b80:	rex.RXB sub DWORD PTR [r9],r14d
   140019b83:	add    DWORD PTR [rdx+rbp*1+0x3e],eax
   140019b87:	pop    rsi
   140019b88:	(bad)  
   140019b89:	es xchg esp,eax
   140019b8b:	(bad)  
   140019b8c:	and    ebp,DWORD PTR [rsi]
   140019b8e:	popf   
   140019b8f:	jmp    QWORD PTR [rsi]
   140019b91:	ss test al,0xff
   140019b94:	sub    bh,BYTE PTR [rdi]
   140019b96:	mov    ah,0xff
   140019b98:	sub    al,0x48
   140019b9a:	mov    edi,0xc9502fff
   140019b9f:	push   QWORD PTR [rbx]
   140019ba1:	push   rdi
   140019ba2:	sar    edi,1
   140019ba4:	xor    eax,0x36ffda5e
   140019ba9:	fs loope 0x140019bab
   140019bac:	(bad)  
   140019bad:	push   0xffffffffffffffe6
   140019baf:	push   QWORD PTR [rdi]
   140019bb1:	outs   dx,BYTE PTR ds:[rsi]
   140019bb2:	call   0x12a75d4b6
   140019bb7:	(bad)  
   140019bb8:	cmp    bh,BYTE PTR [rcx-0x15]
   140019bbb:	(bad)  
   140019bbc:	cmp    edi,DWORD PTR [rbx+rbp*8-0x1]
   140019bc0:	rex.X je 0x140019b8d
   140019bc3:	rcr    BYTE PTR [rax+0x49],cl
   140019bc6:	rex.RX sbb r8b,BYTE PTR [rax]
	...
   140019bf1:	add    BYTE PTR [rax],al
   140019bf3:	add    BYTE PTR [rcx+0x32],dl
   140019bf6:	add    edx,DWORD PTR [r8+0x32]
   140019bfa:	rex.RXB
   140019bfb:	rex.WR (bad) 
   140019bfd:	xor    esi,DWORD PTR [rbp+0x633247ee]
   140019c03:	add    BYTE PTR ds:[rax],al
	...
   140019c3e:	add    BYTE PTR [rax],al
   140019c40:	push   rax
   140019c41:	sub    ebx,DWORD PTR [rsi]
   140019c43:	sbb    eax,0xe2761e1e
   140019c48:	sbb    bl,BYTE PTR [rsi]
   140019c4a:	mov    esi,edi
   140019c4c:	sbb    eax,0x21ff9023
   140019c51:	sub    dl,BYTE PTR [rdi-0x5ecfdb02]
   140019c57:	(bad)  
   140019c58:	(bad)  
   140019c59:	cmp    DWORD PTR [rdi+rdi*8-0x149bed6],ebp
   140019c60:	sub    al,0x49
   140019c62:	sar    dh,0x30
   140019c65:	push   rcx
   140019c66:	retf   0x34ff
   140019c69:	pop    rax
   140019c6a:	sar    esi,cl
   140019c6c:	ss (bad) 
   140019c6e:	fdiv   st(6),st
   140019c70:	(bad)  
   140019c71:	addr32 in al,0xff
   140019c74:	(bad)  
   140019c75:	ins    DWORD PTR es:[rdi],dx
   140019c76:	call   0x12a76d579
   140019c7b:	(bad)  
   140019c7c:	cmp    bh,BYTE PTR [rdx-0x15]
   140019c7f:	(bad)  
   140019c80:	cmp    eax,0x45feeb7f
   140019c85:	jno    0x140019c3e
   140019c87:	rcr    BYTE PTR [rdx+0x47],0x3c
   140019c8b:	adc    al,BYTE PTR [rax]
	...
   140019cad:	add    BYTE PTR [rax],al
   140019caf:	add    BYTE PTR [rcx+0x32],dl
   140019cb2:	rex.XB add eax,0x6453334d
   140019cb8:	sub    eax,0x34f7bd34
   140019cbd:	xor    esp,DWORD PTR [rax+0x6b3244ca]
   140019cc3:	add    eax,0x0
	...
   140019ce8:	test   DWORD PTR [rdi+0x15],ecx
   140019ceb:	add    bh,BYTE PTR [rbx+0x46]
   140019cee:	clts   
   140019cf0:	or     DWORD PTR [rsi+0x15],0x2
   140019cf4:	add    BYTE PTR [rax],al
   140019cf6:	add    BYTE PTR [rax],al
   140019cf8:	(bad)  
   140019cf9:	xor    eax,0x2b530113
   140019cfe:	(bad)  
   140019cff:	adc    ah,BYTE PTR [rsi]
   140019d01:	sbb    al,0x55
   140019d03:	mov    edx,0xfe791914
   140019d08:	(bad)  
   140019d09:	sbb    edi,DWORD PTR [rdi-0x2]
   140019d0c:	sbb    DWORD PTR [rip+0x211cff86],ebx        # 0x1611e9c98
   140019d12:	(bad)  
   140019d13:	(bad)  
   140019d14:	(bad)  
   140019d15:	(bad)  
   140019d16:	xchg   ebp,eax
   140019d17:	(bad)  
   140019d18:	and    ebp,DWORD PTR [rsi]
   140019d1a:	sahf   
   140019d1b:	jmp    QWORD PTR [rsi]
   140019d1d:	xor    eax,0x3e29fea8
   140019d22:	mov    dl,0xfe
   140019d24:	sub    al,0x46
   140019d26:	mov    ebp,0xc74e2eff
   140019d2b:	(bad)  
   140019d2c:	xor    edx,DWORD PTR [rsi-0x2e]
   140019d2f:	(bad)  
   140019d30:	ss (bad) 
   140019d32:	fdiv   st(7),st
   140019d34:	(bad)  
   140019d35:	push   0x6f38fee5
   140019d3a:	jmp    0x12b79d73d
   140019d3f:	(bad)  
   140019d40:	cmp    al,0x7e
   140019d42:	jmp    0x140019d42
   140019d44:	cmp    eax,DWORD PTR [rbx+0x7245ffec]
   140019d4a:	mov    dl,0xb8
   140019d4c:	pop    rcx
   140019d4d:	rex.W
   140019d4e:	ds (bad) 
   140019d50:	push   rbp
   140019d51:	push   rdx
   140019d52:	push   rdi
   140019d53:	add    DWORD PTR [rax],eax
	...
   140019d69:	add    BYTE PTR [rax],al
   140019d6b:	add    BYTE PTR [rbp+0x32],dl
   140019d6e:	or     BYTE PTR ss:[rax+0x33],cl
   140019d72:	gs jns 0x140019da2
   140019d75:	xor    eax,0x332cfbc1
   140019d7a:	mov    edi,0x743241fe
   140019d7f:	push   0x0
	...
   140019da4:	test   BYTE PTR [rdi+0x14],cl
   140019da7:	(bad)  
   140019da8:	(bad)  
   140019da9:	pop    rax
   140019daa:	sbb    eax,0x397cb65d
   140019daf:	mov    edi,0x6b1e578c
   140019db4:	js     0x140019dfb
   140019db6:	or     eax,0xd477c33
   140019dbb:	push   rax
   140019dbc:	cmp    eax,0x17c83b24
   140019dc1:	adc    bl,BYTE PTR [rbp-0x1]
   140019dc4:	adc    edx,DWORD PTR [rbp*2+0x771814fe]
   140019dcb:	(bad)  
   140019dcc:	(bad)  
   140019dcd:	sbb    edi,DWORD PTR [rbp-0x1]
   140019dd0:	sbb    DWORD PTR [rip+0x201bfe84],ebx        # 0x1601d9c5a
   140019dd6:	mov    esi,?
   140019dd8:	(bad)  
   140019dd9:	es xchg ebx,eax
   140019ddb:	jmp    QWORD PTR [rbx]
   140019ddd:	sub    eax,0x3425fe9c
   140019de2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019de3:	(bad)  
   140019de4:	sub    DWORD PTR [rip+0x462bffb2],edi        # 0x1862d9d9c
   140019dea:	mov    ebp,0xc84e2ffe
   140019def:	(bad)  
   140019df0:	xor    edx,DWORD PTR [rdi-0x2c]
   140019df3:	push   QWORD PTR [rsi]
   140019df5:	(bad)  
   140019df6:	(bad)  
   140019df8:	(bad)  
   140019df9:	imul   esp,edi,0xfffffffe
   140019dfc:	cmp    BYTE PTR [rdx+rbp*8-0x1],dh
   140019e00:	cmp    al,0x7c
   140019e02:	jmp    0x140019e02
   140019e04:	cmp    eax,DWORD PTR [rbx-0x77c40014]
   140019e0a:	in     al,dx
   140019e0b:	inc    BYTE PTR [rbx+0x7b]
   140019e0e:	ret    0x59c9
   140019e11:	rex.WB (bad) 
   140019e13:	sub    al,0x56
   140019e15:	rex.WR
   140019e16:	rex.WX add rax,QWORD PTR [rax]
	...
   140019e21:	add    BYTE PTR [rax],al
   140019e23:	add    BYTE PTR [rsi+rsi*1+0x3b],dl
   140019e27:	add    bl,BYTE PTR [rax+0x33]
   140019e2a:	sub    al,0x15
   140019e2c:	rex.X
   140019e2d:	sbb    DWORD PTR ss:[rbp-0x23bcad3],0xffc1342d
   140019e38:	xor    esi,DWORD PTR cs:[rsi+0x653246ee]
   140019e3f:	adc    al,0x0
	...
   140019e59:	add    BYTE PTR [rax],al
   140019e5b:	add    BYTE PTR [rbp+rdx*2+0x4a7f0117],cl
   140019e62:	movhps QWORD PTR [rbx-0x3061d48f],xmm5
   140019e69:	xchg   edx,eax
   140019e6a:	rex.RXB dec r11b
   140019e6d:	nop
   140019e6e:	inc    r15
   140019e71:	mov    cs,WORD PTR [rbp-0x1]
   140019e74:	mov    bh,0x81
   140019e76:	rex.R push QWORD PTR [rsi-0x7200d384]
   140019e7d:	pop    rsi
   140019e7e:	sub    bh,bh
   140019e80:	sub    al,0x1c
   140019e82:	rex.W call QWORD PTR [rdi]
   140019e85:	adc    DWORD PTR [rax-0x1],ebx
   140019e88:	adc    edx,DWORD PTR [rdx+rbp*2]
   140019e8b:	call   QWORD PTR [rbx]
   140019e8d:	(bad)  
   140019e8e:	jbe    0x140019e8f
   140019e90:	(bad)  
   140019e91:	sbb    edi,DWORD PTR [rdi+rdi*8+0x18]
   140019e95:	sbb    eax,0x201bff84
   140019e9a:	mov    edi,?
   140019e9c:	(bad)  
   140019e9d:	es xchg ebx,eax
   140019e9f:	jmp    QWORD PTR [rbx]
   140019ea1:	sub    eax,0x3526ff9c
   140019ea6:	test   al,0xff
   140019ea8:	sub    bh,BYTE PTR [rsi]
   140019eaa:	mov    bl,0xff
   140019eac:	sub    al,0x47
   140019eae:	mov    edi,0xcc5131ff
   140019eb3:	push   QWORD PTR [rip+0x37ffd95c]        # 0x178017815
   140019eb9:	push   0x7138ffe5
   140019ebe:	jmp    0x12b7cdac2
   140019ec3:	(bad)  
   140019ec4:	cmp    al,0x83
   140019ec6:	in     al,dx
   140019ec7:	(bad)  
   140019ec8:	cmp    ecx,DWORD PTR [rax-0x74c40013]
   140019ece:	in     eax,dx
   140019ecf:	(bad)  
   140019ed0:	cmp    eax,0x4df1e488
   140019ed5:	pop    rdx
   140019ed6:	jne    0x140019e5f
   140019ed8:	push   rdi
   140019ed9:	xor    ebp,DWORD PTR [r15]
   140019edc:	pop    rax
   140019edd:	cmp    eax,0x39571530
   140019ee2:	xor    BYTE PTR [rax],ah
   140019ee4:	rex.WRX cmp QWORD PTR [rcx+0x68],r10
   140019ee8:	xor    eax,0x2eddb63d
   140019eed:	cmp    cl,cl
   140019eef:	jmp    FWORD PTR [rip+0x2dffc335]        # 0x16e01622a
   140019ef5:	xor    al,0xbf
   140019ef7:	(bad)  
   140019ef8:	cmp    al,0x32
   140019efa:	test   BYTE PTR [rdx+0x178323f],bl
	...
   140019f18:	mov    dl,BYTE PTR [rsi+rdx*1+0x4]
   140019f1c:	xchg   DWORD PTR [rcx+0x14],edx
   140019f1f:	ds (bad) 
   140019f21:	mov    DWORD PTR [rcx],edi
   140019f23:	(bad)  
   140019f24:	rcl    BYTE PTR [rbp-0x6c2f01bf],cl
   140019f2a:	rex.XB dec r14d
   140019f2d:	xchg   edx,eax
   140019f2e:	rex.W dec cl
   140019f31:	(bad)  
   140019f32:	rex.WXB inc r12
   140019f35:	mov    WORD PTR [rbp-0x2],cs
   140019f38:	mov    ecx,0xb0fe4c84
   140019f3d:	js     0x140019f6e
   140019f3f:	inc    BYTE PTR [rsi+0x27ff2b58]
   140019f45:	sbb    BYTE PTR [rdi-0x2],al
   140019f48:	(bad)  
   140019f49:	adc    DWORD PTR [rsi-0x2],edx
   140019f4c:	adc    edx,DWORD PTR [rcx+rbp*2]
   140019f4f:	call   QWORD PTR [rbx]
   140019f51:	(bad)  
   140019f52:	jbe    0x140019f52
   140019f54:	(bad)  
   140019f55:	sbb    edi,DWORD PTR [rbp-0x2]
   140019f58:	sbb    DWORD PTR [rip+0x211cff85],ebx        # 0x1611e9ee3
   140019f5e:	(bad)  
   140019f5f:	(bad)  
   140019f60:	(bad)  
   140019f61:	(bad)  
   140019f62:	xchg   ebp,eax
   140019f63:	(bad)  
   140019f64:	and    al,0x2e
   140019f66:	lahf   
   140019f67:	jmp    QWORD PTR [rdi]
   140019f69:	(bad)  
   140019f6a:	stos   DWORD PTR es:[rdi],eax
   140019f6b:	(bad)  
   140019f6c:	sub    eax,DWORD PTR [rcx-0x49]
   140019f6f:	(bad)  
   140019f70:	sub    eax,0x33ffc54c
   140019f75:	push   rsi
   140019f76:	sar    esi,cl
   140019f78:	(bad)  
   140019f79:	fs loope 0x140019f7a
   140019f7c:	(bad)  
   140019f7d:	outs   dx,BYTE PTR ds:[rsi]
   140019f7e:	jmp    0x12b7ada82
   140019f83:	(bad)  
   140019f84:	cmp    al,0x82
   140019f86:	in     al,dx
   140019f87:	(bad)  
   140019f88:	cmp    ecx,DWORD PTR [rax-0x74c40114]
   140019f8e:	in     eax,dx
   140019f8f:	(bad)  
   140019f90:	cmp    ecx,DWORD PTR [rbx-0x79c40013]
   140019f96:	in     al,dx
   140019f97:	(bad)  
   140019f98:	cmp    bh,BYTE PTR [rbp-0x17]
   140019f9b:	cld    
   140019f9c:	cmp    BYTE PTR [rbx+rbx*8-0x11],ch
   140019fa0:	xor    eax,0x32f8df59
   140019fa5:	rex.WB (bad) 
   140019fa8:	(bad)  
   140019fa9:	cmp    eax,0x362effce
   140019fae:	(bad)  
   140019faf:	(bad)  
   140019fb0:	sub    eax,0x2cfec134
   140019fb5:	xor    edi,DWORD PTR [rbp+0x663245fe]
   140019fbb:	cmp    BYTE PTR [rax],al
	...
   140019fd1:	add    BYTE PTR [rax],al
   140019fd3:	add    BYTE PTR [rdx-0x60f4edb3],al
   140019fd9:	push   0xffffffff98d37923
   140019fde:	rex.XB not r12b
   140019fe1:	cdq    
   140019fe2:	rex.X (bad) 
   140019fe4:	rcl    DWORD PTR [rsi-0x6a2e01be],cl
   140019fea:	rex.X call rax
   140019fed:	xchg   ebx,eax
   140019fee:	rex.R dec spl
   140019ff1:	nop
   140019ff2:	inc    r14
   140019ff5:	lea    ecx,[rbp-0x2]
   140019ff8:	ror    DWORD PTR [rdx-0x7a4601b2],0x50
   140019fff:	(bad)  
   14001a000:	lods   al,BYTE PTR ds:[rsi]
   14001a001:	jbe    0x14001a034
   14001a003:	push   QWORD PTR [rsi+0x4e]
   14001a006:	(bad)  
   14001a007:	(bad)  
   14001a008:	(bad)  
   14001a009:	adc    al,0x47
   14001a00b:	(bad)  
   14001a00c:	(bad)  
   14001a00d:	adc    DWORD PTR [rdi-0x1],edx
   14001a010:	adc    edx,DWORD PTR [rbx+rbp*2]
   14001a013:	(bad)  
   14001a014:	adc    al,0x18
   14001a016:	ja     0x14001a016
   14001a018:	(bad)  
   14001a019:	sbb    edi,DWORD PTR [rsi-0x1]
   14001a01c:	sbb    DWORD PTR [rip+0x221cfe87],ebx        # 0x1621e9ea9
   14001a022:	(bad)  
   14001a023:	(bad)  
   14001a024:	and    DWORD PTR [rcx],ebp
   14001a026:	xchg   edi,eax
   14001a027:	jmp    QWORD PTR [rcx+rsi*1]
   14001a02a:	movabs ds:0xbe462cfeb03b28fe,eax
   14001a033:	push   QWORD PTR [rcx]
   14001a035:	push   rdx
   14001a036:	(bad)  
   14001a037:	(bad)  
   14001a038:	ss pop rdi
   14001a03a:	(bad)  
   14001a03c:	(bad)  
   14001a03d:	ins    BYTE PTR es:[rdi],dx
   14001a03e:	call   0x12b79db42
   14001a043:	(bad)  
   14001a044:	cmp    al,0x82
   14001a046:	in     al,dx
   14001a047:	(bad)  
   14001a048:	cmp    ecx,DWORD PTR [rcx-0x74c40114]
   14001a04e:	in     eax,dx
   14001a04f:	(bad)  
   14001a050:	cmp    ecx,DWORD PTR [rdx-0x7ac40013]
   14001a056:	in     al,dx
   14001a057:	(bad)  
   14001a058:	cmp    DWORD PTR [rbx+rbp*8-0x2],edi
   14001a05c:	cmp    DWORD PTR [rbp-0x17],ebp
   14001a05f:	push   QWORD PTR [rip+0x31fee357]        # 0x1720083bc
   14001a065:	rex.RX xlat BYTE PTR ds:[rbx]
   14001a067:	(bad)  
   14001a068:	cs cmp cl,bl
   14001a06b:	jmp    FWORD PTR [rip+0x2dfec435]        # 0x16e0064a6
   14001a071:	xor    al,0xc0
   14001a073:	(bad)  
   14001a074:	xor    dh,BYTE PTR [rdx]
   14001a076:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001a077:	rol    BYTE PTR [rbp+0x31],1
   14001a07a:	data16 add al,0x0
	...
   14001a089:	add    BYTE PTR [rax],al
   14001a08b:	add    BYTE PTR [rbp-0x7dfde5a8],cl
   14001a091:	rex.WRB adc r12b,BYTE PTR [r15]
   14001a094:	mov    ebp,0xd8bc3785
   14001a099:	sahf   
   14001a09a:	rex.W (bad) 
   14001a09c:	xlat   BYTE PTR ds:[rbx]
   14001a09d:	popf   
   14001a09e:	rex.RX call rsi
   14001a0a1:	fwait
   14001a0a2:	rex.RB call r12
   14001a0a5:	cwde   
   14001a0a6:	rex.X call rbx
   14001a0a9:	xchg   esi,eax
   14001a0aa:	call   r9
   14001a0ad:	xchg   esp,eax
   14001a0ae:	rex.XB dec r15d
   14001a0b1:	xchg   edx,eax
   14001a0b2:	rex.RXB dec r8d
   14001a0b5:	mov    cs,WORD PTR [rdi+rdi*8-0x3d]
   14001a0b9:	mov    ecx,DWORD PTR [rbp-0x1]
   14001a0bc:	mov    esp,0xb6ff5087
   14001a0c1:	(bad)  
   14001a0c2:	push   rcx
   14001a0c3:	jmp    QWORD PTR [rdi+0x61ff2e72]
   14001a0c9:	(bad)  
   14001a0ca:	xor    eax,0x49111aff
   14001a0cf:	call   QWORD PTR [rdi]
   14001a0d1:	adc    DWORD PTR [rdx-0x1],ebx
   14001a0d4:	adc    edx,DWORD PTR [rsi+rbp*2]
   14001a0d7:	call   QWORD PTR [rcx+rbx*1]
   14001a0da:	jns    0x14001a0db
   14001a0dc:	(bad)  
   14001a0dd:	sbb    al,0x80
   14001a0df:	call   FWORD PTR [rdx]
   14001a0e1:	(bad)  
   14001a0e2:	mov    edi,edi
   14001a0e4:	sbb    eax,0x23ff9225
   14001a0e9:	sub    eax,0x3626ff9c
   14001a0ee:	test   eax,0xb8412bff
   14001a0f3:	jmp    FWORD PTR [rdi]
   14001a0f5:	rex.WRX enter 0x35ff,0x5b
   14001a0fa:	fcos   
   14001a0fc:	(bad)  
   14001a0fd:	push   0xffffffffffffffe7
   14001a0ff:	(bad)  
   14001a100:	cmp    DWORD PTR [rdi-0x16],esi
   14001a103:	(bad)  
   14001a104:	cmp    al,0x82
   14001a106:	in     al,dx
   14001a107:	(bad)  
   14001a108:	cmp    ecx,DWORD PTR [rcx-0x74c40014]
   14001a10e:	in     eax,dx
   14001a10f:	(bad)  
   14001a110:	cmp    al,0x8a
   14001a112:	in     eax,dx
   14001a113:	(bad)  
   14001a114:	cmp    eax,DWORD PTR [rsp+rbp*8-0x1585c601]
   14001a11b:	(bad)  
   14001a11c:	cmp    DWORD PTR [rcx-0x18],ebp
   14001a11f:	push   QWORD PTR [rdx+rdx*2]
   14001a122:	loope  0x14001a123
   14001a124:	xor    BYTE PTR [rcx-0x2e],al
   14001a127:	jmp    FWORD PTR [rsi]
   14001a129:	(bad)  
   14001a12a:	enter  0x2dff,0x34
   14001a12e:	ret    0x2cff
   14001a131:	xor    edi,DWORD PTR [rsi+0x703242ff]
   14001a137:	jae    0x14001a139
	...
   14001a145:	add    BYTE PTR [rax],al
   14001a147:	add    BYTE PTR [rax-0x6df8e7ac],cl
   14001a14d:	pop    rbp
   14001a14e:	(bad)  
   14001a14f:	pop    rbx
   14001a150:	rcr    DWORD PTR [rax-0x602716b9],1
   14001a156:	rex.WB (bad) 
   14001a158:	fcomp  DWORD PTR [rsi-0x612701b7]
   14001a15e:	rex.W call rdi
   14001a161:	popf   
   14001a162:	rex.RX (bad) 
   14001a164:	(bad)  
   14001a165:	fwait
   14001a166:	rex.R (bad) 
   14001a168:	rcr    DWORD PTR [rax-0x6a2d00be],cl
   14001a16e:	rex.B (bad) 
   14001a170:	rcl    BYTE PTR [rbx-0x6f3400bb],1
   14001a176:	rex.WX inc spl
   14001a179:	mov    WORD PTR [rbp-0x2],cs
   14001a17c:	mov    ebp,0xb8fe4f88
   14001a181:	test   BYTE PTR [rcx-0x1],dl
   14001a184:	scas   eax,DWORD PTR es:[rdi]
   14001a185:	jle    0x14001a1d8
   14001a187:	(bad)  
   14001a188:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001a189:	outs   dx,DWORD PTR ds:[rsi]
   14001a18a:	sub    esi,edi
   14001a18c:	rex.XB sub edi,DWORD PTR [r14]
   14001a18f:	call   FWORD PTR [rax]
   14001a191:	adc    BYTE PTR [rbx-0x2],cl
   14001a194:	(bad)  
   14001a195:	adc    bl,BYTE PTR [rdi-0x2]
   14001a198:	adc    edx,DWORD PTR [rsi]
   14001a19a:	jb     0x14001a19b
   14001a19c:	adc    eax,0x18fe7b1a
   14001a1a1:	sbb    eax,0x211cfe84
   14001a1a6:	(bad)  
   14001a1a7:	jmp    QWORD PTR [rax]
   14001a1a9:	sub    BYTE PTR [rsi-0x5cceda02],dl
   14001a1af:	(bad)  
   14001a1b0:	sub    DWORD PTR [rip+0x492dffb2],edi        # 0x1892fa168
   14001a1b6:	ret    
   14001a1b7:	(bad)  
   14001a1b8:	xor    al,0x58
   14001a1ba:	(bad)  
   14001a1bb:	(bad)  
   14001a1bc:	(bad)  
   14001a1bd:	push   0x7639ffe5
   14001a1c2:	(bad)  
   14001a1c3:	(bad)  
   14001a1c4:	cmp    al,0x82
   14001a1c6:	in     al,dx
   14001a1c7:	(bad)  
   14001a1c8:	cmp    ecx,DWORD PTR [rcx-0x74c40113]
   14001a1ce:	in     eax,dx
   14001a1cf:	(bad)  
   14001a1d0:	cmp    al,0x8a
   14001a1d2:	in     eax,dx
   14001a1d3:	(bad)  
   14001a1d4:	cmp    al,BYTE PTR [rdx+0x7739feec]
   14001a1da:	(bad)  
   14001a1db:	(bad)  
   14001a1dc:	cmp    BYTE PTR [rbx-0x19],ah
   14001a1df:	push   QWORD PTR [rbx]
   14001a1e1:	rex.WR (bad) 
   14001a1e4:	(bad)  
   14001a1e5:	cmp    eax,0x362efece
   14001a1ea:	(bad)  
   14001a1eb:	jmp    FWORD PTR [rip+0x2cfec134]        # 0x16d006325
   14001a1f1:	xor    edi,DWORD PTR [rdx+0x633146f5]
   14001a1f7:	sbb    eax,0x0
	...
   14001a204:	xchg   DWORD PTR [rbx+0x18],edx
   14001a207:	adc    eax,0x9f347bb1
   14001a20c:	fldenv [rcx-0x5e2603b2]
   14001a212:	rex.WRX (bad) 
   14001a214:	fsub   DWORD PTR [rax-0x602701b3]
   14001a21a:	rex.WXB (bad) 
   14001a21c:	fcomp  DWORD PTR [rsi-0x612700b7]
   14001a222:	rex.W (bad) 
   14001a224:	xlat   BYTE PTR ds:[rbx]
   14001a225:	popf   
   14001a226:	rex.RX (bad) 
   14001a228:	(bad)  
   14001a229:	(bad)  
   14001a22a:	rex.XB call r11
   14001a22d:	xchg   esi,eax
   14001a22e:	rex.B (bad) 
   14001a230:	rcl    DWORD PTR [rbx+rax*2+0x4991cdff],1
   14001a237:	inc    ch
   14001a239:	lea    ecx,[rbp-0x2]
   14001a23c:	mov    esi,0xb8fe4f88
   14001a241:	test   BYTE PTR [rcx-0x1],dl
   14001a244:	mov    cl,0x80
   14001a246:	push   rbx
   14001a247:	(bad)  
   14001a248:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001a249:	jp     0x14001a29c
   14001a24b:	(bad)  
   14001a24c:	xchg   esp,eax
   14001a24d:	movsxd ebp,DWORD PTR [rax]
   14001a24f:	jmp    FWORD PTR [rcx]
   14001a251:	sbb    al,BYTE PTR [rbp-0x2]
   14001a254:	sbb    DWORD PTR [rax],edx
   14001a256:	rex.WRXB (bad) 
   14001a258:	adc    eax,0x13ff6513
   14001a25d:	(bad)  
   14001a25e:	jbe    0x14001a25e
   14001a260:	(bad)  
   14001a261:	sbb    edi,DWORD PTR [rsi-0x2]
   14001a264:	sbb    bl,BYTE PTR [rsi]
   14001a266:	mov    bh,bh
   14001a268:	sbb    eax,0x23fe9124
   14001a26d:	sub    eax,0x3827fe9c
   14001a272:	lods   al,BYTE PTR ds:[rsi]
   14001a273:	jmp    FWORD PTR [rsi+rax*2]
   14001a276:	mov    ebp,0xd15432fe
   14001a27b:	(bad)  
   14001a27c:	(bad)  
   14001a27d:	data16 jrcxz 0x14001a27f
   14001a280:	cmp    DWORD PTR [rbp-0x16],esi
   14001a283:	(bad)  
   14001a284:	cmp    al,0x82
   14001a286:	in     al,dx
   14001a287:	(bad)  
   14001a288:	cmp    al,0x8a
   14001a28a:	in     eax,dx
   14001a28b:	(bad)  
   14001a28c:	cmp    al,0x8e
   14001a28e:	out    dx,al
   14001a28f:	(bad)  
   14001a290:	cmp    al,0x8a
   14001a292:	in     eax,dx
   14001a293:	(bad)  
   14001a294:	cmp    al,BYTE PTR [rax+0x7439feeb]
   14001a29a:	(bad)  
   14001a29b:	(bad)  
   14001a29c:	ss pop rbp
   14001a29e:	in     eax,0xff
   14001a2a0:	xor    al,BYTE PTR [rdi-0x27]
   14001a2a3:	(bad)  
   14001a2a4:	cs cmp cl,bl
   14001a2a7:	(bad)  
   14001a2a8:	sub    eax,0x2dffc335
   14001a2ad:	xor    al,0xbf
   14001a2af:	(bad)  
   14001a2b0:	cmp    BYTE PTR [rdx],dh
   14001a2b2:	xchg   ecx,eax
   14001a2b3:	mov    dl,0x42
   14001a2b5:	xor    ch,BYTE PTR [rdi+0x2]
	...
   14001a2c4:	mov    ebx,0xd88c3d84
   14001a2c9:	movabs al,ds:0xa1d9ff52a1d9f852
   14001a2d2:	push   rcx
   14001a2d3:	(bad)  
   14001a2d4:	fisub  DWORD PTR [rdx-0x5e2600b1]
   14001a2da:	rex.WRX (bad) 
   14001a2dc:	fcomp  DWORD PTR [rdi-0x612700b4]
   14001a2e2:	rex.WB call r15
   14001a2e5:	sahf   
   14001a2e6:	rex.W call rsi
   14001a2e9:	pushf  
   14001a2ea:	rex.RB call r11
   14001a2ed:	cwde   
   14001a2ee:	rex.X call rdx
   14001a2f1:	xchg   ebp,eax
   14001a2f2:	rex.X dec edi
   14001a2f5:	xchg   edx,eax
   14001a2f6:	rex.RXB inc r14d
   14001a2f9:	lea    ecx,[rdi+rdi*8-0x41]
   14001a2fd:	mov    DWORD PTR [rsi-0x1],ecx
   14001a300:	mov    eax,0xb1ff5184
   14001a305:	adc    BYTE PTR [rbx-0x1],0xa9
   14001a309:	jl     0x14001a361
   14001a30b:	call   FWORD PTR [rbp+0x76ff4771]
   14001a311:	rex.WRX
   14001a312:	call   FWORD PTR cs:[rdx+rdx*1]
   14001a316:	rex.RXB call FWORD PTR [r8]
   14001a319:	adc    DWORD PTR [rsi-0x1],edx
   14001a31c:	adc    edx,DWORD PTR [rbp*2+0x791915ff]
   14001a323:	call   FWORD PTR [rax]
   14001a325:	sbb    al,0x82
   14001a327:	call   FWORD PTR [rcx+riz*1]
   14001a32a:	(bad)  
   14001a32b:	jmp    QWORD PTR [rcx]
   14001a32d:	sub    DWORD PTR [rdi-0x58cbd901],edx
   14001a333:	jmp    FWORD PTR [rbx]
   14001a335:	rex.X mov ecx,0xcd5131ff
   14001a33b:	push   QWORD PTR [rdi]
   14001a33d:	fs loop 0x14001a33f
   14001a340:	cmp    DWORD PTR [rbp-0x16],esi
   14001a343:	(bad)  
   14001a344:	cmp    al,0x83
   14001a346:	in     al,dx
   14001a347:	(bad)  
   14001a348:	cmp    al,0x8b
   14001a34a:	in     eax,dx
   14001a34b:	(bad)  
   14001a34c:	cmp    ecx,DWORD PTR [rdi-0x75c30012]
   14001a352:	in     eax,dx
   14001a353:	(bad)  
   14001a354:	cmp    DWORD PTR [rdi-0x15],edi
   14001a357:	(bad)  
   14001a358:	cmp    DWORD PTR [rdi-0x17],ebp
   14001a35b:	push   QWORD PTR [rip+0x31ffe357]        # 0x1720186b8
   14001a361:	rex.X (bad) 
   14001a363:	jmp    FWORD PTR [rsi]
   14001a365:	cmp    al,cl
   14001a367:	jmp    FWORD PTR [rip+0x2cffc235]        # 0x16d0165a2
   14001a36d:	xor    edi,DWORD PTR [rsi+0x6c3143fe]
   14001a373:	push   rdi
	...
   14001a384:	mov    dh,0x80
   14001a386:	cmp    al,BYTE PTR [rcx]
   14001a388:	mov    cl,0x7b
   14001a38a:	(bad)  
   14001a38b:	and    eax,0x854085bc
   14001a390:	rcr    BYTE PTR [rdx-0x5e261cb0],cl
   14001a396:	push   rbx
   14001a397:	(bad)  
   14001a398:	fisub  DWORD PTR [rcx-0x5e2601b0]
   14001a39e:	rex.WRX (bad) 
   14001a3a0:	fcomp  DWORD PTR [rdi-0x612701b5]
   14001a3a6:	rex.WB (bad) 
   14001a3a8:	xlat   BYTE PTR ds:[rbx]
   14001a3a9:	popf   
   14001a3aa:	rex.RXB call r12
   14001a3ad:	cdq    
   14001a3ae:	rex.XB (bad) 
   14001a3b0:	rcl    BYTE PTR [rsi-0x6d2f00bf],cl
   14001a3b6:	rex.RX inc dil
   14001a3b9:	mov    cs,WORD PTR [rsi+rdi*8-0x41]
   14001a3bd:	mov    DWORD PTR [rsi-0x2],ecx
   14001a3c0:	mov    eax,0xb0ff5184
   14001a3c5:	adc    BYTE PTR [rsi+rdi*8-0x58],0x7b
   14001a3ca:	push   rsi
   14001a3cb:	(bad)  
   14001a3cc:	sahf   
   14001a3cd:	jne    0x14001a425
   14001a3cf:	dec    DWORD PTR [rax+0x49fe305c]
   14001a3d5:	(bad)  
   14001a3d6:	cmp    al,0xfe
   14001a3d8:	sbb    BYTE PTR [rax],dl
   14001a3da:	rex.WX call QWORD PTR [rsi]
   14001a3dd:	adc    bl,BYTE PTR [rdi-0x2]
   14001a3e0:	adc    edx,DWORD PTR [rsi]
   14001a3e2:	jae    0x14001a3e2
   14001a3e4:	(bad)  
   14001a3e5:	sbb    edi,DWORD PTR [rbp-0x1]
   14001a3e8:	sbb    bl,BYTE PTR [rsi]
   14001a3ea:	mov    dh,bh
   14001a3ec:	(bad)  
   14001a3ed:	es xchg ebx,eax
   14001a3ef:	(bad)  
   14001a3f0:	and    al,0x30
   14001a3f2:	movabs eax,ds:0xc94e2ffeb43e2aff
   14001a3fb:	(bad)  
   14001a3fc:	ss (bad) 
   14001a3fe:	loopne 0x14001a3ff
   14001a400:	cmp    DWORD PTR [rbp-0x16],esi
   14001a403:	(bad)  
   14001a404:	cmp    al,0x84
   14001a406:	in     al,dx
   14001a407:	(bad)  
   14001a408:	cmp    ecx,DWORD PTR [rbp-0x6fc40112]
   14001a40e:	out    dx,al
   14001a40f:	(bad)  
   14001a410:	cmp    ecx,DWORD PTR [rdx+0x7d39ffed]
   14001a416:	jmp    0x14001a416
   14001a418:	cmp    DWORD PTR [rbx-0x18],ebp
   14001a41b:	(bad)  
   14001a41c:	xor    al,0x51
   14001a41e:	loopne 0x14001a41f
   14001a420:	(bad)  
   14001a421:	ds iret 
   14001a423:	(bad)  
   14001a424:	cs ss (bad) 
   14001a427:	(bad)  
   14001a428:	sub    eax,0x2effc134
   14001a42d:	xor    dh,BYTE PTR [rdx+rbp*8+0x10623146]
	...
   14001a450:	mov    bl,0x7d
   14001a452:	cmp    DWORD PTR [rbx],ecx
   14001a454:	mov    eax,0xc7553d82
   14001a459:	nop
   14001a45a:	rex.RXB mov r9d,0xfc50a1d9
   14001a460:	fldenv [rcx-0x602701b2]
   14001a466:	rex.WX (bad) 
   14001a468:	xlat   BYTE PTR ds:[rbx]
   14001a469:	sahf   
   14001a46a:	rex.W call rsi
   14001a46d:	fwait
   14001a46e:	rex.R (bad) 
   14001a470:	rcl    DWORD PTR [rdi-0x6c2f00be],cl
   14001a476:	rex.RB dec r8b
   14001a479:	mov    cs,WORD PTR [rbx-0x2]
   14001a47c:	mov    edi,0xb7fe4e89
   14001a481:	test   BYTE PTR [rcx-0x1],dl
   14001a484:	scas   eax,DWORD PTR es:[rdi]
   14001a485:	jg     0x14001a4db
   14001a487:	(bad)  
   14001a488:	sahf   
   14001a489:	jae    0x14001a4dd
   14001a48b:	dec    BYTE PTR [rbp+0x33]
   14001a48e:	rex.RXB jmp QWORD PTR [r14+r10*1]
   14001a492:	rex.R inc BYTE PTR [rbp+0x25fe2758]
   14001a499:	(bad)  
   14001a49a:	rex.RX call FWORD PTR [rax]
   14001a49d:	adc    DWORD PTR [rax-0x2],edx
   14001a4a0:	adc    al,0x14
   14001a4a2:	push   0xfffffffffffffffe
   14001a4a4:	adc    al,0x19
   14001a4a6:	jns    0x14001a4a7
   14001a4a8:	sbb    BYTE PTR [rip+0x221cfe83],bl        # 0x1621ea331
   14001a4ae:	(bad)  
   14001a4af:	(bad)  
   14001a4b0:	and    ebp,DWORD PTR [rsp+rbx*4]
   14001a4b3:	jmp    FWORD PTR [rax]
   14001a4b5:	cmp    ch,BYTE PTR [rdi-0x3ab4d102]
   14001a4bb:	(bad)  
   14001a4bc:	ss (bad) 
   14001a4be:	fdivp  st(7),st
   14001a4c0:	cmp    DWORD PTR [rbp-0x16],esi
   14001a4c3:	(bad)  
   14001a4c4:	cmp    al,0x85
   14001a4c6:	in     al,dx
   14001a4c7:	(bad)  
   14001a4c8:	cmp    al,0x8f
   14001a4ca:	out    dx,al
   14001a4cb:	(bad)  
   14001a4cc:	cmp    al,0x91
   14001a4ce:	out    dx,al
   14001a4cf:	(bad)  
   14001a4d0:	cmp    ecx,DWORD PTR [rdx+0x7c39ffed]
   14001a4d6:	(bad)  
   14001a4d7:	(bad)  
   14001a4d8:	cmp    BYTE PTR [rsi-0x19],ah
   14001a4db:	(bad)  
   14001a4dc:	xor    ecx,DWORD PTR [rbx-0x24]
   14001a4df:	jmp    FWORD PTR [rdi]
   14001a4e1:	cmp    ecx,esp
   14001a4e3:	(bad)  
   14001a4e4:	sub    eax,0x2cfec435
   14001a4e9:	xor    al,0xbf
   14001a4eb:	(bad)  
   14001a4ec:	cmp    al,0x32
   14001a4ee:	(bad)  
   14001a4ef:	popf   
   14001a4f0:	rex xor DWORD PTR [rbp+0x1],esi
	...
   14001a518:	mov    eax,0xb4013b82
   14001a51d:	jge    0x14001a555
   14001a51f:	es mov ebp,0xd2883b86
   14001a525:	cdq    
   14001a526:	rex.W in al,0xd8
   14001a529:	sahf   
   14001a52a:	rex.W (bad) 
   14001a52c:	(bad)  
   14001a52d:	pushf  
   14001a52e:	rex.RB call r11
   14001a531:	cwde   
   14001a532:	rex.X call rax
   14001a535:	xchg   ebx,eax
   14001a536:	rex.RB dec r8d
   14001a539:	mov    cs,WORD PTR [rbx-0x1]
   14001a53c:	mov    edi,0xb7ff4f88
   14001a541:	adc    DWORD PTR [rcx-0x1],0xffffff97
   14001a545:	imul   ecx,DWORD PTR [rbx-0x1],0x3f
   14001a549:	sub    BYTE PTR [rbp-0x1],al
   14001a54c:	and    BYTE PTR [rdx],dl
   14001a54e:	rex.RX call FWORD PTR [rdx]
   14001a551:	adc    BYTE PTR [rdi-0x1],al
   14001a554:	rex.XB sub al,0x3b
   14001a557:	jmp    FWORD PTR [rax+0x44]
   14001a55a:	xor    edi,edi
   14001a55c:	sbb    DWORD PTR [rax],edx
   14001a55e:	rex.W call QWORD PTR [rsi]
   14001a561:	adc    bl,BYTE PTR [rdi+rdi*8+0x13]
   14001a565:	(bad)  
   14001a566:	jae    0x14001a567
   14001a568:	(bad)  
   14001a569:	sbb    edi,DWORD PTR [rsi-0x1]
   14001a56c:	sbb    ebx,DWORD PTR [rdi]
   14001a56e:	mov    edi,edi
   14001a570:	and    BYTE PTR [rcx],ch
   14001a572:	xchg   edi,eax
   14001a573:	jmp    QWORD PTR [rsi]
   14001a575:	ss test eax,0xc1482dff
   14001a57b:	push   QWORD PTR [rip+0x39ffdc5e]        # 0x17a0181df
   14001a581:	jne    0x14001a56d
   14001a583:	(bad)  
   14001a584:	cmp    al,0x87
   14001a586:	in     eax,dx
   14001a587:	(bad)  
   14001a588:	cmp    edx,DWORD PTR [rdx-0x6cc40011]
   14001a58e:	out    dx,eax
   14001a58f:	(bad)  
   14001a590:	cmp    ecx,DWORD PTR [rcx+0x7a39ffed]
   14001a596:	(bad)  
   14001a597:	push   QWORD PTR [rdi]
   14001a599:	(bad)  
   14001a59a:	out    0xff,al
   14001a59c:	xor    al,BYTE PTR [rdi-0x28]
   14001a59f:	jmp    FWORD PTR [rsi]
   14001a5a1:	cmp    cl,cl
   14001a5a3:	jmp    FWORD PTR [rip+0x2cffc235]        # 0x16d0167de
   14001a5a9:	xor    edi,DWORD PTR [rsi+0x683244ff]
   14001a5af:	rex.X add BYTE PTR [rax],al
	...
   14001a5e2:	add    BYTE PTR [rax],al
   14001a5e4:	mov    dl,0x7c
   14001a5e6:	xor    cl,BYTE PTR [rbx]
   14001a5e8:	mov    ah,0x7d
   14001a5ea:	xor    dl,BYTE PTR [rdi-0x3b]
   14001a5ed:	mov    WORD PTR [rbx],?
   14001a5ef:	mov    esp,0xfa4297d3
   14001a5f4:	rcl    BYTE PTR [rbx-0x713701bc],1
   14001a5fa:	rex.WXB (bad) 
   14001a5fc:	mov    esi,0x8dfe4c88
   14001a601:	(bad)  
   14001a602:	rex.R (bad) 
   14001a604:	(bad)  
   14001a605:	(bad)  
   14001a606:	rex.XB (bad) 
   14001a608:	and    al,0x14
   14001a60a:	rex.RX (bad) 
   14001a60c:	sbb    eax,0x1cff4611
   14001a611:	adc    DWORD PTR [rsi-0x2],eax
   14001a614:	sbb    edx,DWORD PTR [rax]
   14001a616:	rex.RX (bad) 
   14001a618:	jns    0x14001a66a
   14001a61a:	sub    edi,edi
   14001a61c:	xor    BYTE PTR [rsi],bl
   14001a61e:	rex.XB (bad) 
   14001a620:	sbb    BYTE PTR [rax],dl
   14001a622:	rex.WRX (bad) 
   14001a624:	adc    al,0x14
   14001a626:	push   0xffffffffffffffff
   14001a628:	adc    eax,0x19fe7a19
   14001a62d:	sbb    eax,0x251efe86
   14001a632:	xchg   ebx,eax
   14001a633:	jmp    QWORD PTR [rip+0x2cfea432]        # 0x16d004a6b
   14001a639:	rex.RB mov r12d,0xda5d35fe
   14001a63f:	(bad)  
   14001a640:	cmp    DWORD PTR [rbp-0x16],esi
   14001a643:	(bad)  
   14001a644:	cmp    ecx,DWORD PTR [rcx-0x6ac40013]
   14001a64a:	out    dx,eax
   14001a64b:	(bad)  
   14001a64c:	cmp    edx,DWORD PTR [rbp-0x76c40111]
   14001a652:	in     eax,dx
   14001a653:	(bad)  
   14001a654:	cmp    DWORD PTR [rdi-0x16],esi
   14001a657:	(bad)  
   14001a658:	ss pop rdx
   14001a65a:	in     al,0xfe
   14001a65c:	xor    BYTE PTR [rdx-0x2d],al
   14001a65f:	jmp    FWORD PTR [rsi]
   14001a661:	(bad)  
   14001a662:	(bad)  
   14001a663:	(bad)  
   14001a664:	sub    eax,0x30fec134
   14001a669:	xor    ebp,DWORD PTR [rbp+0x613247df]
   14001a66f:	(bad)  
	...
   14001a6ac:	mov    dl,0x7a
   14001a6ae:	(bad)  
   14001a6af:	add    ch,BYTE PTR [rsi-0x4bd4d38b]
   14001a6b5:	jnp    0x14001a6eb
   14001a6b7:	nop
   14001a6b8:	ret    
   14001a6b9:	mov    DWORD PTR [rcx-0x14],eax
   14001a6bc:	mov    WORD PTR [rcx+0x3d],fs
   14001a6bf:	inc    BYTE PTR [rbp+0x2c]
   14001a6c2:	rex.X jmp FWORD PTR [rsi]
   14001a6c5:	sbb    al,BYTE PTR [rbp-0x2]
   14001a6c8:	sub    DWORD PTR [rdi],edx
   14001a6ca:	rex.RX (bad) 
   14001a6cc:	(bad)  
   14001a6cd:	(bad)  
   14001a6ce:	rex.RX jmp QWORD PTR [rsi]
   14001a6d1:	adc    eax,0x1525fe46
   14001a6d6:	rex.RX (bad) 
   14001a6d8:	cmp    BYTE PTR [rdx],ah
   14001a6da:	rex push QWORD PTR [rdi+0x4e]
   14001a6de:	(bad)  
   14001a6df:	(bad)  
   14001a6e0:	sbb    dl,BYTE PTR [rcx]
   14001a6e2:	rex.RXB (bad) 
   14001a6e4:	(bad)  
   14001a6e5:	adc    bl,BYTE PTR [rdi+rdi*8+0x13]
   14001a6e9:	(bad)  
   14001a6ea:	je     0x14001a6ea
   14001a6ec:	(bad)  
   14001a6ed:	sbb    al,0x80
   14001a6ef:	(bad)  
   14001a6f0:	sbb    al,0x22
   14001a6f2:	mov    ?,edi
   14001a6f4:	and    al,0x2e
   14001a6f6:	lahf   
   14001a6f7:	(bad)  
   14001a6f8:	sub    al,BYTE PTR [rdx-0x48]
   14001a6fb:	(bad)  
   14001a6fc:	xor    al,0x5b
   14001a6fe:	xlat   BYTE PTR ds:[rbx]
   14001a6ff:	(bad)  
   14001a700:	cmp    DWORD PTR [rsi-0x16],esi
   14001a703:	(bad)  
   14001a704:	cmp    al,0x8c
   14001a706:	out    dx,al
   14001a707:	(bad)  
   14001a708:	cmp    bl,BYTE PTR [rcx-0x67c50110]
   14001a70e:	out    dx,eax
   14001a70f:	(bad)  
   14001a710:	cmp    ecx,DWORD PTR [rax+0x7239ffed]
   14001a716:	jmp    0x12155dc19
   14001a71b:	(bad)  
   14001a71c:	(bad)  
   14001a71d:	ds iret 
   14001a71f:	jmp    FWORD PTR [rip+0x2dfec435]        # 0x16e006b5a
   14001a725:	xor    al,0xbf
   14001a727:	inc    BYTE PTR [rax+0x32]
   14001a72a:	jns    0x14001a6b5
   14001a72c:	xor    sil,BYTE PTR [rdi+0x1]
	...
   14001a778:	test   DWORD PTR [rbx+riz*1+0x16],edx
   14001a77c:	push   rdi
   14001a77d:	(bad)  
   14001a77e:	cmp    bh,dl
   14001a780:	rex.RXB sub eax,0x2b44ff41
   14001a786:	rex.X inc DWORD PTR [rax+0x28]
   14001a78a:	rex.XB (bad) 
   14001a78c:	cmp    esp,DWORD PTR [rbx+rax*2]
   14001a78f:	push   QWORD PTR [rsi]
   14001a791:	and    DWORD PTR [rdi+rdi*8+0x33],eax
   14001a795:	(bad)  
   14001a796:	rex.R push QWORD PTR [rax]
   14001a799:	sbb    al,0x45
   14001a79b:	push   QWORD PTR [rsp+rcx*2+0x30]
   14001a79f:	(bad)  
   14001a7a0:	cmp    ah,BYTE PTR [rip+0x1018ff40]        # 0x1501aa6e6
   14001a7a6:	rex.WRX call QWORD PTR [rsp+r10*1]
   14001a7aa:	imul   edi,edi,0x15
   14001a7ad:	sbb    bh,BYTE PTR [rdi+rdi*8+0x1a]
   14001a7b1:	(bad)  
   14001a7b2:	mov    bh,bh
   14001a7b4:	and    ch,BYTE PTR [rbx]
   14001a7b6:	(bad)  
   14001a7b7:	jmp    FWORD PTR [rcx]
   14001a7b9:	cmp    eax,0x5833ffb3
   14001a7be:	(bad)  
   14001a7bf:	(bad)  
   14001a7c0:	cmp    DWORD PTR [rdi-0x16],esi
   14001a7c3:	(bad)  
   14001a7c4:	cmp    ecx,DWORD PTR [rdi-0x63c50012]
   14001a7ca:	lock (bad) 
   14001a7cc:	cmp    bl,BYTE PTR [rdx-0x77c40010]
   14001a7d2:	in     eax,dx
   14001a7d3:	(bad)  
   14001a7d4:	cmp    DWORD PTR [rdi-0x17],ebp
   14001a7d7:	push   QWORD PTR [rbx]
   14001a7d9:	rex.WRX fdivp st(7),st
   14001a7dc:	cs cmp cl,bl
   14001a7df:	jmp    FWORD PTR [rip+0x2dffc235]        # 0x16e016a1a
   14001a7e5:	xor    edi,DWORD PTR [rsi+0x613247fc]
   14001a7eb:	xor    BYTE PTR [rax],al
	...
   14001a839:	add    BYTE PTR [rax],al
   14001a83b:	add    BYTE PTR [rsi+0x3c],ah
   14001a83e:	(bad)  
   14001a83f:	xor    DWORD PTR [rbx+0x52],edi
   14001a842:	sub    al,0xf1
   14001a844:	jne    0x14001a895
   14001a846:	xor    dh,bh
   14001a848:	push   0x47
   14001a84a:	ss (bad) 
   14001a84c:	pop    rbx
   14001a84d:	cmp    al,0x3c
   14001a84f:	dec    DWORD PTR [rdi+0x33]
   14001a852:	(bad)  
   14001a853:	inc    BYTE PTR [rsi+0x2c]
   14001a856:	inc    BYTE PTR [r8+0x27]
   14001a85a:	rex.X inc DWORD PTR [rbp+0x2b]
   14001a85e:	rex inc BYTE PTR [rax+0x1afe2f55]
   14001a865:	adc    DWORD PTR [rax-0x1],ecx
   14001a868:	(bad)  
   14001a869:	adc    bl,BYTE PTR [rsi-0x2]
   14001a86c:	adc    al,0x18
   14001a86e:	ja     0x14001a86e
   14001a870:	sbb    DWORD PTR [rip+0x271fff85],ebx        # 0x16721a7fb
   14001a876:	xchg   ebp,eax
   14001a877:	(bad)  
   14001a878:	sub    BYTE PTR [rcx],bh
   14001a87a:	scas   al,BYTE PTR es:[rdi]
   14001a87b:	(bad)  
   14001a87c:	xor    dl,BYTE PTR [rsi-0x2e]
   14001a87f:	(bad)  
   14001a880:	cmp    DWORD PTR [rdi-0x16],esi
   14001a883:	(bad)  
   14001a884:	cmp    edx,DWORD PTR [rdx-0x5dc50011]
   14001a88a:	icebp  
   14001a88b:	(bad)  
   14001a88c:	cmp    bl,BYTE PTR [rax+rsi*8-0x1379c402]
   14001a893:	(bad)  
   14001a894:	cmp    BYTE PTR [rdx-0x18],ch
   14001a897:	(bad)  
   14001a898:	xor    cl,BYTE PTR [rax-0x27]
   14001a89b:	(bad)  
   14001a89c:	cs cmp al,cl
   14001a89f:	jmp    FWORD PTR [rip+0x34fec134]        # 0x1750069d9
   14001a8a5:	xor    esp,DWORD PTR [rdx+0x6b3244cd]
   14001a8ab:	add    eax,0x0
	...
   14001a900:	(bad)  
   14001a901:	pop    rax
   14001a902:	adc    edx,DWORD PTR [rbx-0x45]
   14001a905:	jle    0x14001a928
   14001a907:	cli    
   14001a908:	stos   DWORD PTR es:[rdi],eax
   14001a909:	jb     0x14001a927
   14001a90b:	(bad)  
   14001a90c:	xchg   edx,eax
   14001a90d:	(bad)  {k2}
   14001a912:	cs (bad) 
   14001a914:	fs rex.XB cmp r14b,dil
   14001a918:	push   rbp
   14001a919:	(bad)  
   14001a91a:	dec    DWORD PTR ds:[rbp+0x32]
   14001a91e:	inc    BYTE PTR [r8+0x3dfe3355]
   14001a925:	(bad)  
   14001a926:	(bad)  
   14001a927:	call   QWORD PTR [rdi]
   14001a929:	adc    DWORD PTR [rax-0x2],edx
   14001a92c:	adc    edx,DWORD PTR [rip+0x1b17fe6f]        # 0x15b19a7a1
   14001a932:	cmp    bh,0x1d
   14001a935:	and    al,0x90
   14001a937:	(bad)  
   14001a938:	es xor eax,0x5331fea8
   14001a93e:	(bad)  
   14001a93f:	(bad)  
   14001a940:	cmp    bh,BYTE PTR [rcx-0x16]
   14001a943:	(bad)  
   14001a944:	cmp    edx,DWORD PTR [rdi-0x55c40011]
   14001a94a:	repnz (bad) 
   14001a94c:	cmp    ebx,DWORD PTR [rdi-0x7bc40110]
   14001a952:	in     al,dx
   14001a953:	push   QWORD PTR [rdi]
   14001a955:	fs out 0xfe,eax
   14001a958:	xor    BYTE PTR [rbx-0x2c],al
   14001a95b:	(bad)  
   14001a95c:	cs ss (bad) 
   14001a95f:	jmp    FWORD PTR [rip+0x41fec034]        # 0x182006999
   14001a965:	xor    dh,BYTE PTR [rsi+0x79]
	...
   14001a9c0:	pushf  
   14001a9c1:	movsxd edx,DWORD PTR [rdi]
   14001a9c3:	add    DWORD PTR [rbp-0x3199e195],esp
   14001a9c9:	nop
   14001a9ca:	xor    bh,dl
   14001a9cc:	mov    BYTE PTR [rsi+0x75afff26],0x1a
   14001a9d3:	call   QWORD PTR [rdx+0x77ff2162]
   14001a9d9:	push   rax
   14001a9da:	xor    bh,bh
   14001a9dc:	fs rex.XB cmp r15b,dil
   14001a9e0:	pop    rdi
   14001a9e1:	(bad)  
   14001a9e2:	cmp    edi,edi
   14001a9e4:	xchg   BYTE PTR [rdx+0x30],bl
   14001a9e7:	call   FWORD PTR [rdx]
   14001a9e9:	adc    DWORD PTR [rax-0x1],ecx
   14001a9ec:	adc    eax,0x15ff6313
   14001a9f1:	sbb    DWORD PTR [rbx-0x1],edi
   14001a9f4:	sbb    esp,DWORD PTR [rax]
   14001a9f6:	mov    edi,edi
   14001a9f8:	and    al,0x31
   14001a9fa:	movabs ds:0xea7a39ffca5130ff,eax
   14001aa03:	(bad)  
   14001aa04:	cmp    ebx,DWORD PTR [rbp-0x4fc60010]
   14001aa0a:	repnz (bad) 
   14001aa0c:	cmp    ah,BYTE PTR [rbx-0x7dc5000f]
   14001aa12:	in     al,dx
   14001aa13:	push   QWORD PTR [rsi]
   14001aa15:	pop    rbp
   14001aa16:	in     al,0xff
   14001aa18:	(bad)  
   14001aa19:	ds sar bh,1
   14001aa1c:	sub    eax,0x2dffc335
   14001aa21:	xor    edi,DWORD PTR [rbp+0x613247fa]
   14001aa27:	(bad)  
	...
   14001aa84:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001aa85:	ins    DWORD PTR es:[rdi],dx
   14001aa86:	(bad)  
   14001aa87:	add    DWORD PTR [rdx-0x4da7e498],esp
   14001aa8d:	ja     0x14001aab0
   14001aa8f:	out    dx,al
   14001aa90:	mov    ecx,0xb6fe1c7b
   14001aa95:	jns    0x14001aaaf
   14001aa97:	(bad)  
   14001aa98:	lahf   
   14001aa99:	push   0x1b
   14001aa9b:	inc    DWORD PTR [rbp+0x74fe285a]
   14001aaa1:	rex.WRXB xor r15b,r14b
   14001aaa4:	xchg   ebp,eax
   14001aaa5:	gs sub eax,0x40263bff
   14001aaab:	(bad)  
   14001aaac:	(bad)  
   14001aaad:	adc    DWORD PTR [rsi+rdi*8+0x14],edx
   14001aab1:	(bad)  
   14001aab2:	je     0x14001aab3
   14001aab4:	sbb    DWORD PTR [rip+0x2d22fe86],ebx        # 0x16d24a940
   14001aaba:	popf   
   14001aabb:	(bad)  
   14001aabc:	(bad)  
   14001aabd:	rex.WRB (bad) 
   14001aabf:	(bad)  
   14001aac0:	cmp    bh,BYTE PTR [rbx-0x16]
   14001aac3:	(bad)  
   14001aac4:	cmp    ah,BYTE PTR [rbp-0x47c7000f]
   14001aaca:	repz (bad) 
   14001aacc:	cmp    ah,BYTE PTR [rbp+0x7f3afef1]
   14001aad2:	jmp    0x14001aad3
   14001aad4:	xor    eax,0x2efee155
   14001aad9:	cmp    cl,bl
   14001aadb:	(bad)  
   14001aadc:	sub    eax,0x35ffc234
   14001aae1:	xor    ebx,DWORD PTR [rdi+0x673245c9]
   14001aae7:	add    al,0x0
	...
   14001ab49:	add    BYTE PTR [rax],al
   14001ab4b:	add    BYTE PTR [rax+0x6f1b1b56],cl
   14001ab51:	rex.RB and al,0x7b
   14001ab54:	adc    DWORD PTR [rbx+0x22],0x1a71abc7
   14001ab5b:	(bad)  
   14001ab5c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001ab5d:	outs   dx,DWORD PTR ds:[rsi]
   14001ab5e:	sbb    bh,bh
   14001ab60:	nop
   14001ab61:	(bad)  
   14001ab62:	and    edi,edi
   14001ab64:	mov    DWORD PTR [rbp+0x27],ebx
   14001ab67:	inc    DWORD PTR [rcx+rbx*2+0x1118ff32]
   14001ab6e:	rex.WX call QWORD PTR [rsp+r10*1]
   14001ab72:	push   0xffffffffffffffff
   14001ab74:	(bad)  
   14001ab75:	sbb    al,0x80
   14001ab77:	jmp    QWORD PTR [rax]
   14001ab79:	sub    BYTE PTR [rsi-0x3eb6d201],dl
   14001ab7f:	(bad)  
   14001ab80:	cmp    bh,BYTE PTR [rdx+rbp*8-0x1]
   14001ab84:	cmp    DWORD PTR [rbp-0x3cc7000e],ebp
   14001ab8a:	repz (bad) 
   14001ab8c:	cmp    ah,BYTE PTR [rdi+0x7a3afff1]
   14001ab92:	(bad)  
   14001ab93:	push   QWORD PTR [rbx]
   14001ab95:	rex.WRB fdiv st(7),st
   14001ab98:	cs (bad) 
   14001ab9a:	enter  0x2dff,0x34
   14001ab9e:	sar    bh,0x41
   14001aba1:	xor    dh,BYTE PTR [rbp+0x78]
	...
   14001ac14:	jl     0x14001ac63
   14001ac16:	sbb    DWORD PTR [rdx],eax
   14001ac18:	js     0x14001ac64
   14001ac1a:	sbb    edx,DWORD PTR [rax-0x61]
   14001ac1d:	imul   ebx,DWORD PTR [rdx],0x1773ace7
   14001ac23:	(bad)  
   14001ac24:	pushf  
   14001ac25:	push   0x72a9ff1b
   14001ac2a:	es (bad) 
   14001ac2c:	xor    esp,DWORD PTR [rcx]
   14001ac2e:	rex.X (bad) 
   14001ac30:	adc    eax,0x15ff5b12
   14001ac35:	sbb    DWORD PTR [rdx-0x2],edi
   14001ac38:	sbb    eax,0x2bfe9024
   14001ac3d:	rex.R mov edx,0xe97d3aff
   14001ac43:	(bad)  
   14001ac44:	cmp    BYTE PTR [rax-0x32c9000e],bh
   14001ac4a:	icebp  
   14001ac4b:	(bad)  
   14001ac4c:	cmp    DWORD PTR [rax+0x7439fef1],ebp
   14001ac52:	(bad)  
   14001ac53:	push   QWORD PTR [rcx]
   14001ac55:	rex.RB xlat BYTE PTR ds:[rbx]
   14001ac57:	(bad)  
   14001ac58:	sub    eax,0x2cfec536
   14001ac5d:	xor    edi,DWORD PTR [rsi+0x623247fc]
   14001ac63:	and    eax,0x0
	...
   14001acdc:	or     DWORD PTR [rdi+0x14],0x18689f24
   14001ace3:	shl    DWORD PTR [rdx-0x5500e88a],1
   14001ace9:	jno    0x14001ad06
   14001aceb:	(bad)  
   14001acec:	jp     0x14001ad40
   14001acee:	xor    eax,0x4e1017fe
   14001acf3:	call   QWORD PTR [rsi+rdx*1]
   14001acf6:	jb     0x14001acf6
   14001acf8:	sbb    esp,DWORD PTR [rax]
   14001acfa:	mov    bh,dh
   14001acfc:	sub    DWORD PTR [rsi],edi
   14001acfe:	mov    bl,0xff
   14001ad00:	cmp    DWORD PTR [rbp-0x18],edi
   14001ad03:	(bad)  
   14001ad04:	cmp    ebp,eax
   14001ad06:	icebp  
   14001ad07:	(bad)  
   14001ad08:	cmp    ebx,ecx
   14001ad0a:	out    dx,eax
   14001ad0b:	(bad)  
   14001ad0c:	cmp    ah,BYTE PTR [rdi+0x6c38fef1]
   14001ad12:	call   0x11140de16
   14001ad17:	(bad)  
   14001ad18:	sub    eax,0x34fec234
   14001ad1d:	xor    esp,DWORD PTR [rax+0x653246c7]
   14001ad23:	add    eax,DWORD PTR [rax]
	...
   14001ad9d:	add    BYTE PTR [rax],al
   14001ad9f:	add    BYTE PTR [rsi-0x56e5f0ae],al
   14001ada5:	outs   dx,DWORD PTR ds:[rsi]
   14001ada6:	(bad)  
   14001ada7:	fidiv  WORD PTR [rdi-0x5000e787]
   14001adad:	ja     0x14001add6
   14001adaf:	jmp    QWORD PTR [rsi]
   14001adb1:	sbb    DWORD PTR [rbp-0x1],eax
   14001adb4:	adc    eax,0x18ff6613
   14001adb9:	sbb    eax,0x3826ff83
   14001adbe:	stos   BYTE PTR es:[rdi],al
   14001adbf:	(bad)  
   14001adc0:	cmp    DWORD PTR [rbp-0x19],edi
   14001adc3:	(bad)  
   14001adc4:	cmp    edx,eax
   14001adc6:	out    dx,eax
   14001adc7:	(bad)  
   14001adc8:	cmp    eax,0x3affecdd
   14001adcd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001adce:	lock push QWORD PTR [rsi]
   14001add1:	(bad)  
   14001add2:	in     eax,0xff
   14001add4:	cs cmp cl,bl
   14001add7:	jmp    FWORD PTR [rip+0x40ffc034]        # 0x181016e11
   14001addd:	xor    dh,BYTE PTR [rdi+0x71]
	...
   14001ae64:	mov    dl,BYTE PTR [rdi+rcx*1+0x34]
   14001ae68:	mov    ch,0x78
   14001ae6a:	sbb    cl,dh
   14001ae6c:	mov    ah,0x79
   14001ae6e:	(bad)  
   14001ae6f:	(bad)  
   14001ae70:	imul   eax,DWORD PTR [rdi+0x39],0x561117ff
   14001ae77:	(bad)  
   14001ae78:	(bad)  
   14001ae79:	sbb    bh,BYTE PTR [rsi+rdi*8+0x23]
   14001ae7d:	xor    BYTE PTR [rcx-0x1b84c701],ah
   14001ae83:	(bad)  
   14001ae84:	cmp    eax,0x3effedd7
   14001ae89:	fucomip st,st(2)
   14001ae8b:	(bad)  
   14001ae8c:	cmp    DWORD PTR [rdi+0x5534feef],ebx
   14001ae92:	loopne 0x14001ae93
   14001ae94:	cs (bad) 
   14001ae96:	(bad)  
   14001ae97:	(bad)  
   14001ae98:	sub    eax,0x47f6bc33
   14001ae9d:	xor    ah,BYTE PTR [rcx+0x1d]
	...
   14001af28:	nop
   14001af29:	pop    rcx
   14001af2a:	punpcklbw mm6,DWORD PTR [rbp-0x5b02e788]
   14001af31:	jo     0x14001af62
   14001af33:	jmp    QWORD PTR [rax]
   14001af35:	adc    al,0x4a
   14001af37:	(bad)  
   14001af38:	adc    eax,0x20fe7216
   14001af3d:	sub    DWORD PTR [rdi-0x1f89c901],edx
   14001af43:	(bad)  
   14001af44:	cmp    eax,0x3effecdc
   14001af49:	fucomip st,st(2)
   14001af4b:	(bad)  
   14001af4c:	cmp    dl,BYTE PTR [rbp+0x4a32feee]
   14001af52:	fcos   
   14001af54:	sub    eax,0x39fec335
   14001af59:	xor    dl,BYTE PTR [rax+0x733241b1]
   14001af5f:	add    al,BYTE PTR [rax]
	...
   14001afe5:	add    BYTE PTR [rax],al
   14001afe7:	add    BYTE PTR [rcx-0x62fcf1a7],dl
   14001afed:	adc    ah,BYTE PTR fs:[rbx-0xd88953]
   14001aff4:	push   rdx
   14001aff5:	ss cmp al,0xff
   14001aff8:	adc    eax,0x1cff6313
   14001affd:	and    cl,BYTE PTR [rdi+rdi*8-0x2791cc]
   14001b004:	ds fucomp st(3)
   14001b007:	(bad)  
   14001b008:	ds fsubp st(2),st
   14001b00b:	(bad)  
   14001b00c:	cmp    DWORD PTR [rbp+0x3f30ffec],eax
   14001b012:	sar    bh,1
   14001b014:	sub    eax,0x42fec034
   14001b019:	xor    ch,BYTE PTR [rdi+0x50]
	...
   14001b0ac:	mov    DWORD PTR [rdi+rcx*1+0x14],edx
   14001b0b0:	popf   
   14001b0b1:	push   0x6a9be21b
   14001b0b6:	xor    edi,esi
   14001b0b8:	sbb    DWORD PTR [rdx],edx
   14001b0ba:	push   rbx
   14001b0bb:	(bad)  
   14001b0bc:	sbb    BYTE PTR [rip+0x6131ff82],bl        # 0x1a133b044
   14001b0c2:	int    0xfe
   14001b0c4:	ds fucomp st(3)
   14001b0c7:	(bad)  
   14001b0c8:	cmp    eax,0x37feebd9
   14001b0cd:	outs   dx,DWORD PTR ds:[rsi]
   14001b0ce:	out    0xfe,eax
   14001b0d0:	cs cmp al,cl
   14001b0d3:	push   QWORD PTR [rcx]
   14001b0d5:	xor    ebp,DWORD PTR [rdx+0x653246da]
   14001b0db:	or     DWORD PTR [rax],eax
	...
   14001b16d:	add    BYTE PTR [rax],al
   14001b16f:	add    BYTE PTR [rcx-0x48adefac],cl
   14001b175:	jle    0x14001b1a1
   14001b177:	std    
   14001b178:	cmp    esp,DWORD PTR [rdi]
   14001b17a:	rex.X (bad) 
   14001b17c:	(bad)  
   14001b17d:	(bad)  
   14001b17e:	je     0x14001b17f
   14001b180:	sub    al,0x4e
   14001b182:	mov    ebp,0xebda3efe
   14001b187:	(bad)  
   14001b188:	cmp    eax,0x34feeccc
   14001b18d:	pop    rax
   14001b18e:	fdivp  st(6),st
   14001b190:	sub    eax,0x41ffc234
   14001b195:	xor    dh,BYTE PTR [rsi+0x6f]
	...
   14001b230:	lea    ebx,[rax+0x13]
   14001b233:	add    al,0x9e
   14001b235:	sbb    esi,DWORD PTR [ebx-0xc9a379]
   14001b23c:	(bad)  
   14001b23d:	adc    al,0x62
   14001b23f:	jmp    QWORD PTR [rip+0x3dffa939]        # 0x17e015b7e
   14001b245:	shr    ah,1
   14001b247:	(bad)  
   14001b248:	cmp    esi,DWORD PTR [rcx+0x4330ffec]
   14001b24e:	sar    edi,1
   14001b250:	(bad)  
   14001b251:	xor    esi,DWORD PTR [rcx+0x653246e4]
   14001b257:	or     eax,0x0
	...
   14001b2f4:	nop
   14001b2f5:	pop    rcx
   14001b2f6:	adc    ebp,DWORD PTR [rcx+rax*8]
   14001b2f9:	test   DWORD PTR [rip+0x4e1d2bf5],ebp        # 0x18e1edef4
   14001b2ff:	call   FWORD PTR [rip+0x3afe9126]        # 0x17b00442b
   14001b305:	test   al,0xea
   14001b307:	push   QWORD PTR [rdi]
   14001b309:	jns    0x14001b2f1
   14001b30b:	(bad)  
   14001b30c:	sub    eax,0x42fec236
   14001b311:	xor    dh,BYTE PTR [rdx+0x64]
	...
   14001b3b4:	sahf   
   14001b3b5:	sbb    eax,DWORD PTR gs:[rcx]
   14001b3b8:	test   al,0x6d
   14001b3ba:	and    BYTE PTR [rsi+0x78],bh
   14001b3bd:	push   rcx
   14001b3be:	cmp    edi,edi
   14001b3c0:	sbb    BYTE PTR [rbx],bl
   14001b3c2:	jp     0x14001b3c2
   14001b3c4:	xor    BYTE PTR [rbx-0x33],dl
   14001b3c7:	jmp    FWORD PTR [rdi]
   14001b3c9:	rex.X retf 0x36fe
   14001b3cd:	xor    dl,BYTE PTR [rdi+0x733242be]
   14001b3d3:	(bad)  
	...
   14001b478:	xchg   edx,eax
   14001b479:	pop    rbp
   14001b47a:	(bad)  
   14001b47b:	(bad)  
   14001b47c:	lods   al,BYTE PTR ds:[rsi]
   14001b47d:	jae    0x14001b4a7
   14001b47f:	mov    dh,0x34
   14001b481:	(bad)  
   14001b482:	pop    rbx
   14001b483:	jmp    QWORD PTR [rbx]
   14001b485:	sub    DWORD PTR [rax-0x5bd0d201],esp
   14001b48b:	fdivr  QWORD PTR [rsi]
   14001b48d:	xor    bh,BYTE PTR [rcx+0x1f]
	...
   14001b53c:	jl     0x14001b58d
   14001b53e:	(bad)  
   14001b53f:	or     dh,BYTE PTR [rsi+0x4e]
   14001b542:	xor    al,0x80
   14001b544:	ss sub al,0x73
   14001b547:	xchg   esi,eax
   14001b548:	cmp    DWORD PTR [rip+0x186f],ebp        # 0x14001cdbd
	...
   14001b702:	add    BYTE PTR [rax],al
   14001b704:	(bad)  
   14001b705:	(bad)  
   14001b706:	(bad)  
   14001b707:	(bad)  
   14001b708:	(bad)  
   14001b709:	inc    DWORD PTR [rax]
   14001b70b:	add    bh,bh
   14001b70d:	(bad)  
   14001b70e:	(bad)  
   14001b70f:	(bad)  
   14001b710:	(bad)  
   14001b711:	inc    DWORD PTR [rax]
   14001b713:	add    bh,bh
   14001b715:	push   rax
   14001b717:	(bad)  
   14001b718:	(bad)  
   14001b719:	inc    DWORD PTR [rax]
   14001b71b:	add    bh,bh
   14001b71d:	jmp    rax
   14001b71f:	(bad)  
   14001b720:	(bad)  
   14001b721:	inc    DWORD PTR [rax]
   14001b723:	add    bh,bh
   14001b725:	jmp    rax
   14001b727:	(bad)  
   14001b728:	(bad)  
   14001b729:	inc    DWORD PTR [rax]
   14001b72b:	add    bh,bh
   14001b72d:	inc    eax
   14001b72f:	ud0    edi,edi
   14001b732:	add    BYTE PTR [rax],al
   14001b734:	(bad)  
   14001b735:	inc    eax
   14001b737:	(bad)  
   14001b738:	(bad)  
   14001b739:	inc    DWORD PTR [rax]
   14001b73b:	add    bh,bh
   14001b73d:	inc    DWORD PTR [rax+0xffff03]
   14001b743:	add    bh,bh
   14001b745:	inc    DWORD PTR [rax+0xffff01]
   14001b74b:	add    bh,bh
   14001b74d:	inc    DWORD PTR [rax]
   14001b74f:	add    bh,bh
   14001b751:	cld    
   14001b752:	add    BYTE PTR [rax],al
   14001b754:	(bad)  
   14001b755:	inc    DWORD PTR [rax]
   14001b757:	add    BYTE PTR [rdi-0x8],bh
   14001b75a:	add    BYTE PTR [rax],al
   14001b75c:	(bad)  
   14001b75d:	inc    BYTE PTR [rax]
   14001b75f:	add    BYTE PTR [rdi-0x10],bh
   14001b762:	add    BYTE PTR [rax],al
   14001b764:	(bad)  
   14001b765:	inc    BYTE PTR [rax]
   14001b767:	add    BYTE PTR [rdi],bh
   14001b769:	loopne 0x14001b76b
   14001b76b:	add    bh,bh
   14001b76d:	mov    BYTE PTR [rax],al
   14001b76f:	add    BYTE PTR [rdi],cl
   14001b771:	rol    DWORD PTR [rax],0x0
   14001b774:	inc    DWORD PTR [rax]
   14001b776:	add    BYTE PTR [rax],al
   14001b778:	(bad)  
   14001b779:	add    DWORD PTR [rax],eax
   14001b77b:	add    ah,bh
   14001b77d:	add    BYTE PTR [rax],al
   14001b77f:	add    BYTE PTR [rax],al
   14001b781:	add    DWORD PTR [rax],eax
   14001b783:	add    al,bh
   14001b785:	add    BYTE PTR [rax],al
   14001b787:	add    BYTE PTR [rax],al
   14001b789:	add    eax,DWORD PTR [rax]
   14001b78b:	add    al,dh
   14001b78d:	add    BYTE PTR [rax],al
   14001b78f:	add    BYTE PTR [rax],al
   14001b791:	add    eax,DWORD PTR [rax]
   14001b793:	add    al,al
   14001b795:	add    BYTE PTR [rax],al
   14001b797:	add    BYTE PTR [rax],al
   14001b799:	(bad)  
   14001b79a:	add    BYTE PTR [rax],al
   14001b79c:	add    BYTE PTR [rax],0x0
   14001b79f:	add    BYTE PTR [rax],al
   14001b7a1:	(bad)  
   14001b7a2:	add    BYTE PTR [rax],al
   14001b7a4:	add    BYTE PTR [rax],al
   14001b7a6:	add    BYTE PTR [rax],al
   14001b7a8:	add    BYTE PTR [rdi],al
   14001b7aa:	add    BYTE PTR [rax],al
   14001b7ac:	add    BYTE PTR [rax],al
   14001b7ae:	add    BYTE PTR [rax],al
   14001b7b0:	add    BYTE PTR [rdi],cl
   14001b7b2:	add    BYTE PTR [rax],al
   14001b7b4:	add    BYTE PTR [rax],al
   14001b7b6:	add    BYTE PTR [rax],al
   14001b7b8:	add    BYTE PTR [rdi],cl
   14001b7ba:	add    BYTE PTR [rax],al
   14001b7bc:	loopne 0x14001b7be
   14001b7be:	add    BYTE PTR [rax],al
   14001b7c0:	add    BYTE PTR [rdi],cl
   14001b7c2:	add    BYTE PTR [rax],al
   14001b7c4:	clc    
   14001b7c5:	add    BYTE PTR [rax],al
   14001b7c7:	add    BYTE PTR [rax],al
   14001b7c9:	(bad)  
   14001b7ca:	add    BYTE PTR [rax],al
   14001b7cc:	inc    DWORD PTR [rax]
   14001b7ce:	add    BYTE PTR [rax],al
   14001b7d0:	add    BYTE PTR [rdi],bl
   14001b7d2:	add    BYTE PTR [rax],al
   14001b7d4:	inc    eax
   14001b7d6:	add    BYTE PTR [rax],al
   14001b7d8:	add    BYTE PTR [rdi],bl
   14001b7da:	add    BYTE PTR [rax],al
   14001b7dc:	(bad)  
   14001b7dd:	clc    
   14001b7de:	add    BYTE PTR [rax],al
   14001b7e0:	add    BYTE PTR [rdi],bh
   14001b7e2:	add    BYTE PTR [rax],al
   14001b7e4:	(bad)  
   14001b7e5:	cld    
   14001b7e6:	add    BYTE PTR [rax],al
   14001b7e8:	add    BYTE PTR [rdi],bh
   14001b7ea:	add    BYTE PTR [rax],al
   14001b7ec:	(bad)  
   14001b7ed:	inc    BYTE PTR [rax]
   14001b7ef:	add    BYTE PTR [rax],al
   14001b7f1:	jg     0x14001b7f3
   14001b7f3:	add    bh,bh
   14001b7f5:	inc    BYTE PTR [rax]
   14001b7f7:	add    BYTE PTR [rax],al
   14001b7f9:	jg     0x14001b7fb
   14001b7fb:	add    bh,bh
   14001b7fd:	inc    DWORD PTR [rax]
   14001b7ff:	add    BYTE PTR [rax],al
   14001b801:	jg     0x14001b803
   14001b803:	add    bh,bh
   14001b805:	inc    eax
   14001b807:	add    BYTE PTR [rax],al
   14001b809:	inc    DWORD PTR [rax]
   14001b80b:	add    bh,bh
   14001b80d:	push   rax
   14001b80f:	add    BYTE PTR [rax],al
   14001b811:	inc    DWORD PTR [rax]
   14001b813:	add    bh,bh
   14001b815:	(bad)  
   14001b816:	cld    
   14001b817:	add    BYTE PTR [rax],al
   14001b819:	inc    DWORD PTR [rax]
   14001b81b:	add    bh,bh
   14001b81d:	(bad)  
   14001b81e:	inc    BYTE PTR [rax]
   14001b820:	add    edi,edi
   14001b822:	add    BYTE PTR [rax],al
   14001b824:	(bad)  
   14001b825:	(bad)  
   14001b826:	inc    DWORD PTR [rax]
   14001b828:	add    edi,edi
   14001b82a:	add    BYTE PTR [rax],al
   14001b82c:	(bad)  
   14001b82d:	(bad)  
   14001b82e:	inc    DWORD PTR [rax+0xff01]
   14001b834:	(bad)  
   14001b835:	(bad)  
   14001b836:	inc    DWORD PTR [rax+0xff03]
   14001b83c:	(bad)  
   14001b83d:	(bad)  
   14001b83e:	inc    eax
   14001b840:	add    edi,edi
   14001b842:	add    BYTE PTR [rax],al
   14001b844:	(bad)  
   14001b845:	(bad)  
   14001b846:	jmp    rax
   14001b848:	(bad)  
   14001b849:	inc    DWORD PTR [rax]
   14001b84b:	add    bh,bh
   14001b84d:	(bad)  
   14001b84e:	jmp    rax
   14001b850:	(bad)  
   14001b851:	inc    DWORD PTR [rax]
   14001b853:	add    bh,bh
   14001b855:	(bad)  
   14001b856:	push   rax
   14001b858:	ud0    eax,DWORD PTR [rax]
   14001b85b:	add    bh,bh
   14001b85d:	(bad)  
   14001b85e:	push   rax
   14001b860:	ud0    eax,DWORD PTR [rax]
   14001b863:	add    bh,bh
   14001b865:	(bad)  
   14001b866:	(bad)  
   14001b867:	clc    
   14001b868:	(bad)  
   14001b869:	inc    DWORD PTR [rax]
   14001b86b:	add    bh,bh
   14001b86d:	(bad)  
   14001b86e:	(bad)  
   14001b86f:	cld    
   14001b870:	(bad)  
   14001b871:	inc    DWORD PTR [rax]
   14001b873:	add    bh,bh
   14001b875:	(bad)  
   14001b876:	(bad)  
   14001b877:	(bad)  
   14001b878:	(bad)  
   14001b879:	inc    DWORD PTR [rax]
   14001b87b:	add    bh,bh
   14001b87d:	(bad)  
   14001b87e:	(bad)  
   14001b87f:	(bad)  
   14001b880:	(bad)  
   14001b881:	inc    DWORD PTR [rax]
   14001b883:	add    BYTE PTR [rax],ch
   14001b885:	add    BYTE PTR [rax],al
   14001b887:	add    BYTE PTR [rax],ah
   14001b889:	add    BYTE PTR [rax],al
   14001b88b:	add    BYTE PTR [rax+0x0],al
   14001b88e:	add    BYTE PTR [rax],al
   14001b890:	add    DWORD PTR [rax],eax
   14001b892:	and    BYTE PTR [rax],al
   14001b894:	add    BYTE PTR [rax],al
   14001b896:	add    BYTE PTR [rax],al
   14001b898:	adc    BYTE PTR [rax],0x0
	...
   14001b95f:	add    BYTE PTR [rsi+rdi*2-0x79],cl
   14001b963:	(bad)  
   14001b964:	lea    rsp,[rbx+0x4b5b5754]
   14001b96b:	or     al,0x0
	...
   14001b9dd:	add    BYTE PTR [rax],al
   14001b9df:	add    BYTE PTR [rcx-0x77],cl
   14001b9e2:	popf   
   14001b9e3:	xchg   ecx,eax
   14001b9e4:	cmp    edi,DWORD PTR [rdx-0x53c0000c]
   14001b9ea:	fsubr  st(1),st
   14001b9ec:	push   rdx
   14001b9ed:	ins    BYTE PTR es:[rdi],dx
   14001b9ee:	imul   edx,DWORD PTR [rbx+0x57],0x59
   14001b9f2:	rex.WRX add r8b,BYTE PTR [rax]
	...
   14001ba59:	add    BYTE PTR [rax],al
   14001ba5b:	add    BYTE PTR [rsi+0x5e],dl
   14001ba5e:	push   rbx
   14001ba5f:	adc    bh,BYTE PTR [rip+0x3befe9b3]        # 0x17bf1a418
   14001ba65:	mov    ecx,0xb63bfff4
   14001ba6a:	repz (bad) 
   14001ba6c:	cmp    al,0xac
   14001ba6e:	icebp  
   14001ba6f:	std    
   14001ba70:	rex.WR jo 0x14001b9ff
   14001ba73:	xchg   BYTE PTR [rbp+0x54],dl
   14001ba76:	push   rsi
   14001ba77:	add    al,0x0
	...
   14001bad9:	add    BYTE PTR [rax],al
   14001badb:	add    BYTE PTR [rbp+0x72],cl
   14001bade:	xchg   DWORD PTR [rdx+0x3c],esi
   14001bae1:	stos   DWORD PTR es:[rdi],eax
   14001bae2:	icebp  
   14001bae3:	(bad)  
   14001bae4:	cmp    al,0xaa
   14001bae6:	icebp  
   14001bae7:	(bad)  
   14001bae8:	cmp    al,0xa4
   14001baea:	lock (bad) 
   14001baec:	cmp    ebx,DWORD PTR [rbx-0x6ec40011]
   14001baf2:	out    dx,al
   14001baf3:	dec    DWORD PTR [rbx+0x66]
   14001baf6:	xchg   esp,eax
   14001baf7:	mov    ss,WORD PTR [rsi+0x4c]
   14001bafa:	push   rcx
   14001bafb:	add    eax,DWORD PTR [rax]
	...
   14001bb55:	add    BYTE PTR [rax],al
   14001bb57:	add    BYTE PTR [rbp+0x42],dl
   14001bb5a:	rex.R add eax,0xd9ce773f
   14001bb60:	cmp    ecx,DWORD PTR [rbp-0x70c40013]
   14001bb66:	in     eax,dx
   14001bb67:	(bad)  
   14001bb68:	cmp    ecx,DWORD PTR [rbp-0x77c40013]
   14001bb6e:	in     eax,dx
   14001bb6f:	(bad)  
   14001bb70:	cmp    eax,DWORD PTR [rsp+rbp*8-0x1481c301]
   14001bb77:	dec    BYTE PTR [rsi+0x59]
   14001bb7a:	(bad)  
   14001bb7b:	jne    0x14001bbd3
   14001bb7d:	rex.WB
   14001bb7e:	rex.WRXB add QWORD PTR [r8],r8
	...
   14001bbd5:	add    BYTE PTR [rax],al
   14001bbd7:	add    BYTE PTR [rdi+0x39],al
   14001bbda:	pop    rcx
   14001bbdb:	push   rcx
   14001bbdc:	xor    DWORD PTR [rbp-0x32],edx
   14001bbdf:	push   QWORD PTR [rsi]
   14001bbe1:	data16 fdivp st(7),st
   14001bbe4:	cmp    BYTE PTR [rdi-0x1a],ch
   14001bbe7:	(bad)  
   14001bbe8:	cmp    DWORD PTR [rbx-0x17],esi
   14001bbeb:	(bad)  
   14001bbec:	cmp    dh,BYTE PTR [rcx+rbp*8-0x1]
   14001bbf0:	cmp    dh,BYTE PTR [rbp-0x16]
   14001bbf3:	(bad)  
   14001bbf4:	cmp    esi,DWORD PTR [rdi-0x15]
   14001bbf7:	(bad)  
   14001bbf8:	cmp    al,0x77
   14001bbfa:	jmp    0x1a9540efa
   14001bbff:	push   rax
	...
   14001bc24:	push   rbp
   14001bc25:	xor    dh,BYTE PTR [rbx]
   14001bc27:	add    DWORD PTR [rdi+0x32],ecx
   14001bc2a:	rex.RX sub eax,0x0
	...
   14001bc54:	sub    r13,QWORD PTR [r11]
   14001bc57:	add    eax,0xcc7b292c
   14001bc5c:	and    eax,0x2affa533
   14001bc61:	rex.X mov dil,0xff
   14001bc64:	(bad)  
   14001bc65:	rex.WRXB (bad) 
   14001bc67:	push   QWORD PTR [rbx]
   14001bc69:	pop    rdx
   14001bc6a:	(bad)  
   14001bc6b:	push   QWORD PTR [rsi]
   14001bc6d:	movsxd ebx,edi
   14001bc6f:	push   QWORD PTR [rdi]
   14001bc71:	push   0xffffffffffffffe6
   14001bc73:	(bad)  
   14001bc74:	cmp    BYTE PTR [rcx-0x17],dh
   14001bc77:	(bad)  
   14001bc78:	cmp    bh,BYTE PTR [rcx-0x15]
   14001bc7b:	(bad)  
   14001bc7c:	ds jp  0x14001bc60
   14001bc7f:	lock push rbp
   14001bc81:	push   rax
   14001bc82:	pop    rsp
   14001bc83:	xor    eax,DWORD PTR [rax]
	...
   14001bc9d:	add    BYTE PTR [rax],al
   14001bc9f:	add    BYTE PTR [rdx+rsi*1+0x36],dl
   14001bca3:	add    DWORD PTR [rbx+0x32],ecx
   14001bca6:	push   rdi
   14001bca7:	pop    rax
   14001bca8:	xor    eax,DWORD PTR ds:[rdx+0x88]
	...
   14001bccf:	add    BYTE PTR [rdi+0x29],cl
   14001bcd2:	sbb    al,0x1
   14001bcd4:	cmp    ah,BYTE PTR [rip+0x1d197441]        # 0x15d1b311b
   14001bcda:	test   bh,bh
   14001bcdc:	sbb    eax,0x22ff8f23
   14001bce1:	sub    al,0x9b
   14001bce3:	jmp    QWORD PTR [rdi]
   14001bce5:	cmp    BYTE PTR [rbx-0x45bbd401],ch
   14001bceb:	jmp    FWORD PTR [rdi]
   14001bced:	push   rax
   14001bcee:	leave  
   14001bcef:	push   QWORD PTR [rbx+rbx*2]
   14001bcf2:	xlat   BYTE PTR ds:[rbx]
   14001bcf3:	push   QWORD PTR [rdi]
   14001bcf5:	addr32 in al,0xff
   14001bcf8:	cmp    BYTE PTR [rcx-0x17],dh
   14001bcfb:	(bad)  
   14001bcfc:	cmp    edi,DWORD PTR [rbx-0x15]
   14001bcff:	inc    DWORD PTR [rax+0x7a]
   14001bd02:	(bad)  
   14001bd03:	jrcxz  0x14001bd5b
   14001bd05:	rex.WRXB push r10
   14001bd07:	(bad)  
	...
   14001bd1c:	push   rsp
   14001bd1d:	xor    bh,BYTE PTR [rax]
   14001bd1f:	add    al,BYTE PTR [rdi+0x33]
   14001bd22:	data16 jo 0x14001bd52
   14001bd25:	xor    al,0xbd
   14001bd27:	stc    
   14001bd28:	rex.XB xor bpl,BYTE PTR [r13+0x26]
	...
   14001bd40:	or     DWORD PTR [rbp+0x13],0x3
   14001bd44:	xchg   esp,eax
   14001bd45:	pop    rbp
   14001bd46:	and    DWORD PTR [rcx-0x6f],ebx
   14001bd49:	pop    rbx
   14001bd4a:	and    BYTE PTR [rdx+0x7c],bl
   14001bd4d:	rex.W adc BYTE PTR [rdx*2+0x16762330],spl
   14001bd55:	adc    al,0x64
   14001bd57:	cli    
   14001bd58:	adc    al,0x18
   14001bd5a:	ja     0x14001bd5b
   14001bd5c:	(bad)  
   14001bd5d:	sbb    al,0x81
   14001bd5f:	call   FWORD PTR [rbx]
   14001bd61:	and    DWORD PTR [rdi+rdi*8-0x67d5df],ecx
   14001bd68:	es xor al,0xa7
   14001bd6b:	jmp    FWORD PTR [rdx]
   14001bd6d:	mov    r15b,0xff
   14001bd70:	(bad)  
   14001bd71:	rex.WRX enter 0x35ff,0x5c
   14001bd76:	fcos   
   14001bd78:	(bad)  
   14001bd79:	push   0xffffffffffffffe6
   14001bd7b:	(bad)  
   14001bd7c:	cmp    DWORD PTR [rdi-0x16],esi
   14001bd7f:	(bad)  
   14001bd80:	cmp    al,0x82
   14001bd82:	in     al,dx
   14001bd83:	(bad)  
   14001bd84:	(bad)  
   14001bd85:	adc    ah,0xe2
   14001bd88:	push   rbp
   14001bd89:	push   rbx
   14001bd8a:	pop    rcx
   14001bd8b:	cmp    DWORD PTR [rax+0x48],ebx
   14001bd8e:	cmp    eax,0x1
   14001bd93:	add    BYTE PTR [rax],al
   14001bd95:	add    BYTE PTR [rax],al
   14001bd97:	add    BYTE PTR [rsi+0x34],dl
   14001bd9a:	xor    ecx,DWORD PTR [rdx]
   14001bd9c:	rex.XB xor eax,0x342d8e79
   14001bda2:	ret    0x36fe
   14001bda5:	xor    ebx,DWORD PTR [rcx+0x683244bb]
   14001bdab:	add    DWORD PTR [rax],eax
	...
   14001bdb9:	add    BYTE PTR [rax],al
   14001bdbb:	add    BYTE PTR [rbp-0x51edecb0],al
   14001bdc1:	je     0x14001bdef
   14001bdc3:	movabs ds:0xff4b8fc8fe4792cf,al
   14001bdcc:	mov    ecx,0xa4ff4483
   14001bdd1:	outs   dx,DWORD PTR ds:[rsi]
   14001bdd2:	sub    edi,edi
   14001bdd4:	xor    al,0x21
   14001bdd6:	rex.RX call QWORD PTR [rip+0x14ff6112]        # 0x155011eef
   14001bddd:	(bad)  
   14001bdde:	jne    0x14001bddf
   14001bde0:	(bad)  
   14001bde1:	sbb    al,0x80
   14001bde3:	call   FWORD PTR [rbx]
   14001bde5:	and    DWORD PTR [rdi+rdi*8-0x67d5df],ecx
   14001bdec:	es xor eax,0x432bffa8
   14001bdf2:	mov    edx,0xce5231ff
   14001bdf7:	push   QWORD PTR [rsi]
   14001bdf9:	fs loope 0x14001bdfb
   14001bdfc:	cmp    BYTE PTR [rbx-0x16],dh
   14001bdff:	(bad)  
   14001be00:	cmp    al,0x80
   14001be02:	in     al,dx
   14001be03:	(bad)  
   14001be04:	cmp    ecx,DWORD PTR [rcx-0x75c30013]
   14001be0a:	jmp    0xd0660807
   14001be0f:	sahf   
   14001be10:	rex.WRX
   14001be11:	rex.WRB
   14001be12:	gs pop rbp
   14001be14:	rex.WX
   14001be15:	rex.X ins BYTE PTR es:[rdi],dx
   14001be17:	jno    0x14001be51
   14001be19:	cmp    eax,0x372ed4ad
   14001be1e:	(bad)  
   14001be1f:	jmp    FWORD PTR [rip+0x3effc034]        # 0x17f017e59
   14001be25:	xor    bh,BYTE PTR [rdi+rdx*2+0x0]
	...
   14001be31:	add    BYTE PTR [rax],al
   14001be33:	add    BYTE PTR [rbx-0x70feecb2],al
   14001be39:	pop    rcx
   14001be3a:	sbb    bh,BYTE PTR [rbx]
   14001be3c:	(bad)  
   14001be3d:	mov    WORD PTR [rbx],?
   14001be3f:	fcmovbe st,st(3)
   14001be41:	xchg   edi,eax
   14001be42:	rex.X call rcx
   14001be45:	xchg   esp,eax
   14001be46:	rex.XB dec r13d
   14001be49:	xchg   ecx,eax
   14001be4a:	inc    r12
   14001be4d:	mov    WORD PTR [rbp-0x1],cs
   14001be50:	mov    bh,0x83
   14001be52:	rex.WXB call FWORD PTR [r10+0x29ff2c68]
   14001be59:	sbb    al,BYTE PTR [rdi-0x1]
   14001be5c:	adc    eax,0x14ff6012
   14001be61:	sbb    BYTE PTR [rsi-0x1],dh
   14001be64:	sbb    BYTE PTR [rdx+rax*4],bl
   14001be67:	call   FWORD PTR [rdx+riz*1]
   14001be6a:	mov    ?,edi
   14001be6c:	and    ebp,DWORD PTR [rsp+rbx*4]
   14001be6f:	jmp    FWORD PTR [rax]
   14001be71:	cmp    ch,BYTE PTR [rdi-0x3bb5d201]
   14001be77:	push   QWORD PTR [rip+0x38ffda5d]        # 0x1790198da
   14001be7d:	jo     0x14001be68
   14001be7f:	(bad)  
   14001be80:	cmp    al,0x7f
   14001be82:	in     al,dx
   14001be83:	(bad)  
   14001be84:	cmp    ecx,DWORD PTR [rcx-0x74c30013]
   14001be8a:	in     eax,dx
   14001be8b:	(bad)  
   14001be8c:	cmp    eax,DWORD PTR [rbx+0x7239ffec]
   14001be92:	jmp    0x12155f396
   14001be97:	jmp    FWORD PTR [rdi]
   14001be99:	cmp    eax,0x352dffce
   14001be9e:	ret    
   14001be9f:	jmp    FWORD PTR [rdi]
   14001bea1:	xor    esi,DWORD PTR [rbx+0x643245ea]
   14001bea7:	or     DWORD PTR [rax],eax
   14001bea9:	add    BYTE PTR [rax],al
   14001beab:	add    BYTE PTR [rax],al
   14001bead:	add    BYTE PTR [rax],al
   14001beaf:	add    BYTE PTR [rsi-0x5bf8eaaf],al
   14001beb5:	outs   dx,BYTE PTR ds:[rsi]
   14001beb6:	sub    BYTE PTR [rsi-0x2a],bh
   14001beb9:	popf   
   14001beba:	rex.RXB stc 
   14001bebc:	xlat   BYTE PTR ds:[rbx]
   14001bebd:	popf   
   14001bebe:	rex.RX call rbp
   14001bec1:	(bad)  
   14001bec2:	rex.XB call r10
   14001bec5:	xchg   esi,eax
   14001bec6:	call   r8
   14001bec9:	xchg   ebx,eax
   14001beca:	rex.RB inc r15d
   14001becd:	mov    cs,WORD PTR [rdi+rdi*8-0x42]
   14001bed1:	mov    BYTE PTR [rdi-0x1],cl
   14001bed4:	mov    dl,0x7f
   14001bed6:	rex.WRB inc QWORD PTR [r14+0x1eff2e5a]
   14001bedd:	adc    ecx,DWORD PTR [rdx-0x1]
   14001bee0:	adc    eax,0x14ff6513
   14001bee5:	sbb    DWORD PTR [rcx-0x1],edi
   14001bee8:	sbb    DWORD PTR [rip+0x261eff86],ebx        # 0x16620be74
   14001beee:	xchg   ebx,eax
   14001beef:	jmp    QWORD PTR [rip+0x2bffa432]        # 0x16c016327
   14001bef5:	rex.XB mov r10d,0xd45733ff
   14001befb:	push   QWORD PTR [rdi]
   14001befd:	ins    DWORD PTR es:[rdi],dx
   14001befe:	out    0xff,eax
   14001bf00:	cmp    edi,DWORD PTR [rdi-0x14]
   14001bf03:	(bad)  
   14001bf04:	cmp    ecx,DWORD PTR [rdx-0x75c30013]
   14001bf0a:	in     eax,dx
   14001bf0b:	(bad)  
   14001bf0c:	cmp    al,BYTE PTR [rcx+0x6c39ffeb]
   14001bf12:	jmp    0x11d4df316
   14001bf17:	jmp    FWORD PTR [rsi]
   14001bf19:	cmp    ecx,ecx
   14001bf1b:	jmp    FWORD PTR [rip+0x3bffc134]        # 0x17c018055
   14001bf21:	xor    cl,BYTE PTR [rax+0x92]
   14001bf27:	add    BYTE PTR [rax],al
   14001bf29:	add    BYTE PTR [rax],al
   14001bf2b:	add    BYTE PTR [rax-0x3fdbe2a5],dl
   14001bf31:	mov    DWORD PTR [rip+0x4da0d9c1],edi        # 0x18da298f8
   14001bf37:	(bad)  
   14001bf38:	fcomp  DWORD PTR [rdi-0x612700b5]
   14001bf3e:	rex.W call rdi
   14001bf41:	popf   
   14001bf42:	rex.RX call rsp
   14001bf45:	cwde   
   14001bf46:	rex.XB call r9
   14001bf49:	xchg   esp,eax
   14001bf4a:	rex.X dec edx
   14001bf4d:	nop
   14001bf4e:	rex.WX inc rax
   14001bf51:	mov    DWORD PTR [rsi-0x1],ecx
   14001bf54:	mov    bh,0x83
   14001bf56:	push   rdx
   14001bf57:	jmp    FWORD PTR [rdx+0x65ff4b7a]
   14001bf5d:	rex.X xor eax,0x4f1119ff
   14001bf63:	call   QWORD PTR [rdx*1+0x1b16ff6d]
   14001bf6a:	jge    0x14001bf6b
   14001bf6c:	sbb    esp,DWORD PTR [rax]
   14001bf6e:	mov    edi,edi
   14001bf70:	and    ch,BYTE PTR [rbx+rbx*4]
   14001bf73:	jmp    FWORD PTR [rcx]
   14001bf75:	cmp    al,0xb2
   14001bf77:	push   QWORD PTR [rcx]
   14001bf79:	push   rdx
   14001bf7a:	int    0xff
   14001bf7c:	(bad)  
   14001bf7d:	imul   esp,esi,0xffffffff
   14001bf80:	cmp    edi,DWORD PTR [rdi-0x14]
   14001bf83:	(bad)  
   14001bf84:	cmp    al,0x8b
   14001bf86:	in     eax,dx
   14001bf87:	(bad)  
   14001bf88:	cmp    al,0x8b
   14001bf8a:	in     eax,dx
   14001bf8b:	(bad)  
   14001bf8c:	cmp    bh,BYTE PTR [rsi-0x15]
   14001bf8f:	push   QWORD PTR [rdi]
   14001bf91:	fs out 0xff,eax
   14001bf94:	xor    DWORD PTR [rbp-0x2a],eax
   14001bf97:	jmp    FWORD PTR [rip+0x2cffc636]        # 0x16d0185d3
   14001bf9d:	xor    al,0xbe
   14001bf9f:	inc    BYTE PTR [rdx+0x31]
   14001bfa2:	jo     0x14001bfd7
	...
   14001bfac:	mov    ebx,0xd3793d85
   14001bfb1:	pushf  
   14001bfb2:	rex.WRXB jmp 0x13f536191
   14001bfb8:	fldenv [rcx-0x602700b1]
   14001bfbe:	rex.WXB (bad) 
   14001bfc0:	fcomp  DWORD PTR [rsi-0x642900b8]
   14001bfc6:	rex.RB call r10
   14001bfc9:	xchg   esi,eax
   14001bfca:	rex.X dec ebp
   14001bfcd:	xchg   ecx,eax
   14001bfce:	inc    rcx
   14001bfd1:	mov    cl,BYTE PTR [rsi-0x1]
   14001bfd4:	mov    bh,0x83
   14001bfd6:	push   rcx
   14001bfd7:	jmp    FWORD PTR [rbx-0x6300aa83]
   14001bfdd:	outs   dx,DWORD PTR ds:[rsi]
   14001bfde:	rex.B (bad) 
   14001bfe0:	cmp    al,0x27
   14001bfe2:	notrack call QWORD PTR [rdi]
   14001bfe5:	adc    DWORD PTR [rax-0x1],ebx
   14001bfe8:	adc    al,0x17
   14001bfea:	jne    0x14001bfeb
   14001bfec:	sbb    BYTE PTR [rip+0x261fff84],bl        # 0x16621bf76
   14001bff2:	xchg   esp,eax
   14001bff3:	jmp    QWORD PTR [rdi]
   14001bff5:	ss stos BYTE PTR es:[rdi],al
   14001bff7:	jmp    FWORD PTR [rdi]
   14001bff9:	rex.WR (bad) 
   14001bffb:	push   QWORD PTR [rdi]
   14001bffd:	push   0xffffffff803bffe4
   14001c002:	in     al,dx
   14001c003:	(bad)  
   14001c004:	cmp    ecx,DWORD PTR [rbp-0x73c40012]
   14001c00a:	in     eax,dx
   14001c00b:	(bad)  
   14001c00c:	cmp    DWORD PTR [rbx-0x15],edi
   14001c00f:	push   QWORD PTR [rsi]
   14001c011:	pop    rbx
   14001c012:	in     al,0xff
   14001c014:	(bad)  
   14001c015:	(bad)  
   14001c016:	sar    bh,1
   14001c018:	sub    eax,0x33ffc335
   14001c01d:	xor    ah,BYTE PTR [rbx+0x643145d3]
   14001c023:	add    al,BYTE PTR [rax]
	...
   14001c02d:	add    BYTE PTR [rax],al
   14001c02f:	add    BYTE PTR [rcx-0x42f7c785],dh
   14001c035:	xchg   DWORD PTR [rcx+0x5a],eax
   14001c038:	retf   0x4893
   14001c03b:	rcr    cl,0xa1
   14001c03e:	rex.WRXB std 
   14001c040:	fcomp  DWORD PTR [rdi-0x622800b5]
   14001c046:	rex.RXB call r11
   14001c049:	xchg   edi,eax
   14001c04a:	rex.X dec esi
   14001c04d:	xchg   edx,eax
   14001c04e:	rex.RXB inc r9d
   14001c051:	mov    cl,BYTE PTR [rsi-0x1]
   14001c054:	mov    dh,0x83
   14001c056:	push   rdx
   14001c057:	jmp    QWORD PTR [rbp+0x56ff5479]
   14001c05d:	cmp    ecx,DWORD PTR [rdx-0x1]
   14001c060:	imul   eax,DWORD PTR [rbp+0x30],0x49131eff
   14001c067:	call   QWORD PTR [rip+0x16ff6613]        # 0x157012680
   14001c06d:	sbb    bh,BYTE PTR [rdi+rdi*8+0x1c]
   14001c071:	and    DWORD PTR [rbp-0x5dcfdb01],ecx
   14001c077:	jmp    FWORD PTR [rip+0x37ffc048]        # 0x1780180c5
   14001c07d:	data16 loop 0x14001c07f
   14001c080:	cmp    eax,DWORD PTR [rcx-0x6fc30014]
   14001c086:	out    dx,al
   14001c087:	(bad)  
   14001c088:	cmp    ecx,DWORD PTR [rbp+rbp*8-0x1587c601]
   14001c08f:	push   QWORD PTR [rbx+rdx*2]
   14001c092:	loopne 0x14001c093
   14001c094:	cs cmp cl,dl
   14001c097:	jmp    FWORD PTR [rip+0x3cffc134]        # 0x17d0181d1
   14001c09d:	xor    al,BYTE PTR [rax+rdi*2+0x0]
	...
   14001c0bc:	mov    bh,0x81
   14001c0be:	cmp    BYTE PTR [rcx],ch
   14001c0c0:	ret    0x3e8b
   14001c0c3:	mov    ss,edx
   14001c0c5:	cdq    
   14001c0c6:	rex.R jmp 0x14001c09d
   14001c0c9:	cdq    
   14001c0ca:	rex.XB dec r14d
   14001c0cd:	xchg   edx,eax
   14001c0ce:	rex.RX inc ecx
   14001c0d1:	mov    cl,BYTE PTR [rsi-0x1]
   14001c0d4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001c0d5:	ja     0x14001c123
   14001c0d7:	dec    DWORD PTR [rax+0x2f]
   14001c0da:	rex.RB call FWORD PTR [rip+0x2cff4611]        # 0x16d0106f2
   14001c0e1:	sbb    eax,0x3957ff42
   14001c0e6:	(bad)  
   14001c0e7:	call   QWORD PTR [rdi]
   14001c0e9:	adc    DWORD PTR [rbx-0x1],edx
   14001c0ec:	adc    al,0x17
   14001c0ee:	je     0x14001c0ef
   14001c0f0:	sbb    DWORD PTR [rsi],ebx
   14001c0f2:	xchg   bh,bh
   14001c0f4:	and    DWORD PTR [rbx],ebp
   14001c0f6:	(bad)  
   14001c0f7:	jmp    FWORD PTR [rbx]
   14001c0f9:	rex.XB mov r10d,0xe06436ff
   14001c0ff:	(bad)  
   14001c100:	cmp    eax,DWORD PTR [rbx-0x6cc40014]
   14001c106:	out    dx,eax
   14001c107:	(bad)  
   14001c108:	cmp    ecx,DWORD PTR [rbp+rbp*8-0x168cc601]
   14001c10f:	push   QWORD PTR [rdx]
   14001c111:	rex.WXB (bad) 
   14001c114:	cs (bad) 
   14001c116:	(bad)  
   14001c117:	jmp    FWORD PTR [rbx+rsi*1]
   14001c11a:	mov    esi,0x683244fc
   14001c11f:	(bad)  
	...
   14001c144:	scas   eax,DWORD PTR es:[rdi]
   14001c145:	ja     0x14001c175
   14001c147:	or     DWORD PTR [rax-0x3fa1cd81],edi
   14001c14d:	xchg   BYTE PTR [rsi],bh
   14001c14f:	(bad)
   14001c152:	rex.X dec BYTE PTR [rcx+0x2f]
   14001c156:	rex.X jmp FWORD PTR [rax]
   14001c159:	(bad)  
   14001c15a:	rex.RX jmp QWORD PTR [rsp+r10*1]
   14001c15e:	rex.RX jmp QWORD PTR [rbx]
   14001c161:	adc    al,0x46
   14001c163:	call   FWORD PTR [rdi+0x3d]
   14001c166:	xor    eax,0x461825ff
   14001c16b:	call   QWORD PTR [rip+0x17ff6613]        # 0x158012784
   14001c171:	sbb    edi,DWORD PTR [rdi-0x1]
   14001c174:	(bad)  
   14001c175:	es xchg ebx,eax
   14001c177:	jmp    FWORD PTR [rcx]
   14001c179:	cmp    eax,0x6235ffb3
   14001c17e:	(bad)  
   14001c180:	cmp    eax,DWORD PTR [rsi-0x67c50013]
   14001c186:	lock (bad) 
   14001c188:	cmp    ecx,DWORD PTR [rbp+0x6c38ffed]
   14001c18e:	call   0x11545f392
   14001c193:	jmp    FWORD PTR [rip+0x37ffc335]        # 0x1780184ce
   14001c199:	xor    ebx,DWORD PTR [rcx+0x643245bf]
   14001c19f:	add    DWORD PTR [rax],eax
	...
   14001c1c9:	add    BYTE PTR [rax],al
   14001c1cb:	add    BYTE PTR [rdi+0x65012863],dl
   14001c1d1:	(bad)  
   14001c1d2:	sub    eax,0x3e35527c
   14001c1d7:	dec    DWORD PTR [rdx+0x30]
   14001c1da:	rex inc DWORD PTR [rcx+0x28]
   14001c1de:	rex.X (bad) 
   14001c1e0:	cmp    BYTE PTR [rdx],ah
   14001c1e2:	rex.XB (bad) 
   14001c1e4:	cmp    BYTE PTR [rdx],ah
   14001c1e6:	rex.XB jmp QWORD PTR [r10+0x40]
   14001c1ea:	call   QWORD PTR ss:[rdi]
   14001c1ed:	adc    DWORD PTR [rbx-0x1],edx
   14001c1f0:	adc    al,0x18
   14001c1f2:	ja     0x14001c1f3
   14001c1f4:	sbb    al,0x21
   14001c1f6:	mov    edi,?
   14001c1f8:	(bad)  
   14001c1f9:	(bad)  
   14001c1fa:	stos   DWORD PTR es:[rdi],eax
   14001c1fb:	push   QWORD PTR [rax+riz*2]
   14001c1fe:	(bad)  
   14001c200:	cmp    ecx,DWORD PTR [rdx-0x62c50013]
   14001c206:	lock (bad) 
   14001c208:	cmp    ecx,DWORD PTR [rbp+0x6537ffee]
   14001c20e:	out    0xff,al
   14001c210:	(bad)  
   14001c211:	ds iret 
   14001c213:	jmp    FWORD PTR [rip+0x3effc134]        # 0x17f01834d
   14001c219:	xor    bh,BYTE PTR [rsi+0x64]
	...
   14001c250:	ins    DWORD PTR es:[rdi],dx
   14001c251:	rex.B sbb al,0x2
   14001c254:	cwde   
   14001c255:	(bad)  
   14001c256:	sbb    ebp,DWORD PTR [rdx-0xdc9561]
   14001c25c:	jle    0x14001c2b2
   14001c25e:	sub    edi,edi
   14001c260:	(bad)  
   14001c261:	rex cmp edi,edi
   14001c264:	rex.WRB xor r8b,BYTE PTR [r8-0x1]
   14001c268:	jo     0x14001c2b4
   14001c26a:	jmp    FWORD PTR ss:[rcx]
   14001c26d:	sbb    eax,DWORD PTR [rbp-0x1]
   14001c270:	adc    al,0x14
   14001c272:	push   0xffffffffffffffff
   14001c274:	sbb    DWORD PTR [rsi],ebx
   14001c276:	test   edi,edi
   14001c278:	and    al,0x32
   14001c27a:	movabs ds:0xee8f3bffd75d33ff,eax
   14001c283:	(bad)  
   14001c284:	cmp    esp,DWORD PTR [rsi-0x73c4000e]
   14001c28a:	in     eax,dx
   14001c28b:	push   QWORD PTR [rsi]
   14001c28d:	pop    rsp
   14001c28e:	jrcxz  0x14001c28f
   14001c290:	cs cmp ecx,ecx
   14001c293:	jmp    FWORD PTR [rip+0x46f7bc34]        # 0x186f97ecd
   14001c299:	xor    ah,BYTE PTR [rbp+0x13]
	...
   14001c2d4:	popf   
   14001c2d5:	sbb    DWORD PTR fs:[rcx],ecx
   14001c2d8:	mov    esp,0xc3b7297f
   14001c2dd:	and    DWORD PTR [rbx],0xffffffff
   14001c2e0:	movabs ds:0x65ff2d537cff1d6d,eax
   14001c2e9:	cmp    dil,r15b
   14001c2ec:	push   0x47
   14001c2ee:	call   QWORD PTR ss:[rsi]
   14001c2f1:	adc    DWORD PTR [rdi-0x1],edx
   14001c2f4:	(bad)  
   14001c2f5:	sbb    bh,BYTE PTR [rbp-0x1]
   14001c2f8:	and    DWORD PTR [rbx+rbx*4],ebp
   14001c2fb:	push   QWORD PTR [rdx]
   14001c2fd:	pop    rdx
   14001c2fe:	sar    edi,cl
   14001c300:	cmp    edx,DWORD PTR [rsi-0x4fc60011]
   14001c306:	repnz (bad) 
   14001c308:	cmp    cl,BYTE PTR [rdx+0x5334ffed]
   14001c30e:	fdivp  st(7),st
   14001c310:	sub    eax,0x39ffc536
   14001c315:	xor    edx,DWORD PTR [rdx+0xb2]
	...
   14001c357:	add    BYTE PTR [rbp-0x75fae69c],bl
   14001c35d:	pop    rax
   14001c35e:	sbb    eax,0x205d8f70
   14001c363:	int    0xa8
   14001c365:	jo     0x14001c380
   14001c367:	dec    BYTE PTR [rsi-0x6b00dca1]
   14001c36d:	fs sub bh,bh
   14001c370:	and    eax,0x14ff4819
   14001c375:	(bad)  
   14001c376:	jb     0x14001c377
   14001c378:	(bad)  
   14001c379:	and    eax,0x5631ff92
   14001c37e:	(bad)  
   14001c37f:	(bad)  
   14001c380:	cmp    ah,BYTE PTR [rax-0x44c60010]
   14001c386:	repz (bad) 
   14001c388:	cmp    al,BYTE PTR [rsi+0x4932ffec]
   14001c38e:	fdivr  st,st(7)
   14001c390:	sub    eax,0x3fffc235
   14001c395:	xor    bh,BYTE PTR [rbp+0x5e]
	...
   14001c3e0:	jbe    0x14001c42a
   14001c3e2:	sbb    al,BYTE PTR [rcx]
   14001c3e4:	adc    DWORD PTR [rcx+0x1a],0x186ea753
   14001c3eb:	lock movabs eax,ds:0x15ff374769ff1b6b
   14001c3f5:	adc    esp,DWORD PTR [rcx-0x1]
   14001c3f8:	sbb    esp,DWORD PTR [rax]
   14001c3fa:	mov    edi,edi
   14001c3fc:	(bad)  
   14001c3fd:	push   rax
   14001c3fe:	(bad)  
   14001c3ff:	(bad)  
   14001c400:	cmp    DWORD PTR [rax+rsi*8-0xe37c701],ebp
   14001c407:	(bad)  
   14001c408:	cmp    DWORD PTR [rdi-0x15],edi
   14001c40b:	push   QWORD PTR [rax]
   14001c40d:	(bad)  
   14001c40e:	sar    bh,1
   14001c410:	sub    eax,0x46f6bd34
   14001c415:	xor    ah,BYTE PTR [rbx+0x11]
	...
   14001c468:	mov    dl,BYTE PTR [rbp+0x12]
   14001c46b:	xor    DWORD PTR [rax-0x570fe78c],esi
   14001c471:	jno    0x14001c498
   14001c473:	call   FWORD PTR [rsi]
   14001c475:	adc    eax,0x1b17ff4f
   14001c47a:	jg     0x14001c47b
   14001c47c:	sub    al,0x49
   14001c47e:	mov    esi,0xefba3bff
   14001c483:	(bad)  
   14001c484:	cmp    edx,ecx
   14001c486:	out    dx,eax
   14001c487:	(bad)  
   14001c488:	cmp    BYTE PTR [rbx-0x17],dh
   14001c48b:	jmp    FWORD PTR [rsi]
   14001c48d:	cmp    ecx,ecx
   14001c48f:	(bad)  
   14001c490:	cmp    BYTE PTR [rbx],dh
   14001c492:	xchg   esp,eax
   14001c493:	scas   eax,DWORD PTR es:[rdi]
	...
   14001c4ec:	xchg   edx,eax
   14001c4ed:	pop    rbx
   14001c4ee:	adc    DWORD PTR [rdi-0x4b],ecx
   14001c4f1:	jns    0x14001c50e
   14001c4f3:	std    
   14001c4f4:	pop    rdx
   14001c4f5:	cmp    eax,0x1616ff3d
   14001c4fa:	jo     0x14001c4fb
   14001c4fc:	sub    BYTE PTR [rsi],bh
   14001c4fe:	mov    cl,0xff
   14001c500:	cmp    al,0xc2
   14001c502:	in     eax,dx
   14001c503:	(bad)  
   14001c504:	cmp    al,0xd2
   14001c506:	in     eax,dx
   14001c507:	push   QWORD PTR [rsi]
   14001c509:	movsxd esp,ebx
   14001c50b:	jmp    FWORD PTR [rip+0x3fffc435]        # 0x180018946
   14001c511:	xor    bh,BYTE PTR [rbx+0x53]
	...
   14001c570:	pushf  
   14001c571:	movsxd edx,DWORD PTR [rcx]
   14001c573:	mov    WORD PTR [rsi+0x18ff2e66],ss
   14001c579:	adc    ebx,DWORD PTR [rbp-0x1]
   14001c57c:	and    esi,DWORD PTR [rdx]
   14001c57e:	movabs eax,ds:0xeccb3dffecc43dff
   14001c587:	push   QWORD PTR [rbx]
   14001c589:	push   rcx
   14001c58a:	(bad)  
   14001c58c:	xor    BYTE PTR [rbx],dh
   14001c58e:	mov    bl,0xe7
   14001c590:	xor    r12b,BYTE PTR [r15+0x8]
	...
   14001c5f0:	mov    WORD PTR [rsi+0xf],ss
   14001c5f3:	or     DWORD PTR [rbp+0x43d41f6e],esp
   14001c5f9:	sub    eax,0x251dff46
   14001c5fe:	mov    ?,edi
   14001c600:	cmp    al,0xbe
   14001c602:	(bad)  
   14001c603:	(bad)  
   14001c604:	cmp    al,0xba
   14001c606:	in     al,dx
   14001c607:	push   QWORD PTR [rax]
   14001c609:	rex (bad) 
   14001c60b:	(bad)  
   14001c60c:	cmp    al,0x32
   14001c60e:	test   DWORD PTR [rax+rax*1+0x0],eax
	...
   14001c671:	add    BYTE PTR [rax],al
   14001c673:	add    BYTE PTR [rbx-0x72c0ecaa],cl
   14001c679:	(bad)  
   14001c67a:	xor    al,0xfd
   14001c67c:	sbb    BYTE PTR [rdx],bl
   14001c67e:	je     0x14001c67f
   14001c680:	cmp    DWORD PTR [rdx-0x67c6001f],ebp
   14001c686:	call   0xfd36f58a
   14001c68b:	repz rex.XB xor bpl,BYTE PTR [r13+0x18]
	...
   14001c6f4:	lea    edx,[rdi+0x12]
   14001c6f7:	add    DWORD PTR [rdx+rsi*2+0x242fa622],ebp
   14001c6fe:	pop    rax
   14001c6ff:	push   QWORD PTR [rcx]
   14001c701:	jno    0x14001c6d1
   14001c703:	push   QWORD PTR [rbx]
   14001c705:	pop    rcx
   14001c706:	xlat   BYTE PTR ds:[rbx]
   14001c707:	(bad)  
   14001c708:	cmp    al,0x32
   14001c70a:	test   DWORD PTR [rsi+0x0],edi
	...
   14001c775:	add    BYTE PTR [rax],al
   14001c777:	add    BYTE PTR [rdx-0x7eeae29d],bl
   14001c77d:	push   rdi
   14001c77e:	(bad)  
   14001c77f:	fisub  WORD PTR [rcx]
   14001c781:	sub    DWORD PTR [rdx-0x5dcdce01],ebx
   14001c787:	ret    
   14001c788:	(bad)  
   14001c789:	xor    dh,BYTE PTR [rdi+0x7]
	...
   14001c7fc:	jge    0x14001c84f
   14001c7fe:	sub    DWORD PTR [rcx],ebx
   14001c800:	rex.WB
   14001c801:	ss (bad) 
   14001c803:	cmp    BYTE PTR [esi*2+0xb],ch
	...
   14001c8ab:	add    bh,bh
   14001c8ad:	(bad)  
   14001c8ae:	(bad)  
   14001c8af:	(bad)  
   14001c8b0:	(bad)  
   14001c8b1:	clc    
   14001c8b2:	(bad)  
   14001c8b3:	(bad)  
   14001c8b4:	(bad)  
   14001c8b5:	clc    
   14001c8b6:	(bad)  
   14001c8b7:	(bad)  
   14001c8b8:	push   rax
   14001c8ba:	(bad)  
   14001c8bb:	(bad)  
   14001c8bc:	push   rax
   14001c8be:	ud0    edi,edi
   14001c8c1:	loopne 0x14001c8ca
   14001c8c3:	(bad)  
   14001c8c4:	jmp    rax
   14001c8c6:	(bad)  
   14001c8c7:	cld    
   14001c8c8:	inc    eax
   14001c8ca:	add    edi,eax
   14001c8cc:	inc    DWORD PTR [rax+0xf8f001]
   14001c8d2:	add    BYTE PTR [rax-0x10],ah
   14001c8d5:	add    BYTE PTR [rax],al
   14001c8d7:	add    eax,eax
   14001c8d9:	add    BYTE PTR [rax],al
   14001c8db:	add    DWORD PTR [rax+0x30000],eax
   14001c8e1:	add    BYTE PTR [rax],al
   14001c8e3:	add    eax,DWORD PTR [rax]
   14001c8e5:	add    BYTE PTR [rax],al
   14001c8e7:	add    eax,DWORD PTR [rax-0xff90000]
   14001c8ed:	add    BYTE PTR [rax],al
   14001c8ef:	(bad)  
   14001c8f0:	cld    
   14001c8f1:	add    BYTE PTR [rax],al
   14001c8f3:	(bad)  
   14001c8f4:	inc    DWORD PTR [rax]
   14001c8f6:	add    BYTE PTR [rdi],cl
   14001c8f8:	inc    DWORD PTR [rax-0x3f00f100]
   14001c8fe:	add    BYTE PTR [rdi],bl
   14001c900:	jmp    rax
   14001c902:	add    BYTE PTR [rdi],bl
   14001c904:	(bad)  
   14001c905:	clc    
   14001c906:	add    BYTE PTR [rdi],bl
   14001c908:	(bad)  
   14001c909:	inc    BYTE PTR [rax]
   14001c90b:	(bad)  
   14001c90c:	(bad)  
   14001c90d:	inc    DWORD PTR [rax]
   14001c90f:	(bad)  
   14001c910:	(bad)  
   14001c911:	inc    DWORD PTR [rax-0x7f0000c1]
   14001c917:	jg     0x14001c918
   14001c919:	inc    eax
   14001c91b:	jg     0x14001c91c
   14001c91d:	inc    eax
   14001c91f:	(bad)  
   14001c920:	(bad)  
   14001c921:	jmp    rax
   14001c923:	(bad)  
   14001c924:	(bad)  
   14001c925:	push   rcx
   14001c927:	(bad)  
   14001c928:	(bad)  
   14001c929:	(bad)  
   14001c92a:	(bad)  
   14001c92b:	jmp    FWORD PTR [rax]
   14001c92d:	add    BYTE PTR [rax],al
   14001c92f:	add    BYTE PTR [rax],dl
   14001c931:	add    BYTE PTR [rax],al
   14001c933:	add    BYTE PTR [rax],ah
   14001c935:	add    BYTE PTR [rax],al
   14001c937:	add    BYTE PTR [rcx],al
   14001c939:	add    BYTE PTR [rax],ah
   14001c93b:	add    BYTE PTR [rax],al
   14001c93d:	add    BYTE PTR [rax],al
   14001c93f:	add    BYTE PTR [rax+0x4],al
	...
   14001c96a:	add    BYTE PTR [rax],al
   14001c96c:	xor    BYTE PTR [rdx],bh
   14001c96e:	xor    al,0x7
   14001c970:	cmp    BYTE PTR [rdx+0x46],cl
   14001c973:	sbb    BYTE PTR [rax],al
	...
   14001c9a9:	add    BYTE PTR [rax],al
   14001c9ab:	add    BYTE PTR [rbp+0x7c],cl
   14001c9ae:	xchg   DWORD PTR [rbp+0x3c],esp
   14001c9b1:	mov    ch,0xee
   14001c9b3:	test   DWORD PTR [rax+rdi*2-0x73],0x202f4076
   14001c9bb:	add    DWORD PTR [rax],eax
	...
   14001c9e5:	add    BYTE PTR [rax],al
   14001c9e7:	add    BYTE PTR [rdx],bh
   14001c9e9:	sub    DWORD PTR [rsi],ebx
   14001c9eb:	add    DWORD PTR [rcx-0x78],eax
   14001c9ee:	int    0xd2
   14001c9f0:	cmp    ebx,DWORD PTR [rbx-0x71c40011]
   14001c9f6:	in     eax,dx
   14001c9f7:	dec    DWORD PTR [rdx+0x62]
   14001c9fa:	xchg   esp,eax
   14001c9fb:	add    DWORD PTR [rax],0x0
	...
   14001ca25:	add    BYTE PTR [rax],al
   14001ca27:	add    BYTE PTR [rdi+rbp*1+0x47],al
   14001ca2b:	rex.W
   14001ca2c:	cs rex.WR ret 0x35ff
   14001ca31:	(bad)  
   14001ca32:	(bad)  
   14001ca34:	cmp    BYTE PTR [rbp-0x1a],ch
   14001ca37:	(bad)  
   14001ca38:	cmp    dh,BYTE PTR [rsi-0x16]
   14001ca3b:	dec    BYTE PTR [rdi+0x59]
   14001ca3e:	jl     0x14001ca9d
	...
   14001ca50:	rex.WXB xor dl,BYTE PTR [r11+r8*2+0x0]
	...
   14001ca5d:	add    BYTE PTR [rax],al
   14001ca5f:	add    BYTE PTR [rbp+rax*2+0x14],dh
   14001ca63:	sub    al,0x5c
   14001ca65:	xor    edx,DWORD PTR [rdi+riz*1]
   14001ca68:	(bad)  
   14001ca69:	sbb    ebp,DWORD PTR [rax-0x25]
   14001ca6c:	sbb    al,0x23
   14001ca6e:	mov    ?,edi
   14001ca70:	es ss test eax,0xc84f2fff
   14001ca77:	push   QWORD PTR [rdi]
   14001ca79:	push   0x7b3cffe3
   14001ca7e:	in     eax,0xf8
   14001ca80:	push   rcx
   14001ca81:	pop    rdx
   14001ca82:	outs   dx,BYTE PTR ds:[rsi]
   14001ca83:	push   rax
   14001ca84:	add    BYTE PTR [rax],al
   14001ca86:	add    BYTE PTR [rax],al
   14001ca88:	rex.XB and eax,0x34430217
   14001ca8e:	jbe    0x14001ca10
   14001ca90:	cmp    esi,DWORD PTR [rbx]
   14001ca92:	mov    esi,DWORD PTR [rdi+0x0]
   14001ca95:	add    BYTE PTR [rax],al
   14001ca97:	add    BYTE PTR [rsi+0x41],ch
   14001ca9a:	(bad)  
   14001ca9b:	btr    DWORD PTR [rdx+0x2f],edi
   14001ca9f:	movabs ds:0xff4180b6fe4791cd,eax
   14001caa8:	rex.XB sub eax,0x1715ff46
   14001caae:	jae    0x14001caaf
   14001cab0:	sbb    al,0x22
   14001cab2:	(bad)  
   14001cab3:	jmp    QWORD PTR [rdi]
   14001cab5:	cmp    BYTE PTR [rbx-0x2ca8cd01],ch
   14001cabb:	(bad)  
   14001cabc:	cmp    bh,BYTE PTR [rcx-0x16]
   14001cabf:	(bad)  
   14001cac0:	cmp    al,0x8a
   14001cac2:	in     al,dx
   14001cac3:	std    
   14001cac4:	rex.X imul esi,DWORD PTR [rbx-0x4dbbc642],0xbf352ed1
   14001cacf:	stc    
   14001cad0:	rex.B sub al,0x4d
   14001cad3:	sbb    BYTE PTR [rax-0x34c4e1a4],dl
   14001cad9:	xchg   edx,eax
   14001cada:	rex.X fst st(7)
   14001cadd:	pushf  
   14001cade:	rex.RX call rdx
   14001cae1:	xchg   ebp,eax
   14001cae2:	rex.XB inc r12d
   14001cae5:	mov    WORD PTR [rbp-0x1],cs
   14001cae8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001cae9:	jbe    0x14001cb31
   14001caeb:	jmp    FWORD PTR [rsi+rbx*1]
   14001caee:	rex.WRB call QWORD PTR [r14]
   14001caf1:	sbb    DWORD PTR [rdx-0x1],edi
   14001caf4:	and    BYTE PTR [rcx],ch
   14001caf6:	xchg   edi,eax
   14001caf7:	jmp    FWORD PTR [rsi]
   14001caf9:	rex.WX ret 
   14001cafb:	(bad)  
   14001cafc:	cmp    DWORD PTR [rbp-0x17],esi
   14001caff:	(bad)  
   14001cb00:	cmp    al,0x8b
   14001cb02:	in     eax,dx
   14001cb03:	(bad)  
   14001cb04:	cmp    DWORD PTR [rcx+rbp*8-0x1],esi
   14001cb08:	xor    BYTE PTR [rax-0x30],al
   14001cb0b:	push   QWORD PTR [rip+0xb09e33]        # 0x140b26944
   14001cb11:	add    BYTE PTR [rax],al
   14001cb13:	add    BYTE PTR [rcx-0x31a5c27d],bh
   14001cb19:	xchg   edi,eax
   14001cb1a:	rex.WX (bad) 
   14001cb1c:	fcomp  DWORD PTR [rdi-0x662a01b5]
   14001cb22:	rex.R inc edi
   14001cb25:	mov    cs,WORD PTR [rbx-0x1]
   14001cb28:	scas   eax,DWORD PTR es:[rdi]
   14001cb29:	jg     0x14001cb7e
   14001cb2b:	jmp    QWORD PTR [rsi+0x45]
   14001cb2e:	notrack call QWORD PTR [rdi]
   14001cb31:	adc    al,0x5f
   14001cb33:	call   FWORD PTR [rdx]
   14001cb35:	and    BYTE PTR [rax-0x4ac0d501],cl
   14001cb3b:	(bad)  
   14001cb3c:	cmp    DWORD PTR [rdi+riz*8-0x1],esi
   14001cb40:	cmp    ecx,DWORD PTR [rbp+0x6837ffee]
   14001cb46:	out    0xff,al
   14001cb48:	cs cmp bh,al
   14001cb4b:	inc    DWORD PTR [rax+0x32]
   14001cb4e:	jne    0x14001cba3
	...
   14001cb5c:	movabs eax,ds:0xbe943a8ac32e2d6e
   14001cb65:	xchg   BYTE PTR [rbp-0x10],al
   14001cb68:	pop    rax
   14001cb69:	cmp    eax,DWORD PTR [rsi-0x1]
   14001cb6c:	and    al,0x15
   14001cb6e:	rex.RB (bad) 
   14001cb70:	cmp    eax,0x16ff4128
   14001cb75:	sbb    DWORD PTR [rax-0x1],edi
   14001cb78:	and    eax,0x38ffa634
   14001cb7d:	je     0x14001cb64
   14001cb7f:	(bad)  
   14001cb80:	cmp    edx,DWORD PTR [rcx+0x5b35ffee]
   14001cb86:	loopne 0x14001cb87
   14001cb88:	(bad)  
   14001cb89:	xor    eax,0x273ceeb8
   14001cb8e:	cmp    al,0x8
	...
   14001cba4:	push   0x41
   14001cba6:	(bad)  
   14001cba7:	and    BYTE PTR [rbp+0x4c],dh
   14001cbaa:	(bad)  
   14001cbab:	jmp    0x13f3d0406
   14001cbb0:	push   rsi
   14001cbb1:	(bad)  
   14001cbb2:	cmp    al,0xff
   14001cbb4:	sbb    dl,BYTE PTR [rsi]
   14001cbb6:	pop    rsi
   14001cbb7:	jmp    QWORD PTR [rax]
   14001cbb9:	sub    bl,BYTE PTR [rax-0x1c8ac801]
   14001cbbf:	(bad)  
   14001cbc0:	cmp    edx,DWORD PTR [rdi+0x4e33ffef]
   14001cbc6:	fdivr  st,st(7)
   14001cbc8:	(bad)  
   14001cbc9:	xor    ebx,DWORD PTR [rax+0x9b]
	...
   14001cbe7:	add    BYTE PTR [rdx-0x5fcee59d],bl
   14001cbed:	imul   ebx,DWORD PTR [rdi],0x285a86ce
   14001cbf3:	dec    BYTE PTR [rsi+0x35]
   14001cbf6:	rex call FWORD PTR [rdx]
   14001cbf9:	and    BYTE PTR [rdi-0x1f85c901],al
   14001cbff:	(bad)  
   14001cc00:	cmp    DWORD PTR [rdi+0x4230fff0],ebx
   14001cc06:	iret   
   14001cc07:	inc    DWORD PTR [rbx+0x31]
   14001cc0a:	push   0x44
	...
   14001cc30:	mov    dl,BYTE PTR [rdi+0x15]
   14001cc33:	pop    rbp
   14001cc34:	cdq    
   14001cc35:	data16 and al,0xfb
   14001cc38:	sbb    DWORD PTR [rcx],ebx
   14001cc3a:	outs   dx,BYTE PTR ds:[rsi]
   14001cc3b:	push   QWORD PTR [rax+rax*4]
   14001cc3e:	fcos   
   14001cc40:	cmp    DWORD PTR [rbx+0x3831ffed],esp
   14001cc46:	mov    ebx,0x372539e8
   14001cc4b:	add    al,0x0
	...
   14001cc71:	add    BYTE PTR [rax],al
   14001cc73:	add    BYTE PTR [rbx+riz*2+0x33477613],bl
   14001cc7a:	rex.WRX push QWORD PTR [rcx]
   14001cc7d:	jle    0x14001cc4a
   14001cc7f:	(bad)  
   14001cc80:	cmp    BYTE PTR [rbp+riz*8-0x69ccc701],dl
   14001cc87:	nop
	...
   14001ccb4:	push   rsi
   14001ccb5:	xor    al,BYTE PTR [rdi]
   14001ccb7:	add    al,BYTE PTR [rax+0x2bc42b54]
   14001ccbd:	push   0xffffffffffffffb3
   14001ccbf:	push   QWORD PTR [rip+0x43fcd872]        # 0x183fea537
   14001ccc5:	(bad)  
   14001ccc6:	pop    rsp
   14001ccc7:	(bad)  
	...
   14001ccf8:	mov    ds,WORD PTR [rcx+0x16]
   14001ccfb:	(bad)  
   14001ccfc:	rex.B
   14001ccfd:	rex.RB jle 0x14001ccf6
   14001cd00:	cmp    BYTE PTR [rbx*4+0x92],bh
	...
   14001cd3b:	add    BYTE PTR [rbx+rsi*1+0x2f],cl
   14001cd3f:	and    BYTE PTR [rdx],ch
   14001cd41:	sbb    eax,0x23b
	...
   14001cd52:	add    BYTE PTR [rax],al
   14001cd54:	cld    
   14001cd55:	inc    DWORD PTR [rax]
   14001cd57:	add    ah,bh
   14001cd59:	(bad)  
   14001cd5a:	add    BYTE PTR [rax],al
   14001cd5c:	clc    
   14001cd5d:	(bad)  
   14001cd5e:	add    BYTE PTR [rax],al
   14001cd60:	clc    
   14001cd61:	(bad)  
   14001cd62:	add    BYTE PTR [rax],al
   14001cd64:	loopne 0x14001cd6e
   14001cd66:	add    BYTE PTR [rax],al
   14001cd68:	add    BYTE PTR [rax],0x0
   14001cd6b:	add    BYTE PTR [rax],al
   14001cd6d:	add    DWORD PTR [rax],eax
   14001cd6f:	add    BYTE PTR [rax],al
   14001cd71:	add    DWORD PTR [rax],eax
   14001cd73:	add    al,al
   14001cd75:	add    DWORD PTR [rax],eax
   14001cd77:	add    al,dh
   14001cd79:	add    eax,DWORD PTR [rax]
   14001cd7b:	add    al,bh
   14001cd7d:	add    eax,DWORD PTR [rax]
   14001cd7f:	add    dh,bh
   14001cd81:	add    eax,DWORD PTR [rax]
   14001cd83:	add    bh,bh
   14001cd85:	(bad)  
   14001cd86:	add    BYTE PTR [rax],al
   14001cd88:	inc    DWORD PTR [rdi]
   14001cd8a:	add    BYTE PTR [rax],al
   14001cd8c:	dec    DWORD PTR [rdi-0x30010000]
   14001cd92:	add    BYTE PTR [rax],al
   14001cd94:	add    BYTE PTR [rax],al
   14001cd96:	add    DWORD PTR [rax],eax
   14001cd98:	or     al,BYTE PTR [rax]
   14001cd9a:	xor    BYTE PTR [rax],dh
   14001cd9c:	adc    BYTE PTR [rax],al
   14001cd9e:	add    DWORD PTR [rax],eax
   14001cda0:	add    al,0x0
   14001cda2:	push   0x1000006
   14001cda7:	add    BYTE PTR [rax],ah
   14001cda9:	and    BYTE PTR [rax],dl
   14001cdab:	add    BYTE PTR [rcx],al
   14001cdad:	add    BYTE PTR [rax+rax*1],al
   14001cdb0:	call   0x14201cdb7
   14001cdb5:	add    BYTE PTR [rax],dl
   14001cdb7:	adc    BYTE PTR [rax],dl
   14001cdb9:	add    BYTE PTR [rcx],al
   14001cdbb:	add    BYTE PTR [rax+rax*1],al
   14001cdbe:	sub    BYTE PTR [rcx],al
   14001cdc0:	add    BYTE PTR [rax],al
   14001cdc2:	add    eax,DWORD PTR [rax]
   14001cdc4:	xor    BYTE PTR [rax],dh
   14001cdc6:	add    BYTE PTR [rax],al
   14001cdc8:	add    DWORD PTR [rax],eax
   14001cdca:	or     BYTE PTR [rax],al
   14001cdcc:	test   al,0xe
   14001cdce:	add    BYTE PTR [rax],al
   14001cdd0:	add    al,0x0
   14001cdd2:	and    BYTE PTR [rax],ah
   14001cdd4:	add    BYTE PTR [rax],al
   14001cdd6:	add    DWORD PTR [rax],eax
   14001cdd8:	or     BYTE PTR [rax],al
   14001cdda:	test   al,0x8
   14001cddc:	add    BYTE PTR [rax],al
   14001cdde:	add    eax,0x101000
   14001cde3:	add    BYTE PTR [rcx],al
   14001cde5:	add    BYTE PTR [rax],cl
   14001cde7:	add    BYTE PTR [rax+0x5],ch
   14001cdea:	add    BYTE PTR [rax],al
   14001cdec:	(bad)  
   14001cded:	add    BYTE PTR [rax],al
   14001cdef:	add    BYTE PTR [rax],al
   14001cdf1:	add    BYTE PTR [rcx],al
   14001cdf3:	add    BYTE PTR [rax],ah
   14001cdf5:	add    ah,cl
   14001cdf7:	test   al,0x0
   14001cdf9:	add    BYTE PTR [rdi],al
   14001cdfb:	add    BYTE PTR [rax],dh
   14001cdfd:	xor    BYTE PTR [rax],al
   14001cdff:	add    BYTE PTR [rcx],al
   14001ce01:	add    BYTE PTR [rax],ah
   14001ce03:	add    BYTE PTR [rax+0x8000025],ch
   14001ce09:	add    BYTE PTR [rax],ah
   14001ce0b:	and    BYTE PTR [rax],al
   14001ce0d:	add    BYTE PTR [rcx],al
   14001ce0f:	add    BYTE PTR [rax],ah
   14001ce11:	add    BYTE PTR [rax+0x9000010],ch
   14001ce17:	add    BYTE PTR [rax],dl
   14001ce19:	adc    BYTE PTR [rax],al
   14001ce1b:	add    BYTE PTR [rcx],al
   14001ce1d:	add    BYTE PTR [rax],ah
   14001ce1f:	add    BYTE PTR [rax+0x4],ch
   14001ce22:	add    BYTE PTR [rax],al
   14001ce24:	or     al,BYTE PTR [rax]
   14001ce26:	push   rax
   14001ce27:	add    BYTE PTR [r10],0x34
   14001ce2b:	add    BYTE PTR [rax],al
   14001ce2d:	add    BYTE PTR [rsi+0x0],dl
   14001ce30:	push   rbx
   14001ce31:	add    BYTE PTR [rdi+0x0],bl
   14001ce34:	push   rsi
   14001ce35:	add    BYTE PTR [rbp+0x0],al
   14001ce38:	push   rdx
   14001ce39:	add    BYTE PTR [rbx+0x0],dl
   14001ce3c:	rex.WB add BYTE PTR [r15+0x0],cl
   14001ce40:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14001ce44:	rex.WB add BYTE PTR [r14+0x0],cl
   14001ce48:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14001ce4c:	add    BYTE PTR [rax],al
   14001ce4e:	add    BYTE PTR [rax],al
   14001ce50:	mov    ebp,0xfeef04
   14001ce55:	add    BYTE PTR [rcx],al
   14001ce57:	add    BYTE PTR [rax],al
   14001ce59:	add    BYTE PTR [rcx],dl
   14001ce5b:	add    BYTE PTR [rax],al
   14001ce5d:	add    BYTE PTR [rax],al
   14001ce5f:	add    BYTE PTR [rax],al
   14001ce61:	add    BYTE PTR [rcx],dl
   14001ce63:	add    BYTE PTR [rax],al
   14001ce65:	add    BYTE PTR [rax],al
   14001ce67:	add    BYTE PTR [rdi],bh
   14001ce69:	add    BYTE PTR [rax],al
   14001ce6b:	add    BYTE PTR [rax],al
   14001ce6d:	add    BYTE PTR [rax],al
   14001ce6f:	add    BYTE PTR [rax+rax*1],al
   14001ce72:	add    al,0x0
   14001ce74:	add    DWORD PTR [rax],eax
	...
   14001ce82:	add    BYTE PTR [rax],al
   14001ce84:	loopne 0x14001ce87
   14001ce86:	add    BYTE PTR [rax],al
   14001ce88:	add    DWORD PTR [rax],eax
   14001ce8a:	push   rbx
   14001ce8b:	add    BYTE PTR [rax+rax*1+0x72],dh
   14001ce8f:	add    BYTE PTR [rcx+0x0],ch
   14001ce92:	outs   dx,BYTE PTR ds:[rsi]
   14001ce93:	add    BYTE PTR [rdi+0x0],ah
   14001ce96:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001ce9a:	ins    BYTE PTR es:[rdi],dx
   14001ce9b:	add    BYTE PTR [rbp+0x0],ah
   14001ce9e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001cea2:	data16 add BYTE PTR [rdi+0x0],ch
   14001cea6:	add    BYTE PTR [rax],al
   14001cea8:	mov    esp,0x1000001
   14001cead:	add    BYTE PTR [rax],dh
   14001ceaf:	add    BYTE PTR [rax+rax*1],dh
   14001ceb2:	xor    BYTE PTR [rax],al
   14001ceb4:	cmp    DWORD PTR [rax],eax
   14001ceb6:	xor    BYTE PTR [rax],al
   14001ceb8:	xor    al,0x0
   14001ceba:	(bad)  
   14001cebb:	add    BYTE PTR [rax],dh
   14001cebd:	add    BYTE PTR [rax],al
   14001cebf:	add    BYTE PTR [rsi+0x0],al
   14001cec2:	adc    eax,DWORD PTR [rax]
   14001cec4:	add    DWORD PTR [rax],eax
   14001cec6:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001ceca:	ins    DWORD PTR es:[rdi],dx
   14001cecb:	add    BYTE PTR [rax+0x0],dh
   14001cece:	(bad)  
   14001cecf:	add    BYTE PTR [rsi+0x0],ch
   14001ced2:	jns    0x14001ced4
   14001ced4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14001ced8:	ins    DWORD PTR es:[rdi],dx
   14001ced9:	add    BYTE PTR [rbp+0x0],ah
   14001cedc:	add    BYTE PTR [rax],al
   14001cede:	add    BYTE PTR [rax],al
   14001cee0:	push   rsp
   14001cee1:	add    BYTE PTR [rax+0x0],ch
   14001cee4:	add    BYTE PTR gs:[rax],ah
   14001cee7:	add    BYTE PTR [rbp+0x0],cl
   14001ceea:	(bad)  
   14001ceeb:	add    BYTE PTR [rax+rax*1+0x68],dh
   14001ceef:	add    BYTE PTR [rdi+0x0],dl
   14001cef2:	outs   dx,DWORD PTR ds:[rsi]
   14001cef3:	add    BYTE PTR [rdx+0x0],dh
   14001cef6:	imul   eax,DWORD PTR [rax],0x73
   14001cef9:	add    BYTE PTR [rax+rax*1],ch
   14001cefc:	and    BYTE PTR [rax],al
   14001cefe:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001cf02:	movsxd eax,DWORD PTR [rax]
   14001cf04:	add    BYTE PTR [rax],al
   14001cf06:	add    BYTE PTR [rax],al
   14001cf08:	push   rax
   14001cf09:	add    BYTE PTR [rax+rax*1],dl
   14001cf0c:	add    DWORD PTR [rax],eax
   14001cf0e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001cf12:	ins    BYTE PTR es:[rdi],dx
   14001cf13:	add    BYTE PTR [rbp+0x0],ah
   14001cf16:	add    BYTE PTR [rbp+0x0],r12b
   14001cf1a:	jae    0x14001cf1c
   14001cf1c:	movsxd eax,DWORD PTR [rax]
   14001cf1e:	jb     0x14001cf20
   14001cf20:	imul   eax,DWORD PTR [rax],0x740070
   14001cf26:	imul   eax,DWORD PTR [rax],0x6e006f
   14001cf2c:	add    BYTE PTR [rax],al
   14001cf2e:	add    BYTE PTR [rax],al
   14001cf30:	add    BYTE PTR [rbp+0x0],r12b
   14001cf34:	(bad)  
   14001cf35:	add    BYTE PTR [rbx+0x0],ah
   14001cf38:	je     0x14001cf3a
   14001cf3a:	imul   eax,DWORD PTR [rax],0x610076
   14001cf40:	je     0x14001cf42
   14001cf42:	imul   eax,DWORD PTR [rax],0x6e006f
   14001cf48:	and    BYTE PTR [rax],al
   14001cf4a:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14001cf4e:	add    BYTE PTR fs:[rbp+0x0],dh
   14001cf52:	ins    BYTE PTR es:[rdi],dx
   14001cf53:	add    BYTE PTR [rbp+0x0],ah
   14001cf56:	add    BYTE PTR [rax],al
   14001cf58:	cmp    BYTE PTR [rax],al
   14001cf5a:	or     al,0x0
   14001cf5c:	add    DWORD PTR [rax],eax
   14001cf5e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001cf62:	ins    BYTE PTR es:[rdi],dx
   14001cf63:	add    BYTE PTR [rbp+0x0],ah
   14001cf66:	push   rsi
   14001cf67:	add    BYTE PTR [rbp+0x0],ah
   14001cf6a:	jb     0x14001cf6c
   14001cf6c:	jae    0x14001cf6e
   14001cf6e:	imul   eax,DWORD PTR [rax],0x6e006f
   14001cf74:	add    BYTE PTR [rax],al
   14001cf76:	add    BYTE PTR [rax],al
   14001cf78:	xor    DWORD PTR [rax],eax
   14001cf7a:	(bad)  
   14001cf7b:	add    BYTE PTR [rax+rax*1],ch
   14001cf7e:	and    BYTE PTR [rax],al
   14001cf80:	xor    BYTE PTR [rax],al
   14001cf82:	sub    al,0x0
   14001cf84:	and    BYTE PTR [rax],al
   14001cf86:	xor    BYTE PTR [rax],al
   14001cf88:	sub    al,0x0
   14001cf8a:	and    BYTE PTR [rax],al
   14001cf8c:	xor    BYTE PTR [rax],al
   14001cf8e:	add    BYTE PTR [rax],al
   14001cf90:	push   rax
   14001cf91:	add    BYTE PTR [rsi],dl
   14001cf93:	add    BYTE PTR [rcx],al
   14001cf95:	add    BYTE PTR [rax+rax*1+0x65],cl
   14001cf99:	add    BYTE PTR [rdi+0x0],ah
   14001cf9c:	(bad)  
   14001cf9d:	add    BYTE PTR [rax+rax*1+0x43],ch
   14001cfa1:	add    BYTE PTR [rdi+0x0],ch
   14001cfa4:	jo     0x14001cfa6
   14001cfa6:	jns    0x14001cfa8
   14001cfa8:	jb     0x14001cfaa
   14001cfaa:	imul   eax,DWORD PTR [rax],0x680067
   14001cfb0:	je     0x14001cfb2
   14001cfb2:	add    BYTE PTR [rax],al
   14001cfb4:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001cfb8:	jo     0x14001cfba
   14001cfba:	jns    0x14001cfbc
   14001cfbc:	jb     0x14001cfbe
   14001cfbe:	imul   eax,DWORD PTR [rax],0x680067
   14001cfc4:	je     0x14001cfc6
   14001cfc6:	and    BYTE PTR [rax],al
   14001cfc8:	test   eax,0x32002000
   14001cfcd:	add    BYTE PTR [rax],dh
   14001cfcf:	add    BYTE PTR [rax],dh
   14001cfd1:	add    BYTE PTR [rcx],dh
   14001cfd3:	add    BYTE PTR [rip+0x30003200],ch        # 0x1700201d9
   14001cfd9:	add    BYTE PTR [rcx],dh
   14001cfdb:	add    BYTE PTR [rdi],dh
   14001cfdd:	add    BYTE PTR [rax],al
   14001cfdf:	add    BYTE PTR [rax+0x0],cl
   14001cfe2:	adc    al,0x0
   14001cfe4:	add    DWORD PTR [rax],eax
   14001cfe6:	push   rax
   14001cfe7:	add    BYTE PTR [rdx+0x0],dh
   14001cfea:	outs   dx,DWORD PTR ds:[rsi]
   14001cfeb:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001cfef:	add    BYTE PTR [rbx+0x0],ah
   14001cff2:	je     0x14001cff4
   14001cff4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14001cff8:	ins    DWORD PTR es:[rdi],dx
   14001cff9:	add    BYTE PTR [rbp+0x0],ah
   14001cffc:	add    BYTE PTR [rax],al
   14001cffe:	add    BYTE PTR [rax],al
   14001d000:	add    BYTE PTR [rbp+0x0],r12b
   14001d004:	(bad)  
   14001d005:	add    BYTE PTR [rbx+0x0],ah
   14001d008:	je     0x14001d00a
   14001d00a:	imul   eax,DWORD PTR [rax],0x610076
   14001d010:	je     0x14001d012
   14001d012:	imul   eax,DWORD PTR [rax],0x6e006f
   14001d018:	and    BYTE PTR [rax],al
   14001d01a:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14001d01e:	add    BYTE PTR fs:[rbp+0x0],dh
   14001d022:	ins    BYTE PTR es:[rdi],dx
   14001d023:	add    BYTE PTR [rbp+0x0],ah
   14001d026:	add    BYTE PTR [rax],al
   14001d028:	cmp    al,0x0
   14001d02a:	or     al,0x0
   14001d02c:	add    DWORD PTR [rax],eax
   14001d02e:	push   rax
   14001d02f:	add    BYTE PTR [rdx+0x0],dh
   14001d032:	outs   dx,DWORD PTR ds:[rsi]
   14001d033:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001d037:	add    BYTE PTR [rbx+0x0],ah
   14001d03a:	je     0x14001d03c
   14001d03c:	push   rsi
   14001d03d:	add    BYTE PTR [rbp+0x0],ah
   14001d040:	jb     0x14001d042
   14001d042:	jae    0x14001d044
   14001d044:	imul   eax,DWORD PTR [rax],0x6e006f
   14001d04a:	add    BYTE PTR [rax],al
   14001d04c:	xor    DWORD PTR [rax],eax
   14001d04e:	(bad)  
   14001d04f:	add    BYTE PTR [rax+rax*1],ch
   14001d052:	and    BYTE PTR [rax],al
   14001d054:	xor    BYTE PTR [rax],al
   14001d056:	sub    al,0x0
   14001d058:	and    BYTE PTR [rax],al
   14001d05a:	xor    BYTE PTR [rax],al
   14001d05c:	sub    al,0x0
   14001d05e:	and    BYTE PTR [rax],al
   14001d060:	xor    BYTE PTR [rax],al
   14001d062:	add    BYTE PTR [rax],al
   14001d064:	add    BYTE PTR [rax],r8b
   14001d067:	add    BYTE PTR [rcx],al
   14001d069:	add    BYTE PTR [rsi+0x0],dl
   14001d06c:	(bad)  
   14001d06d:	add    BYTE PTR [rdx+0x0],dh
   14001d070:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001d074:	ins    BYTE PTR es:[rdi],dx
   14001d075:	add    BYTE PTR [rbp+0x0],ah
   14001d078:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001d07c:	data16 add BYTE PTR [rdi+0x0],ch
   14001d080:	add    BYTE PTR [rax],al
   14001d082:	add    BYTE PTR [rax],al
   14001d084:	and    al,0x0
   14001d086:	add    al,0x0
   14001d088:	add    BYTE PTR [rax],al
   14001d08a:	push   rsp
   14001d08b:	add    BYTE PTR [rdx+0x0],dh
   14001d08e:	(bad)  
   14001d08f:	add    BYTE PTR [rsi+0x0],ch
   14001d092:	jae    0x14001d094
   14001d094:	ins    BYTE PTR es:[rdi],dx
   14001d095:	add    BYTE PTR [rcx+0x0],ah
   14001d098:	je     0x14001d09a
   14001d09a:	imul   eax,DWORD PTR [rax],0x6e006f
   14001d0a0:	add    BYTE PTR [rax],al
   14001d0a2:	add    BYTE PTR [rax],al
   14001d0a4:	or     DWORD PTR [rax+rsi*4],eax
   14001d0a7:	add    al,0x3c
   14001d0a9:	(bad)  
   14001d0aa:	jae    0x14001d11f
   14001d0ac:	gs ins DWORD PTR es:[rdi],dx
   14001d0ae:	(bad)  
   14001d0af:	ins    BYTE PTR es:[rdi],dx
   14001d0b0:	jns    0x14001d0d2
   14001d0b2:	js     0x14001d121
   14001d0b4:	ins    BYTE PTR es:[rdi],dx
   14001d0b5:	outs   dx,BYTE PTR ds:[rsi]
   14001d0b6:	jae    0x14001d0f5
   14001d0b8:	and    dh,BYTE PTR [rbp+0x72]
   14001d0bb:	outs   dx,BYTE PTR ds:[rsi]
   14001d0bc:	cmp    dh,BYTE PTR [rbx+0x63]
   14001d0bf:	push   0x73616d65
   14001d0c4:	sub    eax,0x7263696d
   14001d0c9:	outs   dx,DWORD PTR ds:[rsi]
   14001d0ca:	jae    0x14001d13b
   14001d0cc:	data16 je 0x14001d0fc
   14001d0cf:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001d0d2:	cmp    ah,BYTE PTR [rcx+0x73]
   14001d0d5:	ins    DWORD PTR es:[rdi],dx
   14001d0d6:	cs jbe 0x14001d10a
   14001d0d9:	and    ah,BYTE PTR [rax]
   14001d0db:	js     0x14001d14a
   14001d0dd:	ins    BYTE PTR es:[rdi],dx
   14001d0de:	outs   dx,BYTE PTR ds:[rsi]
   14001d0df:	jae    0x14001d11b
   14001d0e1:	(bad)  
   14001d0e2:	jae    0x14001d151
   14001d0e4:	jbe    0x14001d119
   14001d0e6:	cmp    eax,0x6e727522
   14001d0eb:	cmp    dh,BYTE PTR [rbx+0x63]
   14001d0ee:	push   0x73616d65
   14001d0f3:	sub    eax,0x7263696d
   14001d0f8:	outs   dx,DWORD PTR ds:[rsi]
   14001d0f9:	jae    0x14001d16a
   14001d0fb:	data16 je 0x14001d12b
   14001d0fe:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001d101:	cmp    ah,BYTE PTR [rcx+0x73]
   14001d104:	ins    DWORD PTR es:[rdi],dx
   14001d105:	cs jbe 0x14001d13b
   14001d108:	and    ah,BYTE PTR [rax]
   14001d10a:	ins    DWORD PTR es:[rdi],dx
   14001d10b:	(bad)  
   14001d10c:	outs   dx,BYTE PTR ds:[rsi]
   14001d10d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14001d114:	jb     0x14001d189
   14001d116:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001d11d:	xor    BYTE PTR [rdx],ah
   14001d11f:	ds cmp al,0x74
   14001d122:	jb     0x14001d199
   14001d124:	jae    0x14001d19a
   14001d126:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001d128:	outs   dx,WORD PTR ds:[rsi]
   14001d12a:	and    BYTE PTR [rax+0x6d],bh
   14001d12d:	ins    BYTE PTR es:[rdi],dx
   14001d12e:	outs   dx,BYTE PTR ds:[rsi]
   14001d12f:	jae    0x14001d16e
   14001d131:	and    dh,BYTE PTR [rbp+0x72]
   14001d134:	outs   dx,BYTE PTR ds:[rsi]
   14001d135:	cmp    dh,BYTE PTR [rbx+0x63]
   14001d138:	push   0x73616d65
   14001d13d:	sub    eax,0x7263696d
   14001d142:	outs   dx,DWORD PTR ds:[rsi]
   14001d143:	jae    0x14001d1b4
   14001d145:	data16 je 0x14001d175
   14001d148:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001d14b:	cmp    ah,BYTE PTR [rcx+0x73]
   14001d14e:	ins    DWORD PTR es:[rdi],dx
   14001d14f:	cs jbe 0x14001d185
   14001d152:	and    bh,BYTE PTR [rsi]
   14001d154:	cmp    al,0x73
   14001d156:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001d15a:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x7165723c
   14001d162:	jne    0x14001d1c9
   14001d164:	jae    0x14001d1da
   14001d166:	gs fs push rax
   14001d169:	jb     0x14001d1d4
   14001d16b:	jbe    0x14001d1d6
   14001d16d:	ins    BYTE PTR es:[rdi],dx
   14001d16e:	gs addr32 gs jae 0x14001d1b1
   14001d173:	cmp    al,0x72
   14001d175:	gs jno 0x14001d1ed
   14001d178:	gs jae 0x14001d1ef
   14001d17b:	gs fs rex.RB js 0x14001d1e5
   14001d180:	movsxd esi,DWORD PTR [rbp+0x74]
   14001d183:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001d18a:	ins    BYTE PTR es:[rdi],dx
   14001d18b:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14001d18f:	gs ins BYTE PTR es:[rdi],dx
   14001d191:	cmp    eax,0x71657222
   14001d196:	jne    0x14001d201
   14001d198:	jb     0x14001d1ff
   14001d19a:	rex.B
   14001d19b:	fs ins DWORD PTR es:[rdi],dx
   14001d19d:	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
   14001d1a4:	je     0x14001d215
   14001d1a6:	jb     0x14001d1ca
   14001d1a8:	ds cmp al,0x2f
   14001d1ab:	jb     0x14001d212
   14001d1ad:	jno    0x14001d224
   14001d1af:	gs jae 0x14001d226
   14001d1b2:	gs fs rex.RB js 0x14001d21c
   14001d1b7:	movsxd esi,DWORD PTR [rbp+0x74]
   14001d1ba:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001d1c1:	ins    BYTE PTR es:[rdi],dx
   14001d1c2:	ds cmp al,0x2f
   14001d1c5:	jb     0x14001d22c
   14001d1c7:	jno    0x14001d23e
   14001d1c9:	gs jae 0x14001d240
   14001d1cc:	gs fs push rax
   14001d1cf:	jb     0x14001d23a
   14001d1d1:	jbe    0x14001d23c
   14001d1d3:	ins    BYTE PTR es:[rdi],dx
   14001d1d4:	gs addr32 gs jae 0x14001d217
   14001d1d9:	cmp    al,0x2f
   14001d1db:	jae    0x14001d242
   14001d1dd:	movsxd esi,DWORD PTR [rbp+0x72]
   14001d1e0:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x72742f3c
   14001d1e8:	jne    0x14001d25d
   14001d1ea:	je     0x14001d235
   14001d1ec:	outs   dx,BYTE PTR ds:[rsi]
   14001d1ed:	outs   dx,WORD PTR ds:[rsi]
   14001d1ef:	ds cmp al,0x61
   14001d1f2:	jae    0x14001d261
   14001d1f4:	jbe    0x14001d229
   14001d1f6:	cmp    ah,BYTE PTR [rcx+0x70]
   14001d1f9:	jo     0x14001d267
   14001d1fb:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001d202:	ds cmp al,0x61
   14001d205:	jae    0x14001d274
   14001d207:	jbe    0x14001d23c
   14001d209:	cmp    dh,BYTE PTR [rdi+0x69]
   14001d20c:	outs   dx,BYTE PTR ds:[rsi]
   14001d20d:	outs   dx,DWORD PTR fs:[rsi]
   14001d20f:	ja     0x14001d284
   14001d211:	push   rbx
   14001d212:	gs je  0x14001d289
   14001d215:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
   14001d21c:	ins    BYTE PTR es:[rdi],dx
   14001d21d:	outs   dx,BYTE PTR ds:[rsi]
   14001d21e:	jae    0x14001d25d
   14001d220:	and    ch,BYTE PTR [rax+0x74]
   14001d223:	je     0x14001d295
   14001d225:	cmp    ch,BYTE PTR [rdi]
   14001d227:	(bad)  
   14001d228:	jae    0x14001d28d
   14001d22a:	push   0x73616d65
   14001d22f:	cs ins DWORD PTR es:[rdi],dx
   14001d231:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14001d238:	je     0x14001d268
   14001d23a:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001d23d:	(bad)  
   14001d23e:	push   rbx
   14001d23f:	rex.WRB
   14001d240:	rex.WB (bad) 
   14001d242:	xor    dh,BYTE PTR [rax]
   14001d244:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6b2979
   14001d24a:	outs   dx,DWORD PTR fs:[rsi]
   14001d24c:	ja     0x14001d2c1
   14001d24e:	push   rbx
   14001d24f:	gs je  0x14001d2c6
   14001d252:	imul   ebp,DWORD PTR [rsi+0x67],0x3c3e2273
   14001d259:	fs jo  0x14001d2c5
   14001d25c:	rex.B ja 0x14001d2c0
   14001d25f:	jb     0x14001d2c6
   14001d261:	ds je  0x14001d2d6
   14001d264:	jne    0x14001d2cb
   14001d266:	cmp    al,0x2f
   14001d268:	fs jo  0x14001d2d4
   14001d26b:	rex.B ja 0x14001d2cf
   14001d26e:	jb     0x14001d2d5
   14001d270:	ds cmp al,0x2f
   14001d273:	(bad)  
   14001d274:	jae    0x14001d2e3
   14001d276:	jbe    0x14001d2ab
   14001d278:	cmp    dh,BYTE PTR [rdi+0x69]
   14001d27b:	outs   dx,BYTE PTR ds:[rsi]
   14001d27c:	outs   dx,DWORD PTR fs:[rsi]
   14001d27e:	ja     0x14001d2f3
   14001d280:	push   rbx
   14001d281:	gs je  0x14001d2f8
   14001d284:	imul   ebp,DWORD PTR [rsi+0x67],0x2f3c3e73
   14001d28b:	(bad)  
   14001d28c:	jae    0x14001d2fb
   14001d28e:	jbe    0x14001d2c3
   14001d290:	cmp    ah,BYTE PTR [rcx+0x70]
   14001d293:	jo     0x14001d301
   14001d295:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001d29c:	ds cmp al,0x2f
   14001d29f:	(bad)  
   14001d2a0:	jae    0x14001d315
   14001d2a2:	gs ins DWORD PTR es:[rdi],dx
   14001d2a4:	.byte 0x62
   14001d2a5:	ins    BYTE PTR es:[rdi],dx
   14001d2a6:	jns    0x14001d2e6
