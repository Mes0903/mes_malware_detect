
7a8cc5e06b39affec26b3f1bcaae3fae4a3c35aac0d2b5d0ae0509e9d1f06090.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    rax,rsp
   14000100b:	mov    QWORD PTR [rax+0x10],rdx
   14000100f:	mov    QWORD PTR [rax+0x18],r8
   140001013:	mov    QWORD PTR [rax+0x20],r9
   140001017:	push   rbx
   140001018:	sub    rsp,0x30
   14000101c:	lea    r9,[rax+0x18]
   140001020:	mov    r8,rdx
   140001023:	add    r9,0x8
   140001027:	mov    edx,0x200
   14000102c:	mov    QWORD PTR [rax-0x18],r9
   140001030:	mov    rbx,rcx
   140001033:	mov    r9,QWORD PTR [r9-0x8]
   140001037:	call   0x140001d9c
   14000103c:	mov    DWORD PTR [rbx+0x200],0x1
   140001046:	add    rsp,0x30
   14000104a:	pop    rbx
   14000104b:	ret    
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	int3   
   140001051:	int3   
   140001052:	int3   
   140001053:	int3   
   140001054:	mov    QWORD PTR [rsp+0x8],rbx
   140001059:	mov    QWORD PTR [rsp+0x10],rbp
   14000105e:	mov    QWORD PTR [rsp+0x18],rsi
   140001063:	push   rdi
   140001064:	sub    rsp,0x20
   140001068:	mov    rdi,rcx
   14000106b:	mov    rsi,r9
   14000106e:	mov    ecx,0x28
   140001073:	mov    rbp,rdx
   140001076:	call   QWORD PTR [rip+0x5234]        # 0x1400062b0
   14000107c:	mov    rbx,rax
   14000107f:	test   rax,rax
   140001082:	je     0x1400010e8
   140001084:	and    QWORD PTR [rax],0x0
   140001088:	mov    rcx,rbp
   14000108b:	and    QWORD PTR [rax+0x8],0x0
   140001090:	call   QWORD PTR [rip+0x5212]        # 0x1400062a8
   140001096:	mov    QWORD PTR [rbx],rax
   140001099:	test   rax,rax
   14000109c:	je     0x1400010d0
   14000109e:	and    QWORD PTR [rbx+0x8],0x0
   1400010a3:	or     DWORD PTR [rbx+0x10],0xffffffff
   1400010a7:	and    QWORD PTR [rbx+0x20],0x0
   1400010ac:	mov    rax,QWORD PTR [rdi+0x8]
   1400010b0:	mov    QWORD PTR [rbx+0x18],rax
   1400010b4:	cmp    QWORD PTR [rdi],0x0
   1400010b8:	jne    0x1400010bf
   1400010ba:	mov    QWORD PTR [rdi],rbx
   1400010bd:	jmp    0x1400010c7
   1400010bf:	mov    rax,QWORD PTR [rdi+0x8]
   1400010c3:	mov    QWORD PTR [rax+0x20],rbx
   1400010c7:	mov    QWORD PTR [rdi+0x8],rbx
   1400010cb:	mov    rax,rbx
   1400010ce:	jmp    0x140001107
   1400010d0:	mov    rcx,QWORD PTR [rbx+0x8]
   1400010d4:	test   rcx,rcx
   1400010d7:	je     0x1400010df
   1400010d9:	call   QWORD PTR [rip+0x51d9]        # 0x1400062b8
   1400010df:	mov    rcx,rbx
   1400010e2:	call   QWORD PTR [rip+0x51d0]        # 0x1400062b8
   1400010e8:	lea    r9,[rip+0x52e1]        # 0x1400063d0
   1400010ef:	mov    rcx,rsi
   1400010f2:	lea    r8,[rip+0x52e7]        # 0x1400063e0
   1400010f9:	lea    rdx,[rip+0x52e8]        # 0x1400063e8
   140001100:	call   0x140001008
   140001105:	xor    eax,eax
   140001107:	mov    rbx,QWORD PTR [rsp+0x30]
   14000110c:	mov    rbp,QWORD PTR [rsp+0x38]
   140001111:	mov    rsi,QWORD PTR [rsp+0x40]
   140001116:	add    rsp,0x20
   14000111a:	pop    rdi
   14000111b:	ret    
   14000111c:	int3   
   14000111d:	int3   
   14000111e:	int3   
   14000111f:	int3   
   140001120:	int3   
   140001121:	int3   
   140001122:	int3   
   140001123:	int3   
   140001124:	mov    QWORD PTR [rsp+0x18],r8
   140001129:	mov    QWORD PTR [rsp+0x20],r9
   14000112e:	push   rbx
   14000112f:	push   rsi
   140001130:	push   rdi
   140001131:	sub    rsp,0x20
   140001135:	xor    edi,edi
   140001137:	lea    rax,[rdx-0x1]
   14000113b:	cmp    rax,0x7ffffffe
   140001141:	mov    rsi,rcx
   140001144:	mov    ecx,0x80070057
   140001149:	cmova  edi,ecx
   14000114c:	test   edi,edi
   14000114e:	js     0x140001185
   140001150:	lea    rbx,[rdx-0x1]
   140001154:	mov    rcx,rsi
   140001157:	mov    rdx,rbx
   14000115a:	lea    r9,[rsp+0x58]
   14000115f:	xor    edi,edi
   140001161:	call   QWORD PTR [rip+0x5161]        # 0x1400062c8
   140001167:	test   eax,eax
   140001169:	js     0x14000117a
   14000116b:	cdqe   
   14000116d:	cmp    rax,rbx
   140001170:	ja     0x14000117a
   140001172:	jne    0x14000118d
   140001174:	mov    BYTE PTR [rbx+rsi*1],dil
   140001178:	jmp    0x14000118d
   14000117a:	mov    BYTE PTR [rbx+rsi*1],dil
   14000117e:	mov    edi,0x8007007a
   140001183:	jmp    0x14000118d
   140001185:	test   rdx,rdx
   140001188:	je     0x14000118d
   14000118a:	mov    BYTE PTR [rsi],0x0
   14000118d:	mov    eax,edi
   14000118f:	add    rsp,0x20
   140001193:	pop    rdi
   140001194:	pop    rsi
   140001195:	pop    rbx
   140001196:	ret    
   140001197:	int3   
   140001198:	int3   
   140001199:	int3   
   14000119a:	int3   
   14000119b:	int3   
   14000119c:	int3   
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	cmp    BYTE PTR [rcx],0x3a
   1400011a3:	ja     0x1400011b9
   1400011a5:	movsx  rax,BYTE PTR [rcx]
   1400011a9:	movabs rdx,0x400800000000001
   1400011b3:	bt     rdx,rax
   1400011b7:	jb     0x1400011ca
   1400011b9:	cmp    BYTE PTR [rcx],0x5c
   1400011bc:	je     0x1400011ca
   1400011be:	mov    WORD PTR [rcx+0x1],0x5c
   1400011c4:	mov    eax,0x1
   1400011c9:	ret    
   1400011ca:	xor    eax,eax
   1400011cc:	ret    
   1400011cd:	int3   
   1400011ce:	int3   
   1400011cf:	int3   
   1400011d0:	int3   
   1400011d1:	int3   
   1400011d2:	int3   
   1400011d3:	int3   
   1400011d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400011d9:	mov    QWORD PTR [rsp+0x10],rsi
   1400011de:	push   rdi
   1400011df:	sub    rsp,0x20
   1400011e3:	mov    rsi,r9
   1400011e6:	mov    BYTE PTR [rcx],0x0
   1400011e9:	mov    r11,r8
   1400011ec:	mov    r10,rcx
   1400011ef:	or     rdx,0xffffffffffffffff
   1400011f3:	inc    rdx
   1400011f6:	cmp    BYTE PTR [r8+rdx*1],0x0
   1400011fb:	jne    0x1400011f3
   1400011fd:	mov    r8d,0x100
   140001203:	test   edx,edx
   140001205:	je     0x140001264
   140001207:	xor    edi,edi
   140001209:	lea    r9d,[r8-0x1]
   14000120d:	mov    rbx,r11
   140001210:	sub    rbx,rcx
   140001213:	lea    rax,[r9+0x7ffffeff]
   14000121a:	test   rax,rax
   14000121d:	je     0x140001231
   14000121f:	mov    al,BYTE PTR [rbx+rcx*1]
   140001222:	test   al,al
   140001224:	je     0x140001231
   140001226:	mov    BYTE PTR [rcx],al
   140001228:	inc    rcx
   14000122b:	sub    r9,0x1
   14000122f:	jne    0x140001213
   140001231:	test   r9,r9
   140001234:	jne    0x14000123e
   140001236:	dec    rcx
   140001239:	mov    edi,0x8007007a
   14000123e:	mov    BYTE PTR [rcx],0x0
   140001241:	test   edi,edi
   140001243:	jns    0x14000124d
   140001245:	mov    r9,r11
   140001248:	jmp    0x1400012e5
   14000124d:	cmp    edx,r8d
   140001250:	jg     0x1400012fd
   140001256:	lea    eax,[rdx-0x1]
   140001259:	movsxd rcx,eax
   14000125c:	add    rcx,r10
   14000125f:	call   0x1400011a0
   140001264:	cmp    BYTE PTR [rsi],0x0
   140001267:	jne    0x140001273
   140001269:	mov    eax,0x1
   14000126e:	jmp    0x1400012ff
   140001273:	mov    rax,r8
   140001276:	mov    rcx,r10
   140001279:	cmp    BYTE PTR [rcx],0x0
   14000127c:	je     0x140001287
   14000127e:	inc    rcx
   140001281:	sub    rax,0x1
   140001285:	jne    0x140001279
   140001287:	test   rax,rax
   14000128a:	je     0x1400012e2
   14000128c:	mov    rcx,r8
   14000128f:	sub    rcx,rax
   140001292:	lea    rax,[rcx+r10*1]
   140001296:	mov    r10d,0x0
   14000129c:	sub    r8,rcx
   14000129f:	je     0x1400012d1
   1400012a1:	add    rcx,0x7ffffefe
   1400012a8:	mov    r9,rsi
   1400012ab:	add    rcx,r8
   1400012ae:	sub    r9,rax
   1400012b1:	test   rcx,rcx
   1400012b4:	je     0x1400012cc
   1400012b6:	mov    dl,BYTE PTR [r9+rax*1]
   1400012ba:	test   dl,dl
   1400012bc:	je     0x1400012cc
   1400012be:	mov    BYTE PTR [rax],dl
   1400012c0:	dec    rcx
   1400012c3:	inc    rax
   1400012c6:	sub    r8,0x1
   1400012ca:	jne    0x1400012b1
   1400012cc:	test   r8,r8
   1400012cf:	jne    0x1400012da
   1400012d1:	dec    rax
   1400012d4:	mov    r10d,0x8007007a
   1400012da:	mov    BYTE PTR [rax],0x0
   1400012dd:	test   r10d,r10d
   1400012e0:	jns    0x140001269
   1400012e2:	mov    r9,rsi
   1400012e5:	mov    rcx,QWORD PTR [rsp+0x58]
   1400012ea:	lea    r8,[rip+0x50ef]        # 0x1400063e0
   1400012f1:	lea    rdx,[rip+0x5158]        # 0x140006450
   1400012f8:	call   0x140001008
   1400012fd:	xor    eax,eax
   1400012ff:	mov    rbx,QWORD PTR [rsp+0x30]
   140001304:	mov    rsi,QWORD PTR [rsp+0x38]
   140001309:	add    rsp,0x20
   14000130d:	pop    rdi
   14000130e:	ret    
   14000130f:	int3   
   140001310:	int3   
   140001311:	int3   
   140001312:	int3   
   140001313:	int3   
   140001314:	int3   
   140001315:	int3   
   140001316:	int3   
   140001317:	int3   
   140001318:	mov    QWORD PTR [rsp+0x10],rbx
   14000131d:	push   rbp
   14000131e:	push   rsi
   14000131f:	push   rdi
   140001320:	push   r12
   140001322:	push   r13
   140001324:	push   r14
   140001326:	push   r15
   140001328:	lea    rbp,[rsp-0x40]
   14000132d:	sub    rsp,0x140
   140001334:	mov    rax,QWORD PTR [rip+0x7ccd]        # 0x140009008
   14000133b:	xor    rax,rsp
   14000133e:	mov    QWORD PTR [rbp+0x30],rax
   140001342:	mov    rdi,rcx
   140001345:	mov    rax,rcx
   140001348:	mov    cl,BYTE PTR [rcx]
   14000134a:	mov    r12,r8
   14000134d:	mov    sil,0x5c
   140001350:	mov    r14b,0x2f
   140001353:	mov    r13b,0x3a
   140001356:	xor    r15d,r15d
   140001359:	jmp    0x140001386
   14000135b:	cmp    cl,sil
   14000135e:	je     0x14000138a
   140001360:	cmp    cl,r14b
   140001363:	je     0x14000138a
   140001365:	cmp    cl,r13b
   140001368:	jne    0x140001376
   14000136a:	cmp    BYTE PTR [rax+0x1],sil
   14000136e:	je     0x140001376
   140001370:	cmp    BYTE PTR [rax+0x1],r14b
   140001374:	jne    0x14000138a
   140001376:	xor    ecx,ecx
   140001378:	xor    r8d,r8d
   14000137b:	mov    rdx,rax
   14000137e:	call   QWORD PTR [rip+0x4dac]        # 0x140006130
   140001384:	mov    cl,BYTE PTR [rax]
   140001386:	test   cl,cl
   140001388:	jne    0x14000135b
   14000138a:	mov    BYTE PTR [rsp+0x30],r15b
   14000138f:	cmp    BYTE PTR [rax],r15b
   140001392:	cmovne rax,rdi
   140001396:	cmp    BYTE PTR [rax],r15b
   140001399:	je     0x1400014b0
   14000139f:	mov    cl,BYTE PTR [rax]
   1400013a1:	test   cl,cl
   1400013a3:	je     0x1400014b0
   1400013a9:	mov    rbx,rax
   1400013ac:	cmp    cl,sil
   1400013af:	je     0x1400013df
   1400013b1:	cmp    cl,r14b
   1400013b4:	je     0x1400013df
   1400013b6:	cmp    cl,r13b
   1400013b9:	jne    0x1400013c8
   1400013bb:	mov    al,BYTE PTR [rbx+0x1]
   1400013be:	cmp    al,sil
   1400013c1:	je     0x1400013c8
   1400013c3:	cmp    al,r14b
   1400013c6:	jne    0x1400013df
   1400013c8:	xor    ecx,ecx
   1400013ca:	xor    r8d,r8d
   1400013cd:	mov    rdx,rbx
   1400013d0:	call   QWORD PTR [rip+0x4d5a]        # 0x140006130
   1400013d6:	mov    rbx,rax
   1400013d9:	mov    cl,BYTE PTR [rax]
   1400013db:	test   cl,cl
   1400013dd:	jne    0x1400013ac
   1400013df:	cmp    BYTE PTR [rbx],r15b
   1400013e2:	je     0x14000145d
   1400013e4:	mov    eax,ebx
   1400013e6:	sub    eax,edi
   1400013e8:	test   eax,eax
   1400013ea:	jle    0x1400013f9
   1400013ec:	cmp    BYTE PTR [rbx],r13b
   1400013ef:	je     0x1400013f7
   1400013f1:	cmp    BYTE PTR [rbx-0x1],r13b
   1400013f5:	jne    0x1400013f9
   1400013f7:	inc    eax
   1400013f9:	movsxd r8,eax
   1400013fc:	cmp    r8,0x7ffffffe
   140001403:	ja     0x140001469
   140001405:	lea    rax,[rsp+0x30]
   14000140a:	mov    r10,rdi
   14000140d:	sub    r10,rax
   140001410:	lea    rcx,[rsp+0x30]
   140001415:	mov    edx,0x100
   14000141a:	mov    r9d,r15d
   14000141d:	lea    rax,[rdx-0x100]
   140001424:	add    rax,r8
   140001427:	je     0x14000143c
   140001429:	mov    al,BYTE PTR [r10+rcx*1]
   14000142d:	test   al,al
   14000142f:	je     0x14000143c
   140001431:	mov    BYTE PTR [rcx],al
   140001433:	inc    rcx
   140001436:	sub    rdx,0x1
   14000143a:	jne    0x14000141d
   14000143c:	test   rdx,rdx
   14000143f:	jne    0x14000144a
   140001441:	dec    rcx
   140001444:	mov    r9d,0x8007007a
   14000144a:	mov    BYTE PTR [rcx],r15b
   14000144d:	test   r9d,r9d
   140001450:	js     0x14000146e
   140001452:	lea    rcx,[rsp+0x30]
   140001457:	call   QWORD PTR [rip+0x4e7b]        # 0x1400062d8
   14000145d:	cmp    BYTE PTR [rbx],r15b
   140001460:	lea    rax,[rbx+0x1]
   140001464:	jmp    0x140001399
   140001469:	mov    BYTE PTR [rsp+0x30],r15b
   14000146e:	mov    r9,rdi
   140001471:	lea    rdx,[rip+0x4fd8]        # 0x140006450
   140001478:	lea    r8,[rip+0x4f61]        # 0x1400063e0
   14000147f:	mov    rcx,r12
   140001482:	call   0x140001008
   140001487:	xor    eax,eax
   140001489:	mov    rcx,QWORD PTR [rbp+0x30]
   14000148d:	xor    rcx,rsp
   140001490:	call   0x140005520
   140001495:	mov    rbx,QWORD PTR [rsp+0x188]
   14000149d:	add    rsp,0x140
   1400014a4:	pop    r15
   1400014a6:	pop    r14
   1400014a8:	pop    r13
   1400014aa:	pop    r12
   1400014ac:	pop    rdi
   1400014ad:	pop    rsi
   1400014ae:	pop    rbp
   1400014af:	ret    
   1400014b0:	or     rdx,0xffffffffffffffff
   1400014b4:	lea    rcx,[rsp+0x30]
   1400014b9:	mov    rax,rdx
   1400014bc:	inc    rax
   1400014bf:	cmp    BYTE PTR [rcx+rax*1],r15b
   1400014c3:	jne    0x1400014bc
   1400014c5:	test   rax,rax
   1400014c8:	jne    0x1400014f0
   1400014ca:	mov    rax,rdx
   1400014cd:	inc    rax
   1400014d0:	cmp    BYTE PTR [rdi+rax*1],r15b
   1400014d4:	jne    0x1400014cd
   1400014d6:	test   rax,rax
   1400014d9:	je     0x1400014f0
   1400014db:	mov    al,BYTE PTR [rdi]
   1400014dd:	cmp    al,sil
   1400014e0:	je     0x1400014e7
   1400014e2:	cmp    al,r14b
   1400014e5:	jne    0x1400014f0
   1400014e7:	mov    BYTE PTR [rsp+0x30],al
   1400014eb:	mov    BYTE PTR [rsp+0x31],r15b
   1400014f0:	lea    rax,[rsp+0x30]
   1400014f5:	mov    r8,rdx
   1400014f8:	inc    r8
   1400014fb:	cmp    BYTE PTR [rax+r8*1],r15b
   1400014ff:	jne    0x1400014f8
   140001501:	movsxd rsi,r8d
   140001504:	test   r8d,r8d
   140001507:	jle    0x14000152f
   140001509:	movsxd rax,r8d
   14000150c:	cmp    rax,0xfe
   140001512:	ja     0x14000146e
   140001518:	lea    eax,[r8-0x1]
   14000151c:	movsxd rcx,eax
   14000151f:	lea    rax,[rsp+0x30]
   140001524:	add    rcx,rax
   140001527:	call   0x1400011a0
   14000152c:	add    r8d,eax
   14000152f:	mov    r14d,r15d
   140001532:	movsxd rax,r8d
   140001535:	mov    ebx,r15d
   140001538:	lea    r13,[rsp+0x30]
   14000153d:	mov    r15d,0x100
   140001543:	sub    r15,rax
   140001546:	add    r13,rax
   140001549:	call   QWORD PTR [rip+0x4b21]        # 0x140006070
   14000154f:	lea    r8,[rip+0x4f12]        # 0x140006468
   140001556:	mov    rdx,r15
   140001559:	mov    rcx,r13
   14000155c:	lea    r9d,[rbx+rax*1]
   140001560:	call   0x140001124
   140001565:	test   eax,eax
   140001567:	js     0x14000146e
   14000156d:	mov    edx,0x502
   140001572:	lea    rcx,[rsp+0x30]
   140001577:	mov    r8d,0x180
   14000157d:	call   QWORD PTR [rip+0x4d15]        # 0x140006298
   140001583:	cmp    eax,0xffffffff
   140001586:	jne    0x1400016da
   14000158c:	call   QWORD PTR [rip+0x4bf6]        # 0x140006188
   140001592:	mov    ecx,DWORD PTR [rax]
   140001594:	cmp    ecx,0xd
   140001597:	je     0x140001642
   14000159d:	cmp    ecx,0x11
   1400015a0:	je     0x14000164b
   1400015a6:	cmp    ecx,0x16
   1400015a9:	jne    0x140001693
   1400015af:	call   QWORD PTR [rip+0x4ccb]        # 0x140006280
   1400015b5:	cmp    DWORD PTR [rax],0x12f
   1400015bb:	je     0x14000164b
   1400015c1:	call   QWORD PTR [rip+0x4cb9]        # 0x140006280
   1400015c7:	mov    rdi,rax
   1400015ca:	call   QWORD PTR [rip+0x4bb8]        # 0x140006188
   1400015d0:	mov    rbx,rax
   1400015d3:	call   QWORD PTR [rip+0x4a77]        # 0x140006050
   1400015d9:	mov    r9d,DWORD PTR [rdi]
   1400015dc:	lea    rdx,[rsp+0x30]
   1400015e1:	mov    r8d,DWORD PTR [rbx]
   1400015e4:	lea    rcx,[rip+0x4ed5]        # 0x1400064c0
   1400015eb:	mov    DWORD PTR [rsp+0x20],eax
   1400015ef:	call   QWORD PTR [rip+0x4cf3]        # 0x1400062e8
   1400015f5:	cmp    rsi,0x100
   1400015fc:	jae    0x1400016fd
   140001602:	mov    BYTE PTR [rsp+rsi*1+0x30],0x0
   140001607:	call   QWORD PTR [rip+0x4c73]        # 0x140006280
   14000160d:	mov    rbx,rax
   140001610:	call   QWORD PTR [rip+0x4b72]        # 0x140006188
   140001616:	mov    ecx,DWORD PTR [rbx]
   140001618:	lea    r9,[rsp+0x30]
   14000161d:	mov    DWORD PTR [rsp+0x28],ecx
   140001621:	lea    r8,[rip+0x4ee0]        # 0x140006508
   140001628:	lea    rdx,[rip+0x4ee1]        # 0x140006510
   14000162f:	mov    rcx,r12
   140001632:	mov    eax,DWORD PTR [rax]
   140001634:	mov    DWORD PTR [rsp+0x20],eax
   140001638:	call   0x140001008
   14000163d:	jmp    0x140001487
   140001642:	inc    r14d
   140001645:	cmp    r14d,0x5
   140001649:	jge    0x1400016bb
   14000164b:	inc    ebx
   14000164d:	cmp    ebx,0x3e7
   140001653:	jl     0x140001549
   140001659:	cmp    rsi,0x100
   140001660:	jae    0x140001703
   140001666:	lea    rax,[rsp+0x30]
   14000166b:	mov    BYTE PTR [rsp+rsi*1+0x30],0x0
   140001670:	mov    r9d,ebx
   140001673:	mov    QWORD PTR [rsp+0x20],rax
   140001678:	lea    r8,[rip+0x4ea5]        # 0x140006524
   14000167f:	mov    rcx,r12
   140001682:	lea    rdx,[rip+0x4ea7]        # 0x140006530
   140001689:	call   0x140001008
   14000168e:	jmp    0x140001487
   140001693:	cmp    ecx,0x18
   140001696:	jne    0x1400015c1
   14000169c:	cmp    rsi,0x100
   1400016a3:	jae    0x1400016f7
   1400016a5:	mov    BYTE PTR [rsp+rsi*1+0x30],0x0
   1400016aa:	lea    r9,[rsp+0x30]
   1400016af:	lea    rdx,[rip+0x4dea]        # 0x1400064a0
   1400016b6:	jmp    0x140001478
   1400016bb:	cmp    rsi,0x100
   1400016c2:	jae    0x140001709
   1400016c4:	mov    BYTE PTR [rsp+rsi*1+0x30],0x0
   1400016c9:	lea    r9,[rsp+0x30]
   1400016ce:	lea    rdx,[rip+0x4da3]        # 0x140006478
   1400016d5:	jmp    0x140001478
   1400016da:	mov    ecx,eax
   1400016dc:	call   QWORD PTR [rip+0x4aae]        # 0x140006190
   1400016e2:	lea    rcx,[rsp+0x30]
   1400016e7:	call   QWORD PTR [rip+0x4b43]        # 0x140006230
   1400016ed:	mov    eax,0x1
   1400016f2:	jmp    0x140001489
   1400016f7:	call   0x1400056f8
   1400016fc:	int3   
   1400016fd:	call   0x1400056f8
   140001702:	int3   
   140001703:	call   0x1400056f8
   140001708:	int3   
   140001709:	call   0x1400056f8
   14000170e:	int3   
   14000170f:	int3   
   140001710:	int3   
   140001711:	int3   
   140001712:	int3   
   140001713:	int3   
   140001714:	int3   
   140001715:	int3   
   140001716:	int3   
   140001717:	int3   
   140001718:	mov    QWORD PTR [rsp+0x8],rbx
   14000171d:	mov    QWORD PTR [rsp+0x10],rsi
   140001722:	push   rdi
   140001723:	sub    rsp,0x20
   140001727:	mov    al,BYTE PTR [rcx]
   140001729:	mov    rsi,rdx
   14000172c:	mov    rdx,rcx
   14000172f:	mov    rdi,rcx
   140001732:	mov    rbx,rcx
   140001735:	jmp    0x140001761
   140001737:	sub    al,0x2f
   140001739:	cmp    al,0x2d
   14000173b:	ja     0x140001751
   14000173d:	movabs rcx,0x200000000801
   140001747:	bt     rcx,rax
   14000174b:	jae    0x140001751
   14000174d:	lea    rbx,[rdx+0x1]
   140001751:	xor    ecx,ecx
   140001753:	xor    r8d,r8d
   140001756:	call   QWORD PTR [rip+0x49d4]        # 0x140006130
   14000175c:	mov    rdx,rax
   14000175f:	mov    al,BYTE PTR [rax]
   140001761:	test   al,al
   140001763:	jne    0x140001737
   140001765:	cmp    BYTE PTR [rbx],al
   140001767:	jne    0x140001786
   140001769:	mov    r9,rdi
   14000176c:	lea    r8,[rip+0x4c6d]        # 0x1400063e0
   140001773:	lea    rdx,[rip+0x4dee]        # 0x140006568
   14000177a:	mov    rcx,rsi
   14000177d:	call   0x140001008
   140001782:	xor    eax,eax
   140001784:	jmp    0x140001789
   140001786:	mov    rax,rbx
   140001789:	mov    rbx,QWORD PTR [rsp+0x30]
   14000178e:	mov    rsi,QWORD PTR [rsp+0x38]
   140001793:	add    rsp,0x20
   140001797:	pop    rdi
   140001798:	ret    
   140001799:	int3   
   14000179a:	int3   
   14000179b:	int3   
   14000179c:	int3   
   14000179d:	int3   
   14000179e:	int3   
   14000179f:	int3   
   1400017a0:	mov    QWORD PTR [rsp+0x18],rbx
   1400017a5:	push   rbp
   1400017a6:	push   rsi
   1400017a7:	push   rdi
   1400017a8:	sub    rsp,0x60
   1400017ac:	mov    rax,QWORD PTR [rip+0x7855]        # 0x140009008
   1400017b3:	xor    rax,rsp
   1400017b6:	mov    QWORD PTR [rsp+0x50],rax
   1400017bb:	mov    rsi,rdx
   1400017be:	lea    r8,[rsp+0x28]
   1400017c3:	mov    rdi,rcx
   1400017c6:	xor    edx,edx
   1400017c8:	mov    rcx,rsi
   1400017cb:	mov    rbp,r9
   1400017ce:	call   QWORD PTR [rip+0x4924]        # 0x1400060f8
   1400017d4:	xor    ebx,ebx
   1400017d6:	test   eax,eax
   1400017d8:	je     0x14000181e
   1400017da:	lea    rdx,[rsp+0x20]
   1400017df:	lea    rcx,[rsp+0x3c]
   1400017e4:	call   QWORD PTR [rip+0x487e]        # 0x140006068
   1400017ea:	test   eax,eax
   1400017ec:	je     0x14000181e
   1400017ee:	lea    r8,[rdi+0x2]
   1400017f2:	mov    rdx,rdi
   1400017f5:	lea    rcx,[rsp+0x20]
   1400017fa:	call   QWORD PTR [rip+0x4908]        # 0x140006108
   140001800:	test   eax,eax
   140001802:	je     0x14000181e
   140001804:	mov    eax,DWORD PTR [rsp+0x28]
   140001808:	test   al,al
   14000180a:	js     0x140001813
   14000180c:	and    ax,0x27
   140001810:	movzx  ebx,ax
   140001813:	mov    WORD PTR [rdi+0x4],bx
   140001817:	mov    eax,0x1
   14000181c:	jmp    0x140001839
   14000181e:	mov    r9,rsi
   140001821:	lea    r8,[rip+0x4bb8]        # 0x1400063e0
   140001828:	lea    rdx,[rip+0x4d59]        # 0x140006588
   14000182f:	mov    rcx,rbp
   140001832:	call   0x140001008
   140001837:	xor    eax,eax
   140001839:	mov    rcx,QWORD PTR [rsp+0x50]
   14000183e:	xor    rcx,rsp
   140001841:	call   0x140005520
   140001846:	mov    rbx,QWORD PTR [rsp+0x90]
   14000184e:	add    rsp,0x60
   140001852:	pop    rdi
   140001853:	pop    rsi
   140001854:	pop    rbp
   140001855:	ret    
   140001856:	int3   
   140001857:	int3   
   140001858:	int3   
   140001859:	int3   
   14000185a:	int3   
   14000185b:	int3   
   14000185c:	mov    rax,rsp
   14000185f:	mov    QWORD PTR [rax+0x8],rbx
   140001863:	mov    QWORD PTR [rax+0x10],rbp
   140001867:	mov    QWORD PTR [rax+0x18],rsi
   14000186b:	push   rdi
   14000186c:	push   r14
   14000186e:	push   r15
   140001870:	sub    rsp,0x50
   140001874:	xor    r15d,r15d
   140001877:	mov    rbp,r8
   14000187a:	mov    QWORD PTR [rax-0x38],r15
   14000187e:	mov    r14,rdx
   140001881:	mov    DWORD PTR [rax-0x40],r15d
   140001885:	xor    r9d,r9d
   140001888:	xor    r8d,r8d
   14000188b:	mov    edx,0x40000000
   140001890:	lea    esi,[r15+0x3]
   140001894:	mov    rbx,rcx
   140001897:	mov    DWORD PTR [rax-0x48],esi
   14000189a:	call   QWORD PTR [rip+0x4860]        # 0x140006100
   1400018a0:	mov    rdi,rax
   1400018a3:	cmp    rax,0xffffffffffffffff
   1400018a7:	jne    0x1400018e1
   1400018a9:	lea    ecx,[rsi+0x61]
   1400018ac:	call   QWORD PTR [rip+0x4796]        # 0x140006048
   1400018b2:	mov    QWORD PTR [rsp+0x30],r15
   1400018b7:	xor    r9d,r9d
   1400018ba:	mov    DWORD PTR [rsp+0x28],r15d
   1400018bf:	xor    r8d,r8d
   1400018c2:	mov    edx,0x40000000
   1400018c7:	mov    DWORD PTR [rsp+0x20],esi
   1400018cb:	mov    rcx,rbx
   1400018ce:	call   QWORD PTR [rip+0x482c]        # 0x140006100
   1400018d4:	mov    rdi,rax
   1400018d7:	cmp    rax,0xffffffffffffffff
   1400018db:	je     0x14000196d
   1400018e1:	movzx  edx,WORD PTR [r14+0x2]
   1400018e6:	lea    r8,[rsp+0x88]
   1400018ee:	movzx  ecx,WORD PTR [r14]
   1400018f2:	call   QWORD PTR [rip+0x4818]        # 0x140006110
   1400018f8:	lea    rdx,[rsp+0x40]
   1400018fd:	mov    esi,eax
   1400018ff:	lea    rcx,[rsp+0x88]
   140001907:	call   QWORD PTR [rip+0x476b]        # 0x140006078
   14000190d:	lea    r9,[rsp+0x40]
   140001912:	xor    r8d,r8d
   140001915:	xor    edx,edx
   140001917:	mov    rcx,rdi
   14000191a:	or     esi,eax
   14000191c:	call   QWORD PTR [rip+0x4766]        # 0x140006088
   140001922:	mov    rcx,rdi
   140001925:	or     esi,eax
   140001927:	call   QWORD PTR [rip+0x4733]        # 0x140006060
   14000192d:	cmp    WORD PTR [r14+0x4],r15w
   140001932:	jne    0x14000193b
   140001934:	mov    edx,0x80
   140001939:	jmp    0x140001943
   14000193b:	movzx  edx,WORD PTR [r14+0x4]
   140001940:	and    edx,0x27
   140001943:	mov    rcx,rbx
   140001946:	call   QWORD PTR [rip+0x470c]        # 0x140006058
   14000194c:	or     eax,esi
   14000194e:	jne    0x14000196d
   140001950:	mov    r9,rbx
   140001953:	lea    r8,[rip+0x4a86]        # 0x1400063e0
   14000195a:	lea    rdx,[rip+0x4c57]        # 0x1400065b8
   140001961:	mov    rcx,rbp
   140001964:	call   0x140001008
   140001969:	xor    eax,eax
   14000196b:	jmp    0x140001972
   14000196d:	mov    eax,0x1
   140001972:	lea    r11,[rsp+0x50]
   140001977:	mov    rbx,QWORD PTR [r11+0x20]
   14000197b:	mov    rbp,QWORD PTR [r11+0x28]
   14000197f:	mov    rsi,QWORD PTR [r11+0x30]
   140001983:	mov    rsp,r11
   140001986:	pop    r15
   140001988:	pop    r14
   14000198a:	pop    rdi
   14000198b:	ret    
   14000198c:	int3   
   14000198d:	int3   
   14000198e:	int3   
   14000198f:	int3   
   140001990:	int3   
   140001991:	int3   
   140001992:	int3   
   140001993:	int3   
   140001994:	mov    rax,rsp
   140001997:	mov    QWORD PTR [rax+0x8],rbx
   14000199b:	mov    QWORD PTR [rax+0x10],rsi
   14000199f:	mov    QWORD PTR [rax+0x18],rdi
   1400019a3:	mov    QWORD PTR [rax+0x20],r12
   1400019a7:	push   r13
   1400019a9:	push   r14
   1400019ab:	push   r15
   1400019ad:	sub    rsp,0x30
   1400019b1:	mov    rsi,rdx
   1400019b4:	mov    r12,rcx
   1400019b7:	mov    r14d,0x8000
   1400019bd:	mov    rcx,rsi
   1400019c0:	mov    edx,r14d
   1400019c3:	xor    r13d,r13d
   1400019c6:	xor    ebx,ebx
   1400019c8:	call   QWORD PTR [rip+0x48ca]        # 0x140006298
   1400019ce:	mov    r15d,eax
   1400019d1:	cmp    eax,0xffffffff
   1400019d4:	jne    0x1400019f9
   1400019d6:	mov    rcx,QWORD PTR [rsp+0x88]
   1400019de:	lea    r8,[rip+0x49fb]        # 0x1400063e0
   1400019e5:	mov    r9,rsi
   1400019e8:	lea    rdx,[rip+0x4a49]        # 0x140006438
   1400019ef:	call   0x140001008
   1400019f4:	jmp    0x140001b52
   1400019f9:	mov    r9,QWORD PTR [rsp+0x88]
   140001a01:	lea    rcx,[rsp+0x70]
   140001a06:	mov    rdx,rsi
   140001a09:	call   0x1400017a0
   140001a0e:	test   eax,eax
   140001a10:	je     0x140001b3b
   140001a16:	mov    ecx,r14d
   140001a19:	call   QWORD PTR [rip+0x4891]        # 0x1400062b0
   140001a1f:	mov    rbx,rax
   140001a22:	test   rax,rax
   140001a25:	jne    0x140001a4f
   140001a27:	mov    rcx,QWORD PTR [rsp+0x88]
   140001a2f:	lea    r8,[rip+0x49f6]        # 0x14000642c
   140001a36:	mov    r9,rsi
   140001a39:	mov    QWORD PTR [rsp+0x20],r12
   140001a3e:	lea    rdx,[rip+0x4ba3]        # 0x1400065e8
   140001a45:	call   0x140001008
   140001a4a:	jmp    0x140001b3b
   140001a4f:	mov    edx,0x8301
   140001a54:	mov    r8d,0x180
   140001a5a:	mov    rcx,r12
   140001a5d:	call   QWORD PTR [rip+0x4835]        # 0x140006298
   140001a63:	mov    edi,eax
   140001a65:	cmp    eax,0xffffffff
   140001a68:	jne    0x140001a8d
   140001a6a:	mov    rcx,QWORD PTR [rsp+0x88]
   140001a72:	lea    r8,[rip+0x4967]        # 0x1400063e0
   140001a79:	mov    r9,r12
   140001a7c:	lea    rdx,[rip+0x49b5]        # 0x140006438
   140001a83:	call   0x140001008
   140001a88:	jmp    0x140001b3b
   140001a8d:	mov    ecx,r15d
   140001a90:	call   QWORD PTR [rip+0x4862]        # 0x1400062f8
   140001a96:	test   eax,eax
   140001a98:	jne    0x140001b06
   140001a9a:	mov    r8d,r14d
   140001a9d:	mov    rdx,rbx
   140001aa0:	mov    ecx,r15d
   140001aa3:	call   QWORD PTR [rip+0x4837]        # 0x1400062e0
   140001aa9:	mov    r14d,eax
   140001aac:	cmp    eax,0xffffffff
   140001aaf:	je     0x140001ae6
   140001ab1:	test   eax,eax
   140001ab3:	je     0x140001ac8
   140001ab5:	mov    r8d,eax
   140001ab8:	mov    rdx,rbx
   140001abb:	mov    ecx,edi
   140001abd:	call   QWORD PTR [rip+0x46bd]        # 0x140006180
   140001ac3:	cmp    eax,r14d
   140001ac6:	jne    0x140001add
   140001ac8:	mov    ecx,r15d
   140001acb:	call   QWORD PTR [rip+0x4827]        # 0x1400062f8
   140001ad1:	test   eax,eax
   140001ad3:	jne    0x140001b06
   140001ad5:	mov    r14d,0x8000
   140001adb:	jmp    0x140001a9a
   140001add:	lea    rdx,[rip+0x4b4c]        # 0x140006630
   140001ae4:	jmp    0x140001aed
   140001ae6:	lea    rdx,[rip+0x4b2b]        # 0x140006618
   140001aed:	mov    rcx,QWORD PTR [rsp+0x88]
   140001af5:	lea    r8,[rip+0x48e4]        # 0x1400063e0
   140001afc:	mov    r9,rsi
   140001aff:	call   0x140001008
   140001b04:	jmp    0x140001b2e
   140001b06:	mov    ecx,edi
   140001b08:	call   QWORD PTR [rip+0x4682]        # 0x140006190
   140001b0e:	mov    r8,QWORD PTR [rsp+0x88]
   140001b16:	lea    rdx,[rsp+0x70]
   140001b1b:	mov    rcx,r12
   140001b1e:	or     edi,0xffffffff
   140001b21:	call   0x14000185c
   140001b26:	test   eax,eax
   140001b28:	je     0x140001b3b
   140001b2a:	lea    r13d,[rdi+0x2]
   140001b2e:	cmp    edi,0xffffffff
   140001b31:	je     0x140001b3b
   140001b33:	mov    ecx,edi
   140001b35:	call   QWORD PTR [rip+0x4655]        # 0x140006190
   140001b3b:	mov    ecx,r15d
   140001b3e:	call   QWORD PTR [rip+0x464c]        # 0x140006190
   140001b44:	test   rbx,rbx
   140001b47:	je     0x140001b52
   140001b49:	mov    rcx,rbx
   140001b4c:	call   QWORD PTR [rip+0x4766]        # 0x1400062b8
   140001b52:	mov    rbx,QWORD PTR [rsp+0x50]
   140001b57:	mov    eax,r13d
   140001b5a:	mov    rsi,QWORD PTR [rsp+0x58]
   140001b5f:	mov    rdi,QWORD PTR [rsp+0x60]
   140001b64:	mov    r12,QWORD PTR [rsp+0x68]
   140001b69:	add    rsp,0x30
   140001b6d:	pop    r15
   140001b6f:	pop    r14
   140001b71:	pop    r13
   140001b73:	ret    
   140001b74:	int3   
   140001b75:	int3   
   140001b76:	int3   
   140001b77:	int3   
   140001b78:	int3   
   140001b79:	int3   
   140001b7a:	int3   
   140001b7b:	int3   
   140001b7c:	mov    QWORD PTR [rsp+0x8],rbx
   140001b81:	mov    QWORD PTR [rsp+0x10],rbp
   140001b86:	mov    QWORD PTR [rsp+0x18],rsi
   140001b8b:	push   rdi
   140001b8c:	sub    rsp,0x20
   140001b90:	mov    rsi,rcx
   140001b93:	xor    edi,edi
   140001b95:	mov    cl,BYTE PTR [rdx]
   140001b97:	mov    ebp,r8d
   140001b9a:	mov    rbx,rdx
   140001b9d:	mov    al,cl
   140001b9f:	test   cl,cl
   140001ba1:	je     0x140001bf7
   140001ba3:	lea    r9d,[rdi+0x1]
   140001ba7:	cmp    al,0x2a
   140001ba9:	je     0x140001c27
   140001bab:	cmp    al,0x3f
   140001bad:	je     0x140001c15
   140001baf:	movsx  edx,BYTE PTR [rsi]
   140001bb2:	lea    eax,[rdx-0x41]
   140001bb5:	cmp    eax,0x19
   140001bb8:	ja     0x140001bbd
   140001bba:	add    edx,0x20
   140001bbd:	movsx  r8d,cl
   140001bc1:	lea    eax,[r8-0x41]
   140001bc5:	cmp    eax,0x19
   140001bc8:	ja     0x140001bce
   140001bca:	add    r8d,0x20
   140001bce:	cmp    edx,r8d
   140001bd1:	je     0x140001be4
   140001bd3:	cmp    cl,0x2e
   140001bd6:	jne    0x140001c23
   140001bd8:	cmp    BYTE PTR [rsi],dil
   140001bdb:	jne    0x140001c23
   140001bdd:	cmp    ebp,r9d
   140001be0:	jne    0x140001c23
   140001be2:	mov    ebp,edi
   140001be4:	cmp    BYTE PTR [rsi],dil
   140001be7:	je     0x140001bec
   140001be9:	add    rsi,r9
   140001bec:	add    rbx,r9
   140001bef:	mov    cl,BYTE PTR [rbx]
   140001bf1:	mov    al,cl
   140001bf3:	test   cl,cl
   140001bf5:	jne    0x140001ba7
   140001bf7:	cmp    BYTE PTR [rsi],dil
   140001bfa:	sete   dil
   140001bfe:	mov    eax,edi
   140001c00:	mov    rbx,QWORD PTR [rsp+0x30]
   140001c05:	mov    rbp,QWORD PTR [rsp+0x38]
   140001c0a:	mov    rsi,QWORD PTR [rsp+0x40]
   140001c0f:	add    rsp,0x20
   140001c13:	pop    rdi
   140001c14:	ret    
   140001c15:	cmp    BYTE PTR [rsi],dil
   140001c18:	jne    0x140001be9
   140001c1a:	cmp    ebp,r9d
   140001c1d:	jne    0x140001c23
   140001c1f:	mov    ebp,edi
   140001c21:	jmp    0x140001bec
   140001c23:	xor    eax,eax
   140001c25:	jmp    0x140001c00
   140001c27:	add    rbx,r9
   140001c2a:	mov    al,BYTE PTR [rbx]
   140001c2c:	test   al,al
   140001c2e:	je     0x140001ca8
   140001c30:	cmp    al,0x3f
   140001c32:	jne    0x140001c47
   140001c34:	cmp    BYTE PTR [rsi],dil
   140001c37:	jne    0x140001c42
   140001c39:	cmp    ebp,r9d
   140001c3c:	jne    0x140001c23
   140001c3e:	mov    ebp,edi
   140001c40:	jmp    0x140001c27
   140001c42:	add    rsi,r9
   140001c45:	jmp    0x140001c27
   140001c47:	cmp    al,0x2a
   140001c49:	je     0x140001c27
   140001c4b:	mov    al,BYTE PTR [rsi]
   140001c4d:	test   al,al
   140001c4f:	je     0x140001c91
   140001c51:	movsx  edx,al
   140001c54:	lea    eax,[rdx-0x41]
   140001c57:	cmp    eax,0x19
   140001c5a:	ja     0x140001c5f
   140001c5c:	add    edx,0x20
   140001c5f:	movsx  ecx,BYTE PTR [rbx]
   140001c62:	lea    eax,[rcx-0x41]
   140001c65:	cmp    eax,0x19
   140001c68:	ja     0x140001c6d
   140001c6a:	add    ecx,0x20
   140001c6d:	cmp    edx,ecx
   140001c6f:	jne    0x140001c8c
   140001c71:	lea    rdx,[rbx+0x1]
   140001c75:	mov    r8d,ebp
   140001c78:	lea    rcx,[rsi+0x1]
   140001c7c:	call   0x140001b7c
   140001c81:	mov    r9d,0x1
   140001c87:	cmp    eax,r9d
   140001c8a:	je     0x140001ca8
   140001c8c:	add    rsi,r9
   140001c8f:	jmp    0x140001c4b
   140001c91:	cmp    BYTE PTR [rbx],0x2e
   140001c94:	jne    0x140001c23
   140001c96:	cmp    ebp,r9d
   140001c99:	jmp    0x140001c9d
   140001c9b:	cmp    al,0x2a
   140001c9d:	jne    0x140001c23
   140001c9f:	add    rbx,r9
   140001ca2:	mov    al,BYTE PTR [rbx]
   140001ca4:	test   al,al
   140001ca6:	jne    0x140001c9b
   140001ca8:	mov    eax,r9d
   140001cab:	jmp    0x140001c00
   140001cb0:	int3   
   140001cb1:	int3   
   140001cb2:	int3   
   140001cb3:	int3   
   140001cb4:	int3   
   140001cb5:	int3   
   140001cb6:	int3   
   140001cb7:	int3   
   140001cb8:	mov    rax,rsp
   140001cbb:	mov    QWORD PTR [rax+0x18],r8
   140001cbf:	mov    QWORD PTR [rax+0x20],r9
   140001cc3:	sub    rsp,0x38
   140001cc7:	lea    r9,[rax+0x20]
   140001ccb:	add    r9,0x8
   140001ccf:	mov    QWORD PTR [rax-0x18],r9
   140001cd3:	mov    r9,QWORD PTR [r9-0x8]
   140001cd7:	call   0x140001d9c
   140001cdc:	add    rsp,0x38
   140001ce0:	ret    
   140001ce1:	int3   
   140001ce2:	int3   
   140001ce3:	int3   
   140001ce4:	int3   
   140001ce5:	int3   
   140001ce6:	int3   
   140001ce7:	int3   
   140001ce8:	rex push rbx
   140001cea:	push   rbp
   140001ceb:	push   rsi
   140001cec:	push   rdi
   140001ced:	push   r14
   140001cef:	sub    rsp,0x20
   140001cf3:	mov    rbx,r9
   140001cf6:	xor    edi,edi
   140001cf8:	lea    r9,[rsp+0x78]
   140001cfd:	mov    r14,rcx
   140001d00:	cmp    rbx,rdx
   140001d03:	jb     0x140001d82
   140001d05:	mov    rax,rbx
   140001d08:	sub    rax,rdx
   140001d0b:	cmp    r8,rax
   140001d0e:	jb     0x140001d82
   140001d10:	sub    rdx,rbx
   140001d13:	xor    ebp,ebp
   140001d15:	add    rdx,r8
   140001d18:	mov    ecx,0x80070057
   140001d1d:	lea    rax,[rdx-0x1]
   140001d21:	cmp    rax,0x7ffffffe
   140001d27:	cmova  ebp,ecx
   140001d2a:	test   ebp,ebp
   140001d2c:	js     0x140001d63
   140001d2e:	mov    r8,QWORD PTR [rsp+0x70]
   140001d33:	lea    rsi,[rdx-0x1]
   140001d37:	mov    rdx,rsi
   140001d3a:	mov    rcx,rbx
   140001d3d:	xor    ebp,ebp
   140001d3f:	call   QWORD PTR [rip+0x4583]        # 0x1400062c8
   140001d45:	test   eax,eax
   140001d47:	js     0x140001d58
   140001d49:	cdqe   
   140001d4b:	cmp    rax,rsi
   140001d4e:	ja     0x140001d58
   140001d50:	jne    0x140001d6b
   140001d52:	mov    BYTE PTR [rsi+rbx*1],dil
   140001d56:	jmp    0x140001d6b
   140001d58:	mov    BYTE PTR [rsi+rbx*1],dil
   140001d5c:	mov    ebp,0x8007007a
   140001d61:	jmp    0x140001d6b
   140001d63:	test   rdx,rdx
   140001d66:	je     0x140001d6b
   140001d68:	mov    BYTE PTR [rbx],dil
   140001d6b:	test   ebp,ebp
   140001d6d:	js     0x140001d82
   140001d6f:	or     rdi,0xffffffffffffffff
   140001d73:	inc    rdi
   140001d76:	cmp    BYTE PTR [rbx+rdi*1],0x0
   140001d7a:	jne    0x140001d73
   140001d7c:	and    DWORD PTR [r14],0x0
   140001d80:	jmp    0x140001d89
   140001d82:	mov    DWORD PTR [r14],0x1
   140001d89:	mov    eax,edi
   140001d8b:	add    rsp,0x20
   140001d8f:	pop    r14
   140001d91:	pop    rdi
   140001d92:	pop    rsi
   140001d93:	pop    rbp
   140001d94:	pop    rbx
   140001d95:	ret    
   140001d96:	int3   
   140001d97:	int3   
   140001d98:	int3   
   140001d99:	int3   
   140001d9a:	int3   
   140001d9b:	int3   
   140001d9c:	rex push rbp
   140001d9e:	push   rbx
   140001d9f:	push   rsi
   140001da0:	push   rdi
   140001da1:	push   r12
   140001da3:	push   r13
   140001da5:	push   r14
   140001da7:	push   r15
   140001da9:	lea    rbp,[rsp-0x1d8]
   140001db1:	sub    rsp,0x2d8
   140001db8:	mov    rax,QWORD PTR [rip+0x7249]        # 0x140009008
   140001dbf:	xor    rax,rsp
   140001dc2:	mov    QWORD PTR [rbp+0x1c0],rax
   140001dc9:	mov    r13,QWORD PTR [rbp+0x240]
   140001dd0:	mov    rbx,rcx
   140001dd3:	mov    ecx,0x200
   140001dd8:	mov    DWORD PTR [rsp+0x34],edx
   140001ddc:	xor    eax,eax
   140001dde:	mov    r12,r9
   140001de1:	cmp    rax,rcx
   140001de4:	mov    r15,r8
   140001de7:	jae    0x1400022c5
   140001ded:	mov    BYTE PTR [rbp+rax*1-0x40],0x0
   140001df2:	inc    rax
   140001df5:	cmp    rax,rcx
   140001df8:	jl     0x140001de7
   140001dfa:	xor    esi,esi
   140001dfc:	mov    rdi,r8
   140001dff:	cmp    BYTE PTR [r8],sil
   140001e02:	je     0x14000209a
   140001e08:	cmp    BYTE PTR [rdi],0x25
   140001e0b:	jne    0x140001e49
   140001e0d:	inc    rdi
   140001e10:	movzx  ecx,BYTE PTR [rdi]
   140001e13:	call   QWORD PTR [rip+0x4387]        # 0x1400061a0
   140001e19:	test   eax,eax
   140001e1b:	je     0x140001e49
   140001e1d:	mov    rcx,rdi
   140001e20:	call   QWORD PTR [rip+0x4372]        # 0x140006198
   140001e26:	cmp    eax,esi
   140001e28:	cmovg  esi,eax
   140001e2b:	mov    al,BYTE PTR [rdi]
   140001e2d:	test   al,al
   140001e2f:	je     0x140001e51
   140001e31:	movzx  ecx,al
   140001e34:	call   QWORD PTR [rip+0x4366]        # 0x1400061a0
   140001e3a:	test   eax,eax
   140001e3c:	je     0x140001e4c
   140001e3e:	inc    rdi
   140001e41:	mov    al,BYTE PTR [rdi]
   140001e43:	test   al,al
   140001e45:	jne    0x140001e31
   140001e47:	jmp    0x140001e4c
   140001e49:	inc    rdi
   140001e4c:	cmp    BYTE PTR [rdi],0x0
   140001e4f:	jne    0x140001e08
   140001e51:	test   esi,esi
   140001e53:	jle    0x14000209a
   140001e59:	xor    eax,eax
   140001e5b:	movsxd rcx,esi
   140001e5e:	mov    QWORD PTR [rsp+0x40],rax
   140001e63:	lea    r14,[rbp-0x40]
   140001e67:	mov    QWORD PTR [rsp+0x48],rcx
   140001e6c:	test   esi,esi
   140001e6e:	jle    0x14000209a
   140001e74:	add    r13,0xfffffffffffffff8
   140001e78:	cmp    BYTE PTR [r12],0x25
   140001e7d:	mov    rdx,r12
   140001e80:	mov    QWORD PTR [rsp+rax*8+0x50],r14
   140001e85:	jne    0x14000217b
   140001e8b:	inc    r12
   140001e8e:	mov    rcx,r12
   140001e91:	jmp    0x140001e9a
   140001e93:	cmp    al,0x25
   140001e95:	je     0x140001ea2
   140001e97:	inc    r12
   140001e9a:	mov    al,BYTE PTR [r12]
   140001e9e:	test   al,al
   140001ea0:	jne    0x140001e93
   140001ea2:	mov    edi,r12d
   140001ea5:	sub    edi,edx
   140001ea7:	cmp    edi,0x2
   140001eaa:	jl     0x14000213b
   140001eb0:	movsxd rsi,edi
   140001eb3:	cmp    rsi,0x20
   140001eb7:	jae    0x14000213b
   140001ebd:	xor    eax,eax
   140001ebf:	cmp    BYTE PTR [rcx],0x2c
   140001ec2:	sete   al
   140001ec5:	mov    DWORD PTR [rsp+0x38],eax
   140001ec9:	test   eax,eax
   140001ecb:	je     0x140001efc
   140001ecd:	mov    al,BYTE PTR [rdx]
   140001ecf:	lea    rcx,[rbp-0x5f]
   140001ed3:	mov    BYTE PTR [rbp-0x60],al
   140001ed6:	add    rdx,0x2
   140001eda:	lea    eax,[rdi-0x2]
   140001edd:	movsxd r8,eax
   140001ee0:	call   0x140005be6
   140001ee5:	lea    eax,[rdi-0x1]
   140001ee8:	movsxd rcx,eax
   140001eeb:	cmp    rcx,0x20
   140001eef:	jae    0x1400022bf
   140001ef5:	mov    BYTE PTR [rbp+rcx*1-0x60],0x0
   140001efa:	jmp    0x140001f0d
   140001efc:	mov    r8,rsi
   140001eff:	lea    rcx,[rbp-0x60]
   140001f03:	call   0x140005be6
   140001f08:	mov    BYTE PTR [rbp+rsi*1-0x60],0x0
   140001f0d:	movsx  ecx,BYTE PTR [r12-0x1]
   140001f13:	cmp    ecx,0x69
   140001f16:	jg     0x140001f48
   140001f18:	je     0x140001f76
   140001f1a:	lea    eax,[rcx-0x45]
   140001f1d:	test   eax,0xfffffffd
   140001f22:	je     0x140001f38
   140001f24:	cmp    ecx,0x58
   140001f27:	je     0x140001f76
   140001f29:	cmp    ecx,0x62
   140001f2c:	jle    0x140001f5c
   140001f2e:	cmp    ecx,0x64
   140001f31:	jle    0x140001f76
   140001f33:	cmp    ecx,0x67
   140001f36:	jg     0x140001f5c
   140001f38:	mov    al,BYTE PTR [r12-0x2]
   140001f3d:	sub    al,0x4c
   140001f3f:	neg    al
   140001f41:	sbb    edi,edi
   140001f43:	add    edi,0x6
   140001f46:	jmp    0x140001f8f
   140001f48:	cmp    ecx,0x6f
   140001f4b:	je     0x140001f76
   140001f4d:	cmp    ecx,0x73
   140001f50:	je     0x140001f60
   140001f52:	cmp    ecx,0x75
   140001f55:	je     0x140001f76
   140001f57:	cmp    ecx,0x78
   140001f5a:	je     0x140001f76
   140001f5c:	xor    edi,edi
   140001f5e:	jmp    0x140001f8f
   140001f60:	cmp    BYTE PTR [r12-0x2],0x46
   140001f66:	je     0x140001f6f
   140001f68:	mov    edi,0x7
   140001f6d:	jmp    0x140001f8f
   140001f6f:	mov    edi,0x8
   140001f74:	jmp    0x140001f8f
   140001f76:	mov    al,BYTE PTR [r12-0x2]
   140001f7b:	cmp    al,0x68
   140001f7d:	je     0x140001f8a
   140001f7f:	sub    al,0x6c
   140001f81:	neg    al
   140001f83:	sbb    edi,edi
   140001f85:	add    edi,0x3
   140001f88:	jmp    0x140001f8f
   140001f8a:	mov    edi,0x1
   140001f8f:	mov    DWORD PTR [rsp+0x30],0x1
   140001f97:	mov    rsi,r14
   140001f9a:	cmp    edi,0x1
   140001f9d:	je     0x140001ff0
   140001f9f:	cmp    edi,0x2
   140001fa2:	je     0x140001fe6
   140001fa4:	cmp    edi,0x3
   140001fa7:	je     0x140001fe6
   140001fa9:	cmp    edi,0x4
   140001fac:	jle    0x1400020ef
   140001fb2:	cmp    edi,0x6
   140001fb5:	jle    0x140001fd4
   140001fb7:	cmp    edi,0x7
   140001fba:	je     0x140001fc5
   140001fbc:	cmp    edi,0x8
   140001fbf:	jne    0x1400020ef
   140001fc5:	add    r13,0x8
   140001fc9:	mov    rax,QWORD PTR [r13+0x0]
   140001fcd:	mov    QWORD PTR [rsp+0x28],rax
   140001fd2:	jmp    0x140001ffd
   140001fd4:	add    r13,0x8
   140001fd8:	movsd  xmm0,QWORD PTR [r13+0x0]
   140001fde:	movsd  QWORD PTR [rsp+0x28],xmm0
   140001fe4:	jmp    0x140001ffd
   140001fe6:	add    r13,0x8
   140001fea:	mov    eax,DWORD PTR [r13+0x0]
   140001fee:	jmp    0x140001ff9
   140001ff0:	add    r13,0x8
   140001ff4:	movzx  eax,WORD PTR [r13+0x0]
   140001ff9:	mov    DWORD PTR [rsp+0x28],eax
   140001ffd:	lea    rax,[rbp-0x60]
   140002001:	mov    r9,r14
   140002004:	mov    r8d,0x200
   14000200a:	mov    QWORD PTR [rsp+0x20],rax
   14000200f:	lea    rdx,[rbp-0x40]
   140002013:	lea    rcx,[rsp+0x30]
   140002018:	call   0x140001ce8
   14000201d:	inc    eax
   14000201f:	cdqe   
   140002021:	add    r14,rax
   140002024:	cmp    DWORD PTR [rsp+0x30],0x0
   140002029:	jne    0x1400021cb
   14000202f:	mov    BYTE PTR [rbp+0x1bf],0x0
   140002036:	or     rax,0xffffffffffffffff
   14000203a:	inc    rax
   14000203d:	cmp    BYTE PTR [r14+rax*1],0x0
   140002042:	jne    0x14000203a
   140002044:	inc    r14
   140002047:	add    r14,rax
   14000204a:	cmp    DWORD PTR [rsp+0x38],0x0
   14000204f:	je     0x140002082
   140002051:	lea    rcx,[rbp-0x40]
   140002055:	mov    rax,rsi
   140002058:	sub    rax,rcx
   14000205b:	cmp    rax,0x1ec
   140002061:	jge    0x140002082
   140002063:	lea    eax,[rdi-0x1]
   140002066:	cmp    eax,0x2
   140002069:	ja     0x140002082
   14000206b:	lea    rdx,[rbp+0x1c0]
   140002072:	mov    rcx,rsi
   140002075:	sub    edx,esi
   140002077:	call   0x1400022d4
   14000207c:	movsxd rcx,eax
   14000207f:	add    r14,rcx
   140002082:	mov    rax,QWORD PTR [rsp+0x40]
   140002087:	inc    rax
   14000208a:	mov    QWORD PTR [rsp+0x40],rax
   14000208f:	cmp    rax,QWORD PTR [rsp+0x48]
   140002094:	jl     0x140001e78
   14000209a:	cmp    BYTE PTR [r15],0x0
   14000209e:	mov    rsi,rbx
   1400020a1:	movsxd r13,DWORD PTR [rsp+0x34]
   1400020a6:	mov    r14d,r13d
   1400020a9:	je     0x14000229f
   1400020af:	mov    edi,0x7ffffffe
   1400020b4:	cmp    r14d,0x1
   1400020b8:	jle    0x14000229f
   1400020be:	mov    al,BYTE PTR [r15]
   1400020c1:	inc    r15
   1400020c4:	cmp    al,0x25
   1400020c6:	jne    0x14000228d
   1400020cc:	movzx  ecx,BYTE PTR [r15]
   1400020d0:	call   QWORD PTR [rip+0x40ca]        # 0x1400061a0
   1400020d6:	test   eax,eax
   1400020d8:	je     0x14000227a
   1400020de:	mov    rcx,r15
   1400020e1:	call   QWORD PTR [rip+0x40b1]        # 0x140006198
   1400020e7:	movsxd r12,eax
   1400020ea:	jmp    0x140002200
   1400020ef:	movsxd r13,DWORD PTR [rsp+0x34]
   1400020f4:	mov    edi,0x7ffffffe
   1400020f9:	mov    rcx,r13
   1400020fc:	lea    rax,[r13-0x1]
   140002100:	cmp    rax,rdi
   140002103:	ja     0x1400021c3
   140002109:	sub    rdi,rcx
   14000210c:	lea    rdx,[rip+0x4585]        # 0x140006698
   140002113:	sub    rdx,rbx
   140002116:	lea    rax,[rdi+rcx*1]
   14000211a:	test   rax,rax
   14000211d:	je     0x1400021b9
   140002123:	mov    al,BYTE PTR [rdx+rbx*1]
   140002126:	test   al,al
   140002128:	je     0x1400021b9
   14000212e:	mov    BYTE PTR [rbx],al
   140002130:	inc    rbx
   140002133:	sub    rcx,0x1
   140002137:	jne    0x140002116
   140002139:	jmp    0x1400021b9
   14000213b:	movsxd r13,DWORD PTR [rsp+0x34]
   140002140:	mov    edi,0x7ffffffe
   140002145:	mov    rcx,r13
   140002148:	lea    rax,[r13-0x1]
   14000214c:	cmp    rax,rdi
   14000214f:	ja     0x1400021c3
   140002151:	sub    rdi,rcx
   140002154:	lea    rdx,[rip+0x4515]        # 0x140006670
   14000215b:	sub    rdx,rbx
   14000215e:	lea    rax,[rdi+rcx*1]
   140002162:	test   rax,rax
   140002165:	je     0x1400021b9
   140002167:	mov    al,BYTE PTR [rdx+rbx*1]
   14000216a:	test   al,al
   14000216c:	je     0x1400021b9
   14000216e:	mov    BYTE PTR [rbx],al
   140002170:	inc    rbx
   140002173:	sub    rcx,0x1
   140002177:	jne    0x14000215e
   140002179:	jmp    0x1400021b9
   14000217b:	movsxd r13,DWORD PTR [rsp+0x34]
   140002180:	mov    edi,0x7ffffffe
   140002185:	mov    rcx,r13
   140002188:	lea    rax,[r13-0x1]
   14000218c:	cmp    rax,rdi
   14000218f:	ja     0x1400021c3
   140002191:	sub    rdi,rcx
   140002194:	lea    rdx,[rip+0x44ad]        # 0x140006648
   14000219b:	sub    rdx,rbx
   14000219e:	lea    rax,[rdi+rcx*1]
   1400021a2:	test   rax,rax
   1400021a5:	je     0x1400021b9
   1400021a7:	mov    al,BYTE PTR [rdx+rbx*1]
   1400021aa:	test   al,al
   1400021ac:	je     0x1400021b9
   1400021ae:	mov    BYTE PTR [rbx],al
   1400021b0:	inc    rbx
   1400021b3:	sub    rcx,0x1
   1400021b7:	jne    0x14000219e
   1400021b9:	test   rcx,rcx
   1400021bc:	jne    0x1400021c8
   1400021be:	dec    rbx
   1400021c1:	jmp    0x1400021c8
   1400021c3:	test   r13d,r13d
   1400021c6:	je     0x1400021cb
   1400021c8:	mov    BYTE PTR [rbx],0x0
   1400021cb:	xor    eax,eax
   1400021cd:	mov    rcx,QWORD PTR [rbp+0x1c0]
   1400021d4:	xor    rcx,rsp
   1400021d7:	call   0x140005520
   1400021dc:	add    rsp,0x2d8
   1400021e3:	pop    r15
   1400021e5:	pop    r14
   1400021e7:	pop    r13
   1400021e9:	pop    r12
   1400021eb:	pop    rdi
   1400021ec:	pop    rsi
   1400021ed:	pop    rbx
   1400021ee:	pop    rbp
   1400021ef:	ret    
   1400021f0:	movzx  ecx,cl
   1400021f3:	call   QWORD PTR [rip+0x3fa7]        # 0x1400061a0
   1400021f9:	test   eax,eax
   1400021fb:	je     0x140002207
   1400021fd:	inc    r15
   140002200:	mov    cl,BYTE PTR [r15]
   140002203:	test   cl,cl
   140002205:	jne    0x1400021f0
   140002207:	mov    r10,QWORD PTR [rsp+r12*8+0x48]
   14000220c:	movsxd rdx,r14d
   14000220f:	lea    rax,[rdx-0x1]
   140002213:	cmp    rax,rdi
   140002216:	ja     0x140002250
   140002218:	mov    r8,rdi
   14000221b:	mov    r9,r10
   14000221e:	sub    r8,rdx
   140002221:	mov    rcx,rsi
   140002224:	sub    r9,rsi
   140002227:	lea    rax,[r8+rdx*1]
   14000222b:	test   rax,rax
   14000222e:	je     0x140002243
   140002230:	mov    al,BYTE PTR [r9+rcx*1]
   140002234:	test   al,al
   140002236:	je     0x140002243
   140002238:	mov    BYTE PTR [rcx],al
   14000223a:	inc    rcx
   14000223d:	sub    rdx,0x1
   140002241:	jne    0x140002227
   140002243:	test   rdx,rdx
   140002246:	jne    0x14000224b
   140002248:	dec    rcx
   14000224b:	mov    BYTE PTR [rcx],0x0
   14000224e:	jmp    0x140002258
   140002250:	test   r14d,r14d
   140002253:	je     0x140002258
   140002255:	mov    BYTE PTR [rsi],0x0
   140002258:	or     rcx,0xffffffffffffffff
   14000225c:	inc    rcx
   14000225f:	cmp    BYTE PTR [r10+rcx*1],0x0
   140002264:	jne    0x14000225c
   140002266:	cmp    ecx,r14d
   140002269:	jl     0x14000226f
   14000226b:	lea    ecx,[r14-0x1]
   14000226f:	movsxd rax,ecx
   140002272:	add    rsi,rax
   140002275:	sub    r14d,ecx
   140002278:	jmp    0x140002295
   14000227a:	mov    BYTE PTR [rsi],0x25
   14000227d:	dec    r14d
   140002280:	mov    al,BYTE PTR [r15]
   140002283:	inc    rsi
   140002286:	inc    r15
   140002289:	cmp    al,0x25
   14000228b:	je     0x140002295
   14000228d:	mov    BYTE PTR [rsi],al
   14000228f:	inc    rsi
   140002292:	dec    r14d
   140002295:	cmp    BYTE PTR [r15],0x0
   140002299:	jne    0x1400020b4
   14000229f:	mov    rax,rsi
   1400022a2:	sub    rax,rbx
   1400022a5:	cmp    rax,r13
   1400022a8:	jge    0x1400021cd
   1400022ae:	test   r14d,r14d
   1400022b1:	jle    0x1400021cd
   1400022b7:	mov    BYTE PTR [rsi],0x0
   1400022ba:	jmp    0x1400021cd
   1400022bf:	call   0x1400056f8
   1400022c4:	int3   
   1400022c5:	call   0x1400056f8
   1400022ca:	int3   
   1400022cb:	int3   
   1400022cc:	int3   
   1400022cd:	int3   
   1400022ce:	int3   
   1400022cf:	int3   
   1400022d0:	int3   
   1400022d1:	int3   
   1400022d2:	int3   
   1400022d3:	int3   
   1400022d4:	mov    QWORD PTR [rsp+0x10],rbx
   1400022d9:	mov    QWORD PTR [rsp+0x18],rbp
   1400022de:	mov    QWORD PTR [rsp+0x20],rsi
   1400022e3:	push   rdi
   1400022e4:	push   r12
   1400022e6:	push   r13
   1400022e8:	push   r14
   1400022ea:	push   r15
   1400022ec:	sub    rsp,0x40
   1400022f0:	mov    rax,QWORD PTR [rip+0x6d11]        # 0x140009008
   1400022f7:	xor    rax,rsp
   1400022fa:	mov    QWORD PTR [rsp+0x38],rax
   1400022ff:	mov    r13d,edx
   140002302:	lea    r14,[rip+0x43bb]        # 0x1400066c4
   140002309:	mov    rdx,r14
   14000230c:	mov    rbx,rcx
   14000230f:	call   QWORD PTR [rip+0x3e93]        # 0x1400061a8
   140002315:	movsxd rsi,eax
   140002318:	mov    rdx,r14
   14000231b:	mov    r15,rax
   14000231e:	lea    rdi,[rsi+rbx*1]
   140002322:	mov    rcx,rdi
   140002325:	call   QWORD PTR [rip+0x3e85]        # 0x1400061b0
   14000232b:	mov    rbp,rax
   14000232e:	test   rax,rax
   140002331:	je     0x140002349
   140002333:	mov    rdx,r14
   140002336:	mov    rcx,rax
   140002339:	call   QWORD PTR [rip+0x3e69]        # 0x1400061a8
   14000233f:	sub    ebp,ebx
   140002341:	mov    r12,rax
   140002344:	sub    ebp,r15d
   140002347:	jmp    0x140002359
   140002349:	xor    r12d,r12d
   14000234c:	or     rbp,0xffffffffffffffff
   140002350:	inc    rbp
   140002353:	cmp    BYTE PTR [rdi+rbp*1],r12b
   140002357:	jne    0x140002350
   140002359:	mov    eax,0x3
   14000235e:	cmp    ebp,eax
   140002360:	jle    0x140002443
   140002366:	lea    ecx,[rbp-0x1]
   140002369:	mov    eax,0x55555556
   14000236e:	imul   ecx
   140002370:	mov    r14d,edx
   140002373:	shr    r14d,0x1f
   140002377:	add    r14d,edx
   14000237a:	lea    eax,[r14+rbp*1]
   14000237e:	cmp    eax,r13d
   140002381:	jg     0x140002443
   140002387:	lea    eax,[r15+rbp*1]
   14000238b:	movsxd rcx,eax
   14000238e:	cmp    rcx,0x14
   140002392:	jae    0x140002443
   140002398:	movsxd r8,ebp
   14000239b:	lea    rcx,[rsp+0x20]
   1400023a0:	mov    rdx,rdi
   1400023a3:	call   0x140005be6
   1400023a8:	test   r15d,r15d
   1400023ab:	jle    0x1400023bd
   1400023ad:	cmp    r15d,r14d
   1400023b0:	jl     0x1400023bd
   1400023b2:	movsxd rax,r14d
   1400023b5:	sub    rsi,rax
   1400023b8:	add    rsi,rbx
   1400023bb:	jmp    0x1400023c0
   1400023bd:	mov    rsi,rbx
   1400023c0:	mov    eax,0x55555556
   1400023c5:	mov    edi,ebp
   1400023c7:	imul   ebp
   1400023c9:	mov    r13d,0x3
   1400023cf:	mov    rcx,rsi
   1400023d2:	mov    eax,edx
   1400023d4:	shr    eax,0x1f
   1400023d7:	add    edx,eax
   1400023d9:	lea    eax,[rdx+rdx*2]
   1400023dc:	sub    edi,eax
   1400023de:	lea    rdx,[rsp+0x20]
   1400023e3:	cmove  edi,r13d
   1400023e7:	movsxd rbx,edi
   1400023ea:	mov    r8,rbx
   1400023ed:	call   0x140005be6
   1400023f2:	lea    r8,[rsp+0x20]
   1400023f7:	add    rsi,rbx
   1400023fa:	add    r8,rbx
   1400023fd:	sub    ebp,edi
   1400023ff:	test   ebp,ebp
   140002401:	jle    0x140002432
   140002403:	lea    ecx,[rbp-0x1]
   140002406:	mov    eax,0xaaaaaaab
   14000240b:	mul    ecx
   14000240d:	shr    edx,1
   14000240f:	lea    ecx,[rdx+0x1]
   140002412:	mov    BYTE PTR [rsi],0x2c
   140002415:	inc    rsi
   140002418:	movzx  eax,WORD PTR [r8]
   14000241c:	mov    WORD PTR [rsi],ax
   14000241f:	mov    al,BYTE PTR [r8+0x2]
   140002423:	add    r8,r13
   140002426:	mov    BYTE PTR [rsi+0x2],al
   140002429:	add    rsi,r13
   14000242c:	sub    rcx,0x1
   140002430:	jne    0x140002412
   140002432:	lea    ecx,[r12+r15*1]
   140002436:	cmp    ecx,r14d
   140002439:	jg     0x14000243e
   14000243b:	mov    BYTE PTR [rsi],0x0
   14000243e:	mov    eax,r14d
   140002441:	jmp    0x140002445
   140002443:	xor    eax,eax
   140002445:	mov    rcx,QWORD PTR [rsp+0x38]
   14000244a:	xor    rcx,rsp
   14000244d:	call   0x140005520
   140002452:	lea    r11,[rsp+0x40]
   140002457:	mov    rbx,QWORD PTR [r11+0x38]
   14000245b:	mov    rbp,QWORD PTR [r11+0x40]
   14000245f:	mov    rsi,QWORD PTR [r11+0x48]
   140002463:	mov    rsp,r11
   140002466:	pop    r15
   140002468:	pop    r14
   14000246a:	pop    r13
   14000246c:	pop    r12
   14000246e:	pop    rdi
   14000246f:	ret    
   140002470:	int3   
   140002471:	int3   
   140002472:	int3   
   140002473:	int3   
   140002474:	int3   
   140002475:	int3   
   140002476:	int3   
   140002477:	int3   
   140002478:	mov    QWORD PTR [rsp+0x8],rbx
   14000247d:	mov    QWORD PTR [rsp+0x18],rsi
   140002482:	push   rbp
   140002483:	push   rdi
   140002484:	push   r12
   140002486:	push   r14
   140002488:	push   r15
   14000248a:	lea    rbp,[rsp-0x170]
   140002492:	sub    rsp,0x270
   140002499:	mov    rax,QWORD PTR [rip+0x6b68]        # 0x140009008
   1400024a0:	xor    rax,rsp
   1400024a3:	mov    QWORD PTR [rbp+0x160],rax
   1400024aa:	mov    r14,rdx
   1400024ad:	mov    esi,ecx
   1400024af:	call   QWORD PTR [rip+0x3be3]        # 0x140006098
   1400024b5:	xor    r15d,r15d
   1400024b8:	lea    r12d,[r15+0x1]
   1400024bc:	test   eax,eax
   1400024be:	js     0x140002504
   1400024c0:	cmp    al,0x6
   1400024c2:	jb     0x140002504
   1400024c4:	lea    rcx,[rip+0x41fd]        # 0x1400066c8
   1400024cb:	call   QWORD PTR [rip+0x3baf]        # 0x140006080
   1400024d1:	test   rax,rax
   1400024d4:	je     0x140002504
   1400024d6:	lea    rdx,[rip+0x420b]        # 0x1400066e8
   1400024dd:	mov    rcx,rax
   1400024e0:	call   QWORD PTR [rip+0x3c32]        # 0x140006118
   1400024e6:	mov    rbx,rax
   1400024e9:	test   rax,rax
   1400024ec:	je     0x140002504
   1400024ee:	mov    rcx,rax
   1400024f1:	call   QWORD PTR [rip+0x3e29]        # 0x140006320
   1400024f7:	xor    r9d,r9d
   1400024fa:	xor    r8d,r8d
   1400024fd:	mov    edx,r12d
   140002500:	xor    ecx,ecx
   140002502:	call   rbx
   140002504:	mov    ecx,0x1090
   140002509:	mov    DWORD PTR [rbp+0x130],r15d
   140002510:	mov    BYTE PTR [rsp+0x30],r15b
   140002515:	mov    DWORD PTR [rbp+0x150],r15d
   14000251c:	mov    QWORD PTR [rbp+0x158],r15
   140002523:	mov    QWORD PTR [rbp+0x138],r15
   14000252a:	mov    BYTE PTR [rip+0x712f],r15b        # 0x140009660
   140002531:	call   QWORD PTR [rip+0x3d79]        # 0x1400062b0
   140002537:	mov    rdi,rax
   14000253a:	test   rax,rax
   14000253d:	jne    0x14000255a
   14000253f:	lea    rdx,[rip+0x41ba]        # 0x140006700
   140002546:	lea    rcx,[rsp+0x30]
   14000254b:	call   0x140001008
   140002550:	mov    ecx,r12d
   140002553:	call   QWORD PTR [rip+0x3caf]        # 0x140006208
   140002559:	int3   
   14000255a:	mov    QWORD PTR [rax+0x10],r15
   14000255e:	lea    rcx,[rip+0x41bb]        # 0x140006720
   140002565:	mov    QWORD PTR [rax+0x86c],r15
   14000256c:	mov    DWORD PTR [rax+0x868],r15d
   140002573:	mov    QWORD PTR [rax+0x18],r15
   140002577:	mov    QWORD PTR [rax+0x8],r15
   14000257b:	mov    QWORD PTR [rax+0x38],r15
   14000257f:	mov    QWORD PTR [rax+0x4c],r15
   140002583:	mov    DWORD PTR [rax+0x60],r15d
   140002587:	mov    BYTE PTR [rax+0xe7c],r15b
   14000258e:	mov    DWORD PTR [rax+0x107c],r15d
   140002595:	mov    DWORD PTR [rax+0x1088],r15d
   14000259c:	mov    QWORD PTR [rip+0x70a5],rax        # 0x140009648
   1400025a3:	call   QWORD PTR [rip+0x3d3f]        # 0x1400062e8
   1400025a9:	lea    r9,[rsp+0x30]
   1400025ae:	mov    r8,r14
   1400025b1:	mov    edx,esi
   1400025b3:	mov    rcx,rdi
   1400025b6:	call   0x140003f30
   1400025bb:	test   eax,eax
   1400025bd:	jne    0x1400025d4
   1400025bf:	lea    rdx,[rsp+0x30]
   1400025c4:	mov    rcx,rdi
   1400025c7:	call   0x14000475c
   1400025cc:	mov    eax,r12d
   1400025cf:	jmp    0x1400026bd
   1400025d4:	cmp    DWORD PTR [rdi],r12d
   1400025d7:	jne    0x1400025f8
   1400025d9:	lea    rcx,[rip+0x41c0]        # 0x1400067a0
   1400025e0:	call   QWORD PTR [rip+0x3d02]        # 0x1400062e8
   1400025e6:	lea    rcx,[rip+0x41c3]        # 0x1400067b0
   1400025ed:	call   QWORD PTR [rip+0x3cf5]        # 0x1400062e8
   1400025f3:	jmp    0x1400026bb
   1400025f8:	cmp    DWORD PTR [rdi],0x5
   1400025fb:	lea    rdx,[rsp+0x30]
   140002600:	mov    rcx,rdi
   140002603:	jne    0x140002614
   140002605:	call   0x1400026f0
   14000260a:	test   eax,eax
   14000260c:	jne    0x1400026bb
   140002612:	jmp    0x1400025bf
   140002614:	call   0x14000282c
   140002619:	test   eax,eax
   14000261b:	jne    0x14000263e
   14000261d:	lea    rdx,[rsp+0x30]
   140002622:	mov    rcx,rdi
   140002625:	call   0x14000475c
   14000262a:	mov    rcx,QWORD PTR [rip+0x712f]        # 0x140009760
   140002631:	cmp    rcx,0xffffffffffffffff
   140002635:	je     0x1400025cc
   140002637:	call   0x140004980
   14000263c:	jmp    0x1400025cc
   14000263e:	mov    ecx,DWORD PTR [rdi+0x4c]
   140002641:	test   ecx,ecx
   140002643:	jne    0x140002662
   140002645:	lea    rbx,[rdi+0x168]
   14000264c:	mov    edx,0x200
   140002651:	mov    rcx,rbx
   140002654:	lea    r8,[rip+0x4525]        # 0x140006b80
   14000265b:	call   0x140001cb8
   140002660:	jmp    0x1400026a2
   140002662:	cmp    DWORD PTR [rdi],0x3
   140002665:	jne    0x1400026b2
   140002667:	cmp    ecx,r12d
   14000266a:	lea    rax,[rip+0x4537]        # 0x140006ba8
   140002671:	lea    r8,[rip+0x4548]        # 0x140006bc0
   140002678:	mov    edx,0x200
   14000267d:	cmove  r8,rax
   140002681:	lea    rbx,[rdi+0x168]
   140002688:	mov    eax,DWORD PTR [rdi+0x50]
   14000268b:	lea    r9,[rip+0x4506]        # 0x140006b98
   140002692:	mov    DWORD PTR [rsp+0x28],eax
   140002696:	mov    DWORD PTR [rsp+0x20],ecx
   14000269a:	mov    rcx,rbx
   14000269d:	call   0x140001cb8
   1400026a2:	mov    rdx,rbx
   1400026a5:	lea    rcx,[rip+0x44e8]        # 0x140006b94
   1400026ac:	call   QWORD PTR [rip+0x3c36]        # 0x1400062e8
   1400026b2:	mov    rcx,rdi
   1400026b5:	call   QWORD PTR [rip+0x3bfd]        # 0x1400062b8
   1400026bb:	xor    eax,eax
   1400026bd:	mov    rcx,QWORD PTR [rbp+0x160]
   1400026c4:	xor    rcx,rsp
   1400026c7:	call   0x140005520
   1400026cc:	lea    r11,[rsp+0x270]
   1400026d4:	mov    rbx,QWORD PTR [r11+0x30]
   1400026d8:	mov    rsi,QWORD PTR [r11+0x40]
   1400026dc:	mov    rsp,r11
   1400026df:	pop    r15
   1400026e1:	pop    r14
   1400026e3:	pop    r12
   1400026e5:	pop    rdi
   1400026e6:	pop    rbp
   1400026e7:	ret    
   1400026e8:	int3   
   1400026e9:	int3   
   1400026ea:	int3   
   1400026eb:	int3   
   1400026ec:	int3   
   1400026ed:	int3   
   1400026ee:	int3   
   1400026ef:	int3   
   1400026f0:	mov    QWORD PTR [rsp+0x18],rbx
   1400026f5:	push   rbp
   1400026f6:	push   rsi
   1400026f7:	push   rdi
   1400026f8:	sub    rsp,0x1c0
   1400026ff:	mov    rax,QWORD PTR [rip+0x6902]        # 0x140009008
   140002706:	xor    rax,rsp
   140002709:	mov    QWORD PTR [rsp+0x1b0],rax
   140002711:	mov    rax,QWORD PTR [rcx+0x8]
   140002715:	mov    rsi,rdx
   140002718:	mov    rbx,rcx
   14000271b:	lea    rdx,[rsp+0x48]
   140002720:	mov    rax,QWORD PTR [rax]
   140002723:	mov    rbp,QWORD PTR [rax]
   140002726:	mov    rax,QWORD PTR [rax+0x20]
   14000272a:	mov    rdi,QWORD PTR [rax]
   14000272d:	mov    rcx,rdi
   140002730:	call   QWORD PTR [rip+0x3b52]        # 0x140006288
   140002736:	cmp    eax,0xffffffff
   140002739:	je     0x140002782
   14000273b:	mov    eax,0x4000
   140002740:	test   WORD PTR [rsp+0x4e],ax
   140002745:	je     0x140002782
   140002747:	mov    rdx,rsi
   14000274a:	mov    rcx,rbp
   14000274d:	call   0x140001718
   140002752:	test   rax,rax
   140002755:	jne    0x14000275e
   140002757:	xor    eax,eax
   140002759:	jmp    0x140002802
   14000275e:	mov    r9,rax
   140002761:	mov    QWORD PTR [rsp+0x28],rsi
   140002766:	mov    r8,rdi
   140002769:	lea    rcx,[rsp+0xb0]
   140002771:	call   0x1400011d4
   140002776:	test   eax,eax
   140002778:	je     0x140002757
   14000277a:	lea    rdi,[rsp+0xb0]
   140002782:	lea    rdx,[rsp+0x78]
   140002787:	mov    rcx,rdi
   14000278a:	call   QWORD PTR [rip+0x3af8]        # 0x140006288
   140002790:	cmp    eax,0xffffffff
   140002793:	je     0x1400027b5
   140002795:	lea    r9,[rsp+0x78]
   14000279a:	mov    rdx,rdi
   14000279d:	lea    r8,[rsp+0x40]
   1400027a2:	mov    rcx,rbx
   1400027a5:	call   0x140003520
   1400027aa:	test   eax,eax
   1400027ac:	jne    0x1400027b5
   1400027ae:	mov    eax,0x1
   1400027b3:	jmp    0x140002802
   1400027b5:	mov    QWORD PTR [rsp+0x28],rdi
   1400027ba:	lea    r9,[rip+0x3c6b]        # 0x14000642c
   1400027c1:	lea    r8,[rip+0x4410]        # 0x140006bd8
   1400027c8:	mov    QWORD PTR [rsp+0x20],rbp
   1400027cd:	mov    edx,0x200
   1400027d2:	lea    rcx,[rbx+0x168]
   1400027d9:	call   0x140001cb8
   1400027de:	lea    rdx,[rbx+0x168]
   1400027e5:	lea    rcx,[rip+0x43a8]        # 0x140006b94
   1400027ec:	call   QWORD PTR [rip+0x3af6]        # 0x1400062e8
   1400027f2:	mov    rdx,rbp
   1400027f5:	mov    QWORD PTR [rsp+0x38],rsi
   1400027fa:	mov    rcx,rdi
   1400027fd:	call   0x140001994
   140002802:	mov    rcx,QWORD PTR [rsp+0x1b0]
   14000280a:	xor    rcx,rsp
   14000280d:	call   0x140005520
   140002812:	mov    rbx,QWORD PTR [rsp+0x1f0]
   14000281a:	add    rsp,0x1c0
   140002821:	pop    rdi
   140002822:	pop    rsi
   140002823:	pop    rbp
   140002824:	ret    
   140002825:	int3   
   140002826:	int3   
   140002827:	int3   
   140002828:	int3   
   140002829:	int3   
   14000282a:	int3   
   14000282b:	int3   
   14000282c:	mov    QWORD PTR [rsp+0x18],rbx
   140002831:	push   rbp
   140002832:	push   rsi
   140002833:	push   rdi
   140002834:	push   r12
   140002836:	push   r13
   140002838:	push   r14
   14000283a:	push   r15
   14000283c:	lea    rbp,[rsp-0x90]
   140002844:	sub    rsp,0x190
   14000284b:	mov    rax,QWORD PTR [rip+0x67b6]        # 0x140009008
   140002852:	xor    rax,rsp
   140002855:	mov    QWORD PTR [rbp+0x80],rax
   14000285c:	mov    rax,QWORD PTR [rcx+0x8]
   140002860:	mov    rsi,rcx
   140002863:	xor    edi,edi
   140002865:	mov    r15,rdx
   140002868:	mov    rcx,QWORD PTR [rax]
   14000286b:	mov    r13,QWORD PTR [rcx+0x20]
   14000286f:	mov    r14,QWORD PTR [rcx]
   140002872:	mov    QWORD PTR [rsp+0x50],r14
   140002877:	test   r13,r13
   14000287a:	je     0x140002882
   14000287c:	mov    r12,QWORD PTR [r13+0x0]
   140002880:	jmp    0x140002885
   140002882:	mov    r12,rdi
   140002885:	or     QWORD PTR [rip+0x6ed3],0xffffffffffffffff        # 0x140009760
   14000288d:	mov    ecx,0x800
   140002892:	call   QWORD PTR [rip+0x3a18]        # 0x1400062b0
   140002898:	mov    rbx,rax
   14000289b:	test   rax,rax
   14000289e:	jne    0x1400028d1
   1400028a0:	mov    r9,QWORD PTR [rsp+0x50]
   1400028a5:	lea    r14d,[rax+0x1]
   1400028a9:	mov    rax,QWORD PTR [rip+0x6d98]        # 0x140009648
   1400028b0:	lea    r8,[rip+0x3b29]        # 0x1400063e0
   1400028b7:	lea    rdx,[rip+0x4332]        # 0x140006bf0
   1400028be:	mov    rcx,r15
   1400028c1:	mov    DWORD PTR [rax+0x60],r14d
   1400028c5:	call   0x140001008
   1400028ca:	xor    eax,eax
   1400028cc:	jmp    0x140002d75
   1400028d1:	lea    rax,[rsi+0x40]
   1400028d5:	mov    QWORD PTR [rsp+0x40],rax
   1400028da:	lea    r9,[rip+0x255f]        # 0x140004e40
   1400028e1:	or     DWORD PTR [rsp+0x38],0xffffffff
   1400028e6:	lea    rax,[rip+0x2183]        # 0x140004a70
   1400028ed:	mov    QWORD PTR [rsp+0x30],rax
   1400028f2:	lea    r8,[rip+0x2227]        # 0x140004b20
   1400028f9:	lea    rax,[rip+0x2080]        # 0x140004980
   140002900:	mov    QWORD PTR [rsp+0x28],rax
   140002905:	lea    rdx,[rip+0x1614]        # 0x140003f20
   14000290c:	lea    rax,[rip+0x25ad]        # 0x140004ec0
   140002913:	lea    rcx,[rip+0x15c6]        # 0x140003ee0
   14000291a:	mov    QWORD PTR [rsp+0x20],rax
   14000291f:	call   QWORD PTR [rip+0x36fb]        # 0x140006020
   140002925:	mov    QWORD PTR [rsi+0x38],rax
   140002929:	test   rax,rax
   14000292c:	jne    0x14000294e
   14000292e:	lea    r9,[rsi+0x40]
   140002932:	mov    r8,r14
   140002935:	mov    rdx,rsi
   140002938:	mov    rcx,r15
   14000293b:	call   0x1400047cc
   140002940:	mov    rcx,rbx
   140002943:	call   QWORD PTR [rip+0x396f]        # 0x1400062b8
   140002949:	jmp    0x1400028ca
   14000294e:	mov    rcx,rbx
   140002951:	call   QWORD PTR [rip+0x3961]        # 0x1400062b8
   140002957:	xor    r8d,r8d
   14000295a:	mov    edx,0x8000
   14000295f:	mov    rcx,r14
   140002962:	call   0x140004b20
   140002967:	mov    rbx,rax
   14000296a:	cmp    rax,0xffffffffffffffff
   14000296e:	jne    0x14000298e
   140002970:	mov    r9,r14
   140002973:	lea    rdx,[rip+0x3abe]        # 0x140006438
   14000297a:	lea    r8,[rip+0x3a5f]        # 0x1400063e0
   140002981:	mov    rcx,r15
   140002984:	call   0x140001008
   140002989:	jmp    0x140002d3e
   14000298e:	mov    rcx,QWORD PTR [rsi+0x38]
   140002992:	lea    r8,[rsp+0x60]
   140002997:	mov    rdx,rax
   14000299a:	call   QWORD PTR [rip+0x3670]        # 0x140006010
   1400029a0:	test   eax,eax
   1400029a2:	jne    0x1400029d3
   1400029a4:	cmp    DWORD PTR [r15+0x200],edi
   1400029ab:	jne    0x1400029c6
   1400029ad:	mov    r9,r14
   1400029b0:	lea    r8,[rip+0x3a29]        # 0x1400063e0
   1400029b7:	lea    rdx,[rip+0x4262]        # 0x140006c20
   1400029be:	mov    rcx,r15
   1400029c1:	call   0x140001008
   1400029c6:	mov    rcx,rbx
   1400029c9:	call   0x140004980
   1400029ce:	jmp    0x140002d3e
   1400029d3:	mov    rcx,rbx
   1400029d6:	call   0x140004980
   1400029db:	lea    rcx,[rsi+0x668]
   1400029e2:	mov    r14d,0x1
   1400029e8:	mov    BYTE PTR [rcx],dil
   1400029eb:	cmp    DWORD PTR [rsi],0x2
   1400029ee:	jne    0x140002aa3
   1400029f4:	cmp    WORD PTR [rsp+0x66],r14w
   1400029fa:	jne    0x140002a0b
   1400029fc:	cmp    DWORD PTR [rsp+0x70],edi
   140002a00:	jne    0x140002a0b
   140002a02:	mov    eax,r14d
   140002a05:	cmp    DWORD PTR [rsp+0x74],edi
   140002a09:	je     0x140002a0d
   140002a0b:	mov    eax,edi
   140002a0d:	test   r12,r12
   140002a10:	je     0x140002a91
   140002a12:	mov    DWORD PTR [rsi],0x4
   140002a18:	test   eax,eax
   140002a1a:	je     0x140002aa3
   140002a20:	mov    r8,r12
   140002a23:	mov    edx,0x100
   140002a28:	sub    r8,rcx
   140002a2b:	lea    rax,[rdx+0x7ffffefe]
   140002a32:	test   rax,rax
   140002a35:	je     0x140002a49
   140002a37:	mov    al,BYTE PTR [r8+rcx*1]
   140002a3b:	test   al,al
   140002a3d:	je     0x140002a49
   140002a3f:	mov    BYTE PTR [rcx],al
   140002a41:	add    rcx,r14
   140002a44:	sub    rdx,r14
   140002a47:	jne    0x140002a2b
   140002a49:	test   rdx,rdx
   140002a4c:	jne    0x140002a51
   140002a4e:	sub    rcx,r14
   140002a51:	mov    BYTE PTR [rcx],dil
   140002a54:	lea    rcx,[rip+0x3b25]        # 0x140006580
   140002a5b:	mov    rbx,QWORD PTR [r13+0x0]
   140002a5f:	call   QWORD PTR [rip+0x3843]        # 0x1400062a8
   140002a65:	mov    QWORD PTR [r13+0x0],rax
   140002a69:	test   rax,rax
   140002a6c:	jne    0x140002a81
   140002a6e:	lea    r9,[rip+0x39a3]        # 0x140006418
   140002a75:	lea    rdx,[rip+0x396c]        # 0x1400063e8
   140002a7c:	jmp    0x14000297a
   140002a81:	test   rbx,rbx
   140002a84:	je     0x140002aa3
   140002a86:	mov    rcx,rbx
   140002a89:	call   QWORD PTR [rip+0x3829]        # 0x1400062b8
   140002a8f:	jmp    0x140002aa3
   140002a91:	test   eax,eax
   140002a93:	je     0x140002a9d
   140002a95:	mov    DWORD PTR [rsi],0x4
   140002a9b:	jmp    0x140002aa8
   140002a9d:	mov    DWORD PTR [rsi],0x3
   140002aa3:	test   r12,r12
   140002aa6:	jne    0x140002ad2
   140002aa8:	mov    r8,r15
   140002aab:	lea    rdx,[rip+0x3ace]        # 0x140006580
   140002ab2:	mov    rcx,rsi
   140002ab5:	call   0x1400046d4
   140002aba:	test   rax,rax
   140002abd:	jne    0x140002ad2
   140002abf:	lea    r9,[rip+0x3aba]        # 0x140006580
   140002ac6:	lea    rdx,[rip+0x4173]        # 0x140006c40
   140002acd:	jmp    0x14000297a
   140002ad2:	cmp    DWORD PTR [rsi],0x4
   140002ad5:	lea    rax,[rip+0x3d4]        # 0x140002eb0
   140002adc:	lea    rcx,[rip+0x6ad]        # 0x140003190
   140002ae3:	cmove  rax,rcx
   140002ae7:	mov    QWORD PTR [rsp+0x58],rax
   140002aec:	cmp    DWORD PTR [rsp+0x6c],edi
   140002af0:	je     0x140002b09
   140002af2:	cmp    DWORD PTR [rsi],0x4
   140002af5:	lea    r13,[rip+0x11d4]        # 0x140003cd0
   140002afc:	lea    rax,[rip+0x130d]        # 0x140003e10
   140002b03:	cmove  r13,rax
   140002b07:	jmp    0x140002b0c
   140002b09:	mov    r13,rdi
   140002b0c:	mov    r12,QWORD PTR [rsp+0x50]
   140002b11:	mov    rdx,r15
   140002b14:	mov    rcx,r12
   140002b17:	call   0x140001718
   140002b1c:	mov    r9,rax
   140002b1f:	test   rax,rax
   140002b22:	je     0x140002d3e
   140002b28:	lea    rax,[rbp-0x80]
   140002b2c:	mov    r8,r9
   140002b2f:	sub    r8,rax
   140002b32:	lea    rcx,[rbp-0x80]
   140002b36:	mov    edx,0x100
   140002b3b:	lea    rax,[rdx+0x7ffffefe]
   140002b42:	test   rax,rax
   140002b45:	je     0x140002b59
   140002b47:	mov    al,BYTE PTR [rcx+r8*1]
   140002b4b:	test   al,al
   140002b4d:	je     0x140002b59
   140002b4f:	mov    BYTE PTR [rcx],al
   140002b51:	add    rcx,r14
   140002b54:	sub    rdx,r14
   140002b57:	jne    0x140002b3b
   140002b59:	test   rdx,rdx
   140002b5c:	jne    0x140002b61
   140002b5e:	sub    rcx,r14
   140002b61:	lea    rax,[rsi+0x768]
   140002b68:	mov    BYTE PTR [rcx],dil
   140002b6b:	mov    r8,r12
   140002b6e:	mov    rcx,rax
   140002b71:	sub    r8,rax
   140002b74:	mov    edx,0x100
   140002b79:	lea    rax,[rdx+0x7ffffefe]
   140002b80:	test   rax,rax
   140002b83:	je     0x140002b97
   140002b85:	mov    al,BYTE PTR [rcx+r8*1]
   140002b89:	test   al,al
   140002b8b:	je     0x140002b97
   140002b8d:	mov    BYTE PTR [rcx],al
   140002b8f:	add    rcx,r14
   140002b92:	sub    rdx,r14
   140002b95:	jne    0x140002b79
   140002b97:	test   rdx,rdx
   140002b9a:	jne    0x140002b9f
   140002b9c:	sub    rcx,r14
   140002b9f:	mov    BYTE PTR [rcx],dil
   140002ba2:	mov    rax,rsi
   140002ba5:	sub    rax,r12
   140002ba8:	mov    BYTE PTR [rax+r9*1+0x768],dil
   140002bb0:	cmp    DWORD PTR [rsi+0x1088],edi
   140002bb6:	je     0x140002be1
   140002bb8:	cmp    DWORD PTR [rsi],0x4
   140002bbb:	jne    0x140002bdb
   140002bbd:	cmp    DWORD PTR [rsp+0x70],edi
   140002bc1:	jne    0x140002bdb
   140002bc3:	cmp    DWORD PTR [rsp+0x74],edi
   140002bc7:	jne    0x140002bdb
   140002bc9:	movzx  eax,WORD PTR [rsp+0x64]
   140002bce:	sub    ax,r14w
   140002bd2:	mov    WORD PTR [rsi+0x108c],ax
   140002bd9:	jmp    0x140002be1
   140002bdb:	mov    DWORD PTR [rsi+0x1088],edi
   140002be1:	mov    QWORD PTR [rsi+0x58],r15
   140002be5:	lea    rcx,[rbp-0x80]
   140002be9:	or     rax,0xffffffffffffffff
   140002bed:	inc    rax
   140002bf0:	cmp    BYTE PTR [rcx+rax*1],dil
   140002bf4:	jne    0x140002bed
   140002bf6:	jmp    0x140002d35
   140002bfb:	cmp    DWORD PTR [r15+0x200],edi
   140002c02:	jne    0x140002d3e
   140002c08:	lea    rax,[rbp-0x80]
   140002c0c:	mov    edx,0x200
   140002c11:	lea    rbx,[rsi+0x168]
   140002c18:	mov    QWORD PTR [rsp+0x20],rax
   140002c1d:	mov    rcx,rbx
   140002c20:	lea    r9,[rip+0x37b9]        # 0x1400063e0
   140002c27:	lea    r8,[rip+0x4032]        # 0x140006c60
   140002c2e:	call   0x140001cb8
   140002c33:	mov    rdx,rbx
   140002c36:	lea    rcx,[rip+0x402f]        # 0x140006c6c
   140002c3d:	call   QWORD PTR [rip+0x36a5]        # 0x1400062e8
   140002c43:	lea    rbx,[rsi+0xf7c]
   140002c4a:	mov    edx,0x100
   140002c4f:	lea    r8,[rbp-0x80]
   140002c53:	mov    rcx,rbx
   140002c56:	sub    r8,rbx
   140002c59:	lea    rax,[rdx+0x7ffffefe]
   140002c60:	test   rax,rax
   140002c63:	je     0x140002c77
   140002c65:	mov    al,BYTE PTR [rcx+r8*1]
   140002c69:	test   al,al
   140002c6b:	je     0x140002c77
   140002c6d:	mov    BYTE PTR [rcx],al
   140002c6f:	add    rcx,r14
   140002c72:	sub    rdx,r14
   140002c75:	jne    0x140002c59
   140002c77:	test   rdx,rdx
   140002c7a:	jne    0x140002c7f
   140002c7c:	sub    rcx,r14
   140002c7f:	mov    rax,QWORD PTR [rsp+0x58]
   140002c84:	lea    r8,[rsi+0x768]
   140002c8b:	mov    BYTE PTR [rcx],dil
   140002c8e:	lea    rdx,[rbp-0x80]
   140002c92:	mov    rcx,QWORD PTR [rsi+0x38]
   140002c96:	xor    r9d,r9d
   140002c99:	mov    QWORD PTR [rsp+0x30],rsi
   140002c9e:	mov    QWORD PTR [rsp+0x28],r13
   140002ca3:	mov    QWORD PTR [rsp+0x20],rax
   140002ca8:	call   QWORD PTR [rip+0x336a]        # 0x140006018
   140002cae:	test   eax,eax
   140002cb0:	jne    0x140002ce2
   140002cb2:	cmp    DWORD PTR [r15+0x200],edi
   140002cb9:	jne    0x140002d24
   140002cbb:	lea    r9,[rsi+0x40]
   140002cbf:	mov    r8,rbx
   140002cc2:	mov    rdx,rsi
   140002cc5:	mov    rcx,r15
   140002cc8:	call   0x1400047cc
   140002ccd:	cmp    DWORD PTR [rsi+0x40],0x8
   140002cd1:	jne    0x140002d24
   140002cd3:	lea    rcx,[rsi+0x568]
   140002cda:	call   QWORD PTR [rip+0x3550]        # 0x140006230
   140002ce0:	jmp    0x140002d24
   140002ce2:	cmp    DWORD PTR [rsi+0x1088],edi
   140002ce8:	je     0x140002d9f
   140002cee:	movzx  r8d,WORD PTR [rsi+0x108c]
   140002cf6:	test   r8w,r8w
   140002cfa:	je     0x140002d17
   140002cfc:	mov    rcx,QWORD PTR [rsi+0x38]
   140002d00:	mov    rdx,r12
   140002d03:	call   QWORD PTR [rip+0x331f]        # 0x140006028
   140002d09:	mov    eax,0xffff
   140002d0e:	add    WORD PTR [rsi+0x108c],ax
   140002d15:	jmp    0x140002d24
   140002d17:	mov    rcx,r12
   140002d1a:	call   QWORD PTR [rip+0x3510]        # 0x140006230
   140002d20:	mov    BYTE PTR [rbp-0x80],dil
   140002d24:	lea    rcx,[rbp-0x80]
   140002d28:	or     rax,0xffffffffffffffff
   140002d2c:	inc    rax
   140002d2f:	cmp    BYTE PTR [rcx+rax*1],dil
   140002d33:	jne    0x140002d2c
   140002d35:	test   rax,rax
   140002d38:	jne    0x140002bfb
   140002d3e:	mov    rcx,QWORD PTR [rsi+0x38]
   140002d42:	call   QWORD PTR [rip+0x32e8]        # 0x140006030
   140002d48:	test   eax,eax
   140002d4a:	jne    0x140002d64
   140002d4c:	cmp    DWORD PTR [r15+0x200],edi
   140002d53:	jne    0x140002d64
   140002d55:	lea    rdx,[rip+0x3f1c]        # 0x140006c78
   140002d5c:	mov    rcx,r15
   140002d5f:	call   0x140001008
   140002d64:	mov    QWORD PTR [rsi+0x58],rdi
   140002d68:	cmp    DWORD PTR [r15+0x200],edi
   140002d6f:	sete   dil
   140002d73:	mov    eax,edi
   140002d75:	mov    rcx,QWORD PTR [rbp+0x80]
   140002d7c:	xor    rcx,rsp
   140002d7f:	call   0x140005520
   140002d84:	mov    rbx,QWORD PTR [rsp+0x1e0]
   140002d8c:	add    rsp,0x190
   140002d93:	pop    r15
   140002d95:	pop    r14
   140002d97:	pop    r13
   140002d99:	pop    r12
   140002d9b:	pop    rdi
   140002d9c:	pop    rsi
   140002d9d:	pop    rbp
   140002d9e:	ret    
   140002d9f:	cmp    DWORD PTR [rsi+0x10],edi
   140002da2:	je     0x140002d20
   140002da8:	cmp    DWORD PTR [rsi+0x870],edi
   140002dae:	lea    rdx,[rbp-0x80]
   140002db2:	mov    eax,edi
   140002db4:	mov    DWORD PTR [rsi+0x868],r14d
   140002dbb:	sete   al
   140002dbe:	mov    r10d,0x100
   140002dc4:	cdqe   
   140002dc6:	mov    r8d,r10d
   140002dc9:	imul   r9,rax,0x304
   140002dd0:	lea    rax,[rbp-0x80]
   140002dd4:	add    r9,rsi
   140002dd7:	mov    rcx,r9
   140002dda:	sub    rcx,rax
   140002ddd:	lea    rax,[r8+0x7ffffefe]
   140002de4:	test   rax,rax
   140002de7:	je     0x140002dfe
   140002de9:	mov    al,BYTE PTR [rdx+rcx*1+0x974]
   140002df0:	test   al,al
   140002df2:	je     0x140002dfe
   140002df4:	mov    BYTE PTR [rdx],al
   140002df6:	add    rdx,r14
   140002df9:	sub    r8,r14
   140002dfc:	jne    0x140002ddd
   140002dfe:	test   r8,r8
   140002e01:	jne    0x140002e06
   140002e03:	sub    rdx,r14
   140002e06:	mov    BYTE PTR [rdx],dil
   140002e09:	mov    rcx,r10
   140002e0c:	lea    rdx,[rbp-0x80]
   140002e10:	sub    rdx,rbx
   140002e13:	lea    rax,[rcx+0x7ffffefe]
   140002e1a:	test   rax,rax
   140002e1d:	je     0x140002e30
   140002e1f:	mov    al,BYTE PTR [rbx+rdx*1]
   140002e22:	test   al,al
   140002e24:	je     0x140002e30
   140002e26:	mov    BYTE PTR [rbx],al
   140002e28:	add    rbx,r14
   140002e2b:	sub    rcx,r14
   140002e2e:	jne    0x140002e13
   140002e30:	test   rcx,rcx
   140002e33:	jne    0x140002e38
   140002e35:	sub    rbx,r14
   140002e38:	mov    BYTE PTR [rbx],dil
   140002e3b:	mov    DWORD PTR [rsi+0x870],edi
   140002e41:	cmp    BYTE PTR [rbp-0x80],dil
   140002e45:	je     0x140002d24
   140002e4b:	movzx  eax,WORD PTR [r9+0xb76]
   140002e53:	lea    rcx,[r9+0xa74]
   140002e5a:	mov    QWORD PTR [rsp+0x48],r15
   140002e5f:	lea    rdx,[rsi+0x768]
   140002e66:	mov    DWORD PTR [rsp+0x40],edi
   140002e6a:	add    ax,r14w
   140002e6e:	mov    DWORD PTR [rsp+0x38],r14d
   140002e73:	mov    WORD PTR [rsp+0x30],ax
   140002e78:	movzx  eax,WORD PTR [r9+0xb74]
   140002e80:	lea    r9,[rbp-0x80]
   140002e84:	mov    WORD PTR [rsp+0x28],ax
   140002e89:	mov    QWORD PTR [rsp+0x20],rcx
   140002e8e:	mov    rcx,rsi
   140002e91:	call   0x140003754
   140002e96:	jmp    0x140002d24
   140002e9b:	int3   
   140002e9c:	int3   
   140002e9d:	int3   
   140002e9e:	int3   
   140002e9f:	int3   
   140002ea0:	int3   
   140002ea1:	int3   
   140002ea2:	int3   
   140002ea3:	int3   
   140002ea4:	int3   
   140002ea5:	int3   
   140002ea6:	int3   
   140002ea7:	int3   
   140002ea8:	int3   
   140002ea9:	int3   
   140002eaa:	int3   
   140002eab:	int3   
   140002eac:	int3   
   140002ead:	int3   
   140002eae:	int3   
   140002eaf:	int3   
   140002eb0:	mov    QWORD PTR [rsp+0x18],rbx
   140002eb5:	push   rbp
   140002eb6:	push   rsi
   140002eb7:	push   rdi
   140002eb8:	sub    rsp,0x80
   140002ebf:	mov    rax,QWORD PTR [rip+0x6142]        # 0x140009008
   140002ec6:	xor    rax,rsp
   140002ec9:	mov    QWORD PTR [rsp+0x70],rax
   140002ece:	mov    rdi,rdx
   140002ed1:	mov    edx,ecx
   140002ed3:	mov    rsi,QWORD PTR [rdi+0x20]
   140002ed7:	mov    rbx,QWORD PTR [rsi+0x58]
   140002edb:	test   ecx,ecx
   140002edd:	je     0x140003156
   140002ee3:	sub    ecx,0x1
   140002ee6:	je     0x1400030e7
   140002eec:	sub    ecx,0x1
   140002eef:	je     0x140002f1e
   140002ef1:	sub    ecx,0x2
   140002ef4:	je     0x140002f11
   140002ef6:	cmp    ecx,0x1
   140002ef9:	je     0x1400030e3
   140002eff:	lea    rcx,[rip+0x3dda]        # 0x140006ce0
   140002f06:	call   QWORD PTR [rip+0x33dc]        # 0x1400062e8
   140002f0c:	jmp    0x1400030e3
   140002f11:	mov    rdx,rdi
   140002f14:	call   0x140003b30
   140002f19:	jmp    0x140003163
   140002f1e:	mov    rdx,QWORD PTR [rdi+0x8]
   140002f22:	mov    r8,rbx
   140002f25:	mov    rcx,rsi
   140002f28:	call   0x140003e1c
   140002f2d:	test   eax,eax
   140002f2f:	jne    0x140002f41
   140002f31:	mov    eax,DWORD PTR [rbx+0x200]
   140002f37:	neg    eax
   140002f39:	sbb    rax,rax
   140002f3c:	jmp    0x140003163
   140002f41:	movzx  r8d,WORD PTR [rdi+0x32]
   140002f46:	mov    eax,0xc
   140002f4b:	mov    r9d,r8d
   140002f4e:	mov    r10d,r8d
   140002f51:	and    r9d,0x1f
   140002f55:	shr    r10d,0x5
   140002f59:	add    r9d,r9d
   140002f5c:	shr    r8d,0xb
   140002f60:	and    r10d,0x3f
   140002f64:	cmp    r8d,eax
   140002f67:	jl     0x140002f75
   140002f69:	lea    r11,[rip+0x40dc]        # 0x14000704c
   140002f70:	sub    r8d,eax
   140002f73:	jmp    0x140002f7c
   140002f75:	lea    r11,[rip+0x40d4]        # 0x140007050
   140002f7c:	movzx  edx,WORD PTR [rdi+0x30]
   140002f80:	lea    rbp,[rsi+0x168]
   140002f87:	mov    QWORD PTR [rsp+0x50],r11
   140002f8c:	mov    ecx,edx
   140002f8e:	mov    DWORD PTR [rsp+0x48],r9d
   140002f93:	test   r8d,r8d
   140002f96:	mov    DWORD PTR [rsp+0x40],r10d
   140002f9b:	lea    r9,[rip+0x40b6]        # 0x140007058
   140002fa2:	cmove  r8d,eax
   140002fa6:	mov    eax,edx
   140002fa8:	mov    DWORD PTR [rsp+0x38],r8d
   140002fad:	and    eax,0x1f
   140002fb0:	shr    ecx,0x9
   140002fb3:	lea    r8,[rip+0x40be]        # 0x140007078
   140002fba:	add    ecx,0x7bc
   140002fc0:	shr    edx,0x5
   140002fc3:	mov    DWORD PTR [rsp+0x30],ecx
   140002fc7:	and    edx,0xf
   140002fca:	mov    DWORD PTR [rsp+0x28],eax
   140002fce:	mov    rcx,rbp
   140002fd1:	mov    DWORD PTR [rsp+0x20],edx
   140002fd5:	mov    edx,0x200
   140002fda:	call   0x140001cb8
   140002fdf:	movzx  r8d,WORD PTR [rdi+0x34]
   140002fe4:	lea    r10,[rip+0x40a1]        # 0x14000708c
   140002feb:	xor    r9d,r9d
   140002fee:	lea    rax,[rsp+0x60]
   140002ff3:	sub    r10,rax
   140002ff6:	lea    rcx,[rsp+0x60]
   140002ffb:	mov    edx,0xa
   140003000:	lea    rax,[rdx+0x7ffffff4]
   140003007:	test   rax,rax
   14000300a:	je     0x14000301f
   14000300c:	mov    al,BYTE PTR [r10+rcx*1]
   140003010:	test   al,al
   140003012:	je     0x14000301f
   140003014:	mov    BYTE PTR [rcx],al
   140003016:	inc    rcx
   140003019:	sub    rdx,0x1
   14000301d:	jne    0x140003000
   14000301f:	test   rdx,rdx
   140003022:	jne    0x14000302d
   140003024:	dec    rcx
   140003027:	mov    r9d,0x8007007a
   14000302d:	mov    BYTE PTR [rcx],0x0
   140003030:	test   r9d,r9d
   140003033:	js     0x14000308b
   140003035:	movzx  ecx,BYTE PTR [rsp+0x60]
   14000303a:	mov    al,r8b
   14000303d:	and    al,0x20
   14000303f:	mov    edx,0x41
   140003044:	movzx  eax,BYTE PTR [rsp+0x61]
   140003049:	cmovne ecx,edx
   14000304c:	mov    edx,0x48
   140003051:	mov    BYTE PTR [rsp+0x60],cl
   140003055:	mov    cl,r8b
   140003058:	and    cl,0x2
   14000305b:	movzx  ecx,BYTE PTR [rsp+0x62]
   140003060:	cmovne eax,edx
   140003063:	mov    edx,0x52
   140003068:	mov    BYTE PTR [rsp+0x61],al
   14000306c:	mov    al,r8b
   14000306f:	and    al,0x1
   140003071:	movzx  eax,BYTE PTR [rsp+0x63]
   140003076:	cmovne ecx,edx
   140003079:	and    r8b,0x4
   14000307d:	mov    BYTE PTR [rsp+0x62],cl
   140003081:	lea    ecx,[rdx+0x1]
   140003084:	cmovne eax,ecx
   140003087:	mov    BYTE PTR [rsp+0x63],al
   14000308b:	mov    rax,QWORD PTR [rdi+0x8]
   14000308f:	lea    rbx,[rsi+0x368]
   140003096:	mov    QWORD PTR [rsp+0x38],rax
   14000309b:	lea    r9,[rip+0x3bee]        # 0x140006c90
   1400030a2:	mov    eax,DWORD PTR [rdi]
   1400030a4:	lea    r8,[rip+0x3bf5]        # 0x140006ca0
   1400030ab:	mov    DWORD PTR [rsp+0x30],eax
   1400030af:	mov    edx,0x100
   1400030b4:	lea    rax,[rsp+0x60]
   1400030b9:	mov    rcx,rbx
   1400030bc:	mov    QWORD PTR [rsp+0x28],rax
   1400030c1:	mov    QWORD PTR [rsp+0x20],rbp
   1400030c6:	call   0x140001cb8
   1400030cb:	mov    rdx,rbx
   1400030ce:	lea    rcx,[rip+0x3abf]        # 0x140006b94
   1400030d5:	call   QWORD PTR [rip+0x320d]        # 0x1400062e8
   1400030db:	inc    DWORD PTR [rsi+0x4c]
   1400030de:	mov    eax,DWORD PTR [rdi]
   1400030e0:	add    DWORD PTR [rsi+0x50],eax
   1400030e3:	xor    eax,eax
   1400030e5:	jmp    0x140003163
   1400030e7:	mov    rdx,QWORD PTR [rdi+0x8]
   1400030eb:	mov    r8,rbx
   1400030ee:	mov    rcx,rsi
   1400030f1:	call   0x140003e1c
   1400030f6:	test   eax,eax
   1400030f8:	je     0x140002f31
   1400030fe:	cmp    DWORD PTR [rsi+0x868],0x0
   140003105:	jne    0x1400030e3
   140003107:	mov    rax,QWORD PTR [rdi+0x18]
   14000310b:	lea    rbx,[rsi+0x168]
   140003112:	mov    QWORD PTR [rsp+0x30],rax
   140003117:	lea    r9,[rip+0x3b8e]        # 0x140006cac
   14000311e:	mov    rax,QWORD PTR [rdi+0x10]
   140003122:	lea    r8,[rip+0x3b8f]        # 0x140006cb8
   140003129:	mov    QWORD PTR [rsp+0x28],rax
   14000312e:	mov    edx,0x200
   140003133:	mov    rax,QWORD PTR [rdi+0x8]
   140003137:	mov    rcx,rbx
   14000313a:	mov    QWORD PTR [rsp+0x20],rax
   14000313f:	call   0x140001cb8
   140003144:	mov    rdx,rbx
   140003147:	lea    rcx,[rip+0x3a46]        # 0x140006b94
   14000314e:	call   QWORD PTR [rip+0x3194]        # 0x1400062e8
   140003154:	jmp    0x1400030e3
   140003156:	mov    rdx,rdi
   140003159:	mov    rcx,rsi
   14000315c:	call   0x140003610
   140003161:	cdqe   
   140003163:	mov    rcx,QWORD PTR [rsp+0x70]
   140003168:	xor    rcx,rsp
   14000316b:	call   0x140005520
   140003170:	mov    rbx,QWORD PTR [rsp+0xb0]
   140003178:	add    rsp,0x80
   14000317f:	pop    rdi
   140003180:	pop    rsi
   140003181:	pop    rbp
   140003182:	ret    
   140003183:	int3   
   140003184:	int3   
   140003185:	int3   
   140003186:	int3   
   140003187:	int3   
   140003188:	int3   
   140003189:	int3   
   14000318a:	int3   
   14000318b:	int3   
   14000318c:	int3   
   14000318d:	int3   
   14000318e:	int3   
   14000318f:	int3   
   140003190:	mov    QWORD PTR [rsp+0x18],rbx
   140003195:	push   rbp
   140003196:	push   rsi
   140003197:	push   rdi
   140003198:	push   r12
   14000319a:	push   r13
   14000319c:	push   r14
   14000319e:	push   r15
   1400031a0:	sub    rsp,0x80
   1400031a7:	mov    rax,QWORD PTR [rip+0x5e5a]        # 0x140009008
   1400031ae:	xor    rax,rsp
   1400031b1:	mov    QWORD PTR [rsp+0x78],rax
   1400031b6:	mov    rsi,rdx
   1400031b9:	xor    edi,edi
   1400031bb:	mov    edx,ecx
   1400031bd:	mov    rbx,QWORD PTR [rsi+0x20]
   1400031c1:	mov    r13,QWORD PTR [rbx+0x58]
   1400031c5:	mov    DWORD PTR [rbx+0x60],edi
   1400031c8:	test   ecx,ecx
   1400031ca:	je     0x1400034e3
   1400031d0:	sub    ecx,0x1
   1400031d3:	je     0x14000346d
   1400031d9:	sub    ecx,0x1
   1400031dc:	je     0x1400032c4
   1400031e2:	sub    ecx,0x1
   1400031e5:	je     0x140003214
   1400031e7:	sub    ecx,0x1
   1400031ea:	je     0x140003207
   1400031ec:	cmp    ecx,0x1
   1400031ef:	je     0x1400032d9
   1400031f5:	lea    rcx,[rip+0x3ae4]        # 0x140006ce0
   1400031fc:	call   QWORD PTR [rip+0x30e6]        # 0x1400062e8
   140003202:	jmp    0x1400032d9
   140003207:	mov    rdx,rsi
   14000320a:	call   0x140003b30
   14000320f:	jmp    0x1400034f0
   140003214:	mov    rcx,QWORD PTR [rsi+0x28]
   140003218:	call   0x140004980
   14000321d:	lea    r14,[rbx+0x668]
   140003224:	cmp    BYTE PTR [r14],dil
   140003227:	jne    0x14000322d
   140003229:	mov    r14,QWORD PTR [rsi+0x8]
   14000322d:	lea    r15,[rbx+0xe7c]
   140003234:	cmp    BYTE PTR [r15],dil
   140003237:	je     0x140003265
   140003239:	or     rbp,0xffffffffffffffff
   14000323d:	mov    r8,rbp
   140003240:	inc    r8
   140003243:	cmp    BYTE PTR [r15+r8*1],dil
   140003247:	jne    0x140003240
   140003249:	mov    rdx,r15
   14000324c:	mov    rcx,r14
   14000324f:	call   QWORD PTR [rip+0x2f73]        # 0x1400061c8
   140003255:	test   eax,eax
   140003257:	jne    0x140003265
   140003259:	inc    rbp
   14000325c:	cmp    BYTE PTR [r15+rbp*1],dil
   140003260:	jne    0x140003259
   140003262:	add    r14,rbp
   140003265:	lea    rbp,[rbx+0x568]
   14000326c:	mov    QWORD PTR [rsp+0x28],r13
   140003271:	mov    rcx,rbp
   140003274:	lea    r8,[rbx+0x468]
   14000327b:	mov    r9,r14
   14000327e:	call   0x1400011d4
   140003283:	test   eax,eax
   140003285:	je     0x1400032d9
   140003287:	movzx  ecx,WORD PTR [rsi+0x30]
   14000328b:	lea    rdx,[rsp+0x40]
   140003290:	mov    WORD PTR [rsp+0x40],cx
   140003295:	mov    r8,r13
   140003298:	movzx  ecx,WORD PTR [rsi+0x32]
   14000329c:	mov    WORD PTR [rsp+0x42],cx
   1400032a1:	movzx  ecx,WORD PTR [rsi+0x34]
   1400032a5:	and    cx,0x27
   1400032a9:	mov    WORD PTR [rsp+0x44],cx
   1400032ae:	mov    rcx,rbp
   1400032b1:	call   0x14000185c
   1400032b6:	test   eax,eax
   1400032b8:	setne  dil
   1400032bc:	mov    rax,rdi
   1400032bf:	jmp    0x1400034f0
   1400032c4:	cmp    DWORD PTR [rbx+0x1088],edi
   1400032ca:	je     0x1400032e0
   1400032cc:	movzx  eax,WORD PTR [rbx+0x108c]
   1400032d3:	cmp    WORD PTR [rsi+0x3a],ax
   1400032d7:	je     0x1400032e0
   1400032d9:	xor    eax,eax
   1400032db:	jmp    0x1400034f0
   1400032e0:	mov    rdx,QWORD PTR [rsi+0x8]
   1400032e4:	mov    r8,r13
   1400032e7:	mov    rcx,rbx
   1400032ea:	call   0x140003e1c
   1400032ef:	test   eax,eax
   1400032f1:	jne    0x140003304
   1400032f3:	mov    eax,DWORD PTR [r13+0x200]
   1400032fa:	neg    eax
   1400032fc:	sbb    rax,rax
   1400032ff:	jmp    0x1400034f0
   140003304:	lea    r15,[rbx+0x668]
   14000330b:	cmp    BYTE PTR [r15],dil
   14000330e:	jne    0x140003314
   140003310:	mov    r15,QWORD PTR [rsi+0x8]
   140003314:	lea    r14,[rbx+0xe7c]
   14000331b:	or     rbp,0xffffffffffffffff
   14000331f:	cmp    BYTE PTR [r14],dil
   140003322:	je     0x14000334f
   140003324:	mov    r8,rbp
   140003327:	inc    r8
   14000332a:	cmp    BYTE PTR [r14+r8*1],dil
   14000332e:	jne    0x140003327
   140003330:	mov    rdx,r14
   140003333:	mov    rcx,r15
   140003336:	call   QWORD PTR [rip+0x2e8c]        # 0x1400061c8
   14000333c:	test   eax,eax
   14000333e:	jne    0x14000334f
   140003340:	mov    rax,rbp
   140003343:	inc    rax
   140003346:	cmp    BYTE PTR [r14+rax*1],dil
   14000334a:	jne    0x140003343
   14000334c:	add    r15,rax
   14000334f:	lea    r14,[rbx+0x568]
   140003356:	mov    QWORD PTR [rsp+0x28],r13
   14000335b:	mov    rcx,r14
   14000335e:	lea    r8,[rbx+0x468]
   140003365:	mov    r9,r15
   140003368:	call   0x1400011d4
   14000336d:	test   eax,eax
   14000336f:	jne    0x140003379
   140003371:	mov    rax,rbp
   140003374:	jmp    0x1400034f0
   140003379:	mov    r8,r13
   14000337c:	mov    rcx,r14
   14000337f:	call   0x140001318
   140003384:	test   eax,eax
   140003386:	je     0x140003371
   140003388:	lea    rdx,[rsp+0x48]
   14000338d:	mov    rcx,r14
   140003390:	call   QWORD PTR [rip+0x2ef2]        # 0x140006288
   140003396:	cmp    eax,ebp
   140003398:	je     0x1400033bd
   14000339a:	lea    r9,[rsp+0x48]
   14000339f:	mov    rdx,r14
   1400033a2:	lea    r8,[rsp+0x40]
   1400033a7:	mov    rcx,rbx
   1400033aa:	call   0x140003520
   1400033af:	test   eax,eax
   1400033b1:	jne    0x1400033bd
   1400033b3:	movsxd rax,DWORD PTR [rsp+0x40]
   1400033b8:	jmp    0x1400034f0
   1400033bd:	mov    edx,0x8302
   1400033c2:	mov    r8d,0x180
   1400033c8:	mov    rcx,r14
   1400033cb:	call   0x140004b20
   1400033d0:	mov    r12,rax
   1400033d3:	cmp    rax,rbp
   1400033d6:	jne    0x1400033f7
   1400033d8:	mov    rcx,QWORD PTR [rbx+0x58]
   1400033dc:	lea    r8,[rip+0x2ffd]        # 0x1400063e0
   1400033e3:	mov    r9,r14
   1400033e6:	lea    rdx,[rip+0x3913]        # 0x140006d00
   1400033ed:	call   0x140001008
   1400033f2:	jmp    0x140003371
   1400033f7:	mov    rax,QWORD PTR [rsi+0x8]
   1400033fb:	lea    rdi,[rbx+0x168]
   140003402:	mov    edx,0x200
   140003407:	mov    rcx,rdi
   14000340a:	cmp    r15,rax
   14000340d:	jne    0x140003429
   14000340f:	lea    r9,[rip+0x2fca]        # 0x1400063e0
   140003416:	mov    QWORD PTR [rsp+0x20],r14
   14000341b:	lea    r8,[rip+0x38f6]        # 0x140006d18
   140003422:	call   0x140001cb8
   140003427:	jmp    0x140003446
   140003429:	mov    QWORD PTR [rsp+0x28],r14
   14000342e:	lea    r9,[rip+0x2ff7]        # 0x14000642c
   140003435:	lea    r8,[rip+0x379c]        # 0x140006bd8
   14000343c:	mov    QWORD PTR [rsp+0x20],rax
   140003441:	call   0x140001cb8
   140003446:	mov    rdx,rdi
   140003449:	lea    rcx,[rip+0x3744]        # 0x140006b94
   140003450:	call   QWORD PTR [rip+0x2e92]        # 0x1400062e8
   140003456:	inc    DWORD PTR [rbx+0x4c]
   140003459:	mov    DWORD PTR [rbx+0x18],0x1
   140003460:	mov    eax,DWORD PTR [rsi]
   140003462:	add    DWORD PTR [rbx+0x50],eax
   140003465:	mov    rax,r12
   140003468:	jmp    0x1400034f0
   14000346d:	mov    rdx,QWORD PTR [rsi+0x8]
   140003471:	mov    r8,r13
   140003474:	mov    rcx,rbx
   140003477:	call   0x140003e1c
   14000347c:	test   eax,eax
   14000347e:	je     0x1400032f3
   140003484:	cmp    DWORD PTR [rbx+0x868],edi
   14000348a:	jne    0x1400032d9
   140003490:	mov    rax,QWORD PTR [rsi+0x18]
   140003494:	lea    r9,[rip+0x3811]        # 0x140006cac
   14000349b:	mov    QWORD PTR [rsp+0x30],rax
   1400034a0:	lea    r8,[rip+0x3811]        # 0x140006cb8
   1400034a7:	mov    rax,QWORD PTR [rsi+0x10]
   1400034ab:	lea    rcx,[rbx+0x168]
   1400034b2:	mov    QWORD PTR [rsp+0x28],rax
   1400034b7:	mov    edx,0x200
   1400034bc:	mov    rax,QWORD PTR [rsi+0x8]
   1400034c0:	mov    QWORD PTR [rsp+0x20],rax
   1400034c5:	call   0x140001cb8
   1400034ca:	lea    rdx,[rbx+0x168]
   1400034d1:	lea    rcx,[rip+0x36bc]        # 0x140006b94
   1400034d8:	call   QWORD PTR [rip+0x2e0a]        # 0x1400062e8
   1400034de:	jmp    0x1400032d9
   1400034e3:	mov    rdx,rsi
   1400034e6:	mov    rcx,rbx
   1400034e9:	call   0x140003610
   1400034ee:	cdqe   
   1400034f0:	mov    rcx,QWORD PTR [rsp+0x78]
   1400034f5:	xor    rcx,rsp
   1400034f8:	call   0x140005520
   1400034fd:	mov    rbx,QWORD PTR [rsp+0xd0]
   140003505:	add    rsp,0x80
   14000350c:	pop    r15
   14000350e:	pop    r14
   140003510:	pop    r13
   140003512:	pop    r12
   140003514:	pop    rdi
   140003515:	pop    rsi
   140003516:	pop    rbp
   140003517:	ret    
   140003518:	int3   
   140003519:	int3   
   14000351a:	int3   
   14000351b:	int3   
   14000351c:	int3   
   14000351d:	int3   
   14000351e:	int3   
   14000351f:	int3   
   140003520:	rex push rbx
   140003522:	push   rbp
   140003523:	push   rsi
   140003524:	push   rdi
   140003525:	push   r12
   140003527:	push   r14
   140003529:	push   r15
   14000352b:	sub    rsp,0x30
   14000352f:	xor    esi,esi
   140003531:	xor    edi,edi
   140003533:	mov    r12,r9
   140003536:	mov    r15,r8
   140003539:	mov    r14,rdx
   14000353c:	mov    rbp,rcx
   14000353f:	cmp    DWORD PTR [rcx+0x14],esi
   140003542:	jne    0x1400035dd
   140003548:	lea    rbx,[rcx+0x168]
   14000354f:	mov    QWORD PTR [rsp+0x20],rdx
   140003554:	mov    rcx,rbx
   140003557:	lea    r9,[rip+0x2e82]        # 0x1400063e0
   14000355e:	lea    r8,[rip+0x37c3]        # 0x140006d28
   140003565:	mov    edx,0x200
   14000356a:	call   0x140001cb8
   14000356f:	lea    r9d,[rsi+0x4]
   140003573:	mov    r8,rbx
   140003576:	mov    rdx,rbx
   140003579:	xor    ecx,ecx
   14000357b:	call   QWORD PTR [rip+0x2bc7]        # 0x140006148
   140003581:	cmp    eax,0x6
   140003584:	lea    ecx,[rsi+0x4e]
   140003587:	lea    edx,[rsi+0x59]
   14000358a:	cmove  ecx,edx
   14000358d:	movsx  ebx,cl
   140003590:	mov    ecx,ebx
   140003592:	call   QWORD PTR [rip+0x2d28]        # 0x1400062c0
   140003598:	cmp    eax,0x41
   14000359b:	je     0x1400035ac
   14000359d:	cmp    eax,0x4e
   1400035a0:	je     0x1400035b3
   1400035a2:	cmp    eax,0x59
   1400035a5:	jne    0x1400035c2
   1400035a7:	lea    esi,[rdi+0x1]
   1400035aa:	jmp    0x1400035b3
   1400035ac:	mov    esi,0x1
   1400035b1:	mov    edi,esi
   1400035b3:	mov    edx,ebx
   1400035b5:	lea    rcx,[rip+0x3784]        # 0x140006d40
   1400035bc:	call   QWORD PTR [rip+0x2d26]        # 0x1400062e8
   1400035c2:	lea    rcx,[rip+0x31d7]        # 0x1400067a0
   1400035c9:	call   QWORD PTR [rip+0x2d19]        # 0x1400062e8
   1400035cf:	test   esi,esi
   1400035d1:	jne    0x1400035da
   1400035d3:	and    DWORD PTR [r15],esi
   1400035d6:	xor    eax,eax
   1400035d8:	jmp    0x1400035f8
   1400035da:	mov    DWORD PTR [rbp+0x14],edi
   1400035dd:	test   BYTE PTR [r12+0x6],0x80
   1400035e3:	jne    0x1400035f3
   1400035e5:	mov    edx,0x180
   1400035ea:	mov    rcx,r14
   1400035ed:	call   QWORD PTR [rip+0x2be5]        # 0x1400061d8
   1400035f3:	mov    eax,0x1
   1400035f8:	add    rsp,0x30
   1400035fc:	pop    r15
   1400035fe:	pop    r14
   140003600:	pop    r12
   140003602:	pop    rdi
   140003603:	pop    rsi
   140003604:	pop    rbp
   140003605:	pop    rbx
   140003606:	ret    
   140003607:	int3   
   140003608:	int3   
   140003609:	int3   
   14000360a:	int3   
   14000360b:	int3   
   14000360c:	int3   
   14000360d:	int3   
   14000360e:	int3   
   14000360f:	int3   
   140003610:	lea    r8,[rcx+0xb78]
   140003617:	mov    r10,rcx
   14000361a:	lea    r9,[rcx+0x874]
   140003621:	mov    r11,rdx
   140003624:	mov    ecx,0x6
   140003629:	mov    rax,r8
   14000362c:	lea    edx,[rcx+0x7a]
   14000362f:	movups xmm0,XMMWORD PTR [rax]
   140003632:	movups xmm1,XMMWORD PTR [rax+0x10]
   140003636:	movups XMMWORD PTR [r9],xmm0
   14000363a:	movups xmm0,XMMWORD PTR [rax+0x20]
   14000363e:	movups XMMWORD PTR [r9+0x10],xmm1
   140003643:	movups xmm1,XMMWORD PTR [rax+0x30]
   140003647:	movups XMMWORD PTR [r9+0x20],xmm0
   14000364c:	movups xmm0,XMMWORD PTR [rax+0x40]
   140003650:	movups XMMWORD PTR [r9+0x30],xmm1
   140003655:	movups xmm1,XMMWORD PTR [rax+0x50]
   140003659:	movups XMMWORD PTR [r9+0x40],xmm0
   14000365e:	movups xmm0,XMMWORD PTR [rax+0x60]
   140003662:	movups XMMWORD PTR [r9+0x50],xmm1
   140003667:	movups xmm1,XMMWORD PTR [rax+0x70]
   14000366b:	add    rax,rdx
   14000366e:	movups XMMWORD PTR [r9+0x60],xmm0
   140003673:	add    r9,rdx
   140003676:	movups XMMWORD PTR [r9-0x10],xmm1
   14000367b:	sub    rcx,0x1
   14000367f:	jne    0x14000362f
   140003681:	mov    eax,DWORD PTR [rax]
   140003683:	mov    edx,0x100
   140003688:	mov    DWORD PTR [r9],eax
   14000368b:	mov    ecx,edx
   14000368d:	mov    r9,QWORD PTR [r11+0x18]
   140003691:	lea    rax,[rcx+0x7ffffefe]
   140003698:	test   rax,rax
   14000369b:	je     0x1400036b3
   14000369d:	mov    al,BYTE PTR [r9]
   1400036a0:	test   al,al
   1400036a2:	je     0x1400036b3
   1400036a4:	mov    BYTE PTR [r8],al
   1400036a7:	inc    r9
   1400036aa:	inc    r8
   1400036ad:	sub    rcx,0x1
   1400036b1:	jne    0x140003691
   1400036b3:	test   rcx,rcx
   1400036b6:	jne    0x1400036bb
   1400036b8:	dec    r8
   1400036bb:	mov    BYTE PTR [r8],0x0
   1400036bf:	lea    rcx,[r10+0xc78]
   1400036c6:	mov    r9,QWORD PTR [r11+0x8]
   1400036ca:	mov    r8,rdx
   1400036cd:	lea    rax,[r8+0x7ffffefe]
   1400036d4:	test   rax,rax
   1400036d7:	je     0x1400036ee
   1400036d9:	mov    al,BYTE PTR [r9]
   1400036dc:	test   al,al
   1400036de:	je     0x1400036ee
   1400036e0:	mov    BYTE PTR [rcx],al
   1400036e2:	inc    r9
   1400036e5:	inc    rcx
   1400036e8:	sub    r8,0x1
   1400036ec:	jne    0x1400036cd
   1400036ee:	test   r8,r8
   1400036f1:	jne    0x1400036f6
   1400036f3:	dec    rcx
   1400036f6:	mov    BYTE PTR [rcx],0x0
   1400036f9:	lea    rcx,[r10+0xd78]
   140003700:	mov    r8,QWORD PTR [r11+0x10]
   140003704:	lea    rax,[rdx+0x7ffffefe]
   14000370b:	test   rax,rax
   14000370e:	je     0x140003725
   140003710:	mov    al,BYTE PTR [r8]
   140003713:	test   al,al
   140003715:	je     0x140003725
   140003717:	mov    BYTE PTR [rcx],al
   140003719:	inc    r8
   14000371c:	inc    rcx
   14000371f:	sub    rdx,0x1
   140003723:	jne    0x140003704
   140003725:	test   rdx,rdx
   140003728:	jne    0x14000372d
   14000372a:	dec    rcx
   14000372d:	mov    BYTE PTR [rcx],0x0
   140003730:	movzx  eax,WORD PTR [r11+0x36]
   140003735:	mov    WORD PTR [r10+0xe78],ax
   14000373d:	movzx  eax,WORD PTR [r11+0x38]
   140003742:	mov    WORD PTR [r10+0xe7a],ax
   14000374a:	xor    eax,eax
   14000374c:	ret    
   14000374d:	int3   
   14000374e:	int3   
   14000374f:	int3   
   140003750:	int3   
   140003751:	int3   
   140003752:	int3   
   140003753:	int3   
   140003754:	mov    QWORD PTR [rsp+0x18],rbx
   140003759:	push   rbp
   14000375a:	push   rsi
   14000375b:	push   rdi
   14000375c:	push   r12
   14000375e:	push   r13
   140003760:	push   r14
   140003762:	push   r15
   140003764:	lea    rbp,[rsp-0x80]
   140003769:	sub    rsp,0x180
   140003770:	mov    rax,QWORD PTR [rip+0x5891]        # 0x140009008
   140003777:	xor    rax,rsp
   14000377a:	mov    QWORD PTR [rbp+0x70],rax
   14000377e:	mov    rax,QWORD PTR [rbp+0xe0]
   140003785:	mov    r14,rdx
   140003788:	mov    rsi,QWORD PTR [rbp+0x108]
   14000378f:	mov    r15,rcx
   140003792:	xor    edi,edi
   140003794:	mov    QWORD PTR [rsp+0x48],rax
   140003799:	xor    edx,edx
   14000379b:	mov    BYTE PTR [rsp+0x70],dil
   1400037a0:	lea    rcx,[rsp+0x71]
   1400037a5:	mov    r8d,0xff
   1400037ab:	mov    r13,r9
   1400037ae:	call   0x140005bf2
   1400037b3:	mov    r12d,edi
   1400037b6:	mov    DWORD PTR [rsi+0x200],edi
   1400037bc:	lea    rcx,[rsp+0x70]
   1400037c1:	mov    BYTE PTR [rsi],dil
   1400037c4:	mov    r9,r13
   1400037c7:	mov    r8,r14
   1400037ca:	mov    DWORD PTR [rsi+0x220],edi
   1400037d0:	mov    QWORD PTR [rsi+0x228],rdi
   1400037d7:	inc    r12d
   1400037da:	mov    QWORD PTR [rsp+0x28],rsi
   1400037df:	call   0x1400011d4
   1400037e4:	test   eax,eax
   1400037e6:	je     0x140003ad9
   1400037ec:	cmp    DWORD PTR [rbp+0x100],edi
   1400037f2:	jne    0x1400038ea
   1400037f8:	xor    r8d,r8d
   1400037fb:	lea    rcx,[rsp+0x70]
   140003800:	mov    edx,0x8000
   140003805:	call   0x140004b20
   14000380a:	mov    rbx,rax
   14000380d:	cmp    rax,0xffffffffffffffff
   140003811:	jne    0x140003832
   140003813:	lea    r9,[rsp+0x70]
   140003818:	mov    rcx,rsi
   14000381b:	lea    r8,[rip+0x2bbe]        # 0x1400063e0
   140003822:	lea    rdx,[rip+0x2c0f]        # 0x140006438
   140003829:	call   0x140001008
   14000382e:	mov    eax,edi
   140003830:	jmp    0x14000389d
   140003832:	mov    rcx,QWORD PTR [r15+0x38]
   140003836:	lea    r8,[rsp+0x50]
   14000383b:	mov    rdx,rax
   14000383e:	call   QWORD PTR [rip+0x27cc]        # 0x140006010
   140003844:	test   eax,eax
   140003846:	jne    0x140003859
   140003848:	cmp    DWORD PTR [rsi+0x200],edi
   14000384e:	jne    0x140003890
   140003850:	lea    rdx,[rip+0x33c9]        # 0x140006c20
   140003857:	jmp    0x14000387c
   140003859:	movzx  eax,WORD PTR [rbp+0xe8]
   140003860:	cmp    WORD PTR [rsp+0x58],ax
   140003865:	jne    0x140003875
   140003867:	movzx  eax,WORD PTR [rbp+0xf0]
   14000386e:	cmp    WORD PTR [rsp+0x5a],ax
   140003873:	je     0x140003890
   140003875:	lea    rdx,[rip+0x34cc]        # 0x140006d48
   14000387c:	lea    r9,[rsp+0x70]
   140003881:	mov    rcx,rsi
   140003884:	lea    r8,[rip+0x2b55]        # 0x1400063e0
   14000388b:	call   0x140001008
   140003890:	mov    rcx,rbx
   140003893:	call   0x140004980
   140003898:	mov    eax,0x1
   14000389d:	cmp    DWORD PTR [rsi+0x200],edi
   1400038a3:	je     0x140003b02
   1400038a9:	cmp    r12d,0x1
   1400038ad:	jg     0x1400038b3
   1400038af:	test   eax,eax
   1400038b1:	je     0x1400038ea
   1400038b3:	lea    rbx,[r15+0x168]
   1400038ba:	mov    QWORD PTR [rsp+0x20],rsi
   1400038bf:	mov    rcx,rbx
   1400038c2:	lea    r9,[rip+0x2b17]        # 0x1400063e0
   1400038c9:	lea    r8,[rip+0x34a0]        # 0x140006d70
   1400038d0:	mov    edx,0x200
   1400038d5:	call   0x140001cb8
   1400038da:	mov    rdx,rbx
   1400038dd:	lea    rcx,[rip+0x3498]        # 0x140006d7c
   1400038e4:	call   QWORD PTR [rip+0x29fe]        # 0x1400062e8
   1400038ea:	mov    DWORD PTR [rsp+0x40],0x5c3a78
   1400038f2:	lea    rcx,[rsp+0x70]
   1400038f7:	or     rax,0xffffffffffffffff
   1400038fb:	inc    rax
   1400038fe:	cmp    BYTE PTR [rcx+rax*1],dil
   140003902:	jne    0x1400038fb
   140003904:	cmp    rax,0x2
   140003908:	jb     0x140003932
   14000390a:	movzx  ecx,BYTE PTR [rsp+0x70]
   14000390f:	call   QWORD PTR [rip+0x29bb]        # 0x1400062d0
   140003915:	test   eax,eax
   140003917:	je     0x140003932
   140003919:	cmp    BYTE PTR [rsp+0x71],0x3a
   14000391e:	jne    0x140003932
   140003920:	movsx  ecx,BYTE PTR [rsp+0x70]
   140003925:	call   QWORD PTR [rip+0x2995]        # 0x1400062c0
   14000392b:	mov    ebx,eax
   14000392d:	sub    bl,0x40
   140003930:	jmp    0x14000393a
   140003932:	call   QWORD PTR [rip+0x2958]        # 0x140006290
   140003938:	mov    bl,al
   14000393a:	add    bl,0x40
   14000393d:	lea    rcx,[rsp+0x40]
   140003942:	mov    BYTE PTR [rsp+0x40],bl
   140003946:	call   QWORD PTR [rip+0x26f4]        # 0x140006040
   14000394c:	lea    rdi,[r15+0x168]
   140003953:	mov    edx,0x200
   140003958:	lea    r9,[rip+0x3425]        # 0x140006d84
   14000395f:	mov    rcx,rdi
   140003962:	cmp    eax,0x2
   140003965:	jne    0x14000398b
   140003967:	movsx  eax,bl
   14000396a:	lea    r8,[rip+0x341f]        # 0x140006d90
   140003971:	mov    DWORD PTR [rsp+0x30],eax
   140003975:	mov    rax,QWORD PTR [rsp+0x48]
   14000397a:	mov    QWORD PTR [rsp+0x28],rax
   14000397f:	mov    QWORD PTR [rsp+0x20],r13
   140003984:	call   0x140001cb8
   140003989:	jmp    0x1400039a6
   14000398b:	mov    rax,QWORD PTR [rsp+0x48]
   140003990:	lea    r8,[rip+0x3499]        # 0x140006e30
   140003997:	mov    QWORD PTR [rsp+0x28],rax
   14000399c:	mov    QWORD PTR [rsp+0x20],r13
   1400039a1:	call   0x140001cb8
   1400039a6:	mov    rdx,rdi
   1400039a9:	lea    rcx,[rip+0x31e4]        # 0x140006b94
   1400039b0:	call   QWORD PTR [rip+0x2932]        # 0x1400062e8
   1400039b6:	xor    ecx,ecx
   1400039b8:	call   0x140005b28
   1400039bd:	mov    r8,rax
   1400039c0:	lea    rcx,[rsp+0x70]
   1400039c5:	mov    edx,0xff
   1400039ca:	call   QWORD PTR [rip+0x2818]        # 0x1400061e8
   1400039d0:	xor    edi,edi
   1400039d2:	test   rax,rax
   1400039d5:	je     0x140003b0e
   1400039db:	or     r10,0xffffffffffffffff
   1400039df:	lea    rax,[rsp+0x70]
   1400039e4:	mov    rcx,r10
   1400039e7:	inc    rcx
   1400039ea:	cmp    BYTE PTR [rax+rcx*1],dil
   1400039ee:	jne    0x1400039e7
   1400039f0:	test   ecx,ecx
   1400039f2:	jle    0x140003a16
   1400039f4:	movsxd rax,ecx
   1400039f7:	cmp    BYTE PTR [rsp+rax*1+0x6f],0xa
   1400039fc:	jne    0x140003a16
   1400039fe:	lea    eax,[rcx-0x1]
   140003a01:	movsxd rcx,eax
   140003a04:	cmp    rcx,0x100
   140003a0b:	jae    0x140003b22
   140003a11:	mov    BYTE PTR [rsp+rcx*1+0x70],dil
   140003a16:	lea    rcx,[rsp+0x70]
   140003a1b:	mov    rax,r10
   140003a1e:	inc    rax
   140003a21:	cmp    BYTE PTR [rcx+rax*1],dil
   140003a25:	jne    0x140003a1e
   140003a27:	test   rax,rax
   140003a2a:	je     0x140003acd
   140003a30:	lea    r8,[rsp+0x70]
   140003a35:	mov    edx,0x100
   140003a3a:	sub    r8,r14
   140003a3d:	mov    rcx,r14
   140003a40:	lea    rax,[rdx+0x7ffffefe]
   140003a47:	test   rax,rax
   140003a4a:	je     0x140003a5f
   140003a4c:	mov    al,BYTE PTR [r8+rcx*1]
   140003a50:	test   al,al
   140003a52:	je     0x140003a5f
   140003a54:	mov    BYTE PTR [rcx],al
   140003a56:	inc    rcx
   140003a59:	sub    rdx,0x1
   140003a5d:	jne    0x140003a40
   140003a5f:	test   rdx,rdx
   140003a62:	jne    0x140003a67
   140003a64:	dec    rcx
   140003a67:	mov    BYTE PTR [rcx],dil
   140003a6a:	mov    rax,r10
   140003a6d:	inc    rax
   140003a70:	cmp    BYTE PTR [r14+rax*1],dil
   140003a74:	jne    0x140003a6d
   140003a76:	dec    eax
   140003a78:	movsxd rcx,eax
   140003a7b:	add    rcx,r14
   140003a7e:	call   0x1400011a0
   140003a83:	lea    rcx,[r15+0x768]
   140003a8a:	mov    r9,r14
   140003a8d:	sub    r9,rcx
   140003a90:	mov    edx,0x100
   140003a95:	mov    r8d,edi
   140003a98:	lea    rax,[rdx+0x7ffffefe]
   140003a9f:	test   rax,rax
   140003aa2:	je     0x140003ab7
   140003aa4:	mov    al,BYTE PTR [r9+rcx*1]
   140003aa8:	test   al,al
   140003aaa:	je     0x140003ab7
   140003aac:	mov    BYTE PTR [rcx],al
   140003aae:	inc    rcx
   140003ab1:	sub    rdx,0x1
   140003ab5:	jne    0x140003a98
   140003ab7:	test   rdx,rdx
   140003aba:	jne    0x140003ac5
   140003abc:	dec    rcx
   140003abf:	mov    r8d,0x8007007a
   140003ac5:	mov    BYTE PTR [rcx],dil
   140003ac8:	test   r8d,r8d
   140003acb:	js     0x140003b09
   140003acd:	cmp    DWORD PTR [rbp+0xf8],edi
   140003ad3:	jne    0x1400037b6
   140003ad9:	xor    eax,eax
   140003adb:	mov    rcx,QWORD PTR [rbp+0x70]
   140003adf:	xor    rcx,rsp
   140003ae2:	call   0x140005520
   140003ae7:	mov    rbx,QWORD PTR [rsp+0x1d0]
   140003aef:	add    rsp,0x180
   140003af6:	pop    r15
   140003af8:	pop    r14
   140003afa:	pop    r13
   140003afc:	pop    r12
   140003afe:	pop    rdi
   140003aff:	pop    rsi
   140003b00:	pop    rbp
   140003b01:	ret    
   140003b02:	mov    eax,0x1
   140003b07:	jmp    0x140003adb
   140003b09:	mov    eax,r10d
   140003b0c:	jmp    0x140003adb
   140003b0e:	lea    rdx,[rip+0x338b]        # 0x140006ea0
   140003b15:	mov    rcx,rsi
   140003b18:	call   0x140001008
   140003b1d:	or     eax,0xffffffff
   140003b20:	jmp    0x140003adb
   140003b22:	call   0x1400056f8
   140003b27:	int3   
   140003b28:	int3   
   140003b29:	int3   
   140003b2a:	int3   
   140003b2b:	int3   
   140003b2c:	int3   
   140003b2d:	int3   
   140003b2e:	int3   
   140003b2f:	int3   
   140003b30:	mov    QWORD PTR [rsp+0x8],rbx
   140003b35:	mov    QWORD PTR [rsp+0x18],rbp
   140003b3a:	mov    QWORD PTR [rsp+0x20],rsi
   140003b3f:	push   rdi
   140003b40:	sub    rsp,0x160
   140003b47:	mov    rax,QWORD PTR [rip+0x54ba]        # 0x140009008
   140003b4e:	xor    rax,rsp
   140003b51:	mov    QWORD PTR [rsp+0x150],rax
   140003b59:	mov    rsi,QWORD PTR [rdx+0x20]
   140003b5d:	mov    rdi,rdx
   140003b60:	mov    r8,QWORD PTR [rdx+0x8]
   140003b64:	mov    edx,0x100
   140003b69:	mov    rbp,QWORD PTR [rsi+0x58]
   140003b6d:	lea    rcx,[rsi+0xf7c]
   140003b74:	lea    rax,[rdx+0x7ffffefe]
   140003b7b:	test   rax,rax
   140003b7e:	je     0x140003b95
   140003b80:	mov    al,BYTE PTR [r8]
   140003b83:	test   al,al
   140003b85:	je     0x140003b95
   140003b87:	mov    BYTE PTR [rcx],al
   140003b89:	inc    r8
   140003b8c:	inc    rcx
   140003b8f:	sub    rdx,0x1
   140003b93:	jne    0x140003b74
   140003b95:	test   rdx,rdx
   140003b98:	jne    0x140003b9d
   140003b9a:	dec    rcx
   140003b9d:	mov    BYTE PTR [rcx],0x0
   140003ba0:	mov    DWORD PTR [rsi+0x868],0x1
   140003baa:	mov    DWORD PTR [rsi+0x870],0x1
   140003bb4:	cmp    DWORD PTR [rdi+0x3c],0x0
   140003bb8:	jne    0x140003bc8
   140003bba:	and    DWORD PTR [rip+0x5a37],0x0        # 0x1400095f8
   140003bc1:	xor    eax,eax
   140003bc3:	jmp    0x140003c9f
   140003bc8:	mov    eax,DWORD PTR [rip+0x5a2a]        # 0x1400095f8
   140003bce:	inc    eax
   140003bd0:	cmp    DWORD PTR [rdi+0x3c],0xb
   140003bd4:	mov    DWORD PTR [rip+0x5a1e],eax        # 0x1400095f8
   140003bda:	je     0x140003c1e
   140003bdc:	mov    r9,QWORD PTR [rdi+0x10]
   140003be0:	lea    rcx,[rsp+0x50]
   140003be5:	mov    r8,QWORD PTR [rdi+0x18]
   140003be9:	mov    QWORD PTR [rsp+0x28],rbp
   140003bee:	call   0x1400011d4
   140003bf3:	test   eax,eax
   140003bf5:	jne    0x140003c00
   140003bf7:	or     rax,0xffffffffffffffff
   140003bfb:	jmp    0x140003c9f
   140003c00:	lea    r9,[rsi+0x40]
   140003c04:	mov    rdx,rsi
   140003c07:	lea    r8,[rsp+0x50]
   140003c0c:	mov    rcx,rbp
   140003c0f:	call   0x1400047cc
   140003c14:	and    DWORD PTR [rsi+0x40],0x0
   140003c18:	mov    eax,DWORD PTR [rip+0x59da]        # 0x1400095f8
   140003c1e:	cmp    eax,0x1
   140003c21:	jg     0x140003c29
   140003c23:	cmp    DWORD PTR [rdi+0x3c],0x1
   140003c27:	je     0x140003c60
   140003c29:	lea    rbx,[rsi+0x168]
   140003c30:	mov    QWORD PTR [rsp+0x20],rbp
   140003c35:	mov    rcx,rbx
   140003c38:	lea    r9,[rip+0x27a1]        # 0x1400063e0
   140003c3f:	lea    r8,[rip+0x312a]        # 0x140006d70
   140003c46:	mov    edx,0x200
   140003c4b:	call   0x140001cb8
   140003c50:	mov    rdx,rbx
   140003c53:	lea    rcx,[rip+0x3122]        # 0x140006d7c
   140003c5a:	call   QWORD PTR [rip+0x2688]        # 0x1400062e8
   140003c60:	movzx  eax,WORD PTR [rdi+0x38]
   140003c64:	mov    rcx,rsi
   140003c67:	mov    r9,QWORD PTR [rdi+0x8]
   140003c6b:	mov    rdx,QWORD PTR [rdi+0x18]
   140003c6f:	mov    QWORD PTR [rsp+0x48],rbp
   140003c74:	mov    DWORD PTR [rsp+0x40],0x1
   140003c7c:	and    DWORD PTR [rsp+0x38],0x0
   140003c81:	mov    WORD PTR [rsp+0x30],ax
   140003c86:	movzx  eax,WORD PTR [rdi+0x36]
   140003c8a:	mov    WORD PTR [rsp+0x28],ax
   140003c8f:	mov    rax,QWORD PTR [rdi+0x10]
   140003c93:	mov    QWORD PTR [rsp+0x20],rax
   140003c98:	call   0x140003754
   140003c9d:	cdqe   
   140003c9f:	mov    rcx,QWORD PTR [rsp+0x150]
   140003ca7:	xor    rcx,rsp
   140003caa:	call   0x140005520
   140003caf:	lea    r11,[rsp+0x160]
   140003cb7:	mov    rbx,QWORD PTR [r11+0x10]
   140003cbb:	mov    rbp,QWORD PTR [r11+0x20]
   140003cbf:	mov    rsi,QWORD PTR [r11+0x28]
   140003cc3:	mov    rsp,r11
   140003cc6:	pop    rdi
   140003cc7:	ret    
   140003cc8:	int3   
   140003cc9:	int3   
   140003cca:	int3   
   140003ccb:	int3   
   140003ccc:	int3   
   140003ccd:	int3   
   140003cce:	int3   
   140003ccf:	int3   
   140003cd0:	rex push rbx
   140003cd2:	sub    rsp,0x50
   140003cd6:	mov    rbx,QWORD PTR [rcx+0x8]
   140003cda:	mov    rdx,rcx
   140003cdd:	cmp    DWORD PTR [rbx+0x86c],0x0
   140003ce4:	je     0x140003dfe
   140003cea:	mov    r8d,DWORD PTR [rcx]
   140003ced:	mov    ecx,r8d
   140003cf0:	test   r8d,r8d
   140003cf3:	je     0x140003da9
   140003cf9:	sub    ecx,0x1
   140003cfc:	je     0x140003d6f
   140003cfe:	cmp    ecx,0x1
   140003d01:	je     0x140003d1b
   140003d03:	mov    edx,r8d
   140003d06:	lea    rcx,[rip+0x3273]        # 0x140006f80
   140003d0d:	call   QWORD PTR [rip+0x25d5]        # 0x1400062e8
   140003d13:	or     eax,0xffffffff
   140003d16:	jmp    0x140003e03
   140003d1b:	movzx  eax,WORD PTR [rdx+0x30]
   140003d1f:	lea    r9,[rip+0x3202]        # 0x140006f28
   140003d26:	movzx  ecx,WORD PTR [rdx+0x28]
   140003d2a:	movzx  r8d,WORD PTR [rdx+0x18]
   140003d2f:	mov    DWORD PTR [rsp+0x48],eax
   140003d33:	mov    eax,DWORD PTR [rdx+0x2c]
   140003d36:	mov    DWORD PTR [rsp+0x40],eax
   140003d3a:	mov    rax,QWORD PTR [rdx+0x20]
   140003d3e:	mov    DWORD PTR [rsp+0x38],ecx
   140003d42:	lea    rcx,[rbx+0x168]
   140003d49:	mov    QWORD PTR [rsp+0x30],rax
   140003d4e:	mov    rax,QWORD PTR [rdx+0x10]
   140003d52:	mov    edx,0x200
   140003d57:	mov    DWORD PTR [rsp+0x28],r8d
   140003d5c:	lea    r8,[rip+0x31dd]        # 0x140006f40
   140003d63:	mov    QWORD PTR [rsp+0x20],rax
   140003d68:	call   0x140001cb8
   140003d6d:	jmp    0x140003dea
   140003d6f:	movzx  eax,WORD PTR [rdx+0x1a]
   140003d73:	lea    r9,[rip+0x3176]        # 0x140006ef0
   140003d7a:	movzx  ecx,WORD PTR [rdx+0x18]
   140003d7e:	lea    r8,[rip+0x317b]        # 0x140006f00
   140003d85:	mov    DWORD PTR [rsp+0x30],eax
   140003d89:	mov    rax,QWORD PTR [rdx+0x10]
   140003d8d:	mov    edx,0x200
   140003d92:	mov    DWORD PTR [rsp+0x28],ecx
   140003d96:	lea    rcx,[rbx+0x168]
   140003d9d:	mov    QWORD PTR [rsp+0x20],rax
   140003da2:	call   0x140001cb8
   140003da7:	jmp    0x140003dea
   140003da9:	movzx  ecx,WORD PTR [rdx+0x1a]
   140003dad:	lea    r9,[rip+0x30fc]        # 0x140006eb0
   140003db4:	mov    eax,DWORD PTR [rdx+0x1c]
   140003db7:	movzx  r8d,WORD PTR [rdx+0x18]
   140003dbc:	mov    DWORD PTR [rsp+0x38],eax
   140003dc0:	mov    rax,QWORD PTR [rdx+0x10]
   140003dc4:	mov    edx,0x200
   140003dc9:	mov    DWORD PTR [rsp+0x30],ecx
   140003dcd:	lea    rcx,[rbx+0x168]
   140003dd4:	mov    DWORD PTR [rsp+0x28],r8d
   140003dd9:	lea    r8,[rip+0x30e0]        # 0x140006ec0
   140003de0:	mov    QWORD PTR [rsp+0x20],rax
   140003de5:	call   0x140001cb8
   140003dea:	lea    rdx,[rbx+0x168]
   140003df1:	lea    rcx,[rip+0x2d9c]        # 0x140006b94
   140003df8:	call   QWORD PTR [rip+0x24ea]        # 0x1400062e8
   140003dfe:	mov    eax,0x1
   140003e03:	add    rsp,0x50
   140003e07:	pop    rbx
   140003e08:	ret    
   140003e09:	int3   
   140003e0a:	int3   
   140003e0b:	int3   
   140003e0c:	int3   
   140003e0d:	int3   
   140003e0e:	int3   
   140003e0f:	int3   
   140003e10:	jmp    0x140003cd0
   140003e15:	int3   
   140003e16:	int3   
   140003e17:	int3   
   140003e18:	int3   
   140003e19:	int3   
   140003e1a:	int3   
   140003e1b:	int3   
   140003e1c:	mov    rax,rsp
   140003e1f:	mov    QWORD PTR [rax+0x8],rbx
   140003e23:	mov    QWORD PTR [rax+0x10],rbp
   140003e27:	mov    QWORD PTR [rax+0x18],rsi
   140003e2b:	mov    QWORD PTR [rax+0x20],rdi
   140003e2f:	push   r14
   140003e31:	sub    rsp,0x20
   140003e35:	mov    rbp,rdx
   140003e38:	mov    rbx,rcx
   140003e3b:	mov    rcx,rbp
   140003e3e:	mov    rdx,r8
   140003e41:	call   0x140001718
   140003e46:	mov    rsi,rax
   140003e49:	test   rax,rax
   140003e4c:	je     0x140003eb1
   140003e4e:	mov    edx,0x2e
   140003e53:	mov    rcx,rax
   140003e56:	call   QWORD PTR [rip+0x2374]        # 0x1400061d0
   140003e5c:	xor    r14d,r14d
   140003e5f:	test   rax,rax
   140003e62:	mov    rax,QWORD PTR [rbx+0x8]
   140003e66:	sete   r14b
   140003e6a:	mov    rcx,QWORD PTR [rax]
   140003e6d:	mov    rbx,QWORD PTR [rcx+0x20]
   140003e71:	jmp    0x140003eac
   140003e73:	mov    rdi,QWORD PTR [rbx]
   140003e76:	mov    edx,0x5c
   140003e7b:	mov    rcx,rdi
   140003e7e:	call   QWORD PTR [rip+0x234c]        # 0x1400061d0
   140003e84:	test   rax,rax
   140003e87:	jne    0x140003e8e
   140003e89:	mov    rcx,rsi
   140003e8c:	jmp    0x140003e99
   140003e8e:	cmp    BYTE PTR [rdi],0x5c
   140003e91:	mov    rcx,rbp
   140003e94:	jne    0x140003e99
   140003e96:	inc    rdi
   140003e99:	mov    r8d,r14d
   140003e9c:	mov    rdx,rdi
   140003e9f:	call   0x140001b7c
   140003ea4:	test   eax,eax
   140003ea6:	jne    0x140003ece
   140003ea8:	mov    rbx,QWORD PTR [rbx+0x20]
   140003eac:	test   rbx,rbx
   140003eaf:	jne    0x140003e73
   140003eb1:	xor    eax,eax
   140003eb3:	mov    rbx,QWORD PTR [rsp+0x30]
   140003eb8:	mov    rbp,QWORD PTR [rsp+0x38]
   140003ebd:	mov    rsi,QWORD PTR [rsp+0x40]
   140003ec2:	mov    rdi,QWORD PTR [rsp+0x48]
   140003ec7:	add    rsp,0x20
   140003ecb:	pop    r14
   140003ecd:	ret    
   140003ece:	mov    eax,0x1
   140003ed3:	jmp    0x140003eb3
   140003ed5:	int3   
   140003ed6:	int3   
   140003ed7:	int3   
   140003ed8:	int3   
   140003ed9:	int3   
   140003eda:	int3   
   140003edb:	int3   
   140003edc:	int3   
   140003edd:	int3   
   140003ede:	int3   
   140003edf:	int3   
   140003ee0:	rex push rbx
   140003ee2:	sub    rsp,0x20
   140003ee6:	mov    ebx,0x1
   140003eeb:	cmp    ecx,ebx
   140003eed:	cmovb  ecx,ebx
   140003ef0:	call   QWORD PTR [rip+0x23ba]        # 0x1400062b0
   140003ef6:	test   rax,rax
   140003ef9:	jne    0x140003f05
   140003efb:	mov    rcx,QWORD PTR [rip+0x5746]        # 0x140009648
   140003f02:	mov    DWORD PTR [rcx+0x60],ebx
   140003f05:	add    rsp,0x20
   140003f09:	pop    rbx
   140003f0a:	ret    
   140003f0b:	int3   
   140003f0c:	int3   
   140003f0d:	int3   
   140003f0e:	int3   
   140003f0f:	int3   
   140003f10:	int3   
   140003f11:	int3   
   140003f12:	int3   
   140003f13:	int3   
   140003f14:	int3   
   140003f15:	int3   
   140003f16:	int3   
   140003f17:	int3   
   140003f18:	int3   
   140003f19:	int3   
   140003f1a:	int3   
   140003f1b:	int3   
   140003f1c:	int3   
   140003f1d:	int3   
   140003f1e:	int3   
   140003f1f:	int3   
   140003f20:	rex.W jmp QWORD PTR [rip+0x2391]        # 0x1400062b8
   140003f27:	int3   
   140003f28:	int3   
   140003f29:	int3   
   140003f2a:	int3   
   140003f2b:	int3   
   140003f2c:	int3   
   140003f2d:	int3   
   140003f2e:	int3   
   140003f2f:	int3   
   140003f30:	mov    QWORD PTR [rsp+0x18],rbx
   140003f35:	mov    DWORD PTR [rsp+0x10],edx
   140003f39:	push   rbp
   140003f3a:	push   rsi
   140003f3b:	push   rdi
   140003f3c:	push   r12
   140003f3e:	push   r13
   140003f40:	push   r14
   140003f42:	push   r15
   140003f44:	sub    rsp,0x30
   140003f48:	and    DWORD PTR [rsp+0x70],0x0
   140003f4d:	xor    r12d,r12d
   140003f50:	mov    DWORD PTR [rcx],0x2
   140003f56:	mov    rdi,r9
   140003f59:	mov    BYTE PTR [rcx+0x468],r12b
   140003f60:	mov    r13,r8
   140003f63:	or     QWORD PTR [rcx+0x28],0xffffffffffffffff
   140003f68:	mov    r15d,edx
   140003f6b:	mov    rbx,rcx
   140003f6e:	call   0x1400042cc
   140003f73:	test   eax,eax
   140003f75:	jne    0x140003f7e
   140003f77:	xor    eax,eax
   140003f79:	jmp    0x1400042ad
   140003f7e:	cmp    DWORD PTR [rbx+0x1c],r12d
   140003f82:	je     0x140003fde
   140003f84:	cmp    r15d,0x2
   140003f88:	jge    0x140003fa3
   140003f8a:	mov    eax,DWORD PTR [rbx+0x107c]
   140003f90:	cmp    eax,0x1
   140003f93:	jle    0x140003fa3
   140003f95:	mov    r13,QWORD PTR [rbx+0x1080]
   140003f9c:	mov    r15d,eax
   140003f9f:	mov    DWORD PTR [rsp+0x78],eax
   140003fa3:	mov    r8,rdi
   140003fa6:	lea    rdx,[rbx+0x68]
   140003faa:	mov    rcx,rbx
   140003fad:	call   0x1400046d4
   140003fb2:	test   rax,rax
   140003fb5:	jne    0x140003fd3
   140003fb7:	lea    r9,[rbx+0x68]
   140003fbb:	lea    rdx,[rip+0x2c7e]        # 0x140006c40
   140003fc2:	lea    r8,[rip+0x2417]        # 0x1400063e0
   140003fc9:	mov    rcx,rdi
   140003fcc:	call   0x140001008
   140003fd1:	jmp    0x140003f77
   140003fd3:	mov    ecx,0x1
   140003fd8:	mov    DWORD PTR [rsp+0x70],ecx
   140003fdc:	jmp    0x140003fe2
   140003fde:	mov    ecx,DWORD PTR [rsp+0x70]
   140003fe2:	mov    ebp,0x1
   140003fe7:	movsxd rax,r15d
   140003fea:	mov    QWORD PTR [rsp+0x20],rax
   140003fef:	mov    r14d,ebp
   140003ff2:	cmp    rbp,rax
   140003ff5:	jge    0x1400041df
   140003ffb:	mov    rsi,QWORD PTR [r13+r14*8+0x0]
   140004000:	mov    al,BYTE PTR [rsi]
   140004002:	sub    al,0x2d
   140004004:	test   al,0xfd
   140004006:	je     0x140004076
   140004008:	cmp    r12d,0x1
   14000400c:	jne    0x140004050
   14000400e:	mov    edx,0x100
   140004013:	lea    rcx,[rbx+0x468]
   14000401a:	lea    rax,[rdx+0x7ffffefe]
   140004021:	test   rax,rax
   140004024:	je     0x14000403a
   140004026:	mov    al,BYTE PTR [rsi]
   140004028:	test   al,al
   14000402a:	je     0x14000403a
   14000402c:	mov    BYTE PTR [rcx],al
   14000402e:	inc    rsi
   140004031:	inc    rcx
   140004034:	sub    rdx,0x1
   140004038:	jne    0x14000401a
   14000403a:	test   rdx,rdx
   14000403d:	jne    0x140004042
   14000403f:	dec    rcx
   140004042:	mov    BYTE PTR [rcx],0x0
   140004045:	mov    r12d,0x2
   14000404b:	jmp    0x1400041c6
   140004050:	mov    r8,rdi
   140004053:	mov    rdx,rsi
   140004056:	mov    rcx,rbx
   140004059:	call   0x1400046d4
   14000405e:	test   rax,rax
   140004061:	je     0x140004220
   140004067:	mov    ecx,DWORD PTR [rsp+0x70]
   14000406b:	inc    ecx
   14000406d:	mov    DWORD PTR [rsp+0x70],ecx
   140004071:	jmp    0x1400041ca
   140004076:	cmp    r12d,0x1
   14000407a:	je     0x140004271
   140004080:	inc    rsi
   140004083:	mov    al,BYTE PTR [rsi]
   140004085:	test   al,al
   140004087:	je     0x1400041ca
   14000408d:	lea    r15d,[rbp+0x1]
   140004091:	movsx  ecx,al
   140004094:	call   QWORD PTR [rip+0x2226]        # 0x1400062c0
   14000409a:	mov    edx,eax
   14000409c:	cmp    eax,0x45
   14000409f:	jg     0x140004117
   1400040a1:	je     0x140004103
   1400040a3:	sub    edx,0x23
   1400040a6:	je     0x1400040f8
   1400040a8:	sub    edx,0x1c
   1400040ab:	je     0x14000424c
   1400040b1:	sub    edx,0x2
   1400040b4:	je     0x1400040ec
   1400040b6:	sub    edx,0x2
   1400040b9:	je     0x1400040d8
   1400040bb:	cmp    edx,0x1
   1400040be:	jne    0x140004254
   1400040c4:	cmp    DWORD PTR [rbx],0x2
   1400040c7:	jne    0x14000422d
   1400040cd:	mov    DWORD PTR [rbx],0x3
   1400040d3:	jmp    0x1400041b9
   1400040d8:	cmp    DWORD PTR [rbx],0x2
   1400040db:	jne    0x14000422d
   1400040e1:	mov    DWORD PTR [rbx],0x5
   1400040e7:	jmp    0x1400041b9
   1400040ec:	mov    DWORD PTR [rbx+0x10],0x1
   1400040f3:	jmp    0x1400041b9
   1400040f8:	inc    DWORD PTR [rbx+0x1088]
   1400040fe:	jmp    0x1400041b9
   140004103:	cmp    DWORD PTR [rbx],0x2
   140004106:	jne    0x14000422d
   14000410c:	mov    DWORD PTR [rbx],0x4
   140004112:	jmp    0x1400041b9
   140004117:	sub    edx,0x4c
   14000411a:	je     0x1400041a9
   140004120:	sub    edx,0x6
   140004123:	je     0x14000419d
   140004125:	sub    edx,0x7
   140004128:	je     0x140004194
   14000412a:	cmp    edx,0x1
   14000412d:	jne    0x140004254
   140004133:	inc    rsi
   140004136:	cmp    BYTE PTR [rsi],0x0
   140004139:	jne    0x140004153
   14000413b:	cmp    r15d,DWORD PTR [rsp+0x78]
   140004140:	jge    0x140004271
   140004146:	inc    ebp
   140004148:	inc    r15d
   14000414b:	inc    r14
   14000414e:	mov    rsi,QWORD PTR [r13+r14*8+0x0]
   140004153:	lea    rcx,[rbx+0xe7c]
   14000415a:	mov    edx,0x100
   14000415f:	sub    rsi,rcx
   140004162:	lea    rax,[rdx+0x7ffffefe]
   140004169:	test   rax,rax
   14000416c:	je     0x140004180
   14000416e:	mov    al,BYTE PTR [rsi+rcx*1]
   140004171:	test   al,al
   140004173:	je     0x140004180
   140004175:	mov    BYTE PTR [rcx],al
   140004177:	inc    rcx
   14000417a:	sub    rdx,0x1
   14000417e:	jne    0x140004162
   140004180:	test   rdx,rdx
   140004183:	jne    0x140004188
   140004185:	dec    rcx
   140004188:	mov    BYTE PTR [rcx],0x0
   14000418b:	lea    rsi,[rip+0x2532]        # 0x1400066c4
   140004192:	jmp    0x1400041b9
   140004194:	mov    DWORD PTR [rbx+0x14],0x1
   14000419b:	jmp    0x1400041b9
   14000419d:	mov    DWORD PTR [rbx+0x86c],0x1
   1400041a7:	jmp    0x1400041b9
   1400041a9:	cmp    r12d,0x2
   1400041ad:	je     0x140004268
   1400041b3:	mov    r12d,0x1
   1400041b9:	inc    rsi
   1400041bc:	mov    al,BYTE PTR [rsi]
   1400041be:	test   al,al
   1400041c0:	jne    0x140004091
   1400041c6:	mov    ecx,DWORD PTR [rsp+0x70]
   1400041ca:	inc    ebp
   1400041cc:	inc    r14
   1400041cf:	cmp    r14,QWORD PTR [rsp+0x20]
   1400041d4:	jl     0x140003ffb
   1400041da:	mov    r15d,DWORD PTR [rsp+0x78]
   1400041df:	cmp    DWORD PTR [rbx+0x1088],0x3
   1400041e6:	jge    0x1400041ef
   1400041e8:	and    DWORD PTR [rbx+0x1088],0x0
   1400041ef:	mov    eax,DWORD PTR [rbx+0x1c]
   1400041f2:	test   eax,eax
   1400041f4:	je     0x1400041fd
   1400041f6:	and    DWORD PTR [rbx+0x1088],0x0
   1400041fd:	cmp    r15d,0x1
   140004201:	jne    0x140004207
   140004203:	test   eax,eax
   140004205:	je     0x14000424c
   140004207:	cmp    r12d,0x1
   14000420b:	je     0x140004271
   14000420d:	cmp    DWORD PTR [rbx],0x5
   140004210:	jne    0x140004285
   140004212:	cmp    ecx,0x2
   140004215:	je     0x140004285
   140004217:	lea    rdx,[rip+0x2df2]        # 0x140007010
   14000421e:	jmp    0x140004278
   140004220:	movsxd r9,ebp
   140004223:	mov    r9,QWORD PTR [r13+r9*8+0x0]
   140004228:	jmp    0x140003fbb
   14000422d:	movsx  r9d,BYTE PTR [rsi]
   140004231:	lea    r8,[rip+0x2d7c]        # 0x140006fb4
   140004238:	lea    rdx,[rip+0x2d79]        # 0x140006fb8
   14000423f:	mov    rcx,rdi
   140004242:	call   0x140001008
   140004247:	jmp    0x140003f77
   14000424c:	mov    DWORD PTR [rbx],0x1
   140004252:	jmp    0x1400042a8
   140004254:	movsxd r9,ebp
   140004257:	lea    rdx,[rip+0x2d9a]        # 0x140006ff8
   14000425e:	mov    r9,QWORD PTR [r13+r9*8+0x0]
   140004263:	jmp    0x140003fc2
   140004268:	lea    rdx,[rip+0x2d61]        # 0x140006fd0
   14000426f:	jmp    0x140004278
   140004271:	lea    rdx,[rip+0x2d28]        # 0x140006fa0
   140004278:	mov    rcx,rdi
   14000427b:	call   0x140001008
   140004280:	jmp    0x140003f77
   140004285:	test   ecx,ecx
   140004287:	jne    0x140004292
   140004289:	lea    rdx,[rip+0x2d90]        # 0x140007020
   140004290:	jmp    0x140004278
   140004292:	test   eax,eax
   140004294:	je     0x1400042a8
   140004296:	cmp    DWORD PTR [rbx],0x2
   140004299:	mov    DWORD PTR [rbx+0x10],0x1
   1400042a0:	jne    0x1400042a8
   1400042a2:	mov    DWORD PTR [rbx],0x4
   1400042a8:	mov    eax,0x1
   1400042ad:	mov    rbx,QWORD PTR [rsp+0x80]
   1400042b5:	add    rsp,0x30
   1400042b9:	pop    r15
   1400042bb:	pop    r14
   1400042bd:	pop    r13
   1400042bf:	pop    r12
   1400042c1:	pop    rdi
   1400042c2:	pop    rsi
   1400042c3:	pop    rbp
   1400042c4:	ret    
   1400042c5:	int3   
   1400042c6:	int3   
   1400042c7:	int3   
   1400042c8:	int3   
   1400042c9:	int3   
   1400042ca:	int3   
   1400042cb:	int3   
   1400042cc:	mov    rax,rsp
   1400042cf:	mov    QWORD PTR [rax+0x10],rbx
   1400042d3:	mov    QWORD PTR [rax+0x18],rsi
   1400042d7:	mov    QWORD PTR [rax+0x20],rdi
   1400042db:	push   rbp
   1400042dc:	push   r12
   1400042de:	push   r13
   1400042e0:	push   r14
   1400042e2:	push   r15
   1400042e4:	lea    rbp,[rax-0x208]
   1400042eb:	sub    rsp,0x2e0
   1400042f2:	mov    rax,QWORD PTR [rip+0x4d0f]        # 0x140009008
   1400042f9:	xor    rax,rsp
   1400042fc:	mov    QWORD PTR [rbp+0x1d0],rax
   140004303:	mov    rbx,rcx
   140004306:	lea    rdx,[rbp+0xd0]
   14000430d:	mov    r13d,0x100
   140004313:	xor    ecx,ecx
   140004315:	mov    r8d,r13d
   140004318:	call   QWORD PTR [rip+0x1d72]        # 0x140006090
   14000431e:	xor    r15d,r15d
   140004321:	test   eax,eax
   140004323:	je     0x140004696
   140004329:	xor    r8d,r8d
   14000432c:	lea    rcx,[rbp+0xd0]
   140004333:	mov    edx,0x8000
   140004338:	call   0x140004b20
   14000433d:	mov    rdi,rax
   140004340:	cmp    rax,0xffffffffffffffff
   140004344:	je     0x140004696
   14000434a:	lea    r8d,[r15+0x40]
   14000434e:	mov    rcx,rax
   140004351:	lea    rdx,[rbp-0x80]
   140004355:	call   0x140004e40
   14000435a:	cmp    eax,0x40
   14000435d:	jne    0x14000468e
   140004363:	mov    edx,DWORD PTR [rbp-0x44]
   140004366:	xor    r8d,r8d
   140004369:	mov    rcx,rdi
   14000436c:	call   0x140004a70
   140004371:	cmp    eax,0xffffffff
   140004374:	je     0x14000468e
   14000437a:	lea    esi,[r13+0x8]
   14000437e:	mov    rcx,rdi
   140004381:	mov    r8d,esi
   140004384:	lea    rdx,[rbp-0x40]
   140004388:	call   0x140004e40
   14000438d:	cmp    eax,esi
   14000438f:	jne    0x14000468e
   140004395:	movzx  ecx,WORD PTR [rbp-0x2c]
   140004399:	xor    r8d,r8d
   14000439c:	mov    edx,DWORD PTR [rbp-0x44]
   14000439f:	add    ecx,0x18
   1400043a2:	add    edx,ecx
   1400043a4:	mov    rcx,rdi
   1400043a7:	call   0x140004a70
   1400043ac:	cmp    eax,0xffffffff
   1400043af:	je     0x14000468e
   1400043b5:	mov    eax,DWORD PTR [rbp-0x4]
   1400043b8:	mov    r14d,r15d
   1400043bb:	movzx  esi,WORD PTR [rbp-0x3a]
   1400043bf:	mov    r12d,r15d
   1400043c2:	mov    r15d,DWORD PTR [rbp+0x7c]
   1400043c6:	xor    r10d,r10d
   1400043c9:	mov    DWORD PTR [rsp+0x24],eax
   1400043cd:	test   si,si
   1400043d0:	je     0x140004530
   1400043d6:	mov    eax,0xffff
   1400043db:	lea    rdx,[rsp+0x38]
   1400043e0:	mov    r8d,0x28
   1400043e6:	mov    rcx,rdi
   1400043e9:	add    si,ax
   1400043ec:	call   0x140004e40
   1400043f1:	cmp    eax,0x28
   1400043f4:	jne    0x14000468e
   1400043fa:	mov    rax,QWORD PTR [rsp+0x38]
   1400043ff:	cmp    rax,QWORD PTR [rip+0x2c3a]        # 0x140007040
   140004406:	jne    0x140004446
   140004408:	mov    edx,DWORD PTR [rsp+0x4c]
   14000440c:	xor    r8d,r8d
   14000440f:	mov    rcx,rdi
   140004412:	call   0x140004a70
   140004417:	cmp    eax,0xffffffff
   14000441a:	je     0x14000468e
   140004420:	mov    r8d,0x10
   140004426:	lea    rdx,[rsp+0x28]
   14000442b:	mov    rcx,rdi
   14000442e:	call   0x140004e40
   140004433:	cmp    eax,0x10
   140004436:	jne    0x14000468e
   14000443c:	cmp    DWORD PTR [rsp+0x28],0x4e584653
   140004444:	je     0x14000449a
   140004446:	mov    r9d,DWORD PTR [rsp+0x4c]
   14000444b:	xor    r10d,r10d
   14000444e:	mov    r8d,DWORD PTR [rsp+0x48]
   140004453:	test   r9d,r9d
   140004456:	je     0x140004468
   140004458:	test   r8d,r8d
   14000445b:	je     0x140004468
   14000445d:	lea    eax,[r8+r9*1]
   140004461:	cmp    r14d,eax
   140004464:	cmovl  r14d,eax
   140004468:	test   r15d,r15d
   14000446b:	je     0x1400043cd
   140004471:	mov    ecx,DWORD PTR [rsp+0x44]
   140004475:	mov    edx,DWORD PTR [rbp+0x78]
   140004478:	cmp    ecx,edx
   14000447a:	ja     0x1400043cd
   140004480:	lea    eax,[rcx+r8*1]
   140004484:	cmp    eax,edx
   140004486:	jbe    0x1400043cd
   14000448c:	mov    r12d,edx
   14000448f:	sub    r12d,ecx
   140004492:	add    r12d,r9d
   140004495:	jmp    0x1400043cd
   14000449a:	mov    esi,DWORD PTR [rsp+0x30]
   14000449e:	xor    r10d,r10d
   1400044a1:	mov    ecx,DWORD PTR [rsp+0x4c]
   1400044a5:	mov    eax,DWORD PTR [rsp+0x34]
   1400044a9:	add    ecx,0x10
   1400044ac:	add    ecx,esi
   1400044ae:	mov    DWORD PTR [rbx+0x1c],0x1
   1400044b5:	mov    DWORD PTR [rbx+0x20],ecx
   1400044b8:	mov    DWORD PTR [rbx+0x24],eax
   1400044bb:	test   esi,esi
   1400044bd:	je     0x140004530
   1400044bf:	mov    ecx,esi
   1400044c1:	call   QWORD PTR [rip+0x1de9]        # 0x1400062b0
   1400044c7:	xor    r10d,r10d
   1400044ca:	mov    QWORD PTR [rbx+0x1080],rax
   1400044d1:	test   rax,rax
   1400044d4:	je     0x140004530
   1400044d6:	mov    r8d,esi
   1400044d9:	mov    rdx,rax
   1400044dc:	mov    rcx,rdi
   1400044df:	call   0x140004e40
   1400044e4:	xor    r10d,r10d
   1400044e7:	cmp    eax,DWORD PTR [rsp+0x30]
   1400044eb:	jne    0x140004530
   1400044ed:	mov    rax,QWORD PTR [rbx+0x1080]
   1400044f4:	mov    DWORD PTR [rbx+0x107c],0x1
   1400044fe:	cmp    QWORD PTR [rax+0x8],r10
   140004502:	je     0x140004530
   140004504:	movsxd rax,DWORD PTR [rbx+0x107c]
   14000450b:	mov    rcx,QWORD PTR [rbx+0x1080]
   140004512:	add    QWORD PTR [rcx+rax*8],rcx
   140004516:	inc    DWORD PTR [rbx+0x107c]
   14000451c:	movsxd rcx,DWORD PTR [rbx+0x107c]
   140004523:	mov    rax,QWORD PTR [rbx+0x1080]
   14000452a:	cmp    QWORD PTR [rax+rcx*8],r10
   14000452e:	jne    0x140004504
   140004530:	cmp    DWORD PTR [rbx+0x1c],r10d
   140004534:	jne    0x140004593
   140004536:	test   r12d,r12d
   140004539:	je     0x140004593
   14000453b:	xor    r8d,r8d
   14000453e:	mov    edx,r12d
   140004541:	mov    rcx,rdi
   140004544:	call   0x140004a70
   140004549:	cmp    eax,0xffffffff
   14000454c:	je     0x14000468e
   140004552:	mov    esi,0x1c
   140004557:	jmp    0x14000458e
   140004559:	mov    r8d,esi
   14000455c:	lea    rdx,[rsp+0x60]
   140004561:	mov    rcx,rdi
   140004564:	call   0x140004e40
   140004569:	cmp    eax,esi
   14000456b:	jne    0x14000468e
   140004571:	mov    eax,DWORD PTR [rsp+0x78]
   140004575:	test   eax,eax
   140004577:	je     0x14000458a
   140004579:	mov    ecx,DWORD PTR [rsp+0x70]
   14000457d:	test   ecx,ecx
   14000457f:	je     0x14000458a
   140004581:	add    eax,ecx
   140004583:	cmp    r14d,eax
   140004586:	cmovl  r14d,eax
   14000458a:	add    r15d,0xffffffe4
   14000458e:	cmp    r15d,esi
   140004591:	jae    0x140004559
   140004593:	xor    r15d,r15d
   140004596:	cmp    DWORD PTR [rbx+0x1c],r15d
   14000459a:	jne    0x140004657
   1400045a0:	xor    edx,edx
   1400045a2:	lea    r8d,[r15+0x2]
   1400045a6:	mov    rcx,rdi
   1400045a9:	call   0x140004a70
   1400045ae:	mov    esi,eax
   1400045b0:	cmp    eax,r14d
   1400045b3:	jle    0x140004651
   1400045b9:	xor    r8d,r8d
   1400045bc:	mov    edx,r14d
   1400045bf:	mov    rcx,rdi
   1400045c2:	call   0x140004a70
   1400045c7:	lea    r12d,[r15+0x4]
   1400045cb:	cmp    r14d,eax
   1400045ce:	jne    0x1400045ef
   1400045d0:	mov    r8d,r12d
   1400045d3:	lea    rdx,[rsp+0x20]
   1400045d8:	mov    rcx,rdi
   1400045db:	call   0x140004e40
   1400045e0:	cmp    eax,r12d
   1400045e3:	jne    0x1400045ef
   1400045e5:	cmp    DWORD PTR [rsp+0x20],0x4643534d
   1400045ed:	je     0x140004640
   1400045ef:	mov    ecx,DWORD PTR [rsp+0x24]
   1400045f3:	xor    edx,edx
   1400045f5:	mov    eax,r14d
   1400045f8:	div    ecx
   1400045fa:	test   edx,edx
   1400045fc:	je     0x140004651
   1400045fe:	xor    edx,edx
   140004600:	dec    r14d
   140004603:	add    r14d,ecx
   140004606:	xor    r8d,r8d
   140004609:	mov    eax,r14d
   14000460c:	div    ecx
   14000460e:	mov    rcx,rdi
   140004611:	sub    r14d,edx
   140004614:	mov    edx,r14d
   140004617:	call   0x140004a70
   14000461c:	cmp    r14d,eax
   14000461f:	jne    0x140004651
   140004621:	mov    r8d,r12d
   140004624:	lea    rdx,[rsp+0x20]
   140004629:	mov    rcx,rdi
   14000462c:	call   0x140004e40
   140004631:	cmp    eax,r12d
   140004634:	jne    0x140004651
   140004636:	cmp    DWORD PTR [rsp+0x20],0x4643534d
   14000463e:	jne    0x140004651
   140004640:	sub    esi,r14d
   140004643:	mov    DWORD PTR [rbx+0x20],r14d
   140004647:	mov    DWORD PTR [rbx+0x24],esi
   14000464a:	mov    DWORD PTR [rbx+0x1c],0x1
   140004651:	cmp    DWORD PTR [rbx+0x1c],r15d
   140004655:	je     0x14000468e
   140004657:	add    rbx,0x68
   14000465b:	lea    rcx,[rbp+0xd0]
   140004662:	sub    rcx,rbx
   140004665:	lea    rax,[r13+0x7ffffefe]
   14000466c:	test   rax,rax
   14000466f:	je     0x140004683
   140004671:	mov    al,BYTE PTR [rcx+rbx*1]
   140004674:	test   al,al
   140004676:	je     0x140004683
   140004678:	mov    BYTE PTR [rbx],al
   14000467a:	inc    rbx
   14000467d:	sub    r13,0x1
   140004681:	jne    0x140004665
   140004683:	test   r13,r13
   140004686:	jne    0x14000468b
   140004688:	dec    rbx
   14000468b:	mov    BYTE PTR [rbx],r15b
   14000468e:	mov    rcx,rdi
   140004691:	call   0x140004980
   140004696:	mov    eax,0x1
   14000469b:	mov    rcx,QWORD PTR [rbp+0x1d0]
   1400046a2:	xor    rcx,rsp
   1400046a5:	call   0x140005520
   1400046aa:	lea    r11,[rsp+0x2e0]
   1400046b2:	mov    rbx,QWORD PTR [r11+0x38]
   1400046b6:	mov    rsi,QWORD PTR [r11+0x40]
   1400046ba:	mov    rdi,QWORD PTR [r11+0x48]
   1400046be:	mov    rsp,r11
   1400046c1:	pop    r15
   1400046c3:	pop    r14
   1400046c5:	pop    r13
   1400046c7:	pop    r12
   1400046c9:	pop    rbp
   1400046ca:	ret    
   1400046cb:	int3   
   1400046cc:	int3   
   1400046cd:	int3   
   1400046ce:	int3   
   1400046cf:	int3   
   1400046d0:	int3   
   1400046d1:	int3   
   1400046d2:	int3   
   1400046d3:	int3   
   1400046d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400046d9:	mov    QWORD PTR [rsp+0x10],rsi
   1400046de:	push   rdi
   1400046df:	sub    rsp,0x20
   1400046e3:	cmp    QWORD PTR [rcx+0x8],0x0
   1400046e8:	mov    rdi,r8
   1400046eb:	mov    rsi,rdx
   1400046ee:	mov    rbx,rcx
   1400046f1:	jne    0x140004736
   1400046f3:	mov    ecx,0x10
   1400046f8:	call   QWORD PTR [rip+0x1bb2]        # 0x1400062b0
   1400046fe:	test   rax,rax
   140004701:	jne    0x140004724
   140004703:	lea    r9,[rip+0x1cf6]        # 0x140006400
   14000470a:	mov    rcx,rdi
   14000470d:	lea    r8,[rip+0x1ccc]        # 0x1400063e0
   140004714:	lea    rdx,[rip+0x1ccd]        # 0x1400063e8
   14000471b:	call   0x140001008
   140004720:	xor    eax,eax
   140004722:	jmp    0x14000472d
   140004724:	and    QWORD PTR [rax],0x0
   140004728:	and    QWORD PTR [rax+0x8],0x0
   14000472d:	mov    QWORD PTR [rbx+0x8],rax
   140004731:	test   rax,rax
   140004734:	je     0x140004745
   140004736:	mov    rcx,QWORD PTR [rbx+0x8]
   14000473a:	mov    r9,rdi
   14000473d:	mov    rdx,rsi
   140004740:	call   0x140001054
   140004745:	mov    rbx,QWORD PTR [rsp+0x30]
   14000474a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000474f:	add    rsp,0x20
   140004753:	pop    rdi
   140004754:	ret    
   140004755:	int3   
   140004756:	int3   
   140004757:	int3   
   140004758:	int3   
   140004759:	int3   
   14000475a:	int3   
   14000475b:	int3   
   14000475c:	mov    QWORD PTR [rsp+0x8],rbx
   140004761:	push   rdi
   140004762:	sub    rsp,0x30
   140004766:	cmp    DWORD PTR [rcx+0x18],0x0
   14000476a:	mov    rdi,rdx
   14000476d:	mov    rbx,rcx
   140004770:	je     0x140004783
   140004772:	lea    rcx,[rip+0x2027]        # 0x1400067a0
   140004779:	call   QWORD PTR [rip+0x1b69]        # 0x1400062e8
   14000477f:	and    DWORD PTR [rbx+0x18],0x0
   140004783:	lea    r9,[rip+0x1c56]        # 0x1400063e0
   14000478a:	mov    QWORD PTR [rsp+0x20],rdi
   14000478f:	lea    r8,[rip+0x25da]        # 0x140006d70
   140004796:	mov    edx,0x200
   14000479b:	lea    rcx,[rbx+0x168]
   1400047a2:	call   0x140001cb8
   1400047a7:	lea    rdx,[rbx+0x168]
   1400047ae:	lea    rcx,[rip+0x23df]        # 0x140006b94
   1400047b5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400047ba:	add    rsp,0x30
   1400047be:	pop    rdi
   1400047bf:	rex.W jmp QWORD PTR [rip+0x1b22]        # 0x1400062e8
   1400047c6:	int3   
   1400047c7:	int3   
   1400047c8:	int3   
   1400047c9:	int3   
   1400047ca:	int3   
   1400047cb:	int3   
   1400047cc:	sub    rsp,0x38
   1400047d0:	cmp    DWORD PTR [r9],0x6
   1400047d4:	mov    r10,rcx
   1400047d7:	jg     0x14000485d
   1400047dd:	je     0x140004851
   1400047df:	mov    edx,DWORD PTR [r9]
   1400047e2:	test   edx,edx
   1400047e4:	je     0x140004968
   1400047ea:	sub    edx,0x1
   1400047ed:	je     0x140004845
   1400047ef:	sub    edx,0x1
   1400047f2:	je     0x140004839
   1400047f4:	sub    edx,0x1
   1400047f7:	je     0x14000481b
   1400047f9:	sub    edx,0x1
   1400047fc:	je     0x14000480f
   1400047fe:	cmp    edx,0x1
   140004801:	jne    0x140004879
   140004803:	lea    rdx,[rip+0x23e6]        # 0x140006bf0
   14000480a:	jmp    0x140004959
   14000480f:	lea    rdx,[rip+0x28da]        # 0x1400070f0
   140004816:	jmp    0x140004959
   14000481b:	mov    eax,DWORD PTR [r9+0x4]
   14000481f:	lea    rdx,[rip+0x289a]        # 0x1400070c0
   140004826:	mov    r9,r8
   140004829:	mov    DWORD PTR [rsp+0x20],eax
   14000482d:	lea    r8,[rip+0x2884]        # 0x1400070b8
   140004834:	jmp    0x14000493c
   140004839:	lea    rdx,[rip+0x23e0]        # 0x140006c20
   140004840:	jmp    0x140004959
   140004845:	lea    rdx,[rip+0x284c]        # 0x140007098
   14000484c:	jmp    0x140004959
   140004851:	lea    rdx,[rip+0x28b8]        # 0x140007110
   140004858:	jmp    0x140004959
   14000485d:	mov    ecx,DWORD PTR [r9]
   140004860:	sub    ecx,0x7
   140004863:	je     0x1400048d5
   140004865:	sub    ecx,0x1
   140004868:	je     0x1400048c0
   14000486a:	sub    ecx,0x1
   14000486d:	je     0x1400048b4
   14000486f:	sub    ecx,0x1
   140004872:	je     0x1400048a8
   140004874:	cmp    ecx,0x1
   140004877:	je     0x14000489c
   140004879:	mov    r9d,DWORD PTR [r9]
   14000487c:	lea    rdx,[rip+0x2a05]        # 0x140007288
   140004883:	mov    QWORD PTR [rsp+0x20],r8
   140004888:	mov    rcx,r10
   14000488b:	lea    r8,[rip+0x1c92]        # 0x140006524
   140004892:	call   0x140001008
   140004897:	add    rsp,0x38
   14000489b:	ret    
   14000489c:	lea    rdx,[rip+0x29b5]        # 0x140007258
   1400048a3:	jmp    0x140004956
   1400048a8:	lea    rdx,[rip+0x2499]        # 0x140006d48
   1400048af:	jmp    0x140004956
   1400048b4:	lea    rdx,[rip+0x296d]        # 0x140007228
   1400048bb:	jmp    0x140004956
   1400048c0:	lea    r9,[rdx+0x568]
   1400048c7:	mov    QWORD PTR [rsp+0x20],r8
   1400048cc:	lea    rdx,[rip+0x291d]        # 0x1400071f0
   1400048d3:	jmp    0x140004932
   1400048d5:	mov    ecx,DWORD PTR [rdx+0x60]
   1400048d8:	test   ecx,ecx
   1400048da:	je     0x14000494f
   1400048dc:	sub    ecx,0x1
   1400048df:	je     0x140004946
   1400048e1:	sub    ecx,0x1
   1400048e4:	je     0x14000491c
   1400048e6:	cmp    ecx,0x1
   1400048e9:	jne    0x140004968
   1400048eb:	mov    eax,DWORD PTR [rdx+0x64]
   1400048ee:	mov    r9,r8
   1400048f1:	mov    DWORD PTR [rsp+0x28],eax
   1400048f5:	lea    r8,[rip+0x289c]        # 0x140007198
   1400048fc:	lea    rax,[rip+0x4d5d]        # 0x140009660
   140004903:	mov    rcx,r10
   140004906:	lea    rdx,[rip+0x2893]        # 0x1400071a0
   14000490d:	mov    QWORD PTR [rsp+0x20],rax
   140004912:	call   0x140001008
   140004917:	add    rsp,0x38
   14000491b:	ret    
   14000491c:	lea    rax,[rip+0x4d3d]        # 0x140009660
   140004923:	mov    r9,r8
   140004926:	mov    QWORD PTR [rsp+0x20],rax
   14000492b:	lea    rdx,[rip+0x2836]        # 0x140007168
   140004932:	lea    r8,[rip+0x1af3]        # 0x14000642c
   140004939:	mov    rcx,r10
   14000493c:	call   0x140001008
   140004941:	add    rsp,0x38
   140004945:	ret    
   140004946:	lea    rdx,[rip+0x22a3]        # 0x140006bf0
   14000494d:	jmp    0x140004956
   14000494f:	lea    rdx,[rip+0x27ea]        # 0x140007140
   140004956:	mov    rcx,r10
   140004959:	mov    r9,r8
   14000495c:	lea    r8,[rip+0x1a7d]        # 0x1400063e0
   140004963:	call   0x140001008
   140004968:	add    rsp,0x38
   14000496c:	ret    
   14000496d:	int3   
   14000496e:	int3   
   14000496f:	int3   
   140004970:	int3   
   140004971:	int3   
   140004972:	int3   
   140004973:	int3   
   140004974:	int3   
   140004975:	int3   
   140004976:	int3   
   140004977:	int3   
   140004978:	int3   
   140004979:	int3   
   14000497a:	int3   
   14000497b:	int3   
   14000497c:	int3   
   14000497d:	int3   
   14000497e:	int3   
   14000497f:	int3   
   140004980:	mov    QWORD PTR [rsp+0x8],rbx
   140004985:	mov    QWORD PTR [rsp+0x10],rsi
   14000498a:	push   rdi
   14000498b:	sub    rsp,0x20
   14000498f:	mov    rbx,rcx
   140004992:	call   QWORD PTR [rip+0x17f8]        # 0x140006190
   140004998:	or     rsi,0xffffffffffffffff
   14000499c:	mov    edi,eax
   14000499e:	cmp    rbx,QWORD PTR [rip+0x4dbb]        # 0x140009760
   1400049a5:	jne    0x1400049bb
   1400049a7:	lea    rcx,[rip+0x4cb2]        # 0x140009660
   1400049ae:	call   QWORD PTR [rip+0x187c]        # 0x140006230
   1400049b4:	mov    QWORD PTR [rip+0x4da5],rsi        # 0x140009760
   1400049bb:	mov    rcx,QWORD PTR [rip+0x4c86]        # 0x140009648
   1400049c2:	xor    r9d,r9d
   1400049c5:	cmp    DWORD PTR [rcx+0x1c],r9d
   1400049c9:	je     0x1400049f3
   1400049cb:	mov    eax,r9d
   1400049ce:	lea    rdx,[rcx+0x28]
   1400049d2:	mov    r8d,r9d
   1400049d5:	cmp    DWORD PTR [rdx],ebx
   1400049d7:	je     0x1400049e8
   1400049d9:	inc    eax
   1400049db:	inc    r8
   1400049de:	add    rdx,0x4
   1400049e2:	cmp    r8,0x2
   1400049e6:	jl     0x1400049d5
   1400049e8:	cmp    eax,0x2
   1400049eb:	jge    0x1400049f3
   1400049ed:	cdqe   
   1400049ef:	mov    DWORD PTR [rcx+rax*4+0x28],esi
   1400049f3:	cmp    rbx,QWORD PTR [rip+0x462e]        # 0x140009028
   1400049fa:	jne    0x140004a38
   1400049fc:	mov    rcx,QWORD PTR [rip+0x462d]        # 0x140009030
   140004a03:	mov    eax,DWORD PTR [rip+0x4c0b]        # 0x140009614
   140004a09:	mov    QWORD PTR [rip+0x4618],rcx        # 0x140009028
   140004a10:	mov    DWORD PTR [rip+0x4bf6],eax        # 0x14000960c
   140004a16:	mov    QWORD PTR [rip+0x4613],rsi        # 0x140009030
   140004a1d:	cmp    rcx,rsi
   140004a20:	jne    0x140004a4d
   140004a22:	mov    DWORD PTR [rip+0x4bd7],r9d        # 0x140009600
   140004a29:	mov    DWORD PTR [rip+0x4bd8],r9d        # 0x140009608
   140004a30:	mov    DWORD PTR [rip+0x4bda],esi        # 0x140009610
   140004a36:	jmp    0x140004a4d
   140004a38:	mov    rax,QWORD PTR [rip+0x45f1]        # 0x140009030
   140004a3f:	cmp    rbx,rax
   140004a42:	cmove  rax,rsi
   140004a46:	mov    QWORD PTR [rip+0x45e3],rax        # 0x140009030
   140004a4d:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a52:	mov    eax,edi
   140004a54:	mov    rsi,QWORD PTR [rsp+0x38]
   140004a59:	add    rsp,0x20
   140004a5d:	pop    rdi
   140004a5e:	ret    
   140004a5f:	int3   
   140004a60:	int3   
   140004a61:	int3   
   140004a62:	int3   
   140004a63:	int3   
   140004a64:	int3   
   140004a65:	int3   
   140004a66:	int3   
   140004a67:	int3   
   140004a68:	int3   
   140004a69:	int3   
   140004a6a:	int3   
   140004a6b:	int3   
   140004a6c:	int3   
   140004a6d:	int3   
   140004a6e:	int3   
   140004a6f:	int3   
   140004a70:	mov    QWORD PTR [rsp+0x8],rbx
   140004a75:	mov    QWORD PTR [rsp+0x10],rsi
   140004a7a:	push   rdi
   140004a7b:	sub    rsp,0x20
   140004a7f:	mov    rax,QWORD PTR [rip+0x4bc2]        # 0x140009648
   140004a86:	xor    esi,esi
   140004a88:	xor    ebx,ebx
   140004a8a:	mov    rdi,rcx
   140004a8d:	cmp    DWORD PTR [rax+0x1c],ebx
   140004a90:	je     0x140004ac1
   140004a92:	xor    ecx,ecx
   140004a94:	lea    r9,[rax+0x28]
   140004a98:	xor    r10d,r10d
   140004a9b:	cmp    DWORD PTR [r9],edi
   140004a9e:	je     0x140004aaf
   140004aa0:	inc    ecx
   140004aa2:	inc    r10
   140004aa5:	add    r9,0x4
   140004aa9:	cmp    r10,0x2
   140004aad:	jl     0x140004a9b
   140004aaf:	cmp    ecx,0x2
   140004ab2:	jge    0x140004ac1
   140004ab4:	mov    esi,DWORD PTR [rax+0x20]
   140004ab7:	mov    ebx,DWORD PTR [rax+0x24]
   140004aba:	test   r8d,r8d
   140004abd:	jne    0x140004ac1
   140004abf:	add    edx,esi
   140004ac1:	mov    ecx,edi
   140004ac3:	call   QWORD PTR [rip+0x172f]        # 0x1400061f8
   140004ac9:	mov    ecx,eax
   140004acb:	cmp    eax,0xffffffff
   140004ace:	je     0x140004adb
   140004ad0:	sub    ecx,esi
   140004ad2:	test   ebx,ebx
   140004ad4:	je     0x140004adb
   140004ad6:	cmp    ecx,ebx
   140004ad8:	cmovg  ecx,ebx
   140004adb:	cmp    rdi,QWORD PTR [rip+0x4546]        # 0x140009028
   140004ae2:	jne    0x140004aec
   140004ae4:	mov    DWORD PTR [rip+0x4b22],ecx        # 0x14000960c
   140004aea:	jmp    0x140004b02
   140004aec:	mov    eax,DWORD PTR [rip+0x4b22]        # 0x140009614
   140004af2:	cmp    rdi,QWORD PTR [rip+0x4537]        # 0x140009030
   140004af9:	cmove  eax,ecx
   140004afc:	mov    DWORD PTR [rip+0x4b12],eax        # 0x140009614
   140004b02:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b07:	mov    eax,ecx
   140004b09:	mov    rsi,QWORD PTR [rsp+0x38]
   140004b0e:	add    rsp,0x20
   140004b12:	pop    rdi
   140004b13:	ret    
   140004b14:	int3   
   140004b15:	int3   
   140004b16:	int3   
   140004b17:	int3   
   140004b18:	int3   
   140004b19:	int3   
   140004b1a:	int3   
   140004b1b:	int3   
   140004b1c:	int3   
   140004b1d:	int3   
   140004b1e:	int3   
   140004b1f:	int3   
   140004b20:	mov    QWORD PTR [rsp+0x8],rbx
   140004b25:	mov    QWORD PTR [rsp+0x10],rbp
   140004b2a:	mov    QWORD PTR [rsp+0x18],rsi
   140004b2f:	push   rdi
   140004b30:	push   r14
   140004b32:	push   r15
   140004b34:	sub    rsp,0x30
   140004b38:	xor    r14d,r14d
   140004b3b:	mov    edi,r8d
   140004b3e:	cmp    BYTE PTR [rcx],0x2a
   140004b41:	mov    r15d,edx
   140004b44:	mov    rbp,rcx
   140004b47:	lea    esi,[r14+0x1]
   140004b4b:	jne    0x140004c23
   140004b51:	mov    BYTE PTR [rip+0x4b08],r14b        # 0x140009660
   140004b58:	mov    r14,rcx
   140004b5b:	lea    rcx,[rip+0x275e]        # 0x1400072c0
   140004b62:	mov    BYTE PTR [rip+0x44b7],0x43        # 0x140009020
   140004b69:	call   QWORD PTR [rip+0x1691]        # 0x140006200
   140004b6f:	test   rax,rax
   140004b72:	je     0x140004ba1
   140004b74:	cmp    BYTE PTR [rax],0x0
   140004b77:	je     0x140004ba1
   140004b79:	cmp    BYTE PTR [rax+0x1],0x3a
   140004b7d:	jne    0x140004ba1
   140004b7f:	movsx  ecx,BYTE PTR [rax]
   140004b82:	call   QWORD PTR [rip+0x1658]        # 0x1400061e0
   140004b88:	movzx  edx,BYTE PTR [rip+0x4491]        # 0x140009020
   140004b8f:	lea    ecx,[rax-0x61]
   140004b92:	movzx  eax,al
   140004b95:	cmp    cl,0x19
   140004b98:	cmovbe edx,eax
   140004b9b:	mov    BYTE PTR [rip+0x447f],dl        # 0x140009020
   140004ba1:	lea    rdx,[rip+0x2710]        # 0x1400072b8
   140004ba8:	lea    rcx,[rip+0x4471]        # 0x140009020
   140004baf:	call   QWORD PTR [rip+0x16eb]        # 0x1400062a0
   140004bb5:	mov    r8,rax
   140004bb8:	test   rax,rax
   140004bbb:	jne    0x140004bd4
   140004bbd:	mov    rax,QWORD PTR [rip+0x4a84]        # 0x140009648
   140004bc4:	mov    DWORD PTR [rax+0x60],0x2
   140004bcb:	or     rax,0xffffffffffffffff
   140004bcf:	jmp    0x140004e18
   140004bd4:	lea    rbx,[rip+0x4a85]        # 0x140009660
   140004bdb:	mov    r9,rax
   140004bde:	mov    rcx,rbx
   140004be1:	sub    r9,rbx
   140004be4:	mov    edx,0x100
   140004be9:	lea    rax,[rdx+0x7ffffefe]
   140004bf0:	test   rax,rax
   140004bf3:	je     0x140004c07
   140004bf5:	mov    al,BYTE PTR [r9+rcx*1]
   140004bf9:	test   al,al
   140004bfb:	je     0x140004c07
   140004bfd:	mov    BYTE PTR [rcx],al
   140004bff:	add    rcx,rsi
   140004c02:	sub    rdx,rsi
   140004c05:	jne    0x140004be9
   140004c07:	test   rdx,rdx
   140004c0a:	jne    0x140004c0f
   140004c0c:	sub    rcx,rsi
   140004c0f:	mov    BYTE PTR [rcx],0x0
   140004c12:	mov    rcx,r8
   140004c15:	call   QWORD PTR [rip+0x169d]        # 0x1400062b8
   140004c1b:	mov    r15d,0x8102
   140004c21:	jmp    0x140004c26
   140004c23:	mov    rbx,rcx
   140004c26:	mov    r8d,edi
   140004c29:	mov    edx,r15d
   140004c2c:	mov    rcx,rbx
   140004c2f:	call   QWORD PTR [rip+0x1663]        # 0x140006298
   140004c35:	or     rbx,0xffffffffffffffff
   140004c39:	movsxd rdi,eax
   140004c3c:	cmp    BYTE PTR [rbp+0x0],0x2a
   140004c40:	jne    0x140004cd9
   140004c46:	cmp    edi,ebx
   140004c48:	jne    0x140004c60
   140004c4a:	mov    rax,QWORD PTR [rip+0x49f7]        # 0x140009648
   140004c51:	mov    DWORD PTR [rax+0x60],0x2
   140004c58:	mov    rax,rbx
   140004c5b:	jmp    0x140004e18
   140004c60:	mov    edx,DWORD PTR [r14+0x4]
   140004c64:	mov    QWORD PTR [rip+0x4af5],rdi        # 0x140009760
   140004c6b:	test   edx,edx
   140004c6d:	jle    0x140004ccc
   140004c6f:	dec    edx
   140004c71:	xor    r8d,r8d
   140004c74:	mov    rcx,rdi
   140004c77:	call   0x140004a70
   140004c7c:	cmp    eax,ebx
   140004c7e:	jne    0x140004c9f
   140004c80:	mov    rdx,QWORD PTR [rip+0x49c1]        # 0x140009648
   140004c87:	mov    DWORD PTR [rdx+0x60],0x3
   140004c8e:	mov    eax,DWORD PTR [r14+0x4]
   140004c92:	mov    DWORD PTR [rdx+0x64],eax
   140004c95:	mov    rcx,rdi
   140004c98:	call   0x140004980
   140004c9d:	jmp    0x140004c58
   140004c9f:	mov    r8d,esi
   140004ca2:	lea    rdx,[rip+0x2613]        # 0x1400072bc
   140004ca9:	mov    ecx,edi
   140004cab:	call   QWORD PTR [rip+0x14cf]        # 0x140006180
   140004cb1:	cmp    eax,esi
   140004cb3:	je     0x140004ccc
   140004cb5:	mov    rcx,QWORD PTR [rip+0x498c]        # 0x140009648
   140004cbc:	mov    DWORD PTR [rcx+0x60],0x3
   140004cc3:	mov    eax,DWORD PTR [r14+0x4]
   140004cc7:	mov    DWORD PTR [rcx+0x64],eax
   140004cca:	jmp    0x140004c95
   140004ccc:	mov    rax,QWORD PTR [rip+0x4975]        # 0x140009648
   140004cd3:	and    DWORD PTR [rax+0x60],0x0
   140004cd7:	jmp    0x140004d3b
   140004cd9:	mov    rax,QWORD PTR [rip+0x4968]        # 0x140009648
   140004ce0:	cmp    DWORD PTR [rax+0x1c],0x0
   140004ce4:	je     0x140004d3b
   140004ce6:	lea    rdx,[rax+0x68]
   140004cea:	mov    rcx,rbp
   140004ced:	call   QWORD PTR [rip+0x14c5]        # 0x1400061b8
   140004cf3:	test   eax,eax
   140004cf5:	jne    0x140004d34
   140004cf7:	mov    r8,QWORD PTR [rip+0x494a]        # 0x140009648
   140004cfe:	xor    edx,edx
   140004d00:	lea    rcx,[r8+0x28]
   140004d04:	cmp    DWORD PTR [rcx],ebx
   140004d06:	je     0x140004d17
   140004d08:	add    eax,esi
   140004d0a:	add    rdx,rsi
   140004d0d:	add    rcx,0x4
   140004d11:	cmp    rdx,0x2
   140004d15:	jl     0x140004d04
   140004d17:	mov    rcx,rdi
   140004d1a:	cmp    eax,0x2
   140004d1d:	jge    0x140004c98
   140004d23:	cdqe   
   140004d25:	xor    edx,edx
   140004d27:	mov    DWORD PTR [r8+rax*4+0x28],edi
   140004d2c:	xor    r8d,r8d
   140004d2f:	call   0x140004a70
   140004d34:	mov    rax,QWORD PTR [rip+0x490d]        # 0x140009648
   140004d3b:	cmp    r15d,0x8000
   140004d42:	jne    0x140004e15
   140004d48:	cmp    edi,ebx
   140004d4a:	je     0x140004e15
   140004d50:	cmp    QWORD PTR [rip+0x42d1],rbx        # 0x140009028
   140004d57:	jne    0x140004dfe
   140004d5d:	cmp    DWORD PTR [rax+0x1c],0x0
   140004d61:	mov    rcx,rdi
   140004d64:	mov    QWORD PTR [rip+0x42bd],rcx        # 0x140009028
   140004d6b:	je     0x140004d78
   140004d6d:	mov    edx,DWORD PTR [rax+0x24]
   140004d70:	mov    DWORD PTR [rip+0x488a],edx        # 0x140009600
   140004d76:	jmp    0x140004d86
   140004d78:	call   QWORD PTR [rip+0x1442]        # 0x1400061c0
   140004d7e:	mov    edx,eax
   140004d80:	mov    DWORD PTR [rip+0x487a],eax        # 0x140009600
   140004d86:	and    DWORD PTR [rip+0x487b],0x0        # 0x140009608
   140004d8d:	mov    ecx,0x989680
   140004d92:	and    DWORD PTR [rip+0x4873],0x0        # 0x14000960c
   140004d99:	mov    DWORD PTR [rip+0x4865],esi        # 0x140009604
   140004d9f:	cmp    edx,ecx
   140004da1:	jbe    0x140004dc4
   140004da3:	mov    eax,0xcccccccd
   140004da8:	mul    edx
   140004daa:	lea    eax,[rsi+rsi*4]
   140004dad:	add    eax,eax
   140004daf:	shr    edx,0x3
   140004db2:	mov    DWORD PTR [rip+0x484c],eax        # 0x140009604
   140004db8:	mov    esi,eax
   140004dba:	cmp    edx,ecx
   140004dbc:	ja     0x140004da3
   140004dbe:	mov    DWORD PTR [rip+0x483c],edx        # 0x140009600
   140004dc4:	cmp    QWORD PTR [rip+0x4824],0x0        # 0x1400095f0
   140004dcc:	mov    DWORD PTR [rip+0x483e],ebx        # 0x140009610
   140004dd2:	jne    0x140004e15
   140004dd4:	and    QWORD PTR [rsp+0x20],0x0
   140004dda:	lea    r9,[rip+0x31f]        # 0x140005100
   140004de1:	mov    rcx,QWORD PTR [rip+0x4830]        # 0x140009618
   140004de8:	xor    r8d,r8d
   140004deb:	lea    edx,[r8+0x65]
   140004def:	call   QWORD PTR [rip+0x1363]        # 0x140006158
   140004df5:	mov    QWORD PTR [rip+0x47f4],rax        # 0x1400095f0
   140004dfc:	jmp    0x140004e15
   140004dfe:	cmp    QWORD PTR [rip+0x422b],rbx        # 0x140009030
   140004e05:	jne    0x140004e15
   140004e07:	and    DWORD PTR [rip+0x4806],0x0        # 0x140009614
   140004e0e:	mov    QWORD PTR [rip+0x421b],rdi        # 0x140009030
   140004e15:	mov    rax,rdi
   140004e18:	mov    rbx,QWORD PTR [rsp+0x50]
   140004e1d:	mov    rbp,QWORD PTR [rsp+0x58]
   140004e22:	mov    rsi,QWORD PTR [rsp+0x60]
   140004e27:	add    rsp,0x30
   140004e2b:	pop    r15
   140004e2d:	pop    r14
   140004e2f:	pop    rdi
   140004e30:	ret    
   140004e31:	int3   
   140004e32:	int3   
   140004e33:	int3   
   140004e34:	int3   
   140004e35:	int3   
   140004e36:	int3   
   140004e37:	int3   
   140004e38:	int3   
   140004e39:	int3   
   140004e3a:	int3   
   140004e3b:	int3   
   140004e3c:	int3   
   140004e3d:	int3   
   140004e3e:	int3   
   140004e3f:	int3   
   140004e40:	mov    QWORD PTR [rsp+0x8],rbx
   140004e45:	push   rdi
   140004e46:	sub    rsp,0x20
   140004e4a:	mov    rdi,rcx
   140004e4d:	call   QWORD PTR [rip+0x148d]        # 0x1400062e0
   140004e53:	cmp    rdi,QWORD PTR [rip+0x41ce]        # 0x140009028
   140004e5a:	mov    ebx,eax
   140004e5c:	jne    0x140004e7c
   140004e5e:	mov    ecx,DWORD PTR [rip+0x47a8]        # 0x14000960c
   140004e64:	add    ecx,eax
   140004e66:	cmp    ecx,DWORD PTR [rip+0x479c]        # 0x140009608
   140004e6c:	mov    DWORD PTR [rip+0x479a],ecx        # 0x14000960c
   140004e72:	jbe    0x140004ea6
   140004e74:	mov    DWORD PTR [rip+0x478e],ecx        # 0x140009608
   140004e7a:	jmp    0x140004ea1
   140004e7c:	cmp    rdi,QWORD PTR [rip+0x41ad]        # 0x140009030
   140004e83:	jne    0x140004ea6
   140004e85:	mov    eax,DWORD PTR [rip+0x4789]        # 0x140009614
   140004e8b:	add    eax,ebx
   140004e8d:	cmp    eax,DWORD PTR [rip+0x4775]        # 0x140009608
   140004e93:	mov    DWORD PTR [rip+0x477b],eax        # 0x140009614
   140004e99:	jbe    0x140004ea6
   140004e9b:	mov    DWORD PTR [rip+0x4767],eax        # 0x140009608
   140004ea1:	call   0x140005050
   140004ea6:	mov    eax,ebx
   140004ea8:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ead:	add    rsp,0x20
   140004eb1:	pop    rdi
   140004eb2:	ret    
   140004eb3:	int3   
   140004eb4:	int3   
   140004eb5:	int3   
   140004eb6:	int3   
   140004eb7:	int3   
   140004eb8:	int3   
   140004eb9:	int3   
   140004eba:	int3   
   140004ebb:	int3   
   140004ebc:	int3   
   140004ebd:	int3   
   140004ebe:	int3   
   140004ebf:	int3   
   140004ec0:	rex push rbx
   140004ec2:	sub    rsp,0x20
   140004ec6:	mov    rbx,rcx
   140004ec9:	test   r8d,r8d
   140004ecc:	jne    0x140004eea
   140004ece:	xor    edx,edx
   140004ed0:	lea    r8d,[rdx+0x1]
   140004ed4:	call   QWORD PTR [rip+0x131e]        # 0x1400061f8
   140004eda:	mov    edx,eax
   140004edc:	mov    ecx,ebx
   140004ede:	add    rsp,0x20
   140004ee2:	pop    rbx
   140004ee3:	rex.W jmp QWORD PTR [rip+0x1306]        # 0x1400061f0
   140004eea:	add    rsp,0x20
   140004eee:	pop    rbx
   140004eef:	rex.W jmp QWORD PTR [rip+0x128a]        # 0x140006180
   140004ef6:	int3   
   140004ef7:	int3   
   140004ef8:	int3   
   140004ef9:	int3   
   140004efa:	int3   
   140004efb:	int3   
   140004efc:	mov    QWORD PTR [rsp+0x8],rbx
   140004f01:	mov    QWORD PTR [rsp+0x10],rsi
   140004f06:	mov    QWORD PTR [rsp+0x20],rdi
   140004f0b:	push   r14
   140004f0d:	sub    rsp,0x1d0
   140004f14:	mov    rax,QWORD PTR [rip+0x40ed]        # 0x140009008
   140004f1b:	xor    rax,rsp
   140004f1e:	mov    QWORD PTR [rsp+0x1c0],rax
   140004f26:	mov    QWORD PTR [rip+0x46eb],rcx        # 0x140009618
   140004f2d:	lea    rdi,[rip+0x14f4]        # 0x140006428
   140004f34:	xor    ebx,ebx
   140004f36:	mov    rcx,rdi
   140004f39:	test   r8,r8
   140004f3c:	cmovne rcx,r8
   140004f40:	call   QWORD PTR [rip+0x1362]        # 0x1400062a8
   140004f46:	lea    r14d,[rbx+0x1]
   140004f4a:	mov    QWORD PTR [rsp+0x20],rdi
   140004f4f:	mov    rcx,rax
   140004f52:	mov    rsi,rax
   140004f55:	mov    edi,r14d
   140004f58:	test   rax,rax
   140004f5b:	je     0x140005006
   140004f61:	cmp    BYTE PTR [rax],bl
   140004f63:	je     0x140004fc2
   140004f65:	mov    edx,r14d
   140004f68:	cmp    rdx,0x32
   140004f6c:	jge    0x140004fc2
   140004f6e:	mov    r8d,ebx
   140004f71:	test   ebx,ebx
   140004f73:	je     0x140004f92
   140004f75:	sub    r8d,r14d
   140004f78:	je     0x140004f8b
   140004f7a:	cmp    r8d,r14d
   140004f7d:	jne    0x140004fba
   140004f7f:	cmp    BYTE PTR [rcx],0x22
   140004f82:	jne    0x140004fba
   140004f84:	mov    BYTE PTR [rcx],0x0
   140004f87:	xor    ebx,ebx
   140004f89:	jmp    0x140004fba
   140004f8b:	cmp    BYTE PTR [rcx],0x20
   140004f8e:	jg     0x140004fba
   140004f90:	jmp    0x140004f84
   140004f92:	cmp    BYTE PTR [rcx],0x20
   140004f95:	jle    0x140004fba
   140004f97:	add    edi,r14d
   140004f9a:	cmp    BYTE PTR [rcx],0x22
   140004f9d:	jne    0x140004faf
   140004f9f:	lea    rax,[rcx+0x1]
   140004fa3:	mov    ebx,0x2
   140004fa8:	mov    QWORD PTR [rsp+rdx*8+0x20],rax
   140004fad:	jmp    0x140004fb7
   140004faf:	mov    QWORD PTR [rsp+rdx*8+0x20],rcx
   140004fb4:	mov    ebx,r14d
   140004fb7:	add    rdx,r14
   140004fba:	add    rcx,r14
   140004fbd:	cmp    BYTE PTR [rcx],0x0
   140004fc0:	jne    0x140004f68
   140004fc2:	movsxd rax,edi
   140004fc5:	and    QWORD PTR [rsp+rax*8+0x20],0x0
   140004fcb:	call   QWORD PTR [rip+0x102f]        # 0x140006000
   140004fd1:	lea    rdx,[rsp+0x20]
   140004fd6:	mov    ecx,edi
   140004fd8:	call   0x140002478
   140004fdd:	mov    rcx,QWORD PTR [rip+0x460c]        # 0x1400095f0
   140004fe4:	mov    ebx,eax
   140004fe6:	test   rcx,rcx
   140004fe9:	je     0x140004ff9
   140004feb:	call   QWORD PTR [rip+0x1177]        # 0x140006168
   140004ff1:	and    QWORD PTR [rip+0x45f7],0x0        # 0x1400095f0
   140004ff9:	mov    rcx,rsi
   140004ffc:	call   QWORD PTR [rip+0x12b6]        # 0x1400062b8
   140005002:	mov    eax,ebx
   140005004:	jmp    0x14000501d
   140005006:	lea    rdx,[rip+0x16f3]        # 0x140006700
   14000500d:	lea    rcx,[rip+0x1b80]        # 0x140006b94
   140005014:	call   QWORD PTR [rip+0x12ce]        # 0x1400062e8
   14000501a:	mov    eax,r14d
   14000501d:	mov    rcx,QWORD PTR [rsp+0x1c0]
   140005025:	xor    rcx,rsp
   140005028:	call   0x140005520
   14000502d:	lea    r11,[rsp+0x1d0]
   140005035:	mov    rbx,QWORD PTR [r11+0x10]
   140005039:	mov    rsi,QWORD PTR [r11+0x18]
   14000503d:	mov    rdi,QWORD PTR [r11+0x28]
   140005041:	mov    rsp,r11
   140005044:	pop    r14
   140005046:	ret    
   140005047:	int3   
   140005048:	int3   
   140005049:	int3   
   14000504a:	int3   
   14000504b:	int3   
   14000504c:	int3   
   14000504d:	int3   
   14000504e:	int3   
   14000504f:	int3   
   140005050:	rex push rbx
   140005052:	sub    rsp,0x60
   140005056:	mov    r8d,DWORD PTR [rip+0x45a3]        # 0x140009600
   14000505d:	test   r8d,r8d
   140005060:	je     0x1400050e6
   140005066:	mov    rcx,QWORD PTR [rip+0x4583]        # 0x1400095f0
   14000506d:	test   rcx,rcx
   140005070:	je     0x1400050e6
   140005072:	mov    eax,DWORD PTR [rip+0x4590]        # 0x140009608
   140005078:	xor    edx,edx
   14000507a:	div    DWORD PTR [rip+0x4584]        # 0x140009604
   140005080:	cmp    eax,r8d
   140005083:	cmova  eax,r8d
   140005087:	xor    edx,edx
   140005089:	imul   eax,eax,0x64
   14000508c:	div    r8d
   14000508f:	movsxd rbx,eax
   140005092:	cmp    ebx,DWORD PTR [rip+0x4578]        # 0x140009610
   140005098:	je     0x1400050e6
   14000509a:	and    QWORD PTR [rsp+0x20],0x0
   1400050a0:	mov    r9,rbx
   1400050a3:	mov    edx,0x66
   1400050a8:	mov    r8d,0x402
   1400050ae:	call   QWORD PTR [rip+0x109c]        # 0x140006150
   1400050b4:	jmp    0x1400050c1
   1400050b6:	lea    rcx,[rsp+0x30]
   1400050bb:	call   QWORD PTR [rip+0x10af]        # 0x140006170
   1400050c1:	xor    r9d,r9d
   1400050c4:	mov    DWORD PTR [rsp+0x20],0x1
   1400050cc:	xor    r8d,r8d
   1400050cf:	lea    rcx,[rsp+0x30]
   1400050d4:	xor    edx,edx
   1400050d6:	call   QWORD PTR [rip+0x1064]        # 0x140006140
   1400050dc:	test   eax,eax
   1400050de:	jne    0x1400050b6
   1400050e0:	mov    DWORD PTR [rip+0x452a],ebx        # 0x140009610
   1400050e6:	add    rsp,0x60
   1400050ea:	pop    rbx
   1400050eb:	ret    
   1400050ec:	int3   
   1400050ed:	int3   
   1400050ee:	int3   
   1400050ef:	int3   
   1400050f0:	int3   
   1400050f1:	int3   
   1400050f2:	int3   
   1400050f3:	int3   
   1400050f4:	int3   
   1400050f5:	int3   
   1400050f6:	int3   
   1400050f7:	int3   
   1400050f8:	int3   
   1400050f9:	int3   
   1400050fa:	int3   
   1400050fb:	int3   
   1400050fc:	int3   
   1400050fd:	int3   
   1400050fe:	int3   
   1400050ff:	int3   
   140005100:	rex push rbx
   140005102:	sub    rsp,0x30
   140005106:	mov    rbx,rcx
   140005109:	cmp    edx,0x110
   14000510f:	je     0x140005115
   140005111:	xor    eax,eax
   140005113:	jmp    0x140005155
   140005115:	xor    r9d,r9d
   140005118:	mov    QWORD PTR [rsp+0x20],0x630000
   140005121:	mov    r8d,0x401
   140005127:	lea    edx,[r9+0x66]
   14000512b:	call   QWORD PTR [rip+0x101f]        # 0x140006150
   140005131:	xor    edx,edx
   140005133:	mov    rcx,rbx
   140005136:	call   QWORD PTR [rip+0x1024]        # 0x140006160
   14000513c:	mov    edx,0xf060
   140005141:	mov    r8d,0x3
   140005147:	mov    rcx,rax
   14000514a:	call   QWORD PTR [rip+0xfe8]        # 0x140006138
   140005150:	mov    eax,0x1
   140005155:	add    rsp,0x30
   140005159:	pop    rbx
   14000515a:	ret    
   14000515b:	int3   
   14000515c:	int3   
   14000515d:	int3   
   14000515e:	int3   
   14000515f:	int3   
   140005160:	int3   
   140005161:	int3   
   140005162:	int3   
   140005163:	int3   
   140005164:	int3   
   140005165:	int3   
   140005166:	int3   
   140005167:	int3   
   140005168:	int3   
   140005169:	int3   
   14000516a:	int3   
   14000516b:	int3   
   14000516c:	int3   
   14000516d:	int3   
   14000516e:	int3   
   14000516f:	int3   
   140005170:	sub    rsp,0x28
   140005174:	mov    eax,0x5a4d
   140005179:	cmp    WORD PTR [rip+0xffffffffffffae80],ax        # 0x140000000
   140005180:	je     0x140005186
   140005182:	xor    eax,eax
   140005184:	jmp    0x1400051d5
   140005186:	movsxd rcx,DWORD PTR [rip+0xffffffffffffaeaf]        # 0x14000003c
   14000518d:	lea    rax,[rip+0xffffffffffffae6c]        # 0x140000000
   140005194:	add    rcx,rax
   140005197:	cmp    DWORD PTR [rcx],0x4550
   14000519d:	jne    0x140005182
   14000519f:	movzx  eax,WORD PTR [rcx+0x18]
   1400051a3:	cmp    eax,0x10b
   1400051a8:	je     0x1400051c4
   1400051aa:	cmp    eax,0x20b
   1400051af:	jne    0x140005182
   1400051b1:	xor    eax,eax
   1400051b3:	cmp    DWORD PTR [rcx+0x84],0xe
   1400051ba:	jbe    0x1400051d5
   1400051bc:	cmp    DWORD PTR [rcx+0xf8],eax
   1400051c2:	jmp    0x1400051d2
   1400051c4:	xor    eax,eax
   1400051c6:	cmp    DWORD PTR [rcx+0x74],0xe
   1400051ca:	jbe    0x1400051d5
   1400051cc:	cmp    DWORD PTR [rcx+0xe8],eax
   1400051d2:	setne  al
   1400051d5:	mov    ecx,0x2
   1400051da:	mov    DWORD PTR [rip+0x3e80],eax        # 0x140009060
   1400051e0:	call   0x1400058c8
   1400051e5:	mov    ecx,eax
   1400051e7:	call   QWORD PTR [rip+0x103b]        # 0x140006228
   1400051ed:	mov    rcx,QWORD PTR [rip+0x1074]        # 0x140006268
   1400051f4:	or     rax,0xffffffffffffffff
   1400051f8:	mov    QWORD PTR [rip+0x4421],rax        # 0x140009620
   1400051ff:	mov    QWORD PTR [rip+0x4422],rax        # 0x140009628
   140005206:	mov    eax,DWORD PTR [rip+0x43e0]        # 0x1400095ec
   14000520c:	mov    DWORD PTR [rcx],eax
   14000520e:	mov    rcx,QWORD PTR [rip+0x105b]        # 0x140006270
   140005215:	mov    eax,DWORD PTR [rip+0x43c5]        # 0x1400095e0
   14000521b:	mov    DWORD PTR [rcx],eax
   14000521d:	call   0x140005920
   140005222:	cmp    DWORD PTR [rip+0x3dd7],0x0        # 0x140009000
   140005229:	jne    0x140005238
   14000522b:	lea    rcx,[rip+0x6ee]        # 0x140005920
   140005232:	call   QWORD PTR [rip+0x1010]        # 0x140006248
   140005238:	xor    eax,eax
   14000523a:	add    rsp,0x28
   14000523e:	ret    
   14000523f:	int3   
   140005240:	int3   
   140005241:	int3   
   140005242:	int3   
   140005243:	int3   
   140005244:	int3   
   140005245:	int3   
   140005246:	int3   
   140005247:	int3   
   140005248:	int3   
   140005249:	int3   
   14000524a:	int3   
   14000524b:	int3   
   14000524c:	int3   
   14000524d:	int3   
   14000524e:	int3   
   14000524f:	int3   
   140005250:	sub    rsp,0x38
   140005254:	mov    eax,DWORD PTR [rip+0x438e]        # 0x1400095e8
   14000525a:	lea    r8,[rip+0x3df7]        # 0x140009058
   140005261:	mov    r9d,DWORD PTR [rip+0x437c]        # 0x1400095e4
   140005268:	lea    rdx,[rip+0x3de1]        # 0x140009050
   14000526f:	mov    DWORD PTR [rip+0x3def],eax        # 0x140009064
   140005275:	lea    rcx,[rip+0x3dcc]        # 0x140009048
   14000527c:	lea    rax,[rip+0x3de1]        # 0x140009064
   140005283:	mov    QWORD PTR [rsp+0x20],rax
   140005288:	call   QWORD PTR [rip+0xf92]        # 0x140006220
   14000528e:	mov    DWORD PTR [rip+0x3db8],eax        # 0x14000904c
   140005294:	add    rsp,0x38
   140005298:	ret    
   140005299:	int3   
   14000529a:	int3   
   14000529b:	int3   
   14000529c:	int3   
   14000529d:	int3   
   14000529e:	int3   
   14000529f:	int3   
   1400052a0:	sub    rsp,0x28
   1400052a4:	call   0x140005a14
   1400052a9:	add    rsp,0x28
   1400052ad:	jmp    0x1400052b8
   1400052b2:	int3   
   1400052b3:	int3   
   1400052b4:	int3   
   1400052b5:	int3   
   1400052b6:	int3   
   1400052b7:	int3   
   1400052b8:	mov    rax,rsp
   1400052bb:	mov    QWORD PTR [rax+0x8],rbx
   1400052bf:	mov    QWORD PTR [rax+0x10],rsi
   1400052c3:	mov    QWORD PTR [rax+0x18],rdi
   1400052c7:	push   r15
   1400052c9:	sub    rsp,0xb0
   1400052d0:	and    DWORD PTR [rsp+0x20],0x0
   1400052d5:	lea    rcx,[rax-0x78]
   1400052d9:	call   QWORD PTR [rip+0xe11]        # 0x1400060f0
   1400052df:	nop
   1400052e0:	mov    rax,QWORD PTR gs:0x30
   1400052e9:	mov    rbx,QWORD PTR [rax+0x8]
   1400052ed:	xor    esi,esi
   1400052ef:	xor    eax,eax
   1400052f1:	lock cmpxchg QWORD PTR [rip+0x4336],rbx        # 0x140009630
   1400052fa:	je     0x140005315
   1400052fc:	cmp    rax,rbx
   1400052ff:	jne    0x140005308
   140005301:	mov    esi,0x1
   140005306:	jmp    0x140005315
   140005308:	mov    ecx,0x3e8
   14000530d:	call   QWORD PTR [rip+0xd35]        # 0x140006048
   140005313:	jmp    0x1400052ef
   140005315:	mov    eax,DWORD PTR [rip+0x431d]        # 0x140009638
   14000531b:	cmp    eax,0x1
   14000531e:	jne    0x14000532a
   140005320:	lea    ecx,[rax+0x1e]
   140005323:	call   0x140005914
   140005328:	jmp    0x14000539b
   14000532a:	mov    eax,DWORD PTR [rip+0x4308]        # 0x140009638
   140005330:	test   eax,eax
   140005332:	jne    0x140005391
   140005334:	mov    DWORD PTR [rip+0x42fa],0x1        # 0x140009638
   14000533e:	lea    r15,[rip+0x101b]        # 0x140006360
   140005345:	lea    rbx,[rip+0xffc]        # 0x140006348
   14000534c:	mov    QWORD PTR [rsp+0x38],rbx
   140005351:	mov    DWORD PTR [rsp+0x30],eax
   140005355:	cmp    rbx,r15
   140005358:	jae    0x140005383
   14000535a:	test   eax,eax
   14000535c:	jne    0x140005387
   14000535e:	mov    rdi,QWORD PTR [rbx]
   140005361:	test   rdi,rdi
   140005364:	je     0x140005378
   140005366:	mov    rcx,rdi
   140005369:	mov    rax,QWORD PTR [rip+0xfb0]        # 0x140006320
   140005370:	call   rax
   140005372:	call   rdi
   140005374:	mov    DWORD PTR [rsp+0x30],eax
   140005378:	add    rbx,0x8
   14000537c:	mov    QWORD PTR [rsp+0x38],rbx
   140005381:	jmp    0x140005355
   140005383:	test   eax,eax
   140005385:	je     0x14000539b
   140005387:	mov    eax,0xff
   14000538c:	jmp    0x1400054f4
   140005391:	mov    DWORD PTR [rip+0x3ca9],0x1        # 0x140009044
   14000539b:	mov    eax,DWORD PTR [rip+0x4297]        # 0x140009638
   1400053a1:	cmp    eax,0x1
   1400053a4:	jne    0x1400053c3
   1400053a6:	lea    rdx,[rip+0xf93]        # 0x140006340
   1400053ad:	lea    rcx,[rip+0xf7c]        # 0x140006330
   1400053b4:	call   0x140005aea
   1400053b9:	mov    DWORD PTR [rip+0x4275],0x2        # 0x140009638
   1400053c3:	test   esi,esi
   1400053c5:	jne    0x1400053d0
   1400053c7:	xor    eax,eax
   1400053c9:	xchg   QWORD PTR [rip+0x4260],rax        # 0x140009630
   1400053d0:	cmp    QWORD PTR [rip+0x4268],0x0        # 0x140009640
   1400053d8:	je     0x140005408
   1400053da:	lea    rcx,[rip+0x425f]        # 0x140009640
   1400053e1:	call   0x140005980
   1400053e6:	test   eax,eax
   1400053e8:	je     0x140005408
   1400053ea:	mov    rbx,QWORD PTR [rip+0x424f]        # 0x140009640
   1400053f1:	mov    rcx,rbx
   1400053f4:	mov    rax,QWORD PTR [rip+0xf25]        # 0x140006320
   1400053fb:	call   rax
   1400053fd:	xor    r8d,r8d
   140005400:	lea    edx,[r8+0x2]
   140005404:	xor    ecx,ecx
   140005406:	call   rbx
   140005408:	mov    rax,QWORD PTR [rip+0xe51]        # 0x140006260
   14000540f:	mov    rbx,QWORD PTR [rax]
   140005412:	mov    QWORD PTR [rsp+0x28],rbx
   140005417:	mov    edi,DWORD PTR [rsp+0x20]
   14000541b:	cmp    BYTE PTR [rbx],0x20
   14000541e:	ja     0x140005493
   140005420:	cmp    BYTE PTR [rbx],0x0
   140005423:	je     0x140005429
   140005425:	test   edi,edi
   140005427:	jne    0x140005493
   140005429:	mov    al,BYTE PTR [rbx]
   14000542b:	dec    al
   14000542d:	cmp    al,0x1f
   14000542f:	ja     0x14000543b
   140005431:	inc    rbx
   140005434:	mov    QWORD PTR [rsp+0x28],rbx
   140005439:	jmp    0x140005429
   14000543b:	mov    ecx,DWORD PTR [rsp+0x7c]
   14000543f:	movzx  eax,WORD PTR [rsp+0x80]
   140005447:	mov    r9d,0xa
   14000544d:	and    cl,0x1
   140005450:	cmovne r9d,eax
   140005454:	mov    r8,rbx
   140005457:	xor    edx,edx
   140005459:	lea    rcx,[rip+0xffffffffffffaba0]        # 0x140000000
   140005460:	call   0x140004efc
   140005465:	mov    DWORD PTR [rip+0x3bd5],eax        # 0x140009040
   14000546b:	cmp    DWORD PTR [rip+0x3bee],0x0        # 0x140009060
   140005472:	jne    0x14000547c
   140005474:	mov    ecx,eax
   140005476:	call   QWORD PTR [rip+0xd8c]        # 0x140006208
   14000547c:	cmp    DWORD PTR [rip+0x3bc1],0x0        # 0x140009044
   140005483:	jne    0x140005491
   140005485:	call   QWORD PTR [rip+0xdad]        # 0x140006238
   14000548b:	mov    eax,DWORD PTR [rip+0x3baf]        # 0x140009040
   140005491:	jmp    0x1400054f4
   140005493:	cmp    BYTE PTR [rbx],0x22
   140005496:	jne    0x1400054a5
   140005498:	xor    eax,eax
   14000549a:	test   edi,edi
   14000549c:	sete   al
   14000549f:	mov    edi,eax
   1400054a1:	mov    DWORD PTR [rsp+0x20],eax
   1400054a5:	movzx  ecx,BYTE PTR [rbx]
   1400054a8:	call   QWORD PTR [rip+0xd92]        # 0x140006240
   1400054ae:	test   eax,eax
   1400054b0:	je     0x1400054ba
   1400054b2:	inc    rbx
   1400054b5:	mov    QWORD PTR [rsp+0x28],rbx
   1400054ba:	inc    rbx
   1400054bd:	mov    QWORD PTR [rsp+0x28],rbx
   1400054c2:	jmp    0x14000541b
   1400054c7:	mov    DWORD PTR [rip+0x3b73],eax        # 0x140009040
   1400054cd:	cmp    DWORD PTR [rip+0x3b8c],0x0        # 0x140009060
   1400054d4:	jne    0x1400054df
   1400054d6:	mov    ecx,eax
   1400054d8:	call   QWORD PTR [rip+0xe12]        # 0x1400062f0
   1400054de:	int3   
   1400054df:	cmp    DWORD PTR [rip+0x3b5e],0x0        # 0x140009044
   1400054e6:	jne    0x1400054f4
   1400054e8:	call   QWORD PTR [rip+0xd4a]        # 0x140006238
   1400054ee:	mov    eax,DWORD PTR [rip+0x3b4c]        # 0x140009040
   1400054f4:	lea    r11,[rsp+0xb0]
   1400054fc:	mov    rbx,QWORD PTR [r11+0x10]
   140005500:	mov    rsi,QWORD PTR [r11+0x18]
   140005504:	mov    rdi,QWORD PTR [r11+0x20]
   140005508:	mov    rsp,r11
   14000550b:	pop    r15
   14000550d:	ret    
   14000550e:	int3   
   14000550f:	int3   
   140005510:	int3   
   140005511:	int3   
   140005512:	int3   
   140005513:	int3   
   140005514:	int3   
   140005515:	int3   
   140005516:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005520:	cmp    rcx,QWORD PTR [rip+0x3ae1]        # 0x140009008
   140005527:	jne    0x140005539
   140005529:	rol    rcx,0x10
   14000552d:	test   cx,0xffff
   140005532:	jne    0x140005535
   140005534:	ret    
   140005535:	ror    rcx,0x10
   140005539:	jmp    0x140005580
   14000553e:	int3   
   14000553f:	int3   
   140005540:	int3   
   140005541:	int3   
   140005542:	int3   
   140005543:	int3   
   140005544:	rex push rbx
   140005546:	sub    rsp,0x20
   14000554a:	mov    rbx,rcx
   14000554d:	xor    ecx,ecx
   14000554f:	call   QWORD PTR [rip+0xb73]        # 0x1400060c8
   140005555:	mov    rcx,rbx
   140005558:	call   QWORD PTR [rip+0xb72]        # 0x1400060d0
   14000555e:	call   QWORD PTR [rip+0xb5c]        # 0x1400060c0
   140005564:	mov    rcx,rax
   140005567:	mov    edx,0xc0000409
   14000556c:	add    rsp,0x20
   140005570:	pop    rbx
   140005571:	rex.W jmp QWORD PTR [rip+0xb40]        # 0x1400060b8
   140005578:	int3   
   140005579:	int3   
   14000557a:	int3   
   14000557b:	int3   
   14000557c:	int3   
   14000557d:	int3   
   14000557e:	int3   
   14000557f:	int3   
   140005580:	mov    QWORD PTR [rsp+0x8],rcx
   140005585:	sub    rsp,0x88
   14000558c:	lea    rcx,[rip+0x3b7d]        # 0x140009110
   140005593:	call   QWORD PTR [rip+0xb4f]        # 0x1400060e8
   140005599:	mov    rax,QWORD PTR [rip+0x3c68]        # 0x140009208
   1400055a0:	mov    QWORD PTR [rsp+0x48],rax
   1400055a5:	xor    r8d,r8d
   1400055a8:	lea    rdx,[rsp+0x50]
   1400055ad:	mov    rcx,QWORD PTR [rsp+0x48]
   1400055b2:	call   QWORD PTR [rip+0xb28]        # 0x1400060e0
   1400055b8:	mov    QWORD PTR [rsp+0x40],rax
   1400055bd:	cmp    QWORD PTR [rsp+0x40],0x0
   1400055c3:	je     0x140005607
   1400055c5:	mov    QWORD PTR [rsp+0x38],0x0
   1400055ce:	lea    rax,[rsp+0x58]
   1400055d3:	mov    QWORD PTR [rsp+0x30],rax
   1400055d8:	lea    rax,[rsp+0x60]
   1400055dd:	mov    QWORD PTR [rsp+0x28],rax
   1400055e2:	lea    rax,[rip+0x3b27]        # 0x140009110
   1400055e9:	mov    QWORD PTR [rsp+0x20],rax
   1400055ee:	mov    r9,QWORD PTR [rsp+0x40]
   1400055f3:	mov    r8,QWORD PTR [rsp+0x48]
   1400055f8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400055fd:	xor    ecx,ecx
   1400055ff:	call   QWORD PTR [rip+0xad3]        # 0x1400060d8
   140005605:	jmp    0x14000562a
   140005607:	mov    rax,QWORD PTR [rip+0x3b9a]        # 0x1400091a8
   14000560e:	mov    rax,QWORD PTR [rax]
   140005611:	mov    QWORD PTR [rip+0x3bf0],rax        # 0x140009208
   140005618:	mov    rax,QWORD PTR [rip+0x3b89]        # 0x1400091a8
   14000561f:	add    rax,0x8
   140005623:	mov    QWORD PTR [rip+0x3b7e],rax        # 0x1400091a8
   14000562a:	mov    rax,QWORD PTR [rip+0x3bd7]        # 0x140009208
   140005631:	mov    QWORD PTR [rip+0x3a48],rax        # 0x140009080
   140005638:	mov    rax,QWORD PTR [rsp+0x90]
   140005640:	mov    QWORD PTR [rip+0x3b49],rax        # 0x140009190
   140005647:	mov    DWORD PTR [rip+0x3a1f],0xc0000409        # 0x140009070
   140005651:	mov    DWORD PTR [rip+0x3a19],0x1        # 0x140009074
   14000565b:	mov    DWORD PTR [rip+0x3a23],0x3        # 0x140009088
   140005665:	mov    eax,0x8
   14000566a:	imul   rax,rax,0x0
   14000566e:	lea    rcx,[rip+0x3a1b]        # 0x140009090
   140005675:	mov    QWORD PTR [rcx+rax*1],0x2
   14000567d:	mov    eax,0x8
   140005682:	imul   rax,rax,0x1
   140005686:	lea    rcx,[rip+0x3a03]        # 0x140009090
   14000568d:	mov    rdx,QWORD PTR [rip+0x3974]        # 0x140009008
   140005694:	mov    QWORD PTR [rcx+rax*1],rdx
   140005698:	mov    eax,0x8
   14000569d:	imul   rax,rax,0x2
   1400056a1:	lea    rcx,[rip+0x39e8]        # 0x140009090
   1400056a8:	mov    rdx,QWORD PTR [rip+0x3961]        # 0x140009010
   1400056af:	mov    QWORD PTR [rcx+rax*1],rdx
   1400056b3:	mov    eax,0x8
   1400056b8:	imul   rax,rax,0x0
   1400056bc:	mov    rcx,QWORD PTR [rip+0x3945]        # 0x140009008
   1400056c3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400056c8:	mov    eax,0x8
   1400056cd:	imul   rax,rax,0x1
   1400056d1:	mov    rcx,QWORD PTR [rip+0x3938]        # 0x140009010
   1400056d8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   1400056dd:	lea    rcx,[rip+0xcdc]        # 0x1400063c0
   1400056e4:	call   0x140005544
   1400056e9:	add    rsp,0x88
   1400056f0:	ret    
   1400056f1:	int3   
   1400056f2:	int3   
   1400056f3:	int3   
   1400056f4:	int3   
   1400056f5:	int3   
   1400056f6:	int3   
   1400056f7:	int3   
   1400056f8:	sub    rsp,0x78
   1400056fc:	lea    rcx,[rip+0x3a0d]        # 0x140009110
   140005703:	call   QWORD PTR [rip+0x9df]        # 0x1400060e8
   140005709:	mov    rax,QWORD PTR [rip+0x3af8]        # 0x140009208
   140005710:	mov    QWORD PTR [rsp+0x48],rax
   140005715:	xor    r8d,r8d
   140005718:	lea    rdx,[rsp+0x50]
   14000571d:	mov    rcx,QWORD PTR [rsp+0x48]
   140005722:	call   QWORD PTR [rip+0x9b8]        # 0x1400060e0
   140005728:	mov    QWORD PTR [rsp+0x40],rax
   14000572d:	cmp    QWORD PTR [rsp+0x40],0x0
   140005733:	je     0x140005777
   140005735:	mov    QWORD PTR [rsp+0x38],0x0
   14000573e:	lea    rax,[rsp+0x58]
   140005743:	mov    QWORD PTR [rsp+0x30],rax
   140005748:	lea    rax,[rsp+0x60]
   14000574d:	mov    QWORD PTR [rsp+0x28],rax
   140005752:	lea    rax,[rip+0x39b7]        # 0x140009110
   140005759:	mov    QWORD PTR [rsp+0x20],rax
   14000575e:	mov    r9,QWORD PTR [rsp+0x40]
   140005763:	mov    r8,QWORD PTR [rsp+0x48]
   140005768:	mov    rdx,QWORD PTR [rsp+0x50]
   14000576d:	xor    ecx,ecx
   14000576f:	call   QWORD PTR [rip+0x963]        # 0x1400060d8
   140005775:	jmp    0x14000579a
   140005777:	mov    rax,QWORD PTR [rip+0x3a2a]        # 0x1400091a8
   14000577e:	mov    rax,QWORD PTR [rax]
   140005781:	mov    QWORD PTR [rip+0x3a80],rax        # 0x140009208
   140005788:	mov    rax,QWORD PTR [rip+0x3a19]        # 0x1400091a8
   14000578f:	add    rax,0x8
   140005793:	mov    QWORD PTR [rip+0x3a0e],rax        # 0x1400091a8
   14000579a:	mov    rax,QWORD PTR [rip+0x3a67]        # 0x140009208
   1400057a1:	mov    QWORD PTR [rip+0x38d8],rax        # 0x140009080
   1400057a8:	mov    DWORD PTR [rip+0x38be],0xc0000409        # 0x140009070
   1400057b2:	mov    DWORD PTR [rip+0x38b8],0x1        # 0x140009074
   1400057bc:	mov    DWORD PTR [rip+0x38c2],0x1        # 0x140009088
   1400057c6:	mov    eax,0x8
   1400057cb:	imul   rax,rax,0x0
   1400057cf:	lea    rcx,[rip+0x38ba]        # 0x140009090
   1400057d6:	mov    QWORD PTR [rcx+rax*1],0x8
   1400057de:	lea    rcx,[rip+0xbdb]        # 0x1400063c0
   1400057e5:	call   0x140005544
   1400057ea:	add    rsp,0x78
   1400057ee:	ret    
   1400057ef:	int3   
   1400057f0:	int3   
   1400057f1:	int3   
   1400057f2:	int3   
   1400057f3:	int3   
   1400057f4:	int3   
   1400057f5:	int3   
   1400057f6:	int3   
   1400057f7:	int3   
   1400057f8:	int3   
   1400057f9:	int3   
   1400057fa:	int3   
   1400057fb:	int3   
   1400057fc:	int3   
   1400057fd:	int3   
   1400057fe:	int3   
   1400057ff:	int3   
   140005800:	sub    rsp,0x28
   140005804:	mov    rax,QWORD PTR [rcx]
   140005807:	cmp    DWORD PTR [rax],0xe06d7363
   14000580d:	jne    0x140005832
   14000580f:	cmp    DWORD PTR [rax+0x18],0x4
   140005813:	jne    0x140005832
   140005815:	mov    ecx,DWORD PTR [rax+0x20]
   140005818:	lea    eax,[rcx-0x19930520]
   14000581e:	cmp    eax,0x2
   140005821:	jbe    0x14000582b
   140005823:	cmp    ecx,0x1994000
   140005829:	jne    0x140005832
   14000582b:	call   QWORD PTR [rip+0xa47]        # 0x140006278
   140005831:	int3   
   140005832:	xor    eax,eax
   140005834:	add    rsp,0x28
   140005838:	ret    
   140005839:	int3   
   14000583a:	int3   
   14000583b:	int3   
   14000583c:	int3   
   14000583d:	int3   
   14000583e:	int3   
   14000583f:	int3   
   140005840:	sub    rsp,0x28
   140005844:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140005800
   14000584b:	call   QWORD PTR [rip+0x877]        # 0x1400060c8
   140005851:	xor    eax,eax
   140005853:	add    rsp,0x28
   140005857:	ret    
   140005858:	int3   
   140005859:	int3   
   14000585a:	int3   
   14000585b:	int3   
   14000585c:	int3   
   14000585d:	int3   
   14000585e:	jmp    QWORD PTR [rip+0x9ac]        # 0x140006210
   140005864:	int3   
   140005865:	int3   
   140005866:	int3   
   140005867:	int3   
   140005868:	int3   
   140005869:	int3   
   14000586a:	int3   
   14000586b:	int3   
   14000586c:	sub    rsp,0x18
   140005870:	xor    edx,edx
   140005872:	lea    rax,[rcx-0x1]
   140005876:	cmp    rax,0xfffffffffffffffd
   14000587a:	ja     0x1400058b8
   14000587c:	mov    eax,0x5a4d
   140005881:	cmp    WORD PTR [rcx],ax
   140005884:	jne    0x1400058b0
   140005886:	cmp    DWORD PTR [rcx+0x3c],edx
   140005889:	jl     0x1400058b0
   14000588b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140005892:	jae    0x1400058b0
   140005894:	movsxd rax,DWORD PTR [rcx+0x3c]
   140005898:	add    rax,rcx
   14000589b:	mov    QWORD PTR [rsp],rax
   14000589f:	cmp    DWORD PTR [rax],0x4550
   1400058a5:	cmovne rax,rdx
   1400058a9:	mov    rdx,rax
   1400058ac:	mov    QWORD PTR [rsp],rax
   1400058b0:	jmp    0x1400058b8
   1400058b2:	xor    edx,edx
   1400058b4:	mov    QWORD PTR [rsp],rdx
   1400058b8:	mov    rax,rdx
   1400058bb:	add    rsp,0x18
   1400058bf:	ret    
   1400058c0:	int3   
   1400058c1:	int3   
   1400058c2:	int3   
   1400058c3:	int3   
   1400058c4:	int3   
   1400058c5:	int3   
   1400058c6:	int3   
   1400058c7:	int3   
   1400058c8:	rex push rbx
   1400058ca:	sub    rsp,0x20
   1400058ce:	mov    ebx,ecx
   1400058d0:	xor    ecx,ecx
   1400058d2:	call   QWORD PTR [rip+0x7a8]        # 0x140006080
   1400058d8:	test   rax,rax
   1400058db:	je     0x140005905
   1400058dd:	mov    rcx,rax
   1400058e0:	call   0x14000586c
   1400058e5:	test   rax,rax
   1400058e8:	je     0x140005905
   1400058ea:	mov    ecx,0x2
   1400058ef:	cmp    WORD PTR [rax+0x5c],cx
   1400058f3:	jne    0x1400058f9
   1400058f5:	mov    eax,ecx
   1400058f7:	jmp    0x140005907
   1400058f9:	cmp    WORD PTR [rax+0x5c],0x3
   1400058fe:	mov    eax,0x1
   140005903:	je     0x140005907
   140005905:	mov    eax,ebx
   140005907:	add    rsp,0x20
   14000590b:	pop    rbx
   14000590c:	ret    
   14000590d:	int3   
   14000590e:	int3   
   14000590f:	int3   
   140005910:	int3   
   140005911:	int3   
   140005912:	int3   
   140005913:	int3   
   140005914:	jmp    QWORD PTR [rip+0x8fe]        # 0x140006218
   14000591a:	int3   
   14000591b:	int3   
   14000591c:	int3   
   14000591d:	int3   
   14000591e:	int3   
   14000591f:	int3   
   140005920:	xor    eax,eax
   140005922:	ret    
   140005923:	int3   
   140005924:	int3   
   140005925:	int3   
   140005926:	int3   
   140005927:	int3   
   140005928:	int3   
   140005929:	int3   
   14000592a:	int3   
   14000592b:	int3   
   14000592c:	int3   
   14000592d:	int3   
   14000592e:	int3   
   14000592f:	int3   
   140005930:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005934:	xor    r9d,r9d
   140005937:	add    r8,rcx
   14000593a:	mov    r10,rdx
   14000593d:	movzx  eax,WORD PTR [r8+0x14]
   140005942:	movzx  r11d,WORD PTR [r8+0x6]
   140005947:	add    rax,0x18
   14000594b:	add    rax,r8
   14000594e:	test   r11d,r11d
   140005951:	je     0x140005971
   140005953:	mov    edx,DWORD PTR [rax+0xc]
   140005956:	cmp    r10,rdx
   140005959:	jb     0x140005965
   14000595b:	mov    ecx,DWORD PTR [rax+0x8]
   14000595e:	add    ecx,edx
   140005960:	cmp    r10,rcx
   140005963:	jb     0x140005973
   140005965:	inc    r9d
   140005968:	add    rax,0x28
   14000596c:	cmp    r9d,r11d
   14000596f:	jb     0x140005953
   140005971:	xor    eax,eax
   140005973:	ret    
   140005974:	int3   
   140005975:	int3   
   140005976:	int3   
   140005977:	int3   
   140005978:	int3   
   140005979:	int3   
   14000597a:	int3   
   14000597b:	int3   
   14000597c:	int3   
   14000597d:	int3   
   14000597e:	int3   
   14000597f:	int3   
   140005980:	mov    QWORD PTR [rsp+0x8],rbx
   140005985:	push   rdi
   140005986:	sub    rsp,0x20
   14000598a:	mov    rbx,rcx
   14000598d:	lea    rdi,[rip+0xffffffffffffa66c]        # 0x140000000
   140005994:	mov    rcx,rdi
   140005997:	call   0x1400059e0
   14000599c:	test   eax,eax
   14000599e:	je     0x1400059c2
   1400059a0:	sub    rbx,rdi
   1400059a3:	mov    rdx,rbx
   1400059a6:	mov    rcx,rdi
   1400059a9:	call   0x140005930
   1400059ae:	test   rax,rax
   1400059b1:	je     0x1400059c2
   1400059b3:	mov    eax,DWORD PTR [rax+0x24]
   1400059b6:	shr    eax,0x1f
   1400059b9:	not    eax
   1400059bb:	and    eax,0x1
   1400059be:	jmp    0x1400059c2
   1400059c0:	xor    eax,eax
   1400059c2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400059c7:	add    rsp,0x20
   1400059cb:	pop    rdi
   1400059cc:	ret    
   1400059cd:	int3   
   1400059ce:	int3   
   1400059cf:	int3   
   1400059d0:	int3   
   1400059d1:	int3   
   1400059d2:	int3   
   1400059d3:	int3   
   1400059d4:	int3   
   1400059d5:	int3   
   1400059d6:	int3   
   1400059d7:	int3   
   1400059d8:	int3   
   1400059d9:	int3   
   1400059da:	int3   
   1400059db:	int3   
   1400059dc:	int3   
   1400059dd:	int3   
   1400059de:	int3   
   1400059df:	int3   
   1400059e0:	mov    rax,rcx
   1400059e3:	mov    ecx,0x5a4d
   1400059e8:	cmp    WORD PTR [rax],cx
   1400059eb:	je     0x1400059f0
   1400059ed:	xor    eax,eax
   1400059ef:	ret    
   1400059f0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400059f4:	add    rcx,rax
   1400059f7:	xor    eax,eax
   1400059f9:	cmp    DWORD PTR [rcx],0x4550
   1400059ff:	jne    0x140005a0d
   140005a01:	mov    edx,0x20b
   140005a06:	cmp    WORD PTR [rcx+0x18],dx
   140005a0a:	sete   al
   140005a0d:	ret    
   140005a0e:	int3   
   140005a0f:	int3   
   140005a10:	int3   
   140005a11:	int3   
   140005a12:	int3   
   140005a13:	int3   
   140005a14:	mov    QWORD PTR [rsp+0x20],rbx
   140005a19:	push   rbp
   140005a1a:	mov    rbp,rsp
   140005a1d:	sub    rsp,0x20
   140005a21:	and    QWORD PTR [rbp+0x18],0x0
   140005a26:	movabs rbx,0x2b992ddfa232
   140005a30:	mov    rax,QWORD PTR [rip+0x35d1]        # 0x140009008
   140005a37:	cmp    rax,rbx
   140005a3a:	jne    0x140005acf
   140005a40:	lea    rcx,[rbp+0x18]
   140005a44:	call   QWORD PTR [rip+0x656]        # 0x1400060a0
   140005a4a:	mov    rax,QWORD PTR [rbp+0x18]
   140005a4e:	mov    QWORD PTR [rbp+0x10],rax
   140005a52:	call   QWORD PTR [rip+0x618]        # 0x140006070
   140005a58:	mov    eax,eax
   140005a5a:	xor    QWORD PTR [rbp+0x10],rax
   140005a5e:	call   QWORD PTR [rip+0x644]        # 0x1400060a8
   140005a64:	mov    eax,eax
   140005a66:	xor    QWORD PTR [rbp+0x10],rax
   140005a6a:	call   QWORD PTR [rip+0x6b0]        # 0x140006120
   140005a70:	mov    eax,eax
   140005a72:	shl    rax,0x18
   140005a76:	xor    QWORD PTR [rbp+0x10],rax
   140005a7a:	call   QWORD PTR [rip+0x6a0]        # 0x140006120
   140005a80:	mov    eax,eax
   140005a82:	lea    rcx,[rbp+0x10]
   140005a86:	xor    rax,QWORD PTR [rbp+0x10]
   140005a8a:	xor    rax,rcx
   140005a8d:	lea    rcx,[rbp+0x20]
   140005a91:	mov    QWORD PTR [rbp+0x10],rax
   140005a95:	call   QWORD PTR [rip+0x615]        # 0x1400060b0
   140005a9b:	mov    eax,DWORD PTR [rbp+0x20]
   140005a9e:	movabs rcx,0xffffffffffff
   140005aa8:	shl    rax,0x20
   140005aac:	xor    rax,QWORD PTR [rbp+0x20]
   140005ab0:	xor    rax,QWORD PTR [rbp+0x10]
   140005ab4:	and    rax,rcx
   140005ab7:	movabs rcx,0x2b992ddfa233
   140005ac1:	cmp    rax,rbx
   140005ac4:	cmove  rax,rcx
   140005ac8:	mov    QWORD PTR [rip+0x3539],rax        # 0x140009008
   140005acf:	mov    rbx,QWORD PTR [rsp+0x48]
   140005ad4:	not    rax
   140005ad7:	mov    QWORD PTR [rip+0x3532],rax        # 0x140009010
   140005ade:	add    rsp,0x20
   140005ae2:	pop    rbp
   140005ae3:	ret    
   140005ae4:	int3   
   140005ae5:	int3   
   140005ae6:	int3   
   140005ae7:	int3   
   140005ae8:	int3   
   140005ae9:	int3   
   140005aea:	jmp    QWORD PTR [rip+0x760]        # 0x140006250
   140005af0:	int3   
   140005af1:	int3   
   140005af2:	int3   
   140005af3:	int3   
   140005af4:	int3   
   140005af5:	int3   
   140005af6:	jmp    QWORD PTR [rip+0x75c]        # 0x140006258
   140005afc:	int3   
   140005afd:	int3   
   140005afe:	int3   
   140005aff:	int3   
   140005b00:	int3   
   140005b01:	int3   
   140005b02:	int3   
   140005b03:	int3   
   140005b04:	int3   
   140005b05:	int3   
   140005b06:	int3   
   140005b07:	int3   
   140005b08:	int3   
   140005b09:	int3   
   140005b0a:	int3   
   140005b0b:	int3   
   140005b0c:	int3   
   140005b0d:	int3   
   140005b0e:	int3   
   140005b0f:	int3   
   140005b10:	ret    0x0
   140005b13:	int3   
   140005b14:	int3   
   140005b15:	int3   
   140005b16:	int3   
   140005b17:	int3   
   140005b18:	int3   
   140005b19:	int3   
   140005b1a:	int3   
   140005b1b:	int3   
   140005b1c:	int3   
   140005b1d:	int3   
   140005b1e:	int3   
   140005b1f:	int3   
   140005b20:	int3   
   140005b21:	int3   
   140005b22:	int3   
   140005b23:	int3   
   140005b24:	int3   
   140005b25:	int3   
   140005b26:	int3   
   140005b27:	int3   
   140005b28:	rex push rbx
   140005b2a:	sub    rsp,0x20
   140005b2e:	mov    ebx,ecx
   140005b30:	call   0x140005b4c
   140005b35:	lea    rdx,[rbx+rbx*2]
   140005b39:	shl    rdx,0x4
   140005b3d:	add    rax,rdx
   140005b40:	add    rsp,0x20
   140005b44:	pop    rbx
   140005b45:	ret    
   140005b46:	int3   
   140005b47:	int3   
   140005b48:	int3   
   140005b49:	int3   
   140005b4a:	int3   
   140005b4b:	int3   
   140005b4c:	jmp    QWORD PTR [rip+0x7ae]        # 0x140006300
   140005b52:	int3   
   140005b53:	int3   
   140005b54:	int3   
   140005b55:	int3   
   140005b56:	int3   
   140005b57:	int3   
   140005b58:	sub    rsp,0x28
   140005b5c:	mov    r8,QWORD PTR [r9+0x38]
   140005b60:	mov    rcx,rdx
   140005b63:	mov    rdx,r9
   140005b66:	call   0x140005b7c
   140005b6b:	mov    eax,0x1
   140005b70:	add    rsp,0x28
   140005b74:	ret    
   140005b75:	int3   
   140005b76:	int3   
   140005b77:	int3   
   140005b78:	int3   
   140005b79:	int3   
   140005b7a:	int3   
   140005b7b:	int3   
   140005b7c:	rex push rbx
   140005b7e:	sub    rsp,0x20
   140005b82:	mov    r11d,DWORD PTR [r8]
   140005b85:	mov    rbx,rdx
   140005b88:	and    r11d,0xfffffff8
   140005b8c:	mov    r9,rcx
   140005b8f:	test   BYTE PTR [r8],0x4
   140005b93:	mov    r10,rcx
   140005b96:	je     0x140005bab
   140005b98:	mov    eax,DWORD PTR [r8+0x8]
   140005b9c:	movsxd r10,DWORD PTR [r8+0x4]
   140005ba0:	neg    eax
   140005ba2:	add    r10,rcx
   140005ba5:	movsxd rcx,eax
   140005ba8:	and    r10,rcx
   140005bab:	movsxd rax,r11d
   140005bae:	mov    rdx,QWORD PTR [rax+r10*1]
   140005bb2:	mov    rax,QWORD PTR [rbx+0x10]
   140005bb6:	mov    ecx,DWORD PTR [rax+0x8]
   140005bb9:	add    rcx,QWORD PTR [rbx+0x8]
   140005bbd:	test   BYTE PTR [rcx+0x3],0xf
   140005bc1:	je     0x140005bcf
   140005bc3:	movzx  eax,BYTE PTR [rcx+0x3]
   140005bc7:	and    eax,0xfffffff0
   140005bca:	cdqe   
   140005bcc:	add    r9,rax
   140005bcf:	xor    r9,rdx
   140005bd2:	mov    rcx,r9
   140005bd5:	add    rsp,0x20
   140005bd9:	pop    rbx
   140005bda:	jmp    0x140005520
   140005bdf:	int3   
   140005be0:	int3   
   140005be1:	int3   
   140005be2:	int3   
   140005be3:	int3   
   140005be4:	int3   
   140005be5:	int3   
   140005be6:	jmp    QWORD PTR [rip+0x71c]        # 0x140006308
   140005bec:	int3   
   140005bed:	int3   
   140005bee:	int3   
   140005bef:	int3   
   140005bf0:	int3   
   140005bf1:	int3   
   140005bf2:	jmp    QWORD PTR [rip+0x718]        # 0x140006310
   140005bf8:	int3   
   140005bf9:	int3   
   140005bfa:	int3   
   140005bfb:	int3   
   140005bfc:	int3   
   140005bfd:	int3   
   140005bfe:	int3   
   140005bff:	int3   
   140005c00:	int3   
   140005c01:	int3   
   140005c02:	int3   
   140005c03:	int3   
   140005c04:	int3   
   140005c05:	int3   
   140005c06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005c10:	jmp    rax
   140005c12:	int3   
   140005c13:	int3   
   140005c14:	int3   
   140005c15:	int3   
   140005c16:	int3   
   140005c17:	int3   
   140005c18:	int3   
   140005c19:	int3   
   140005c1a:	int3   
   140005c1b:	int3   
   140005c1c:	int3   
   140005c1d:	int3   
   140005c1e:	int3   
   140005c1f:	int3   
   140005c20:	int3   
   140005c21:	int3   
   140005c22:	int3   
   140005c23:	int3   
   140005c24:	int3   
   140005c25:	int3   
   140005c26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005c30:	sub    rsp,0x10
   140005c34:	mov    QWORD PTR [rsp],r10
   140005c38:	mov    QWORD PTR [rsp+0x8],r11
   140005c3d:	xor    r11,r11
   140005c40:	lea    r10,[rsp+0x18]
   140005c45:	sub    r10,rax
   140005c48:	cmovb  r10,r11
   140005c4c:	mov    r11,QWORD PTR gs:0x10
   140005c55:	cmp    r10,r11
   140005c58:	jae    0x140005c6f
   140005c5a:	and    r10w,0xf000
   140005c60:	lea    r11,[r11-0x1000]
   140005c67:	test   BYTE PTR [r11],r11b
   140005c6a:	cmp    r10,r11
   140005c6d:	jne    0x140005c60
   140005c6f:	mov    r10,QWORD PTR [rsp]
   140005c73:	mov    r11,QWORD PTR [rsp+0x8]
   140005c78:	add    rsp,0x10
   140005c7c:	ret    
   140005c7d:	int3   
   140005c7e:	int3   
   140005c7f:	int3   
   140005c80:	int3   
   140005c81:	int3   
   140005c82:	int3   
   140005c83:	int3   
   140005c84:	int3   
   140005c85:	int3   
   140005c86:	rex push rbp
   140005c88:	sub    rsp,0x20
   140005c8c:	mov    rbp,rdx
   140005c8f:	mov    rax,QWORD PTR [rcx]
   140005c92:	mov    rdx,rcx
   140005c95:	mov    ecx,DWORD PTR [rax]
   140005c97:	call   0x14000585e
   140005c9c:	nop
   140005c9d:	add    rsp,0x20
   140005ca1:	pop    rbp
   140005ca2:	ret    
   140005ca3:	int3   
   140005ca4:	int3   
   140005ca5:	int3   
   140005ca6:	int3   
   140005ca7:	int3   
   140005ca8:	int3   
   140005ca9:	int3   
   140005caa:	int3   
   140005cab:	int3   
   140005cac:	int3   
   140005cad:	int3   
   140005cae:	int3   
   140005caf:	int3   
   140005cb0:	rex push rbp
   140005cb2:	sub    rsp,0x20
   140005cb6:	mov    rbp,rdx
   140005cb9:	mov    rax,QWORD PTR [rcx]
   140005cbc:	xor    ecx,ecx
   140005cbe:	cmp    DWORD PTR [rax],0xc0000005
   140005cc4:	sete   cl
   140005cc7:	mov    eax,ecx
   140005cc9:	add    rsp,0x20
   140005ccd:	pop    rbp
   140005cce:	ret    
   140005ccf:	int3   

Disassembly of section .rdata:

0000000140006000 <.rdata>:
   140006000:	adc    DWORD PTR [rax],eax
   140006002:	add    BYTE PTR [rax],al
   140006004:	add    BYTE PTR [rax],al
   140006006:	add    BYTE PTR [rax+0x0],al
   14000600c:	add    BYTE PTR [rax],al
   14000600e:	add    BYTE PTR [rax],al
   140006010:	adc    eax,0x0
   140006015:	add    BYTE PTR [rax],al
   140006017:	adc    BYTE PTR [rsi],0x0
   14000601a:	add    BYTE PTR [rax],al
   14000601c:	add    BYTE PTR [rax],al
   14000601e:	add    BYTE PTR [rax+0x14],al
   140006024:	add    BYTE PTR [rax],al
   140006026:	add    BYTE PTR [rax+0x18],al
   14000602c:	add    BYTE PTR [rax],al
   14000602e:	add    BYTE PTR [rax+0x17],al
   140006034:	add    BYTE PTR [rax],al
   140006036:	add    BYTE PTR [rax+0x0],al
   14000603c:	add    BYTE PTR [rax],al
   14000603e:	add    BYTE PTR [rax],al
   140006040:	ins    BYTE PTR es:[rdi],dx
   140006041:	jge    0x140006043
   140006043:	add    BYTE PTR [rax],al
   140006045:	add    BYTE PTR [rax],al
   140006047:	add    BYTE PTR [rbp+rdi*2+0x0],bh
   14000604b:	add    BYTE PTR [rax],al
   14000604d:	add    BYTE PTR [rax],al
   14000604f:	add    BYTE PTR [rbp+rdi*2+0x0],al
   140006056:	add    BYTE PTR [rax],al
   140006058:	xchg   esp,eax
   140006059:	jge    0x14000605b
   14000605b:	add    BYTE PTR [rax],al
   14000605d:	add    BYTE PTR [rax],al
   14000605f:	add    BYTE PTR [rdx+0x7d],ch
   140006065:	add    BYTE PTR [rax],al
   140006067:	add    BYTE PTR [rax+0x7d],bh
   14000606d:	add    BYTE PTR [rax],al
   14000606f:	add    dl,dl
   140006071:	jge    0x140006073
   140006073:	add    BYTE PTR [rax],al
   140006075:	add    BYTE PTR [rax],al
   140006077:	add    al,ch
   140006079:	jge    0x14000607b
   14000607b:	add    BYTE PTR [rax],al
   14000607d:	add    BYTE PTR [rax],al
   14000607f:	add    BYTE PTR [rdx],al
   140006081:	jle    0x140006083
   140006083:	add    BYTE PTR [rax],al
   140006085:	add    BYTE PTR [rax],al
   140006087:	add    BYTE PTR [rsi+0x7d],bl
   14000608a:	add    BYTE PTR [rax],al
   14000608c:	add    BYTE PTR [rax],al
   14000608e:	add    BYTE PTR [rax],al
   140006090:	sub    BYTE PTR [rsi+0x0],bh
   140006093:	add    BYTE PTR [rax],al
   140006095:	add    BYTE PTR [rax],al
   140006097:	add    BYTE PTR [rsi],bh
   140006099:	jle    0x14000609b
   14000609b:	add    BYTE PTR [rax],al
   14000609d:	add    BYTE PTR [rax],al
   14000609f:	add    BYTE PTR [rax],dh
   1400060a1:	(bad)  
   1400060a2:	add    BYTE PTR [rax],al
   1400060a4:	add    BYTE PTR [rax],al
   1400060a6:	add    BYTE PTR [rax],al
   1400060a8:	sbb    al,BYTE PTR [rdx+0x0]
   1400060ae:	add    BYTE PTR [rax],al
   1400060b0:	add    BYTE PTR [rdx+0x0],al
   1400060b6:	add    BYTE PTR [rax],al
   1400060b8:	in     al,dx
   1400060b9:	add    DWORD PTR [rax],0x0
   1400060bf:	add    al,bl
   1400060c1:	add    DWORD PTR [rax],0x0
   1400060c7:	add    BYTE PTR [rdx+0x81],bh
   1400060cd:	add    BYTE PTR [rax],al
   1400060cf:	add    BYTE PTR [rsi+0x81],bl
   1400060d5:	add    BYTE PTR [rax],al
   1400060d7:	add    BYTE PTR [rdx+0x81],cl
   1400060dd:	add    BYTE PTR [rax],al
   1400060df:	add    BYTE PTR [rax-0x7f],dh
   1400060e2:	add    BYTE PTR [rax],al
   1400060e4:	add    BYTE PTR [rax],al
   1400060e6:	add    BYTE PTR [rax],al
   1400060e8:	pop    rsp
   1400060e9:	add    DWORD PTR [rax],0x0
   1400060ef:	add    BYTE PTR [rdx-0x7f],cl
   1400060f2:	add    BYTE PTR [rax],al
   1400060f4:	add    BYTE PTR [rax],al
   1400060f6:	add    BYTE PTR [rax],al
   1400060f8:	rex.RX jge 0x1400060fb
   1400060fb:	add    BYTE PTR [rax],al
   1400060fd:	add    BYTE PTR [rax],al
   1400060ff:	add    BYTE PTR [rax],bh
   140006101:	jge    0x140006103
   140006103:	add    BYTE PTR [rax],al
   140006105:	add    BYTE PTR [rax],al
   140006107:	add    BYTE PTR [rax],cl
   140006109:	jge    0x14000610b
   14000610b:	add    BYTE PTR [rax],al
   14000610d:	add    BYTE PTR [rax],al
   14000610f:	add    BYTE PTR [rax],ah
   140006111:	jge    0x140006113
   140006113:	add    BYTE PTR [rax],al
   140006115:	add    BYTE PTR [rax],al
   140006117:	add    BYTE PTR [rsi],dl
   140006119:	jle    0x14000611b
   14000611b:	add    BYTE PTR [rax],al
   14000611d:	add    BYTE PTR [rax],al
   14000611f:	add    BYTE PTR [rdx-0x7e],cl
	...
   14000612e:	add    BYTE PTR [rax],al
   140006130:	pop    rdx
   140006131:	jle    0x140006133
   140006133:	add    BYTE PTR [rax],al
   140006135:	add    BYTE PTR [rax],al
   140006137:	add    BYTE PTR [rsi+rdi*2+0x0],bh
   14000613b:	add    BYTE PTR [rax],al
   14000613d:	add    BYTE PTR [rax],al
   14000613f:	add    BYTE PTR [rsi+0x7e],cl
   140006145:	add    BYTE PTR [rax],al
   140006147:	add    BYTE PTR [rsi+0x7e],bl
   14000614d:	add    BYTE PTR [rax],al
   14000614f:	add    BYTE PTR [rsi+rdi*2+0x0],ch
   140006156:	add    BYTE PTR [rax],al
   140006158:	ret    0x7e
   14000615b:	add    BYTE PTR [rax],al
   14000615d:	add    BYTE PTR [rax],al
   14000615f:	add    al,bl
   140006161:	jle    0x140006163
   140006163:	add    BYTE PTR [rax],al
   140006165:	add    BYTE PTR [rax],al
   140006167:	add    al,ch
   140006169:	jle    0x14000616b
   14000616b:	add    BYTE PTR [rax],al
   14000616d:	add    BYTE PTR [rax],al
   14000616f:	add    BYTE PTR [rax+0x7e],ch
	...
   14000617e:	add    BYTE PTR [rax],al
   140006180:	test   al,0x7f
   140006182:	add    BYTE PTR [rax],al
   140006184:	add    BYTE PTR [rax],al
   140006186:	add    BYTE PTR [rax],al
   140006188:	push   rsi
   140006189:	jg     0x14000618b
   14000618b:	add    BYTE PTR [rax],al
   14000618d:	add    BYTE PTR [rax],al
   14000618f:	add    BYTE PTR [rdx+0x7f],bh
   140006195:	add    BYTE PTR [rax],al
   140006197:	add    ah,al
   140006199:	jg     0x14000619b
   14000619b:	add    BYTE PTR [rax],al
   14000619d:	add    BYTE PTR [rax],al
   14000619f:	add    ah,cl
   1400061a1:	jg     0x1400061a3
   1400061a3:	add    BYTE PTR [rax],al
   1400061a5:	add    BYTE PTR [rax],al
   1400061a7:	add    dh,dl
   1400061a9:	jg     0x1400061ab
   1400061ab:	add    BYTE PTR [rax],al
   1400061ad:	add    BYTE PTR [rax],al
   1400061af:	add    al,ah
   1400061b1:	jg     0x1400061b3
   1400061b3:	add    BYTE PTR [rax],al
   1400061b5:	add    BYTE PTR [rax],al
   1400061b7:	add    dl,ch
   1400061b9:	jg     0x1400061bb
   1400061bb:	add    BYTE PTR [rax],al
   1400061bd:	add    BYTE PTR [rax],al
   1400061bf:	add    dh,dh
   1400061c1:	jg     0x1400061c3
   1400061c3:	add    BYTE PTR [rax],al
   1400061c5:	add    BYTE PTR [rax],al
   1400061c7:	add    BYTE PTR [rax+rax*4],al
   1400061ca:	add    BYTE PTR [rax],al
   1400061cc:	add    BYTE PTR [rax],al
   1400061ce:	add    BYTE PTR [rax],al
   1400061d0:	(bad)  
   1400061d1:	add    BYTE PTR [rax],0x0
   1400061d4:	add    BYTE PTR [rax],al
   1400061d6:	add    BYTE PTR [rax],al
   1400061d8:	sbb    BYTE PTR [rax+0x0],al
   1400061de:	add    BYTE PTR [rax],al
   1400061e0:	and    al,BYTE PTR [rax+0x0]
   1400061e6:	add    BYTE PTR [rax],al
   1400061e8:	sub    al,0x80
   1400061ea:	add    BYTE PTR [rax],al
   1400061ec:	add    BYTE PTR [rax],al
   1400061ee:	add    BYTE PTR [rax],al
   1400061f0:	xor    al,0x80
   1400061f2:	add    BYTE PTR [rax],al
   1400061f4:	add    BYTE PTR [rax],al
   1400061f6:	add    BYTE PTR [rax],al
   1400061f8:	add    BYTE PTR ds:[rax],0x0
   1400061fc:	add    BYTE PTR [rax],al
   1400061fe:	add    BYTE PTR [rax],al
   140006200:	rex.W add BYTE PTR [rax],0x0
   140006204:	add    BYTE PTR [rax],al
   140006206:	add    BYTE PTR [rax],al
   140006208:	push   rdx
   140006209:	add    BYTE PTR [rax],0x0
   14000620c:	add    BYTE PTR [rax],al
   14000620e:	add    BYTE PTR [rax],al
   140006210:	pop    rdx
   140006211:	add    BYTE PTR [rax],0x0
   140006214:	add    BYTE PTR [rax],al
   140006216:	add    BYTE PTR [rax],al
   140006218:	push   0x80
   14000621d:	add    BYTE PTR [rax],al
   14000621f:	add    BYTE PTR [rsi-0x80],dh
   140006222:	add    BYTE PTR [rax],al
   140006224:	add    BYTE PTR [rax],al
   140006226:	add    BYTE PTR [rax],al
   140006228:	xchg   BYTE PTR [rax+0x0],al
   14000622e:	add    BYTE PTR [rax],al
   140006230:	sahf   
   140006231:	jg     0x140006233
   140006233:	add    BYTE PTR [rax],al
   140006235:	add    BYTE PTR [rax],al
   140006237:	add    BYTE PTR [rax+0x80],ah
   14000623d:	add    BYTE PTR [rax],al
   14000623f:	add    BYTE PTR [rdx+0x80],ch
   140006245:	add    BYTE PTR [rax],al
   140006247:	add    BYTE PTR [rax+0x80],bh
   14000624d:	add    BYTE PTR [rax],al
   14000624f:	add    ah,cl
   140006251:	add    BYTE PTR [rax],0x0
   140006254:	add    BYTE PTR [rax],al
   140006256:	add    BYTE PTR [rax],al
   140006258:	fadd   DWORD PTR [rax+0x0]
   14000625e:	add    BYTE PTR [rax],al
   140006260:	lock add BYTE PTR [rax],0x0
   140006264:	add    BYTE PTR [rax],al
   140006266:	add    BYTE PTR [rax],al
   140006268:	cli    
   140006269:	add    BYTE PTR [rax],0x0
   14000626c:	add    BYTE PTR [rax],al
   14000626e:	add    BYTE PTR [rax],al
   140006270:	add    al,0x81
   140006272:	add    BYTE PTR [rax],al
   140006274:	add    BYTE PTR [rax],al
   140006276:	add    BYTE PTR [rax],al
   140006278:	sbb    al,0x81
   14000627a:	add    BYTE PTR [rax],al
   14000627c:	add    BYTE PTR [rax],al
   14000627e:	add    BYTE PTR [rax],al
   140006280:	rex.W jg 0x140006283
   140006283:	add    BYTE PTR [rax],al
   140006285:	add    BYTE PTR [rax],al
   140006287:	add    BYTE PTR [rax+0x7f],al
   14000628a:	add    BYTE PTR [rax],al
   14000628c:	add    BYTE PTR [rax],al
   14000628e:	add    BYTE PTR [rax],al
   140006290:	xor    al,0x7f
   140006292:	add    BYTE PTR [rax],al
   140006294:	add    BYTE PTR [rax],al
   140006296:	add    BYTE PTR [rax],al
   140006298:	sub    al,0x7f
   14000629a:	add    BYTE PTR [rax],al
   14000629c:	add    BYTE PTR [rax],al
   14000629e:	add    BYTE PTR [rax],al
   1400062a0:	and    BYTE PTR [rdi+0x0],bh
   1400062a3:	add    BYTE PTR [rax],al
   1400062a5:	add    BYTE PTR [rax],al
   1400062a7:	add    BYTE PTR [rsi],dl
   1400062a9:	jg     0x1400062ab
   1400062ab:	add    BYTE PTR [rax],al
   1400062ad:	add    BYTE PTR [rax],al
   1400062af:	add    BYTE PTR [rdi+rdi*2],cl
   1400062b2:	add    BYTE PTR [rax],al
   1400062b4:	add    BYTE PTR [rax],al
   1400062b6:	add    BYTE PTR [rax],al
   1400062b8:	add    al,0x7f
   1400062ba:	add    BYTE PTR [rax],al
   1400062bc:	add    BYTE PTR [rax],al
   1400062be:	add    BYTE PTR [rax],al
   1400062c0:	xchg   esp,eax
   1400062c1:	jg     0x1400062c3
   1400062c3:	add    BYTE PTR [rax],al
   1400062c5:	add    BYTE PTR [rax],al
   1400062c7:	add    BYTE PTR [rsi+0x7f],al
   1400062cd:	add    BYTE PTR [rax],al
   1400062cf:	add    BYTE PTR [rdi+rdi*2+0x0],bh
   1400062d3:	add    BYTE PTR [rax],al
   1400062d5:	add    BYTE PTR [rax],al
   1400062d7:	add    BYTE PTR [rdx+0x7f],dh
   1400062da:	add    BYTE PTR [rax],al
   1400062dc:	add    BYTE PTR [rax],al
   1400062de:	add    BYTE PTR [rax],al
   1400062e0:	push   0x7f
   1400062e2:	add    BYTE PTR [rax],al
   1400062e4:	add    BYTE PTR [rax],al
   1400062e6:	add    BYTE PTR [rax],al
   1400062e8:	(bad)  
   1400062e9:	jg     0x1400062eb
   1400062eb:	add    BYTE PTR [rax],al
   1400062ed:	add    BYTE PTR [rax],al
   1400062ef:	add    BYTE PTR [rax+0x80],bl
   1400062f5:	add    BYTE PTR [rax],al
   1400062f7:	add    BYTE PTR [rdx+0x7f],dh
   1400062fd:	add    BYTE PTR [rax],al
   1400062ff:	add    BYTE PTR [rdx-0x7e],bl
   140006302:	add    BYTE PTR [rax],al
   140006304:	add    BYTE PTR [rax],al
   140006306:	add    BYTE PTR [rax],al
   140006308:	push   0x82
   14000630d:	add    BYTE PTR [rax],al
   14000630f:	add    BYTE PTR [rdx-0x7e],dh
	...
   14000631e:	add    BYTE PTR [rax],al
   140006320:	adc    BYTE PTR [rbx+0x0],bl
   140006323:	rex add DWORD PTR [rax],eax
   140006326:	add    BYTE PTR [rax],al
   140006328:	adc    BYTE PTR [rax+rax*1+0x40],bl
   14000632c:	add    DWORD PTR [rax],eax
	...
   140006336:	add    BYTE PTR [rax],al
   140006338:	push   rax
   140006339:	push   rdx
   14000633a:	add    BYTE PTR [rax+0x1],al
	...
   14000634d:	add    BYTE PTR [rax],al
   14000634f:	add    BYTE PTR [rax+0x51],dh
   140006352:	add    BYTE PTR [rax+0x1],al
   140006355:	add    BYTE PTR [rax],al
   140006357:	add    BYTE PTR [rax+0x58],al
   14000635a:	add    BYTE PTR [rax+0x1],al
	...
   140006365:	add    BYTE PTR [rax],al
   140006367:	add    BYTE PTR [rax-0x6fffffd2],dh
   14000636d:	xor    DWORD PTR [rax],eax
   14000636f:	add    al,dl
   140006371:	cmp    al,0x0
   140006373:	add    BYTE PTR [rax],dl
   140006375:	add    BYTE PTR ds:[rax],al
   140006378:	loopne 0x1400063b8
   14000637a:	add    BYTE PTR [rax],al
   14000637c:	and    BYTE PTR [rdi],bh
   14000637e:	add    BYTE PTR [rax],al
   140006380:	or     BYTE PTR [rcx+0x0],0x0
   140006384:	jo     0x1400063d0
   140006386:	add    BYTE PTR [rax],al
   140006388:	and    BYTE PTR [rbx+0x0],cl
   14000638b:	add    BYTE PTR [rax+0x4e],al
   14000638e:	add    BYTE PTR [rax],al
   140006390:	ror    BYTE PTR [rsi+0x0],0x0
   140006394:	add    BYTE PTR [rcx+0x0],dl
   140006397:	add    BYTE PTR [rax+0x51],dh
   14000639a:	add    BYTE PTR [rax],al
   14000639c:	push   rax
   14000639d:	push   rdx
   14000639e:	add    BYTE PTR [rax],al
   1400063a0:	movabs al,ds:0x5580000052
   1400063a9:	pop    rax
   1400063aa:	add    BYTE PTR [rax],al
   1400063ac:	rex pop rax
   1400063ae:	add    BYTE PTR [rax],al
   1400063b0:	and    BYTE PTR [rcx+0x0],bl
   1400063b3:	add    BYTE PTR [rax],dl
   1400063b5:	pop    rbx
	...
   1400063be:	add    BYTE PTR [rax],al
   1400063c0:	jo     0x140006352
   1400063c2:	add    BYTE PTR [rax+0x1],al
   1400063c5:	add    BYTE PTR [rax],al
   1400063c7:	add    BYTE PTR [rax],dl
   1400063c9:	xchg   ecx,eax
   1400063ca:	add    BYTE PTR [rax+0x1],al
   1400063cd:	add    BYTE PTR [rax],al
   1400063cf:	add    BYTE PTR [rcx+0x64],al
   1400063d2:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x66206120
   1400063da:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x73250000
   1400063e2:	add    BYTE PTR [rax],al
   1400063e4:	add    BYTE PTR [rax],al
   1400063e6:	add    BYTE PTR [rax],al
   1400063e8:	rex.WRXB jne 0x14000645f
   1400063eb:	and    BYTE PTR [rdi+0x66],ch
   1400063ee:	and    BYTE PTR [rbp+0x65],ch
   1400063f1:	ins    DWORD PTR es:[rdi],dx
   1400063f2:	outs   dx,DWORD PTR ds:[rsi]
   1400063f3:	jb     0x14000646e
   1400063f5:	cmp    ah,BYTE PTR [rax]
   1400063f7:	and    eax,0x31
   1400063fc:	add    BYTE PTR [rax],al
   1400063fe:	add    BYTE PTR [rax],al
   140006400:	rex.XB jb 0x140006468
   140006403:	(bad)  
   140006404:	je     0x14000646f
   140006406:	outs   dx,BYTE PTR ds:[rsi]
   140006407:	and    BYTE PTR [esi+0x69],ah
   14000640b:	ins    BYTE PTR es:[rdi],dx
   14000640c:	and    BYTE PTR gs:[rcx+rbp*2+0x73],ch
   140006411:	je     0x140006413
   140006413:	add    BYTE PTR [rax],al
   140006415:	add    BYTE PTR [rax],al
   140006417:	add    BYTE PTR [rbx+0x68],al
   14000641a:	(bad)  
   14000641b:	outs   dx,BYTE PTR ds:[rsi]
   14000641c:	imul   ebp,DWORD PTR [esi+0x67],0x756f7320
   140006424:	jb     0x140006489
   140006426:	add    BYTE PTR gs:[rax],al
   140006429:	add    BYTE PTR [rax],al
   14000642b:	add    BYTE PTR [rip+0x732573],ah        # 0x1407389a4
   140006431:	add    BYTE PTR [rax],al
   140006433:	add    BYTE PTR [rax],al
   140006435:	add    BYTE PTR [rax],al
   140006437:	add    BYTE PTR [rbx+0x61],al
   14000643a:	outs   dx,BYTE PTR ds:[rsi]
   14000643b:	outs   dx,BYTE PTR ds:[rsi]
   14000643c:	outs   dx,DWORD PTR ds:[rsi]
   14000643d:	je     0x14000645f
   14000643f:	outs   dx,DWORD PTR ds:[rsi]
   140006440:	jo     0x1400064a7
   140006442:	outs   dx,BYTE PTR ds:[rsi]
   140006443:	and    BYTE PTR [rsi+0x69],ah
   140006446:	ins    BYTE PTR es:[rdi],dx
   140006447:	cmp    ah,BYTE PTR gs:[rax]
   14000644a:	and    eax,0x31
   14000644f:	add    BYTE PTR [rsi+0x69],al
   140006452:	ins    BYTE PTR es:[rdi],dx
   140006453:	and    BYTE PTR gs:[rsi+0x61],ch
   140006457:	ins    DWORD PTR es:[rdi],dx
   140006458:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   14000645d:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140006461:	cmp    ah,BYTE PTR [eax]
   140006464:	and    eax,0x43000031
   140006469:	rex.B
   14000646a:	rex.X and eax,0x64352e35
   140006470:	cs push rsp
   140006472:	rex.WRB push r8
   140006474:	add    BYTE PTR [rax],al
   140006476:	add    BYTE PTR [rax],al
   140006478:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000647a:	jne    0x1400064e8
   14000647c:	and    BYTE PTR fs:[rsi+0x6f],ch
   140006480:	je     0x1400064a2
   140006482:	movsxd esi,DWORD PTR [rdx+0x65]
   140006485:	(bad)  
   140006486:	je     0x1400064ed
   140006488:	and    BYTE PTR [rsi+0x69],ah
   14000648b:	ins    BYTE PTR es:[rdi],dx
   14000648c:	and    BYTE PTR gs:[rcx+0x6e],ch
   140006490:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   140006494:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140006499:	jns    0x1400064d5
   14000649b:	and    BYTE PTR [rip+0x4e000031],ah        # 0x18e0064d2
   1400064a1:	outs   dx,DWORD PTR ds:[rsi]
   1400064a2:	and    BYTE PTR [rbp+0x6f],ch
   1400064a5:	jb     0x14000650c
   1400064a7:	and    BYTE PTR [rsi+0x69],ah
   1400064aa:	ins    BYTE PTR es:[rdi],dx
   1400064ab:	and    BYTE PTR gs:[rax+0x61],ch
   1400064af:	outs   dx,BYTE PTR ds:[rsi]
   1400064b0:	fs ins BYTE PTR es:[rdi],dx
   1400064b2:	gs jae 0x1400064ef
   1400064b5:	and    BYTE PTR [rip+0x31],ah        # 0x1400064ec
   1400064bb:	add    BYTE PTR [rax],al
   1400064bd:	add    BYTE PTR [rax],al
   1400064bf:	add    BYTE PTR [rbp+0x6e],al
   1400064c2:	jae    0x140006539
   1400064c4:	jb     0x14000652b
   1400064c6:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   1400064ce:	jns    0x14000650a
   1400064d0:	and    BYTE PTR [rbx+0x61],al
   1400064d3:	outs   dx,BYTE PTR ds:[rsi]
   1400064d4:	je     0x1400064f6
   1400064d6:	movsxd esi,DWORD PTR [rdx+0x65]
   1400064d9:	(bad)  
   1400064da:	je     0x140006541
   1400064dc:	and    BYTE PTR [rsi+0x69],ah
   1400064df:	ins    BYTE PTR es:[rdi],dx
   1400064e0:	cmp    ah,BYTE PTR gs:[rax]
   1400064e3:	and    eax,0x65202c73
   1400064e8:	jb     0x14000655c
   1400064ea:	outs   dx,BYTE PTR ds:[rsi]
   1400064eb:	outs   dx,DWORD PTR ds:[rsi]
   1400064ec:	cmp    eax,0x202c6425
   1400064f1:	pop    rdi
   1400064f2:	outs   dx,DWORD PTR fs:[rsi]
   1400064f4:	jae    0x14000655b
   1400064f6:	jb     0x14000656a
   1400064f8:	outs   dx,BYTE PTR ds:[rsi]
   1400064f9:	outs   dx,DWORD PTR ds:[rsi]
   1400064fa:	cmp    eax,0x202c6425
   1400064ff:	rex.RXB
   140006500:	rex.WR
   140006501:	rex.RB cmp eax,0xa6425
   140006507:	add    BYTE PTR [rip+0x25642573],ah        # 0x165648a80
   14000650d:	add    BYTE PTR fs:[rax],al
   140006510:	push   rax
   140006511:	(bad)  
   140006512:	je     0x14000657c
   140006514:	and    BYTE PTR [rcx+0x73],ch
   140006517:	and    BYTE PTR [rcx+0x6e],ch
   14000651a:	jbe    0x14000657d
   14000651c:	ins    BYTE PTR es:[rdi],dx
   14000651d:	imul   esp,DWORD PTR [rdx+rdi*1+0x20],0x25003125
   140006525:	fs and eax,0x73
   14000652b:	add    BYTE PTR [rax],al
   14000652d:	add    BYTE PTR [rax],al
   14000652f:	add    BYTE PTR [rdx+0x61],dl
   140006532:	outs   dx,BYTE PTR ds:[rsi]
   140006533:	and    BYTE PTR [rdi+0x75],ch
   140006536:	je     0x140006558
   140006538:	outs   dx,DWORD PTR ds:[rsi]
   140006539:	data16 and BYTE PTR [rbp+riz*2+0x6d],dh
   14000653e:	jo     0x140006560
   140006540:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x616e
   140006547:	ins    DWORD PTR es:[rdi],dx
   140006548:	gs jae 0x14000656b
   14000654b:	(bad)  
   14000654c:	data16 je 0x1400065b4
   14000654f:	jb     0x140006571
   140006551:	and    eax,0x74612031
   140006556:	je     0x1400065bd
   140006558:	ins    DWORD PTR es:[rdi],dx
   140006559:	jo     0x1400065cf
   14000655b:	jae    0x140006597
   14000655d:	and    BYTE PTR [rip+0x32],ah        # 0x140006595
   140006563:	add    BYTE PTR [rax],al
   140006565:	add    BYTE PTR [rax],al
   140006567:	add    BYTE PTR [rbp+0x69],cl
   14000656a:	jae    0x1400065df
   14000656c:	imul   ebp,DWORD PTR [rsi+0x67],0x6c696620
   140006573:	and    BYTE PTR gs:[rsi+0x61],ch
   140006577:	ins    DWORD PTR es:[rdi],dx
   140006578:	cmp    ah,BYTE PTR gs:[rax]
   14000657b:	and    eax,0x31
   140006580:	sub    ch,BYTE PTR [rsi]
   140006582:	sub    al,BYTE PTR [rax]
   140006584:	add    BYTE PTR [rax],al
   140006586:	add    BYTE PTR [rax],al
   140006588:	rex.XB (bad) 
   14000658a:	outs   dx,BYTE PTR ds:[rsi]
   14000658b:	outs   dx,BYTE PTR ds:[rsi]
   14000658c:	outs   dx,DWORD PTR ds:[rsi]
   14000658d:	je     0x1400065af
   14000658f:	addr32 gs je 0x1400065b3
   140006593:	fs (bad) 
   140006595:	je     0x1400065fc
   140006597:	(bad)  
   140006598:	je     0x140006603
   14000659a:	ins    DWORD PTR es:[rdi],dx
   14000659b:	gs (bad) 
   14000659d:	(bad)  
   14000659e:	je     0x140006614
   1400065a0:	jb     0x14000660b
   1400065a2:	(bad)  
   1400065a3:	jne    0x140006619
   1400065a5:	gs jae 0x1400065c8
   1400065a8:	data16 jb 0x14000661a
   1400065ab:	ins    DWORD PTR es:[rdi],dx
   1400065ac:	and    BYTE PTR [rsi+0x69],ah
   1400065af:	ins    BYTE PTR es:[rdi],dx
   1400065b0:	cmp    ah,BYTE PTR gs:[rax]
   1400065b3:	and    eax,0x31
   1400065b8:	rex.XB (bad) 
   1400065ba:	outs   dx,BYTE PTR ds:[rsi]
   1400065bb:	outs   dx,BYTE PTR ds:[rsi]
   1400065bc:	outs   dx,DWORD PTR ds:[rsi]
   1400065bd:	je     0x1400065df
   1400065bf:	jae    0x140006626
   1400065c1:	je     0x1400065e3
   1400065c3:	fs (bad) 
   1400065c5:	je     0x14000662c
   1400065c7:	(bad)  
   1400065c8:	je     0x140006633
   1400065ca:	ins    DWORD PTR es:[rdi],dx
   1400065cb:	gs (bad) 
   1400065cd:	(bad)  
   1400065ce:	je     0x140006644
   1400065d0:	jb     0x14000663b
   1400065d2:	(bad)  
   1400065d3:	jne    0x140006649
   1400065d5:	gs jae 0x1400065f8
   1400065d8:	outs   dx,WORD PTR ds:[rsi]
   1400065da:	jb     0x1400065fc
   1400065dc:	imul   bp,WORD PTR [rbp+riz*2+0x3a],0x2520
   1400065e3:	xor    DWORD PTR [rax],eax
   1400065e5:	add    BYTE PTR [rax],al
   1400065e7:	add    BYTE PTR [rbx+0x6f],al
   1400065ea:	jne    0x140006658
   1400065ec:	and    BYTE PTR fs:[rsi+0x6f],ch
   1400065f0:	je     0x140006612
   1400065f2:	(bad)  
   1400065f3:	ins    BYTE PTR es:[rdi],dx
   1400065f4:	ins    BYTE PTR es:[rdi],dx
   1400065f5:	outs   dx,DWORD PTR ds:[rsi]
   1400065f6:	movsxd esp,DWORD PTR [rcx+0x74]
   1400065f9:	and    BYTE PTR gs:[rdx+0x75],ah
   1400065fd:	data16 data16 gs jb 0x140006622
   140006602:	je     0x140006673
   140006604:	and    BYTE PTR [rbx+0x6f],ah
   140006607:	jo     0x140006682
   140006609:	and    BYTE PTR [rip+0x6f742031],ah        # 0x1af748640
   14000660f:	and    BYTE PTR [rip+0x32],ah        # 0x140006647
   140006615:	add    BYTE PTR [rax],al
   140006617:	add    BYTE PTR [rbx+0x61],al
   14000661a:	outs   dx,BYTE PTR ds:[rsi]
   14000661b:	outs   dx,BYTE PTR ds:[rsi]
   14000661c:	outs   dx,DWORD PTR ds:[rsi]
   14000661d:	je     0x14000663f
   14000661f:	jb     0x140006686
   140006621:	(bad)  
   140006622:	and    BYTE PTR fs:[rsi+0x69],ah
   140006626:	ins    BYTE PTR es:[rdi],dx
   140006627:	cmp    ah,BYTE PTR gs:[rax]
   14000662a:	and    eax,0x31
   14000662f:	add    BYTE PTR [rbx+0x61],al
   140006632:	outs   dx,BYTE PTR ds:[rsi]
   140006633:	outs   dx,BYTE PTR ds:[rsi]
   140006634:	outs   dx,DWORD PTR ds:[rsi]
   140006635:	je     0x140006657
   140006637:	ja     0x1400066ab
   140006639:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x656c6966
   140006641:	cmp    ah,BYTE PTR [rax]
   140006643:	and    eax,0x31
   140006648:	pop    rbx
   140006649:	rex.WB
   14000664a:	rex.WRX push rsp
   14000664c:	rex.RB push r10
   14000664e:	push   rdx
   14000664f:	pop    rbp
   140006650:	and    BYTE PTR [rsi+0x6f],al
   140006653:	jb     0x1400066c2
   140006655:	(bad)  
   140006656:	je     0x140006678
   140006658:	jae    0x1400066ca
   14000665a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000665e:	imul   esp,DWORD PTR [rbp+0x72],0x73696d20
   140006665:	jae    0x1400066d0
   140006667:	outs   dx,BYTE PTR ds:[rsi]
   140006668:	and    BYTE PTR [eip+0x0],ah        # 0x14000666f
   14000666f:	add    BYTE PTR [rbx+0x49],bl
   140006672:	rex.WRX push rsp
   140006674:	rex.RB push r10
   140006676:	push   rdx
   140006677:	pop    rbp
   140006678:	and    BYTE PTR [rsi+0x6f],al
   14000667b:	jb     0x1400066ea
   14000667d:	(bad)  
   14000667e:	je     0x1400066a0
   140006680:	jae    0x1400066f2
   140006682:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140006686:	imul   esp,DWORD PTR [rbp+0x72],0x20252520
   14000668d:	imul   esi,DWORD PTR [rbx+0x20],0x61766e69
   140006694:	ins    BYTE PTR es:[rdi],dx
   140006695:	imul   esp,DWORD PTR [rax+rax*1+0x5b],0x45544e49
   14000669d:	push   rdx
   14000669e:	push   rdx
   14000669f:	pop    rbp
   1400066a0:	and    BYTE PTR [rsi+0x6f],al
   1400066a3:	jb     0x140006712
   1400066a5:	(bad)  
   1400066a6:	je     0x1400066c8
   1400066a8:	jae    0x14000671a
   1400066aa:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   1400066ae:	imul   esp,DWORD PTR [rbp+0x72],0x73616820
   1400066b5:	and    BYTE PTR [rbp+0x6e],dh
   1400066b8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   1400066bc:	outs   dx,BYTE PTR ds:[rsi]
   1400066bd:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400066c1:	add    BYTE PTR gs:[rax],al
   1400066c4:	and    BYTE PTR [rax],al
   1400066c6:	add    BYTE PTR [rax],al
   1400066c8:	rex.WXB add BYTE PTR [r13+0x0],spl
   1400066cc:	jb     0x1400066ce
   1400066ce:	outs   dx,BYTE PTR ds:[rsi]
   1400066cf:	add    BYTE PTR [rbp+0x0],ah
   1400066d2:	ins    BYTE PTR es:[rdi],dx
   1400066d3:	add    BYTE PTR [rbx],dh
   1400066d5:	add    BYTE PTR [rdx],dh
   1400066d7:	add    BYTE PTR [rsi],ch
   1400066d9:	add    BYTE PTR [rax+rax*1+0x6c],ah
   1400066dd:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400066e1:	add    BYTE PTR [rax],al
   1400066e3:	add    BYTE PTR [rax],al
   1400066e5:	add    BYTE PTR [rax],al
   1400066e7:	add    BYTE PTR [rax+0x65],cl
   1400066ea:	(bad)  
   1400066eb:	jo     0x140006740
   1400066ed:	gs je  0x140006739
   1400066f0:	outs   dx,BYTE PTR ds:[rsi]
   1400066f1:	outs   dx,WORD PTR ds:[rsi]
   1400066f3:	jb     0x140006762
   1400066f5:	(bad)  
   1400066f6:	je     0x140006761
   1400066f8:	outs   dx,DWORD PTR ds:[rsi]
   1400066f9:	outs   dx,BYTE PTR ds:[rsi]
   1400066fa:	add    BYTE PTR [rax],al
   1400066fc:	add    BYTE PTR [rax],al
   1400066fe:	add    BYTE PTR [rax],al
   140006700:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140006702:	jne    0x140006770
   140006704:	and    BYTE PTR fs:[rsi+0x6f],ch
   140006708:	je     0x14000672a
   14000670a:	(bad)  
   14000670b:	ins    BYTE PTR es:[rdi],dx
   14000670c:	ins    BYTE PTR es:[rdi],dx
   14000670d:	outs   dx,DWORD PTR ds:[rsi]
   14000670e:	movsxd esp,DWORD PTR [rcx+0x74]
   140006711:	and    BYTE PTR gs:[rbx+0x45],dl
   140006715:	push   rbx
   140006716:	push   rbx
   140006717:	rex.WB
   140006718:	rex.WRXB
   140006719:	rex.WRX add BYTE PTR [rax],r8b
   14000671c:	add    BYTE PTR [rax],al
   14000671e:	add    BYTE PTR [rax],al
   140006720:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140006728:	je     0x14000674a
   14000672a:	sub    BYTE PTR [rdx+0x29],dl
   14000672d:	and    BYTE PTR [rbx+0x61],al
   140006730:	(bad)  
   140006731:	imul   ebp,DWORD PTR [rsi+0x65],0x78452074
   140006738:	je     0x1400067ac
   14000673a:	(bad)  
   14000673b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000673f:	outs   dx,BYTE PTR ds:[rsi]
   140006740:	and    BYTE PTR [rdi+rbp*2+0x6f],dl
   140006744:	ins    BYTE PTR es:[rdi],dx
   140006745:	and    BYTE PTR [rip+0x72655620],ch        # 0x1b265bd6b
   14000674b:	jae    0x1400067b6
   14000674d:	outs   dx,DWORD PTR ds:[rsi]
   14000674e:	outs   dx,BYTE PTR ds:[rsi]
   14000674f:	and    BYTE PTR [rcx],dh
   140006751:	xor    BYTE PTR [rsi],ch
   140006753:	xor    BYTE PTR [rsi],ch
   140006755:	xor    DWORD PTR [rax],esi
   140006757:	xor    BYTE PTR [rcx],dh
   140006759:	xor    DWORD PTR [rsi],ebp
   14000675b:	xor    DWORD PTR [rsi],esi
   14000675d:	xor    eax,0x430a3630
   140006762:	outs   dx,DWORD PTR ds:[rsi]
   140006763:	jo     0x1400067de
   140006765:	jb     0x1400067d0
   140006767:	addr32 push 0x63282074
   14000676d:	sub    DWORD PTR [rax],esp
   14000676f:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140006777:	je     0x140006799
   140006779:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000677b:	jb     0x1400067ed
   14000677d:	outs   dx,DWORD PTR ds:[rsi]
   14000677e:	jb     0x1400067e1
   140006780:	je     0x1400067eb
   140006782:	outs   dx,DWORD PTR ds:[rsi]
   140006783:	outs   dx,BYTE PTR ds:[rsi]
   140006784:	and    BYTE PTR cs:[rcx+0x6c],al
   140006788:	ins    BYTE PTR es:[rdi],dx
   140006789:	and    BYTE PTR [rdx+0x69],dh
   14000678c:	addr32 push 0x72207374
   140006792:	gs jae 0x1400067fa
   140006795:	jb     0x14000680d
   140006797:	gs fs cs or al,BYTE PTR cs:[rax]
   14000679d:	add    BYTE PTR [rax],al
   14000679f:	add    BYTE PTR [rdx],cl
	...
   1400067ad:	add    BYTE PTR [rax],al
   1400067af:	add    BYTE PTR [rbp+0x58],al
   1400067b2:	push   rsp
   1400067b3:	push   rdx
   1400067b4:	rex.B
   1400067b5:	rex.XB push r12
   1400067b7:	and    BYTE PTR [rbx+0x2f],bl
   1400067ba:	pop    rcx
   1400067bb:	pop    rbp
   1400067bc:	and    BYTE PTR [rbx+0x2f],bl
   1400067bf:	pop    r13
   1400067c1:	and    BYTE PTR [rbx+0x2f],bl
   1400067c4:	and    BYTE PTR [rax+riz*1+0x2f],r15b
   1400067c9:	rex.RB pop r13
   1400067cb:	and    BYTE PTR [rbx+0x2f],bl
   1400067ce:	rex.WR and BYTE PTR [rcx+rbp*2+0x72],r12b
   1400067d3:	pop    rbp
   1400067d4:	and    BYTE PTR [rbx+0x61],ah
   1400067d7:	(bad)  
   1400067d8:	imul   ebp,DWORD PTR [rsi+0x65],0x665b2074
   1400067df:	imul   ebp,DWORD PTR [rbp+riz*2+0x6e],0x20656d61
   1400067e7:	cs cs cs pop rbp
   1400067eb:	or     al,BYTE PTR [rbp+0x58]
   1400067ee:	push   rsp
   1400067ef:	push   rdx
   1400067f0:	rex.B
   1400067f1:	rex.XB push r12
   1400067f3:	and    BYTE PTR [rbx+0x2f],bl
   1400067f6:	pop    rcx
   1400067f7:	pop    rbp
   1400067f8:	and    BYTE PTR [rbx+0x6f],dh
   1400067fb:	jne    0x14000686f
   1400067fd:	movsxd esp,DWORD PTR [rbp+0x20]
   140006800:	pop    rbx
   140006801:	outs   dx,BYTE PTR ds:[rsi]
   140006802:	gs ja  0x140006873
   140006805:	(bad)  
   140006806:	ins    DWORD PTR es:[rdi],dx
   140006807:	gs pop rbp
   140006809:	or     al,BYTE PTR [rbp+0x58]
   14000680c:	push   rsp
   14000680d:	push   rdx
   14000680e:	rex.B
   14000680f:	rex.XB push r12
   140006811:	and    BYTE PTR [rbx+0x2f],bl
   140006814:	pop    rcx
   140006815:	pop    rbp
   140006816:	and    BYTE PTR [rdi],ch
   140006818:	rex.XB and BYTE PTR [r11+0x6f],sil
   14000681c:	jne    0x140006890
   14000681e:	movsxd esp,DWORD PTR [rbp+0x20]
   140006821:	fs gs jae 0x140006899
   140006825:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
   14000682c:	or     cl,BYTE PTR [rdx]
   14000682e:	and    BYTE PTR [rax],ah
   140006830:	movsxd esp,DWORD PTR [rcx+0x62]
   140006833:	imul   ebp,DWORD PTR [rsi+0x65],0x2d202074
   14000683a:	and    BYTE PTR [rbx+0x61],al
   14000683d:	(bad)  
   14000683e:	imul   ebp,DWORD PTR [rsi+0x65],0x69662074
   140006845:	ins    BYTE PTR es:[rdi],dx
   140006846:	and    BYTE PTR gs:[rax],ch
   140006849:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14000684c:	je     0x1400068af
   14000684e:	imul   ebp,DWORD PTR [rsi+0x73],0x6f777420
   140006855:	and    BYTE PTR [rdi+0x72],ch
   140006858:	and    BYTE PTR [rbp+0x6f],ch
   14000685b:	jb     0x1400068c2
   14000685d:	and    BYTE PTR [rsi+0x69],ah
   140006860:	ins    BYTE PTR es:[rdi],dx
   140006861:	gs jae 0x14000688d
   140006864:	or     ah,BYTE PTR cs:[rax]
   140006867:	and    BYTE PTR [rsi+0x69],ah
   14000686a:	ins    BYTE PTR es:[rdi],dx
   14000686b:	outs   dx,BYTE PTR gs:[rsi]
   14000686d:	(bad)  
   14000686e:	ins    DWORD PTR es:[rdi],dx
   14000686f:	and    BYTE PTR gs:[rip+0x6d614e20],ch        # 0x1ad61b696
   140006876:	and    BYTE PTR gs:[rdi+0x66],ch
   14000687a:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14000687e:	and    BYTE PTR [rsi+0x69],ah
   140006881:	ins    BYTE PTR es:[rdi],dx
   140006882:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140006887:	gs js  0x1400068fe
   14000688a:	jb     0x1400068ed
   14000688c:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
   140006890:	jb     0x140006901
   140006892:	ins    DWORD PTR es:[rdi],dx
   140006893:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140006897:	and    BYTE PTR [rbx+0x61],ah
   14000689a:	(bad)  
   14000689b:	imul   ebp,DWORD PTR [rsi+0x65],0x200a2e74
   1400068a2:	and    BYTE PTR [rax],ah
   1400068a4:	and    BYTE PTR [rax],ah
   1400068a6:	and    BYTE PTR [rax],ah
   1400068a8:	and    BYTE PTR [rax],ah
   1400068aa:	and    BYTE PTR [rax],ah
   1400068ac:	and    BYTE PTR [rax],ah
   1400068ae:	push   rdi
   1400068af:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x64726163
   1400068b7:	jae    0x1400068d9
   1400068b9:	(bad)  
   1400068ba:	outs   dx,BYTE PTR ds:[rsi]
   1400068bb:	and    BYTE PTR fs:[rbp+0x75],ch
   1400068bf:	ins    BYTE PTR es:[rdi],dx
   1400068c0:	je     0x14000692b
   1400068c2:	jo     0x140006930
   1400068c4:	and    BYTE PTR gs:[rsi+0x69],ah
   1400068c8:	ins    BYTE PTR es:[rdi],dx
   1400068c9:	outs   dx,BYTE PTR gs:[rsi]
   1400068cb:	(bad)  
   1400068cc:	ins    DWORD PTR es:[rdi],dx
   1400068cd:	gs jae 0x1400068f0
   1400068d0:	sub    BYTE PTR [rbx+0x65],dh
   1400068d3:	jo     0x140006936
   1400068d5:	jb     0x140006938
   1400068d7:	je     0x14000693e
   1400068d9:	and    BYTE PTR fs:[rdx+0x79],ah
   1400068dd:	or     ah,BYTE PTR [rax]
   1400068df:	and    BYTE PTR [rax],ah
   1400068e1:	and    BYTE PTR [rax],ah
   1400068e3:	and    BYTE PTR [rax],ah
   1400068e5:	and    BYTE PTR [rax],ah
   1400068e7:	and    BYTE PTR [rax],ah
   1400068e9:	and    BYTE PTR [rax],ah
   1400068eb:	(bad)  
   1400068ec:	ins    BYTE PTR es:[rdi],dx
   1400068ed:	(bad)  
   1400068ee:	outs   dx,BYTE PTR ds:[rsi]
   1400068ef:	imul   esi,DWORD PTR [rbx+0x29],0x20
   1400068f3:	ins    DWORD PTR es:[rdi],dx
   1400068f4:	(bad)  
   1400068f5:	jns    0x140006917
   1400068f7:	(bad)  
   1400068f8:	and    BYTE PTR gs:[rbp+0x73],dh
   1400068fc:	gs fs or cl,BYTE PTR cs:[rdx]
   140006901:	and    BYTE PTR [rax],ah
   140006903:	jae    0x140006974
   140006905:	jne    0x140006979
   140006907:	movsxd esp,DWORD PTR [rbp+0x20]
   14000690a:	and    BYTE PTR [rax],ah
   14000690c:	sub    eax,0x6d6f4320
   140006911:	jo     0x140006985
   140006913:	gs jae 0x140006989
   140006916:	gs and BYTE PTR fs:[rsi+0x69],ah
   14000691b:	ins    BYTE PTR es:[rdi],dx
   14000691c:	and    BYTE PTR gs:[rax],ch
   14000691f:	(bad)  
   140006920:	and    BYTE PTR [rbx+0x61],ah
   140006923:	(bad)  
   140006924:	imul   ebp,DWORD PTR [rsi+0x65],0x69772074
   14000692b:	je     0x140006995
   14000692d:	and    BYTE PTR [rdi+0x6e],ch
   140006930:	ins    BYTE PTR es:[rdi],dx
   140006931:	jns    0x140006953
   140006933:	outs   dx,DWORD PTR ds:[rsi]
   140006934:	outs   dx,BYTE PTR ds:[rsi]
   140006935:	and    BYTE PTR gs:[rsi+0x69],ah
   140006939:	ins    BYTE PTR es:[rdi],dx
   14000693a:	sub    DWORD PTR gs:[rsi],ebp
   14000693d:	or     ah,BYTE PTR [rax]
   14000693f:	and    BYTE PTR [rsi+0x65],ch
   140006942:	ja     0x1400069b2
   140006944:	(bad)  
   140006945:	ins    DWORD PTR es:[rdi],dx
   140006946:	and    BYTE PTR gs:[rax],ah
   140006949:	sub    eax,0x77654e20
   14000694e:	and    BYTE PTR [rsi+0x69],ah
   140006951:	ins    BYTE PTR es:[rdi],dx
   140006952:	outs   dx,BYTE PTR gs:[rsi]
   140006954:	(bad)  
   140006955:	ins    DWORD PTR es:[rdi],dx
   140006956:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14000695b:	imul   esi,DWORD PTR [esi+0x65],0x65687420
   140006963:	and    BYTE PTR [rbp+0x78],ah
   140006966:	je     0x1400069da
   140006968:	(bad)  
   140006969:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   14000696d:	and    BYTE PTR [rsi+0x69],ah
   140006970:	ins    BYTE PTR es:[rdi],dx
   140006971:	gs or  ah,BYTE PTR cs:[rax]
   140006975:	and    BYTE PTR [rax],ah
   140006977:	and    BYTE PTR [rax],ah
   140006979:	and    BYTE PTR [rax],ah
   14000697b:	and    BYTE PTR [rax],ah
   14000697d:	and    BYTE PTR [rax],ah
   14000697f:	and    BYTE PTR [rax],ah
   140006981:	rex.WB
   140006982:	data16 and BYTE PTR [rsi+0x6f],ch
   140006986:	je     0x1400069a8
   140006988:	jae    0x1400069ff
   14000698a:	jo     0x1400069fc
   14000698c:	ins    BYTE PTR es:[rdi],dx
   14000698d:	imul   esp,DWORD PTR [rbp+0x64],0x6874202c
   140006994:	and    BYTE PTR gs:[rdi+0x72],ch
   140006998:	imul   esp,DWORD PTR [rdi+0x69],0x206c616e
   14000699f:	outs   dx,BYTE PTR ds:[rsi]
   1400069a0:	(bad)  
   1400069a1:	ins    DWORD PTR es:[rdi],dx
   1400069a2:	and    BYTE PTR gs:[rcx+0x73],ch
   1400069a6:	and    BYTE PTR [rbp+0x73],dh
   1400069a9:	gs fs or cl,BYTE PTR cs:[rdx]
   1400069ae:	and    BYTE PTR [rax],ah
   1400069b0:	(bad)  
   1400069b1:	and    BYTE PTR [r8],spl
   1400069b4:	and    BYTE PTR [rax],ah
   1400069b6:	and    BYTE PTR [rax],ah
   1400069b8:	and    BYTE PTR [rax],ah
   1400069ba:	and    BYTE PTR [rax+0x72],dl
   1400069bd:	outs   dx,DWORD PTR ds:[rsi]
   1400069be:	movsxd esp,DWORD PTR [rbp+0x73]
   1400069c1:	jae    0x1400069e3
   1400069c3:	rex.B
   1400069c4:	rex.WR
   1400069c5:	rex.WR and BYTE PTR [rbx+0x61],r12b
   1400069c9:	(bad)  
   1400069ca:	imul   ebp,DWORD PTR [rsi+0x65],0x202e7374
   1400069d1:	and    BYTE PTR [rsi+0x6f],al
   1400069d4:	ins    BYTE PTR es:[rdi],dx
   1400069d5:	ins    BYTE PTR es:[rdi],dx
   1400069d6:	outs   dx,DWORD PTR ds:[rsi]
   1400069d7:	ja     0x140006a4c
   1400069d9:	and    BYTE PTR [rbx+0x61],ah
   1400069dc:	(bad)  
   1400069dd:	imul   ebp,DWORD PTR [rsi+0x65],0x68632074
   1400069e4:	(bad)  
   1400069e5:	imul   ebp,DWORD PTR [rsi+0xa],0x20202020
   1400069ec:	and    BYTE PTR [rax],ah
   1400069ee:	and    BYTE PTR [rax],ah
   1400069f0:	and    BYTE PTR [rax],ah
   1400069f2:	and    BYTE PTR [rax],ah
   1400069f4:	and    BYTE PTR [rbx+0x74],dh
   1400069f7:	(bad)  
   1400069f8:	jb     0x140006a6e
   1400069fa:	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
   140006a01:	imul   si,WORD PTR [rdx+0x73],0x2074
   140006a07:	movsxd esp,DWORD PTR [rcx+0x62]
   140006a0a:	imul   ebp,DWORD PTR [rsi+0x65],0x656d2074
   140006a11:	outs   dx,BYTE PTR ds:[rsi]
   140006a12:	je     0x140006a7d
   140006a14:	outs   dx,DWORD PTR ds:[rsi]
   140006a15:	outs   dx,BYTE PTR ds:[rsi]
   140006a16:	gs fs or ah,BYTE PTR cs:[rax]
   140006a1b:	and    BYTE PTR [rdi],ch
   140006a1d:	rex.XB and BYTE PTR [r8],spl
   140006a20:	and    BYTE PTR [rax],ah
   140006a22:	and    BYTE PTR [rax],ah
   140006a24:	and    BYTE PTR [rax],ah
   140006a26:	and    BYTE PTR [rbx+0x6f],al
   140006a29:	jo     0x140006aa4
   140006a2b:	and    BYTE PTR [rbx+0x6f],dh
   140006a2e:	jne    0x140006aa2
   140006a30:	movsxd esp,DWORD PTR [rbp+0x20]
   140006a33:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
   140006a3a:	and    BYTE PTR [rbp+riz*2+0x73],ah
   140006a3e:	je     0x140006aa9
   140006a40:	outs   dx,BYTE PTR ds:[rsi]
   140006a41:	(bad)  
   140006a42:	je     0x140006aad
   140006a44:	outs   dx,DWORD PTR ds:[rsi]
   140006a45:	outs   dx,BYTE PTR ds:[rsi]
   140006a46:	and    BYTE PTR [rax],ch
   140006a48:	je     0x140006ab9
   140006a4a:	and    BYTE PTR [rbx+0x6f],ah
   140006a4d:	jo     0x140006ac8
   140006a4f:	and    BYTE PTR [rsi+0x72],ah
   140006a52:	outs   dx,DWORD PTR ds:[rsi]
   140006a53:	ins    DWORD PTR es:[rdi],dx
   140006a54:	and    BYTE PTR [rbp+rcx*2+0x46],al
   140006a58:	and    BYTE PTR [rcx+rbp*2+0x73],ah
   140006a5c:	imul   esi,DWORD PTR [rbx+0x29],0x2e
   140006a60:	or     ah,BYTE PTR [rax]
   140006a62:	and    BYTE PTR [rdi],ch
   140006a64:	and    BYTE PTR [rax],r12b
   140006a67:	and    BYTE PTR [rax],ah
   140006a69:	and    BYTE PTR [rax],ah
   140006a6b:	and    BYTE PTR [rax],ah
   140006a6d:	and    BYTE PTR [rcx+rbp*2+0x73],al
   140006a71:	jo     0x140006adf
   140006a73:	(bad)  
   140006a74:	jns    0x140006a96
   140006a76:	movsxd esp,DWORD PTR [rcx+0x62]
   140006a79:	imul   ebp,DWORD PTR [rsi+0x65],0x69642074
   140006a80:	jb     0x140006ae7
   140006a82:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140006a86:	jns    0x140006aa8
   140006a88:	sub    BYTE PTR [rbp+0x73],dh
   140006a8b:	and    BYTE PTR gs:[rdi+0x69],dh
   140006a8f:	je     0x140006af9
   140006a91:	and    BYTE PTR [rsi+0x69],ah
   140006a94:	ins    BYTE PTR es:[rdi],dx
   140006a95:	outs   dx,BYTE PTR gs:[rsi]
   140006a97:	(bad)  
   140006a98:	ins    DWORD PTR es:[rdi],dx
   140006a99:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140006a9e:	(bad)  
   140006a9f:	jbe    0x140006b10
   140006aa1:	imul   esp,DWORD PTR [rax+riz*1+0x65],0x61727478
   140006aa9:	movsxd esi,DWORD PTR [rcx+rbp*1+0x2e]
   140006aad:	or     ah,BYTE PTR [rax]
   140006aaf:	and    BYTE PTR [rdi],ch
   140006ab1:	and    BYTE PTR [r8],r12b
   140006ab4:	and    BYTE PTR [rax],ah
   140006ab6:	and    BYTE PTR [rax],ah
   140006ab8:	and    BYTE PTR [rax],ah
   140006aba:	and    BYTE PTR [rbp+0x78],al
   140006abd:	je     0x140006b31
   140006abf:	(bad)  
   140006ac0:	movsxd esi,DWORD PTR [rax+riz*1+0x28]
   140006ac4:	jne    0x140006b39
   140006ac6:	and    BYTE PTR gs:[rcx+0x6e],ch
   140006aca:	jae    0x140006b40
   140006acc:	gs (bad) 
   140006ace:	and    BYTE PTR fs:[rdi+0x66],ch
   140006ad2:	and    BYTE PTR [rdx],ch
   140006ad4:	sub    ah,BYTE PTR cs:[rax]
   140006ad7:	je     0x140006b48
   140006ad9:	and    BYTE PTR [rbp+0x78],ah
   140006adc:	je     0x140006b50
   140006ade:	(bad)  
   140006adf:	movsxd esi,DWORD PTR [rax+riz*1+0x61]
   140006ae3:	ins    BYTE PTR es:[rdi],dx
   140006ae4:	ins    BYTE PTR es:[rdi],dx
   140006ae5:	and    BYTE PTR [rsi+0x69],ah
   140006ae8:	ins    BYTE PTR es:[rdi],dx
   140006ae9:	gs jae 0x140006b15
   140006aec:	or     ah,BYTE PTR cs:[rax]
   140006aef:	and    BYTE PTR [rdi],ch
   140006af1:	rex.WR and BYTE PTR [rcx+rbp*2+0x72],r12b
   140006af6:	and    BYTE PTR [rax],ah
   140006af8:	and    BYTE PTR [rax],ah
   140006afa:	and    BYTE PTR [rdi+rbp*2+0x63],cl
   140006afe:	(bad)  
   140006aff:	je     0x140006b6a
   140006b01:	outs   dx,DWORD PTR ds:[rsi]
   140006b02:	outs   dx,BYTE PTR ds:[rsi]
   140006b03:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   140006b07:	jo     0x140006b75
   140006b09:	(bad)  
   140006b0a:	movsxd esp,DWORD PTR [rbp+0x20]
   140006b0d:	gs js  0x140006b84
   140006b10:	jb     0x140006b73
   140006b12:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140006b16:	and    BYTE PTR [rsi+0x69],ah
   140006b19:	ins    BYTE PTR es:[rdi],dx
   140006b1a:	gs jae 0x140006b3d
   140006b1d:	sub    BYTE PTR [rbp+riz*2+0x66],ah
   140006b21:	(bad)  
   140006b22:	jne    0x140006b90
   140006b24:	je     0x140006b46
   140006b26:	imul   esi,DWORD PTR [rbx+0x20],0x72727563
   140006b2d:	outs   dx,BYTE PTR gs:[rsi]
   140006b2f:	je     0x140006b51
   140006b31:	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
   140006b39:	jns    0x140006b64
   140006b3b:	or     ah,BYTE PTR cs:[rax]
   140006b3e:	and    BYTE PTR [rdi],ch
   140006b40:	pop    rcx
   140006b41:	and    BYTE PTR [rax],ah
   140006b43:	and    BYTE PTR [rax],ah
   140006b45:	and    BYTE PTR [rax],ah
   140006b47:	and    BYTE PTR [rax],ah
   140006b49:	and    BYTE PTR [rdi+rbp*2+0x20],al
   140006b4d:	outs   dx,BYTE PTR ds:[rsi]
   140006b4e:	outs   dx,DWORD PTR ds:[rsi]
   140006b4f:	je     0x140006b71
   140006b51:	jo     0x140006bc5
   140006b53:	outs   dx,DWORD PTR ds:[rsi]
   140006b54:	ins    DWORD PTR es:[rdi],dx
   140006b55:	jo     0x140006bcb
   140006b57:	and    BYTE PTR [rdx+0x65],ah
   140006b5a:	outs   dx,WORD PTR ds:[rsi]
   140006b5c:	jb     0x140006bc3
   140006b5e:	and    BYTE PTR [rdi+0x76],ch
   140006b61:	gs jb  0x140006bdb
   140006b64:	jb     0x140006bcf
   140006b66:	je     0x140006bd1
   140006b68:	outs   dx,BYTE PTR ds:[rsi]
   140006b69:	and    BYTE PTR [ecx+0x6e],ah
   140006b6d:	and    BYTE PTR [rbp+0x78],ah
   140006b70:	imul   esi,DWORD PTR [rbx+0x74],0x20676e69
   140006b77:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0x0
   140006b7e:	add    BYTE PTR [rax],al
   140006b80:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140006b82:	and    BYTE PTR [rbp+0x61],ch
   140006b85:	je     0x140006bea
   140006b87:	push   0x20676e69
   140006b8c:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x2e
   140006b93:	add    BYTE PTR [rip+0x25000a73],ah        # 0x16500760c
   140006b99:	sub    al,0x31
   140006b9b:	xor    ebp,DWORD PTR [rsp+riz*2+0x25]
   140006b9f:	sub    al,0x31
   140006ba1:	xor    ebp,DWORD PTR [rsp+riz*2+0x0]
   140006ba5:	add    BYTE PTR [rax],al
   140006ba7:	add    BYTE PTR [rax],ah
   140006ba9:	and    BYTE PTR [rax],ah
   140006bab:	and    BYTE PTR [rax],ah
   140006bad:	and    eax,0x69462031
   140006bb2:	ins    BYTE PTR es:[rdi],dx
   140006bb3:	and    BYTE PTR gs:[rax],ah
   140006bb6:	and    BYTE PTR [rip+0x79622032],ah        # 0x1b9628bee
   140006bbc:	je     0x140006c23
   140006bbe:	jae    0x140006bc0
   140006bc0:	and    BYTE PTR [rax],ah
   140006bc2:	and    BYTE PTR [rax],ah
   140006bc4:	and    BYTE PTR [rip+0x69462031],ah        # 0x1a9468bfb
   140006bca:	ins    BYTE PTR es:[rdi],dx
   140006bcb:	gs jae 0x140006bee
   140006bce:	and    BYTE PTR [rip+0x79622032],ah        # 0x1b9628c06
   140006bd4:	je     0x140006c3b
   140006bd6:	jae    0x140006bd8
   140006bd8:	rex.RB js 0x140006c4f
   140006bdb:	jb     0x140006c3e
   140006bdd:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
   140006be1:	and    BYTE PTR [eip+0x3e2d2031],ah        # 0x17e2d8c19
   140006be8:	and    BYTE PTR [rip+0x32],ah        # 0x140006c20
   140006bee:	add    BYTE PTR [rax],al
   140006bf0:	rex.WRXB jne 0x140006c67
   140006bf3:	and    BYTE PTR [rdi+0x66],ch
   140006bf6:	and    BYTE PTR [rbp+0x65],ch
   140006bf9:	ins    DWORD PTR es:[rdi],dx
   140006bfa:	outs   dx,DWORD PTR ds:[rsi]
   140006bfb:	jb     0x140006c76
   140006bfd:	and    BYTE PTR [rdi+0x68],dh
   140006c00:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x636f7270
   140006c08:	gs jae 0x140006c7e
   140006c0b:	imul   ebp,DWORD PTR [rsi+0x67],0x62616320
   140006c12:	imul   ebp,DWORD PTR [rsi+0x65],0x69662074
   140006c19:	ins    BYTE PTR es:[rdi],dx
   140006c1a:	and    BYTE PTR gs:[rip+0x25000031],ah        # 0x165006c52
   140006c21:	xor    DWORD PTR [rax],esp
   140006c23:	imul   esi,DWORD PTR [rbx+0x20],0x20746f6e
   140006c2a:	(bad)  
   140006c2b:	and    BYTE PTR [rbx+0x61],ah
   140006c2e:	(bad)  
   140006c2f:	imul   ebp,DWORD PTR [rsi+0x65],0x69662074
   140006c36:	ins    BYTE PTR es:[rdi],dx
   140006c37:	add    BYTE PTR gs:[rax],al
   140006c3a:	add    BYTE PTR [rax],al
   140006c3c:	add    BYTE PTR [rax],al
   140006c3e:	add    BYTE PTR [rax],al
   140006c40:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140006c42:	jne    0x140006cb0
   140006c44:	and    BYTE PTR fs:[rsi+0x6f],ch
   140006c48:	je     0x140006c6a
   140006c4a:	(bad)  
   140006c4b:	fs and BYTE PTR fs:[rsi+0x69],ah
   140006c50:	ins    BYTE PTR es:[rdi],dx
   140006c51:	gs jae 0x140006cc4
   140006c54:	movsxd edi,DWORD PTR gs:[rdx]
   140006c57:	and    BYTE PTR [rip+0x31],ah        # 0x140006c8e
   140006c5d:	add    BYTE PTR [rax],al
   140006c5f:	add    BYTE PTR [rax],ah
   140006c61:	rex.XB (bad) 
   140006c63:	(bad)  
   140006c64:	imul   ebp,DWORD PTR [rsi+0x65],0x31252074
   140006c6b:	add    BYTE PTR [rdx],cl
   140006c6d:	and    eax,0xa0a73
   140006c72:	add    BYTE PTR [rax],al
   140006c74:	add    BYTE PTR [rax],al
   140006c76:	add    BYTE PTR [rax],al
   140006c78:	rex.RX
   140006c79:	rex.R
   140006c7a:	rex.WB
   140006c7b:	rex.R
   140006c7c:	gs jae 0x140006cf3
   140006c7f:	jb     0x140006cf0
   140006c81:	jns    0x140006ca3
   140006c83:	data16 (bad) 
   140006c85:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
   140006c8d:	add    BYTE PTR [rax],al
   140006c8f:	add    BYTE PTR [rip+0x25732573],ah        # 0x165739208
   140006c95:	sub    al,0x31
   140006c97:	xor    ebp,DWORD PTR [rsp+riz*2+0x25]
   140006c9b:	sub    eax,0x73
   140006ca0:	and    eax,0x32252031
   140006ca5:	and    BYTE PTR [rip+0x34252033],ah        # 0x174258cde
   140006cab:	add    BYTE PTR [rip+0x25732573],ah        # 0x165739224
   140006cb1:	jae    0x140006cb3
   140006cb3:	add    BYTE PTR [rax],al
   140006cb5:	add    BYTE PTR [rax],al
   140006cb7:	add    BYTE PTR [rip+0x203a2031],ah        # 0x1603a8cee
   140006cbd:	push   rbx
   140006cbe:	je     0x140006d21
   140006cc0:	jb     0x140006d36
   140006cc2:	jae    0x140006ce4
   140006cc4:	imul   ebp,DWORD PTR [rsi+0x20],0x69626163
   140006ccb:	outs   dx,BYTE PTR ds:[rsi]
   140006ccc:	gs je  0x140006cef
   140006ccf:	and    eax,0x6e6f2032
   140006cd4:	and    BYTE PTR [rcx+rbp*2+0x73],ah
   140006cd8:	imul   esp,DWORD PTR [rax],0x27
   140006cdb:	and    eax,0x2733
   140006ce0:	push   rbp
   140006ce1:	rex.WRX
   140006ce2:	rex.WXB
   140006ce3:	rex.WRX
   140006ce4:	rex.WRXB push r15
   140006ce6:	rex.WRX and BYTE PTR [rsi+0x4f],r9b
   140006cea:	push   rsp
   140006ceb:	rex.WB
   140006cec:	rex.RX
   140006ced:	rex.WB
   140006cee:	rex.XB
   140006cef:	push   r12
   140006cf1:	rex.WB
   140006cf2:	rex.WRXB
   140006cf3:	rex.WRX cmp r12b,BYTE PTR [rax]
   140006cf6:	and    eax,0xa64
   140006cfb:	add    BYTE PTR [rax],al
   140006cfd:	add    BYTE PTR [rax],al
   140006cff:	add    BYTE PTR [rbx+0x61],al
   140006d02:	outs   dx,BYTE PTR ds:[rsi]
   140006d03:	outs   dx,BYTE PTR ds:[rsi]
   140006d04:	outs   dx,DWORD PTR ds:[rsi]
   140006d05:	je     0x140006d27
   140006d07:	movsxd esi,DWORD PTR [rdx+0x65]
   140006d0a:	(bad)  
   140006d0b:	je     0x140006d72
   140006d0d:	and    BYTE PTR [rsi+0x69],ah
   140006d10:	ins    BYTE PTR es:[rdi],dx
   140006d11:	cmp    ah,BYTE PTR gs:[rax]
   140006d14:	and    eax,0x45000031
   140006d19:	js     0x140006d8f
   140006d1b:	jb     0x140006d7e
   140006d1d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
   140006d21:	and    BYTE PTR [eip+0x31],ah        # 0x140006d59
   140006d28:	rex.WRXB jbe 0x140006d90
   140006d2b:	jb     0x140006da4
   140006d2d:	jb     0x140006d98
   140006d2f:	je     0x140006d96
   140006d31:	and    BYTE PTR [rip+0x59282031],ah        # 0x199288d68
   140006d37:	gs jae 0x140006d69
   140006d3a:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140006d3c:	sub    DWORD PTR [rdi],edi
   140006d3e:	add    BYTE PTR [rax],al
   140006d40:	and    eax,0x863
   140006d45:	add    BYTE PTR [rax],al
   140006d47:	add    BYTE PTR [rdi+0x72],dl
   140006d4a:	outs   dx,DWORD PTR ds:[rsi]
   140006d4b:	outs   dx,BYTE PTR ds:[rsi]
   140006d4c:	and    BYTE PTR [ebx+0x6f],ah
   140006d50:	outs   dx,BYTE PTR ds:[rsi]
   140006d51:	je     0x140006dbc
   140006d53:	outs   dx,BYTE PTR ds:[rsi]
   140006d54:	jne    0x140006db7
   140006d56:	je     0x140006dc1
   140006d58:	outs   dx,DWORD PTR ds:[rsi]
   140006d59:	outs   dx,BYTE PTR ds:[rsi]
   140006d5a:	and    BYTE PTR [rbx+0x61],ah
   140006d5d:	(bad)  
   140006d5e:	imul   ebp,DWORD PTR [rsi+0x65],0x69662074
   140006d65:	ins    BYTE PTR es:[rdi],dx
   140006d66:	and    BYTE PTR gs:[rip+0x31],ah        # 0x140006d9e
   140006d6d:	add    BYTE PTR [rax],al
   140006d6f:	add    BYTE PTR [rbp+0x52],al
   140006d72:	push   rdx
   140006d73:	rex.WRXB push r10
   140006d75:	cmp    ah,BYTE PTR [rax]
   140006d77:	and    eax,0x31
   140006d7c:	or     ah,BYTE PTR [rip+0xa73]        # 0x1400077f5
   140006d82:	add    BYTE PTR [rax],al
   140006d84:	and    eax,0x25732573
   140006d89:	movsxd eax,DWORD PTR [rax]
   140006d8b:	add    BYTE PTR [rax],al
   140006d8d:	add    BYTE PTR [rax],al
   140006d8f:	add    BYTE PTR [rbp+0x78],al
   140006d92:	je     0x140006e06
   140006d94:	(bad)  
   140006d95:	movsxd esi,DWORD PTR [rax+riz*1+0x6e]
   140006d99:	gs gs fs jae 0x140006dbe
   140006d9e:	movsxd esp,DWORD PTR [rcx+0x62]
   140006da1:	imul   ebp,DWORD PTR [rsi+0x65],0x69662074
   140006da8:	ins    BYTE PTR es:[rdi],dx
   140006da9:	and    BYTE PTR gs:[rdi],ah
   140006dac:	and    eax,0x202e2731
   140006db1:	and    BYTE PTR [rax+0x6c],dl
   140006db4:	gs (bad) 
   140006db6:	jae    0x140006e1d
   140006db8:	and    BYTE PTR [rcx+0x6e],ch
   140006dbb:	jae    0x140006e22
   140006dbd:	jb     0x140006e33
   140006dbf:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140006dc3:	and    BYTE PTR [rcx+rbp*2+0x73],ah
   140006dc7:	imul   ecx,DWORD PTR [rdx],0x6c
   140006dca:	(bad)  
   140006dcb:	(bad)  
   140006dcc:	gs ins BYTE PTR es:[rdi],dx
   140006dce:	gs and BYTE PTR fs:[rdi],ah
   140006dd2:	and    eax,0x69202732
   140006dd7:	outs   dx,BYTE PTR ds:[rsi]
   140006dd8:	je     0x140006e49
   140006dda:	and    BYTE PTR [rdx+rsi*2+0x69],ah
   140006dde:	jbe    0x140006e45
   140006de0:	and    BYTE PTR [rip+0x61202c33],ah        # 0x1a1209a19
   140006de6:	outs   dx,BYTE PTR ds:[rsi]
   140006de7:	and    BYTE PTR fs:[rax+0x72],dh
   140006deb:	gs jae 0x140006e61
   140006dee:	and    BYTE PTR [rbp+0x4e],al
   140006df1:	push   rsp
   140006df2:	rex.RB push r10
   140006df4:	and    BYTE PTR cs:[rax],ah
   140006df7:	pop    rcx
   140006df8:	outs   dx,DWORD PTR ds:[rsi]
   140006df9:	jne    0x140006e1b
   140006dfb:	ins    DWORD PTR es:[rdi],dx
   140006dfc:	(bad)  
   140006dfd:	jns    0x140006e09
   140006dff:	outs   dx,BYTE PTR gs:[rsi]
   140006e01:	je     0x140006e68
   140006e03:	jb     0x140006e25
   140006e05:	(bad)  
   140006e06:	and    BYTE PTR [rcx+rbp*2+0x66],ah
   140006e0a:	data16 gs jb 0x140006e73
   140006e0e:	outs   dx,BYTE PTR ds:[rsi]
   140006e0f:	je     0x140006e31
   140006e11:	fs jb  0x140006e7d
   140006e14:	jbe    0x140006e7b
   140006e16:	and    BYTE PTR [rcx+0x6e],ah
   140006e19:	fs (bad) 
   140006e1b:	outs   dx,DWORD PTR ds:[rsi]
   140006e1c:	jb     0x140006e3e
   140006e1e:	jo     0x140006e81
   140006e20:	je     0x140006e8a
   140006e22:	cmp    al,BYTE PTR [rax]
	...
   140006e30:	rex.RB js 0x140006ea7
   140006e33:	jb     0x140006e96
   140006e35:	movsxd esi,DWORD PTR [rax+riz*1+0x6e]
   140006e39:	gs gs fs jae 0x140006e5e
   140006e3e:	movsxd esp,DWORD PTR [rcx+0x62]
   140006e41:	imul   ebp,DWORD PTR [rsi+0x65],0x69662074
   140006e48:	ins    BYTE PTR es:[rdi],dx
   140006e49:	and    BYTE PTR gs:[rdi],ah
   140006e4c:	and    eax,0x66202731
   140006e51:	jb     0x140006ec2
   140006e53:	ins    DWORD PTR es:[rdi],dx
   140006e54:	and    BYTE PTR [rdi],ah
   140006e56:	and    eax,0xa2e2732
   140006e5b:	push   rax
   140006e5c:	ins    BYTE PTR es:[rdi],dx
   140006e5d:	gs (bad) 
   140006e5f:	jae    0x140006ec6
   140006e61:	and    BYTE PTR [rbp+0x6e],ah
   140006e64:	je     0x140006ecb
   140006e66:	jb     0x140006e88
   140006e68:	je     0x140006ed2
   140006e6a:	and    BYTE PTR gs:[rax+0x61],dh
   140006e6e:	je     0x140006ed8
   140006e70:	and    BYTE PTR [rdi+0x68],dh
   140006e73:	gs jb  0x140006edb
   140006e76:	and    BYTE PTR [rax+rbp*2+0x69],dh
   140006e7a:	jae    0x140006e9c
   140006e7c:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x616d
   140006e83:	jns    0x140006ea5
   140006e85:	(bad)  
   140006e86:	or     ah,BYTE PTR gs:[rsi+0x6f]
   140006e8a:	jne    0x140006efa
   140006e8c:	fs sub al,0x20
   140006e8f:	(bad)  
   140006e90:	outs   dx,BYTE PTR ds:[rsi]
   140006e91:	and    BYTE PTR fs:[rax+0x72],dh
   140006e95:	gs jae 0x140006f0b
   140006e98:	and    BYTE PTR [rbp+0x4e],al
   140006e9b:	push   rsp
   140006e9c:	rex.RB push r10
   140006e9e:	cmp    al,BYTE PTR [rax]
   140006ea0:	rex.XB (bad) 
   140006ea2:	outs   dx,BYTE PTR ds:[rsi]
   140006ea3:	movsxd esp,DWORD PTR [rbp+0x6c]
   140006ea6:	ins    BYTE PTR es:[rdi],dx
   140006ea7:	gs add BYTE PTR fs:[rax],al
   140006eab:	add    BYTE PTR [rax],al
   140006ead:	add    BYTE PTR [rax],al
   140006eaf:	add    BYTE PTR [rip+0x786c3830],ah        # 0x1b86ca6e5
   140006eb5:	and    eax,0x25782575
   140006eba:	add    BYTE PTR fs:[rax],al
   140006ebd:	add    BYTE PTR [rax],al
   140006ebf:	add    BYTE PTR [rbx+0x52],al
   140006ec2:	pop    rcx
   140006ec3:	push   rax
   140006ec4:	push   rsp
   140006ec5:	and    BYTE PTR [rax+0x65],cl
   140006ec8:	(bad)  
   140006ec9:	fs gs jb 0x140006f07
   140006ecd:	and    BYTE PTR [rdx+0x3d],dh
   140006ed0:	cmp    al,0x25
   140006ed2:	xor    DWORD PTR ds:0x73203e32,ebp
   140006ed9:	gs je  0x140006f25
   140006edc:	rex.R cmp eax,0x69203325
   140006ee2:	rex.XB (bad) 
   140006ee4:	(bad)  
   140006ee5:	imul   ebp,DWORD PTR [rsi+0x65],0x34253d74
   140006eec:	add    BYTE PTR [rax],al
   140006eee:	add    BYTE PTR [rax],al
   140006ef0:	and    eax,0x786c3830
   140006ef5:	and    eax,0x642575
   140006efa:	add    BYTE PTR [rax],al
   140006efc:	add    BYTE PTR [rax],al
   140006efe:	add    BYTE PTR [rax],al
   140006f00:	rex.XB push r10
   140006f02:	pop    rcx
   140006f03:	push   rax
   140006f04:	push   rsp
   140006f05:	and    BYTE PTR [rsi+0x6f],al
   140006f08:	ins    BYTE PTR es:[rdi],dx
   140006f09:	fs gs jb 0x140006f47
   140006f0d:	and    BYTE PTR [rdx+0x3d],dh
   140006f10:	cmp    al,0x25
   140006f12:	xor    DWORD PTR ds:0x69203e32,ebp
   140006f19:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140006f1b:	ins    BYTE PTR es:[rdi],dx
   140006f1c:	fs gs jb 0x140006f5d
   140006f20:	and    eax,0x33
   140006f25:	add    BYTE PTR [rax],al
   140006f27:	add    BYTE PTR [rip+0x786c3830],ah        # 0x1b86ca75d
   140006f2d:	and    eax,0x38302575
   140006f32:	ins    BYTE PTR es:[rdi],dx
   140006f33:	js     0x140006f5a
   140006f35:	jne    0x140006f5c
   140006f37:	fs and eax,0x75
   140006f3d:	add    BYTE PTR [rax],al
   140006f3f:	add    BYTE PTR [rbx+0x52],al
   140006f42:	pop    rcx
   140006f43:	push   rax
   140006f44:	push   rsp
   140006f45:	and    BYTE PTR [rcx+riz*2+0x74],al
   140006f49:	(bad)  
   140006f4a:	cmp    ah,BYTE PTR [rax]
   140006f4c:	and    BYTE PTR [rax],ah
   140006f4e:	jb     0x140006f8d
   140006f50:	cmp    al,0x25
   140006f52:	xor    DWORD PTR ds:0x62203e32,ebp
   140006f59:	cmp    eax,0x2c33253c
   140006f5e:	and    eax,0x66203e34
   140006f63:	push   rbx
   140006f64:	jo     0x140006fd2
   140006f66:	imul   esi,DWORD PTR [rbp+rdi*1+0x25],0x62632035
   140006f6e:	push   rax
   140006f6f:	(bad)  
   140006f70:	jb     0x140006fe6
   140006f72:	imul   esp,DWORD PTR [rcx+0x6c],0x36253d
   140006f79:	add    BYTE PTR [rax],al
   140006f7b:	add    BYTE PTR [rax],al
   140006f7d:	add    BYTE PTR [rax],al
   140006f7f:	add    BYTE PTR [rbp+0x4e],dl
   140006f82:	rex.WXB
   140006f83:	rex.WRX
   140006f84:	rex.WRXB push r15
   140006f86:	rex.WRX and BYTE PTR [rbp+r8*2+0x43],r8b
   140006f8b:	push   rdx
   140006f8c:	pop    rcx
   140006f8d:	push   rax
   140006f8e:	push   rsp
   140006f8f:	and    BYTE PTR [rbx+0x4f],al
   140006f92:	rex.WRB
   140006f93:	rex.WRB
   140006f94:	rex.B
   140006f95:	rex.WRX
   140006f96:	cmp    r12b,BYTE PTR [rax]
   140006f99:	and    eax,0xa64
   140006f9e:	add    BYTE PTR [rax],al
   140006fa0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140006fa2:	movsxd esp,DWORD PTR [rcx+0x74]
   140006fa5:	imul   ebp,DWORD PTR [rdi+0x6e],0x73696d20
   140006fac:	jae    0x140007017
   140006fae:	outs   dx,BYTE PTR ds:[rsi]
   140006faf:	add    BYTE PTR [eax],al
   140006fb2:	add    BYTE PTR [rax],al
   140006fb4:	and    eax,0x43000063
   140006fb9:	outs   dx,DWORD PTR ds:[rsi]
   140006fba:	outs   dx,BYTE PTR ds:[rsi]
   140006fbb:	data16 ins BYTE PTR es:[rdi],dx
   140006fbd:	imul   esp,DWORD PTR [rbx+0x74],0x20676e69
   140006fc4:	jae    0x14000703d
   140006fc6:	imul   esi,DWORD PTR [rbx+riz*2+0x68],0x3125203a
   140006fce:	add    BYTE PTR [rax],al
   140006fd0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140006fd2:	movsxd esp,DWORD PTR [rcx+0x74]
   140006fd5:	imul   ebp,DWORD PTR [rdi+0x6e],0x65707320
   140006fdc:	movsxd ebp,DWORD PTR [rcx+0x66]
   140006fdf:	imul   esp,DWORD PTR [rbp+0x64],0x726f6d20
   140006fe6:	and    BYTE PTR gs:[rax+rbp*2+0x61],dh
   140006feb:	outs   dx,BYTE PTR ds:[rsi]
   140006fec:	and    BYTE PTR [rdi+0x6e],ch
   140006fef:	movsxd esp,DWORD PTR [rbp+0x0]
   140006ff2:	add    BYTE PTR [rax],al
   140006ff4:	add    BYTE PTR [rax],al
   140006ff6:	add    BYTE PTR [rax],al
   140006ff8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140006ffa:	jbe    0x14000705d
   140006ffc:	ins    BYTE PTR es:[rdi],dx
   140006ffd:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x63746977
   140007005:	push   0x3125203a
   14000700a:	add    BYTE PTR [rax],al
   14000700c:	add    BYTE PTR [rax],al
   14000700e:	add    BYTE PTR [rax],al
   140007010:	rex.X (bad) 
   140007012:	and    BYTE PTR fs:[rax+0x61],dh
   140007016:	jb     0x140007079
   140007018:	ins    DWORD PTR es:[rdi],dx
   140007019:	gs je  0x140007081
   14000701c:	jb     0x140007091
   14000701e:	add    BYTE PTR [rax],al
   140007020:	rex.WRB jne 0x140007096
   140007023:	je     0x140007045
   140007025:	jae    0x14000709c
   140007027:	jo     0x140007099
   140007029:	ins    BYTE PTR es:[rdi],dx
   14000702a:	jns    0x14000704c
   14000702c:	(bad)  
   14000702d:	and    BYTE PTR [rbx+0x61],ah
   140007030:	(bad)  
   140007031:	imul   ebp,DWORD PTR [rsi+0x65],0x69662074
   140007038:	ins    BYTE PTR es:[rdi],dx
   140007039:	and    BYTE PTR gs:[rsi+0x61],ch
   14000703d:	ins    DWORD PTR es:[rdi],dx
   14000703e:	add    BYTE PTR gs:[rbp+0x78],al
   140007042:	je     0x1400070a3
   140007044:	rex.XB (bad) 
   140007046:	(bad)  
   140007048:	add    BYTE PTR [rax],al
   14000704a:	add    BYTE PTR [rax],al
   14000704c:	jo     0x14000704e
   14000704e:	add    BYTE PTR [rax],al
   140007050:	(bad)  
   140007051:	add    BYTE PTR [rax],al
   140007053:	add    BYTE PTR [rax],al
   140007055:	add    BYTE PTR [rax],al
   140007057:	add    BYTE PTR [rip+0x25643230],ah        # 0x16564a28d
   14000705d:	xor    BYTE PTR [rdx],dh
   14000705f:	fs and eax,0x25643230
   140007065:	xor    ah,BYTE PTR [rbp+riz*1+0x30]
   140007069:	xor    ah,BYTE PTR [rbp+riz*1+0x30]
   14000706d:	xor    ah,BYTE PTR [rbp+riz*1+0x73]
   140007071:	add    BYTE PTR [rax],al
   140007073:	add    BYTE PTR [rax],al
   140007075:	add    BYTE PTR [rax],al
   140007077:	add    BYTE PTR [rip+0x32252d31],ah        # 0x172259dae
   14000707d:	sub    eax,0x25203325
   140007082:	xor    al,0x3a
   140007084:	and    eax,0x36253a35
   140007089:	and    eax,0x2d2d0037
   14000708e:	sub    eax,0x2d
   140007093:	add    BYTE PTR [rax],al
   140007095:	add    BYTE PTR [rax],al
   140007097:	add    BYTE PTR [rbx+0x6f],al
   14000709a:	jne    0x140007108
   14000709c:	and    BYTE PTR fs:[rsi+0x6f],ch
   1400070a0:	je     0x1400070c2
   1400070a2:	imul   bp,WORD PTR [rsi+0x64],0x6320
   1400070a8:	(bad)  
   1400070a9:	(bad)  
   1400070aa:	imul   ebp,DWORD PTR [rsi+0x65],0x69662074
   1400070b1:	ins    BYTE PTR es:[rdi],dx
   1400070b2:	and    BYTE PTR gs:[rip+0x25000031],ah        # 0x1650070ea
   1400070b9:	jae    0x1400070e0
   1400070bb:	xor    BYTE PTR [rax+rdi*2],dh
   1400070be:	add    BYTE PTR [rax],al
   1400070c0:	rex.XB (bad) 
   1400070c2:	(bad)  
   1400070c3:	imul   ebp,DWORD PTR [rsi+0x65],0x69662074
   1400070ca:	ins    BYTE PTR es:[rdi],dx
   1400070cb:	and    BYTE PTR gs:[rip+0x61682031],ah        # 0x1a1689103
   1400070d2:	jae    0x1400070f4
   1400070d4:	(bad)  
   1400070d5:	outs   dx,BYTE PTR ds:[rsi]
   1400070d6:	and    BYTE PTR [rbp+0x6e],dh
   1400070d9:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   1400070dd:	outs   dx,BYTE PTR ds:[rsi]
   1400070de:	and    BYTE PTR [rsi+0x65],dh
   1400070e1:	jb     0x140007156
   1400070e3:	imul   ebp,DWORD PTR [rdi+0x6e],0x29322528
   1400070ea:	add    BYTE PTR [rax],al
   1400070ec:	add    BYTE PTR [rax],al
   1400070ee:	add    BYTE PTR [rax],al
   1400070f0:	rex.XB (bad) 
   1400070f2:	(bad)  
   1400070f3:	imul   ebp,DWORD PTR [rsi+0x65],0x69662074
   1400070fa:	ins    BYTE PTR es:[rdi],dx
   1400070fb:	and    BYTE PTR gs:[rip+0x73692031],ah        # 0x1b3699133
   140007102:	and    BYTE PTR [rbx+0x6f],ah
   140007105:	jb     0x140007179
   140007107:	jne    0x140007179
   140007109:	je     0x140007170
   14000710b:	add    BYTE PTR fs:[rax],al
   14000710e:	add    BYTE PTR [rax],al
   140007110:	push   rbp
   140007111:	outs   dx,BYTE PTR ds:[rsi]
   140007112:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140007116:	outs   dx,BYTE PTR ds:[rsi]
   140007117:	and    BYTE PTR [rbx+0x6f],ah
   14000711a:	ins    DWORD PTR es:[rdi],dx
   14000711b:	jo     0x14000718f
   14000711d:	gs jae 0x140007193
   140007120:	imul   ebp,DWORD PTR [rdi+0x6e],0x70797420
   140007127:	and    BYTE PTR gs:[rcx+0x6e],ch
   14000712b:	and    BYTE PTR [rbx+0x61],ah
   14000712e:	(bad)  
   14000712f:	imul   ebp,DWORD PTR [rsi+0x65],0x69662074
   140007136:	ins    BYTE PTR es:[rdi],dx
   140007137:	and    BYTE PTR gs:[rip+0x31],ah        # 0x14000716f
   14000713e:	add    BYTE PTR [rax],al
   140007140:	rex.RX (bad) 
   140007142:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x65642065
   14000714a:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000714d:	jo     0x1400071c1
   14000714f:	gs jae 0x1400071c5
   140007152:	imul   ebp,DWORD PTR [rsi+0x67],0x62616320
   140007159:	imul   ebp,DWORD PTR [rsi+0x65],0x69662074
   140007160:	ins    BYTE PTR es:[rdi],dx
   140007161:	and    BYTE PTR gs:[rip+0x31],ah        # 0x140007199
   140007168:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000716a:	jne    0x1400071d8
   14000716c:	and    BYTE PTR fs:[rsi+0x6f],ch
   140007170:	je     0x140007192
   140007172:	movsxd esi,DWORD PTR [rdx+0x65]
   140007175:	(bad)  
   140007176:	je     0x1400071dd
   140007178:	and    BYTE PTR [rbp+riz*2+0x6d],dh
   14000717c:	jo     0x1400071ed
   14000717e:	jb     0x1400071e1
   140007180:	jb     0x1400071fb
   140007182:	and    BYTE PTR [rsi+0x69],ah
   140007185:	ins    BYTE PTR es:[rdi],dx
   140007186:	and    BYTE PTR gs:[rsi+0x6f],ah
   14000718a:	jb     0x1400071ac
   14000718c:	and    eax,0x25203a31
   140007191:	xor    al,BYTE PTR [rax]
   140007193:	add    BYTE PTR [rax],al
   140007195:	add    BYTE PTR [rax],al
   140007197:	add    BYTE PTR [rip+0x25732573],ah        # 0x165739710
   14000719d:	ins    BYTE PTR es:[rdi],dx
   14000719e:	add    BYTE PTR fs:[rsi+0x6f],cl
   1400071a2:	je     0x1400071c4
   1400071a4:	outs   dx,BYTE PTR gs:[rsi]
   1400071a6:	outs   dx,DWORD PTR ds:[rsi]
   1400071a7:	jne    0x140007210
   1400071a9:	push   0x61707320
   1400071ae:	movsxd esp,DWORD PTR [rbp+0x20]
   1400071b1:	outs   dx,WORD PTR ds:[rsi]
   1400071b3:	jb     0x1400071d5
   1400071b5:	je     0x14000721c
   1400071b7:	ins    DWORD PTR es:[rdi],dx
   1400071b8:	jo     0x140007229
   1400071ba:	jb     0x14000721d
   1400071bc:	jb     0x140007237
   1400071be:	and    BYTE PTR [rsi+0x69],ah
   1400071c1:	ins    BYTE PTR es:[rdi],dx
   1400071c2:	and    BYTE PTR gs:[rip+0x68772032],ah        # 0x1a87791fb
   1400071c9:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x6f636564
   1400071d1:	ins    DWORD PTR es:[rdi],dx
   1400071d2:	jo     0x140007246
   1400071d4:	gs jae 0x14000724a
   1400071d7:	imul   ebp,DWORD PTR [rsi+0x67],0x3a312520
   1400071de:	and    BYTE PTR [rip+0x79622033],ah        # 0x1b9629217
   1400071e4:	je     0x14000724b
   1400071e6:	jae    0x140007208
   1400071e8:	outs   dx,BYTE PTR ds:[rsi]
   1400071e9:	gs gs fs gs add BYTE PTR fs:[rax],al
   1400071f0:	rex.RB jb 0x140007265
   1400071f3:	outs   dx,DWORD PTR ds:[rsi]
   1400071f4:	jb     0x140007216
   1400071f6:	movsxd esi,DWORD PTR [rdx+0x65]
   1400071f9:	(bad)  
   1400071fa:	je     0x140007265
   1400071fc:	outs   dx,BYTE PTR ds:[rsi]
   1400071fd:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   140007202:	je     0x14000726d
   140007204:	outs   dx,BYTE PTR ds:[rsi]
   140007205:	(bad)  
   140007206:	je     0x140007271
   140007208:	outs   dx,DWORD PTR ds:[rsi]
   140007209:	outs   dx,BYTE PTR ds:[rsi]
   14000720a:	and    BYTE PTR [rsi+0x69],ah
   14000720d:	ins    BYTE PTR es:[rdi],dx
   14000720e:	and    BYTE PTR gs:[rip+0x72662031],ah        # 0x1b2669246
   140007215:	outs   dx,DWORD PTR ds:[rsi]
   140007216:	ins    DWORD PTR es:[rdi],dx
   140007217:	and    BYTE PTR [rbx+0x61],ah
   14000721a:	(bad)  
   14000721b:	imul   ebp,DWORD PTR [rsi+0x65],0x69662074
   140007222:	ins    BYTE PTR es:[rdi],dx
   140007223:	and    BYTE PTR gs:[rip+0x45520032],ah        # 0x18552725c
   14000722a:	push   rbx
   14000722b:	rex.RB push r10
   14000722d:	push   rsi
   14000722e:	and    BYTE PTR [r11+0x69],r14b
   140007232:	jp     0x140007299
   140007234:	and    BYTE PTR [rbp+0x69],ch
   140007237:	jae    0x1400072a6
   140007239:	(bad)  
   14000723a:	je     0x14000729f
   14000723c:	push   0x206e6920
   140007241:	movsxd esp,DWORD PTR [rcx+0x62]
   140007244:	imul   ebp,DWORD PTR [rsi+0x65],0x69662074
   14000724b:	ins    BYTE PTR es:[rdi],dx
   14000724c:	and    BYTE PTR gs:[rip+0x31],ah        # 0x140007284
   140007253:	add    BYTE PTR [rax],al
   140007255:	add    BYTE PTR [rax],al
   140007257:	add    BYTE PTR [rbp+0x73],dl
   14000725a:	gs jb  0x14000727d
   14000725d:	(bad)  
   14000725e:	(bad)  
   14000725f:	outs   dx,DWORD PTR ds:[rsi]
   140007260:	jb     0x1400072d6
   140007262:	gs and BYTE PTR fs:[rdi+0x68],dh
   140007267:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x636f7270
   14000726f:	gs jae 0x1400072e5
   140007272:	imul   ebp,DWORD PTR [rsi+0x67],0x62616320
   140007279:	imul   ebp,DWORD PTR [rsi+0x65],0x69662074
   140007280:	ins    BYTE PTR es:[rdi],dx
   140007281:	and    BYTE PTR gs:[rip+0x31],ah        # 0x1400072b9
   140007288:	push   rbp
   140007289:	outs   dx,BYTE PTR ds:[rsi]
   14000728a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000728e:	outs   dx,BYTE PTR ds:[rsi]
   14000728f:	and    BYTE PTR [rbp+0x72],ah
   140007292:	jb     0x140007303
   140007294:	jb     0x1400072be
   140007296:	and    eax,0x70202931
   14000729b:	jb     0x14000730c
   14000729d:	movsxd esp,DWORD PTR [rbp+0x73]
   1400072a0:	jae    0x14000730b
   1400072a2:	outs   dx,BYTE PTR ds:[rsi]
   1400072a3:	and    BYTE PTR [ebx+0x61],ah
   1400072a7:	(bad)  
   1400072a8:	imul   ebp,DWORD PTR [rsi+0x65],0x69662074
   1400072af:	ins    BYTE PTR es:[rdi],dx
   1400072b0:	and    BYTE PTR gs:[rip+0x32],ah        # 0x1400072e9
   1400072b7:	add    BYTE PTR [rbp+0x73],ah
   1400072ba:	data16 add BYTE PTR [rdx+0x0],ah
   1400072be:	add    BYTE PTR [rax],al
   1400072c0:	rex.XB
   1400072c1:	rex.WRXB
   1400072c2:	rex.WRB push r11
   1400072c4:	push   rax
   1400072c5:	rex.RB
   1400072c6:	rex.XB add BYTE PTR [r8],al
	...
   1400072d1:	add    BYTE PTR [rax],al
   1400072d3:	add    bl,cl
   1400072d5:	loope  0x1400072c4
   1400072d7:	push   rdi
   1400072d8:	add    BYTE PTR [rax],al
   1400072da:	add    BYTE PTR [rax],al
   1400072dc:	add    al,BYTE PTR [rax]
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	and    eax,0xd0000000
   1400072e5:	jae    0x1400072e7
   1400072e7:	add    al,dl
   1400072e9:	add    BYTE PTR gs:[rax],al
   1400072ec:	add    BYTE PTR [rax],al
   1400072ee:	add    BYTE PTR [rax],al
   1400072f0:	retf   
   1400072f1:	loope  0x1400072e0
   1400072f3:	push   rdi
   1400072f4:	add    BYTE PTR [rax],al
   1400072f6:	add    BYTE PTR [rax],al
   1400072f8:	or     eax,0xe0000000
   1400072fd:	add    DWORD PTR [rax],eax
   1400072ff:	add    BYTE PTR [rsp+rsi*2],cl
   140007302:	add    BYTE PTR [rax],al
   140007304:	or     al,0x66
	...
   14000732e:	add    BYTE PTR [rax],al
   140007330:	movabs al,ds:0x0
	...
   140007385:	add    BYTE PTR [rax],al
   140007387:	add    BYTE PTR [rax],cl
   140007389:	nop
   14000738a:	add    BYTE PTR [rax+0x1],al
	...
   14000739d:	add    BYTE PTR [rax],al
   14000739f:	add    BYTE PTR [rax],ah
   1400073a1:	movsxd eax,DWORD PTR [rax]
   1400073a3:	rex add DWORD PTR [rax],eax
   1400073a6:	add    BYTE PTR [rax],al
   1400073a8:	sub    BYTE PTR [rbx+0x0],ah
   1400073ab:	rex add DWORD PTR [rax],eax
   1400073ae:	add    BYTE PTR [rax],al
   1400073b0:	push   0x1400063
   1400073b5:	add    BYTE PTR [rax],al
   1400073b7:	add    BYTE PTR [rax+rax*1],dl
   1400073ba:	add    BYTE PTR [rax],al
   1400073bc:	add    BYTE PTR [rax],al
   1400073be:	add    BYTE PTR [rax],al
   1400073c0:	add    BYTE PTR [rip+0x0],dh        # 0x1400073c6
	...
   1400073ce:	add    BYTE PTR [rax],al
   1400073d0:	push   rdx
   1400073d1:	push   rbx
   1400073d2:	rex.R push rbx
   1400073d4:	(bad)  
   1400073d5:	sbb    DWORD PTR [rax],ebx
   1400073d7:	out    0x65,eax
   1400073d9:	div    ebx
   1400073db:	rex.W movabs al,ds:0x13f5b393884a31e
   1400073e5:	add    BYTE PTR [rax],al
   1400073e7:	add    BYTE PTR [rbp+0x78],ah
   1400073ea:	je     0x14000745e
   1400073ec:	(bad)  
   1400073ed:	movsxd esi,DWORD PTR [rbx]
   1400073ef:	xor    ch,BYTE PTR [rsi]
   1400073f1:	jo     0x140007457
   1400073f3:	(bad)  
	...
   14000740c:	rex.RXB
   14000740d:	rex.XB push r12
   14000740f:	rex.WR add BYTE PTR [rax],r10b
   140007412:	add    BYTE PTR [rax],al
   140007414:	clc    
   140007415:	rex.WXB add BYTE PTR [r8],al
   140007418:	cs je  0x140007480
   14000741b:	js     0x140007491
   14000741d:	and    al,0x6d
   14000741f:	outs   dx,BYTE PTR ds:[rsi]
   140007420:	add    BYTE PTR [rax],al
   140007422:	add    BYTE PTR [rax],al
   140007424:	add    BYTE PTR [rax+rax*1+0x0],bl
   140007428:	jge    0x14000742a
   14000742a:	add    BYTE PTR [rax],al
   14000742c:	cs je  0x140007494
   14000742f:	js     0x1400074a5
   140007431:	and    al,0x6d
   140007433:	outs   dx,BYTE PTR ds:[rsi]
   140007434:	and    al,0x30
   140007436:	xor    BYTE PTR [rax],al
   140007438:	sbb    BYTE PTR [rax+rax*1+0x0],0x50
   14000743d:	add    BYTE PTR [rax],al
   14000743f:	add    BYTE PTR [rsi],ch
   140007441:	je     0x1400074a8
   140007443:	js     0x1400074b9
   140007445:	and    al,0x78
   140007447:	add    BYTE PTR [rax],al
   140007449:	(bad)  
   14000744a:	add    BYTE PTR [rax],al
   14000744c:	and    BYTE PTR [rbx],al
   14000744e:	add    BYTE PTR [rax],al
   140007450:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140007459:	add    BYTE PTR [rax],al
   14000745b:	add    BYTE PTR [rax],ah
   14000745d:	movsxd eax,DWORD PTR [rax]
   14000745f:	add    BYTE PTR [rax],dl
   140007461:	add    BYTE PTR [rax],al
   140007463:	add    BYTE PTR [rsi],ch
   140007465:	xor    BYTE PTR [rax],dh
   140007467:	movsxd esp,DWORD PTR [rsi+0x67]
   14000746a:	add    BYTE PTR [rax],al
   14000746c:	xor    BYTE PTR [rbx+0x0],ah
   14000746f:	add    BYTE PTR [rax],cl
   140007471:	add    BYTE PTR [rax],al
   140007473:	add    BYTE PTR [rsi],ch
   140007475:	rex.XB push r10
   140007477:	push   rsp
   140007478:	and    al,0x58
   14000747a:	rex.XB
   14000747b:	add    BYTE PTR [r8],al
   14000747e:	add    BYTE PTR [rax],al
   140007480:	cmp    BYTE PTR [rbx+0x0],ah
   140007483:	add    BYTE PTR [rax],cl
   140007485:	add    BYTE PTR [rax],al
   140007487:	add    BYTE PTR [rsi],ch
   140007489:	rex.XB push r10
   14000748b:	push   rsp
   14000748c:	and    al,0x58
   14000748e:	rex.XB
   14000748f:	rex.B
   140007490:	add    BYTE PTR [r8],al
   140007493:	add    BYTE PTR [rax+0x63],al
   140007496:	add    BYTE PTR [rax],al
   140007498:	or     BYTE PTR [rax],al
   14000749a:	add    BYTE PTR [rax],al
   14000749c:	cs rex.XB push r10
   14000749f:	push   rsp
   1400074a0:	and    al,0x58
   1400074a2:	rex.XB pop r10
   1400074a4:	add    BYTE PTR [rax],al
   1400074a6:	add    BYTE PTR [rax],al
   1400074a8:	movsxd rax,DWORD PTR [rax]
   1400074ab:	add    BYTE PTR [rax],cl
   1400074ad:	add    BYTE PTR [rax],al
   1400074af:	add    BYTE PTR [rsi],ch
   1400074b1:	rex.XB push r10
   1400074b3:	push   rsp
   1400074b4:	and    al,0x58
   1400074b6:	rex.WB
   1400074b7:	add    BYTE PTR [r8],al
   1400074ba:	add    BYTE PTR [rax],al
   1400074bc:	push   rax
   1400074bd:	movsxd eax,DWORD PTR [rax]
   1400074bf:	add    BYTE PTR [rax],cl
   1400074c1:	add    BYTE PTR [rax],al
   1400074c3:	add    BYTE PTR [rsi],ch
   1400074c5:	rex.XB push r10
   1400074c7:	push   rsp
   1400074c8:	and    al,0x58
   1400074ca:	rex.WB
   1400074cb:	rex.B
   1400074cc:	add    BYTE PTR [r8],al
   1400074cf:	add    BYTE PTR [rax+0x63],bl
   1400074d2:	add    BYTE PTR [rax],al
   1400074d4:	or     BYTE PTR [rax],al
   1400074d6:	add    BYTE PTR [rax],al
   1400074d8:	cs rex.XB push r10
   1400074db:	push   rsp
   1400074dc:	and    al,0x58
   1400074de:	rex.WB pop r9
   1400074e0:	add    BYTE PTR [rax],al
   1400074e2:	add    BYTE PTR [rax],al
   1400074e4:	(bad)  
   1400074e5:	movsxd eax,DWORD PTR [rax]
   1400074e7:	add    BYTE PTR [rax],cl
   1400074e9:	add    BYTE PTR [rax],al
   1400074eb:	add    BYTE PTR [rsi],ch
   1400074ed:	rex.XB push r10
   1400074ef:	push   rsp
   1400074f0:	and    al,0x58
   1400074f2:	rex.WB pop r10
   1400074f4:	add    BYTE PTR [rax],al
   1400074f6:	add    BYTE PTR [rax],al
   1400074f8:	push   0x50000063
   1400074fd:	add    BYTE PTR [rax],al
   1400074ff:	add    BYTE PTR [rsi],ch
   140007501:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   140007509:	add    BYTE PTR [rax],al
   14000750b:	add    al,al
   14000750d:	movsxd eax,DWORD PTR [rax]
   14000750f:	add    BYTE PTR [rax],dl
   140007511:	adc    BYTE PTR [rax],al
   140007513:	add    BYTE PTR [rsi],ch
   140007515:	jb     0x14000757b
   140007517:	(bad)  
   140007518:	je     0x14000757b
   14000751a:	add    BYTE PTR [rax],al
   14000751c:	shl    BYTE PTR [rbx+0x0],1
   14000751f:	add    BYTE PTR [rdx+rax*1],bl
   140007522:	add    BYTE PTR [rax],al
   140007524:	cs jb  0x14000758b
   140007527:	(bad)  
   140007528:	je     0x14000758b
   14000752a:	and    al,0x7a
   14000752c:	jp     0x1400075a8
   14000752e:	fs (bad) 
   140007530:	add    BYTE PTR [eax],al
   140007533:	add    al,dh
   140007535:	jne    0x140007537
   140007537:	add    BYTE PTR [rax+0x2e000003],al
   14000753d:	js     0x1400075a3
   14000753f:	(bad)  
   140007540:	je     0x1400075a3
   140007542:	add    BYTE PTR [rax],al
   140007544:	jo     0x1400075bf
   140007546:	add    BYTE PTR [rax],al
   140007548:	add    BYTE PTR fs:[rax],al
   14000754b:	add    BYTE PTR [rsi],ch
   14000754d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   140007555:	add    BYTE PTR [rax],al
   140007557:	add    ah,dl
   140007559:	jns    0x14000755b
   14000755b:	add    BYTE PTR [rax+rax*1],dl
   14000755e:	add    BYTE PTR [rax],al
   140007560:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140007569:	add    BYTE PTR [rax],al
   14000756b:	add    al,ch
   14000756d:	jns    0x14000756f
   14000756f:	add    BYTE PTR [rax],ah
   140007571:	add    eax,DWORD PTR [rax]
   140007573:	add    BYTE PTR [rsi],ch
   140007575:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000757d:	add    BYTE PTR [rax],al
   14000757f:	add    BYTE PTR [rax],cl
   140007581:	jge    0x140007583
   140007583:	add    BYTE PTR [rbp+rax*1+0x0],dh
   140007587:	add    BYTE PTR [rsi],ch
   140007589:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   140007591:	add    BYTE PTR [rax],al
   140007593:	add    BYTE PTR [rax],al
   140007595:	nop
   140007596:	add    BYTE PTR [rax],al
   140007598:	add    BYTE PTR [rax],al
   14000759b:	add    BYTE PTR [rsi],ch
   14000759d:	fs (bad) 
   14000759f:	je     0x140007602
   1400075a1:	add    BYTE PTR [rax],al
   1400075a3:	add    BYTE PTR [rax-0x70],al
   1400075a6:	add    BYTE PTR [rax],al
   1400075a8:	sub    BYTE PTR [rdi],al
   1400075aa:	add    BYTE PTR [rax],al
   1400075ac:	cs (bad) 
   1400075af:	jae    0x1400075b1
   1400075b1:	add    BYTE PTR [rax],al
   1400075b3:	add    BYTE PTR [rax],al
   1400075b5:	movabs al,ds:0x702e000002c40000
   1400075be:	fs (bad) 
   1400075c0:	je     0x140007623
   1400075c2:	add    BYTE PTR [rax],al
   1400075c4:	add    BYTE PTR [rax+0xf00000],dh
   1400075ca:	add    BYTE PTR [rax],al
   1400075cc:	cs jb  0x140007642
   1400075cf:	jb     0x140007634
   1400075d1:	and    al,0x30
   1400075d3:	xor    DWORD PTR [rax],eax
   1400075d5:	add    BYTE PTR [rax],al
   1400075d7:	add    al,dh
   1400075d9:	mov    al,0x0
   1400075db:	add    BYTE PTR [rax+0x8],al
   1400075de:	add    BYTE PTR [rax],al
   1400075e0:	cs jb  0x140007656
   1400075e3:	jb     0x140007648
   1400075e5:	and    al,0x30
   1400075e7:	xor    al,BYTE PTR [rax]
   1400075e9:	add    BYTE PTR [rax],al
   1400075eb:	add    BYTE PTR [rax],al
   1400075ed:	add    BYTE PTR [rax],al
   1400075ef:	add    BYTE PTR [rcx],al
   1400075f1:	adc    al,0x2
   1400075f3:	add    BYTE PTR [rdx+rdx*2],dl
   1400075f6:	adc    BYTE PTR [rax],dh
   1400075f8:	add    DWORD PTR [rax+rcx*1],edx
   1400075fb:	add    BYTE PTR [rsp+riz*2],dl
   1400075fe:	or     BYTE PTR [rax],al
   140007600:	adc    al,0x54
   140007602:	(bad)  
   140007603:	add    BYTE PTR [rsp+rsi*1],dl
   140007606:	(bad)  
   140007607:	add    BYTE PTR [rdx+rsi*1],dl
   14000760a:	adc    BYTE PTR [rax+0x1],dh
   14000760d:	adc    DWORD PTR [rax+rax*1],eax
   140007610:	adc    DWORD PTR [rdx],esi
   140007612:	or     eax,0xb600c70
   140007617:	xor    BYTE PTR [rcx],al
   140007619:	clts   
   14000761b:	add    BYTE PTR [rdi],cl
   14000761d:	fs (bad) 
   14000761f:	add    BYTE PTR [rdi],cl
   140007621:	xor    al,0x6
   140007623:	add    BYTE PTR [rdi],cl
   140007625:	xor    cl,BYTE PTR [rbx]
   140007627:	jo     0x140007642
   140007629:	sub    cl,BYTE PTR [rbx]
   14000762b:	add    BYTE PTR [rsp+rsi*1],bl
   14000762e:	xor    DWORD PTR [rax],eax
   140007630:	sbb    al,0x1
   140007632:	sub    BYTE PTR [rax],al
   140007634:	adc    al,dh
   140007636:	(bad)  
   140007637:	loopne 0x140007645
   140007639:	ror    BYTE PTR [rdx],1
   14000763b:	ror    BYTE PTR [rax],0x70
   14000763e:	(bad)  
   14000763f:	(bad)  
   140007640:	(bad)  
   140007641:	push   rax
   140007642:	add    BYTE PTR [rax],al
   140007644:	pop    rax
   140007645:	pop    rbx
   140007646:	add    BYTE PTR [rax],al
   140007648:	xor    BYTE PTR [rcx],al
   14000764a:	add    BYTE PTR [rax],al
   14000764c:	sbb    DWORD PTR [rbx],ebx
   14000764e:	(bad)  
   14000764f:	add    BYTE PTR [rsp+rsi*1],cl
   140007652:	adc    al,BYTE PTR [rax]
   140007654:	or     al,0xb2
   140007656:	or     BYTE PTR [rax+0x7],dh
   140007659:	(bad)  
   14000765a:	(bad)  
   14000765b:	push   rax
   14000765c:	pop    rax
   14000765d:	pop    rbx
   14000765e:	add    BYTE PTR [rax],al
   140007660:	push   rax
   140007661:	add    BYTE PTR [rax],al
   140007663:	add    BYTE PTR [rcx],al
   140007665:	sbb    BYTE PTR [rdx],cl
   140007667:	add    BYTE PTR [rax],bl
   140007669:	adc    BYTE PTR fs:[rax],al
   14000766c:	sbb    BYTE PTR [rdi+rcx*1+0x0],dl
   140007670:	sbb    BYTE PTR [rsi+rcx*1],dh
   140007673:	add    BYTE PTR [rax],bl
   140007675:	xchg   edx,eax
   140007676:	adc    al,0xf0
   140007678:	adc    ah,al
   14000767a:	adc    BYTE PTR [rax+0x1],dh
   14000767d:	sbb    eax,0xc41d000c
   140007682:	or     eax,0xc741d00
   140007687:	add    BYTE PTR [rip+0x1d000b64],bl        # 0x15d0081f1
   14000768d:	xor    al,0xa
   14000768f:	add    BYTE PTR [rip+0x17f01952],bl        # 0x157f08fe7
   140007695:	loopne 0x1400076ac
   140007697:	rol    BYTE PTR [rcx],1
   140007699:	sgdt   [rax]
   14000769c:	punpckldq mm0,DWORD PTR [rax]
   14000769f:	add    BYTE PTR [rcx],al
   1400076a1:	or     eax,DWORD PTR [rsi]
   1400076a3:	add    BYTE PTR [rbx],cl
   1400076a5:	xor    al,BYTE PTR [rdi]
   1400076a7:	loopne 0x1400076ae
   1400076a9:	jo     0x1400076af
   1400076ab:	(bad)  
   1400076ac:	add    edx,DWORD PTR [rax+0x2]
   1400076af:	xor    BYTE PTR [rcx],bl
   1400076b1:	sub    eax,0x11c000a
   1400076b6:	pop    rbx
   1400076b7:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e082ad
   1400076bd:	rol    BYTE PTR [rdi],1
   1400076bf:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143607b36
   1400076c6:	add    dl,BYTE PTR [rax+0x58]
   1400076c9:	pop    rbx
   1400076ca:	add    BYTE PTR [rax],al
   1400076cc:	rol    BYTE PTR [rdx],0x0
   1400076cf:	add    BYTE PTR [rcx],bl
   1400076d1:	sub    ecx,DWORD PTR [rax+rax*1]
   1400076d4:	sbb    al,0x64
   1400076d6:	adc    DWORD PTR [rax],eax
   1400076d8:	sbb    al,0x54
   1400076da:	adc    BYTE PTR [rax],al
   1400076dc:	sbb    al,0x34
   1400076de:	ltr    WORD PTR [rdx+rsi*2]
   1400076e2:	sbb    al,dh
   1400076e4:	(bad)  
   1400076e5:	loopne 0x1400076fb
   1400076e7:	rcl    BYTE PTR [rdx],1
   1400076e9:	rcl    BYTE PTR [rax],0x70
   1400076ec:	pop    rax
   1400076ed:	pop    rbx
   1400076ee:	add    BYTE PTR [rax],al
   1400076f0:	cmp    BYTE PTR [rax],al
   1400076f2:	add    BYTE PTR [rax],al
   1400076f4:	sbb    DWORD PTR [rdx],esi
   1400076f6:	or     eax,DWORD PTR [rax]
   1400076f8:	and    DWORD PTR [rsi+rdx*2+0x0],esp
   1400076fc:	and    DWORD PTR [rsp+rdx*2],esi
   1400076ff:	add    BYTE PTR [rcx],ah
   140007701:	add    DWORD PTR [rsi+0x0],ecx
   140007704:	adc    dh,al
   140007706:	adc    al,ah
   140007708:	(bad)  
   140007709:	ror    BYTE PTR [rax+rsi*2],0xb
   14000770d:	push   rax
   14000770e:	add    BYTE PTR [rax],al
   140007710:	pop    rax
   140007711:	pop    rbx
   140007712:	add    BYTE PTR [rax],al
   140007714:	(bad)  
   140007715:	add    al,BYTE PTR [rax]
   140007717:	add    BYTE PTR [rcx],bl
   140007719:	and    DWORD PTR [rdi],eax
   14000771b:	add    BYTE PTR [rdi],cl
   14000771d:	xor    al,0x3e
   14000771f:	add    BYTE PTR [rdi],cl
   140007721:	add    DWORD PTR [rax],edi
   140007723:	add    BYTE PTR [rax],cl
   140007725:	jo     0x14000772e
   140007727:	(bad)  
   140007728:	(bad)  
   140007729:	push   rax
   14000772a:	add    BYTE PTR [rax],al
   14000772c:	pop    rax
   14000772d:	pop    rbx
   14000772e:	add    BYTE PTR [rax],al
   140007730:	mov    al,0x1
   140007732:	add    BYTE PTR [rax],al
   140007734:	sbb    DWORD PTR [rax],esi
   140007736:	or     eax,DWORD PTR [rax]
   140007738:	(bad)  
   140007739:	xor    al,0x3c
   14000773b:	add    BYTE PTR [rdi],bl
   14000773d:	add    DWORD PTR [rdx],esi
   14000773f:	add    BYTE PTR [rax],dl
   140007741:	lock (bad) 
   140007743:	loopne 0x140007751
   140007745:	ror    BYTE PTR [rdx],1
   140007747:	ror    BYTE PTR [rax],0x70
   14000774a:	(bad)  
   14000774b:	(bad)  
   14000774c:	(bad)  
   14000774d:	push   rax
   14000774e:	add    BYTE PTR [rax],al
   140007750:	pop    rax
   140007751:	pop    rbx
   140007752:	add    BYTE PTR [rax],al
   140007754:	add    BYTE PTR [rcx],0x0
   140007757:	add    BYTE PTR [rcx],bl
   140007759:	(bad)  
   14000775a:	(bad)  
   14000775b:	add    BYTE PTR [rdi],cl
   14000775d:	xor    al,0x16
   14000775f:	add    BYTE PTR [rdi],cl
   140007761:	repnz or BYTE PTR [rax+0x7],dh
   140007765:	(bad)  
   140007766:	(bad)  
   140007767:	push   rax
   140007768:	pop    rax
   140007769:	pop    rbx
   14000776a:	add    BYTE PTR [rax],al
   14000776c:	jo     0x14000776e
   14000776e:	add    BYTE PTR [rax],al
   140007770:	sbb    DWORD PTR [rsi],esp
   140007772:	or     al,BYTE PTR [rax]
   140007774:	(bad)  
   140007775:	xor    al,0x1a
   140007777:	add    BYTE PTR [rdi],dl
   140007779:	repnz adc al,dh
   14000777c:	(bad)  
   14000777d:	loopne 0x14000778b
   14000777f:	ror    BYTE PTR [rdx],1
   140007781:	ror    BYTE PTR [rax],0x70
   140007784:	(bad)  
   140007785:	(bad)  
   140007786:	(bad)  
   140007787:	push   rax
   140007788:	pop    rax
   140007789:	pop    rbx
   14000778a:	add    BYTE PTR [rax],al
   14000778c:	js     0x14000778e
   14000778e:	add    BYTE PTR [rax],al
   140007790:	add    DWORD PTR [rdi],ecx
   140007792:	or     BYTE PTR [rax],al
   140007794:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140007797:	lock or eax,esp
   14000779a:	(bad)  
   14000779b:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143607c12
   1400077a2:	add    dh,BYTE PTR [rax]
   1400077a4:	sbb    DWORD PTR [rdx],ebp
   1400077a6:	or     eax,DWORD PTR [rax]
   1400077a8:	sbb    al,0x34
   1400077aa:	cmp    al,BYTE PTR [rax]
   1400077ac:	sbb    al,0x1
   1400077ae:	xor    BYTE PTR [rax],al
   1400077b0:	adc    al,dh
   1400077b2:	(bad)  
   1400077b3:	loopne 0x1400077c1
   1400077b5:	ror    BYTE PTR [rdx],1
   1400077b7:	ror    BYTE PTR [rax],0x70
   1400077ba:	(bad)  
   1400077bb:	(bad)  
   1400077bc:	(bad)  
   1400077bd:	push   rax
   1400077be:	add    BYTE PTR [rax],al
   1400077c0:	pop    rax
   1400077c1:	pop    rbx
   1400077c2:	add    BYTE PTR [rax],al
   1400077c4:	jo     0x1400077c7
   1400077c6:	add    BYTE PTR [rax],al
   1400077c8:	sbb    DWORD PTR [rcx],ebp
   1400077ca:	or     DWORD PTR [rax],eax
   1400077cc:	(bad)  
   1400077cd:	xor    DWORD PTR fs:[rax],eax
   1400077d0:	(bad)  
   1400077d1:	push   rsp
   1400077d2:	xor    BYTE PTR [rax],al
   1400077d4:	(bad)  
   1400077d5:	xor    al,0x2e
   1400077d7:	add    BYTE PTR [rdi],dl
   1400077d9:	add    DWORD PTR [rax+rax*1],ebp
   1400077dc:	adc    BYTE PTR [rax+0x0],dh
   1400077df:	add    BYTE PTR [rax+0x5b],bl
   1400077e2:	add    BYTE PTR [rax],al
   1400077e4:	push   rax
   1400077e5:	add    DWORD PTR [rax],eax
   1400077e7:	add    BYTE PTR [rcx],al
   1400077e9:	(bad)  
   1400077ea:	add    al,BYTE PTR [rax]
   1400077ec:	(bad)  
   1400077ed:	xchg   edx,eax
   1400077ee:	add    dh,BYTE PTR [rax]
   1400077f0:	add    DWORD PTR [rcx],ebx
   1400077f2:	or     al,BYTE PTR [rax]
   1400077f4:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   1400077f8:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   1400077fc:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140007800:	sbb    DWORD PTR [rsi+rax*1],esi
   140007803:	add    BYTE PTR [rcx],bl
   140007805:	xor    dl,BYTE PTR [rip+0x20601e0]        # 0x1420679eb
   14000780b:	add    BYTE PTR [rsi],al
   14000780d:	xor    al,BYTE PTR [rdx]
   14000780f:	xor    BYTE PTR [rcx],al
   140007811:	sbb    BYTE PTR [rdx],cl
   140007813:	add    BYTE PTR [rax],bl
   140007815:	xor    al,0x10
   140007817:	add    BYTE PTR [rax],bl
   140007819:	push   rdx
   14000781a:	adc    al,0xf0
   14000781c:	adc    ah,al
   14000781e:	adc    al,dl
   140007820:	(bad)  
   140007821:	ror    BYTE PTR [rax+rsi*2],0xb
   140007825:	(bad)  
   140007826:	or     dl,BYTE PTR [rax+0x19]
   140007829:	(bad)  
   14000782a:	or     eax,0x65742600
   14000782f:	add    BYTE PTR [rsi],ah
   140007831:	fs add BYTE PTR fs:[rsi],ah
   140007835:	xor    al,0x63
   140007837:	add    BYTE PTR [rsi],ah
   140007839:	add    DWORD PTR [rax+rax*1+0x18],ebx
   14000783d:	lock (bad) 
   14000783f:	loopne 0x140007855
   140007841:	rcl    BYTE PTR [rdx],1
   140007843:	rcl    BYTE PTR [rax],0x50
   140007846:	add    BYTE PTR [rax],al
   140007848:	pop    rax
   140007849:	pop    rbx
   14000784a:	add    BYTE PTR [rax],al
   14000784c:	rol    BYTE PTR [rdx],1
   14000784e:	add    BYTE PTR [rax],al
   140007850:	add    DWORD PTR [rdx],ecx
   140007852:	add    al,0x0
   140007854:	or     dh,BYTE PTR [rax+rcx*1]
   140007857:	add    BYTE PTR [rdx],cl
   140007859:	push   rdx
   14000785a:	(bad)  
   14000785b:	jo     0x14000785e
   14000785d:	add    al,0x1
   14000785f:	add    BYTE PTR [rdx+riz*2],al
   140007862:	add    BYTE PTR [rax],al
   140007864:	add    DWORD PTR [rax],ebx
   140007866:	or     al,BYTE PTR [rax]
   140007868:	sbb    BYTE PTR [rsp+rcx*1+0x0],ah
   14000786c:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   140007870:	sbb    BYTE PTR [rdx+rcx*1],dh
   140007873:	add    BYTE PTR [rax],bl
   140007875:	push   rdx
   140007876:	adc    al,0xf0
   140007878:	adc    ah,al
   14000787a:	adc    BYTE PTR [rax+0x1],dh
   14000787d:	or     al,BYTE PTR [rax+rax*1]
   140007880:	or     dh,BYTE PTR [rsi+rax*1]
   140007883:	add    BYTE PTR [rdx],cl
   140007885:	xor    al,BYTE PTR [rsi]
   140007887:	jo     0x1400078a2
   140007889:	sub    cl,BYTE PTR [rcx]
   14000788b:	add    BYTE PTR [rax],bl
   14000788d:	je     0x1400078ce
   14000788f:	add    BYTE PTR [rax],bl
   140007891:	fs cmp eax,0x3c341800
   140007897:	add    BYTE PTR [rax],bl
   140007899:	add    DWORD PTR [rdx],edi
   14000789b:	add    BYTE PTR [rcx],dl
   14000789d:	loopne 0x14000789f
   14000789f:	add    BYTE PTR [rax+0x5b],bl
   1400078a2:	add    BYTE PTR [rax],al
   1400078a4:	rol    BYTE PTR [rcx],0x0
   1400078a7:	add    BYTE PTR [rcx],al
   1400078a9:	(bad)  
   1400078aa:	add    al,BYTE PTR [rax]
   1400078ac:	(bad)  
   1400078ad:	mov    dl,0x2
   1400078af:	xor    BYTE PTR [rcx],al
   1400078b1:	(bad)  
   1400078b2:	add    al,BYTE PTR [rax]
   1400078b4:	(bad)  
   1400078b5:	push   rdx
   1400078b6:	add    dh,BYTE PTR [rax]
   1400078b8:	or     DWORD PTR [rax],ebx
   1400078ba:	or     DWORD PTR [rax],eax
   1400078bc:	sbb    BYTE PTR [rdx+rbx*1+0x0],dh
   1400078c0:	sbb    BYTE PTR [rcx+rbx*1+0x0],ah
   1400078c4:	sbb    BYTE PTR [rax+rbx*1],dh
   1400078c7:	add    BYTE PTR [rax],bl
   1400078c9:	add    DWORD PTR [rsi],edx
   1400078cb:	add    BYTE PTR [rcx],dl
   1400078cd:	lock add BYTE PTR [rax],al
   1400078d0:	neg    BYTE PTR [rdx+0x0]
   1400078d3:	add    BYTE PTR [rcx],al
   1400078d5:	add    BYTE PTR [rax],al
   1400078d7:	add    al,ah
   1400078d9:	push   rdx
   1400078da:	add    BYTE PTR [rax],al
   1400078dc:	(bad)  
   1400078dd:	push   rsp
   1400078de:	add    BYTE PTR [rax],al
   1400078e0:	xchg   BYTE PTR [rax+rax*1+0x0],bl
   1400078e4:	(bad)  
   1400078e5:	push   rsp
   1400078e6:	add    BYTE PTR [rax],al
   1400078e8:	add    DWORD PTR [rax],eax
   1400078ea:	add    BYTE PTR [rax],al
   1400078ec:	add    DWORD PTR [rcx+rax*1],eax
   1400078ef:	add    BYTE PTR [rdx+riz*8],al
   1400078f2:	add    BYTE PTR [rax],al
   1400078f4:	add    DWORD PTR [rdx+rax*1],ecx
   1400078f7:	add    BYTE PTR [rcx+rax*1],cl
   1400078fa:	adc    DWORD PTR [rax],eax
   1400078fc:	or     DWORD PTR [rcx+rax*1],eax
   1400078ff:	add    BYTE PTR [rdx+riz*1],al
   140007902:	add    BYTE PTR [rax],al
   140007904:	neg    BYTE PTR [rdx+0x0]
   140007907:	add    BYTE PTR [rcx],al
   140007909:	add    BYTE PTR [rax],al
   14000790b:	add    BYTE PTR [rax+rbx*2+0x0],bh
   14000790f:	add    BYTE PTR [rdx+0x1000058],dh
   140007915:	add    BYTE PTR [rax],al
   140007917:	add    BYTE PTR [rdx+0x9000058],dh
   14000791d:	or     al,BYTE PTR [rax+rax*1]
   140007920:	or     dh,BYTE PTR [rsi+rax*1]
   140007923:	add    BYTE PTR [rdx],cl
   140007925:	xor    al,BYTE PTR [rsi]
   140007927:	jo     0x14000791f
   140007929:	pop    rdx
   14000792a:	add    BYTE PTR [rax],al
   14000792c:	add    DWORD PTR [rax],eax
   14000792e:	add    BYTE PTR [rax],al
   140007930:	lea    ebx,[rcx+0x0]
   140007933:	add    al,al
   140007935:	pop    rcx
   140007936:	add    BYTE PTR [rax],al
   140007938:	mov    al,0x5c
   14000793a:	add    BYTE PTR [rax],al
   14000793c:	rcr    BYTE PTR [rcx+0x0],0x0
   140007940:	add    DWORD PTR [rsi],eax
   140007942:	add    al,BYTE PTR [rax]
   140007944:	(bad)  
   140007945:	xor    al,BYTE PTR [rdx]
   140007947:	push   rax
   140007948:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d7952
   14000794e:	or     DWORD PTR [rax],eax
   140007950:	or     eax,0x500632
   140007955:	add    BYTE PTR [rax],al
   140007957:	add    BYTE PTR [rcx],al
   140007959:	add    BYTE PTR [rax],al
   14000795b:	add    BYTE PTR [rcx],al
   14000795d:	add    al,0x1
   14000795f:	add    BYTE PTR [rdx+rax*2],al
   140007962:	add    BYTE PTR [rax],al
   140007964:	add    BYTE PTR [rax],al
   140007966:	add    BYTE PTR [rax],al
   140007968:	add    DWORD PTR [rcx+rax*1],eax
   14000796b:	add    BYTE PTR [rdx+rdx*1],al
   14000796e:	add    BYTE PTR [rax],al
   140007970:	sub    BYTE PTR [rdx+0x0],bh
	...
   14000797b:	add    BYTE PTR [rsi+rdi*2+0x0],cl
   14000797f:	add    BYTE PTR [rax+0x60],al
   140007982:	add    BYTE PTR [rax],al
   140007984:	sbb    BYTE PTR [rbx+0x0],bh
	...
   14000798f:	add    al,bh
   140007991:	jle    0x140007993
   140007993:	add    BYTE PTR [rax],dh
   140007995:	(bad)  
   140007996:	add    BYTE PTR [rax],al
   140007998:	push   0x7b
   14000799d:	add    BYTE PTR [rax],al
   14000799f:	add    BYTE PTR [rax],al
   1400079a1:	add    BYTE PTR [rax],al
   1400079a3:	add    BYTE PTR [rax],dl
   1400079a5:	add    DWORD PTR [rax],0x618000
   1400079ab:	add    al,ch
   1400079ad:	jns    0x1400079af
	...
   1400079b7:	add    BYTE PTR [rax],dh
   1400079b9:	add    DWORD PTR [rax],0x600000
   1400079bf:	add    al,bh
   1400079c1:	jns    0x1400079c3
	...
   1400079cb:	add    BYTE PTR [rsi],bh
   1400079cd:	add    DWORD PTR [rax],0x601000
	...
   1400079e7:	add    BYTE PTR [rcx],dl
   1400079e9:	add    BYTE PTR [rax],al
   1400079eb:	add    BYTE PTR [rax],al
   1400079ed:	add    BYTE PTR [rax],al
   1400079ef:	add    BYTE PTR [rax],0x0
   1400079f2:	add    BYTE PTR [rax],al
   1400079f4:	add    BYTE PTR [rax],al
   1400079f6:	add    BYTE PTR [rax],al
   1400079f8:	adc    eax,0x0
   1400079fd:	add    BYTE PTR [rax],al
   1400079ff:	adc    BYTE PTR [rsi],0x0
   140007a02:	add    BYTE PTR [rax],al
   140007a04:	add    BYTE PTR [rax],al
   140007a06:	add    BYTE PTR [rax+0x14],al
   140007a0c:	add    BYTE PTR [rax],al
   140007a0e:	add    BYTE PTR [rax+0x18],al
   140007a14:	add    BYTE PTR [rax],al
   140007a16:	add    BYTE PTR [rax+0x17],al
   140007a1c:	add    BYTE PTR [rax],al
   140007a1e:	add    BYTE PTR [rax+0x0],al
   140007a24:	add    BYTE PTR [rax],al
   140007a26:	add    BYTE PTR [rax],al
   140007a28:	ins    BYTE PTR es:[rdi],dx
   140007a29:	jge    0x140007a2b
   140007a2b:	add    BYTE PTR [rax],al
   140007a2d:	add    BYTE PTR [rax],al
   140007a2f:	add    BYTE PTR [rbp+rdi*2+0x0],bh
   140007a33:	add    BYTE PTR [rax],al
   140007a35:	add    BYTE PTR [rax],al
   140007a37:	add    BYTE PTR [rbp+rdi*2+0x0],al
   140007a3e:	add    BYTE PTR [rax],al
   140007a40:	xchg   esp,eax
   140007a41:	jge    0x140007a43
   140007a43:	add    BYTE PTR [rax],al
   140007a45:	add    BYTE PTR [rax],al
   140007a47:	add    BYTE PTR [rdx+0x7d],ch
   140007a4d:	add    BYTE PTR [rax],al
   140007a4f:	add    BYTE PTR [rax+0x7d],bh
   140007a55:	add    BYTE PTR [rax],al
   140007a57:	add    dl,dl
   140007a59:	jge    0x140007a5b
   140007a5b:	add    BYTE PTR [rax],al
   140007a5d:	add    BYTE PTR [rax],al
   140007a5f:	add    al,ch
   140007a61:	jge    0x140007a63
   140007a63:	add    BYTE PTR [rax],al
   140007a65:	add    BYTE PTR [rax],al
   140007a67:	add    BYTE PTR [rdx],al
   140007a69:	jle    0x140007a6b
   140007a6b:	add    BYTE PTR [rax],al
   140007a6d:	add    BYTE PTR [rax],al
   140007a6f:	add    BYTE PTR [rsi+0x7d],bl
   140007a72:	add    BYTE PTR [rax],al
   140007a74:	add    BYTE PTR [rax],al
   140007a76:	add    BYTE PTR [rax],al
   140007a78:	sub    BYTE PTR [rsi+0x0],bh
   140007a7b:	add    BYTE PTR [rax],al
   140007a7d:	add    BYTE PTR [rax],al
   140007a7f:	add    BYTE PTR [rsi],bh
   140007a81:	jle    0x140007a83
   140007a83:	add    BYTE PTR [rax],al
   140007a85:	add    BYTE PTR [rax],al
   140007a87:	add    BYTE PTR [rax],dh
   140007a89:	(bad)  
   140007a8a:	add    BYTE PTR [rax],al
   140007a8c:	add    BYTE PTR [rax],al
   140007a8e:	add    BYTE PTR [rax],al
   140007a90:	sbb    al,BYTE PTR [rdx+0x0]
   140007a96:	add    BYTE PTR [rax],al
   140007a98:	add    BYTE PTR [rdx+0x0],al
   140007a9e:	add    BYTE PTR [rax],al
   140007aa0:	in     al,dx
   140007aa1:	add    DWORD PTR [rax],0x0
   140007aa7:	add    al,bl
   140007aa9:	add    DWORD PTR [rax],0x0
   140007aaf:	add    BYTE PTR [rdx+0x81],bh
   140007ab5:	add    BYTE PTR [rax],al
   140007ab7:	add    BYTE PTR [rsi+0x81],bl
   140007abd:	add    BYTE PTR [rax],al
   140007abf:	add    BYTE PTR [rdx+0x81],cl
   140007ac5:	add    BYTE PTR [rax],al
   140007ac7:	add    BYTE PTR [rax-0x7f],dh
   140007aca:	add    BYTE PTR [rax],al
   140007acc:	add    BYTE PTR [rax],al
   140007ace:	add    BYTE PTR [rax],al
   140007ad0:	pop    rsp
   140007ad1:	add    DWORD PTR [rax],0x0
   140007ad7:	add    BYTE PTR [rdx-0x7f],cl
   140007ada:	add    BYTE PTR [rax],al
   140007adc:	add    BYTE PTR [rax],al
   140007ade:	add    BYTE PTR [rax],al
   140007ae0:	rex.RX jge 0x140007ae3
   140007ae3:	add    BYTE PTR [rax],al
   140007ae5:	add    BYTE PTR [rax],al
   140007ae7:	add    BYTE PTR [rax],bh
   140007ae9:	jge    0x140007aeb
   140007aeb:	add    BYTE PTR [rax],al
   140007aed:	add    BYTE PTR [rax],al
   140007aef:	add    BYTE PTR [rax],cl
   140007af1:	jge    0x140007af3
   140007af3:	add    BYTE PTR [rax],al
   140007af5:	add    BYTE PTR [rax],al
   140007af7:	add    BYTE PTR [rax],ah
   140007af9:	jge    0x140007afb
   140007afb:	add    BYTE PTR [rax],al
   140007afd:	add    BYTE PTR [rax],al
   140007aff:	add    BYTE PTR [rsi],dl
   140007b01:	jle    0x140007b03
   140007b03:	add    BYTE PTR [rax],al
   140007b05:	add    BYTE PTR [rax],al
   140007b07:	add    BYTE PTR [rdx-0x7e],cl
	...
   140007b16:	add    BYTE PTR [rax],al
   140007b18:	pop    rdx
   140007b19:	jle    0x140007b1b
   140007b1b:	add    BYTE PTR [rax],al
   140007b1d:	add    BYTE PTR [rax],al
   140007b1f:	add    BYTE PTR [rsi+rdi*2+0x0],bh
   140007b23:	add    BYTE PTR [rax],al
   140007b25:	add    BYTE PTR [rax],al
   140007b27:	add    BYTE PTR [rsi+0x7e],cl
   140007b2d:	add    BYTE PTR [rax],al
   140007b2f:	add    BYTE PTR [rsi+0x7e],bl
   140007b35:	add    BYTE PTR [rax],al
   140007b37:	add    BYTE PTR [rsi+rdi*2+0x0],ch
   140007b3e:	add    BYTE PTR [rax],al
   140007b40:	ret    0x7e
   140007b43:	add    BYTE PTR [rax],al
   140007b45:	add    BYTE PTR [rax],al
   140007b47:	add    al,bl
   140007b49:	jle    0x140007b4b
   140007b4b:	add    BYTE PTR [rax],al
   140007b4d:	add    BYTE PTR [rax],al
   140007b4f:	add    al,ch
   140007b51:	jle    0x140007b53
   140007b53:	add    BYTE PTR [rax],al
   140007b55:	add    BYTE PTR [rax],al
   140007b57:	add    BYTE PTR [rax+0x7e],ch
	...
   140007b66:	add    BYTE PTR [rax],al
   140007b68:	test   al,0x7f
   140007b6a:	add    BYTE PTR [rax],al
   140007b6c:	add    BYTE PTR [rax],al
   140007b6e:	add    BYTE PTR [rax],al
   140007b70:	push   rsi
   140007b71:	jg     0x140007b73
   140007b73:	add    BYTE PTR [rax],al
   140007b75:	add    BYTE PTR [rax],al
   140007b77:	add    BYTE PTR [rdx+0x7f],bh
   140007b7d:	add    BYTE PTR [rax],al
   140007b7f:	add    ah,al
   140007b81:	jg     0x140007b83
   140007b83:	add    BYTE PTR [rax],al
   140007b85:	add    BYTE PTR [rax],al
   140007b87:	add    ah,cl
   140007b89:	jg     0x140007b8b
   140007b8b:	add    BYTE PTR [rax],al
   140007b8d:	add    BYTE PTR [rax],al
   140007b8f:	add    dh,dl
   140007b91:	jg     0x140007b93
   140007b93:	add    BYTE PTR [rax],al
   140007b95:	add    BYTE PTR [rax],al
   140007b97:	add    al,ah
   140007b99:	jg     0x140007b9b
   140007b9b:	add    BYTE PTR [rax],al
   140007b9d:	add    BYTE PTR [rax],al
   140007b9f:	add    dl,ch
   140007ba1:	jg     0x140007ba3
   140007ba3:	add    BYTE PTR [rax],al
   140007ba5:	add    BYTE PTR [rax],al
   140007ba7:	add    dh,dh
   140007ba9:	jg     0x140007bab
   140007bab:	add    BYTE PTR [rax],al
   140007bad:	add    BYTE PTR [rax],al
   140007baf:	add    BYTE PTR [rax+rax*4],al
   140007bb2:	add    BYTE PTR [rax],al
   140007bb4:	add    BYTE PTR [rax],al
   140007bb6:	add    BYTE PTR [rax],al
   140007bb8:	(bad)  
   140007bb9:	add    BYTE PTR [rax],0x0
   140007bbc:	add    BYTE PTR [rax],al
   140007bbe:	add    BYTE PTR [rax],al
   140007bc0:	sbb    BYTE PTR [rax+0x0],al
   140007bc6:	add    BYTE PTR [rax],al
   140007bc8:	and    al,BYTE PTR [rax+0x0]
   140007bce:	add    BYTE PTR [rax],al
   140007bd0:	sub    al,0x80
   140007bd2:	add    BYTE PTR [rax],al
   140007bd4:	add    BYTE PTR [rax],al
   140007bd6:	add    BYTE PTR [rax],al
   140007bd8:	xor    al,0x80
   140007bda:	add    BYTE PTR [rax],al
   140007bdc:	add    BYTE PTR [rax],al
   140007bde:	add    BYTE PTR [rax],al
   140007be0:	add    BYTE PTR ds:[rax],0x0
   140007be4:	add    BYTE PTR [rax],al
   140007be6:	add    BYTE PTR [rax],al
   140007be8:	rex.W add BYTE PTR [rax],0x0
   140007bec:	add    BYTE PTR [rax],al
   140007bee:	add    BYTE PTR [rax],al
   140007bf0:	push   rdx
   140007bf1:	add    BYTE PTR [rax],0x0
   140007bf4:	add    BYTE PTR [rax],al
   140007bf6:	add    BYTE PTR [rax],al
   140007bf8:	pop    rdx
   140007bf9:	add    BYTE PTR [rax],0x0
   140007bfc:	add    BYTE PTR [rax],al
   140007bfe:	add    BYTE PTR [rax],al
   140007c00:	push   0x80
   140007c05:	add    BYTE PTR [rax],al
   140007c07:	add    BYTE PTR [rsi-0x80],dh
   140007c0a:	add    BYTE PTR [rax],al
   140007c0c:	add    BYTE PTR [rax],al
   140007c0e:	add    BYTE PTR [rax],al
   140007c10:	xchg   BYTE PTR [rax+0x0],al
   140007c16:	add    BYTE PTR [rax],al
   140007c18:	sahf   
   140007c19:	jg     0x140007c1b
   140007c1b:	add    BYTE PTR [rax],al
   140007c1d:	add    BYTE PTR [rax],al
   140007c1f:	add    BYTE PTR [rax+0x80],ah
   140007c25:	add    BYTE PTR [rax],al
   140007c27:	add    BYTE PTR [rdx+0x80],ch
   140007c2d:	add    BYTE PTR [rax],al
   140007c2f:	add    BYTE PTR [rax+0x80],bh
   140007c35:	add    BYTE PTR [rax],al
   140007c37:	add    ah,cl
   140007c39:	add    BYTE PTR [rax],0x0
   140007c3c:	add    BYTE PTR [rax],al
   140007c3e:	add    BYTE PTR [rax],al
   140007c40:	fadd   DWORD PTR [rax+0x0]
   140007c46:	add    BYTE PTR [rax],al
   140007c48:	lock add BYTE PTR [rax],0x0
   140007c4c:	add    BYTE PTR [rax],al
   140007c4e:	add    BYTE PTR [rax],al
   140007c50:	cli    
   140007c51:	add    BYTE PTR [rax],0x0
   140007c54:	add    BYTE PTR [rax],al
   140007c56:	add    BYTE PTR [rax],al
   140007c58:	add    al,0x81
   140007c5a:	add    BYTE PTR [rax],al
   140007c5c:	add    BYTE PTR [rax],al
   140007c5e:	add    BYTE PTR [rax],al
   140007c60:	sbb    al,0x81
   140007c62:	add    BYTE PTR [rax],al
   140007c64:	add    BYTE PTR [rax],al
   140007c66:	add    BYTE PTR [rax],al
   140007c68:	rex.W jg 0x140007c6b
   140007c6b:	add    BYTE PTR [rax],al
   140007c6d:	add    BYTE PTR [rax],al
   140007c6f:	add    BYTE PTR [rax+0x7f],al
   140007c72:	add    BYTE PTR [rax],al
   140007c74:	add    BYTE PTR [rax],al
   140007c76:	add    BYTE PTR [rax],al
   140007c78:	xor    al,0x7f
   140007c7a:	add    BYTE PTR [rax],al
   140007c7c:	add    BYTE PTR [rax],al
   140007c7e:	add    BYTE PTR [rax],al
   140007c80:	sub    al,0x7f
   140007c82:	add    BYTE PTR [rax],al
   140007c84:	add    BYTE PTR [rax],al
   140007c86:	add    BYTE PTR [rax],al
   140007c88:	and    BYTE PTR [rdi+0x0],bh
   140007c8b:	add    BYTE PTR [rax],al
   140007c8d:	add    BYTE PTR [rax],al
   140007c8f:	add    BYTE PTR [rsi],dl
   140007c91:	jg     0x140007c93
   140007c93:	add    BYTE PTR [rax],al
   140007c95:	add    BYTE PTR [rax],al
   140007c97:	add    BYTE PTR [rdi+rdi*2],cl
   140007c9a:	add    BYTE PTR [rax],al
   140007c9c:	add    BYTE PTR [rax],al
   140007c9e:	add    BYTE PTR [rax],al
   140007ca0:	add    al,0x7f
   140007ca2:	add    BYTE PTR [rax],al
   140007ca4:	add    BYTE PTR [rax],al
   140007ca6:	add    BYTE PTR [rax],al
   140007ca8:	xchg   esp,eax
   140007ca9:	jg     0x140007cab
   140007cab:	add    BYTE PTR [rax],al
   140007cad:	add    BYTE PTR [rax],al
   140007caf:	add    BYTE PTR [rsi+0x7f],al
   140007cb5:	add    BYTE PTR [rax],al
   140007cb7:	add    BYTE PTR [rdi+rdi*2+0x0],bh
   140007cbb:	add    BYTE PTR [rax],al
   140007cbd:	add    BYTE PTR [rax],al
   140007cbf:	add    BYTE PTR [rdx+0x7f],dh
   140007cc2:	add    BYTE PTR [rax],al
   140007cc4:	add    BYTE PTR [rax],al
   140007cc6:	add    BYTE PTR [rax],al
   140007cc8:	push   0x7f
   140007cca:	add    BYTE PTR [rax],al
   140007ccc:	add    BYTE PTR [rax],al
   140007cce:	add    BYTE PTR [rax],al
   140007cd0:	(bad)  
   140007cd1:	jg     0x140007cd3
   140007cd3:	add    BYTE PTR [rax],al
   140007cd5:	add    BYTE PTR [rax],al
   140007cd7:	add    BYTE PTR [rax+0x80],bl
   140007cdd:	add    BYTE PTR [rax],al
   140007cdf:	add    BYTE PTR [rdx+0x7f],dh
   140007ce5:	add    BYTE PTR [rax],al
   140007ce7:	add    BYTE PTR [rdx-0x7e],bl
   140007cea:	add    BYTE PTR [rax],al
   140007cec:	add    BYTE PTR [rax],al
   140007cee:	add    BYTE PTR [rax],al
   140007cf0:	push   0x82
   140007cf5:	add    BYTE PTR [rax],al
   140007cf7:	add    BYTE PTR [rdx-0x7e],dh
	...
   140007d06:	add    BYTE PTR [rax],al
   140007d08:	(bad)  
   140007d09:	add    DWORD PTR [rsi+0x69],eax
   140007d0c:	ins    BYTE PTR es:[rdi],dx
   140007d0d:	gs push rsp
   140007d0f:	imul   ebp,DWORD PTR [rbp+0x65],0x6f446f54
   140007d16:	jae    0x140007d5c
   140007d18:	(bad)  
   140007d19:	je     0x140007d80
   140007d1b:	push   rsp
   140007d1c:	imul   ebp,DWORD PTR [rbp+0x65],0x44011e00
   140007d23:	outs   dx,DWORD PTR ds:[rsi]
   140007d24:	jae    0x140007d6a
   140007d26:	(bad)  
   140007d27:	je     0x140007d8e
   140007d29:	push   rsp
   140007d2a:	imul   ebp,DWORD PTR [rbp+0x65],0x69466f54
   140007d31:	ins    BYTE PTR es:[rdi],dx
   140007d32:	gs push rsp
   140007d34:	imul   ebp,DWORD PTR [rbp+0x65],0x4300b800
   140007d3b:	jb     0x140007da2
   140007d3d:	(bad)  
   140007d3e:	je     0x140007da5
   140007d40:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x47023900
   140007d49:	gs je  0x140007d92
   140007d4c:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   140007d54:	(bad)  
   140007d55:	jne    0x140007dcb
   140007d57:	gs jae 0x140007d9f
   140007d5a:	js     0x140007d9d
   140007d5c:	add    BYTE PTR [rax],al
   140007d5e:	sbb    BYTE PTR [rip+0x46746553],al        # 0x18674e2b7
   140007d64:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x656d69
   140007d6c:	add    al,BYTE PTR es:[rdi+0x65]
   140007d70:	je     0x140007db6
   140007d72:	jb     0x140007ddd
   140007d74:	jbe    0x140007ddb
   140007d76:	push   rsp
   140007d77:	jns    0x140007de9
   140007d79:	add    BYTE PTR gs:[r13+0x5],bpl
   140007d7e:	push   rbx
   140007d7f:	ins    BYTE PTR es:[rdi],dx
   140007d80:	gs gs jo 0x140007d84
   140007d84:	push   rdi
   140007d85:	add    al,BYTE PTR [rdi+0x65]
   140007d88:	je     0x140007dd6
   140007d8a:	(bad)  
   140007d8b:	jae    0x140007e01
   140007d8d:	rex.RB jb 0x140007e02
   140007d90:	outs   dx,DWORD PTR ds:[rsi]
   140007d91:	jb     0x140007d93
   140007d93:	add    BYTE PTR [rax*1+0x46746553],cl
   140007d9a:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   140007da2:	(bad)  
   140007da3:	jne    0x140007e19
   140007da5:	gs jae 0x140007de9
   140007da8:	add    BYTE PTR [rax],al
   140007daa:	jge    0x140007dac
   140007dac:	rex.XB ins BYTE PTR es:[rdi],dx
   140007dae:	outs   dx,DWORD PTR ds:[rsi]
   140007daf:	jae    0x140007e16
   140007db1:	rex.W (bad) 
   140007db3:	outs   dx,BYTE PTR ds:[rsi]
   140007db4:	fs ins BYTE PTR es:[rdi],dx
   140007db6:	add    BYTE PTR gs:[rdx+0x1],ah
   140007dba:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x54656d69
   140007dc3:	outs   dx,DWORD PTR ds:[rsi]
   140007dc4:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140007dc6:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007dc9:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x656d69
   140007dd2:	adc    DWORD PTR [rdx],eax
   140007dd4:	rex.RXB
   140007dd5:	gs je  0x140007e1b
   140007dd8:	jne    0x140007e4c
   140007dda:	jb     0x140007e41
   140007ddc:	outs   dx,BYTE PTR ds:[rsi]
   140007ddd:	je     0x140007e2f
   140007ddf:	jb     0x140007e50
   140007de1:	movsxd esp,DWORD PTR [rbp+0x73]
   140007de4:	jae    0x140007e2f
   140007de6:	add    BYTE PTR fs:[rdi+0x636f4c03],dh
   140007ded:	(bad)  
   140007dee:	ins    BYTE PTR es:[rdi],dx
   140007def:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x54656d69
   140007df8:	outs   dx,DWORD PTR ds:[rsi]
   140007df9:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x656d69
   140007e02:	outs   dx,BYTE PTR ds:[rsi]
   140007e03:	add    al,BYTE PTR [rdi+0x65]
   140007e06:	je     0x140007e55
   140007e08:	outs   dx,DWORD PTR ds:[rsi]
   140007e09:	fs jne 0x140007e78
   140007e0c:	gs rex.W (bad) 
   140007e0f:	outs   dx,BYTE PTR ds:[rsi]
   140007e10:	fs ins BYTE PTR es:[rdi],dx
   140007e12:	gs push rdi
   140007e14:	add    BYTE PTR [rax],al
   140007e16:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140007e17:	add    al,BYTE PTR [rdi+0x65]
   140007e1a:	je     0x140007e6c
   140007e1c:	jb     0x140007e8d
   140007e1e:	movsxd eax,DWORD PTR [rcx+0x64]
   140007e21:	fs jb  0x140007e89
   140007e24:	jae    0x140007e99
   140007e26:	add    BYTE PTR [rax],al
   140007e28:	imul   eax,DWORD PTR [rdx],0x4d746547
   140007e2e:	outs   dx,DWORD PTR ds:[rsi]
   140007e2f:	fs jne 0x140007e9e
   140007e32:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   140007e3c:	add    BYTE PTR [rax],al
   140007e3e:	adc    BYTE PTR [rbx],al
   140007e40:	rex.RXB
   140007e41:	gs je  0x140007e9a
   140007e44:	gs jb  0x140007eba
   140007e47:	imul   ebp,DWORD PTR [rdi+0x6e],0x454b0000
   140007e4e:	push   rdx
   140007e4f:	rex.WRX
   140007e50:	rex.RB
   140007e51:	xor    r14,QWORD PTR [rdx]
   140007e54:	cs fs ins BYTE PTR es:[rdi],dx
   140007e57:	ins    BYTE PTR es:[rdi],dx
   140007e58:	add    BYTE PTR [rax],al
   140007e5a:	xor    BYTE PTR [rax],al
   140007e5c:	rex.XB push 0x654e7261
   140007e62:	js     0x140007ed8
   140007e64:	rex.RB js 0x140007ea8
   140007e67:	add    BYTE PTR [rbp+0x73694400],dh
   140007e6d:	jo     0x140007ed0
   140007e6f:	je     0x140007ed4
   140007e71:	push   0x7373654d
   140007e76:	(bad)  
   140007e77:	add    BYTE PTR gs:[r8d],al
   140007e7c:	loop   0x140007e7e
   140007e7e:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140007e80:	(bad)  
   140007e81:	(bad)  
   140007e82:	ins    BYTE PTR es:[rdi],dx
   140007e83:	gs rex.WRB
   140007e85:	outs   dx,BYTE PTR gs:[rsi]
   140007e87:	jne    0x140007ed2
   140007e89:	je     0x140007ef0
   140007e8b:	ins    DWORD PTR es:[rdi],dx
   140007e8c:	add    BYTE PTR [rax],al
   140007e8e:	jle    0x140007e92
   140007e90:	push   rax
   140007e91:	gs imul ecx,DWORD PTR gs:[rbp+0x65],0x73
   140007e97:	jae    0x140007efa
   140007e99:	add    BYTE PTR gs:[r8d],al
   140007e9e:	pop    rcx
   140007e9f:	add    cl,BYTE PTR [rbp+0x65]
   140007ea2:	jae    0x140007f17
   140007ea4:	(bad)  
   140007ea5:	rex.X outs dx,DWORD PTR gs:[esi]
   140007ea9:	js     0x140007eec
   140007eab:	add    al,bl
   140007ead:	add    dl,BYTE PTR [rbx+0x65]
   140007eb0:	outs   dx,BYTE PTR ds:[rsi]
   140007eb1:	fs rex.R ins BYTE PTR es:[rdi],dx
   140007eb4:	addr32 rex.WB je 0x140007f1d
   140007eb8:	ins    DWORD PTR es:[rdi],dx
   140007eb9:	rex.WRB
   140007eba:	gs jae 0x140007f30
   140007ebd:	(bad)  
   140007ebe:	add    BYTE PTR gs:[r13d+0x0],spl
   140007ec4:	rex.XB jb 0x140007f2c
   140007ec7:	(bad)  
   140007ec8:	je     0x140007f2f
   140007eca:	imul   r12d,DWORD PTR [rcx+0x6c],0x6150676f
   140007ed2:	jb     0x140007f35
   140007ed4:	ins    DWORD PTR es:[rdi],dx
   140007ed5:	add    BYTE PTR [r8],al
   140007ed8:	scas   eax,DWORD PTR es:[rdi]
   140007ed9:	add    DWORD PTR [rdi+0x65],eax
   140007edc:	je     0x140007f31
   140007ede:	jns    0x140007f53
   140007ee0:	je     0x140007f47
   140007ee2:	ins    DWORD PTR es:[rdi],dx
   140007ee3:	rex.WRB
   140007ee4:	outs   dx,BYTE PTR gs:[rsi]
   140007ee6:	jne    0x140007ee8
   140007ee8:	scas   al,BYTE PTR es:[rdi]
   140007ee9:	add    BYTE PTR [rbp+riz*2+0x73],al
   140007eed:	je     0x140007f61
   140007eef:	outs   dx,DWORD PTR ds:[rsi]
   140007ef0:	jns    0x140007f49
   140007ef2:	imul   ebp,DWORD PTR [rsi+0x64],0x5500776f
   140007ef9:	push   rbx
   140007efa:	rex.RB push r10
   140007efc:	xor    esi,DWORD PTR [rdx]
   140007efe:	cs fs ins BYTE PTR es:[rdi],dx
   140007f01:	ins    BYTE PTR es:[rdi],dx
   140007f02:	add    BYTE PTR [rax],al
   140007f04:	rex.WR add al,0x66
   140007f07:	jb     0x140007f6e
   140007f09:	add    BYTE PTR gs:[rax],al
   140007f0c:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   140007f13:	movsxd eax,DWORD PTR [rax]
   140007f15:	add    dh,dh
   140007f17:	add    bl,BYTE PTR [rdi+0x73]
   140007f1a:	je     0x140007f8e
   140007f1c:	fs jne 0x140007f8f
   140007f1f:	add    BYTE PTR [rdi],ah
   140007f21:	add    ebx,DWORD PTR [rdi+0x74]
   140007f24:	gs ins DWORD PTR es:[rdi],dx
   140007f26:	jo     0x140007f96
   140007f28:	(bad)  
   140007f29:	ins    DWORD PTR es:[rdi],dx
   140007f2a:	add    BYTE PTR [rax],al
   140007f2c:	xchg   ecx,eax
   140007f2d:	add    bl,BYTE PTR [rdi+0x6f]
   140007f30:	jo     0x140007f97
   140007f32:	outs   dx,BYTE PTR ds:[rsi]
   140007f33:	add    BYTE PTR [rbp+0x1],ah
   140007f36:	pop    rdi
   140007f37:	addr32 gs je 0x140007f9f
   140007f3b:	jb     0x140007fa6
   140007f3d:	jbe    0x140007fa4
   140007f3f:	add    dh,ch
   140007f41:	add    bl,BYTE PTR [rdi+0x73]
   140007f44:	je     0x140007fa7
   140007f46:	je     0x140007f48
   140007f48:	jl     0x140007f4a
   140007f4a:	pop    rdi
   140007f4b:	pop    rdi
   140007f4c:	outs   dx,DWORD PTR fs:[rsi]
   140007f4e:	jae    0x140007fb5
   140007f50:	jb     0x140007fc4
   140007f52:	outs   dx,BYTE PTR ds:[rsi]
   140007f53:	outs   dx,DWORD PTR ds:[rsi]
   140007f54:	add    BYTE PTR [rax],al
   140007f56:	add    eax,0x72655f01
   140007f5b:	jb     0x140007fcb
   140007f5d:	outs   dx,DWORD PTR ds:[rsi]
   140007f5e:	add    BYTE PTR [rax],al
   140007f60:	popf   
   140007f61:	add    al,0x70
   140007f63:	jb     0x140007fce
   140007f65:	outs   dx,BYTE PTR ds:[rsi]
   140007f66:	je     0x140007fce
   140007f68:	add    BYTE PTR [rax],al
   140007f6a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140007f6b:	add    bl,BYTE PTR [rdi+0x72]
   140007f6e:	gs (bad) 
   140007f70:	add    BYTE PTR fs:[rdx+rax*1+0x646b6d5f],al
   140007f78:	imul   esi,DWORD PTR [rdx+0x0],0x69046400
   140007f7f:	jae    0x140007fe2
   140007f81:	ins    BYTE PTR es:[rdi],dx
   140007f82:	jo     0x140007fec
   140007f84:	(bad)  
   140007f85:	add    BYTE PTR [rbx+0x3],ah
   140007f88:	pop    rdi
   140007f89:	jbe    0x140007ffe
   140007f8b:	outs   dx,BYTE PTR ds:[rsi]
   140007f8c:	jo     0x140008000
   140007f8e:	imul   ebp,DWORD PTR [rsi+0x74],0xea000066
   140007f95:	add    al,0x74
   140007f97:	outs   dx,DWORD PTR ds:[rsi]
   140007f98:	jne    0x14000800a
   140007f9a:	jo     0x140008001
   140007f9c:	jb     0x140007f9e
   140007f9e:	rex add ebx,DWORD PTR [rdi+0x75]
   140007fa2:	outs   dx,BYTE PTR ds:[rsi]
   140007fa3:	ins    BYTE PTR es:[rdi],dx
   140007fa4:	imul   ebp,DWORD PTR [rsi+0x6b],0x5f03e400
   140007fab:	ja     0x14000801f
   140007fad:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x5f010400
   140007fb5:	outs   dx,DWORD PTR gs:[rsi]
   140007fb7:	data16 add BYTE PTR [rax],al
   140007fba:	rol    BYTE PTR [rax],1
   140007fbc:	pop    rdi
   140007fbd:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   140007fc1:	add    BYTE PTR gs:[rax],al
   140007fc4:	and    BYTE PTR [rcx+riz*2],al
   140007fc7:	je     0x140008038
   140007fc9:	imul   eax,DWORD PTR [rax],0x69046600
   140007fcf:	jae    0x140008035
   140007fd1:	imul   esp,DWORD PTR [rdi+0x69],0x4d30074
   140007fd8:	jae    0x14000804e
   140007fda:	jb     0x14000804f
   140007fdc:	jo     0x14000804c
   140007fde:	add    BYTE PTR [rax],al
   140007fe0:	rol    DWORD PTR [rbx+rsi*2],1
   140007fe3:	je     0x140008057
   140007fe5:	jo     0x140008049
   140007fe7:	jb     0x140008054
   140007fe9:	add    dl,bh
   140007feb:	add    bl,BYTE PTR [rdi+0x73]
   140007fee:	je     0x140008062
   140007ff0:	imul   esp,DWORD PTR [rbx+0x6d],0x19000070
   140007ff7:	add    DWORD PTR [rdi+0x66],ebx
   140007ffa:	imul   ebp,DWORD PTR [rbp+riz*2+0x6c],0x74676e65
   140008002:	push   0x7304cd00
   140008007:	je     0x14000807b
   140008009:	outs   dx,BYTE PTR ds:[rsi]
   14000800a:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000800d:	add    cl,al
   14000800f:	add    al,0x73
   140008011:	je     0x140008085
   140008013:	movsxd ebp,DWORD PTR [rax+0x72]
   140008016:	add    BYTE PTR [rax],al
   140008018:	retf   0x5f00
   14000801b:	movsxd ebp,DWORD PTR [rax+0x6d]
   14000801e:	outs   dx,DWORD PTR ds:[rsi]
   14000801f:	add    BYTE PTR fs:[rax],al
   140008022:	jmp    0x1ac6ff42b
   140008027:	outs   dx,DWORD PTR ds:[rsi]
   140008028:	ja     0x14000808f
   14000802a:	jb     0x14000802c
   14000802c:	cmp    al,0x4
   14000802e:	data16 addr32 gs je 0x1400080a6
   140008033:	add    bl,cl
   140008035:	add    BYTE PTR [rdi+0x63],bl
   140008038:	push   0x657a6973
   14000803d:	add    dh,ch
   14000803f:	add    DWORD PTR [rdi+0x6c],ebx
   140008042:	jae    0x1400080a9
   140008044:	imul   eax,DWORD PTR gs:[rax],0x0
   140008048:	pop    rsp
   140008049:	add    al,0x67
   14000804b:	gs je  0x1400080b3
   14000804e:	outs   dx,BYTE PTR ds:[rsi]
   14000804f:	jbe    0x140008051
   140008051:	add    BYTE PTR [rdx],dh
   140008053:	add    al,0x65
   140008055:	js     0x1400080c0
   140008057:	je     0x140008059
   140008059:	add    BYTE PTR [rbp+0x0],dl
   14000805c:	pop    rdi
   14000805d:	pop    rax
   14000805e:	movsxd esi,DWORD PTR [rax+0x74]
   140008061:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000806a:	pop    rdi
   14000806b:	(bad)  
   14000806c:	ins    DWORD PTR es:[rdi],dx
   14000806d:	jae    0x1400080d6
   14000806f:	pop    rdi
   140008070:	gs js  0x1400080dc
   140008073:	je     0x140008075
   140008075:	add    BYTE PTR [rdi+0x0],bh
   140008078:	pop    rdi
   140008079:	pop    rdi
   14000807a:	addr32 gs je 0x1400080eb
   14000807e:	(bad)  
   14000807f:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140008086:	mov    es,WORD PTR [rax]
   140008088:	pop    rdi
   140008089:	pop    rdi
   14000808a:	jae    0x1400080f1
   14000808c:	je     0x1400080ed
   14000808e:	(bad)  
   14000808f:	jo     0x140008101
   140008091:	pop    rdi
   140008092:	je     0x14000810d
   140008094:	jo     0x1400080fb
   140008096:	add    BYTE PTR [rax],al
   140008098:	(bad)  
   140008099:	add    DWORD PTR [rdi+0x65],ebx
   14000809c:	js     0x140008107
   14000809e:	je     0x1400080a0
   1400080a0:	rol    DWORD PTR [rax],0x5f
   1400080a3:	movsxd esp,DWORD PTR [rbp+0x78]
   1400080a6:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0199
   1400080ae:	jae    0x14000811d
   1400080b0:	(bad)
   1400080b5:	add    BYTE PTR fs:[rax],al
   1400080b8:	nop
   1400080b9:	add    BYTE PTR [rdi+0x5f],bl
   1400080bc:	jae    0x140008123
   1400080be:	je     0x140008135
   1400080c0:	jae    0x140008127
   1400080c2:	jb     0x140008131
   1400080c4:	(bad)  
   1400080c5:	je     0x14000812f
   1400080c7:	gs jb  0x14000813c
   1400080ca:	add    BYTE PTR [rax],al
   1400080cc:	jge    0x1400080cf
   1400080ce:	pop    rdi
   1400080cf:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   1400080d6:	ins    DWORD PTR es:[rdi],dx
   1400080d7:	add    BYTE PTR [rdi+0x0],dl
   1400080da:	pop    rdi
   1400080db:	pop    rdi
   1400080dc:	rex.XB pop r15
   1400080de:	jae    0x140008150
   1400080e0:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   1400080e4:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   1400080eb:	ins    BYTE PTR es:[rdi],dx
   1400080ec:	gs jb  0x1400080ef
   1400080ef:	add    BYTE PTR [rdx+0x63615f00],ah
   1400080f5:	ins    DWORD PTR es:[rdi],dx
   1400080f6:	fs ins BYTE PTR es:[rdi],dx
   1400080f8:	outs   dx,BYTE PTR ds:[rsi]
   1400080f9:	add    BYTE PTR [rdi],ah
   1400080fb:	add    DWORD PTR [rdi+0x66],ebx
   1400080fe:	ins    DWORD PTR es:[rdi],dx
   1400080ff:	outs   dx,DWORD PTR ds:[rsi]
   140008100:	fs add BYTE PTR gs:[rax],al
   140008104:	rol    BYTE PTR [rax],cl
   140008106:	pop    rdi
   140008107:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000810a:	ins    DWORD PTR es:[rdi],dx
   14000810b:	outs   dx,DWORD PTR ds:[rsi]
   14000810c:	fs add BYTE PTR gs:[rax],al
   140008110:	ins    DWORD PTR es:[rdi],dx
   140008111:	jae    0x140008189
   140008113:	movsxd esi,DWORD PTR [rdx+0x74]
   140008116:	cs fs ins BYTE PTR es:[rdi],dx
   140008119:	ins    BYTE PTR es:[rdi],dx
   14000811a:	add    BYTE PTR [rax],al
   14000811c:	(bad)  
   14000811d:	add    BYTE PTR [rdi],bh
   14000811f:	je     0x140008186
   140008121:	jb     0x140008190
   140008123:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000812a:	pop    rcx
   14000812b:	pop    r8
   14000812d:	pop    rax
   14000812e:	pop    rdx
   14000812f:	add    BYTE PTR [rbx+0x4f],al
   140008132:	rex.WRB
   140008133:	rex.XB push r12
   140008135:	xor    r14,QWORD PTR [rdx]
   140008138:	cs fs ins BYTE PTR es:[rdi],dx
   14000813b:	ins    BYTE PTR es:[rdi],dx
   14000813c:	add    BYTE PTR [rax],al
   14000813e:	rex.XB (bad) 
   140008140:	(bad)  
   140008141:	imul   ebp,DWORD PTR [rsi+0x65],0x6c642e74
   140008148:	ins    BYTE PTR es:[rdi],dx
   140008149:	add    bh,al
   14000814b:	add    al,BYTE PTR [rdi+0x65]
   14000814e:	je     0x1400081a3
   140008150:	je     0x1400081b3
   140008152:	jb     0x1400081c8
   140008154:	jne    0x1400081c6
   140008156:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008158:	outs   dx,WORD PTR ds:[rsi]
   14000815a:	push   rdi
   14000815b:	add    BYTE PTR [rdi+0x6c745204],dh
   140008161:	rex.XB (bad) 
   140008163:	jo     0x1400081d9
   140008165:	jne    0x1400081d9
   140008167:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000816a:	outs   dx,BYTE PTR ds:[rsi]
   14000816b:	je     0x1400081d2
   14000816d:	js     0x1400081e3
   14000816f:	add    BYTE PTR [rsi+0x6c745204],bh
   140008175:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008177:	outs   dx,DWORD PTR ds:[rsi]
   140008178:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000817c:	jne    0x1400081ec
   14000817e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140008182:	outs   dx,BYTE PTR ds:[rsi]
   140008183:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140008185:	je     0x1400081f9
   140008187:	jns    0x140008189
   140008189:	add    ch,al
   14000818b:	add    al,0x52
   14000818d:	je     0x1400081fb
   14000818f:	push   rsi
   140008190:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140008197:	outs   dx,BYTE PTR ds:[rsi]
   140008198:	ja     0x140008203
   14000819a:	outs   dx,BYTE PTR ds:[rsi]
   14000819b:	add    BYTE PTR fs:[rax],al
   14000819e:	sahf   
   14000819f:	add    eax,0x61686e55
   1400081a4:	outs   dx,BYTE PTR ds:[rsi]
   1400081a5:	fs ins BYTE PTR es:[rdi],dx
   1400081a7:	gs fs rex.RB js 0x14000820f
   1400081ac:	gs jo  0x140008223
   1400081af:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400081b6:	gs jb  0x1400081b9
   1400081b9:	add    BYTE PTR [rsi+0x5],bl
   1400081bc:	push   rbx
   1400081bd:	gs je  0x140008215
   1400081c0:	outs   dx,BYTE PTR ds:[rsi]
   1400081c1:	push   0x6c646e61
   1400081c6:	gs fs rex.RB js 0x14000822e
   1400081cb:	gs jo  0x140008242
   1400081ce:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400081d5:	gs jb  0x1400081d8
   1400081d8:	adc    BYTE PTR [rdx],al
   1400081da:	rex.RXB
   1400081db:	gs je  0x140008221
   1400081de:	jne    0x140008252
   1400081e0:	jb     0x140008247
   1400081e2:	outs   dx,BYTE PTR ds:[rsi]
   1400081e3:	je     0x140008235
   1400081e5:	jb     0x140008256
   1400081e7:	movsxd esp,DWORD PTR [rbp+0x73]
   1400081ea:	jae    0x1400081ec
   1400081ec:	jl     0x1400081f3
   1400081ee:	push   rsp
   1400081ef:	gs jb  0x14000825f
   1400081f2:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   1400081f9:	outs   dx,DWORD PTR ds:[rsi]
   1400081fa:	movsxd esp,DWORD PTR [rbp+0x73]
   1400081fd:	jae    0x1400081ff
   1400081ff:	add    BYTE PTR [rsi],dh
   140008201:	add    al,0x51
   140008203:	jne    0x14000826a
   140008205:	jb     0x140008280
   140008207:	push   rax
   140008208:	gs jb  0x140008271
   14000820b:	outs   dx,DWORD PTR ds:[rsi]
   14000820c:	jb     0x14000827b
   14000820e:	(bad)  
   14000820f:	outs   dx,BYTE PTR ds:[rsi]
   140008210:	movsxd esp,DWORD PTR [rbp+0x43]
   140008213:	outs   dx,DWORD PTR ds:[rsi]
   140008214:	jne    0x140008284
   140008216:	je     0x14000827d
   140008218:	jb     0x14000821a
   14000821a:	adc    eax,0x74654702
   14000821f:	rex.XB jne 0x140008294
   140008222:	jb     0x140008289
   140008224:	outs   dx,BYTE PTR ds:[rsi]
   140008225:	je     0x14000827b
   140008227:	push   0x64616572
   14000822c:	rex.WB
   14000822d:	add    BYTE PTR fs:[rax],al
   140008230:	loopne 0x140008234
   140008232:	rex.RXB
   140008233:	gs je  0x140008289
   140008236:	jns    0x1400082ab
   140008238:	je     0x14000829f
   14000823a:	ins    DWORD PTR es:[rdi],dx
   14000823b:	push   rsp
   14000823c:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140008243:	ins    BYTE PTR es:[rdi],dx
   140008244:	gs push rsp
   140008246:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   14000824d:	gs je  0x1400082a4
   140008250:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140008257:	je     0x140008259
   140008259:	add    BYTE PTR [rcx+0x695f5f00],al
   14000825f:	outs   dx,DWORD PTR ds:[rsi]
   140008260:	(bad)  
   140008261:	pop    rdi
   140008262:	data16 jne 0x1400082d3
   140008265:	movsxd eax,DWORD PTR [rax]
   140008267:	add    BYTE PTR [rdx+0x6d656d04],dl
   14000826d:	movsxd esi,DWORD PTR [rax+0x79]
   140008270:	add    BYTE PTR [rax],al
   140008272:	xchg   esi,eax
   140008273:	add    al,0x6d
   140008275:	gs ins DWORD PTR es:[rdi],dx
   140008277:	jae    0x1400082de
   140008279:	je     0x14000827b
	...

Disassembly of section .data:

0000000140009000 <.data>:
   140009000:	add    DWORD PTR [rax],eax
   140009002:	add    BYTE PTR [rax],al
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    BYTE PTR [rax],al
   140009008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000900e:	add    BYTE PTR [rax],al
   140009010:	int    0x5d
   140009012:	and    dl,dl
   140009014:	data16 (bad) 
   140009016:	(bad)  
   140009017:	inc    DWORD PTR [rax]
   140009019:	add    BYTE PTR [rax],al
   14000901b:	add    BYTE PTR [rax],al
   14000901d:	add    BYTE PTR [rax],al
   14000901f:	add    BYTE PTR [rbx+0x3a],al
   140009022:	pop    rsp
   140009023:	add    BYTE PTR [rax],al
   140009025:	add    BYTE PTR [rax],al
   140009027:	add    bh,bh
   140009029:	(bad)  
   14000902a:	(bad)  
   14000902b:	(bad)  
   14000902c:	(bad)  
   14000902d:	(bad)  
   14000902e:	(bad)  
   14000902f:	(bad)  
   140009030:	(bad)  
   140009031:	(bad)  
   140009032:	(bad)  
   140009033:	(bad)  
   140009034:	(bad)  
   140009035:	(bad)  
   140009036:	(bad)  
   140009037:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

000000014000a000 <.pdata>:
   14000a000:	or     BYTE PTR [rax],dl
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	rex.WR adc BYTE PTR [rax],r8b
   14000a007:	add    al,dh
   14000a009:	jne    0x14000a00b
   14000a00b:	add    BYTE PTR [rax+rdx*1+0x0],dl
   14000a00f:	add    BYTE PTR [rcx+rdx*1],bl
   14000a012:	add    BYTE PTR [rax],al
   14000a014:	clc    
   14000a015:	jne    0x14000a017
   14000a017:	add    BYTE PTR [rcx+rdx*1],ah
   14000a01a:	add    BYTE PTR [rax],al
   14000a01c:	xchg   edi,eax
   14000a01d:	adc    DWORD PTR [rax],eax
   14000a01f:	add    BYTE PTR [rsi+rsi*2],cl
   14000a022:	add    BYTE PTR [rax],al
   14000a024:	(bad)  
   14000a025:	adc    DWORD PTR [rax],eax
   14000a027:	add    BYTE PTR [rdi],cl
   14000a029:	adc    eax,DWORD PTR [rax]
   14000a02b:	add    BYTE PTR [rax],bl
   14000a02d:	jbe    0x14000a02f
   14000a02f:	add    BYTE PTR [rax],bl
   14000a031:	adc    eax,DWORD PTR [rax]
   14000a033:	add    BYTE PTR [rdi],cl
   14000a035:	(bad)  
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	sub    BYTE PTR [rsi+0x0],dh
   14000a03b:	add    BYTE PTR [rax],bl
   14000a03d:	(bad)  
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	cdq    
   14000a041:	(bad)  
   14000a042:	add    BYTE PTR [rax],al
   14000a044:	sbb    BYTE PTR [rsi+0x0],dh
   14000a047:	add    BYTE PTR [rax+0x56000017],ah
   14000a04d:	sbb    BYTE PTR [rax],al
   14000a04f:	add    BYTE PTR [rsi+rsi*2+0x0],cl
   14000a053:	add    BYTE PTR [rax+rbx*1+0x0],bl
   14000a057:	add    BYTE PTR [rcx+rbx*1+0x76640000],cl
   14000a05e:	add    BYTE PTR [rax],al
   14000a060:	xchg   esp,eax
   14000a061:	sbb    DWORD PTR [rax],eax
   14000a063:	add    BYTE PTR [rbx+rbx*1+0x0],dh
   14000a067:	add    BYTE PTR [rsi+rsi*2+0x0],bh
   14000a06b:	add    BYTE PTR [rbx+rbx*1+0x0],bh
   14000a06f:	add    BYTE PTR [rax-0x7ffffe4],dh
   14000a075:	jne    0x14000a077
   14000a077:	add    BYTE PTR [rax-0x1effffe4],bh
   14000a07d:	sbb    al,0x0
   14000a07f:	add    BYTE PTR [rax-0x17ffff8a],bl
   14000a085:	sbb    al,0x0
   14000a087:	add    BYTE PTR [rsi-0x5fffffe3],dl
   14000a08d:	jbe    0x14000a08f
   14000a08f:	add    BYTE PTR [rbp+rbx*1+0x22cb0000],bl
   14000a096:	add    BYTE PTR [rax],al
   14000a098:	mov    al,0x76
   14000a09a:	add    BYTE PTR [rax],al
   14000a09c:	(bad)  
   14000a09d:	and    al,BYTE PTR [rax]
   14000a09f:	add    BYTE PTR [rax+0x24],dh
   14000a0a2:	add    BYTE PTR [rax],al
   14000a0a4:	shl    BYTE PTR [rsi+0x0],1
   14000a0a7:	add    BYTE PTR [rax+0x24],bh
   14000a0aa:	add    BYTE PTR [rax],al
   14000a0ac:	call   0x13400a0d7
   14000a0b1:	jbe    0x14000a0b3
   14000a0b3:	add    al,dh
   14000a0b5:	add    BYTE PTR es:[rax],al
   14000a0b8:	and    eax,0x18000028
   14000a0bd:	ja     0x14000a0bf
   14000a0bf:	add    BYTE PTR [rax+rbp*1],ch
   14000a0c2:	add    BYTE PTR [rax],al
   14000a0c4:	fwait
   14000a0c5:	add    BYTE PTR cs:[rax],al
   14000a0c8:	xor    al,0x77
   14000a0ca:	add    BYTE PTR [rax],al
   14000a0cc:	mov    al,0x2e
   14000a0ce:	add    BYTE PTR [rax],al
   14000a0d0:	xor    DWORD PTR [rcx],0x0
   14000a0d3:	add    BYTE PTR [rax+0x77],bl
   14000a0d6:	add    BYTE PTR [rax],al
   14000a0d8:	nop
   14000a0d9:	xor    DWORD PTR [rax],eax
   14000a0db:	add    BYTE PTR [rax],bl
   14000a0dd:	xor    eax,0x77700000
   14000a0e2:	add    BYTE PTR [rax],al
   14000a0e4:	and    BYTE PTR [rip+0x36070000],dh        # 0x17607a0ea
   14000a0ea:	add    BYTE PTR [rax],al
   14000a0ec:	nop
   14000a0ed:	ja     0x14000a0ef
   14000a0ef:	add    BYTE PTR [rdi+rsi*1+0x0],dl
   14000a0f3:	add    BYTE PTR [rax],ch
   14000a0f5:	cmp    eax,DWORD PTR [rax]
   14000a0f7:	add    BYTE PTR [rdi+rsi*2+0x3b300000],ah
   14000a0fe:	add    BYTE PTR [rax],al
   14000a100:	enter  0x3c,0x0
   14000a104:	enter  0x77,0x0
   14000a108:	sar    BYTE PTR [rax+rax*1],1
   14000a10b:	add    BYTE PTR [rcx],cl
   14000a10d:	add    BYTE PTR ds:[rax],al
   14000a110:	call   0x15c00a18c
   14000a115:	add    BYTE PTR ds:[rax],al
   14000a118:	(bad)  
   14000a119:	add    BYTE PTR ds:[rax],al
   14000a11c:	lock ja 0x14000a11f
   14000a11f:	add    al,ah
   14000a121:	add    BYTE PTR ds:[rax],al
   14000a124:	or     edi,DWORD PTR [rdi]
   14000a126:	add    BYTE PTR [rax],al
   14000a128:	or     BYTE PTR [rax+0x0],bh
   14000a12b:	add    BYTE PTR [rax],dh
   14000a12d:	(bad)  
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	(bad)
   14000a133:	add    BYTE PTR [rax],dl
   14000a135:	js     0x14000a137
   14000a137:	add    ah,cl
   14000a139:	rex.X add BYTE PTR [rax],al
   14000a13c:	retf   
   14000a13d:	rex.RX add BYTE PTR [rax],r8b
   14000a140:	sub    BYTE PTR [rax+0x0],bh
   14000a143:	add    ah,dl
   14000a145:	rex.RX add BYTE PTR [rax],r8b
   14000a148:	push   rbp
   14000a149:	rex.RXB add BYTE PTR [r8],r8b
   14000a14c:	sbb    BYTE PTR [rsi+0x0],dh
   14000a14f:	add    BYTE PTR [rdi+rax*2+0x0],bl
   14000a153:	add    dh,al
   14000a155:	rex.RXB add BYTE PTR [r8],r8b
   14000a158:	push   rax
   14000a159:	js     0x14000a15b
   14000a15b:	add    ah,cl
   14000a15d:	rex.RXB add BYTE PTR [r8],r8b
   14000a160:	ins    DWORD PTR es:[rdi],dx
   14000a161:	rex.WB add BYTE PTR [r8],al
   14000a164:	pop    rsp
   14000a165:	js     0x14000a167
   14000a167:	add    BYTE PTR [rax+0x5f000049],al
   14000a16d:	rex.WX add BYTE PTR [rax],al
   14000a170:	sbb    BYTE PTR [rsi+0x0],dh
   14000a173:	add    BYTE PTR [rax+0x4a],dh
   14000a176:	add    BYTE PTR [rax],al
   14000a178:	adc    al,0x4b
   14000a17a:	add    BYTE PTR [rax],al
   14000a17c:	sbb    BYTE PTR [rsi+0x0],dh
   14000a17f:	add    BYTE PTR [rax],ah
   14000a181:	rex.WXB add BYTE PTR [r8],al
   14000a184:	xor    DWORD PTR [rsi+0x0],ecx
   14000a187:	add    BYTE PTR [rax+rdi*2+0x0],ah
   14000a18b:	add    BYTE PTR [rax+0x4e],al
   14000a18e:	add    BYTE PTR [rax],al
   14000a190:	mov    bl,0x4e
   14000a192:	add    BYTE PTR [rax],al
   14000a194:	jl     0x14000a20e
   14000a196:	add    BYTE PTR [rax],al
   14000a198:	ror    BYTE PTR [rsi+0x0],0x0
   14000a19c:	test   BYTE PTR [rsi+0x0],0x0
   14000a1a0:	or     BYTE PTR [rax+0x0],bh
   14000a1a3:	add    ah,bh
   14000a1a5:	rex.WRX add BYTE PTR [rax],r8b
   14000a1a8:	rex.RXB push r8
   14000a1aa:	add    BYTE PTR [rax],al
   14000a1ac:	mov    BYTE PTR [rax+0x0],bh
   14000a1af:	add    BYTE PTR [rax+0x50],dl
   14000a1b2:	add    BYTE PTR [rax],al
   14000a1b4:	in     al,dx
   14000a1b5:	push   rax
   14000a1b6:	add    BYTE PTR [rax],al
   14000a1b8:	test   al,0x78
   14000a1ba:	add    BYTE PTR [rax],al
   14000a1bc:	add    BYTE PTR [rcx+0x0],dl
   14000a1bf:	add    BYTE PTR [rbx+0x51],bl
   14000a1c2:	add    BYTE PTR [rax],al
   14000a1c4:	mov    al,0x78
   14000a1c6:	add    BYTE PTR [rax],al
   14000a1c8:	jo     0x14000a21b
   14000a1ca:	add    BYTE PTR [rax],al
   14000a1cc:	(bad)  
   14000a1cd:	push   rdx
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	pop    rsp
   14000a1d1:	jns    0x14000a1d3
   14000a1d3:	add    BYTE PTR [rax+0x52],dl
   14000a1d6:	add    BYTE PTR [rax],al
   14000a1d8:	cdq    
   14000a1d9:	push   rdx
   14000a1da:	add    BYTE PTR [rax],al
   14000a1dc:	pop    rsp
   14000a1dd:	js     0x14000a1df
   14000a1df:	add    BYTE PTR [rax-0x4dffffae],ah
   14000a1e5:	push   rdx
   14000a1e6:	add    BYTE PTR [rax],al
   14000a1e8:	pop    rsp
   14000a1e9:	jns    0x14000a1eb
   14000a1eb:	add    BYTE PTR [rax+0xe000052],bh
   14000a1f1:	push   rbp
   14000a1f2:	add    BYTE PTR [rax],al
   14000a1f4:	mov    eax,0x20000078
   14000a1f9:	push   rbp
   14000a1fa:	add    BYTE PTR [rax],al
   14000a1fc:	ds push rbp
   14000a1fe:	add    BYTE PTR [rax],al
   14000a200:	call   0x18400a27d
   14000a205:	push   rbp
   14000a206:	add    BYTE PTR [rax],al
   14000a208:	js     0x14000a25f
   14000a20a:	add    BYTE PTR [rax],al
   14000a20c:	or     BYTE PTR [rax+0x0],bh
   14000a20f:	add    BYTE PTR [rax-0xeffffab],al
   14000a215:	push   rsi
   14000a216:	add    BYTE PTR [rax],al
   14000a218:	hlt    
   14000a219:	js     0x14000a21b
   14000a21b:	add    al,bh
   14000a21d:	push   rsi
   14000a21e:	add    BYTE PTR [rax],al
   14000a220:	out    dx,eax
   14000a221:	push   rdi
   14000a222:	add    BYTE PTR [rax],al
   14000a224:	in     al,dx
   14000a225:	js     0x14000a227
   14000a227:	add    BYTE PTR [rax],al
   14000a229:	pop    rax
   14000a22a:	add    BYTE PTR [rax],al
   14000a22c:	cmp    DWORD PTR [rax+0x0],ebx
   14000a22f:	add    BYTE PTR [rcx+rdi*2+0x0],bl
   14000a233:	add    BYTE PTR [rax+0x58],al
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	pop    rax
   14000a239:	pop    rax
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	pop    rsp
   14000a23d:	jns    0x14000a23f
   14000a23f:	add    BYTE PTR [rax+rbx*2+0x0],ch
   14000a243:	add    al,al
   14000a245:	pop    rax
   14000a246:	add    BYTE PTR [rax],al
   14000a248:	cld    
   14000a249:	js     0x14000a24b
   14000a24b:	add    al,cl
   14000a24d:	pop    rax
   14000a24e:	add    BYTE PTR [rax],al
   14000a250:	or     eax,0x8000059
   14000a255:	js     0x14000a257
   14000a257:	add    BYTE PTR [rax-0x32ffffa7],al
   14000a25d:	pop    rcx
   14000a25e:	add    BYTE PTR [rax],al
   14000a260:	sbb    al,0x79
   14000a262:	add    BYTE PTR [rax],al
   14000a264:	adc    al,0x5a
   14000a266:	add    BYTE PTR [rax],al
   14000a268:	in     al,0x5a
   14000a26a:	add    BYTE PTR [rax],al
   14000a26c:	rex.W jns 0x14000a26f
   14000a26f:	add    BYTE PTR [rax],ch
   14000a271:	pop    rbx
   14000a272:	add    BYTE PTR [rax],al
   14000a274:	rex.RX pop rbx
   14000a276:	add    BYTE PTR [rax],al
   14000a278:	or     BYTE PTR [rax+0x0],bh
   14000a27b:	add    BYTE PTR [rax+0x5b],bl
   14000a27e:	add    BYTE PTR [rax],al
   14000a280:	jne    0x14000a2dd
   14000a282:	add    BYTE PTR [rax],al
   14000a284:	pop    rsp
   14000a285:	jns    0x14000a287
   14000a287:	add    BYTE PTR [rbx+rbx*2+0x0],bh
   14000a28b:	add    bh,bl
   14000a28d:	pop    rbx
   14000a28e:	add    BYTE PTR [rax],al
   14000a290:	or     BYTE PTR [rax+0x0],bh
   14000a293:	add    BYTE PTR [rax],dl
   14000a295:	pop    rsp
   14000a296:	add    BYTE PTR [rax],al
   14000a298:	adc    bl,BYTE PTR [rax+rax*1+0x0]
   14000a29c:	pop    rax
   14000a29d:	jns    0x14000a29f
   14000a29f:	add    BYTE PTR [rax],dh
   14000a2a1:	pop    rsp
   14000a2a2:	add    BYTE PTR [rax],al
   14000a2a4:	jge    0x14000a302
   14000a2a6:	add    BYTE PTR [rax],al
   14000a2a8:	push   0xffffffff86000079
   14000a2ad:	pop    rsp
   14000a2ae:	add    BYTE PTR [rax],al
   14000a2b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a2b1:	pop    rsp
   14000a2b2:	add    BYTE PTR [rax],al
   14000a2b4:	rex jns 0x14000a2b7
   14000a2b7:	add    BYTE PTR [rax-0x2fffffa4],dh
   14000a2bd:	pop    rsp
   14000a2be:	add    BYTE PTR [rax],al
   14000a2c0:	rex jns 0x14000a2c3
	...

Disassembly of section .rsrc:

000000014000b000 <.rsrc>:
	...
   14000b00c:	add    DWORD PTR [rax],eax
   14000b00e:	add    al,BYTE PTR [rax]
   14000b010:	call   0x16880b015
   14000b015:	add    BYTE PTR [rax],al
   14000b017:	adc    BYTE PTR [rax],0x0
   14000b01a:	add    BYTE PTR [rax],al
   14000b01c:	add    BYTE PTR [rax],al
   14000b01f:	sbb    BYTE PTR [rax],0x0
   14000b022:	add    BYTE PTR [rax],al
   14000b024:	pop    rax
   14000b025:	add    BYTE PTR [rax],al
   14000b027:	add    BYTE PTR [rax],0x0
	...
   14000b036:	add    DWORD PTR [rax],eax
   14000b038:	add    DWORD PTR [rax],eax
   14000b03a:	add    BYTE PTR [rax],al
   14000b03c:	jo     0x14000b03e
   14000b03e:	add    BYTE PTR [rax+0x0],al
	...
   14000b04c:	add    BYTE PTR [rax],al
   14000b04e:	add    DWORD PTR [rax],eax
   14000b050:	add    DWORD PTR [rax],eax
   14000b052:	add    BYTE PTR [rax],al
   14000b054:	mov    BYTE PTR [rax],al
   14000b056:	add    BYTE PTR [rax+0x0],al
	...
   14000b064:	add    BYTE PTR [rax],al
   14000b066:	add    DWORD PTR [rax],eax
   14000b068:	add    DWORD PTR [rax],eax
   14000b06a:	add    BYTE PTR [rax],al
   14000b06c:	movabs al,ds:0x800000
	...
   14000b07d:	add    BYTE PTR [rcx],al
   14000b07f:	add    BYTE PTR [rcx],cl
   14000b081:	add    al,0x0
   14000b083:	add    BYTE PTR [rax+0x0],bh
	...
   14000b095:	add    BYTE PTR [rcx],al
   14000b097:	add    BYTE PTR [rcx],cl
   14000b099:	add    al,0x0
   14000b09b:	add    al,cl
	...
   14000b0ad:	add    BYTE PTR [rcx],al
   14000b0af:	add    BYTE PTR [rcx],cl
   14000b0b1:	add    al,0x0
   14000b0b3:	add    al,bl
   14000b0b5:	add    BYTE PTR [rax],al
   14000b0b7:	add    BYTE PTR [rax-0x48],ch
   14000b0ba:	add    BYTE PTR [rax],al
   14000b0bc:	enter  0x0,0x0
	...
   14000b0c8:	test   al,0xb4
   14000b0ca:	add    BYTE PTR [rax],al
   14000b0cc:	mov    esp,0x3
   14000b0d1:	add    BYTE PTR [rax],al
   14000b0d3:	add    BYTE PTR [rax],al
   14000b0d5:	add    BYTE PTR [rax],al
   14000b0d7:	add    al,dh
   14000b0d9:	mov    al,0x0
   14000b0db:	add    BYTE PTR [rbp+0x3],dh
   14000b0e1:	add    BYTE PTR [rax],al
   14000b0e3:	add    BYTE PTR [rax],al
   14000b0e5:	add    BYTE PTR [rax],al
   14000b0e7:	add    BYTE PTR [rbx],al
   14000b0e9:	add    BYTE PTR [rbp+0x0],cl
   14000b0ec:	push   rbp
   14000b0ed:	add    BYTE PTR [rcx+0x0],cl
   14000b0f0:	cmp    al,0x3f
   14000b0f2:	js     0x14000b161
   14000b0f4:	ins    BYTE PTR es:[rdi],dx
   14000b0f5:	and    BYTE PTR [rsi+0x65],dh
   14000b0f8:	jb     0x14000b16d
   14000b0fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000b101:	xor    BYTE PTR [rdx],ah
   14000b103:	and    BYTE PTR [rbp+0x6e],ah
   14000b106:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000b109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000b110:	rex.RX sub eax,0x73202238
   14000b116:	je     0x14000b179
   14000b118:	outs   dx,BYTE PTR ds:[rsi]
   14000b119:	fs (bad) 
   14000b11b:	ins    BYTE PTR es:[rdi],dx
   14000b11c:	outs   dx,DWORD PTR ds:[rsi]
   14000b11d:	outs   dx,BYTE PTR ds:[rsi]
   14000b11e:	gs cmp eax,0x73657922
   14000b124:	and    bh,BYTE PTR [rdi]
   14000b126:	ds or  eax,0x2d213c0a
   14000b12c:	sub    eax,0x706f4320
   14000b131:	jns    0x14000b1a5
   14000b133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000b13a:	sub    DWORD PTR [rax],esp
   14000b13c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000b144:	je     0x14000b166
   14000b146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b148:	jb     0x14000b1ba
   14000b14a:	outs   dx,DWORD PTR ds:[rsi]
   14000b14b:	jb     0x14000b1ae
   14000b14d:	je     0x14000b1b8
   14000b14f:	outs   dx,DWORD PTR ds:[rsi]
   14000b150:	outs   dx,BYTE PTR ds:[rsi]
   14000b151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0def84
   14000b157:	cmp    al,0x61
   14000b159:	jae    0x14000b1ce
   14000b15b:	gs ins DWORD PTR es:[rdi],dx
   14000b15d:	(bad)  
   14000b15e:	ins    BYTE PTR es:[rdi],dx
   14000b15f:	jns    0x14000b181
   14000b161:	js     0x14000b1d0
   14000b163:	ins    BYTE PTR es:[rdi],dx
   14000b164:	outs   dx,BYTE PTR ds:[rsi]
   14000b165:	jae    0x14000b1a4
   14000b167:	and    dh,BYTE PTR [rbp+0x72]
   14000b16a:	outs   dx,BYTE PTR ds:[rsi]
   14000b16b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000b16e:	push   0x73616d65
   14000b173:	sub    eax,0x7263696d
   14000b178:	outs   dx,DWORD PTR ds:[rsi]
   14000b179:	jae    0x14000b1ea
   14000b17b:	data16 je 0x14000b1ab
   14000b17e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b181:	cmp    ah,BYTE PTR [rcx+0x73]
   14000b184:	ins    DWORD PTR es:[rdi],dx
   14000b185:	cs jbe 0x14000b1b9
   14000b188:	and    ah,BYTE PTR [rax]
   14000b18a:	ins    DWORD PTR es:[rdi],dx
   14000b18b:	(bad)  
   14000b18c:	outs   dx,BYTE PTR ds:[rsi]
   14000b18d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000b194:	jb     0x14000b209
   14000b196:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000b19d:	xor    BYTE PTR [rdx],ah
   14000b19f:	ds or  eax,0x73613c0a
   14000b1a5:	jae    0x14000b20c
   14000b1a7:	ins    DWORD PTR es:[rdi],dx
   14000b1a8:	(bad)  
   14000b1a9:	ins    BYTE PTR es:[rdi],dx
   14000b1aa:	jns    0x14000b1f5
   14000b1ac:	fs outs dx,BYTE PTR gs:[rsi]
   14000b1af:	je     0x14000b21a
   14000b1b1:	je     0x14000b22c
   14000b1b3:	or     eax,0x2020200a
   14000b1b8:	and    BYTE PTR [rsi+0x61],ch
   14000b1bb:	ins    DWORD PTR es:[rdi],dx
   14000b1bc:	gs cmp eax,0x63694d22
   14000b1c2:	jb     0x14000b233
   14000b1c4:	jae    0x14000b235
   14000b1c6:	data16 je 0x14000b1f7
   14000b1c9:	push   rdi
   14000b1ca:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000b1d1:	(bad)  
   14000b1d3:	jae    0x14000b23a
   14000b1d5:	cs gs js 0x14000b24d
   14000b1d9:	jb     0x14000b23c
   14000b1db:	movsxd esi,DWORD PTR [rbx]
   14000b1dd:	xor    ah,BYTE PTR [rdx]
   14000b1df:	or     eax,0x2020200a
   14000b1e4:	and    BYTE PTR [rax+0x72],dh
   14000b1e7:	outs   dx,DWORD PTR ds:[rsi]
   14000b1e8:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b1eb:	jae    0x14000b25c
   14000b1ed:	jb     0x14000b230
   14000b1ef:	jb     0x14000b254
   14000b1f1:	push   0x63657469
   14000b1f6:	je     0x14000b26d
   14000b1f8:	jb     0x14000b25f
   14000b1fa:	cmp    eax,0x646d6122
   14000b1ff:	ss xor al,0x22
   14000b202:	or     eax,0x2020200a
   14000b207:	and    BYTE PTR [rsi+0x65],dh
   14000b20a:	jb     0x14000b27f
   14000b20c:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000b213:	xor    DWORD PTR [rsi],ebp
   14000b215:	xor    BYTE PTR [rsi],ch
   14000b217:	xor    BYTE PTR [rdx],ah
   14000b219:	or     eax,0x2020200a
   14000b21e:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000b222:	gs cmp eax,0x6e697722
   14000b228:	xor    esi,DWORD PTR [rdx]
   14000b22a:	and    ch,BYTE PTR [rdi]
   14000b22c:	ds or  eax,0x65643c0a
   14000b232:	jae    0x14000b297
   14000b234:	jb     0x14000b29f
   14000b236:	jo     0x14000b2ac
   14000b238:	imul   ebp,DWORD PTR [rdi+0x6e],0x6261433e
   14000b23f:	imul   ebp,DWORD PTR [rsi+0x65],0x642f3c74
   14000b246:	gs jae 0x14000b2ac
   14000b249:	jb     0x14000b2b4
   14000b24b:	jo     0x14000b2c1
   14000b24d:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   14000b254:	fs gs jo 0x14000b2bd
   14000b258:	outs   dx,BYTE PTR ds:[rsi]
   14000b259:	fs outs dx,BYTE PTR gs:[rsi]
   14000b25c:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000b25f:	or     eax,0x2020200a
   14000b264:	and    BYTE PTR [rsp+riz*2],bh
   14000b267:	gs jo  0x14000b2cf
   14000b26a:	outs   dx,BYTE PTR ds:[rsi]
   14000b26b:	fs outs dx,BYTE PTR gs:[rsi]
   14000b26e:	je     0x14000b2b1
   14000b270:	jae    0x14000b2e5
   14000b272:	gs ins DWORD PTR es:[rdi],dx
   14000b274:	(bad)  
   14000b275:	ins    BYTE PTR es:[rdi],dx
   14000b276:	jns    0x14000b2b6
   14000b278:	or     eax,0x2020200a
   14000b27d:	and    BYTE PTR [rax],ah
   14000b27f:	and    BYTE PTR [rax],ah
   14000b281:	and    BYTE PTR [rcx+riz*2],bh
   14000b284:	jae    0x14000b2f9
   14000b286:	gs ins DWORD PTR es:[rdi],dx
   14000b288:	(bad)  
   14000b289:	ins    BYTE PTR es:[rdi],dx
   14000b28a:	jns    0x14000b2d5
   14000b28c:	fs outs dx,BYTE PTR gs:[rsi]
   14000b28f:	je     0x14000b2fa
   14000b291:	je     0x14000b30c
   14000b293:	or     eax,0x2020200a
   14000b298:	and    BYTE PTR [rax],ah
   14000b29a:	and    BYTE PTR [rax],ah
   14000b29c:	and    BYTE PTR [rax],ah
   14000b29e:	and    BYTE PTR [rax],ah
   14000b2a0:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000b2a4:	gs cmp eax,0x6e697722
   14000b2aa:	xor    esi,DWORD PTR [rdx]
   14000b2ac:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020d2bc
   14000b2b2:	and    BYTE PTR [rax],ah
   14000b2b4:	and    BYTE PTR [rax],ah
   14000b2b6:	and    BYTE PTR [rax],ah
   14000b2b8:	and    BYTE PTR [rax],ah
   14000b2ba:	and    BYTE PTR [rsi+0x61],ch
   14000b2bd:	ins    DWORD PTR es:[rdi],dx
   14000b2be:	gs cmp eax,0x63694d22
   14000b2c4:	jb     0x14000b335
   14000b2c6:	jae    0x14000b337
   14000b2c8:	data16 je 0x14000b2f9
   14000b2cb:	push   rdi
   14000b2cc:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000b2d3:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b2d5:	ins    DWORD PTR es:[rdi],dx
   14000b2d6:	ins    DWORD PTR es:[rdi],dx
   14000b2d7:	outs   dx,DWORD PTR ds:[rsi]
   14000b2d8:	outs   dx,BYTE PTR ds:[rsi]
   14000b2d9:	sub    eax,0x746e6f43
   14000b2de:	jb     0x14000b34f
   14000b2e0:	ins    BYTE PTR es:[rdi],dx
   14000b2e1:	jae    0x14000b305
   14000b2e3:	or     eax,0x2020200a
   14000b2e8:	and    BYTE PTR [rax],ah
   14000b2ea:	and    BYTE PTR [rax],ah
   14000b2ec:	and    BYTE PTR [rax],ah
   14000b2ee:	and    BYTE PTR [rax],ah
   14000b2f0:	and    BYTE PTR [rsi+0x65],dh
   14000b2f3:	jb     0x14000b368
   14000b2f5:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   14000b2fc:	xor    BYTE PTR [rsi],ch
   14000b2fe:	xor    BYTE PTR [rsi],ch
   14000b300:	xor    BYTE PTR [rdx],ah
   14000b302:	or     eax,0x2020200a
   14000b307:	and    BYTE PTR [rax],ah
   14000b309:	and    BYTE PTR [rax],ah
   14000b30b:	and    BYTE PTR [rax],ah
   14000b30d:	and    BYTE PTR [rax],ah
   14000b30f:	and    BYTE PTR [rax+0x72],dh
   14000b312:	outs   dx,DWORD PTR ds:[rsi]
   14000b313:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b316:	jae    0x14000b387
   14000b318:	jb     0x14000b35b
   14000b31a:	jb     0x14000b37f
   14000b31c:	push   0x63657469
   14000b321:	je     0x14000b398
   14000b323:	jb     0x14000b38a
   14000b325:	cmp    eax,0xd222a22
   14000b32a:	or     ah,BYTE PTR [rax]
   14000b32c:	and    BYTE PTR [rax],ah
   14000b32e:	and    BYTE PTR [rax],ah
   14000b330:	and    BYTE PTR [rax],ah
   14000b332:	and    BYTE PTR [rax],ah
   14000b334:	and    BYTE PTR [rax],ah
   14000b336:	and    BYTE PTR [rax+0x75],dh
   14000b339:	(bad)  
   14000b33a:	ins    BYTE PTR es:[rdi],dx
   14000b33b:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14000b342:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14000b346:	and    dh,BYTE PTR [rsi]
   14000b348:	xor    eax,0x36623539
   14000b34d:	xor    al,0x31
   14000b34f:	xor    al,0x34
   14000b351:	movsxd esp,DWORD PTR [rbx+0x66]
   14000b354:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14000b358:	or     eax,0x2020200a
   14000b35d:	and    BYTE PTR [rax],ah
   14000b35f:	and    BYTE PTR [rax],ah
   14000b361:	and    BYTE PTR [rax],ah
   14000b363:	and    BYTE PTR [rax],ah
   14000b365:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14000b369:	addr32 jne 0x14000b3cd
   14000b36c:	addr32 gs cmp eax,0xd222a22
   14000b373:	or     ah,BYTE PTR [rax]
   14000b375:	and    BYTE PTR [rax],ah
   14000b377:	and    BYTE PTR [rax],ah
   14000b379:	and    BYTE PTR [rax],ah
   14000b37b:	and    BYTE PTR [rdi],ch
   14000b37d:	ds or  eax,0x2020200a
   14000b383:	and    BYTE PTR [rdi+rbp*1],bh
   14000b386:	fs gs jo 0x14000b3ef
   14000b38a:	outs   dx,BYTE PTR ds:[rsi]
   14000b38b:	fs outs dx,BYTE PTR gs:[rsi]
   14000b38e:	je     0x14000b3d1
   14000b390:	jae    0x14000b405
   14000b392:	gs ins DWORD PTR es:[rdi],dx
   14000b394:	(bad)  
   14000b395:	ins    BYTE PTR es:[rdi],dx
   14000b396:	jns    0x14000b3d6
   14000b398:	or     eax,0x642f3c0a
   14000b39d:	gs jo  0x14000b405
   14000b3a0:	outs   dx,BYTE PTR ds:[rsi]
   14000b3a1:	fs outs dx,BYTE PTR gs:[rsi]
   14000b3a4:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000b3a7:	or     eax,0x72743c0a
   14000b3ac:	jne    0x14000b421
   14000b3ae:	je     0x14000b3f9
   14000b3b0:	outs   dx,BYTE PTR ds:[rsi]
   14000b3b1:	outs   dx,WORD PTR ds:[rsi]
   14000b3b3:	and    BYTE PTR [rax+0x6d],bh
   14000b3b6:	ins    BYTE PTR es:[rdi],dx
   14000b3b7:	outs   dx,BYTE PTR ds:[rsi]
   14000b3b8:	jae    0x14000b3f7
   14000b3ba:	and    dh,BYTE PTR [rbp+0x72]
   14000b3bd:	outs   dx,BYTE PTR ds:[rsi]
   14000b3be:	cmp    dh,BYTE PTR [rbx+0x63]
   14000b3c1:	push   0x73616d65
   14000b3c6:	sub    eax,0x7263696d
   14000b3cb:	outs   dx,DWORD PTR ds:[rsi]
   14000b3cc:	jae    0x14000b43d
   14000b3ce:	data16 je 0x14000b3fe
   14000b3d1:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b3d4:	cmp    ah,BYTE PTR [rcx+0x73]
   14000b3d7:	ins    DWORD PTR es:[rdi],dx
   14000b3d8:	cs jbe 0x14000b40e
   14000b3db:	and    bh,BYTE PTR [rsi]
   14000b3dd:	or     eax,0x2020200a
   14000b3e2:	and    BYTE PTR [rbx+rsi*2],bh
   14000b3e5:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000b3e9:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000b3f1:	and    BYTE PTR [rax],ah
   14000b3f3:	and    BYTE PTR [rax],ah
   14000b3f5:	and    BYTE PTR [rax],ah
   14000b3f7:	cmp    al,0x72
   14000b3f9:	gs jno 0x14000b471
   14000b3fc:	gs jae 0x14000b473
   14000b3ff:	gs fs push rax
   14000b402:	jb     0x14000b46d
   14000b404:	jbe    0x14000b46f
   14000b406:	ins    BYTE PTR es:[rdi],dx
   14000b407:	gs addr32 gs jae 0x14000b44a
   14000b40c:	or     eax,0x2020200a
   14000b411:	and    BYTE PTR [rax],ah
   14000b413:	and    BYTE PTR [rax],ah
   14000b415:	and    BYTE PTR [rax],ah
   14000b417:	and    BYTE PTR [rax],ah
   14000b419:	and    BYTE PTR [rdx+rsi*2],bh
   14000b41c:	gs jno 0x14000b494
   14000b41f:	gs jae 0x14000b496
   14000b422:	gs fs rex.RB js 0x14000b48c
   14000b427:	movsxd esi,DWORD PTR [rbp+0x74]
   14000b42a:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000b431:	ins    BYTE PTR es:[rdi],dx
   14000b432:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000b436:	gs ins BYTE PTR es:[rdi],dx
   14000b438:	cmp    eax,0x49736122
   14000b43d:	outs   dx,BYTE PTR ds:[rsi]
   14000b43e:	jbe    0x14000b4af
   14000b440:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000b444:	and    BYTE PTR [rbp+0x69],dh
   14000b447:	movsxd esp,DWORD PTR [r11+0x65]
   14000b44b:	jae    0x14000b4c0
   14000b44d:	cmp    eax,0x6c616622
   14000b452:	jae    0x14000b4b9
   14000b454:	and    ch,BYTE PTR [rdi]
   14000b456:	ds or  eax,0x2020200a
   14000b45c:	and    BYTE PTR [rax],ah
   14000b45e:	and    BYTE PTR [rax],ah
   14000b460:	and    BYTE PTR [rdi+rbp*1],bh
   14000b463:	jb     0x14000b4ca
   14000b465:	jno    0x14000b4dc
   14000b467:	gs jae 0x14000b4de
   14000b46a:	gs fs push rax
   14000b46d:	jb     0x14000b4d8
   14000b46f:	jbe    0x14000b4da
   14000b471:	ins    BYTE PTR es:[rdi],dx
   14000b472:	gs addr32 gs jae 0x14000b4b5
   14000b477:	or     eax,0x2020200a
   14000b47c:	and    BYTE PTR [rdi+rbp*1],bh
   14000b47f:	jae    0x14000b4e6
   14000b481:	movsxd esi,DWORD PTR [rbp+0x72]
   14000b484:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000b48c:	je     0x14000b500
   14000b48e:	jne    0x14000b503
   14000b490:	je     0x14000b4db
   14000b492:	outs   dx,BYTE PTR ds:[rsi]
   14000b493:	outs   dx,WORD PTR ds:[rsi]
   14000b495:	ds or  eax,0x612f3c0a
   14000b49b:	jae    0x14000b510
   14000b49d:	gs ins DWORD PTR es:[rdi],dx
   14000b49f:	(bad)  
   14000b4a0:	ins    BYTE PTR es:[rdi],dx
   14000b4a1:	jns    0x14000b4e1
   14000b4a3:	or     eax,0xa
   14000b4a8:	mov    esp,0x3403
   14000b4ad:	add    BYTE PTR [rsi+0x0],dl
   14000b4b0:	push   rbx
   14000b4b1:	add    BYTE PTR [rdi+0x0],bl
   14000b4b4:	push   rsi
   14000b4b5:	add    BYTE PTR [rbp+0x0],al
   14000b4b8:	push   rdx
   14000b4b9:	add    BYTE PTR [rbx+0x0],dl
   14000b4bc:	rex.WB add BYTE PTR [r15+0x0],cl
   14000b4c0:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14000b4c4:	rex.WB add BYTE PTR [r14+0x0],cl
   14000b4c8:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14000b4cc:	add    BYTE PTR [rax],al
   14000b4ce:	add    BYTE PTR [rax],al
   14000b4d0:	mov    ebp,0xfeef04
   14000b4d5:	add    BYTE PTR [rcx],al
   14000b4d7:	add    BYTE PTR [rax],al
   14000b4d9:	add    BYTE PTR [rdx],cl
   14000b4db:	add    dl,bh
   14000b4dd:	rex.X add BYTE PTR [rax],bpl
   14000b4e0:	add    BYTE PTR [rax],al
   14000b4e2:	or     al,BYTE PTR [rax]
   14000b4e4:	cli    
   14000b4e5:	rex.X add BYTE PTR [rax],bpl
   14000b4e8:	(bad)  
   14000b4e9:	add    BYTE PTR [rax],al
   14000b4eb:	add    BYTE PTR [rax],al
   14000b4ed:	add    BYTE PTR [rax],al
   14000b4ef:	add    BYTE PTR [rax+rax*1],al
   14000b4f2:	add    al,0x0
   14000b4f4:	add    DWORD PTR [rax],eax
	...
   14000b502:	add    BYTE PTR [rax],al
   14000b504:	sbb    al,BYTE PTR [rbx]
   14000b506:	add    BYTE PTR [rax],al
   14000b508:	add    DWORD PTR [rax],eax
   14000b50a:	push   rbx
   14000b50b:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000b50f:	add    BYTE PTR [rcx+0x0],ch
   14000b512:	outs   dx,BYTE PTR ds:[rsi]
   14000b513:	add    BYTE PTR [rdi+0x0],ah
   14000b516:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b51a:	ins    BYTE PTR es:[rdi],dx
   14000b51b:	add    BYTE PTR [rbp+0x0],ah
   14000b51e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b522:	data16 add BYTE PTR [rdi+0x0],ch
   14000b526:	add    BYTE PTR [rax],al
   14000b528:	test   BYTE PTR [rdx],0x0
   14000b52b:	add    BYTE PTR [rcx],al
   14000b52d:	add    BYTE PTR [rax],dh
   14000b52f:	add    BYTE PTR [rax+rax*1],dh
   14000b532:	xor    BYTE PTR [rax],al
   14000b534:	cmp    DWORD PTR [rax],eax
   14000b536:	xor    BYTE PTR [rax],al
   14000b538:	xor    al,0x0
   14000b53a:	rex.X add BYTE PTR [rax],sil
   14000b53d:	add    BYTE PTR [rax],al
   14000b53f:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000b543:	add    BYTE PTR [rcx],al
   14000b545:	add    BYTE PTR [rbx+0x0],al
   14000b548:	outs   dx,DWORD PTR ds:[rsi]
   14000b549:	add    BYTE PTR [rbp+0x0],ch
   14000b54c:	jo     0x14000b54e
   14000b54e:	(bad)  
   14000b54f:	add    BYTE PTR [rsi+0x0],ch
   14000b552:	jns    0x14000b554
   14000b554:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000b558:	ins    DWORD PTR es:[rdi],dx
   14000b559:	add    BYTE PTR [rbp+0x0],ah
   14000b55c:	add    BYTE PTR [rax],al
   14000b55e:	add    BYTE PTR [rax],al
   14000b560:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000b564:	movsxd eax,DWORD PTR [rax]
   14000b566:	jb     0x14000b568
   14000b568:	outs   dx,DWORD PTR ds:[rsi]
   14000b569:	add    BYTE PTR [rbx+0x0],dh
   14000b56c:	outs   dx,DWORD PTR ds:[rsi]
   14000b56d:	add    BYTE PTR [rsi+0x0],ah
   14000b570:	je     0x14000b572
   14000b572:	and    BYTE PTR [rax],al
   14000b574:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b578:	jb     0x14000b57a
   14000b57a:	jo     0x14000b57c
   14000b57c:	outs   dx,DWORD PTR ds:[rsi]
   14000b57d:	add    BYTE PTR [rdx+0x0],dh
   14000b580:	(bad)  
   14000b581:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b585:	add    BYTE PTR [rdi+0x0],ch
   14000b588:	outs   dx,BYTE PTR ds:[rsi]
   14000b589:	add    BYTE PTR [rax],al
   14000b58b:	add    BYTE PTR [rax+0x0],dh
   14000b58e:	and    al,0x0
   14000b590:	add    DWORD PTR [rax],eax
   14000b592:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b596:	ins    BYTE PTR es:[rdi],dx
   14000b597:	add    BYTE PTR [rbp+0x0],ah
   14000b59a:	add    BYTE PTR [rbp+0x0],r12b
   14000b59e:	jae    0x14000b5a0
   14000b5a0:	movsxd eax,DWORD PTR [rax]
   14000b5a2:	jb     0x14000b5a4
   14000b5a4:	imul   eax,DWORD PTR [rax],0x740070
   14000b5aa:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b5b0:	add    BYTE PTR [rax],al
   14000b5b2:	add    BYTE PTR [rax],al
   14000b5b4:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000b5b8:	movsxd eax,DWORD PTR [rax]
   14000b5ba:	jb     0x14000b5bc
   14000b5bc:	outs   dx,DWORD PTR ds:[rsi]
   14000b5bd:	add    BYTE PTR [rbx+0x0],dh
   14000b5c0:	outs   dx,DWORD PTR ds:[rsi]
   14000b5c1:	add    BYTE PTR [rsi+0x0],ah
   14000b5c4:	je     0x14000b5c6
   14000b5c6:	scas   al,BYTE PTR es:[rdi]
   14000b5c7:	add    BYTE PTR [rax],ah
   14000b5c9:	add    BYTE PTR [rbx+0x0],al
   14000b5cc:	add    BYTE PTR [r10+0x0],al
   14000b5d0:	and    BYTE PTR [rax],al
   14000b5d2:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b5d6:	ins    BYTE PTR es:[rdi],dx
   14000b5d7:	add    BYTE PTR [rbp+0x0],ah
   14000b5da:	and    BYTE PTR [rax],al
   14000b5dc:	add    BYTE PTR [r8+0x0],r15b
   14000b5e0:	je     0x14000b5e2
   14000b5e2:	jb     0x14000b5e4
   14000b5e4:	(bad)  
   14000b5e5:	add    BYTE PTR [rbx+0x0],ah
   14000b5e8:	je     0x14000b5ea
   14000b5ea:	and    BYTE PTR [rax],al
   14000b5ec:	push   rbp
   14000b5ed:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b5f1:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000b5f5:	add    BYTE PTR [rax+rax*1+0x79],dh
   14000b5f9:	add    BYTE PTR [rax],al
   14000b5fb:	add    BYTE PTR [rsi+0x0],ch
   14000b5fe:	(bad)  
   14000b5ff:	add    BYTE PTR [rcx],al
   14000b601:	add    BYTE PTR [rsi+0x0],al
   14000b604:	imul   eax,DWORD PTR [rax],0x65006c
   14000b60a:	push   rsi
   14000b60b:	add    BYTE PTR [rbp+0x0],ah
   14000b60e:	jb     0x14000b610
   14000b610:	jae    0x14000b612
   14000b612:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b618:	add    BYTE PTR [rax],al
   14000b61a:	add    BYTE PTR [rax],al
   14000b61c:	xor    DWORD PTR [rax],eax
   14000b61e:	xor    BYTE PTR [rax],al
   14000b620:	add    BYTE PTR cs:[rax],dh
   14000b623:	add    BYTE PTR [rsi],ch
   14000b625:	add    BYTE PTR [rcx],dh
   14000b627:	add    BYTE PTR [rax],dh
   14000b629:	add    BYTE PTR [rdx],dh
   14000b62b:	add    BYTE PTR [rax+rax*1],dh
   14000b62e:	xor    BYTE PTR [rax],al
   14000b630:	add    BYTE PTR cs:[rcx],dh
   14000b633:	add    BYTE PTR [rdi],dh
   14000b635:	add    BYTE PTR [rcx],dh
   14000b637:	add    BYTE PTR [rax+rax*1],dh
   14000b63a:	add    BYTE PTR ss:[rax],ah
   14000b63d:	add    BYTE PTR [rax],ch
   14000b63f:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000b643:	add    BYTE PTR [rcx],dh
   14000b645:	add    BYTE PTR [rdi+0x0],bl
   14000b648:	jae    0x14000b64a
   14000b64a:	je     0x14000b64c
   14000b64c:	xor    DWORD PTR [rax],eax
   14000b64e:	add    BYTE PTR cs:[rcx],dh
   14000b651:	add    BYTE PTR [rsi],dh
   14000b653:	add    BYTE PTR [rax],dh
   14000b655:	add    BYTE PTR [rcx],bh
   14000b657:	add    BYTE PTR [rdx],dh
   14000b659:	add    BYTE PTR [rcx],bh
   14000b65b:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700e761
   14000b661:	add    BYTE PTR [rax+rax*1],dh
   14000b664:	cmp    BYTE PTR [rax],al
   14000b666:	sub    DWORD PTR [rax],eax
   14000b668:	add    BYTE PTR [rax],al
   14000b66a:	add    BYTE PTR [rax],al
   14000b66c:	cmp    al,BYTE PTR [rax]
   14000b66e:	or     eax,0x49000100
   14000b673:	add    BYTE PTR [rsi+0x0],ch
   14000b676:	je     0x14000b678
   14000b678:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b67c:	outs   dx,BYTE PTR ds:[rsi]
   14000b67d:	add    BYTE PTR [rcx+0x0],ah
   14000b680:	ins    BYTE PTR es:[rdi],dx
   14000b681:	add    BYTE PTR [rsi+0x0],cl
   14000b684:	(bad)  
   14000b685:	add    BYTE PTR [rbp+0x0],ch
   14000b688:	add    BYTE PTR gs:[rax],al
   14000b68b:	add    BYTE PTR [rbp+0x0],ah
   14000b68e:	js     0x14000b690
   14000b690:	je     0x14000b692
   14000b692:	jb     0x14000b694
   14000b694:	(bad)  
   14000b695:	add    BYTE PTR [rbx+0x0],ah
   14000b698:	xor    eax,DWORD PTR [rax]
   14000b69a:	xor    al,BYTE PTR [rax]
   14000b69c:	add    BYTE PTR cs:[rbp+0x0],ah
   14000b6a0:	js     0x14000b6a2
   14000b6a2:	add    BYTE PTR gs:[rax],al
   14000b6a5:	add    BYTE PTR [rax],al
   14000b6a7:	add    BYTE PTR [rax+0x1002e00],al
   14000b6ad:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000b6b1:	add    BYTE PTR [rdi+0x0],ah
   14000b6b4:	(bad)  
   14000b6b5:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000b6b9:	add    BYTE PTR [rdi+0x0],ch
   14000b6bc:	jo     0x14000b6be
   14000b6be:	jns    0x14000b6c0
   14000b6c0:	jb     0x14000b6c2
   14000b6c2:	imul   eax,DWORD PTR [rax],0x680067
   14000b6c8:	je     0x14000b6ca
   14000b6ca:	add    BYTE PTR [rax],al
   14000b6cc:	test   eax,0x4d002000
   14000b6d1:	add    BYTE PTR [rcx+0x0],ch
   14000b6d4:	movsxd eax,DWORD PTR [rax]
   14000b6d6:	jb     0x14000b6d8
   14000b6d8:	outs   dx,DWORD PTR ds:[rsi]
   14000b6d9:	add    BYTE PTR [rbx+0x0],dh
   14000b6dc:	outs   dx,DWORD PTR ds:[rsi]
   14000b6dd:	add    BYTE PTR [rsi+0x0],ah
   14000b6e0:	je     0x14000b6e2
   14000b6e2:	and    BYTE PTR [rax],al
   14000b6e4:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b6e8:	jb     0x14000b6ea
   14000b6ea:	jo     0x14000b6ec
   14000b6ec:	outs   dx,DWORD PTR ds:[rsi]
   14000b6ed:	add    BYTE PTR [rdx+0x0],dh
   14000b6f0:	(bad)  
   14000b6f1:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b6f5:	add    BYTE PTR [rdi+0x0],ch
   14000b6f8:	outs   dx,BYTE PTR ds:[rsi]
   14000b6f9:	add    BYTE PTR [rsi],ch
   14000b6fb:	add    BYTE PTR [rax],ah
   14000b6fd:	add    BYTE PTR [rcx+0x0],al
   14000b700:	ins    BYTE PTR es:[rdi],dx
   14000b701:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000b705:	add    BYTE PTR [rdx+0x0],dh
   14000b708:	imul   eax,DWORD PTR [rax],0x680067
   14000b70e:	je     0x14000b710
   14000b710:	jae    0x14000b712
   14000b712:	and    BYTE PTR [rax],al
   14000b714:	jb     0x14000b716
   14000b716:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b71a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b71e:	jbe    0x14000b720
   14000b720:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000b725:	add    BYTE PTR [rax],al
   14000b727:	add    BYTE PTR [rdx+0x0],al
   14000b72a:	or     eax,0x4f000100
   14000b72f:	add    BYTE PTR [rdx+0x0],dh
   14000b732:	imul   eax,DWORD PTR [rax],0x690067
   14000b738:	outs   dx,BYTE PTR ds:[rsi]
   14000b739:	add    BYTE PTR [rcx+0x0],ah
   14000b73c:	ins    BYTE PTR es:[rdi],dx
   14000b73d:	add    BYTE PTR [rsi+0x0],al
   14000b740:	imul   eax,DWORD PTR [rax],0x65006c
   14000b746:	outs   dx,BYTE PTR ds:[rsi]
   14000b747:	add    BYTE PTR [rcx+0x0],ah
   14000b74a:	ins    DWORD PTR es:[rdi],dx
   14000b74b:	add    BYTE PTR [rbp+0x0],ah
   14000b74e:	add    BYTE PTR [rax],al
   14000b750:	add    BYTE PTR gs:[rax+0x0],bh
   14000b754:	je     0x14000b756
   14000b756:	jb     0x14000b758
   14000b758:	(bad)  
   14000b759:	add    BYTE PTR [rbx+0x0],ah
   14000b75c:	xor    eax,DWORD PTR [rax]
   14000b75e:	xor    al,BYTE PTR [rax]
   14000b760:	add    BYTE PTR cs:[rbp+0x0],ah
   14000b764:	js     0x14000b766
   14000b766:	add    BYTE PTR gs:[rax],al
   14000b769:	add    BYTE PTR [rax],al
   14000b76b:	add    BYTE PTR [rdx+0x0],ch
   14000b76e:	and    eax,0x50000100
   14000b773:	add    BYTE PTR [rdx+0x0],dh
   14000b776:	outs   dx,DWORD PTR ds:[rsi]
   14000b777:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000b77b:	add    BYTE PTR [rbx+0x0],ah
   14000b77e:	je     0x14000b780
   14000b780:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000b784:	ins    DWORD PTR es:[rdi],dx
   14000b785:	add    BYTE PTR [rbp+0x0],ah
   14000b788:	add    BYTE PTR [rax],al
   14000b78a:	add    BYTE PTR [rax],al
   14000b78c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000b790:	movsxd eax,DWORD PTR [rax]
   14000b792:	jb     0x14000b794
   14000b794:	outs   dx,DWORD PTR ds:[rsi]
   14000b795:	add    BYTE PTR [rbx+0x0],dh
   14000b798:	outs   dx,DWORD PTR ds:[rsi]
   14000b799:	add    BYTE PTR [rsi+0x0],ah
   14000b79c:	je     0x14000b79e
   14000b79e:	scas   al,BYTE PTR es:[rdi]
   14000b79f:	add    BYTE PTR [rax],ah
   14000b7a1:	add    BYTE PTR [rdi+0x0],dl
   14000b7a4:	imul   eax,DWORD PTR [rax],0x64006e
   14000b7aa:	outs   dx,DWORD PTR ds:[rsi]
   14000b7ab:	add    BYTE PTR [rdi+0x0],dh
   14000b7ae:	jae    0x14000b7b0
   14000b7b0:	scas   al,BYTE PTR es:[rdi]
   14000b7b1:	add    BYTE PTR [rax],ah
   14000b7b3:	add    BYTE PTR [rdi+0x0],cl
   14000b7b6:	jo     0x14000b7b8
   14000b7b8:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b7bc:	(bad)  
   14000b7bd:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b7c1:	add    BYTE PTR [rsi+0x0],ch
   14000b7c4:	add    BYTE PTR [eax],ah
   14000b7c7:	add    BYTE PTR [rbx+0x0],dl
   14000b7ca:	jns    0x14000b7cc
   14000b7cc:	jae    0x14000b7ce
   14000b7ce:	je     0x14000b7d0
   14000b7d0:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b7d4:	add    BYTE PTR [rax],al
   14000b7d6:	add    BYTE PTR [rax],al
   14000b7d8:	rex.RX add BYTE PTR [rcx],r10b
   14000b7db:	add    BYTE PTR [rcx],al
   14000b7dd:	add    BYTE PTR [rax+0x0],dl
   14000b7e0:	jb     0x14000b7e2
   14000b7e2:	outs   dx,DWORD PTR ds:[rsi]
   14000b7e3:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000b7e7:	add    BYTE PTR [rbx+0x0],ah
   14000b7ea:	je     0x14000b7ec
   14000b7ec:	push   rsi
   14000b7ed:	add    BYTE PTR [rbp+0x0],ah
   14000b7f0:	jb     0x14000b7f2
   14000b7f2:	jae    0x14000b7f4
   14000b7f4:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b7fa:	add    BYTE PTR [rax],al
   14000b7fc:	xor    DWORD PTR [rax],eax
   14000b7fe:	xor    BYTE PTR [rax],al
   14000b800:	add    BYTE PTR cs:[rax],dh
   14000b803:	add    BYTE PTR [rsi],ch
   14000b805:	add    BYTE PTR [rcx],dh
   14000b807:	add    BYTE PTR [rax],dh
   14000b809:	add    BYTE PTR [rdx],dh
   14000b80b:	add    BYTE PTR [rax+rax*1],dh
   14000b80e:	xor    BYTE PTR [rax],al
   14000b810:	add    BYTE PTR cs:[rcx],dh
   14000b813:	add    BYTE PTR [rdi],dh
   14000b815:	add    BYTE PTR [rcx],dh
   14000b817:	add    BYTE PTR [rax+rax*1],dh
   14000b81a:	add    BYTE PTR ss:[rax],al
   14000b81d:	add    BYTE PTR [rax],al
   14000b81f:	add    BYTE PTR [rax+rax*1+0x0],al
   14000b823:	add    BYTE PTR [rcx],al
   14000b825:	add    BYTE PTR [rsi+0x0],dl
   14000b828:	(bad)  
   14000b829:	add    BYTE PTR [rdx+0x0],dh
   14000b82c:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b830:	ins    BYTE PTR es:[rdi],dx
   14000b831:	add    BYTE PTR [rbp+0x0],ah
   14000b834:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b838:	data16 add BYTE PTR [rdi+0x0],ch
   14000b83c:	add    BYTE PTR [rax],al
   14000b83e:	add    BYTE PTR [rax],al
   14000b840:	and    al,0x0
   14000b842:	add    al,0x0
   14000b844:	add    BYTE PTR [rax],al
   14000b846:	push   rsp
   14000b847:	add    BYTE PTR [rdx+0x0],dh
   14000b84a:	(bad)  
   14000b84b:	add    BYTE PTR [rsi+0x0],ch
   14000b84e:	jae    0x14000b850
   14000b850:	ins    BYTE PTR es:[rdi],dx
   14000b851:	add    BYTE PTR [rcx+0x0],ah
   14000b854:	je     0x14000b856
   14000b856:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b85c:	add    BYTE PTR [rax],al
   14000b85e:	add    BYTE PTR [rax],al
   14000b860:	or     DWORD PTR [rax+rsi*4],eax
   14000b863:	add    al,0x0
   14000b865:	add    BYTE PTR [rax],al
   14000b867:	add    ch,cl
   14000b869:	dec    ch
   14000b86b:	dec    al
   14000b86d:	add    BYTE PTR [rax],al
   14000b86f:	add    BYTE PTR [rax],al
   14000b871:	add    BYTE PTR [rcx],al
   14000b873:	add    BYTE PTR [rax],al
   14000b875:	add    BYTE PTR [rax],al
   14000b877:	add    BYTE PTR [rcx],dl
   14000b879:	add    BYTE PTR [rax],al
   14000b87b:	add    BYTE PTR [rax],al
   14000b87d:	add    BYTE PTR [rax],al
   14000b87f:	add    BYTE PTR [rdx],al
   14000b881:	add    BYTE PTR [rax],al
   14000b883:	add    bl,bl
   14000b885:	adc    BYTE PTR [rcx],ah
   14000b887:	rex.RX mov ecx,0x615e0824
   14000b88d:	or     al,0x67
   14000b88f:	(bad)  
   14000b890:	sub    BYTE PTR [rdx-0x7b],al
   14000b893:	(bad)  
   14000b894:	out    0x74,eax
   14000b896:	int3   
   14000b897:	sbb    BYTE PTR [rcx+0x30],spl
   14000b89b:	rex.X
   14000b89c:	rex.WXB test al,0x20
   14000b89f:	and    ah,bh
   14000b8a1:	(bad)  
   14000b8a2:	mov    WORD PTR [rdx+0x0],?
	...
   14000b8b9:	add    BYTE PTR [rax],al
   14000b8bb:	add    BYTE PTR [rax+0xe000000],cl
   14000b8c1:	add    BYTE PTR [rax],al
   14000b8c3:	add    BYTE PTR [rax+0x8000000],bl
   14000b8c9:	add    BYTE PTR [rax],al
   14000b8cb:	add    BYTE PTR [rax+0xe000000],ah
   14000b8d1:	add    BYTE PTR [rax],al
   14000b8d3:	add    BYTE PTR [rax+0x8000000],dh
	...
   14000b8e1:	add    BYTE PTR [rax],al
   14000b8e3:	add    BYTE PTR [rax+0xc000000],bh
   14000b8e9:	add    BYTE PTR [rax],al
   14000b8eb:	add    BYTE PTR [rax],al
   14000b8ed:	add    BYTE PTR [rax],al
   14000b8ef:	add    BYTE PTR [rbp+0x0],cl
   14000b8f2:	push   rbp
   14000b8f3:	add    BYTE PTR [rcx+0x0],cl
	...
   14000b8fe:	add    BYTE PTR [rax],al
   14000b900:	adc    BYTE PTR [rax],al
   14000b902:	add    BYTE PTR [rax],al
   14000b904:	sbb    BYTE PTR [rax],al
   14000b906:	add    BYTE PTR [rax],al
   14000b908:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000b90c:	rex.WB add BYTE PTR [r8],al
	...
   14000b917:	add    BYTE PTR [rip+0x10000000],al        # 0x15000b91d
   14000b91d:	add    BYTE PTR [rax],al
   14000b91f:	add    BYTE PTR [rbp+0x0],ah
   14000b922:	outs   dx,BYTE PTR ds:[rsi]
   14000b923:	add    BYTE PTR [rip+0x53005500],ch        # 0x193010e29
   14000b929:	add    BYTE PTR [rax],al
   14000b92b:	add    BYTE PTR [rax],al
   14000b92d:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000c000 <.reloc>:
   14000c000:	add    BYTE PTR [rax+0x0],ah
   14000c003:	add    BYTE PTR [rax],bl
   14000c005:	add    BYTE PTR [rax],al
   14000c007:	add    BYTE PTR [rax],ah
   14000c009:	movabs ds:0xa358a350a338a328,eax
   14000c012:	shl    BYTE PTR [rbx+0xa3c8],0x0
   14000c019:	jo     0x14000c01b
   14000c01b:	add    BYTE PTR [rax],dl
   14000c01d:	add    BYTE PTR [rax],al
   14000c01f:	add    BYTE PTR [rax-0x575c5f5d],cl
   14000c025:	.byte 0xa3
   14000c026:	mov    al,0xa3
