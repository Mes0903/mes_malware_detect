
626a065b493acc0636e75406f146741896ec430ae30cb7cc2ebaf70cb6640afd.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x3ad05]        # 0x43bd20
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x3ad06]        # 0x43bd30
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x3ad09]        # 0x43bd40
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x3accc]        # 0x43bd10
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x3ab6f]        # 0x43bbc0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x3aca1]        # 0x43bd00
  40105f:	mov    DWORD PTR [rip+0x3ffa3],edx        # 0x441008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x42d7e8
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x42b620
  401081:	mov    rdx,QWORD PTR [rip+0x3abd8]        # 0x43bc60
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x3abbe]        # 0x43bc50
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x3ac24]        # 0x43bcc0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x3ab5b]        # 0x43bc00
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x42b200
  4010af:	mov    rax,QWORD PTR [rip+0x3aaba]        # 0x43bb70
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x42d7e8
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x2a3d9]        # 0x42b500
  401127:	call   0x42b4f0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x3ab85]        # 0x43bcf0
  40116b:	lea    r8,[rip+0x3fea6]        # 0x441018
  401172:	lea    rdx,[rip+0x3fea7]        # 0x441020
  401179:	lea    rcx,[rip+0x3fea8]        # 0x441028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x3fe78],eax        # 0x441000
  401188:	lea    rax,[rip+0x3fe71]        # 0x441000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x3ab15]        # 0x43bcb0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x42d800
  4011a3:	mov    DWORD PTR [rip+0x3fe67],eax        # 0x441010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x3ab3a]        # 0x43bd00
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x3aa3b]        # 0x43bc30
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x417b2]        # 0x4429b4
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x3aa17]        # 0x43bc40
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x3fdba],0x1        # 0x441004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x3a94c]        # 0x43bbb0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x42b810
  40127d:	lea    rcx,[rip+0x2ab2c]        # 0x42bdb0
  401284:	call   QWORD PTR [rip+0x41722]        # 0x4429ac
  40128a:	mov    rdx,QWORD PTR [rip+0x3a98f]        # 0x43bc20
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x42bcc0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x42d830
  4012a5:	call   0x42b600
  4012aa:	mov    rax,QWORD PTR [rip+0x3a90f]        # 0x43bbc0
  4012b1:	mov    QWORD PTR [rip+0x40c90],rax        # 0x441f48
  4012b8:	mov    rax,QWORD PTR [rip+0x3a931]        # 0x43bbf0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x40c29],rax        # 0x441f40
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2ccca],eax        # 0x42e000
  401336:	mov    r12d,DWORD PTR [rip+0x3fceb]        # 0x441028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x42d6b8
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x3fcc2]        # 0x441020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x42d610
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x42d6b8
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x42d6a8
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x3fc6a],rbp        # 0x441020
  4013b6:	call   0x42b1d0
  4013bb:	mov    rax,QWORD PTR [rip+0x3a81e]        # 0x43bbe0
  4013c2:	mov    rdx,QWORD PTR [rip+0x3fc4f]        # 0x441018
  4013c9:	mov    ecx,DWORD PTR [rip+0x3fc59]        # 0x441028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x3fc3c]        # 0x441018
  4013dc:	mov    rdx,QWORD PTR [rip+0x3fc3d]        # 0x441020
  4013e3:	call   0x42d9d0
  4013e8:	mov    ecx,DWORD PTR [rip+0x3fc1a]        # 0x441008
  4013ee:	mov    DWORD PTR [rip+0x3fc18],eax        # 0x44100c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x3fc02]        # 0x441004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x42d7d0
  40140b:	mov    eax,DWORD PTR [rip+0x3fbfb]        # 0x44100c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x3a809]        # 0x43bc40
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x42d7d8
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x3a81d]        # 0x43bc80
  401463:	mov    rcx,QWORD PTR [rip+0x3a806]        # 0x43bc70
  40146a:	call   0x42d7b0
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x414ab]        # 0x442944
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x3a7f9]        # 0x43bca0
  4014a7:	mov    rcx,QWORD PTR [rip+0x3a7e2]        # 0x43bc90
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x42d7b0
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x42d738
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x3a825]        # 0x43bd00
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x42b210
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x3a7f5]        # 0x43bd00
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x42b210
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rdi
  401531:	push   rsi
  401532:	push   rbx
  401533:	sub    rsp,0x30
  401537:	mov    rsi,QWORD PTR [rip+0x4151e]        # 0x442a5c
  40153e:	mov    rdi,rcx
  401541:	call   rsi
  401543:	lea    rdx,[rsp+0x28]
  401548:	xor    r8d,r8d
  40154b:	mov    rcx,rdi
  40154e:	mov    DWORD PTR [rax],0x0
  401554:	call   0x42d5e8
  401559:	mov    ebx,eax
  40155b:	call   rsi
  40155d:	mov    eax,DWORD PTR [rax]
  40155f:	test   eax,eax
  401561:	jne    0x401580
  401563:	cmp    QWORD PTR [rsp+0x28],rdi
  401568:	je     0x401580
  40156a:	test   ebx,ebx
  40156c:	mov    eax,0xffffffff
  401571:	cmovns eax,ebx
  401574:	add    rsp,0x30
  401578:	pop    rbx
  401579:	pop    rsi
  40157a:	pop    rdi
  40157b:	ret    
  40157c:	nop    DWORD PTR [rax+0x0]
  401580:	mov    eax,0xffffffff
  401585:	jmp    0x401574
  401587:	nop    WORD PTR [rax+rax*1+0x0]
  401590:	push   r13
  401592:	push   r12
  401594:	push   rbp
  401595:	push   rdi
  401596:	push   rsi
  401597:	push   rbx
  401598:	sub    rsp,0x28
  40159c:	lea    rdi,[rip+0x2da5d]        # 0x42f000
  4015a3:	mov    rbp,QWORD PTR [r8]
  4015a6:	mov    rbx,rcx
  4015a9:	mov    ecx,0x5
  4015ae:	mov    r13,rdx
  4015b1:	mov    rsi,rbx
  4015b4:	mov    r12,r8
  4015b7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4015b9:	je     0x401670
  4015bf:	lea    rdi,[rip+0x2da3f]        # 0x42f005
  4015c6:	mov    ecx,0x7
  4015cb:	mov    rsi,rbx
  4015ce:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4015d0:	je     0x4016a1
  4015d6:	lea    rdi,[rip+0x2da2f]        # 0x42f00c
  4015dd:	mov    ecx,0x5
  4015e2:	mov    rsi,rbx
  4015e5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4015e7:	je     0x4016c4
  4015ed:	lea    rdi,[rip+0x2da1d]        # 0x42f011
  4015f4:	mov    ecx,0x9
  4015f9:	mov    rsi,rbx
  4015fc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4015fe:	je     0x401750
  401604:	lea    rdi,[rip+0x2da0f]        # 0x42f01a
  40160b:	mov    ecx,0x9
  401610:	mov    rsi,rbx
  401613:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401615:	je     0x4016f0
  40161b:	lea    rdi,[rip+0x2da01]        # 0x42f023
  401622:	mov    ecx,0xf
  401627:	mov    rsi,rbx
  40162a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40162c:	je     0x401773
  401632:	lea    rdi,[rip+0x2d9f9]        # 0x42f032
  401639:	mov    ecx,0xe
  40163e:	mov    rsi,rbx
  401641:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401643:	je     0x401783
  401649:	lea    rdi,[rip+0x2d9f0]        # 0x42f040
  401650:	mov    ecx,0xe
  401655:	mov    rsi,rbx
  401658:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40165a:	jne    0x401694
  40165c:	mov    rcx,rdx
  40165f:	call   0x401530
  401664:	mov    DWORD PTR [rbp+0x30],eax
  401667:	jmp    0x40168c
  401669:	nop    DWORD PTR [rax+0x0]
  401670:	mov    rcx,rdx
  401673:	call   0x401530
  401678:	lea    edx,[rax-0x1]
  40167b:	cmp    edx,0xffff
  401681:	mov    edx,0xffffffff
  401686:	cmovae eax,edx
  401689:	mov    DWORD PTR [rbp+0x28],eax
  40168c:	test   eax,eax
  40168e:	js     0x401710
  401694:	add    rsp,0x28
  401698:	pop    rbx
  401699:	pop    rsi
  40169a:	pop    rdi
  40169b:	pop    rbp
  40169c:	pop    r12
  40169e:	pop    r13
  4016a0:	ret    
  4016a1:	mov    rcx,QWORD PTR [rbp+0x18]
  4016a5:	call   0x42d6f8
  4016aa:	mov    rcx,r13
  4016ad:	call   QWORD PTR [rip+0x413f9]        # 0x442aac
  4016b3:	mov    QWORD PTR [rbp+0x18],rax
  4016b7:	add    rsp,0x28
  4016bb:	pop    rbx
  4016bc:	pop    rsi
  4016bd:	pop    rdi
  4016be:	pop    rbp
  4016bf:	pop    r12
  4016c1:	pop    r13
  4016c3:	ret    
  4016c4:	mov    rcx,QWORD PTR [rbp+0x8]
  4016c8:	call   0x42d6f8
  4016cd:	mov    rcx,r13
  4016d0:	call   QWORD PTR [rip+0x413d6]        # 0x442aac
  4016d6:	mov    QWORD PTR [rbp+0x8],rax
  4016da:	add    rsp,0x28
  4016de:	pop    rbx
  4016df:	pop    rsi
  4016e0:	pop    rdi
  4016e1:	pop    rbp
  4016e2:	pop    r12
  4016e4:	pop    r13
  4016e6:	ret    
  4016e7:	nop    WORD PTR [rax+rax*1+0x0]
  4016f0:	mov    rcx,QWORD PTR [rbp+0x10]
  4016f4:	call   0x42d6f8
  4016f9:	mov    rcx,r13
  4016fc:	call   QWORD PTR [rip+0x413aa]        # 0x442aac
  401702:	mov    QWORD PTR [rbp+0x10],rax
  401706:	jmp    0x401694
  401708:	nop    DWORD PTR [rax+rax*1+0x0]
  401710:	mov    rax,QWORD PTR [r12+0x8]
  401715:	mov    rcx,QWORD PTR [rax]
  401718:	call   0x42d6f8
  40171d:	mov    rcx,QWORD PTR [r12+0x8]
  401722:	lea    rdx,[rip+0x2d927]        # 0x42f050
  401729:	mov    r9,rbx
  40172c:	mov    r8,r13
  40172f:	call   0x42d4a0
  401734:	test   eax,eax
  401736:	jns    0x401694
  40173c:	mov    rax,QWORD PTR [r12+0x8]
  401741:	lea    rbx,[rip+0x2d92c]        # 0x42f074
  401748:	mov    QWORD PTR [rax],rbx
  40174b:	jmp    0x401694
  401750:	mov    rcx,QWORD PTR [rbp+0x20]
  401754:	call   0x42d6f8
  401759:	mov    rcx,r13
  40175c:	call   QWORD PTR [rip+0x4134a]        # 0x442aac
  401762:	mov    QWORD PTR [rbp+0x20],rax
  401766:	add    rsp,0x28
  40176a:	pop    rbx
  40176b:	pop    rsi
  40176c:	pop    rdi
  40176d:	pop    rbp
  40176e:	pop    r12
  401770:	pop    r13
  401772:	ret    
  401773:	mov    rcx,rdx
  401776:	call   0x401530
  40177b:	mov    DWORD PTR [rbp+0x2c],eax
  40177e:	jmp    0x40168c
  401783:	mov    rcx,rdx
  401786:	call   0x401530
  40178b:	mov    DWORD PTR [rbp+0x34],eax
  40178e:	jmp    0x40168c
  401793:	nop    DWORD PTR [rax]
  401796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017a0:	push   rdi
  4017a1:	push   rsi
  4017a2:	push   rbx
  4017a3:	sub    rsp,0x30
  4017a7:	mov    QWORD PTR [rsp+0x20],rdx
  4017ac:	mov    rdi,rcx
  4017af:	lea    rdx,[rip+0x2d8db]        # 0x42f091
  4017b6:	lea    rcx,[rip+0x2d8db]        # 0x42f098
  4017bd:	mov    QWORD PTR [rsp+0x28],r8
  4017c2:	call   0x42d718
  4017c7:	test   rax,rax
  4017ca:	mov    rbx,rax
  4017cd:	je     0x401830
  4017cf:	mov    rax,QWORD PTR [rip+0x3a65a]        # 0x43be30
  4017d6:	mov    eax,DWORD PTR [rax]
  4017d8:	test   eax,eax
  4017da:	jne    0x401840
  4017dc:	lea    rsi,[rsp+0x20]
  4017e1:	lea    r8,[rip+0xfffffffffffffda8]        # 0x401590
  4017e8:	lea    rdx,[rip+0x2d92a]        # 0x42f119
  4017ef:	mov    rcx,rbx
  4017f2:	mov    r9,rsi
  4017f5:	call   0x406060
  4017fa:	mov    rcx,rbx
  4017fd:	call   0x42d660
  401802:	lea    r8,[rip+0xfffffffffffffd87]        # 0x401590
  401809:	mov    r9,rsi
  40180c:	mov    rdx,rdi
  40180f:	mov    rcx,rbx
  401812:	call   0x406060
  401817:	mov    rcx,rbx
  40181a:	mov    esi,eax
  40181c:	call   0x42d730
  401821:	mov    eax,esi
  401823:	add    rsp,0x30
  401827:	pop    rbx
  401828:	pop    rsi
  401829:	pop    rdi
  40182a:	ret    
  40182b:	nop    DWORD PTR [rax+rax*1+0x0]
  401830:	xor    esi,esi
  401832:	mov    eax,esi
  401834:	add    rsp,0x30
  401838:	pop    rbx
  401839:	pop    rsi
  40183a:	pop    rdi
  40183b:	ret    
  40183c:	nop    DWORD PTR [rax+0x0]
  401840:	lea    r9,[rip+0x2d851]        # 0x42f098
  401847:	lea    r8,[rip+0x2d89a]        # 0x42f0e8
  40184e:	lea    rcx,[rip+0x2d8bb]        # 0x42f110
  401855:	mov    edx,0x455
  40185a:	call   0x40d350
  40185f:	jmp    0x4017dc
  401864:	nop
  401865:	nop
  401866:	nop
  401867:	nop
  401868:	nop
  401869:	nop
  40186a:	nop
  40186b:	nop
  40186c:	nop
  40186d:	nop
  40186e:	nop
  40186f:	nop
  401870:	mov    DWORD PTR [rip+0x3f7c2],0x1        # 0x44103c
  40187a:	ret    
  40187b:	nop    DWORD PTR [rax+rax*1+0x0]
  401880:	mov    rax,QWORD PTR [rdx]
  401883:	test   rax,rax
  401886:	je     0x401979
  40188c:	cmp    DWORD PTR [rax+0x148],0x5
  401893:	je     0x401979
  401899:	cmp    BYTE PTR [rdx+0x8],0x0
  40189d:	jne    0x401913
  40189f:	cmp    BYTE PTR [rdx+0x9],0x0
  4018a3:	je     0x401990
  4018a9:	mov    r8,QWORD PTR [rax+0x10]
  4018ad:	cmp    QWORD PTR [rcx+0x410],r8
  4018b4:	jb     0x401980
  4018ba:	mov    r9d,DWORD PTR [rcx+0x208]
  4018c1:	test   r9d,r9d
  4018c4:	je     0x4018fc
  4018c6:	cmp    r8,QWORD PTR [rcx+0x210]
  4018cd:	je     0x401979
  4018d3:	lea    rdx,[rcx+0x218]
  4018da:	xor    eax,eax
  4018dc:	jmp    0x4018ee
  4018de:	xchg   ax,ax
  4018e0:	add    rdx,0x8
  4018e4:	cmp    r8,QWORD PTR [rdx-0x8]
  4018e8:	je     0x401979
  4018ee:	add    eax,0x1
  4018f1:	cmp    eax,r9d
  4018f4:	jne    0x4018e0
  4018f6:	cmp    r9d,0x3f
  4018fa:	ja     0x401979
  4018fc:	mov    eax,r9d
  4018ff:	add    r9d,0x1
  401903:	mov    QWORD PTR [rcx+rax*8+0x210],r8
  40190b:	mov    DWORD PTR [rcx+0x208],r9d
  401912:	ret    
  401913:	mov    r8,QWORD PTR [rax+0x10]
  401917:	cmp    r8,QWORD PTR [rcx+0x410]
  40191e:	movzx  r10d,BYTE PTR [rdx+0x9]
  401923:	jbe    0x40192c
  401925:	mov    QWORD PTR [rcx+0x410],r8
  40192c:	mov    r9d,DWORD PTR [rcx]
  40192f:	test   r9d,r9d
  401932:	je     0x40195a
  401934:	cmp    r8,QWORD PTR [rcx+0x8]
  401938:	je     0x401970
  40193a:	lea    rdx,[rcx+0x10]
  40193e:	xor    eax,eax
  401940:	jmp    0x40194c
  401942:	add    rdx,0x8
  401946:	cmp    r8,QWORD PTR [rdx-0x8]
  40194a:	je     0x401970
  40194c:	add    eax,0x1
  40194f:	cmp    eax,r9d
  401952:	jne    0x401942
  401954:	cmp    r9d,0x3f
  401958:	ja     0x401970
  40195a:	mov    eax,r9d
  40195d:	add    r9d,0x1
  401961:	mov    QWORD PTR [rcx+rax*8+0x8],r8
  401966:	mov    DWORD PTR [rcx],r9d
  401969:	nop    DWORD PTR [rax+0x0]
  401970:	test   r10b,r10b
  401973:	jne    0x4018ba
  401979:	repz ret 
  40197b:	nop    DWORD PTR [rax+rax*1+0x0]
  401980:	mov    QWORD PTR [rcx+0x410],r8
  401987:	jmp    0x4018ba
  40198c:	nop    DWORD PTR [rax+0x0]
  401990:	repz ret 
  401992:	nop    DWORD PTR [rax+0x0]
  401996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4019a0:	push   rbp
  4019a1:	push   rdi
  4019a2:	push   rsi
  4019a3:	push   rbx
  4019a4:	sub    rsp,0x28
  4019a8:	mov    rax,QWORD PTR [rip+0x3a3e1]        # 0x43bd90
  4019af:	lea    rcx,[rip+0x2d78c]        # 0x42f142
  4019b6:	mov    DWORD PTR [rax],0x0
  4019bc:	call   0x42d6e0
  4019c1:	mov    rcx,rax
  4019c4:	call   0x40d460
  4019c9:	mov    rcx,QWORD PTR [rip+0x3f660]        # 0x441030
  4019d0:	mov    eax,0x1
  4019d5:	test   rcx,rcx
  4019d8:	je     0x401a86
  4019de:	mov    r8d,0x1a4
  4019e4:	mov    edx,0x109
  4019e9:	call   0x42d5c0
  4019ee:	mov    esi,eax
  4019f0:	xor    eax,eax
  4019f2:	test   esi,esi
  4019f4:	js     0x401a86
  4019fa:	mov    rbx,QWORD PTR [rip+0x41023]        # 0x442a24
  401a01:	call   rbx
  401a03:	lea    rcx,[rax+0x30]
  401a07:	call   0x42d728
  401a0c:	call   rbx
  401a0e:	lea    rcx,[rax+0x60]
  401a12:	call   0x42d728
  401a17:	mov    rdi,QWORD PTR [rip+0x4104e]        # 0x442a6c
  401a1e:	mov    rbp,QWORD PTR [rip+0x41037]        # 0x442a5c
  401a25:	call   rbx
  401a27:	lea    rcx,[rax+0x30]
  401a2b:	call   rdi
  401a2d:	mov    ecx,esi
  401a2f:	mov    edx,eax
  401a31:	call   0x42d5b8
  401a36:	test   eax,eax
  401a38:	jns    0x401a41
  401a3a:	call   rbp
  401a3c:	cmp    DWORD PTR [rax],0x4
  401a3f:	je     0x401a25
  401a41:	mov    rbp,QWORD PTR [rip+0x41014]        # 0x442a5c
  401a48:	call   rbx
  401a4a:	lea    rcx,[rax+0x60]
  401a4e:	call   rdi
  401a50:	mov    ecx,esi
  401a52:	mov    edx,eax
  401a54:	call   0x42d5b8
  401a59:	test   eax,eax
  401a5b:	jns    0x401a64
  401a5d:	call   rbp
  401a5f:	cmp    DWORD PTR [rax],0x4
  401a62:	je     0x401a48
  401a64:	mov    ecx,esi
  401a66:	call   0x42d5b0
  401a6b:	call   rbx
  401a6d:	lea    rcx,[rax+0x30]
  401a71:	call   0x42d728
  401a76:	call   rbx
  401a78:	lea    rcx,[rax+0x60]
  401a7c:	call   0x42d728
  401a81:	mov    eax,0x1
  401a86:	add    rsp,0x28
  401a8a:	pop    rbx
  401a8b:	pop    rsi
  401a8c:	pop    rdi
  401a8d:	pop    rbp
  401a8e:	ret    
  401a8f:	nop
  401a90:	push   r15
  401a92:	push   r14
  401a94:	push   r13
  401a96:	push   r12
  401a98:	push   rbp
  401a99:	push   rdi
  401a9a:	push   rsi
  401a9b:	push   rbx
  401a9c:	sub    rsp,0x488
  401aa3:	mov    r14,QWORD PTR [rip+0x412e2]        # 0x442d8c
  401aaa:	mov    r12,QWORD PTR [rcx+0x70]
  401aae:	lea    rax,[rsp+0x40]
  401ab3:	mov    r13,QWORD PTR [rcx+0x78]
  401ab7:	lea    rbx,[rsp+0x60]
  401abc:	mov    rbp,rcx
  401abf:	mov    QWORD PTR [rsp+0x38],rax
  401ac4:	mov    eax,DWORD PTR [rip+0x3f572]        # 0x44103c
  401aca:	test   eax,eax
  401acc:	jne    0x401cf0
  401ad2:	cmp    r12,r13
  401ad5:	mov    DWORD PTR [rsp+0x268],0x0
  401ae0:	mov    QWORD PTR [rsp+0x68],r12
  401ae5:	mov    DWORD PTR [rsp+0x60],0x1
  401aed:	je     0x401afc
  401aef:	mov    QWORD PTR [rsp+0x70],r13
  401af4:	mov    DWORD PTR [rsp+0x60],0x2
  401afc:	mov    rdx,QWORD PTR [rbp+0xd0]
  401b03:	lea    rdi,[rbp+0xd0]
  401b0a:	cmp    r13,r12
  401b0d:	mov    rax,r12
  401b10:	cmovae rax,r13
  401b14:	cmp    rdx,rdi
  401b17:	mov    QWORD PTR [rsp+0x470],rax
  401b1f:	je     0x401b3e
  401b21:	mov    rsi,rdx
  401b24:	sub    rsi,0x10
  401b28:	je     0x401b3e
  401b2a:	mov    rdx,rsi
  401b2d:	mov    rcx,rbx
  401b30:	call   0x401880
  401b35:	mov    rdx,QWORD PTR [rsi+0x10]
  401b39:	cmp    rdx,rdi
  401b3c:	jne    0x401b21
  401b3e:	mov    rdx,QWORD PTR [rbp+0x98]
  401b45:	lea    rsi,[rbp+0x98]
  401b4c:	cmp    rdx,rsi
  401b4f:	je     0x401b6b
  401b51:	sub    rdx,0x10
  401b55:	mov    r15,rdx
  401b58:	je     0x401b6b
  401b5a:	mov    rcx,rbx
  401b5d:	call   0x401880
  401b62:	mov    rdx,QWORD PTR [r15+0x10]
  401b66:	cmp    rdx,rsi
  401b69:	jne    0x401b51
  401b6b:	mov    eax,DWORD PTR [rsp+0x470]
  401b72:	xor    r9d,r9d
  401b75:	mov    QWORD PTR [rsp+0x20],0x0
  401b7e:	lea    r8,[rbx+0x208]
  401b85:	mov    rdx,rbx
  401b88:	lea    ecx,[rax+0x1]
  401b8b:	call   r14
  401b8e:	mov    r9d,DWORD PTR [rip+0x3f4a7]        # 0x44103c
  401b95:	test   r9d,r9d
  401b98:	jne    0x401cf0
  401b9e:	mov    ecx,DWORD PTR [rip+0x3f494]        # 0x441038
  401ba4:	test   ecx,ecx
  401ba6:	jne    0x401d32
  401bac:	mov    rdx,rbx
  401baf:	mov    rcx,r13
  401bb2:	call   0x42afb8
  401bb7:	test   eax,eax
  401bb9:	jne    0x401c50
  401bbf:	mov    rdx,rbx
  401bc2:	mov    rcx,r12
  401bc5:	call   0x42afb8
  401bca:	test   eax,eax
  401bcc:	jne    0x401cd7
  401bd2:	lea    rsi,[rbx+0x208]
  401bd9:	mov    rdx,rbx
  401bdc:	mov    rcx,rbp
  401bdf:	mov    r8,rsi
  401be2:	call   0x4033a0
  401be7:	mov    rdx,rbx
  401bea:	mov    r8,rsi
  401bed:	mov    rcx,rbp
  401bf0:	call   0x402680
  401bf5:	mov    rax,QWORD PTR [rbp+0xb8]
  401bfc:	lea    rdx,[rbp+0xb8]
  401c03:	cmp    rax,rdx
  401c06:	je     0x401ac4
  401c0c:	mov    rdx,rax
  401c0f:	sub    rdx,0x10
  401c13:	je     0x401ac4
  401c19:	mov    rcx,QWORD PTR [rbp+0xa8]
  401c20:	lea    r8,[rbp+0xa8]
  401c27:	cmp    rcx,r8
  401c2a:	je     0x401ac4
  401c30:	cmp    rcx,0x10
  401c34:	je     0x401ac4
  401c3a:	cmp    DWORD PTR [rax+0x18],0x0
  401c3e:	je     0x401d46
  401c44:	jmp    0x401c44
  401c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c50:	xor    r9d,r9d
  401c53:	mov    rdx,QWORD PTR [rsp+0x38]
  401c58:	mov    r8d,0x20
  401c5e:	mov    rcx,r13
  401c61:	call   QWORD PTR [rip+0x4111d]        # 0x442d84
  401c67:	mov    edx,DWORD PTR [rbp+0x40]
  401c6a:	test   edx,edx
  401c6c:	jne    0x401d20
  401c72:	lea    rcx,[rbp+0x38]
  401c76:	lea    rsi,[rbp+0x48]
  401c7a:	call   0x424920
  401c7f:	mov    r15,QWORD PTR [rbp+0x88]
  401c86:	mov    rcx,rsi
  401c89:	mov    QWORD PTR [rbp+0x88],0x0
  401c94:	call   QWORD PTR [rip+0x40cca]        # 0x442964
  401c9a:	test   r15,r15
  401c9d:	je     0x401bbf
  401ca3:	mov    rsi,QWORD PTR [r15]
  401ca6:	mov    rcx,r15
  401ca9:	mov    QWORD PTR [r15],0x0
  401cb0:	call   QWORD PTR [r15+0x8]
  401cb4:	mov    rcx,r15
  401cb7:	call   0x42d6f8
  401cbc:	test   rsi,rsi
  401cbf:	mov    r15,rsi
  401cc2:	jne    0x401ca3
  401cc4:	mov    rdx,rbx
  401cc7:	mov    rcx,r12
  401cca:	call   0x42afb8
  401ccf:	test   eax,eax
  401cd1:	je     0x401bd2
  401cd7:	mov    rdx,r12
  401cda:	mov    rcx,rbp
  401cdd:	call   0x4030d0
  401ce2:	jmp    0x401bd2
  401ce7:	nop    WORD PTR [rax+rax*1+0x0]
  401cf0:	mov    rax,QWORD PTR [rip+0x3a139]        # 0x43be30
  401cf7:	mov    r8d,DWORD PTR [rax]
  401cfa:	test   r8d,r8d
  401cfd:	jne    0x401d99
  401d03:	add    rsp,0x488
  401d0a:	pop    rbx
  401d0b:	pop    rsi
  401d0c:	pop    rdi
  401d0d:	pop    rbp
  401d0e:	pop    r12
  401d10:	pop    r13
  401d12:	pop    r14
  401d14:	pop    r15
  401d16:	ret    
  401d17:	nop    WORD PTR [rax+rax*1+0x0]
  401d20:	lea    rsi,[rbp+0x48]
  401d24:	mov    rcx,rsi
  401d27:	call   QWORD PTR [rip+0x40bc7]        # 0x4428f4
  401d2d:	jmp    0x401c7f
  401d32:	mov    DWORD PTR [rip+0x3f2fc],0x0        # 0x441038
  401d3c:	call   0x4019a0
  401d41:	jmp    0x401bac
  401d46:	mov    r8,QWORD PTR [rax+0x8]
  401d4a:	mov    DWORD PTR [rax+0x18],0x1
  401d51:	mov    rcx,QWORD PTR [rax]
  401d54:	test   r8,r8
  401d57:	je     0x401d5c
  401d59:	mov    QWORD PTR [r8],rcx
  401d5c:	test   rcx,rcx
  401d5f:	je     0x401d65
  401d61:	mov    QWORD PTR [rcx+0x8],r8
  401d65:	mov    QWORD PTR [rax+0x8],0x0
  401d6d:	mov    QWORD PTR [rax],0x0
  401d74:	mov    rcx,QWORD PTR [rbp+0xd8]
  401d7b:	mov    QWORD PTR [rcx],rax
  401d7e:	mov    QWORD PTR [rax+0x8],rcx
  401d82:	mov    rcx,rbp
  401d85:	mov    QWORD PTR [rax],rdi
  401d88:	mov    QWORD PTR [rbp+0xd8],rax
  401d8f:	call   0x403af0
  401d94:	jmp    0x401ac4
  401d99:	lea    r8,[rip+0x2d3aa]        # 0x42f14a
  401da0:	lea    rcx,[rip+0x2d3b7]        # 0x42f15e
  401da7:	mov    edx,0x1646
  401dac:	call   0x40d350
  401db1:	jmp    0x401d03
  401db6:	nop
  401db7:	nop
  401db8:	nop
  401db9:	nop
  401dba:	nop
  401dbb:	nop
  401dbc:	nop
  401dbd:	nop
  401dbe:	nop
  401dbf:	nop
  401dc0:	push   rbp
  401dc1:	push   rdi
  401dc2:	push   rsi
  401dc3:	push   rbx
  401dc4:	sub    rsp,0x128
  401dcb:	lea    rdi,[rsp+0x20]
  401dd0:	mov    rsi,rcx
  401dd3:	mov    ecx,0x1
  401dd8:	mov    ebp,edx
  401dda:	call   0x40ff40
  401ddf:	mov    edx,0x100
  401de4:	mov    rbx,rax
  401de7:	mov    rcx,rdi
  401dea:	call   QWORD PTR [rip+0x40f44]        # 0x442d34
  401df0:	test   eax,eax
  401df2:	js     0x401f90
  401df8:	mov    rdx,QWORD PTR [rsi+0x10]
  401dfc:	mov    rcx,rbx
  401dff:	call   0x40f5e0
  401e04:	test   al,al
  401e06:	je     0x401f75
  401e0c:	mov    rdx,QWORD PTR [rsi+0x8]
  401e10:	mov    rcx,rbx
  401e13:	call   0x40f640
  401e18:	test   al,al
  401e1a:	je     0x401f75
  401e20:	lea    rdx,[rip+0x2d449]        # 0x42f270
  401e27:	mov    rcx,rbx
  401e2a:	call   0x40f680
  401e2f:	test   al,al
  401e31:	je     0x401f75
  401e37:	mov    rdx,rdi
  401e3a:	mov    rcx,rbx
  401e3d:	call   0x40f660
  401e42:	test   al,al
  401e44:	je     0x401f75
  401e4a:	lea    rdx,[rip+0x2d427]        # 0x42f278
  401e51:	mov    rcx,rbx
  401e54:	call   0x40f6c0
  401e59:	test   al,al
  401e5b:	je     0x401f75
  401e61:	mov    rdx,QWORD PTR [rsi+0x18]
  401e65:	mov    rcx,rbx
  401e68:	call   0x40f6a0
  401e6d:	test   al,al
  401e6f:	je     0x401f75
  401e75:	lea    rdx,[rip+0x2d408]        # 0x42f284
  401e7c:	mov    rcx,rbx
  401e7f:	call   0x40f6e0
  401e84:	test   al,al
  401e86:	je     0x401f75
  401e8c:	lea    rdx,[rip+0x2d3f7]        # 0x42f28a
  401e93:	mov    rcx,rbx
  401e96:	call   0x40f700
  401e9b:	test   al,al
  401e9d:	je     0x401f75
  401ea3:	test   ebp,ebp
  401ea5:	jle    0x401eab
  401ea7:	mov    WORD PTR [rbx+0xc],bp
  401eab:	mov    rdx,QWORD PTR [rsi+0x20]
  401eaf:	test   rdx,rdx
  401eb2:	je     0x401ebd
  401eb4:	cmp    BYTE PTR [rdx],0x0
  401eb7:	jne    0x401f60
  401ebd:	xor    ecx,ecx
  401ebf:	call   0x410430
  401ec4:	mov    edx,0x200
  401ec9:	mov    rbp,rax
  401ecc:	mov    rcx,rax
  401ecf:	call   0x412bc0
  401ed4:	mov    r8,QWORD PTR [rbp+0x0]
  401ed8:	mov    rdx,rbx
  401edb:	mov    rcx,rax
  401ede:	mov    rdi,rax
  401ee1:	call   0x407230
  401ee6:	mov    rcx,rbx
  401ee9:	mov    rbp,rax
  401eec:	call   0x410150
  401ef1:	test   rbp,rbp
  401ef4:	je     0x401fb0
  401efa:	mov    rdx,rbp
  401efd:	mov    rcx,rdi
  401f00:	call   0x40f720
  401f05:	test   eax,eax
  401f07:	js     0x401fb0
  401f0d:	mov    rcx,rbp
  401f10:	mov    rbx,rdi
  401f13:	call   0x410150
  401f18:	mov    rdx,QWORD PTR [rsi+0x20]
  401f1c:	test   rdx,rdx
  401f1f:	je     0x401f7f
  401f21:	cmp    BYTE PTR [rdx],0x0
  401f24:	je     0x401f7f
  401f26:	mov    rcx,QWORD PTR [rdi+0x48]
  401f2a:	call   QWORD PTR [rip+0x40b84]        # 0x442ab4
  401f30:	test   eax,eax
  401f32:	je     0x401f7f
  401f34:	call   QWORD PTR [rip+0x40aea]        # 0x442a24
  401f3a:	lea    rcx,[rip+0x2d37f]        # 0x42f2c0
  401f41:	lea    r9,[rax+0x60]
  401f45:	mov    r8d,0x19
  401f4b:	mov    edx,0x1
  401f50:	xor    ebx,ebx
  401f52:	call   0x42d6e8
  401f57:	jmp    0x401f7f
  401f59:	nop    DWORD PTR [rax+0x0]
  401f60:	lea    rcx,[rbx+0xc0]
  401f67:	call   0x41d6f0
  401f6c:	test   rax,rax
  401f6f:	jne    0x401ebd
  401f75:	mov    rcx,rbx
  401f78:	xor    ebx,ebx
  401f7a:	call   0x410150
  401f7f:	mov    rax,rbx
  401f82:	add    rsp,0x128
  401f89:	pop    rbx
  401f8a:	pop    rsi
  401f8b:	pop    rdi
  401f8c:	pop    rbp
  401f8d:	ret    
  401f8e:	xchg   ax,ax
  401f90:	lea    rdx,[rip+0x2d2d9]        # 0x42f270
  401f97:	mov    r8d,0x100
  401f9d:	mov    rcx,rdi
  401fa0:	call   0x4248b0
  401fa5:	jmp    0x401df8
  401faa:	nop    WORD PTR [rax+rax*1+0x0]
  401fb0:	test   rdi,rdi
  401fb3:	je     0x401fc9
  401fb5:	mov    rbx,QWORD PTR [rdi+0x28]
  401fb9:	mov    rcx,rdi
  401fbc:	call   0x412a40
  401fc1:	mov    rcx,rbx
  401fc4:	call   0x410490
  401fc9:	mov    rcx,rbp
  401fcc:	call   0x410150
  401fd1:	mov    rbx,QWORD PTR [rsi+0x18]
  401fd5:	call   QWORD PTR [rip+0x40a49]        # 0x442a24
  401fdb:	lea    rdx,[rip+0x2d2b6]        # 0x42f298
  401fe2:	lea    rcx,[rax+0x60]
  401fe6:	mov    r8,rbx
  401fe9:	xor    ebx,ebx
  401feb:	call   0x42d710
  401ff0:	jmp    0x401f7f
  401ff2:	nop    DWORD PTR [rax+0x0]
  401ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402000:	push   rsi
  402001:	push   rbx
  402002:	sub    rsp,0x28
  402006:	mov    rbx,QWORD PTR [rcx+0x18]
  40200a:	mov    rax,QWORD PTR [rcx+0x10]
  40200e:	xor    ecx,ecx
  402010:	mov    rsi,QWORD PTR [rbx+0x30]
  402014:	add    DWORD PTR [rax+0xec],0x1
  40201b:	mov    BYTE PTR [rbx+0x20],0x0
  40201f:	call   QWORD PTR [rip+0x40a97]        # 0x442abc
  402025:	test   rsi,rsi
  402028:	mov    QWORD PTR [rbx+0x28],rax
  40202c:	je     0x40203d
  40202e:	mov    BYTE PTR [rbx+0x8],0x1
  402032:	mov    BYTE PTR [rsi+0x8],0x1
  402036:	mov    DWORD PTR [rsi+0x28],0x1
  40203d:	add    rsp,0x28
  402041:	pop    rbx
  402042:	pop    rsi
  402043:	ret    
  402044:	xchg   ax,ax
  402046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402050:	push   rdi
  402051:	push   rsi
  402052:	push   rbx
  402053:	sub    rsp,0x20
  402057:	mov    rsi,QWORD PTR [rcx+0x10]
  40205b:	mov    edx,DWORD PTR [rcx+0x20]
  40205e:	mov    rdi,QWORD PTR [rcx+0x18]
  402062:	mov    rbx,rcx
  402065:	mov    rcx,rsi
  402068:	call   0x401dc0
  40206d:	test   rax,rax
  402070:	mov    QWORD PTR [rdi],rax
  402073:	je     0x402100
  402079:	cmp    WORD PTR [rax],0x700
  40207e:	jbe    0x4020b1
  402080:	mov    rdx,QWORD PTR [rdi+0x30]
  402084:	test   rdx,rdx
  402087:	je     0x4020e0
  402089:	mov    rcx,rsi
  40208c:	call   0x403630
  402091:	test   al,al
  402093:	jne    0x4020e0
  402095:	lea    r8,[rip+0x374]        # 0x402410
  40209c:	mov    rdx,rbx
  40209f:	mov    rcx,rsi
  4020a2:	call   0x4041f0
  4020a7:	xor    eax,eax
  4020a9:	add    rsp,0x20
  4020ad:	pop    rbx
  4020ae:	pop    rsi
  4020af:	pop    rdi
  4020b0:	ret    
  4020b1:	mov    rax,QWORD PTR [rip+0x39d78]        # 0x43be30
  4020b8:	mov    eax,DWORD PTR [rax]
  4020ba:	test   eax,eax
  4020bc:	je     0x402095
  4020be:	lea    r8,[rip+0x2d253]        # 0x42f318
  4020c5:	lea    rcx,[rip+0x2d23e]        # 0x42f30a
  4020cc:	mov    edx,0x19f2
  4020d1:	call   0x40d350
  4020d6:	jmp    0x402095
  4020d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4020e0:	lea    r8,[rip+0xffffffffffffff19]        # 0x402000
  4020e7:	mov    rdx,rbx
  4020ea:	mov    rcx,rsi
  4020ed:	call   0x4041f0
  4020f2:	xor    eax,eax
  4020f4:	add    rsp,0x20
  4020f8:	pop    rbx
  4020f9:	pop    rsi
  4020fa:	pop    rdi
  4020fb:	ret    
  4020fc:	nop    DWORD PTR [rax+0x0]
  402100:	mov    rax,QWORD PTR [rip+0x39d29]        # 0x43be30
  402107:	mov    edx,DWORD PTR [rax]
  402109:	test   edx,edx
  40210b:	je     0x402095
  40210d:	lea    r8,[rip+0x2d1cc]        # 0x42f2e0
  402114:	lea    rcx,[rip+0x2d1ef]        # 0x42f30a
  40211b:	mov    edx,0x19b2
  402120:	call   0x40d350
  402125:	jmp    0x402095
  40212a:	nop    WORD PTR [rax+rax*1+0x0]
  402130:	push   rdi
  402131:	push   rsi
  402132:	push   rbx
  402133:	sub    rsp,0x20
  402137:	cmp    QWORD PTR [rdx+0x30],0x0
  40213c:	mov    rdi,rcx
  40213f:	mov    rbx,rdx
  402142:	mov    rsi,r8
  402145:	je     0x402181
  402147:	lea    rdx,[rip+0x2d1bc]        # 0x42f30a
  40214e:	lea    rcx,[rip+0x2d1ea]        # 0x42f33f
  402155:	mov    r8d,0x86
  40215b:	call   0x42d350
  402160:	mov    rax,QWORD PTR [rbx+0x30]
  402164:	test   rax,rax
  402167:	je     0x402181
  402169:	mov    QWORD PTR [rax+0x30],0x0
  402171:	mov    QWORD PTR [rbx+0x30],rsi
  402175:	mov    QWORD PTR [rsi+0x30],rbx
  402179:	add    rsp,0x20
  40217d:	pop    rbx
  40217e:	pop    rsi
  40217f:	pop    rdi
  402180:	ret    
  402181:	mov    rax,QWORD PTR [rbx+0x18]
  402185:	mov    rdx,QWORD PTR [rbx+0x10]
  402189:	test   rax,rax
  40218c:	je     0x402191
  40218e:	mov    QWORD PTR [rax],rdx
  402191:	test   rdx,rdx
  402194:	je     0x40219a
  402196:	mov    QWORD PTR [rdx+0x8],rax
  40219a:	mov    QWORD PTR [rbx+0x18],0x0
  4021a2:	mov    QWORD PTR [rbx+0x10],0x0
  4021aa:	lea    rax,[rbx+0x10]
  4021ae:	mov    rdx,QWORD PTR [rdi+0xa0]
  4021b5:	mov    QWORD PTR [rdx],rax
  4021b8:	mov    QWORD PTR [rbx+0x18],rdx
  4021bc:	lea    rdx,[rdi+0x98]
  4021c3:	mov    QWORD PTR [rbx+0x10],rdx
  4021c7:	mov    QWORD PTR [rdi+0xa0],rax
  4021ce:	mov    QWORD PTR [rbx+0x30],rsi
  4021d2:	mov    QWORD PTR [rsi+0x30],rbx
  4021d6:	add    rsp,0x20
  4021da:	pop    rbx
  4021db:	pop    rsi
  4021dc:	pop    rdi
  4021dd:	ret    
  4021de:	xchg   ax,ax
  4021e0:	mov    rax,QWORD PTR [rdx+0x30]
  4021e4:	test   rax,rax
  4021e7:	je     0x402246
  4021e9:	mov    QWORD PTR [rax+0x30],0x0
  4021f1:	mov    r8,QWORD PTR [rdx+0x18]
  4021f5:	mov    QWORD PTR [rdx+0x30],0x0
  4021fd:	mov    rax,QWORD PTR [rdx+0x10]
  402201:	test   r8,r8
  402204:	je     0x402209
  402206:	mov    QWORD PTR [r8],rax
  402209:	test   rax,rax
  40220c:	je     0x402212
  40220e:	mov    QWORD PTR [rax+0x8],r8
  402212:	mov    QWORD PTR [rdx+0x18],0x0
  40221a:	mov    QWORD PTR [rdx+0x10],0x0
  402222:	lea    rax,[rdx+0x10]
  402226:	mov    r8,QWORD PTR [rcx+0xb0]
  40222d:	mov    QWORD PTR [r8],rax
  402230:	mov    QWORD PTR [rdx+0x18],r8
  402234:	lea    r8,[rcx+0xa8]
  40223b:	mov    QWORD PTR [rdx+0x10],r8
  40223f:	mov    QWORD PTR [rcx+0xb0],rax
  402246:	mov    BYTE PTR [rdx+0x9],0x0
  40224a:	ret    
  40224b:	nop    DWORD PTR [rax+rax*1+0x0]
  402250:	push   rbp
  402251:	push   rdi
  402252:	push   rsi
  402253:	push   rbx
  402254:	sub    rsp,0x28
  402258:	mov    rsi,QWORD PTR [rdx]
  40225b:	mov    rdi,rcx
  40225e:	mov    rbx,rdx
  402261:	test   rsi,rsi
  402264:	je     0x402292
  402266:	cmp    DWORD PTR [rsi+0x148],0x5
  40226d:	je     0x402277
  40226f:	mov    rcx,rsi
  402272:	call   0x413250
  402277:	mov    rbp,QWORD PTR [rsi+0x28]
  40227b:	mov    rcx,rsi
  40227e:	call   0x412a40
  402283:	mov    rcx,rbp
  402286:	call   0x410490
  40228b:	mov    QWORD PTR [rbx],0x0
  402292:	mov    rsi,QWORD PTR [rbx+0x30]
  402296:	test   rsi,rsi
  402299:	je     0x4022b1
  40229b:	mov    rdx,rbx
  40229e:	mov    rcx,rdi
  4022a1:	call   0x4021e0
  4022a6:	mov    rdx,rsi
  4022a9:	mov    rcx,rdi
  4022ac:	call   0x402f80
  4022b1:	mov    rax,QWORD PTR [rbx+0x10]
  4022b5:	mov    rdx,QWORD PTR [rbx+0x18]
  4022b9:	test   rax,rax
  4022bc:	setne  cl
  4022bf:	test   rdx,rdx
  4022c2:	setne  r8b
  4022c6:	jne    0x4022cc
  4022c8:	test   cl,cl
  4022ca:	je     0x4022e3
  4022cc:	sub    DWORD PTR [rdi+0x90],0x1
  4022d3:	test   r8b,r8b
  4022d6:	je     0x4022db
  4022d8:	mov    QWORD PTR [rdx],rax
  4022db:	test   cl,cl
  4022dd:	je     0x4022e3
  4022df:	mov    QWORD PTR [rax+0x8],rdx
  4022e3:	mov    rcx,rbx
  4022e6:	add    rsp,0x28
  4022ea:	pop    rbx
  4022eb:	pop    rsi
  4022ec:	pop    rdi
  4022ed:	pop    rbp
  4022ee:	jmp    0x42d6f8
  4022f3:	nop    DWORD PTR [rax]
  4022f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402300:	push   rbp
  402301:	push   rdi
  402302:	push   rsi
  402303:	push   rbx
  402304:	sub    rsp,0x28
  402308:	mov    rbp,QWORD PTR [rdx+0x30]
  40230c:	mov    rsi,QWORD PTR [rdx]
  40230f:	mov    rdi,rcx
  402312:	mov    rbx,rdx
  402315:	test   rbp,rbp
  402318:	je     0x40232a
  40231a:	call   0x4021e0
  40231f:	mov    rdx,rbp
  402322:	mov    rcx,rdi
  402325:	call   0x402f80
  40232a:	mov    rcx,rsi
  40232d:	call   0x424260
  402332:	mov    edx,0x1
  402337:	mov    rcx,rsi
  40233a:	call   0x423970
  40233f:	cmp    eax,0x1
  402342:	je     0x402360
  402344:	mov    rdx,rbx
  402347:	mov    rcx,rdi
  40234a:	add    rsp,0x28
  40234e:	pop    rbx
  40234f:	pop    rsi
  402350:	pop    rdi
  402351:	pop    rbp
  402352:	jmp    0x402250
  402357:	nop    WORD PTR [rax+rax*1+0x0]
  402360:	mov    BYTE PTR [rsi+0xf1],0x6
  402367:	mov    rcx,rsi
  40236a:	call   0x424270
  40236f:	test   eax,eax
  402371:	js     0x402344
  402373:	mov    edx,0x3
  402378:	mov    rcx,rsi
  40237b:	call   0x423970
  402380:	mov    BYTE PTR [rsi+0x14c],0x2
  402387:	mov    rcx,rsi
  40238a:	call   0x4235d0
  40238f:	test   eax,eax
  402391:	js     0x402344
  402393:	cmp    WORD PTR [rsi],0x700
  402398:	ja     0x4023a3
  40239a:	add    rsp,0x28
  40239e:	pop    rbx
  40239f:	pop    rsi
  4023a0:	pop    rdi
  4023a1:	pop    rbp
  4023a2:	ret    
  4023a3:	mov    edx,0x1
  4023a8:	mov    rcx,rsi
  4023ab:	call   0x423970
  4023b0:	cmp    eax,0x1
  4023b3:	jne    0x402344
  4023b5:	mov    edx,0x1
  4023ba:	mov    rcx,rsi
  4023bd:	call   0x416820
  4023c2:	lea    rdx,[rip+0x2cf97]        # 0x42f360
  4023c9:	mov    r8d,0xffffffff
  4023cf:	mov    rcx,rsi
  4023d2:	call   0x423fa0
  4023d7:	mov    edx,0x9
  4023dc:	mov    rcx,rsi
  4023df:	call   0x4152b0
  4023e4:	mov    edx,0x3
  4023e9:	mov    rcx,rsi
  4023ec:	call   0x423970
  4023f1:	mov    rcx,rsi
  4023f4:	call   0x4231d0
  4023f9:	test   eax,eax
  4023fb:	jns    0x40239a
  4023fd:	jmp    0x402344
  402402:	nop    DWORD PTR [rax+0x0]
  402406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402410:	mov    rdx,QWORD PTR [rcx+0x18]
  402414:	mov    rcx,QWORD PTR [rcx+0x10]
  402418:	jmp    0x402250
  40241d:	nop    DWORD PTR [rax]
  402420:	push   rbp
  402421:	push   rdi
  402422:	push   rsi
  402423:	push   rbx
  402424:	sub    rsp,0x28
  402428:	mov    rbp,QWORD PTR [rip+0x4068d]        # 0x442abc
  40242f:	lea    rax,[rcx+0x98]
  402436:	lea    rdi,[rcx+0xa8]
  40243d:	mov    rsi,rcx
  402440:	mov    DWORD PTR [rcx+0x90],0x0
  40244a:	mov    QWORD PTR [rcx+0xa0],rax
  402451:	mov    QWORD PTR [rcx+0x98],rax
  402458:	mov    eax,DWORD PTR [rcx+0x30]
  40245b:	mov    QWORD PTR [rcx+0xb0],rdi
  402462:	mov    QWORD PTR [rcx+0xa8],rdi
  402469:	test   eax,eax
  40246b:	jg     0x4024c8
  40246d:	jmp    0x402523
  402472:	lea    rdx,[rip+0x2cf6f]        # 0x42f3e8
  402479:	lea    rcx,[rip+0x2cf90]        # 0x42f410
  402480:	mov    r8d,0x51
  402486:	call   0x42d350
  40248b:	mov    rdx,QWORD PTR [rsi+0xb0]
  402492:	lea    rax,[rbx+0x10]
  402496:	mov    QWORD PTR [rdx],rax
  402499:	mov    QWORD PTR [rsi+0xb0],rax
  4024a0:	mov    rax,QWORD PTR [rbx]
  4024a3:	mov    QWORD PTR [rbx+0x18],rdx
  4024a7:	mov    QWORD PTR [rbx+0x10],rdi
  4024ab:	cmp    WORD PTR [rax],0x700
  4024b0:	jbe    0x402557
  4024b6:	add    DWORD PTR [rsi+0xec],0x1
  4024bd:	mov    eax,DWORD PTR [rsi+0x30]
  4024c0:	cmp    DWORD PTR [rsi+0x90],eax
  4024c6:	jge    0x402523
  4024c8:	mov    edx,0x38
  4024cd:	mov    ecx,0x1
  4024d2:	call   0x42d740
  4024d7:	test   rax,rax
  4024da:	mov    rbx,rax
  4024dd:	je     0x40252c
  4024df:	xor    edx,edx
  4024e1:	mov    BYTE PTR [rax+0x8],0x1
  4024e5:	mov    rcx,rsi
  4024e8:	call   0x401dc0
  4024ed:	test   rax,rax
  4024f0:	mov    QWORD PTR [rbx],rax
  4024f3:	je     0x402582
  4024f9:	xor    ecx,ecx
  4024fb:	call   rbp
  4024fd:	add    DWORD PTR [rsi+0x90],0x1
  402504:	cmp    QWORD PTR [rbx+0x10],0x0
  402509:	mov    QWORD PTR [rbx+0x28],rax
  40250d:	jne    0x402472
  402513:	cmp    QWORD PTR [rbx+0x18],0x0
  402518:	jne    0x402472
  40251e:	jmp    0x40248b
  402523:	add    rsp,0x28
  402527:	pop    rbx
  402528:	pop    rsi
  402529:	pop    rdi
  40252a:	pop    rbp
  40252b:	ret    
  40252c:	call   QWORD PTR [rip+0x404f2]        # 0x442a24
  402532:	lea    rcx,[rip+0x2ce75]        # 0x42f3ae
  402539:	lea    r9,[rax+0x60]
  40253d:	mov    r8d,0xe
  402543:	mov    edx,0x1
  402548:	call   0x42d6e8
  40254d:	mov    ecx,0x1
  402552:	call   0x42d738
  402557:	call   QWORD PTR [rip+0x404c7]        # 0x442a24
  40255d:	lea    rcx,[rip+0x2cefc]        # 0x42f460
  402564:	lea    r9,[rax+0x60]
  402568:	mov    r8d,0x4f
  40256e:	mov    edx,0x1
  402573:	call   0x42d6e8
  402578:	mov    ecx,0x1
  40257d:	call   0x42d738
  402582:	call   QWORD PTR [rip+0x4049c]        # 0x442a24
  402588:	lea    rcx,[rip+0x2ce31]        # 0x42f3c0
  40258f:	lea    r9,[rax+0x60]
  402593:	mov    r8d,0x22
  402599:	mov    edx,0x1
  40259e:	call   0x42d6e8
  4025a3:	mov    ecx,0x1
  4025a8:	call   0x42d738
  4025ad:	nop
  4025ae:	xchg   ax,ax
  4025b0:	push   rdi
  4025b1:	push   rsi
  4025b2:	push   rbx
  4025b3:	sub    rsp,0x20
  4025b7:	mov    rax,QWORD PTR [rcx+0x98]
  4025be:	lea    rsi,[rcx+0x98]
  4025c5:	mov    rbx,rcx
  4025c8:	cmp    rax,rsi
  4025cb:	je     0x402604
  4025cd:	mov    rdx,rax
  4025d0:	sub    rdx,0x10
  4025d4:	je     0x402604
  4025d6:	xor    edi,edi
  4025d8:	jmp    0x4025e9
  4025da:	nop    WORD PTR [rax+rax*1+0x0]
  4025e0:	mov    rdx,rax
  4025e3:	sub    rdx,0x10
  4025e7:	je     0x402604
  4025e9:	cmp    rax,rsi
  4025ec:	mov    rcx,rbx
  4025ef:	cmove  rdx,rdi
  4025f3:	call   0x402250
  4025f8:	mov    rax,QWORD PTR [rbx+0x98]
  4025ff:	cmp    rax,rsi
  402602:	jne    0x4025e0
  402604:	mov    rax,QWORD PTR [rbx+0xa8]
  40260b:	lea    rsi,[rbx+0xa8]
  402612:	cmp    rax,rsi
  402615:	je     0x402648
  402617:	mov    rdx,rax
  40261a:	sub    rdx,0x10
  40261e:	je     0x402648
  402620:	xor    edi,edi
  402622:	jmp    0x40262d
  402624:	mov    rdx,rax
  402627:	sub    rdx,0x10
  40262b:	je     0x402648
  40262d:	cmp    rsi,rax
  402630:	mov    rcx,rbx
  402633:	cmove  rdx,rdi
  402637:	call   0x402250
  40263c:	mov    rax,QWORD PTR [rbx+0xa8]
  402643:	cmp    rax,rsi
  402646:	jne    0x402624
  402648:	mov    eax,DWORD PTR [rbx+0x90]
  40264e:	test   eax,eax
  402650:	je     0x40266b
  402652:	lea    rdx,[rip+0x2ccb1]        # 0x42f30a
  402659:	lea    rcx,[rip+0x2ce50]        # 0x42f4b0
  402660:	mov    r8d,0x11b
  402666:	call   0x42d350
  40266b:	mov    DWORD PTR [rbx+0x90],0x0
  402675:	add    rsp,0x20
  402679:	pop    rbx
  40267a:	pop    rsi
  40267b:	pop    rdi
  40267c:	ret    
  40267d:	nop    DWORD PTR [rax]
  402680:	push   r15
  402682:	push   r14
  402684:	push   r13
  402686:	push   r12
  402688:	push   rbp
  402689:	push   rdi
  40268a:	push   rsi
  40268b:	push   rbx
  40268c:	sub    rsp,0x48
  402690:	mov    r10,QWORD PTR [rcx+0x98]
  402697:	lea    r13,[rcx+0x98]
  40269e:	mov    rsi,rcx
  4026a1:	mov    QWORD PTR [rsp+0x98],rdx
  4026a9:	mov    QWORD PTR [rsp+0xa0],r8
  4026b1:	cmp    r10,r13
  4026b4:	je     0x4029b1
  4026ba:	sub    r10,0x10
  4026be:	je     0x4029b1
  4026c4:	mov    rax,QWORD PTR [rip+0x403f1]        # 0x442abc
  4026cb:	mov    r14,QWORD PTR [rip+0x3975e]        # 0x43be30
  4026d2:	mov    rsi,r10
  4026d5:	mov    QWORD PTR [rsp+0x90],rcx
  4026dd:	mov    QWORD PTR [rsp+0x30],rax
  4026e2:	mov    QWORD PTR [rsp+0x38],r14
  4026e7:	jmp    0x40272a
  4026e9:	nop    DWORD PTR [rax+0x0]
  4026f0:	sub    rbx,0x10
  4026f4:	cmp    BYTE PTR [rsi+0x20],0x0
  4026f8:	jne    0x402722
  4026fa:	mov    r12,QWORD PTR [rsi]
  4026fd:	test   r12,r12
  402700:	je     0x402743
  402702:	xor    ecx,ecx
  402704:	mov    rax,QWORD PTR [rsp+0x30]
  402709:	call   rax
  40270b:	cmp    BYTE PTR [rsi+0x8],0x0
  40270f:	mov    r15,rax
  402712:	jne    0x402821
  402718:	cmp    BYTE PTR [rsi+0x9],0x0
  40271c:	jne    0x402900
  402722:	mov    rsi,rbx
  402725:	test   rbx,rbx
  402728:	je     0x402760
  40272a:	mov    rbx,QWORD PTR [rsi+0x10]
  40272e:	cmp    rbx,r13
  402731:	jne    0x4026f0
  402733:	cmp    BYTE PTR [rsi+0x20],0x0
  402737:	jne    0x402760
  402739:	mov    r12,QWORD PTR [rsi]
  40273c:	xor    ebx,ebx
  40273e:	test   r12,r12
  402741:	jne    0x402702
  402743:	lea    rdx,[rip+0x2cbc0]        # 0x42f30a
  40274a:	lea    rcx,[rip+0x2cd7d]        # 0x42f4ce
  402751:	mov    r8d,0x15b
  402757:	call   0x42d350
  40275c:	jmp    0x402702
  40275e:	xchg   ax,ax
  402760:	mov    rsi,QWORD PTR [rsp+0x90]
  402768:	xor    ecx,ecx
  40276a:	mov    rax,QWORD PTR [rsp+0x30]
  40276f:	lea    rbp,[rsi+0xa8]
  402776:	call   rax
  402778:	mov    rbx,QWORD PTR [rsi+0xa8]
  40277f:	cmp    rbx,rbp
  402782:	je     0x402810
  402788:	sub    rbx,0x10
  40278c:	je     0x402810
  402792:	mov    r12d,eax
  402795:	xor    r13d,r13d
  402798:	mov    r14,QWORD PTR [rip+0x39691]        # 0x43be30
  40279f:	jmp    0x4027a4
  4027a1:	mov    rbx,rdi
  4027a4:	mov    rax,QWORD PTR [rbx+0x10]
  4027a8:	lea    rdi,[rax-0x10]
  4027ac:	cmp    rax,rbp
  4027af:	cmove  rdi,r13
  4027b3:	cmp    QWORD PTR [rbx],0x0
  4027b7:	je     0x402940
  4027bd:	cmp    QWORD PTR [rbx+0x30],0x0
  4027c2:	je     0x4027dd
  4027c4:	lea    rdx,[rip+0x2cb3f]        # 0x42f30a
  4027cb:	lea    rcx,[rip+0x2cd82]        # 0x42f554
  4027d2:	mov    r8d,0x175
  4027d8:	call   0x42d350
  4027dd:	mov    r9d,r12d
  4027e0:	sub    r9d,DWORD PTR [rbx+0x28]
  4027e4:	cmp    r9d,DWORD PTR [rsi+0x2c]
  4027e8:	jle    0x40280b
  4027ea:	mov    eax,DWORD PTR [rsi+0x30]
  4027ed:	cmp    DWORD PTR [rsi+0x90],eax
  4027f3:	jle    0x40280b
  4027f5:	mov    eax,DWORD PTR [r14]
  4027f8:	test   eax,eax
  4027fa:	jne    0x402994
  402800:	mov    rdx,rbx
  402803:	mov    rcx,rsi
  402806:	call   0x402250
  40280b:	test   rdi,rdi
  40280e:	jne    0x4027a1
  402810:	add    rsp,0x48
  402814:	pop    rbx
  402815:	pop    rsi
  402816:	pop    rdi
  402817:	pop    rbp
  402818:	pop    r12
  40281a:	pop    r13
  40281c:	pop    r14
  40281e:	pop    r15
  402820:	ret    
  402821:	mov    rcx,QWORD PTR [r12+0x10]
  402826:	mov    rdx,QWORD PTR [rsp+0x98]
  40282e:	call   0x42afb8
  402833:	test   eax,eax
  402835:	je     0x402718
  40283b:	mov    rdi,QWORD PTR [rsi]
  40283e:	xor    ebp,ebp
  402840:	jmp    0x402874
  402842:	mov    rbp,QWORD PTR [rsi+0x30]
  402846:	test   rbp,rbp
  402849:	je     0x402976
  40284f:	mov    rdx,rbp
  402852:	mov    rcx,rsi
  402855:	call   0x404270
  40285a:	test   al,al
  40285c:	je     0x4029fc
  402862:	mov    eax,DWORD PTR [rdi+0xec]
  402868:	cmp    DWORD PTR [rdi+0xe4],eax
  40286e:	jb     0x402963
  402874:	mov    rcx,rdi
  402877:	call   0x403ee0
  40287c:	test   al,al
  40287e:	jne    0x40295e
  402884:	mov    eax,DWORD PTR [rdi+0xec]
  40288a:	test   eax,eax
  40288c:	je     0x4029da
  402892:	mov    r8d,DWORD PTR [r14]
  402895:	test   r8d,r8d
  402898:	je     0x402842
  40289a:	mov    r9,QWORD PTR [rdi+0xd0]
  4028a1:	lea    r8,[rip+0x2cc46]        # 0x42f4ee
  4028a8:	lea    rcx,[rip+0x2ca5b]        # 0x42f30a
  4028af:	mov    QWORD PTR [rsp+0x20],rax
  4028b4:	mov    edx,0x1314
  4028b9:	call   0x40d0b0
  4028be:	mov    rbp,QWORD PTR [rsi+0x30]
  4028c2:	test   rbp,rbp
  4028c5:	je     0x402976
  4028cb:	mov    ecx,DWORD PTR [r14]
  4028ce:	test   ecx,ecx
  4028d0:	je     0x40284f
  4028d6:	mov    rax,QWORD PTR [rbp+0x0]
  4028da:	lea    r8,[rip+0x2cc25]        # 0x42f506
  4028e1:	lea    rcx,[rip+0x2ca22]        # 0x42f30a
  4028e8:	mov    edx,0x1365
  4028ed:	mov    r9,QWORD PTR [rax+0x10]
  4028f1:	call   0x40d350
  4028f6:	jmp    0x40284f
  4028fb:	nop    DWORD PTR [rax+rax*1+0x0]
  402900:	mov    rcx,QWORD PTR [r12+0x10]
  402905:	mov    rdx,QWORD PTR [rsp+0xa0]
  40290d:	call   0x42afb8
  402912:	test   eax,eax
  402914:	je     0x402722
  40291a:	mov    rcx,QWORD PTR [rsi+0x30]
  40291e:	mov    rdx,rsi
  402921:	call   0x404270
  402926:	test   al,al
  402928:	je     0x4029c2
  40292e:	mov    QWORD PTR [rsi+0x28],r15
  402932:	mov    rsi,rbx
  402935:	jmp    0x402725
  40293a:	nop    WORD PTR [rax+rax*1+0x0]
  402940:	lea    rdx,[rip+0x2c9c3]        # 0x42f30a
  402947:	lea    rcx,[rip+0x2cbf7]        # 0x42f545
  40294e:	mov    r8d,0x174
  402954:	call   0x42d350
  402959:	jmp    0x4027bd
  40295e:	test   rbp,rbp
  402961:	je     0x402976
  402963:	cmp    BYTE PTR [rbp+0x9],0x0
  402967:	jne    0x402976
  402969:	mov    rax,QWORD PTR [rbp+0x0]
  40296d:	mov    rcx,QWORD PTR [rax+0x10]
  402971:	call   0x413370
  402976:	cmp    BYTE PTR [rsi+0x9],0x0
  40297a:	je     0x40292e
  40297c:	mov    rcx,QWORD PTR [r12+0x10]
  402981:	mov    rdx,QWORD PTR [rsp+0xa0]
  402989:	call   0x42afb8
  40298e:	test   eax,eax
  402990:	je     0x40292e
  402992:	jmp    0x40291a
  402994:	lea    r8,[rip+0x2cbcd]        # 0x42f568
  40299b:	lea    rcx,[rip+0x2c968]        # 0x42f30a
  4029a2:	mov    edx,0x17a5
  4029a7:	call   0x40d350
  4029ac:	jmp    0x402800
  4029b1:	mov    rax,QWORD PTR [rip+0x40104]        # 0x442abc
  4029b8:	mov    QWORD PTR [rsp+0x30],rax
  4029bd:	jmp    0x402768
  4029c2:	mov    rcx,QWORD PTR [rsp+0x90]
  4029ca:	mov    rdx,rsi
  4029cd:	mov    rsi,rbx
  4029d0:	call   0x402250
  4029d5:	jmp    0x402725
  4029da:	mov    rax,QWORD PTR [rsp+0x38]
  4029df:	mov    r9d,DWORD PTR [rax]
  4029e2:	test   r9d,r9d
  4029e5:	jne    0x402a18
  4029e7:	mov    rcx,QWORD PTR [rsp+0x90]
  4029ef:	mov    rdx,rsi
  4029f2:	call   0x402250
  4029f7:	jmp    0x402722
  4029fc:	mov    edx,DWORD PTR [r14]
  4029ff:	test   edx,edx
  402a01:	jne    0x402a32
  402a03:	mov    rcx,QWORD PTR [rsp+0x90]
  402a0b:	mov    rdx,rbp
  402a0e:	call   0x402f80
  402a13:	jmp    0x402722
  402a18:	lea    r8,[rip+0x2cab3]        # 0x42f4d2
  402a1f:	lea    rcx,[rip+0x2c8e4]        # 0x42f30a
  402a26:	mov    edx,0x12b5
  402a2b:	call   0x40d350
  402a30:	jmp    0x4029e7
  402a32:	lea    r8,[rip+0x2cae7]        # 0x42f520
  402a39:	lea    rcx,[rip+0x2c8ca]        # 0x42f30a
  402a40:	mov    edx,0x1382
  402a45:	call   0x40d350
  402a4a:	jmp    0x402a03
  402a4c:	nop    DWORD PTR [rax+0x0]
  402a50:	push   r12
  402a52:	push   rbp
  402a53:	push   rdi
  402a54:	push   rsi
  402a55:	push   rbx
  402a56:	sub    rsp,0x30
  402a5a:	mov    rbx,QWORD PTR [rcx+0xa8]
  402a61:	lea    rbp,[rcx+0xa8]
  402a68:	mov    rdi,rcx
  402a6b:	mov    rsi,rdx
  402a6e:	mov    BYTE PTR [rdx+0x8],0x0
  402a72:	mov    BYTE PTR [rdx+0x9],0x0
  402a76:	cmp    rbx,rbp
  402a79:	je     0x402ad1
  402a7b:	sub    rbx,0x10
  402a7f:	je     0x402ad1
  402a81:	cmp    QWORD PTR [rbx+0x30],0x0
  402a86:	je     0x402aa1
  402a88:	lea    rdx,[rip+0x2c87b]        # 0x42f30a
  402a8f:	lea    rcx,[rip+0x2c8a9]        # 0x42f33f
  402a96:	mov    r8d,0x1db
  402a9c:	call   0x42d350
  402aa1:	cmp    BYTE PTR [rbx+0x20],0x0
  402aa5:	jne    0x402be0
  402aab:	mov    rax,QWORD PTR [rbx]
  402aae:	test   rax,rax
  402ab1:	je     0x402c05
  402ab7:	mov    rdx,QWORD PTR [rsi+0x20]
  402abb:	movzx  ecx,WORD PTR [rdx+0xc]
  402abf:	cmp    WORD PTR [rax],cx
  402ac2:	je     0x402c32
  402ac8:	mov    rbx,QWORD PTR [rbx+0x10]
  402acc:	cmp    rbx,rbp
  402acf:	jne    0x402a7b
  402ad1:	mov    eax,DWORD PTR [rdi+0x34]
  402ad4:	cmp    DWORD PTR [rdi+0x90],eax
  402ada:	jge    0x402c80
  402ae0:	mov    edx,0x38
  402ae5:	mov    ecx,0x1
  402aea:	call   0x42d740
  402aef:	test   rax,rax
  402af2:	mov    rbx,rax
  402af5:	je     0x402d07
  402afb:	mov    rax,QWORD PTR [rip+0x3932e]        # 0x43be30
  402b02:	mov    eax,DWORD PTR [rax]
  402b04:	test   eax,eax
  402b06:	jne    0x402ce2
  402b0c:	mov    edx,0x28
  402b11:	mov    ecx,0x1
  402b16:	call   0x42d740
  402b1b:	test   rax,rax
  402b1e:	mov    r12,rax
  402b21:	je     0x402cff
  402b27:	mov    QWORD PTR [rax+0x18],rbx
  402b2b:	mov    QWORD PTR [rax+0x10],rdi
  402b2f:	xor    edx,edx
  402b31:	mov    rax,QWORD PTR [rsi+0x20]
  402b35:	xor    ecx,ecx
  402b37:	mov    r9,r12
  402b3a:	lea    r8,[rip+0xfffffffffffff50f]        # 0x402050
  402b41:	movzx  eax,WORD PTR [rax+0xc]
  402b45:	mov    QWORD PTR [rsp+0x28],0x0
  402b4e:	mov    DWORD PTR [rsp+0x20],0x0
  402b56:	mov    DWORD PTR [r12+0x20],eax
  402b5b:	call   QWORD PTR [rip+0x3fd83]        # 0x4428e4
  402b61:	test   rax,rax
  402b64:	je     0x402ca5
  402b6a:	add    DWORD PTR [rdi+0x90],0x1
  402b71:	cmp    QWORD PTR [rbx+0x10],0x0
  402b76:	mov    BYTE PTR [rbx+0x20],0x1
  402b7a:	je     0x402c70
  402b80:	lea    rdx,[rip+0x2c861]        # 0x42f3e8
  402b87:	lea    rcx,[rip+0x2c882]        # 0x42f410
  402b8e:	mov    r8d,0x51
  402b94:	call   0x42d350
  402b99:	mov    rdx,QWORD PTR [rdi+0xb0]
  402ba0:	lea    rax,[rbx+0x10]
  402ba4:	mov    r8,rsi
  402ba7:	mov    rcx,rdi
  402baa:	mov    QWORD PTR [rdx],rax
  402bad:	mov    QWORD PTR [rbx+0x18],rdx
  402bb1:	mov    rdx,rbx
  402bb4:	mov    QWORD PTR [rdi+0xb0],rax
  402bbb:	mov    QWORD PTR [rbx+0x10],rbp
  402bbf:	call   0x402130
  402bc4:	mov    rax,rbx
  402bc7:	mov    BYTE PTR [rsi+0x9],0x0
  402bcb:	mov    BYTE PTR [rsi+0x8],0x0
  402bcf:	add    rsp,0x30
  402bd3:	pop    rbx
  402bd4:	pop    rsi
  402bd5:	pop    rdi
  402bd6:	pop    rbp
  402bd7:	pop    r12
  402bd9:	ret    
  402bda:	nop    WORD PTR [rax+rax*1+0x0]
  402be0:	lea    rdx,[rip+0x2c723]        # 0x42f30a
  402be7:	lea    rcx,[rip+0x2c99e]        # 0x42f58c
  402bee:	mov    r8d,0x1dc
  402bf4:	call   0x42d350
  402bf9:	mov    rax,QWORD PTR [rbx]
  402bfc:	test   rax,rax
  402bff:	jne    0x402ab7
  402c05:	lea    rdx,[rip+0x2c6fe]        # 0x42f30a
  402c0c:	lea    rcx,[rip+0x2c932]        # 0x42f545
  402c13:	mov    r8d,0x1de
  402c19:	call   0x42d350
  402c1e:	mov    rdx,QWORD PTR [rsi+0x20]
  402c22:	mov    rax,QWORD PTR [rbx]
  402c25:	movzx  ecx,WORD PTR [rdx+0xc]
  402c29:	cmp    WORD PTR [rax],cx
  402c2c:	jne    0x402ac8
  402c32:	mov    r8,rsi
  402c35:	mov    rdx,rbx
  402c38:	mov    rcx,rdi
  402c3b:	call   0x402130
  402c40:	xor    ecx,ecx
  402c42:	call   QWORD PTR [rip+0x3fe74]        # 0x442abc
  402c48:	mov    BYTE PTR [rbx+0x8],0x0
  402c4c:	mov    QWORD PTR [rbx+0x28],rax
  402c50:	mov    rdx,rsi
  402c53:	mov    BYTE PTR [rbx+0x9],0x0
  402c57:	mov    rcx,rdi
  402c5a:	call   0x403cd0
  402c5f:	mov    rax,rbx
  402c62:	add    rsp,0x30
  402c66:	pop    rbx
  402c67:	pop    rsi
  402c68:	pop    rdi
  402c69:	pop    rbp
  402c6a:	pop    r12
  402c6c:	ret    
  402c6d:	nop    DWORD PTR [rax]
  402c70:	cmp    QWORD PTR [rbx+0x18],0x0
  402c75:	jne    0x402b80
  402c7b:	jmp    0x402b99
  402c80:	call   QWORD PTR [rip+0x3fd9e]        # 0x442a24
  402c86:	lea    rcx,[rip+0x2c913]        # 0x42f5a0
  402c8d:	lea    r9,[rax+0x60]
  402c91:	mov    r8d,0x2f
  402c97:	mov    edx,0x1
  402c9c:	call   0x42d6e8
  402ca1:	xor    eax,eax
  402ca3:	jmp    0x402c62
  402ca5:	xor    ecx,ecx
  402ca7:	call   QWORD PTR [rip+0x3fc27]        # 0x4428d4
  402cad:	mov    rcx,rbx
  402cb0:	call   0x42d6f8
  402cb5:	mov    rcx,r12
  402cb8:	call   0x42d6f8
  402cbd:	call   QWORD PTR [rip+0x3fd61]        # 0x442a24
  402cc3:	lea    rcx,[rip+0x2c934]        # 0x42f5fe
  402cca:	lea    r9,[rax+0x60]
  402cce:	mov    r8d,0x16
  402cd4:	mov    edx,0x1
  402cd9:	call   0x42d6e8
  402cde:	xor    eax,eax
  402ce0:	jmp    0x402c62
  402ce2:	lea    r8,[rip+0x2c8e7]        # 0x42f5d0
  402ce9:	lea    rcx,[rip+0x2c61a]        # 0x42f30a
  402cf0:	mov    edx,0x1fe5
  402cf5:	call   0x40d350
  402cfa:	jmp    0x402b0c
  402cff:	mov    rcx,rbx
  402d02:	call   0x42d6f8
  402d07:	call   QWORD PTR [rip+0x3fd17]        # 0x442a24
  402d0d:	lea    rcx,[rip+0x2c69a]        # 0x42f3ae
  402d14:	lea    r9,[rax+0x60]
  402d18:	mov    r8d,0xe
  402d1e:	mov    edx,0x1
  402d23:	call   0x42d6e8
  402d28:	xor    eax,eax
  402d2a:	jmp    0x402c62
  402d2f:	nop
  402d30:	cmp    BYTE PTR [rcx+0x20],0x0
  402d34:	mov    rax,QWORD PTR [rcx+0x18]
  402d38:	mov    r8,QWORD PTR [rcx+0x10]
  402d3c:	mov    rdx,QWORD PTR [rax+0x30]
  402d40:	je     0x402d53
  402d42:	mov    BYTE PTR [rax+0x8],0x1
  402d46:	mov    BYTE PTR [rax+0x9],0x0
  402d4a:	mov    BYTE PTR [rdx+0x8],0x1
  402d4e:	mov    BYTE PTR [rdx+0x9],0x0
  402d52:	ret    
  402d53:	mov    rcx,r8
  402d56:	jmp    0x402250
  402d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d60:	push   r12
  402d62:	push   rbp
  402d63:	push   rdi
  402d64:	push   rsi
  402d65:	push   rbx
  402d66:	sub    rsp,0x20
  402d6a:	mov    rdi,QWORD PTR [rcx+0x18]
  402d6e:	mov    r12,QWORD PTR [rcx+0x10]
  402d72:	mov    rsi,rcx
  402d75:	mov    rbx,QWORD PTR [rdi]
  402d78:	jmp    0x402d8c
  402d7a:	nop    WORD PTR [rax+rax*1+0x0]
  402d80:	mov    rcx,rbx
  402d83:	call   0x415130
  402d88:	test   eax,eax
  402d8a:	js     0x402de0
  402d8c:	mov    eax,DWORD PTR [rbx+0xe4]
  402d92:	cmp    DWORD PTR [rbx+0xec],eax
  402d98:	jbe    0x402d80
  402d9a:	mov    rax,QWORD PTR [rip+0x3908f]        # 0x43be30
  402da1:	mov    r8d,DWORD PTR [rax]
  402da4:	test   r8d,r8d
  402da7:	jne    0x402ee9
  402dad:	cmp    BYTE PTR [rbx+0xf0],0x12
  402db4:	je     0x402e05
  402db6:	mov    ecx,0x1
  402dbb:	call   0x40ff40
  402dc0:	mov    rbp,rax
  402dc3:	mov    QWORD PTR [rdi+0x20],rax
  402dc7:	movzx  eax,BYTE PTR [rbx+0xf0]
  402dce:	cmp    al,0x2
  402dd0:	je     0x402f0e
  402dd6:	cmp    al,0x10
  402dd8:	je     0x402e6a
  402dde:	xchg   ax,ax
  402de0:	xor    eax,eax
  402de2:	mov    rcx,QWORD PTR [rsi+0x10]
  402de6:	lea    r8,[rip+0xe43]        # 0x403c30
  402ded:	mov    BYTE PTR [rsi+0x20],al
  402df0:	mov    rdx,rsi
  402df3:	call   0x4041f0
  402df8:	xor    eax,eax
  402dfa:	add    rsp,0x20
  402dfe:	pop    rbx
  402dff:	pop    rsi
  402e00:	pop    rdi
  402e01:	pop    rbp
  402e02:	pop    r12
  402e04:	ret    
  402e05:	cmp    WORD PTR [rbx],0x0
  402e09:	je     0x402e60
  402e0b:	lea    rdx,[rip+0x2c82e]        # 0x42f640
  402e12:	mov    r8d,0x23
  402e18:	mov    rcx,rbx
  402e1b:	mov    BYTE PTR [rbx+0xf1],0x4
  402e22:	call   0x423f10
  402e27:	mov    rcx,rbx
  402e2a:	call   0x424270
  402e2f:	mov    eax,DWORD PTR [rbx+0xec]
  402e35:	mov    DWORD PTR [rbx+0xe4],eax
  402e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  402e40:	mov    rcx,rbx
  402e43:	call   0x415130
  402e48:	test   eax,eax
  402e4a:	js     0x402de0
  402e4c:	mov    eax,DWORD PTR [rbx+0xe4]
  402e52:	cmp    DWORD PTR [rbx+0xec],eax
  402e58:	jbe    0x402e40
  402e5a:	jmp    0x402db6
  402e5f:	nop
  402e60:	mov    ecx,0x701
  402e65:	mov    WORD PTR [rbx],cx
  402e68:	jmp    0x402e0b
  402e6a:	cmp    WORD PTR [rbx],0x0
  402e6e:	jne    0x402e78
  402e70:	mov    eax,0x700
  402e75:	mov    WORD PTR [rbx],ax
  402e78:	mov    rdx,rbp
  402e7b:	mov    rcx,rbx
  402e7e:	call   0x405740
  402e83:	test   eax,eax
  402e85:	je     0x402de0
  402e8b:	cmp    WORD PTR [rbp+0xc],0x700
  402e91:	jbe    0x402de0
  402e97:	mov    rcx,rbp
  402e9a:	mov    DWORD PTR [rbx+0xe4],0x0
  402ea4:	mov    DWORD PTR [rbx+0xec],0x0
  402eae:	call   0x403da0
  402eb3:	mov    rax,QWORD PTR [rbp+0x70]
  402eb7:	mov    rdx,QWORD PTR [r12+0x8]
  402ebc:	lea    rcx,[rax+0x8]
  402ec0:	call   0x42d630
  402ec5:	test   eax,eax
  402ec7:	jne    0x402de0
  402ecd:	mov    rcx,QWORD PTR [rbp+0x78]
  402ed1:	mov    rdx,QWORD PTR [r12+0x10]
  402ed6:	add    rcx,0x8
  402eda:	call   0x42d630
  402edf:	test   eax,eax
  402ee1:	sete   al
  402ee4:	jmp    0x402de2
  402ee9:	movzx  r9d,BYTE PTR [rbx+0xf0]
  402ef1:	lea    r8,[rip+0x2c728]        # 0x42f620
  402ef8:	lea    rcx,[rip+0x2c735]        # 0x42f634
  402eff:	mov    edx,0x1174
  402f04:	call   0x40d350
  402f09:	jmp    0x402dad
  402f0e:	cmp    WORD PTR [rbx],0x0
  402f12:	jne    0x402f1c
  402f14:	mov    edx,0x500
  402f19:	mov    WORD PTR [rbx],dx
  402f1c:	mov    rdx,rbp
  402f1f:	mov    rcx,rbx
  402f22:	call   0x405400
  402f27:	jmp    0x402e8b
  402f2c:	nop    DWORD PTR [rax+0x0]
  402f30:	push   rbx
  402f31:	sub    rsp,0x20
  402f35:	lea    rax,[rcx+0xd0]
  402f3c:	mov    rbx,rcx
  402f3f:	mov    QWORD PTR [rcx+0xd8],rax
  402f46:	mov    QWORD PTR [rcx+0xd0],rax
  402f4d:	lea    rax,[rcx+0xb8]
  402f54:	mov    QWORD PTR [rcx+0xc0],rax
  402f5b:	mov    QWORD PTR [rcx+0xb8],rax
  402f62:	xor    ecx,ecx
  402f64:	call   0x410430
  402f69:	mov    QWORD PTR [rbx+0xe0],rax
  402f70:	add    rsp,0x20
  402f74:	pop    rbx
  402f75:	ret    
  402f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f80:	push   rdi
  402f81:	push   rsi
  402f82:	push   rbx
  402f83:	sub    rsp,0x20
  402f87:	mov    rdi,QWORD PTR [rdx+0x30]
  402f8b:	mov    rsi,rcx
  402f8e:	mov    rbx,rdx
  402f91:	test   rdi,rdi
  402f94:	je     0x402fcb
  402f96:	cmp    QWORD PTR [rdi+0x30],rdx
  402f9a:	je     0x402fb5
  402f9c:	lea    rdx,[rip+0x2c691]        # 0x42f634
  402fa3:	lea    rcx,[rip+0x2c6ba]        # 0x42f664
  402faa:	mov    r8d,0xda
  402fb0:	call   0x42d350
  402fb5:	mov    rdx,rdi
  402fb8:	mov    rcx,rsi
  402fbb:	call   0x4021e0
  402fc0:	mov    rdx,rdi
  402fc3:	mov    rcx,rsi
  402fc6:	call   0x402300
  402fcb:	mov    rcx,QWORD PTR [rbx]
  402fce:	call   0x412a40
  402fd3:	mov    rcx,QWORD PTR [rbx+0x20]
  402fd7:	call   0x410150
  402fdc:	mov    rdx,QWORD PTR [rbx+0x18]
  402fe0:	mov    rax,QWORD PTR [rbx+0x10]
  402fe4:	test   rdx,rdx
  402fe7:	je     0x402fec
  402fe9:	mov    QWORD PTR [rdx],rax
  402fec:	test   rax,rax
  402fef:	je     0x402ff5
  402ff1:	mov    QWORD PTR [rax+0x8],rdx
  402ff5:	sub    DWORD PTR [rsi+0xc8],0x1
  402ffc:	mov    rcx,rbx
  402fff:	add    rsp,0x20
  403003:	pop    rbx
  403004:	pop    rsi
  403005:	pop    rdi
  403006:	jmp    0x42d6f8
  40300b:	nop    DWORD PTR [rax+rax*1+0x0]
  403010:	push   rdi
  403011:	push   rsi
  403012:	push   rbx
  403013:	sub    rsp,0x20
  403017:	mov    rax,QWORD PTR [rcx+0xd0]
  40301e:	lea    rsi,[rcx+0xd0]
  403025:	mov    rbx,rcx
  403028:	cmp    rax,rsi
  40302b:	je     0x403064
  40302d:	mov    rdx,rax
  403030:	sub    rdx,0x10
  403034:	je     0x403064
  403036:	xor    edi,edi
  403038:	jmp    0x403049
  40303a:	nop    WORD PTR [rax+rax*1+0x0]
  403040:	mov    rdx,rax
  403043:	sub    rdx,0x10
  403047:	je     0x403064
  403049:	cmp    rax,rsi
  40304c:	mov    rcx,rbx
  40304f:	cmove  rdx,rdi
  403053:	call   0x402f80
  403058:	mov    rax,QWORD PTR [rbx+0xd0]
  40305f:	cmp    rax,rsi
  403062:	jne    0x403040
  403064:	mov    rax,QWORD PTR [rbx+0xb8]
  40306b:	lea    rsi,[rbx+0xb8]
  403072:	cmp    rax,rsi
  403075:	je     0x4030a8
  403077:	mov    rdx,rax
  40307a:	sub    rdx,0x10
  40307e:	je     0x4030a8
  403080:	xor    edi,edi
  403082:	jmp    0x40308d
  403084:	mov    rdx,rax
  403087:	sub    rdx,0x10
  40308b:	je     0x4030a8
  40308d:	cmp    rsi,rax
  403090:	mov    rcx,rbx
  403093:	cmove  rdx,rdi
  403097:	call   0x402f80
  40309c:	mov    rax,QWORD PTR [rbx+0xb8]
  4030a3:	cmp    rax,rsi
  4030a6:	jne    0x403084
  4030a8:	mov    rcx,QWORD PTR [rbx+0xe0]
  4030af:	call   0x410490
  4030b4:	mov    QWORD PTR [rbx+0xe0],0x0
  4030bf:	add    rsp,0x20
  4030c3:	pop    rbx
  4030c4:	pop    rsi
  4030c5:	pop    rdi
  4030c6:	ret    
  4030c7:	nop    WORD PTR [rax+rax*1+0x0]
  4030d0:	push   r12
  4030d2:	push   rbp
  4030d3:	push   rdi
  4030d4:	push   rsi
  4030d5:	push   rbx
  4030d6:	sub    rsp,0x40
  4030da:	mov    rbx,QWORD PTR [rip+0x38d4f]        # 0x43be30
  4030e1:	mov    rsi,rcx
  4030e4:	mov    rdi,rdx
  4030e7:	mov    ecx,DWORD PTR [rbx]
  4030e9:	test   ecx,ecx
  4030eb:	jne    0x4032b0
  4030f1:	xor    r8d,r8d
  4030f4:	xor    edx,edx
  4030f6:	mov    rcx,rdi
  4030f9:	call   QWORD PTR [rip+0x3fc05]        # 0x442d04
  4030ff:	cmp    rax,0xffffffffffffffff
  403103:	mov    rbp,rax
  403106:	je     0x403330
  40310c:	mov    rcx,rax
  40310f:	call   0x4131b0
  403114:	test   eax,eax
  403116:	jne    0x403293
  40311c:	mov    edi,DWORD PTR [rsi+0xc8]
  403122:	cmp    edi,0x3ff
  403128:	jg     0x403272
  40312e:	mov    edx,0x38
  403133:	mov    ecx,0x1
  403138:	call   0x42d740
  40313d:	test   rax,rax
  403140:	mov    rbx,rax
  403143:	je     0x403352
  403149:	cmp    QWORD PTR [rax+0x10],0x0
  40314e:	je     0x403262
  403154:	lea    rdx,[rip+0x2c59d]        # 0x42f6f8
  40315b:	lea    rcx,[rip+0x2c5be]        # 0x42f720
  403162:	mov    r8d,0x51
  403168:	call   0x42d350
  40316d:	mov    edi,DWORD PTR [rsi+0xc8]
  403173:	mov    rdx,QWORD PTR [rsi+0xd8]
  40317a:	lea    rax,[rbx+0x10]
  40317e:	mov    rcx,QWORD PTR [rsi+0xe0]
  403185:	add    edi,0x1
  403188:	mov    QWORD PTR [rdx],rax
  40318b:	mov    QWORD PTR [rbx+0x18],rdx
  40318f:	lea    rdx,[rsi+0xd0]
  403196:	mov    DWORD PTR [rsi+0xc8],edi
  40319c:	mov    QWORD PTR [rsi+0xd8],rax
  4031a3:	mov    QWORD PTR [rbx+0x10],rdx
  4031a7:	mov    edx,0x200
  4031ac:	call   0x412bc0
  4031b1:	test   rax,rax
  4031b4:	mov    rdi,rax
  4031b7:	je     0x403293
  4031bd:	mov    edx,0x28
  4031c2:	mov    ecx,0x1
  4031c7:	call   0x42d740
  4031cc:	test   rax,rax
  4031cf:	mov    r12,rax
  4031d2:	je     0x403310
  4031d8:	lea    rdx,[rip+0x2c58c]        # 0x42f76b
  4031df:	xor    r8d,r8d
  4031e2:	mov    rcx,rdi
  4031e5:	call   0x40bbc0
  4031ea:	test   eax,eax
  4031ec:	js     0x403310
  4031f2:	or     BYTE PTR [rdi+0xa0],0x1
  4031f9:	mov    QWORD PTR [rdi+0x10],rbp
  4031fd:	xor    edx,edx
  4031ff:	mov    DWORD PTR [rdi+0x148],0x0
  403209:	mov    BYTE PTR [rdi+0xf1],0x2
  403210:	xor    ecx,ecx
  403212:	mov    QWORD PTR [rbx],rdi
  403215:	mov    DWORD PTR [rbx+0x28],0x1
  40321c:	mov    r9,r12
  40321f:	mov    BYTE PTR [rbx+0x8],0x0
  403223:	lea    r8,[rip+0xfffffffffffffb36]        # 0x402d60
  40322a:	mov    BYTE PTR [rbx+0x9],0x0
  40322e:	mov    QWORD PTR [r12+0x18],rbx
  403233:	mov    QWORD PTR [r12+0x10],rsi
  403238:	mov    QWORD PTR [rsp+0x28],0x0
  403241:	mov    DWORD PTR [rsp+0x20],0x0
  403249:	call   QWORD PTR [rip+0x3f695]        # 0x4428e4
  40324f:	test   rax,rax
  403252:	je     0x4032d0
  403254:	mov    rax,rbx
  403257:	add    rsp,0x40
  40325b:	pop    rbx
  40325c:	pop    rsi
  40325d:	pop    rdi
  40325e:	pop    rbp
  40325f:	pop    r12
  403261:	ret    
  403262:	cmp    QWORD PTR [rax+0x18],0x0
  403267:	jne    0x403154
  40326d:	jmp    0x403173
  403272:	call   QWORD PTR [rip+0x3f7ac]        # 0x442a24
  403278:	lea    rcx,[rip+0x2c431]        # 0x42f6b0
  40327f:	lea    r9,[rax+0x60]
  403283:	mov    r8d,0x32
  403289:	mov    edx,0x1
  40328e:	call   0x42d6e8
  403293:	xor    ebx,ebx
  403295:	mov    rcx,rbp
  403298:	call   QWORD PTR [rip+0x3fa76]        # 0x442d14
  40329e:	mov    rax,rbx
  4032a1:	add    rsp,0x40
  4032a5:	pop    rbx
  4032a6:	pop    rsi
  4032a7:	pop    rdi
  4032a8:	pop    rbp
  4032a9:	pop    r12
  4032ab:	ret    
  4032ac:	nop    DWORD PTR [rax+0x0]
  4032b0:	lea    r8,[rip+0x2c3c9]        # 0x42f680
  4032b7:	lea    rcx,[rip+0x2c376]        # 0x42f634
  4032be:	mov    edx,0x9a4
  4032c3:	call   0x40d350
  4032c8:	jmp    0x4030f1
  4032cd:	nop    DWORD PTR [rax]
  4032d0:	xor    ecx,ecx
  4032d2:	call   QWORD PTR [rip+0x3f5fc]        # 0x4428d4
  4032d8:	mov    rdx,rbx
  4032db:	mov    rcx,rsi
  4032de:	xor    ebx,ebx
  4032e0:	call   0x402f80
  4032e5:	call   QWORD PTR [rip+0x3f739]        # 0x442a24
  4032eb:	lea    rcx,[rip+0x2c47f]        # 0x42f771
  4032f2:	lea    r9,[rax+0x60]
  4032f6:	mov    r8d,0x16
  4032fc:	mov    edx,0x1
  403301:	call   0x42d6e8
  403306:	jmp    0x403254
  40330b:	nop    DWORD PTR [rax+rax*1+0x0]
  403310:	mov    rcx,r12
  403313:	xor    ebx,ebx
  403315:	call   0x42d6f8
  40331a:	mov    rcx,rdi
  40331d:	call   0x412a40
  403322:	mov    rcx,rbp
  403325:	call   QWORD PTR [rip+0x3f9e9]        # 0x442d14
  40332b:	jmp    0x403254
  403330:	call   QWORD PTR [rip+0x3f726]        # 0x442a5c
  403336:	mov    ecx,DWORD PTR [rax]
  403338:	call   0x413380
  40333d:	mov    edx,DWORD PTR [rbx]
  40333f:	test   edx,edx
  403341:	jne    0x403378
  403343:	mov    rcx,rax
  403346:	xor    ebx,ebx
  403348:	call   0x4148c0
  40334d:	jmp    0x403254
  403352:	call   QWORD PTR [rip+0x3f6cc]        # 0x442a24
  403358:	lea    rcx,[rip+0x2c384]        # 0x42f6e3
  40335f:	lea    r9,[rax+0x60]
  403363:	mov    r8d,0xe
  403369:	mov    edx,0x1
  40336e:	call   0x42d6e8
  403373:	jmp    0x403293
  403378:	lea    r8,[rip+0x2c317]        # 0x42f696
  40337f:	lea    rcx,[rip+0x2c2ae]        # 0x42f634
  403386:	mov    r9,rax
  403389:	mov    edx,0x9d2
  40338e:	mov    QWORD PTR [rsp+0x38],rax
  403393:	call   0x40d350
  403398:	mov    rax,QWORD PTR [rsp+0x38]
  40339d:	jmp    0x403343
  40339f:	nop
  4033a0:	push   r15
  4033a2:	push   r14
  4033a4:	push   r13
  4033a6:	push   r12
  4033a8:	push   rbp
  4033a9:	push   rdi
  4033aa:	push   rsi
  4033ab:	push   rbx
  4033ac:	sub    rsp,0x58
  4033b0:	mov    r10,QWORD PTR [rcx+0xd0]
  4033b7:	lea    rdi,[rcx+0xd0]
  4033be:	cmp    r10,rdi
  4033c1:	je     0x403580
  4033c7:	sub    r10,0x10
  4033cb:	mov    r13,r10
  4033ce:	je     0x403580
  4033d4:	mov    rsi,QWORD PTR [rip+0x38a55]        # 0x43be30
  4033db:	mov    QWORD PTR [rsp+0x38],r8
  4033e0:	mov    r14,rdx
  4033e3:	mov    QWORD PTR [rsp+0x40],rcx
  4033e8:	mov    QWORD PTR [rsp+0x48],rsi
  4033ed:	jmp    0x403407
  4033ef:	nop
  4033f0:	cmp    BYTE PTR [r13+0x9],0x0
  4033f5:	jne    0x403530
  4033fb:	test   rbx,rbx
  4033fe:	mov    r13,rbx
  403401:	je     0x403580
  403407:	mov    rbx,QWORD PTR [r13+0x10]
  40340b:	cmp    rbx,rdi
  40340e:	je     0x403591
  403414:	mov    rax,QWORD PTR [r13+0x0]
  403418:	sub    rbx,0x10
  40341c:	test   rax,rax
  40341f:	je     0x4033fb
  403421:	cmp    BYTE PTR [r13+0x8],0x0
  403426:	je     0x4033f0
  403428:	mov    rcx,QWORD PTR [rax+0x10]
  40342c:	mov    rdx,r14
  40342f:	call   0x42afb8
  403434:	test   eax,eax
  403436:	je     0x4033f0
  403438:	cmp    DWORD PTR [r13+0x28],0x1
  40343d:	je     0x403458
  40343f:	lea    rdx,[rip+0x2c1ee]        # 0x42f634
  403446:	lea    rcx,[rip+0x2c33b]        # 0x42f788
  40344d:	mov    r8d,0xfd
  403453:	call   0x42d350
  403458:	mov    r15,QWORD PTR [r13+0x0]
  40345c:	xor    ebp,ebp
  40345e:	mov    r12d,0x1
  403464:	jmp    0x4034b9
  403466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403470:	lea    ecx,[rbp-0x1]
  403473:	cmp    cl,0xe
  403476:	ja     0x403512
  40347c:	mov    rax,r12
  40347f:	shl    rax,cl
  403482:	test   eax,0x6065
  403487:	je     0x403512
  40348d:	mov    rdx,QWORD PTR [r13+0x30]
  403491:	mov    rcx,r13
  403494:	call   0x404270
  403499:	test   al,al
  40349b:	je     0x403600
  4034a1:	mov    eax,DWORD PTR [r15+0xec]
  4034a8:	cmp    DWORD PTR [r15+0xe4],eax
  4034af:	mov    rbp,QWORD PTR [r13+0x30]
  4034b3:	jb     0x4035a1
  4034b9:	mov    rcx,r15
  4034bc:	call   0x403ee0
  4034c1:	test   al,al
  4034c3:	jne    0x4035a1
  4034c9:	mov    eax,DWORD PTR [r15+0xec]
  4034d0:	test   eax,eax
  4034d2:	je     0x4035d0
  4034d8:	mov    edx,DWORD PTR [rsi]
  4034da:	mov    r9,QWORD PTR [r15+0xd0]
  4034e1:	test   edx,edx
  4034e3:	movzx  ebp,BYTE PTR [r9]
  4034e7:	je     0x403470
  4034e9:	lea    rcx,[rip+0x2c144]        # 0x42f634
  4034f0:	lea    r8,[rip+0x2c2c7]        # 0x42f7be
  4034f7:	mov    QWORD PTR [rsp+0x20],rax
  4034fc:	mov    edx,0x1d14
  403501:	call   0x40d0b0
  403506:	lea    ecx,[rbp-0x1]
  403509:	cmp    cl,0xe
  40350c:	jbe    0x40347c
  403512:	mov    eax,DWORD PTR [rsi]
  403514:	test   eax,eax
  403516:	jne    0x403613
  40351c:	mov    rcx,QWORD PTR [rsp+0x40]
  403521:	mov    rdx,r13
  403524:	call   0x402f80
  403529:	jmp    0x4033fb
  40352e:	xchg   ax,ax
  403530:	mov    rax,QWORD PTR [r13+0x0]
  403534:	mov    rdx,QWORD PTR [rsp+0x38]
  403539:	mov    rcx,QWORD PTR [rax+0x10]
  40353d:	call   0x42afb8
  403542:	test   eax,eax
  403544:	je     0x4033fb
  40354a:	mov    rcx,QWORD PTR [r13+0x30]
  40354e:	mov    rdx,r13
  403551:	call   0x404270
  403556:	test   al,al
  403558:	jne    0x4033fb
  40355e:	mov    rdx,QWORD PTR [r13+0x30]
  403562:	mov    rcx,QWORD PTR [rsp+0x40]
  403567:	mov    r13,rbx
  40356a:	call   0x402250
  40356f:	test   rbx,rbx
  403572:	jne    0x403407
  403578:	nop    DWORD PTR [rax+rax*1+0x0]
  403580:	add    rsp,0x58
  403584:	pop    rbx
  403585:	pop    rsi
  403586:	pop    rdi
  403587:	pop    rbp
  403588:	pop    r12
  40358a:	pop    r13
  40358c:	pop    r14
  40358e:	pop    r15
  403590:	ret    
  403591:	mov    rax,QWORD PTR [r13+0x0]
  403595:	test   rax,rax
  403598:	je     0x403580
  40359a:	xor    ebx,ebx
  40359c:	jmp    0x403421
  4035a1:	test   rbp,rbp
  4035a4:	je     0x4033f0
  4035aa:	cmp    BYTE PTR [rbp+0x9],0x0
  4035ae:	jne    0x4033f0
  4035b4:	mov    rax,QWORD PTR [rbp+0x0]
  4035b8:	mov    rcx,QWORD PTR [rax+0x10]
  4035bc:	call   0x413370
  4035c1:	jmp    0x4033f0
  4035c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4035d0:	mov    rax,QWORD PTR [rsp+0x48]
  4035d5:	mov    ecx,DWORD PTR [rax]
  4035d7:	test   ecx,ecx
  4035d9:	je     0x40351c
  4035df:	lea    r8,[rip+0x2c1c5]        # 0x42f7ab
  4035e6:	lea    rcx,[rip+0x2c047]        # 0x42f634
  4035ed:	mov    edx,0x1cb5
  4035f2:	call   0x40d350
  4035f7:	jmp    0x40351c
  4035fc:	nop    DWORD PTR [rax+0x0]
  403600:	mov    rdx,QWORD PTR [r13+0x30]
  403604:	mov    rcx,QWORD PTR [rsp+0x40]
  403609:	call   0x402300
  40360e:	jmp    0x4033fb
  403613:	lea    r8,[rip+0x2c1be]        # 0x42f7d8
  40361a:	lea    rcx,[rip+0x2c013]        # 0x42f634
  403621:	mov    edx,0x1e22
  403626:	call   0x40d350
  40362b:	jmp    0x40351c
  403630:	push   r15
  403632:	push   r14
  403634:	push   r13
  403636:	push   r12
  403638:	push   rbp
  403639:	push   rdi
  40363a:	push   rsi
  40363b:	push   rbx
  40363c:	sub    rsp,0x178
  403643:	mov    rax,QWORD PTR [rdx+0x30]
  403647:	mov    rbx,QWORD PTR [rdx]
  40364a:	mov    rdi,QWORD PTR [rdx+0x20]
  40364e:	mov    r12,rdx
  403651:	mov    r14,rcx
  403654:	mov    rsi,QWORD PTR [rax]
  403657:	lea    rax,[rip+0x2c1a2]        # 0x42f800
  40365e:	lea    r13,[rbx+0x70]
  403662:	mov    rbp,QWORD PTR [rsi+0xc8]
  403669:	test   rbp,rbp
  40366c:	cmove  rbp,rax
  403670:	movzx  eax,WORD PTR [rsi]
  403673:	add    DWORD PTR [rcx+0xe8],0x1
  40367a:	mov    WORD PTR [rbx],ax
  40367d:	mov    eax,DWORD PTR [rsi+0x4]
  403680:	mov    DWORD PTR [rbx+0x4],eax
  403683:	mov    eax,DWORD PTR [rsi+0x70]
  403686:	mov    DWORD PTR [rbx+0x70],eax
  403689:	movzx  eax,BYTE PTR [rsi+0x74]
  40368d:	mov    BYTE PTR [r13+0x4],al
  403691:	movzx  eax,BYTE PTR [rsi+0xa0]
  403698:	movzx  edx,BYTE PTR [rbx+0xa0]
  40369f:	mov    rcx,QWORD PTR [rbx+0x8]
  4036a3:	and    eax,0x4
  4036a6:	and    edx,0xfffffffb
  4036a9:	or     eax,edx
  4036ab:	mov    BYTE PTR [rbx+0xa0],al
  4036b1:	call   0x42d6f8
  4036b6:	mov    rcx,QWORD PTR [rsi+0x8]
  4036ba:	call   QWORD PTR [rip+0x3f3ec]        # 0x442aac
  4036c0:	movsxd rdx,DWORD PTR [rsi+0x30]
  4036c4:	mov    rcx,rbx
  4036c7:	mov    QWORD PTR [rbx+0x8],rax
  4036cb:	call   0x410320
  4036d0:	mov    rcx,QWORD PTR [rdi+0xc0]
  4036d7:	mov    eax,DWORD PTR [rsi+0x30]
  4036da:	mov    r14,QWORD PTR [r14+0x20]
  4036de:	cmp    QWORD PTR [rcx],0x0
  4036e2:	mov    DWORD PTR [rbx+0x30],eax
  4036e5:	mov    eax,DWORD PTR [rsi+0xa4]
  4036eb:	mov    DWORD PTR [rbx+0xa8],eax
  4036f1:	jne    0x403900
  4036f7:	test   BYTE PTR [rdi+0xf0],0x2
  4036fe:	je     0x403800
  403704:	lea    r8,[rip+0x2c0fa]        # 0x42f805
  40370b:	mov    r9,r14
  40370e:	mov    edx,0x1
  403713:	mov    rcx,rbx
  403716:	lea    r15,[rsp+0x70]
  40371b:	mov    BYTE PTR [rbx+0xf1],0x4
  403722:	call   0x404370
  403727:	lea    rdx,[rip+0x2c0e2]        # 0x42f810
  40372e:	mov    r8,r14
  403731:	mov    rcx,r15
  403734:	call   0x42d648
  403739:	xor    r9d,r9d
  40373c:	mov    DWORD PTR [rsp+0x38],0x1
  403744:	mov    QWORD PTR [rsp+0x30],0x0
  40374d:	mov    QWORD PTR [rsp+0x28],rbp
  403752:	mov    QWORD PTR [rsp+0x20],r15
  403757:	mov    r8d,0x2
  40375d:	mov    edx,0x1645
  403762:	mov    rcx,rbx
  403765:	call   0x4046e0
  40376a:	test   BYTE PTR [rdi+0xf4],0x2
  403771:	je     0x403a34
  403777:	cmp    WORD PTR [rbx],0x700
  40377c:	ja     0x4039e0
  403782:	mov    rdx,QWORD PTR [rsi+0x8]
  403786:	mov    rcx,rbx
  403789:	lea    rsi,[rsp+0x50]
  40378e:	call   0x4048c0
  403793:	mov    r8d,DWORD PTR [rbx+0x30]
  403797:	lea    rdx,[rip+0x2c0cc]        # 0x42f86a
  40379e:	mov    rcx,rsi
  4037a1:	call   0x42d648
  4037a6:	mov    r9,rsi
  4037a9:	mov    r8,rsi
  4037ac:	mov    edx,0x4
  4037b1:	mov    rcx,rbx
  4037b4:	call   0x404370
  4037b9:	xor    r8d,r8d
  4037bc:	xor    edx,edx
  4037be:	mov    rcx,rbx
  4037c1:	call   0x404bd0
  4037c6:	mov    rcx,rbx
  4037c9:	call   0x424270
  4037ce:	mov    rcx,rdi
  4037d1:	call   0x410150
  4037d6:	mov    QWORD PTR [r12+0x20],0x0
  4037df:	mov    eax,0x1
  4037e4:	add    rsp,0x178
  4037eb:	pop    rbx
  4037ec:	pop    rsi
  4037ed:	pop    rdi
  4037ee:	pop    rbp
  4037ef:	pop    r12
  4037f1:	pop    r13
  4037f3:	pop    r14
  4037f5:	pop    r15
  4037f7:	ret    
  4037f8:	nop    DWORD PTR [rax+rax*1+0x0]
  403800:	mov    rax,QWORD PTR [rdi+0xc0]
  403807:	xor    edx,edx
  403809:	mov    r9d,0xffffffff
  40380f:	mov    rcx,rsi
  403812:	lea    r8,[rax+0x8]
  403816:	call   0x4192e0
  40381b:	lea    ecx,[rax+0x80]
  403821:	movsxd rcx,ecx
  403824:	call   0x42d6b8
  403829:	test   rax,rax
  40382c:	mov    r14,rax
  40382f:	je     0x4039d0
  403835:	xor    r15d,r15d
  403838:	movabs rax,0x49534e4120544553
  403842:	test   r15d,r15d
  403845:	mov    DWORD PTR [r14+0x30],0x464f204c
  40384d:	mov    QWORD PTR [r14],rax
  403850:	movabs rax,0x544c55414645445f
  40385a:	mov    BYTE PTR [r14+0x36],0x0
  40385f:	mov    QWORD PTR [r14+0x8],rax
  403863:	movabs rax,0x45530a46464f2053
  40386d:	mov    QWORD PTR [r14+0x10],rax
  403871:	movabs rax,0x5441434e4f432054
  40387b:	mov    QWORD PTR [r14+0x18],rax
  40387f:	movabs rax,0x49595f4c4c554e5f
  403889:	mov    QWORD PTR [r14+0x20],rax
  40388d:	movabs rax,0x4c554e5f53444c45
  403897:	mov    QWORD PTR [r14+0x28],rax
  40389b:	mov    eax,0xa46
  4038a0:	mov    WORD PTR [r14+0x34],ax
  4038a5:	jne    0x403965
  4038ab:	mov    rdx,r14
  4038ae:	mov    rcx,rsi
  4038b1:	call   0x417c90
  4038b6:	mov    rcx,r14
  4038b9:	mov    DWORD PTR [rsp+0x4c],eax
  4038bd:	call   0x42d6f8
  4038c2:	mov    eax,DWORD PTR [rsp+0x4c]
  4038c6:	test   eax,eax
  4038c8:	js     0x4039d0
  4038ce:	mov    rcx,rsi
  4038d1:	call   0x4231d0
  4038d6:	test   eax,eax
  4038d8:	js     0x4039d0
  4038de:	test   r15d,r15d
  4038e1:	je     0x403a90
  4038e7:	mov    rax,QWORD PTR [rdi+0xc0]
  4038ee:	lea    r14,[rax+0x8]
  4038f2:	jmp    0x403704
  4038f7:	nop    WORD PTR [rax+rax*1+0x0]
  403900:	add    rcx,0x8
  403904:	mov    rdx,r14
  403907:	call   QWORD PTR [rip+0x3f1a7]        # 0x442ab4
  40390d:	test   eax,eax
  40390f:	je     0x4036f7
  403915:	mov    rax,QWORD PTR [rdi+0xc0]
  40391c:	xor    edx,edx
  40391e:	movzx  r15d,BYTE PTR [rdi+0xf0]
  403926:	mov    r9d,0xffffffff
  40392c:	mov    rcx,rsi
  40392f:	lea    r8,[rax+0x8]
  403933:	and    r15d,0x2
  403937:	call   0x4192e0
  40393c:	lea    ecx,[rax+0x80]
  403942:	movsxd rcx,ecx
  403945:	call   0x42d6b8
  40394a:	test   rax,rax
  40394d:	mov    r14,rax
  403950:	je     0x4039d0
  403952:	test   r15b,r15b
  403955:	je     0x403aa0
  40395b:	mov    BYTE PTR [r14],0x0
  40395f:	mov    r15d,0x1
  403965:	mov    rdx,r14
  403968:	mov    ecx,DWORD PTR [rdx]
  40396a:	add    rdx,0x4
  40396e:	lea    eax,[rcx-0x1010101]
  403974:	not    ecx
  403976:	and    eax,ecx
  403978:	and    eax,0x80808080
  40397d:	je     0x403968
  40397f:	mov    ecx,eax
  403981:	mov    r9d,0xffffffff
  403987:	shr    ecx,0x10
  40398a:	test   eax,0x8080
  40398f:	cmove  eax,ecx
  403992:	lea    rcx,[rdx+0x2]
  403996:	cmove  rdx,rcx
  40399a:	add    al,al
  40399c:	mov    rcx,rsi
  40399f:	sbb    rdx,0x3
  4039a3:	sub    rdx,r14
  4039a6:	lea    rax,[r14+rdx*1]
  4039aa:	lea    rdx,[r14+rdx*1+0x4]
  4039af:	mov    DWORD PTR [rax],0x20455355
  4039b5:	mov    BYTE PTR [rax+0x4],0x0
  4039b9:	mov    rax,QWORD PTR [rdi+0xc0]
  4039c0:	lea    r8,[rax+0x8]
  4039c4:	call   0x4192e0
  4039c9:	jmp    0x4038ab
  4039ce:	xchg   ax,ax
  4039d0:	xor    eax,eax
  4039d2:	jmp    0x4037e4
  4039d7:	nop    WORD PTR [rax+rax*1+0x0]
  4039e0:	mov    rcx,rbx
  4039e3:	mov    edx,0xe3
  4039e8:	call   0x4241d0
  4039ed:	mov    rcx,rbx
  4039f0:	mov    edx,0x8
  4039f5:	call   0x424180
  4039fa:	mov    rcx,rbx
  4039fd:	mov    edx,0x7
  403a02:	call   0x4241d0
  403a07:	mov    rcx,rbx
  403a0a:	mov    edx,0x5
  403a0f:	call   0x4241d0
  403a14:	mov    rdx,r13
  403a17:	mov    rcx,rbx
  403a1a:	mov    r8d,0x5
  403a20:	call   0x423f10
  403a25:	xor    edx,edx
  403a27:	mov    rcx,rbx
  403a2a:	call   0x4241d0
  403a2f:	jmp    0x403782
  403a34:	lea    r9,[rip+0x2bdf7]        # 0x42f832
  403a3b:	xor    r8d,r8d
  403a3e:	mov    rcx,rbx
  403a41:	mov    edx,0x2
  403a46:	call   0x404370
  403a4b:	lea    rax,[rip+0x2bdee]        # 0x42f840
  403a52:	mov    DWORD PTR [rsp+0x38],0x1
  403a5a:	mov    QWORD PTR [rsp+0x30],0x0
  403a63:	mov    QWORD PTR [rsp+0x28],rbp
  403a68:	xor    r9d,r9d
  403a6b:	mov    r8d,0x1
  403a71:	mov    QWORD PTR [rsp+0x20],rax
  403a76:	mov    edx,0x1647
  403a7b:	mov    rcx,rbx
  403a7e:	call   0x4046e0
  403a83:	jmp    0x403777
  403a88:	nop    DWORD PTR [rax+rax*1+0x0]
  403a90:	mov    r14,QWORD PTR [rsi+0x48]
  403a94:	jmp    0x403704
  403a99:	nop    DWORD PTR [rax+0x0]
  403aa0:	mov    r15d,0x1
  403aa6:	jmp    0x403838
  403aab:	nop    DWORD PTR [rax+rax*1+0x0]
  403ab0:	push   rsi
  403ab1:	push   rbx
  403ab2:	sub    rsp,0x28
  403ab6:	mov    rsi,QWORD PTR [rcx+0x10]
  403aba:	mov    rdx,QWORD PTR [rcx+0x18]
  403abe:	mov    rbx,rcx
  403ac1:	mov    rcx,rsi
  403ac4:	call   0x403630
  403ac9:	lea    r8,[rip+0xfffffffffffff260]        # 0x402d30
  403ad0:	mov    BYTE PTR [rbx+0x20],al
  403ad3:	mov    rdx,rbx
  403ad6:	mov    rcx,rsi
  403ad9:	call   0x4041f0
  403ade:	xor    eax,eax
  403ae0:	add    rsp,0x28
  403ae4:	pop    rbx
  403ae5:	pop    rsi
  403ae6:	ret    
  403ae7:	nop    WORD PTR [rax+rax*1+0x0]
  403af0:	push   rdi
  403af1:	push   rsi
  403af2:	push   rbx
  403af3:	sub    rsp,0x20
  403af7:	mov    rdi,QWORD PTR [rip+0x38332]        # 0x43be30
  403afe:	mov    rbx,rdx
  403b01:	mov    rsi,rcx
  403b04:	mov    edx,DWORD PTR [rdi]
  403b06:	test   edx,edx
  403b08:	jne    0x403bd0
  403b0e:	cmp    QWORD PTR [rbx+0x30],0x0
  403b13:	je     0x403b2e
  403b15:	lea    rdx,[rip+0x2bb18]        # 0x42f634
  403b1c:	lea    rcx,[rip+0x2bd5d]        # 0x42f880
  403b23:	mov    r8d,0x1f7
  403b29:	call   0x42d350
  403b2e:	cmp    QWORD PTR [rbx+0x20],0x0
  403b33:	je     0x403bf0
  403b39:	mov    DWORD PTR [rbx+0x28],0x1
  403b40:	mov    rdx,rbx
  403b43:	mov    rcx,rsi
  403b46:	call   0x402a50
  403b4b:	test   rax,rax
  403b4e:	je     0x403b60
  403b50:	add    rsp,0x20
  403b54:	pop    rbx
  403b55:	pop    rsi
  403b56:	pop    rdi
  403b57:	ret    
  403b58:	nop    DWORD PTR [rax+rax*1+0x0]
  403b60:	mov    eax,DWORD PTR [rdi]
  403b62:	test   eax,eax
  403b64:	jne    0x403c10
  403b6a:	mov    rdx,QWORD PTR [rbx+0x18]
  403b6e:	mov    DWORD PTR [rbx+0x28],0x0
  403b75:	mov    BYTE PTR [rbx+0x8],0x0
  403b79:	mov    BYTE PTR [rbx+0x9],0x0
  403b7d:	mov    rax,QWORD PTR [rbx+0x10]
  403b81:	test   rdx,rdx
  403b84:	je     0x403b89
  403b86:	mov    QWORD PTR [rdx],rax
  403b89:	test   rax,rax
  403b8c:	je     0x403b92
  403b8e:	mov    QWORD PTR [rax+0x8],rdx
  403b92:	mov    QWORD PTR [rbx+0x18],0x0
  403b9a:	mov    QWORD PTR [rbx+0x10],0x0
  403ba2:	lea    rax,[rbx+0x10]
  403ba6:	mov    rdx,QWORD PTR [rsi+0xc0]
  403bad:	mov    QWORD PTR [rdx],rax
  403bb0:	mov    QWORD PTR [rbx+0x18],rdx
  403bb4:	lea    rdx,[rsi+0xb8]
  403bbb:	mov    QWORD PTR [rbx+0x10],rdx
  403bbf:	mov    QWORD PTR [rsi+0xc0],rax
  403bc6:	add    rsp,0x20
  403bca:	pop    rbx
  403bcb:	pop    rsi
  403bcc:	pop    rdi
  403bcd:	ret    
  403bce:	xchg   ax,ax
  403bd0:	lea    r8,[rip+0x2bc96]        # 0x42f86d
  403bd7:	lea    rcx,[rip+0x2ba56]        # 0x42f634
  403bde:	mov    edx,0x1f57
  403be3:	call   0x40d350
  403be8:	jmp    0x403b0e
  403bed:	nop    DWORD PTR [rax]
  403bf0:	lea    rdx,[rip+0x2ba3d]        # 0x42f634
  403bf7:	lea    rcx,[rip+0x2bca1]        # 0x42f89f
  403bfe:	mov    r8d,0x1f8
  403c04:	call   0x42d350
  403c09:	jmp    0x403b39
  403c0e:	xchg   ax,ax
  403c10:	lea    r8,[rip+0x2bc99]        # 0x42f8b0
  403c17:	lea    rcx,[rip+0x2ba16]        # 0x42f634
  403c1e:	mov    edx,0x2015
  403c23:	call   0x40d350
  403c28:	jmp    0x403b6a
  403c2d:	nop    DWORD PTR [rax]
  403c30:	push   rbx
  403c31:	sub    rsp,0x20
  403c35:	mov    rbx,QWORD PTR [rcx+0x18]
  403c39:	mov    rax,rcx
  403c3c:	mov    rcx,QWORD PTR [rcx+0x10]
  403c40:	cmp    BYTE PTR [rax+0x20],0x0
  403c44:	je     0x403c70
  403c46:	mov    BYTE PTR [rbx+0x8],0x1
  403c4a:	mov    rdx,rbx
  403c4d:	call   0x403af0
  403c52:	mov    rax,QWORD PTR [rip+0x381d7]        # 0x43be30
  403c59:	mov    eax,DWORD PTR [rax]
  403c5b:	test   eax,eax
  403c5d:	jne    0x403ca4
  403c5f:	cmp    QWORD PTR [rbx+0x20],0x0
  403c64:	je     0x403c80
  403c66:	add    rsp,0x20
  403c6a:	pop    rbx
  403c6b:	ret    
  403c6c:	nop    DWORD PTR [rax+0x0]
  403c70:	mov    rdx,rbx
  403c73:	add    rsp,0x20
  403c77:	pop    rbx
  403c78:	jmp    0x402f80
  403c7d:	nop    DWORD PTR [rax]
  403c80:	cmp    DWORD PTR [rbx+0x28],0x1
  403c84:	je     0x403c66
  403c86:	lea    rdx,[rip+0x2b9a7]        # 0x42f634
  403c8d:	lea    rcx,[rip+0x2bc5c]        # 0x42f8f0
  403c94:	mov    r8d,0x8a
  403c9a:	add    rsp,0x20
  403c9e:	pop    rbx
  403c9f:	jmp    0x42d350
  403ca4:	mov    r9d,DWORD PTR [rbx+0x28]
  403ca8:	lea    r8,[rip+0x2bc31]        # 0x42f8e0
  403caf:	lea    rcx,[rip+0x2b97e]        # 0x42f634
  403cb6:	mov    edx,0x885
  403cbb:	call   0x40d350
  403cc0:	jmp    0x403c5f
  403cc2:	nop    DWORD PTR [rax+0x0]
  403cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403cd0:	push   rdi
  403cd1:	push   rsi
  403cd2:	push   rbx
  403cd3:	sub    rsp,0x30
  403cd7:	mov    rsi,rcx
  403cda:	mov    rdi,rdx
  403cdd:	mov    ecx,0x1
  403ce2:	mov    edx,0x28
  403ce7:	call   0x42d740
  403cec:	test   rax,rax
  403cef:	mov    rbx,rax
  403cf2:	je     0x403d80
  403cf8:	mov    QWORD PTR [rax+0x10],rsi
  403cfc:	mov    QWORD PTR [rax+0x18],rdi
  403d00:	xor    edx,edx
  403d02:	xor    ecx,ecx
  403d04:	mov    QWORD PTR [rsp+0x28],0x0
  403d0d:	mov    DWORD PTR [rsp+0x20],0x0
  403d15:	mov    r9,rax
  403d18:	lea    r8,[rip+0xfffffffffffffd91]        # 0x403ab0
  403d1f:	call   QWORD PTR [rip+0x3ebbf]        # 0x4428e4
  403d25:	test   rax,rax
  403d28:	je     0x403d32
  403d2a:	add    rsp,0x30
  403d2e:	pop    rbx
  403d2f:	pop    rsi
  403d30:	pop    rdi
  403d31:	ret    
  403d32:	xor    ecx,ecx
  403d34:	call   QWORD PTR [rip+0x3eb9a]        # 0x4428d4
  403d3a:	mov    rdx,QWORD PTR [rdi+0x30]
  403d3e:	mov    rcx,rsi
  403d41:	call   0x402250
  403d46:	mov    rcx,rbx
  403d49:	call   0x42d6f8
  403d4e:	call   QWORD PTR [rip+0x3ecd0]        # 0x442a24
  403d54:	lea    rcx,[rip+0x2ba16]        # 0x42f771
  403d5b:	lea    r9,[rax+0x60]
  403d5f:	mov    r8d,0x16
  403d65:	mov    edx,0x1
  403d6a:	add    rsp,0x30
  403d6e:	pop    rbx
  403d6f:	pop    rsi
  403d70:	pop    rdi
  403d71:	jmp    0x42d6e8
  403d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d80:	mov    rdx,QWORD PTR [rdi+0x30]
  403d84:	mov    rcx,rsi
  403d87:	add    rsp,0x30
  403d8b:	pop    rbx
  403d8c:	pop    rsi
  403d8d:	pop    rdi
  403d8e:	jmp    0x402250
  403d93:	nop
  403d94:	nop
  403d95:	nop
  403d96:	nop
  403d97:	nop
  403d98:	nop
  403d99:	nop
  403d9a:	nop
  403d9b:	nop
  403d9c:	nop
  403d9d:	nop
  403d9e:	nop
  403d9f:	nop
  403da0:	push   rdi
  403da1:	push   rsi
  403da2:	push   rbx
  403da3:	sub    rsp,0x20
  403da7:	mov    rax,QWORD PTR [rcx+0x30]
  403dab:	mov    rbx,QWORD PTR [rip+0x3ec72]        # 0x442a24
  403db2:	mov    rsi,rcx
  403db5:	lea    rdi,[rax+0x8]
  403db9:	call   rbx
  403dbb:	lea    rdx,[rip+0x2bb6e]        # 0x42f930
  403dc2:	lea    rcx,[rax+0x60]
  403dc6:	mov    r8,rdi
  403dc9:	call   0x42d710
  403dce:	mov    rax,QWORD PTR [rsi+0x70]
  403dd2:	lea    rdi,[rax+0x8]
  403dd6:	call   rbx
  403dd8:	lea    rdx,[rip+0x2bb5a]        # 0x42f939
  403ddf:	lea    rcx,[rax+0x60]
  403de3:	mov    r8,rdi
  403de6:	call   0x42d710
  403deb:	mov    rax,QWORD PTR [rsi+0x78]
  403def:	lea    rdi,[rax+0x8]
  403df3:	call   rbx
  403df5:	lea    rdx,[rip+0x2bb46]        # 0x42f942
  403dfc:	lea    rcx,[rax+0x60]
  403e00:	mov    r8,rdi
  403e03:	call   0x42d710
  403e08:	mov    rax,QWORD PTR [rsi+0x68]
  403e0c:	lea    rdi,[rax+0x8]
  403e10:	call   rbx
  403e12:	lea    rdx,[rip+0x2bb32]        # 0x42f94b
  403e19:	lea    rcx,[rax+0x60]
  403e1d:	mov    r8,rdi
  403e20:	call   0x42d710
  403e25:	mov    rax,QWORD PTR [rsi]
  403e28:	lea    rdi,[rax+0x8]
  403e2c:	call   rbx
  403e2e:	lea    rdx,[rip+0x2bb1f]        # 0x42f954
  403e35:	lea    rcx,[rax+0x60]
  403e39:	mov    r8,rdi
  403e3c:	call   0x42d710
  403e41:	movzx  edi,WORD PTR [rsi+0xc]
  403e45:	call   rbx
  403e47:	lea    rcx,[rax+0x60]
  403e4b:	mov    rdx,rdi
  403e4e:	movzx  r9d,dil
  403e52:	movzx  edx,dh
  403e55:	mov    r8d,edx
  403e58:	lea    rdx,[rip+0x2bafe]        # 0x42f95d
  403e5f:	call   0x42d710
  403e64:	mov    rax,QWORD PTR [rsi+0x88]
  403e6b:	lea    rdi,[rax+0x8]
  403e6f:	call   rbx
  403e71:	lea    rdx,[rip+0x2baf1]        # 0x42f969
  403e78:	lea    rcx,[rax+0x60]
  403e7c:	mov    r8,rdi
  403e7f:	call   0x42d710
  403e84:	mov    rax,QWORD PTR [rsi+0x18]
  403e88:	lea    rdi,[rax+0x8]
  403e8c:	call   rbx
  403e8e:	lea    rdx,[rip+0x2badd]        # 0x42f972
  403e95:	lea    rcx,[rax+0x60]
  403e99:	mov    r8,rdi
  403e9c:	call   0x42d710
  403ea1:	mov    rax,QWORD PTR [rsi+0x20]
  403ea5:	lea    rdi,[rax+0x8]
  403ea9:	call   rbx
  403eab:	lea    rdx,[rip+0x2bac9]        # 0x42f97b
  403eb2:	lea    rcx,[rax+0x60]
  403eb6:	mov    r8,rdi
  403eb9:	call   0x42d710
  403ebe:	mov    esi,DWORD PTR [rsi+0x10]
  403ec1:	call   rbx
  403ec3:	lea    rdx,[rip+0x2baba]        # 0x42f984
  403eca:	lea    rcx,[rax+0x60]
  403ece:	mov    r8d,esi
  403ed1:	add    rsp,0x20
  403ed5:	pop    rbx
  403ed6:	pop    rsi
  403ed7:	pop    rdi
  403ed8:	jmp    0x42d710
  403edd:	nop    DWORD PTR [rax]
  403ee0:	push   rdi
  403ee1:	push   rsi
  403ee2:	push   rbx
  403ee3:	sub    rsp,0x40
  403ee7:	mov    rdi,QWORD PTR [rip+0x37f42]        # 0x43be30
  403eee:	mov    rbx,rcx
  403ef1:	mov    r8d,DWORD PTR [rdi]
  403ef4:	test   r8d,r8d
  403ef7:	jne    0x404150
  403efd:	mov    eax,DWORD PTR [rbx+0xec]
  403f03:	cmp    eax,0x3
  403f06:	jbe    0x404010
  403f0c:	mov    rcx,QWORD PTR [rbx+0xd0]
  403f13:	movzx  edx,BYTE PTR [rcx+0x2]
  403f17:	movzx  ecx,BYTE PTR [rcx+0x3]
  403f1b:	shl    edx,0x8
  403f1e:	add    edx,ecx
  403f20:	cmp    edx,0x7
  403f23:	jbe    0x40409a
  403f29:	cmp    eax,edx
  403f2b:	jb     0x404010
  403f31:	cmp    eax,DWORD PTR [rbx+0xe4]
  403f37:	ja     0x404124
  403f3d:	xor    eax,eax
  403f3f:	mov    DWORD PTR [rbx+0xe4],0x0
  403f49:	mov    DWORD PTR [rbx+0xec],0x0
  403f53:	cmp    eax,0x3
  403f56:	jbe    0x404019
  403f5c:	nop    DWORD PTR [rax+0x0]
  403f60:	mov    rdx,QWORD PTR [rbx+0xd0]
  403f67:	movzx  esi,BYTE PTR [rdx+0x2]
  403f6b:	movzx  edx,BYTE PTR [rdx+0x3]
  403f6f:	shl    esi,0x8
  403f72:	add    esi,edx
  403f74:	cmp    esi,0x7
  403f77:	jbe    0x40409a
  403f7d:	mov    ecx,DWORD PTR [rdi]
  403f7f:	test   ecx,ecx
  403f81:	jne    0x404100
  403f87:	mov    rcx,QWORD PTR [rbx+0x100]
  403f8e:	cmp    esi,DWORD PTR [rcx+0x10]
  403f91:	ja     0x4040b0
  403f97:	mov    eax,DWORD PTR [rbx+0xec]
  403f9d:	cmp    esi,eax
  403f9f:	jbe    0x404124
  403fa5:	cmp    eax,esi
  403fa7:	jb     0x403fc2
  403fa9:	lea    rdx,[rip+0x2b9f6]        # 0x42f9a6
  403fb0:	lea    rcx,[rip+0x2ba0f]        # 0x42f9c6
  403fb7:	mov    r8d,0x72
  403fbd:	call   0x42d350
  403fc2:	mov    rax,QWORD PTR [rbx+0x100]
  403fc9:	mov    edx,DWORD PTR [rax+0x10]
  403fcc:	cmp    edx,esi
  403fce:	jb     0x40402c
  403fd0:	mov    eax,DWORD PTR [rbx+0xec]
  403fd6:	cmp    eax,edx
  403fd8:	jae    0x404059
  403fda:	mov    edx,eax
  403fdc:	add    rdx,QWORD PTR [rbx+0xd0]
  403fe3:	mov    ecx,DWORD PTR [rbx+0x10]
  403fe6:	sub    esi,eax
  403fe8:	mov    r8d,esi
  403feb:	call   0x42d5c8
  403ff0:	mov    edx,DWORD PTR [rdi]
  403ff2:	test   edx,edx
  403ff4:	jne    0x4040d3
  403ffa:	test   eax,eax
  403ffc:	je     0x40409a
  404002:	js     0x404080
  404004:	add    eax,DWORD PTR [rbx+0xec]
  40400a:	mov    DWORD PTR [rbx+0xec],eax
  404010:	cmp    eax,0x3
  404013:	ja     0x403f60
  404019:	mov    rax,QWORD PTR [rbx+0x100]
  404020:	mov    esi,0x8
  404025:	mov    edx,DWORD PTR [rax+0x10]
  404028:	cmp    edx,esi
  40402a:	jae    0x403fd0
  40402c:	lea    rdx,[rip+0x2b973]        # 0x42f9a6
  404033:	lea    rcx,[rip+0x2b9a6]        # 0x42f9e0
  40403a:	mov    r8d,0x73
  404040:	call   0x42d350
  404045:	mov    rax,QWORD PTR [rbx+0x100]
  40404c:	mov    edx,DWORD PTR [rax+0x10]
  40404f:	mov    eax,DWORD PTR [rbx+0xec]
  404055:	cmp    eax,edx
  404057:	jb     0x403fda
  404059:	lea    rdx,[rip+0x2b946]        # 0x42f9a6
  404060:	lea    rcx,[rip+0x2b9a9]        # 0x42fa10
  404067:	mov    r8d,0x74
  40406d:	call   0x42d350
  404072:	mov    eax,DWORD PTR [rbx+0xec]
  404078:	jmp    0x403fda
  40407d:	nop    DWORD PTR [rax]
  404080:	call   QWORD PTR [rip+0x3ec5e]        # 0x442ce4
  404086:	cmp    eax,0x4
  404089:	je     0x404130
  40408f:	cmp    eax,0x2733
  404094:	je     0x404140
  40409a:	mov    DWORD PTR [rbx+0xec],0x0
  4040a4:	xor    eax,eax
  4040a6:	add    rsp,0x40
  4040aa:	pop    rbx
  4040ab:	pop    rsi
  4040ac:	pop    rdi
  4040ad:	ret    
  4040ae:	xchg   ax,ax
  4040b0:	mov    edx,esi
  4040b2:	call   0x4102c0
  4040b7:	test   rax,rax
  4040ba:	je     0x40409a
  4040bc:	lea    rdx,[rax+0x14]
  4040c0:	mov    QWORD PTR [rbx+0x100],rax
  4040c7:	mov    QWORD PTR [rbx+0xd0],rdx
  4040ce:	jmp    0x403f97
  4040d3:	lea    r8,[rip+0x2b95f]        # 0x42fa39
  4040da:	lea    rcx,[rip+0x2b8c5]        # 0x42f9a6
  4040e1:	mov    r9d,eax
  4040e4:	mov    edx,0x775
  4040e9:	mov    DWORD PTR [rsp+0x3c],eax
  4040ed:	call   0x40d350
  4040f2:	mov    eax,DWORD PTR [rsp+0x3c]
  4040f6:	jmp    0x403ffa
  4040fb:	nop    DWORD PTR [rax+rax*1+0x0]
  404100:	lea    r8,[rip+0x2b8a6]        # 0x42f9ad
  404107:	lea    rcx,[rip+0x2b898]        # 0x42f9a6
  40410e:	mov    DWORD PTR [rsp+0x20],eax
  404112:	mov    r9d,esi
  404115:	mov    edx,0x625
  40411a:	call   0x40d350
  40411f:	jmp    0x403f87
  404124:	xor    eax,eax
  404126:	add    rsp,0x40
  40412a:	pop    rbx
  40412b:	pop    rsi
  40412c:	pop    rdi
  40412d:	ret    
  40412e:	xchg   ax,ax
  404130:	mov    eax,DWORD PTR [rbx+0xec]
  404136:	jmp    0x404010
  40413b:	nop    DWORD PTR [rax+rax*1+0x0]
  404140:	mov    eax,0x1
  404145:	jmp    0x4040a6
  40414a:	nop    WORD PTR [rax+rax*1+0x0]
  404150:	mov    eax,DWORD PTR [rcx+0xe4]
  404156:	lea    r8,[rip+0x2b830]        # 0x42f98d
  40415d:	mov    edx,0x475
  404162:	mov    DWORD PTR [rsp+0x20],eax
  404166:	mov    r9d,DWORD PTR [rcx+0xec]
  40416d:	lea    rcx,[rip+0x2b832]        # 0x42f9a6
  404174:	call   0x40d350
  404179:	jmp    0x403efd
  40417e:	xchg   ax,ax
  404180:	push   r12
  404182:	push   rbp
  404183:	push   rdi
  404184:	push   rsi
  404185:	push   rbx
  404186:	sub    rsp,0x20
  40418a:	test   r8,r8
  40418d:	mov    rdi,rcx
  404190:	mov    r12,rdx
  404193:	mov    rbx,r8
  404196:	je     0x4041ea
  404198:	mov    rsi,rdx
  40419b:	mov    rbp,QWORD PTR [rip+0x3ebf2]        # 0x442d94
  4041a2:	jmp    0x4041ae
  4041a4:	cdqe   
  4041a6:	add    rsi,rax
  4041a9:	sub    rbx,rax
  4041ac:	je     0x4041da
  4041ae:	xor    r9d,r9d
  4041b1:	mov    r8d,ebx
  4041b4:	mov    rdx,rsi
  4041b7:	mov    rcx,rdi
  4041ba:	call   rbp
  4041bc:	test   eax,eax
  4041be:	jg     0x4041a4
  4041c0:	call   QWORD PTR [rip+0x3e896]        # 0x442a5c
  4041c6:	mov    edx,DWORD PTR [rax]
  4041c8:	cmp    edx,0x4
  4041cb:	je     0x4041da
  4041cd:	cmp    edx,0x2733
  4041d3:	mov    eax,0xffffffff
  4041d8:	jne    0x4041df
  4041da:	mov    eax,esi
  4041dc:	sub    eax,r12d
  4041df:	add    rsp,0x20
  4041e3:	pop    rbx
  4041e4:	pop    rsi
  4041e5:	pop    rdi
  4041e6:	pop    rbp
  4041e7:	pop    r12
  4041e9:	ret    
  4041ea:	xor    eax,eax
  4041ec:	jmp    0x4041df
  4041ee:	xchg   ax,ax
  4041f0:	push   rbp
  4041f1:	push   rdi
  4041f2:	push   rsi
  4041f3:	push   rbx
  4041f4:	sub    rsp,0x28
  4041f8:	mov    eax,DWORD PTR [rcx+0x40]
  4041fb:	mov    rbx,rcx
  4041fe:	mov    rsi,rdx
  404201:	mov    rbp,r8
  404204:	test   eax,eax
  404206:	jne    0x404260
  404208:	lea    rcx,[rcx+0x38]
  40420c:	lea    rdi,[rbx+0x48]
  404210:	call   0x424920
  404215:	mov    rax,QWORD PTR [rbx+0x88]
  40421c:	mov    QWORD PTR [rsi+0x8],rbp
  404220:	mov    rcx,rdi
  404223:	mov    QWORD PTR [rsi],rax
  404226:	mov    QWORD PTR [rbx+0x88],rsi
  40422d:	call   QWORD PTR [rip+0x3e731]        # 0x442964
  404233:	mov    rcx,QWORD PTR [rbx+0x80]
  40423a:	mov    rax,QWORD PTR [rip+0x3eb53]        # 0x442d94
  404241:	lea    rdx,[rip+0x2b7fc]        # 0x42fa44
  404248:	xor    r9d,r9d
  40424b:	mov    r8d,0x1
  404251:	add    rsp,0x28
  404255:	pop    rbx
  404256:	pop    rsi
  404257:	pop    rdi
  404258:	pop    rbp
  404259:	rex.W jmp rax
  40425c:	nop    DWORD PTR [rax+0x0]
  404260:	lea    rdi,[rcx+0x48]
  404264:	mov    rcx,rdi
  404267:	call   QWORD PTR [rip+0x3e687]        # 0x4428f4
  40426d:	jmp    0x404215
  40426f:	nop
  404270:	push   rbp
  404271:	push   rdi
  404272:	push   rsi
  404273:	push   rbx
  404274:	sub    rsp,0x28
  404278:	mov    rbp,QWORD PTR [rip+0x37bb1]        # 0x43be30
  40427f:	mov    rdi,rdx
  404282:	mov    rsi,rcx
  404285:	mov    edx,DWORD PTR [rbp+0x0]
  404288:	test   edx,edx
  40428a:	jne    0x404320
  404290:	mov    rbx,QWORD PTR [rcx]
  404293:	mov    eax,DWORD PTR [rbx+0xe4]
  404299:	mov    r8d,DWORD PTR [rbx+0xec]
  4042a0:	mov    r9,rax
  4042a3:	add    rax,QWORD PTR [rbx+0xd0]
  4042aa:	sub    r8d,r9d
  4042ad:	mov    rdx,rax
  4042b0:	mov    rax,QWORD PTR [rdi]
  4042b3:	mov    rcx,QWORD PTR [rax+0x10]
  4042b7:	call   0x404180
  4042bc:	test   eax,eax
  4042be:	js     0x404310
  4042c0:	add    eax,DWORD PTR [rbx+0xe4]
  4042c6:	cmp    eax,DWORD PTR [rbx+0xec]
  4042cc:	mov    DWORD PTR [rbx+0xe4],eax
  4042d2:	jb     0x4042f0
  4042d4:	mov    eax,0x1
  4042d9:	mov    BYTE PTR [rdi+0x9],0x0
  4042dd:	mov    BYTE PTR [rsi+0x8],0x1
  4042e1:	add    rsp,0x28
  4042e5:	pop    rbx
  4042e6:	pop    rsi
  4042e7:	pop    rdi
  4042e8:	pop    rbp
  4042e9:	ret    
  4042ea:	nop    WORD PTR [rax+rax*1+0x0]
  4042f0:	mov    eax,0x1
  4042f5:	mov    BYTE PTR [rdi+0x9],0x1
  4042f9:	mov    BYTE PTR [rsi+0x8],0x0
  4042fd:	add    rsp,0x28
  404301:	pop    rbx
  404302:	pop    rsi
  404303:	pop    rdi
  404304:	pop    rbp
  404305:	ret    
  404306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404310:	xor    eax,eax
  404312:	add    rsp,0x28
  404316:	pop    rbx
  404317:	pop    rsi
  404318:	pop    rdi
  404319:	pop    rbp
  40431a:	ret    
  40431b:	nop    DWORD PTR [rax+rax*1+0x0]
  404320:	lea    r8,[rip+0x2b71f]        # 0x42fa46
  404327:	lea    rcx,[rip+0x2b678]        # 0x42f9a6
  40432e:	mov    edx,0xb55
  404333:	call   0x40d350
  404338:	mov    eax,DWORD PTR [rbp+0x0]
  40433b:	mov    rbx,QWORD PTR [rsi]
  40433e:	test   eax,eax
  404340:	je     0x404293
  404346:	mov    r9d,DWORD PTR [rbx+0xec]
  40434d:	lea    r8,[rip+0x2b702]        # 0x42fa56
  404354:	lea    rcx,[rip+0x2b64b]        # 0x42f9a6
  40435b:	mov    edx,0xb85
  404360:	call   0x40d350
  404365:	jmp    0x404293
  40436a:	nop
  40436b:	nop
  40436c:	nop
  40436d:	nop
  40436e:	nop
  40436f:	nop
  404370:	push   r13
  404372:	push   r12
  404374:	push   rbp
  404375:	push   rdi
  404376:	push   rsi
  404377:	push   rbx
  404378:	sub    rsp,0x28
  40437c:	lea    rax,[rip+0x2b6fd]        # 0x42fa80
  404383:	test   r8,r8
  404386:	mov    rbx,r8
  404389:	mov    rsi,rcx
  40438c:	cmove  rbx,rax
  404390:	cmp    edx,0x5
  404393:	mov    ebp,edx
  404395:	mov    rdi,r9
  404398:	je     0x404483
  40439e:	jg     0x404460
  4043a4:	cmp    edx,0x1
  4043a7:	jl     0x404465
  4043ad:	mov    edx,0xe3
  4043b2:	call   0x4241d0
  4043b7:	cmp    WORD PTR [rsi],0x700
  4043bc:	mov    rcx,rbx
  4043bf:	sbb    r13d,r13d
  4043c2:	add    r13d,0x2
  4043c6:	call   0x42d610
  4043cb:	mov    rcx,rdi
  4043ce:	mov    r12,rax
  4043d1:	call   0x42d610
  4043d6:	mov    edx,r13d
  4043d9:	add    r12,rax
  4043dc:	mov    rcx,rsi
  4043df:	imul   edx,r12d
  4043e3:	add    edx,0x3
  4043e6:	movsx  edx,dx
  4043e9:	call   0x424180
  4043ee:	mov    edx,ebp
  4043f0:	mov    rcx,rsi
  4043f3:	call   0x4241d0
  4043f8:	mov    rcx,rdi
  4043fb:	call   0x42d610
  404400:	mov    rcx,rsi
  404403:	movzx  edx,al
  404406:	call   0x4241d0
  40440b:	mov    rcx,rdi
  40440e:	call   0x42d610
  404413:	mov    rdx,rdi
  404416:	mov    r8d,eax
  404419:	mov    rcx,rsi
  40441c:	call   0x423fa0
  404421:	mov    rcx,rbx
  404424:	call   0x42d610
  404429:	mov    rcx,rsi
  40442c:	movzx  edx,al
  40442f:	call   0x4241d0
  404434:	mov    rcx,rbx
  404437:	call   0x42d610
  40443c:	mov    rdx,rbx
  40443f:	mov    r8d,eax
  404442:	mov    rcx,rsi
  404445:	add    rsp,0x28
  404449:	pop    rbx
  40444a:	pop    rsi
  40444b:	pop    rdi
  40444c:	pop    rbp
  40444d:	pop    r12
  40444f:	pop    r13
  404451:	jmp    0x423fa0
  404456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404460:	cmp    edx,0x7
  404463:	je     0x404483
  404465:	mov    rax,QWORD PTR [rip+0x379c4]        # 0x43be30
  40446c:	mov    eax,DWORD PTR [rax]
  40446e:	test   eax,eax
  404470:	jne    0x404520
  404476:	add    rsp,0x28
  40447a:	pop    rbx
  40447b:	pop    rsi
  40447c:	pop    rdi
  40447d:	pop    rbp
  40447e:	pop    r12
  404480:	pop    r13
  404482:	ret    
  404483:	mov    edx,0xe3
  404488:	mov    rcx,rsi
  40448b:	call   0x4241d0
  404490:	mov    rcx,rdi
  404493:	call   0x42d610
  404498:	mov    rcx,rbx
  40449b:	mov    r12,rax
  40449e:	call   0x42d610
  4044a3:	lea    edx,[r12+rax*1+0x3]
  4044a8:	mov    rcx,rsi
  4044ab:	movsx  edx,dx
  4044ae:	call   0x424180
  4044b3:	mov    edx,ebp
  4044b5:	mov    rcx,rsi
  4044b8:	call   0x4241d0
  4044bd:	mov    rcx,rdi
  4044c0:	call   0x42d610
  4044c5:	mov    rcx,rsi
  4044c8:	movzx  edx,al
  4044cb:	call   0x4241d0
  4044d0:	mov    rcx,rdi
  4044d3:	call   0x42d610
  4044d8:	mov    rdx,rdi
  4044db:	mov    r8,rax
  4044de:	mov    rcx,rsi
  4044e1:	call   0x423f10
  4044e6:	mov    rcx,rbx
  4044e9:	call   0x42d610
  4044ee:	mov    rcx,rsi
  4044f1:	movzx  edx,al
  4044f4:	call   0x4241d0
  4044f9:	mov    rcx,rbx
  4044fc:	call   0x42d610
  404501:	mov    rdx,rbx
  404504:	mov    r8,rax
  404507:	mov    rcx,rsi
  40450a:	add    rsp,0x28
  40450e:	pop    rbx
  40450f:	pop    rsi
  404510:	pop    rdi
  404511:	pop    rbp
  404512:	pop    r12
  404514:	pop    r13
  404516:	jmp    0x423f10
  40451b:	nop    DWORD PTR [rax+rax*1+0x0]
  404520:	lea    r8,[rip+0x2b561]        # 0x42fa88
  404527:	lea    rcx,[rip+0x2b595]        # 0x42fac3
  40452e:	mov    r9d,ebp
  404531:	mov    edx,0x543
  404536:	add    rsp,0x28
  40453a:	pop    rbx
  40453b:	pop    rsi
  40453c:	pop    rdi
  40453d:	pop    rbp
  40453e:	pop    r12
  404540:	pop    r13
  404542:	jmp    0x40d350
  404547:	nop    WORD PTR [rax+rax*1+0x0]
  404550:	push   r15
  404552:	push   r14
  404554:	push   r13
  404556:	push   r12
  404558:	push   rbp
  404559:	push   rdi
  40455a:	push   rsi
  40455b:	push   rbx
  40455c:	sub    rsp,0x38
  404560:	mov    r12,QWORD PTR [rsp+0xb0]
  404568:	mov    rdi,QWORD PTR [rsp+0xa0]
  404570:	mov    rsi,QWORD PTR [rsp+0xa8]
  404578:	mov    r13d,edx
  40457b:	mov    edx,0xe5
  404580:	mov    rbx,rcx
  404583:	mov    r14d,r8d
  404586:	mov    DWORD PTR [rsp+0x2c],r9d
  40458b:	call   0x4241d0
  404590:	mov    rcx,r12
  404593:	call   0x42d610
  404598:	mov    rcx,rdi
  40459b:	mov    rbp,rax
  40459e:	call   0x42d610
  4045a3:	mov    rcx,rsi
  4045a6:	mov    r15,rax
  4045a9:	call   0x42d610
  4045ae:	mov    rdx,rax
  4045b1:	lea    eax,[rbp+r15*1+0x11]
  4045b6:	mov    rcx,rbx
  4045b9:	add    eax,edx
  4045bb:	movsx  edx,ax
  4045be:	call   0x424180
  4045c3:	movsx  edx,r13w
  4045c7:	mov    rcx,rbx
  4045ca:	call   0x424180
  4045cf:	xor    edx,edx
  4045d1:	mov    rcx,rbx
  4045d4:	call   0x424180
  4045d9:	movzx  edx,r14b
  4045dd:	mov    rcx,rbx
  4045e0:	call   0x4241d0
  4045e5:	mov    r9d,DWORD PTR [rsp+0x2c]
  4045ea:	mov    rcx,rbx
  4045ed:	movzx  ebp,r9b
  4045f1:	mov    edx,ebp
  4045f3:	call   0x4241d0
  4045f8:	mov    rcx,r12
  4045fb:	call   0x42d610
  404600:	mov    rcx,rbx
  404603:	movzx  edx,al
  404606:	call   0x4241d0
  40460b:	mov    rcx,r12
  40460e:	call   0x42d610
  404613:	mov    rdx,r12
  404616:	mov    r8,rax
  404619:	mov    rcx,rbx
  40461c:	call   0x423f10
  404621:	xor    edx,edx
  404623:	mov    rcx,rbx
  404626:	call   0x4241d0
  40462b:	mov    rcx,rbx
  40462e:	mov    edx,0x1
  404633:	call   0x4241d0
  404638:	xor    edx,edx
  40463a:	mov    rcx,rbx
  40463d:	call   0x4241d0
  404642:	mov    rcx,rdi
  404645:	call   0x42d610
  40464a:	add    eax,0x1
  40464d:	mov    rcx,rbx
  404650:	movsx  edx,ax
  404653:	call   0x424180
  404658:	mov    rcx,rdi
  40465b:	call   0x42d610
  404660:	mov    rdx,rdi
  404663:	mov    r8,rax
  404666:	mov    rcx,rbx
  404669:	call   0x423f10
  40466e:	mov    edx,ebp
  404670:	mov    rcx,rbx
  404673:	call   0x4241d0
  404678:	mov    rcx,rsi
  40467b:	call   0x42d610
  404680:	mov    rcx,rbx
  404683:	movzx  edx,al
  404686:	call   0x4241d0
  40468b:	mov    rcx,rsi
  40468e:	call   0x42d610
  404693:	mov    rdx,rsi
  404696:	mov    r8,rax
  404699:	mov    rcx,rbx
  40469c:	call   0x423f10
  4046a1:	xor    edx,edx
  4046a3:	mov    rcx,rbx
  4046a6:	call   0x4241d0
  4046ab:	mov    rcx,rbx
  4046ae:	mov    edx,0x1
  4046b3:	call   0x4241d0
  4046b8:	xor    edx,edx
  4046ba:	mov    rcx,rbx
  4046bd:	add    rsp,0x38
  4046c1:	pop    rbx
  4046c2:	pop    rsi
  4046c3:	pop    rdi
  4046c4:	pop    rbp
  4046c5:	pop    r12
  4046c7:	pop    r13
  4046c9:	pop    r14
  4046cb:	pop    r15
  4046cd:	jmp    0x4241d0
  4046d2:	nop    DWORD PTR [rax+0x0]
  4046d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4046e0:	push   r15
  4046e2:	push   r14
  4046e4:	push   r13
  4046e6:	push   r12
  4046e8:	push   rbp
  4046e9:	push   rdi
  4046ea:	push   rsi
  4046eb:	push   rbx
  4046ec:	sub    rsp,0x38
  4046f0:	mov    r13,QWORD PTR [rsp+0xb0]
  4046f8:	mov    rdi,QWORD PTR [rsp+0xa0]
  404700:	mov    DWORD PTR [rsp+0x24],edx
  404704:	mov    edx,0xab
  404709:	mov    rbx,rcx
  40470c:	mov    DWORD PTR [rsp+0x28],r8d
  404711:	mov    DWORD PTR [rsp+0x2c],r9d
  404716:	mov    rsi,QWORD PTR [rsp+0xa8]
  40471e:	mov    r14d,DWORD PTR [rsp+0xb8]
  404726:	call   0x4241d0
  40472b:	test   r13,r13
  40472e:	je     0x4048a0
  404734:	mov    rcx,r13
  404737:	call   0x42d610
  40473c:	mov    rbp,rax
  40473f:	movzx  r12d,WORD PTR [rbx]
  404743:	mov    rcx,rdi
  404746:	cmp    r12w,0x6ff
  40474c:	ja     0x404840
  404752:	call   0x42d610
  404757:	mov    rcx,rsi
  40475a:	mov    r15,rax
  40475d:	call   0x42d610
  404762:	add    r15,rax
  404765:	mov    eax,0x2
  40476a:	add    r15d,ebp
  40476d:	lea    edx,[rax+r15*1+0xa]
  404772:	mov    rcx,rbx
  404775:	movsx  edx,dx
  404778:	call   0x424180
  40477d:	mov    edx,DWORD PTR [rsp+0x24]
  404781:	mov    rcx,rbx
  404784:	call   0x424140
  404789:	movzx  edx,BYTE PTR [rsp+0x28]
  40478e:	mov    rcx,rbx
  404791:	call   0x4241d0
  404796:	movzx  edx,BYTE PTR [rsp+0x2c]
  40479b:	mov    rcx,rbx
  40479e:	call   0x4241d0
  4047a3:	mov    rcx,rdi
  4047a6:	call   0x42d610
  4047ab:	mov    rcx,rbx
  4047ae:	movsx  edx,ax
  4047b1:	call   0x424180
  4047b6:	mov    rcx,rdi
  4047b9:	call   0x42d610
  4047be:	mov    rdx,rdi
  4047c1:	mov    r8d,eax
  4047c4:	mov    rcx,rbx
  4047c7:	call   0x423fa0
  4047cc:	mov    rcx,rsi
  4047cf:	call   0x42d610
  4047d4:	mov    rcx,rbx
  4047d7:	movzx  edx,al
  4047da:	call   0x4241d0
  4047df:	mov    rcx,rsi
  4047e2:	call   0x42d610
  4047e7:	mov    rdx,rsi
  4047ea:	mov    r8d,eax
  4047ed:	mov    rcx,rbx
  4047f0:	call   0x423fa0
  4047f5:	test   rbp,rbp
  4047f8:	je     0x404870
  4047fa:	movzx  edx,bpl
  4047fe:	mov    rcx,rbx
  404801:	call   0x4241d0
  404806:	mov    r8d,ebp
  404809:	mov    rdx,r13
  40480c:	mov    rcx,rbx
  40480f:	call   0x423fa0
  404814:	cmp    WORD PTR [rbx],0x701
  404819:	ja     0x404881
  40481b:	movsx  edx,r14w
  40481f:	mov    rcx,rbx
  404822:	add    rsp,0x38
  404826:	pop    rbx
  404827:	pop    rsi
  404828:	pop    rdi
  404829:	pop    rbp
  40482a:	pop    r12
  40482c:	pop    r13
  40482e:	pop    r14
  404830:	pop    r15
  404832:	jmp    0x424180
  404837:	nop    WORD PTR [rax+rax*1+0x0]
  404840:	call   0x42d610
  404845:	mov    rcx,rsi
  404848:	mov    r15,rax
  40484b:	call   0x42d610
  404850:	add    r15,rax
  404853:	add    r15,rbp
  404856:	add    r15d,r15d
  404859:	cmp    r12w,0x702
  40485f:	sbb    eax,eax
  404861:	and    eax,0xfffffffe
  404864:	add    eax,0x4
  404867:	jmp    0x40476d
  40486c:	nop    DWORD PTR [rax+0x0]
  404870:	xor    edx,edx
  404872:	mov    rcx,rbx
  404875:	call   0x4241d0
  40487a:	cmp    WORD PTR [rbx],0x701
  40487f:	jbe    0x40481b
  404881:	mov    edx,r14d
  404884:	mov    rcx,rbx
  404887:	add    rsp,0x38
  40488b:	pop    rbx
  40488c:	pop    rsi
  40488d:	pop    rdi
  40488e:	pop    rbp
  40488f:	pop    r12
  404891:	pop    r13
  404893:	pop    r14
  404895:	pop    r15
  404897:	jmp    0x424140
  40489c:	nop    DWORD PTR [rax+0x0]
  4048a0:	xor    ebp,ebp
  4048a2:	lea    r13,[rip+0x2b1d7]        # 0x42fa80
  4048a9:	jmp    0x40473f
  4048ae:	xchg   ax,ax
  4048b0:	mov    edx,0xaa
  4048b5:	jmp    0x4241d0
  4048ba:	nop    WORD PTR [rax+rax*1+0x0]
  4048c0:	push   rdi
  4048c1:	push   rsi
  4048c2:	push   rbx
  4048c3:	sub    rsp,0x30
  4048c7:	mov    rbx,rcx
  4048ca:	mov    rsi,rdx
  4048cd:	mov    edx,0xad
  4048d2:	call   0x4241d0
  4048d7:	cmp    WORD PTR [rbx],0x700
  4048dc:	mov    rcx,rsi
  4048df:	sbb    edi,edi
  4048e1:	add    edi,0x2
  4048e4:	call   0x42d610
  4048e9:	imul   eax,edi
  4048ec:	mov    rcx,rbx
  4048ef:	add    eax,0xa
  4048f2:	movsx  edx,ax
  4048f5:	call   0x424180
  4048fa:	cmp    WORD PTR [rbx],0x500
  4048ff:	je     0x404a11
  404905:	mov    edx,0x1
  40490a:	mov    rcx,rbx
  40490d:	call   0x4241d0
  404912:	movzx  eax,WORD PTR [rbx]
  404915:	cmp    ax,0x702
  404919:	ja     0x404950
  40491b:	je     0x404a30
  404921:	cmp    ax,0x701
  404925:	jne    0x4049f0
  40492b:	movzx  edx,BYTE PTR [rbx+0xa0]
  404932:	and    edx,0x4
  404935:	jne    0x404a44
  40493b:	mov    eax,0x1
  404940:	mov    ecx,0x71
  404945:	jmp    0x40495f
  404947:	nop    WORD PTR [rax+rax*1+0x0]
  404950:	mov    eax,0x3
  404955:	mov    edx,0xb
  40495a:	mov    ecx,0x73
  40495f:	lea    rdi,[rsp+0x2c]
  404964:	mov    r8d,0x4
  40496a:	mov    BYTE PTR [rsp+0x2c],cl
  40496e:	mov    BYTE PTR [rsp+0x2d],dl
  404972:	mov    rcx,rbx
  404975:	mov    BYTE PTR [rsp+0x2e],0x0
  40497a:	mov    rdx,rdi
  40497d:	mov    BYTE PTR [rsp+0x2f],al
  404981:	call   0x423f10
  404986:	mov    rcx,rsi
  404989:	call   0x42d610
  40498e:	mov    rcx,rbx
  404991:	movzx  edx,al
  404994:	call   0x4241d0
  404999:	mov    rcx,rsi
  40499c:	call   0x42d610
  4049a1:	mov    rdx,rsi
  4049a4:	mov    rcx,rbx
  4049a7:	mov    r8d,eax
  4049aa:	call   0x423fa0
  4049af:	mov    edx,DWORD PTR [rbx+0x4]
  4049b2:	mov    r8d,0x4
  4049b8:	mov    eax,edx
  4049ba:	mov    BYTE PTR [rsp+0x2f],dl
  4049be:	mov    rdx,rdi
  4049c1:	and    eax,0x7fffffff
  4049c6:	mov    ecx,eax
  4049c8:	shr    ecx,0x18
  4049cb:	mov    BYTE PTR [rsp+0x2c],cl
  4049cf:	mov    ecx,eax
  4049d1:	shr    eax,0x8
  4049d4:	shr    ecx,0x10
  4049d7:	mov    BYTE PTR [rsp+0x2e],al
  4049db:	mov    BYTE PTR [rsp+0x2d],cl
  4049df:	mov    rcx,rbx
  4049e2:	call   0x423f10
  4049e7:	nop
  4049e8:	add    rsp,0x30
  4049ec:	pop    rbx
  4049ed:	pop    rsi
  4049ee:	pop    rdi
  4049ef:	ret    
  4049f0:	movzx  edx,al
  4049f3:	movzx  eax,ah
  4049f6:	shl    edx,0x10
  4049f9:	shl    eax,0x18
  4049fc:	or     eax,edx
  4049fe:	mov    edi,eax
  404a00:	shr    edi,0x18
  404a03:	mov    ecx,edi
  404a05:	mov    edi,eax
  404a07:	shr    edi,0x10
  404a0a:	mov    edx,edi
  404a0c:	jmp    0x40495f
  404a11:	mov    edx,0x5
  404a16:	mov    rcx,rbx
  404a19:	call   0x4241d0
  404a1e:	xor    eax,eax
  404a20:	xor    edx,edx
  404a22:	mov    ecx,0x5
  404a27:	jmp    0x40495f
  404a2c:	nop    DWORD PTR [rax+0x0]
  404a30:	mov    eax,0x2
  404a35:	mov    edx,0x9
  404a3a:	mov    ecx,0x72
  404a3f:	jmp    0x40495f
  404a44:	xor    eax,eax
  404a46:	mov    edx,0x1
  404a4b:	mov    ecx,0x7
  404a50:	jmp    0x40495f
  404a55:	nop
  404a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a60:	push   rbx
  404a61:	sub    rsp,0x20
  404a65:	mov    edx,0xe2
  404a6a:	mov    rbx,rcx
  404a6d:	call   0x4241d0
  404a72:	mov    rcx,rbx
  404a75:	mov    edx,0x12
  404a7a:	call   0x424180
  404a7f:	mov    rcx,rbx
  404a82:	mov    edx,0x1
  404a87:	call   0x4241d0
  404a8c:	mov    rcx,rbx
  404a8f:	mov    edx,0x7
  404a94:	call   0x4241d0
  404a99:	mov    rcx,rbx
  404a9c:	mov    edx,0x7
  404aa1:	call   0x4241d0
  404aa6:	mov    rcx,rbx
  404aa9:	mov    edx,0x61
  404aae:	call   0x4241d0
  404ab3:	mov    rcx,rbx
  404ab6:	mov    edx,0x41
  404abb:	call   0x4241d0
  404ac0:	mov    rcx,rbx
  404ac3:	mov    edx,0xcf
  404ac8:	call   0x4241d0
  404acd:	mov    rcx,rbx
  404ad0:	mov    edx,0xff
  404ad5:	call   0x4241d0
  404ada:	mov    rcx,rbx
  404add:	mov    edx,0xff
  404ae2:	call   0x4241d0
  404ae7:	mov    rcx,rbx
  404aea:	mov    edx,0xe6
  404aef:	call   0x4241d0
  404af4:	mov    rcx,rbx
  404af7:	mov    edx,0x2
  404afc:	call   0x4241d0
  404b01:	mov    rcx,rbx
  404b04:	mov    edx,0x7
  404b09:	call   0x4241d0
  404b0e:	xor    edx,edx
  404b10:	mov    rcx,rbx
  404b13:	call   0x4241d0
  404b18:	xor    edx,edx
  404b1a:	mov    rcx,rbx
  404b1d:	call   0x4241d0
  404b22:	mov    rcx,rbx
  404b25:	mov    edx,0x2
  404b2a:	call   0x4241d0
  404b2f:	xor    edx,edx
  404b31:	mov    rcx,rbx
  404b34:	call   0x4241d0
  404b39:	xor    edx,edx
  404b3b:	mov    rcx,rbx
  404b3e:	call   0x4241d0
  404b43:	xor    edx,edx
  404b45:	mov    rcx,rbx
  404b48:	call   0x4241d0
  404b4d:	xor    edx,edx
  404b4f:	mov    rcx,rbx
  404b52:	add    rsp,0x20
  404b56:	pop    rbx
  404b57:	jmp    0x4241d0
  404b5c:	nop    DWORD PTR [rax+0x0]
  404b60:	push   rdi
  404b61:	push   rsi
  404b62:	push   rbx
  404b63:	sub    rsp,0x20
  404b67:	mov    rbx,rcx
  404b6a:	mov    esi,r8d
  404b6d:	movzx  edx,dl
  404b70:	mov    edi,r9d
  404b73:	call   0x4241d0
  404b78:	movsx  edx,si
  404b7b:	mov    rcx,rbx
  404b7e:	call   0x424180
  404b83:	mov    edx,0x2
  404b88:	mov    rcx,rbx
  404b8b:	call   0x424180
  404b90:	cmp    WORD PTR [rbx],0x701
  404b95:	ja     0x404bb0
  404b97:	mov    edx,edi
  404b99:	mov    rcx,rbx
  404b9c:	add    rsp,0x20
  404ba0:	pop    rbx
  404ba1:	pop    rsi
  404ba2:	pop    rdi
  404ba3:	jmp    0x424140
  404ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  404bb0:	movsxd rdx,edi
  404bb3:	mov    rcx,rbx
  404bb6:	add    rsp,0x20
  404bba:	pop    rbx
  404bbb:	pop    rsi
  404bbc:	pop    rdi
  404bbd:	jmp    0x4240f0
  404bc2:	nop    DWORD PTR [rax+0x0]
  404bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404bd0:	mov    r9d,r8d
  404bd3:	movsx  r8d,dx
  404bd7:	mov    edx,0xfd
  404bdc:	jmp    0x404b60
  404bde:	xchg   ax,ax
  404be0:	push   rdi
  404be1:	push   rsi
  404be2:	push   rbx
  404be3:	sub    rsp,0x20
  404be7:	xor    ebx,ebx
  404be9:	mov    esi,edx
  404beb:	mov    rdi,rcx
  404bee:	mov    edx,0xae
  404bf3:	movsx  esi,si
  404bf6:	call   0x4241d0
  404bfb:	mov    edx,esi
  404bfd:	mov    rcx,rdi
  404c00:	call   0x424180
  404c05:	test   esi,esi
  404c07:	jle    0x404c21
  404c09:	nop    DWORD PTR [rax+0x0]
  404c10:	xor    edx,edx
  404c12:	mov    rcx,rdi
  404c15:	add    ebx,0x1
  404c18:	call   0x4241d0
  404c1d:	cmp    esi,ebx
  404c1f:	jne    0x404c10
  404c21:	add    rsp,0x20
  404c25:	pop    rbx
  404c26:	pop    rsi
  404c27:	pop    rdi
  404c28:	ret    
  404c29:	nop    DWORD PTR [rax+0x0]
  404c30:	push   r12
  404c32:	push   rbp
  404c33:	push   rdi
  404c34:	push   rsi
  404c35:	push   rbx
  404c36:	sub    rsp,0x20
  404c3a:	mov    rbp,rdx
  404c3d:	mov    edx,0xa0
  404c42:	mov    r12,rcx
  404c45:	call   0x4241d0
  404c4a:	movzx  edx,WORD PTR [rbp+0x8]
  404c4e:	test   edx,edx
  404c50:	je     0x404c7b
  404c52:	mov    r9,QWORD PTR [rbp+0x0]
  404c56:	xor    eax,eax
  404c58:	xor    ecx,ecx
  404c5a:	nop    WORD PTR [rax+rax*1+0x0]
  404c60:	mov    r8,QWORD PTR [r9+rax*8]
  404c64:	add    rax,0x1
  404c68:	cmp    edx,eax
  404c6a:	mov    r8,QWORD PTR [r8+0x38]
  404c6e:	mov    r8,QWORD PTR [r8]
  404c71:	lea    ecx,[rcx+r8*1+0x1]
  404c76:	jg     0x404c60
  404c78:	movsx  edx,cx
  404c7b:	mov    rcx,r12
  404c7e:	xor    esi,esi
  404c80:	xor    ebx,ebx
  404c82:	call   0x424180
  404c87:	cmp    WORD PTR [rbp+0x8],0x0
  404c8c:	je     0x404cc9
  404c8e:	xchg   ax,ax
  404c90:	mov    rax,QWORD PTR [rbp+0x0]
  404c94:	mov    rcx,r12
  404c97:	add    ebx,0x1
  404c9a:	mov    rdi,QWORD PTR [rax+rsi*1]
  404c9e:	add    rsi,0x8
  404ca2:	mov    rax,QWORD PTR [rdi+0x38]
  404ca6:	movzx  edx,BYTE PTR [rax]
  404ca9:	call   0x4241d0
  404cae:	mov    rax,QWORD PTR [rdi+0x38]
  404cb2:	mov    rcx,r12
  404cb5:	mov    r8,QWORD PTR [rax]
  404cb8:	lea    rdx,[rax+0x8]
  404cbc:	call   0x423f10
  404cc1:	movzx  eax,WORD PTR [rbp+0x8]
  404cc5:	cmp    eax,ebx
  404cc7:	jg     0x404c90
  404cc9:	add    rsp,0x20
  404ccd:	pop    rbx
  404cce:	pop    rsi
  404ccf:	pop    rdi
  404cd0:	pop    rbp
  404cd1:	pop    r12
  404cd3:	ret    
  404cd4:	xchg   ax,ax
  404cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ce0:	push   r13
  404ce2:	push   r12
  404ce4:	push   rbp
  404ce5:	push   rdi
  404ce6:	push   rsi
  404ce7:	push   rbx
  404ce8:	sub    rsp,0x28
  404cec:	mov    r13,rdx
  404cef:	mov    edx,0xa1
  404cf4:	mov    rbp,rcx
  404cf7:	call   0x4241d0
  404cfc:	movzx  edx,WORD PTR [r13+0x8]
  404d01:	test   edx,edx
  404d03:	je     0x404d37
  404d05:	mov    r10,QWORD PTR [r13+0x0]
  404d09:	mov    r12,QWORD PTR [rip+0x37100]        # 0x43be10
  404d10:	xor    r8d,r8d
  404d13:	xor    eax,eax
  404d15:	mov    rcx,QWORD PTR [r10+r8*8]
  404d19:	mov    r9d,DWORD PTR [rcx+0x14]
  404d1d:	lea    ecx,[rax+0x5]
  404d20:	add    eax,0x6
  404d23:	test   BYTE PTR [r12+r9*1],0x2
  404d28:	cmovne eax,ecx
  404d2b:	add    r8,0x1
  404d2f:	cmp    edx,r8d
  404d32:	jg     0x404d15
  404d34:	movsx  edx,ax
  404d37:	mov    rcx,rbp
  404d3a:	call   0x424180
  404d3f:	cmp    WORD PTR [r13+0x8],0x0
  404d45:	je     0x404db3
  404d47:	xor    edi,edi
  404d49:	xor    esi,esi
  404d4b:	mov    r12,QWORD PTR [rip+0x370be]        # 0x43be10
  404d52:	jmp    0x404d64
  404d54:	movzx  eax,WORD PTR [r13+0x8]
  404d59:	add    esi,0x1
  404d5c:	add    rdi,0x8
  404d60:	cmp    eax,esi
  404d62:	jle    0x404db3
  404d64:	mov    rax,QWORD PTR [r13+0x0]
  404d68:	lea    rdx,[rip+0x2ad5d]        # 0x42facc
  404d6f:	mov    r8d,0x4
  404d75:	mov    rcx,rbp
  404d78:	mov    rbx,QWORD PTR [rax+rdi*1]
  404d7c:	call   0x423f10
  404d81:	mov    rcx,rbp
  404d84:	movzx  edx,BYTE PTR [rbx+0x14]
  404d88:	call   0x4241d0
  404d8d:	mov    eax,DWORD PTR [rbx+0x14]
  404d90:	test   BYTE PTR [r12+rax*1],0x2
  404d95:	jne    0x404d54
  404d97:	movzx  edx,BYTE PTR [rbx+0x10]
  404d9b:	mov    rcx,rbp
  404d9e:	add    esi,0x1
  404da1:	add    rdi,0x8
  404da5:	call   0x4241d0
  404daa:	movzx  eax,WORD PTR [r13+0x8]
  404daf:	cmp    eax,esi
  404db1:	jg     0x404d64
  404db3:	add    rsp,0x28
  404db7:	pop    rbx
  404db8:	pop    rsi
  404db9:	pop    rdi
  404dba:	pop    rbp
  404dbb:	pop    r12
  404dbd:	pop    r13
  404dbf:	ret    
  404dc0:	push   r14
  404dc2:	push   r13
  404dc4:	push   r12
  404dc6:	push   rbp
  404dc7:	push   rdi
  404dc8:	push   rsi
  404dc9:	push   rbx
  404dca:	sub    rsp,0x20
  404dce:	mov    rdi,rdx
  404dd1:	mov    edx,0xee
  404dd6:	mov    rbx,rcx
  404dd9:	call   0x4241d0
  404dde:	movzx  r9d,WORD PTR [rdi+0x8]
  404de3:	test   r9d,r9d
  404de6:	je     0x404eff
  404dec:	mov    r10,QWORD PTR [rdi]
  404def:	mov    rbp,QWORD PTR [rip+0x3701a]        # 0x43be10
  404df6:	xor    ecx,ecx
  404df8:	mov    eax,0x2
  404dfd:	nop    DWORD PTR [rax]
  404e00:	mov    r8,QWORD PTR [r10+rcx*8]
  404e04:	mov    rdx,QWORD PTR [r8+0x38]
  404e08:	mov    r8d,DWORD PTR [r8+0x14]
  404e0c:	mov    rdx,QWORD PTR [rdx]
  404e0f:	test   BYTE PTR [rbp+r8*1+0x0],0x2
  404e15:	lea    edx,[rax+rdx*1+0x8]
  404e19:	lea    eax,[rdx+0x1]
  404e1c:	cmovne eax,edx
  404e1f:	add    rcx,0x1
  404e23:	cmp    r9d,ecx
  404e26:	jg     0x404e00
  404e28:	movsx  edx,ax
  404e2b:	mov    rcx,rbx
  404e2e:	call   0x424180
  404e33:	movsx  edx,WORD PTR [rdi+0x8]
  404e37:	mov    rcx,rbx
  404e3a:	call   0x424180
  404e3f:	cmp    WORD PTR [rdi+0x8],0x0
  404e44:	je     0x404ef0
  404e4a:	xor    r13d,r13d
  404e4d:	xor    r12d,r12d
  404e50:	mov    rbp,QWORD PTR [rip+0x36fb9]        # 0x43be10
  404e57:	jmp    0x404e7b
  404e59:	nop    DWORD PTR [rax+0x0]
  404e60:	xor    edx,edx
  404e62:	mov    rcx,rbx
  404e65:	add    r12d,0x1
  404e69:	call   0x4241d0
  404e6e:	movzx  eax,WORD PTR [rdi+0x8]
  404e72:	add    r13,0x8
  404e76:	cmp    eax,r12d
  404e79:	jle    0x404ef0
  404e7b:	mov    rax,QWORD PTR [rdi]
  404e7e:	mov    rcx,rbx
  404e81:	mov    rsi,QWORD PTR [rax+r13*1]
  404e85:	mov    rax,QWORD PTR [rsi+0x38]
  404e89:	mov    r14,QWORD PTR [rax]
  404e8c:	movzx  edx,r14b
  404e90:	call   0x4241d0
  404e95:	mov    rax,QWORD PTR [rsi+0x38]
  404e99:	mov    r8,r14
  404e9c:	mov    rcx,rbx
  404e9f:	lea    rdx,[rax+0x8]
  404ea3:	call   0x423f10
  404ea8:	mov    edx,0x30
  404ead:	mov    rcx,rbx
  404eb0:	call   0x4241d0
  404eb5:	mov    edx,DWORD PTR [rsi+0x8]
  404eb8:	mov    rcx,rbx
  404ebb:	call   0x424140
  404ec0:	movzx  edx,BYTE PTR [rsi+0x14]
  404ec4:	mov    rcx,rbx
  404ec7:	call   0x4241d0
  404ecc:	mov    eax,DWORD PTR [rsi+0x14]
  404ecf:	test   BYTE PTR [rbp+rax*1+0x0],0x2
  404ed4:	jne    0x404e60
  404ed6:	movzx  edx,BYTE PTR [rsi+0x10]
  404eda:	mov    rcx,rbx
  404edd:	call   0x4241d0
  404ee2:	jmp    0x404e60
  404ee7:	nop    WORD PTR [rax+rax*1+0x0]
  404ef0:	add    rsp,0x20
  404ef4:	pop    rbx
  404ef5:	pop    rsi
  404ef6:	pop    rdi
  404ef7:	pop    rbp
  404ef8:	pop    r12
  404efa:	pop    r13
  404efc:	pop    r14
  404efe:	ret    
  404eff:	mov    edx,0x2
  404f04:	jmp    0x404e2b
  404f09:	nop    DWORD PTR [rax+0x0]
  404f10:	push   r13
  404f12:	push   r12
  404f14:	push   rbp
  404f15:	push   rdi
  404f16:	push   rsi
  404f17:	push   rbx
  404f18:	sub    rsp,0x28
  404f1c:	xor    r12d,r12d
  404f1f:	xor    ebp,ebp
  404f21:	mov    r13,rdx
  404f24:	mov    edx,0x81
  404f29:	mov    rsi,rcx
  404f2c:	call   0x4241d0
  404f31:	movsx  edx,WORD PTR [r13+0x8]
  404f36:	mov    rcx,rsi
  404f39:	call   0x424180
  404f3e:	cmp    WORD PTR [r13+0x8],0x0
  404f44:	je     0x405028
  404f4a:	nop    WORD PTR [rax+rax*1+0x0]
  404f50:	mov    rax,QWORD PTR [r13+0x0]
  404f54:	mov    rcx,rsi
  404f57:	mov    rdi,QWORD PTR [rax+r12*1]
  404f5b:	movsx  edx,WORD PTR [rdi+0x8]
  404f5f:	call   0x424180
  404f64:	movsx  edx,WORD PTR [rdi+0xc]
  404f68:	mov    rcx,rsi
  404f6b:	call   0x424180
  404f70:	movzx  edx,BYTE PTR [rdi+0x14]
  404f74:	mov    rcx,rsi
  404f77:	call   0x4241d0
  404f7c:	mov    eax,DWORD PTR [rdi+0x14]
  404f7f:	lea    edx,[rax-0x22]
  404f82:	cmp    edx,0x1
  404f85:	jbe    0x405070
  404f8b:	cmp    eax,0x63
  404f8e:	je     0x405070
  404f94:	cmp    eax,0x7f
  404f97:	jbe    0x405035
  404f9d:	movsx  edx,WORD PTR [rdi+0x10]
  404fa1:	mov    rcx,rsi
  404fa4:	call   0x424180
  404fa9:	mov    eax,DWORD PTR [rdi+0x14]
  404fac:	lea    edx,[rax-0x6a]
  404faf:	and    edx,0xfffffffd
  404fb2:	je     0x405050
  404fb8:	lea    edx,[rax-0x22]
  404fbb:	cmp    edx,0x1
  404fbe:	jbe    0x405080
  404fc4:	cmp    eax,0x63
  404fc7:	je     0x405080
  404fcd:	mov    rax,QWORD PTR [rdi+0x38]
  404fd1:	mov    rcx,rsi
  404fd4:	xor    ebx,ebx
  404fd6:	movzx  edx,BYTE PTR [rax]
  404fd9:	call   0x4241d0
  404fde:	mov    rax,QWORD PTR [rdi+0x38]
  404fe2:	cmp    QWORD PTR [rax],0x0
  404fe6:	je     0x405014
  404fe8:	nop    DWORD PTR [rax+rax*1+0x0]
  404ff0:	movzx  edx,BYTE PTR [rax+rbx*1+0x8]
  404ff5:	mov    rcx,rsi
  404ff8:	add    rbx,0x1
  404ffc:	call   0x4241d0
  405001:	xor    edx,edx
  405003:	mov    rcx,rsi
  405006:	call   0x4241d0
  40500b:	mov    rax,QWORD PTR [rdi+0x38]
  40500f:	cmp    QWORD PTR [rax],rbx
  405012:	ja     0x404ff0
  405014:	movzx  eax,WORD PTR [r13+0x8]
  405019:	add    ebp,0x1
  40501c:	add    r12,0x8
  405020:	cmp    eax,ebp
  405022:	jg     0x404f50
  405028:	add    rsp,0x28
  40502c:	pop    rbx
  40502d:	pop    rsi
  40502e:	pop    rdi
  40502f:	pop    rbp
  405030:	pop    r12
  405032:	pop    r13
  405034:	ret    
  405035:	movzx  edx,BYTE PTR [rdi+0x10]
  405039:	mov    rcx,rsi
  40503c:	call   0x4241d0
  405041:	mov    eax,DWORD PTR [rdi+0x14]
  405044:	lea    edx,[rax-0x6a]
  405047:	and    edx,0xfffffffd
  40504a:	jne    0x404fb8
  405050:	movzx  edx,BYTE PTR [rdi+0x19]
  405054:	mov    rcx,rsi
  405057:	call   0x4241d0
  40505c:	movzx  edx,BYTE PTR [rdi+0x1a]
  405060:	mov    rcx,rsi
  405063:	call   0x4241d0
  405068:	jmp    0x404fcd
  40506d:	nop    DWORD PTR [rax]
  405070:	mov    edx,DWORD PTR [rdi+0x10]
  405073:	mov    rcx,rsi
  405076:	call   0x424140
  40507b:	jmp    0x404fa9
  405080:	mov    rbx,QWORD PTR [rdi+0x30]
  405084:	mov    rcx,rsi
  405087:	movzx  eax,WORD PTR [rbx]
  40508a:	lea    edx,[rax+rax*1]
  40508d:	movsx  edx,dx
  405090:	call   0x424180
  405095:	movzx  edx,BYTE PTR [rbx+0x8]
  405099:	test   dl,dl
  40509b:	je     0x404fcd
  4050a1:	add    rbx,0x9
  4050a5:	mov    rcx,rsi
  4050a8:	add    rbx,0x1
  4050ac:	call   0x4241d0
  4050b1:	xor    edx,edx
  4050b3:	mov    rcx,rsi
  4050b6:	call   0x4241d0
  4050bb:	movzx  edx,BYTE PTR [rbx-0x1]
  4050bf:	test   dl,dl
  4050c1:	jne    0x4050a5
  4050c3:	jmp    0x404fcd
  4050c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4050d0:	push   rsi
  4050d1:	push   rbx
  4050d2:	sub    rsp,0x28
  4050d6:	movzx  eax,WORD PTR [rcx]
  4050d9:	shr    ax,0x8
  4050dd:	cmp    ax,0x5
  4050e1:	je     0x405130
  4050e3:	cmp    ax,0x7
  4050e7:	je     0x405120
  4050e9:	cmp    ax,0x4
  4050ed:	je     0x405100
  4050ef:	add    rsp,0x28
  4050f3:	pop    rbx
  4050f4:	pop    rsi
  4050f5:	ret    
  4050f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405100:	mov    rsi,rdx
  405103:	mov    rbx,rcx
  405106:	call   0x404c30
  40510b:	mov    rdx,rsi
  40510e:	mov    rcx,rbx
  405111:	add    rsp,0x28
  405115:	pop    rbx
  405116:	pop    rsi
  405117:	jmp    0x404ce0
  40511c:	nop    DWORD PTR [rax+0x0]
  405120:	add    rsp,0x28
  405124:	pop    rbx
  405125:	pop    rsi
  405126:	jmp    0x404f10
  40512b:	nop    DWORD PTR [rax+rax*1+0x0]
  405130:	add    rsp,0x28
  405134:	pop    rbx
  405135:	pop    rsi
  405136:	jmp    0x404dc0
  40513b:	nop    DWORD PTR [rax+rax*1+0x0]
  405140:	push   r14
  405142:	push   r13
  405144:	push   r12
  405146:	push   rbp
  405147:	push   rdi
  405148:	push   rsi
  405149:	push   rbx
  40514a:	sub    rsp,0x20
  40514e:	mov    rbp,rdx
  405151:	mov    edx,0xd1
  405156:	mov    r12,rcx
  405159:	call   0x4241d0
  40515e:	cmp    WORD PTR [rbp+0x8],0x0
  405163:	je     0x4051e0
  405165:	xor    edi,edi
  405167:	xor    esi,esi
  405169:	mov    r13,QWORD PTR [rip+0x36ca0]        # 0x43be10
  405170:	jmp    0x4051a7
  405172:	mov    rcx,QWORD PTR [rbx+0x48]
  405176:	add    esi,0x1
  405179:	add    rdi,0x8
  40517d:	call   0x42d610
  405182:	mov    rcx,r12
  405185:	movzx  edx,al
  405188:	mov    r14,rax
  40518b:	call   0x4241d0
  405190:	mov    rdx,QWORD PTR [rbx+0x48]
  405194:	movsxd r8,r14d
  405197:	mov    rcx,r12
  40519a:	call   0x423f10
  40519f:	movzx  eax,WORD PTR [rbp+0x8]
  4051a3:	cmp    eax,esi
  4051a5:	jle    0x4051e0
  4051a7:	mov    rax,QWORD PTR [rbp+0x0]
  4051ab:	mov    rbx,QWORD PTR [rax+rdi*1]
  4051af:	mov    edx,DWORD PTR [rbx+0x14]
  4051b2:	test   BYTE PTR [r13+rdx*1+0x0],0x2
  4051b8:	mov    rcx,rdx
  4051bb:	je     0x405172
  4051bd:	call   0x40a420
  4051c2:	mov    rdx,QWORD PTR [rbx+0x48]
  4051c6:	movsxd r8,eax
  4051c9:	mov    rcx,r12
  4051cc:	add    esi,0x1
  4051cf:	add    rdi,0x8
  4051d3:	call   0x423f10
  4051d8:	movzx  eax,WORD PTR [rbp+0x8]
  4051dc:	cmp    eax,esi
  4051de:	jg     0x4051a7
  4051e0:	add    rsp,0x20
  4051e4:	pop    rbx
  4051e5:	pop    rsi
  4051e6:	pop    rdi
  4051e7:	pop    rbp
  4051e8:	pop    r12
  4051ea:	pop    r13
  4051ec:	pop    r14
  4051ee:	ret    
  4051ef:	nop
  4051f0:	lea    rdx,[rip+0x2a8e9]        # 0x42fae0
  4051f7:	mov    r8d,0x1d
  4051fd:	jmp    0x423f10
  405202:	nop
  405203:	nop
  405204:	nop
  405205:	nop
  405206:	nop
  405207:	nop
  405208:	nop
  405209:	nop
  40520a:	nop
  40520b:	nop
  40520c:	nop
  40520d:	nop
  40520e:	nop
  40520f:	nop
  405210:	push   r12
  405212:	push   rbp
  405213:	push   rdi
  405214:	push   rsi
  405215:	push   rbx
  405216:	sub    rsp,0x20
  40521a:	xor    esi,esi
  40521c:	mov    rbx,rdx
  40521f:	movsxd rbp,r8d
  405222:	mov    r12,rcx
  405225:	mov    rdx,rbp
  405228:	mov    rcx,rbx
  40522b:	call   0x41d790
  405230:	test   rax,rax
  405233:	je     0x405259
  405235:	mov    rax,QWORD PTR [rbx]
  405238:	mov    r8,rbp
  40523b:	mov    rcx,r12
  40523e:	mov    sil,0x1
  405241:	lea    rdx,[rax+0x8]
  405245:	call   0x41bc50
  40524a:	mov    rcx,r12
  40524d:	call   0x41bbc0
  405252:	movzx  edx,al
  405255:	cmp    ebp,edx
  405257:	jge    0x405270
  405259:	mov    eax,esi
  40525b:	add    rsp,0x20
  40525f:	pop    rbx
  405260:	pop    rsi
  405261:	pop    rdi
  405262:	pop    rbp
  405263:	pop    r12
  405265:	ret    
  405266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405270:	movzx  edx,al
  405273:	mov    rcx,rbx
  405276:	call   0x41d760
  40527b:	mov    eax,esi
  40527d:	add    rsp,0x20
  405281:	pop    rbx
  405282:	pop    rsi
  405283:	pop    rdi
  405284:	pop    rbp
  405285:	pop    r12
  405287:	ret    
  405288:	nop    DWORD PTR [rax+rax*1+0x0]
  405290:	xor    r10d,r10d
  405293:	test   edx,edx
  405295:	jle    0x4052c8
  405297:	nop    WORD PTR [rax+rax*1+0x0]
  4052a0:	movzx  r9d,BYTE PTR [rcx+r10*1]
  4052a5:	mov    r11d,r9d
  4052a8:	shr    r9b,0x4
  4052ac:	shl    r11d,0x4
  4052b0:	xor    r9d,0xa
  4052b4:	xor    r11d,0x50
  4052b8:	or     r9d,r11d
  4052bb:	mov    BYTE PTR [r8+r10*1],r9b
  4052bf:	add    r10,0x1
  4052c3:	cmp    edx,r10d
  4052c6:	jg     0x4052a0
  4052c8:	mov    rax,r8
  4052cb:	ret    
  4052cc:	nop    DWORD PTR [rax+0x0]
  4052d0:	push   rdi
  4052d1:	push   rsi
  4052d2:	push   rbx
  4052d3:	sub    rsp,0x40
  4052d7:	mov    rdi,rcx
  4052da:	mov    DWORD PTR [rsp+0x34],0x0
  4052e2:	movzx  ecx,dx
  4052e5:	call   QWORD PTR [rip+0x3da79]        # 0x442d64
  4052eb:	mov    WORD PTR [rsp+0x32],ax
  4052f0:	mov    eax,0x2
  4052f5:	xor    r8d,r8d
  4052f8:	mov    WORD PTR [rsp+0x30],ax
  4052fd:	mov    edx,0x1
  405302:	mov    ecx,0x2
  405307:	call   QWORD PTR [rip+0x3da9f]        # 0x442dac
  40530d:	cmp    rax,0xffffffffffffffff
  405311:	mov    rbx,rax
  405314:	je     0x4053b0
  40531a:	lea    rsi,[rsp+0x30]
  40531f:	mov    r8d,0x10
  405325:	mov    rcx,rax
  405328:	mov    rdx,rsi
  40532b:	call   QWORD PTR [rip+0x3d9db]        # 0x442d0c
  405331:	test   eax,eax
  405333:	js     0x4053e0
  405339:	mov    edx,0x5
  40533e:	mov    rcx,rbx
  405341:	call   QWORD PTR [rip+0x3da2d]        # 0x442d74
  405347:	mov    rdx,rsi
  40534a:	mov    rcx,rbx
  40534d:	mov    DWORD PTR [rsp+0x2c],0x10
  405355:	lea    r8,[rsp+0x2c]
  40535a:	call   QWORD PTR [rip+0x3d9a4]        # 0x442d04
  405360:	cmp    rax,0xffffffffffffffff
  405364:	mov    rsi,rax
  405367:	mov    rcx,rbx
  40536a:	je     0x4053c0
  40536c:	call   QWORD PTR [rip+0x3d9a2]        # 0x442d14
  405372:	mov    edx,0x1000
  405377:	mov    rcx,rdi
  40537a:	call   0x412bc0
  40537f:	lea    rdx,[rip+0x2a90d]        # 0x42fc93
  405386:	mov    rbx,rax
  405389:	mov    QWORD PTR [rax+0x10],rsi
  40538d:	mov    BYTE PTR [rax+0xf1],0x2
  405394:	xor    r8d,r8d
  405397:	mov    rcx,rax
  40539a:	call   0x40bbc0
  40539f:	mov    rax,rbx
  4053a2:	add    rsp,0x40
  4053a6:	pop    rbx
  4053a7:	pop    rsi
  4053a8:	pop    rdi
  4053a9:	ret    
  4053aa:	nop    WORD PTR [rax+rax*1+0x0]
  4053b0:	lea    rcx,[rip+0x2a8c9]        # 0x42fc80
  4053b7:	call   0x42d690
  4053bc:	xor    eax,eax
  4053be:	jmp    0x4053a2
  4053c0:	call   QWORD PTR [rip+0x3d94e]        # 0x442d14
  4053c6:	lea    rcx,[rip+0x2a8bf]        # 0x42fc8c
  4053cd:	call   0x42d690
  4053d2:	xor    eax,eax
  4053d4:	jmp    0x4053a2
  4053d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053e0:	mov    rcx,rbx
  4053e3:	call   QWORD PTR [rip+0x3d92b]        # 0x442d14
  4053e9:	lea    rcx,[rip+0x2a897]        # 0x42fc87
  4053f0:	call   0x42d690
  4053f5:	xor    eax,eax
  4053f7:	jmp    0x4053a2
  4053f9:	nop    DWORD PTR [rax+0x0]
  405400:	push   rbp
  405401:	push   rdi
  405402:	push   rsi
  405403:	push   rbx
  405404:	sub    rsp,0x38
  405408:	mov    rax,QWORD PTR [rip+0x369e1]        # 0x43bdf0
  40540f:	mov    r8d,0x1e
  405415:	mov    rsi,rdx
  405418:	lea    rdx,[rdx+0x30]
  40541c:	mov    rbx,rcx
  40541f:	mov    QWORD PTR [rsp+0x28],rax
  405424:	call   0x405210
  405429:	test   eax,eax
  40542b:	je     0x4054fa
  405431:	lea    rdx,[rsi+0x70]
  405435:	mov    r8d,0x1e
  40543b:	mov    rcx,rbx
  40543e:	call   0x405210
  405443:	test   eax,eax
  405445:	jne    0x4054e0
  40544b:	mov    r8d,0x1f
  405451:	xor    edx,edx
  405453:	mov    rcx,rbx
  405456:	call   0x41bc50
  40545b:	mov    r8d,0x10
  405461:	xor    edx,edx
  405463:	mov    rcx,rbx
  405466:	call   0x41bc50
  40546b:	xor    edx,edx
  40546d:	mov    r8d,0x100
  405473:	mov    rcx,rbx
  405476:	call   0x41bc50
  40547b:	mov    rcx,rbx
  40547e:	call   0x41bbc0
  405483:	mov    rcx,rbx
  405486:	mov    edi,eax
  405488:	call   0x41bbc0
  40548d:	movzx  edx,al
  405490:	mov    eax,edi
  405492:	mov    rcx,rbx
  405495:	shl    eax,0x8
  405498:	or     eax,edx
  40549a:	mov    WORD PTR [rsi+0xc],ax
  40549e:	call   0x41bcf0
  4054a3:	mov    rcx,rbx
  4054a6:	call   0x41bbc0
  4054ab:	mov    rcx,rbx
  4054ae:	call   0x41bbc0
  4054b3:	mov    rcx,rbx
  4054b6:	call   0x41bcf0
  4054bb:	xor    edx,edx
  4054bd:	mov    rcx,rbx
  4054c0:	mov    r8d,0x3
  4054c6:	call   0x41bc50
  4054cb:	mov    r8d,0xe
  4054d1:	xor    edx,edx
  4054d3:	mov    rcx,rbx
  4054d6:	call   0x41bc50
  4054db:	jmp    0x40558a
  4054e0:	lea    rdx,[rsi+0x78]
  4054e4:	mov    r8d,0x1e
  4054ea:	mov    rcx,rbx
  4054ed:	call   0x405210
  4054f2:	test   eax,eax
  4054f4:	jne    0x4055f2
  4054fa:	mov    r8d,0x1f
  405500:	xor    edx,edx
  405502:	mov    rcx,rbx
  405505:	call   0x41bc50
  40550a:	mov    r8d,0x10
  405510:	xor    edx,edx
  405512:	mov    rcx,rbx
  405515:	call   0x41bc50
  40551a:	mov    r8d,0x100
  405520:	xor    edx,edx
  405522:	mov    rcx,rbx
  405525:	call   0x41bc50
  40552a:	mov    rcx,rbx
  40552d:	call   0x41bbc0
  405532:	mov    rcx,rbx
  405535:	mov    edi,eax
  405537:	call   0x41bbc0
  40553c:	movzx  edx,al
  40553f:	mov    eax,edi
  405541:	mov    rcx,rbx
  405544:	shl    eax,0x8
  405547:	or     eax,edx
  405549:	mov    WORD PTR [rsi+0xc],ax
  40554d:	call   0x41bcf0
  405552:	mov    rcx,rbx
  405555:	call   0x41bbc0
  40555a:	mov    rcx,rbx
  40555d:	call   0x41bbc0
  405562:	mov    rcx,rbx
  405565:	call   0x41bcf0
  40556a:	mov    r8d,0x3
  405570:	xor    edx,edx
  405572:	mov    rcx,rbx
  405575:	call   0x41bc50
  40557a:	mov    r8d,0xe
  405580:	xor    edx,edx
  405582:	mov    rcx,rbx
  405585:	call   0x41bc50
  40558a:	lea    rdi,[rsp+0x28]
  40558f:	mov    r8d,0x1
  405595:	xor    edx,edx
  405597:	mov    rcx,rbx
  40559a:	xor    ebp,ebp
  40559c:	call   0x41bc50
  4055a1:	mov    rax,QWORD PTR [rsp+0x28]
  4055a6:	lea    rcx,[rip+0x2a6f0]        # 0x42fc9d
  4055ad:	lea    rdx,[rax+0x8]
  4055b1:	call   0x42d688
  4055b6:	mov    rax,QWORD PTR [rsp+0x28]
  4055bb:	lea    rcx,[rax+0x8]
  4055bf:	call   0x42d748
  4055c4:	mov    rcx,rdi
  4055c7:	mov    DWORD PTR [rsi+0x10],eax
  4055ca:	call   0x41d630
  4055cf:	mov    r8d,DWORD PTR [rbx+0xec]
  4055d6:	sub    r8d,DWORD PTR [rbx+0xe4]
  4055dd:	xor    edx,edx
  4055df:	mov    rcx,rbx
  4055e2:	call   0x41bc50
  4055e7:	mov    eax,ebp
  4055e9:	add    rsp,0x38
  4055ed:	pop    rbx
  4055ee:	pop    rsi
  4055ef:	pop    rdi
  4055f0:	pop    rbp
  4055f1:	ret    
  4055f2:	xor    edx,edx
  4055f4:	mov    r8d,0x1f
  4055fa:	mov    rcx,rbx
  4055fd:	call   0x41bc50
  405602:	xor    edx,edx
  405604:	mov    r8d,0x10
  40560a:	mov    rcx,rbx
  40560d:	call   0x41bc50
  405612:	lea    rdx,[rsi+0x68]
  405616:	mov    r8d,0x1e
  40561c:	mov    rcx,rbx
  40561f:	call   0x405210
  405624:	test   eax,eax
  405626:	je     0x40546b
  40562c:	mov    r8d,0x1e
  405632:	mov    rdx,rsi
  405635:	mov    rcx,rbx
  405638:	call   0x405210
  40563d:	test   eax,eax
  40563f:	je     0x40551a
  405645:	mov    r8d,0x100
  40564b:	xor    edx,edx
  40564d:	mov    rcx,rbx
  405650:	call   0x41bc50
  405655:	mov    rcx,rbx
  405658:	call   0x41bbc0
  40565d:	mov    rcx,rbx
  405660:	mov    edi,eax
  405662:	call   0x41bbc0
  405667:	movzx  edx,al
  40566a:	mov    eax,edi
  40566c:	mov    rcx,rbx
  40566f:	shl    eax,0x8
  405672:	or     eax,edx
  405674:	mov    WORD PTR [rsi+0xc],ax
  405678:	call   0x41bcf0
  40567d:	lea    rdx,[rsi+0x88]
  405684:	mov    r8d,0xa
  40568a:	mov    rcx,rbx
  40568d:	call   0x405210
  405692:	test   eax,eax
  405694:	je     0x4054a3
  40569a:	mov    rcx,rbx
  40569d:	call   0x41bbc0
  4056a2:	mov    rcx,rbx
  4056a5:	call   0x41bbc0
  4056aa:	mov    rcx,rbx
  4056ad:	call   0x41bcf0
  4056b2:	xor    edx,edx
  4056b4:	mov    r8d,0x3
  4056ba:	mov    rcx,rbx
  4056bd:	call   0x41bc50
  4056c2:	lea    rdx,[rsi+0x18]
  4056c6:	mov    r8d,0x1e
  4056cc:	mov    rcx,rbx
  4056cf:	call   0x405210
  4056d4:	test   eax,eax
  4056d6:	je     0x40557a
  4056dc:	xor    edx,edx
  4056de:	mov    r8d,0xe
  4056e4:	mov    rcx,rbx
  4056e7:	call   0x41bc50
  4056ec:	lea    rdx,[rsi+0x20]
  4056f0:	mov    r8d,0x1e
  4056f6:	mov    rcx,rbx
  4056f9:	call   0x405210
  4056fe:	test   eax,eax
  405700:	je     0x40558a
  405706:	lea    rdi,[rsp+0x28]
  40570b:	xor    edx,edx
  40570d:	mov    r8d,0x1
  405713:	mov    rcx,rbx
  405716:	xor    ebp,ebp
  405718:	call   0x41bc50
  40571d:	mov    r8d,0x6
  405723:	mov    rdx,rdi
  405726:	mov    rcx,rbx
  405729:	call   0x405210
  40572e:	test   eax,eax
  405730:	setne  bpl
  405734:	jmp    0x4055a1
  405739:	nop    DWORD PTR [rax+0x0]
  405740:	push   r15
  405742:	push   r14
  405744:	push   r13
  405746:	push   r12
  405748:	push   rbp
  405749:	push   rdi
  40574a:	push   rsi
  40574b:	push   rbx
  40574c:	sub    rsp,0x78
  405750:	mov    rbx,rcx
  405753:	mov    rsi,rdx
  405756:	call   0x41bd10
  40575b:	mov    rcx,rbx
  40575e:	mov    edi,eax
  405760:	call   0x41bd10
  405765:	cmp    al,0x7
  405767:	je     0x405bd0
  40576d:	mov    r8d,eax
  405770:	shr    eax,0x1c
  405773:	mov    rcx,rsi
  405776:	sar    r8d,0x18
  40577a:	mov    edx,eax
  40577c:	and    r8d,0xf
  405780:	call   0x40f5b0
  405785:	mov    rcx,rbx
  405788:	call   0x41bd10
  40578d:	xor    edx,edx
  40578f:	mov    r8d,0xd
  405795:	mov    rcx,rbx
  405798:	call   0x41bc50
  40579d:	mov    rcx,rbx
  4057a0:	call   0x41bbc0
  4057a5:	xor    edx,edx
  4057a7:	mov    BYTE PTR [rsi+0xf0],al
  4057ad:	mov    r8d,0xa
  4057b3:	mov    rcx,rbx
  4057b6:	call   0x41bc50
  4057bb:	cmp    WORD PTR [rbx],0x702
  4057c0:	sbb    r15d,r15d
  4057c3:	and    r15d,0xfffffff8
  4057c7:	add    r15d,0x5e
  4057cb:	cmp    r15d,edi
  4057ce:	jbe    0x4057e3
  4057d0:	xor    eax,eax
  4057d2:	add    rsp,0x78
  4057d6:	pop    rbx
  4057d7:	pop    rsi
  4057d8:	pop    rdi
  4057d9:	pop    rbp
  4057da:	pop    r12
  4057dc:	pop    r13
  4057de:	pop    r14
  4057e0:	pop    r15
  4057e2:	ret    
  4057e3:	mov    rcx,rbx
  4057e6:	call   0x41bcf0
  4057eb:	mov    rcx,rbx
  4057ee:	mov    r12d,eax
  4057f1:	call   0x41bcf0
  4057f6:	movzx  edx,ax
  4057f9:	test   edx,edx
  4057fb:	mov    ebp,edx
  4057fd:	je     0x40580f
  4057ff:	movzx  eax,r12w
  405803:	cmp    r15d,eax
  405806:	ja     0x4057d0
  405808:	lea    eax,[rax+rdx*2]
  40580b:	cmp    edi,eax
  40580d:	jb     0x4057d0
  40580f:	mov    rcx,rbx
  405812:	call   0x41bcf0
  405817:	mov    rcx,rbx
  40581a:	mov    r13d,eax
  40581d:	call   0x41bcf0
  405822:	movzx  edx,ax
  405825:	test   edx,edx
  405827:	mov    r12d,edx
  40582a:	je     0x40583c
  40582c:	movzx  eax,r13w
  405830:	cmp    r15d,eax
  405833:	ja     0x4057d0
  405835:	lea    eax,[rax+rdx*2]
  405838:	cmp    edi,eax
  40583a:	jb     0x4057d0
  40583c:	mov    rcx,rbx
  40583f:	call   0x41bcf0
  405844:	mov    rcx,rbx
  405847:	movzx  r13d,ax
  40584b:	call   0x41bcf0
  405850:	movzx  edx,ax
  405853:	test   rdx,rdx
  405856:	mov    QWORD PTR [rsp+0x58],rdx
  40585b:	je     0x40587a
  40585d:	movzx  eax,r13w
  405861:	cmp    r15d,eax
  405864:	ja     0x4057d0
  40586a:	lea    rdx,[r13+rdx*2+0x0]
  40586f:	mov    eax,edi
  405871:	cmp    rdx,rax
  405874:	ja     0x4057d0
  40587a:	mov    rcx,rbx
  40587d:	call   0x41bcf0
  405882:	mov    rcx,rbx
  405885:	mov    r14d,eax
  405888:	call   0x41bcf0
  40588d:	movzx  edx,ax
  405890:	test   edx,edx
  405892:	mov    r13d,edx
  405895:	je     0x4058af
  405897:	movzx  eax,r14w
  40589b:	cmp    r15d,eax
  40589e:	ja     0x4057d0
  4058a4:	lea    eax,[rax+rdx*2]
  4058a7:	cmp    edi,eax
  4058a9:	jb     0x4057d0
  4058af:	mov    rcx,rbx
  4058b2:	call   0x41bcf0
  4058b7:	mov    rcx,rbx
  4058ba:	mov    WORD PTR [rsp+0x40],ax
  4058bf:	call   0x41bcf0
  4058c4:	movzx  eax,ax
  4058c7:	test   eax,eax
  4058c9:	mov    r14d,eax
  4058cc:	je     0x4058e7
  4058ce:	movzx  edx,WORD PTR [rsp+0x40]
  4058d3:	cmp    r15d,edx
  4058d6:	ja     0x4057d0
  4058dc:	lea    eax,[rdx+rax*2]
  4058df:	cmp    edi,eax
  4058e1:	jb     0x4057d0
  4058e7:	mov    rcx,rbx
  4058ea:	call   0x41bcf0
  4058ef:	mov    rcx,rbx
  4058f2:	call   0x41bcf0
  4058f7:	mov    rcx,rbx
  4058fa:	call   0x41bcf0
  4058ff:	mov    rcx,rbx
  405902:	mov    WORD PTR [rsp+0x40],ax
  405907:	call   0x41bcf0
  40590c:	movzx  edx,ax
  40590f:	test   edx,edx
  405911:	mov    WORD PTR [rsp+0x48],dx
  405916:	je     0x405931
  405918:	movzx  eax,WORD PTR [rsp+0x40]
  40591d:	cmp    r15d,eax
  405920:	ja     0x4057d0
  405926:	lea    eax,[rax+rdx*2]
  405929:	cmp    edi,eax
  40592b:	jb     0x4057d0
  405931:	mov    rcx,rbx
  405934:	call   0x41bcf0
  405939:	mov    rcx,rbx
  40593c:	mov    WORD PTR [rsp+0x40],ax
  405941:	call   0x41bcf0
  405946:	movzx  edx,ax
  405949:	test   edx,edx
  40594b:	mov    WORD PTR [rsp+0x4a],dx
  405950:	je     0x40596b
  405952:	movzx  eax,WORD PTR [rsp+0x40]
  405957:	cmp    r15d,eax
  40595a:	ja     0x4057d0
  405960:	lea    eax,[rax+rdx*2]
  405963:	cmp    edi,eax
  405965:	jb     0x4057d0
  40596b:	mov    rcx,rbx
  40596e:	call   0x41bcf0
  405973:	mov    rcx,rbx
  405976:	mov    WORD PTR [rsp+0x40],ax
  40597b:	call   0x41bcf0
  405980:	movzx  edx,ax
  405983:	test   edx,edx
  405985:	mov    WORD PTR [rsp+0x4c],dx
  40598a:	je     0x4059a5
  40598c:	movzx  eax,WORD PTR [rsp+0x40]
  405991:	cmp    r15d,eax
  405994:	ja     0x4057d0
  40599a:	lea    eax,[rax+rdx*2]
  40599d:	cmp    edi,eax
  40599f:	jb     0x4057d0
  4059a5:	xor    edx,edx
  4059a7:	mov    r8d,0x6
  4059ad:	mov    rcx,rbx
  4059b0:	call   0x41bc50
  4059b5:	mov    rcx,rbx
  4059b8:	call   0x41bcf0
  4059bd:	mov    rcx,rbx
  4059c0:	mov    WORD PTR [rsp+0x40],ax
  4059c5:	call   0x41bcf0
  4059ca:	movzx  edx,ax
  4059cd:	test   edx,edx
  4059cf:	mov    WORD PTR [rsp+0x4e],dx
  4059d4:	je     0x4059ee
  4059d6:	movzx  eax,WORD PTR [rsp+0x40]
  4059db:	cmp    r15d,eax
  4059de:	ja     0x4057d0
  4059e4:	add    eax,edx
  4059e6:	cmp    edi,eax
  4059e8:	jb     0x4057d0
  4059ee:	mov    rcx,rbx
  4059f1:	call   0x41bcf0
  4059f6:	mov    rcx,rbx
  4059f9:	mov    WORD PTR [rsp+0x40],ax
  4059fe:	call   0x41bcf0
  405a03:	movzx  edx,ax
  405a06:	test   edx,edx
  405a08:	je     0x405a23
  405a0a:	movzx  eax,WORD PTR [rsp+0x40]
  405a0f:	cmp    r15d,eax
  405a12:	ja     0x4057d0
  405a18:	lea    eax,[rax+rdx*2]
  405a1b:	cmp    edi,eax
  405a1d:	jb     0x4057d0
  405a23:	cmp    WORD PTR [rsi+0xc],0x701
  405a29:	jbe    0x405a68
  405a2b:	mov    rcx,rbx
  405a2e:	call   0x41bcf0
  405a33:	mov    rcx,rbx
  405a36:	mov    WORD PTR [rsp+0x40],ax
  405a3b:	call   0x41bcf0
  405a40:	movzx  edx,ax
  405a43:	test   edx,edx
  405a45:	je     0x405a60
  405a47:	movzx  eax,WORD PTR [rsp+0x40]
  405a4c:	cmp    r15d,eax
  405a4f:	ja     0x4057d0
  405a55:	lea    eax,[rax+rdx*2]
  405a58:	cmp    edi,eax
  405a5a:	jb     0x4057d0
  405a60:	mov    rcx,rbx
  405a63:	call   0x41bd10
  405a68:	lea    rdx,[rsi+0x30]
  405a6c:	movzx  r8d,bp
  405a70:	mov    rcx,rbx
  405a73:	call   0x41bf20
  405a78:	test   rax,rax
  405a7b:	je     0x405c9d
  405a81:	lea    rdx,[rsi+0x70]
  405a85:	movzx  r8d,r12w
  405a89:	mov    rcx,rbx
  405a8c:	xor    ebp,ebp
  405a8e:	call   0x41bf20
  405a93:	test   rax,rax
  405a96:	setne  bpl
  405a9a:	mov    rdx,QWORD PTR [rsp+0x58]
  405a9f:	lea    rcx,[rdx+rdx*1]
  405aa3:	mov    QWORD PTR [rsp+0x40],rdx
  405aa8:	mov    QWORD PTR [rsp+0x50],rcx
  405aad:	call   0x42d6b8
  405ab2:	test   rax,rax
  405ab5:	mov    rdi,rax
  405ab8:	mov    rdx,QWORD PTR [rsp+0x40]
  405abd:	je     0x405c90
  405ac3:	lea    r12,[rsi+0x78]
  405ac7:	mov    rcx,r12
  405aca:	call   0x41d790
  405acf:	test   rax,rax
  405ad2:	je     0x405c90
  405ad8:	mov    r8,QWORD PTR [rsp+0x50]
  405add:	mov    rdx,rdi
  405ae0:	mov    rcx,rbx
  405ae3:	call   0x41bc50
  405ae8:	mov    rax,QWORD PTR [rsp+0x50]
  405aed:	test   eax,eax
  405aef:	jle    0x405b1b
  405af1:	sub    eax,0x1
  405af4:	mov    rdx,rdi
  405af7:	lea    r8,[rdi+rax*1+0x1]
  405afc:	movzx  eax,BYTE PTR [rdx]
  405aff:	add    rdx,0x1
  405b03:	mov    ecx,eax
  405b05:	shr    al,0x4
  405b08:	shl    ecx,0x4
  405b0b:	xor    eax,0xa
  405b0e:	xor    ecx,0x50
  405b11:	or     eax,ecx
  405b13:	mov    BYTE PTR [rdx-0x1],al
  405b16:	cmp    rdx,r8
  405b19:	jne    0x405afc
  405b1b:	mov    rax,QWORD PTR [rsi+0x78]
  405b1f:	lea    rdx,[rsp+0x58]
  405b24:	lea    r9,[rsp+0x60]
  405b29:	mov    r8d,0x1
  405b2f:	mov    rcx,rbx
  405b32:	add    rax,0x8
  405b36:	mov    QWORD PTR [rsp+0x68],rax
  405b3b:	mov    rax,QWORD PTR [rbx+0x68]
  405b3f:	mov    rax,QWORD PTR [rax]
  405b42:	mov    QWORD PTR [rsp+0x60],rdi
  405b47:	mov    DWORD PTR [rax+0x34],0x0
  405b4e:	mov    QWORD PTR [rsp+0x30],rdx
  405b53:	lea    rdx,[rsp+0x68]
  405b58:	mov    rax,QWORD PTR [rbx+0x68]
  405b5c:	mov    QWORD PTR [rsp+0x28],rdx
  405b61:	lea    rdx,[rsp+0x50]
  405b66:	mov    QWORD PTR [rsp+0x20],rdx
  405b6b:	mov    rdx,QWORD PTR [rax]
  405b6e:	call   0x40c320
  405b73:	test   eax,eax
  405b75:	js     0x405c6d
  405b7b:	mov    rax,QWORD PTR [rsi+0x78]
  405b7f:	mov    rdx,QWORD PTR [rsp+0x68]
  405b84:	mov    rcx,r12
  405b87:	add    rax,0x8
  405b8b:	sub    rdx,rax
  405b8e:	call   0x41d760
  405b93:	mov    rcx,rdi
  405b96:	call   0x42d6f8
  405b9b:	test   ebp,ebp
  405b9d:	jne    0x405be8
  405b9f:	xor    edi,edi
  405ba1:	movzx  r8d,WORD PTR [rsp+0x4e]
  405ba7:	xor    edx,edx
  405ba9:	mov    rcx,rbx
  405bac:	call   0x41bc50
  405bb1:	lea    rcx,[rsi+0x20]
  405bb5:	call   0x41d630
  405bba:	mov    DWORD PTR [rsi+0x10],0x0
  405bc1:	mov    BYTE PTR [rsi+0x90],0x0
  405bc8:	mov    eax,edi
  405bca:	jmp    0x4057d2
  405bcf:	nop
  405bd0:	movzx  eax,ah
  405bd3:	mov    edx,0x7
  405bd8:	mov    rcx,rsi
  405bdb:	mov    r8d,eax
  405bde:	call   0x40f5b0
  405be3:	jmp    0x405785
  405be8:	lea    rdx,[rsi+0x68]
  405bec:	movzx  r8d,r13w
  405bf0:	mov    rcx,rbx
  405bf3:	call   0x41bf20
  405bf8:	test   rax,rax
  405bfb:	je     0x405b9f
  405bfd:	movzx  r8d,r14w
  405c01:	mov    rdx,rsi
  405c04:	mov    rcx,rbx
  405c07:	call   0x41bf20
  405c0c:	test   rax,rax
  405c0f:	je     0x405b9f
  405c11:	movzx  r8d,WORD PTR [rsp+0x48]
  405c17:	lea    rdx,[rsi+0x88]
  405c1e:	mov    rcx,rbx
  405c21:	call   0x41bf20
  405c26:	test   rax,rax
  405c29:	je     0x405b9f
  405c2f:	movzx  r8d,WORD PTR [rsp+0x4a]
  405c35:	lea    rdx,[rsi+0x18]
  405c39:	mov    rcx,rbx
  405c3c:	call   0x41bf20
  405c41:	test   rax,rax
  405c44:	je     0x405b9f
  405c4a:	movzx  r8d,WORD PTR [rsp+0x4c]
  405c50:	lea    rdx,[rsi+0xc0]
  405c57:	mov    rcx,rbx
  405c5a:	xor    edi,edi
  405c5c:	call   0x41bf20
  405c61:	test   rax,rax
  405c64:	setne  dil
  405c68:	jmp    0x405ba1
  405c6d:	call   QWORD PTR [rip+0x3cdb1]        # 0x442a24
  405c73:	lea    r8,[rip+0x2a032]        # 0x42fcac
  405c7a:	lea    rcx,[rax+0x60]
  405c7e:	lea    rdx,[rip+0x2a033]        # 0x42fcb8
  405c85:	mov    r9d,0x102
  405c8b:	call   0x42d710
  405c90:	mov    rcx,rdi
  405c93:	call   0x42d6f8
  405c98:	jmp    0x4057d0
  405c9d:	xor    ebp,ebp
  405c9f:	jmp    0x405a9a
  405ca4:	xchg   ax,ax
  405ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405cb0:	push   rsi
  405cb1:	push   rbx
  405cb2:	sub    rsp,0x28
  405cb6:	mov    BYTE PTR [rcx+0xf1],0x4
  405cbd:	mov    rbx,rcx
  405cc0:	call   0x415130
  405cc5:	test   eax,eax
  405cc7:	jle    0x405cf6
  405cc9:	mov    ecx,0x1
  405cce:	call   0x40ff40
  405cd3:	test   rax,rax
  405cd6:	mov    rsi,rax
  405cd9:	je     0x405cf6
  405cdb:	movzx  eax,BYTE PTR [rbx+0xf0]
  405ce2:	cmp    al,0x10
  405ce4:	je     0x405d50
  405ce6:	cmp    al,0x12
  405ce8:	je     0x405d00
  405cea:	cmp    al,0x2
  405cec:	je     0x405d60
  405cee:	mov    rcx,rsi
  405cf1:	call   0x410150
  405cf6:	xor    eax,eax
  405cf8:	add    rsp,0x28
  405cfc:	pop    rbx
  405cfd:	pop    rsi
  405cfe:	ret    
  405cff:	nop
  405d00:	mov    eax,0x701
  405d05:	mov    rcx,rbx
  405d08:	mov    WORD PTR [rbx],ax
  405d0b:	call   0x4051f0
  405d10:	mov    rcx,rbx
  405d13:	call   0x424270
  405d18:	mov    rcx,rbx
  405d1b:	call   0x415130
  405d20:	test   eax,eax
  405d22:	js     0x405cee
  405d24:	cmp    BYTE PTR [rbx+0xf0],0x10
  405d2b:	jne    0x405cee
  405d2d:	mov    rdx,rsi
  405d30:	mov    rcx,rbx
  405d33:	call   0x405740
  405d38:	mov    edx,eax
  405d3a:	mov    rax,rsi
  405d3d:	test   edx,edx
  405d3f:	jne    0x405cf8
  405d41:	mov    rcx,rsi
  405d44:	call   0x410150
  405d49:	xor    eax,eax
  405d4b:	jmp    0x405cf8
  405d4d:	nop    DWORD PTR [rax]
  405d50:	mov    edx,0x700
  405d55:	mov    WORD PTR [rbx],dx
  405d58:	jmp    0x405d2d
  405d5a:	nop    WORD PTR [rax+rax*1+0x0]
  405d60:	mov    r8d,0x402
  405d66:	mov    rdx,rsi
  405d69:	mov    rcx,rbx
  405d6c:	mov    WORD PTR [rbx],r8w
  405d70:	call   0x405400
  405d75:	test   eax,eax
  405d77:	je     0x405cee
  405d7d:	mov    ecx,DWORD PTR [rsi+0x10]
  405d80:	mov    rax,rsi
  405d83:	test   ecx,ecx
  405d85:	jne    0x405cf8
  405d8b:	mov    DWORD PTR [rsi+0x10],0x200
  405d92:	add    rsp,0x28
  405d96:	pop    rbx
  405d97:	pop    rsi
  405d98:	ret    
  405d99:	nop
  405d9a:	nop
  405d9b:	nop
  405d9c:	nop
  405d9d:	nop
  405d9e:	nop
  405d9f:	nop
  405da0:	push   rbp
  405da1:	push   rdi
  405da2:	push   rsi
  405da3:	push   rbx
  405da4:	sub    rsp,0x28
  405da8:	mov    rax,QWORD PTR [rdx]
  405dab:	mov    rdi,rcx
  405dae:	mov    rbp,rdx
  405db1:	cmp    BYTE PTR [rax+0x8],0x5b
  405db5:	lea    rsi,[rax+0x8]
  405db9:	je     0x405e60
  405dbf:	mov    edx,0x3a
  405dc4:	mov    rcx,rsi
  405dc7:	call   0x42d600
  405dcc:	mov    rbx,rax
  405dcf:	cmp    rbx,rsi
  405dd2:	je     0x405dd9
  405dd4:	test   rbx,rbx
  405dd7:	jne    0x405e32
  405dd9:	mov    edx,0x5c
  405dde:	mov    rcx,rsi
  405de1:	call   0x42d600
  405de6:	cmp    rax,rsi
  405de9:	mov    rbx,rax
  405dec:	je     0x405e50
  405dee:	test   rax,rax
  405df1:	je     0x405e50
  405df3:	lea    rdx,[rax+0x1]
  405df7:	lea    rcx,[rdi+0xd8]
  405dfe:	call   0x41d6f0
  405e03:	test   rax,rax
  405e06:	je     0x405e50
  405e08:	mov    DWORD PTR [rdi+0x8],0x0
  405e0f:	sub    rbx,rsi
  405e12:	mov    rdx,rsi
  405e15:	mov    rcx,rdi
  405e18:	mov    r8,rbx
  405e1b:	call   0x41d660
  405e20:	test   rax,rax
  405e23:	setne  al
  405e26:	movzx  eax,al
  405e29:	add    rsp,0x28
  405e2d:	pop    rbx
  405e2e:	pop    rsi
  405e2f:	pop    rdi
  405e30:	pop    rbp
  405e31:	ret    
  405e32:	lea    rcx,[rbx+0x1]
  405e36:	call   0x42d748
  405e3b:	lea    rcx,[rdi+0xd8]
  405e42:	mov    DWORD PTR [rdi+0x8],eax
  405e45:	mov    DWORD PTR [rbp+0x8],eax
  405e48:	call   0x41d630
  405e4d:	jmp    0x405e0f
  405e4f:	nop
  405e50:	xor    eax,eax
  405e52:	add    rsp,0x28
  405e56:	pop    rbx
  405e57:	pop    rsi
  405e58:	pop    rdi
  405e59:	pop    rbp
  405e5a:	ret    
  405e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  405e60:	lea    rdx,[rip+0x29e99]        # 0x42fd00
  405e67:	mov    rcx,rsi
  405e6a:	call   0x42d5f8
  405e6f:	test   rax,rax
  405e72:	je     0x405dd9
  405e78:	lea    rbx,[rax+0x1]
  405e7c:	jmp    0x405dcf
  405e81:	nop    DWORD PTR [rax+rax*1+0x0]
  405e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e90:	push   rsi
  405e91:	push   rbx
  405e92:	sub    rsp,0x38
  405e96:	mov    rsi,rcx
  405e99:	call   0x41d940
  405e9e:	test   rax,rax
  405ea1:	mov    rbx,rax
  405ea4:	je     0x405ee0
  405ea6:	lea    rcx,[rsp+0x28]
  405eab:	lea    rdx,[rip+0x29e51]        # 0x42fd03
  405eb2:	mov    r9,rsi
  405eb5:	mov    r8,rax
  405eb8:	call   0x42d4a0
  405ebd:	test   eax,eax
  405ebf:	js     0x405ed5
  405ec1:	mov    rcx,rbx
  405ec4:	call   0x42d6f8
  405ec9:	mov    rax,QWORD PTR [rsp+0x28]
  405ece:	add    rsp,0x38
  405ed2:	pop    rbx
  405ed3:	pop    rsi
  405ed4:	ret    
  405ed5:	mov    QWORD PTR [rsp+0x28],0x0
  405ede:	jmp    0x405ec1
  405ee0:	xor    eax,eax
  405ee2:	jmp    0x405ece
  405ee4:	xchg   ax,ax
  405ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ef0:	push   rbx
  405ef1:	sub    rsp,0x20
  405ef5:	mov    rbx,rcx
  405ef8:	call   0x42d748
  405efd:	test   eax,eax
  405eff:	je     0x405f10
  405f01:	add    rsp,0x20
  405f05:	pop    rbx
  405f06:	ret    
  405f07:	nop    WORD PTR [rax+rax*1+0x0]
  405f10:	mov    rcx,rbx
  405f13:	add    rsp,0x20
  405f17:	pop    rbx
  405f18:	jmp    0x41d8a0
  405f1d:	nop    DWORD PTR [rax]
  405f20:	movsx  eax,BYTE PTR [rcx]
  405f23:	mov    edx,eax
  405f25:	sub    eax,0x30
  405f28:	cmp    eax,0x9
  405f2b:	jbe    0x405f42
  405f2d:	or     edx,0x20
  405f30:	xor    eax,eax
  405f32:	movsx  edx,dl
  405f35:	lea    r8d,[rdx-0x61]
  405f39:	cmp    r8d,0x5
  405f3d:	ja     0x405f45
  405f3f:	lea    eax,[rdx-0x57]
  405f42:	shl    eax,0x4
  405f45:	movsx  edx,BYTE PTR [rcx+0x1]
  405f49:	mov    ecx,edx
  405f4b:	sub    edx,0x30
  405f4e:	cmp    edx,0x9
  405f51:	jbe    0x405f6c
  405f53:	or     ecx,0x20
  405f56:	movsx  ecx,cl
  405f59:	lea    r8d,[rcx-0x61]
  405f5d:	lea    edx,[rcx-0x57]
  405f60:	mov    ecx,0x0
  405f65:	cmp    r8d,0x5
  405f69:	cmova  edx,ecx
  405f6c:	add    eax,edx
  405f6e:	ret    
  405f6f:	nop
  405f70:	push   r13
  405f72:	push   r12
  405f74:	push   rbp
  405f75:	push   rdi
  405f76:	push   rsi
  405f77:	push   rbx
  405f78:	sub    rsp,0x28
  405f7c:	lea    r13,[rip+0x2aafd]        # 0x430a80
  405f83:	mov    rdi,QWORD PTR [rip+0x3cb2a]        # 0x442ab4
  405f8a:	xor    ebx,ebx
  405f8c:	mov    rbp,rcx
  405f8f:	mov    r12d,edx
  405f92:	mov    rsi,r13
  405f95:	mov    rdx,rsi
  405f98:	mov    rcx,rbp
  405f9b:	call   rdi
  405f9d:	test   eax,eax
  405f9f:	je     0x405fc0
  405fa1:	add    ebx,0x1
  405fa4:	add    rsi,0x8
  405fa8:	cmp    ebx,0x6
  405fab:	jne    0x405f95
  405fad:	mov    eax,r12d
  405fb0:	add    rsp,0x28
  405fb4:	pop    rbx
  405fb5:	pop    rsi
  405fb6:	pop    rdi
  405fb7:	pop    rbp
  405fb8:	pop    r12
  405fba:	pop    r13
  405fbc:	ret    
  405fbd:	nop    DWORD PTR [rax]
  405fc0:	movsxd rbx,ebx
  405fc3:	movzx  eax,BYTE PTR [r13+rbx*8+0x7]
  405fc9:	add    rsp,0x28
  405fcd:	pop    rbx
  405fce:	pop    rsi
  405fcf:	pop    rdi
  405fd0:	pop    rbp
  405fd1:	pop    r12
  405fd3:	pop    r13
  405fd5:	ret    
  405fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405fe0:	push   rdi
  405fe1:	push   rsi
  405fe2:	push   rbx
  405fe3:	sub    rsp,0x30
  405fe7:	mov    rbx,rdx
  405fea:	mov    rdi,rcx
  405fed:	mov    edx,0xffffffff
  405ff2:	mov    rcx,rbx
  405ff5:	mov    rsi,r8
  405ff8:	call   0x405f70
  405ffd:	test   eax,eax
  405fff:	js     0x406010
  406001:	add    rsp,0x30
  406005:	pop    rbx
  406006:	pop    rsi
  406007:	pop    rdi
  406008:	ret    
  406009:	nop    DWORD PTR [rax+0x0]
  406010:	mov    rax,QWORD PTR [rip+0x35e19]        # 0x43be30
  406017:	mov    eax,DWORD PTR [rax]
  406019:	test   eax,eax
  40601b:	jne    0x406030
  40601d:	and    BYTE PTR [rsi+0xf5],0xfd
  406024:	xor    eax,eax
  406026:	add    rsp,0x30
  40602a:	pop    rbx
  40602b:	pop    rsi
  40602c:	pop    rdi
  40602d:	ret    
  40602e:	xchg   ax,ax
  406030:	lea    r8,[rip+0x29cd9]        # 0x42fd10
  406037:	lea    rcx,[rip+0x29d0c]        # 0x42fd4a
  40603e:	mov    QWORD PTR [rsp+0x20],rdi
  406043:	mov    r9,rbx
  406046:	mov    edx,0x1cb2
  40604b:	call   0x40d350
  406050:	jmp    0x40601d
  406052:	nop    DWORD PTR [rax+0x0]
  406056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406060:	push   r15
  406062:	push   r14
  406064:	push   r13
  406066:	push   r12
  406068:	push   rbp
  406069:	push   rdi
  40606a:	push   rsi
  40606b:	push   rbx
  40606c:	sub    rsp,0x138
  406073:	mov    rax,QWORD PTR [rip+0x35db6]        # 0x43be30
  40607a:	mov    QWORD PTR [rsp+0x198],r9
  406082:	mov    r13,rcx
  406085:	mov    QWORD PTR [rsp+0x188],rdx
  40608d:	mov    QWORD PTR [rsp+0x190],r8
  406095:	mov    r9d,DWORD PTR [rax]
  406098:	test   r9d,r9d
  40609b:	jne    0x406277
  4060a1:	mov    rbx,QWORD PTR [rip+0x3cac4]        # 0x442b6c
  4060a8:	mov    rbp,QWORD PTR [rip+0x3cb9d]        # 0x442c4c
  4060af:	lea    r12,[rsp+0x30]
  4060b4:	mov    DWORD PTR [rsp+0x2c],0x0
  4060bc:	mov    DWORD PTR [rsp+0x28],0x0
  4060c4:	mov    r8,r13
  4060c7:	mov    edx,0x100
  4060cc:	mov    rcx,r12
  4060cf:	call   0x42d720
  4060d4:	test   rax,rax
  4060d7:	je     0x406252
  4060dd:	movzx  edi,BYTE PTR [rsp+0x30]
  4060e2:	mov    rsi,r12
  4060e5:	test   dil,dil
  4060e8:	jne    0x4060fc
  4060ea:	jmp    0x4060c4
  4060ec:	nop    DWORD PTR [rax+0x0]
  4060f0:	add    rsi,0x1
  4060f4:	movzx  edi,BYTE PTR [rsi]
  4060f7:	test   dil,dil
  4060fa:	je     0x4060c4
  4060fc:	movzx  ecx,dil
  406100:	call   rbx
  406102:	test   eax,eax
  406104:	jne    0x4060f0
  406106:	cmp    dil,0x23
  40610a:	je     0x4060c4
  40610c:	cmp    dil,0x3b
  406110:	je     0x4060c4
  406112:	movzx  eax,BYTE PTR [rsi]
  406115:	cmp    al,0x3d
  406117:	je     0x4060c4
  406119:	test   al,al
  40611b:	je     0x4060c4
  40611d:	xor    edi,edi
  40611f:	xor    r14d,r14d
  406122:	jmp    0x406128
  406124:	test   al,al
  406126:	je     0x406168
  406128:	movzx  ecx,al
  40612b:	call   rbx
  40612d:	test   eax,eax
  40612f:	jne    0x406159
  406131:	movzx  ecx,r14b
  406135:	call   rbx
  406137:	test   eax,eax
  406139:	je     0x406146
  40613b:	movsxd rax,edi
  40613e:	add    edi,0x1
  406141:	mov    BYTE PTR [rsp+rax*1+0x30],0x20
  406146:	lea    r14d,[rdi+0x1]
  40614a:	movzx  ecx,BYTE PTR [rsi]
  40614d:	movsxd rdi,edi
  406150:	call   rbp
  406152:	mov    BYTE PTR [rsp+rdi*1+0x30],al
  406156:	movsxd rdi,r14d
  406159:	movzx  r14d,BYTE PTR [rsi]
  40615d:	add    rsi,0x1
  406161:	movzx  eax,BYTE PTR [rsi]
  406164:	cmp    al,0x3d
  406166:	jne    0x406124
  406168:	test   edi,edi
  40616a:	je     0x4060c4
  406170:	cmp    al,0x1
  406172:	mov    BYTE PTR [rsp+rdi*1+0x30],0x0
  406177:	sbb    rsi,0xffffffffffffffff
  40617b:	movzx  ecx,BYTE PTR [rsi]
  40617e:	test   cl,cl
  406180:	jne    0x40619f
  406182:	jmp    0x4062b1
  406187:	nop    WORD PTR [rax+rax*1+0x0]
  406190:	add    rsi,0x1
  406194:	movzx  ecx,BYTE PTR [rsi]
  406197:	test   cl,cl
  406199:	je     0x4062b1
  40619f:	call   rbx
  4061a1:	test   eax,eax
  4061a3:	jne    0x406190
  4061a5:	movzx  ecx,BYTE PTR [rsi]
  4061a8:	cmp    cl,0x3b
  4061ab:	setne  dl
  4061ae:	test   cl,cl
  4061b0:	setne  al
  4061b3:	test   dl,al
  4061b5:	je     0x4062b1
  4061bb:	cmp    cl,0x23
  4061be:	je     0x4062b1
  4061c4:	mov    r15,rsi
  4061c7:	xor    r14d,r14d
  4061ca:	xor    edi,edi
  4061cc:	jmp    0x4061d5
  4061ce:	xchg   ax,ax
  4061d0:	cmp    cl,0x23
  4061d3:	je     0x406219
  4061d5:	call   rbx
  4061d7:	test   eax,eax
  4061d9:	jne    0x4061fe
  4061db:	movzx  ecx,dil
  4061df:	call   rbx
  4061e1:	test   eax,eax
  4061e3:	je     0x4061f0
  4061e5:	movsxd rax,r14d
  4061e8:	add    r14d,0x1
  4061ec:	mov    BYTE PTR [rsi+rax*1],0x20
  4061f0:	movzx  edx,BYTE PTR [r15]
  4061f4:	movsxd rax,r14d
  4061f7:	add    r14d,0x1
  4061fb:	mov    BYTE PTR [rsi+rax*1],dl
  4061fe:	movzx  edi,BYTE PTR [r15]
  406202:	add    r15,0x1
  406206:	movzx  ecx,BYTE PTR [r15]
  40620a:	cmp    cl,0x3b
  40620d:	setne  dl
  406210:	test   cl,cl
  406212:	setne  al
  406215:	test   dl,al
  406217:	jne    0x4061d0
  406219:	movsxd r14,r14d
  40621c:	mov    BYTE PTR [rsi+r14*1],0x0
  406221:	cmp    BYTE PTR [rsp+0x30],0x5b
  406226:	je     0x4062c4
  40622c:	mov    edx,DWORD PTR [rsp+0x28]
  406230:	test   edx,edx
  406232:	je     0x4060c4
  406238:	mov    r8,QWORD PTR [rsp+0x198]
  406240:	mov    rdx,rsi
  406243:	mov    rcx,r12
  406246:	call   QWORD PTR [rsp+0x190]
  40624d:	jmp    0x4060c4
  406252:	mov    rax,QWORD PTR [rip+0x35bd7]        # 0x43be30
  406259:	mov    eax,DWORD PTR [rax]
  40625b:	test   eax,eax
  40625d:	jne    0x406297
  40625f:	mov    eax,DWORD PTR [rsp+0x2c]
  406263:	add    rsp,0x138
  40626a:	pop    rbx
  40626b:	pop    rsi
  40626c:	pop    rdi
  40626d:	pop    rbp
  40626e:	pop    r12
  406270:	pop    r13
  406272:	pop    r14
  406274:	pop    r15
  406276:	ret    
  406277:	lea    r8,[rip+0x29ad5]        # 0x42fd53
  40627e:	lea    rcx,[rip+0x29ac5]        # 0x42fd4a
  406285:	mov    r9,rdx
  406288:	mov    edx,0x1fa5
  40628d:	call   0x40d350
  406292:	jmp    0x4060a1
  406297:	lea    r8,[rip+0x29af0]        # 0x42fd8e
  40629e:	lea    rcx,[rip+0x29aa5]        # 0x42fd4a
  4062a5:	mov    edx,0x2435
  4062aa:	call   0x40d350
  4062af:	jmp    0x40625f
  4062b1:	xor    r14d,r14d
  4062b4:	mov    BYTE PTR [rsi+r14*1],0x0
  4062b9:	cmp    BYTE PTR [rsp+0x30],0x5b
  4062be:	jne    0x40622c
  4062c4:	mov    edx,0x5d
  4062c9:	mov    rcx,r12
  4062cc:	call   0x42d638
  4062d1:	test   rax,rax
  4062d4:	je     0x4062d9
  4062d6:	mov    BYTE PTR [rax],0x0
  4062d9:	mov    rax,QWORD PTR [rip+0x35b50]        # 0x43be30
  4062e0:	mov    r8d,DWORD PTR [rax]
  4062e3:	test   r8d,r8d
  4062e6:	jne    0x406351
  4062e8:	lea    rdx,[r12+0x1]
  4062ed:	mov    rcx,QWORD PTR [rsp+0x188]
  4062f5:	call   QWORD PTR [rip+0x3c7b9]        # 0x442ab4
  4062fb:	test   eax,eax
  4062fd:	mov    DWORD PTR [rsp+0x28],0x0
  406305:	jne    0x4060c4
  40630b:	mov    rax,QWORD PTR [rip+0x35b1e]        # 0x43be30
  406312:	mov    DWORD PTR [rsp+0x2c],0x1
  40631a:	mov    DWORD PTR [rsp+0x28],0x1
  406322:	mov    ecx,DWORD PTR [rax]
  406324:	test   ecx,ecx
  406326:	je     0x4060c4
  40632c:	lea    r8,[rip+0x29a4d]        # 0x42fd80
  406333:	lea    rcx,[rip+0x29a10]        # 0x42fd4a
  40633a:	mov    edx,0x2385
  40633f:	call   0x40d350
  406344:	mov    eax,DWORD PTR [rsp+0x2c]
  406348:	mov    DWORD PTR [rsp+0x28],eax
  40634c:	jmp    0x4060c4
  406351:	lea    r9,[r12+0x1]
  406356:	lea    r8,[rip+0x29a0f]        # 0x42fd6c
  40635d:	lea    rcx,[rip+0x299e6]        # 0x42fd4a
  406364:	mov    edx,0x2355
  406369:	call   0x40d350
  40636e:	jmp    0x4062e8
  406373:	nop    DWORD PTR [rax]
  406376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406380:	push   r15
  406382:	push   r14
  406384:	push   r13
  406386:	push   r12
  406388:	push   rbp
  406389:	push   rdi
  40638a:	push   rsi
  40638b:	push   rbx
  40638c:	sub    rsp,0x48
  406390:	mov    r14,rdx
  406393:	lea    rdx,[rip+0x29a02]        # 0x42fd9c
  40639a:	mov    r13,rcx
  40639d:	mov    r12,r8
  4063a0:	mov    rdi,r9
  4063a3:	call   0x42d718
  4063a8:	test   rax,rax
  4063ab:	mov    rbx,rax
  4063ae:	je     0x406500
  4063b4:	mov    rbp,QWORD PTR [rip+0x35a75]        # 0x43be30
  4063bb:	mov    ecx,DWORD PTR [rbp+0x0]
  4063be:	test   ecx,ecx
  4063c0:	jne    0x406540
  4063c6:	mov    rax,QWORD PTR [rip+0x35a23]        # 0x43bdf0
  4063cd:	lea    r8,[rip+0x20fc]        # 0x4084d0
  4063d4:	lea    rdx,[rip+0x299f8]        # 0x42fdd3
  4063db:	mov    r9,rdi
  4063de:	mov    rcx,rbx
  4063e1:	mov    QWORD PTR [rsp+0x38],rax
  4063e6:	call   0x406060
  4063eb:	cmp    BYTE PTR [r12],0x0
  4063f0:	jne    0x406420
  4063f2:	mov    esi,DWORD PTR [rbp+0x0]
  4063f5:	test   esi,esi
  4063f7:	jne    0x406572
  4063fd:	mov    rcx,rbx
  406400:	call   0x42d730
  406405:	mov    eax,esi
  406407:	add    rsp,0x48
  40640b:	pop    rbx
  40640c:	pop    rsi
  40640d:	pop    rdi
  40640e:	pop    rbp
  40640f:	pop    r12
  406411:	pop    r13
  406413:	pop    r14
  406415:	pop    r15
  406417:	ret    
  406418:	nop    DWORD PTR [rax+rax*1+0x0]
  406420:	mov    rcx,rbx
  406423:	lea    r14,[rsp+0x38]
  406428:	call   0x42d660
  40642d:	lea    rdx,[rdi+0xd8]
  406434:	mov    rcx,r14
  406437:	call   0x41d750
  40643c:	test   rax,rax
  40643f:	je     0x4063f2
  406441:	lea    r8,[rip+0x2088]        # 0x4084d0
  406448:	mov    r9,rdi
  40644b:	mov    rdx,r12
  40644e:	mov    rcx,rbx
  406451:	mov    r15d,DWORD PTR [rdi+0x8]
  406455:	call   0x406060
  40645a:	test   BYTE PTR [rdi+0xf5],0x2
  406461:	mov    esi,eax
  406463:	je     0x406565
  406469:	mov    rax,QWORD PTR [rdi+0xd8]
  406470:	cmp    QWORD PTR [rax],0x0
  406474:	je     0x4064c0
  406476:	mov    r9d,DWORD PTR [rdi+0x8]
  40647a:	test   r9d,r9d
  40647d:	je     0x4064c0
  40647f:	test   r15d,r15d
  406482:	jne    0x4064c0
  406484:	mov    rdx,QWORD PTR [rsp+0x38]
  406489:	cmp    QWORD PTR [rdx],0x0
  40648d:	jne    0x4064c0
  40648f:	mov    edx,DWORD PTR [rbp+0x0]
  406492:	test   edx,edx
  406494:	je     0x4064c0
  406496:	add    rax,0x8
  40649a:	lea    r8,[rip+0x2993f]        # 0x42fde0
  4064a1:	lea    rcx,[rip+0x298a2]        # 0x42fd4a
  4064a8:	mov    QWORD PTR [rsp+0x20],rax
  4064ad:	mov    edx,0x1a42
  4064b2:	call   0x40d350
  4064b7:	nop    WORD PTR [rax+rax*1+0x0]
  4064c0:	mov    rcx,r14
  4064c3:	call   0x41d630
  4064c8:	test   esi,esi
  4064ca:	je     0x4063f2
  4064d0:	mov    eax,DWORD PTR [rbp+0x0]
  4064d3:	test   eax,eax
  4064d5:	je     0x4063fd
  4064db:	lea    r8,[rip+0x29933]        # 0x42fe15
  4064e2:	lea    rcx,[rip+0x29861]        # 0x42fd4a
  4064e9:	mov    QWORD PTR [rsp+0x20],r13
  4064ee:	mov    r9,r12
  4064f1:	mov    edx,0x12e5
  4064f6:	call   0x40d350
  4064fb:	jmp    0x4063fd
  406500:	mov    rax,QWORD PTR [rip+0x35929]        # 0x43be30
  406507:	mov    esi,DWORD PTR [rax]
  406509:	test   esi,esi
  40650b:	je     0x406405
  406511:	lea    r8,[rip+0x29886]        # 0x42fd9e
  406518:	lea    rcx,[rip+0x2982b]        # 0x42fd4a
  40651f:	mov    QWORD PTR [rsp+0x20],r14
  406524:	mov    r9,r13
  406527:	mov    edx,0x1265
  40652c:	xor    esi,esi
  40652e:	call   0x40d350
  406533:	jmp    0x406405
  406538:	nop    DWORD PTR [rax+rax*1+0x0]
  406540:	lea    r8,[rip+0x29872]        # 0x42fdb9
  406547:	lea    rcx,[rip+0x297fc]        # 0x42fd4a
  40654e:	mov    QWORD PTR [rsp+0x20],r14
  406553:	mov    r9,r13
  406556:	mov    edx,0x12a5
  40655b:	call   0x40d350
  406560:	jmp    0x4063c6
  406565:	mov    rcx,r14
  406568:	call   0x41d630
  40656d:	jmp    0x4063f2
  406572:	lea    r8,[rip+0x298ba]        # 0x42fe33
  406579:	lea    rcx,[rip+0x297ca]        # 0x42fd4a
  406580:	mov    r9,r12
  406583:	mov    edx,0x1306
  406588:	xor    esi,esi
  40658a:	call   0x40d350
  40658f:	jmp    0x4063fd
  406594:	xchg   ax,ax
  406596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4065a0:	push   rsi
  4065a1:	push   rbx
  4065a2:	sub    rsp,0x48
  4065a6:	mov    rsi,rcx
  4065a9:	mov    rcx,QWORD PTR [rip+0x3aa90]        # 0x441040
  4065b0:	mov    rbx,rdx
  4065b3:	mov    QWORD PTR [rsp+0x38],0x0
  4065bc:	test   rcx,rcx
  4065bf:	je     0x4065e0
  4065c1:	mov    r8,rdx
  4065c4:	lea    rdx,[rip+0x29885]        # 0x42fe50
  4065cb:	mov    r9,rsi
  4065ce:	call   0x406380
  4065d3:	test   eax,eax
  4065d5:	je     0x4065e0
  4065d7:	add    rsp,0x48
  4065db:	pop    rbx
  4065dc:	pop    rsi
  4065dd:	ret    
  4065de:	xchg   ax,ax
  4065e0:	lea    rcx,[rip+0x2985d]        # 0x42fe44
  4065e7:	call   0x42d6e0
  4065ec:	test   rax,rax
  4065ef:	mov    QWORD PTR [rsp+0x38],rax
  4065f4:	je     0x406710
  4065fa:	lea    rdx,[rip+0x29864]        # 0x42fe65
  406601:	mov    r9,rsi
  406604:	mov    r8,rbx
  406607:	mov    rcx,rax
  40660a:	call   0x406380
  40660f:	test   eax,eax
  406611:	jne    0x4065d7
  406613:	lea    rcx,[rip+0x29897]        # 0x42feb1
  40661a:	call   0x42d6e0
  40661f:	test   rax,rax
  406622:	je     0x4066e0
  406628:	lea    rcx,[rsp+0x38]
  40662d:	lea    rdx,[rip+0x2a4bc]        # 0x430af0
  406634:	mov    r8,rax
  406637:	call   0x42d4a0
  40663c:	test   eax,eax
  40663e:	js     0x406671
  406640:	mov    rcx,QWORD PTR [rsp+0x38]
  406645:	lea    rdx,[rip+0x2a494]        # 0x430ae0
  40664c:	mov    r9,rsi
  40664f:	mov    r8,rbx
  406652:	call   0x406380
  406657:	mov    rcx,QWORD PTR [rsp+0x38]
  40665c:	mov    DWORD PTR [rsp+0x2c],eax
  406660:	call   0x42d6f8
  406665:	mov    eax,DWORD PTR [rsp+0x2c]
  406669:	test   eax,eax
  40666b:	jne    0x4065d7
  406671:	lea    rcx,[rip+0x2986e]        # 0x42fee6
  406678:	call   0x405e90
  40667d:	test   rax,rax
  406680:	mov    QWORD PTR [rsp+0x38],rax
  406685:	je     0x406740
  40668b:	lea    rdx,[rip+0x29862]        # 0x42fef4
  406692:	mov    r9,rsi
  406695:	mov    r8,rbx
  406698:	mov    rcx,rax
  40669b:	call   0x406380
  4066a0:	mov    rcx,QWORD PTR [rsp+0x38]
  4066a5:	mov    DWORD PTR [rsp+0x2c],eax
  4066a9:	call   0x42d6f8
  4066ae:	mov    eax,DWORD PTR [rsp+0x2c]
  4066b2:	test   eax,eax
  4066b4:	jne    0x4065d7
  4066ba:	lea    rdx,[rip+0x298c7]        # 0x42ff88
  4066c1:	lea    rcx,[rip+0x29840]        # 0x42ff08
  4066c8:	mov    r9,rsi
  4066cb:	mov    r8,rbx
  4066ce:	call   0x406380
  4066d3:	add    rsp,0x48
  4066d7:	pop    rbx
  4066d8:	pop    rsi
  4066d9:	ret    
  4066da:	nop    WORD PTR [rax+rax*1+0x0]
  4066e0:	mov    rax,QWORD PTR [rip+0x35749]        # 0x43be30
  4066e7:	mov    edx,DWORD PTR [rax]
  4066e9:	test   edx,edx
  4066eb:	je     0x406671
  4066ed:	lea    r8,[rip+0x297cc]        # 0x42fec0
  4066f4:	lea    rcx,[rip+0x2964f]        # 0x42fd4a
  4066fb:	mov    edx,0x1706
  406700:	call   0x40d350
  406705:	jmp    0x406671
  40670a:	nop    WORD PTR [rax+rax*1+0x0]
  406710:	mov    rax,QWORD PTR [rip+0x35719]        # 0x43be30
  406717:	mov    ecx,DWORD PTR [rax]
  406719:	test   ecx,ecx
  40671b:	je     0x406613
  406721:	lea    r8,[rip+0x29758]        # 0x42fe80
  406728:	lea    rcx,[rip+0x2961b]        # 0x42fd4a
  40672f:	mov    edx,0x1636
  406734:	call   0x40d350
  406739:	jmp    0x406613
  40673e:	xchg   ax,ax
  406740:	mov    rax,QWORD PTR [rip+0x356e9]        # 0x43be30
  406747:	mov    eax,DWORD PTR [rax]
  406749:	test   eax,eax
  40674b:	je     0x4066ba
  406751:	lea    r9,[rip+0x297b0]        # 0x42ff08
  406758:	lea    r8,[rip+0x297f9]        # 0x42ff58
  40675f:	lea    rcx,[rip+0x295e4]        # 0x42fd4a
  406766:	mov    edx,0x17a6
  40676b:	call   0x40d350
  406770:	jmp    0x4066ba
  406775:	nop
  406776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406780:	push   rbp
  406781:	push   rdi
  406782:	push   rsi
  406783:	push   rbx
  406784:	sub    rsp,0x48
  406788:	lea    rbx,[rip+0x2a271]        # 0x430a00
  40678f:	lea    rdi,[rip+0x2a2ea]        # 0x430a80
  406796:	test   rdx,rdx
  406799:	mov    rsi,rcx
  40679c:	mov    rbp,rdx
  40679f:	je     0x406840
  4067a5:	mov    rdx,rbx
  4067a8:	mov    rcx,rsi
  4067ab:	call   0x42d630
  4067b0:	test   eax,eax
  4067b2:	je     0x4067f3
  4067b4:	add    rbx,0x8
  4067b8:	cmp    rbx,rdi
  4067bb:	jne    0x4067a5
  4067bd:	mov    rdx,QWORD PTR [rip+0x3566c]        # 0x43be30
  4067c4:	xor    eax,eax
  4067c6:	mov    edx,DWORD PTR [rdx]
  4067c8:	test   edx,edx
  4067ca:	je     0x40680c
  4067cc:	lea    r8,[rip+0x297c5]        # 0x42ff98
  4067d3:	lea    rcx,[rip+0x29570]        # 0x42fd4a
  4067da:	mov    r9,rsi
  4067dd:	mov    edx,0x38e5
  4067e2:	mov    QWORD PTR [rsp+0x38],rax
  4067e7:	call   0x40d350
  4067ec:	mov    rax,QWORD PTR [rsp+0x38]
  4067f1:	jmp    0x40680c
  4067f3:	mov    rdx,QWORD PTR [rip+0x35636]        # 0x43be30
  4067fa:	movzx  eax,WORD PTR [rbx+0x6]
  4067fe:	mov    ecx,DWORD PTR [rdx]
  406800:	mov    WORD PTR [rbp+0xc],ax
  406804:	test   ecx,ecx
  406806:	jne    0x406815
  406808:	lea    rax,[rbp+0xc]
  40680c:	add    rsp,0x48
  406810:	pop    rbx
  406811:	pop    rsi
  406812:	pop    rdi
  406813:	pop    rbp
  406814:	ret    
  406815:	lea    r8,[rip+0x2979c]        # 0x42ffb8
  40681c:	lea    rcx,[rip+0x29527]        # 0x42fd4a
  406823:	mov    DWORD PTR [rsp+0x20],eax
  406827:	mov    r9,rsi
  40682a:	mov    edx,0x3935
  40682f:	call   0x40d350
  406834:	jmp    0x406808
  406836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406840:	lea    rdx,[rip+0x29503]        # 0x42fd4a
  406847:	lea    rcx,[rip+0x29744]        # 0x42ff92
  40684e:	mov    r8d,0x389
  406854:	call   0x42d350
  406859:	xor    eax,eax
  40685b:	jmp    0x40680c
  40685d:	nop    DWORD PTR [rax]
  406860:	push   rbx
  406861:	sub    rsp,0x20
  406865:	mov    rbx,rcx
  406868:	mov    rcx,QWORD PTR [rip+0x3a7d1]        # 0x441040
  40686f:	test   rcx,rcx
  406872:	je     0x406884
  406874:	call   0x42d6f8
  406879:	mov    QWORD PTR [rip+0x3a7bc],0x0        # 0x441040
  406884:	xor    eax,eax
  406886:	test   rbx,rbx
  406889:	je     0x4068ab
  40688b:	cmp    BYTE PTR [rbx],0x0
  40688e:	je     0x4068ab
  406890:	mov    rcx,rbx
  406893:	call   QWORD PTR [rip+0x3c213]        # 0x442aac
  406899:	test   rax,rax
  40689c:	mov    QWORD PTR [rip+0x3a79d],rax        # 0x441040
  4068a3:	sete   al
  4068a6:	movzx  eax,al
  4068a9:	neg    eax
  4068ab:	add    rsp,0x20
  4068af:	pop    rbx
  4068b0:	ret    
  4068b1:	nop    DWORD PTR [rax+rax*1+0x0]
  4068b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068c0:	push   rdi
  4068c1:	push   rbx
  4068c2:	sub    rsp,0x68
  4068c6:	test   rcx,rcx
  4068c9:	mov    rbx,rcx
  4068cc:	mov    QWORD PTR [rsp+0x28],0x0
  4068d5:	je     0x406930
  4068d7:	lea    r8,[rsp+0x30]
  4068dc:	xor    eax,eax
  4068de:	mov    ecx,0x6
  4068e3:	xor    edx,edx
  4068e5:	lea    r9,[rsp+0x28]
  4068ea:	mov    rdi,r8
  4068ed:	rep stos QWORD PTR es:[rdi],rax
  4068f0:	mov    DWORD PTR [rsp+0x38],0x1
  4068f8:	mov    DWORD PTR [rsp+0x30],0x400
  406900:	mov    rcx,rbx
  406903:	call   QWORD PTR [rip+0x3c423]        # 0x442d2c
  406909:	test   eax,eax
  40690b:	jne    0x406920
  40690d:	mov    rax,QWORD PTR [rsp+0x28]
  406912:	add    rsp,0x68
  406916:	pop    rbx
  406917:	pop    rdi
  406918:	ret    
  406919:	nop    DWORD PTR [rax+0x0]
  406920:	xor    eax,eax
  406922:	add    rsp,0x68
  406926:	pop    rbx
  406927:	pop    rdi
  406928:	ret    
  406929:	nop    DWORD PTR [rax+0x0]
  406930:	lea    rdx,[rip+0x29413]        # 0x42fd4a
  406937:	lea    rcx,[rip+0x2969e]        # 0x42ffdc
  40693e:	mov    r8d,0x3ba
  406944:	call   0x42d350
  406949:	jmp    0x4068d7
  40694b:	nop    DWORD PTR [rax+rax*1+0x0]
  406950:	push   rsi
  406951:	push   rbx
  406952:	sub    rsp,0x28
  406956:	test   rcx,rcx
  406959:	mov    rsi,rcx
  40695c:	mov    rbx,rdx
  40695f:	je     0x406990
  406961:	test   rdx,rdx
  406964:	je     0x406990
  406966:	mov    rcx,rsi
  406969:	call   0x4068c0
  40696e:	test   rax,rax
  406971:	mov    rsi,rax
  406974:	je     0x4069ab
  406976:	mov    rcx,QWORD PTR [rbx]
  406979:	test   rcx,rcx
  40697c:	je     0x406984
  40697e:	call   QWORD PTR [rip+0x3c3a0]        # 0x442d24
  406984:	mov    QWORD PTR [rbx],rsi
  406987:	xor    eax,eax
  406989:	add    rsp,0x28
  40698d:	pop    rbx
  40698e:	pop    rsi
  40698f:	ret    
  406990:	lea    rdx,[rip+0x293b3]        # 0x42fd4a
  406997:	lea    rcx,[rip+0x29652]        # 0x42fff0
  40699e:	mov    r8d,0x3cd
  4069a4:	call   0x42d350
  4069a9:	jmp    0x406966
  4069ab:	mov    eax,0xffffffff
  4069b0:	jmp    0x406989
  4069b2:	nop    DWORD PTR [rax+0x0]
  4069b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4069c0:	push   r15
  4069c2:	push   r14
  4069c4:	push   r13
  4069c6:	push   r12
  4069c8:	push   rbp
  4069c9:	push   rdi
  4069ca:	push   rsi
  4069cb:	push   rbx
  4069cc:	sub    rsp,0x468
  4069d3:	mov    r15,QWORD PTR [rip+0x35456]        # 0x43be30
  4069da:	mov    QWORD PTR [rsp+0x4b0],rcx
  4069e2:	mov    rsi,rdx
  4069e5:	mov    rbx,r8
  4069e8:	mov    QWORD PTR [rsp+0x4c8],r9
  4069f0:	mov    BYTE PTR [rsp+0x60],0x0
  4069f5:	mov    ebp,DWORD PTR [r15]
  4069f8:	mov    BYTE PTR [rsp+0x160],0x0
  406a00:	mov    BYTE PTR [rsp+0x260],0x0
  406a08:	mov    BYTE PTR [rsp+0x360],0x0
  406a10:	test   ebp,ebp
  406a12:	jne    0x406d90
  406a18:	mov    rcx,rsi
  406a1b:	call   0x42d610
  406a20:	mov    rcx,rbx
  406a23:	mov    rbp,rax
  406a26:	call   0x42d610
  406a2b:	lea    rcx,[rbp+rax*1+0xa]
  406a30:	call   0x42d6b8
  406a35:	test   rax,rax
  406a38:	mov    r13,rax
  406a3b:	je     0x406c83
  406a41:	cmp    BYTE PTR [rbx],0x0
  406a44:	je     0x406bd0
  406a4a:	cmp    BYTE PTR [rsi],0x0
  406a4d:	jne    0x406d71
  406a53:	mov    BYTE PTR [rax],0x0
  406a56:	mov    rdx,rbx
  406a59:	mov    rcx,r13
  406a5c:	call   0x42d640
  406a61:	lea    rdx,[rip+0x29334]        # 0x42fd9c
  406a68:	mov    rcx,r13
  406a6b:	call   0x42d718
  406a70:	test   rax,rax
  406a73:	mov    rbp,rax
  406a76:	je     0x406c70
  406a7c:	mov    ebx,DWORD PTR [r15]
  406a7f:	test   ebx,ebx
  406a81:	jne    0x406dbf
  406a87:	lea    rax,[rsp+0x360]
  406a8f:	mov    r12,QWORD PTR [rip+0x3c0d6]        # 0x442b6c
  406a96:	lea    rbx,[rsp+0x60]
  406a9b:	lea    r14,[rsp+0x58]
  406aa0:	mov    DWORD PTR [rsp+0x48],0x0
  406aa8:	xor    esi,esi
  406aaa:	mov    QWORD PTR [rsp+0x40],rax
  406aaf:	lea    rax,[rsp+0x160]
  406ab7:	mov    QWORD PTR [rsp+0x30],rax
  406abc:	lea    rax,[rsp+0x260]
  406ac4:	mov    QWORD PTR [rsp+0x38],rax
  406ac9:	nop    DWORD PTR [rax+0x0]
  406ad0:	mov    r8,rbp
  406ad3:	mov    edx,0xfe
  406ad8:	mov    rcx,rbx
  406adb:	call   0x42d720
  406ae0:	test   rax,rax
  406ae3:	je     0x406c40
  406ae9:	movzx  ecx,BYTE PTR [rsp+0x60]
  406aee:	cmp    cl,0x23
  406af1:	je     0x406ad0
  406af3:	call   r12
  406af6:	test   eax,eax
  406af8:	je     0x406be0
  406afe:	test   esi,esi
  406b00:	je     0x406ad0
  406b02:	lea    rdx,[rip+0x29560]        # 0x430069
  406b09:	mov    r8,r14
  406b0c:	mov    rcx,rbx
  406b0f:	call   0x42d410
  406b14:	test   rax,rax
  406b17:	je     0x406db5
  406b1d:	lea    rdi,[rip+0x2956f]        # 0x430093
  406b24:	mov    rsi,rax
  406b27:	mov    ecx,0x6
  406b2c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406b2e:	mov    esi,0x1
  406b33:	seta   dl
  406b36:	setb   al
  406b39:	cmp    dl,al
  406b3b:	jne    0x406ad0
  406b3d:	lea    rdx,[rip+0x29525]        # 0x430069
  406b44:	xor    ecx,ecx
  406b46:	mov    r8,r14
  406b49:	lea    rdi,[rip+0x29549]        # 0x430099
  406b50:	call   0x42d410
  406b55:	mov    ecx,0x4
  406b5a:	mov    rsi,rax
  406b5d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406b5f:	jne    0x406dfc
  406b65:	mov    r10d,DWORD PTR [r15]
  406b68:	test   r10d,r10d
  406b6b:	jne    0x406f6f
  406b71:	lea    rdx,[rip+0x294f1]        # 0x430069
  406b78:	xor    ecx,ecx
  406b7a:	mov    r8,r14
  406b7d:	call   0x42d410
  406b82:	lea    rdx,[rip+0x294e0]        # 0x430069
  406b89:	xor    ecx,ecx
  406b8b:	mov    r8,r14
  406b8e:	call   0x42d410
  406b93:	lea    rdx,[rip+0x294cf]        # 0x430069
  406b9a:	xor    ecx,ecx
  406b9c:	mov    r8,r14
  406b9f:	call   0x42d410
  406ba4:	mov    rcx,rax
  406ba7:	mov    rsi,rax
  406baa:	call   0x42d610
  406baf:	cmp    rax,0x11
  406bb3:	ja     0x406e74
  406bb9:	mov    DWORD PTR [rsp+0x48],0x1
  406bc1:	mov    esi,0x1
  406bc6:	jmp    0x406ad0
  406bcb:	nop    DWORD PTR [rax+rax*1+0x0]
  406bd0:	mov    BYTE PTR [rax],0x0
  406bd3:	jmp    0x406a61
  406bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  406be0:	lea    rdx,[rip+0x29482]        # 0x430069
  406be7:	mov    r8,r14
  406bea:	mov    rcx,rbx
  406bed:	xor    esi,esi
  406bef:	call   0x42d410
  406bf4:	mov    rdx,QWORD PTR [rsp+0x4c8]
  406bfc:	mov    rcx,rax
  406bff:	call   0x42d630
  406c04:	test   eax,eax
  406c06:	jne    0x406ad0
  406c0c:	mov    r11d,DWORD PTR [r15]
  406c0f:	mov    sil,0x1
  406c12:	test   r11d,r11d
  406c15:	je     0x406ad0
  406c1b:	mov    r9,QWORD PTR [rsp+0x4c8]
  406c23:	lea    r8,[rip+0x29446]        # 0x430070
  406c2a:	lea    rcx,[rip+0x29119]        # 0x42fd4a
  406c31:	mov    edx,0x43d5
  406c36:	call   0x40d350
  406c3b:	jmp    0x406ad0
  406c40:	mov    rcx,rbp
  406c43:	call   0x42d730
  406c48:	mov    rcx,r13
  406c4b:	call   0x42d6f8
  406c50:	mov    ecx,DWORD PTR [rsp+0x48]
  406c54:	test   ecx,ecx
  406c56:	jne    0x406c90
  406c58:	mov    eax,DWORD PTR [rsp+0x48]
  406c5c:	add    rsp,0x468
  406c63:	pop    rbx
  406c64:	pop    rsi
  406c65:	pop    rdi
  406c66:	pop    rbp
  406c67:	pop    r12
  406c69:	pop    r13
  406c6b:	pop    r14
  406c6d:	pop    r15
  406c6f:	ret    
  406c70:	mov    esi,DWORD PTR [r15]
  406c73:	test   esi,esi
  406c75:	jne    0x406f2f
  406c7b:	mov    rcx,r13
  406c7e:	call   0x42d6f8
  406c83:	xor    eax,eax
  406c85:	jmp    0x406c5c
  406c87:	nop    WORD PTR [rax+rax*1+0x0]
  406c90:	mov    rax,QWORD PTR [rsp+0x4b0]
  406c98:	lea    rsi,[rsp+0x160]
  406ca0:	mov    rcx,rsi
  406ca3:	lea    rdx,[rax+0xc8]
  406caa:	call   0x406950
  406caf:	test   eax,eax
  406cb1:	js     0x406d30
  406cb3:	mov    rax,QWORD PTR [rsp+0x4b0]
  406cbb:	mov    rdx,rsi
  406cbe:	lea    rcx,[rax+0x38]
  406cc2:	call   0x41d6f0
  406cc7:	test   rax,rax
  406cca:	je     0x406c83
  406ccc:	mov    rax,QWORD PTR [rsp+0x4b0]
  406cd4:	mov    rsi,QWORD PTR [rax+0xc8]
  406cdb:	test   rsi,rsi
  406cde:	je     0x406d3b
  406ce0:	mov    rdi,rax
  406ce3:	jmp    0x406cee
  406ce5:	mov    rsi,QWORD PTR [rsi+0x28]
  406ce9:	test   rsi,rsi
  406cec:	je     0x406d3b
  406cee:	mov    edx,DWORD PTR [r15]
  406cf1:	test   edx,edx
  406cf3:	je     0x406ce5
  406cf5:	mov    rcx,QWORD PTR [rdi+0xc8]
  406cfc:	mov    rdx,rbx
  406cff:	mov    r8d,0xff
  406d05:	call   0x4131f0
  406d0a:	lea    r8,[rip+0x293d6]        # 0x4300e7
  406d11:	lea    rcx,[rip+0x29032]        # 0x42fd4a
  406d18:	mov    r9,rax
  406d1b:	mov    edx,0x46a5
  406d20:	call   0x40d350
  406d25:	jmp    0x406ce5
  406d27:	nop    WORD PTR [rax+rax*1+0x0]
  406d30:	mov    eax,DWORD PTR [r15]
  406d33:	test   eax,eax
  406d35:	jne    0x406f4f
  406d3b:	cmp    BYTE PTR [rsp+0x260],0x0
  406d43:	jne    0x406ddf
  406d49:	cmp    BYTE PTR [rsp+0x360],0x0
  406d51:	je     0x406c58
  406d57:	mov    rdx,QWORD PTR [rsp+0x4b0]
  406d5f:	lea    rcx,[rsp+0x360]
  406d67:	call   0x406780
  406d6c:	jmp    0x406c58
  406d71:	mov    r8,rbp
  406d74:	mov    rdx,rsi
  406d77:	mov    rcx,rax
  406d7a:	mov    edi,0x5c
  406d7f:	call   0x42d6a8
  406d84:	mov    WORD PTR [r13+rbp*1+0x0],di
  406d8a:	jmp    0x406a56
  406d8f:	nop
  406d90:	mov    QWORD PTR [rsp+0x20],r8
  406d95:	lea    rcx,[rip+0x28fae]        # 0x42fd4a
  406d9c:	lea    r8,[rip+0x29275]        # 0x430018
  406da3:	mov    r9,rdx
  406da6:	mov    edx,0x4165
  406dab:	call   0x40d350
  406db0:	jmp    0x406a18
  406db5:	mov    esi,0x1
  406dba:	jmp    0x406ad0
  406dbf:	lea    r8,[rip+0x29287]        # 0x43004d
  406dc6:	lea    rcx,[rip+0x28f7d]        # 0x42fd4a
  406dcd:	mov    r9,r13
  406dd0:	mov    edx,0x4335
  406dd5:	call   0x40d350
  406dda:	jmp    0x406a87
  406ddf:	lea    rcx,[rsp+0x260]
  406de7:	call   0x405ef0
  406dec:	mov    rdi,QWORD PTR [rsp+0x4b0]
  406df4:	mov    DWORD PTR [rdi+0x8],eax
  406df7:	jmp    0x406d49
  406dfc:	lea    rdx,[rip+0x29266]        # 0x430069
  406e03:	mov    r8,r14
  406e06:	xor    ecx,ecx
  406e08:	call   0x42d410
  406e0d:	mov    rcx,QWORD PTR [rsp+0x40]
  406e12:	mov    rdx,rax
  406e15:	call   0x42d628
  406e1a:	lea    rdx,[rip+0x29248]        # 0x430069
  406e21:	mov    r8,r14
  406e24:	xor    ecx,ecx
  406e26:	call   0x42d410
  406e2b:	mov    rcx,QWORD PTR [rsp+0x30]
  406e30:	mov    rdx,rax
  406e33:	call   0x42d628
  406e38:	mov    r8d,DWORD PTR [r15]
  406e3b:	test   r8d,r8d
  406e3e:	jne    0x406f8c
  406e44:	lea    rdx,[rip+0x2921e]        # 0x430069
  406e4b:	mov    r8,r14
  406e4e:	xor    ecx,ecx
  406e50:	mov    esi,0x1
  406e55:	call   0x42d410
  406e5a:	mov    rcx,QWORD PTR [rsp+0x38]
  406e5f:	mov    rdx,rax
  406e62:	call   0x42d628
  406e67:	mov    DWORD PTR [rsp+0x48],0x1
  406e6f:	jmp    0x406ad0
  406e74:	lea    rcx,[rsi+0x6]
  406e78:	call   0x405f20
  406e7d:	lea    rcx,[rsi+0x8]
  406e81:	mov    edi,eax
  406e83:	shl    edi,0x8
  406e86:	call   0x405f20
  406e8b:	mov    rcx,QWORD PTR [rsp+0x38]
  406e90:	lea    rdx,[rip+0x29214]        # 0x4300ab
  406e97:	mov    r8d,edi
  406e9a:	add    r8d,eax
  406e9d:	call   0x42d648
  406ea2:	lea    rcx,[rsi+0x10]
  406ea6:	call   0x405f20
  406eab:	lea    rcx,[rsi+0xe]
  406eaf:	mov    DWORD PTR [rsp+0x4c],eax
  406eb3:	call   0x405f20
  406eb8:	lea    rcx,[rsi+0xc]
  406ebc:	mov    edi,eax
  406ebe:	call   0x405f20
  406ec3:	lea    rcx,[rsi+0xa]
  406ec7:	mov    DWORD PTR [rsp+0x48],eax
  406ecb:	call   0x405f20
  406ed0:	mov    r9d,DWORD PTR [rsp+0x4c]
  406ed5:	mov    rcx,QWORD PTR [rsp+0x30]
  406eda:	lea    rdx,[rip+0x291cd]        # 0x4300ae
  406ee1:	mov    r8d,eax
  406ee4:	mov    DWORD PTR [rsp+0x20],edi
  406ee8:	mov    DWORD PTR [rsp+0x28],r9d
  406eed:	mov    r9d,DWORD PTR [rsp+0x48]
  406ef2:	call   0x42d648
  406ef7:	mov    r9d,DWORD PTR [r15]
  406efa:	test   r9d,r9d
  406efd:	je     0x406bb9
  406f03:	mov    rax,QWORD PTR [rsp+0x30]
  406f08:	mov    r9,QWORD PTR [rsp+0x38]
  406f0d:	lea    r8,[rip+0x291a6]        # 0x4300ba
  406f14:	lea    rcx,[rip+0x28e2f]        # 0x42fd4a
  406f1b:	mov    edx,0x44d5
  406f20:	mov    QWORD PTR [rsp+0x20],rax
  406f25:	call   0x40d350
  406f2a:	jmp    0x406bb9
  406f2f:	lea    r8,[rip+0x29104]        # 0x43003a
  406f36:	lea    rcx,[rip+0x28e0d]        # 0x42fd4a
  406f3d:	mov    r9,r13
  406f40:	mov    edx,0x42f5
  406f45:	call   0x40d350
  406f4a:	jmp    0x406c7b
  406f4f:	lea    r8,[rip+0x291aa]        # 0x430100
  406f56:	lea    rcx,[rip+0x28ded]        # 0x42fd4a
  406f5d:	mov    r9,rsi
  406f60:	mov    edx,0x46e3
  406f65:	call   0x40d350
  406f6a:	jmp    0x406d3b
  406f6f:	lea    r8,[rip+0x29127]        # 0x43009d
  406f76:	lea    rcx,[rip+0x28dcd]        # 0x42fd4a
  406f7d:	mov    edx,0x4455
  406f82:	call   0x40d350
  406f87:	jmp    0x406b71
  406f8c:	mov    r9,QWORD PTR [rsp+0x30]
  406f91:	lea    r8,[rip+0x2913f]        # 0x4300d7
  406f98:	lea    rcx,[rip+0x28dab]        # 0x42fd4a
  406f9f:	mov    edx,0x4545
  406fa4:	call   0x40d350
  406fa9:	jmp    0x406e44
  406fae:	xchg   ax,ax
  406fb0:	push   rbp
  406fb1:	push   rdi
  406fb2:	push   rsi
  406fb3:	push   rbx
  406fb4:	sub    rsp,0xb8
  406fbb:	mov    rbx,rcx
  406fbe:	lea    rcx,[rip+0x29166]        # 0x43012b
  406fc5:	call   0x42d6e0
  406fca:	test   rax,rax
  406fcd:	mov    rdi,rax
  406fd0:	je     0x406ff0
  406fd2:	mov    rdx,rbx
  406fd5:	mov    rcx,rax
  406fd8:	call   0x406780
  406fdd:	mov    rsi,QWORD PTR [rip+0x34e4c]        # 0x43be30
  406fe4:	mov    r9d,DWORD PTR [rsi]
  406fe7:	test   r9d,r9d
  406fea:	jne    0x4071f0
  406ff0:	lea    rcx,[rip+0x29168]        # 0x43015f
  406ff7:	call   0x42d6e0
  406ffc:	test   rax,rax
  406fff:	je     0x407050
  407001:	cmp    BYTE PTR [rax],0x0
  407004:	jne    0x407150
  40700a:	call   QWORD PTR [rip+0x3b8fc]        # 0x44290c
  407010:	lea    rcx,[rsp+0x30]
  407015:	lea    rdx,[rip+0x29aa4]        # 0x430ac0
  40701c:	mov    r8d,eax
  40701f:	call   0x42d4a0
  407024:	test   eax,eax
  407026:	js     0x407050
  407028:	mov    rdx,QWORD PTR [rsp+0x30]
  40702d:	lea    rcx,[rbx+0xe0]
  407034:	call   0x41d720
  407039:	test   rax,rax
  40703c:	jne    0x407168
  407042:	mov    rcx,QWORD PTR [rsp+0x30]
  407047:	call   0x42d6f8
  40704c:	nop    DWORD PTR [rax+0x0]
  407050:	lea    rcx,[rip+0x2913d]        # 0x430194
  407057:	call   0x42d6e0
  40705c:	test   rax,rax
  40705f:	mov    rdi,rax
  407062:	je     0x40708c
  407064:	mov    rcx,rax
  407067:	call   0x405ef0
  40706c:	lea    rcx,[rbx+0xd8]
  407073:	mov    DWORD PTR [rbx+0x8],eax
  407076:	call   0x41d630
  40707b:	mov    rsi,QWORD PTR [rip+0x34dae]        # 0x43be30
  407082:	mov    ecx,DWORD PTR [rsi]
  407084:	test   ecx,ecx
  407086:	jne    0x4071d0
  40708c:	lea    rcx,[rip+0x29132]        # 0x4301c5
  407093:	call   0x42d6e0
  407098:	test   rax,rax
  40709b:	mov    rdi,rax
  40709e:	je     0x407140
  4070a4:	lea    rdx,[rbx+0xc8]
  4070ab:	mov    rcx,rax
  4070ae:	call   0x406950
  4070b3:	test   eax,eax
  4070b5:	js     0x4071a3
  4070bb:	lea    rcx,[rbx+0x38]
  4070bf:	mov    rdx,rdi
  4070c2:	call   0x41d6f0
  4070c7:	test   rax,rax
  4070ca:	je     0x407140
  4070cc:	mov    rbx,QWORD PTR [rbx+0xc8]
  4070d3:	test   rbx,rbx
  4070d6:	je     0x407140
  4070d8:	mov    rsi,QWORD PTR [rip+0x34d51]        # 0x43be30
  4070df:	lea    rbp,[rsp+0x30]
  4070e4:	jmp    0x4070f9
  4070e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4070f0:	mov    rbx,QWORD PTR [rbx+0x28]
  4070f4:	test   rbx,rbx
  4070f7:	je     0x407140
  4070f9:	mov    eax,DWORD PTR [rsi]
  4070fb:	test   eax,eax
  4070fd:	je     0x4070f0
  4070ff:	mov    rcx,rbx
  407102:	mov    r8d,0x80
  407108:	mov    rdx,rbp
  40710b:	call   0x4131f0
  407110:	lea    r8,[rip+0x290e9]        # 0x430200
  407117:	lea    rcx,[rip+0x28c2c]        # 0x42fd4a
  40711e:	mov    r9,rax
  407121:	mov    QWORD PTR [rsp+0x20],rdi
  407126:	mov    edx,0x3495
  40712b:	call   0x40d350
  407130:	mov    rbx,QWORD PTR [rbx+0x28]
  407134:	test   rbx,rbx
  407137:	jne    0x4070f9
  407139:	nop    DWORD PTR [rax+0x0]
  407140:	add    rsp,0xb8
  407147:	pop    rbx
  407148:	pop    rsi
  407149:	pop    rdi
  40714a:	pop    rbp
  40714b:	ret    
  40714c:	nop    DWORD PTR [rax+0x0]
  407150:	lea    rcx,[rbx+0xe0]
  407157:	mov    rdx,rax
  40715a:	call   0x41d6f0
  40715f:	test   rax,rax
  407162:	je     0x407050
  407168:	mov    rsi,QWORD PTR [rip+0x34cc1]        # 0x43be30
  40716f:	mov    r8d,DWORD PTR [rsi]
  407172:	test   r8d,r8d
  407175:	je     0x407050
  40717b:	mov    r9,QWORD PTR [rbx+0xe0]
  407182:	lea    r8,[rip+0x28fdf]        # 0x430168
  407189:	lea    rcx,[rip+0x28bba]        # 0x42fd4a
  407190:	mov    edx,0x3195
  407195:	add    r9,0x8
  407199:	call   0x40d350
  40719e:	jmp    0x407050
  4071a3:	mov    rax,QWORD PTR [rip+0x34c86]        # 0x43be30
  4071aa:	mov    edx,DWORD PTR [rax]
  4071ac:	test   edx,edx
  4071ae:	je     0x407140
  4071b0:	lea    r8,[rip+0x29019]        # 0x4301d0
  4071b7:	lea    rcx,[rip+0x28b8c]        # 0x42fd4a
  4071be:	mov    r9,rdi
  4071c1:	mov    edx,0x3423
  4071c6:	call   0x40d350
  4071cb:	jmp    0x407140
  4071d0:	lea    r8,[rip+0x28fc9]        # 0x4301a0
  4071d7:	lea    rcx,[rip+0x28b6c]        # 0x42fd4a
  4071de:	mov    r9,rdi
  4071e1:	mov    edx,0x3255
  4071e6:	call   0x40d350
  4071eb:	jmp    0x40708c
  4071f0:	test   rax,rax
  4071f3:	lea    r9,[rip+0x28f2b]        # 0x430125
  4071fa:	lea    rax,[rip+0x28f25]        # 0x430126
  407201:	lea    r8,[rip+0x28f30]        # 0x430138
  407208:	lea    rcx,[rip+0x28b3b]        # 0x42fd4a
  40720f:	mov    QWORD PTR [rsp+0x20],rdi
  407214:	cmove  r9,rax
  407218:	mov    edx,0x3305
  40721d:	call   0x40d350
  407222:	jmp    0x406ff0
  407227:	nop    WORD PTR [rax+rax*1+0x0]
  407230:	push   r15
  407232:	push   r14
  407234:	push   r13
  407236:	push   r12
  407238:	push   rbp
  407239:	push   rdi
  40723a:	push   rsi
  40723b:	push   rbx
  40723c:	sub    rsp,0xd8
  407243:	mov    r13,rcx
  407246:	xor    ecx,ecx
  407248:	mov    rbx,rdx
  40724b:	mov    rdi,r8
  40724e:	call   0x40ff40
  407253:	test   rax,rax
  407256:	mov    rsi,rax
  407259:	je     0x407650
  40725f:	mov    rdx,rdi
  407262:	mov    rcx,rax
  407265:	call   0x40fd80
  40726a:	test   rax,rax
  40726d:	je     0x407650
  407273:	lea    rcx,[rip+0x28fbb]        # 0x430235
  40727a:	call   0x42d6e0
  40727f:	test   rax,rax
  407282:	je     0x4078a0
  407288:	cmp    BYTE PTR [rax],0x0
  40728b:	jne    0x4075b3
  407291:	call   QWORD PTR [rip+0x3b675]        # 0x44290c
  407297:	lea    rcx,[rsp+0x48]
  40729c:	lea    rdx,[rip+0x2985d]        # 0x430b00
  4072a3:	mov    r8d,eax
  4072a6:	call   0x42d4a0
  4072ab:	test   eax,eax
  4072ad:	js     0x4078a0
  4072b3:	mov    rcx,QWORD PTR [rsp+0x48]
  4072b8:	xor    r12d,r12d
  4072bb:	cmp    BYTE PTR [rcx],0x0
  4072be:	jne    0x407bc0
  4072c4:	call   0x42d6f8
  4072c9:	mov    rbp,QWORD PTR [rip+0x34b60]        # 0x43be30
  4072d0:	mov    r14d,DWORD PTR [rbp+0x0]
  4072d4:	test   r14d,r14d
  4072d7:	jne    0x407b72
  4072dd:	mov    rax,QWORD PTR [rbx]
  4072e0:	mov    rcx,rsi
  4072e3:	lea    rdx,[rax+0x8]
  4072e7:	call   0x4065a0
  4072ec:	test   eax,eax
  4072ee:	je     0x407660
  4072f4:	mov    rcx,rsi
  4072f7:	mov    rdi,rbx
  4072fa:	call   0x406fb0
  4072ff:	mov    rax,QWORD PTR [rbx]
  407302:	cmp    QWORD PTR [rax],0x0
  407306:	jne    0x407820
  40730c:	movzx  eax,WORD PTR [rbx+0xc]
  407310:	test   ax,ax
  407313:	je     0x407322
  407315:	test   rdi,rdi
  407318:	mov    WORD PTR [rsi+0xc],ax
  40731c:	je     0x407844
  407322:	mov    rax,QWORD PTR [rbx+0x18]
  407326:	cmp    QWORD PTR [rax],0x0
  40732a:	jne    0x407980
  407330:	mov    rax,QWORD PTR [rbx+0x20]
  407334:	cmp    QWORD PTR [rax],0x0
  407338:	jne    0x4079a7
  40733e:	mov    rax,QWORD PTR [rbx+0xb8]
  407345:	cmp    QWORD PTR [rax],0x0
  407349:	jne    0x4079d1
  40734f:	movzx  eax,BYTE PTR [rbx+0xf4]
  407356:	test   al,al
  407358:	js     0x407378
  40735a:	movzx  edx,BYTE PTR [rsi+0xf4]
  407361:	and    eax,0xffffff80
  407364:	and    edx,0x7f
  407367:	or     eax,edx
  407369:	test   rdi,rdi
  40736c:	mov    BYTE PTR [rsi+0xf4],al
  407372:	je     0x407a0a
  407378:	mov    rax,QWORD PTR [rbx+0xc0]
  40737f:	cmp    QWORD PTR [rax],0x0
  407383:	jne    0x407a80
  407389:	mov    rax,QWORD PTR [rbx+0x30]
  40738d:	cmp    QWORD PTR [rax],0x0
  407391:	jne    0x407a60
  407397:	mov    rax,QWORD PTR [rbx+0x68]
  40739b:	cmp    QWORD PTR [rax],0x0
  40739f:	jne    0x407a40
  4073a5:	mov    rax,QWORD PTR [rbx+0x70]
  4073a9:	cmp    QWORD PTR [rax],0x0
  4073ad:	jne    0x407a20
  4073b3:	mov    rax,QWORD PTR [rbx+0x78]
  4073b7:	cmp    QWORD PTR [rax],0x0
  4073bb:	jne    0x407950
  4073c1:	mov    rax,QWORD PTR [rbx+0x88]
  4073c8:	cmp    QWORD PTR [rax],0x0
  4073cc:	jne    0x407930
  4073d2:	movzx  edx,BYTE PTR [rbx+0xf4]
  4073d9:	movzx  eax,BYTE PTR [rbx+0x90]
  4073e0:	test   al,al
  4073e2:	je     0x4073ea
  4073e4:	mov    BYTE PTR [rsi+0x90],al
  4073ea:	test   dl,0x2
  4073ed:	je     0x4073fd
  4073ef:	or     BYTE PTR [rsi+0xf4],0x2
  4073f6:	movzx  edx,BYTE PTR [rbx+0xf4]
  4073fd:	and    edx,0x1
  407400:	je     0x407409
  407402:	or     BYTE PTR [rsi+0xf4],0x1
  407409:	mov    eax,DWORD PTR [rbx+0x10]
  40740c:	test   eax,eax
  40740e:	je     0x407413
  407410:	mov    DWORD PTR [rsi+0x10],eax
  407413:	mov    eax,DWORD PTR [rbx+0x8]
  407416:	test   eax,eax
  407418:	je     0x40741d
  40741a:	mov    DWORD PTR [rsi+0x8],eax
  40741d:	mov    eax,DWORD PTR [rbx+0x28]
  407420:	test   eax,eax
  407422:	je     0x407427
  407424:	mov    DWORD PTR [rsi+0x28],eax
  407427:	mov    eax,DWORD PTR [rbx+0x94]
  40742d:	test   eax,eax
  40742f:	je     0x407437
  407431:	mov    DWORD PTR [rsi+0x94],eax
  407437:	movzx  eax,BYTE PTR [rbx+0xf5]
  40743e:	test   al,0x4
  407440:	jne    0x407457
  407442:	movzx  edx,BYTE PTR [rsi+0xf5]
  407449:	and    eax,0x4
  40744c:	and    edx,0xfffffffb
  40744f:	or     eax,edx
  407451:	mov    BYTE PTR [rsi+0xf5],al
  407457:	test   rdi,rdi
  40745a:	je     0x407b10
  407460:	mov    rax,QWORD PTR [rbx+0x50]
  407464:	cmp    QWORD PTR [rax],0x0
  407468:	jne    0x4075c3
  40746e:	mov    rax,QWORD PTR [rbx+0x98]
  407475:	movzx  edx,BYTE PTR [rbx+0xf5]
  40747c:	mov    QWORD PTR [rsi+0x98],rax
  407483:	mov    rax,QWORD PTR [rbx+0xa0]
  40748a:	test   dl,0x8
  40748d:	mov    QWORD PTR [rsi+0xa0],rax
  407494:	mov    rax,QWORD PTR [rbx+0xa8]
  40749b:	mov    QWORD PTR [rsi+0xa8],rax
  4074a2:	mov    rax,QWORD PTR [rbx+0xb0]
  4074a9:	mov    QWORD PTR [rsi+0xb0],rax
  4074b0:	jne    0x40761b
  4074b6:	movzx  eax,BYTE PTR [rsi+0xf5]
  4074bd:	and    edx,0x1
  4074c0:	and    eax,0xfffffffe
  4074c3:	or     eax,edx
  4074c5:	mov    BYTE PTR [rsi+0xf5],al
  4074cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4074d0:	lea    rdx,[rbx+0x80]
  4074d7:	lea    rcx,[rsi+0x80]
  4074de:	call   0x41d750
  4074e3:	test   rax,rax
  4074e6:	je     0x407650
  4074ec:	test   r12d,r12d
  4074ef:	je     0x40758b
  4074f5:	mov    eax,DWORD PTR [rbp+0x0]
  4074f8:	test   eax,eax
  4074fa:	jne    0x408300
  407500:	mov    rbx,QWORD PTR [rsi+0xc8]
  407507:	test   rbx,rbx
  40750a:	je     0x407c10
  407510:	lea    rdi,[rsp+0x50]
  407515:	jmp    0x407529
  407517:	nop    WORD PTR [rax+rax*1+0x0]
  407520:	mov    rbx,QWORD PTR [rbx+0x28]
  407524:	test   rbx,rbx
  407527:	je     0x407570
  407529:	test   eax,eax
  40752b:	je     0x407520
  40752d:	mov    rcx,rbx
  407530:	mov    r8d,0x80
  407536:	mov    rdx,rdi
  407539:	call   0x4131f0
  40753e:	lea    r9,[rip+0x28f6e]        # 0x4304b3
  407545:	lea    r8,[rip+0x28f4a]        # 0x430496
  40754c:	lea    rcx,[rip+0x287f7]        # 0x42fd4a
  407553:	mov    QWORD PTR [rsp+0x20],rax
  407558:	mov    edx,0xda5
  40755d:	call   0x40d350
  407562:	mov    rbx,QWORD PTR [rbx+0x28]
  407566:	mov    eax,DWORD PTR [rbp+0x0]
  407569:	test   rbx,rbx
  40756c:	jne    0x407529
  40756e:	xchg   ax,ax
  407570:	cmp    QWORD PTR [rsi+0xc8],0x0
  407578:	je     0x407c10
  40757e:	test   eax,eax
  407580:	jne    0x407c78
  407586:	call   0x40cff0
  40758b:	mov    rdx,QWORD PTR [rsi+0xe0]
  407592:	mov    rax,rsi
  407595:	cmp    QWORD PTR [rdx],0x0
  407599:	jne    0x407860
  40759f:	add    rsp,0xd8
  4075a6:	pop    rbx
  4075a7:	pop    rsi
  4075a8:	pop    rdi
  4075a9:	pop    rbp
  4075aa:	pop    r12
  4075ac:	pop    r13
  4075ae:	pop    r14
  4075b0:	pop    r15
  4075b2:	ret    
  4075b3:	mov    rcx,rax
  4075b6:	call   0x40d460
  4075bb:	mov    r12d,eax
  4075be:	jmp    0x4072c9
  4075c3:	lea    rdx,[rbx+0x50]
  4075c7:	lea    rcx,[rsi+0x50]
  4075cb:	call   0x41d750
  4075d0:	mov    rdi,rax
  4075d3:	mov    rax,QWORD PTR [rbx+0x98]
  4075da:	movzx  edx,BYTE PTR [rbx+0xf5]
  4075e1:	mov    QWORD PTR [rsi+0x98],rax
  4075e8:	mov    rax,QWORD PTR [rbx+0xa0]
  4075ef:	test   dl,0x8
  4075f2:	mov    QWORD PTR [rsi+0xa0],rax
  4075f9:	mov    rax,QWORD PTR [rbx+0xa8]
  407600:	mov    QWORD PTR [rsi+0xa8],rax
  407607:	mov    rax,QWORD PTR [rbx+0xb0]
  40760e:	mov    QWORD PTR [rsi+0xb0],rax
  407615:	je     0x407ab0
  40761b:	movzx  ecx,BYTE PTR [rsi+0xf5]
  407622:	mov    eax,edx
  407624:	and    eax,0x8
  407627:	and    ecx,0xfffffff7
  40762a:	or     ecx,eax
  40762c:	mov    BYTE PTR [rsi+0xf5],cl
  407632:	movzx  edx,BYTE PTR [rbx+0xf5]
  407639:	and    edx,0x1
  40763c:	and    ecx,0xfffffffe
  40763f:	or     edx,ecx
  407641:	test   rdi,rdi
  407644:	mov    BYTE PTR [rsi+0xf5],dl
  40764a:	jne    0x4074d0
  407650:	mov    rcx,rsi
  407653:	call   0x410150
  407658:	xor    eax,eax
  40765a:	jmp    0x40759f
  40765f:	nop
  407660:	mov    rdx,rbx
  407663:	mov    rcx,rsi
  407666:	call   0x405da0
  40766b:	test   eax,eax
  40766d:	jne    0x407ac0
  407673:	mov    edx,DWORD PTR [rbp+0x0]
  407676:	test   edx,edx
  407678:	jne    0x407c5b
  40767e:	mov    rax,QWORD PTR [rbx]
  407681:	mov    rdi,rax
  407684:	add    rdi,0x8
  407688:	je     0x407694
  40768a:	cmp    BYTE PTR [rax+0x8],0x0
  40768e:	jne    0x4078c3
  407694:	lea    rcx,[rip+0x28c34]        # 0x4302cf
  40769b:	call   0x42d6e0
  4076a0:	test   rax,rax
  4076a3:	mov    rdi,rax
  4076a6:	je     0x40838d
  4076ac:	cmp    BYTE PTR [rax],0x0
  4076af:	lea    rax,[rip+0x28b78]        # 0x43022e
  4076b6:	cmove  rdi,rax
  4076ba:	mov    r11d,DWORD PTR [rbp+0x0]
  4076be:	test   r11d,r11d
  4076c1:	jne    0x4078a8
  4076c7:	mov    r8,QWORD PTR [rip+0x39972]        # 0x441040
  4076ce:	test   r8,r8
  4076d1:	je     0x4076ed
  4076d3:	lea    rdx,[rip+0x28a4b]        # 0x430125
  4076da:	mov    r9,rdi
  4076dd:	mov    rcx,rsi
  4076e0:	call   0x4069c0
  4076e5:	test   eax,eax
  4076e7:	jne    0x4072f4
  4076ed:	lea    rcx,[rip+0x28c4c]        # 0x430340
  4076f4:	call   0x405e90
  4076f9:	test   rax,rax
  4076fc:	mov    r14,rax
  4076ff:	je     0x407735
  407701:	mov    ecx,DWORD PTR [rbp+0x0]
  407704:	test   ecx,ecx
  407706:	jne    0x408487
  40770c:	lea    rdx,[rip+0x28a12]        # 0x430125
  407713:	mov    r9,rdi
  407716:	mov    r8,r14
  407719:	mov    rcx,rsi
  40771c:	call   0x4069c0
  407721:	mov    rcx,r14
  407724:	mov    r15d,eax
  407727:	call   0x42d6f8
  40772c:	test   r15d,r15d
  40772f:	jne    0x4072f4
  407735:	lea    rcx,[rip+0x28af2]        # 0x43022e
  40773c:	call   0x42d6e0
  407741:	test   rax,rax
  407744:	je     0x408431
  40774a:	cmp    BYTE PTR [rax],0x0
  40774d:	lea    rdx,[rip+0x2935c]        # 0x430ab0
  407754:	cmove  rax,rdx
  407758:	mov    edx,DWORD PTR [rbp+0x0]
  40775b:	test   edx,edx
  40775d:	jne    0x40845d
  407763:	lea    r8,[rip+0x28c24]        # 0x43038e
  40776a:	mov    r9,rdi
  40776d:	mov    rdx,rax
  407770:	mov    rcx,rsi
  407773:	call   0x4069c0
  407778:	test   eax,eax
  40777a:	jne    0x4072f4
  407780:	mov    r14d,DWORD PTR [rsi+0x8]
  407784:	lea    rcx,[rip+0x28a09]        # 0x430194
  40778b:	mov    ax,0x599
  40778f:	test   r14d,r14d
  407792:	cmove  r14d,eax
  407796:	call   0x42d6e0
  40779b:	test   rax,rax
  40779e:	mov    r15,rax
  4077a1:	je     0x407bd2
  4077a7:	mov    rcx,rax
  4077aa:	call   0x405ef0
  4077af:	mov    r14d,eax
  4077b2:	mov    eax,DWORD PTR [rbp+0x0]
  4077b5:	test   eax,eax
  4077b7:	jne    0x40843d
  4077bd:	lea    rdx,[rsi+0xc8]
  4077c4:	mov    rcx,rdi
  4077c7:	call   0x406950
  4077cc:	test   eax,eax
  4077ce:	js     0x4077e1
  4077d0:	lea    rcx,[rsi+0x38]
  4077d4:	mov    rdx,rdi
  4077d7:	call   0x41d6f0
  4077dc:	test   rax,rax
  4077df:	je     0x4077ea
  4077e1:	test   r14d,r14d
  4077e4:	je     0x4077ea
  4077e6:	mov    DWORD PTR [rsi+0x8],r14d
  4077ea:	mov    eax,DWORD PTR [rbp+0x0]
  4077ed:	test   eax,eax
  4077ef:	jne    0x408399
  4077f5:	cmp    QWORD PTR [rsi+0xc8],0x0
  4077fd:	jne    0x4072f4
  407803:	mov    rcx,QWORD PTR [r13+0x28]
  407807:	xor    r9d,r9d
  40780a:	mov    r8d,0x4e2c
  407810:	mov    rdx,r13
  407813:	call   0x423700
  407818:	jmp    0x4072f4
  40781d:	nop    DWORD PTR [rax]
  407820:	mov    rdx,rbx
  407823:	mov    rcx,rsi
  407826:	call   0x41d750
  40782b:	mov    rdi,rax
  40782e:	movzx  eax,WORD PTR [rbx+0xc]
  407832:	test   ax,ax
  407835:	jne    0x407315
  40783b:	test   rdi,rdi
  40783e:	jne    0x407322
  407844:	movzx  eax,BYTE PTR [rbx+0xf4]
  40784b:	test   al,al
  40784d:	mov    edx,eax
  40784f:	js     0x407a11
  407855:	xor    edi,edi
  407857:	jmp    0x40735a
  40785c:	nop    DWORD PTR [rax+0x0]
  407860:	call   0x40cfd0
  407865:	mov    edx,eax
  407867:	mov    rax,rsi
  40786a:	test   edx,edx
  40786c:	jne    0x40759f
  407872:	mov    eax,DWORD PTR [rsi+0xe8]
  407878:	test   eax,eax
  40787a:	je     0x407885
  40787c:	mov    rdx,QWORD PTR [rip+0x344fd]        # 0x43bd80
  407883:	mov    DWORD PTR [rdx],eax
  407885:	mov    rax,QWORD PTR [rsi+0xe0]
  40788c:	lea    rcx,[rax+0x8]
  407890:	call   0x40d460
  407895:	mov    rax,rsi
  407898:	jmp    0x40759f
  40789d:	nop    DWORD PTR [rax]
  4078a0:	xor    r12d,r12d
  4078a3:	jmp    0x4072c9
  4078a8:	lea    r8,[rip+0x28a29]        # 0x4302d8
  4078af:	lea    rcx,[rip+0x28494]        # 0x42fd4a
  4078b6:	mov    r9,rdi
  4078b9:	mov    edx,0x4895
  4078be:	call   0x40d350
  4078c3:	mov    r10d,DWORD PTR [rbp+0x0]
  4078c7:	test   r10d,r10d
  4078ca:	je     0x4076c7
  4078d0:	lea    r8,[rip+0x28a27]        # 0x4302fe
  4078d7:	lea    rcx,[rip+0x2846c]        # 0x42fd4a
  4078de:	mov    r9,rdi
  4078e1:	mov    edx,0x48c5
  4078e6:	call   0x40d350
  4078eb:	mov    r8,QWORD PTR [rip+0x3974e]        # 0x441040
  4078f2:	test   r8,r8
  4078f5:	je     0x4076ed
  4078fb:	mov    r9d,DWORD PTR [rbp+0x0]
  4078ff:	test   r9d,r9d
  407902:	je     0x4076d3
  407908:	mov    r9,r8
  40790b:	lea    rcx,[rip+0x28438]        # 0x42fd4a
  407912:	lea    r8,[rip+0x28a07]        # 0x430320
  407919:	mov    edx,0x4925
  40791e:	call   0x40d350
  407923:	mov    r8,QWORD PTR [rip+0x39716]        # 0x441040
  40792a:	jmp    0x4076d3
  40792f:	nop
  407930:	lea    rdx,[rbx+0x88]
  407937:	lea    rcx,[rsi+0x88]
  40793e:	call   0x41d750
  407943:	mov    rdi,rax
  407946:	jmp    0x4073d2
  40794b:	nop    DWORD PTR [rax+rax*1+0x0]
  407950:	lea    rdi,[rsi+0x78]
  407954:	mov    rcx,rdi
  407957:	call   0x41d610
  40795c:	lea    rdx,[rbx+0x78]
  407960:	mov    rcx,rdi
  407963:	call   0x41d750
  407968:	test   rax,rax
  40796b:	mov    rdi,rax
  40796e:	jne    0x4073c1
  407974:	jmp    0x4073d2
  407979:	nop    DWORD PTR [rax+0x0]
  407980:	lea    rdx,[rbx+0x18]
  407984:	lea    rcx,[rsi+0x18]
  407988:	call   0x41d750
  40798d:	test   rax,rax
  407990:	mov    rdi,rax
  407993:	je     0x407844
  407999:	mov    rax,QWORD PTR [rbx+0x20]
  40799d:	cmp    QWORD PTR [rax],0x0
  4079a1:	je     0x40733e
  4079a7:	lea    rdx,[rbx+0x20]
  4079ab:	lea    rcx,[rsi+0x20]
  4079af:	call   0x41d750
  4079b4:	test   rax,rax
  4079b7:	mov    rdi,rax
  4079ba:	je     0x407844
  4079c0:	mov    rax,QWORD PTR [rbx+0xb8]
  4079c7:	cmp    QWORD PTR [rax],0x0
  4079cb:	je     0x40734f
  4079d1:	lea    rdx,[rbx+0xb8]
  4079d8:	lea    rcx,[rsi+0xb8]
  4079df:	call   0x41d750
  4079e4:	mov    rdi,rax
  4079e7:	mov    eax,DWORD PTR [rbp+0x0]
  4079ea:	test   eax,eax
  4079ec:	jne    0x4083c9
  4079f2:	movzx  eax,BYTE PTR [rbx+0xf4]
  4079f9:	test   al,al
  4079fb:	jns    0x40735a
  407a01:	test   rdi,rdi
  407a04:	jne    0x407378
  407a0a:	movzx  edx,BYTE PTR [rbx+0xf4]
  407a11:	xor    edi,edi
  407a13:	jmp    0x4073d9
  407a18:	nop    DWORD PTR [rax+rax*1+0x0]
  407a20:	lea    rdx,[rbx+0x70]
  407a24:	lea    rcx,[rsi+0x70]
  407a28:	call   0x41d750
  407a2d:	test   rax,rax
  407a30:	mov    rdi,rax
  407a33:	jne    0x4073b3
  407a39:	jmp    0x407a0a
  407a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  407a40:	lea    rdx,[rbx+0x68]
  407a44:	lea    rcx,[rsi+0x68]
  407a48:	call   0x41d750
  407a4d:	test   rax,rax
  407a50:	mov    rdi,rax
  407a53:	jne    0x4073a5
  407a59:	jmp    0x407a0a
  407a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  407a60:	lea    rdx,[rbx+0x30]
  407a64:	lea    rcx,[rsi+0x30]
  407a68:	call   0x41d750
  407a6d:	test   rax,rax
  407a70:	mov    rdi,rax
  407a73:	jne    0x407397
  407a79:	jmp    0x407a0a
  407a7b:	nop    DWORD PTR [rax+rax*1+0x0]
  407a80:	lea    rdx,[rbx+0xc0]
  407a87:	lea    rcx,[rsi+0xc0]
  407a8e:	call   0x41d750
  407a93:	mov    rdi,rax
  407a96:	mov    eax,DWORD PTR [rbp+0x0]
  407a99:	test   eax,eax
  407a9b:	jne    0x4083fd
  407aa1:	test   rdi,rdi
  407aa4:	jne    0x407389
  407aaa:	jmp    0x407a0a
  407aaf:	nop
  407ab0:	movzx  ecx,BYTE PTR [rsi+0xf5]
  407ab7:	jmp    0x407639
  407abc:	nop    DWORD PTR [rax+0x0]
  407ac0:	mov    rax,QWORD PTR [rsi]
  407ac3:	mov    rcx,rsi
  407ac6:	lea    rdx,[rax+0x8]
  407aca:	call   0x4065a0
  407acf:	test   eax,eax
  407ad1:	jne    0x407c4b
  407ad7:	mov    rax,QWORD PTR [rsi]
  407ada:	lea    rdx,[rsi+0xc8]
  407ae1:	lea    rcx,[rax+0x8]
  407ae5:	call   0x406950
  407aea:	test   eax,eax
  407aec:	js     0x407673
  407af2:	lea    rcx,[rsi+0x38]
  407af6:	mov    rdx,rsi
  407af9:	call   0x41d750
  407afe:	test   rax,rax
  407b01:	jne    0x4072f4
  407b07:	jmp    0x407650
  407b0c:	nop    DWORD PTR [rax+0x0]
  407b10:	mov    rax,QWORD PTR [rbx+0x98]
  407b17:	movzx  edx,BYTE PTR [rbx+0xf5]
  407b1e:	mov    QWORD PTR [rsi+0x98],rax
  407b25:	mov    rax,QWORD PTR [rbx+0xa0]
  407b2c:	test   dl,0x8
  407b2f:	mov    QWORD PTR [rsi+0xa0],rax
  407b36:	mov    rax,QWORD PTR [rbx+0xa8]
  407b3d:	mov    QWORD PTR [rsi+0xa8],rax
  407b44:	mov    rax,QWORD PTR [rbx+0xb0]
  407b4b:	mov    QWORD PTR [rsi+0xb0],rax
  407b52:	jne    0x40761b
  407b58:	movzx  eax,BYTE PTR [rsi+0xf5]
  407b5f:	and    edx,0x1
  407b62:	and    eax,0xfffffffe
  407b65:	or     eax,edx
  407b67:	mov    BYTE PTR [rsi+0xf5],al
  407b6d:	jmp    0x407650
  407b72:	mov    r9,QWORD PTR [rbx]
  407b75:	lea    r8,[rip+0x286cc]        # 0x430248
  407b7c:	lea    rcx,[rip+0x281c7]        # 0x42fd4a
  407b83:	mov    edx,0xa85
  407b88:	add    r9,0x8
  407b8c:	call   0x40d350
  407b91:	mov    edi,DWORD PTR [rbp+0x0]
  407b94:	test   edi,edi
  407b96:	je     0x4072dd
  407b9c:	lea    r8,[rip+0x286d5]        # 0x430278
  407ba3:	lea    rcx,[rip+0x281a0]        # 0x42fd4a
  407baa:	mov    edx,0xac5
  407baf:	call   0x40d350
  407bb4:	jmp    0x4072dd
  407bb9:	nop    DWORD PTR [rax+0x0]
  407bc0:	call   0x40d460
  407bc5:	mov    rcx,QWORD PTR [rsp+0x48]
  407bca:	mov    r12d,eax
  407bcd:	jmp    0x4072c4
  407bd2:	mov    eax,DWORD PTR [rbp+0x0]
  407bd5:	test   eax,eax
  407bd7:	jne    0x4084a7
  407bdd:	lea    rdx,[rsi+0xc8]
  407be4:	mov    rcx,rdi
  407be7:	call   0x406950
  407bec:	test   eax,eax
  407bee:	js     0x4077e6
  407bf4:	lea    rcx,[rsi+0x38]
  407bf8:	mov    rdx,rdi
  407bfb:	call   0x41d6f0
  407c00:	test   rax,rax
  407c03:	jne    0x4077e6
  407c09:	jmp    0x4077ea
  407c0e:	xchg   ax,ax
  407c10:	test   eax,eax
  407c12:	je     0x407586
  407c18:	lea    rax,[rip+0x28506]        # 0x430125
  407c1f:	lea    r9,[rip+0x2888d]        # 0x4304b3
  407c26:	lea    r8,[rip+0x28869]        # 0x430496
  407c2d:	lea    rcx,[rip+0x28116]        # 0x42fd4a
  407c34:	mov    edx,0xdd5
  407c39:	mov    QWORD PTR [rsp+0x20],rax
  407c3e:	call   0x40d350
  407c43:	mov    eax,DWORD PTR [rbp+0x0]
  407c46:	jmp    0x40757e
  407c4b:	mov    rdx,rbx
  407c4e:	mov    rcx,rsi
  407c51:	call   0x405da0
  407c56:	jmp    0x4072f4
  407c5b:	lea    r8,[rip+0x28636]        # 0x430298
  407c62:	lea    rcx,[rip+0x280e1]        # 0x42fd4a
  407c69:	mov    edx,0xc05
  407c6e:	call   0x40d350
  407c73:	jmp    0x40767e
  407c78:	mov    rax,QWORD PTR [rsi+0xd8]
  407c7f:	lea    r9,[rip+0x28835]        # 0x4304bb
  407c86:	lea    r8,[rip+0x28809]        # 0x430496
  407c8d:	lea    rcx,[rip+0x280b6]        # 0x42fd4a
  407c94:	mov    edx,0xdf5
  407c99:	add    rax,0x8
  407c9d:	mov    QWORD PTR [rsp+0x20],rax
  407ca2:	call   0x40d350
  407ca7:	mov    r15d,DWORD PTR [rbp+0x0]
  407cab:	test   r15d,r15d
  407cae:	je     0x407586
  407cb4:	mov    eax,DWORD PTR [rsi+0x8]
  407cb7:	lea    r9,[rip+0x2880b]        # 0x4304c9
  407cbe:	lea    r8,[rip+0x28809]        # 0x4304ce
  407cc5:	lea    rcx,[rip+0x2807e]        # 0x42fd4a
  407ccc:	mov    edx,0xe05
  407cd1:	mov    DWORD PTR [rsp+0x20],eax
  407cd5:	call   0x40d350
  407cda:	mov    r14d,DWORD PTR [rbp+0x0]
  407cde:	test   r14d,r14d
  407ce1:	je     0x407586
  407ce7:	movzx  eax,BYTE PTR [rsi+0xd]
  407ceb:	lea    r9,[rip+0x287e8]        # 0x4304da
  407cf2:	lea    r8,[rip+0x287d5]        # 0x4304ce
  407cf9:	lea    rcx,[rip+0x2804a]        # 0x42fd4a
  407d00:	mov    edx,0xe15
  407d05:	mov    DWORD PTR [rsp+0x20],eax
  407d09:	call   0x40d350
  407d0e:	mov    r13d,DWORD PTR [rbp+0x0]
  407d12:	test   r13d,r13d
  407d15:	je     0x407586
  407d1b:	movzx  eax,BYTE PTR [rsi+0xc]
  407d1f:	lea    r9,[rip+0x287c2]        # 0x4304e8
  407d26:	lea    r8,[rip+0x287a1]        # 0x4304ce
  407d2d:	lea    rcx,[rip+0x28016]        # 0x42fd4a
  407d34:	mov    edx,0xe25
  407d39:	mov    DWORD PTR [rsp+0x20],eax
  407d3d:	call   0x40d350
  407d42:	mov    r12d,DWORD PTR [rbp+0x0]
  407d46:	test   r12d,r12d
  407d49:	je     0x407586
  407d4f:	mov    eax,DWORD PTR [rsi+0x10]
  407d52:	lea    r9,[rip+0x2879d]        # 0x4304f6
  407d59:	lea    r8,[rip+0x2876e]        # 0x4304ce
  407d60:	lea    rcx,[rip+0x27fe3]        # 0x42fd4a
  407d67:	mov    edx,0xe35
  407d6c:	mov    DWORD PTR [rsp+0x20],eax
  407d70:	call   0x40d350
  407d75:	mov    edi,DWORD PTR [rbp+0x0]
  407d78:	test   edi,edi
  407d7a:	je     0x407586
  407d80:	mov    rax,QWORD PTR [rsi+0x18]
  407d84:	lea    r9,[rip+0x28776]        # 0x430501
  407d8b:	lea    r8,[rip+0x28704]        # 0x430496
  407d92:	lea    rcx,[rip+0x27fb1]        # 0x42fd4a
  407d99:	mov    edx,0xe45
  407d9e:	add    rax,0x8
  407da2:	mov    QWORD PTR [rsp+0x20],rax
  407da7:	call   0x40d350
  407dac:	mov    ebx,DWORD PTR [rbp+0x0]
  407daf:	test   ebx,ebx
  407db1:	je     0x407586
  407db7:	mov    rax,QWORD PTR [rsi+0x20]
  407dbb:	lea    r9,[rip+0x28748]        # 0x43050a
  407dc2:	lea    r8,[rip+0x286cd]        # 0x430496
  407dc9:	lea    rcx,[rip+0x27f7a]        # 0x42fd4a
  407dd0:	mov    edx,0xe55
  407dd5:	add    rax,0x8
  407dd9:	mov    QWORD PTR [rsp+0x20],rax
  407dde:	call   0x40d350
  407de3:	mov    r11d,DWORD PTR [rbp+0x0]
  407de7:	test   r11d,r11d
  407dea:	je     0x407586
  407df0:	mov    eax,DWORD PTR [rsi+0x28]
  407df3:	lea    r9,[rip+0x2871f]        # 0x430519
  407dfa:	lea    r8,[rip+0x286cd]        # 0x4304ce
  407e01:	lea    rcx,[rip+0x27f42]        # 0x42fd4a
  407e08:	mov    edx,0xe65
  407e0d:	mov    DWORD PTR [rsp+0x20],eax
  407e11:	call   0x40d350
  407e16:	mov    r10d,DWORD PTR [rbp+0x0]
  407e1a:	test   r10d,r10d
  407e1d:	je     0x407586
  407e23:	mov    rax,QWORD PTR [rsi+0x30]
  407e27:	lea    r9,[rip+0x286fb]        # 0x430529
  407e2e:	lea    r8,[rip+0x28661]        # 0x430496
  407e35:	lea    rcx,[rip+0x27f0e]        # 0x42fd4a
  407e3c:	mov    edx,0xe75
  407e41:	add    rax,0x8
  407e45:	mov    QWORD PTR [rsp+0x20],rax
  407e4a:	call   0x40d350
  407e4f:	mov    r9d,DWORD PTR [rbp+0x0]
  407e53:	test   r9d,r9d
  407e56:	je     0x407586
  407e5c:	mov    rax,QWORD PTR [rsi+0xb8]
  407e63:	lea    r8,[rip+0x2862c]        # 0x430496
  407e6a:	lea    r9,[rip+0x285c1]        # 0x430432
  407e71:	lea    rcx,[rip+0x27ed2]        # 0x42fd4a
  407e78:	mov    edx,0xe85
  407e7d:	add    rax,0x8
  407e81:	mov    QWORD PTR [rsp+0x20],rax
  407e86:	call   0x40d350
  407e8b:	mov    r8d,DWORD PTR [rbp+0x0]
  407e8f:	test   r8d,r8d
  407e92:	je     0x407586
  407e98:	movzx  eax,BYTE PTR [rsi+0xf4]
  407e9f:	lea    rcx,[rip+0x27ea4]        # 0x42fd4a
  407ea6:	lea    r9,[rip+0x2868d]        # 0x43053a
  407ead:	lea    r8,[rip+0x2861a]        # 0x4304ce
  407eb4:	mov    edx,0xe95
  407eb9:	shr    al,0x7
  407ebc:	movzx  eax,al
  407ebf:	mov    DWORD PTR [rsp+0x20],eax
  407ec3:	call   0x40d350
  407ec8:	mov    ecx,DWORD PTR [rbp+0x0]
  407ecb:	test   ecx,ecx
  407ecd:	je     0x407586
  407ed3:	mov    rax,QWORD PTR [rsi+0x68]
  407ed7:	lea    r9,[rip+0x28666]        # 0x430544
  407ede:	lea    r8,[rip+0x285b1]        # 0x430496
  407ee5:	lea    rcx,[rip+0x27e5e]        # 0x42fd4a
  407eec:	mov    edx,0xea5
  407ef1:	add    rax,0x8
  407ef5:	mov    QWORD PTR [rsp+0x20],rax
  407efa:	call   0x40d350
  407eff:	mov    edx,DWORD PTR [rbp+0x0]
  407f02:	test   edx,edx
  407f04:	je     0x407586
  407f0a:	mov    rax,QWORD PTR [rsi+0x70]
  407f0e:	lea    r9,[rip+0x28638]        # 0x43054d
  407f15:	lea    r8,[rip+0x2857a]        # 0x430496
  407f1c:	lea    rcx,[rip+0x27e27]        # 0x42fd4a
  407f23:	mov    edx,0xeb5
  407f28:	add    rax,0x8
  407f2c:	mov    QWORD PTR [rsp+0x20],rax
  407f31:	call   0x40d350
  407f36:	mov    eax,DWORD PTR [rbp+0x0]
  407f39:	test   eax,eax
  407f3b:	je     0x407586
  407f41:	mov    rax,QWORD PTR [rsi+0x88]
  407f48:	lea    r9,[rip+0x28608]        # 0x430557
  407f4f:	lea    r8,[rip+0x28540]        # 0x430496
  407f56:	lea    rcx,[rip+0x27ded]        # 0x42fd4a
  407f5d:	mov    edx,0xee5
  407f62:	add    rax,0x8
  407f66:	mov    QWORD PTR [rsp+0x20],rax
  407f6b:	call   0x40d350
  407f70:	mov    eax,DWORD PTR [rbp+0x0]
  407f73:	test   eax,eax
  407f75:	je     0x407586
  407f7b:	movzx  eax,BYTE PTR [rsi+0xf4]
  407f82:	lea    r9,[rip+0x285d6]        # 0x43055f
  407f89:	lea    r8,[rip+0x2853e]        # 0x4304ce
  407f90:	lea    rcx,[rip+0x27db3]        # 0x42fd4a
  407f97:	mov    edx,0xef5
  407f9c:	and    eax,0x1
  407f9f:	mov    DWORD PTR [rsp+0x20],eax
  407fa3:	call   0x40d350
  407fa8:	mov    eax,DWORD PTR [rbp+0x0]
  407fab:	test   eax,eax
  407fad:	je     0x407586
  407fb3:	movzx  eax,BYTE PTR [rsi+0xf4]
  407fba:	lea    r9,[rip+0x285a8]        # 0x430569
  407fc1:	lea    r8,[rip+0x28506]        # 0x4304ce
  407fc8:	lea    rcx,[rip+0x27d7b]        # 0x42fd4a
  407fcf:	mov    edx,0xf05
  407fd4:	shr    al,1
  407fd6:	and    eax,0x1
  407fd9:	mov    DWORD PTR [rsp+0x20],eax
  407fdd:	call   0x40d350
  407fe2:	mov    eax,DWORD PTR [rbp+0x0]
  407fe5:	test   eax,eax
  407fe7:	je     0x407586
  407fed:	movzx  eax,BYTE PTR [rsi+0x90]
  407ff4:	lea    r9,[rip+0x28580]        # 0x43057b
  407ffb:	lea    r8,[rip+0x284cc]        # 0x4304ce
  408002:	lea    rcx,[rip+0x27d41]        # 0x42fd4a
  408009:	mov    edx,0xf15
  40800e:	mov    DWORD PTR [rsp+0x20],eax
  408012:	call   0x40d350
  408017:	mov    eax,DWORD PTR [rbp+0x0]
  40801a:	test   eax,eax
  40801c:	je     0x407586
  408022:	mov    eax,DWORD PTR [rsi+0x94]
  408028:	lea    r9,[rip+0x2855a]        # 0x430589
  40802f:	lea    r8,[rip+0x28498]        # 0x4304ce
  408036:	lea    rcx,[rip+0x27d0d]        # 0x42fd4a
  40803d:	mov    edx,0xf25
  408042:	mov    DWORD PTR [rsp+0x20],eax
  408046:	call   0x40d350
  40804b:	mov    eax,DWORD PTR [rbp+0x0]
  40804e:	test   eax,eax
  408050:	je     0x407586
  408056:	mov    rax,QWORD PTR [rsi+0xc0]
  40805d:	lea    r9,[rip+0x28533]        # 0x430597
  408064:	lea    r8,[rip+0x2842b]        # 0x430496
  40806b:	lea    rcx,[rip+0x27cd8]        # 0x42fd4a
  408072:	mov    edx,0xf55
  408077:	add    rax,0x8
  40807b:	mov    QWORD PTR [rsp+0x20],rax
  408080:	call   0x40d350
  408085:	mov    r15d,DWORD PTR [rbp+0x0]
  408089:	test   r15d,r15d
  40808c:	je     0x407586
  408092:	mov    rax,QWORD PTR [rsi+0xe0]
  408099:	lea    r9,[rip+0x28500]        # 0x4305a0
  4080a0:	lea    r8,[rip+0x283ef]        # 0x430496
  4080a7:	lea    rcx,[rip+0x27c9c]        # 0x42fd4a
  4080ae:	mov    edx,0xf65
  4080b3:	add    rax,0x8
  4080b7:	mov    QWORD PTR [rsp+0x20],rax
  4080bc:	call   0x40d350
  4080c1:	mov    r14d,DWORD PTR [rbp+0x0]
  4080c5:	test   r14d,r14d
  4080c8:	je     0x407586
  4080ce:	mov    eax,DWORD PTR [rsi+0xe8]
  4080d4:	lea    r9,[rip+0x284cf]        # 0x4305aa
  4080db:	lea    r8,[rip+0x284d4]        # 0x4305b6
  4080e2:	lea    rcx,[rip+0x27c61]        # 0x42fd4a
  4080e9:	mov    edx,0xf75
  4080ee:	mov    DWORD PTR [rsp+0x20],eax
  4080f2:	call   0x40d350
  4080f7:	mov    r13d,DWORD PTR [rbp+0x0]
  4080fb:	test   r13d,r13d
  4080fe:	je     0x407586
  408104:	mov    eax,DWORD PTR [rsi+0xec]
  40810a:	lea    r9,[rip+0x284b1]        # 0x4305c2
  408111:	lea    r8,[rip+0x283b6]        # 0x4304ce
  408118:	lea    rcx,[rip+0x27c2b]        # 0x42fd4a
  40811f:	mov    edx,0xf85
  408124:	mov    DWORD PTR [rsp+0x20],eax
  408128:	call   0x40d350
  40812d:	mov    r12d,DWORD PTR [rbp+0x0]
  408131:	test   r12d,r12d
  408134:	je     0x407586
  40813a:	movzx  eax,BYTE PTR [rsi+0xf4]
  408141:	lea    r9,[rip+0x28484]        # 0x4305cc
  408148:	lea    r8,[rip+0x2837f]        # 0x4304ce
  40814f:	lea    rcx,[rip+0x27bf4]        # 0x42fd4a
  408156:	mov    edx,0xf95
  40815b:	shr    al,0x2
  40815e:	and    eax,0x1
  408161:	mov    DWORD PTR [rsp+0x20],eax
  408165:	call   0x40d350
  40816a:	mov    edi,DWORD PTR [rbp+0x0]
  40816d:	test   edi,edi
  40816f:	je     0x407586
  408175:	mov    rax,QWORD PTR [rsi+0x40]
  408179:	lea    r9,[rip+0x2845f]        # 0x4305df
  408180:	lea    r8,[rip+0x2830f]        # 0x430496
  408187:	lea    rcx,[rip+0x27bbc]        # 0x42fd4a
  40818e:	mov    edx,0xfa5
  408193:	add    rax,0x8
  408197:	mov    QWORD PTR [rsp+0x20],rax
  40819c:	call   0x40d350
  4081a1:	mov    ebx,DWORD PTR [rbp+0x0]
  4081a4:	test   ebx,ebx
  4081a6:	je     0x407586
  4081ac:	mov    rax,QWORD PTR [rsi+0x48]
  4081b0:	lea    r9,[rip+0x2843a]        # 0x4305f1
  4081b7:	lea    r8,[rip+0x282d8]        # 0x430496
  4081be:	lea    rcx,[rip+0x27b85]        # 0x42fd4a
  4081c5:	mov    edx,0xfb5
  4081ca:	add    rax,0x8
  4081ce:	mov    QWORD PTR [rsp+0x20],rax
  4081d3:	call   0x40d350
  4081d8:	mov    r11d,DWORD PTR [rbp+0x0]
  4081dc:	test   r11d,r11d
  4081df:	je     0x407586
  4081e5:	mov    rax,QWORD PTR [rsi+0x58]
  4081e9:	lea    r9,[rip+0x2840c]        # 0x4305fc
  4081f0:	lea    r8,[rip+0x2829f]        # 0x430496
  4081f7:	lea    rcx,[rip+0x27b4c]        # 0x42fd4a
  4081fe:	mov    edx,0xfc5
  408203:	add    rax,0x8
  408207:	mov    QWORD PTR [rsp+0x20],rax
  40820c:	call   0x40d350
  408211:	mov    r10d,DWORD PTR [rbp+0x0]
  408215:	test   r10d,r10d
  408218:	je     0x407586
  40821e:	mov    rax,QWORD PTR [rsi+0x60]
  408222:	lea    r9,[rip+0x283da]        # 0x430603
  408229:	lea    r8,[rip+0x28266]        # 0x430496
  408230:	lea    rcx,[rip+0x27b13]        # 0x42fd4a
  408237:	mov    edx,0xfd5
  40823c:	add    rax,0x8
  408240:	mov    QWORD PTR [rsp+0x20],rax
  408245:	call   0x40d350
  40824a:	mov    r9d,DWORD PTR [rbp+0x0]
  40824e:	test   r9d,r9d
  408251:	je     0x407586
  408257:	movzx  eax,BYTE PTR [rsi+0xf5]
  40825e:	lea    r8,[rip+0x28269]        # 0x4304ce
  408265:	lea    r9,[rip+0x2839f]        # 0x43060b
  40826c:	lea    rcx,[rip+0x27ad7]        # 0x42fd4a
  408273:	mov    edx,0xfe5
  408278:	shr    al,0x2
  40827b:	and    eax,0x1
  40827e:	mov    DWORD PTR [rsp+0x20],eax
  408282:	call   0x40d350
  408287:	mov    r8d,DWORD PTR [rbp+0x0]
  40828b:	test   r8d,r8d
  40828e:	je     0x407586
  408294:	mov    rax,QWORD PTR [rsi+0x50]
  408298:	lea    rcx,[rip+0x27aab]        # 0x42fd4a
  40829f:	lea    r9,[rip+0x28378]        # 0x43061e
  4082a6:	lea    r8,[rip+0x281e9]        # 0x430496
  4082ad:	mov    edx,0xff5
  4082b2:	add    rax,0x8
  4082b6:	mov    QWORD PTR [rsp+0x20],rax
  4082bb:	call   0x40d350
  4082c0:	mov    ecx,DWORD PTR [rbp+0x0]
  4082c3:	test   ecx,ecx
  4082c5:	je     0x407586
  4082cb:	movzx  eax,BYTE PTR [rsi+0xf5]
  4082d2:	lea    r9,[rip+0x28351]        # 0x43062a
  4082d9:	lea    r8,[rip+0x281ee]        # 0x4304ce
  4082e0:	lea    rcx,[rip+0x27a63]        # 0x42fd4a
  4082e7:	mov    edx,0x1005
  4082ec:	shr    al,0x3
  4082ef:	and    eax,0x1
  4082f2:	mov    DWORD PTR [rsp+0x20],eax
  4082f6:	call   0x40d350
  4082fb:	jmp    0x407586
  408300:	lea    r8,[rip+0x28165]        # 0x43046c
  408307:	lea    rcx,[rip+0x27a3c]        # 0x42fd4a
  40830e:	mov    edx,0xd55
  408313:	call   0x40d350
  408318:	mov    eax,DWORD PTR [rbp+0x0]
  40831b:	test   eax,eax
  40831d:	je     0x407500
  408323:	mov    rax,QWORD PTR [rsi]
  408326:	lea    r9,[rip+0x2815d]        # 0x43048a
  40832d:	lea    r8,[rip+0x28162]        # 0x430496
  408334:	lea    rcx,[rip+0x27a0f]        # 0x42fd4a
  40833b:	mov    edx,0xd65
  408340:	add    rax,0x8
  408344:	mov    QWORD PTR [rsp+0x20],rax
  408349:	call   0x40d350
  40834e:	mov    eax,DWORD PTR [rbp+0x0]
  408351:	test   eax,eax
  408353:	je     0x407500
  408359:	mov    rax,QWORD PTR [rsi+0x38]
  40835d:	lea    r9,[rip+0x2813e]        # 0x4304a2
  408364:	lea    r8,[rip+0x2812b]        # 0x430496
  40836b:	lea    rcx,[rip+0x279d8]        # 0x42fd4a
  408372:	mov    edx,0xd75
  408377:	add    rax,0x8
  40837b:	mov    QWORD PTR [rsp+0x20],rax
  408380:	call   0x40d350
  408385:	mov    eax,DWORD PTR [rbp+0x0]
  408388:	jmp    0x407500
  40838d:	lea    rdi,[rip+0x27e9a]        # 0x43022e
  408394:	jmp    0x4076ba
  408399:	mov    rdx,QWORD PTR [rbx]
  40839c:	mov    rax,QWORD PTR [rsi]
  40839f:	lea    r8,[rip+0x2804a]        # 0x4303f0
  4083a6:	lea    rcx,[rip+0x2799d]        # 0x42fd4a
  4083ad:	add    rax,0x8
  4083b1:	lea    r9,[rdx+0x8]
  4083b5:	mov    edx,0xc25
  4083ba:	mov    QWORD PTR [rsp+0x20],rax
  4083bf:	call   0x40d350
  4083c4:	jmp    0x4077f5
  4083c9:	mov    rax,QWORD PTR [rsi+0xb8]
  4083d0:	lea    r9,[rip+0x2805b]        # 0x430432
  4083d7:	lea    r8,[rip+0x28063]        # 0x430441
  4083de:	lea    rcx,[rip+0x27965]        # 0x42fd4a
  4083e5:	mov    edx,0x2c35
  4083ea:	add    rax,0x8
  4083ee:	mov    QWORD PTR [rsp+0x20],rax
  4083f3:	call   0x40d350
  4083f8:	jmp    0x4079f2
  4083fd:	mov    rax,QWORD PTR [rsi+0xc0]
  408404:	lea    r9,[rip+0x28053]        # 0x43045e
  40840b:	lea    r8,[rip+0x2802f]        # 0x430441
  408412:	lea    rcx,[rip+0x27931]        # 0x42fd4a
  408419:	mov    edx,0x2ca5
  40841e:	add    rax,0x8
  408422:	mov    QWORD PTR [rsp+0x20],rax
  408427:	call   0x40d350
  40842c:	jmp    0x407aa1
  408431:	lea    rax,[rip+0x28678]        # 0x430ab0
  408438:	jmp    0x407758
  40843d:	lea    r8,[rip+0x27f5c]        # 0x4303a0
  408444:	lea    rcx,[rip+0x278ff]        # 0x42fd4a
  40844b:	mov    r9,r15
  40844e:	mov    edx,0x4d05
  408453:	call   0x40d350
  408458:	jmp    0x4077bd
  40845d:	lea    r8,[rip+0x27f04]        # 0x430368
  408464:	lea    rcx,[rip+0x278df]        # 0x42fd4a
  40846b:	mov    r9,rax
  40846e:	mov    edx,0x4b15
  408473:	mov    QWORD PTR [rsp+0x38],rax
  408478:	call   0x40d350
  40847d:	mov    rax,QWORD PTR [rsp+0x38]
  408482:	jmp    0x407763
  408487:	lea    r8,[rip+0x27ebe]        # 0x43034c
  40848e:	lea    rcx,[rip+0x278b5]        # 0x42fd4a
  408495:	mov    r9,rax
  408498:	mov    edx,0x49d5
  40849d:	call   0x40d350
  4084a2:	jmp    0x40770c
  4084a7:	lea    r8,[rip+0x27f1a]        # 0x4303c8
  4084ae:	lea    rcx,[rip+0x27895]        # 0x42fd4a
  4084b5:	mov    r9d,r14d
  4084b8:	mov    edx,0x4d25
  4084bd:	call   0x40d350
  4084c2:	jmp    0x407bdd
  4084c7:	nop    WORD PTR [rax+rax*1+0x0]
  4084d0:	push   r13
  4084d2:	push   r12
  4084d4:	push   rbp
  4084d5:	push   rdi
  4084d6:	push   rsi
  4084d7:	push   rbx
  4084d8:	sub    rsp,0xb8
  4084df:	mov    r12,QWORD PTR [rip+0x3394a]        # 0x43be30
  4084e6:	mov    rbx,rcx
  4084e9:	mov    r13,rdx
  4084ec:	mov    rbp,r8
  4084ef:	mov    r10d,DWORD PTR [r12]
  4084f3:	test   r10d,r10d
  4084f6:	jne    0x4088f0
  4084fc:	lea    rdi,[rip+0x28143]        # 0x430646
  408503:	mov    ecx,0xc
  408508:	mov    rsi,rbx
  40850b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40850d:	je     0x408810
  408513:	lea    rdi,[rip+0x28138]        # 0x430652
  40851a:	mov    ecx,0x13
  40851f:	mov    rsi,rbx
  408522:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408524:	je     0x408833
  40852a:	lea    rdi,[rip+0x28134]        # 0x430665
  408531:	mov    ecx,0x12
  408536:	mov    rsi,rbx
  408539:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40853b:	je     0x408860
  408541:	lea    rdi,[rip+0x2812f]        # 0x430677
  408548:	mov    ecx,0x19
  40854d:	mov    rsi,rbx
  408550:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408552:	je     0x4088b3
  408558:	lea    rdi,[rip+0x28131]        # 0x430690
  40855f:	mov    ecx,0xa
  408564:	mov    rsi,rbx
  408567:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408569:	je     0x408873
  40856f:	lea    rdi,[rip+0x28124]        # 0x43069a
  408576:	mov    ecx,0xc
  40857b:	mov    rsi,rbx
  40857e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408580:	je     0x408915
  408586:	lea    rdi,[rip+0x28119]        # 0x4306a6
  40858d:	mov    ecx,0x8
  408592:	mov    rsi,rbx
  408595:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408597:	je     0x408890
  40859d:	lea    rdi,[rip+0x2810a]        # 0x4306ae
  4085a4:	mov    ecx,0xe
  4085a9:	mov    rsi,rbx
  4085ac:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4085ae:	je     0x408890
  4085b4:	lea    rdi,[rip+0x28101]        # 0x4306bc
  4085bb:	mov    ecx,0x10
  4085c0:	mov    rsi,rbx
  4085c3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4085c5:	je     0x408960
  4085cb:	lea    rdi,[rip+0x280fa]        # 0x4306cc
  4085d2:	mov    ecx,0x5
  4085d7:	mov    rsi,rbx
  4085da:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4085dc:	je     0x408980
  4085e2:	lea    rdi,[rip+0x27ee0]        # 0x4304c9
  4085e9:	mov    ecx,0x5
  4085ee:	mov    rsi,rbx
  4085f1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4085f3:	je     0x408a13
  4085f9:	lea    rdi,[rip+0x28134]        # 0x430734
  408600:	mov    ecx,0x16
  408605:	mov    rsi,rbx
  408608:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40860a:	je     0x408a33
  408610:	lea    rdi,[rip+0x28133]        # 0x43074a
  408617:	mov    ecx,0xa
  40861c:	mov    rsi,rbx
  40861f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408621:	je     0x408a5e
  408627:	lea    rdi,[rip+0x28126]        # 0x430754
  40862e:	mov    ecx,0x8
  408633:	mov    rsi,rbx
  408636:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408638:	je     0x408aae
  40863e:	lea    rdi,[rip+0x28122]        # 0x430767
  408645:	mov    ecx,0xf
  40864a:	mov    rsi,rbx
  40864d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40864f:	je     0x408af6
  408655:	lea    rdi,[rip+0x2813f]        # 0x43079b
  40865c:	mov    ecx,0xb
  408661:	mov    rsi,rbx
  408664:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408666:	je     0x408b44
  40866c:	lea    rdi,[rip+0x27e8e]        # 0x430501
  408673:	mov    ecx,0x9
  408678:	mov    rsi,rbx
  40867b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40867d:	je     0x408b6c
  408683:	lea    rdi,[rip+0x2811c]        # 0x4307a6
  40868a:	mov    ecx,0x11
  40868f:	mov    rsi,rbx
  408692:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408694:	je     0x408ba0
  40869a:	lea    rdi,[rip+0x28116]        # 0x4307b7
  4086a1:	mov    ecx,0x9
  4086a6:	mov    rsi,rbx
  4086a9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4086ab:	je     0x408bbf
  4086b1:	lea    rdi,[rip+0x28108]        # 0x4307c0
  4086b8:	mov    ecx,0xb
  4086bd:	mov    rsi,rbx
  4086c0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4086c2:	je     0x408bd6
  4086c8:	lea    rdx,[rip+0x28171]        # 0x430840
  4086cf:	mov    rcx,rbx
  4086d2:	call   0x42d630
  4086d7:	test   eax,eax
  4086d9:	je     0x408c25
  4086df:	lea    rdx,[rip+0x28167]        # 0x43084d
  4086e6:	mov    rcx,rbx
  4086e9:	call   0x42d630
  4086ee:	test   eax,eax
  4086f0:	je     0x408bfa
  4086f6:	lea    rdx,[rip+0x2815b]        # 0x430858
  4086fd:	mov    rcx,rbx
  408700:	call   0x42d630
  408705:	test   eax,eax
  408707:	je     0x408ca2
  40870d:	lea    rdx,[rip+0x2814f]        # 0x430863
  408714:	mov    rcx,rbx
  408717:	call   0x42d630
  40871c:	test   eax,eax
  40871e:	je     0x408c7a
  408724:	lea    rdx,[rip+0x2813e]        # 0x430869
  40872b:	mov    rcx,rbx
  40872e:	call   0x42d630
  408733:	test   eax,eax
  408735:	je     0x408c8e
  40873b:	lea    rdx,[rip+0x2812b]        # 0x43086d
  408742:	mov    rcx,rbx
  408745:	call   0x42d630
  40874a:	test   eax,eax
  40874c:	je     0x408db6
  408752:	lea    rdx,[rip+0x2811c]        # 0x430875
  408759:	mov    rcx,rbx
  40875c:	call   0x42d630
  408761:	test   eax,eax
  408763:	je     0x408df5
  408769:	lea    rdx,[rip+0x2810e]        # 0x43087e
  408770:	mov    rcx,rbx
  408773:	call   0x42d630
  408778:	test   eax,eax
  40877a:	je     0x408dca
  408780:	lea    rdx,[rip+0x28112]        # 0x430899
  408787:	mov    rcx,rbx
  40878a:	call   0x42d630
  40878f:	test   eax,eax
  408791:	je     0x408d51
  408797:	lea    rdx,[rip+0x27df9]        # 0x430597
  40879e:	mov    rcx,rbx
  4087a1:	call   0x42d630
  4087a6:	test   eax,eax
  4087a8:	je     0x408d3a
  4087ae:	lea    rdx,[rip+0x280f6]        # 0x4308ab
  4087b5:	mov    rcx,rbx
  4087b8:	call   0x42d630
  4087bd:	test   eax,eax
  4087bf:	je     0x408d65
  4087c5:	cmp    DWORD PTR [r12],0x0
  4087ca:	je     0x4087f0
  4087cc:	lea    r8,[rip+0x28115]        # 0x4308e8
  4087d3:	lea    rcx,[rip+0x27570]        # 0x42fd4a
  4087da:	mov    r9,rbx
  4087dd:	mov    edx,0x2a95
  4087e2:	call   0x40d350
  4087e7:	nop    WORD PTR [rax+rax*1+0x0]
  4087f0:	mov    rdi,rbp
  4087f3:	test   rdi,rdi
  4087f6:	jne    0x408823
  4087f8:	and    BYTE PTR [rbp+0xf5],0xfd
  4087ff:	add    rsp,0xb8
  408806:	pop    rbx
  408807:	pop    rsi
  408808:	pop    rdi
  408809:	pop    rbp
  40880a:	pop    r12
  40880c:	pop    r13
  40880e:	ret    
  40880f:	nop
  408810:	mov    rdx,rbp
  408813:	mov    rcx,r13
  408816:	mov    rdi,rbp
  408819:	call   0x406780
  40881e:	test   rdi,rdi
  408821:	je     0x4087f8
  408823:	add    rsp,0xb8
  40882a:	pop    rbx
  40882b:	pop    rsi
  40882c:	pop    rdi
  40882d:	pop    rbp
  40882e:	pop    r12
  408830:	pop    r13
  408832:	ret    
  408833:	mov    rcx,r13
  408836:	call   0x42d748
  40883b:	lea    edx,[rax-0x200]
  408841:	cmp    edx,0xfdff
  408847:	ja     0x4087f0
  408849:	mov    DWORD PTR [rbp+0x10],eax
  40884c:	add    rsp,0xb8
  408853:	pop    rbx
  408854:	pop    rsi
  408855:	pop    rdi
  408856:	pop    rbp
  408857:	pop    r12
  408859:	pop    r13
  40885b:	ret    
  40885c:	nop    DWORD PTR [rax+0x0]
  408860:	mov    r8,rbp
  408863:	mov    rdx,r13
  408866:	mov    rcx,rbx
  408869:	call   0x405fe0
  40886e:	mov    rdi,rbp
  408871:	jmp    0x40881e
  408873:	lea    rcx,[rbp+0xe0]
  40887a:	mov    rdx,r13
  40887d:	call   0x41d6f0
  408882:	mov    rdi,rax
  408885:	jmp    0x40881e
  408887:	nop    WORD PTR [rax+rax*1+0x0]
  408890:	mov    rcx,r13
  408893:	call   0x42d748
  408898:	test   eax,eax
  40889a:	je     0x4087f0
  4088a0:	mov    rcx,r13
  4088a3:	call   0x42d748
  4088a8:	mov    DWORD PTR [rbp+0x94],eax
  4088ae:	jmp    0x408823
  4088b3:	mov    rdx,r13
  4088b6:	mov    r8,rbp
  4088b9:	mov    rcx,rbx
  4088bc:	call   0x405fe0
  4088c1:	movzx  edx,BYTE PTR [rbp+0xf4]
  4088c8:	and    eax,0x1
  4088cb:	shl    eax,0x3
  4088ce:	and    edx,0xfffffff7
  4088d1:	or     eax,edx
  4088d3:	mov    BYTE PTR [rbp+0xf4],al
  4088d9:	add    rsp,0xb8
  4088e0:	pop    rbx
  4088e1:	pop    rsi
  4088e2:	pop    rdi
  4088e3:	pop    rbp
  4088e4:	pop    r12
  4088e6:	pop    r13
  4088e8:	ret    
  4088e9:	nop    DWORD PTR [rax+0x0]
  4088f0:	mov    r9,rcx
  4088f3:	lea    r8,[rip+0x27d40]        # 0x43063a
  4088fa:	lea    rcx,[rip+0x27449]        # 0x42fd4a
  408901:	mov    QWORD PTR [rsp+0x20],rdx
  408906:	mov    edx,0x24f5
  40890b:	call   0x40d350
  408910:	jmp    0x4084fc
  408915:	lea    rdx,[rsp+0x30]
  40891a:	xor    r8d,r8d
  40891d:	mov    rcx,r13
  408920:	call   0x42d5f0
  408925:	cmp    BYTE PTR [r13+0x0],0x0
  40892a:	je     0x4087f0
  408930:	mov    rdx,QWORD PTR [rsp+0x30]
  408935:	cmp    BYTE PTR [rdx],0x0
  408938:	jne    0x4087f0
  40893e:	lea    edx,[rax+0x7fffffff]
  408944:	cmp    edx,0xfffffffd
  408947:	ja     0x4087f0
  40894d:	mov    DWORD PTR [rbp+0xe8],eax
  408953:	jmp    0x4087f0
  408958:	nop    DWORD PTR [rax+rax*1+0x0]
  408960:	mov    rcx,r13
  408963:	call   0x42d748
  408968:	test   eax,eax
  40896a:	je     0x4087f0
  408970:	mov    rcx,r13
  408973:	call   0x42d748
  408978:	mov    DWORD PTR [rbp+0x28],eax
  40897b:	jmp    0x408823
  408980:	lea    rdx,[rbp+0xc8]
  408987:	mov    rcx,r13
  40898a:	call   0x406950
  40898f:	test   eax,eax
  408991:	js     0x408a81
  408997:	mov    r8d,DWORD PTR [r12]
  40899b:	test   r8d,r8d
  40899e:	jne    0x408b80
  4089a4:	lea    rcx,[rbp+0x38]
  4089a8:	mov    rdx,r13
  4089ab:	lea    rsi,[rsp+0x30]
  4089b0:	call   0x41d6f0
  4089b5:	mov    rbx,QWORD PTR [rbp+0xc8]
  4089bc:	mov    rdi,rax
  4089bf:	test   rbx,rbx
  4089c2:	jne    0x4089dd
  4089c4:	jmp    0x40881e
  4089c9:	nop    DWORD PTR [rax+0x0]
  4089d0:	mov    rbx,QWORD PTR [rbx+0x28]
  4089d4:	test   rbx,rbx
  4089d7:	je     0x40881e
  4089dd:	mov    ecx,DWORD PTR [r12]
  4089e1:	test   ecx,ecx
  4089e3:	je     0x4089d0
  4089e5:	mov    rdx,rsi
  4089e8:	mov    rcx,rbx
  4089eb:	mov    r8d,0x80
  4089f1:	call   0x4131f0
  4089f6:	lea    r8,[rip+0x27d27]        # 0x430724
  4089fd:	lea    rcx,[rip+0x27346]        # 0x42fd4a
  408a04:	mov    r9,rax
  408a07:	mov    edx,0x2775
  408a0c:	call   0x40d350
  408a11:	jmp    0x4089d0
  408a13:	mov    rcx,r13
  408a16:	call   0x42d748
  408a1b:	test   eax,eax
  408a1d:	je     0x4087f0
  408a23:	mov    rcx,r13
  408a26:	call   0x42d748
  408a2b:	mov    DWORD PTR [rbp+0x8],eax
  408a2e:	jmp    0x408823
  408a33:	mov    rdx,r13
  408a36:	mov    r8,rbp
  408a39:	mov    rcx,rbx
  408a3c:	call   0x405fe0
  408a41:	movzx  edx,BYTE PTR [rbp+0xf4]
  408a48:	and    eax,0x1
  408a4b:	shl    eax,0x2
  408a4e:	and    edx,0xfffffffb
  408a51:	or     eax,edx
  408a53:	mov    BYTE PTR [rbp+0xf4],al
  408a59:	jmp    0x408823
  408a5e:	mov    rcx,r13
  408a61:	call   0x42d748
  408a66:	test   eax,eax
  408a68:	je     0x4087f0
  408a6e:	mov    rcx,r13
  408a71:	call   0x42d748
  408a76:	mov    DWORD PTR [rbp+0xec],eax
  408a7c:	jmp    0x408823
  408a81:	mov    r9d,DWORD PTR [r12]
  408a85:	test   r9d,r9d
  408a88:	je     0x408823
  408a8e:	lea    r8,[rip+0x27c43]        # 0x4306d8
  408a95:	lea    rcx,[rip+0x272ae]        # 0x42fd4a
  408a9c:	mov    r9,r13
  408a9f:	mov    edx,0x2703
  408aa4:	call   0x40d350
  408aa9:	jmp    0x408823
  408aae:	lea    rcx,[rbp+0x20]
  408ab2:	mov    rdx,r13
  408ab5:	call   0x41d6f0
  408aba:	mov    edx,DWORD PTR [r12]
  408abe:	mov    rdi,rax
  408ac1:	test   edx,edx
  408ac3:	je     0x40881e
  408ac9:	mov    rax,QWORD PTR [rbp+0x20]
  408acd:	lea    r8,[rip+0x27c88]        # 0x43075c
  408ad4:	lea    rcx,[rip+0x2726f]        # 0x42fd4a
  408adb:	mov    r9,rbx
  408ade:	mov    edx,0x2835
  408ae3:	add    rax,0x8
  408ae7:	mov    QWORD PTR [rsp+0x20],rax
  408aec:	call   0x40d350
  408af1:	jmp    0x40881e
  408af6:	lea    rcx,[rbp+0xb8]
  408afd:	mov    rdx,r13
  408b00:	call   0x41d6f0
  408b05:	mov    rdi,rax
  408b08:	mov    eax,DWORD PTR [r12]
  408b0c:	test   eax,eax
  408b0e:	je     0x40881e
  408b14:	mov    rax,QWORD PTR [rbp+0xb8]
  408b1b:	lea    r8,[rip+0x27c56]        # 0x430778
  408b22:	lea    rcx,[rip+0x27221]        # 0x42fd4a
  408b29:	mov    r9,rbx
  408b2c:	mov    edx,0x2865
  408b31:	add    rax,0x8
  408b35:	mov    QWORD PTR [rsp+0x20],rax
  408b3a:	call   0x40d350
  408b3f:	jmp    0x40881e
  408b44:	mov    rdx,r13
  408b47:	mov    r8,rbp
  408b4a:	mov    rcx,rbx
  408b4d:	call   0x405fe0
  408b52:	movzx  edx,BYTE PTR [rbp+0xf4]
  408b59:	shl    eax,0x7
  408b5c:	and    edx,0x7f
  408b5f:	or     eax,edx
  408b61:	mov    BYTE PTR [rbp+0xf4],al
  408b67:	jmp    0x408823
  408b6c:	lea    rcx,[rbp+0x18]
  408b70:	mov    rdx,r13
  408b73:	call   0x41d6f0
  408b78:	mov    rdi,rax
  408b7b:	jmp    0x40881e
  408b80:	lea    r8,[rip+0x27b87]        # 0x43070e
  408b87:	lea    rcx,[rip+0x271bc]        # 0x42fd4a
  408b8e:	mov    r9,r13
  408b91:	mov    edx,0x2745
  408b96:	call   0x40d350
  408b9b:	jmp    0x4089a4
  408ba0:	mov    rdx,r13
  408ba3:	mov    r8,rbp
  408ba6:	mov    rcx,rbx
  408ba9:	call   0x405fe0
  408bae:	mov    rdx,QWORD PTR [rip+0x331db]        # 0x43bd90
  408bb5:	mov    rdi,rbp
  408bb8:	mov    DWORD PTR [rdx],eax
  408bba:	jmp    0x40881e
  408bbf:	lea    rcx,[rbp+0xd8]
  408bc6:	mov    rdx,r13
  408bc9:	call   0x41d6f0
  408bce:	mov    rdi,rax
  408bd1:	jmp    0x40881e
  408bd6:	lea    rdx,[rip+0x27bee]        # 0x4307cb
  408bdd:	mov    rcx,r13
  408be0:	mov    rbx,QWORD PTR [rip+0x39ecd]        # 0x442ab4
  408be7:	call   rbx
  408be9:	xor    edx,edx
  408beb:	test   eax,eax
  408bed:	jne    0x408c38
  408bef:	mov    BYTE PTR [rbp+0x90],dl
  408bf5:	jmp    0x408823
  408bfa:	mov    rdx,r13
  408bfd:	mov    r8,rbp
  408c00:	mov    rcx,rbx
  408c03:	call   0x405fe0
  408c08:	movzx  edx,BYTE PTR [rbp+0xf4]
  408c0f:	and    eax,0x1
  408c12:	shl    eax,0x4
  408c15:	and    edx,0xffffffef
  408c18:	or     eax,edx
  408c1a:	mov    BYTE PTR [rbp+0xf4],al
  408c20:	jmp    0x408823
  408c25:	mov    rdx,r13
  408c28:	mov    rcx,rbp
  408c2b:	call   0x41d6f0
  408c30:	mov    rdi,rax
  408c33:	jmp    0x40881e
  408c38:	lea    rdx,[rip+0x27b90]        # 0x4307cf
  408c3f:	mov    rcx,r13
  408c42:	call   rbx
  408c44:	test   eax,eax
  408c46:	mov    edx,0x1
  408c4b:	je     0x408bef
  408c4d:	lea    rdx,[rip+0x27b83]        # 0x4307d7
  408c54:	mov    rcx,r13
  408c57:	call   rbx
  408c59:	test   eax,eax
  408c5b:	mov    edx,0x2
  408c60:	je     0x408bef
  408c62:	cmp    DWORD PTR [r12],0x0
  408c67:	jne    0x408ccd
  408c69:	and    BYTE PTR [rbp+0xf5],0xfd
  408c70:	mov    edx,0x2
  408c75:	jmp    0x408bef
  408c7a:	lea    rcx,[rbp+0x40]
  408c7e:	mov    rdx,r13
  408c81:	call   0x41d6f0
  408c86:	mov    rdi,rax
  408c89:	jmp    0x40881e
  408c8e:	lea    rcx,[rbp+0x48]
  408c92:	mov    rdx,r13
  408c95:	call   0x41d6f0
  408c9a:	mov    rdi,rax
  408c9d:	jmp    0x40881e
  408ca2:	mov    rdx,r13
  408ca5:	mov    r8,rbp
  408ca8:	mov    rcx,rbx
  408cab:	call   0x405fe0
  408cb0:	movzx  edx,BYTE PTR [rbp+0xf4]
  408cb7:	and    eax,0x1
  408cba:	shl    eax,0x5
  408cbd:	and    edx,0xffffffdf
  408cc0:	or     eax,edx
  408cc2:	mov    BYTE PTR [rbp+0xf4],al
  408cc8:	jmp    0x408823
  408ccd:	lea    rax,[rip+0x27aec]        # 0x4307c0
  408cd4:	lea    r8,[rip+0x27b05]        # 0x4307e0
  408cdb:	lea    rcx,[rip+0x27068]        # 0x42fd4a
  408ce2:	mov    r9,r13
  408ce5:	mov    dx,0x1dd2
  408ce9:	mov    QWORD PTR [rsp+0x20],rax
  408cee:	call   0x40d350
  408cf3:	cmp    DWORD PTR [r12],0x0
  408cf8:	je     0x408c69
  408cfe:	lea    rax,[rip+0x27ad2]        # 0x4307d7
  408d05:	lea    r9,[rip+0x27abf]        # 0x4307cb
  408d0c:	lea    r8,[rip+0x27b05]        # 0x430818
  408d13:	lea    rcx,[rip+0x27030]        # 0x42fd4a
  408d1a:	mov    edx,0x1df2
  408d1f:	mov    QWORD PTR [rsp+0x28],rax
  408d24:	lea    rax,[rip+0x27aa4]        # 0x4307cf
  408d2b:	mov    QWORD PTR [rsp+0x20],rax
  408d30:	call   0x40d350
  408d35:	jmp    0x408c69
  408d3a:	lea    rcx,[rbp+0xc0]
  408d41:	mov    rdx,r13
  408d44:	call   0x41d6f0
  408d49:	mov    rdi,rax
  408d4c:	jmp    0x40881e
  408d51:	lea    rcx,[rbp+0x50]
  408d55:	mov    rdx,r13
  408d58:	call   0x41d6f0
  408d5d:	mov    rdi,rax
  408d60:	jmp    0x40881e
  408d65:	mov    rdx,r13
  408d68:	mov    r8,rbp
  408d6b:	mov    rcx,rbx
  408d6e:	call   0x405fe0
  408d73:	movzx  edx,BYTE PTR [rbp+0xf5]
  408d7a:	and    eax,0x1
  408d7d:	shl    eax,0x3
  408d80:	and    edx,0xfffffff7
  408d83:	or     eax,edx
  408d85:	mov    BYTE PTR [rbp+0xf5],al
  408d8b:	cmp    DWORD PTR [r12],0x0
  408d90:	je     0x408823
  408d96:	lea    r8,[rip+0x27b23]        # 0x4308c0
  408d9d:	lea    rcx,[rip+0x26fa6]        # 0x42fd4a
  408da4:	mov    r9,r13
  408da7:	mov    edx,0x2a77
  408dac:	call   0x40d350
  408db1:	jmp    0x408823
  408db6:	lea    rcx,[rbp+0x58]
  408dba:	mov    rdx,r13
  408dbd:	call   0x41d6f0
  408dc2:	mov    rdi,rax
  408dc5:	jmp    0x40881e
  408dca:	mov    rdx,r13
  408dcd:	mov    r8,rbp
  408dd0:	mov    rcx,rbx
  408dd3:	call   0x405fe0
  408dd8:	movzx  edx,BYTE PTR [rbp+0xf5]
  408ddf:	and    eax,0x1
  408de2:	shl    eax,0x2
  408de5:	and    edx,0xfffffffb
  408de8:	or     eax,edx
  408dea:	mov    BYTE PTR [rbp+0xf5],al
  408df0:	jmp    0x408823
  408df5:	lea    rcx,[rbp+0x60]
  408df9:	mov    rdx,r13
  408dfc:	call   0x41d6f0
  408e01:	mov    rdi,rax
  408e04:	jmp    0x40881e
  408e09:	nop    DWORD PTR [rax+0x0]
  408e10:	lea    rax,[rip+0x27b69]        # 0x430980
  408e17:	ret    
  408e18:	nop
  408e19:	nop
  408e1a:	nop
  408e1b:	nop
  408e1c:	nop
  408e1d:	nop
  408e1e:	nop
  408e1f:	nop
  408e20:	push   rsi
  408e21:	push   rbx
  408e22:	sub    rsp,0x38
  408e26:	mov    eax,DWORD PTR [rcx+0x10]
  408e29:	mov    rsi,rcx
  408e2c:	test   eax,eax
  408e2e:	je     0x408e64
  408e30:	test   eax,eax
  408e32:	js     0x408e92
  408e34:	movsxd r9,eax
  408e37:	mov    rbx,r8
  408e3a:	mov    rcx,QWORD PTR [rsi+0x8]
  408e3e:	cmp    r9,r8
  408e41:	cmovbe rbx,r9
  408e45:	sub    eax,ebx
  408e47:	mov    r8,rbx
  408e4a:	mov    DWORD PTR [rsi+0x10],eax
  408e4d:	call   0x41bc50
  408e52:	test   rax,rax
  408e55:	mov    eax,0xffffffff
  408e5a:	cmovne eax,ebx
  408e5d:	add    rsp,0x38
  408e61:	pop    rbx
  408e62:	pop    rsi
  408e63:	ret    
  408e64:	mov    rcx,QWORD PTR [rcx+0x8]
  408e68:	mov    QWORD PTR [rsp+0x28],r8
  408e6d:	mov    QWORD PTR [rsp+0x20],rdx
  408e72:	call   0x41bd10
  408e77:	mov    ecx,0xffffffff
  408e7c:	test   eax,eax
  408e7e:	mov    r8,QWORD PTR [rsp+0x28]
  408e83:	cmovle eax,ecx
  408e86:	mov    rdx,QWORD PTR [rsp+0x20]
  408e8b:	test   eax,eax
  408e8d:	mov    DWORD PTR [rsi+0x10],eax
  408e90:	jns    0x408e34
  408e92:	xor    eax,eax
  408e94:	add    rsp,0x38
  408e98:	pop    rbx
  408e99:	pop    rsi
  408e9a:	ret    
  408e9b:	nop    DWORD PTR [rax+rax*1+0x0]
  408ea0:	movzx  edx,BYTE PTR [rcx]
  408ea3:	mov    rax,QWORD PTR [rip+0x32f26]        # 0x43bdd0
  408eaa:	cmp    BYTE PTR [rcx+0x2],0x0
  408eae:	mov    edx,DWORD PTR [rax+rdx*4]
  408eb1:	sete   BYTE PTR [rcx+0x2]
  408eb5:	add    rcx,0x3
  408eb9:	sub    edx,0x1
  408ebc:	jmp    0x4236d0
  408ec1:	nop    DWORD PTR [rax+rax*1+0x0]
  408ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ed0:	push   rbp
  408ed1:	push   rdi
  408ed2:	push   rsi
  408ed3:	push   rbx
  408ed4:	sub    rsp,0x68
  408ed8:	mov    rdi,r8
  408edb:	lea    rbx,[rsp+0x30]
  408ee0:	mov    r8,QWORD PTR [rsp+0xb0]
  408ee8:	mov    rsi,rcx
  408eeb:	mov    rbp,rdx
  408eee:	mov    rdx,r9
  408ef1:	mov    rcx,rbx
  408ef4:	call   0x41d580
  408ef9:	test   eax,eax
  408efb:	js     0x408f31
  408efd:	test   BYTE PTR [rsi+0xa0],0x2
  408f04:	je     0x408f40
  408f06:	mov    rdx,QWORD PTR [rbp+0x0]
  408f0a:	test   rdx,rdx
  408f0d:	je     0x408f40
  408f0f:	mov    r9,QWORD PTR [rsp+0xb8]
  408f17:	mov    QWORD PTR [rsp+0x20],rbx
  408f1c:	mov    r8d,0x1
  408f22:	mov    rcx,rsi
  408f25:	call   0x41d100
  408f2a:	mov    rdx,QWORD PTR [rsp+0x58]
  408f2f:	mov    DWORD PTR [rdi],edx
  408f31:	add    rsp,0x68
  408f35:	pop    rbx
  408f36:	pop    rsi
  408f37:	pop    rdi
  408f38:	pop    rbp
  408f39:	ret    
  408f3a:	nop    WORD PTR [rax+rax*1+0x0]
  408f40:	mov    rdx,QWORD PTR [rsp+0xb8]
  408f48:	mov    r8,rbx
  408f4b:	mov    rcx,rsi
  408f4e:	call   0x41d450
  408f53:	jmp    0x408f2a
  408f55:	nop
  408f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408f60:	cmp    ecx,0xaf
  408f66:	je     0x408fc0
  408f68:	ja     0x408f90
  408f6a:	cmp    ecx,0xa5
  408f70:	mov    eax,0x25
  408f75:	je     0x408f8e
  408f77:	jbe    0x408fe0
  408f79:	cmp    ecx,0xa7
  408f7f:	je     0x408fd0
  408f81:	cmp    ecx,0xad
  408f87:	mov    eax,0x2d
  408f8c:	jne    0x408fa7
  408f8e:	repz ret 
  408f90:	cmp    ecx,0xe1
  408f96:	je     0x408ff0
  408f98:	ja     0x408fb0
  408f9a:	cmp    ecx,0xbf
  408fa0:	mov    eax,0x7f
  408fa5:	je     0x408f8e
  408fa7:	mov    eax,ecx
  408fa9:	ret    
  408faa:	nop    WORD PTR [rax+rax*1+0x0]
  408fb0:	cmp    ecx,0xe7
  408fb6:	je     0x408fd0
  408fb8:	cmp    ecx,0xef
  408fbe:	jne    0x408fa7
  408fc0:	mov    eax,0x2f
  408fc5:	ret    
  408fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408fd0:	mov    eax,0x27
  408fd5:	ret    
  408fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408fe0:	cmp    ecx,0x63
  408fe3:	mov    al,0x23
  408fe5:	jne    0x408fa7
  408fe7:	repz ret 
  408fe9:	nop    DWORD PTR [rax+0x0]
  408ff0:	sub    edx,0x22
  408ff3:	cmp    edx,0x2
  408ff6:	sbb    eax,eax
  408ff8:	and    al,0x42
  408ffa:	add    eax,0xe1
  408fff:	ret    
  409000:	push   rdi
  409001:	push   rsi
  409002:	push   rbx
  409003:	sub    rsp,0x20
  409007:	cmp    BYTE PTR [rdx+0x18],0x8
  40900b:	mov    rbx,rcx
  40900e:	mov    rdi,rdx
  409011:	ja     0x40904d
  409013:	movzx  edx,BYTE PTR [rdx+0x18]
  409017:	lea    rax,[rip+0x27b22]        # 0x430b40
  40901e:	movsxd rdx,DWORD PTR [rax+rdx*4]
  409022:	add    rax,rdx
  409025:	jmp    rax
  409027:	nop    WORD PTR [rax+rax*1+0x0]
  409030:	mov    eax,DWORD PTR [rdi+0x14]
  409033:	xor    edx,edx
  409035:	sub    eax,0x24
  409038:	cmp    eax,0x9b
  40903d:	ja     0x40904a
  40903f:	lea    rdx,[rip+0x280ba]        # 0x431100
  409046:	movsx  edx,BYTE PTR [rdx+rax*1]
  40904a:	mov    DWORD PTR [rdi+0x10],edx
  40904d:	movzx  edx,WORD PTR [rbx]
  409050:	cmp    dx,0x700
  409055:	ja     0x409090
  409057:	mov    eax,DWORD PTR [rdi+0x1c]
  40905a:	lea    ecx,[rax-0x22]
  40905d:	cmp    ecx,0x1
  409060:	jbe    0x409165
  409066:	cmp    eax,0x63
  409069:	je     0x409165
  40906f:	cmp    dx,0x701
  409074:	jbe    0x409081
  409076:	cmp    eax,0xf1
  40907b:	je     0x4091c0
  409081:	xor    eax,eax
  409083:	add    rsp,0x20
  409087:	pop    rbx
  409088:	pop    rsi
  409089:	pop    rdi
  40908a:	ret    
  40908b:	nop    DWORD PTR [rax+rax*1+0x0]
  409090:	mov    ecx,DWORD PTR [rdi+0x1c]
  409093:	lea    r8,[rip+0x28126]        # 0x4311c0
  40909a:	test   BYTE PTR [r8+rcx*1],0x8
  40909f:	mov    rax,rcx
  4090a2:	jne    0x409190
  4090a8:	lea    ecx,[rax-0x22]
  4090ab:	cmp    ecx,0x1
  4090ae:	jbe    0x4090b5
  4090b0:	cmp    eax,0x63
  4090b3:	jne    0x40906f
  4090b5:	cmp    dx,0x701
  4090ba:	jbe    0x409165
  4090c0:	mov    rcx,rbx
  4090c3:	add    rdi,0x30
  4090c7:	call   0x41bbc0
  4090cc:	test   al,al
  4090ce:	mov    esi,eax
  4090d0:	je     0x409081
  4090d2:	mov    rcx,rbx
  4090d5:	call   0x41bcf0
  4090da:	mov    rdx,rdi
  4090dd:	movzx  r8d,ax
  4090e1:	mov    rcx,rbx
  4090e4:	call   0x41bf20
  4090e9:	sub    sil,0x1
  4090ed:	jne    0x4090d2
  4090ef:	xor    eax,eax
  4090f1:	add    rsp,0x20
  4090f5:	pop    rbx
  4090f6:	pop    rsi
  4090f7:	pop    rdi
  4090f8:	ret    
  4090f9:	nop    DWORD PTR [rax+0x0]
  409100:	mov    DWORD PTR [rdi+0x10],0x7fffffff
  409107:	movzx  edx,WORD PTR [rcx]
  40910a:	jmp    0x409050
  40910f:	nop
  409110:	call   0x41bbc0
  409115:	movzx  eax,al
  409118:	movzx  edx,WORD PTR [rbx]
  40911b:	mov    DWORD PTR [rdi+0x10],eax
  40911e:	jmp    0x409050
  409123:	call   0x41bcf0
  409128:	cwde   
  409129:	movzx  edx,WORD PTR [rbx]
  40912c:	test   eax,eax
  40912e:	mov    DWORD PTR [rdi+0x10],eax
  409131:	jns    0x409050
  409137:	cmp    dx,0x701
  40913c:	jbe    0x409050
  409142:	mov    BYTE PTR [rdi+0x18],0x8
  409146:	mov    DWORD PTR [rdi+0x10],0x3fffffff
  40914d:	movzx  edx,WORD PTR [rbx]
  409150:	jmp    0x409050
  409155:	call   0x41bd10
  40915a:	movzx  edx,WORD PTR [rbx]
  40915d:	mov    DWORD PTR [rdi+0x10],eax
  409160:	jmp    0x409050
  409165:	mov    rcx,rbx
  409168:	call   0x41bcf0
  40916d:	lea    rdx,[rdi+0x30]
  409171:	movzx  r8d,ax
  409175:	mov    rcx,rbx
  409178:	call   0x41bf20
  40917d:	xor    eax,eax
  40917f:	add    rsp,0x20
  409183:	pop    rbx
  409184:	pop    rsi
  409185:	pop    rdi
  409186:	ret    
  409187:	nop    WORD PTR [rax+rax*1+0x0]
  409190:	lea    rsi,[rdi+0x59]
  409194:	mov    r8d,0x5
  40919a:	mov    rcx,rbx
  40919d:	mov    rdx,rsi
  4091a0:	call   0x41bc50
  4091a5:	mov    rdx,rsi
  4091a8:	mov    rcx,rbx
  4091ab:	call   0x40cc90
  4091b0:	movzx  edx,WORD PTR [rbx]
  4091b3:	mov    QWORD PTR [rdi+0x28],rax
  4091b7:	mov    eax,DWORD PTR [rdi+0x1c]
  4091ba:	jmp    0x4090a8
  4091bf:	nop
  4091c0:	mov    rcx,rbx
  4091c3:	call   0x41bbc0
  4091c8:	test   al,al
  4091ca:	je     0x409081
  4091d0:	mov    rcx,rbx
  4091d3:	call   0x41bbc0
  4091d8:	xor    r9d,r9d
  4091db:	xor    r8d,r8d
  4091de:	movzx  edx,al
  4091e1:	mov    rcx,rbx
  4091e4:	call   0x41bd60
  4091e9:	mov    rcx,rbx
  4091ec:	call   0x41bbc0
  4091f1:	xor    r9d,r9d
  4091f4:	xor    r8d,r8d
  4091f7:	movzx  edx,al
  4091fa:	mov    rcx,rbx
  4091fd:	call   0x41bd60
  409202:	mov    rcx,rbx
  409205:	call   0x41bcf0
  40920a:	xor    r9d,r9d
  40920d:	movzx  edx,ax
  409210:	xor    r8d,r8d
  409213:	mov    rcx,rbx
  409216:	call   0x41bd60
  40921b:	jmp    0x409081
  409220:	cmp    BYTE PTR [rcx+0x18],0x2
  409224:	mov    eax,0x28
  409229:	jbe    0x409230
  40922b:	repz ret 
  40922d:	nop    DWORD PTR [rax]
  409230:	mov    eax,DWORD PTR [rcx+0x10]
  409233:	ret    
  409234:	xchg   ax,ax
  409236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409240:	push   r12
  409242:	push   rbp
  409243:	push   rdi
  409244:	push   rsi
  409245:	push   rbx
  409246:	sub    rsp,0x60
  40924a:	mov    rbp,QWORD PTR [rip+0x32bdf]        # 0x43be30
  409251:	mov    rdi,rcx
  409254:	mov    rbx,rdx
  409257:	mov    ecx,DWORD PTR [rbp+0x0]
  40925a:	test   ecx,ecx
  40925c:	jne    0x4095a5
  409262:	cmp    BYTE PTR [rbx+0x18],0x8
  409266:	ja     0x409294
  409268:	movzx  edx,BYTE PTR [rbx+0x18]
  40926c:	lea    rax,[rip+0x27961]        # 0x430bd4
  409273:	movsxd rdx,DWORD PTR [rax+rdx*4]
  409277:	add    rax,rdx
  40927a:	jmp    rax
  40927c:	nop    DWORD PTR [rax+0x0]
  409280:	mov    rcx,rdi
  409283:	call   0x41bbc0
  409288:	cmp    al,0x10
  40928a:	mov    rsi,QWORD PTR [rbx+0x48]
  40928e:	je     0x409630
  409294:	mov    esi,0xffffffff
  409299:	test   rdi,rdi
  40929c:	je     0x4096e0
  4092a2:	cmp    DWORD PTR [rdi+0x148],0x5
  4092a9:	je     0x4096e0
  4092af:	mov    edx,DWORD PTR [rbp+0x0]
  4092b2:	test   edx,edx
  4092b4:	jne    0x409600
  4092ba:	test   esi,esi
  4092bc:	js     0x409560
  4092c2:	cmp    BYTE PTR [rbx+0x18],0x2
  4092c6:	mov    rbp,QWORD PTR [rbx+0x48]
  4092ca:	jbe    0x409300
  4092cc:	test   esi,esi
  4092ce:	jne    0x4093b1
  4092d4:	mov    rcx,QWORD PTR [rbp+0x0]
  4092d8:	mov    DWORD PTR [rbx+0x64],0x0
  4092df:	test   rcx,rcx
  4092e2:	je     0x4092f1
  4092e4:	call   0x42d6f8
  4092e9:	mov    QWORD PTR [rbp+0x0],0x0
  4092f1:	xor    edi,edi
  4092f3:	mov    eax,edi
  4092f5:	add    rsp,0x60
  4092f9:	pop    rbx
  4092fa:	pop    rsi
  4092fb:	pop    rdi
  4092fc:	pop    rbp
  4092fd:	pop    r12
  4092ff:	ret    
  409300:	test   BYTE PTR [rdi+0xa0],0x2
  409307:	je     0x409370
  409309:	cmp    QWORD PTR [rbx+0x28],0x0
  40930e:	je     0x409370
  409310:	mov    r9,rbx
  409313:	movsxd r8,esi
  409316:	mov    rdx,rbp
  409319:	mov    rcx,rdi
  40931c:	call   0x41be10
  409321:	test   eax,eax
  409323:	js     0x4096e0
  409329:	mov    eax,DWORD PTR [rbx+0x14]
  40932c:	cmp    eax,0xad
  409331:	je     0x4095d0
  409337:	jbe    0x409580
  40933d:	cmp    eax,0xaf
  409342:	je     0x40958e
  409348:	cmp    eax,0xe1
  40934d:	jne    0x4092f1
  40934f:	xor    edi,edi
  409351:	cmp    DWORD PTR [rbx+0x8],0x22
  409355:	je     0x40958e
  40935b:	nop    DWORD PTR [rax+rax*1+0x0]
  409360:	mov    eax,edi
  409362:	add    rsp,0x60
  409366:	pop    rbx
  409367:	pop    rsi
  409368:	pop    rdi
  409369:	pop    rbp
  40936a:	pop    r12
  40936c:	ret    
  40936d:	nop    DWORD PTR [rax]
  409370:	mov    r12d,DWORD PTR [rbx+0x10]
  409374:	cmp    r12d,esi
  409377:	jge    0x409535
  40937d:	movsxd r8,r12d
  409380:	mov    rdx,rbp
  409383:	mov    rcx,rdi
  409386:	sub    esi,r12d
  409389:	call   0x41bc50
  40938e:	test   rax,rax
  409391:	je     0x4096e0
  409397:	test   esi,esi
  409399:	jle    0x40954f
  40939f:	movsxd r8,esi
  4093a2:	xor    edx,edx
  4093a4:	mov    rcx,rdi
  4093a7:	call   0x41bc50
  4093ac:	jmp    0x40954f
  4093b1:	mov    eax,DWORD PTR [rbx+0x64]
  4093b4:	mov    r12d,0x0
  4093ba:	movsxd r8,esi
  4093bd:	test   eax,eax
  4093bf:	cmovns r12d,DWORD PTR [rbx+0x64]
  4093c4:	movsxd r12,r12d
  4093c7:	cmp    r12,r8
  4093ca:	jb     0x409690
  4093d0:	lea    rsi,[rsp+0x40]
  4093d5:	mov    rdx,rdi
  4093d8:	mov    rcx,rsi
  4093db:	call   0x41d4a0
  4093e0:	lea    rdx,[rbx+0x28]
  4093e4:	lea    r8,[rbx+0x64]
  4093e8:	mov    QWORD PTR [rsp+0x28],rsi
  4093ed:	mov    QWORD PTR [rsp+0x20],r12
  4093f2:	mov    r9,rbp
  4093f5:	mov    rcx,rdi
  4093f8:	call   0x408ed0
  4093fd:	test   eax,eax
  4093ff:	mov    ebx,eax
  409401:	jns    0x4092f1
  409407:	mov    r8,QWORD PTR [rsp+0x48]
  40940c:	test   r8,r8
  40940f:	je     0x4092f1
  409415:	mov    rcx,rdi
  409418:	xor    edx,edx
  40941a:	mov    edi,ebx
  40941c:	call   0x41bc50
  409421:	jmp    0x409360
  409426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409430:	mov    eax,DWORD PTR [rbx+0x14]
  409433:	xor    esi,esi
  409435:	sub    eax,0x24
  409438:	cmp    eax,0x9b
  40943d:	ja     0x409299
  409443:	lea    rdx,[rip+0x27cb6]        # 0x431100
  40944a:	movsx  esi,BYTE PTR [rdx+rax*1]
  40944e:	jmp    0x409299
  409453:	mov    rcx,rdi
  409456:	call   0x41bbc0
  40945b:	movzx  esi,al
  40945e:	test   esi,esi
  409460:	je     0x409294
  409466:	jmp    0x409299
  40946b:	nop    DWORD PTR [rax+rax*1+0x0]
  409470:	mov    rcx,rdi
  409473:	call   0x41bcf0
  409478:	movsx  esi,ax
  40947b:	jmp    0x409299
  409480:	mov    rcx,rdi
  409483:	call   0x41bd10
  409488:	test   eax,eax
  40948a:	mov    esi,eax
  40948c:	je     0x409294
  409492:	jmp    0x409299
  409497:	nop    WORD PTR [rax+rax*1+0x0]
  4094a0:	mov    rcx,rdi
  4094a3:	mov    rbp,QWORD PTR [rbx+0x48]
  4094a7:	call   0x41bd30
  4094ac:	cmp    rax,0xffffffffffffffff
  4094b0:	mov    rsi,rax
  4094b3:	je     0x4096d0
  4094b9:	test   rax,rax
  4094bc:	jle    0x409620
  4094c2:	mov    rcx,QWORD PTR [rbp+0x0]
  4094c6:	call   0x42d6f8
  4094cb:	mov    edx,DWORD PTR [rbx+0x1c]
  4094ce:	lea    rcx,[rip+0x27ceb]        # 0x4311c0
  4094d5:	mov    rax,rsi
  4094d8:	shr    rax,1
  4094db:	mov    QWORD PTR [rbp+0x0],0x0
  4094e3:	test   BYTE PTR [rcx+rdx*1],0x20
  4094e7:	cmovne rsi,rax
  4094eb:	lea    rax,[rip+0xfffffffffffff92e]        # 0x408e20
  4094f2:	lea    rdx,[rbx+0x28]
  4094f6:	lea    r8,[rbx+0x64]
  4094fa:	mov    rcx,rdi
  4094fd:	mov    QWORD PTR [rsp+0x20],rsi
  409502:	mov    r9,rbp
  409505:	mov    QWORD PTR [rsp+0x40],rax
  40950a:	lea    rax,[rsp+0x40]
  40950f:	mov    QWORD PTR [rsp+0x48],rdi
  409514:	mov    DWORD PTR [rsp+0x50],0x0
  40951c:	mov    QWORD PTR [rsp+0x28],rax
  409521:	call   0x408ed0
  409526:	mov    edi,eax
  409528:	mov    eax,edi
  40952a:	add    rsp,0x60
  40952e:	pop    rbx
  40952f:	pop    rsi
  409530:	pop    rdi
  409531:	pop    rbp
  409532:	pop    r12
  409534:	ret    
  409535:	movsxd r8,esi
  409538:	mov    rdx,rbp
  40953b:	mov    rcx,rdi
  40953e:	call   0x41bc50
  409543:	test   rax,rax
  409546:	je     0x4096e0
  40954c:	mov    r12d,esi
  40954f:	mov    DWORD PTR [rbx+0x64],r12d
  409553:	mov    esi,r12d
  409556:	jmp    0x409329
  40955b:	nop    DWORD PTR [rax+rax*1+0x0]
  409560:	xor    edi,edi
  409562:	mov    DWORD PTR [rbx+0x64],0xffffffff
  409569:	mov    eax,edi
  40956b:	add    rsp,0x60
  40956f:	pop    rbx
  409570:	pop    rsi
  409571:	pop    rdi
  409572:	pop    rbp
  409573:	pop    r12
  409575:	ret    
  409576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409580:	cmp    eax,0x2d
  409583:	je     0x4095d0
  409585:	cmp    eax,0x2f
  409588:	jne    0x4092f1
  40958e:	mov    r8d,DWORD PTR [rbx+0x20]
  409592:	xor    edi,edi
  409594:	cmp    DWORD PTR [rbx+0x10],r8d
  409598:	jne    0x409360
  40959e:	mov    edx,0x20
  4095a3:	jmp    0x4095d6
  4095a5:	movzx  eax,BYTE PTR [rdx+0x18]
  4095a9:	lea    r8,[rip+0x275b8]        # 0x430b68
  4095b0:	lea    rcx,[rip+0x275d8]        # 0x430b8f
  4095b7:	mov    DWORD PTR [rsp+0x20],eax
  4095bb:	mov    r9d,DWORD PTR [rdx+0x14]
  4095bf:	mov    edx,0x2be5
  4095c4:	call   0x40d350
  4095c9:	jmp    0x409262
  4095ce:	xchg   ax,ax
  4095d0:	mov    r8d,DWORD PTR [rbx+0x10]
  4095d4:	xor    edx,edx
  4095d6:	xor    edi,edi
  4095d8:	cmp    esi,r8d
  4095db:	jge    0x409360
  4095e1:	sub    r8d,esi
  4095e4:	movsxd rcx,esi
  4095e7:	add    rcx,rbp
  4095ea:	movsxd r8,r8d
  4095ed:	call   0x42d698
  4095f2:	jmp    0x409360
  4095f7:	nop    WORD PTR [rax+rax*1+0x0]
  409600:	lea    r8,[rip+0x275a1]        # 0x430ba8
  409607:	lea    rcx,[rip+0x27581]        # 0x430b8f
  40960e:	mov    r9d,esi
  409611:	mov    edx,0x2ea5
  409616:	call   0x40d350
  40961b:	jmp    0x4092ba
  409620:	xor    esi,esi
  409622:	jmp    0x4094eb
  409627:	nop    WORD PTR [rax+rax*1+0x0]
  409630:	lea    r12,[rsi+0x8]
  409634:	mov    r8d,0x10
  40963a:	mov    rcx,rdi
  40963d:	mov    rdx,r12
  409640:	call   0x41bc50
  409645:	lea    rdx,[rsi+0x18]
  409649:	mov    r8d,0x8
  40964f:	mov    rcx,rdi
  409652:	call   0x41bc50
  409657:	mov    BYTE PTR [rsi+0x20],0x1
  40965b:	cmp    WORD PTR [rdi],0x701
  409660:	jbe    0x40967f
  409662:	lea    rdx,[rip+0x2752d]        # 0x430b96
  409669:	mov    r8d,0x10
  40966f:	mov    rcx,r12
  409672:	call   0x42d6b0
  409677:	test   eax,eax
  409679:	jne    0x40967f
  40967b:	mov    BYTE PTR [rsi+0x20],0x0
  40967f:	mov    rcx,rdi
  409682:	call   0x41bd10
  409687:	mov    esi,eax
  409689:	jmp    0x4092a2
  40968e:	xchg   ax,ax
  409690:	mov    rcx,QWORD PTR [rbp+0x0]
  409694:	mov    QWORD PTR [rsp+0x38],r8
  409699:	call   0x42d6f8
  40969e:	mov    r8,QWORD PTR [rsp+0x38]
  4096a3:	mov    eax,DWORD PTR [rbx+0x1c]
  4096a6:	lea    rdx,[rip+0x27b13]        # 0x4311c0
  4096ad:	mov    QWORD PTR [rbp+0x0],0x0
  4096b5:	mov    r12,r8
  4096b8:	shr    r12,1
  4096bb:	test   BYTE PTR [rdx+rax*1],0x20
  4096bf:	cmove  r12,r8
  4096c3:	jmp    0x4093d0
  4096c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4096d0:	mov    DWORD PTR [rbx+0x64],eax
  4096d3:	xor    edi,edi
  4096d5:	jmp    0x409360
  4096da:	nop    WORD PTR [rax+rax*1+0x0]
  4096e0:	mov    edi,0xffffffff
  4096e5:	jmp    0x409360
  4096ea:	nop    WORD PTR [rax+rax*1+0x0]
  4096f0:	push   rsi
  4096f1:	push   rbx
  4096f2:	sub    rsp,0x28
  4096f6:	mov    rbx,rdx
  4096f9:	mov    rsi,rcx
  4096fc:	call   0x416af0
  409701:	cmp    BYTE PTR [rbx+0x18],0x8
  409705:	ja     0x40972d
  409707:	movzx  edx,BYTE PTR [rbx+0x18]
  40970b:	lea    r8,[rip+0x274e6]        # 0x430bf8
  409712:	movsxd rdx,DWORD PTR [r8+rdx*4]
  409716:	add    r8,rdx
  409719:	jmp    r8
  40971c:	nop    DWORD PTR [rax+0x0]
  409720:	mov    edx,0xffffffff
  409725:	mov    rcx,rsi
  409728:	call   0x424180
  40972d:	movzx  eax,WORD PTR [rsi]
  409730:	cmp    ax,0x500
  409734:	je     0x409783
  409736:	cmp    ax,0x700
  40973a:	jbe    0x40974c
  40973c:	mov    eax,DWORD PTR [rbx+0x1c]
  40973f:	lea    rdx,[rip+0x27a7a]        # 0x4311c0
  409746:	test   BYTE PTR [rdx+rax*1],0x8
  40974a:	jne    0x409755
  40974c:	xor    eax,eax
  40974e:	add    rsp,0x28
  409752:	pop    rbx
  409753:	pop    rsi
  409754:	ret    
  409755:	lea    rdx,[rsi+0x70]
  409759:	mov    r8d,0x5
  40975f:	mov    rcx,rsi
  409762:	call   0x423f10
  409767:	xor    eax,eax
  409769:	add    rsp,0x28
  40976d:	pop    rbx
  40976e:	pop    rsi
  40976f:	ret    
  409770:	mov    edx,eax
  409772:	mov    rcx,rsi
  409775:	call   0x424140
  40977a:	movzx  eax,WORD PTR [rsi]
  40977d:	cmp    ax,0x500
  409781:	jne    0x409736
  409783:	mov    eax,DWORD PTR [rbx+0x1c]
  409786:	sub    eax,0x22
  409789:	cmp    eax,0x1
  40978c:	ja     0x40974c
  40978e:	xor    edx,edx
  409790:	mov    rcx,rsi
  409793:	call   0x424180
  409798:	movzx  eax,WORD PTR [rsi]
  40979b:	jmp    0x409736
  40979d:	nop    DWORD PTR [rax]
  4097a0:	movsx  edx,ax
  4097a3:	mov    rcx,rsi
  4097a6:	call   0x424180
  4097ab:	jmp    0x40972d
  4097ad:	nop    DWORD PTR [rax]
  4097b0:	movzx  edx,al
  4097b3:	mov    rcx,rsi
  4097b6:	call   0x4241d0
  4097bb:	jmp    0x40972d
  4097c0:	movzx  r8d,BYTE PTR [rdx+0x18]
  4097c5:	mov    eax,0x4
  4097ca:	cmp    r8b,0x5
  4097ce:	je     0x4097e2
  4097d0:	movzx  eax,r8b
  4097d4:	cmp    r8b,0x8
  4097d8:	mov    r8d,0x2
  4097de:	cmove  eax,r8d
  4097e2:	movzx  ecx,WORD PTR [rcx]
  4097e5:	cmp    cx,0x500
  4097ea:	je     0x409810
  4097ec:	cmp    cx,0x700
  4097f1:	jbe    0x409808
  4097f3:	mov    ecx,DWORD PTR [rdx+0x1c]
  4097f6:	lea    r8,[rip+0x279c3]        # 0x4311c0
  4097fd:	lea    edx,[rax+0x5]
  409800:	test   BYTE PTR [r8+rcx*1],0x8
  409805:	cmovne eax,edx
  409808:	repz ret 
  40980a:	nop    WORD PTR [rax+rax*1+0x0]
  409810:	mov    edx,DWORD PTR [rdx+0x1c]
  409813:	lea    ecx,[rax+0x2]
  409816:	sub    edx,0x22
  409819:	cmp    edx,0x1
  40981c:	cmovbe eax,ecx
  40981f:	ret    
  409820:	push   r15
  409822:	push   r14
  409824:	push   r13
  409826:	push   r12
  409828:	push   rbp
  409829:	push   rdi
  40982a:	push   rsi
  40982b:	push   rbx
  40982c:	sub    rsp,0x58
  409830:	mov    rax,QWORD PTR [rip+0x325f9]        # 0x43be30
  409837:	mov    rsi,rcx
  40983a:	mov    rbx,rdx
  40983d:	mov    r14d,r8d
  409840:	mov    ecx,DWORD PTR [rax]
  409842:	test   ecx,ecx
  409844:	jne    0x4098c5
  409846:	mov    r13d,DWORD PTR [rdx+0x64]
  40984a:	test   r13d,r13d
  40984d:	js     0x409913
  409853:	mov    rdx,rbx
  409856:	mov    rcx,rsi
  409859:	xor    ebp,ebp
  40985b:	call   0x416af0
  409860:	movzx  r9d,BYTE PTR [rbx+0x18]
  409865:	movsxd rdi,r13d
  409868:	mov    r11,rax
  40986b:	mov    r12,QWORD PTR [rbx+0x48]
  40986f:	cmp    r9b,0x2
  409873:	jbe    0x40987c
  409875:	mov    rbp,r12
  409878:	mov    r12,QWORD PTR [r12]
  40987c:	test   r14d,r14d
  40987f:	je     0x409950
  409885:	mov    r13,r12
  409888:	xor    r15d,r15d
  40988b:	cmp    WORD PTR [rsi],0x6ff
  409890:	jbe    0x409983
  409896:	mov    rax,QWORD PTR [rip+0x32593]        # 0x43be30
  40989d:	mov    eax,DWORD PTR [rax]
  40989f:	test   eax,eax
  4098a1:	jne    0x409c80
  4098a7:	cmp    r9b,0x8
  4098ab:	ja     0x4099d0
  4098b1:	lea    rdx,[rip+0x273f4]        # 0x430cac
  4098b8:	movzx  eax,r9b
  4098bc:	movsxd rax,DWORD PTR [rdx+rax*4]
  4098c0:	add    rdx,rax
  4098c3:	jmp    rdx
  4098c5:	mov    r9d,DWORD PTR [rdx+0x64]
  4098c9:	lea    r8,[rip+0x27350]        # 0x430c20
  4098d0:	lea    rcx,[rip+0x272b8]        # 0x430b8f
  4098d7:	mov    edx,0x3ad5
  4098dc:	call   0x40d350
  4098e1:	mov    r13d,DWORD PTR [rbx+0x64]
  4098e5:	test   r13d,r13d
  4098e8:	jns    0x409853
  4098ee:	mov    rax,QWORD PTR [rip+0x3253b]        # 0x43be30
  4098f5:	mov    edx,DWORD PTR [rax]
  4098f7:	test   edx,edx
  4098f9:	je     0x409913
  4098fb:	lea    r8,[rip+0x2733d]        # 0x430c3f
  409902:	lea    rcx,[rip+0x27286]        # 0x430b8f
  409909:	mov    edx,0x3b15
  40990e:	call   0x40d350
  409913:	movzx  eax,BYTE PTR [rbx+0x18]
  409917:	cmp    al,0x4
  409919:	je     0x409ae0
  40991f:	jbe    0x409ac0
  409925:	cmp    al,0x5
  409927:	je     0x409a60
  40992d:	cmp    al,0x8
  40992f:	jne    0x409b10
  409935:	mov    rdx,0xffffffffffffffff
  40993c:	mov    rcx,rsi
  40993f:	call   0x4240f0
  409944:	xor    eax,eax
  409946:	jmp    0x409a14
  40994b:	nop    DWORD PTR [rax+rax*1+0x0]
  409950:	mov    rdx,QWORD PTR [rbx+0x28]
  409954:	test   rdx,rdx
  409957:	je     0x409885
  40995d:	cmp    DWORD PTR [rdx+0x30],0x1
  409961:	je     0x409885
  409967:	test   r13d,r13d
  40996a:	jne    0x409c30
  409970:	xor    r15d,r15d
  409973:	xor    edi,edi
  409975:	cmp    WORD PTR [rsi],0x6ff
  40997a:	mov    r13,r12
  40997d:	ja     0x409896
  409983:	cmp    r9b,0x5
  409987:	ja     0x409a40
  40998d:	lea    rdx,[rip+0x2733c]        # 0x430cd0
  409994:	movzx  eax,r9b
  409998:	movsxd rax,DWORD PTR [rdx+rax*4]
  40999c:	add    rdx,rax
  40999f:	jmp    rdx
  4099a1:	cmp    rdi,r11
  4099a4:	cmova  rdi,r11
  4099a8:	test   r14d,r14d
  4099ab:	je     0x4099c5
  4099ad:	mov    eax,DWORD PTR [rbx+0x1c]
  4099b0:	lea    edx,[rax-0x22]
  4099b3:	cmp    edx,0x1
  4099b6:	jbe    0x409ce9
  4099bc:	cmp    eax,0x63
  4099bf:	je     0x409ce9
  4099c5:	mov    edx,edi
  4099c7:	mov    rcx,rsi
  4099ca:	call   0x424140
  4099cf:	nop
  4099d0:	cmp    r15d,0xffffffff
  4099d4:	je     0x409cdf
  4099da:	mov    r8,rdi
  4099dd:	mov    rdx,r13
  4099e0:	mov    rcx,rsi
  4099e3:	call   0x423f10
  4099e8:	test   rdi,rdi
  4099eb:	je     0x409a00
  4099ed:	cmp    BYTE PTR [rbx+0x18],0x8
  4099f1:	jne    0x409a00
  4099f3:	xor    edx,edx
  4099f5:	mov    rcx,rsi
  4099f8:	call   0x424140
  4099fd:	nop    DWORD PTR [rax]
  409a00:	test   r15d,r15d
  409a03:	jle    0x409a12
  409a05:	cmp    r12,r13
  409a08:	je     0x409a12
  409a0a:	mov    rcx,r13
  409a0d:	call   0x42d6f8
  409a12:	xor    eax,eax
  409a14:	add    rsp,0x58
  409a18:	pop    rbx
  409a19:	pop    rsi
  409a1a:	pop    rdi
  409a1b:	pop    rbp
  409a1c:	pop    r12
  409a1e:	pop    r13
  409a20:	pop    r14
  409a22:	pop    r15
  409a24:	ret    
  409a25:	mov    eax,DWORD PTR [rbx+0x14]
  409a28:	xor    edi,edi
  409a2a:	sub    eax,0x24
  409a2d:	cmp    eax,0x9b
  409a32:	ja     0x409a40
  409a34:	lea    rdx,[rip+0x276c5]        # 0x431100
  409a3b:	movsx  rdi,BYTE PTR [rdx+rax*1]
  409a40:	cmp    r15d,0xffffffff
  409a44:	je     0x409cdf
  409a4a:	mov    r8,rdi
  409a4d:	mov    rdx,r13
  409a50:	mov    rcx,rsi
  409a53:	call   0x423f10
  409a58:	jmp    0x409a00
  409a5a:	nop    WORD PTR [rax+rax*1+0x0]
  409a60:	xor    edx,edx
  409a62:	mov    rcx,rsi
  409a65:	call   0x424140
  409a6a:	xor    eax,eax
  409a6c:	jmp    0x409a14
  409a6e:	xchg   ax,ax
  409a70:	mov    edx,0x10
  409a75:	mov    rcx,rsi
  409a78:	call   0x4241d0
  409a7d:	lea    rdx,[rbp+0x8]
  409a81:	mov    r8d,0x10
  409a87:	mov    rcx,rsi
  409a8a:	call   0x423f10
  409a8f:	lea    rdx,[rbp+0x18]
  409a93:	mov    r8d,0x8
  409a99:	mov    rcx,rsi
  409a9c:	call   0x423f10
  409aa1:	cmp    rdi,0x7fffffff
  409aa8:	mov    eax,0x7fffffff
  409aad:	mov    rcx,rsi
  409ab0:	cmova  rdi,rax
  409ab4:	mov    edx,edi
  409ab6:	call   0x424140
  409abb:	jmp    0x409a40
  409abd:	nop    DWORD PTR [rax]
  409ac0:	cmp    al,0x2
  409ac2:	jne    0x409b10
  409ac4:	mov    edx,0xffffffff
  409ac9:	mov    rcx,rsi
  409acc:	call   0x424180
  409ad1:	xor    eax,eax
  409ad3:	jmp    0x409a14
  409ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  409ae0:	test   r14d,r14d
  409ae3:	je     0x409b40
  409ae5:	mov    eax,DWORD PTR [rbx+0x1c]
  409ae8:	lea    edx,[rax-0x22]
  409aeb:	cmp    edx,0x1
  409aee:	jbe    0x409b2d
  409af0:	cmp    eax,0x63
  409af3:	je     0x409b2d
  409af5:	mov    edx,0xffffffff
  409afa:	mov    rcx,rsi
  409afd:	call   0x424140
  409b02:	xor    eax,eax
  409b04:	jmp    0x409a14
  409b09:	nop    DWORD PTR [rax+0x0]
  409b10:	test   al,al
  409b12:	jne    0x409b2d
  409b14:	lea    rdx,[rip+0x27074]        # 0x430b8f
  409b1b:	lea    rcx,[rip+0x2713a]        # 0x430c5c
  409b22:	mov    r8d,0x3c3
  409b28:	call   0x42d350
  409b2d:	xor    edx,edx
  409b2f:	mov    rcx,rsi
  409b32:	call   0x4241d0
  409b37:	xor    eax,eax
  409b39:	jmp    0x409a14
  409b3e:	xchg   ax,ax
  409b40:	cmp    WORD PTR [rsi],0x6ff
  409b45:	jbe    0x409ae5
  409b47:	jmp    0x409af5
  409b49:	nop    DWORD PTR [rax+0x0]
  409b50:	mov    eax,DWORD PTR [rbx+0x1c]
  409b53:	xor    edi,edi
  409b55:	sub    eax,0x24
  409b58:	cmp    eax,0x9b
  409b5d:	ja     0x4099d0
  409b63:	lea    rdx,[rip+0x27596]        # 0x431100
  409b6a:	movsx  rdi,BYTE PTR [rdx+rax*1]
  409b6f:	jmp    0x4099d0
  409b74:	cmp    rdi,r11
  409b77:	mov    rcx,rsi
  409b7a:	cmova  rdi,r11
  409b7e:	movzx  edx,dil
  409b82:	call   0x4241d0
  409b87:	jmp    0x4099d0
  409b8c:	nop    DWORD PTR [rax+0x0]
  409b90:	cmp    rdi,r11
  409b93:	mov    rcx,rsi
  409b96:	cmova  rdi,r11
  409b9a:	movsx  edx,di
  409b9d:	call   0x424180
  409ba2:	jmp    0x4099d0
  409ba7:	nop    WORD PTR [rax+rax*1+0x0]
  409bb0:	mov    rdx,rdi
  409bb3:	mov    rcx,rsi
  409bb6:	call   0x4240f0
  409bbb:	mov    edx,edi
  409bbd:	mov    rcx,rsi
  409bc0:	call   0x424140
  409bc5:	jmp    0x4099d0
  409bca:	nop    WORD PTR [rax+rax*1+0x0]
  409bd0:	test   rdi,rdi
  409bd3:	jne    0x409cb0
  409bd9:	mov    edx,0x1
  409bde:	mov    rcx,rsi
  409be1:	call   0x4241d0
  409be6:	mov    eax,DWORD PTR [rbx+0x14]
  409be9:	lea    rdx,[rip+0x275d0]        # 0x4311c0
  409bf0:	test   BYTE PTR [rdx+rax*1],0x30
  409bf4:	je     0x409cd0
  409bfa:	mov    edx,0x20
  409bff:	mov    rcx,rsi
  409c02:	call   0x4241d0
  409c07:	jmp    0x409a00
  409c0c:	nop    DWORD PTR [rax+0x0]
  409c10:	cmp    rdi,0x1f40
  409c17:	mov    eax,0x1f40
  409c1c:	mov    rcx,rsi
  409c1f:	cmova  rdi,rax
  409c23:	mov    edx,edi
  409c25:	call   0x424180
  409c2a:	jmp    0x409a40
  409c2f:	nop
  409c30:	lea    rax,[rsp+0x48]
  409c35:	mov    r9d,r13d
  409c38:	mov    r8,r12
  409c3b:	mov    rcx,rsi
  409c3e:	mov    QWORD PTR [rsp+0x38],r11
  409c43:	mov    QWORD PTR [rsp+0x20],rax
  409c48:	call   0x415cf0
  409c4d:	movsxd rdi,DWORD PTR [rsp+0x48]
  409c52:	cmp    rax,0x1
  409c56:	mov    r13,rax
  409c59:	sbb    r15d,r15d
  409c5c:	movzx  r9d,BYTE PTR [rbx+0x18]
  409c61:	mov    r11,QWORD PTR [rsp+0x38]
  409c66:	or     r15d,0x1
  409c6a:	test   rax,rax
  409c6d:	mov    eax,0x0
  409c72:	cmove  rdi,rax
  409c76:	jmp    0x40988b
  409c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  409c80:	lea    r8,[rip+0x26ff1]        # 0x430c78
  409c87:	lea    rcx,[rip+0x26f01]        # 0x430b8f
  409c8e:	mov    edx,0x3f55
  409c93:	mov    QWORD PTR [rsp+0x38],r11
  409c98:	call   0x40d350
  409c9d:	movzx  r9d,BYTE PTR [rbx+0x18]
  409ca2:	mov    r11,QWORD PTR [rsp+0x38]
  409ca7:	jmp    0x4098a7
  409cac:	nop    DWORD PTR [rax+0x0]
  409cb0:	cmp    rdi,0xff
  409cb7:	mov    eax,0xff
  409cbc:	mov    rcx,rsi
  409cbf:	cmova  rdi,rax
  409cc3:	mov    edx,edi
  409cc5:	call   0x4241d0
  409cca:	jmp    0x409a40
  409ccf:	nop
  409cd0:	xor    edx,edx
  409cd2:	mov    rcx,rsi
  409cd5:	call   0x4241d0
  409cda:	jmp    0x409a00
  409cdf:	mov    eax,0xffffffff
  409ce4:	jmp    0x409a14
  409ce9:	mov    rcx,rsi
  409cec:	mov    edx,0x10
  409cf1:	call   0x4241d0
  409cf6:	lea    rdx,[rip+0x274a3]        # 0x4311a0
  409cfd:	mov    rcx,rsi
  409d00:	mov    r8d,0x10
  409d06:	call   0x423f10
  409d0b:	lea    rdx,[rip+0x2748e]        # 0x4311a0
  409d12:	mov    r8d,0x8
  409d18:	mov    rcx,rsi
  409d1b:	call   0x423f10
  409d20:	jmp    0x4099c5
  409d25:	nop
  409d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d30:	push   rsi
  409d31:	push   rbx
  409d32:	sub    rsp,0x28
  409d36:	mov    rbx,rdx
  409d39:	mov    rsi,rcx
  409d3c:	call   0x41bbc0
  409d41:	movzx  eax,al
  409d44:	mov    rcx,rsi
  409d47:	mov    DWORD PTR [rbx+0x10],eax
  409d4a:	call   0x41bbc0
  409d4f:	mov    rcx,rsi
  409d52:	mov    BYTE PTR [rbx+0x19],al
  409d55:	call   0x41bbc0
  409d5a:	movzx  edx,BYTE PTR [rbx+0x19]
  409d5e:	mov    BYTE PTR [rbx+0x1a],al
  409d61:	cmp    al,dl
  409d63:	seta   cl
  409d66:	sub    edx,0x1
  409d69:	cmp    dl,0x4c
  409d6c:	seta   al
  409d6f:	or     eax,ecx
  409d71:	movzx  eax,al
  409d74:	neg    eax
  409d76:	add    rsp,0x28
  409d7a:	pop    rbx
  409d7b:	pop    rsi
  409d7c:	ret    
  409d7d:	nop    DWORD PTR [rax]
  409d80:	mov    eax,0x23
  409d85:	ret    
  409d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d90:	push   rbp
  409d91:	push   rdi
  409d92:	push   rsi
  409d93:	push   rbx
  409d94:	sub    rsp,0x28
  409d98:	mov    rsi,rcx
  409d9b:	mov    rbp,rdx
  409d9e:	call   0x41bbc0
  409da3:	movzx  r8d,al
  409da7:	test   r8b,r8b
  409daa:	je     0x409e20
  409dac:	mov    rbx,QWORD PTR [rbp+0x48]
  409db0:	xor    eax,eax
  409db2:	lea    rdi,[rbx+0x8]
  409db6:	mov    r9,rbx
  409db9:	mov    QWORD PTR [rbx],0x0
  409dc0:	mov    QWORD PTR [rbx+0x1b],0x0
  409dc8:	and    rdi,0xfffffffffffffff8
  409dcc:	sub    r9,rdi
  409dcf:	add    r9d,0x23
  409dd3:	shr    r9d,0x3
  409dd7:	cmp    r8b,0x21
  409ddb:	mov    ecx,r9d
  409dde:	rep stos QWORD PTR es:[rdi],rax
  409de1:	movzx  eax,BYTE PTR [rbp+0x19]
  409de5:	mov    BYTE PTR [rbx],al
  409de7:	movzx  eax,BYTE PTR [rbp+0x1a]
  409deb:	mov    BYTE PTR [rbx+0x1],al
  409dee:	mov    eax,0xffffffff
  409df3:	ja     0x409e11
  409df5:	lea    rdx,[rbx+0x2]
  409df9:	mov    rcx,rsi
  409dfc:	call   0x41bc50
  409e01:	cmp    WORD PTR [rsi],0x6ff
  409e06:	ja     0x409e32
  409e08:	mov    DWORD PTR [rbp+0x64],0x23
  409e0f:	xor    eax,eax
  409e11:	add    rsp,0x28
  409e15:	pop    rbx
  409e16:	pop    rsi
  409e17:	pop    rdi
  409e18:	pop    rbp
  409e19:	ret    
  409e1a:	nop    WORD PTR [rax+rax*1+0x0]
  409e20:	xor    eax,eax
  409e22:	mov    DWORD PTR [rbp+0x64],0xffffffff
  409e29:	add    rsp,0x28
  409e2d:	pop    rbx
  409e2e:	pop    rsi
  409e2f:	pop    rdi
  409e30:	pop    rbp
  409e31:	ret    
  409e32:	mov    rcx,rbx
  409e35:	call   0x408ea0
  409e3a:	jmp    0x409e08
  409e3c:	nop    DWORD PTR [rax+0x0]
  409e40:	push   rsi
  409e41:	push   rbx
  409e42:	sub    rsp,0x28
  409e46:	mov    rax,QWORD PTR [rip+0x31f83]        # 0x43bdd0
  409e4d:	mov    rsi,rdx
  409e50:	movzx  edx,BYTE PTR [rdx+0x19]
  409e54:	mov    rbx,rcx
  409e57:	movzx  edx,BYTE PTR [rax+rdx*4]
  409e5b:	call   0x4241d0
  409e60:	movzx  edx,BYTE PTR [rsi+0x19]
  409e64:	mov    rcx,rbx
  409e67:	call   0x4241d0
  409e6c:	movzx  edx,BYTE PTR [rsi+0x1a]
  409e70:	mov    rcx,rbx
  409e73:	call   0x4241d0
  409e78:	xor    eax,eax
  409e7a:	add    rsp,0x28
  409e7e:	pop    rbx
  409e7f:	pop    rsi
  409e80:	ret    
  409e81:	nop    DWORD PTR [rax+rax*1+0x0]
  409e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e90:	mov    eax,0x3
  409e95:	ret    
  409e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ea0:	push   rdi
  409ea1:	push   rsi
  409ea2:	push   rbx
  409ea3:	sub    rsp,0x50
  409ea7:	mov    eax,DWORD PTR [rdx+0x64]
  409eaa:	mov    rbx,QWORD PTR [rdx+0x48]
  409eae:	mov    rsi,rcx
  409eb1:	test   eax,eax
  409eb3:	js     0x409f40
  409eb9:	movzx  edx,BYTE PTR [rbx]
  409ebc:	mov    rax,QWORD PTR [rip+0x31f0d]        # 0x43bdd0
  409ec3:	mov    edx,DWORD PTR [rax+rdx*4]
  409ec6:	mov    edi,edx
  409ec8:	movzx  edx,dl
  409ecb:	call   0x4241d0
  409ed0:	mov    rax,QWORD PTR [rbx]
  409ed3:	cmp    WORD PTR [rsi],0x6ff
  409ed8:	mov    QWORD PTR [rsp+0x20],rax
  409edd:	mov    rax,QWORD PTR [rbx+0x8]
  409ee1:	mov    QWORD PTR [rsp+0x28],rax
  409ee6:	mov    rax,QWORD PTR [rbx+0x10]
  409eea:	mov    QWORD PTR [rsp+0x30],rax
  409eef:	mov    rax,QWORD PTR [rbx+0x18]
  409ef3:	mov    QWORD PTR [rsp+0x38],rax
  409ef8:	movzx  eax,WORD PTR [rbx+0x20]
  409efc:	mov    WORD PTR [rsp+0x40],ax
  409f01:	movzx  eax,BYTE PTR [rbx+0x22]
  409f05:	lea    rbx,[rsp+0x20]
  409f0a:	mov    BYTE PTR [rsp+0x42],al
  409f0e:	ja     0x409f30
  409f10:	lea    rdx,[rbx+0x2]
  409f14:	movzx  r8d,dil
  409f18:	mov    rcx,rsi
  409f1b:	call   0x423f10
  409f20:	xor    eax,eax
  409f22:	add    rsp,0x50
  409f26:	pop    rbx
  409f27:	pop    rsi
  409f28:	pop    rdi
  409f29:	ret    
  409f2a:	nop    WORD PTR [rax+rax*1+0x0]
  409f30:	mov    rcx,rbx
  409f33:	call   0x408ea0
  409f38:	jmp    0x409f10
  409f3a:	nop    WORD PTR [rax+rax*1+0x0]
  409f40:	xor    edx,edx
  409f42:	call   0x4241d0
  409f47:	xor    eax,eax
  409f49:	add    rsp,0x50
  409f4d:	pop    rbx
  409f4e:	pop    rsi
  409f4f:	pop    rdi
  409f50:	ret    
  409f51:	nop    DWORD PTR [rax+rax*1+0x0]
  409f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f60:	mov    eax,0xffffffff
  409f65:	ret    
  409f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f70:	mov    eax,0xffffffff
  409f75:	ret    
  409f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f80:	push   rbx
  409f81:	sub    rsp,0x20
  409f85:	cmp    DWORD PTR [rdx+0x14],0x28
  409f89:	mov    rbx,rdx
  409f8c:	mov    BYTE PTR [rdx+0x19],0x0
  409f90:	mov    BYTE PTR [rdx+0x1a],0x0
  409f94:	je     0x409fa5
  409f96:	call   0x41bbc0
  409f9b:	cmp    al,0x7
  409f9d:	mov    BYTE PTR [rbx+0x19],al
  409fa0:	mov    BYTE PTR [rbx+0x1a],al
  409fa3:	ja     0x409fc0
  409fa5:	mov    DWORD PTR [rbx+0x10],0x10
  409fac:	mov    DWORD PTR [rbx+0x20],0x10
  409fb3:	xor    eax,eax
  409fb5:	add    rsp,0x20
  409fb9:	pop    rbx
  409fba:	ret    
  409fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  409fc0:	mov    eax,0xffffffff
  409fc5:	jmp    0x409fb5
  409fc7:	nop    WORD PTR [rax+rax*1+0x0]
  409fd0:	mov    eax,0x10
  409fd5:	ret    
  409fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409fe0:	push   rbp
  409fe1:	push   rdi
  409fe2:	push   rsi
  409fe3:	push   rbx
  409fe4:	sub    rsp,0x38
  409fe8:	mov    rdi,QWORD PTR [rdx+0x48]
  409fec:	mov    rbx,rcx
  409fef:	mov    rsi,rdx
  409ff2:	call   0x41bbc0
  409ff7:	movzx  eax,al
  409ffa:	test   eax,eax
  409ffc:	jne    0x40a010
  409ffe:	mov    DWORD PTR [rsi+0x64],0xffffffff
  40a005:	add    rsp,0x38
  40a009:	pop    rbx
  40a00a:	pop    rsi
  40a00b:	pop    rdi
  40a00c:	pop    rbp
  40a00d:	ret    
  40a00e:	xchg   ax,ax
  40a010:	mov    QWORD PTR [rdi],0x0
  40a017:	mov    QWORD PTR [rdi+0x8],0x0
  40a01f:	mov    ecx,DWORD PTR [rsi+0x14]
  40a022:	cmp    ecx,0x2b
  40a025:	je     0x40a115
  40a02b:	cmp    ecx,0x29
  40a02e:	je     0x40a11a
  40a034:	sub    eax,0x3
  40a037:	js     0x40a132
  40a03d:	movzx  r8d,BYTE PTR [rsi+0x19]
  40a042:	movzx  edx,BYTE PTR [rdi+0xe]
  40a046:	and    r8d,0x7
  40a04a:	and    edx,0xfffffff8
  40a04d:	or     r8d,edx
  40a050:	cmp    ecx,0x28
  40a053:	mov    BYTE PTR [rdi+0xe],r8b
  40a057:	je     0x40a0c1
  40a059:	lea    edx,[rax-0x3]
  40a05c:	cmp    edx,0x2
  40a05f:	ja     0x40a132
  40a065:	lea    rbp,[rsp+0x28]
  40a06a:	movsxd r8,eax
  40a06d:	mov    rcx,rbx
  40a070:	mov    QWORD PTR [rsp+0x28],0x0
  40a079:	mov    rdx,rbp
  40a07c:	call   0x41bc50
  40a081:	movzx  r8d,BYTE PTR [rsi+0x19]
  40a086:	mov    rax,QWORD PTR [rsp+0x28]
  40a08b:	cmp    r8d,0x6
  40a08f:	jg     0x40a0a2
  40a091:	lea    rax,[rax+rax*4]
  40a095:	add    r8d,0x1
  40a099:	add    rax,rax
  40a09c:	cmp    r8d,0x7
  40a0a0:	jne    0x40a091
  40a0a2:	or     BYTE PTR [rdi+0xf],0x20
  40a0a6:	mov    QWORD PTR [rdi],rax
  40a0a9:	cmp    DWORD PTR [rsi+0x14],0x29
  40a0ad:	jne    0x40a0ca
  40a0af:	xor    eax,eax
  40a0b1:	mov    DWORD PTR [rsi+0x64],0x10
  40a0b8:	add    rsp,0x38
  40a0bc:	pop    rbx
  40a0bd:	pop    rsi
  40a0be:	pop    rdi
  40a0bf:	pop    rbp
  40a0c0:	ret    
  40a0c1:	test   eax,eax
  40a0c3:	jne    0x40a132
  40a0c5:	lea    rbp,[rsp+0x28]
  40a0ca:	mov    r8d,0x3
  40a0d0:	mov    rdx,rbp
  40a0d3:	mov    rcx,rbx
  40a0d6:	mov    DWORD PTR [rsp+0x28],0x0
  40a0de:	call   0x41bc50
  40a0e3:	or     BYTE PTR [rdi+0xf],0x40
  40a0e7:	mov    eax,DWORD PTR [rsp+0x28]
  40a0eb:	sub    eax,0xa955b
  40a0f0:	cmp    DWORD PTR [rsi+0x14],0x2b
  40a0f4:	mov    DWORD PTR [rdi+0x8],eax
  40a0f7:	jne    0x40a0af
  40a0f9:	mov    rcx,rbx
  40a0fc:	call   0x41bcf0
  40a101:	mov    WORD PTR [rdi+0xc],ax
  40a105:	add    ax,0x348
  40a109:	cmp    ax,0x690
  40a10d:	ja     0x40a132
  40a10f:	or     BYTE PTR [rdi+0xf],0x80
  40a113:	jmp    0x40a0af
  40a115:	sub    eax,0x5
  40a118:	js     0x40a132
  40a11a:	movzx  edx,BYTE PTR [rsi+0x19]
  40a11e:	movzx  ecx,BYTE PTR [rdi+0xe]
  40a122:	and    edx,0x7
  40a125:	and    ecx,0xfffffff8
  40a128:	or     edx,ecx
  40a12a:	mov    BYTE PTR [rdi+0xe],dl
  40a12d:	jmp    0x40a059
  40a132:	mov    eax,0xffffffff
  40a137:	jmp    0x40a005
  40a13c:	nop    DWORD PTR [rax+0x0]
  40a140:	sub    rsp,0x28
  40a144:	cmp    DWORD PTR [rdx+0x1c],0x28
  40a148:	je     0x40a154
  40a14a:	mov    edx,0x7
  40a14f:	call   0x4241d0
  40a154:	xor    eax,eax
  40a156:	add    rsp,0x28
  40a15a:	ret    
  40a15b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a160:	sub    rsp,0x38
  40a164:	mov    eax,DWORD PTR [rdx+0x64]
  40a167:	mov    r8,QWORD PTR [rdx+0x48]
  40a16b:	test   eax,eax
  40a16d:	js     0x40a210
  40a173:	mov    edx,DWORD PTR [rdx+0x1c]
  40a176:	cmp    edx,0x28
  40a179:	je     0x40a1e0
  40a17b:	mov    rax,QWORD PTR [r8]
  40a17e:	mov    DWORD PTR [rsp+0x21],eax
  40a182:	shr    rax,0x20
  40a186:	cmp    edx,0x29
  40a189:	mov    BYTE PTR [rsp+0x25],al
  40a18d:	je     0x40a1d0
  40a18f:	mov    eax,DWORD PTR [r8+0x8]
  40a193:	add    eax,0xa955b
  40a198:	cmp    edx,0x2b
  40a19b:	mov    DWORD PTR [rsp+0x26],eax
  40a19f:	jne    0x40a200
  40a1a1:	movzx  eax,WORD PTR [r8+0xc]
  40a1a6:	lea    rdx,[rsp+0x20]
  40a1ab:	lea    r8,[rdx+0xb]
  40a1af:	mov    WORD PTR [rsp+0x29],ax
  40a1b4:	sub    r8,rdx
  40a1b7:	lea    eax,[r8-0x1]
  40a1bb:	mov    BYTE PTR [rsp+0x20],al
  40a1bf:	call   0x423f10
  40a1c4:	xor    eax,eax
  40a1c6:	add    rsp,0x38
  40a1ca:	ret    
  40a1cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1d0:	lea    rdx,[rsp+0x20]
  40a1d5:	lea    r8,[rdx+0x6]
  40a1d9:	jmp    0x40a1b4
  40a1db:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1e0:	mov    eax,DWORD PTR [r8+0x8]
  40a1e4:	lea    rdx,[rsp+0x20]
  40a1e9:	lea    r8,[rdx+0x4]
  40a1ed:	add    eax,0xa955b
  40a1f2:	mov    DWORD PTR [rsp+0x21],eax
  40a1f6:	jmp    0x40a1b4
  40a1f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a200:	lea    rdx,[rsp+0x20]
  40a205:	lea    r8,[rdx+0x9]
  40a209:	jmp    0x40a1b4
  40a20b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a210:	xor    edx,edx
  40a212:	call   0x4241d0
  40a217:	jmp    0x40a1c4
  40a219:	nop    DWORD PTR [rax+0x0]
  40a220:	push   rsi
  40a221:	push   rbx
  40a222:	sub    rsp,0x28
  40a226:	mov    rbx,rcx
  40a229:	mov    rsi,rdx
  40a22c:	call   0x41bcf0
  40a231:	mov    rcx,rbx
  40a234:	call   0x41bbc0
  40a239:	xor    r9d,r9d
  40a23c:	xor    r8d,r8d
  40a23f:	movzx  edx,al
  40a242:	mov    rcx,rbx
  40a245:	call   0x41bd60
  40a24a:	mov    rcx,rbx
  40a24d:	call   0x41bbc0
  40a252:	xor    r9d,r9d
  40a255:	xor    r8d,r8d
  40a258:	movzx  edx,al
  40a25b:	mov    rcx,rbx
  40a25e:	call   0x41bd60
  40a263:	mov    rcx,rbx
  40a266:	call   0x41bbc0
  40a26b:	xor    r9d,r9d
  40a26e:	xor    r8d,r8d
  40a271:	movzx  edx,al
  40a274:	mov    rcx,rbx
  40a277:	call   0x41bd60
  40a27c:	mov    rcx,rbx
  40a27f:	call   0x41bcf0
  40a284:	xor    r9d,r9d
  40a287:	movzx  edx,ax
  40a28a:	xor    r8d,r8d
  40a28d:	mov    rcx,rbx
  40a290:	call   0x41bd60
  40a295:	xor    eax,eax
  40a297:	mov    DWORD PTR [rsi+0x10],0x7fffffff
  40a29e:	add    rsp,0x28
  40a2a2:	pop    rbx
  40a2a3:	pop    rsi
  40a2a4:	ret    
  40a2a5:	nop
  40a2a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a2b0:	mov    eax,0x28
  40a2b5:	ret    
  40a2b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a2c0:	push   rbx
  40a2c1:	sub    rsp,0x20
  40a2c5:	xor    edx,edx
  40a2c7:	mov    rbx,rcx
  40a2ca:	call   0x4241d0
  40a2cf:	xor    edx,edx
  40a2d1:	mov    rcx,rbx
  40a2d4:	call   0x4241d0
  40a2d9:	xor    edx,edx
  40a2db:	mov    rcx,rbx
  40a2de:	call   0x4241d0
  40a2e3:	xor    eax,eax
  40a2e5:	add    rsp,0x20
  40a2e9:	pop    rbx
  40a2ea:	ret    
  40a2eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a2f0:	push   rsi
  40a2f1:	push   rbx
  40a2f2:	sub    rsp,0x28
  40a2f6:	mov    rsi,rcx
  40a2f9:	mov    BYTE PTR [rdx+0x19],0x6
  40a2fd:	mov    BYTE PTR [rdx+0x1a],0x6
  40a301:	mov    rbx,rdx
  40a304:	call   0x41bbc0
  40a309:	mov    rcx,rsi
  40a30c:	call   0x41bbc0
  40a311:	xor    eax,eax
  40a313:	mov    DWORD PTR [rbx+0x10],0x8
  40a31a:	mov    DWORD PTR [rbx+0x20],0x8
  40a321:	add    rsp,0x28
  40a325:	pop    rbx
  40a326:	pop    rsi
  40a327:	ret    
  40a328:	nop    DWORD PTR [rax+rax*1+0x0]
  40a330:	mov    eax,0x8
  40a335:	ret    
  40a336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a340:	push   rdi
  40a341:	push   rsi
  40a342:	push   rbx
  40a343:	sub    rsp,0x20
  40a347:	mov    rdi,QWORD PTR [rdx+0x48]
  40a34b:	mov    rsi,rcx
  40a34e:	mov    rbx,rdx
  40a351:	call   0x41bbc0
  40a356:	test   al,al
  40a358:	jne    0x40a370
  40a35a:	xor    eax,eax
  40a35c:	mov    DWORD PTR [rbx+0x64],0xffffffff
  40a363:	add    rsp,0x20
  40a367:	pop    rbx
  40a368:	pop    rsi
  40a369:	pop    rdi
  40a36a:	ret    
  40a36b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a370:	mov    DWORD PTR [rbx+0x64],0x8
  40a377:	mov    rcx,rsi
  40a37a:	call   0x41bd30
  40a37f:	mov    QWORD PTR [rdi],rax
  40a382:	xor    eax,eax
  40a384:	add    rsp,0x20
  40a388:	pop    rbx
  40a389:	pop    rsi
  40a38a:	pop    rdi
  40a38b:	ret    
  40a38c:	nop    DWORD PTR [rax+0x0]
  40a390:	push   rbx
  40a391:	sub    rsp,0x20
  40a395:	mov    edx,0x8
  40a39a:	mov    rbx,rcx
  40a39d:	call   0x4241d0
  40a3a2:	mov    edx,0x6
  40a3a7:	mov    rcx,rbx
  40a3aa:	call   0x4241d0
  40a3af:	xor    eax,eax
  40a3b1:	add    rsp,0x20
  40a3b5:	pop    rbx
  40a3b6:	ret    
  40a3b7:	nop    WORD PTR [rax+rax*1+0x0]
  40a3c0:	mov    eax,0x2
  40a3c5:	ret    
  40a3c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a3d0:	push   rsi
  40a3d1:	push   rbx
  40a3d2:	sub    rsp,0x28
  40a3d6:	mov    eax,DWORD PTR [rdx+0x64]
  40a3d9:	mov    rsi,QWORD PTR [rdx+0x48]
  40a3dd:	mov    rbx,rcx
  40a3e0:	test   eax,eax
  40a3e2:	js     0x40a402
  40a3e4:	mov    edx,0x8
  40a3e9:	call   0x4241d0
  40a3ee:	mov    rdx,QWORD PTR [rsi]
  40a3f1:	mov    rcx,rbx
  40a3f4:	call   0x4240f0
  40a3f9:	xor    eax,eax
  40a3fb:	add    rsp,0x28
  40a3ff:	pop    rbx
  40a400:	pop    rsi
  40a401:	ret    
  40a402:	xor    edx,edx
  40a404:	call   0x4241d0
  40a409:	xor    eax,eax
  40a40b:	add    rsp,0x28
  40a40f:	pop    rbx
  40a410:	pop    rsi
  40a411:	ret    
  40a412:	nop    DWORD PTR [rax+0x0]
  40a416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a420:	xor    eax,eax
  40a422:	sub    ecx,0x24
  40a425:	cmp    ecx,0x9b
  40a42b:	ja     0x40a438
  40a42d:	lea    rax,[rip+0x26ccc]        # 0x431100
  40a434:	movsx  eax,BYTE PTR [rax+rcx*1]
  40a438:	repz ret 
  40a43a:	nop    WORD PTR [rax+rax*1+0x0]
  40a440:	lea    eax,[rdx-0x1f]
  40a443:	cmp    eax,0x5b
  40a446:	ja     0x40a490
  40a448:	lea    r8,[rip+0x26899]        # 0x430ce8
  40a44f:	movsxd rax,DWORD PTR [r8+rax*4]
  40a453:	add    r8,rax
  40a456:	jmp    r8
  40a459:	nop    DWORD PTR [rax+0x0]
  40a460:	cmp    edx,0x33
  40a463:	je     0x40a475
  40a465:	jg     0x40a58d
  40a46b:	cmp    edx,0x2e
  40a46e:	je     0x40a475
  40a470:	cmp    edx,0x31
  40a473:	jne    0x40a4c0
  40a475:	xor    eax,eax
  40a477:	repz ret 
  40a479:	nop    DWORD PTR [rax+0x0]
  40a480:	mov    eax,0x4
  40a485:	ret    
  40a486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a490:	movzx  ecx,WORD PTR [rcx]
  40a493:	cmp    cx,0x6ff
  40a498:	jbe    0x40a4d0
  40a49a:	cmp    edx,0xad
  40a4a0:	je     0x40a540
  40a4a6:	jg     0x40a510
  40a4a8:	xor    eax,eax
  40a4aa:	cmp    edx,0x7f
  40a4ad:	je     0x40a477
  40a4af:	jg     0x40a550
  40a4b5:	sub    edx,0x62
  40a4b8:	cmp    edx,0x1
  40a4bb:	jbe    0x40a480
  40a4bd:	nop    DWORD PTR [rax]
  40a4c0:	mov    eax,0x1
  40a4c5:	ret    
  40a4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a4d0:	cmp    cx,0x500
  40a4d5:	mov    eax,0x1
  40a4da:	jne    0x40a477
  40a4dc:	cmp    edx,0xa3
  40a4e2:	je     0x40a480
  40a4e4:	jle    0x40a460
  40a4ea:	cmp    edx,0xb0
  40a4f0:	je     0x40a475
  40a4f2:	jg     0x40a570
  40a4f4:	cmp    edx,0xae
  40a4fa:	je     0x40a480
  40a4fc:	cmp    edx,0xaf
  40a502:	jne    0x40a4c0
  40a504:	mov    eax,0x5
  40a509:	ret    
  40a50a:	nop    WORD PTR [rax+rax*1+0x0]
  40a510:	cmp    edx,0xef
  40a516:	je     0x40a540
  40a518:	jle    0x40a530
  40a51a:	cmp    edx,0xf1
  40a520:	jg     0x40a4c0
  40a522:	mov    eax,0x8
  40a527:	ret    
  40a528:	nop    DWORD PTR [rax+rax*1+0x0]
  40a530:	cmp    edx,0xaf
  40a536:	je     0x40a540
  40a538:	cmp    edx,0xe7
  40a53e:	jne    0x40a4c0
  40a540:	mov    eax,0x2
  40a545:	ret    
  40a546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a550:	cmp    edx,0xa5
  40a556:	je     0x40a540
  40a558:	cmp    edx,0xa7
  40a55e:	jne    0x40a4c0
  40a564:	jmp    0x40a540
  40a566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a570:	cmp    edx,0xbf
  40a576:	je     0x40a475
  40a57c:	cmp    edx,0xe1
  40a582:	je     0x40a504
  40a588:	jmp    0x40a4c0
  40a58d:	sub    edx,0x40
  40a590:	cmp    edx,0x3
  40a593:	ja     0x40a4c0
  40a599:	jmp    0x40a475
  40a59e:	xchg   ax,ax
  40a5a0:	push   rdi
  40a5a1:	push   rsi
  40a5a2:	push   rbx
  40a5a3:	sub    rsp,0x20
  40a5a7:	mov    rsi,rdx
  40a5aa:	cmp    r8d,0x6a
  40a5ae:	mov    rdi,rcx
  40a5b1:	mov    ebx,r8d
  40a5b4:	mov    DWORD PTR [rsi+0x1c],r8d
  40a5b8:	je     0x40a5dc
  40a5ba:	jle    0x40a650
  40a5c0:	cmp    r8d,0xbc
  40a5c7:	jg     0x40a634
  40a5c9:	cmp    r8d,0xbb
  40a5d0:	jge    0x40a680
  40a5d6:	cmp    r8d,0x6c
  40a5da:	jne    0x40a644
  40a5dc:	mov    rax,QWORD PTR [rip+0x317fd]        # 0x43bde0
  40a5e3:	mov    edx,DWORD PTR [rsi+0x8]
  40a5e6:	mov    ecx,ebx
  40a5e8:	mov    QWORD PTR [rsi],rax
  40a5eb:	call   0x408f60
  40a5f0:	mov    DWORD PTR [rsi+0x64],0xffffffff
  40a5f7:	mov    DWORD PTR [rsi+0x14],eax
  40a5fa:	mov    edx,ebx
  40a5fc:	mov    rcx,rdi
  40a5ff:	call   0x40a440
  40a604:	test   al,al
  40a606:	mov    BYTE PTR [rsi+0x18],al
  40a609:	jne    0x40a62c
  40a60b:	sub    ebx,0x24
  40a60e:	xor    eax,eax
  40a610:	cmp    ebx,0x9b
  40a616:	ja     0x40a623
  40a618:	lea    rax,[rip+0x26ae1]        # 0x431100
  40a61f:	movsx  eax,BYTE PTR [rax+rbx*1]
  40a623:	mov    DWORD PTR [rsi+0x10],eax
  40a626:	mov    DWORD PTR [rsi+0x20],eax
  40a629:	mov    DWORD PTR [rsi+0x64],eax
  40a62c:	add    rsp,0x20
  40a630:	pop    rbx
  40a631:	pop    rsi
  40a632:	pop    rdi
  40a633:	ret    
  40a634:	cmp    r8d,0xf0
  40a63b:	mov    rax,QWORD PTR [rip+0x3172e]        # 0x43bd70
  40a642:	je     0x40a5e3
  40a644:	mov    rax,QWORD PTR [rip+0x31755]        # 0x43bda0
  40a64b:	jmp    0x40a5e3
  40a64d:	nop    DWORD PTR [rax]
  40a650:	cmp    r8d,0x28
  40a654:	jl     0x40a644
  40a656:	cmp    r8d,0x2b
  40a65a:	jle    0x40a690
  40a65c:	cmp    r8d,0x62
  40a660:	jne    0x40a644
  40a662:	cmp    WORD PTR [rcx],0x700
  40a667:	mov    rax,QWORD PTR [rip+0x31732]        # 0x43bda0
  40a66e:	cmovae rax,QWORD PTR [rip+0x317aa]        # 0x43be20
  40a676:	jmp    0x40a5e3
  40a67b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a680:	mov    rax,QWORD PTR [rip+0x31779]        # 0x43be00
  40a687:	jmp    0x40a5e3
  40a68c:	nop    DWORD PTR [rax+0x0]
  40a690:	mov    rax,QWORD PTR [rip+0x31729]        # 0x43bdc0
  40a697:	jmp    0x40a5e3
  40a69c:	nop    DWORD PTR [rax+0x0]
  40a6a0:	push   rdi
  40a6a1:	push   rsi
  40a6a2:	push   rbx
  40a6a3:	sub    rsp,0x20
  40a6a7:	movzx  eax,WORD PTR [rcx]
  40a6aa:	mov    rdi,rcx
  40a6ad:	mov    rsi,rdx
  40a6b0:	mov    ebx,r8d
  40a6b3:	cmp    ax,0x6ff
  40a6b7:	ja     0x40a730
  40a6b9:	cmp    r8d,0x7f
  40a6bd:	jne    0x40a6d0
  40a6bf:	cmp    ax,0x500
  40a6c3:	mov    eax,0xbf
  40a6c8:	cmove  ebx,eax
  40a6cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a6d0:	mov    rdx,rsi
  40a6d3:	mov    r8d,ebx
  40a6d6:	mov    rcx,rdi
  40a6d9:	call   0x40a5a0
  40a6de:	lea    rdx,[rip+0x26adb]        # 0x4311c0
  40a6e5:	mov    eax,ebx
  40a6e7:	movzx  eax,BYTE PTR [rdx+rax*1]
  40a6eb:	test   al,0x8
  40a6ed:	jne    0x40a750
  40a6ef:	sub    ebx,0x22
  40a6f2:	cmp    ebx,0x9a
  40a6f8:	ja     0x40a720
  40a6fa:	lea    rax,[rip+0x26757]        # 0x430e58
  40a701:	movsxd rdx,DWORD PTR [rax+rbx*4]
  40a705:	add    rax,rdx
  40a708:	jmp    rax
  40a70a:	nop    WORD PTR [rax+rax*1+0x0]
  40a710:	mov    BYTE PTR [rsi+0x19],0x6
  40a714:	mov    BYTE PTR [rsi+0x1a],0x6
  40a718:	nop    DWORD PTR [rax+rax*1+0x0]
  40a720:	add    rsp,0x20
  40a724:	pop    rbx
  40a725:	pop    rsi
  40a726:	pop    rdi
  40a727:	ret    
  40a728:	nop    DWORD PTR [rax+rax*1+0x0]
  40a730:	cmp    r8d,0x27
  40a734:	je     0x40a790
  40a736:	jbe    0x40a8a0
  40a73c:	cmp    r8d,0x2d
  40a740:	je     0x40a780
  40a742:	cmp    r8d,0x2f
  40a746:	mov    eax,0xaf
  40a74b:	cmove  ebx,eax
  40a74e:	jmp    0x40a6d0
  40a750:	mov    rdx,QWORD PTR [rdi+0x68]
  40a754:	shr    al,0x5
  40a757:	xor    eax,0x1
  40a75a:	and    eax,0x1
  40a75d:	mov    rax,QWORD PTR [rdx+rax*8]
  40a761:	mov    QWORD PTR [rsi+0x28],rax
  40a765:	mov    eax,DWORD PTR [rdi+0x70]
  40a768:	mov    DWORD PTR [rsi+0x59],eax
  40a76b:	movzx  eax,BYTE PTR [rdi+0x74]
  40a76f:	mov    BYTE PTR [rsi+0x5d],al
  40a772:	jmp    0x40a6ef
  40a777:	nop    WORD PTR [rax+rax*1+0x0]
  40a780:	mov    ebx,0xad
  40a785:	jmp    0x40a6d0
  40a78a:	nop    WORD PTR [rax+rax*1+0x0]
  40a790:	mov    ebx,0xa7
  40a795:	jmp    0x40a6d0
  40a79a:	nop    WORD PTR [rax+rax*1+0x0]
  40a7a0:	cmp    WORD PTR [rdi],0x701
  40a7a5:	jbe    0x40a720
  40a7ab:	mov    BYTE PTR [rsi+0x18],0x8
  40a7af:	mov    DWORD PTR [rsi+0x1c],0xa5
  40a7b6:	jmp    0x40a720
  40a7bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a7c0:	cmp    WORD PTR [rdi],0x701
  40a7c5:	jbe    0x40a720
  40a7cb:	mov    BYTE PTR [rsi+0x18],0x8
  40a7cf:	mov    DWORD PTR [rsi+0x1c],0xa7
  40a7d6:	jmp    0x40a720
  40a7db:	nop    DWORD PTR [rax+rax*1+0x0]
  40a7e0:	mov    DWORD PTR [rsi+0x10],0x10
  40a7e7:	mov    DWORD PTR [rsi+0x20],0x10
  40a7ee:	jmp    0x40a720
  40a7f3:	cmp    WORD PTR [rdi],0x701
  40a7f8:	jbe    0x40a720
  40a7fe:	mov    BYTE PTR [rsi+0x18],0x8
  40a802:	mov    DWORD PTR [rsi+0x1c],0xe7
  40a809:	jmp    0x40a720
  40a80e:	xchg   ax,ax
  40a810:	mov    DWORD PTR [rsi+0x10],0x1
  40a817:	mov    DWORD PTR [rsi+0x20],0x1
  40a81e:	jmp    0x40a720
  40a823:	mov    DWORD PTR [rsi+0x1c],0x26
  40a82a:	mov    BYTE PTR [rsi+0x18],0x1
  40a82e:	mov    DWORD PTR [rsi+0x64],0xffffffff
  40a835:	jmp    0x40a720
  40a83a:	nop    WORD PTR [rax+rax*1+0x0]
  40a840:	mov    DWORD PTR [rsi+0x1c],0x6f
  40a847:	mov    BYTE PTR [rsi+0x18],0x1
  40a84b:	mov    DWORD PTR [rsi+0x64],0xffffffff
  40a852:	jmp    0x40a720
  40a857:	nop    WORD PTR [rax+rax*1+0x0]
  40a860:	mov    DWORD PTR [rsi+0x1c],0x6d
  40a867:	mov    BYTE PTR [rsi+0x18],0x1
  40a86b:	mov    DWORD PTR [rsi+0x64],0xffffffff
  40a872:	jmp    0x40a720
  40a877:	nop    WORD PTR [rax+rax*1+0x0]
  40a880:	mov    DWORD PTR [rsi+0x1c],0x6e
  40a887:	mov    BYTE PTR [rsi+0x18],0x1
  40a88b:	mov    DWORD PTR [rsi+0x64],0xffffffff
  40a892:	jmp    0x40a720
  40a897:	nop    WORD PTR [rax+rax*1+0x0]
  40a8a0:	cmp    r8d,0x25
  40a8a4:	mov    eax,0xa5
  40a8a9:	cmove  ebx,eax
  40a8ac:	jmp    0x40a6d0
  40a8b1:	nop    DWORD PTR [rax+rax*1+0x0]
  40a8b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a8c0:	push   r15
  40a8c2:	push   r14
  40a8c4:	push   r13
  40a8c6:	push   r12
  40a8c8:	push   rbp
  40a8c9:	push   rdi
  40a8ca:	push   rsi
  40a8cb:	push   rbx
  40a8cc:	sub    rsp,0x68
  40a8d0:	mov    rdi,rdx
  40a8d3:	mov    rbx,rcx
  40a8d6:	call   0x41bd10
  40a8db:	cmp    eax,0x1
  40a8de:	mov    esi,eax
  40a8e0:	mov    DWORD PTR [rdi+0x64],0xffffffff
  40a8e7:	jbe    0x40abf0
  40a8ed:	mov    rcx,rbx
  40a8f0:	call   0x41bbc0
  40a8f5:	mov    rcx,rbx
  40a8f8:	movzx  r12d,al
  40a8fc:	call   0x41bbc0
  40a901:	mov    r13d,eax
  40a904:	lea    rax,[rip+0x268b5]        # 0x4311c0
  40a90b:	movsxd rdx,r12d
  40a90e:	mov    r15d,r12d
  40a911:	cmp    BYTE PTR [rax+rdx*1],0x0
  40a915:	je     0x40aa48
  40a91b:	mov    rbp,QWORD PTR [rdi+0x48]
  40a91f:	lea    r14d,[rsi-0x2]
  40a923:	movzx  r8d,r13b
  40a927:	cmp    r14d,r8d
  40a92a:	mov    DWORD PTR [rbp+0x10],r12d
  40a92e:	jb     0x40aa45
  40a934:	mov    edx,r12d
  40a937:	movzx  r10d,BYTE PTR [rax+rdx*1]
  40a93c:	test   r10b,0x8
  40a940:	je     0x40a98e
  40a942:	cmp    r13b,0x4
  40a946:	mov    BYTE PTR [rsp+0x34],r10b
  40a94b:	jbe    0x40aa45
  40a951:	lea    rax,[rbp+0x14]
  40a955:	mov    r8d,0x5
  40a95b:	mov    rcx,rbx
  40a95e:	sub    r13d,0x5
  40a962:	lea    r14d,[rsi-0x7]
  40a966:	mov    rdx,rax
  40a969:	mov    QWORD PTR [rsp+0x38],rax
  40a96e:	call   0x41bc50
  40a973:	movzx  r10d,BYTE PTR [rsp+0x34]
  40a979:	and    r10d,0x20
  40a97d:	je     0x40ac04
  40a983:	mov    rax,QWORD PTR [rbx+0x68]
  40a987:	mov    rax,QWORD PTR [rax]
  40a98a:	mov    QWORD PTR [rdi+0x28],rax
  40a98e:	lea    eax,[r15-0x6a]
  40a992:	test   al,0xfd
  40a994:	jne    0x40aa70
  40a99a:	cmp    r13b,0x2
  40a99e:	jne    0x40aa45
  40a9a4:	mov    rcx,QWORD PTR [rbp+0x0]
  40a9a8:	test   rcx,rcx
  40a9ab:	je     0x40a9b2
  40a9ad:	call   0x42d6f8
  40a9b2:	mov    edx,0x23
  40a9b7:	mov    ecx,0x1
  40a9bc:	mov    DWORD PTR [rbp+0xc],0x23
  40a9c3:	call   0x42d740
  40a9c8:	mov    rcx,rbx
  40a9cb:	mov    r12,rax
  40a9ce:	mov    QWORD PTR [rbp+0x0],rax
  40a9d2:	call   0x41bbc0
  40a9d7:	mov    rcx,rbx
  40a9da:	mov    BYTE PTR [r12],al
  40a9de:	lea    esi,[r14-0x2]
  40a9e2:	call   0x41bbc0
  40a9e7:	movzx  edx,BYTE PTR [r12]
  40a9ec:	cmp    esi,0x21
  40a9ef:	mov    BYTE PTR [r12+0x1],al
  40a9f4:	seta   r8b
  40a9f8:	lea    ecx,[rdx-0x1]
  40a9fb:	cmp    cl,0x4c
  40a9fe:	seta   cl
  40aa01:	or     r8b,cl
  40aa04:	jne    0x40aa48
  40aa06:	cmp    al,dl
  40aa08:	ja     0x40aa48
  40aa0a:	lea    rdx,[r12+0x2]
  40aa0f:	mov    DWORD PTR [rdi+0x64],esi
  40aa12:	mov    r8d,esi
  40aa15:	mov    rcx,rbx
  40aa18:	call   0x41bc50
  40aa1d:	xor    eax,eax
  40aa1f:	cmp    WORD PTR [rbx],0x6ff
  40aa24:	jbe    0x40aa5a
  40aa26:	mov    rcx,r12
  40aa29:	mov    DWORD PTR [rsp+0x34],eax
  40aa2d:	call   0x408ea0
  40aa32:	mov    eax,DWORD PTR [rsp+0x34]
  40aa36:	jmp    0x40aa5a
  40aa38:	nop    DWORD PTR [rax+rax*1+0x0]
  40aa40:	test   r13b,r13b
  40aa43:	je     0x40aaa2
  40aa45:	mov    esi,r14d
  40aa48:	mov    r8d,esi
  40aa4b:	xor    edx,edx
  40aa4d:	mov    rcx,rbx
  40aa50:	call   0x41bc50
  40aa55:	mov    eax,0xffffffff
  40aa5a:	add    rsp,0x68
  40aa5e:	pop    rbx
  40aa5f:	pop    rsi
  40aa60:	pop    rdi
  40aa61:	pop    rbp
  40aa62:	pop    r12
  40aa64:	pop    r13
  40aa66:	pop    r14
  40aa68:	pop    r15
  40aa6a:	ret    
  40aa6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40aa70:	cmp    r15b,0x28
  40aa74:	je     0x40aa40
  40aa76:	jb     0x40ab10
  40aa7c:	cmp    r15b,0x2b
  40aa80:	ja     0x40ab10
  40aa86:	cmp    r13b,0x1
  40aa8a:	jne    0x40aa45
  40aa8c:	mov    rcx,rbx
  40aa8f:	call   0x41bbc0
  40aa94:	cmp    al,0x7
  40aa96:	mov    BYTE PTR [rdi+0x19],al
  40aa99:	mov    BYTE PTR [rdi+0x1a],al
  40aa9c:	ja     0x40aa45
  40aa9e:	sub    r14d,0x1
  40aaa2:	mov    eax,DWORD PTR [rbx+0xe4]
  40aaa8:	mov    rdx,QWORD PTR [rbx+0xd0]
  40aaaf:	sub    eax,0x1
  40aab2:	mov    DWORD PTR [rbx+0xe4],eax
  40aab8:	mov    BYTE PTR [rdx+rax*1],r14b
  40aabc:	mov    rcx,QWORD PTR [rbp+0x0]
  40aac0:	test   rcx,rcx
  40aac3:	je     0x40aaca
  40aac5:	call   0x42d6f8
  40aaca:	mov    edx,0x1
  40aacf:	mov    ecx,0x10
  40aad4:	mov    DWORD PTR [rbp+0xc],0x10
  40aadb:	call   0x42d740
  40aae0:	mov    rdx,rdi
  40aae3:	mov    QWORD PTR [rbp+0x0],rax
  40aae7:	mov    rcx,rbx
  40aaea:	mov    DWORD PTR [rdi+0x14],r12d
  40aaee:	mov    QWORD PTR [rdi+0x48],rax
  40aaf2:	call   0x409fe0
  40aaf7:	mov    DWORD PTR [rdi+0x14],0x62
  40aafe:	mov    QWORD PTR [rdi+0x48],rbp
  40ab02:	jmp    0x40aa5a
  40ab07:	nop    WORD PTR [rax+rax*1+0x0]
  40ab10:	cmp    r12d,0x24
  40ab14:	je     0x40ac40
  40ab1a:	mov    edx,r12d
  40ab1d:	mov    rcx,rbx
  40ab20:	call   0x40a440
  40ab25:	movzx  r8d,r13b
  40ab29:	cmp    eax,r8d
  40ab2c:	jne    0x40aa45
  40ab32:	cmp    eax,0x2
  40ab35:	jg     0x40aa45
  40ab3b:	cmp    eax,0x1
  40ab3e:	je     0x40ac20
  40ab44:	cmp    eax,0x2
  40ab47:	je     0x40ac70
  40ab4d:	lea    eax,[r12-0x24]
  40ab52:	cmp    eax,0x9b
  40ab57:	jbe    0x40ac4e
  40ab5d:	xor    eax,eax
  40ab5f:	nop
  40ab60:	mov    DWORD PTR [rbp+0x8],eax
  40ab63:	mov    rcx,QWORD PTR [rbp+0x0]
  40ab67:	sub    r14d,r8d
  40ab6a:	mov    DWORD PTR [rdi+0x64],r14d
  40ab6e:	test   rcx,rcx
  40ab71:	je     0x40ab80
  40ab73:	call   0x42d6f8
  40ab78:	mov    QWORD PTR [rbp+0x0],0x0
  40ab80:	test   r14d,r14d
  40ab83:	je     0x40ac60
  40ab89:	test   BYTE PTR [rbx+0xa0],0x2
  40ab90:	je     0x40aba6
  40ab92:	cmp    QWORD PTR [rdi+0x28],0x0
  40ab97:	je     0x40aba6
  40ab99:	xor    edx,edx
  40ab9b:	mov    ecx,r12d
  40ab9e:	call   0x408f60
  40aba3:	mov    DWORD PTR [rbp+0x10],eax
  40aba6:	lea    rsi,[rsp+0x40]
  40abab:	mov    r8,r14
  40abae:	mov    rdx,rbx
  40abb1:	mov    rcx,rsi
  40abb4:	call   0x41d4a0
  40abb9:	lea    rdx,[rdi+0x28]
  40abbd:	lea    r8,[rdi+0x64]
  40abc1:	mov    QWORD PTR [rsp+0x28],rsi
  40abc6:	mov    QWORD PTR [rsp+0x20],r14
  40abcb:	mov    r9,rbp
  40abce:	mov    rcx,rbx
  40abd1:	call   0x408ed0
  40abd6:	test   eax,eax
  40abd8:	js     0x40aa5a
  40abde:	mov    eax,DWORD PTR [rdi+0x64]
  40abe1:	mov    DWORD PTR [rbp+0xc],eax
  40abe4:	xor    eax,eax
  40abe6:	jmp    0x40aa5a
  40abeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40abf0:	mov    r8d,eax
  40abf3:	xor    edx,edx
  40abf5:	mov    rcx,rbx
  40abf8:	call   0x41bc50
  40abfd:	xor    eax,eax
  40abff:	jmp    0x40aa5a
  40ac04:	mov    rdx,QWORD PTR [rsp+0x38]
  40ac09:	mov    rcx,rbx
  40ac0c:	call   0x40cc90
  40ac11:	jmp    0x40a98a
  40ac16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ac20:	mov    rcx,rbx
  40ac23:	mov    DWORD PTR [rsp+0x34],r8d
  40ac28:	call   0x41bbc0
  40ac2d:	movzx  eax,al
  40ac30:	mov    r8d,DWORD PTR [rsp+0x34]
  40ac35:	mov    DWORD PTR [rbp+0x8],eax
  40ac38:	jmp    0x40ab63
  40ac3d:	nop    DWORD PTR [rax]
  40ac40:	test   r13b,r13b
  40ac43:	jne    0x40aa45
  40ac49:	xor    eax,eax
  40ac4b:	xor    r8d,r8d
  40ac4e:	lea    rdx,[rip+0x264ab]        # 0x431100
  40ac55:	movsx  eax,BYTE PTR [rdx+rax*1]
  40ac59:	jmp    0x40ab60
  40ac5e:	xchg   ax,ax
  40ac60:	xor    eax,eax
  40ac62:	jmp    0x40abe1
  40ac67:	nop    WORD PTR [rax+rax*1+0x0]
  40ac70:	mov    rcx,rbx
  40ac73:	mov    DWORD PTR [rsp+0x34],r8d
  40ac78:	call   0x41bcf0
  40ac7d:	cwde   
  40ac7e:	mov    r8d,DWORD PTR [rsp+0x34]
  40ac83:	mov    DWORD PTR [rbp+0x8],eax
  40ac86:	jmp    0x40ab63
  40ac8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac90:	cmp    ecx,0x6e
  40ac93:	je     0x40ad70
  40ac99:	jbe    0x40acc2
  40ac9b:	cmp    ecx,0x7b
  40ac9e:	mov    eax,0x31
  40aca3:	je     0x40acc0
  40aca5:	jbe    0x40acf3
  40aca7:	cmp    ecx,0x93
  40acad:	mov    eax,0x33
  40acb2:	je     0x40acc0
  40acb4:	cmp    ecx,0xbf
  40acba:	mov    al,0x7f
  40acbc:	jne    0x40acf0
  40acbe:	xchg   ax,ax
  40acc0:	repz ret 
  40acc2:	cmp    ecx,0x44
  40acc5:	je     0x40ad40
  40acc7:	jbe    0x40ad10
  40acc9:	cmp    ecx,0x68
  40accc:	mov    eax,0x32
  40acd1:	je     0x40acc0
  40acd3:	cmp    ecx,0x6d
  40acd6:	jne    0x40acf0
  40acd8:	cmp    edx,0x4
  40acdb:	mov    eax,0x3b
  40ace0:	je     0x40acc0
  40ace2:	cmp    edx,0x8
  40ace5:	mov    al,0x3e
  40ace7:	cmovne eax,ecx
  40acea:	ret    
  40aceb:	nop    DWORD PTR [rax+rax*1+0x0]
  40acf0:	mov    eax,ecx
  40acf2:	ret    
  40acf3:	cmp    ecx,0x6f
  40acf6:	jne    0x40acf0
  40acf8:	cmp    edx,0x4
  40acfb:	mov    eax,0x3a
  40ad00:	je     0x40acc0
  40ad02:	cmp    edx,0x8
  40ad05:	mov    al,0x3d
  40ad07:	cmovne eax,ecx
  40ad0a:	ret    
  40ad0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad10:	cmp    ecx,0x26
  40ad13:	jne    0x40acf0
  40ad15:	cmp    edx,0x2
  40ad18:	je     0x40adc0
  40ad1e:	jle    0x40ada0
  40ad24:	cmp    edx,0x4
  40ad27:	mov    eax,0x38
  40ad2c:	je     0x40acc0
  40ad2e:	cmp    edx,0x8
  40ad31:	mov    al,0x7f
  40ad33:	je     0x40acc0
  40ad35:	mov    eax,0x26
  40ad3a:	ret    
  40ad3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad40:	cmp    edx,0x2
  40ad43:	je     0x40adb0
  40ad45:	jle    0x40ad90
  40ad47:	cmp    edx,0x4
  40ad4a:	mov    eax,0x42
  40ad4f:	je     0x40acc0
  40ad55:	cmp    edx,0x8
  40ad58:	mov    al,0x43
  40ad5a:	je     0x40acc0
  40ad60:	mov    eax,0x44
  40ad65:	ret    
  40ad66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad70:	cmp    edx,0x4
  40ad73:	mov    eax,0x7a
  40ad78:	je     0x40acc0
  40ad7e:	cmp    edx,0x8
  40ad81:	mov    al,0x3c
  40ad83:	cmovne eax,ecx
  40ad86:	ret    
  40ad87:	nop    WORD PTR [rax+rax*1+0x0]
  40ad90:	cmp    edx,0x1
  40ad93:	mov    eax,0x40
  40ad98:	jne    0x40ad60
  40ad9a:	repz ret 
  40ad9c:	nop    DWORD PTR [rax+0x0]
  40ada0:	cmp    edx,0x1
  40ada3:	mov    eax,0x30
  40ada8:	jne    0x40ad35
  40adaa:	repz ret 
  40adac:	nop    DWORD PTR [rax+0x0]
  40adb0:	mov    eax,0x41
  40adb5:	ret    
  40adb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40adc0:	mov    eax,0x34
  40adc5:	ret    
  40adc6:	nop
  40adc7:	nop
  40adc8:	nop
  40adc9:	nop
  40adca:	nop
  40adcb:	nop
  40adcc:	nop
  40adcd:	nop
  40adce:	nop
  40adcf:	nop
  40add0:	push   rsi
  40add1:	push   rbx
  40add2:	sub    rsp,0x28
  40add6:	mov    eax,0xffffffff
  40addb:	mov    rsi,rdx
  40adde:	mov    rdx,QWORD PTR [rcx]
  40ade1:	test   rdx,rdx
  40ade4:	je     0x40ae0b
  40ade6:	mov    rbx,rcx
  40ade9:	jmp    0x40adfc
  40adeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40adf0:	add    rbx,0x10
  40adf4:	mov    rdx,QWORD PTR [rbx]
  40adf7:	test   rdx,rdx
  40adfa:	je     0x40ae12
  40adfc:	mov    rcx,rsi
  40adff:	call   0x42d630
  40ae04:	test   eax,eax
  40ae06:	jne    0x40adf0
  40ae08:	mov    eax,DWORD PTR [rbx+0x8]
  40ae0b:	add    rsp,0x28
  40ae0f:	pop    rbx
  40ae10:	pop    rsi
  40ae11:	ret    
  40ae12:	mov    eax,0xffffffff
  40ae17:	add    rsp,0x28
  40ae1b:	pop    rbx
  40ae1c:	pop    rsi
  40ae1d:	ret    
  40ae1e:	xchg   ax,ax
  40ae20:	push   rbx
  40ae21:	sub    rsp,0x20
  40ae25:	mov    rbx,rcx
  40ae28:	mov    rcx,QWORD PTR [rcx+0x10]
  40ae2c:	cmp    rcx,0xffffffffffffffff
  40ae30:	je     0x40ae3f
  40ae32:	call   0x42b048
  40ae37:	mov    QWORD PTR [rbx+0x10],0xffffffffffffffff
  40ae3f:	mov    rcx,QWORD PTR [rbx+0x28]
  40ae43:	cmp    rcx,0xffffffffffffffff
  40ae47:	je     0x40ae56
  40ae49:	call   0x42b048
  40ae4e:	mov    QWORD PTR [rbx+0x28],0xffffffffffffffff
  40ae56:	add    rsp,0x20
  40ae5a:	pop    rbx
  40ae5b:	ret    
  40ae5c:	nop    DWORD PTR [rax+0x0]
  40ae60:	sub    ecx,0x1e
  40ae63:	cmp    ecx,0x7c
  40ae66:	ja     0x40af50
  40ae6c:	lea    rax,[rip+0x2644d]        # 0x4312c0
  40ae73:	movsxd rcx,DWORD PTR [rax+rcx*4]
  40ae77:	add    rax,rcx
  40ae7a:	jmp    rax
  40ae7c:	nop    DWORD PTR [rax+0x0]
  40ae80:	mov    eax,0x14
  40ae85:	ret    
  40ae86:	cmp    edx,0x405
  40ae8c:	jne    0x40afd0
  40ae92:	mov    eax,0xd
  40ae97:	repz ret 
  40ae99:	cmp    edx,0x440
  40ae9f:	jle    0x40b3ba
  40aea5:	cmp    edx,0x442
  40aeab:	je     0x40ae92
  40aead:	jl     0x40afd0
  40aeb3:	cmp    edx,0x443
  40aeb9:	je     0x40b161
  40aebf:	cmp    edx,0x444
  40aec5:	jne    0x40afd0
  40aecb:	nop    DWORD PTR [rax+rax*1+0x0]
  40aed0:	mov    eax,0xe
  40aed5:	ret    
  40aed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aee0:	mov    eax,0x10
  40aee5:	ret    
  40aee6:	cmp    edx,0x40c
  40aeec:	jle    0x40afd0
  40aef2:	mov    eax,0x12
  40aef7:	ret    
  40aef8:	cmp    edx,0x2809
  40aefe:	jl     0x40afd0
  40af04:	cmp    edx,0x280a
  40af0a:	jle    0x40afd0
  40af10:	cmp    edx,0x2c01
  40af16:	jne    0x40afd0
  40af1c:	nop    DWORD PTR [rax+0x0]
  40af20:	mov    eax,0x13
  40af25:	ret    
  40af26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40af30:	mov    eax,0x17
  40af35:	ret    
  40af36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40af40:	mov    eax,0x18
  40af45:	ret    
  40af46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40af50:	movzx  edx,dx
  40af53:	cmp    edx,0x80c
  40af59:	je     0x40afd0
  40af5b:	jg     0x40b014
  40af61:	cmp    edx,0x427
  40af67:	jg     0x40b090
  40af6d:	cmp    edx,0x425
  40af73:	jge    0x40ae80
  40af79:	cmp    edx,0x414
  40af7f:	jg     0x40afe0
  40af81:	cmp    edx,0x413
  40af87:	jge    0x40afd0
  40af89:	cmp    edx,0x408
  40af8f:	je     0x40aee0
  40af95:	jle    0x40b1b0
  40af9b:	cmp    edx,0x40e
  40afa1:	je     0x40ae92
  40afa7:	jle    0x40aee6
  40afad:	cmp    edx,0x411
  40afb3:	mov    eax,0x1c
  40afb8:	je     0x40ae97
  40afbe:	mov    al,0x1e
  40afc0:	jg     0x40ae97
  40afc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40afd0:	mov    eax,0xf
  40afd5:	ret    
  40afd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40afe0:	cmp    edx,0x41d
  40afe6:	je     0x40afd0
  40afe8:	jle    0x40b291
  40afee:	cmp    edx,0x421
  40aff4:	je     0x40afd0
  40aff6:	jg     0x40b312
  40affc:	cmp    edx,0x41f
  40b002:	je     0x40b161
  40b008:	jg     0x40af20
  40b00e:	mov    eax,0x1b
  40b013:	ret    
  40b014:	cmp    edx,0x180a
  40b01a:	jg     0x40b114
  40b020:	cmp    edx,0x1809
  40b026:	jge    0x40afd0
  40b028:	cmp    edx,0xc0a
  40b02e:	jg     0x40b0f0
  40b034:	cmp    edx,0xc09
  40b03a:	jge    0x40afd0
  40b03c:	cmp    edx,0x82c
  40b042:	je     0x40aed0
  40b048:	jg     0x40b224
  40b04e:	cmp    edx,0x816
  40b054:	je     0x40afd0
  40b05a:	jle    0x40afd0
  40b060:	cmp    edx,0x81d
  40b066:	je     0x40afd0
  40b06c:	cmp    edx,0x827
  40b072:	je     0x40ae80
  40b078:	cmp    edx,0x81a
  40b07e:	jne    0x40afd0
  40b084:	jmp    0x40aed0
  40b089:	nop    DWORD PTR [rax+0x0]
  40b090:	cmp    edx,0x450
  40b096:	je     0x40aed0
  40b09c:	jg     0x40b167
  40b0a2:	cmp    edx,0x438
  40b0a8:	jg     0x40ae99
  40b0ae:	cmp    edx,0x436
  40b0b4:	jge    0x40afd0
  40b0ba:	cmp    edx,0x42c
  40b0c0:	je     0x40b161
  40b0c6:	jg     0x40b3cb
  40b0cc:	cmp    edx,0x429
  40b0d2:	je     0x40af20
  40b0d8:	cmp    edx,0x42a
  40b0de:	mov    eax,0x15
  40b0e3:	jne    0x40afd0
  40b0e9:	repz ret 
  40b0eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b0f0:	cmp    edx,0x104e
  40b0f6:	je     0x40ae92
  40b0fc:	jg     0x40b1e7
  40b102:	cmp    edx,0x1004
  40b108:	jne    0x40b2b4
  40b10e:	mov    eax,0x1d
  40b113:	ret    
  40b114:	cmp    edx,0x2c0a
  40b11a:	jg     0x40b260
  40b120:	cmp    edx,0x2c09
  40b126:	jge    0x40afd0
  40b12c:	cmp    edx,0x201a
  40b132:	je     0x40afd0
  40b138:	jle    0x40b340
  40b13e:	cmp    edx,0x2801
  40b144:	je     0x40af20
  40b14a:	jg     0x40aef8
  40b150:	cmp    edx,0x2401
  40b156:	je     0x40af20
  40b15c:	jmp    0x40afd0
  40b161:	mov    eax,0x11
  40b166:	ret    
  40b167:	cmp    edx,0x480
  40b16d:	je     0x40af20
  40b173:	jle    0x40b375
  40b179:	cmp    edx,0x801
  40b17f:	je     0x40af20
  40b185:	jle    0x40b3e8
  40b18b:	cmp    edx,0x807
  40b191:	je     0x40afd0
  40b197:	jg     0x40afd0
  40b19d:	cmp    edx,0x804
  40b1a3:	je     0x40b10e
  40b1a9:	jmp    0x40afd0
  40b1ae:	xchg   ax,ax
  40b1b0:	cmp    edx,0x404
  40b1b6:	je     0x40b1e1
  40b1b8:	jg     0x40ae86
  40b1be:	cmp    edx,0x402
  40b1c4:	je     0x40aed0
  40b1ca:	jg     0x40afd0
  40b1d0:	cmp    edx,0x401
  40b1d6:	je     0x40af20
  40b1dc:	jmp    0x40afd0
  40b1e1:	mov    eax,0x1f
  40b1e6:	ret    
  40b1e7:	cmp    edx,0x140a
  40b1ed:	jg     0x40b323
  40b1f3:	cmp    edx,0x1409
  40b1f9:	jge    0x40afd0
  40b1ff:	cmp    edx,0x1404
  40b205:	je     0x40b1e1
  40b207:	cmp    edx,0x1407
  40b20d:	je     0x40afd0
  40b213:	cmp    edx,0x1401
  40b219:	je     0x40af20
  40b21f:	jmp    0x40afd0
  40b224:	cmp    edx,0x85f
  40b22a:	je     0x40afd0
  40b230:	jle    0x40b38c
  40b236:	cmp    edx,0xc04
  40b23c:	je     0x40b1e1
  40b23e:	cmp    edx,0xc07
  40b244:	je     0x40afd0
  40b24a:	cmp    edx,0xc01
  40b250:	je     0x40af20
  40b256:	jmp    0x40afd0
  40b25b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b260:	cmp    edx,0x380a
  40b266:	je     0x40afd0
  40b26c:	jg     0x40b2d7
  40b26e:	cmp    edx,0x3401
  40b274:	je     0x40af20
  40b27a:	jg     0x40b41b
  40b280:	cmp    edx,0x3001
  40b286:	je     0x40af20
  40b28c:	jmp    0x40afd0
  40b291:	cmp    edx,0x418
  40b297:	je     0x40ae92
  40b29d:	jle    0x40b3a9
  40b2a3:	cmp    edx,0x419
  40b2a9:	jne    0x40ae92
  40b2af:	jmp    0x40aed0
  40b2b4:	jg     0x40afd0
  40b2ba:	cmp    edx,0xc1a
  40b2c0:	je     0x40aed0
  40b2c6:	cmp    edx,0x1001
  40b2cc:	je     0x40af20
  40b2d2:	jmp    0x40afd0
  40b2d7:	cmp    edx,0x400a
  40b2dd:	je     0x40afd0
  40b2e3:	jg     0x40b405
  40b2e9:	cmp    edx,0x3c0a
  40b2ef:	je     0x40afd0
  40b2f5:	cmp    edx,0x4001
  40b2fb:	je     0x40af20
  40b301:	cmp    edx,0x3c01
  40b307:	jne    0x40afd0
  40b30d:	jmp    0x40af20
  40b312:	cmp    edx,0x423
  40b318:	jg     0x40ae92
  40b31e:	jmp    0x40aed0
  40b323:	cmp    edx,0x141a
  40b329:	je     0x40ae92
  40b32f:	cmp    edx,0x1801
  40b335:	je     0x40af20
  40b33b:	jmp    0x40afd0
  40b340:	cmp    edx,0x1c0a
  40b346:	jg     0x40b40a
  40b34c:	cmp    edx,0x1c09
  40b352:	jge    0x40afd0
  40b358:	cmp    edx,0x180c
  40b35e:	je     0x40afd0
  40b364:	cmp    edx,0x1c01
  40b36a:	je     0x40af20
  40b370:	jmp    0x40afd0
  40b375:	cmp    edx,0x46d
  40b37b:	je     0x40afd0
  40b381:	jg     0x40b444
  40b387:	jmp    0x40afd0
  40b38c:	cmp    edx,0x83e
  40b392:	je     0x40afd0
  40b398:	cmp    edx,0x843
  40b39e:	je     0x40aed0
  40b3a4:	jmp    0x40afd0
  40b3a9:	cmp    edx,0x415
  40b3af:	je     0x40ae92
  40b3b5:	jmp    0x40afd0
  40b3ba:	cmp    edx,0x43f
  40b3c0:	jl     0x40afd0
  40b3c6:	jmp    0x40aed0
  40b3cb:	cmp    edx,0x42e
  40b3d1:	jle    0x40afd0
  40b3d7:	cmp    edx,0x42f
  40b3dd:	je     0x40aed0
  40b3e3:	jmp    0x40afd0
  40b3e8:	cmp    edx,0x485
  40b3ee:	je     0x40afd0
  40b3f4:	cmp    edx,0x48c
  40b3fa:	je     0x40af20
  40b400:	jmp    0x40afd0
  40b405:	jmp    0x40afd0
  40b40a:	cmp    edx,0x2001
  40b410:	je     0x40af20
  40b416:	jmp    0x40afd0
  40b41b:	cmp    edx,0x3409
  40b421:	jl     0x40afd0
  40b427:	cmp    edx,0x340a
  40b42d:	jle    0x40afd0
  40b433:	cmp    edx,0x3801
  40b439:	je     0x40af20
  40b43f:	jmp    0x40afd0
  40b444:	jmp    0x40afd0
  40b449:	nop    DWORD PTR [rax+0x0]
  40b450:	push   rbx
  40b451:	sub    rsp,0x20
  40b455:	mov    rdx,rcx
  40b458:	mov    rbx,rcx
  40b45b:	lea    rcx,[rip+0x275de]        # 0x432a40
  40b462:	call   0x40add0
  40b467:	test   eax,eax
  40b469:	js     0x40b471
  40b46b:	add    rsp,0x20
  40b46f:	pop    rbx
  40b470:	ret    
  40b471:	lea    rcx,[rip+0x26588]        # 0x431a00
  40b478:	mov    rdx,rbx
  40b47b:	add    rsp,0x20
  40b47f:	pop    rbx
  40b480:	jmp    0x40add0
  40b485:	nop
  40b486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b490:	push   r13
  40b492:	push   r12
  40b494:	push   rbp
  40b495:	push   rdi
  40b496:	push   rsi
  40b497:	push   rbx
  40b498:	sub    rsp,0x28
  40b49c:	mov    eax,DWORD PTR [rip+0x35be6]        # 0x441088
  40b4a2:	mov    edi,ecx
  40b4a4:	test   eax,eax
  40b4a6:	je     0x40b500
  40b4a8:	movsxd rbp,edi
  40b4ab:	lea    rdx,[rip+0x28d0e]        # 0x4341c0
  40b4b2:	mov    rcx,QWORD PTR [rip+0x35c0f]        # 0x4410c8
  40b4b9:	mov    rax,rbp
  40b4bc:	lea    r12,[rip+0x35bfd]        # 0x4410c0
  40b4c3:	shl    rax,0x4
  40b4c7:	mov    rbx,QWORD PTR [rdx+rax*1]
  40b4cb:	mov    rdx,rbx
  40b4ce:	call   0x42b040
  40b4d3:	cmp    rax,0xffffffffffffffff
  40b4d7:	je     0x40b520
  40b4d9:	mov    rcx,rax
  40b4dc:	mov    QWORD PTR [r12+rbp*8],rbx
  40b4e0:	call   0x42b048
  40b4e5:	mov    rsi,QWORD PTR [r12+rbp*8]
  40b4e9:	mov    rax,rsi
  40b4ec:	add    rsp,0x28
  40b4f0:	pop    rbx
  40b4f1:	pop    rsi
  40b4f2:	pop    rdi
  40b4f3:	pop    rbp
  40b4f4:	pop    r12
  40b4f6:	pop    r13
  40b4f8:	ret    
  40b4f9:	nop    DWORD PTR [rax+0x0]
  40b500:	lea    rdx,[rip+0x25fb1]        # 0x4314b8
  40b507:	lea    rcx,[rip+0x25fb2]        # 0x4314c0
  40b50e:	mov    r8d,0xc9
  40b514:	call   0x42d350
  40b519:	jmp    0x40b4a8
  40b51b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b520:	mov    rcx,QWORD PTR [rip+0x35b59]        # 0x441080
  40b527:	mov    rdx,rbx
  40b52a:	call   0x42b040
  40b52f:	cmp    rax,0xffffffffffffffff
  40b533:	jne    0x40b4d9
  40b535:	lea    rbx,[rip+0x2750c]        # 0x432a48
  40b53c:	lea    rsi,[rip+0x25f71]        # 0x4314b4
  40b543:	jmp    0x40b552
  40b545:	add    rbx,0x10
  40b549:	mov    rsi,QWORD PTR [rbx-0x8]
  40b54d:	test   rsi,rsi
  40b550:	je     0x40b5a0
  40b552:	cmp    edi,DWORD PTR [rbx]
  40b554:	jne    0x40b545
  40b556:	mov    rcx,QWORD PTR [rip+0x35b6b]        # 0x4410c8
  40b55d:	mov    rdx,rsi
  40b560:	lea    r13,[rip+0x35b59]        # 0x4410c0
  40b567:	call   0x42b040
  40b56c:	cmp    rax,0xffffffffffffffff
  40b570:	jne    0x40b587
  40b572:	mov    rcx,QWORD PTR [rip+0x35b07]        # 0x441080
  40b579:	mov    rdx,rsi
  40b57c:	call   0x42b040
  40b581:	cmp    rax,0xffffffffffffffff
  40b585:	je     0x40b545
  40b587:	mov    rcx,rax
  40b58a:	mov    QWORD PTR [r13+rbp*8+0x0],rsi
  40b58f:	call   0x42b048
  40b594:	mov    rsi,QWORD PTR [r13+rbp*8+0x0]
  40b599:	jmp    0x40b4e9
  40b59e:	xchg   ax,ax
  40b5a0:	lea    rax,[rip+0x25f2b]        # 0x4314d2
  40b5a7:	mov    QWORD PTR [r12+rbp*8],rax
  40b5ab:	jmp    0x40b4e9
  40b5b0:	push   r13
  40b5b2:	push   r12
  40b5b4:	push   rbp
  40b5b5:	push   rdi
  40b5b6:	push   rsi
  40b5b7:	push   rbx
  40b5b8:	sub    rsp,0x48
  40b5bc:	cmp    QWORD PTR [rcx+0x10],0xffffffffffffffff
  40b5c1:	mov    rbx,rcx
  40b5c4:	mov    esi,edx
  40b5c6:	mov    edi,r8d
  40b5c9:	je     0x40b5e4
  40b5cb:	lea    rdx,[rip+0x25ee6]        # 0x4314b8
  40b5d2:	lea    rcx,[rip+0x25f07]        # 0x4314e0
  40b5d9:	mov    r8d,0x193
  40b5df:	call   0x42d350
  40b5e4:	cmp    QWORD PTR [rbx+0x28],0xffffffffffffffff
  40b5e9:	je     0x40b604
  40b5eb:	lea    rdx,[rip+0x25ec6]        # 0x4314b8
  40b5f2:	lea    rcx,[rip+0x25f0f]        # 0x431508
  40b5f9:	mov    r8d,0x194
  40b5ff:	call   0x42d350
  40b604:	test   esi,esi
  40b606:	js     0x40b6d2
  40b60c:	test   edi,edi
  40b60e:	js     0x40b730
  40b614:	movsxd r12,esi
  40b617:	lea    rax,[rip+0x28ba2]        # 0x4341c0
  40b61e:	movsxd r13,edi
  40b621:	mov    rdx,r12
  40b624:	shl    rdx,0x4
  40b628:	mov    r9,QWORD PTR [rax+rdx*1]
  40b62c:	mov    r10,QWORD PTR [rax+rdx*1+0x8]
  40b631:	mov    rdx,r13
  40b634:	shl    rdx,0x4
  40b638:	add    rdx,rax
  40b63b:	cmp    esi,edi
  40b63d:	mov    rax,QWORD PTR [rdx]
  40b640:	mov    rdx,QWORD PTR [rdx+0x8]
  40b644:	mov    QWORD PTR [rbx+0x18],r9
  40b648:	mov    QWORD PTR [rbx+0x20],r10
  40b64c:	mov    QWORD PTR [rbx],rax
  40b64f:	mov    QWORD PTR [rbx+0x8],rdx
  40b653:	je     0x40b700
  40b659:	lea    rbp,[rip+0x35a60]        # 0x4410c0
  40b660:	mov    DWORD PTR [rbx+0x30],0x0
  40b667:	cmp    QWORD PTR [rbp+r12*8+0x0],0x0
  40b66d:	je     0x40b7e0
  40b673:	mov    rcx,QWORD PTR [rbp+r13*8+0x0]
  40b678:	lea    rsi,[rip+0x35a41]        # 0x4410c0
  40b67f:	test   rcx,rcx
  40b682:	je     0x40b830
  40b688:	mov    rdx,QWORD PTR [rbp+r12*8+0x0]
  40b68d:	call   0x42b040
  40b692:	cmp    rax,0xffffffffffffffff
  40b696:	mov    QWORD PTR [rbx+0x10],rax
  40b69a:	je     0x40b7a5
  40b6a0:	mov    rdx,QWORD PTR [rbp+r13*8+0x0]
  40b6a5:	mov    rcx,QWORD PTR [rbp+r12*8+0x0]
  40b6aa:	call   0x42b040
  40b6af:	mov    rdx,rax
  40b6b2:	mov    QWORD PTR [rbx+0x28],rax
  40b6b6:	mov    eax,0x1
  40b6bb:	cmp    rdx,0xffffffffffffffff
  40b6bf:	je     0x40b763
  40b6c5:	add    rsp,0x48
  40b6c9:	pop    rbx
  40b6ca:	pop    rsi
  40b6cb:	pop    rdi
  40b6cc:	pop    rbp
  40b6cd:	pop    r12
  40b6cf:	pop    r13
  40b6d1:	ret    
  40b6d2:	mov    rax,QWORD PTR [rip+0x30757]        # 0x43be30
  40b6d9:	mov    eax,DWORD PTR [rax]
  40b6db:	test   eax,eax
  40b6dd:	je     0x40b6c5
  40b6df:	lea    r8,[rip+0x25e4a]        # 0x431530
  40b6e6:	lea    rcx,[rip+0x25dcb]        # 0x4314b8
  40b6ed:	mov    r9d,esi
  40b6f0:	mov    edx,0x1977
  40b6f5:	call   0x40d350
  40b6fa:	xor    eax,eax
  40b6fc:	jmp    0x40b6c5
  40b6fe:	xchg   ax,ax
  40b700:	mov    eax,0x1
  40b705:	mov    QWORD PTR [rbx+0x10],0xffffffffffffffff
  40b70d:	mov    QWORD PTR [rbx+0x28],0xffffffffffffffff
  40b715:	mov    DWORD PTR [rbx+0x30],0x1
  40b71c:	add    rsp,0x48
  40b720:	pop    rbx
  40b721:	pop    rsi
  40b722:	pop    rdi
  40b723:	pop    rbp
  40b724:	pop    r12
  40b726:	pop    r13
  40b728:	ret    
  40b729:	nop    DWORD PTR [rax+0x0]
  40b730:	mov    rax,QWORD PTR [rip+0x306f9]        # 0x43be30
  40b737:	mov    eax,DWORD PTR [rax]
  40b739:	test   eax,eax
  40b73b:	je     0x40b6c5
  40b741:	lea    r8,[rip+0x25e20]        # 0x431568
  40b748:	lea    rcx,[rip+0x25d69]        # 0x4314b8
  40b74f:	mov    r9d,edi
  40b752:	mov    edx,0x19c7
  40b757:	call   0x40d350
  40b75c:	xor    eax,eax
  40b75e:	jmp    0x40b6c5
  40b763:	mov    rdx,QWORD PTR [rip+0x306c6]        # 0x43be30
  40b76a:	mov    edx,DWORD PTR [rdx]
  40b76c:	test   edx,edx
  40b76e:	je     0x40b6c5
  40b774:	mov    rdx,QWORD PTR [rbx+0x18]
  40b778:	mov    r9,QWORD PTR [rbx]
  40b77b:	lea    r8,[rip+0x25e56]        # 0x4315d8
  40b782:	lea    rcx,[rip+0x25d2f]        # 0x4314b8
  40b789:	mov    DWORD PTR [rsp+0x3c],eax
  40b78d:	mov    QWORD PTR [rsp+0x20],rdx
  40b792:	mov    edx,0x1c37
  40b797:	call   0x40d350
  40b79c:	mov    eax,DWORD PTR [rsp+0x3c]
  40b7a0:	jmp    0x40b6c5
  40b7a5:	mov    rax,QWORD PTR [rip+0x30684]        # 0x43be30
  40b7ac:	mov    ecx,DWORD PTR [rax]
  40b7ae:	test   ecx,ecx
  40b7b0:	je     0x40b6a0
  40b7b6:	mov    rax,QWORD PTR [rbx]
  40b7b9:	mov    r9,QWORD PTR [rbx+0x18]
  40b7bd:	lea    r8,[rip+0x25e14]        # 0x4315d8
  40b7c4:	lea    rcx,[rip+0x25ced]        # 0x4314b8
  40b7cb:	mov    edx,0x1be7
  40b7d0:	mov    QWORD PTR [rsp+0x20],rax
  40b7d5:	call   0x40d350
  40b7da:	jmp    0x40b6a0
  40b7df:	nop
  40b7e0:	mov    ecx,esi
  40b7e2:	call   0x40b490
  40b7e7:	test   rax,rax
  40b7ea:	jne    0x40b673
  40b7f0:	mov    rax,QWORD PTR [rip+0x30639]        # 0x43be30
  40b7f7:	mov    r9d,DWORD PTR [rax]
  40b7fa:	test   r9d,r9d
  40b7fd:	je     0x40b673
  40b803:	mov    rax,QWORD PTR [rbp+r12*8+0x0]
  40b808:	lea    r8,[rip+0x25d91]        # 0x4315a0
  40b80f:	lea    rcx,[rip+0x25ca2]        # 0x4314b8
  40b816:	mov    r9d,esi
  40b819:	mov    edx,0x1b07
  40b81e:	mov    QWORD PTR [rsp+0x20],rax
  40b823:	call   0x40d350
  40b828:	jmp    0x40b673
  40b82d:	nop    DWORD PTR [rax]
  40b830:	mov    ecx,edi
  40b832:	call   0x40b490
  40b837:	test   rax,rax
  40b83a:	je     0x40b846
  40b83c:	mov    rcx,QWORD PTR [rbp+r13*8+0x0]
  40b841:	jmp    0x40b688
  40b846:	mov    rax,QWORD PTR [rip+0x305e3]        # 0x43be30
  40b84d:	mov    r8d,DWORD PTR [rax]
  40b850:	test   r8d,r8d
  40b853:	je     0x40b83c
  40b855:	mov    rax,QWORD PTR [rsi+r13*8]
  40b859:	lea    rcx,[rip+0x25c58]        # 0x4314b8
  40b860:	lea    r8,[rip+0x25d39]        # 0x4315a0
  40b867:	mov    r9d,edi
  40b86a:	mov    edx,0x1b77
  40b86f:	mov    QWORD PTR [rsp+0x20],rax
  40b874:	call   0x40d350
  40b879:	mov    rcx,QWORD PTR [rsi+r13*8]
  40b87d:	jmp    0x40b688
  40b882:	nop    DWORD PTR [rax+0x0]
  40b886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b890:	push   r13
  40b892:	push   r12
  40b894:	push   rbp
  40b895:	push   rdi
  40b896:	push   rsi
  40b897:	push   rbx
  40b898:	sub    rsp,0x28
  40b89c:	movsxd rax,DWORD PTR [rcx]
  40b89f:	mov    rsi,rdx
  40b8a2:	mov    rdi,rax
  40b8a5:	lea    r11,[rax*8-0x8]
  40b8ad:	mov    r10d,eax
  40b8b0:	jmp    0x40b8b6
  40b8b2:	sub    r11,0x8
  40b8b6:	sub    r10d,0x1
  40b8ba:	cmp    r10d,0x1
  40b8be:	jle    0x40b8f0
  40b8c0:	mov    rax,QWORD PTR [rsi]
  40b8c3:	mov    rbx,QWORD PTR [rax+r11*1]
  40b8c7:	movzx  eax,BYTE PTR [rbx+0x22]
  40b8cb:	cmp    eax,r8d
  40b8ce:	jne    0x40b8b2
  40b8d0:	movzx  eax,BYTE PTR [rbx+0xa]
  40b8d4:	cmp    eax,r9d
  40b8d7:	jne    0x40b8b2
  40b8d9:	mov    rax,rbx
  40b8dc:	add    rsp,0x28
  40b8e0:	pop    rbx
  40b8e1:	pop    rsi
  40b8e2:	pop    rdi
  40b8e3:	pop    rbp
  40b8e4:	pop    r12
  40b8e6:	pop    r13
  40b8e8:	ret    
  40b8e9:	nop    DWORD PTR [rax+0x0]
  40b8f0:	mov    edx,edi
  40b8f2:	mov    r13d,r9d
  40b8f5:	mov    r12,rcx
  40b8f8:	sar    edx,0x1f
  40b8fb:	mov    ebp,r8d
  40b8fe:	mov    ecx,edi
  40b900:	shr    edx,0x1e
  40b903:	movsxd r9,edi
  40b906:	lea    eax,[rdi+rdx*1]
  40b909:	and    eax,0x3
  40b90c:	sub    eax,edx
  40b90e:	cmp    eax,0x3
  40b911:	je     0x40b943
  40b913:	mov    rax,QWORD PTR [rsi]
  40b916:	add    ecx,0x1
  40b919:	mov    r8d,r13d
  40b91c:	mov    DWORD PTR [r12],ecx
  40b920:	mov    edx,ebp
  40b922:	mov    rbx,QWORD PTR [rax+r9*8]
  40b926:	mov    rcx,rbx
  40b929:	call   0x40b5b0
  40b92e:	test   eax,eax
  40b930:	jne    0x40b8d9
  40b932:	mov    rcx,rbx
  40b935:	xor    ebx,ebx
  40b937:	call   0x40ae20
  40b93c:	sub    DWORD PTR [r12],0x1
  40b941:	jmp    0x40b8d9
  40b943:	mov    ecx,0xe0
  40b948:	call   0x42d6b8
  40b94d:	test   rax,rax
  40b950:	mov    rbx,rax
  40b953:	je     0x40b9f4
  40b959:	lea    edx,[rdi+0x4]
  40b95c:	mov    rcx,QWORD PTR [rsi]
  40b95f:	movsxd rdx,edx
  40b962:	shl    rdx,0x3
  40b966:	call   0x42d668
  40b96b:	test   rax,rax
  40b96e:	mov    r8,rax
  40b971:	je     0x40b9fb
  40b977:	movsxd r9,DWORD PTR [r12]
  40b97b:	mov    QWORD PTR [rsi],rax
  40b97e:	mov    ecx,0x1c
  40b983:	xor    eax,eax
  40b985:	mov    rdi,rbx
  40b988:	mov    rdx,rbx
  40b98b:	rep stos QWORD PTR es:[rdi],rax
  40b98e:	mov    rax,r8
  40b991:	xor    r8d,r8d
  40b994:	lea    r10,[r9*8+0x0]
  40b99c:	mov    rcx,r9
  40b99f:	add    rax,r8
  40b9a2:	add    r8,0x8
  40b9a6:	mov    QWORD PTR [rax+r10*1],rdx
  40b9aa:	lea    rax,[rip+0x25c57]        # 0x431608
  40b9b1:	mov    BYTE PTR [rdx+0x8],0x1
  40b9b5:	mov    BYTE PTR [rdx+0x9],0x1
  40b9b9:	mov    BYTE PTR [rdx+0x20],0x1
  40b9bd:	add    rdx,0x38
  40b9c1:	mov    BYTE PTR [rdx-0x17],0x1
  40b9c5:	mov    QWORD PTR [rdx-0x20],rax
  40b9c9:	mov    QWORD PTR [rdx-0x38],rax
  40b9cd:	mov    BYTE PTR [rdx-0x16],0x0
  40b9d1:	mov    BYTE PTR [rdx-0x2e],0x0
  40b9d5:	mov    QWORD PTR [rdx-0x28],0xffffffffffffffff
  40b9dd:	mov    QWORD PTR [rdx-0x10],0xffffffffffffffff
  40b9e5:	cmp    r8,0x20
  40b9e9:	je     0x40b913
  40b9ef:	mov    rax,QWORD PTR [rsi]
  40b9f2:	jmp    0x40b99f
  40b9f4:	xor    ebx,ebx
  40b9f6:	jmp    0x40b8d9
  40b9fb:	mov    rcx,rbx
  40b9fe:	xor    ebx,ebx
  40ba00:	call   0x42d6f8
  40ba05:	jmp    0x40b8d9
  40ba0a:	nop    WORD PTR [rax+rax*1+0x0]
  40ba10:	push   rdi
  40ba11:	push   rsi
  40ba12:	push   rbx
  40ba13:	sub    rsp,0x20
  40ba17:	mov    rax,QWORD PTR [rcx+0x68]
  40ba1b:	test   edx,edx
  40ba1d:	mov    rsi,rcx
  40ba20:	mov    ebx,edx
  40ba22:	mov    rdi,QWORD PTR [rax+0x8]
  40ba26:	jne    0x40ba35
  40ba28:	cmp    WORD PTR [rcx],0x6ff
  40ba2d:	mov    eax,0xf
  40ba32:	cmova  ebx,eax
  40ba35:	mov    rax,QWORD PTR [rip+0x303f4]        # 0x43be30
  40ba3c:	mov    eax,DWORD PTR [rax]
  40ba3e:	test   eax,eax
  40ba40:	jne    0x40ba80
  40ba42:	movzx  eax,BYTE PTR [rdi+0xa]
  40ba46:	cmp    eax,ebx
  40ba48:	je     0x40ba73
  40ba4a:	mov    rax,QWORD PTR [rsi+0x68]
  40ba4e:	lea    rdx,[rsi+0x68]
  40ba52:	lea    rcx,[rsi+0x60]
  40ba56:	mov    r9d,ebx
  40ba59:	mov    rax,QWORD PTR [rax]
  40ba5c:	movzx  r8d,BYTE PTR [rax+0x22]
  40ba61:	call   0x40b890
  40ba66:	test   rax,rax
  40ba69:	je     0x40ba73
  40ba6b:	mov    rdx,QWORD PTR [rsi+0x68]
  40ba6f:	mov    QWORD PTR [rdx+0x8],rax
  40ba73:	add    rsp,0x20
  40ba77:	pop    rbx
  40ba78:	pop    rsi
  40ba79:	pop    rdi
  40ba7a:	ret    
  40ba7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ba80:	movsxd rax,ebx
  40ba83:	lea    rdx,[rip+0x28736]        # 0x4341c0
  40ba8a:	lea    r8,[rip+0x25b7f]        # 0x431610
  40ba91:	shl    rax,0x4
  40ba95:	lea    rcx,[rip+0x25a1c]        # 0x4314b8
  40ba9c:	mov    r9,QWORD PTR [rdx+rax*1]
  40baa0:	mov    edx,0x30c7
  40baa5:	call   0x40d350
  40baaa:	jmp    0x40ba42
  40baac:	nop    DWORD PTR [rax+0x0]
  40bab0:	push   rdi
  40bab1:	push   rsi
  40bab2:	push   rbx
  40bab3:	sub    rsp,0x20
  40bab7:	cmp    QWORD PTR [rcx+0x68],0x0
  40babc:	mov    rbx,rcx
  40babf:	je     0x40bada
  40bac1:	lea    rdx,[rip+0x259f0]        # 0x4314b8
  40bac8:	lea    rcx,[rip+0x25b6d]        # 0x43163c
  40bacf:	mov    r8d,0x10e
  40bad5:	call   0x42d350
  40bada:	mov    ecx,0x18
  40badf:	mov    edi,0x1
  40bae4:	call   0x42d6b8
  40bae9:	test   rax,rax
  40baec:	mov    rsi,rax
  40baef:	mov    QWORD PTR [rbx+0x68],rax
  40baf3:	je     0x40bb9b
  40baf9:	mov    edx,0x38
  40bafe:	mov    ecx,0x2
  40bb03:	call   0x42d740
  40bb08:	test   rax,rax
  40bb0b:	je     0x40bba5
  40bb11:	mov    rdx,QWORD PTR [rbx+0x68]
  40bb15:	lea    rdi,[rip+0x25aec]        # 0x431608
  40bb1c:	lea    rcx,[rax+0x38]
  40bb20:	mov    QWORD PTR [rsi],rax
  40bb23:	mov    BYTE PTR [rax+0x8],0x1
  40bb27:	mov    BYTE PTR [rax+0x9],0x1
  40bb2b:	mov    QWORD PTR [rax+0x18],rdi
  40bb2f:	mov    QWORD PTR [rax],rdi
  40bb32:	mov    BYTE PTR [rax+0xa],0x0
  40bb36:	mov    QWORD PTR [rax+0x10],0xffffffffffffffff
  40bb3e:	mov    DWORD PTR [rbx+0x60],0x3
  40bb45:	mov    BYTE PTR [rax+0x20],0x1
  40bb49:	mov    BYTE PTR [rax+0x21],0x1
  40bb4d:	mov    BYTE PTR [rax+0x22],0x0
  40bb51:	mov    QWORD PTR [rax+0x28],0xffffffffffffffff
  40bb59:	mov    QWORD PTR [rdx+0x8],rcx
  40bb5d:	mov    QWORD PTR [rax+0x50],rdi
  40bb61:	mov    QWORD PTR [rax+0x38],rdi
  40bb65:	mov    BYTE PTR [rax+0x40],0x1
  40bb69:	xor    edi,edi
  40bb6b:	mov    BYTE PTR [rax+0x41],0x1
  40bb6f:	mov    BYTE PTR [rax+0x58],0x1
  40bb73:	mov    BYTE PTR [rax+0x59],0x1
  40bb77:	mov    BYTE PTR [rax+0x5a],0x0
  40bb7b:	mov    BYTE PTR [rax+0x42],0x0
  40bb7f:	mov    QWORD PTR [rax+0x48],0xffffffffffffffff
  40bb87:	mov    QWORD PTR [rax+0x60],0xffffffffffffffff
  40bb8f:	mov    rax,QWORD PTR [rbx+0x68]
  40bb93:	mov    rdx,QWORD PTR [rax+0x8]
  40bb97:	mov    QWORD PTR [rax+0x10],rdx
  40bb9b:	mov    eax,edi
  40bb9d:	add    rsp,0x20
  40bba1:	pop    rbx
  40bba2:	pop    rsi
  40bba3:	pop    rdi
  40bba4:	ret    
  40bba5:	mov    rcx,rsi
  40bba8:	call   0x42d6f8
  40bbad:	mov    QWORD PTR [rbx+0x68],0x0
  40bbb5:	jmp    0x40bb9b
  40bbb7:	nop    WORD PTR [rax+rax*1+0x0]
  40bbc0:	push   r15
  40bbc2:	push   r14
  40bbc4:	push   r13
  40bbc6:	push   r12
  40bbc8:	push   rbp
  40bbc9:	push   rdi
  40bbca:	push   rsi
  40bbcb:	push   rbx
  40bbcc:	sub    rsp,0xb8
  40bbd3:	mov    r13,rcx
  40bbd6:	mov    rcx,rdx
  40bbd9:	mov    QWORD PTR [rsp+0x108],rdx
  40bbe1:	mov    DWORD PTR [rsp+0x110],r8d
  40bbe9:	call   0x40b450
  40bbee:	mov    rcx,QWORD PTR [r13+0x40]
  40bbf2:	mov    DWORD PTR [rsp+0x3c],eax
  40bbf6:	mov    DWORD PTR [rsp+0x38],0xffffffff
  40bbfe:	test   rcx,rcx
  40bc01:	je     0x40bc0c
  40bc03:	call   0x40b450
  40bc08:	mov    DWORD PTR [rsp+0x38],eax
  40bc0c:	mov    r12,QWORD PTR [rip+0x3021d]        # 0x43be30
  40bc13:	mov    rax,QWORD PTR [r13+0x68]
  40bc17:	mov    r15d,DWORD PTR [r12]
  40bc1b:	mov    rdi,QWORD PTR [rax]
  40bc1e:	test   r15d,r15d
  40bc21:	mov    QWORD PTR [rsp+0x40],rdi
  40bc26:	jne    0x40bcdb
  40bc2c:	mov    edx,DWORD PTR [rip+0x35456]        # 0x441088
  40bc32:	test   edx,edx
  40bc34:	je     0x40bd13
  40bc3a:	mov    r10d,DWORD PTR [rsp+0x110]
  40bc42:	test   r10d,r10d
  40bc45:	jne    0x40be21
  40bc4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bc50:	mov    edx,DWORD PTR [rsp+0x3c]
  40bc54:	mov    rcx,QWORD PTR [rax]
  40bc57:	mov    r8d,0x2
  40bc5d:	call   0x40b5b0
  40bc62:	test   eax,eax
  40bc64:	je     0x40be96
  40bc6a:	mov    rax,QWORD PTR [rsp+0x40]
  40bc6f:	cmp    WORD PTR [rax+0x20],0x401
  40bc75:	je     0x40be44
  40bc7b:	mov    rax,QWORD PTR [r13+0x68]
  40bc7f:	mov    r9d,DWORD PTR [rsp+0x38]
  40bc84:	mov    rcx,QWORD PTR [rax+0x8]
  40bc88:	test   r9d,r9d
  40bc8b:	mov    DWORD PTR [rcx+0x30],0x1
  40bc92:	js     0x40be60
  40bc98:	mov    r8d,DWORD PTR [r12]
  40bc9c:	test   r8d,r8d
  40bc9f:	jne    0x40c22b
  40bca5:	mov    r8d,DWORD PTR [rsp+0x38]
  40bcaa:	mov    edx,DWORD PTR [rsp+0x3c]
  40bcae:	call   0x40b5b0
  40bcb3:	test   eax,eax
  40bcb5:	je     0x40be96
  40bcbb:	mov    eax,DWORD PTR [r12]
  40bcbf:	test   eax,eax
  40bcc1:	jne    0x40c20c
  40bcc7:	add    rsp,0xb8
  40bcce:	pop    rbx
  40bccf:	pop    rsi
  40bcd0:	pop    rdi
  40bcd1:	pop    rbp
  40bcd2:	pop    r12
  40bcd4:	pop    r13
  40bcd6:	pop    r14
  40bcd8:	pop    r15
  40bcda:	ret    
  40bcdb:	mov    rax,QWORD PTR [rsp+0x108]
  40bce3:	lea    r8,[rip+0x2596b]        # 0x431655
  40bcea:	lea    rcx,[rip+0x257c7]        # 0x4314b8
  40bcf1:	mov    r9,r13
  40bcf4:	mov    edx,0x1457
  40bcf9:	mov    QWORD PTR [rsp+0x20],rax
  40bcfe:	call   0x40d350
  40bd03:	mov    r14d,DWORD PTR [rip+0x3537e]        # 0x441088
  40bd0a:	test   r14d,r14d
  40bd0d:	jne    0x40be00
  40bd13:	lea    rdx,[rip+0x25953]        # 0x43166d
  40bd1a:	lea    rcx,[rip+0x257b1]        # 0x4314d2
  40bd21:	call   0x42b040
  40bd26:	cmp    rax,0xffffffffffffffff
  40bd2a:	je     0x40bedf
  40bd30:	lea    rdi,[rip+0x2579b]        # 0x4314d2
  40bd37:	mov    rcx,rax
  40bd3a:	mov    QWORD PTR [rip+0x3537f],rdi        # 0x4410c0
  40bd41:	lea    rdi,[rip+0x25925]        # 0x43166d
  40bd48:	mov    QWORD PTR [rip+0x35379],rdi        # 0x4410c8
  40bd4f:	call   0x42b048
  40bd54:	mov    rcx,QWORD PTR [rip+0x35365]        # 0x4410c0
  40bd5b:	lea    rdx,[rip+0x25911]        # 0x431673
  40bd62:	call   0x42b040
  40bd67:	cmp    rax,0xffffffffffffffff
  40bd6b:	je     0x40bd83
  40bd6d:	lea    rdi,[rip+0x258ff]        # 0x431673
  40bd74:	mov    rcx,rax
  40bd77:	mov    QWORD PTR [rip+0x35352],rdi        # 0x4410d0
  40bd7e:	call   0x42b048
  40bd83:	mov    rcx,QWORD PTR [rip+0x35336]        # 0x4410c0
  40bd8a:	lea    rdx,[rip+0x258ea]        # 0x43167b
  40bd91:	call   0x42b040
  40bd96:	cmp    rax,0xffffffffffffffff
  40bd9a:	je     0x40bdb2
  40bd9c:	lea    rdi,[rip+0x258d8]        # 0x43167b
  40bda3:	mov    rcx,rax
  40bda6:	mov    QWORD PTR [rip+0x3532b],rdi        # 0x4410d8
  40bdad:	call   0x42b048
  40bdb2:	mov    rax,QWORD PTR [rip+0x35317]        # 0x4410d0
  40bdb9:	test   rax,rax
  40bdbc:	je     0x40bfe6
  40bdc2:	cmp    QWORD PTR [rip+0x3530e],0x0        # 0x4410d8
  40bdca:	je     0x40bfe6
  40bdd0:	lea    rsi,[rip+0x25877]        # 0x43164e
  40bdd7:	mov    QWORD PTR [rip+0x352a2],rax        # 0x441080
  40bdde:	xor    ebx,ebx
  40bde0:	mov    edi,DWORD PTR [r12]
  40bde4:	test   edi,edi
  40bde6:	jne    0x40bea0
  40bdec:	add    rbx,0x8
  40bdf0:	cmp    rbx,0x20
  40bdf4:	jne    0x40bde0
  40bdf6:	mov    DWORD PTR [rip+0x35288],0x1        # 0x441088
  40be00:	mov    ebx,DWORD PTR [r12]
  40be04:	test   ebx,ebx
  40be06:	jne    0x40bf88
  40be0c:	mov    r10d,DWORD PTR [rsp+0x110]
  40be14:	mov    rax,QWORD PTR [r13+0x68]
  40be18:	test   r10d,r10d
  40be1b:	je     0x40bc50
  40be21:	mov    edx,DWORD PTR [rsp+0x3c]
  40be25:	mov    rcx,QWORD PTR [rax]
  40be28:	mov    r8d,0x61
  40be2e:	call   0x40b5b0
  40be33:	test   eax,eax
  40be35:	jne    0x40bc6a
  40be3b:	mov    rax,QWORD PTR [r13+0x68]
  40be3f:	jmp    0x40bc50
  40be44:	mov    rax,QWORD PTR [rsp+0x40]
  40be49:	cmp    BYTE PTR [rax+0x9],0x1
  40be4d:	jne    0x40bc7b
  40be53:	mov    BYTE PTR [rax+0x21],0x3
  40be57:	jmp    0x40bc7b
  40be5c:	nop    DWORD PTR [rax+0x0]
  40be60:	movsxd rax,DWORD PTR [rsp+0x3c]
  40be65:	lea    rdx,[rip+0x28354]        # 0x4341c0
  40be6c:	shl    rax,0x4
  40be70:	add    rdx,rax
  40be73:	mov    rax,QWORD PTR [rdx]
  40be76:	mov    rdx,QWORD PTR [rdx+0x8]
  40be7a:	mov    QWORD PTR [rcx+0x18],rax
  40be7e:	mov    QWORD PTR [rcx+0x20],rdx
  40be82:	mov    rcx,QWORD PTR [r13+0x68]
  40be86:	mov    rcx,QWORD PTR [rcx+0x8]
  40be8a:	mov    QWORD PTR [rcx],rax
  40be8d:	mov    QWORD PTR [rcx+0x8],rdx
  40be91:	jmp    0x40bcbb
  40be96:	mov    eax,0xffffffff
  40be9b:	jmp    0x40bcc7
  40bea0:	lea    rax,[rip+0x35219]        # 0x4410c0
  40bea7:	lea    rdx,[rip+0x28312]        # 0x4341c0
  40beae:	lea    r8,[rip+0x257d4]        # 0x431689
  40beb5:	lea    rcx,[rip+0x255fc]        # 0x4314b8
  40bebc:	mov    rax,QWORD PTR [rax+rbx*1]
  40bec0:	mov    r9,QWORD PTR [rdx+rbx*2]
  40bec4:	mov    edx,0xb95
  40bec9:	test   rax,rax
  40becc:	cmove  rax,rsi
  40bed0:	mov    QWORD PTR [rsp+0x20],rax
  40bed5:	call   0x40d350
  40beda:	jmp    0x40bdec
  40bedf:	lea    rsi,[rip+0x26b62]        # 0x432a48
  40bee6:	lea    rdi,[rip+0x255c7]        # 0x4314b4
  40beed:	nop    DWORD PTR [rax]
  40bef0:	mov    ebp,DWORD PTR [rsi]
  40bef2:	test   ebp,ebp
  40bef4:	jne    0x40bf60
  40bef6:	lea    rbx,[rip+0x26b4b]        # 0x432a48
  40befd:	lea    rbp,[rip+0x255b0]        # 0x4314b4
  40bf04:	jmp    0x40bf1d
  40bf06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bf10:	add    rbx,0x10
  40bf14:	mov    rbp,QWORD PTR [rbx-0x8]
  40bf18:	test   rbp,rbp
  40bf1b:	je     0x40bf50
  40bf1d:	cmp    DWORD PTR [rbx],0x1
  40bf20:	jne    0x40bf10
  40bf22:	mov    rdx,rbp
  40bf25:	mov    rcx,rdi
  40bf28:	call   0x42b040
  40bf2d:	cmp    rax,0xffffffffffffffff
  40bf31:	je     0x40bf10
  40bf33:	mov    rcx,rax
  40bf36:	mov    QWORD PTR [rip+0x35183],rdi        # 0x4410c0
  40bf3d:	mov    QWORD PTR [rip+0x35184],rbp        # 0x4410c8
  40bf44:	call   0x42b048
  40bf49:	nop    DWORD PTR [rax+0x0]
  40bf50:	mov    rcx,QWORD PTR [rip+0x35169]        # 0x4410c0
  40bf57:	test   rcx,rcx
  40bf5a:	jne    0x40bd5b
  40bf60:	add    rsi,0x10
  40bf64:	mov    rdi,QWORD PTR [rsi-0x8]
  40bf68:	test   rdi,rdi
  40bf6b:	jne    0x40bef0
  40bf6d:	mov    rcx,QWORD PTR [rip+0x3514c]        # 0x4410c0
  40bf74:	test   rcx,rcx
  40bf77:	jne    0x40bd5b
  40bf7d:	mov    r9d,0x1
  40bf83:	jmp    0x40c1c4
  40bf88:	mov    r9,QWORD PTR [rsp+0x108]
  40bf90:	lea    r8,[rip+0x25791]        # 0x431728
  40bf97:	lea    rcx,[rip+0x2551a]        # 0x4314b8
  40bf9e:	mov    edx,0x1577
  40bfa3:	call   0x40d350
  40bfa8:	mov    r11d,DWORD PTR [r12]
  40bfac:	test   r11d,r11d
  40bfaf:	je     0x40be0c
  40bfb5:	lea    rax,[rip+0x258dc]        # 0x431898
  40bfbc:	mov    r9,QWORD PTR [rsp+0x108]
  40bfc4:	lea    r8,[rip+0x2578d]        # 0x431758
  40bfcb:	lea    rcx,[rip+0x254e6]        # 0x4314b8
  40bfd2:	mov    edx,0x1597
  40bfd7:	mov    QWORD PTR [rsp+0x20],rax
  40bfdc:	call   0x40d350
  40bfe1:	jmp    0x40be0c
  40bfe6:	lea    rax,[rsp+0x7f]
  40bfeb:	lea    r15,[rip+0x254c2]        # 0x4314b4
  40bff2:	mov    QWORD PTR [rsp+0x100],r13
  40bffa:	lea    r14,[rip+0x26a47]        # 0x432a48
  40c001:	lea    rbp,[rip+0x281b8]        # 0x4341c0
  40c008:	lea    rbx,[rip+0x25674]        # 0x431683
  40c00f:	mov    QWORD PTR [rsp+0x48],rax
  40c014:	lea    rax,[rsp+0x80]
  40c01c:	mov    r13,r15
  40c01f:	mov    QWORD PTR [rsp+0x50],rax
  40c024:	lea    rax,[rsp+0xa8]
  40c02c:	mov    QWORD PTR [rsp+0x58],rax
  40c031:	lea    rax,[rsp+0x90]
  40c039:	mov    QWORD PTR [rsp+0x60],rax
  40c03e:	lea    rax,[rsp+0xa0]
  40c046:	mov    QWORD PTR [rsp+0x68],rax
  40c04b:	lea    rax,[rsp+0x98]
  40c053:	mov    r15,rax
  40c056:	jmp    0x40c071
  40c058:	nop    DWORD PTR [rax+rax*1+0x0]
  40c060:	add    r14,0x10
  40c064:	mov    r13,QWORD PTR [r14-0x8]
  40c068:	test   r13,r13
  40c06b:	je     0x40c196
  40c071:	movsxd rax,DWORD PTR [r14]
  40c074:	mov    ecx,0x5
  40c079:	mov    rdi,rbx
  40c07c:	shl    rax,0x4
  40c080:	mov    rsi,QWORD PTR [rbp+rax*1+0x0]
  40c085:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c087:	jne    0x40c060
  40c089:	mov    rdx,QWORD PTR [rip+0x35030]        # 0x4410c0
  40c090:	mov    rcx,r13
  40c093:	call   0x42b040
  40c098:	cmp    rax,0xffffffffffffffff
  40c09c:	mov    rsi,rax
  40c09f:	je     0x40c060
  40c0a1:	mov    rax,QWORD PTR [rsp+0x48]
  40c0a6:	mov    r9,QWORD PTR [rsp+0x58]
  40c0ab:	mov    rcx,rsi
  40c0ae:	mov    r8,QWORD PTR [rsp+0x60]
  40c0b3:	mov    rdx,QWORD PTR [rsp+0x68]
  40c0b8:	mov    QWORD PTR [rsp+0x20],r15
  40c0bd:	mov    BYTE PTR [rsp+0x7f],0x41
  40c0c2:	mov    QWORD PTR [rsp+0xa0],rax
  40c0ca:	mov    rax,QWORD PTR [rsp+0x50]
  40c0cf:	mov    QWORD PTR [rsp+0x90],0x1
  40c0db:	mov    QWORD PTR [rsp+0x98],0x4
  40c0e7:	mov    BYTE PTR [rsp+0x81],0x0
  40c0ef:	mov    BYTE PTR [rsp+0x80],0x0
  40c0f7:	mov    QWORD PTR [rsp+0xa8],rax
  40c0ff:	call   0x42b050
  40c104:	cmp    rax,0xffffffffffffffff
  40c108:	je     0x40c149
  40c10a:	cmp    QWORD PTR [rsp+0x98],0x0
  40c113:	je     0x40c183
  40c115:	movzx  eax,BYTE PTR [rsp+0x80]
  40c11d:	mov    ecx,0x1
  40c122:	test   al,al
  40c124:	je     0x40c170
  40c126:	mov    QWORD PTR [rsp+0x90],0x2
  40c132:	mov    edx,0x2
  40c137:	lea    rax,[rip+0x34f82]        # 0x4410c0
  40c13e:	cmp    QWORD PTR [rax+rdx*8],0x0
  40c143:	je     0x40c160
  40c145:	test   cl,cl
  40c147:	jne    0x40c160
  40c149:	mov    rcx,rsi
  40c14c:	call   0x42b048
  40c151:	jmp    0x40c060
  40c156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c160:	mov    QWORD PTR [rax+rdx*8],r13
  40c164:	jmp    0x40c149
  40c166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c170:	mov    QWORD PTR [rsp+0x90],0x3
  40c17c:	mov    edx,0x3
  40c181:	jmp    0x40c137
  40c183:	movzx  eax,BYTE PTR [rsp+0x82]
  40c18b:	xor    ecx,ecx
  40c18d:	mov    BYTE PTR [rsp+0x80],al
  40c194:	jmp    0x40c122
  40c196:	mov    rax,QWORD PTR [rip+0x34f33]        # 0x4410d0
  40c19d:	mov    r13,QWORD PTR [rsp+0x100]
  40c1a5:	test   rax,rax
  40c1a8:	jne    0x40bdd0
  40c1ae:	mov    rax,QWORD PTR [rip+0x34f23]        # 0x4410d8
  40c1b5:	test   rax,rax
  40c1b8:	jne    0x40bdd0
  40c1be:	mov    r9d,0x2
  40c1c4:	mov    ecx,DWORD PTR [r12]
  40c1c8:	test   ecx,ecx
  40c1ca:	je     0x40be96
  40c1d0:	lea    eax,[r9-0x1]
  40c1d4:	lea    r8,[rip+0x254cd]        # 0x4316a8
  40c1db:	lea    rcx,[rip+0x252d6]        # 0x4314b8
  40c1e2:	cdqe   
  40c1e4:	lea    rdx,[rax+rax*2]
  40c1e8:	lea    rax,[rip+0x256b1]        # 0x4318a0
  40c1ef:	lea    rax,[rax+rdx*4]
  40c1f3:	mov    edx,0x14c7
  40c1f8:	mov    QWORD PTR [rsp+0x20],rax
  40c1fd:	call   0x40d350
  40c202:	mov    eax,0xffffffff
  40c207:	jmp    0x40bcc7
  40c20c:	lea    r8,[rip+0x25573]        # 0x431786
  40c213:	lea    rcx,[rip+0x2529e]        # 0x4314b8
  40c21a:	mov    edx,0x1807
  40c21f:	call   0x40d350
  40c224:	xor    eax,eax
  40c226:	jmp    0x40bcc7
  40c22b:	mov    rax,QWORD PTR [r13+0x40]
  40c22f:	mov    r9,QWORD PTR [rsp+0x108]
  40c237:	lea    rcx,[rip+0x2527a]        # 0x4314b8
  40c23e:	lea    r8,[rip+0x25513]        # 0x431758
  40c245:	mov    edx,0x1777
  40c24a:	mov    QWORD PTR [rsp+0x20],rax
  40c24f:	call   0x40d350
  40c254:	mov    rax,QWORD PTR [r13+0x68]
  40c258:	mov    rcx,QWORD PTR [rax+0x8]
  40c25c:	jmp    0x40bca5
  40c261:	nop    DWORD PTR [rax+rax*1+0x0]
  40c266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c270:	push   rdi
  40c271:	push   rsi
  40c272:	push   rbx
  40c273:	sub    rsp,0x20
  40c277:	mov    eax,DWORD PTR [rcx+0x60]
  40c27a:	xor    esi,esi
  40c27c:	xor    ebx,ebx
  40c27e:	mov    rdi,rcx
  40c281:	test   eax,eax
  40c283:	jle    0x40c29e
  40c285:	mov    rax,QWORD PTR [rdi+0x68]
  40c289:	add    ebx,0x1
  40c28c:	mov    rcx,QWORD PTR [rax+rsi*1]
  40c290:	add    rsi,0x8
  40c294:	call   0x40ae20
  40c299:	cmp    DWORD PTR [rdi+0x60],ebx
  40c29c:	jg     0x40c285
  40c29e:	add    rsp,0x20
  40c2a2:	pop    rbx
  40c2a3:	pop    rsi
  40c2a4:	pop    rdi
  40c2a5:	ret    
  40c2a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c2b0:	push   rdi
  40c2b1:	push   rsi
  40c2b2:	push   rbx
  40c2b3:	sub    rsp,0x20
  40c2b7:	cmp    QWORD PTR [rcx+0x68],0x0
  40c2bc:	je     0x40c313
  40c2be:	mov    rdi,rcx
  40c2c1:	mov    esi,0x18
  40c2c6:	mov    ebx,0x3
  40c2cb:	call   0x40c270
  40c2d0:	mov    rax,QWORD PTR [rdi+0x68]
  40c2d4:	mov    rcx,QWORD PTR [rax]
  40c2d7:	call   0x42d6f8
  40c2dc:	cmp    DWORD PTR [rdi+0x60],0x3
  40c2e0:	jle    0x40c2fb
  40c2e2:	mov    rax,QWORD PTR [rdi+0x68]
  40c2e6:	add    ebx,0x4
  40c2e9:	mov    rcx,QWORD PTR [rax+rsi*1]
  40c2ed:	add    rsi,0x20
  40c2f1:	call   0x42d6f8
  40c2f6:	cmp    DWORD PTR [rdi+0x60],ebx
  40c2f9:	jg     0x40c2e2
  40c2fb:	mov    rcx,QWORD PTR [rdi+0x68]
  40c2ff:	call   0x42d6f8
  40c304:	mov    QWORD PTR [rdi+0x68],0x0
  40c30c:	mov    DWORD PTR [rdi+0x60],0x0
  40c313:	add    rsp,0x20
  40c317:	pop    rbx
  40c318:	pop    rsi
  40c319:	pop    rdi
  40c31a:	ret    
  40c31b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c320:	push   r15
  40c322:	push   r14
  40c324:	push   r13
  40c326:	push   r12
  40c328:	push   rbp
  40c329:	push   rdi
  40c32a:	push   rsi
  40c32b:	push   rbx
  40c32c:	sub    rsp,0x108
  40c333:	mov    r12,QWORD PTR [rsp+0x170]
  40c33b:	mov    r15,QWORD PTR [rsp+0x180]
  40c343:	lea    rax,[rsp+0xa0]
  40c34b:	mov    QWORD PTR [rsp+0x150],rcx
  40c353:	test   r9,r9
  40c356:	mov    ecx,0x3f
  40c35b:	mov    r14,rdx
  40c35e:	mov    DWORD PTR [rsp+0x160],r8d
  40c366:	mov    rbx,r9
  40c369:	mov    WORD PTR [rsp+0xa0],cx
  40c371:	mov    QWORD PTR [rsp+0x40],rax
  40c376:	mov    QWORD PTR [rsp+0xb0],rax
  40c37e:	je     0x40c550
  40c384:	test   r12,r12
  40c387:	je     0x40c550
  40c38d:	cmp    QWORD PTR [rsp+0x178],0x0
  40c396:	je     0x40c550
  40c39c:	test   r15,r15
  40c39f:	je     0x40c550
  40c3a5:	mov    rax,QWORD PTR [r12]
  40c3a9:	test   rax,rax
  40c3ac:	je     0x40c532
  40c3b2:	mov    edx,DWORD PTR [rsp+0x160]
  40c3b9:	test   edx,edx
  40c3bb:	je     0x40c570
  40c3c1:	cmp    DWORD PTR [rsp+0x160],0x1
  40c3c9:	jne    0x40c603
  40c3cf:	lea    r13,[r14+0x18]
  40c3d3:	mov    QWORD PTR [rsp+0x48],r14
  40c3d8:	test   BYTE PTR [r14+0x30],0x1
  40c3dd:	jne    0x40c587
  40c3e3:	mov    rcx,QWORD PTR [r13+0x10]
  40c3e7:	cmp    rcx,0xffffffffffffffff
  40c3eb:	je     0x40c587
  40c3f1:	lea    rax,[rsp+0xb8]
  40c3f9:	mov    rbp,r13
  40c3fc:	xor    esi,esi
  40c3fe:	mov    QWORD PTR [rsp+0x30],0xffffffffffffffff
  40c407:	mov    r13,QWORD PTR [rsp+0x178]
  40c40f:	mov    QWORD PTR [rsp+0x58],rax
  40c414:	lea    rax,[rsp+0xb0]
  40c41c:	mov    QWORD PTR [rsp+0x60],rax
  40c421:	lea    rax,[rsp+0xe0]
  40c429:	mov    QWORD PTR [rsp+0x68],rax
  40c42e:	lea    rax,[rsp+0xc8]
  40c436:	mov    QWORD PTR [rsp+0x70],rax
  40c43b:	lea    rax,[rsp+0xd8]
  40c443:	mov    QWORD PTR [rsp+0x78],rax
  40c448:	lea    rax,[rsp+0xf0]
  40c450:	mov    QWORD PTR [rsp+0x80],rax
  40c458:	jmp    0x40c46f
  40c45a:	nop    WORD PTR [rax+rax*1+0x0]
  40c460:	test   rbx,rbx
  40c463:	je     0x40c5e0
  40c469:	xor    ebx,ebx
  40c46b:	mov    rcx,QWORD PTR [rbp+0x10]
  40c46f:	mov    QWORD PTR [rsp+0x20],r15
  40c474:	mov    r9,r13
  40c477:	mov    r8,r12
  40c47a:	mov    rdx,rbx
  40c47d:	call   0x42b050
  40c482:	cmp    rax,0xffffffffffffffff
  40c486:	jne    0x40c460
  40c488:	mov    QWORD PTR [rsp+0x50],rax
  40c48d:	call   QWORD PTR [rip+0x365c9]        # 0x442a5c
  40c493:	mov    eax,DWORD PTR [rax]
  40c495:	mov    r10,QWORD PTR [rsp+0x50]
  40c49a:	cmp    eax,0x2a
  40c49d:	mov    DWORD PTR [rsp+0x3c],eax
  40c4a1:	je     0x40c6e0
  40c4a7:	test   esi,esi
  40c4a9:	mov    rbp,r10
  40c4ac:	je     0x40c4f0
  40c4ae:	test   BYTE PTR [r14+0x34],0x2
  40c4b3:	jne    0x40c4f0
  40c4b5:	cmp    DWORD PTR [rsp+0x160],0x1
  40c4bd:	je     0x40ca9e
  40c4c3:	cmp    QWORD PTR [rsp+0x150],0x0
  40c4cc:	je     0x40c4eb
  40c4ce:	mov    rax,QWORD PTR [rsp+0x150]
  40c4d6:	xor    r9d,r9d
  40c4d9:	mov    r8d,0x962
  40c4df:	mov    rcx,QWORD PTR [rax+0x28]
  40c4e3:	mov    rdx,rax
  40c4e6:	call   0x423700
  40c4eb:	or     BYTE PTR [r14+0x34],0x2
  40c4f0:	mov    eax,DWORD PTR [rsp+0x3c]
  40c4f4:	cmp    eax,0x7
  40c4f7:	je     0x40c6a1
  40c4fd:	cmp    eax,0x16
  40c500:	je     0x40c650
  40c506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c510:	mov    rax,QWORD PTR [rsp+0x30]
  40c515:	cmp    rax,0xffffffffffffffff
  40c519:	je     0x40c523
  40c51b:	mov    rcx,rax
  40c51e:	call   0x42b048
  40c523:	call   QWORD PTR [rip+0x36533]        # 0x442a5c
  40c529:	mov    edi,DWORD PTR [rsp+0x3c]
  40c52d:	mov    DWORD PTR [rax],edi
  40c52f:	mov    rax,rbp
  40c532:	add    rsp,0x108
  40c539:	pop    rbx
  40c53a:	pop    rsi
  40c53b:	pop    rdi
  40c53c:	pop    rbp
  40c53d:	pop    r12
  40c53f:	pop    r13
  40c541:	pop    r14
  40c543:	pop    r15
  40c545:	ret    
  40c546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c550:	lea    rdx,[rip+0x24f61]        # 0x4314b8
  40c557:	lea    rcx,[rip+0x25242]        # 0x4317a0
  40c55e:	mov    r8d,0x235
  40c564:	call   0x42d350
  40c569:	jmp    0x40c3a5
  40c56e:	xchg   ax,ax
  40c570:	test   BYTE PTR [r14+0x30],0x1
  40c575:	lea    rax,[r14+0x18]
  40c579:	mov    r13,r14
  40c57c:	mov    QWORD PTR [rsp+0x48],rax
  40c581:	je     0x40c3e3
  40c587:	mov    rsi,QWORD PTR [r15]
  40c58a:	mov    rax,QWORD PTR [rsp+0x178]
  40c592:	cmp    QWORD PTR [r12],rsi
  40c596:	mov    rdx,QWORD PTR [rbx]
  40c599:	cmovbe rsi,QWORD PTR [r12]
  40c59e:	mov    rcx,QWORD PTR [rax]
  40c5a1:	mov    r8,rsi
  40c5a4:	call   0x42d6a8
  40c5a9:	call   QWORD PTR [rip+0x364ad]        # 0x442a5c
  40c5af:	mov    rdx,QWORD PTR [r12]
  40c5b3:	cmp    QWORD PTR [r15],rdx
  40c5b6:	sbb    ecx,ecx
  40c5b8:	sub    rdx,rsi
  40c5bb:	and    ecx,0x7
  40c5be:	mov    DWORD PTR [rax],ecx
  40c5c0:	mov    rax,QWORD PTR [rsp+0x178]
  40c5c8:	mov    QWORD PTR [r12],rdx
  40c5cc:	sub    QWORD PTR [r15],rsi
  40c5cf:	add    QWORD PTR [rbx],rsi
  40c5d2:	add    QWORD PTR [rax],rsi
  40c5d5:	xor    eax,eax
  40c5d7:	jmp    0x40c532
  40c5dc:	nop    DWORD PTR [rax+0x0]
  40c5e0:	test   esi,esi
  40c5e2:	mov    rbp,rax
  40c5e5:	mov    DWORD PTR [rsp+0x3c],0x0
  40c5ed:	je     0x40c510
  40c5f3:	test   BYTE PTR [r14+0x34],0x2
  40c5f8:	je     0x40c4b5
  40c5fe:	jmp    0x40c510
  40c603:	mov    rax,QWORD PTR [rip+0x2f826]        # 0x43be30
  40c60a:	mov    eax,DWORD PTR [rax]
  40c60c:	test   eax,eax
  40c60e:	jne    0x40c861
  40c614:	cmp    DWORD PTR [rsp+0x160],0x1
  40c61c:	jbe    0x40c690
  40c61e:	lea    rdx,[rip+0x24e93]        # 0x4314b8
  40c625:	lea    rcx,[rip+0x251e4]        # 0x431810
  40c62c:	mov    r8d,0x24a
  40c632:	xor    r13d,r13d
  40c635:	call   0x42d350
  40c63a:	mov    QWORD PTR [rsp+0x48],0x0
  40c643:	jmp    0x40c3d8
  40c648:	nop    DWORD PTR [rax+rax*1+0x0]
  40c650:	test   BYTE PTR [r14+0x34],0x4
  40c655:	jne    0x40c510
  40c65b:	cmp    QWORD PTR [rsp+0x150],0x0
  40c664:	je     0x40c683
  40c666:	mov    rax,QWORD PTR [rsp+0x150]
  40c66e:	xor    r9d,r9d
  40c671:	mov    r8d,0x961
  40c677:	mov    rcx,QWORD PTR [rax+0x28]
  40c67b:	mov    rdx,rax
  40c67e:	call   0x423700
  40c683:	or     BYTE PTR [r14+0x34],0x4
  40c688:	jmp    0x40c510
  40c68d:	nop    DWORD PTR [rax]
  40c690:	xor    r13d,r13d
  40c693:	mov    QWORD PTR [rsp+0x48],0x0
  40c69c:	jmp    0x40c3d8
  40c6a1:	test   BYTE PTR [r14+0x34],0x1
  40c6a6:	jne    0x40c510
  40c6ac:	cmp    QWORD PTR [rsp+0x150],0x0
  40c6b5:	je     0x40c6d4
  40c6b7:	mov    rax,QWORD PTR [rsp+0x150]
  40c6bf:	xor    r9d,r9d
  40c6c2:	mov    r8d,0x960
  40c6c8:	mov    rcx,QWORD PTR [rax+0x28]
  40c6cc:	mov    rdx,rax
  40c6cf:	call   0x423700
  40c6d4:	or     BYTE PTR [r14+0x34],0x1
  40c6d9:	jmp    0x40c510
  40c6de:	xchg   ax,ax
  40c6e0:	cmp    DWORD PTR [rsp+0x160],0x1
  40c6e8:	jne    0x40c859
  40c6ee:	test   rbx,rbx
  40c6f1:	je     0x40c859
  40c6f7:	mov    rdi,QWORD PTR [rsp+0x48]
  40c6fc:	mov    r11,QWORD PTR [rbp+0x10]
  40c700:	movzx  eax,BYTE PTR [rdi+0x8]
  40c704:	cmp    al,BYTE PTR [rdi+0x9]
  40c707:	je     0x40c810
  40c70d:	mov    rax,QWORD PTR [rsp+0x48]
  40c712:	lea    rdi,[rip+0x24f54]        # 0x43166d
  40c719:	mov    ecx,0x6
  40c71e:	mov    rsi,QWORD PTR [rax]
  40c721:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40c723:	jne    0x40c890
  40c729:	mov    rdx,QWORD PTR [rbx]
  40c72c:	xor    esi,esi
  40c72e:	movsx  eax,BYTE PTR [rdx]
  40c731:	mov    ecx,eax
  40c733:	sar    ecx,1
  40c735:	and    eax,ecx
  40c737:	nop    WORD PTR [rax+rax*1+0x0]
  40c740:	add    eax,eax
  40c742:	add    esi,0x1
  40c745:	test   al,0x80
  40c747:	jne    0x40c740
  40c749:	mov    rax,QWORD PTR [r12]
  40c74d:	cmp    rsi,rax
  40c750:	ja     0x40c7d0
  40c752:	add    rdx,rsi
  40c755:	sub    rax,rsi
  40c758:	mov    QWORD PTR [rbx],rdx
  40c75b:	mov    QWORD PTR [r12],rax
  40c75f:	test   rsi,rsi
  40c762:	je     0x40c859
  40c768:	cmp    QWORD PTR [rsp+0x30],0xffffffffffffffff
  40c76e:	je     0x40c830
  40c774:	mov    rax,QWORD PTR [rsp+0x40]
  40c779:	mov    r8,QWORD PTR [rsp+0x58]
  40c77e:	mov    r9,r13
  40c781:	mov    rdx,QWORD PTR [rsp+0x60]
  40c786:	mov    rcx,QWORD PTR [rsp+0x30]
  40c78b:	mov    QWORD PTR [rsp+0x20],r15
  40c790:	mov    QWORD PTR [rsp+0xb8],0x1
  40c79c:	mov    QWORD PTR [rsp+0xb0],rax
  40c7a4:	call   0x42b050
  40c7a9:	cmp    rax,0xffffffffffffffff
  40c7ad:	mov    r10,rax
  40c7b0:	je     0x40c859
  40c7b6:	cmp    QWORD PTR [r12],0x0
  40c7bb:	je     0x40c859
  40c7c1:	mov    esi,0x1
  40c7c6:	jmp    0x40c46b
  40c7cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c7d0:	test   BYTE PTR [r14+0x34],0x2
  40c7d5:	mov    rbp,r10
  40c7d8:	jne    0x40c510
  40c7de:	cmp    QWORD PTR [rsp+0x150],0x0
  40c7e7:	je     0x40c4eb
  40c7ed:	mov    rax,QWORD PTR [rsp+0x150]
  40c7f5:	xor    r9d,r9d
  40c7f8:	mov    r8d,0x964
  40c7fe:	mov    rcx,QWORD PTR [rax+0x28]
  40c802:	mov    rdx,rax
  40c805:	call   0x423700
  40c80a:	jmp    0x40c4eb
  40c80f:	nop
  40c810:	test   al,al
  40c812:	je     0x40c70d
  40c818:	mov    rdx,QWORD PTR [r12]
  40c81c:	cmp    rax,rdx
  40c81f:	ja     0x40c7d0
  40c821:	sub    rdx,rax
  40c824:	add    QWORD PTR [rbx],rax
  40c827:	mov    QWORD PTR [r12],rdx
  40c82b:	jmp    0x40c768
  40c830:	mov    rdx,QWORD PTR [rip+0x34891]        # 0x4410c8
  40c837:	mov    rcx,QWORD PTR [rbp+0x0]
  40c83b:	mov    QWORD PTR [rsp+0x50],r10
  40c840:	call   0x42b040
  40c845:	cmp    rax,0xffffffffffffffff
  40c849:	mov    QWORD PTR [rsp+0x30],rax
  40c84e:	mov    r10,QWORD PTR [rsp+0x50]
  40c853:	jne    0x40c774
  40c859:	mov    rbp,r10
  40c85c:	jmp    0x40c5f3
  40c861:	mov    r9d,DWORD PTR [rsp+0x160]
  40c869:	lea    r8,[rip+0x24f60]        # 0x4317d0
  40c870:	lea    rcx,[rip+0x24c41]        # 0x4314b8
  40c877:	mov    edx,0x2497
  40c87c:	call   0x40d350
  40c881:	jmp    0x40c614
  40c886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c890:	mov    rax,QWORD PTR [rsp+0x68]
  40c895:	mov    r9,QWORD PTR [rsp+0x70]
  40c89a:	xor    r8d,r8d
  40c89d:	xor    edx,edx
  40c89f:	mov    rcx,r11
  40c8a2:	mov    QWORD PTR [rsp+0x88],r10
  40c8aa:	mov    QWORD PTR [rsp+0x90],r11
  40c8b2:	mov    QWORD PTR [rsp+0xd8],0x10
  40c8be:	mov    QWORD PTR [rsp+0xc8],rax
  40c8c6:	mov    rax,QWORD PTR [rsp+0x78]
  40c8cb:	mov    QWORD PTR [rsp+0x20],rax
  40c8d0:	call   0x42b050
  40c8d5:	mov    rax,QWORD PTR [rsp+0x48]
  40c8da:	lea    rcx,[rip+0x24f52]        # 0x431833
  40c8e1:	mov    rdx,QWORD PTR [rax]
  40c8e4:	call   0x42b040
  40c8e9:	cmp    rax,0xffffffffffffffff
  40c8ed:	mov    QWORD PTR [rsp+0x50],rax
  40c8f2:	mov    r10,QWORD PTR [rsp+0x88]
  40c8fa:	je     0x40c7d0
  40c900:	mov    rax,QWORD PTR [rsp+0xd8]
  40c908:	mov    rdi,QWORD PTR [r12]
  40c90c:	mov    r11,QWORD PTR [rsp+0x90]
  40c914:	cmp    rax,rdi
  40c917:	mov    QWORD PTR [rsp+0xd0],rax
  40c91f:	jbe    0x40cae1
  40c925:	mov    QWORD PTR [rsp+0xd0],rdi
  40c92d:	mov    esi,0x10
  40c932:	mov    rdx,QWORD PTR [rbx]
  40c935:	mov    r8,rdi
  40c938:	sub    rsi,rax
  40c93b:	mov    rax,QWORD PTR [rsp+0x68]
  40c940:	mov    QWORD PTR [rsp+0x98],r10
  40c948:	mov    QWORD PTR [rsp+0x90],r11
  40c950:	add    rdi,rsi
  40c953:	lea    rcx,[rax+rsi*1]
  40c957:	call   0x42d6a8
  40c95c:	lea    rdx,[rsp+0xc0]
  40c964:	mov    QWORD PTR [rsp+0xd0],rdi
  40c96c:	mov    rdi,QWORD PTR [rsp+0x80]
  40c974:	mov    rax,QWORD PTR [rsp+0x68]
  40c979:	mov    r9,QWORD PTR [rsp+0x70]
  40c97e:	mov    rcx,rdx
  40c981:	mov    rdx,QWORD PTR [rsp+0x78]
  40c986:	mov    QWORD PTR [rsp+0xd8],0x4
  40c992:	mov    QWORD PTR [rsp+0xc8],rdi
  40c99a:	mov    QWORD PTR [rsp+0x88],rcx
  40c9a2:	lea    rdi,[rsp+0xd0]
  40c9aa:	mov    QWORD PTR [rsp+0xc0],rax
  40c9b2:	mov    QWORD PTR [rsp+0x20],rdx
  40c9b7:	mov    rdx,rcx
  40c9ba:	mov    rcx,QWORD PTR [rsp+0x50]
  40c9bf:	mov    r8,rdi
  40c9c2:	call   0x42b050
  40c9c7:	mov    r11,QWORD PTR [rsp+0x68]
  40c9cc:	mov    r8,QWORD PTR [rsp+0xc0]
  40c9d4:	xor    edx,edx
  40c9d6:	mov    r9,QWORD PTR [rsp+0x78]
  40c9db:	mov    QWORD PTR [rsp+0xd8],0x10
  40c9e7:	sub    r8,r11
  40c9ea:	mov    QWORD PTR [rsp+0xc8],r11
  40c9f2:	mov    r11,QWORD PTR [rsp+0x90]
  40c9fa:	mov    rax,r8
  40c9fd:	xor    r8d,r8d
  40ca00:	sub    rax,rsi
  40ca03:	add    QWORD PTR [rbx],rax
  40ca06:	sub    QWORD PTR [r12],rax
  40ca0a:	mov    QWORD PTR [rsp+0x20],r9
  40ca0f:	mov    r9,QWORD PTR [rsp+0x70]
  40ca14:	mov    rcx,r11
  40ca17:	mov    rsi,rax
  40ca1a:	call   0x42b050
  40ca1f:	mov    r11,QWORD PTR [rsp+0x68]
  40ca24:	mov    eax,0x10
  40ca29:	sub    rax,QWORD PTR [rsp+0xd8]
  40ca31:	mov    r9,QWORD PTR [rsp+0x70]
  40ca36:	mov    rdx,QWORD PTR [rsp+0x88]
  40ca3e:	mov    r8,rdi
  40ca41:	mov    QWORD PTR [rsp+0xd8],0x10
  40ca4d:	mov    QWORD PTR [rsp+0xc0],r11
  40ca55:	mov    r11,QWORD PTR [rsp+0x80]
  40ca5d:	mov    QWORD PTR [rsp+0xd0],rax
  40ca65:	mov    rax,QWORD PTR [rsp+0x78]
  40ca6a:	mov    QWORD PTR [rsp+0xc8],r11
  40ca72:	mov    r11,QWORD PTR [rsp+0x90]
  40ca7a:	mov    QWORD PTR [rsp+0x20],rax
  40ca7f:	mov    rcx,r11
  40ca82:	call   0x42b050
  40ca87:	mov    rcx,QWORD PTR [rsp+0x50]
  40ca8c:	call   0x42b048
  40ca91:	mov    r10,QWORD PTR [rsp+0x98]
  40ca99:	jmp    0x40c75f
  40ca9e:	cmp    rbp,0xffffffffffffffff
  40caa2:	je     0x40c7de
  40caa8:	cmp    QWORD PTR [rsp+0x150],0x0
  40cab1:	mov    DWORD PTR [rsp+0x3c],0x0
  40cab9:	je     0x40c4eb
  40cabf:	mov    rax,QWORD PTR [rsp+0x150]
  40cac7:	xor    r9d,r9d
  40caca:	mov    r8d,0x963
  40cad0:	mov    rcx,QWORD PTR [rax+0x28]
  40cad4:	mov    rdx,rax
  40cad7:	call   0x423700
  40cadc:	jmp    0x40c4eb
  40cae1:	mov    rdi,rax
  40cae4:	jmp    0x40c92d
  40cae9:	nop    DWORD PTR [rax+0x0]
  40caf0:	push   rbp
  40caf1:	push   rdi
  40caf2:	push   rsi
  40caf3:	push   rbx
  40caf4:	sub    rsp,0x28
  40caf8:	mov    rdi,r8
  40cafb:	mov    rbx,rcx
  40cafe:	mov    rcx,rdx
  40cb01:	mov    rbp,rdx
  40cb04:	call   0x40b450
  40cb09:	mov    rcx,rdi
  40cb0c:	mov    esi,eax
  40cb0e:	call   0x40b450
  40cb13:	test   esi,esi
  40cb15:	js     0x40cb60
  40cb17:	test   eax,eax
  40cb19:	js     0x40cb40
  40cb1b:	lea    rdx,[rbx+0x68]
  40cb1f:	lea    rcx,[rbx+0x60]
  40cb23:	mov    r9d,eax
  40cb26:	mov    r8d,esi
  40cb29:	add    rsp,0x28
  40cb2d:	pop    rbx
  40cb2e:	pop    rsi
  40cb2f:	pop    rdi
  40cb30:	pop    rbp
  40cb31:	jmp    0x40b890
  40cb36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cb40:	mov    rax,QWORD PTR [rip+0x2f2e9]        # 0x43be30
  40cb47:	mov    eax,DWORD PTR [rax]
  40cb49:	test   eax,eax
  40cb4b:	jne    0x40cb90
  40cb4d:	xor    eax,eax
  40cb4f:	add    rsp,0x28
  40cb53:	pop    rbx
  40cb54:	pop    rsi
  40cb55:	pop    rdi
  40cb56:	pop    rbp
  40cb57:	ret    
  40cb58:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb60:	mov    rax,QWORD PTR [rip+0x2f2c9]        # 0x43be30
  40cb67:	mov    edx,DWORD PTR [rax]
  40cb69:	test   edx,edx
  40cb6b:	je     0x40cb4d
  40cb6d:	lea    r8,[rip+0x24ccc]        # 0x431840
  40cb74:	lea    rcx,[rip+0x2493d]        # 0x4314b8
  40cb7b:	mov    r9,rbp
  40cb7e:	mov    edx,0x2f87
  40cb83:	call   0x40d350
  40cb88:	jmp    0x40cb4d
  40cb8a:	nop    WORD PTR [rax+rax*1+0x0]
  40cb90:	lea    r8,[rip+0x24ca9]        # 0x431840
  40cb97:	lea    rcx,[rip+0x2491a]        # 0x4314b8
  40cb9e:	mov    r9,rdi
  40cba1:	mov    edx,0x2fc7
  40cba6:	call   0x40d350
  40cbab:	jmp    0x40cb4d
  40cbad:	nop    DWORD PTR [rax]
  40cbb0:	push   rsi
  40cbb1:	push   rbx
  40cbb2:	sub    rsp,0x28
  40cbb6:	mov    rsi,rcx
  40cbb9:	mov    rcx,rdx
  40cbbc:	mov    rbx,rdx
  40cbbf:	call   0x40b450
  40cbc4:	test   eax,eax
  40cbc6:	js     0x40cbe0
  40cbc8:	mov    edx,eax
  40cbca:	mov    rcx,rsi
  40cbcd:	add    rsp,0x28
  40cbd1:	pop    rbx
  40cbd2:	pop    rsi
  40cbd3:	jmp    0x40ba10
  40cbd8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cbe0:	mov    rax,QWORD PTR [rip+0x2f249]        # 0x43be30
  40cbe7:	mov    eax,DWORD PTR [rax]
  40cbe9:	test   eax,eax
  40cbeb:	jne    0x40cbf4
  40cbed:	add    rsp,0x28
  40cbf1:	pop    rbx
  40cbf2:	pop    rsi
  40cbf3:	ret    
  40cbf4:	lea    r8,[rip+0x24c6d]        # 0x431868
  40cbfb:	lea    rcx,[rip+0x248b6]        # 0x4314b8
  40cc02:	mov    r9,rbx
  40cc05:	mov    edx,0x31e7
  40cc0a:	add    rsp,0x28
  40cc0e:	pop    rbx
  40cc0f:	pop    rsi
  40cc10:	jmp    0x40d350
  40cc15:	nop
  40cc16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cc20:	push   rbx
  40cc21:	sub    rsp,0x20
  40cc25:	mov    rbx,rcx
  40cc28:	mov    ecx,edx
  40cc2a:	mov    edx,r8d
  40cc2d:	call   0x40ae60
  40cc32:	mov    rcx,rbx
  40cc35:	mov    edx,eax
  40cc37:	add    rsp,0x20
  40cc3b:	pop    rbx
  40cc3c:	jmp    0x40ba10
  40cc41:	nop    DWORD PTR [rax+rax*1+0x0]
  40cc46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cc50:	push   rbx
  40cc51:	sub    rsp,0x20
  40cc55:	mov    rbx,rcx
  40cc58:	call   0x40b450
  40cc5d:	test   eax,eax
  40cc5f:	js     0x40cc80
  40cc61:	lea    rdx,[rip+0x27558]        # 0x4341c0
  40cc68:	cdqe   
  40cc6a:	shl    rax,0x4
  40cc6e:	mov    rax,QWORD PTR [rdx+rax*1]
  40cc72:	add    rsp,0x20
  40cc76:	pop    rbx
  40cc77:	ret    
  40cc78:	nop    DWORD PTR [rax+rax*1+0x0]
  40cc80:	mov    rax,rbx
  40cc83:	add    rsp,0x20
  40cc87:	pop    rbx
  40cc88:	ret    
  40cc89:	nop    DWORD PTR [rax+0x0]
  40cc90:	push   rbx
  40cc91:	sub    rsp,0x20
  40cc95:	movzx  eax,BYTE PTR [rdx+0x1]
  40cc99:	mov    rbx,rcx
  40cc9c:	movzx  ecx,BYTE PTR [rdx]
  40cc9f:	shl    eax,0x8
  40cca2:	add    eax,ecx
  40cca4:	movzx  ecx,BYTE PTR [rdx+0x4]
  40cca8:	mov    edx,eax
  40ccaa:	call   0x40ae60
  40ccaf:	mov    rdx,QWORD PTR [rbx+0x68]
  40ccb3:	mov    r9d,eax
  40ccb6:	mov    rax,QWORD PTR [rdx+0x8]
  40ccba:	movzx  ecx,BYTE PTR [rax+0xa]
  40ccbe:	cmp    ecx,r9d
  40ccc1:	je     0x40cce0
  40ccc3:	mov    rax,QWORD PTR [rdx]
  40ccc6:	lea    rcx,[rbx+0x60]
  40ccca:	lea    rdx,[rbx+0x68]
  40ccce:	movzx  r8d,BYTE PTR [rax+0x22]
  40ccd3:	add    rsp,0x20
  40ccd7:	pop    rbx
  40ccd8:	jmp    0x40b890
  40ccdd:	nop    DWORD PTR [rax]
  40cce0:	add    rsp,0x20
  40cce4:	pop    rbx
  40cce5:	ret    
  40cce6:	nop
  40cce7:	nop
  40cce8:	nop
  40cce9:	nop
  40ccea:	nop
  40cceb:	nop
  40ccec:	nop
  40cced:	nop
  40ccee:	nop
  40ccef:	nop
  40ccf0:	push   r13
  40ccf2:	push   r12
  40ccf4:	push   rbp
  40ccf5:	push   rdi
  40ccf6:	push   rsi
  40ccf7:	push   rbx
  40ccf8:	sub    rsp,0xa8
  40ccff:	mov    eax,DWORD PTR [rip+0x2130b]        # 0x42e010
  40cd05:	mov    rbp,rcx
  40cd08:	mov    rdi,rdx
  40cd0b:	mov    r12d,r8d
  40cd0e:	test   ah,0x20
  40cd11:	jne    0x40ce10
  40cd17:	test   ah,0x10
  40cd1a:	je     0x40cdc0
  40cd20:	lea    rsi,[rsp+0x20]
  40cd25:	mov    rbx,rsi
  40cd28:	call   QWORD PTR [rip+0x35bde]        # 0x44290c
  40cd2e:	lea    rdx,[rip+0x27b0b]        # 0x434840
  40cd35:	mov    rcx,rbx
  40cd38:	mov    r8d,eax
  40cd3b:	call   0x42d648
  40cd40:	cdqe   
  40cd42:	add    rbx,rax
  40cd45:	test   BYTE PTR [rip+0x212c5],0x40        # 0x42e011
  40cd4c:	je     0x40cdb1
  40cd4e:	test   rdi,rdi
  40cd51:	je     0x40cdb1
  40cd53:	test   r12d,r12d
  40cd56:	mov    r13d,0x1
  40cd5c:	je     0x40cdb1
  40cd5e:	mov    rcx,rdi
  40cd61:	mov    edx,0x2f
  40cd66:	call   0x42d600
  40cd6b:	lea    rdx,[rax+0x1]
  40cd6f:	test   rax,rax
  40cd72:	cmovne rdi,rdx
  40cd76:	mov    edx,0x5c
  40cd7b:	mov    rcx,rdi
  40cd7e:	call   0x42d600
  40cd83:	lea    rdx,[rax+0x1]
  40cd87:	test   rax,rax
  40cd8a:	mov    r9d,r12d
  40cd8d:	cmovne rdi,rdx
  40cd91:	test   r13d,r13d
  40cd94:	mov    r8,rdi
  40cd97:	je     0x40ce70
  40cd9d:	lea    rdx,[rip+0x27a9f]        # 0x434843
  40cda4:	mov    rcx,rbx
  40cda7:	call   0x42d648
  40cdac:	cdqe   
  40cdae:	add    rbx,rax
  40cdb1:	lea    rax,[rbx+0x1]
  40cdb5:	mov    BYTE PTR [rbx],0x3a
  40cdb8:	jmp    0x40cde8
  40cdba:	nop    WORD PTR [rax+rax*1+0x0]
  40cdc0:	test   ah,0x40
  40cdc3:	je     0x40cde0
  40cdc5:	test   rdx,rdx
  40cdc8:	je     0x40cde0
  40cdca:	test   r8d,r8d
  40cdcd:	je     0x40cde0
  40cdcf:	lea    rsi,[rsp+0x20]
  40cdd4:	xor    r13d,r13d
  40cdd7:	mov    rbx,rsi
  40cdda:	jmp    0x40cd5e
  40cddc:	nop    DWORD PTR [rax+0x0]
  40cde0:	lea    rsi,[rsp+0x20]
  40cde5:	mov    rax,rsi
  40cde8:	mov    rdx,rbp
  40cdeb:	mov    rcx,rsi
  40cdee:	mov    BYTE PTR [rax],0x0
  40cdf1:	call   0x42d700
  40cdf6:	nop
  40cdf7:	add    rsp,0xa8
  40cdfe:	pop    rbx
  40cdff:	pop    rsi
  40ce00:	pop    rdi
  40ce01:	pop    rbp
  40ce02:	pop    r12
  40ce04:	pop    r13
  40ce06:	ret    
  40ce07:	nop    WORD PTR [rax+rax*1+0x0]
  40ce10:	lea    rsi,[rsp+0x20]
  40ce15:	mov    edx,0x7f
  40ce1a:	mov    rcx,rsi
  40ce1d:	call   0x41d840
  40ce22:	mov    rdx,rbp
  40ce25:	mov    rcx,rax
  40ce28:	call   0x42d700
  40ce2d:	mov    eax,DWORD PTR [rip+0x211dd]        # 0x42e010
  40ce33:	test   ah,0x10
  40ce36:	jne    0x40ce60
  40ce38:	test   ah,0x40
  40ce3b:	je     0x40ce54
  40ce3d:	test   rdi,rdi
  40ce40:	je     0x40ce54
  40ce42:	test   r12d,r12d
  40ce45:	mov    r13d,0x1
  40ce4b:	mov    rbx,rsi
  40ce4e:	jne    0x40cd5e
  40ce54:	mov    rbx,rsi
  40ce57:	lea    rax,[rbx+0x1]
  40ce5b:	mov    BYTE PTR [rbx],0x3a
  40ce5e:	jmp    0x40cde8
  40ce60:	mov    BYTE PTR [rsp+0x20],0x20
  40ce65:	lea    rbx,[rsi+0x1]
  40ce69:	jmp    0x40cd28
  40ce6e:	xchg   ax,ax
  40ce70:	lea    rdx,[rip+0x279d5]        # 0x43484c
  40ce77:	mov    rcx,rbx
  40ce7a:	call   0x42d648
  40ce7f:	cdqe   
  40ce81:	add    rbx,rax
  40ce84:	lea    rax,[rbx+0x1]
  40ce88:	mov    BYTE PTR [rbx],0x3a
  40ce8b:	jmp    0x40cde8
  40ce90:	push   rdi
  40ce91:	push   rsi
  40ce92:	sub    rsp,0x28
  40ce96:	mov    rax,QWORD PTR [rip+0x345c3]        # 0x441460
  40ce9d:	test   rax,rax
  40cea0:	je     0x40cf02
  40cea2:	lea    rdi,[rip+0x279a9]        # 0x434852
  40cea9:	mov    ecx,0x7
  40ceae:	mov    rsi,rax
  40ceb1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40ceb3:	je     0x40cef1
  40ceb5:	lea    rdi,[rip+0x2799d]        # 0x434859
  40cebc:	mov    ecx,0x7
  40cec1:	mov    rsi,rax
  40cec4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40cec6:	je     0x40cee0
  40cec8:	lea    rdx,[rip+0x27991]        # 0x434860
  40cecf:	mov    rcx,rax
  40ced2:	add    rsp,0x28
  40ced6:	pop    rsi
  40ced7:	pop    rdi
  40ced8:	jmp    0x42d718
  40cedd:	nop    DWORD PTR [rax]
  40cee0:	call   QWORD PTR [rip+0x35b3e]        # 0x442a24
  40cee6:	add    rax,0x60
  40ceea:	add    rsp,0x28
  40ceee:	pop    rsi
  40ceef:	pop    rdi
  40cef0:	ret    
  40cef1:	call   QWORD PTR [rip+0x35b2d]        # 0x442a24
  40cef7:	add    rax,0x30
  40cefb:	add    rsp,0x28
  40ceff:	pop    rsi
  40cf00:	pop    rdi
  40cf01:	ret    
  40cf02:	xor    eax,eax
  40cf04:	jmp    0x40ceea
  40cf06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf10:	sub    rsp,0x28
  40cf14:	mov    eax,DWORD PTR [rip+0x3450e]        # 0x441428
  40cf1a:	test   eax,eax
  40cf1c:	jne    0x40cf50
  40cf1e:	lea    rcx,[rip+0x344fb]        # 0x441420
  40cf25:	call   0x424920
  40cf2a:	mov    rax,QWORD PTR [rip+0x35a33]        # 0x442964
  40cf31:	lea    rcx,[rip+0x344f8]        # 0x441430
  40cf38:	mov    DWORD PTR [rip+0x344be],0x0        # 0x441400
  40cf42:	add    rsp,0x28
  40cf46:	rex.W jmp rax
  40cf49:	nop    DWORD PTR [rax+0x0]
  40cf50:	lea    rcx,[rip+0x344d9]        # 0x441430
  40cf57:	call   QWORD PTR [rip+0x35997]        # 0x4428f4
  40cf5d:	jmp    0x40cf2a
  40cf5f:	nop
  40cf60:	sub    rsp,0x28
  40cf64:	mov    eax,DWORD PTR [rip+0x344be]        # 0x441428
  40cf6a:	test   eax,eax
  40cf6c:	jne    0x40cfa3
  40cf6e:	lea    rcx,[rip+0x344ab]        # 0x441420
  40cf75:	call   0x424920
  40cf7a:	cmp    QWORD PTR [rip+0x344d6],0x0        # 0x441458
  40cf82:	je     0x40cfba
  40cf84:	mov    DWORD PTR [rip+0x34472],0x1        # 0x441400
  40cf8e:	mov    rax,QWORD PTR [rip+0x359cf]        # 0x442964
  40cf95:	lea    rcx,[rip+0x34494]        # 0x441430
  40cf9c:	add    rsp,0x28
  40cfa0:	rex.W jmp rax
  40cfa3:	lea    rcx,[rip+0x34486]        # 0x441430
  40cfaa:	call   QWORD PTR [rip+0x35944]        # 0x4428f4
  40cfb0:	cmp    QWORD PTR [rip+0x344a0],0x0        # 0x441458
  40cfb8:	jne    0x40cf84
  40cfba:	cmp    QWORD PTR [rip+0x3449e],0x0        # 0x441460
  40cfc2:	jne    0x40cf84
  40cfc4:	jmp    0x40cf8e
  40cfc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cfd0:	cmp    QWORD PTR [rip+0x34480],0x0        # 0x441458
  40cfd8:	mov    eax,0x1
  40cfdd:	je     0x40cfe1
  40cfdf:	repz ret 
  40cfe1:	xor    eax,eax
  40cfe3:	cmp    QWORD PTR [rip+0x34475],0x0        # 0x441460
  40cfeb:	setne  al
  40cfee:	ret    
  40cfef:	nop
  40cff0:	push   rbx
  40cff1:	sub    rsp,0x20
  40cff5:	mov    eax,DWORD PTR [rip+0x3442d]        # 0x441428
  40cffb:	test   eax,eax
  40cffd:	jne    0x40d090
  40d003:	lea    rcx,[rip+0x34416]        # 0x441420
  40d00a:	call   0x424920
  40d00f:	cmp    QWORD PTR [rip+0x34441],0x0        # 0x441458
  40d017:	mov    DWORD PTR [rip+0x343df],0x0        # 0x441400
  40d021:	je     0x40d050
  40d023:	mov    rbx,QWORD PTR [rip+0x359fa]        # 0x442a24
  40d02a:	call   rbx
  40d02c:	add    rax,0x30
  40d030:	cmp    QWORD PTR [rip+0x34421],rax        # 0x441458
  40d037:	je     0x40d050
  40d039:	call   rbx
  40d03b:	mov    rcx,QWORD PTR [rip+0x34416]        # 0x441458
  40d042:	add    rax,0x60
  40d046:	cmp    rcx,rax
  40d049:	je     0x40d050
  40d04b:	call   0x42d730
  40d050:	mov    rcx,QWORD PTR [rip+0x34409]        # 0x441460
  40d057:	mov    QWORD PTR [rip+0x343f6],0x0        # 0x441458
  40d062:	test   rcx,rcx
  40d065:	je     0x40d077
  40d067:	call   0x42d6f8
  40d06c:	mov    QWORD PTR [rip+0x343e9],0x0        # 0x441460
  40d077:	mov    rax,QWORD PTR [rip+0x358e6]        # 0x442964
  40d07e:	lea    rcx,[rip+0x343ab]        # 0x441430
  40d085:	add    rsp,0x20
  40d089:	pop    rbx
  40d08a:	rex.W jmp rax
  40d08d:	nop    DWORD PTR [rax]
  40d090:	lea    rcx,[rip+0x34399]        # 0x441430
  40d097:	call   QWORD PTR [rip+0x35857]        # 0x4428f4
  40d09d:	jmp    0x40d00f
  40d0a2:	nop    DWORD PTR [rax+0x0]
  40d0a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d0b0:	push   r15
  40d0b2:	push   r14
  40d0b4:	push   r13
  40d0b6:	push   r12
  40d0b8:	push   rbp
  40d0b9:	push   rdi
  40d0ba:	push   rsi
  40d0bb:	push   rbx
  40d0bc:	sub    rsp,0xd8
  40d0c3:	mov    r10d,DWORD PTR [rip+0x20f46]        # 0x42e010
  40d0ca:	mov    rbp,QWORD PTR [rsp+0x140]
  40d0d2:	mov    eax,edx
  40d0d4:	and    eax,0xf
  40d0d7:	bt     r10d,eax
  40d0db:	jae    0x40d0e9
  40d0dd:	mov    r10d,DWORD PTR [rip+0x3431c]        # 0x441400
  40d0e4:	test   r10d,r10d
  40d0e7:	jne    0x40d0fd
  40d0e9:	add    rsp,0xd8
  40d0f0:	pop    rbx
  40d0f1:	pop    rsi
  40d0f2:	pop    rdi
  40d0f3:	pop    rbp
  40d0f4:	pop    r12
  40d0f6:	pop    r13
  40d0f8:	pop    r14
  40d0fa:	pop    r15
  40d0fc:	ret    
  40d0fd:	cmp    QWORD PTR [rip+0x34353],0x0        # 0x441458
  40d105:	je     0x40d2fe
  40d10b:	mov    rdi,r9
  40d10e:	mov    r9d,DWORD PTR [rip+0x34313]        # 0x441428
  40d115:	mov    rsi,r8
  40d118:	mov    ebx,edx
  40d11a:	mov    r12,rcx
  40d11d:	test   r9d,r9d
  40d120:	jne    0x40d2ec
  40d126:	lea    rcx,[rip+0x342f3]        # 0x441420
  40d12d:	call   0x424920
  40d132:	mov    r8d,DWORD PTR [rip+0x342cb]        # 0x441404
  40d139:	mov    rax,QWORD PTR [rip+0x34318]        # 0x441458
  40d140:	test   r8d,r8d
  40d143:	mov    QWORD PTR [rsp+0x38],rax
  40d148:	je     0x40d322
  40d14e:	test   rax,rax
  40d151:	je     0x40d311
  40d157:	shr    ebx,0x4
  40d15a:	mov    rdx,r12
  40d15d:	mov    r8d,ebx
  40d160:	mov    rbx,QWORD PTR [rsp+0x38]
  40d165:	mov    rcx,rbx
  40d168:	call   0x40ccf0
  40d16d:	lea    rdx,[rip+0x276ee]        # 0x434862
  40d174:	mov    r8,rsi
  40d177:	mov    rcx,rbx
  40d17a:	call   0x42d710
  40d17f:	test   rbp,rbp
  40d182:	je     0x40d2c0
  40d188:	lea    rax,[rsp+0x40]
  40d18d:	mov    r14,QWORD PTR [rip+0x359d0]        # 0x442b64
  40d194:	xor    esi,esi
  40d196:	mov    QWORD PTR [rsp+0x30],rax
  40d19b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d1a0:	mov    r15,QWORD PTR [rsp+0x30]
  40d1a5:	lea    rdx,[rip+0x276ba]        # 0x434866
  40d1ac:	movzx  r8d,si
  40d1b0:	xor    r12d,r12d
  40d1b3:	mov    rcx,r15
  40d1b6:	call   0x42d648
  40d1bb:	movsxd rbx,eax
  40d1be:	add    rbx,r15
  40d1c1:	jmp    0x40d1e0
  40d1c3:	add    r12,0x1
  40d1c7:	mov    ecx,0x2020
  40d1cc:	mov    BYTE PTR [r13+0x2],0x0
  40d1d1:	cmp    r12,0x10
  40d1d5:	mov    WORD PTR [r13+0x0],cx
  40d1da:	lea    rbx,[r13+0x2]
  40d1de:	je     0x40d21e
  40d1e0:	cmp    r12,0x8
  40d1e4:	lea    r13,[rbx+0x1]
  40d1e8:	je     0x40d330
  40d1ee:	mov    BYTE PTR [rbx],0x20
  40d1f1:	lea    rax,[r12+rsi*1]
  40d1f5:	cmp    rax,rbp
  40d1f8:	jae    0x40d1c3
  40d1fa:	movzx  r8d,BYTE PTR [rdi+r12*1]
  40d1ff:	lea    rdx,[rip+0x27665]        # 0x43486b
  40d206:	mov    rcx,r13
  40d209:	add    r12,0x1
  40d20d:	call   0x42d648
  40d212:	movsxd rbx,eax
  40d215:	add    rbx,r13
  40d218:	cmp    r12,0x10
  40d21c:	jne    0x40d1e0
  40d21e:	mov    edx,0x7c20
  40d223:	mov    BYTE PTR [rbx+0x2],0x0
  40d227:	add    rbx,0x2
  40d22b:	mov    WORD PTR [rbx-0x2],dx
  40d22f:	cmp    rbp,rsi
  40d232:	jbe    0x40d294
  40d234:	mov    rax,rbp
  40d237:	mov    r15d,0x1
  40d23d:	mov    r12b,0x2e
  40d240:	sub    rax,rsi
  40d243:	mov    QWORD PTR [rsp+0x28],rax
  40d248:	jmp    0x40d25e
  40d24a:	nop    WORD PTR [rax+rax*1+0x0]
  40d250:	cmp    r15,0x8
  40d254:	je     0x40d338
  40d25a:	add    r15,0x1
  40d25e:	movzx  r13d,BYTE PTR [rdi+r15*1-0x1]
  40d264:	mov    ecx,r13d
  40d267:	call   r14
  40d26a:	mov    r8d,r13d
  40d26d:	test   eax,eax
  40d26f:	lea    rdx,[rip+0x275fa]        # 0x434870
  40d276:	cmove  r8d,r12d
  40d27a:	mov    rcx,rbx
  40d27d:	call   0x42d648
  40d282:	cdqe   
  40d284:	add    rbx,rax
  40d287:	cmp    QWORD PTR [rsp+0x28],r15
  40d28c:	je     0x40d294
  40d28e:	cmp    r15,0x10
  40d292:	jne    0x40d250
  40d294:	mov    rdx,QWORD PTR [rsp+0x38]
  40d299:	mov    rcx,QWORD PTR [rsp+0x30]
  40d29e:	mov    eax,0xa7c
  40d2a3:	mov    WORD PTR [rbx],ax
  40d2a6:	mov    BYTE PTR [rbx+0x2],0x0
  40d2aa:	add    rsi,0x10
  40d2ae:	add    rdi,0x10
  40d2b2:	call   0x42d700
  40d2b7:	cmp    rbp,rsi
  40d2ba:	ja     0x40d1a0
  40d2c0:	mov    rdi,QWORD PTR [rsp+0x38]
  40d2c5:	mov    ecx,0xa
  40d2ca:	mov    rdx,rdi
  40d2cd:	call   0x42d708
  40d2d2:	mov    rcx,rdi
  40d2d5:	call   0x42d728
  40d2da:	lea    rcx,[rip+0x3414f]        # 0x441430
  40d2e1:	call   QWORD PTR [rip+0x3567d]        # 0x442964
  40d2e7:	jmp    0x40d0e9
  40d2ec:	lea    rcx,[rip+0x3413d]        # 0x441430
  40d2f3:	call   QWORD PTR [rip+0x355fb]        # 0x4428f4
  40d2f9:	jmp    0x40d132
  40d2fe:	cmp    QWORD PTR [rip+0x3415a],0x0        # 0x441460
  40d306:	jne    0x40d10b
  40d30c:	jmp    0x40d0e9
  40d311:	call   0x40ce90
  40d316:	mov    QWORD PTR [rsp+0x38],rax
  40d31b:	mov    QWORD PTR [rip+0x34136],rax        # 0x441458
  40d322:	cmp    QWORD PTR [rsp+0x38],0x0
  40d328:	jne    0x40d157
  40d32e:	jmp    0x40d2da
  40d330:	mov    BYTE PTR [rbx],0x2d
  40d333:	jmp    0x40d1f1
  40d338:	mov    BYTE PTR [rbx],0x20
  40d33b:	add    rbx,0x1
  40d33f:	jmp    0x40d25a
  40d344:	xchg   ax,ax
  40d346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d350:	push   rbp
  40d351:	push   rdi
  40d352:	push   rsi
  40d353:	push   rbx
  40d354:	sub    rsp,0x38
  40d358:	mov    r10d,DWORD PTR [rip+0x20cb1]        # 0x42e010
  40d35f:	mov    QWORD PTR [rsp+0x78],r9
  40d364:	mov    r9d,edx
  40d367:	and    r9d,0xf
  40d36b:	bt     r10d,r9d
  40d36f:	jae    0x40d37d
  40d371:	mov    r9d,DWORD PTR [rip+0x34088]        # 0x441400
  40d378:	test   r9d,r9d
  40d37b:	jne    0x40d390
  40d37d:	add    rsp,0x38
  40d381:	pop    rbx
  40d382:	pop    rsi
  40d383:	pop    rdi
  40d384:	pop    rbp
  40d385:	ret    
  40d386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d390:	cmp    QWORD PTR [rip+0x340c0],0x0        # 0x441458
  40d398:	je     0x40d430
  40d39e:	mov    ebx,edx
  40d3a0:	mov    edx,DWORD PTR [rip+0x34082]        # 0x441428
  40d3a6:	mov    rsi,r8
  40d3a9:	mov    rdi,rcx
  40d3ac:	test   edx,edx
  40d3ae:	jne    0x40d420
  40d3b0:	lea    rcx,[rip+0x34069]        # 0x441420
  40d3b7:	call   0x424920
  40d3bc:	mov    eax,DWORD PTR [rip+0x34042]        # 0x441404
  40d3c2:	mov    rbp,QWORD PTR [rip+0x3408f]        # 0x441458
  40d3c9:	test   eax,eax
  40d3cb:	je     0x40d452
  40d3d1:	test   rbp,rbp
  40d3d4:	je     0x40d443
  40d3d6:	shr    ebx,0x4
  40d3d9:	mov    rdx,rdi
  40d3dc:	mov    rcx,rbp
  40d3df:	mov    r8d,ebx
  40d3e2:	call   0x40ccf0
  40d3e7:	lea    r8,[rsp+0x78]
  40d3ec:	mov    rcx,rbp
  40d3ef:	mov    rdx,rsi
  40d3f2:	mov    QWORD PTR [rsp+0x28],r8
  40d3f7:	call   0x42d5d8
  40d3fc:	mov    rcx,rbp
  40d3ff:	call   0x42d728
  40d404:	lea    rcx,[rip+0x34025]        # 0x441430
  40d40b:	call   QWORD PTR [rip+0x35553]        # 0x442964
  40d411:	nop
  40d412:	add    rsp,0x38
  40d416:	pop    rbx
  40d417:	pop    rsi
  40d418:	pop    rdi
  40d419:	pop    rbp
  40d41a:	ret    
  40d41b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d420:	lea    rcx,[rip+0x34009]        # 0x441430
  40d427:	call   QWORD PTR [rip+0x354c7]        # 0x4428f4
  40d42d:	jmp    0x40d3bc
  40d42f:	nop
  40d430:	cmp    QWORD PTR [rip+0x34028],0x0        # 0x441460
  40d438:	jne    0x40d39e
  40d43e:	jmp    0x40d37d
  40d443:	call   0x40ce90
  40d448:	mov    rbp,rax
  40d44b:	mov    QWORD PTR [rip+0x34006],rax        # 0x441458
  40d452:	test   rbp,rbp
  40d455:	jne    0x40d3d6
  40d45b:	jmp    0x40d404
  40d45d:	nop    DWORD PTR [rax]
  40d460:	push   rbp
  40d461:	push   rdi
  40d462:	push   rsi
  40d463:	push   rbx
  40d464:	sub    rsp,0xb8
  40d46b:	mov    rbx,rcx
  40d46e:	mov    ecx,DWORD PTR [rip+0x33fb4]        # 0x441428
  40d474:	test   ecx,ecx
  40d476:	jne    0x40d590
  40d47c:	lea    rcx,[rip+0x33f9d]        # 0x441420
  40d483:	call   0x424920
  40d488:	test   rbx,rbx
  40d48b:	je     0x40d4b3
  40d48d:	mov    edx,DWORD PTR [rip+0x33f71]        # 0x441404
  40d493:	test   edx,edx
  40d495:	je     0x40d4b3
  40d497:	mov    rdx,QWORD PTR [rip+0x33fc2]        # 0x441460
  40d49e:	test   rdx,rdx
  40d4a1:	je     0x40d4b3
  40d4a3:	mov    rcx,rbx
  40d4a6:	call   0x42d630
  40d4ab:	test   eax,eax
  40d4ad:	je     0x40d570
  40d4b3:	cmp    QWORD PTR [rip+0x33f9d],0x0        # 0x441458
  40d4bb:	mov    DWORD PTR [rip+0x33f3b],0x0        # 0x441400
  40d4c5:	je     0x40d4f4
  40d4c7:	mov    rbp,QWORD PTR [rip+0x35556]        # 0x442a24
  40d4ce:	call   rbp
  40d4d0:	add    rax,0x30
  40d4d4:	cmp    QWORD PTR [rip+0x33f7d],rax        # 0x441458
  40d4db:	je     0x40d4f4
  40d4dd:	call   rbp
  40d4df:	mov    rcx,QWORD PTR [rip+0x33f72]        # 0x441458
  40d4e6:	add    rax,0x60
  40d4ea:	cmp    rcx,rax
  40d4ed:	je     0x40d4f4
  40d4ef:	call   0x42d730
  40d4f4:	mov    rcx,QWORD PTR [rip+0x33f65]        # 0x441460
  40d4fb:	mov    QWORD PTR [rip+0x33f52],0x0        # 0x441458
  40d506:	test   rcx,rcx
  40d509:	je     0x40d51b
  40d50b:	call   0x42d6f8
  40d510:	mov    QWORD PTR [rip+0x33f45],0x0        # 0x441460
  40d51b:	test   rbx,rbx
  40d51e:	je     0x40d570
  40d520:	cmp    BYTE PTR [rbx],0x0
  40d523:	je     0x40d570
  40d525:	mov    ebp,DWORD PTR [rip+0x33ed9]        # 0x441404
  40d52b:	test   ebp,ebp
  40d52d:	jne    0x40d5a2
  40d52f:	lea    rdi,[rip+0x2731c]        # 0x434852
  40d536:	mov    ecx,0x7
  40d53b:	mov    rsi,rbx
  40d53e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40d540:	je     0x40d670
  40d546:	lea    rdi,[rip+0x2730c]        # 0x434859
  40d54d:	mov    ecx,0x7
  40d552:	mov    rsi,rbx
  40d555:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40d557:	jne    0x40d633
  40d55d:	call   QWORD PTR [rip+0x354c1]        # 0x442a24
  40d563:	add    rax,0x60
  40d567:	mov    QWORD PTR [rip+0x33eea],rax        # 0x441458
  40d56e:	jmp    0x40d5be
  40d570:	lea    rcx,[rip+0x33eb9]        # 0x441430
  40d577:	mov    ebp,0x1
  40d57c:	call   QWORD PTR [rip+0x353e2]        # 0x442964
  40d582:	mov    eax,ebp
  40d584:	add    rsp,0xb8
  40d58b:	pop    rbx
  40d58c:	pop    rsi
  40d58d:	pop    rdi
  40d58e:	pop    rbp
  40d58f:	ret    
  40d590:	lea    rcx,[rip+0x33e99]        # 0x441430
  40d597:	call   QWORD PTR [rip+0x35357]        # 0x4428f4
  40d59d:	jmp    0x40d488
  40d5a2:	mov    rcx,rbx
  40d5a5:	call   QWORD PTR [rip+0x35501]        # 0x442aac
  40d5ab:	mov    QWORD PTR [rip+0x33eae],rax        # 0x441460
  40d5b2:	call   0x40ce90
  40d5b7:	mov    QWORD PTR [rip+0x33e9a],rax        # 0x441458
  40d5be:	lea    rbx,[rsp+0x38]
  40d5c3:	lea    rdi,[rsp+0x40]
  40d5c8:	lea    rcx,[rip+0x33e61]        # 0x441430
  40d5cf:	mov    DWORD PTR [rip+0x33e27],0x1        # 0x441400
  40d5d9:	call   QWORD PTR [rip+0x35385]        # 0x442964
  40d5df:	mov    rcx,rbx
  40d5e2:	call   QWORD PTR [rip+0x354d4]        # 0x442abc
  40d5e8:	mov    rdx,rdi
  40d5eb:	mov    rcx,rbx
  40d5ee:	mov    BYTE PTR [rsp+0x70],0x0
  40d5f3:	call   0x41d7f0
  40d5f8:	test   rax,rax
  40d5fb:	je     0x40d616
  40d5fd:	lea    rcx,[rsp+0x70]
  40d602:	lea    r8,[rip+0x2726c]        # 0x434875
  40d609:	mov    r9,rdi
  40d60c:	mov    edx,0x40
  40d611:	call   0x42d618
  40d616:	mov    eax,DWORD PTR [rip+0x33de4]        # 0x441400
  40d61c:	test   eax,eax
  40d61e:	jne    0x40d690
  40d620:	mov    ebp,0x1
  40d625:	mov    eax,ebp
  40d627:	add    rsp,0xb8
  40d62e:	pop    rbx
  40d62f:	pop    rsi
  40d630:	pop    rdi
  40d631:	pop    rbp
  40d632:	ret    
  40d633:	lea    rdx,[rip+0x27239]        # 0x434873
  40d63a:	mov    rcx,rbx
  40d63d:	call   0x42d718
  40d642:	test   rax,rax
  40d645:	mov    QWORD PTR [rip+0x33e0c],rax        # 0x441458
  40d64c:	jne    0x40d5be
  40d652:	lea    rcx,[rip+0x33dd7]        # 0x441430
  40d659:	call   QWORD PTR [rip+0x35305]        # 0x442964
  40d65f:	mov    eax,ebp
  40d661:	add    rsp,0xb8
  40d668:	pop    rbx
  40d669:	pop    rsi
  40d66a:	pop    rdi
  40d66b:	pop    rbp
  40d66c:	ret    
  40d66d:	nop    DWORD PTR [rax]
  40d670:	call   QWORD PTR [rip+0x353ae]        # 0x442a24
  40d676:	add    rax,0x30
  40d67a:	mov    QWORD PTR [rip+0x33dd7],rax        # 0x441458
  40d681:	jmp    0x40d5be
  40d686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d690:	mov    eax,DWORD PTR [rip+0x2097a]        # 0x42e010
  40d696:	lea    r9,[rip+0x271ea]        # 0x434887
  40d69d:	lea    r8,[rip+0x271ec]        # 0x434890
  40d6a4:	lea    rcx,[rip+0x27225]        # 0x4348d0
  40d6ab:	mov    edx,0xa75
  40d6b0:	mov    DWORD PTR [rsp+0x28],eax
  40d6b4:	lea    rax,[rsp+0x70]
  40d6b9:	mov    QWORD PTR [rsp+0x20],rax
  40d6be:	call   0x40d350
  40d6c3:	jmp    0x40d620
  40d6c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d6d0:	push   rbp
  40d6d1:	push   rdi
  40d6d2:	push   rsi
  40d6d3:	push   rbx
  40d6d4:	sub    rsp,0x38
  40d6d8:	test   rcx,rcx
  40d6db:	mov    rbx,rcx
  40d6de:	je     0x40d8e2
  40d6e4:	cmp    QWORD PTR [rbx+0x48],0x0
  40d6e9:	je     0x40d900
  40d6ef:	mov    ecx,DWORD PTR [rbx+0x14]
  40d6f2:	call   0x41f680
  40d6f7:	mov    edx,DWORD PTR [rbx+0x10]
  40d6fa:	mov    ecx,DWORD PTR [rbx+0x14]
  40d6fd:	mov    rsi,rax
  40d700:	call   0x40ac90
  40d705:	lea    edx,[rax-0x27]
  40d708:	cmp    dx,0x17
  40d70c:	ja     0x40d890
  40d712:	lea    rcx,[rip+0x27273]        # 0x43498c
  40d719:	movzx  edx,dx
  40d71c:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  40d720:	add    rcx,rdx
  40d723:	jmp    rcx
  40d725:	mov    edx,DWORD PTR [rip+0x33cd5]        # 0x441400
  40d72b:	test   edx,edx
  40d72d:	jne    0x40d965
  40d733:	add    rsp,0x38
  40d737:	pop    rbx
  40d738:	pop    rsi
  40d739:	pop    rdi
  40d73a:	pop    rbp
  40d73b:	ret    
  40d73c:	nop    DWORD PTR [rax+0x0]
  40d740:	mov    edi,DWORD PTR [rbx+0x64]
  40d743:	test   edi,edi
  40d745:	js     0x40d8c1
  40d74b:	lea    ecx,[rdi+0x1]
  40d74e:	mov    edx,0x1
  40d753:	movsxd rcx,ecx
  40d756:	call   0x42d740
  40d75b:	test   rax,rax
  40d75e:	mov    rbp,rax
  40d761:	je     0x40d943
  40d767:	mov    rdx,QWORD PTR [rbx+0x48]
  40d76b:	movsxd r8,edi
  40d76e:	mov    rcx,rax
  40d771:	call   0x42d6a8
  40d776:	mov    ebx,DWORD PTR [rip+0x33c84]        # 0x441400
  40d77c:	test   ebx,ebx
  40d77e:	jne    0x40d91e
  40d784:	mov    rcx,rbp
  40d787:	add    rsp,0x38
  40d78b:	pop    rbx
  40d78c:	pop    rsi
  40d78d:	pop    rdi
  40d78e:	pop    rbp
  40d78f:	jmp    0x42d6f8
  40d794:	mov    r10d,DWORD PTR [rip+0x33c65]        # 0x441400
  40d79b:	test   r10d,r10d
  40d79e:	je     0x40d733
  40d7a0:	mov    rax,QWORD PTR [rbx+0x48]
  40d7a4:	lea    r8,[rip+0x27198]        # 0x434943
  40d7ab:	lea    rcx,[rip+0x2711e]        # 0x4348d0
  40d7b2:	mov    r9,rsi
  40d7b5:	mov    edx,0x1b47
  40d7ba:	movzx  eax,BYTE PTR [rax]
  40d7bd:	mov    DWORD PTR [rsp+0x20],eax
  40d7c1:	call   0x40d350
  40d7c6:	jmp    0x40d733
  40d7cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d7d0:	mov    r9d,DWORD PTR [rip+0x33c29]        # 0x441400
  40d7d7:	test   r9d,r9d
  40d7da:	je     0x40d733
  40d7e0:	mov    rax,QWORD PTR [rbx+0x48]
  40d7e4:	lea    r8,[rip+0x27158]        # 0x434943
  40d7eb:	lea    rcx,[rip+0x270de]        # 0x4348d0
  40d7f2:	mov    r9,rsi
  40d7f5:	mov    edx,0x1b77
  40d7fa:	movsx  eax,WORD PTR [rax]
  40d7fd:	mov    DWORD PTR [rsp+0x20],eax
  40d801:	call   0x40d350
  40d806:	jmp    0x40d733
  40d80b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d810:	mov    r8d,DWORD PTR [rip+0x33be9]        # 0x441400
  40d817:	test   r8d,r8d
  40d81a:	je     0x40d733
  40d820:	mov    rax,QWORD PTR [rbx+0x48]
  40d824:	lea    r8,[rip+0x27118]        # 0x434943
  40d82b:	lea    rcx,[rip+0x2709e]        # 0x4348d0
  40d832:	mov    r9,rsi
  40d835:	mov    edx,0x1ba7
  40d83a:	mov    eax,DWORD PTR [rax]
  40d83c:	mov    DWORD PTR [rsp+0x20],eax
  40d840:	call   0x40d350
  40d845:	jmp    0x40d733
  40d84a:	nop    WORD PTR [rax+rax*1+0x0]
  40d850:	mov    ecx,DWORD PTR [rip+0x33baa]        # 0x441400
  40d856:	test   ecx,ecx
  40d858:	je     0x40d733
  40d85e:	mov    rax,QWORD PTR [rbx+0x48]
  40d862:	pxor   xmm1,xmm1
  40d866:	lea    r8,[rip+0x270ec]        # 0x434959
  40d86d:	lea    rcx,[rip+0x2705c]        # 0x4348d0
  40d874:	mov    r9,rsi
  40d877:	mov    edx,0x1bd7
  40d87c:	cvtss2sd xmm1,DWORD PTR [rax]
  40d880:	movsd  QWORD PTR [rsp+0x20],xmm1
  40d886:	call   0x40d350
  40d88b:	jmp    0x40d733
  40d890:	mov    eax,DWORD PTR [rip+0x33b6a]        # 0x441400
  40d896:	test   eax,eax
  40d898:	je     0x40d733
  40d89e:	lea    r8,[rip+0x270ca]        # 0x43496f
  40d8a5:	mov    r9,rsi
  40d8a8:	mov    edx,0x1c37
  40d8ad:	lea    rcx,[rip+0x2701c]        # 0x4348d0
  40d8b4:	add    rsp,0x38
  40d8b8:	pop    rbx
  40d8b9:	pop    rsi
  40d8ba:	pop    rdi
  40d8bb:	pop    rbp
  40d8bc:	jmp    0x40d350
  40d8c1:	mov    r11d,DWORD PTR [rip+0x33b38]        # 0x441400
  40d8c8:	mov    r9,rsi
  40d8cb:	lea    r8,[rip+0x27059]        # 0x43492b
  40d8d2:	mov    edx,0x1b07
  40d8d7:	test   r11d,r11d
  40d8da:	je     0x40d733
  40d8e0:	jmp    0x40d8ad
  40d8e2:	lea    rdx,[rip+0x26fe7]        # 0x4348d0
  40d8e9:	lea    rcx,[rip+0x26fe6]        # 0x4348d6
  40d8f0:	mov    r8d,0x19d
  40d8f6:	call   0x42d350
  40d8fb:	jmp    0x40d6e4
  40d900:	lea    rdx,[rip+0x26fc9]        # 0x4348d0
  40d907:	lea    rcx,[rip+0x26fcc]        # 0x4348da
  40d90e:	mov    r8d,0x19e
  40d914:	call   0x42d350
  40d919:	jmp    0x40d6ef
  40d91e:	lea    r8,[rip+0x26fee]        # 0x434913
  40d925:	lea    rcx,[rip+0x26fa4]        # 0x4348d0
  40d92c:	mov    QWORD PTR [rsp+0x20],rbp
  40d931:	mov    r9,rsi
  40d934:	mov    edx,0x1ad7
  40d939:	call   0x40d350
  40d93e:	jmp    0x40d784
  40d943:	mov    edi,DWORD PTR [rip+0x33ab7]        # 0x441400
  40d949:	mov    r9,rsi
  40d94c:	lea    r8,[rip+0x26f9d]        # 0x4348f0
  40d953:	mov    edx,0x1a97
  40d958:	test   edi,edi
  40d95a:	je     0x40d733
  40d960:	jmp    0x40d8ad
  40d965:	mov    rax,QWORD PTR [rbx+0x48]
  40d969:	lea    r8,[rip+0x26fe9]        # 0x434959
  40d970:	lea    rcx,[rip+0x26f59]        # 0x4348d0
  40d977:	mov    r9,rsi
  40d97a:	mov    edx,0x1c07
  40d97f:	movsd  xmm0,QWORD PTR [rax]
  40d983:	movsd  QWORD PTR [rsp+0x20],xmm0
  40d989:	call   0x40d350
  40d98e:	jmp    0x40d733
  40d993:	nop
  40d994:	nop
  40d995:	nop
  40d996:	nop
  40d997:	nop
  40d998:	nop
  40d999:	nop
  40d99a:	nop
  40d99b:	nop
  40d99c:	nop
  40d99d:	nop
  40d99e:	nop
  40d99f:	nop
  40d9a0:	push   rdi
  40d9a1:	push   rsi
  40d9a2:	push   rbx
  40d9a3:	sub    rsp,0x20
  40d9a7:	mov    rbx,QWORD PTR [rcx+0x28]
  40d9ab:	lea    rax,[rip+0x15e]        # 0x40db10
  40d9b2:	cmp    QWORD PTR [rbx+0x10],rax
  40d9b6:	je     0x40d9c0
  40d9b8:	add    rsp,0x20
  40d9bc:	pop    rbx
  40d9bd:	pop    rsi
  40d9be:	pop    rdi
  40d9bf:	ret    
  40d9c0:	mov    edi,DWORD PTR [rbx+0x260]
  40d9c6:	cmp    edi,0x9
  40d9c9:	ja     0x40d9b8
  40d9cb:	lea    rax,[rdi+rdi*2]
  40d9cf:	mov    rsi,r9
  40d9d2:	mov    rcx,r8
  40d9d5:	mov    DWORD PTR [rbx+rax*8+0x278],edx
  40d9dc:	xor    eax,eax
  40d9de:	test   r8,r8
  40d9e1:	je     0x40d9e9
  40d9e3:	call   QWORD PTR [rip+0x350c3]        # 0x442aac
  40d9e9:	lea    rdx,[rdi+rdi*2]
  40d9ed:	mov    QWORD PTR [rbx+rdx*8+0x268],rax
  40d9f5:	xor    eax,eax
  40d9f7:	test   rsi,rsi
  40d9fa:	je     0x40da05
  40d9fc:	mov    rcx,rsi
  40d9ff:	call   QWORD PTR [rip+0x350a7]        # 0x442aac
  40da05:	lea    rdx,[rdi+rdi*2]
  40da09:	mov    QWORD PTR [rbx+rdx*8+0x270],rax
  40da11:	add    DWORD PTR [rbx+0x260],0x1
  40da18:	add    rsp,0x20
  40da1c:	pop    rbx
  40da1d:	pop    rsi
  40da1e:	pop    rdi
  40da1f:	ret    
  40da20:	push   rbp
  40da21:	push   rdi
  40da22:	push   rsi
  40da23:	push   rbx
  40da24:	sub    rsp,0x28
  40da28:	mov    ebx,DWORD PTR [rcx+0x28]
  40da2b:	mov    rbp,rcx
  40da2e:	mov    rdi,r8
  40da31:	cmp    ebx,0x9
  40da34:	ja     0x40db06
  40da3a:	lea    rax,[rbx*8+0x0]
  40da42:	mov    rsi,rbx
  40da45:	shl    rsi,0x6
  40da49:	sub    rsi,rax
  40da4c:	add    rsi,rcx
  40da4f:	mov    BYTE PTR [rsi+0x60],dl
  40da52:	mov    rdx,QWORD PTR [r8]
  40da55:	mov    QWORD PTR [rsi+0x30],rdx
  40da59:	mov    rdx,QWORD PTR [r8+0x8]
  40da5d:	mov    QWORD PTR [rsi+0x38],rdx
  40da61:	mov    rdx,QWORD PTR [r8+0x10]
  40da65:	mov    QWORD PTR [rsi+0x40],rdx
  40da69:	mov    rdx,QWORD PTR [r8+0x18]
  40da6d:	mov    QWORD PTR [rsi+0x48],rdx
  40da71:	mov    rdx,QWORD PTR [r8+0x20]
  40da75:	mov    QWORD PTR [rsi+0x50],rdx
  40da79:	mov    rdx,QWORD PTR [r8+0x28]
  40da7d:	mov    QWORD PTR [rsi+0x58],rdx
  40da81:	mov    rcx,QWORD PTR [r8]
  40da84:	test   rcx,rcx
  40da87:	je     0x40da93
  40da89:	call   QWORD PTR [rip+0x3501d]        # 0x442aac
  40da8f:	mov    QWORD PTR [rsi+0x30],rax
  40da93:	mov    rcx,QWORD PTR [rdi+0x8]
  40da97:	test   rcx,rcx
  40da9a:	je     0x40dab9
  40da9c:	call   QWORD PTR [rip+0x3500a]        # 0x442aac
  40daa2:	lea    rcx,[rbx*8+0x0]
  40daaa:	mov    rdx,rbx
  40daad:	shl    rdx,0x6
  40dab1:	sub    rdx,rcx
  40dab4:	mov    QWORD PTR [rbp+rdx*1+0x38],rax
  40dab9:	mov    rcx,QWORD PTR [rdi+0x10]
  40dabd:	test   rcx,rcx
  40dac0:	je     0x40dadf
  40dac2:	call   QWORD PTR [rip+0x34fe4]        # 0x442aac
  40dac8:	lea    rcx,[rbx*8+0x0]
  40dad0:	mov    rdx,rbx
  40dad3:	shl    rdx,0x6
  40dad7:	sub    rdx,rcx
  40dada:	mov    QWORD PTR [rbp+rdx*1+0x40],rax
  40dadf:	mov    rcx,QWORD PTR [rdi+0x18]
  40dae3:	test   rcx,rcx
  40dae6:	je     0x40db02
  40dae8:	call   QWORD PTR [rip+0x34fbe]        # 0x442aac
  40daee:	lea    rdx,[rbx*8+0x0]
  40daf6:	shl    rbx,0x6
  40dafa:	sub    rbx,rdx
  40dafd:	mov    QWORD PTR [rbp+rbx*1+0x48],rax
  40db02:	add    DWORD PTR [rbp+0x28],0x1
  40db06:	add    rsp,0x28
  40db0a:	pop    rbx
  40db0b:	pop    rsi
  40db0c:	pop    rdi
  40db0d:	pop    rbp
  40db0e:	ret    
  40db0f:	nop
  40db10:	sub    rsp,0x28
  40db14:	xor    edx,edx
  40db16:	call   0x40da20
  40db1b:	xor    eax,eax
  40db1d:	add    rsp,0x28
  40db21:	ret    
  40db22:	nop    DWORD PTR [rax+0x0]
  40db26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db30:	sub    rsp,0x28
  40db34:	mov    edx,0x1
  40db39:	call   0x40da20
  40db3e:	mov    eax,0x2
  40db43:	add    rsp,0x28
  40db47:	ret    
  40db48:	nop    DWORD PTR [rax+rax*1+0x0]
  40db50:	push   rdi
  40db51:	push   rsi
  40db52:	push   rbx
  40db53:	sub    rsp,0x20
  40db57:	mov    edx,DWORD PTR [rcx+0x28]
  40db5a:	xor    esi,esi
  40db5c:	mov    rbx,rcx
  40db5f:	test   edx,edx
  40db61:	je     0x40db86
  40db63:	mov    eax,esi
  40db65:	add    esi,0x1
  40db68:	lea    rdx,[rax*8+0x0]
  40db70:	shl    rax,0x6
  40db74:	sub    rax,rdx
  40db77:	lea    rcx,[rbx+rax*1+0x30]
  40db7c:	call   0x4104f0
  40db81:	cmp    DWORD PTR [rbx+0x28],esi
  40db84:	ja     0x40db63
  40db86:	mov    eax,DWORD PTR [rbx+0x260]
  40db8c:	xor    esi,esi
  40db8e:	mov    DWORD PTR [rbx+0x28],0x0
  40db95:	test   eax,eax
  40db97:	je     0x40dbcb
  40db99:	nop    DWORD PTR [rax+0x0]
  40dba0:	mov    eax,esi
  40dba2:	add    esi,0x1
  40dba5:	lea    rax,[rax+rax*2]
  40dba9:	lea    rdi,[rbx+rax*8+0x260]
  40dbb1:	mov    rcx,QWORD PTR [rdi+0x8]
  40dbb5:	call   0x42d6f8
  40dbba:	mov    rcx,QWORD PTR [rdi+0x10]
  40dbbe:	call   0x42d6f8
  40dbc3:	cmp    DWORD PTR [rbx+0x260],esi
  40dbc9:	ja     0x40dba0
  40dbcb:	mov    DWORD PTR [rbx+0x260],0x0
  40dbd5:	add    rsp,0x20
  40dbd9:	pop    rbx
  40dbda:	pop    rsi
  40dbdb:	pop    rdi
  40dbdc:	ret    
  40dbdd:	nop    DWORD PTR [rax]
  40dbe0:	push   r15
  40dbe2:	push   r14
  40dbe4:	push   r13
  40dbe6:	push   r12
  40dbe8:	push   rbp
  40dbe9:	push   rdi
  40dbea:	push   rsi
  40dbeb:	push   rbx
  40dbec:	sub    rsp,0x158
  40dbf3:	movzx  eax,BYTE PTR [rdx+0xf0]
  40dbfa:	mov    rsi,rcx
  40dbfd:	mov    rbp,rdx
  40dc00:	mov    QWORD PTR [rsp+0x58],0x0
  40dc09:	mov    BYTE PTR [rsp+0x4e],al
  40dc0d:	mov    rax,QWORD PTR [rdx+0x70]
  40dc11:	lea    rbx,[rax+0x8]
  40dc15:	mov    rcx,rbx
  40dc18:	call   0x42d610
  40dc1d:	cmp    WORD PTR [rsi],0x702
  40dc22:	mov    BYTE PTR [rsi+0xf1],0x10
  40dc29:	mov    edx,0x5c
  40dc2e:	mov    rcx,rbx
  40dc31:	mov    r13,rax
  40dc34:	sbb    rdi,rdi
  40dc37:	and    rdi,0xfffffffffffffff8
  40dc3b:	add    rdi,0x5e
  40dc3f:	call   0x42d638
  40dc44:	test   rax,rax
  40dc47:	jne    0x40e120
  40dc4d:	test   r13,r13
  40dc50:	mov    QWORD PTR [rsp+0x40],rdi
  40dc55:	mov    QWORD PTR [rsp+0x38],0x0
  40dc5e:	je     0x40e120
  40dc64:	lea    r14,[rsp+0x80]
  40dc6c:	lea    rdx,[rsp+0x58]
  40dc71:	xor    r8d,r8d
  40dc74:	mov    rcx,r14
  40dc77:	call   0x41d580
  40dc7c:	test   eax,eax
  40dc7e:	js     0x40e108
  40dc84:	mov    rax,QWORD PTR [rbp+0x30]
  40dc88:	cmp    QWORD PTR [rsi+0xc0],0x0
  40dc90:	lea    rdx,[rax+0x8]
  40dc94:	mov    rax,QWORD PTR [rax]
  40dc97:	mov    QWORD PTR [rsp+0xb0],rdx
  40dc9f:	mov    DWORD PTR [rsp+0xbc],eax
  40dca6:	je     0x40e2f3
  40dcac:	mov    DWORD PTR [rsp+0xcc],0x0
  40dcb7:	mov    DWORD PTR [rsp+0xdc],0x0
  40dcc2:	mov    rax,QWORD PTR [rbp+0x68]
  40dcc6:	cmp    WORD PTR [rsi],0x701
  40dccb:	mov    DWORD PTR [rsp+0x14c],0x0
  40dcd6:	mov    BYTE PTR [rsp+0x4f],0x0
  40dcdb:	lea    rdx,[rax+0x8]
  40dcdf:	mov    rax,QWORD PTR [rax]
  40dce2:	mov    QWORD PTR [rsp+0xe0],rdx
  40dcea:	mov    DWORD PTR [rsp+0xec],eax
  40dcf1:	mov    rax,QWORD PTR [rbp+0x0]
  40dcf5:	lea    rdx,[rax+0x8]
  40dcf9:	mov    rax,QWORD PTR [rax]
  40dcfc:	mov    QWORD PTR [rsp+0xf0],rdx
  40dd04:	mov    DWORD PTR [rsp+0xfc],eax
  40dd0b:	mov    rax,QWORD PTR [rbp+0x88]
  40dd12:	lea    rdx,[rax+0x8]
  40dd16:	mov    rax,QWORD PTR [rax]
  40dd19:	mov    QWORD PTR [rsp+0x100],rdx
  40dd21:	mov    DWORD PTR [rsp+0x10c],eax
  40dd28:	mov    rax,QWORD PTR [rbp+0x18]
  40dd2c:	lea    rdx,[rax+0x8]
  40dd30:	mov    rax,QWORD PTR [rax]
  40dd33:	mov    QWORD PTR [rsp+0x110],rdx
  40dd3b:	mov    DWORD PTR [rsp+0x11c],eax
  40dd42:	mov    rax,QWORD PTR [rbp+0xc0]
  40dd49:	lea    rdx,[rax+0x8]
  40dd4d:	mov    rax,QWORD PTR [rax]
  40dd50:	mov    QWORD PTR [rsp+0x120],rdx
  40dd58:	mov    DWORD PTR [rsp+0x12c],eax
  40dd5f:	mov    rax,QWORD PTR [rbp+0x50]
  40dd63:	lea    rdx,[rax+0x8]
  40dd67:	mov    rax,QWORD PTR [rax]
  40dd6a:	mov    QWORD PTR [rsp+0x130],rdx
  40dd72:	mov    DWORD PTR [rsp+0x13c],eax
  40dd79:	ja     0x40e240
  40dd7f:	mov    rax,QWORD PTR [rsp+0xa8]
  40dd87:	mov    r12d,edi
  40dd8a:	lea    rbx,[rsp+0xb0]
  40dd92:	lea    r13,[rsp+0x60]
  40dd97:	jmp    0x40ddb9
  40dd99:	nop    DWORD PTR [rax+0x0]
  40dda0:	lea    rcx,[rsp+0x150]
  40dda8:	mov    DWORD PTR [rbx+0xc],r8d
  40ddac:	add    rbx,0x10
  40ddb0:	cmp    rbx,rcx
  40ddb3:	jae    0x40e160
  40ddb9:	mov    r8d,DWORD PTR [rbx+0xc]
  40ddbd:	lea    edx,[r12+rax*1]
  40ddc1:	mov    r15d,eax
  40ddc4:	mov    DWORD PTR [rbx+0x8],edx
  40ddc7:	test   r8d,r8d
  40ddca:	je     0x40dda0
  40ddcc:	mov    rdx,QWORD PTR [rbx]
  40ddcf:	mov    rcx,r13
  40ddd2:	call   0x41d540
  40ddd7:	mov    rax,QWORD PTR [rsi+0x68]
  40dddb:	mov    QWORD PTR [rsp+0x20],r14
  40dde0:	xor    r8d,r8d
  40dde3:	mov    r9,r13
  40dde6:	mov    rcx,rsi
  40dde9:	mov    rdx,QWORD PTR [rax]
  40ddec:	call   0x41d100
  40ddf1:	test   eax,eax
  40ddf3:	js     0x40e3a0
  40ddf9:	mov    rax,QWORD PTR [rsp+0xa8]
  40de01:	mov    r8d,eax
  40de04:	sub    r8d,r15d
  40de07:	jmp    0x40dda0
  40de09:	nop    DWORD PTR [rax+0x0]
  40de10:	mov    edx,0x70000000
  40de15:	mov    rcx,rsi
  40de18:	call   0x424140
  40de1d:	mov    ebx,DWORD PTR [rbp+0x10]
  40de20:	mov    eax,0x1000
  40de25:	mov    rcx,rsi
  40de28:	mov    r13d,eax
  40de2b:	lea    edx,[rbx-0x1000]
  40de31:	cmp    edx,0xefff
  40de37:	cmovbe r13d,ebx
  40de3b:	mov    edx,r13d
  40de3e:	call   0x424140
  40de43:	cmp    DWORD PTR [rsi+0xe0],r13d
  40de4a:	jb     0x40e2e3
  40de50:	lea    rdx,[rip+0x26dd8]        # 0x434c2f
  40de57:	mov    r8d,0x4
  40de5d:	mov    rcx,rsi
  40de60:	call   0x423f10
  40de65:	call   QWORD PTR [rip+0x34aa1]        # 0x44290c
  40de6b:	mov    rcx,rsi
  40de6e:	mov    edx,eax
  40de70:	call   0x424140
  40de75:	lea    rdx,[rip+0x26daf]        # 0x434c2b
  40de7c:	mov    r8d,0x4
  40de82:	mov    rcx,rsi
  40de85:	call   0x423f10
  40de8a:	movzx  eax,BYTE PTR [rbp+0xf4]
  40de91:	mov    rcx,rsi
  40de94:	and    eax,0x1
  40de97:	cmp    al,0x1
  40de99:	sbb    edx,edx
  40de9b:	and    edx,0x10
  40de9e:	add    edx,0xe0
  40dea4:	call   0x4241d0
  40dea9:	movzx  ebx,BYTE PTR [rsp+0x4e]
  40deae:	mov    rcx,rsi
  40deb1:	mov    eax,ebx
  40deb3:	or     eax,0xffffff80
  40deb6:	cmp    QWORD PTR [rsi+0xc0],0x0
  40debe:	cmovne ebx,eax
  40dec1:	movzx  edx,bl
  40dec4:	call   0x4241d0
  40dec9:	xor    edx,edx
  40decb:	test   BYTE PTR [rbp+0xf5],0x8
  40ded2:	je     0x40dee0
  40ded4:	cmp    WORD PTR [rsi],0x701
  40ded9:	sbb    edx,edx
  40dedb:	not    edx
  40dedd:	and    edx,0x20
  40dee0:	mov    rcx,rsi
  40dee3:	call   0x4241d0
  40dee8:	movzx  ebx,BYTE PTR [rsp+0x4f]
  40deed:	mov    rcx,rsi
  40def0:	mov    eax,ebx
  40def2:	or     eax,0x8
  40def5:	cmp    WORD PTR [rsi],0x703
  40defa:	cmovae ebx,eax
  40defd:	movzx  edx,bl
  40df00:	call   0x4241d0
  40df05:	mov    edx,0xffffff88
  40df0a:	mov    rcx,rsi
  40df0d:	call   0x424140
  40df12:	lea    rdx,[rip+0x26d0e]        # 0x434c27
  40df19:	mov    r8d,0x4
  40df1f:	mov    rcx,rsi
  40df22:	call   0x423f10
  40df27:	movsx  edx,WORD PTR [rsp+0xb8]
  40df2f:	mov    rcx,rsi
  40df32:	call   0x424180
  40df37:	mov    edx,DWORD PTR [rsp+0xbc]
  40df3e:	mov    rcx,rsi
  40df41:	shr    edx,1
  40df43:	movsx  edx,dx
  40df46:	call   0x424180
  40df4b:	cmp    QWORD PTR [rsi+0xc0],0x0
  40df53:	je     0x40e353
  40df59:	xor    edx,edx
  40df5b:	mov    rcx,rsi
  40df5e:	call   0x424180
  40df63:	xor    edx,edx
  40df65:	mov    rcx,rsi
  40df68:	call   0x424180
  40df6d:	xor    edx,edx
  40df6f:	mov    rcx,rsi
  40df72:	call   0x424180
  40df77:	xor    edx,edx
  40df79:	mov    rcx,rsi
  40df7c:	call   0x424180
  40df81:	movsx  edx,WORD PTR [rsp+0xe8]
  40df89:	mov    rcx,rsi
  40df8c:	lea    rbx,[rsp+0x50]
  40df91:	call   0x424180
  40df96:	mov    edx,DWORD PTR [rsp+0xec]
  40df9d:	mov    rcx,rsi
  40dfa0:	shr    edx,1
  40dfa2:	movsx  edx,dx
  40dfa5:	call   0x424180
  40dfaa:	movsx  edx,WORD PTR [rsp+0xf8]
  40dfb2:	mov    rcx,rsi
  40dfb5:	call   0x424180
  40dfba:	mov    edx,DWORD PTR [rsp+0xfc]
  40dfc1:	mov    rcx,rsi
  40dfc4:	shr    edx,1
  40dfc6:	movsx  edx,dx
  40dfc9:	call   0x424180
  40dfce:	xor    edx,edx
  40dfd0:	mov    rcx,rsi
  40dfd3:	call   0x424180
  40dfd8:	xor    edx,edx
  40dfda:	mov    rcx,rsi
  40dfdd:	call   0x424180
  40dfe2:	movsx  edx,WORD PTR [rsp+0x108]
  40dfea:	mov    rcx,rsi
  40dfed:	call   0x424180
  40dff2:	mov    edx,DWORD PTR [rsp+0x10c]
  40dff9:	mov    rcx,rsi
  40dffc:	shr    edx,1
  40dffe:	movsx  edx,dx
  40e001:	call   0x424180
  40e006:	movsx  edx,WORD PTR [rsp+0x118]
  40e00e:	mov    rcx,rsi
  40e011:	call   0x424180
  40e016:	mov    edx,DWORD PTR [rsp+0x11c]
  40e01d:	mov    rcx,rsi
  40e020:	shr    edx,1
  40e022:	movsx  edx,dx
  40e025:	call   0x424180
  40e02a:	movsx  edx,WORD PTR [rsp+0x128]
  40e032:	mov    rcx,rsi
  40e035:	call   0x424180
  40e03a:	mov    edx,DWORD PTR [rsp+0x12c]
  40e041:	mov    rcx,rsi
  40e044:	shr    edx,1
  40e046:	movsx  edx,dx
  40e049:	call   0x424180
  40e04e:	mov    rcx,QWORD PTR [rsi+0x10]
  40e052:	mov    rdx,rbx
  40e055:	call   0x42ab60
  40e05a:	mov    r8d,0x6
  40e060:	mov    rdx,rbx
  40e063:	mov    rcx,rsi
  40e066:	call   0x423f10
  40e06b:	mov    edx,edi
  40e06d:	add    dx,WORD PTR [rsp+0xa8]
  40e075:	mov    rcx,rsi
  40e078:	movsx  edx,dx
  40e07b:	call   0x424180
  40e080:	movsx  edx,WORD PTR [rsp+0x38]
  40e085:	mov    rcx,rsi
  40e088:	call   0x424180
  40e08d:	movsx  edx,WORD PTR [rsp+0x138]
  40e095:	mov    rcx,rsi
  40e098:	call   0x424180
  40e09d:	mov    edx,DWORD PTR [rsp+0x13c]
  40e0a4:	mov    rcx,rsi
  40e0a7:	shr    edx,1
  40e0a9:	movsx  edx,dx
  40e0ac:	call   0x424180
  40e0b1:	cmp    WORD PTR [rsi],0x701
  40e0b6:	ja     0x40e2b0
  40e0bc:	mov    r8,QWORD PTR [rsp+0xa8]
  40e0c4:	mov    rdx,QWORD PTR [rsp+0x58]
  40e0c9:	mov    rcx,rsi
  40e0cc:	call   0x423f10
  40e0d1:	mov    rax,QWORD PTR [rsi+0xc0]
  40e0d8:	test   rax,rax
  40e0db:	je     0x40e0ed
  40e0dd:	mov    r8,QWORD PTR [rsp+0x38]
  40e0e2:	mov    rdx,QWORD PTR [rax]
  40e0e5:	mov    rcx,rsi
  40e0e8:	call   0x423f10
  40e0ed:	mov    rcx,rsi
  40e0f0:	call   0x424270
  40e0f5:	mov    ebx,eax
  40e0f7:	call   0x40cf60
  40e0fc:	mov    rcx,QWORD PTR [rsp+0x58]
  40e101:	call   0x42d6f8
  40e106:	mov    eax,ebx
  40e108:	add    rsp,0x158
  40e10f:	pop    rbx
  40e110:	pop    rsi
  40e111:	pop    rdi
  40e112:	pop    rbp
  40e113:	pop    r12
  40e115:	pop    r13
  40e117:	pop    r14
  40e119:	pop    r15
  40e11b:	ret    
  40e11c:	nop    DWORD PTR [rax+0x0]
  40e120:	mov    rax,QWORD PTR [rip+0x2dd09]        # 0x43be30
  40e127:	mov    edx,DWORD PTR [rax]
  40e129:	test   edx,edx
  40e12b:	jne    0x40e3b4
  40e131:	mov    rcx,rsi
  40e134:	call   0x41c9c0
  40e139:	test   rax,rax
  40e13c:	mov    QWORD PTR [rsi+0xc0],rax
  40e143:	je     0x40e3f1
  40e149:	movsxd rax,DWORD PTR [rax+0x8]
  40e14d:	mov    QWORD PTR [rsp+0x38],rax
  40e152:	add    rax,rdi
  40e155:	mov    QWORD PTR [rsp+0x40],rax
  40e15a:	jmp    0x40dc64
  40e15f:	nop
  40e160:	mov    ecx,DWORD PTR [rsp+0xd8]
  40e167:	mov    eax,DWORD PTR [rsp+0xdc]
  40e16e:	mov    r8,QWORD PTR [rsp+0x58]
  40e173:	mov    r14,rcx
  40e176:	sub    rcx,rdi
  40e179:	test   rax,rax
  40e17c:	mov    r12,rax
  40e17f:	je     0x40e1aa
  40e181:	lea    rdx,[r8+rcx*1]
  40e185:	add    rcx,rax
  40e188:	add    rcx,r8
  40e18b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e190:	movzx  eax,BYTE PTR [rdx]
  40e193:	add    rdx,0x1
  40e197:	rol    al,0x4
  40e19a:	xor    eax,0xffffffa5
  40e19d:	mov    BYTE PTR [rdx-0x1],al
  40e1a0:	cmp    rdx,rcx
  40e1a3:	jne    0x40e190
  40e1a5:	mov    r8,QWORD PTR [rsp+0x58]
  40e1aa:	mov    eax,DWORD PTR [rsp+0x148]
  40e1b1:	mov    r9d,DWORD PTR [rsp+0x14c]
  40e1b9:	sub    rax,rdi
  40e1bc:	lea    rdx,[r8+rax*1]
  40e1c0:	add    rax,r9
  40e1c3:	test   r9,r9
  40e1c6:	lea    rcx,[r8+rax*1]
  40e1ca:	je     0x40e1e5
  40e1cc:	nop    DWORD PTR [rax+0x0]
  40e1d0:	movzx  eax,BYTE PTR [rdx]
  40e1d3:	add    rdx,0x1
  40e1d7:	rol    al,0x4
  40e1da:	xor    eax,0xffffffa5
  40e1dd:	mov    BYTE PTR [rdx-0x1],al
  40e1e0:	cmp    rdx,rcx
  40e1e3:	jne    0x40e1d0
  40e1e5:	mov    rax,QWORD PTR [rip+0x2dc44]        # 0x43be30
  40e1ec:	mov    rbx,QWORD PTR [rsp+0x40]
  40e1f1:	add    rbx,QWORD PTR [rsp+0xa8]
  40e1f9:	mov    eax,DWORD PTR [rax]
  40e1fb:	test   eax,eax
  40e1fd:	jne    0x40e3d4
  40e203:	call   0x40cf10
  40e208:	mov    edx,ebx
  40e20a:	mov    rcx,rsi
  40e20d:	call   0x424140
  40e212:	movzx  eax,WORD PTR [rbp+0xc]
  40e216:	sub    ax,0x700
  40e21a:	cmp    ax,0x4
  40e21e:	ja     0x40e330
  40e224:	lea    rdx,[rip+0x26865]        # 0x434a90
  40e22b:	movzx  eax,ax
  40e22e:	movsxd rax,DWORD PTR [rdx+rax*4]
  40e232:	add    rdx,rax
  40e235:	jmp    rdx
  40e237:	nop    WORD PTR [rax+rax*1+0x0]
  40e240:	test   BYTE PTR [rbp+0xf5],0x1
  40e247:	je     0x40dd7f
  40e24d:	mov    rax,QWORD PTR [rbp+0x80]
  40e254:	mov    BYTE PTR [rsp+0x4f],0x1
  40e259:	lea    rdx,[rax+0x8]
  40e25d:	mov    rax,QWORD PTR [rax]
  40e260:	mov    QWORD PTR [rsp+0x140],rdx
  40e268:	mov    DWORD PTR [rsp+0x14c],eax
  40e26f:	jmp    0x40dd7f
  40e274:	mov    edx,0x74000004
  40e279:	jmp    0x40de15
  40e27e:	xchg   ax,ax
  40e280:	mov    edx,0x71000001
  40e285:	jmp    0x40de15
  40e28a:	nop    WORD PTR [rax+rax*1+0x0]
  40e290:	mov    edx,0x72090002
  40e295:	jmp    0x40de15
  40e29a:	nop    WORD PTR [rax+rax*1+0x0]
  40e2a0:	mov    edx,0x730b0003
  40e2a5:	jmp    0x40de15
  40e2aa:	nop    WORD PTR [rax+rax*1+0x0]
  40e2b0:	movsx  edx,WORD PTR [rsp+0x148]
  40e2b8:	mov    rcx,rsi
  40e2bb:	call   0x424180
  40e2c0:	mov    edx,DWORD PTR [rsp+0x14c]
  40e2c7:	mov    rcx,rsi
  40e2ca:	shr    edx,1
  40e2cc:	movsx  edx,dx
  40e2cf:	call   0x424180
  40e2d4:	xor    edx,edx
  40e2d6:	mov    rcx,rsi
  40e2d9:	call   0x424140
  40e2de:	jmp    0x40e0bc
  40e2e3:	movsxd rdx,r13d
  40e2e6:	mov    rcx,rsi
  40e2e9:	call   0x410320
  40e2ee:	jmp    0x40de50
  40e2f3:	mov    rax,QWORD PTR [rbp+0x70]
  40e2f7:	lea    rdx,[rax+0x8]
  40e2fb:	mov    rax,QWORD PTR [rax]
  40e2fe:	mov    QWORD PTR [rsp+0xc0],rdx
  40e306:	mov    DWORD PTR [rsp+0xcc],eax
  40e30d:	mov    rax,QWORD PTR [rbp+0x78]
  40e311:	lea    rdx,[rax+0x8]
  40e315:	mov    rax,QWORD PTR [rax]
  40e318:	mov    QWORD PTR [rsp+0xd0],rdx
  40e320:	mov    DWORD PTR [rsp+0xdc],eax
  40e327:	jmp    0x40dcc2
  40e32c:	nop    DWORD PTR [rax+0x0]
  40e330:	lea    rdx,[rip+0x266e5]        # 0x434a1c
  40e337:	lea    rcx,[rip+0x26712]        # 0x434a50
  40e33e:	mov    r8d,0x3b0
  40e344:	call   0x42d350
  40e349:	mov    edx,0x70000000
  40e34e:	jmp    0x40de15
  40e353:	movsx  edx,WORD PTR [rsp+0xc8]
  40e35b:	mov    rcx,rsi
  40e35e:	mov    r13d,r12d
  40e361:	shr    r13d,1
  40e364:	call   0x424180
  40e369:	mov    edx,DWORD PTR [rsp+0xcc]
  40e370:	mov    rcx,rsi
  40e373:	shr    edx,1
  40e375:	movsx  edx,dx
  40e378:	call   0x424180
  40e37d:	movsx  edx,r14w
  40e381:	mov    rcx,rsi
  40e384:	call   0x424180
  40e389:	movsx  edx,r13w
  40e38d:	mov    rcx,rsi
  40e390:	call   0x424180
  40e395:	jmp    0x40df81
  40e39a:	nop    WORD PTR [rax+rax*1+0x0]
  40e3a0:	mov    rcx,QWORD PTR [rsp+0x58]
  40e3a5:	call   0x42d6f8
  40e3aa:	mov    eax,0xffffffff
  40e3af:	jmp    0x40e108
  40e3b4:	lea    r8,[rip+0x26635]        # 0x4349f0
  40e3bb:	lea    rcx,[rip+0x2665a]        # 0x434a1c
  40e3c2:	mov    r9,rbx
  40e3c5:	mov    edx,0x3466
  40e3ca:	call   0x40d350
  40e3cf:	jmp    0x40e131
  40e3d4:	lea    r8,[rip+0x2664d]        # 0x434a28
  40e3db:	lea    rcx,[rip+0x2663a]        # 0x434a1c
  40e3e2:	mov    edx,0x39b6
  40e3e7:	call   0x40d350
  40e3ec:	jmp    0x40e203
  40e3f1:	mov    eax,0xffffffff
  40e3f6:	jmp    0x40e108
  40e3fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e400:	push   rsi
  40e401:	push   rbx
  40e402:	sub    rsp,0x38
  40e406:	test   rdx,rdx
  40e409:	mov    rsi,rcx
  40e40c:	mov    rbx,rdx
  40e40f:	je     0x40e440
  40e411:	mov    rcx,rdx
  40e414:	mov    DWORD PTR [rsp+0x2c],r8d
  40e419:	call   0x42d610
  40e41e:	mov    r8d,DWORD PTR [rsp+0x2c]
  40e423:	mov    r9d,eax
  40e426:	mov    rdx,rbx
  40e429:	mov    rcx,rsi
  40e42c:	add    rsp,0x38
  40e430:	pop    rbx
  40e431:	pop    rsi
  40e432:	jmp    0x424220
  40e437:	nop    WORD PTR [rax+rax*1+0x0]
  40e440:	xor    r9d,r9d
  40e443:	jmp    0x40e426
  40e445:	nop
  40e446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e450:	push   r15
  40e452:	push   r14
  40e454:	push   r13
  40e456:	push   r12
  40e458:	push   rbp
  40e459:	push   rdi
  40e45a:	push   rsi
  40e45b:	push   rbx
  40e45c:	sub    rsp,0x3c8
  40e463:	test   BYTE PTR [rdx+0xf5],0x2
  40e46a:	mov    rbx,rcx
  40e46d:	mov    r14,rdx
  40e470:	mov    rbp,r8
  40e473:	je     0x40ee45
  40e479:	movzx  eax,WORD PTR [rdx+0xc]
  40e47d:	mov    edx,eax
  40e47f:	shr    dx,0x8
  40e483:	test   dx,dx
  40e486:	je     0x40e650
  40e48c:	mov    rdx,QWORD PTR [r14+0xe0]
  40e493:	cmp    QWORD PTR [rdx],0x0
  40e497:	jne    0x40e610
  40e49d:	mov    QWORD PTR [rbx+0x168],r14
  40e4a4:	mov    WORD PTR [rbx],ax
  40e4a7:	movzx  eax,BYTE PTR [r14+0xf4]
  40e4af:	movzx  edx,BYTE PTR [rbx+0xa0]
  40e4b6:	shr    al,0x2
  40e4b9:	and    edx,0xfffffffe
  40e4bc:	and    eax,0x1
  40e4bf:	or     eax,edx
  40e4c1:	mov    BYTE PTR [rbx+0xa0],al
  40e4c7:	mov    rax,QWORD PTR [rbx+0x68]
  40e4cb:	mov    rax,QWORD PTR [rax]
  40e4ce:	cmp    QWORD PTR [rax+0x10],0xffffffffffffffff
  40e4d3:	je     0x40ea50
  40e4d9:	mov    r12d,DWORD PTR [r14+0x28]
  40e4dd:	test   r12d,r12d
  40e4e0:	mov    eax,r12d
  40e4e3:	je     0x40e600
  40e4e9:	cmp    QWORD PTR [r14+0xc8],0x0
  40e4f1:	mov    DWORD PTR [rbx+0x158],eax
  40e4f7:	je     0x40edb4
  40e4fd:	mov    rax,QWORD PTR [r14+0x98]
  40e504:	mov    QWORD PTR [rbx+0x7d],rax
  40e508:	mov    rax,QWORD PTR [r14+0xa0]
  40e50f:	mov    QWORD PTR [rbx+0x85],rax
  40e516:	mov    rax,QWORD PTR [r14+0xa8]
  40e51d:	mov    QWORD PTR [rbx+0x8d],rax
  40e524:	mov    rax,QWORD PTR [r14+0xb0]
  40e52b:	mov    QWORD PTR [rbx+0x95],rax
  40e532:	mov    rsi,QWORD PTR [r14+0xc8]
  40e539:	mov    edi,DWORD PTR [r14+0x8]
  40e53d:	test   rsi,rsi
  40e540:	jne    0x40e574
  40e542:	jmp    0x40edf9
  40e547:	nop    WORD PTR [rax+rax*1+0x0]
  40e550:	mov    QWORD PTR [rsp+0x20],rbp
  40e555:	mov    r9d,r12d
  40e558:	mov    rdx,rsi
  40e55b:	mov    rcx,rbx
  40e55e:	call   0x413930
  40e563:	test   eax,eax
  40e565:	je     0x40e7d5
  40e56b:	mov    rsi,QWORD PTR [rsi+0x28]
  40e56f:	test   rsi,rsi
  40e572:	je     0x40e5a9
  40e574:	cmp    WORD PTR [rbx],0x500
  40e579:	mov    DWORD PTR [r14+0x8],edi
  40e57d:	mov    r8d,edi
  40e580:	je     0x40e596
  40e582:	mov    rdx,QWORD PTR [r14+0xd8]
  40e589:	cmp    QWORD PTR [rdx],0x0
  40e58d:	je     0x40e593
  40e58f:	test   edi,edi
  40e591:	je     0x40e5e5
  40e593:	mov    r8d,edi
  40e596:	test   r8d,r8d
  40e599:	jg     0x40e550
  40e59b:	mov    rsi,QWORD PTR [rsi+0x28]
  40e59f:	mov    eax,0x4e29
  40e5a4:	test   rsi,rsi
  40e5a7:	jne    0x40e574
  40e5a9:	mov    edi,DWORD PTR [r14+0x8]
  40e5ad:	mov    r12d,eax
  40e5b0:	neg    r12d
  40e5b3:	test   edi,edi
  40e5b5:	jle    0x40ea10
  40e5bb:	mov    rcx,QWORD PTR [rbx+0x28]
  40e5bf:	mov    r9d,DWORD PTR [rbp+0x0]
  40e5c3:	mov    r8d,eax
  40e5c6:	mov    rdx,rbx
  40e5c9:	call   0x423700
  40e5ce:	mov    eax,r12d
  40e5d1:	add    rsp,0x3c8
  40e5d8:	pop    rbx
  40e5d9:	pop    rsi
  40e5da:	pop    rdi
  40e5db:	pop    rbp
  40e5dc:	pop    r12
  40e5de:	pop    r13
  40e5e0:	pop    r14
  40e5e2:	pop    r15
  40e5e4:	ret    
  40e5e5:	add    rdx,0x8
  40e5e9:	mov    rcx,rsi
  40e5ec:	call   0x414440
  40e5f1:	mov    r8d,eax
  40e5f4:	mov    DWORD PTR [r14+0x8],eax
  40e5f8:	jmp    0x40e596
  40e5fa:	nop    WORD PTR [rax+rax*1+0x0]
  40e600:	mov    eax,DWORD PTR [r14+0x94]
  40e607:	jmp    0x40e4e9
  40e60c:	nop    DWORD PTR [rax+0x0]
  40e610:	call   0x40cfd0
  40e615:	test   eax,eax
  40e617:	jne    0x40e63d
  40e619:	mov    eax,DWORD PTR [r14+0xe8]
  40e620:	test   eax,eax
  40e622:	je     0x40e62d
  40e624:	mov    rdx,QWORD PTR [rip+0x2d755]        # 0x43bd80
  40e62b:	mov    DWORD PTR [rdx],eax
  40e62d:	mov    rax,QWORD PTR [r14+0xe0]
  40e634:	lea    rcx,[rax+0x8]
  40e638:	call   0x40d460
  40e63d:	movzx  eax,WORD PTR [r14+0xc]
  40e642:	jmp    0x40e49d
  40e647:	nop    WORD PTR [rax+rax*1+0x0]
  40e650:	mov    rsi,QWORD PTR [rcx+0x28]
  40e654:	mov    rax,QWORD PTR [rcx+0x170]
  40e65b:	lea    r13,[rsp+0x60]
  40e660:	mov    ecx,0x6b
  40e665:	lea    r15,[rip+0x265d4]        # 0x434c40
  40e66c:	mov    rdi,r13
  40e66f:	mov    QWORD PTR [rsp+0x30],rax
  40e674:	mov    rax,QWORD PTR [rsi+0x18]
  40e678:	mov    QWORD PTR [rsp+0x38],rax
  40e67d:	xor    eax,eax
  40e67f:	rep stos QWORD PTR es:[rdi],rax
  40e682:	lea    rdi,[rip+0x265c3]        # 0x434c4c
  40e689:	mov    rax,QWORD PTR [rsi]
  40e68c:	mov    QWORD PTR [rbx+0x28],r13
  40e690:	mov    QWORD PTR [rsp+0x60],rax
  40e695:	lea    rax,[rip+0xfffffffffffff474]        # 0x40db10
  40e69c:	mov    QWORD PTR [rsp+0x70],rax
  40e6a1:	lea    rax,[rip+0xfffffffffffff488]        # 0x40db30
  40e6a8:	mov    QWORD PTR [rsp+0x78],rax
  40e6ad:	lea    rax,[rip+0xfffffffffffff2ec]        # 0x40d9a0
  40e6b4:	mov    QWORD PTR [rbx+0x170],rax
  40e6bb:	mov    QWORD PTR [rsi+0x18],0x0
  40e6c3:	movzx  eax,WORD PTR [r15]
  40e6c7:	mov    rcx,r13
  40e6ca:	mov    WORD PTR [r14+0xc],ax
  40e6cf:	call   0x40db50
  40e6d4:	mov    r8,rbp
  40e6d7:	mov    rdx,r14
  40e6da:	mov    rcx,rbx
  40e6dd:	call   0x40e450
  40e6e2:	test   eax,eax
  40e6e4:	mov    r12d,eax
  40e6e7:	js     0x40e9e0
  40e6ed:	mov    rax,QWORD PTR [rsp+0x38]
  40e6f2:	mov    QWORD PTR [rsi+0x18],rax
  40e6f6:	mov    rax,QWORD PTR [rsp+0x30]
  40e6fb:	mov    QWORD PTR [rbx+0x28],rsi
  40e6ff:	mov    QWORD PTR [rbx+0x170],rax
  40e706:	mov    eax,DWORD PTR [rsp+0x88]
  40e70d:	test   eax,eax
  40e70f:	je     0x40e764
  40e711:	mov    rcx,rsi
  40e714:	lea    rdi,[r13+0x30]
  40e718:	xor    esi,esi
  40e71a:	jmp    0x40e745
  40e71c:	nop    DWORD PTR [rax+0x0]
  40e720:	mov    rax,QWORD PTR [rcx+0x10]
  40e724:	test   rax,rax
  40e727:	je     0x40e731
  40e729:	mov    r8,rdi
  40e72c:	mov    rdx,rbx
  40e72f:	call   rax
  40e731:	add    esi,0x1
  40e734:	add    rdi,0x38
  40e738:	cmp    esi,DWORD PTR [rsp+0x88]
  40e73f:	jae    0x40e764
  40e741:	mov    rcx,QWORD PTR [rbx+0x28]
  40e745:	cmp    BYTE PTR [rdi+0x30],0x0
  40e749:	je     0x40e720
  40e74b:	mov    rax,QWORD PTR [rcx+0x18]
  40e74f:	test   rax,rax
  40e752:	jne    0x40e729
  40e754:	add    esi,0x1
  40e757:	add    rdi,0x38
  40e75b:	cmp    esi,DWORD PTR [rsp+0x88]
  40e762:	jb     0x40e741
  40e764:	mov    eax,DWORD PTR [rsp+0x2c0]
  40e76b:	xor    edi,edi
  40e76d:	mov    rsi,r13
  40e770:	test   eax,eax
  40e772:	je     0x40e7a9
  40e774:	mov    rax,QWORD PTR [rbx+0x170]
  40e77b:	test   rax,rax
  40e77e:	je     0x40e799
  40e780:	mov    edx,DWORD PTR [rsi+0x278]
  40e786:	mov    r9,QWORD PTR [rsi+0x270]
  40e78d:	mov    rcx,rbx
  40e790:	mov    r8,QWORD PTR [rsi+0x268]
  40e797:	call   rax
  40e799:	add    edi,0x1
  40e79c:	add    rsi,0x18
  40e7a0:	cmp    edi,DWORD PTR [rsp+0x2c0]
  40e7a7:	jb     0x40e774
  40e7a9:	mov    rcx,r13
  40e7ac:	call   0x40db50
  40e7b1:	test   r12d,r12d
  40e7b4:	jns    0x40e5ce
  40e7ba:	mov    rcx,QWORD PTR [rbx+0x28]
  40e7be:	mov    r9d,DWORD PTR [rbp+0x0]
  40e7c2:	mov    r8d,r12d
  40e7c5:	neg    r8d
  40e7c8:	mov    rdx,rbx
  40e7cb:	call   0x423700
  40e7d0:	jmp    0x40e5ce
  40e7d5:	xor    edx,edx
  40e7d7:	mov    QWORD PTR [r14+0xd0],rsi
  40e7de:	mov    rcx,rbx
  40e7e1:	call   0x423970
  40e7e6:	mov    rax,QWORD PTR [rbx+0xc0]
  40e7ed:	mov    DWORD PTR [rbx+0xa4],0xffffffff
  40e7f7:	test   rax,rax
  40e7fa:	je     0x40e810
  40e7fc:	mov    rdx,rax
  40e7ff:	mov    rcx,rbx
  40e802:	call   QWORD PTR [rax+0x10]
  40e805:	mov    QWORD PTR [rbx+0xc0],0x0
  40e810:	movzx  esi,WORD PTR [rbx]
  40e813:	cmp    si,0x700
  40e818:	ja     0x40eaf3
  40e81e:	jne    0x40ea90
  40e824:	mov    rdx,r14
  40e827:	mov    rcx,rbx
  40e82a:	call   0x40dbe0
  40e82f:	mov    edi,0x1
  40e834:	test   eax,eax
  40e836:	js     0x40ef33
  40e83c:	mov    rcx,rbx
  40e83f:	call   0x420f80
  40e844:	test   eax,eax
  40e846:	js     0x40f150
  40e84c:	mov    r9d,DWORD PTR [r14+0xec]
  40e853:	test   r9d,r9d
  40e856:	jne    0x40e9cf
  40e85c:	test   edi,edi
  40e85e:	jne    0x40e9c2
  40e864:	mov    rax,QWORD PTR [r14+0xc0]
  40e86b:	cmp    QWORD PTR [rax],0x0
  40e86f:	je     0x40e9c2
  40e875:	lea    r8,[rax+0x8]
  40e879:	xor    edx,edx
  40e87b:	mov    r9d,0xffffffff
  40e881:	mov    rcx,rbx
  40e884:	call   0x4192e0
  40e889:	lea    ecx,[rax+0x80]
  40e88f:	movsxd rcx,ecx
  40e892:	call   0x42d6b8
  40e897:	test   rax,rax
  40e89a:	mov    rsi,rax
  40e89d:	je     0x40f185
  40e8a3:	mov    r8d,DWORD PTR [r14+0xec]
  40e8aa:	mov    BYTE PTR [rax],0x0
  40e8ad:	test   r8d,r8d
  40e8b0:	jne    0x40ede5
  40e8b6:	cmp    DWORD PTR [rbx+0xa4],0xffffffff
  40e8bd:	je     0x40ee90
  40e8c3:	test   edi,edi
  40e8c5:	jne    0x40e8d8
  40e8c7:	mov    rcx,QWORD PTR [r14+0xc0]
  40e8ce:	cmp    QWORD PTR [rcx],0x0
  40e8d2:	jne    0x40ed4b
  40e8d8:	mov    rdx,rsi
  40e8db:	mov    rcx,rbx
  40e8de:	call   0x417c90
  40e8e3:	mov    rcx,rsi
  40e8e6:	mov    r12d,eax
  40e8e9:	call   0x42d6f8
  40e8ee:	test   r12d,r12d
  40e8f1:	js     0x40e5ce
  40e8f7:	cmp    DWORD PTR [rbx+0xa4],0xffffffff
  40e8fe:	lea    r13,[rsp+0x60]
  40e903:	lea    rsi,[rsp+0x50]
  40e908:	je     0x40e980
  40e90a:	mov    rcx,rbx
  40e90d:	call   0x4231d0
  40e912:	test   eax,eax
  40e914:	js     0x40e9ba
  40e91a:	mov    eax,DWORD PTR [r14+0x94]
  40e921:	xor    r12d,r12d
  40e924:	mov    QWORD PTR [rbx+0x168],0x0
  40e92f:	mov    DWORD PTR [rbx+0x158],eax
  40e935:	jmp    0x40e5ce
  40e93a:	nop    WORD PTR [rax+rax*1+0x0]
  40e940:	mov    rax,QWORD PTR [rbx+0x118]
  40e947:	cmp    WORD PTR [rax+0x8],0x1
  40e94c:	jne    0x40e980
  40e94e:	mov    rax,QWORD PTR [rax]
  40e951:	mov    rdi,QWORD PTR [rax]
  40e954:	mov    edx,DWORD PTR [rdi+0x10]
  40e957:	mov    ecx,DWORD PTR [rdi+0x14]
  40e95a:	call   0x40ac90
  40e95f:	cmp    eax,0x34
  40e962:	je     0x40ef6c
  40e968:	cmp    eax,0x38
  40e96b:	jne    0x40e9b5
  40e96d:	mov    rax,QWORD PTR [rdi+0x48]
  40e971:	mov    eax,DWORD PTR [rax]
  40e973:	mov    DWORD PTR [rbx+0xa4],eax
  40e979:	nop    DWORD PTR [rax+0x0]
  40e980:	mov    r9d,0x500
  40e986:	mov    r8,r13
  40e989:	mov    rdx,rsi
  40e98c:	mov    rcx,rbx
  40e98f:	call   0x421950
  40e994:	test   eax,eax
  40e996:	jne    0x40eeed
  40e99c:	mov    eax,DWORD PTR [rsp+0x50]
  40e9a0:	cmp    eax,0xfc8
  40e9a5:	je     0x40e940
  40e9a7:	cmp    eax,0xfd4
  40e9ac:	jne    0x40e980
  40e9ae:	test   BYTE PTR [rsp+0x60],0x2
  40e9b3:	je     0x40e980
  40e9b5:	mov    eax,0xffffffff
  40e9ba:	mov    r12d,eax
  40e9bd:	jmp    0x40e5ce
  40e9c2:	cmp    DWORD PTR [rbx+0xa4],0xffffffff
  40e9c9:	jne    0x40e91a
  40e9cf:	mov    rax,QWORD PTR [r14+0xc0]
  40e9d6:	jmp    0x40e875
  40e9db:	nop    DWORD PTR [rax+rax*1+0x0]
  40e9e0:	mov    rcx,rbx
  40e9e3:	call   0x413250
  40e9e8:	cmp    r12d,0xffffb1de
  40e9ef:	jne    0x40e6ed
  40e9f5:	add    r15,0x2
  40e9f9:	cmp    r15,rdi
  40e9fc:	jne    0x40e6c3
  40ea02:	jmp    0x40e6ed
  40ea07:	nop    WORD PTR [rax+rax*1+0x0]
  40ea10:	mov    rdx,QWORD PTR [rip+0x2d419]        # 0x43be30
  40ea17:	mov    r13d,DWORD PTR [rdx]
  40ea1a:	test   r13d,r13d
  40ea1d:	je     0x40e5bb
  40ea23:	lea    r8,[rip+0x260e1]        # 0x434b0b
  40ea2a:	lea    rcx,[rip+0x25feb]        # 0x434a1c
  40ea31:	mov    edx,0x1f22
  40ea36:	mov    DWORD PTR [rsp+0x30],eax
  40ea3a:	call   0x40d350
  40ea3f:	mov    eax,DWORD PTR [rsp+0x30]
  40ea43:	jmp    0x40e5bb
  40ea48:	nop    DWORD PTR [rax+rax*1+0x0]
  40ea50:	mov    rax,QWORD PTR [r14+0xb8]
  40ea57:	cmp    QWORD PTR [rax],0x0
  40ea5b:	je     0x40e4d9
  40ea61:	movzx  r8d,BYTE PTR [r14+0xf4]
  40ea69:	lea    rdx,[rax+0x8]
  40ea6d:	mov    rcx,rbx
  40ea70:	shr    r8b,0x7
  40ea74:	and    r8d,0x1
  40ea78:	call   0x40bbc0
  40ea7d:	test   eax,eax
  40ea7f:	jns    0x40e4d9
  40ea85:	mov    r12d,0xffffb1d6
  40ea8b:	jmp    0x40e5ce
  40ea90:	lea    rcx,[rip+0x2609b]        # 0x434b32
  40ea97:	mov    BYTE PTR [rbx+0xf1],0x2
  40ea9e:	call   0x42d6e0
  40eaa3:	test   rax,rax
  40eaa6:	je     0x40ed3f
  40eaac:	lea    rcx,[rip+0x2607f]        # 0x434b32
  40eab3:	call   0x42d6e0
  40eab8:	mov    rdi,rax
  40eabb:	mov    rsi,QWORD PTR [r14+0x70]
  40eabf:	mov    edx,0x5c
  40eac4:	lea    rcx,[rsi+0x8]
  40eac8:	call   0x42d638
  40eacd:	test   rax,rax
  40ead0:	je     0x40eefb
  40ead6:	mov    rax,QWORD PTR [rip+0x2d353]        # 0x43be30
  40eadd:	mov    edi,DWORD PTR [rax]
  40eadf:	test   edi,edi
  40eae1:	jne    0x40ef7e
  40eae7:	mov    eax,0xffffffff
  40eaec:	xor    edi,edi
  40eaee:	jmp    0x40e834
  40eaf3:	mov    rdi,QWORD PTR [r14+0xd8]
  40eafa:	cmp    QWORD PTR [rdi],0x0
  40eafe:	jne    0x40ed21
  40eb04:	lea    rdi,[rip+0x25f99]        # 0x434aa4
  40eb0b:	mov    ebp,0xc
  40eb10:	mov    edx,0xc
  40eb15:	xor    ecx,ecx
  40eb17:	mov    eax,0xc
  40eb1c:	cmp    si,0x701
  40eb21:	mov    BYTE PTR [rsp+0x60],0x0
  40eb26:	mov    BYTE PTR [rsp+0x61],0x0
  40eb2b:	mov    BYTE PTR [rsp+0x62],0x15
  40eb30:	mov    BYTE PTR [rsp+0x63],0x0
  40eb35:	mov    BYTE PTR [rsp+0x64],0x6
  40eb3a:	mov    BYTE PTR [rsp+0x65],0x1
  40eb3f:	mov    BYTE PTR [rsp+0x66],0x0
  40eb44:	mov    BYTE PTR [rsp+0x67],0x1b
  40eb49:	mov    BYTE PTR [rsp+0x68],0x0
  40eb4e:	mov    BYTE PTR [rsp+0x69],0x1
  40eb53:	mov    BYTE PTR [rsp+0x6a],0x2
  40eb58:	mov    BYTE PTR [rsp+0x6b],0x0
  40eb5d:	mov    BYTE PTR [rsp+0x6c],0x1c
  40eb62:	mov    BYTE PTR [rsp+0x6f],0x3
  40eb67:	mov    BYTE PTR [rsp+0x72],0x0
  40eb6c:	mov    BYTE PTR [rsp+0x73],0x4
  40eb71:	mov    BYTE PTR [rsp+0x74],0x4
  40eb76:	mov    BYTE PTR [rsp+0x75],0x0
  40eb7b:	mov    BYTE PTR [rsp+0x76],0x0
  40eb80:	mov    BYTE PTR [rsp+0x77],0x0
  40eb85:	mov    BYTE PTR [rsp+0x78],0x1
  40eb8a:	mov    BYTE PTR [rsp+0x79],0xff
  40eb8f:	mov    BYTE PTR [rsp+0x6d],cl
  40eb93:	mov    BYTE PTR [rsp+0x6e],dl
  40eb97:	jne    0x40ee09
  40eb9d:	add    eax,0x1c
  40eba0:	add    edx,0x1c
  40eba3:	mov    BYTE PTR [rsp+0x74],0xff
  40eba8:	sar    eax,0x8
  40ebab:	mov    BYTE PTR [rsp+0x71],dl
  40ebaf:	mov    r8d,0x15
  40ebb5:	mov    BYTE PTR [rsp+0x70],al
  40ebb9:	cmp    DWORD PTR [rbx+0xe0],0xfff
  40ebc3:	jbe    0x40ee65
  40ebc9:	lea    r13,[rsp+0x60]
  40ebce:	mov    rcx,rbx
  40ebd1:	mov    BYTE PTR [rbx+0xf1],0x12
  40ebd8:	mov    rdx,r13
  40ebdb:	call   0x423f10
  40ebe0:	cmp    WORD PTR [rbx],0x702
  40ebe5:	lea    rax,[rip+0x26047]        # 0x434c33
  40ebec:	lea    rdx,[rip+0x26046]        # 0x434c39
  40ebf3:	mov    r8d,0x6
  40ebf9:	mov    rcx,rbx
  40ebfc:	cmovb  rdx,rax
  40ec00:	call   0x423f10
  40ec05:	xor    edx,edx
  40ec07:	cmp    BYTE PTR [r14+0x90],0x1
  40ec0f:	mov    rcx,rbx
  40ec12:	seta   dl
  40ec15:	call   0x4241d0
  40ec1a:	mov    r8,rbp
  40ec1d:	mov    rdx,rdi
  40ec20:	mov    rcx,rbx
  40ec23:	call   0x423f10
  40ec28:	call   QWORD PTR [rip+0x33cde]        # 0x44290c
  40ec2e:	mov    rcx,rbx
  40ec31:	mov    edx,eax
  40ec33:	call   0x424140
  40ec38:	cmp    WORD PTR [rbx],0x701
  40ec3d:	ja     0x40ee81
  40ec43:	mov    rcx,rbx
  40ec46:	call   0x424270
  40ec4b:	test   eax,eax
  40ec4d:	js     0x40e82f
  40ec53:	mov    rcx,rbx
  40ec56:	call   0x415130
  40ec5b:	test   eax,eax
  40ec5d:	jle    0x40ed17
  40ec63:	cmp    BYTE PTR [rbx+0xf0],0x4
  40ec6a:	jne    0x40ed17
  40ec70:	mov    eax,DWORD PTR [rbx+0xe4]
  40ec76:	mov    edi,DWORD PTR [rbx+0xec]
  40ec7c:	mov    r11d,edi
  40ec7f:	sub    r11d,eax
  40ec82:	add    rax,QWORD PTR [rbx+0xd0]
  40ec89:	test   r11d,r11d
  40ec8c:	mov    r8,rax
  40ec8f:	jle    0x40ed17
  40ec95:	movzx  ebp,BYTE PTR [rax]
  40ec98:	cmp    bpl,0xff
  40ec9c:	je     0x40f4de
  40eca2:	cmp    r11d,0x4
  40eca6:	jle    0x40ed17
  40eca8:	mov    eax,0x5
  40ecad:	mov    esi,0x2
  40ecb2:	jmp    0x40ecef
  40ecb4:	lea    r9d,[rdx+rcx*1]
  40ecb8:	cmp    r11d,r9d
  40ecbb:	jl     0x40ed17
  40ecbd:	test   ecx,ecx
  40ecbf:	je     0x40eccf
  40ecc1:	cmp    bpl,0x1
  40ecc5:	jne    0x40eccf
  40ecc7:	movsxd rdx,edx
  40ecca:	movzx  esi,BYTE PTR [r8+rdx*1]
  40eccf:	cmp    r11d,eax
  40ecd2:	jle    0x40ed17
  40ecd4:	movzx  ebp,BYTE PTR [r8+rax*1]
  40ecd9:	cmp    bpl,0xff
  40ecdd:	je     0x40efa2
  40ece3:	add    rax,0x5
  40ece7:	lea    edx,[rax-0x1]
  40ecea:	cmp    r11d,edx
  40eced:	jle    0x40ed17
  40ecef:	movzx  edx,BYTE PTR [r8+rax*1-0x4]
  40ecf5:	movzx  ecx,BYTE PTR [r8+rax*1-0x3]
  40ecfb:	movzx  r9d,BYTE PTR [r8+rax*1-0x1]
  40ed01:	shl    edx,0x8
  40ed04:	add    edx,ecx
  40ed06:	movzx  ecx,BYTE PTR [r8+rax*1-0x2]
  40ed0c:	shl    ecx,0x8
  40ed0f:	add    ecx,r9d
  40ed12:	cmp    r11d,edx
  40ed15:	jge    0x40ecb4
  40ed17:	mov    eax,0xffffffff
  40ed1c:	jmp    0x40e82f
  40ed21:	add    rdi,0x8
  40ed25:	mov    rcx,rdi
  40ed28:	call   0x42d610
  40ed2d:	add    eax,0x1
  40ed30:	mov    ecx,eax
  40ed32:	mov    edx,eax
  40ed34:	movsxd rbp,eax
  40ed37:	shr    ecx,0x8
  40ed3a:	jmp    0x40eb1c
  40ed3f:	mov    rax,QWORD PTR [r14]
  40ed42:	lea    rdi,[rax+0x8]
  40ed46:	jmp    0x40eabb
  40ed4b:	mov    rdx,rsi
  40ed4e:	mov    r8d,DWORD PTR [rdx]
  40ed51:	add    rdx,0x4
  40ed55:	lea    eax,[r8-0x1010101]
  40ed5c:	not    r8d
  40ed5f:	and    eax,r8d
  40ed62:	and    eax,0x80808080
  40ed67:	je     0x40ed4e
  40ed69:	mov    r8d,eax
  40ed6c:	mov    r9d,0xffffffff
  40ed72:	shr    r8d,0x10
  40ed76:	test   eax,0x8080
  40ed7b:	cmove  eax,r8d
  40ed7f:	lea    r8,[rdx+0x2]
  40ed83:	cmove  rdx,r8
  40ed87:	add    al,al
  40ed89:	lea    r8,[rcx+0x8]
  40ed8d:	sbb    rdx,0x3
  40ed91:	mov    rcx,rbx
  40ed94:	sub    rdx,rsi
  40ed97:	lea    rax,[rsi+rdx*1]
  40ed9b:	lea    rdx,[rsi+rdx*1+0x4]
  40eda0:	mov    DWORD PTR [rax],0x20657375
  40eda6:	mov    BYTE PTR [rax+0x4],0x0
  40edaa:	call   0x4192e0
  40edaf:	jmp    0x40e8d8
  40edb4:	mov    rcx,QWORD PTR [rbx+0x28]
  40edb8:	xor    r9d,r9d
  40edbb:	mov    rdx,rbx
  40edbe:	mov    r8d,0x4e2d
  40edc4:	call   0x423700
  40edc9:	mov    rbx,QWORD PTR [rip+0x2d060]        # 0x43be30
  40edd0:	mov    eax,DWORD PTR [rbx]
  40edd2:	test   eax,eax
  40edd4:	jne    0x40f053
  40edda:	mov    r12d,0xffffb1d7
  40ede0:	jmp    0x40e5ce
  40ede5:	lea    rdx,[rip+0x25e21]        # 0x434c0d
  40edec:	mov    rcx,rax
  40edef:	call   0x42d648
  40edf4:	jmp    0x40e8b6
  40edf9:	mov    r12d,0xffffb1d4
  40edff:	mov    eax,0x4e2c
  40ee04:	jmp    0x40e5b3
  40ee09:	lea    ecx,[rax+0x21]
  40ee0c:	add    eax,0x25
  40ee0f:	mov    BYTE PTR [rsp+0x62],0x1a
  40ee14:	sar    eax,0x8
  40ee17:	mov    BYTE PTR [rsp+0x67],0x20
  40ee1c:	mov    BYTE PTR [rsp+0x6c],0x21
  40ee21:	sar    ecx,0x8
  40ee24:	mov    BYTE PTR [rsp+0x75],al
  40ee28:	mov    r8d,0x1a
  40ee2e:	mov    BYTE PTR [rsp+0x70],cl
  40ee32:	lea    ecx,[rdx+0x21]
  40ee35:	add    edx,0x25
  40ee38:	mov    BYTE PTR [rsp+0x76],dl
  40ee3c:	mov    BYTE PTR [rsp+0x71],cl
  40ee40:	jmp    0x40ebb9
  40ee45:	mov    rcx,QWORD PTR [rcx+0x28]
  40ee49:	xor    r9d,r9d
  40ee4c:	mov    r8d,0x4ef6
  40ee52:	mov    rdx,rbx
  40ee55:	mov    r12d,0xffffffff
  40ee5b:	call   0x423700
  40ee60:	jmp    0x40e5ce
  40ee65:	mov    edx,0x1000
  40ee6a:	mov    rcx,rbx
  40ee6d:	mov    QWORD PTR [rsp+0x30],r8
  40ee72:	call   0x410320
  40ee77:	mov    r8,QWORD PTR [rsp+0x30]
  40ee7c:	jmp    0x40ebc9
  40ee81:	xor    edx,edx
  40ee83:	mov    rcx,rbx
  40ee86:	call   0x4241d0
  40ee8b:	jmp    0x40ec43
  40ee90:	mov    rdx,rsi
  40ee93:	mov    ecx,DWORD PTR [rdx]
  40ee95:	add    rdx,0x4
  40ee99:	lea    eax,[rcx-0x1010101]
  40ee9f:	not    ecx
  40eea1:	and    eax,ecx
  40eea3:	and    eax,0x80808080
  40eea8:	je     0x40ee93
  40eeaa:	mov    ecx,eax
  40eeac:	mov    r8d,0x2064
  40eeb2:	shr    ecx,0x10
  40eeb5:	test   eax,0x8080
  40eeba:	cmove  eax,ecx
  40eebd:	lea    rcx,[rdx+0x2]
  40eec1:	cmove  rdx,rcx
  40eec5:	add    al,al
  40eec7:	movabs rax,0x40207463656c6573
  40eed1:	sbb    rdx,0x3
  40eed5:	mov    QWORD PTR [rdx],rax
  40eed8:	mov    DWORD PTR [rdx+0x8],0x69707340
  40eedf:	mov    WORD PTR [rdx+0xc],r8w
  40eee4:	mov    BYTE PTR [rdx+0xe],0x0
  40eee8:	jmp    0x40e8c3
  40eeed:	cmp    eax,0x1
  40eef0:	jne    0x40e912
  40eef6:	jmp    0x40e91a
  40eefb:	cmp    QWORD PTR [rsi],0x0
  40eeff:	jne    0x40f005
  40ef05:	mov    rax,QWORD PTR [rip+0x2cf24]        # 0x43be30
  40ef0c:	mov    esi,DWORD PTR [rax]
  40ef0e:	test   esi,esi
  40ef10:	je     0x40eae7
  40ef16:	lea    r8,[rip+0x25c53]        # 0x434b70
  40ef1d:	lea    rcx,[rip+0x25af8]        # 0x434a1c
  40ef24:	mov    edx,0x27d2
  40ef29:	call   0x40d350
  40ef2e:	jmp    0x40eae7
  40ef33:	mov    rax,QWORD PTR [rip+0x2cef6]        # 0x43be30
  40ef3a:	mov    edx,DWORD PTR [rax]
  40ef3c:	test   edx,edx
  40ef3e:	jne    0x40f51b
  40ef44:	mov    rcx,rbx
  40ef47:	mov    r12d,0xffffb1de
  40ef4d:	call   0x413250
  40ef52:	mov    rcx,QWORD PTR [rbx+0x28]
  40ef56:	xor    r9d,r9d
  40ef59:	mov    r8d,0x4e22
  40ef5f:	mov    rdx,rbx
  40ef62:	call   0x423700
  40ef67:	jmp    0x40e5ce
  40ef6c:	mov    rax,QWORD PTR [rdi+0x48]
  40ef70:	movzx  eax,WORD PTR [rax]
  40ef73:	mov    DWORD PTR [rbx+0xa4],eax
  40ef79:	jmp    0x40e980
  40ef7e:	lea    r8,[rip+0x25bbb]        # 0x434b40
  40ef85:	lea    rcx,[rip+0x25a90]        # 0x434a1c
  40ef8c:	mov    edx,0x2792
  40ef91:	xor    edi,edi
  40ef93:	call   0x40d350
  40ef98:	mov    eax,0xffffffff
  40ef9d:	jmp    0x40e834
  40efa2:	mov    rax,QWORD PTR [rip+0x2ce87]        # 0x43be30
  40efa9:	mov    DWORD PTR [rbx+0xe4],edi
  40efaf:	mov    ebp,DWORD PTR [rax]
  40efb1:	test   ebp,ebp
  40efb3:	jne    0x40f4fa
  40efb9:	cmp    sil,0x2
  40efbd:	je     0x40f0d0
  40efc3:	mov    rcx,rbx
  40efc6:	call   0x41ddb0
  40efcb:	test   eax,eax
  40efcd:	js     0x40e82f
  40efd3:	mov    rdx,r14
  40efd6:	mov    rcx,rbx
  40efd9:	call   0x40dbe0
  40efde:	mov    edx,eax
  40efe0:	shr    edx,0x1f
  40efe3:	test   dl,dl
  40efe5:	jne    0x40eff0
  40efe7:	test   sil,sil
  40efea:	jne    0x40e82f
  40eff0:	mov    rcx,rbx
  40eff3:	mov    DWORD PTR [rsp+0x30],eax
  40eff7:	call   0x41e150
  40effc:	mov    eax,DWORD PTR [rsp+0x30]
  40f000:	jmp    0x40e82f
  40f005:	cmp    BYTE PTR [r14+0x90],0x0
  40f00d:	je     0x40f0fb
  40f013:	cmp    WORD PTR [rbx],0x402
  40f018:	jne    0x40f0e3
  40f01e:	mov    rax,QWORD PTR [rip+0x2ce0b]        # 0x43be30
  40f025:	mov    r11d,DWORD PTR [rax]
  40f028:	test   r11d,r11d
  40f02b:	je     0x40eae7
  40f031:	lea    r8,[rip+0x25b70]        # 0x434ba8
  40f038:	lea    rcx,[rip+0x259dd]        # 0x434a1c
  40f03f:	mov    edx,0x2822
  40f044:	xor    edi,edi
  40f046:	call   0x40d350
  40f04b:	or     eax,0xffffffff
  40f04e:	jmp    0x40e834
  40f053:	lea    r8,[rip+0x25a68]        # 0x434ac2
  40f05a:	lea    rcx,[rip+0x259bb]        # 0x434a1c
  40f061:	mov    edx,0x1d32
  40f066:	call   0x40d350
  40f06b:	mov    r9,QWORD PTR [r14]
  40f06e:	cmp    QWORD PTR [r9],0x0
  40f072:	jne    0x40f0a3
  40f074:	mov    r14d,DWORD PTR [rbx]
  40f077:	test   r14d,r14d
  40f07a:	je     0x40edda
  40f080:	lea    r8,[rip+0x25a6e]        # 0x434af5
  40f087:	lea    rcx,[rip+0x2598e]        # 0x434a1c
  40f08e:	mov    edx,0x1d72
  40f093:	mov    r12d,0xffffb1d7
  40f099:	call   0x40d350
  40f09e:	jmp    0x40e5ce
  40f0a3:	mov    r15d,DWORD PTR [rbx]
  40f0a6:	test   r15d,r15d
  40f0a9:	je     0x40edda
  40f0af:	lea    r8,[rip+0x25a29]        # 0x434adf
  40f0b6:	lea    rcx,[rip+0x2595f]        # 0x434a1c
  40f0bd:	add    r9,0x8
  40f0c1:	mov    edx,0x1d52
  40f0c6:	call   0x40d350
  40f0cb:	jmp    0x40edda
  40f0d0:	cmp    BYTE PTR [r14+0x90],0x1
  40f0d8:	jbe    0x40e824
  40f0de:	jmp    0x40ed17
  40f0e3:	mov    rcx,rbx
  40f0e6:	call   0x41c740
  40f0eb:	test   rax,rax
  40f0ee:	mov    QWORD PTR [rbx+0xc0],rax
  40f0f5:	je     0x40eae7
  40f0fb:	movzx  eax,WORD PTR [rbx]
  40f0fe:	cmp    ax,0x402
  40f102:	je     0x40f477
  40f108:	cmp    ax,0x406
  40f10c:	je     0x40f45e
  40f112:	cmp    ax,0x500
  40f116:	je     0x40f190
  40f118:	mov    rax,QWORD PTR [rip+0x2cd11]        # 0x43be30
  40f11f:	mov    r10d,DWORD PTR [rax]
  40f122:	test   r10d,r10d
  40f125:	je     0x40eae7
  40f12b:	lea    r8,[rip+0x25aab]        # 0x434bdd
  40f132:	lea    rcx,[rip+0x258e3]        # 0x434a1c
  40f139:	mov    edx,0x2941
  40f13e:	xor    edi,edi
  40f140:	call   0x40d350
  40f145:	or     eax,0xffffffff
  40f148:	jmp    0x40e834
  40f14d:	nop    DWORD PTR [rax]
  40f150:	mov    rax,QWORD PTR [rip+0x2ccd9]        # 0x43be30
  40f157:	mov    eax,DWORD PTR [rax]
  40f159:	test   eax,eax
  40f15b:	je     0x40ef44
  40f161:	lea    r9,[rip+0x25948]        # 0x434ab0
  40f168:	lea    r8,[rip+0x25a8d]        # 0x434bfc
  40f16f:	lea    rcx,[rip+0x258a6]        # 0x434a1c
  40f176:	mov    edx,0x2122
  40f17b:	call   0x40d350
  40f180:	jmp    0x40ef44
  40f185:	mov    r12d,0xffffffff
  40f18b:	jmp    0x40e5ce
  40f190:	mov    eax,DWORD PTR [rip+0x25a42]        # 0x434bd8
  40f196:	mov    DWORD PTR [rsp+0x40],eax
  40f19a:	mov    DWORD PTR [rsp+0x50],eax
  40f19e:	mov    rax,QWORD PTR [r14+0x30]
  40f1a2:	mov    r8d,0x1e
  40f1a8:	mov    rcx,rbx
  40f1ab:	lea    r13,[rsp+0x60]
  40f1b0:	lea    rdx,[rax+0x8]
  40f1b4:	call   0x40e400
  40f1b9:	mov    rax,QWORD PTR [r14+0x70]
  40f1bd:	mov    r8d,0x1e
  40f1c3:	mov    rcx,rbx
  40f1c6:	lea    rdx,[rax+0x8]
  40f1ca:	call   0x40e400
  40f1cf:	mov    rax,QWORD PTR [r14+0x78]
  40f1d3:	mov    r8d,0x1e
  40f1d9:	mov    rcx,rbx
  40f1dc:	lea    rdx,[rax+0x8]
  40f1e0:	call   0x40e400
  40f1e5:	call   QWORD PTR [rip+0x33721]        # 0x44290c
  40f1eb:	lea    rdx,[rip+0x25a06]        # 0x434bf8
  40f1f2:	mov    r8d,eax
  40f1f5:	mov    rcx,r13
  40f1f8:	call   0x42d648
  40f1fd:	mov    r8d,0x1e
  40f203:	mov    rdx,r13
  40f206:	mov    rcx,rbx
  40f209:	call   0x40e400
  40f20e:	lea    rdx,[rip+0x25a0c]        # 0x434c21
  40f215:	mov    r8d,0x6
  40f21b:	mov    rcx,rbx
  40f21e:	call   0x423f10
  40f223:	movzx  edx,BYTE PTR [r14+0xf4]
  40f22b:	mov    rcx,rbx
  40f22e:	and    edx,0x1
  40f231:	call   0x4241d0
  40f236:	xor    edx,edx
  40f238:	mov    r8d,0x2
  40f23e:	mov    rcx,rbx
  40f241:	call   0x423f10
  40f246:	cmp    WORD PTR [rbx],0x402
  40f24b:	je     0x40f4cc
  40f251:	xor    edx,edx
  40f253:	mov    rcx,rbx
  40f256:	call   0x424140
  40f25b:	xor    edx,edx
  40f25d:	mov    r8d,0x3
  40f263:	mov    rcx,rbx
  40f266:	call   0x423f10
  40f26b:	mov    rax,QWORD PTR [r14+0x68]
  40f26f:	mov    r8d,0x1e
  40f275:	mov    rcx,rbx
  40f278:	lea    rdx,[rax+0x8]
  40f27c:	call   0x40e400
  40f281:	mov    r8d,0x1e
  40f287:	mov    rdx,rdi
  40f28a:	mov    rcx,rbx
  40f28d:	call   0x40e400
  40f292:	cmp    WORD PTR [rbx],0x402
  40f297:	je     0x40f568
  40f29d:	cmp    BYTE PTR [r14+0x90],0x0
  40f2a5:	jne    0x40f4b7
  40f2ab:	mov    rax,QWORD PTR [r14+0x78]
  40f2af:	mov    rax,QWORD PTR [rax]
  40f2b2:	cmp    eax,0xfd
  40f2b7:	jg     0x40f4a3
  40f2bd:	mov    edi,0xfd
  40f2c2:	movzx  r12d,al
  40f2c6:	movsxd rbp,eax
  40f2c9:	sub    edi,eax
  40f2cb:	add    eax,0x2
  40f2ce:	movsxd rdi,edi
  40f2d1:	movzx  esi,al
  40f2d4:	xor    edx,edx
  40f2d6:	mov    rcx,rbx
  40f2d9:	call   0x4241d0
  40f2de:	mov    edx,r12d
  40f2e1:	mov    rcx,rbx
  40f2e4:	call   0x4241d0
  40f2e9:	mov    rax,QWORD PTR [r14+0x78]
  40f2ed:	mov    r8,rbp
  40f2f0:	mov    rcx,rbx
  40f2f3:	lea    rdx,[rax+0x8]
  40f2f7:	call   0x423f10
  40f2fc:	xor    edx,edx
  40f2fe:	mov    rcx,rbx
  40f301:	mov    r8,rdi
  40f304:	call   0x423f10
  40f309:	mov    edx,esi
  40f30b:	mov    rcx,rbx
  40f30e:	call   0x4241d0
  40f313:	lea    rdx,[rsp+0x40]
  40f318:	mov    r8d,0x4
  40f31e:	mov    rcx,rbx
  40f321:	call   0x423f10
  40f326:	mov    rax,QWORD PTR [r14+0x88]
  40f32d:	mov    r8d,0xa
  40f333:	mov    rcx,rbx
  40f336:	lea    rdx,[rax+0x8]
  40f33a:	call   0x40e400
  40f33f:	cmp    WORD PTR [rbx],0x402
  40f344:	je     0x40f494
  40f34a:	lea    rsi,[rsp+0x50]
  40f34f:	mov    r8d,0x4
  40f355:	mov    rcx,rbx
  40f358:	mov    rdx,rsi
  40f35b:	call   0x423f10
  40f360:	lea    rdx,[rip+0x258b7]        # 0x434c1e
  40f367:	mov    r8d,0x3
  40f36d:	mov    rcx,rbx
  40f370:	call   0x423f10
  40f375:	mov    rax,QWORD PTR [r14+0x18]
  40f379:	mov    r8d,0x1e
  40f37f:	mov    rcx,rbx
  40f382:	lea    rdx,[rax+0x8]
  40f386:	call   0x40e400
  40f38b:	movzx  edx,BYTE PTR [r14+0xf4]
  40f393:	mov    rcx,rbx
  40f396:	shr    dl,1
  40f398:	and    edx,0x1
  40f39b:	call   0x4241d0
  40f3a0:	mov    r8d,0x2
  40f3a6:	xor    edx,edx
  40f3a8:	mov    rcx,rbx
  40f3ab:	call   0x423f10
  40f3b0:	cmp    BYTE PTR [r14+0x90],0x1
  40f3b8:	mov    rcx,rbx
  40f3bb:	sbb    edx,edx
  40f3bd:	not    edx
  40f3bf:	and    edx,0xa0
  40f3c5:	call   0x4241d0
  40f3ca:	xor    edx,edx
  40f3cc:	mov    r8d,0xa
  40f3d2:	mov    rcx,rbx
  40f3d5:	call   0x423f10
  40f3da:	lea    rdx,[rip+0x2581a]        # 0x434bfb
  40f3e1:	mov    r8d,0x1e
  40f3e7:	mov    rcx,rbx
  40f3ea:	call   0x40e400
  40f3ef:	mov    edx,0x1
  40f3f4:	mov    rcx,rbx
  40f3f7:	call   0x4241d0
  40f3fc:	mov    r8d,DWORD PTR [r14+0x10]
  40f400:	lea    eax,[r8-0x200]
  40f407:	cmp    eax,0xfdff
  40f40c:	ja     0x40f48a
  40f40e:	lea    rdx,[rip+0x257e3]        # 0x434bf8
  40f415:	mov    rcx,r13
  40f418:	call   0x42d648
  40f41d:	mov    r8d,0x6
  40f423:	mov    rdx,r13
  40f426:	mov    rcx,rbx
  40f429:	call   0x40e400
  40f42e:	movzx  eax,WORD PTR [rbx]
  40f431:	cmp    ax,0x402
  40f435:	je     0x40f598
  40f43b:	cmp    ax,0x406
  40f43f:	je     0x40f583
  40f445:	cmp    ax,0x500
  40f449:	je     0x40f527
  40f44f:	mov    rcx,rbx
  40f452:	xor    edi,edi
  40f454:	call   0x424270
  40f459:	jmp    0x40e834
  40f45e:	mov    eax,DWORD PTR [rip+0x2576f]        # 0x434bd3
  40f464:	mov    DWORD PTR [rsp+0x40],eax
  40f468:	mov    eax,DWORD PTR [rip+0x25760]        # 0x434bce
  40f46e:	mov    DWORD PTR [rsp+0x50],eax
  40f472:	jmp    0x40f19e
  40f477:	mov    eax,DWORD PTR [rip+0x25751]        # 0x434bce
  40f47d:	mov    DWORD PTR [rsp+0x40],eax
  40f481:	mov    DWORD PTR [rsp+0x50],eax
  40f485:	jmp    0x40f19e
  40f48a:	mov    DWORD PTR [rsp+0x60],0x323135
  40f492:	jmp    0x40f41d
  40f494:	xor    edx,edx
  40f496:	mov    rcx,rbx
  40f499:	call   0x424140
  40f49e:	jmp    0x40f360
  40f4a3:	mov    esi,0x2
  40f4a8:	mov    edi,0xfd
  40f4ad:	xor    ebp,ebp
  40f4af:	xor    r12d,r12d
  40f4b2:	jmp    0x40f2d4
  40f4b7:	mov    r8d,0x100
  40f4bd:	xor    edx,edx
  40f4bf:	mov    rcx,rbx
  40f4c2:	call   0x423f10
  40f4c7:	jmp    0x40f313
  40f4cc:	mov    edx,0x200
  40f4d1:	mov    rcx,rbx
  40f4d4:	call   0x424140
  40f4d9:	jmp    0x40f25b
  40f4de:	mov    rax,QWORD PTR [rip+0x2c94b]        # 0x43be30
  40f4e5:	mov    DWORD PTR [rbx+0xe4],edi
  40f4eb:	mov    ecx,DWORD PTR [rax]
  40f4ed:	test   ecx,ecx
  40f4ef:	je     0x40f0d0
  40f4f5:	mov    esi,0x2
  40f4fa:	lea    r8,[rip+0x2561f]        # 0x434b20
  40f501:	lea    rcx,[rip+0x25514]        # 0x434a1c
  40f508:	movsx  r9d,sil
  40f50c:	mov    edx,0x4a15
  40f511:	call   0x40d350
  40f516:	jmp    0x40efb9
  40f51b:	lea    r9,[rip+0x25597]        # 0x434ab9
  40f522:	jmp    0x40f168
  40f527:	mov    r8d,0x4
  40f52d:	xor    edx,edx
  40f52f:	mov    rcx,rbx
  40f532:	call   0x423f10
  40f537:	mov    rcx,rbx
  40f53a:	mov    edx,0xe2
  40f53f:	call   0x4241d0
  40f544:	mov    rcx,rbx
  40f547:	mov    edx,0x20
  40f54c:	call   0x424180
  40f551:	lea    rdx,[rbx+0x7d]
  40f555:	mov    r8d,0x20
  40f55b:	mov    rcx,rbx
  40f55e:	call   0x423f10
  40f563:	jmp    0x40f44f
  40f568:	mov    rax,QWORD PTR [r14+0x78]
  40f56c:	mov    r8d,0xff
  40f572:	mov    rcx,rbx
  40f575:	lea    rdx,[rax+0x8]
  40f579:	call   0x40e400
  40f57e:	jmp    0x40f313
  40f583:	mov    r8d,0x4
  40f589:	xor    edx,edx
  40f58b:	mov    rcx,rbx
  40f58e:	call   0x423f10
  40f593:	jmp    0x40f44f
  40f598:	mov    r8d,0x8
  40f59e:	xor    edx,edx
  40f5a0:	mov    rcx,rbx
  40f5a3:	call   0x423f10
  40f5a8:	jmp    0x40f44f
  40f5ad:	nop    DWORD PTR [rax]
  40f5b0:	shl    edx,0x8
  40f5b3:	movzx  r8d,r8b
  40f5b7:	add    edx,r8d
  40f5ba:	mov    WORD PTR [rcx+0xc],dx
  40f5be:	ret    
  40f5bf:	nop
  40f5c0:	mov    DWORD PTR [rcx+0x10],edx
  40f5c3:	ret    
  40f5c4:	xchg   ax,ax
  40f5c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f5d0:	mov    DWORD PTR [rcx+0x8],edx
  40f5d3:	ret    
  40f5d4:	xchg   ax,ax
  40f5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f5e0:	push   rsi
  40f5e1:	push   rbx
  40f5e2:	sub    rsp,0x28
  40f5e6:	mov    eax,0x1
  40f5eb:	test   rdx,rdx
  40f5ee:	je     0x40f610
  40f5f0:	lea    rbx,[rcx+0x78]
  40f5f4:	mov    rsi,rdx
  40f5f7:	mov    rcx,rbx
  40f5fa:	call   0x41d610
  40f5ff:	mov    rdx,rsi
  40f602:	mov    rcx,rbx
  40f605:	call   0x41d6f0
  40f60a:	test   rax,rax
  40f60d:	setne  al
  40f610:	add    rsp,0x28
  40f614:	pop    rbx
  40f615:	pop    rsi
  40f616:	ret    
  40f617:	nop    WORD PTR [rax+rax*1+0x0]
  40f620:	test   dl,dl
  40f622:	movzx  edx,BYTE PTR [rcx+0xf4]
  40f629:	sete   al
  40f62c:	and    edx,0xfffffffe
  40f62f:	or     eax,edx
  40f631:	mov    BYTE PTR [rcx+0xf4],al
  40f637:	ret    
  40f638:	nop    DWORD PTR [rax+rax*1+0x0]
  40f640:	sub    rsp,0x28
  40f644:	add    rcx,0x70
  40f648:	call   0x41d6f0
  40f64d:	test   rax,rax
  40f650:	setne  al
  40f653:	add    rsp,0x28
  40f657:	ret    
  40f658:	nop    DWORD PTR [rax+rax*1+0x0]
  40f660:	sub    rsp,0x28
  40f664:	add    rcx,0x30
  40f668:	call   0x41d6f0
  40f66d:	test   rax,rax
  40f670:	setne  al
  40f673:	add    rsp,0x28
  40f677:	ret    
  40f678:	nop    DWORD PTR [rax+rax*1+0x0]
  40f680:	sub    rsp,0x28
  40f684:	add    rcx,0x68
  40f688:	call   0x41d6f0
  40f68d:	test   rax,rax
  40f690:	setne  al
  40f693:	add    rsp,0x28
  40f697:	ret    
  40f698:	nop    DWORD PTR [rax+rax*1+0x0]
  40f6a0:	sub    rsp,0x28
  40f6a4:	mov    eax,0x1
  40f6a9:	test   rdx,rdx
  40f6ac:	je     0x40f6b9
  40f6ae:	call   0x41d6f0
  40f6b3:	test   rax,rax
  40f6b6:	setne  al
  40f6b9:	add    rsp,0x28
  40f6bd:	ret    
  40f6be:	xchg   ax,ax
  40f6c0:	sub    rsp,0x28
  40f6c4:	add    rcx,0x88
  40f6cb:	call   0x41d6f0
  40f6d0:	test   rax,rax
  40f6d3:	setne  al
  40f6d6:	add    rsp,0x28
  40f6da:	ret    
  40f6db:	nop    DWORD PTR [rax+rax*1+0x0]
  40f6e0:	sub    rsp,0x28
  40f6e4:	add    rcx,0xb8
  40f6eb:	call   0x41d6f0
  40f6f0:	test   rax,rax
  40f6f3:	setne  al
  40f6f6:	add    rsp,0x28
  40f6fa:	ret    
  40f6fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f700:	sub    rsp,0x28
  40f704:	add    rcx,0x18
  40f708:	call   0x41d6f0
  40f70d:	test   rax,rax
  40f710:	setne  al
  40f713:	add    rsp,0x28
  40f717:	ret    
  40f718:	nop    DWORD PTR [rax+rax*1+0x0]
  40f720:	sub    rsp,0x38
  40f724:	lea    r8,[rsp+0x2c]
  40f729:	mov    DWORD PTR [rsp+0x2c],0x0
  40f731:	call   0x40e450
  40f736:	add    rsp,0x38
  40f73a:	ret    
  40f73b:	nop
  40f73c:	nop
  40f73d:	nop
  40f73e:	nop
  40f73f:	nop
  40f740:	sub    rsp,0x28
  40f744:	mov    edx,0xb0
  40f749:	mov    ecx,0x1
  40f74e:	call   0x42d740
  40f753:	test   rax,rax
  40f756:	je     0x40f76b
  40f758:	mov    rdx,QWORD PTR [rip+0x2c691]        # 0x43bdf0
  40f75f:	mov    QWORD PTR [rax+0x30],rdx
  40f763:	mov    QWORD PTR [rax+0x38],rdx
  40f767:	mov    QWORD PTR [rax+0x40],rdx
  40f76b:	add    rsp,0x28
  40f76f:	ret    
  40f770:	push   rbx
  40f771:	sub    rsp,0x20
  40f775:	mov    rbx,rcx
  40f778:	mov    rcx,QWORD PTR [rcx+0x48]
  40f77c:	test   rcx,rcx
  40f77f:	je     0x40f794
  40f781:	cmp    BYTE PTR [rbx+0x18],0x2
  40f785:	ja     0x40f7a0
  40f787:	call   0x42d6f8
  40f78c:	mov    QWORD PTR [rbx+0x48],0x0
  40f794:	add    rsp,0x20
  40f798:	pop    rbx
  40f799:	ret    
  40f79a:	nop    WORD PTR [rax+rax*1+0x0]
  40f7a0:	mov    rcx,QWORD PTR [rcx]
  40f7a3:	call   0x42d6f8
  40f7a8:	mov    rcx,QWORD PTR [rbx+0x48]
  40f7ac:	jmp    0x40f787
  40f7ae:	xchg   ax,ax
  40f7b0:	push   rbx
  40f7b1:	sub    rsp,0x20
  40f7b5:	mov    rbx,rcx
  40f7b8:	lea    rcx,[rcx+0x30]
  40f7bc:	call   0x41d630
  40f7c1:	lea    rcx,[rbx+0x38]
  40f7c5:	call   0x41d630
  40f7ca:	lea    rcx,[rbx+0x40]
  40f7ce:	call   0x41d630
  40f7d3:	mov    rcx,rbx
  40f7d6:	add    rsp,0x20
  40f7da:	pop    rbx
  40f7db:	jmp    0x42d6f8
  40f7e0:	push   r12
  40f7e2:	push   rbp
  40f7e3:	push   rdi
  40f7e4:	push   rsi
  40f7e5:	push   rbx
  40f7e6:	sub    rsp,0x20
  40f7ea:	test   rcx,rcx
  40f7ed:	je     0x40f854
  40f7ef:	test   rdx,rdx
  40f7f2:	je     0x40f854
  40f7f4:	xor    edi,edi
  40f7f6:	xor    esi,esi
  40f7f8:	cmp    WORD PTR [rcx+0x8],0x0
  40f7fd:	mov    r12,rdx
  40f800:	mov    rbx,rcx
  40f803:	je     0x40f842
  40f805:	mov    rax,QWORD PTR [rbx]
  40f808:	mov    rax,QWORD PTR [rax+rdi*1]
  40f80c:	cmp    BYTE PTR [rax+0x18],0x2
  40f810:	jbe    0x40f833
  40f812:	mov    rbp,r12
  40f815:	add    rbp,QWORD PTR [rax+0x48]
  40f819:	sub    rbp,QWORD PTR [rbx+0x18]
  40f81d:	mov    rcx,QWORD PTR [rbp+0x0]
  40f821:	test   rcx,rcx
  40f824:	je     0x40f833
  40f826:	call   0x42d6f8
  40f82b:	mov    QWORD PTR [rbp+0x0],0x0
  40f833:	movzx  eax,WORD PTR [rbx+0x8]
  40f837:	add    esi,0x1
  40f83a:	add    rdi,0x8
  40f83e:	cmp    esi,eax
  40f840:	jl     0x40f805
  40f842:	mov    rcx,r12
  40f845:	add    rsp,0x20
  40f849:	pop    rbx
  40f84a:	pop    rsi
  40f84b:	pop    rdi
  40f84c:	pop    rbp
  40f84d:	pop    r12
  40f84f:	jmp    0x42d6f8
  40f854:	add    rsp,0x20
  40f858:	pop    rbx
  40f859:	pop    rsi
  40f85a:	pop    rdi
  40f85b:	pop    rbp
  40f85c:	pop    r12
  40f85e:	ret    
  40f85f:	nop
  40f860:	push   rbx
  40f861:	sub    rsp,0x1e0
  40f868:	cmp    BYTE PTR [rip+0x31c49],0x0        # 0x4414b8
  40f86f:	je     0x40f880
  40f871:	mov    eax,0x1
  40f876:	add    rsp,0x1e0
  40f87d:	pop    rbx
  40f87e:	ret    
  40f87f:	nop
  40f880:	mov    ecx,DWORD PTR [rip+0x31c02]        # 0x441488
  40f886:	test   ecx,ecx
  40f888:	jne    0x40f902
  40f88a:	lea    rcx,[rip+0x31bef]        # 0x441480
  40f891:	call   0x424920
  40f896:	cmp    BYTE PTR [rip+0x31c1b],0x0        # 0x4414b8
  40f89d:	jne    0x40f8f0
  40f89f:	lea    rdx,[rsp+0x40]
  40f8a4:	mov    ecx,0x202
  40f8a9:	call   QWORD PTR [rip+0x33445]        # 0x442cf4
  40f8af:	test   eax,eax
  40f8b1:	mov    ebx,eax
  40f8b3:	lea    rcx,[rip+0x31bd6]        # 0x441490
  40f8ba:	sete   BYTE PTR [rip+0x31bf7]        # 0x4414b8
  40f8c1:	call   QWORD PTR [rip+0x3309d]        # 0x442964
  40f8c7:	test   ebx,ebx
  40f8c9:	je     0x40f871
  40f8cb:	mov    ecx,ebx
  40f8cd:	call   0x413380
  40f8d2:	mov    rdx,QWORD PTR [rip+0x2c557]        # 0x43be30
  40f8d9:	mov    edx,DWORD PTR [rdx]
  40f8db:	test   edx,edx
  40f8dd:	jne    0x40f911
  40f8df:	mov    rcx,rax
  40f8e2:	call   0x4148c0
  40f8e7:	xor    eax,eax
  40f8e9:	jmp    0x40f876
  40f8eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f8f0:	lea    rcx,[rip+0x31b99]        # 0x441490
  40f8f7:	call   QWORD PTR [rip+0x33067]        # 0x442964
  40f8fd:	jmp    0x40f871
  40f902:	lea    rcx,[rip+0x31b87]        # 0x441490
  40f909:	call   QWORD PTR [rip+0x32fe5]        # 0x4428f4
  40f90f:	jmp    0x40f896
  40f911:	lea    r8,[rip+0x25338]        # 0x434c50
  40f918:	lea    rcx,[rip+0x25363]        # 0x434c82
  40f91f:	mov    QWORD PTR [rsp+0x20],rax
  40f924:	mov    r9d,ebx
  40f927:	mov    edx,0x2b02
  40f92c:	mov    QWORD PTR [rsp+0x38],rax
  40f931:	call   0x40d350
  40f936:	mov    rax,QWORD PTR [rsp+0x38]
  40f93b:	jmp    0x40f8df
  40f93d:	nop    DWORD PTR [rax]
  40f940:	push   r13
  40f942:	push   r12
  40f944:	push   rbp
  40f945:	push   rdi
  40f946:	push   rsi
  40f947:	push   rbx
  40f948:	sub    rsp,0x48
  40f94c:	test   rdx,rdx
  40f94f:	mov    rdi,rcx
  40f952:	mov    rsi,rdx
  40f955:	je     0x40f9b4
  40f957:	call   0x41f600
  40f95c:	test   rax,rax
  40f95f:	jne    0x40fa5a
  40f965:	mov    edx,0x48
  40f96a:	mov    ecx,0x1
  40f96f:	call   0x42d740
  40f974:	test   rax,rax
  40f977:	mov    rbx,rax
  40f97a:	je     0x40fa5a
  40f980:	mov    DWORD PTR [rax+0x8],0x2
  40f987:	mov    rax,QWORD PTR [rdi+0x58]
  40f98b:	lea    rcx,[rbx+0x10]
  40f98f:	mov    QWORD PTR [rdi+0x58],rbx
  40f993:	mov    r8d,0x1e
  40f999:	mov    rdx,rsi
  40f99c:	mov    QWORD PTR [rbx],rax
  40f99f:	call   0x4248b0
  40f9a4:	mov    rax,rbx
  40f9a7:	add    rsp,0x48
  40f9ab:	pop    rbx
  40f9ac:	pop    rsi
  40f9ad:	pop    rdi
  40f9ae:	pop    rbp
  40f9af:	pop    r12
  40f9b1:	pop    r13
  40f9b3:	ret    
  40f9b4:	mov    eax,ecx
  40f9b6:	mov    edx,0x4ec4ec4f
  40f9bb:	mov    r12d,ecx
  40f9be:	mul    edx
  40f9c0:	lea    rsi,[rsp+0x20]
  40f9c5:	mov    ebx,0x100
  40f9ca:	mov    r13d,0x38e38e39
  40f9d0:	shr    edx,0x3
  40f9d3:	imul   eax,edx,0x1a
  40f9d6:	mov    ebp,edx
  40f9d8:	sub    r12d,eax
  40f9db:	add    r12d,0x61
  40f9df:	nop
  40f9e0:	mov    eax,DWORD PTR [rip+0x1e63a]        # 0x42e020
  40f9e6:	mov    BYTE PTR [rsp+0x20],r12b
  40f9eb:	mov    r8d,ebp
  40f9ee:	mov    ecx,0x1
  40f9f3:	lea    r9,[rsi+0x1]
  40f9f7:	add    eax,0x1
  40f9fa:	movzx  eax,ax
  40f9fd:	mov    DWORD PTR [rip+0x1e61d],eax        # 0x42e020
  40fa03:	jmp    0x40fa08
  40fa05:	add    ecx,0x1
  40fa08:	mov    eax,r8d
  40fa0b:	add    r9,0x1
  40fa0f:	mul    r13d
  40fa12:	shr    edx,0x3
  40fa15:	lea    eax,[rdx+rdx*8]
  40fa18:	shl    eax,0x2
  40fa1b:	sub    r8d,eax
  40fa1e:	lea    eax,[r8+0x30]
  40fa22:	add    r8d,0x57
  40fa26:	cmp    al,0x39
  40fa28:	cmovbe r8d,eax
  40fa2c:	cmp    ecx,0x5
  40fa2f:	mov    BYTE PTR [r9-0x1],r8b
  40fa33:	mov    r8d,edx
  40fa36:	je     0x40fa69
  40fa38:	cmp    ecx,0x9
  40fa3b:	jne    0x40fa05
  40fa3d:	mov    BYTE PTR [r9],0x0
  40fa41:	mov    rdx,rsi
  40fa44:	mov    rcx,rdi
  40fa47:	call   0x41f600
  40fa4c:	test   rax,rax
  40fa4f:	je     0x40f965
  40fa55:	sub    ebx,0x1
  40fa58:	jne    0x40f9e0
  40fa5a:	xor    eax,eax
  40fa5c:	add    rsp,0x48
  40fa60:	pop    rbx
  40fa61:	pop    rsi
  40fa62:	pop    rdi
  40fa63:	pop    rbp
  40fa64:	pop    r12
  40fa66:	pop    r13
  40fa68:	ret    
  40fa69:	mov    eax,DWORD PTR [rip+0x1e5b1]        # 0x42e020
  40fa6f:	lea    eax,[rax+rax*2]
  40fa72:	add    r8d,eax
  40fa75:	jmp    0x40fa05
  40fa77:	nop    WORD PTR [rax+rax*1+0x0]
  40fa80:	push   rsi
  40fa81:	push   rbx
  40fa82:	sub    rsp,0x28
  40fa86:	test   rcx,rcx
  40fa89:	je     0x40fad4
  40fa8b:	movzx  eax,WORD PTR [rcx+0x8]
  40fa8f:	test   ax,ax
  40fa92:	je     0x40fad4
  40fa94:	mov    rdx,QWORD PTR [rcx]
  40fa97:	sub    eax,0x1
  40fa9a:	mov    rbx,rcx
  40fa9d:	mov    WORD PTR [rcx+0x8],ax
  40faa1:	movzx  ecx,ax
  40faa4:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40faa8:	cmp    QWORD PTR [rsi+0x48],0x0
  40faad:	je     0x40fac1
  40faaf:	mov    rdx,QWORD PTR [rsi+0x50]
  40fab3:	test   rdx,rdx
  40fab6:	je     0x40fac1
  40fab8:	mov    rcx,rsi
  40fabb:	call   rdx
  40fabd:	movzx  eax,WORD PTR [rbx+0x8]
  40fac1:	test   ax,ax
  40fac4:	je     0x40fae0
  40fac6:	mov    rcx,rsi
  40fac9:	add    rsp,0x28
  40facd:	pop    rbx
  40face:	pop    rsi
  40facf:	jmp    0x40f7b0
  40fad4:	add    rsp,0x28
  40fad8:	pop    rbx
  40fad9:	pop    rsi
  40fada:	ret    
  40fadb:	nop    DWORD PTR [rax+rax*1+0x0]
  40fae0:	mov    rcx,QWORD PTR [rbx]
  40fae3:	call   0x42d6f8
  40fae8:	mov    rcx,rsi
  40faeb:	mov    QWORD PTR [rbx],0x0
  40faf2:	add    rsp,0x28
  40faf6:	pop    rbx
  40faf7:	pop    rsi
  40faf8:	jmp    0x40f7b0
  40fafd:	nop    DWORD PTR [rax]
  40fb00:	push   rsi
  40fb01:	push   rbx
  40fb02:	sub    rsp,0x28
  40fb06:	mov    rax,QWORD PTR [rcx]
  40fb09:	mov    rbx,rcx
  40fb0c:	call   QWORD PTR [rax+0x10]
  40fb0f:	cmp    QWORD PTR [rbx+0x48],0x0
  40fb14:	mov    esi,eax
  40fb16:	je     0x40fb26
  40fb18:	mov    rax,QWORD PTR [rbx+0x50]
  40fb1c:	test   rax,rax
  40fb1f:	je     0x40fb26
  40fb21:	mov    rcx,rbx
  40fb24:	call   rax
  40fb26:	lea    rax,[rip+0xfffffffffffffc43]        # 0x40f770
  40fb2d:	movsxd rcx,esi
  40fb30:	mov    QWORD PTR [rbx+0x50],rax
  40fb34:	call   0x42d6b8
  40fb39:	test   rax,rax
  40fb3c:	mov    QWORD PTR [rbx+0x48],rax
  40fb40:	je     0x40fb80
  40fb42:	cmp    BYTE PTR [rbx+0x18],0x2
  40fb46:	ja     0x40fb50
  40fb48:	add    rsp,0x28
  40fb4c:	pop    rbx
  40fb4d:	pop    rsi
  40fb4e:	ret    
  40fb4f:	nop
  40fb50:	mov    QWORD PTR [rax],0x0
  40fb57:	mov    QWORD PTR [rax+0x8],0x0
  40fb5f:	mov    QWORD PTR [rax+0x10],0x0
  40fb67:	mov    QWORD PTR [rax+0x18],0x0
  40fb6f:	mov    QWORD PTR [rax+0x20],0x0
  40fb77:	add    rsp,0x28
  40fb7b:	pop    rbx
  40fb7c:	pop    rsi
  40fb7d:	ret    
  40fb7e:	xchg   ax,ax
  40fb80:	xor    eax,eax
  40fb82:	jmp    0x40fb48
  40fb84:	xchg   ax,ax
  40fb86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fb90:	test   rdx,rdx
  40fb93:	je     0x40fbd1
  40fb95:	mov    rax,QWORD PTR [rdx+0x10]
  40fb99:	test   rax,rax
  40fb9c:	je     0x40fbb1
  40fb9e:	mov    QWORD PTR [rax+0x110],0x0
  40fba9:	mov    QWORD PTR [rdx+0x10],0x0
  40fbb1:	mov    rax,QWORD PTR [rcx+0x110]
  40fbb8:	test   rax,rax
  40fbbb:	je     0x40fbc5
  40fbbd:	mov    QWORD PTR [rax+0x10],0x0
  40fbc5:	mov    QWORD PTR [rdx+0x10],rcx
  40fbc9:	mov    QWORD PTR [rcx+0x110],rdx
  40fbd0:	ret    
  40fbd1:	mov    rax,QWORD PTR [rcx+0x110]
  40fbd8:	test   rax,rax
  40fbdb:	je     0x40fbc9
  40fbdd:	mov    QWORD PTR [rax+0x10],0x0
  40fbe5:	mov    QWORD PTR [rcx+0x110],rdx
  40fbec:	ret    
  40fbed:	nop    DWORD PTR [rax]
  40fbf0:	test   rcx,rcx
  40fbf3:	je     0x40fc11
  40fbf5:	mov    rax,QWORD PTR [rcx+0x10]
  40fbf9:	test   rax,rax
  40fbfc:	je     0x40fc11
  40fbfe:	mov    QWORD PTR [rax+0x110],0x0
  40fc09:	mov    QWORD PTR [rcx+0x10],0x0
  40fc11:	repz ret 
  40fc13:	nop    DWORD PTR [rax]
  40fc16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fc20:	push   r12
  40fc22:	push   rbp
  40fc23:	push   rdi
  40fc24:	push   rsi
  40fc25:	push   rbx
  40fc26:	sub    rsp,0x20
  40fc2a:	movzx  edi,WORD PTR [rcx+0x8]
  40fc2e:	mov    r12,rcx
  40fc31:	test   edi,edi
  40fc33:	je     0x40fcd9
  40fc39:	lea    eax,[rdi-0x1]
  40fc3c:	xor    esi,esi
  40fc3e:	xor    ebx,ebx
  40fc40:	lea    rbp,[rax*8+0x8]
  40fc48:	nop    DWORD PTR [rax+rax*1+0x0]
  40fc50:	mov    rax,QWORD PTR [r12]
  40fc54:	mov    rcx,QWORD PTR [rax+rsi*1]
  40fc58:	add    rsi,0x8
  40fc5c:	mov    rdx,QWORD PTR [rcx]
  40fc5f:	mov    QWORD PTR [rcx+0x50],0x0
  40fc67:	call   QWORD PTR [rdx+0x10]
  40fc6a:	lea    ebx,[rax+rbx*1+0x7]
  40fc6e:	and    ebx,0xfffffff8
  40fc71:	cmp    rsi,rbp
  40fc74:	jne    0x40fc50
  40fc76:	mov    DWORD PTR [r12+0x28],ebx
  40fc7b:	movsxd rcx,ebx
  40fc7e:	mov    edx,0x1
  40fc83:	call   0x42d740
  40fc88:	test   rax,rax
  40fc8b:	mov    rbp,rax
  40fc8e:	mov    QWORD PTR [r12+0x18],rax
  40fc93:	je     0x40fd04
  40fc95:	lea    rax,[rip+0xfffffffffffffb44]        # 0x40f7e0
  40fc9c:	xor    esi,esi
  40fc9e:	xor    ebx,ebx
  40fca0:	mov    QWORD PTR [r12+0x20],rax
  40fca5:	mov    rax,QWORD PTR [r12]
  40fca9:	mov    r8d,ebx
  40fcac:	add    r8,rbp
  40fcaf:	mov    rcx,QWORD PTR [rax+rsi*8]
  40fcb3:	add    rsi,0x1
  40fcb7:	mov    rax,QWORD PTR [rcx]
  40fcba:	mov    QWORD PTR [rcx+0x48],r8
  40fcbe:	call   QWORD PTR [rax+0x10]
  40fcc1:	lea    ebx,[rax+rbx*1+0x7]
  40fcc5:	and    ebx,0xfffffff8
  40fcc8:	cmp    edi,esi
  40fcca:	jg     0x40fca5
  40fccc:	xor    eax,eax
  40fcce:	add    rsp,0x20
  40fcd2:	pop    rbx
  40fcd3:	pop    rsi
  40fcd4:	pop    rdi
  40fcd5:	pop    rbp
  40fcd6:	pop    r12
  40fcd8:	ret    
  40fcd9:	mov    DWORD PTR [rcx+0x28],0x0
  40fce0:	mov    edx,0x1
  40fce5:	xor    ecx,ecx
  40fce7:	call   0x42d740
  40fcec:	test   rax,rax
  40fcef:	mov    QWORD PTR [r12+0x18],rax
  40fcf4:	je     0x40fd04
  40fcf6:	lea    rax,[rip+0xfffffffffffffae3]        # 0x40f7e0
  40fcfd:	mov    QWORD PTR [r12+0x20],rax
  40fd02:	jmp    0x40fccc
  40fd04:	mov    eax,0xffffffff
  40fd09:	jmp    0x40fcce
  40fd0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fd10:	jmp    0x40fc20
  40fd15:	nop
  40fd16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fd20:	push   rsi
  40fd21:	push   rbx
  40fd22:	sub    rsp,0x28
  40fd26:	test   rcx,rcx
  40fd29:	mov    rbx,rcx
  40fd2c:	mov    rsi,rdx
  40fd2f:	je     0x40fd60
  40fd31:	test   rsi,rsi
  40fd34:	je     0x40fd50
  40fd36:	mov    rax,QWORD PTR [rbx+0x20]
  40fd3a:	test   rax,rax
  40fd3d:	je     0x40fd50
  40fd3f:	mov    rdx,rsi
  40fd42:	mov    rcx,rbx
  40fd45:	add    rsp,0x28
  40fd49:	pop    rbx
  40fd4a:	pop    rsi
  40fd4b:	rex.W jmp rax
  40fd4e:	xchg   ax,ax
  40fd50:	add    rsp,0x28
  40fd54:	pop    rbx
  40fd55:	pop    rsi
  40fd56:	ret    
  40fd57:	nop    WORD PTR [rax+rax*1+0x0]
  40fd60:	lea    rdx,[rip+0x24f1b]        # 0x434c82
  40fd67:	lea    rcx,[rip+0x24f1a]        # 0x434c88
  40fd6e:	mov    r8d,0x251
  40fd74:	call   0x42d350
  40fd79:	jmp    0x40fd31
  40fd7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fd80:	push   r12
  40fd82:	push   rbp
  40fd83:	push   rdi
  40fd84:	push   rsi
  40fd85:	push   rbx
  40fd86:	sub    rsp,0xb0
  40fd8d:	mov    eax,0x702
  40fd92:	lea    r12,[rcx+0xb8]
  40fd99:	mov    rdi,rdx
  40fd9c:	lea    rdx,[rip+0x24eee]        # 0x434c91
  40fda3:	mov    BYTE PTR [rcx+0xf0],0x3
  40fdaa:	mov    WORD PTR [rcx+0xc],ax
  40fdae:	mov    rbx,rcx
  40fdb1:	mov    DWORD PTR [rcx+0x10],0x0
  40fdb8:	mov    rcx,r12
  40fdbb:	mov    QWORD PTR [rsp+0x28],0x0
  40fdc4:	call   0x41d6f0
  40fdc9:	test   rax,rax
  40fdcc:	je     0x40ff25
  40fdd2:	xor    edx,edx
  40fdd4:	xor    ecx,ecx
  40fdd6:	call   0x42d658
  40fddb:	mov    rcx,rax
  40fdde:	call   QWORD PTR [rip+0x32cc8]        # 0x442aac
  40fde4:	test   rax,rax
  40fde7:	mov    rsi,rax
  40fdea:	je     0x40ff25
  40fdf0:	lea    rbp,[rsp+0x28]
  40fdf5:	lea    rdx,[rip+0x24ea0]        # 0x434c9c
  40fdfc:	mov    rcx,rax
  40fdff:	mov    r8,rbp
  40fe02:	call   0x42d410
  40fe07:	test   rax,rax
  40fe0a:	je     0x40fe76
  40fe0c:	lea    rdx,[rip+0x24e8b]        # 0x434c9e
  40fe13:	mov    r8,rbp
  40fe16:	xor    ecx,ecx
  40fe18:	call   0x42d410
  40fe1d:	test   rax,rax
  40fe20:	mov    rbp,rax
  40fe23:	je     0x40fe76
  40fe25:	mov    rcx,rax
  40fe28:	call   0x42d748
  40fe2d:	test   eax,eax
  40fe2f:	jle    0x40fe62
  40fe31:	lea    rcx,[rsp+0x30]
  40fe36:	lea    rdx,[rip+0x24e63]        # 0x434ca0
  40fe3d:	mov    r8,rbp
  40fe40:	call   0x42d4a0
  40fe45:	test   eax,eax
  40fe47:	js     0x40fe62
  40fe49:	mov    rcx,rsi
  40fe4c:	call   0x42d6f8
  40fe51:	mov    rbp,QWORD PTR [rsp+0x30]
  40fe56:	test   rbp,rbp
  40fe59:	je     0x40ff35
  40fe5f:	mov    rsi,rbp
  40fe62:	mov    rdx,rbp
  40fe65:	mov    rcx,r12
  40fe68:	call   0x41d6f0
  40fe6d:	test   rax,rax
  40fe70:	je     0x40ff25
  40fe76:	mov    rcx,rsi
  40fe79:	call   0x42d6f8
  40fe7e:	test   rdi,rdi
  40fe81:	je     0x40feb4
  40fe83:	mov    rdx,QWORD PTR [rdi]
  40fe86:	test   rdx,rdx
  40fe89:	je     0x40fe9d
  40fe8b:	lea    rcx,[rbx+0x18]
  40fe8f:	call   0x41d6f0
  40fe94:	test   rax,rax
  40fe97:	je     0x40ff25
  40fe9d:	mov    rdx,QWORD PTR [rdi+0x8]
  40fea1:	test   rdx,rdx
  40fea4:	je     0x40feb4
  40fea6:	lea    rcx,[rbx+0x20]
  40feaa:	call   0x41d6f0
  40feaf:	test   rax,rax
  40feb2:	je     0x40ff25
  40feb4:	mov    rax,QWORD PTR [rbx+0x18]
  40feb8:	cmp    QWORD PTR [rax],0x0
  40febc:	je     0x40ff10
  40febe:	lea    rsi,[rsp+0x30]
  40fec3:	xor    eax,eax
  40fec5:	mov    ecx,0x10
  40feca:	mov    edx,0x80
  40fecf:	mov    rdi,rsi
  40fed2:	rep stos QWORD PTR es:[rdi],rax
  40fed5:	mov    rcx,rsi
  40fed8:	call   QWORD PTR [rip+0x32e56]        # 0x442d34
  40fede:	lea    rcx,[rbx+0x30]
  40fee2:	mov    rdx,rsi
  40fee5:	mov    BYTE PTR [rsp+0xaf],0x0
  40feed:	call   0x41d6f0
  40fef2:	test   rax,rax
  40fef5:	je     0x40ff25
  40fef7:	or     BYTE PTR [rbx+0xf5],0x6
  40fefe:	mov    rax,rbx
  40ff01:	add    rsp,0xb0
  40ff08:	pop    rbx
  40ff09:	pop    rsi
  40ff0a:	pop    rdi
  40ff0b:	pop    rbp
  40ff0c:	pop    r12
  40ff0e:	ret    
  40ff0f:	nop
  40ff10:	lea    rcx,[rbx+0x18]
  40ff14:	lea    rdx,[rip+0x24d8a]        # 0x434ca5
  40ff1b:	call   0x41d6f0
  40ff20:	test   rax,rax
  40ff23:	jne    0x40febe
  40ff25:	xor    eax,eax
  40ff27:	add    rsp,0xb0
  40ff2e:	pop    rbx
  40ff2f:	pop    rsi
  40ff30:	pop    rdi
  40ff31:	pop    rbp
  40ff32:	pop    r12
  40ff34:	ret    
  40ff35:	xor    esi,esi
  40ff37:	jmp    0x40fe76
  40ff3c:	nop    DWORD PTR [rax+0x0]
  40ff40:	push   rsi
  40ff41:	push   rbx
  40ff42:	sub    rsp,0x38
  40ff46:	mov    edx,0xf8
  40ff4b:	mov    esi,ecx
  40ff4d:	mov    ecx,0x1
  40ff52:	call   0x42d740
  40ff57:	test   rax,rax
  40ff5a:	mov    rbx,rax
  40ff5d:	je     0x410130
  40ff63:	or     BYTE PTR [rax+0xf5],0x4
  40ff6a:	or     BYTE PTR [rax+0xf4],0x80
  40ff71:	test   esi,esi
  40ff73:	mov    rax,QWORD PTR [rip+0x2be76]        # 0x43bdf0
  40ff7a:	mov    QWORD PTR [rbx+0xc8],0x0
  40ff85:	lea    rdx,[rip+0x24d24]        # 0x434cb0
  40ff8c:	mov    QWORD PTR [rbx+0xd0],0x0
  40ff97:	mov    QWORD PTR [rbx],rax
  40ff9a:	mov    QWORD PTR [rbx+0x18],rax
  40ff9e:	mov    QWORD PTR [rbx+0x20],rax
  40ffa2:	mov    QWORD PTR [rbx+0x30],rax
  40ffa6:	mov    QWORD PTR [rbx+0x38],rax
  40ffaa:	mov    QWORD PTR [rbx+0x68],rax
  40ffae:	mov    QWORD PTR [rbx+0x70],rax
  40ffb2:	mov    QWORD PTR [rbx+0x78],rax
  40ffb6:	mov    QWORD PTR [rbx+0x88],rax
  40ffbd:	mov    QWORD PTR [rbx+0x80],rax
  40ffc4:	mov    QWORD PTR [rbx+0xc0],rax
  40ffcb:	mov    QWORD PTR [rbx+0xe0],rax
  40ffd2:	mov    QWORD PTR [rbx+0xb8],rax
  40ffd9:	mov    QWORD PTR [rbx+0xd8],rax
  40ffe0:	mov    QWORD PTR [rbx+0x40],rax
  40ffe4:	mov    QWORD PTR [rbx+0x48],rax
  40ffe8:	mov    QWORD PTR [rbx+0x58],rax
  40ffec:	mov    QWORD PTR [rbx+0x60],rax
  40fff0:	mov    QWORD PTR [rbx+0x50],rax
  40fff4:	jne    0x4100f5
  40fffa:	mov    rcx,rbx
  40fffd:	call   0x41d6f0
  410002:	test   rax,rax
  410005:	je     0x410139
  41000b:	mov    BYTE PTR [rbx+0x98],0x1
  410012:	mov    BYTE PTR [rbx+0x99],0xe
  410019:	mov    rax,rbx
  41001c:	mov    BYTE PTR [rbx+0x9a],0x0
  410023:	mov    BYTE PTR [rbx+0x9b],0x0
  41002a:	mov    BYTE PTR [rbx+0x9c],0x60
  410031:	mov    BYTE PTR [rbx+0x9d],0x8
  410038:	mov    BYTE PTR [rbx+0x9e],0x81
  41003f:	mov    BYTE PTR [rbx+0x9f],0x81
  410046:	mov    BYTE PTR [rbx+0xa0],0xe8
  41004d:	mov    BYTE PTR [rbx+0xa1],0xf
  410054:	mov    BYTE PTR [rbx+0xa2],0x6d
  41005b:	mov    BYTE PTR [rbx+0xa3],0x7f
  410062:	mov    BYTE PTR [rbx+0xa4],0xff
  410069:	mov    BYTE PTR [rbx+0xa5],0xff
  410070:	mov    BYTE PTR [rbx+0xa6],0xff
  410077:	mov    BYTE PTR [rbx+0xa7],0xfe
  41007e:	mov    BYTE PTR [rbx+0xa8],0x2
  410085:	mov    BYTE PTR [rbx+0xa9],0xe
  41008c:	mov    BYTE PTR [rbx+0xaa],0x0
  410093:	mov    BYTE PTR [rbx+0xab],0x0
  41009a:	mov    BYTE PTR [rbx+0xac],0x0
  4100a1:	mov    BYTE PTR [rbx+0xad],0x0
  4100a8:	mov    BYTE PTR [rbx+0xae],0x0
  4100af:	mov    BYTE PTR [rbx+0xaf],0x0
  4100b6:	mov    BYTE PTR [rbx+0xb0],0x0
  4100bd:	mov    BYTE PTR [rbx+0xb1],0x0
  4100c4:	mov    BYTE PTR [rbx+0xb2],0x0
  4100cb:	mov    BYTE PTR [rbx+0xb3],0x2
  4100d2:	mov    BYTE PTR [rbx+0xb4],0x68
  4100d9:	mov    BYTE PTR [rbx+0xb5],0x0
  4100e0:	mov    BYTE PTR [rbx+0xb6],0x0
  4100e7:	mov    BYTE PTR [rbx+0xb7],0x0
  4100ee:	add    rsp,0x38
  4100f2:	pop    rbx
  4100f3:	pop    rsi
  4100f4:	ret    
  4100f5:	lea    rcx,[rip+0x24bbb]        # 0x434cb7
  4100fc:	mov    QWORD PTR [rsp+0x28],rdx
  410101:	call   0x42d6e0
  410106:	mov    rdx,QWORD PTR [rsp+0x28]
  41010b:	lea    rcx,[rip+0x24bad]        # 0x434cbf
  410112:	test   rax,rax
  410115:	mov    rsi,rax
  410118:	cmove  rsi,rdx
  41011c:	call   0x42d6e0
  410121:	mov    rdx,rax
  410124:	test   rax,rax
  410127:	cmove  rdx,rsi
  41012b:	jmp    0x40fffa
  410130:	xor    eax,eax
  410132:	add    rsp,0x38
  410136:	pop    rbx
  410137:	pop    rsi
  410138:	ret    
  410139:	mov    rcx,rbx
  41013c:	call   0x42d6f8
  410141:	xor    eax,eax
  410143:	jmp    0x4100ee
  410145:	nop
  410146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410150:	push   rsi
  410151:	push   rbx
  410152:	sub    rsp,0x28
  410156:	test   rcx,rcx
  410159:	je     0x410254
  41015f:	lea    rsi,[rcx+0x78]
  410163:	mov    rbx,rcx
  410166:	mov    rcx,rsi
  410169:	call   0x41d610
  41016e:	mov    rcx,rsi
  410171:	lea    rsi,[rbx+0x80]
  410178:	call   0x41d630
  41017d:	mov    rcx,rsi
  410180:	call   0x41d610
  410185:	mov    rcx,rsi
  410188:	call   0x41d630
  41018d:	mov    rcx,rbx
  410190:	call   0x41d630
  410195:	lea    rcx,[rbx+0x18]
  410199:	call   0x41d630
  41019e:	lea    rcx,[rbx+0x20]
  4101a2:	call   0x41d630
  4101a7:	lea    rcx,[rbx+0x30]
  4101ab:	call   0x41d630
  4101b0:	lea    rcx,[rbx+0x68]
  4101b4:	call   0x41d630
  4101b9:	lea    rcx,[rbx+0x70]
  4101bd:	call   0x41d630
  4101c2:	lea    rcx,[rbx+0x88]
  4101c9:	call   0x41d630
  4101ce:	lea    rcx,[rbx+0xb8]
  4101d5:	call   0x41d630
  4101da:	lea    rcx,[rbx+0x38]
  4101de:	call   0x41d630
  4101e3:	mov    rcx,QWORD PTR [rbx+0xc8]
  4101ea:	test   rcx,rcx
  4101ed:	je     0x4101f5
  4101ef:	call   QWORD PTR [rip+0x32b2f]        # 0x442d24
  4101f5:	lea    rcx,[rbx+0xc0]
  4101fc:	call   0x41d630
  410201:	lea    rcx,[rbx+0xe0]
  410208:	call   0x41d630
  41020d:	lea    rcx,[rbx+0xd8]
  410214:	call   0x41d630
  410219:	lea    rcx,[rbx+0x40]
  41021d:	call   0x41d630
  410222:	lea    rcx,[rbx+0x48]
  410226:	call   0x41d630
  41022b:	lea    rcx,[rbx+0x58]
  41022f:	call   0x41d630
  410234:	lea    rcx,[rbx+0x60]
  410238:	call   0x41d630
  41023d:	lea    rcx,[rbx+0x50]
  410241:	call   0x41d630
  410246:	mov    rcx,rbx
  410249:	add    rsp,0x28
  41024d:	pop    rbx
  41024e:	pop    rsi
  41024f:	jmp    0x42d6f8
  410254:	add    rsp,0x28
  410258:	pop    rbx
  410259:	pop    rsi
  41025a:	ret    
  41025b:	nop    DWORD PTR [rax+rax*1+0x0]
  410260:	push   rbp
  410261:	push   rdi
  410262:	push   rsi
  410263:	push   rbx
  410264:	sub    rsp,0x28
  410268:	mov    edi,edx
  41026a:	mov    rbp,rcx
  41026d:	lea    rcx,[rdi+0x14]
  410271:	call   0x42d6b8
  410276:	test   rax,rax
  410279:	mov    rbx,rax
  41027c:	je     0x4102ac
  41027e:	mov    DWORD PTR [rax+0xc],0x0
  410285:	xor    eax,eax
  410287:	test   rbp,rbp
  41028a:	mov    DWORD PTR [rbx+0x10],edi
  41028d:	mov    WORD PTR [rbx+0x8],ax
  410291:	mov    QWORD PTR [rbx],0x0
  410298:	je     0x4102ac
  41029a:	lea    rcx,[rbx+0x14]
  41029e:	mov    r8,rdi
  4102a1:	mov    rdx,rbp
  4102a4:	call   0x42d6a8
  4102a9:	mov    DWORD PTR [rbx+0xc],edi
  4102ac:	mov    rax,rbx
  4102af:	add    rsp,0x28
  4102b3:	pop    rbx
  4102b4:	pop    rsi
  4102b5:	pop    rdi
  4102b6:	pop    rbp
  4102b7:	ret    
  4102b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4102c0:	push   rbx
  4102c1:	sub    rsp,0x20
  4102c5:	cmp    DWORD PTR [rcx+0x10],edx
  4102c8:	mov    rax,rcx
  4102cb:	mov    ebx,edx
  4102cd:	jb     0x4102d5
  4102cf:	add    rsp,0x20
  4102d3:	pop    rbx
  4102d4:	ret    
  4102d5:	mov    edx,edx
  4102d7:	add    rdx,0x14
  4102db:	call   0x42d668
  4102e0:	test   rax,rax
  4102e3:	je     0x4102cf
  4102e5:	mov    DWORD PTR [rax+0x10],ebx
  4102e8:	add    rsp,0x20
  4102ec:	pop    rbx
  4102ed:	ret    
  4102ee:	xchg   ax,ax
  4102f0:	push   rbx
  4102f1:	sub    rsp,0x20
  4102f5:	test   rcx,rcx
  4102f8:	je     0x410310
  4102fa:	nop    WORD PTR [rax+rax*1+0x0]
  410300:	mov    rbx,QWORD PTR [rcx]
  410303:	call   0x42d6f8
  410308:	test   rbx,rbx
  41030b:	mov    rcx,rbx
  41030e:	jne    0x410300
  410310:	add    rsp,0x20
  410314:	pop    rbx
  410315:	ret    
  410316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410320:	push   rdi
  410321:	push   rsi
  410322:	push   rbx
  410323:	sub    rsp,0x20
  410327:	test   rcx,rcx
  41032a:	mov    rbx,rcx
  41032d:	mov    rsi,rdx
  410330:	je     0x4103a0
  410332:	cmp    QWORD PTR [rcx+0xd8],0x0
  41033a:	je     0x4103a0
  41033c:	cmp    QWORD PTR [rcx+0x108],0x0
  410344:	je     0x4103a0
  410346:	cmp    rsi,0x1ff
  41034d:	mov    eax,esi
  41034f:	ja     0x41035b
  410351:	mov    eax,0x200
  410356:	mov    esi,0x200
  41035b:	mov    DWORD PTR [rbx+0x30],eax
  41035e:	mov    eax,DWORD PTR [rbx+0xe8]
  410364:	cmp    rsi,rax
  410367:	jb     0x4103e0
  410369:	mov    rax,QWORD PTR [rbx+0x108]
  410370:	mov    edi,esi
  410372:	add    esi,0x10
  410375:	cmp    esi,DWORD PTR [rax+0x10]
  410378:	ja     0x4103c0
  41037a:	lea    rdx,[rax+0x14]
  41037e:	mov    QWORD PTR [rbx+0x108],rax
  410385:	mov    rax,rbx
  410388:	mov    DWORD PTR [rbx+0xe0],edi
  41038e:	mov    QWORD PTR [rbx+0xd8],rdx
  410395:	add    rsp,0x20
  410399:	pop    rbx
  41039a:	pop    rsi
  41039b:	pop    rdi
  41039c:	ret    
  41039d:	nop    DWORD PTR [rax]
  4103a0:	lea    rdx,[rip+0x248db]        # 0x434c82
  4103a7:	lea    rcx,[rip+0x2491a]        # 0x434cc8
  4103ae:	mov    r8d,0x4fb
  4103b4:	call   0x42d350
  4103b9:	jmp    0x410346
  4103bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4103c0:	mov    edx,esi
  4103c2:	mov    rcx,rax
  4103c5:	add    rdx,0x14
  4103c9:	call   0x42d668
  4103ce:	test   rax,rax
  4103d1:	je     0x4103e0
  4103d3:	mov    DWORD PTR [rax+0x10],esi
  4103d6:	jmp    0x41037a
  4103d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4103e0:	xor    eax,eax
  4103e2:	add    rsp,0x20
  4103e6:	pop    rbx
  4103e7:	pop    rsi
  4103e8:	pop    rdi
  4103e9:	ret    
  4103ea:	nop    WORD PTR [rax+rax*1+0x0]
  4103f0:	push   rbx
  4103f1:	sub    rsp,0x20
  4103f5:	test   rcx,rcx
  4103f8:	je     0x410424
  4103fa:	mov    rbx,rcx
  4103fd:	mov    rcx,QWORD PTR [rcx]
  410400:	call   0x42d6f8
  410405:	mov    rcx,QWORD PTR [rbx+0x8]
  410409:	call   0x42d6f8
  41040e:	mov    rcx,QWORD PTR [rbx+0x10]
  410412:	call   0x42d6f8
  410417:	mov    rcx,rbx
  41041a:	add    rsp,0x20
  41041e:	pop    rbx
  41041f:	jmp    0x42d6f8
  410424:	add    rsp,0x20
  410428:	pop    rbx
  410429:	ret    
  41042a:	nop    WORD PTR [rax+rax*1+0x0]
  410430:	push   rsi
  410431:	push   rbx
  410432:	sub    rsp,0x28
  410436:	mov    rsi,rcx
  410439:	call   0x40f860
  41043e:	test   eax,eax
  410440:	je     0x410480
  410442:	call   0x42ac20
  410447:	test   rax,rax
  41044a:	mov    rbx,rax
  41044d:	je     0x410480
  41044f:	mov    edx,0x28
  410454:	mov    ecx,0x1
  410459:	call   0x42d740
  41045e:	test   rax,rax
  410461:	je     0x410471
  410463:	mov    QWORD PTR [rax],rbx
  410466:	mov    QWORD PTR [rax+0x8],rsi
  41046a:	add    rsp,0x28
  41046e:	pop    rbx
  41046f:	pop    rsi
  410470:	ret    
  410471:	mov    rcx,rbx
  410474:	call   0x4103f0
  410479:	nop    DWORD PTR [rax+0x0]
  410480:	xor    eax,eax
  410482:	add    rsp,0x28
  410486:	pop    rbx
  410487:	pop    rsi
  410488:	ret    
  410489:	nop    DWORD PTR [rax+0x0]
  410490:	push   rbx
  410491:	sub    rsp,0x20
  410495:	test   rcx,rcx
  410498:	je     0x4104b2
  41049a:	mov    rbx,rcx
  41049d:	mov    rcx,QWORD PTR [rcx]
  4104a0:	call   0x4103f0
  4104a5:	mov    rcx,rbx
  4104a8:	add    rsp,0x20
  4104ac:	pop    rbx
  4104ad:	jmp    0x42d6f8
  4104b2:	add    rsp,0x20
  4104b6:	pop    rbx
  4104b7:	ret    
  4104b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4104c0:	sub    rsp,0x38
  4104c4:	mov    edx,0x18
  4104c9:	mov    ecx,0x1
  4104ce:	call   0x42d740
  4104d3:	test   rax,rax
  4104d6:	je     0x4104dd
  4104d8:	add    rsp,0x38
  4104dc:	ret    
  4104dd:	xor    ecx,ecx
  4104df:	mov    QWORD PTR [rsp+0x28],rax
  4104e4:	call   0x4103f0
  4104e9:	mov    rax,QWORD PTR [rsp+0x28]
  4104ee:	jmp    0x4104d8
  4104f0:	push   rbx
  4104f1:	sub    rsp,0x20
  4104f5:	test   rcx,rcx
  4104f8:	je     0x41055b
  4104fa:	xor    eax,eax
  4104fc:	mov    rbx,rcx
  4104ff:	mov    BYTE PTR [rcx+0x2a],0x0
  410503:	mov    WORD PTR [rcx+0x28],ax
  410507:	mov    DWORD PTR [rcx+0x20],0x0
  41050e:	mov    BYTE PTR [rcx+0x2b],0x0
  410512:	mov    DWORD PTR [rcx+0x24],0x0
  410519:	mov    rcx,QWORD PTR [rcx+0x8]
  41051d:	call   0x42d6f8
  410522:	mov    rcx,QWORD PTR [rbx]
  410525:	mov    QWORD PTR [rbx+0x8],0x0
  41052d:	call   0x42d6f8
  410532:	mov    rcx,QWORD PTR [rbx+0x10]
  410536:	mov    QWORD PTR [rbx],0x0
  41053d:	call   0x42d6f8
  410542:	mov    rcx,QWORD PTR [rbx+0x18]
  410546:	mov    QWORD PTR [rbx+0x10],0x0
  41054e:	call   0x42d6f8
  410553:	mov    QWORD PTR [rbx+0x18],0x0
  41055b:	add    rsp,0x20
  41055f:	pop    rbx
  410560:	ret    
  410561:	nop    DWORD PTR [rax+rax*1+0x0]
  410566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410570:	cmp    ecx,0x4268
  410576:	mov    eax,ecx
  410578:	je     0x410610
  41057e:	jle    0x4105d1
  410580:	cmp    ecx,0x4e29
  410586:	je     0x4105c0
  410588:	jle    0x4105b0
  41058a:	cmp    ecx,0x4e33
  410590:	je     0x410602
  410592:	cmp    ecx,0x4e34
  410598:	je     0x4105c0
  41059a:	cmp    ecx,0x4e2e
  4105a0:	je     0x410630
  4105a6:	xor    eax,eax
  4105a8:	ret    
  4105a9:	nop    DWORD PTR [rax+0x0]
  4105b0:	cmp    ecx,0x4e24
  4105b6:	je     0x4105c0
  4105b8:	cmp    ecx,0x4e26
  4105be:	jne    0x4105a6
  4105c0:	lea    rcx,[rip+0x24747]        # 0x434d0e
  4105c7:	mov    rax,QWORD PTR [rip+0x324de]        # 0x442aac
  4105ce:	rex.W jmp rax
  4105d1:	cmp    ecx,0x962
  4105d7:	je     0x410620
  4105d9:	lea    rcx,[rip+0x24716]        # 0x434cf6
  4105e0:	jle    0x4105f2
  4105e2:	cmp    eax,0x963
  4105e7:	je     0x4105c7
  4105e9:	cmp    eax,0x964
  4105ee:	je     0x4105c7
  4105f0:	jmp    0x4105a6
  4105f2:	cmp    eax,0x960
  4105f7:	je     0x4105c7
  4105f9:	cmp    eax,0x961
  4105fe:	je     0x4105c7
  410600:	jmp    0x4105a6
  410602:	lea    rcx,[rip+0x246f9]        # 0x434d02
  410609:	jmp    0x4105c7
  41060b:	nop    DWORD PTR [rax+rax*1+0x0]
  410610:	lea    rcx,[rip+0x246f1]        # 0x434d08
  410617:	jmp    0x4105c7
  410619:	nop    DWORD PTR [rax+0x0]
  410620:	lea    rcx,[rip+0x246c9]        # 0x434cf0
  410627:	jmp    0x4105c7
  410629:	nop    DWORD PTR [rax+0x0]
  410630:	lea    rcx,[rip+0x246c5]        # 0x434cfc
  410637:	jmp    0x4105c7
  410639:	nop    DWORD PTR [rax+0x0]
  410640:	push   rbx
  410641:	sub    rsp,0x20
  410645:	mov    ecx,DWORD PTR [rcx+0x4]
  410648:	test   ecx,ecx
  41064a:	js     0x410750
  410650:	cmp    edx,0x235
  410656:	je     0x4117b8
  41065c:	jle    0x4106d2
  41065e:	cmp    edx,0xf44
  410664:	je     0x4117c4
  41066a:	jle    0x4107e0
  410670:	cmp    edx,0x2853
  410676:	je     0x41177c
  41067c:	jg     0x410970
  410682:	cmp    edx,0x1873
  410688:	je     0x411770
  41068e:	jle    0x410c70
  410694:	cmp    edx,0x1c9f
  41069a:	je     0x411818
  4106a0:	jg     0x410f71
  4106a6:	cmp    edx,0x1901
  4106ac:	je     0x411920
  4106b2:	cmp    edx,0x1b62
  4106b8:	je     0x411914
  4106be:	cmp    edx,0x1874
  4106c4:	jne    0x410740
  4106c6:	lea    rcx,[rip+0x24635]        # 0x434d02
  4106cd:	jmp    0x410a10
  4106d2:	cmp    edx,0x101
  4106d8:	je     0x411a1c
  4106de:	jle    0x410850
  4106e4:	cmp    edx,0x20c
  4106ea:	je     0x411a10
  4106f0:	jg     0x410940
  4106f6:	cmp    edx,0x200
  4106fc:	je     0x411a04
  410702:	jle    0x410cf4
  410708:	cmp    edx,0x208
  41070e:	je     0x411974
  410714:	jg     0x410fa1
  41071a:	cmp    edx,0x206
  410720:	je     0x4118a8
  410726:	jg     0x41189c
  41072c:	cmp    edx,0x205
  410732:	lea    rcx,[rip+0x24611]        # 0x434d4a
  410739:	je     0x410a10
  41073f:	nop
  410740:	xor    ebx,ebx
  410742:	jmp    0x410a3b
  410747:	nop    WORD PTR [rax+rax*1+0x0]
  410750:	cmp    edx,0xa42
  410756:	je     0x411f53
  41075c:	jle    0x4108c0
  410762:	cmp    edx,0x17d8
  410768:	je     0x4121b7
  41076e:	jg     0x410a90
  410774:	cmp    edx,0xf4c
  41077a:	je     0x4121ab
  410780:	jle    0x410ea0
  410786:	cmp    edx,0x12e2
  41078c:	je     0x4121c3
  410792:	jg     0x4110e0
  410798:	cmp    edx,0xf56
  41079e:	je     0x411d8b
  4107a4:	jg     0x4114d0
  4107aa:	cmp    edx,0xf4f
  4107b0:	je     0x411f3b
  4107b6:	jle    0x411b87
  4107bc:	cmp    edx,0xf51
  4107c2:	je     0x4120eb
  4107c8:	cmp    edx,0xf52
  4107ce:	jne    0x410740
  4107d4:	lea    rcx,[rip+0x24587]        # 0x434d62
  4107db:	jmp    0x410a10
  4107e0:	cmp    edx,0x9de
  4107e6:	je     0x411794
  4107ec:	jg     0x4109c1
  4107f2:	cmp    edx,0x38f
  4107f8:	je     0x411788
  4107fe:	jle    0x410cb2
  410804:	cmp    edx,0x6b3
  41080a:	je     0x411824
  410810:	jg     0x410fe0
  410816:	cmp    edx,0x5e1
  41081c:	je     0x411950
  410822:	cmp    edx,0x5e4
  410828:	je     0x411944
  41082e:	cmp    edx,0x4fc
  410834:	jne    0x410740
  41083a:	lea    rcx,[rip+0x24521]        # 0x434d62
  410841:	jmp    0x410a10
  410846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410850:	cmp    edx,0xe5
  410856:	je     0x411998
  41085c:	jg     0x410a44
  410862:	cmp    edx,0xc9
  410868:	je     0x41198c
  41086e:	jle    0x410b70
  410874:	cmp    edx,0xd0
  41087a:	je     0x411854
  410880:	jle    0x4112f0
  410886:	cmp    edx,0xdc
  41088c:	je     0x411848
  410892:	cmp    edx,0xe3
  410898:	je     0x41183c
  41089e:	cmp    edx,0xd5
  4108a4:	jne    0x410740
  4108aa:	lea    rcx,[rip+0x24475]        # 0x434d26
  4108b1:	jmp    0x410a10
  4108b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4108c0:	cmp    edx,0x128
  4108c6:	je     0x411e9f
  4108cc:	jg     0x410b00
  4108d2:	cmp    edx,0xe9
  4108d8:	je     0x411e93
  4108de:	jle    0x410e40
  4108e4:	cmp    edx,0xf7
  4108ea:	je     0x411fb3
  4108f0:	jg     0x411040
  4108f6:	cmp    edx,0xf1
  4108fc:	je     0x411e87
  410902:	jg     0x411460
  410908:	cmp    edx,0xeb
  41090e:	je     0x41210f
  410914:	lea    rcx,[rip+0x2441d]        # 0x434d38
  41091b:	jl     0x410a10
  410921:	cmp    edx,0xec
  410927:	je     0x410a10
  41092d:	cmp    edx,0xee
  410933:	je     0x410a10
  410939:	xor    ebx,ebx
  41093b:	jmp    0x410a3b
  410940:	cmp    edx,0x222
  410946:	je     0x4117a0
  41094c:	jle    0x410c32
  410952:	cmp    edx,0x226
  410958:	je     0x411980
  41095e:	jg     0x410fb0
  410964:	lea    rcx,[rip+0x243f1]        # 0x434d5c
  41096b:	jmp    0x410a10
  410970:	cmp    edx,0x2b6e
  410976:	je     0x411704
  41097c:	jle    0x410bf0
  410982:	cmp    edx,0x46ab
  410988:	je     0x411830
  41098e:	jg     0x411010
  410994:	cmp    edx,0x4346
  41099a:	je     0x4117dc
  4109a0:	cmp    edx,0x4347
  4109a6:	je     0x4117d0
  4109ac:	cmp    edx,0x2b71
  4109b2:	jne    0x410740
  4109b8:	lea    rcx,[rip+0x24337]        # 0x434cf6
  4109bf:	jmp    0x410a10
  4109c1:	cmp    edx,0xe15
  4109c7:	je     0x41174c
  4109cd:	jle    0x410d40
  4109d3:	cmp    edx,0xe75
  4109d9:	je     0x411758
  4109df:	jg     0x410f15
  4109e5:	cmp    edx,0xe17
  4109eb:	je     0x411908
  4109f1:	jl     0x4118fc
  4109f7:	cmp    edx,0xe25
  4109fd:	lea    rcx,[rip+0x2438e]        # 0x434d92
  410a04:	jne    0x410740
  410a0a:	nop    WORD PTR [rax+rax*1+0x0]
  410a10:	call   QWORD PTR [rip+0x32096]        # 0x442aac
  410a16:	test   rax,rax
  410a19:	mov    rbx,rax
  410a1c:	je     0x410a3b
  410a1e:	lea    rdx,[rip+0x24373]        # 0x434d98
  410a25:	mov    r8d,0x3
  410a2b:	mov    rcx,rbx
  410a2e:	call   0x42d6b0
  410a33:	test   eax,eax
  410a35:	je     0x410f00
  410a3b:	mov    rax,rbx
  410a3e:	add    rsp,0x20
  410a42:	pop    rbx
  410a43:	ret    
  410a44:	cmp    edx,0xee
  410a4a:	je     0x4117ac
  410a50:	jle    0x410bb0
  410a56:	cmp    edx,0xf7
  410a5c:	je     0x41180c
  410a62:	jg     0x410f45
  410a68:	cmp    edx,0xf5
  410a6e:	je     0x4116f8
  410a74:	lea    rcx,[rip+0x242bd]        # 0x434d38
  410a7b:	jg     0x410a10
  410a7d:	cmp    edx,0xf4
  410a83:	je     0x410a10
  410a85:	xor    ebx,ebx
  410a87:	jmp    0x410a3b
  410a89:	nop    DWORD PTR [rax+0x0]
  410a90:	cmp    edx,0x3b8f
  410a96:	je     0x412103
  410a9c:	jle    0x410de0
  410aa2:	cmp    edx,0x4267
  410aa8:	je     0x412013
  410aae:	jg     0x411130
  410ab4:	cmp    edx,0x3d1d
  410aba:	je     0x4120a3
  410ac0:	jg     0x4115a8
  410ac6:	cmp    edx,0x3cf5
  410acc:	je     0x411e1b
  410ad2:	jle    0x411d07
  410ad8:	cmp    edx,0x3d06
  410ade:	je     0x411e33
  410ae4:	cmp    edx,0x3d0a
  410aea:	jne    0x410740
  410af0:	lea    rcx,[rip+0x2426b]        # 0x434d62
  410af7:	jmp    0x410a10
  410afc:	nop    DWORD PTR [rax+0x0]
  410b00:	cmp    edx,0x21e
  410b06:	je     0x4120f7
  410b0c:	jle    0x410d82
  410b12:	cmp    edx,0x5e1
  410b18:	je     0x411fbf
  410b1e:	jg     0x411090
  410b24:	cmp    edx,0x272
  410b2a:	je     0x411dbb
  410b30:	jg     0x411496
  410b36:	cmp    edx,0x223
  410b3c:	je     0x411e6f
  410b42:	jle    0x411cef
  410b48:	cmp    edx,0x226
  410b4e:	je     0x411e03
  410b54:	cmp    edx,0x263
  410b5a:	jne    0x410740
  410b60:	lea    rcx,[rip+0x241fb]        # 0x434d62
  410b67:	jmp    0x410a10
  410b6c:	nop    DWORD PTR [rax+0x0]
  410b70:	cmp    edx,0x6e
  410b73:	je     0x4119bc
  410b79:	jle    0x411320
  410b7f:	cmp    edx,0x89
  410b85:	je     0x4119b0
  410b8b:	cmp    edx,0xa8
  410b91:	je     0x4119a4
  410b97:	cmp    edx,0x71
  410b9a:	jne    0x410740
  410ba0:	lea    rcx,[rip+0x2414f]        # 0x434cf6
  410ba7:	jmp    0x410a10
  410bac:	nop    DWORD PTR [rax+0x0]
  410bb0:	cmp    edx,0xe9
  410bb6:	je     0x411764
  410bbc:	jle    0x4112c0
  410bc2:	cmp    edx,0xeb
  410bc8:	je     0x411800
  410bce:	lea    rcx,[rip+0x24163]        # 0x434d38
  410bd5:	jl     0x410a10
  410bdb:	cmp    edx,0xec
  410be1:	je     0x410a10
  410be7:	xor    ebx,ebx
  410be9:	jmp    0x410a3b
  410bee:	xchg   ax,ax
  410bf0:	cmp    edx,0x285c
  410bf6:	je     0x411884
  410bfc:	jle    0x4113d0
  410c02:	cmp    edx,0x2b66
  410c08:	je     0x411878
  410c0e:	cmp    edx,0x2b69
  410c14:	je     0x41186c
  410c1a:	cmp    edx,0x2b0d
  410c20:	jne    0x410740
  410c26:	lea    rcx,[rip+0x2413b]        # 0x434d68
  410c2d:	jmp    0x410a10
  410c32:	cmp    edx,0x217
  410c38:	je     0x4118e4
  410c3e:	jle    0x411340
  410c44:	cmp    edx,0x220
  410c4a:	je     0x4118d8
  410c50:	jg     0x4118cc
  410c56:	cmp    edx,0x21e
  410c5c:	lea    rcx,[rip+0x240e7]        # 0x434d4a
  410c63:	je     0x410a10
  410c69:	xor    ebx,ebx
  410c6b:	jmp    0x410a3b
  410c70:	cmp    edx,0x1200
  410c76:	je     0x411a70
  410c7c:	jle    0x411370
  410c82:	cmp    edx,0x17d8
  410c88:	je     0x411a64
  410c8e:	cmp    edx,0x185b
  410c94:	je     0x411a58
  410c9a:	cmp    edx,0x1346
  410ca0:	jne    0x410740
  410ca6:	lea    rcx,[rip+0x240df]        # 0x434d8c
  410cad:	jmp    0x410a10
  410cb2:	cmp    edx,0x273
  410cb8:	je     0x4119d4
  410cbe:	jle    0x4113a0
  410cc4:	cmp    edx,0x281
  410cca:	je     0x411a34
  410cd0:	cmp    edx,0x282
  410cd6:	je     0x411a28
  410cdc:	cmp    edx,0x274
  410ce2:	jne    0x410740
  410ce8:	lea    rcx,[rip+0x24073]        # 0x434d62
  410cef:	jmp    0x410a10
  410cf4:	cmp    edx,0x115
  410cfa:	je     0x4116ec
  410d00:	jle    0x411430
  410d06:	cmp    edx,0x133
  410d0c:	je     0x411a4c
  410d12:	cmp    edx,0x199
  410d18:	je     0x411a40
  410d1e:	cmp    edx,0x131
  410d24:	jne    0x410740
  410d2a:	lea    rcx,[rip+0x2400d]        # 0x434d3e
  410d31:	jmp    0x410a10
  410d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410d40:	cmp    edx,0xa42
  410d46:	je     0x4119e0
  410d4c:	jle    0x411400
  410d52:	cmp    edx,0xafc
  410d58:	je     0x4119f8
  410d5e:	cmp    edx,0xe14
  410d64:	je     0x4119ec
  410d6a:	cmp    edx,0xa9a
  410d70:	jne    0x410740
  410d76:	lea    rcx,[rip+0x23ff1]        # 0x434d6e
  410d7d:	jmp    0x410a10
  410d82:	cmp    edx,0x206
  410d88:	je     0x411e4b
  410d8e:	jle    0x4111d0
  410d94:	cmp    edx,0x20b
  410d9a:	je     0x41211b
  410da0:	jg     0x411614
  410da6:	cmp    edx,0x208
  410dac:	lea    rcx,[rip+0x23f85]        # 0x434d38
  410db3:	je     0x410a10
  410db9:	jl     0x410a10
  410dbf:	cmp    edx,0x209
  410dc5:	je     0x410a10
  410dcb:	cmp    edx,0x20a
  410dd1:	je     0x410a10
  410dd7:	xor    ebx,ebx
  410dd9:	jmp    0x410a3b
  410dde:	xchg   ax,ax
  410de0:	cmp    edx,0x1fd9
  410de6:	je     0x411eab
  410dec:	jle    0x411220
  410df2:	cmp    edx,0x2b02
  410df8:	je     0x411f83
  410dfe:	jg     0x41164a
  410e04:	cmp    edx,0x2731
  410e0a:	je     0x411df7
  410e10:	jle    0x411d4f
  410e16:	cmp    edx,0x2747
  410e1c:	je     0x411e0f
  410e22:	cmp    edx,0x2751
  410e28:	jne    0x410740
  410e2e:	lea    rcx,[rip+0x23f27]        # 0x434d5c
  410e35:	jmp    0x410a10
  410e3a:	nop    WORD PTR [rax+rax*1+0x0]
  410e40:	cmp    edx,0xc9
  410e46:	je     0x411ec3
  410e4c:	jle    0x411180
  410e52:	cmp    edx,0xd5
  410e58:	je     0x412133
  410e5e:	jg     0x411680
  410e64:	cmp    edx,0xcf
  410e6a:	je     0x411e27
  410e70:	jle    0x411d1f
  410e76:	cmp    edx,0xd0
  410e7c:	je     0x411e3f
  410e82:	cmp    edx,0xd2
  410e88:	jne    0x410740
  410e8e:	lea    rcx,[rip+0x23eaf]        # 0x434d44
  410e95:	jmp    0x410a10
  410e9a:	nop    WORD PTR [rax+rax*1+0x0]
  410ea0:	cmp    edx,0xe17
  410ea6:	je     0x411fcb
  410eac:	jle    0x411270
  410eb2:	cmp    edx,0xe8e
  410eb8:	je     0x411f23
  410ebe:	jg     0x4116b6
  410ec4:	cmp    edx,0xe75
  410eca:	je     0x4120bb
  410ed0:	jle    0x411c77
  410ed6:	cmp    edx,0xe78
  410edc:	je     0x412097
  410ee2:	cmp    edx,0xe8d
  410ee8:	jne    0x410740
  410eee:	lea    rcx,[rip+0x23e67]        # 0x434d5c
  410ef5:	jmp    0x410a10
  410efa:	nop    WORD PTR [rax+rax*1+0x0]
  410f00:	mov    eax,0x3053
  410f05:	mov    BYTE PTR [rbx+0x2],0x30
  410f09:	mov    WORD PTR [rbx],ax
  410f0c:	mov    rax,rbx
  410f0f:	add    rsp,0x20
  410f13:	pop    rbx
  410f14:	ret    
  410f15:	cmp    edx,0xf3f
  410f1b:	je     0x41171c
  410f21:	cmp    edx,0xf42
  410f27:	je     0x411710
  410f2d:	cmp    edx,0xf3e
  410f33:	jne    0x410740
  410f39:	lea    rcx,[rip+0x23e22]        # 0x434d62
  410f40:	jmp    0x410a10
  410f45:	cmp    edx,0xf9
  410f4b:	je     0x411938
  410f51:	jl     0x41192c
  410f57:	cmp    edx,0x100
  410f5d:	lea    rcx,[rip+0x23dda]        # 0x434d3e
  410f64:	je     0x410a10
  410f6a:	xor    ebx,ebx
  410f6c:	jmp    0x410a3b
  410f71:	cmp    edx,0x251e
  410f77:	je     0x4118c0
  410f7d:	cmp    edx,0x2842
  410f83:	je     0x4118b4
  410f89:	cmp    edx,0x251d
  410f8f:	jne    0x410740
  410f95:	lea    rcx,[rip+0x23d78]        # 0x434d14
  410f9c:	jmp    0x410a10
  410fa1:	lea    rcx,[rip+0x23d90]        # 0x434d38
  410fa8:	jmp    0x410a10
  410fad:	nop    DWORD PTR [rax]
  410fb0:	cmp    edx,0x22f
  410fb6:	je     0x411968
  410fbc:	cmp    edx,0x232
  410fc2:	je     0x41195c
  410fc8:	cmp    edx,0x22e
  410fce:	jne    0x410740
  410fd4:	lea    rcx,[rip+0x23d27]        # 0x434d02
  410fdb:	jmp    0x410a10
  410fe0:	cmp    edx,0x779
  410fe6:	je     0x4117f4
  410fec:	cmp    edx,0x781
  410ff2:	je     0x4117e8
  410ff8:	cmp    edx,0x6b8
  410ffe:	jne    0x410740
  411004:	lea    rcx,[rip+0x23d81]        # 0x434d8c
  41100b:	jmp    0x410a10
  411010:	cmp    edx,0x47ae
  411016:	je     0x411734
  41101c:	cmp    edx,0x47af
  411022:	je     0x411728
  411028:	cmp    edx,0x46c5
  41102e:	jne    0x410740
  411034:	lea    rcx,[rip+0x23d51]        # 0x434d8c
  41103b:	jmp    0x410a10
  411040:	cmp    edx,0x106
  411046:	je     0x4120d3
  41104c:	jg     0x41153c
  411052:	cmp    edx,0xf9
  411058:	je     0x411fa7
  41105e:	jl     0x411f9b
  411064:	cmp    edx,0x100
  41106a:	lea    rcx,[rip+0x23ccd]        # 0x434d3e
  411071:	je     0x410a10
  411077:	cmp    edx,0x101
  41107d:	je     0x410a10
  411083:	xor    ebx,ebx
  411085:	jmp    0x410a3b
  41108a:	nop    WORD PTR [rax+rax*1+0x0]
  411090:	cmp    edx,0x9de
  411096:	je     0x412193
  41109c:	jg     0x411572
  4110a2:	cmp    edx,0x6ee
  4110a8:	je     0x412007
  4110ae:	jle    0x411b6f
  4110b4:	cmp    edx,0x777
  4110ba:	je     0x4121cf
  4110c0:	cmp    edx,0x779
  4110c6:	jne    0x410740
  4110cc:	lea    rcx,[rip+0x23ca7]        # 0x434d7a
  4110d3:	jmp    0x410a10
  4110d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4110e0:	cmp    edx,0x13fc
  4110e6:	je     0x412073
  4110ec:	jg     0x4115de
  4110f2:	cmp    edx,0x133d
  4110f8:	je     0x411e63
  4110fe:	jle    0x411cd7
  411104:	cmp    edx,0x133e
  41110a:	je     0x41201f
  411110:	cmp    edx,0x1393
  411116:	jne    0x410740
  41111c:	lea    rcx,[rip+0x23bd3]        # 0x434cf6
  411123:	jmp    0x410a10
  411128:	nop    DWORD PTR [rax+rax*1+0x0]
  411130:	cmp    edx,0x4991
  411136:	je     0x412163
  41113c:	jg     0x411506
  411142:	cmp    edx,0x44a3
  411148:	je     0x411ffb
  41114e:	jle    0x411b57
  411154:	cmp    edx,0x4652
  41115a:	je     0x411ecf
  411160:	cmp    edx,0x4818
  411166:	jne    0x410740
  41116c:	lea    rcx,[rip+0x23b89]        # 0x434cfc
  411173:	jmp    0x410a10
  411178:	nop    DWORD PTR [rax+rax*1+0x0]
  411180:	cmp    edx,0x83
  411186:	je     0x411f5f
  41118c:	jle    0x411a88
  411192:	cmp    edx,0xa8
  411198:	je     0x411f47
  41119e:	jle    0x411b9f
  4111a4:	cmp    edx,0xaa
  4111aa:	je     0x411e57
  4111b0:	cmp    edx,0xae
  4111b6:	jne    0x410740
  4111bc:	lea    rcx,[rip+0x23ba5]        # 0x434d68
  4111c3:	jmp    0x410a10
  4111c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4111d0:	cmp    edx,0x134
  4111d6:	je     0x41202b
  4111dc:	jle    0x411aaf
  4111e2:	cmp    edx,0x200
  4111e8:	je     0x411f0b
  4111ee:	jle    0x411c17
  4111f4:	cmp    edx,0x203
  4111fa:	je     0x411eb7
  411200:	cmp    edx,0x205
  411206:	jne    0x410740
  41120c:	lea    rcx,[rip+0x23b37]        # 0x434d4a
  411213:	jmp    0x410a10
  411218:	nop    DWORD PTR [rax+rax*1+0x0]
  411220:	cmp    edx,0x1fb2
  411226:	je     0x412037
  41122c:	jle    0x411adf
  411232:	cmp    edx,0x1fc6
  411238:	je     0x41217b
  41123e:	jle    0x411c47
  411244:	cmp    edx,0x1fd0
  41124a:	je     0x411fd7
  411250:	cmp    edx,0x1fd8
  411256:	jne    0x410740
  41125c:	lea    rcx,[rip+0x23acf]        # 0x434d32
  411263:	jmp    0x410a10
  411268:	nop    DWORD PTR [rax+rax*1+0x0]
  411270:	cmp    edx,0xafc
  411276:	je     0x412043
  41127c:	jle    0x411b0f
  411282:	cmp    edx,0xe14
  411288:	je     0x411d7f
  41128e:	jle    0x411d67
  411294:	cmp    edx,0xe15
  41129a:	je     0x41208b
  4112a0:	cmp    edx,0xe16
  4112a6:	jne    0x410740
  4112ac:	lea    rcx,[rip+0x23a85]        # 0x434d38
  4112b3:	jmp    0x410a10
  4112b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4112c0:	cmp    edx,0xe6
  4112c6:	je     0x411860
  4112cc:	cmp    edx,0xe8
  4112d2:	lea    rcx,[rip+0x23a5f]        # 0x434d38
  4112d9:	je     0x410a10
  4112df:	xor    ebx,ebx
  4112e1:	jmp    0x410a3b
  4112e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4112f0:	cmp    edx,0xce
  4112f6:	je     0x4119c8
  4112fc:	cmp    edx,0xcf
  411302:	lea    rcx,[rip+0x23a83]        # 0x434d8c
  411309:	je     0x410a10
  41130f:	xor    ebx,ebx
  411311:	jmp    0x410a3b
  411316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411320:	cmp    edx,0x66
  411323:	je     0x4118f0
  411329:	cmp    edx,0x6d
  41132c:	lea    rcx,[rip+0x239f3]        # 0x434d26
  411333:	je     0x410a10
  411339:	xor    ebx,ebx
  41133b:	jmp    0x410a3b
  411340:	cmp    edx,0x211
  411346:	je     0x411a7c
  41134c:	cmp    edx,0x212
  411352:	lea    rcx,[rip+0x23a03]        # 0x434d5c
  411359:	je     0x410a10
  41135f:	xor    ebx,ebx
  411361:	jmp    0x410a3b
  411366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411370:	cmp    edx,0x11fa
  411376:	lea    rcx,[rip+0x23979]        # 0x434cf6
  41137d:	je     0x410a10
  411383:	cmp    edx,0x11fb
  411389:	je     0x410a10
  41138f:	xor    ebx,ebx
  411391:	jmp    0x410a3b
  411396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4113a0:	cmp    edx,0x247
  4113a6:	je     0x411890
  4113ac:	cmp    edx,0x263
  4113b2:	lea    rcx,[rip+0x239a9]        # 0x434d62
  4113b9:	je     0x410a10
  4113bf:	xor    ebx,ebx
  4113c1:	jmp    0x410a3b
  4113c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4113d0:	cmp    edx,0x285a
  4113d6:	lea    rcx,[rip+0x23919]        # 0x434cf6
  4113dd:	je     0x410a10
  4113e3:	cmp    edx,0x285b
  4113e9:	je     0x410a10
  4113ef:	xor    ebx,ebx
  4113f1:	jmp    0x410a3b
  4113f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411400:	cmp    edx,0xa29
  411406:	lea    rcx,[rip+0x2394f]        # 0x434d5c
  41140d:	je     0x410a10
  411413:	cmp    edx,0xa37
  411419:	je     0x410a10
  41141f:	xor    ebx,ebx
  411421:	jmp    0x410a3b
  411426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411430:	cmp    edx,0x106
  411436:	je     0x411740
  41143c:	cmp    edx,0x111
  411442:	lea    rcx,[rip+0x23913]        # 0x434d5c
  411449:	je     0x410a10
  41144f:	xor    ebx,ebx
  411451:	jmp    0x410a3b
  411456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411460:	cmp    edx,0xf4
  411466:	je     0x411deb
  41146c:	jle    0x411d37
  411472:	cmp    edx,0xf5
  411478:	je     0x411dc7
  41147e:	cmp    edx,0xf6
  411484:	jne    0x410740
  41148a:	lea    rcx,[rip+0x238a7]        # 0x434d38
  411491:	jmp    0x410a10
  411496:	cmp    edx,0x274
  41149c:	je     0x411daf
  4114a2:	jl     0x411da3
  4114a8:	cmp    edx,0x38f
  4114ae:	je     0x411d97
  4114b4:	cmp    edx,0x3ef
  4114ba:	lea    rcx,[rip+0x23877]        # 0x434d38
  4114c1:	je     0x410a10
  4114c7:	xor    ebx,ebx
  4114c9:	jmp    0x410a3b
  4114ce:	xchg   ax,ax
  4114d0:	cmp    edx,0x1205
  4114d6:	je     0x412157
  4114dc:	jle    0x411bcf
  4114e2:	cmp    edx,0x120a
  4114e8:	je     0x41216f
  4114ee:	cmp    edx,0x1268
  4114f4:	jne    0x410740
  4114fa:	lea    rcx,[rip+0x2385b]        # 0x434d5c
  411501:	jmp    0x410a10
  411506:	cmp    edx,0x5239
  41150c:	je     0x4120c7
  411512:	jle    0x411c8f
  411518:	cmp    edx,0x52ae
  41151e:	je     0x4120df
  411524:	cmp    edx,0x5307
  41152a:	jne    0x410740
  411530:	lea    rcx,[rip+0x2384f]        # 0x434d86
  411537:	jmp    0x410a10
  41153c:	cmp    edx,0x111
  411542:	je     0x412187
  411548:	jle    0x411c5f
  41154e:	cmp    edx,0x115
  411554:	je     0x41219f
  41155a:	cmp    edx,0x127
  411560:	jne    0x410740
  411566:	lea    rcx,[rip+0x237d7]        # 0x434d44
  41156d:	jmp    0x410a10
  411572:	cmp    edx,0xa0b
  411578:	je     0x41205b
  41157e:	jle    0x411ca7
  411584:	cmp    edx,0xa29
  41158a:	je     0x4120af
  411590:	cmp    edx,0xa37
  411596:	jne    0x410740
  41159c:	lea    rcx,[rip+0x237b9]        # 0x434d5c
  4115a3:	jmp    0x410a10
  4115a8:	cmp    edx,0x4215
  4115ae:	je     0x412067
  4115b4:	jle    0x411cbf
  4115ba:	cmp    edx,0x4232
  4115c0:	je     0x41207f
  4115c6:	cmp    edx,0x4236
  4115cc:	jne    0x410740
  4115d2:	lea    rcx,[rip+0x23729]        # 0x434d02
  4115d9:	jmp    0x410a10
  4115de:	cmp    edx,0x16b4
  4115e4:	je     0x41214b
  4115ea:	jle    0x411bb7
  4115f0:	cmp    edx,0x1774
  4115f6:	je     0x412127
  4115fc:	cmp    edx,0x17d6
  411602:	jne    0x410740
  411608:	lea    rcx,[rip+0x236e7]        # 0x434cf6
  41160f:	jmp    0x410a10
  411614:	cmp    edx,0x211
  41161a:	je     0x411f77
  411620:	jle    0x411bff
  411626:	cmp    edx,0x212
  41162c:	je     0x411f8f
  411632:	cmp    edx,0x217
  411638:	jne    0x410740
  41163e:	lea    rcx,[rip+0x23705]        # 0x434d4a
  411645:	jmp    0x410a10
  41164a:	cmp    edx,0x2b20
  411650:	je     0x411f6b
  411656:	jle    0x411be7
  41165c:	cmp    edx,0x2b25
  411662:	je     0x41213f
  411668:	cmp    edx,0x372e
  41166e:	jne    0x410740
  411674:	lea    rcx,[rip+0x2367b]        # 0x434cf6
  41167b:	jmp    0x410a10
  411680:	cmp    edx,0xe5
  411686:	je     0x411f17
  41168c:	jle    0x411c2f
  411692:	cmp    edx,0xe6
  411698:	je     0x411f2f
  41169e:	cmp    edx,0xe8
  4116a4:	jne    0x410740
  4116aa:	lea    rcx,[rip+0x23687]        # 0x434d38
  4116b1:	jmp    0x410a10
  4116b6:	cmp    edx,0xf3f
  4116bc:	je     0x41204f
  4116c2:	jle    0x411b3f
  4116c8:	cmp    edx,0xf42
  4116ce:	je     0x411e7b
  4116d4:	cmp    edx,0xf44
  4116da:	jne    0x410740
  4116e0:	lea    rcx,[rip+0x2367b]        # 0x434d62
  4116e7:	jmp    0x410a10
  4116ec:	lea    rcx,[rip+0x2366f]        # 0x434d62
  4116f3:	jmp    0x410a10
  4116f8:	lea    rcx,[rip+0x23657]        # 0x434d56
  4116ff:	jmp    0x410a10
  411704:	lea    rcx,[rip+0x235eb]        # 0x434cf6
  41170b:	jmp    0x410a10
  411710:	lea    rcx,[rip+0x2364b]        # 0x434d62
  411717:	jmp    0x410a10
  41171c:	lea    rcx,[rip+0x2363f]        # 0x434d62
  411723:	jmp    0x410a10
  411728:	lea    rcx,[rip+0x235c7]        # 0x434cf6
  41172f:	jmp    0x410a10
  411734:	lea    rcx,[rip+0x235bb]        # 0x434cf6
  41173b:	jmp    0x410a10
  411740:	lea    rcx,[rip+0x235af]        # 0x434cf6
  411747:	jmp    0x410a10
  41174c:	lea    rcx,[rip+0x23609]        # 0x434d5c
  411753:	jmp    0x410a10
  411758:	lea    rcx,[rip+0x23615]        # 0x434d74
  41175f:	jmp    0x410a10
  411764:	lea    rcx,[rip+0x235f1]        # 0x434d5c
  41176b:	jmp    0x410a10
  411770:	lea    rcx,[rip+0x2358b]        # 0x434d02
  411777:	jmp    0x410a10
  41177c:	lea    rcx,[rip+0x23573]        # 0x434cf6
  411783:	jmp    0x410a10
  411788:	lea    rcx,[rip+0x2358b]        # 0x434d1a
  41178f:	jmp    0x410a10
  411794:	lea    rcx,[rip+0x235cd]        # 0x434d68
  41179b:	jmp    0x410a10
  4117a0:	lea    rcx,[rip+0x235b5]        # 0x434d5c
  4117a7:	jmp    0x410a10
  4117ac:	lea    rcx,[rip+0x23585]        # 0x434d38
  4117b3:	jmp    0x410a10
  4117b8:	lea    rcx,[rip+0x23543]        # 0x434d02
  4117bf:	jmp    0x410a10
  4117c4:	lea    rcx,[rip+0x23597]        # 0x434d62
  4117cb:	jmp    0x410a10
  4117d0:	lea    rcx,[rip+0x2351f]        # 0x434cf6
  4117d7:	jmp    0x410a10
  4117dc:	lea    rcx,[rip+0x23513]        # 0x434cf6
  4117e3:	jmp    0x410a10
  4117e8:	lea    rcx,[rip+0x23597]        # 0x434d86
  4117ef:	jmp    0x410a10
  4117f4:	lea    rcx,[rip+0x2357f]        # 0x434d7a
  4117fb:	jmp    0x410a10
  411800:	lea    rcx,[rip+0x23537]        # 0x434d3e
  411807:	jmp    0x410a10
  41180c:	lea    rcx,[rip+0x23525]        # 0x434d38
  411813:	jmp    0x410a10
  411818:	lea    rcx,[rip+0x23549]        # 0x434d68
  41181f:	jmp    0x410a10
  411824:	lea    rcx,[rip+0x23501]        # 0x434d2c
  41182b:	jmp    0x410a10
  411830:	lea    rcx,[rip+0x23549]        # 0x434d80
  411837:	jmp    0x410a10
  41183c:	lea    rcx,[rip+0x234f5]        # 0x434d38
  411843:	jmp    0x410a10
  411848:	lea    rcx,[rip+0x234e9]        # 0x434d38
  41184f:	jmp    0x410a10
  411854:	lea    rcx,[rip+0x23519]        # 0x434d74
  41185b:	jmp    0x410a10
  411860:	lea    rcx,[rip+0x2348f]        # 0x434cf6
  411867:	jmp    0x410a10
  41186c:	lea    rcx,[rip+0x23483]        # 0x434cf6
  411873:	jmp    0x410a10
  411878:	lea    rcx,[rip+0x23477]        # 0x434cf6
  41187f:	jmp    0x410a10
  411884:	lea    rcx,[rip+0x2346b]        # 0x434cf6
  41188b:	jmp    0x410a10
  411890:	lea    rcx,[rip+0x2346b]        # 0x434d02
  411897:	jmp    0x410a10
  41189c:	lea    rcx,[rip+0x23495]        # 0x434d38
  4118a3:	jmp    0x410a10
  4118a8:	lea    rcx,[rip+0x2348f]        # 0x434d3e
  4118af:	jmp    0x410a10
  4118b4:	lea    rcx,[rip+0x2343b]        # 0x434cf6
  4118bb:	jmp    0x410a10
  4118c0:	lea    rcx,[rip+0x2346b]        # 0x434d32
  4118c7:	jmp    0x410a10
  4118cc:	lea    rcx,[rip+0x23489]        # 0x434d5c
  4118d3:	jmp    0x410a10
  4118d8:	lea    rcx,[rip+0x2347d]        # 0x434d5c
  4118df:	jmp    0x410a10
  4118e4:	lea    rcx,[rip+0x2345f]        # 0x434d4a
  4118eb:	jmp    0x410a10
  4118f0:	lea    rcx,[rip+0x23471]        # 0x434d68
  4118f7:	jmp    0x410a10
  4118fc:	lea    rcx,[rip+0x23435]        # 0x434d38
  411903:	jmp    0x410a10
  411908:	lea    rcx,[rip+0x23441]        # 0x434d50
  41190f:	jmp    0x410a10
  411914:	lea    rcx,[rip+0x23465]        # 0x434d80
  41191b:	jmp    0x410a10
  411920:	lea    rcx,[rip+0x2343b]        # 0x434d62
  411927:	jmp    0x410a10
  41192c:	lea    rcx,[rip+0x23405]        # 0x434d38
  411933:	jmp    0x410a10
  411938:	lea    rcx,[rip+0x233ff]        # 0x434d3e
  41193f:	jmp    0x410a10
  411944:	lea    rcx,[rip+0x23411]        # 0x434d5c
  41194b:	jmp    0x410a10
  411950:	lea    rcx,[rip+0x23405]        # 0x434d5c
  411957:	jmp    0x410a10
  41195c:	lea    rcx,[rip+0x2339f]        # 0x434d02
  411963:	jmp    0x410a10
  411968:	lea    rcx,[rip+0x23393]        # 0x434d02
  41196f:	jmp    0x410a10
  411974:	lea    rcx,[rip+0x233bd]        # 0x434d38
  41197b:	jmp    0x410a10
  411980:	lea    rcx,[rip+0x233d5]        # 0x434d5c
  411987:	jmp    0x410a10
  41198c:	lea    rcx,[rip+0x233d5]        # 0x434d68
  411993:	jmp    0x410a10
  411998:	lea    rcx,[rip+0x23357]        # 0x434cf6
  41199f:	jmp    0x410a10
  4119a4:	lea    rcx,[rip+0x2338d]        # 0x434d38
  4119ab:	jmp    0x410a10
  4119b0:	lea    rcx,[rip+0x233b1]        # 0x434d68
  4119b7:	jmp    0x410a10
  4119bc:	lea    rcx,[rip+0x23363]        # 0x434d26
  4119c3:	jmp    0x410a10
  4119c8:	lea    rcx,[rip+0x2336f]        # 0x434d3e
  4119cf:	jmp    0x410a10
  4119d4:	lea    rcx,[rip+0x23387]        # 0x434d62
  4119db:	jmp    0x410a10
  4119e0:	lea    rcx,[rip+0x23375]        # 0x434d5c
  4119e7:	jmp    0x410a10
  4119ec:	lea    rcx,[rip+0x23369]        # 0x434d5c
  4119f3:	jmp    0x410a10
  4119f8:	lea    rcx,[rip+0x23369]        # 0x434d68
  4119ff:	jmp    0x410a10
  411a04:	lea    rcx,[rip+0x23315]        # 0x434d20
  411a0b:	jmp    0x410a10
  411a10:	lea    rcx,[rip+0x23321]        # 0x434d38
  411a17:	jmp    0x410a10
  411a1c:	lea    rcx,[rip+0x23345]        # 0x434d68
  411a23:	jmp    0x410a10
  411a28:	lea    rcx,[rip+0x23333]        # 0x434d62
  411a2f:	jmp    0x410a10
  411a34:	lea    rcx,[rip+0x23327]        # 0x434d62
  411a3b:	jmp    0x410a10
  411a40:	lea    rcx,[rip+0x232f7]        # 0x434d3e
  411a47:	jmp    0x410a10
  411a4c:	lea    rcx,[rip+0x2332d]        # 0x434d80
  411a53:	jmp    0x410a10
  411a58:	lea    rcx,[rip+0x232a3]        # 0x434d02
  411a5f:	jmp    0x410a10
  411a64:	lea    rcx,[rip+0x232fd]        # 0x434d68
  411a6b:	jmp    0x410a10
  411a70:	lea    rcx,[rip+0x2327f]        # 0x434cf6
  411a77:	jmp    0x410a10
  411a7c:	lea    rcx,[rip+0x232bb]        # 0x434d3e
  411a83:	jmp    0x410a10
  411a88:	cmp    edx,0x6e
  411a8b:	je     0x411ee7
  411a91:	cmp    edx,0x71
  411a94:	je     0x411edb
  411a9a:	cmp    edx,0x6d
  411a9d:	jne    0x410740
  411aa3:	lea    rcx,[rip+0x2327c]        # 0x434d26
  411aaa:	jmp    0x410a10
  411aaf:	cmp    edx,0x131
  411ab5:	je     0x411eff
  411abb:	cmp    edx,0x133
  411ac1:	je     0x411ef3
  411ac7:	cmp    edx,0x12a
  411acd:	jne    0x410740
  411ad3:	lea    rcx,[rip+0x23270]        # 0x434d4a
  411ada:	jmp    0x410a10
  411adf:	cmp    edx,0x1f14
  411ae5:	je     0x411ddf
  411aeb:	cmp    edx,0x1f21
  411af1:	je     0x411dd3
  411af7:	cmp    edx,0x1901
  411afd:	jne    0x410740
  411b03:	lea    rcx,[rip+0x23258]        # 0x434d62
  411b0a:	jmp    0x410a10
  411b0f:	cmp    edx,0xa9a
  411b15:	je     0x411fef
  411b1b:	cmp    edx,0xac8
  411b21:	je     0x411fe3
  411b27:	cmp    edx,0xa43
  411b2d:	jne    0x410740
  411b33:	lea    rcx,[rip+0x23222]        # 0x434d5c
  411b3a:	jmp    0x410a10
  411b3f:	cmp    edx,0xf3e
  411b45:	jne    0x410740
  411b4b:	lea    rcx,[rip+0x23210]        # 0x434d62
  411b52:	jmp    0x410a10
  411b57:	cmp    edx,0x439c
  411b5d:	jne    0x410740
  411b63:	lea    rcx,[rip+0x2318c]        # 0x434cf6
  411b6a:	jmp    0x410a10
  411b6f:	cmp    edx,0x5e4
  411b75:	jne    0x410740
  411b7b:	lea    rcx,[rip+0x231da]        # 0x434d5c
  411b82:	jmp    0x410a10
  411b87:	cmp    edx,0xf4e
  411b8d:	jne    0x410740
  411b93:	lea    rcx,[rip+0x231c8]        # 0x434d62
  411b9a:	jmp    0x410a10
  411b9f:	cmp    edx,0x89
  411ba5:	jne    0x410740
  411bab:	lea    rcx,[rip+0x231b6]        # 0x434d68
  411bb2:	jmp    0x410a10
  411bb7:	cmp    edx,0x141a
  411bbd:	jne    0x410740
  411bc3:	lea    rcx,[rip+0x2316e]        # 0x434d38
  411bca:	jmp    0x410a10
  411bcf:	cmp    edx,0x113f
  411bd5:	jne    0x410740
  411bdb:	lea    rcx,[rip+0x2317a]        # 0x434d5c
  411be2:	jmp    0x410a10
  411be7:	cmp    edx,0x2b03
  411bed:	jne    0x410740
  411bf3:	lea    rcx,[rip+0x23162]        # 0x434d5c
  411bfa:	jmp    0x410a10
  411bff:	cmp    edx,0x20c
  411c05:	jne    0x410740
  411c0b:	lea    rcx,[rip+0x23126]        # 0x434d38
  411c12:	jmp    0x410a10
  411c17:	cmp    edx,0x199
  411c1d:	jne    0x410740
  411c23:	lea    rcx,[rip+0x23114]        # 0x434d3e
  411c2a:	jmp    0x410a10
  411c2f:	cmp    edx,0xdc
  411c35:	jne    0x410740
  411c3b:	lea    rcx,[rip+0x230f6]        # 0x434d38
  411c42:	jmp    0x410a10
  411c47:	cmp    edx,0x1fb3
  411c4d:	jne    0x410740
  411c53:	lea    rcx,[rip+0x230de]        # 0x434d38
  411c5a:	jmp    0x410a10
  411c5f:	cmp    edx,0x10a
  411c65:	jne    0x410740
  411c6b:	lea    rcx,[rip+0x230f0]        # 0x434d62
  411c72:	jmp    0x410a10
  411c77:	cmp    edx,0xe25
  411c7d:	jne    0x410740
  411c83:	lea    rcx,[rip+0x23108]        # 0x434d92
  411c8a:	jmp    0x410a10
  411c8f:	cmp    edx,0x507c
  411c95:	jne    0x410740
  411c9b:	lea    rcx,[rip+0x23054]        # 0x434cf6
  411ca2:	jmp    0x410a10
  411ca7:	cmp    edx,0x9fd
  411cad:	jne    0x410740
  411cb3:	lea    rcx,[rip+0x2303c]        # 0x434cf6
  411cba:	jmp    0x410a10
  411cbf:	cmp    edx,0x4209
  411cc5:	jne    0x410740
  411ccb:	lea    rcx,[rip+0x23030]        # 0x434d02
  411cd2:	jmp    0x410a10
  411cd7:	cmp    edx,0x133c
  411cdd:	jne    0x410740
  411ce3:	lea    rcx,[rip+0x230a2]        # 0x434d8c
  411cea:	jmp    0x410a10
  411cef:	cmp    edx,0x220
  411cf5:	jne    0x410740
  411cfb:	lea    rcx,[rip+0x2305a]        # 0x434d5c
  411d02:	jmp    0x410a10
  411d07:	cmp    edx,0x3bdb
  411d0d:	jne    0x410740
  411d13:	lea    rcx,[rip+0x23066]        # 0x434d80
  411d1a:	jmp    0x410a10
  411d1f:	cmp    edx,0xce
  411d25:	jne    0x410740
  411d2b:	lea    rcx,[rip+0x2300c]        # 0x434d3e
  411d32:	jmp    0x410a10
  411d37:	cmp    edx,0xf2
  411d3d:	jne    0x410740
  411d43:	lea    rcx,[rip+0x23000]        # 0x434d4a
  411d4a:	jmp    0x410a10
  411d4f:	cmp    edx,0x213a
  411d55:	jne    0x410740
  411d5b:	lea    rcx,[rip+0x23000]        # 0x434d62
  411d62:	jmp    0x410a10
  411d67:	cmp    edx,0xc26
  411d6d:	jne    0x410740
  411d73:	lea    rcx,[rip+0x22f7c]        # 0x434cf6
  411d7a:	jmp    0x410a10
  411d7f:	lea    rcx,[rip+0x22fd6]        # 0x434d5c
  411d86:	jmp    0x410a10
  411d8b:	lea    rcx,[rip+0x22fd0]        # 0x434d62
  411d92:	jmp    0x410a10
  411d97:	lea    rcx,[rip+0x22f7c]        # 0x434d1a
  411d9e:	jmp    0x410a10
  411da3:	lea    rcx,[rip+0x22fb8]        # 0x434d62
  411daa:	jmp    0x410a10
  411daf:	lea    rcx,[rip+0x22fac]        # 0x434d62
  411db6:	jmp    0x410a10
  411dbb:	lea    rcx,[rip+0x22fa0]        # 0x434d62
  411dc2:	jmp    0x410a10
  411dc7:	lea    rcx,[rip+0x22f88]        # 0x434d56
  411dce:	jmp    0x410a10
  411dd3:	lea    rcx,[rip+0x22f88]        # 0x434d62
  411dda:	jmp    0x410a10
  411ddf:	lea    rcx,[rip+0x22f10]        # 0x434cf6
  411de6:	jmp    0x410a10
  411deb:	lea    rcx,[rip+0x22f46]        # 0x434d38
  411df2:	jmp    0x410a10
  411df7:	lea    rcx,[rip+0x22f82]        # 0x434d80
  411dfe:	jmp    0x410a10
  411e03:	lea    rcx,[rip+0x22f52]        # 0x434d5c
  411e0a:	jmp    0x410a10
  411e0f:	lea    rcx,[rip+0x22f46]        # 0x434d5c
  411e16:	jmp    0x410a10
  411e1b:	lea    rcx,[rip+0x22f58]        # 0x434d7a
  411e22:	jmp    0x410a10
  411e27:	lea    rcx,[rip+0x22f5e]        # 0x434d8c
  411e2e:	jmp    0x410a10
  411e33:	lea    rcx,[rip+0x22ebc]        # 0x434cf6
  411e3a:	jmp    0x410a10
  411e3f:	lea    rcx,[rip+0x22f2e]        # 0x434d74
  411e46:	jmp    0x410a10
  411e4b:	lea    rcx,[rip+0x22eec]        # 0x434d3e
  411e52:	jmp    0x410a10
  411e57:	lea    rcx,[rip+0x22f0a]        # 0x434d68
  411e5e:	jmp    0x410a10
  411e63:	lea    rcx,[rip+0x22f1c]        # 0x434d86
  411e6a:	jmp    0x410a10
  411e6f:	lea    rcx,[rip+0x22ee6]        # 0x434d5c
  411e76:	jmp    0x410a10
  411e7b:	lea    rcx,[rip+0x22ee0]        # 0x434d62
  411e82:	jmp    0x410a10
  411e87:	lea    rcx,[rip+0x22eb6]        # 0x434d44
  411e8e:	jmp    0x410a10
  411e93:	lea    rcx,[rip+0x22ec2]        # 0x434d5c
  411e9a:	jmp    0x410a10
  411e9f:	lea    rcx,[rip+0x22ea4]        # 0x434d4a
  411ea6:	jmp    0x410a10
  411eab:	lea    rcx,[rip+0x22e62]        # 0x434d14
  411eb2:	jmp    0x410a10
  411eb7:	lea    rcx,[rip+0x22e9e]        # 0x434d5c
  411ebe:	jmp    0x410a10
  411ec3:	lea    rcx,[rip+0x22e9e]        # 0x434d68
  411eca:	jmp    0x410a10
  411ecf:	lea    rcx,[rip+0x22e20]        # 0x434cf6
  411ed6:	jmp    0x410a10
  411edb:	lea    rcx,[rip+0x22e14]        # 0x434cf6
  411ee2:	jmp    0x410a10
  411ee7:	lea    rcx,[rip+0x22e38]        # 0x434d26
  411eee:	jmp    0x410a10
  411ef3:	lea    rcx,[rip+0x22e86]        # 0x434d80
  411efa:	jmp    0x410a10
  411eff:	lea    rcx,[rip+0x22e38]        # 0x434d3e
  411f06:	jmp    0x410a10
  411f0b:	lea    rcx,[rip+0x22e0e]        # 0x434d20
  411f12:	jmp    0x410a10
  411f17:	lea    rcx,[rip+0x22dd8]        # 0x434cf6
  411f1e:	jmp    0x410a10
  411f23:	lea    rcx,[rip+0x22e32]        # 0x434d5c
  411f2a:	jmp    0x410a10
  411f2f:	lea    rcx,[rip+0x22dc0]        # 0x434cf6
  411f36:	jmp    0x410a10
  411f3b:	lea    rcx,[rip+0x22e20]        # 0x434d62
  411f42:	jmp    0x410a10
  411f47:	lea    rcx,[rip+0x22dea]        # 0x434d38
  411f4e:	jmp    0x410a10
  411f53:	lea    rcx,[rip+0x22e02]        # 0x434d5c
  411f5a:	jmp    0x410a10
  411f5f:	lea    rcx,[rip+0x22e02]        # 0x434d68
  411f66:	jmp    0x410a10
  411f6b:	lea    rcx,[rip+0x22dea]        # 0x434d5c
  411f72:	jmp    0x410a10
  411f77:	lea    rcx,[rip+0x22dc0]        # 0x434d3e
  411f7e:	jmp    0x410a10
  411f83:	lea    rcx,[rip+0x22d6c]        # 0x434cf6
  411f8a:	jmp    0x410a10
  411f8f:	lea    rcx,[rip+0x22dc6]        # 0x434d5c
  411f96:	jmp    0x410a10
  411f9b:	lea    rcx,[rip+0x22d96]        # 0x434d38
  411fa2:	jmp    0x410a10
  411fa7:	lea    rcx,[rip+0x22d90]        # 0x434d3e
  411fae:	jmp    0x410a10
  411fb3:	lea    rcx,[rip+0x22d84]        # 0x434d3e
  411fba:	jmp    0x410a10
  411fbf:	lea    rcx,[rip+0x22d96]        # 0x434d5c
  411fc6:	jmp    0x410a10
  411fcb:	lea    rcx,[rip+0x22d7e]        # 0x434d50
  411fd2:	jmp    0x410a10
  411fd7:	lea    rcx,[rip+0x22d8a]        # 0x434d68
  411fde:	jmp    0x410a10
  411fe3:	lea    rcx,[rip+0x22d0c]        # 0x434cf6
  411fea:	jmp    0x410a10
  411fef:	lea    rcx,[rip+0x22d78]        # 0x434d6e
  411ff6:	jmp    0x410a10
  411ffb:	lea    rcx,[rip+0x22cf4]        # 0x434cf6
  412002:	jmp    0x410a10
  412007:	lea    rcx,[rip+0x22d1e]        # 0x434d2c
  41200e:	jmp    0x410a10
  412013:	lea    rcx,[rip+0x22ce8]        # 0x434d02
  41201a:	jmp    0x410a10
  41201f:	lea    rcx,[rip+0x22d66]        # 0x434d8c
  412026:	jmp    0x410a10
  41202b:	lea    rcx,[rip+0x22d4e]        # 0x434d80
  412032:	jmp    0x410a10
  412037:	lea    rcx,[rip+0x22d2a]        # 0x434d68
  41203e:	jmp    0x410a10
  412043:	lea    rcx,[rip+0x22d1e]        # 0x434d68
  41204a:	jmp    0x410a10
  41204f:	lea    rcx,[rip+0x22d0c]        # 0x434d62
  412056:	jmp    0x410a10
  41205b:	lea    rcx,[rip+0x22c94]        # 0x434cf6
  412062:	jmp    0x410a10
  412067:	lea    rcx,[rip+0x22c94]        # 0x434d02
  41206e:	jmp    0x410a10
  412073:	lea    rcx,[rip+0x22c7c]        # 0x434cf6
  41207a:	jmp    0x410a10
  41207f:	lea    rcx,[rip+0x22c7c]        # 0x434d02
  412086:	jmp    0x410a10
  41208b:	lea    rcx,[rip+0x22cca]        # 0x434d5c
  412092:	jmp    0x410a10
  412097:	lea    rcx,[rip+0x22c58]        # 0x434cf6
  41209e:	jmp    0x410a10
  4120a3:	lea    rcx,[rip+0x22ce2]        # 0x434d8c
  4120aa:	jmp    0x410a10
  4120af:	lea    rcx,[rip+0x22ca6]        # 0x434d5c
  4120b6:	jmp    0x410a10
  4120bb:	lea    rcx,[rip+0x22cb2]        # 0x434d74
  4120c2:	jmp    0x410a10
  4120c7:	lea    rcx,[rip+0x22c28]        # 0x434cf6
  4120ce:	jmp    0x410a10
  4120d3:	lea    rcx,[rip+0x22c1c]        # 0x434cf6
  4120da:	jmp    0x410a10
  4120df:	lea    rcx,[rip+0x22ca6]        # 0x434d8c
  4120e6:	jmp    0x410a10
  4120eb:	lea    rcx,[rip+0x22c70]        # 0x434d62
  4120f2:	jmp    0x410a10
  4120f7:	lea    rcx,[rip+0x22c4c]        # 0x434d4a
  4120fe:	jmp    0x410a10
  412103:	lea    rcx,[rip+0x22bec]        # 0x434cf6
  41210a:	jmp    0x410a10
  41210f:	lea    rcx,[rip+0x22c28]        # 0x434d3e
  412116:	jmp    0x410a10
  41211b:	lea    rcx,[rip+0x22c16]        # 0x434d38
  412122:	jmp    0x410a10
  412127:	lea    rcx,[rip+0x22bc8]        # 0x434cf6
  41212e:	jmp    0x410a10
  412133:	lea    rcx,[rip+0x22bec]        # 0x434d26
  41213a:	jmp    0x410a10
  41213f:	lea    rcx,[rip+0x22bb0]        # 0x434cf6
  412146:	jmp    0x410a10
  41214b:	lea    rcx,[rip+0x22ba4]        # 0x434cf6
  412152:	jmp    0x410a10
  412157:	lea    rcx,[rip+0x22b98]        # 0x434cf6
  41215e:	jmp    0x410a10
  412163:	lea    rcx,[rip+0x22c16]        # 0x434d80
  41216a:	jmp    0x410a10
  41216f:	lea    rcx,[rip+0x22b80]        # 0x434cf6
  412176:	jmp    0x410a10
  41217b:	lea    rcx,[rip+0x22bce]        # 0x434d50
  412182:	jmp    0x410a10
  412187:	lea    rcx,[rip+0x22bce]        # 0x434d5c
  41218e:	jmp    0x410a10
  412193:	lea    rcx,[rip+0x22bce]        # 0x434d68
  41219a:	jmp    0x410a10
  41219f:	lea    rcx,[rip+0x22bbc]        # 0x434d62
  4121a6:	jmp    0x410a10
  4121ab:	lea    rcx,[rip+0x22bb0]        # 0x434d62
  4121b2:	jmp    0x410a10
  4121b7:	lea    rcx,[rip+0x22baa]        # 0x434d68
  4121be:	jmp    0x410a10
  4121c3:	lea    rcx,[rip+0x22b2c]        # 0x434cf6
  4121ca:	jmp    0x410a10
  4121cf:	lea    rcx,[rip+0x22bb6]        # 0x434d8c
  4121d6:	jmp    0x410a10
  4121db:	nop    DWORD PTR [rax+rax*1+0x0]
  4121e0:	push   rbx
  4121e1:	sub    rsp,0x20
  4121e5:	test   rcx,rcx
  4121e8:	je     0x412202
  4121ea:	mov    rbx,rcx
  4121ed:	mov    rcx,QWORD PTR [rcx]
  4121f0:	call   0x42d6f8
  4121f5:	mov    rcx,rbx
  4121f8:	add    rsp,0x20
  4121fc:	pop    rbx
  4121fd:	jmp    0x42d6f8
  412202:	add    rsp,0x20
  412206:	pop    rbx
  412207:	ret    
  412208:	nop    DWORD PTR [rax+rax*1+0x0]
  412210:	push   rbp
  412211:	push   rdi
  412212:	push   rsi
  412213:	push   rbx
  412214:	sub    rsp,0x28
  412218:	test   rcx,rcx
  41221b:	je     0x412350
  412221:	sub    DWORD PTR [rcx+0xc],0x1
  412225:	jne    0x412350
  41222b:	mov    rax,QWORD PTR [rcx+0x10]
  41222f:	test   rax,rax
  412232:	je     0x412247
  412234:	mov    QWORD PTR [rax+0x110],0x0
  41223f:	mov    QWORD PTR [rcx+0x10],0x0
  412247:	cmp    WORD PTR [rcx+0x8],0x0
  41224c:	mov    rbx,rcx
  41224f:	jne    0x4122c3
  412251:	mov    rdx,QWORD PTR [rbx+0x18]
  412255:	test   rdx,rdx
  412258:	je     0x4122aa
  41225a:	mov    rax,QWORD PTR [rbx+0x20]
  41225e:	test   rax,rax
  412261:	je     0x412268
  412263:	mov    rcx,rbx
  412266:	call   rax
  412268:	cmp    WORD PTR [rbx+0x8],0x0
  41226d:	je     0x4122aa
  41226f:	mov    rax,QWORD PTR [rbx]
  412272:	test   rax,rax
  412275:	je     0x4122aa
  412277:	cmp    WORD PTR [rbx+0x8],0x0
  41227c:	je     0x4122a2
  41227e:	xor    edi,edi
  412280:	xor    esi,esi
  412282:	mov    rcx,QWORD PTR [rax+rdi*1]
  412286:	test   rcx,rcx
  412289:	je     0x412293
  41228b:	call   0x40f7b0
  412290:	mov    rax,QWORD PTR [rbx]
  412293:	movzx  edx,WORD PTR [rbx+0x8]
  412297:	add    esi,0x1
  41229a:	add    rdi,0x8
  41229e:	cmp    esi,edx
  4122a0:	jl     0x412282
  4122a2:	mov    rcx,rax
  4122a5:	call   0x42d6f8
  4122aa:	mov    rcx,QWORD PTR [rbx+0x30]
  4122ae:	call   0x42d6f8
  4122b3:	mov    rcx,rbx
  4122b6:	add    rsp,0x28
  4122ba:	pop    rbx
  4122bb:	pop    rsi
  4122bc:	pop    rdi
  4122bd:	pop    rbp
  4122be:	jmp    0x42d6f8
  4122c3:	xor    ebp,ebp
  4122c5:	xor    edi,edi
  4122c7:	cmp    QWORD PTR [rcx],0x0
  4122cb:	je     0x412251
  4122d1:	mov    rax,QWORD PTR [rbx]
  4122d4:	mov    rsi,QWORD PTR [rax+rbp*1]
  4122d8:	test   rsi,rsi
  4122db:	je     0x412325
  4122dd:	mov    rcx,QWORD PTR [rsi+0xa8]
  4122e4:	test   rcx,rcx
  4122e7:	je     0x4122f9
  4122e9:	call   0x42d6f8
  4122ee:	mov    QWORD PTR [rsi+0xa8],0x0
  4122f9:	mov    rcx,QWORD PTR [rsi+0x98]
  412300:	call   0x4121e0
  412305:	cmp    QWORD PTR [rsi+0x48],0x0
  41230a:	mov    QWORD PTR [rsi+0x98],0x0
  412315:	je     0x412325
  412317:	mov    rax,QWORD PTR [rsi+0x50]
  41231b:	test   rax,rax
  41231e:	je     0x412325
  412320:	mov    rcx,rsi
  412323:	call   rax
  412325:	movzx  eax,WORD PTR [rbx+0x8]
  412329:	add    edi,0x1
  41232c:	add    rbp,0x8
  412330:	cmp    edi,eax
  412332:	jl     0x4122d1
  412334:	mov    rdx,QWORD PTR [rbx+0x18]
  412338:	test   rdx,rdx
  41233b:	jne    0x41225a
  412341:	jmp    0x412268
  412346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412350:	add    rsp,0x28
  412354:	pop    rbx
  412355:	pop    rsi
  412356:	pop    rdi
  412357:	pop    rbp
  412358:	ret    
  412359:	nop    DWORD PTR [rax+0x0]
  412360:	push   r12
  412362:	push   rbp
  412363:	push   rdi
  412364:	push   rsi
  412365:	push   rbx
  412366:	sub    rsp,0x20
  41236a:	mov    edx,0x40
  41236f:	mov    r12d,ecx
  412372:	mov    ecx,0x1
  412377:	call   0x42d740
  41237c:	test   rax,rax
  41237f:	mov    rdi,rax
  412382:	je     0x4123fc
  412384:	test   r12w,r12w
  412388:	mov    DWORD PTR [rax+0xc],0x1
  41238f:	jne    0x4123b0
  412391:	mov    rax,rdi
  412394:	mov    WORD PTR [rdi+0x8],r12w
  412399:	mov    DWORD PTR [rdi+0x28],0x0
  4123a0:	add    rsp,0x20
  4123a4:	pop    rbx
  4123a5:	pop    rsi
  4123a6:	pop    rdi
  4123a7:	pop    rbp
  4123a8:	pop    r12
  4123aa:	ret    
  4123ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4123b0:	movzx  ecx,r12w
  4123b4:	mov    edx,0x8
  4123b9:	call   0x42d740
  4123be:	test   rax,rax
  4123c1:	mov    QWORD PTR [rdi],rax
  4123c4:	je     0x4123fc
  4123c6:	lea    ebp,[r12-0x1]
  4123cb:	mov    rbx,rax
  4123ce:	xor    esi,esi
  4123d0:	movzx  ebp,bp
  4123d3:	shl    rbp,0x3
  4123d7:	jmp    0x4123ec
  4123d9:	nop    DWORD PTR [rax+0x0]
  4123e0:	cmp    rsi,rbp
  4123e3:	je     0x412391
  4123e5:	mov    rbx,QWORD PTR [rdi]
  4123e8:	add    rsi,0x8
  4123ec:	add    rbx,rsi
  4123ef:	call   0x40f740
  4123f4:	test   rax,rax
  4123f7:	mov    QWORD PTR [rbx],rax
  4123fa:	jne    0x4123e0
  4123fc:	mov    rcx,rdi
  4123ff:	call   0x412210
  412404:	xor    eax,eax
  412406:	add    rsp,0x20
  41240a:	pop    rbx
  41240b:	pop    rsi
  41240c:	pop    rdi
  41240d:	pop    rbp
  41240e:	pop    r12
  412410:	ret    
  412411:	nop    DWORD PTR [rax+rax*1+0x0]
  412416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412420:	jmp    0x412210
  412425:	nop
  412426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412430:	push   rbx
  412431:	sub    rsp,0x20
  412435:	mov    rax,rcx
  412438:	mov    rcx,QWORD PTR [rcx+0x38]
  41243c:	test   rcx,rcx
  41243f:	je     0x412451
  412441:	mov    rbx,rax
  412444:	call   0x412210
  412449:	mov    QWORD PTR [rbx+0x38],0x0
  412451:	add    rsp,0x20
  412455:	pop    rbx
  412456:	ret    
  412457:	nop    WORD PTR [rax+rax*1+0x0]
  412460:	push   rbx
  412461:	sub    rsp,0x20
  412465:	mov    rbx,QWORD PTR [rcx]
  412468:	mov    QWORD PTR [rcx],0x0
  41246f:	test   rbx,rbx
  412472:	je     0x412481
  412474:	mov    eax,DWORD PTR [rbx+0x8]
  412477:	sub    eax,0x1
  41247a:	test   eax,eax
  41247c:	mov    DWORD PTR [rbx+0x8],eax
  41247f:	jle    0x412490
  412481:	add    rsp,0x20
  412485:	pop    rbx
  412486:	ret    
  412487:	nop    WORD PTR [rax+rax*1+0x0]
  412490:	mov    rcx,QWORD PTR [rbx+0x30]
  412494:	test   rcx,rcx
  412497:	je     0x4124b5
  412499:	mov    rax,QWORD PTR [rcx+0x10]
  41249d:	test   rax,rax
  4124a0:	je     0x4124b5
  4124a2:	mov    QWORD PTR [rax+0x110],0x0
  4124ad:	mov    QWORD PTR [rcx+0x10],0x0
  4124b5:	call   0x412210
  4124ba:	mov    rcx,QWORD PTR [rbx+0x38]
  4124be:	test   rcx,rcx
  4124c1:	je     0x4124d0
  4124c3:	call   0x412210
  4124c8:	mov    QWORD PTR [rbx+0x38],0x0
  4124d0:	mov    rcx,QWORD PTR [rbx+0x40]
  4124d4:	call   0x42d6f8
  4124d9:	mov    rcx,rbx
  4124dc:	add    rsp,0x20
  4124e0:	pop    rbx
  4124e1:	jmp    0x42d6f8
  4124e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4124f0:	push   rsi
  4124f1:	push   rbx
  4124f2:	sub    rsp,0x28
  4124f6:	mov    rbx,QWORD PTR [rip+0x29933]        # 0x43be30
  4124fd:	mov    rsi,rcx
  412500:	mov    QWORD PTR [rsp+0x48],rdx
  412505:	mov    ecx,DWORD PTR [rbx]
  412507:	test   ecx,ecx
  412509:	jne    0x41258b
  41250f:	mov    rax,QWORD PTR [rsi+0x58]
  412513:	mov    r9,QWORD PTR [rsp+0x48]
  412518:	cmp    r9,rax
  41251b:	jne    0x41252b
  41251d:	jmp    0x412554
  41251f:	nop
  412520:	mov    rdx,QWORD PTR [rax]
  412523:	cmp    r9,rdx
  412526:	je     0x412560
  412528:	mov    rax,rdx
  41252b:	test   rax,rax
  41252e:	jne    0x412520
  412530:	mov    eax,DWORD PTR [rbx]
  412532:	test   eax,eax
  412534:	je     0x412584
  412536:	lea    r8,[rip+0x2289b]        # 0x434dd8
  41253d:	lea    rcx,[rip+0x2273e]        # 0x434c82
  412544:	add    r9,0x10
  412548:	mov    edx,0xe07
  41254d:	call   0x40d350
  412552:	jmp    0x412584
  412554:	lea    rax,[rsi+0x58]
  412558:	nop    DWORD PTR [rax+rax*1+0x0]
  412560:	mov    rdx,QWORD PTR [r9]
  412563:	lea    rcx,[rsp+0x48]
  412568:	mov    QWORD PTR [rax],rdx
  41256b:	mov    rax,QWORD PTR [rsp+0x48]
  412570:	mov    QWORD PTR [rax],0x0
  412577:	mov    DWORD PTR [rax+0xc],0x0
  41257e:	call   0x412460
  412583:	nop
  412584:	add    rsp,0x28
  412588:	pop    rbx
  412589:	pop    rsi
  41258a:	ret    
  41258b:	mov    r9,rdx
  41258e:	lea    r8,[rip+0x2280b]        # 0x434da0
  412595:	lea    rcx,[rip+0x226e6]        # 0x434c82
  41259c:	add    r9,0x10
  4125a0:	mov    edx,0xdb7
  4125a5:	call   0x40d350
  4125aa:	jmp    0x41250f
  4125af:	nop
  4125b0:	push   rbp
  4125b1:	push   rdi
  4125b2:	push   rsi
  4125b3:	push   rbx
  4125b4:	sub    rsp,0x28
  4125b8:	mov    rax,QWORD PTR [rip+0x29871]        # 0x43be30
  4125bf:	mov    rdi,rcx
  4125c2:	mov    eax,DWORD PTR [rax]
  4125c4:	test   eax,eax
  4125c6:	jne    0x4126fd
  4125cc:	mov    rcx,QWORD PTR [rdi+0x118]
  4125d3:	test   rcx,rcx
  4125d6:	je     0x4125f4
  4125d8:	mov    rax,QWORD PTR [rcx+0x10]
  4125dc:	test   rax,rax
  4125df:	je     0x4125f4
  4125e1:	mov    QWORD PTR [rax+0x110],0x0
  4125ec:	mov    QWORD PTR [rcx+0x10],0x0
  4125f4:	call   0x412210
  4125f9:	mov    rcx,QWORD PTR [rdi+0x130]
  412600:	mov    QWORD PTR [rdi+0x118],0x0
  41260b:	test   rcx,rcx
  41260e:	je     0x41262c
  412610:	mov    rax,QWORD PTR [rcx+0x10]
  412614:	test   rax,rax
  412617:	je     0x41262c
  412619:	mov    QWORD PTR [rax+0x110],0x0
  412624:	mov    QWORD PTR [rcx+0x10],0x0
  41262c:	call   0x412210
  412631:	mov    eax,DWORD PTR [rdi+0x120]
  412637:	mov    rsi,QWORD PTR [rdi+0x128]
  41263e:	mov    QWORD PTR [rdi+0x130],0x0
  412649:	mov    QWORD PTR [rdi+0x128],0x0
  412654:	mov    DWORD PTR [rdi+0x120],0x0
  41265e:	test   eax,eax
  412660:	je     0x4126b2
  412662:	sub    eax,0x1
  412665:	mov    rbx,rsi
  412668:	lea    rbp,[rsi+rax*8+0x8]
  41266d:	nop    DWORD PTR [rax]
  412670:	test   rsi,rsi
  412673:	je     0x4126a1
  412675:	mov    rcx,QWORD PTR [rbx]
  412678:	test   rcx,rcx
  41267b:	je     0x4126a1
  41267d:	mov    rdx,QWORD PTR [rcx+0x10]
  412681:	test   rdx,rdx
  412684:	je     0x41269c
  412686:	mov    QWORD PTR [rdx+0x110],0x0
  412691:	mov    QWORD PTR [rcx+0x10],0x0
  412699:	mov    rcx,QWORD PTR [rbx]
  41269c:	call   0x412210
  4126a1:	add    rbx,0x8
  4126a5:	cmp    rbx,rbp
  4126a8:	jne    0x412670
  4126aa:	mov    rcx,rsi
  4126ad:	call   0x42d6f8
  4126b2:	mov    rax,QWORD PTR [rdi+0x160]
  4126b9:	mov    BYTE PTR [rdi+0x141],0x0
  4126c0:	mov    DWORD PTR [rdi+0x144],0x0
  4126ca:	test   rax,rax
  4126cd:	je     0x4126f4
  4126cf:	mov    rax,QWORD PTR [rax+0x30]
  4126d3:	test   rax,rax
  4126d6:	je     0x4126f4
  4126d8:	mov    rdx,QWORD PTR [rax+0x10]
  4126dc:	test   rdx,rdx
  4126df:	je     0x4126f4
  4126e1:	mov    QWORD PTR [rdx+0x110],0x0
  4126ec:	mov    QWORD PTR [rax+0x10],0x0
  4126f4:	add    rsp,0x28
  4126f8:	pop    rbx
  4126f9:	pop    rsi
  4126fa:	pop    rdi
  4126fb:	pop    rbp
  4126fc:	ret    
  4126fd:	lea    r8,[rip+0x22703]        # 0x434e07
  412704:	lea    rcx,[rip+0x22577]        # 0x434c82
  41270b:	mov    edx,0x2847
  412710:	call   0x40d350
  412715:	jmp    0x4125cc
  41271a:	nop    WORD PTR [rax+rax*1+0x0]
  412720:	push   rsi
  412721:	push   rbx
  412722:	sub    rsp,0x28
  412726:	mov    rbx,QWORD PTR [rcx]
  412729:	mov    QWORD PTR [rcx],0x0
  412730:	test   rbx,rbx
  412733:	je     0x412742
  412735:	mov    eax,DWORD PTR [rbx+0x8]
  412738:	sub    eax,0x1
  41273b:	test   eax,eax
  41273d:	mov    DWORD PTR [rbx+0x8],eax
  412740:	jle    0x412750
  412742:	add    rsp,0x28
  412746:	pop    rbx
  412747:	pop    rsi
  412748:	ret    
  412749:	nop    DWORD PTR [rax+0x0]
  412750:	mov    rsi,QWORD PTR [rip+0x296d9]        # 0x43be30
  412757:	mov    r10d,DWORD PTR [rsi]
  41275a:	test   r10d,r10d
  41275d:	jne    0x4127d0
  41275f:	mov    rcx,QWORD PTR [rbx+0x48]
  412763:	test   rcx,rcx
  412766:	je     0x412784
  412768:	mov    rax,QWORD PTR [rcx+0x10]
  41276c:	test   rax,rax
  41276f:	je     0x412784
  412771:	mov    QWORD PTR [rax+0x110],0x0
  41277c:	mov    QWORD PTR [rcx+0x10],0x0
  412784:	call   0x412210
  412789:	mov    rcx,QWORD PTR [rbx+0x10]
  41278d:	test   rcx,rcx
  412790:	je     0x4127a3
  412792:	mov    r8d,DWORD PTR [rsi]
  412795:	test   r8d,r8d
  412798:	jne    0x412833
  41279e:	call   0x42d6f8
  4127a3:	mov    rcx,QWORD PTR [rbx+0x20]
  4127a7:	test   rcx,rcx
  4127aa:	je     0x4127bb
  4127ac:	mov    edx,DWORD PTR [rsi]
  4127ae:	test   edx,edx
  4127b0:	jne    0x412854
  4127b6:	call   0x42d6f8
  4127bb:	mov    eax,DWORD PTR [rsi]
  4127bd:	test   eax,eax
  4127bf:	jne    0x412815
  4127c1:	mov    rcx,rbx
  4127c4:	add    rsp,0x28
  4127c8:	pop    rbx
  4127c9:	pop    rsi
  4127ca:	jmp    0x42d6f8
  4127cf:	nop
  4127d0:	mov    r9d,DWORD PTR [rbx+0x18]
  4127d4:	lea    r8,[rip+0x22645]        # 0x434e20
  4127db:	lea    rcx,[rip+0x224a0]        # 0x434c82
  4127e2:	mov    edx,0x3a77
  4127e7:	call   0x40d350
  4127ec:	mov    r9d,DWORD PTR [rsi]
  4127ef:	test   r9d,r9d
  4127f2:	je     0x41275f
  4127f8:	lea    r8,[rip+0x22651]        # 0x434e50
  4127ff:	lea    rcx,[rip+0x2247c]        # 0x434c82
  412806:	mov    edx,0x3a97
  41280b:	call   0x40d350
  412810:	jmp    0x41275f
  412815:	mov    r9d,DWORD PTR [rbx+0x18]
  412819:	lea    r8,[rip+0x226c0]        # 0x434ee0
  412820:	lea    rcx,[rip+0x2245b]        # 0x434c82
  412827:	mov    edx,0x3b77
  41282c:	call   0x40d350
  412831:	jmp    0x4127c1
  412833:	lea    rcx,[rip+0x22448]        # 0x434c82
  41283a:	lea    r8,[rip+0x2263f]        # 0x434e80
  412841:	mov    edx,0x3ae7
  412846:	call   0x40d350
  41284b:	mov    rcx,QWORD PTR [rbx+0x10]
  41284f:	jmp    0x41279e
  412854:	lea    rcx,[rip+0x22427]        # 0x434c82
  41285b:	lea    r8,[rip+0x2264e]        # 0x434eb0
  412862:	mov    edx,0x3b37
  412867:	call   0x40d350
  41286c:	mov    rcx,QWORD PTR [rbx+0x20]
  412870:	jmp    0x4127b6
  412875:	nop
  412876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412880:	push   r13
  412882:	push   r12
  412884:	push   rbp
  412885:	push   rdi
  412886:	push   rsi
  412887:	push   rbx
  412888:	sub    rsp,0x38
  41288c:	mov    edi,DWORD PTR [rsp+0x90]
  412893:	mov    rbp,rcx
  412896:	mov    r12,rdx
  412899:	mov    ecx,0x1
  41289e:	mov    edx,0x58
  4128a3:	mov    esi,r8d
  4128a6:	mov    r13,r9
  4128a9:	call   0x42d740
  4128ae:	test   rax,rax
  4128b1:	mov    rbx,rax
  4128b4:	mov    QWORD PTR [rsp+0x28],rax
  4128b9:	je     0x412960
  4128bf:	mov    DWORD PTR [rax+0x8],0x1
  4128c6:	mov    DWORD PTR [rax+0x50],0x1
  4128cd:	mov    edx,0x1
  4128d2:	mov    DWORD PTR [rax+0x54],0x4
  4128d9:	lea    eax,[rsi+0x1]
  4128dc:	movsxd rcx,eax
  4128df:	call   0x42d740
  4128e4:	test   rax,rax
  4128e7:	mov    QWORD PTR [rbx+0x10],rax
  4128eb:	je     0x412960
  4128ed:	movsxd r8,esi
  4128f0:	mov    rdx,r12
  4128f3:	mov    rcx,rax
  4128f6:	call   0x42d6a8
  4128fb:	lea    ecx,[rdi+0x1]
  4128fe:	mov    edx,0x1
  412903:	movsxd rcx,ecx
  412906:	call   0x42d740
  41290b:	test   rax,rax
  41290e:	mov    QWORD PTR [rbx+0x20],rax
  412912:	je     0x412960
  412914:	movsxd r8,edi
  412917:	mov    rdx,r13
  41291a:	mov    rcx,rax
  41291d:	call   0x42d6a8
  412922:	mov    rax,QWORD PTR [rbp+0x50]
  412926:	test   rax,rax
  412929:	jne    0x412933
  41292b:	jmp    0x412955
  41292d:	nop    DWORD PTR [rax]
  412930:	mov    rax,rdx
  412933:	mov    rdx,QWORD PTR [rax]
  412936:	test   rdx,rdx
  412939:	jne    0x412930
  41293b:	mov    QWORD PTR [rax],rbx
  41293e:	mov    rax,rbx
  412941:	mov    DWORD PTR [rbx+0x8],0x2
  412948:	add    rsp,0x38
  41294c:	pop    rbx
  41294d:	pop    rsi
  41294e:	pop    rdi
  41294f:	pop    rbp
  412950:	pop    r12
  412952:	pop    r13
  412954:	ret    
  412955:	mov    QWORD PTR [rbp+0x50],rbx
  412959:	jmp    0x41293e
  41295b:	nop    DWORD PTR [rax+rax*1+0x0]
  412960:	lea    rcx,[rsp+0x28]
  412965:	call   0x412720
  41296a:	xor    eax,eax
  41296c:	add    rsp,0x38
  412970:	pop    rbx
  412971:	pop    rsi
  412972:	pop    rdi
  412973:	pop    rbp
  412974:	pop    r12
  412976:	pop    r13
  412978:	ret    
  412979:	nop    DWORD PTR [rax+0x0]
  412980:	push   rsi
  412981:	push   rbx
  412982:	sub    rsp,0x28
  412986:	mov    rbx,QWORD PTR [rip+0x294a3]        # 0x43be30
  41298d:	mov    rsi,rcx
  412990:	mov    QWORD PTR [rsp+0x48],rdx
  412995:	mov    ecx,DWORD PTR [rbx]
  412997:	test   ecx,ecx
  412999:	jne    0x412a14
  41299b:	mov    rax,QWORD PTR [rsi+0x50]
  41299f:	mov    r8,QWORD PTR [rsp+0x48]
  4129a4:	cmp    rax,r8
  4129a7:	jne    0x4129bb
  4129a9:	jmp    0x4129e4
  4129ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4129b0:	mov    rdx,QWORD PTR [rax]
  4129b3:	cmp    rdx,r8
  4129b6:	je     0x4129f0
  4129b8:	mov    rax,rdx
  4129bb:	test   rax,rax
  4129be:	jne    0x4129b0
  4129c0:	mov    eax,DWORD PTR [rbx]
  4129c2:	test   eax,eax
  4129c4:	je     0x412a0d
  4129c6:	mov    r9d,DWORD PTR [r8+0x18]
  4129ca:	lea    rcx,[rip+0x222b1]        # 0x434c82
  4129d1:	lea    r8,[rip+0x22570]        # 0x434f48
  4129d8:	mov    edx,0x38d7
  4129dd:	call   0x40d350
  4129e2:	jmp    0x412a0d
  4129e4:	lea    rax,[rsi+0x50]
  4129e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4129f0:	mov    rdx,QWORD PTR [r8]
  4129f3:	lea    rcx,[rsp+0x48]
  4129f8:	mov    QWORD PTR [rax],rdx
  4129fb:	mov    rax,QWORD PTR [rsp+0x48]
  412a00:	mov    QWORD PTR [rax],0x0
  412a07:	call   0x412720
  412a0c:	nop
  412a0d:	add    rsp,0x28
  412a11:	pop    rbx
  412a12:	pop    rsi
  412a13:	ret    
  412a14:	mov    r9d,DWORD PTR [rdx+0x18]
  412a18:	lea    r8,[rip+0x224f1]        # 0x434f10
  412a1f:	lea    rcx,[rip+0x2225c]        # 0x434c82
  412a26:	mov    edx,0x3887
  412a2b:	call   0x40d350
  412a30:	jmp    0x41299b
  412a35:	nop
  412a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412a40:	push   rsi
  412a41:	push   rbx
  412a42:	sub    rsp,0x28
  412a46:	test   rcx,rcx
  412a49:	je     0x412bb0
  412a4f:	mov    rbx,rcx
  412a52:	lea    rcx,[rcx+0x160]
  412a59:	call   0x412460
  412a5e:	lea    rcx,[rbx+0x138]
  412a65:	call   0x412720
  412a6a:	mov    rax,QWORD PTR [rbx+0x110]
  412a71:	test   rax,rax
  412a74:	je     0x412a92
  412a76:	mov    rdx,QWORD PTR [rax+0x10]
  412a7a:	test   rdx,rdx
  412a7d:	je     0x412a92
  412a7f:	mov    QWORD PTR [rdx+0x110],0x0
  412a8a:	mov    QWORD PTR [rax+0x10],0x0
  412a92:	mov    rcx,rbx
  412a95:	call   0x4125b0
  412a9a:	mov    rax,QWORD PTR [rbx+0xc0]
  412aa1:	test   rax,rax
  412aa4:	je     0x412aaf
  412aa6:	mov    rdx,rax
  412aa9:	mov    rcx,rbx
  412aac:	call   QWORD PTR [rax+0x10]
  412aaf:	mov    rdx,QWORD PTR [rbx+0x58]
  412ab3:	mov    QWORD PTR [rbx+0xc0],0x0
  412abe:	test   rdx,rdx
  412ac1:	je     0x412ae8
  412ac3:	mov    rcx,rbx
  412ac6:	call   0x4124f0
  412acb:	mov    rdx,QWORD PTR [rbx+0x58]
  412acf:	test   rdx,rdx
  412ad2:	jne    0x412ac3
  412ad4:	mov    rdx,QWORD PTR [rbx+0x50]
  412ad8:	test   rdx,rdx
  412adb:	je     0x412af1
  412add:	nop    DWORD PTR [rax]
  412ae0:	mov    rcx,rbx
  412ae3:	call   0x412980
  412ae8:	mov    rdx,QWORD PTR [rbx+0x50]
  412aec:	test   rdx,rdx
  412aef:	jne    0x412ae0
  412af1:	mov    rcx,rbx
  412af4:	call   0x41e150
  412af9:	mov    rcx,rbx
  412afc:	call   0x413270
  412b01:	lea    rcx,[rbx+0x18]
  412b05:	call   0x413300
  412b0a:	mov    rcx,rbx
  412b0d:	call   0x40c2b0
  412b12:	mov    rcx,QWORD PTR [rbx+0x8]
  412b16:	call   0x42d6f8
  412b1b:	mov    rcx,QWORD PTR [rbx+0xc8]
  412b22:	call   0x42d6f8
  412b27:	mov    rcx,QWORD PTR [rbx+0x38]
  412b2b:	test   rcx,rcx
  412b2e:	je     0x412b3d
  412b30:	call   0x42d6f8
  412b35:	mov    QWORD PTR [rbx+0x38],0x0
  412b3d:	mov    rcx,QWORD PTR [rbx+0x40]
  412b41:	test   rcx,rcx
  412b44:	je     0x412b53
  412b46:	call   0x42d6f8
  412b4b:	mov    QWORD PTR [rbx+0x40],0x0
  412b53:	mov    rcx,QWORD PTR [rbx+0x48]
  412b57:	test   rcx,rcx
  412b5a:	je     0x412b69
  412b5c:	call   0x42d6f8
  412b61:	mov    QWORD PTR [rbx+0x48],0x0
  412b69:	mov    rcx,QWORD PTR [rbx+0x100]
  412b70:	test   rcx,rcx
  412b73:	je     0x412b85
  412b75:	mov    rsi,QWORD PTR [rcx]
  412b78:	call   0x42d6f8
  412b7d:	test   rsi,rsi
  412b80:	mov    rcx,rsi
  412b83:	jne    0x412b75
  412b85:	mov    rcx,QWORD PTR [rbx+0x108]
  412b8c:	test   rcx,rcx
  412b8f:	je     0x412ba1
  412b91:	mov    rsi,QWORD PTR [rcx]
  412b94:	call   0x42d6f8
  412b99:	test   rsi,rsi
  412b9c:	mov    rcx,rsi
  412b9f:	jne    0x412b91
  412ba1:	mov    rcx,rbx
  412ba4:	add    rsp,0x28
  412ba8:	pop    rbx
  412ba9:	pop    rsi
  412baa:	jmp    0x42d6f8
  412baf:	nop
  412bb0:	add    rsp,0x28
  412bb4:	pop    rbx
  412bb5:	pop    rsi
  412bb6:	ret    
  412bb7:	nop    WORD PTR [rax+rax*1+0x0]
  412bc0:	push   rdi
  412bc1:	push   rsi
  412bc2:	push   rbx
  412bc3:	sub    rsp,0x20
  412bc7:	mov    rdi,rcx
  412bca:	mov    esi,edx
  412bcc:	mov    ecx,0x1
  412bd1:	mov    edx,0x1b8
  412bd6:	call   0x42d740
  412bdb:	test   rax,rax
  412bde:	mov    rbx,rax
  412be1:	je     0x412d00
  412be7:	or     BYTE PTR [rax+0xa0],0x2
  412bee:	mov    QWORD PTR [rax+0x28],rdi
  412bf2:	lea    rdi,[rax+0x18]
  412bf6:	mov    DWORD PTR [rax+0x30],esi
  412bf9:	mov    QWORD PTR [rax+0x10],0xffffffffffffffff
  412c01:	mov    rcx,rdi
  412c04:	call   0x4132b0
  412c09:	test   eax,eax
  412c0b:	jne    0x412d10
  412c11:	mov    rcx,rbx
  412c14:	call   0x40bab0
  412c19:	test   eax,eax
  412c1b:	jne    0x412d10
  412c21:	xor    ecx,ecx
  412c23:	mov    edx,esi
  412c25:	mov    QWORD PTR [rbx+0xf8],0x0
  412c30:	call   0x410260
  412c35:	test   rax,rax
  412c38:	mov    QWORD PTR [rbx+0x100],rax
  412c3f:	je     0x412ce0
  412c45:	lea    edx,[rsi+0x10]
  412c48:	add    rax,0x14
  412c4c:	xor    ecx,ecx
  412c4e:	mov    QWORD PTR [rbx+0xd0],rax
  412c55:	call   0x410260
  412c5a:	test   rax,rax
  412c5d:	mov    QWORD PTR [rbx+0x108],rax
  412c64:	je     0x412cc0
  412c66:	add    rax,0x14
  412c6a:	mov    rcx,rbx
  412c6d:	mov    DWORD PTR [rbx+0xe0],esi
  412c73:	mov    QWORD PTR [rbx+0xd8],rax
  412c7a:	mov    DWORD PTR [rbx+0x158],0x0
  412c84:	call   0x424260
  412c89:	mov    DWORD PTR [rbx+0x148],0x5
  412c93:	mov    QWORD PTR [rbx+0x170],0x0
  412c9e:	mov    rax,rbx
  412ca1:	mov    QWORD PTR [rbx+0x180],0x0
  412cac:	mov    DWORD PTR [rbx+0x188],0x0
  412cb6:	add    rsp,0x20
  412cba:	pop    rbx
  412cbb:	pop    rsi
  412cbc:	pop    rdi
  412cbd:	ret    
  412cbe:	xchg   ax,ax
  412cc0:	mov    rcx,QWORD PTR [rbx+0x100]
  412cc7:	test   rcx,rcx
  412cca:	je     0x412d00
  412ccc:	nop    DWORD PTR [rax+0x0]
  412cd0:	mov    rsi,QWORD PTR [rcx]
  412cd3:	call   0x42d6f8
  412cd8:	test   rsi,rsi
  412cdb:	mov    rcx,rsi
  412cde:	jne    0x412cd0
  412ce0:	mov    rcx,QWORD PTR [rbx+0x108]
  412ce7:	test   rcx,rcx
  412cea:	je     0x412d00
  412cec:	nop    DWORD PTR [rax+0x0]
  412cf0:	mov    rsi,QWORD PTR [rcx]
  412cf3:	call   0x42d6f8
  412cf8:	test   rsi,rsi
  412cfb:	mov    rcx,rsi
  412cfe:	jne    0x412cf0
  412d00:	mov    rcx,rbx
  412d03:	call   0x412a40
  412d08:	xor    eax,eax
  412d0a:	jmp    0x412cb6
  412d0c:	nop    DWORD PTR [rax+0x0]
  412d10:	mov    rcx,rdi
  412d13:	call   0x413300
  412d18:	mov    rcx,rbx
  412d1b:	call   0x40c2b0
  412d20:	mov    rcx,rbx
  412d23:	call   0x412a40
  412d28:	xor    eax,eax
  412d2a:	jmp    0x412cb6
  412d2c:	nop    DWORD PTR [rax+0x0]
  412d30:	push   rsi
  412d31:	push   rbx
  412d32:	sub    rsp,0x28
  412d36:	mov    edx,0x10
  412d3b:	mov    ebx,ecx
  412d3d:	mov    ecx,0x1
  412d42:	call   0x42d740
  412d47:	test   rax,rax
  412d4a:	mov    rsi,rax
  412d4d:	je     0x412d80
  412d4f:	cmp    ebx,0x1000
  412d55:	mov    ecx,0x1000
  412d5a:	mov    edx,0x1
  412d5f:	cmova  ebx,ecx
  412d62:	mov    ecx,ebx
  412d64:	call   0x42d740
  412d69:	test   rax,rax
  412d6c:	mov    QWORD PTR [rsi],rax
  412d6f:	je     0x412d80
  412d71:	mov    rax,rsi
  412d74:	add    rsp,0x28
  412d78:	pop    rbx
  412d79:	pop    rsi
  412d7a:	ret    
  412d7b:	nop    DWORD PTR [rax+rax*1+0x0]
  412d80:	mov    rcx,rsi
  412d83:	call   0x4121e0
  412d88:	xor    eax,eax
  412d8a:	jmp    0x412d74
  412d8c:	nop    DWORD PTR [rax+0x0]
  412d90:	sub    rsp,0x28
  412d94:	mov    edx,0x38
  412d99:	mov    ecx,0x1
  412d9e:	call   0x42d740
  412da3:	test   rax,rax
  412da6:	je     0x412db3
  412da8:	mov    rdx,QWORD PTR [rip+0x29041]        # 0x43bdf0
  412daf:	mov    QWORD PTR [rax+0x10],rdx
  412db3:	add    rsp,0x28
  412db7:	ret    
  412db8:	nop    DWORD PTR [rax+rax*1+0x0]
  412dc0:	push   rbx
  412dc1:	sub    rsp,0x20
  412dc5:	mov    rbx,rcx
  412dc8:	lea    rcx,[rcx+0x10]
  412dcc:	call   0x41d630
  412dd1:	mov    rcx,QWORD PTR [rbx+0x18]
  412dd5:	call   0x42d6f8
  412dda:	mov    rcx,QWORD PTR [rbx+0x30]
  412dde:	mov    QWORD PTR [rbx+0x18],0x0
  412de6:	call   0x412210
  412deb:	mov    QWORD PTR [rbx+0x30],0x0
  412df3:	add    rsp,0x20
  412df7:	pop    rbx
  412df8:	ret    
  412df9:	nop    DWORD PTR [rax+0x0]
  412e00:	push   rbx
  412e01:	sub    rsp,0x20
  412e05:	test   rcx,rcx
  412e08:	je     0x412e20
  412e0a:	mov    rbx,rcx
  412e0d:	call   0x412dc0
  412e12:	mov    rcx,rbx
  412e15:	add    rsp,0x20
  412e19:	pop    rbx
  412e1a:	jmp    0x42d6f8
  412e1f:	nop
  412e20:	add    rsp,0x20
  412e24:	pop    rbx
  412e25:	ret    
  412e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412e30:	push   rbx
  412e31:	sub    rsp,0x20
  412e35:	mov    eax,0x1
  412e3a:	mov    rbx,rcx
  412e3d:	mov    rcx,QWORD PTR [rcx]
  412e40:	test   rdx,rdx
  412e43:	cmove  rdx,rax
  412e47:	test   rcx,rcx
  412e4a:	je     0x412e60
  412e4c:	call   0x42d668
  412e51:	test   rax,rax
  412e54:	je     0x412e59
  412e56:	mov    QWORD PTR [rbx],rax
  412e59:	add    rsp,0x20
  412e5d:	pop    rbx
  412e5e:	ret    
  412e5f:	nop
  412e60:	mov    rcx,rdx
  412e63:	call   0x42d6b8
  412e68:	jmp    0x412e51
  412e6a:	nop    WORD PTR [rax+rax*1+0x0]
  412e70:	push   rsi
  412e71:	push   rbx
  412e72:	sub    rsp,0x28
  412e76:	mov    rbx,rcx
  412e79:	call   0x40f740
  412e7e:	test   rax,rax
  412e81:	mov    rsi,rax
  412e84:	je     0x412f10
  412e8a:	test   rbx,rbx
  412e8d:	je     0x412ec4
  412e8f:	movzx  eax,WORD PTR [rbx+0x8]
  412e93:	mov    rcx,rbx
  412e96:	lea    rdx,[rax*8+0x8]
  412e9e:	call   0x412e30
  412ea3:	test   rax,rax
  412ea6:	je     0x412f03
  412ea8:	movzx  edx,WORD PTR [rbx+0x8]
  412eac:	mov    rax,QWORD PTR [rbx]
  412eaf:	lea    ecx,[rdx+0x1]
  412eb2:	mov    WORD PTR [rbx+0x8],cx
  412eb6:	mov    QWORD PTR [rax+rdx*8],rsi
  412eba:	mov    rax,rbx
  412ebd:	add    rsp,0x28
  412ec1:	pop    rbx
  412ec2:	pop    rsi
  412ec3:	ret    
  412ec4:	mov    edx,0x40
  412ec9:	mov    ecx,0x1
  412ece:	call   0x42d740
  412ed3:	test   rax,rax
  412ed6:	mov    rbx,rax
  412ed9:	je     0x412efb
  412edb:	mov    DWORD PTR [rax+0xc],0x1
  412ee2:	movzx  eax,WORD PTR [rax+0x8]
  412ee6:	mov    rcx,rbx
  412ee9:	lea    rdx,[rax*8+0x8]
  412ef1:	call   0x412e30
  412ef6:	test   rax,rax
  412ef9:	jne    0x412ea8
  412efb:	mov    rcx,rbx
  412efe:	call   0x42d6f8
  412f03:	mov    rcx,rsi
  412f06:	call   0x42d6f8
  412f0b:	xor    eax,eax
  412f0d:	jmp    0x412ebd
  412f0f:	nop
  412f10:	xor    eax,eax
  412f12:	jmp    0x412ebd
  412f14:	xchg   ax,ax
  412f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412f20:	push   r15
  412f22:	push   r14
  412f24:	push   r13
  412f26:	push   r12
  412f28:	push   rbp
  412f29:	push   rdi
  412f2a:	push   rsi
  412f2b:	push   rbx
  412f2c:	sub    rsp,0x48
  412f30:	mov    r12,QWORD PTR [rip+0x28ef9]        # 0x43be30
  412f37:	mov    r13d,r8d
  412f3a:	mov    r14d,r8d
  412f3d:	mov    rbp,rcx
  412f40:	mov    esi,edx
  412f42:	mov    ebx,edx
  412f44:	mov    r8d,DWORD PTR [r12]
  412f48:	test   r8d,r8d
  412f4b:	jne    0x413075
  412f51:	mov    edx,0x40
  412f56:	mov    ecx,0x1
  412f5b:	call   0x42d740
  412f60:	test   rax,rax
  412f63:	mov    rdi,rax
  412f66:	je     0x412fbc
  412f68:	mov    DWORD PTR [rax+0xc],0x1
  412f6f:	movzx  ecx,bx
  412f72:	mov    edx,0x8
  412f77:	call   0x42d740
  412f7c:	test   rax,rax
  412f7f:	mov    QWORD PTR [rdi],rax
  412f82:	je     0x412fbc
  412f84:	test   si,si
  412f87:	mov    WORD PTR [rdi+0x8],si
  412f8b:	je     0x412fe0
  412f8d:	sub    esi,0x1
  412f90:	mov    rbx,rax
  412f93:	xor    r15d,r15d
  412f96:	movzx  esi,si
  412f99:	shl    rsi,0x3
  412f9d:	jmp    0x412fac
  412f9f:	nop
  412fa0:	cmp    r15,rsi
  412fa3:	je     0x412fe0
  412fa5:	mov    rbx,QWORD PTR [rdi]
  412fa8:	add    r15,0x8
  412fac:	add    rbx,r15
  412faf:	call   0x40f740
  412fb4:	test   rax,rax
  412fb7:	mov    QWORD PTR [rbx],rax
  412fba:	jne    0x412fa0
  412fbc:	mov    rcx,rdi
  412fbf:	call   0x412210
  412fc4:	xor    eax,eax
  412fc6:	add    rsp,0x48
  412fca:	pop    rbx
  412fcb:	pop    rsi
  412fcc:	pop    rdi
  412fcd:	pop    rbp
  412fce:	pop    r12
  412fd0:	pop    r13
  412fd2:	pop    r14
  412fd4:	pop    r15
  412fd6:	ret    
  412fd7:	nop    WORD PTR [rax+rax*1+0x0]
  412fe0:	test   r13w,r13w
  412fe4:	jne    0x413050
  412fe6:	mov    ebx,DWORD PTR [rbp+0x120]
  412fec:	lea    rcx,[rbp+0x128]
  412ff3:	lea    edx,[rbx+0x1]
  412ff6:	mov    rsi,rdx
  412ff9:	shl    rdx,0x3
  412ffd:	call   0x412e30
  413002:	test   rax,rax
  413005:	je     0x412fbc
  413007:	mov    edx,DWORD PTR [r12]
  41300b:	mov    QWORD PTR [rbp+0x128],rax
  413012:	mov    QWORD PTR [rax+rbx*8],rdi
  413016:	mov    DWORD PTR [rbp+0x120],esi
  41301c:	test   edx,edx
  41301e:	je     0x412fc6
  413020:	lea    r8,[rip+0x21f91]        # 0x434fb8
  413027:	lea    rcx,[rip+0x21c54]        # 0x434c82
  41302e:	mov    r9d,esi
  413031:	mov    edx,0x1b47
  413036:	mov    QWORD PTR [rsp+0x38],rax
  41303b:	call   0x40d350
  413040:	mov    rax,QWORD PTR [rsp+0x38]
  413045:	jmp    0x412fc6
  41304a:	nop    WORD PTR [rax+rax*1+0x0]
  413050:	movzx  ecx,r14w
  413054:	mov    edx,0x2
  413059:	call   0x42d740
  41305e:	test   rax,rax
  413061:	mov    QWORD PTR [rdi+0x30],rax
  413065:	je     0x412fbc
  41306b:	mov    WORD PTR [rdi+0x38],r13w
  413070:	jmp    0x412fe6
  413075:	movzx  eax,r13w
  413079:	lea    rcx,[rip+0x21c02]        # 0x434c82
  413080:	lea    r8,[rip+0x21ef9]        # 0x434f80
  413087:	movzx  r9d,dx
  41308b:	mov    DWORD PTR [rsp+0x20],eax
  41308f:	mov    edx,0x1a27
  413094:	call   0x40d350
  413099:	mov    ecx,DWORD PTR [r12]
  41309d:	test   ecx,ecx
  41309f:	je     0x412f51
  4130a5:	mov    r9d,DWORD PTR [rbp+0x120]
  4130ac:	lea    r8,[rip+0x21f05]        # 0x434fb8
  4130b3:	lea    rcx,[rip+0x21bc8]        # 0x434c82
  4130ba:	mov    edx,0x1a37
  4130bf:	call   0x40d350
  4130c4:	jmp    0x412f51
  4130c9:	nop
  4130ca:	nop
  4130cb:	nop
  4130cc:	nop
  4130cd:	nop
  4130ce:	nop
  4130cf:	nop
  4130d0:	push   rsi
  4130d1:	push   rbx
  4130d2:	sub    rsp,0x28
  4130d6:	test   rcx,rcx
  4130d9:	mov    rbx,rcx
  4130dc:	mov    esi,edx
  4130de:	je     0x413105
  4130e0:	mov    eax,DWORD PTR [rbx+0x4]
  4130e3:	cmp    eax,0x2
  4130e6:	je     0x4130ed
  4130e8:	cmp    eax,0x17
  4130eb:	jne    0x4130fe
  4130ed:	mov    rbx,QWORD PTR [rbx+0x20]
  4130f1:	movzx  ecx,si
  4130f4:	call   QWORD PTR [rip+0x2fc6a]        # 0x442d64
  4130fa:	mov    WORD PTR [rbx+0x2],ax
  4130fe:	add    rsp,0x28
  413102:	pop    rbx
  413103:	pop    rsi
  413104:	ret    
  413105:	lea    rdx,[rip+0x21ef4]        # 0x435000
  41310c:	lea    rcx,[rip+0x21ef3]        # 0x435006
  413113:	mov    r8d,0xaa
  413119:	call   0x42d350
  41311e:	jmp    0x4130e0
  413120:	push   rbx
  413121:	sub    rsp,0x20
  413125:	mov    rbx,rcx
  413128:	call   0x41bae0
  41312d:	mov    rcx,QWORD PTR [rbx+0x10]
  413131:	call   QWORD PTR [rip+0x2fbdd]        # 0x442d14
  413137:	cmp    eax,0xffffffff
  41313a:	je     0x413160
  41313c:	mov    edx,0x5
  413141:	mov    rcx,rbx
  413144:	mov    QWORD PTR [rbx+0x10],0xffffffffffffffff
  41314c:	add    rsp,0x20
  413150:	pop    rbx
  413151:	jmp    0x423970
  413156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413160:	call   QWORD PTR [rip+0x2fb7e]        # 0x442ce4
  413166:	mov    rcx,QWORD PTR [rbx+0x28]
  41316a:	mov    r9d,eax
  41316d:	mov    r8d,0x4e58
  413173:	mov    rdx,rbx
  413176:	call   0x423700
  41317b:	jmp    0x41313c
  41317d:	nop    DWORD PTR [rax]
  413180:	sub    rsp,0x1c8
  413187:	mov    ecx,0x101
  41318c:	lea    rdx,[rsp+0x20]
  413191:	call   QWORD PTR [rip+0x2fb5d]        # 0x442cf4
  413197:	add    rsp,0x1c8
  41319e:	ret    
  41319f:	nop
  4131a0:	mov    rax,QWORD PTR [rip+0x2fb35]        # 0x442cdc
  4131a7:	rex.W jmp rax
  4131aa:	nop    WORD PTR [rax+rax*1+0x0]
  4131b0:	sub    rsp,0x38
  4131b4:	mov    edx,0x8004667e
  4131b9:	mov    DWORD PTR [rsp+0x2c],0x1
  4131c1:	lea    r8,[rsp+0x2c]
  4131c6:	call   QWORD PTR [rip+0x2fba0]        # 0x442d6c
  4131cc:	xor    edx,edx
  4131ce:	test   eax,eax
  4131d0:	js     0x4131e0
  4131d2:	mov    eax,edx
  4131d4:	add    rsp,0x38
  4131d8:	ret    
  4131d9:	nop    DWORD PTR [rax+0x0]
  4131e0:	call   QWORD PTR [rip+0x2fafe]        # 0x442ce4
  4131e6:	mov    edx,eax
  4131e8:	mov    eax,edx
  4131ea:	add    rsp,0x38
  4131ee:	ret    
  4131ef:	nop
  4131f0:	push   rbx
  4131f1:	sub    rsp,0x40
  4131f5:	test   rdx,rdx
  4131f8:	je     0x413241
  4131fa:	test   r8d,r8d
  4131fd:	jle    0x413241
  4131ff:	mov    rbx,rdx
  413202:	mov    r9d,r8d
  413205:	mov    rdx,QWORD PTR [rcx+0x10]
  413209:	mov    r8,rbx
  41320c:	mov    rcx,QWORD PTR [rcx+0x20]
  413210:	mov    DWORD PTR [rsp+0x30],0x2
  413218:	mov    DWORD PTR [rsp+0x28],0x0
  413220:	mov    QWORD PTR [rsp+0x20],0x0
  413229:	call   QWORD PTR [rip+0x2fb0d]        # 0x442d3c
  41322f:	mov    edx,eax
  413231:	mov    rax,rbx
  413234:	test   edx,edx
  413236:	je     0x413248
  413238:	mov    BYTE PTR [rbx],0x0
  41323b:	add    rsp,0x40
  41323f:	pop    rbx
  413240:	ret    
  413241:	lea    rax,[rip+0x21dcb]        # 0x435013
  413248:	add    rsp,0x40
  41324c:	pop    rbx
  41324d:	ret    
  41324e:	xchg   ax,ax
  413250:	test   rcx,rcx
  413253:	je     0x413263
  413255:	cmp    DWORD PTR [rcx+0x148],0x5
  41325c:	je     0x413263
  41325e:	jmp    0x413120
  413263:	repz ret 
  413265:	nop
  413266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413270:	push   rbx
  413271:	sub    rsp,0x20
  413275:	mov    rbx,rcx
  413278:	mov    rcx,QWORD PTR [rcx+0x10]
  41327c:	cmp    rcx,0xffffffffffffffff
  413280:	je     0x413290
  413282:	call   QWORD PTR [rip+0x2fa8c]        # 0x442d14
  413288:	mov    QWORD PTR [rbx+0x10],0xffffffffffffffff
  413290:	mov    edx,0x5
  413295:	mov    rcx,rbx
  413298:	add    rsp,0x20
  41329c:	pop    rbx
  41329d:	jmp    0x423970
  4132a2:	nop    DWORD PTR [rax+0x0]
  4132a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4132b0:	push   rbx
  4132b1:	sub    rsp,0x30
  4132b5:	xor    r8d,r8d
  4132b8:	mov    edx,0x1
  4132bd:	lea    r9,[rsp+0x20]
  4132c2:	mov    QWORD PTR [rcx+0x8],0xffffffffffffffff
  4132ca:	mov    QWORD PTR [rcx],0xffffffffffffffff
  4132d1:	mov    rbx,rcx
  4132d4:	mov    ecx,0x1
  4132d9:	call   0x424700
  4132de:	test   eax,eax
  4132e0:	jne    0x4132f3
  4132e2:	mov    rdx,QWORD PTR [rsp+0x20]
  4132e7:	mov    QWORD PTR [rbx],rdx
  4132ea:	mov    rdx,QWORD PTR [rsp+0x28]
  4132ef:	mov    QWORD PTR [rbx+0x8],rdx
  4132f3:	add    rsp,0x30
  4132f7:	pop    rbx
  4132f8:	ret    
  4132f9:	nop    DWORD PTR [rax+0x0]
  413300:	push   rbx
  413301:	sub    rsp,0x20
  413305:	mov    rbx,rcx
  413308:	mov    rcx,QWORD PTR [rcx]
  41330b:	cmp    rcx,0xffffffffffffffff
  41330f:	je     0x413317
  413311:	call   QWORD PTR [rip+0x2f9fd]        # 0x442d14
  413317:	mov    rcx,QWORD PTR [rbx+0x8]
  41331b:	cmp    rcx,0xffffffffffffffff
  41331f:	je     0x413330
  413321:	mov    rax,QWORD PTR [rip+0x2f9ec]        # 0x442d14
  413328:	add    rsp,0x20
  41332c:	pop    rbx
  41332d:	rex.W jmp rax
  413330:	add    rsp,0x20
  413334:	pop    rbx
  413335:	ret    
  413336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413340:	sub    rsp,0x28
  413344:	mov    rcx,QWORD PTR [rcx]
  413347:	xor    r9d,r9d
  41334a:	mov    r8d,0x1
  413350:	mov    BYTE PTR [rsp+0x38],dl
  413354:	lea    rdx,[rsp+0x38]
  413359:	call   QWORD PTR [rip+0x2fa35]        # 0x442d94
  41335f:	nop
  413360:	add    rsp,0x28
  413364:	ret    
  413365:	nop
  413366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413370:	ret    
  413371:	nop    DWORD PTR [rax+rax*1+0x0]
  413376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413380:	push   rbx
  413381:	sub    rsp,0x50
  413385:	xor    edx,edx
  413387:	mov    r9d,0x400
  41338d:	lea    rax,[rsp+0x48]
  413392:	mov    r8d,ecx
  413395:	mov    QWORD PTR [rsp+0x48],0x0
  41339e:	mov    QWORD PTR [rsp+0x30],0x0
  4133a7:	mov    DWORD PTR [rsp+0x28],0x0
  4133af:	mov    ecx,0x1100
  4133b4:	mov    QWORD PTR [rsp+0x20],rax
  4133b9:	call   QWORD PTR [rip+0x2f53d]        # 0x4428fc
  4133bf:	mov    rbx,QWORD PTR [rsp+0x48]
  4133c4:	test   rbx,rbx
  4133c7:	je     0x413412
  4133c9:	mov    rcx,rbx
  4133cc:	call   0x42d610
  4133d1:	test   rax,rax
  4133d4:	je     0x413409
  4133d6:	sub    rax,0x1
  4133da:	lea    rdx,[rbx+rax*1]
  4133de:	movzx  ecx,BYTE PTR [rdx]
  4133e1:	cmp    cl,0xa
  4133e4:	jne    0x413404
  4133e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4133f0:	mov    BYTE PTR [rdx],0x0
  4133f3:	mov    rbx,QWORD PTR [rsp+0x48]
  4133f8:	lea    rdx,[rbx+rax*1]
  4133fc:	movzx  ecx,BYTE PTR [rdx]
  4133ff:	cmp    cl,0xa
  413402:	je     0x4133f0
  413404:	cmp    cl,0xd
  413407:	je     0x4133f0
  413409:	mov    rax,rbx
  41340c:	add    rsp,0x50
  413410:	pop    rbx
  413411:	ret    
  413412:	lea    rbx,[rip+0x21fa7]        # 0x4353c0
  413419:	mov    rax,rbx
  41341c:	add    rsp,0x50
  413420:	pop    rbx
  413421:	ret    
  413422:	nop    DWORD PTR [rax+0x0]
  413426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413430:	push   r15
  413432:	push   r14
  413434:	push   r13
  413436:	push   r12
  413438:	push   rbp
  413439:	push   rdi
  41343a:	push   rsi
  41343b:	push   rbx
  41343c:	sub    rsp,0x68
  413440:	test   rcx,rcx
  413443:	mov    r15,rcx
  413446:	mov    r12d,edx
  413449:	mov    ebx,r8d
  41344c:	je     0x413640
  413452:	test   ebx,ebx
  413454:	js     0x413620
  41345a:	mov    rax,QWORD PTR [r15+0x28]
  41345e:	test   rax,rax
  413461:	je     0x413610
  413467:	cmp    QWORD PTR [rax+0x20],0x0
  41346c:	mov    esi,0x1
  413471:	je     0x413610
  413477:	test   ebx,ebx
  413479:	sete   BYTE PTR [rsp+0x38]
  41347e:	test   ebx,ebx
  413480:	js     0x4135b2
  413486:	imul   ebp,esi,0x3e8
  41348c:	mov    eax,0xffffffff
  413491:	test   esi,esi
  413493:	mov    r13d,r12d
  413496:	lea    r14,[rsp+0x40]
  41349b:	mov    edi,ebx
  41349d:	cmove  ebp,eax
  4134a0:	and    r13d,0x300
  4134a7:	mov    rax,QWORD PTR [r15+0x10]
  4134ab:	cmp    rax,0xffffffffffffffff
  4134af:	je     0x413562
  4134b5:	test   r13d,r13d
  4134b8:	je     0x4134d7
  4134ba:	mov    rcx,QWORD PTR [r15+0xb0]
  4134c1:	test   rcx,rcx
  4134c4:	je     0x4134d7
  4134c6:	call   0x42ae70
  4134cb:	test   eax,eax
  4134cd:	jne    0x4136a2
  4134d3:	mov    rax,QWORD PTR [r15+0x10]
  4134d7:	mov    QWORD PTR [rsp+0x40],rax
  4134dc:	mov    rax,QWORD PTR [r15+0x20]
  4134e0:	xor    ecx,ecx
  4134e2:	mov    r8d,0x300
  4134e8:	xor    r9d,r9d
  4134eb:	mov    WORD PTR [rsp+0x4a],cx
  4134f0:	mov    WORD PTR [rsp+0x58],r8w
  4134f6:	mov    edx,0x2
  4134fb:	mov    r8d,ebp
  4134fe:	mov    rcx,r14
  413501:	mov    WORD PTR [rsp+0x48],r12w
  413507:	mov    QWORD PTR [rsp+0x50],rax
  41350c:	mov    WORD PTR [rsp+0x5a],r9w
  413512:	call   0x4242c0
  413517:	cmp    eax,0x0
  41351a:	jg     0x413660
  413520:	jne    0x4135c0
  413526:	mov    rax,QWORD PTR [r15+0x28]
  41352a:	test   rax,rax
  41352d:	je     0x413580
  41352f:	mov    rax,QWORD PTR [rax+0x20]
  413533:	test   rax,rax
  413536:	je     0x413580
  413538:	mov    rcx,QWORD PTR [r15+0xf8]
  41353f:	call   rax
  413541:	cmp    eax,0x1
  413544:	mov    r9d,eax
  413547:	je     0x41359d
  413549:	xor    eax,eax
  41354b:	cmp    r9d,0x2
  41354f:	je     0x413567
  413551:	mov    rax,QWORD PTR [rip+0x288d8]        # 0x43be30
  413558:	mov    eax,DWORD PTR [rax]
  41355a:	test   eax,eax
  41355c:	jne    0x413680
  413562:	mov    eax,0xffffffff
  413567:	add    rsp,0x68
  41356b:	pop    rbx
  41356c:	pop    rsi
  41356d:	pop    rdi
  41356e:	pop    rbp
  41356f:	pop    r12
  413571:	pop    r13
  413573:	pop    r14
  413575:	pop    r15
  413577:	ret    
  413578:	nop    DWORD PTR [rax+rax*1+0x0]
  413580:	cmp    esi,ebx
  413582:	je     0x41359d
  413584:	lea    rdx,[rip+0x21a75]        # 0x435000
  41358b:	lea    rcx,[rip+0x21b3e]        # 0x4350d0
  413592:	mov    r8d,0x208
  413598:	call   0x42d350
  41359d:	sub    edi,esi
  41359f:	test   edi,edi
  4135a1:	jg     0x4134a7
  4135a7:	cmp    BYTE PTR [rsp+0x38],0x0
  4135ac:	jne    0x4134a7
  4135b2:	xor    eax,eax
  4135b4:	jmp    0x413567
  4135b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4135c0:	mov    DWORD PTR [rsp+0x3c],eax
  4135c4:	call   QWORD PTR [rip+0x2f71a]        # 0x442ce4
  4135ca:	cmp    eax,0x2714
  4135cf:	mov    r11d,DWORD PTR [rsp+0x3c]
  4135d4:	jne    0x4136c1
  4135da:	add    edi,esi
  4135dc:	call   QWORD PTR [rip+0x2f702]        # 0x442ce4
  4135e2:	cmp    eax,0x2714
  4135e7:	je     0x413526
  4135ed:	lea    rdx,[rip+0x21a0c]        # 0x435000
  4135f4:	lea    rcx,[rip+0x21a65]        # 0x435060
  4135fb:	mov    r8d,0x1eb
  413601:	call   0x42d350
  413606:	jmp    0x413526
  41360b:	nop    DWORD PTR [rax+rax*1+0x0]
  413610:	mov    esi,ebx
  413612:	jmp    0x413477
  413617:	nop    WORD PTR [rax+rax*1+0x0]
  413620:	lea    rdx,[rip+0x219d9]        # 0x435000
  413627:	lea    rcx,[rip+0x219f2]        # 0x435020
  41362e:	mov    r8d,0x1a7
  413634:	call   0x42d350
  413639:	jmp    0x41345a
  41363e:	xchg   ax,ax
  413640:	lea    rdx,[rip+0x219b9]        # 0x435000
  413647:	lea    rcx,[rip+0x219c6]        # 0x435014
  41364e:	mov    r8d,0x1a6
  413654:	call   0x42d350
  413659:	jmp    0x413452
  41365e:	xchg   ax,ax
  413660:	movsx  eax,WORD PTR [rsp+0x4a]
  413665:	test   al,0x1
  413667:	jne    0x4136ac
  413669:	cmp    WORD PTR [rsp+0x5a],0x0
  41366f:	je     0x413567
  413675:	or     ah,0x80
  413678:	jmp    0x413567
  41367d:	nop    DWORD PTR [rax]
  413680:	lea    r8,[rip+0x21a11]        # 0x435098
  413687:	lea    rcx,[rip+0x21972]        # 0x435000
  41368e:	mov    edx,0x1ff4
  413693:	call   0x40d350
  413698:	mov    eax,0xffffffff
  41369d:	jmp    0x413567
  4136a2:	mov    eax,0x300
  4136a7:	jmp    0x413567
  4136ac:	mov    ecx,0x2746
  4136b1:	call   QWORD PTR [rip+0x2f635]        # 0x442cec
  4136b7:	mov    eax,0xffffffff
  4136bc:	jmp    0x413567
  4136c1:	mov    DWORD PTR [rsp+0x38],r11d
  4136c6:	call   QWORD PTR [rip+0x2f618]        # 0x442ce4
  4136cc:	mov    ecx,eax
  4136ce:	call   0x413380
  4136d3:	mov    rbx,rax
  4136d6:	mov    rax,QWORD PTR [rip+0x28753]        # 0x43be30
  4136dd:	mov    r11d,DWORD PTR [rsp+0x38]
  4136e2:	mov    edx,DWORD PTR [rax]
  4136e4:	test   edx,edx
  4136e6:	jne    0x41370f
  4136e8:	lea    rax,[rip+0x21cd1]        # 0x4353c0
  4136ef:	cmp    rbx,rax
  4136f2:	je     0x413707
  4136f4:	mov    DWORD PTR [rsp+0x38],r11d
  4136f9:	mov    rcx,rbx
  4136fc:	call   QWORD PTR [rip+0x2f272]        # 0x442974
  413702:	mov    r11d,DWORD PTR [rsp+0x38]
  413707:	mov    eax,r11d
  41370a:	jmp    0x413567
  41370f:	call   QWORD PTR [rip+0x2f5cf]        # 0x442ce4
  413715:	lea    r8,[rip+0x2191c]        # 0x435038
  41371c:	lea    rcx,[rip+0x218dd]        # 0x435000
  413723:	mov    r9d,eax
  413726:	mov    QWORD PTR [rsp+0x20],rbx
  41372b:	mov    edx,0x1e42
  413730:	call   0x40d350
  413735:	mov    r11d,DWORD PTR [rsp+0x38]
  41373a:	jmp    0x4136e8
  41373c:	nop    DWORD PTR [rax+0x0]
  413740:	push   r15
  413742:	push   r14
  413744:	push   r13
  413746:	push   r12
  413748:	push   rbp
  413749:	push   rdi
  41374a:	push   rsi
  41374b:	push   rbx
  41374c:	sub    rsp,0x48
  413750:	test   rdx,rdx
  413753:	sete   r9b
  413757:	test   r8d,r8d
  41375a:	setle  al
  41375d:	or     r9b,al
  413760:	jne    0x413880
  413766:	test   rcx,rcx
  413769:	je     0x413880
  41376f:	mov    rbp,QWORD PTR [rip+0x2f60e]        # 0x442d84
  413776:	mov    r12,QWORD PTR [rip+0x2f567]        # 0x442ce4
  41377d:	lea    r14,[rsp+0x30]
  413782:	mov    edi,r8d
  413785:	mov    rsi,rdx
  413788:	mov    rbx,rcx
  41378b:	mov    r13,rbp
  41378e:	mov    r15,r12
  413791:	mov    r8d,DWORD PTR [rbx+0x158]
  413798:	mov    edx,0x300
  41379d:	mov    rcx,rbx
  4137a0:	call   0x413430
  4137a5:	cmp    eax,0x0
  4137a8:	jle    0x4137e0
  4137aa:	test   ah,0x80
  4137ad:	jne    0x413820
  4137af:	xor    r9d,r9d
  4137b2:	mov    rdx,rsi
  4137b5:	mov    rcx,QWORD PTR [rbx+0x10]
  4137b9:	mov    r8d,edi
  4137bc:	call   rbp
  4137be:	test   eax,eax
  4137c0:	mov    edx,eax
  4137c2:	jle    0x413890
  4137c8:	mov    eax,edx
  4137ca:	add    rsp,0x48
  4137ce:	pop    rbx
  4137cf:	pop    rsi
  4137d0:	pop    rdi
  4137d1:	pop    rbp
  4137d2:	pop    r12
  4137d4:	pop    r13
  4137d6:	pop    r14
  4137d8:	pop    r15
  4137da:	ret    
  4137db:	nop    DWORD PTR [rax+rax*1+0x0]
  4137e0:	jne    0x413850
  4137e2:	call   r12
  4137e5:	mov    rcx,QWORD PTR [rbx+0x28]
  4137e9:	mov    r9d,eax
  4137ec:	mov    r8d,0x4e23
  4137f2:	mov    rdx,rbx
  4137f5:	call   0x423700
  4137fa:	cmp    eax,0x1
  4137fd:	je     0x413791
  4137ff:	cmp    DWORD PTR [rbx+0x148],0x5
  413806:	je     0x413880
  413808:	mov    rcx,rbx
  41380b:	call   0x413120
  413810:	mov    eax,0xffffffff
  413815:	jmp    0x4137ca
  413817:	nop    WORD PTR [rax+rax*1+0x0]
  413820:	xor    r9d,r9d
  413823:	mov    rcx,QWORD PTR [rbx+0x20]
  413827:	mov    r8d,0x10
  41382d:	mov    rdx,r14
  413830:	call   r13
  413833:	movzx  eax,BYTE PTR [rbx+0x14c]
  41383a:	cmp    al,0x1
  41383c:	jne    0x413791
  413842:	mov    rcx,rbx
  413845:	call   0x415410
  41384a:	jmp    0x413791
  41384f:	nop
  413850:	call   r15
  413853:	cmp    eax,0x2733
  413858:	je     0x413791
  41385e:	call   r15
  413861:	mov    rcx,rbx
  413864:	mov    esi,eax
  413866:	call   0x413270
  41386b:	mov    rcx,QWORD PTR [rbx+0x28]
  41386f:	mov    r9d,esi
  413872:	mov    r8d,0x4e24
  413878:	mov    rdx,rbx
  41387b:	call   0x423700
  413880:	mov    eax,0xffffffff
  413885:	jmp    0x4137ca
  41388a:	nop    WORD PTR [rax+rax*1+0x0]
  413890:	mov    DWORD PTR [rsp+0x28],eax
  413894:	call   QWORD PTR [rip+0x2f44a]        # 0x442ce4
  41389a:	cmp    eax,0x2733
  41389f:	mov    edx,DWORD PTR [rsp+0x28]
  4138a3:	jne    0x4138b2
  4138a5:	mov    ecx,edx
  4138a7:	shr    ecx,0x1f
  4138aa:	test   cl,cl
  4138ac:	jne    0x413791
  4138b2:	mov    rcx,rbx
  4138b5:	mov    DWORD PTR [rsp+0x2c],eax
  4138b9:	mov    DWORD PTR [rsp+0x28],edx
  4138bd:	call   0x413270
  4138c2:	mov    edx,DWORD PTR [rsp+0x28]
  4138c6:	mov    eax,DWORD PTR [rsp+0x2c]
  4138ca:	mov    r9d,0x0
  4138d0:	mov    rcx,QWORD PTR [rbx+0x28]
  4138d4:	test   edx,edx
  4138d6:	cmovne r9d,eax
  4138da:	cmp    edx,0x1
  4138dd:	mov    rdx,rbx
  4138e0:	sbb    eax,eax
  4138e2:	and    eax,0xd
  4138e5:	lea    r8d,[rax+0x4e24]
  4138ec:	call   0x423700
  4138f1:	mov    edx,0xffffffff
  4138f6:	jmp    0x4137c8
  4138fb:	nop    DWORD PTR [rax+rax*1+0x0]
  413900:	sub    rsp,0x28
  413904:	mov    rax,QWORD PTR [rcx+0xb0]
  41390b:	test   rax,rax
  41390e:	je     0x413920
  413910:	movsxd r8,r8d
  413913:	mov    rcx,rax
  413916:	call   0x42ae60
  41391b:	add    rsp,0x28
  41391f:	ret    
  413920:	add    rsp,0x28
  413924:	jmp    0x413740
  413929:	nop    DWORD PTR [rax+0x0]
  413930:	push   r15
  413932:	push   r14
  413934:	push   r13
  413936:	push   r12
  413938:	push   rbp
  413939:	push   rdi
  41393a:	push   rsi
  41393b:	push   rbx
  41393c:	sub    rsp,0xf8
  413943:	mov    rbp,QWORD PTR [rsp+0x160]
  41394b:	mov    rsi,rcx
  41394e:	mov    rbx,rdx
  413951:	mov    r13d,r8d
  413954:	mov    r12d,r9d
  413957:	xor    r8d,r8d
  41395a:	mov    DWORD PTR [rbp+0x0],0x0
  413961:	mov    ecx,DWORD PTR [rdx+0x4]
  413964:	mov    edx,0x1
  413969:	call   QWORD PTR [rip+0x2f43d]        # 0x442dac
  41396f:	cmp    rax,0xffffffffffffffff
  413973:	mov    QWORD PTR [rsi+0x10],rax
  413977:	je     0x413c60
  41397d:	lea    r14,[rsp+0x64]
  413982:	mov    r8d,0x8
  413988:	mov    edx,0xffff
  41398d:	mov    rcx,rax
  413990:	mov    rdi,QWORD PTR [rip+0x2f40d]        # 0x442da4
  413997:	mov    DWORD PTR [rsi+0x148],0x0
  4139a1:	mov    r9,r14
  4139a4:	mov    DWORD PTR [rsp+0x64],0x1
  4139ac:	mov    DWORD PTR [rsp+0x20],0x4
  4139b4:	call   rdi
  4139b6:	mov    r9,r14
  4139b9:	mov    DWORD PTR [rsp+0x64],0x1
  4139c1:	mov    rcx,QWORD PTR [rsi+0x10]
  4139c5:	mov    DWORD PTR [rsp+0x20],0x4
  4139cd:	mov    r8d,0x1
  4139d3:	mov    edx,0x6
  4139d8:	call   rdi
  4139da:	mov    rax,QWORD PTR [rip+0x2ef93]        # 0x442974
  4139e1:	mov    r15,QWORD PTR [rip+0x28448]        # 0x43be30
  4139e8:	lea    r14,[rsp+0x70]
  4139ed:	mov    QWORD PTR [rsp+0x48],rax
  4139f2:	mov    rax,QWORD PTR [rip+0x2f2eb]        # 0x442ce4
  4139f9:	mov    QWORD PTR [rsp+0x40],rax
  4139fe:	jmp    0x413a41
  413a00:	mov    DWORD PTR [rbp+0x0],0x0
  413a07:	mov    r10d,DWORD PTR [r15]
  413a0a:	test   r10d,r10d
  413a0d:	jne    0x413b70
  413a13:	test   r12d,r12d
  413a16:	mov    edi,0x15f90
  413a1b:	cmovne edi,r12d
  413a1f:	call   0x4131b0
  413a24:	test   eax,eax
  413a26:	mov    DWORD PTR [rbp+0x0],eax
  413a29:	je     0x413aa3
  413a2b:	mov    rcx,rsi
  413a2e:	mov    edi,0x4e5a
  413a33:	call   0x413270
  413a38:	mov    rbx,QWORD PTR [rbx+0x28]
  413a3c:	test   rbx,rbx
  413a3f:	je     0x413a75
  413a41:	mov    edx,r13d
  413a44:	mov    rcx,rbx
  413a47:	call   0x4130d0
  413a4c:	mov    rcx,rbx
  413a4f:	mov    r8d,0x80
  413a55:	mov    rdx,r14
  413a58:	call   0x4131f0
  413a5d:	mov    rcx,QWORD PTR [rsi+0x10]
  413a61:	cmp    rcx,0xffffffffffffffff
  413a65:	jne    0x413a00
  413a67:	mov    rbx,QWORD PTR [rbx+0x28]
  413a6b:	mov    edi,0x4e29
  413a70:	test   rbx,rbx
  413a73:	jne    0x413a41
  413a75:	mov    rcx,rsi
  413a78:	call   0x413270
  413a7d:	mov    r11d,DWORD PTR [r15]
  413a80:	test   r11d,r11d
  413a83:	je     0x413b1a
  413a89:	lea    r8,[rip+0x2167b]        # 0x43510b
  413a90:	lea    rcx,[rip+0x21569]        # 0x435000
  413a97:	mov    edx,0x1522
  413a9c:	call   0x40d350
  413aa1:	jmp    0x413b1a
  413aa3:	mov    rdx,QWORD PTR [rbx+0x20]
  413aa7:	mov    rcx,QWORD PTR [rsi+0x10]
  413aab:	mov    r8d,DWORD PTR [rbx+0x10]
  413aaf:	call   QWORD PTR [rip+0x2f267]        # 0x442d1c
  413ab5:	test   eax,eax
  413ab7:	jne    0x413bb0
  413abd:	mov    r9d,DWORD PTR [r15]
  413ac0:	test   r9d,r9d
  413ac3:	jne    0x413ca4
  413ac9:	lea    rax,[rsp+0x68]
  413ace:	mov    DWORD PTR [rsp+0x68],0x4
  413ad6:	mov    DWORD PTR [rsp+0x6c],0x0
  413ade:	mov    rcx,QWORD PTR [rsi+0x10]
  413ae2:	lea    r9,[rsp+0x6c]
  413ae7:	mov    r8d,0x1007
  413aed:	mov    QWORD PTR [rsp+0x20],rax
  413af2:	mov    edx,0xffff
  413af7:	call   QWORD PTR [rip+0x2f257]        # 0x442d54
  413afd:	test   eax,eax
  413aff:	jne    0x413c20
  413b05:	mov    ecx,DWORD PTR [rsp+0x6c]
  413b09:	test   ecx,ecx
  413b0b:	jne    0x413b30
  413b0d:	mov    eax,DWORD PTR [r15]
  413b10:	test   eax,eax
  413b12:	jne    0x413ceb
  413b18:	xor    edi,edi
  413b1a:	mov    eax,edi
  413b1c:	add    rsp,0xf8
  413b23:	pop    rbx
  413b24:	pop    rsi
  413b25:	pop    rdi
  413b26:	pop    rbp
  413b27:	pop    r12
  413b29:	pop    r13
  413b2b:	pop    r14
  413b2d:	pop    r15
  413b2f:	ret    
  413b30:	mov    DWORD PTR [rbp+0x0],ecx
  413b33:	call   0x413380
  413b38:	mov    edx,DWORD PTR [r15]
  413b3b:	test   edx,edx
  413b3d:	jne    0x413d34
  413b43:	lea    rdx,[rip+0x21876]        # 0x4353c0
  413b4a:	cmp    rax,rdx
  413b4d:	je     0x413a67
  413b53:	mov    rcx,rax
  413b56:	mov    edi,0x4e29
  413b5b:	call   QWORD PTR [rip+0x2ee13]        # 0x442974
  413b61:	jmp    0x413a38
  413b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413b70:	movzx  eax,WORD PTR [rsi]
  413b73:	lea    rcx,[rip+0x21486]        # 0x435000
  413b7a:	lea    r8,[rip+0x215a7]        # 0x435128
  413b81:	mov    DWORD PTR [rsp+0x20],r13d
  413b86:	mov    r9,r14
  413b89:	movzx  edx,al
  413b8c:	movzx  eax,ah
  413b8f:	mov    DWORD PTR [rsp+0x30],edx
  413b93:	mov    DWORD PTR [rsp+0x28],eax
  413b97:	mov    edx,0xd85
  413b9c:	call   0x40d350
  413ba1:	mov    rcx,QWORD PTR [rsi+0x10]
  413ba5:	jmp    0x413a13
  413baa:	nop    WORD PTR [rax+rax*1+0x0]
  413bb0:	mov    rax,QWORD PTR [rsp+0x40]
  413bb5:	call   rax
  413bb7:	mov    DWORD PTR [rbp+0x0],eax
  413bba:	mov    ecx,eax
  413bbc:	mov    DWORD PTR [rsp+0x50],eax
  413bc0:	call   0x413380
  413bc5:	mov    r8d,DWORD PTR [r15]
  413bc8:	test   r8d,r8d
  413bcb:	jne    0x413cc1
  413bd1:	lea    rdx,[rip+0x217e8]        # 0x4353c0
  413bd8:	cmp    rax,rdx
  413bdb:	je     0x413be6
  413bdd:	mov    rcx,rax
  413be0:	call   QWORD PTR [rip+0x2ed8e]        # 0x442974
  413be6:	cmp    DWORD PTR [rsp+0x50],0x2733
  413bee:	jne    0x413a67
  413bf4:	mov    DWORD PTR [rbp+0x0],0x274c
  413bfb:	mov    r8d,edi
  413bfe:	mov    edx,0x10
  413c03:	mov    rcx,rsi
  413c06:	call   0x413430
  413c0b:	test   eax,eax
  413c0d:	je     0x413a67
  413c13:	jmp    0x413ac9
  413c18:	nop    DWORD PTR [rax+rax*1+0x0]
  413c20:	call   QWORD PTR [rip+0x2f0be]        # 0x442ce4
  413c26:	mov    ecx,eax
  413c28:	mov    DWORD PTR [rbp+0x0],eax
  413c2b:	call   0x413380
  413c30:	mov    ecx,DWORD PTR [r15]
  413c33:	test   ecx,ecx
  413c35:	jne    0x413d0a
  413c3b:	lea    rdx,[rip+0x2177e]        # 0x4353c0
  413c42:	cmp    rax,rdx
  413c45:	je     0x413a67
  413c4b:	mov    rcx,rax
  413c4e:	mov    edi,0x4e29
  413c53:	mov    rax,QWORD PTR [rsp+0x48]
  413c58:	call   rax
  413c5a:	jmp    0x413a38
  413c5f:	nop
  413c60:	call   QWORD PTR [rip+0x2f07e]        # 0x442ce4
  413c66:	mov    DWORD PTR [rbp+0x0],eax
  413c69:	mov    ecx,eax
  413c6b:	call   0x413380
  413c70:	mov    rdx,QWORD PTR [rip+0x281b9]        # 0x43be30
  413c77:	mov    ebx,DWORD PTR [rdx]
  413c79:	test   ebx,ebx
  413c7b:	jne    0x413d5e
  413c81:	lea    rdx,[rip+0x21738]        # 0x4353c0
  413c88:	mov    edi,0x4e28
  413c8d:	cmp    rax,rdx
  413c90:	je     0x413b1a
  413c96:	mov    rcx,rax
  413c99:	call   QWORD PTR [rip+0x2ecd5]        # 0x442974
  413c9f:	jmp    0x413b1a
  413ca4:	lea    r8,[rip+0x214ab]        # 0x435156
  413cab:	lea    rcx,[rip+0x2134e]        # 0x435000
  413cb2:	mov    edx,0xee6
  413cb7:	call   0x40d350
  413cbc:	jmp    0x413ac9
  413cc1:	lea    r8,[rip+0x214a8]        # 0x435170
  413cc8:	lea    rcx,[rip+0x21331]        # 0x435000
  413ccf:	mov    r9,rax
  413cd2:	mov    edx,0xf22
  413cd7:	mov    QWORD PTR [rsp+0x58],rax
  413cdc:	call   0x40d350
  413ce1:	mov    rax,QWORD PTR [rsp+0x58]
  413ce6:	jmp    0x413bd1
  413ceb:	lea    r8,[rip+0x214df]        # 0x4351d1
  413cf2:	lea    rcx,[rip+0x21307]        # 0x435000
  413cf9:	mov    edx,0x1576
  413cfe:	xor    edi,edi
  413d00:	call   0x40d350
  413d05:	jmp    0x413b1a
  413d0a:	lea    r8,[rip+0x2148a]        # 0x43519b
  413d11:	lea    rcx,[rip+0x212e8]        # 0x435000
  413d18:	mov    r9,rax
  413d1b:	mov    edx,0x10f2
  413d20:	mov    QWORD PTR [rsp+0x50],rax
  413d25:	call   0x40d350
  413d2a:	mov    rax,QWORD PTR [rsp+0x50]
  413d2f:	jmp    0x413c3b
  413d34:	lea    r8,[rip+0x2147a]        # 0x4351b5
  413d3b:	lea    rcx,[rip+0x212be]        # 0x435000
  413d42:	mov    r9,rax
  413d45:	mov    edx,0x1152
  413d4a:	mov    QWORD PTR [rsp+0x50],rax
  413d4f:	call   0x40d350
  413d54:	mov    rax,QWORD PTR [rsp+0x50]
  413d59:	jmp    0x413b43
  413d5e:	lea    r8,[rip+0x2138b]        # 0x4350f0
  413d65:	lea    rcx,[rip+0x21294]        # 0x435000
  413d6c:	mov    r9,rax
  413d6f:	mov    edx,0x1292
  413d74:	mov    QWORD PTR [rsp+0x40],rax
  413d79:	call   0x40d350
  413d7e:	mov    rax,QWORD PTR [rsp+0x40]
  413d83:	jmp    0x413c81
  413d88:	nop    DWORD PTR [rax+rax*1+0x0]
  413d90:	push   r15
  413d92:	push   r14
  413d94:	push   r13
  413d96:	push   r12
  413d98:	push   rbp
  413d99:	push   rdi
  413d9a:	push   rsi
  413d9b:	push   rbx
  413d9c:	sub    rsp,0x48
  413da0:	test   rcx,rcx
  413da3:	mov    rbx,rcx
  413da6:	mov    rbp,rdx
  413da9:	mov    rdi,r8
  413dac:	je     0x413fa0
  413db2:	test   rdx,rdx
  413db5:	je     0x413fa0
  413dbb:	test   rdi,rdi
  413dbe:	je     0x413fd3
  413dc4:	mov    r12,QWORD PTR [rip+0x2ef19]        # 0x442ce4
  413dcb:	xor    esi,esi
  413dcd:	mov    r14,QWORD PTR [rip+0x2805c]        # 0x43be30
  413dd4:	mov    r13,QWORD PTR [rip+0x2efb9]        # 0x442d94
  413ddb:	mov    QWORD PTR [rsp+0x38],r12
  413de0:	mov    QWORD PTR [rsp+0x30],r12
  413de5:	jmp    0x413e1f
  413de7:	nop    WORD PTR [rax+rax*1+0x0]
  413df0:	mov    r8d,edi
  413df3:	xor    r9d,r9d
  413df6:	lea    rdx,[rbp+rsi*1+0x0]
  413dfb:	sub    r8d,esi
  413dfe:	mov    rcx,QWORD PTR [rbx+0x10]
  413e02:	call   r13
  413e05:	test   eax,eax
  413e07:	mov    r15d,eax
  413e0a:	jle    0x413e90
  413e10:	movsxd rdx,eax
  413e13:	add    rsi,rdx
  413e16:	cmp    rsi,rdi
  413e19:	jae    0x413fc0
  413e1f:	mov    r8d,DWORD PTR [rbx+0x158]
  413e26:	mov    edx,0x10
  413e2b:	mov    rcx,rbx
  413e2e:	call   0x413430
  413e33:	cmp    eax,0x0
  413e36:	jg     0x413df0
  413e38:	jne    0x413f20
  413e3e:	mov    eax,DWORD PTR [r14]
  413e41:	test   eax,eax
  413e43:	jne    0x413f80
  413e49:	call   r12
  413e4c:	mov    rcx,QWORD PTR [rbx+0x28]
  413e50:	mov    r9d,eax
  413e53:	mov    r8d,0x4e23
  413e59:	mov    rdx,rbx
  413e5c:	call   0x423700
  413e61:	cmp    eax,0x1
  413e64:	je     0x413e16
  413e66:	cmp    DWORD PTR [rbx+0x148],0x5
  413e6d:	mov    eax,0xffffffff
  413e72:	je     0x413fc2
  413e78:	mov    rcx,rbx
  413e7b:	mov    DWORD PTR [rsp+0x30],eax
  413e7f:	call   0x413120
  413e84:	mov    eax,DWORD PTR [rsp+0x30]
  413e88:	jmp    0x413fc2
  413e8d:	nop    DWORD PTR [rax]
  413e90:	mov    rax,QWORD PTR [rsp+0x30]
  413e95:	call   rax
  413e97:	cmp    eax,0x2733
  413e9c:	je     0x413e16
  413ea2:	test   r15d,r15d
  413ea5:	je     0x413e16
  413eab:	mov    ecx,eax
  413ead:	mov    DWORD PTR [rsp+0x30],eax
  413eb1:	call   0x413380
  413eb6:	mov    rdx,QWORD PTR [rip+0x27f73]        # 0x43be30
  413ebd:	mov    r10d,DWORD PTR [rsp+0x30]
  413ec2:	mov    ecx,DWORD PTR [rdx]
  413ec4:	test   ecx,ecx
  413ec6:	jne    0x413fd7
  413ecc:	lea    rdx,[rip+0x214ed]        # 0x4353c0
  413ed3:	cmp    rax,rdx
  413ed6:	je     0x413eeb
  413ed8:	mov    DWORD PTR [rsp+0x30],r10d
  413edd:	mov    rcx,rax
  413ee0:	call   QWORD PTR [rip+0x2ea8e]        # 0x442974
  413ee6:	mov    r10d,DWORD PTR [rsp+0x30]
  413eeb:	mov    rcx,rbx
  413eee:	mov    DWORD PTR [rsp+0x30],r10d
  413ef3:	call   0x413270
  413ef8:	mov    r10d,DWORD PTR [rsp+0x30]
  413efd:	mov    rcx,QWORD PTR [rbx+0x28]
  413f01:	mov    r8d,0x4e26
  413f07:	mov    rdx,rbx
  413f0a:	mov    r9d,r10d
  413f0d:	call   0x423700
  413f12:	mov    eax,0xffffffff
  413f17:	jmp    0x413fc2
  413f1c:	nop    DWORD PTR [rax+0x0]
  413f20:	mov    rax,QWORD PTR [rsp+0x38]
  413f25:	call   rax
  413f27:	cmp    eax,0x2733
  413f2c:	je     0x413e16
  413f32:	mov    ecx,eax
  413f34:	mov    DWORD PTR [rsp+0x30],eax
  413f38:	call   0x413380
  413f3d:	mov    rsi,rax
  413f40:	mov    rax,QWORD PTR [rip+0x27ee9]        # 0x43be30
  413f47:	mov    r10d,DWORD PTR [rsp+0x30]
  413f4c:	mov    edx,DWORD PTR [rax]
  413f4e:	test   edx,edx
  413f50:	jne    0x41400b
  413f56:	lea    rax,[rip+0x21463]        # 0x4353c0
  413f5d:	cmp    rsi,rax
  413f60:	je     0x413eeb
  413f62:	mov    DWORD PTR [rsp+0x30],r10d
  413f67:	mov    rcx,rsi
  413f6a:	call   QWORD PTR [rip+0x2ea04]        # 0x442974
  413f70:	mov    r10d,DWORD PTR [rsp+0x30]
  413f75:	jmp    0x413eeb
  413f7a:	nop    WORD PTR [rax+rax*1+0x0]
  413f80:	lea    r8,[rip+0x212a9]        # 0x435230
  413f87:	lea    rcx,[rip+0x21072]        # 0x435000
  413f8e:	mov    edx,0x3354
  413f93:	call   0x40d350
  413f98:	jmp    0x413e49
  413f9d:	nop    DWORD PTR [rax]
  413fa0:	lea    rdx,[rip+0x21059]        # 0x435000
  413fa7:	lea    rcx,[rip+0x21240]        # 0x4351ee
  413fae:	mov    r8d,0x314
  413fb4:	call   0x42d350
  413fb9:	jmp    0x413dbb
  413fbe:	xchg   ax,ax
  413fc0:	mov    eax,esi
  413fc2:	add    rsp,0x48
  413fc6:	pop    rbx
  413fc7:	pop    rsi
  413fc8:	pop    rdi
  413fc9:	pop    rbp
  413fca:	pop    r12
  413fcc:	pop    r13
  413fce:	pop    r14
  413fd0:	pop    r15
  413fd2:	ret    
  413fd3:	xor    eax,eax
  413fd5:	jmp    0x413fc2
  413fd7:	lea    r8,[rip+0x2121e]        # 0x4351fc
  413fde:	lea    rcx,[rip+0x2101b]        # 0x435000
  413fe5:	mov    QWORD PTR [rsp+0x20],rax
  413fea:	mov    r9d,r10d
  413fed:	mov    edx,0x2574
  413ff2:	mov    QWORD PTR [rsp+0x38],rax
  413ff7:	call   0x40d350
  413ffc:	mov    rax,QWORD PTR [rsp+0x38]
  414001:	mov    r10d,DWORD PTR [rsp+0x30]
  414006:	jmp    0x413ecc
  41400b:	lea    r8,[rip+0x21203]        # 0x435215
  414012:	lea    rcx,[rip+0x20fe7]        # 0x435000
  414019:	mov    r9d,r10d
  41401c:	mov    QWORD PTR [rsp+0x20],rsi
  414021:	mov    edx,0x32d4
  414026:	call   0x40d350
  41402b:	mov    r10d,DWORD PTR [rsp+0x30]
  414030:	jmp    0x413f56
  414035:	nop
  414036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414040:	sub    rsp,0x28
  414044:	mov    rax,QWORD PTR [rcx+0xb0]
  41404b:	movsxd r8,r8d
  41404e:	test   rax,rax
  414051:	je     0x414060
  414053:	mov    rcx,rax
  414056:	call   0x42ae58
  41405b:	add    rsp,0x28
  41405f:	ret    
  414060:	add    rsp,0x28
  414064:	jmp    0x413d90
  414069:	nop    DWORD PTR [rax+0x0]
  414070:	push   r15
  414072:	push   r14
  414074:	mov    eax,0x40e8
  414079:	push   r13
  41407b:	push   r12
  41407d:	push   rbp
  41407e:	push   rdi
  41407f:	push   rsi
  414080:	push   rbx
  414081:	call   0x42c580
  414086:	sub    rsp,rax
  414089:	mov    rbx,rdx
  41408c:	lea    rsi,[rsp+0x60]
  414091:	mov    edx,0x59a
  414096:	mov    r15,rcx
  414099:	mov    rcx,rbx
  41409c:	call   0x4130d0
  4140a1:	mov    r8d,0x80
  4140a7:	mov    rdx,rsi
  4140aa:	mov    rcx,rbx
  4140ad:	call   0x4131f0
  4140b2:	mov    rax,QWORD PTR [rip+0x27d77]        # 0x43be30
  4140b9:	mov    edi,DWORD PTR [rax]
  4140bb:	test   edi,edi
  4140bd:	jne    0x4143ab
  4140c3:	xor    r8d,r8d
  4140c6:	mov    ecx,DWORD PTR [rbx+0x4]
  4140c9:	mov    edx,0x2
  4140ce:	call   QWORD PTR [rip+0x2ecd8]        # 0x442dac
  4140d4:	cmp    rax,0xffffffffffffffff
  4140d8:	mov    QWORD PTR [rsp+0x30],rax
  4140dd:	je     0x41435f
  4140e3:	mov    rcx,QWORD PTR [rsp+0x30]
  4140e8:	call   0x4131b0
  4140ed:	test   eax,eax
  4140ef:	jne    0x41439b
  4140f5:	mov    r13,QWORD PTR [rip+0x2eca0]        # 0x442d9c
  4140fc:	mov    rsi,QWORD PTR [rip+0x2ec81]        # 0x442d84
  414103:	lea    r12,[rsp+0xe0]
  41410b:	mov    rdi,QWORD PTR [rip+0x2ebd2]        # 0x442ce4
  414112:	lea    r14,[rsp+0x50]
  414117:	xor    ebp,ebp
  414119:	nop    DWORD PTR [rax+0x0]
  414120:	mov    rax,QWORD PTR [rbx+0x10]
  414124:	xor    r9d,r9d
  414127:	mov    BYTE PTR [rsp+0xe0],0x3
  41412f:	mov    r8d,0x1
  414135:	mov    rdx,r12
  414138:	mov    rcx,QWORD PTR [rsp+0x30]
  41413d:	mov    DWORD PTR [rsp+0x28],eax
  414141:	mov    rax,QWORD PTR [rbx+0x20]
  414145:	mov    QWORD PTR [rsp+0x20],rax
  41414a:	call   r13
  41414d:	test   eax,eax
  41414f:	js     0x4141ea
  414155:	mov    rax,QWORD PTR [rsp+0x30]
  41415a:	xor    r10d,r10d
  41415d:	mov    r9d,0x300
  414163:	mov    r8d,0x3e8
  414169:	mov    edx,0x1
  41416e:	mov    rcx,r14
  414171:	mov    WORD PTR [rsp+0x58],r9w
  414177:	mov    WORD PTR [rsp+0x5a],r10w
  41417d:	mov    QWORD PTR [rsp+0x50],rax
  414182:	call   0x4242c0
  414187:	test   eax,eax
  414189:	js     0x414220
  41418f:	jne    0x4141c0
  414191:	mov    rax,QWORD PTR [rip+0x27c98]        # 0x43be30
  414198:	mov    r8d,DWORD PTR [rax]
  41419b:	test   r8d,r8d
  41419e:	jne    0x41433f
  4141a4:	mov    eax,0x1
  4141a9:	add    ebp,0x1
  4141ac:	test   al,al
  4141ae:	je     0x4141ea
  4141b0:	cmp    ebp,0xf
  4141b3:	jle    0x414120
  4141b9:	jmp    0x4141ea
  4141bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4141c0:	xor    r9d,r9d
  4141c3:	mov    r8d,0x3fff
  4141c9:	mov    rdx,r12
  4141cc:	mov    rcx,QWORD PTR [rsp+0x30]
  4141d1:	call   rsi
  4141d3:	cmp    eax,0x3
  4141d6:	jg     0x4141e0
  4141d8:	test   eax,eax
  4141da:	sete   al
  4141dd:	jmp    0x4141a9
  4141df:	nop
  4141e0:	cmp    BYTE PTR [rsp+0xe0],0x5
  4141e8:	je     0x41422e
  4141ea:	mov    rcx,QWORD PTR [rsp+0x30]
  4141ef:	call   QWORD PTR [rip+0x2eb1f]        # 0x442d14
  4141f5:	mov    rax,QWORD PTR [rip+0x27c34]        # 0x43be30
  4141fc:	mov    r11d,DWORD PTR [rax]
  4141ff:	test   r11d,r11d
  414202:	jne    0x4143cb
  414208:	xor    eax,eax
  41420a:	add    rsp,0x40e8
  414211:	pop    rbx
  414212:	pop    rsi
  414213:	pop    rdi
  414214:	pop    rbp
  414215:	pop    r12
  414217:	pop    r13
  414219:	pop    r14
  41421b:	pop    r15
  41421d:	ret    
  41421e:	xchg   ax,ax
  414220:	call   rdi
  414222:	cmp    eax,0x2714
  414227:	jne    0x4141ea
  414229:	jmp    0x4141a4
  41422e:	mov    rsi,QWORD PTR [rip+0x27bfb]        # 0x43be30
  414235:	mov    edx,0x3b
  41423a:	cdqe   
  41423c:	mov    WORD PTR [rsp+0x40],dx
  414241:	mov    BYTE PTR [rsp+rax*1+0xe0],0x0
  414249:	mov    ecx,DWORD PTR [rsi]
  41424b:	test   ecx,ecx
  41424d:	jne    0x4143eb
  414253:	lea    r14,[rsp+0x48]
  414258:	lea    r13,[rsp+0x40]
  41425d:	lea    rcx,[r12+0x3]
  414262:	mov    r8,r14
  414265:	mov    rdx,r13
  414268:	call   0x42d410
  41426d:	test   r15,r15
  414270:	mov    rbx,rax
  414273:	setne  BYTE PTR [rsp+0x3f]
  414278:	nop    DWORD PTR [rax+rax*1+0x0]
  414280:	test   rbx,rbx
  414283:	je     0x4141ea
  414289:	cmp    BYTE PTR [rsp+0x3f],0x0
  41428e:	je     0x4141ea
  414294:	lea    rbp,[rip+0x210e5]        # 0x435380
  41429b:	xor    r12d,r12d
  41429e:	xchg   ax,ax
  4142a0:	xor    ecx,ecx
  4142a2:	mov    r8,r14
  4142a5:	mov    rdx,r13
  4142a8:	call   0x42d410
  4142ad:	mov    rdi,QWORD PTR [rbp+0x0]
  4142b1:	mov    rcx,rbx
  4142b4:	mov    rsi,rax
  4142b7:	mov    rdx,rdi
  4142ba:	call   0x42d630
  4142bf:	test   eax,eax
  4142c1:	jne    0x414325
  4142c3:	test   rsi,rsi
  4142c6:	je     0x414313
  4142c8:	lea    rdx,[rip+0x21014]        # 0x4352e3
  4142cf:	mov    r8,rbx
  4142d2:	mov    r9,rsi
  4142d5:	mov    rcx,r15
  4142d8:	call   0x42d710
  4142dd:	xor    ecx,ecx
  4142df:	mov    r8,r14
  4142e2:	mov    rdx,r13
  4142e5:	call   0x42d410
  4142ea:	test   rax,rax
  4142ed:	mov    rbx,rax
  4142f0:	je     0x414280
  4142f2:	lea    rdi,[rip+0x20ff3]        # 0x4352ec
  4142f9:	mov    rsi,rax
  4142fc:	mov    ecx,0xb
  414301:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  414303:	je     0x414313
  414305:	add    r12d,0x1
  414309:	add    rbp,0x8
  41430d:	cmp    r12d,0x6
  414311:	jbe    0x4142a0
  414313:	mov    rdx,r15
  414316:	mov    ecx,0xa
  41431b:	call   0x42d708
  414320:	jmp    0x414280
  414325:	lea    rdx,[rip+0x20f94]        # 0x4352c0
  41432c:	mov    r9,rbx
  41432f:	mov    r8,rdi
  414332:	mov    rcx,r15
  414335:	call   0x42d710
  41433a:	jmp    0x4142c3
  41433f:	lea    r8,[rip+0x20f32]        # 0x435278
  414346:	lea    rcx,[rip+0x20cb3]        # 0x435000
  41434d:	mov    r9d,ebp
  414350:	mov    edx,0x3b32
  414355:	call   0x40d350
  41435a:	jmp    0x4141a4
  41435f:	call   QWORD PTR [rip+0x2e97f]        # 0x442ce4
  414365:	mov    ecx,eax
  414367:	call   0x413380
  41436c:	mov    rsi,QWORD PTR [rip+0x27abd]        # 0x43be30
  414373:	mov    ebx,DWORD PTR [rsi]
  414375:	test   ebx,ebx
  414377:	jne    0x414410
  41437d:	lea    rdx,[rip+0x2103c]        # 0x4353c0
  414384:	cmp    rax,rdx
  414387:	je     0x414208
  41438d:	mov    rcx,rax
  414390:	call   QWORD PTR [rip+0x2e5de]        # 0x442974
  414396:	jmp    0x414208
  41439b:	mov    rcx,QWORD PTR [rsp+0x30]
  4143a0:	call   QWORD PTR [rip+0x2e96e]        # 0x442d14
  4143a6:	jmp    0x414208
  4143ab:	lea    r8,[rip+0x20ea9]        # 0x43525b
  4143b2:	lea    rcx,[rip+0x20c47]        # 0x435000
  4143b9:	mov    r9,rsi
  4143bc:	mov    edx,0x3882
  4143c1:	call   0x40d350
  4143c6:	jmp    0x4140c3
  4143cb:	lea    r8,[rip+0x20f25]        # 0x4352f7
  4143d2:	lea    rcx,[rip+0x20c27]        # 0x435000
  4143d9:	xor    r9d,r9d
  4143dc:	mov    edx,0x3f82
  4143e1:	call   0x40d350
  4143e6:	jmp    0x414208
  4143eb:	lea    r8,[rip+0x20eb9]        # 0x4352ab
  4143f2:	lea    rcx,[rip+0x20c07]        # 0x435000
  4143f9:	mov    QWORD PTR [rsp+0x20],rax
  4143fe:	mov    r9,r12
  414401:	mov    edx,0x3ce5
  414406:	call   0x40d0b0
  41440b:	jmp    0x414253
  414410:	lea    r8,[rip+0x20cd9]        # 0x4350f0
  414417:	lea    rcx,[rip+0x20be2]        # 0x435000
  41441e:	mov    r9,rax
  414421:	mov    edx,0x38d2
  414426:	mov    QWORD PTR [rsp+0x30],rax
  41442b:	call   0x40d350
  414430:	mov    rax,QWORD PTR [rsp+0x30]
  414435:	jmp    0x41437d
  41443a:	nop    WORD PTR [rax+rax*1+0x0]
  414440:	push   r15
  414442:	push   r14
  414444:	push   r13
  414446:	push   r12
  414448:	push   rbp
  414449:	push   rdi
  41444a:	push   rsi
  41444b:	push   rbx
  41444c:	sub    rsp,0x508
  414453:	lea    rbx,[rsp+0x80]
  41445b:	mov    r12,rcx
  41445e:	mov    r15,rdx
  414461:	mov    edx,0x59a
  414466:	call   0x4130d0
  41446b:	mov    r8d,0x80
  414471:	mov    rdx,rbx
  414474:	mov    rcx,r12
  414477:	call   0x4131f0
  41447c:	mov    rax,QWORD PTR [rip+0x279ad]        # 0x43be30
  414483:	mov    esi,DWORD PTR [rax]
  414485:	test   esi,esi
  414487:	jne    0x414810
  41448d:	xor    r8d,r8d
  414490:	mov    ecx,DWORD PTR [r12+0x4]
  414495:	mov    edx,0x2
  41449a:	call   QWORD PTR [rip+0x2e90c]        # 0x442dac
  4144a0:	cmp    rax,0xffffffffffffffff
  4144a4:	mov    rdi,rax
  4144a7:	je     0x4147a0
  4144ad:	mov    rcx,rax
  4144b0:	call   0x4131b0
  4144b5:	test   eax,eax
  4144b7:	jne    0x414800
  4144bd:	lea    r14,[rsp+0x100]
  4144c5:	xor    esi,esi
  4144c7:	mov    r13,QWORD PTR [rip+0x2e5e6]        # 0x442ab4
  4144ce:	lea    rax,[r14+0x1]
  4144d2:	mov    QWORD PTR [rsp+0x38],rax
  4144d7:	lea    rax,[rsp+0x70]
  4144dc:	mov    QWORD PTR [rsp+0x40],rax
  4144e1:	lea    rax,[rsp+0x68]
  4144e6:	mov    QWORD PTR [rsp+0x48],rax
  4144eb:	jmp    0x41450f
  4144ed:	nop    DWORD PTR [rax]
  4144f0:	mov    rax,QWORD PTR [rip+0x27939]        # 0x43be30
  4144f7:	mov    r8d,DWORD PTR [rax]
  4144fa:	test   r8d,r8d
  4144fd:	jne    0x4147e0
  414503:	add    esi,0x1
  414506:	cmp    esi,0x10
  414509:	je     0x4146d1
  41450f:	mov    rcx,QWORD PTR [rsp+0x38]
  414514:	mov    rdx,r15
  414517:	mov    r8d,0x3ff
  41451d:	mov    BYTE PTR [rsp+0x100],0x4
  414525:	call   0x4248b0
  41452a:	mov    rdx,r14
  41452d:	mov    ecx,DWORD PTR [rdx]
  41452f:	add    rdx,0x4
  414533:	lea    eax,[rcx-0x1010101]
  414539:	not    ecx
  41453b:	and    eax,ecx
  41453d:	and    eax,0x80808080
  414542:	je     0x41452d
  414544:	mov    ecx,eax
  414546:	shr    ecx,0x10
  414549:	test   eax,0x8080
  41454e:	cmove  eax,ecx
  414551:	lea    rcx,[rdx+0x2]
  414555:	cmove  rdx,rcx
  414559:	add    al,al
  41455b:	mov    rax,QWORD PTR [r12+0x10]
  414560:	sbb    rdx,0x3
  414564:	mov    rcx,rdi
  414567:	xor    r9d,r9d
  41456a:	sub    rdx,r14
  41456d:	mov    DWORD PTR [rsp+0x28],eax
  414571:	mov    rax,QWORD PTR [r12+0x20]
  414576:	lea    r8d,[rdx+0x1]
  41457a:	mov    rdx,r14
  41457d:	mov    QWORD PTR [rsp+0x20],rax
  414582:	call   QWORD PTR [rip+0x2e814]        # 0x442d9c
  414588:	test   eax,eax
  41458a:	js     0x4146d1
  414590:	mov    rcx,QWORD PTR [rsp+0x40]
  414595:	xor    r10d,r10d
  414598:	mov    r9d,0x300
  41459e:	mov    r8d,0x3e8
  4145a4:	mov    edx,0x1
  4145a9:	mov    QWORD PTR [rsp+0x70],rdi
  4145ae:	mov    WORD PTR [rsp+0x78],r9w
  4145b4:	mov    WORD PTR [rsp+0x7a],r10w
  4145ba:	call   0x4242c0
  4145bf:	test   eax,eax
  4145c1:	js     0x4146c0
  4145c7:	je     0x4144f0
  4145cd:	xor    r9d,r9d
  4145d0:	mov    r8d,0x3ff
  4145d6:	mov    rdx,r14
  4145d9:	mov    rcx,rdi
  4145dc:	call   QWORD PTR [rip+0x2e7a2]        # 0x442d84
  4145e2:	cmp    eax,0x3
  4145e5:	jle    0x414503
  4145eb:	cmp    BYTE PTR [rsp+0x100],0x5
  4145f3:	jne    0x414503
  4145f9:	mov    rbx,QWORD PTR [rip+0x27830]        # 0x43be30
  414600:	cdqe   
  414602:	mov    BYTE PTR [rsp+rax*1+0x100],0x0
  41460a:	mov    ecx,DWORD PTR [rbx]
  41460c:	test   ecx,ecx
  41460e:	jne    0x414867
  414614:	lea    rbx,[r14+0x3]
  414618:	xor    ecx,ecx
  41461a:	xor    eax,eax
  41461c:	mov    QWORD PTR [rsp+0x50],rdi
  414621:	mov    DWORD PTR [rsp+0x5c],esi
  414625:	mov    edi,ecx
  414627:	mov    QWORD PTR [rsp+0x68],rbx
  41462c:	mov    DWORD PTR [rsp+0x58],0x0
  414634:	mov    esi,eax
  414636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414640:	mov    edx,0x3b
  414645:	mov    rcx,rbx
  414648:	call   0x42d638
  41464d:	test   rax,rax
  414650:	je     0x414770
  414656:	lea    rdx,[rax+0x1]
  41465a:	mov    QWORD PTR [rsp+0x68],rdx
  41465f:	mov    BYTE PTR [rax],0x0
  414662:	cmp    BYTE PTR [rbx],0x0
  414665:	je     0x414720
  41466b:	mov    rbp,QWORD PTR [rsp+0x68]
  414670:	mov    edx,0x3b
  414675:	mov    rcx,rbp
  414678:	call   0x42d638
  41467d:	test   rax,rax
  414680:	je     0x414770
  414686:	lea    rdx,[rax+0x1]
  41468a:	mov    QWORD PTR [rsp+0x68],rdx
  41468f:	mov    BYTE PTR [rax],0x0
  414692:	lea    rdx,[rip+0x20c9f]        # 0x435338
  414699:	mov    rcx,rbx
  41469c:	call   r13
  41469f:	test   eax,eax
  4146a1:	jne    0x414703
  4146a3:	mov    rdx,r15
  4146a6:	mov    rcx,rbp
  4146a9:	call   r13
  4146ac:	test   eax,eax
  4146ae:	jne    0x414835
  4146b4:	mov    rbx,QWORD PTR [rsp+0x68]
  4146b9:	mov    edi,0x1
  4146be:	jmp    0x414640
  4146c0:	call   QWORD PTR [rip+0x2e61e]        # 0x442ce4
  4146c6:	cmp    eax,0x2714
  4146cb:	je     0x414503
  4146d1:	xor    ebx,ebx
  4146d3:	mov    rcx,rdi
  4146d6:	call   QWORD PTR [rip+0x2e638]        # 0x442d14
  4146dc:	mov    rax,QWORD PTR [rip+0x2774d]        # 0x43be30
  4146e3:	mov    eax,DWORD PTR [rax]
  4146e5:	test   eax,eax
  4146e7:	jne    0x414847
  4146ed:	mov    eax,ebx
  4146ef:	add    rsp,0x508
  4146f6:	pop    rbx
  4146f7:	pop    rsi
  4146f8:	pop    rdi
  4146f9:	pop    rbp
  4146fa:	pop    r12
  4146fc:	pop    r13
  4146fe:	pop    r14
  414700:	pop    r15
  414702:	ret    
  414703:	lea    rdx,[rip+0x20c3b]        # 0x435345
  41470a:	mov    rcx,rbx
  41470d:	call   r13
  414710:	test   eax,eax
  414712:	je     0x414730
  414714:	mov    rbx,QWORD PTR [rsp+0x68]
  414719:	jmp    0x414640
  41471e:	xchg   ax,ax
  414720:	mov    rbp,rbx
  414723:	jmp    0x414692
  414728:	nop    DWORD PTR [rax+rax*1+0x0]
  414730:	mov    rdx,QWORD PTR [rsp+0x48]
  414735:	mov    r8d,0xa
  41473b:	mov    rcx,rbp
  41473e:	call   0x42d5f0
  414743:	mov    esi,eax
  414745:	lea    eax,[rax-0x1]
  414748:	cmp    eax,0xfffe
  41474d:	ja     0x414714
  41474f:	mov    rbx,QWORD PTR [rsp+0x68]
  414754:	mov    eax,0x1
  414759:	cmp    BYTE PTR [rbx],0x0
  41475c:	cmovne eax,DWORD PTR [rsp+0x58]
  414761:	mov    DWORD PTR [rsp+0x58],eax
  414765:	jmp    0x414640
  41476a:	nop    WORD PTR [rax+rax*1+0x0]
  414770:	mov    ebx,esi
  414772:	mov    eax,edi
  414774:	mov    esi,DWORD PTR [rsp+0x5c]
  414778:	mov    rdi,QWORD PTR [rsp+0x50]
  41477d:	mov    QWORD PTR [rsp+0x68],0x0
  414786:	test   eax,eax
  414788:	je     0x414503
  41478e:	mov    edx,DWORD PTR [rsp+0x58]
  414792:	test   edx,edx
  414794:	je     0x414503
  41479a:	jmp    0x4146d3
  41479f:	nop
  4147a0:	call   QWORD PTR [rip+0x2e53e]        # 0x442ce4
  4147a6:	mov    ecx,eax
  4147a8:	call   0x413380
  4147ad:	mov    rsi,QWORD PTR [rip+0x2767c]        # 0x43be30
  4147b4:	mov    r11d,DWORD PTR [rsi]
  4147b7:	test   r11d,r11d
  4147ba:	jne    0x41488c
  4147c0:	lea    rdx,[rip+0x20bf9]        # 0x4353c0
  4147c7:	xor    ebx,ebx
  4147c9:	cmp    rax,rdx
  4147cc:	je     0x4146ed
  4147d2:	mov    rcx,rax
  4147d5:	call   QWORD PTR [rip+0x2e199]        # 0x442974
  4147db:	jmp    0x4146ed
  4147e0:	lea    r8,[rip+0x20a91]        # 0x435278
  4147e7:	lea    rcx,[rip+0x20812]        # 0x435000
  4147ee:	mov    r9d,esi
  4147f1:	mov    edx,0x43b2
  4147f6:	call   0x40d350
  4147fb:	jmp    0x414503
  414800:	mov    rcx,rdi
  414803:	xor    ebx,ebx
  414805:	call   QWORD PTR [rip+0x2e509]        # 0x442d14
  41480b:	jmp    0x4146ed
  414810:	lea    r8,[rip+0x20b01]        # 0x435318
  414817:	lea    rcx,[rip+0x207e2]        # 0x435000
  41481e:	mov    QWORD PTR [rsp+0x20],r15
  414823:	mov    r9,rbx
  414826:	mov    edx,0x40f2
  41482b:	call   0x40d350
  414830:	jmp    0x41448d
  414835:	mov    ebx,esi
  414837:	mov    eax,edi
  414839:	mov    esi,DWORD PTR [rsp+0x5c]
  41483d:	mov    rdi,QWORD PTR [rsp+0x50]
  414842:	jmp    0x414786
  414847:	lea    r8,[rip+0x20afb]        # 0x435349
  41484e:	lea    rcx,[rip+0x207ab]        # 0x435000
  414855:	mov    r9d,ebx
  414858:	mov    edx,0x4832
  41485d:	call   0x40d350
  414862:	jmp    0x4146ed
  414867:	lea    r8,[rip+0x20a3d]        # 0x4352ab
  41486e:	lea    rcx,[rip+0x2078b]        # 0x435000
  414875:	mov    QWORD PTR [rsp+0x20],rax
  41487a:	mov    r9,r14
  41487d:	mov    edx,0x45a5
  414882:	call   0x40d0b0
  414887:	jmp    0x414614
  41488c:	lea    r8,[rip+0x2085d]        # 0x4350f0
  414893:	lea    rcx,[rip+0x20766]        # 0x435000
  41489a:	mov    r9,rax
  41489d:	mov    edx,0x4142
  4148a2:	mov    QWORD PTR [rsp+0x38],rax
  4148a7:	call   0x40d350
  4148ac:	mov    rax,QWORD PTR [rsp+0x38]
  4148b1:	jmp    0x4147c0
  4148b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4148c0:	lea    rax,[rip+0x20af9]        # 0x4353c0
  4148c7:	cmp    rcx,rax
  4148ca:	je     0x4148e0
  4148cc:	mov    rax,QWORD PTR [rip+0x2e0a1]        # 0x442974
  4148d3:	rex.W jmp rax
  4148d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4148e0:	repz ret 
  4148e2:	nop
  4148e3:	nop
  4148e4:	nop
  4148e5:	nop
  4148e6:	nop
  4148e7:	nop
  4148e8:	nop
  4148e9:	nop
  4148ea:	nop
  4148eb:	nop
  4148ec:	nop
  4148ed:	nop
  4148ee:	nop
  4148ef:	nop
  4148f0:	lea    r9,[rip+0x21049]        # 0x435940
  4148f7:	lea    eax,[r8+0x1]
  4148fb:	mov    r11d,r8d
  4148fe:	mov    r10d,r8d
  414901:	movsx  r11d,BYTE PTR [r9+r11*1]
  414906:	shr    r10d,0x5
  41490a:	movsx  eax,BYTE PTR [r9+rax*1]
  41490f:	sub    eax,r11d
  414912:	lea    r9d,[r10+rax*1+0x4]
  414917:	cmp    r9d,edx
  41491a:	jbe    0x414929
  41491c:	xor    eax,eax
  41491e:	ret    
  41491f:	nop
  414920:	mov    eax,edx
  414922:	mov    eax,DWORD PTR [rcx+rax*4]
  414925:	test   eax,eax
  414927:	jne    0x414990
  414929:	sub    edx,0x1
  41492c:	cmp    r9d,edx
  41492f:	jbe    0x414920
  414931:	lea    r9d,[r11+r8*4]
  414935:	lea    r8,[rip+0x20b44]        # 0x435480
  41493c:	cmp    r10d,edx
  41493f:	lea    rax,[r8+r9*4]
  414943:	jae    0x41497a
  414945:	mov    r11d,edx
  414948:	mov    r11d,DWORD PTR [rcx+r11*4]
  41494c:	cmp    DWORD PTR [r8+r9*4],r11d
  414950:	jb     0x414990
  414952:	jbe    0x41496e
  414954:	jmp    0x41491c
  414956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414960:	mov    r8d,edx
  414963:	mov    r11d,DWORD PTR [rax]
  414966:	cmp    DWORD PTR [rcx+r8*4],r11d
  41496a:	ja     0x414990
  41496c:	jb     0x41491c
  41496e:	sub    edx,0x1
  414971:	add    rax,0x4
  414975:	cmp    r10d,edx
  414978:	jb     0x414960
  41497a:	mov    eax,DWORD PTR [rax]
  41497c:	cmp    DWORD PTR [rcx+rdx*4],eax
  41497f:	sbb    eax,eax
  414981:	not    eax
  414983:	and    eax,0xfffffffb
  414986:	ret    
  414987:	nop    WORD PTR [rax+rax*1+0x0]
  414990:	mov    eax,0xfffffffb
  414995:	ret    
  414996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4149a0:	push   rbx
  4149a1:	sub    rsp,0x20
  4149a5:	movsxd r8,DWORD PTR [rcx]
  4149a8:	mov    rbx,rdx
  4149ab:	mov    rdx,r8
  4149ae:	mov    r8d,DWORD PTR [rcx+0x4]
  4149b2:	mov    rcx,rbx
  4149b5:	shl    rdx,0x20
  4149b9:	or     r8,rdx
  4149bc:	js     0x414a12
  4149be:	add    r8,0x32
  4149c2:	movabs r10,0x28f5c28f5c28f5c3
  4149cc:	shr    r8,0x2
  4149d0:	mov    rax,r8
  4149d3:	mul    r10
  4149d6:	mov    r9,rdx
  4149d9:	shr    rdx,0x4
  4149dd:	mov    rax,rdx
  4149e0:	shr    r9,0x2
  4149e4:	mul    r10
  4149e7:	shr    rdx,0x2
  4149eb:	lea    rax,[rdx+rdx*4]
  4149ef:	mov    r8,rdx
  4149f2:	lea    rdx,[rip+0x20a07]        # 0x435400
  4149f9:	lea    rax,[rax+rax*4]
  4149fd:	shl    rax,0x2
  414a01:	sub    r9d,eax
  414a04:	call   0x42d648
  414a09:	mov    rax,rbx
  414a0c:	add    rsp,0x20
  414a10:	pop    rbx
  414a11:	ret    
  414a12:	lea    rcx,[rbx+0x1]
  414a16:	mov    BYTE PTR [rbx],0x2d
  414a19:	neg    r8
  414a1c:	jmp    0x4149be
  414a1e:	xchg   ax,ax
  414a20:	push   r13
  414a22:	push   r12
  414a24:	push   rbp
  414a25:	push   rdi
  414a26:	push   rsi
  414a27:	push   rbx
  414a28:	sub    rsp,0x98
  414a2f:	movzx  eax,BYTE PTR [rcx]
  414a32:	mov    rsi,rdx
  414a35:	lea    edx,[rax-0x1]
  414a38:	cmp    dl,0x4c
  414a3b:	ja     0x414d1a
  414a41:	cmp    al,BYTE PTR [rcx+0x1]
  414a44:	jb     0x414d1a
  414a4a:	cmp    BYTE PTR [rcx+0x2],0x1
  414a4e:	je     0x414cf5
  414a54:	lea    rdx,[rip+0x20f65]        # 0x4359c0
  414a5b:	lea    r10,[rcx+0x2]
  414a5f:	mov    eax,DWORD PTR [rdx+rax*4]
  414a62:	lea    edi,[rax-0x1]
  414a65:	cmp    edi,0x1
  414a68:	jbe    0x414d0d
  414a6e:	lea    r12d,[rax-0x3]
  414a72:	lea    r8d,[rax-0x2]
  414a76:	lea    rdx,[rsp+0x40]
  414a7b:	mov    rbp,rsp
  414a7e:	shr    r12d,1
  414a81:	mov    r13d,r12d
  414a84:	mov    rax,r13
  414a87:	neg    rax
  414a8a:	lea    rbx,[rsp+rax*4+0x3c]
  414a8f:	nop
  414a90:	mov    r9d,r8d
  414a93:	sub    rdx,0x4
  414a97:	sub    r8d,0x2
  414a9b:	movzx  eax,BYTE PTR [r10+r9*1]
  414aa0:	movzx  r11d,BYTE PTR [r10+r9*1+0x1]
  414aa6:	shl    eax,0x8
  414aa9:	add    eax,r11d
  414aac:	cmp    rdx,rbx
  414aaf:	mov    DWORD PTR [rdx],eax
  414ab1:	jne    0x414a90
  414ab3:	not    r13
  414ab6:	neg    r12d
  414ab9:	lea    r10,[rbp+r13*4+0x40]
  414abe:	lea    edi,[rdi+r12*2-0x2]
  414ac3:	cmp    edi,0x1
  414ac6:	je     0x414ce4
  414acc:	mov    r9d,DWORD PTR [r10]
  414acf:	lea    rax,[rbp+0x40]
  414ad3:	jmp    0x414ae5
  414ad5:	add    r10,0x4
  414ad9:	cmp    r10,rax
  414adc:	je     0x414b9c
  414ae2:	mov    r9d,DWORD PTR [r10]
  414ae5:	test   r9d,r9d
  414ae8:	je     0x414ad5
  414aea:	add    rbp,0x40
  414aee:	cmp    r10,rbp
  414af1:	je     0x414d24
  414af7:	lea    rdi,[rsp+0x90]
  414aff:	mov    r11d,0xd1b71759
  414b05:	mov    eax,r9d
  414b08:	mul    r11d
  414b0b:	mov    r8d,edx
  414b0e:	shr    edx,0xd
  414b11:	shr    r8d,0xd
  414b15:	mov    DWORD PTR [r10],edx
  414b18:	imul   r8d,r8d,0x2710
  414b1f:	sub    r9d,r8d
  414b22:	test   edx,edx
  414b24:	mov    r8d,r9d
  414b27:	lea    r9,[r10+0x4]
  414b2b:	mov    r12,r9
  414b2e:	cmovne r12,r10
  414b32:	cmp    r9,rbp
  414b35:	je     0x414b84
  414b37:	lea    rax,[r10+0x8]
  414b3b:	mov    rbx,rbp
  414b3e:	sub    rbx,rax
  414b41:	mov    rax,rbx
  414b44:	shr    rax,0x2
  414b48:	lea    rbx,[r10+rax*4+0x8]
  414b4d:	nop    DWORD PTR [rax]
  414b50:	mov    r10d,DWORD PTR [r9]
  414b53:	shl    r8d,0x10
  414b57:	add    r9,0x4
  414b5b:	add    r10d,r8d
  414b5e:	mov    eax,r10d
  414b61:	mul    r11d
  414b64:	mov    r8d,edx
  414b67:	shr    edx,0xd
  414b6a:	shr    r8d,0xd
  414b6e:	mov    DWORD PTR [r9-0x4],edx
  414b72:	imul   r8d,r8d,0x2710
  414b79:	sub    r10d,r8d
  414b7c:	cmp    r9,rbx
  414b7f:	mov    r8d,r10d
  414b82:	jne    0x414b50
  414b84:	sub    rdi,0x4
  414b88:	cmp    r12,rbp
  414b8b:	mov    DWORD PTR [rdi],r8d
  414b8e:	je     0x414be5
  414b90:	mov    r9d,DWORD PTR [r12]
  414b94:	mov    r10,r12
  414b97:	jmp    0x414b05
  414b9c:	mov    BYTE PTR [rsi],0x30
  414b9f:	cmp    BYTE PTR [rcx+0x1],0x0
  414ba3:	je     0x414d04
  414ba9:	mov    BYTE PTR [rsi+0x1],0x2e
  414bad:	movzx  edx,BYTE PTR [rcx+0x1]
  414bb1:	lea    rax,[rsi+0x2]
  414bb5:	sub    edx,0x1
  414bb8:	lea    rsi,[rax+rdx*1+0x1]
  414bbd:	nop    DWORD PTR [rax]
  414bc0:	add    rax,0x1
  414bc4:	mov    BYTE PTR [rax-0x1],0x30
  414bc8:	cmp    rax,rsi
  414bcb:	jne    0x414bc0
  414bcd:	mov    BYTE PTR [rsi],0x0
  414bd0:	mov    eax,0x1
  414bd5:	add    rsp,0x98
  414bdc:	pop    rbx
  414bdd:	pop    rsi
  414bde:	pop    rdi
  414bdf:	pop    rbp
  414be0:	pop    r12
  414be2:	pop    r13
  414be4:	ret    
  414be5:	lea    r10,[rsp+0x90]
  414bed:	sub    r10,rdi
  414bf0:	sar    r10,0x2
  414bf4:	shl    r10d,0x2
  414bf8:	cmp    r8d,0x3e7
  414bff:	ja     0x414d4f
  414c05:	mov    r9d,0x3e8
  414c0b:	mov    r11d,0xcccccccd
  414c11:	mov    eax,r9d
  414c14:	sub    r10d,0x1
  414c18:	mul    r11d
  414c1b:	shr    edx,0x3
  414c1e:	cmp    edx,r8d
  414c21:	mov    r9d,edx
  414c24:	ja     0x414c11
  414c26:	movzx  edx,BYTE PTR [rcx+0x1]
  414c2a:	mov    eax,r8d
  414c2d:	cmp    edx,r10d
  414c30:	jb     0x414c66
  414c32:	mov    BYTE PTR [rsi],0x30
  414c35:	mov    BYTE PTR [rsi+0x1],0x2e
  414c39:	lea    rdx,[rsi+0x2]
  414c3d:	movzx  eax,BYTE PTR [rcx+0x1]
  414c41:	cmp    r10d,eax
  414c44:	jae    0x414d5a
  414c4a:	mov    eax,r10d
  414c4d:	mov    rsi,rdx
  414c50:	add    rsi,0x1
  414c54:	mov    BYTE PTR [rsi-0x1],0x30
  414c58:	movzx  edx,BYTE PTR [rcx+0x1]
  414c5c:	add    eax,0x1
  414c5f:	cmp    edx,eax
  414c61:	ja     0x414c50
  414c63:	mov    eax,r8d
  414c66:	mov    ebx,0xcccccccd
  414c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  414c70:	xor    edx,edx
  414c72:	sub    r10d,0x1
  414c76:	div    r9d
  414c79:	lea    r8d,[rax+0x30]
  414c7d:	mov    eax,r9d
  414c80:	mov    r11d,edx
  414c83:	mul    ebx
  414c85:	mov    eax,r11d
  414c88:	mov    BYTE PTR [rsi],r8b
  414c8b:	shr    edx,0x3
  414c8e:	test   edx,edx
  414c90:	mov    r9d,edx
  414c93:	jne    0x414cb2
  414c95:	lea    rdx,[rdi+0x4]
  414c99:	lea    rax,[rsp+0x90]
  414ca1:	cmp    rdx,rax
  414ca4:	je     0x414ccb
  414ca6:	mov    eax,DWORD PTR [rdi+0x4]
  414ca9:	mov    r9d,0x3e8
  414caf:	mov    rdi,rdx
  414cb2:	movzx  edx,BYTE PTR [rcx+0x1]
  414cb6:	cmp    edx,r10d
  414cb9:	je     0x414cc1
  414cbb:	add    rsi,0x1
  414cbf:	jmp    0x414c70
  414cc1:	mov    BYTE PTR [rsi+0x1],0x2e
  414cc5:	add    rsi,0x2
  414cc9:	jmp    0x414c70
  414ccb:	mov    eax,0x1
  414cd0:	mov    BYTE PTR [rsi+0x1],0x0
  414cd4:	add    rsp,0x98
  414cdb:	pop    rbx
  414cdc:	pop    rsi
  414cdd:	pop    rdi
  414cde:	pop    rbp
  414cdf:	pop    r12
  414ce1:	pop    r13
  414ce3:	ret    
  414ce4:	movzx  r9d,BYTE PTR [rcx+0x3]
  414ce9:	sub    r10,0x4
  414ced:	mov    DWORD PTR [r10],r9d
  414cf0:	jmp    0x414acf
  414cf5:	mov    BYTE PTR [rsi],0x2d
  414cf8:	add    rsi,0x1
  414cfc:	movzx  eax,BYTE PTR [rcx]
  414cff:	jmp    0x414a54
  414d04:	add    rsi,0x1
  414d08:	jmp    0x414bcd
  414d0d:	mov    rbp,rsp
  414d10:	lea    r10,[rsp+0x40]
  414d15:	jmp    0x414ac3
  414d1a:	mov    eax,0xffffffff
  414d1f:	jmp    0x414bd5
  414d24:	mov    r8d,DWORD PTR [rsp+0x90]
  414d2c:	xor    r10d,r10d
  414d2f:	lea    rdi,[rsp+0x90]
  414d37:	mov    r9d,0x3e8
  414d3d:	cmp    r8d,0x3e7
  414d44:	jbe    0x414c05
  414d4a:	jmp    0x414c32
  414d4f:	mov    r9d,0x3e8
  414d55:	jmp    0x414c26
  414d5a:	mov    eax,r8d
  414d5d:	mov    rsi,rdx
  414d60:	jmp    0x414c66
  414d65:	nop
  414d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d70:	push   r15
  414d72:	push   r14
  414d74:	push   r13
  414d76:	push   r12
  414d78:	push   rbp
  414d79:	push   rdi
  414d7a:	push   rsi
  414d7b:	push   rbx
  414d7c:	sub    rsp,0x58
  414d80:	movzx  r11d,BYTE PTR [rcx]
  414d84:	mov    rbx,rcx
  414d87:	mov    r12d,edx
  414d8a:	mov    r14d,r8d
  414d8d:	lea    eax,[r11-0x1]
  414d91:	cmp    al,0x4c
  414d93:	ja     0x415104
  414d99:	movzx  eax,BYTE PTR [rcx+0x1]
  414d9d:	cmp    r11b,al
  414da0:	jb     0x415104
  414da6:	cmp    dl,r8b
  414da9:	jb     0x415104
  414daf:	lea    edx,[rdx-0x1]
  414db2:	cmp    dl,0x4c
  414db5:	ja     0x415104
  414dbb:	movzx  edi,r8b
  414dbf:	sub    edi,eax
  414dc1:	sete   r10b
  414dc5:	jne    0x414df1
  414dc7:	cmp    r11b,r12b
  414dca:	ja     0x414df1
  414dcc:	lea    rdx,[rip+0x20bed]        # 0x4359c0
  414dd3:	movzx  eax,r12b
  414dd7:	mov    eax,DWORD PTR [rdx+rax*4]
  414dda:	sub    eax,DWORD PTR [rdx+r11*4]
  414dde:	jne    0x415030
  414de4:	mov    BYTE PTR [rbx],r12b
  414de7:	mov    eax,0x23
  414dec:	jmp    0x415001
  414df1:	lea    rsi,[rip+0x20bc8]        # 0x4359c0
  414df8:	movsxd rax,r11d
  414dfb:	lea    r13,[rsp+0x30]
  414e00:	mov    r9d,DWORD PTR [rsi+rax*4]
  414e04:	mov    rbp,r13
  414e07:	mov    r8,r13
  414e0a:	xor    esi,esi
  414e0c:	lea    ecx,[r9-0x1]
  414e10:	jmp    0x414e14
  414e12:	mov    esi,edx
  414e14:	lea    edx,[rcx-0x3]
  414e17:	sub    ecx,0x4
  414e1a:	add    r8,0x4
  414e1e:	movsxd rdx,edx
  414e21:	movzx  eax,BYTE PTR [rbx+rdx*1+0x2]
  414e26:	movzx  r15d,BYTE PTR [rbx+rdx*1+0x3]
  414e2c:	shl    eax,0x8
  414e2f:	add    eax,r15d
  414e32:	movzx  r15d,BYTE PTR [rbx+rdx*1+0x4]
  414e38:	movzx  edx,BYTE PTR [rbx+rdx*1+0x5]
  414e3d:	shl    eax,0x8
  414e40:	add    eax,r15d
  414e43:	shl    eax,0x8
  414e46:	add    eax,edx
  414e48:	lea    edx,[rsi+0x1]
  414e4b:	mov    DWORD PTR [r8-0x4],eax
  414e4f:	cmp    ecx,0x0
  414e52:	jg     0x414e12
  414e54:	jne    0x415012
  414e5a:	cmp    edx,0x1
  414e5d:	je     0x415116
  414e63:	mov    eax,esi
  414e65:	mov    ecx,DWORD PTR [rsp+rax*4+0x30]
  414e69:	test   ecx,ecx
  414e6b:	je     0x414e82
  414e6d:	jmp    0x415120
  414e72:	lea    edx,[rsi-0x1]
  414e75:	mov    rax,rdx
  414e78:	mov    edx,DWORD PTR [rsp+rdx*4+0x30]
  414e7c:	test   edx,edx
  414e7e:	jne    0x414e87
  414e80:	mov    esi,eax
  414e82:	cmp    esi,0x1
  414e85:	jne    0x414e72
  414e87:	movzx  r15d,r12b
  414e8b:	mov    BYTE PTR [rsp+0x2b],r10b
  414e90:	mov    DWORD PTR [rsp+0x2c],r9d
  414e95:	mov    r8d,r15d
  414e98:	sub    r8d,edi
  414e9b:	test   edi,edi
  414e9d:	js     0x414ef5
  414e9f:	mov    edx,esi
  414ea1:	mov    rcx,r13
  414ea4:	call   0x4148f0
  414ea9:	test   eax,eax
  414eab:	jne    0x4150da
  414eb1:	movzx  r10d,BYTE PTR [rsp+0x2b]
  414eb7:	test   r10b,r10b
  414eba:	je     0x415063
  414ec0:	lea    rax,[rip+0x20af9]        # 0x4359c0
  414ec7:	mov    r9d,DWORD PTR [rsp+0x2c]
  414ecc:	sub    r9d,DWORD PTR [rax+r15*4]
  414ed0:	je     0x414de4
  414ed6:	mov    r9d,r9d
  414ed9:	lea    rcx,[rbx+0x3]
  414edd:	mov    r8d,0x20
  414ee3:	lea    rdx,[rbx+r9*1+0x3]
  414ee8:	sub    r8,r9
  414eeb:	call   0x42d6a0
  414ef0:	jmp    0x414de4
  414ef5:	cmp    r11d,r8d
  414ef8:	jg     0x4150c8
  414efe:	lea    rcx,[rip+0x2051b]        # 0x435420
  414f05:	neg    edi
  414f07:	mov    r13d,0x9
  414f0d:	nop    DWORD PTR [rax]
  414f10:	cmp    edi,0x9
  414f13:	mov    eax,r13d
  414f16:	mov    r8d,esi
  414f19:	cmovle eax,edi
  414f1c:	sub    edi,eax
  414f1e:	mov    eax,eax
  414f20:	mov    r10d,DWORD PTR [rcx+rax*4]
  414f24:	mov    r11d,edi
  414f27:	xor    eax,eax
  414f29:	nop    DWORD PTR [rax+0x0]
  414f30:	lea    r9d,[r8-0x1]
  414f34:	shl    rax,0x20
  414f38:	mov    edx,DWORD PTR [rsp+r9*4+0x30]
  414f3d:	mov    r8,r9
  414f40:	add    rax,rdx
  414f43:	xor    edx,edx
  414f45:	div    r10
  414f48:	test   r9d,r9d
  414f4b:	mov    DWORD PTR [rsp+r9*4+0x30],eax
  414f50:	mov    eax,edx
  414f52:	jne    0x414f30
  414f54:	test   r11d,r11d
  414f57:	jg     0x414f10
  414f59:	lea    rax,[rip+0x20a60]        # 0x4359c0
  414f60:	mov    BYTE PTR [rbx],r12b
  414f63:	mov    BYTE PTR [rbx+0x1],r14b
  414f67:	mov    r9d,DWORD PTR [rax+r15*4]
  414f6b:	lea    eax,[r9-0x1]
  414f6f:	movsxd rcx,eax
  414f72:	shr    rcx,0x2
  414f76:	cmp    esi,ecx
  414f78:	mov    edx,ecx
  414f7a:	ja     0x414f91
  414f7c:	nop    DWORD PTR [rax+0x0]
  414f80:	mov    ecx,edx
  414f82:	sub    edx,0x1
  414f85:	cmp    esi,edx
  414f87:	mov    DWORD PTR [rsp+rcx*4+0x30],0x0
  414f8f:	jbe    0x414f80
  414f91:	cmp    eax,0x3
  414f94:	mov    r10d,eax
  414f97:	mov    ecx,eax
  414f99:	ja     0x414fa2
  414f9b:	jmp    0x41510e
  414fa0:	mov    ecx,eax
  414fa2:	mov    edx,DWORD PTR [rbp+0x0]
  414fa5:	sub    eax,0x3
  414fa8:	add    rbp,0x4
  414fac:	cdqe   
  414fae:	mov    r8d,edx
  414fb1:	mov    BYTE PTR [rbx+rax*1+0x5],dl
  414fb5:	shr    r8d,0x18
  414fb9:	mov    BYTE PTR [rbx+rax*1+0x2],r8b
  414fbe:	mov    r8d,edx
  414fc1:	shr    r8d,0x10
  414fc5:	mov    BYTE PTR [rbx+rax*1+0x3],r8b
  414fca:	mov    r8d,edx
  414fcd:	shr    r8d,0x8
  414fd1:	mov    BYTE PTR [rbx+rax*1+0x4],r8b
  414fd6:	lea    eax,[rcx-0x4]
  414fd9:	cmp    eax,0x3
  414fdc:	ja     0x414fa0
  414fde:	sub    r9d,0x5
  414fe2:	shr    r9d,0x2
  414fe6:	mov    eax,r9d
  414fe9:	add    r9d,0x1
  414fed:	neg    eax
  414fef:	lea    eax,[r10+rax*4-0x4]
  414ff4:	test   eax,eax
  414ff6:	jne    0x4150e4
  414ffc:	mov    eax,0x23
  415001:	add    rsp,0x58
  415005:	pop    rbx
  415006:	pop    rsi
  415007:	pop    rdi
  415008:	pop    rbp
  415009:	pop    r12
  41500b:	pop    r13
  41500d:	pop    r14
  41500f:	pop    r15
  415011:	ret    
  415012:	neg    ecx
  415014:	mov    r15d,0xffffffff
  41501a:	mov    r8d,esi
  41501d:	shl    ecx,0x3
  415020:	shr    r15d,cl
  415023:	and    eax,r15d
  415026:	mov    DWORD PTR [rsp+r8*4+0x30],eax
  41502b:	jmp    0x414e5a
  415030:	mov    esi,eax
  415032:	lea    rdi,[rcx+0x3]
  415036:	mov    r8d,0x20
  41503c:	lea    rcx,[rcx+rsi*1+0x3]
  415041:	sub    r8,rsi
  415044:	mov    rdx,rdi
  415047:	call   0x42d6a0
  41504c:	mov    r8,rsi
  41504f:	xor    edx,edx
  415051:	mov    rcx,rdi
  415054:	call   0x42d698
  415059:	mov    BYTE PTR [rbx],r12b
  41505c:	mov    eax,0x23
  415061:	jmp    0x415001
  415063:	lea    rcx,[rip+0x203b6]        # 0x435420
  41506a:	nop    WORD PTR [rax+rax*1+0x0]
  415070:	cmp    edi,0x9
  415073:	mov    eax,0x9
  415078:	mov    rdx,r13
  41507b:	cmovle eax,edi
  41507e:	xor    r11d,r11d
  415081:	sub    edi,eax
  415083:	mov    eax,eax
  415085:	mov    r9d,DWORD PTR [rcx+rax*4]
  415089:	lea    eax,[rsi-0x1]
  41508c:	mov    r10d,edi
  41508f:	lea    r8,[r13+rax*4+0x4]
  415094:	mov    eax,DWORD PTR [rdx]
  415096:	add    rdx,0x4
  41509a:	imul   rax,r9
  41509e:	add    rax,r11
  4150a1:	mov    DWORD PTR [rdx-0x4],eax
  4150a4:	shr    rax,0x20
  4150a8:	cmp    rdx,r8
  4150ab:	mov    r11d,eax
  4150ae:	jne    0x415094
  4150b0:	test   r11d,r11d
  4150b3:	je     0x4150be
  4150b5:	mov    edx,esi
  4150b7:	add    esi,0x1
  4150ba:	mov    DWORD PTR [rsp+rdx*4+0x30],eax
  4150be:	test   r10d,r10d
  4150c1:	jg     0x415070
  4150c3:	jmp    0x414f59
  4150c8:	mov    edx,esi
  4150ca:	mov    rcx,r13
  4150cd:	call   0x4148f0
  4150d2:	test   eax,eax
  4150d4:	je     0x414efe
  4150da:	mov    eax,0xfffffffb
  4150df:	jmp    0x415001
  4150e4:	mov    edx,DWORD PTR [rsp+r9*4+0x30]
  4150e9:	nop    DWORD PTR [rax+0x0]
  4150f0:	movsxd rcx,eax
  4150f3:	mov    BYTE PTR [rbx+rcx*1+0x2],dl
  4150f7:	shr    edx,0x8
  4150fa:	sub    eax,0x1
  4150fd:	jne    0x4150f0
  4150ff:	jmp    0x414ffc
  415104:	mov    eax,0xffffffff
  415109:	jmp    0x415001
  41510e:	xor    r9d,r9d
  415111:	jmp    0x414ff4
  415116:	mov    esi,0x1
  41511b:	jmp    0x414e87
  415120:	mov    esi,edx
  415122:	jmp    0x414e87
  415127:	nop
  415128:	nop
  415129:	nop
  41512a:	nop
  41512b:	nop
  41512c:	nop
  41512d:	nop
  41512e:	nop
  41512f:	nop
  415130:	push   rbp
  415131:	push   rdi
  415132:	push   rsi
  415133:	push   rbx
  415134:	sub    rsp,0x48
  415138:	cmp    DWORD PTR [rcx+0x148],0x5
  41513f:	mov    rbp,QWORD PTR [rcx+0xd0]
  415146:	mov    rdi,rcx
  415149:	je     0x4151b5
  41514b:	lea    rsi,[rbp+0x8]
  41514f:	mov    DWORD PTR [rcx+0xec],0x0
  415159:	mov    DWORD PTR [rcx+0xe4],0x0
  415163:	mov    rbx,rbp
  415166:	cmp    rsi,rbx
  415169:	ja     0x41518a
  41516b:	jmp    0x4151eb
  41516d:	nop    DWORD PTR [rax]
  415170:	cdqe   
  415172:	add    rbx,rax
  415175:	mov    rdx,rbx
  415178:	sub    rdx,rbp
  41517b:	cmp    rdx,0x3
  41517f:	jg     0x415250
  415185:	cmp    rbx,rsi
  415188:	jae    0x4151f1
  41518a:	mov    r8d,esi
  41518d:	mov    rdx,rbx
  415190:	mov    rcx,rdi
  415193:	sub    r8d,ebx
  415196:	call   0x413900
  41519b:	test   eax,eax
  41519d:	jg     0x415170
  41519f:	mov    rcx,rdi
  4151a2:	call   0x413250
  4151a7:	mov    eax,0xffffffff
  4151ac:	add    rsp,0x48
  4151b0:	pop    rbx
  4151b1:	pop    rsi
  4151b2:	pop    rdi
  4151b3:	pop    rbp
  4151b4:	ret    
  4151b5:	mov    rdx,QWORD PTR [rip+0x26c74]        # 0x43be30
  4151bc:	mov    eax,0xffffffff
  4151c1:	mov    r8d,DWORD PTR [rdx]
  4151c4:	test   r8d,r8d
  4151c7:	je     0x4151ac
  4151c9:	lea    r8,[rip+0x20930]        # 0x435b00
  4151d0:	lea    rcx,[rip+0x2094d]        # 0x435b24
  4151d7:	mov    edx,0x2554
  4151dc:	mov    DWORD PTR [rsp+0x3c],eax
  4151e0:	call   0x40d350
  4151e5:	mov    eax,DWORD PTR [rsp+0x3c]
  4151e9:	jmp    0x4151ac
  4151eb:	sub    rbx,rbp
  4151ee:	mov    rdx,rbx
  4151f1:	mov    rcx,QWORD PTR [rip+0x26c38]        # 0x43be30
  4151f8:	movzx  eax,BYTE PTR [rbp+0x0]
  4151fc:	mov    DWORD PTR [rdi+0xec],edx
  415202:	mov    DWORD PTR [rdi+0xe4],0x8
  41520c:	mov    ecx,DWORD PTR [rcx]
  41520e:	mov    BYTE PTR [rdi+0xf0],al
  415214:	mov    eax,edx
  415216:	test   ecx,ecx
  415218:	je     0x4151ac
  41521a:	mov    r9,QWORD PTR [rdi+0xd0]
  415221:	mov    eax,edx
  415223:	lea    r8,[rip+0x20903]        # 0x435b2d
  41522a:	lea    rcx,[rip+0x208f3]        # 0x435b24
  415231:	mov    QWORD PTR [rsp+0x20],rax
  415236:	mov    edx,0x27f4
  41523b:	call   0x40d0b0
  415240:	mov    eax,DWORD PTR [rdi+0xec]
  415246:	jmp    0x4151ac
  41524b:	nop    DWORD PTR [rax+rax*1+0x0]
  415250:	movzx  esi,BYTE PTR [rbp+0x2]
  415254:	movzx  eax,BYTE PTR [rbp+0x3]
  415258:	shl    esi,0x8
  41525b:	add    esi,eax
  41525d:	cmp    esi,0x7
  415260:	jbe    0x41519f
  415266:	mov    rcx,QWORD PTR [rdi+0x100]
  41526d:	cmp    esi,DWORD PTR [rcx+0x10]
  415270:	ja     0x41527a
  415272:	add    rsi,rbp
  415275:	jmp    0x415166
  41527a:	mov    edx,esi
  41527c:	call   0x4102c0
  415281:	test   rax,rax
  415284:	je     0x41519f
  41528a:	sub    rbx,QWORD PTR [rdi+0xd0]
  415291:	lea    rbp,[rax+0x14]
  415295:	mov    QWORD PTR [rdi+0x100],rax
  41529c:	mov    QWORD PTR [rdi+0xd0],rbp
  4152a3:	add    rbx,rbp
  4152a6:	jmp    0x415272
  4152a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4152b0:	push   rbp
  4152b1:	push   rdi
  4152b2:	push   rsi
  4152b3:	push   rbx
  4152b4:	sub    rsp,0x38
  4152b8:	mov    eax,DWORD PTR [rcx+0xe8]
  4152be:	mov    ebp,edx
  4152c0:	mov    edx,DWORD PTR [rcx+0xe0]
  4152c6:	mov    rbx,rcx
  4152c9:	cmp    eax,edx
  4152cb:	jbe    0x4153c0
  4152d1:	sub    eax,edx
  4152d3:	mov    DWORD PTR [rcx+0xe8],edx
  4152d9:	lea    esi,[rax+0x8]
  4152dc:	mov    edi,eax
  4152de:	movzx  edx,BYTE PTR [rbx+0xf1]
  4152e5:	mov    rax,QWORD PTR [rbx+0xd8]
  4152ec:	mov    BYTE PTR [rax],dl
  4152ee:	mov    rax,QWORD PTR [rbx+0xd8]
  4152f5:	mov    BYTE PTR [rax+0x1],bpl
  4152f9:	mov    eax,DWORD PTR [rbx+0xe8]
  4152ff:	mov    rdx,QWORD PTR [rbx+0xd8]
  415306:	shr    eax,0x8
  415309:	mov    BYTE PTR [rdx+0x2],al
  41530c:	mov    rax,QWORD PTR [rbx+0xd8]
  415313:	mov    edx,DWORD PTR [rbx+0xe8]
  415319:	mov    BYTE PTR [rax+0x3],dl
  41531c:	mov    eax,DWORD PTR [rbx+0xa8]
  415322:	mov    rdx,QWORD PTR [rbx+0xd8]
  415329:	sar    eax,0x8
  41532c:	mov    BYTE PTR [rdx+0x4],al
  41532f:	mov    rax,QWORD PTR [rbx+0xd8]
  415336:	mov    edx,DWORD PTR [rbx+0xa8]
  41533c:	mov    BYTE PTR [rax+0x5],dl
  41533f:	mov    rax,QWORD PTR [rbx+0xd8]
  415346:	xor    edx,edx
  415348:	mov    WORD PTR [rax+0x6],dx
  41534c:	cmp    WORD PTR [rbx],0x6ff
  415351:	jbe    0x41535d
  415353:	cmp    QWORD PTR [rbx+0x168],0x0
  41535b:	je     0x4153d0
  41535d:	mov    rax,QWORD PTR [rip+0x26acc]        # 0x43be30
  415364:	mov    eax,DWORD PTR [rax]
  415366:	test   eax,eax
  415368:	jne    0x4153e0
  41536a:	mov    rdx,QWORD PTR [rbx+0xd8]
  415371:	mov    r8d,DWORD PTR [rbx+0xe8]
  415378:	movzx  r9d,bpl
  41537c:	mov    rcx,rbx
  41537f:	call   0x414040
  415384:	mov    r8,QWORD PTR [rbx+0xd8]
  41538b:	mov    edx,DWORD PTR [rbx+0xe0]
  415391:	mov    ebp,eax
  415393:	lea    rcx,[r8+0x8]
  415397:	add    rdx,r8
  41539a:	mov    r8,rdi
  41539d:	call   0x42d6a8
  4153a2:	xor    eax,eax
  4153a4:	test   ebp,ebp
  4153a6:	mov    DWORD PTR [rbx+0xe8],esi
  4153ac:	setle  al
  4153af:	neg    eax
  4153b1:	add    rsp,0x38
  4153b5:	pop    rbx
  4153b6:	pop    rsi
  4153b7:	pop    rdi
  4153b8:	pop    rbp
  4153b9:	ret    
  4153ba:	nop    WORD PTR [rax+rax*1+0x0]
  4153c0:	mov    esi,0x8
  4153c5:	xor    edi,edi
  4153c7:	jmp    0x4152de
  4153cc:	nop    DWORD PTR [rax+0x0]
  4153d0:	mov    rax,QWORD PTR [rbx+0xd8]
  4153d7:	mov    BYTE PTR [rax+0x6],0x1
  4153db:	jmp    0x41535d
  4153dd:	nop    DWORD PTR [rax]
  4153e0:	mov    eax,DWORD PTR [rbx+0xe8]
  4153e6:	mov    r9,QWORD PTR [rbx+0xd8]
  4153ed:	lea    r8,[rip+0x20749]        # 0x435b3d
  4153f4:	lea    rcx,[rip+0x20729]        # 0x435b24
  4153fb:	mov    edx,0x2e54
  415400:	mov    QWORD PTR [rsp+0x20],rax
  415405:	call   0x40d0b0
  41540a:	jmp    0x41536a
  41540f:	nop
  415410:	push   rsi
  415411:	push   rbx
  415412:	sub    rsp,0x48
  415416:	cmp    WORD PTR [rcx],0x6ff
  41541b:	mov    rbx,rcx
  41541e:	mov    BYTE PTR [rsp+0x30],0x6
  415423:	mov    BYTE PTR [rsp+0x31],0x1
  415428:	mov    BYTE PTR [rsp+0x32],0x0
  41542d:	mov    BYTE PTR [rsp+0x33],0x8
  415432:	mov    DWORD PTR [rsp+0x34],0x0
  41543a:	jbe    0x415446
  41543c:	cmp    QWORD PTR [rcx+0x168],0x0
  415444:	je     0x415490
  415446:	mov    rax,QWORD PTR [rip+0x269e3]        # 0x43be30
  41544d:	lea    rsi,[rsp+0x30]
  415452:	mov    eax,DWORD PTR [rax]
  415454:	test   eax,eax
  415456:	jne    0x4154a0
  415458:	mov    rdx,rsi
  41545b:	mov    r9d,0x1
  415461:	mov    r8d,0x8
  415467:	mov    rcx,rbx
  41546a:	call   0x414040
  41546f:	test   eax,eax
  415471:	mov    edx,0xffffffff
  415476:	jle    0x415481
  415478:	mov    BYTE PTR [rbx+0x14c],0x2
  41547f:	xor    edx,edx
  415481:	mov    eax,edx
  415483:	add    rsp,0x48
  415487:	pop    rbx
  415488:	pop    rsi
  415489:	ret    
  41548a:	nop    WORD PTR [rax+rax*1+0x0]
  415490:	mov    BYTE PTR [rsp+0x36],0x1
  415495:	jmp    0x415446
  415497:	nop    WORD PTR [rax+rax*1+0x0]
  4154a0:	lea    r8,[rip+0x20696]        # 0x435b3d
  4154a7:	lea    rcx,[rip+0x20676]        # 0x435b24
  4154ae:	mov    QWORD PTR [rsp+0x20],0x8
  4154b7:	mov    r9,rsi
  4154ba:	mov    edx,0x3034
  4154bf:	call   0x40d0b0
  4154c4:	jmp    0x415458
  4154c6:	nop
  4154c7:	nop
  4154c8:	nop
  4154c9:	nop
  4154ca:	nop
  4154cb:	nop
  4154cc:	nop
  4154cd:	nop
  4154ce:	nop
  4154cf:	nop
  4154d0:	push   rbx
  4154d1:	mov    rax,QWORD PTR [rsp+0x30]
  4154d6:	test   rdx,rdx
  4154d9:	mov    r11d,r8d
  4154dc:	lea    rbx,[r9+rax*1]
  4154e0:	je     0x415550
  4154e2:	cmp    r8b,0x5d
  4154e6:	mov    ecx,0x5b
  4154eb:	lea    rax,[rdx+0x1]
  4154ef:	cmovne ecx,r8d
  4154f3:	cmp    r9,rbx
  4154f6:	mov    BYTE PTR [rdx],cl
  4154f8:	jne    0x415510
  4154fa:	jmp    0x415537
  4154fc:	nop    DWORD PTR [rax+0x0]
  415500:	add    r9,0x1
  415504:	lea    rax,[rcx+0x1]
  415508:	mov    BYTE PTR [rcx],r10b
  41550b:	cmp    r9,rbx
  41550e:	je     0x415537
  415510:	movzx  r10d,BYTE PTR [r9]
  415514:	mov    rcx,rax
  415517:	cmp    r10b,r11b
  41551a:	jne    0x415500
  41551c:	mov    BYTE PTR [rax],r11b
  41551f:	movzx  r10d,BYTE PTR [r9]
  415523:	add    r9,0x1
  415527:	add    rcx,0x1
  41552b:	cmp    r9,rbx
  41552e:	lea    rax,[rcx+0x1]
  415532:	mov    BYTE PTR [rcx],r10b
  415535:	jne    0x415510
  415537:	mov    BYTE PTR [rax],r8b
  41553a:	mov    BYTE PTR [rax+0x1],0x0
  41553e:	add    rax,0x1
  415542:	sub    rax,rdx
  415545:	pop    rbx
  415546:	ret    
  415547:	nop    WORD PTR [rax+rax*1+0x0]
  415550:	add    rax,0x2
  415554:	cmp    r9,rbx
  415557:	je     0x415545
  415559:	nop    DWORD PTR [rax+0x0]
  415560:	xor    edx,edx
  415562:	cmp    BYTE PTR [r9],r11b
  415565:	sete   dl
  415568:	add    r9,0x1
  41556c:	add    rax,rdx
  41556f:	cmp    r9,rbx
  415572:	jne    0x415560
  415574:	pop    rbx
  415575:	ret    
  415576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415580:	push   rbp
  415581:	push   rdi
  415582:	push   rsi
  415583:	push   rbx
  415584:	sub    rsp,0x28
  415588:	mov    rbx,rcx
  41558b:	mov    rbp,rdx
  41558e:	xor    edx,edx
  415590:	mov    rsi,r8
  415593:	call   0x4241d0
  415598:	xor    edx,edx
  41559a:	mov    rcx,rbx
  41559d:	mov    edi,esi
  41559f:	call   0x4241d0
  4155a4:	mov    edx,0x63
  4155a9:	mov    rcx,rbx
  4155ac:	call   0x4241d0
  4155b1:	mov    edx,esi
  4155b3:	mov    rcx,rbx
  4155b6:	call   0x424140
  4155bb:	cmp    WORD PTR [rbx],0x700
  4155c0:	ja     0x4155f0
  4155c2:	test   rsi,rsi
  4155c5:	mov    eax,0xffffffff
  4155ca:	mov    rcx,rbx
  4155cd:	cmove  edi,eax
  4155d0:	mov    edx,edi
  4155d2:	call   0x424140
  4155d7:	mov    r8,rsi
  4155da:	mov    rdx,rbp
  4155dd:	mov    rcx,rbx
  4155e0:	add    rsp,0x28
  4155e4:	pop    rbx
  4155e5:	pop    rsi
  4155e6:	pop    rdi
  4155e7:	pop    rbp
  4155e8:	jmp    0x423f10
  4155ed:	nop    DWORD PTR [rax]
  4155f0:	lea    rdx,[rbx+0x70]
  4155f4:	mov    r8d,0x5
  4155fa:	mov    rcx,rbx
  4155fd:	call   0x423f10
  415602:	jmp    0x4155c2
  415604:	xchg   ax,ax
  415606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415610:	push   rbp
  415611:	push   rdi
  415612:	push   rsi
  415613:	push   rbx
  415614:	sub    rsp,0x128
  41561b:	mov    rbp,r8
  41561e:	xor    r8d,r8d
  415621:	mov    rsi,rcx
  415624:	cmp    rdx,rbp
  415627:	mov    rbx,rdx
  41562a:	lea    rdi,[rsp+0x20]
  41562f:	jne    0x41563c
  415631:	jmp    0x415673
  415633:	add    rbx,0x1
  415637:	cmp    rbp,rbx
  41563a:	je     0x415673
  41563c:	movzx  r9d,BYTE PTR [rbx]
  415640:	movsxd r10,r8d
  415643:	lea    eax,[r8+0x1]
  415647:	cmp    r9b,0x27
  41564b:	mov    BYTE PTR [rsp+r10*1+0x20],r9b
  415650:	je     0x415690
  415652:	cmp    eax,0xfd
  415657:	mov    r8d,eax
  41565a:	jle    0x415633
  41565c:	mov    rdx,rdi
  41565f:	mov    rcx,rsi
  415662:	add    rbx,0x1
  415666:	call   0x423fa0
  41566b:	xor    r8d,r8d
  41566e:	cmp    rbp,rbx
  415671:	jne    0x41563c
  415673:	mov    rdx,rdi
  415676:	mov    rcx,rsi
  415679:	call   0x423fa0
  41567e:	nop
  41567f:	add    rsp,0x128
  415686:	pop    rbx
  415687:	pop    rsi
  415688:	pop    rdi
  415689:	pop    rbp
  41568a:	ret    
  41568b:	nop    DWORD PTR [rax+rax*1+0x0]
  415690:	cdqe   
  415692:	mov    BYTE PTR [rsp+rax*1+0x20],0x27
  415697:	lea    eax,[r8+0x2]
  41569b:	jmp    0x415652
  41569d:	nop    DWORD PTR [rax]
  4156a0:	push   rsi
  4156a1:	push   rbx
  4156a2:	sub    rsp,0x28
  4156a6:	test   rcx,rcx
  4156a9:	mov    rsi,rcx
  4156ac:	mov    rbx,rdx
  4156af:	je     0x4156e0
  4156b1:	test   rdx,rdx
  4156b4:	je     0x4156e0
  4156b6:	movzx  edx,BYTE PTR [rdx]
  4156b9:	test   dl,dl
  4156bb:	je     0x4156e0
  4156bd:	mov    rax,rsi
  4156c0:	mov    BYTE PTR [rax],dl
  4156c2:	add    rbx,0x1
  4156c6:	add    rax,0x2
  4156ca:	mov    BYTE PTR [rax-0x1],0x0
  4156ce:	movzx  edx,BYTE PTR [rbx]
  4156d1:	test   dl,dl
  4156d3:	jne    0x4156c0
  4156d5:	sub    rax,rsi
  4156d8:	add    rsp,0x28
  4156dc:	pop    rbx
  4156dd:	pop    rsi
  4156de:	ret    
  4156df:	nop
  4156e0:	lea    rdx,[rip+0x20479]        # 0x435b60
  4156e7:	lea    rcx,[rip+0x2047a]        # 0x435b68
  4156ee:	mov    r8d,0x5b
  4156f4:	call   0x42d350
  4156f9:	movzx  edx,BYTE PTR [rbx]
  4156fc:	test   dl,dl
  4156fe:	jne    0x4156bd
  415700:	xor    eax,eax
  415702:	jmp    0x4156d8
  415704:	xchg   ax,ax
  415706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415710:	push   r12
  415712:	push   rbp
  415713:	push   rdi
  415714:	push   rsi
  415715:	push   rbx
  415716:	sub    rsp,0x40
  41571a:	cmp    WORD PTR [rcx],0x700
  41571f:	mov    rbx,rcx
  415722:	mov    edi,edx
  415724:	mov    esi,r8d
  415727:	mov    r12d,r9d
  41572a:	jbe    0x415880
  415730:	mov    edx,0xffffffff
  415735:	call   0x424180
  41573a:	mov    edx,0x7
  41573f:	mov    rcx,rbx
  415742:	call   0x424180
  415747:	mov    edx,0x2
  41574c:	mov    rcx,rbx
  41574f:	call   0x424180
  415754:	xor    edx,edx
  415756:	mov    rcx,rbx
  415759:	call   0x4241d0
  41575e:	xor    edx,edx
  415760:	mov    rcx,rbx
  415763:	call   0x4241d0
  415768:	mov    edx,0x26
  41576d:	mov    rcx,rbx
  415770:	call   0x4241d0
  415775:	mov    edx,0x4
  41577a:	mov    rcx,rbx
  41577d:	call   0x4241d0
  415782:	mov    edx,0x4
  415787:	mov    rcx,rbx
  41578a:	call   0x4241d0
  41578f:	mov    edx,edi
  415791:	mov    rcx,rbx
  415794:	call   0x424140
  415799:	xor    edx,edx
  41579b:	mov    rcx,rbx
  41579e:	call   0x4241d0
  4157a3:	xor    edx,edx
  4157a5:	mov    rcx,rbx
  4157a8:	call   0x4241d0
  4157ad:	mov    edx,0x26
  4157b2:	mov    rcx,rbx
  4157b5:	call   0x4241d0
  4157ba:	mov    edx,0x4
  4157bf:	mov    rcx,rbx
  4157c2:	call   0x4241d0
  4157c7:	mov    edx,0x4
  4157cc:	mov    rcx,rbx
  4157cf:	call   0x4241d0
  4157d4:	movzx  edx,sil
  4157d8:	mov    rcx,rbx
  4157db:	call   0x424140
  4157e0:	xor    edx,edx
  4157e2:	mov    rcx,rbx
  4157e5:	call   0x4241d0
  4157ea:	xor    edx,edx
  4157ec:	mov    rcx,rbx
  4157ef:	call   0x4241d0
  4157f4:	mov    edx,0x26
  4157f9:	mov    rcx,rbx
  4157fc:	call   0x4241d0
  415801:	mov    edx,0x4
  415806:	mov    rcx,rbx
  415809:	call   0x4241d0
  41580e:	and    esi,0x30
  415811:	jne    0x4158b1
  415817:	xor    edx,edx
  415819:	mov    rcx,rbx
  41581c:	call   0x4241d0
  415821:	xor    edx,edx
  415823:	mov    rcx,rbx
  415826:	call   0x4241d0
  41582b:	xor    edx,edx
  41582d:	mov    rcx,rbx
  415830:	call   0x4241d0
  415835:	mov    rcx,rbx
  415838:	mov    edx,0x26
  41583d:	call   0x4241d0
  415842:	mov    rcx,rbx
  415845:	mov    edx,0x4
  41584a:	call   0x4241d0
  41584f:	mov    rcx,rbx
  415852:	mov    edx,0x4
  415857:	call   0x4241d0
  41585c:	mov    edx,DWORD PTR [rsp+0x90]
  415863:	mov    rcx,rbx
  415866:	call   0x424140
  41586b:	nop
  41586c:	add    rsp,0x40
  415870:	pop    rbx
  415871:	pop    rsi
  415872:	pop    rdi
  415873:	pop    rbp
  415874:	pop    r12
  415876:	ret    
  415877:	nop    WORD PTR [rax+rax*1+0x0]
  415880:	lea    rbp,[rsp+0x20]
  415885:	mov    edx,0xe
  41588a:	call   0x424180
  41588f:	lea    rdx,[rip+0x202e8]        # 0x435b7e
  415896:	mov    rcx,rbp
  415899:	call   0x4156a0
  41589e:	mov    rdx,rbp
  4158a1:	mov    r8,rax
  4158a4:	mov    rcx,rbx
  4158a7:	call   0x423f10
  4158ac:	jmp    0x415747
  4158b1:	mov    rcx,rbx
  4158b4:	mov    edx,0x4
  4158b9:	call   0x4241d0
  4158be:	mov    edx,r12d
  4158c1:	mov    rcx,rbx
  4158c4:	call   0x424140
  4158c9:	jmp    0x415821
  4158ce:	xchg   ax,ax
  4158d0:	push   r14
  4158d2:	push   r13
  4158d4:	push   r12
  4158d6:	push   rbp
  4158d7:	push   rdi
  4158d8:	push   rsi
  4158d9:	push   rbx
  4158da:	sub    rsp,0x20
  4158de:	test   rcx,rcx
  4158e1:	mov    rbx,rcx
  4158e4:	mov    rsi,rdx
  4158e7:	mov    r12d,r8d
  4158ea:	je     0x415a20
  4158f0:	cmp    rcx,rdx
  4158f3:	ja     0x415a20
  4158f9:	mov    rax,rdx
  4158fc:	sub    rax,rcx
  4158ff:	test   al,0x1
  415901:	jne    0x415a20
  415907:	cmp    rbx,rsi
  41590a:	je     0x415960
  41590c:	lea    r14,[rip+0x202e5]        # 0x435bf8
  415913:	lea    rbp,[rsi-0x2]
  415917:	mov    edx,0x20
  41591c:	nop    DWORD PTR [rax+0x0]
  415920:	cmp    BYTE PTR [rbx+0x1],0x0
  415924:	jne    0x415980
  415926:	movzx  r13d,BYTE PTR [rbx]
  41592a:	lea    eax,[r13-0x22]
  41592e:	cmp    al,0x39
  415930:	ja     0x415a10
  415936:	movzx  eax,al
  415939:	movsxd rax,DWORD PTR [r14+rax*4]
  41593d:	add    rax,r14
  415940:	jmp    rax
  415942:	test   r12d,r12d
  415945:	je     0x415a10
  41594b:	movzx  ecx,dl
  41594e:	call   QWORD PTR [rip+0x2d200]        # 0x442b54
  415954:	test   eax,eax
  415956:	jne    0x415a10
  41595c:	nop    DWORD PTR [rax+0x0]
  415960:	mov    rax,rbx
  415963:	add    rsp,0x20
  415967:	pop    rbx
  415968:	pop    rsi
  415969:	pop    rdi
  41596a:	pop    rbp
  41596b:	pop    r12
  41596d:	pop    r13
  41596f:	pop    r14
  415971:	ret    
  415972:	lea    rax,[rbx+0x4]
  415976:	cmp    rsi,rax
  415979:	jae    0x415a40
  41597f:	nop
  415980:	add    rbx,0x2
  415984:	mov    edx,0x20
  415989:	cmp    rsi,rbx
  41598c:	jne    0x415920
  41598e:	xchg   ax,ax
  415990:	mov    rax,rsi
  415993:	add    rsp,0x20
  415997:	pop    rbx
  415998:	pop    rsi
  415999:	pop    rdi
  41599a:	pop    rbp
  41599b:	pop    r12
  41599d:	pop    r13
  41599f:	pop    r14
  4159a1:	ret    
  4159a2:	cmp    r13b,0x5b
  4159a6:	mov    edi,0x5d
  4159ab:	cmovne edi,r13d
  4159af:	cmp    rsi,rbx
  4159b2:	ja     0x415a80
  4159b8:	lea    rdx,[rip+0x201a1]        # 0x435b60
  4159bf:	lea    rcx,[rip+0x201fa]        # 0x435bc0
  4159c6:	mov    r8d,0x281
  4159cc:	call   0x42d350
  4159d1:	jmp    0x4159d6
  4159d3:	mov    rbx,rcx
  4159d6:	lea    rcx,[rbx+0x2]
  4159da:	cmp    rsi,rcx
  4159dd:	je     0x415990
  4159df:	cmp    BYTE PTR [rbx+0x2],dil
  4159e3:	jne    0x4159d3
  4159e5:	cmp    BYTE PTR [rbx+0x3],0x0
  4159e9:	jne    0x4159d3
  4159eb:	lea    rcx,[rbx+0x4]
  4159ef:	cmp    rsi,rcx
  4159f2:	je     0x415990
  4159f4:	cmp    dil,BYTE PTR [rbx+0x4]
  4159f8:	jne    0x415a00
  4159fa:	cmp    BYTE PTR [rbx+0x5],0x0
  4159fe:	je     0x4159d3
  415a00:	mov    edx,r13d
  415a03:	mov    rbx,rcx
  415a06:	jmp    0x415989
  415a08:	nop    DWORD PTR [rax+rax*1+0x0]
  415a10:	add    rbx,0x2
  415a14:	mov    edx,r13d
  415a17:	jmp    0x415989
  415a1c:	nop    DWORD PTR [rax+0x0]
  415a20:	lea    rdx,[rip+0x20139]        # 0x435b60
  415a27:	lea    rcx,[rip+0x20162]        # 0x435b90
  415a2e:	mov    r8d,0x29b
  415a34:	call   0x42d350
  415a39:	jmp    0x415907
  415a3e:	xchg   ax,ax
  415a40:	lea    rdx,[rip+0x201a4]        # 0x435beb
  415a47:	mov    r8d,0x4
  415a4d:	mov    rcx,rbx
  415a50:	call   0x42d6b0
  415a55:	test   eax,eax
  415a57:	jne    0x415a93
  415a59:	nop    DWORD PTR [rax+0x0]
  415a60:	add    rbx,0x2
  415a64:	cmp    rsi,rbx
  415a67:	jbe    0x415984
  415a6d:	cmp    BYTE PTR [rbx],0xa
  415a70:	jne    0x415a60
  415a72:	cmp    BYTE PTR [rbx+0x1],0x0
  415a76:	jne    0x415a60
  415a78:	jmp    0x415980
  415a7d:	nop    DWORD PTR [rax]
  415a80:	mov    rax,rsi
  415a83:	sub    rax,rbx
  415a86:	test   al,0x1
  415a88:	je     0x4159d6
  415a8e:	jmp    0x4159b8
  415a93:	lea    rdx,[rip+0x20155]        # 0x435bef
  415a9a:	mov    r8d,0x4
  415aa0:	mov    rcx,rbx
  415aa3:	call   0x42d6b0
  415aa8:	test   eax,eax
  415aaa:	jne    0x415980
  415ab0:	add    rbx,0x2
  415ab4:	add    rbx,0x2
  415ab8:	cmp    rbp,rbx
  415abb:	jbe    0x415984
  415ac1:	lea    rdx,[rip+0x2012b]        # 0x435bf3
  415ac8:	mov    r8d,0x4
  415ace:	mov    rcx,rbx
  415ad1:	call   0x42d6b0
  415ad6:	test   eax,eax
  415ad8:	jne    0x415ab4
  415ada:	add    rbx,0x4
  415ade:	mov    edx,0x20
  415ae3:	jmp    0x415989
  415ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  415af0:	push   rsi
  415af1:	push   rbx
  415af2:	sub    rsp,0x28
  415af6:	xor    esi,esi
  415af8:	mov    rbx,rdx
  415afb:	lea    rax,[rcx-0x2]
  415aff:	jmp    0x415b04
  415b01:	add    esi,0x1
  415b04:	lea    rcx,[rax+0x2]
  415b08:	xor    r8d,r8d
  415b0b:	mov    rdx,rbx
  415b0e:	call   0x4158d0
  415b13:	cmp    rax,rbx
  415b16:	jne    0x415b01
  415b18:	mov    eax,esi
  415b1a:	add    rsp,0x28
  415b1e:	pop    rbx
  415b1f:	pop    rsi
  415b20:	ret    
  415b21:	nop    DWORD PTR [rax+rax*1+0x0]
  415b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415b30:	push   r14
  415b32:	push   r13
  415b34:	push   r12
  415b36:	push   rbp
  415b37:	push   rdi
  415b38:	push   rsi
  415b39:	push   rbx
  415b3a:	sub    rsp,0x40
  415b3e:	cmp    WORD PTR [rcx],0x6ff
  415b43:	mov    rdi,rcx
  415b46:	mov    rbp,rdx
  415b49:	mov    rbx,r8
  415b4c:	lea    rsi,[rdx+r8*1]
  415b50:	jbe    0x415c74
  415b56:	mov    rdx,rsi
  415b59:	mov    rcx,rbp
  415b5c:	call   0x415af0
  415b61:	lea    r12d,[rax+rax*1]
  415b65:	cmp    eax,0x9
  415b68:	movsxd r12,r12d
  415b6b:	jle    0x415b8f
  415b6d:	mov    r9d,0xa
  415b73:	mov    r10d,eax
  415b76:	sub    r10d,r9d
  415b79:	lea    r9d,[r9+r9*4]
  415b7d:	add    r10d,0x1
  415b81:	movsxd r10,r10d
  415b84:	add    r9d,r9d
  415b87:	add    r12,r10
  415b8a:	cmp    eax,r9d
  415b8d:	jge    0x415b73
  415b8f:	xor    edx,edx
  415b91:	mov    rcx,rdi
  415b94:	lea    rbx,[rbx+r12*2]
  415b98:	call   0x4241d0
  415b9d:	xor    edx,edx
  415b9f:	mov    rcx,rdi
  415ba2:	call   0x4241d0
  415ba7:	mov    edx,0x63
  415bac:	mov    rcx,rdi
  415baf:	call   0x4241d0
  415bb4:	mov    edx,ebx
  415bb6:	mov    rcx,rdi
  415bb9:	call   0x424140
  415bbe:	cmp    WORD PTR [rdi],0x700
  415bc3:	ja     0x415c92
  415bc9:	mov    edx,ebx
  415bcb:	mov    rcx,rdi
  415bce:	mov    r12,rbp
  415bd1:	call   0x424140
  415bd6:	mov    r13d,0x1
  415bdc:	lea    r14,[rsp+0x20]
  415be1:	jmp    0x415c29
  415be3:	cmp    rsi,rbx
  415be6:	jb     0x415c4a
  415be8:	mov    r8,rbx
  415beb:	mov    rdx,r12
  415bee:	mov    rcx,rdi
  415bf1:	sub    r8,r12
  415bf4:	call   0x423f10
  415bf9:	cmp    rbx,rsi
  415bfc:	je     0x415c65
  415bfe:	lea    rdx,[rip+0x20115]        # 0x435d1a
  415c05:	mov    r8d,r13d
  415c08:	mov    rcx,r14
  415c0b:	lea    r12,[rbx+0x2]
  415c0f:	add    r13d,0x1
  415c13:	call   0x42d648
  415c18:	mov    r8d,0xffffffff
  415c1e:	mov    rdx,r14
  415c21:	mov    rcx,rdi
  415c24:	call   0x423fa0
  415c29:	xor    r8d,r8d
  415c2c:	mov    rdx,rsi
  415c2f:	mov    rcx,r12
  415c32:	call   0x4158d0
  415c37:	cmp    rbp,rax
  415c3a:	mov    rbx,rax
  415c3d:	setbe  dl
  415c40:	test   rax,rax
  415c43:	setne  al
  415c46:	test   dl,al
  415c48:	jne    0x415be3
  415c4a:	lea    rdx,[rip+0x1ff0f]        # 0x435b60
  415c51:	lea    rcx,[rip+0x200a0]        # 0x435cf8
  415c58:	mov    r8d,0x466
  415c5e:	call   0x42d350
  415c63:	jmp    0x415be8
  415c65:	add    rsp,0x40
  415c69:	pop    rbx
  415c6a:	pop    rsi
  415c6b:	pop    rdi
  415c6c:	pop    rbp
  415c6d:	pop    r12
  415c6f:	pop    r13
  415c71:	pop    r14
  415c73:	ret    
  415c74:	lea    rdx,[rip+0x1fee5]        # 0x435b60
  415c7b:	lea    rcx,[rip+0x2005e]        # 0x435ce0
  415c82:	mov    r8d,0x44e
  415c88:	call   0x42d350
  415c8d:	jmp    0x415b56
  415c92:	lea    rdx,[rdi+0x70]
  415c96:	mov    r8d,0x5
  415c9c:	mov    rcx,rdi
  415c9f:	call   0x423f10
  415ca4:	jmp    0x415bc9
  415ca9:	nop    DWORD PTR [rax+0x0]
  415cb0:	sub    rsp,0x28
  415cb4:	movzx  r8d,WORD PTR [rdx+0x44]
  415cb9:	test   r8w,r8w
  415cbd:	je     0x415cc5
  415cbf:	test   r8b,0x40
  415cc3:	je     0x415cd1
  415cc5:	call   0x412980
  415cca:	xor    eax,eax
  415ccc:	add    rsp,0x28
  415cd0:	ret    
  415cd1:	cmp    WORD PTR [rcx],0x6ff
  415cd6:	mov    eax,0x1
  415cdb:	jbe    0x415ccc
  415cdd:	and    r8d,0x4
  415ce1:	jne    0x415cc5
  415ce3:	jmp    0x415ccc
  415ce5:	nop
  415ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415cf0:	push   rbp
  415cf1:	push   rdi
  415cf2:	push   rsi
  415cf3:	push   rbx
  415cf4:	sub    rsp,0x68
  415cf8:	test   r9d,r9d
  415cfb:	mov    rdi,rcx
  415cfe:	mov    rsi,rdx
  415d01:	mov    rbp,r8
  415d04:	movsxd rax,r9d
  415d07:	js     0x415dd0
  415d0d:	cmp    DWORD PTR [rsi+0x30],0x1
  415d11:	mov    QWORD PTR [rsp+0x50],rax
  415d16:	je     0x415db0
  415d1c:	movzx  r9d,BYTE PTR [rsi+0x9]
  415d21:	movzx  r8d,BYTE PTR [rsi+0x20]
  415d26:	xor    edx,edx
  415d28:	imul   rax,r9
  415d2c:	div    r8
  415d2f:	lea    rcx,[rax+0x1]
  415d33:	mov    QWORD PTR [rsp+0x58],rcx
  415d38:	call   0x42d6b8
  415d3d:	test   rax,rax
  415d40:	mov    rbx,rax
  415d43:	je     0x415de0
  415d49:	mov    QWORD PTR [rsp+0x48],rax
  415d4e:	lea    rax,[rsp+0x58]
  415d53:	lea    r9,[rsp+0x40]
  415d58:	xor    r8d,r8d
  415d5b:	mov    DWORD PTR [rsi+0x34],0x0
  415d62:	mov    rdx,rsi
  415d65:	mov    QWORD PTR [rsp+0x30],rax
  415d6a:	lea    rax,[rsp+0x48]
  415d6f:	mov    rcx,rdi
  415d72:	mov    QWORD PTR [rsp+0x40],rbp
  415d77:	mov    QWORD PTR [rsp+0x28],rax
  415d7c:	lea    rax,[rsp+0x50]
  415d81:	mov    QWORD PTR [rsp+0x20],rax
  415d86:	call   0x40c320
  415d8b:	cmp    rax,0xffffffffffffffff
  415d8f:	je     0x415de4
  415d91:	mov    rax,QWORD PTR [rsp+0x48]
  415d96:	mov    rdi,QWORD PTR [rsp+0xb0]
  415d9e:	sub    rax,rbx
  415da1:	mov    QWORD PTR [rdi],rax
  415da4:	mov    rax,rbx
  415da7:	add    rsp,0x68
  415dab:	pop    rbx
  415dac:	pop    rsi
  415dad:	pop    rdi
  415dae:	pop    rbp
  415daf:	ret    
  415db0:	mov    rdx,QWORD PTR [rsp+0xb0]
  415db8:	mov    QWORD PTR [rdx],rax
  415dbb:	mov    rax,rbp
  415dbe:	add    rsp,0x68
  415dc2:	pop    rbx
  415dc3:	pop    rsi
  415dc4:	pop    rdi
  415dc5:	pop    rbp
  415dc6:	ret    
  415dc7:	nop    WORD PTR [rax+rax*1+0x0]
  415dd0:	mov    rcx,r8
  415dd3:	call   0x42d610
  415dd8:	jmp    0x415d0d
  415ddd:	nop    DWORD PTR [rax]
  415de0:	xor    eax,eax
  415de2:	jmp    0x415da7
  415de4:	mov    rcx,rbx
  415de7:	call   0x42d6f8
  415dec:	xor    eax,eax
  415dee:	jmp    0x415da7
  415df0:	push   r12
  415df2:	push   rbp
  415df3:	push   rdi
  415df4:	push   rsi
  415df5:	push   rbx
  415df6:	sub    rsp,0x40
  415dfa:	test   rdx,rdx
  415dfd:	mov    rbx,rcx
  415e00:	mov    rsi,rdx
  415e03:	mov    QWORD PTR [rsp+0x30],0x0
  415e0c:	mov    QWORD PTR [rsp+0x38],0x0
  415e15:	je     0x415f80
  415e1b:	mov    rdi,QWORD PTR [rdx+0x8]
  415e1f:	test   rdi,rdi
  415e22:	je     0x415f80
  415e28:	cmp    QWORD PTR [rdx],0x0
  415e2c:	je     0x415f80
  415e32:	mov    rcx,rdi
  415e35:	call   0x42d610
  415e3a:	mov    rdx,QWORD PTR [rbx+0x68]
  415e3e:	lea    rcx,[rsp+0x30]
  415e43:	mov    r9d,eax
  415e46:	mov    r8,rdi
  415e49:	mov    QWORD PTR [rsp+0x20],rcx
  415e4e:	mov    rcx,rbx
  415e51:	mov    rdx,QWORD PTR [rdx]
  415e54:	call   0x415cf0
  415e59:	test   rax,rax
  415e5c:	mov    rbp,rax
  415e5f:	je     0x415feb
  415e65:	mov    rdi,QWORD PTR [rsi]
  415e68:	mov    rcx,rdi
  415e6b:	call   0x42d610
  415e70:	mov    rdx,QWORD PTR [rbx+0x68]
  415e74:	lea    rcx,[rsp+0x38]
  415e79:	mov    r9d,eax
  415e7c:	mov    r8,rdi
  415e7f:	mov    QWORD PTR [rsp+0x20],rcx
  415e84:	mov    rcx,rbx
  415e87:	mov    rdx,QWORD PTR [rdx]
  415e8a:	call   0x415cf0
  415e8f:	test   rax,rax
  415e92:	mov    r12,rax
  415e95:	je     0x415fdd
  415e9b:	mov    r8,QWORD PTR [rsp+0x38]
  415ea0:	add    r8d,DWORD PTR [rsp+0x30]
  415ea5:	mov    rcx,rbx
  415ea8:	mov    eax,DWORD PTR [rsi+0x10]
  415eab:	lea    edi,[r8+0xa]
  415eaf:	add    r8d,0xe
  415eb3:	test   eax,eax
  415eb5:	cmovne edi,r8d
  415eb9:	lea    edx,[rdi+0x16]
  415ebc:	call   0x424140
  415ec1:	mov    edx,0x12
  415ec6:	mov    rcx,rbx
  415ec9:	call   0x424140
  415ece:	mov    edx,0x2
  415ed3:	mov    rcx,rbx
  415ed6:	call   0x424180
  415edb:	lea    rdx,[rbx+0x75]
  415edf:	mov    r8d,0x8
  415ee5:	mov    rcx,rbx
  415ee8:	call   0x423f10
  415eed:	mov    edx,0x1
  415ef2:	mov    rcx,rbx
  415ef5:	call   0x424140
  415efa:	test   edi,edi
  415efc:	je     0x415f71
  415efe:	mov    edx,edi
  415f00:	mov    rcx,rbx
  415f03:	call   0x424140
  415f08:	mov    edx,0x1
  415f0d:	mov    rcx,rbx
  415f10:	call   0x424180
  415f15:	movsx  edx,WORD PTR [rsp+0x30]
  415f1a:	mov    rcx,rbx
  415f1d:	call   0x424180
  415f22:	mov    r8,QWORD PTR [rsp+0x30]
  415f27:	mov    rdx,rbp
  415f2a:	mov    rcx,rbx
  415f2d:	call   0x423f10
  415f32:	movsx  edx,WORD PTR [rsp+0x38]
  415f37:	mov    rcx,rbx
  415f3a:	call   0x424180
  415f3f:	mov    r8,QWORD PTR [rsp+0x38]
  415f44:	mov    rdx,r12
  415f47:	mov    rcx,rbx
  415f4a:	call   0x423f10
  415f4f:	mov    edx,DWORD PTR [rsi+0x10]
  415f52:	test   edx,edx
  415f54:	jne    0x415fd0
  415f56:	cmp    r12,QWORD PTR [rsi]
  415f59:	je     0x415f63
  415f5b:	mov    rcx,r12
  415f5e:	call   0x42d6f8
  415f63:	cmp    rbp,QWORD PTR [rsi+0x8]
  415f67:	je     0x415f71
  415f69:	mov    rcx,rbp
  415f6c:	call   0x42d6f8
  415f71:	xor    eax,eax
  415f73:	add    rsp,0x40
  415f77:	pop    rbx
  415f78:	pop    rsi
  415f79:	pop    rdi
  415f7a:	pop    rbp
  415f7b:	pop    r12
  415f7d:	ret    
  415f7e:	xchg   ax,ax
  415f80:	mov    rcx,rbx
  415f83:	mov    edx,0x16
  415f88:	call   0x424140
  415f8d:	mov    rcx,rbx
  415f90:	mov    edx,0x12
  415f95:	call   0x424140
  415f9a:	mov    rcx,rbx
  415f9d:	mov    edx,0x2
  415fa2:	call   0x424180
  415fa7:	lea    rdx,[rbx+0x75]
  415fab:	mov    rcx,rbx
  415fae:	mov    r8d,0x8
  415fb4:	call   0x423f10
  415fb9:	mov    edx,0x1
  415fbe:	mov    rcx,rbx
  415fc1:	call   0x424140
  415fc6:	jmp    0x415f71
  415fc8:	nop    DWORD PTR [rax+rax*1+0x0]
  415fd0:	mov    rcx,rbx
  415fd3:	call   0x424140
  415fd8:	jmp    0x415f56
  415fdd:	cmp    rbp,QWORD PTR [rsi+0x8]
  415fe1:	je     0x415feb
  415fe3:	mov    rcx,rbp
  415fe6:	call   0x42d6f8
  415feb:	xor    edx,edx
  415fed:	mov    rcx,rbx
  415ff0:	call   0x423970
  415ff5:	mov    eax,0xffffffff
  415ffa:	jmp    0x415f73
  415fff:	nop
  416000:	push   r12
  416002:	push   rbp
  416003:	push   rdi
  416004:	push   rsi
  416005:	push   rbx
  416006:	sub    rsp,0x40
  41600a:	test   r8b,0x1
  41600e:	mov    rbx,rcx
  416011:	mov    rsi,rdx
  416014:	mov    edi,r8d
  416017:	je     0x416184
  41601d:	mov    rbp,QWORD PTR [rip+0x25e0c]        # 0x43be30
  416024:	mov    rax,QWORD PTR [rdx+0x38]
  416028:	mov    edx,DWORD PTR [rbp+0x0]
  41602b:	mov    r12,QWORD PTR [rax]
  41602e:	test   edx,edx
  416030:	jne    0x4161d0
  416036:	cmp    WORD PTR [rbx],0x6ff
  41603b:	ja     0x4160d1
  416041:	movzx  edx,r12b
  416045:	mov    rcx,rbx
  416048:	call   0x4241d0
  41604d:	mov    rax,QWORD PTR [rsi+0x38]
  416051:	movsxd r8,r12d
  416054:	mov    rcx,rbx
  416057:	lea    rdx,[rax+0x8]
  41605b:	call   0x423f10
  416060:	mov    eax,DWORD PTR [rbp+0x0]
  416063:	test   eax,eax
  416065:	jne    0x4161b0
  41606b:	movzx  edx,BYTE PTR [rsi+0x58]
  41606f:	mov    rcx,rbx
  416072:	shr    dl,0x5
  416075:	and    edx,0x1
  416078:	and    edi,0x4
  41607b:	je     0x416164
  416081:	call   0x424140
  416086:	cmp    WORD PTR [rbx],0x6ff
  41608b:	jbe    0x416174
  416091:	movzx  edx,BYTE PTR [rsi+0x1c]
  416095:	mov    rcx,rbx
  416098:	call   0x4241d0
  41609d:	mov    rax,QWORD PTR [rsi]
  4160a0:	mov    rdx,rsi
  4160a3:	mov    rcx,rbx
  4160a6:	call   QWORD PTR [rax+0x20]
  4160a9:	test   eax,eax
  4160ab:	mov    esi,eax
  4160ad:	jne    0x4161f0
  4160b3:	cmp    WORD PTR [rbx],0x6ff
  4160b8:	ja     0x4160c4
  4160ba:	xor    edx,edx
  4160bc:	mov    rcx,rbx
  4160bf:	call   0x4241d0
  4160c4:	mov    eax,esi
  4160c6:	add    rsp,0x40
  4160ca:	pop    rbx
  4160cb:	pop    rsi
  4160cc:	pop    rdi
  4160cd:	pop    rbp
  4160ce:	pop    r12
  4160d0:	ret    
  4160d1:	mov    rdx,QWORD PTR [rsi+0x38]
  4160d5:	mov    rax,QWORD PTR [rbx+0x68]
  4160d9:	lea    rcx,[rsp+0x38]
  4160de:	mov    r9d,r12d
  4160e1:	mov    QWORD PTR [rsp+0x20],rcx
  4160e6:	mov    rcx,rbx
  4160e9:	lea    r8,[rdx+0x8]
  4160ed:	mov    rdx,QWORD PTR [rax]
  4160f0:	call   0x415cf0
  4160f5:	test   rax,rax
  4160f8:	mov    r12,rax
  4160fb:	je     0x4161f0
  416101:	mov    rdx,QWORD PTR [rsp+0x38]
  416106:	shr    rdx,1
  416109:	test   dil,0x2
  41610d:	je     0x4161a0
  416113:	add    edx,0x1
  416116:	mov    rcx,rbx
  416119:	movzx  edx,dl
  41611c:	call   0x4241d0
  416121:	lea    rdx,[rip+0x1fc1f]        # 0x435d47
  416128:	mov    r8d,0x2
  41612e:	mov    rcx,rbx
  416131:	call   0x423f10
  416136:	mov    r8,QWORD PTR [rsp+0x38]
  41613b:	mov    rdx,r12
  41613e:	mov    rcx,rbx
  416141:	call   0x423f10
  416146:	mov    rax,QWORD PTR [rsi+0x38]
  41614a:	add    rax,0x8
  41614e:	cmp    r12,rax
  416151:	je     0x416060
  416157:	mov    rcx,r12
  41615a:	call   0x42d6f8
  41615f:	jmp    0x416060
  416164:	call   0x4241d0
  416169:	cmp    WORD PTR [rbx],0x6ff
  41616e:	ja     0x416091
  416174:	mov    edx,DWORD PTR [rsi+0x8]
  416177:	mov    rcx,rbx
  41617a:	call   0x424140
  41617f:	jmp    0x416091
  416184:	xor    edx,edx
  416186:	call   0x4241d0
  41618b:	mov    rbp,QWORD PTR [rip+0x25c9e]        # 0x43be30
  416192:	jmp    0x416060
  416197:	nop    WORD PTR [rax+rax*1+0x0]
  4161a0:	movzx  edx,dl
  4161a3:	mov    rcx,rbx
  4161a6:	call   0x4241d0
  4161ab:	jmp    0x416136
  4161ad:	nop    DWORD PTR [rax]
  4161b0:	lea    r8,[rip+0x1fb99]        # 0x435d50
  4161b7:	lea    rcx,[rip+0x1f9a2]        # 0x435b60
  4161be:	mov    edx,0x66a2
  4161c3:	call   0x40d350
  4161c8:	jmp    0x41606b
  4161cd:	nop    DWORD PTR [rax]
  4161d0:	lea    r8,[rip+0x1fb49]        # 0x435d20
  4161d7:	lea    rcx,[rip+0x1f982]        # 0x435b60
  4161de:	mov    edx,0x6482
  4161e3:	call   0x40d350
  4161e8:	jmp    0x416036
  4161ed:	nop    DWORD PTR [rax]
  4161f0:	mov    esi,0xffffffff
  4161f5:	jmp    0x4160c4
  4161fa:	nop    WORD PTR [rax+rax*1+0x0]
  416200:	push   r15
  416202:	push   r14
  416204:	push   r13
  416206:	push   r12
  416208:	push   rbp
  416209:	push   rdi
  41620a:	push   rsi
  41620b:	push   rbx
  41620c:	sub    rsp,0x38
  416210:	movzx  r15d,BYTE PTR [rcx+0x85]
  416218:	mov    rsi,rcx
  41621b:	mov    rbp,rdx
  41621e:	mov    rdi,r8
  416221:	mov    DWORD PTR [rsp+0x98],r9d
  416229:	sar    r15d,0x3
  41622d:	and    r15d,0x1
  416231:	mov    DWORD PTR [rsp+0x2c],r15d
  416236:	je     0x416370
  41623c:	mov    edx,0x20
  416241:	mov    r12d,0x2
  416247:	call   0x4241d0
  41624c:	xor    eax,eax
  41624e:	cmp    WORD PTR [rdi],0x0
  416252:	je     0x416350
  416258:	mov    r14d,DWORD PTR [rsp+0x98]
  416260:	xor    r13d,r13d
  416263:	mov    r12d,0x2
  416269:	xor    r15d,r15d
  41626c:	and    r14d,0x1
  416270:	mov    rax,QWORD PTR [rbp+0x0]
  416274:	test   r14d,r14d
  416277:	mov    ebx,0x8
  41627c:	mov    rdx,QWORD PTR [rax+r13*1]
  416280:	je     0x41628c
  416282:	mov    rax,QWORD PTR [rdx+0x38]
  416286:	mov    rbx,QWORD PTR [rax]
  416289:	add    ebx,0x8
  41628c:	mov    rax,QWORD PTR [rdx]
  41628f:	mov    rcx,rsi
  416292:	add    r15d,0x1
  416296:	add    r13,0x8
  41629a:	call   QWORD PTR [rax+0x18]
  41629d:	add    ebx,eax
  41629f:	movzx  eax,WORD PTR [rdi]
  4162a2:	add    r12d,ebx
  4162a5:	cmp    r15d,eax
  4162a8:	jl     0x416270
  4162aa:	mov    edx,DWORD PTR [rsp+0x2c]
  4162ae:	test   edx,edx
  4162b0:	jne    0x416350
  4162b6:	movsx  edx,r12w
  4162ba:	mov    rcx,rsi
  4162bd:	call   0x424180
  4162c2:	movsx  edx,WORD PTR [rdi]
  4162c5:	mov    rcx,rsi
  4162c8:	xor    ebx,ebx
  4162ca:	call   0x424180
  4162cf:	cmp    WORD PTR [rdi],0x0
  4162d3:	je     0x4162fb
  4162d5:	mov    rax,QWORD PTR [rbp+0x0]
  4162d9:	mov    r8d,DWORD PTR [rsp+0x98]
  4162e1:	mov    rcx,rsi
  4162e4:	mov    rdx,QWORD PTR [rax+rbx*8]
  4162e8:	call   0x416000
  4162ed:	movzx  eax,WORD PTR [rdi]
  4162f0:	lea    edx,[rbx+0x1]
  4162f3:	add    rbx,0x1
  4162f7:	cmp    edx,eax
  4162f9:	jl     0x4162d5
  4162fb:	mov    edx,0xd7
  416300:	mov    rcx,rsi
  416303:	xor    r12d,r12d
  416306:	call   0x4241d0
  41630b:	xor    ebx,ebx
  41630d:	cmp    WORD PTR [rdi],0x0
  416311:	je     0x416335
  416313:	mov    rax,QWORD PTR [rbp+0x0]
  416317:	xor    r8d,r8d
  41631a:	mov    rcx,rsi
  41631d:	add    ebx,0x1
  416320:	mov    rdx,QWORD PTR [rax+r12*1]
  416324:	add    r12,0x8
  416328:	mov    rax,QWORD PTR [rdx]
  41632b:	call   QWORD PTR [rax+0x28]
  41632e:	movzx  eax,WORD PTR [rdi]
  416331:	cmp    ebx,eax
  416333:	jl     0x416313
  416335:	add    rsp,0x38
  416339:	pop    rbx
  41633a:	pop    rsi
  41633b:	pop    rdi
  41633c:	pop    rbp
  41633d:	pop    r12
  41633f:	pop    r13
  416341:	pop    r14
  416343:	pop    r15
  416345:	ret    
  416346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416350:	lea    edx,[rax+rax*2]
  416353:	mov    rcx,rsi
  416356:	add    edx,r12d
  416359:	call   0x424140
  41635e:	or     DWORD PTR [rsp+0x98],0x4
  416366:	jmp    0x4162c2
  41636b:	nop    DWORD PTR [rax+rax*1+0x0]
  416370:	mov    edx,0xec
  416375:	call   0x4241d0
  41637a:	cmp    WORD PTR [rdi],0x0
  41637e:	mov    edx,0x2
  416383:	jne    0x416258
  416389:	jmp    0x4162ba
  41638e:	xchg   ax,ax
  416390:	push   r12
  416392:	push   rbp
  416393:	push   rdi
  416394:	push   rsi
  416395:	push   rbx
  416396:	sub    rsp,0x40
  41639a:	mov    rbp,rdx
  41639d:	lea    rbx,[rsp+0x20]
  4163a2:	mov    edx,0xa
  4163a7:	mov    rsi,rcx
  4163aa:	mov    rdi,r8
  4163ad:	call   0x424180
  4163b2:	lea    rdx,[rip+0x1f9ba]        # 0x435d73
  4163b9:	mov    rcx,rbx
  4163bc:	call   0x4156a0
  4163c1:	mov    rdx,rbx
  4163c4:	mov    r8,rax
  4163c7:	mov    rcx,rsi
  4163ca:	call   0x423f10
  4163cf:	xor    edx,edx
  4163d1:	mov    rcx,rsi
  4163d4:	call   0x424180
  4163d9:	xor    edx,edx
  4163db:	mov    rcx,rsi
  4163de:	call   0x4241d0
  4163e3:	xor    edx,edx
  4163e5:	mov    rcx,rsi
  4163e8:	call   0x4241d0
  4163ed:	mov    edx,0x26
  4163f2:	mov    rcx,rsi
  4163f5:	call   0x4241d0
  4163fa:	mov    edx,0x4
  4163ff:	mov    rcx,rsi
  416402:	call   0x4241d0
  416407:	mov    edx,0x4
  41640c:	mov    rcx,rsi
  41640f:	call   0x4241d0
  416414:	mov    edx,DWORD PTR [rbp+0x0]
  416417:	mov    rcx,rsi
  41641a:	call   0x424140
  41641f:	mov    r12,QWORD PTR [rdi]
  416422:	test   r12,r12
  416425:	je     0x41646a
  416427:	cmp    WORD PTR [r12+0x8],0x0
  41642e:	je     0x41646a
  416430:	xor    ebp,ebp
  416432:	xor    edi,edi
  416434:	mov    rax,QWORD PTR [r12]
  416438:	xor    r8d,r8d
  41643b:	mov    rcx,rsi
  41643e:	add    edi,0x1
  416441:	mov    rbx,QWORD PTR [rax+rbp*1]
  416445:	add    rbp,0x8
  416449:	mov    rdx,rbx
  41644c:	call   0x416000
  416451:	mov    rax,QWORD PTR [rbx]
  416454:	xor    r8d,r8d
  416457:	mov    rdx,rbx
  41645a:	mov    rcx,rsi
  41645d:	call   QWORD PTR [rax+0x28]
  416460:	movzx  eax,WORD PTR [r12+0x8]
  416466:	cmp    edi,eax
  416468:	jl     0x416434
  41646a:	mov    DWORD PTR [rsi+0x178],0xc
  416474:	add    rsp,0x40
  416478:	pop    rbx
  416479:	pop    rsi
  41647a:	pop    rdi
  41647b:	pop    rbp
  41647c:	pop    r12
  41647e:	ret    
  41647f:	nop
  416480:	push   r15
  416482:	push   r14
  416484:	push   r13
  416486:	push   r12
  416488:	push   rbp
  416489:	push   rdi
  41648a:	push   rsi
  41648b:	push   rbx
  41648c:	sub    rsp,0x178
  416493:	movsxd r8,r8d
  416496:	mov    rdi,rcx
  416499:	mov    rbx,QWORD PTR [rdx+r8*8]
  41649d:	mov    esi,DWORD PTR [rbx+0x64]
  4164a0:	mov    r12,QWORD PTR [rbx+0x48]
  4164a4:	test   esi,esi
  4164a6:	js     0x4165b0
  4164ac:	cmp    BYTE PTR [rbx+0x18],0x2
  4164b0:	ja     0x416510
  4164b2:	mov    rdx,QWORD PTR [rbx+0x28]
  4164b6:	test   rdx,rdx
  4164b9:	je     0x416520
  4164bb:	cmp    DWORD PTR [rdx+0x30],0x1
  4164bf:	je     0x416520
  4164c1:	lea    r11,[rsp+0x70]
  4164c6:	mov    r9d,esi
  4164c9:	mov    r8,r12
  4164cc:	mov    rcx,rdi
  4164cf:	mov    QWORD PTR [rsp+0x20],r11
  4164d4:	call   0x415cf0
  4164d9:	test   rax,rax
  4164dc:	mov    rbp,rax
  4164df:	mov    esi,DWORD PTR [rsp+0x70]
  4164e3:	je     0x4167d0
  4164e9:	mov    r13d,0x1
  4164ef:	mov    ecx,DWORD PTR [rbx+0x14]
  4164f2:	lea    eax,[rcx-0x22]
  4164f5:	cmp    eax,0xcd
  4164fa:	ja     0x416730
  416500:	lea    rdx,[rip+0x1f889]        # 0x435d90
  416507:	movsxd rax,DWORD PTR [rdx+rax*4]
  41650b:	add    rdx,rax
  41650e:	jmp    rdx
  416510:	mov    rdx,QWORD PTR [rbx+0x28]
  416514:	mov    r12,QWORD PTR [r12]
  416518:	test   rdx,rdx
  41651b:	jne    0x4164bb
  41651d:	nop    DWORD PTR [rax]
  416520:	mov    rbp,r12
  416523:	xor    r13d,r13d
  416526:	jmp    0x4164ef
  416528:	nop    DWORD PTR [rax+rax*1+0x0]
  416530:	lea    rdx,[rip+0x1f852]        # 0x435d89
  416537:	mov    r8d,0x1
  41653d:	mov    rcx,rdi
  416540:	call   0x423fa0
  416545:	lea    rdx,[rip+0x1f83f]        # 0x435d8b
  41654c:	mov    r8d,0x1
  416552:	mov    rcx,rdi
  416555:	call   0x423fa0
  41655a:	movsxd r8,esi
  41655d:	mov    rdx,rbp
  416560:	mov    rcx,rdi
  416563:	add    r8,rbp
  416566:	call   0x415610
  41656b:	lea    rdx,[rip+0x1f819]        # 0x435d8b
  416572:	mov    r8d,0x1
  416578:	mov    rcx,rdi
  41657b:	call   0x423fa0
  416580:	cmp    r12,rbp
  416583:	je     0x4167a0
  416589:	test   r13b,r13b
  41658c:	je     0x4167a0
  416592:	mov    rcx,rbp
  416595:	call   0x42d6f8
  41659a:	xor    eax,eax
  41659c:	add    rsp,0x178
  4165a3:	pop    rbx
  4165a4:	pop    rsi
  4165a5:	pop    rdi
  4165a6:	pop    rbp
  4165a7:	pop    r12
  4165a9:	pop    r13
  4165ab:	pop    r14
  4165ad:	pop    r15
  4165af:	ret    
  4165b0:	cmp    WORD PTR [rcx],0x4ff
  4165b5:	ja     0x4165cf
  4165b7:	mov    eax,DWORD PTR [rbx+0x14]
  4165ba:	lea    edx,[rax-0x22]
  4165bd:	cmp    edx,0x1
  4165c0:	jbe    0x416780
  4165c6:	cmp    eax,0x63
  4165c9:	je     0x416780
  4165cf:	lea    rdx,[rip+0x1f7ab]        # 0x435d81
  4165d6:	mov    r8d,0x4
  4165dc:	mov    rcx,rdi
  4165df:	call   0x423fa0
  4165e4:	xor    eax,eax
  4165e6:	jmp    0x41659c
  4165e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4165f0:	mov    edx,DWORD PTR [rbx+0x10]
  4165f3:	call   0x40ac90
  4165f8:	lea    rdx,[rsp+0x40]
  4165fd:	mov    rcx,QWORD PTR [rdi+0x28]
  416601:	mov    DWORD PTR [rsp+0x20],0x2f
  416609:	mov    r9d,esi
  41660c:	mov    r8,rbp
  41660f:	mov    QWORD PTR [rsp+0x28],rdx
  416614:	mov    edx,eax
  416616:	call   0x427180
  41661b:	test   eax,eax
  41661d:	mov    ebx,eax
  41661f:	js     0x4167b0
  416625:	lea    rdx,[rip+0x1f75f]        # 0x435d8b
  41662c:	mov    r8d,0x1
  416632:	mov    rcx,rdi
  416635:	call   0x423fa0
  41663a:	mov    rdx,QWORD PTR [rsp+0x40]
  41663f:	movsxd r8,ebx
  416642:	mov    rcx,rdi
  416645:	add    r8,rdx
  416648:	call   0x415610
  41664d:	lea    rdx,[rip+0x1f737]        # 0x435d8b
  416654:	mov    r8d,0x1
  41665a:	mov    rcx,rdi
  41665d:	call   0x423fa0
  416662:	mov    rcx,QWORD PTR [rsp+0x40]
  416667:	call   0x42d6f8
  41666c:	jmp    0x416580
  416671:	lea    rdx,[rip+0x1f70e]        # 0x435d86
  416678:	mov    r8d,0x2
  41667e:	mov    rcx,rdi
  416681:	call   0x423f10
  416686:	test   esi,esi
  416688:	je     0x4167da
  41668e:	lea    eax,[rsi-0x1]
  416691:	mov    rbx,rbp
  416694:	xor    r8d,r8d
  416697:	lea    r11,[rsp+0x70]
  41669c:	mov    r14,QWORD PTR [rip+0x2570d]        # 0x43bdb0
  4166a3:	mov    rsi,rax
  4166a6:	lea    r15,[rbp+rax*1+0x1]
  4166ab:	jmp    0x4166b9
  4166ad:	nop    DWORD PTR [rax]
  4166b0:	add    rbx,0x1
  4166b4:	cmp    rbx,r15
  4166b7:	je     0x416714
  4166b9:	movzx  r10d,BYTE PTR [rbx]
  4166bd:	movsxd rdx,r8d
  4166c0:	lea    eax,[r8+0x1]
  4166c4:	add    r8d,0x2
  4166c8:	cdqe   
  4166ca:	shr    r10b,0x4
  4166ce:	movsx  r10,r10b
  4166d2:	movzx  ecx,BYTE PTR [r14+r10*1]
  4166d7:	mov    BYTE PTR [rsp+rdx*1+0x70],cl
  4166db:	movzx  edx,BYTE PTR [rbx]
  4166de:	and    edx,0xf
  4166e1:	cmp    r8d,0x100
  4166e8:	movzx  edx,BYTE PTR [r14+rdx*1]
  4166ed:	mov    BYTE PTR [rsp+rax*1+0x70],dl
  4166f1:	jne    0x4166b0
  4166f3:	mov    rdx,r11
  4166f6:	mov    rcx,rdi
  4166f9:	add    rbx,0x1
  4166fd:	mov    QWORD PTR [rsp+0x38],r11
  416702:	call   0x423fa0
  416707:	xor    r8d,r8d
  41670a:	cmp    rbx,r15
  41670d:	mov    r11,QWORD PTR [rsp+0x38]
  416712:	jne    0x4166b9
  416714:	lea    rbp,[rbp+rsi*1+0x1]
  416719:	mov    rdx,r11
  41671c:	mov    rcx,rdi
  41671f:	call   0x423fa0
  416724:	jmp    0x416580
  416729:	nop    DWORD PTR [rax+0x0]
  416730:	mov    edx,DWORD PTR [rbx+0x10]
  416733:	call   0x40ac90
  416738:	lea    rdx,[rsp+0x40]
  41673d:	mov    rcx,QWORD PTR [rdi+0x28]
  416741:	mov    DWORD PTR [rsp+0x20],0x2f
  416749:	mov    r9d,esi
  41674c:	mov    r8,rbp
  41674f:	mov    QWORD PTR [rsp+0x28],rdx
  416754:	mov    edx,eax
  416756:	call   0x427180
  41675b:	test   eax,eax
  41675d:	js     0x4167b0
  41675f:	mov    rdx,QWORD PTR [rsp+0x40]
  416764:	movsxd r8,eax
  416767:	mov    rcx,rdi
  41676a:	add    r8,rdx
  41676d:	call   0x415610
  416772:	jmp    0x416662
  416777:	nop    WORD PTR [rax+rax*1+0x0]
  416780:	lea    rdx,[rip+0x1f5f7]        # 0x435d7e
  416787:	mov    r8d,0x2
  41678d:	mov    rcx,rdi
  416790:	call   0x423fa0
  416795:	xor    eax,eax
  416797:	jmp    0x41659c
  41679c:	nop    DWORD PTR [rax+0x0]
  4167a0:	xor    eax,eax
  4167a2:	jmp    0x41659c
  4167a7:	nop    WORD PTR [rax+rax*1+0x0]
  4167b0:	cmp    r12,rbp
  4167b3:	je     0x4167d0
  4167b5:	test   r13b,r13b
  4167b8:	je     0x4167d0
  4167ba:	mov    rcx,rbp
  4167bd:	call   0x42d6f8
  4167c2:	mov    eax,0xffffffff
  4167c7:	jmp    0x41659c
  4167cc:	nop    DWORD PTR [rax+0x0]
  4167d0:	mov    eax,0xffffffff
  4167d5:	jmp    0x41659c
  4167da:	xor    r8d,r8d
  4167dd:	lea    r11,[rsp+0x70]
  4167e2:	jmp    0x416719
  4167e7:	nop    WORD PTR [rax+rax*1+0x0]
  4167f0:	push   rsi
  4167f1:	push   rbx
  4167f2:	sub    rsp,0x28
  4167f6:	test   rdx,rdx
  4167f9:	mov    rsi,rcx
  4167fc:	mov    rbx,rdx
  4167ff:	je     0x416805
  416801:	add    DWORD PTR [rdx+0x8],0x1
  416805:	lea    rcx,[rsi+0x160]
  41680c:	call   0x412460
  416811:	mov    QWORD PTR [rsi+0x160],rbx
  416818:	add    rsp,0x28
  41681c:	pop    rbx
  41681d:	pop    rsi
  41681e:	ret    
  41681f:	nop
  416820:	cmp    WORD PTR [rcx],0x701
  416825:	mov    BYTE PTR [rcx+0xf1],dl
  41682b:	ja     0x416830
  41682d:	repz ret 
  41682f:	nop
  416830:	xor    edx,edx
  416832:	jmp    0x415df0
  416837:	nop    WORD PTR [rax+rax*1+0x0]
  416840:	movzx  eax,BYTE PTR [rcx]
  416843:	cmp    al,0x2d
  416845:	je     0x416880
  416847:	cmp    al,0x2f
  416849:	je     0x416850
  41684b:	lea    rax,[rcx+0x1]
  41684f:	ret    
  416850:	cmp    BYTE PTR [rcx+0x1],0x2a
  416854:	lea    rax,[rcx+0x1]
  416858:	jne    0x41684b
  41685a:	nop    WORD PTR [rax+rax*1+0x0]
  416860:	add    rax,0x1
  416864:	movzx  edx,BYTE PTR [rax]
  416867:	test   dl,dl
  416869:	je     0x4168a4
  41686b:	cmp    dl,0x2a
  41686e:	jne    0x416860
  416870:	cmp    BYTE PTR [rax+0x1],0x2f
  416874:	jne    0x416860
  416876:	add    rax,0x2
  41687a:	ret    
  41687b:	nop    DWORD PTR [rax+rax*1+0x0]
  416880:	cmp    BYTE PTR [rcx+0x1],0x2d
  416884:	je     0x416898
  416886:	lea    rax,[rcx+0x1]
  41688a:	ret    
  41688b:	nop    DWORD PTR [rax+rax*1+0x0]
  416890:	cmp    al,0xa
  416892:	je     0x4168a0
  416894:	movzx  eax,BYTE PTR [rcx+0x1]
  416898:	add    rcx,0x1
  41689c:	test   al,al
  41689e:	jne    0x416890
  4168a0:	mov    rax,rcx
  4168a3:	ret    
  4168a4:	repz ret 
  4168a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4168b0:	mov    edx,0x5d
  4168b5:	mov    rax,rcx
  4168b8:	movzx  ecx,BYTE PTR [rcx]
  4168bb:	cmp    cl,0x5b
  4168be:	cmove  ecx,edx
  4168c1:	jmp    0x4168c7
  4168c3:	cmp    cl,dl
  4168c5:	je     0x4168d4
  4168c7:	add    rax,0x1
  4168cb:	movzx  edx,BYTE PTR [rax]
  4168ce:	test   dl,dl
  4168d0:	jne    0x4168c3
  4168d2:	repz ret 
  4168d4:	mov    rdx,rax
  4168d7:	add    rax,0x1
  4168db:	cmp    cl,BYTE PTR [rdx+0x1]
  4168de:	je     0x4168c7
  4168e0:	repz ret 
  4168e2:	nop    DWORD PTR [rax+0x0]
  4168e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4168f0:	sub    rsp,0x28
  4168f4:	test   rcx,rcx
  4168f7:	je     0x416911
  4168f9:	movzx  edx,BYTE PTR [rcx]
  4168fc:	cmp    dl,0x2d
  4168ff:	je     0x416940
  416901:	jg     0x416950
  416903:	cmp    dl,0x22
  416906:	je     0x416924
  416908:	cmp    dl,0x27
  41690b:	je     0x416924
  41690d:	test   dl,dl
  41690f:	jne    0x41695f
  416911:	xor    eax,eax
  416913:	add    rsp,0x28
  416917:	ret    
  416918:	nop    DWORD PTR [rax+rax*1+0x0]
  416920:	cmp    dl,al
  416922:	je     0x416980
  416924:	add    rcx,0x1
  416928:	movzx  eax,BYTE PTR [rcx]
  41692b:	test   al,al
  41692d:	jne    0x416920
  41692f:	xor    edx,edx
  416931:	cmp    dl,0x2d
  416934:	jne    0x416901
  416936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416940:	call   0x416840
  416945:	mov    rcx,rax
  416948:	jmp    0x4168f9
  41694a:	nop    WORD PTR [rax+rax*1+0x0]
  416950:	cmp    dl,0x3f
  416953:	je     0x416970
  416955:	cmp    dl,0x5b
  416958:	je     0x4169a0
  41695a:	cmp    dl,0x2f
  41695d:	je     0x416940
  41695f:	movzx  edx,BYTE PTR [rcx+0x1]
  416963:	add    rcx,0x1
  416967:	jmp    0x4168fc
  416969:	nop    DWORD PTR [rax+0x0]
  416970:	mov    rax,rcx
  416973:	add    rsp,0x28
  416977:	ret    
  416978:	nop    DWORD PTR [rax+rax*1+0x0]
  416980:	mov    rax,rcx
  416983:	add    rcx,0x1
  416987:	movzx  eax,BYTE PTR [rax+0x1]
  41698b:	cmp    dl,al
  41698d:	je     0x416924
  41698f:	mov    edx,eax
  416991:	jmp    0x4168fc
  416996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4169a0:	mov    edx,0x5d
  4169a5:	jmp    0x416924
  4169aa:	nop    WORD PTR [rax+rax*1+0x0]
  4169b0:	push   r12
  4169b2:	push   rbp
  4169b3:	push   rdi
  4169b4:	push   rsi
  4169b5:	push   rbx
  4169b6:	sub    rsp,0x20
  4169ba:	test   rdx,rdx
  4169bd:	mov    rbp,rcx
  4169c0:	mov    rbx,rdx
  4169c3:	mov    r12,r8
  4169c6:	je     0x416a8f
  4169cc:	lea    rax,[rbx-0x1]
  4169d0:	xor    esi,esi
  4169d2:	jmp    0x4169d7
  4169d4:	add    esi,0x1
  4169d7:	lea    rcx,[rax+0x1]
  4169db:	call   0x4168f0
  4169e0:	test   rax,rax
  4169e3:	jne    0x4169d4
  4169e5:	test   esi,esi
  4169e7:	je     0x416a65
  4169e9:	movzx  eax,WORD PTR [r12+0x8]
  4169ef:	cmp    eax,esi
  4169f1:	jl     0x416aad
  4169f7:	cmp    WORD PTR [rbp+0x0],0x701
  4169fd:	mov    BYTE PTR [rbp+0xf1],0x1
  416a04:	ja     0x416a80
  416a06:	xor    edi,edi
  416a08:	jmp    0x416a37
  416a0a:	nop    WORD PTR [rax+rax*1+0x0]
  416a10:	mov    r8d,eax
  416a13:	mov    rdx,rbx
  416a16:	mov    rcx,rbp
  416a19:	sub    r8d,ebx
  416a1c:	lea    rbx,[rsi+0x1]
  416a20:	call   0x423fa0
  416a25:	mov    rdx,QWORD PTR [r12]
  416a29:	mov    r8d,edi
  416a2c:	mov    rcx,rbp
  416a2f:	add    edi,0x1
  416a32:	call   0x416480
  416a37:	mov    rcx,rbx
  416a3a:	call   0x4168f0
  416a3f:	test   rax,rax
  416a42:	mov    rsi,rax
  416a45:	jne    0x416a10
  416a47:	mov    r8d,0xffffffff
  416a4d:	mov    rdx,rbx
  416a50:	mov    rcx,rbp
  416a53:	call   0x423fa0
  416a58:	xor    eax,eax
  416a5a:	add    rsp,0x20
  416a5e:	pop    rbx
  416a5f:	pop    rsi
  416a60:	pop    rdi
  416a61:	pop    rbp
  416a62:	pop    r12
  416a64:	ret    
  416a65:	cmp    WORD PTR [rbp+0x0],0x701
  416a6b:	mov    BYTE PTR [rbp+0xf1],0x1
  416a72:	jbe    0x416a47
  416a74:	xor    edx,edx
  416a76:	mov    rcx,rbp
  416a79:	call   0x415df0
  416a7e:	jmp    0x416a47
  416a80:	xor    edx,edx
  416a82:	mov    rcx,rbp
  416a85:	call   0x415df0
  416a8a:	jmp    0x416a06
  416a8f:	lea    rdx,[rip+0x1f0ca]        # 0x435b60
  416a96:	lea    rcx,[rip+0x1f62b]        # 0x4360c8
  416a9d:	mov    r8d,0xcec
  416aa3:	call   0x42d350
  416aa8:	jmp    0x4169cc
  416aad:	mov    eax,0xffffffff
  416ab2:	jmp    0x416a5a
  416ab4:	xchg   ax,ax
  416ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416ac0:	push   rbx
  416ac1:	sub    rsp,0x20
  416ac5:	xor    ebx,ebx
  416ac7:	lea    rax,[rcx-0x1]
  416acb:	jmp    0x416ad3
  416acd:	nop    DWORD PTR [rax]
  416ad0:	add    ebx,0x1
  416ad3:	lea    rcx,[rax+0x1]
  416ad7:	call   0x4168f0
  416adc:	test   rax,rax
  416adf:	jne    0x416ad0
  416ae1:	mov    eax,ebx
  416ae3:	add    rsp,0x20
  416ae7:	pop    rbx
  416ae8:	ret    
  416ae9:	nop    DWORD PTR [rax+0x0]
  416af0:	movsxd rax,DWORD PTR [rdx+0x20]
  416af4:	test   rax,rax
  416af7:	jne    0x416b15
  416af9:	mov    r8d,DWORD PTR [rdx+0x1c]
  416afd:	mov    r9,QWORD PTR [rip+0x2530c]        # 0x43be10
  416b04:	movsxd rax,DWORD PTR [rdx+0x10]
  416b08:	test   BYTE PTR [r9+r8*1],0x20
  416b0d:	lea    rcx,[rax+rax*1]
  416b11:	cmovne rax,rcx
  416b15:	movzx  ecx,BYTE PTR [rdx+0x18]
  416b19:	cmp    cl,0x2
  416b1c:	je     0x416b72
  416b1e:	cmp    cl,0x4
  416b21:	je     0x416b50
  416b23:	cmp    cl,0x1
  416b26:	je     0x416b30
  416b28:	repz ret 
  416b2a:	nop    WORD PTR [rax+rax*1+0x0]
  416b30:	cmp    rax,0xff
  416b36:	mov    edx,0xff
  416b3b:	cmova  rax,rdx
  416b3f:	mov    dl,0x1
  416b41:	test   rax,rax
  416b44:	cmove  rax,rdx
  416b48:	ret    
  416b49:	nop    DWORD PTR [rax+0x0]
  416b50:	cmp    DWORD PTR [rdx+0x1c],0x63
  416b54:	je     0x416ba0
  416b56:	cmp    rax,0x7fffffff
  416b5c:	mov    edx,0x7fffffff
  416b61:	cmova  rax,rdx
  416b65:	mov    edx,0x1
  416b6a:	test   rax,rax
  416b6d:	cmove  rax,rdx
  416b71:	ret    
  416b72:	mov    edx,DWORD PTR [rdx+0x1c]
  416b75:	mov    ecx,0x1f40
  416b7a:	and    edx,0xfffffff7
  416b7d:	cmp    edx,0xe7
  416b83:	sete   dl
  416b86:	movzx  edx,dl
  416b89:	add    rdx,0x1
  416b8d:	cmp    rax,0x1f40
  416b93:	cmova  rax,rcx
  416b97:	cmp    rdx,rax
  416b9a:	cmovae rax,rdx
  416b9e:	ret    
  416b9f:	nop
  416ba0:	cmp    rax,0x7ffffffe
  416ba6:	mov    edx,0x7ffffffe
  416bab:	cmova  rax,rdx
  416baf:	mov    edx,0x2
  416bb4:	cmp    rax,0x2
  416bb8:	cmovb  rax,rdx
  416bbc:	ret    
  416bbd:	nop    DWORD PTR [rax]
  416bc0:	push   r13
  416bc2:	push   r12
  416bc4:	push   rbp
  416bc5:	push   rdi
  416bc6:	push   rsi
  416bc7:	push   rbx
  416bc8:	sub    rsp,0x28
  416bcc:	cmp    WORD PTR [rcx],0x700
  416bd1:	mov    r12,rdx
  416bd4:	mov    r13,rcx
  416bd7:	mov    rsi,r8
  416bda:	sbb    ebx,ebx
  416bdc:	call   0x416af0
  416be1:	mov    edx,DWORD PTR [r12+0x20]
  416be6:	mov    ecx,DWORD PTR [r12+0x1c]
  416beb:	mov    rdi,rax
  416bee:	mov    ebp,eax
  416bf0:	and    ebx,0xffffe1bf
  416bf6:	add    ebx,0x1f40
  416bfc:	call   0x40ac90
  416c01:	lea    r9d,[rax-0x22]
  416c05:	cmp    r9d,0xcd
  416c0c:	ja     0x416c89
  416c0e:	lea    r10,[rip+0x1f643]        # 0x436258
  416c15:	movsxd rax,DWORD PTR [r10+r9*4]
  416c19:	add    r10,rax
  416c1c:	jmp    r10
  416c1f:	nop
  416c20:	lea    rdx,[rip+0x1f55d]        # 0x436184
  416c27:	nop    WORD PTR [rax+rax*1+0x0]
  416c30:	test   ebp,ebp
  416c32:	mov    r8d,0x1
  416c38:	je     0x416c42
  416c3a:	cmp    ebp,ebx
  416c3c:	cmovbe ebx,ebp
  416c3f:	mov    r8d,ebx
  416c42:	mov    rcx,rsi
  416c45:	call   0x42d648
  416c4a:	xor    eax,eax
  416c4c:	add    rsp,0x28
  416c50:	pop    rbx
  416c51:	pop    rsi
  416c52:	pop    rdi
  416c53:	pop    rbp
  416c54:	pop    r12
  416c56:	pop    r13
  416c58:	ret    
  416c59:	nop    DWORD PTR [rax+0x0]
  416c60:	lea    rdx,[rip+0x1f518]        # 0x43617f
  416c67:	jmp    0x416c30
  416c69:	nop    DWORD PTR [rax+0x0]
  416c70:	lea    rdx,[rip+0x1eee9]        # 0x435b60
  416c77:	lea    rcx,[rip+0x1f5c4]        # 0x436242
  416c7e:	mov    r8d,0x373
  416c84:	call   0x42d350
  416c89:	mov    rax,QWORD PTR [rip+0x251a0]        # 0x43be30
  416c90:	mov    eax,DWORD PTR [rax]
  416c92:	test   eax,eax
  416c94:	jne    0x416f2c
  416c9a:	mov    eax,0xffffffff
  416c9f:	mov    BYTE PTR [rsi],0x0
  416ca2:	add    rsp,0x28
  416ca6:	pop    rbx
  416ca7:	pop    rsi
  416ca8:	pop    rdi
  416ca9:	pop    rbp
  416caa:	pop    r12
  416cac:	pop    r13
  416cae:	ret    
  416caf:	nop
  416cb0:	lea    rdx,[rip+0x1f417]        # 0x4360ce
  416cb7:	movzx  r9d,BYTE PTR [r12+0x1a]
  416cbd:	movzx  r8d,BYTE PTR [r12+0x19]
  416cc3:	mov    rcx,rsi
  416cc6:	call   0x42d648
  416ccb:	xor    eax,eax
  416ccd:	jmp    0x416c4c
  416cd2:	lea    rdx,[rip+0x1f543]        # 0x43621c
  416cd9:	jmp    0x416c30
  416cde:	xchg   ax,ax
  416ce0:	lea    rdx,[rip+0x1f531]        # 0x436218
  416ce7:	jmp    0x416c30
  416cec:	nop    DWORD PTR [rax+0x0]
  416cf0:	lea    rdx,[rip+0x1f514]        # 0x43620b
  416cf7:	jmp    0x416c30
  416cfc:	nop    DWORD PTR [rax+0x0]
  416d00:	lea    rdx,[rip+0x1f50a]        # 0x436211
  416d07:	jmp    0x416c30
  416d0c:	nop    DWORD PTR [rax+0x0]
  416d10:	lea    rdx,[rip+0x1f4ad]        # 0x4361c4
  416d17:	jmp    0x416c30
  416d1c:	nop    DWORD PTR [rax+0x0]
  416d20:	lea    rdx,[rip+0x1f4a8]        # 0x4361cf
  416d27:	jmp    0x416c30
  416d2c:	nop    DWORD PTR [rax+0x0]
  416d30:	lea    rdx,[rip+0x1f49d]        # 0x4361d4
  416d37:	jmp    0x416c30
  416d3c:	nop    DWORD PTR [rax+0x0]
  416d40:	lea    rdx,[rip+0x1f3f9]        # 0x436140
  416d47:	jmp    0x416c30
  416d4c:	nop    DWORD PTR [rax+0x0]
  416d50:	lea    rdx,[rip+0x1f3fb]        # 0x436152
  416d57:	jmp    0x416c30
  416d5c:	nop    DWORD PTR [rax+0x0]
  416d60:	lea    rdx,[rip+0x1f49b]        # 0x436202
  416d67:	jmp    0x416c30
  416d6c:	nop    DWORD PTR [rax+0x0]
  416d70:	lea    rdx,[rip+0x1f46b]        # 0x4361e2
  416d77:	jmp    0x416c30
  416d7c:	nop    DWORD PTR [rax+0x0]
  416d80:	lea    rdx,[rip+0x1f3d7]        # 0x43615e
  416d87:	jmp    0x416c30
  416d8c:	nop    DWORD PTR [rax+0x0]
  416d90:	lea    rdx,[rip+0x1f467]        # 0x4361fe
  416d97:	jmp    0x416c30
  416d9c:	nop    DWORD PTR [rax+0x0]
  416da0:	cmp    WORD PTR [r13+0x0],0x6ff
  416da7:	jbe    0x416c9a
  416dad:	mov    ebp,edi
  416daf:	mov    ebx,0xfa0
  416db4:	lea    rdx,[rip+0x1f3da]        # 0x436195
  416dbb:	shr    ebp,1
  416dbd:	jmp    0x416c30
  416dc2:	lea    rdx,[rip+0x1f45c]        # 0x436225
  416dc9:	jmp    0x416c30
  416dce:	xchg   ax,ax
  416dd0:	lea    rdx,[rip+0x1f462]        # 0x436239
  416dd7:	jmp    0x416c30
  416ddc:	nop    DWORD PTR [rax+0x0]
  416de0:	lea    rdx,[rip+0x1f37f]        # 0x436166
  416de7:	jmp    0x416c30
  416dec:	nop    DWORD PTR [rax+0x0]
  416df0:	lea    rdx,[rip+0x1f37e]        # 0x436175
  416df7:	jmp    0x416c30
  416dfc:	nop    DWORD PTR [rax+0x0]
  416e00:	cmp    BYTE PTR [r12+0x18],0x8
  416e06:	lea    rdx,[rip+0x1f420]        # 0x43622d
  416e0d:	lea    rax,[rip+0x1f302]        # 0x436116
  416e14:	cmove  rdx,rax
  416e18:	jmp    0x416c30
  416e1d:	nop    DWORD PTR [rax]
  416e20:	lea    rdx,[rip+0x1f3c1]        # 0x4361e8
  416e27:	jmp    0x416c30
  416e2c:	nop    DWORD PTR [rax+0x0]
  416e30:	lea    rdx,[rip+0x1f2a6]        # 0x4360dd
  416e37:	jmp    0x416cb7
  416e3c:	nop    DWORD PTR [rax+0x0]
  416e40:	cmp    BYTE PTR [r12+0x18],0x8
  416e46:	je     0x416f5b
  416e4c:	cmp    WORD PTR [r13+0x0],0x6ff
  416e53:	jbe    0x416c9a
  416e59:	mov    ebp,edi
  416e5b:	mov    ebx,0xfa0
  416e60:	lea    rdx,[rip+0x1f285]        # 0x4360ec
  416e67:	shr    ebp,1
  416e69:	jmp    0x416c30
  416e6e:	xchg   ax,ax
  416e70:	cmp    WORD PTR [r13+0x0],0x6ff
  416e77:	jbe    0x416c9a
  416e7d:	lea    rdx,[rip+0x1f31b]        # 0x43619f
  416e84:	jmp    0x416c30
  416e89:	nop    DWORD PTR [rax+0x0]
  416e90:	cmp    WORD PTR [r13+0x0],0x6ff
  416e97:	jbe    0x416c9a
  416e9d:	lea    rdx,[rip+0x1f2e5]        # 0x436189
  416ea4:	jmp    0x416c30
  416ea9:	nop    DWORD PTR [rax+0x0]
  416eb0:	lea    rdx,[rip+0x1f26c]        # 0x436123
  416eb7:	jmp    0x416c30
  416ebc:	nop    DWORD PTR [rax+0x0]
  416ec0:	lea    rdx,[rip+0x1f26c]        # 0x436133
  416ec7:	jmp    0x416c30
  416ecc:	nop    DWORD PTR [rax+0x0]
  416ed0:	cmp    BYTE PTR [r12+0x18],0x8
  416ed6:	lea    rdx,[rip+0x1f2d9]        # 0x4361b6
  416edd:	lea    rax,[rip+0x1f223]        # 0x436107
  416ee4:	cmove  rdx,rax
  416ee8:	jmp    0x416c30
  416eed:	nop    DWORD PTR [rax]
  416ef0:	cmp    WORD PTR [r13+0x0],0x6ff
  416ef7:	jbe    0x416c9a
  416efd:	lea    rdx,[rip+0x1f2a1]        # 0x4361a5
  416f04:	jmp    0x416c30
  416f09:	nop    DWORD PTR [rax+0x0]
  416f10:	lea    rdx,[rip+0x1f2e2]        # 0x4361f9
  416f17:	jmp    0x416c30
  416f1c:	nop    DWORD PTR [rax+0x0]
  416f20:	lea    rdx,[rip+0x1f2cc]        # 0x4361f3
  416f27:	jmp    0x416c30
  416f2c:	mov    edx,DWORD PTR [r12+0x20]
  416f31:	mov    ecx,DWORD PTR [r12+0x1c]
  416f36:	call   0x40ac90
  416f3b:	lea    r8,[rip+0x1f302]        # 0x436244
  416f42:	lea    rcx,[rip+0x1ec17]        # 0x435b60
  416f49:	mov    r9d,eax
  416f4c:	mov    edx,0x3782
  416f51:	call   0x40d350
  416f56:	jmp    0x416c9a
  416f5b:	lea    rdx,[rip+0x1f197]        # 0x4360f9
  416f62:	jmp    0x416c30
  416f67:	nop    WORD PTR [rax+rax*1+0x0]
  416f70:	push   r15
  416f72:	push   r14
  416f74:	push   r13
  416f76:	push   r12
  416f78:	push   rbp
  416f79:	push   rdi
  416f7a:	push   rsi
  416f7b:	push   rbx
  416f7c:	sub    rsp,0x78
  416f80:	cmp    WORD PTR [rcx],0x6ff
  416f85:	mov    QWORD PTR [rsp+0xc0],rcx
  416f8d:	mov    rsi,rdx
  416f90:	mov    rbx,r8
  416f93:	mov    r13,r9
  416f96:	jbe    0x417170
  416f9c:	cmp    QWORD PTR [rsp+0xe0],0x0
  416fa5:	je     0x41718e
  416fab:	lea    rdx,[rsi+rbx*1]
  416faf:	mov    rcx,rsi
  416fb2:	call   0x415af0
  416fb7:	mov    ecx,0x200
  416fbc:	mov    r14d,eax
  416fbf:	call   0x42d6b8
  416fc4:	test   rax,rax
  416fc7:	mov    QWORD PTR [rsp+0x38],rax
  416fcc:	je     0x4171be
  416fd2:	xor    edi,edi
  416fd4:	test   r14d,r14d
  416fd7:	jle    0x4171b1
  416fdd:	lea    rsi,[rsp+0x38]
  416fe2:	lea    rbp,[rsp+0x40]
  416fe7:	mov    QWORD PTR [rsp+0x28],0x0
  416ff0:	mov    r15d,0x200
  416ff6:	xor    r12d,r12d
  416ff9:	xor    edi,edi
  416ffb:	lea    rbx,[rdi+0x50]
  416fff:	jmp    0x41701c
  417001:	add    r15,0x200
  417008:	mov    rcx,rsi
  41700b:	mov    rdx,r15
  41700e:	call   0x412e30
  417013:	test   rax,rax
  417016:	je     0x417150
  41701c:	cmp    r15,rbx
  41701f:	jb     0x417001
  417021:	lea    ebx,[r12+0x1]
  417026:	lea    rdx,[rip+0x1f56b]        # 0x436598
  41702d:	mov    rcx,rbp
  417030:	mov    r8d,ebx
  417033:	call   0x42d648
  417038:	test   r13,r13
  41703b:	je     0x41704b
  41703d:	movzx  eax,WORD PTR [r13+0x8]
  417042:	cmp    eax,r12d
  417045:	jg     0x4170f0
  41704b:	mov    rdx,rbp
  41704e:	mov    ecx,DWORD PTR [rdx]
  417050:	add    rdx,0x4
  417054:	lea    eax,[rcx-0x1010101]
  41705a:	not    ecx
  41705c:	and    eax,ecx
  41705e:	and    eax,0x80808080
  417063:	je     0x41704e
  417065:	mov    ecx,eax
  417067:	shr    ecx,0x10
  41706a:	test   eax,0x8080
  41706f:	cmove  eax,ecx
  417072:	lea    rcx,[rdx+0x2]
  417076:	cmove  rdx,rcx
  41707a:	add    al,al
  41707c:	movabs rax,0x2872616863726176
  417086:	sbb    rdx,0x3
  41708a:	mov    QWORD PTR [rdx],rax
  41708d:	mov    eax,0x29
  417092:	mov    DWORD PTR [rdx+0x8],0x30303034
  417099:	mov    WORD PTR [rdx+0xc],ax
  41709d:	mov    rcx,rdi
  4170a0:	add    rcx,QWORD PTR [rsp+0x38]
  4170a5:	mov    rdx,rbp
  4170a8:	call   0x4156a0
  4170ad:	add    rdi,rax
  4170b0:	cmp    ebx,r14d
  4170b3:	je     0x4171ac
  4170b9:	test   rdi,rdi
  4170bc:	je     0x4170d8
  4170be:	mov    rdx,QWORD PTR [rsp+0x38]
  4170c3:	lea    rax,[rdi+0x1]
  4170c7:	mov    BYTE PTR [rdx+rdi*1],0x2c
  4170cb:	mov    rdx,QWORD PTR [rsp+0x38]
  4170d0:	add    rdi,0x2
  4170d4:	mov    BYTE PTR [rdx+rax*1],0x0
  4170d8:	add    QWORD PTR [rsp+0x28],0x8
  4170de:	mov    r12d,ebx
  4170e1:	jmp    0x416ffb
  4170e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4170f0:	mov    r8,rbp
  4170f3:	mov    edx,DWORD PTR [r8]
  4170f6:	add    r8,0x4
  4170fa:	lea    eax,[rdx-0x1010101]
  417100:	not    edx
  417102:	and    eax,edx
  417104:	and    eax,0x80808080
  417109:	je     0x4170f3
  41710b:	mov    edx,eax
  41710d:	mov    rcx,QWORD PTR [rsp+0x28]
  417112:	shr    edx,0x10
  417115:	test   eax,0x8080
  41711a:	cmove  eax,edx
  41711d:	lea    rdx,[r8+0x2]
  417121:	cmove  r8,rdx
  417125:	add    al,al
  417127:	mov    rax,QWORD PTR [r13+0x0]
  41712b:	sbb    r8,0x3
  41712f:	mov    rdx,QWORD PTR [rax+rcx*1]
  417133:	mov    rcx,QWORD PTR [rsp+0xc0]
  41713b:	call   0x416bc0
  417140:	test   eax,eax
  417142:	jns    0x41709d
  417148:	nop    DWORD PTR [rax+rax*1+0x0]
  417150:	mov    rcx,QWORD PTR [rsp+0x38]
  417155:	call   0x42d6f8
  41715a:	xor    eax,eax
  41715c:	add    rsp,0x78
  417160:	pop    rbx
  417161:	pop    rsi
  417162:	pop    rdi
  417163:	pop    rbp
  417164:	pop    r12
  417166:	pop    r13
  417168:	pop    r14
  41716a:	pop    r15
  41716c:	ret    
  41716d:	nop    DWORD PTR [rax]
  417170:	lea    rdx,[rip+0x1e9e9]        # 0x435b60
  417177:	lea    rcx,[rip+0x1eb62]        # 0x435ce0
  41717e:	mov    r8d,0x399
  417184:	call   0x42d350
  417189:	jmp    0x416f9c
  41718e:	lea    rdx,[rip+0x1e9cb]        # 0x435b60
  417195:	lea    rcx,[rip+0x1f3f4]        # 0x436590
  41719c:	mov    r8d,0x39a
  4171a2:	call   0x42d350
  4171a7:	jmp    0x416fab
  4171ac:	mov    rax,QWORD PTR [rsp+0x38]
  4171b1:	mov    rsi,QWORD PTR [rsp+0xe0]
  4171b9:	mov    QWORD PTR [rsi],rdi
  4171bc:	jmp    0x41715c
  4171be:	xor    eax,eax
  4171c0:	jmp    0x41715c
  4171c2:	nop    DWORD PTR [rax+0x0]
  4171c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4171d0:	push   r15
  4171d2:	push   r14
  4171d4:	push   r13
  4171d6:	push   r12
  4171d8:	push   rbp
  4171d9:	push   rdi
  4171da:	push   rsi
  4171db:	push   rbx
  4171dc:	sub    rsp,0x108
  4171e3:	test   r8,r8
  4171e6:	mov    r14,rcx
  4171e9:	mov    r15,rdx
  4171ec:	mov    r13,r8
  4171ef:	mov    rbx,r9
  4171f2:	je     0x4172c0
  4171f8:	movzx  esi,WORD PTR [r8+0x8]
  4171fd:	test   r15,r15
  417200:	je     0x4172af
  417206:	mov    edx,0x1
  41720b:	mov    rcx,r14
  41720e:	call   0x423970
  417213:	cmp    eax,0x1
  417216:	jne    0x4172af
  41721c:	mov    rcx,r15
  41721f:	call   0x42d610
  417224:	movzx  edx,WORD PTR [r14]
  417228:	mov    rdi,rax
  41722b:	mov    rbp,rax
  41722e:	cmp    dx,0x500
  417233:	je     0x4172d0
  417239:	cmp    dx,0x6ff
  41723e:	ja     0x417280
  417240:	mov    BYTE PTR [r14+0xf1],0x1
  417248:	mov    r8d,ebp
  41724b:	mov    rdx,r15
  41724e:	mov    rcx,r14
  417251:	call   0x423fa0
  417256:	mov    rcx,r14
  417259:	mov    edx,0x3
  41725e:	call   0x423970
  417263:	mov    rcx,r14
  417266:	call   0x424270
  41726b:	add    rsp,0x108
  417272:	pop    rbx
  417273:	pop    rsi
  417274:	pop    rdi
  417275:	pop    rbp
  417276:	pop    r12
  417278:	pop    r13
  41727a:	pop    r14
  41727c:	pop    r15
  41727e:	ret    
  41727f:	nop
  417280:	test   r13,r13
  417283:	je     0x417291
  417285:	cmp    WORD PTR [r13+0x8],0x0
  41728b:	jne    0x417520
  417291:	cmp    dx,0x701
  417296:	mov    BYTE PTR [r14+0xf1],0x1
  41729e:	jbe    0x417248
  4172a0:	mov    rdx,rbx
  4172a3:	mov    rcx,r14
  4172a6:	call   0x415df0
  4172ab:	test   eax,eax
  4172ad:	je     0x417248
  4172af:	mov    eax,0xffffffff
  4172b4:	jmp    0x41726b
  4172b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4172c0:	xor    esi,esi
  4172c2:	jmp    0x4171fd
  4172c7:	nop    WORD PTR [rax+rax*1+0x0]
  4172d0:	mov    rcx,r15
  4172d3:	call   0x4168f0
  4172d8:	test   rax,rax
  4172db:	je     0x4177e0
  4172e1:	lea    rax,[rdi+0x1e]
  4172e5:	mov    rcx,rax
  4172e8:	mov    QWORD PTR [rsp+0x48],rax
  4172ed:	call   0x42d6b8
  4172f2:	test   rax,rax
  4172f5:	mov    QWORD PTR [rsp+0xc8],rax
  4172fd:	je     0x4174f8
  417303:	lea    rax,[rsp+0xc8]
  41730b:	mov    rcx,r15
  41730e:	xor    r12d,r12d
  417311:	xor    ebx,ebx
  417313:	xor    ebp,ebp
  417315:	mov    QWORD PTR [rsp+0x150],r14
  41731d:	mov    QWORD PTR [rsp+0x58],rax
  417322:	lea    rax,[rsp+0xd0]
  41732a:	mov    QWORD PTR [rsp+0x50],rax
  41732f:	call   0x4168f0
  417334:	test   rax,rax
  417337:	mov    rdi,rax
  41733a:	je     0x4173fa
  417340:	mov    rsi,rax
  417343:	sub    rsi,r15
  417346:	lea    r14,[rsi+rbx*1]
  41734a:	lea    rax,[r14+0xc]
  41734e:	cmp    rax,QWORD PTR [rsp+0x48]
  417353:	jae    0x4174d0
  417359:	add    rbx,QWORD PTR [rsp+0xc8]
  417361:	mov    r8,rsi
  417364:	mov    rdx,r15
  417367:	lea    esi,[rbp+0x1]
  41736a:	mov    rcx,rbx
  41736d:	call   0x42d6a8
  417372:	mov    rcx,r14
  417375:	add    rcx,QWORD PTR [rsp+0xc8]
  41737d:	lea    rdx,[rip+0x1e996]        # 0x435d1a
  417384:	mov    r8d,esi
  417387:	call   0x42d648
  41738c:	movsxd rbx,eax
  41738f:	add    rbx,r14
  417392:	test   r13,r13
  417395:	je     0x4174f0
  41739b:	movzx  eax,WORD PTR [r13+0x8]
  4173a0:	cmp    ebp,eax
  4173a2:	jge    0x4174f0
  4173a8:	mov    r15,QWORD PTR [rsp+0x50]
  4173ad:	lea    rdx,[rip+0x1e966]        # 0x435d1a
  4173b4:	mov    r8d,esi
  4173b7:	mov    rcx,r15
  4173ba:	call   0x42d648
  4173bf:	mov    rax,QWORD PTR [r13+0x0]
  4173c3:	mov    rdx,r15
  4173c6:	mov    rcx,QWORD PTR [rax+r12*1]
  4173ca:	add    r12,0x8
  4173ce:	add    rcx,0x38
  4173d2:	call   0x41d6f0
  4173d7:	test   rax,rax
  4173da:	je     0x4174f0
  4173e0:	lea    r15,[rdi+0x1]
  4173e4:	mov    ebp,esi
  4173e6:	mov    rcx,r15
  4173e9:	call   0x4168f0
  4173ee:	test   rax,rax
  4173f1:	mov    rdi,rax
  4173f4:	jne    0x417340
  4173fa:	mov    rcx,r15
  4173fd:	mov    r14,QWORD PTR [rsp+0x150]
  417405:	call   0x42d610
  41740a:	lea    rdi,[rax+rbx*1]
  41740e:	mov    rsi,rax
  417411:	lea    rax,[rdi+0xc]
  417415:	cmp    QWORD PTR [rsp+0x48],rax
  41741a:	jbe    0x4176d0
  417420:	add    rbx,QWORD PTR [rsp+0xc8]
  417428:	mov    rdx,r15
  41742b:	mov    r8,rsi
  41742e:	mov    rcx,rbx
  417431:	call   0x42d6a8
  417436:	mov    rax,QWORD PTR [rsp+0xc8]
  41743e:	mov    BYTE PTR [rax+rdi*1],0x0
  417442:	mov    r15,QWORD PTR [rsp+0xc8]
  41744a:	test   r15,r15
  41744d:	je     0x417505
  417453:	mov    rsi,r15
  417456:	mov    edx,0x21
  41745b:	mov    rcx,r14
  41745e:	mov    BYTE PTR [r14+0xf1],0xf
  417466:	call   0x4241d0
  41746b:	lea    edx,[rdi+0x1]
  41746e:	mov    rcx,r14
  417471:	call   0x424140
  417476:	test   r13,r13
  417479:	mov    rcx,r14
  41747c:	setne  bl
  41747f:	movzx  edx,bl
  417482:	call   0x4241d0
  417487:	mov    r8,rdi
  41748a:	mov    rdx,r15
  41748d:	mov    rcx,r14
  417490:	call   0x423f10
  417495:	test   bl,bl
  417497:	je     0x4174be
  417499:	mov    rax,QWORD PTR [r13+0x0]
  41749d:	xor    r9d,r9d
  4174a0:	lea    r8,[r13+0x8]
  4174a4:	mov    rdx,r13
  4174a7:	mov    rcx,r14
  4174aa:	mov    rax,QWORD PTR [rax]
  4174ad:	mov    rax,QWORD PTR [rax+0x38]
  4174b1:	cmp    QWORD PTR [rax],0x0
  4174b5:	setne  r9b
  4174b9:	call   0x416200
  4174be:	mov    rcx,rsi
  4174c1:	call   0x42d6f8
  4174c6:	jmp    0x417256
  4174cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4174d0:	lea    rax,[r14+0x1e]
  4174d4:	mov    rcx,QWORD PTR [rsp+0x58]
  4174d9:	mov    rdx,rax
  4174dc:	mov    QWORD PTR [rsp+0x48],rax
  4174e1:	call   0x412e30
  4174e6:	test   rax,rax
  4174e9:	jne    0x417359
  4174ef:	nop
  4174f0:	mov    r14,QWORD PTR [rsp+0x150]
  4174f8:	mov    rcx,QWORD PTR [rsp+0xc8]
  417500:	call   0x42d6f8
  417505:	xor    edx,edx
  417507:	mov    rcx,r14
  41750a:	call   0x423970
  41750f:	or     eax,0xffffffff
  417512:	jmp    0x41726b
  417517:	nop    WORD PTR [rax+rax*1+0x0]
  417520:	mov    rax,QWORD PTR [r14+0x68]
  417524:	lea    rdx,[rsp+0xa0]
  41752c:	mov    r9d,edi
  41752f:	mov    r8,r15
  417532:	mov    rcx,r14
  417535:	mov    QWORD PTR [rsp+0x20],rdx
  41753a:	mov    rdx,QWORD PTR [rax]
  41753d:	call   0x415cf0
  417542:	test   rax,rax
  417545:	mov    r12,rax
  417548:	je     0x417ac1
  41754e:	mov    rdx,rax
  417551:	add    rdx,QWORD PTR [rsp+0xa0]
  417559:	mov    rcx,rax
  41755c:	call   0x415af0
  417561:	test   eax,eax
  417563:	mov    DWORD PTR [rsp+0x48],eax
  417567:	je     0x4176f0
  41756d:	lea    rax,[rsp+0xc8]
  417575:	mov    r8,QWORD PTR [rsp+0xa0]
  41757d:	mov    r9,r13
  417580:	mov    rdx,r12
  417583:	mov    rcx,r14
  417586:	mov    QWORD PTR [rsp+0x20],rax
  41758b:	call   0x416f70
  417590:	mov    rbp,rax
  417593:	test   rbp,rbp
  417596:	je     0x417ab4
  41759c:	movzx  eax,WORD PTR [r14]
  4175a0:	mov    BYTE PTR [r14+0xf1],0x3
  4175a8:	cmp    ax,0x701
  4175ac:	ja     0x4177c0
  4175b2:	cmp    ax,0x700
  4175b6:	jbe    0x417780
  4175bc:	mov    edx,0xffffffff
  4175c1:	mov    rcx,r14
  4175c4:	call   0x424180
  4175c9:	mov    edx,0xa
  4175ce:	mov    rcx,r14
  4175d1:	call   0x424180
  4175d6:	xor    edx,edx
  4175d8:	mov    rcx,r14
  4175db:	call   0x424180
  4175e0:	mov    eax,DWORD PTR [rsp+0x48]
  4175e4:	test   eax,eax
  4175e6:	jne    0x417760
  4175ec:	xor    edx,edx
  4175ee:	mov    rcx,r14
  4175f1:	call   0x4241d0
  4175f6:	xor    edx,edx
  4175f8:	mov    rcx,r14
  4175fb:	call   0x4241d0
  417600:	mov    edx,0x63
  417605:	mov    rcx,r14
  417608:	call   0x4241d0
  41760d:	mov    edx,DWORD PTR [rsp+0xa0]
  417614:	mov    rcx,r14
  417617:	call   0x424140
  41761c:	cmp    WORD PTR [r14],0x700
  417622:	ja     0x417af0
  417628:	mov    edx,DWORD PTR [rsp+0xa0]
  41762f:	mov    rcx,r14
  417632:	call   0x424140
  417637:	mov    r8,QWORD PTR [rsp+0xa0]
  41763f:	mov    rdx,r12
  417642:	mov    rcx,r14
  417645:	call   0x423f10
  41764a:	cmp    r15,r12
  41764d:	je     0x417657
  41764f:	mov    rcx,r12
  417652:	call   0x42d6f8
  417657:	mov    r8,QWORD PTR [rsp+0xc8]
  41765f:	mov    rdx,rbp
  417662:	mov    rcx,r14
  417665:	call   0x415580
  41766a:	mov    rcx,rbp
  41766d:	call   0x42d6f8
  417672:	test   esi,esi
  417674:	je     0x417750
  41767a:	lea    eax,[rsi-0x1]
  41767d:	xor    esi,esi
  41767f:	lea    rdi,[rax*8+0x8]
  417687:	jmp    0x41769d
  417689:	nop    DWORD PTR [rax+0x0]
  417690:	add    rsi,0x8
  417694:	cmp    rsi,rdi
  417697:	je     0x417750
  41769d:	mov    rax,QWORD PTR [r13+0x0]
  4176a1:	xor    r8d,r8d
  4176a4:	mov    rcx,r14
  4176a7:	mov    rbx,QWORD PTR [rax+rsi*1]
  4176ab:	mov    rdx,rbx
  4176ae:	call   0x416000
  4176b3:	mov    rax,QWORD PTR [rbx]
  4176b6:	xor    r8d,r8d
  4176b9:	mov    rdx,rbx
  4176bc:	mov    rcx,r14
  4176bf:	call   QWORD PTR [rax+0x28]
  4176c2:	test   eax,eax
  4176c4:	je     0x417690
  4176c6:	jmp    0x4172af
  4176cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4176d0:	lea    rdx,[rdi+0x1e]
  4176d4:	lea    rcx,[rsp+0xc8]
  4176dc:	call   0x412e30
  4176e1:	test   rax,rax
  4176e4:	jne    0x417420
  4176ea:	jmp    0x4174f8
  4176ef:	nop
  4176f0:	cmp    WORD PTR [r14],0x6ff
  4176f6:	mov    rdi,QWORD PTR [rsp+0xa0]
  4176fe:	jbe    0x417ad0
  417704:	mov    ecx,0x200
  417709:	call   0x42d6b8
  41770e:	test   rax,rax
  417711:	mov    QWORD PTR [rsp+0xa8],rax
  417719:	je     0x417c4d
  41771f:	movzx  edx,WORD PTR [r13+0x8]
  417724:	mov    rbp,rax
  417727:	mov    QWORD PTR [rsp+0x50],0x0
  417730:	test   dx,dx
  417733:	jne    0x4177f0
  417739:	mov    rax,QWORD PTR [rsp+0x50]
  41773e:	mov    QWORD PTR [rsp+0xc8],rax
  417746:	jmp    0x417593
  41774b:	nop    DWORD PTR [rax+rax*1+0x0]
  417750:	mov    DWORD PTR [r14+0x178],0xa
  41775b:	jmp    0x417256
  417760:	mov    r8,QWORD PTR [rsp+0xa0]
  417768:	mov    rdx,r12
  41776b:	mov    rcx,r14
  41776e:	call   0x415b30
  417773:	jmp    0x41764a
  417778:	nop    DWORD PTR [rax+rax*1+0x0]
  417780:	mov    rcx,r14
  417783:	lea    rbx,[rsp+0xd0]
  41778b:	mov    edx,0xd
  417790:	call   0x424180
  417795:	lea    rdx,[rip+0x1ee02]        # 0x43659e
  41779c:	mov    rcx,rbx
  41779f:	call   0x4156a0
  4177a4:	mov    rdx,rbx
  4177a7:	mov    r8,rax
  4177aa:	mov    rcx,r14
  4177ad:	call   0x423f10
  4177b2:	jmp    0x4175d6
  4177b7:	nop    WORD PTR [rax+rax*1+0x0]
  4177c0:	mov    rdx,rbx
  4177c3:	mov    rcx,r14
  4177c6:	call   0x415df0
  4177cb:	test   eax,eax
  4177cd:	jne    0x417b74
  4177d3:	movzx  eax,WORD PTR [r14]
  4177d7:	jmp    0x4175b2
  4177dc:	nop    DWORD PTR [rax+0x0]
  4177e0:	xor    esi,esi
  4177e2:	jmp    0x417456
  4177e7:	nop    WORD PTR [rax+rax*1+0x0]
  4177f0:	movzx  ecx,dx
  4177f3:	mov    edx,0x10
  4177f8:	call   0x42d740
  4177fd:	test   rax,rax
  417800:	mov    QWORD PTR [rsp+0x58],rax
  417805:	je     0x417c4d
  41780b:	mov    rax,QWORD PTR [r13+0x0]
  41780f:	mov    rax,QWORD PTR [rax]
  417812:	mov    rax,QWORD PTR [rax+0x38]
  417816:	cmp    QWORD PTR [rax],0x0
  41781a:	jne    0x4178d0
  417820:	add    rdi,r12
  417823:	xor    eax,eax
  417825:	mov    QWORD PTR [rsp+0x168],rbx
  41782d:	mov    rcx,r12
  417830:	mov    rbx,rdi
  417833:	mov    DWORD PTR [rsp+0x50],esi
  417837:	mov    QWORD PTR [rsp+0x60],r12
  41783c:	mov    edi,eax
  41783e:	jmp    0x41784d
  417840:	movzx  eax,WORD PTR [r13+0x8]
  417845:	cmp    eax,edi
  417847:	jle    0x417b61
  41784d:	mov    r8d,0x1
  417853:	mov    rdx,rbx
  417856:	call   0x4158d0
  41785b:	cmp    rbx,rax
  41785e:	mov    rsi,rax
  417861:	je     0x417b23
  417867:	cmp    BYTE PTR [rax],0x40
  41786a:	lea    rcx,[rax+0x2]
  41786e:	jne    0x417840
  417870:	lea    rbp,[rax+0x2]
  417874:	cmp    rbx,rbp
  417877:	je     0x417c45
  41787d:	mov    r12,rbp
  417880:	cmp    BYTE PTR [r12+0x1],0x0
  417886:	jne    0x41789c
  417888:	movzx  ecx,BYTE PTR [r12]
  41788d:	cmp    cl,0x5f
  417890:	je     0x41789c
  417892:	call   QWORD PTR [rip+0x2b2bc]        # 0x442b54
  417898:	test   eax,eax
  41789a:	je     0x4178a5
  41789c:	add    r12,0x2
  4178a0:	cmp    rbx,r12
  4178a3:	jne    0x417880
  4178a5:	movsxd rax,edi
  4178a8:	mov    r8,r12
  4178ab:	add    edi,0x1
  4178ae:	shl    rax,0x4
  4178b2:	add    rax,QWORD PTR [rsp+0x58]
  4178b7:	sub    r8,rsi
  4178ba:	mov    rcx,rbp
  4178bd:	mov    QWORD PTR [rax],rsi
  4178c0:	mov    QWORD PTR [rax+0x8],r8
  4178c4:	jmp    0x417840
  4178c9:	nop    DWORD PTR [rax+0x0]
  4178d0:	lea    rcx,[rsp+0xb0]
  4178d8:	mov    rax,QWORD PTR [rsp+0x58]
  4178dd:	lea    rdx,[rsp+0xa8]
  4178e5:	mov    ebp,0x200
  4178ea:	mov    DWORD PTR [rsp+0x9c],esi
  4178f1:	mov    QWORD PTR [rsp+0x68],r12
  4178f6:	mov    QWORD PTR [rsp+0x78],rcx
  4178fb:	lea    rcx,[rsp+0xc8]
  417903:	mov    QWORD PTR [rsp+0x158],r15
  41790b:	add    rax,0x8
  41790f:	mov    QWORD PTR [rsp+0x60],0x0
  417918:	mov    DWORD PTR [rsp+0x50],0x0
  417920:	mov    QWORD PTR [rsp+0x80],rcx
  417928:	lea    rcx,[rsp+0xb8]
  417930:	xor    edi,edi
  417932:	mov    r12,rax
  417935:	mov    r15,rbp
  417938:	mov    QWORD PTR [rsp+0x168],rbx
  417940:	mov    QWORD PTR [rsp+0x88],rcx
  417948:	lea    rcx,[rsp+0xc0]
  417950:	mov    rsi,rdx
  417953:	mov    QWORD PTR [rsp+0x90],rcx
  41795b:	lea    rcx,[rsp+0xd0]
  417963:	mov    QWORD PTR [rsp+0x70],rcx
  417968:	mov    rbp,QWORD PTR [r12-0x8]
  41796d:	test   rbp,rbp
  417970:	je     0x417b07
  417976:	mov    rax,QWORD PTR [r12]
  41797a:	mov    QWORD PTR [rsp+0xc0],rax
  417982:	lea    rbx,[rdi+0x50]
  417986:	jmp    0x4179b3
  417988:	nop    DWORD PTR [rax+rax*1+0x0]
  417990:	add    r15,0x200
  417997:	mov    rcx,rsi
  41799a:	mov    rdx,r15
  41799d:	call   0x412e30
  4179a2:	test   rax,rax
  4179a5:	je     0x417a90
  4179ab:	mov    rax,QWORD PTR [rsp+0xc0]
  4179b3:	add    rax,rbx
  4179b6:	cmp    r15,rax
  4179b9:	jb     0x417990
  4179bb:	test   rbp,rbp
  4179be:	je     0x417b8e
  4179c4:	mov    rbx,QWORD PTR [r12]
  4179c8:	mov    rcx,rdi
  4179cb:	add    rcx,QWORD PTR [rsp+0xa8]
  4179d3:	mov    rdx,rbp
  4179d6:	mov    r8,rbx
  4179d9:	add    rdi,rbx
  4179dc:	call   0x42d6a8
  4179e1:	mov    rax,QWORD PTR [rsp+0xa8]
  4179e9:	lea    rbx,[rdi+0x2]
  4179ed:	mov    rcx,r14
  4179f0:	mov    BYTE PTR [rax+rdi*1],0x20
  4179f4:	mov    rax,QWORD PTR [rsp+0xa8]
  4179fc:	mov    BYTE PTR [rax+rdi*1+0x1],0x0
  417a01:	mov    rdi,QWORD PTR [rsp+0x60]
  417a06:	mov    rax,QWORD PTR [r13+0x0]
  417a0a:	mov    rdx,QWORD PTR [rax+rdi*1]
  417a0e:	mov    rdi,QWORD PTR [rsp+0x70]
  417a13:	mov    r8,rdi
  417a16:	call   0x416bc0
  417a1b:	cmp    BYTE PTR [rsp+0xd0],0x0
  417a23:	je     0x417a90
  417a25:	mov    rcx,rbx
  417a28:	add    rcx,QWORD PTR [rsp+0xa8]
  417a30:	mov    rdx,rdi
  417a33:	call   0x4156a0
  417a38:	add    DWORD PTR [rsp+0x50],0x1
  417a3d:	lea    rdi,[rax+rbx*1]
  417a41:	movzx  eax,WORD PTR [r13+0x8]
  417a46:	mov    ebx,DWORD PTR [rsp+0x50]
  417a4a:	cmp    ebx,eax
  417a4c:	jge    0x417c5b
  417a52:	test   rdi,rdi
  417a55:	je     0x417a77
  417a57:	mov    rdx,QWORD PTR [rsp+0xa8]
  417a5f:	lea    rax,[rdi+0x1]
  417a63:	mov    BYTE PTR [rdx+rdi*1],0x2c
  417a67:	mov    rdx,QWORD PTR [rsp+0xa8]
  417a6f:	add    rdi,0x2
  417a73:	mov    BYTE PTR [rdx+rax*1],0x0
  417a77:	add    QWORD PTR [rsp+0x60],0x8
  417a7d:	add    r12,0x10
  417a81:	jmp    0x417968
  417a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417a90:	mov    r12,QWORD PTR [rsp+0x68]
  417a95:	mov    r15,QWORD PTR [rsp+0x158]
  417a9d:	mov    rcx,QWORD PTR [rsp+0x58]
  417aa2:	call   0x42d6f8
  417aa7:	mov    rcx,QWORD PTR [rsp+0xa8]
  417aaf:	call   0x42d6f8
  417ab4:	cmp    r15,r12
  417ab7:	je     0x417ac1
  417ab9:	mov    rcx,r12
  417abc:	call   0x42d6f8
  417ac1:	xor    edx,edx
  417ac3:	mov    rcx,r14
  417ac6:	call   0x423970
  417acb:	jmp    0x4172af
  417ad0:	lea    rdx,[rip+0x1e089]        # 0x435b60
  417ad7:	lea    rcx,[rip+0x1e202]        # 0x435ce0
  417ade:	mov    r8d,0x3de
  417ae4:	call   0x42d350
  417ae9:	jmp    0x417704
  417aee:	xchg   ax,ax
  417af0:	lea    rdx,[r14+0x70]
  417af4:	mov    r8d,0x5
  417afa:	mov    rcx,r14
  417afd:	call   0x423f10
  417b02:	jmp    0x417628
  417b07:	mov    rax,QWORD PTR [r13+0x0]
  417b0b:	mov    rbx,QWORD PTR [rsp+0x60]
  417b10:	mov    rax,QWORD PTR [rax+rbx*1]
  417b14:	mov    rax,QWORD PTR [rax+0x38]
  417b18:	mov    rax,QWORD PTR [rax]
  417b1b:	add    rax,rax
  417b1e:	jmp    0x41797a
  417b23:	movzx  eax,WORD PTR [r13+0x8]
  417b28:	mov    esi,DWORD PTR [rsp+0x50]
  417b2c:	mov    r12,QWORD PTR [rsp+0x60]
  417b31:	mov    rbx,QWORD PTR [rsp+0x168]
  417b39:	test   eax,eax
  417b3b:	jne    0x4178d0
  417b41:	mov    QWORD PTR [rsp+0x50],0x0
  417b4a:	mov    rcx,QWORD PTR [rsp+0x58]
  417b4f:	call   0x42d6f8
  417b54:	mov    rbp,QWORD PTR [rsp+0xa8]
  417b5c:	jmp    0x417739
  417b61:	mov    esi,DWORD PTR [rsp+0x50]
  417b65:	mov    r12,QWORD PTR [rsp+0x60]
  417b6a:	mov    rbx,QWORD PTR [rsp+0x168]
  417b72:	jmp    0x417b39
  417b74:	cmp    r15,r12
  417b77:	je     0x417b81
  417b79:	mov    rcx,r12
  417b7c:	call   0x42d6f8
  417b81:	mov    rcx,rbp
  417b84:	call   0x42d6f8
  417b89:	jmp    0x4172af
  417b8e:	mov    rdx,QWORD PTR [r13+0x0]
  417b92:	mov    rbx,QWORD PTR [rsp+0x60]
  417b97:	xor    r8d,r8d
  417b9a:	mov    r9,QWORD PTR [rsp+0x78]
  417b9f:	mov    rcx,r14
  417ba2:	mov    rax,QWORD PTR [rdx+rbx*1]
  417ba6:	mov    rax,QWORD PTR [rax+0x38]
  417baa:	add    rax,0x8
  417bae:	mov    QWORD PTR [rsp+0xb0],rax
  417bb6:	mov    rax,QWORD PTR [rdx+rbx*1]
  417bba:	mov    rax,QWORD PTR [rax+0x38]
  417bbe:	mov    rax,QWORD PTR [rax]
  417bc1:	mov    QWORD PTR [rsp+0xc0],rax
  417bc9:	mov    rax,rdi
  417bcc:	add    rax,QWORD PTR [rsp+0xa8]
  417bd4:	mov    QWORD PTR [rsp+0xb8],rax
  417bdc:	mov    rax,r15
  417bdf:	sub    rax,rdi
  417be2:	mov    rdi,QWORD PTR [rsp+0x80]
  417bea:	mov    QWORD PTR [rsp+0xc8],rax
  417bf2:	mov    rax,QWORD PTR [r14+0x68]
  417bf6:	mov    rax,QWORD PTR [rax]
  417bf9:	mov    DWORD PTR [rax+0x34],0x0
  417c00:	mov    rax,QWORD PTR [r14+0x68]
  417c04:	mov    QWORD PTR [rsp+0x30],rdi
  417c09:	mov    rdi,QWORD PTR [rsp+0x88]
  417c11:	mov    QWORD PTR [rsp+0x28],rdi
  417c16:	mov    rdi,QWORD PTR [rsp+0x90]
  417c1e:	mov    QWORD PTR [rsp+0x20],rdi
  417c23:	mov    rdx,QWORD PTR [rax]
  417c26:	call   0x40c320
  417c2b:	cmp    rax,0xffffffffffffffff
  417c2f:	je     0x417a90
  417c35:	mov    rdi,r15
  417c38:	sub    rdi,QWORD PTR [rsp+0xc8]
  417c40:	jmp    0x4179e1
  417c45:	mov    r12,rbx
  417c48:	jmp    0x4178a5
  417c4d:	mov    QWORD PTR [rsp+0x58],0x0
  417c56:	jmp    0x417a9d
  417c5b:	mov    esi,DWORD PTR [rsp+0x9c]
  417c62:	mov    r12,QWORD PTR [rsp+0x68]
  417c67:	mov    QWORD PTR [rsp+0x50],rdi
  417c6c:	mov    r15,QWORD PTR [rsp+0x158]
  417c74:	mov    rbx,QWORD PTR [rsp+0x168]
  417c7c:	jmp    0x417b4a
  417c81:	nop    DWORD PTR [rax+rax*1+0x0]
  417c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417c90:	xor    r9d,r9d
  417c93:	xor    r8d,r8d
  417c96:	jmp    0x4171d0
  417c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  417ca0:	push   rbx
  417ca1:	sub    rsp,0x30
  417ca5:	mov    QWORD PTR [rsp+0x50],r8
  417caa:	mov    rbx,rcx
  417cad:	lea    r8,[rsp+0x50]
  417cb2:	lea    rcx,[rsp+0x28]
  417cb7:	mov    QWORD PTR [rsp+0x58],r9
  417cbc:	mov    QWORD PTR [rsp+0x28],0x0
  417cc5:	mov    QWORD PTR [rsp+0x20],r8
  417cca:	call   0x42d530
  417ccf:	test   eax,eax
  417cd1:	js     0x417d00
  417cd3:	mov    rdx,QWORD PTR [rsp+0x28]
  417cd8:	mov    rcx,rbx
  417cdb:	xor    r9d,r9d
  417cde:	xor    r8d,r8d
  417ce1:	call   0x4171d0
  417ce6:	mov    rcx,QWORD PTR [rsp+0x28]
  417ceb:	mov    ebx,eax
  417ced:	call   0x42d6f8
  417cf2:	mov    eax,ebx
  417cf4:	add    rsp,0x30
  417cf8:	pop    rbx
  417cf9:	ret    
  417cfa:	nop    WORD PTR [rax+rax*1+0x0]
  417d00:	mov    ebx,0xffffffff
  417d05:	jmp    0x417cf2
  417d07:	nop    WORD PTR [rax+rax*1+0x0]
  417d10:	push   r15
  417d12:	push   r14
  417d14:	push   r13
  417d16:	push   r12
  417d18:	push   rbp
  417d19:	push   rdi
  417d1a:	push   rsi
  417d1b:	push   rbx
  417d1c:	sub    rsp,0x68
  417d20:	test   rdx,rdx
  417d23:	je     0x418040
  417d29:	test   r9,r9
  417d2c:	je     0x418040
  417d32:	mov    r12,rdx
  417d35:	mov    edx,0x1
  417d3a:	mov    rdi,r9
  417d3d:	mov    rsi,r8
  417d40:	mov    rbx,rcx
  417d43:	call   0x423970
  417d48:	cmp    eax,0x1
  417d4b:	jne    0x418040
  417d51:	mov    rdx,rsi
  417d54:	mov    rcx,rbx
  417d57:	call   0x40f940
  417d5c:	test   rax,rax
  417d5f:	mov    rsi,rax
  417d62:	je     0x418040
  417d68:	lea    rbp,[rbx+0x160]
  417d6f:	mov    rcx,rdi
  417d72:	call   0x412460
  417d77:	mov    QWORD PTR [rdi],rsi
  417d7a:	mov    rcx,rbp
  417d7d:	call   0x412460
  417d82:	cmp    WORD PTR [rbx],0x6ff
  417d87:	jbe    0x418060
  417d8d:	mov    rcx,r12
  417d90:	call   0x42d610
  417d95:	add    DWORD PTR [rsi+0x8],0x1
  417d99:	mov    rcx,rbp
  417d9c:	mov    r13,rax
  417d9f:	call   0x412460
  417da4:	cmp    WORD PTR [rbx],0x6ff
  417da9:	mov    QWORD PTR [rbx+0x160],rsi
  417db0:	jbe    0x417f60
  417db6:	mov    rax,QWORD PTR [rbx+0x68]
  417dba:	lea    rdx,[rsp+0x38]
  417dbf:	mov    r9d,r13d
  417dc2:	mov    r8,r12
  417dc5:	mov    rcx,rbx
  417dc8:	mov    QWORD PTR [rsp+0x30],0x0
  417dd1:	mov    QWORD PTR [rsp+0x20],rdx
  417dd6:	mov    rdx,QWORD PTR [rax]
  417dd9:	call   0x415cf0
  417dde:	test   rax,rax
  417de1:	mov    rbp,rax
  417de4:	je     0x418110
  417dea:	lea    rax,[rsp+0x30]
  417def:	mov    r9,QWORD PTR [rsp+0xd0]
  417df7:	mov    r8,QWORD PTR [rsp+0x38]
  417dfc:	mov    rdx,rbp
  417dff:	mov    rcx,rbx
  417e02:	mov    QWORD PTR [rsp+0x20],rax
  417e07:	call   0x416f70
  417e0c:	test   rax,rax
  417e0f:	mov    r13,rax
  417e12:	je     0x418100
  417e18:	movzx  eax,WORD PTR [rbx]
  417e1b:	mov    BYTE PTR [rbx+0xf1],0x3
  417e22:	cmp    ax,0x701
  417e26:	ja     0x418154
  417e2c:	cmp    ax,0x700
  417e30:	jbe    0x418120
  417e36:	mov    edx,0xffffffff
  417e3b:	mov    rcx,rbx
  417e3e:	call   0x424180
  417e43:	mov    edx,0xb
  417e48:	mov    rcx,rbx
  417e4b:	call   0x424180
  417e50:	xor    edx,edx
  417e52:	mov    rcx,rbx
  417e55:	call   0x424180
  417e5a:	xor    edx,edx
  417e5c:	mov    rcx,rbx
  417e5f:	call   0x4241d0
  417e64:	mov    edx,0x1
  417e69:	mov    rcx,rbx
  417e6c:	call   0x4241d0
  417e71:	mov    edx,0x26
  417e76:	mov    rcx,rbx
  417e79:	call   0x4241d0
  417e7e:	mov    edx,0x4
  417e83:	mov    rcx,rbx
  417e86:	call   0x4241d0
  417e8b:	xor    edx,edx
  417e8d:	mov    rcx,rbx
  417e90:	call   0x4241d0
  417e95:	mov    r8,QWORD PTR [rsp+0x30]
  417e9a:	mov    rdx,r13
  417e9d:	mov    rcx,rbx
  417ea0:	call   0x415580
  417ea5:	mov    r8,QWORD PTR [rsp+0x38]
  417eaa:	mov    rdx,rbp
  417ead:	mov    rcx,rbx
  417eb0:	call   0x415b30
  417eb5:	cmp    r12,rbp
  417eb8:	je     0x417ec2
  417eba:	mov    rcx,rbp
  417ebd:	call   0x42d6f8
  417ec2:	mov    rcx,r13
  417ec5:	call   0x42d6f8
  417eca:	xor    edx,edx
  417ecc:	mov    rcx,rbx
  417ecf:	call   0x4241d0
  417ed4:	xor    edx,edx
  417ed6:	mov    rcx,rbx
  417ed9:	call   0x4241d0
  417ede:	mov    edx,0x26
  417ee3:	mov    rcx,rbx
  417ee6:	call   0x4241d0
  417eeb:	mov    edx,0x4
  417ef0:	mov    rcx,rbx
  417ef3:	call   0x4241d0
  417ef8:	mov    edx,0x4
  417efd:	mov    rcx,rbx
  417f00:	call   0x4241d0
  417f05:	mov    edx,0x1
  417f0a:	mov    rcx,rbx
  417f0d:	call   0x424140
  417f12:	mov    DWORD PTR [rbx+0x178],0xb
  417f1c:	mov    edx,0x3
  417f21:	mov    rcx,rbx
  417f24:	call   0x423970
  417f29:	mov    rcx,rbx
  417f2c:	call   0x424270
  417f31:	mov    ebp,eax
  417f33:	test   ebp,ebp
  417f35:	jns    0x418045
  417f3b:	xor    edx,edx
  417f3d:	mov    rcx,rbx
  417f40:	call   0x423970
  417f45:	mov    rcx,rdi
  417f48:	call   0x412460
  417f4d:	mov    rdx,rsi
  417f50:	mov    rcx,rbx
  417f53:	call   0x4124f0
  417f58:	mov    eax,ebp
  417f5a:	jmp    0x418045
  417f5f:	nop
  417f60:	movzx  r14d,BYTE PTR [rbx+0x86]
  417f68:	lea    r15,[rsi+0x10]
  417f6c:	mov    BYTE PTR [rbx+0xf1],0xf
  417f73:	mov    rcx,r15
  417f76:	call   0x42d610
  417f7b:	and    r14d,0x1
  417f7f:	mov    edx,0xe7
  417f84:	mov    rcx,rbx
  417f87:	mov    rbp,rax
  417f8a:	call   0x4241d0
  417f8f:	test   r14b,r14b
  417f92:	lea    edx,[rbp+r13*1+0x5]
  417f97:	je     0x4180b0
  417f9d:	lea    edx,[rdx+rbp*1+0x10]
  417fa1:	mov    rcx,rbx
  417fa4:	movsxd r14,ebp
  417fa7:	movsx  edx,dx
  417faa:	call   0x424180
  417faf:	mov    edx,0x1
  417fb4:	mov    rcx,rbx
  417fb7:	call   0x4241d0
  417fbc:	xor    edx,edx
  417fbe:	mov    rcx,rbx
  417fc1:	call   0x4241d0
  417fc6:	movzx  edx,bpl
  417fca:	mov    rcx,rbx
  417fcd:	call   0x4241d0
  417fd2:	mov    r8,r14
  417fd5:	mov    rdx,r15
  417fd8:	mov    rcx,rbx
  417fdb:	call   0x423f10
  417fe0:	lea    edx,[r13+rbp*1+0x10]
  417fe5:	mov    rcx,rbx
  417fe8:	movsx  edx,dx
  417feb:	call   0x424180
  417ff0:	lea    rdx,[rip+0x1e5c0]        # 0x4365b7
  417ff7:	mov    r8d,0xc
  417ffd:	mov    rcx,rbx
  418000:	call   0x423f10
  418005:	mov    r8,r14
  418008:	mov    rdx,r15
  41800b:	mov    rcx,rbx
  41800e:	call   0x423f10
  418013:	lea    rdx,[rip+0x1e5aa]        # 0x4365c4
  41801a:	mov    r8d,0x4
  418020:	mov    rcx,rbx
  418023:	call   0x423f10
  418028:	movsxd r8,r13d
  41802b:	mov    rdx,r12
  41802e:	mov    rcx,rbx
  418031:	call   0x423f10
  418036:	jmp    0x417f1c
  41803b:	nop    DWORD PTR [rax+rax*1+0x0]
  418040:	mov    eax,0xffffffff
  418045:	add    rsp,0x68
  418049:	pop    rbx
  41804a:	pop    rsi
  41804b:	pop    rdi
  41804c:	pop    rbp
  41804d:	pop    r12
  41804f:	pop    r13
  418051:	pop    r14
  418053:	pop    r15
  418055:	ret    
  418056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418060:	mov    rcx,r12
  418063:	call   QWORD PTR [rip+0x2aa43]        # 0x442aac
  418069:	test   rax,rax
  41806c:	mov    QWORD PTR [rsi+0x40],rax
  418070:	je     0x418110
  418076:	movzx  eax,WORD PTR [rbx]
  418079:	cmp    ax,0x6ff
  41807d:	ja     0x417d8d
  418083:	cmp    ax,0x500
  418087:	je     0x417d8d
  41808d:	mov    rdx,rsi
  418090:	mov    rcx,rbx
  418093:	mov    BYTE PTR [rsi+0x2e],0x1
  418097:	call   0x4124f0
  41809c:	xor    edx,edx
  41809e:	mov    rcx,rbx
  4180a1:	call   0x423970
  4180a6:	xor    eax,eax
  4180a8:	jmp    0x418045
  4180aa:	nop    WORD PTR [rax+rax*1+0x0]
  4180b0:	mov    rcx,rbx
  4180b3:	movsx  edx,dx
  4180b6:	call   0x424180
  4180bb:	mov    rcx,rbx
  4180be:	mov    edx,0x1
  4180c3:	call   0x4241d0
  4180c8:	xor    edx,edx
  4180ca:	mov    rcx,rbx
  4180cd:	call   0x4241d0
  4180d2:	movzx  edx,bpl
  4180d6:	mov    rcx,rbx
  4180d9:	call   0x4241d0
  4180de:	mov    rdx,r15
  4180e1:	mov    rcx,rbx
  4180e4:	movsxd r8,ebp
  4180e7:	call   0x423f10
  4180ec:	movsx  edx,r13w
  4180f0:	mov    rcx,rbx
  4180f3:	call   0x424180
  4180f8:	jmp    0x418028
  4180fd:	nop    DWORD PTR [rax]
  418100:	cmp    r12,rbp
  418103:	je     0x418110
  418105:	mov    rcx,rbp
  418108:	call   0x42d6f8
  41810d:	nop    DWORD PTR [rax]
  418110:	mov    ebp,0xffffffff
  418115:	jmp    0x417f3b
  41811a:	nop    WORD PTR [rax+rax*1+0x0]
  418120:	mov    rcx,rbx
  418123:	lea    r14,[rsp+0x40]
  418128:	mov    edx,0xa
  41812d:	call   0x424180
  418132:	lea    rdx,[rip+0x1e473]        # 0x4365ac
  418139:	mov    rcx,r14
  41813c:	call   0x4156a0
  418141:	mov    rdx,r14
  418144:	mov    r8,rax
  418147:	mov    rcx,rbx
  41814a:	call   0x423f10
  41814f:	jmp    0x417e50
  418154:	xor    edx,edx
  418156:	mov    rcx,rbx
  418159:	call   0x415df0
  41815e:	movzx  eax,WORD PTR [rbx]
  418161:	jmp    0x417e2c
  418166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418170:	push   r13
  418172:	push   r12
  418174:	push   rbp
  418175:	push   rdi
  418176:	push   rsi
  418177:	push   rbx
  418178:	sub    rsp,0x68
  41817c:	test   rdx,rdx
  41817f:	je     0x418557
  418185:	mov    rbx,rcx
  418188:	mov    rcx,rdx
  41818b:	mov    rdi,r9
  41818e:	mov    rbp,r8
  418191:	mov    rsi,rdx
  418194:	call   0x42d610
  418199:	cmp    WORD PTR [rbx],0x6ff
  41819e:	mov    r12,rax
  4181a1:	ja     0x418244
  4181a7:	xor    edx,edx
  4181a9:	mov    rcx,rbx
  4181ac:	call   0x40f940
  4181b1:	test   rax,rax
  4181b4:	mov    rdi,rax
  4181b7:	mov    QWORD PTR [rsp+0x40],rax
  4181bc:	je     0x418557
  4181c2:	test   rbp,rbp
  4181c5:	je     0x418275
  4181cb:	cmp    WORD PTR [rbp+0x8],0x0
  4181d0:	je     0x418275
  4181d6:	mov    BYTE PTR [rax+0x2e],0x1
  4181da:	mov    QWORD PTR [rax+0x38],rbp
  4181de:	mov    rcx,rsi
  4181e1:	call   QWORD PTR [rip+0x2a8c5]        # 0x442aac
  4181e7:	mov    QWORD PTR [rdi+0x40],rax
  4181eb:	mov    rdx,QWORD PTR [rsp+0x40]
  4181f0:	cmp    QWORD PTR [rdx+0x40],0x0
  4181f5:	je     0x418212
  4181f7:	mov    edx,0x1
  4181fc:	mov    rcx,rbx
  4181ff:	call   0x423970
  418204:	cmp    eax,0x1
  418207:	je     0x418500
  41820d:	mov    rdx,QWORD PTR [rsp+0x40]
  418212:	mov    esi,0xffffffff
  418217:	mov    QWORD PTR [rdx+0x38],0x0
  41821f:	mov    rcx,rbx
  418222:	call   0x4124f0
  418227:	lea    rcx,[rsp+0x40]
  41822c:	call   0x412460
  418231:	mov    r10d,esi
  418234:	mov    eax,r10d
  418237:	add    rsp,0x68
  41823b:	pop    rbx
  41823c:	pop    rsi
  41823d:	pop    rdi
  41823e:	pop    rbp
  41823f:	pop    r12
  418241:	pop    r13
  418243:	ret    
  418244:	mov    edx,0x1
  418249:	mov    rcx,rbx
  41824c:	mov    QWORD PTR [rsp+0x30],0x0
  418255:	call   0x423970
  41825a:	cmp    eax,0x1
  41825d:	mov    r10d,0xffffffff
  418263:	je     0x4182a0
  418265:	mov    eax,r10d
  418268:	add    rsp,0x68
  41826c:	pop    rbx
  41826d:	pop    rsi
  41826e:	pop    rdi
  41826f:	pop    rbp
  418270:	pop    r12
  418272:	pop    r13
  418274:	ret    
  418275:	cmp    WORD PTR [rbx],0x500
  41827a:	je     0x4183f5
  418280:	mov    rdx,rsi
  418283:	xor    r9d,r9d
  418286:	xor    r8d,r8d
  418289:	mov    rcx,rbx
  41828c:	call   0x4171d0
  418291:	mov    rdx,QWORD PTR [rsp+0x40]
  418296:	mov    esi,eax
  418298:	jmp    0x41821f
  41829d:	nop    DWORD PTR [rax]
  4182a0:	mov    rax,QWORD PTR [rbx+0x68]
  4182a4:	lea    rdx,[rsp+0x38]
  4182a9:	mov    r9d,r12d
  4182ac:	mov    r8,rsi
  4182af:	mov    rcx,rbx
  4182b2:	mov    QWORD PTR [rsp+0x20],rdx
  4182b7:	mov    rdx,QWORD PTR [rax]
  4182ba:	call   0x415cf0
  4182bf:	test   rax,rax
  4182c2:	mov    r12,rax
  4182c5:	je     0x41854d
  4182cb:	lea    rax,[rsp+0x30]
  4182d0:	mov    r8,QWORD PTR [rsp+0x38]
  4182d5:	mov    r9,rbp
  4182d8:	mov    rdx,r12
  4182db:	mov    rcx,rbx
  4182de:	mov    QWORD PTR [rsp+0x20],rax
  4182e3:	call   0x416f70
  4182e8:	test   rax,rax
  4182eb:	mov    r13,rax
  4182ee:	je     0x418540
  4182f4:	movzx  eax,WORD PTR [rbx]
  4182f7:	mov    BYTE PTR [rbx+0xf1],0x3
  4182fe:	cmp    ax,0x701
  418302:	ja     0x418581
  418308:	cmp    ax,0x700
  41830c:	ja     0x418562
  418312:	mov    edx,0xd
  418317:	mov    rcx,rbx
  41831a:	lea    rdi,[rsp+0x40]
  41831f:	call   0x424180
  418324:	lea    rdx,[rip+0x1e273]        # 0x43659e
  41832b:	mov    rcx,rdi
  41832e:	call   0x4156a0
  418333:	mov    rdx,rdi
  418336:	mov    r8,rax
  418339:	mov    rcx,rbx
  41833c:	call   0x423f10
  418341:	xor    edx,edx
  418343:	mov    rcx,rbx
  418346:	call   0x424180
  41834b:	mov    r8,QWORD PTR [rsp+0x38]
  418350:	mov    rdx,r12
  418353:	mov    rcx,rbx
  418356:	call   0x415b30
  41835b:	mov    r8,QWORD PTR [rsp+0x30]
  418360:	mov    rdx,r13
  418363:	mov    rcx,rbx
  418366:	call   0x415580
  41836b:	cmp    rsi,r12
  41836e:	je     0x418378
  418370:	mov    rcx,r12
  418373:	call   0x42d6f8
  418378:	mov    rcx,r13
  41837b:	xor    edi,edi
  41837d:	xor    r12d,r12d
  418380:	call   0x42d6f8
  418385:	cmp    WORD PTR [rbp+0x8],0x0
  41838a:	je     0x4183ce
  41838c:	nop    DWORD PTR [rax+0x0]
  418390:	mov    rax,QWORD PTR [rbp+0x0]
  418394:	xor    r8d,r8d
  418397:	mov    rcx,rbx
  41839a:	mov    rsi,QWORD PTR [rax+rdi*1]
  41839e:	mov    rdx,rsi
  4183a1:	call   0x416000
  4183a6:	mov    rax,QWORD PTR [rsi]
  4183a9:	xor    r8d,r8d
  4183ac:	mov    rdx,rsi
  4183af:	mov    rcx,rbx
  4183b2:	call   QWORD PTR [rax+0x28]
  4183b5:	test   eax,eax
  4183b7:	js     0x4184f3
  4183bd:	movzx  eax,WORD PTR [rbp+0x8]
  4183c1:	add    r12d,0x1
  4183c5:	add    rdi,0x8
  4183c9:	cmp    eax,r12d
  4183cc:	jg     0x418390
  4183ce:	mov    edx,0x3
  4183d3:	mov    rcx,rbx
  4183d6:	mov    DWORD PTR [rbx+0x178],0xa
  4183e0:	call   0x423970
  4183e5:	mov    rcx,rbx
  4183e8:	call   0x424270
  4183ed:	mov    r10d,eax
  4183f0:	jmp    0x418265
  4183f5:	lea    rcx,[rbx+0x160]
  4183fc:	call   0x412460
  418401:	mov    rax,QWORD PTR [rsp+0x40]
  418406:	mov    edx,0x1
  41840b:	mov    rcx,rbx
  41840e:	mov    QWORD PTR [rbx+0x160],rax
  418415:	call   0x423970
  41841a:	cmp    eax,0x1
  41841d:	jne    0x418557
  418423:	mov    rax,QWORD PTR [rsp+0x40]
  418428:	mov    BYTE PTR [rbx+0xf1],0xf
  41842f:	lea    rcx,[rax+0x10]
  418433:	call   0x42d610
  418438:	mov    edx,0xe7
  41843d:	mov    rdi,rax
  418440:	mov    rcx,rbx
  418443:	call   0x4241d0
  418448:	lea    edx,[r12+rdi*2+0x15]
  41844d:	mov    rcx,rbx
  418450:	movsx  edx,dx
  418453:	call   0x424180
  418458:	mov    edx,0x8
  41845d:	mov    rcx,rbx
  418460:	call   0x4241d0
  418465:	xor    edx,edx
  418467:	mov    rcx,rbx
  41846a:	call   0x4241d0
  41846f:	movzx  edx,dil
  418473:	mov    rcx,rbx
  418476:	call   0x4241d0
  41847b:	mov    rax,QWORD PTR [rsp+0x40]
  418480:	mov    r8,rdi
  418483:	mov    rcx,rbx
  418486:	lea    rdx,[rax+0x10]
  41848a:	call   0x423f10
  41848f:	lea    edx,[r12+rdi*1+0x10]
  418494:	mov    rcx,rbx
  418497:	movsx  edx,dx
  41849a:	call   0x424180
  41849f:	lea    rdx,[rip+0x1e111]        # 0x4365b7
  4184a6:	mov    r8d,0xc
  4184ac:	mov    rcx,rbx
  4184af:	call   0x423f10
  4184b4:	mov    rax,QWORD PTR [rsp+0x40]
  4184b9:	movsxd r8,edi
  4184bc:	mov    rcx,rbx
  4184bf:	lea    rdx,[rax+0x10]
  4184c3:	call   0x423f10
  4184c8:	lea    rdx,[rip+0x1e0f5]        # 0x4365c4
  4184cf:	mov    r8d,0x4
  4184d5:	mov    rcx,rbx
  4184d8:	call   0x423f10
  4184dd:	mov    rcx,rbx
  4184e0:	movsxd r8,r12d
  4184e3:	mov    rdx,rsi
  4184e6:	call   0x423f10
  4184eb:	mov    rcx,rbx
  4184ee:	call   0x424270
  4184f3:	mov    r10d,eax
  4184f6:	jmp    0x418265
  4184fb:	nop    DWORD PTR [rax+rax*1+0x0]
  418500:	mov    rax,QWORD PTR [rsp+0x40]
  418505:	mov    rcx,rbx
  418508:	mov    rdx,QWORD PTR [rax+0x40]
  41850c:	mov    r8,QWORD PTR [rax+0x38]
  418510:	call   0x4169b0
  418515:	test   eax,eax
  418517:	mov    esi,eax
  418519:	js     0x418532
  41851b:	mov    edx,0x3
  418520:	mov    rcx,rbx
  418523:	call   0x423970
  418528:	mov    rcx,rbx
  41852b:	call   0x424270
  418530:	mov    esi,eax
  418532:	mov    rdx,QWORD PTR [rsp+0x40]
  418537:	jmp    0x418217
  41853c:	nop    DWORD PTR [rax+0x0]
  418540:	cmp    rsi,r12
  418543:	je     0x41854d
  418545:	mov    rcx,r12
  418548:	call   0x42d6f8
  41854d:	xor    edx,edx
  41854f:	mov    rcx,rbx
  418552:	call   0x423970
  418557:	mov    r10d,0xffffffff
  41855d:	jmp    0x418265
  418562:	mov    rcx,rbx
  418565:	mov    edx,0xffffffff
  41856a:	call   0x424180
  41856f:	mov    edx,0xa
  418574:	mov    rcx,rbx
  418577:	call   0x424180
  41857c:	jmp    0x418341
  418581:	mov    rdx,rdi
  418584:	mov    rcx,rbx
  418587:	call   0x415df0
  41858c:	test   eax,eax
  41858e:	je     0x4185b0
  418590:	cmp    rsi,r12
  418593:	je     0x41859d
  418595:	mov    rcx,r12
  418598:	call   0x42d6f8
  41859d:	mov    rcx,r13
  4185a0:	call   0x42d6f8
  4185a5:	mov    r10d,0xffffffff
  4185ab:	jmp    0x418265
  4185b0:	movzx  eax,WORD PTR [rbx]
  4185b3:	jmp    0x418308
  4185b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4185c0:	push   r15
  4185c2:	push   r14
  4185c4:	push   r13
  4185c6:	push   r12
  4185c8:	push   rbp
  4185c9:	push   rdi
  4185ca:	push   rsi
  4185cb:	push   rbx
  4185cc:	sub    rsp,0x68
  4185d0:	mov    r14,QWORD PTR [rsp+0xd0]
  4185d8:	test   rdx,rdx
  4185db:	mov    QWORD PTR [rsp+0x30],0x0
  4185e4:	je     0x4187d0
  4185ea:	test   r9,r9
  4185ed:	je     0x4187d0
  4185f3:	cmp    WORD PTR [rcx],0x6ff
  4185f8:	jbe    0x4187d0
  4185fe:	mov    rdi,rdx
  418601:	mov    edx,0x1
  418606:	mov    r12,r9
  418609:	mov    rsi,r8
  41860c:	mov    rbx,rcx
  41860f:	call   0x423970
  418614:	cmp    eax,0x1
  418617:	jne    0x4187d0
  41861d:	mov    rdx,rsi
  418620:	mov    rcx,rbx
  418623:	call   0x40f940
  418628:	test   rax,rax
  41862b:	mov    r13,rax
  41862e:	je     0x4187d0
  418634:	mov    rcx,r12
  418637:	call   0x412460
  41863c:	mov    QWORD PTR [r12],r13
  418640:	add    DWORD PTR [r13+0x8],0x1
  418645:	lea    rcx,[rbx+0x160]
  41864c:	call   0x412460
  418651:	mov    rcx,rdi
  418654:	mov    QWORD PTR [rbx+0x160],r13
  41865b:	call   0x42d610
  418660:	mov    rdx,QWORD PTR [rbx+0x68]
  418664:	lea    rcx,[rsp+0x38]
  418669:	mov    r9d,eax
  41866c:	mov    r8,rdi
  41866f:	mov    QWORD PTR [rsp+0x20],rcx
  418674:	mov    rcx,rbx
  418677:	mov    rdx,QWORD PTR [rdx]
  41867a:	call   0x415cf0
  41867f:	test   rax,rax
  418682:	mov    rsi,rax
  418685:	je     0x418871
  41868b:	lea    rax,[rsp+0x30]
  418690:	mov    r8,QWORD PTR [rsp+0x38]
  418695:	mov    r9,r14
  418698:	mov    rdx,rsi
  41869b:	mov    rcx,rbx
  41869e:	mov    QWORD PTR [rsp+0x20],rax
  4186a3:	call   0x416f70
  4186a8:	test   rax,rax
  4186ab:	mov    rbp,rax
  4186ae:	je     0x418864
  4186b4:	movzx  eax,WORD PTR [rbx]
  4186b7:	mov    BYTE PTR [rbx+0xf1],0x3
  4186be:	cmp    ax,0x701
  4186c2:	ja     0x418880
  4186c8:	cmp    ax,0x700
  4186cc:	jbe    0x418830
  4186d2:	mov    edx,0xffffffff
  4186d7:	mov    rcx,rbx
  4186da:	call   0x424180
  4186df:	mov    edx,0xd
  4186e4:	mov    rcx,rbx
  4186e7:	call   0x424180
  4186ec:	xor    edx,edx
  4186ee:	mov    rcx,rbx
  4186f1:	call   0x424180
  4186f6:	xor    edx,edx
  4186f8:	mov    rcx,rbx
  4186fb:	call   0x4241d0
  418700:	mov    edx,0x1
  418705:	mov    rcx,rbx
  418708:	call   0x4241d0
  41870d:	mov    edx,0x26
  418712:	mov    rcx,rbx
  418715:	call   0x4241d0
  41871a:	mov    edx,0x4
  41871f:	mov    rcx,rbx
  418722:	call   0x4241d0
  418727:	xor    edx,edx
  418729:	mov    rcx,rbx
  41872c:	call   0x4241d0
  418731:	mov    r8,QWORD PTR [rsp+0x30]
  418736:	mov    rdx,rbp
  418739:	mov    rcx,rbx
  41873c:	call   0x415580
  418741:	mov    r8,QWORD PTR [rsp+0x38]
  418746:	mov    rdx,rsi
  418749:	mov    rcx,rbx
  41874c:	call   0x415b30
  418751:	cmp    rdi,rsi
  418754:	je     0x41875e
  418756:	mov    rcx,rsi
  418759:	call   0x42d6f8
  41875e:	mov    rcx,rbp
  418761:	call   0x42d6f8
  418766:	test   r14,r14
  418769:	je     0x4187e0
  41876b:	cmp    WORD PTR [r14+0x8],0x0
  418771:	je     0x4187e0
  418773:	xor    edi,edi
  418775:	xor    ebp,ebp
  418777:	jmp    0x418790
  418779:	nop    DWORD PTR [rax+0x0]
  418780:	movzx  eax,WORD PTR [r14+0x8]
  418785:	add    ebp,0x1
  418788:	add    rdi,0x8
  41878c:	cmp    eax,ebp
  41878e:	jle    0x4187e0
  418790:	mov    rax,QWORD PTR [r14]
  418793:	xor    r8d,r8d
  418796:	mov    rcx,rbx
  418799:	mov    rsi,QWORD PTR [rax+rdi*1]
  41879d:	mov    rdx,rsi
  4187a0:	call   0x416000
  4187a5:	mov    rax,QWORD PTR [rsi]
  4187a8:	xor    r8d,r8d
  4187ab:	mov    rdx,rsi
  4187ae:	mov    rcx,rbx
  4187b1:	call   QWORD PTR [rax+0x28]
  4187b4:	test   eax,eax
  4187b6:	jns    0x418780
  4187b8:	add    rsp,0x68
  4187bc:	pop    rbx
  4187bd:	pop    rsi
  4187be:	pop    rdi
  4187bf:	pop    rbp
  4187c0:	pop    r12
  4187c2:	pop    r13
  4187c4:	pop    r14
  4187c6:	pop    r15
  4187c8:	ret    
  4187c9:	nop    DWORD PTR [rax+0x0]
  4187d0:	mov    eax,0xffffffff
  4187d5:	jmp    0x4187b8
  4187d7:	nop    WORD PTR [rax+rax*1+0x0]
  4187e0:	mov    edx,0x3
  4187e5:	mov    rcx,rbx
  4187e8:	mov    DWORD PTR [rbx+0x178],0xd
  4187f2:	call   0x423970
  4187f7:	mov    rcx,rbx
  4187fa:	call   0x424270
  4187ff:	mov    esi,eax
  418801:	test   esi,esi
  418803:	jns    0x4187b8
  418805:	xor    edx,edx
  418807:	mov    rcx,rbx
  41880a:	call   0x423970
  41880f:	mov    rcx,r12
  418812:	call   0x412460
  418817:	mov    rdx,r13
  41881a:	mov    rcx,rbx
  41881d:	call   0x4124f0
  418822:	mov    eax,esi
  418824:	jmp    0x4187b8
  418826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418830:	mov    rcx,rbx
  418833:	lea    r15,[rsp+0x40]
  418838:	mov    edx,0xb
  41883d:	call   0x424180
  418842:	lea    rdx,[rip+0x1dd80]        # 0x4365c9
  418849:	mov    rcx,r15
  41884c:	call   0x4156a0
  418851:	mov    rdx,r15
  418854:	mov    r8,rax
  418857:	mov    rcx,rbx
  41885a:	call   0x423f10
  41885f:	jmp    0x4186ec
  418864:	cmp    rdi,rsi
  418867:	je     0x418871
  418869:	mov    rcx,rsi
  41886c:	call   0x42d6f8
  418871:	mov    esi,0xffffffff
  418876:	jmp    0x418805
  418878:	nop    DWORD PTR [rax+rax*1+0x0]
  418880:	xor    edx,edx
  418882:	mov    rcx,rbx
  418885:	call   0x415df0
  41888a:	movzx  eax,WORD PTR [rbx]
  41888d:	jmp    0x4186c8
  418892:	nop    DWORD PTR [rax+0x0]
  418896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4188a0:	push   rbp
  4188a1:	push   rdi
  4188a2:	push   rsi
  4188a3:	push   rbx
  4188a4:	sub    rsp,0x28
  4188a8:	mov    rax,QWORD PTR [rip+0x23581]        # 0x43be30
  4188af:	mov    rbx,rcx
  4188b2:	mov    rsi,rdx
  4188b5:	mov    ecx,DWORD PTR [rax]
  4188b7:	test   ecx,ecx
  4188b9:	jne    0x418a20
  4188bf:	mov    edx,0x1
  4188c4:	mov    rcx,rbx
  4188c7:	call   0x423970
  4188cc:	cmp    eax,0x1
  4188cf:	jne    0x418a40
  4188d5:	test   rsi,rsi
  4188d8:	je     0x4188de
  4188da:	add    DWORD PTR [rsi+0x8],0x1
  4188de:	lea    rcx,[rbx+0x160]
  4188e5:	call   0x412460
  4188ea:	movzx  eax,WORD PTR [rbx]
  4188ed:	mov    QWORD PTR [rbx+0x160],rsi
  4188f4:	cmp    ax,0x6ff
  4188f8:	ja     0x4189d0
  4188fe:	cmp    BYTE PTR [rsi+0x2e],0x0
  418902:	jne    0x418a00
  418908:	mov    rcx,QWORD PTR [rsi+0x40]
  41890c:	test   rcx,rcx
  41890f:	je     0x41891e
  418911:	call   0x42d6f8
  418916:	mov    QWORD PTR [rsi+0x40],0x0
  41891e:	lea    rbp,[rsi+0x10]
  418922:	mov    BYTE PTR [rbx+0xf1],0xf
  418929:	mov    rcx,rbp
  41892c:	call   0x42d610
  418931:	mov    edx,0xe7
  418936:	mov    rdi,rax
  418939:	mov    rcx,rbx
  41893c:	call   0x4241d0
  418941:	lea    eax,[rdi+0x5]
  418944:	mov    rcx,rbx
  418947:	movsx  edx,ax
  41894a:	call   0x424180
  41894f:	mov    edx,0x2
  418954:	mov    rcx,rbx
  418957:	call   0x4241d0
  41895c:	xor    edx,edx
  41895e:	cmp    QWORD PTR [rsi+0x38],0x0
  418963:	mov    rcx,rbx
  418966:	setne  dl
  418969:	call   0x4241d0
  41896e:	movzx  edx,dil
  418972:	mov    rcx,rbx
  418975:	call   0x4241d0
  41897a:	movsxd r8,edi
  41897d:	mov    rdx,rbp
  418980:	mov    rcx,rbx
  418983:	call   0x423f10
  418988:	xor    edx,edx
  41898a:	mov    rcx,rbx
  41898d:	call   0x424180
  418992:	mov    rdx,QWORD PTR [rsi+0x38]
  418996:	test   rdx,rdx
  418999:	je     0x4189aa
  41899b:	lea    r8,[rdx+0x8]
  41899f:	xor    r9d,r9d
  4189a2:	mov    rcx,rbx
  4189a5:	call   0x416200
  4189aa:	mov    rcx,rbx
  4189ad:	mov    edx,0x3
  4189b2:	call   0x423970
  4189b7:	mov    rcx,rbx
  4189ba:	add    rsp,0x28
  4189be:	pop    rbx
  4189bf:	pop    rsi
  4189c0:	pop    rdi
  4189c1:	pop    rbp
  4189c2:	jmp    0x424270
  4189c7:	nop    WORD PTR [rax+rax*1+0x0]
  4189d0:	mov    edx,DWORD PTR [rsi+0xc]
  4189d3:	test   edx,edx
  4189d5:	je     0x418a47
  4189d7:	cmp    ax,0x701
  4189db:	mov    BYTE PTR [rbx+0xf1],0x3
  4189e2:	jbe    0x4189ee
  4189e4:	xor    edx,edx
  4189e6:	mov    rcx,rbx
  4189e9:	call   0x415df0
  4189ee:	lea    rdx,[rsi+0xc]
  4189f2:	lea    r8,[rsi+0x38]
  4189f6:	mov    rcx,rbx
  4189f9:	call   0x416390
  4189fe:	jmp    0x4189aa
  418a00:	mov    rdx,QWORD PTR [rsi+0x40]
  418a04:	mov    r8,QWORD PTR [rsi+0x38]
  418a08:	mov    rcx,rbx
  418a0b:	call   0x4169b0
  418a10:	test   eax,eax
  418a12:	jns    0x4189aa
  418a14:	add    rsp,0x28
  418a18:	pop    rbx
  418a19:	pop    rsi
  418a1a:	pop    rdi
  418a1b:	pop    rbp
  418a1c:	ret    
  418a1d:	nop    DWORD PTR [rax]
  418a20:	lea    r8,[rip+0x1dbae]        # 0x4365d5
  418a27:	lea    rcx,[rip+0x1d132]        # 0x435b60
  418a2e:	mov    edx,0x6cc7
  418a33:	call   0x40d350
  418a38:	jmp    0x4188bf
  418a3d:	nop    DWORD PTR [rax]
  418a40:	mov    eax,0xffffffff
  418a45:	jmp    0x418a14
  418a47:	xor    edx,edx
  418a49:	mov    rcx,rbx
  418a4c:	call   0x423970
  418a51:	mov    eax,0xffffffff
  418a56:	jmp    0x418a14
  418a58:	nop    DWORD PTR [rax+rax*1+0x0]
  418a60:	cmp    WORD PTR [rcx],0x6ff
  418a65:	jbe    0x418a6e
  418a67:	mov    eax,DWORD PTR [rdx+0xc]
  418a6a:	test   eax,eax
  418a6c:	je     0x418a7f
  418a6e:	xor    eax,eax
  418a70:	cmp    BYTE PTR [rdx+0x2e],0x0
  418a74:	jne    0x418a7f
  418a76:	xor    eax,eax
  418a78:	cmp    BYTE PTR [rdx+0x10],0x0
  418a7c:	setne  al
  418a7f:	repz ret 
  418a81:	nop    DWORD PTR [rax+rax*1+0x0]
  418a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418a90:	sub    rsp,0x28
  418a94:	cmp    WORD PTR [rcx],0x6ff
  418a99:	jbe    0x418ab0
  418a9b:	mov    eax,DWORD PTR [rdx+0xc]
  418a9e:	test   eax,eax
  418aa0:	jne    0x418ab0
  418aa2:	call   0x4124f0
  418aa7:	xor    eax,eax
  418aa9:	add    rsp,0x28
  418aad:	ret    
  418aae:	xchg   ax,ax
  418ab0:	cmp    BYTE PTR [rdx+0x2e],0x0
  418ab4:	jne    0x418aa2
  418ab6:	cmp    BYTE PTR [rdx+0x10],0x0
  418aba:	je     0x418aa2
  418abc:	mov    BYTE PTR [rdx+0x2f],0x1
  418ac0:	or     BYTE PTR [rcx+0xa0],0x8
  418ac7:	xor    eax,eax
  418ac9:	add    rsp,0x28
  418acd:	ret    
  418ace:	xchg   ax,ax
  418ad0:	push   rdi
  418ad1:	push   rsi
  418ad2:	push   rbx
  418ad3:	sub    rsp,0x40
  418ad7:	test   rdx,rdx
  418ada:	je     0x418cc2
  418ae0:	mov    rax,QWORD PTR [rip+0x23349]        # 0x43be30
  418ae7:	mov    rsi,rdx
  418aea:	mov    rbx,rcx
  418aed:	mov    eax,DWORD PTR [rax]
  418aef:	test   eax,eax
  418af1:	jne    0x418cd0
  418af7:	mov    edx,0x1
  418afc:	mov    rcx,rbx
  418aff:	call   0x423970
  418b04:	cmp    eax,0x1
  418b07:	jne    0x418cc2
  418b0d:	add    DWORD PTR [rsi+0x8],0x1
  418b11:	lea    rcx,[rbx+0x160]
  418b18:	call   0x412460
  418b1d:	movzx  eax,WORD PTR [rbx]
  418b20:	mov    QWORD PTR [rbx+0x160],rsi
  418b27:	cmp    ax,0x6ff
  418b2b:	jbe    0x418bc2
  418b31:	cmp    ax,0x701
  418b35:	mov    BYTE PTR [rbx+0xf1],0x3
  418b3c:	ja     0x418cb0
  418b42:	cmp    ax,0x700
  418b46:	jbe    0x418c01
  418b4c:	mov    edx,0xffffffff
  418b51:	mov    rcx,rbx
  418b54:	call   0x424180
  418b59:	mov    edx,0xf
  418b5e:	mov    rcx,rbx
  418b61:	call   0x424180
  418b66:	xor    edx,edx
  418b68:	mov    rcx,rbx
  418b6b:	call   0x424180
  418b70:	xor    edx,edx
  418b72:	mov    rcx,rbx
  418b75:	call   0x4241d0
  418b7a:	xor    edx,edx
  418b7c:	mov    rcx,rbx
  418b7f:	call   0x4241d0
  418b84:	mov    edx,0x26
  418b89:	mov    rcx,rbx
  418b8c:	call   0x4241d0
  418b91:	mov    edx,0x4
  418b96:	mov    rcx,rbx
  418b99:	call   0x4241d0
  418b9e:	mov    edx,0x4
  418ba3:	mov    rcx,rbx
  418ba6:	call   0x4241d0
  418bab:	mov    edx,DWORD PTR [rsi+0xc]
  418bae:	mov    rcx,rbx
  418bb1:	call   0x424140
  418bb6:	mov    DWORD PTR [rbx+0x178],0xf
  418bc0:	jmp    0x418be4
  418bc2:	cmp    BYTE PTR [rsi+0x2e],0x0
  418bc6:	je     0x418c35
  418bc8:	lea    rdx,[rip+0x1da44]        # 0x436613
  418bcf:	mov    BYTE PTR [rbx+0xf1],0x1
  418bd6:	mov    r8d,0xffffffff
  418bdc:	mov    rcx,rbx
  418bdf:	call   0x423fa0
  418be4:	mov    edx,0x3
  418be9:	mov    rcx,rbx
  418bec:	call   0x423970
  418bf1:	mov    rcx,rbx
  418bf4:	call   0x424270
  418bf9:	add    rsp,0x40
  418bfd:	pop    rbx
  418bfe:	pop    rsi
  418bff:	pop    rdi
  418c00:	ret    
  418c01:	mov    rcx,rbx
  418c04:	lea    rdi,[rsp+0x20]
  418c09:	mov    edx,0xc
  418c0e:	call   0x424180
  418c13:	lea    rdx,[rip+0x1d9ec]        # 0x436606
  418c1a:	mov    rcx,rdi
  418c1d:	call   0x4156a0
  418c22:	mov    rdx,rdi
  418c25:	mov    r8,rax
  418c28:	mov    rcx,rbx
  418c2b:	call   0x423f10
  418c30:	jmp    0x418b66
  418c35:	add    rsi,0x10
  418c39:	mov    BYTE PTR [rbx+0xf1],0xf
  418c40:	mov    rcx,rsi
  418c43:	call   0x42d610
  418c48:	mov    edx,0xe7
  418c4d:	mov    rdi,rax
  418c50:	mov    rcx,rbx
  418c53:	call   0x4241d0
  418c58:	lea    eax,[rdi+0x5]
  418c5b:	mov    rcx,rbx
  418c5e:	movsx  edx,ax
  418c61:	call   0x424180
  418c66:	mov    edx,0x4
  418c6b:	mov    rcx,rbx
  418c6e:	call   0x4241d0
  418c73:	xor    edx,edx
  418c75:	mov    rcx,rbx
  418c78:	call   0x4241d0
  418c7d:	movzx  edx,dil
  418c81:	mov    rcx,rbx
  418c84:	call   0x4241d0
  418c89:	movsxd r8,edi
  418c8c:	mov    rdx,rsi
  418c8f:	mov    rcx,rbx
  418c92:	call   0x423f10
  418c97:	xor    edx,edx
  418c99:	mov    rcx,rbx
  418c9c:	call   0x424180
  418ca1:	mov    DWORD PTR [rbx+0x178],0x64
  418cab:	jmp    0x418be4
  418cb0:	xor    edx,edx
  418cb2:	mov    rcx,rbx
  418cb5:	call   0x415df0
  418cba:	movzx  eax,WORD PTR [rbx]
  418cbd:	jmp    0x418b42
  418cc2:	mov    eax,0xffffffff
  418cc7:	add    rsp,0x40
  418ccb:	pop    rbx
  418ccc:	pop    rsi
  418ccd:	pop    rdi
  418cce:	ret    
  418ccf:	nop
  418cd0:	lea    r9,[rdx+0x10]
  418cd4:	lea    r8,[rip+0x1d910]        # 0x4365eb
  418cdb:	lea    rcx,[rip+0x1ce7e]        # 0x435b60
  418ce2:	mov    edx,0x76d7
  418ce7:	call   0x40d350
  418cec:	jmp    0x418af7
  418cf1:	nop    DWORD PTR [rax+rax*1+0x0]
  418cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418d00:	push   r15
  418d02:	push   r14
  418d04:	push   r13
  418d06:	push   r12
  418d08:	push   rbp
  418d09:	push   rdi
  418d0a:	push   rsi
  418d0b:	push   rbx
  418d0c:	sub    rsp,0x98
  418d13:	test   r8,r8
  418d16:	mov    rbx,rcx
  418d19:	mov    r15,rdx
  418d1c:	mov    rdi,r8
  418d1f:	mov    r12,r9
  418d22:	je     0x419140
  418d28:	movzx  ebp,WORD PTR [r8+0x8]
  418d2d:	test   rbx,rbx
  418d30:	je     0x419170
  418d36:	test   r15,r15
  418d39:	je     0x419150
  418d3f:	mov    edx,0x1
  418d44:	mov    rcx,rbx
  418d47:	mov    esi,0xffffffff
  418d4c:	call   0x423970
  418d51:	cmp    eax,0x1
  418d54:	jne    0x418fd0
  418d5a:	lea    rcx,[rbx+0x160]
  418d61:	call   0x412460
  418d66:	mov    rcx,r15
  418d69:	call   0x42d610
  418d6e:	movzx  ecx,WORD PTR [rbx]
  418d71:	mov    r13,rax
  418d74:	cmp    cx,0x6ff
  418d79:	ja     0x418f70
  418d7f:	cmp    cx,0x500
  418d84:	je     0x419020
  418d8a:	cmp    cx,0x4ff
  418d8f:	ja     0x4191cb
  418d95:	test   rdi,rdi
  418d98:	je     0x4191a0
  418d9e:	movzx  r12d,WORD PTR [rdi+0x8]
  418da3:	test   r12d,r12d
  418da6:	je     0x4191a0
  418dac:	xor    ebp,ebp
  418dae:	xor    r13d,r13d
  418db1:	xor    esi,esi
  418db3:	lea    r14,[rsp+0x40]
  418db8:	jmp    0x418dd0
  418dba:	nop    WORD PTR [rax+rax*1+0x0]
  418dc0:	add    esi,0x1
  418dc3:	add    rbp,0x8
  418dc7:	cmp    r12d,esi
  418dca:	je     0x418eb2
  418dd0:	mov    rax,QWORD PTR [rdi]
  418dd3:	mov    r9,QWORD PTR [rax+rbp*1]
  418dd7:	test   BYTE PTR [r9+0x58],0x20
  418ddc:	je     0x418dc0
  418dde:	add    r13d,0x1
  418de2:	lea    rdx,[rip+0x1d84c]        # 0x436635
  418de9:	mov    rcx,r14
  418dec:	mov    r8d,r13d
  418def:	mov    QWORD PTR [rsp+0x38],r9
  418df4:	call   0x42d648
  418df9:	mov    r9,QWORD PTR [rsp+0x38]
  418dfe:	mov    r8,r14
  418e01:	mov    edx,DWORD PTR [r8]
  418e04:	add    r8,0x4
  418e08:	lea    eax,[rdx-0x1010101]
  418e0e:	not    edx
  418e10:	and    eax,edx
  418e12:	and    eax,0x80808080
  418e17:	je     0x418e01
  418e19:	mov    edx,eax
  418e1b:	mov    rcx,rbx
  418e1e:	shr    edx,0x10
  418e21:	test   eax,0x8080
  418e26:	cmove  eax,edx
  418e29:	lea    rdx,[r8+0x2]
  418e2d:	cmove  r8,rdx
  418e31:	add    al,al
  418e33:	mov    rdx,r9
  418e36:	sbb    r8,0x3
  418e3a:	call   0x416bc0
  418e3f:	mov    rcx,r14
  418e42:	mov    edx,DWORD PTR [rcx]
  418e44:	add    rcx,0x4
  418e48:	lea    eax,[rdx-0x1010101]
  418e4e:	not    edx
  418e50:	and    eax,edx
  418e52:	and    eax,0x80808080
  418e57:	je     0x418e42
  418e59:	mov    edx,eax
  418e5b:	mov    r8d,r13d
  418e5e:	shr    edx,0x10
  418e61:	test   eax,0x8080
  418e66:	cmove  eax,edx
  418e69:	lea    rdx,[rcx+0x2]
  418e6d:	cmove  rcx,rdx
  418e71:	add    al,al
  418e73:	lea    rdx,[rip+0x1d7ca]        # 0x436644
  418e7a:	sbb    rcx,0x3
  418e7e:	add    rbp,0x8
  418e82:	call   0x42d648
  418e87:	mov    r8d,0xffffffff
  418e8d:	mov    rdx,r14
  418e90:	mov    rcx,rbx
  418e93:	call   0x423fa0
  418e98:	mov    rdx,QWORD PTR [rdi]
  418e9b:	mov    r8d,esi
  418e9e:	mov    rcx,rbx
  418ea1:	add    esi,0x1
  418ea4:	call   0x416480
  418ea9:	cmp    r12d,esi
  418eac:	jne    0x418dd0
  418eb2:	lea    rdx,[rip+0x1d796]        # 0x43664f
  418eb9:	mov    r8d,0x6
  418ebf:	mov    rcx,rbx
  418ec2:	xor    ebp,ebp
  418ec4:	xor    r14d,r14d
  418ec7:	xor    esi,esi
  418ec9:	call   0x423fa0
  418ece:	mov    rdx,r15
  418ed1:	mov    r8d,0xffffffff
  418ed7:	mov    rcx,rbx
  418eda:	call   0x423fa0
  418edf:	lea    r15,[rsp+0x40]
  418ee4:	lea    rdx,[rip+0x1d73b]        # 0x436626
  418eeb:	jmp    0x418f2e
  418eed:	nop    DWORD PTR [rax]
  418ef0:	lea    rdx,[rip+0x1d761]        # 0x436658
  418ef7:	add    r14d,0x1
  418efb:	mov    rcx,r15
  418efe:	mov    r8d,r14d
  418f01:	call   0x42d648
  418f06:	mov    r8d,0xffffffff
  418f0c:	mov    rdx,r15
  418f0f:	mov    rcx,rbx
  418f12:	call   0x423fa0
  418f17:	add    esi,0x1
  418f1a:	add    rbp,0x8
  418f1e:	lea    rdx,[rip+0x1d73f]        # 0x436664
  418f25:	cmp    r12d,esi
  418f28:	je     0x419090
  418f2e:	mov    rax,QWORD PTR [rdi]
  418f31:	mov    r8d,0xffffffff
  418f37:	mov    rcx,rbx
  418f3a:	mov    r13,QWORD PTR [rax+rbp*1]
  418f3e:	call   0x423fa0
  418f43:	mov    rdx,QWORD PTR [r13+0x38]
  418f47:	mov    r8,QWORD PTR [rdx]
  418f4a:	test   r8,r8
  418f4d:	jne    0x418ff0
  418f53:	test   BYTE PTR [r13+0x58],0x20
  418f58:	jne    0x418ef0
  418f5a:	mov    rdx,QWORD PTR [rdi]
  418f5d:	mov    r8d,esi
  418f60:	mov    rcx,rbx
  418f63:	call   0x416480
  418f68:	jmp    0x418f17
  418f6a:	nop    WORD PTR [rax+rax*1+0x0]
  418f70:	mov    rax,QWORD PTR [rbx+0x68]
  418f74:	lea    rdx,[rsp+0x40]
  418f79:	mov    r9d,r13d
  418f7c:	mov    r8,r15
  418f7f:	mov    rcx,rbx
  418f82:	mov    QWORD PTR [rsp+0x20],rdx
  418f87:	mov    rdx,QWORD PTR [rax]
  418f8a:	call   0x415cf0
  418f8f:	test   rax,rax
  418f92:	mov    r13,rax
  418f95:	je     0x4191cb
  418f9b:	cmp    WORD PTR [rbx],0x701
  418fa0:	mov    BYTE PTR [rbx+0xf1],0x3
  418fa7:	jbe    0x4190b0
  418fad:	mov    rdx,r12
  418fb0:	mov    rcx,rbx
  418fb3:	call   0x415df0
  418fb8:	test   eax,eax
  418fba:	je     0x4190b0
  418fc0:	cmp    r15,r13
  418fc3:	je     0x418fd0
  418fc5:	mov    rcx,r13
  418fc8:	call   0x42d6f8
  418fcd:	nop    DWORD PTR [rax]
  418fd0:	mov    eax,esi
  418fd2:	add    rsp,0x98
  418fd9:	pop    rbx
  418fda:	pop    rsi
  418fdb:	pop    rdi
  418fdc:	pop    rbp
  418fdd:	pop    r12
  418fdf:	pop    r13
  418fe1:	pop    r14
  418fe3:	pop    r15
  418fe5:	ret    
  418fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418ff0:	add    rdx,0x8
  418ff4:	mov    rcx,rbx
  418ff7:	call   0x423fa0
  418ffc:	lea    rdx,[rip+0x1d653]        # 0x436656
  419003:	mov    r8d,0x1
  419009:	mov    rcx,rbx
  41900c:	call   0x423fa0
  419011:	jmp    0x418f53
  419016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419020:	mov    edx,0xe6
  419025:	mov    rcx,rbx
  419028:	mov    BYTE PTR [rbx+0xf1],0xf
  41902f:	call   0x4241d0
  419034:	lea    edx,[r13+0x3]
  419038:	mov    rcx,rbx
  41903b:	movsx  edx,dx
  41903e:	call   0x424180
  419043:	movzx  edx,r13b
  419047:	mov    rcx,rbx
  41904a:	call   0x4241d0
  41904f:	movsxd r8,r13d
  419052:	mov    rdx,r15
  419055:	mov    rcx,rbx
  419058:	call   0x423f10
  41905d:	test   ebp,ebp
  41905f:	je     0x41918e
  419065:	mov    edx,0x2
  41906a:	mov    rcx,rbx
  41906d:	call   0x424180
  419072:	lea    r8,[rdi+0x8]
  419076:	mov    r9d,0x1
  41907c:	mov    rdx,rdi
  41907f:	mov    rcx,rbx
  419082:	call   0x416200
  419087:	nop    WORD PTR [rax+rax*1+0x0]
  419090:	mov    edx,0x3
  419095:	mov    rcx,rbx
  419098:	call   0x423970
  41909d:	mov    rcx,rbx
  4190a0:	call   0x424270
  4190a5:	mov    esi,eax
  4190a7:	jmp    0x418fd0
  4190ac:	nop    DWORD PTR [rax+0x0]
  4190b0:	mov    rdx,QWORD PTR [rsp+0x40]
  4190b5:	mov    rcx,rbx
  4190b8:	shr    rdx,1
  4190bb:	movsx  edx,dx
  4190be:	call   0x424180
  4190c3:	movsxd r8,DWORD PTR [rsp+0x40]
  4190c8:	mov    rdx,r13
  4190cb:	mov    rcx,rbx
  4190ce:	call   0x423f10
  4190d3:	cmp    r15,r13
  4190d6:	je     0x4190e0
  4190d8:	mov    rcx,r13
  4190db:	call   0x42d6f8
  4190e0:	xor    edx,edx
  4190e2:	mov    rcx,rbx
  4190e5:	call   0x424180
  4190ea:	test   ebp,ebp
  4190ec:	je     0x419090
  4190ee:	lea    eax,[rbp-0x1]
  4190f1:	xor    esi,esi
  4190f3:	lea    r12,[rax*8+0x8]
  4190fb:	nop    DWORD PTR [rax+rax*1+0x0]
  419100:	mov    rax,QWORD PTR [rdi]
  419103:	mov    r8d,0x1
  419109:	mov    rcx,rbx
  41910c:	mov    rbp,QWORD PTR [rax+rsi*1]
  419110:	add    rsi,0x8
  419114:	mov    rdx,rbp
  419117:	call   0x416000
  41911c:	mov    rax,QWORD PTR [rbp+0x0]
  419120:	xor    r8d,r8d
  419123:	mov    rdx,rbp
  419126:	mov    rcx,rbx
  419129:	call   QWORD PTR [rax+0x28]
  41912c:	cmp    rsi,r12
  41912f:	jne    0x419100
  419131:	jmp    0x419090
  419136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419140:	xor    ebp,ebp
  419142:	jmp    0x418d2d
  419147:	nop    WORD PTR [rax+rax*1+0x0]
  419150:	lea    rdx,[rip+0x1ca09]        # 0x435b60
  419157:	lea    rcx,[rip+0x1d4ce]        # 0x43662c
  41915e:	mov    r8d,0x7f3
  419164:	call   0x42d350
  419169:	jmp    0x418d3f
  41916e:	xchg   ax,ax
  419170:	lea    rdx,[rip+0x1c9e9]        # 0x435b60
  419177:	lea    rcx,[rip+0x1d4aa]        # 0x436628
  41917e:	mov    r8d,0x7f2
  419184:	call   0x42d350
  419189:	jmp    0x418d36
  41918e:	xor    edx,edx
  419190:	mov    rcx,rbx
  419193:	call   0x424180
  419198:	jmp    0x419090
  41919d:	nop    DWORD PTR [rax]
  4191a0:	lea    rdx,[rip+0x1d4a8]        # 0x43664f
  4191a7:	mov    rcx,rbx
  4191aa:	mov    r8d,0x6
  4191b0:	call   0x423fa0
  4191b5:	mov    r8d,0xffffffff
  4191bb:	mov    rdx,r15
  4191be:	mov    rcx,rbx
  4191c1:	call   0x423fa0
  4191c6:	jmp    0x419090
  4191cb:	xor    edx,edx
  4191cd:	mov    rcx,rbx
  4191d0:	call   0x423970
  4191d5:	jmp    0x418fd0
  4191da:	nop    WORD PTR [rax+rax*1+0x0]
  4191e0:	push   rsi
  4191e1:	push   rbx
  4191e2:	sub    rsp,0x48
  4191e6:	mov    rbx,rcx
  4191e9:	lea    rcx,[rcx+0x180]
  4191f0:	call   0x424ad0
  4191f5:	test   eax,eax
  4191f7:	je     0x419222
  4191f9:	movzx  eax,BYTE PTR [rbx+0x14c]
  419200:	test   al,al
  419202:	jne    0x41920b
  419204:	mov    BYTE PTR [rbx+0x14c],0x1
  41920b:	lea    rcx,[rbx+0x18]
  41920f:	mov    edx,0x1
  419214:	call   0x413340
  419219:	xor    eax,eax
  41921b:	add    rsp,0x48
  41921f:	pop    rbx
  419220:	pop    rsi
  419221:	ret    
  419222:	mov    rdx,QWORD PTR [rip+0x22c07]        # 0x43be30
  419229:	mov    r8d,DWORD PTR [rdx]
  41922c:	test   r8d,r8d
  41922f:	jne    0x419262
  419231:	movzx  edx,BYTE PTR [rbx+0x14c]
  419238:	test   dl,dl
  41923a:	jne    0x419246
  41923c:	mov    edx,DWORD PTR [rbx+0x148]
  419242:	test   edx,edx
  419244:	jne    0x4192c0
  419246:	mov    DWORD PTR [rsp+0x3c],eax
  41924a:	lea    rcx,[rbx+0x190]
  419251:	call   QWORD PTR [rip+0x2970d]        # 0x442964
  419257:	mov    eax,DWORD PTR [rsp+0x3c]
  41925b:	add    rsp,0x48
  41925f:	pop    rbx
  419260:	pop    rsi
  419261:	ret    
  419262:	mov    ecx,DWORD PTR [rbx+0x148]
  419268:	lea    rdx,[rip+0x1d3f8]        # 0x436667
  41926f:	movzx  r8d,BYTE PTR [rbx+0x14c]
  419277:	lea    r9,[rip+0x1d3e8]        # 0x436666
  41927e:	mov    DWORD PTR [rsp+0x3c],eax
  419282:	test   ecx,ecx
  419284:	mov    rcx,rdx
  419287:	cmove  rcx,r9
  41928b:	test   r8b,r8b
  41928e:	lea    r8,[rip+0x1d3db]        # 0x436670
  419295:	mov    QWORD PTR [rsp+0x20],rcx
  41929a:	lea    rcx,[rip+0x1c8bf]        # 0x435b60
  4192a1:	cmove  r9,rdx
  4192a5:	mov    edx,0x89a7
  4192aa:	call   0x40d350
  4192af:	mov    eax,DWORD PTR [rsp+0x3c]
  4192b3:	jmp    0x419231
  4192b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4192c0:	mov    rcx,rbx
  4192c3:	call   0x415410
  4192c8:	lea    rcx,[rbx+0x190]
  4192cf:	mov    esi,eax
  4192d1:	call   QWORD PTR [rip+0x2968d]        # 0x442964
  4192d7:	mov    eax,esi
  4192d9:	add    rsp,0x48
  4192dd:	pop    rbx
  4192de:	pop    rsi
  4192df:	ret    
  4192e0:	push   rbp
  4192e1:	push   rdi
  4192e2:	push   rsi
  4192e3:	push   rbx
  4192e4:	sub    rsp,0x38
  4192e8:	test   r9d,r9d
  4192eb:	mov    rbp,rcx
  4192ee:	mov    rdi,rdx
  4192f1:	mov    rsi,r8
  4192f4:	movsxd rax,r9d
  4192f7:	js     0x4193b0
  4192fd:	cmp    DWORD PTR [rbp+0x4],0xc0500ff
  419304:	ja     0x4193c5
  41930a:	xor    r10d,r10d
  41930d:	test   rax,rax
  419310:	jne    0x419329
  419312:	jmp    0x419380
  419314:	test   r10,r10
  419317:	je     0x419349
  419319:	nop    DWORD PTR [rax+0x0]
  419320:	add    r10,0x1
  419324:	cmp    r10,rax
  419327:	je     0x419380
  419329:	movzx  ebx,BYTE PTR [rsi+r10*1]
  41932e:	mov    r11d,ebx
  419331:	and    r11d,0xffffffdf
  419335:	sub    r11d,0x41
  419339:	cmp    r11b,0x19
  41933d:	jbe    0x419320
  41933f:	lea    r8d,[rbx-0x30]
  419343:	cmp    r8b,0x9
  419347:	jbe    0x419314
  419349:	cmp    bl,0x5f
  41934c:	je     0x419320
  41934e:	mov    QWORD PTR [rsp+0x20],rax
  419353:	mov    r9,rsi
  419356:	mov    r8d,0x22
  41935c:	mov    rdx,rdi
  41935f:	mov    rcx,rbp
  419362:	call   0x4154d0
  419367:	mov    rbx,rax
  41936a:	mov    rax,rbx
  41936d:	add    rsp,0x38
  419371:	pop    rbx
  419372:	pop    rsi
  419373:	pop    rdi
  419374:	pop    rbp
  419375:	ret    
  419376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419380:	test   rdi,rdi
  419383:	mov    rbx,rax
  419386:	je     0x41936a
  419388:	mov    r8,rax
  41938b:	mov    rdx,rsi
  41938e:	mov    rcx,rdi
  419391:	call   0x42d6a8
  419396:	mov    rax,rbx
  419399:	mov    BYTE PTR [rdi+rbx*1],0x0
  41939d:	add    rsp,0x38
  4193a1:	pop    rbx
  4193a2:	pop    rsi
  4193a3:	pop    rdi
  4193a4:	pop    rbp
  4193a5:	ret    
  4193a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4193b0:	mov    rcx,r8
  4193b3:	call   0x42d610
  4193b8:	cmp    DWORD PTR [rbp+0x4],0xc0500ff
  4193bf:	jbe    0x41930a
  4193c5:	mov    QWORD PTR [rsp+0x20],rax
  4193ca:	mov    r9,rsi
  4193cd:	mov    r8d,0x5d
  4193d3:	mov    rdx,rdi
  4193d6:	mov    rcx,rbp
  4193d9:	call   0x4154d0
  4193de:	mov    rbx,rax
  4193e1:	mov    rax,rbx
  4193e4:	add    rsp,0x38
  4193e8:	pop    rbx
  4193e9:	pop    rsi
  4193ea:	pop    rdi
  4193eb:	pop    rbp
  4193ec:	ret    
  4193ed:	nop    DWORD PTR [rax]
  4193f0:	push   rbx
  4193f1:	sub    rsp,0x40
  4193f5:	test   r9d,r9d
  4193f8:	mov    rbx,rcx
  4193fb:	movsxd rax,r9d
  4193fe:	js     0x419420
  419400:	mov    r9,r8
  419403:	mov    QWORD PTR [rsp+0x20],rax
  419408:	mov    r8d,0x27
  41940e:	mov    rcx,rbx
  419411:	call   0x4154d0
  419416:	add    rsp,0x40
  41941a:	pop    rbx
  41941b:	ret    
  41941c:	nop    DWORD PTR [rax+0x0]
  419420:	mov    rcx,r8
  419423:	mov    QWORD PTR [rsp+0x38],rdx
  419428:	mov    QWORD PTR [rsp+0x30],r8
  41942d:	call   0x42d610
  419432:	mov    rdx,QWORD PTR [rsp+0x38]
  419437:	mov    r8,QWORD PTR [rsp+0x30]
  41943c:	jmp    0x419400
  41943e:	xchg   ax,ax
  419440:	push   r12
  419442:	push   rbp
  419443:	push   rdi
  419444:	push   rsi
  419445:	push   rbx
  419446:	sub    rsp,0x20
  41944a:	test   rdx,rdx
  41944d:	je     0x4195c0
  419453:	mov    rbp,QWORD PTR [rip+0x229d6]        # 0x43be30
  41945a:	mov    rbx,rcx
  41945d:	mov    rdi,r9
  419460:	mov    rsi,rdx
  419463:	mov    ecx,DWORD PTR [rbp+0x0]
  419466:	test   ecx,ecx
  419468:	jne    0x4195d0
  41946e:	movzx  edx,WORD PTR [rbx]
  419471:	cmp    dx,0x6ff
  419476:	ja     0x419580
  41947c:	xor    eax,eax
  41947e:	cmp    dx,0x500
  419483:	jne    0x41956f
  419489:	mov    edx,DWORD PTR [rdi]
  41948b:	test   edx,edx
  41948d:	je     0x419592
  419493:	cmp    DWORD PTR [rbx+0x148],0x1
  41949a:	jne    0x4195c0
  4194a0:	cmp    BYTE PTR [rbx+0xf1],0xf
  4194a7:	jne    0x4195c0
  4194ad:	mov    edx,0x86
  4194b2:	mov    rcx,rbx
  4194b5:	call   0x4241d0
  4194ba:	mov    rcx,QWORD PTR [rsi+0x10]
  4194be:	call   0x42d610
  4194c3:	mov    rcx,QWORD PTR [rsi+0x20]
  4194c7:	mov    r12,rax
  4194ca:	call   0x42d610
  4194cf:	lea    edx,[r12+rax*1+0x6]
  4194d4:	mov    rcx,rbx
  4194d7:	movsx  edx,dx
  4194da:	call   0x424180
  4194df:	mov    eax,DWORD PTR [rbp+0x0]
  4194e2:	test   eax,eax
  4194e4:	jne    0x4195f1
  4194ea:	mov    rcx,QWORD PTR [rsi+0x10]
  4194ee:	call   0x42d610
  4194f3:	mov    rcx,rbx
  4194f6:	movzx  edx,al
  4194f9:	call   0x4241d0
  4194fe:	mov    rbp,QWORD PTR [rsi+0x10]
  419502:	mov    rcx,rbp
  419505:	call   0x42d610
  41950a:	mov    rdx,rbp
  41950d:	movsxd r8,eax
  419510:	mov    rcx,rbx
  419513:	call   0x423f10
  419518:	mov    edx,0x1
  41951d:	mov    rcx,rbx
  419520:	call   0x4241d0
  419525:	xor    edx,edx
  419527:	mov    rcx,rbx
  41952a:	call   0x4241d0
  41952f:	mov    rcx,QWORD PTR [rsi+0x20]
  419533:	call   0x42d610
  419538:	mov    rcx,rbx
  41953b:	movsx  edx,ax
  41953e:	call   0x424180
  419543:	mov    rsi,QWORD PTR [rsi+0x20]
  419547:	mov    rcx,rsi
  41954a:	call   0x42d610
  41954f:	mov    rdx,rsi
  419552:	movsxd r8,eax
  419555:	mov    rcx,rbx
  419558:	call   0x423f10
  41955d:	xor    edx,edx
  41955f:	mov    rcx,rbx
  419562:	call   0x4241d0
  419567:	mov    DWORD PTR [rdi],0x1
  41956d:	xor    eax,eax
  41956f:	add    rsp,0x20
  419573:	pop    rbx
  419574:	pop    rsi
  419575:	pop    rdi
  419576:	pop    rbp
  419577:	pop    r12
  419579:	ret    
  41957a:	nop    WORD PTR [rax+rax*1+0x0]
  419580:	or     WORD PTR [rsi+0x44],0xd
  419585:	xor    eax,eax
  419587:	add    rsp,0x20
  41958b:	pop    rbx
  41958c:	pop    rsi
  41958d:	pop    rdi
  41958e:	pop    rbp
  41958f:	pop    r12
  419591:	ret    
  419592:	mov    edx,0x1
  419597:	mov    rcx,rbx
  41959a:	call   0x423970
  41959f:	cmp    eax,0x1
  4195a2:	jne    0x4195c0
  4195a4:	cmp    DWORD PTR [rbx+0x148],0x1
  4195ab:	mov    BYTE PTR [rbx+0xf1],0xf
  4195b2:	je     0x4194ad
  4195b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4195c0:	mov    eax,0xffffffff
  4195c5:	add    rsp,0x20
  4195c9:	pop    rbx
  4195ca:	pop    rsi
  4195cb:	pop    rdi
  4195cc:	pop    rbp
  4195cd:	pop    r12
  4195cf:	ret    
  4195d0:	mov    r9d,DWORD PTR [rdx+0x18]
  4195d4:	lea    r8,[rip+0x1d0c5]        # 0x4366a0
  4195db:	lea    rcx,[rip+0x1c57e]        # 0x435b60
  4195e2:	mov    edx,0x9275
  4195e7:	call   0x40d350
  4195ec:	jmp    0x41946e
  4195f1:	mov    rcx,QWORD PTR [rsi+0x10]
  4195f5:	call   0x42d610
  4195fa:	mov    rcx,QWORD PTR [rsi+0x20]
  4195fe:	mov    rbp,rax
  419601:	call   0x42d610
  419606:	lea    r8,[rip+0x1d0b8]        # 0x4366c5
  41960d:	lea    r9d,[rbp+rax*1+0x6]
  419612:	lea    rcx,[rip+0x1c547]        # 0x435b60
  419619:	mov    edx,0x93e2
  41961e:	call   0x40d350
  419623:	jmp    0x4194ea
  419628:	nop    DWORD PTR [rax+rax*1+0x0]
  419630:	push   r15
  419632:	push   r14
  419634:	push   r13
  419636:	push   r12
  419638:	push   rbp
  419639:	push   rdi
  41963a:	push   rsi
  41963b:	push   rbx
  41963c:	sub    rsp,0x78
  419640:	test   rdx,rdx
  419643:	je     0x419926
  419649:	mov    r13,QWORD PTR [rip+0x227e0]        # 0x43be30
  419650:	mov    rbx,rcx
  419653:	mov    r12,r9
  419656:	mov    rbp,r8
  419659:	mov    rsi,rdx
  41965c:	mov    ecx,DWORD PTR [r13+0x0]
  419660:	test   ecx,ecx
  419662:	jne    0x419b20
  419668:	mov    edx,DWORD PTR [r12]
  41966c:	test   edx,edx
  41966e:	je     0x419910
  419674:	cmp    DWORD PTR [rbx+0x148],0x1
  41967b:	jne    0x419926
  419681:	add    DWORD PTR [rsi+0x8],0x1
  419685:	cmp    QWORD PTR [rbx+0x138],0x0
  41968d:	je     0x41969b
  41968f:	lea    rcx,[rbx+0x138]
  419696:	call   0x412720
  41969b:	movzx  eax,WORD PTR [rbx]
  41969e:	mov    QWORD PTR [rbx+0x138],rsi
  4196a5:	cmp    ax,0x500
  4196a9:	je     0x419aa2
  4196af:	cmp    ax,0x6ff
  4196b3:	jbe    0x4198f0
  4196b9:	test   rbp,rbp
  4196bc:	mov    QWORD PTR [rsp+0x40],0x0
  4196c5:	je     0x419b60
  4196cb:	mov    rdi,QWORD PTR [rsi+0x20]
  4196cf:	movzx  r15d,WORD PTR [rbp+0x8]
  4196d4:	mov    rcx,rdi
  4196d7:	call   0x42d610
  4196dc:	mov    rdx,QWORD PTR [rbx+0x68]
  4196e0:	lea    rcx,[rsp+0x48]
  4196e5:	mov    r8,rdi
  4196e8:	mov    r9d,eax
  4196eb:	mov    QWORD PTR [rsp+0x20],rcx
  4196f0:	mov    rcx,rbx
  4196f3:	mov    rdx,QWORD PTR [rdx]
  4196f6:	call   0x415cf0
  4196fb:	test   rax,rax
  4196fe:	mov    rdi,rax
  419701:	je     0x419a17
  419707:	xor    r14d,r14d
  41970a:	test   r15d,r15d
  41970d:	jne    0x4199e0
  419713:	movzx  eax,WORD PTR [rbx]
  419716:	mov    BYTE PTR [rbx+0xf1],0x3
  41971d:	cmp    ax,0x701
  419721:	ja     0x419a90
  419727:	cmp    ax,0x700
  41972b:	jbe    0x419985
  419731:	mov    edx,0xffffffff
  419736:	mov    rcx,rbx
  419739:	call   0x424180
  41973e:	mov    edx,0x2
  419743:	mov    rcx,rbx
  419746:	call   0x424180
  41974b:	xor    edx,edx
  41974d:	mov    rcx,rbx
  419750:	call   0x424180
  419755:	xor    edx,edx
  419757:	mov    rcx,rbx
  41975a:	call   0x4241d0
  41975f:	mov    edx,0x1
  419764:	mov    rcx,rbx
  419767:	call   0x4241d0
  41976c:	mov    edx,0x26
  419771:	mov    rcx,rbx
  419774:	call   0x4241d0
  419779:	mov    edx,0x4
  41977e:	mov    rcx,rbx
  419781:	call   0x4241d0
  419786:	xor    edx,edx
  419788:	mov    rcx,rbx
  41978b:	call   0x4241d0
  419790:	cmp    QWORD PTR [rsp+0x40],0x0
  419796:	je     0x419930
  41979c:	mov    r8,QWORD PTR [rsp+0x48]
  4197a1:	mov    rdx,rdi
  4197a4:	mov    rcx,rbx
  4197a7:	call   0x415b30
  4197ac:	cmp    QWORD PTR [rsi+0x20],rdi
  4197b0:	je     0x4197ba
  4197b2:	mov    rcx,rdi
  4197b5:	call   0x42d6f8
  4197ba:	xor    edx,edx
  4197bc:	mov    rcx,rbx
  4197bf:	call   0x4241d0
  4197c4:	mov    edx,0x1
  4197c9:	mov    rcx,rbx
  4197cc:	call   0x4241d0
  4197d1:	mov    edx,0x26
  4197d6:	mov    rcx,rbx
  4197d9:	call   0x4241d0
  4197de:	mov    edx,0x4
  4197e3:	mov    rcx,rbx
  4197e6:	call   0x4241d0
  4197eb:	mov    edx,0x4
  4197f0:	mov    rcx,rbx
  4197f3:	call   0x4241d0
  4197f8:	cmp    QWORD PTR [rsp+0x40],0x0
  4197fe:	mov    edx,DWORD PTR [rsi+0x50]
  419801:	je     0x419806
  419803:	or     dh,0x10
  419806:	mov    rcx,rbx
  419809:	call   0x424140
  41980e:	xor    edx,edx
  419810:	mov    rcx,rbx
  419813:	call   0x4241d0
  419818:	mov    edx,0x1
  41981d:	mov    rcx,rbx
  419820:	call   0x4241d0
  419825:	mov    edx,0x26
  41982a:	mov    rcx,rbx
  41982d:	call   0x4241d0
  419832:	mov    edx,0x4
  419837:	mov    rcx,rbx
  41983a:	call   0x4241d0
  41983f:	mov    edx,0x4
  419844:	mov    rcx,rbx
  419847:	call   0x4241d0
  41984c:	mov    edx,DWORD PTR [rsi+0x54]
  41984f:	mov    rcx,rbx
  419852:	call   0x424140
  419857:	xor    edx,edx
  419859:	mov    rcx,rbx
  41985c:	call   0x4241d0
  419861:	mov    edx,0x1
  419866:	mov    rcx,rbx
  419869:	call   0x4241d0
  41986e:	mov    edx,0x26
  419873:	mov    rcx,rbx
  419876:	call   0x4241d0
  41987b:	mov    edx,0x4
  419880:	mov    rcx,rbx
  419883:	call   0x4241d0
  419888:	mov    edx,0x4
  41988d:	mov    rcx,rbx
  419890:	call   0x4241d0
  419895:	xor    edx,edx
  419897:	mov    rcx,rbx
  41989a:	call   0x424140
  41989f:	mov    r8,QWORD PTR [rsp+0x40]
  4198a4:	test   r8,r8
  4198a7:	jne    0x419a32
  4198ad:	mov    rcx,r14
  4198b0:	call   0x42d6f8
  4198b5:	mov    DWORD PTR [r12],0x1
  4198bd:	mov    eax,DWORD PTR [r13+0x0]
  4198c1:	mov    DWORD PTR [rbx+0x178],0x2
  4198cb:	test   eax,eax
  4198cd:	je     0x4198fc
  4198cf:	lea    r8,[rip+0x1ce2a]        # 0x436700
  4198d6:	lea    rcx,[rip+0x1c283]        # 0x435b60
  4198dd:	mov    edx,0x9d52
  4198e2:	call   0x40d350
  4198e7:	mov    eax,DWORD PTR [r13+0x0]
  4198eb:	jmp    0x4198f4
  4198ed:	nop    DWORD PTR [rax]
  4198f0:	mov    eax,DWORD PTR [r13+0x0]
  4198f4:	test   eax,eax
  4198f6:	jne    0x419b41
  4198fc:	add    rsp,0x78
  419900:	pop    rbx
  419901:	pop    rsi
  419902:	pop    rdi
  419903:	pop    rbp
  419904:	pop    r12
  419906:	pop    r13
  419908:	pop    r14
  41990a:	pop    r15
  41990c:	ret    
  41990d:	nop    DWORD PTR [rax]
  419910:	mov    edx,0x1
  419915:	mov    rcx,rbx
  419918:	call   0x423970
  41991d:	cmp    eax,0x1
  419920:	je     0x419674
  419926:	mov    eax,0xffffffff
  41992b:	jmp    0x4198fc
  41992d:	nop    DWORD PTR [rax]
  419930:	xor    edx,edx
  419932:	mov    rcx,rbx
  419935:	call   0x4241d0
  41993a:	xor    edx,edx
  41993c:	mov    rcx,rbx
  41993f:	call   0x4241d0
  419944:	mov    edx,0x63
  419949:	mov    rcx,rbx
  41994c:	call   0x4241d0
  419951:	mov    edx,DWORD PTR [rsp+0x48]
  419955:	mov    rcx,rbx
  419958:	call   0x424140
  41995d:	cmp    WORD PTR [rbx],0x700
  419962:	ja     0x4199c3
  419964:	mov    edx,DWORD PTR [rsp+0x48]
  419968:	mov    rcx,rbx
  41996b:	call   0x424140
  419970:	movsxd r8,DWORD PTR [rsp+0x48]
  419975:	mov    rdx,rdi
  419978:	mov    rcx,rbx
  41997b:	call   0x423f10
  419980:	jmp    0x4197ac
  419985:	mov    rcx,rbx
  419988:	mov    edx,0xd
  41998d:	call   0x424180
  419992:	lea    r9,[rsp+0x50]
  419997:	lea    rdx,[rip+0x1cd54]        # 0x4366f2
  41999e:	mov    rcx,r9
  4199a1:	mov    QWORD PTR [rsp+0x38],r9
  4199a6:	call   0x4156a0
  4199ab:	mov    r9,QWORD PTR [rsp+0x38]
  4199b0:	mov    r8,rax
  4199b3:	mov    rcx,rbx
  4199b6:	mov    rdx,r9
  4199b9:	call   0x423f10
  4199be:	jmp    0x41974b
  4199c3:	lea    rdx,[rbx+0x70]
  4199c7:	mov    r8d,0x5
  4199cd:	mov    rcx,rbx
  4199d0:	call   0x423f10
  4199d5:	jmp    0x419964
  4199d7:	nop    WORD PTR [rax+rax*1+0x0]
  4199e0:	lea    rax,[rsp+0x40]
  4199e5:	mov    r8,QWORD PTR [rsp+0x48]
  4199ea:	mov    r9,rbp
  4199ed:	mov    rdx,rdi
  4199f0:	mov    rcx,rbx
  4199f3:	mov    QWORD PTR [rsp+0x20],rax
  4199f8:	call   0x416f70
  4199fd:	test   rax,rax
  419a00:	mov    r14,rax
  419a03:	jne    0x419713
  419a09:	cmp    QWORD PTR [rsi+0x20],rdi
  419a0d:	je     0x419a17
  419a0f:	mov    rcx,rdi
  419a12:	call   0x42d6f8
  419a17:	mov    eax,DWORD PTR [r12]
  419a1b:	test   eax,eax
  419a1d:	jne    0x419926
  419a23:	xor    edx,edx
  419a25:	mov    rcx,rbx
  419a28:	call   0x423970
  419a2d:	jmp    0x419926
  419a32:	mov    rdx,r14
  419a35:	mov    rcx,rbx
  419a38:	call   0x415580
  419a3d:	test   r15d,r15d
  419a40:	je     0x4198ad
  419a46:	lea    eax,[r15-0x1]
  419a4a:	xor    esi,esi
  419a4c:	lea    r15,[rax*8+0x8]
  419a54:	mov    rax,QWORD PTR [rbp+0x0]
  419a58:	xor    r8d,r8d
  419a5b:	mov    rcx,rbx
  419a5e:	mov    rdi,QWORD PTR [rax+rsi*1]
  419a62:	add    rsi,0x8
  419a66:	mov    rdx,rdi
  419a69:	call   0x416000
  419a6e:	mov    rax,QWORD PTR [rdi]
  419a71:	xor    r8d,r8d
  419a74:	mov    rdx,rdi
  419a77:	mov    rcx,rbx
  419a7a:	call   QWORD PTR [rax+0x28]
  419a7d:	cmp    rsi,r15
  419a80:	jne    0x419a54
  419a82:	jmp    0x4198ad
  419a87:	nop    WORD PTR [rax+rax*1+0x0]
  419a90:	xor    edx,edx
  419a92:	mov    rcx,rbx
  419a95:	call   0x415df0
  419a9a:	movzx  eax,WORD PTR [rbx]
  419a9d:	jmp    0x419727
  419aa2:	mov    edx,0x84
  419aa7:	mov    rcx,rbx
  419aaa:	mov    BYTE PTR [rbx+0xf1],0xf
  419ab1:	call   0x4241d0
  419ab6:	mov    rcx,QWORD PTR [rsi+0x10]
  419aba:	call   0x42d610
  419abf:	lea    edx,[rax+0x6]
  419ac2:	mov    rcx,rbx
  419ac5:	movsx  edx,dx
  419ac8:	call   0x424180
  419acd:	xor    edx,edx
  419acf:	mov    rcx,rbx
  419ad2:	call   0x424140
  419ad7:	mov    rcx,QWORD PTR [rsi+0x10]
  419adb:	call   0x42d610
  419ae0:	mov    rcx,rbx
  419ae3:	movzx  edx,al
  419ae6:	call   0x4241d0
  419aeb:	mov    rdi,QWORD PTR [rsi+0x10]
  419aef:	mov    rcx,rdi
  419af2:	call   0x42d610
  419af7:	mov    rdx,rdi
  419afa:	movsxd r8,eax
  419afd:	mov    rcx,rbx
  419b00:	call   0x423f10
  419b05:	xor    edx,edx
  419b07:	mov    rcx,rbx
  419b0a:	call   0x4241d0
  419b0f:	mov    DWORD PTR [r12],0x1
  419b17:	movzx  eax,WORD PTR [rbx]
  419b1a:	jmp    0x4196af
  419b1f:	nop
  419b20:	mov    r9d,DWORD PTR [rdx+0x18]
  419b24:	lea    r8,[rip+0x1cba5]        # 0x4366d0
  419b2b:	lea    rcx,[rip+0x1c02e]        # 0x435b60
  419b32:	mov    edx,0x9565
  419b37:	call   0x40d350
  419b3c:	jmp    0x419668
  419b41:	lea    r8,[rip+0x1cbe0]        # 0x436728
  419b48:	lea    rcx,[rip+0x1c011]        # 0x435b60
  419b4f:	mov    edx,0x9d92
  419b54:	call   0x40d350
  419b59:	xor    eax,eax
  419b5b:	jmp    0x4198fc
  419b60:	mov    rdi,QWORD PTR [rsi+0x20]
  419b64:	mov    rcx,rdi
  419b67:	call   0x42d610
  419b6c:	mov    rdx,QWORD PTR [rbx+0x68]
  419b70:	lea    rcx,[rsp+0x48]
  419b75:	mov    r8,rdi
  419b78:	mov    r9d,eax
  419b7b:	mov    QWORD PTR [rsp+0x20],rcx
  419b80:	mov    rcx,rbx
  419b83:	mov    rdx,QWORD PTR [rdx]
  419b86:	call   0x415cf0
  419b8b:	test   rax,rax
  419b8e:	mov    rdi,rax
  419b91:	je     0x419a17
  419b97:	xor    r15d,r15d
  419b9a:	xor    r14d,r14d
  419b9d:	jmp    0x419713
  419ba2:	nop    DWORD PTR [rax+0x0]
  419ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419bb0:	push   rbp
  419bb1:	push   rdi
  419bb2:	push   rsi
  419bb3:	push   rbx
  419bb4:	sub    rsp,0x28
  419bb8:	test   rdx,rdx
  419bbb:	je     0x419d30
  419bc1:	mov    rax,QWORD PTR [rip+0x22268]        # 0x43be30
  419bc8:	mov    rsi,rdx
  419bcb:	mov    rdi,r8
  419bce:	mov    rbx,rcx
  419bd1:	mov    edx,DWORD PTR [rax]
  419bd3:	test   edx,edx
  419bd5:	jne    0x419d40
  419bdb:	movzx  ecx,WORD PTR [rbx]
  419bde:	cmp    cx,0x6ff
  419be3:	ja     0x419ce0
  419be9:	xor    eax,eax
  419beb:	cmp    cx,0x500
  419bf0:	jne    0x419cce
  419bf6:	mov    eax,DWORD PTR [rdi]
  419bf8:	test   eax,eax
  419bfa:	je     0x419d00
  419c00:	cmp    DWORD PTR [rbx+0x148],0x1
  419c07:	jne    0x419d30
  419c0d:	cmp    BYTE PTR [rbx+0xf1],0xf
  419c14:	jne    0x419d30
  419c1a:	add    DWORD PTR [rsi+0x8],0x1
  419c1e:	cmp    QWORD PTR [rbx+0x138],0x0
  419c26:	je     0x419c34
  419c28:	lea    rcx,[rbx+0x138]
  419c2f:	call   0x412720
  419c34:	mov    edx,0x83
  419c39:	mov    rcx,rbx
  419c3c:	mov    QWORD PTR [rbx+0x138],rsi
  419c43:	call   0x4241d0
  419c48:	mov    rcx,QWORD PTR [rsi+0x10]
  419c4c:	call   0x42d610
  419c51:	lea    edx,[rax+0xc]
  419c54:	mov    rcx,rbx
  419c57:	movsx  edx,dx
  419c5a:	call   0x424180
  419c5f:	xor    edx,edx
  419c61:	mov    rcx,rbx
  419c64:	call   0x424140
  419c69:	mov    rcx,QWORD PTR [rsi+0x10]
  419c6d:	call   0x42d610
  419c72:	mov    rcx,rbx
  419c75:	movzx  edx,al
  419c78:	call   0x4241d0
  419c7d:	mov    rbp,QWORD PTR [rsi+0x10]
  419c81:	mov    rcx,rbp
  419c84:	call   0x42d610
  419c89:	mov    rdx,rbp
  419c8c:	movsxd r8,eax
  419c8f:	mov    rcx,rbx
  419c92:	call   0x423f10
  419c97:	mov    edx,0x1
  419c9c:	mov    rcx,rbx
  419c9f:	call   0x4241d0
  419ca4:	xor    edx,edx
  419ca6:	mov    rcx,rbx
  419ca9:	call   0x4241d0
  419cae:	mov    edx,0x20
  419cb3:	mov    rcx,rbx
  419cb6:	call   0x4241d0
  419cbb:	mov    edx,DWORD PTR [rsi+0x28]
  419cbe:	mov    rcx,rbx
  419cc1:	call   0x424140
  419cc6:	mov    DWORD PTR [rdi],0x1
  419ccc:	xor    eax,eax
  419cce:	add    rsp,0x28
  419cd2:	pop    rbx
  419cd3:	pop    rsi
  419cd4:	pop    rdi
  419cd5:	pop    rbp
  419cd6:	ret    
  419cd7:	nop    WORD PTR [rax+rax*1+0x0]
  419ce0:	movzx  eax,WORD PTR [rsi+0x44]
  419ce4:	and    eax,0xfffffffe
  419ce7:	or     eax,0x24
  419cea:	mov    WORD PTR [rsi+0x44],ax
  419cee:	xor    eax,eax
  419cf0:	add    rsp,0x28
  419cf4:	pop    rbx
  419cf5:	pop    rsi
  419cf6:	pop    rdi
  419cf7:	pop    rbp
  419cf8:	ret    
  419cf9:	nop    DWORD PTR [rax+0x0]
  419d00:	mov    edx,0x1
  419d05:	mov    rcx,rbx
  419d08:	call   0x423970
  419d0d:	cmp    eax,0x1
  419d10:	jne    0x419d30
  419d12:	cmp    DWORD PTR [rbx+0x148],0x1
  419d19:	mov    BYTE PTR [rbx+0xf1],0xf
  419d20:	je     0x419c1a
  419d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419d30:	mov    eax,0xffffffff
  419d35:	jmp    0x419cce
  419d37:	nop    WORD PTR [rax+rax*1+0x0]
  419d40:	mov    r9d,DWORD PTR [rsi+0x18]
  419d44:	lea    r8,[rip+0x1ca0d]        # 0x436758
  419d4b:	lea    rcx,[rip+0x1be0e]        # 0x435b60
  419d52:	mov    edx,0x9e55
  419d57:	call   0x40d350
  419d5c:	jmp    0x419bdb
  419d61:	nop    DWORD PTR [rax+rax*1+0x0]
  419d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419d70:	push   r13
  419d72:	push   r12
  419d74:	push   rbp
  419d75:	push   rdi
  419d76:	push   rsi
  419d77:	push   rbx
  419d78:	sub    rsp,0x38
  419d7c:	test   rdx,rdx
  419d7f:	mov    rbx,rcx
  419d82:	mov    rsi,rdx
  419d85:	mov    edi,r8d
  419d88:	mov    ebp,r9d
  419d8b:	je     0x419f30
  419d91:	mov    rax,QWORD PTR [rip+0x22098]        # 0x43be30
  419d98:	mov    eax,DWORD PTR [rax]
  419d9a:	test   eax,eax
  419d9c:	jne    0x419f42
  419da2:	mov    edx,0x1
  419da7:	mov    rcx,rbx
  419daa:	call   0x423970
  419daf:	cmp    eax,0x1
  419db2:	jne    0x419f30
  419db8:	add    DWORD PTR [rsi+0x8],0x1
  419dbc:	cmp    QWORD PTR [rbx+0x138],0x0
  419dc4:	je     0x419dd2
  419dc6:	lea    rcx,[rbx+0x138]
  419dcd:	call   0x412720
  419dd2:	movzx  eax,WORD PTR [rbx]
  419dd5:	mov    QWORD PTR [rbx+0x138],rsi
  419ddc:	cmp    ax,0x500
  419de0:	je     0x419e90
  419de6:	cmp    ax,0x6ff
  419dea:	jbe    0x419e54
  419dec:	cmp    ax,0x701
  419df0:	mov    BYTE PTR [rbx+0xf1],0x3
  419df7:	ja     0x419e70
  419df9:	cmp    edi,0x5
  419dfc:	jne    0x419e08
  419dfe:	cmp    DWORD PTR [rsi+0x50],0x2
  419e02:	je     0x419f63
  419e08:	lea    rax,[rip+0x1d16a]        # 0x436f79
  419e0f:	mov    edx,DWORD PTR [rsi+0x18]
  419e12:	mov    r9d,ebp
  419e15:	mov    rcx,rbx
  419e18:	movzx  r8d,BYTE PTR [rax+rdi*1]
  419e1d:	mov    eax,DWORD PTR [rsi+0x28]
  419e20:	mov    DWORD PTR [rsp+0x20],eax
  419e24:	call   0x415710
  419e29:	mov    DWORD PTR [rbx+0x178],0x7
  419e33:	mov    rcx,rbx
  419e36:	mov    edx,0x3
  419e3b:	call   0x423970
  419e40:	mov    rcx,rbx
  419e43:	add    rsp,0x38
  419e47:	pop    rbx
  419e48:	pop    rsi
  419e49:	pop    rdi
  419e4a:	pop    rbp
  419e4b:	pop    r12
  419e4d:	pop    r13
  419e4f:	jmp    0x424270
  419e54:	xor    edx,edx
  419e56:	mov    rcx,rbx
  419e59:	call   0x423970
  419e5e:	xor    eax,eax
  419e60:	add    rsp,0x38
  419e64:	pop    rbx
  419e65:	pop    rsi
  419e66:	pop    rdi
  419e67:	pop    rbp
  419e68:	pop    r12
  419e6a:	pop    r13
  419e6c:	ret    
  419e6d:	nop    DWORD PTR [rax]
  419e70:	xor    edx,edx
  419e72:	mov    rcx,rbx
  419e75:	call   0x415df0
  419e7a:	cmp    edi,0x5
  419e7d:	je     0x419dfe
  419e83:	jmp    0x419e08
  419e88:	nop    DWORD PTR [rax+rax*1+0x0]
  419e90:	mov    rcx,QWORD PTR [rsi+0x10]
  419e94:	call   0x42d610
  419e99:	mov    edx,0x82
  419e9e:	mov    rcx,rbx
  419ea1:	mov    BYTE PTR [rbx+0xf1],0xf
  419ea8:	mov    r12,rax
  419eab:	call   0x4241d0
  419eb0:	lea    eax,[rdi-0x5]
  419eb3:	mov    r8d,0xf5
  419eb9:	cmp    r12,0xf5
  419ec0:	cmova  r12,r8
  419ec4:	mov    rcx,rbx
  419ec7:	cmp    eax,0x2
  419eca:	sbb    edx,edx
  419ecc:	and    edx,0x4
  419ecf:	cmp    eax,0x2
  419ed2:	lea    edx,[rdx+r12*1+0x6]
  419ed7:	sbb    r13,r13
  419eda:	and    r13d,0x4
  419ede:	movzx  edx,dx
  419ee1:	call   0x424180
  419ee6:	xor    edx,edx
  419ee8:	mov    rcx,rbx
  419eeb:	call   0x424140
  419ef0:	mov    edx,r12d
  419ef3:	mov    rcx,rbx
  419ef6:	call   0x4241d0
  419efb:	mov    rdx,QWORD PTR [rsi+0x10]
  419eff:	mov    r8,r12
  419f02:	mov    rcx,rbx
  419f05:	call   0x423f10
  419f0a:	movzx  edx,dil
  419f0e:	mov    rcx,rbx
  419f11:	call   0x4241d0
  419f16:	test   r13,r13
  419f19:	je     0x419e33
  419f1f:	mov    edx,ebp
  419f21:	mov    rcx,rbx
  419f24:	call   0x424140
  419f29:	jmp    0x419e33
  419f2e:	xchg   ax,ax
  419f30:	mov    eax,0xffffffff
  419f35:	add    rsp,0x38
  419f39:	pop    rbx
  419f3a:	pop    rsi
  419f3b:	pop    rdi
  419f3c:	pop    rbp
  419f3d:	pop    r12
  419f3f:	pop    r13
  419f41:	ret    
  419f42:	mov    r9d,DWORD PTR [rdx+0x18]
  419f46:	lea    r8,[rip+0x1c833]        # 0x436780
  419f4d:	lea    rcx,[rip+0x1bc0c]        # 0x435b60
  419f54:	mov    edx,0xa4a5
  419f59:	call   0x40d350
  419f5e:	jmp    0x419da2
  419f63:	mov    edx,DWORD PTR [rsi+0x18]
  419f66:	xor    r9d,r9d
  419f69:	mov    r8d,0x1
  419f6f:	mov    rcx,rbx
  419f72:	mov    DWORD PTR [rsp+0x20],0x0
  419f7a:	call   0x415710
  419f7f:	cmp    WORD PTR [rbx],0x702
  419f84:	mov    rcx,rbx
  419f87:	sbb    edx,edx
  419f89:	and    edx,0xffffff81
  419f8c:	add    edx,0xff
  419f92:	call   0x4241d0
  419f97:	mov    eax,DWORD PTR [rsi+0x28]
  419f9a:	mov    edx,DWORD PTR [rsi+0x18]
  419f9d:	mov    r9d,ebp
  419fa0:	mov    r8d,0x20
  419fa6:	mov    rcx,rbx
  419fa9:	mov    DWORD PTR [rsp+0x20],eax
  419fad:	call   0x415710
  419fb2:	jmp    0x419e29
  419fb7:	nop    WORD PTR [rax+rax*1+0x0]
  419fc0:	push   r13
  419fc2:	push   r12
  419fc4:	push   rbp
  419fc5:	push   rdi
  419fc6:	push   rsi
  419fc7:	push   rbx
  419fc8:	sub    rsp,0x78
  419fcc:	test   rdx,rdx
  419fcf:	je     0x41a363
  419fd5:	mov    rsi,QWORD PTR [rip+0x21e54]        # 0x43be30
  419fdc:	mov    rdi,r8
  419fdf:	mov    rbp,r9
  419fe2:	mov    r12,rdx
  419fe5:	mov    rbx,rcx
  419fe8:	mov    r8d,DWORD PTR [rsi]
  419feb:	test   r8d,r8d
  419fee:	jne    0x41a342
  419ff4:	test   rdi,rdi
  419ff7:	je     0x41a234
  419ffd:	test   rbp,rbp
  41a000:	je     0x41a234
  41a006:	xor    eax,eax
  41a008:	cmp    WORD PTR [rbx],0x6ff
  41a00d:	mov    DWORD PTR [rdi],0x0
  41a013:	mov    DWORD PTR [rbp+0x0],0x0
  41a01a:	ja     0x41a030
  41a01c:	add    rsp,0x78
  41a020:	pop    rbx
  41a021:	pop    rsi
  41a022:	pop    rdi
  41a023:	pop    rbp
  41a024:	pop    r12
  41a026:	pop    r13
  41a028:	ret    
  41a029:	nop    DWORD PTR [rax+0x0]
  41a030:	mov    edx,0x1
  41a035:	mov    rcx,rbx
  41a038:	call   0x423970
  41a03d:	cmp    eax,0x1
  41a040:	jne    0x41a363
  41a046:	add    DWORD PTR [r12+0x8],0x1
  41a04c:	cmp    QWORD PTR [rbx+0x138],0x0
  41a054:	je     0x41a062
  41a056:	lea    rcx,[rbx+0x138]
  41a05d:	call   0x412720
  41a062:	movzx  eax,WORD PTR [rbx]
  41a065:	mov    QWORD PTR [rbx+0x138],r12
  41a06c:	mov    BYTE PTR [rbx+0xf1],0x3
  41a073:	cmp    ax,0x701
  41a077:	ja     0x41a330
  41a07d:	cmp    ax,0x700
  41a081:	ja     0x41a252
  41a087:	mov    edx,0xe
  41a08c:	mov    rcx,rbx
  41a08f:	lea    r13,[rsp+0x50]
  41a094:	call   0x424180
  41a099:	lea    rdx,[rip+0x1bade]        # 0x435b7e
  41a0a0:	mov    rcx,r13
  41a0a3:	call   0x4156a0
  41a0a8:	mov    rdx,r13
  41a0ab:	mov    r8,rax
  41a0ae:	mov    rcx,rbx
  41a0b1:	call   0x423f10
  41a0b6:	mov    edx,0x2
  41a0bb:	mov    rcx,rbx
  41a0be:	call   0x424180
  41a0c3:	xor    edx,edx
  41a0c5:	mov    rcx,rbx
  41a0c8:	call   0x4241d0
  41a0cd:	xor    edx,edx
  41a0cf:	mov    rcx,rbx
  41a0d2:	call   0x4241d0
  41a0d7:	mov    edx,0x26
  41a0dc:	mov    rcx,rbx
  41a0df:	call   0x4241d0
  41a0e4:	mov    edx,0x4
  41a0e9:	mov    rcx,rbx
  41a0ec:	call   0x4241d0
  41a0f1:	mov    edx,0x4
  41a0f6:	mov    rcx,rbx
  41a0f9:	call   0x4241d0
  41a0fe:	mov    edx,DWORD PTR [r12+0x18]
  41a103:	mov    rcx,rbx
  41a106:	call   0x424140
  41a10b:	xor    edx,edx
  41a10d:	mov    rcx,rbx
  41a110:	call   0x4241d0
  41a115:	xor    edx,edx
  41a117:	mov    rcx,rbx
  41a11a:	call   0x4241d0
  41a11f:	mov    edx,0x26
  41a124:	mov    rcx,rbx
  41a127:	call   0x4241d0
  41a12c:	mov    edx,0x4
  41a131:	mov    rcx,rbx
  41a134:	call   0x4241d0
  41a139:	mov    edx,0x4
  41a13e:	mov    rcx,rbx
  41a141:	call   0x4241d0
  41a146:	mov    edx,0x100
  41a14b:	mov    rcx,rbx
  41a14e:	call   0x424140
  41a153:	xor    edx,edx
  41a155:	mov    rcx,rbx
  41a158:	call   0x4241d0
  41a15d:	mov    edx,0x1
  41a162:	mov    rcx,rbx
  41a165:	call   0x4241d0
  41a16a:	mov    edx,0x26
  41a16f:	mov    rcx,rbx
  41a172:	call   0x4241d0
  41a177:	mov    edx,0x4
  41a17c:	mov    rcx,rbx
  41a17f:	call   0x4241d0
  41a184:	xor    edx,edx
  41a186:	mov    rcx,rbx
  41a189:	call   0x4241d0
  41a18e:	xor    edx,edx
  41a190:	mov    rcx,rbx
  41a193:	call   0x4241d0
  41a198:	mov    edx,0x1
  41a19d:	mov    rcx,rbx
  41a1a0:	call   0x4241d0
  41a1a5:	mov    edx,0x26
  41a1aa:	mov    rcx,rbx
  41a1ad:	call   0x4241d0
  41a1b2:	mov    edx,0x4
  41a1b7:	mov    rcx,rbx
  41a1ba:	call   0x4241d0
  41a1bf:	xor    edx,edx
  41a1c1:	mov    rcx,rbx
  41a1c4:	call   0x4241d0
  41a1c9:	mov    edx,0x3
  41a1ce:	mov    rcx,rbx
  41a1d1:	mov    DWORD PTR [rbx+0x178],0x0
  41a1db:	call   0x423970
  41a1e0:	mov    rcx,rbx
  41a1e3:	call   0x424270
  41a1e8:	test   eax,eax
  41a1ea:	js     0x41a01c
  41a1f0:	lea    r13,[rsp+0x50]
  41a1f5:	lea    r12,[rsp+0x4c]
  41a1fa:	mov    rcx,rbx
  41a1fd:	mov    r9d,0x4000
  41a203:	mov    r8,r12
  41a206:	mov    rdx,r13
  41a209:	call   0x421950
  41a20e:	mov    ecx,DWORD PTR [rsi]
  41a210:	test   ecx,ecx
  41a212:	jne    0x41a370
  41a218:	test   eax,eax
  41a21a:	je     0x41a271
  41a21c:	cmp    eax,0x1
  41a21f:	mov    edx,0x0
  41a224:	cmove  eax,edx
  41a227:	add    rsp,0x78
  41a22b:	pop    rbx
  41a22c:	pop    rsi
  41a22d:	pop    rdi
  41a22e:	pop    rbp
  41a22f:	pop    r12
  41a231:	pop    r13
  41a233:	ret    
  41a234:	lea    rdx,[rip+0x1b925]        # 0x435b60
  41a23b:	lea    rcx,[rip+0x1c593]        # 0x4367d5
  41a242:	mov    r8d,0xaa0
  41a248:	call   0x42d350
  41a24d:	jmp    0x41a006
  41a252:	mov    rcx,rbx
  41a255:	mov    edx,0xffffffff
  41a25a:	call   0x424180
  41a25f:	mov    edx,0x7
  41a264:	mov    rcx,rbx
  41a267:	call   0x424180
  41a26c:	jmp    0x41a0b6
  41a271:	cmp    DWORD PTR [rsp+0x50],0xfca
  41a279:	jne    0x41a1fa
  41a27f:	cmp    BYTE PTR [rbx+0x141],0x0
  41a286:	je     0x41a1fa
  41a28c:	mov    eax,DWORD PTR [rbx+0x144]
  41a292:	test   eax,eax
  41a294:	jne    0x41a1fa
  41a29a:	mov    rax,QWORD PTR [rbx+0x110]
  41a2a1:	test   rax,rax
  41a2a4:	je     0x41a1fa
  41a2aa:	cmp    WORD PTR [rax+0x8],0x2
  41a2af:	jne    0x41a1fa
  41a2b5:	mov    rdx,QWORD PTR [rax]
  41a2b8:	mov    rax,QWORD PTR [rdx]
  41a2bb:	cmp    DWORD PTR [rax+0x14],0x26
  41a2bf:	jne    0x41a1fa
  41a2c5:	mov    rdx,QWORD PTR [rdx+0x8]
  41a2c9:	cmp    DWORD PTR [rdx+0x14],0x26
  41a2cd:	jne    0x41a1fa
  41a2d3:	cmp    DWORD PTR [rax+0x10],0x4
  41a2d7:	jne    0x41a1fa
  41a2dd:	cmp    DWORD PTR [rdx+0x10],0x4
  41a2e1:	jne    0x41a1fa
  41a2e7:	mov    rax,QWORD PTR [rax+0x48]
  41a2eb:	mov    eax,DWORD PTR [rax]
  41a2ed:	mov    DWORD PTR [rdi],eax
  41a2ef:	mov    rax,QWORD PTR [rdx+0x48]
  41a2f3:	mov    r9d,DWORD PTR [rax]
  41a2f6:	mov    DWORD PTR [rbp+0x0],r9d
  41a2fa:	cmp    DWORD PTR [rsi],0x0
  41a2fd:	je     0x41a1fa
  41a303:	mov    eax,DWORD PTR [rdi]
  41a305:	lea    r8,[rip+0x1c564]        # 0x436870
  41a30c:	lea    rcx,[rip+0x1b84d]        # 0x435b60
  41a313:	mov    edx,0xaf77
  41a318:	mov    DWORD PTR [rsp+0x20],eax
  41a31c:	call   0x40d350
  41a321:	jmp    0x41a1fa
  41a326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a330:	xor    edx,edx
  41a332:	mov    rcx,rbx
  41a335:	call   0x415df0
  41a33a:	movzx  eax,WORD PTR [rbx]
  41a33d:	jmp    0x41a07d
  41a342:	mov    r9d,DWORD PTR [rdx+0x18]
  41a346:	lea    r8,[rip+0x1c45b]        # 0x4367a8
  41a34d:	lea    rcx,[rip+0x1b80c]        # 0x435b60
  41a354:	mov    edx,0xa9d5
  41a359:	call   0x40d350
  41a35e:	jmp    0x419ff4
  41a363:	mov    eax,0xffffffff
  41a368:	jmp    0x41a01c
  41a36d:	nop    DWORD PTR [rax]
  41a370:	lea    r8,[rip+0x1c479]        # 0x4367f0
  41a377:	lea    rcx,[rip+0x1b7e2]        # 0x435b60
  41a37e:	mov    r9d,eax
  41a381:	mov    edx,0xae27
  41a386:	mov    DWORD PTR [rsp+0x3c],eax
  41a38a:	call   0x40d350
  41a38f:	mov    edx,DWORD PTR [rsi]
  41a391:	mov    eax,DWORD PTR [rsp+0x3c]
  41a395:	test   edx,edx
  41a397:	je     0x41a218
  41a39d:	mov    edx,DWORD PTR [rsp+0x4c]
  41a3a1:	mov    r9d,DWORD PTR [rsp+0x50]
  41a3a6:	lea    r8,[rip+0x1c483]        # 0x436830
  41a3ad:	mov    ecx,edx
  41a3af:	and    edx,0x10
  41a3b2:	and    ecx,0x2
  41a3b5:	mov    DWORD PTR [rsp+0x20],edx
  41a3b9:	mov    edx,0xae37
  41a3be:	mov    DWORD PTR [rsp+0x28],ecx
  41a3c2:	lea    rcx,[rip+0x1b797]        # 0x435b60
  41a3c9:	call   0x40d350
  41a3ce:	mov    eax,DWORD PTR [rsp+0x3c]
  41a3d2:	jmp    0x41a218
  41a3d7:	nop    WORD PTR [rax+rax*1+0x0]
  41a3e0:	push   rdi
  41a3e1:	push   rsi
  41a3e2:	push   rbx
  41a3e3:	sub    rsp,0x40
  41a3e7:	test   rdx,rdx
  41a3ea:	je     0x41a5a0
  41a3f0:	mov    rax,QWORD PTR [rip+0x21a39]        # 0x43be30
  41a3f7:	mov    rsi,rdx
  41a3fa:	mov    rbx,rcx
  41a3fd:	mov    eax,DWORD PTR [rax]
  41a3ff:	test   eax,eax
  41a401:	jne    0x41a5b0
  41a407:	mov    edx,0x1
  41a40c:	mov    rcx,rbx
  41a40f:	call   0x423970
  41a414:	cmp    eax,0x1
  41a417:	jne    0x41a5a0
  41a41d:	add    DWORD PTR [rsi+0x8],0x1
  41a421:	cmp    QWORD PTR [rbx+0x138],0x0
  41a429:	je     0x41a437
  41a42b:	lea    rcx,[rbx+0x138]
  41a432:	call   0x412720
  41a437:	movzx  eax,WORD PTR [rbx]
  41a43a:	mov    QWORD PTR [rbx+0x138],rsi
  41a441:	cmp    ax,0x500
  41a445:	je     0x41a552
  41a44b:	cmp    ax,0x6ff
  41a44f:	jbe    0x41a4e7
  41a455:	cmp    ax,0x701
  41a459:	mov    BYTE PTR [rbx+0xf1],0x3
  41a460:	ja     0x41a540
  41a466:	cmp    ax,0x700
  41a46a:	jbe    0x41a504
  41a470:	mov    edx,0xffffffff
  41a475:	mov    rcx,rbx
  41a478:	call   0x424180
  41a47d:	mov    edx,0x9
  41a482:	mov    rcx,rbx
  41a485:	call   0x424180
  41a48a:	mov    edx,0x2
  41a48f:	mov    rcx,rbx
  41a492:	call   0x424180
  41a497:	xor    edx,edx
  41a499:	mov    rcx,rbx
  41a49c:	call   0x4241d0
  41a4a1:	xor    edx,edx
  41a4a3:	mov    rcx,rbx
  41a4a6:	call   0x4241d0
  41a4ab:	mov    edx,0x26
  41a4b0:	mov    rcx,rbx
  41a4b3:	call   0x4241d0
  41a4b8:	mov    edx,0x4
  41a4bd:	mov    rcx,rbx
  41a4c0:	call   0x4241d0
  41a4c5:	mov    edx,0x4
  41a4ca:	mov    rcx,rbx
  41a4cd:	call   0x4241d0
  41a4d2:	mov    edx,DWORD PTR [rsi+0x18]
  41a4d5:	mov    rcx,rbx
  41a4d8:	call   0x424140
  41a4dd:	mov    DWORD PTR [rbx+0x178],0x9
  41a4e7:	mov    edx,0x3
  41a4ec:	mov    rcx,rbx
  41a4ef:	call   0x423970
  41a4f4:	mov    rcx,rbx
  41a4f7:	call   0x424270
  41a4fc:	add    rsp,0x40
  41a500:	pop    rbx
  41a501:	pop    rsi
  41a502:	pop    rdi
  41a503:	ret    
  41a504:	mov    rcx,rbx
  41a507:	lea    rdi,[rsp+0x20]
  41a50c:	mov    edx,0xe
  41a511:	call   0x424180
  41a516:	lea    rdx,[rip+0x1c3ae]        # 0x4368cb
  41a51d:	mov    rcx,rdi
  41a520:	call   0x4156a0
  41a525:	mov    rdx,rdi
  41a528:	mov    r8,rax
  41a52b:	mov    rcx,rbx
  41a52e:	call   0x423f10
  41a533:	jmp    0x41a48a
  41a538:	nop    DWORD PTR [rax+rax*1+0x0]
  41a540:	xor    edx,edx
  41a542:	mov    rcx,rbx
  41a545:	call   0x415df0
  41a54a:	movzx  eax,WORD PTR [rbx]
  41a54d:	jmp    0x41a466
  41a552:	mov    edx,0x80
  41a557:	mov    rcx,rbx
  41a55a:	mov    BYTE PTR [rbx+0xf1],0xf
  41a561:	call   0x4241d0
  41a566:	mov    edx,0x5
  41a56b:	mov    rcx,rbx
  41a56e:	call   0x424180
  41a573:	mov    edx,DWORD PTR [rsi+0x18]
  41a576:	mov    rcx,rbx
  41a579:	call   0x424140
  41a57e:	cmp    DWORD PTR [rsi+0x40],0x1
  41a582:	je     0x41a5d1
  41a584:	xor    edx,edx
  41a586:	mov    rcx,rbx
  41a589:	call   0x4241d0
  41a58e:	movzx  eax,WORD PTR [rbx]
  41a591:	jmp    0x41a44b
  41a596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a5a0:	mov    eax,0xffffffff
  41a5a5:	add    rsp,0x40
  41a5a9:	pop    rbx
  41a5aa:	pop    rsi
  41a5ab:	pop    rdi
  41a5ac:	ret    
  41a5ad:	nop    DWORD PTR [rax]
  41a5b0:	mov    r9d,DWORD PTR [rdx+0x18]
  41a5b4:	lea    r8,[rip+0x1c2ed]        # 0x4368a8
  41a5bb:	lea    rcx,[rip+0x1b59e]        # 0x435b60
  41a5c2:	mov    edx,0xb0e5
  41a5c7:	call   0x40d350
  41a5cc:	jmp    0x41a407
  41a5d1:	mov    edx,0x1
  41a5d6:	mov    rcx,rbx
  41a5d9:	call   0x4241d0
  41a5de:	mov    DWORD PTR [rsi+0x40],0x2
  41a5e5:	movzx  eax,WORD PTR [rbx]
  41a5e8:	jmp    0x41a44b
  41a5ed:	nop    DWORD PTR [rax]
  41a5f0:	push   rbp
  41a5f1:	push   rdi
  41a5f2:	push   rsi
  41a5f3:	push   rbx
  41a5f4:	sub    rsp,0x48
  41a5f8:	test   rdx,rdx
  41a5fb:	je     0x41a841
  41a601:	mov    rax,QWORD PTR [rip+0x21828]        # 0x43be30
  41a608:	mov    rsi,rdx
  41a60b:	mov    rbx,rcx
  41a60e:	mov    eax,DWORD PTR [rax]
  41a610:	test   eax,eax
  41a612:	jne    0x41a820
  41a618:	xor    eax,eax
  41a61a:	cmp    WORD PTR [rbx],0x6ff
  41a61f:	ja     0x41a630
  41a621:	add    rsp,0x48
  41a625:	pop    rbx
  41a626:	pop    rsi
  41a627:	pop    rdi
  41a628:	pop    rbp
  41a629:	ret    
  41a62a:	nop    WORD PTR [rax+rax*1+0x0]
  41a630:	mov    edx,0x1
  41a635:	mov    rcx,rbx
  41a638:	call   0x423970
  41a63d:	cmp    eax,0x1
  41a640:	jne    0x41a841
  41a646:	add    DWORD PTR [rsi+0x8],0x1
  41a64a:	cmp    QWORD PTR [rbx+0x138],0x0
  41a652:	je     0x41a660
  41a654:	lea    rcx,[rbx+0x138]
  41a65b:	call   0x412720
  41a660:	movzx  eax,WORD PTR [rbx]
  41a663:	mov    QWORD PTR [rbx+0x138],rsi
  41a66a:	mov    BYTE PTR [rbx+0xf1],0x3
  41a671:	cmp    ax,0x701
  41a675:	ja     0x41a7f1
  41a67b:	cmp    ax,0x700
  41a67f:	ja     0x41a7d2
  41a685:	mov    edx,0xf
  41a68a:	mov    rcx,rbx
  41a68d:	lea    rdi,[rsp+0x20]
  41a692:	call   0x424180
  41a697:	lea    rdx,[rip+0x1c267]        # 0x436905
  41a69e:	mov    rcx,rdi
  41a6a1:	call   0x4156a0
  41a6a6:	mov    rdx,rdi
  41a6a9:	mov    r8,rax
  41a6ac:	mov    rcx,rbx
  41a6af:	call   0x423f10
  41a6b4:	xor    edx,edx
  41a6b6:	mov    rcx,rbx
  41a6b9:	call   0x424180
  41a6be:	xor    edx,edx
  41a6c0:	mov    rcx,rbx
  41a6c3:	call   0x4241d0
  41a6c8:	xor    edx,edx
  41a6ca:	mov    rcx,rbx
  41a6cd:	call   0x4241d0
  41a6d2:	mov    edx,0x26
  41a6d7:	mov    rcx,rbx
  41a6da:	call   0x4241d0
  41a6df:	mov    edx,0x4
  41a6e4:	mov    rcx,rbx
  41a6e7:	call   0x4241d0
  41a6ec:	mov    edx,0x4
  41a6f1:	mov    rcx,rbx
  41a6f4:	call   0x4241d0
  41a6f9:	mov    edx,DWORD PTR [rsi+0x18]
  41a6fc:	mov    rcx,rbx
  41a6ff:	call   0x424140
  41a704:	xor    edx,edx
  41a706:	mov    rcx,rbx
  41a709:	call   0x4241d0
  41a70e:	xor    edx,edx
  41a710:	mov    rcx,rbx
  41a713:	call   0x4241d0
  41a718:	mov    edx,0x26
  41a71d:	mov    rcx,rbx
  41a720:	call   0x4241d0
  41a725:	mov    edx,0x4
  41a72a:	mov    rcx,rbx
  41a72d:	call   0x4241d0
  41a732:	mov    edx,0x4
  41a737:	mov    rcx,rbx
  41a73a:	call   0x4241d0
  41a73f:	mov    edx,0x2
  41a744:	mov    rcx,rbx
  41a747:	call   0x424140
  41a74c:	xor    edx,edx
  41a74e:	mov    rcx,rbx
  41a751:	call   0x4241d0
  41a756:	xor    edx,edx
  41a758:	mov    rcx,rbx
  41a75b:	call   0x4241d0
  41a760:	mov    edx,0xa7
  41a765:	mov    rcx,rbx
  41a768:	call   0x4241d0
  41a76d:	mov    rcx,QWORD PTR [rsi+0x10]
  41a771:	call   0x42d610
  41a776:	movsx  ebp,ax
  41a779:	mov    rcx,rbx
  41a77c:	mov    rdi,rax
  41a77f:	mov    edx,ebp
  41a781:	call   0x424180
  41a786:	cmp    WORD PTR [rbx],0x700
  41a78b:	ja     0x41a803
  41a791:	mov    edx,ebp
  41a793:	mov    rcx,rbx
  41a796:	call   0x424180
  41a79b:	mov    rdx,QWORD PTR [rsi+0x10]
  41a79f:	movsxd r8,edi
  41a7a2:	mov    rcx,rbx
  41a7a5:	call   0x423f10
  41a7aa:	mov    edx,0x3
  41a7af:	mov    rcx,rbx
  41a7b2:	mov    DWORD PTR [rbx+0x178],0x8
  41a7bc:	call   0x423970
  41a7c1:	mov    rcx,rbx
  41a7c4:	call   0x424270
  41a7c9:	add    rsp,0x48
  41a7cd:	pop    rbx
  41a7ce:	pop    rsi
  41a7cf:	pop    rdi
  41a7d0:	pop    rbp
  41a7d1:	ret    
  41a7d2:	mov    rcx,rbx
  41a7d5:	mov    edx,0xffffffff
  41a7da:	call   0x424180
  41a7df:	mov    edx,0x8
  41a7e4:	mov    rcx,rbx
  41a7e7:	call   0x424180
  41a7ec:	jmp    0x41a6b4
  41a7f1:	xor    edx,edx
  41a7f3:	mov    rcx,rbx
  41a7f6:	call   0x415df0
  41a7fb:	movzx  eax,WORD PTR [rbx]
  41a7fe:	jmp    0x41a67b
  41a803:	lea    rdx,[rbx+0x70]
  41a807:	mov    r8d,0x5
  41a80d:	mov    rcx,rbx
  41a810:	call   0x423f10
  41a815:	jmp    0x41a791
  41a81a:	nop    WORD PTR [rax+rax*1+0x0]
  41a820:	mov    r9d,DWORD PTR [rdx+0x18]
  41a824:	lea    r8,[rip+0x1c0b5]        # 0x4368e0
  41a82b:	lea    rcx,[rip+0x1b32e]        # 0x435b60
  41a832:	mov    edx,0xb4b5
  41a837:	call   0x40d350
  41a83c:	jmp    0x41a618
  41a841:	mov    eax,0xffffffff
  41a846:	jmp    0x41a621
  41a84b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a850:	push   r13
  41a852:	push   r12
  41a854:	push   rbp
  41a855:	push   rdi
  41a856:	push   rsi
  41a857:	push   rbx
  41a858:	sub    rsp,0x58
  41a85c:	mov    rbp,QWORD PTR [rsp+0xb0]
  41a864:	test   rdx,rdx
  41a867:	je     0x41aa70
  41a86d:	mov    rax,QWORD PTR [rip+0x215bc]        # 0x43be30
  41a874:	mov    r12d,r9d
  41a877:	mov    edi,r8d
  41a87a:	mov    rsi,rdx
  41a87d:	mov    rbx,rcx
  41a880:	mov    eax,DWORD PTR [rax]
  41a882:	test   eax,eax
  41a884:	jne    0x41aaa0
  41a88a:	cmp    edi,0x1
  41a88d:	je     0x41aa60
  41a893:	mov    edx,0x1
  41a898:	mov    rcx,rbx
  41a89b:	call   0x423970
  41a8a0:	cmp    eax,0x1
  41a8a3:	jne    0x41aa70
  41a8a9:	add    DWORD PTR [rsi+0x8],0x1
  41a8ad:	cmp    QWORD PTR [rbx+0x138],0x0
  41a8b5:	je     0x41a8c3
  41a8b7:	lea    rcx,[rbx+0x138]
  41a8be:	call   0x412720
  41a8c3:	movzx  eax,WORD PTR [rbx]
  41a8c6:	mov    QWORD PTR [rbx+0x138],rsi
  41a8cd:	cmp    ax,0x500
  41a8d1:	je     0x41ac37
  41a8d7:	cmp    ax,0x6ff
  41a8db:	jbe    0x41aa1c
  41a8e1:	cmp    ax,0x701
  41a8e5:	mov    BYTE PTR [rbx+0xf1],0x3
  41a8ec:	ja     0x41aa82
  41a8f2:	cmp    ax,0x700
  41a8f6:	ja     0x41aa40
  41a8fc:	mov    edx,0x9
  41a901:	mov    rcx,rbx
  41a904:	lea    r13,[rsp+0x30]
  41a909:	call   0x424180
  41a90e:	lea    rdx,[rip+0x1c027]        # 0x43693c
  41a915:	mov    rcx,r13
  41a918:	call   0x4156a0
  41a91d:	mov    rdx,r13
  41a920:	mov    r8,rax
  41a923:	mov    rcx,rbx
  41a926:	call   0x423f10
  41a92b:	xor    edx,edx
  41a92d:	mov    rcx,rbx
  41a930:	call   0x424180
  41a935:	xor    edx,edx
  41a937:	mov    rcx,rbx
  41a93a:	call   0x4241d0
  41a93f:	xor    edx,edx
  41a941:	mov    rcx,rbx
  41a944:	call   0x4241d0
  41a949:	mov    edx,0x26
  41a94e:	mov    rcx,rbx
  41a951:	call   0x4241d0
  41a956:	mov    edx,0x4
  41a95b:	mov    rcx,rbx
  41a95e:	call   0x4241d0
  41a963:	mov    edx,0x4
  41a968:	mov    rcx,rbx
  41a96b:	call   0x4241d0
  41a970:	mov    edx,DWORD PTR [rsi+0x18]
  41a973:	mov    rcx,rbx
  41a976:	call   0x424140
  41a97b:	xor    edx,edx
  41a97d:	mov    rcx,rbx
  41a980:	call   0x4241d0
  41a985:	xor    edx,edx
  41a987:	mov    rcx,rbx
  41a98a:	call   0x4241d0
  41a98f:	mov    edx,0x26
  41a994:	mov    rcx,rbx
  41a997:	call   0x4241d0
  41a99c:	mov    edx,0x4
  41a9a1:	mov    rcx,rbx
  41a9a4:	call   0x4241d0
  41a9a9:	mov    edx,0x4
  41a9ae:	mov    rcx,rbx
  41a9b1:	call   0x4241d0
  41a9b6:	mov    edx,edi
  41a9b8:	mov    rcx,rbx
  41a9bb:	or     edx,0x20
  41a9be:	call   0x424140
  41a9c3:	xor    edx,edx
  41a9c5:	mov    rcx,rbx
  41a9c8:	call   0x4241d0
  41a9cd:	xor    edx,edx
  41a9cf:	mov    rcx,rbx
  41a9d2:	call   0x4241d0
  41a9d7:	mov    edx,0x26
  41a9dc:	mov    rcx,rbx
  41a9df:	call   0x4241d0
  41a9e4:	mov    edx,0x4
  41a9e9:	mov    rcx,rbx
  41a9ec:	call   0x4241d0
  41a9f1:	mov    edx,0x4
  41a9f6:	mov    rcx,rbx
  41a9f9:	call   0x4241d0
  41a9fe:	mov    edx,r12d
  41aa01:	mov    rcx,rbx
  41aa04:	call   0x424140
  41aa09:	cmp    edi,0x1
  41aa0c:	je     0x41aac1
  41aa12:	mov    DWORD PTR [rbx+0x178],0x1
  41aa1c:	mov    edx,0x3
  41aa21:	mov    rcx,rbx
  41aa24:	call   0x423970
  41aa29:	mov    rcx,rbx
  41aa2c:	call   0x424270
  41aa31:	add    rsp,0x58
  41aa35:	pop    rbx
  41aa36:	pop    rsi
  41aa37:	pop    rdi
  41aa38:	pop    rbp
  41aa39:	pop    r12
  41aa3b:	pop    r13
  41aa3d:	ret    
  41aa3e:	xchg   ax,ax
  41aa40:	mov    rcx,rbx
  41aa43:	mov    edx,0xffffffff
  41aa48:	call   0x424180
  41aa4d:	mov    edx,0x1
  41aa52:	mov    rcx,rbx
  41aa55:	call   0x424180
  41aa5a:	jmp    0x41a92b
  41aa5f:	nop
  41aa60:	test   rbp,rbp
  41aa63:	je     0x41aa70
  41aa65:	cmp    WORD PTR [rbp+0x8],0x0
  41aa6a:	jne    0x41a893
  41aa70:	mov    eax,0xffffffff
  41aa75:	add    rsp,0x58
  41aa79:	pop    rbx
  41aa7a:	pop    rsi
  41aa7b:	pop    rdi
  41aa7c:	pop    rbp
  41aa7d:	pop    r12
  41aa7f:	pop    r13
  41aa81:	ret    
  41aa82:	xor    edx,edx
  41aa84:	mov    rcx,rbx
  41aa87:	call   0x415df0
  41aa8c:	movzx  eax,WORD PTR [rbx]
  41aa8f:	cmp    ax,0x700
  41aa93:	jbe    0x41a8fc
  41aa99:	jmp    0x41aa40
  41aa9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41aaa0:	mov    r9d,DWORD PTR [rdx+0x18]
  41aaa4:	lea    r8,[rip+0x1be6d]        # 0x436918
  41aaab:	lea    rcx,[rip+0x1b0ae]        # 0x435b60
  41aab2:	mov    edx,0xb8a5
  41aab7:	call   0x40d350
  41aabc:	jmp    0x41a88a
  41aac1:	xor    edx,edx
  41aac3:	mov    rcx,rbx
  41aac6:	mov    QWORD PTR [rsp+0x30],0x0
  41aacf:	call   0x4241d0
  41aad4:	xor    edx,edx
  41aad6:	mov    rcx,rbx
  41aad9:	call   0x4241d0
  41aade:	mov    edx,0xe7
  41aae3:	mov    rcx,rbx
  41aae6:	call   0x4241d0
  41aaeb:	movzx  edi,WORD PTR [rbp+0x8]
  41aaef:	test   edi,edi
  41aaf1:	je     0x41ab2c
  41aaf3:	mov    rax,QWORD PTR [rbp+0x0]
  41aaf7:	mov    rdx,QWORD PTR [rax]
  41aafa:	mov    rdx,QWORD PTR [rdx+0x30]
  41aafe:	cmp    QWORD PTR [rdx],0x0
  41ab02:	jne    0x41abd0
  41ab08:	lea    edx,[rdi-0x1]
  41ab0b:	lea    rcx,[rax+rdx*8]
  41ab0f:	jmp    0x41ab27
  41ab11:	mov    rdx,QWORD PTR [rax+0x8]
  41ab15:	add    rax,0x8
  41ab19:	mov    rdx,QWORD PTR [rdx+0x30]
  41ab1d:	cmp    QWORD PTR [rdx],0x0
  41ab21:	jne    0x41abd0
  41ab27:	cmp    rax,rcx
  41ab2a:	jne    0x41ab11
  41ab2c:	xor    esi,esi
  41ab2e:	xor    r12d,r12d
  41ab31:	movsx  edx,WORD PTR [rsp+0x30]
  41ab36:	mov    rcx,rbx
  41ab39:	call   0x424180
  41ab3e:	cmp    WORD PTR [rbx],0x700
  41ab43:	ja     0x41ac20
  41ab49:	movsx  edx,WORD PTR [rsp+0x30]
  41ab4e:	mov    rcx,rbx
  41ab51:	call   0x424180
  41ab56:	mov    r8,QWORD PTR [rsp+0x30]
  41ab5b:	mov    rdx,r12
  41ab5e:	mov    rcx,rbx
  41ab61:	call   0x423f10
  41ab66:	cmp    rsi,r12
  41ab69:	je     0x41ab73
  41ab6b:	mov    rcx,r12
  41ab6e:	call   0x42d6f8
  41ab73:	test   edi,edi
  41ab75:	je     0x41aa12
  41ab7b:	lea    eax,[rdi-0x1]
  41ab7e:	xor    esi,esi
  41ab80:	lea    r12,[rax*8+0x8]
  41ab88:	nop    DWORD PTR [rax+rax*1+0x0]
  41ab90:	mov    rax,QWORD PTR [rbp+0x0]
  41ab94:	mov    r8d,0x3
  41ab9a:	mov    rcx,rbx
  41ab9d:	mov    rdi,QWORD PTR [rax+rsi*1]
  41aba1:	add    rsi,0x8
  41aba5:	mov    rdx,rdi
  41aba8:	call   0x416000
  41abad:	mov    rax,QWORD PTR [rdi]
  41abb0:	xor    r8d,r8d
  41abb3:	mov    rdx,rdi
  41abb6:	mov    rcx,rbx
  41abb9:	call   QWORD PTR [rax+0x28]
  41abbc:	cmp    rsi,r12
  41abbf:	jne    0x41ab90
  41abc1:	jmp    0x41aa12
  41abc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41abd0:	lea    rsi,[rdx+0x8]
  41abd4:	mov    rcx,rsi
  41abd7:	call   0x42d610
  41abdc:	mov    rdx,QWORD PTR [rbx+0x68]
  41abe0:	lea    rcx,[rsp+0x30]
  41abe5:	mov    r9d,eax
  41abe8:	mov    r8,rsi
  41abeb:	mov    QWORD PTR [rsp+0x20],rcx
  41abf0:	mov    rcx,rbx
  41abf3:	mov    rdx,QWORD PTR [rdx]
  41abf6:	call   0x415cf0
  41abfb:	test   rax,rax
  41abfe:	mov    r12,rax
  41ac01:	jne    0x41ab31
  41ac07:	xor    edx,edx
  41ac09:	mov    rcx,rbx
  41ac0c:	call   0x423970
  41ac11:	jmp    0x41aa70
  41ac16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ac20:	lea    rdx,[rbx+0x70]
  41ac24:	mov    r8d,0x5
  41ac2a:	mov    rcx,rbx
  41ac2d:	call   0x423f10
  41ac32:	jmp    0x41ab49
  41ac37:	mov    BYTE PTR [rbx+0xf1],0xf
  41ac3e:	jmp    0x41ac07
  41ac40:	push   rdi
  41ac41:	push   rsi
  41ac42:	push   rbx
  41ac43:	sub    rsp,0x30
  41ac47:	test   rdx,rdx
  41ac4a:	je     0x41ad81
  41ac50:	mov    rsi,rdx
  41ac53:	mov    rbx,rcx
  41ac56:	call   0x415cb0
  41ac5b:	test   eax,eax
  41ac5d:	je     0x41ac8e
  41ac5f:	mov    rdi,QWORD PTR [rip+0x211ca]        # 0x43be30
  41ac66:	mov    ecx,DWORD PTR [rdi]
  41ac68:	test   ecx,ecx
  41ac6a:	jne    0x41ad60
  41ac70:	movzx  edx,WORD PTR [rbx]
  41ac73:	xor    eax,eax
  41ac75:	cmp    dx,0x500
  41ac7a:	je     0x41acd0
  41ac7c:	cmp    dx,0x6ff
  41ac81:	jbe    0x41ac8e
  41ac83:	mov    edx,DWORD PTR [rsi+0x40]
  41ac86:	sub    edx,0x1
  41ac89:	cmp    edx,0x1
  41ac8c:	jbe    0x41aca0
  41ac8e:	add    rsp,0x30
  41ac92:	pop    rbx
  41ac93:	pop    rsi
  41ac94:	pop    rdi
  41ac95:	ret    
  41ac96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aca0:	mov    edx,DWORD PTR [rdi]
  41aca2:	test   edx,edx
  41aca4:	je     0x41ac8e
  41aca6:	lea    r8,[rip+0x1bcc3]        # 0x436970
  41acad:	lea    rcx,[rip+0x1aeac]        # 0x435b60
  41acb4:	mov    edx,0xc312
  41acb9:	mov    DWORD PTR [rsp+0x2c],eax
  41acbd:	call   0x40d350
  41acc2:	mov    eax,DWORD PTR [rsp+0x2c]
  41acc6:	jmp    0x41ac8e
  41acc8:	nop    DWORD PTR [rax+rax*1+0x0]
  41acd0:	mov    edx,0x1
  41acd5:	mov    rcx,rbx
  41acd8:	call   0x423970
  41acdd:	cmp    eax,0x1
  41ace0:	jne    0x41ad81
  41ace6:	add    DWORD PTR [rsi+0x8],0x1
  41acea:	cmp    QWORD PTR [rbx+0x138],0x0
  41acf2:	je     0x41ad00
  41acf4:	lea    rcx,[rbx+0x138]
  41acfb:	call   0x412720
  41ad00:	mov    edx,0x80
  41ad05:	mov    rcx,rbx
  41ad08:	mov    QWORD PTR [rbx+0x138],rsi
  41ad0f:	mov    BYTE PTR [rbx+0xf1],0xf
  41ad16:	call   0x4241d0
  41ad1b:	mov    edx,0x5
  41ad20:	mov    rcx,rbx
  41ad23:	call   0x424180
  41ad28:	mov    edx,DWORD PTR [rsi+0x18]
  41ad2b:	mov    rcx,rbx
  41ad2e:	call   0x424140
  41ad33:	mov    edx,0x1
  41ad38:	mov    rcx,rbx
  41ad3b:	call   0x4241d0
  41ad40:	mov    edx,0x3
  41ad45:	mov    rcx,rbx
  41ad48:	call   0x423970
  41ad4d:	mov    rcx,rbx
  41ad50:	call   0x424270
  41ad55:	movzx  edx,WORD PTR [rbx]
  41ad58:	jmp    0x41ac7c
  41ad5d:	nop    DWORD PTR [rax]
  41ad60:	mov    r9d,DWORD PTR [rsi+0x18]
  41ad64:	lea    r8,[rip+0x1bbdd]        # 0x436948
  41ad6b:	lea    rcx,[rip+0x1adee]        # 0x435b60
  41ad72:	mov    edx,0xc185
  41ad77:	call   0x40d350
  41ad7c:	jmp    0x41ac70
  41ad81:	mov    eax,0xffffffff
  41ad86:	jmp    0x41ac8e
  41ad8b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ad90:	push   rsi
  41ad91:	push   rbx
  41ad92:	sub    rsp,0x28
  41ad96:	mov    rbx,rcx
  41ad99:	mov    rsi,rdx
  41ad9c:	call   0x415cb0
  41ada1:	test   eax,eax
  41ada3:	je     0x41adb0
  41ada5:	mov    BYTE PTR [rsi+0x1d],0x1
  41ada9:	or     BYTE PTR [rbx+0xa0],0x8
  41adb0:	xor    eax,eax
  41adb2:	add    rsp,0x28
  41adb6:	pop    rbx
  41adb7:	pop    rsi
  41adb8:	ret    
  41adb9:	nop    DWORD PTR [rax+0x0]
  41adc0:	push   rdi
  41adc1:	push   rsi
  41adc2:	push   rbx
  41adc3:	sub    rsp,0x20
  41adc7:	mov    DWORD PTR [rdx],r8d
  41adca:	mov    DWORD PTR [rdx+0x4],0x0
  41add1:	mov    edx,0x1
  41add6:	mov    rsi,rcx
  41add9:	mov    ebx,r8d
  41addc:	mov    rdi,r9
  41addf:	call   0x423970
  41ade4:	cmp    eax,0x1
  41ade7:	mov    ecx,0xffffffff
  41adec:	jne    0x41ae16
  41adee:	add    ebx,ecx
  41adf0:	movzx  eax,WORD PTR [rsi]
  41adf3:	mov    ecx,0x1
  41adf8:	cmp    ebx,0x1
  41adfb:	ja     0x41ae08
  41adfd:	cmp    ax,0x6ff
  41ae01:	jbe    0x41ae40
  41ae03:	mov    ecx,0x3
  41ae08:	mov    BYTE PTR [rsi+0xf1],cl
  41ae0e:	xor    ecx,ecx
  41ae10:	cmp    ax,0x701
  41ae14:	ja     0x41ae20
  41ae16:	mov    eax,ecx
  41ae18:	add    rsp,0x20
  41ae1c:	pop    rbx
  41ae1d:	pop    rsi
  41ae1e:	pop    rdi
  41ae1f:	ret    
  41ae20:	mov    rcx,rsi
  41ae23:	mov    rdx,rdi
  41ae26:	call   0x415df0
  41ae2b:	xor    ecx,ecx
  41ae2d:	test   eax,eax
  41ae2f:	setne  cl
  41ae32:	neg    ecx
  41ae34:	mov    eax,ecx
  41ae36:	add    rsp,0x20
  41ae3a:	pop    rbx
  41ae3b:	pop    rsi
  41ae3c:	pop    rdi
  41ae3d:	ret    
  41ae3e:	xchg   ax,ax
  41ae40:	xor    ecx,ecx
  41ae42:	mov    BYTE PTR [rsi+0xf1],0x1
  41ae49:	mov    eax,ecx
  41ae4b:	add    rsp,0x20
  41ae4f:	pop    rbx
  41ae50:	pop    rsi
  41ae51:	pop    rdi
  41ae52:	ret    
  41ae53:	nop    DWORD PTR [rax]
  41ae56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae60:	push   rbx
  41ae61:	sub    rsp,0x20
  41ae65:	test   rcx,rcx
  41ae68:	mov    rbx,rcx
  41ae6b:	je     0x41ae90
  41ae6d:	test   rdx,rdx
  41ae70:	je     0x41ae90
  41ae72:	mov    rcx,rbx
  41ae75:	mov    edx,0x3
  41ae7a:	call   0x423970
  41ae7f:	mov    rcx,rbx
  41ae82:	add    rsp,0x20
  41ae86:	pop    rbx
  41ae87:	jmp    0x424270
  41ae8c:	nop    DWORD PTR [rax+0x0]
  41ae90:	lea    rdx,[rip+0x1acc9]        # 0x435b60
  41ae97:	lea    rcx,[rip+0x1baf9]        # 0x436997
  41ae9e:	mov    r8d,0xd2a
  41aea4:	call   0x42d350
  41aea9:	jmp    0x41ae72
  41aeab:	nop    DWORD PTR [rax+rax*1+0x0]
  41aeb0:	push   rbp
  41aeb1:	push   rdi
  41aeb2:	push   rsi
  41aeb3:	push   rbx
  41aeb4:	sub    rsp,0x28
  41aeb8:	mov    eax,DWORD PTR [rdx]
  41aeba:	mov    rsi,rcx
  41aebd:	mov    rbx,rdx
  41aec0:	mov    rdi,r8
  41aec3:	mov    rbp,r9
  41aec6:	test   eax,eax
  41aec8:	jne    0x41af05
  41aeca:	mov    eax,DWORD PTR [rbx+0x4]
  41aecd:	test   al,0x1
  41aecf:	je     0x41aee9
  41aed1:	lea    rdx,[rip+0x1b74e]        # 0x436626
  41aed8:	mov    r8d,0x1
  41aede:	mov    rcx,rsi
  41aee1:	call   0x423fa0
  41aee6:	mov    eax,DWORD PTR [rbx+0x4]
  41aee9:	or     eax,0x1
  41aeec:	mov    r8,rbp
  41aeef:	mov    rdx,rdi
  41aef2:	mov    rcx,rsi
  41aef5:	mov    DWORD PTR [rbx+0x4],eax
  41aef8:	add    rsp,0x28
  41aefc:	pop    rbx
  41aefd:	pop    rsi
  41aefe:	pop    rdi
  41aeff:	pop    rbp
  41af00:	jmp    0x4169b0
  41af05:	lea    rdx,[rip+0x1ac54]        # 0x435b60
  41af0c:	lea    rcx,[rip+0x1ba95]        # 0x4369a8
  41af13:	mov    r8d,0xd32
  41af19:	call   0x42d350
  41af1e:	jmp    0x41aeca
  41af20:	push   rdi
  41af21:	push   rsi
  41af22:	push   rbx
  41af23:	sub    rsp,0x20
  41af27:	cmp    DWORD PTR [rdx],0x1
  41af2a:	mov    rsi,rcx
  41af2d:	mov    rbx,rdx
  41af30:	mov    rdi,r8
  41af33:	je     0x41af4e
  41af35:	lea    rdx,[rip+0x1ac24]        # 0x435b60
  41af3c:	lea    rcx,[rip+0x1ba8d]        # 0x4369d0
  41af43:	mov    r8d,0xd3e
  41af49:	call   0x42d350
  41af4e:	movzx  edx,WORD PTR [rsi]
  41af51:	mov    eax,DWORD PTR [rbx+0x4]
  41af54:	cmp    dx,0x6ff
  41af59:	jbe    0x41afa0
  41af5b:	test   al,0x1
  41af5d:	je     0x41af7a
  41af5f:	cmp    dx,0x702
  41af64:	mov    rcx,rsi
  41af67:	sbb    edx,edx
  41af69:	and    edx,0xffffff81
  41af6c:	add    edx,0xff
  41af72:	call   0x4241d0
  41af77:	mov    eax,DWORD PTR [rbx+0x4]
  41af7a:	or     eax,0x1
  41af7d:	lea    rdx,[rdi+0xc]
  41af81:	lea    r8,[rdi+0x38]
  41af85:	mov    DWORD PTR [rbx+0x4],eax
  41af88:	mov    rcx,rsi
  41af8b:	call   0x416390
  41af90:	xor    eax,eax
  41af92:	add    rsp,0x20
  41af96:	pop    rbx
  41af97:	pop    rsi
  41af98:	pop    rdi
  41af99:	ret    
  41af9a:	nop    WORD PTR [rax+rax*1+0x0]
  41afa0:	test   al,0x1
  41afa2:	jne    0x41afc1
  41afa4:	mov    rdx,QWORD PTR [rdi+0x40]
  41afa8:	mov    r8,QWORD PTR [rdi+0x38]
  41afac:	or     eax,0x1
  41afaf:	mov    rcx,rsi
  41afb2:	mov    DWORD PTR [rbx+0x4],eax
  41afb5:	add    rsp,0x20
  41afb9:	pop    rbx
  41afba:	pop    rsi
  41afbb:	pop    rdi
  41afbc:	jmp    0x4169b0
  41afc1:	lea    rdx,[rip+0x1b65e]        # 0x436626
  41afc8:	mov    r8d,0x1
  41afce:	mov    rcx,rsi
  41afd1:	call   0x423fa0
  41afd6:	mov    eax,DWORD PTR [rbx+0x4]
  41afd9:	jmp    0x41afa4
  41afdb:	nop    DWORD PTR [rax+rax*1+0x0]
  41afe0:	push   r13
  41afe2:	push   r12
  41afe4:	push   rbp
  41afe5:	push   rdi
  41afe6:	push   rsi
  41afe7:	push   rbx
  41afe8:	sub    rsp,0x108
  41afef:	mov    r12,QWORD PTR [rip+0x20e3a]        # 0x43be30
  41aff6:	mov    rbx,rcx
  41aff9:	mov    esi,edx
  41affb:	mov    ebp,r8d
  41affe:	mov    r13d,DWORD PTR [r12]
  41b002:	test   r13d,r13d
  41b005:	jne    0x41b140
  41b00b:	movzx  eax,WORD PTR [rbx]
  41b00e:	cmp    ax,0x500
  41b012:	je     0x41b080
  41b014:	cmp    ax,0x6ff
  41b018:	jbe    0x41b02c
  41b01a:	cmp    esi,0x1
  41b01d:	mov    BYTE PTR [rsp+0x80],0x0
  41b025:	je     0x41b060
  41b027:	cmp    esi,0x3
  41b02a:	je     0x41b040
  41b02c:	xor    eax,eax
  41b02e:	add    rsp,0x108
  41b035:	pop    rbx
  41b036:	pop    rsi
  41b037:	pop    rdi
  41b038:	pop    rbp
  41b039:	pop    r12
  41b03b:	pop    r13
  41b03d:	ret    
  41b03e:	xchg   ax,ax
  41b040:	cmp    ebp,0x26
  41b043:	ja     0x41b3a0
  41b049:	lea    rax,[rip+0x1bae4]        # 0x436b34
  41b050:	mov    edx,ebp
  41b052:	movsxd rdx,DWORD PTR [rax+rdx*4]
  41b056:	add    rax,rdx
  41b059:	jmp    rax
  41b05b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b060:	cmp    ebp,0x26
  41b063:	ja     0x41b658
  41b069:	lea    rax,[rip+0x1bb60]        # 0x436bd0
  41b070:	movsxd rdx,DWORD PTR [rax+rbp*4]
  41b074:	add    rax,rdx
  41b077:	jmp    rax
  41b079:	nop    DWORD PTR [rax+0x0]
  41b080:	mov    edx,0x1
  41b085:	mov    rcx,rbx
  41b088:	mov    QWORD PTR [rsp+0x38],r9
  41b08d:	call   0x423970
  41b092:	mov    edx,eax
  41b094:	mov    eax,0xffffffff
  41b099:	cmp    edx,0x1
  41b09c:	jne    0x41b02e
  41b09e:	mov    dl,0xa6
  41b0a0:	mov    rcx,rbx
  41b0a3:	mov    BYTE PTR [rbx+0xf1],0xf
  41b0aa:	call   0x4241d0
  41b0af:	movzx  eax,WORD PTR [rsp+0x160]
  41b0b7:	mov    rcx,rbx
  41b0ba:	lea    edx,[rax+0x3]
  41b0bd:	movsx  edx,dx
  41b0c0:	call   0x424180
  41b0c5:	movzx  edx,sil
  41b0c9:	mov    rcx,rbx
  41b0cc:	call   0x4241d0
  41b0d1:	movzx  edx,bpl
  41b0d5:	mov    rcx,rbx
  41b0d8:	call   0x4241d0
  41b0dd:	movzx  edx,BYTE PTR [rsp+0x160]
  41b0e5:	mov    rcx,rbx
  41b0e8:	call   0x4241d0
  41b0ed:	mov    edi,DWORD PTR [rsp+0x160]
  41b0f4:	mov    r9,QWORD PTR [rsp+0x38]
  41b0f9:	test   edi,edi
  41b0fb:	jne    0x41b800
  41b101:	mov    edx,0x3
  41b106:	mov    rcx,rbx
  41b109:	call   0x423970
  41b10e:	mov    rcx,rbx
  41b111:	call   0x424270
  41b116:	mov    rcx,rbx
  41b119:	call   0x4231d0
  41b11e:	mov    edx,0x0
  41b123:	test   eax,eax
  41b125:	cmovg  eax,edx
  41b128:	add    rsp,0x108
  41b12f:	pop    rbx
  41b130:	pop    rsi
  41b131:	pop    rdi
  41b132:	pop    rbp
  41b133:	pop    r12
  41b135:	pop    r13
  41b137:	ret    
  41b138:	nop    DWORD PTR [rax+rax*1+0x0]
  41b140:	lea    r8,[rip+0x1b8b7]        # 0x4369fe
  41b147:	lea    rcx,[rip+0x1aa12]        # 0x435b60
  41b14e:	mov    edx,0xd637
  41b153:	mov    QWORD PTR [rsp+0x38],r9
  41b158:	call   0x40d350
  41b15d:	mov    r9,QWORD PTR [rsp+0x38]
  41b162:	jmp    0x41b00b
  41b167:	mov    r9d,DWORD PTR [r12]
  41b16b:	test   r9d,r9d
  41b16e:	jne    0x41b84c
  41b174:	movabs rax,0x40205443454c4553
  41b17e:	mov    BYTE PTR [rsp+0x90],0x0
  41b186:	mov    QWORD PTR [rsp+0x80],rax
  41b18e:	movabs rax,0x736e6f6974706f40
  41b198:	mov    QWORD PTR [rsp+0x88],rax
  41b1a0:	lea    rdx,[rsp+0x80]
  41b1a8:	xor    r9d,r9d
  41b1ab:	xor    r8d,r8d
  41b1ae:	mov    rcx,rbx
  41b1b1:	xor    esi,esi
  41b1b3:	lea    rdi,[rsp+0x4c]
  41b1b8:	call   0x4171d0
  41b1bd:	lea    r13,[rsp+0x50]
  41b1c2:	jmp    0x41b1ce
  41b1c4:	cmp    DWORD PTR [rsp+0x4c],0xfc8
  41b1cc:	je     0x41b210
  41b1ce:	xor    r8d,r8d
  41b1d1:	mov    r9d,0x6914
  41b1d7:	mov    rdx,rdi
  41b1da:	mov    rcx,rbx
  41b1dd:	call   0x421950
  41b1e2:	test   eax,eax
  41b1e4:	je     0x41b1c4
  41b1e6:	mov    edx,DWORD PTR [r12]
  41b1ea:	test   edx,edx
  41b1ec:	jne    0x41b818
  41b1f2:	cmp    ebp,0x26
  41b1f5:	ja     0x41b02c
  41b1fb:	lea    rax,[rip+0x1ba6a]        # 0x436c6c
  41b202:	movsxd rcx,DWORD PTR [rax+rbp*4]
  41b206:	add    rax,rcx
  41b209:	jmp    rax
  41b20b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b210:	xor    r8d,r8d
  41b213:	mov    r9d,0x508
  41b219:	mov    rdx,rdi
  41b21c:	mov    rcx,rbx
  41b21f:	call   0x421950
  41b224:	test   eax,eax
  41b226:	jne    0x41b1ce
  41b228:	cmp    DWORD PTR [rsp+0x4c],0xfc8
  41b230:	jne    0x41b1ce
  41b232:	mov    rax,QWORD PTR [rbx+0x110]
  41b239:	test   rax,rax
  41b23c:	je     0x41b210
  41b23e:	mov    rax,QWORD PTR [rax]
  41b241:	mov    rsi,QWORD PTR [rax]
  41b244:	mov    edx,DWORD PTR [rsi+0x10]
  41b247:	mov    ecx,DWORD PTR [rsi+0x14]
  41b24a:	call   0x40ac90
  41b24f:	mov    r9d,DWORD PTR [rsi+0x64]
  41b253:	mov    r8,QWORD PTR [rsi+0x48]
  41b257:	mov    edx,eax
  41b259:	mov    rcx,QWORD PTR [rbx+0x28]
  41b25d:	mov    QWORD PTR [rsp+0x28],r13
  41b262:	mov    DWORD PTR [rsp+0x20],0x38
  41b26a:	call   0x427180
  41b26f:	mov    esi,DWORD PTR [rsp+0x50]
  41b273:	jmp    0x41b210
  41b275:	movabs rax,0x44205443454c4553
  41b27f:	mov    ecx,0x2927
  41b284:	mov    DWORD PTR [rsp+0x98],0x33302f32
  41b28f:	mov    QWORD PTR [rsp+0x80],rax
  41b297:	movabs rax,0x2854524150455441
  41b2a1:	mov    WORD PTR [rsp+0x9c],cx
  41b2a9:	mov    QWORD PTR [rsp+0x88],rax
  41b2b1:	movabs rax,0x302f3130272c7964
  41b2bb:	mov    BYTE PTR [rsp+0x9e],0x0
  41b2c3:	mov    QWORD PTR [rsp+0x90],rax
  41b2cb:	jmp    0x41b1a0
  41b2d0:	movabs rax,0x40205443454c4553
  41b2da:	mov    edx,0x65
  41b2df:	mov    QWORD PTR [rsp+0x80],rax
  41b2e7:	movabs rax,0x7a69737478657440
  41b2f1:	mov    WORD PTR [rsp+0x90],dx
  41b2f9:	mov    QWORD PTR [rsp+0x88],rax
  41b301:	jmp    0x41b1a0
  41b306:	movabs rax,0x40205443454c4553
  41b310:	mov    r8d,0x7473
  41b316:	mov    BYTE PTR [rsp+0x92],0x0
  41b31e:	mov    QWORD PTR [rsp+0x80],rax
  41b326:	movabs rax,0x7269666574616440
  41b330:	mov    WORD PTR [rsp+0x90],r8w
  41b339:	mov    QWORD PTR [rsp+0x88],rax
  41b341:	jmp    0x41b1a0
  41b346:	mov    edx,DWORD PTR [r12]
  41b34a:	xor    eax,eax
  41b34c:	and    esi,0x80
  41b352:	setne  al
  41b355:	mov    DWORD PTR [rbx+0x17c],eax
  41b35b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b360:	test   edx,edx
  41b362:	je     0x41b02c
  41b368:	mov    r9d,DWORD PTR [rbx+0x17c]
  41b36f:	lea    r8,[rip+0x1b78a]        # 0x436b00
  41b376:	lea    rcx,[rip+0x1a7e3]        # 0x435b60
  41b37d:	mov    edx,0xe6b7
  41b382:	call   0x40d350
  41b387:	jmp    0x41b02c
  41b38c:	mov    edx,DWORD PTR [r12]
  41b390:	xor    eax,eax
  41b392:	and    esi,0x40
  41b395:	setne  al
  41b398:	mov    DWORD PTR [rbx+0x17c],eax
  41b39e:	jmp    0x41b360
  41b3a0:	mov    eax,DWORD PTR [r12]
  41b3a4:	test   eax,eax
  41b3a6:	je     0x41b1a0
  41b3ac:	lea    r8,[rip+0x1b733]        # 0x436ae6
  41b3b3:	lea    rcx,[rip+0x1a7a6]        # 0x435b60
  41b3ba:	mov    edx,0xe027
  41b3bf:	call   0x40d350
  41b3c4:	jmp    0x41b1a0
  41b3c9:	mov    edx,DWORD PTR [r12]
  41b3cd:	xor    eax,eax
  41b3cf:	and    esi,0x100
  41b3d5:	setne  al
  41b3d8:	mov    DWORD PTR [rbx+0x17c],eax
  41b3de:	jmp    0x41b360
  41b3e0:	mov    edx,DWORD PTR [r12]
  41b3e4:	xor    eax,eax
  41b3e6:	and    esi,0x20
  41b3e9:	setne  al
  41b3ec:	mov    DWORD PTR [rbx+0x17c],eax
  41b3f2:	jmp    0x41b360
  41b3f7:	mov    edx,DWORD PTR [r12]
  41b3fb:	xor    eax,eax
  41b3fd:	and    esi,0x4
  41b400:	setne  al
  41b403:	mov    DWORD PTR [rbx+0x17c],eax
  41b409:	jmp    0x41b360
  41b40e:	cmp    esi,0x3d
  41b411:	ja     0x41b77f
  41b417:	lea    rax,[rip+0x1b8ea]        # 0x436d08
  41b41e:	movsxd rdx,DWORD PTR [rax+rsi*4]
  41b422:	add    rax,rdx
  41b425:	jmp    rax
  41b427:	mov    edx,DWORD PTR [r12]
  41b42b:	xor    eax,eax
  41b42d:	and    esi,0x8
  41b430:	setne  al
  41b433:	mov    DWORD PTR [rbx+0x17c],eax
  41b439:	jmp    0x41b360
  41b43e:	mov    edx,DWORD PTR [r12]
  41b442:	mov    DWORD PTR [rbx+0x17c],esi
  41b448:	jmp    0x41b360
  41b44d:	mov    edx,DWORD PTR [r12]
  41b451:	xor    eax,eax
  41b453:	and    esi,0x2
  41b456:	setne  al
  41b459:	mov    DWORD PTR [rbx+0x17c],eax
  41b45f:	jmp    0x41b360
  41b464:	mov    edx,DWORD PTR [r12]
  41b468:	xor    eax,eax
  41b46a:	and    esi,0x200
  41b470:	setne  al
  41b473:	mov    DWORD PTR [rbx+0x17c],eax
  41b479:	jmp    0x41b360
  41b47e:	movabs rax,0x5449524120544553
  41b488:	mov    r11d,0x4646
  41b48e:	lea    rsi,[rsp+0x80]
  41b496:	mov    QWORD PTR [rsp+0x80],rax
  41b49e:	movabs rax,0x4f2054524f424148
  41b4a8:	mov    WORD PTR [rsp+0x90],r11w
  41b4b1:	mov    QWORD PTR [rsp+0x88],rax
  41b4b9:	mov    BYTE PTR [rsp+0x92],0x0
  41b4c1:	xor    r9d,r9d
  41b4c4:	xor    r8d,r8d
  41b4c7:	mov    rdx,rsi
  41b4ca:	mov    rcx,rbx
  41b4cd:	call   0x4171d0
  41b4d2:	mov    rcx,rbx
  41b4d5:	call   0x4231d0
  41b4da:	mov    edx,0x0
  41b4df:	test   eax,eax
  41b4e1:	cmovns eax,edx
  41b4e4:	add    rsp,0x108
  41b4eb:	pop    rbx
  41b4ec:	pop    rsi
  41b4ed:	pop    rdi
  41b4ee:	pop    rbp
  41b4ef:	pop    r12
  41b4f1:	pop    r13
  41b4f3:	ret    
  41b4f4:	movabs rax,0x5449524120544553
  41b4fe:	mov    DWORD PTR [rsp+0x90],0x46464f
  41b509:	lea    rsi,[rsp+0x80]
  41b511:	mov    QWORD PTR [rsp+0x80],rax
  41b519:	movabs rax,0x2045524f4e474948
  41b523:	mov    QWORD PTR [rsp+0x88],rax
  41b52b:	jmp    0x41b4c1
  41b52d:	cmp    BYTE PTR [r9],0x0
  41b531:	lea    rsi,[rsp+0x80]
  41b539:	lea    r8,[rip+0x1b4ba]        # 0x4369fa
  41b540:	lea    rax,[rip+0x1b4b0]        # 0x4369f7
  41b547:	lea    rdx,[rip+0x1b525]        # 0x436a73
  41b54e:	mov    rcx,rsi
  41b551:	cmovne r8,rax
  41b555:	call   0x42d648
  41b55a:	jmp    0x41b4c1
  41b55f:	cmp    BYTE PTR [r9],0x0
  41b563:	lea    rsi,[rsp+0x80]
  41b56b:	lea    r8,[rip+0x1b488]        # 0x4369fa
  41b572:	lea    rax,[rip+0x1b47e]        # 0x4369f7
  41b579:	lea    rdx,[rip+0x1b497]        # 0x436a17
  41b580:	mov    rcx,rsi
  41b583:	cmovne r8,rax
  41b587:	call   0x42d648
  41b58c:	jmp    0x41b4c1
  41b591:	cmp    BYTE PTR [r9],0x0
  41b595:	lea    rsi,[rsp+0x80]
  41b59d:	lea    r8,[rip+0x1b456]        # 0x4369fa
  41b5a4:	lea    rax,[rip+0x1b44c]        # 0x4369f7
  41b5ab:	lea    rdx,[rip+0x1b494]        # 0x436a46
  41b5b2:	mov    rcx,rsi
  41b5b5:	cmovne r8,rax
  41b5b9:	call   0x42d648
  41b5be:	jmp    0x41b4c1
  41b5c3:	cmp    BYTE PTR [r9],0x0
  41b5c7:	lea    rsi,[rsp+0x80]
  41b5cf:	lea    r8,[rip+0x1b424]        # 0x4369fa
  41b5d6:	lea    rax,[rip+0x1b41a]        # 0x4369f7
  41b5dd:	lea    rdx,[rip+0x1b445]        # 0x436a29
  41b5e4:	mov    rcx,rsi
  41b5e7:	cmovne r8,rax
  41b5eb:	call   0x42d648
  41b5f0:	jmp    0x41b4c1
  41b5f5:	cmp    BYTE PTR [r9],0x0
  41b5f9:	lea    rsi,[rsp+0x80]
  41b601:	lea    r8,[rip+0x1b3f2]        # 0x4369fa
  41b608:	lea    rax,[rip+0x1b3e8]        # 0x4369f7
  41b60f:	lea    rdx,[rip+0x1b44e]        # 0x436a64
  41b616:	mov    rcx,rsi
  41b619:	cmovne r8,rax
  41b61d:	call   0x42d648
  41b622:	jmp    0x41b4c1
  41b627:	movabs rax,0x5449524120544553
  41b631:	mov    esi,0x4e
  41b636:	mov    QWORD PTR [rsp+0x80],rax
  41b63e:	movabs rax,0x4f2054524f424148
  41b648:	mov    WORD PTR [rsp+0x90],si
  41b650:	mov    QWORD PTR [rsp+0x88],rax
  41b658:	lea    rsi,[rsp+0x80]
  41b660:	jmp    0x41b4c1
  41b665:	movabs rax,0x5449524120544553
  41b66f:	mov    r10d,0x4e4f
  41b675:	mov    BYTE PTR [rsp+0x92],0x0
  41b67d:	mov    QWORD PTR [rsp+0x80],rax
  41b685:	movabs rax,0x2045524f4e474948
  41b68f:	mov    WORD PTR [rsp+0x90],r10w
  41b698:	mov    QWORD PTR [rsp+0x88],rax
  41b6a0:	lea    rsi,[rsp+0x80]
  41b6a8:	jmp    0x41b4c1
  41b6ad:	cmp    BYTE PTR [r9],0x6
  41b6b1:	ja     0x41b7a3
  41b6b7:	movzx  edx,BYTE PTR [r9]
  41b6bb:	lea    rax,[rip+0x1b73e]        # 0x436e00
  41b6c2:	movsxd rdx,DWORD PTR [rax+rdx*4]
  41b6c6:	add    rax,rdx
  41b6c9:	jmp    rax
  41b6cb:	cmp    BYTE PTR [r9],0x0
  41b6cf:	lea    rsi,[rsp+0x80]
  41b6d7:	lea    r8,[rip+0x1b319]        # 0x4369f7
  41b6de:	lea    rax,[rip+0x1b315]        # 0x4369fa
  41b6e5:	lea    rdx,[rip+0x1b3a0]        # 0x436a8c
  41b6ec:	mov    rcx,rsi
  41b6ef:	cmovne r8,rax
  41b6f3:	call   0x42d648
  41b6f8:	jmp    0x41b4c1
  41b6fd:	movzx  r8d,BYTE PTR [r9]
  41b701:	lea    rsi,[rsp+0x80]
  41b709:	lea    rdx,[rip+0x1b391]        # 0x436aa1
  41b710:	mov    rcx,rsi
  41b713:	call   0x42d648
  41b718:	jmp    0x41b4c1
  41b71d:	lea    rsi,[rsp+0x80]
  41b725:	mov    r8d,DWORD PTR [r9]
  41b728:	lea    rdx,[rip+0x1b395]        # 0x436ac4
  41b72f:	mov    rcx,rsi
  41b732:	call   0x42d648
  41b737:	jmp    0x41b4c1
  41b73c:	mov    DWORD PTR [rbx+0x17c],0x4
  41b746:	mov    edx,DWORD PTR [r12]
  41b74a:	jmp    0x41b360
  41b74f:	mov    DWORD PTR [rbx+0x17c],0x3
  41b759:	mov    edx,DWORD PTR [r12]
  41b75d:	jmp    0x41b360
  41b762:	mov    DWORD PTR [rbx+0x17c],0x2
  41b76c:	mov    edx,DWORD PTR [r12]
  41b770:	jmp    0x41b360
  41b775:	mov    DWORD PTR [rbx+0x17c],0x5
  41b77f:	mov    edx,DWORD PTR [r12]
  41b783:	jmp    0x41b360
  41b788:	mov    DWORD PTR [rbx+0x17c],0x1
  41b792:	mov    edx,DWORD PTR [r12]
  41b796:	jmp    0x41b360
  41b79b:	mov    DWORD PTR [rsp+0x50],0x6d7964
  41b7a3:	lea    rsi,[rsp+0x80]
  41b7ab:	lea    r8,[rsp+0x50]
  41b7b0:	lea    rdx,[rip+0x1b2fb]        # 0x436ab2
  41b7b7:	mov    rcx,rsi
  41b7ba:	call   0x42d648
  41b7bf:	jmp    0x41b4c1
  41b7c4:	mov    DWORD PTR [rsp+0x50],0x64796d
  41b7cc:	jmp    0x41b7a3
  41b7ce:	mov    DWORD PTR [rsp+0x50],0x6d6479
  41b7d6:	jmp    0x41b7a3
  41b7d8:	mov    DWORD PTR [rsp+0x50],0x646d79
  41b7e0:	jmp    0x41b7a3
  41b7e2:	mov    DWORD PTR [rsp+0x50],0x79646d
  41b7ea:	jmp    0x41b7a3
  41b7ec:	mov    DWORD PTR [rsp+0x50],0x796d64
  41b7f4:	jmp    0x41b7a3
  41b7f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b800:	movsxd r8,DWORD PTR [rsp+0x160]
  41b808:	mov    rdx,r9
  41b80b:	mov    rcx,rbx
  41b80e:	call   0x423f10
  41b813:	jmp    0x41b101
  41b818:	lea    r8,[rip+0x1b2ce]        # 0x436aed
  41b81f:	lea    rcx,[rip+0x1a33a]        # 0x435b60
  41b826:	mov    r9d,esi
  41b829:	mov    edx,0xe267
  41b82e:	call   0x40d350
  41b833:	cmp    ebp,0x26
  41b836:	ja     0x41b77f
  41b83c:	lea    rax,[rip+0x1b5d9]        # 0x436e1c
  41b843:	movsxd rdx,DWORD PTR [rax+rbp*4]
  41b847:	add    rax,rdx
  41b84a:	jmp    rax
  41b84c:	lea    r8,[rip+0x1b281]        # 0x436ad4
  41b853:	lea    rcx,[rip+0x1a306]        # 0x435b60
  41b85a:	mov    edx,0xde07
  41b85f:	call   0x40d350
  41b864:	jmp    0x41b174
  41b869:	nop    DWORD PTR [rax+0x0]
  41b870:	push   rbx
  41b871:	sub    rsp,0x20
  41b875:	cmp    WORD PTR [rcx],0x701
  41b87a:	jbe    0x41b8e0
  41b87c:	mov    edx,0x1
  41b881:	mov    rbx,rcx
  41b884:	call   0x423970
  41b889:	cmp    eax,0x1
  41b88c:	jne    0x41b910
  41b892:	cmp    WORD PTR [rbx],0x701
  41b897:	mov    BYTE PTR [rbx+0xf1],0xe
  41b89e:	ja     0x41b900
  41b8a0:	mov    rcx,rbx
  41b8a3:	mov    edx,0x5
  41b8a8:	call   0x424180
  41b8ad:	xor    edx,edx
  41b8af:	mov    rcx,rbx
  41b8b2:	call   0x4241d0
  41b8b7:	xor    edx,edx
  41b8b9:	mov    rcx,rbx
  41b8bc:	call   0x4241d0
  41b8c1:	mov    rcx,rbx
  41b8c4:	mov    edx,0x3
  41b8c9:	call   0x423970
  41b8ce:	mov    rcx,rbx
  41b8d1:	add    rsp,0x20
  41b8d5:	pop    rbx
  41b8d6:	jmp    0x424270
  41b8db:	nop    DWORD PTR [rax+rax*1+0x0]
  41b8e0:	lea    rdx,[rip+0x1b5d1]        # 0x436eb8
  41b8e7:	xor    r9d,r9d
  41b8ea:	xor    r8d,r8d
  41b8ed:	add    rsp,0x20
  41b8f1:	pop    rbx
  41b8f2:	jmp    0x4171d0
  41b8f7:	nop    WORD PTR [rax+rax*1+0x0]
  41b900:	xor    edx,edx
  41b902:	mov    rcx,rbx
  41b905:	call   0x415df0
  41b90a:	jmp    0x41b8a0
  41b90c:	nop    DWORD PTR [rax+0x0]
  41b910:	mov    eax,0xffffffff
  41b915:	add    rsp,0x20
  41b919:	pop    rbx
  41b91a:	ret    
  41b91b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b920:	push   rsi
  41b921:	push   rbx
  41b922:	sub    rsp,0x28
  41b926:	cmp    WORD PTR [rcx],0x701
  41b92b:	ja     0x41b952
  41b92d:	test   edx,edx
  41b92f:	lea    rax,[rip+0x1b59a]        # 0x436ed0
  41b936:	lea    rdx,[rip+0x1b5c1]        # 0x436efe
  41b93d:	cmovne rdx,rax
  41b941:	xor    r9d,r9d
  41b944:	xor    r8d,r8d
  41b947:	add    rsp,0x28
  41b94b:	pop    rbx
  41b94c:	pop    rsi
  41b94d:	jmp    0x4171d0
  41b952:	mov    esi,edx
  41b954:	mov    edx,0x1
  41b959:	mov    rbx,rcx
  41b95c:	call   0x423970
  41b961:	cmp    eax,0x1
  41b964:	jne    0x41b9f0
  41b96a:	cmp    WORD PTR [rbx],0x701
  41b96f:	mov    BYTE PTR [rbx+0xf1],0xe
  41b976:	ja     0x41b9e3
  41b978:	mov    edx,0x8
  41b97d:	mov    rcx,rbx
  41b980:	call   0x424180
  41b985:	xor    edx,edx
  41b987:	mov    rcx,rbx
  41b98a:	call   0x4241d0
  41b98f:	test   esi,esi
  41b991:	jne    0x41b9c0
  41b993:	xor    edx,edx
  41b995:	mov    rcx,rbx
  41b998:	call   0x4241d0
  41b99d:	mov    rcx,rbx
  41b9a0:	mov    edx,0x3
  41b9a5:	call   0x423970
  41b9aa:	mov    rcx,rbx
  41b9ad:	add    rsp,0x28
  41b9b1:	pop    rbx
  41b9b2:	pop    rsi
  41b9b3:	jmp    0x424270
  41b9b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b9c0:	mov    rcx,rbx
  41b9c3:	mov    edx,0x1
  41b9c8:	call   0x4241d0
  41b9cd:	xor    edx,edx
  41b9cf:	mov    rcx,rbx
  41b9d2:	call   0x4241d0
  41b9d7:	xor    edx,edx
  41b9d9:	mov    rcx,rbx
  41b9dc:	call   0x4241d0
  41b9e1:	jmp    0x41b99d
  41b9e3:	xor    edx,edx
  41b9e5:	mov    rcx,rbx
  41b9e8:	call   0x415df0
  41b9ed:	jmp    0x41b978
  41b9ef:	nop
  41b9f0:	mov    eax,0xffffffff
  41b9f5:	add    rsp,0x28
  41b9f9:	pop    rbx
  41b9fa:	pop    rsi
  41b9fb:	ret    
  41b9fc:	nop    DWORD PTR [rax+0x0]
  41ba00:	push   rsi
  41ba01:	push   rbx
  41ba02:	sub    rsp,0x28
  41ba06:	cmp    WORD PTR [rcx],0x701
  41ba0b:	ja     0x41ba32
  41ba0d:	test   edx,edx
  41ba0f:	lea    rax,[rip+0x1b50a]        # 0x436f20
  41ba16:	lea    rdx,[rip+0x1b52f]        # 0x436f4c
  41ba1d:	cmovne rdx,rax
  41ba21:	xor    r9d,r9d
  41ba24:	xor    r8d,r8d
  41ba27:	add    rsp,0x28
  41ba2b:	pop    rbx
  41ba2c:	pop    rsi
  41ba2d:	jmp    0x4171d0
  41ba32:	mov    esi,edx
  41ba34:	mov    edx,0x1
  41ba39:	mov    rbx,rcx
  41ba3c:	call   0x423970
  41ba41:	cmp    eax,0x1
  41ba44:	jne    0x41bad0
  41ba4a:	cmp    WORD PTR [rbx],0x701
  41ba4f:	mov    BYTE PTR [rbx+0xf1],0xe
  41ba56:	ja     0x41bac3
  41ba58:	mov    edx,0x7
  41ba5d:	mov    rcx,rbx
  41ba60:	call   0x424180
  41ba65:	xor    edx,edx
  41ba67:	mov    rcx,rbx
  41ba6a:	call   0x4241d0
  41ba6f:	test   esi,esi
  41ba71:	jne    0x41baa0
  41ba73:	xor    edx,edx
  41ba75:	mov    rcx,rbx
  41ba78:	call   0x4241d0
  41ba7d:	mov    rcx,rbx
  41ba80:	mov    edx,0x3
  41ba85:	call   0x423970
  41ba8a:	mov    rcx,rbx
  41ba8d:	add    rsp,0x28
  41ba91:	pop    rbx
  41ba92:	pop    rsi
  41ba93:	jmp    0x424270
  41ba98:	nop    DWORD PTR [rax+rax*1+0x0]
  41baa0:	mov    rcx,rbx
  41baa3:	mov    edx,0x1
  41baa8:	call   0x4241d0
  41baad:	xor    edx,edx
  41baaf:	mov    rcx,rbx
  41bab2:	call   0x4241d0
  41bab7:	xor    edx,edx
  41bab9:	mov    rcx,rbx
  41babc:	call   0x4241d0
  41bac1:	jmp    0x41ba7d
  41bac3:	xor    edx,edx
  41bac5:	mov    rcx,rbx
  41bac8:	call   0x415df0
  41bacd:	jmp    0x41ba58
  41bacf:	nop
  41bad0:	mov    eax,0xffffffff
  41bad5:	add    rsp,0x28
  41bad9:	pop    rbx
  41bada:	pop    rsi
  41badb:	ret    
  41badc:	nop    DWORD PTR [rax+0x0]
  41bae0:	push   rdi
  41bae1:	push   rsi
  41bae2:	push   rbx
  41bae3:	sub    rsp,0x20
  41bae7:	mov    rax,QWORD PTR [rip+0x20342]        # 0x43be30
  41baee:	mov    rbx,rcx
  41baf1:	mov    eax,DWORD PTR [rax]
  41baf3:	test   eax,eax
  41baf5:	jne    0x41bb83
  41bafb:	xor    eax,eax
  41bafd:	cmp    WORD PTR [rbx],0x500
  41bb02:	je     0x41bb10
  41bb04:	add    rsp,0x20
  41bb08:	pop    rbx
  41bb09:	pop    rsi
  41bb0a:	pop    rdi
  41bb0b:	ret    
  41bb0c:	nop    DWORD PTR [rax+0x0]
  41bb10:	lea    rax,[rip+0x1b469]        # 0x436f80
  41bb17:	mov    edi,DWORD PTR [rbx+0x158]
  41bb1d:	mov    rsi,QWORD PTR [rbx+0x28]
  41bb21:	mov    DWORD PTR [rbx+0x158],0x5
  41bb2b:	mov    edx,0x1
  41bb30:	mov    rcx,rbx
  41bb33:	mov    QWORD PTR [rbx+0x28],rax
  41bb37:	call   0x423970
  41bb3c:	cmp    eax,0x1
  41bb3f:	jne    0x41bba0
  41bb41:	mov    rcx,rbx
  41bb44:	mov    BYTE PTR [rbx+0xf1],0xf
  41bb4b:	mov    edx,0x71
  41bb50:	call   0x4241d0
  41bb55:	xor    edx,edx
  41bb57:	mov    rcx,rbx
  41bb5a:	call   0x4241d0
  41bb5f:	mov    edx,0x3
  41bb64:	mov    rcx,rbx
  41bb67:	call   0x423970
  41bb6c:	mov    rcx,rbx
  41bb6f:	call   0x424270
  41bb74:	mov    rcx,rbx
  41bb77:	add    rsp,0x20
  41bb7b:	pop    rbx
  41bb7c:	pop    rsi
  41bb7d:	pop    rdi
  41bb7e:	jmp    0x4231d0
  41bb83:	lea    r8,[rip+0x1b3dc]        # 0x436f66
  41bb8a:	lea    rcx,[rip+0x19fcf]        # 0x435b60
  41bb91:	mov    edx,0xed47
  41bb96:	call   0x40d350
  41bb9b:	jmp    0x41bafb
  41bba0:	mov    DWORD PTR [rbx+0x158],edi
  41bba6:	mov    QWORD PTR [rbx+0x28],rsi
  41bbaa:	mov    eax,0xffffffff
  41bbaf:	jmp    0x41bb04
  41bbb4:	nop
  41bbb5:	nop
  41bbb6:	nop
  41bbb7:	nop
  41bbb8:	nop
  41bbb9:	nop
  41bbba:	nop
  41bbbb:	nop
  41bbbc:	nop
  41bbbd:	nop
  41bbbe:	nop
  41bbbf:	nop
  41bbc0:	push   rbx
  41bbc1:	sub    rsp,0x20
  41bbc5:	mov    rbx,rcx
  41bbc8:	jmp    0x41bbdc
  41bbca:	nop    WORD PTR [rax+rax*1+0x0]
  41bbd0:	mov    rcx,rbx
  41bbd3:	call   0x415130
  41bbd8:	test   eax,eax
  41bbda:	js     0x41bc04
  41bbdc:	mov    eax,DWORD PTR [rbx+0xe4]
  41bbe2:	cmp    eax,DWORD PTR [rbx+0xec]
  41bbe8:	jae    0x41bbd0
  41bbea:	mov    rdx,QWORD PTR [rbx+0xd0]
  41bbf1:	lea    ecx,[rax+0x1]
  41bbf4:	mov    DWORD PTR [rbx+0xe4],ecx
  41bbfa:	movzx  eax,BYTE PTR [rdx+rax*1]
  41bbfe:	add    rsp,0x20
  41bc02:	pop    rbx
  41bc03:	ret    
  41bc04:	xor    eax,eax
  41bc06:	add    rsp,0x20
  41bc0a:	pop    rbx
  41bc0b:	ret    
  41bc0c:	nop    DWORD PTR [rax+0x0]
  41bc10:	sub    DWORD PTR [rcx+0xe4],0x1
  41bc17:	ret    
  41bc18:	nop    DWORD PTR [rax+rax*1+0x0]
  41bc20:	push   rbx
  41bc21:	sub    rsp,0x20
  41bc25:	mov    rbx,rcx
  41bc28:	call   0x41bbc0
  41bc2d:	mov    edx,DWORD PTR [rbx+0xe4]
  41bc33:	test   edx,edx
  41bc35:	je     0x41bc40
  41bc37:	sub    edx,0x1
  41bc3a:	mov    DWORD PTR [rbx+0xe4],edx
  41bc40:	add    rsp,0x20
  41bc44:	pop    rbx
  41bc45:	ret    
  41bc46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bc50:	push   rbp
  41bc51:	push   rdi
  41bc52:	push   rsi
  41bc53:	push   rbx
  41bc54:	sub    rsp,0x28
  41bc58:	mov    rbp,rcx
  41bc5b:	mov    rsi,rdx
  41bc5e:	mov    rdi,r8
  41bc61:	mov    r9d,DWORD PTR [rbp+0xe4]
  41bc68:	mov    ebx,DWORD PTR [rbp+0xec]
  41bc6e:	sub    ebx,r9d
  41bc71:	cmp    rdi,rbx
  41bc74:	jbe    0x41bcb0
  41bc76:	test   rsi,rsi
  41bc79:	je     0x41bc93
  41bc7b:	mov    rdx,r9
  41bc7e:	add    rdx,QWORD PTR [rbp+0xd0]
  41bc85:	mov    rcx,rsi
  41bc88:	mov    r8,rbx
  41bc8b:	add    rsi,rbx
  41bc8e:	call   0x42d6a8
  41bc93:	mov    rcx,rbp
  41bc96:	sub    rdi,rbx
  41bc99:	call   0x415130
  41bc9e:	test   eax,eax
  41bca0:	jns    0x41bc61
  41bca2:	xor    eax,eax
  41bca4:	add    rsp,0x28
  41bca8:	pop    rbx
  41bca9:	pop    rsi
  41bcaa:	pop    rdi
  41bcab:	pop    rbp
  41bcac:	ret    
  41bcad:	nop    DWORD PTR [rax]
  41bcb0:	test   rdi,rdi
  41bcb3:	je     0x41bce0
  41bcb5:	test   rsi,rsi
  41bcb8:	je     0x41bcd6
  41bcba:	mov    rdx,r9
  41bcbd:	add    rdx,QWORD PTR [rbp+0xd0]
  41bcc4:	mov    r8,rdi
  41bcc7:	mov    rcx,rsi
  41bcca:	call   0x42d6a8
  41bccf:	mov    r9d,DWORD PTR [rbp+0xe4]
  41bcd6:	add    r9d,edi
  41bcd9:	mov    DWORD PTR [rbp+0xe4],r9d
  41bce0:	mov    rax,rsi
  41bce3:	add    rsp,0x28
  41bce7:	pop    rbx
  41bce8:	pop    rsi
  41bce9:	pop    rdi
  41bcea:	pop    rbp
  41bceb:	ret    
  41bcec:	nop    DWORD PTR [rax+0x0]
  41bcf0:	sub    rsp,0x38
  41bcf4:	mov    r8d,0x2
  41bcfa:	lea    rdx,[rsp+0x20]
  41bcff:	call   0x41bc50
  41bd04:	movzx  eax,WORD PTR [rsp+0x20]
  41bd09:	add    rsp,0x38
  41bd0d:	ret    
  41bd0e:	xchg   ax,ax
  41bd10:	sub    rsp,0x38
  41bd14:	mov    r8d,0x4
  41bd1a:	lea    rdx,[rsp+0x2c]
  41bd1f:	call   0x41bc50
  41bd24:	mov    eax,DWORD PTR [rsp+0x2c]
  41bd28:	add    rsp,0x38
  41bd2c:	ret    
  41bd2d:	nop    DWORD PTR [rax]
  41bd30:	sub    rsp,0x38
  41bd34:	mov    r8d,0x8
  41bd3a:	lea    rdx,[rsp+0x20]
  41bd3f:	call   0x41bc50
  41bd44:	mov    eax,DWORD PTR [rsp+0x24]
  41bd48:	mov    edx,DWORD PTR [rsp+0x20]
  41bd4c:	shl    rax,0x20
  41bd50:	or     rax,rdx
  41bd53:	add    rsp,0x38
  41bd57:	ret    
  41bd58:	nop    DWORD PTR [rax+rax*1+0x0]
  41bd60:	push   r13
  41bd62:	push   r12
  41bd64:	push   rbp
  41bd65:	push   rdi
  41bd66:	push   rsi
  41bd67:	push   rbx
  41bd68:	sub    rsp,0x78
  41bd6c:	cmp    WORD PTR [rcx],0x6ff
  41bd71:	mov    rsi,rcx
  41bd74:	mov    rbx,rdx
  41bd77:	mov    rdi,r8
  41bd7a:	mov    r12,r9
  41bd7d:	jbe    0x41bde3
  41bd7f:	xor    eax,eax
  41bd81:	test   rdi,rdi
  41bd84:	lea    r8,[rdx+rdx*1]
  41bd88:	je     0x41bdf0
  41bd8a:	mov    rdx,QWORD PTR [rsi+0x68]
  41bd8e:	lea    rbx,[rsp+0x30]
  41bd93:	lea    rbp,[rsp+0x50]
  41bd98:	mov    rcx,rbx
  41bd9b:	mov    r13,QWORD PTR [rdx+rax*8]
  41bd9f:	mov    rdx,rsi
  41bda2:	call   0x41d4a0
  41bda7:	mov    r8,r12
  41bdaa:	mov    rdx,rdi
  41bdad:	mov    rcx,rbp
  41bdb0:	call   0x41d560
  41bdb5:	mov    QWORD PTR [rsp+0x20],rbp
  41bdba:	mov    r9,rbx
  41bdbd:	mov    r8d,0x1
  41bdc3:	mov    rdx,r13
  41bdc6:	mov    rcx,rsi
  41bdc9:	call   0x41d100
  41bdce:	mov    rax,QWORD PTR [rsp+0x58]
  41bdd3:	sub    rax,rdi
  41bdd6:	add    rsp,0x78
  41bdda:	pop    rbx
  41bddb:	pop    rsi
  41bddc:	pop    rdi
  41bddd:	pop    rbp
  41bdde:	pop    r12
  41bde0:	pop    r13
  41bde2:	ret    
  41bde3:	test   rdi,rdi
  41bde6:	mov    r8,rdx
  41bde9:	mov    eax,0x1
  41bdee:	jne    0x41bd8a
  41bdf0:	xor    edx,edx
  41bdf2:	mov    rcx,rsi
  41bdf5:	call   0x41bc50
  41bdfa:	mov    rax,rbx
  41bdfd:	add    rsp,0x78
  41be01:	pop    rbx
  41be02:	pop    rsi
  41be03:	pop    rdi
  41be04:	pop    rbp
  41be05:	pop    r12
  41be07:	pop    r13
  41be09:	ret    
  41be0a:	nop    WORD PTR [rax+rax*1+0x0]
  41be10:	push   r14
  41be12:	push   r13
  41be14:	push   r12
  41be16:	push   rbp
  41be17:	push   rdi
  41be18:	push   rsi
  41be19:	push   rbx
  41be1a:	add    rsp,0xffffffffffffff80
  41be1e:	cmp    QWORD PTR [r9+0x28],0x0
  41be23:	mov    rdi,rcx
  41be26:	mov    rbp,rdx
  41be29:	mov    rsi,r8
  41be2c:	mov    rbx,r9
  41be2f:	je     0x41bf02
  41be35:	test   rsi,rsi
  41be38:	jne    0x41be52
  41be3a:	mov    DWORD PTR [rbx+0x64],0x0
  41be41:	xor    eax,eax
  41be43:	sub    rsp,0xffffffffffffff80
  41be47:	pop    rbx
  41be48:	pop    rsi
  41be49:	pop    rdi
  41be4a:	pop    rbp
  41be4b:	pop    r12
  41be4d:	pop    r13
  41be4f:	pop    r14
  41be51:	ret    
  41be52:	movsxd r14,DWORD PTR [rbx+0x10]
  41be56:	lea    r12,[rsp+0x40]
  41be5b:	mov    r8,rsi
  41be5e:	mov    r13,QWORD PTR [rbx+0x28]
  41be62:	lea    rsi,[rsp+0x60]
  41be67:	mov    rdx,rdi
  41be6a:	mov    rcx,r12
  41be6d:	call   0x41d4a0
  41be72:	mov    rcx,rsi
  41be75:	mov    r8,r14
  41be78:	mov    rdx,rbp
  41be7b:	call   0x41d560
  41be80:	mov    QWORD PTR [rsp+0x20],rsi
  41be85:	mov    r9,r12
  41be88:	mov    r8d,0x1
  41be8e:	mov    rdx,r13
  41be91:	mov    rcx,rdi
  41be94:	call   0x41d100
  41be99:	mov    rax,QWORD PTR [rsp+0x68]
  41be9e:	mov    rsi,QWORD PTR [rsp+0x48]
  41bea3:	sub    rax,rbp
  41bea6:	mov    DWORD PTR [rbx+0x64],eax
  41bea9:	xor    eax,eax
  41beab:	test   rsi,rsi
  41beae:	je     0x41be43
  41beb0:	xor    edx,edx
  41beb2:	mov    r8,rsi
  41beb5:	mov    rcx,rdi
  41beb8:	call   0x41bc50
  41bebd:	mov    rdx,QWORD PTR [rip+0x1ff6c]        # 0x43be30
  41bec4:	mov    eax,0xffffffff
  41bec9:	mov    edx,DWORD PTR [rdx]
  41becb:	test   edx,edx
  41becd:	je     0x41be43
  41bed3:	mov    edx,DWORD PTR [rbx+0x64]
  41bed6:	lea    r8,[rip+0x1b103]        # 0x436fe0
  41bedd:	lea    rcx,[rip+0x1b0dc]        # 0x436fc0
  41bee4:	mov    r9d,esi
  41bee7:	mov    DWORD PTR [rsp+0x3c],eax
  41beeb:	mov    DWORD PTR [rsp+0x20],edx
  41beef:	mov    edx,0xea4
  41bef4:	call   0x40d350
  41bef9:	mov    eax,DWORD PTR [rsp+0x3c]
  41befd:	jmp    0x41be43
  41bf02:	lea    rdx,[rip+0x1b0b7]        # 0x436fc0
  41bf09:	lea    rcx,[rip+0x1b0b7]        # 0x436fc7
  41bf10:	mov    r8d,0xd9
  41bf16:	call   0x42d350
  41bf1b:	jmp    0x41be35
  41bf20:	push   r12
  41bf22:	push   rbp
  41bf23:	push   rdi
  41bf24:	push   rsi
  41bf25:	push   rbx
  41bf26:	sub    rsp,0x20
  41bf2a:	lea    rbp,[r8*4+0x0]
  41bf32:	mov    rbx,rdx
  41bf35:	mov    r12,rcx
  41bf38:	mov    rcx,rbx
  41bf3b:	mov    rdi,r8
  41bf3e:	mov    rdx,rbp
  41bf41:	call   0x41d790
  41bf46:	test   rax,rax
  41bf49:	mov    rsi,rax
  41bf4c:	je     0x41bf80
  41bf4e:	mov    rax,QWORD PTR [rbx]
  41bf51:	mov    r9,rbp
  41bf54:	mov    rdx,rdi
  41bf57:	mov    rcx,r12
  41bf5a:	mov    rsi,rbx
  41bf5d:	lea    r8,[rax+0x8]
  41bf61:	call   0x41bd60
  41bf66:	mov    rcx,rbx
  41bf69:	mov    rdx,rax
  41bf6c:	call   0x41d760
  41bf71:	mov    rax,rsi
  41bf74:	add    rsp,0x20
  41bf78:	pop    rbx
  41bf79:	pop    rsi
  41bf7a:	pop    rdi
  41bf7b:	pop    rbp
  41bf7c:	pop    r12
  41bf7e:	ret    
  41bf7f:	nop
  41bf80:	mov    r8,rdi
  41bf83:	xor    edx,edx
  41bf85:	mov    rcx,r12
  41bf88:	call   0x41bc50
  41bf8d:	mov    rax,rsi
  41bf90:	add    rsp,0x20
  41bf94:	pop    rbx
  41bf95:	pop    rsi
  41bf96:	pop    rdi
  41bf97:	pop    rbp
  41bf98:	pop    r12
  41bf9a:	ret    
  41bf9b:	nop
  41bf9c:	nop
  41bf9d:	nop
  41bf9e:	nop
  41bf9f:	nop
  41bfa0:	push   rbx
  41bfa1:	sub    rsp,0x20
  41bfa5:	mov    rcx,QWORD PTR [rdx]
  41bfa8:	mov    rbx,rdx
  41bfab:	call   0x42d6f8
  41bfb0:	mov    rcx,rbx
  41bfb3:	call   0x42d6f8
  41bfb8:	xor    eax,eax
  41bfba:	add    rsp,0x20
  41bfbe:	pop    rbx
  41bfbf:	ret    
  41bfc0:	push   rsi
  41bfc1:	push   rbx
  41bfc2:	sub    rsp,0x28
  41bfc6:	mov    rbx,rcx
  41bfc9:	mov    esi,edx
  41bfcb:	mov    edx,0x65
  41bfd0:	call   0x4241d0
  41bfd5:	mov    rcx,rbx
  41bfd8:	mov    edx,0x3
  41bfdd:	call   0x4241d0
  41bfe2:	mov    rcx,rbx
  41bfe5:	mov    edx,0x1
  41bfea:	call   0x4241d0
  41bfef:	movsx  edx,si
  41bff2:	mov    rcx,rbx
  41bff5:	add    rsp,0x28
  41bff9:	pop    rbx
  41bffa:	pop    rsi
  41bffb:	jmp    0x424180
  41c000:	push   rbp
  41c001:	push   r15
  41c003:	push   r14
  41c005:	push   r13
  41c007:	push   r12
  41c009:	push   rdi
  41c00a:	push   rsi
  41c00b:	push   rbx
  41c00c:	sub    rsp,0xd8
  41c013:	lea    rbp,[rsp+0x80]
  41c01b:	lea    rax,[r9+0x4]
  41c01f:	mov    r15,rdx
  41c022:	mov    rdi,rcx
  41c025:	mov    rdx,r8
  41c028:	mov    rbx,r9
  41c02b:	mov    QWORD PTR [rbp-0x48],rax
  41c02f:	lea    rax,[r9+0x13]
  41c033:	and    rax,0xfffffffffffffff0
  41c037:	call   0x42c580
  41c03c:	xor    r13d,r13d
  41c03f:	sub    rsp,rax
  41c042:	mov    r8,r9
  41c045:	lea    r12,[rbp-0x40]
  41c049:	lea    rsi,[rsp+0x20]
  41c04e:	mov    rcx,rsi
  41c051:	lea    r14,[rsi+rbx*1]
  41c055:	call   0x42d6a8
  41c05a:	lea    rax,[rsi+rbx*1+0x1]
  41c05f:	mov    QWORD PTR [rbp-0x50],rax
  41c063:	lea    rax,[rsi+rbx*1+0x2]
  41c068:	mov    QWORD PTR [rbp-0x58],rax
  41c06c:	lea    rax,[rsi+rbx*1+0x3]
  41c071:	lea    rbx,[rbp-0x20]
  41c075:	mov    QWORD PTR [rbp-0x60],rax
  41c079:	nop    DWORD PTR [rax+0x0]
  41c080:	mov    edx,r13d
  41c083:	mov    rax,QWORD PTR [rbp-0x50]
  41c087:	mov    rcx,rbx
  41c08a:	shr    edx,0x18
  41c08d:	mov    BYTE PTR [r14],dl
  41c090:	mov    edx,r13d
  41c093:	shr    edx,0x10
  41c096:	mov    BYTE PTR [rax],dl
  41c098:	mov    rax,QWORD PTR [rbp-0x58]
  41c09c:	mov    edx,r13d
  41c09f:	shr    edx,0x8
  41c0a2:	mov    BYTE PTR [rax],dl
  41c0a4:	mov    rax,QWORD PTR [rbp-0x60]
  41c0a8:	mov    BYTE PTR [rax],r13b
  41c0ab:	call   0x42b018
  41c0b0:	mov    rdx,QWORD PTR [rbp-0x48]
  41c0b4:	mov    r8,rsi
  41c0b7:	mov    rcx,rbx
  41c0ba:	call   0x42b010
  41c0bf:	mov    edx,0x14
  41c0c4:	mov    r8,r12
  41c0c7:	mov    rcx,rbx
  41c0ca:	call   0x42b020
  41c0cf:	xor    edx,edx
  41c0d1:	cmp    r15,0x14
  41c0d5:	jbe    0x41c100
  41c0d7:	nop    WORD PTR [rax+rax*1+0x0]
  41c0e0:	movzx  ecx,BYTE PTR [r12+rdx*1]
  41c0e5:	xor    BYTE PTR [rdi+rdx*1],cl
  41c0e8:	add    rdx,0x1
  41c0ec:	cmp    rdx,0x14
  41c0f0:	jne    0x41c0e0
  41c0f2:	add    rdi,0x14
  41c0f6:	sub    r15,0x14
  41c0fa:	add    r13d,0x1
  41c0fe:	jmp    0x41c080
  41c100:	test   r15,r15
  41c103:	je     0x41c116
  41c105:	movzx  ecx,BYTE PTR [r12+rdx*1]
  41c10a:	xor    BYTE PTR [rdi+rdx*1],cl
  41c10d:	add    rdx,0x1
  41c111:	cmp    rdx,r15
  41c114:	jne    0x41c105
  41c116:	lea    rsp,[rbp+0x58]
  41c11a:	pop    rbx
  41c11b:	pop    rsi
  41c11c:	pop    rdi
  41c11d:	pop    r12
  41c11f:	pop    r13
  41c121:	pop    r14
  41c123:	pop    r15
  41c125:	pop    rbp
  41c126:	ret    
  41c127:	nop    WORD PTR [rax+rax*1+0x0]
  41c130:	push   r15
  41c132:	push   r14
  41c134:	push   r13
  41c136:	push   r12
  41c138:	push   rbp
  41c139:	push   rdi
  41c13a:	push   rsi
  41c13b:	push   rbx
  41c13c:	sub    rsp,0xd48
  41c143:	mov    rdi,QWORD PTR [rsp+0xdb0]
  41c14b:	lea    r12,[rsp+0x50]
  41c150:	lea    rbp,[rsp+0x70]
  41c155:	mov    rbx,r9
  41c158:	mov    r15,r8
  41c15b:	mov    DWORD PTR [rsp+0x68],edx
  41c15f:	mov    QWORD PTR [rsp+0x60],rcx
  41c164:	mov    QWORD PTR [rsp+0x48],0x800
  41c16d:	mov    rcx,r12
  41c170:	call   QWORD PTR [rip+0x265de]        # 0x442754
  41c176:	mov    rcx,rbp
  41c179:	call   0x42afe0
  41c17e:	mov    rcx,rdi
  41c181:	call   0x42d610
  41c186:	lea    r13,[rax+rbx*1]
  41c18a:	mov    r14,rax
  41c18d:	mov    rcx,r13
  41c190:	call   0x42d6b8
  41c195:	test   rax,rax
  41c198:	mov    rsi,rax
  41c19b:	je     0x41c300
  41c1a1:	mov    r8,rbx
  41c1a4:	mov    rdx,r15
  41c1a7:	mov    rcx,rax
  41c1aa:	call   0x42d6a8
  41c1af:	lea    rcx,[rsi+rbx*1]
  41c1b3:	mov    rdx,rdi
  41c1b6:	mov    r8,r14
  41c1b9:	lea    rbx,[rsp+0x540]
  41c1c1:	call   0x42d6a8
  41c1c6:	lea    rdx,[rsp+0x60]
  41c1cb:	lea    r9,[rsp+0x48]
  41c1d0:	lea    rcx,[rip+0x1ae59]        # 0x437030
  41c1d7:	mov    r8,rbx
  41c1da:	call   0x42ae80
  41c1df:	test   eax,eax
  41c1e1:	mov    edi,eax
  41c1e3:	je     0x41c230
  41c1e5:	mov    rax,QWORD PTR [rip+0x1fc44]        # 0x43be30
  41c1ec:	mov    ebx,DWORD PTR [rax]
  41c1ee:	test   ebx,ebx
  41c1f0:	jne    0x41c2d3
  41c1f6:	xor    ebx,ebx
  41c1f8:	mov    rcx,rsi
  41c1fb:	call   0x42d6f8
  41c200:	mov    rcx,rbp
  41c203:	call   0x42aff0
  41c208:	mov    rcx,r12
  41c20b:	call   QWORD PTR [rip+0x2653b]        # 0x44274c
  41c211:	mov    rax,rbx
  41c214:	add    rsp,0xd48
  41c21b:	pop    rbx
  41c21c:	pop    rsi
  41c21d:	pop    rdi
  41c21e:	pop    rbp
  41c21f:	pop    r12
  41c221:	pop    r13
  41c223:	pop    r14
  41c225:	pop    r15
  41c227:	ret    
  41c228:	nop    DWORD PTR [rax+rax*1+0x0]
  41c230:	lea    rdi,[rsp+0xa0]
  41c238:	mov    rdx,QWORD PTR [rsp+0x48]
  41c23d:	mov    r8,rbx
  41c240:	mov    rcx,rdi
  41c243:	call   0x42b008
  41c248:	cmp    eax,0x2
  41c24b:	je     0x41c280
  41c24d:	mov    rax,QWORD PTR [rip+0x1fbdc]        # 0x43be30
  41c254:	mov    r11d,DWORD PTR [rax]
  41c257:	test   r11d,r11d
  41c25a:	je     0x41c1f6
  41c25c:	lea    r8,[rip+0x1ae16]        # 0x437079
  41c263:	lea    rcx,[rip+0x1adf8]        # 0x437062
  41c26a:	mov    edx,0x14c2
  41c26f:	xor    ebx,ebx
  41c271:	call   0x40d350
  41c276:	jmp    0x41c1f8
  41c278:	nop    DWORD PTR [rax+rax*1+0x0]
  41c280:	cmp    DWORD PTR [rsp+0xb8],0x1010
  41c28b:	jne    0x41c24d
  41c28d:	mov    r8,rdi
  41c290:	mov    edx,0x2000
  41c295:	mov    rcx,rbp
  41c298:	call   0x42afe8
  41c29d:	test   eax,eax
  41c29f:	jne    0x41c307
  41c2a1:	mov    rax,QWORD PTR [rip+0x1fb88]        # 0x43be30
  41c2a8:	mov    r10d,DWORD PTR [rax]
  41c2ab:	test   r10d,r10d
  41c2ae:	je     0x41c1f6
  41c2b4:	lea    r8,[rip+0x1adbe]        # 0x437079
  41c2bb:	lea    rcx,[rip+0x1ada0]        # 0x437062
  41c2c2:	mov    edx,0x1522
  41c2c7:	xor    ebx,ebx
  41c2c9:	call   0x40d350
  41c2ce:	jmp    0x41c1f8
  41c2d3:	mov    ecx,edi
  41c2d5:	call   0x42ae40
  41c2da:	lea    r8,[rip+0x1ad5f]        # 0x437040
  41c2e1:	lea    rcx,[rip+0x1ad7a]        # 0x437062
  41c2e8:	mov    QWORD PTR [rsp+0x20],rax
  41c2ed:	mov    r9d,edi
  41c2f0:	mov    edx,0x1452
  41c2f5:	call   0x40d350
  41c2fa:	jmp    0x41c1f6
  41c2ff:	nop
  41c300:	xor    eax,eax
  41c302:	jmp    0x41c214
  41c307:	mov    r14,QWORD PTR [rsp+0x70]
  41c30c:	lea    rax,[r13+0x2a]
  41c310:	cmp    r14,rax
  41c313:	jae    0x41c345
  41c315:	mov    rax,QWORD PTR [rip+0x1fb14]        # 0x43be30
  41c31c:	mov    eax,DWORD PTR [rax]
  41c31e:	test   eax,eax
  41c320:	je     0x41c1f6
  41c326:	lea    r8,[rip+0x1ad6e]        # 0x43709b
  41c32d:	lea    rcx,[rip+0x1ad2e]        # 0x437062
  41c334:	mov    edx,0x1592
  41c339:	xor    ebx,ebx
  41c33b:	call   0x40d350
  41c340:	jmp    0x41c1f8
  41c345:	lea    rbx,[rsp+0x140]
  41c34d:	xor    eax,eax
  41c34f:	mov    ecx,0x80
  41c354:	lea    r15d,[r14-0x15]
  41c358:	mov    rdi,rbx
  41c35b:	rep stos QWORD PTR es:[rdi],rax
  41c35e:	lea    rdi,[rsp+0xd0]
  41c366:	mov    rcx,rdi
  41c369:	call   0x42b018
  41c36e:	lea    r8,[rip+0x1ad70]        # 0x4370e5
  41c375:	xor    edx,edx
  41c377:	mov    rcx,rdi
  41c37a:	call   0x42b010
  41c37f:	lea    r9,[rbx+0x15]
  41c383:	mov    rcx,rdi
  41c386:	mov    edx,0x14
  41c38b:	mov    r8,r9
  41c38e:	mov    QWORD PTR [rsp+0x38],r9
  41c393:	call   0x42b020
  41c398:	mov    rax,r14
  41c39b:	mov    r8,r13
  41c39e:	mov    rdx,rsi
  41c3a1:	sub    rax,r13
  41c3a4:	lea    rcx,[rbx+rax*1]
  41c3a8:	mov    BYTE PTR [rsp+rax*1+0x13f],0x1
  41c3b0:	call   0x42d6a8
  41c3b5:	mov    rdi,QWORD PTR [rip+0x1fa74]        # 0x43be30
  41c3bc:	mov    r9d,DWORD PTR [rdi]
  41c3bf:	test   r9d,r9d
  41c3c2:	mov    r9,QWORD PTR [rsp+0x38]
  41c3c7:	jne    0x41c4b6
  41c3cd:	lea    r13,[rbx+0x1]
  41c3d1:	mov    edx,0x14
  41c3d6:	mov    rcx,r13
  41c3d9:	call   0x42ad80
  41c3de:	mov    r8d,DWORD PTR [rdi]
  41c3e1:	test   r8d,r8d
  41c3e4:	jne    0x41c529
  41c3ea:	lea    r13,[rbx+0x15]
  41c3ee:	lea    r8,[rbx+0x1]
  41c3f2:	mov    r9d,0x14
  41c3f8:	mov    rdx,r15
  41c3fb:	mov    rcx,r13
  41c3fe:	call   0x41c000
  41c403:	mov    ecx,DWORD PTR [rdi]
  41c405:	test   ecx,ecx
  41c407:	jne    0x41c504
  41c40d:	lea    r13,[rbx+0x1]
  41c411:	lea    r8,[rbx+0x15]
  41c415:	mov    edx,0x14
  41c41a:	mov    r9,r15
  41c41d:	mov    rcx,r13
  41c420:	call   0x41c000
  41c425:	mov    edx,DWORD PTR [rdi]
  41c427:	test   edx,edx
  41c429:	jne    0x41c4db
  41c42f:	mov    r8,rbx
  41c432:	mov    rdx,r14
  41c435:	mov    rcx,r12
  41c438:	call   0x42aff8
  41c43d:	lea    r9,[rbp+0x8]
  41c441:	lea    r8,[rbp+0x18]
  41c445:	mov    rdx,r12
  41c448:	mov    rcx,r12
  41c44b:	call   QWORD PTR [rip+0x2630b]        # 0x44275c
  41c451:	mov    r13,QWORD PTR [rsp+0x70]
  41c456:	mov    rcx,r13
  41c459:	call   0x42d6b8
  41c45e:	mov    rbx,rax
  41c461:	mov    rax,QWORD PTR [rsp+0xdb8]
  41c469:	test   rbx,rbx
  41c46c:	mov    QWORD PTR [rax],r13
  41c46f:	je     0x41c1f6
  41c475:	mov    r8,r12
  41c478:	mov    rdx,rbx
  41c47b:	mov    rcx,r13
  41c47e:	call   0x42b000
  41c483:	cmp    DWORD PTR [rdi],0x0
  41c486:	je     0x41c1f8
  41c48c:	mov    rax,QWORD PTR [rsp+0x70]
  41c491:	lea    r8,[rip+0x1ac1d]        # 0x4370b5
  41c498:	lea    rcx,[rip+0x1abc3]        # 0x437062
  41c49f:	mov    r9,rbx
  41c4a2:	mov    edx,0x1645
  41c4a7:	mov    QWORD PTR [rsp+0x20],rax
  41c4ac:	call   0x40d0b0
  41c4b1:	jmp    0x41c1f8
  41c4b6:	mov    eax,r15d
  41c4b9:	lea    r8,[rip+0x1abce]        # 0x43708e
  41c4c0:	lea    rcx,[rip+0x1ab9b]        # 0x437062
  41c4c7:	mov    QWORD PTR [rsp+0x20],rax
  41c4cc:	mov    edx,0x10a5
  41c4d1:	call   0x40d0b0
  41c4d6:	jmp    0x41c3cd
  41c4db:	lea    r8,[rip+0x1abb2]        # 0x437094
  41c4e2:	lea    rcx,[rip+0x1ab79]        # 0x437062
  41c4e9:	mov    QWORD PTR [rsp+0x20],0x14
  41c4f2:	mov    r9,r13
  41c4f5:	mov    edx,0x1165
  41c4fa:	call   0x40d0b0
  41c4ff:	jmp    0x41c42f
  41c504:	lea    r8,[rip+0x1ab83]        # 0x43708e
  41c50b:	lea    rcx,[rip+0x1ab50]        # 0x437062
  41c512:	mov    QWORD PTR [rsp+0x20],r15
  41c517:	mov    r9,r13
  41c51a:	mov    edx,0x1125
  41c51f:	call   0x40d0b0
  41c524:	jmp    0x41c40d
  41c529:	lea    r8,[rip+0x1ab64]        # 0x437094
  41c530:	lea    rcx,[rip+0x1ab2b]        # 0x437062
  41c537:	mov    QWORD PTR [rsp+0x20],0x14
  41c540:	mov    r9,r13
  41c543:	mov    edx,0x10e5
  41c548:	call   0x40d0b0
  41c54d:	jmp    0x41c3ea
  41c552:	nop    DWORD PTR [rax+0x0]
  41c556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c560:	push   rdi
  41c561:	push   rsi
  41c562:	push   rbx
  41c563:	sub    rsp,0x40
  41c567:	mov    r10,QWORD PTR [rcx+0x168]
  41c56e:	mov    rbx,rcx
  41c571:	mov    rsi,rdx
  41c574:	test   r10,r10
  41c577:	je     0x41c710
  41c57d:	cmp    DWORD PTR [rdx+0x20],0x1e
  41c581:	jne    0x41c710
  41c587:	mov    rax,QWORD PTR [rcx+0x130]
  41c58e:	test   rax,rax
  41c591:	je     0x41c710
  41c597:	movzx  edx,WORD PTR [rax+0x8]
  41c59b:	cmp    dx,0x1
  41c59f:	jbe    0x41c710
  41c5a5:	mov    rcx,QWORD PTR [rax]
  41c5a8:	mov    rax,QWORD PTR [rcx+0x8]
  41c5ac:	cmp    DWORD PTR [rax+0x14],0xe1
  41c5b3:	jne    0x41c710
  41c5b9:	cmp    dx,0x2
  41c5bd:	jne    0x41c6e0
  41c5c3:	mov    rdx,QWORD PTR [rax+0x48]
  41c5c7:	xor    r9d,r9d
  41c5ca:	xor    r8d,r8d
  41c5cd:	mov    rcx,QWORD PTR [rdx]
  41c5d0:	movsxd rdx,DWORD PTR [rax+0x10]
  41c5d4:	lea    rax,[rsp+0x38]
  41c5d9:	mov    QWORD PTR [rsp+0x28],rax
  41c5de:	mov    rax,QWORD PTR [r10+0x78]
  41c5e2:	add    rax,0x8
  41c5e6:	mov    QWORD PTR [rsp+0x20],rax
  41c5eb:	call   0x41c130
  41c5f0:	test   rax,rax
  41c5f3:	mov    rdi,rax
  41c5f6:	je     0x41c710
  41c5fc:	mov    edx,0x1f
  41c601:	mov    rcx,rbx
  41c604:	mov    BYTE PTR [rbx+0xf1],0xf
  41c60b:	call   0x41bfc0
  41c610:	lea    rdx,[rip+0x1aaa1]        # 0x4370b8
  41c617:	mov    r8d,0x11
  41c61d:	mov    rcx,rbx
  41c620:	call   0x423f10
  41c625:	mov    edx,0xd7
  41c62a:	mov    rcx,rbx
  41c62d:	call   0x4241d0
  41c632:	mov    edx,DWORD PTR [rsp+0x38]
  41c636:	mov    rcx,rbx
  41c639:	call   0x424140
  41c63e:	mov    r8,QWORD PTR [rsp+0x38]
  41c643:	mov    rdx,rdi
  41c646:	mov    rcx,rbx
  41c649:	call   0x423f10
  41c64e:	mov    edx,0x20
  41c653:	mov    rcx,rbx
  41c656:	call   0x41bfc0
  41c65b:	lea    rdx,[rip+0x1aa68]        # 0x4370ca
  41c662:	mov    r8d,0x1a
  41c668:	mov    rcx,rbx
  41c66b:	call   0x423f10
  41c670:	mov    edx,0xd7
  41c675:	mov    rcx,rbx
  41c678:	call   0x4241d0
  41c67d:	xor    edx,edx
  41c67f:	mov    rcx,rbx
  41c682:	call   0x4241d0
  41c687:	mov    edx,DWORD PTR [rsp+0x38]
  41c68b:	mov    rcx,rbx
  41c68e:	call   0x424140
  41c693:	mov    r8,QWORD PTR [rsp+0x38]
  41c698:	mov    rdx,rdi
  41c69b:	mov    rcx,rbx
  41c69e:	call   0x423f10
  41c6a3:	mov    rcx,rdi
  41c6a6:	call   0x42d6f8
  41c6ab:	mov    rcx,rbx
  41c6ae:	call   0x424270
  41c6b3:	mov    edi,eax
  41c6b5:	mov    rcx,QWORD PTR [rsi]
  41c6b8:	call   0x42d6f8
  41c6bd:	mov    rcx,rsi
  41c6c0:	call   0x42d6f8
  41c6c5:	mov    eax,edi
  41c6c7:	mov    QWORD PTR [rbx+0xc0],0x0
  41c6d2:	add    rsp,0x40
  41c6d6:	pop    rbx
  41c6d7:	pop    rsi
  41c6d8:	pop    rdi
  41c6d9:	ret    
  41c6da:	nop    WORD PTR [rax+rax*1+0x0]
  41c6e0:	mov    r9,QWORD PTR [rcx+0x10]
  41c6e4:	cmp    DWORD PTR [r9+0x14],0xe1
  41c6ec:	jne    0x41c710
  41c6ee:	mov    rdx,QWORD PTR [rax+0x48]
  41c6f2:	mov    rcx,QWORD PTR [rdx]
  41c6f5:	movsxd rdx,DWORD PTR [rax+0x10]
  41c6f9:	mov    rax,QWORD PTR [r9+0x48]
  41c6fd:	movsxd r9,DWORD PTR [r9+0x10]
  41c701:	mov    r8,QWORD PTR [rax]
  41c704:	jmp    0x41c5d4
  41c709:	nop    DWORD PTR [rax+0x0]
  41c710:	mov    edi,0xffffffff
  41c715:	jmp    0x41c6b5
  41c717:	nop    WORD PTR [rax+rax*1+0x0]
  41c720:	test   rdx,rdx
  41c723:	je     0x41c732
  41c725:	lea    rax,[rip+0xfffffffffffff874]        # 0x41bfa0
  41c72c:	cmp    QWORD PTR [rdx+0x10],rax
  41c730:	je     0x41c734
  41c732:	repz ret 
  41c734:	mov    DWORD PTR [rdx+0x20],r8d
  41c738:	ret    
  41c739:	nop    DWORD PTR [rax+0x0]
  41c740:	sub    rsp,0x28
  41c744:	cmp    QWORD PTR [rcx+0x168],0x0
  41c74c:	je     0x41c780
  41c74e:	mov    edx,0x28
  41c753:	mov    ecx,0x1
  41c758:	call   0x42d740
  41c75d:	test   rax,rax
  41c760:	je     0x41c780
  41c762:	lea    rdx,[rip+0xfffffffffffff837]        # 0x41bfa0
  41c769:	mov    QWORD PTR [rax+0x10],rdx
  41c76d:	lea    rdx,[rip+0xfffffffffffffdec]        # 0x41c560
  41c774:	mov    QWORD PTR [rax+0x18],rdx
  41c778:	add    rsp,0x28
  41c77c:	ret    
  41c77d:	nop    DWORD PTR [rax]
  41c780:	xor    eax,eax
  41c782:	jmp    0x41c778
  41c784:	nop
  41c785:	nop
  41c786:	nop
  41c787:	nop
  41c788:	nop
  41c789:	nop
  41c78a:	nop
  41c78b:	nop
  41c78c:	nop
  41c78d:	nop
  41c78e:	nop
  41c78f:	nop
  41c790:	push   rbx
  41c791:	sub    rsp,0x20
  41c795:	mov    rax,QWORD PTR [rip+0x24d5c]        # 0x4414f8
  41c79c:	mov    rbx,rdx
  41c79f:	lea    rcx,[rdx+0x30]
  41c7a3:	call   QWORD PTR [rax+0x48]
  41c7a6:	mov    rax,QWORD PTR [rip+0x24d4b]        # 0x4414f8
  41c7ad:	lea    rcx,[rbx+0x20]
  41c7b1:	call   QWORD PTR [rax+0x20]
  41c7b4:	mov    rax,QWORD PTR [rip+0x24d3d]        # 0x4414f8
  41c7bb:	mov    rcx,QWORD PTR [rbx]
  41c7be:	call   QWORD PTR [rax+0x80]
  41c7c4:	mov    rcx,QWORD PTR [rbx+0x40]
  41c7c8:	call   0x42d6f8
  41c7cd:	mov    rcx,rbx
  41c7d0:	call   0x42d6f8
  41c7d5:	xor    eax,eax
  41c7d7:	add    rsp,0x20
  41c7db:	pop    rbx
  41c7dc:	ret    
  41c7dd:	nop    DWORD PTR [rax]
  41c7e0:	push   r13
  41c7e2:	push   r12
  41c7e4:	push   rbp
  41c7e5:	push   rdi
  41c7e6:	push   rsi
  41c7e7:	push   rbx
  41c7e8:	sub    rsp,0xc8
  41c7ef:	cmp    r8,0x1f
  41c7f3:	mov    r12,rcx
  41c7f6:	mov    rbx,rdx
  41c7f9:	mov    rsi,r8
  41c7fc:	jbe    0x41c95b
  41c802:	mov    rcx,r8
  41c805:	call   0x42d6b8
  41c80a:	test   rax,rax
  41c80d:	mov    rdi,rax
  41c810:	je     0x41c95b
  41c816:	mov    rcx,r12
  41c819:	movsxd r8,esi
  41c81c:	mov    rdx,rax
  41c81f:	call   0x41bc50
  41c824:	mov    rcx,QWORD PTR [rbx]
  41c827:	test   rcx,rcx
  41c82a:	je     0x41c840
  41c82c:	mov    rax,QWORD PTR [rip+0x24cc5]        # 0x4414f8
  41c833:	call   QWORD PTR [rax+0x80]
  41c839:	mov    QWORD PTR [rbx],0x0
  41c840:	lea    rax,[rsp+0x80]
  41c848:	mov    DWORD PTR [rsp+0x80],esi
  41c84f:	lea    r13,[rsp+0xb0]
  41c857:	lea    rsi,[rbx+0x30]
  41c85b:	lea    rcx,[rbx+0x20]
  41c85f:	mov    r9d,0x914
  41c865:	mov    QWORD PTR [rsp+0xa8],rax
  41c86d:	lea    rax,[rsp+0x90]
  41c875:	mov    r8,QWORD PTR [rbx+0x40]
  41c879:	mov    rdx,rsi
  41c87c:	mov    DWORD PTR [rsp+0xb0],0x0
  41c887:	mov    DWORD PTR [rsp+0xa0],0x0
  41c892:	mov    QWORD PTR [rsp+0xb8],rax
  41c89a:	lea    rax,[rsp+0x70]
  41c89f:	mov    DWORD PTR [rsp+0xb4],0x1
  41c8aa:	mov    DWORD PTR [rsp+0xa4],0x1
  41c8b5:	mov    DWORD PTR [rsp+0x84],0x2
  41c8c0:	mov    QWORD PTR [rsp+0x58],rax
  41c8c5:	lea    rax,[rsp+0x6c]
  41c8ca:	mov    QWORD PTR [rsp+0x88],rdi
  41c8d2:	mov    DWORD PTR [rsp+0x94],0x2
  41c8dd:	mov    QWORD PTR [rsp+0x98],0x0
  41c8e9:	mov    QWORD PTR [rsp+0x50],rax
  41c8ee:	lea    rax,[rsp+0xa0]
  41c8f6:	mov    DWORD PTR [rsp+0x90],0x0
  41c901:	mov    QWORD PTR [rsp+0x48],r13
  41c906:	mov    QWORD PTR [rsp+0x40],rsi
  41c90b:	mov    QWORD PTR [rsp+0x30],rax
  41c910:	mov    rax,QWORD PTR [rip+0x24be1]        # 0x4414f8
  41c917:	mov    DWORD PTR [rsp+0x38],0x0
  41c91f:	mov    DWORD PTR [rsp+0x28],0x0
  41c927:	mov    DWORD PTR [rsp+0x20],0x0
  41c92f:	call   QWORD PTR [rax+0x30]
  41c932:	mov    rcx,rdi
  41c935:	mov    ebp,eax
  41c937:	call   0x42d6f8
  41c93c:	mov    rax,QWORD PTR [rsp+0x98]
  41c944:	cmp    ebp,0x90312
  41c94a:	mov    QWORD PTR [rbx],rax
  41c94d:	je     0x41c980
  41c94f:	cmp    ebp,0x90314
  41c955:	je     0x41c970
  41c957:	test   ebp,ebp
  41c959:	je     0x41c980
  41c95b:	mov    eax,0xffffffff
  41c960:	add    rsp,0xc8
  41c967:	pop    rbx
  41c968:	pop    rsi
  41c969:	pop    rdi
  41c96a:	pop    rbp
  41c96b:	pop    r12
  41c96d:	pop    r13
  41c96f:	ret    
  41c970:	mov    rax,QWORD PTR [rip+0x24b81]        # 0x4414f8
  41c977:	mov    rdx,r13
  41c97a:	mov    rcx,rsi
  41c97d:	call   QWORD PTR [rax+0x40]
  41c980:	mov    r8d,DWORD PTR [rsp+0x90]
  41c988:	xor    eax,eax
  41c98a:	test   r8d,r8d
  41c98d:	je     0x41c960
  41c98f:	mov    rdx,QWORD PTR [rbx]
  41c992:	mov    rcx,r12
  41c995:	call   0x423f10
  41c99a:	mov    rcx,r12
  41c99d:	call   0x424270
  41c9a2:	add    rsp,0xc8
  41c9a9:	pop    rbx
  41c9aa:	pop    rsi
  41c9ab:	pop    rdi
  41c9ac:	pop    rbp
  41c9ad:	pop    r12
  41c9af:	pop    r13
  41c9b1:	ret    
  41c9b2:	nop    DWORD PTR [rax+0x0]
  41c9b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c9c0:	push   r15
  41c9c2:	push   r14
  41c9c4:	push   r13
  41c9c6:	push   r12
  41c9c8:	push   rbp
  41c9c9:	push   rdi
  41c9ca:	push   rsi
  41c9cb:	push   rbx
  41c9cc:	sub    rsp,0x108
  41c9d3:	mov    rbp,QWORD PTR [rcx+0x168]
  41c9da:	mov    QWORD PTR [rsp+0x78],0x0
  41c9e3:	test   rbp,rbp
  41c9e6:	je     0x41cd00
  41c9ec:	cmp    QWORD PTR [rip+0x24b04],0x0        # 0x4414f8
  41c9f4:	mov    rsi,rcx
  41c9f7:	je     0x41cc90
  41c9fd:	lea    r12,[rsp+0xa0]
  41ca05:	xor    eax,eax
  41ca07:	mov    ecx,0x6
  41ca0c:	mov    edx,0x5c
  41ca11:	mov    rdi,r12
  41ca14:	rep stos QWORD PTR es:[rdi],rax
  41ca17:	mov    rax,QWORD PTR [rbp+0x70]
  41ca1b:	lea    rbx,[rax+0x8]
  41ca1f:	mov    rcx,rbx
  41ca22:	call   0x42d638
  41ca27:	test   rax,rax
  41ca2a:	je     0x41ca7e
  41ca2c:	mov    rdx,QWORD PTR [rbp+0x78]
  41ca30:	mov    DWORD PTR [rsp+0xcc],0x1
  41ca3b:	lea    rcx,[rdx+0x8]
  41ca3f:	mov    rdx,QWORD PTR [rdx]
  41ca42:	mov    QWORD PTR [rsp+0xb0],rbx
  41ca4a:	mov    QWORD PTR [rsp+0xc0],rcx
  41ca52:	lea    rcx,[rax+0x1]
  41ca56:	mov    DWORD PTR [rsp+0xc8],edx
  41ca5d:	mov    rdx,rax
  41ca60:	sub    rdx,rbx
  41ca63:	mov    QWORD PTR [rsp+0xa0],rcx
  41ca6b:	mov    DWORD PTR [rsp+0xb8],edx
  41ca72:	call   0x42d610
  41ca77:	mov    DWORD PTR [rsp+0xa8],eax
  41ca7e:	mov    edx,0x48
  41ca83:	mov    ecx,0x1
  41ca88:	call   0x42d740
  41ca8d:	test   rax,rax
  41ca90:	mov    rbx,rax
  41ca93:	je     0x41cd00
  41ca99:	cmp    QWORD PTR [rsi+0x168],0x0
  41caa1:	je     0x41cd00
  41caa7:	lea    rax,[rip+0xfffffffffffffce2]        # 0x41c790
  41caae:	cmp    QWORD PTR [rsp+0xb0],0x0
  41cab7:	mov    edx,0x0
  41cabc:	lea    r13,[rbx+0x20]
  41cac0:	lea    r14,[rsp+0x70]
  41cac5:	mov    r8d,0x2
  41cacb:	mov    QWORD PTR [rbx+0x10],rax
  41cacf:	lea    rax,[rip+0xfffffffffffffd0a]        # 0x41c7e0
  41cad6:	mov    QWORD PTR [rbx+0x18],rax
  41cada:	mov    rax,QWORD PTR [rip+0x24a17]        # 0x4414f8
  41cae1:	cmove  r12,rdx
  41cae5:	xor    r9d,r9d
  41cae8:	xor    ecx,ecx
  41caea:	lea    rdx,[rip+0x1a622]        # 0x437113
  41caf1:	mov    rax,QWORD PTR [rax+0x18]
  41caf5:	mov    QWORD PTR [rsp+0x40],r14
  41cafa:	mov    QWORD PTR [rsp+0x38],r13
  41caff:	mov    QWORD PTR [rsp+0x30],0x0
  41cb08:	mov    QWORD PTR [rsp+0x28],0x0
  41cb11:	mov    QWORD PTR [rsp+0x20],r12
  41cb16:	call   rax
  41cb18:	test   eax,eax
  41cb1a:	jne    0x41cd2d
  41cb20:	lea    rax,[rsp+0x80]
  41cb28:	mov    edx,0x2e
  41cb2d:	mov    DWORD PTR [rsp+0x90],0x0
  41cb38:	mov    DWORD PTR [rsp+0x94],0x1
  41cb43:	mov    DWORD PTR [rsp+0x84],0x2
  41cb4e:	mov    QWORD PTR [rsp+0x98],rax
  41cb56:	mov    rax,QWORD PTR [rbp+0x38]
  41cb5a:	mov    QWORD PTR [rsp+0x88],0x0
  41cb66:	mov    DWORD PTR [rsp+0x80],0x0
  41cb71:	lea    r12,[rax+0x8]
  41cb75:	mov    rcx,r12
  41cb78:	call   0x42d638
  41cb7d:	test   rax,rax
  41cb80:	je     0x41cd40
  41cb86:	mov    r9d,DWORD PTR [rbp+0x8]
  41cb8a:	lea    rcx,[rbx+0x40]
  41cb8e:	lea    rdx,[rip+0x1a588]        # 0x43711d
  41cb95:	mov    r8,r12
  41cb98:	call   0x42d4a0
  41cb9d:	test   eax,eax
  41cb9f:	js     0x41cd10
  41cba5:	mov    rax,QWORD PTR [rip+0x1f284]        # 0x43be30
  41cbac:	lea    r15,[rsp+0xd0]
  41cbb4:	mov    eax,DWORD PTR [rax]
  41cbb6:	test   eax,eax
  41cbb8:	jne    0x41cdd0
  41cbbe:	mov    rcx,QWORD PTR [rsp+0x78]
  41cbc3:	test   rcx,rcx
  41cbc6:	je     0x41cbce
  41cbc8:	call   QWORD PTR [rip+0x26156]        # 0x442d24
  41cbce:	mov    rax,QWORD PTR [rip+0x24923]        # 0x4414f8
  41cbd5:	lea    rbp,[rbx+0x30]
  41cbd9:	lea    r12,[rsp+0x90]
  41cbe1:	mov    QWORD PTR [rsp+0x58],r14
  41cbe6:	mov    QWORD PTR [rsp+0x50],r15
  41cbeb:	xor    edx,edx
  41cbed:	mov    QWORD PTR [rsp+0x48],r12
  41cbf2:	mov    QWORD PTR [rsp+0x40],rbp
  41cbf7:	mov    r9d,0x914
  41cbfd:	mov    DWORD PTR [rsp+0x38],0x0
  41cc05:	mov    QWORD PTR [rsp+0x30],0x0
  41cc0e:	mov    rcx,r13
  41cc11:	mov    DWORD PTR [rsp+0x28],0x0
  41cc19:	mov    DWORD PTR [rsp+0x20],0x0
  41cc21:	mov    r8,QWORD PTR [rbx+0x40]
  41cc25:	call   QWORD PTR [rax+0x30]
  41cc28:	cmp    eax,0x90312
  41cc2d:	je     0x41cc70
  41cc2f:	cmp    eax,0x90314
  41cc34:	je     0x41cc60
  41cc36:	test   eax,eax
  41cc38:	je     0x41cc70
  41cc3a:	mov    rdx,rbx
  41cc3d:	mov    rcx,rsi
  41cc40:	call   0x41c790
  41cc45:	xor    eax,eax
  41cc47:	add    rsp,0x108
  41cc4e:	pop    rbx
  41cc4f:	pop    rsi
  41cc50:	pop    rdi
  41cc51:	pop    rbp
  41cc52:	pop    r12
  41cc54:	pop    r13
  41cc56:	pop    r14
  41cc58:	pop    r15
  41cc5a:	ret    
  41cc5b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cc60:	mov    rax,QWORD PTR [rip+0x24891]        # 0x4414f8
  41cc67:	mov    rdx,r12
  41cc6a:	mov    rcx,rbp
  41cc6d:	call   QWORD PTR [rax+0x40]
  41cc70:	mov    eax,DWORD PTR [rsp+0x80]
  41cc77:	mov    DWORD PTR [rbx+0x8],eax
  41cc7a:	mov    rax,QWORD PTR [rsp+0x88]
  41cc82:	mov    QWORD PTR [rbx],rax
  41cc85:	mov    rax,rbx
  41cc88:	jmp    0x41cc47
  41cc8a:	nop    WORD PTR [rax+rax*1+0x0]
  41cc90:	mov    edx,DWORD PTR [rip+0x24832]        # 0x4414c8
  41cc96:	test   edx,edx
  41cc98:	jne    0x41cdf1
  41cc9e:	lea    rcx,[rip+0x2481b]        # 0x4414c0
  41cca5:	call   0x424920
  41ccaa:	cmp    QWORD PTR [rip+0x2484e],0x0        # 0x441500
  41ccb2:	je     0x41ccd4
  41ccb4:	cmp    QWORD PTR [rip+0x2483c],0x0        # 0x4414f8
  41ccbc:	je     0x41ce30
  41ccc2:	lea    rcx,[rip+0x24807]        # 0x4414d0
  41ccc9:	call   QWORD PTR [rip+0x25c95]        # 0x442964
  41cccf:	jmp    0x41c9fd
  41ccd4:	lea    rcx,[rip+0x1a415]        # 0x4370f0
  41ccdb:	call   QWORD PTR [rip+0x25c8b]        # 0x44296c
  41cce1:	test   rax,rax
  41cce4:	mov    QWORD PTR [rip+0x24815],rax        # 0x441500
  41cceb:	jne    0x41ccb4
  41cced:	lea    rcx,[rip+0x247dc]        # 0x4414d0
  41ccf4:	call   QWORD PTR [rip+0x25c6a]        # 0x442964
  41ccfa:	nop    WORD PTR [rax+rax*1+0x0]
  41cd00:	xor    eax,eax
  41cd02:	jmp    0x41cc47
  41cd07:	nop    WORD PTR [rax+rax*1+0x0]
  41cd10:	mov    rcx,QWORD PTR [rsp+0x78]
  41cd15:	test   rcx,rcx
  41cd18:	je     0x41cd20
  41cd1a:	call   QWORD PTR [rip+0x26004]        # 0x442d24
  41cd20:	mov    rax,QWORD PTR [rip+0x247d1]        # 0x4414f8
  41cd27:	mov    rcx,r13
  41cd2a:	call   QWORD PTR [rax+0x20]
  41cd2d:	mov    rcx,rbx
  41cd30:	call   0x42d6f8
  41cd35:	xor    eax,eax
  41cd37:	jmp    0x41cc47
  41cd3c:	nop    DWORD PTR [rax+0x0]
  41cd40:	lea    r15,[rsp+0xd0]
  41cd48:	mov    ecx,0x6
  41cd4d:	xor    edx,edx
  41cd4f:	mov    rdi,r15
  41cd52:	mov    r8,r15
  41cd55:	rep stos QWORD PTR es:[rdi],rax
  41cd58:	lea    rax,[rsp+0x78]
  41cd5d:	mov    DWORD PTR [rsp+0xd8],0x1
  41cd68:	mov    DWORD PTR [rsp+0xd0],0x20c02
  41cd73:	mov    rcx,r12
  41cd76:	mov    rdi,QWORD PTR [rip+0x25faf]        # 0x442d2c
  41cd7d:	mov    QWORD PTR [rsp+0x68],rax
  41cd82:	mov    r9,rax
  41cd85:	call   rdi
  41cd87:	test   eax,eax
  41cd89:	jne    0x41ce03
  41cd8b:	mov    rax,QWORD PTR [rsp+0x78]
  41cd90:	mov    rdi,QWORD PTR [rax+0x18]
  41cd94:	test   rdi,rdi
  41cd97:	je     0x41cdad
  41cd99:	mov    edx,0x2e
  41cd9e:	mov    rcx,rdi
  41cda1:	call   0x42d638
  41cda6:	test   rax,rax
  41cda9:	cmovne r12,rdi
  41cdad:	mov    edx,0x2e
  41cdb2:	mov    rcx,r12
  41cdb5:	call   0x42d638
  41cdba:	test   rax,rax
  41cdbd:	je     0x41cbbe
  41cdc3:	jmp    0x41cb86
  41cdc8:	nop    DWORD PTR [rax+rax*1+0x0]
  41cdd0:	mov    r9,QWORD PTR [rbx+0x40]
  41cdd4:	lea    r8,[rip+0x1a351]        # 0x43712c
  41cddb:	lea    rcx,[rip+0x1a35c]        # 0x43713e
  41cde2:	mov    edx,0x1174
  41cde7:	call   0x40d350
  41cdec:	jmp    0x41cbbe
  41cdf1:	lea    rcx,[rip+0x246d8]        # 0x4414d0
  41cdf8:	call   QWORD PTR [rip+0x25af6]        # 0x4428f4
  41cdfe:	jmp    0x41ccaa
  41ce03:	xor    edx,edx
  41ce05:	mov    DWORD PTR [rsp+0xd0],0x20002
  41ce10:	mov    r9,QWORD PTR [rsp+0x68]
  41ce15:	mov    r8,r15
  41ce18:	mov    rcx,r12
  41ce1b:	call   rdi
  41ce1d:	test   eax,eax
  41ce1f:	jne    0x41cdad
  41ce21:	jmp    0x41cd8b
  41ce26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ce30:	lea    rdx,[rip+0x1a2c5]        # 0x4370fc
  41ce37:	mov    rcx,QWORD PTR [rip+0x246c2]        # 0x441500
  41ce3e:	call   QWORD PTR [rip+0x25af8]        # 0x44293c
  41ce44:	test   rax,rax
  41ce47:	je     0x41cced
  41ce4d:	call   rax
  41ce4f:	mov    rbx,rax
  41ce52:	mov    QWORD PTR [rip+0x2469f],rax        # 0x4414f8
  41ce59:	lea    rcx,[rip+0x24670]        # 0x4414d0
  41ce60:	call   QWORD PTR [rip+0x25afe]        # 0x442964
  41ce66:	test   rbx,rbx
  41ce69:	jne    0x41c9fd
  41ce6f:	xor    eax,eax
  41ce71:	jmp    0x41cc47
  41ce76:	nop
  41ce77:	nop
  41ce78:	nop
  41ce79:	nop
  41ce7a:	nop
  41ce7b:	nop
  41ce7c:	nop
  41ce7d:	nop
  41ce7e:	nop
  41ce7f:	nop
  41ce80:	push   rsi
  41ce81:	push   rbx
  41ce82:	sub    rsp,0x28
  41ce86:	mov    rbx,rcx
  41ce89:	mov    rcx,QWORD PTR [rcx+0x10]
  41ce8d:	mov    rsi,rdx
  41ce90:	cmp    rcx,rdx
  41ce93:	jae    0x41ceb2
  41ce95:	lea    rcx,[rip+0x1a2bd]        # 0x437159
  41ce9c:	lea    rdx,[rip+0x1a2ad]        # 0x437150
  41cea3:	mov    r8d,0x12b
  41cea9:	call   0x42d350
  41ceae:	mov    rcx,QWORD PTR [rbx+0x10]
  41ceb2:	add    QWORD PTR [rbx+0x8],rsi
  41ceb6:	sub    rcx,rsi
  41ceb9:	mov    eax,esi
  41cebb:	mov    QWORD PTR [rbx+0x10],rcx
  41cebf:	add    rsp,0x28
  41cec3:	pop    rbx
  41cec4:	pop    rsi
  41cec5:	ret    
  41cec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ced0:	push   rsi
  41ced1:	push   rbx
  41ced2:	sub    rsp,0x28
  41ced6:	mov    rbx,QWORD PTR [rcx+0x8]
  41ceda:	mov    rsi,rcx
  41cedd:	mov    rcx,QWORD PTR [rcx+0x10]
  41cee1:	cmp    r8,rbx
  41cee4:	cmovbe rbx,r8
  41cee8:	mov    r8,rbx
  41ceeb:	call   0x41bc50
  41cef0:	sub    QWORD PTR [rsi+0x8],rbx
  41cef4:	mov    eax,ebx
  41cef6:	add    rsp,0x28
  41cefa:	pop    rbx
  41cefb:	pop    rsi
  41cefc:	ret    
  41cefd:	nop    DWORD PTR [rax]
  41cf00:	push   rdi
  41cf01:	push   rsi
  41cf02:	push   rbx
  41cf03:	sub    rsp,0x20
  41cf07:	cmp    QWORD PTR [rcx+0x10],rdx
  41cf0b:	mov    rsi,QWORD PTR [rcx+0x18]
  41cf0f:	mov    rbx,rcx
  41cf12:	mov    rdi,rdx
  41cf15:	jb     0x41cfe0
  41cf1b:	mov    eax,DWORD PTR [rsi+0xe8]
  41cf21:	mov    r8,rax
  41cf24:	add    rax,QWORD PTR [rsi+0xd8]
  41cf2b:	cmp    QWORD PTR [rbx+0x8],rax
  41cf2f:	je     0x41cf51
  41cf31:	lea    rdx,[rip+0x1a218]        # 0x437150
  41cf38:	lea    rcx,[rip+0x1a249]        # 0x437188
  41cf3f:	mov    r8d,0xdc
  41cf45:	call   0x42d350
  41cf4a:	mov    r8d,DWORD PTR [rsi+0xe8]
  41cf51:	mov    r9d,DWORD PTR [rsi+0xe0]
  41cf58:	lea    eax,[r9+0x10]
  41cf5c:	sub    eax,r8d
  41cf5f:	cmp    QWORD PTR [rbx+0x10],rax
  41cf63:	je     0x41cf8c
  41cf65:	lea    rdx,[rip+0x1a1e4]        # 0x437150
  41cf6c:	lea    rcx,[rip+0x1a24d]        # 0x4371c0
  41cf73:	mov    r8d,0xdd
  41cf79:	call   0x42d350
  41cf7e:	mov    r8d,DWORD PTR [rsi+0xe8]
  41cf85:	mov    r9d,DWORD PTR [rsi+0xe0]
  41cf8c:	add    r8d,edi
  41cf8f:	cmp    r8d,r9d
  41cf92:	mov    DWORD PTR [rsi+0xe8],r8d
  41cf99:	jbe    0x41cfb3
  41cf9b:	xor    edx,edx
  41cf9d:	mov    rcx,rsi
  41cfa0:	call   0x4152b0
  41cfa5:	mov    r8d,DWORD PTR [rsi+0xe8]
  41cfac:	mov    r9d,DWORD PTR [rsi+0xe0]
  41cfb3:	mov    eax,r8d
  41cfb6:	add    rax,QWORD PTR [rsi+0xd8]
  41cfbd:	add    r9d,0x10
  41cfc1:	add    QWORD PTR [rbx+0x20],rdi
  41cfc5:	sub    r9d,r8d
  41cfc8:	mov    QWORD PTR [rbx+0x8],rax
  41cfcc:	mov    eax,r9d
  41cfcf:	mov    QWORD PTR [rbx+0x10],rax
  41cfd3:	mov    eax,edi
  41cfd5:	add    rsp,0x20
  41cfd9:	pop    rbx
  41cfda:	pop    rsi
  41cfdb:	pop    rdi
  41cfdc:	ret    
  41cfdd:	nop    DWORD PTR [rax]
  41cfe0:	lea    rdx,[rip+0x1a169]        # 0x437150
  41cfe7:	lea    rcx,[rip+0x1a182]        # 0x437170
  41cfee:	mov    r8d,0xdb
  41cff4:	call   0x42d350
  41cff9:	jmp    0x41cf1b
  41cffe:	xchg   ax,ax
  41d000:	push   rsi
  41d001:	push   rbx
  41d002:	sub    rsp,0x28
  41d006:	mov    rsi,rcx
  41d009:	mov    rcx,rdx
  41d00c:	mov    rbx,QWORD PTR [rsi+0x10]
  41d010:	mov    rdx,QWORD PTR [rsi+0x8]
  41d014:	cmp    r8,rbx
  41d017:	cmovbe rbx,r8
  41d01b:	mov    r8,rbx
  41d01e:	call   0x42d6a8
  41d023:	add    QWORD PTR [rsi+0x8],rbx
  41d027:	sub    QWORD PTR [rsi+0x10],rbx
  41d02b:	mov    eax,ebx
  41d02d:	add    rsp,0x28
  41d031:	pop    rbx
  41d032:	pop    rsi
  41d033:	ret    
  41d034:	xchg   ax,ax
  41d036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d040:	push   rdi
  41d041:	push   rsi
  41d042:	push   rbx
  41d043:	sub    rsp,0x20
  41d047:	mov    rsi,rcx
  41d04a:	mov    rcx,rdx
  41d04d:	mov    rdi,rdx
  41d050:	add    rcx,QWORD PTR [rsi+0x28]
  41d054:	mov    rax,QWORD PTR [rsi+0x20]
  41d058:	lea    rdx,[rcx+0x100]
  41d05f:	mov    QWORD PTR [rsi+0x28],rcx
  41d063:	cmp    rdx,rax
  41d066:	jbe    0x41d0a7
  41d068:	mov    rax,rcx
  41d06b:	mov    ebx,0x400
  41d070:	shr    rax,0x3
  41d074:	cmp    rcx,0x1000
  41d07b:	cmovb  rax,rbx
  41d07f:	lea    rbx,[rax+rcx*1]
  41d083:	mov    rcx,QWORD PTR [rsi+0x18]
  41d087:	mov    rdx,rbx
  41d08a:	call   0x412e30
  41d08f:	mov    rdx,rax
  41d092:	mov    eax,0xffffffff
  41d097:	test   rdx,rdx
  41d09a:	je     0x41d0c3
  41d09c:	mov    rcx,QWORD PTR [rsi+0x28]
  41d0a0:	mov    QWORD PTR [rsi+0x20],rbx
  41d0a4:	mov    rax,rbx
  41d0a7:	cmp    rax,rcx
  41d0aa:	jbe    0x41d0d0
  41d0ac:	mov    rdx,QWORD PTR [rsi+0x18]
  41d0b0:	mov    rbx,rcx
  41d0b3:	sub    rax,rcx
  41d0b6:	add    rbx,QWORD PTR [rdx]
  41d0b9:	mov    QWORD PTR [rsi+0x10],rax
  41d0bd:	mov    eax,edi
  41d0bf:	mov    QWORD PTR [rsi+0x8],rbx
  41d0c3:	add    rsp,0x20
  41d0c7:	pop    rbx
  41d0c8:	pop    rsi
  41d0c9:	pop    rdi
  41d0ca:	ret    
  41d0cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d0d0:	lea    rcx,[rip+0x1a133]        # 0x43720a
  41d0d7:	lea    rdx,[rip+0x1a072]        # 0x437150
  41d0de:	mov    r8d,0x150
  41d0e4:	call   0x42d350
  41d0e9:	mov    rcx,QWORD PTR [rsi+0x28]
  41d0ed:	mov    rax,QWORD PTR [rsi+0x20]
  41d0f1:	jmp    0x41d0ac
  41d0f3:	nop    DWORD PTR [rax]
  41d0f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d100:	push   r15
  41d102:	push   r14
  41d104:	mov    eax,0x1088
  41d109:	push   r13
  41d10b:	push   r12
  41d10d:	push   rbp
  41d10e:	push   rdi
  41d10f:	push   rsi
  41d110:	push   rbx
  41d111:	call   0x42c580
  41d116:	sub    rsp,rax
  41d119:	mov    rbx,QWORD PTR [rsp+0x10f0]
  41d121:	mov    DWORD PTR [rdx+0x34],0x0
  41d128:	lea    rax,[rsp+0x80]
  41d130:	mov    QWORD PTR [rsp+0x68],0x0
  41d139:	cmp    QWORD PTR [rbx+0x10],0x0
  41d13e:	mov    QWORD PTR [rsp+0x48],rax
  41d143:	mov    QWORD PTR [rsp+0x60],rax
  41d148:	je     0x41d273
  41d14e:	mov    rbp,rdx
  41d151:	lea    rax,[rsp+0x60]
  41d156:	mov    rdx,QWORD PTR [rsp+0x48]
  41d15b:	mov    r12,QWORD PTR [rip+0x258fa]        # 0x442a5c
  41d162:	lea    r15,[rsp+0x78]
  41d167:	lea    r14,[rsp+0x70]
  41d16c:	lea    r13,[rsp+0x68]
  41d171:	mov    QWORD PTR [rsp+0x50],r9
  41d176:	mov    DWORD PTR [rsp+0x58],r8d
  41d17b:	mov    rdi,rcx
  41d17e:	mov    QWORD PTR [rsp+0x40],rax
  41d183:	mov    rax,QWORD PTR [rsp+0x50]
  41d188:	mov    r8d,0x1000
  41d18e:	sub    r8,QWORD PTR [rsp+0x68]
  41d193:	mov    rcx,rax
  41d196:	call   QWORD PTR [rax]
  41d198:	test   eax,eax
  41d19a:	js     0x41d273
  41d1a0:	mov    rdx,QWORD PTR [rsp+0x68]
  41d1a5:	jne    0x41d1b0
  41d1a7:	test   rdx,rdx
  41d1aa:	je     0x41d41f
  41d1b0:	cdqe   
  41d1b2:	add    rax,rdx
  41d1b5:	mov    QWORD PTR [rsp+0x68],rax
  41d1ba:	mov    rax,QWORD PTR [rsp+0x48]
  41d1bf:	mov    QWORD PTR [rsp+0x60],rax
  41d1c4:	mov    rax,QWORD PTR [rbx+0x10]
  41d1c8:	jmp    0x41d21a
  41d1ca:	nop    WORD PTR [rax+rax*1+0x0]
  41d1d0:	cmp    QWORD PTR [rsp+0x78],0xffffffffffffffff
  41d1d6:	jne    0x41d340
  41d1dc:	mov    rax,QWORD PTR [rip+0x1ec4d]        # 0x43be30
  41d1e3:	mov    r8d,DWORD PTR [rax]
  41d1e6:	test   r8d,r8d
  41d1e9:	jne    0x41d290
  41d1ef:	cmp    esi,0x7
  41d1f2:	jne    0x41d2c5
  41d1f8:	mov    rax,QWORD PTR [rbx+0x10]
  41d1fc:	test   rax,rax
  41d1ff:	je     0x41d2d0
  41d205:	cmp    QWORD PTR [rsp+0x68],0x0
  41d20b:	je     0x41d2d0
  41d211:	test   r11d,r11d
  41d214:	je     0x41d2d0
  41d21a:	mov    rdx,QWORD PTR [rbx+0x8]
  41d21e:	or     BYTE PTR [rbp+0x34],0x5
  41d222:	mov    rcx,rdi
  41d225:	mov    r9,QWORD PTR [rsp+0x40]
  41d22a:	mov    r8d,DWORD PTR [rsp+0x58]
  41d22f:	mov    QWORD PTR [rsp+0x30],r15
  41d234:	mov    QWORD PTR [rsp+0x28],r14
  41d239:	mov    QWORD PTR [rsp+0x70],rdx
  41d23e:	mov    rdx,rbp
  41d241:	mov    QWORD PTR [rsp+0x20],r13
  41d246:	mov    QWORD PTR [rsp+0x78],rax
  41d24b:	call   0x40c320
  41d250:	mov    QWORD PTR [rsp+0x78],rax
  41d255:	call   r12
  41d258:	mov    rdx,QWORD PTR [rsp+0x70]
  41d25d:	sub    rdx,QWORD PTR [rbx+0x8]
  41d261:	mov    rcx,rbx
  41d264:	mov    esi,DWORD PTR [rax]
  41d266:	call   QWORD PTR [rbx]
  41d268:	test   eax,eax
  41d26a:	mov    r11d,eax
  41d26d:	jns    0x41d1d0
  41d273:	mov    eax,0xffffffff
  41d278:	add    rsp,0x1088
  41d27f:	pop    rbx
  41d280:	pop    rsi
  41d281:	pop    rdi
  41d282:	pop    rbp
  41d283:	pop    r12
  41d285:	pop    r13
  41d287:	pop    r14
  41d289:	pop    r15
  41d28b:	ret    
  41d28c:	nop    DWORD PTR [rax+0x0]
  41d290:	mov    DWORD PTR [rsp+0x5c],r11d
  41d295:	call   r12
  41d298:	mov    DWORD PTR [rsp+0x20],esi
  41d29c:	mov    r9d,DWORD PTR [rax]
  41d29f:	lea    r8,[rip+0x19f8a]        # 0x437230
  41d2a6:	lea    rcx,[rip+0x19ea3]        # 0x437150
  41d2ad:	mov    edx,0x7d4
  41d2b2:	call   0x40d350
  41d2b7:	cmp    esi,0x7
  41d2ba:	mov    r11d,DWORD PTR [rsp+0x5c]
  41d2bf:	je     0x41d1f8
  41d2c5:	cmp    esi,0x2a
  41d2c8:	je     0x41d2e1
  41d2ca:	nop    WORD PTR [rax+rax*1+0x0]
  41d2d0:	mov    rax,QWORD PTR [rip+0x1eb59]        # 0x43be30
  41d2d7:	mov    ecx,DWORD PTR [rax]
  41d2d9:	test   ecx,ecx
  41d2db:	jne    0x41d3bc
  41d2e1:	mov    rdx,QWORD PTR [rsp+0x60]
  41d2e6:	cmp    rdx,QWORD PTR [rsp+0x48]
  41d2eb:	je     0x41d35f
  41d2ed:	mov    rsi,QWORD PTR [rsp+0x68]
  41d2f2:	test   rsi,rsi
  41d2f5:	jne    0x41d350
  41d2f7:	mov    rax,QWORD PTR [rsp+0x48]
  41d2fc:	cmp    QWORD PTR [rbx+0x10],0x0
  41d301:	lea    rdx,[rax+rsi*1]
  41d305:	mov    QWORD PTR [rsp+0x60],rdx
  41d30a:	je     0x41d273
  41d310:	cmp    rdx,QWORD PTR [rsp+0x48]
  41d315:	jae    0x41d183
  41d31b:	lea    rdx,[rip+0x19e2e]        # 0x437150
  41d322:	lea    rcx,[rip+0x19ef8]        # 0x437221
  41d329:	mov    r8d,0x5f
  41d32f:	call   0x42d350
  41d334:	mov    rdx,QWORD PTR [rsp+0x60]
  41d339:	jmp    0x41d183
  41d33e:	xchg   ax,ax
  41d340:	mov    rsi,QWORD PTR [rsp+0x68]
  41d345:	jmp    0x41d2f7
  41d347:	nop    WORD PTR [rax+rax*1+0x0]
  41d350:	mov    rcx,QWORD PTR [rsp+0x48]
  41d355:	mov    r8,rsi
  41d358:	call   0x42d6a0
  41d35d:	jmp    0x41d2f7
  41d35f:	mov    rax,QWORD PTR [rip+0x1eaca]        # 0x43be30
  41d366:	mov    eax,DWORD PTR [rax]
  41d368:	test   eax,eax
  41d36a:	jne    0x41d426
  41d370:	test   rdi,rdi
  41d373:	setne  bl
  41d376:	cmp    esi,0x16
  41d379:	jne    0x41d394
  41d37b:	test   bl,bl
  41d37d:	je     0x41d394
  41d37f:	mov    rcx,QWORD PTR [rdi+0x28]
  41d383:	xor    r9d,r9d
  41d386:	mov    r8d,0x961
  41d38c:	mov    rdx,rdi
  41d38f:	call   0x423700
  41d394:	cmp    esi,0x7
  41d397:	jne    0x41d3b2
  41d399:	test   bl,bl
  41d39b:	je     0x41d3b2
  41d39d:	mov    rcx,QWORD PTR [rdi+0x28]
  41d3a1:	xor    r9d,r9d
  41d3a4:	mov    r8d,0x960
  41d3aa:	mov    rdx,rdi
  41d3ad:	call   0x423700
  41d3b2:	call   r12
  41d3b5:	mov    DWORD PTR [rax],esi
  41d3b7:	jmp    0x41d273
  41d3bc:	call   r12
  41d3bf:	mov    eax,DWORD PTR [rax]
  41d3c1:	mov    r9d,DWORD PTR [rsp+0x68]
  41d3c6:	lea    r8,[rip+0x19eab]        # 0x437278
  41d3cd:	lea    rcx,[rip+0x19d7c]        # 0x437150
  41d3d4:	mov    edx,0x814
  41d3d9:	mov    DWORD PTR [rsp+0x20],eax
  41d3dd:	call   0x40d350
  41d3e2:	mov    rax,QWORD PTR [rip+0x1ea47]        # 0x43be30
  41d3e9:	mov    edx,DWORD PTR [rax]
  41d3eb:	test   edx,edx
  41d3ed:	je     0x41d2e1
  41d3f3:	mov    rax,QWORD PTR [rsp+0x68]
  41d3f8:	mov    r9,QWORD PTR [rsp+0x60]
  41d3fd:	lea    r8,[rip+0x19ebd]        # 0x4372c1
  41d404:	lea    rcx,[rip+0x19d45]        # 0x437150
  41d40b:	mov    edx,0x844
  41d410:	mov    QWORD PTR [rsp+0x20],rax
  41d415:	call   0x40d0b0
  41d41a:	jmp    0x41d2e1
  41d41f:	xor    eax,eax
  41d421:	jmp    0x41d278
  41d426:	lea    r8,[rip+0x19eab]        # 0x4372d8
  41d42d:	lea    rcx,[rip+0x19d1c]        # 0x437150
  41d434:	mov    edx,0x884
  41d439:	call   0x40d350
  41d43e:	jmp    0x41d370
  41d443:	nop    DWORD PTR [rax]
  41d446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d450:	push   rsi
  41d451:	push   rbx
  41d452:	sub    rsp,0x28
  41d456:	mov    rsi,rdx
  41d459:	mov    rbx,r8
  41d45c:	mov    r8,QWORD PTR [rbx+0x10]
  41d460:	test   r8,r8
  41d463:	je     0x41d480
  41d465:	mov    rdx,QWORD PTR [rbx+0x8]
  41d469:	mov    rcx,rsi
  41d46c:	call   QWORD PTR [rsi]
  41d46e:	test   eax,eax
  41d470:	je     0x41d490
  41d472:	js     0x41d480
  41d474:	movsxd rdx,eax
  41d477:	mov    rcx,rbx
  41d47a:	call   QWORD PTR [rbx]
  41d47c:	test   eax,eax
  41d47e:	jns    0x41d45c
  41d480:	mov    eax,0xffffffff
  41d485:	add    rsp,0x28
  41d489:	pop    rbx
  41d48a:	pop    rsi
  41d48b:	ret    
  41d48c:	nop    DWORD PTR [rax+0x0]
  41d490:	xor    eax,eax
  41d492:	jmp    0x41d485
  41d494:	xchg   ax,ax
  41d496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d4a0:	lea    rax,[rip+0xfffffffffffffa29]        # 0x41ced0
  41d4a7:	mov    QWORD PTR [rcx+0x8],r8
  41d4ab:	mov    QWORD PTR [rcx+0x10],rdx
  41d4af:	mov    QWORD PTR [rcx],rax
  41d4b2:	ret    
  41d4b3:	nop    DWORD PTR [rax]
  41d4b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d4c0:	push   rdi
  41d4c1:	push   rsi
  41d4c2:	push   rbx
  41d4c3:	sub    rsp,0x20
  41d4c7:	mov    eax,DWORD PTR [rdx+0xe8]
  41d4cd:	mov    rsi,rdx
  41d4d0:	mov    edx,DWORD PTR [rdx+0xe0]
  41d4d6:	mov    rbx,rcx
  41d4d9:	lea    r8d,[rdx+0x10]
  41d4dd:	sub    r8d,eax
  41d4e0:	test   r8d,r8d
  41d4e3:	mov    edi,r8d
  41d4e6:	jne    0x41d504
  41d4e8:	lea    rdx,[rip+0x19c61]        # 0x437150
  41d4ef:	lea    rcx,[rip+0x19e0c]        # 0x437302
  41d4f6:	mov    r8b,0xff
  41d4f9:	call   0x42d350
  41d4fe:	mov    eax,DWORD PTR [rsi+0xe8]
  41d504:	add    rax,QWORD PTR [rsi+0xd8]
  41d50b:	lea    rcx,[rip+0xfffffffffffff9ee]        # 0x41cf00
  41d512:	mov    QWORD PTR [rbx+0x10],rdi
  41d516:	mov    QWORD PTR [rbx+0x20],0x0
  41d51e:	mov    QWORD PTR [rbx+0x18],rsi
  41d522:	mov    QWORD PTR [rbx],rcx
  41d525:	mov    QWORD PTR [rbx+0x8],rax
  41d529:	add    rsp,0x20
  41d52d:	pop    rbx
  41d52e:	pop    rsi
  41d52f:	pop    rdi
  41d530:	ret    
  41d531:	nop    DWORD PTR [rax+rax*1+0x0]
  41d536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d540:	lea    rax,[rip+0xfffffffffffffab9]        # 0x41d000
  41d547:	mov    QWORD PTR [rcx+0x8],rdx
  41d54b:	mov    QWORD PTR [rcx+0x10],r8
  41d54f:	mov    QWORD PTR [rcx],rax
  41d552:	ret    
  41d553:	nop    DWORD PTR [rax]
  41d556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d560:	lea    rax,[rip+0xfffffffffffff919]        # 0x41ce80
  41d567:	mov    QWORD PTR [rcx+0x8],rdx
  41d56b:	mov    QWORD PTR [rcx+0x10],r8
  41d56f:	mov    QWORD PTR [rcx],rax
  41d572:	ret    
  41d573:	nop    DWORD PTR [rax]
  41d576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d580:	push   rbx
  41d581:	sub    rsp,0x30
  41d585:	lea    rax,[rip+0xfffffffffffffab4]        # 0x41d040
  41d58c:	cmp    r8,0x3ff
  41d593:	mov    rbx,rcx
  41d596:	mov    QWORD PTR [rcx+0x18],rdx
  41d59a:	mov    QWORD PTR [rcx],rax
  41d59d:	mov    rcx,QWORD PTR [rdx]
  41d5a0:	jbe    0x41d5c3
  41d5a2:	test   rcx,rcx
  41d5a5:	je     0x41d5d8
  41d5a7:	mov    QWORD PTR [rbx+0x20],r8
  41d5ab:	mov    QWORD PTR [rbx+0x28],0x0
  41d5b3:	xor    eax,eax
  41d5b5:	mov    QWORD PTR [rbx+0x8],rcx
  41d5b9:	mov    QWORD PTR [rbx+0x10],r8
  41d5bd:	add    rsp,0x30
  41d5c1:	pop    rbx
  41d5c2:	ret    
  41d5c3:	mov    QWORD PTR [rsp+0x20],rdx
  41d5c8:	call   0x42d6f8
  41d5cd:	mov    rdx,QWORD PTR [rsp+0x20]
  41d5d2:	mov    r8d,0x400
  41d5d8:	mov    rcx,r8
  41d5db:	mov    QWORD PTR [rsp+0x28],rdx
  41d5e0:	mov    QWORD PTR [rsp+0x20],r8
  41d5e5:	call   0x42d6b8
  41d5ea:	mov    rdx,QWORD PTR [rsp+0x28]
  41d5ef:	mov    rcx,rax
  41d5f2:	mov    r8,QWORD PTR [rsp+0x20]
  41d5f7:	test   rcx,rcx
  41d5fa:	mov    QWORD PTR [rdx],rax
  41d5fd:	mov    eax,0xffffffff
  41d602:	jne    0x41d5a7
  41d604:	jmp    0x41d5bd
  41d606:	nop
  41d607:	nop
  41d608:	nop
  41d609:	nop
  41d60a:	nop
  41d60b:	nop
  41d60c:	nop
  41d60d:	nop
  41d60e:	nop
  41d60f:	nop
  41d610:	mov    rax,QWORD PTR [rcx]
  41d613:	xor    edx,edx
  41d615:	mov    r8,QWORD PTR [rax]
  41d618:	lea    rcx,[rax+0x8]
  41d61c:	jmp    0x42d698
  41d621:	nop    DWORD PTR [rax+rax*1+0x0]
  41d626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d630:	push   rbx
  41d631:	sub    rsp,0x20
  41d635:	lea    rax,[rip+0x19cd4]        # 0x437310
  41d63c:	mov    rbx,rcx
  41d63f:	mov    rcx,QWORD PTR [rcx]
  41d642:	cmp    rcx,rax
  41d645:	je     0x41d64c
  41d647:	call   0x42d6f8
  41d64c:	lea    rax,[rip+0x19cbd]        # 0x437310
  41d653:	mov    QWORD PTR [rbx],rax
  41d656:	add    rsp,0x20
  41d65a:	pop    rbx
  41d65b:	ret    
  41d65c:	nop    DWORD PTR [rax+0x0]
  41d660:	push   rdi
  41d661:	push   rsi
  41d662:	push   rbx
  41d663:	sub    rsp,0x30
  41d667:	test   r8,r8
  41d66a:	mov    rbx,rcx
  41d66d:	mov    rsi,r8
  41d670:	jne    0x41d694
  41d672:	mov    rcx,QWORD PTR [rcx]
  41d675:	lea    rsi,[rip+0x19c94]        # 0x437310
  41d67c:	cmp    rcx,rsi
  41d67f:	je     0x41d689
  41d681:	call   0x42d6f8
  41d686:	mov    QWORD PTR [rbx],rsi
  41d689:	mov    rax,rbx
  41d68c:	add    rsp,0x30
  41d690:	pop    rbx
  41d691:	pop    rsi
  41d692:	pop    rdi
  41d693:	ret    
  41d694:	lea    rcx,[r8+0x9]
  41d698:	mov    QWORD PTR [rsp+0x28],rdx
  41d69d:	call   0x42d6b8
  41d6a2:	test   rax,rax
  41d6a5:	mov    rdi,rax
  41d6a8:	je     0x41d6e5
  41d6aa:	mov    rdx,QWORD PTR [rsp+0x28]
  41d6af:	lea    rcx,[rax+0x8]
  41d6b3:	mov    r8,rsi
  41d6b6:	call   0x42d6a8
  41d6bb:	mov    rcx,QWORD PTR [rbx]
  41d6be:	lea    rax,[rip+0x19c4b]        # 0x437310
  41d6c5:	mov    BYTE PTR [rdi+rsi*1+0x8],0x0
  41d6ca:	mov    QWORD PTR [rdi],rsi
  41d6cd:	cmp    rcx,rax
  41d6d0:	je     0x41d6d7
  41d6d2:	call   0x42d6f8
  41d6d7:	mov    rax,rbx
  41d6da:	mov    QWORD PTR [rbx],rdi
  41d6dd:	add    rsp,0x30
  41d6e1:	pop    rbx
  41d6e2:	pop    rsi
  41d6e3:	pop    rdi
  41d6e4:	ret    
  41d6e5:	xor    ebx,ebx
  41d6e7:	jmp    0x41d689
  41d6e9:	nop    DWORD PTR [rax+0x0]
  41d6f0:	push   rsi
  41d6f1:	push   rbx
  41d6f2:	sub    rsp,0x28
  41d6f6:	mov    rsi,rcx
  41d6f9:	mov    rbx,rdx
  41d6fc:	mov    rcx,rdx
  41d6ff:	call   0x42d610
  41d704:	mov    rdx,rbx
  41d707:	mov    r8,rax
  41d70a:	mov    rcx,rsi
  41d70d:	add    rsp,0x28
  41d711:	pop    rbx
  41d712:	pop    rsi
  41d713:	jmp    0x41d660
  41d718:	nop    DWORD PTR [rax+rax*1+0x0]
  41d720:	push   rsi
  41d721:	push   rbx
  41d722:	sub    rsp,0x28
  41d726:	mov    rsi,rdx
  41d729:	call   0x41d6f0
  41d72e:	test   rax,rax
  41d731:	mov    rbx,rax
  41d734:	je     0x41d73e
  41d736:	mov    rcx,rsi
  41d739:	call   0x42d6f8
  41d73e:	mov    rax,rbx
  41d741:	add    rsp,0x28
  41d745:	pop    rbx
  41d746:	pop    rsi
  41d747:	ret    
  41d748:	nop    DWORD PTR [rax+rax*1+0x0]
  41d750:	mov    rax,QWORD PTR [rdx]
  41d753:	mov    r8,QWORD PTR [rax]
  41d756:	lea    rdx,[rax+0x8]
  41d75a:	jmp    0x41d660
  41d75f:	nop
  41d760:	mov    r8,QWORD PTR [rcx]
  41d763:	mov    rax,rcx
  41d766:	lea    rcx,[rip+0x19ba3]        # 0x437310
  41d76d:	cmp    r8,rcx
  41d770:	je     0x41d780
  41d772:	cmp    QWORD PTR [r8],rdx
  41d775:	jb     0x41d780
  41d777:	mov    QWORD PTR [r8],rdx
  41d77a:	mov    BYTE PTR [r8+rdx*1+0x8],0x0
  41d780:	repz ret 
  41d782:	nop    DWORD PTR [rax+0x0]
  41d786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d790:	push   rdi
  41d791:	push   rsi
  41d792:	push   rbx
  41d793:	sub    rsp,0x20
  41d797:	mov    rbx,rcx
  41d79a:	lea    rcx,[rdx+0x9]
  41d79e:	mov    rdi,rdx
  41d7a1:	call   0x42d6b8
  41d7a6:	test   rax,rax
  41d7a9:	mov    rsi,rax
  41d7ac:	je     0x41d7e0
  41d7ae:	mov    rcx,QWORD PTR [rbx]
  41d7b1:	lea    rax,[rip+0x19b58]        # 0x437310
  41d7b8:	cmp    rcx,rax
  41d7bb:	je     0x41d7c2
  41d7bd:	call   0x42d6f8
  41d7c2:	mov    rax,rbx
  41d7c5:	mov    BYTE PTR [rsi+0x8],0x0
  41d7c9:	mov    QWORD PTR [rsi],rdi
  41d7cc:	mov    QWORD PTR [rbx],rsi
  41d7cf:	add    rsp,0x20
  41d7d3:	pop    rbx
  41d7d4:	pop    rsi
  41d7d5:	pop    rdi
  41d7d6:	ret    
  41d7d7:	nop    WORD PTR [rax+rax*1+0x0]
  41d7e0:	xor    eax,eax
  41d7e2:	add    rsp,0x20
  41d7e6:	pop    rbx
  41d7e7:	pop    rsi
  41d7e8:	pop    rdi
  41d7e9:	ret    
  41d7ea:	nop
  41d7eb:	nop
  41d7ec:	nop
  41d7ed:	nop
  41d7ee:	nop
  41d7ef:	nop
  41d7f0:	push   rbx
  41d7f1:	sub    rsp,0x20
  41d7f5:	mov    rbx,rdx
  41d7f8:	call   QWORD PTR [rip+0x25286]        # 0x442a84
  41d7fe:	test   rax,rax
  41d801:	je     0x41d830
  41d803:	mov    rdx,QWORD PTR [rax]
  41d806:	mov    QWORD PTR [rbx],rdx
  41d809:	mov    rdx,QWORD PTR [rax+0x8]
  41d80d:	mov    QWORD PTR [rbx+0x8],rdx
  41d811:	mov    rdx,QWORD PTR [rax+0x10]
  41d815:	mov    QWORD PTR [rbx+0x10],rdx
  41d819:	mov    rdx,QWORD PTR [rax+0x18]
  41d81d:	mov    QWORD PTR [rbx+0x18],rdx
  41d821:	mov    eax,DWORD PTR [rax+0x20]
  41d824:	mov    DWORD PTR [rbx+0x20],eax
  41d827:	mov    rax,rbx
  41d82a:	add    rsp,0x20
  41d82e:	pop    rbx
  41d82f:	ret    
  41d830:	xor    ebx,ebx
  41d832:	mov    rax,rbx
  41d835:	add    rsp,0x20
  41d839:	pop    rbx
  41d83a:	ret    
  41d83b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d840:	push   rsi
  41d841:	push   rbx
  41d842:	sub    rsp,0x58
  41d846:	mov    rsi,rcx
  41d849:	movsxd rbx,edx
  41d84c:	lea    rcx,[rsp+0x40]
  41d851:	call   QWORD PTR [rip+0x250cd]        # 0x442924
  41d857:	movzx  eax,WORD PTR [rsp+0x4e]
  41d85c:	movzx  r9d,WORD PTR [rsp+0x48]
  41d862:	lea    edx,[rbx-0x1]
  41d865:	lea    r8,[rip+0x19ab4]        # 0x437320
  41d86c:	mov    rcx,rsi
  41d86f:	movsxd rdx,edx
  41d872:	mov    DWORD PTR [rsp+0x30],eax
  41d876:	movzx  eax,WORD PTR [rsp+0x4c]
  41d87b:	mov    DWORD PTR [rsp+0x28],eax
  41d87f:	movzx  eax,WORD PTR [rsp+0x4a]
  41d884:	mov    DWORD PTR [rsp+0x20],eax
  41d888:	call   QWORD PTR [rip+0x2520e]        # 0x442a9c
  41d88e:	mov    rax,rsi
  41d891:	mov    BYTE PTR [rsi+rbx*1-0x1],0x0
  41d896:	add    rsp,0x58
  41d89a:	pop    rbx
  41d89b:	pop    rsi
  41d89c:	ret    
  41d89d:	nop    DWORD PTR [rax]
  41d8a0:	push   rdi
  41d8a1:	push   rbx
  41d8a2:	sub    rsp,0x78
  41d8a6:	xor    eax,eax
  41d8a8:	lea    r8,[rsp+0x40]
  41d8ad:	mov    rdx,rcx
  41d8b0:	mov    ecx,0x6
  41d8b5:	mov    QWORD PTR [rsp+0x38],0x0
  41d8be:	lea    r9,[rsp+0x38]
  41d8c3:	mov    rdi,r8
  41d8c6:	rep stos QWORD PTR es:[rdi],rax
  41d8c9:	mov    DWORD PTR [rsp+0x44],0x2
  41d8d1:	mov    DWORD PTR [rsp+0x48],0x1
  41d8d9:	mov    DWORD PTR [rsp+0x40],0x1
  41d8e1:	call   QWORD PTR [rip+0x25445]        # 0x442d2c
  41d8e7:	test   eax,eax
  41d8e9:	jne    0x41d935
  41d8eb:	mov    rcx,QWORD PTR [rsp+0x38]
  41d8f0:	cmp    DWORD PTR [rcx+0x4],0x2
  41d8f4:	jne    0x41d920
  41d8f6:	mov    rdx,QWORD PTR [rcx+0x20]
  41d8fa:	test   rdx,rdx
  41d8fd:	je     0x41d920
  41d8ff:	movzx  ecx,WORD PTR [rdx+0x2]
  41d903:	call   QWORD PTR [rip+0x25473]        # 0x442d7c
  41d909:	mov    rcx,QWORD PTR [rsp+0x38]
  41d90e:	movzx  ebx,ax
  41d911:	call   QWORD PTR [rip+0x2540d]        # 0x442d24
  41d917:	mov    eax,ebx
  41d919:	add    rsp,0x78
  41d91d:	pop    rbx
  41d91e:	pop    rdi
  41d91f:	ret    
  41d920:	mov    DWORD PTR [rsp+0x2c],eax
  41d924:	call   QWORD PTR [rip+0x253fa]        # 0x442d24
  41d92a:	mov    eax,DWORD PTR [rsp+0x2c]
  41d92e:	add    rsp,0x78
  41d932:	pop    rbx
  41d933:	pop    rdi
  41d934:	ret    
  41d935:	xor    eax,eax
  41d937:	add    rsp,0x78
  41d93b:	pop    rbx
  41d93c:	pop    rdi
  41d93d:	ret    
  41d93e:	xchg   ax,ax
  41d940:	push   rsi
  41d941:	push   rbx
  41d942:	sub    rsp,0x148
  41d949:	mov    QWORD PTR [rsp+0x28],0x0
  41d952:	lea    rcx,[rsp+0x28]
  41d957:	call   QWORD PTR [rip+0x2534f]        # 0x442cac
  41d95d:	test   eax,eax
  41d95f:	js     0x41d9d0
  41d961:	xor    ecx,ecx
  41d963:	lea    r8,[rsp+0x20]
  41d968:	mov    edx,0x1a
  41d96d:	xor    ebx,ebx
  41d96f:	call   QWORD PTR [rip+0x25347]        # 0x442cbc
  41d975:	test   eax,eax
  41d977:	js     0x41d9a0
  41d979:	lea    rsi,[rsp+0x30]
  41d97e:	mov    rcx,QWORD PTR [rsp+0x20]
  41d983:	mov    rdx,rsi
  41d986:	call   QWORD PTR [rip+0x25328]        # 0x442cb4
  41d98c:	test   eax,eax
  41d98e:	jne    0x41d9c0
  41d990:	mov    rcx,QWORD PTR [rsp+0x28]
  41d995:	mov    rdx,QWORD PTR [rsp+0x20]
  41d99a:	mov    rax,QWORD PTR [rcx]
  41d99d:	call   QWORD PTR [rax+0x28]
  41d9a0:	mov    rcx,QWORD PTR [rsp+0x28]
  41d9a5:	mov    rax,QWORD PTR [rcx]
  41d9a8:	call   QWORD PTR [rax+0x10]
  41d9ab:	mov    rax,rbx
  41d9ae:	add    rsp,0x148
  41d9b5:	pop    rbx
  41d9b6:	pop    rsi
  41d9b7:	ret    
  41d9b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d9c0:	mov    rcx,rsi
  41d9c3:	call   QWORD PTR [rip+0x250e3]        # 0x442aac
  41d9c9:	mov    rbx,rax
  41d9cc:	jmp    0x41d990
  41d9ce:	xchg   ax,ax
  41d9d0:	xor    ebx,ebx
  41d9d2:	jmp    0x41d9ab
  41d9d4:	nop
  41d9d5:	nop
  41d9d6:	nop
  41d9d7:	nop
  41d9d8:	nop
  41d9d9:	nop
  41d9da:	nop
  41d9db:	nop
  41d9dc:	nop
  41d9dd:	nop
  41d9de:	nop
  41d9df:	nop
  41d9e0:	push   rdi
  41d9e1:	push   rsi
  41d9e2:	push   rbx
  41d9e3:	sub    rsp,0x20
  41d9e7:	mov    rax,QWORD PTR [rip+0x1e442]        # 0x43be30
  41d9ee:	mov    rbx,rcx
  41d9f1:	mov    rsi,rdx
  41d9f4:	mov    rdi,r8
  41d9f7:	mov    eax,DWORD PTR [rax]
  41d9f9:	test   eax,eax
  41d9fb:	jne    0x41da15
  41d9fd:	mov    r8,rdi
  41da00:	mov    rdx,rsi
  41da03:	mov    rcx,rbx
  41da06:	call   0x413d90
  41da0b:	cdqe   
  41da0d:	add    rsp,0x20
  41da11:	pop    rbx
  41da12:	pop    rsi
  41da13:	pop    rdi
  41da14:	ret    
  41da15:	lea    r8,[rip+0x19924]        # 0x437340
  41da1c:	lea    rcx,[rip+0x1992f]        # 0x437352
  41da23:	mov    edx,0x987
  41da28:	call   0x40d350
  41da2d:	jmp    0x41d9fd
  41da2f:	nop
  41da30:	push   rdi
  41da31:	push   rsi
  41da32:	push   rbx
  41da33:	sub    rsp,0x20
  41da37:	mov    rax,QWORD PTR [rip+0x1e3f2]        # 0x43be30
  41da3e:	mov    rbx,rcx
  41da41:	mov    rsi,rdx
  41da44:	mov    rdi,r8
  41da47:	mov    eax,DWORD PTR [rax]
  41da49:	test   eax,eax
  41da4b:	jne    0x41da65
  41da4d:	mov    r8d,edi
  41da50:	mov    rdx,rsi
  41da53:	mov    rcx,rbx
  41da56:	call   0x413740
  41da5b:	cdqe   
  41da5d:	add    rsp,0x20
  41da61:	pop    rbx
  41da62:	pop    rsi
  41da63:	pop    rdi
  41da64:	ret    
  41da65:	lea    r8,[rip+0x198ec]        # 0x437358
  41da6c:	lea    rcx,[rip+0x198df]        # 0x437352
  41da73:	mov    edx,0x817
  41da78:	call   0x40d350
  41da7d:	jmp    0x41da4d
  41da7f:	nop
  41da80:	push   rdi
  41da81:	push   rsi
  41da82:	push   rbx
  41da83:	sub    rsp,0x20
  41da87:	mov    rax,QWORD PTR [rip+0x1e3a2]        # 0x43be30
  41da8e:	mov    rsi,rcx
  41da91:	mov    rdi,rdx
  41da94:	mov    rbx,r8
  41da97:	mov    eax,DWORD PTR [rax]
  41da99:	test   eax,eax
  41da9b:	jne    0x41dac0
  41da9d:	mov    r8,rbx
  41daa0:	mov    rdx,rdi
  41daa3:	mov    rcx,rsi
  41daa6:	call   0x423f10
  41daab:	mov    rax,rbx
  41daae:	add    rsp,0x20
  41dab2:	pop    rbx
  41dab3:	pop    rsi
  41dab4:	pop    rdi
  41dab5:	ret    
  41dab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dac0:	lea    r8,[rip+0x198a3]        # 0x43736a
  41dac7:	lea    rcx,[rip+0x19884]        # 0x437352
  41dace:	mov    edx,0x747
  41dad3:	call   0x40d350
  41dad8:	jmp    0x41da9d
  41dada:	nop    WORD PTR [rax+rax*1+0x0]
  41dae0:	push   rdi
  41dae1:	push   rsi
  41dae2:	push   rbx
  41dae3:	sub    rsp,0x20
  41dae7:	mov    rax,QWORD PTR [rip+0x1e342]        # 0x43be30
  41daee:	mov    rsi,rcx
  41daf1:	mov    rdi,rdx
  41daf4:	mov    rbx,r8
  41daf7:	mov    eax,DWORD PTR [rax]
  41daf9:	test   eax,eax
  41dafb:	jne    0x41db9d
  41db01:	cmp    DWORD PTR [rsi+0xe8],0x8
  41db08:	jbe    0x41db1e
  41db0a:	jmp    0x41db93
  41db0f:	nop
  41db10:	jne    0x41db64
  41db12:	mov    rcx,rsi
  41db15:	call   0x415130
  41db1a:	test   eax,eax
  41db1c:	js     0x41db55
  41db1e:	mov    r9d,DWORD PTR [rsi+0xe4]
  41db25:	mov    eax,DWORD PTR [rsi+0xec]
  41db2b:	sub    eax,r9d
  41db2e:	jns    0x41db10
  41db30:	lea    rdx,[rip+0x1981b]        # 0x437352
  41db37:	lea    rcx,[rip+0x1985c]        # 0x43739a
  41db3e:	mov    r8d,0x62
  41db44:	call   0x42d350
  41db49:	mov    rcx,rsi
  41db4c:	call   0x415130
  41db51:	test   eax,eax
  41db53:	jns    0x41db1e
  41db55:	mov    rax,0xffffffffffffffff
  41db5c:	add    rsp,0x20
  41db60:	pop    rbx
  41db61:	pop    rsi
  41db62:	pop    rdi
  41db63:	ret    
  41db64:	cdqe   
  41db66:	mov    rdx,r9
  41db69:	mov    rcx,rdi
  41db6c:	cmp    rax,rbx
  41db6f:	cmovbe rbx,rax
  41db73:	add    rdx,QWORD PTR [rsi+0xd0]
  41db7a:	mov    r8,rbx
  41db7d:	call   0x42d6a8
  41db82:	add    DWORD PTR [rsi+0xe4],ebx
  41db88:	mov    rax,rbx
  41db8b:	add    rsp,0x20
  41db8f:	pop    rbx
  41db90:	pop    rsi
  41db91:	pop    rdi
  41db92:	ret    
  41db93:	mov    rcx,rsi
  41db96:	call   0x424270
  41db9b:	jmp    0x41db1e
  41db9d:	lea    r8,[rip+0x197de]        # 0x437382
  41dba4:	lea    rcx,[rip+0x197a7]        # 0x437352
  41dbab:	mov    edx,0x567
  41dbb0:	call   0x40d350
  41dbb5:	jmp    0x41db01
  41dbba:	nop    WORD PTR [rax+rax*1+0x0]
  41dbc0:	push   rdi
  41dbc1:	push   rsi
  41dbc2:	push   rbx
  41dbc3:	sub    rsp,0x30
  41dbc7:	mov    rbx,rcx
  41dbca:	call   0x42ae38
  41dbcf:	cmp    QWORD PTR [rax+0x168],0x0
  41dbd7:	mov    rsi,rax
  41dbda:	je     0x41dc0a
  41dbdc:	lea    rdx,[rsp+0x20]
  41dbe1:	mov    rcx,rbx
  41dbe4:	call   0x42aec8
  41dbe9:	test   eax,eax
  41dbeb:	js     0x41dcc2
  41dbf1:	mov    edi,DWORD PTR [rsp+0x20]
  41dbf5:	test   edi,edi
  41dbf7:	je     0x41dc20
  41dbf9:	mov    rax,QWORD PTR [rip+0x1e230]        # 0x43be30
  41dc00:	mov    ecx,DWORD PTR [rax]
  41dc02:	test   ecx,ecx
  41dc04:	jne    0x41dd01
  41dc0a:	mov    eax,0xffffffd5
  41dc0f:	add    rsp,0x30
  41dc13:	pop    rbx
  41dc14:	pop    rsi
  41dc15:	pop    rdi
  41dc16:	ret    
  41dc17:	nop    WORD PTR [rax+rax*1+0x0]
  41dc20:	mov    rdx,QWORD PTR [rsi+0x168]
  41dc27:	xor    eax,eax
  41dc29:	test   BYTE PTR [rdx+0xf5],0x4
  41dc30:	je     0x41dc0f
  41dc32:	lea    rdx,[rsp+0x24]
  41dc37:	mov    rcx,rbx
  41dc3a:	call   0x42aef0
  41dc3f:	test   rax,rax
  41dc42:	mov    rbx,rax
  41dc45:	je     0x41dd26
  41dc4b:	lea    rcx,[rsp+0x28]
  41dc50:	call   0x42ae00
  41dc55:	mov    rcx,QWORD PTR [rsp+0x28]
  41dc5a:	xor    r8d,r8d
  41dc5d:	mov    rdx,rbx
  41dc60:	call   0x42ae08
  41dc65:	mov    rax,QWORD PTR [rsi+0x168]
  41dc6c:	mov    rcx,QWORD PTR [rsp+0x28]
  41dc71:	mov    rdx,QWORD PTR [rax+0x38]
  41dc75:	add    rdx,0x8
  41dc79:	call   0x42ae18
  41dc7e:	mov    rcx,QWORD PTR [rsp+0x28]
  41dc83:	mov    ebx,eax
  41dc85:	call   0x42ae10
  41dc8a:	test   ebx,ebx
  41dc8c:	mov    eax,edi
  41dc8e:	jne    0x41dc0f
  41dc94:	mov    rax,QWORD PTR [rip+0x1e195]        # 0x43be30
  41dc9b:	mov    eax,DWORD PTR [rax]
  41dc9d:	test   eax,eax
  41dc9f:	je     0x41dc0a
  41dca5:	lea    r8,[rip+0x19764]        # 0x437410
  41dcac:	lea    rcx,[rip+0x1969f]        # 0x437352
  41dcb3:	mov    edx,0x1942
  41dcb8:	call   0x40d350
  41dcbd:	jmp    0x41dc0a
  41dcc2:	mov    rdx,QWORD PTR [rip+0x1e167]        # 0x43be30
  41dcc9:	mov    r8d,DWORD PTR [rdx]
  41dccc:	test   r8d,r8d
  41dccf:	je     0x41dc0a
  41dcd5:	mov    ecx,eax
  41dcd7:	call   0x42ae40
  41dcdc:	lea    r8,[rip+0x196c5]        # 0x4373a8
  41dce3:	lea    rcx,[rip+0x19668]        # 0x437352
  41dcea:	mov    r9,rax
  41dced:	mov    edx,0x1582
  41dcf2:	call   0x40d350
  41dcf7:	mov    eax,0xffffffd5
  41dcfc:	jmp    0x41dc0f
  41dd01:	lea    r8,[rip+0x196c1]        # 0x4373c9
  41dd08:	lea    rcx,[rip+0x19643]        # 0x437352
  41dd0f:	mov    r9d,edi
  41dd12:	mov    edx,0x1802
  41dd17:	call   0x40d350
  41dd1c:	mov    eax,0xffffffd5
  41dd21:	jmp    0x41dc0f
  41dd26:	mov    rax,QWORD PTR [rip+0x1e103]        # 0x43be30
  41dd2d:	mov    edx,DWORD PTR [rax]
  41dd2f:	test   edx,edx
  41dd31:	je     0x41dc0a
  41dd37:	lea    r8,[rip+0x196aa]        # 0x4373e8
  41dd3e:	lea    rcx,[rip+0x1960d]        # 0x437352
  41dd45:	mov    edx,0x18c2
  41dd4a:	call   0x40d350
  41dd4f:	jmp    0x41dc0a
  41dd54:	xchg   ax,ax
  41dd56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dd60:	sub    rsp,0x38
  41dd64:	mov    rax,QWORD PTR [rip+0x1e0c5]        # 0x43be30
  41dd6b:	mov    eax,DWORD PTR [rax]
  41dd6d:	test   eax,eax
  41dd6f:	jne    0x41dd80
  41dd71:	add    rsp,0x38
  41dd75:	ret    
  41dd76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dd80:	mov    r9d,ecx
  41dd83:	lea    r8,[rip+0x196ab]        # 0x437435
  41dd8a:	lea    rcx,[rip+0x195c1]        # 0x437352
  41dd91:	mov    QWORD PTR [rsp+0x20],rdx
  41dd96:	mov    edx,0xab5
  41dd9b:	call   0x40d350
  41dda0:	nop
  41dda1:	add    rsp,0x38
  41dda5:	ret    
  41dda6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ddb0:	push   rbp
  41ddb1:	push   rdi
  41ddb2:	push   rsi
  41ddb3:	push   rbx
  41ddb4:	sub    rsp,0x48
  41ddb8:	mov    r10d,DWORD PTR [rip+0x23799]        # 0x441558
  41ddbf:	mov    rdi,rcx
  41ddc2:	mov    QWORD PTR [rsp+0x38],0x0
  41ddcb:	mov    QWORD PTR [rsp+0x30],0x0
  41ddd4:	test   r10d,r10d
  41ddd7:	je     0x41e000
  41dddd:	mov    rsi,QWORD PTR [rip+0x1e04c]        # 0x43be30
  41dde4:	mov    ecx,DWORD PTR [rsi]
  41dde6:	test   ecx,ecx
  41dde8:	je     0x41ddf7
  41ddea:	cmp    DWORD PTR [rip+0x23767],0x1        # 0x441558
  41ddf1:	jle    0x41e061
  41ddf7:	lea    rcx,[rsp+0x38]
  41ddfc:	call   0x42af00
  41de01:	test   eax,eax
  41de03:	mov    ebx,eax
  41de05:	je     0x41de50
  41de07:	lea    rbp,[rip+0x1964f]        # 0x43745d
  41de0e:	mov    rcx,QWORD PTR [rsp+0x30]
  41de13:	test   rcx,rcx
  41de16:	je     0x41de1d
  41de18:	call   0x42aeb8
  41de1d:	mov    rcx,QWORD PTR [rsp+0x38]
  41de22:	test   rcx,rcx
  41de25:	je     0x41de2c
  41de27:	call   0x42aef8
  41de2c:	mov    eax,DWORD PTR [rsi]
  41de2e:	mov    edi,0xffffffff
  41de33:	test   eax,eax
  41de35:	jne    0x41e090
  41de3b:	mov    eax,edi
  41de3d:	add    rsp,0x48
  41de41:	pop    rbx
  41de42:	pop    rsi
  41de43:	pop    rdi
  41de44:	pop    rbp
  41de45:	ret    
  41de46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41de50:	mov    rax,QWORD PTR [rdi+0x168]
  41de57:	mov    rcx,QWORD PTR [rax+0x58]
  41de5b:	cmp    QWORD PTR [rcx],0x0
  41de5f:	je     0x41dee7
  41de65:	add    rcx,0x8
  41de69:	lea    rdx,[rip+0x19657]        # 0x4374c7
  41de70:	call   QWORD PTR [rip+0x24c3e]        # 0x442ab4
  41de76:	test   eax,eax
  41de78:	je     0x41e050
  41de7e:	mov    rax,QWORD PTR [rdi+0x168]
  41de85:	mov    rcx,QWORD PTR [rsp+0x38]
  41de8a:	mov    r8d,0x1
  41de90:	mov    rdx,QWORD PTR [rax+0x58]
  41de94:	add    rdx,0x8
  41de98:	call   0x42aed0
  41de9d:	mov    ebx,eax
  41de9f:	test   ebx,ebx
  41dea1:	jle    0x41e0e0
  41dea7:	mov    rax,QWORD PTR [rdi+0x168]
  41deae:	mov    rdx,QWORD PTR [rax+0x60]
  41deb2:	cmp    QWORD PTR [rdx],0x0
  41deb6:	je     0x41ded6
  41deb8:	mov    rcx,QWORD PTR [rsp+0x38]
  41debd:	add    rdx,0x8
  41dec1:	mov    r8d,0x1
  41dec7:	call   0x42aee0
  41decc:	test   eax,eax
  41dece:	mov    ebx,eax
  41ded0:	jle    0x41e110
  41ded6:	mov    rcx,QWORD PTR [rsp+0x38]
  41dedb:	lea    rdx,[rip+0xfffffffffffffcde]        # 0x41dbc0
  41dee2:	call   0x42aee8
  41dee7:	lea    rcx,[rsp+0x30]
  41deec:	mov    edx,0x2
  41def1:	lea    rbp,[rip+0x1959d]        # 0x437495
  41def8:	call   0x42ae88
  41defd:	test   eax,eax
  41deff:	mov    ebx,eax
  41df01:	jne    0x41de0e
  41df07:	mov    rcx,QWORD PTR [rsp+0x30]
  41df0c:	mov    rdx,rdi
  41df0f:	call   0x42ae30
  41df14:	mov    rcx,QWORD PTR [rsp+0x30]
  41df19:	lea    rdx,[rip+0xfffffffffffffbc0]        # 0x41dae0
  41df20:	call   0x42ae28
  41df25:	mov    rcx,QWORD PTR [rsp+0x30]
  41df2a:	lea    rdx,[rip+0xfffffffffffffb4f]        # 0x41da80
  41df31:	call   0x42ae20
  41df36:	mov    rcx,QWORD PTR [rsp+0x30]
  41df3b:	call   0x42ae48
  41df40:	mov    rcx,QWORD PTR [rsp+0x30]
  41df45:	lea    rdx,[rip+0x19582]        # 0x4374ce
  41df4c:	xor    r8d,r8d
  41df4f:	call   0x42ae78
  41df54:	test   eax,eax
  41df56:	mov    ebx,eax
  41df58:	jne    0x41de0e
  41df5e:	mov    rcx,QWORD PTR [rsp+0x30]
  41df63:	lea    rbp,[rip+0x19540]        # 0x4374aa
  41df6a:	call   0x42ae68
  41df6f:	mov    r8,QWORD PTR [rsp+0x38]
  41df74:	mov    rcx,QWORD PTR [rsp+0x30]
  41df79:	mov    edx,0x1
  41df7e:	call   0x42aec0
  41df83:	test   eax,eax
  41df85:	mov    ebx,eax
  41df87:	jne    0x41de0e
  41df8d:	mov    rcx,QWORD PTR [rsp+0x30]
  41df92:	call   0x42ae90
  41df97:	test   eax,eax
  41df99:	mov    ebx,eax
  41df9b:	jne    0x41e11c
  41dfa1:	mov    edx,DWORD PTR [rsi]
  41dfa3:	test   edx,edx
  41dfa5:	jne    0x41e128
  41dfab:	mov    rcx,QWORD PTR [rsp+0x30]
  41dfb0:	mov    rdx,rdi
  41dfb3:	call   0x42ae30
  41dfb8:	mov    rcx,QWORD PTR [rsp+0x30]
  41dfbd:	lea    rdx,[rip+0xfffffffffffffa6c]        # 0x41da30
  41dfc4:	call   0x42ae28
  41dfc9:	mov    rcx,QWORD PTR [rsp+0x30]
  41dfce:	lea    rdx,[rip+0xfffffffffffffa0b]        # 0x41d9e0
  41dfd5:	call   0x42ae20
  41dfda:	mov    rax,QWORD PTR [rsp+0x30]
  41dfdf:	mov    QWORD PTR [rdi+0xb0],rax
  41dfe6:	mov    rax,QWORD PTR [rsp+0x38]
  41dfeb:	mov    QWORD PTR [rdi+0xb8],rax
  41dff2:	xor    edi,edi
  41dff4:	jmp    0x41de3b
  41dff9:	nop    DWORD PTR [rax+0x0]
  41e000:	mov    r9d,DWORD PTR [rip+0x23521]        # 0x441528
  41e007:	test   r9d,r9d
  41e00a:	jne    0x41e040
  41e00c:	lea    rcx,[rip+0x2350d]        # 0x441520
  41e013:	call   0x424920
  41e018:	mov    r8d,DWORD PTR [rip+0x23539]        # 0x441558
  41e01f:	test   r8d,r8d
  41e022:	je     0x41e0c0
  41e028:	lea    rcx,[rip+0x23501]        # 0x441530
  41e02f:	call   QWORD PTR [rip+0x2492f]        # 0x442964
  41e035:	jmp    0x41dddd
  41e03a:	nop    WORD PTR [rax+rax*1+0x0]
  41e040:	lea    rcx,[rip+0x234e9]        # 0x441530
  41e047:	call   QWORD PTR [rip+0x248a7]        # 0x4428f4
  41e04d:	jmp    0x41e018
  41e04f:	nop
  41e050:	mov    rcx,QWORD PTR [rsp+0x38]
  41e055:	call   0x42aed8
  41e05a:	mov    ebx,eax
  41e05c:	jmp    0x41de9f
  41e061:	mov    ecx,0xb
  41e066:	call   0x42ae98
  41e06b:	lea    rcx,[rip+0xfffffffffffffcee]        # 0x41dd60
  41e072:	call   0x42aea0
  41e077:	mov    DWORD PTR [rip+0x234d7],0x2        # 0x441558
  41e081:	jmp    0x41ddf7
  41e086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e090:	mov    ecx,ebx
  41e092:	call   0x42ae40
  41e097:	lea    r8,[rip+0x19463]        # 0x437501
  41e09e:	lea    rcx,[rip+0x192ad]        # 0x437352
  41e0a5:	mov    QWORD PTR [rsp+0x20],rax
  41e0aa:	mov    r9,rbp
  41e0ad:	mov    edx,0x2122
  41e0b2:	call   0x40d350
  41e0b7:	jmp    0x41de3b
  41e0bc:	nop    DWORD PTR [rax+0x0]
  41e0c0:	call   0x42aea8
  41e0c5:	test   eax,eax
  41e0c7:	mov    ebx,eax
  41e0c9:	jne    0x41e0f0
  41e0cb:	mov    DWORD PTR [rip+0x23483],0x1        # 0x441558
  41e0d5:	jmp    0x41e028
  41e0da:	nop    WORD PTR [rax+rax*1+0x0]
  41e0e0:	lea    rbp,[rip+0x1938d]        # 0x437474
  41e0e7:	jmp    0x41de0e
  41e0ec:	nop    DWORD PTR [rax+0x0]
  41e0f0:	lea    rcx,[rip+0x23439]        # 0x441530
  41e0f7:	lea    rbp,[rip+0x1934e]        # 0x43744c
  41e0fe:	call   QWORD PTR [rip+0x24860]        # 0x442964
  41e104:	mov    rsi,QWORD PTR [rip+0x1dd25]        # 0x43be30
  41e10b:	jmp    0x41de0e
  41e110:	lea    rbp,[rip+0x1936d]        # 0x437484
  41e117:	jmp    0x41de0e
  41e11c:	lea    rbp,[rip+0x1939a]        # 0x4374bd
  41e123:	jmp    0x41de0e
  41e128:	lea    r8,[rip+0x193bb]        # 0x4374ea
  41e12f:	lea    rcx,[rip+0x1921c]        # 0x437352
  41e136:	mov    edx,0x2025
  41e13b:	call   0x40d350
  41e140:	jmp    0x41dfab
  41e145:	nop
  41e146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e150:	push   rbx
  41e151:	sub    rsp,0x20
  41e155:	mov    rbx,rcx
  41e158:	mov    rcx,QWORD PTR [rcx+0xb0]
  41e15f:	test   rcx,rcx
  41e162:	je     0x41e174
  41e164:	call   0x42aeb8
  41e169:	mov    QWORD PTR [rbx+0xb0],0x0
  41e174:	mov    rcx,QWORD PTR [rbx+0xb8]
  41e17b:	test   rcx,rcx
  41e17e:	je     0x41e190
  41e180:	call   0x42aef8
  41e185:	mov    QWORD PTR [rbx+0xb8],0x0
  41e190:	add    rsp,0x20
  41e194:	pop    rbx
  41e195:	ret    
  41e196:	nop
  41e197:	nop
  41e198:	nop
  41e199:	nop
  41e19a:	nop
  41e19b:	nop
  41e19c:	nop
  41e19d:	nop
  41e19e:	nop
  41e19f:	nop
  41e1a0:	push   rdi
  41e1a1:	push   rsi
  41e1a2:	push   rbx
  41e1a3:	sub    rsp,0x20
  41e1a7:	mov    rsi,QWORD PTR [rcx+0x110]
  41e1ae:	test   rsi,rsi
  41e1b1:	je     0x41e1fa
  41e1b3:	xor    ebx,ebx
  41e1b5:	cmp    WORD PTR [rsi+0x8],0x0
  41e1ba:	mov    rdi,rcx
  41e1bd:	jne    0x41e1cc
  41e1bf:	jmp    0x41e1f0
  41e1c1:	movzx  eax,WORD PTR [rsi+0x8]
  41e1c5:	add    ebx,0x1
  41e1c8:	cmp    eax,ebx
  41e1ca:	jbe    0x41e1f0
  41e1cc:	mov    rdx,QWORD PTR [rsi]
  41e1cf:	mov    eax,ebx
  41e1d1:	mov    rcx,rdi
  41e1d4:	mov    rdx,QWORD PTR [rdx+rax*8]
  41e1d8:	mov    rax,QWORD PTR [rdx]
  41e1db:	call   QWORD PTR [rax+0x8]
  41e1de:	test   eax,eax
  41e1e0:	jns    0x41e1c1
  41e1e2:	add    rsp,0x20
  41e1e6:	pop    rbx
  41e1e7:	pop    rsi
  41e1e8:	pop    rdi
  41e1e9:	ret    
  41e1ea:	nop    WORD PTR [rax+rax*1+0x0]
  41e1f0:	xor    eax,eax
  41e1f2:	add    rsp,0x20
  41e1f6:	pop    rbx
  41e1f7:	pop    rsi
  41e1f8:	pop    rdi
  41e1f9:	ret    
  41e1fa:	mov    eax,0xffffffff
  41e1ff:	jmp    0x41e1e2
  41e201:	nop    DWORD PTR [rax+rax*1+0x0]
  41e206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e210:	sub    ecx,0x9
  41e213:	cmp    ecx,0x69
  41e216:	ja     0x41e2c0
  41e21c:	lea    rax,[rip+0x19321]        # 0x437544
  41e223:	movsxd rdx,DWORD PTR [rax+rcx*4]
  41e227:	add    rax,rdx
  41e22a:	jmp    rax
  41e22c:	nop    DWORD PTR [rax+0x0]
  41e230:	lea    rax,[rip+0x192de]        # 0x437515
  41e237:	ret    
  41e238:	nop    DWORD PTR [rax+rax*1+0x0]
  41e240:	lea    rax,[rip+0x192f6]        # 0x43753d
  41e247:	ret    
  41e248:	nop    DWORD PTR [rax+rax*1+0x0]
  41e250:	lea    rax,[rip+0x192d1]        # 0x437528
  41e257:	ret    
  41e258:	nop    DWORD PTR [rax+rax*1+0x0]
  41e260:	lea    rax,[rip+0x192a9]        # 0x437510
  41e267:	ret    
  41e268:	nop    DWORD PTR [rax+rax*1+0x0]
  41e270:	lea    rax,[rip+0x192a4]        # 0x43751b
  41e277:	ret    
  41e278:	nop    DWORD PTR [rax+rax*1+0x0]
  41e280:	lea    rax,[rip+0x19299]        # 0x437520
  41e287:	ret    
  41e288:	nop    DWORD PTR [rax+rax*1+0x0]
  41e290:	lea    rax,[rip+0x1928d]        # 0x437524
  41e297:	ret    
  41e298:	nop    DWORD PTR [rax+rax*1+0x0]
  41e2a0:	lea    rax,[rip+0x19285]        # 0x43752c
  41e2a7:	ret    
  41e2a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e2b0:	lea    rax,[rip+0x19282]        # 0x437539
  41e2b7:	ret    
  41e2b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e2c0:	lea    rax,[rip+0x1924d]        # 0x437514
  41e2c7:	ret    
  41e2c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e2d0:	sub    ecx,0x20
  41e2d3:	cmp    cl,0xdf
  41e2d6:	ja     0x41e560
  41e2dc:	lea    rax,[rip+0x1957d]        # 0x437860
  41e2e3:	movzx  ecx,cl
  41e2e6:	movsxd rdx,DWORD PTR [rax+rcx*4]
  41e2ea:	add    rax,rdx
  41e2ed:	jmp    rax
  41e2ef:	nop
  41e2f0:	lea    rax,[rip+0x193f5]        # 0x4376ec
  41e2f7:	ret    
  41e2f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e300:	lea    rax,[rip+0x1954a]        # 0x437851
  41e307:	ret    
  41e308:	nop    DWORD PTR [rax+rax*1+0x0]
  41e310:	lea    rax,[rip+0x19531]        # 0x437848
  41e317:	ret    
  41e318:	nop    DWORD PTR [rax+rax*1+0x0]
  41e320:	lea    rax,[rip+0x1951c]        # 0x437843
  41e327:	ret    
  41e328:	nop    DWORD PTR [rax+rax*1+0x0]
  41e330:	lea    rax,[rip+0x19505]        # 0x43783c
  41e337:	ret    
  41e338:	nop    DWORD PTR [rax+rax*1+0x0]
  41e340:	lea    rax,[rip+0x194f0]        # 0x437837
  41e347:	ret    
  41e348:	nop    DWORD PTR [rax+rax*1+0x0]
  41e350:	lea    rax,[rip+0x194d2]        # 0x437829
  41e357:	ret    
  41e358:	nop    DWORD PTR [rax+rax*1+0x0]
  41e360:	lea    rax,[rip+0x194b5]        # 0x43781c
  41e367:	ret    
  41e368:	nop    DWORD PTR [rax+rax*1+0x0]
  41e370:	lea    rax,[rip+0x1949f]        # 0x437816
  41e377:	ret    
  41e378:	nop    DWORD PTR [rax+rax*1+0x0]
  41e380:	lea    rax,[rip+0x1948b]        # 0x437812
  41e387:	ret    
  41e388:	nop    DWORD PTR [rax+rax*1+0x0]
  41e390:	lea    rax,[rip+0x1946e]        # 0x437805
  41e397:	ret    
  41e398:	nop    DWORD PTR [rax+rax*1+0x0]
  41e3a0:	lea    rax,[rip+0x19454]        # 0x4377fb
  41e3a7:	ret    
  41e3a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e3b0:	lea    rax,[rip+0x19439]        # 0x4377f0
  41e3b7:	ret    
  41e3b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e3c0:	lea    rax,[rip+0x1941d]        # 0x4377e4
  41e3c7:	ret    
  41e3c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e3d0:	lea    rax,[rip+0x19405]        # 0x4377dc
  41e3d7:	ret    
  41e3d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e3e0:	lea    rax,[rip+0x193ed]        # 0x4377d4
  41e3e7:	ret    
  41e3e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e3f0:	lea    rax,[rip+0x193d9]        # 0x4377d0
  41e3f7:	ret    
  41e3f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e400:	lea    rax,[rip+0x193b3]        # 0x4377ba
  41e407:	ret    
  41e408:	nop    DWORD PTR [rax+rax*1+0x0]
  41e410:	lea    rax,[rip+0x1939a]        # 0x4377b1
  41e417:	ret    
  41e418:	nop    DWORD PTR [rax+rax*1+0x0]
  41e420:	lea    rax,[rip+0x19384]        # 0x4377ab
  41e427:	ret    
  41e428:	nop    DWORD PTR [rax+rax*1+0x0]
  41e430:	lea    rax,[rip+0x1936f]        # 0x4377a6
  41e437:	ret    
  41e438:	nop    DWORD PTR [rax+rax*1+0x0]
  41e440:	lea    rax,[rip+0x19359]        # 0x4377a0
  41e447:	ret    
  41e448:	nop    DWORD PTR [rax+rax*1+0x0]
  41e450:	lea    rax,[rip+0x19341]        # 0x437798
  41e457:	ret    
  41e458:	nop    DWORD PTR [rax+rax*1+0x0]
  41e460:	lea    rax,[rip+0x19322]        # 0x437789
  41e467:	ret    
  41e468:	nop    DWORD PTR [rax+rax*1+0x0]
  41e470:	lea    rax,[rip+0x19304]        # 0x43777b
  41e477:	ret    
  41e478:	nop    DWORD PTR [rax+rax*1+0x0]
  41e480:	lea    rax,[rip+0x192ec]        # 0x437773
  41e487:	ret    
  41e488:	nop    DWORD PTR [rax+rax*1+0x0]
  41e490:	lea    rax,[rip+0x192d4]        # 0x43776b
  41e497:	ret    
  41e498:	nop    DWORD PTR [rax+rax*1+0x0]
  41e4a0:	lea    rax,[rip+0x192bb]        # 0x437762
  41e4a7:	ret    
  41e4a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e4b0:	lea    rax,[rip+0x192a4]        # 0x43775b
  41e4b7:	ret    
  41e4b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e4c0:	lea    rax,[rip+0x1928c]        # 0x437753
  41e4c7:	ret    
  41e4c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e4d0:	lea    rax,[rip+0x19268]        # 0x43773f
  41e4d7:	ret    
  41e4d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e4e0:	lea    rax,[rip+0x1924c]        # 0x437733
  41e4e7:	ret    
  41e4e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e4f0:	lea    rax,[rip+0x19230]        # 0x437727
  41e4f7:	ret    
  41e4f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e500:	lea    rax,[rip+0x19219]        # 0x437720
  41e507:	ret    
  41e508:	nop    DWORD PTR [rax+rax*1+0x0]
  41e510:	lea    rax,[rip+0x191fc]        # 0x437713
  41e517:	ret    
  41e518:	nop    DWORD PTR [rax+rax*1+0x0]
  41e520:	lea    rax,[rip+0x191e5]        # 0x43770c
  41e527:	ret    
  41e528:	nop    DWORD PTR [rax+rax*1+0x0]
  41e530:	lea    rax,[rip+0x19325]        # 0x43785c
  41e537:	ret    
  41e538:	nop    DWORD PTR [rax+rax*1+0x0]
  41e540:	lea    rax,[rip+0x191bd]        # 0x437704
  41e547:	ret    
  41e548:	nop    DWORD PTR [rax+rax*1+0x0]
  41e550:	lea    rax,[rip+0x191a4]        # 0x4376fb
  41e557:	ret    
  41e558:	nop    DWORD PTR [rax+rax*1+0x0]
  41e560:	lea    rax,[rip+0x18fad]        # 0x437514
  41e567:	ret    
  41e568:	nop    DWORD PTR [rax+rax*1+0x0]
  41e570:	push   rsi
  41e571:	push   rbx
  41e572:	sub    rsp,0x28
  41e576:	test   rcx,rcx
  41e579:	mov    rbx,rcx
  41e57c:	je     0x41e59c
  41e57e:	xchg   ax,ax
  41e580:	mov    rcx,QWORD PTR [rbx]
  41e583:	mov    rsi,QWORD PTR [rbx+0x8]
  41e587:	call   0x42d6f8
  41e58c:	mov    rcx,rbx
  41e58f:	mov    rbx,rsi
  41e592:	call   0x42d6f8
  41e597:	test   rsi,rsi
  41e59a:	jne    0x41e580
  41e59c:	add    rsp,0x28
  41e5a0:	pop    rbx
  41e5a1:	pop    rsi
  41e5a2:	ret    
  41e5a3:	nop    DWORD PTR [rax]
  41e5a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e5b0:	push   r12
  41e5b2:	push   rbp
  41e5b3:	push   rdi
  41e5b4:	push   rsi
  41e5b5:	push   rbx
  41e5b6:	sub    rsp,0x20
  41e5ba:	lea    rdi,[r8*4+0x0]
  41e5c2:	mov    rbp,rcx
  41e5c5:	mov    rsi,r8
  41e5c8:	mov    r12,rdx
  41e5cb:	lea    rcx,[rdi+0x1]
  41e5cf:	call   0x42d6b8
  41e5d4:	mov    rdx,rsi
  41e5d7:	mov    rbx,rax
  41e5da:	mov    r9,rdi
  41e5dd:	mov    r8,rax
  41e5e0:	mov    rcx,rbp
  41e5e3:	call   0x41bd60
  41e5e8:	test   rbx,rbx
  41e5eb:	mov    rsi,rax
  41e5ee:	je     0x41e611
  41e5f0:	lea    rdx,[rax+0x1]
  41e5f4:	mov    rcx,rbx
  41e5f7:	call   0x42d668
  41e5fc:	mov    BYTE PTR [rax+rsi*1],0x0
  41e600:	mov    QWORD PTR [r12],rax
  41e604:	xor    eax,eax
  41e606:	add    rsp,0x20
  41e60a:	pop    rbx
  41e60b:	pop    rsi
  41e60c:	pop    rdi
  41e60d:	pop    rbp
  41e60e:	pop    r12
  41e610:	ret    
  41e611:	mov    QWORD PTR [r12],0x0
  41e619:	mov    eax,0xffffffff
  41e61e:	jmp    0x41e606
  41e620:	push   r15
  41e622:	push   r14
  41e624:	push   r13
  41e626:	push   r12
  41e628:	push   rbp
  41e629:	push   rdi
  41e62a:	push   rsi
  41e62b:	push   rbx
  41e62c:	sub    rsp,0x28
  41e630:	xor    edi,edi
  41e632:	test   edx,edx
  41e634:	mov    rsi,rcx
  41e637:	mov    r14d,edx
  41e63a:	mov    r13,r8
  41e63d:	mov    ebp,r9d
  41e640:	jle    0x41e6ee
  41e646:	xor    ebx,ebx
  41e648:	xor    r12d,r12d
  41e64b:	jmp    0x41e68b
  41e64d:	nop    DWORD PTR [rax]
  41e650:	call   0x41bcf0
  41e655:	sub    r14d,0x2
  41e659:	movzx  ebx,ax
  41e65c:	movzx  r8d,bx
  41e660:	mov    rdx,r15
  41e663:	mov    rcx,rsi
  41e666:	call   0x41e5b0
  41e66b:	test   eax,eax
  41e66d:	js     0x41e6d0
  41e66f:	sub    r14d,ebx
  41e672:	mov    eax,r14d
  41e675:	sub    eax,ebx
  41e677:	cmp    WORD PTR [rsi],0x700
  41e67c:	mov    rbx,r15
  41e67f:	cmovae r14d,eax
  41e683:	add    edi,0x1
  41e686:	test   r14d,r14d
  41e689:	jle    0x41e6f1
  41e68b:	mov    ecx,0x10
  41e690:	call   0x42d6b8
  41e695:	test   rax,rax
  41e698:	mov    r15,rax
  41e69b:	je     0x41e6d0
  41e69d:	test   rbx,rbx
  41e6a0:	mov    QWORD PTR [rax+0x8],0x0
  41e6a8:	je     0x41e6c3
  41e6aa:	mov    QWORD PTR [rbx+0x8],rax
  41e6ae:	test   ebp,ebp
  41e6b0:	mov    rcx,rsi
  41e6b3:	jne    0x41e650
  41e6b5:	call   0x41bbc0
  41e6ba:	sub    r14d,0x1
  41e6be:	movzx  ebx,al
  41e6c1:	jmp    0x41e65c
  41e6c3:	mov    r12,rax
  41e6c6:	jmp    0x41e6ae
  41e6c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e6d0:	mov    rcx,r12
  41e6d3:	call   0x41e570
  41e6d8:	mov    eax,0xffffffff
  41e6dd:	add    rsp,0x28
  41e6e1:	pop    rbx
  41e6e2:	pop    rsi
  41e6e3:	pop    rdi
  41e6e4:	pop    rbp
  41e6e5:	pop    r12
  41e6e7:	pop    r13
  41e6e9:	pop    r14
  41e6eb:	pop    r15
  41e6ed:	ret    
  41e6ee:	xor    r12d,r12d
  41e6f1:	mov    QWORD PTR [r13+0x0],r12
  41e6f5:	mov    eax,edi
  41e6f7:	jmp    0x41e6dd
  41e6f9:	nop    DWORD PTR [rax+0x0]
  41e700:	push   rbp
  41e701:	push   rdi
  41e702:	push   rsi
  41e703:	push   rbx
  41e704:	sub    rsp,0x28
  41e708:	mov    rsi,QWORD PTR [rcx+0x110]
  41e70f:	test   rsi,rsi
  41e712:	je     0x41e7a0
  41e718:	cmp    WORD PTR [rsi+0x8],0x0
  41e71d:	mov    rdi,rcx
  41e720:	je     0x41e775
  41e722:	xor    ebx,ebx
  41e724:	mov    rbp,QWORD PTR [rip+0x1d705]        # 0x43be30
  41e72b:	jmp    0x41e751
  41e72d:	nop    DWORD PTR [rax]
  41e730:	mov    rdx,QWORD PTR [rsi]
  41e733:	mov    eax,ebx
  41e735:	mov    rcx,rdi
  41e738:	mov    rdx,QWORD PTR [rdx+rax*8]
  41e73c:	mov    rax,QWORD PTR [rdx]
  41e73f:	call   QWORD PTR [rax+0x8]
  41e742:	test   eax,eax
  41e744:	js     0x41e7a0
  41e746:	movzx  eax,WORD PTR [rsi+0x8]
  41e74a:	add    ebx,0x1
  41e74d:	cmp    eax,ebx
  41e74f:	jbe    0x41e795
  41e751:	mov    eax,DWORD PTR [rbp+0x0]
  41e754:	test   eax,eax
  41e756:	je     0x41e730
  41e758:	lea    r8,[rip+0x194a1]        # 0x437c00
  41e75f:	lea    rcx,[rip+0x1947a]        # 0x437be0
  41e766:	mov    r9d,ebx
  41e769:	mov    edx,0x77c5
  41e76e:	call   0x40d350
  41e773:	jmp    0x41e730
  41e775:	lea    rdx,[rip+0x19464]        # 0x437be0
  41e77c:	lea    rcx,[rip+0x19465]        # 0x437be8
  41e783:	mov    r8d,0x779
  41e789:	call   0x42d350
  41e78e:	cmp    WORD PTR [rsi+0x8],0x0
  41e793:	jne    0x41e722
  41e795:	xor    eax,eax
  41e797:	add    rsp,0x28
  41e79b:	pop    rbx
  41e79c:	pop    rsi
  41e79d:	pop    rdi
  41e79e:	pop    rbp
  41e79f:	ret    
  41e7a0:	mov    eax,0xffffffff
  41e7a5:	add    rsp,0x28
  41e7a9:	pop    rbx
  41e7aa:	pop    rsi
  41e7ab:	pop    rdi
  41e7ac:	pop    rbp
  41e7ad:	ret    
  41e7ae:	xchg   ax,ax
  41e7b0:	push   rbp
  41e7b1:	push   rdi
  41e7b2:	push   rsi
  41e7b3:	push   rbx
  41e7b4:	sub    rsp,0x38
  41e7b8:	mov    rbx,rcx
  41e7bb:	mov    QWORD PTR [rsp+0x28],0x0
  41e7c4:	call   0x41bcf0
  41e7c9:	lea    r8,[rsp+0x28]
  41e7ce:	xor    r9d,r9d
  41e7d1:	movzx  edx,ax
  41e7d4:	mov    rcx,rbx
  41e7d7:	call   0x41e620
  41e7dc:	test   eax,eax
  41e7de:	mov    ebp,eax
  41e7e0:	js     0x41e88a
  41e7e6:	mov    rcx,rbx
  41e7e9:	call   0x4125b0
  41e7ee:	mov    QWORD PTR [rbx+0x150],0xffffffffffffffff
  41e7f9:	movzx  ecx,bp
  41e7fc:	call   0x412360
  41e801:	test   rax,rax
  41e804:	mov    rdi,rax
  41e807:	je     0x41e858
  41e809:	mov    QWORD PTR [rbx+0x118],rax
  41e810:	mov    rdx,rax
  41e813:	mov    rcx,rbx
  41e816:	call   0x40fb90
  41e81b:	test   ebp,ebp
  41e81d:	mov    rsi,QWORD PTR [rsp+0x28]
  41e822:	je     0x41e885
  41e824:	lea    eax,[rbp-0x1]
  41e827:	xor    ebx,ebx
  41e829:	lea    rbp,[rax*8+0x8]
  41e831:	jmp    0x41e840
  41e833:	add    rbx,0x8
  41e837:	mov    rsi,QWORD PTR [rsi+0x8]
  41e83b:	cmp    rbx,rbp
  41e83e:	je     0x41e870
  41e840:	mov    rcx,QWORD PTR [rdi]
  41e843:	mov    rdx,QWORD PTR [rsi]
  41e846:	mov    rcx,QWORD PTR [rcx+rbx*1]
  41e84a:	add    rcx,0x38
  41e84e:	call   0x41d6f0
  41e853:	test   rax,rax
  41e856:	jne    0x41e833
  41e858:	mov    rcx,QWORD PTR [rsp+0x28]
  41e85d:	call   0x41e570
  41e862:	mov    eax,0xffffffff
  41e867:	add    rsp,0x38
  41e86b:	pop    rbx
  41e86c:	pop    rsi
  41e86d:	pop    rdi
  41e86e:	pop    rbp
  41e86f:	ret    
  41e870:	mov    rcx,QWORD PTR [rsp+0x28]
  41e875:	call   0x41e570
  41e87a:	xor    eax,eax
  41e87c:	add    rsp,0x38
  41e880:	pop    rbx
  41e881:	pop    rsi
  41e882:	pop    rdi
  41e883:	pop    rbp
  41e884:	ret    
  41e885:	mov    rcx,rsi
  41e888:	jmp    0x41e875
  41e88a:	mov    eax,0xffffffff
  41e88f:	jmp    0x41e867
  41e891:	nop    DWORD PTR [rax+rax*1+0x0]
  41e896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e8a0:	push   r15
  41e8a2:	push   r14
  41e8a4:	push   r13
  41e8a6:	push   r12
  41e8a8:	push   rbp
  41e8a9:	push   rdi
  41e8aa:	push   rsi
  41e8ab:	push   rbx
  41e8ac:	sub    rsp,0x48
  41e8b0:	xor    r14d,r14d
  41e8b3:	mov    rsi,rcx
  41e8b6:	mov    r12,rdx
  41e8b9:	mov    r13d,r8d
  41e8bc:	lea    rbp,[rsp+0x30]
  41e8c1:	call   0x41bcf0
  41e8c6:	mov    rbx,QWORD PTR [rsi+0x110]
  41e8cd:	movzx  edi,ax
  41e8d0:	jmp    0x41e950
  41e8d2:	movzx  edx,al
  41e8d5:	cmp    dx,WORD PTR [rbx+0x8]
  41e8d9:	ja     0x41e97c
  41e8df:	mov    rdx,QWORD PTR [rbx]
  41e8e2:	mov    r15,QWORD PTR [rdx+rax*8-0x8]
  41e8e7:	test   r15,r15
  41e8ea:	je     0x41e97c
  41e8f0:	movzx  eax,BYTE PTR [rsp+0x32]
  41e8f5:	mov    r9d,eax
  41e8f8:	shr    r9b,0x2
  41e8fc:	xor    r9d,0x1
  41e900:	and    r9d,0x1
  41e904:	lea    r10d,[r9+r9*1]
  41e908:	movzx  r9d,BYTE PTR [r15+0x58]
  41e90d:	and    r9d,0xfffffff5
  41e911:	test   al,0x8
  41e913:	setne  dl
  41e916:	or     r9d,r10d
  41e919:	shl    edx,0x3
  41e91c:	or     r9d,edx
  41e91f:	test   al,0x10
  41e921:	setne  dl
  41e924:	and    r9d,0xffffffef
  41e928:	shl    edx,0x4
  41e92b:	or     r9d,edx
  41e92e:	test   r12,r12
  41e931:	mov    BYTE PTR [r15+0x58],r9b
  41e935:	je     0x41e94c
  41e937:	movzx  edx,BYTE PTR [rsp+0x31]
  41e93c:	test   dl,dl
  41e93e:	je     0x41e94c
  41e940:	movzx  ecx,dl
  41e943:	cmp    ecx,r13d
  41e946:	jle    0x41e9e3
  41e94c:	test   al,0x20
  41e94e:	jne    0x41e988
  41e950:	cmp    edi,r14d
  41e953:	jbe    0x41e9d0
  41e955:	mov    r8d,0x3
  41e95b:	mov    rdx,rbp
  41e95e:	mov    rcx,rsi
  41e961:	call   0x41bc50
  41e966:	add    r14d,0x3
  41e96a:	test   rbx,rbx
  41e96d:	je     0x41e97c
  41e96f:	movzx  eax,BYTE PTR [rsp+0x30]
  41e974:	test   al,al
  41e976:	jne    0x41e8d2
  41e97c:	movzx  eax,BYTE PTR [rsp+0x32]
  41e981:	xor    r15d,r15d
  41e984:	test   al,0x20
  41e986:	je     0x41e950
  41e988:	mov    rcx,rsi
  41e98b:	call   0x41bbc0
  41e990:	test   r15,r15
  41e993:	movzx  r9d,al
  41e997:	je     0x41ea00
  41e999:	lea    rdx,[r15+0x40]
  41e99d:	movzx  r8d,al
  41e9a1:	mov    rcx,rsi
  41e9a4:	mov    DWORD PTR [rsp+0x2c],r9d
  41e9a9:	call   0x41bf20
  41e9ae:	mov    r9d,DWORD PTR [rsp+0x2c]
  41e9b3:	cmp    WORD PTR [rsi],0x700
  41e9b8:	lea    eax,[r9+r9*1]
  41e9bc:	cmovae r9d,eax
  41e9c0:	lea    r14d,[r9+r14*1+0x1]
  41e9c5:	cmp    edi,r14d
  41e9c8:	ja     0x41e955
  41e9ca:	nop    WORD PTR [rax+rax*1+0x0]
  41e9d0:	xor    eax,eax
  41e9d2:	add    rsp,0x48
  41e9d6:	pop    rbx
  41e9d7:	pop    rsi
  41e9d8:	pop    rdi
  41e9d9:	pop    rbp
  41e9da:	pop    r12
  41e9dc:	pop    r13
  41e9de:	pop    r14
  41e9e0:	pop    r15
  41e9e2:	ret    
  41e9e3:	mov    rdx,QWORD PTR [r12+rdx*8-0x8]
  41e9e8:	lea    rcx,[r15+0x30]
  41e9ec:	call   0x41d6f0
  41e9f1:	test   rax,rax
  41e9f4:	je     0x41ea26
  41e9f6:	movzx  eax,BYTE PTR [rsp+0x32]
  41e9fb:	jmp    0x41e94c
  41ea00:	cmp    WORD PTR [rsi],0x700
  41ea05:	lea    eax,[r9+r9*1]
  41ea09:	mov    rcx,rsi
  41ea0c:	cmovae r9d,eax
  41ea10:	xor    edx,edx
  41ea12:	mov    r8d,r9d
  41ea15:	mov    DWORD PTR [rsp+0x2c],r9d
  41ea1a:	call   0x41bc50
  41ea1f:	mov    r9d,DWORD PTR [rsp+0x2c]
  41ea24:	jmp    0x41e9c0
  41ea26:	mov    eax,0xffffffff
  41ea2b:	jmp    0x41e9d2
  41ea2d:	nop    DWORD PTR [rax]
  41ea30:	push   rbp
  41ea31:	push   rdi
  41ea32:	push   rsi
  41ea33:	push   rbx
  41ea34:	sub    rsp,0x28
  41ea38:	mov    rbx,rcx
  41ea3b:	call   0x41bcf0
  41ea40:	mov    rcx,rbx
  41ea43:	mov    esi,eax
  41ea45:	call   0x41bd10
  41ea4a:	test   eax,eax
  41ea4c:	mov    edi,eax
  41ea4e:	je     0x41eaa0
  41ea50:	sub    esi,0x4
  41ea53:	mov    rcx,rbx
  41ea56:	call   0x41bbc0
  41ea5b:	mov    rcx,rbx
  41ea5e:	call   0x41bcf0
  41ea63:	cmp    si,0x7
  41ea67:	mov    ebp,eax
  41ea69:	je     0x41eac0
  41ea6b:	mov    rdx,QWORD PTR [rbx+0x138]
  41ea72:	test   rdx,rdx
  41ea75:	je     0x41ea8b
  41ea77:	mov    WORD PTR [rdx+0x44],bp
  41ea7b:	and    ebp,0x40
  41ea7e:	mov    DWORD PTR [rdx+0x18],edi
  41ea81:	je     0x41ea8b
  41ea83:	mov    rcx,rbx
  41ea86:	call   0x412980
  41ea8b:	xor    eax,eax
  41ea8d:	add    rsp,0x28
  41ea91:	pop    rbx
  41ea92:	pop    rsi
  41ea93:	pop    rdi
  41ea94:	pop    rbp
  41ea95:	ret    
  41ea96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eaa0:	mov    rcx,rbx
  41eaa3:	sub    esi,0x5
  41eaa6:	call   0x41bbc0
  41eaab:	movzx  r8d,al
  41eaaf:	xor    edx,edx
  41eab1:	mov    rcx,rbx
  41eab4:	mov    rbp,r8
  41eab7:	sub    esi,ebp
  41eab9:	call   0x41bc50
  41eabe:	jmp    0x41ea53
  41eac0:	mov    rcx,rbx
  41eac3:	call   0x41bd10
  41eac8:	jmp    0x41ea6b
  41eaca:	nop    WORD PTR [rax+rax*1+0x0]
  41ead0:	push   r15
  41ead2:	push   r14
  41ead4:	push   r13
  41ead6:	push   r12
  41ead8:	push   rbp
  41ead9:	push   rdi
  41eada:	push   rsi
  41eadb:	push   rbx
  41eadc:	sub    rsp,0x58
  41eae0:	mov    rsi,rcx
  41eae3:	call   0x41bcf0
  41eae8:	movzx  ebp,ax
  41eaeb:	movzx  eax,WORD PTR [rsi]
  41eaee:	cmp    ax,0x700
  41eaf2:	jbe    0x41ec1d
  41eaf8:	cmp    ax,0x701
  41eafc:	je     0x41ec10
  41eb02:	test   ebp,ebp
  41eb04:	mov    DWORD PTR [rsp+0x28],0x0
  41eb0c:	je     0x41eda0
  41eb12:	lea    r15,[rsp+0x30]
  41eb17:	xor    ebx,ebx
  41eb19:	mov    QWORD PTR [rsp+0x20],0x0
  41eb22:	mov    ecx,0x10
  41eb27:	call   0x42d6b8
  41eb2c:	test   rax,rax
  41eb2f:	mov    r14,rax
  41eb32:	je     0x41ebe6
  41eb38:	test   rbx,rbx
  41eb3b:	mov    QWORD PTR [rax],0x0
  41eb42:	mov    QWORD PTR [rax+0x8],0x0
  41eb4a:	je     0x41ed50
  41eb50:	mov    QWORD PTR [rbx+0x8],rax
  41eb54:	mov    rcx,rsi
  41eb57:	sub    ebp,0x1
  41eb5a:	call   0x41bbc0
  41eb5f:	movzx  r13d,al
  41eb63:	lea    eax,[r13-0x1]
  41eb67:	cmp    eax,0x3
  41eb6a:	mov    DWORD PTR [rsp+0x2c],eax
  41eb6e:	ja     0x41ebe6
  41eb70:	xor    r12d,r12d
  41eb73:	xor    edi,edi
  41eb75:	test   r13d,r13d
  41eb78:	mov    rbx,r15
  41eb7b:	jne    0x41ebaa
  41eb7d:	jmp    0x41ed7d
  41eb82:	mov    r8,QWORD PTR [rbx]
  41eb85:	xor    edx,edx
  41eb87:	mov    r9d,0xffffffff
  41eb8d:	mov    rcx,rsi
  41eb90:	add    edi,0x1
  41eb93:	add    rbx,0x8
  41eb97:	call   0x4192e0
  41eb9c:	cmp    r13d,edi
  41eb9f:	lea    r12,[rax+r12*1+0x1]
  41eba4:	je     0x41ecc0
  41ebaa:	mov    rcx,rsi
  41ebad:	call   0x41bcf0
  41ebb2:	movzx  edx,ax
  41ebb5:	movzx  r8d,ax
  41ebb9:	mov    rcx,rsi
  41ebbc:	not    edx
  41ebbe:	lea    ebp,[rbp+rdx*2+0x0]
  41ebc2:	mov    rdx,rbx
  41ebc5:	call   0x41e5b0
  41ebca:	test   eax,eax
  41ebcc:	jns    0x41eb82
  41ebce:	test   edi,edi
  41ebd0:	je     0x41ebe6
  41ebd2:	sub    edi,0x1
  41ebd5:	movsxd rax,edi
  41ebd8:	mov    rcx,QWORD PTR [rsp+rax*8+0x30]
  41ebdd:	call   0x42d6f8
  41ebe2:	test   edi,edi
  41ebe4:	jne    0x41ebd2
  41ebe6:	mov    rcx,QWORD PTR [rsp+0x20]
  41ebeb:	call   0x41e570
  41ebf0:	mov    eax,0xffffffff
  41ebf5:	add    rsp,0x58
  41ebf9:	pop    rbx
  41ebfa:	pop    rsi
  41ebfb:	pop    rdi
  41ebfc:	pop    rbp
  41ebfd:	pop    r12
  41ebff:	pop    r13
  41ec01:	pop    r14
  41ec03:	pop    r15
  41ec05:	ret    
  41ec06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ec10:	test   BYTE PTR [rsi+0xa0],0x4
  41ec17:	je     0x41eb02
  41ec1d:	lea    r8,[rsp+0x30]
  41ec22:	mov    r9d,0x1
  41ec28:	mov    edx,ebp
  41ec2a:	mov    rcx,rsi
  41ec2d:	call   0x41e620
  41ec32:	mov    DWORD PTR [rsp+0x28],eax
  41ec36:	mov    eax,DWORD PTR [rsp+0x28]
  41ec3a:	test   eax,eax
  41ec3c:	jle    0x41ebf0
  41ec3e:	movsxd rcx,eax
  41ec41:	shl    rcx,0x3
  41ec45:	call   0x42d6b8
  41ec4a:	test   rax,rax
  41ec4d:	mov    rbx,rax
  41ec50:	je     0x41edae
  41ec56:	mov    r8,rax
  41ec59:	mov    eax,DWORD PTR [rsp+0x28]
  41ec5d:	mov    r9,QWORD PTR [rsp+0x30]
  41ec62:	sub    eax,0x1
  41ec65:	lea    r11,[rbx+rax*8+0x8]
  41ec6a:	nop    WORD PTR [rax+rax*1+0x0]
  41ec70:	mov    r10,QWORD PTR [r9]
  41ec73:	add    r8,0x8
  41ec77:	mov    QWORD PTR [r8-0x8],r10
  41ec7b:	cmp    r8,r11
  41ec7e:	mov    r9,QWORD PTR [r9+0x8]
  41ec82:	jne    0x41ec70
  41ec84:	mov    rcx,rsi
  41ec87:	call   0x41bbc0
  41ec8c:	cmp    al,0xa5
  41ec8e:	je     0x41ed30
  41ec94:	mov    rcx,rsi
  41ec97:	xor    esi,esi
  41ec99:	call   0x41bc10
  41ec9e:	mov    rcx,rbx
  41eca1:	call   0x42d6f8
  41eca6:	mov    rcx,QWORD PTR [rsp+0x30]
  41ecab:	call   0x41e570
  41ecb0:	mov    eax,esi
  41ecb2:	jmp    0x41ebf5
  41ecb7:	nop    WORD PTR [rax+rax*1+0x0]
  41ecc0:	mov    rcx,r12
  41ecc3:	call   0x42d6b8
  41ecc8:	test   rax,rax
  41eccb:	mov    rbx,rax
  41ecce:	je     0x41ed61
  41ecd4:	mov    QWORD PTR [r14],rax
  41ecd7:	xor    edi,edi
  41ecd9:	mov    r8,QWORD PTR [r15+rdi*8]
  41ecdd:	mov    rdx,rbx
  41ece0:	mov    r9d,0xffffffff
  41ece6:	mov    rcx,rsi
  41ece9:	call   0x4192e0
  41ecee:	mov    rcx,QWORD PTR [r15+rdi*8]
  41ecf2:	add    rax,rbx
  41ecf5:	add    rdi,0x1
  41ecf9:	mov    BYTE PTR [rax],0x2e
  41ecfc:	lea    rbx,[rax+0x1]
  41ed00:	call   0x42d6f8
  41ed05:	cmp    r13d,edi
  41ed08:	jg     0x41ecd9
  41ed0a:	add    DWORD PTR [rsp+0x28],0x1
  41ed0f:	test   ebp,ebp
  41ed11:	mov    BYTE PTR [rbx-0x1],0x0
  41ed15:	mov    rbx,r14
  41ed18:	jg     0x41eb22
  41ed1e:	mov    rax,QWORD PTR [rsp+0x20]
  41ed23:	mov    QWORD PTR [rsp+0x30],rax
  41ed28:	jmp    0x41ec36
  41ed2d:	nop    DWORD PTR [rax]
  41ed30:	mov    r8d,DWORD PTR [rsp+0x28]
  41ed35:	mov    rcx,rsi
  41ed38:	mov    rdx,rbx
  41ed3b:	call   0x41e8a0
  41ed40:	mov    esi,eax
  41ed42:	jmp    0x41ec9e
  41ed47:	nop    WORD PTR [rax+rax*1+0x0]
  41ed50:	mov    QWORD PTR [rsp+0x20],rax
  41ed55:	jmp    0x41eb54
  41ed5a:	sub    eax,0x1
  41ed5d:	mov    DWORD PTR [rsp+0x2c],eax
  41ed61:	mov    edi,DWORD PTR [rsp+0x2c]
  41ed65:	movsxd rax,edi
  41ed68:	mov    rcx,QWORD PTR [rsp+rax*8+0x30]
  41ed6d:	call   0x42d6f8
  41ed72:	test   edi,edi
  41ed74:	mov    eax,edi
  41ed76:	jne    0x41ed5a
  41ed78:	jmp    0x41ebe6
  41ed7d:	xor    ecx,ecx
  41ed7f:	call   0x42d6b8
  41ed84:	test   rax,rax
  41ed87:	mov    rbx,rax
  41ed8a:	je     0x41ebe6
  41ed90:	mov    QWORD PTR [r14],rbx
  41ed93:	jmp    0x41ed0a
  41ed98:	nop    DWORD PTR [rax+rax*1+0x0]
  41eda0:	mov    QWORD PTR [rsp+0x20],0x0
  41eda9:	jmp    0x41ed1e
  41edae:	mov    rcx,QWORD PTR [rsp+0x30]
  41edb3:	call   0x41e570
  41edb8:	jmp    0x41ebf0
  41edbd:	nop    DWORD PTR [rax]
  41edc0:	push   rbp
  41edc1:	push   r14
  41edc3:	push   r13
  41edc5:	push   r12
  41edc7:	push   rdi
  41edc8:	push   rsi
  41edc9:	push   rbx
  41edca:	mov    rbp,rsp
  41edcd:	sub    rsp,0x20
  41edd1:	mov    rsi,QWORD PTR [rcx+0x110]
  41edd8:	test   rsi,rsi
  41eddb:	je     0x41ee7b
  41ede1:	movzx  eax,WORD PTR [rsi+0x8]
  41ede5:	mov    rdi,rcx
  41ede8:	test   ax,ax
  41edeb:	je     0x41eec0
  41edf1:	movzx  r8d,ax
  41edf5:	add    r8d,0x7
  41edf9:	sar    r8d,0x3
  41edfd:	movsxd r8,r8d
  41ee00:	lea    rax,[r8+0x1e]
  41ee04:	and    eax,0x7ff0
  41ee09:	call   0x42c580
  41ee0e:	xor    ebx,ebx
  41ee10:	sub    rsp,rax
  41ee13:	mov    rcx,rdi
  41ee16:	lea    r12,[rsp+0x20]
  41ee1b:	mov    rdx,r12
  41ee1e:	call   0x41bc50
  41ee23:	cmp    WORD PTR [rsi+0x8],0x0
  41ee28:	mov    r13,QWORD PTR [rip+0x1d001]        # 0x43be30
  41ee2f:	jne    0x41ee46
  41ee31:	jmp    0x41eeb0
  41ee33:	mov    DWORD PTR [r14+0x64],0xffffffff
  41ee3b:	movzx  eax,WORD PTR [rsi+0x8]
  41ee3f:	add    ebx,0x1
  41ee42:	cmp    eax,ebx
  41ee44:	jbe    0x41eeb0
  41ee46:	mov    rdx,QWORD PTR [rsi]
  41ee49:	mov    eax,ebx
  41ee4b:	mov    r14,QWORD PTR [rdx+rax*8]
  41ee4f:	mov    eax,DWORD PTR [r13+0x0]
  41ee53:	test   eax,eax
  41ee55:	jne    0x41ee90
  41ee57:	mov    eax,ebx
  41ee59:	shr    eax,0x3
  41ee5c:	movsx  edx,BYTE PTR [r12+rax*1]
  41ee61:	mov    eax,ebx
  41ee63:	and    eax,0x7
  41ee66:	bt     edx,eax
  41ee69:	jb     0x41ee33
  41ee6b:	mov    rax,QWORD PTR [r14]
  41ee6e:	mov    rdx,r14
  41ee71:	mov    rcx,rdi
  41ee74:	call   QWORD PTR [rax+0x8]
  41ee77:	test   eax,eax
  41ee79:	jns    0x41ee3b
  41ee7b:	mov    eax,0xffffffff
  41ee80:	mov    rsp,rbp
  41ee83:	pop    rbx
  41ee84:	pop    rsi
  41ee85:	pop    rdi
  41ee86:	pop    r12
  41ee88:	pop    r13
  41ee8a:	pop    r14
  41ee8c:	pop    rbp
  41ee8d:	ret    
  41ee8e:	xchg   ax,ax
  41ee90:	lea    r8,[rip+0x18d91]        # 0x437c28
  41ee97:	lea    rcx,[rip+0x18d42]        # 0x437be0
  41ee9e:	mov    r9d,ebx
  41eea1:	mov    edx,0x79b5
  41eea6:	call   0x40d350
  41eeab:	jmp    0x41ee57
  41eead:	nop    DWORD PTR [rax]
  41eeb0:	xor    eax,eax
  41eeb2:	mov    rsp,rbp
  41eeb5:	pop    rbx
  41eeb6:	pop    rsi
  41eeb7:	pop    rdi
  41eeb8:	pop    r12
  41eeba:	pop    r13
  41eebc:	pop    r14
  41eebe:	pop    rbp
  41eebf:	ret    
  41eec0:	lea    rdx,[rip+0x18d19]        # 0x437be0
  41eec7:	lea    rcx,[rip+0x18d1a]        # 0x437be8
  41eece:	mov    r8d,0x795
  41eed4:	call   0x42d350
  41eed9:	movzx  eax,WORD PTR [rsi+0x8]
  41eedd:	jmp    0x41edf1
  41eee2:	nop    DWORD PTR [rax+0x0]
  41eee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eef0:	push   rdi
  41eef1:	push   rsi
  41eef2:	push   rbx
  41eef3:	sub    rsp,0x40
  41eef7:	mov    rdi,QWORD PTR [rip+0x1cf12]        # 0x43be10
  41eefe:	mov    rbx,rdx
  41ef01:	mov    edx,DWORD PTR [rdx+0x1c]
  41ef04:	mov    rsi,rcx
  41ef07:	test   BYTE PTR [rdi+rdx*1],0x20
  41ef0b:	mov    rax,rdx
  41ef0e:	je     0x41ef1b
  41ef10:	mov    rdx,QWORD PTR [rcx+0x68]
  41ef14:	mov    rdx,QWORD PTR [rdx]
  41ef17:	mov    QWORD PTR [rbx+0x28],rdx
  41ef1b:	cmp    eax,0xe1
  41ef20:	je     0x41ef95
  41ef22:	mov    r8,QWORD PTR [rbx+0x28]
  41ef26:	test   r8,r8
  41ef29:	je     0x41f012
  41ef2f:	test   BYTE PTR [rsi+0xa0],0x2
  41ef36:	je     0x41ef62
  41ef38:	mov    r9d,DWORD PTR [rbx+0x10]
  41ef3c:	mov    eax,0x7fffffff
  41ef41:	cmp    r9d,0xfffffff
  41ef48:	mov    DWORD PTR [rbx+0x20],r9d
  41ef4c:	jle    0x41ef70
  41ef4e:	mov    rdx,QWORD PTR [rip+0x1cedb]        # 0x43be30
  41ef55:	mov    DWORD PTR [rbx+0x10],eax
  41ef58:	mov    edx,DWORD PTR [rdx]
  41ef5a:	test   edx,edx
  41ef5c:	jne    0x41efe0
  41ef62:	add    rsp,0x40
  41ef66:	pop    rbx
  41ef67:	pop    rsi
  41ef68:	pop    rdi
  41ef69:	ret    
  41ef6a:	nop    WORD PTR [rax+rax*1+0x0]
  41ef70:	movzx  ecx,BYTE PTR [r8+0x21]
  41ef75:	movzx  r10d,BYTE PTR [r8+0x8]
  41ef7a:	imul   ecx,r9d
  41ef7e:	mov    eax,ecx
  41ef80:	cdq    
  41ef81:	idiv   r10d
  41ef84:	lea    eax,[rcx+r10*1]
  41ef88:	test   edx,edx
  41ef8a:	cmovne ecx,eax
  41ef8d:	mov    eax,ecx
  41ef8f:	cdq    
  41ef90:	idiv   r10d
  41ef93:	jmp    0x41ef4e
  41ef95:	mov    eax,DWORD PTR [rbx+0x8]
  41ef98:	sub    eax,0x22
  41ef9b:	cmp    eax,0x1
  41ef9e:	ja     0x41ef22
  41efa0:	mov    rax,QWORD PTR [rsi+0x68]
  41efa4:	lea    r8,[rip+0x1a824]        # 0x4397cf
  41efab:	mov    rcx,rsi
  41efae:	mov    rax,QWORD PTR [rax]
  41efb1:	mov    rdx,QWORD PTR [rax+0x18]
  41efb5:	call   0x40caf0
  41efba:	test   rax,rax
  41efbd:	mov    QWORD PTR [rbx+0x28],rax
  41efc1:	je     0x41f051
  41efc7:	test   BYTE PTR [rsi+0xa0],0x2
  41efce:	mov    r8,rax
  41efd1:	jne    0x41ef38
  41efd7:	jmp    0x41ef62
  41efd9:	nop    DWORD PTR [rax+0x0]
  41efe0:	mov    DWORD PTR [rsp+0x30],eax
  41efe4:	mov    rax,QWORD PTR [r8+0x18]
  41efe8:	lea    rcx,[rip+0x18bf1]        # 0x437be0
  41efef:	mov    DWORD PTR [rsp+0x20],r9d
  41eff4:	mov    edx,0xc585
  41eff9:	mov    QWORD PTR [rsp+0x28],rax
  41effe:	mov    r9,QWORD PTR [r8]
  41f001:	lea    r8,[rip+0x18c50]        # 0x437c58
  41f008:	call   0x40d350
  41f00d:	jmp    0x41ef62
  41f012:	cmp    WORD PTR [rsi],0x6ff
  41f017:	jbe    0x41ef62
  41f01d:	mov    eax,DWORD PTR [rbx+0x1c]
  41f020:	test   BYTE PTR [rdi+rax*1],0x10
  41f024:	je     0x41ef62
  41f02a:	mov    rax,QWORD PTR [rsi+0x68]
  41f02e:	mov    r8,QWORD PTR [rax+0x8]
  41f032:	mov    QWORD PTR [rbx+0x28],r8
  41f036:	test   BYTE PTR [rsi+0xa0],0x2
  41f03d:	je     0x41ef62
  41f043:	test   r8,r8
  41f046:	jne    0x41ef38
  41f04c:	jmp    0x41ef62
  41f051:	mov    rax,QWORD PTR [rsi+0x68]
  41f055:	mov    r8,QWORD PTR [rax]
  41f058:	mov    QWORD PTR [rbx+0x28],r8
  41f05c:	jmp    0x41ef26
  41f061:	nop    DWORD PTR [rax+rax*1+0x0]
  41f066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f070:	push   r15
  41f072:	push   r14
  41f074:	push   r13
  41f076:	push   r12
  41f078:	push   rbp
  41f079:	push   rdi
  41f07a:	push   rsi
  41f07b:	push   rbx
  41f07c:	sub    rsp,0x48
  41f080:	mov    r13,QWORD PTR [rip+0x1cda9]        # 0x43be30
  41f087:	mov    rbx,rcx
  41f08a:	mov    r10d,DWORD PTR [r13+0x0]
  41f08e:	test   r10d,r10d
  41f091:	jne    0x41f38c
  41f097:	mov    rcx,rbx
  41f09a:	call   0x4125b0
  41f09f:	mov    rcx,rbx
  41f0a2:	mov    QWORD PTR [rbx+0x150],0xffffffffffffffff
  41f0ad:	call   0x41bd10
  41f0b2:	mov    rcx,rbx
  41f0b5:	call   0x41bcf0
  41f0ba:	movzx  esi,ax
  41f0bd:	mov    ecx,esi
  41f0bf:	call   0x412360
  41f0c4:	test   rax,rax
  41f0c7:	mov    rbp,rax
  41f0ca:	je     0x41f238
  41f0d0:	mov    rdx,rax
  41f0d3:	mov    rcx,rbx
  41f0d6:	call   0x40fb90
  41f0db:	mov    rax,QWORD PTR [rbx+0x138]
  41f0e2:	test   rax,rax
  41f0e5:	je     0x41f380
  41f0eb:	mov    QWORD PTR [rax+0x48],rbp
  41f0ef:	mov    r9d,DWORD PTR [r13+0x0]
  41f0f3:	test   r9d,r9d
  41f0f6:	jne    0x41f3a9
  41f0fc:	xor    edi,edi
  41f0fe:	cmp    WORD PTR [rbp+0x8],0x0
  41f103:	mov    r12,QWORD PTR [rip+0x1cd06]        # 0x43be10
  41f10a:	je     0x41f2a2
  41f110:	mov    rdx,QWORD PTR [rbp+0x0]
  41f114:	movzx  eax,di
  41f117:	mov    rcx,rbx
  41f11a:	mov    rsi,QWORD PTR [rdx+rax*8]
  41f11e:	call   0x41bbc0
  41f123:	mov    rcx,rbx
  41f126:	movzx  r8d,al
  41f12a:	lea    r14,[rsi+0x38]
  41f12e:	lea    r15,[rsi+0x40]
  41f132:	mov    rdx,r14
  41f135:	call   0x41bf20
  41f13a:	mov    rcx,rbx
  41f13d:	call   0x41bbc0
  41f142:	xor    edx,edx
  41f144:	movzx  r8d,al
  41f148:	mov    rcx,rbx
  41f14b:	call   0x41bc50
  41f150:	mov    rcx,rbx
  41f153:	call   0x41bbc0
  41f158:	xor    edx,edx
  41f15a:	movzx  r8d,al
  41f15e:	mov    rcx,rbx
  41f161:	call   0x41bc50
  41f166:	mov    rcx,rbx
  41f169:	call   0x41bbc0
  41f16e:	lea    rdx,[rsi+0x30]
  41f172:	movzx  r8d,al
  41f176:	mov    rcx,rbx
  41f179:	call   0x41bf20
  41f17e:	mov    rcx,rbx
  41f181:	call   0x41bbc0
  41f186:	mov    rdx,r15
  41f189:	movzx  r8d,al
  41f18d:	mov    rcx,rbx
  41f190:	call   0x41bf20
  41f195:	mov    rax,QWORD PTR [rsi+0x38]
  41f199:	cmp    QWORD PTR [rax],0x0
  41f19d:	jne    0x41f1b3
  41f19f:	mov    rdx,r15
  41f1a2:	mov    rcx,r14
  41f1a5:	call   0x41d750
  41f1aa:	test   rax,rax
  41f1ad:	je     0x41f238
  41f1b3:	mov    rcx,rbx
  41f1b6:	call   0x41bd10
  41f1bb:	movzx  ecx,BYTE PTR [rsi+0x58]
  41f1bf:	mov    r8d,eax
  41f1c2:	mov    DWORD PTR [rsi+0xc],eax
  41f1c5:	mov    edx,r8d
  41f1c8:	and    eax,0x1
  41f1cb:	and    edx,0x2
  41f1ce:	shl    eax,0x4
  41f1d1:	and    ecx,0xffffffe7
  41f1d4:	cmp    edx,0x1
  41f1d7:	setg   dl
  41f1da:	or     eax,ecx
  41f1dc:	shl    edx,0x3
  41f1df:	or     eax,edx
  41f1e1:	mov    edx,r8d
  41f1e4:	and    edx,0x10
  41f1e7:	cmp    edx,0x1
  41f1ea:	mov    edx,r8d
  41f1ed:	setg   cl
  41f1f0:	and    edx,0x20
  41f1f3:	and    eax,0xfffffffc
  41f1f6:	add    ecx,ecx
  41f1f8:	cmp    edx,0x1
  41f1fb:	setg   dl
  41f1fe:	and    r8d,0x40
  41f202:	or     eax,ecx
  41f204:	or     eax,edx
  41f206:	cmp    r8d,0x1
  41f20a:	mov    rcx,rbx
  41f20d:	setg   dl
  41f210:	and    eax,0xfffffffb
  41f213:	shl    edx,0x2
  41f216:	or     eax,edx
  41f218:	mov    BYTE PTR [rsi+0x58],al
  41f21b:	call   0x41bd10
  41f220:	mov    rcx,rbx
  41f223:	mov    DWORD PTR [rsi+0x8],eax
  41f226:	call   0x41bbc0
  41f22b:	movzx  eax,al
  41f22e:	cmp    BYTE PTR [r12+rax*1],0x0
  41f233:	mov    r8,rax
  41f236:	jne    0x41f250
  41f238:	mov    eax,0xffffffff
  41f23d:	add    rsp,0x48
  41f241:	pop    rbx
  41f242:	pop    rsi
  41f243:	pop    rdi
  41f244:	pop    rbp
  41f245:	pop    r12
  41f247:	pop    r13
  41f249:	pop    r14
  41f24b:	pop    r15
  41f24d:	ret    
  41f24e:	xchg   ax,ax
  41f250:	mov    rdx,rsi
  41f253:	mov    rcx,rbx
  41f256:	call   0x40a5a0
  41f25b:	mov    rax,QWORD PTR [rsi]
  41f25e:	mov    rdx,rsi
  41f261:	mov    rcx,rbx
  41f264:	call   QWORD PTR [rax]
  41f266:	mov    eax,DWORD PTR [rsi+0x10]
  41f269:	mov    rdx,rsi
  41f26c:	mov    rcx,rbx
  41f26f:	mov    DWORD PTR [rsi+0x20],eax
  41f272:	call   0x41eef0
  41f277:	mov    rcx,rbx
  41f27a:	call   0x41bbc0
  41f27f:	xor    edx,edx
  41f281:	movzx  r8d,al
  41f285:	mov    rcx,rbx
  41f288:	call   0x41bc50
  41f28d:	mov    eax,DWORD PTR [r13+0x0]
  41f291:	test   eax,eax
  41f293:	jne    0x41f2c0
  41f295:	add    edi,0x1
  41f298:	cmp    WORD PTR [rbp+0x8],di
  41f29c:	ja     0x41f110
  41f2a2:	mov    rcx,rbp
  41f2a5:	add    rsp,0x48
  41f2a9:	pop    rbx
  41f2aa:	pop    rsi
  41f2ab:	pop    rdi
  41f2ac:	pop    rbp
  41f2ad:	pop    r12
  41f2af:	pop    r13
  41f2b1:	pop    r14
  41f2b3:	pop    r15
  41f2b5:	jmp    0x40fc20
  41f2ba:	nop    WORD PTR [rax+rax*1+0x0]
  41f2c0:	lea    r8,[rip+0x18a2b]        # 0x437cf2
  41f2c7:	lea    rcx,[rip+0x18912]        # 0x437be0
  41f2ce:	movzx  r9d,di
  41f2d2:	mov    edx,0x7305
  41f2d7:	call   0x40d350
  41f2dc:	mov    r8d,DWORD PTR [r13+0x0]
  41f2e0:	test   r8d,r8d
  41f2e3:	je     0x41f295
  41f2e5:	mov    r9,QWORD PTR [rsi+0x38]
  41f2e9:	lea    rcx,[rip+0x188f0]        # 0x437be0
  41f2f0:	lea    r8,[rip+0x18a04]        # 0x437cfb
  41f2f7:	mov    edx,0x7315
  41f2fc:	add    r9,0x8
  41f300:	call   0x40d350
  41f305:	mov    ecx,DWORD PTR [r13+0x0]
  41f309:	test   ecx,ecx
  41f30b:	je     0x41f295
  41f30d:	movzx  eax,BYTE PTR [rsi+0x18]
  41f311:	mov    r9d,DWORD PTR [rsi+0xc]
  41f315:	lea    r8,[rip+0x189f4]        # 0x437d10
  41f31c:	lea    rcx,[rip+0x188bd]        # 0x437be0
  41f323:	mov    edx,0x7375
  41f328:	mov    DWORD PTR [rsp+0x30],eax
  41f32c:	mov    eax,DWORD PTR [rsi+0x14]
  41f32f:	mov    DWORD PTR [rsp+0x28],eax
  41f333:	mov    eax,DWORD PTR [rsi+0x8]
  41f336:	mov    DWORD PTR [rsp+0x20],eax
  41f33a:	call   0x40d350
  41f33f:	mov    edx,DWORD PTR [r13+0x0]
  41f343:	test   edx,edx
  41f345:	je     0x41f295
  41f34b:	movzx  eax,BYTE PTR [rsi+0x1a]
  41f34f:	mov    r9d,DWORD PTR [rsi+0x10]
  41f353:	lea    r8,[rip+0x189dc]        # 0x437d36
  41f35a:	lea    rcx,[rip+0x1887f]        # 0x437be0
  41f361:	mov    edx,0x73a5
  41f366:	mov    DWORD PTR [rsp+0x28],eax
  41f36a:	movzx  eax,BYTE PTR [rsi+0x19]
  41f36e:	mov    DWORD PTR [rsp+0x20],eax
  41f372:	call   0x40d350
  41f377:	jmp    0x41f295
  41f37c:	nop    DWORD PTR [rax+0x0]
  41f380:	mov    QWORD PTR [rbx+0x118],rbp
  41f387:	jmp    0x41f0ef
  41f38c:	lea    r8,[rip+0x1893c]        # 0x437ccf
  41f393:	lea    rcx,[rip+0x18846]        # 0x437be0
  41f39a:	mov    edx,0x6d65
  41f39f:	call   0x40d350
  41f3a4:	jmp    0x41f097
  41f3a9:	lea    r8,[rip+0x18935]        # 0x437ce5
  41f3b0:	lea    rcx,[rip+0x18829]        # 0x437be0
  41f3b7:	mov    r9d,esi
  41f3ba:	mov    edx,0x6ee5
  41f3bf:	call   0x40d350
  41f3c4:	jmp    0x41f0fc
  41f3c9:	nop    DWORD PTR [rax+0x0]
  41f3d0:	push   r13
  41f3d2:	push   r12
  41f3d4:	push   rbp
  41f3d5:	push   rdi
  41f3d6:	push   rsi
  41f3d7:	push   rbx
  41f3d8:	sub    rsp,0x48
  41f3dc:	mov    rsi,rcx
  41f3df:	call   0x41bd10
  41f3e4:	mov    rcx,rsi
  41f3e7:	call   0x41bcf0
  41f3ec:	movzx  ecx,ax
  41f3ef:	call   0x412360
  41f3f4:	test   rax,rax
  41f3f7:	mov    rbp,rax
  41f3fa:	je     0x41f4a1
  41f400:	mov    rbx,QWORD PTR [rsi+0x160]
  41f407:	test   rbx,rbx
  41f40a:	je     0x41f5e0
  41f410:	mov    rcx,QWORD PTR [rbx+0x30]
  41f414:	call   0x412420
  41f419:	mov    QWORD PTR [rbx+0x30],rbp
  41f41d:	mov    rdx,rbp
  41f420:	mov    rcx,rsi
  41f423:	xor    edi,edi
  41f425:	call   0x40fb90
  41f42a:	cmp    WORD PTR [rbp+0x8],0x0
  41f42f:	mov    r12,QWORD PTR [rip+0x1c9da]        # 0x43be10
  41f436:	mov    r13,QWORD PTR [rip+0x1c9f3]        # 0x43be30
  41f43d:	je     0x41f507
  41f443:	mov    rdx,QWORD PTR [rbp+0x0]
  41f447:	mov    eax,edi
  41f449:	mov    rcx,rsi
  41f44c:	mov    rbx,QWORD PTR [rdx+rax*8]
  41f450:	call   0x41bbc0
  41f455:	mov    rcx,rsi
  41f458:	movzx  r8d,al
  41f45c:	lea    rdx,[rbx+0x38]
  41f460:	call   0x41bf20
  41f465:	mov    rcx,rsi
  41f468:	call   0x41bd10
  41f46d:	movzx  edx,BYTE PTR [rbx+0x58]
  41f471:	test   al,0x20
  41f473:	mov    DWORD PTR [rbx+0xc],eax
  41f476:	setne  al
  41f479:	mov    rcx,rsi
  41f47c:	and    edx,0xfffffffe
  41f47f:	or     eax,edx
  41f481:	mov    BYTE PTR [rbx+0x58],al
  41f484:	call   0x41bd10
  41f489:	mov    rcx,rsi
  41f48c:	mov    DWORD PTR [rbx+0x8],eax
  41f48f:	call   0x41bbc0
  41f494:	movzx  eax,al
  41f497:	cmp    BYTE PTR [r12+rax*1],0x0
  41f49c:	mov    r8,rax
  41f49f:	jne    0x41f4b3
  41f4a1:	mov    eax,0xffffffff
  41f4a6:	add    rsp,0x48
  41f4aa:	pop    rbx
  41f4ab:	pop    rsi
  41f4ac:	pop    rdi
  41f4ad:	pop    rbp
  41f4ae:	pop    r12
  41f4b0:	pop    r13
  41f4b2:	ret    
  41f4b3:	mov    rdx,rbx
  41f4b6:	mov    rcx,rsi
  41f4b9:	call   0x40a5a0
  41f4be:	mov    rax,QWORD PTR [rbx]
  41f4c1:	mov    rdx,rbx
  41f4c4:	mov    rcx,rsi
  41f4c7:	call   QWORD PTR [rax]
  41f4c9:	mov    eax,DWORD PTR [rbx+0x10]
  41f4cc:	mov    rdx,rbx
  41f4cf:	mov    rcx,rsi
  41f4d2:	mov    DWORD PTR [rbx+0x20],eax
  41f4d5:	call   0x41eef0
  41f4da:	mov    rcx,rsi
  41f4dd:	call   0x41bbc0
  41f4e2:	xor    edx,edx
  41f4e4:	movzx  r8d,al
  41f4e8:	mov    rcx,rsi
  41f4eb:	call   0x41bc50
  41f4f0:	mov    eax,DWORD PTR [r13+0x0]
  41f4f4:	test   eax,eax
  41f4f6:	jne    0x41f520
  41f4f8:	movzx  eax,WORD PTR [rbp+0x8]
  41f4fc:	add    edi,0x1
  41f4ff:	cmp    eax,edi
  41f501:	ja     0x41f443
  41f507:	mov    rcx,rbp
  41f50a:	add    rsp,0x48
  41f50e:	pop    rbx
  41f50f:	pop    rsi
  41f510:	pop    rdi
  41f511:	pop    rbp
  41f512:	pop    r12
  41f514:	pop    r13
  41f516:	jmp    0x40fc20
  41f51b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f520:	lea    r8,[rip+0x1882d]        # 0x437d54
  41f527:	lea    rcx,[rip+0x186b2]        # 0x437be0
  41f52e:	mov    r9d,edi
  41f531:	mov    edx,0xa505
  41f536:	call   0x40d350
  41f53b:	mov    r8d,DWORD PTR [r13+0x0]
  41f53f:	test   r8d,r8d
  41f542:	je     0x41f4f8
  41f544:	mov    r9,QWORD PTR [rbx+0x38]
  41f548:	lea    rcx,[rip+0x18691]        # 0x437be0
  41f54f:	lea    r8,[rip+0x187a5]        # 0x437cfb
  41f556:	mov    edx,0xa515
  41f55b:	add    r9,0x8
  41f55f:	call   0x40d350
  41f564:	mov    ecx,DWORD PTR [r13+0x0]
  41f568:	test   ecx,ecx
  41f56a:	je     0x41f4f8
  41f56c:	movzx  eax,BYTE PTR [rbx+0x18]
  41f570:	mov    r9d,DWORD PTR [rbx+0xc]
  41f574:	lea    r8,[rip+0x18795]        # 0x437d10
  41f57b:	lea    rcx,[rip+0x1865e]        # 0x437be0
  41f582:	mov    edx,0xa525
  41f587:	mov    DWORD PTR [rsp+0x30],eax
  41f58b:	mov    eax,DWORD PTR [rbx+0x14]
  41f58e:	mov    DWORD PTR [rsp+0x28],eax
  41f592:	mov    eax,DWORD PTR [rbx+0x8]
  41f595:	mov    DWORD PTR [rsp+0x20],eax
  41f599:	call   0x40d350
  41f59e:	mov    edx,DWORD PTR [r13+0x0]
  41f5a2:	test   edx,edx
  41f5a4:	je     0x41f4f8
  41f5aa:	movzx  eax,BYTE PTR [rbx+0x1a]
  41f5ae:	mov    r9d,DWORD PTR [rbx+0x10]
  41f5b2:	lea    r8,[rip+0x1877d]        # 0x437d36
  41f5b9:	lea    rcx,[rip+0x18620]        # 0x437be0
  41f5c0:	mov    edx,0xa545
  41f5c5:	mov    DWORD PTR [rsp+0x28],eax
  41f5c9:	movzx  eax,BYTE PTR [rbx+0x19]
  41f5cd:	mov    DWORD PTR [rsp+0x20],eax
  41f5d1:	call   0x40d350
  41f5d6:	jmp    0x41f4f8
  41f5db:	nop    DWORD PTR [rax+rax*1+0x0]
  41f5e0:	mov    rcx,QWORD PTR [rsi+0x130]
  41f5e7:	call   0x412420
  41f5ec:	mov    QWORD PTR [rsi+0x130],rbp
  41f5f3:	jmp    0x41f41d
  41f5f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f600:	push   rsi
  41f601:	push   rbx
  41f602:	sub    rsp,0x28
  41f606:	mov    rbx,QWORD PTR [rcx+0x58]
  41f60a:	mov    rsi,rdx
  41f60d:	test   rbx,rbx
  41f610:	jne    0x41f61c
  41f612:	jmp    0x41f640
  41f614:	mov    rbx,QWORD PTR [rbx]
  41f617:	test   rbx,rbx
  41f61a:	je     0x41f640
  41f61c:	lea    rcx,[rbx+0x10]
  41f620:	mov    rdx,rsi
  41f623:	call   0x42d630
  41f628:	test   eax,eax
  41f62a:	jne    0x41f614
  41f62c:	mov    rax,rbx
  41f62f:	add    rsp,0x28
  41f633:	pop    rbx
  41f634:	pop    rsi
  41f635:	ret    
  41f636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f640:	xor    eax,eax
  41f642:	add    rsp,0x28
  41f646:	pop    rbx
  41f647:	pop    rsi
  41f648:	ret    
  41f649:	nop    DWORD PTR [rax+0x0]
  41f650:	cmp    ecx,0x7c
  41f653:	je     0x41f671
  41f655:	jg     0x41f663
  41f657:	cmp    ecx,0x79
  41f65a:	mov    eax,0x4
  41f65f:	jne    0x41f66e
  41f661:	repz ret 
  41f663:	sub    ecx,0xfd
  41f669:	cmp    ecx,0x2
  41f66c:	jbe    0x41f671
  41f66e:	xor    eax,eax
  41f670:	ret    
  41f671:	mov    eax,0x8
  41f676:	ret    
  41f677:	nop    WORD PTR [rax+rax*1+0x0]
  41f680:	sub    ecx,0x1f
  41f683:	cmp    ecx,0xd2
  41f689:	ja     0x41f9e0
  41f68f:	lea    rax,[rip+0x1888a]        # 0x437f20
  41f696:	movsxd rdx,DWORD PTR [rax+rcx*4]
  41f69a:	add    rax,rdx
  41f69d:	jmp    rax
  41f69f:	nop
  41f6a0:	lea    rax,[rip+0x18847]        # 0x437eee
  41f6a7:	ret    
  41f6a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f6b0:	lea    rax,[rip+0x18832]        # 0x437ee9
  41f6b7:	ret    
  41f6b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f6c0:	lea    rax,[rip+0x17e49]        # 0x437510
  41f6c7:	ret    
  41f6c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f6d0:	lea    rax,[rip+0x186ef]        # 0x437dc6
  41f6d7:	ret    
  41f6d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f6e0:	lea    rax,[rip+0x18696]        # 0x437d7d
  41f6e7:	ret    
  41f6e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f6f0:	lea    rax,[rip+0x18679]        # 0x437d70
  41f6f7:	ret    
  41f6f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f700:	lea    rax,[rip+0x17e21]        # 0x437528
  41f707:	ret    
  41f708:	nop    DWORD PTR [rax+rax*1+0x0]
  41f710:	lea    rax,[rip+0x17e09]        # 0x437520
  41f717:	ret    
  41f718:	nop    DWORD PTR [rax+rax*1+0x0]
  41f720:	lea    rax,[rip+0x17dfd]        # 0x437524
  41f727:	ret    
  41f728:	nop    DWORD PTR [rax+rax*1+0x0]
  41f730:	lea    rax,[rip+0x17dde]        # 0x437515
  41f737:	ret    
  41f738:	nop    DWORD PTR [rax+rax*1+0x0]
  41f740:	lea    rax,[rip+0x186cb]        # 0x437e12
  41f747:	ret    
  41f748:	nop    DWORD PTR [rax+rax*1+0x0]
  41f750:	lea    rax,[rip+0x186ae]        # 0x437e05
  41f757:	ret    
  41f758:	nop    DWORD PTR [rax+rax*1+0x0]
  41f760:	lea    rax,[rip+0x1868c]        # 0x437df3
  41f767:	ret    
  41f768:	nop    DWORD PTR [rax+rax*1+0x0]
  41f770:	lea    rax,[rip+0x1866b]        # 0x437de2
  41f777:	ret    
  41f778:	nop    DWORD PTR [rax+rax*1+0x0]
  41f780:	lea    rax,[rip+0x18628]        # 0x437daf
  41f787:	ret    
  41f788:	nop    DWORD PTR [rax+rax*1+0x0]
  41f790:	lea    rax,[rip+0x185f9]        # 0x437d90
  41f797:	ret    
  41f798:	nop    DWORD PTR [rax+rax*1+0x0]
  41f7a0:	lea    rax,[rip+0x18693]        # 0x437e3a
  41f7a7:	ret    
  41f7a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f7b0:	lea    rax,[rip+0x186b5]        # 0x437e6c
  41f7b7:	ret    
  41f7b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f7c0:	lea    rax,[rip+0x1871e]        # 0x437ee5
  41f7c7:	ret    
  41f7c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f7d0:	lea    rax,[rip+0x186ba]        # 0x437e91
  41f7d7:	ret    
  41f7d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f7e0:	lea    rax,[rip+0x1863b]        # 0x437e22
  41f7e7:	ret    
  41f7e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f7f0:	lea    rax,[rip+0x186ca]        # 0x437ec1
  41f7f7:	ret    
  41f7f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f800:	lea    rax,[rip+0x1855e]        # 0x437d65
  41f807:	ret    
  41f808:	nop    DWORD PTR [rax+rax*1+0x0]
  41f810:	lea    rax,[rip+0x186f5]        # 0x437f0c
  41f817:	ret    
  41f818:	nop    DWORD PTR [rax+rax*1+0x0]
  41f820:	lea    rax,[rip+0x1858e]        # 0x437db5
  41f827:	ret    
  41f828:	nop    DWORD PTR [rax+rax*1+0x0]
  41f830:	lea    rax,[rip+0x1862d]        # 0x437e64
  41f837:	ret    
  41f838:	nop    DWORD PTR [rax+rax*1+0x0]
  41f840:	lea    rax,[rip+0x18560]        # 0x437da7
  41f847:	ret    
  41f848:	nop    DWORD PTR [rax+rax*1+0x0]
  41f850:	lea    rax,[rip+0x1851d]        # 0x437d74
  41f857:	ret    
  41f858:	nop    DWORD PTR [rax+rax*1+0x0]
  41f860:	lea    rax,[rip+0x18647]        # 0x437eae
  41f867:	ret    
  41f868:	nop    DWORD PTR [rax+rax*1+0x0]
  41f870:	lea    rax,[rip+0x1862f]        # 0x437ea6
  41f877:	ret    
  41f878:	nop    DWORD PTR [rax+rax*1+0x0]
  41f880:	lea    rax,[rip+0x18655]        # 0x437edc
  41f887:	ret    
  41f888:	nop    DWORD PTR [rax+rax*1+0x0]
  41f890:	lea    rax,[rip+0x1863a]        # 0x437ed1
  41f897:	ret    
  41f898:	nop    DWORD PTR [rax+rax*1+0x0]
  41f8a0:	lea    rax,[rip+0x18534]        # 0x437ddb
  41f8a7:	ret    
  41f8a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f8b0:	lea    rax,[rip+0x18578]        # 0x437e2f
  41f8b7:	ret    
  41f8b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f8c0:	lea    rax,[rip+0x184d2]        # 0x437d99
  41f8c7:	ret    
  41f8c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f8d0:	lea    rax,[rip+0x18569]        # 0x437e40
  41f8d7:	ret    
  41f8d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f8e0:	lea    rax,[rip+0x185a0]        # 0x437e87
  41f8e7:	ret    
  41f8e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f8f0:	lea    rax,[rip+0x1857f]        # 0x437e76
  41f8f7:	ret    
  41f8f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f900:	lea    rax,[rip+0x1856a]        # 0x437e71
  41f907:	ret    
  41f908:	nop    DWORD PTR [rax+rax*1+0x0]
  41f910:	lea    rax,[rip+0x184a9]        # 0x437dc0
  41f917:	ret    
  41f918:	nop    DWORD PTR [rax+rax*1+0x0]
  41f920:	lea    rax,[rip+0x1857a]        # 0x437ea1
  41f927:	ret    
  41f928:	nop    DWORD PTR [rax+rax*1+0x0]
  41f930:	lea    rax,[rip+0x18427]        # 0x437d5e
  41f937:	ret    
  41f938:	nop    DWORD PTR [rax+rax*1+0x0]
  41f940:	lea    rax,[rip+0x185b6]        # 0x437efd
  41f947:	ret    
  41f948:	nop    DWORD PTR [rax+rax*1+0x0]
  41f950:	lea    rax,[rip+0x1859c]        # 0x437ef3
  41f957:	ret    
  41f958:	nop    DWORD PTR [rax+rax*1+0x0]
  41f960:	lea    rax,[rip+0x1854d]        # 0x437eb4
  41f967:	ret    
  41f968:	nop    DWORD PTR [rax+rax*1+0x0]
  41f970:	lea    rax,[rip+0x184df]        # 0x437e56
  41f977:	ret    
  41f978:	nop    DWORD PTR [rax+rax*1+0x0]
  41f980:	lea    rax,[rip+0x184c4]        # 0x437e4b
  41f987:	ret    
  41f988:	nop    DWORD PTR [rax+rax*1+0x0]
  41f990:	lea    rax,[rip+0x18502]        # 0x437e99
  41f997:	ret    
  41f998:	nop    DWORD PTR [rax+rax*1+0x0]
  41f9a0:	lea    rax,[rip+0x183db]        # 0x437d82
  41f9a7:	ret    
  41f9a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f9b0:	lea    rax,[rip+0x18420]        # 0x437dd7
  41f9b7:	ret    
  41f9b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f9c0:	lea    rax,[rip+0x18407]        # 0x437dce
  41f9c7:	ret    
  41f9c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f9d0:	lea    rax,[rip+0x1853d]        # 0x437f14
  41f9d7:	ret    
  41f9d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f9e0:	lea    rax,[rip+0x17b2d]        # 0x437514
  41f9e7:	ret    
  41f9e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f9f0:	push   rbp
  41f9f1:	push   rdi
  41f9f2:	push   rsi
  41f9f3:	push   rbx
  41f9f4:	sub    rsp,0x48
  41f9f8:	mov    rdi,QWORD PTR [rip+0x1c431]        # 0x43be30
  41f9ff:	mov    rsi,rcx
  41fa02:	mov    rbx,rdx
  41fa05:	mov    ebp,r8d
  41fa08:	mov    ecx,DWORD PTR [rdi]
  41fa0a:	test   ecx,ecx
  41fa0c:	jne    0x41fb90
  41fa12:	mov    rcx,rsi
  41fa15:	call   0x41bbc0
  41fa1a:	lea    rdx,[rbx+0x38]
  41fa1e:	movzx  r8d,al
  41fa22:	mov    rcx,rsi
  41fa25:	call   0x41bf20
  41fa2a:	mov    rcx,rsi
  41fa2d:	call   0x41bbc0
  41fa32:	test   ebp,ebp
  41fa34:	movzx  edx,al
  41fa37:	mov    DWORD PTR [rbx+0xc],edx
  41fa3a:	jne    0x41fa91
  41fa3c:	cmp    WORD PTR [rsi],0x500
  41fa41:	je     0x41fb30
  41fa47:	mov    edx,eax
  41fa49:	movzx  r8d,BYTE PTR [rbx+0x58]
  41fa4e:	mov    ecx,eax
  41fa50:	and    edx,0x2
  41fa53:	cmp    edx,0x1
  41fa56:	setg   dl
  41fa59:	and    ecx,0x10
  41fa5c:	shl    edx,0x3
  41fa5f:	and    r8d,0xfffffff5
  41fa63:	cmp    ecx,0x1
  41fa66:	setg   cl
  41fa69:	or     edx,r8d
  41fa6c:	add    ecx,ecx
  41fa6e:	or     edx,ecx
  41fa70:	mov    ecx,eax
  41fa72:	and    ecx,0x20
  41fa75:	cmp    ecx,0x1
  41fa78:	setg   cl
  41fa7b:	and    eax,0x40
  41fa7e:	and    edx,0xfffffffa
  41fa81:	cmp    eax,0x1
  41fa84:	setg   al
  41fa87:	or     edx,ecx
  41fa89:	shl    eax,0x2
  41fa8c:	or     edx,eax
  41fa8e:	mov    BYTE PTR [rbx+0x58],dl
  41fa91:	cmp    WORD PTR [rsi],0x701
  41fa96:	ja     0x41fb12
  41fa98:	mov    rcx,rsi
  41fa9b:	call   0x41bd10
  41faa0:	mov    rcx,rsi
  41faa3:	mov    DWORD PTR [rbx+0x8],eax
  41faa6:	call   0x41bbc0
  41faab:	mov    rdx,QWORD PTR [rip+0x1c35e]        # 0x43be10
  41fab2:	movzx  eax,al
  41fab5:	mov    r8,rax
  41fab8:	cmp    BYTE PTR [rdx+rax*1],0x0
  41fabc:	jne    0x41fad0
  41fabe:	mov    eax,0xffffffff
  41fac3:	add    rsp,0x48
  41fac7:	pop    rbx
  41fac8:	pop    rsi
  41fac9:	pop    rdi
  41faca:	pop    rbp
  41facb:	ret    
  41facc:	nop    DWORD PTR [rax+0x0]
  41fad0:	mov    rdx,rbx
  41fad3:	mov    rcx,rsi
  41fad6:	call   0x40a5a0
  41fadb:	mov    eax,DWORD PTR [rdi]
  41fadd:	test   eax,eax
  41fadf:	jne    0x41fb50
  41fae1:	mov    rax,QWORD PTR [rbx]
  41fae4:	mov    rdx,rbx
  41fae7:	mov    rcx,rsi
  41faea:	call   QWORD PTR [rax]
  41faec:	mov    edx,DWORD PTR [rdi]
  41faee:	test   edx,edx
  41faf0:	jne    0x41fbd4
  41faf6:	mov    eax,DWORD PTR [rbx+0x10]
  41faf9:	mov    rdx,rbx
  41fafc:	mov    rcx,rsi
  41faff:	mov    DWORD PTR [rbx+0x20],eax
  41fb02:	call   0x41eef0
  41fb07:	xor    eax,eax
  41fb09:	add    rsp,0x48
  41fb0d:	pop    rbx
  41fb0e:	pop    rsi
  41fb0f:	pop    rdi
  41fb10:	pop    rbp
  41fb11:	ret    
  41fb12:	mov    r8d,0x2
  41fb18:	xor    edx,edx
  41fb1a:	mov    rcx,rsi
  41fb1d:	call   0x41bc50
  41fb22:	jmp    0x41fa98
  41fb27:	nop    WORD PTR [rax+rax*1+0x0]
  41fb30:	movzx  ecx,BYTE PTR [rbx+0x58]
  41fb34:	mov    edx,eax
  41fb36:	and    edx,0x1
  41fb39:	shl    edx,0x4
  41fb3c:	and    ecx,0xffffffef
  41fb3f:	or     edx,ecx
  41fb41:	mov    BYTE PTR [rbx+0x58],dl
  41fb44:	jmp    0x41fa47
  41fb49:	nop    DWORD PTR [rax+0x0]
  41fb50:	mov    ebp,DWORD PTR [rbx+0x14]
  41fb53:	mov    ecx,ebp
  41fb55:	call   0x41f680
  41fb5a:	movzx  edx,BYTE PTR [rbx+0x18]
  41fb5e:	lea    r8,[rip+0x18743]        # 0x4382a8
  41fb65:	lea    rcx,[rip+0x18074]        # 0x437be0
  41fb6c:	mov    QWORD PTR [rsp+0x20],rax
  41fb71:	mov    r9d,ebp
  41fb74:	mov    DWORD PTR [rsp+0x28],edx
  41fb78:	mov    edx,0x6895
  41fb7d:	call   0x40d350
  41fb82:	jmp    0x41fae1
  41fb87:	nop    WORD PTR [rax+rax*1+0x0]
  41fb90:	lea    rdx,[rip+0x1797d]        # 0x437514
  41fb97:	lea    rax,[rip+0x186ce]        # 0x43826c
  41fb9e:	test   r8d,r8d
  41fba1:	mov    DWORD PTR [rsp+0x28],r8d
  41fba6:	lea    rcx,[rip+0x18033]        # 0x437be0
  41fbad:	lea    r8,[rip+0x186cc]        # 0x438280
  41fbb4:	cmove  rax,rdx
  41fbb8:	mov    QWORD PTR [rsp+0x20],rbx
  41fbbd:	mov    r9,rsi
  41fbc0:	mov    QWORD PTR [rsp+0x30],rax
  41fbc5:	mov    edx,0x64b5
  41fbca:	call   0x40d350
  41fbcf:	jmp    0x41fa12
  41fbd4:	mov    r9d,DWORD PTR [rbx+0x10]
  41fbd8:	lea    r8,[rip+0x18701]        # 0x4382e0
  41fbdf:	lea    rcx,[rip+0x17ffa]        # 0x437be0
  41fbe6:	mov    edx,0x68e5
  41fbeb:	call   0x40d350
  41fbf0:	jmp    0x41faf6
  41fbf5:	nop
  41fbf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fc00:	push   rbp
  41fc01:	push   rdi
  41fc02:	push   rsi
  41fc03:	push   rbx
  41fc04:	sub    rsp,0x48
  41fc08:	mov    rbp,QWORD PTR [rip+0x1c221]        # 0x43be30
  41fc0f:	mov    rsi,rcx
  41fc12:	mov    rdi,rdx
  41fc15:	mov    ecx,DWORD PTR [rbp+0x0]
  41fc18:	test   ecx,ecx
  41fc1a:	jne    0x41fcb0
  41fc20:	mov    rcx,rsi
  41fc23:	call   0x41bcf0
  41fc28:	mov    rcx,QWORD PTR [rdi]
  41fc2b:	call   0x412e70
  41fc30:	test   rax,rax
  41fc33:	je     0x41fcf0
  41fc39:	movzx  edx,WORD PTR [rax+0x8]
  41fc3d:	mov    QWORD PTR [rdi],rax
  41fc40:	mov    r8d,0x1
  41fc46:	mov    rax,QWORD PTR [rax]
  41fc49:	mov    rcx,rsi
  41fc4c:	mov    rbx,QWORD PTR [rax+rdx*8-0x8]
  41fc51:	mov    rdx,rbx
  41fc54:	call   0x41f9f0
  41fc59:	mov    eax,DWORD PTR [rbx+0x10]
  41fc5c:	mov    rcx,rbx
  41fc5f:	mov    DWORD PTR [rbx+0x64],eax
  41fc62:	call   0x40fb00
  41fc67:	test   rax,rax
  41fc6a:	je     0x41fcf0
  41fc70:	mov    rax,QWORD PTR [rbx]
  41fc73:	mov    rdx,rbx
  41fc76:	mov    rcx,rsi
  41fc79:	call   QWORD PTR [rax+0x8]
  41fc7c:	mov    edx,DWORD PTR [rbp+0x0]
  41fc7f:	test   edx,edx
  41fc81:	jne    0x41fcd5
  41fc83:	mov    rdx,QWORD PTR [rbx+0x38]
  41fc87:	cmp    QWORD PTR [rdx],0x0
  41fc8b:	je     0x41fca3
  41fc8d:	cmp    BYTE PTR [rdx+0x8],0x40
  41fc91:	je     0x41fca3
  41fc93:	mov    rcx,QWORD PTR [rdi]
  41fc96:	mov    DWORD PTR [rsp+0x3c],eax
  41fc9a:	call   0x40fa80
  41fc9f:	mov    eax,DWORD PTR [rsp+0x3c]
  41fca3:	add    rsp,0x48
  41fca7:	pop    rbx
  41fca8:	pop    rsi
  41fca9:	pop    rdi
  41fcaa:	pop    rbp
  41fcab:	ret    
  41fcac:	nop    DWORD PTR [rax+0x0]
  41fcb0:	lea    r8,[rip+0x18651]        # 0x438308
  41fcb7:	lea    rcx,[rip+0x17f22]        # 0x437be0
  41fcbe:	mov    QWORD PTR [rsp+0x20],rdx
  41fcc3:	mov    r9,rsi
  41fcc6:	mov    edx,0x4f37
  41fccb:	call   0x40d350
  41fcd0:	jmp    0x41fc20
  41fcd5:	mov    rcx,rbx
  41fcd8:	mov    DWORD PTR [rsp+0x3c],eax
  41fcdc:	call   0x40d6d0
  41fce1:	mov    eax,DWORD PTR [rsp+0x3c]
  41fce5:	jmp    0x41fc83
  41fce7:	nop    WORD PTR [rax+rax*1+0x0]
  41fcf0:	mov    eax,0xffffffff
  41fcf5:	jmp    0x41fca3
  41fcf7:	nop    WORD PTR [rax+rax*1+0x0]
  41fd00:	push   rsi
  41fd01:	push   rbx
  41fd02:	sub    rsp,0x38
  41fd06:	mov    rdx,QWORD PTR [rcx+0x160]
  41fd0d:	lea    rax,[rcx+0x130]
  41fd14:	mov    rbx,rcx
  41fd17:	lea    rsi,[rdx+0x30]
  41fd1b:	test   rdx,rdx
  41fd1e:	cmove  rsi,rax
  41fd22:	jmp    0x41fd2f
  41fd24:	mov    rdx,rsi
  41fd27:	mov    rcx,rbx
  41fd2a:	call   0x41fc00
  41fd2f:	mov    rcx,rbx
  41fd32:	call   0x41bbc0
  41fd37:	movzx  eax,al
  41fd3a:	cmp    eax,0xac
  41fd3f:	je     0x41fd24
  41fd41:	test   eax,eax
  41fd43:	jne    0x41fd60
  41fd45:	mov    rdx,QWORD PTR [rip+0x1c0e4]        # 0x43be30
  41fd4c:	mov    eax,0xffffffff
  41fd51:	mov    edx,DWORD PTR [rdx]
  41fd53:	test   edx,edx
  41fd55:	jne    0x41fd7c
  41fd57:	add    rsp,0x38
  41fd5b:	pop    rbx
  41fd5c:	pop    rsi
  41fd5d:	ret    
  41fd5e:	xchg   ax,ax
  41fd60:	mov    rdx,QWORD PTR [rsi]
  41fd63:	mov    rcx,rbx
  41fd66:	call   0x40fb90
  41fd6b:	mov    rcx,rbx
  41fd6e:	call   0x41bc10
  41fd73:	xor    eax,eax
  41fd75:	add    rsp,0x38
  41fd79:	pop    rbx
  41fd7a:	pop    rsi
  41fd7b:	ret    
  41fd7c:	lea    r8,[rip+0x185ad]        # 0x438330
  41fd83:	lea    rcx,[rip+0x17e56]        # 0x437be0
  41fd8a:	mov    edx,0x5357
  41fd8f:	mov    DWORD PTR [rsp+0x2c],eax
  41fd93:	call   0x40d350
  41fd98:	mov    eax,DWORD PTR [rsp+0x2c]
  41fd9c:	jmp    0x41fd57
  41fd9e:	xchg   ax,ax
  41fda0:	push   rdi
  41fda1:	push   rsi
  41fda2:	push   rbx
  41fda3:	sub    rsp,0x20
  41fda7:	mov    rsi,rcx
  41fdaa:	call   0x4125b0
  41fdaf:	mov    rcx,rsi
  41fdb2:	mov    QWORD PTR [rsi+0x150],0xffffffffffffffff
  41fdbd:	call   0x41bcf0
  41fdc2:	mov    rcx,rsi
  41fdc5:	call   0x41bcf0
  41fdca:	movzx  ecx,ax
  41fdcd:	call   0x412360
  41fdd2:	test   rax,rax
  41fdd5:	mov    rdi,rax
  41fdd8:	je     0x41fe4d
  41fdda:	mov    rdx,rax
  41fddd:	mov    rcx,rsi
  41fde0:	call   0x40fb90
  41fde5:	mov    rax,QWORD PTR [rsi+0x138]
  41fdec:	test   rax,rax
  41fdef:	je     0x41fe44
  41fdf1:	mov    QWORD PTR [rax+0x48],rdi
  41fdf5:	xor    ebx,ebx
  41fdf7:	cmp    WORD PTR [rdi+0x8],0x0
  41fdfc:	je     0x41fe35
  41fdfe:	xchg   ax,ax
  41fe00:	mov    rax,QWORD PTR [rdi]
  41fe03:	mov    edx,ebx
  41fe05:	xor    r8d,r8d
  41fe08:	mov    rcx,rsi
  41fe0b:	add    ebx,0x1
  41fe0e:	mov    rdx,QWORD PTR [rax+rdx*8]
  41fe12:	call   0x41f9f0
  41fe17:	mov    rcx,rsi
  41fe1a:	call   0x41bbc0
  41fe1f:	xor    edx,edx
  41fe21:	movzx  r8d,al
  41fe25:	mov    rcx,rsi
  41fe28:	call   0x41bc50
  41fe2d:	movzx  eax,WORD PTR [rdi+0x8]
  41fe31:	cmp    eax,ebx
  41fe33:	ja     0x41fe00
  41fe35:	mov    rcx,rdi
  41fe38:	add    rsp,0x20
  41fe3c:	pop    rbx
  41fe3d:	pop    rsi
  41fe3e:	pop    rdi
  41fe3f:	jmp    0x40fc20
  41fe44:	mov    QWORD PTR [rsi+0x118],rdi
  41fe4b:	jmp    0x41fdf5
  41fe4d:	mov    eax,0xffffffff
  41fe52:	add    rsp,0x20
  41fe56:	pop    rbx
  41fe57:	pop    rsi
  41fe58:	pop    rdi
  41fe59:	ret    
  41fe5a:	nop    WORD PTR [rax+rax*1+0x0]
  41fe60:	push   rdi
  41fe61:	push   rsi
  41fe62:	push   rbx
  41fe63:	sub    rsp,0x20
  41fe67:	mov    rsi,rcx
  41fe6a:	call   0x41bcf0
  41fe6f:	mov    rcx,rsi
  41fe72:	call   0x41bcf0
  41fe77:	movzx  ecx,ax
  41fe7a:	call   0x412360
  41fe7f:	test   rax,rax
  41fe82:	mov    rdi,rax
  41fe85:	je     0x41ff28
  41fe8b:	mov    rbx,QWORD PTR [rsi+0x160]
  41fe92:	test   rbx,rbx
  41fe95:	je     0x41ff10
  41fe97:	mov    rcx,QWORD PTR [rbx+0x30]
  41fe9b:	call   0x412420
  41fea0:	mov    QWORD PTR [rbx+0x30],rdi
  41fea4:	mov    rdx,rdi
  41fea7:	mov    rcx,rsi
  41feaa:	xor    ebx,ebx
  41feac:	call   0x40fb90
  41feb1:	cmp    WORD PTR [rdi+0x8],0x0
  41feb6:	je     0x41fef8
  41feb8:	nop    DWORD PTR [rax+rax*1+0x0]
  41fec0:	mov    rax,QWORD PTR [rdi]
  41fec3:	mov    edx,ebx
  41fec5:	mov    r8d,0x1
  41fecb:	mov    rcx,rsi
  41fece:	add    ebx,0x1
  41fed1:	mov    rdx,QWORD PTR [rax+rdx*8]
  41fed5:	call   0x41f9f0
  41feda:	mov    rcx,rsi
  41fedd:	call   0x41bbc0
  41fee2:	xor    edx,edx
  41fee4:	movzx  r8d,al
  41fee8:	mov    rcx,rsi
  41feeb:	call   0x41bc50
  41fef0:	movzx  eax,WORD PTR [rdi+0x8]
  41fef4:	cmp    eax,ebx
  41fef6:	ja     0x41fec0
  41fef8:	mov    rcx,rdi
  41fefb:	add    rsp,0x20
  41feff:	pop    rbx
  41ff00:	pop    rsi
  41ff01:	pop    rdi
  41ff02:	jmp    0x40fc20
  41ff07:	nop    WORD PTR [rax+rax*1+0x0]
  41ff10:	mov    rcx,QWORD PTR [rsi+0x130]
  41ff17:	call   0x412420
  41ff1c:	mov    QWORD PTR [rsi+0x130],rdi
  41ff23:	jmp    0x41fea4
  41ff28:	mov    eax,0xffffffff
  41ff2d:	add    rsp,0x20
  41ff31:	pop    rbx
  41ff32:	pop    rsi
  41ff33:	pop    rdi
  41ff34:	ret    
  41ff35:	nop
  41ff36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ff40:	push   rbp
  41ff41:	push   rdi
  41ff42:	push   rsi
  41ff43:	push   rbx
  41ff44:	sub    rsp,0x68
  41ff48:	mov    rsi,rcx
  41ff4b:	mov    rbx,rdx
  41ff4e:	cmp    WORD PTR [rsi],0x701
  41ff53:	jbe    0x41ffd0
  41ff55:	call   0x41bd10
  41ff5a:	mov    rcx,rsi
  41ff5d:	mov    DWORD PTR [rbx+0x8],eax
  41ff60:	call   0x41bcf0
  41ff65:	movzx  edx,BYTE PTR [rbx+0x58]
  41ff69:	cwde   
  41ff6a:	mov    r8d,eax
  41ff6d:	mov    DWORD PTR [rbx+0xc],eax
  41ff70:	and    eax,0x1
  41ff73:	and    edx,0xfffffffc
  41ff76:	test   r8b,0x8
  41ff7a:	setne  cl
  41ff7d:	or     eax,edx
  41ff7f:	add    ecx,ecx
  41ff81:	or     eax,ecx
  41ff83:	and    r8d,0x10
  41ff87:	mov    edx,eax
  41ff89:	setne  al
  41ff8c:	lea    ecx,[rax*4+0x0]
  41ff93:	mov    eax,edx
  41ff95:	and    eax,0xfffffffb
  41ff98:	or     eax,ecx
  41ff9a:	mov    rcx,rsi
  41ff9d:	mov    BYTE PTR [rbx+0x58],al
  41ffa0:	call   0x41bbc0
  41ffa5:	mov    rdx,QWORD PTR [rip+0x1be64]        # 0x43be10
  41ffac:	movzx  eax,al
  41ffaf:	mov    r8,rax
  41ffb2:	cmp    BYTE PTR [rdx+rax*1],0x0
  41ffb6:	jne    0x41ffe0
  41ffb8:	mov    eax,0xffffffff
  41ffbd:	add    rsp,0x68
  41ffc1:	pop    rbx
  41ffc2:	pop    rsi
  41ffc3:	pop    rdi
  41ffc4:	pop    rbp
  41ffc5:	ret    
  41ffc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ffd0:	call   0x41bcf0
  41ffd5:	cwde   
  41ffd6:	jmp    0x41ff5a
  41ffd8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ffe0:	mov    rdx,rbx
  41ffe3:	mov    rcx,rsi
  41ffe6:	call   0x40a5a0
  41ffeb:	xor    eax,eax
  41ffed:	cmp    DWORD PTR [rbx+0x14],0x2d
  41fff1:	je     0x4200b4
  41fff7:	movzx  edx,BYTE PTR [rbx+0x58]
  41fffb:	shl    eax,0x6
  41fffe:	mov    rcx,rsi
  420001:	and    edx,0xffffffbf
  420004:	or     eax,edx
  420006:	mov    rdx,rbx
  420009:	mov    BYTE PTR [rbx+0x58],al
  42000c:	mov    rax,QWORD PTR [rbx]
  42000f:	call   QWORD PTR [rax]
  420011:	mov    eax,DWORD PTR [rbx+0x10]
  420014:	mov    rdx,rbx
  420017:	mov    rcx,rsi
  42001a:	mov    DWORD PTR [rbx+0x20],eax
  42001d:	call   0x41eef0
  420022:	mov    rcx,rsi
  420025:	call   0x41bbc0
  42002a:	lea    rdx,[rbx+0x38]
  42002e:	movzx  r8d,al
  420032:	mov    rcx,rsi
  420035:	call   0x41bf20
  42003a:	mov    rax,QWORD PTR [rip+0x1bdef]        # 0x43be30
  420041:	mov    eax,DWORD PTR [rax]
  420043:	test   eax,eax
  420045:	je     0x41ffbd
  42004b:	mov    edi,DWORD PTR [rbx+0x1c]
  42004e:	mov    ecx,edi
  420050:	call   0x41f680
  420055:	mov    esi,DWORD PTR [rbx+0x14]
  420058:	mov    rbp,rax
  42005b:	mov    ecx,esi
  42005d:	call   0x41f680
  420062:	mov    rcx,rax
  420065:	mov    eax,DWORD PTR [rbx+0x20]
  420068:	mov    rdx,QWORD PTR [rbx+0x38]
  42006c:	mov    QWORD PTR [rsp+0x28],rcx
  420071:	lea    r8,[rip+0x182f0]        # 0x438368
  420078:	lea    rcx,[rip+0x17b61]        # 0x437be0
  42007f:	mov    QWORD PTR [rsp+0x38],rbp
  420084:	mov    DWORD PTR [rsp+0x30],edi
  420088:	mov    DWORD PTR [rsp+0x50],eax
  42008c:	mov    eax,DWORD PTR [rbx+0x10]
  42008f:	lea    r9,[rdx+0x8]
  420093:	mov    DWORD PTR [rsp+0x20],esi
  420097:	mov    edx,0x5e35
  42009c:	mov    DWORD PTR [rsp+0x48],eax
  4200a0:	movzx  eax,BYTE PTR [rbx+0x18]
  4200a4:	mov    DWORD PTR [rsp+0x40],eax
  4200a8:	call   0x40d350
  4200ad:	xor    eax,eax
  4200af:	jmp    0x41ffbd
  4200b4:	cmp    DWORD PTR [rbx+0x8],0x50
  4200b8:	sete   al
  4200bb:	jmp    0x41fff7
  4200c0:	push   r13
  4200c2:	push   r12
  4200c4:	push   rbp
  4200c5:	push   rdi
  4200c6:	push   rsi
  4200c7:	push   rbx
  4200c8:	sub    rsp,0x58
  4200cc:	mov    rbp,QWORD PTR [rip+0x1bd5d]        # 0x43be30
  4200d3:	mov    rdi,rcx
  4200d6:	mov    ebx,DWORD PTR [rbp+0x0]
  4200d9:	test   ebx,ebx
  4200db:	jne    0x4202d0
  4200e1:	mov    rcx,rdi
  4200e4:	call   0x41bcf0
  4200e9:	movsx  r13d,ax
  4200ed:	test   r13d,r13d
  4200f0:	js     0x420230
  4200f6:	mov    rcx,rdi
  4200f9:	call   0x4125b0
  4200fe:	mov    QWORD PTR [rdi+0x150],0xffffffffffffffff
  420109:	movzx  ecx,r13w
  42010d:	call   0x412360
  420112:	test   rax,rax
  420115:	mov    rsi,rax
  420118:	je     0x4203b8
  42011e:	mov    rdx,rax
  420121:	mov    rcx,rdi
  420124:	call   0x40fb90
  420129:	mov    rax,QWORD PTR [rdi+0x138]
  420130:	test   rax,rax
  420133:	je     0x420250
  420139:	mov    rcx,QWORD PTR [rax+0x48]
  42013d:	call   0x412210
  420142:	mov    r11d,DWORD PTR [rbp+0x0]
  420146:	mov    rax,QWORD PTR [rdi+0x138]
  42014d:	test   r11d,r11d
  420150:	mov    QWORD PTR [rax+0x48],rsi
  420154:	jne    0x42039b
  42015a:	test   r13d,r13d
  42015d:	je     0x420213
  420163:	lea    eax,[r13-0x1]
  420167:	xor    ebx,ebx
  420169:	lea    r12,[rax*8+0x8]
  420171:	mov    rax,QWORD PTR [rsi]
  420174:	mov    rcx,rdi
  420177:	mov    rdx,QWORD PTR [rax+rbx*1]
  42017b:	add    rbx,0x8
  42017f:	call   0x41ff40
  420184:	cmp    rbx,r12
  420187:	jne    0x420171
  420189:	mov    r8d,DWORD PTR [rbp+0x0]
  42018d:	test   r8d,r8d
  420190:	jne    0x42030c
  420196:	test   r13d,r13d
  420199:	je     0x420213
  42019b:	lea    eax,[r13-0x1]
  42019f:	xor    ebx,ebx
  4201a1:	lea    rdi,[rax*8+0x8]
  4201a9:	jmp    0x4201b9
  4201ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4201b0:	add    rbx,0x8
  4201b4:	cmp    rbx,rdi
  4201b7:	je     0x420213
  4201b9:	mov    edx,DWORD PTR [rbp+0x0]
  4201bc:	mov    rax,QWORD PTR [rsi]
  4201bf:	test   edx,edx
  4201c1:	mov    rax,QWORD PTR [rax+rbx*1]
  4201c5:	je     0x4201b0
  4201c7:	mov    ecx,DWORD PTR [rax+0x8]
  4201ca:	mov    rdx,QWORD PTR [rax+0x38]
  4201ce:	lea    r8,[rip+0x1831e]        # 0x4384f3
  4201d5:	add    rbx,0x8
  4201d9:	mov    DWORD PTR [rsp+0x40],ecx
  4201dd:	mov    ecx,DWORD PTR [rax+0x1c]
  4201e0:	lea    r9,[rdx+0x8]
  4201e4:	mov    edx,0x6315
  4201e9:	mov    DWORD PTR [rsp+0x38],ecx
  4201ed:	mov    ecx,DWORD PTR [rax+0x14]
  4201f0:	mov    DWORD PTR [rsp+0x30],ecx
  4201f4:	mov    ecx,DWORD PTR [rax+0x20]
  4201f7:	mov    DWORD PTR [rsp+0x28],ecx
  4201fb:	mov    eax,DWORD PTR [rax+0x10]
  4201fe:	lea    rcx,[rip+0x179db]        # 0x437be0
  420205:	mov    DWORD PTR [rsp+0x20],eax
  420209:	call   0x40d350
  42020e:	cmp    rbx,rdi
  420211:	jne    0x4201b9
  420213:	mov    rcx,rsi
  420216:	add    rsp,0x58
  42021a:	pop    rbx
  42021b:	pop    rsi
  42021c:	pop    rdi
  42021d:	pop    rbp
  42021e:	pop    r12
  420220:	pop    r13
  420222:	jmp    0x40fc20
  420227:	nop    WORD PTR [rax+rax*1+0x0]
  420230:	mov    eax,DWORD PTR [rbp+0x0]
  420233:	test   eax,eax
  420235:	jne    0x4202ed
  42023b:	add    rsp,0x58
  42023f:	pop    rbx
  420240:	pop    rsi
  420241:	pop    rdi
  420242:	pop    rbp
  420243:	pop    r12
  420245:	pop    r13
  420247:	ret    
  420248:	nop    DWORD PTR [rax+rax*1+0x0]
  420250:	mov    r10d,DWORD PTR [rbp+0x0]
  420254:	mov    QWORD PTR [rdi+0x118],rsi
  42025b:	test   r10d,r10d
  42025e:	je     0x42015a
  420264:	lea    rdx,[rip+0x18184]        # 0x4383ef
  42026b:	lea    rax,[rip+0x172a2]        # 0x437514
  420272:	cmp    r13d,0x1
  420276:	lea    r8,[rip+0x181db]        # 0x438458
  42027d:	lea    rcx,[rip+0x1795c]        # 0x437be0
  420284:	mov    r9d,r13d
  420287:	cmovne rax,rdx
  42028b:	mov    edx,0x61b5
  420290:	mov    QWORD PTR [rsp+0x20],rax
  420295:	call   0x40d350
  42029a:	mov    r9d,DWORD PTR [rbp+0x0]
  42029e:	test   r9d,r9d
  4202a1:	je     0x42015a
  4202a7:	lea    r8,[rip+0x181de]        # 0x43848c
  4202ae:	lea    rcx,[rip+0x1792b]        # 0x437be0
  4202b5:	mov    r9d,r13d
  4202b8:	mov    edx,0x6225
  4202bd:	call   0x40d350
  4202c2:	jmp    0x42015a
  4202c7:	nop    WORD PTR [rax+rax*1+0x0]
  4202d0:	lea    r8,[rip+0x18121]        # 0x4383f8
  4202d7:	lea    rcx,[rip+0x17902]        # 0x437be0
  4202de:	mov    edx,0x6025
  4202e3:	call   0x40d350
  4202e8:	jmp    0x4200e1
  4202ed:	lea    r8,[rip+0x18126]        # 0x43841a
  4202f4:	lea    rcx,[rip+0x178e5]        # 0x437be0
  4202fb:	mov    edx,0x60b5
  420300:	call   0x40d350
  420305:	xor    eax,eax
  420307:	jmp    0x42023b
  42030c:	lea    rax,[rip+0x181ae]        # 0x4384c1
  420313:	lea    rcx,[rip+0x178c6]        # 0x437be0
  42031a:	lea    r9,[rip+0x18182]        # 0x4384a3
  420321:	lea    r8,[rip+0x18180]        # 0x4384a8
  420328:	mov    edx,0x62b5
  42032d:	mov    QWORD PTR [rsp+0x30],rax
  420332:	lea    rax,[rip+0x1818e]        # 0x4384c7
  420339:	mov    QWORD PTR [rsp+0x28],rax
  42033e:	lea    rax,[rip+0x1818d]        # 0x4384d2
  420345:	mov    QWORD PTR [rsp+0x20],rax
  42034a:	call   0x40d350
  42034f:	mov    ecx,DWORD PTR [rbp+0x0]
  420352:	test   ecx,ecx
  420354:	je     0x420196
  42035a:	lea    rax,[rip+0x19466]        # 0x4397c7
  420361:	lea    r9,[rip+0x19452]        # 0x4397ba
  420368:	lea    r8,[rip+0x1816e]        # 0x4384dd
  42036f:	lea    rcx,[rip+0x1786a]        # 0x437be0
  420376:	mov    edx,0x62c5
  42037b:	mov    QWORD PTR [rsp+0x30],rax
  420380:	lea    rax,[rip+0x19438]        # 0x4397bf
  420387:	mov    QWORD PTR [rsp+0x28],rax
  42038c:	mov    QWORD PTR [rsp+0x20],rax
  420391:	call   0x40d350
  420396:	jmp    0x420196
  42039b:	lea    r8,[rip+0x18086]        # 0x438428
  4203a2:	lea    rcx,[rip+0x17837]        # 0x437be0
  4203a9:	mov    edx,0x6185
  4203ae:	call   0x40d350
  4203b3:	jmp    0x42029a
  4203b8:	mov    eax,0xffffffff
  4203bd:	jmp    0x42023b
  4203c2:	nop    DWORD PTR [rax+0x0]
  4203c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4203d0:	push   r14
  4203d2:	push   r13
  4203d4:	push   r12
  4203d6:	push   rbp
  4203d7:	push   rdi
  4203d8:	push   rsi
  4203d9:	push   rbx
  4203da:	sub    rsp,0x30
  4203de:	xor    edi,edi
  4203e0:	mov    rsi,rcx
  4203e3:	call   0x41bcf0
  4203e8:	mov    rbp,QWORD PTR [rsi+0x118]
  4203ef:	mov    r12,QWORD PTR [rip+0x1ba1a]        # 0x43be10
  4203f6:	mov    r13,QWORD PTR [rip+0x1ba33]        # 0x43be30
  4203fd:	cmp    WORD PTR [rbp+0x8],0x0
  420402:	je     0x4204a2
  420408:	nop    DWORD PTR [rax+rax*1+0x0]
  420410:	mov    rdx,QWORD PTR [rbp+0x0]
  420414:	mov    eax,edi
  420416:	mov    rcx,rsi
  420419:	mov    rbx,QWORD PTR [rdx+rax*8]
  42041d:	mov    edx,DWORD PTR [rsi+0x4]
  420420:	test   edx,edx
  420422:	js     0x4204c0
  420428:	call   0x41bd10
  42042d:	mov    DWORD PTR [rbx+0x8],eax
  420430:	mov    rcx,rsi
  420433:	call   0x41bbc0
  420438:	movzx  eax,al
  42043b:	cmp    BYTE PTR [r12+rax*1],0x0
  420440:	mov    r8,rax
  420443:	jne    0x420460
  420445:	mov    eax,0xffffffff
  42044a:	add    rsp,0x30
  42044e:	pop    rbx
  42044f:	pop    rsi
  420450:	pop    rdi
  420451:	pop    rbp
  420452:	pop    r12
  420454:	pop    r13
  420456:	pop    r14
  420458:	ret    
  420459:	nop    DWORD PTR [rax+0x0]
  420460:	mov    rdx,rbx
  420463:	mov    rcx,rsi
  420466:	call   0x40a5a0
  42046b:	mov    eax,DWORD PTR [r13+0x0]
  42046f:	test   eax,eax
  420471:	jne    0x420510
  420477:	mov    rax,QWORD PTR [rbx]
  42047a:	mov    rdx,rbx
  42047d:	mov    rcx,rsi
  420480:	add    edi,0x1
  420483:	call   QWORD PTR [rax]
  420485:	mov    eax,DWORD PTR [rbx+0x10]
  420488:	mov    rdx,rbx
  42048b:	mov    rcx,rsi
  42048e:	mov    DWORD PTR [rbx+0x20],eax
  420491:	call   0x41eef0
  420496:	movzx  eax,WORD PTR [rbp+0x8]
  42049a:	cmp    eax,edi
  42049c:	ja     0x420410
  4204a2:	mov    rcx,rbp
  4204a5:	add    rsp,0x30
  4204a9:	pop    rbx
  4204aa:	pop    rsi
  4204ab:	pop    rdi
  4204ac:	pop    rbp
  4204ad:	pop    r12
  4204af:	pop    r13
  4204b1:	pop    r14
  4204b3:	jmp    0x40fc20
  4204b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4204c0:	call   0x41bcf0
  4204c5:	cwde   
  4204c6:	mov    rcx,rsi
  4204c9:	mov    DWORD PTR [rbx+0x8],eax
  4204cc:	call   0x41bcf0
  4204d1:	movzx  edx,BYTE PTR [rbx+0x58]
  4204d5:	mov    r8d,eax
  4204d8:	and    eax,0x1
  4204db:	and    edx,0xfffffffc
  4204de:	test   r8b,0x8
  4204e2:	setne  cl
  4204e5:	or     eax,edx
  4204e7:	add    ecx,ecx
  4204e9:	or     eax,ecx
  4204eb:	and    r8d,0x10
  4204ef:	mov    edx,eax
  4204f1:	setne  al
  4204f4:	lea    ecx,[rax*4+0x0]
  4204fb:	mov    eax,edx
  4204fd:	and    eax,0xfffffffb
  420500:	or     eax,ecx
  420502:	mov    BYTE PTR [rbx+0x58],al
  420505:	jmp    0x420430
  42050a:	nop    WORD PTR [rax+rax*1+0x0]
  420510:	mov    r14d,DWORD PTR [rbx+0x14]
  420514:	mov    ecx,r14d
  420517:	call   0x41f680
  42051c:	movzx  edx,BYTE PTR [rbx+0x18]
  420520:	lea    r8,[rip+0x17d81]        # 0x4382a8
  420527:	lea    rcx,[rip+0x176b2]        # 0x437be0
  42052e:	mov    QWORD PTR [rsp+0x20],rax
  420533:	mov    r9d,r14d
  420536:	mov    DWORD PTR [rsp+0x28],edx
  42053a:	mov    edx,0x4155
  42053f:	call   0x40d350
  420544:	jmp    0x420477
  420549:	nop    DWORD PTR [rax+0x0]
  420550:	push   r12
  420552:	push   rbp
  420553:	push   rdi
  420554:	push   rsi
  420555:	push   rbx
  420556:	sub    rsp,0x50
  42055a:	mov    rsi,QWORD PTR [rip+0x1b8cf]        # 0x43be30
  420561:	mov    rbx,rcx
  420564:	mov    edi,edx
  420566:	mov    r8d,DWORD PTR [rsi]
  420569:	test   r8d,r8d
  42056c:	jne    0x4205d0
  42056e:	test   rcx,rcx
  420571:	je     0x420614
  420577:	cmp    DWORD PTR [rcx+0x148],0x5
  42057e:	je     0x420614
  420584:	lea    eax,[rdi-0x20]
  420587:	cmp    eax,0xdf
  42058c:	ja     0x420b30
  420592:	lea    r8,[rip+0x181b3]        # 0x43874c
  420599:	movsxd rax,DWORD PTR [r8+rax*4]
  42059d:	add    r8,rax
  4205a0:	jmp    r8
  4205a3:	mov    ecx,DWORD PTR [rsi]
  4205a5:	test   ecx,ecx
  4205a7:	jne    0x420bf4
  4205ad:	mov    rcx,rbx
  4205b0:	call   0x41bcf0
  4205b5:	xor    edx,edx
  4205b7:	movzx  r8d,ax
  4205bb:	mov    rcx,rbx
  4205be:	call   0x41bc50
  4205c3:	xor    eax,eax
  4205c5:	add    rsp,0x50
  4205c9:	pop    rbx
  4205ca:	pop    rsi
  4205cb:	pop    rdi
  4205cc:	pop    rbp
  4205cd:	pop    r12
  4205cf:	ret    
  4205d0:	movzx  ecx,dl
  4205d3:	call   0x41e2d0
  4205d8:	lea    r8,[rip+0x17f39]        # 0x438518
  4205df:	lea    rcx,[rip+0x175fa]        # 0x437be0
  4205e6:	mov    QWORD PTR [rsp+0x20],rax
  4205eb:	mov    r9d,edi
  4205ee:	mov    edx,0x7d7
  4205f3:	call   0x40d350
  4205f8:	test   rbx,rbx
  4205fb:	je     0x42060a
  4205fd:	cmp    DWORD PTR [rbx+0x148],0x5
  420604:	jne    0x420584
  42060a:	mov    ecx,DWORD PTR [rsi]
  42060c:	test   ecx,ecx
  42060e:	jne    0x420def
  420614:	mov    rcx,rbx
  420617:	call   0x413250
  42061c:	mov    eax,0xffffffff
  420621:	jmp    0x4205c5
  420623:	mov    edx,edi
  420625:	mov    rcx,rbx
  420628:	call   0x421470
  42062d:	jmp    0x4205c5
  42062f:	nop
  420630:	mov    r10d,DWORD PTR [rsi]
  420633:	test   r10d,r10d
  420636:	jne    0x420d71
  42063c:	cmp    WORD PTR [rbx],0x500
  420641:	je     0x42065c
  420643:	lea    rdx,[rip+0x17596]        # 0x437be0
  42064a:	lea    rcx,[rip+0x18072]        # 0x4386c3
  420651:	mov    r8d,0xb42
  420657:	call   0x42d350
  42065c:	mov    rcx,rbx
  42065f:	call   0x41bcf0
  420664:	mov    rcx,rbx
  420667:	call   0x41bbc0
  42066c:	mov    rcx,rbx
  42066f:	mov    ebp,eax
  420671:	call   0x41bbc0
  420676:	mov    rcx,rbx
  420679:	mov    r12d,eax
  42067c:	call   0x41bbc0
  420681:	cmp    al,0x1
  420683:	je     0x420be4
  420689:	jb     0x420bdd
  42068f:	cmp    al,0x4
  420691:	jne    0x420bb9
  420697:	mov    rcx,rbx
  42069a:	call   0x41bd10
  42069f:	mov    r8d,DWORD PTR [rsi]
  4206a2:	test   r8d,r8d
  4206a5:	jne    0x420da3
  4206ab:	cmp    bpl,0x4
  4206af:	jne    0x420b57
  4206b5:	mov    DWORD PTR [rbx+0x17c],eax
  4206bb:	xor    eax,eax
  4206bd:	jmp    0x4205c5
  4206c2:	xor    r8d,r8d
  4206c5:	xor    edx,edx
  4206c7:	mov    rcx,rbx
  4206ca:	call   0x41e8a0
  4206cf:	jmp    0x4205c5
  4206d4:	mov    rcx,rbx
  4206d7:	call   0x41ead0
  4206dc:	jmp    0x4205c5
  4206e1:	mov    rcx,rbx
  4206e4:	call   0x4203d0
  4206e9:	jmp    0x4205c5
  4206ee:	xchg   ax,ax
  4206f0:	mov    rcx,rbx
  4206f3:	call   0x41e7b0
  4206f8:	jmp    0x4205c5
  4206fd:	nop    DWORD PTR [rax]
  420700:	mov    rcx,rbx
  420703:	call   0x41ea30
  420708:	jmp    0x4205c5
  42070d:	nop    DWORD PTR [rax]
  420710:	mov    rcx,rbx
  420713:	call   0x4200c0
  420718:	jmp    0x4205c5
  42071d:	nop    DWORD PTR [rax]
  420720:	mov    r8d,0x8
  420726:	xor    edx,edx
  420728:	mov    rcx,rbx
  42072b:	call   0x41bc50
  420730:	xor    eax,eax
  420732:	jmp    0x4205c5
  420737:	nop    WORD PTR [rax+rax*1+0x0]
  420740:	mov    rcx,rbx
  420743:	call   0x41bd10
  420748:	mov    rcx,rbx
  42074b:	mov    edi,eax
  42074d:	call   0x41bc20
  420752:	lea    ecx,[rax+0x3]
  420755:	cmp    cl,0x1
  420758:	jbe    0x420b61
  42075e:	cmp    al,0xac
  420760:	je     0x420b61
  420766:	xor    eax,eax
  420768:	add    rsp,0x50
  42076c:	pop    rbx
  42076d:	pop    rsi
  42076e:	pop    rdi
  42076f:	pop    rbp
  420770:	pop    r12
  420772:	ret    
  420773:	mov    rcx,rbx
  420776:	call   0x41bbc0
  42077b:	movzx  esi,al
  42077e:	cmp    esi,0x2
  420781:	jle    0x4207a9
  420783:	mov    rcx,rbx
  420786:	sub    esi,0x3
  420789:	call   0x41bbc0
  42078e:	mov    rcx,rbx
  420791:	call   0x41bcf0
  420796:	mov    rdx,QWORD PTR [rbx+0xc0]
  42079d:	movzx  r8d,ax
  4207a1:	mov    rcx,rbx
  4207a4:	call   0x41c720
  4207a9:	movsxd r8,esi
  4207ac:	xor    edx,edx
  4207ae:	mov    rcx,rbx
  4207b1:	call   0x41bc50
  4207b6:	xor    eax,eax
  4207b8:	jmp    0x4205c5
  4207bd:	nop    DWORD PTR [rax]
  4207c0:	mov    rcx,rbx
  4207c3:	call   0x41f070
  4207c8:	jmp    0x4205c5
  4207cd:	nop    DWORD PTR [rax]
  4207d0:	mov    edx,DWORD PTR [rsi]
  4207d2:	test   edx,edx
  4207d4:	jne    0x420cf7
  4207da:	mov    rcx,rbx
  4207dd:	call   0x41bd10
  4207e2:	xor    edx,edx
  4207e4:	mov    r8d,eax
  4207e7:	mov    rcx,rbx
  4207ea:	call   0x41bc50
  4207ef:	xor    eax,eax
  4207f1:	jmp    0x420768
  4207f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420800:	lea    rcx,[rbx+0x160]
  420807:	call   0x412460
  42080c:	mov    rcx,rbx
  42080f:	call   0x41f3d0
  420814:	jmp    0x4205c5
  420819:	nop    DWORD PTR [rax+0x0]
  420820:	lea    rdx,[rsp+0x48]
  420825:	mov    rcx,rbx
  420828:	call   0x423240
  42082d:	jmp    0x4205c5
  420832:	mov    rcx,rbx
  420835:	call   0x41fda0
  42083a:	jmp    0x4205c5
  42083f:	nop
  420840:	mov    rcx,rbx
  420843:	call   0x41bcf0
  420848:	mov    edx,DWORD PTR [rsi]
  42084a:	test   edx,edx
  42084c:	jne    0x420d1e
  420852:	mov    r9,QWORD PTR [rbx+0xc0]
  420859:	test   r9,r9
  42085c:	je     0x420b57
  420862:	movzx  r8d,ax
  420866:	mov    rdx,r9
  420869:	mov    rcx,rbx
  42086c:	call   QWORD PTR [r9+0x18]
  420870:	jmp    0x4205c5
  420875:	lea    rcx,[rbx+0x160]
  42087c:	call   0x412460
  420881:	mov    rcx,rbx
  420884:	call   0x41fe60
  420889:	jmp    0x4205c5
  42088e:	xchg   ax,ax
  420890:	mov    rcx,rbx
  420893:	call   0x41edc0
  420898:	jmp    0x4205c5
  42089d:	nop    DWORD PTR [rax]
  4208a0:	mov    rcx,rbx
  4208a3:	call   0x41e700
  4208a8:	jmp    0x4205c5
  4208ad:	nop    DWORD PTR [rax]
  4208b0:	cmp    WORD PTR [rbx],0x703
  4208b5:	jbe    0x4205a3
  4208bb:	jmp    0x4208d5
  4208bd:	nop    DWORD PTR [rax]
  4208c0:	mov    rcx,rbx
  4208c3:	call   0x41bd10
  4208c8:	xor    edx,edx
  4208ca:	mov    r8d,eax
  4208cd:	mov    rcx,rbx
  4208d0:	call   0x41bc50
  4208d5:	mov    rcx,rbx
  4208d8:	call   0x41bbc0
  4208dd:	cmp    al,0xff
  4208df:	jne    0x4208c0
  4208e1:	xor    eax,eax
  4208e3:	jmp    0x420768
  4208e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4208f0:	mov    rcx,rbx
  4208f3:	call   0x41bc10
  4208f8:	mov    rcx,rbx
  4208fb:	call   0x41fd00
  420900:	jmp    0x4205c5
  420905:	mov    rcx,rbx
  420908:	lea    r12,[rbx+0x7d]
  42090c:	call   0x41bcf0
  420911:	movzx  esi,ax
  420914:	mov    QWORD PTR [rbx+0x7d],0x0
  42091c:	mov    QWORD PTR [r12+0x8],0x0
  420925:	cmp    esi,0x1
  420928:	mov    QWORD PTR [r12+0x10],0x0
  420931:	mov    QWORD PTR [r12+0x18],0x0
  42093a:	mov    BYTE PTR [rbx+0x7d],0x1
  42093e:	mov    BYTE PTR [rbx+0x7e],0xe
  420942:	mov    BYTE PTR [rbx+0x8d],0x2
  420949:	mov    BYTE PTR [rbx+0x8e],0xe
  420950:	jle    0x420766
  420956:	mov    ebp,0xfffffffe
  42095b:	jmp    0x420973
  42095d:	nop    DWORD PTR [rax]
  420960:	xor    edx,edx
  420962:	mov    rcx,rbx
  420965:	call   0x41bc50
  42096a:	cmp    esi,0x1
  42096d:	jle    0x420766
  420973:	mov    rcx,rbx
  420976:	call   0x41bbc0
  42097b:	mov    rcx,rbx
  42097e:	mov    edi,eax
  420980:	call   0x41bbc0
  420985:	mov    edx,ebp
  420987:	movzx  eax,al
  42098a:	sub    edx,eax
  42098c:	mov    r8,rax
  42098f:	lea    eax,[rdi-0x1]
  420992:	add    esi,edx
  420994:	cmp    al,0x1
  420996:	ja     0x420960
  420998:	cmp    r8b,0xe
  42099c:	ja     0x420ba0
  4209a2:	movzx  edx,dil
  4209a6:	mov    rcx,rbx
  4209a9:	shl    rdx,0x4
  4209ad:	sub    rdx,r8
  4209b0:	add    rdx,r12
  4209b3:	call   0x41bc50
  4209b8:	test   rax,rax
  4209bb:	je     0x420b57
  4209c1:	cmp    dil,0x2
  4209c5:	jne    0x42096a
  4209c7:	cmp    DWORD PTR [rbx+0x4],0xbffffff
  4209ce:	ja     0x42096a
  4209d0:	xor    eax,eax
  4209d2:	jmp    0x420768
  4209d7:	nop    WORD PTR [rax+rax*1+0x0]
  4209e0:	mov    rcx,rbx
  4209e3:	call   0x41e1a0
  4209e8:	jmp    0x4205c5
  4209ed:	nop    DWORD PTR [rax]
  4209f0:	mov    rcx,rbx
  4209f3:	mov    QWORD PTR [rsp+0x40],0x0
  4209fc:	mov    QWORD PTR [rsp+0x48],0x0
  420a05:	call   0x41bcf0
  420a0a:	movzx  ebp,ax
  420a0d:	test   ebp,ebp
  420a0f:	je     0x420d47
  420a15:	mov    rcx,rbx
  420a18:	call   0x41bbc0
  420a1d:	cmp    al,0x7
  420a1f:	mov    edi,eax
  420a21:	je     0x420c32
  420a27:	cmp    al,0x8
  420a29:	je     0x420dd0
  420a2f:	lea    eax,[rdi-0x9]
  420a32:	cmp    al,0x1
  420a34:	jbe    0x420e47
  420a3a:	cmp    dil,0x4
  420a3e:	jbe    0x420a4b
  420a40:	cmp    WORD PTR [rbx],0x700
  420a45:	ja     0x420d8e
  420a4b:	mov    rcx,rbx
  420a4e:	call   0x41bbc0
  420a53:	lea    rdx,[rsp+0x48]
  420a58:	movzx  r8d,al
  420a5c:	mov    rcx,rbx
  420a5f:	call   0x41e5b0
  420a64:	mov    rcx,rbx
  420a67:	mov    ebp,eax
  420a69:	call   0x41bbc0
  420a6e:	lea    rdx,[rsp+0x40]
  420a73:	movzx  r8d,al
  420a77:	mov    rcx,rbx
  420a7a:	call   0x41e5b0
  420a7f:	add    ebp,eax
  420a81:	jne    0x420f2c
  420a87:	cmp    dil,0x2
  420a8b:	je     0x420cba
  420a91:	jbe    0x420c1d
  420a97:	cmp    dil,0x3
  420a9b:	je     0x420c9a
  420aa1:	cmp    dil,0x4
  420aa5:	jne    0x420c2b
  420aab:	mov    rcx,QWORD PTR [rsp+0x48]
  420ab0:	xor    ebp,ebp
  420ab2:	call   0x42d748
  420ab7:	cmp    eax,0x1ff
  420abc:	jle    0x420ad5
  420abe:	mov    ebp,DWORD PTR [rsi]
  420ac0:	test   ebp,ebp
  420ac2:	jne    0x420f48
  420ac8:	movsxd rdx,eax
  420acb:	mov    rcx,rbx
  420ace:	xor    ebp,ebp
  420ad0:	call   0x410320
  420ad5:	mov    rax,QWORD PTR [rbx+0x170]
  420adc:	test   rax,rax
  420adf:	je     0x420af4
  420ae1:	movzx  edx,dil
  420ae5:	mov    r9,QWORD PTR [rsp+0x48]
  420aea:	mov    r8,QWORD PTR [rsp+0x40]
  420aef:	mov    rcx,rbx
  420af2:	call   rax
  420af4:	mov    rcx,QWORD PTR [rsp+0x40]
  420af9:	call   0x42d6f8
  420afe:	mov    rcx,QWORD PTR [rsp+0x48]
  420b03:	test   rcx,rcx
  420b06:	je     0x420766
  420b0c:	test   rbp,rbp
  420b0f:	je     0x420cc3
  420b15:	mov    rcx,QWORD PTR [rbp+0x0]
  420b19:	call   0x42d6f8
  420b1e:	mov    rax,QWORD PTR [rsp+0x48]
  420b23:	mov    QWORD PTR [rbp+0x0],rax
  420b27:	xor    eax,eax
  420b29:	jmp    0x4205c5
  420b2e:	xchg   ax,ax
  420b30:	mov    rcx,rbx
  420b33:	call   0x413250
  420b38:	mov    rcx,QWORD PTR [rbx+0x28]
  420b3c:	xor    r9d,r9d
  420b3f:	mov    r8d,0x4e34
  420b45:	mov    rdx,rbx
  420b48:	call   0x423700
  420b4d:	mov    eax,DWORD PTR [rsi]
  420b4f:	test   eax,eax
  420b51:	jne    0x420ccf
  420b57:	mov    eax,0xffffffff
  420b5c:	jmp    0x4205c5
  420b61:	mov    r11d,DWORD PTR [rsi]
  420b64:	mov    BYTE PTR [rbx+0x141],0x1
  420b6b:	mov    DWORD PTR [rbx+0x144],edi
  420b71:	test   r11d,r11d
  420b74:	je     0x420766
  420b7a:	lea    r8,[rip+0x17af7]        # 0x438678
  420b81:	lea    rcx,[rip+0x17058]        # 0x437be0
  420b88:	mov    r9d,edi
  420b8b:	mov    edx,0x9b5
  420b90:	call   0x40d350
  420b95:	xor    eax,eax
  420b97:	jmp    0x4205c5
  420b9c:	nop    DWORD PTR [rax+0x0]
  420ba0:	sub    r8,0xe
  420ba4:	xor    edx,edx
  420ba6:	mov    rcx,rbx
  420ba9:	call   0x41bc50
  420bae:	mov    r8d,0xe
  420bb4:	jmp    0x4209a2
  420bb9:	mov    r9d,DWORD PTR [rsi]
  420bbc:	test   r9d,r9d
  420bbf:	jne    0x420e5f
  420bc5:	movzx  r8d,al
  420bc9:	xor    edx,edx
  420bcb:	mov    rcx,rbx
  420bce:	call   0x41bc50
  420bd3:	mov    eax,0xffffffff
  420bd8:	jmp    0x4205c5
  420bdd:	xor    eax,eax
  420bdf:	jmp    0x42069f
  420be4:	mov    rcx,rbx
  420be7:	call   0x41bbc0
  420bec:	movzx  eax,al
  420bef:	jmp    0x42069f
  420bf4:	movzx  ecx,dil
  420bf8:	call   0x41e2d0
  420bfd:	lea    r8,[rip+0x17b1c]        # 0x438720
  420c04:	lea    rcx,[rip+0x16fd5]        # 0x437be0
  420c0b:	mov    r9,rax
  420c0e:	mov    edx,0xf43
  420c13:	call   0x40d350
  420c18:	jmp    0x4205ad
  420c1d:	cmp    dil,0x1
  420c21:	lea    rbp,[rbx+0x48]
  420c25:	je     0x420ad5
  420c2b:	xor    ebp,ebp
  420c2d:	jmp    0x420ad5
  420c32:	mov    rcx,rbx
  420c35:	call   0x41bbc0
  420c3a:	movzx  ebp,al
  420c3d:	mov    eax,DWORD PTR [rsi]
  420c3f:	mov    r12d,ebp
  420c42:	test   eax,eax
  420c44:	jne    0x420eb9
  420c4a:	lea    rdi,[rbx+0x70]
  420c4e:	cmp    ebp,0x4
  420c51:	mov    DWORD PTR [rbx+0x70],0x0
  420c58:	mov    BYTE PTR [rdi+0x4],0x0
  420c5c:	ja     0x420e0c
  420c62:	movzx  r8d,r12b
  420c66:	mov    rdx,rdi
  420c69:	mov    rcx,rbx
  420c6c:	call   0x41bc50
  420c71:	mov    r12d,DWORD PTR [rsi]
  420c74:	test   r12d,r12d
  420c77:	jne    0x420e90
  420c7d:	mov    rcx,rbx
  420c80:	call   0x41bbc0
  420c85:	xor    edx,edx
  420c87:	movzx  r8d,al
  420c8b:	mov    rcx,rbx
  420c8e:	call   0x41bc50
  420c93:	xor    eax,eax
  420c95:	jmp    0x4205c5
  420c9a:	mov    esi,DWORD PTR [rsi]
  420c9c:	test   esi,esi
  420c9e:	jne    0x420f0a
  420ca4:	mov    rdx,QWORD PTR [rsp+0x48]
  420ca9:	mov    rcx,rbx
  420cac:	lea    rbp,[rbx+0x40]
  420cb0:	call   0x40cbb0
  420cb5:	jmp    0x420ad5
  420cba:	lea    rbp,[rbx+0x38]
  420cbe:	jmp    0x420ad5
  420cc3:	call   0x42d6f8
  420cc8:	xor    eax,eax
  420cca:	jmp    0x4205c5
  420ccf:	movzx  eax,dil
  420cd3:	lea    r8,[rip+0x17a57]        # 0x438731
  420cda:	lea    rcx,[rip+0x16eff]        # 0x437be0
  420ce1:	mov    DWORD PTR [rsp+0x20],eax
  420ce5:	mov    r9d,edi
  420ce8:	mov    edx,0x1112
  420ced:	call   0x40d350
  420cf2:	jmp    0x420b57
  420cf7:	mov    ecx,edi
  420cf9:	call   0x41e2d0
  420cfe:	lea    r8,[rip+0x17a1b]        # 0x438720
  420d05:	lea    rcx,[rip+0x16ed4]        # 0x437be0
  420d0c:	mov    r9,rax
  420d0f:	mov    edx,0x1083
  420d14:	call   0x40d350
  420d19:	jmp    0x4207da
  420d1e:	lea    r8,[rip+0x17859]        # 0x43857e
  420d25:	lea    rcx,[rip+0x16eb4]        # 0x437be0
  420d2c:	movzx  r9d,ax
  420d30:	mov    edx,0x1b75
  420d35:	mov    DWORD PTR [rsp+0x3c],eax
  420d39:	call   0x40d350
  420d3e:	mov    eax,DWORD PTR [rsp+0x3c]
  420d42:	jmp    0x420852
  420d47:	mov    eax,DWORD PTR [rsi]
  420d49:	test   eax,eax
  420d4b:	je     0x420614
  420d51:	lea    r8,[rip+0x17842]        # 0x43859a
  420d58:	lea    rcx,[rip+0x16e81]        # 0x437be0
  420d5f:	xor    r9d,r9d
  420d62:	mov    edx,0x85e2
  420d67:	call   0x40d350
  420d6c:	jmp    0x420614
  420d71:	lea    r8,[rip+0x17931]        # 0x4386a9
  420d78:	lea    rcx,[rip+0x16e61]        # 0x437be0
  420d7f:	mov    edx,0xb405
  420d84:	call   0x40d350
  420d89:	jmp    0x42063c
  420d8e:	lea    r8d,[rbp-0x1]
  420d92:	xor    edx,edx
  420d94:	mov    rcx,rbx
  420d97:	call   0x41bc50
  420d9c:	xor    eax,eax
  420d9e:	jmp    0x4205c5
  420da3:	lea    r8,[rip+0x17959]        # 0x438703
  420daa:	lea    rcx,[rip+0x16e2f]        # 0x437be0
  420db1:	mov    DWORD PTR [rsp+0x20],eax
  420db5:	movzx  r9d,r12b
  420db9:	mov    edx,0xb595
  420dbe:	mov    DWORD PTR [rsp+0x3c],eax
  420dc2:	call   0x40d350
  420dc7:	mov    eax,DWORD PTR [rsp+0x3c]
  420dcb:	jmp    0x4206ab
  420dd0:	mov    rcx,rbx
  420dd3:	call   0x41bbc0
  420dd8:	lea    rdx,[rbx+0x75]
  420ddc:	mov    r8d,0x8
  420de2:	mov    rcx,rbx
  420de5:	call   0x41bc50
  420dea:	jmp    0x420c7d
  420def:	lea    r8,[rip+0x17752]        # 0x438548
  420df6:	lea    rcx,[rip+0x16de3]        # 0x437be0
  420dfd:	mov    edx,0x807
  420e02:	call   0x40d350
  420e07:	jmp    0x420614
  420e0c:	mov    rdx,rdi
  420e0f:	mov    rcx,rbx
  420e12:	mov    r8d,0x5
  420e18:	call   0x41bc50
  420e1d:	lea    r8d,[rbp-0x5]
  420e21:	xor    edx,edx
  420e23:	mov    rcx,rbx
  420e26:	call   0x41bc50
  420e2b:	mov    r8d,DWORD PTR [rbx+0x70]
  420e2f:	movzx  edx,BYTE PTR [rbx+0x74]
  420e33:	mov    rcx,rbx
  420e36:	and    r8d,0xfffff
  420e3d:	call   0x40cc20
  420e42:	jmp    0x420c71
  420e47:	mov    QWORD PTR [rbx+0x75],0x0
  420e4f:	mov    rcx,rbx
  420e52:	call   0x41bbc0
  420e57:	xor    edx,edx
  420e59:	movzx  r8d,al
  420e5d:	jmp    0x420de2
  420e5f:	movzx  edx,al
  420e62:	lea    r8,[rip+0x1786f]        # 0x4386d8
  420e69:	lea    rcx,[rip+0x16d70]        # 0x437be0
  420e70:	mov    DWORD PTR [rsp+0x20],edx
  420e74:	movzx  r9d,r12b
  420e78:	mov    edx,0xb545
  420e7d:	mov    BYTE PTR [rsp+0x3c],al
  420e81:	call   0x40d350
  420e86:	movzx  eax,BYTE PTR [rsp+0x3c]
  420e8b:	jmp    0x420bc5
  420e90:	lea    r8,[rip+0x1776e]        # 0x438605
  420e97:	lea    rcx,[rip+0x16d42]        # 0x437be0
  420e9e:	mov    QWORD PTR [rsp+0x20],0x5
  420ea7:	mov    r9,rdi
  420eaa:	mov    edx,0x87e4
  420eaf:	call   0x40d0b0
  420eb4:	jmp    0x420c7d
  420eb9:	lea    r8,[rip+0x176f0]        # 0x4385b0
  420ec0:	lea    rcx,[rip+0x16d19]        # 0x437be0
  420ec7:	mov    r9d,ebp
  420eca:	mov    edx,0x8732
  420ecf:	lea    rdi,[rbx+0x70]
  420ed3:	call   0x40d350
  420ed8:	cmp    DWORD PTR [rsi],0x0
  420edb:	je     0x420c4e
  420ee1:	lea    r8,[rip+0x17704]        # 0x4385ec
  420ee8:	lea    rcx,[rip+0x16cf1]        # 0x437be0
  420eef:	mov    QWORD PTR [rsp+0x20],0x5
  420ef8:	mov    r9,rdi
  420efb:	mov    edx,0x8744
  420f00:	call   0x40d0b0
  420f05:	jmp    0x420c4e
  420f0a:	mov    r9,QWORD PTR [rsp+0x48]
  420f0f:	lea    r8,[rip+0x17732]        # 0x438648
  420f16:	lea    rcx,[rip+0x16cc3]        # 0x437be0
  420f1d:	mov    edx,0x8bc7
  420f22:	call   0x40d350
  420f27:	jmp    0x420ca4
  420f2c:	mov    rcx,QWORD PTR [rsp+0x48]
  420f31:	call   0x42d6f8
  420f36:	mov    rcx,QWORD PTR [rsp+0x40]
  420f3b:	call   0x42d6f8
  420f40:	or     eax,0xffffffff
  420f43:	jmp    0x4205c5
  420f48:	mov    r9,QWORD PTR [rsp+0x40]
  420f4d:	lea    r8,[rip+0x176cc]        # 0x438620
  420f54:	lea    rcx,[rip+0x16c85]        # 0x437be0
  420f5b:	mov    DWORD PTR [rsp+0x20],eax
  420f5f:	mov    edx,0x8ac5
  420f64:	mov    DWORD PTR [rsp+0x3c],eax
  420f68:	call   0x40d350
  420f6d:	mov    eax,DWORD PTR [rsp+0x3c]
  420f71:	jmp    0x420ac8
  420f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420f80:	push   r15
  420f82:	push   r14
  420f84:	push   r13
  420f86:	push   r12
  420f88:	push   rbp
  420f89:	push   rdi
  420f8a:	push   rsi
  420f8b:	push   rbx
  420f8c:	sub    rsp,0x78
  420f90:	mov    r15,QWORD PTR [rip+0x1ae99]        # 0x43be30
  420f97:	mov    rbp,rcx
  420f9a:	mov    r8d,DWORD PTR [r15]
  420f9d:	test   r8d,r8d
  420fa0:	jne    0x421418
  420fa6:	lea    rax,[rbp+0x8]
  420faa:	mov    DWORD PTR [rsp+0x68],0x0
  420fb2:	mov    DWORD PTR [rsp+0x6c],0xffffffff
  420fba:	mov    QWORD PTR [rsp+0x60],rax
  420fbf:	nop
  420fc0:	mov    rcx,rbp
  420fc3:	call   0x41bbc0
  420fc8:	mov    ecx,DWORD PTR [r15]
  420fcb:	movzx  edi,al
  420fce:	mov    ebx,edi
  420fd0:	test   ecx,ecx
  420fd2:	jne    0x421375
  420fd8:	cmp    bl,0xad
  420fdb:	jne    0x4211e0
  420fe1:	and    BYTE PTR [rbp+0xa0],0xfb
  420fe8:	mov    rcx,rbp
  420feb:	call   0x41bcf0
  420ff0:	movzx  ebx,ax
  420ff3:	cmp    ebx,0x9
  420ff6:	jbe    0x4211ee
  420ffc:	mov    rcx,rbp
  420fff:	call   0x41bbc0
  421004:	mov    rcx,rbp
  421007:	mov    BYTE PTR [rsp+0x5e],al
  42100b:	call   0x41bbc0
  421010:	mov    rcx,rbp
  421013:	mov    r13d,eax
  421016:	call   0x41bbc0
  42101b:	mov    rcx,rbp
  42101e:	mov    r12d,eax
  421021:	mov    BYTE PTR [rsp+0x40],al
  421025:	call   0x41bbc0
  42102a:	mov    rcx,rbp
  42102d:	mov    esi,eax
  42102f:	call   0x41bbc0
  421034:	movzx  ecx,r12b
  421038:	movzx  r9d,r13b
  42103c:	movzx  r8d,sil
  421040:	mov    r10d,r9d
  421043:	mov    edx,ecx
  421045:	movzx  eax,al
  421048:	shl    r10d,0x18
  42104c:	shl    edx,0x10
  42104f:	mov    r12d,r8d
  421052:	or     edx,r10d
  421055:	shl    r12d,0x8
  421059:	or     edx,eax
  42105b:	or     r12d,edx
  42105e:	cmp    r12d,0x7010000
  421065:	je     0x421362
  42106b:	cmp    r12d,0x72090002
  421072:	lea    rsi,[rip+0x17a65]        # 0x438ade
  421079:	je     0x4210a5
  42107b:	ja     0x421240
  421081:	cmp    r12d,0x7000000
  421088:	lea    rsi,[rip+0x17a3d]        # 0x438acc
  42108f:	je     0x4210a5
  421091:	cmp    r12d,0x71000001
  421098:	lea    rsi,[rip+0x17a36]        # 0x438ad5
  42109f:	jne    0x421268
  4210a5:	mov    edx,DWORD PTR [r15]
  4210a8:	test   edx,edx
  4210aa:	jne    0x421280
  4210b0:	mov    rcx,rbp
  4210b3:	sub    ebx,0xa
  4210b6:	call   0x41bbc0
  4210bb:	mov    rcx,QWORD PTR [rbp+0x8]
  4210bf:	call   0x42d6f8
  4210c4:	cmp    r13b,0x6
  4210c8:	ja     0x4212e0
  4210ce:	cmp    r13b,0x4
  4210d2:	mov    r8d,ebx
  4210d5:	mov    rdx,QWORD PTR [rsp+0x60]
  4210da:	mov    rcx,rbp
  4210dd:	jbe    0x421204
  4210e3:	call   0x41e5b0
  4210e8:	add    DWORD PTR [rsp+0x68],eax
  4210ec:	xor    ebx,ebx
  4210ee:	mov    rcx,rbp
  4210f1:	mov    r14b,r13b
  4210f4:	call   0x41bbc0
  4210f9:	mov    rcx,rbp
  4210fc:	mov    r12d,eax
  4210ff:	call   0x41bbc0
  421104:	mov    rcx,rbp
  421107:	movzx  esi,al
  42110a:	shl    r12d,0x18
  42110e:	call   0x41bbc0
  421113:	mov    rcx,rbp
  421116:	mov    BYTE PTR [rsp+0x5f],al
  42111a:	shl    esi,0x10
  42111d:	call   0x41bbc0
  421122:	movzx  r9d,al
  421126:	mov    rdx,QWORD PTR [rsp+0x40]
  42112b:	mov    rax,r14
  42112e:	or     r9d,ebx
  421131:	movzx  ebx,BYTE PTR [rsp+0x5f]
  421136:	or     r9d,r12d
  421139:	or     r9d,esi
  42113c:	mov    ah,dl
  42113e:	mov    r14,rax
  421141:	shl    ebx,0x8
  421144:	or     r9d,ebx
  421147:	cmp    ax,0x204
  42114b:	je     0x421310
  421151:	mov    r10d,DWORD PTR [r15]
  421154:	mov    DWORD PTR [rbp+0x4],r9d
  421158:	test   r10d,r10d
  42115b:	jne    0x421345
  421161:	movzx  eax,BYTE PTR [rsp+0x5e]
  421166:	and    eax,0xfffffffb
  421169:	cmp    al,0x1
  42116b:	jne    0x421195
  42116d:	mov    rax,QWORD PTR [rbp+0xc0]
  421174:	mov    DWORD PTR [rsp+0x6c],0x0
  42117c:	test   rax,rax
  42117f:	je     0x421195
  421181:	mov    rdx,rax
  421184:	mov    rcx,rbp
  421187:	call   QWORD PTR [rax+0x10]
  42118a:	mov    QWORD PTR [rbp+0xc0],0x0
  421195:	cmp    edi,0xfd
  42119b:	jne    0x420fc0
  4211a1:	cmp    WORD PTR [rbp+0x0],0x500
  4211a7:	je     0x4213a1
  4211ad:	mov    ecx,DWORD PTR [rsp+0x68]
  4211b1:	test   ecx,ecx
  4211b3:	jne    0x4213d1
  4211b9:	mov    r8d,DWORD PTR [rbp+0x4]
  4211bd:	test   r8d,r8d
  4211c0:	js     0x4213f7
  4211c6:	mov    edx,DWORD PTR [r15]
  4211c9:	test   edx,edx
  4211cb:	jne    0x421435
  4211d1:	mov    eax,DWORD PTR [rsp+0x6c]
  4211d5:	jmp    0x4211f3
  4211d7:	nop    WORD PTR [rax+rax*1+0x0]
  4211e0:	mov    edx,edi
  4211e2:	mov    rcx,rbp
  4211e5:	call   0x420550
  4211ea:	test   eax,eax
  4211ec:	jns    0x421195
  4211ee:	mov    eax,0xffffffff
  4211f3:	add    rsp,0x78
  4211f7:	pop    rbx
  4211f8:	pop    rsi
  4211f9:	pop    rdi
  4211fa:	pop    rbp
  4211fb:	pop    r12
  4211fd:	pop    r13
  4211ff:	pop    r14
  421201:	pop    r15
  421203:	ret    
  421204:	call   0x41e5b0
  421209:	mov    rcx,QWORD PTR [rbp+0x8]
  42120d:	add    DWORD PTR [rsp+0x68],eax
  421211:	test   rcx,rcx
  421214:	je     0x4213f0
  42121a:	lea    rdx,[rip+0x1799c]        # 0x438bbd
  421221:	call   0x42d5f8
  421226:	cmp    rax,0x1
  42122a:	sbb    ebx,ebx
  42122c:	not    ebx
  42122e:	and    ebx,0x80000000
  421234:	jmp    0x4210ee
  421239:	nop    DWORD PTR [rax+0x0]
  421240:	cmp    r12d,0x730a0003
  421247:	lea    rsi,[rip+0x1789a]        # 0x438ae8
  42124e:	je     0x4210a5
  421254:	cmp    r12d,0x730b0003
  42125b:	lea    rsi,[rip+0x178ab]        # 0x438b0d
  421262:	je     0x4210a5
  421268:	mov    edx,DWORD PTR [r15]
  42126b:	lea    rsi,[rip+0x178a0]        # 0x438b12
  421272:	test   edx,edx
  421274:	je     0x4210b0
  42127a:	nop    WORD PTR [rax+rax*1+0x0]
  421280:	mov    DWORD PTR [rsp+0x28],r8d
  421285:	mov    DWORD PTR [rsp+0x20],ecx
  421289:	lea    r8,[rip+0x178e8]        # 0x438b78
  421290:	lea    rcx,[rip+0x16949]        # 0x437be0
  421297:	mov    DWORD PTR [rsp+0x30],eax
  42129b:	mov    edx,0x1587
  4212a0:	call   0x40d350
  4212a5:	mov    r11d,DWORD PTR [r15]
  4212a8:	test   r11d,r11d
  4212ab:	je     0x4210b0
  4212b1:	lea    r8,[rip+0x178e8]        # 0x438ba0
  4212b8:	lea    rcx,[rip+0x16921]        # 0x437be0
  4212bf:	mov    QWORD PTR [rsp+0x20],rsi
  4212c4:	mov    r9d,r12d
  4212c7:	mov    edx,0x15a7
  4212cc:	call   0x40d350
  4212d1:	jmp    0x4210b0
  4212d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4212e0:	shr    ebx,1
  4212e2:	mov    rdx,QWORD PTR [rsp+0x60]
  4212e7:	mov    rcx,rbp
  4212ea:	mov    r8d,ebx
  4212ed:	mov    ebx,0x80000000
  4212f2:	and    r8d,0x7fffffff
  4212f9:	call   0x41e5b0
  4212fe:	add    DWORD PTR [rsp+0x68],eax
  421302:	jmp    0x4210ee
  421307:	nop    WORD PTR [rax+rax*1+0x0]
  421310:	mov    eax,r9d
  421313:	and    eax,0xff0000ff
  421318:	cmp    eax,0x5f0000ff
  42131d:	jne    0x421151
  421323:	mov    r10d,DWORD PTR [r15]
  421326:	and    r9d,0x7fff00
  42132d:	or     r9d,0x800000
  421334:	shl    r9d,0x8
  421338:	test   r10d,r10d
  42133b:	mov    DWORD PTR [rbp+0x4],r9d
  42133f:	je     0x421161
  421345:	lea    r8,[rip+0x1787b]        # 0x438bc7
  42134c:	lea    rcx,[rip+0x1688d]        # 0x437be0
  421353:	mov    edx,0x17a7
  421358:	call   0x40d350
  42135d:	jmp    0x421161
  421362:	or     BYTE PTR [rbp+0xa0],0x4
  421369:	lea    rsi,[rip+0x17760]        # 0x438ad0
  421370:	jmp    0x4210a5
  421375:	mov    ecx,edi
  421377:	call   0x41e2d0
  42137c:	lea    r8,[rip+0x177cd]        # 0x438b50
  421383:	lea    rcx,[rip+0x16856]        # 0x437be0
  42138a:	mov    QWORD PTR [rsp+0x20],rax
  42138f:	mov    r9d,edi
  421392:	mov    edx,0x1327
  421397:	call   0x40d350
  42139c:	jmp    0x420fd8
  4213a1:	mov    rax,QWORD PTR [rbp+0xc0]
  4213a8:	test   rax,rax
  4213ab:	je     0x4211ad
  4213b1:	xor    r8d,r8d
  4213b4:	mov    rdx,rax
  4213b7:	mov    rcx,rbp
  4213ba:	call   QWORD PTR [rax+0x18]
  4213bd:	test   eax,eax
  4213bf:	jns    0x420fc0
  4213c5:	mov    ecx,DWORD PTR [rsp+0x68]
  4213c9:	test   ecx,ecx
  4213cb:	je     0x4211b9
  4213d1:	mov    eax,DWORD PTR [r15]
  4213d4:	test   eax,eax
  4213d6:	je     0x4211ee
  4213dc:	mov    ebx,0xffffffff
  4213e1:	lea    r9,[rip+0x1773e]        # 0x438b26
  4213e8:	jmp    0x42144d
  4213ea:	nop    WORD PTR [rax+rax*1+0x0]
  4213f0:	xor    ebx,ebx
  4213f2:	jmp    0x4210ee
  4213f7:	mov    rcx,QWORD PTR [rbp+0xd0]
  4213fe:	movzx  eax,BYTE PTR [rcx+0x4]
  421402:	shl    eax,0x8
  421405:	mov    edx,eax
  421407:	movzx  eax,BYTE PTR [rcx+0x5]
  42140b:	add    eax,edx
  42140d:	mov    DWORD PTR [rbp+0xa4],eax
  421413:	jmp    0x4211c6
  421418:	lea    r8,[rip+0x17710]        # 0x438b2f
  42141f:	lea    rcx,[rip+0x167ba]        # 0x437be0
  421426:	mov    edx,0x12a7
  42142b:	call   0x40d350
  421430:	jmp    0x420fa6
  421435:	mov    ebx,DWORD PTR [rsp+0x6c]
  421439:	lea    r9,[rip+0x176da]        # 0x438b1a
  421440:	lea    rax,[rip+0x176df]        # 0x438b26
  421447:	test   ebx,ebx
  421449:	cmovne r9,rax
  42144d:	lea    r8,[rip+0x1778c]        # 0x438be0
  421454:	lea    rcx,[rip+0x16785]        # 0x437be0
  42145b:	mov    edx,0x19f7
  421460:	call   0x40d350
  421465:	mov    eax,ebx
  421467:	jmp    0x4211f3
  42146c:	nop    DWORD PTR [rax+0x0]
  421470:	push   r14
  421472:	push   r13
  421474:	push   r12
  421476:	push   rbp
  421477:	push   rdi
  421478:	push   rsi
  421479:	push   rbx
  42147a:	add    rsp,0xffffffffffffff80
  42147e:	xor    eax,eax
  421480:	lea    rbp,[rsp+0x50]
  421485:	mov    rbx,rcx
  421488:	mov    ecx,0x6
  42148d:	mov    r12d,edx
  421490:	mov    rdi,rbp
  421493:	rep stos QWORD PTR es:[rdi],rax
  421496:	mov    rcx,rbx
  421499:	call   0x41bcf0
  42149e:	mov    rcx,rbx
  4214a1:	call   0x41bd10
  4214a6:	mov    rcx,rbx
  4214a9:	mov    DWORD PTR [rsp+0x70],eax
  4214ad:	call   0x41bbc0
  4214b2:	mov    rcx,rbx
  4214b5:	movzx  eax,al
  4214b8:	mov    WORD PTR [rsp+0x78],ax
  4214bd:	call   0x41bbc0
  4214c2:	cmp    r12d,0xab
  4214c9:	mov    BYTE PTR [rsp+0x7b],al
  4214cd:	je     0x421744
  4214d3:	cmp    r12d,0xe5
  4214da:	je     0x4216d0
  4214e0:	cmp    r12d,0xaa
  4214e7:	je     0x421520
  4214e9:	mov    rax,QWORD PTR [rip+0x1a940]        # 0x43be30
  4214f0:	mov    r11d,DWORD PTR [rax]
  4214f3:	test   r11d,r11d
  4214f6:	jne    0x421930
  4214fc:	mov    rcx,rbp
  4214ff:	mov    esi,0xffffffff
  421504:	call   0x4104f0
  421509:	mov    eax,esi
  42150b:	sub    rsp,0xffffffffffffff80
  42150f:	pop    rbx
  421510:	pop    rsi
  421511:	pop    rdi
  421512:	pop    rbp
  421513:	pop    r12
  421515:	pop    r13
  421517:	pop    r14
  421519:	ret    
  42151a:	nop    WORD PTR [rax+rax*1+0x0]
  421520:	mov    BYTE PTR [rsp+0x7a],0x1
  421525:	xor    r13d,r13d
  421528:	mov    rdi,QWORD PTR [rip+0x1a901]        # 0x43be30
  42152f:	mov    r10d,DWORD PTR [rdi]
  421532:	test   r10d,r10d
  421535:	jne    0x4218b0
  42153b:	mov    rcx,rbx
  42153e:	call   0x41bcf0
  421543:	lea    rdx,[rbp+0x8]
  421547:	movzx  r8d,ax
  42154b:	mov    rcx,rbx
  42154e:	call   0x41e5b0
  421553:	mov    rcx,rbx
  421556:	mov    esi,eax
  421558:	call   0x41bbc0
  42155d:	mov    rcx,rbx
  421560:	movzx  r8d,al
  421564:	mov    rdx,rbp
  421567:	call   0x41e5b0
  42156c:	mov    rcx,QWORD PTR [rsp+0x50]
  421571:	lea    r14d,[rsi+rax*1]
  421575:	test   rcx,rcx
  421578:	je     0x42157f
  42157a:	cmp    BYTE PTR [rcx],0x0
  42157d:	jne    0x4215bf
  42157f:	cmp    QWORD PTR [rbx+0x168],0x0
  421587:	je     0x4215bf
  421589:	call   0x42d6f8
  42158e:	mov    rax,QWORD PTR [rbx+0x168]
  421595:	mov    QWORD PTR [rsp+0x50],0x0
  42159e:	lea    rdx,[rip+0x176d6]        # 0x438c7b
  4215a5:	mov    rcx,rbp
  4215a8:	mov    r8,QWORD PTR [rax]
  4215ab:	add    r8,0x8
  4215af:	call   0x42d4a0
  4215b4:	cmp    eax,0xffffffff
  4215b7:	mov    esi,eax
  4215b9:	je     0x421860
  4215bf:	mov    rcx,rbx
  4215c2:	call   0x41bbc0
  4215c7:	lea    rdx,[rbp+0x10]
  4215cb:	mov    rcx,rbx
  4215ce:	movzx  r8d,al
  4215d2:	call   0x41e5b0
  4215d7:	cmp    WORD PTR [rbx],0x701
  4215dc:	lea    esi,[rax+r14*1]
  4215e0:	mov    rcx,rbx
  4215e3:	jbe    0x4216c4
  4215e9:	call   0x41bd10
  4215ee:	cmp    QWORD PTR [rsp+0x68],0x0
  4215f4:	mov    DWORD PTR [rsp+0x74],eax
  4215f8:	je     0x421913
  4215fe:	cmp    r13d,0x1
  421602:	je     0x4216a3
  421608:	test   esi,esi
  42160a:	jne    0x4214fc
  421610:	cmp    r12d,0xe5
  421617:	je     0x421764
  42161d:	cmp    r12d,0xab
  421624:	je     0x4217b0
  42162a:	mov    rax,QWORD PTR [rbx+0x28]
  42162e:	cmp    QWORD PTR [rax+0x10],0x0
  421633:	je     0x421850
  421639:	mov    edx,DWORD PTR [rdi]
  42163b:	test   edx,edx
  42163d:	jne    0x4218d2
  421643:	mov    r8,rbp
  421646:	mov    rdx,rbx
  421649:	mov    rcx,rax
  42164c:	call   QWORD PTR [rax+0x10]
  42164f:	cmp    QWORD PTR [rbx+0xc8],0x0
  421657:	je     0x421835
  42165d:	mov    rcx,rbp
  421660:	call   0x4104f0
  421665:	mov    esi,DWORD PTR [rdi]
  421667:	test   esi,esi
  421669:	je     0x421509
  42166f:	lea    r8,[rip+0x1768a]        # 0x438d00
  421676:	lea    rcx,[rip+0x16563]        # 0x437be0
  42167d:	mov    edx,0x9712
  421682:	xor    esi,esi
  421684:	call   0x40d350
  421689:	jmp    0x421509
  42168e:	xchg   ax,ax
  421690:	movzx  edx,al
  421693:	mov    rcx,rbx
  421696:	call   0x420550
  42169b:	cmp    eax,0x80000000
  4216a0:	adc    esi,0xffffffff
  4216a3:	mov    rcx,rbx
  4216a6:	call   0x41bbc0
  4216ab:	cmp    al,0xd7
  4216ad:	je     0x421690
  4216af:	cmp    al,0xec
  4216b1:	je     0x421690
  4216b3:	cmp    al,0x20
  4216b5:	je     0x421690
  4216b7:	mov    rcx,rbx
  4216ba:	call   0x41bc10
  4216bf:	jmp    0x421608
  4216c4:	call   0x41bcf0
  4216c9:	cwde   
  4216ca:	jmp    0x4215ee
  4216cf:	nop
  4216d0:	cmp    al,0xa
  4216d2:	mov    rcx,rbx
  4216d5:	seta   BYTE PTR [rsp+0x7a]
  4216da:	call   0x41bbc0
  4216df:	movzx  eax,al
  4216e2:	lea    rcx,[rax+0x1]
  4216e6:	mov    rsi,rax
  4216e9:	call   0x42d6b8
  4216ee:	test   rax,rax
  4216f1:	mov    QWORD PTR [rsp+0x68],rax
  4216f6:	je     0x4214fc
  4216fc:	mov    r8,rsi
  4216ff:	mov    rcx,rbx
  421702:	mov    rdx,rax
  421705:	call   0x41bc50
  42170a:	mov    rax,QWORD PTR [rsp+0x68]
  42170f:	lea    rdi,[rip+0x174f3]        # 0x438c09
  421716:	mov    ecx,0x6
  42171b:	mov    BYTE PTR [rax+rsi*1],0x0
  42171f:	mov    rax,QWORD PTR [rsp+0x68]
  421724:	mov    rsi,rax
  421727:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  421729:	je     0x421751
  42172b:	mov    rcx,rbx
  42172e:	call   0x41bbc0
  421733:	mov    rcx,rbx
  421736:	movzx  r13d,al
  42173a:	call   0x41bcf0
  42173f:	jmp    0x421528
  421744:	mov    BYTE PTR [rsp+0x7a],0x0
  421749:	xor    r13d,r13d
  42174c:	jmp    0x421528
  421751:	mov    rcx,rax
  421754:	call   0x42d6f8
  421759:	mov    QWORD PTR [rsp+0x68],0x0
  421762:	jmp    0x42172b
  421764:	mov    rax,QWORD PTR [rbx+0x160]
  42176b:	test   rax,rax
  42176e:	je     0x42162a
  421774:	mov    r8d,DWORD PTR [rbx+0x4]
  421778:	test   r8d,r8d
  42177b:	js     0x42162a
  421781:	cmp    DWORD PTR [rsp+0x70],0xade
  421789:	jne    0x42162a
  42178f:	mov    BYTE PTR [rax+0x2e],0x1
  421793:	mov    rdx,QWORD PTR [rbx+0x160]
  42179a:	mov    rcx,rbx
  42179d:	call   0x4124f0
  4217a2:	jmp    0x42164f
  4217a7:	nop    WORD PTR [rax+rax*1+0x0]
  4217b0:	mov    r9d,DWORD PTR [rsp+0x70]
  4217b5:	cmp    r9d,0x423a
  4217bc:	jne    0x42162a
  4217c2:	mov    ecx,DWORD PTR [rbx+0x4]
  4217c5:	test   ecx,ecx
  4217c7:	js     0x4218f3
  4217cd:	mov    rax,QWORD PTR [rbx+0x28]
  4217d1:	cmp    QWORD PTR [rax+0x10],0x0
  4217d6:	jne    0x421639
  4217dc:	nop    DWORD PTR [rax+0x0]
  4217e0:	mov    eax,DWORD PTR [rdi]
  4217e2:	test   eax,eax
  4217e4:	je     0x42164f
  4217ea:	mov    rax,QWORD PTR [rsp+0x58]
  4217ef:	lea    r8,[rip+0x174d2]        # 0x438cc8
  4217f6:	lea    rcx,[rip+0x163e3]        # 0x437be0
  4217fd:	mov    edx,0x9633
  421802:	mov    QWORD PTR [rsp+0x40],rax
  421807:	mov    eax,DWORD PTR [rsp+0x74]
  42180b:	mov    DWORD PTR [rsp+0x38],eax
  42180f:	mov    rax,QWORD PTR [rsp+0x50]
  421814:	mov    QWORD PTR [rsp+0x30],rax
  421819:	movsx  eax,WORD PTR [rsp+0x78]
  42181e:	mov    DWORD PTR [rsp+0x28],eax
  421822:	movzx  eax,BYTE PTR [rsp+0x7b]
  421827:	mov    DWORD PTR [rsp+0x20],eax
  42182b:	call   0x40d350
  421830:	jmp    0x42164f
  421835:	mov    rax,QWORD PTR [rsp+0x50]
  42183a:	mov    QWORD PTR [rsp+0x50],0x0
  421843:	mov    QWORD PTR [rbx+0xc8],rax
  42184a:	jmp    0x42165d
  42184f:	nop
  421850:	mov    r9d,DWORD PTR [rsp+0x70]
  421855:	test   r9d,r9d
  421858:	je     0x42164f
  42185e:	jmp    0x4217e0
  421860:	mov    r9d,DWORD PTR [rdi]
  421863:	test   r9d,r9d
  421866:	je     0x421509
  42186c:	mov    rbx,QWORD PTR [rip+0x211e9]        # 0x442a5c
  421873:	call   rbx
  421875:	mov    ecx,DWORD PTR [rax]
  421877:	call   0x42d620
  42187c:	mov    rdi,rax
  42187f:	call   rbx
  421881:	mov    QWORD PTR [rsp+0x20],rdi
  421886:	mov    r9d,DWORD PTR [rax]
  421889:	lea    r8,[rip+0x173f0]        # 0x438c80
  421890:	lea    rcx,[rip+0x16349]        # 0x437be0
  421897:	mov    edx,0x9242
  42189c:	call   0x40d350
  4218a1:	jmp    0x421509
  4218a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4218b0:	mov    r9d,DWORD PTR [rsp+0x70]
  4218b5:	lea    r8,[rip+0x1738c]        # 0x438c48
  4218bc:	lea    rcx,[rip+0x1631d]        # 0x437be0
  4218c3:	mov    edx,0x9182
  4218c8:	call   0x40d350
  4218cd:	jmp    0x42153b
  4218d2:	lea    r8,[rip+0x173bf]        # 0x438c98
  4218d9:	lea    rcx,[rip+0x16300]        # 0x437be0
  4218e0:	mov    edx,0x9602
  4218e5:	call   0x40d350
  4218ea:	mov    rax,QWORD PTR [rbx+0x28]
  4218ee:	jmp    0x421643
  4218f3:	cmp    DWORD PTR [rbx+0x178],0x2
  4218fa:	jne    0x4217cd
  421900:	cmp    QWORD PTR [rbx+0x138],0x0
  421908:	jne    0x42164f
  42190e:	jmp    0x4217cd
  421913:	mov    edx,DWORD PTR [rsp+0x70]
  421917:	mov    rcx,rbx
  42191a:	call   0x410640
  42191f:	mov    QWORD PTR [rsp+0x68],rax
  421924:	jmp    0x4215fe
  421929:	nop    DWORD PTR [rax+0x0]
  421930:	lea    r8,[rip+0x172d9]        # 0x438c10
  421937:	lea    rcx,[rip+0x162a2]        # 0x437be0
  42193e:	mov    r9d,r12d
  421941:	mov    edx,0x9132
  421946:	call   0x40d350
  42194b:	jmp    0x4214fc
  421950:	push   r15
  421952:	push   r14
  421954:	push   r13
  421956:	push   r12
  421958:	push   rbp
  421959:	push   rdi
  42195a:	push   rsi
  42195b:	push   rbx
  42195c:	sub    rsp,0x98
  421963:	mov    rsi,QWORD PTR [rip+0x1a4c6]        # 0x43be30
  42196a:	mov    rax,QWORD PTR [rcx+0x150]
  421971:	mov    rbx,rcx
  421974:	mov    QWORD PTR [rsp+0xe8],rdx
  42197c:	mov    QWORD PTR [rsp+0xf0],r8
  421984:	mov    ebp,r9d
  421987:	mov    QWORD PTR [rsp+0x68],0x0
  421990:	mov    r10d,DWORD PTR [rsi]
  421993:	mov    QWORD PTR [rsp+0x40],rax
  421998:	test   r10d,r10d
  42199b:	jne    0x4223b0
  4219a1:	test   DWORD PTR [rcx+0x148],0xfffffffd
  4219ab:	jne    0x4219d4
  4219ad:	mov    rax,QWORD PTR [rsp+0xe8]
  4219b5:	mov    DWORD PTR [rax],0xfd4
  4219bb:	mov    eax,0x1
  4219c0:	add    rsp,0x98
  4219c7:	pop    rbx
  4219c8:	pop    rsi
  4219c9:	pop    rdi
  4219ca:	pop    rbp
  4219cb:	pop    r12
  4219cd:	pop    r13
  4219cf:	pop    r14
  4219d1:	pop    r15
  4219d3:	ret    
  4219d4:	mov    edx,0x4
  4219d9:	mov    rcx,rbx
  4219dc:	xor    r13d,r13d
  4219df:	call   0x423970
  4219e4:	xor    edi,edi
  4219e6:	xor    r12d,r12d
  4219e9:	cmp    eax,0x4
  4219ec:	jne    0x421b56
  4219f2:	lea    rax,[rsp+0x70]
  4219f7:	mov    QWORD PTR [rsp+0x48],rax
  4219fc:	lea    rax,[rsp+0x68]
  421a01:	mov    QWORD PTR [rsp+0x58],rax
  421a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421a10:	mov    rcx,rbx
  421a13:	call   0x41bbc0
  421a18:	mov    r8d,DWORD PTR [rsi]
  421a1b:	movzx  r15d,al
  421a1f:	mov    r14d,r15d
  421a22:	test   r8d,r8d
  421a25:	jne    0x421a50
  421a27:	lea    eax,[r14-0x20]
  421a2b:	cmp    al,0xdf
  421a2d:	ja     0x4222b0
  421a33:	lea    rdx,[rip+0x178f2]        # 0x43932c
  421a3a:	movzx  eax,al
  421a3d:	movsxd rax,DWORD PTR [rdx+rax*4]
  421a41:	add    rdx,rax
  421a44:	jmp    rdx
  421a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421a50:	mov    ecx,r15d
  421a53:	call   0x41e2d0
  421a58:	lea    r8,[rip+0x17329]        # 0x438d88
  421a5f:	lea    rcx,[rip+0x1617a]        # 0x437be0
  421a66:	mov    QWORD PTR [rsp+0x20],rax
  421a6b:	mov    r9d,r15d
  421a6e:	mov    edx,0x21c5
  421a73:	call   0x40d350
  421a78:	jmp    0x421a27
  421a7a:	nop    WORD PTR [rax+rax*1+0x0]
  421a80:	mov    eax,DWORD PTR [rbx+0x178]
  421a86:	lea    ecx,[rax-0x2]
  421a89:	cmp    ecx,0x9
  421a8c:	ja     0x421aa1
  421a8e:	mov    eax,0x1
  421a93:	shl    rax,cl
  421a96:	test   eax,0x2a1
  421a9b:	jne    0x422a03
  421aa1:	mov    rax,QWORD PTR [rsp+0xe8]
  421aa9:	test   ebp,0x200
  421aaf:	mov    DWORD PTR [rax],0xfd6
  421ab5:	je     0x4228d5
  421abb:	mov    rcx,rbx
  421abe:	mov    r13d,0x300
  421ac4:	call   0x41bc10
  421ac9:	mov    r10d,DWORD PTR [rsi]
  421acc:	test   r10d,r10d
  421acf:	je     0x421b24
  421ad1:	lea    r8,[rip+0x172e0]        # 0x438db8
  421ad8:	lea    rcx,[rip+0x16101]        # 0x437be0
  421adf:	mov    edx,0x3137
  421ae4:	call   0x40d350
  421ae9:	jmp    0x421b24
  421aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  421af0:	mov    rax,QWORD PTR [rsp+0xe8]
  421af8:	test   ebp,0x200
  421afe:	mov    DWORD PTR [rax],0xfd5
  421b04:	je     0x422520
  421b0a:	mov    rcx,rbx
  421b0d:	mov    r13d,0x300
  421b13:	call   0x41bc10
  421b18:	mov    r14d,DWORD PTR [rsi]
  421b1b:	test   r14d,r14d
  421b1e:	jne    0x422f85
  421b24:	movzx  eax,BYTE PTR [rbx+0x14c]
  421b2b:	or     edi,eax
  421b2d:	jne    0x421e58
  421b33:	test   r13d,ebp
  421b36:	jne    0x422396
  421b3c:	mov    eax,DWORD PTR [rbx+0x148]
  421b42:	test   eax,0xfffffffd
  421b47:	je     0x4228b0
  421b4d:	cmp    eax,0x5
  421b50:	jne    0x421a10
  421b56:	mov    eax,0xffffffff
  421b5b:	jmp    0x4219c0
  421b60:	mov    rcx,rbx
  421b63:	call   0x41bcf0
  421b68:	mov    rcx,rbx
  421b6b:	movzx  r14d,ax
  421b6f:	call   0x41bbc0
  421b74:	mov    rcx,rbx
  421b77:	mov    r15d,eax
  421b7a:	call   0x41bbc0
  421b7f:	cmp    r15b,0x20
  421b83:	jne    0x4228f3
  421b89:	mov    rcx,rbx
  421b8c:	call   0x41bbc0
  421b91:	cmp    al,0x1e
  421b93:	mov    r14d,eax
  421b96:	ja     0x4229a3
  421b9c:	mov    r8,QWORD PTR [rsp+0x48]
  421ba1:	movzx  edx,al
  421ba4:	mov    r9d,0x1e
  421baa:	mov    rcx,rbx
  421bad:	call   0x41bd60
  421bb2:	movzx  eax,al
  421bb5:	mov    BYTE PTR [rsp+rax*1+0x70],0x0
  421bba:	mov    rdx,QWORD PTR [rsp+0x48]
  421bbf:	mov    rcx,rbx
  421bc2:	call   0x41f600
  421bc7:	mov    rdx,rax
  421bca:	jmp    0x42290d
  421bcf:	nop
  421bd0:	mov    rax,QWORD PTR [rsp+0xe8]
  421bd8:	test   bpl,0x8
  421bdc:	mov    rcx,rbx
  421bdf:	mov    DWORD PTR [rax],0xfd1
  421be5:	je     0x4224b0
  421beb:	call   0x41bc10
  421bf0:	mov    edx,DWORD PTR [rsi]
  421bf2:	mov    r13d,0xc
  421bf8:	test   edx,edx
  421bfa:	je     0x421b24
  421c00:	lea    r8,[rip+0x171b1]        # 0x438db8
  421c07:	lea    rcx,[rip+0x15fd2]        # 0x437be0
  421c0e:	mov    edx,0x2347
  421c13:	call   0x40d350
  421c18:	jmp    0x421b24
  421c1d:	nop    DWORD PTR [rax]
  421c20:	mov    rax,QWORD PTR [rsp+0xe8]
  421c28:	test   ebp,0x200
  421c2e:	mov    DWORD PTR [rax],0xfd4
  421c34:	je     0x4224c3
  421c3a:	mov    rcx,rbx
  421c3d:	mov    r13d,0x300
  421c43:	call   0x41bc10
  421c48:	mov    r15d,DWORD PTR [rsi]
  421c4b:	test   r15d,r15d
  421c4e:	je     0x421b24
  421c54:	lea    r8,[rip+0x1715d]        # 0x438db8
  421c5b:	lea    rcx,[rip+0x15f7e]        # 0x437be0
  421c62:	mov    edx,0x2d07
  421c67:	call   0x40d350
  421c6c:	jmp    0x421b24
  421c71:	mov    rax,QWORD PTR [rsp+0xe8]
  421c79:	test   bpl,0x80
  421c7d:	mov    rcx,rbx
  421c80:	mov    DWORD PTR [rax],0xfd3
  421c86:	je     0x422443
  421c8c:	call   0x41bc10
  421c91:	mov    eax,DWORD PTR [rsi]
  421c93:	mov    r13d,0xc0
  421c99:	test   eax,eax
  421c9b:	je     0x421b24
  421ca1:	lea    r8,[rip+0x17110]        # 0x438db8
  421ca8:	lea    rcx,[rip+0x15f31]        # 0x437be0
  421caf:	mov    edx,0x2c17
  421cb4:	call   0x40d350
  421cb9:	jmp    0x421b24
  421cbe:	xchg   ax,ax
  421cc0:	mov    rax,QWORD PTR [rsp+0xe8]
  421cc8:	test   ebp,0x8000
  421cce:	mov    rcx,rbx
  421cd1:	mov    DWORD PTR [rax],0xfca
  421cd7:	je     0x422430
  421cdd:	call   0x41bc10
  421ce2:	mov    eax,DWORD PTR [rsi]
  421ce4:	mov    r13d,0xc000
  421cea:	test   eax,eax
  421cec:	je     0x421b24
  421cf2:	lea    r8,[rip+0x170bf]        # 0x438db8
  421cf9:	lea    rcx,[rip+0x15ee0]        # 0x437be0
  421d00:	mov    edx,0x2c97
  421d05:	call   0x40d350
  421d0a:	jmp    0x421b24
  421d0f:	nop
  421d10:	mov    rax,QWORD PTR [rsp+0xe8]
  421d18:	test   ebp,0x80000
  421d1e:	mov    DWORD PTR [rax],0xfcc
  421d24:	je     0x422460
  421d2a:	mov    rcx,rbx
  421d2d:	mov    r13d,0xc0000
  421d33:	call   0x41bc10
  421d38:	mov    r8d,DWORD PTR [rsi]
  421d3b:	test   r8d,r8d
  421d3e:	je     0x421b24
  421d44:	lea    r8,[rip+0x1706d]        # 0x438db8
  421d4b:	lea    rcx,[rip+0x15e8e]        # 0x437be0
  421d52:	mov    edx,0x31f7
  421d57:	call   0x40d350
  421d5c:	jmp    0x421b24
  421d61:	mov    rax,QWORD PTR [rbx+0x118]
  421d68:	test   rax,rax
  421d6b:	je     0x421d71
  421d6d:	mov    BYTE PTR [rax+0x3a],0x1
  421d71:	mov    rax,QWORD PTR [rsp+0xe8]
  421d79:	test   ebp,0x2000
  421d7f:	mov    rcx,rbx
  421d82:	mov    DWORD PTR [rax],0xfcd
  421d88:	je     0x422300
  421d8e:	call   0x41bc10
  421d93:	mov    r9d,DWORD PTR [rsi]
  421d96:	mov    r13d,0x3000
  421d9c:	test   r9d,r9d
  421d9f:	je     0x421b24
  421da5:	lea    r8,[rip+0x1700c]        # 0x438db8
  421dac:	lea    rcx,[rip+0x15e2d]        # 0x437be0
  421db3:	mov    edx,0x2937
  421db8:	call   0x40d350
  421dbd:	jmp    0x421b24
  421dc2:	mov    rax,QWORD PTR [rbx+0x138]
  421dc9:	test   rax,rax
  421dcc:	je     0x422b00
  421dd2:	mov    rdx,QWORD PTR [rax+0x48]
  421dd6:	mov    rcx,rbx
  421dd9:	call   0x40fb90
  421dde:	mov    r11d,DWORD PTR [rsi]
  421de1:	test   r11d,r11d
  421de4:	jne    0x422ed1
  421dea:	mov    rax,QWORD PTR [rbx+0x110]
  421df1:	test   rax,rax
  421df4:	je     0x421dfa
  421df6:	mov    BYTE PTR [rax+0x3a],0x1
  421dfa:	mov    rax,QWORD PTR [rsp+0xe8]
  421e02:	test   ebp,0x800
  421e08:	mov    rcx,rbx
  421e0b:	mov    DWORD PTR [rax],0xfc8
  421e11:	jne    0x422b20
  421e17:	cmp    r14b,0xd2
  421e1b:	jne    0x422990
  421e21:	call   0x41edc0
  421e26:	mov    r13d,0xc00
  421e2c:	mov    r12d,eax
  421e2f:	jmp    0x421e40
  421e31:	mov    rcx,rbx
  421e34:	call   0x41ea30
  421e39:	mov    r12d,eax
  421e3c:	nop    DWORD PTR [rax+0x0]
  421e40:	test   r12d,r12d
  421e43:	js     0x422396
  421e49:	movzx  eax,BYTE PTR [rbx+0x14c]
  421e50:	or     edi,eax
  421e52:	je     0x421b33
  421e58:	xor    ebp,ebp
  421e5a:	jmp    0x421b3c
  421e5f:	nop
  421e60:	cmp    DWORD PTR [rbx+0x178],0x7
  421e67:	mov    rcx,rbx
  421e6a:	je     0x421e8a
  421e6c:	mov    rax,QWORD PTR [rsp+0xe8]
  421e74:	test   bpl,0x8
  421e78:	mov    r13d,0xc
  421e7e:	mov    DWORD PTR [rax],0xfd1
  421e84:	jne    0x422b54
  421e8a:	call   0x4200c0
  421e8f:	test   eax,eax
  421e91:	mov    r12d,eax
  421e94:	js     0x422396
  421e9a:	mov    rcx,rbx
  421e9d:	call   0x41bbc0
  421ea2:	cmp    al,0xa4
  421ea4:	mov    rcx,rbx
  421ea7:	je     0x422a31
  421ead:	call   0x41bc10
  421eb2:	jmp    0x421b24
  421eb7:	nop    WORD PTR [rax+rax*1+0x0]
  421ec0:	mov    rcx,rbx
  421ec3:	call   0x41bd10
  421ec8:	mov    rcx,rbx
  421ecb:	mov    r14d,eax
  421ece:	call   0x41bc20
  421ed3:	mov    edx,eax
  421ed5:	and    edx,0xffffffbf
  421ed8:	cmp    dl,0xac
  421edb:	je     0x421ef0
  421edd:	lea    edx,[rax+0x3]
  421ee0:	cmp    dl,0x1
  421ee3:	jbe    0x421ef0
  421ee5:	cmp    al,0x20
  421ee7:	jne    0x421b24
  421eed:	nop    DWORD PTR [rax]
  421ef0:	mov    eax,DWORD PTR [rbx+0x178]
  421ef6:	test   eax,eax
  421ef8:	jne    0x421b24
  421efe:	mov    rax,QWORD PTR [rsp+0xe8]
  421f06:	and    ebp,0xffff7fff
  421f0c:	xor    r12d,r12d
  421f0f:	mov    r13d,0xc000
  421f15:	mov    DWORD PTR [rax],0xfcb
  421f1b:	mov    eax,DWORD PTR [rsi]
  421f1d:	mov    BYTE PTR [rbx+0x141],0x1
  421f24:	mov    DWORD PTR [rbx+0x144],r14d
  421f2b:	test   eax,eax
  421f2d:	je     0x421b24
  421f33:	lea    r8,[rip+0x1738e]        # 0x4392c8
  421f3a:	lea    rcx,[rip+0x15c9f]        # 0x437be0
  421f41:	mov    r9d,r14d
  421f44:	mov    edx,0x2a37
  421f49:	call   0x40d350
  421f4e:	jmp    0x421b24
  421f53:	mov    rax,QWORD PTR [rsp+0xe8]
  421f5b:	test   bpl,0x8
  421f5f:	mov    rcx,rbx
  421f62:	mov    DWORD PTR [rax],0xfd1
  421f68:	je     0x422413
  421f6e:	call   0x41bc10
  421f73:	mov    eax,DWORD PTR [rsi]
  421f75:	mov    r13d,0xc
  421f7b:	test   eax,eax
  421f7d:	je     0x421b24
  421f83:	lea    r8,[rip+0x16e2e]        # 0x438db8
  421f8a:	lea    rcx,[rip+0x15c4f]        # 0x437be0
  421f91:	mov    edx,0x2387
  421f96:	call   0x40d350
  421f9b:	jmp    0x421b24
  421fa0:	mov    rax,QWORD PTR [rsp+0xe8]
  421fa8:	test   bpl,0x80
  421fac:	mov    rcx,rbx
  421faf:	mov    DWORD PTR [rax],0xfd3
  421fb5:	je     0x422480
  421fbb:	call   0x41bc10
  421fc0:	mov    eax,DWORD PTR [rsi]
  421fc2:	mov    r13d,0xc0
  421fc8:	test   eax,eax
  421fca:	je     0x421b24
  421fd0:	lea    r8,[rip+0x16de1]        # 0x438db8
  421fd7:	lea    rcx,[rip+0x15c02]        # 0x437be0
  421fde:	mov    edx,0x2c57
  421fe3:	call   0x40d350
  421fe8:	jmp    0x421b24
  421fed:	nop    DWORD PTR [rax]
  421ff0:	mov    rcx,rbx
  421ff3:	mov    QWORD PTR [rsp+0x70],0x0
  421ffc:	call   0x41bcf0
  422001:	mov    r8d,DWORD PTR [rsi]
  422004:	movzx  r12d,ax
  422008:	test   r8d,r8d
  42200b:	jne    0x422df0
  422011:	mov    rcx,rbx
  422014:	call   0x41bcf0
  422019:	mov    r8,QWORD PTR [rsp+0x48]
  42201e:	lea    edx,[r12-0x2]
  422023:	xor    r9d,r9d
  422026:	mov    rcx,rbx
  422029:	mov    r14d,eax
  42202c:	call   0x41e620
  422031:	test   eax,eax
  422033:	mov    DWORD PTR [rsp+0x54],eax
  422037:	jle    0x422390
  42203d:	mov    ecx,DWORD PTR [rsi]
  42203f:	test   ecx,ecx
  422041:	jne    0x422dd0
  422047:	movzx  edx,WORD PTR [rsp+0x54]
  42204c:	xor    r8d,r8d
  42204f:	mov    rcx,rbx
  422052:	call   0x412f20
  422057:	test   rax,rax
  42205a:	mov    QWORD PTR [rbx+0x128],rax
  422061:	je     0x4228c0
  422067:	mov    edx,DWORD PTR [rsi]
  422069:	test   edx,edx
  42206b:	jne    0x422da5
  422071:	mov    edx,DWORD PTR [rbx+0x120]
  422077:	mov    rcx,rbx
  42207a:	sub    edx,0x1
  42207d:	mov    r12,QWORD PTR [rax+rdx*8]
  422081:	mov    rdx,r12
  422084:	call   0x40fb90
  422089:	mov    eax,DWORD PTR [rsp+0x54]
  42208d:	mov    r15,QWORD PTR [rsp+0x70]
  422092:	mov    WORD PTR [r12+0xa],r14w
  422098:	mov    DWORD PTR [rsp+0x54],edi
  42209c:	xor    r14d,r14d
  42209f:	mov    rdi,r12
  4220a2:	sub    eax,0x1
  4220a5:	lea    rax,[rax*8+0x8]
  4220ad:	mov    r12,rax
  4220b0:	mov    rax,QWORD PTR [rdi]
  4220b3:	mov    rdx,QWORD PTR [r15]
  4220b6:	mov    rcx,QWORD PTR [rax+r14*1]
  4220ba:	add    rcx,0x38
  4220be:	call   0x41d6f0
  4220c3:	test   rax,rax
  4220c6:	je     0x4228c0
  4220cc:	add    r14,0x8
  4220d0:	mov    r15,QWORD PTR [r15+0x8]
  4220d4:	cmp    r14,r12
  4220d7:	jne    0x4220b0
  4220d9:	mov    rcx,QWORD PTR [rsp+0x70]
  4220de:	mov    edi,DWORD PTR [rsp+0x54]
  4220e2:	xor    r12d,r12d
  4220e5:	call   0x41e570
  4220ea:	jmp    0x421b24
  4220ef:	nop
  4220f0:	mov    rax,QWORD PTR [rsp+0xe8]
  4220f8:	test   ebp,0x20000
  4220fe:	mov    DWORD PTR [rax],0xfcc
  422104:	je     0x422493
  42210a:	mov    rcx,rbx
  42210d:	mov    r13d,0x30000
  422113:	call   0x41bc10
  422118:	mov    r9d,DWORD PTR [rsi]
  42211b:	test   r9d,r9d
  42211e:	je     0x421b24
  422124:	lea    r8,[rip+0x16c8d]        # 0x438db8
  42212b:	lea    rcx,[rip+0x15aae]        # 0x437be0
  422132:	mov    edx,0x31b7
  422137:	call   0x40d350
  42213c:	jmp    0x421b24
  422141:	mov    rcx,rbx
  422144:	call   0x41bc10
  422149:	mov    r9d,DWORD PTR [rbx+0x178]
  422150:	test   r9d,r9d
  422153:	je     0x422635
  422159:	mov    eax,DWORD PTR [rsi]
  42215b:	mov    r14,QWORD PTR [rsp+0x58]
  422160:	test   eax,eax
  422162:	je     0x42217b
  422164:	jmp    0x42309b
  422169:	nop    DWORD PTR [rax+0x0]
  422170:	mov    rdx,r14
  422173:	mov    rcx,rbx
  422176:	call   0x41fc00
  42217b:	mov    rcx,rbx
  42217e:	call   0x41bbc0
  422183:	cmp    al,0xac
  422185:	jne    0x4225b0
  42218b:	mov    eax,DWORD PTR [rsi]
  42218d:	test   eax,eax
  42218f:	je     0x422170
  422191:	lea    r8,[rip+0x16c88]        # 0x438e20
  422198:	lea    rcx,[rip+0x15a41]        # 0x437be0
  42219f:	mov    edx,0x24f5
  4221a4:	call   0x40d350
  4221a9:	jmp    0x422170
  4221ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4221b0:	mov    rcx,rbx
  4221b3:	call   0x41e7b0
  4221b8:	mov    r12d,eax
  4221bb:	jmp    0x421e40
  4221c0:	mov    rax,QWORD PTR [rsp+0xe8]
  4221c8:	test   bpl,0x8
  4221cc:	mov    rcx,rbx
  4221cf:	mov    DWORD PTR [rax],0xfd1
  4221d5:	je     0x422560
  4221db:	call   0x41bc10
  4221e0:	mov    eax,DWORD PTR [rsi]
  4221e2:	mov    r13d,0xc
  4221e8:	test   eax,eax
  4221ea:	je     0x421b24
  4221f0:	lea    r8,[rip+0x16bc1]        # 0x438db8
  4221f7:	lea    rcx,[rip+0x159e2]        # 0x437be0
  4221fe:	mov    edx,0x23f7
  422203:	call   0x40d350
  422208:	jmp    0x421b24
  42220d:	nop    DWORD PTR [rax]
  422210:	mov    rax,QWORD PTR [rsp+0xe8]
  422218:	test   bpl,0x20
  42221c:	mov    rcx,rbx
  42221f:	mov    DWORD PTR [rax],0xfd2
  422225:	je     0x422690
  42222b:	call   0x41bc10
  422230:	mov    eax,DWORD PTR [rsi]
  422232:	mov    r13d,0x30
  422238:	test   eax,eax
  42223a:	je     0x421b24
  422240:	lea    r8,[rip+0x16b71]        # 0x438db8
  422247:	lea    rcx,[rip+0x15992]        # 0x437be0
  42224e:	mov    edx,0x26f7
  422253:	call   0x40d350
  422258:	jmp    0x421b24
  42225d:	nop    DWORD PTR [rax]
  422260:	mov    rax,QWORD PTR [rsp+0xe8]
  422268:	test   bpl,0x20
  42226c:	mov    rcx,rbx
  42226f:	mov    DWORD PTR [rax],0xfd2
  422275:	je     0x422740
  42227b:	call   0x41bc10
  422280:	mov    r10d,DWORD PTR [rsi]
  422283:	mov    r13d,0x30
  422289:	test   r10d,r10d
  42228c:	je     0x421b24
  422292:	lea    r8,[rip+0x16b1f]        # 0x438db8
  422299:	lea    rcx,[rip+0x15940]        # 0x437be0
  4222a0:	mov    edx,0x2737
  4222a5:	call   0x40d350
  4222aa:	jmp    0x421b24
  4222af:	nop
  4222b0:	mov    rax,QWORD PTR [rsp+0xe8]
  4222b8:	test   bpl,0x2
  4222bc:	mov    DWORD PTR [rax],0xfd7
  4222c2:	je     0x422593
  4222c8:	mov    rcx,rbx
  4222cb:	mov    r13d,0x3
  4222d1:	call   0x41bc10
  4222d6:	mov    ecx,DWORD PTR [rsi]
  4222d8:	test   ecx,ecx
  4222da:	je     0x421b24
  4222e0:	lea    r8,[rip+0x16ad1]        # 0x438db8
  4222e7:	lea    rcx,[rip+0x158f2]        # 0x437be0
  4222ee:	mov    edx,0x3237
  4222f3:	call   0x40d350
  4222f8:	jmp    0x421b24
  4222fd:	nop    DWORD PTR [rax]
  422300:	call   0x41bcf0
  422305:	mov    r8d,DWORD PTR [rsi]
  422308:	movsx  r13d,ax
  42230c:	test   r8d,r8d
  42230f:	jne    0x422f65
  422315:	mov    r9d,DWORD PTR [rbx+0x120]
  42231c:	test   r9d,r9d
  42231f:	je     0x42236b
  422321:	mov    rax,QWORD PTR [rbx+0x128]
  422328:	mov    r12,QWORD PTR [rax]
  42232b:	movzx  edx,WORD PTR [r12+0xa]
  422331:	cmp    r13d,edx
  422334:	je     0x422b80
  42233a:	lea    edx,[r9-0x1]
  42233e:	lea    rcx,[rax+0x8]
  422342:	lea    rax,[rax+rdx*8+0x8]
  422347:	jmp    0x422366
  422349:	nop    DWORD PTR [rax+0x0]
  422350:	mov    r12,QWORD PTR [rcx]
  422353:	add    rcx,0x8
  422357:	movzx  edx,WORD PTR [r12+0xa]
  42235d:	cmp    r13d,edx
  422360:	je     0x422b80
  422366:	cmp    rcx,rax
  422369:	jne    0x422350
  42236b:	mov    ecx,DWORD PTR [rsi]
  42236d:	test   ecx,ecx
  42236f:	je     0x422390
  422371:	lea    r8,[rip+0x16ee8]        # 0x439260
  422378:	lea    rcx,[rip+0x15861]        # 0x437be0
  42237f:	mov    edx,0x7555
  422384:	call   0x40d350
  422389:	nop    DWORD PTR [rax+0x0]
  422390:	mov    r12d,0xffffffff
  422396:	mov    edx,0x3
  42239b:	mov    rcx,rbx
  42239e:	call   0x423970
  4223a3:	mov    eax,r12d
  4223a6:	jmp    0x4219c0
  4223ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4223b0:	mov    DWORD PTR [rsp+0x30],r9d
  4223b5:	mov    QWORD PTR [rsp+0x28],r8
  4223ba:	mov    r9,rcx
  4223bd:	lea    r8,[rip+0x1696c]        # 0x438d30
  4223c4:	lea    rcx,[rip+0x15815]        # 0x437be0
  4223cb:	mov    QWORD PTR [rsp+0x20],rdx
  4223d0:	mov    edx,0x20d7
  4223d5:	call   0x40d350
  4223da:	test   DWORD PTR [rbx+0x148],0xfffffffd
  4223e4:	jne    0x4219d4
  4223ea:	mov    r9d,DWORD PTR [rsi]
  4223ed:	test   r9d,r9d
  4223f0:	je     0x4219ad
  4223f6:	lea    r8,[rip+0x1695b]        # 0x438d58
  4223fd:	lea    rcx,[rip+0x157dc]        # 0x437be0
  422404:	mov    edx,0x2107
  422409:	call   0x40d350
  42240e:	jmp    0x4219ad
  422413:	call   0x41f070
  422418:	mov    r13d,0xc
  42241e:	mov    r12d,eax
  422421:	jmp    0x421e40
  422426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422430:	call   0x41e1a0
  422435:	mov    r13d,0xc000
  42243b:	mov    r12d,eax
  42243e:	jmp    0x421e40
  422443:	call   0x41fe60
  422448:	mov    r13d,0xc0
  42244e:	mov    r12d,eax
  422451:	jmp    0x421e40
  422456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422460:	mov    edx,r15d
  422463:	mov    rcx,rbx
  422466:	mov    r13d,0xc0000
  42246c:	call   0x420550
  422471:	mov    r12d,eax
  422474:	jmp    0x421e40
  422479:	nop    DWORD PTR [rax+0x0]
  422480:	call   0x41f3d0
  422485:	mov    r13d,0xc0
  42248b:	mov    r12d,eax
  42248e:	jmp    0x421e40
  422493:	mov    edx,r15d
  422496:	mov    rcx,rbx
  422499:	mov    r13d,0x30000
  42249f:	call   0x420550
  4224a4:	mov    r12d,eax
  4224a7:	jmp    0x421e40
  4224ac:	nop    DWORD PTR [rax+0x0]
  4224b0:	call   0x41fda0
  4224b5:	mov    r13d,0xc
  4224bb:	mov    r12d,eax
  4224be:	jmp    0x421e40
  4224c3:	mov    rdx,QWORD PTR [rsp+0xf0]
  4224cb:	mov    rcx,rbx
  4224ce:	call   0x423240
  4224d3:	cmp    DWORD PTR [rbx+0x178],0x64
  4224da:	mov    r12d,eax
  4224dd:	jne    0x4229e0
  4224e3:	cmp    QWORD PTR [rsp+0xf0],0x0
  4224ec:	mov    r13d,0x300
  4224f2:	je     0x421e40
  4224f8:	mov    rax,QWORD PTR [rsp+0xf0]
  422500:	test   BYTE PTR [rax],0x2
  422503:	jne    0x421e40
  422509:	mov    rdx,QWORD PTR [rbx+0x160]
  422510:	mov    rcx,rbx
  422513:	call   0x4124f0
  422518:	jmp    0x421e40
  42251d:	nop    DWORD PTR [rax]
  422520:	mov    rdx,QWORD PTR [rsp+0xf0]
  422528:	mov    rcx,rbx
  42252b:	call   0x423240
  422530:	cmp    DWORD PTR [rbx+0x178],0xf
  422537:	mov    r12d,eax
  42253a:	ja     0x4229e0
  422540:	mov    edx,DWORD PTR [rbx+0x178]
  422546:	lea    rax,[rip+0x1715f]        # 0x4396ac
  42254d:	movsxd rdx,DWORD PTR [rax+rdx*4]
  422551:	add    rax,rdx
  422554:	jmp    rax
  422556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422560:	call   0x4203d0
  422565:	test   eax,eax
  422567:	mov    r12d,eax
  42256a:	js     0x422396
  422570:	mov    rcx,rbx
  422573:	call   0x41bbc0
  422578:	cmp    al,0xa4
  42257a:	mov    rcx,rbx
  42257d:	je     0x422e10
  422583:	call   0x41bc10
  422588:	mov    r13d,0xc
  42258e:	jmp    0x421b24
  422593:	mov    edx,r15d
  422596:	mov    rcx,rbx
  422599:	mov    r13d,0x3
  42259f:	call   0x420550
  4225a4:	mov    r12d,eax
  4225a7:	jmp    0x421e40
  4225ac:	nop    DWORD PTR [rax+0x0]
  4225b0:	mov    rcx,rbx
  4225b3:	call   0x41bc10
  4225b8:	mov    eax,DWORD PTR [rsi]
  4225ba:	test   eax,eax
  4225bc:	jne    0x422f33
  4225c2:	mov    rax,QWORD PTR [rsp+0x68]
  4225c7:	test   rax,rax
  4225ca:	mov    rcx,rax
  4225cd:	je     0x42262b
  4225cf:	cmp    WORD PTR [rax+0x8],0x0
  4225d4:	je     0x42262b
  4225d6:	mov    rdx,QWORD PTR [rax]
  4225d9:	mov    r14,QWORD PTR [rdx]
  4225dc:	mov    edx,DWORD PTR [rbx+0x178]
  4225e2:	cmp    edx,0x2
  4225e5:	je     0x422eee
  4225eb:	lea    eax,[rdx-0xb]
  4225ee:	and    eax,0xfffffffd
  4225f1:	jne    0x42261a
  4225f3:	mov    rax,QWORD PTR [rbx+0x160]
  4225fa:	test   rax,rax
  4225fd:	je     0x42261a
  4225ff:	mov    r11d,DWORD PTR [rax+0xc]
  422603:	test   r11d,r11d
  422606:	jne    0x42261a
  422608:	mov    r10d,DWORD PTR [r14+0x64]
  42260c:	test   r10d,r10d
  42260f:	jle    0x42261a
  422611:	mov    rcx,QWORD PTR [r14+0x48]
  422615:	mov    ecx,DWORD PTR [rcx]
  422617:	mov    DWORD PTR [rax+0xc],ecx
  42261a:	cmp    edx,0xf
  42261d:	je     0x423151
  422623:	mov    rax,QWORD PTR [rsp+0x68]
  422628:	mov    rcx,rax
  42262b:	call   0x412420
  422630:	jmp    0x421b24
  422635:	mov    rax,QWORD PTR [rsp+0xe8]
  42263d:	test   ebp,0x8000
  422643:	mov    rcx,rbx
  422646:	mov    DWORD PTR [rax],0xfca
  42264c:	je     0x4229f0
  422652:	call   0x41bc10
  422657:	mov    r9d,DWORD PTR [rsi]
  42265a:	mov    r13d,0xc000
  422660:	test   r9d,r9d
  422663:	je     0x421b24
  422669:	lea    r8,[rip+0x16748]        # 0x438db8
  422670:	lea    rcx,[rip+0x15569]        # 0x437be0
  422677:	mov    edx,0x2677
  42267c:	call   0x40d350
  422681:	jmp    0x421b24
  422686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422690:	call   0x41bcf0
  422695:	mov    rcx,rbx
  422698:	call   0x41bcf0
  42269d:	mov    rcx,rbx
  4226a0:	mov    r13d,eax
  4226a3:	call   0x41bbc0
  4226a8:	mov    r9d,DWORD PTR [rsi]
  4226ab:	movzx  eax,al
  4226ae:	mov    r15d,eax
  4226b1:	test   r9d,r9d
  4226b4:	jne    0x423073
  4226ba:	mov    r8d,DWORD PTR [rbx+0x120]
  4226c1:	test   r8d,r8d
  4226c4:	je     0x42270b
  4226c6:	mov    rax,QWORD PTR [rbx+0x128]
  4226cd:	movsx  ecx,r13w
  4226d1:	mov    r12,QWORD PTR [rax]
  4226d4:	movzx  edx,WORD PTR [r12+0xa]
  4226da:	cmp    edx,ecx
  4226dc:	je     0x422c00
  4226e2:	sub    r8d,0x1
  4226e6:	lea    rdx,[rax+0x8]
  4226ea:	lea    r8,[rax+r8*8+0x8]
  4226ef:	jmp    0x422706
  4226f1:	mov    r12,QWORD PTR [rdx]
  4226f4:	add    rdx,0x8
  4226f8:	movzx  eax,WORD PTR [r12+0xa]
  4226fe:	cmp    eax,ecx
  422700:	je     0x422c00
  422706:	cmp    rdx,r8
  422709:	jne    0x4226f1
  42270b:	test   r9d,r9d
  42270e:	je     0x422390
  422714:	lea    r8,[rip+0x1683d]        # 0x438f58
  42271b:	lea    rcx,[rip+0x154be]        # 0x437be0
  422722:	movsx  r9d,r13w
  422726:	mov    edx,0x57e7
  42272b:	mov    r12d,0xffffffff
  422731:	call   0x40d350
  422736:	jmp    0x422396
  42273b:	nop    DWORD PTR [rax+rax*1+0x0]
  422740:	call   0x41bcf0
  422745:	mov    r9d,DWORD PTR [rsi]
  422748:	movzx  r12d,ax
  42274c:	test   r9d,r9d
  42274f:	jne    0x423053
  422755:	mov    rcx,rbx
  422758:	call   0x41bcf0
  42275d:	mov    r8d,DWORD PTR [rsi]
  422760:	mov    r14d,eax
  422763:	test   r8d,r8d
  422766:	jne    0x423032
  42276c:	mov    rcx,rbx
  42276f:	call   0x41bbc0
  422774:	mov    ecx,DWORD PTR [rsi]
  422776:	movzx  eax,al
  422779:	mov    DWORD PTR [rsp+0x54],eax
  42277d:	test   ecx,ecx
  42277f:	jne    0x423012
  422785:	mov    r8d,DWORD PTR [rsp+0x54]
  42278a:	mov    edx,r12d
  42278d:	mov    rcx,rbx
  422790:	call   0x412f20
  422795:	test   rax,rax
  422798:	mov    QWORD PTR [rbx+0x128],rax
  42279f:	je     0x422390
  4227a5:	mov    edx,DWORD PTR [rsi]
  4227a7:	test   edx,edx
  4227a9:	jne    0x422fe7
  4227af:	mov    edx,DWORD PTR [rbx+0x120]
  4227b5:	mov    rcx,rbx
  4227b8:	sub    edx,0x1
  4227bb:	mov    r13,QWORD PTR [rax+rdx*8]
  4227bf:	mov    rdx,r13
  4227c2:	call   0x40fb90
  4227c7:	mov    r15d,DWORD PTR [rsi]
  4227ca:	test   r15d,r15d
  4227cd:	jne    0x422fca
  4227d3:	mov    edx,DWORD PTR [rsp+0x54]
  4227d7:	mov    r15,QWORD PTR [r13+0x30]
  4227db:	mov    WORD PTR [r13+0xa],r14w
  4227e0:	mov    eax,edx
  4227e2:	sub    eax,0x1
  4227e5:	test   edx,edx
  4227e7:	lea    r14,[r15+rax*2+0x2]
  4227ec:	je     0x422806
  4227ee:	xchg   ax,ax
  4227f0:	mov    rcx,rbx
  4227f3:	add    r15,0x2
  4227f7:	call   0x41bcf0
  4227fc:	mov    WORD PTR [r15-0x2],ax
  422801:	cmp    r15,r14
  422804:	jne    0x4227f0
  422806:	mov    eax,DWORD PTR [rsi]
  422808:	test   eax,eax
  42280a:	jne    0x422fa2
  422810:	test   r12d,r12d
  422813:	je     0x422970
  422819:	xor    r15d,r15d
  42281c:	jmp    0x42282f
  42281e:	xchg   ax,ax
  422820:	add    r15,0x1
  422824:	cmp    r12d,r15d
  422827:	jbe    0x422950
  42282d:	mov    eax,DWORD PTR [rsi]
  42282f:	test   eax,eax
  422831:	jne    0x422890
  422833:	mov    rax,QWORD PTR [r13+0x0]
  422837:	mov    rcx,rbx
  42283a:	mov    r14,QWORD PTR [rax+r15*8]
  42283e:	call   0x41bbc0
  422843:	mov    rcx,rbx
  422846:	mov    BYTE PTR [r14+0x5e],al
  42284a:	call   0x41bcf0
  42284f:	mov    rdx,r14
  422852:	mov    WORD PTR [r14+0x60],ax
  422857:	mov    rcx,rbx
  42285a:	call   0x41ff40
  42285f:	mov    rax,QWORD PTR [r14+0x38]
  422863:	cmp    QWORD PTR [rax],0x0
  422867:	jne    0x422820
  422869:	movzx  ecx,BYTE PTR [r14+0x5e]
  42286e:	call   0x41e210
  422873:	lea    rcx,[r14+0x38]
  422877:	mov    rdx,rax
  42287a:	call   0x41d6f0
  42287f:	test   rax,rax
  422882:	jne    0x422820
  422884:	jmp    0x422390
  422889:	nop    DWORD PTR [rax+0x0]
  422890:	lea    r8,[rip+0x168f9]        # 0x439190
  422897:	lea    rcx,[rip+0x15342]        # 0x437be0
  42289e:	mov    edx,0xaf45
  4228a3:	call   0x40d350
  4228a8:	jmp    0x422833
  4228aa:	nop    WORD PTR [rax+rax*1+0x0]
  4228b0:	cmp    edi,0x1
  4228b3:	sbb    eax,eax
  4228b5:	and    eax,0x3
  4228b8:	sub    eax,0x2
  4228bb:	jmp    0x4219c0
  4228c0:	mov    rcx,QWORD PTR [rsp+0x70]
  4228c5:	mov    r12d,0xffffffff
  4228cb:	call   0x41e570
  4228d0:	jmp    0x422396
  4228d5:	mov    rdx,QWORD PTR [rsp+0xf0]
  4228dd:	mov    rcx,rbx
  4228e0:	mov    r13d,0x300
  4228e6:	call   0x423240
  4228eb:	mov    r12d,eax
  4228ee:	jmp    0x421e40
  4228f3:	mov    eax,DWORD PTR [rsi]
  4228f5:	test   eax,eax
  4228f7:	jne    0x422adf
  4228fd:	lea    r8d,[r14-0x2]
  422901:	xor    edx,edx
  422903:	mov    rcx,rbx
  422906:	call   0x41bc50
  42290b:	xor    edx,edx
  42290d:	mov    rcx,rbx
  422910:	call   0x4167f0
  422915:	mov    rax,QWORD PTR [rbx+0x160]
  42291c:	test   rax,rax
  42291f:	je     0x421b24
  422925:	cmp    BYTE PTR [rax+0x2e],0x0
  422929:	jne    0x421b24
  42292f:	mov    rcx,rbx
  422932:	call   0x41bbc0
  422937:	cmp    al,0xe5
  422939:	je     0x422e23
  42293f:	mov    rcx,rbx
  422942:	jmp    0x421ead
  422947:	nop    WORD PTR [rax+rax*1+0x0]
  422950:	mov    r12d,DWORD PTR [rsi]
  422953:	test   r12d,r12d
  422956:	je     0x422970
  422958:	lea    r8,[rip+0x16861]        # 0x4391c0
  42295f:	lea    rcx,[rip+0x1527a]        # 0x437be0
  422966:	mov    edx,0xb025
  42296b:	call   0x40d350
  422970:	mov    rcx,r13
  422973:	mov    r13d,0x30
  422979:	call   0x40fd10
  42297e:	mov    r12d,eax
  422981:	jmp    0x421e40
  422986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422990:	call   0x41e700
  422995:	mov    r13d,0xc00
  42299b:	mov    r12d,eax
  42299e:	jmp    0x421e40
  4229a3:	mov    r8,QWORD PTR [rsp+0x48]
  4229a8:	mov    rcx,rbx
  4229ab:	mov    r9d,0x1e
  4229b1:	mov    edx,0x1e
  4229b6:	call   0x41bd60
  4229bb:	lea    r8d,[r14-0x1e]
  4229bf:	movzx  eax,al
  4229c2:	xor    edx,edx
  4229c4:	mov    rcx,rbx
  4229c7:	mov    BYTE PTR [rsp+rax*1+0x70],0x0
  4229cc:	movzx  r8d,r8b
  4229d0:	call   0x41bc50
  4229d5:	jmp    0x421bba
  4229da:	nop    WORD PTR [rax+rax*1+0x0]
  4229e0:	mov    r13d,0x300
  4229e6:	jmp    0x421e40
  4229eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4229f0:	call   0x41fd00
  4229f5:	mov    r13d,0xc000
  4229fb:	mov    r12d,eax
  4229fe:	jmp    0x421e40
  422a03:	mov    rdx,QWORD PTR [rsp+0xf0]
  422a0b:	mov    rcx,rbx
  422a0e:	call   0x423240
  422a13:	mov    r12d,eax
  422a16:	mov    rax,QWORD PTR [rbx+0x150]
  422a1d:	cmp    rax,0xffffffffffffffff
  422a21:	cmove  rax,QWORD PTR [rsp+0x40]
  422a27:	mov    QWORD PTR [rsp+0x40],rax
  422a2c:	jmp    0x421e40
  422a31:	call   0x41ead0
  422a36:	mov    r12d,eax
  422a39:	jmp    0x421e40
  422a3e:	mov    r11d,DWORD PTR [rsi]
  422a41:	test   r11d,r11d
  422a44:	jne    0x42318b
  422a4a:	mov    rdx,QWORD PTR [rbx+0x138]
  422a51:	test   rdx,rdx
  422a54:	je     0x422a72
  422a56:	movzx  eax,WORD PTR [rdx+0x44]
  422a5a:	and    eax,0xfffffffd
  422a5d:	or     eax,0x5
  422a60:	cmp    DWORD PTR [rdx+0x40],0x2
  422a64:	mov    WORD PTR [rdx+0x44],ax
  422a68:	jne    0x422a72
  422a6a:	mov    rcx,rbx
  422a6d:	call   0x412980
  422a72:	mov    rax,QWORD PTR [rsp+0xe8]
  422a7a:	mov    r13d,0x300
  422a80:	mov    r12d,0x1
  422a86:	mov    DWORD PTR [rax],0x1
  422a8c:	jmp    0x421b24
  422a91:	mov    rax,QWORD PTR [rsp+0xe8]
  422a99:	mov    r13d,0x300
  422a9f:	mov    DWORD PTR [rax],0xfd4
  422aa5:	mov    rax,QWORD PTR [rsp+0x40]
  422aaa:	mov    QWORD PTR [rbx+0x150],rax
  422ab1:	jmp    0x421e40
  422ab6:	cmp    QWORD PTR [rsp+0xf0],0x0
  422abf:	je     0x422a72
  422ac1:	mov    rax,QWORD PTR [rsp+0xf0]
  422ac9:	test   BYTE PTR [rax],0x2
  422acc:	jne    0x422a72
  422ace:	mov    rdx,QWORD PTR [rbx+0x160]
  422ad5:	mov    rcx,rbx
  422ad8:	call   0x4124f0
  422add:	jmp    0x422a72
  422adf:	lea    r8,[rip+0x16812]        # 0x4392f8
  422ae6:	lea    rcx,[rip+0x150f3]        # 0x437be0
  422aed:	movzx  r9d,r15b
  422af1:	mov    edx,0x9dc2
  422af6:	call   0x40d350
  422afb:	jmp    0x4228fd
  422b00:	mov    rdx,QWORD PTR [rbx+0x118]
  422b07:	test   rdx,rdx
  422b0a:	je     0x421dea
  422b10:	mov    rcx,rbx
  422b13:	call   0x40fb90
  422b18:	jmp    0x421dea
  422b1d:	nop    DWORD PTR [rax]
  422b20:	call   0x41bc10
  422b25:	mov    r10d,DWORD PTR [rsi]
  422b28:	mov    r13d,0xc00
  422b2e:	test   r10d,r10d
  422b31:	je     0x421b24
  422b37:	lea    r8,[rip+0x1627a]        # 0x438db8
  422b3e:	lea    rcx,[rip+0x1509b]        # 0x437be0
  422b45:	mov    edx,0x2847
  422b4a:	call   0x40d350
  422b4f:	jmp    0x421b24
  422b54:	call   0x41bc10
  422b59:	mov    ecx,DWORD PTR [rsi]
  422b5b:	test   ecx,ecx
  422b5d:	je     0x421b24
  422b63:	lea    r8,[rip+0x1624e]        # 0x438db8
  422b6a:	lea    rcx,[rip+0x1506f]        # 0x437be0
  422b71:	mov    edx,0x2277
  422b76:	call   0x40d350
  422b7b:	jmp    0x421b24
  422b80:	mov    rdx,r12
  422b83:	mov    rcx,rbx
  422b86:	call   0x40fb90
  422b8b:	cmp    WORD PTR [r12+0x8],0x0
  422b92:	je     0x422d97
  422b98:	xor    r13d,r13d
  422b9b:	jmp    0x422bb3
  422b9d:	nop    DWORD PTR [rax]
  422ba0:	movzx  eax,WORD PTR [r12+0x8]
  422ba6:	add    r13d,0x1
  422baa:	cmp    r13d,eax
  422bad:	jae    0x422d97
  422bb3:	mov    rdx,QWORD PTR [r12]
  422bb7:	mov    eax,r13d
  422bba:	mov    rcx,rbx
  422bbd:	mov    rdx,QWORD PTR [rdx+rax*8]
  422bc1:	mov    rax,QWORD PTR [rdx]
  422bc4:	call   QWORD PTR [rax+0x8]
  422bc7:	test   eax,eax
  422bc9:	jns    0x422ba0
  422bcb:	mov    edx,DWORD PTR [rsi]
  422bcd:	test   edx,edx
  422bcf:	je     0x422390
  422bd5:	lea    r8,[rip+0x166bc]        # 0x439298
  422bdc:	lea    rcx,[rip+0x14ffd]        # 0x437be0
  422be3:	mov    edx,0x7615
  422be8:	mov    r12d,0xffffffff
  422bee:	call   0x40d350
  422bf3:	jmp    0x422396
  422bf8:	nop    DWORD PTR [rax+rax*1+0x0]
  422c00:	test   r9d,r9d
  422c03:	jne    0x42312e
  422c09:	mov    rdx,r12
  422c0c:	mov    rcx,rbx
  422c0f:	call   0x40fb90
  422c14:	mov    eax,DWORD PTR [rsi]
  422c16:	test   eax,eax
  422c18:	jne    0x42310e
  422c1e:	xor    r14d,r14d
  422c21:	xor    r13d,r13d
  422c24:	test   r15d,r15d
  422c27:	je     0x422d58
  422c2d:	mov    DWORD PTR [rsp+0x54],edi
  422c31:	jmp    0x422c92
  422c33:	mov    rdx,rdi
  422c36:	mov    rcx,rbx
  422c39:	call   0x40a5a0
  422c3e:	mov    rax,QWORD PTR [rdi]
  422c41:	mov    rdx,rdi
  422c44:	mov    rcx,rbx
  422c47:	call   QWORD PTR [rax]
  422c49:	mov    edx,DWORD PTR [rsi]
  422c4b:	test   edx,edx
  422c4d:	jne    0x422d33
  422c53:	mov    eax,DWORD PTR [rdi+0x10]
  422c56:	mov    rdx,rdi
  422c59:	mov    rcx,rbx
  422c5c:	mov    DWORD PTR [rdi+0x20],eax
  422c5f:	call   0x41eef0
  422c64:	cmp    WORD PTR [rbx],0x402
  422c69:	je     0x422c81
  422c6b:	mov    rcx,rbx
  422c6e:	call   0x41bbc0
  422c73:	xor    edx,edx
  422c75:	movzx  r8d,al
  422c79:	mov    rcx,rbx
  422c7c:	call   0x41bc50
  422c81:	add    r13d,0x1
  422c85:	add    r14,0x8
  422c89:	cmp    r15d,r13d
  422c8c:	je     0x422d54
  422c92:	mov    r11d,DWORD PTR [rsi]
  422c95:	test   r11d,r11d
  422c98:	jne    0x422d13
  422c9a:	mov    rax,QWORD PTR [r12]
  422c9e:	mov    rcx,rbx
  422ca1:	mov    rdi,QWORD PTR [rax+r14*1]
  422ca5:	call   0x41bbc0
  422caa:	mov    rcx,rbx
  422cad:	mov    BYTE PTR [rdi+0x5e],al
  422cb0:	call   0x41bbc0
  422cb5:	movzx  eax,al
  422cb8:	mov    WORD PTR [rdi+0x60],ax
  422cbc:	mov    rax,QWORD PTR [rdi+0x38]
  422cc0:	cmp    QWORD PTR [rax],0x0
  422cc4:	jne    0x422ce4
  422cc6:	movzx  ecx,BYTE PTR [rdi+0x5e]
  422cca:	call   0x41e210
  422ccf:	lea    rcx,[rdi+0x38]
  422cd3:	mov    rdx,rax
  422cd6:	call   0x41d6f0
  422cdb:	test   rax,rax
  422cde:	je     0x422390
  422ce4:	mov    rcx,rbx
  422ce7:	call   0x41bd10
  422cec:	mov    rcx,rbx
  422cef:	mov    DWORD PTR [rdi+0x8],eax
  422cf2:	call   0x41bbc0
  422cf7:	mov    rdx,QWORD PTR [rip+0x19112]        # 0x43be10
  422cfe:	movzx  eax,al
  422d01:	mov    r8,rax
  422d04:	cmp    BYTE PTR [rdx+rax*1],0x0
  422d08:	jne    0x422c33
  422d0e:	jmp    0x422390
  422d13:	lea    r8,[rip+0x162d8]        # 0x438ff2
  422d1a:	lea    rcx,[rip+0x14ebf]        # 0x437be0
  422d21:	mov    r9d,r13d
  422d24:	mov    edx,0x58c5
  422d29:	call   0x40d350
  422d2e:	jmp    0x422c9a
  422d33:	mov    r9d,DWORD PTR [rdi+0x10]
  422d37:	lea    r8,[rip+0x162d2]        # 0x439010
  422d3e:	lea    rcx,[rip+0x14e9b]        # 0x437be0
  422d45:	mov    edx,0x59e5
  422d4a:	call   0x40d350
  422d4f:	jmp    0x422c53
  422d54:	mov    edi,DWORD PTR [rsp+0x54]
  422d58:	mov    rcx,rbx
  422d5b:	call   0x41bbc0
  422d60:	mov    r14d,DWORD PTR [rsi]
  422d63:	movzx  r13d,al
  422d67:	test   r14d,r14d
  422d6a:	jne    0x42316a
  422d70:	test   r13b,r13b
  422d73:	jne    0x4230bd
  422d79:	xor    eax,eax
  422d7b:	mov    WORD PTR [r12+0x38],ax
  422d81:	mov    rcx,r12
  422d84:	mov    r13d,0x30
  422d8a:	call   0x40fd10
  422d8f:	mov    r12d,eax
  422d92:	jmp    0x421e40
  422d97:	mov    r13d,0x3000
  422d9d:	xor    r12d,r12d
  422da0:	jmp    0x421b24
  422da5:	mov    r9d,DWORD PTR [rbx+0x120]
  422dac:	lea    r8,[rip+0x1612d]        # 0x438ee0
  422db3:	lea    rcx,[rip+0x14e26]        # 0x437be0
  422dba:	mov    edx,0xa965
  422dbf:	call   0x40d350
  422dc4:	mov    rax,QWORD PTR [rbx+0x128]
  422dcb:	jmp    0x422071
  422dd0:	lea    r8,[rip+0x160d9]        # 0x438eb0
  422dd7:	lea    rcx,[rip+0x14e02]        # 0x437be0
  422dde:	mov    r9d,eax
  422de1:	mov    edx,0xa915
  422de6:	call   0x40d350
  422deb:	jmp    0x422047
  422df0:	lea    r8,[rip+0x16089]        # 0x438e80
  422df7:	lea    rcx,[rip+0x14de2]        # 0x437be0
  422dfe:	mov    r9d,r12d
  422e01:	mov    edx,0xa855
  422e06:	call   0x40d350
  422e0b:	jmp    0x422011
  422e10:	call   0x41ead0
  422e15:	mov    r13d,0xc
  422e1b:	mov    r12d,eax
  422e1e:	jmp    0x421e40
  422e23:	mov    edx,0xe5
  422e28:	mov    rcx,rbx
  422e2b:	call   0x421470
  422e30:	mov    rax,QWORD PTR [rbx+0x160]
  422e37:	test   rax,rax
  422e3a:	je     0x421b24
  422e40:	cmp    BYTE PTR [rax+0x2e],0x0
  422e44:	je     0x421b24
  422e4a:	mov    rcx,rbx
  422e4d:	call   0x41bbc0
  422e52:	cmp    al,0xfd
  422e54:	jne    0x42293f
  422e5a:	mov    rdx,QWORD PTR [rsp+0xf0]
  422e62:	mov    rcx,rbx
  422e65:	call   0x423240
  422e6a:	cmp    QWORD PTR [rsp+0xf0],0x0
  422e73:	mov    r12d,eax
  422e76:	je     0x422e83
  422e78:	mov    rax,QWORD PTR [rsp+0xf0]
  422e80:	and    DWORD PTR [rax],0xfffffffd
  422e83:	mov    rax,QWORD PTR [rsp+0xe8]
  422e8b:	test   ebp,0x200
  422e91:	mov    r13d,0x300
  422e97:	mov    DWORD PTR [rax],0xfd4
  422e9d:	je     0x421e40
  422ea3:	mov    rcx,rbx
  422ea6:	call   0x41bc10
  422eab:	cmp    DWORD PTR [rsi],0x0
  422eae:	je     0x421e40
  422eb4:	lea    r8,[rip+0x15efd]        # 0x438db8
  422ebb:	lea    rcx,[rip+0x14d1e]        # 0x437be0
  422ec2:	mov    edx,0x2be7
  422ec7:	call   0x40d350
  422ecc:	jmp    0x421e40
  422ed1:	lea    r8,[rip+0x16318]        # 0x4391f0
  422ed8:	lea    rcx,[rip+0x14d01]        # 0x437be0
  422edf:	mov    edx,0x27b5
  422ee4:	call   0x40d350
  422ee9:	jmp    0x421dea
  422eee:	mov    r15,QWORD PTR [rbx+0x138]
  422ef5:	test   r15,r15
  422ef8:	je     0x422628
  422efe:	mov    rax,QWORD PTR [r14+0x48]
  422f02:	mov    r9d,DWORD PTR [rax]
  422f05:	mov    eax,DWORD PTR [rsi]
  422f07:	test   eax,eax
  422f09:	mov    DWORD PTR [r15+0x18],r9d
  422f0d:	jne    0x4231a8
  422f13:	movzx  eax,WORD PTR [r15+0x44]
  422f18:	and    eax,0xffffffb9
  422f1b:	cmp    r9d,0x1
  422f1f:	sbb    ecx,ecx
  422f21:	and    ecx,0x42
  422f24:	add    ecx,0x2
  422f27:	or     eax,ecx
  422f29:	mov    WORD PTR [r15+0x44],ax
  422f2e:	jmp    0x4225eb
  422f33:	mov    rax,QWORD PTR [rsp+0x68]
  422f38:	mov    r9d,0xffffffff
  422f3e:	test   rax,rax
  422f41:	je     0x422f48
  422f43:	movzx  r9d,WORD PTR [rax+0x8]
  422f48:	lea    r8,[rip+0x15ef3]        # 0x438e42
  422f4f:	lea    rcx,[rip+0x14c8a]        # 0x437be0
  422f56:	mov    edx,0x2537
  422f5b:	call   0x40d350
  422f60:	jmp    0x4225c2
  422f65:	lea    r8,[rip+0x162c4]        # 0x439230
  422f6c:	lea    rcx,[rip+0x14c6d]        # 0x437be0
  422f73:	mov    r9d,r13d
  422f76:	mov    edx,0x7515
  422f7b:	call   0x40d350
  422f80:	jmp    0x422315
  422f85:	lea    r8,[rip+0x15e2c]        # 0x438db8
  422f8c:	lea    rcx,[rip+0x14c4d]        # 0x437be0
  422f93:	mov    edx,0x2dc7
  422f98:	call   0x40d350
  422f9d:	jmp    0x421b24
  422fa2:	lea    r8,[rip+0x161b7]        # 0x439160
  422fa9:	lea    rcx,[rip+0x14c30]        # 0x437be0
  422fb0:	mov    edx,0xaf15
  422fb5:	call   0x40d350
  422fba:	test   r12d,r12d
  422fbd:	je     0x422950
  422fc3:	mov    eax,DWORD PTR [rsi]
  422fc5:	jmp    0x422819
  422fca:	lea    r8,[rip+0x1615f]        # 0x439130
  422fd1:	lea    rcx,[rip+0x14c08]        # 0x437be0
  422fd8:	mov    edx,0xae35
  422fdd:	call   0x40d350
  422fe2:	jmp    0x4227d3
  422fe7:	mov    r9d,DWORD PTR [rbx+0x120]
  422fee:	lea    r8,[rip+0x16103]        # 0x4390f8
  422ff5:	lea    rcx,[rip+0x14be4]        # 0x437be0
  422ffc:	mov    edx,0xade5
  423001:	call   0x40d350
  423006:	mov    rax,QWORD PTR [rbx+0x128]
  42300d:	jmp    0x4227af
  423012:	lea    r8,[rip+0x160af]        # 0x4390c8
  423019:	lea    rcx,[rip+0x14bc0]        # 0x437be0
  423020:	mov    r9d,eax
  423023:	mov    edx,0xad95
  423028:	call   0x40d350
  42302d:	jmp    0x422785
  423032:	lea    r8,[rip+0x16057]        # 0x439090
  423039:	lea    rcx,[rip+0x14ba0]        # 0x437be0
  423040:	movzx  r9d,ax
  423044:	mov    edx,0xad15
  423049:	call   0x40d350
  42304e:	jmp    0x42276c
  423053:	lea    r8,[rip+0x16006]        # 0x439060
  42305a:	lea    rcx,[rip+0x14b7f]        # 0x437be0
  423061:	mov    r9d,r12d
  423064:	mov    edx,0xac75
  423069:	call   0x40d350
  42306e:	jmp    0x422755
  423073:	lea    r8,[rip+0x15e9e]        # 0x438f18
  42307a:	lea    rcx,[rip+0x14b5f]        # 0x437be0
  423081:	movsx  r9d,r13w
  423085:	mov    DWORD PTR [rsp+0x20],eax
  423089:	mov    edx,0x5755
  42308e:	call   0x40d350
  423093:	mov    r9d,DWORD PTR [rsi]
  423096:	jmp    0x4226ba
  42309b:	lea    r8,[rip+0x15d56]        # 0x438df8
  4230a2:	lea    rcx,[rip+0x14b37]        # 0x437be0
  4230a9:	mov    edx,0x24d7
  4230ae:	call   0x40d350
  4230b3:	mov    r14,QWORD PTR [rsp+0x58]
  4230b8:	jmp    0x42217b
  4230bd:	movzx  ecx,r13b
  4230c1:	mov    edx,0x2
  4230c6:	call   0x42d740
  4230cb:	test   rax,rax
  4230ce:	mov    r14,rax
  4230d1:	mov    QWORD PTR [r12+0x30],rax
  4230d6:	je     0x422390
  4230dc:	movzx  eax,r13b
  4230e0:	mov    WORD PTR [r12+0x38],ax
  4230e6:	lea    eax,[r13-0x1]
  4230ea:	lea    r13,[r14+rax*2+0x2]
  4230ef:	nop
  4230f0:	mov    rcx,rbx
  4230f3:	add    r14,0x2
  4230f7:	call   0x41bbc0
  4230fc:	movzx  eax,al
  4230ff:	mov    WORD PTR [r14-0x2],ax
  423104:	cmp    r14,r13
  423107:	jne    0x4230f0
  423109:	jmp    0x422d81
  42310e:	lea    r8,[rip+0x15eb3]        # 0x438fc8
  423115:	lea    rcx,[rip+0x14ac4]        # 0x437be0
  42311c:	mov    r9d,r15d
  42311f:	mov    edx,0x5855
  423124:	call   0x40d350
  423129:	jmp    0x422c1e
  42312e:	movzx  r9d,WORD PTR [r12+0xa]
  423134:	lea    r8,[rip+0x15e65]        # 0x438fa0
  42313b:	lea    rcx,[rip+0x14a9e]        # 0x437be0
  423142:	mov    edx,0x5827
  423147:	call   0x40d350
  42314c:	jmp    0x422c09
  423151:	mov    rdx,QWORD PTR [rbx+0x160]
  423158:	mov    rcx,rbx
  42315b:	call   0x4124f0
  423160:	mov    rcx,QWORD PTR [rsp+0x68]
  423165:	jmp    0x42262b
  42316a:	lea    r8,[rip+0x15ebf]        # 0x439030
  423171:	lea    rcx,[rip+0x14a68]        # 0x437be0
  423178:	movzx  r9d,r13b
  42317c:	mov    edx,0x5ac5
  423181:	call   0x40d350
  423186:	jmp    0x422d70
  42318b:	lea    r8,[rip+0x16185]        # 0x439317
  423192:	lea    rcx,[rip+0x14a47]        # 0x437be0
  423199:	mov    edx,0x2e67
  42319e:	call   0x40d350
  4231a3:	jmp    0x422a4a
  4231a8:	lea    r8,[rip+0x15cb0]        # 0x438e5f
  4231af:	lea    rcx,[rip+0x14a2a]        # 0x437be0
  4231b6:	mov    dx,0x25a7
  4231ba:	call   0x40d350
  4231bf:	mov    r9d,DWORD PTR [r15+0x18]
  4231c3:	mov    edx,DWORD PTR [rbx+0x178]
  4231c9:	jmp    0x422f13
  4231ce:	xchg   ax,ax
  4231d0:	push   r12
  4231d2:	push   rbp
  4231d3:	push   rdi
  4231d4:	push   rsi
  4231d5:	push   rbx
  4231d6:	sub    rsp,0x30
  4231da:	xor    ebx,ebx
  4231dc:	mov    r12d,0xffffffff
  4231e2:	lea    rdi,[rsp+0x2c]
  4231e7:	lea    rsi,[rsp+0x28]
  4231ec:	mov    rbp,rcx
  4231ef:	nop
  4231f0:	mov    r9d,0x100
  4231f6:	mov    r8,rdi
  4231f9:	mov    rdx,rsi
  4231fc:	mov    rcx,rbp
  4231ff:	call   0x421950
  423204:	test   eax,eax
  423206:	jne    0x423224
  423208:	mov    eax,DWORD PTR [rsp+0x28]
  42320c:	lea    r9d,[rax-0xfd4]
  423213:	cmp    r9d,0x2
  423217:	ja     0x4231f0
  423219:	test   BYTE PTR [rsp+0x2c],0x2
  42321e:	cmovne ebx,r12d
  423222:	jmp    0x4231f0
  423224:	cmovs  ebx,eax
  423227:	mov    eax,ebx
  423229:	add    rsp,0x30
  42322d:	pop    rbx
  42322e:	pop    rsi
  42322f:	pop    rdi
  423230:	pop    rbp
  423231:	pop    r12
  423233:	ret    
  423234:	xchg   ax,ax
  423236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423240:	push   r15
  423242:	push   r14
  423244:	push   r13
  423246:	push   r12
  423248:	push   rbp
  423249:	push   rdi
  42324a:	push   rsi
  42324b:	push   rbx
  42324c:	sub    rsp,0x58
  423250:	mov    rbx,rcx
  423253:	mov    r15,rdx
  423256:	call   0x41bcf0
  42325b:	mov    rcx,rbx
  42325e:	movzx  r14d,ax
  423262:	call   0x41bcf0
  423267:	mov    r12,QWORD PTR [rip+0x18bc2]        # 0x43be30
  42326e:	mov    eax,r14d
  423271:	mov    ebp,r14d
  423274:	shr    ax,0x5
  423278:	shr    bp,0x4
  42327c:	mov    r13d,r14d
  42327f:	mov    esi,eax
  423281:	and    r13d,0x1
  423285:	and    ebp,0x1
  423288:	mov    ecx,DWORD PTR [r12]
  42328c:	and    esi,0x1
  42328f:	mov    edi,r14d
  423292:	test   ecx,ecx
  423294:	jne    0x423550
  42329a:	mov    rax,QWORD PTR [rbx+0x118]
  4232a1:	test   rax,rax
  4232a4:	je     0x4232b8
  4232a6:	mov    BYTE PTR [rax+0x3b],r13b
  4232aa:	cmp    QWORD PTR [rbx+0x110],0x0
  4232b2:	je     0x423590
  4232b8:	test   r15,r15
  4232bb:	je     0x4232c0
  4232bd:	mov    DWORD PTR [r15],r14d
  4232c0:	cmp    WORD PTR [rbx],0x701
  4232c5:	mov    rcx,rbx
  4232c8:	jbe    0x4233b0
  4232ce:	call   0x41bd30
  4232d3:	mov    r14,rax
  4232d6:	mov    edx,DWORD PTR [r12]
  4232da:	test   edx,edx
  4232dc:	jne    0x423354
  4232de:	test   sil,sil
  4232e1:	je     0x423374
  4232e7:	cmp    BYTE PTR [rbx+0x140],0x0
  4232ee:	mov    BYTE PTR [rbx+0x14c],0x0
  4232f5:	je     0x4233c0
  4232fb:	mov    BYTE PTR [rbx+0xf1],0x7
  423302:	mov    edx,0x2
  423307:	mov    rcx,rbx
  42330a:	call   0x423970
  42330f:	mov    BYTE PTR [rbx+0x140],0x0
  423316:	cmp    DWORD PTR [rbx+0x148],0x5
  42331d:	je     0x4235a4
  423323:	test   bpl,bpl
  423326:	mov    rax,0xffffffffffffffff
  42332d:	cmovne rax,r14
  423331:	mov    QWORD PTR [rbx+0x150],rax
  423338:	mov    eax,esi
  42333a:	shl    eax,0x1f
  42333d:	sar    eax,0x1f
  423340:	and    eax,0xfffffffe
  423343:	add    rsp,0x58
  423347:	pop    rbx
  423348:	pop    rsi
  423349:	pop    rdi
  42334a:	pop    rbp
  42334b:	pop    r12
  42334d:	pop    r13
  42334f:	pop    r14
  423351:	pop    r15
  423353:	ret    
  423354:	lea    r8,[rip+0x163f5]        # 0x439750
  42335b:	lea    rcx,[rip+0x1487e]        # 0x437be0
  423362:	mov    r9,r14
  423365:	mov    edx,0x8227
  42336a:	call   0x40d350
  42336f:	test   sil,sil
  423372:	jne    0x423385
  423374:	test   r13w,r13w
  423378:	jne    0x423316
  42337a:	movzx  eax,BYTE PTR [rbx+0x14c]
  423381:	test   al,al
  423383:	jne    0x423316
  423385:	mov    eax,DWORD PTR [r12]
  423389:	test   eax,eax
  42338b:	je     0x4232e7
  423391:	lea    r8,[rip+0x163e0]        # 0x439778
  423398:	lea    rcx,[rip+0x14841]        # 0x437be0
  42339f:	mov    edx,0x8257
  4233a4:	call   0x40d350
  4233a9:	jmp    0x4232e7
  4233ae:	xchg   ax,ax
  4233b0:	call   0x41bd10
  4233b5:	movsxd r14,eax
  4233b8:	jmp    0x4232d6
  4233bd:	nop    DWORD PTR [rax]
  4233c0:	xor    edx,edx
  4233c2:	mov    rcx,rbx
  4233c5:	call   0x423970
  4233ca:	movzx  eax,BYTE PTR [rbx+0xa0]
  4233d1:	test   al,0x8
  4233d3:	je     0x423316
  4233d9:	mov    rdx,QWORD PTR [rbx+0x50]
  4233dd:	and    eax,0xfffffff7
  4233e0:	mov    BYTE PTR [rbx+0xa0],al
  4233e6:	test   rdx,rdx
  4233e9:	mov    QWORD PTR [rsp+0x48],rdx
  4233ee:	je     0x4235b0
  4233f4:	add    DWORD PTR [rdx+0x8],0x1
  4233f8:	mov    r12d,0x1
  4233fe:	lea    r13,[rsp+0x48]
  423403:	jmp    0x423415
  423405:	mov    rcx,r13
  423408:	call   0x412720
  42340d:	mov    QWORD PTR [rsp+0x48],rdi
  423412:	mov    rdx,rdi
  423415:	mov    rdi,QWORD PTR [rdx]
  423418:	test   rdi,rdi
  42341b:	je     0x423515
  423421:	add    DWORD PTR [rdi+0x8],0x1
  423425:	cmp    BYTE PTR [rdx+0x1d],0x0
  423429:	je     0x423405
  42342b:	mov    DWORD PTR [rdx+0x40],0x1
  423432:	mov    rcx,rbx
  423435:	call   0x41a3e0
  42343a:	test   eax,eax
  42343c:	js     0x423500
  423442:	mov    rcx,rbx
  423445:	call   0x4231d0
  42344a:	test   eax,eax
  42344c:	js     0x423500
  423452:	mov    rdx,QWORD PTR [rsp+0x48]
  423457:	mov    rcx,rbx
  42345a:	mov    BYTE PTR [rdx+0x1d],0x0
  42345e:	call   0x41ac40
  423463:	mov    rcx,r13
  423466:	call   0x412720
  42346b:	test   rdi,rdi
  42346e:	mov    QWORD PTR [rsp+0x48],rdi
  423473:	jne    0x423412
  423475:	mov    rdx,QWORD PTR [rbx+0x58]
  423479:	test   rdx,rdx
  42347c:	mov    QWORD PTR [rsp+0x40],rdx
  423481:	je     0x4234e9
  423483:	add    DWORD PTR [rdx+0x8],0x1
  423487:	lea    r13,[rsp+0x40]
  42348c:	jmp    0x4234a0
  42348e:	xchg   ax,ax
  423490:	mov    rcx,r13
  423493:	call   0x412460
  423498:	mov    QWORD PTR [rsp+0x40],rdi
  42349d:	mov    rdx,rdi
  4234a0:	mov    rdi,QWORD PTR [rdx]
  4234a3:	test   rdi,rdi
  4234a6:	je     0x423535
  4234ac:	add    DWORD PTR [rdi+0x8],0x1
  4234b0:	cmp    BYTE PTR [rdx+0x2f],0x0
  4234b4:	je     0x423490
  4234b6:	mov    rcx,rbx
  4234b9:	call   0x418ad0
  4234be:	test   eax,eax
  4234c0:	js     0x423510
  4234c2:	mov    rcx,rbx
  4234c5:	call   0x4231d0
  4234ca:	test   eax,eax
  4234cc:	js     0x423510
  4234ce:	mov    rax,QWORD PTR [rsp+0x40]
  4234d3:	mov    BYTE PTR [rax+0x2f],0x0
  4234d7:	mov    rcx,r13
  4234da:	call   0x412460
  4234df:	test   rdi,rdi
  4234e2:	mov    QWORD PTR [rsp+0x40],rdi
  4234e7:	jne    0x42349d
  4234e9:	test   r12d,r12d
  4234ec:	jne    0x423316
  4234f2:	or     BYTE PTR [rbx+0xa0],0x8
  4234f9:	jmp    0x423316
  4234fe:	xchg   ax,ax
  423500:	xor    r12d,r12d
  423503:	jmp    0x423463
  423508:	nop    DWORD PTR [rax+rax*1+0x0]
  423510:	xor    r12d,r12d
  423513:	jmp    0x4234d7
  423515:	cmp    BYTE PTR [rdx+0x1d],0x0
  423519:	jne    0x42342b
  42351f:	mov    rcx,r13
  423522:	call   0x412720
  423527:	mov    QWORD PTR [rsp+0x48],0x0
  423530:	jmp    0x423475
  423535:	cmp    BYTE PTR [rdx+0x2f],0x0
  423539:	jne    0x4234b6
  42353f:	mov    rcx,r13
  423542:	call   0x412460
  423547:	jmp    0x4234e9
  423549:	nop    DWORD PTR [rax+0x0]
  423550:	movzx  eax,bpl
  423554:	shr    di,1
  423557:	mov    r9d,r13d
  42355a:	mov    DWORD PTR [rsp+0x30],eax
  42355e:	and    edi,0x1
  423561:	movzx  eax,sil
  423565:	lea    r8,[rip+0x16184]        # 0x4396f0
  42356c:	lea    rcx,[rip+0x1466d]        # 0x437be0
  423573:	mov    DWORD PTR [rsp+0x28],edi
  423577:	mov    DWORD PTR [rsp+0x20],eax
  42357b:	and    r9d,0x1
  42357f:	mov    edx,0x8117
  423584:	call   0x40d350
  423589:	jmp    0x42329a
  42358e:	xchg   ax,ax
  423590:	mov    rdx,QWORD PTR [rbx+0x118]
  423597:	mov    rcx,rbx
  42359a:	call   0x40fb90
  42359f:	jmp    0x4232b8
  4235a4:	mov    eax,0xffffffff
  4235a9:	jmp    0x423343
  4235ae:	xchg   ax,ax
  4235b0:	mov    rdx,QWORD PTR [rbx+0x58]
  4235b4:	mov    r12d,0x1
  4235ba:	test   rdx,rdx
  4235bd:	mov    QWORD PTR [rsp+0x40],rdx
  4235c2:	jne    0x423483
  4235c8:	jmp    0x423316
  4235cd:	nop    DWORD PTR [rax]
  4235d0:	push   rsi
  4235d1:	push   rbx
  4235d2:	sub    rsp,0x38
  4235d6:	movzx  edx,BYTE PTR [rcx+0x14c]
  4235dd:	xor    eax,eax
  4235df:	test   dl,dl
  4235e1:	je     0x4235ec
  4235e3:	cmp    DWORD PTR [rcx+0x148],0x3
  4235ea:	je     0x4235f3
  4235ec:	add    rsp,0x38
  4235f0:	pop    rbx
  4235f1:	pop    rsi
  4235f2:	ret    
  4235f3:	lea    rsi,[rsp+0x2c]
  4235f8:	mov    rbx,rcx
  4235fb:	xor    r9d,r9d
  4235fe:	xor    r8d,r8d
  423601:	mov    rdx,rsi
  423604:	mov    rcx,rbx
  423607:	call   0x421950
  42360c:	cmp    eax,0xffffffff
  42360f:	je     0x4235ec
  423611:	jg     0x423621
  423613:	cmp    eax,0xfffffffe
  423616:	jne    0x4235fb
  423618:	xor    eax,eax
  42361a:	add    rsp,0x38
  42361e:	pop    rbx
  42361f:	pop    rsi
  423620:	ret    
  423621:	cmp    eax,0x1
  423624:	jg     0x4235fb
  423626:	xor    eax,eax
  423628:	jmp    0x42361a
  42362a:	nop    WORD PTR [rax+rax*1+0x0]
  423630:	test   rcx,rcx
  423633:	je     0x423670
  423635:	cmp    edx,0xfffffff
  42363b:	mov    eax,0x7fffffff
  423640:	jle    0x423644
  423642:	repz ret 
  423644:	movzx  eax,BYTE PTR [rcx+0x21]
  423648:	movzx  ecx,BYTE PTR [rcx+0x8]
  42364c:	imul   edx,eax
  42364f:	mov    eax,edx
  423651:	mov    r8d,edx
  423654:	cdq    
  423655:	idiv   ecx
  423657:	lea    eax,[r8+rcx*1]
  42365b:	test   edx,edx
  42365d:	cmovne r8d,eax
  423661:	mov    eax,r8d
  423664:	cdq    
  423665:	idiv   ecx
  423667:	ret    
  423668:	nop    DWORD PTR [rax+rax*1+0x0]
  423670:	mov    eax,edx
  423672:	ret    
  423673:	nop
  423674:	nop
  423675:	nop
  423676:	nop
  423677:	nop
  423678:	nop
  423679:	nop
  42367a:	nop
  42367b:	nop
  42367c:	nop
  42367d:	nop
  42367e:	nop
  42367f:	nop
  423680:	sub    rsp,0x28
  423684:	lea    rax,[rip+0x16186]        # 0x439811
  42368b:	cmp    ecx,0x2
  42368e:	je     0x4236c8
  423690:	cmp    ecx,0x3
  423693:	lea    rax,[rip+0x16186]        # 0x439820
  42369a:	je     0x4236c8
  42369c:	cmp    ecx,0x1
  42369f:	lea    rax,[rip+0x1615a]        # 0x439800
  4236a6:	je     0x4236c8
  4236a8:	lea    rdx,[rip+0x1618a]        # 0x439839
  4236af:	lea    rcx,[rip+0x1618a]        # 0x439840
  4236b6:	mov    r8d,0x118
  4236bc:	call   0x42d350
  4236c1:	lea    rax,[rip+0x16168]        # 0x439830
  4236c8:	add    rsp,0x28
  4236cc:	ret    
  4236cd:	nop    DWORD PTR [rax]
  4236d0:	movsxd rdx,edx
  4236d3:	lea    rax,[rcx+rdx*1-0x1]
  4236d8:	cmp    rcx,rax
  4236db:	jae    0x4236fb
  4236dd:	nop    DWORD PTR [rax]
  4236e0:	movzx  r8d,BYTE PTR [rcx]
  4236e4:	movzx  edx,BYTE PTR [rax]
  4236e7:	add    rcx,0x1
  4236eb:	sub    rax,0x1
  4236ef:	mov    BYTE PTR [rax+0x1],r8b
  4236f3:	cmp    rax,rcx
  4236f6:	mov    BYTE PTR [rcx-0x1],dl
  4236f9:	ja     0x4236e0
  4236fb:	repz ret 
  4236fd:	nop    DWORD PTR [rax]
  423700:	push   r14
  423702:	push   r13
  423704:	push   r12
  423706:	push   rbp
  423707:	push   rdi
  423708:	push   rsi
  423709:	push   rbx
  42370a:	sub    rsp,0x70
  42370e:	mov    rbp,QWORD PTR [rip+0x1871b]        # 0x43be30
  423715:	mov    ebx,r8d
  423718:	mov    rsi,rcx
  42371b:	mov    r12,rdx
  42371e:	mov    r14d,r9d
  423721:	mov    r8d,DWORD PTR [rbp+0x0]
  423725:	test   r8d,r8d
  423728:	jne    0x4238c5
  42372e:	cmp    ebx,0x960
  423734:	lea    r10,[rip+0x16a05]        # 0x43a140
  42373b:	jne    0x423744
  42373d:	jmp    0x42374f
  42373f:	nop
  423740:	cmp    ebx,eax
  423742:	je     0x42374f
  423744:	add    r10,0x10
  423748:	mov    eax,DWORD PTR [r10]
  42374b:	test   eax,eax
  42374d:	jne    0x423740
  42374f:	test   rsi,rsi
  423752:	je     0x4238a1
  423758:	cmp    QWORD PTR [rsi+0x18],0x0
  42375d:	je     0x4238a1
  423763:	lea    r13,[rsp+0x40]
  423768:	xor    eax,eax
  42376a:	mov    ecx,0x6
  42376f:	mov    edx,0xffffffff
  423774:	mov    rdi,r13
  423777:	rep stos QWORD PTR es:[rdi],rax
  42377a:	mov    eax,DWORD PTR [r10+0x4]
  42377e:	mov    ecx,ebx
  423780:	mov    WORD PTR [rsp+0x68],dx
  423785:	mov    DWORD PTR [rsp+0x60],ebx
  423789:	mov    DWORD PTR [rsp+0x64],0xffffffff
  423791:	mov    BYTE PTR [rsp+0x6b],al
  423795:	lea    rax,[rip+0x160c0]        # 0x43985c
  42379c:	mov    QWORD PTR [rsp+0x40],rax
  4237a1:	mov    rax,QWORD PTR [r10+0x8]
  4237a5:	mov    QWORD PTR [rsp+0x48],rax
  4237aa:	call   0x410570
  4237af:	mov    rcx,rsi
  4237b2:	mov    QWORD PTR [rsp+0x58],rax
  4237b7:	mov    DWORD PTR [rsp+0x6c],r14d
  4237bc:	mov    r8,r13
  4237bf:	mov    rdx,r12
  4237c2:	call   QWORD PTR [rsi+0x18]
  4237c5:	mov    ecx,DWORD PTR [rbp+0x0]
  4237c8:	mov    esi,eax
  4237ca:	test   ecx,ecx
  4237cc:	jne    0x4238f3
  4237d2:	mov    rcx,QWORD PTR [rsp+0x58]
  4237d7:	call   0x42d6f8
  4237dc:	cmp    ebx,0x4e23
  4237e2:	mov    QWORD PTR [rsp+0x58],0x0
  4237eb:	sete   r13b
  4237ef:	cmp    esi,0x3
  4237f2:	jne    0x423812
  4237f4:	test   r13b,r13b
  4237f7:	jne    0x423812
  4237f9:	lea    rdx,[rip+0x16039]        # 0x439839
  423800:	lea    rcx,[rip+0x16091]        # 0x439898
  423807:	mov    r8d,0x16a
  42380d:	call   0x42d350
  423812:	cmp    esi,0x1
  423815:	jne    0x423860
  423817:	test   r13b,r13b
  42381a:	jne    0x423860
  42381c:	lea    rdx,[rip+0x16016]        # 0x439839
  423823:	lea    rcx,[rip+0x1609e]        # 0x4398c8
  42382a:	mov    r8d,0x16b
  423830:	call   0x42d350
  423835:	mov    eax,DWORD PTR [rbp+0x0]
  423838:	test   eax,eax
  42383a:	jne    0x42391e
  423840:	mov    esi,0x2
  423845:	test   eax,eax
  423847:	jne    0x423879
  423849:	mov    eax,esi
  42384b:	add    rsp,0x70
  42384f:	pop    rbx
  423850:	pop    rsi
  423851:	pop    rdi
  423852:	pop    rbp
  423853:	pop    r12
  423855:	pop    r13
  423857:	pop    r14
  423859:	ret    
  42385a:	nop    WORD PTR [rax+rax*1+0x0]
  423860:	cmp    esi,0x2
  423863:	je     0x42386d
  423865:	cmp    ebx,0x4e23
  42386b:	jne    0x423835
  42386d:	cmp    esi,0x3
  423870:	je     0x4238b3
  423872:	mov    eax,DWORD PTR [rbp+0x0]
  423875:	test   eax,eax
  423877:	je     0x423849
  423879:	mov    ecx,esi
  42387b:	call   0x423680
  423880:	lea    r8,[rip+0x16097]        # 0x43991e
  423887:	lea    rcx,[rip+0x15fab]        # 0x439839
  42388e:	mov    r9,rax
  423891:	mov    DWORD PTR [rsp+0x20],esi
  423895:	mov    edx,0x1777
  42389a:	call   0x40d350
  42389f:	jmp    0x423849
  4238a1:	mov    eax,DWORD PTR [rbp+0x0]
  4238a4:	test   eax,eax
  4238a6:	jne    0x42394c
  4238ac:	mov    esi,0x2
  4238b1:	jmp    0x423872
  4238b3:	mov    rcx,r12
  4238b6:	mov    esi,0x1
  4238bb:	call   0x4191e0
  4238c0:	mov    eax,DWORD PTR [rbp+0x0]
  4238c3:	jmp    0x423845
  4238c5:	mov    DWORD PTR [rsp+0x30],r9d
  4238ca:	lea    r8,[rip+0x15f71]        # 0x439842
  4238d1:	mov    r9,rcx
  4238d4:	lea    rcx,[rip+0x15f5e]        # 0x439839
  4238db:	mov    QWORD PTR [rsp+0x20],rdx
  4238e0:	mov    DWORD PTR [rsp+0x28],ebx
  4238e4:	mov    edx,0x1427
  4238e9:	call   0x40d350
  4238ee:	jmp    0x42372e
  4238f3:	mov    ecx,eax
  4238f5:	call   0x423680
  4238fa:	lea    r8,[rip+0x15f67]        # 0x439868
  423901:	lea    rcx,[rip+0x15f31]        # 0x439839
  423908:	mov    r9,rax
  42390b:	mov    DWORD PTR [rsp+0x20],esi
  42390f:	mov    edx,0x1607
  423914:	call   0x40d350
  423919:	jmp    0x4237d2
  42391e:	mov    ecx,esi
  423920:	call   0x423680
  423925:	lea    r8,[rip+0x15fcc]        # 0x4398f8
  42392c:	lea    rcx,[rip+0x15f06]        # 0x439839
  423933:	mov    r9,rax
  423936:	mov    DWORD PTR [rsp+0x20],esi
  42393a:	mov    edx,0x16e1
  42393f:	call   0x40d350
  423944:	mov    eax,DWORD PTR [rbp+0x0]
  423947:	jmp    0x423840
  42394c:	lea    r8,[rip+0x160ed]        # 0x439a40
  423953:	lea    rcx,[rip+0x15edf]        # 0x439839
  42395a:	mov    r9,rsi
  42395d:	mov    edx,0x1662
  423962:	call   0x40d350
  423967:	jmp    0x4238ac
  42396c:	nop    DWORD PTR [rax+0x0]
  423970:	push   rdi
  423971:	push   rsi
  423972:	push   rbx
  423973:	sub    rsp,0x40
  423977:	cmp    edx,0x5
  42397a:	mov    rdi,rcx
  42397d:	mov    ebx,edx
  42397f:	ja     0x4239b0
  423981:	mov    esi,DWORD PTR [rdi+0x148]
  423987:	cmp    esi,0x5
  42398a:	ja     0x4239d4
  42398c:	cmp    ebx,esi
  42398e:	je     0x4239f7
  423990:	cmp    ebx,0x5
  423993:	ja     0x423b70
  423999:	lea    rax,[rip+0x16054]        # 0x4399f4
  4239a0:	mov    edx,ebx
  4239a2:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4239a6:	add    rax,rdx
  4239a9:	jmp    rax
  4239ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4239b0:	lea    rdx,[rip+0x15e82]        # 0x439839
  4239b7:	lea    rcx,[rip+0x15f82]        # 0x439940
  4239be:	mov    r8d,0x45
  4239c4:	call   0x42d350
  4239c9:	mov    esi,DWORD PTR [rdi+0x148]
  4239cf:	cmp    esi,0x5
  4239d2:	jbe    0x42398c
  4239d4:	lea    rdx,[rip+0x15e5e]        # 0x439839
  4239db:	lea    rcx,[rip+0x15f86]        # 0x439968
  4239e2:	mov    r8d,0x46
  4239e8:	call   0x42d350
  4239ed:	mov    esi,DWORD PTR [rdi+0x148]
  4239f3:	cmp    ebx,esi
  4239f5:	jne    0x423990
  4239f7:	mov    eax,ebx
  4239f9:	add    rsp,0x40
  4239fd:	pop    rbx
  4239fe:	pop    rsi
  4239ff:	pop    rdi
  423a00:	ret    
  423a01:	cmp    esi,0x5
  423a04:	je     0x423c40
  423a0a:	cmp    esi,0x1
  423a0d:	je     0x423be0
  423a13:	cmp    esi,0x4
  423a16:	je     0x423be0
  423a1c:	mov    DWORD PTR [rdi+0x148],ebx
  423a22:	mov    eax,ebx
  423a24:	mov    rbx,QWORD PTR [rip+0x18405]        # 0x43be30
  423a2b:	mov    edx,DWORD PTR [rbx]
  423a2d:	test   edx,edx
  423a2f:	jne    0x423ba0
  423a35:	add    rsp,0x40
  423a39:	pop    rbx
  423a3a:	pop    rsi
  423a3b:	pop    rdi
  423a3c:	ret    
  423a3d:	nop    DWORD PTR [rax]
  423a40:	lea    rcx,[rdi+0x180]
  423a47:	call   0x424ad0
  423a4c:	test   eax,eax
  423a4e:	mov    eax,DWORD PTR [rdi+0x148]
  423a54:	jne    0x423a35
  423a56:	cmp    eax,0x5
  423a59:	je     0x423dca
  423a5f:	test   eax,0xfffffffd
  423a64:	jne    0x423c94
  423a6a:	test   eax,eax
  423a6c:	je     0x423d90
  423a72:	mov    DWORD PTR [rdi+0x148],0x1
  423a7c:	mov    eax,0x1
  423a81:	mov    rbx,QWORD PTR [rip+0x183a8]        # 0x43be30
  423a88:	jmp    0x423a2b
  423a8a:	nop    WORD PTR [rax+rax*1+0x0]
  423a90:	cmp    esi,0x1
  423a93:	je     0x423bf2
  423a99:	cmp    esi,0x4
  423a9c:	je     0x423bf2
  423aa2:	mov    rbx,QWORD PTR [rip+0x18387]        # 0x43be30
  423aa9:	mov    r10d,DWORD PTR [rbx]
  423aac:	test   r10d,r10d
  423aaf:	jne    0x423d0c
  423ab5:	mov    eax,esi
  423ab7:	add    rsp,0x40
  423abb:	pop    rbx
  423abc:	pop    rsi
  423abd:	pop    rdi
  423abe:	ret    
  423abf:	nop
  423ac0:	cmp    esi,0x1
  423ac3:	je     0x423d60
  423ac9:	cmp    esi,0x4
  423acc:	je     0x423d60
  423ad2:	mov    rbx,QWORD PTR [rip+0x18357]        # 0x43be30
  423ad9:	mov    eax,DWORD PTR [rbx]
  423adb:	test   eax,eax
  423add:	je     0x423ab5
  423adf:	lea    rcx,[rip+0x15ff2]        # 0x439ad8
  423ae6:	lea    rdx,[rip+0x15fd3]        # 0x439ac0
  423aed:	mov    eax,esi
  423aef:	lea    r8,[rip+0x15ea2]        # 0x439998
  423af6:	lea    r9,[rdx+rax*8]
  423afa:	mov    QWORD PTR [rsp+0x20],rcx
  423aff:	lea    rcx,[rip+0x15d33]        # 0x439839
  423b06:	mov    edx,0x532
  423b0b:	call   0x40d350
  423b10:	mov    eax,DWORD PTR [rdi+0x148]
  423b16:	jmp    0x423a2b
  423b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  423b20:	lea    rcx,[rdi+0x180]
  423b27:	call   0x424ad0
  423b2c:	test   eax,eax
  423b2e:	jne    0x423d50
  423b34:	cmp    DWORD PTR [rdi+0x148],0x3
  423b3b:	je     0x423c23
  423b41:	lea    rcx,[rdi+0x190]
  423b48:	call   QWORD PTR [rip+0x1ee16]        # 0x442964
  423b4e:	mov    rbx,QWORD PTR [rip+0x182db]        # 0x43be30
  423b55:	mov    r11d,DWORD PTR [rbx]
  423b58:	test   r11d,r11d
  423b5b:	jne    0x423e0a
  423b61:	mov    esi,DWORD PTR [rdi+0x148]
  423b67:	mov    eax,esi
  423b69:	jmp    0x423ab7
  423b6e:	xchg   ax,ax
  423b70:	lea    rdx,[rip+0x15cc2]        # 0x439839
  423b77:	lea    rcx,[rip+0x15cc2]        # 0x439840
  423b7e:	mov    r8d,0x9f
  423b84:	call   0x42d350
  423b89:	mov    eax,DWORD PTR [rdi+0x148]
  423b8f:	mov    rbx,QWORD PTR [rip+0x1829a]        # 0x43be30
  423b96:	jmp    0x423a2b
  423b9b:	nop    DWORD PTR [rax+rax*1+0x0]
  423ba0:	lea    rdx,[rip+0x15f19]        # 0x439ac0
  423ba7:	mov    ecx,eax
  423ba9:	lea    r8,[rip+0x15e20]        # 0x4399d0
  423bb0:	mov    DWORD PTR [rsp+0x3c],eax
  423bb4:	lea    rcx,[rdx+rcx*8]
  423bb8:	lea    r9,[rdx+rsi*8]
  423bbc:	mov    edx,0xa52
  423bc1:	mov    QWORD PTR [rsp+0x20],rcx
  423bc6:	lea    rcx,[rip+0x15c6c]        # 0x439839
  423bcd:	call   0x40d350
  423bd2:	mov    eax,DWORD PTR [rsp+0x3c]
  423bd6:	jmp    0x423a35
  423bdb:	nop    DWORD PTR [rax+rax*1+0x0]
  423be0:	lea    rcx,[rdi+0x190]
  423be7:	call   QWORD PTR [rip+0x1ed77]        # 0x442964
  423bed:	jmp    0x423a1c
  423bf2:	cmp    esi,0x4
  423bf5:	je     0x423cd2
  423bfb:	lea    rcx,[rdi+0x190]
  423c02:	call   QWORD PTR [rip+0x1ed5c]        # 0x442964
  423c08:	mov    DWORD PTR [rdi+0x148],0x2
  423c12:	mov    eax,0x2
  423c17:	mov    rbx,QWORD PTR [rip+0x18212]        # 0x43be30
  423c1e:	jmp    0x423a2b
  423c23:	mov    DWORD PTR [rdi+0x148],0x4
  423c2d:	mov    eax,0x4
  423c32:	mov    rbx,QWORD PTR [rip+0x181f7]        # 0x43be30
  423c39:	jmp    0x423a2b
  423c3e:	xchg   ax,ax
  423c40:	cmp    QWORD PTR [rdi+0x10],0xffffffffffffffff
  423c45:	jne    0x423a1c
  423c4b:	mov    rbx,QWORD PTR [rip+0x181de]        # 0x43be30
  423c52:	mov    r9d,DWORD PTR [rbx]
  423c55:	test   r9d,r9d
  423c58:	je     0x423ab5
  423c5e:	lea    rax,[rip+0x15e5b]        # 0x439ac0
  423c65:	lea    r9,[rip+0x15e7c]        # 0x439ae8
  423c6c:	lea    r8,[rip+0x15d25]        # 0x439998
  423c73:	lea    rcx,[rip+0x15bbf]        # 0x439839
  423c7a:	mov    edx,0x762
  423c7f:	mov    QWORD PTR [rsp+0x20],rax
  423c84:	call   0x40d350
  423c89:	mov    eax,DWORD PTR [rdi+0x148]
  423c8f:	jmp    0x423a2b
  423c94:	lea    rcx,[rdi+0x190]
  423c9b:	call   QWORD PTR [rip+0x1ecc3]        # 0x442964
  423ca1:	mov    rbx,QWORD PTR [rip+0x18188]        # 0x43be30
  423ca8:	mov    ecx,DWORD PTR [rbx]
  423caa:	test   ecx,ecx
  423cac:	jne    0x423e46
  423cb2:	mov    rcx,QWORD PTR [rdi+0x28]
  423cb6:	xor    r9d,r9d
  423cb9:	mov    r8d,0x4e33
  423cbf:	mov    rdx,rdi
  423cc2:	call   0x423700
  423cc7:	mov    eax,DWORD PTR [rdi+0x148]
  423ccd:	jmp    0x423a2b
  423cd2:	mov    rcx,rdi
  423cd5:	call   0x4125b0
  423cda:	lea    rcx,[rdi+0x138]
  423ce1:	mov    QWORD PTR [rdi+0x150],0xffffffffffffffff
  423cec:	call   0x412720
  423cf1:	lea    rcx,[rdi+0x160]
  423cf8:	call   0x412460
  423cfd:	mov    DWORD PTR [rdi+0x178],0x0
  423d07:	jmp    0x423bfb
  423d0c:	lea    rcx,[rip+0x15dbd]        # 0x439ad0
  423d13:	lea    rdx,[rip+0x15da6]        # 0x439ac0
  423d1a:	mov    eax,esi
  423d1c:	lea    r8,[rip+0x15c75]        # 0x439998
  423d23:	lea    r9,[rdx+rax*8]
  423d27:	mov    QWORD PTR [rsp+0x20],rcx
  423d2c:	lea    rcx,[rip+0x15b06]        # 0x439839
  423d33:	mov    edx,0x642
  423d38:	call   0x40d350
  423d3d:	mov    eax,DWORD PTR [rdi+0x148]
  423d43:	jmp    0x423a2b
  423d48:	nop    DWORD PTR [rax+rax*1+0x0]
  423d50:	mov    eax,DWORD PTR [rdi+0x148]
  423d56:	jmp    0x423a35
  423d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  423d60:	mov    DWORD PTR [rdi+0x148],0x3
  423d6a:	lea    rcx,[rdi+0x190]
  423d71:	call   QWORD PTR [rip+0x1ebed]        # 0x442964
  423d77:	mov    eax,DWORD PTR [rdi+0x148]
  423d7d:	mov    rbx,QWORD PTR [rip+0x180ac]        # 0x43be30
  423d84:	jmp    0x423a2b
  423d89:	nop    DWORD PTR [rax+0x0]
  423d90:	mov    rcx,rdi
  423d93:	call   0x4125b0
  423d98:	lea    rcx,[rdi+0x138]
  423d9f:	mov    QWORD PTR [rdi+0x150],0xffffffffffffffff
  423daa:	call   0x412720
  423daf:	lea    rcx,[rdi+0x160]
  423db6:	call   0x412460
  423dbb:	mov    DWORD PTR [rdi+0x178],0x0
  423dc5:	jmp    0x423a72
  423dca:	lea    rcx,[rdi+0x190]
  423dd1:	call   QWORD PTR [rip+0x1eb8d]        # 0x442964
  423dd7:	mov    rbx,QWORD PTR [rip+0x18052]        # 0x43be30
  423dde:	mov    r8d,DWORD PTR [rbx]
  423de1:	test   r8d,r8d
  423de4:	jne    0x423e7c
  423dea:	mov    rcx,QWORD PTR [rdi+0x28]
  423dee:	xor    r9d,r9d
  423df1:	mov    r8d,0x4e26
  423df7:	mov    rdx,rdi
  423dfa:	call   0x423700
  423dff:	mov    eax,DWORD PTR [rdi+0x148]
  423e05:	jmp    0x423a2b
  423e0a:	lea    rcx,[rip+0x15ccf]        # 0x439ae0
  423e11:	lea    rdx,[rip+0x15ca8]        # 0x439ac0
  423e18:	mov    eax,esi
  423e1a:	lea    r8,[rip+0x15b77]        # 0x439998
  423e21:	lea    r9,[rdx+rax*8]
  423e25:	mov    QWORD PTR [rsp+0x20],rcx
  423e2a:	lea    rcx,[rip+0x15a08]        # 0x439839
  423e31:	mov    edx,0x5c2
  423e36:	call   0x40d350
  423e3b:	mov    eax,DWORD PTR [rdi+0x148]
  423e41:	jmp    0x423a2b
  423e46:	lea    rcx,[rip+0x15c7b]        # 0x439ac8
  423e4d:	lea    rdx,[rip+0x15c6c]        # 0x439ac0
  423e54:	mov    eax,esi
  423e56:	lea    r8,[rip+0x15b3b]        # 0x439998
  423e5d:	mov    QWORD PTR [rsp+0x20],rcx
  423e62:	lea    r9,[rdx+rax*8]
  423e66:	lea    rcx,[rip+0x159cc]        # 0x439839
  423e6d:	mov    edx,0x8d2
  423e72:	call   0x40d350
  423e77:	jmp    0x423cb2
  423e7c:	lea    rcx,[rip+0x15c45]        # 0x439ac8
  423e83:	lea    rdx,[rip+0x15c36]        # 0x439ac0
  423e8a:	mov    eax,esi
  423e8c:	lea    r8,[rip+0x15b05]        # 0x439998
  423e93:	mov    QWORD PTR [rsp+0x20],rcx
  423e98:	lea    r9,[rdx+rax*8]
  423e9c:	lea    rcx,[rip+0x15996]        # 0x439839
  423ea3:	mov    edx,0x872
  423ea8:	call   0x40d350
  423ead:	jmp    0x423dea
  423eb2:	nop    DWORD PTR [rax+0x0]
  423eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423ec0:	push   rsi
  423ec1:	push   rbx
  423ec2:	sub    rsp,0x28
  423ec6:	test   rdx,rdx
  423ec9:	js     0x423f00
  423ecb:	mov    rsi,rcx
  423ece:	lea    rcx,[rdx+0x1]
  423ed2:	mov    rbx,rdx
  423ed5:	call   0x42d6b8
  423eda:	mov    r9,rax
  423edd:	xor    eax,eax
  423edf:	test   r9,r9
  423ee2:	je     0x423ef6
  423ee4:	mov    r8,rbx
  423ee7:	mov    rdx,rsi
  423eea:	mov    rcx,r9
  423eed:	call   0x42d6a8
  423ef2:	mov    BYTE PTR [rax+rbx*1],0x0
  423ef6:	add    rsp,0x28
  423efa:	pop    rbx
  423efb:	pop    rsi
  423efc:	ret    
  423efd:	nop    DWORD PTR [rax]
  423f00:	xor    eax,eax
  423f02:	jmp    0x423ef6
  423f04:	nop
  423f05:	nop
  423f06:	nop
  423f07:	nop
  423f08:	nop
  423f09:	nop
  423f0a:	nop
  423f0b:	nop
  423f0c:	nop
  423f0d:	nop
  423f0e:	nop
  423f0f:	nop
  423f10:	push   rbp
  423f11:	push   rdi
  423f12:	push   rsi
  423f13:	push   rbx
  423f14:	sub    rsp,0x28
  423f18:	test   r8,r8
  423f1b:	mov    rsi,rcx
  423f1e:	mov    rbp,rdx
  423f21:	mov    rdi,r8
  423f24:	je     0x423f71
  423f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423f30:	mov    eax,DWORD PTR [rsi+0xe8]
  423f36:	mov    ebx,DWORD PTR [rsi+0xe0]
  423f3c:	cmp    ebx,eax
  423f3e:	jbe    0x423f80
  423f40:	sub    ebx,eax
  423f42:	cmp    rdi,rbx
  423f45:	cmovbe rbx,rdi
  423f49:	add    rax,QWORD PTR [rsi+0xd8]
  423f50:	test   rbp,rbp
  423f53:	mov    r8,rbx
  423f56:	mov    rcx,rax
  423f59:	je     0x423f90
  423f5b:	mov    rdx,rbp
  423f5e:	add    rbp,rbx
  423f61:	call   0x42d6a8
  423f66:	add    DWORD PTR [rsi+0xe8],ebx
  423f6c:	sub    rdi,rbx
  423f6f:	jne    0x423f30
  423f71:	xor    eax,eax
  423f73:	add    rsp,0x28
  423f77:	pop    rbx
  423f78:	pop    rsi
  423f79:	pop    rdi
  423f7a:	pop    rbp
  423f7b:	ret    
  423f7c:	nop    DWORD PTR [rax+0x0]
  423f80:	xor    edx,edx
  423f82:	mov    rcx,rsi
  423f85:	call   0x4152b0
  423f8a:	jmp    0x423f30
  423f8c:	nop    DWORD PTR [rax+0x0]
  423f90:	xor    edx,edx
  423f92:	call   0x42d698
  423f97:	jmp    0x423f66
  423f99:	nop    DWORD PTR [rax+0x0]
  423fa0:	push   rbp
  423fa1:	push   rdi
  423fa2:	push   rsi
  423fa3:	push   rbx
  423fa4:	sub    rsp,0x88
  423fab:	test   r8d,r8d
  423fae:	mov    rsi,rcx
  423fb1:	mov    rdi,rdx
  423fb4:	mov    ebx,r8d
  423fb7:	js     0x424030
  423fb9:	cmp    WORD PTR [rsi],0x6ff
  423fbe:	jbe    0x424010
  423fc0:	lea    rbp,[rsp+0x30]
  423fc5:	movsxd r8,ebx
  423fc8:	lea    rbx,[rsp+0x50]
  423fcd:	mov    rdx,rdi
  423fd0:	mov    rcx,rbp
  423fd3:	call   0x41d540
  423fd8:	mov    rdx,rsi
  423fdb:	mov    rcx,rbx
  423fde:	call   0x41d4c0
  423fe3:	mov    rax,QWORD PTR [rsi+0x68]
  423fe7:	mov    QWORD PTR [rsp+0x20],rbx
  423fec:	mov    r9,rbp
  423fef:	xor    r8d,r8d
  423ff2:	mov    rcx,rsi
  423ff5:	mov    rdx,QWORD PTR [rax]
  423ff8:	call   0x41d100
  423ffd:	mov    eax,DWORD PTR [rsp+0x70]
  424001:	add    rsp,0x88
  424008:	pop    rbx
  424009:	pop    rsi
  42400a:	pop    rdi
  42400b:	pop    rbp
  42400c:	ret    
  42400d:	nop    DWORD PTR [rax]
  424010:	movsxd r8,ebx
  424013:	mov    rdx,rdi
  424016:	mov    rcx,rsi
  424019:	call   0x423f10
  42401e:	mov    eax,ebx
  424020:	add    rsp,0x88
  424027:	pop    rbx
  424028:	pop    rsi
  424029:	pop    rdi
  42402a:	pop    rbp
  42402b:	ret    
  42402c:	nop    DWORD PTR [rax+0x0]
  424030:	mov    rax,QWORD PTR [rcx+0x68]
  424034:	mov    rax,QWORD PTR [rax]
  424037:	movzx  eax,BYTE PTR [rax+0x20]
  42403b:	cmp    al,0x1
  42403d:	je     0x424070
  42403f:	cmp    al,0x2
  424041:	je     0x424084
  424043:	cmp    al,0x4
  424045:	je     0x4240a5
  424047:	cmp    al,0x2
  424049:	ja     0x4240cd
  42404f:	lea    rdx,[rip+0x162ea]        # 0x43a340
  424056:	lea    rcx,[rip+0x1630a]        # 0x43a367
  42405d:	mov    r8d,0x7c
  424063:	call   0x42d350
  424068:	jmp    0x423fb9
  42406d:	nop    DWORD PTR [rax]
  424070:	mov    rcx,rdx
  424073:	call   0x42d610
  424078:	mov    ebx,eax
  42407a:	test   ebx,ebx
  42407c:	jns    0x423fb9
  424082:	jmp    0x42404f
  424084:	mov    rax,rdx
  424087:	jmp    0x424094
  424089:	nop    DWORD PTR [rax+0x0]
  424090:	add    rax,0x2
  424094:	cmp    BYTE PTR [rax],0x0
  424097:	jne    0x424090
  424099:	cmp    BYTE PTR [rax+0x1],0x0
  42409d:	jne    0x424090
  42409f:	mov    ebx,eax
  4240a1:	sub    ebx,edi
  4240a3:	jmp    0x42407a
  4240a5:	mov    rax,rdx
  4240a8:	jmp    0x4240b4
  4240aa:	nop    WORD PTR [rax+rax*1+0x0]
  4240b0:	add    rax,0x4
  4240b4:	cmp    BYTE PTR [rax],0x0
  4240b7:	jne    0x4240b0
  4240b9:	cmp    BYTE PTR [rax+0x1],0x0
  4240bd:	jne    0x4240b0
  4240bf:	cmp    BYTE PTR [rax+0x2],0x0
  4240c3:	jne    0x4240b0
  4240c5:	cmp    BYTE PTR [rax+0x3],0x0
  4240c9:	jne    0x4240b0
  4240cb:	jmp    0x42409f
  4240cd:	lea    rdx,[rip+0x1626c]        # 0x43a340
  4240d4:	lea    rcx,[rip+0x1626d]        # 0x43a348
  4240db:	mov    r8d,0x78
  4240e1:	call   0x42d350
  4240e6:	jmp    0x42404f
  4240eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4240f0:	push   rsi
  4240f1:	push   rbx
  4240f2:	sub    rsp,0x28
  4240f6:	mov    eax,DWORD PTR [rcx+0xe8]
  4240fc:	cmp    eax,DWORD PTR [rcx+0xe0]
  424102:	mov    rbx,rcx
  424105:	mov    rsi,rdx
  424108:	jb     0x424117
  42410a:	xor    edx,edx
  42410c:	call   0x4152b0
  424111:	mov    eax,DWORD PTR [rbx+0xe8]
  424117:	add    rax,QWORD PTR [rbx+0xd8]
  42411e:	mov    DWORD PTR [rax],esi
  424120:	sar    rsi,0x20
  424124:	mov    DWORD PTR [rax+0x4],esi
  424127:	add    DWORD PTR [rbx+0xe8],0x8
  42412e:	xor    eax,eax
  424130:	add    rsp,0x28
  424134:	pop    rbx
  424135:	pop    rsi
  424136:	ret    
  424137:	nop    WORD PTR [rax+rax*1+0x0]
  424140:	push   rsi
  424141:	push   rbx
  424142:	sub    rsp,0x28
  424146:	mov    eax,DWORD PTR [rcx+0xe8]
  42414c:	cmp    eax,DWORD PTR [rcx+0xe0]
  424152:	mov    rbx,rcx
  424155:	mov    esi,edx
  424157:	jb     0x424166
  424159:	xor    edx,edx
  42415b:	call   0x4152b0
  424160:	mov    eax,DWORD PTR [rbx+0xe8]
  424166:	mov    rcx,QWORD PTR [rbx+0xd8]
  42416d:	mov    DWORD PTR [rcx+rax*1],esi
  424170:	add    DWORD PTR [rbx+0xe8],0x4
  424177:	xor    eax,eax
  424179:	add    rsp,0x28
  42417d:	pop    rbx
  42417e:	pop    rsi
  42417f:	ret    
  424180:	push   rsi
  424181:	push   rbx
  424182:	sub    rsp,0x28
  424186:	mov    eax,DWORD PTR [rcx+0xe8]
  42418c:	cmp    eax,DWORD PTR [rcx+0xe0]
  424192:	mov    rbx,rcx
  424195:	mov    esi,edx
  424197:	jb     0x4241a6
  424199:	xor    edx,edx
  42419b:	call   0x4152b0
  4241a0:	mov    eax,DWORD PTR [rbx+0xe8]
  4241a6:	mov    rcx,QWORD PTR [rbx+0xd8]
  4241ad:	mov    WORD PTR [rcx+rax*1],si
  4241b1:	add    DWORD PTR [rbx+0xe8],0x2
  4241b8:	xor    eax,eax
  4241ba:	add    rsp,0x28
  4241be:	pop    rbx
  4241bf:	pop    rsi
  4241c0:	ret    
  4241c1:	nop    DWORD PTR [rax+rax*1+0x0]
  4241c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4241d0:	push   rsi
  4241d1:	push   rbx
  4241d2:	sub    rsp,0x28
  4241d6:	mov    eax,DWORD PTR [rcx+0xe8]
  4241dc:	cmp    eax,DWORD PTR [rcx+0xe0]
  4241e2:	mov    rbx,rcx
  4241e5:	mov    esi,edx
  4241e7:	jb     0x4241f6
  4241e9:	xor    edx,edx
  4241eb:	call   0x4152b0
  4241f0:	mov    eax,DWORD PTR [rbx+0xe8]
  4241f6:	mov    rcx,QWORD PTR [rbx+0xd8]
  4241fd:	lea    edx,[rax+0x1]
  424200:	mov    DWORD PTR [rbx+0xe8],edx
  424206:	mov    BYTE PTR [rcx+rax*1],sil
  42420a:	xor    eax,eax
  42420c:	add    rsp,0x28
  424210:	pop    rbx
  424211:	pop    rsi
  424212:	ret    
  424213:	nop    DWORD PTR [rax]
  424216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424220:	push   rdi
  424221:	push   rsi
  424222:	push   rbx
  424223:	sub    rsp,0x20
  424227:	cmp    r9d,r8d
  42422a:	mov    ebx,r9d
  42422d:	mov    esi,r8d
  424230:	cmovg  ebx,r8d
  424234:	mov    rdi,rcx
  424237:	movsxd r8,ebx
  42423a:	sub    esi,ebx
  42423c:	call   0x423f10
  424241:	xor    edx,edx
  424243:	mov    rcx,rdi
  424246:	movsxd r8,esi
  424249:	call   0x423f10
  42424e:	movzx  edx,bl
  424251:	mov    rcx,rdi
  424254:	add    rsp,0x20
  424258:	pop    rbx
  424259:	pop    rsi
  42425a:	pop    rdi
  42425b:	jmp    0x4241d0
  424260:	xor    eax,eax
  424262:	mov    DWORD PTR [rcx+0xe8],0x8
  42426c:	ret    
  42426d:	nop    DWORD PTR [rax]
  424270:	push   rbx
  424271:	sub    rsp,0x20
  424275:	test   rcx,rcx
  424278:	je     0x4242b1
  42427a:	cmp    DWORD PTR [rcx+0x148],0x5
  424281:	je     0x4242b1
  424283:	mov    eax,DWORD PTR [rcx+0xe0]
  424289:	cmp    DWORD PTR [rcx+0xe8],eax
  42428f:	mov    rbx,rcx
  424292:	jbe    0x42429f
  424294:	xor    edx,edx
  424296:	call   0x4152b0
  42429b:	test   eax,eax
  42429d:	js     0x4242b6
  42429f:	mov    edx,0x1
  4242a4:	mov    rcx,rbx
  4242a7:	add    rsp,0x20
  4242ab:	pop    rbx
  4242ac:	jmp    0x4152b0
  4242b1:	mov    eax,0xffffffff
  4242b6:	add    rsp,0x20
  4242ba:	pop    rbx
  4242bb:	ret    
  4242bc:	nop
  4242bd:	nop
  4242be:	nop
  4242bf:	nop
  4242c0:	push   r14
  4242c2:	push   r13
  4242c4:	push   r12
  4242c6:	push   rbp
  4242c7:	push   rdi
  4242c8:	push   rsi
  4242c9:	push   rbx
  4242ca:	sub    rsp,0x680
  4242d1:	test   rcx,rcx
  4242d4:	mov    r12,rcx
  4242d7:	mov    ebx,edx
  4242d9:	je     0x424652
  4242df:	movsxd r13,edx
  4242e2:	shl    r13,0x4
  4242e6:	add    r13,rcx
  4242e9:	mov    rax,QWORD PTR [rip+0x9d40]        # 0x42e030
  4242f0:	cmp    rax,0xffffffffffffffff
  4242f4:	je     0x42465a
  4242fa:	test   rax,rax
  4242fd:	je     0x424320
  4242ff:	mov    edx,ebx
  424301:	mov    rcx,r12
  424304:	call   rax
  424306:	add    rsp,0x680
  42430d:	pop    rbx
  42430e:	pop    rsi
  42430f:	pop    rdi
  424310:	pop    rbp
  424311:	pop    r12
  424313:	pop    r13
  424315:	pop    r14
  424317:	ret    
  424318:	nop    DWORD PTR [rax+rax*1+0x0]
  424320:	test   r12,r12
  424323:	je     0x4246dc
  424329:	cmp    r13,r12
  42432c:	mov    DWORD PTR [rsp+0x50],0x0
  424334:	mov    DWORD PTR [rsp+0x260],0x0
  42433f:	mov    DWORD PTR [rsp+0x470],0x0
  42434a:	jbe    0x4246b3
  424350:	lea    rdi,[rsp+0x50]
  424355:	lea    rbp,[rsp+0x260]
  42435d:	lea    rsi,[rsp+0x470]
  424365:	xor    ebx,ebx
  424367:	xor    edx,edx
  424369:	mov    r9,r12
  42436c:	xor    ecx,ecx
  42436e:	xchg   ax,ax
  424370:	movzx  r14d,WORD PTR [r9+0x8]
  424375:	mov    eax,edx
  424377:	test   r14w,0x300
  42437d:	je     0x4243c2
  42437f:	test   edx,edx
  424381:	mov    r10,QWORD PTR [r9]
  424384:	je     0x424643
  42438a:	cmp    QWORD PTR [rsp+0x58],r10
  42438f:	je     0x4243c2
  424391:	lea    rax,[rdi+0x10]
  424395:	xor    r11d,r11d
  424398:	jmp    0x4243ae
  42439a:	nop    WORD PTR [rax+rax*1+0x0]
  4243a0:	add    rax,0x8
  4243a4:	cmp    QWORD PTR [rax-0x8],r10
  4243a8:	je     0x4245c0
  4243ae:	add    r11d,0x1
  4243b2:	cmp    r11d,edx
  4243b5:	jne    0x4243a0
  4243b7:	cmp    edx,0x3f
  4243ba:	mov    eax,edx
  4243bc:	jbe    0x424643
  4243c2:	test   r14b,0x10
  4243c6:	je     0x4245a0
  4243cc:	test   ebx,ebx
  4243ce:	mov    r10,QWORD PTR [r9]
  4243d1:	je     0x424615
  4243d7:	cmp    QWORD PTR [rsp+0x268],r10
  4243df:	je     0x4245b5
  4243e5:	lea    rdx,[rbp+0x10]
  4243e9:	xor    r11d,r11d
  4243ec:	jmp    0x4243fe
  4243ee:	xchg   ax,ax
  4243f0:	add    rdx,0x8
  4243f4:	cmp    QWORD PTR [rdx-0x8],r10
  4243f8:	je     0x4245b5
  4243fe:	add    r11d,0x1
  424402:	cmp    r11d,ebx
  424405:	jne    0x4243f0
  424407:	cmp    ebx,0x3f
  42440a:	mov    r14d,ebx
  42440d:	jbe    0x424615
  424413:	test   ecx,ecx
  424415:	je     0x424630
  42441b:	cmp    QWORD PTR [rsp+0x478],r10
  424423:	je     0x424450
  424425:	lea    rbx,[rsi+0x10]
  424429:	xor    r11d,r11d
  42442c:	jmp    0x42443a
  42442e:	xchg   ax,ax
  424430:	add    rbx,0x8
  424434:	cmp    QWORD PTR [rbx-0x8],r10
  424438:	je     0x424450
  42443a:	add    r11d,0x1
  42443e:	cmp    r11d,ecx
  424441:	jne    0x424430
  424443:	cmp    ecx,0x3f
  424446:	jbe    0x424630
  42444c:	nop    DWORD PTR [rax+0x0]
  424450:	mov    r10d,ecx
  424453:	add    r9,0x10
  424457:	mov    edx,eax
  424459:	mov    ebx,r14d
  42445c:	cmp    r13,r9
  42445f:	mov    ecx,r10d
  424462:	ja     0x424370
  424468:	mov    rcx,r12
  42446b:	mov    DWORD PTR [rsp+0x50],eax
  42446f:	mov    DWORD PTR [rsp+0x260],r14d
  424477:	not    rcx
  42447a:	mov    DWORD PTR [rsp+0x470],r10d
  424482:	add    rcx,r13
  424485:	shr    rcx,0x4
  424489:	add    ecx,0x2
  42448c:	xor    eax,eax
  42448e:	test   r8d,r8d
  424491:	js     0x4244c5
  424493:	mov    eax,r8d
  424496:	mov    edx,0x10624dd3
  42449b:	imul   edx
  42449d:	mov    eax,r8d
  4244a0:	sar    eax,0x1f
  4244a3:	sar    edx,0x6
  4244a6:	sub    edx,eax
  4244a8:	mov    DWORD PTR [rsp+0x40],edx
  4244ac:	imul   edx,edx,0x3e8
  4244b2:	sub    r8d,edx
  4244b5:	imul   eax,r8d,0x3e8
  4244bc:	mov    DWORD PTR [rsp+0x44],eax
  4244c0:	lea    rax,[rsp+0x40]
  4244c5:	mov    QWORD PTR [rsp+0x20],rax
  4244ca:	mov    r9,rsi
  4244cd:	mov    r8,rbp
  4244d0:	mov    rdx,rdi
  4244d3:	call   QWORD PTR [rip+0x1e8b3]        # 0x442d8c
  4244d9:	test   eax,eax
  4244db:	mov    ebx,eax
  4244dd:	js     0x4246d2
  4244e3:	je     0x42451c
  4244e5:	xor    r14d,r14d
  4244e8:	cmp    r13,r12
  4244eb:	ja     0x424554
  4244ed:	lea    rdx,[rip+0x15e8b]        # 0x43a37f
  4244f4:	lea    rcx,[rip+0x15e8b]        # 0x43a386
  4244fb:	mov    r8d,0xb2
  424501:	mov    ebx,r14d
  424504:	call   0x42d350
  424509:	mov    eax,ebx
  42450b:	jmp    0x424306
  424510:	xor    edx,edx
  424512:	add    r12,0x10
  424516:	mov    WORD PTR [r12-0x6],dx
  42451c:	cmp    r13,r12
  42451f:	ja     0x424510
  424521:	xor    eax,eax
  424523:	jmp    0x424306
  424528:	nop    DWORD PTR [rax+rax*1+0x0]
  424530:	mov    rcx,QWORD PTR [r12]
  424534:	mov    rdx,rsi
  424537:	call   0x42afb8
  42453c:	test   eax,eax
  42453e:	je     0x424575
  424540:	or     WORD PTR [r12+0xa],0x1
  424547:	add    r12,0x10
  42454b:	add    r14d,0x1
  42454f:	cmp    r13,r12
  424552:	jbe    0x424589
  424554:	movzx  edx,WORD PTR [r12+0x8]
  42455a:	xor    eax,eax
  42455c:	mov    WORD PTR [r12+0xa],ax
  424562:	test   dh,0x3
  424565:	jne    0x4245f2
  42456b:	test   dl,0x10
  42456e:	jne    0x4245d0
  424570:	test   dx,dx
  424573:	jne    0x424530
  424575:	movzx  eax,WORD PTR [r12+0xa]
  42457b:	test   ax,ax
  42457e:	jne    0x424547
  424580:	add    r12,0x10
  424584:	cmp    r13,r12
  424587:	ja     0x424554
  424589:	cmp    r14d,ebx
  42458c:	jne    0x4244ed
  424592:	mov    eax,ebx
  424594:	jmp    0x424306
  424599:	nop    DWORD PTR [rax+0x0]
  4245a0:	test   r14w,r14w
  4245a4:	mov    r14d,ebx
  4245a7:	je     0x424450
  4245ad:	mov    r10,QWORD PTR [r9]
  4245b0:	jmp    0x424413
  4245b5:	mov    r14d,ebx
  4245b8:	jmp    0x424413
  4245bd:	nop    DWORD PTR [rax]
  4245c0:	mov    eax,edx
  4245c2:	jmp    0x4243c2
  4245c7:	nop    WORD PTR [rax+rax*1+0x0]
  4245d0:	mov    rcx,QWORD PTR [r12]
  4245d4:	mov    rdx,rbp
  4245d7:	call   0x42afb8
  4245dc:	test   eax,eax
  4245de:	je     0x4245e7
  4245e0:	or     WORD PTR [r12+0xa],0x10
  4245e7:	movzx  edx,WORD PTR [r12+0x8]
  4245ed:	jmp    0x424570
  4245f2:	mov    rcx,QWORD PTR [r12]
  4245f6:	mov    rdx,rdi
  4245f9:	call   0x42afb8
  4245fe:	test   eax,eax
  424600:	je     0x42460a
  424602:	or     WORD PTR [r12+0xa],0x300
  42460a:	movzx  edx,WORD PTR [r12+0x8]
  424610:	jmp    0x42456b
  424615:	mov    edx,ebx
  424617:	lea    r14d,[rbx+0x1]
  42461b:	mov    QWORD PTR [rsp+rdx*8+0x268],r10
  424623:	jmp    0x424413
  424628:	nop    DWORD PTR [rax+rax*1+0x0]
  424630:	mov    edx,ecx
  424632:	mov    QWORD PTR [rsp+rdx*8+0x478],r10
  42463a:	lea    r10d,[rcx+0x1]
  42463e:	jmp    0x424453
  424643:	mov    eax,edx
  424645:	mov    QWORD PTR [rsp+rax*8+0x58],r10
  42464a:	lea    eax,[rdx+0x1]
  42464d:	jmp    0x4243c2
  424652:	xor    r13d,r13d
  424655:	jmp    0x4242e9
  42465a:	mov    DWORD PTR [rsp+0x3c],r8d
  42465f:	mov    QWORD PTR [rip+0x99c6],0x0        # 0x42e030
  42466a:	lea    rcx,[rip+0x15cff]        # 0x43a370
  424671:	call   QWORD PTR [rip+0x1e2bd]        # 0x442934
  424677:	test   rax,rax
  42467a:	mov    r8d,DWORD PTR [rsp+0x3c]
  42467f:	je     0x4246a7
  424681:	mov    DWORD PTR [rsp+0x3c],r8d
  424686:	lea    rdx,[rip+0x15cea]        # 0x43a377
  42468d:	mov    rcx,rax
  424690:	call   QWORD PTR [rip+0x1e2a6]        # 0x44293c
  424696:	mov    r8d,DWORD PTR [rsp+0x3c]
  42469b:	mov    QWORD PTR [rip+0x998e],rax        # 0x42e030
  4246a2:	jmp    0x4242fa
  4246a7:	mov    rax,QWORD PTR [rip+0x9982]        # 0x42e030
  4246ae:	jmp    0x4242fa
  4246b3:	mov    ecx,0x1
  4246b8:	lea    rdi,[rsp+0x50]
  4246bd:	lea    rbp,[rsp+0x260]
  4246c5:	lea    rsi,[rsp+0x470]
  4246cd:	jmp    0x42448c
  4246d2:	mov    eax,0xffffffff
  4246d7:	jmp    0x424306
  4246dc:	call   QWORD PTR [rip+0x1e37a]        # 0x442a5c
  4246e2:	mov    DWORD PTR [rax],0xe
  4246e8:	mov    eax,0xffffffff
  4246ed:	jmp    0x424306
  4246f2:	nop
  4246f3:	nop
  4246f4:	nop
  4246f5:	nop
  4246f6:	nop
  4246f7:	nop
  4246f8:	nop
  4246f9:	nop
  4246fa:	nop
  4246fb:	nop
  4246fc:	nop
  4246fd:	nop
  4246fe:	nop
  4246ff:	nop
  424700:	push   r13
  424702:	push   r12
  424704:	push   rbp
  424705:	push   rdi
  424706:	push   rsi
  424707:	push   rbx
  424708:	sub    rsp,0x58
  42470c:	test   r9,r9
  42470f:	je     0x424897
  424715:	xor    r8d,r8d
  424718:	mov    rbx,r9
  42471b:	mov    edi,edx
  42471d:	mov    ecx,0x2
  424722:	mov    rbp,QWORD PTR [rip+0x1e683]        # 0x442dac
  424729:	call   rbp
  42472b:	cmp    rax,0xffffffffffffffff
  42472f:	mov    rsi,rax
  424732:	je     0x424897
  424738:	xor    r8d,r8d
  42473b:	mov    QWORD PTR [rbx+0x8],0xffffffffffffffff
  424743:	mov    edx,edi
  424745:	mov    ecx,0x2
  42474a:	call   rbp
  42474c:	cmp    rax,0xffffffffffffffff
  424750:	mov    QWORD PTR [rbx],rax
  424753:	je     0x424880
  424759:	mov    eax,0x2
  42475e:	lea    rdi,[rsp+0x30]
  424763:	mov    ecx,0x7f000001
  424768:	mov    WORD PTR [rsp+0x30],ax
  42476d:	call   QWORD PTR [rip+0x1e5e9]        # 0x442d5c
  424773:	xor    edx,edx
  424775:	mov    DWORD PTR [rsp+0x34],eax
  424779:	mov    r8d,0x10
  42477f:	mov    WORD PTR [rsp+0x32],dx
  424784:	mov    rcx,rsi
  424787:	mov    rdx,rdi
  42478a:	call   QWORD PTR [rip+0x1e57c]        # 0x442d0c
  424790:	test   eax,eax
  424792:	js     0x424880
  424798:	mov    edx,0x1
  42479d:	mov    rcx,rsi
  4247a0:	call   QWORD PTR [rip+0x1e5ce]        # 0x442d74
  4247a6:	test   eax,eax
  4247a8:	js     0x424880
  4247ae:	lea    rbp,[rsp+0x2c]
  4247b3:	mov    DWORD PTR [rsp+0x2c],0x10
  4247bb:	mov    rdx,rdi
  4247be:	mov    rcx,rsi
  4247c1:	mov    r12,QWORD PTR [rip+0x1e584]        # 0x442d4c
  4247c8:	mov    r8,rbp
  4247cb:	call   r12
  4247ce:	test   eax,eax
  4247d0:	js     0x424880
  4247d6:	mov    r8d,0x10
  4247dc:	mov    rdx,rdi
  4247df:	mov    rcx,QWORD PTR [rbx]
  4247e2:	call   QWORD PTR [rip+0x1e534]        # 0x442d1c
  4247e8:	test   eax,eax
  4247ea:	js     0x424880
  4247f0:	lea    r13,[rsp+0x40]
  4247f5:	mov    DWORD PTR [rsp+0x2c],0x10
  4247fd:	mov    r8,rbp
  424800:	mov    rcx,rsi
  424803:	mov    rdx,r13
  424806:	call   QWORD PTR [rip+0x1e4f8]        # 0x442d04
  42480c:	cmp    rax,0xffffffffffffffff
  424810:	mov    QWORD PTR [rbx+0x8],rax
  424814:	je     0x424880
  424816:	mov    DWORD PTR [rsp+0x2c],0x10
  42481e:	mov    r8,rbp
  424821:	mov    rdx,rdi
  424824:	mov    rcx,QWORD PTR [rbx]
  424827:	call   r12
  42482a:	test   eax,eax
  42482c:	js     0x424880
  42482e:	mov    DWORD PTR [rsp+0x2c],0x10
  424836:	mov    rcx,QWORD PTR [rbx+0x8]
  42483a:	mov    r8,rbp
  42483d:	mov    rdx,r13
  424840:	call   QWORD PTR [rip+0x1e4fe]        # 0x442d44
  424846:	test   eax,eax
  424848:	js     0x424880
  42484a:	mov    eax,DWORD PTR [rsp+0x40]
  42484e:	cmp    DWORD PTR [rsp+0x30],eax
  424852:	jne    0x424880
  424854:	mov    eax,DWORD PTR [rsp+0x44]
  424858:	cmp    DWORD PTR [rsp+0x34],eax
  42485c:	jne    0x424880
  42485e:	mov    rcx,rsi
  424861:	call   QWORD PTR [rip+0x1e4ad]        # 0x442d14
  424867:	xor    eax,eax
  424869:	add    rsp,0x58
  42486d:	pop    rbx
  42486e:	pop    rsi
  42486f:	pop    rdi
  424870:	pop    rbp
  424871:	pop    r12
  424873:	pop    r13
  424875:	ret    
  424876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424880:	mov    rcx,rsi
  424883:	mov    rsi,QWORD PTR [rip+0x1e48a]        # 0x442d14
  42488a:	call   rsi
  42488c:	mov    rcx,QWORD PTR [rbx]
  42488f:	call   rsi
  424891:	mov    rcx,QWORD PTR [rbx+0x8]
  424895:	call   rsi
  424897:	mov    eax,0xffffffff
  42489c:	add    rsp,0x58
  4248a0:	pop    rbx
  4248a1:	pop    rsi
  4248a2:	pop    rdi
  4248a3:	pop    rbp
  4248a4:	pop    r12
  4248a6:	pop    r13
  4248a8:	ret    
  4248a9:	nop
  4248aa:	nop
  4248ab:	nop
  4248ac:	nop
  4248ad:	nop
  4248ae:	nop
  4248af:	nop
  4248b0:	push   rbp
  4248b1:	push   rdi
  4248b2:	push   rsi
  4248b3:	push   rbx
  4248b4:	sub    rsp,0x28
  4248b8:	mov    rsi,r8
  4248bb:	mov    rbp,rcx
  4248be:	mov    rcx,rdx
  4248c1:	mov    rdi,rdx
  4248c4:	call   0x42d610
  4248c9:	test   rsi,rsi
  4248cc:	mov    rbx,rax
  4248cf:	je     0x4248e9
  4248d1:	lea    r8,[rsi-0x1]
  4248d5:	cmp    rax,r8
  4248d8:	ja     0x4248f5
  4248da:	lea    r8,[rax+0x1]
  4248de:	mov    rdx,rdi
  4248e1:	mov    rcx,rbp
  4248e4:	call   0x42d6a8
  4248e9:	mov    rax,rbx
  4248ec:	add    rsp,0x28
  4248f0:	pop    rbx
  4248f1:	pop    rsi
  4248f2:	pop    rdi
  4248f3:	pop    rbp
  4248f4:	ret    
  4248f5:	mov    rdx,rdi
  4248f8:	mov    rcx,rbp
  4248fb:	call   0x42d6a8
  424900:	mov    rax,rbx
  424903:	mov    BYTE PTR [rbp+rsi*1-0x1],0x0
  424908:	add    rsp,0x28
  42490c:	pop    rbx
  42490d:	pop    rsi
  42490e:	pop    rdi
  42490f:	pop    rbp
  424910:	ret    
  424911:	nop
  424912:	nop
  424913:	nop
  424914:	nop
  424915:	nop
  424916:	nop
  424917:	nop
  424918:	nop
  424919:	nop
  42491a:	nop
  42491b:	nop
  42491c:	nop
  42491d:	nop
  42491e:	nop
  42491f:	nop
  424920:	push   rbp
  424921:	push   rdi
  424922:	push   rsi
  424923:	push   rbx
  424924:	sub    rsp,0x48
  424928:	xor    eax,eax
  42492a:	mov    rbx,rcx
  42492d:	lock xadd DWORD PTR [rcx+0x8],eax
  424932:	test   eax,eax
  424934:	lea    rsi,[rcx+0x10]
  424938:	je     0x424950
  42493a:	mov    rcx,rsi
  42493d:	call   QWORD PTR [rip+0x1dfb1]        # 0x4428f4
  424943:	nop
  424944:	add    rsp,0x48
  424948:	pop    rbx
  424949:	pop    rsi
  42494a:	pop    rdi
  42494b:	pop    rbp
  42494c:	ret    
  42494d:	nop    DWORD PTR [rax]
  424950:	lea    rdi,[rsp+0x20]
  424955:	mov    QWORD PTR [rsp+0x20],rcx
  42495a:	mov    QWORD PTR [rsp+0x38],0x0
  424963:	mov    QWORD PTR [rsp+0x30],0x0
  42496c:	mov    QWORD PTR [rsp+0x28],0x0
  424975:	mov    rdx,rdi
  424978:	xchg   QWORD PTR [rcx],rdx
  42497b:	test   rdx,rdx
  42497e:	je     0x4249b9
  424980:	mov    rcx,0xffffffffffffffff
  424987:	xor    eax,eax
  424989:	mov    QWORD PTR [rdx+0x8],rdi
  42498d:	lock cmpxchg QWORD PTR [rdx+0x18],rcx
  424993:	test   rax,rax
  424996:	mov    rcx,rax
  424999:	je     0x4249a1
  42499b:	call   QWORD PTR [rip+0x1e003]        # 0x4429a4
  4249a1:	xor    esi,esi
  4249a3:	mov    rax,rsi
  4249a6:	lock cmpxchg QWORD PTR [rsp+0x30],rsi
  4249ad:	test   rax,rax
  4249b0:	mov    rsi,rax
  4249b3:	je     0x424a53
  4249b9:	mov    eax,DWORD PTR [rbx+0x8]
  4249bc:	lea    rsi,[rbx+0x10]
  4249c0:	test   eax,eax
  4249c2:	je     0x424a10
  4249c4:	mov    r8,QWORD PTR [rsp+0x20]
  4249c9:	xor    ebx,ebx
  4249cb:	mov    rax,rbx
  4249ce:	lock cmpxchg QWORD PTR [rsp+0x28],rbx
  4249d5:	test   rax,rax
  4249d8:	mov    rdx,rax
  4249db:	mov    rcx,rax
  4249de:	je     0x424a22
  4249e0:	mov    rdx,0xffffffffffffffff
  4249e7:	xor    eax,eax
  4249e9:	lock cmpxchg QWORD PTR [rcx+0x10],rdx
  4249ef:	test   rax,rax
  4249f2:	je     0x42493a
  4249f8:	mov    rcx,rax
  4249fb:	call   QWORD PTR [rip+0x1dfa3]        # 0x4429a4
  424a01:	jmp    0x42493a
  424a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424a10:	mov    rcx,rsi
  424a13:	call   QWORD PTR [rip+0x1df43]        # 0x44295c
  424a19:	mov    DWORD PTR [rbx+0x8],0x1
  424a20:	jmp    0x4249c4
  424a22:	mov    rax,rdi
  424a25:	lock cmpxchg QWORD PTR [r8],rdx
  424a2a:	cmp    rdi,rax
  424a2d:	je     0x42493a
  424a33:	mov    rax,rdx
  424a36:	lock cmpxchg QWORD PTR [rsp+0x38],rdx
  424a3d:	test   rax,rax
  424a40:	mov    rbx,rax
  424a43:	je     0x424a83
  424a45:	xor    eax,eax
  424a47:	lock cmpxchg QWORD PTR [rsp+0x28],rax
  424a4e:	mov    rcx,rax
  424a51:	jmp    0x4249e0
  424a53:	xor    r9d,r9d
  424a56:	xor    r8d,r8d
  424a59:	xor    edx,edx
  424a5b:	xor    ecx,ecx
  424a5d:	call   QWORD PTR [rip+0x1de79]        # 0x4428dc
  424a63:	mov    rbp,rax
  424a66:	mov    rax,rsi
  424a69:	lock cmpxchg QWORD PTR [rsp+0x30],rbp
  424a70:	test   rax,rax
  424a73:	je     0x424aae
  424a75:	mov    rcx,rbp
  424a78:	call   QWORD PTR [rip+0x1de56]        # 0x4428d4
  424a7e:	jmp    0x4249b9
  424a83:	xor    r9d,r9d
  424a86:	xor    r8d,r8d
  424a89:	xor    ecx,ecx
  424a8b:	call   QWORD PTR [rip+0x1de4b]        # 0x4428dc
  424a91:	mov    rdi,rax
  424a94:	mov    rax,rbx
  424a97:	lock cmpxchg QWORD PTR [rsp+0x38],rdi
  424a9e:	test   rax,rax
  424aa1:	je     0x424abe
  424aa3:	mov    rcx,rdi
  424aa6:	call   QWORD PTR [rip+0x1de28]        # 0x4428d4
  424aac:	jmp    0x424a45
  424aae:	mov    edx,0xffffffff
  424ab3:	mov    rcx,rbp
  424ab6:	call   QWORD PTR [rip+0x1df30]        # 0x4429ec
  424abc:	jmp    0x424a75
  424abe:	or     edx,0xffffffff
  424ac1:	mov    rcx,rdi
  424ac4:	call   QWORD PTR [rip+0x1df22]        # 0x4429ec
  424aca:	jmp    0x424aa3
  424acc:	nop    DWORD PTR [rax+0x0]
  424ad0:	push   rbp
  424ad1:	push   rdi
  424ad2:	push   rsi
  424ad3:	push   rbx
  424ad4:	sub    rsp,0x48
  424ad8:	mov    edx,DWORD PTR [rcx+0x8]
  424adb:	mov    rbx,rcx
  424ade:	test   edx,edx
  424ae0:	je     0x424b02
  424ae2:	lea    rsi,[rbx+0x10]
  424ae6:	mov    rcx,rsi
  424ae9:	call   QWORD PTR [rip+0x1dedd]        # 0x4429cc
  424aef:	test   eax,eax
  424af1:	sete   al
  424af4:	movzx  eax,al
  424af7:	neg    eax
  424af9:	add    rsp,0x48
  424afd:	pop    rbx
  424afe:	pop    rsi
  424aff:	pop    rdi
  424b00:	pop    rbp
  424b01:	ret    
  424b02:	xor    eax,eax
  424b04:	lock xadd DWORD PTR [rcx+0x8],eax
  424b09:	test   eax,eax
  424b0b:	jne    0x424ae2
  424b0d:	lea    rdi,[rsp+0x20]
  424b12:	mov    QWORD PTR [rsp+0x20],rcx
  424b17:	mov    QWORD PTR [rsp+0x38],0x0
  424b20:	mov    QWORD PTR [rsp+0x30],0x0
  424b29:	mov    QWORD PTR [rsp+0x28],0x0
  424b32:	mov    rdx,rdi
  424b35:	xchg   QWORD PTR [rcx],rdx
  424b38:	test   rdx,rdx
  424b3b:	je     0x424b76
  424b3d:	mov    rcx,0xffffffffffffffff
  424b44:	xor    eax,eax
  424b46:	mov    QWORD PTR [rdx+0x8],rdi
  424b4a:	lock cmpxchg QWORD PTR [rdx+0x18],rcx
  424b50:	test   rax,rax
  424b53:	mov    rcx,rax
  424b56:	je     0x424b5e
  424b58:	call   QWORD PTR [rip+0x1de46]        # 0x4429a4
  424b5e:	xor    edx,edx
  424b60:	mov    rax,rdx
  424b63:	lock cmpxchg QWORD PTR [rsp+0x30],rdx
  424b6a:	test   rax,rax
  424b6d:	mov    rsi,rax
  424b70:	je     0x424c06
  424b76:	mov    eax,DWORD PTR [rbx+0x8]
  424b79:	lea    rsi,[rbx+0x10]
  424b7d:	test   eax,eax
  424b7f:	je     0x424bc3
  424b81:	mov    r8,QWORD PTR [rsp+0x20]
  424b86:	xor    edx,edx
  424b88:	mov    rax,rdx
  424b8b:	lock cmpxchg QWORD PTR [rsp+0x28],rdx
  424b92:	test   rax,rax
  424b95:	mov    rdx,rax
  424b98:	mov    rcx,rax
  424b9b:	je     0x424bd5
  424b9d:	mov    rdx,0xffffffffffffffff
  424ba4:	xor    eax,eax
  424ba6:	lock cmpxchg QWORD PTR [rcx+0x10],rdx
  424bac:	test   rax,rax
  424baf:	je     0x424ae6
  424bb5:	mov    rcx,rax
  424bb8:	call   QWORD PTR [rip+0x1dde6]        # 0x4429a4
  424bbe:	jmp    0x424ae6
  424bc3:	mov    rcx,rsi
  424bc6:	call   QWORD PTR [rip+0x1dd90]        # 0x44295c
  424bcc:	mov    DWORD PTR [rbx+0x8],0x1
  424bd3:	jmp    0x424b81
  424bd5:	mov    rax,rdi
  424bd8:	lock cmpxchg QWORD PTR [r8],rdx
  424bdd:	cmp    rdi,rax
  424be0:	je     0x424ae6
  424be6:	mov    rax,rdx
  424be9:	lock cmpxchg QWORD PTR [rsp+0x38],rdx
  424bf0:	test   rax,rax
  424bf3:	mov    rbx,rax
  424bf6:	je     0x424c34
  424bf8:	xor    eax,eax
  424bfa:	lock cmpxchg QWORD PTR [rsp+0x28],rax
  424c01:	mov    rcx,rax
  424c04:	jmp    0x424b9d
  424c06:	xor    r9d,r9d
  424c09:	xor    r8d,r8d
  424c0c:	xor    ecx,ecx
  424c0e:	call   QWORD PTR [rip+0x1dcc8]        # 0x4428dc
  424c14:	mov    rbp,rax
  424c17:	mov    rax,rsi
  424c1a:	lock cmpxchg QWORD PTR [rsp+0x30],rbp
  424c21:	test   rax,rax
  424c24:	je     0x424c5f
  424c26:	mov    rcx,rbp
  424c29:	call   QWORD PTR [rip+0x1dca5]        # 0x4428d4
  424c2f:	jmp    0x424b76
  424c34:	xor    r9d,r9d
  424c37:	xor    r8d,r8d
  424c3a:	xor    ecx,ecx
  424c3c:	call   QWORD PTR [rip+0x1dc9a]        # 0x4428dc
  424c42:	mov    rdi,rax
  424c45:	mov    rax,rbx
  424c48:	lock cmpxchg QWORD PTR [rsp+0x38],rdi
  424c4f:	test   rax,rax
  424c52:	je     0x424c6d
  424c54:	mov    rcx,rdi
  424c57:	call   QWORD PTR [rip+0x1dc77]        # 0x4428d4
  424c5d:	jmp    0x424bf8
  424c5f:	or     edx,0xffffffff
  424c62:	mov    rcx,rbp
  424c65:	call   QWORD PTR [rip+0x1dd81]        # 0x4429ec
  424c6b:	jmp    0x424c26
  424c6d:	or     edx,0xffffffff
  424c70:	mov    rcx,rdi
  424c73:	call   QWORD PTR [rip+0x1dd73]        # 0x4429ec
  424c79:	jmp    0x424c54
  424c7b:	nop
  424c7c:	nop
  424c7d:	nop
  424c7e:	nop
  424c7f:	nop
  424c80:	mov    r10,QWORD PTR [rsp+0x28]
  424c85:	cmp    rcx,rdx
  424c88:	mov    QWORD PTR [r10],0x0
  424c8f:	jne    0x424c9c
  424c91:	jmp    0x424cf0
  424c93:	add    rcx,0x1
  424c97:	cmp    rdx,rcx
  424c9a:	je     0x424cf0
  424c9c:	movzx  eax,BYTE PTR [rcx]
  424c9f:	cmp    al,0x20
  424ca1:	je     0x424c93
  424ca3:	cmp    al,0x2b
  424ca5:	je     0x424e00
  424cab:	cmp    al,0x2d
  424cad:	jne    0x424d00
  424caf:	mov    r11d,0x1
  424cb5:	lea    rax,[rcx+0x1]
  424cb9:	cmp    rdx,rax
  424cbc:	je     0x424ce2
  424cbe:	cmp    BYTE PTR [rcx+0x1],0x20
  424cc2:	je     0x424cd9
  424cc4:	jmp    0x424df0
  424cc9:	nop    DWORD PTR [rax+0x0]
  424cd0:	cmp    BYTE PTR [rax],0x20
  424cd3:	jne    0x424df0
  424cd9:	add    rax,0x1
  424cdd:	cmp    rdx,rax
  424ce0:	jne    0x424cd0
  424ce2:	mov    BYTE PTR [r8],r11b
  424ce5:	xor    eax,eax
  424ce7:	ret    
  424ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  424cf0:	mov    BYTE PTR [r8],0x0
  424cf4:	mov    QWORD PTR [r9],0x0
  424cfb:	mov    rax,rcx
  424cfe:	ret    
  424cff:	nop
  424d00:	mov    BYTE PTR [r8],0x0
  424d04:	cmp    rdx,rcx
  424d07:	jne    0x424d19
  424d09:	jmp    0x424d82
  424d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  424d10:	add    rcx,0x1
  424d14:	cmp    rdx,rcx
  424d17:	je     0x424d82
  424d19:	movzx  eax,BYTE PTR [rcx]
  424d1c:	cmp    al,0x30
  424d1e:	je     0x424d10
  424d20:	sub    eax,0x30
  424d23:	mov    r8,rcx
  424d26:	cmp    al,0x9
  424d28:	jbe    0x424d3b
  424d2a:	jmp    0x424e14
  424d2f:	nop
  424d30:	movzx  eax,BYTE PTR [r8]
  424d34:	sub    eax,0x30
  424d37:	cmp    al,0x9
  424d39:	ja     0x424d90
  424d3b:	add    r8,0x1
  424d3f:	cmp    rdx,r8
  424d42:	jne    0x424d30
  424d44:	mov    rax,rdx
  424d47:	mov    r10,rcx
  424d4a:	sub    rax,rcx
  424d4d:	mov    rcx,rdx
  424d50:	mov    QWORD PTR [r9],rax
  424d53:	cmp    rdx,rcx
  424d56:	je     0x424e10
  424d5c:	movzx  r9d,BYTE PTR [rcx]
  424d60:	mov    r8,rcx
  424d63:	mov    rcx,r10
  424d66:	cmp    r9b,0x20
  424d6a:	jne    0x424ce5
  424d70:	add    r8,0x1
  424d74:	cmp    rdx,r8
  424d77:	je     0x424cfb
  424d79:	cmp    BYTE PTR [r8],0x20
  424d7d:	je     0x424d70
  424d7f:	xor    eax,eax
  424d81:	ret    
  424d82:	mov    r10,rcx
  424d85:	xor    eax,eax
  424d87:	jmp    0x424d50
  424d89:	nop    DWORD PTR [rax+0x0]
  424d90:	mov    rax,r8
  424d93:	sub    rax,rcx
  424d96:	mov    QWORD PTR [r9],rax
  424d99:	movzx  r9d,BYTE PTR [r8]
  424d9d:	cmp    r9b,0x2e
  424da1:	jne    0x424d66
  424da3:	lea    r9,[r8+0x1]
  424da7:	cmp    rdx,r9
  424daa:	je     0x424e1b
  424dac:	movzx  eax,BYTE PTR [r8+0x1]
  424db1:	sub    eax,0x30
  424db4:	cmp    al,0x9
  424db6:	mov    rax,r9
  424db9:	jbe    0x424dce
  424dbb:	xor    r8d,r8d
  424dbe:	jmp    0x424de0
  424dc0:	movzx  r11d,BYTE PTR [rax]
  424dc4:	lea    r8d,[r11-0x30]
  424dc8:	cmp    r8b,0x9
  424dcc:	ja     0x424e08
  424dce:	add    rax,0x1
  424dd2:	cmp    rdx,rax
  424dd5:	jne    0x424dc0
  424dd7:	mov    r8,rdx
  424dda:	mov    rax,rdx
  424ddd:	sub    r8,r9
  424de0:	mov    QWORD PTR [r10],r8
  424de3:	mov    r10,rcx
  424de6:	mov    rcx,rax
  424de9:	jmp    0x424d53
  424dee:	xchg   ax,ax
  424df0:	mov    BYTE PTR [r8],r11b
  424df3:	mov    rcx,rax
  424df6:	jmp    0x424d04
  424dfb:	nop    DWORD PTR [rax+rax*1+0x0]
  424e00:	xor    r11d,r11d
  424e03:	jmp    0x424cb5
  424e08:	mov    r8,rax
  424e0b:	sub    r8,r9
  424e0e:	jmp    0x424de0
  424e10:	mov    rax,r10
  424e13:	ret    
  424e14:	xor    eax,eax
  424e16:	jmp    0x424d96
  424e1b:	mov    rax,rdx
  424e1e:	xor    r8d,r8d
  424e21:	jmp    0x424de0
  424e23:	nop    DWORD PTR [rax]
  424e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424e30:	push   rbx
  424e31:	sub    rsp,0x40
  424e35:	lea    rax,[rsp+0x38]
  424e3a:	mov    rbx,r8
  424e3d:	mov    r8,r9
  424e40:	lea    r9,[rsp+0x30]
  424e45:	mov    QWORD PTR [rsp+0x20],rax
  424e4a:	call   0x424c80
  424e4f:	test   rax,rax
  424e52:	je     0x424ec0
  424e54:	mov    r9,QWORD PTR [rsp+0x30]
  424e59:	test   r9,r9
  424e5c:	je     0x424ebc
  424e5e:	movsx  ecx,BYTE PTR [rax]
  424e61:	movabs r10,0x1999999999999999
  424e6b:	sub    ecx,0x30
  424e6e:	movsxd rcx,ecx
  424e71:	jmp    0x424e91
  424e73:	cmp    rcx,r10
  424e76:	ja     0x424eb1
  424e78:	movsx  edx,BYTE PTR [rax]
  424e7b:	lea    r8,[rcx+rcx*4]
  424e7f:	sub    edx,0x30
  424e82:	movsxd rdx,edx
  424e85:	lea    rdx,[rdx+r8*2]
  424e89:	cmp    rdx,rcx
  424e8c:	jb     0x424eb1
  424e8e:	mov    rcx,rdx
  424e91:	sub    r9,0x1
  424e95:	add    rax,0x1
  424e99:	test   r9,r9
  424e9c:	mov    QWORD PTR [rsp+0x30],r9
  424ea1:	jne    0x424e73
  424ea3:	mov    eax,0x8
  424ea8:	mov    QWORD PTR [rbx],rcx
  424eab:	add    rsp,0x40
  424eaf:	pop    rbx
  424eb0:	ret    
  424eb1:	mov    eax,0xfffffffb
  424eb6:	add    rsp,0x40
  424eba:	pop    rbx
  424ebb:	ret    
  424ebc:	xor    ecx,ecx
  424ebe:	jmp    0x424ea3
  424ec0:	mov    eax,0xfffffffd
  424ec5:	jmp    0x424eb6
  424ec7:	nop    WORD PTR [rax+rax*1+0x0]
  424ed0:	push   rbx
  424ed1:	sub    rsp,0x30
  424ed5:	mov    rbx,r8
  424ed8:	lea    r9,[rsp+0x27]
  424edd:	lea    r8,[rsp+0x28]
  424ee2:	call   0x424e30
  424ee7:	test   eax,eax
  424ee9:	js     0x424f11
  424eeb:	cmp    BYTE PTR [rsp+0x27],0x0
  424ef0:	mov    rax,QWORD PTR [rsp+0x28]
  424ef5:	je     0x424f20
  424ef7:	movabs rdx,0x8000000000000000
  424f01:	cmp    rax,rdx
  424f04:	ja     0x424f33
  424f06:	neg    rax
  424f09:	mov    QWORD PTR [rbx],rax
  424f0c:	mov    eax,0x8
  424f11:	add    rsp,0x30
  424f15:	pop    rbx
  424f16:	ret    
  424f17:	nop    WORD PTR [rax+rax*1+0x0]
  424f20:	test   rax,rax
  424f23:	js     0x424f33
  424f25:	mov    QWORD PTR [rbx],rax
  424f28:	mov    eax,0x8
  424f2d:	add    rsp,0x30
  424f31:	pop    rbx
  424f32:	ret    
  424f33:	mov    eax,0xfffffffb
  424f38:	jmp    0x424f11
  424f3a:	nop    WORD PTR [rax+rax*1+0x0]
  424f40:	push   rbx
  424f41:	sub    rsp,0x50
  424f45:	lea    rax,[rsp+0x48]
  424f4a:	mov    rbx,r8
  424f4d:	lea    r9,[rsp+0x40]
  424f52:	lea    r8,[rsp+0x3f]
  424f57:	mov    QWORD PTR [rsp+0x20],rax
  424f5c:	call   0x424c80
  424f61:	test   rax,rax
  424f64:	je     0x424fd3
  424f66:	mov    rcx,QWORD PTR [rsp+0x40]
  424f6b:	xor    edx,edx
  424f6d:	test   rcx,rcx
  424f70:	jne    0x424f7c
  424f72:	jmp    0x424fcf
  424f74:	cmp    edx,0xccccccc
  424f7a:	ja     0x424fc4
  424f7c:	lea    r9d,[rdx+rdx*4]
  424f80:	movsx  edx,BYTE PTR [rax]
  424f83:	sub    rcx,0x1
  424f87:	add    rax,0x1
  424f8b:	test   rcx,rcx
  424f8e:	mov    QWORD PTR [rsp+0x40],rcx
  424f93:	lea    edx,[rdx+r9*2-0x30]
  424f98:	jne    0x424f74
  424f9a:	cmp    BYTE PTR [rsp+0x3f],0x0
  424f9f:	je     0x424fc0
  424fa1:	cmp    edx,0x80000000
  424fa7:	ja     0x424fc4
  424fa9:	neg    edx
  424fab:	mov    DWORD PTR [rbx],edx
  424fad:	mov    eax,0x4
  424fb2:	add    rsp,0x50
  424fb6:	pop    rbx
  424fb7:	ret    
  424fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  424fc0:	test   edx,edx
  424fc2:	jns    0x424fab
  424fc4:	mov    eax,0xfffffffb
  424fc9:	add    rsp,0x50
  424fcd:	pop    rbx
  424fce:	ret    
  424fcf:	xor    edx,edx
  424fd1:	jmp    0x424fab
  424fd3:	mov    eax,0xfffffffd
  424fd8:	jmp    0x424fb2
  424fda:	nop    WORD PTR [rax+rax*1+0x0]
  424fe0:	push   rbp
  424fe1:	push   rdi
  424fe2:	push   rsi
  424fe3:	push   rbx
  424fe4:	sub    rsp,0xe8
  424feb:	movzx  eax,BYTE PTR [r8]
  424fef:	cmp    al,0x4d
  424ff1:	ja     0x4251e1
  424ff7:	test   al,al
  424ff9:	jne    0x425004
  424ffb:	mov    BYTE PTR [r8],0x4d
  424fff:	mov    eax,0x4d
  425004:	cmp    BYTE PTR [r8+0x1],al
  425008:	ja     0x4251e1
  42500e:	lea    rax,[rsp+0x48]
  425013:	mov    rbx,r8
  425016:	lea    r9,[rsp+0x40]
  42501b:	lea    r8,[rsp+0x3f]
  425020:	mov    QWORD PTR [rsp+0x20],rax
  425025:	call   0x424c80
  42502a:	test   rax,rax
  42502d:	mov    rbp,rax
  425030:	je     0x425218
  425036:	movzx  eax,BYTE PTR [rsp+0x3f]
  42503b:	lea    rsi,[rsp+0x80]
  425043:	lea    rcx,[rsi+0x8]
  425047:	mov    r9,rsi
  42504a:	mov    BYTE PTR [rbx+0x2],al
  42504d:	nop    DWORD PTR [rax]
  425050:	add    r9,0x1
  425054:	mov    BYTE PTR [r9-0x1],0x30
  425059:	cmp    r9,rcx
  42505c:	jne    0x425050
  42505e:	movzx  eax,BYTE PTR [rbx+0x1]
  425062:	movzx  ecx,BYTE PTR [rbx]
  425065:	mov    r8,QWORD PTR [rsp+0x40]
  42506a:	sub    ecx,eax
  42506c:	mov    eax,0xfffffffb
  425071:	movsxd rcx,ecx
  425074:	cmp    rcx,r8
  425077:	jb     0x4251e6
  42507d:	mov    rdx,rbp
  425080:	mov    rcx,r9
  425083:	call   0x42d6a8
  425088:	mov    r9,rax
  42508b:	mov    rax,QWORD PTR [rsp+0x40]
  425090:	mov    r8,QWORD PTR [rsp+0x48]
  425095:	lea    rdi,[r9+rax*1]
  425099:	lea    rdx,[rbp+rax*1+0x1]
  42509e:	movzx  eax,BYTE PTR [rbx+0x1]
  4250a2:	cmp    rax,r8
  4250a5:	jb     0x425203
  4250ab:	mov    rcx,rdi
  4250ae:	call   0x42d6a8
  4250b3:	mov    rax,QWORD PTR [rsp+0x48]
  4250b8:	movzx  r8d,BYTE PTR [rbx+0x1]
  4250bd:	mov    edx,0x30
  4250c2:	lea    rcx,[rdi+rax*1]
  4250c6:	sub    r8,rax
  4250c9:	call   0x42d698
  4250ce:	movzx  eax,BYTE PTR [rbx+0x1]
  4250d2:	lea    r11,[rsp+0x50]
  4250d7:	mov    ecx,0xffffffff
  4250dc:	lea    r10,[rdi+rax*1-0x8]
  4250e1:	movsx  edx,BYTE PTR [r10]
  4250e5:	lea    rax,[r10+0x1]
  4250e9:	lea    r9,[r10+0x8]
  4250ed:	nop    DWORD PTR [rax]
  4250f0:	add    rax,0x1
  4250f4:	lea    r8d,[rdx+rdx*4]
  4250f8:	movsx  edx,BYTE PTR [rax-0x1]
  4250fc:	cmp    rax,r9
  4250ff:	lea    edx,[rdx+r8*2]
  425103:	jne    0x4250f0
  425105:	sub    edx,0x1fca0550
  42510b:	sub    r10,0x8
  42510f:	add    ecx,0x1
  425112:	mov    DWORD PTR [r11],edx
  425115:	add    r11,0x4
  425119:	cmp    r10,rsi
  42511c:	ja     0x4250e1
  42511e:	movzx  r8d,BYTE PTR [rbx]
  425122:	mov    rax,QWORD PTR [rip+0x16ca7]        # 0x43bdd0
  425129:	test   ecx,ecx
  42512b:	mov    QWORD PTR [rbx+0x3],0x0
  425133:	mov    QWORD PTR [rbx+0xb],0x0
  42513b:	mov    QWORD PTR [rbx+0x13],0x0
  425143:	mov    QWORD PTR [rbx+0x1b],0x0
  42514b:	mov    edi,DWORD PTR [rax+r8*4]
  42514f:	je     0x425171
  425151:	test   edx,edx
  425153:	je     0x42516c
  425155:	jmp    0x425210
  42515a:	nop    WORD PTR [rax+rax*1+0x0]
  425160:	movsxd r9,ecx
  425163:	mov    edx,DWORD PTR [rsp+r9*4+0x50]
  425168:	test   edx,edx
  42516a:	jne    0x42517a
  42516c:	sub    ecx,0x1
  42516f:	jne    0x425160
  425171:	mov    edx,DWORD PTR [rsp+0x50]
  425175:	xor    ecx,ecx
  425177:	xor    r9d,r9d
  42517a:	xor    r11d,r11d
  42517d:	test   edx,edx
  42517f:	jne    0x4251da
  425181:	sub    ecx,0x1
  425184:	mov    esi,ecx
  425186:	xor    eax,eax
  425188:	mov    r8d,0x1
  42518e:	jmp    0x42519b
  425190:	movsxd r9,ecx
  425193:	sub    ecx,0x1
  425196:	mov    edx,DWORD PTR [rsp+r9*4+0x50]
  42519b:	test   edx,edx
  42519d:	mov    r10d,edx
  4251a0:	cmovne r8d,r11d
  4251a4:	shr    r10d,0x8
  4251a8:	imul   eax,eax,0x5f5e1
  4251ae:	add    eax,r10d
  4251b1:	test   ecx,ecx
  4251b3:	mov    DWORD PTR [rsp+r9*4+0x50],eax
  4251b8:	movzx  eax,dl
  4251bb:	jns    0x425190
  4251bd:	test   r8b,r8b
  4251c0:	jne    0x4251f2
  4251c2:	sub    edi,0x1
  4251c5:	movsxd r9,esi
  4251c8:	mov    ecx,esi
  4251ca:	movsxd rdx,edi
  4251cd:	mov    BYTE PTR [rbx+rdx*1+0x2],al
  4251d1:	mov    edx,DWORD PTR [rsp+r9*4+0x50]
  4251d6:	test   edx,edx
  4251d8:	je     0x425181
  4251da:	mov    esi,ecx
  4251dc:	lea    ecx,[rcx-0x1]
  4251df:	jmp    0x425186
  4251e1:	mov    eax,0xffffffff
  4251e6:	add    rsp,0xe8
  4251ed:	pop    rbx
  4251ee:	pop    rsi
  4251ef:	pop    rdi
  4251f0:	pop    rbp
  4251f1:	ret    
  4251f2:	mov    eax,0x23
  4251f7:	add    rsp,0xe8
  4251fe:	pop    rbx
  4251ff:	pop    rsi
  425200:	pop    rdi
  425201:	pop    rbp
  425202:	ret    
  425203:	mov    QWORD PTR [rsp+0x48],rax
  425208:	mov    r8,rax
  42520b:	jmp    0x4250ab
  425210:	movsxd r9,ecx
  425213:	jmp    0x42517a
  425218:	mov    eax,0xfffffffd
  42521d:	jmp    0x4251e6
  42521f:	nop
  425220:	push   rdi
  425221:	push   rsi
  425222:	push   rbx
  425223:	sub    rsp,0x30
  425227:	mov    rax,QWORD PTR [rip+0x16c02]        # 0x43be30
  42522e:	mov    rbx,rcx
  425231:	mov    rsi,rdx
  425234:	mov    eax,DWORD PTR [rax]
  425236:	test   eax,eax
  425238:	jne    0x4254e0
  42523e:	mov    rcx,rbx
  425241:	call   0x42d610
  425246:	cmp    rax,0x3
  42524a:	je     0x425282
  42524c:	lea    rdx,[rip+0x151c0]        # 0x43a413
  425253:	mov    rcx,rbx
  425256:	mov    rdi,QWORD PTR [rip+0x1d857]        # 0x442ab4
  42525d:	call   rdi
  42525f:	xor    r8d,r8d
  425262:	test   eax,eax
  425264:	jne    0x4253c0
  42526a:	test   rsi,rsi
  42526d:	je     0x4254d0
  425273:	mov    DWORD PTR [rsi+0x4],r8d
  425277:	mov    eax,r8d
  42527a:	add    rsp,0x30
  42527e:	pop    rbx
  42527f:	pop    rsi
  425280:	pop    rdi
  425281:	ret    
  425282:	lea    rdx,[rip+0x1515a]        # 0x43a3e3
  425289:	mov    rcx,rbx
  42528c:	mov    rdi,QWORD PTR [rip+0x1d821]        # 0x442ab4
  425293:	call   rdi
  425295:	xor    r8d,r8d
  425298:	test   eax,eax
  42529a:	je     0x42526a
  42529c:	lea    rdx,[rip+0x15144]        # 0x43a3e7
  4252a3:	mov    rcx,rbx
  4252a6:	call   rdi
  4252a8:	test   eax,eax
  4252aa:	mov    r8d,0x1
  4252b0:	je     0x42526a
  4252b2:	lea    rdx,[rip+0x15132]        # 0x43a3eb
  4252b9:	mov    rcx,rbx
  4252bc:	call   rdi
  4252be:	test   eax,eax
  4252c0:	mov    r8d,0x2
  4252c6:	je     0x42526a
  4252c8:	lea    rdx,[rip+0x15120]        # 0x43a3ef
  4252cf:	mov    rcx,rbx
  4252d2:	call   rdi
  4252d4:	test   eax,eax
  4252d6:	mov    r8d,0x3
  4252dc:	je     0x42526a
  4252de:	lea    rdx,[rip+0x1510e]        # 0x43a3f3
  4252e5:	mov    rcx,rbx
  4252e8:	call   rdi
  4252ea:	test   eax,eax
  4252ec:	mov    r8d,0x4
  4252f2:	je     0x42526a
  4252f8:	lea    rdx,[rip+0x150f8]        # 0x43a3f7
  4252ff:	mov    rcx,rbx
  425302:	call   rdi
  425304:	test   eax,eax
  425306:	mov    r8d,0x5
  42530c:	je     0x42526a
  425312:	lea    rdx,[rip+0x150e2]        # 0x43a3fb
  425319:	mov    rcx,rbx
  42531c:	call   rdi
  42531e:	test   eax,eax
  425320:	mov    r8d,0x6
  425326:	je     0x42526a
  42532c:	lea    rdx,[rip+0x150cc]        # 0x43a3ff
  425333:	mov    rcx,rbx
  425336:	call   rdi
  425338:	test   eax,eax
  42533a:	mov    r8d,0x7
  425340:	je     0x42526a
  425346:	lea    rdx,[rip+0x150b6]        # 0x43a403
  42534d:	mov    rcx,rbx
  425350:	call   rdi
  425352:	test   eax,eax
  425354:	mov    r8d,0x8
  42535a:	je     0x42526a
  425360:	lea    rdx,[rip+0x150a0]        # 0x43a407
  425367:	mov    rcx,rbx
  42536a:	call   rdi
  42536c:	test   eax,eax
  42536e:	mov    r8d,0x9
  425374:	je     0x42526a
  42537a:	lea    rdx,[rip+0x1508a]        # 0x43a40b
  425381:	mov    rcx,rbx
  425384:	call   rdi
  425386:	test   eax,eax
  425388:	mov    r8d,0xa
  42538e:	je     0x42526a
  425394:	lea    rdx,[rip+0x15074]        # 0x43a40f
  42539b:	mov    rcx,rbx
  42539e:	call   rdi
  4253a0:	test   eax,eax
  4253a2:	mov    r8d,0xb
  4253a8:	je     0x42526a
  4253ae:	or     eax,0xffffffff
  4253b1:	jmp    0x42527a
  4253b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4253c0:	lea    rdx,[rip+0x15054]        # 0x43a41b
  4253c7:	mov    rcx,rbx
  4253ca:	call   rdi
  4253cc:	test   eax,eax
  4253ce:	mov    r8d,0x1
  4253d4:	je     0x42526a
  4253da:	lea    rdx,[rip+0x15043]        # 0x43a424
  4253e1:	mov    rcx,rbx
  4253e4:	call   rdi
  4253e6:	test   eax,eax
  4253e8:	mov    r8d,0x2
  4253ee:	je     0x42526a
  4253f4:	lea    rdx,[rip+0x1502f]        # 0x43a42a
  4253fb:	mov    rcx,rbx
  4253fe:	call   rdi
  425400:	test   eax,eax
  425402:	mov    r8d,0x3
  425408:	je     0x42526a
  42540e:	lea    rdx,[rip+0x1501b]        # 0x43a430
  425415:	mov    rcx,rbx
  425418:	call   rdi
  42541a:	test   eax,eax
  42541c:	mov    r8d,0x5
  425422:	je     0x42526a
  425428:	lea    rdx,[rip+0x15006]        # 0x43a435
  42542f:	mov    rcx,rbx
  425432:	call   rdi
  425434:	test   eax,eax
  425436:	mov    r8d,0x6
  42543c:	je     0x42526a
  425442:	lea    rdx,[rip+0x14ff1]        # 0x43a43a
  425449:	mov    rcx,rbx
  42544c:	call   rdi
  42544e:	test   eax,eax
  425450:	mov    r8d,0x7
  425456:	je     0x42526a
  42545c:	lea    rdx,[rip+0x14fde]        # 0x43a441
  425463:	mov    rcx,rbx
  425466:	call   rdi
  425468:	test   eax,eax
  42546a:	mov    r8d,0x8
  425470:	je     0x42526a
  425476:	lea    rdx,[rip+0x14fce]        # 0x43a44b
  42547d:	mov    rcx,rbx
  425480:	call   rdi
  425482:	test   eax,eax
  425484:	mov    r8d,0x9
  42548a:	je     0x42526a
  425490:	lea    rdx,[rip+0x14fbc]        # 0x43a453
  425497:	mov    rcx,rbx
  42549a:	call   rdi
  42549c:	test   eax,eax
  42549e:	mov    r8d,0xa
  4254a4:	je     0x42526a
  4254aa:	lea    rdx,[rip+0x14fab]        # 0x43a45c
  4254b1:	mov    rcx,rbx
  4254b4:	call   rdi
  4254b6:	test   eax,eax
  4254b8:	jne    0x4253ae
  4254be:	mov    r8d,0xb
  4254c4:	jmp    0x42526a
  4254c9:	nop    DWORD PTR [rax+0x0]
  4254d0:	mov    eax,r8d
  4254d3:	add    rsp,0x30
  4254d7:	pop    rbx
  4254d8:	pop    rsi
  4254d9:	pop    rdi
  4254da:	ret    
  4254db:	nop    DWORD PTR [rax+rax*1+0x0]
  4254e0:	call   0x42d610
  4254e5:	lea    r8,[rip+0x14ed4]        # 0x43a3c0
  4254ec:	lea    rcx,[rip+0x14ee6]        # 0x43a3d9
  4254f3:	mov    QWORD PTR [rsp+0x20],rbx
  4254f8:	mov    r9d,eax
  4254fb:	mov    edx,0xa9c5
  425500:	call   0x40d350
  425505:	jmp    0x42523e
  42550a:	nop    WORD PTR [rax+rax*1+0x0]
  425510:	push   rsi
  425511:	push   rbx
  425512:	sub    rsp,0x28
  425516:	movzx  eax,BYTE PTR [rcx]
  425519:	mov    rbx,rcx
  42551c:	test   al,al
  42551e:	je     0x425550
  425520:	mov    rsi,QWORD PTR [rip+0x1d635]        # 0x442b5c
  425527:	jmp    0x42553b
  425529:	nop    DWORD PTR [rax+0x0]
  425530:	add    rbx,0x1
  425534:	movzx  eax,BYTE PTR [rbx]
  425537:	test   al,al
  425539:	je     0x425550
  42553b:	movzx  ecx,al
  42553e:	call   rsi
  425540:	test   eax,eax
  425542:	jne    0x425530
  425544:	xor    eax,eax
  425546:	add    rsp,0x28
  42554a:	pop    rbx
  42554b:	pop    rsi
  42554c:	ret    
  42554d:	nop    DWORD PTR [rax]
  425550:	mov    eax,0x1
  425555:	add    rsp,0x28
  425559:	pop    rbx
  42555a:	pop    rsi
  42555b:	ret    
  42555c:	nop    DWORD PTR [rax+0x0]
  425560:	movzx  eax,BYTE PTR [r9]
  425564:	movzx  r10d,BYTE PTR [r9+0x1]
  425569:	mov    BYTE PTR [r9+0x2],dl
  42556d:	mov    edx,r8d
  425570:	mov    BYTE PTR [r9+0x1],cl
  425574:	shr    edx,0x18
  425577:	mov    BYTE PTR [r9+0x7],r8b
  42557b:	mov    rcx,r9
  42557e:	mov    BYTE PTR [r9+0x4],dl
  425582:	mov    edx,r8d
  425585:	mov    BYTE PTR [r9],0xa
  425589:	shr    edx,0x10
  42558c:	mov    BYTE PTR [r9+0x3],0x0
  425591:	mov    BYTE PTR [r9+0x5],dl
  425595:	mov    edx,r8d
  425598:	movzx  r8d,r10b
  42559c:	shr    edx,0x8
  42559f:	mov    BYTE PTR [r9+0x6],dl
  4255a3:	movzx  edx,al
  4255a6:	jmp    0x414d70
  4255ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4255b0:	movzx  r10d,BYTE PTR [r9]
  4255b4:	movzx  r11d,BYTE PTR [r9+0x1]
  4255b9:	mov    rax,r8
  4255bc:	mov    BYTE PTR [r9+0x2],dl
  4255c0:	mov    BYTE PTR [r9+0x1],cl
  4255c4:	shr    rax,0x20
  4255c8:	mov    BYTE PTR [r9+0xb],r8b
  4255cc:	mov    rcx,r9
  4255cf:	mov    edx,eax
  4255d1:	mov    BYTE PTR [r9+0x7],al
  4255d5:	mov    BYTE PTR [r9],0x14
  4255d9:	shr    edx,0x18
  4255dc:	mov    BYTE PTR [r9+0x3],0x0
  4255e1:	mov    BYTE PTR [r9+0x4],dl
  4255e5:	mov    edx,eax
  4255e7:	shr    edx,0x10
  4255ea:	mov    BYTE PTR [r9+0x5],dl
  4255ee:	mov    edx,eax
  4255f0:	mov    eax,r8d
  4255f3:	shr    eax,0x18
  4255f6:	shr    edx,0x8
  4255f9:	mov    BYTE PTR [r9+0x8],al
  4255fd:	mov    eax,r8d
  425600:	mov    BYTE PTR [r9+0x6],dl
  425604:	shr    eax,0x10
  425607:	movzx  edx,r10b
  42560b:	mov    BYTE PTR [r9+0x9],al
  42560f:	mov    eax,r8d
  425612:	movzx  r8d,r11b
  425616:	shr    eax,0x8
  425619:	mov    BYTE PTR [r9+0xa],al
  42561d:	jmp    0x414d70
  425622:	nop    DWORD PTR [rax+0x0]
  425626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425630:	test   ecx,ecx
  425632:	js     0x425670
  425634:	cmp    ecx,0x63
  425637:	jg     0x425650
  425639:	cmp    ecx,0x31
  42563c:	jg     0x425641
  42563e:	add    ecx,0x64
  425641:	mov    DWORD PTR [rdx],ecx
  425643:	mov    eax,0x1
  425648:	ret    
  425649:	nop    DWORD PTR [rax+0x0]
  425650:	lea    r8d,[rcx-0x6d9]
  425657:	xor    eax,eax
  425659:	cmp    r8d,0x2036
  425660:	ja     0x425672
  425662:	sub    ecx,0x76c
  425668:	mov    al,0x1
  42566a:	mov    DWORD PTR [rdx],ecx
  42566c:	ret    
  42566d:	nop    DWORD PTR [rax]
  425670:	xor    eax,eax
  425672:	repz ret 
  425674:	xchg   ax,ax
  425676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425680:	push   r12
  425682:	push   rbp
  425683:	push   rdi
  425684:	push   rsi
  425685:	push   rbx
  425686:	sub    rsp,0x20
  42568a:	mov    edi,ecx
  42568c:	mov    rcx,rdx
  42568f:	mov    rsi,rdx
  425692:	mov    rbp,r8
  425695:	mov    r12,r9
  425698:	call   0x42d610
  42569d:	cmp    edi,0x100
  4256a3:	mov    rbx,rax
  4256a6:	je     0x4256e0
  4256a8:	lea    rdi,[rax+0x1]
  4256ac:	mov    rcx,rdi
  4256af:	call   0x42d6b8
  4256b4:	test   rax,rax
  4256b7:	mov    QWORD PTR [rbp+0x0],rax
  4256bb:	je     0x425700
  4256bd:	mov    r8,rdi
  4256c0:	mov    rdx,rsi
  4256c3:	mov    rcx,rax
  4256c6:	call   0x42d6a8
  4256cb:	mov    eax,ebx
  4256cd:	add    rsp,0x20
  4256d1:	pop    rbx
  4256d2:	pop    rsi
  4256d3:	pop    rdi
  4256d4:	pop    rbp
  4256d5:	pop    r12
  4256d7:	ret    
  4256d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4256e0:	mov    r8d,DWORD PTR [r12]
  4256e4:	mov    rcx,QWORD PTR [rbp+0x0]
  4256e8:	mov    rdx,rsi
  4256eb:	cmp    rax,r8
  4256ee:	cmovbe r8,rax
  4256f2:	call   0x42d6a8
  4256f7:	jmp    0x4256cb
  4256f9:	nop    DWORD PTR [rax+0x0]
  425700:	mov    eax,0xfffffffc
  425705:	jmp    0x4256cd
  425707:	nop    WORD PTR [rax+rax*1+0x0]
  425710:	push   rdi
  425711:	push   rsi
  425712:	push   rbx
  425713:	sub    rsp,0x30
  425717:	cmp    edx,0x40
  42571a:	mov    ebx,edx
  42571c:	mov    rsi,r8
  42571f:	je     0x425859
  425725:	jle    0x425762
  425727:	cmp    edx,0x6c
  42572a:	je     0x4257de
  425730:	jg     0x425810
  425736:	cmp    edx,0x43
  425739:	je     0x4258f0
  42573f:	jg     0x4257d0
  425745:	cmp    edx,0x41
  425748:	je     0x425900
  42574e:	cmp    edx,0x42
  425751:	jne    0x425930
  425757:	test   ecx,ecx
  425759:	jns    0x42578e
  42575b:	mov    eax,0xfffffffb
  425760:	jmp    0x425795
  425762:	cmp    edx,0x32
  425765:	je     0x425800
  42576b:	jle    0x425840
  425771:	cmp    edx,0x3b
  425774:	je     0x4258d0
  42577a:	jg     0x4257a0
  42577c:	cmp    edx,0x34
  42577f:	je     0x425960
  425785:	cmp    edx,0x38
  425788:	jne    0x425930
  42578e:	mov    DWORD PTR [rsi],ecx
  425790:	mov    eax,0x4
  425795:	add    rsp,0x30
  425799:	pop    rbx
  42579a:	pop    rsi
  42579b:	pop    rdi
  42579c:	ret    
  42579d:	nop    DWORD PTR [rax]
  4257a0:	cmp    edx,0x3c
  4257a3:	je     0x4258b2
  4257a9:	cmp    edx,0x3e
  4257ac:	jne    0x425930
  4257b2:	pxor   xmm0,xmm0
  4257b6:	mov    eax,0x8
  4257bb:	cvtsi2sd xmm0,ecx
  4257bf:	movsd  QWORD PTR [r8],xmm0
  4257c4:	jmp    0x425795
  4257c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4257d0:	cmp    edx,0x68
  4257d3:	je     0x425800
  4257d5:	cmp    edx,0x6a
  4257d8:	jne    0x425930
  4257de:	test   ecx,ecx
  4257e0:	mov    r9,rsi
  4257e3:	js     0x425972
  4257e9:	mov    r8d,ecx
  4257ec:	xor    edx,edx
  4257ee:	xor    ecx,ecx
  4257f0:	call   0x425560
  4257f5:	jmp    0x425795
  4257f7:	nop    WORD PTR [rax+rax*1+0x0]
  425800:	test   ecx,ecx
  425802:	mov    eax,0x1
  425807:	setne  BYTE PTR [rsi]
  42580a:	jmp    0x425795
  42580c:	nop    DWORD PTR [rax+0x0]
  425810:	cmp    edx,0xa7
  425816:	je     0x425885
  425818:	jg     0x425871
  42581a:	cmp    edx,0x7a
  42581d:	je     0x425940
  425823:	cmp    edx,0x7f
  425826:	jne    0x425930
  42582c:	movsxd rcx,ecx
  42582f:	mov    eax,0x8
  425834:	mov    QWORD PTR [rsi],rcx
  425837:	add    rsp,0x30
  42583b:	pop    rbx
  42583c:	pop    rsi
  42583d:	pop    rdi
  42583e:	ret    
  42583f:	nop
  425840:	cmp    edx,0x27
  425843:	je     0x425885
  425845:	jle    0x425920
  42584b:	cmp    edx,0x2f
  42584e:	je     0x425885
  425850:	cmp    edx,0x30
  425853:	jne    0x425930
  425859:	cmp    ecx,0xff
  42585f:	ja     0x42575b
  425865:	mov    BYTE PTR [rsi],cl
  425867:	mov    eax,0x1
  42586c:	jmp    0x425795
  425871:	cmp    edx,0xaf
  425877:	je     0x425885
  425879:	cmp    edx,0x100
  42587f:	jne    0x425930
  425885:	lea    rdi,[rsp+0x20]
  42588a:	lea    rdx,[rip+0x14bd4]        # 0x43a465
  425891:	mov    r8d,ecx
  425894:	mov    rcx,rdi
  425897:	call   0x42d648
  42589c:	lea    r9,[rsi+0x8]
  4258a0:	mov    r8,rsi
  4258a3:	mov    rdx,rdi
  4258a6:	mov    ecx,ebx
  4258a8:	call   0x425680
  4258ad:	jmp    0x425795
  4258b2:	movsxd rcx,ecx
  4258b5:	mov    eax,0x8
  4258ba:	imul   rcx,rcx,0x2710
  4258c1:	mov    QWORD PTR [r8],rcx
  4258c4:	jmp    0x425795
  4258c9:	nop    DWORD PTR [rax+0x0]
  4258d0:	pxor   xmm0,xmm0
  4258d4:	mov    eax,0x4
  4258d9:	cvtsi2ss xmm0,ecx
  4258dd:	movss  DWORD PTR [r8],xmm0
  4258e2:	jmp    0x425795
  4258e7:	nop    WORD PTR [rax+rax*1+0x0]
  4258f0:	test   ecx,ecx
  4258f2:	jns    0x42582c
  4258f8:	jmp    0x42575b
  4258fd:	nop    DWORD PTR [rax]
  425900:	cmp    ecx,0xffff
  425906:	ja     0x42575b
  42590c:	mov    eax,0x2
  425911:	mov    WORD PTR [rsi],cx
  425914:	add    rsp,0x30
  425918:	pop    rbx
  425919:	pop    rsi
  42591a:	pop    rdi
  42591b:	ret    
  42591c:	nop    DWORD PTR [rax+0x0]
  425920:	cmp    edx,0x23
  425923:	je     0x425885
  425929:	nop    DWORD PTR [rax+0x0]
  425930:	mov    eax,0xfffffffe
  425935:	jmp    0x425795
  42593a:	nop    WORD PTR [rax+rax*1+0x0]
  425940:	lea    eax,[rcx+0x346dc]
  425946:	cmp    eax,0x68db8
  42594b:	ja     0x42575b
  425951:	imul   ecx,ecx,0x2710
  425957:	jmp    0x42578e
  42595c:	nop    DWORD PTR [rax+0x0]
  425960:	lea    eax,[rcx+0x8000]
  425966:	cmp    eax,0xffff
  42596b:	jbe    0x42590c
  42596d:	jmp    0x42575b
  425972:	neg    ecx
  425974:	mov    edx,0x1
  425979:	mov    r8d,ecx
  42597c:	xor    ecx,ecx
  42597e:	call   0x425560
  425983:	jmp    0x425795
  425988:	nop    DWORD PTR [rax+rax*1+0x0]
  425990:	push   rdi
  425991:	push   rsi
  425992:	push   rbx
  425993:	sub    rsp,0x50
  425997:	mov    rcx,QWORD PTR [rcx]
  42599a:	mov    ebx,edx
  42599c:	mov    rsi,r8
  42599f:	cmp    rcx,0x7fffffff
  4259a6:	mov    QWORD PTR [rsp+0x28],rcx
  4259ab:	jbe    0x425a70
  4259b1:	cmp    edx,0x41
  4259b4:	jle    0x4259f3
  4259b6:	cmp    edx,0x6c
  4259b9:	je     0x4259e2
  4259bb:	jg     0x425ac0
  4259c1:	cmp    edx,0x43
  4259c4:	je     0x425a5b
  4259ca:	jl     0x425b30
  4259d0:	cmp    edx,0x68
  4259d3:	je     0x425b50
  4259d9:	cmp    edx,0x6a
  4259dc:	jne    0x425ab0
  4259e2:	mov    r8,rcx
  4259e5:	mov    r9,rsi
  4259e8:	xor    edx,edx
  4259ea:	xor    ecx,ecx
  4259ec:	call   0x4255b0
  4259f1:	jmp    0x425a63
  4259f3:	cmp    edx,0x40
  4259f6:	jge    0x425ae0
  4259fc:	cmp    edx,0x32
  4259ff:	je     0x425b50
  425a05:	jle    0x425af0
  425a0b:	cmp    edx,0x3b
  425a0e:	je     0x425a80
  425a10:	jle    0x425b73
  425a16:	cmp    edx,0x3c
  425a19:	je     0x425a41
  425a1b:	cmp    edx,0x3e
  425a1e:	jne    0x425ab0
  425a24:	test   rcx,rcx
  425a27:	js     0x425bb0
  425a2d:	pxor   xmm0,xmm0
  425a31:	cvtsi2sd xmm0,rcx
  425a36:	movsd  QWORD PTR [rsi],xmm0
  425a3a:	mov    eax,0x8
  425a3f:	jmp    0x425a63
  425a41:	movabs rax,0x346dc5d638865
  425a4b:	cmp    rcx,rax
  425a4e:	ja     0x425ae0
  425a54:	imul   rcx,rcx,0x2710
  425a5b:	mov    QWORD PTR [rsi],rcx
  425a5e:	mov    eax,0x8
  425a63:	add    rsp,0x50
  425a67:	pop    rbx
  425a68:	pop    rsi
  425a69:	pop    rdi
  425a6a:	ret    
  425a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  425a70:	call   0x425710
  425a75:	add    rsp,0x50
  425a79:	pop    rbx
  425a7a:	pop    rsi
  425a7b:	pop    rdi
  425a7c:	ret    
  425a7d:	nop    DWORD PTR [rax]
  425a80:	test   rcx,rcx
  425a83:	js     0x425b90
  425a89:	pxor   xmm0,xmm0
  425a8d:	cvtsi2ss xmm0,rcx
  425a92:	mov    eax,0x4
  425a97:	movss  DWORD PTR [rsi],xmm0
  425a9b:	jmp    0x425a63
  425a9d:	nop    DWORD PTR [rax]
  425aa0:	cmp    edx,0xaf
  425aa6:	je     0x425b00
  425aa8:	cmp    edx,0x100
  425aae:	je     0x425b00
  425ab0:	mov    eax,0xfffffffe
  425ab5:	jmp    0x425a63
  425ab7:	nop    WORD PTR [rax+rax*1+0x0]
  425ac0:	cmp    edx,0xa7
  425ac6:	je     0x425b00
  425ac8:	jg     0x425aa0
  425aca:	cmp    edx,0x7a
  425acd:	je     0x425ae0
  425acf:	cmp    edx,0x7f
  425ad2:	jne    0x425ab0
  425ad4:	test   rcx,rcx
  425ad7:	jns    0x425a5b
  425add:	nop    DWORD PTR [rax]
  425ae0:	mov    eax,0xfffffffb
  425ae5:	jmp    0x425a63
  425aea:	nop    WORD PTR [rax+rax*1+0x0]
  425af0:	cmp    edx,0x27
  425af3:	je     0x425b00
  425af5:	jg     0x425b60
  425af7:	cmp    edx,0x23
  425afa:	jne    0x425ab0
  425afc:	nop    DWORD PTR [rax+0x0]
  425b00:	lea    rdi,[rsp+0x30]
  425b05:	lea    rdx,[rip+0x1495c]        # 0x43a468
  425b0c:	mov    r8,rcx
  425b0f:	mov    rcx,rdi
  425b12:	call   0x42d648
  425b17:	lea    r9,[rsi+0x8]
  425b1b:	mov    r8,rsi
  425b1e:	mov    rdx,rdi
  425b21:	mov    ecx,ebx
  425b23:	call   0x425680
  425b28:	jmp    0x425a63
  425b2d:	nop    DWORD PTR [rax]
  425b30:	mov    eax,0xffffffff
  425b35:	cmp    rcx,rax
  425b38:	ja     0x425ae0
  425b3a:	mov    DWORD PTR [r8],ecx
  425b3d:	mov    eax,0x4
  425b42:	jmp    0x425a63
  425b47:	nop    WORD PTR [rax+rax*1+0x0]
  425b50:	mov    BYTE PTR [rsi],0x1
  425b53:	mov    eax,0x1
  425b58:	jmp    0x425a63
  425b5d:	nop    DWORD PTR [rax]
  425b60:	cmp    edx,0x2f
  425b63:	je     0x425b00
  425b65:	cmp    edx,0x30
  425b68:	je     0x425ae0
  425b6e:	jmp    0x425ab0
  425b73:	cmp    edx,0x34
  425b76:	je     0x425ae0
  425b7c:	cmp    edx,0x38
  425b7f:	je     0x425ae0
  425b85:	jmp    0x425ab0
  425b8a:	nop    WORD PTR [rax+rax*1+0x0]
  425b90:	mov    rax,rcx
  425b93:	pxor   xmm0,xmm0
  425b97:	shr    rax,1
  425b9a:	and    ecx,0x1
  425b9d:	or     rax,rcx
  425ba0:	cvtsi2ss xmm0,rax
  425ba5:	addss  xmm0,xmm0
  425ba9:	jmp    0x425a92
  425bae:	xchg   ax,ax
  425bb0:	mov    rax,rcx
  425bb3:	pxor   xmm0,xmm0
  425bb7:	shr    rax,1
  425bba:	and    ecx,0x1
  425bbd:	or     rax,rcx
  425bc0:	cvtsi2sd xmm0,rax
  425bc5:	addsd  xmm0,xmm0
  425bc9:	jmp    0x425a36
  425bce:	xchg   ax,ax
  425bd0:	push   rsi
  425bd1:	push   rbx
  425bd2:	sub    rsp,0x28
  425bd6:	lea    rdx,[rip+0x14891]        # 0x43a46e
  425bdd:	mov    rbx,QWORD PTR [rip+0x1ced0]        # 0x442ab4
  425be4:	mov    rsi,rcx
  425be7:	call   rbx
  425be9:	test   eax,eax
  425beb:	mov    edx,0x1
  425bf0:	je     0x425c03
  425bf2:	lea    rdx,[rip+0x14878]        # 0x43a471
  425bf9:	mov    rcx,rsi
  425bfc:	call   rbx
  425bfe:	test   eax,eax
  425c00:	sete   dl
  425c03:	mov    eax,edx
  425c05:	add    rsp,0x28
  425c09:	pop    rbx
  425c0a:	pop    rsi
  425c0b:	ret    
  425c0c:	nop    DWORD PTR [rax+0x0]
  425c10:	push   rsi
  425c11:	push   rbx
  425c12:	sub    rsp,0x38
  425c16:	xor    r11d,r11d
  425c19:	test   r9b,0x1
  425c1d:	je     0x425c2a
  425c1f:	add    r9d,0x1
  425c23:	sub    r8,0x1
  425c27:	mov    r11b,0x1
  425c2a:	xor    esi,esi
  425c2c:	cmp    r9d,r11d
  425c2f:	ja     0x425c56
  425c31:	jmp    0x425c8f
  425c33:	and    r10d,0xf
  425c37:	mov    ebx,r11d
  425c3a:	shr    ebx,1
  425c3c:	cmp    ebx,edx
  425c3e:	jae    0x425c4d
  425c40:	test   r11b,0x1
  425c44:	je     0x425c80
  425c46:	or     r10d,esi
  425c49:	mov    BYTE PTR [rcx+rbx*1],r10b
  425c4d:	add    r11d,0x1
  425c51:	cmp    r11d,r9d
  425c54:	je     0x425c8f
  425c56:	mov    r10d,r11d
  425c59:	movzx  r10d,BYTE PTR [r8+r10*1]
  425c5e:	lea    ebx,[r10-0x30]
  425c62:	cmp    bl,0x9
  425c65:	jbe    0x425c33
  425c67:	and    r10d,0xffffffdf
  425c6b:	lea    eax,[r10-0x41]
  425c6f:	cmp    al,0x5
  425c71:	ja     0x425ca0
  425c73:	sub    r10d,0x37
  425c77:	jmp    0x425c37
  425c79:	nop    DWORD PTR [rax+0x0]
  425c80:	mov    esi,r10d
  425c83:	add    r11d,0x1
  425c87:	shl    esi,0x4
  425c8a:	cmp    r11d,r9d
  425c8d:	jne    0x425c56
  425c8f:	mov    eax,r9d
  425c92:	shr    eax,1
  425c94:	add    rsp,0x38
  425c98:	pop    rbx
  425c99:	pop    rsi
  425c9a:	ret    
  425c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  425ca0:	mov    rdx,QWORD PTR [rip+0x16189]        # 0x43be30
  425ca7:	mov    eax,0xfffffffd
  425cac:	mov    edx,DWORD PTR [rdx]
  425cae:	test   edx,edx
  425cb0:	je     0x425c94
  425cb2:	lea    r8,[rip+0x147bf]        # 0x43a478
  425cb9:	lea    rcx,[rip+0x14719]        # 0x43a3d9
  425cc0:	mov    edx,0x13a5
  425cc5:	mov    DWORD PTR [rsp+0x2c],eax
  425cc9:	call   0x40d350
  425cce:	mov    eax,DWORD PTR [rsp+0x2c]
  425cd2:	jmp    0x425c94
  425cd4:	xchg   ax,ax
  425cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425ce0:	lea    edx,[rcx-0x2f]
  425ce3:	cmp    edx,0x50
  425ce6:	ja     0x425d80
  425cec:	lea    r8,[rip+0x147d9]        # 0x43a4cc
  425cf3:	movsxd rax,DWORD PTR [r8+rdx*4]
  425cf7:	add    r8,rax
  425cfa:	jmp    r8
  425cfd:	nop    DWORD PTR [rax]
  425d00:	mov    eax,0x27
  425d05:	ret    
  425d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425d10:	mov    eax,0x26
  425d15:	ret    
  425d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425d20:	mov    eax,0x7b
  425d25:	ret    
  425d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425d30:	mov    eax,0x68
  425d35:	ret    
  425d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425d40:	mov    eax,0x93
  425d45:	ret    
  425d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425d50:	mov    eax,0x6f
  425d55:	ret    
  425d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425d60:	mov    eax,0x6d
  425d65:	ret    
  425d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425d70:	mov    eax,0x6e
  425d75:	ret    
  425d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425d80:	mov    eax,ecx
  425d82:	ret    
  425d83:	nop    DWORD PTR [rax]
  425d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425d90:	push   r15
  425d92:	push   r14
  425d94:	push   r13
  425d96:	push   r12
  425d98:	push   rbp
  425d99:	push   rdi
  425d9a:	push   rsi
  425d9b:	push   rbx
  425d9c:	sub    rsp,0x68
  425da0:	mov    ebp,DWORD PTR [rsp+0xd0]
  425da7:	test   rcx,rcx
  425daa:	mov    r12,rcx
  425dad:	mov    r13,rdx
  425db0:	mov    r14,r8
  425db3:	mov    rdi,r9
  425db6:	je     0x425f73
  425dbc:	test   r14,r14
  425dbf:	je     0x425f37
  425dc5:	test   rdi,rdi
  425dc8:	je     0x425f55
  425dce:	cmp    DWORD PTR [rdi+0x24],0x98967f
  425dd5:	ja     0x425ec0
  425ddb:	cmp    ebp,0x8
  425dde:	mov    eax,0x3
  425de3:	mov    rcx,r14
  425de6:	cmovae ebp,eax
  425de9:	mov    eax,DWORD PTR [rdi+0x20]
  425dec:	mov    DWORD PTR [rsp+0x50],0x0
  425df4:	mov    DWORD PTR [rsp+0x30],eax
  425df8:	mov    eax,DWORD PTR [rdi+0x1c]
  425dfb:	mov    DWORD PTR [rsp+0x34],eax
  425dff:	mov    eax,DWORD PTR [rdi+0x18]
  425e02:	mov    DWORD PTR [rsp+0x38],eax
  425e06:	mov    eax,DWORD PTR [rdi+0xc]
  425e09:	mov    DWORD PTR [rsp+0x3c],eax
  425e0d:	mov    eax,DWORD PTR [rdi+0x8]
  425e10:	mov    DWORD PTR [rsp+0x40],eax
  425e14:	mov    eax,DWORD PTR [rdi]
  425e16:	sub    eax,0x76c
  425e1b:	mov    DWORD PTR [rsp+0x44],eax
  425e1f:	mov    eax,DWORD PTR [rdi+0x14]
  425e22:	mov    DWORD PTR [rsp+0x48],eax
  425e26:	mov    eax,DWORD PTR [rdi+0x10]
  425e29:	mov    DWORD PTR [rsp+0x4c],eax
  425e2d:	call   0x42d610
  425e32:	lea    rcx,[rax+0x6]
  425e36:	mov    rbx,rax
  425e39:	call   0x42d6b8
  425e3e:	mov    rsi,rax
  425e41:	xor    eax,eax
  425e43:	test   rsi,rsi
  425e46:	je     0x425ea6
  425e48:	lea    r8,[rbx+0x1]
  425e4c:	mov    rcx,rsi
  425e4f:	mov    rdx,r14
  425e52:	call   0x42d6a8
  425e57:	mov    rcx,rsi
  425e5a:	jmp    0x425e71
  425e5c:	nop    DWORD PTR [rax+0x0]
  425e60:	cmp    rsi,rbx
  425e63:	jae    0x425e6d
  425e65:	movzx  eax,BYTE PTR [rbx-0x1]
  425e69:	cmp    al,0x25
  425e6b:	jne    0x425ee0
  425e6d:	lea    rcx,[rbx+0x1]
  425e71:	lea    rdx,[rip+0x147e3]        # 0x43a65b
  425e78:	call   0x42d5f8
  425e7d:	test   rax,rax
  425e80:	mov    rbx,rax
  425e83:	jne    0x425e60
  425e85:	lea    r9,[rsp+0x30]
  425e8a:	mov    r8,rsi
  425e8d:	mov    rdx,r13
  425e90:	mov    rcx,r12
  425e93:	call   0x42d618
  425e98:	mov    rcx,rsi
  425e9b:	mov    rbx,rax
  425e9e:	call   0x42d6f8
  425ea3:	mov    rax,rbx
  425ea6:	add    rsp,0x68
  425eaa:	pop    rbx
  425eab:	pop    rsi
  425eac:	pop    rdi
  425ead:	pop    rbp
  425eae:	pop    r12
  425eb0:	pop    r13
  425eb2:	pop    r14
  425eb4:	pop    r15
  425eb6:	ret    
  425eb7:	nop    WORD PTR [rax+rax*1+0x0]
  425ec0:	lea    rdx,[rip+0x14512]        # 0x43a3d9
  425ec7:	lea    rcx,[rip+0x14752]        # 0x43a620
  425ece:	mov    r8d,0xba9
  425ed4:	call   0x42d350
  425ed9:	jmp    0x425ddb
  425ede:	xchg   ax,ax
  425ee0:	test   ebp,ebp
  425ee2:	jne    0x425eec
  425ee4:	cmp    al,0x2e
  425ee6:	je     0x425f91
  425eec:	lea    r15,[rsp+0x20]
  425ef1:	mov    r8d,DWORD PTR [rdi+0x24]
  425ef5:	lea    rdx,[rip+0x14762]        # 0x43a65e
  425efc:	mov    rcx,r15
  425eff:	call   0x42d648
  425f04:	test   ebp,ebp
  425f06:	movsxd rcx,ebp
  425f09:	je     0x425f1f
  425f0b:	xor    eax,eax
  425f0d:	mov    edx,eax
  425f0f:	add    eax,0x1
  425f12:	movzx  r8d,BYTE PTR [r15+rdx*1]
  425f17:	cmp    eax,ebp
  425f19:	mov    BYTE PTR [rbx+rdx*1],r8b
  425f1d:	jb     0x425f0d
  425f1f:	mov    rax,rbx
  425f22:	add    rcx,rbx
  425f25:	sub    rax,rsi
  425f28:	lea    rdx,[r14+rax*1+0x2]
  425f2d:	call   0x42d628
  425f32:	jmp    0x425e85
  425f37:	lea    rdx,[rip+0x1449b]        # 0x43a3d9
  425f3e:	lea    rcx,[rip+0x146cf]        # 0x43a614
  425f45:	mov    r8d,0xba7
  425f4b:	call   0x42d350
  425f50:	jmp    0x425dc5
  425f55:	lea    rdx,[rip+0x1447d]        # 0x43a3d9
  425f5c:	lea    rcx,[rip+0x146b8]        # 0x43a61b
  425f63:	mov    r8d,0xba8
  425f69:	call   0x42d350
  425f6e:	jmp    0x425dce
  425f73:	lea    rdx,[rip+0x1445f]        # 0x43a3d9
  425f7a:	lea    rcx,[rip+0x1468f]        # 0x43a610
  425f81:	mov    r8d,0xba6
  425f87:	call   0x42d350
  425f8c:	jmp    0x425dbc
  425f91:	mov    rax,rbx
  425f94:	lea    rcx,[rbx-0x1]
  425f98:	sub    rax,rsi
  425f9b:	lea    rdx,[r14+rax*1+0x2]
  425fa0:	call   0x42d628
  425fa5:	jmp    0x425e85
  425faa:	nop    WORD PTR [rax+rax*1+0x0]
  425fb0:	push   rbp
  425fb1:	push   rdi
  425fb2:	push   rsi
  425fb3:	push   rbx
  425fb4:	sub    rsp,0x38
  425fb8:	mov    rdi,QWORD PTR [rip+0x15e71]        # 0x43be30
  425fbf:	mov    r8d,DWORD PTR [rdi]
  425fc2:	test   r8d,r8d
  425fc5:	jne    0x426020
  425fc7:	mov    eax,ecx
  425fc9:	or     eax,edx
  425fcb:	test   eax,0xffffff00
  425fd0:	jne    0x426010
  425fd2:	lea    rax,[rip+0x15427]        # 0x43b400
  425fd9:	movsxd rcx,ecx
  425fdc:	movsxd rdx,edx
  425fdf:	movzx  r8d,BYTE PTR [rax+rcx*1]
  425fe4:	movzx  ecx,BYTE PTR [rax+rdx*1]
  425fe8:	lea    rax,[rip+0x153f1]        # 0x43b3e0
  425fef:	mov    eax,DWORD PTR [rax+r8*4]
  425ff3:	shr    eax,cl
  425ff5:	and    eax,0x1
  425ff8:	mov    ebp,eax
  425ffa:	nop    WORD PTR [rax+rax*1+0x0]
  426000:	mov    eax,ebp
  426002:	add    rsp,0x38
  426006:	pop    rbx
  426007:	pop    rsi
  426008:	pop    rdi
  426009:	pop    rbp
  42600a:	ret    
  42600b:	nop    DWORD PTR [rax+rax*1+0x0]
  426010:	xor    eax,eax
  426012:	add    rsp,0x38
  426016:	pop    rbx
  426017:	pop    rsi
  426018:	pop    rdi
  426019:	pop    rbp
  42601a:	ret    
  42601b:	nop    DWORD PTR [rax+rax*1+0x0]
  426020:	mov    esi,ecx
  426022:	mov    r9d,ecx
  426025:	lea    r8,[rip+0x1463e]        # 0x43a66a
  42602c:	lea    rcx,[rip+0x143a6]        # 0x43a3d9
  426033:	mov    ebx,edx
  426035:	mov    DWORD PTR [rsp+0x20],edx
  426039:	mov    edx,0xbfb7
  42603e:	call   0x40d350
  426043:	mov    eax,esi
  426045:	or     eax,ebx
  426047:	test   eax,0xffffff00
  42604c:	jne    0x426010
  42604e:	lea    rax,[rip+0x153ab]        # 0x43b400
  426055:	movsxd rdx,esi
  426058:	movsxd rcx,ebx
  42605b:	movzx  edx,BYTE PTR [rax+rdx*1]
  42605f:	movzx  ecx,BYTE PTR [rax+rcx*1]
  426063:	lea    rax,[rip+0x15376]        # 0x43b3e0
  42606a:	mov    eax,DWORD PTR [rax+rdx*4]
  42606d:	shr    eax,cl
  42606f:	and    eax,0x1
  426072:	mov    ebp,eax
  426074:	mov    eax,DWORD PTR [rdi]
  426076:	test   eax,eax
  426078:	je     0x426000
  42607a:	lea    rcx,[rip+0x145e6]        # 0x43a667
  426081:	lea    rdx,[rip+0x145db]        # 0x43a663
  426088:	test   ebp,ebp
  42608a:	lea    r8,[rip+0x145f7]        # 0x43a688
  426091:	mov    DWORD PTR [rsp+0x20],ebx
  426095:	mov    r9d,esi
  426098:	cmove  rdx,rcx
  42609c:	lea    rcx,[rip+0x14336]        # 0x43a3d9
  4260a3:	mov    QWORD PTR [rsp+0x28],rdx
  4260a8:	mov    edx,0xc077
  4260ad:	call   0x40d350
  4260b2:	jmp    0x426000
  4260b7:	nop    WORD PTR [rax+rax*1+0x0]
  4260c0:	push   r15
  4260c2:	push   r14
  4260c4:	push   r13
  4260c6:	push   r12
  4260c8:	push   rbp
  4260c9:	push   rdi
  4260ca:	push   rsi
  4260cb:	push   rbx
  4260cc:	sub    rsp,0x18
  4260d0:	xor    eax,eax
  4260d2:	lea    rdi,[r8+0x8]
  4260d6:	mov    r9,r8
  4260d9:	mov    r10d,ecx
  4260dc:	mov    QWORD PTR [r8],0x0
  4260e3:	mov    QWORD PTR [r8+0x24],0x0
  4260eb:	mov    r11,rdx
  4260ee:	and    rdi,0xfffffffffffffff8
  4260f2:	sub    r9,rdi
  4260f5:	add    r9d,0x2c
  4260f9:	shr    r9d,0x3
  4260fd:	mov    ecx,r9d
  426100:	rep stos QWORD PTR es:[rdi],rax
  426103:	lea    eax,[r10-0x28]
  426107:	cmp    eax,0x3
  42610a:	ja     0x426332
  426110:	cmp    r10d,0x29
  426114:	je     0x4266a0
  42611a:	cmp    r10d,0x28
  42611e:	mov    ecx,DWORD PTR [rdx+0x8]
  426121:	je     0x426522
  426127:	mov    rbp,QWORD PTR [rdx]
  42612a:	movabs r9,0xd6bf94d5e57a42bd
  426134:	mov    esi,0x88888889
  426139:	mov    rax,rbp
  42613c:	mul    r9
  42613f:	shr    rdx,0x17
  426143:	imul   rax,rdx,0x989680
  42614a:	mov    r9,rdx
  42614d:	sub    ebp,eax
  42614f:	mov    eax,edx
  426151:	mul    esi
  426153:	mov    eax,r9d
  426156:	mov    r12d,edx
  426159:	mov    edi,edx
  42615b:	shr    r12d,0x5
  42615f:	shr    edi,0x5
  426162:	imul   r12d,r12d,0x3c
  426166:	sub    eax,r12d
  426169:	cmp    r10d,0x2b
  42616d:	mov    r12d,eax
  426170:	jne    0x4268d0
  426176:	movsx  r15d,WORD PTR [r11+0xc]
  42617b:	mov    r9d,0x5b05b06
  426181:	lea    edi,[rdi+r15*1+0x5a0]
  426189:	mov    edx,edi
  42618b:	shr    edx,0x5
  42618e:	mov    eax,edx
  426190:	mul    r9d
  426193:	lea    ecx,[rcx+rdx*1-0x1]
  426197:	imul   edx,edx,0x5a0
  42619d:	lea    r11d,[rcx+0xb253a]
  4261a4:	add    ecx,0xb253e
  4261aa:	mov    eax,ecx
  4261ac:	sub    edi,edx
  4261ae:	mov    edx,0x92492493
  4261b3:	imul   edx
  4261b5:	mov    eax,ecx
  4261b7:	sar    eax,0x1f
  4261ba:	lea    r9d,[rdx+rcx*1]
  4261be:	mov    edx,0x396b06bd
  4261c3:	sar    r9d,0x2
  4261c7:	sub    r9d,eax
  4261ca:	lea    eax,[r9*8+0x0]
  4261d2:	sub    eax,r9d
  4261d5:	sub    ecx,eax
  4261d7:	mov    r9d,ecx
  4261da:	lea    ecx,[r11*4+0x0]
  4261e2:	mov    eax,ecx
  4261e4:	sar    ecx,0x1f
  4261e7:	imul   edx
  4261e9:	sar    edx,0xf
  4261ec:	sub    edx,ecx
  4261ee:	imul   eax,edx,0x23ab1
  4261f4:	mov    r14d,edx
  4261f7:	lea    edx,[rax+0x6]
  4261fa:	add    eax,0x3
  4261fd:	cmovs  eax,edx
  426200:	mov    edx,0xb7bbe2dd
  426205:	sar    eax,0x2
  426208:	sub    r11d,eax
  42620b:	lea    r10d,[r11+0x1]
  42620f:	imul   r10d,r10d,0xfa0
  426216:	mov    eax,r10d
  426219:	imul   edx
  42621b:	lea    ecx,[rdx+r10*1]
  42621f:	sar    r10d,0x1f
  426223:	sar    ecx,0x14
  426226:	sub    ecx,r10d
  426229:	imul   edx,ecx,0x5b5
  42622f:	lea    eax,[rdx+0x3]
  426232:	test   edx,edx
  426234:	cmovns eax,edx
  426237:	mov    edx,0x1ac83d19
  42623c:	sub    r14d,0x1
  426240:	sar    eax,0x2
  426243:	sub    r11d,eax
  426246:	lea    r10d,[r11+0x1f]
  42624a:	imul   r14d,r14d,0x64
  42624e:	lea    ebx,[r10+r10*4]
  426252:	shl    ebx,0x4
  426255:	add    ecx,r14d
  426258:	lea    r14d,[r11+0x3c]
  42625c:	mov    eax,ebx
  42625e:	sar    ebx,0x1f
  426261:	imul   edx
  426263:	sar    edx,0x8
  426266:	sub    edx,ebx
  426268:	imul   ebx,edx,0x98f
  42626e:	mov    r13d,edx
  426271:	mov    edx,0x66666667
  426276:	mov    eax,ebx
  426278:	sar    ebx,0x1f
  42627b:	imul   edx
  42627d:	mov    eax,r13d
  426280:	sar    edx,0x5
  426283:	sub    ebx,edx
  426285:	mov    edx,0x2e8ba2e9
  42628a:	imul   edx
  42628c:	mov    eax,r13d
  42628f:	add    ebx,r10d
  426292:	sar    eax,0x1f
  426295:	sar    edx,1
  426297:	sub    edx,eax
  426299:	lea    eax,[rdx+rdx*2]
  42629c:	add    ecx,edx
  42629e:	mov    r10d,edx
  4262a1:	shl    eax,0x2
  4262a4:	neg    eax
  4262a6:	lea    r13d,[r13+rax*1+0x1]
  4262ab:	mov    eax,edi
  4262ad:	mul    esi
  4262af:	mov    esi,edx
  4262b1:	mov    edx,0x55555556
  4262b6:	shr    esi,0x5
  4262b9:	imul   eax,esi,0x3c
  4262bc:	sub    edi,eax
  4262be:	mov    eax,r13d
  4262c1:	imul   edx
  4262c3:	mov    eax,r13d
  4262c6:	mov    DWORD PTR [rsp+0xc],edi
  4262ca:	sar    eax,0x1f
  4262cd:	mov    edi,edx
  4262cf:	sub    edi,eax
  4262d1:	cmp    r11d,0x131
  4262d8:	jle    0x426662
  4262de:	xchg   ax,ax
  4262e0:	lea    r14d,[r11-0x131]
  4262e7:	test   r10d,r10d
  4262ea:	je     0x42666b
  4262f0:	mov    eax,DWORD PTR [rsp+0xc]
  4262f4:	mov    DWORD PTR [r8],ecx
  4262f7:	mov    DWORD PTR [r8+0x8],r13d
  4262fb:	mov    DWORD PTR [r8+0x4],edi
  4262ff:	mov    DWORD PTR [r8+0xc],ebx
  426303:	mov    DWORD PTR [r8+0x10],r14d
  426307:	mov    DWORD PTR [r8+0x1c],eax
  42630b:	mov    DWORD PTR [r8+0x14],r9d
  42630f:	xor    eax,eax
  426311:	mov    DWORD PTR [r8+0x18],esi
  426315:	mov    DWORD PTR [r8+0x20],r12d
  426319:	mov    DWORD PTR [r8+0x24],ebp
  42631d:	mov    DWORD PTR [r8+0x28],r15d
  426321:	add    rsp,0x18
  426325:	pop    rbx
  426326:	pop    rsi
  426327:	pop    rdi
  426328:	pop    rbp
  426329:	pop    r12
  42632b:	pop    r13
  42632d:	pop    r14
  42632f:	pop    r15
  426331:	ret    
  426332:	cmp    r10d,0x3d
  426336:	je     0x426730
  42633c:	cmp    r10d,0x3a
  426340:	je     0x4269f0
  426346:	cmp    r10d,0x31
  42634a:	je     0x426520
  426350:	cmp    r10d,0x33
  426354:	je     0x426b25
  42635a:	cmp    r10d,0xbc
  426361:	je     0x426b80
  426367:	cmp    r10d,0xbb
  42636e:	mov    eax,0xffffffff
  426373:	jne    0x426321
  426375:	mov    r9,QWORD PTR [rdx]
  426378:	movabs rdx,0x431bde82d7b634db
  426382:	movabs rdi,0x8888888888888889
  42638c:	mov    rax,r9
  42638f:	mul    rdx
  426392:	mov    rcx,rdx
  426395:	shr    rcx,0x12
  426399:	imul   rax,rcx,0xf4240
  4263a0:	sub    r9,rax
  4263a3:	mov    rax,rcx
  4263a6:	mul    rdi
  4263a9:	lea    ebp,[r9+r9*4]
  4263ad:	add    ebp,ebp
  4263af:	mov    rdi,rdx
  4263b2:	movabs rdx,0x2d82d82d82d82d83
  4263bc:	shr    rdi,0x5
  4263c0:	lea    r12,[rcx+rdi*4]
  4263c4:	mov    rax,rdi
  4263c7:	shl    rax,0x6
  4263cb:	sub    r12d,eax
  4263ce:	mov    rax,rdi
  4263d1:	mul    rdx
  4263d4:	shr    rdx,0x8
  4263d8:	imul   rax,rdx,0x5a0
  4263df:	lea    ecx,[rdx+0x8e75]
  4263e5:	lea    r11d,[rdx+0x8e71]
  4263ec:	mov    edx,0x92492493
  4263f1:	sub    rdi,rax
  4263f4:	mov    eax,ecx
  4263f6:	imul   edx
  4263f8:	mov    eax,ecx
  4263fa:	sar    eax,0x1f
  4263fd:	lea    r9d,[rdx+rcx*1]
  426401:	mov    edx,0x396b06bd
  426406:	sar    r9d,0x2
  42640a:	sub    r9d,eax
  42640d:	lea    eax,[r9*8+0x0]
  426415:	sub    eax,r9d
  426418:	sub    ecx,eax
  42641a:	mov    r9d,ecx
  42641d:	lea    ecx,[r11*4+0x0]
  426425:	mov    eax,ecx
  426427:	sar    ecx,0x1f
  42642a:	imul   edx
  42642c:	sar    edx,0xf
  42642f:	mov    esi,edx
  426431:	sub    esi,ecx
  426433:	imul   eax,esi,0x23ab1
  426439:	lea    edx,[rax+0x6]
  42643c:	add    eax,0x3
  42643f:	cmovs  eax,edx
  426442:	mov    edx,0xb7bbe2dd
  426447:	sar    eax,0x2
  42644a:	sub    r11d,eax
  42644d:	lea    r10d,[r11+0x1]
  426451:	imul   r10d,r10d,0xfa0
  426458:	mov    eax,r10d
  42645b:	imul   edx
  42645d:	lea    ecx,[rdx+r10*1]
  426461:	sar    r10d,0x1f
  426465:	sar    ecx,0x14
  426468:	sub    ecx,r10d
  42646b:	imul   edx,ecx,0x5b5
  426471:	lea    eax,[rdx+0x3]
  426474:	test   edx,edx
  426476:	cmovns eax,edx
  426479:	mov    edx,0x1ac83d19
  42647e:	sub    esi,0x1
  426481:	sar    eax,0x2
  426484:	sub    r11d,eax
  426487:	lea    r14d,[r11+0x1f]
  42648b:	imul   esi,esi,0x64
  42648e:	lea    r10d,[r14+r14*4]
  426492:	shl    r10d,0x4
  426496:	add    ecx,esi
  426498:	mov    eax,r10d
  42649b:	sar    r10d,0x1f
  42649f:	imul   edx
  4264a1:	sar    edx,0x8
  4264a4:	sub    edx,r10d
  4264a7:	imul   ebx,edx,0x98f
  4264ad:	mov    r13d,edx
  4264b0:	mov    edx,0x66666667
  4264b5:	mov    eax,ebx
  4264b7:	sar    ebx,0x1f
  4264ba:	imul   edx
  4264bc:	mov    eax,r13d
  4264bf:	sar    edx,0x5
  4264c2:	sub    ebx,edx
  4264c4:	mov    edx,0x2e8ba2e9
  4264c9:	imul   edx
  4264cb:	mov    eax,r13d
  4264ce:	add    ebx,r14d
  4264d1:	sar    eax,0x1f
  4264d4:	sar    edx,1
  4264d6:	sub    edx,eax
  4264d8:	lea    eax,[rdx+rdx*2]
  4264db:	mov    r10d,edx
  4264de:	add    ecx,edx
  4264e0:	mov    edx,0x88888889
  4264e5:	shl    eax,0x2
  4264e8:	neg    eax
  4264ea:	lea    r13d,[r13+rax*1+0x1]
  4264ef:	mov    eax,edi
  4264f1:	mul    edx
  4264f3:	mov    esi,edx
  4264f5:	shr    esi,0x5
  4264f8:	imul   eax,esi,0x3c
  4264fb:	sub    edi,eax
  4264fd:	mov    DWORD PTR [rsp+0xc],edi
  426501:	mov    eax,r13d
  426504:	mov    edx,0x55555556
  426509:	xor    r15d,r15d
  42650c:	imul   edx
  42650e:	mov    eax,r13d
  426511:	sar    eax,0x1f
  426514:	mov    edi,edx
  426516:	sub    edi,eax
  426518:	jmp    0x426651
  42651d:	nop    DWORD PTR [rax]
  426520:	mov    ecx,DWORD PTR [rdx]
  426522:	lea    r11d,[rcx+0xb253a]
  426529:	add    ecx,0xb253e
  42652f:	mov    edx,0x92492493
  426534:	mov    eax,ecx
  426536:	mov    DWORD PTR [rsp+0xc],0x0
  42653e:	imul   edx
  426540:	mov    eax,ecx
  426542:	sar    eax,0x1f
  426545:	lea    r9d,[rdx+rcx*1]
  426549:	mov    edx,0x396b06bd
  42654e:	sar    r9d,0x2
  426552:	sub    r9d,eax
  426555:	lea    eax,[r9*8+0x0]
  42655d:	sub    eax,r9d
  426560:	sub    ecx,eax
  426562:	mov    r9d,ecx
  426565:	lea    ecx,[r11*4+0x0]
  42656d:	mov    eax,ecx
  42656f:	sar    ecx,0x1f
  426572:	imul   edx
  426574:	sar    edx,0xf
  426577:	mov    esi,edx
  426579:	sub    esi,ecx
  42657b:	imul   eax,esi,0x23ab1
  426581:	lea    edx,[rax+0x6]
  426584:	add    eax,0x3
  426587:	cmovs  eax,edx
  42658a:	mov    edx,0xb7bbe2dd
  42658f:	sar    eax,0x2
  426592:	sub    r11d,eax
  426595:	lea    r10d,[r11+0x1]
  426599:	imul   r10d,r10d,0xfa0
  4265a0:	mov    eax,r10d
  4265a3:	imul   edx
  4265a5:	lea    ecx,[rdx+r10*1]
  4265a9:	sar    r10d,0x1f
  4265ad:	sar    ecx,0x14
  4265b0:	sub    ecx,r10d
  4265b3:	imul   edx,ecx,0x5b5
  4265b9:	lea    eax,[rdx+0x3]
  4265bc:	test   edx,edx
  4265be:	cmovns eax,edx
  4265c1:	mov    edx,0x1ac83d19
  4265c6:	sub    esi,0x1
  4265c9:	sar    eax,0x2
  4265cc:	xor    r15d,r15d
  4265cf:	xor    ebp,ebp
  4265d1:	sub    r11d,eax
  4265d4:	xor    r12d,r12d
  4265d7:	lea    ebx,[r11+0x1f]
  4265db:	imul   esi,esi,0x64
  4265de:	lea    r10d,[rbx+rbx*4]
  4265e2:	shl    r10d,0x4
  4265e6:	add    ecx,esi
  4265e8:	xor    esi,esi
  4265ea:	mov    eax,r10d
  4265ed:	sar    r10d,0x1f
  4265f1:	imul   edx
  4265f3:	sar    edx,0x8
  4265f6:	mov    edi,edx
  4265f8:	mov    edx,0x66666667
  4265fd:	sub    edi,r10d
  426600:	imul   r10d,edi,0x98f
  426607:	mov    eax,r10d
  42660a:	sar    r10d,0x1f
  42660e:	imul   edx
  426610:	mov    eax,edi
  426612:	sar    edx,0x5
  426615:	sub    r10d,edx
  426618:	mov    edx,0x2e8ba2e9
  42661d:	imul   edx
  42661f:	mov    eax,edi
  426621:	add    ebx,r10d
  426624:	sar    eax,0x1f
  426627:	sar    edx,1
  426629:	sub    edx,eax
  42662b:	lea    eax,[rdx+rdx*2]
  42662e:	mov    r10d,edx
  426631:	add    ecx,edx
  426633:	mov    edx,0x55555556
  426638:	shl    eax,0x2
  42663b:	neg    eax
  42663d:	lea    r13d,[rdi+rax*1+0x1]
  426642:	mov    eax,r13d
  426645:	imul   edx
  426647:	mov    eax,r13d
  42664a:	sar    eax,0x1f
  42664d:	mov    edi,edx
  42664f:	sub    edi,eax
  426651:	cmp    r11d,0x131
  426658:	lea    r14d,[r11+0x3c]
  42665c:	jg     0x4262e0
  426662:	test   r10d,r10d
  426665:	jne    0x4262f0
  42666b:	test   cl,0x3
  42666e:	jne    0x4262f0
  426674:	mov    eax,ecx
  426676:	mov    edx,0x51eb851f
  42667b:	mov    r10d,ecx
  42667e:	imul   edx
  426680:	sar    r10d,0x1f
  426684:	mov    eax,edx
  426686:	sar    eax,0x5
  426689:	sub    eax,r10d
  42668c:	imul   eax,eax,0x64
  42668f:	cmp    ecx,eax
  426691:	je     0x4268b0
  426697:	add    r14d,0x1
  42669b:	jmp    0x4262f0
  4266a0:	mov    rbp,QWORD PTR [rdx]
  4266a3:	movabs rcx,0xd6bf94d5e57a42bd
  4266ad:	mov    rax,rbp
  4266b0:	mul    rcx
  4266b3:	mov    rcx,rdx
  4266b6:	shr    rcx,0x17
  4266ba:	imul   rax,rcx,0x989680
  4266c1:	sub    ebp,eax
  4266c3:	mov    eax,ecx
  4266c5:	mov    esi,0x88888889
  4266ca:	mul    esi
  4266cc:	mov    eax,ecx
  4266ce:	mov    r12d,edx
  4266d1:	shr    r12d,0x5
  4266d5:	imul   r12d,r12d,0x3c
  4266d9:	sub    eax,r12d
  4266dc:	mov    r12d,eax
  4266df:	mov    ecx,edx
  4266e1:	mov    r11d,0x132
  4266e7:	xor    edi,edi
  4266e9:	shr    ecx,0x5
  4266ec:	xor    r13d,r13d
  4266ef:	mov    r10d,0x1
  4266f5:	mov    eax,ecx
  4266f7:	mov    ebx,0x1
  4266fc:	mov    r9d,0x1
  426702:	mul    esi
  426704:	xor    r15d,r15d
  426707:	lea    r14d,[r11-0x131]
  42670e:	mov    esi,edx
  426710:	shr    esi,0x5
  426713:	imul   eax,esi,0x3c
  426716:	sub    ecx,eax
  426718:	mov    DWORD PTR [rsp+0xc],ecx
  42671c:	mov    ecx,0x76c
  426721:	jmp    0x4262e7
  426726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426730:	mov    ecx,DWORD PTR [rdx+0x4]
  426733:	mov    ebp,0x1b4e81b5
  426738:	mov    esi,0x88888889
  42673d:	mov    eax,ecx
  42673f:	mul    ebp
  426741:	shr    edx,0x5
  426744:	imul   eax,edx,0x12c
  42674a:	mov    r9d,edx
  42674d:	sub    ecx,eax
  42674f:	imul   ecx,ecx,0x3e8
  426755:	add    ecx,0x96
  42675b:	mov    eax,ecx
  42675d:	mov    ecx,DWORD PTR [r11]
  426760:	mul    ebp
  426762:	mov    eax,r9d
  426765:	lea    r11d,[rcx+0xb253a]
  42676c:	add    ecx,0xb253e
  426772:	shr    edx,0x5
  426775:	imul   ebp,edx,0x2710
  42677b:	mul    esi
  42677d:	mov    eax,ecx
  42677f:	mov    r12d,edx
  426782:	shr    edx,0x5
  426785:	shr    r12d,0x5
  426789:	mov    r14d,edx
  42678c:	mov    edx,0x92492493
  426791:	imul   r12d,r12d,0x3c
  426795:	imul   edx
  426797:	mov    eax,ecx
  426799:	sar    eax,0x1f
  42679c:	sub    r9d,r12d
  42679f:	mov    r12d,r9d
  4267a2:	lea    r9d,[rdx+rcx*1]
  4267a6:	mov    edx,0x396b06bd
  4267ab:	sar    r9d,0x2
  4267af:	sub    r9d,eax
  4267b2:	lea    eax,[r9*8+0x0]
  4267ba:	sub    eax,r9d
  4267bd:	sub    ecx,eax
  4267bf:	mov    r9d,ecx
  4267c2:	lea    ecx,[r11*4+0x0]
  4267ca:	mov    eax,ecx
  4267cc:	sar    ecx,0x1f
  4267cf:	imul   edx
  4267d1:	sar    edx,0xf
  4267d4:	mov    edi,edx
  4267d6:	sub    edi,ecx
  4267d8:	imul   eax,edi,0x23ab1
  4267de:	lea    edx,[rax+0x6]
  4267e1:	add    eax,0x3
  4267e4:	cmovs  eax,edx
  4267e7:	mov    edx,0xb7bbe2dd
  4267ec:	sar    eax,0x2
  4267ef:	sub    r11d,eax
  4267f2:	lea    r10d,[r11+0x1]
  4267f6:	imul   r10d,r10d,0xfa0
  4267fd:	mov    eax,r10d
  426800:	imul   edx
  426802:	lea    ecx,[rdx+r10*1]
  426806:	sar    r10d,0x1f
  42680a:	sar    ecx,0x14
  42680d:	sub    ecx,r10d
  426810:	imul   edx,ecx,0x5b5
  426816:	mov    r15d,ecx
  426819:	lea    eax,[rdx+0x3]
  42681c:	test   edx,edx
  42681e:	cmovns eax,edx
  426821:	mov    edx,0x1ac83d19
  426826:	sar    eax,0x2
  426829:	sub    r11d,eax
  42682c:	lea    ecx,[r11+0x1f]
  426830:	lea    r10d,[rcx+rcx*4]
  426834:	shl    r10d,0x4
  426838:	mov    eax,r10d
  42683b:	sar    r10d,0x1f
  42683f:	imul   edx
  426841:	sar    edx,0x8
  426844:	sub    edx,r10d
  426847:	imul   ebx,edx,0x98f
  42684d:	mov    r13d,edx
  426850:	mov    edx,0x66666667
  426855:	mov    eax,ebx
  426857:	sar    ebx,0x1f
  42685a:	imul   edx
  42685c:	mov    eax,r13d
  42685f:	sar    edx,0x5
  426862:	sub    ebx,edx
  426864:	mov    edx,0x2e8ba2e9
  426869:	imul   edx
  42686b:	mov    eax,r13d
  42686e:	add    ebx,ecx
  426870:	sar    eax,0x1f
  426873:	lea    ecx,[rdi-0x1]
  426876:	sar    edx,1
  426878:	sub    edx,eax
  42687a:	lea    eax,[rdx+rdx*2]
  42687d:	mov    r10d,edx
  426880:	imul   ecx,ecx,0x64
  426883:	shl    eax,0x2
  426886:	neg    eax
  426888:	lea    r13d,[r13+rax*1+0x1]
  42688d:	add    ecx,r15d
  426890:	mov    eax,r14d
  426893:	add    ecx,edx
  426895:	mul    esi
  426897:	mov    esi,edx
  426899:	shr    esi,0x5
  42689c:	imul   eax,esi,0x3c
  42689f:	sub    r14d,eax
  4268a2:	mov    DWORD PTR [rsp+0xc],r14d
  4268a7:	jmp    0x426501
  4268ac:	nop    DWORD PTR [rax+0x0]
  4268b0:	sar    edx,0x7
  4268b3:	sub    edx,r10d
  4268b6:	imul   edx,edx,0x190
  4268bc:	cmp    ecx,edx
  4268be:	jne    0x4262f0
  4268c4:	jmp    0x426697
  4268c9:	nop    DWORD PTR [rax+0x0]
  4268d0:	lea    r11d,[rcx+0xb253a]
  4268d7:	add    ecx,0xb253e
  4268dd:	mov    edx,0x92492493
  4268e2:	mov    eax,ecx
  4268e4:	imul   edx
  4268e6:	mov    eax,ecx
  4268e8:	sar    eax,0x1f
  4268eb:	lea    r9d,[rdx+rcx*1]
  4268ef:	mov    edx,0x396b06bd
  4268f4:	sar    r9d,0x2
  4268f8:	sub    r9d,eax
  4268fb:	lea    eax,[r9*8+0x0]
  426903:	sub    eax,r9d
  426906:	sub    ecx,eax
  426908:	mov    r9d,ecx
  42690b:	lea    ecx,[r11*4+0x0]
  426913:	mov    eax,ecx
  426915:	sar    ecx,0x1f
  426918:	imul   edx
  42691a:	sar    edx,0xf
  42691d:	sub    edx,ecx
  42691f:	imul   eax,edx,0x23ab1
  426925:	mov    r14d,edx
  426928:	lea    edx,[rax+0x6]
  42692b:	add    eax,0x3
  42692e:	cmovs  eax,edx
  426931:	mov    edx,0xb7bbe2dd
  426936:	sar    eax,0x2
  426939:	sub    r11d,eax
  42693c:	lea    r10d,[r11+0x1]
  426940:	imul   r10d,r10d,0xfa0
  426947:	mov    eax,r10d
  42694a:	imul   edx
  42694c:	lea    ecx,[rdx+r10*1]
  426950:	sar    r10d,0x1f
  426954:	sar    ecx,0x14
  426957:	sub    ecx,r10d
  42695a:	imul   edx,ecx,0x5b5
  426960:	lea    eax,[rdx+0x3]
  426963:	test   edx,edx
  426965:	cmovns eax,edx
  426968:	mov    edx,0x1ac83d19
  42696d:	sub    r14d,0x1
  426971:	sar    eax,0x2
  426974:	sub    r11d,eax
  426977:	lea    r15d,[r11+0x1f]
  42697b:	imul   r14d,r14d,0x64
  42697f:	lea    r10d,[r15+r15*4]
  426983:	shl    r10d,0x4
  426987:	add    ecx,r14d
  42698a:	mov    eax,r10d
  42698d:	sar    r10d,0x1f
  426991:	imul   edx
  426993:	sar    edx,0x8
  426996:	sub    edx,r10d
  426999:	imul   r10d,edx,0x98f
  4269a0:	mov    r13d,edx
  4269a3:	mov    edx,0x66666667
  4269a8:	mov    eax,r10d
  4269ab:	sar    r10d,0x1f
  4269af:	imul   edx
  4269b1:	mov    eax,r13d
  4269b4:	sar    edx,0x5
  4269b7:	sub    r10d,edx
  4269ba:	mov    edx,0x2e8ba2e9
  4269bf:	imul   edx
  4269c1:	mov    eax,r13d
  4269c4:	lea    ebx,[r15+r10*1]
  4269c8:	sar    eax,0x1f
  4269cb:	sar    edx,1
  4269cd:	sub    edx,eax
  4269cf:	lea    eax,[rdx+rdx*2]
  4269d2:	mov    r10d,edx
  4269d5:	add    ecx,edx
  4269d7:	shl    eax,0x2
  4269da:	neg    eax
  4269dc:	lea    r13d,[r13+rax*1+0x1]
  4269e1:	mov    eax,edi
  4269e3:	mul    esi
  4269e5:	jmp    0x4264f3
  4269ea:	nop    WORD PTR [rax+rax*1+0x0]
  4269f0:	movzx  ecx,WORD PTR [rdx]
  4269f3:	movzx  edi,WORD PTR [rdx+0x2]
  4269f7:	mov    edx,0x92492493
  4269fc:	lea    r11d,[rcx+0xb253a]
  426a03:	add    ecx,0xb253e
  426a09:	mov    eax,ecx
  426a0b:	imul   edx
  426a0d:	lea    esi,[r11*4+0x0]
  426a15:	lea    r9d,[rdx+rcx*1]
  426a19:	mov    edx,0x396b06bd
  426a1e:	sar    r9d,0x2
  426a22:	lea    eax,[r9*8+0x0]
  426a2a:	sub    eax,r9d
  426a2d:	sub    ecx,eax
  426a2f:	mov    eax,esi
  426a31:	imul   edx
  426a33:	mov    r9d,ecx
  426a36:	mov    esi,edx
  426a38:	mov    edx,0xb7bbe2dd
  426a3d:	shr    esi,0xf
  426a40:	imul   eax,esi,0x23ab1
  426a46:	add    eax,0x3
  426a49:	sar    eax,0x2
  426a4c:	sub    r11d,eax
  426a4f:	lea    r10d,[r11+0x1]
  426a53:	imul   r10d,r10d,0xfa0
  426a5a:	mov    eax,r10d
  426a5d:	imul   edx
  426a5f:	lea    ecx,[rdx+r10*1]
  426a63:	sar    r10d,0x1f
  426a67:	sar    ecx,0x14
  426a6a:	sub    ecx,r10d
  426a6d:	imul   edx,ecx,0x5b5
  426a73:	lea    eax,[rdx+0x3]
  426a76:	test   edx,edx
  426a78:	cmovns eax,edx
  426a7b:	mov    edx,0x1ac83d19
  426a80:	sub    esi,0x1
  426a83:	sar    eax,0x2
  426a86:	xor    r15d,r15d
  426a89:	xor    r12d,r12d
  426a8c:	sub    r11d,eax
  426a8f:	lea    ebx,[r11+0x1f]
  426a93:	imul   esi,esi,0x64
  426a96:	lea    r10d,[rbx+rbx*4]
  426a9a:	shl    r10d,0x4
  426a9e:	add    ecx,esi
  426aa0:	mov    eax,r10d
  426aa3:	sar    r10d,0x1f
  426aa7:	imul   edx
  426aa9:	sar    edx,0x8
  426aac:	sub    edx,r10d
  426aaf:	imul   r10d,edx,0x98f
  426ab6:	mov    ebp,edx
  426ab8:	mov    edx,0x66666667
  426abd:	mov    eax,r10d
  426ac0:	sar    r10d,0x1f
  426ac4:	imul   edx
  426ac6:	mov    eax,ebp
  426ac8:	sar    edx,0x5
  426acb:	sub    r10d,edx
  426ace:	mov    edx,0x2e8ba2e9
  426ad3:	imul   edx
  426ad5:	mov    eax,ebp
  426ad7:	add    ebx,r10d
  426ada:	sar    eax,0x1f
  426add:	sar    edx,1
  426adf:	sub    edx,eax
  426ae1:	lea    eax,[rdx+rdx*2]
  426ae4:	mov    r10d,edx
  426ae7:	add    ecx,edx
  426ae9:	mov    edx,0x88888889
  426aee:	shl    eax,0x2
  426af1:	neg    eax
  426af3:	lea    r13d,[rbp+rax*1+0x1]
  426af8:	mov    eax,edi
  426afa:	xor    ebp,ebp
  426afc:	mul    edx
  426afe:	mov    esi,edx
  426b00:	mov    edx,0x55555556
  426b05:	shr    esi,0x5
  426b08:	imul   eax,esi,0x3c
  426b0b:	sub    edi,eax
  426b0d:	mov    eax,r13d
  426b10:	imul   edx
  426b12:	mov    eax,r13d
  426b15:	mov    DWORD PTR [rsp+0xc],edi
  426b19:	sar    eax,0x1f
  426b1c:	mov    edi,edx
  426b1e:	sub    edi,eax
  426b20:	jmp    0x426651
  426b25:	mov    ecx,DWORD PTR [rdx]
  426b27:	mov    r9d,0x1b4e81b5
  426b2d:	mov    esi,0x88888889
  426b32:	mov    eax,ecx
  426b34:	mul    r9d
  426b37:	shr    edx,0x5
  426b3a:	imul   eax,edx,0x12c
  426b40:	mov    r10d,edx
  426b43:	sub    ecx,eax
  426b45:	imul   ecx,ecx,0x3e8
  426b4b:	add    ecx,0x96
  426b51:	mov    eax,ecx
  426b53:	mul    r9d
  426b56:	mov    eax,r10d
  426b59:	mov    ecx,edx
  426b5b:	mul    esi
  426b5d:	shr    ecx,0x5
  426b60:	imul   ebp,ecx,0x2710
  426b66:	mov    r12d,edx
  426b69:	shr    r12d,0x5
  426b6d:	imul   r12d,r12d,0x3c
  426b71:	sub    r10d,r12d
  426b74:	mov    r12d,r10d
  426b77:	jmp    0x4266df
  426b7c:	nop    DWORD PTR [rax+0x0]
  426b80:	mov    r9,QWORD PTR [rdx]
  426b83:	movabs rdx,0x431bde82d7b634db
  426b8d:	mov    rax,r9
  426b90:	mul    rdx
  426b93:	mov    rcx,rdx
  426b96:	movabs rdx,0xc22e450672894ab7
  426ba0:	shr    rcx,0x12
  426ba4:	imul   rax,rcx,0xf4240
  426bab:	sub    r9,rax
  426bae:	mov    rax,rcx
  426bb1:	mul    rdx
  426bb4:	lea    ebp,[r9+r9*4]
  426bb8:	add    ebp,ebp
  426bba:	shr    rdx,0x10
  426bbe:	imul   rdx,rdx,0x15180
  426bc5:	sub    rcx,rdx
  426bc8:	jmp    0x4266c3
  426bcd:	nop    DWORD PTR [rax]
  426bd0:	push   r12
  426bd2:	push   rbp
  426bd3:	push   rdi
  426bd4:	push   rsi
  426bd5:	push   rbx
  426bd6:	sub    rsp,0xa0
  426bdd:	mov    rdi,QWORD PTR [rsp+0xf0]
  426be5:	cmp    r9d,0x33
  426be9:	je     0x426e45
  426bef:	jle    0x426ce0
  426bf5:	cmp    r9d,0xaf
  426bfc:	je     0x426dc0
  426c02:	jg     0x426c70
  426c04:	cmp    r9d,0x3d
  426c08:	je     0x426d50
  426c0e:	cmp    r9d,0xa7
  426c15:	je     0x426dc0
  426c1b:	cmp    r9d,0x3a
  426c1f:	jne    0x426d04
  426c25:	mov    eax,DWORD PTR [r8+0x8]
  426c29:	cmp    eax,0xffff
  426c2e:	ja     0x426e7d
  426c34:	mov    WORD PTR [rdi],ax
  426c37:	mov    rdx,QWORD PTR [r8]
  426c3a:	lea    rax,[rdx+0x11e1a300]
  426c41:	movabs rdx,0xe5109ec205d7bea7
  426c4b:	mul    rdx
  426c4e:	mov    eax,0x4
  426c53:	shr    rdx,0x1d
  426c57:	mov    WORD PTR [rdi+0x2],dx
  426c5b:	add    rsp,0xa0
  426c62:	pop    rbx
  426c63:	pop    rsi
  426c64:	pop    rdi
  426c65:	pop    rbp
  426c66:	pop    r12
  426c68:	ret    
  426c69:	nop    DWORD PTR [rax+0x0]
  426c70:	cmp    r9d,0xbc
  426c77:	je     0x426d90
  426c7d:	cmp    r9d,0x100
  426c84:	je     0x426dc0
  426c8a:	cmp    r9d,0xbb
  426c91:	jne    0x426d04
  426c93:	mov    eax,DWORD PTR [r8+0x8]
  426c97:	movabs rdx,0x141dd76000
  426ca1:	movabs rcx,0xcccccccccccccccd
  426cab:	add    eax,0xa96c9
  426cb0:	cdqe   
  426cb2:	imul   rax,rdx
  426cb6:	mov    rdx,QWORD PTR [r8]
  426cb9:	mov    r9,rax
  426cbc:	mov    rax,rdx
  426cbf:	mul    rcx
  426cc2:	mov    eax,0x8
  426cc7:	shr    rdx,0x3
  426ccb:	add    rdx,r9
  426cce:	mov    QWORD PTR [rdi],rdx
  426cd1:	add    rsp,0xa0
  426cd8:	pop    rbx
  426cd9:	pop    rsi
  426cda:	pop    rdi
  426cdb:	pop    rbp
  426cdc:	pop    r12
  426cde:	ret    
  426cdf:	nop
  426ce0:	cmp    r9d,0x2b
  426ce4:	jg     0x426d20
  426ce6:	cmp    r9d,0x28
  426cea:	jge    0x426e24
  426cf0:	cmp    r9d,0x23
  426cf4:	je     0x426dc0
  426cfa:	cmp    r9d,0x27
  426cfe:	je     0x426dc0
  426d04:	mov    eax,0xfffffffe
  426d09:	add    rsp,0xa0
  426d10:	pop    rbx
  426d11:	pop    rsi
  426d12:	pop    rdi
  426d13:	pop    rbp
  426d14:	pop    r12
  426d16:	ret    
  426d17:	nop    WORD PTR [rax+rax*1+0x0]
  426d20:	cmp    r9d,0x2f
  426d24:	je     0x426dc0
  426d2a:	cmp    r9d,0x31
  426d2e:	jne    0x426d04
  426d30:	mov    eax,DWORD PTR [r8+0x8]
  426d34:	mov    DWORD PTR [rdi],eax
  426d36:	mov    eax,0x4
  426d3b:	add    rsp,0xa0
  426d42:	pop    rbx
  426d43:	pop    rsi
  426d44:	pop    rdi
  426d45:	pop    rbp
  426d46:	pop    r12
  426d48:	ret    
  426d49:	nop    DWORD PTR [rax+0x0]
  426d50:	mov    eax,DWORD PTR [r8+0x8]
  426d54:	movabs rcx,0xa7c5ac471b47843
  426d5e:	mov    DWORD PTR [rdi],eax
  426d60:	mov    rax,QWORD PTR [r8]
  426d63:	lea    rdx,[rax+rax*2+0xc350]
  426d6b:	shr    rdx,0x5
  426d6f:	mov    rax,rdx
  426d72:	mul    rcx
  426d75:	mov    eax,0x8
  426d7a:	shr    rdx,0x7
  426d7e:	mov    DWORD PTR [rdi+0x4],edx
  426d81:	add    rsp,0xa0
  426d88:	pop    rbx
  426d89:	pop    rsi
  426d8a:	pop    rdi
  426d8b:	pop    rbp
  426d8c:	pop    r12
  426d8e:	ret    
  426d8f:	nop
  426d90:	mov    rax,QWORD PTR [r8]
  426d93:	movabs rdx,0xcccccccccccccccd
  426d9d:	mul    rdx
  426da0:	mov    eax,0x8
  426da5:	shr    rdx,0x3
  426da9:	mov    QWORD PTR [rdi],rdx
  426dac:	add    rsp,0xa0
  426db3:	pop    rbx
  426db4:	pop    rsi
  426db5:	pop    rdi
  426db6:	pop    rbp
  426db7:	pop    r12
  426db9:	ret    
  426dba:	nop    WORD PTR [rax+rax*1+0x0]
  426dc0:	lea    r12,[rsp+0x30]
  426dc5:	mov    rsi,r8
  426dc8:	mov    eax,edx
  426dca:	mov    rbp,rcx
  426dcd:	mov    rdx,rsi
  426dd0:	mov    ecx,eax
  426dd2:	mov    r8,r12
  426dd5:	mov    ebx,r9d
  426dd8:	call   0x4260c0
  426ddd:	mov    rax,QWORD PTR [rbp+0x0]
  426de1:	lea    rbp,[rsp+0x60]
  426de6:	mov    r9,r12
  426de9:	mov    edx,0x40
  426dee:	mov    rcx,rbp
  426df1:	mov    r8,QWORD PTR [rax+0x10]
  426df5:	movzx  eax,BYTE PTR [rsi+0xe]
  426df9:	and    eax,0x7
  426dfc:	mov    DWORD PTR [rsp+0x20],eax
  426e00:	call   0x425d90
  426e05:	lea    r9,[rdi+0x8]
  426e09:	mov    r8,rdi
  426e0c:	mov    rdx,rbp
  426e0f:	mov    ecx,ebx
  426e11:	call   0x425680
  426e16:	add    rsp,0xa0
  426e1d:	pop    rbx
  426e1e:	pop    rsi
  426e1f:	pop    rdi
  426e20:	pop    rbp
  426e21:	pop    r12
  426e23:	ret    
  426e24:	mov    rax,QWORD PTR [r8]
  426e27:	mov    rdx,QWORD PTR [r8+0x8]
  426e2b:	mov    QWORD PTR [rdi],rax
  426e2e:	mov    eax,0x10
  426e33:	mov    QWORD PTR [rdi+0x8],rdx
  426e37:	add    rsp,0xa0
  426e3e:	pop    rbx
  426e3f:	pop    rsi
  426e40:	pop    rdi
  426e41:	pop    rbp
  426e42:	pop    r12
  426e44:	ret    
  426e45:	mov    rax,QWORD PTR [r8]
  426e48:	movabs rcx,0xa7c5ac471b47843
  426e52:	lea    rdx,[rax+rax*2+0xc350]
  426e5a:	shr    rdx,0x5
  426e5e:	mov    rax,rdx
  426e61:	mul    rcx
  426e64:	mov    eax,0x4
  426e69:	shr    rdx,0x7
  426e6d:	mov    DWORD PTR [rdi],edx
  426e6f:	add    rsp,0xa0
  426e76:	pop    rbx
  426e77:	pop    rsi
  426e78:	pop    rdi
  426e79:	pop    rbp
  426e7a:	pop    r12
  426e7c:	ret    
  426e7d:	mov    eax,0xfffffffb
  426e82:	jmp    0x426d3b
  426e87:	nop    WORD PTR [rax+rax*1+0x0]
  426e90:	push   rbp
  426e91:	push   rdi
  426e92:	push   rsi
  426e93:	push   rbx
  426e94:	sub    rsp,0xa8
  426e9b:	mov    rsi,QWORD PTR [rsp+0xf0]
  426ea3:	cmp    r8d,0x33
  426ea7:	mov    rdi,rcx
  426eaa:	mov    r10,rdx
  426ead:	mov    ebx,r8d
  426eb0:	je     0x427122
  426eb6:	jle    0x426fa0
  426ebc:	cmp    r8d,0xaf
  426ec3:	je     0x427050
  426ec9:	jg     0x426f25
  426ecb:	cmp    r8d,0x3d
  426ecf:	je     0x427000
  426ed5:	cmp    r8d,0xa7
  426edc:	je     0x427050
  426ee2:	cmp    r8d,0x3a
  426ee6:	jne    0x426fc4
  426eec:	mov    eax,DWORD PTR [rdx]
  426eee:	cmp    eax,0xffff
  426ef3:	ja     0x42716a
  426ef9:	mov    WORD PTR [rsi],ax
  426efc:	mov    ecx,DWORD PTR [rdx+0x4]
  426eff:	mov    edx,0x7482296b
  426f04:	mov    eax,ecx
  426f06:	sar    ecx,0x1f
  426f09:	imul   edx
  426f0b:	mov    eax,0x4
  426f10:	sar    edx,0xd
  426f13:	sub    edx,ecx
  426f15:	mov    WORD PTR [rsi+0x2],dx
  426f19:	add    rsp,0xa8
  426f20:	pop    rbx
  426f21:	pop    rsi
  426f22:	pop    rdi
  426f23:	pop    rbp
  426f24:	ret    
  426f25:	cmp    r8d,0xbc
  426f2c:	je     0x427020
  426f32:	cmp    r8d,0x100
  426f39:	je     0x427050
  426f3f:	cmp    r8d,0xbb
  426f46:	jne    0x426fc4
  426f48:	mov    eax,DWORD PTR [rdx]
  426f4a:	movabs rdx,0x141dd76000
  426f54:	movabs rcx,0xaaaaaaaaaaaaaaab
  426f5e:	add    eax,0xa96c9
  426f63:	cdqe   
  426f65:	imul   rax,rdx
  426f69:	movsxd rdx,DWORD PTR [r10+0x4]
  426f6d:	imul   rdx,rdx,0x2710
  426f74:	mov    r8,rax
  426f77:	mov    rax,rdx
  426f7a:	mul    rcx
  426f7d:	mov    eax,0x8
  426f82:	shr    rdx,1
  426f85:	add    rdx,r8
  426f88:	mov    QWORD PTR [rsi],rdx
  426f8b:	add    rsp,0xa8
  426f92:	pop    rbx
  426f93:	pop    rsi
  426f94:	pop    rdi
  426f95:	pop    rbp
  426f96:	ret    
  426f97:	nop    WORD PTR [rax+rax*1+0x0]
  426fa0:	cmp    r8d,0x2b
  426fa4:	jg     0x426fd5
  426fa6:	cmp    r8d,0x28
  426faa:	jge    0x4270b0
  426fb0:	cmp    r8d,0x23
  426fb4:	je     0x427050
  426fba:	cmp    r8d,0x27
  426fbe:	je     0x427050
  426fc4:	mov    eax,0xfffffffe
  426fc9:	add    rsp,0xa8
  426fd0:	pop    rbx
  426fd1:	pop    rsi
  426fd2:	pop    rdi
  426fd3:	pop    rbp
  426fd4:	ret    
  426fd5:	cmp    r8d,0x2f
  426fd9:	je     0x427050
  426fdb:	cmp    r8d,0x31
  426fdf:	jne    0x426fc4
  426fe1:	mov    eax,DWORD PTR [rdx]
  426fe3:	mov    DWORD PTR [rsi],eax
  426fe5:	mov    eax,0x4
  426fea:	add    rsp,0xa8
  426ff1:	pop    rbx
  426ff2:	pop    rsi
  426ff3:	pop    rdi
  426ff4:	pop    rbp
  426ff5:	ret    
  426ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427000:	mov    rax,QWORD PTR [rdx]
  427003:	mov    QWORD PTR [rsi],rax
  427006:	mov    eax,0x8
  42700b:	add    rsp,0xa8
  427012:	pop    rbx
  427013:	pop    rsi
  427014:	pop    rdi
  427015:	pop    rbp
  427016:	ret    
  427017:	nop    WORD PTR [rax+rax*1+0x0]
  427020:	movsxd rdx,DWORD PTR [rdx+0x4]
  427024:	imul   rax,rdx,0x2710
  42702b:	movabs rdx,0xaaaaaaaaaaaaaaab
  427035:	mul    rdx
  427038:	mov    eax,0x8
  42703d:	shr    rdx,1
  427040:	mov    QWORD PTR [rsi],rdx
  427043:	add    rsp,0xa8
  42704a:	pop    rbx
  42704b:	pop    rsi
  42704c:	pop    rdi
  42704d:	pop    rbp
  42704e:	ret    
  42704f:	nop
  427050:	lea    rbp,[rsp+0x30]
  427055:	mov    rdx,r10
  427058:	mov    ecx,0x3d
  42705d:	mov    r8,rbp
  427060:	call   0x4260c0
  427065:	mov    rax,QWORD PTR [rdi]
  427068:	lea    rdi,[rsp+0x60]
  42706d:	mov    r9,rbp
  427070:	mov    edx,0x40
  427075:	mov    rcx,rdi
  427078:	mov    r8,QWORD PTR [rax+0x10]
  42707c:	mov    DWORD PTR [rsp+0x20],0x3
  427084:	call   0x425d90
  427089:	lea    r9,[rsi+0x8]
  42708d:	mov    r8,rsi
  427090:	mov    rdx,rdi
  427093:	mov    ecx,ebx
  427095:	call   0x425680
  42709a:	add    rsp,0xa8
  4270a1:	pop    rbx
  4270a2:	pop    rsi
  4270a3:	pop    rdi
  4270a4:	pop    rbp
  4270a5:	ret    
  4270a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4270b0:	and    r9d,0x7
  4270b4:	cmp    r8d,0x2b
  4270b8:	mov    QWORD PTR [rsi+0x8],0x0
  4270c0:	mov    QWORD PTR [rsi],0x0
  4270c7:	mov    BYTE PTR [rsi+0xe],r9b
  4270cb:	movzx  ecx,BYTE PTR [rsi+0xf]
  4270cf:	je     0x427140
  4270d1:	cmp    r8d,0x28
  4270d5:	je     0x427105
  4270d7:	or     ecx,0x20
  4270da:	mov    BYTE PTR [rsi+0xe],0x3
  4270de:	mov    BYTE PTR [rsi+0xf],cl
  4270e1:	movsxd rdx,DWORD PTR [rdx+0x4]
  4270e5:	imul   rax,rdx,0x186a0
  4270ec:	movabs rdx,0xaaaaaaaaaaaaaaab
  4270f6:	mul    rdx
  4270f9:	shr    rdx,1
  4270fc:	cmp    r8d,0x29
  427100:	mov    QWORD PTR [rsi],rdx
  427103:	je     0x427111
  427105:	or     ecx,0x40
  427108:	mov    BYTE PTR [rsi+0xf],cl
  42710b:	mov    eax,DWORD PTR [r10]
  42710e:	mov    DWORD PTR [rsi+0x8],eax
  427111:	mov    eax,0x10
  427116:	add    rsp,0xa8
  42711d:	pop    rbx
  42711e:	pop    rsi
  42711f:	pop    rdi
  427120:	pop    rbp
  427121:	ret    
  427122:	mov    eax,DWORD PTR [rdx+0x4]
  427125:	mov    DWORD PTR [rsi],eax
  427127:	mov    eax,0x4
  42712c:	add    rsp,0xa8
  427133:	pop    rbx
  427134:	pop    rsi
  427135:	pop    rdi
  427136:	pop    rbp
  427137:	ret    
  427138:	nop    DWORD PTR [rax+rax*1+0x0]
  427140:	or     ecx,0xffffffa0
  427143:	mov    BYTE PTR [rsi+0xe],0x3
  427147:	mov    BYTE PTR [rsi+0xf],cl
  42714a:	movsxd rdx,DWORD PTR [rdx+0x4]
  42714e:	imul   rax,rdx,0x186a0
  427155:	movabs rdx,0xaaaaaaaaaaaaaaab
  42715f:	mul    rdx
  427162:	shr    rdx,1
  427165:	mov    QWORD PTR [rsi],rdx
  427168:	jmp    0x427105
  42716a:	mov    eax,0xfffffffb
  42716f:	jmp    0x426fea
  427174:	xchg   ax,ax
  427176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427180:	push   r15
  427182:	push   r14
  427184:	push   r13
  427186:	push   r12
  427188:	push   rbp
  427189:	push   rdi
  42718a:	push   rsi
  42718b:	push   rbx
  42718c:	sub    rsp,0x188
  427193:	mov    ebx,DWORD PTR [rsp+0x1f0]
  42719a:	mov    rbp,QWORD PTR [rsp+0x1f8]
  4271a2:	test   r9d,r9d
  4271a5:	mov    rsi,rcx
  4271a8:	mov    edi,edx
  4271aa:	mov    r12,r8
  4271ad:	js     0x4272b0
  4271b3:	cmp    edi,0x62
  4271b6:	je     0x427230
  4271b8:	cmp    ebx,0xa5
  4271be:	je     0x427210
  4271c0:	jg     0x4271f2
  4271c2:	cmp    ebx,0x25
  4271c5:	je     0x427210
  4271c7:	cmp    ebx,0x2d
  4271ca:	je     0x427210
  4271cc:	cmp    ebx,0x22
  4271cf:	je     0x427210
  4271d1:	lea    r10d,[rdi-0x22]
  4271d5:	cmp    r10d,0xdf
  4271dc:	ja     0x4279a0
  4271e2:	lea    rdx,[rip+0x13753]        # 0x43a93c
  4271e9:	movsxd rax,DWORD PTR [rdx+r10*4]
  4271ed:	add    rdx,rax
  4271f0:	jmp    rdx
  4271f2:	cmp    ebx,0xe1
  4271f8:	je     0x427210
  4271fa:	cmp    ebx,0x101
  427200:	je     0x427210
  427202:	cmp    ebx,0xad
  427208:	jne    0x4271d1
  42720a:	nop    WORD PTR [rax+rax*1+0x0]
  427210:	sub    edi,0x22
  427213:	cmp    edi,0xdf
  427219:	ja     0x4279a0
  42721f:	lea    rax,[rip+0x13a96]        # 0x43acbc
  427226:	movsxd rdx,DWORD PTR [rax+rdi*4]
  42722a:	add    rax,rdx
  42722d:	jmp    rax
  42722f:	nop
  427230:	mov    edi,DWORD PTR [r12+0x10]
  427235:	mov    r9d,DWORD PTR [r12+0xc]
  42723a:	mov    r12,QWORD PTR [r12]
  42723e:	jmp    0x4271b8
  427243:	mov    esi,0x4
  427248:	cmp    ebx,0x101
  42724e:	je     0x4272e0
  427254:	mov    rcx,rsi
  427257:	call   0x42d6b8
  42725c:	test   rax,rax
  42725f:	mov    QWORD PTR [rbp+0x0],rax
  427263:	je     0x4291c0
  427269:	mov    r8,rsi
  42726c:	mov    rdx,r12
  42726f:	mov    rcx,rax
  427272:	call   0x42d6a8
  427277:	nop    WORD PTR [rax+rax*1+0x0]
  427280:	mov    eax,esi
  427282:	add    rsp,0x188
  427289:	pop    rbx
  42728a:	pop    rsi
  42728b:	pop    rdi
  42728c:	pop    rbp
  42728d:	pop    r12
  42728f:	pop    r13
  427291:	pop    r14
  427293:	pop    r15
  427295:	ret    
  427296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4272a0:	mov    esi,0x8
  4272a5:	jmp    0x427248
  4272a7:	nop    WORD PTR [rax+rax*1+0x0]
  4272b0:	lea    rdx,[rip+0x13122]        # 0x43a3d9
  4272b7:	lea    rcx,[rip+0x133f2]        # 0x43a6b0
  4272be:	mov    r8d,0x75e
  4272c4:	mov    DWORD PTR [rsp+0x78],r9d
  4272c9:	call   0x42d350
  4272ce:	mov    r9d,DWORD PTR [rsp+0x78]
  4272d3:	jmp    0x4271b3
  4272d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4272e0:	mov    r8d,DWORD PTR [rbp+0x8]
  4272e4:	mov    rcx,QWORD PTR [rbp+0x0]
  4272e8:	mov    rdx,r12
  4272eb:	cmp    rsi,r8
  4272ee:	cmovbe r8,rsi
  4272f2:	call   0x42d6a8
  4272f7:	jmp    0x427280
  4272f9:	nop    DWORD PTR [rax+0x0]
  427300:	cmp    ebx,0xbc
  427306:	jne    0x428680
  42730c:	mov    rax,QWORD PTR [r12]
  427310:	mov    edx,0x1
  427315:	mov    esi,0x8
  42731a:	mov    QWORD PTR [rbp+0x0],rax
  42731e:	xchg   ax,ax
  427320:	cmp    ebx,0x3c
  427323:	sete   al
  427326:	and    eax,edx
  427328:	test   al,al
  42732a:	je     0x427280
  427330:	rol    QWORD PTR [rbp+0x0],0x20
  427335:	mov    eax,esi
  427337:	jmp    0x427282
  42733c:	nop    DWORD PTR [rax+0x0]
  427340:	cmp    ebx,0x3c
  427343:	jle    0x4285a0
  427349:	cmp    ebx,0x7a
  42734c:	je     0x42886a
  427352:	jle    0x428853
  427358:	cmp    ebx,0xa7
  42735e:	je     0x4287e1
  427364:	jle    0x429b8a
  42736a:	cmp    ebx,0xaf
  427370:	je     0x4287e1
  427376:	cmp    ebx,0x100
  42737c:	jne    0x4285ca
  427382:	mov    eax,DWORD PTR [rbp+0x8]
  427385:	lea    esi,[r9+r9*1]
  427389:	mov    r9,QWORD PTR [rbp+0x0]
  42738d:	cmp    esi,eax
  42738f:	cmovbe eax,esi
  427392:	cmp    eax,0x1
  427395:	jle    0x429e55
  42739b:	lea    r10d,[rax-0x2]
  42739f:	lea    r8,[rip+0x1415a]        # 0x43b500
  4273a6:	xor    eax,eax
  4273a8:	mov    r11d,r10d
  4273ab:	shr    r11d,1
  4273ae:	mov    ecx,r11d
  4273b1:	add    rcx,0x1
  4273b5:	movzx  edx,BYTE PTR [r12+rax*1]
  4273ba:	shr    dl,0x4
  4273bd:	and    edx,0xf
  4273c0:	movzx  edx,BYTE PTR [r8+rdx*1]
  4273c5:	mov    BYTE PTR [r9+rax*2],dl
  4273c9:	movzx  edx,BYTE PTR [r12+rax*1]
  4273ce:	and    edx,0xf
  4273d1:	movzx  edx,BYTE PTR [r8+rdx*1]
  4273d6:	mov    BYTE PTR [r9+rax*2+0x1],dl
  4273db:	add    rax,0x1
  4273df:	cmp    rax,rcx
  4273e2:	jne    0x4273b5
  4273e4:	lea    edx,[r11+0x1]
  4273e8:	neg    r11d
  4273eb:	lea    r9,[r9+rax*2]
  4273ef:	lea    eax,[r10+r11*2]
  4273f3:	test   eax,eax
  4273f5:	je     0x427280
  4273fb:	movsxd rdx,edx
  4273fe:	movzx  eax,BYTE PTR [r12+rdx*1]
  427403:	lea    rdx,[rip+0x140f6]        # 0x43b500
  42740a:	shr    al,0x4
  42740d:	and    eax,0xf
  427410:	movzx  eax,BYTE PTR [rdx+rax*1]
  427414:	mov    BYTE PTR [r9],al
  427417:	jmp    0x427280
  42741c:	nop    DWORD PTR [rax+0x0]
  427420:	cmp    ebx,0x2f
  427423:	je     0x428750
  427429:	jg     0x428720
  42742f:	cmp    ebx,0x24
  427432:	jne    0x428742
  427438:	mov    rax,QWORD PTR [r12]
  42743c:	mov    esi,0x10
  427441:	mov    QWORD PTR [rbp+0x0],rax
  427445:	mov    rax,QWORD PTR [r12+0x8]
  42744a:	mov    QWORD PTR [rbp+0x8],rax
  42744e:	jmp    0x427280
  427453:	mov    QWORD PTR [rsp+0x20],rbp
  427458:	mov    r9d,ebx
  42745b:	mov    r8,r12
  42745e:	mov    edx,edi
  427460:	mov    rcx,rsi
  427463:	call   0x426bd0
  427468:	nop    DWORD PTR [rax+rax*1+0x0]
  427470:	mov    esi,eax
  427472:	test   esi,esi
  427474:	setg   dl
  427477:	jmp    0x427320
  42747c:	nop    DWORD PTR [rax+0x0]
  427480:	movzx  ecx,BYTE PTR [r12]
  427485:	mov    r8,rbp
  427488:	mov    edx,ebx
  42748a:	call   0x425710
  42748f:	jmp    0x427470
  427491:	cmp    ebx,0x31
  427494:	mov    eax,DWORD PTR [r12]
  427498:	jne    0x428700
  42749e:	mov    DWORD PTR [rbp+0x0],eax
  4274a1:	mov    edx,0x1
  4274a6:	mov    esi,0x4
  4274ab:	jmp    0x427320
  4274b0:	lea    eax,[rbx-0x23]
  4274b3:	cmp    eax,0xdd
  4274b8:	ja     0x4280ee
  4274be:	lea    rdx,[rip+0x13b77]        # 0x43b03c
  4274c5:	movsxd rax,DWORD PTR [rdx+rax*4]
  4274c9:	add    rdx,rax
  4274cc:	jmp    rdx
  4274ce:	xchg   ax,ax
  4274d0:	xor    ecx,ecx
  4274d2:	cmp    BYTE PTR [r12],0x0
  4274d7:	mov    r8,rbp
  4274da:	mov    edx,ebx
  4274dc:	setne  cl
  4274df:	call   0x425710
  4274e4:	jmp    0x427470
  4274e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4274f0:	cmp    ebx,0x40
  4274f3:	movsd  xmm0,QWORD PTR [r12]
  4274f9:	je     0x428d69
  4274ff:	jg     0x428370
  427505:	cmp    ebx,0x32
  427508:	je     0x4294e7
  42750e:	jle    0x428d48
  427514:	cmp    ebx,0x3b
  427517:	je     0x429b3e
  42751d:	jg     0x428b93
  427523:	cmp    ebx,0x34
  427526:	je     0x429844
  42752c:	cmp    ebx,0x38
  42752f:	jne    0x42983a
  427535:	ucomisd xmm0,QWORD PTR [rip+0x1404b]        # 0x43b588
  42753d:	jb     0x42a55b
  427543:	movsd  xmm1,QWORD PTR [rip+0x14045]        # 0x43b590
  42754b:	ucomisd xmm1,xmm0
  42754f:	jb     0x42ab0d
  427555:	cvttsd2si eax,xmm0
  427559:	mov    esi,0x4
  42755e:	mov    DWORD PTR [rbp+0x0],eax
  427561:	jmp    0x427280
  427566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427570:	movzx  ecx,WORD PTR [r12]
  427575:	mov    r8,rbp
  427578:	mov    edx,ebx
  42757a:	call   0x425710
  42757f:	jmp    0x427470
  427584:	cmp    ebx,0x3a
  427587:	jne    0x4285d4
  42758d:	mov    eax,DWORD PTR [r12]
  427591:	mov    edx,0x1
  427596:	mov    esi,0x4
  42759b:	mov    DWORD PTR [rbp+0x0],eax
  42759e:	jmp    0x427320
  4275a3:	cmp    ebx,0x40
  4275a6:	movss  xmm0,DWORD PTR [r12]
  4275ac:	je     0x428e0e
  4275b2:	jg     0x428490
  4275b8:	cmp    ebx,0x32
  4275bb:	je     0x42937c
  4275c1:	jle    0x428ded
  4275c7:	cmp    ebx,0x3b
  4275ca:	je     0x4299c4
  4275d0:	jg     0x428c5c
  4275d6:	cmp    ebx,0x34
  4275d9:	je     0x429994
  4275df:	cmp    ebx,0x38
  4275e2:	jne    0x42998a
  4275e8:	ucomiss xmm0,DWORD PTR [rip+0x13f45]        # 0x43b534
  4275ef:	jb     0x42a551
  4275f5:	movss  xmm1,DWORD PTR [rip+0x13f3b]        # 0x43b538
  4275fd:	ucomiss xmm1,xmm0
  427600:	jb     0x42a6a2
  427606:	cvttss2si eax,xmm0
  42760a:	mov    esi,0x4
  42760f:	mov    DWORD PTR [rbp+0x0],eax
  427612:	jmp    0x427280
  427617:	nop    WORD PTR [rax+rax*1+0x0]
  427620:	movsx  ecx,WORD PTR [r12]
  427625:	mov    r8,rbp
  427628:	mov    edx,ebx
  42762a:	call   0x425710
  42762f:	jmp    0x427470
  427634:	mov    ecx,DWORD PTR [r12]
  427638:	mov    r8,rbp
  42763b:	mov    edx,ebx
  42763d:	call   0x425710
  427642:	jmp    0x427470
  427647:	nop    WORD PTR [rax+rax*1+0x0]
  427650:	mov    rax,QWORD PTR [rip+0x147d9]        # 0x43be30
  427657:	mov    eax,DWORD PTR [rax]
  427659:	test   eax,eax
  42765b:	jne    0x428d2b
  427661:	movsxd r8,DWORD PTR [r12]
  427665:	mov    eax,DWORD PTR [r12+0x4]
  42766a:	shl    r8,0x20
  42766e:	or     r8,rax
  427671:	cmp    ebx,0x40
  427674:	je     0x428db3
  42767a:	jg     0x428300
  427680:	cmp    ebx,0x32
  427683:	je     0x4299fb
  427689:	jle    0x428d92
  42768f:	cmp    ebx,0x3b
  427692:	je     0x429354
  427698:	jg     0x428bf8
  42769e:	cmp    ebx,0x34
  4276a1:	je     0x429b55
  4276a7:	cmp    ebx,0x38
  4276aa:	jne    0x42989b
  4276b0:	mov    rax,r8
  4276b3:	movabs rdx,0x346dc5d63886594b
  4276bd:	sar    r8,0x3f
  4276c1:	imul   rdx
  4276c4:	mov    ecx,0xffffffff
  4276c9:	mov    rax,rdx
  4276cc:	mov    edx,0x80000000
  4276d1:	sar    rax,0xb
  4276d5:	sub    rax,r8
  4276d8:	add    rdx,rax
  4276db:	cmp    rdx,rcx
  4276de:	ja     0x42a8e5
  4276e4:	mov    DWORD PTR [rbp+0x0],eax
  4276e7:	mov    esi,0x4
  4276ec:	jmp    0x427280
  4276f1:	mov    QWORD PTR [rsp+0x20],rbp
  4276f6:	mov    r9d,0x3
  4276fc:	mov    r8d,ebx
  4276ff:	mov    rdx,r12
  427702:	mov    rcx,rsi
  427705:	call   0x426e90
  42770a:	jmp    0x427470
  42770f:	nop
  427710:	cmp    ebx,0x33
  427713:	mov    eax,DWORD PTR [r12]
  427717:	je     0x42749e
  42771d:	mov    DWORD PTR [rsp+0x100],0x0
  427728:	mov    DWORD PTR [rsp+0x104],eax
  42772f:	lea    rdx,[rsp+0x100]
  427737:	xor    r9d,r9d
  42773a:	mov    rcx,rsi
  42773d:	mov    QWORD PTR [rsp+0x20],rbp
  427742:	mov    r8d,ebx
  427745:	call   0x426e90
  42774a:	test   eax,eax
  42774c:	mov    esi,eax
  42774e:	setg   dl
  427751:	jmp    0x427320
  427756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427760:	cmp    ebx,0x40
  427763:	je     0x428e64
  427769:	jg     0x4283d2
  42776f:	cmp    ebx,0x32
  427772:	je     0x428cee
  427778:	jle    0x428e43
  42777e:	cmp    ebx,0x3b
  427781:	je     0x4297bc
  427787:	jg     0x428bb4
  42778d:	cmp    ebx,0x34
  427790:	je     0x429a12
  427796:	cmp    ebx,0x38
  427799:	jne    0x4297b2
  42779f:	mov    rax,QWORD PTR [r12]
  4277a3:	xor    r8d,r8d
  4277a6:	mov    edx,0xa
  4277ab:	mov    rcx,rbp
  4277ae:	mov    QWORD PTR [rbp+0x0],rax
  4277b2:	mov    rax,QWORD PTR [r12+0x8]
  4277b7:	mov    QWORD PTR [rbp+0x8],rax
  4277bb:	mov    rax,QWORD PTR [r12+0x10]
  4277c0:	mov    QWORD PTR [rbp+0x10],rax
  4277c4:	mov    rax,QWORD PTR [r12+0x18]
  4277c9:	mov    QWORD PTR [rbp+0x18],rax
  4277cd:	movzx  eax,WORD PTR [r12+0x20]
  4277d3:	mov    WORD PTR [rbp+0x20],ax
  4277d7:	movzx  eax,BYTE PTR [r12+0x22]
  4277dd:	mov    BYTE PTR [rbp+0x22],al
  4277e0:	call   0x414d70
  4277e5:	test   eax,eax
  4277e7:	mov    esi,eax
  4277e9:	js     0x427280
  4277ef:	cmp    BYTE PTR [rbp+0x3],0x0
  4277f3:	jne    0x428ed0
  4277f9:	movzx  edx,BYTE PTR [rbp+0x4]
  4277fd:	movzx  r8d,BYTE PTR [rbp+0x2]
  427802:	xor    eax,eax
  427804:	mov    ecx,edx
  427806:	movzx  edx,BYTE PTR [rbp+0x5]
  42780a:	test   r8b,r8b
  42780d:	setne  al
  427810:	shl    ecx,0x8
  427813:	add    edx,ecx
  427815:	mov    ecx,edx
  427817:	movzx  edx,BYTE PTR [rbp+0x6]
  42781b:	shl    ecx,0x8
  42781e:	add    edx,ecx
  427820:	movzx  ecx,BYTE PTR [rbp+0x7]
  427824:	shl    edx,0x8
  427827:	add    edx,ecx
  427829:	mov    ecx,eax
  42782b:	neg    ecx
  42782d:	xor    edx,ecx
  42782f:	add    eax,edx
  427831:	cdq    
  427832:	xor    r8d,edx
  427835:	and    r8d,0x1
  427839:	jne    0x428ed0
  42783f:	mov    DWORD PTR [rbp+0x0],eax
  427842:	mov    esi,0x4
  427847:	jmp    0x427280
  42784c:	nop    DWORD PTR [rax+0x0]
  427850:	cmp    ebx,0x40
  427853:	movsxd r8,DWORD PTR [r12]
  427857:	je     0x428efb
  42785d:	jg     0x4284f0
  427863:	cmp    ebx,0x32
  427866:	je     0x429aae
  42786c:	jle    0x428eda
  427872:	cmp    ebx,0x3b
  427875:	je     0x4299d3
  42787b:	jg     0x428c2a
  427881:	cmp    ebx,0x34
  427884:	je     0x429b08
  42788a:	cmp    ebx,0x38
  42788d:	jne    0x429afe
  427893:	mov    eax,r8d
  427896:	mov    edx,0x68db8bad
  42789b:	sar    r8d,0x1f
  42789f:	imul   edx
  4278a1:	mov    esi,0x4
  4278a6:	sar    edx,0xc
  4278a9:	sub    edx,r8d
  4278ac:	mov    DWORD PTR [rbp+0x0],edx
  4278af:	jmp    0x427280
  4278b4:	mov    eax,DWORD PTR [r12]
  4278b8:	lea    rcx,[rsp+0x100]
  4278c0:	mov    r8,rbp
  4278c3:	mov    edx,ebx
  4278c5:	mov    QWORD PTR [rsp+0x100],rax
  4278cd:	call   0x425990
  4278d2:	jmp    0x427470
  4278d7:	nop    WORD PTR [rax+rax*1+0x0]
  4278e0:	mov    r8,rbp
  4278e3:	mov    edx,ebx
  4278e5:	mov    rcx,r12
  4278e8:	call   0x425990
  4278ed:	jmp    0x427470
  4278f2:	mov    rcx,QWORD PTR [r12]
  4278f6:	mov    eax,0x80000000
  4278fb:	mov    edx,0xffffffff
  427900:	add    rax,rcx
  427903:	cmp    rax,rdx
  427906:	jbe    0x428913
  42790c:	cmp    ebx,0x41
  42790f:	jg     0x428550
  427915:	cmp    ebx,0x40
  427918:	jge    0x429144
  42791e:	cmp    ebx,0x32
  427921:	je     0x428d17
  427927:	jle    0x429133
  42792d:	cmp    ebx,0x3b
  427930:	je     0x429192
  427936:	jle    0x429d20
  42793c:	cmp    ebx,0x3c
  42793f:	je     0x42915d
  427945:	cmp    ebx,0x3e
  427948:	jne    0x429153
  42794e:	pxor   xmm0,xmm0
  427952:	mov    esi,0x8
  427957:	cvtsi2sd xmm0,rcx
  42795c:	movsd  QWORD PTR [rbp+0x0],xmm0
  427961:	jmp    0x427280
  427966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427970:	cmp    ebx,0xbb
  427976:	mov    rcx,QWORD PTR [r12]
  42797a:	jne    0x428600
  427980:	mov    QWORD PTR [rbp+0x0],rcx
  427984:	mov    edx,0x1
  427989:	mov    esi,0x8
  42798e:	jmp    0x427320
  427993:	mov    esi,0x10
  427998:	jmp    0x427248
  42799d:	nop    DWORD PTR [rax]
  4279a0:	mov    eax,0xfffffffe
  4279a5:	jmp    0x427282
  4279aa:	nop    WORD PTR [rax+rax*1+0x0]
  4279b0:	mov    esi,0x1
  4279b5:	jmp    0x427248
  4279ba:	nop    WORD PTR [rax+rax*1+0x0]
  4279c0:	mov    esi,0x2
  4279c5:	jmp    0x427248
  4279ca:	nop    WORD PTR [rax+rax*1+0x0]
  4279d0:	mov    esi,r9d
  4279d3:	jmp    0x427248
  4279d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4279e0:	mov    esi,0x23
  4279e5:	jmp    0x427248
  4279ea:	nop    WORD PTR [rax+rax*1+0x0]
  4279f0:	cmp    r9d,0x1
  4279f4:	jbe    0x428cde
  4279fa:	cmp    BYTE PTR [r12],0x30
  4279ff:	je     0x428cc5
  427a05:	lea    eax,[r9-0x1]
  427a09:	test   BYTE PTR [r12+rax*1],0xdf
  427a0e:	mov    rsi,rax
  427a11:	je     0x427a2c
  427a13:	jmp    0x429f65
  427a18:	nop    DWORD PTR [rax+rax*1+0x0]
  427a20:	lea    edx,[rsi-0x1]
  427a23:	test   BYTE PTR [r12+rdx*1],0xdf
  427a28:	jne    0x427a30
  427a2a:	mov    esi,edx
  427a2c:	test   esi,esi
  427a2e:	jne    0x427a20
  427a30:	cmp    ebx,0x101
  427a36:	mov    rcx,QWORD PTR [rbp+0x0]
  427a3a:	je     0x428b8b
  427a40:	lea    ecx,[rsi+0x2]
  427a43:	shr    ecx,1
  427a45:	call   0x42d6b8
  427a4a:	test   rax,rax
  427a4d:	mov    rcx,rax
  427a50:	mov    QWORD PTR [rbp+0x0],rax
  427a54:	je     0x4291c0
  427a5a:	mov    edx,0xffffffff
  427a5f:	mov    r9d,esi
  427a62:	mov    r8,r12
  427a65:	call   0x425c10
  427a6a:	jmp    0x427282
  427a6f:	mov    eax,DWORD PTR [rbp+0x8]
  427a72:	mov    rcx,QWORD PTR [rbp+0x0]
  427a76:	mov    rdx,r12
  427a79:	mov    DWORD PTR [rsp+0x78],r9d
  427a7e:	cmp    r9d,eax
  427a81:	cmovbe eax,r9d
  427a85:	mov    r8d,eax
  427a88:	call   0x42d6a8
  427a8d:	mov    r9d,DWORD PTR [rsp+0x78]
  427a92:	mov    esi,r9d
  427a95:	jmp    0x427280
  427a9a:	mov    esi,r9d
  427a9d:	lea    r8,[rsp+0x100]
  427aa5:	mov    rcx,r12
  427aa8:	lea    rdx,[r12+rsi*1]
  427aac:	call   0x424ed0
  427ab1:	test   eax,eax
  427ab3:	mov    esi,eax
  427ab5:	js     0x427280
  427abb:	mov    rax,QWORD PTR [rsp+0x100]
  427ac3:	mov    esi,0x8
  427ac8:	mov    QWORD PTR [rbp+0x0],rax
  427acc:	jmp    0x427280
  427ad1:	mov    esi,r9d
  427ad4:	mov    r8,rbp
  427ad7:	mov    rcx,r12
  427ada:	lea    rdx,[r12+rsi*1]
  427ade:	call   0x424fe0
  427ae3:	mov    esi,eax
  427ae5:	jmp    0x427280
  427aea:	mov    esi,r9d
  427aed:	lea    r8,[rsp+0x100]
  427af5:	lea    r9,[rsp+0xe0]
  427afd:	lea    rdx,[r12+rsi*1]
  427b01:	mov    rcx,r12
  427b04:	call   0x424e30
  427b09:	test   eax,eax
  427b0b:	js     0x429ee5
  427b11:	cmp    BYTE PTR [rsp+0xe0],0x0
  427b19:	jne    0x429ecc
  427b1f:	mov    rax,QWORD PTR [rsp+0x100]
  427b27:	mov    esi,0x8
  427b2c:	mov    QWORD PTR [rbp+0x0],rax
  427b30:	jmp    0x427280
  427b35:	mov    esi,r9d
  427b38:	lea    r8,[rsp+0x100]
  427b40:	mov    rcx,r12
  427b43:	lea    rdx,[r12+rsi*1]
  427b47:	call   0x424ed0
  427b4c:	test   eax,eax
  427b4e:	mov    esi,eax
  427b50:	js     0x427280
  427b56:	mov    rax,QWORD PTR [rsp+0x100]
  427b5e:	mov    edx,0xffffffff
  427b63:	cmp    rax,rdx
  427b66:	ja     0x42a131
  427b6c:	mov    DWORD PTR [rbp+0x0],eax
  427b6f:	mov    esi,0x4
  427b74:	jmp    0x427280
  427b79:	mov    esi,r9d
  427b7c:	lea    r8,[rsp+0x100]
  427b84:	mov    rcx,r12
  427b87:	lea    rdx,[r12+rsi*1]
  427b8b:	call   0x424f40
  427b90:	test   eax,eax
  427b92:	mov    esi,eax
  427b94:	js     0x427280
  427b9a:	mov    eax,DWORD PTR [rsp+0x100]
  427ba1:	mov    esi,0x4
  427ba6:	mov    DWORD PTR [rbp+0x0],eax
  427ba9:	jmp    0x427280
  427bae:	mov    esi,r9d
  427bb1:	lea    r8,[rsp+0x100]
  427bb9:	mov    rcx,r12
  427bbc:	lea    rdx,[r12+rsi*1]
  427bc0:	call   0x424f40
  427bc5:	test   eax,eax
  427bc7:	mov    esi,eax
  427bc9:	js     0x427280
  427bcf:	mov    eax,DWORD PTR [rsp+0x100]
  427bd6:	cmp    eax,0xffff
  427bdb:	ja     0x42a131
  427be1:	mov    WORD PTR [rbp+0x0],ax
  427be5:	mov    esi,0x2
  427bea:	jmp    0x427280
  427bef:	mov    rcx,r12
  427bf2:	mov    esi,0x8
  427bf7:	call   0x42d750
  427bfc:	movsd  QWORD PTR [rbp+0x0],xmm0
  427c01:	jmp    0x427280
  427c06:	mov    esi,r9d
  427c09:	lea    rax,[rsp+0xe0]
  427c11:	lea    r9,[rsp+0xd8]
  427c19:	lea    rdx,[r12+rsi*1]
  427c1d:	lea    r8,[rsp+0xc0]
  427c25:	mov    rcx,r12
  427c28:	mov    QWORD PTR [rsp+0x20],rax
  427c2d:	call   0x424c80
  427c32:	test   rax,rax
  427c35:	je     0x429db6
  427c3b:	mov    rsi,QWORD PTR [rsp+0xd8]
  427c43:	cmp    rsi,0x12
  427c47:	ja     0x42a131
  427c4d:	xor    r11d,r11d
  427c50:	cmp    BYTE PTR [rsp+0xc0],0x0
  427c58:	je     0x427c65
  427c5a:	mov    BYTE PTR [rsp+0x100],0x2d
  427c62:	mov    r11b,0x1
  427c65:	test   rsi,rsi
  427c68:	je     0x42a514
  427c6e:	mov    rdx,rsi
  427c71:	mov    r8,rax
  427c74:	mov    ecx,r11d
  427c77:	nop    WORD PTR [rax+rax*1+0x0]
  427c80:	add    r8,0x1
  427c84:	movzx  r10d,BYTE PTR [r8-0x1]
  427c89:	sub    rdx,0x1
  427c8d:	mov    r9d,ecx
  427c90:	add    ecx,0x1
  427c93:	test   rdx,rdx
  427c96:	mov    QWORD PTR [rsp+0xd8],rdx
  427c9e:	mov    BYTE PTR [rsp+r9*1+0x100],r10b
  427ca6:	jne    0x427c80
  427ca8:	lea    r9,[rax+rsi*1+0x1]
  427cad:	add    r11d,esi
  427cb0:	mov    QWORD PTR [rsp+0xd8],0x0
  427cbc:	mov    r10,QWORD PTR [rsp+0xe0]
  427cc4:	mov    eax,r11d
  427cc7:	test   r10,r10
  427cca:	je     0x429d85
  427cd0:	movzx  edx,BYTE PTR [r9]
  427cd4:	lea    eax,[r11+0x1]
  427cd8:	mov    r11d,r11d
  427cdb:	mov    QWORD PTR [rsp+0xd8],0x1
  427ce7:	mov    BYTE PTR [rsp+r11*1+0x100],dl
  427cef:	mov    edx,0x1
  427cf4:	jmp    0x427d03
  427cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427d00:	mov    eax,r8d
  427d03:	cmp    rdx,r10
  427d06:	je     0x429d85
  427d0c:	movzx  ecx,BYTE PTR [r9+rdx*1]
  427d11:	add    rdx,0x1
  427d15:	lea    r8d,[rax+0x1]
  427d19:	cmp    rdx,0x4
  427d1d:	mov    QWORD PTR [rsp+0xd8],rdx
  427d25:	mov    BYTE PTR [rsp+rax*1+0x100],cl
  427d2c:	jne    0x427d00
  427d2e:	lea    rcx,[rsp+0x100]
  427d36:	mov    edx,r8d
  427d39:	lea    r8,[rsp+0xd0]
  427d41:	add    rdx,rcx
  427d44:	call   0x424ed0
  427d49:	test   eax,eax
  427d4b:	js     0x42a131
  427d51:	cmp    ebx,0x3c
  427d54:	je     0x429deb
  427d5a:	mov    rdx,QWORD PTR [rsp+0xd0]
  427d62:	mov    eax,0x80000000
  427d67:	mov    ecx,0xffffffff
  427d6c:	add    rax,rdx
  427d6f:	cmp    rax,rcx
  427d72:	ja     0x42a131
  427d78:	mov    DWORD PTR [rbp+0x0],edx
  427d7b:	mov    esi,0x4
  427d80:	jmp    0x427280
  427d85:	mov    rcx,r12
  427d88:	mov    esi,0x4
  427d8d:	call   0x42d750
  427d92:	pxor   xmm2,xmm2
  427d96:	cvtsd2ss xmm2,xmm0
  427d9a:	movss  DWORD PTR [rbp+0x0],xmm2
  427d9f:	jmp    0x427280
  427da4:	mov    edx,r9d
  427da7:	mov    rcx,r12
  427daa:	mov    QWORD PTR [rsp+0xe8],0x0
  427db6:	mov    QWORD PTR [rsp+0xe0],0x0
  427dc2:	mov    QWORD PTR [rsp+0xf0],0x0
  427dce:	mov    DWORD PTR [rsp+0xf8],0x0
  427dd9:	mov    DWORD PTR [rsp+0xe8],0x1
  427de4:	call   0x423ec0
  427de9:	test   rax,rax
  427dec:	mov    QWORD PTR [rsp+0x90],rax
  427df4:	je     0x42a929
  427dfa:	lea    rdi,[rsp+0xd8]
  427e02:	lea    rdx,[rip+0x128cc]        # 0x43a6d5
  427e09:	mov    rcx,rax
  427e0c:	mov    r8,rdi
  427e0f:	mov    QWORD PTR [rsp+0x70],rdi
  427e14:	call   0x42d410
  427e19:	test   rax,rax
  427e1c:	mov    rsi,rax
  427e1f:	je     0x42812c
  427e25:	lea    rdi,[rsp+0x100]
  427e2d:	lea    rax,[rsp+0xe0]
  427e35:	mov    r15,QWORD PTR [rip+0x13ff4]        # 0x43be30
  427e3c:	xor    ecx,ecx
  427e3e:	mov    DWORD PTR [rsp+0x1f0],ebx
  427e45:	mov    QWORD PTR [rsp+0x1f8],rbp
  427e4d:	mov    QWORD PTR [rsp+0x80],rdi
  427e55:	mov    rdi,QWORD PTR [rip+0x1ac58]        # 0x442ab4
  427e5c:	xor    r13d,r13d
  427e5f:	mov    DWORD PTR [rsp+0x78],0x0
  427e67:	xor    r12d,r12d
  427e6a:	mov    ebp,ecx
  427e6c:	mov    rbx,rax
  427e6f:	mov    QWORD PTR [rsp+0xa0],rdi
  427e77:	lea    rdi,[rsp+0xc0]
  427e7f:	mov    QWORD PTR [rsp+0xb0],rdi
  427e87:	lea    rdi,[rsp+0xd0]
  427e8f:	mov    QWORD PTR [rsp+0x88],rdi
  427e97:	mov    ecx,DWORD PTR [r15]
  427e9a:	test   ecx,ecx
  427e9c:	jne    0x429e35
  427ea2:	cmp    r12d,0x2
  427ea6:	je     0x429c64
  427eac:	cmp    r12d,0x3
  427eb0:	je     0x429c42
  427eb6:	cmp    r12d,0x1
  427eba:	mov    rcx,rsi
  427ebd:	je     0x429b98
  427ec3:	call   0x425510
  427ec8:	test   al,al
  427eca:	jne    0x429dc0
  427ed0:	movzx  r9d,BYTE PTR [rsi]
  427ed4:	test   r9b,r9b
  427ed7:	mov    r8d,r9d
  427eda:	je     0x427f0c
  427edc:	movzx  r10d,r9b
  427ee0:	mov    rdx,rsi
  427ee3:	lea    eax,[r10-0x30]
  427ee7:	cmp    eax,0x9
  427eea:	mov    DWORD PTR [rsp+0x7c],eax
  427eee:	jbe    0x427f01
  427ef0:	jmp    0x429f70
  427ef5:	sub    eax,0x30
  427ef8:	cmp    eax,0x9
  427efb:	ja     0x429f6d
  427f01:	add    rdx,0x1
  427f05:	movzx  eax,BYTE PTR [rdx]
  427f08:	test   al,al
  427f0a:	jne    0x427ef5
  427f0c:	cmp    DWORD PTR [r15],0x0
  427f10:	jne    0x42a5b5
  427f16:	xor    eax,eax
  427f18:	or     rcx,0xffffffffffffffff
  427f1c:	mov    rdi,rsi
  427f1f:	repnz scas al,BYTE PTR es:[rdi]
  427f21:	mov    rax,rcx
  427f24:	not    rax
  427f27:	lea    rcx,[rax-0x1]
  427f2b:	sub    rax,0x2
  427f2f:	cmp    rax,0x7
  427f33:	ja     0x4280f8
  427f39:	lea    rdx,[rip+0x13474]        # 0x43b3b4
  427f40:	movsxd rax,DWORD PTR [rdx+rax*4]
  427f44:	add    rdx,rax
  427f47:	jmp    rdx
  427f49:	cmp    r9d,0x22
  427f4d:	jbe    0x429db6
  427f53:	cmp    BYTE PTR [r12],0x7b
  427f58:	je     0x429ea1
  427f5e:	mov    ecx,0x1
  427f63:	xor    eax,eax
  427f65:	xor    r8d,r8d
  427f68:	jmp    0x427fb8
  427f6a:	nop    WORD PTR [rax+rax*1+0x0]
  427f70:	cmp    eax,0x12
  427f73:	je     0x4288b1
  427f79:	cmp    eax,0x17
  427f7c:	jne    0x427f87
  427f7e:	cmp    dl,0x2d
  427f81:	je     0x429876
  427f87:	lea    r11d,[rdx-0x30]
  427f8b:	shl    r8d,0x4
  427f8f:	cmp    r11b,0x9
  427f93:	ja     0x4288d7
  427f99:	lea    r8d,[r8+rdx*1-0x30]
  427f9e:	cmp    rax,0x12
  427fa2:	ja     0x4288f5
  427fa8:	cmp    ecx,0x23
  427fab:	je     0x429d57
  427fb1:	add    rax,0x1
  427fb5:	add    ecx,0x1
  427fb8:	cmp    eax,0xd
  427fbb:	mov    r10d,eax
  427fbe:	movsx  edx,BYTE PTR [r12+rax*1]
  427fc3:	je     0x4288c4
  427fc9:	ja     0x427f70
  427fcb:	cmp    eax,0x8
  427fce:	jne    0x427f87
  427fd0:	cmp    dl,0x2d
  427fd3:	jne    0x429db6
  427fd9:	mov    DWORD PTR [rbp+0x0],r8d
  427fdd:	xor    r8d,r8d
  427fe0:	jmp    0x427fb1
  427fe2:	lea    ecx,[r9+0x1]
  427fe6:	mov    DWORD PTR [rsp+0x78],r9d
  427feb:	call   0x42d6b8
  427ff0:	test   rax,rax
  427ff3:	mov    QWORD PTR [rbp+0x0],rax
  427ff7:	je     0x42a8d1
  427ffd:	mov    esi,DWORD PTR [rsp+0x78]
  428001:	mov    rdx,r12
  428004:	mov    rcx,rax
  428007:	mov    r8,rsi
  42800a:	call   0x42d6a8
  42800f:	mov    r9d,DWORD PTR [rsp+0x78]
  428014:	mov    BYTE PTR [rax+rsi*1],0x0
  428018:	mov    esi,r9d
  42801b:	jmp    0x427472
  428020:	mov    esi,r9d
  428023:	lea    r8,[rsp+0x100]
  42802b:	mov    rcx,r12
  42802e:	lea    rdx,[r12+rsi*1]
  428032:	call   0x424f40
  428037:	test   eax,eax
  428039:	mov    esi,eax
  42803b:	js     0x427280
  428041:	mov    r8d,DWORD PTR [rsp+0x100]
  428049:	mov    esi,0x1
  42804e:	test   r8d,r8d
  428051:	setne  BYTE PTR [rbp+0x0]
  428055:	cmp    ebx,0x3c
  428058:	sete   al
  42805b:	jmp    0x427328
  428060:	mov    esi,r9d
  428063:	lea    r8,[rsp+0x100]
  42806b:	mov    rcx,r12
  42806e:	lea    rdx,[r12+rsi*1]
  428072:	call   0x424f40
  428077:	test   eax,eax
  428079:	mov    esi,eax
  42807b:	js     0x427280
  428081:	mov    eax,DWORD PTR [rsp+0x100]
  428088:	lea    edx,[rax+0x8000]
  42808e:	cmp    edx,0xffff
  428094:	ja     0x42a131
  42809a:	mov    WORD PTR [rbp+0x0],ax
  42809e:	mov    esi,0x2
  4280a3:	jmp    0x427280
  4280a8:	mov    esi,r9d
  4280ab:	lea    r8,[rsp+0x100]
  4280b3:	mov    rcx,r12
  4280b6:	lea    rdx,[r12+rsi*1]
  4280ba:	call   0x424f40
  4280bf:	test   eax,eax
  4280c1:	mov    esi,eax
  4280c3:	js     0x427280
  4280c9:	mov    eax,DWORD PTR [rsp+0x100]
  4280d0:	cmp    eax,0xff
  4280d5:	ja     0x42a131
  4280db:	mov    BYTE PTR [rbp+0x0],al
  4280de:	cmp    ebx,0x3c
  4280e1:	mov    esi,0x1
  4280e6:	sete   al
  4280e9:	jmp    0x427328
  4280ee:	mov    esi,0xfffffffe
  4280f3:	jmp    0x427280
  4280f8:	mov    r12d,0x3
  4280fe:	mov    r8,QWORD PTR [rsp+0x70]
  428103:	lea    rdx,[rip+0x125cb]        # 0x43a6d5
  42810a:	xor    ecx,ecx
  42810c:	call   0x42d410
  428111:	test   rax,rax
  428114:	mov    rsi,rax
  428117:	jne    0x427e97
  42811d:	mov    ebx,DWORD PTR [rsp+0x1f0]
  428124:	mov    rbp,QWORD PTR [rsp+0x1f8]
  42812c:	mov    esi,DWORD PTR [rsp+0xe4]
  428133:	mov    r11d,0xc
  428139:	mov    r10d,DWORD PTR [rsp+0xe0]
  428141:	mov    r8d,0x4
  428147:	lea    eax,[rsi-0xd]
  42814a:	cdq    
  42814b:	idiv   r11d
  42814e:	lea    edx,[r10+rax*1+0x76c]
  428156:	mov    r9d,eax
  428159:	imul   eax,edx,0x5b5
  42815f:	cdq    
  428160:	idiv   r8d
  428163:	mov    edi,eax
  428165:	imul   eax,r9d,0xfffffff4
  428169:	lea    edx,[rsi+rax*1-0x1]
  42816d:	imul   eax,edx,0x16f
  428173:	cdq    
  428174:	idiv   r11d
  428177:	lea    ecx,[rdi+rax*1]
  42817a:	lea    eax,[r10+r9*1+0x7d0]
  428182:	mov    edi,0x64
  428187:	cdq    
  428188:	idiv   edi
  42818a:	lea    eax,[rax+rax*2]
  42818d:	cdq    
  42818e:	idiv   r8d
  428191:	sub    ecx,eax
  428193:	add    ecx,DWORD PTR [rsp+0xe8]
  42819a:	mov    esi,ecx
  42819c:	lea    r12d,[rcx-0xa96ac]
  4281a3:	mov    rcx,QWORD PTR [rsp+0x90]
  4281ab:	call   0x42d6f8
  4281b0:	cmp    ebx,0x31
  4281b3:	je     0x42a123
  4281b9:	imul   eax,DWORD PTR [rsp+0xec],0x3c
  4281c1:	add    eax,DWORD PTR [rsp+0xf0]
  4281c8:	cmp    ebx,0x3a
  4281cb:	je     0x42a501
  4281d1:	imul   eax,eax,0x3c
  4281d4:	add    eax,DWORD PTR [rsp+0xf4]
  4281db:	cmp    ebx,0x3d
  4281de:	je     0x42a5d2
  4281e4:	cmp    ebx,0x33
  4281e7:	je     0x42a613
  4281ed:	cmp    ebx,0xbc
  4281f3:	je     0x42a975
  4281f9:	cmp    ebx,0xbb
  4281ff:	je     0x42a933
  428205:	movzx  edx,BYTE PTR [rbp+0xf]
  428209:	or     BYTE PTR [rbp+0xe],0x7
  42820d:	mov    esi,0x10
  428212:	imul   rcx,rax,0x989680
  428219:	mov    WORD PTR [rbp+0xc],0x0
  42821f:	mov    DWORD PTR [rbp+0x8],r12d
  428223:	and    edx,0x7f
  428226:	or     edx,0x60
  428229:	mov    BYTE PTR [rbp+0xf],dl
  42822c:	mov    eax,DWORD PTR [rsp+0xf8]
  428233:	xor    edx,edx
  428235:	div    edi
  428237:	mov    eax,eax
  428239:	add    rcx,rax
  42823c:	cmp    ebx,0x3c
  42823f:	mov    QWORD PTR [rbp+0x0],rcx
  428243:	sete   al
  428246:	jmp    0x427328
  42824b:	mov    rcx,rsi
  42824e:	call   0x42d748
  428253:	mov    ecx,0x2710
  428258:	cdq    
  428259:	mov    r9d,eax
  42825c:	idiv   ecx
  42825e:	mov    r8d,0x64
  428264:	imul   edx,eax,0xffffd8f0
  42826a:	mov    ecx,eax
  42826c:	add    r9d,edx
  42826f:	mov    eax,r9d
  428272:	cdq    
  428273:	idiv   r8d
  428276:	imul   edx,eax,0xffffff9c
  428279:	lea    r8d,[rax-0x1]
  42827d:	add    r9d,edx
  428280:	cmp    r8d,0xb
  428284:	ja     0x4280f8
  42828a:	lea    eax,[r9-0x1]
  42828e:	mov    DWORD PTR [rsp+0xe4],r8d
  428296:	cmp    eax,0x1e
  428299:	ja     0x4280f8
  42829f:	mov    rdx,rbx
  4282a2:	mov    DWORD PTR [rsp+0xe8],r9d
  4282aa:	call   0x425630
  4282af:	cmp    eax,0x1
  4282b2:	sbb    r12d,r12d
  4282b5:	and    r12d,0x3
  4282b9:	jmp    0x4280fe
  4282be:	mov    rcx,rsi
  4282c1:	add    r13d,0x1
  4282c5:	mov    r12d,0x2
  4282cb:	call   0x42d748
  4282d0:	mov    rdx,rbx
  4282d3:	mov    ecx,eax
  4282d5:	call   0x425630
  4282da:	jmp    0x4280fe
  4282df:	add    ecx,0x1
  4282e2:	mov    rdi,QWORD PTR [rsp+0x80]
  4282ea:	mov    r12d,0x1
  4282f0:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4282f2:	jmp    0x4280fe
  4282f7:	nop    WORD PTR [rax+rax*1+0x0]
  428300:	cmp    ebx,0x6c
  428303:	je     0x42904c
  428309:	jg     0x428a28
  42830f:	cmp    ebx,0x43
  428312:	je     0x4295ad
  428318:	jg     0x42903a
  42831e:	cmp    ebx,0x41
  428321:	je     0x4294b2
  428327:	cmp    ebx,0x42
  42832a:	jne    0x42989b
  428330:	mov    rax,r8
  428333:	movabs rdx,0x346dc5d63886594b
  42833d:	sar    r8,0x3f
  428341:	imul   rdx
  428344:	mov    rax,rdx
  428347:	mov    edx,0xffffffff
  42834c:	sar    rax,0xb
  428350:	sub    rax,r8
  428353:	cmp    rax,rdx
  428356:	ja     0x42a9d3
  42835c:	mov    DWORD PTR [rbp+0x0],eax
  42835f:	mov    esi,0x4
  428364:	jmp    0x427280
  428369:	nop    DWORD PTR [rax+0x0]
  428370:	cmp    ebx,0x6c
  428373:	je     0x428f73
  428379:	jg     0x428abf
  42837f:	cmp    ebx,0x43
  428382:	je     0x4296b7
  428388:	jg     0x428f61
  42838e:	cmp    ebx,0x41
  428391:	je     0x429203
  428397:	cmp    ebx,0x42
  42839a:	jne    0x42983a
  4283a0:	ucomisd xmm0,QWORD PTR [rip+0x131b8]        # 0x43b560
  4283a8:	jb     0x42ab53
  4283ae:	movsd  xmm1,QWORD PTR [rip+0x131e2]        # 0x43b598
  4283b6:	ucomisd xmm1,xmm0
  4283ba:	jb     0x42ab3f
  4283c0:	cvttsd2si rax,xmm0
  4283c5:	mov    esi,0x4
  4283ca:	mov    DWORD PTR [rbp+0x0],eax
  4283cd:	jmp    0x427280
  4283d2:	cmp    ebx,0x6c
  4283d5:	je     0x428fec
  4283db:	jg     0x428922
  4283e1:	cmp    ebx,0x43
  4283e4:	je     0x4294f4
  4283ea:	jg     0x428fda
  4283f0:	cmp    ebx,0x41
  4283f3:	je     0x42926c
  4283f9:	cmp    ebx,0x42
  4283fc:	jne    0x4297b2
  428402:	mov    rax,QWORD PTR [r12]
  428406:	xor    r8d,r8d
  428409:	mov    edx,0xa
  42840e:	mov    rcx,rbp
  428411:	mov    QWORD PTR [rbp+0x0],rax
  428415:	mov    rax,QWORD PTR [r12+0x8]
  42841a:	mov    QWORD PTR [rbp+0x8],rax
  42841e:	mov    rax,QWORD PTR [r12+0x10]
  428423:	mov    QWORD PTR [rbp+0x10],rax
  428427:	mov    rax,QWORD PTR [r12+0x18]
  42842c:	mov    QWORD PTR [rbp+0x18],rax
  428430:	movzx  eax,WORD PTR [r12+0x20]
  428436:	mov    WORD PTR [rbp+0x20],ax
  42843a:	movzx  eax,BYTE PTR [r12+0x22]
  428440:	mov    BYTE PTR [rbp+0x22],al
  428443:	call   0x414d70
  428448:	test   eax,eax
  42844a:	mov    esi,eax
  42844c:	js     0x427280
  428452:	cmp    WORD PTR [rbp+0x2],0x0
  428457:	jne    0x428ed0
  42845d:	movzx  eax,BYTE PTR [rbp+0x4]
  428461:	mov    esi,0x4
  428466:	shl    eax,0x8
  428469:	mov    edx,eax
  42846b:	movzx  eax,BYTE PTR [rbp+0x5]
  42846f:	add    eax,edx
  428471:	shl    eax,0x8
  428474:	mov    edx,eax
  428476:	movzx  eax,BYTE PTR [rbp+0x6]
  42847a:	add    eax,edx
  42847c:	movzx  edx,BYTE PTR [rbp+0x7]
  428480:	shl    eax,0x8
  428483:	add    eax,edx
  428485:	mov    DWORD PTR [rbp+0x0],eax
  428488:	jmp    0x427280
  42848d:	nop    DWORD PTR [rax]
  428490:	cmp    ebx,0x6c
  428493:	je     0x42907d
  428499:	jg     0x428b16
  42849f:	cmp    ebx,0x43
  4284a2:	je     0x42976f
  4284a8:	jg     0x42906b
  4284ae:	cmp    ebx,0x41
  4284b1:	je     0x429ac5
  4284b7:	cmp    ebx,0x42
  4284ba:	jne    0x42998a
  4284c0:	ucomiss xmm0,DWORD PTR [rip+0x13059]        # 0x43b520
  4284c7:	jb     0x42a9ab
  4284cd:	movss  xmm1,DWORD PTR [rip+0x13067]        # 0x43b53c
  4284d5:	ucomiss xmm1,xmm0
  4284d8:	jb     0x42a9a1
  4284de:	cvttss2si rax,xmm0
  4284e3:	mov    esi,0x4
  4284e8:	mov    DWORD PTR [rbp+0x0],eax
  4284eb:	jmp    0x427280
  4284f0:	cmp    ebx,0x6c
  4284f3:	je     0x428f42
  4284f9:	jg     0x428a75
  4284ff:	cmp    ebx,0x43
  428502:	je     0x4295dc
  428508:	jg     0x428f30
  42850e:	cmp    ebx,0x41
  428511:	je     0x4293d3
  428517:	cmp    ebx,0x42
  42851a:	jne    0x429afe
  428520:	mov    eax,r8d
  428523:	mov    edx,0x68db8bad
  428528:	sar    r8d,0x1f
  42852c:	imul   edx
  42852e:	sar    edx,0xc
  428531:	sub    edx,r8d
  428534:	js     0x42a9bf
  42853a:	mov    DWORD PTR [rbp+0x0],edx
  42853d:	mov    esi,0x4
  428542:	jmp    0x427280
  428547:	nop    WORD PTR [rax+rax*1+0x0]
  428550:	cmp    ebx,0x6c
  428553:	je     0x42857c
  428555:	jg     0x428c85
  42855b:	cmp    ebx,0x43
  42855e:	je     0x4290ed
  428564:	jl     0x4291aa
  42856a:	cmp    ebx,0x68
  42856d:	je     0x428d17
  428573:	cmp    ebx,0x6a
  428576:	jne    0x429153
  42857c:	test   rcx,rcx
  42857f:	mov    r9,rbp
  428582:	js     0x429e5c
  428588:	mov    r8,rcx
  42858b:	xor    edx,edx
  42858d:	xor    ecx,ecx
  42858f:	call   0x4255b0
  428594:	mov    esi,eax
  428596:	jmp    0x427280
  42859b:	nop    DWORD PTR [rax+rax*1+0x0]
  4285a0:	cmp    ebx,0x3b
  4285a3:	jge    0x42886a
  4285a9:	cmp    ebx,0x2f
  4285ac:	je     0x4287e1
  4285b2:	jg     0x428b6b
  4285b8:	cmp    ebx,0x23
  4285bb:	je     0x4287e1
  4285c1:	cmp    ebx,0x27
  4285c4:	je     0x4287e1
  4285ca:	mov    esi,0xfffffffe
  4285cf:	jmp    0x427280
  4285d4:	movzx  eax,WORD PTR [r12]
  4285d9:	mov    DWORD PTR [rsp+0x100],eax
  4285e0:	movzx  eax,WORD PTR [r12+0x2]
  4285e6:	imul   eax,eax,0x4650
  4285ec:	mov    DWORD PTR [rsp+0x104],eax
  4285f3:	jmp    0x42772f
  4285f8:	nop    DWORD PTR [rax+rax*1+0x0]
  428600:	mov    rax,rcx
  428603:	movabs rdx,0x32e73fb956a1b897
  42860d:	mov    QWORD PTR [rsp+0x108],0x0
  428619:	mul    rdx
  42861c:	movabs rax,0x141dd76000
  428626:	mov    BYTE PTR [rsp+0x10e],0x6
  42862e:	mov    BYTE PTR [rsp+0x10f],0x60
  428636:	mov    QWORD PTR [rsp+0x20],rbp
  42863b:	mov    r9d,ebx
  42863e:	lea    r8,[rsp+0x100]
  428646:	shr    rdx,0x22
  42864a:	imul   rax,rdx
  42864e:	sub    edx,0xa96c9
  428654:	mov    DWORD PTR [rsp+0x108],edx
  42865b:	mov    edx,0x2a
  428660:	sub    rcx,rax
  428663:	lea    rax,[rcx+rcx*4]
  428667:	add    rax,rax
  42866a:	mov    QWORD PTR [rsp+0x100],rax
  428672:	jmp    0x427460
  428677:	nop    WORD PTR [rax+rax*1+0x0]
  428680:	mov    QWORD PTR [rsp+0x108],0x0
  42868c:	mov    QWORD PTR [rsp+0x100],0x0
  428698:	movabs rdx,0x32e73fb956a1b897
  4286a2:	mov    BYTE PTR [rsp+0x10e],0x6
  4286aa:	mov    BYTE PTR [rsp+0x10f],0x20
  4286b2:	mov    r9d,ebx
  4286b5:	mov    rcx,QWORD PTR [r12]
  4286b9:	lea    r8,[rsp+0x100]
  4286c1:	mov    QWORD PTR [rsp+0x20],rbp
  4286c6:	mov    rax,rcx
  4286c9:	mul    rdx
  4286cc:	movabs rax,0x141dd76000
  4286d6:	shr    rdx,0x22
  4286da:	imul   rdx,rax
  4286de:	sub    rcx,rdx
  4286e1:	mov    edx,0x29
  4286e6:	lea    rax,[rcx+rcx*4]
  4286ea:	add    rax,rax
  4286ed:	mov    QWORD PTR [rsp+0x100],rax
  4286f5:	jmp    0x427460
  4286fa:	nop    WORD PTR [rax+rax*1+0x0]
  428700:	mov    DWORD PTR [rsp+0x100],eax
  428707:	mov    DWORD PTR [rsp+0x104],0x0
  428712:	jmp    0x42772f
  428717:	nop    WORD PTR [rax+rax*1+0x0]
  428720:	cmp    ebx,0xaf
  428726:	je     0x428750
  428728:	cmp    ebx,0x100
  42872e:	je     0x428750
  428730:	cmp    ebx,0xa7
  428736:	je     0x428750
  428738:	mov    esi,0xfffffffe
  42873d:	jmp    0x427280
  428742:	cmp    ebx,0x27
  428745:	je     0x428750
  428747:	cmp    ebx,0x23
  42874a:	jne    0x428738
  42874c:	nop    DWORD PTR [rax+0x0]
  428750:	movzx  eax,BYTE PTR [r12+0xf]
  428756:	movzx  r9d,WORD PTR [r12+0x4]
  42875c:	lea    rsi,[rsp+0x100]
  428764:	lea    rdx,[rip+0x1219d]        # 0x43a908
  42876b:	mov    rcx,rsi
  42876e:	mov    DWORD PTR [rsp+0x60],eax
  428772:	movzx  eax,BYTE PTR [r12+0xe]
  428778:	mov    DWORD PTR [rsp+0x58],eax
  42877c:	movzx  eax,BYTE PTR [r12+0xd]
  428782:	mov    DWORD PTR [rsp+0x50],eax
  428786:	movzx  eax,BYTE PTR [r12+0xc]
  42878c:	mov    DWORD PTR [rsp+0x48],eax
  428790:	movzx  eax,BYTE PTR [r12+0xb]
  428796:	mov    DWORD PTR [rsp+0x40],eax
  42879a:	movzx  eax,BYTE PTR [r12+0xa]
  4287a0:	mov    DWORD PTR [rsp+0x38],eax
  4287a4:	movzx  eax,BYTE PTR [r12+0x9]
  4287aa:	mov    DWORD PTR [rsp+0x30],eax
  4287ae:	movzx  eax,BYTE PTR [r12+0x8]
  4287b4:	mov    DWORD PTR [rsp+0x28],eax
  4287b8:	movzx  eax,WORD PTR [r12+0x6]
  4287be:	mov    DWORD PTR [rsp+0x20],eax
  4287c2:	mov    r8d,DWORD PTR [r12]
  4287c6:	call   0x42d648
  4287cb:	lea    r9,[rbp+0x8]
  4287cf:	mov    r8,rbp
  4287d2:	mov    rdx,rsi
  4287d5:	mov    ecx,ebx
  4287d7:	call   0x425680
  4287dc:	jmp    0x427470
  4287e1:	lea    esi,[r9+r9*1]
  4287e5:	mov    DWORD PTR [rsp+0x78],r9d
  4287ea:	lea    ecx,[rsi+0x1]
  4287ed:	movsxd rcx,ecx
  4287f0:	call   0x42d6b8
  4287f5:	test   rax,rax
  4287f8:	mov    QWORD PTR [rbp+0x0],rax
  4287fc:	je     0x42a56f
  428802:	mov    r9d,DWORD PTR [rsp+0x78]
  428807:	test   r9d,r9d
  42880a:	jle    0x42884b
  42880c:	lea    r8,[rip+0x12ced]        # 0x43b500
  428813:	xor    edx,edx
  428815:	movzx  ecx,BYTE PTR [r12+rdx*1]
  42881a:	shr    cl,0x4
  42881d:	and    ecx,0xf
  428820:	movzx  ecx,BYTE PTR [r8+rcx*1]
  428825:	mov    BYTE PTR [rax+rdx*2],cl
  428828:	movzx  ecx,BYTE PTR [r12+rdx*1]
  42882d:	and    ecx,0xf
  428830:	movzx  ecx,BYTE PTR [r8+rcx*1]
  428835:	mov    BYTE PTR [rax+rdx*2+0x1],cl
  428839:	add    rdx,0x1
  42883d:	cmp    r9d,edx
  428840:	jg     0x428815
  428842:	lea    edx,[r9-0x1]
  428846:	lea    rax,[rax+rdx*2+0x2]
  42884b:	mov    BYTE PTR [rax],0x0
  42884e:	jmp    0x427472
  428853:	cmp    ebx,0x3e
  428856:	je     0x42886a
  428858:	jl     0x4285ca
  42885e:	lea    eax,[rbx-0x40]
  428861:	cmp    eax,0x3
  428864:	ja     0x4285ca
  42886a:	mov    ecx,ebx
  42886c:	mov    DWORD PTR [rsp+0x78],r9d
  428871:	call   0x40a420
  428876:	mov    r9d,DWORD PTR [rsp+0x78]
  42887b:	mov    esi,eax
  42887d:	mov    rdx,r12
  428880:	mov    rcx,rbp
  428883:	cmp    eax,r9d
  428886:	mov    edi,r9d
  428889:	cmovle edi,eax
  42888c:	movsxd r13,edi
  42888f:	mov    r8,r13
  428892:	call   0x42d6a8
  428897:	mov    r8d,esi
  42889a:	lea    rcx,[rbp+r13*1+0x0]
  42889f:	xor    edx,edx
  4288a1:	sub    r8d,edi
  4288a4:	movsxd r8,r8d
  4288a7:	call   0x42d698
  4288ac:	jmp    0x427472
  4288b1:	cmp    dl,0x2d
  4288b4:	jne    0x429db6
  4288ba:	mov    WORD PTR [rbp+0x6],r8w
  4288bf:	jmp    0x427fdd
  4288c4:	cmp    dl,0x2d
  4288c7:	jne    0x429db6
  4288cd:	mov    WORD PTR [rbp+0x4],r8w
  4288d2:	jmp    0x427fdd
  4288d7:	and    edx,0xffffffdf
  4288da:	lea    r11d,[rdx-0x41]
  4288de:	cmp    r11b,0x5
  4288e2:	ja     0x429db6
  4288e8:	movsx  edx,dl
  4288eb:	lea    r8d,[r8+rdx*1-0x37]
  4288f0:	jmp    0x427f9e
  4288f5:	test   r10b,0x1
  4288f9:	jne    0x427fa8
  4288ff:	shr    r10d,1
  428902:	lea    edx,[r10-0xa]
  428906:	mov    BYTE PTR [rbp+rdx*1+0x8],r8b
  42890b:	xor    r8d,r8d
  42890e:	jmp    0x427fa8
  428913:	mov    r8,rbp
  428916:	mov    edx,ebx
  428918:	call   0x425710
  42891d:	jmp    0x427470
  428922:	cmp    ebx,0xa7
  428928:	je     0x429416
  42892e:	jg     0x429402
  428934:	cmp    ebx,0x7a
  428937:	je     0x429607
  42893d:	cmp    ebx,0x7f
  428940:	jne    0x4297b2
  428946:	mov    rax,QWORD PTR [r12]
  42894a:	xor    r8d,r8d
  42894d:	mov    edx,0x14
  428952:	mov    rcx,rbp
  428955:	mov    QWORD PTR [rbp+0x0],rax
  428959:	mov    rax,QWORD PTR [r12+0x8]
  42895e:	mov    QWORD PTR [rbp+0x8],rax
  428962:	mov    rax,QWORD PTR [r12+0x10]
  428967:	mov    QWORD PTR [rbp+0x10],rax
  42896b:	mov    rax,QWORD PTR [r12+0x18]
  428970:	mov    QWORD PTR [rbp+0x18],rax
  428974:	movzx  eax,WORD PTR [r12+0x20]
  42897a:	mov    WORD PTR [rbp+0x20],ax
  42897e:	movzx  eax,BYTE PTR [r12+0x22]
  428984:	mov    BYTE PTR [rbp+0x22],al
  428987:	call   0x414d70
  42898c:	test   eax,eax
  42898e:	mov    esi,eax
  428990:	js     0x427280
  428996:	cmp    BYTE PTR [rbp+0x3],0x0
  42899a:	jne    0x428ed0
  4289a0:	movzx  eax,BYTE PTR [rbp+0x4]
  4289a4:	movzx  r8d,BYTE PTR [rbp+0x2]
  4289a9:	shl    eax,0x8
  4289ac:	mov    edx,eax
  4289ae:	movzx  eax,BYTE PTR [rbp+0x5]
  4289b2:	add    eax,edx
  4289b4:	shl    eax,0x8
  4289b7:	mov    edx,eax
  4289b9:	movzx  eax,BYTE PTR [rbp+0x6]
  4289bd:	add    eax,edx
  4289bf:	movzx  edx,BYTE PTR [rbp+0x7]
  4289c3:	shl    eax,0x8
  4289c6:	lea    ecx,[rax+rdx*1]
  4289c9:	movzx  edx,BYTE PTR [rbp+0x8]
  4289cd:	xor    eax,eax
  4289cf:	shl    rcx,0x20
  4289d3:	test   r8b,r8b
  4289d6:	mov    r9,rcx
  4289d9:	setne  al
  4289dc:	mov    ecx,edx
  4289de:	movzx  edx,BYTE PTR [rbp+0x9]
  4289e2:	shl    ecx,0x8
  4289e5:	add    edx,ecx
  4289e7:	mov    ecx,edx
  4289e9:	movzx  edx,BYTE PTR [rbp+0xa]
  4289ed:	shl    ecx,0x8
  4289f0:	add    edx,ecx
  4289f2:	movzx  ecx,BYTE PTR [rbp+0xb]
  4289f6:	shl    edx,0x8
  4289f9:	add    edx,ecx
  4289fb:	lea    rcx,[r9+rdx*1]
  4289ff:	mov    rdx,rax
  428a02:	neg    rdx
  428a05:	xor    rdx,rcx
  428a08:	add    rax,rdx
  428a0b:	cqo    
  428a0d:	xor    r8,rdx
  428a10:	and    r8d,0x1
  428a14:	jne    0x428ed0
  428a1a:	mov    QWORD PTR [rbp+0x0],rax
  428a1e:	mov    esi,0x8
  428a23:	jmp    0x427280
  428a28:	cmp    ebx,0xa7
  428a2e:	je     0x4292f8
  428a34:	jg     0x4292e4
  428a3a:	cmp    ebx,0x7a
  428a3d:	je     0x4293a1
  428a43:	cmp    ebx,0x7f
  428a46:	jne    0x42989b
  428a4c:	mov    rax,r8
  428a4f:	movabs rdx,0x346dc5d63886594b
  428a59:	sar    r8,0x3f
  428a5d:	imul   rdx
  428a60:	mov    esi,0x8
  428a65:	sar    rdx,0xb
  428a69:	sub    rdx,r8
  428a6c:	mov    QWORD PTR [rbp+0x0],rdx
  428a70:	jmp    0x427280
  428a75:	cmp    ebx,0xa7
  428a7b:	je     0x42970c
  428a81:	jg     0x4296f8
  428a87:	cmp    ebx,0x7a
  428a8a:	je     0x4293c5
  428a90:	cmp    ebx,0x7f
  428a93:	jne    0x429afe
  428a99:	mov    eax,r8d
  428a9c:	mov    edx,0x68db8bad
  428aa1:	sar    r8d,0x1f
  428aa5:	imul   edx
  428aa7:	mov    esi,0x8
  428aac:	mov    eax,edx
  428aae:	sar    eax,0xc
  428ab1:	sub    eax,r8d
  428ab4:	cdqe   
  428ab6:	mov    QWORD PTR [rbp+0x0],rax
  428aba:	jmp    0x427280
  428abf:	cmp    ebx,0xa7
  428ac5:	je     0x42948d
  428acb:	jg     0x429479
  428ad1:	cmp    ebx,0x7a
  428ad4:	je     0x429440
  428ada:	cmp    ebx,0x7f
  428add:	jne    0x42983a
  428ae3:	ucomisd xmm0,QWORD PTR [rip+0x12ab5]        # 0x43b5a0
  428aeb:	ja     0x42a5a1
  428af1:	movsd  xmm1,QWORD PTR [rip+0x12aaf]        # 0x43b5a8
  428af9:	ucomisd xmm1,xmm0
  428afd:	ja     0x42a9f1
  428b03:	cvttsd2si rax,xmm0
  428b08:	mov    esi,0x8
  428b0d:	mov    QWORD PTR [rbp+0x0],rax
  428b11:	jmp    0x427280
  428b16:	cmp    ebx,0xa7
  428b1c:	je     0x42932b
  428b22:	jg     0x429317
  428b28:	cmp    ebx,0x7a
  428b2b:	je     0x429235
  428b31:	cmp    ebx,0x7f
  428b34:	jne    0x42998a
  428b3a:	ucomiss xmm0,DWORD PTR [rip+0x129ff]        # 0x43b540
  428b41:	ja     0x42a53d
  428b47:	movss  xmm1,DWORD PTR [rip+0x129f5]        # 0x43b544
  428b4f:	ucomiss xmm1,xmm0
  428b52:	ja     0x42a6b6
  428b58:	cvttss2si rax,xmm0
  428b5d:	mov    esi,0x8
  428b62:	mov    QWORD PTR [rbp+0x0],rax
  428b66:	jmp    0x427280
  428b6b:	cmp    ebx,0x34
  428b6e:	je     0x42886a
  428b74:	cmp    ebx,0x38
  428b77:	je     0x42886a
  428b7d:	cmp    ebx,0x30
  428b80:	jne    0x4285ca
  428b86:	jmp    0x42886a
  428b8b:	mov    edx,DWORD PTR [rbp+0x8]
  428b8e:	jmp    0x427a5f
  428b93:	cmp    ebx,0x3c
  428b96:	je     0x4297f6
  428b9c:	cmp    ebx,0x3e
  428b9f:	jne    0x42983a
  428ba5:	movsd  QWORD PTR [rbp+0x0],xmm0
  428baa:	mov    esi,0x8
  428baf:	jmp    0x427280
  428bb4:	cmp    ebx,0x3c
  428bb7:	je     0x4298a5
  428bbd:	cmp    ebx,0x3e
  428bc0:	jne    0x4297b2
  428bc6:	lea    rbx,[rsp+0x100]
  428bce:	mov    rcx,r12
  428bd1:	mov    rdx,rbx
  428bd4:	call   0x414a20
  428bd9:	test   eax,eax
  428bdb:	js     0x42a8ef
  428be1:	mov    rcx,rbx
  428be4:	mov    esi,0x8
  428be9:	call   0x42d750
  428bee:	movsd  QWORD PTR [rbp+0x0],xmm0
  428bf3:	jmp    0x427280
  428bf8:	cmp    ebx,0x3c
  428bfb:	je     0x428cb7
  428c01:	cmp    ebx,0x3e
  428c04:	jne    0x42989b
  428c0a:	pxor   xmm0,xmm0
  428c0e:	mov    esi,0x8
  428c13:	cvtsi2sd xmm0,r8
  428c18:	divsd  xmm0,QWORD PTR [rip+0x128f8]        # 0x43b518
  428c20:	movsd  QWORD PTR [rbp+0x0],xmm0
  428c25:	jmp    0x427280
  428c2a:	cmp    ebx,0x3c
  428c2d:	je     0x428cb7
  428c33:	cmp    ebx,0x3e
  428c36:	jne    0x429afe
  428c3c:	pxor   xmm0,xmm0
  428c40:	mov    esi,0x8
  428c45:	cvtsi2sd xmm0,r8d
  428c4a:	divsd  xmm0,QWORD PTR [rip+0x128c6]        # 0x43b518
  428c52:	movsd  QWORD PTR [rbp+0x0],xmm0
  428c57:	jmp    0x427280
  428c5c:	cmp    ebx,0x3c
  428c5f:	je     0x4291ca
  428c65:	cmp    ebx,0x3e
  428c68:	jne    0x42998a
  428c6e:	pxor   xmm4,xmm4
  428c72:	mov    esi,0x8
  428c77:	cvtss2sd xmm4,xmm0
  428c7b:	movsd  QWORD PTR [rbp+0x0],xmm4
  428c80:	jmp    0x427280
  428c85:	cmp    ebx,0xa7
  428c8b:	je     0x429114
  428c91:	jg     0x429104
  428c97:	cmp    ebx,0x7a
  428c9a:	je     0x429144
  428ca0:	cmp    ebx,0x7f
  428ca3:	jne    0x429153
  428ca9:	mov    QWORD PTR [rbp+0x0],rcx
  428cad:	mov    esi,0x8
  428cb2:	jmp    0x427280
  428cb7:	mov    QWORD PTR [rbp+0x0],r8
  428cbb:	mov    esi,0x8
  428cc0:	jmp    0x427330
  428cc5:	movzx  eax,BYTE PTR [r12+0x1]
  428ccb:	and    eax,0xffffffdf
  428cce:	cmp    al,0x58
  428cd0:	jne    0x427a05
  428cd6:	add    r12,0x2
  428cda:	sub    r9d,0x2
  428cde:	test   r9d,r9d
  428ce1:	jne    0x427a05
  428ce7:	xor    esi,esi
  428ce9:	jmp    0x427a30
  428cee:	mov    BYTE PTR [rbp+0x0],0x0
  428cf2:	movzx  edx,BYTE PTR [r12]
  428cf7:	mov    rax,QWORD PTR [rip+0x130d2]        # 0x43bdd0
  428cfe:	mov    eax,DWORD PTR [rax+rdx*4]
  428d01:	sub    eax,0x1
  428d04:	test   eax,eax
  428d06:	jle    0x4280de
  428d0c:	movsxd rdx,eax
  428d0f:	cmp    BYTE PTR [r12+rdx*1+0x2],0x0
  428d15:	je     0x428d01
  428d17:	cmp    ebx,0x3c
  428d1a:	mov    BYTE PTR [rbp+0x0],0x1
  428d1e:	mov    esi,0x1
  428d23:	sete   al
  428d26:	jmp    0x427328
  428d2b:	lea    r8,[rip+0x11ba2]        # 0x43a8d4
  428d32:	lea    rcx,[rip+0x116a0]        # 0x43a3d9
  428d39:	mov    edx,0x4937
  428d3e:	call   0x40d350
  428d43:	jmp    0x427661
  428d48:	cmp    ebx,0x27
  428d4b:	je     0x42948d
  428d51:	jle    0x429831
  428d57:	cmp    ebx,0x2f
  428d5a:	je     0x42948d
  428d60:	cmp    ebx,0x30
  428d63:	jne    0x42983a
  428d69:	ucomisd xmm0,QWORD PTR [rip+0x127ef]        # 0x43b560
  428d71:	jb     0x42a9b5
  428d77:	movsd  xmm1,QWORD PTR [rip+0x127e9]        # 0x43b568
  428d7f:	ucomisd xmm1,xmm0
  428d83:	jb     0x42a597
  428d89:	cvttsd2si eax,xmm0
  428d8d:	jmp    0x4280db
  428d92:	cmp    ebx,0x27
  428d95:	je     0x4292f8
  428d9b:	jle    0x429892
  428da1:	cmp    ebx,0x2f
  428da4:	je     0x4292f8
  428daa:	cmp    ebx,0x30
  428dad:	jne    0x42989b
  428db3:	lea    rax,[r8+0x270f]
  428dba:	cmp    rax,0x27370e
  428dc0:	ja     0x42a579
  428dc6:	mov    eax,r8d
  428dc9:	mov    edx,0x68db8bad
  428dce:	sar    r8d,0x1f
  428dd2:	imul   edx
  428dd4:	mov    esi,0x1
  428dd9:	sar    edx,0xc
  428ddc:	sub    edx,r8d
  428ddf:	cmp    ebx,0x3c
  428de2:	mov    BYTE PTR [rbp+0x0],dl
  428de5:	sete   al
  428de8:	jmp    0x427328
  428ded:	cmp    ebx,0x27
  428df0:	je     0x42932b
  428df6:	jle    0x429981
  428dfc:	cmp    ebx,0x2f
  428dff:	je     0x42932b
  428e05:	cmp    ebx,0x30
  428e08:	jne    0x42998a
  428e0e:	ucomiss xmm0,DWORD PTR [rip+0x1270b]        # 0x43b520
  428e15:	jb     0x42ab17
  428e1b:	movss  xmm1,DWORD PTR [rip+0x12701]        # 0x43b524
  428e23:	ucomiss xmm1,xmm0
  428e26:	jb     0x42a565
  428e2c:	cvttss2si eax,xmm0
  428e30:	cmp    ebx,0x3c
  428e33:	mov    esi,0x1
  428e38:	mov    BYTE PTR [rbp+0x0],al
  428e3b:	sete   al
  428e3e:	jmp    0x427328
  428e43:	cmp    ebx,0x27
  428e46:	je     0x429416
  428e4c:	jle    0x4297a9
  428e52:	cmp    ebx,0x2f
  428e55:	je     0x429416
  428e5b:	cmp    ebx,0x30
  428e5e:	jne    0x4297b2
  428e64:	mov    rax,QWORD PTR [r12]
  428e68:	xor    r8d,r8d
  428e6b:	mov    edx,0x3
  428e70:	mov    rcx,rbp
  428e73:	mov    QWORD PTR [rbp+0x0],rax
  428e77:	mov    rax,QWORD PTR [r12+0x8]
  428e7c:	mov    QWORD PTR [rbp+0x8],rax
  428e80:	mov    rax,QWORD PTR [r12+0x10]
  428e85:	mov    QWORD PTR [rbp+0x10],rax
  428e89:	mov    rax,QWORD PTR [r12+0x18]
  428e8e:	mov    QWORD PTR [rbp+0x18],rax
  428e92:	movzx  eax,WORD PTR [r12+0x20]
  428e98:	mov    WORD PTR [rbp+0x20],ax
  428e9c:	movzx  eax,BYTE PTR [r12+0x22]
  428ea2:	mov    BYTE PTR [rbp+0x22],al
  428ea5:	call   0x414d70
  428eaa:	test   eax,eax
  428eac:	mov    esi,eax
  428eae:	js     0x427280
  428eb4:	cmp    BYTE PTR [rbp+0x3],0x0
  428eb8:	jne    0x428ed0
  428eba:	cmp    BYTE PTR [rbp+0x2],0x0
  428ebe:	movzx  eax,BYTE PTR [rbp+0x4]
  428ec2:	je     0x4280db
  428ec8:	test   al,al
  428eca:	je     0x4280db
  428ed0:	mov    esi,0xfffffffb
  428ed5:	jmp    0x427280
  428eda:	cmp    ebx,0x27
  428edd:	je     0x42970c
  428ee3:	jle    0x429af5
  428ee9:	cmp    ebx,0x2f
  428eec:	je     0x42970c
  428ef2:	cmp    ebx,0x30
  428ef5:	jne    0x429afe
  428efb:	mov    eax,r8d
  428efe:	mov    edx,0x68db8bad
  428f03:	sar    r8d,0x1f
  428f07:	imul   edx
  428f09:	mov    eax,edx
  428f0b:	sar    eax,0xc
  428f0e:	sub    eax,r8d
  428f11:	cmp    eax,0xff
  428f16:	jbe    0x4280db
  428f1c:	mov    esi,0xfffffffb
  428f21:	jmp    0x427280
  428f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428f30:	cmp    ebx,0x68
  428f33:	je     0x429aae
  428f39:	cmp    ebx,0x6a
  428f3c:	jne    0x429afe
  428f42:	test   r8d,r8d
  428f45:	mov    r9,rbp
  428f48:	js     0x429eec
  428f4e:	xor    edx,edx
  428f50:	mov    ecx,0x4
  428f55:	call   0x425560
  428f5a:	mov    esi,eax
  428f5c:	jmp    0x427280
  428f61:	cmp    ebx,0x68
  428f64:	je     0x4294e7
  428f6a:	cmp    ebx,0x6a
  428f6d:	jne    0x42983a
  428f73:	lea    rsi,[rsp+0x100]
  428f7b:	lea    rdx,[rip+0x1197d]        # 0x43a8ff
  428f82:	movq   r8,xmm0
  428f87:	movapd xmm2,xmm0
  428f8b:	mov    rcx,rsi
  428f8e:	call   0x42d648
  428f93:	mov    rdx,rsi
  428f96:	mov    ecx,DWORD PTR [rdx]
  428f98:	add    rdx,0x4
  428f9c:	lea    eax,[rcx-0x1010101]
  428fa2:	not    ecx
  428fa4:	and    eax,ecx
  428fa6:	and    eax,0x80808080
  428fab:	je     0x428f96
  428fad:	mov    ecx,eax
  428faf:	mov    r8,rbp
  428fb2:	shr    ecx,0x10
  428fb5:	test   eax,0x8080
  428fba:	cmove  eax,ecx
  428fbd:	lea    rcx,[rdx+0x2]
  428fc1:	cmove  rdx,rcx
  428fc5:	add    al,al
  428fc7:	mov    rcx,rsi
  428fca:	sbb    rdx,0x3
  428fce:	call   0x424fe0
  428fd3:	mov    esi,eax
  428fd5:	jmp    0x427280
  428fda:	cmp    ebx,0x68
  428fdd:	je     0x428cee
  428fe3:	cmp    ebx,0x6a
  428fe6:	jne    0x4297b2
  428fec:	mov    rax,QWORD PTR [r12]
  428ff0:	movzx  edx,BYTE PTR [rbp+0x0]
  428ff4:	mov    rcx,rbp
  428ff7:	movzx  r8d,BYTE PTR [rbp+0x1]
  428ffc:	mov    QWORD PTR [rbp+0x0],rax
  429000:	mov    rax,QWORD PTR [r12+0x8]
  429005:	mov    QWORD PTR [rbp+0x8],rax
  429009:	mov    rax,QWORD PTR [r12+0x10]
  42900e:	mov    QWORD PTR [rbp+0x10],rax
  429012:	mov    rax,QWORD PTR [r12+0x18]
  429017:	mov    QWORD PTR [rbp+0x18],rax
  42901b:	movzx  eax,WORD PTR [r12+0x20]
  429021:	mov    WORD PTR [rbp+0x20],ax
  429025:	movzx  eax,BYTE PTR [r12+0x22]
  42902b:	mov    BYTE PTR [rbp+0x22],al
  42902e:	call   0x414d70
  429033:	mov    esi,eax
  429035:	jmp    0x427280
  42903a:	cmp    ebx,0x68
  42903d:	je     0x4299fb
  429043:	cmp    ebx,0x6a
  429046:	jne    0x42989b
  42904c:	test   r8,r8
  42904f:	mov    r9,rbp
  429052:	js     0x429f05
  429058:	xor    edx,edx
  42905a:	mov    ecx,0x4
  42905f:	call   0x4255b0
  429064:	mov    esi,eax
  429066:	jmp    0x427280
  42906b:	cmp    ebx,0x68
  42906e:	je     0x42937c
  429074:	cmp    ebx,0x6a
  429077:	jne    0x42998a
  42907d:	cvtss2sd xmm0,xmm0
  429081:	movzx  r8d,BYTE PTR [rbp+0x1]
  429086:	lea    rsi,[rsp+0x100]
  42908e:	lea    rdx,[rip+0x1185f]        # 0x43a8f4
  429095:	movapd xmm3,xmm0
  429099:	movq   r9,xmm0
  42909e:	mov    rcx,rsi
  4290a1:	call   0x42d648
  4290a6:	mov    rdx,rsi
  4290a9:	mov    ecx,DWORD PTR [rdx]
  4290ab:	add    rdx,0x4
  4290af:	lea    eax,[rcx-0x1010101]
  4290b5:	not    ecx
  4290b7:	and    eax,ecx
  4290b9:	and    eax,0x80808080
  4290be:	je     0x4290a9
  4290c0:	mov    ecx,eax
  4290c2:	mov    r8,rbp
  4290c5:	shr    ecx,0x10
  4290c8:	test   eax,0x8080
  4290cd:	cmove  eax,ecx
  4290d0:	lea    rcx,[rdx+0x2]
  4290d4:	cmove  rdx,rcx
  4290d8:	add    al,al
  4290da:	mov    rcx,rsi
  4290dd:	sbb    rdx,0x3
  4290e1:	call   0x424fe0
  4290e6:	mov    esi,eax
  4290e8:	jmp    0x427280
  4290ed:	test   rcx,rcx
  4290f0:	js     0x42a684
  4290f6:	mov    QWORD PTR [rbp+0x0],rcx
  4290fa:	mov    esi,0x8
  4290ff:	jmp    0x427280
  429104:	cmp    ebx,0xaf
  42910a:	je     0x429114
  42910c:	cmp    ebx,0x100
  429112:	jne    0x429153
  429114:	lea    rsi,[rsp+0x100]
  42911c:	lea    rdx,[rip+0x117c6]        # 0x43a8e9
  429123:	mov    r8,rcx
  429126:	mov    rcx,rsi
  429129:	call   0x42d648
  42912e:	jmp    0x4287cb
  429133:	cmp    ebx,0x27
  429136:	je     0x429114
  429138:	jle    0x42914e
  42913a:	cmp    ebx,0x2f
  42913d:	je     0x429114
  42913f:	cmp    ebx,0x30
  429142:	jne    0x429153
  429144:	mov    esi,0xfffffffb
  429149:	jmp    0x427280
  42914e:	cmp    ebx,0x23
  429151:	je     0x429114
  429153:	mov    esi,0xfffffffe
  429158:	jmp    0x427280
  42915d:	movabs rax,0x346dc5d638865
  429167:	movabs rdx,0x68db8bac710ca
  429171:	add    rax,rcx
  429174:	cmp    rax,rdx
  429177:	ja     0x42ab49
  42917d:	imul   rcx,rcx,0x2710
  429184:	mov    esi,0x8
  429189:	mov    QWORD PTR [rbp+0x0],rcx
  42918d:	jmp    0x427330
  429192:	pxor   xmm0,xmm0
  429196:	mov    esi,0x4
  42919b:	cvtsi2ss xmm0,rcx
  4291a0:	movss  DWORD PTR [rbp+0x0],xmm0
  4291a5:	jmp    0x427280
  4291aa:	cmp    rcx,rdx
  4291ad:	ja     0x42a6ac
  4291b3:	mov    DWORD PTR [rbp+0x0],ecx
  4291b6:	mov    esi,0x4
  4291bb:	jmp    0x427280
  4291c0:	mov    eax,0xfffffffc
  4291c5:	jmp    0x427282
  4291ca:	ucomiss xmm0,DWORD PTR [rip+0x1237b]        # 0x43b54c
  4291d1:	ja     0x42a529
  4291d7:	movss  xmm1,DWORD PTR [rip+0x12371]        # 0x43b550
  4291df:	ucomiss xmm1,xmm0
  4291e2:	ja     0x42aa0f
  4291e8:	mulss  xmm0,DWORD PTR [rip+0x12364]        # 0x43b554
  4291f0:	cvttss2si rax,xmm0
  4291f5:	mov    QWORD PTR [rbp+0x0],rax
  4291f9:	mov    esi,0x8
  4291fe:	jmp    0x427330
  429203:	ucomisd xmm0,QWORD PTR [rip+0x12355]        # 0x43b560
  42920b:	jb     0x42a9e7
  429211:	movsd  xmm1,QWORD PTR [rip+0x12367]        # 0x43b580
  429219:	ucomisd xmm1,xmm0
  42921d:	jb     0x42a9dd
  429223:	cvttsd2si eax,xmm0
  429227:	mov    esi,0x2
  42922c:	mov    WORD PTR [rbp+0x0],ax
  429230:	jmp    0x427280
  429235:	ucomiss xmm0,DWORD PTR [rip+0x1231c]        # 0x43b558
  42923c:	ja     0x42a547
  429242:	movss  xmm1,DWORD PTR [rip+0x12312]        # 0x43b55c
  42924a:	ucomiss xmm1,xmm0
  42924d:	ja     0x42a698
  429253:	mulss  xmm0,DWORD PTR [rip+0x122f9]        # 0x43b554
  42925b:	mov    esi,0x4
  429260:	cvttss2si eax,xmm0
  429264:	mov    DWORD PTR [rbp+0x0],eax
  429267:	jmp    0x427280
  42926c:	mov    rax,QWORD PTR [r12]
  429270:	xor    r8d,r8d
  429273:	mov    edx,0x5
  429278:	mov    rcx,rbp
  42927b:	mov    QWORD PTR [rbp+0x0],rax
  42927f:	mov    rax,QWORD PTR [r12+0x8]
  429284:	mov    QWORD PTR [rbp+0x8],rax
  429288:	mov    rax,QWORD PTR [r12+0x10]
  42928d:	mov    QWORD PTR [rbp+0x10],rax
  429291:	mov    rax,QWORD PTR [r12+0x18]
  429296:	mov    QWORD PTR [rbp+0x18],rax
  42929a:	movzx  eax,WORD PTR [r12+0x20]
  4292a0:	mov    WORD PTR [rbp+0x20],ax
  4292a4:	movzx  eax,BYTE PTR [r12+0x22]
  4292aa:	mov    BYTE PTR [rbp+0x22],al
  4292ad:	call   0x414d70
  4292b2:	test   eax,eax
  4292b4:	mov    esi,eax
  4292b6:	js     0x427280
  4292bc:	cmp    WORD PTR [rbp+0x2],0x0
  4292c1:	jne    0x428ed0
  4292c7:	movzx  eax,BYTE PTR [rbp+0x4]
  4292cb:	mov    esi,0x2
  4292d0:	shl    eax,0x8
  4292d3:	mov    edx,eax
  4292d5:	movzx  eax,BYTE PTR [rbp+0x5]
  4292d9:	add    eax,edx
  4292db:	mov    WORD PTR [rbp+0x0],ax
  4292df:	jmp    0x427280
  4292e4:	cmp    ebx,0xaf
  4292ea:	je     0x4292f8
  4292ec:	cmp    ebx,0x100
  4292f2:	jne    0x42989b
  4292f8:	lea    rdx,[rsp+0x100]
  429300:	mov    rcx,r12
  429303:	call   0x4149a0
  429308:	lea    r9,[rbp+0x8]
  42930c:	mov    r8,rbp
  42930f:	mov    rdx,rax
  429312:	jmp    0x4287d5
  429317:	cmp    ebx,0xaf
  42931d:	je     0x42932b
  42931f:	cmp    ebx,0x100
  429325:	jne    0x42998a
  42932b:	cvtss2sd xmm0,xmm0
  42932f:	lea    rsi,[rsp+0x100]
  429337:	lea    rdx,[rip+0x115b1]        # 0x43a8ef
  42933e:	movapd xmm2,xmm0
  429342:	movq   r8,xmm0
  429347:	mov    rcx,rsi
  42934a:	call   0x42d648
  42934f:	jmp    0x4287cb
  429354:	pxor   xmm0,xmm0
  429358:	mov    esi,0x4
  42935d:	pxor   xmm5,xmm5
  429361:	cvtsi2sd xmm0,r8
  429366:	divsd  xmm0,QWORD PTR [rip+0x121aa]        # 0x43b518
  42936e:	cvtsd2ss xmm5,xmm0
  429372:	movss  DWORD PTR [rbp+0x0],xmm5
  429377:	jmp    0x427280
  42937c:	pxor   xmm1,xmm1
  429380:	ucomiss xmm0,xmm1
  429383:	setp   al
  429386:	mov    edx,0x1
  42938b:	mov    esi,0x1
  429390:	cmovne eax,edx
  429393:	cmp    ebx,0x3c
  429396:	mov    BYTE PTR [rbp+0x0],al
  429399:	sete   al
  42939c:	jmp    0x427328
  4293a1:	mov    eax,0x80000000
  4293a6:	mov    edx,0xffffffff
  4293ab:	add    rax,r8
  4293ae:	cmp    rax,rdx
  4293b1:	ja     0x42ab2b
  4293b7:	mov    DWORD PTR [rbp+0x0],r8d
  4293bb:	mov    esi,0x4
  4293c0:	jmp    0x427280
  4293c5:	mov    DWORD PTR [rbp+0x0],r8d
  4293c9:	mov    esi,0x4
  4293ce:	jmp    0x427280
  4293d3:	mov    eax,r8d
  4293d6:	mov    edx,0x68db8bad
  4293db:	sar    r8d,0x1f
  4293df:	imul   edx
  4293e1:	mov    eax,edx
  4293e3:	sar    eax,0xc
  4293e6:	sub    eax,r8d
  4293e9:	cmp    eax,0xffff
  4293ee:	ja     0x42a68e
  4293f4:	mov    WORD PTR [rbp+0x0],ax
  4293f8:	mov    esi,0x2
  4293fd:	jmp    0x427280
  429402:	cmp    ebx,0xaf
  429408:	je     0x429416
  42940a:	cmp    ebx,0x100
  429410:	jne    0x4297b2
  429416:	lea    rsi,[rsp+0x100]
  42941e:	mov    rcx,r12
  429421:	mov    rdx,rsi
  429424:	call   0x414a20
  429429:	test   eax,eax
  42942b:	jns    0x4287cb
  429431:	or     esi,0xffffffff
  429434:	jmp    0x427280
  429439:	nop    DWORD PTR [rax+0x0]
  429440:	ucomisd xmm0,QWORD PTR [rip+0x12180]        # 0x43b5c8
  429448:	ja     0x42a5ab
  42944e:	movsd  xmm1,QWORD PTR [rip+0x1217a]        # 0x43b5d0
  429456:	ucomisd xmm1,xmm0
  42945a:	ja     0x42a91f
  429460:	mulsd  xmm0,QWORD PTR [rip+0x120b0]        # 0x43b518
  429468:	mov    esi,0x4
  42946d:	cvttsd2si eax,xmm0
  429471:	mov    DWORD PTR [rbp+0x0],eax
  429474:	jmp    0x427280
  429479:	cmp    ebx,0xaf
  42947f:	je     0x42948d
  429481:	cmp    ebx,0x100
  429487:	jne    0x42983a
  42948d:	lea    rsi,[rsp+0x100]
  429495:	movapd xmm2,xmm0
  429499:	movq   r8,xmm0
  42949e:	lea    rdx,[rip+0x11454]        # 0x43a8f9
  4294a5:	mov    rcx,rsi
  4294a8:	call   0x42d648
  4294ad:	jmp    0x4287cb
  4294b2:	lea    rax,[r8+0x270f]
  4294b9:	cmp    rax,0x2710270e
  4294bf:	ja     0x42a9c9
  4294c5:	mov    eax,r8d
  4294c8:	mov    edx,0x68db8bad
  4294cd:	sar    r8d,0x1f
  4294d1:	imul   edx
  4294d3:	mov    esi,0x2
  4294d8:	sar    edx,0xc
  4294db:	sub    edx,r8d
  4294de:	mov    WORD PTR [rbp+0x0],dx
  4294e2:	jmp    0x427280
  4294e7:	pxor   xmm1,xmm1
  4294eb:	ucomisd xmm0,xmm1
  4294ef:	jmp    0x429383
  4294f4:	mov    rax,QWORD PTR [r12]
  4294f8:	xor    r8d,r8d
  4294fb:	mov    edx,0x14
  429500:	mov    rcx,rbp
  429503:	mov    QWORD PTR [rbp+0x0],rax
  429507:	mov    rax,QWORD PTR [r12+0x8]
  42950c:	mov    QWORD PTR [rbp+0x8],rax
  429510:	mov    rax,QWORD PTR [r12+0x10]
  429515:	mov    QWORD PTR [rbp+0x10],rax
  429519:	mov    rax,QWORD PTR [r12+0x18]
  42951e:	mov    QWORD PTR [rbp+0x18],rax
  429522:	movzx  eax,WORD PTR [r12+0x20]
  429528:	mov    WORD PTR [rbp+0x20],ax
  42952c:	movzx  eax,BYTE PTR [r12+0x22]
  429532:	mov    BYTE PTR [rbp+0x22],al
  429535:	call   0x414d70
  42953a:	test   eax,eax
  42953c:	mov    esi,eax
  42953e:	js     0x427280
  429544:	cmp    WORD PTR [rbp+0x2],0x0
  429549:	jne    0x428ed0
  42954f:	movzx  eax,BYTE PTR [rbp+0x4]
  429553:	mov    esi,0x8
  429558:	shl    eax,0x8
  42955b:	mov    edx,eax
  42955d:	movzx  eax,BYTE PTR [rbp+0x5]
  429561:	add    eax,edx
  429563:	shl    eax,0x8
  429566:	mov    edx,eax
  429568:	movzx  eax,BYTE PTR [rbp+0x6]
  42956c:	add    eax,edx
  42956e:	movzx  edx,BYTE PTR [rbp+0x7]
  429572:	shl    eax,0x8
  429575:	add    eax,edx
  429577:	shl    rax,0x20
  42957b:	mov    rcx,rax
  42957e:	movzx  eax,BYTE PTR [rbp+0x8]
  429582:	shl    eax,0x8
  429585:	mov    edx,eax
  429587:	movzx  eax,BYTE PTR [rbp+0x9]
  42958b:	add    eax,edx
  42958d:	shl    eax,0x8
  429590:	mov    edx,eax
  429592:	movzx  eax,BYTE PTR [rbp+0xa]
  429596:	add    eax,edx
  429598:	movzx  edx,BYTE PTR [rbp+0xb]
  42959c:	shl    eax,0x8
  42959f:	add    eax,edx
  4295a1:	add    rax,rcx
  4295a4:	mov    QWORD PTR [rbp+0x0],rax
  4295a8:	jmp    0x427280
  4295ad:	mov    rax,r8
  4295b0:	movabs rdx,0x346dc5d63886594b
  4295ba:	sar    r8,0x3f
  4295be:	imul   rdx
  4295c1:	sar    rdx,0xb
  4295c5:	sub    rdx,r8
  4295c8:	js     0x42aa05
  4295ce:	mov    QWORD PTR [rbp+0x0],rdx
  4295d2:	mov    esi,0x8
  4295d7:	jmp    0x427280
  4295dc:	mov    eax,r8d
  4295df:	mov    edx,0x68db8bad
  4295e4:	sar    r8d,0x1f
  4295e8:	imul   edx
  4295ea:	sar    edx,0xc
  4295ed:	sub    edx,r8d
  4295f0:	js     0x42a9fb
  4295f6:	movsxd rax,edx
  4295f9:	mov    esi,0x8
  4295fe:	mov    QWORD PTR [rbp+0x0],rax
  429602:	jmp    0x427280
  429607:	mov    rax,QWORD PTR [r12]
  42960b:	mov    r8d,0x4
  429611:	mov    edx,0xa
  429616:	mov    rcx,rbp
  429619:	mov    QWORD PTR [rbp+0x0],rax
  42961d:	mov    rax,QWORD PTR [r12+0x8]
  429622:	mov    QWORD PTR [rbp+0x8],rax
  429626:	mov    rax,QWORD PTR [r12+0x10]
  42962b:	mov    QWORD PTR [rbp+0x10],rax
  42962f:	mov    rax,QWORD PTR [r12+0x18]
  429634:	mov    QWORD PTR [rbp+0x18],rax
  429638:	movzx  eax,WORD PTR [r12+0x20]
  42963e:	mov    WORD PTR [rbp+0x20],ax
  429642:	movzx  eax,BYTE PTR [r12+0x22]
  429648:	mov    BYTE PTR [rbp+0x22],al
  42964b:	call   0x414d70
  429650:	test   eax,eax
  429652:	mov    esi,eax
  429654:	js     0x427280
  42965a:	cmp    BYTE PTR [rbp+0x3],0x0
  42965e:	jne    0x428ed0
  429664:	movzx  edx,BYTE PTR [rbp+0x4]
  429668:	movzx  r8d,BYTE PTR [rbp+0x2]
  42966d:	xor    eax,eax
  42966f:	mov    ecx,edx
  429671:	movzx  edx,BYTE PTR [rbp+0x5]
  429675:	test   r8b,r8b
  429678:	setne  al
  42967b:	shl    ecx,0x8
  42967e:	add    edx,ecx
  429680:	mov    ecx,edx
  429682:	movzx  edx,BYTE PTR [rbp+0x6]
  429686:	shl    ecx,0x8
  429689:	add    edx,ecx
  42968b:	movzx  ecx,BYTE PTR [rbp+0x7]
  42968f:	shl    edx,0x8
  429692:	add    edx,ecx
  429694:	mov    ecx,eax
  429696:	neg    ecx
  429698:	xor    edx,ecx
  42969a:	add    eax,edx
  42969c:	cdq    
  42969d:	xor    r8d,edx
  4296a0:	and    r8d,0x1
  4296a4:	jne    0x428ed0
  4296aa:	mov    DWORD PTR [rbp+0x0],eax
  4296ad:	mov    esi,0x4
  4296b2:	jmp    0x427280
  4296b7:	ucomisd xmm0,QWORD PTR [rip+0x11ef1]        # 0x43b5b0
  4296bf:	ja     0x42a533
  4296c5:	pxor   xmm1,xmm1
  4296c9:	ucomisd xmm1,xmm0
  4296cd:	ja     0x42ab35
  4296d3:	movsd  xmm1,QWORD PTR [rip+0x11ec5]        # 0x43b5a0
  4296db:	ucomisd xmm0,xmm1
  4296df:	jae    0x429d37
  4296e5:	cvttsd2si rax,xmm0
  4296ea:	mov    QWORD PTR [rbp+0x0],rax
  4296ee:	mov    esi,0x8
  4296f3:	jmp    0x427280
  4296f8:	cmp    ebx,0xaf
  4296fe:	je     0x42970c
  429700:	cmp    ebx,0x100
  429706:	jne    0x429afe
  42970c:	test   r8d,r8d
  42970f:	js     0x429e75
  429715:	mov    eax,r8d
  429718:	mov    edx,0x51eb851f
  42971d:	sar    r8d,0x1f
  429721:	imul   edx
  429723:	lea    rsi,[rsp+0x100]
  42972b:	mov    rcx,rsi
  42972e:	sar    edx,0x4
  429731:	mov    r9d,edx
  429734:	sub    r9d,r8d
  429737:	add    r9d,0x1
  42973b:	sar    r9d,1
  42973e:	mov    eax,r9d
  429741:	mov    edx,0x51eb851f
  429746:	imul   edx
  429748:	mov    eax,r9d
  42974b:	sar    eax,0x1f
  42974e:	sar    edx,0x5
  429751:	mov    r8d,edx
  429754:	lea    rdx,[rip+0x1116f]        # 0x43a8ca
  42975b:	sub    r8d,eax
  42975e:	imul   eax,r8d,0x64
  429762:	sub    r9d,eax
  429765:	call   0x42d648
  42976a:	jmp    0x4287cb
  42976f:	ucomiss xmm0,DWORD PTR [rip+0x11dd2]        # 0x43b548
  429776:	ja     0x42a58d
  42977c:	pxor   xmm1,xmm1
  429780:	ucomiss xmm1,xmm0
  429783:	ja     0x42a901
  429789:	ucomiss xmm0,DWORD PTR [rip+0x11db0]        # 0x43b540
  429790:	jae    0x429d61
  429796:	cvttss2si rax,xmm0
  42979b:	mov    QWORD PTR [rbp+0x0],rax
  42979f:	mov    esi,0x8
  4297a4:	jmp    0x427280
  4297a9:	cmp    ebx,0x23
  4297ac:	je     0x429416
  4297b2:	mov    esi,0xfffffffe
  4297b7:	jmp    0x427280
  4297bc:	lea    rbx,[rsp+0x100]
  4297c4:	mov    rcx,r12
  4297c7:	mov    rdx,rbx
  4297ca:	call   0x414a20
  4297cf:	test   eax,eax
  4297d1:	js     0x42a8ef
  4297d7:	mov    rcx,rbx
  4297da:	mov    esi,0x4
  4297df:	call   0x42d750
  4297e4:	pxor   xmm3,xmm3
  4297e8:	cvtsd2ss xmm3,xmm0
  4297ec:	movss  DWORD PTR [rbp+0x0],xmm3
  4297f1:	jmp    0x427280
  4297f6:	ucomisd xmm0,QWORD PTR [rip+0x11dba]        # 0x43b5b8
  4297fe:	ja     0x42a583
  429804:	movsd  xmm1,QWORD PTR [rip+0x11db4]        # 0x43b5c0
  42980c:	ucomisd xmm1,xmm0
  429810:	ja     0x42a8f7
  429816:	mulsd  xmm0,QWORD PTR [rip+0x11cfa]        # 0x43b518
  42981e:	mov    esi,0x8
  429823:	cvttsd2si rax,xmm0
  429828:	mov    QWORD PTR [rbp+0x0],rax
  42982c:	jmp    0x427330
  429831:	cmp    ebx,0x23
  429834:	je     0x42948d
  42983a:	mov    esi,0xfffffffe
  42983f:	jmp    0x427280
  429844:	ucomisd xmm0,QWORD PTR [rip+0x11d24]        # 0x43b570
  42984c:	jb     0x42a13b
  429852:	movsd  xmm1,QWORD PTR [rip+0x11d1e]        # 0x43b578
  42985a:	ucomisd xmm1,xmm0
  42985e:	jb     0x42a8db
  429864:	cvttsd2si eax,xmm0
  429868:	mov    esi,0x2
  42986d:	mov    WORD PTR [rbp+0x0],ax
  429871:	jmp    0x427280
  429876:	sub    r9d,0x1
  42987a:	cmp    r9d,0x22
  42987e:	je     0x429db6
  429884:	add    r12,0x1
  429888:	movsx  edx,BYTE PTR [r12+rax*1]
  42988d:	jmp    0x427f87
  429892:	cmp    ebx,0x23
  429895:	je     0x4292f8
  42989b:	mov    esi,0xfffffffe
  4298a0:	jmp    0x427280
  4298a5:	mov    rax,QWORD PTR [r12]
  4298a9:	mov    r8d,0x4
  4298af:	mov    edx,0x14
  4298b4:	mov    rcx,rbp
  4298b7:	mov    QWORD PTR [rbp+0x0],rax
  4298bb:	mov    rax,QWORD PTR [r12+0x8]
  4298c0:	mov    QWORD PTR [rbp+0x8],rax
  4298c4:	mov    rax,QWORD PTR [r12+0x10]
  4298c9:	mov    QWORD PTR [rbp+0x10],rax
  4298cd:	mov    rax,QWORD PTR [r12+0x18]
  4298d2:	mov    QWORD PTR [rbp+0x18],rax
  4298d6:	movzx  eax,WORD PTR [r12+0x20]
  4298dc:	mov    WORD PTR [rbp+0x20],ax
  4298e0:	movzx  eax,BYTE PTR [r12+0x22]
  4298e6:	mov    BYTE PTR [rbp+0x22],al
  4298e9:	call   0x414d70
  4298ee:	test   eax,eax
  4298f0:	mov    esi,eax
  4298f2:	js     0x427280
  4298f8:	cmp    BYTE PTR [rbp+0x3],0x0
  4298fc:	jne    0x428ed0
  429902:	movzx  eax,BYTE PTR [rbp+0x4]
  429906:	movzx  r8d,BYTE PTR [rbp+0x2]
  42990b:	shl    eax,0x8
  42990e:	mov    edx,eax
  429910:	movzx  eax,BYTE PTR [rbp+0x5]
  429914:	add    eax,edx
  429916:	shl    eax,0x8
  429919:	mov    edx,eax
  42991b:	movzx  eax,BYTE PTR [rbp+0x6]
  42991f:	add    eax,edx
  429921:	movzx  edx,BYTE PTR [rbp+0x7]
  429925:	shl    eax,0x8
  429928:	lea    ecx,[rax+rdx*1]
  42992b:	movzx  edx,BYTE PTR [rbp+0x8]
  42992f:	xor    eax,eax
  429931:	shl    rcx,0x20
  429935:	test   r8b,r8b
  429938:	mov    r9,rcx
  42993b:	setne  al
  42993e:	mov    ecx,edx
  429940:	movzx  edx,BYTE PTR [rbp+0x9]
  429944:	shl    ecx,0x8
  429947:	add    edx,ecx
  429949:	mov    ecx,edx
  42994b:	movzx  edx,BYTE PTR [rbp+0xa]
  42994f:	shl    ecx,0x8
  429952:	add    edx,ecx
  429954:	movzx  ecx,BYTE PTR [rbp+0xb]
  429958:	shl    edx,0x8
  42995b:	add    edx,ecx
  42995d:	lea    rcx,[r9+rdx*1]
  429961:	mov    rdx,rax
  429964:	neg    rdx
  429967:	xor    rdx,rcx
  42996a:	add    rax,rdx
  42996d:	cqo    
  42996f:	xor    r8,rdx
  429972:	and    r8d,0x1
  429976:	je     0x4291f5
  42997c:	jmp    0x428ed0
  429981:	cmp    ebx,0x23
  429984:	je     0x42932b
  42998a:	mov    esi,0xfffffffe
  42998f:	jmp    0x427280
  429994:	ucomiss xmm0,DWORD PTR [rip+0x11b8d]        # 0x43b528
  42999b:	jb     0x42a145
  4299a1:	movss  xmm1,DWORD PTR [rip+0x11b83]        # 0x43b52c
  4299a9:	ucomiss xmm1,xmm0
  4299ac:	jb     0x42aa3c
  4299b2:	cvttss2si eax,xmm0
  4299b6:	mov    esi,0x2
  4299bb:	mov    WORD PTR [rbp+0x0],ax
  4299bf:	jmp    0x427280
  4299c4:	movss  DWORD PTR [rbp+0x0],xmm0
  4299c9:	mov    esi,0x4
  4299ce:	jmp    0x427280
  4299d3:	pxor   xmm0,xmm0
  4299d7:	mov    esi,0x4
  4299dc:	pxor   xmm4,xmm4
  4299e0:	cvtsi2sd xmm0,r8d
  4299e5:	divsd  xmm0,QWORD PTR [rip+0x11b2b]        # 0x43b518
  4299ed:	cvtsd2ss xmm4,xmm0
  4299f1:	movss  DWORD PTR [rbp+0x0],xmm4
  4299f6:	jmp    0x427280
  4299fb:	test   r8,r8
  4299fe:	mov    esi,0x1
  429a03:	setne  BYTE PTR [rbp+0x0]
  429a07:	cmp    ebx,0x3c
  429a0a:	sete   al
  429a0d:	jmp    0x427328
  429a12:	mov    rax,QWORD PTR [r12]
  429a16:	xor    r8d,r8d
  429a19:	mov    edx,0x5
  429a1e:	mov    rcx,rbp
  429a21:	mov    QWORD PTR [rbp+0x0],rax
  429a25:	mov    rax,QWORD PTR [r12+0x8]
  429a2a:	mov    QWORD PTR [rbp+0x8],rax
  429a2e:	mov    rax,QWORD PTR [r12+0x10]
  429a33:	mov    QWORD PTR [rbp+0x10],rax
  429a37:	mov    rax,QWORD PTR [r12+0x18]
  429a3c:	mov    QWORD PTR [rbp+0x18],rax
  429a40:	movzx  eax,WORD PTR [r12+0x20]
  429a46:	mov    WORD PTR [rbp+0x20],ax
  429a4a:	movzx  eax,BYTE PTR [r12+0x22]
  429a50:	mov    BYTE PTR [rbp+0x22],al
  429a53:	call   0x414d70
  429a58:	test   eax,eax
  429a5a:	mov    esi,eax
  429a5c:	js     0x427280
  429a62:	cmp    BYTE PTR [rbp+0x3],0x0
  429a66:	jne    0x428ed0
  429a6c:	movzx  edx,BYTE PTR [rbp+0x2]
  429a70:	movzx  r8d,BYTE PTR [rbp+0x4]
  429a75:	xor    eax,eax
  429a77:	movzx  ecx,BYTE PTR [rbp+0x5]
  429a7b:	test   dl,dl
  429a7d:	setne  al
  429a80:	shl    r8d,0x8
  429a84:	add    r8d,ecx
  429a87:	mov    ecx,eax
  429a89:	neg    ecx
  429a8b:	xor    ecx,r8d
  429a8e:	add    eax,ecx
  429a90:	mov    ecx,eax
  429a92:	sar    ecx,0xf
  429a95:	xor    edx,ecx
  429a97:	and    edx,0x1
  429a9a:	jne    0x428ed0
  429aa0:	mov    WORD PTR [rbp+0x0],ax
  429aa4:	mov    esi,0x2
  429aa9:	jmp    0x427280
  429aae:	test   r8d,r8d
  429ab1:	mov    esi,0x1
  429ab6:	setne  BYTE PTR [rbp+0x0]
  429aba:	cmp    ebx,0x3c
  429abd:	sete   al
  429ac0:	jmp    0x427328
  429ac5:	ucomiss xmm0,DWORD PTR [rip+0x11a54]        # 0x43b520
  429acc:	jb     0x42a915
  429ad2:	movss  xmm1,DWORD PTR [rip+0x11a56]        # 0x43b530
  429ada:	ucomiss xmm1,xmm0
  429add:	jb     0x42a90b
  429ae3:	cvttss2si eax,xmm0
  429ae7:	mov    esi,0x2
  429aec:	mov    WORD PTR [rbp+0x0],ax
  429af0:	jmp    0x427280
  429af5:	cmp    ebx,0x23
  429af8:	je     0x42970c
  429afe:	mov    esi,0xfffffffe
  429b03:	jmp    0x427280
  429b08:	mov    eax,r8d
  429b0b:	mov    edx,0x68db8bad
  429b10:	sar    r8d,0x1f
  429b14:	imul   edx
  429b16:	mov    eax,edx
  429b18:	sar    eax,0xc
  429b1b:	sub    eax,r8d
  429b1e:	lea    edx,[rax+0x8000]
  429b24:	cmp    edx,0xffff
  429b2a:	ja     0x42a6c0
  429b30:	mov    WORD PTR [rbp+0x0],ax
  429b34:	mov    esi,0x2
  429b39:	jmp    0x427280
  429b3e:	pxor   xmm5,xmm5
  429b42:	mov    esi,0x4
  429b47:	cvtsd2ss xmm5,xmm0
  429b4b:	movss  DWORD PTR [rbp+0x0],xmm5
  429b50:	jmp    0x427280
  429b55:	lea    rax,[r8+0x1388270f]
  429b5c:	cmp    rax,0x2710270e
  429b62:	ja     0x42ab21
  429b68:	mov    eax,r8d
  429b6b:	mov    edx,0x68db8bad
  429b70:	sar    r8d,0x1f
  429b74:	imul   edx
  429b76:	mov    esi,0x2
  429b7b:	sar    edx,0xc
  429b7e:	sub    edx,r8d
  429b81:	mov    WORD PTR [rbp+0x0],dx
  429b85:	jmp    0x427280
  429b8a:	cmp    ebx,0x7f
  429b8d:	je     0x42886a
  429b93:	jmp    0x4285ca
  429b98:	call   0x425510
  429b9d:	test   al,al
  429b9f:	jne    0x429f1e
  429ba5:	movzx  eax,BYTE PTR [rsi]
  429ba8:	test   al,al
  429baa:	je     0x429bd7
  429bac:	sub    eax,0x30
  429baf:	cmp    eax,0x9
  429bb2:	ja     0x4280f8
  429bb8:	mov    rdx,rsi
  429bbb:	jmp    0x429bcc
  429bbd:	nop    DWORD PTR [rax]
  429bc0:	sub    eax,0x30
  429bc3:	cmp    eax,0x9
  429bc6:	ja     0x4280f8
  429bcc:	add    rdx,0x1
  429bd0:	movzx  eax,BYTE PTR [rdx]
  429bd3:	test   al,al
  429bd5:	jne    0x429bc0
  429bd7:	xor    eax,eax
  429bd9:	or     rcx,0xffffffffffffffff
  429bdd:	mov    rdi,rsi
  429be0:	repnz scas al,BYTE PTR es:[rdi]
  429be2:	mov    rax,rcx
  429be5:	not    rax
  429be8:	sub    rax,0x1
  429bec:	cmp    rax,0x2
  429bf0:	je     0x429bfc
  429bf2:	cmp    rax,0x4
  429bf6:	jne    0x4280f8
  429bfc:	mov    rcx,QWORD PTR [rsp+0x80]
  429c04:	call   0x42d748
  429c09:	lea    edx,[rax-0x1]
  429c0c:	cmp    edx,0x1e
  429c0f:	ja     0x429c18
  429c11:	mov    DWORD PTR [rsp+0xe8],eax
  429c18:	mov    rcx,rsi
  429c1b:	add    DWORD PTR [rsp+0x78],0x1
  429c20:	add    r13d,0x1
  429c24:	call   0x42d748
  429c29:	mov    rdx,rbx
  429c2c:	mov    ecx,eax
  429c2e:	call   0x425630
  429c33:	cmp    ebp,0x1
  429c36:	sbb    r12d,r12d
  429c39:	and    r12d,0x2
  429c3d:	jmp    0x4280fe
  429c42:	mov    edx,DWORD PTR [r15]
  429c45:	test   edx,edx
  429c47:	jne    0x429fc0
  429c4d:	mov    rcx,QWORD PTR [rsp+0x90]
  429c55:	mov    esi,0xfffffffd
  429c5a:	call   0x42d6f8
  429c5f:	jmp    0x427280
  429c64:	mov    rcx,rsi
  429c67:	call   0x425510
  429c6c:	test   al,al
  429c6e:	jne    0x429e01
  429c74:	movzx  eax,BYTE PTR [rsi]
  429c77:	test   al,al
  429c79:	je     0x429ca3
  429c7b:	sub    eax,0x30
  429c7e:	cmp    eax,0x9
  429c81:	ja     0x4280f8
  429c87:	mov    rdx,rsi
  429c8a:	jmp    0x429c98
  429c8c:	sub    eax,0x30
  429c8f:	cmp    eax,0x9
  429c92:	ja     0x4280f8
  429c98:	add    rdx,0x1
  429c9c:	movzx  eax,BYTE PTR [rdx]
  429c9f:	test   al,al
  429ca1:	jne    0x429c8c
  429ca3:	cmp    DWORD PTR [rsp+0x78],0x0
  429ca8:	setne  r14b
  429cac:	test   r13d,r13d
  429caf:	setne  BYTE PTR [rsp+0x7c]
  429cb4:	je     0x429cbf
  429cb6:	test   r14b,r14b
  429cb9:	jne    0x4280f8
  429cbf:	xor    eax,eax
  429cc1:	or     rcx,0xffffffffffffffff
  429cc5:	mov    rdi,rsi
  429cc8:	repnz scas al,BYTE PTR es:[rdi]
  429cca:	mov    rax,rcx
  429ccd:	not    rax
  429cd0:	sub    rax,0x1
  429cd4:	je     0x4280f8
  429cda:	cmp    rax,0x2
  429cde:	jbe    0x42a4bc
  429ce4:	cmp    rax,0x4
  429ce8:	jne    0x4280f8
  429cee:	mov    rcx,rsi
  429cf1:	add    r13d,0x1
  429cf5:	call   0x42d748
  429cfa:	mov    rdx,rbx
  429cfd:	mov    ecx,eax
  429cff:	call   0x425630
  429d04:	test   ebp,ebp
  429d06:	je     0x4280fe
  429d0c:	test   r14b,r14b
  429d0f:	mov    eax,0x0
  429d14:	cmovne r12d,eax
  429d18:	jmp    0x4280fe
  429d1d:	nop    DWORD PTR [rax]
  429d20:	cmp    ebx,0x34
  429d23:	je     0x429144
  429d29:	cmp    ebx,0x38
  429d2c:	je     0x429144
  429d32:	jmp    0x429153
  429d37:	subsd  xmm0,xmm1
  429d3b:	cvttsd2si rax,xmm0
  429d40:	mov    QWORD PTR [rbp+0x0],rax
  429d44:	movabs rax,0x8000000000000000
  429d4e:	xor    QWORD PTR [rbp+0x0],rax
  429d52:	jmp    0x4296ee
  429d57:	mov    esi,0x10
  429d5c:	jmp    0x427280
  429d61:	subss  xmm0,DWORD PTR [rip+0x117d7]        # 0x43b540
  429d69:	cvttss2si rax,xmm0
  429d6e:	mov    QWORD PTR [rbp+0x0],rax
  429d72:	movabs rax,0x8000000000000000
  429d7c:	xor    QWORD PTR [rbp+0x0],rax
  429d80:	jmp    0x42979f
  429d85:	mov    rdx,QWORD PTR [rsp+0xd8]
  429d8d:	nop    DWORD PTR [rax]
  429d90:	lea    r8d,[rax+0x1]
  429d94:	add    rdx,0x1
  429d98:	mov    BYTE PTR [rsp+rax*1+0x100],0x30
  429da0:	cmp    rdx,0x3
  429da4:	mov    eax,r8d
  429da7:	jbe    0x429d90
  429da9:	mov    QWORD PTR [rsp+0xd8],rdx
  429db1:	jmp    0x427d2e
  429db6:	mov    esi,0xfffffffd
  429dbb:	jmp    0x427280
  429dc0:	cmp    DWORD PTR [r15],0x0
  429dc4:	jne    0x42a419
  429dca:	mov    rdx,rbx
  429dcd:	mov    rcx,rsi
  429dd0:	call   0x425220
  429dd5:	test   eax,eax
  429dd7:	js     0x4280f8
  429ddd:	add    ebp,0x1
  429de0:	mov    r12d,0x2
  429de6:	jmp    0x4280fe
  429deb:	mov    rax,QWORD PTR [rsp+0xd0]
  429df3:	mov    esi,0x8
  429df8:	mov    QWORD PTR [rbp+0x0],rax
  429dfc:	jmp    0x427330
  429e01:	test   ebp,ebp
  429e03:	jne    0x4280f8
  429e09:	mov    rdx,rbx
  429e0c:	mov    rcx,rsi
  429e0f:	call   0x425220
  429e14:	test   eax,eax
  429e16:	js     0x4280f8
  429e1c:	cmp    DWORD PTR [rsp+0x78],0x0
  429e21:	je     0x429e2b
  429e23:	test   r13d,r13d
  429e26:	je     0x429e2b
  429e28:	xor    r12d,r12d
  429e2b:	mov    ebp,0x1
  429e30:	jmp    0x4280fe
  429e35:	lea    r8,[rip+0x1089c]        # 0x43a6d8
  429e3c:	lea    rcx,[rip+0x10596]        # 0x43a3d9
  429e43:	mov    r9d,r12d
  429e46:	mov    edx,0x7ee5
  429e4b:	call   0x40d350
  429e50:	jmp    0x427ea2
  429e55:	xor    edx,edx
  429e57:	jmp    0x4273f3
  429e5c:	neg    rcx
  429e5f:	mov    edx,0x1
  429e64:	mov    r8,rcx
  429e67:	xor    ecx,ecx
  429e69:	call   0x4255b0
  429e6e:	mov    esi,eax
  429e70:	jmp    0x427280
  429e75:	mov    eax,r8d
  429e78:	mov    ecx,0xffffffce
  429e7d:	lea    rsi,[rsp+0x100]
  429e85:	cdq    
  429e86:	mov    BYTE PTR [rsp+0x100],0x2d
  429e8e:	idiv   ecx
  429e90:	lea    rcx,[rsi+0x1]
  429e94:	add    eax,0x1
  429e97:	sar    eax,1
  429e99:	mov    r9d,eax
  429e9c:	jmp    0x42973e
  429ea1:	xor    eax,eax
  429ea3:	cmp    BYTE PTR [r12+0x18],0x2d
  429ea9:	sete   al
  429eac:	add    eax,0x24
  429eaf:	cmp    r9d,eax
  429eb2:	jbe    0x429db6
  429eb8:	cmp    BYTE PTR [r12+rax*1],0x7d
  429ebd:	jne    0x429db6
  429ec3:	add    r12,0x1
  429ec7:	jmp    0x427f5e
  429ecc:	cmp    QWORD PTR [rsp+0x100],0x0
  429ed5:	je     0x427b1f
  429edb:	mov    esi,0xfffffffb
  429ee0:	jmp    0x427280
  429ee5:	mov    esi,eax
  429ee7:	jmp    0x427280
  429eec:	neg    r8d
  429eef:	mov    edx,0x1
  429ef4:	mov    ecx,0x4
  429ef9:	call   0x425560
  429efe:	mov    esi,eax
  429f00:	jmp    0x427280
  429f05:	neg    r8
  429f08:	mov    edx,0x1
  429f0d:	mov    ecx,0x4
  429f12:	call   0x4255b0
  429f17:	mov    esi,eax
  429f19:	jmp    0x427280
  429f1e:	mov    rdx,rbx
  429f21:	mov    rcx,rsi
  429f24:	call   0x425220
  429f29:	test   eax,eax
  429f2b:	js     0x42a436
  429f31:	mov    rcx,QWORD PTR [rsp+0x80]
  429f39:	call   0x42d748
  429f3e:	lea    edx,[rax-0x1]
  429f41:	cmp    edx,0x1e
  429f44:	ja     0x429f4d
  429f46:	mov    DWORD PTR [rsp+0xe8],eax
  429f4d:	add    DWORD PTR [rsp+0x78],0x1
  429f52:	add    ebp,0x1
  429f55:	cmp    r13d,0x1
  429f59:	sbb    r12d,r12d
  429f5c:	and    r12d,0x2
  429f60:	jmp    0x4280fe
  429f65:	mov    esi,r9d
  429f68:	jmp    0x427a30
  429f6d:	mov    rdx,rsi
  429f70:	mov    eax,r9d
  429f73:	xor    r14d,r14d
  429f76:	xor    r11d,r11d
  429f79:	xor    r12d,r12d
  429f7c:	xor    edi,edi
  429f7e:	jmp    0x429f9b
  429f80:	cmp    al,0x2d
  429f82:	je     0x429fa3
  429f84:	cmp    al,0x2e
  429f86:	jne    0x429fdd
  429f88:	add    r11d,0x1
  429f8c:	add    rdx,0x1
  429f90:	movzx  eax,BYTE PTR [rdx]
  429f93:	test   al,al
  429f95:	je     0x42a2f2
  429f9b:	lea    ecx,[rax-0x2f]
  429f9e:	cmp    cl,0xa
  429fa1:	ja     0x429f80
  429fa3:	cmp    al,0x2f
  429fa5:	jne    0x429fac
  429fa7:	add    edi,0x1
  429faa:	jmp    0x429f8c
  429fac:	cmp    al,0x2d
  429fae:	je     0x429fba
  429fb0:	cmp    al,0x2e
  429fb2:	je     0x429f88
  429fb4:	add    r14d,0x1
  429fb8:	jmp    0x429f8c
  429fba:	add    r12d,0x1
  429fbe:	jmp    0x429f8c
  429fc0:	lea    r8,[rip+0x108b1]        # 0x43a878
  429fc7:	lea    rcx,[rip+0x1040b]        # 0x43a3d9
  429fce:	mov    edx,0x8a15
  429fd3:	call   0x40d350
  429fd8:	jmp    0x429c4d
  429fdd:	cmp    DWORD PTR [rsp+0x7c],0x9
  429fe2:	ja     0x42a1b9
  429fe8:	movzx  eax,BYTE PTR [rsi+0x1]
  429fec:	sub    eax,0x30
  429fef:	cmp    eax,0x9
  429ff2:	ja     0x42a1b9
  429ff8:	cmp    BYTE PTR [rsi+0x2],0x2d
  429ffc:	lea    rdi,[rsi+0x2]
  42a000:	je     0x42a14f
  42a006:	mov    r14,QWORD PTR [rsp+0x88]
  42a00e:	mov    r8d,0x4
  42a014:	mov    rdx,rdi
  42a017:	mov    rcx,r14
  42a01a:	call   0x4248b0
  42a01f:	xor    edx,edx
  42a021:	mov    rcx,r14
  42a024:	call   0x425220
  42a029:	test   eax,eax
  42a02b:	js     0x42a1b9
  42a031:	movzx  eax,BYTE PTR [rsi+0x5]
  42a035:	sub    eax,0x30
  42a038:	cmp    eax,0x9
  42a03b:	ja     0x42a1b9
  42a041:	movzx  eax,BYTE PTR [rsi+0x6]
  42a045:	sub    eax,0x30
  42a048:	cmp    eax,0x9
  42a04b:	ja     0x42a1b9
  42a051:	movzx  eax,BYTE PTR [rsi+0x7]
  42a055:	test   al,al
  42a057:	je     0x42a075
  42a059:	sub    eax,0x30
  42a05c:	cmp    eax,0x9
  42a05f:	ja     0x42a1b9
  42a065:	movzx  eax,BYTE PTR [rsi+0x8]
  42a069:	sub    eax,0x30
  42a06c:	cmp    eax,0x9
  42a06f:	ja     0x42a1b9
  42a075:	cmp    DWORD PTR [r15],0x0
  42a079:	jne    0x42aaa4
  42a07f:	mov    r14,QWORD PTR [rsp+0xb0]
  42a087:	mov    rdx,rsi
  42a08a:	mov    r8d,0x3
  42a090:	mov    rcx,r14
  42a093:	call   0x4248b0
  42a098:	mov    rcx,r14
  42a09b:	call   0x42d748
  42a0a0:	lea    edx,[rax-0x1]
  42a0a3:	cmp    edx,0x1e
  42a0a6:	ja     0x42a11b
  42a0a8:	mov    DWORD PTR [rsp+0xe8],eax
  42a0af:	cmp    BYTE PTR [rsi+0x2],0x2d
  42a0b3:	je     0x42aa46
  42a0b9:	mov    rdx,rdi
  42a0bc:	mov    rdi,QWORD PTR [rsp+0x88]
  42a0c4:	mov    r8d,0x4
  42a0ca:	mov    rcx,rdi
  42a0cd:	call   0x4248b0
  42a0d2:	mov    rdx,rbx
  42a0d5:	mov    rcx,rdi
  42a0d8:	call   0x425220
  42a0dd:	test   eax,eax
  42a0df:	js     0x42a650
  42a0e5:	lea    rcx,[rsi+0x5]
  42a0e9:	call   0x42d748
  42a0ee:	cmp    DWORD PTR [r15],0x0
  42a0f2:	mov    esi,eax
  42a0f4:	je     0x42a111
  42a0f6:	lea    r8,[rip+0x106eb]        # 0x43a7e8
  42a0fd:	lea    rcx,[rip+0x102d5]        # 0x43a3d9
  42a104:	mov    r9d,eax
  42a107:	mov    edx,0xa8a5
  42a10c:	call   0x40d350
  42a111:	mov    rdx,rbx
  42a114:	mov    ecx,esi
  42a116:	call   0x425630
  42a11b:	xor    r12d,r12d
  42a11e:	jmp    0x4280fe
  42a123:	mov    DWORD PTR [rbp+0x0],r12d
  42a127:	mov    esi,0x4
  42a12c:	jmp    0x427280
  42a131:	mov    esi,0xfffffffb
  42a136:	jmp    0x427280
  42a13b:	mov    esi,0xfffffffb
  42a140:	jmp    0x427280
  42a145:	mov    esi,0xfffffffb
  42a14a:	jmp    0x427280
  42a14f:	mov    r14,QWORD PTR [rsp+0x88]
  42a157:	lea    rdx,[rsi+0x3]
  42a15b:	mov    r8d,0x4
  42a161:	mov    rcx,r14
  42a164:	call   0x4248b0
  42a169:	xor    edx,edx
  42a16b:	mov    rcx,r14
  42a16e:	call   0x425220
  42a173:	test   eax,eax
  42a175:	js     0x42a1b9
  42a177:	cmp    BYTE PTR [rsi+0x6],0x2d
  42a17b:	jne    0x42a1b9
  42a17d:	movzx  eax,BYTE PTR [rsi+0x7]
  42a181:	sub    eax,0x30
  42a184:	cmp    eax,0x9
  42a187:	ja     0x42a1b9
  42a189:	movzx  eax,BYTE PTR [rsi+0x8]
  42a18d:	sub    eax,0x30
  42a190:	cmp    eax,0x9
  42a193:	ja     0x42a1b9
  42a195:	movzx  eax,BYTE PTR [rsi+0x9]
  42a199:	test   al,al
  42a19b:	je     0x42a075
  42a1a1:	sub    eax,0x30
  42a1a4:	cmp    eax,0x9
  42a1a7:	ja     0x42a1b9
  42a1a9:	movzx  eax,BYTE PTR [rsi+0xa]
  42a1ad:	sub    eax,0x30
  42a1b0:	cmp    eax,0x9
  42a1b3:	jbe    0x42a075
  42a1b9:	mov    rcx,rsi
  42a1bc:	jmp    0x42a1d2
  42a1be:	lea    edx,[rax-0x30]
  42a1c1:	cmp    dl,0xa
  42a1c4:	jbe    0x42a1ce
  42a1c6:	cmp    al,0x2e
  42a1c8:	jne    0x42a897
  42a1ce:	add    rcx,0x1
  42a1d2:	movzx  eax,BYTE PTR [rcx]
  42a1d5:	test   al,al
  42a1d7:	jne    0x42a1be
  42a1d9:	cmp    DWORD PTR [r15],0x0
  42a1dd:	je     0x42a1f7
  42a1df:	lea    r8,[rip+0x10622]        # 0x43a808
  42a1e6:	lea    rcx,[rip+0x101ec]        # 0x43a3d9
  42a1ed:	mov    edx,0x8355
  42a1f2:	call   0x40d350
  42a1f7:	mov    DWORD PTR [rsp+0xb8],r13d
  42a1ff:	mov    DWORD PTR [rsp+0x98],0x1
  42a20a:	mov    r13d,ebp
  42a20d:	xor    edi,edi
  42a20f:	xor    r12d,r12d
  42a212:	mov    DWORD PTR [rsp+0x7c],0x0
  42a21a:	xor    r14d,r14d
  42a21d:	mov    BYTE PTR [rsp+0x9f],0x0
  42a225:	xor    r9d,r9d
  42a228:	mov    rbp,rsi
  42a22b:	mov    QWORD PTR [rsp+0xa8],rbx
  42a233:	jmp    0x42a2b3
  42a235:	movsx  ebx,sil
  42a239:	lea    rcx,[rip+0x105eb]        # 0x43a82b
  42a240:	mov    edx,ebx
  42a242:	call   0x42d638
  42a247:	test   rax,rax
  42a24a:	mov    r9d,DWORD PTR [rsp+0xbc]
  42a252:	jne    0x42a78e
  42a258:	cmp    sil,0x2e
  42a25c:	je     0x42a77d
  42a262:	cmp    sil,0x3a
  42a266:	je     0x42a77d
  42a26c:	cmp    r9d,0x1
  42a270:	je     0x42a76b
  42a276:	jle    0x42a754
  42a27c:	cmp    r9d,0x2
  42a280:	je     0x42a746
  42a286:	cmp    r9d,0x3
  42a28a:	jne    0x42a2af
  42a28c:	cmp    DWORD PTR [rsp+0x98],0x3b9ac9ff
  42a297:	ja     0x42a2af
  42a299:	imul   eax,DWORD PTR [rsp+0x98],0xa
  42a2a1:	imul   edi,edi,0xa
  42a2a4:	lea    edi,[rdi+rbx*1-0x30]
  42a2a8:	mov    DWORD PTR [rsp+0x98],eax
  42a2af:	add    rbp,0x1
  42a2b3:	movzx  esi,BYTE PTR [rbp+0x0]
  42a2b7:	mov    DWORD PTR [rsp+0xbc],r9d
  42a2bf:	test   sil,sil
  42a2c2:	jne    0x42a235
  42a2c8:	cmp    r14d,0x17
  42a2cc:	mov    ebp,r13d
  42a2cf:	mov    rbx,QWORD PTR [rsp+0xa8]
  42a2d7:	mov    r13d,DWORD PTR [rsp+0xb8]
  42a2df:	ja     0x42a7fd
  42a2e5:	mov    DWORD PTR [rsp+0xec],r14d
  42a2ed:	jmp    0x42a7fd
  42a2f2:	lea    eax,[r12+rdi*1]
  42a2f6:	add    eax,r11d
  42a2f9:	cmp    eax,0x2
  42a2fc:	jne    0x429fdd
  42a302:	sub    r12d,0x1
  42a306:	sete   al
  42a309:	sub    edi,0x1
  42a30c:	sete   dl
  42a30f:	or     al,dl
  42a311:	jne    0x429fdd
  42a317:	sub    r11d,0x1
  42a31b:	sete   r12b
  42a31f:	je     0x429fdd
  42a325:	sub    r14d,0x4
  42a329:	cmp    r14d,0x4
  42a32d:	ja     0x429fdd
  42a333:	cmp    DWORD PTR [r15],0x0
  42a337:	jne    0x42a6d9
  42a33d:	or     rcx,0xffffffffffffffff
  42a341:	mov    rdi,rsi
  42a344:	mov    eax,r12d
  42a347:	repnz scas al,BYTE PTR es:[rdi]
  42a349:	cmp    rcx,0xfffffffffffffff4
  42a34d:	je     0x42a707
  42a353:	mov    edi,0x2
  42a358:	mov    r11d,0x1
  42a35e:	xor    r12d,r12d
  42a361:	xor    ecx,ecx
  42a363:	xor    eax,eax
  42a365:	xor    r14d,r14d
  42a368:	xor    edx,edx
  42a36a:	mov    BYTE PTR [rsp+0x7c],0x0
  42a36f:	jmp    0x42a39d
  42a371:	movzx  r9d,BYTE PTR [rsp+0x7c]
  42a377:	sub    r9d,0x30
  42a37b:	cmp    r9d,0x9
  42a37f:	ja     0x42a3a7
  42a381:	add    edx,0x1
  42a384:	add    rsi,0x1
  42a388:	movzx  r9d,BYTE PTR [rsi]
  42a38c:	mov    BYTE PTR [rsp+0x7c],r8b
  42a391:	test   r9b,r9b
  42a394:	je     0x42a3e0
  42a396:	movzx  r10d,r9b
  42a39a:	mov    r8d,r10d
  42a39d:	sub    r10d,0x30
  42a3a1:	cmp    r10d,0x9
  42a3a5:	ja     0x42a371
  42a3a7:	cmp    edx,r12d
  42a3aa:	je     0x42a3c3
  42a3ac:	cmp    edx,r11d
  42a3af:	je     0x42a3d2
  42a3b1:	cmp    edx,edi
  42a3b3:	jne    0x42a384
  42a3b5:	imul   ecx,ecx,0xa
  42a3b8:	movsx  r9d,r8b
  42a3bc:	lea    ecx,[rcx+r9*1-0x30]
  42a3c1:	jmp    0x42a384
  42a3c3:	imul   r14d,r14d,0xa
  42a3c7:	movsx  r9d,r8b
  42a3cb:	lea    r14d,[r14+r9*1-0x30]
  42a3d0:	jmp    0x42a3ac
  42a3d2:	imul   eax,eax,0xa
  42a3d5:	movsx  r9d,r8b
  42a3d9:	lea    eax,[rax+r9*1-0x30]
  42a3de:	jmp    0x42a3b1
  42a3e0:	lea    r10d,[r14-0x1]
  42a3e4:	xor    r12d,r12d
  42a3e7:	cmp    r10d,0xb
  42a3eb:	ja     0x4280fe
  42a3f1:	lea    edx,[rax-0x1]
  42a3f4:	mov    DWORD PTR [rsp+0xe4],r10d
  42a3fc:	cmp    edx,0x1e
  42a3ff:	ja     0x4280fe
  42a405:	mov    rdx,rbx
  42a408:	mov    DWORD PTR [rsp+0xe8],eax
  42a40f:	call   0x425630
  42a414:	jmp    0x4280fe
  42a419:	lea    r8,[rip+0x102e0]        # 0x43a700
  42a420:	lea    rcx,[rip+0xffb2]        # 0x43a3d9
  42a427:	mov    edx,0x7f65
  42a42c:	call   0x40d350
  42a431:	jmp    0x429dca
  42a436:	mov    rcx,rsi
  42a439:	mov    r12d,0x3
  42a43f:	call   0x425bd0
  42a444:	test   al,al
  42a446:	je     0x4280fe
  42a44c:	mov    rcx,QWORD PTR [rsp+0x80]
  42a454:	xor    r12b,r12b
  42a457:	call   0x42d748
  42a45c:	cmp    eax,0x17
  42a45f:	mov    edi,eax
  42a461:	ja     0x4280fe
  42a467:	lea    rdx,[rip+0x10000]        # 0x43a46e
  42a46e:	mov    rcx,rsi
  42a471:	call   QWORD PTR [rip+0x1863d]        # 0x442ab4
  42a477:	test   eax,eax
  42a479:	jne    0x42a489
  42a47b:	cmp    edi,0xc
  42a47e:	cmove  edi,r12d
  42a482:	mov    DWORD PTR [rsp+0xec],edi
  42a489:	lea    rdx,[rip+0xffe1]        # 0x43a471
  42a490:	mov    rcx,rsi
  42a493:	xor    r12d,r12d
  42a496:	call   QWORD PTR [rip+0x18618]        # 0x442ab4
  42a49c:	test   eax,eax
  42a49e:	jne    0x4280fe
  42a4a4:	lea    eax,[rdi-0x1]
  42a4a7:	cmp    eax,0xa
  42a4aa:	jbe    0x42a6ca
  42a4b0:	mov    DWORD PTR [rsp+0xec],edi
  42a4b7:	jmp    0x4280fe
  42a4bc:	cmp    DWORD PTR [rsp+0x78],0x0
  42a4c1:	mov    rcx,rsi
  42a4c4:	jne    0x42aa19
  42a4ca:	call   0x42d748
  42a4cf:	lea    edx,[rax-0x1]
  42a4d2:	cmp    edx,0x1e
  42a4d5:	ja     0x42a4de
  42a4d7:	mov    DWORD PTR [rsp+0xe8],eax
  42a4de:	test   ebp,ebp
  42a4e0:	je     0x42a677
  42a4e6:	cmp    BYTE PTR [rsp+0x7c],0x0
  42a4eb:	je     0x42a677
  42a4f1:	xor    r12d,r12d
  42a4f4:	mov    DWORD PTR [rsp+0x78],0x1
  42a4fc:	jmp    0x4280fe
  42a501:	mov    WORD PTR [rbp+0x0],r12w
  42a506:	mov    WORD PTR [rbp+0x2],ax
  42a50a:	mov    esi,0x4
  42a50f:	jmp    0x427280
  42a514:	lea    r9,[rax+0x1]
  42a518:	mov    QWORD PTR [rsp+0xd8],0x0
  42a524:	jmp    0x427cbc
  42a529:	mov    esi,0xfffffffb
  42a52e:	jmp    0x427280
  42a533:	mov    esi,0xfffffffb
  42a538:	jmp    0x427280
  42a53d:	mov    esi,0xfffffffb
  42a542:	jmp    0x427280
  42a547:	mov    esi,0xfffffffb
  42a54c:	jmp    0x427280
  42a551:	mov    esi,0xfffffffb
  42a556:	jmp    0x427280
  42a55b:	mov    esi,0xfffffffb
  42a560:	jmp    0x427280
  42a565:	mov    esi,0xfffffffb
  42a56a:	jmp    0x427280
  42a56f:	mov    esi,0xfffffffc
  42a574:	jmp    0x427280
  42a579:	mov    esi,0xfffffffb
  42a57e:	jmp    0x427280
  42a583:	mov    esi,0xfffffffb
  42a588:	jmp    0x427280
  42a58d:	mov    esi,0xfffffffb
  42a592:	jmp    0x427280
  42a597:	mov    esi,0xfffffffb
  42a59c:	jmp    0x427280
  42a5a1:	mov    esi,0xfffffffb
  42a5a6:	jmp    0x427280
  42a5ab:	mov    esi,0xfffffffb
  42a5b0:	jmp    0x427280
  42a5b5:	lea    r8,[rip+0x1016c]        # 0x43a728
  42a5bc:	lea    rcx,[rip+0xfe16]        # 0x43a3d9
  42a5c3:	mov    edx,0x8035
  42a5c8:	call   0x40d350
  42a5cd:	jmp    0x427f16
  42a5d2:	imul   ecx,eax,0x12c
  42a5d8:	mov    eax,DWORD PTR [rsp+0xf8]
  42a5df:	mov    r8d,0xf4240
  42a5e5:	xor    edx,edx
  42a5e7:	mov    DWORD PTR [rbp+0x0],r12d
  42a5eb:	mov    esi,0x8
  42a5f0:	div    r8d
  42a5f3:	mov    r8d,0x3e8
  42a5f9:	xor    edx,edx
  42a5fb:	imul   eax,eax,0x12c
  42a601:	add    eax,0x96
  42a606:	div    r8d
  42a609:	add    eax,ecx
  42a60b:	mov    DWORD PTR [rbp+0x4],eax
  42a60e:	jmp    0x427280
  42a613:	imul   ecx,eax,0x12c
  42a619:	mov    eax,DWORD PTR [rsp+0xf8]
  42a620:	mov    r8d,0xf4240
  42a626:	xor    edx,edx
  42a628:	mov    esi,0x4
  42a62d:	div    r8d
  42a630:	mov    r8d,0x3e8
  42a636:	xor    edx,edx
  42a638:	imul   eax,eax,0x12c
  42a63e:	add    eax,0x96
  42a643:	div    r8d
  42a646:	add    eax,ecx
  42a648:	mov    DWORD PTR [rbp+0x0],eax
  42a64b:	jmp    0x427280
  42a650:	cmp    DWORD PTR [r15],0x0
  42a654:	je     0x42a11b
  42a65a:	lea    r8,[rip+0x10157]        # 0x43a7b8
  42a661:	lea    rcx,[rip+0xfd71]        # 0x43a3d9
  42a668:	mov    edx,0xa855
  42a66d:	call   0x40d350
  42a672:	jmp    0x42a11b
  42a677:	mov    DWORD PTR [rsp+0x78],0x1
  42a67f:	jmp    0x4280fe
  42a684:	mov    esi,0xfffffffb
  42a689:	jmp    0x427280
  42a68e:	mov    esi,0xfffffffb
  42a693:	jmp    0x427280
  42a698:	mov    esi,0xfffffffb
  42a69d:	jmp    0x427280
  42a6a2:	mov    esi,0xfffffffb
  42a6a7:	jmp    0x427280
  42a6ac:	mov    esi,0xfffffffb
  42a6b1:	jmp    0x427280
  42a6b6:	mov    esi,0xfffffffb
  42a6bb:	jmp    0x427280
  42a6c0:	mov    esi,0xfffffffb
  42a6c5:	jmp    0x427280
  42a6ca:	add    edi,0xc
  42a6cd:	mov    DWORD PTR [rsp+0xec],edi
  42a6d4:	jmp    0x4280fe
  42a6d9:	lea    rcx,[rip+0xfcf9]        # 0x43a3d9
  42a6e0:	lea    r8,[rip+0x10061]        # 0x43a748
  42a6e7:	mov    edx,0x82d5
  42a6ec:	mov    rdi,rsi
  42a6ef:	call   0x40d350
  42a6f4:	or     rcx,0xffffffffffffffff
  42a6f8:	mov    eax,r12d
  42a6fb:	movzx  r9d,BYTE PTR [rsi]
  42a6ff:	repnz scas al,BYTE PTR es:[rdi]
  42a701:	cmp    rcx,0xfffffffffffffff4
  42a705:	jne    0x42a70d
  42a707:	cmp    BYTE PTR [rsi+0x4],0x2d
  42a70b:	je     0x42a730
  42a70d:	mov    edi,0x2
  42a712:	mov    r11d,0x1
  42a718:	xor    r12d,r12d
  42a71b:	test   r9b,r9b
  42a71e:	mov    r8d,r9d
  42a721:	je     0x42a11b
  42a727:	movzx  r10d,r9b
  42a72b:	jmp    0x42a361
  42a730:	cmp    BYTE PTR [rsi+0x7],0x2d
  42a734:	jne    0x42a70d
  42a736:	xor    edi,edi
  42a738:	mov    r11d,0x2
  42a73e:	mov    r12d,0x1
  42a744:	jmp    0x42a71b
  42a746:	imul   r12d,r12d,0xa
  42a74a:	lea    r12d,[r12+rbx*1-0x30]
  42a74f:	jmp    0x42a2af
  42a754:	test   r9d,r9d
  42a757:	jne    0x42a2af
  42a75d:	imul   r14d,r14d,0xa
  42a761:	lea    r14d,[r14+rbx*1-0x30]
  42a766:	jmp    0x42a2af
  42a76b:	imul   eax,DWORD PTR [rsp+0x7c],0xa
  42a770:	lea    eax,[rax+rbx*1-0x30]
  42a774:	mov    DWORD PTR [rsp+0x7c],eax
  42a778:	jmp    0x42a2af
  42a77d:	add    r9d,0x1
  42a781:	mov    BYTE PTR [rsp+0x9f],sil
  42a789:	jmp    0x42a2af
  42a78e:	mov    rsi,rbp
  42a791:	mov    rbx,QWORD PTR [rsp+0xa8]
  42a799:	mov    ebp,r13d
  42a79c:	lea    rdx,[rip+0xfccb]        # 0x43a46e
  42a7a3:	mov    r13d,DWORD PTR [rsp+0xb8]
  42a7ab:	mov    rcx,rsi
  42a7ae:	mov    rax,QWORD PTR [rsp+0xa0]
  42a7b6:	call   rax
  42a7b8:	test   eax,eax
  42a7ba:	jne    0x42a7cc
  42a7bc:	cmp    r14d,0xc
  42a7c0:	cmove  r14d,eax
  42a7c4:	mov    DWORD PTR [rsp+0xec],r14d
  42a7cc:	lea    rdx,[rip+0xfc9e]        # 0x43a471
  42a7d3:	mov    rcx,rsi
  42a7d6:	mov    rax,QWORD PTR [rsp+0xa0]
  42a7de:	call   rax
  42a7e0:	test   eax,eax
  42a7e2:	jne    0x42a7fd
  42a7e4:	lea    eax,[r14-0x1]
  42a7e8:	cmp    eax,0xa
  42a7eb:	ja     0x42a2e5
  42a7f1:	lea    r8d,[r14+0xc]
  42a7f5:	mov    DWORD PTR [rsp+0xec],r8d
  42a7fd:	cmp    DWORD PTR [rsp+0x7c],0x3b
  42a802:	ja     0x42a80f
  42a804:	mov    eax,DWORD PTR [rsp+0x7c]
  42a808:	mov    DWORD PTR [rsp+0xf0],eax
  42a80f:	cmp    r12d,0x3b
  42a813:	ja     0x42a81d
  42a815:	mov    DWORD PTR [rsp+0xf4],r12d
  42a81d:	cmp    DWORD PTR [r15],0x0
  42a821:	je     0x42a83e
  42a823:	lea    r8,[rip+0x10008]        # 0x43a832
  42a82a:	lea    rcx,[rip+0xfba8]        # 0x43a3d9
  42a831:	mov    r9d,edi
  42a834:	mov    edx,0xb397
  42a839:	call   0x40d350
  42a83e:	xor    r12d,r12d
  42a841:	test   edi,edi
  42a843:	je     0x4280fe
  42a849:	cmp    BYTE PTR [rsp+0x9f],0x2e
  42a851:	jne    0x42a876
  42a853:	mov    ecx,DWORD PTR [rsp+0x98]
  42a85a:	cmp    edi,ecx
  42a85c:	jae    0x42a876
  42a85e:	mov    eax,0x3b9aca00
  42a863:	xor    edx,edx
  42a865:	div    ecx
  42a867:	imul   eax,edi
  42a86a:	mov    DWORD PTR [rsp+0xf8],eax
  42a871:	jmp    0x4280fe
  42a876:	xor    r12d,r12d
  42a879:	cmp    edi,0x3e7
  42a87f:	ja     0x4280fe
  42a885:	imul   edi,edi,0xf4240
  42a88b:	mov    DWORD PTR [rsp+0xf8],edi
  42a892:	jmp    0x4280fe
  42a897:	call   0x425bd0
  42a89c:	test   al,al
  42a89e:	jne    0x42a1d9
  42a8a4:	cmp    DWORD PTR [r15],0x0
  42a8a8:	mov    r12d,0x3
  42a8ae:	je     0x4280fe
  42a8b4:	lea    r8,[rip+0xff95]        # 0x43a850
  42a8bb:	lea    rcx,[rip+0xfb17]        # 0x43a3d9
  42a8c2:	mov    edx,0x8395
  42a8c7:	call   0x40d350
  42a8cc:	jmp    0x4280fe
  42a8d1:	mov    esi,0xfffffffc
  42a8d6:	jmp    0x427280
  42a8db:	mov    esi,0xfffffffb
  42a8e0:	jmp    0x427280
  42a8e5:	mov    esi,0xfffffffb
  42a8ea:	jmp    0x427280
  42a8ef:	or     esi,0xffffffff
  42a8f2:	jmp    0x427280
  42a8f7:	mov    esi,0xfffffffb
  42a8fc:	jmp    0x427280
  42a901:	mov    esi,0xfffffffb
  42a906:	jmp    0x427280
  42a90b:	mov    esi,0xfffffffb
  42a910:	jmp    0x427280
  42a915:	mov    esi,0xfffffffb
  42a91a:	jmp    0x427280
  42a91f:	mov    esi,0xfffffffb
  42a924:	jmp    0x427280
  42a929:	mov    esi,0xfffffffc
  42a92e:	jmp    0x427280
  42a933:	imul   rcx,rax,0xf4240
  42a93a:	mov    eax,DWORD PTR [rsp+0xf8]
  42a941:	mov    r8d,0x3e8
  42a947:	xor    edx,edx
  42a949:	div    r8d
  42a94c:	movabs rdx,0x141dd76000
  42a956:	mov    eax,eax
  42a958:	add    rcx,rax
  42a95b:	lea    eax,[rsi+0x1d]
  42a95e:	mov    esi,0x8
  42a963:	cdqe   
  42a965:	imul   rax,rdx
  42a969:	add    rcx,rax
  42a96c:	mov    QWORD PTR [rbp+0x0],rcx
  42a970:	jmp    0x427280
  42a975:	imul   rcx,rax,0xf4240
  42a97c:	mov    eax,DWORD PTR [rsp+0xf8]
  42a983:	mov    r8d,0x3e8
  42a989:	xor    edx,edx
  42a98b:	mov    esi,0x8
  42a990:	div    r8d
  42a993:	mov    eax,eax
  42a995:	add    rcx,rax
  42a998:	mov    QWORD PTR [rbp+0x0],rcx
  42a99c:	jmp    0x427280
  42a9a1:	mov    esi,0xfffffffb
  42a9a6:	jmp    0x427280
  42a9ab:	mov    esi,0xfffffffb
  42a9b0:	jmp    0x427280
  42a9b5:	mov    esi,0xfffffffb
  42a9ba:	jmp    0x427280
  42a9bf:	mov    esi,0xfffffffb
  42a9c4:	jmp    0x427280
  42a9c9:	mov    esi,0xfffffffb
  42a9ce:	jmp    0x427280
  42a9d3:	mov    esi,0xfffffffb
  42a9d8:	jmp    0x427280
  42a9dd:	mov    esi,0xfffffffb
  42a9e2:	jmp    0x427280
  42a9e7:	mov    esi,0xfffffffb
  42a9ec:	jmp    0x427280
  42a9f1:	mov    esi,0xfffffffb
  42a9f6:	jmp    0x427280
  42a9fb:	mov    esi,0xfffffffb
  42aa00:	jmp    0x427280
  42aa05:	mov    esi,0xfffffffb
  42aa0a:	jmp    0x427280
  42aa0f:	mov    esi,0xfffffffb
  42aa14:	jmp    0x427280
  42aa19:	call   0x42d748
  42aa1e:	mov    rdx,rbx
  42aa21:	mov    ecx,eax
  42aa23:	add    r13d,0x1
  42aa27:	call   0x425630
  42aa2c:	test   ebp,ebp
  42aa2e:	mov    eax,0x0
  42aa33:	cmovne r12d,eax
  42aa37:	jmp    0x4280fe
  42aa3c:	mov    esi,0xfffffffb
  42aa41:	jmp    0x427280
  42aa46:	mov    rdi,QWORD PTR [rsp+0x88]
  42aa4e:	lea    rdx,[rsi+0x3]
  42aa52:	mov    r8d,0x4
  42aa58:	mov    rcx,rdi
  42aa5b:	call   0x4248b0
  42aa60:	mov    rdx,rbx
  42aa63:	mov    rcx,rdi
  42aa66:	call   0x425220
  42aa6b:	test   eax,eax
  42aa6d:	js     0x42aae6
  42aa6f:	lea    rcx,[rsi+0x7]
  42aa73:	call   0x42d748
  42aa78:	cmp    DWORD PTR [r15],0x0
  42aa7c:	mov    esi,eax
  42aa7e:	je     0x42a111
  42aa84:	lea    r8,[rip+0xfd5d]        # 0x43a7e8
  42aa8b:	lea    rcx,[rip+0xf947]        # 0x43a3d9
  42aa92:	mov    r9d,eax
  42aa95:	mov    edx,0xa7e5
  42aa9a:	call   0x40d350
  42aa9f:	jmp    0x42a111
  42aaa4:	lea    r8,[rip+0xfccd]        # 0x43a778
  42aaab:	lea    rcx,[rip+0xf927]        # 0x43a3d9
  42aab2:	mov    edx,0x8315
  42aab7:	call   0x40d350
  42aabc:	cmp    DWORD PTR [r15],0x0
  42aac0:	je     0x42a07f
  42aac6:	lea    r8,[rip+0xfccf]        # 0x43a79c
  42aacd:	lea    rcx,[rip+0xf905]        # 0x43a3d9
  42aad4:	mov    r9,rsi
  42aad7:	mov    edx,0xa6c5
  42aadc:	call   0x40d350
  42aae1:	jmp    0x42a07f
  42aae6:	cmp    DWORD PTR [r15],0x0
  42aaea:	je     0x42a11b
  42aaf0:	lea    r8,[rip+0xfcc1]        # 0x43a7b8
  42aaf7:	lea    rcx,[rip+0xf8db]        # 0x43a3d9
  42aafe:	mov    edx,0xa795
  42ab03:	call   0x40d350
  42ab08:	jmp    0x42a11b
  42ab0d:	mov    esi,0xfffffffb
  42ab12:	jmp    0x427280
  42ab17:	mov    esi,0xfffffffb
  42ab1c:	jmp    0x427280
  42ab21:	mov    esi,0xfffffffb
  42ab26:	jmp    0x427280
  42ab2b:	mov    esi,0xfffffffb
  42ab30:	jmp    0x427280
  42ab35:	mov    esi,0xfffffffb
  42ab3a:	jmp    0x427280
  42ab3f:	mov    esi,0xfffffffb
  42ab44:	jmp    0x427280
  42ab49:	mov    esi,0xfffffffb
  42ab4e:	jmp    0x427280
  42ab53:	mov    esi,0xfffffffb
  42ab58:	jmp    0x427280
  42ab5d:	nop
  42ab5e:	nop
  42ab5f:	nop
  42ab60:	xor    eax,eax
  42ab62:	mov    DWORD PTR [rdx],0x0
  42ab68:	mov    WORD PTR [rdx+0x4],ax
  42ab6c:	ret    
  42ab6d:	nop
  42ab6e:	nop
  42ab6f:	nop
  42ab70:	push   rbp
  42ab71:	push   rdi
  42ab72:	push   rsi
  42ab73:	push   rbx
  42ab74:	sub    rsp,0x28
  42ab78:	lea    rdi,[rip+0x10a81]        # 0x43b600
  42ab7f:	mov    rax,rcx
  42ab82:	mov    ecx,0x8
  42ab87:	mov    rbp,rdx
  42ab8a:	mov    rsi,rax
  42ab8d:	mov    rbx,r8
  42ab90:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ab92:	je     0x42abe2
  42ab94:	lea    rdi,[rip+0x10a6d]        # 0x43b608
  42ab9b:	mov    ecx,0x9
  42aba0:	mov    rsi,rax
  42aba3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42aba5:	je     0x42ac01
  42aba7:	lea    rdi,[rip+0x10a63]        # 0x43b611
  42abae:	mov    ecx,0xc
  42abb3:	mov    rsi,rax
  42abb6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42abb8:	je     0x42abc3
  42abba:	add    rsp,0x28
  42abbe:	pop    rbx
  42abbf:	pop    rsi
  42abc0:	pop    rdi
  42abc1:	pop    rbp
  42abc2:	ret    
  42abc3:	mov    rcx,QWORD PTR [r8+0x10]
  42abc7:	call   0x42d6f8
  42abcc:	mov    rcx,rbp
  42abcf:	call   QWORD PTR [rip+0x17ed7]        # 0x442aac
  42abd5:	mov    QWORD PTR [rbx+0x10],rax
  42abd9:	add    rsp,0x28
  42abdd:	pop    rbx
  42abde:	pop    rsi
  42abdf:	pop    rdi
  42abe0:	pop    rbp
  42abe1:	ret    
  42abe2:	mov    rcx,QWORD PTR [r8+0x8]
  42abe6:	call   0x42d6f8
  42abeb:	mov    rcx,rbp
  42abee:	call   QWORD PTR [rip+0x17eb8]        # 0x442aac
  42abf4:	mov    QWORD PTR [rbx+0x8],rax
  42abf8:	add    rsp,0x28
  42abfc:	pop    rbx
  42abfd:	pop    rsi
  42abfe:	pop    rdi
  42abff:	pop    rbp
  42ac00:	ret    
  42ac01:	mov    rcx,QWORD PTR [r8]
  42ac04:	call   0x42d6f8
  42ac09:	mov    rcx,rbp
  42ac0c:	call   QWORD PTR [rip+0x17e9a]        # 0x442aac
  42ac12:	mov    QWORD PTR [rbx],rax
  42ac15:	add    rsp,0x28
  42ac19:	pop    rbx
  42ac1a:	pop    rsi
  42ac1b:	pop    rdi
  42ac1c:	pop    rbp
  42ac1d:	ret    
  42ac1e:	xchg   ax,ax
  42ac20:	push   rbp
  42ac21:	push   rdi
  42ac22:	push   rsi
  42ac23:	push   rbx
  42ac24:	sub    rsp,0xa8
  42ac2b:	call   0x4104c0
  42ac30:	test   rax,rax
  42ac33:	mov    rsi,rax
  42ac36:	je     0x42ad70
  42ac3c:	mov    rax,QWORD PTR [rip+0x111ed]        # 0x43be30
  42ac43:	mov    eax,DWORD PTR [rax]
  42ac45:	test   eax,eax
  42ac47:	jne    0x42ad50
  42ac4d:	lea    rdx,[rip+0x10a03]        # 0x43b657
  42ac54:	lea    rcx,[rip+0x10a05]        # 0x43b660
  42ac5b:	call   0x42d718
  42ac60:	mov    rbx,rax
  42ac63:	mov    rax,rsi
  42ac66:	test   rbx,rbx
  42ac69:	je     0x42aca2
  42ac6b:	lea    r8,[rip+0xfffffffffffffefe]        # 0x42ab70
  42ac72:	lea    rdx,[rip+0x10a34]        # 0x43b6ad
  42ac79:	mov    r9,rsi
  42ac7c:	mov    rcx,rbx
  42ac7f:	call   0x406060
  42ac84:	xor    edx,edx
  42ac86:	xor    ecx,ecx
  42ac88:	call   0x42d658
  42ac8d:	test   rax,rax
  42ac90:	je     0x42ac97
  42ac92:	cmp    BYTE PTR [rax],0x0
  42ac95:	jne    0x42acb0
  42ac97:	mov    rcx,rbx
  42ac9a:	call   0x42d730
  42ac9f:	mov    rax,rsi
  42aca2:	add    rsp,0xa8
  42aca9:	pop    rbx
  42acaa:	pop    rsi
  42acab:	pop    rdi
  42acac:	pop    rbp
  42acad:	ret    
  42acae:	xchg   ax,ax
  42acb0:	lea    rbp,[rsp+0x20]
  42acb5:	mov    r8d,0x80
  42acbb:	mov    rdx,rax
  42acbe:	lea    rdi,[rip+0x10958]        # 0x43b61d
  42acc5:	mov    rcx,rbp
  42acc8:	call   0x4248b0
  42accd:	mov    rcx,rbx
  42acd0:	call   0x42d660
  42acd5:	lea    r8,[rip+0xfffffffffffffe94]        # 0x42ab70
  42acdc:	mov    r9,rsi
  42acdf:	mov    rdx,rbp
  42ace2:	mov    rcx,rbx
  42ace5:	call   0x406060
  42acea:	test   eax,eax
  42acec:	mov    r8d,0x40
  42acf2:	je     0x42ad39
  42acf4:	jmp    0x42ac97
  42acf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ad00:	mov    BYTE PTR [rax],0x0
  42ad03:	mov    rcx,rbx
  42ad06:	add    rdi,0x1
  42ad0a:	call   0x42d660
  42ad0f:	lea    r8,[rip+0xfffffffffffffe5a]        # 0x42ab70
  42ad16:	mov    r9,rsi
  42ad19:	mov    rdx,rbp
  42ad1c:	mov    rcx,rbx
  42ad1f:	call   0x406060
  42ad24:	test   eax,eax
  42ad26:	jne    0x42ac97
  42ad2c:	movzx  r8d,BYTE PTR [rdi]
  42ad30:	test   r8b,r8b
  42ad33:	je     0x42ac97
  42ad39:	movsx  edx,r8b
  42ad3d:	mov    rcx,rbp
  42ad40:	call   0x42d600
  42ad45:	test   rax,rax
  42ad48:	jne    0x42ad00
  42ad4a:	add    rdi,0x1
  42ad4e:	jmp    0x42ad2c
  42ad50:	lea    r8,[rip+0x108d1]        # 0x43b628
  42ad57:	lea    rcx,[rip+0x108f0]        # 0x43b64e
  42ad5e:	mov    edx,0x3d5
  42ad63:	call   0x40d350
  42ad68:	jmp    0x42ac4d
  42ad6d:	nop    DWORD PTR [rax]
  42ad70:	xor    eax,eax
  42ad72:	jmp    0x42aca2
  42ad77:	nop
  42ad78:	nop
  42ad79:	nop
  42ad7a:	nop
  42ad7b:	nop
  42ad7c:	nop
  42ad7d:	nop
  42ad7e:	nop
  42ad7f:	nop
  42ad80:	push   rdi
  42ad81:	push   rsi
  42ad82:	push   rbx
  42ad83:	sub    rsp,0x20
  42ad87:	movsxd rsi,edx
  42ad8a:	mov    rbx,rcx
  42ad8d:	mov    rdx,rcx
  42ad90:	mov    r8,rsi
  42ad93:	mov    ecx,0x1
  42ad98:	call   0x42ae50
  42ad9d:	test   eax,eax
  42ad9f:	js     0x42adb0
  42ada1:	add    rsp,0x20
  42ada5:	pop    rbx
  42ada6:	pop    rsi
  42ada7:	pop    rdi
  42ada8:	ret    
  42ada9:	nop    DWORD PTR [rax+0x0]
  42adb0:	xor    ecx,ecx
  42adb2:	mov    r8,rsi
  42adb5:	mov    rdx,rbx
  42adb8:	call   0x42ae50
  42adbd:	test   eax,eax
  42adbf:	jns    0x42ada1
  42adc1:	test   esi,esi
  42adc3:	jle    0x42ada1
  42adc5:	lea    eax,[rsi-0x1]
  42adc8:	mov    esi,0x81020409
  42adcd:	lea    rdi,[rbx+rax*1+0x1]
  42add2:	call   0x42d670
  42add7:	mov    ecx,eax
  42add9:	add    rbx,0x1
  42addd:	imul   esi
  42addf:	add    edx,ecx
  42ade1:	sar    ecx,0x1f
  42ade4:	sar    edx,0x6
  42ade7:	sub    edx,ecx
  42ade9:	mov    BYTE PTR [rbx-0x1],dl
  42adec:	cmp    rbx,rdi
  42adef:	jne    0x42add2
  42adf1:	jmp    0x42ada1
  42adf3:	nop
  42adf4:	nop
  42adf5:	nop
  42adf6:	nop
  42adf7:	nop
  42adf8:	nop
  42adf9:	nop
  42adfa:	nop
  42adfb:	nop
  42adfc:	nop
  42adfd:	nop
  42adfe:	nop
  42adff:	nop
  42ae00:	jmp    QWORD PTR [rip+0x17a66]        # 0x44286c
  42ae06:	nop
  42ae07:	nop
  42ae08:	jmp    QWORD PTR [rip+0x17a56]        # 0x442864
  42ae0e:	nop
  42ae0f:	nop
  42ae10:	jmp    QWORD PTR [rip+0x17a46]        # 0x44285c
  42ae16:	nop
  42ae17:	nop
  42ae18:	jmp    QWORD PTR [rip+0x17a36]        # 0x442854
  42ae1e:	nop
  42ae1f:	nop
  42ae20:	jmp    QWORD PTR [rip+0x17a26]        # 0x44284c
  42ae26:	nop
  42ae27:	nop
  42ae28:	jmp    QWORD PTR [rip+0x17a16]        # 0x442844
  42ae2e:	nop
  42ae2f:	nop
  42ae30:	jmp    QWORD PTR [rip+0x17a06]        # 0x44283c
  42ae36:	nop
  42ae37:	nop
  42ae38:	jmp    QWORD PTR [rip+0x179f6]        # 0x442834
  42ae3e:	nop
  42ae3f:	nop
  42ae40:	jmp    QWORD PTR [rip+0x179e6]        # 0x44282c
  42ae46:	nop
  42ae47:	nop
  42ae48:	jmp    QWORD PTR [rip+0x179d6]        # 0x442824
  42ae4e:	nop
  42ae4f:	nop
  42ae50:	jmp    QWORD PTR [rip+0x179c6]        # 0x44281c
  42ae56:	nop
  42ae57:	nop
  42ae58:	jmp    QWORD PTR [rip+0x179b6]        # 0x442814
  42ae5e:	nop
  42ae5f:	nop
  42ae60:	jmp    QWORD PTR [rip+0x179a6]        # 0x44280c
  42ae66:	nop
  42ae67:	nop
  42ae68:	jmp    QWORD PTR [rip+0x17996]        # 0x442804
  42ae6e:	nop
  42ae6f:	nop
  42ae70:	jmp    QWORD PTR [rip+0x17986]        # 0x4427fc
  42ae76:	nop
  42ae77:	nop
  42ae78:	jmp    QWORD PTR [rip+0x17976]        # 0x4427f4
  42ae7e:	nop
  42ae7f:	nop
  42ae80:	jmp    QWORD PTR [rip+0x17966]        # 0x4427ec
  42ae86:	nop
  42ae87:	nop
  42ae88:	jmp    QWORD PTR [rip+0x17956]        # 0x4427e4
  42ae8e:	nop
  42ae8f:	nop
  42ae90:	jmp    QWORD PTR [rip+0x17946]        # 0x4427dc
  42ae96:	nop
  42ae97:	nop
  42ae98:	jmp    QWORD PTR [rip+0x17936]        # 0x4427d4
  42ae9e:	nop
  42ae9f:	nop
  42aea0:	jmp    QWORD PTR [rip+0x17926]        # 0x4427cc
  42aea6:	nop
  42aea7:	nop
  42aea8:	jmp    QWORD PTR [rip+0x17916]        # 0x4427c4
  42aeae:	nop
  42aeaf:	nop
  42aeb0:	jmp    QWORD PTR [rip+0x17906]        # 0x4427bc
  42aeb6:	nop
  42aeb7:	nop
  42aeb8:	jmp    QWORD PTR [rip+0x178f6]        # 0x4427b4
  42aebe:	nop
  42aebf:	nop
  42aec0:	jmp    QWORD PTR [rip+0x178e6]        # 0x4427ac
  42aec6:	nop
  42aec7:	nop
  42aec8:	jmp    QWORD PTR [rip+0x178d6]        # 0x4427a4
  42aece:	nop
  42aecf:	nop
  42aed0:	jmp    QWORD PTR [rip+0x178c6]        # 0x44279c
  42aed6:	nop
  42aed7:	nop
  42aed8:	jmp    QWORD PTR [rip+0x178b6]        # 0x442794
  42aede:	nop
  42aedf:	nop
  42aee0:	jmp    QWORD PTR [rip+0x178a6]        # 0x44278c
  42aee6:	nop
  42aee7:	nop
  42aee8:	jmp    QWORD PTR [rip+0x17896]        # 0x442784
  42aeee:	nop
  42aeef:	nop
  42aef0:	jmp    QWORD PTR [rip+0x17886]        # 0x44277c
  42aef6:	nop
  42aef7:	nop
  42aef8:	jmp    QWORD PTR [rip+0x17876]        # 0x442774
  42aefe:	nop
  42aeff:	nop
  42af00:	jmp    QWORD PTR [rip+0x17866]        # 0x44276c
  42af06:	nop
  42af07:	nop
  42af08:	jmp    QWORD PTR [rip+0x17e9e]        # 0x442dac
  42af0e:	nop
  42af0f:	nop
  42af10:	jmp    QWORD PTR [rip+0x17e8e]        # 0x442da4
  42af16:	nop
  42af17:	nop
  42af18:	jmp    QWORD PTR [rip+0x17e7e]        # 0x442d9c
  42af1e:	nop
  42af1f:	nop
  42af20:	jmp    QWORD PTR [rip+0x17e6e]        # 0x442d94
  42af26:	nop
  42af27:	nop
  42af28:	jmp    QWORD PTR [rip+0x17e5e]        # 0x442d8c
  42af2e:	nop
  42af2f:	nop
  42af30:	jmp    QWORD PTR [rip+0x17e4e]        # 0x442d84
  42af36:	nop
  42af37:	nop
  42af38:	jmp    QWORD PTR [rip+0x17e3e]        # 0x442d7c
  42af3e:	nop
  42af3f:	nop
  42af40:	jmp    QWORD PTR [rip+0x17e2e]        # 0x442d74
  42af46:	nop
  42af47:	nop
  42af48:	jmp    QWORD PTR [rip+0x17e1e]        # 0x442d6c
  42af4e:	nop
  42af4f:	nop
  42af50:	jmp    QWORD PTR [rip+0x17e0e]        # 0x442d64
  42af56:	nop
  42af57:	nop
  42af58:	jmp    QWORD PTR [rip+0x17dfe]        # 0x442d5c
  42af5e:	nop
  42af5f:	nop
  42af60:	jmp    QWORD PTR [rip+0x17dee]        # 0x442d54
  42af66:	nop
  42af67:	nop
  42af68:	jmp    QWORD PTR [rip+0x17dde]        # 0x442d4c
  42af6e:	nop
  42af6f:	nop
  42af70:	jmp    QWORD PTR [rip+0x17dce]        # 0x442d44
  42af76:	nop
  42af77:	nop
  42af78:	jmp    QWORD PTR [rip+0x17dbe]        # 0x442d3c
  42af7e:	nop
  42af7f:	nop
  42af80:	jmp    QWORD PTR [rip+0x17dae]        # 0x442d34
  42af86:	nop
  42af87:	nop
  42af88:	jmp    QWORD PTR [rip+0x17d9e]        # 0x442d2c
  42af8e:	nop
  42af8f:	nop
  42af90:	jmp    QWORD PTR [rip+0x17d8e]        # 0x442d24
  42af96:	nop
  42af97:	nop
  42af98:	jmp    QWORD PTR [rip+0x17d7e]        # 0x442d1c
  42af9e:	nop
  42af9f:	nop
  42afa0:	jmp    QWORD PTR [rip+0x17d6e]        # 0x442d14
  42afa6:	nop
  42afa7:	nop
  42afa8:	jmp    QWORD PTR [rip+0x17d5e]        # 0x442d0c
  42afae:	nop
  42afaf:	nop
  42afb0:	jmp    QWORD PTR [rip+0x17d4e]        # 0x442d04
  42afb6:	nop
  42afb7:	nop
  42afb8:	jmp    QWORD PTR [rip+0x17d3e]        # 0x442cfc
  42afbe:	nop
  42afbf:	nop
  42afc0:	jmp    QWORD PTR [rip+0x17d2e]        # 0x442cf4
  42afc6:	nop
  42afc7:	nop
  42afc8:	jmp    QWORD PTR [rip+0x17d1e]        # 0x442cec
  42afce:	nop
  42afcf:	nop
  42afd0:	jmp    QWORD PTR [rip+0x17d0e]        # 0x442ce4
  42afd6:	nop
  42afd7:	nop
  42afd8:	jmp    QWORD PTR [rip+0x17cfe]        # 0x442cdc
  42afde:	nop
  42afdf:	nop
  42afe0:	jmp    QWORD PTR [rip+0x178be]        # 0x4428a4
  42afe6:	nop
  42afe7:	nop
  42afe8:	jmp    QWORD PTR [rip+0x178ae]        # 0x44289c
  42afee:	nop
  42afef:	nop
  42aff0:	jmp    QWORD PTR [rip+0x1789e]        # 0x442894
  42aff6:	nop
  42aff7:	nop
  42aff8:	jmp    QWORD PTR [rip+0x1788e]        # 0x44288c
  42affe:	nop
  42afff:	nop
  42b000:	jmp    QWORD PTR [rip+0x1787e]        # 0x442884
  42b006:	nop
  42b007:	nop
  42b008:	jmp    QWORD PTR [rip+0x1786e]        # 0x44287c
  42b00e:	nop
  42b00f:	nop
  42b010:	jmp    QWORD PTR [rip+0x17c86]        # 0x442c9c
  42b016:	nop
  42b017:	nop
  42b018:	jmp    QWORD PTR [rip+0x17c76]        # 0x442c94
  42b01e:	nop
  42b01f:	nop
  42b020:	jmp    QWORD PTR [rip+0x17c66]        # 0x442c8c
  42b026:	nop
  42b027:	nop
  42b028:	jmp    QWORD PTR [rip+0x1772e]        # 0x44275c
  42b02e:	nop
  42b02f:	nop
  42b030:	jmp    QWORD PTR [rip+0x1771e]        # 0x442754
  42b036:	nop
  42b037:	nop
  42b038:	jmp    QWORD PTR [rip+0x1770e]        # 0x44274c
  42b03e:	nop
  42b03f:	nop
  42b040:	jmp    QWORD PTR [rip+0x1787e]        # 0x4428c4
  42b046:	nop
  42b047:	nop
  42b048:	jmp    QWORD PTR [rip+0x1786e]        # 0x4428bc
  42b04e:	nop
  42b04f:	nop
  42b050:	jmp    QWORD PTR [rip+0x1785e]        # 0x4428b4
  42b056:	nop
  42b057:	nop
  42b058:	nop    DWORD PTR [rax+rax*1+0x0]
  42b060:	push   rbx
  42b061:	sub    rsp,0x30
  42b065:	mov    rbx,rcx
  42b068:	mov    rcx,QWORD PTR [rip+0x16ee1]        # 0x441f50
  42b06f:	call   0x42b610
  42b074:	cmp    rax,0xffffffffffffffff
  42b078:	mov    QWORD PTR [rsp+0x20],rax
  42b07d:	je     0x42b0f5
  42b07f:	mov    ecx,0x8
  42b084:	call   0x42d7a0
  42b089:	mov    rcx,QWORD PTR [rip+0x16ec0]        # 0x441f50
  42b090:	call   0x42b610
  42b095:	mov    rcx,QWORD PTR [rip+0x16ebc]        # 0x441f58
  42b09c:	mov    QWORD PTR [rsp+0x20],rax
  42b0a1:	call   0x42b610
  42b0a6:	lea    rdx,[rsp+0x20]
  42b0ab:	lea    r8,[rsp+0x28]
  42b0b0:	mov    rcx,rbx
  42b0b3:	mov    QWORD PTR [rsp+0x28],rax
  42b0b8:	call   0x42d808
  42b0bd:	mov    rcx,QWORD PTR [rsp+0x20]
  42b0c2:	mov    rbx,rax
  42b0c5:	call   0x42b620
  42b0ca:	mov    rcx,QWORD PTR [rsp+0x28]
  42b0cf:	mov    QWORD PTR [rip+0x16e7a],rax        # 0x441f50
  42b0d6:	call   0x42b620
  42b0db:	mov    ecx,0x8
  42b0e0:	mov    QWORD PTR [rip+0x16e71],rax        # 0x441f58
  42b0e7:	call   0x42d768
  42b0ec:	mov    rax,rbx
  42b0ef:	add    rsp,0x30
  42b0f3:	pop    rbx
  42b0f4:	ret    
  42b0f5:	mov    rax,QWORD PTR [rip+0x10b14]        # 0x43bc10
  42b0fc:	mov    rcx,rbx
  42b0ff:	call   QWORD PTR [rax]
  42b101:	add    rsp,0x30
  42b105:	pop    rbx
  42b106:	ret    
  42b107:	nop    WORD PTR [rax+rax*1+0x0]
  42b110:	sub    rsp,0x28
  42b114:	call   0x42b060
  42b119:	test   rax,rax
  42b11c:	sete   al
  42b11f:	movzx  eax,al
  42b122:	neg    eax
  42b124:	add    rsp,0x28
  42b128:	ret    
  42b129:	nop
  42b12a:	nop
  42b12b:	nop
  42b12c:	nop
  42b12d:	nop
  42b12e:	nop
  42b12f:	nop
  42b130:	sub    rsp,0x28
  42b134:	mov    rax,QWORD PTR [rip+0x2f05]        # 0x42e040
  42b13b:	mov    rax,QWORD PTR [rax]
  42b13e:	test   rax,rax
  42b141:	je     0x42b160
  42b143:	call   rax
  42b145:	mov    rax,QWORD PTR [rip+0x2ef4]        # 0x42e040
  42b14c:	lea    rdx,[rax+0x8]
  42b150:	mov    rax,QWORD PTR [rax+0x8]
  42b154:	mov    QWORD PTR [rip+0x2ee5],rdx        # 0x42e040
  42b15b:	test   rax,rax
  42b15e:	jne    0x42b143
  42b160:	add    rsp,0x28
  42b164:	ret    
  42b165:	nop
  42b166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b170:	push   rsi
  42b171:	push   rbx
  42b172:	sub    rsp,0x28
  42b176:	mov    rsi,QWORD PTR [rip+0x10a03]        # 0x43bb80
  42b17d:	mov    rax,QWORD PTR [rsi]
  42b180:	cmp    eax,0xffffffff
  42b183:	mov    ebx,eax
  42b185:	je     0x42b1b0
  42b187:	test   ebx,ebx
  42b189:	je     0x42b19a
  42b18b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b190:	mov    eax,ebx
  42b192:	call   QWORD PTR [rsi+rax*8]
  42b195:	sub    ebx,0x1
  42b198:	jne    0x42b190
  42b19a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x42b130
  42b1a1:	add    rsp,0x28
  42b1a5:	pop    rbx
  42b1a6:	pop    rsi
  42b1a7:	jmp    0x42b110
  42b1ac:	nop    DWORD PTR [rax+0x0]
  42b1b0:	xor    ebx,ebx
  42b1b2:	jmp    0x42b1b6
  42b1b4:	mov    ebx,eax
  42b1b6:	lea    edx,[rbx+0x1]
  42b1b9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  42b1be:	mov    rax,rdx
  42b1c1:	jne    0x42b1b4
  42b1c3:	jmp    0x42b187
  42b1c5:	nop
  42b1c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b1d0:	mov    eax,DWORD PTR [rip+0x1638a]        # 0x441560
  42b1d6:	test   eax,eax
  42b1d8:	je     0x42b1e0
  42b1da:	repz ret 
  42b1dc:	nop    DWORD PTR [rax+0x0]
  42b1e0:	mov    DWORD PTR [rip+0x16376],0x1        # 0x441560
  42b1ea:	jmp    0x42b170
  42b1ec:	nop
  42b1ed:	nop
  42b1ee:	nop
  42b1ef:	nop
  42b1f0:	mov    rax,QWORD PTR [rip+0x17835]        # 0x442a2c
  42b1f7:	rex.W jmp rax
  42b1fa:	nop
  42b1fb:	nop
  42b1fc:	nop
  42b1fd:	nop
  42b1fe:	nop
  42b1ff:	nop
  42b200:	xor    eax,eax
  42b202:	ret    
  42b203:	nop
  42b204:	nop
  42b205:	nop
  42b206:	nop
  42b207:	nop
  42b208:	nop
  42b209:	nop
  42b20a:	nop
  42b20b:	nop
  42b20c:	nop
  42b20d:	nop
  42b20e:	nop
  42b20f:	nop
  42b210:	push   r12
  42b212:	push   rbp
  42b213:	push   rdi
  42b214:	push   rsi
  42b215:	push   rbx
  42b216:	sub    rsp,0x40
  42b21a:	mov    rbx,QWORD PTR [rip+0x2eaf]        # 0x42e0d0
  42b221:	movabs rax,0x2b992ddfa232
  42b22b:	mov    QWORD PTR [rsp+0x20],0x0
  42b234:	cmp    rbx,rax
  42b237:	je     0x42b250
  42b239:	not    rbx
  42b23c:	mov    QWORD PTR [rip+0x2e9d],rbx        # 0x42e0e0
  42b243:	add    rsp,0x40
  42b247:	pop    rbx
  42b248:	pop    rsi
  42b249:	pop    rdi
  42b24a:	pop    rbp
  42b24b:	pop    r12
  42b24d:	ret    
  42b24e:	xchg   ax,ax
  42b250:	lea    rcx,[rsp+0x20]
  42b255:	call   QWORD PTR [rip+0x176f1]        # 0x44294c
  42b25b:	mov    r12,QWORD PTR [rsp+0x20]
  42b260:	call   QWORD PTR [rip+0x176a6]        # 0x44290c
  42b266:	mov    ebp,eax
  42b268:	call   QWORD PTR [rip+0x176a6]        # 0x442914
  42b26e:	mov    edi,eax
  42b270:	call   QWORD PTR [rip+0x176de]        # 0x442954
  42b276:	lea    rcx,[rsp+0x30]
  42b27b:	mov    esi,eax
  42b27d:	call   QWORD PTR [rip+0x176f9]        # 0x44297c
  42b283:	xor    r12,QWORD PTR [rsp+0x30]
  42b288:	mov    edx,edi
  42b28a:	movabs rax,0xffffffffffff
  42b294:	xor    rbp,r12
  42b297:	mov    rdi,rbp
  42b29a:	xor    rdi,rdx
  42b29d:	mov    edx,esi
  42b29f:	xor    rdi,rdx
  42b2a2:	mov    rsi,rdi
  42b2a5:	and    rsi,rax
  42b2a8:	cmp    rsi,rbx
  42b2ab:	je     0x42b2d0
  42b2ad:	mov    rax,rsi
  42b2b0:	not    rax
  42b2b3:	mov    QWORD PTR [rip+0x2e16],rsi        # 0x42e0d0
  42b2ba:	mov    QWORD PTR [rip+0x2e1f],rax        # 0x42e0e0
  42b2c1:	add    rsp,0x40
  42b2c5:	pop    rbx
  42b2c6:	pop    rsi
  42b2c7:	pop    rdi
  42b2c8:	pop    rbp
  42b2c9:	pop    r12
  42b2cb:	ret    
  42b2cc:	nop    DWORD PTR [rax+0x0]
  42b2d0:	movabs rax,0xffffd466d2205dcc
  42b2da:	movabs rsi,0x2b992ddfa233
  42b2e4:	jmp    0x42b2b3
  42b2e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b2f0:	push   rbp
  42b2f1:	push   rsi
  42b2f2:	push   rbx
  42b2f3:	mov    rbp,rsp
  42b2f6:	sub    rsp,0x70
  42b2fa:	mov    rsi,rcx
  42b2fd:	lea    rcx,[rip+0x162bc]        # 0x4415c0
  42b304:	call   QWORD PTR [rip+0x17682]        # 0x44298c
  42b30a:	mov    rbx,QWORD PTR [rip+0x163a7]        # 0x4416b8
  42b311:	xor    r8d,r8d
  42b314:	lea    rdx,[rbp-0x28]
  42b318:	mov    rcx,rbx
  42b31b:	call   QWORD PTR [rip+0x17673]        # 0x442994
  42b321:	test   rax,rax
  42b324:	mov    r9,rax
  42b327:	je     0x42b3d0
  42b32d:	lea    rax,[rbp-0x20]
  42b331:	mov    QWORD PTR [rsp+0x38],0x0
  42b33a:	mov    r8,rbx
  42b33d:	mov    rdx,QWORD PTR [rbp-0x28]
  42b341:	xor    ecx,ecx
  42b343:	mov    QWORD PTR [rsp+0x30],rax
  42b348:	lea    rax,[rbp-0x18]
  42b34c:	mov    QWORD PTR [rsp+0x28],rax
  42b351:	lea    rax,[rip+0x16268]        # 0x4415c0
  42b358:	mov    QWORD PTR [rsp+0x20],rax
  42b35d:	call   QWORD PTR [rip+0x17639]        # 0x44299c
  42b363:	mov    rax,QWORD PTR [rip+0x1634e]        # 0x4416b8
  42b36a:	xor    ecx,ecx
  42b36c:	mov    QWORD PTR [rip+0x162cd],rsi        # 0x441640
  42b373:	mov    DWORD PTR [rip+0x16743],0xc0000409        # 0x441ac0
  42b37d:	mov    DWORD PTR [rip+0x1673d],0x1        # 0x441ac4
  42b387:	mov    QWORD PTR [rip+0x16742],rax        # 0x441ad0
  42b38e:	mov    rax,QWORD PTR [rip+0x2d3b]        # 0x42e0d0
  42b395:	mov    QWORD PTR [rbp-0x10],rax
  42b399:	mov    rax,QWORD PTR [rip+0x2d40]        # 0x42e0e0
  42b3a0:	mov    QWORD PTR [rbp-0x8],rax
  42b3a4:	call   QWORD PTR [rip+0x17602]        # 0x4429ac
  42b3aa:	lea    rcx,[rip+0x1030f]        # 0x43b6c0
  42b3b1:	call   QWORD PTR [rip+0x1761d]        # 0x4429d4
  42b3b7:	call   QWORD PTR [rip+0x17547]        # 0x442904
  42b3bd:	mov    edx,0xc0000409
  42b3c2:	mov    rcx,rax
  42b3c5:	call   QWORD PTR [rip+0x175f1]        # 0x4429bc
  42b3cb:	call   0x42d758
  42b3d0:	mov    rax,QWORD PTR [rbp+0x18]
  42b3d4:	mov    QWORD PTR [rip+0x162dd],rax        # 0x4416b8
  42b3db:	lea    rax,[rbp+0x8]
  42b3df:	mov    QWORD PTR [rip+0x16272],rax        # 0x441658
  42b3e6:	jmp    0x42b363
  42b3eb:	nop
  42b3ec:	nop
  42b3ed:	nop
  42b3ee:	nop
  42b3ef:	nop
  42b3f0:	sub    rsp,0x28
  42b3f4:	test   edx,edx
  42b3f6:	je     0x42b410
  42b3f8:	cmp    edx,0x3
  42b3fb:	je     0x42b410
  42b3fd:	mov    eax,0x1
  42b402:	add    rsp,0x28
  42b406:	ret    
  42b407:	nop    WORD PTR [rax+rax*1+0x0]
  42b410:	call   0x42c100
  42b415:	mov    eax,0x1
  42b41a:	add    rsp,0x28
  42b41e:	ret    
  42b41f:	nop
  42b420:	push   rsi
  42b421:	push   rbx
  42b422:	sub    rsp,0x28
  42b426:	mov    rax,QWORD PTR [rip+0x10733]        # 0x43bb60
  42b42d:	cmp    DWORD PTR [rax],0x2
  42b430:	je     0x42b438
  42b432:	mov    DWORD PTR [rax],0x2
  42b438:	cmp    edx,0x2
  42b43b:	je     0x42b450
  42b43d:	cmp    edx,0x1
  42b440:	je     0x42b482
  42b442:	mov    eax,0x1
  42b447:	add    rsp,0x28
  42b44b:	pop    rbx
  42b44c:	pop    rsi
  42b44d:	ret    
  42b44e:	xchg   ax,ax
  42b450:	lea    rbx,[rip+0x18c09]        # 0x444060
  42b457:	lea    rsi,[rip+0x18c02]        # 0x444060
  42b45e:	cmp    rbx,rsi
  42b461:	je     0x42b442
  42b463:	mov    rax,QWORD PTR [rbx]
  42b466:	test   rax,rax
  42b469:	je     0x42b46d
  42b46b:	call   rax
  42b46d:	add    rbx,0x8
  42b471:	cmp    rbx,rsi
  42b474:	jne    0x42b463
  42b476:	mov    eax,0x1
  42b47b:	add    rsp,0x28
  42b47f:	pop    rbx
  42b480:	pop    rsi
  42b481:	ret    
  42b482:	call   0x42c100
  42b487:	jmp    0x42b442
  42b489:	nop    DWORD PTR [rax+0x0]
  42b490:	xor    eax,eax
  42b492:	ret    
  42b493:	nop
  42b494:	nop
  42b495:	nop
  42b496:	nop
  42b497:	nop
  42b498:	nop
  42b499:	nop
  42b49a:	nop
  42b49b:	nop
  42b49c:	nop
  42b49d:	nop
  42b49e:	nop
  42b49f:	nop
  42b4a0:	sub    rsp,0x58
  42b4a4:	mov    rax,QWORD PTR [rip+0x166f5]        # 0x441ba0
  42b4ab:	test   rax,rax
  42b4ae:	je     0x42b4dc
  42b4b0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  42b4b9:	mov    DWORD PTR [rsp+0x20],ecx
  42b4bd:	lea    rcx,[rsp+0x20]
  42b4c2:	mov    QWORD PTR [rsp+0x28],rdx
  42b4c7:	movsd  QWORD PTR [rsp+0x30],xmm2
  42b4cd:	movsd  QWORD PTR [rsp+0x38],xmm3
  42b4d3:	movsd  QWORD PTR [rsp+0x40],xmm0
  42b4d9:	call   rax
  42b4db:	nop
  42b4dc:	add    rsp,0x58
  42b4e0:	ret    
  42b4e1:	nop    DWORD PTR [rax+rax*1+0x0]
  42b4e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b4f0:	mov    QWORD PTR [rip+0x166a9],rcx        # 0x441ba0
  42b4f7:	jmp    0x42d7e0
  42b4fc:	nop    DWORD PTR [rax+0x0]
  42b500:	push   rsi
  42b501:	push   rbx
  42b502:	sub    rsp,0x78
  42b506:	movaps XMMWORD PTR [rsp+0x40],xmm6
  42b50b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  42b510:	movaps XMMWORD PTR [rsp+0x60],xmm8
  42b516:	cmp    DWORD PTR [rcx],0x6
  42b519:	ja     0x42b5f0
  42b51f:	mov    edx,DWORD PTR [rcx]
  42b521:	lea    rax,[rip+0x102dc]        # 0x43b804
  42b528:	movsxd rdx,DWORD PTR [rax+rdx*4]
  42b52c:	add    rax,rdx
  42b52f:	jmp    rax
  42b531:	lea    rbx,[rip+0x101a8]        # 0x43b6e0
  42b538:	nop    DWORD PTR [rax+rax*1+0x0]
  42b540:	movsd  xmm8,QWORD PTR [rcx+0x20]
  42b546:	mov    rsi,QWORD PTR [rcx+0x8]
  42b54a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  42b54f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  42b554:	call   0x42d7f8
  42b559:	movsd  QWORD PTR [rsp+0x30],xmm8
  42b560:	lea    rcx,[rax+0x60]
  42b564:	lea    rdx,[rip+0x1026d]        # 0x43b7d8
  42b56b:	movsd  QWORD PTR [rsp+0x28],xmm7
  42b571:	mov    r9,rsi
  42b574:	mov    r8,rbx
  42b577:	movsd  QWORD PTR [rsp+0x20],xmm6
  42b57d:	call   0x42d710
  42b582:	nop
  42b583:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  42b588:	xor    eax,eax
  42b58a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  42b58f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  42b595:	add    rsp,0x78
  42b599:	pop    rbx
  42b59a:	pop    rsi
  42b59b:	ret    
  42b59c:	nop    DWORD PTR [rax+0x0]
  42b5a0:	lea    rbx,[rip+0x10158]        # 0x43b6ff
  42b5a7:	jmp    0x42b540
  42b5a9:	nop    DWORD PTR [rax+0x0]
  42b5b0:	lea    rbx,[rip+0x10169]        # 0x43b720
  42b5b7:	jmp    0x42b540
  42b5b9:	nop    DWORD PTR [rax+0x0]
  42b5c0:	lea    rbx,[rip+0x101c9]        # 0x43b790
  42b5c7:	jmp    0x42b540
  42b5cc:	nop    DWORD PTR [rax+0x0]
  42b5d0:	lea    rbx,[rip+0x10191]        # 0x43b768
  42b5d7:	jmp    0x42b540
  42b5dc:	nop    DWORD PTR [rax+0x0]
  42b5e0:	lea    rbx,[rip+0x10159]        # 0x43b740
  42b5e7:	jmp    0x42b540
  42b5ec:	nop    DWORD PTR [rax+0x0]
  42b5f0:	lea    rbx,[rip+0x101cf]        # 0x43b7c6
  42b5f7:	jmp    0x42b540
  42b5fc:	nop
  42b5fd:	nop
  42b5fe:	nop
  42b5ff:	nop
  42b600:	fninit 
  42b602:	ret    
  42b603:	nop
  42b604:	nop
  42b605:	nop
  42b606:	nop
  42b607:	nop
  42b608:	nop
  42b609:	nop
  42b60a:	nop
  42b60b:	nop
  42b60c:	nop
  42b60d:	nop
  42b60e:	nop
  42b60f:	nop
  42b610:	mov    rax,rcx
  42b613:	ret    
  42b614:	xchg   ax,ax
  42b616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b620:	mov    rax,rcx
  42b623:	ret    
  42b624:	nop
  42b625:	nop
  42b626:	nop
  42b627:	nop
  42b628:	nop
  42b629:	nop
  42b62a:	nop
  42b62b:	nop
  42b62c:	nop
  42b62d:	nop
  42b62e:	nop
  42b62f:	nop
  42b630:	push   rsi
  42b631:	push   rbx
  42b632:	sub    rsp,0x38
  42b636:	lea    rax,[rsp+0x58]
  42b63b:	mov    rbx,rcx
  42b63e:	mov    QWORD PTR [rsp+0x58],rdx
  42b643:	mov    QWORD PTR [rsp+0x60],r8
  42b648:	mov    QWORD PTR [rsp+0x68],r9
  42b64d:	mov    QWORD PTR [rsp+0x28],rax
  42b652:	call   0x42d7f8
  42b657:	lea    rcx,[rip+0x101c2]        # 0x43b820
  42b65e:	lea    r9,[rax+0x60]
  42b662:	mov    r8d,0x1b
  42b668:	mov    edx,0x1
  42b66d:	call   0x42d6e8
  42b672:	mov    rsi,QWORD PTR [rsp+0x28]
  42b677:	call   0x42d7f8
  42b67c:	lea    rcx,[rax+0x60]
  42b680:	mov    rdx,rbx
  42b683:	mov    r8,rsi
  42b686:	call   0x42d5d8
  42b68b:	call   0x42d758
  42b690:	nop
  42b691:	nop    DWORD PTR [rax+rax*1+0x0]
  42b696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b6a0:	push   r13
  42b6a2:	push   r12
  42b6a4:	push   rbp
  42b6a5:	push   rdi
  42b6a6:	push   rsi
  42b6a7:	push   rbx
  42b6a8:	sub    rsp,0x58
  42b6ac:	movsxd rbp,DWORD PTR [rip+0x16511]        # 0x441bc4
  42b6b3:	mov    rbx,rcx
  42b6b6:	mov    rsi,rdx
  42b6b9:	mov    rdi,r8
  42b6bc:	test   ebp,ebp
  42b6be:	jle    0x42b7ba
  42b6c4:	mov    rax,QWORD PTR [rip+0x164fd]        # 0x441bc8
  42b6cb:	xor    r9d,r9d
  42b6ce:	add    rax,0x8
  42b6d2:	mov    r10,QWORD PTR [rax]
  42b6d5:	cmp    rbx,r10
  42b6d8:	jb     0x42b6ee
  42b6da:	mov    rdx,QWORD PTR [rax+0x8]
  42b6de:	mov    r11d,DWORD PTR [rdx+0x8]
  42b6e2:	add    r10,r11
  42b6e5:	cmp    rbx,r10
  42b6e8:	jb     0x42b7a0
  42b6ee:	add    r9d,0x1
  42b6f2:	add    rax,0x18
  42b6f6:	cmp    r9d,ebp
  42b6f9:	jne    0x42b6d2
  42b6fb:	mov    rcx,rbx
  42b6fe:	call   0x42c310
  42b703:	test   rax,rax
  42b706:	mov    r12,rax
  42b709:	je     0x42b7f2
  42b70f:	lea    rbp,[rbp+rbp*2+0x0]
  42b714:	shl    rbp,0x3
  42b718:	mov    r13,rbp
  42b71b:	add    r13,QWORD PTR [rip+0x164a6]        # 0x441bc8
  42b722:	mov    QWORD PTR [r13+0x10],rax
  42b726:	mov    DWORD PTR [r13+0x0],0x0
  42b72e:	call   0x42c430
  42b733:	mov    edx,DWORD PTR [r12+0xc]
  42b738:	mov    r8d,0x30
  42b73e:	add    rax,rdx
  42b741:	lea    rdx,[rsp+0x20]
  42b746:	mov    QWORD PTR [r13+0x8],rax
  42b74a:	mov    rax,QWORD PTR [rip+0x16477]        # 0x441bc8
  42b751:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  42b756:	call   QWORD PTR [rip+0x17288]        # 0x4429e4
  42b75c:	test   rax,rax
  42b75f:	je     0x42b7d5
  42b761:	mov    eax,DWORD PTR [rsp+0x44]
  42b765:	lea    edx,[rax-0x4]
  42b768:	and    edx,0xfffffffb
  42b76b:	je     0x42b799
  42b76d:	sub    eax,0x40
  42b770:	and    eax,0xffffffbf
  42b773:	je     0x42b799
  42b775:	mov    r9,rbp
  42b778:	add    r9,QWORD PTR [rip+0x16449]        # 0x441bc8
  42b77f:	mov    r8d,0x40
  42b785:	mov    rdx,QWORD PTR [rsp+0x38]
  42b78a:	mov    rcx,QWORD PTR [rsp+0x20]
  42b78f:	call   QWORD PTR [rip+0x17247]        # 0x4429dc
  42b795:	test   eax,eax
  42b797:	je     0x42b7c1
  42b799:	add    DWORD PTR [rip+0x16424],0x1        # 0x441bc4
  42b7a0:	mov    r8,rdi
  42b7a3:	mov    rdx,rsi
  42b7a6:	mov    rcx,rbx
  42b7a9:	add    rsp,0x58
  42b7ad:	pop    rbx
  42b7ae:	pop    rsi
  42b7af:	pop    rdi
  42b7b0:	pop    rbp
  42b7b1:	pop    r12
  42b7b3:	pop    r13
  42b7b5:	jmp    0x42d6a8
  42b7ba:	xor    ebp,ebp
  42b7bc:	jmp    0x42b6fb
  42b7c1:	call   QWORD PTR [rip+0x17155]        # 0x44291c
  42b7c7:	lea    rcx,[rip+0x100ca]        # 0x43b898
  42b7ce:	mov    edx,eax
  42b7d0:	call   0x42b630
  42b7d5:	mov    rax,QWORD PTR [rip+0x163ec]        # 0x441bc8
  42b7dc:	mov    edx,DWORD PTR [r12+0x8]
  42b7e1:	lea    rcx,[rip+0x10078]        # 0x43b860
  42b7e8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  42b7ed:	call   0x42b630
  42b7f2:	lea    rcx,[rip+0x10047]        # 0x43b840
  42b7f9:	mov    rdx,rbx
  42b7fc:	call   0x42b630
  42b801:	nop
  42b802:	nop    DWORD PTR [rax+0x0]
  42b806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b810:	push   rbp
  42b811:	push   r14
  42b813:	push   r13
  42b815:	push   r12
  42b817:	push   rdi
  42b818:	push   rsi
  42b819:	push   rbx
  42b81a:	mov    rbp,rsp
  42b81d:	sub    rsp,0x60
  42b821:	mov    ebx,DWORD PTR [rip+0x16399]        # 0x441bc0
  42b827:	test   ebx,ebx
  42b829:	je     0x42b840
  42b82b:	mov    rsp,rbp
  42b82e:	pop    rbx
  42b82f:	pop    rsi
  42b830:	pop    rdi
  42b831:	pop    r12
  42b833:	pop    r13
  42b835:	pop    r14
  42b837:	pop    rbp
  42b838:	ret    
  42b839:	nop    DWORD PTR [rax+0x0]
  42b840:	mov    DWORD PTR [rip+0x16376],0x1        # 0x441bc0
  42b84a:	call   0x42c360
  42b84f:	cdqe   
  42b851:	lea    rax,[rax+rax*2]
  42b855:	lea    rax,[rax*8+0x1e]
  42b85d:	and    rax,0xfffffffffffffff0
  42b861:	call   0x42c580
  42b866:	mov    rsi,QWORD PTR [rip+0x10323]        # 0x43bb90
  42b86d:	mov    rbx,QWORD PTR [rip+0x1032c]        # 0x43bba0
  42b874:	sub    rsp,rax
  42b877:	mov    DWORD PTR [rip+0x16343],0x0        # 0x441bc4
  42b881:	lea    rax,[rsp+0x20]
  42b886:	mov    QWORD PTR [rip+0x1633b],rax        # 0x441bc8
  42b88d:	mov    rax,rsi
  42b890:	sub    rax,rbx
  42b893:	cmp    rax,0x7
  42b897:	jle    0x42b82b
  42b899:	cmp    rax,0xb
  42b89d:	jle    0x42b8c5
  42b89f:	mov    r11d,DWORD PTR [rbx]
  42b8a2:	test   r11d,r11d
  42b8a5:	jne    0x42b9f0
  42b8ab:	mov    r10d,DWORD PTR [rbx+0x4]
  42b8af:	test   r10d,r10d
  42b8b2:	jne    0x42b9f0
  42b8b8:	mov    r9d,DWORD PTR [rbx+0x8]
  42b8bc:	test   r9d,r9d
  42b8bf:	jne    0x42b8dc
  42b8c1:	add    rbx,0xc
  42b8c5:	mov    r8d,DWORD PTR [rbx]
  42b8c8:	test   r8d,r8d
  42b8cb:	jne    0x42b9f0
  42b8d1:	mov    ecx,DWORD PTR [rbx+0x4]
  42b8d4:	test   ecx,ecx
  42b8d6:	jne    0x42b9f0
  42b8dc:	mov    edx,DWORD PTR [rbx+0x8]
  42b8df:	cmp    edx,0x1
  42b8e2:	jne    0x42bafc
  42b8e8:	add    rbx,0xc
  42b8ec:	cmp    rbx,rsi
  42b8ef:	jae    0x42b82b
  42b8f5:	mov    r12,QWORD PTR [rip+0x102c4]        # 0x43bbc0
  42b8fc:	lea    r13,[rbp-0x30]
  42b900:	movabs r14,0xffffffff00000000
  42b90a:	mov    ecx,DWORD PTR [rbx+0x4]
  42b90d:	mov    eax,DWORD PTR [rbx]
  42b90f:	movzx  edx,BYTE PTR [rbx+0x8]
  42b913:	add    rax,r12
  42b916:	add    rcx,r12
  42b919:	cmp    edx,0x10
  42b91c:	mov    r8,QWORD PTR [rax]
  42b91f:	je     0x42ba66
  42b925:	jbe    0x42ba2d
  42b92b:	cmp    edx,0x20
  42b92e:	je     0x42baaf
  42b934:	cmp    edx,0x40
  42b937:	jne    0x42ba9b
  42b93d:	sub    r8,rax
  42b940:	mov    rdx,r13
  42b943:	mov    rdi,r13
  42b946:	mov    rax,r8
  42b949:	add    rax,QWORD PTR [rcx]
  42b94c:	mov    r8d,0x8
  42b952:	mov    QWORD PTR [rbp-0x30],rax
  42b956:	call   0x42b6a0
  42b95b:	add    rbx,0xc
  42b95f:	cmp    rbx,rsi
  42b962:	jb     0x42b90a
  42b964:	mov    eax,DWORD PTR [rip+0x1625a]        # 0x441bc4
  42b96a:	xor    ebx,ebx
  42b96c:	xor    esi,esi
  42b96e:	test   eax,eax
  42b970:	jle    0x42b82b
  42b976:	mov    r14,QWORD PTR [rip+0x17067]        # 0x4429e4
  42b97d:	lea    r13,[rbp-0x34]
  42b981:	mov    r12,QWORD PTR [rip+0x17054]        # 0x4429dc
  42b988:	jmp    0x42b9a3
  42b98a:	nop    WORD PTR [rax+rax*1+0x0]
  42b990:	add    esi,0x1
  42b993:	add    rbx,0x18
  42b997:	cmp    esi,DWORD PTR [rip+0x16227]        # 0x441bc4
  42b99d:	jge    0x42b82b
  42b9a3:	mov    rax,rbx
  42b9a6:	add    rax,QWORD PTR [rip+0x1621b]        # 0x441bc8
  42b9ad:	mov    edx,DWORD PTR [rax]
  42b9af:	test   edx,edx
  42b9b1:	je     0x42b990
  42b9b3:	mov    rcx,QWORD PTR [rax+0x8]
  42b9b7:	mov    r8d,0x30
  42b9bd:	mov    rdx,rdi
  42b9c0:	call   r14
  42b9c3:	test   rax,rax
  42b9c6:	je     0x42bade
  42b9cc:	mov    rax,QWORD PTR [rip+0x161f5]        # 0x441bc8
  42b9d3:	mov    r9,r13
  42b9d6:	mov    rdx,QWORD PTR [rbp-0x18]
  42b9da:	mov    rcx,QWORD PTR [rbp-0x30]
  42b9de:	mov    r8d,DWORD PTR [rax+rbx*1]
  42b9e2:	call   r12
  42b9e5:	jmp    0x42b990
  42b9e7:	nop    WORD PTR [rax+rax*1+0x0]
  42b9f0:	cmp    rbx,rsi
  42b9f3:	jae    0x42b82b
  42b9f9:	mov    r12,QWORD PTR [rip+0x101c0]        # 0x43bbc0
  42ba00:	lea    rdi,[rbp-0x30]
  42ba04:	mov    ecx,DWORD PTR [rbx+0x4]
  42ba07:	mov    eax,DWORD PTR [rbx]
  42ba09:	mov    r8d,0x4
  42ba0f:	mov    rdx,rdi
  42ba12:	add    rbx,0x8
  42ba16:	add    rcx,r12
  42ba19:	add    eax,DWORD PTR [rcx]
  42ba1b:	mov    DWORD PTR [rbp-0x30],eax
  42ba1e:	call   0x42b6a0
  42ba23:	cmp    rbx,rsi
  42ba26:	jb     0x42ba04
  42ba28:	jmp    0x42b964
  42ba2d:	cmp    edx,0x8
  42ba30:	jne    0x42ba9b
  42ba32:	movzx  edx,BYTE PTR [rcx]
  42ba35:	mov    rdi,r13
  42ba38:	mov    r10,rdx
  42ba3b:	or     r10,0xffffffffffffff00
  42ba42:	test   dl,dl
  42ba44:	cmovs  rdx,r10
  42ba48:	sub    rdx,rax
  42ba4b:	lea    rax,[r8+rdx*1]
  42ba4f:	mov    r8d,0x1
  42ba55:	mov    rdx,r13
  42ba58:	mov    QWORD PTR [rbp-0x30],rax
  42ba5c:	call   0x42b6a0
  42ba61:	jmp    0x42b95b
  42ba66:	movzx  edx,WORD PTR [rcx]
  42ba69:	mov    rdi,r13
  42ba6c:	mov    r10,rdx
  42ba6f:	or     r10,0xffffffffffff0000
  42ba76:	test   dx,dx
  42ba79:	cmovs  rdx,r10
  42ba7d:	sub    rdx,rax
  42ba80:	lea    rax,[r8+rdx*1]
  42ba84:	mov    r8d,0x2
  42ba8a:	mov    rdx,r13
  42ba8d:	mov    QWORD PTR [rbp-0x30],rax
  42ba91:	call   0x42b6a0
  42ba96:	jmp    0x42b95b
  42ba9b:	lea    rcx,[rip+0xfe56]        # 0x43b8f8
  42baa2:	mov    QWORD PTR [rbp-0x30],0x0
  42baaa:	call   0x42b630
  42baaf:	mov    edx,DWORD PTR [rcx]
  42bab1:	mov    rdi,r13
  42bab4:	mov    r10,rdx
  42bab7:	or     r10,r14
  42baba:	test   edx,edx
  42babc:	cmovs  rdx,r10
  42bac0:	sub    rdx,rax
  42bac3:	lea    rax,[r8+rdx*1]
  42bac7:	mov    r8d,0x4
  42bacd:	mov    rdx,r13
  42bad0:	mov    QWORD PTR [rbp-0x30],rax
  42bad4:	call   0x42b6a0
  42bad9:	jmp    0x42b95b
  42bade:	add    rbx,QWORD PTR [rip+0x160e3]        # 0x441bc8
  42bae5:	lea    rcx,[rip+0xfd74]        # 0x43b860
  42baec:	mov    rax,QWORD PTR [rbx+0x10]
  42baf0:	mov    r8,QWORD PTR [rbx+0x8]
  42baf4:	mov    edx,DWORD PTR [rax+0x8]
  42baf7:	call   0x42b630
  42bafc:	lea    rcx,[rip+0xfdbd]        # 0x43b8c0
  42bb03:	call   0x42b630
  42bb08:	nop
  42bb09:	nop
  42bb0a:	nop
  42bb0b:	nop
  42bb0c:	nop
  42bb0d:	nop
  42bb0e:	nop
  42bb0f:	nop
  42bb10:	sub    rsp,0x28
  42bb14:	mov    eax,DWORD PTR [rcx]
  42bb16:	cmp    eax,0xc0000091
  42bb1b:	ja     0x42bb80
  42bb1d:	cmp    eax,0xc000008d
  42bb22:	jae    0x42bb9f
  42bb24:	cmp    eax,0xc0000008
  42bb29:	je     0x42bc40
  42bb2f:	ja     0x42bc10
  42bb35:	cmp    eax,0x80000002
  42bb3a:	je     0x42bc40
  42bb40:	cmp    eax,0xc0000005
  42bb45:	jne    0x42bc1e
  42bb4b:	xor    edx,edx
  42bb4d:	mov    ecx,0xb
  42bb52:	call   0x42d650
  42bb57:	cmp    rax,0x1
  42bb5b:	je     0x42bca0
  42bb61:	test   rax,rax
  42bb64:	je     0x42bc80
  42bb6a:	mov    ecx,0xb
  42bb6f:	call   rax
  42bb71:	xor    eax,eax
  42bb73:	add    rsp,0x28
  42bb77:	ret    
  42bb78:	nop    DWORD PTR [rax+rax*1+0x0]
  42bb80:	cmp    eax,0xc0000094
  42bb85:	je     0x42bc50
  42bb8b:	ja     0x42bbd0
  42bb8d:	cmp    eax,0xc0000092
  42bb92:	je     0x42bc40
  42bb98:	cmp    eax,0xc0000093
  42bb9d:	jne    0x42bc1e
  42bb9f:	xor    edx,edx
  42bba1:	mov    ecx,0x8
  42bba6:	call   0x42d650
  42bbab:	cmp    rax,0x1
  42bbaf:	mov    rdx,rax
  42bbb2:	je     0x42bc28
  42bbb4:	test   rdx,rdx
  42bbb7:	mov    eax,0x1
  42bbbc:	je     0x42bb73
  42bbbe:	mov    ecx,0x8
  42bbc3:	call   rdx
  42bbc5:	xor    eax,eax
  42bbc7:	add    rsp,0x28
  42bbcb:	ret    
  42bbcc:	nop    DWORD PTR [rax+0x0]
  42bbd0:	cmp    eax,0xc0000095
  42bbd5:	je     0x42bc40
  42bbd7:	cmp    eax,0xc0000096
  42bbdc:	jne    0x42bc1e
  42bbde:	xor    edx,edx
  42bbe0:	mov    ecx,0x4
  42bbe5:	call   0x42d650
  42bbea:	cmp    rax,0x1
  42bbee:	je     0x42bc8a
  42bbf4:	test   rax,rax
  42bbf7:	je     0x42bc80
  42bbfd:	mov    ecx,0x4
  42bc02:	call   rax
  42bc04:	xor    eax,eax
  42bc06:	jmp    0x42bb73
  42bc0b:	nop    DWORD PTR [rax+rax*1+0x0]
  42bc10:	cmp    eax,0xc000001d
  42bc15:	je     0x42bbde
  42bc17:	cmp    eax,0xc000008c
  42bc1c:	je     0x42bc40
  42bc1e:	mov    eax,0x1
  42bc23:	add    rsp,0x28
  42bc27:	ret    
  42bc28:	mov    edx,0x1
  42bc2d:	mov    ecx,0x8
  42bc32:	call   0x42d650
  42bc37:	call   0x42b600
  42bc3c:	nop    DWORD PTR [rax+0x0]
  42bc40:	xor    eax,eax
  42bc42:	add    rsp,0x28
  42bc46:	ret    
  42bc47:	nop    WORD PTR [rax+rax*1+0x0]
  42bc50:	xor    edx,edx
  42bc52:	mov    ecx,0x8
  42bc57:	call   0x42d650
  42bc5c:	cmp    rax,0x1
  42bc60:	mov    rdx,rax
  42bc63:	jne    0x42bbb4
  42bc69:	mov    edx,0x1
  42bc6e:	mov    ecx,0x8
  42bc73:	call   0x42d650
  42bc78:	xor    eax,eax
  42bc7a:	jmp    0x42bb73
  42bc7f:	nop
  42bc80:	mov    eax,0x4
  42bc85:	add    rsp,0x28
  42bc89:	ret    
  42bc8a:	mov    edx,0x1
  42bc8f:	mov    ecx,0x4
  42bc94:	call   0x42d650
  42bc99:	xor    eax,eax
  42bc9b:	jmp    0x42bb73
  42bca0:	mov    edx,0x1
  42bca5:	mov    ecx,0xb
  42bcaa:	call   0x42d650
  42bcaf:	xor    eax,eax
  42bcb1:	jmp    0x42bb73
  42bcb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bcc0:	push   r12
  42bcc2:	push   rbp
  42bcc3:	push   rdi
  42bcc4:	push   rsi
  42bcc5:	push   rbx
  42bcc6:	sub    rsp,0x20
  42bcca:	call   0x42c430
  42bccf:	mov    rbp,rax
  42bcd2:	mov    eax,DWORD PTR [rip+0x15f30]        # 0x441c08
  42bcd8:	test   eax,eax
  42bcda:	jne    0x42bd01
  42bcdc:	test   rbp,rbp
  42bcdf:	je     0x42bd01
  42bce1:	lea    rcx,[rip+0xfc48]        # 0x43b930
  42bce8:	mov    DWORD PTR [rip+0x15f16],0x1        # 0x441c08
  42bcf2:	call   0x42c270
  42bcf7:	test   rax,rax
  42bcfa:	je     0x42bd10
  42bcfc:	mov    eax,0x1
  42bd01:	add    rsp,0x20
  42bd05:	pop    rbx
  42bd06:	pop    rsi
  42bd07:	pop    rdi
  42bd08:	pop    rbp
  42bd09:	pop    r12
  42bd0b:	ret    
  42bd0c:	nop    DWORD PTR [rax+0x0]
  42bd10:	lea    rbx,[rip+0x16029]        # 0x441d40
  42bd17:	mov    ecx,0x30
  42bd1c:	lea    rdx,[rip+0x15f1d]        # 0x441c40
  42bd23:	lea    r12,[rip+0xfffffffffffffde6]        # 0x42bb10
  42bd2a:	xor    esi,esi
  42bd2c:	mov    rdi,rbx
  42bd2f:	rep stos QWORD PTR es:[rdi],rax
  42bd32:	mov    rdi,rdx
  42bd35:	sub    r12,rbp
  42bd38:	mov    cl,0x20
  42bd3a:	rep stos QWORD PTR es:[rdi],rax
  42bd3d:	mov    rdi,rdx
  42bd40:	jmp    0x42bd70
  42bd42:	mov    BYTE PTR [rdi],0x9
  42bd45:	mov    DWORD PTR [rdi+0x4],r12d
  42bd49:	add    rsi,0x1
  42bd4d:	mov    edx,DWORD PTR [rax+0xc]
  42bd50:	add    rbx,0xc
  42bd54:	mov    DWORD PTR [rbx-0xc],edx
  42bd57:	add    edx,DWORD PTR [rax+0x8]
  42bd5a:	mov    rax,rdi
  42bd5d:	sub    rax,rbp
  42bd60:	add    rdi,0x8
  42bd64:	mov    DWORD PTR [rbx-0x4],eax
  42bd67:	mov    DWORD PTR [rbx-0x8],edx
  42bd6a:	cmp    rsi,0x20
  42bd6e:	je     0x42bda5
  42bd70:	mov    rcx,rsi
  42bd73:	call   0x42c3a0
  42bd78:	test   rax,rax
  42bd7b:	jne    0x42bd42
  42bd7d:	test   rsi,rsi
  42bd80:	je     0x42bcfc
  42bd86:	mov    edx,esi
  42bd88:	nop    DWORD PTR [rax+rax*1+0x0]
  42bd90:	mov    r8,rbp
  42bd93:	lea    rcx,[rip+0x15fa6]        # 0x441d40
  42bd9a:	call   QWORD PTR [rip+0x16be4]        # 0x442984
  42bda0:	jmp    0x42bcfc
  42bda5:	mov    edx,0x20
  42bdaa:	jmp    0x42bd90
  42bdac:	nop    DWORD PTR [rax+0x0]
  42bdb0:	push   rbx
  42bdb1:	sub    rsp,0x20
  42bdb5:	mov    rdx,QWORD PTR [rcx]
  42bdb8:	mov    eax,DWORD PTR [rdx]
  42bdba:	mov    r8d,eax
  42bdbd:	and    r8d,0x20ffffff
  42bdc4:	cmp    r8d,0x20474343
  42bdcb:	je     0x42bed0
  42bdd1:	cmp    eax,0xc0000091
  42bdd6:	mov    rbx,rcx
  42bdd9:	ja     0x42be60
  42bddf:	cmp    eax,0xc000008d
  42bde4:	jae    0x42be77
  42bdea:	cmp    eax,0xc0000008
  42bdef:	je     0x42be23
  42bdf1:	ja     0x42be30
  42bdf3:	cmp    eax,0x80000002
  42bdf8:	je     0x42be23
  42bdfa:	cmp    eax,0xc0000005
  42bdff:	jne    0x42be42
  42be01:	xor    edx,edx
  42be03:	mov    ecx,0xb
  42be08:	call   0x42d650
  42be0d:	cmp    rax,0x1
  42be11:	je     0x42bf40
  42be17:	test   rax,rax
  42be1a:	je     0x42be42
  42be1c:	mov    ecx,0xb
  42be21:	call   rax
  42be23:	mov    eax,0xffffffff
  42be28:	add    rsp,0x20
  42be2c:	pop    rbx
  42be2d:	ret    
  42be2e:	xchg   ax,ax
  42be30:	cmp    eax,0xc000001d
  42be35:	je     0x42bef6
  42be3b:	cmp    eax,0xc000008c
  42be40:	je     0x42be23
  42be42:	mov    rax,QWORD PTR [rip+0x15db7]        # 0x441c00
  42be49:	test   rax,rax
  42be4c:	je     0x42be28
  42be4e:	mov    rcx,rbx
  42be51:	add    rsp,0x20
  42be55:	pop    rbx
  42be56:	rex.W jmp rax
  42be59:	nop    DWORD PTR [rax+0x0]
  42be60:	cmp    eax,0xc0000094
  42be65:	je     0x42bea2
  42be67:	ja     0x42bee0
  42be69:	cmp    eax,0xc0000092
  42be6e:	je     0x42be23
  42be70:	cmp    eax,0xc0000093
  42be75:	jne    0x42be42
  42be77:	xor    edx,edx
  42be79:	mov    ecx,0x8
  42be7e:	call   0x42d650
  42be83:	cmp    rax,0x1
  42be87:	jne    0x42beb4
  42be89:	mov    edx,0x1
  42be8e:	mov    ecx,0x8
  42be93:	call   0x42d650
  42be98:	call   0x42b600
  42be9d:	jmp    0x42be23
  42bea2:	xor    edx,edx
  42bea4:	mov    ecx,0x8
  42bea9:	call   0x42d650
  42beae:	cmp    rax,0x1
  42beb2:	je     0x42bf22
  42beb4:	test   rax,rax
  42beb7:	je     0x42be42
  42beb9:	mov    ecx,0x8
  42bebe:	call   rax
  42bec0:	mov    eax,0xffffffff
  42bec5:	jmp    0x42be28
  42beca:	nop    WORD PTR [rax+rax*1+0x0]
  42bed0:	test   BYTE PTR [rdx+0x4],0x1
  42bed4:	jne    0x42bdd1
  42beda:	jmp    0x42be23
  42bedf:	nop
  42bee0:	cmp    eax,0xc0000095
  42bee5:	je     0x42be23
  42beeb:	cmp    eax,0xc0000096
  42bef0:	jne    0x42be42
  42bef6:	xor    edx,edx
  42bef8:	mov    ecx,0x4
  42befd:	call   0x42d650
  42bf02:	cmp    rax,0x1
  42bf06:	je     0x42bf54
  42bf08:	test   rax,rax
  42bf0b:	je     0x42be42
  42bf11:	mov    ecx,0x4
  42bf16:	call   rax
  42bf18:	mov    eax,0xffffffff
  42bf1d:	jmp    0x42be28
  42bf22:	mov    edx,0x1
  42bf27:	mov    ecx,0x8
  42bf2c:	call   0x42d650
  42bf31:	jmp    0x42be23
  42bf36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bf40:	mov    edx,0x1
  42bf45:	mov    ecx,0xb
  42bf4a:	call   0x42d650
  42bf4f:	jmp    0x42be23
  42bf54:	mov    edx,0x1
  42bf59:	mov    ecx,0x4
  42bf5e:	call   0x42d650
  42bf63:	jmp    0x42be23
  42bf68:	nop
  42bf69:	nop
  42bf6a:	nop
  42bf6b:	nop
  42bf6c:	nop
  42bf6d:	nop
  42bf6e:	nop
  42bf6f:	nop
  42bf70:	push   rbp
  42bf71:	push   rdi
  42bf72:	push   rsi
  42bf73:	push   rbx
  42bf74:	sub    rsp,0x28
  42bf78:	lea    rcx,[rip+0x15f61]        # 0x441ee0
  42bf7f:	call   QWORD PTR [rip+0x1696f]        # 0x4428f4
  42bf85:	mov    rbx,QWORD PTR [rip+0x15f34]        # 0x441ec0
  42bf8c:	test   rbx,rbx
  42bf8f:	je     0x42bfc4
  42bf91:	mov    rbp,QWORD PTR [rip+0x16a2c]        # 0x4429c4
  42bf98:	mov    rdi,QWORD PTR [rip+0x1697d]        # 0x44291c
  42bf9f:	nop
  42bfa0:	mov    ecx,DWORD PTR [rbx]
  42bfa2:	call   rbp
  42bfa4:	mov    rsi,rax
  42bfa7:	call   rdi
  42bfa9:	test   eax,eax
  42bfab:	jne    0x42bfbb
  42bfad:	test   rsi,rsi
  42bfb0:	je     0x42bfbb
  42bfb2:	mov    rax,QWORD PTR [rbx+0x8]
  42bfb6:	mov    rcx,rsi
  42bfb9:	call   rax
  42bfbb:	mov    rbx,QWORD PTR [rbx+0x10]
  42bfbf:	test   rbx,rbx
  42bfc2:	jne    0x42bfa0
  42bfc4:	mov    rax,QWORD PTR [rip+0x16999]        # 0x442964
  42bfcb:	lea    rcx,[rip+0x15f0e]        # 0x441ee0
  42bfd2:	add    rsp,0x28
  42bfd6:	pop    rbx
  42bfd7:	pop    rsi
  42bfd8:	pop    rdi
  42bfd9:	pop    rbp
  42bfda:	rex.W jmp rax
  42bfdd:	nop    DWORD PTR [rax]
  42bfe0:	push   rdi
  42bfe1:	push   rsi
  42bfe2:	push   rbx
  42bfe3:	sub    rsp,0x20
  42bfe7:	mov    eax,DWORD PTR [rip+0x15edb]        # 0x441ec8
  42bfed:	test   eax,eax
  42bfef:	jne    0x42c000
  42bff1:	add    rsp,0x20
  42bff5:	pop    rbx
  42bff6:	pop    rsi
  42bff7:	pop    rdi
  42bff8:	ret    
  42bff9:	nop    DWORD PTR [rax+0x0]
  42c000:	mov    rsi,rdx
  42c003:	mov    edi,ecx
  42c005:	mov    edx,0x18
  42c00a:	mov    ecx,0x1
  42c00f:	call   0x42d740
  42c014:	test   rax,rax
  42c017:	mov    rbx,rax
  42c01a:	je     0x42c058
  42c01c:	mov    DWORD PTR [rax],edi
  42c01e:	mov    QWORD PTR [rax+0x8],rsi
  42c022:	lea    rcx,[rip+0x15eb7]        # 0x441ee0
  42c029:	call   QWORD PTR [rip+0x168c5]        # 0x4428f4
  42c02f:	mov    rax,QWORD PTR [rip+0x15e8a]        # 0x441ec0
  42c036:	lea    rcx,[rip+0x15ea3]        # 0x441ee0
  42c03d:	mov    QWORD PTR [rip+0x15e7c],rbx        # 0x441ec0
  42c044:	mov    QWORD PTR [rbx+0x10],rax
  42c048:	call   QWORD PTR [rip+0x16916]        # 0x442964
  42c04e:	xor    eax,eax
  42c050:	add    rsp,0x20
  42c054:	pop    rbx
  42c055:	pop    rsi
  42c056:	pop    rdi
  42c057:	ret    
  42c058:	mov    eax,0xffffffff
  42c05d:	jmp    0x42bff1
  42c05f:	nop
  42c060:	push   rbx
  42c061:	sub    rsp,0x20
  42c065:	mov    eax,DWORD PTR [rip+0x15e5d]        # 0x441ec8
  42c06b:	test   eax,eax
  42c06d:	jne    0x42c080
  42c06f:	xor    eax,eax
  42c071:	add    rsp,0x20
  42c075:	pop    rbx
  42c076:	ret    
  42c077:	nop    WORD PTR [rax+rax*1+0x0]
  42c080:	mov    ebx,ecx
  42c082:	lea    rcx,[rip+0x15e57]        # 0x441ee0
  42c089:	call   QWORD PTR [rip+0x16865]        # 0x4428f4
  42c08f:	mov    rdx,QWORD PTR [rip+0x15e2a]        # 0x441ec0
  42c096:	test   rdx,rdx
  42c099:	je     0x42c0b7
  42c09b:	mov    eax,DWORD PTR [rdx]
  42c09d:	cmp    eax,ebx
  42c09f:	jne    0x42c0ae
  42c0a1:	jmp    0x42c0ef
  42c0a3:	mov    r8d,DWORD PTR [rax]
  42c0a6:	cmp    r8d,ebx
  42c0a9:	je     0x42c0d0
  42c0ab:	mov    rdx,rax
  42c0ae:	mov    rax,QWORD PTR [rdx+0x10]
  42c0b2:	test   rax,rax
  42c0b5:	jne    0x42c0a3
  42c0b7:	lea    rcx,[rip+0x15e22]        # 0x441ee0
  42c0be:	call   QWORD PTR [rip+0x168a0]        # 0x442964
  42c0c4:	xor    eax,eax
  42c0c6:	add    rsp,0x20
  42c0ca:	pop    rbx
  42c0cb:	ret    
  42c0cc:	nop    DWORD PTR [rax+0x0]
  42c0d0:	mov    rcx,rax
  42c0d3:	mov    rax,QWORD PTR [rax+0x10]
  42c0d7:	mov    QWORD PTR [rdx+0x10],rax
  42c0db:	call   0x42d6f8
  42c0e0:	lea    rcx,[rip+0x15df9]        # 0x441ee0
  42c0e7:	call   QWORD PTR [rip+0x16877]        # 0x442964
  42c0ed:	jmp    0x42c0c4
  42c0ef:	mov    rax,QWORD PTR [rdx+0x10]
  42c0f3:	mov    rcx,rdx
  42c0f6:	mov    QWORD PTR [rip+0x15dc3],rax        # 0x441ec0
  42c0fd:	jmp    0x42c0db
  42c0ff:	nop
  42c100:	push   rbx
  42c101:	sub    rsp,0x20
  42c105:	cmp    edx,0x1
  42c108:	je     0x42c1a0
  42c10e:	jb     0x42c140
  42c110:	cmp    edx,0x2
  42c113:	je     0x42c130
  42c115:	cmp    edx,0x3
  42c118:	jne    0x42c135
  42c11a:	mov    eax,DWORD PTR [rip+0x15da8]        # 0x441ec8
  42c120:	test   eax,eax
  42c122:	je     0x42c135
  42c124:	call   0x42bf70
  42c129:	jmp    0x42c135
  42c12b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c130:	call   0x42b600
  42c135:	mov    eax,0x1
  42c13a:	add    rsp,0x20
  42c13e:	pop    rbx
  42c13f:	ret    
  42c140:	mov    eax,DWORD PTR [rip+0x15d82]        # 0x441ec8
  42c146:	test   eax,eax
  42c148:	jne    0x42c1d0
  42c14e:	mov    eax,DWORD PTR [rip+0x15d74]        # 0x441ec8
  42c154:	cmp    eax,0x1
  42c157:	jne    0x42c135
  42c159:	mov    rcx,QWORD PTR [rip+0x15d60]        # 0x441ec0
  42c160:	test   rcx,rcx
  42c163:	je     0x42c176
  42c165:	mov    rbx,QWORD PTR [rcx+0x10]
  42c169:	call   0x42d6f8
  42c16e:	test   rbx,rbx
  42c171:	mov    rcx,rbx
  42c174:	jne    0x42c165
  42c176:	lea    rcx,[rip+0x15d63]        # 0x441ee0
  42c17d:	mov    QWORD PTR [rip+0x15d38],0x0        # 0x441ec0
  42c188:	mov    DWORD PTR [rip+0x15d36],0x0        # 0x441ec8
  42c192:	call   QWORD PTR [rip+0x16754]        # 0x4428ec
  42c198:	jmp    0x42c135
  42c19a:	nop    WORD PTR [rax+rax*1+0x0]
  42c1a0:	mov    eax,DWORD PTR [rip+0x15d22]        # 0x441ec8
  42c1a6:	test   eax,eax
  42c1a8:	je     0x42c1c0
  42c1aa:	mov    eax,0x1
  42c1af:	mov    DWORD PTR [rip+0x15d0f],0x1        # 0x441ec8
  42c1b9:	add    rsp,0x20
  42c1bd:	pop    rbx
  42c1be:	ret    
  42c1bf:	nop
  42c1c0:	lea    rcx,[rip+0x15d19]        # 0x441ee0
  42c1c7:	call   QWORD PTR [rip+0x1678f]        # 0x44295c
  42c1cd:	jmp    0x42c1aa
  42c1cf:	nop
  42c1d0:	call   0x42bf70
  42c1d5:	jmp    0x42c14e
  42c1da:	nop
  42c1db:	nop
  42c1dc:	nop
  42c1dd:	nop
  42c1de:	nop
  42c1df:	nop
  42c1e0:	movsxd rax,DWORD PTR [rcx+0x3c]
  42c1e4:	add    rcx,rax
  42c1e7:	xor    eax,eax
  42c1e9:	cmp    DWORD PTR [rcx],0x4550
  42c1ef:	je     0x42c1f3
  42c1f1:	repz ret 
  42c1f3:	xor    eax,eax
  42c1f5:	cmp    WORD PTR [rcx+0x18],0x20b
  42c1fb:	sete   al
  42c1fe:	ret    
  42c1ff:	nop
  42c200:	cmp    WORD PTR [rcx],0x5a4d
  42c205:	je     0x42c210
  42c207:	xor    eax,eax
  42c209:	ret    
  42c20a:	nop    WORD PTR [rax+rax*1+0x0]
  42c210:	jmp    0x42c1e0
  42c212:	nop    DWORD PTR [rax+0x0]
  42c216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c220:	movsxd rax,DWORD PTR [rcx+0x3c]
  42c224:	add    rcx,rax
  42c227:	movzx  eax,WORD PTR [rcx+0x14]
  42c22b:	lea    rax,[rcx+rax*1+0x18]
  42c230:	movzx  ecx,WORD PTR [rcx+0x6]
  42c234:	test   ecx,ecx
  42c236:	je     0x42c261
  42c238:	sub    ecx,0x1
  42c23b:	lea    rcx,[rcx+rcx*4]
  42c23f:	lea    r9,[rax+rcx*8+0x28]
  42c244:	mov    r8d,DWORD PTR [rax+0xc]
  42c248:	cmp    r8,rdx
  42c24b:	mov    rcx,r8
  42c24e:	ja     0x42c258
  42c250:	add    ecx,DWORD PTR [rax+0x8]
  42c253:	cmp    rdx,rcx
  42c256:	jb     0x42c263
  42c258:	add    rax,0x28
  42c25c:	cmp    rax,r9
  42c25f:	jne    0x42c244
  42c261:	xor    eax,eax
  42c263:	repz ret 
  42c265:	nop
  42c266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c270:	push   rdi
  42c271:	push   rsi
  42c272:	push   rbx
  42c273:	sub    rsp,0x20
  42c277:	mov    rsi,rcx
  42c27a:	call   0x42d610
  42c27f:	cmp    rax,0x8
  42c283:	ja     0x42c2a0
  42c285:	mov    rbx,QWORD PTR [rip+0xf934]        # 0x43bbc0
  42c28c:	xor    edi,edi
  42c28e:	cmp    WORD PTR [rbx],0x5a4d
  42c293:	je     0x42c2b0
  42c295:	mov    rax,rdi
  42c298:	add    rsp,0x20
  42c29c:	pop    rbx
  42c29d:	pop    rsi
  42c29e:	pop    rdi
  42c29f:	ret    
  42c2a0:	xor    edi,edi
  42c2a2:	mov    rax,rdi
  42c2a5:	add    rsp,0x20
  42c2a9:	pop    rbx
  42c2aa:	pop    rsi
  42c2ab:	pop    rdi
  42c2ac:	ret    
  42c2ad:	nop    DWORD PTR [rax]
  42c2b0:	mov    rcx,rbx
  42c2b3:	call   0x42c1e0
  42c2b8:	test   eax,eax
  42c2ba:	je     0x42c295
  42c2bc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  42c2c0:	add    rdx,rbx
  42c2c3:	movzx  eax,WORD PTR [rdx+0x14]
  42c2c7:	lea    rbx,[rdx+rax*1+0x18]
  42c2cc:	movzx  eax,WORD PTR [rdx+0x6]
  42c2d0:	test   eax,eax
  42c2d2:	je     0x42c295
  42c2d4:	sub    eax,0x1
  42c2d7:	lea    rax,[rax+rax*4]
  42c2db:	lea    rdi,[rbx+rax*8+0x28]
  42c2e0:	jmp    0x42c2eb
  42c2e2:	add    rbx,0x28
  42c2e6:	cmp    rbx,rdi
  42c2e9:	je     0x42c2a0
  42c2eb:	mov    r8d,0x8
  42c2f1:	mov    rdx,rsi
  42c2f4:	mov    rcx,rbx
  42c2f7:	call   0x42d608
  42c2fc:	test   eax,eax
  42c2fe:	jne    0x42c2e2
  42c300:	mov    rdi,rbx
  42c303:	mov    rax,rdi
  42c306:	add    rsp,0x20
  42c30a:	pop    rbx
  42c30b:	pop    rsi
  42c30c:	pop    rdi
  42c30d:	ret    
  42c30e:	xchg   ax,ax
  42c310:	push   rsi
  42c311:	push   rbx
  42c312:	sub    rsp,0x28
  42c316:	mov    rbx,QWORD PTR [rip+0xf8a3]        # 0x43bbc0
  42c31d:	cmp    WORD PTR [rbx],0x5a4d
  42c322:	je     0x42c330
  42c324:	xor    eax,eax
  42c326:	add    rsp,0x28
  42c32a:	pop    rbx
  42c32b:	pop    rsi
  42c32c:	ret    
  42c32d:	nop    DWORD PTR [rax]
  42c330:	mov    rsi,rcx
  42c333:	mov    rcx,rbx
  42c336:	call   0x42c1e0
  42c33b:	test   eax,eax
  42c33d:	je     0x42c324
  42c33f:	sub    rsi,rbx
  42c342:	mov    rcx,rbx
  42c345:	mov    rdx,rsi
  42c348:	add    rsp,0x28
  42c34c:	pop    rbx
  42c34d:	pop    rsi
  42c34e:	jmp    0x42c220
  42c353:	nop    DWORD PTR [rax]
  42c356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c360:	push   rbx
  42c361:	sub    rsp,0x20
  42c365:	mov    rbx,QWORD PTR [rip+0xf854]        # 0x43bbc0
  42c36c:	xor    eax,eax
  42c36e:	cmp    WORD PTR [rbx],0x5a4d
  42c373:	je     0x42c380
  42c375:	add    rsp,0x20
  42c379:	pop    rbx
  42c37a:	ret    
  42c37b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c380:	mov    rcx,rbx
  42c383:	call   0x42c1e0
  42c388:	test   eax,eax
  42c38a:	je     0x42c375
  42c38c:	movsxd rax,DWORD PTR [rbx+0x3c]
  42c390:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  42c395:	add    rsp,0x20
  42c399:	pop    rbx
  42c39a:	ret    
  42c39b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c3a0:	push   rdi
  42c3a1:	push   rsi
  42c3a2:	push   rbx
  42c3a3:	sub    rsp,0x20
  42c3a7:	mov    rsi,QWORD PTR [rip+0xf812]        # 0x43bbc0
  42c3ae:	xor    edi,edi
  42c3b0:	mov    rbx,rcx
  42c3b3:	cmp    WORD PTR [rsi],0x5a4d
  42c3b8:	je     0x42c3c5
  42c3ba:	mov    rax,rdi
  42c3bd:	add    rsp,0x20
  42c3c1:	pop    rbx
  42c3c2:	pop    rsi
  42c3c3:	pop    rdi
  42c3c4:	ret    
  42c3c5:	mov    rcx,rsi
  42c3c8:	call   0x42c1e0
  42c3cd:	test   eax,eax
  42c3cf:	je     0x42c3ba
  42c3d1:	movsxd rax,DWORD PTR [rsi+0x3c]
  42c3d5:	add    rsi,rax
  42c3d8:	movzx  eax,WORD PTR [rsi+0x14]
  42c3dc:	lea    rdx,[rsi+rax*1+0x18]
  42c3e1:	movzx  eax,WORD PTR [rsi+0x6]
  42c3e5:	test   eax,eax
  42c3e7:	je     0x42c3ba
  42c3e9:	sub    eax,0x1
  42c3ec:	lea    rax,[rax+rax*4]
  42c3f0:	lea    rax,[rdx+rax*8+0x28]
  42c3f5:	test   BYTE PTR [rdx+0x27],0x20
  42c3f9:	je     0x42c404
  42c3fb:	test   rbx,rbx
  42c3fe:	je     0x42c420
  42c400:	sub    rbx,0x1
  42c404:	add    rdx,0x28
  42c408:	cmp    rdx,rax
  42c40b:	jne    0x42c3f5
  42c40d:	xor    edi,edi
  42c40f:	mov    rax,rdi
  42c412:	add    rsp,0x20
  42c416:	pop    rbx
  42c417:	pop    rsi
  42c418:	pop    rdi
  42c419:	ret    
  42c41a:	nop    WORD PTR [rax+rax*1+0x0]
  42c420:	mov    rdi,rdx
  42c423:	mov    rax,rdi
  42c426:	add    rsp,0x20
  42c42a:	pop    rbx
  42c42b:	pop    rsi
  42c42c:	pop    rdi
  42c42d:	ret    
  42c42e:	xchg   ax,ax
  42c430:	push   rsi
  42c431:	push   rbx
  42c432:	sub    rsp,0x28
  42c436:	mov    rsi,QWORD PTR [rip+0xf783]        # 0x43bbc0
  42c43d:	xor    ebx,ebx
  42c43f:	cmp    WORD PTR [rsi],0x5a4d
  42c444:	je     0x42c450
  42c446:	mov    rax,rbx
  42c449:	add    rsp,0x28
  42c44d:	pop    rbx
  42c44e:	pop    rsi
  42c44f:	ret    
  42c450:	mov    rcx,rsi
  42c453:	call   0x42c1e0
  42c458:	test   eax,eax
  42c45a:	cmovne rbx,rsi
  42c45e:	mov    rax,rbx
  42c461:	add    rsp,0x28
  42c465:	pop    rbx
  42c466:	pop    rsi
  42c467:	ret    
  42c468:	nop    DWORD PTR [rax+rax*1+0x0]
  42c470:	push   rsi
  42c471:	push   rbx
  42c472:	sub    rsp,0x28
  42c476:	mov    rbx,QWORD PTR [rip+0xf743]        # 0x43bbc0
  42c47d:	xor    eax,eax
  42c47f:	cmp    WORD PTR [rbx],0x5a4d
  42c484:	je     0x42c490
  42c486:	add    rsp,0x28
  42c48a:	pop    rbx
  42c48b:	pop    rsi
  42c48c:	ret    
  42c48d:	nop    DWORD PTR [rax]
  42c490:	mov    rsi,rcx
  42c493:	mov    rcx,rbx
  42c496:	call   0x42c1e0
  42c49b:	test   eax,eax
  42c49d:	je     0x42c486
  42c49f:	sub    rsi,rbx
  42c4a2:	mov    rcx,rbx
  42c4a5:	mov    rdx,rsi
  42c4a8:	call   0x42c220
  42c4ad:	test   rax,rax
  42c4b0:	je     0x42c4c1
  42c4b2:	mov    eax,DWORD PTR [rax+0x24]
  42c4b5:	not    eax
  42c4b7:	shr    eax,0x1f
  42c4ba:	add    rsp,0x28
  42c4be:	pop    rbx
  42c4bf:	pop    rsi
  42c4c0:	ret    
  42c4c1:	xor    eax,eax
  42c4c3:	jmp    0x42c486
  42c4c5:	nop
  42c4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c4d0:	push   rbp
  42c4d1:	push   rdi
  42c4d2:	push   rsi
  42c4d3:	push   rbx
  42c4d4:	sub    rsp,0x28
  42c4d8:	mov    rdi,QWORD PTR [rip+0xf6e1]        # 0x43bbc0
  42c4df:	xor    ebp,ebp
  42c4e1:	mov    esi,ecx
  42c4e3:	cmp    WORD PTR [rdi],0x5a4d
  42c4e8:	je     0x42c500
  42c4ea:	mov    rax,rbp
  42c4ed:	add    rsp,0x28
  42c4f1:	pop    rbx
  42c4f2:	pop    rsi
  42c4f3:	pop    rdi
  42c4f4:	pop    rbp
  42c4f5:	ret    
  42c4f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c500:	mov    rcx,rdi
  42c503:	call   0x42c1e0
  42c508:	test   eax,eax
  42c50a:	je     0x42c4ea
  42c50c:	movsxd rax,DWORD PTR [rdi+0x3c]
  42c510:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  42c517:	test   edx,edx
  42c519:	je     0x42c4ea
  42c51b:	mov    ebx,edx
  42c51d:	mov    rcx,rdi
  42c520:	mov    rdx,rbx
  42c523:	call   0x42c220
  42c528:	test   rax,rax
  42c52b:	je     0x42c4ea
  42c52d:	add    rbx,rdi
  42c530:	mov    rdx,rbx
  42c533:	jne    0x42c547
  42c535:	jmp    0x42c4ea
  42c537:	nop    WORD PTR [rax+rax*1+0x0]
  42c540:	sub    esi,0x1
  42c543:	add    rdx,0x14
  42c547:	mov    ecx,DWORD PTR [rdx+0x4]
  42c54a:	test   ecx,ecx
  42c54c:	jne    0x42c555
  42c54e:	mov    eax,DWORD PTR [rdx+0xc]
  42c551:	test   eax,eax
  42c553:	je     0x42c570
  42c555:	test   esi,esi
  42c557:	jg     0x42c540
  42c559:	mov    ebp,DWORD PTR [rdx+0xc]
  42c55c:	add    rbp,rdi
  42c55f:	mov    rax,rbp
  42c562:	add    rsp,0x28
  42c566:	pop    rbx
  42c567:	pop    rsi
  42c568:	pop    rdi
  42c569:	pop    rbp
  42c56a:	ret    
  42c56b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c570:	xor    ebp,ebp
  42c572:	mov    rax,rbp
  42c575:	add    rsp,0x28
  42c579:	pop    rbx
  42c57a:	pop    rsi
  42c57b:	pop    rdi
  42c57c:	pop    rbp
  42c57d:	ret    
  42c57e:	nop
  42c57f:	nop
  42c580:	push   rcx
  42c581:	push   rax
  42c582:	cmp    rax,0x1000
  42c588:	lea    rcx,[rsp+0x18]
  42c58d:	jb     0x42c5a8
  42c58f:	sub    rcx,0x1000
  42c596:	or     QWORD PTR [rcx],0x0
  42c59a:	sub    rax,0x1000
  42c5a0:	cmp    rax,0x1000
  42c5a6:	ja     0x42c58f
  42c5a8:	sub    rcx,rax
  42c5ab:	or     QWORD PTR [rcx],0x0
  42c5af:	pop    rax
  42c5b0:	pop    rcx
  42c5b1:	ret    
  42c5b2:	nop
  42c5b3:	nop
  42c5b4:	nop
  42c5b5:	nop
  42c5b6:	nop
  42c5b7:	nop
  42c5b8:	nop
  42c5b9:	nop
  42c5ba:	nop
  42c5bb:	nop
  42c5bc:	nop
  42c5bd:	nop
  42c5be:	nop
  42c5bf:	nop
  42c5c0:	push   r13
  42c5c2:	push   r12
  42c5c4:	push   rbp
  42c5c5:	push   rdi
  42c5c6:	push   rsi
  42c5c7:	push   rbx
  42c5c8:	mov    r12d,edx
  42c5cb:	mov    ebp,r8d
  42c5ce:	mov    edi,edx
  42c5d0:	sub    r12d,ecx
  42c5d3:	sub    ebp,edx
  42c5d5:	mov    eax,r12d
  42c5d8:	cdq    
  42c5d9:	idiv   ebp
  42c5db:	test   edx,edx
  42c5dd:	mov    r13d,edx
  42c5e0:	je     0x42c665
  42c5e6:	mov    eax,ebp
  42c5e8:	jmp    0x42c5f3
  42c5ea:	nop    WORD PTR [rax+rax*1+0x0]
  42c5f0:	mov    r13d,edx
  42c5f3:	cdq    
  42c5f4:	idiv   r13d
  42c5f7:	mov    eax,r13d
  42c5fa:	test   edx,edx
  42c5fc:	jne    0x42c5f0
  42c5fe:	mov    eax,r8d
  42c601:	sub    eax,ecx
  42c603:	cdq    
  42c604:	idiv   r13d
  42c607:	test   r13d,r13d
  42c60a:	jle    0x42c65c
  42c60c:	movsxd rdx,edi
  42c60f:	xor    esi,esi
  42c611:	lea    rdx,[r9+rdx*8]
  42c615:	test   eax,eax
  42c617:	lea    ecx,[rdi+rsi*1]
  42c61a:	jle    0x42c653
  42c61c:	mov    rbx,QWORD PTR [rdx+rsi*8]
  42c620:	xor    r10d,r10d
  42c623:	mov    r11d,ecx
  42c626:	lea    r8d,[rcx+rbp*1]
  42c62a:	sub    r11d,r12d
  42c62d:	cmp    edi,ecx
  42c62f:	mov    ecx,r11d
  42c632:	cmovg  ecx,r8d
  42c636:	add    r10d,0x1
  42c63a:	movsxd r11,ecx
  42c63d:	cmp    r10d,eax
  42c640:	lea    r8,[r9+r11*8]
  42c644:	mov    r11,QWORD PTR [r8]
  42c647:	mov    QWORD PTR [r8],rbx
  42c64a:	mov    QWORD PTR [rdx+rsi*8],r11
  42c64e:	mov    rbx,r11
  42c651:	jne    0x42c623
  42c653:	add    rsi,0x1
  42c657:	cmp    r13d,esi
  42c65a:	jg     0x42c615
  42c65c:	pop    rbx
  42c65d:	pop    rsi
  42c65e:	pop    rdi
  42c65f:	pop    rbp
  42c660:	pop    r12
  42c662:	pop    r13
  42c664:	ret    
  42c665:	mov    r13d,ebp
  42c668:	jmp    0x42c5fe
  42c66a:	nop    WORD PTR [rax+rax*1+0x0]
  42c670:	push   rdi
  42c671:	push   rsi
  42c672:	push   rbx
  42c673:	sub    rsp,0x30
  42c677:	mov    rax,QWORD PTR [rip+0xf552]        # 0x43bbd0
  42c67e:	mov    QWORD PTR [rsp+0x58],rdx
  42c683:	mov    QWORD PTR [rsp+0x60],r8
  42c688:	lea    rsi,[rsp+0x58]
  42c68d:	mov    QWORD PTR [rsp+0x68],r9
  42c692:	mov    rbx,rcx
  42c695:	mov    rax,QWORD PTR [rax]
  42c698:	mov    QWORD PTR [rsp+0x28],rsi
  42c69d:	mov    rax,QWORD PTR [rax]
  42c6a0:	mov    rdi,QWORD PTR [rax]
  42c6a3:	call   0x42d7f8
  42c6a8:	lea    rdx,[rip+0xf291]        # 0x43b940
  42c6af:	lea    rcx,[rax+0x60]
  42c6b3:	mov    r8,rdi
  42c6b6:	call   0x42d710
  42c6bb:	test   rbx,rbx
  42c6be:	je     0x42c6d4
  42c6c0:	call   0x42d7f8
  42c6c5:	lea    rcx,[rax+0x60]
  42c6c9:	mov    r8,rsi
  42c6cc:	mov    rdx,rbx
  42c6cf:	call   0x42d5d8
  42c6d4:	call   0x42d7f8
  42c6d9:	lea    rdx,[rax+0x60]
  42c6dd:	mov    ecx,0xa
  42c6e2:	call   0x42d708
  42c6e7:	nop
  42c6e8:	add    rsp,0x30
  42c6ec:	pop    rbx
  42c6ed:	pop    rsi
  42c6ee:	pop    rdi
  42c6ef:	ret    
  42c6f0:	push   r15
  42c6f2:	push   r14
  42c6f4:	push   r13
  42c6f6:	push   r12
  42c6f8:	push   rbp
  42c6f9:	push   rdi
  42c6fa:	push   rsi
  42c6fb:	push   rbx
  42c6fc:	sub    rsp,0x48
  42c700:	mov    eax,DWORD PTR [rip+0x1996]        # 0x42e09c
  42c706:	mov    rbp,QWORD PTR [rip+0x1983]        # 0x42e090
  42c70d:	mov    QWORD PTR [rsp+0x90],rcx
  42c715:	mov    QWORD PTR [rsp+0x98],rdx
  42c71d:	mov    edx,0x3d
  42c722:	mov    r14,r8
  42c725:	mov    QWORD PTR [rsp+0xa8],r9
  42c72d:	mov    r13d,DWORD PTR [rsp+0xb0]
  42c735:	mov    DWORD PTR [rsp+0x38],eax
  42c739:	mov    rcx,rbp
  42c73c:	add    eax,0x1
  42c73f:	mov    DWORD PTR [rsp+0x3c],eax
  42c743:	mov    DWORD PTR [rip+0x1953],eax        # 0x42e09c
  42c749:	call   0x42d638
  42c74e:	test   rax,rax
  42c751:	mov    QWORD PTR [rsp+0x30],rax
  42c756:	je     0x42c934
  42c75c:	mov    rdi,rax
  42c75f:	add    rax,0x1
  42c763:	sub    rdi,rbp
  42c766:	mov    QWORD PTR [rsp+0x30],rax
  42c76b:	mov    r15,QWORD PTR [r14]
  42c76e:	test   r15,r15
  42c771:	je     0x42c97b
  42c777:	lea    rbx,[r14+0x20]
  42c77b:	mov    r12d,0xffffffff
  42c781:	mov    DWORD PTR [rsp+0x2c],0x0
  42c789:	xor    esi,esi
  42c78b:	jmp    0x42c7a5
  42c78d:	nop    DWORD PTR [rax]
  42c790:	test   r13d,r13d
  42c793:	je     0x42c7ce
  42c795:	add    rbx,0x20
  42c799:	mov    r15,QWORD PTR [rbx-0x20]
  42c79d:	add    esi,0x1
  42c7a0:	test   r15,r15
  42c7a3:	je     0x42c810
  42c7a5:	mov    r8,rdi
  42c7a8:	mov    rdx,r15
  42c7ab:	mov    rcx,rbp
  42c7ae:	call   0x42d608
  42c7b3:	test   eax,eax
  42c7b5:	jne    0x42c795
  42c7b7:	mov    rcx,r15
  42c7ba:	call   0x42d610
  42c7bf:	cmp    rax,rdi
  42c7c2:	je     0x42c8bd
  42c7c8:	cmp    rdi,0x1
  42c7cc:	je     0x42c790
  42c7ce:	cmp    r12d,0xffffffff
  42c7d2:	je     0x42c870
  42c7d8:	movsxd rax,r12d
  42c7db:	shl    rax,0x5
  42c7df:	add    rax,r14
  42c7e2:	mov    edx,DWORD PTR [rax+0x8]
  42c7e5:	cmp    DWORD PTR [rbx-0x18],edx
  42c7e8:	je     0x42c880
  42c7ee:	add    rbx,0x20
  42c7f2:	mov    r15,QWORD PTR [rbx-0x20]
  42c7f6:	add    esi,0x1
  42c7f9:	mov    DWORD PTR [rsp+0x2c],0x1
  42c801:	test   r15,r15
  42c804:	jne    0x42c7a5
  42c806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c810:	mov    r9d,DWORD PTR [rsp+0x2c]
  42c815:	test   r9d,r9d
  42c818:	je     0x42c8b0
  42c81e:	mov    r8d,DWORD PTR [rip+0x187b]        # 0x42e0a0
  42c825:	test   r8d,r8d
  42c828:	je     0x42c848
  42c82a:	mov    rax,QWORD PTR [rsp+0x98]
  42c832:	cmp    BYTE PTR [rax],0x3a
  42c835:	je     0x42c848
  42c837:	lea    rcx,[rip+0xf192]        # 0x43b9d0
  42c83e:	mov    r8,rbp
  42c841:	mov    edx,edi
  42c843:	call   0x42c670
  42c848:	mov    DWORD PTR [rip+0x1846],0x0        # 0x42e098
  42c852:	mov    eax,0x3f
  42c857:	add    rsp,0x48
  42c85b:	pop    rbx
  42c85c:	pop    rsi
  42c85d:	pop    rdi
  42c85e:	pop    rbp
  42c85f:	pop    r12
  42c861:	pop    r13
  42c863:	pop    r14
  42c865:	pop    r15
  42c867:	ret    
  42c868:	nop    DWORD PTR [rax+rax*1+0x0]
  42c870:	mov    r12d,esi
  42c873:	jmp    0x42c795
  42c878:	nop    DWORD PTR [rax+rax*1+0x0]
  42c880:	mov    rdx,QWORD PTR [rax+0x10]
  42c884:	cmp    QWORD PTR [rbx-0x10],rdx
  42c888:	jne    0x42c7ee
  42c88e:	mov    eax,DWORD PTR [rax+0x18]
  42c891:	cmp    DWORD PTR [rbx-0x8],eax
  42c894:	mov    eax,0x1
  42c899:	cmove  eax,DWORD PTR [rsp+0x2c]
  42c89e:	mov    DWORD PTR [rsp+0x2c],eax
  42c8a2:	jmp    0x42c795
  42c8a7:	nop    WORD PTR [rax+rax*1+0x0]
  42c8b0:	cmp    r12d,0xffffffff
  42c8b4:	je     0x42c97b
  42c8ba:	mov    esi,r12d
  42c8bd:	movsxd rax,esi
  42c8c0:	shl    rax,0x5
  42c8c4:	add    r14,rax
  42c8c7:	cmp    QWORD PTR [rsp+0x30],0x0
  42c8cd:	mov    eax,DWORD PTR [r14+0x8]
  42c8d1:	setne  cl
  42c8d4:	je     0x42c944
  42c8d6:	test   eax,eax
  42c8d8:	jne    0x42c944
  42c8da:	mov    ecx,DWORD PTR [rip+0x17c0]        # 0x42e0a0
  42c8e0:	test   ecx,ecx
  42c8e2:	jne    0x42c914
  42c8e4:	cmp    QWORD PTR [r14+0x10],0x0
  42c8e9:	je     0x42ca44
  42c8ef:	mov    DWORD PTR [rip+0x179f],0x0        # 0x42e098
  42c8f9:	mov    rax,QWORD PTR [rsp+0x98]
  42c901:	cmp    BYTE PTR [rax],0x3a
  42c904:	je     0x42ca31
  42c90a:	mov    eax,0x3f
  42c90f:	jmp    0x42c857
  42c914:	mov    rax,QWORD PTR [rsp+0x98]
  42c91c:	cmp    BYTE PTR [rax],0x3a
  42c91f:	je     0x42c8e4
  42c921:	lea    rcx,[rip+0xf078]        # 0x43b9a0
  42c928:	mov    r8,rbp
  42c92b:	mov    edx,edi
  42c92d:	call   0x42c670
  42c932:	jmp    0x42c8e4
  42c934:	mov    rcx,rbp
  42c937:	call   0x42d610
  42c93c:	mov    rdi,rax
  42c93f:	jmp    0x42c76b
  42c944:	lea    edx,[rax-0x1]
  42c947:	cmp    edx,0x1
  42c94a:	jbe    0x42c9b7
  42c94c:	cmp    QWORD PTR [rsp+0xa8],0x0
  42c955:	je     0x42c961
  42c957:	mov    rax,QWORD PTR [rsp+0xa8]
  42c95f:	mov    DWORD PTR [rax],esi
  42c961:	mov    rax,QWORD PTR [r14+0x10]
  42c965:	test   rax,rax
  42c968:	je     0x42ca3b
  42c96e:	mov    edx,DWORD PTR [r14+0x18]
  42c972:	mov    DWORD PTR [rax],edx
  42c974:	xor    eax,eax
  42c976:	jmp    0x42c857
  42c97b:	test   r13d,r13d
  42c97e:	jne    0x42ca92
  42c984:	mov    eax,DWORD PTR [rip+0x1716]        # 0x42e0a0
  42c98a:	test   eax,eax
  42c98c:	je     0x42c848
  42c992:	mov    rax,QWORD PTR [rsp+0x98]
  42c99a:	cmp    BYTE PTR [rax],0x3a
  42c99d:	je     0x42c848
  42c9a3:	lea    rcx,[rip+0xefb6]        # 0x43b960
  42c9aa:	mov    rdx,rbp
  42c9ad:	call   0x42c670
  42c9b2:	jmp    0x42c848
  42c9b7:	test   cl,cl
  42c9b9:	je     0x42ca53
  42c9bf:	mov    rdx,QWORD PTR [rsp+0x30]
  42c9c4:	cmp    eax,0x1
  42c9c7:	mov    QWORD PTR [rip+0x155c2],rdx        # 0x441f90
  42c9ce:	jne    0x42c94c
  42c9d4:	mov    r15,QWORD PTR [rsp+0x30]
  42c9d9:	test   r15,r15
  42c9dc:	jne    0x42c94c
  42c9e2:	mov    edx,DWORD PTR [rip+0x16b8]        # 0x42e0a0
  42c9e8:	test   edx,edx
  42c9ea:	je     0x42ca08
  42c9ec:	mov    rax,QWORD PTR [rsp+0x98]
  42c9f4:	cmp    BYTE PTR [rax],0x3a
  42c9f7:	je     0x42ca08
  42c9f9:	lea    rcx,[rip+0xf000]        # 0x43ba00
  42ca00:	mov    rdx,rbp
  42ca03:	call   0x42c670
  42ca08:	cmp    QWORD PTR [r14+0x10],0x0
  42ca0d:	je     0x42ca86
  42ca0f:	mov    DWORD PTR [rip+0x167f],0x0        # 0x42e098
  42ca19:	mov    rax,QWORD PTR [rsp+0x98]
  42ca21:	sub    DWORD PTR [rip+0x1674],0x1        # 0x42e09c
  42ca28:	cmp    BYTE PTR [rax],0x3a
  42ca2b:	jne    0x42c90a
  42ca31:	mov    eax,0x3a
  42ca36:	jmp    0x42c857
  42ca3b:	mov    eax,DWORD PTR [r14+0x18]
  42ca3f:	jmp    0x42c857
  42ca44:	mov    eax,DWORD PTR [r14+0x18]
  42ca48:	mov    DWORD PTR [rip+0x164a],eax        # 0x42e098
  42ca4e:	jmp    0x42c8f9
  42ca53:	cmp    eax,0x1
  42ca56:	jne    0x42c94c
  42ca5c:	mov    eax,DWORD PTR [rsp+0x38]
  42ca60:	mov    rdx,QWORD PTR [rsp+0x90]
  42ca68:	add    eax,0x2
  42ca6b:	mov    DWORD PTR [rip+0x162b],eax        # 0x42e09c
  42ca71:	movsxd rax,DWORD PTR [rsp+0x3c]
  42ca76:	mov    r15,QWORD PTR [rdx+rax*8]
  42ca7a:	mov    QWORD PTR [rip+0x1550f],r15        # 0x441f90
  42ca81:	jmp    0x42c9d9
  42ca86:	mov    eax,DWORD PTR [r14+0x18]
  42ca8a:	mov    DWORD PTR [rip+0x1608],eax        # 0x42e098
  42ca90:	jmp    0x42ca19
  42ca92:	mov    eax,DWORD PTR [rsp+0x38]
  42ca96:	mov    DWORD PTR [rip+0x1600],eax        # 0x42e09c
  42ca9c:	mov    eax,0xffffffff
  42caa1:	jmp    0x42c857
  42caa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cab0:	push   r15
  42cab2:	push   r14
  42cab4:	push   r13
  42cab6:	push   r12
  42cab8:	push   rbp
  42cab9:	push   rdi
  42caba:	push   rsi
  42cabb:	push   rbx
  42cabc:	sub    rsp,0x38
  42cac0:	test   r8,r8
  42cac3:	mov    edi,ecx
  42cac5:	mov    r15,rdx
  42cac8:	mov    QWORD PTR [rsp+0x90],r8
  42cad0:	mov    QWORD PTR [rsp+0x98],r9
  42cad8:	je     0x42cdae
  42cade:	mov    r9d,DWORD PTR [rip+0x15b7]        # 0x42e09c
  42cae5:	test   r9d,r9d
  42cae8:	je     0x42cd40
  42caee:	cmp    DWORD PTR [rip+0x158b],0xffffffff        # 0x42e080
  42caf5:	je     0x42ccb4
  42cafb:	mov    edx,DWORD PTR [rip+0x15497]        # 0x441f98
  42cb01:	test   edx,edx
  42cb03:	jne    0x42ccb4
  42cb09:	mov    rax,QWORD PTR [rsp+0x90]
  42cb11:	movzx  eax,BYTE PTR [rax]
  42cb14:	cmp    al,0x2d
  42cb16:	je     0x42cce8
  42cb1c:	cmp    al,0x2b
  42cb1e:	je     0x42cdc4
  42cb24:	mov    r8d,DWORD PTR [rip+0x1555]        # 0x42e080
  42cb2b:	test   r8d,r8d
  42cb2e:	jne    0x42cdc4
  42cb34:	sub    eax,0x2b
  42cb37:	test   al,0xfd
  42cb39:	je     0x42ccf0
  42cb3f:	test   edx,edx
  42cb41:	mov    QWORD PTR [rip+0x15444],0x0        # 0x441f90
  42cb4c:	jne    0x42cd20
  42cb52:	mov    r14d,DWORD PTR [rsp+0xa8]
  42cb5a:	mov    ebp,DWORD PTR [rsp+0xa8]
  42cb61:	and    r14d,0x2
  42cb65:	and    ebp,0x1
  42cb68:	jmp    0x42cbee
  42cb6d:	nop    DWORD PTR [rax]
  42cb70:	lea    rax,[rip+0xedde]        # 0x43b955
  42cb77:	test   r14d,r14d
  42cb7a:	mov    edx,r14d
  42cb7d:	mov    QWORD PTR [rip+0x150c],rax        # 0x42e090
  42cb84:	jne    0x42ce90
  42cb8a:	test   ebp,ebp
  42cb8c:	je     0x42cdae
  42cb92:	mov    r12d,DWORD PTR [rip+0x14ef]        # 0x42e088
  42cb99:	cmp    r12d,0xffffffff
  42cb9d:	je     0x42cd10
  42cba3:	mov    r13d,DWORD PTR [rip+0x14da]        # 0x42e084
  42cbaa:	cmp    r13d,0xffffffff
  42cbae:	je     0x42cbe5
  42cbb0:	mov    edx,r13d
  42cbb3:	mov    r9,r15
  42cbb6:	mov    r8d,ebx
  42cbb9:	mov    ecx,r12d
  42cbbc:	call   0x42c5c0
  42cbc1:	mov    esi,DWORD PTR [rip+0x14d5]        # 0x42e09c
  42cbc7:	mov    eax,r12d
  42cbca:	mov    edx,DWORD PTR [rip+0x153c8]        # 0x441f98
  42cbd0:	sub    eax,r13d
  42cbd3:	mov    DWORD PTR [rip+0x14a7],0xffffffff        # 0x42e084
  42cbdd:	add    eax,esi
  42cbdf:	mov    DWORD PTR [rip+0x14a3],eax        # 0x42e088
  42cbe5:	add    esi,0x1
  42cbe8:	mov    DWORD PTR [rip+0x14ae],esi        # 0x42e09c
  42cbee:	test   edx,edx
  42cbf0:	jne    0x42cc04
  42cbf2:	mov    rsi,QWORD PTR [rip+0x1497]        # 0x42e090
  42cbf9:	movzx  eax,BYTE PTR [rsi]
  42cbfc:	test   al,al
  42cbfe:	jne    0x42cdfe
  42cc04:	movsxd rbx,DWORD PTR [rip+0x1491]        # 0x42e09c
  42cc0b:	mov    DWORD PTR [rip+0x15383],0x0        # 0x441f98
  42cc15:	cmp    ebx,edi
  42cc17:	mov    esi,ebx
  42cc19:	jge    0x42cd60
  42cc1f:	movsxd rax,ebx
  42cc22:	mov    r13,QWORD PTR [r15+rax*8]
  42cc26:	cmp    BYTE PTR [r13+0x0],0x2d
  42cc2b:	mov    QWORD PTR [rip+0x145e],r13        # 0x42e090
  42cc32:	jne    0x42cb70
  42cc38:	movzx  eax,BYTE PTR [r13+0x1]
  42cc3d:	test   al,al
  42cc3f:	jne    0x42cdd1
  42cc45:	mov    rcx,QWORD PTR [rsp+0x90]
  42cc4d:	mov    edx,0x2d
  42cc52:	call   0x42d638
  42cc57:	test   rax,rax
  42cc5a:	je     0x42cb70
  42cc60:	cmp    DWORD PTR [rip+0x1421],0xffffffff        # 0x42e088
  42cc67:	mov    rsi,r13
  42cc6a:	je     0x42cc84
  42cc6c:	cmp    DWORD PTR [rip+0x1411],0xffffffff        # 0x42e084
  42cc73:	mov    eax,0x2d
  42cc78:	jne    0x42cdfe
  42cc7e:	mov    DWORD PTR [rip+0x1400],ebx        # 0x42e084
  42cc84:	cmp    QWORD PTR [rsp+0x98],0x0
  42cc8d:	je     0x42d07c
  42cc93:	cmp    rsi,QWORD PTR [r15+rbx*8]
  42cc97:	mov    eax,0x2d
  42cc9c:	je     0x42cece
  42cca2:	add    rsi,0x1
  42cca6:	xor    edx,edx
  42cca8:	mov    QWORD PTR [rip+0x13e1],rsi        # 0x42e090
  42ccaf:	jmp    0x42ce52
  42ccb4:	lea    rcx,[rip+0xec8a]        # 0x43b945
  42ccbb:	call   0x42d6e0
  42ccc0:	test   rax,rax
  42ccc3:	mov    edx,DWORD PTR [rip+0x152cf]        # 0x441f98
  42ccc9:	setne  al
  42cccc:	movzx  eax,al
  42cccf:	mov    DWORD PTR [rip+0x13ab],eax        # 0x42e080
  42ccd5:	mov    rax,QWORD PTR [rsp+0x90]
  42ccdd:	movzx  eax,BYTE PTR [rax]
  42cce0:	cmp    al,0x2d
  42cce2:	jne    0x42cb1c
  42cce8:	or     DWORD PTR [rsp+0xa8],0x2
  42ccf0:	add    QWORD PTR [rsp+0x90],0x1
  42ccf9:	test   edx,edx
  42ccfb:	mov    QWORD PTR [rip+0x1528a],0x0        # 0x441f90
  42cd06:	je     0x42cb52
  42cd0c:	jmp    0x42cd20
  42cd0e:	xchg   ax,ax
  42cd10:	mov    DWORD PTR [rip+0x1372],ebx        # 0x42e088
  42cd16:	jmp    0x42cbe5
  42cd1b:	nop    DWORD PTR [rax+rax*1+0x0]
  42cd20:	mov    DWORD PTR [rip+0x135a],0xffffffff        # 0x42e084
  42cd2a:	mov    DWORD PTR [rip+0x1354],0xffffffff        # 0x42e088
  42cd34:	jmp    0x42cb52
  42cd39:	nop    DWORD PTR [rax+0x0]
  42cd40:	mov    DWORD PTR [rip+0x1524e],0x1        # 0x441f98
  42cd4a:	mov    DWORD PTR [rip+0x1348],0x1        # 0x42e09c
  42cd54:	jmp    0x42caee
  42cd59:	nop    DWORD PTR [rax+0x0]
  42cd60:	mov    esi,DWORD PTR [rip+0x131e]        # 0x42e084
  42cd66:	lea    rax,[rip+0xebe8]        # 0x43b955
  42cd6d:	mov    QWORD PTR [rip+0x131c],rax        # 0x42e090
  42cd74:	cmp    esi,0xffffffff
  42cd77:	je     0x42ceaa
  42cd7d:	mov    edi,DWORD PTR [rip+0x1305]        # 0x42e088
  42cd83:	mov    r9,r15
  42cd86:	mov    r8d,ebx
  42cd89:	mov    edx,esi
  42cd8b:	mov    ecx,edi
  42cd8d:	sub    edi,esi
  42cd8f:	call   0x42c5c0
  42cd94:	add    DWORD PTR [rip+0x1302],edi        # 0x42e09c
  42cd9a:	mov    DWORD PTR [rip+0x12e0],0xffffffff        # 0x42e084
  42cda4:	mov    DWORD PTR [rip+0x12da],0xffffffff        # 0x42e088
  42cdae:	mov    eax,0xffffffff
  42cdb3:	add    rsp,0x38
  42cdb7:	pop    rbx
  42cdb8:	pop    rsi
  42cdb9:	pop    rdi
  42cdba:	pop    rbp
  42cdbb:	pop    r12
  42cdbd:	pop    r13
  42cdbf:	pop    r14
  42cdc1:	pop    r15
  42cdc3:	ret    
  42cdc4:	and    DWORD PTR [rsp+0xa8],0xfffffffe
  42cdcc:	jmp    0x42cb34
  42cdd1:	mov    ebp,DWORD PTR [rip+0x12b1]        # 0x42e088
  42cdd7:	cmp    ebp,0xffffffff
  42cdda:	je     0x42cdeb
  42cddc:	cmp    DWORD PTR [rip+0x12a1],0xffffffff        # 0x42e084
  42cde3:	jne    0x42cdeb
  42cde5:	mov    DWORD PTR [rip+0x1299],ebx        # 0x42e084
  42cdeb:	lea    rsi,[r13+0x1]
  42cdef:	cmp    al,0x2d
  42cdf1:	mov    QWORD PTR [rip+0x1298],rsi        # 0x42e090
  42cdf8:	je     0x42cfaf
  42cdfe:	cmp    QWORD PTR [rsp+0x98],0x0
  42ce07:	je     0x42cece
  42ce0d:	movsxd rdx,DWORD PTR [rip+0x1288]        # 0x42e09c
  42ce14:	cmp    rsi,QWORD PTR [r15+rdx*8]
  42ce18:	je     0x42cece
  42ce1e:	cmp    al,0x2d
  42ce20:	je     0x42cca2
  42ce26:	test   BYTE PTR [rsp+0xa8],0x4
  42ce2e:	je     0x42cece
  42ce34:	xor    edx,edx
  42ce36:	cmp    al,0x3a
  42ce38:	je     0x42ce52
  42ce3a:	mov    rcx,QWORD PTR [rsp+0x90]
  42ce42:	movsx  edx,al
  42ce45:	call   0x42d638
  42ce4a:	xor    edx,edx
  42ce4c:	test   rax,rax
  42ce4f:	setne  dl
  42ce52:	mov    DWORD PTR [rsp+0x20],edx
  42ce56:	mov    r9,QWORD PTR [rsp+0xa0]
  42ce5e:	mov    rcx,r15
  42ce61:	mov    r8,QWORD PTR [rsp+0x98]
  42ce69:	mov    rdx,QWORD PTR [rsp+0x90]
  42ce71:	call   0x42c6f0
  42ce76:	cmp    eax,0xffffffff
  42ce79:	je     0x42cec4
  42ce7b:	lea    rcx,[rip+0xead3]        # 0x43b955
  42ce82:	mov    QWORD PTR [rip+0x1207],rcx        # 0x42e090
  42ce89:	jmp    0x42cdb3
  42ce8e:	xchg   ax,ax
  42ce90:	add    ebx,0x1
  42ce93:	mov    QWORD PTR [rip+0x150f6],r13        # 0x441f90
  42ce9a:	mov    eax,0x1
  42ce9f:	mov    DWORD PTR [rip+0x11f7],ebx        # 0x42e09c
  42cea5:	jmp    0x42cdb3
  42ceaa:	mov    eax,DWORD PTR [rip+0x11d8]        # 0x42e088
  42ceb0:	cmp    eax,0xffffffff
  42ceb3:	je     0x42cd9a
  42ceb9:	mov    DWORD PTR [rip+0x11dd],eax        # 0x42e09c
  42cebf:	jmp    0x42cd9a
  42cec4:	mov    rsi,QWORD PTR [rip+0x11c5]        # 0x42e090
  42cecb:	movzx  eax,BYTE PTR [rsi]
  42cece:	lea    rbp,[rsi+0x1]
  42ced2:	movsx  ebx,al
  42ced5:	cmp    ebx,0x3a
  42ced8:	mov    QWORD PTR [rip+0x11b1],rbp        # 0x42e090
  42cedf:	je     0x42cf44
  42cee1:	cmp    ebx,0x2d
  42cee4:	je     0x42d087
  42ceea:	mov    rcx,QWORD PTR [rsp+0x90]
  42cef2:	mov    edx,ebx
  42cef4:	call   0x42d638
  42cef9:	test   rax,rax
  42cefc:	je     0x42cf44
  42cefe:	cmp    ebx,0x57
  42cf01:	jne    0x42cfa6
  42cf07:	cmp    QWORD PTR [rsp+0x98],0x0
  42cf10:	je     0x42cfa6
  42cf16:	movzx  edx,BYTE PTR [rax+0x1]
  42cf1a:	cmp    dl,0x3b
  42cf1d:	je     0x42d000
  42cf23:	cmp    dl,0x3a
  42cf26:	je     0x42d09b
  42cf2c:	cmp    BYTE PTR [rsi+0x1],0x0
  42cf30:	mov    eax,ebx
  42cf32:	jne    0x42cdb3
  42cf38:	add    DWORD PTR [rip+0x115d],0x1        # 0x42e09c
  42cf3f:	jmp    0x42cdb3
  42cf44:	cmp    BYTE PTR [rsi+0x1],0x0
  42cf48:	jne    0x42cf51
  42cf4a:	add    DWORD PTR [rip+0x114b],0x1        # 0x42e09c
  42cf51:	mov    ecx,DWORD PTR [rip+0x1149]        # 0x42e0a0
  42cf57:	test   ecx,ecx
  42cf59:	je     0x42cf76
  42cf5b:	mov    rax,QWORD PTR [rsp+0x90]
  42cf63:	cmp    BYTE PTR [rax],0x3a
  42cf66:	je     0x42cf76
  42cf68:	lea    rcx,[rip+0xea11]        # 0x43b980
  42cf6f:	mov    edx,ebx
  42cf71:	call   0x42c670
  42cf76:	mov    DWORD PTR [rip+0x111c],ebx        # 0x42e098
  42cf7c:	mov    eax,0x3f
  42cf81:	jmp    0x42cdb3
  42cf86:	mov    rcx,QWORD PTR [rsp+0x90]
  42cf8e:	mov    edx,0x2d
  42cf93:	call   0x42d638
  42cf98:	test   rax,rax
  42cf9b:	je     0x42cdae
  42cfa1:	mov    ebx,0x2d
  42cfa6:	movzx  edx,BYTE PTR [rax+0x1]
  42cfaa:	jmp    0x42cf23
  42cfaf:	cmp    BYTE PTR [r13+0x2],0x0
  42cfb4:	jne    0x42cc84
  42cfba:	mov    esi,DWORD PTR [rip+0x10c4]        # 0x42e084
  42cfc0:	lea    r8d,[rbx+0x1]
  42cfc4:	lea    rax,[rip+0xe98a]        # 0x43b955
  42cfcb:	mov    DWORD PTR [rip+0x10ca],r8d        # 0x42e09c
  42cfd2:	mov    QWORD PTR [rip+0x10b7],rax        # 0x42e090
  42cfd9:	cmp    esi,0xffffffff
  42cfdc:	je     0x42cd9a
  42cfe2:	mov    ecx,ebp
  42cfe4:	mov    r9,r15
  42cfe7:	mov    edx,esi
  42cfe9:	call   0x42c5c0
  42cfee:	sub    ebp,esi
  42cff0:	add    DWORD PTR [rip+0x10a6],ebp        # 0x42e09c
  42cff6:	jmp    0x42cd9a
  42cffb:	nop    DWORD PTR [rax+rax*1+0x0]
  42d000:	cmp    BYTE PTR [rsi+0x1],0x0
  42d004:	jne    0x42d155
  42d00a:	mov    eax,DWORD PTR [rip+0x108c]        # 0x42e09c
  42d010:	add    eax,0x1
  42d013:	cmp    edi,eax
  42d015:	mov    DWORD PTR [rip+0x1081],eax        # 0x42e09c
  42d01b:	jg     0x42d148
  42d021:	mov    edx,DWORD PTR [rip+0x1079]        # 0x42e0a0
  42d027:	lea    rax,[rip+0xe927]        # 0x43b955
  42d02e:	mov    QWORD PTR [rip+0x105b],rax        # 0x42e090
  42d035:	test   edx,edx
  42d037:	je     0x42d057
  42d039:	mov    rax,QWORD PTR [rsp+0x90]
  42d041:	cmp    BYTE PTR [rax],0x3a
  42d044:	je     0x42d057
  42d046:	lea    rcx,[rip+0xe9f3]        # 0x43ba40
  42d04d:	mov    edx,0x57
  42d052:	call   0x42c670
  42d057:	mov    rax,QWORD PTR [rsp+0x90]
  42d05f:	mov    DWORD PTR [rip+0x102f],0x57        # 0x42e098
  42d069:	cmp    BYTE PTR [rax],0x3a
  42d06c:	je     0x42d13e
  42d072:	mov    eax,0x3f
  42d077:	jmp    0x42cdb3
  42d07c:	lea    rbp,[rsi+0x1]
  42d080:	mov    QWORD PTR [rip+0x1009],rbp        # 0x42e090
  42d087:	cmp    BYTE PTR [rsi+0x1],0x0
  42d08b:	je     0x42cf86
  42d091:	mov    ebx,0x2d
  42d096:	jmp    0x42cf51
  42d09b:	mov    QWORD PTR [rip+0x14eea],0x0        # 0x441f90
  42d0a6:	cmp    BYTE PTR [rsi+0x1],0x0
  42d0aa:	je     0x42d0d7
  42d0ac:	mov    eax,DWORD PTR [rip+0xfea]        # 0x42e09c
  42d0b2:	mov    QWORD PTR [rip+0x14ed7],rbp        # 0x441f90
  42d0b9:	lea    rcx,[rip+0xe895]        # 0x43b955
  42d0c0:	add    eax,0x1
  42d0c3:	mov    DWORD PTR [rip+0xfd3],eax        # 0x42e09c
  42d0c9:	mov    eax,ebx
  42d0cb:	mov    QWORD PTR [rip+0xfbe],rcx        # 0x42e090
  42d0d2:	jmp    0x42cdb3
  42d0d7:	cmp    BYTE PTR [rax+0x2],0x3a
  42d0db:	mov    eax,DWORD PTR [rip+0xfbb]        # 0x42e09c
  42d0e1:	je     0x42d0b9
  42d0e3:	add    eax,0x1
  42d0e6:	cmp    edi,eax
  42d0e8:	mov    DWORD PTR [rip+0xfae],eax        # 0x42e09c
  42d0ee:	jg     0x42d182
  42d0f4:	lea    rax,[rip+0xe85a]        # 0x43b955
  42d0fb:	mov    QWORD PTR [rip+0xf8e],rax        # 0x42e090
  42d102:	mov    eax,DWORD PTR [rip+0xf98]        # 0x42e0a0
  42d108:	test   eax,eax
  42d10a:	je     0x42d127
  42d10c:	mov    rax,QWORD PTR [rsp+0x90]
  42d114:	cmp    BYTE PTR [rax],0x3a
  42d117:	je     0x42d127
  42d119:	lea    rcx,[rip+0xe920]        # 0x43ba40
  42d120:	mov    edx,ebx
  42d122:	call   0x42c670
  42d127:	mov    rax,QWORD PTR [rsp+0x90]
  42d12f:	mov    DWORD PTR [rip+0xf63],ebx        # 0x42e098
  42d135:	cmp    BYTE PTR [rax],0x3a
  42d138:	jne    0x42d072
  42d13e:	mov    eax,0x3a
  42d143:	jmp    0x42cdb3
  42d148:	cdqe   
  42d14a:	mov    rax,QWORD PTR [r15+rax*8]
  42d14e:	mov    QWORD PTR [rip+0xf3b],rax        # 0x42e090
  42d155:	mov    r9,QWORD PTR [rsp+0xa0]
  42d15d:	mov    r8,QWORD PTR [rsp+0x98]
  42d165:	mov    rcx,r15
  42d168:	mov    rdx,QWORD PTR [rsp+0x90]
  42d170:	mov    DWORD PTR [rsp+0x20],0x0
  42d178:	call   0x42c6f0
  42d17d:	jmp    0x42ce7b
  42d182:	movsxd rdx,eax
  42d185:	mov    rdx,QWORD PTR [r15+rdx*8]
  42d189:	mov    QWORD PTR [rip+0x14e00],rdx        # 0x441f90
  42d190:	jmp    0x42d0b9
  42d195:	nop
  42d196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d1a0:	sub    rsp,0x38
  42d1a4:	xor    r9d,r9d
  42d1a7:	mov    DWORD PTR [rsp+0x28],0x0
  42d1af:	mov    QWORD PTR [rsp+0x20],0x0
  42d1b8:	call   0x42cab0
  42d1bd:	add    rsp,0x38
  42d1c1:	ret    
  42d1c2:	nop    DWORD PTR [rax+0x0]
  42d1c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d1d0:	sub    rsp,0x38
  42d1d4:	mov    rax,QWORD PTR [rsp+0x60]
  42d1d9:	mov    DWORD PTR [rsp+0x28],0x1
  42d1e1:	mov    QWORD PTR [rsp+0x20],rax
  42d1e6:	call   0x42cab0
  42d1eb:	add    rsp,0x38
  42d1ef:	ret    
  42d1f0:	sub    rsp,0x38
  42d1f4:	mov    rax,QWORD PTR [rsp+0x60]
  42d1f9:	mov    DWORD PTR [rsp+0x28],0x5
  42d201:	mov    QWORD PTR [rsp+0x20],rax
  42d206:	call   0x42cab0
  42d20b:	add    rsp,0x38
  42d20f:	ret    
  42d210:	push   r12
  42d212:	push   rbp
  42d213:	push   rdi
  42d214:	push   rsi
  42d215:	push   rbx
  42d216:	sub    rsp,0x250
  42d21d:	mov    rbx,rdx
  42d220:	mov    rsi,rcx
  42d223:	mov    ecx,0x4000
  42d228:	mov    r12d,r8d
  42d22b:	call   0x42d6b8
  42d230:	test   rbx,rbx
  42d233:	mov    rbp,rax
  42d236:	je     0x42d300
  42d23c:	cmp    WORD PTR [rbx],0x0
  42d240:	lea    rax,[rip+0xe839]        # 0x43ba80
  42d247:	cmove  rbx,rax
  42d24b:	test   rsi,rsi
  42d24e:	je     0x42d2f1
  42d254:	cmp    WORD PTR [rsi],0x0
  42d258:	lea    rax,[rip+0xe835]        # 0x43ba94
  42d25f:	cmove  rsi,rax
  42d263:	lea    rdi,[rsp+0x40]
  42d268:	xor    ecx,ecx
  42d26a:	mov    r8d,0x104
  42d270:	mov    rdx,rdi
  42d273:	call   QWORD PTR [rip+0x156b3]        # 0x44292c
  42d279:	test   eax,eax
  42d27b:	je     0x42d2e0
  42d27d:	lea    r8,[rip+0xe814]        # 0x43ba98
  42d284:	mov    QWORD PTR [rsp+0x30],rsi
  42d289:	mov    DWORD PTR [rsp+0x28],r12d
  42d28e:	mov    QWORD PTR [rsp+0x20],rbx
  42d293:	mov    r9,rdi
  42d296:	mov    edx,0x1fff
  42d29b:	mov    rcx,rbp
  42d29e:	call   0x42d788
  42d2a3:	mov    rax,QWORD PTR [rip+0xea56]        # 0x43bd00
  42d2aa:	mov    eax,DWORD PTR [rax]
  42d2ac:	test   eax,eax
  42d2ae:	je     0x42d325
  42d2b0:	xor    ecx,ecx
  42d2b2:	mov    r9d,0x12012
  42d2b8:	lea    r8,[rip+0xe871]        # 0x43bb30
  42d2bf:	mov    rdx,rbp
  42d2c2:	call   QWORD PTR [rip+0x15a04]        # 0x442ccc
  42d2c8:	cmp    eax,0x3
  42d2cb:	je     0x42d311
  42d2cd:	cmp    eax,0x5
  42d2d0:	jne    0x42d30c
  42d2d2:	add    rsp,0x250
  42d2d9:	pop    rbx
  42d2da:	pop    rsi
  42d2db:	pop    rdi
  42d2dc:	pop    rbp
  42d2dd:	pop    r12
  42d2df:	ret    
  42d2e0:	lea    rdx,[rip+0xe799]        # 0x43ba80
  42d2e7:	mov    rcx,rdi
  42d2ea:	call   0x42d5d0
  42d2ef:	jmp    0x42d27d
  42d2f1:	lea    rsi,[rip+0xe79c]        # 0x43ba94
  42d2f8:	jmp    0x42d263
  42d2fd:	nop    DWORD PTR [rax]
  42d300:	lea    rbx,[rip+0xe779]        # 0x43ba80
  42d307:	jmp    0x42d24b
  42d30c:	call   0x42d758
  42d311:	mov    ecx,0x16
  42d316:	call   0x42d678
  42d31b:	mov    ecx,0x3
  42d320:	call   0x42d7c0
  42d325:	call   0x42d7f8
  42d32a:	lea    rdx,[rip+0xe7ef]        # 0x43bb20
  42d331:	lea    rcx,[rax+0x60]
  42d335:	mov    r8,rbp
  42d338:	call   0x42d6f0
  42d33d:	call   0x42d758
  42d342:	nop
  42d343:	nop    DWORD PTR [rax]
  42d346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d350:	push   rbp
  42d351:	push   rdi
  42d352:	push   rsi
  42d353:	push   rbx
  42d354:	sub    rsp,0x38
  42d358:	mov    rdi,rdx
  42d35b:	mov    DWORD PTR [rsp+0x2c],r8d
  42d360:	mov    rbp,rcx
  42d363:	call   0x42d610
  42d368:	lea    rcx,[rax+rax*1+0x2]
  42d36d:	call   0x42d6b8
  42d372:	mov    rcx,rdi
  42d375:	mov    rsi,rax
  42d378:	call   0x42d610
  42d37d:	lea    rcx,[rax+rax*1+0x2]
  42d382:	call   0x42d6b8
  42d387:	movzx  r9d,BYTE PTR [rbp+0x0]
  42d38c:	xor    r10d,r10d
  42d38f:	mov    rbx,rax
  42d392:	mov    r8d,DWORD PTR [rsp+0x2c]
  42d397:	test   r9b,r9b
  42d39a:	je     0x42d3b7
  42d39c:	nop    DWORD PTR [rax+0x0]
  42d3a0:	mov    WORD PTR [rsi+r10*2],r9w
  42d3a5:	add    r10,0x1
  42d3a9:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  42d3af:	test   r9b,r9b
  42d3b2:	jne    0x42d3a0
  42d3b4:	add    r10,r10
  42d3b7:	movzx  r9d,BYTE PTR [rdi]
  42d3bb:	xor    edx,edx
  42d3bd:	mov    WORD PTR [rsi+r10*1],dx
  42d3c2:	xor    r10d,r10d
  42d3c5:	test   r9b,r9b
  42d3c8:	je     0x42d3e6
  42d3ca:	nop    WORD PTR [rax+rax*1+0x0]
  42d3d0:	mov    WORD PTR [rbx+r10*2],r9w
  42d3d5:	add    r10,0x1
  42d3d9:	movzx  r9d,BYTE PTR [rdi+r10*1]
  42d3de:	test   r9b,r9b
  42d3e1:	jne    0x42d3d0
  42d3e3:	add    r10,r10
  42d3e6:	xor    eax,eax
  42d3e8:	mov    rdx,rbx
  42d3eb:	mov    rcx,rsi
  42d3ee:	mov    WORD PTR [rbx+r10*1],ax
  42d3f3:	call   0x42d210
  42d3f8:	mov    rcx,rsi
  42d3fb:	call   0x42d6f8
  42d400:	mov    rcx,rbx
  42d403:	add    rsp,0x38
  42d407:	pop    rbx
  42d408:	pop    rsi
  42d409:	pop    rdi
  42d40a:	pop    rbp
  42d40b:	jmp    0x42d6f8
  42d410:	push   rbx
  42d411:	test   rcx,rcx
  42d414:	je     0x42d489
  42d416:	lea    rax,[rcx+0x1]
  42d41a:	mov    r9,rdx
  42d41d:	movsx  r11d,BYTE PTR [rax-0x1]
  42d422:	jmp    0x42d429
  42d424:	cmp    r11d,r10d
  42d427:	je     0x42d473
  42d429:	add    r9,0x1
  42d42d:	movsx  r10d,BYTE PTR [r9-0x1]
  42d432:	test   r10d,r10d
  42d435:	jne    0x42d424
  42d437:	test   r11d,r11d
  42d43a:	je     0x42d495
  42d43c:	lea    rbx,[rax+0x1]
  42d440:	mov    r9,rdx
  42d443:	movsx  r11d,BYTE PTR [rbx-0x1]
  42d448:	jmp    0x42d455
  42d44a:	nop    WORD PTR [rax+rax*1+0x0]
  42d450:	test   r10d,r10d
  42d453:	je     0x42d480
  42d455:	add    r9,0x1
  42d459:	movsx  r10d,BYTE PTR [r9-0x1]
  42d45e:	cmp    r10d,r11d
  42d461:	jne    0x42d450
  42d463:	test   r11d,r11d
  42d466:	je     0x42d485
  42d468:	mov    BYTE PTR [rax],0x0
  42d46b:	mov    rax,rcx
  42d46e:	mov    QWORD PTR [r8],rbx
  42d471:	pop    rbx
  42d472:	ret    
  42d473:	mov    rcx,rax
  42d476:	jmp    0x42d416
  42d478:	nop    DWORD PTR [rax+rax*1+0x0]
  42d480:	mov    rax,rbx
  42d483:	jmp    0x42d43c
  42d485:	xor    ebx,ebx
  42d487:	jmp    0x42d46b
  42d489:	mov    rcx,QWORD PTR [r8]
  42d48c:	test   rcx,rcx
  42d48f:	jne    0x42d416
  42d491:	xor    eax,eax
  42d493:	pop    rbx
  42d494:	ret    
  42d495:	xor    eax,eax
  42d497:	mov    QWORD PTR [r8],0x0
  42d49e:	pop    rbx
  42d49f:	ret    
  42d4a0:	push   r12
  42d4a2:	push   rbp
  42d4a3:	push   rdi
  42d4a4:	push   rsi
  42d4a5:	push   rbx
  42d4a6:	sub    rsp,0x30
  42d4aa:	lea    rsi,[rsp+0x70]
  42d4af:	mov    QWORD PTR [rsp+0x70],r8
  42d4b4:	mov    QWORD PTR [rsp+0x78],r9
  42d4b9:	mov    r8,rdx
  42d4bc:	mov    r12,rcx
  42d4bf:	mov    rbp,rdx
  42d4c2:	xor    ecx,ecx
  42d4c4:	xor    edx,edx
  42d4c6:	mov    r9,rsi
  42d4c9:	mov    QWORD PTR [rsp+0x28],rsi
  42d4ce:	call   0x42d760
  42d4d3:	test   eax,eax
  42d4d5:	mov    ebx,eax
  42d4d7:	js     0x42d50c
  42d4d9:	lea    edi,[rax+0x1]
  42d4dc:	movsxd rdi,edi
  42d4df:	mov    rcx,rdi
  42d4e2:	call   0x42d6b8
  42d4e7:	test   rax,rax
  42d4ea:	mov    QWORD PTR [r12],rax
  42d4ee:	je     0x42d520
  42d4f0:	mov    rdx,rdi
  42d4f3:	mov    r9,rsi
  42d4f6:	mov    r8,rbp
  42d4f9:	mov    rcx,rax
  42d4fc:	call   0x42d760
  42d501:	mov    rdx,QWORD PTR [r12]
  42d505:	movsxd rax,ebx
  42d508:	mov    BYTE PTR [rdx+rax*1],0x0
  42d50c:	mov    eax,ebx
  42d50e:	add    rsp,0x30
  42d512:	pop    rbx
  42d513:	pop    rsi
  42d514:	pop    rdi
  42d515:	pop    rbp
  42d516:	pop    r12
  42d518:	ret    
  42d519:	nop    DWORD PTR [rax+0x0]
  42d520:	mov    ebx,0xffffffff
  42d525:	jmp    0x42d50c
  42d527:	nop
  42d528:	nop
  42d529:	nop
  42d52a:	nop
  42d52b:	nop
  42d52c:	nop
  42d52d:	nop
  42d52e:	nop
  42d52f:	nop
  42d530:	push   r12
  42d532:	push   rbp
  42d533:	push   rdi
  42d534:	push   rsi
  42d535:	push   rbx
  42d536:	sub    rsp,0x20
  42d53a:	mov    r9,r8
  42d53d:	mov    r12,rcx
  42d540:	mov    rdi,rdx
  42d543:	xor    ecx,ecx
  42d545:	mov    rbp,r8
  42d548:	mov    r8,rdx
  42d54b:	xor    edx,edx
  42d54d:	call   0x42d760
  42d552:	test   eax,eax
  42d554:	mov    ebx,eax
  42d556:	js     0x42d5a0
  42d558:	lea    esi,[rax+0x1]
  42d55b:	movsxd rsi,esi
  42d55e:	mov    rcx,rsi
  42d561:	call   0x42d6b8
  42d566:	test   rax,rax
  42d569:	mov    QWORD PTR [r12],rax
  42d56d:	je     0x42d5a0
  42d56f:	mov    rdx,rsi
  42d572:	mov    r9,rbp
  42d575:	mov    r8,rdi
  42d578:	mov    rcx,rax
  42d57b:	call   0x42d760
  42d580:	mov    rdx,QWORD PTR [r12]
  42d584:	movsxd rax,ebx
  42d587:	mov    BYTE PTR [rdx+rax*1],0x0
  42d58b:	mov    eax,ebx
  42d58d:	add    rsp,0x20
  42d591:	pop    rbx
  42d592:	pop    rsi
  42d593:	pop    rdi
  42d594:	pop    rbp
  42d595:	pop    r12
  42d597:	ret    
  42d598:	nop    DWORD PTR [rax+rax*1+0x0]
  42d5a0:	mov    eax,0xffffffff
  42d5a5:	jmp    0x42d58d
  42d5a7:	nop
  42d5a8:	nop
  42d5a9:	nop
  42d5aa:	nop
  42d5ab:	nop
  42d5ac:	nop
  42d5ad:	nop
  42d5ae:	nop
  42d5af:	nop
  42d5b0:	jmp    QWORD PTR [rip+0x156c6]        # 0x442c7c
  42d5b6:	nop
  42d5b7:	nop
  42d5b8:	jmp    QWORD PTR [rip+0x156b6]        # 0x442c74
  42d5be:	nop
  42d5bf:	nop
  42d5c0:	jmp    QWORD PTR [rip+0x156a6]        # 0x442c6c
  42d5c6:	nop
  42d5c7:	nop
  42d5c8:	jmp    QWORD PTR [rip+0x15696]        # 0x442c64
  42d5ce:	nop
  42d5cf:	nop
  42d5d0:	jmp    QWORD PTR [rip+0x15686]        # 0x442c5c
  42d5d6:	nop
  42d5d7:	nop
  42d5d8:	jmp    QWORD PTR [rip+0x15676]        # 0x442c54
  42d5de:	nop
  42d5df:	nop
  42d5e0:	jmp    QWORD PTR [rip+0x15666]        # 0x442c4c
  42d5e6:	nop
  42d5e7:	nop
  42d5e8:	jmp    QWORD PTR [rip+0x15656]        # 0x442c44
  42d5ee:	nop
  42d5ef:	nop
  42d5f0:	jmp    QWORD PTR [rip+0x15646]        # 0x442c3c
  42d5f6:	nop
  42d5f7:	nop
  42d5f8:	jmp    QWORD PTR [rip+0x15636]        # 0x442c34
  42d5fe:	nop
  42d5ff:	nop
  42d600:	jmp    QWORD PTR [rip+0x15626]        # 0x442c2c
  42d606:	nop
  42d607:	nop
  42d608:	jmp    QWORD PTR [rip+0x15616]        # 0x442c24
  42d60e:	nop
  42d60f:	nop
  42d610:	jmp    QWORD PTR [rip+0x15606]        # 0x442c1c
  42d616:	nop
  42d617:	nop
  42d618:	jmp    QWORD PTR [rip+0x155f6]        # 0x442c14
  42d61e:	nop
  42d61f:	nop
  42d620:	jmp    QWORD PTR [rip+0x155e6]        # 0x442c0c
  42d626:	nop
  42d627:	nop
  42d628:	jmp    QWORD PTR [rip+0x155d6]        # 0x442c04
  42d62e:	nop
  42d62f:	nop
  42d630:	jmp    QWORD PTR [rip+0x155c6]        # 0x442bfc
  42d636:	nop
  42d637:	nop
  42d638:	jmp    QWORD PTR [rip+0x155b6]        # 0x442bf4
  42d63e:	nop
  42d63f:	nop
  42d640:	jmp    QWORD PTR [rip+0x155a6]        # 0x442bec
  42d646:	nop
  42d647:	nop
  42d648:	jmp    QWORD PTR [rip+0x15596]        # 0x442be4
  42d64e:	nop
  42d64f:	nop
  42d650:	jmp    QWORD PTR [rip+0x15586]        # 0x442bdc
  42d656:	nop
  42d657:	nop
  42d658:	jmp    QWORD PTR [rip+0x15576]        # 0x442bd4
  42d65e:	nop
  42d65f:	nop
  42d660:	jmp    QWORD PTR [rip+0x15566]        # 0x442bcc
  42d666:	nop
  42d667:	nop
  42d668:	jmp    QWORD PTR [rip+0x15556]        # 0x442bc4
  42d66e:	nop
  42d66f:	nop
  42d670:	jmp    QWORD PTR [rip+0x15546]        # 0x442bbc
  42d676:	nop
  42d677:	nop
  42d678:	jmp    QWORD PTR [rip+0x15536]        # 0x442bb4
  42d67e:	nop
  42d67f:	nop
  42d680:	jmp    QWORD PTR [rip+0x15526]        # 0x442bac
  42d686:	nop
  42d687:	nop
  42d688:	jmp    QWORD PTR [rip+0x15516]        # 0x442ba4
  42d68e:	nop
  42d68f:	nop
  42d690:	jmp    QWORD PTR [rip+0x15506]        # 0x442b9c
  42d696:	nop
  42d697:	nop
  42d698:	jmp    QWORD PTR [rip+0x154f6]        # 0x442b94
  42d69e:	nop
  42d69f:	nop
  42d6a0:	jmp    QWORD PTR [rip+0x154e6]        # 0x442b8c
  42d6a6:	nop
  42d6a7:	nop
  42d6a8:	jmp    QWORD PTR [rip+0x154d6]        # 0x442b84
  42d6ae:	nop
  42d6af:	nop
  42d6b0:	jmp    QWORD PTR [rip+0x154c6]        # 0x442b7c
  42d6b6:	nop
  42d6b7:	nop
  42d6b8:	jmp    QWORD PTR [rip+0x154b6]        # 0x442b74
  42d6be:	nop
  42d6bf:	nop
  42d6c0:	jmp    QWORD PTR [rip+0x154a6]        # 0x442b6c
  42d6c6:	nop
  42d6c7:	nop
  42d6c8:	jmp    QWORD PTR [rip+0x15496]        # 0x442b64
  42d6ce:	nop
  42d6cf:	nop
  42d6d0:	jmp    QWORD PTR [rip+0x15486]        # 0x442b5c
  42d6d6:	nop
  42d6d7:	nop
  42d6d8:	jmp    QWORD PTR [rip+0x15476]        # 0x442b54
  42d6de:	nop
  42d6df:	nop
  42d6e0:	jmp    QWORD PTR [rip+0x15466]        # 0x442b4c
  42d6e6:	nop
  42d6e7:	nop
  42d6e8:	jmp    QWORD PTR [rip+0x15456]        # 0x442b44
  42d6ee:	nop
  42d6ef:	nop
  42d6f0:	jmp    QWORD PTR [rip+0x15446]        # 0x442b3c
  42d6f6:	nop
  42d6f7:	nop
  42d6f8:	jmp    QWORD PTR [rip+0x15436]        # 0x442b34
  42d6fe:	nop
  42d6ff:	nop
  42d700:	jmp    QWORD PTR [rip+0x15426]        # 0x442b2c
  42d706:	nop
  42d707:	nop
  42d708:	jmp    QWORD PTR [rip+0x15416]        # 0x442b24
  42d70e:	nop
  42d70f:	nop
  42d710:	jmp    QWORD PTR [rip+0x15406]        # 0x442b1c
  42d716:	nop
  42d717:	nop
  42d718:	jmp    QWORD PTR [rip+0x153f6]        # 0x442b14
  42d71e:	nop
  42d71f:	nop
  42d720:	jmp    QWORD PTR [rip+0x153e6]        # 0x442b0c
  42d726:	nop
  42d727:	nop
  42d728:	jmp    QWORD PTR [rip+0x153d6]        # 0x442b04
  42d72e:	nop
  42d72f:	nop
  42d730:	jmp    QWORD PTR [rip+0x153c6]        # 0x442afc
  42d736:	nop
  42d737:	nop
  42d738:	jmp    QWORD PTR [rip+0x153b6]        # 0x442af4
  42d73e:	nop
  42d73f:	nop
  42d740:	jmp    QWORD PTR [rip+0x153a6]        # 0x442aec
  42d746:	nop
  42d747:	nop
  42d748:	jmp    QWORD PTR [rip+0x15396]        # 0x442ae4
  42d74e:	nop
  42d74f:	nop
  42d750:	jmp    QWORD PTR [rip+0x15386]        # 0x442adc
  42d756:	nop
  42d757:	nop
  42d758:	jmp    QWORD PTR [rip+0x15376]        # 0x442ad4
  42d75e:	nop
  42d75f:	nop
  42d760:	jmp    QWORD PTR [rip+0x15366]        # 0x442acc
  42d766:	nop
  42d767:	nop
  42d768:	jmp    QWORD PTR [rip+0x15356]        # 0x442ac4
  42d76e:	nop
  42d76f:	nop
  42d770:	jmp    QWORD PTR [rip+0x15346]        # 0x442abc
  42d776:	nop
  42d777:	nop
  42d778:	jmp    QWORD PTR [rip+0x15336]        # 0x442ab4
  42d77e:	nop
  42d77f:	nop
  42d780:	jmp    QWORD PTR [rip+0x15326]        # 0x442aac
  42d786:	nop
  42d787:	nop
  42d788:	jmp    QWORD PTR [rip+0x15316]        # 0x442aa4
  42d78e:	nop
  42d78f:	nop
  42d790:	jmp    QWORD PTR [rip+0x15306]        # 0x442a9c
  42d796:	nop
  42d797:	nop
  42d798:	jmp    QWORD PTR [rip+0x152f6]        # 0x442a94
  42d79e:	nop
  42d79f:	nop
  42d7a0:	jmp    QWORD PTR [rip+0x152e6]        # 0x442a8c
  42d7a6:	nop
  42d7a7:	nop
  42d7a8:	jmp    QWORD PTR [rip+0x152d6]        # 0x442a84
  42d7ae:	nop
  42d7af:	nop
  42d7b0:	jmp    QWORD PTR [rip+0x152c6]        # 0x442a7c
  42d7b6:	nop
  42d7b7:	nop
  42d7b8:	jmp    QWORD PTR [rip+0x152ae]        # 0x442a6c
  42d7be:	nop
  42d7bf:	nop
  42d7c0:	jmp    QWORD PTR [rip+0x1529e]        # 0x442a64
  42d7c6:	nop
  42d7c7:	nop
  42d7c8:	jmp    QWORD PTR [rip+0x1528e]        # 0x442a5c
  42d7ce:	nop
  42d7cf:	nop
  42d7d0:	jmp    QWORD PTR [rip+0x1527e]        # 0x442a54
  42d7d6:	nop
  42d7d7:	nop
  42d7d8:	jmp    QWORD PTR [rip+0x1526e]        # 0x442a4c
  42d7de:	nop
  42d7df:	nop
  42d7e0:	jmp    QWORD PTR [rip+0x15256]        # 0x442a3c
  42d7e6:	nop
  42d7e7:	nop
  42d7e8:	jmp    QWORD PTR [rip+0x15246]        # 0x442a34
  42d7ee:	nop
  42d7ef:	nop
  42d7f0:	jmp    QWORD PTR [rip+0x15236]        # 0x442a2c
  42d7f6:	nop
  42d7f7:	nop
  42d7f8:	jmp    QWORD PTR [rip+0x15226]        # 0x442a24
  42d7fe:	nop
  42d7ff:	nop
  42d800:	jmp    QWORD PTR [rip+0x1520e]        # 0x442a14
  42d806:	nop
  42d807:	nop
  42d808:	jmp    QWORD PTR [rip+0x151fe]        # 0x442a0c
  42d80e:	nop
  42d80f:	nop
  42d810:	jmp    QWORD PTR [rip+0x151e6]        # 0x4429fc
  42d816:	nop
  42d817:	nop
  42d818:	nop    DWORD PTR [rax+rax*1+0x0]
  42d820:	mov    rax,QWORD PTR [rip+0x14709]        # 0x441f30
  42d827:	ret    
  42d828:	nop    DWORD PTR [rax+rax*1+0x0]
  42d830:	mov    rax,rcx
  42d833:	xchg   QWORD PTR [rip+0x146f6],rax        # 0x441f30
  42d83a:	ret    
  42d83b:	nop
  42d83c:	nop
  42d83d:	nop
  42d83e:	nop
  42d83f:	nop
  42d840:	jmp    QWORD PTR [rip+0x15476]        # 0x442cbc
  42d846:	nop
  42d847:	nop
  42d848:	jmp    QWORD PTR [rip+0x15466]        # 0x442cb4
  42d84e:	nop
  42d84f:	nop
  42d850:	jmp    QWORD PTR [rip+0x15456]        # 0x442cac
  42d856:	nop
  42d857:	nop
  42d858:	nop    DWORD PTR [rax+rax*1+0x0]
  42d860:	jmp    QWORD PTR [rip+0x15466]        # 0x442ccc
  42d866:	nop
  42d867:	nop
  42d868:	nop    DWORD PTR [rax+rax*1+0x0]
  42d870:	jmp    QWORD PTR [rip+0x15176]        # 0x4429ec
  42d876:	nop
  42d877:	nop
  42d878:	jmp    QWORD PTR [rip+0x15166]        # 0x4429e4
  42d87e:	nop
  42d87f:	nop
  42d880:	jmp    QWORD PTR [rip+0x15156]        # 0x4429dc
  42d886:	nop
  42d887:	nop
  42d888:	jmp    QWORD PTR [rip+0x15146]        # 0x4429d4
  42d88e:	nop
  42d88f:	nop
  42d890:	jmp    QWORD PTR [rip+0x15136]        # 0x4429cc
  42d896:	nop
  42d897:	nop
  42d898:	jmp    QWORD PTR [rip+0x15126]        # 0x4429c4
  42d89e:	nop
  42d89f:	nop
  42d8a0:	jmp    QWORD PTR [rip+0x15116]        # 0x4429bc
  42d8a6:	nop
  42d8a7:	nop
  42d8a8:	jmp    QWORD PTR [rip+0x15106]        # 0x4429b4
  42d8ae:	nop
  42d8af:	nop
  42d8b0:	jmp    QWORD PTR [rip+0x150f6]        # 0x4429ac
  42d8b6:	nop
  42d8b7:	nop
  42d8b8:	jmp    QWORD PTR [rip+0x150e6]        # 0x4429a4
  42d8be:	nop
  42d8bf:	nop
  42d8c0:	jmp    QWORD PTR [rip+0x150d6]        # 0x44299c
  42d8c6:	nop
  42d8c7:	nop
  42d8c8:	jmp    QWORD PTR [rip+0x150c6]        # 0x442994
  42d8ce:	nop
  42d8cf:	nop
  42d8d0:	jmp    QWORD PTR [rip+0x150b6]        # 0x44298c
  42d8d6:	nop
  42d8d7:	nop
  42d8d8:	jmp    QWORD PTR [rip+0x150a6]        # 0x442984
  42d8de:	nop
  42d8df:	nop
  42d8e0:	jmp    QWORD PTR [rip+0x15096]        # 0x44297c
  42d8e6:	nop
  42d8e7:	nop
  42d8e8:	jmp    QWORD PTR [rip+0x15086]        # 0x442974
  42d8ee:	nop
  42d8ef:	nop
  42d8f0:	jmp    QWORD PTR [rip+0x15076]        # 0x44296c
  42d8f6:	nop
  42d8f7:	nop
  42d8f8:	jmp    QWORD PTR [rip+0x15066]        # 0x442964
  42d8fe:	nop
  42d8ff:	nop
  42d900:	jmp    QWORD PTR [rip+0x15056]        # 0x44295c
  42d906:	nop
  42d907:	nop
  42d908:	jmp    QWORD PTR [rip+0x15046]        # 0x442954
  42d90e:	nop
  42d90f:	nop
  42d910:	jmp    QWORD PTR [rip+0x15036]        # 0x44294c
  42d916:	nop
  42d917:	nop
  42d918:	jmp    QWORD PTR [rip+0x15026]        # 0x442944
  42d91e:	nop
  42d91f:	nop
  42d920:	jmp    QWORD PTR [rip+0x15016]        # 0x44293c
  42d926:	nop
  42d927:	nop
  42d928:	jmp    QWORD PTR [rip+0x15006]        # 0x442934
  42d92e:	nop
  42d92f:	nop
  42d930:	jmp    QWORD PTR [rip+0x14ff6]        # 0x44292c
  42d936:	nop
  42d937:	nop
  42d938:	jmp    QWORD PTR [rip+0x14fe6]        # 0x442924
  42d93e:	nop
  42d93f:	nop
  42d940:	jmp    QWORD PTR [rip+0x14fd6]        # 0x44291c
  42d946:	nop
  42d947:	nop
  42d948:	jmp    QWORD PTR [rip+0x14fc6]        # 0x442914
  42d94e:	nop
  42d94f:	nop
  42d950:	jmp    QWORD PTR [rip+0x14fb6]        # 0x44290c
  42d956:	nop
  42d957:	nop
  42d958:	jmp    QWORD PTR [rip+0x14fa6]        # 0x442904
  42d95e:	nop
  42d95f:	nop
  42d960:	jmp    QWORD PTR [rip+0x14f96]        # 0x4428fc
  42d966:	nop
  42d967:	nop
  42d968:	jmp    QWORD PTR [rip+0x14f86]        # 0x4428f4
  42d96e:	nop
  42d96f:	nop
  42d970:	jmp    QWORD PTR [rip+0x14f76]        # 0x4428ec
  42d976:	nop
  42d977:	nop
  42d978:	jmp    QWORD PTR [rip+0x14f66]        # 0x4428e4
  42d97e:	nop
  42d97f:	nop
  42d980:	jmp    QWORD PTR [rip+0x14f56]        # 0x4428dc
  42d986:	nop
  42d987:	nop
  42d988:	jmp    QWORD PTR [rip+0x14f46]        # 0x4428d4
  42d98e:	nop
  42d98f:	nop
  42d990:	push   rsi
  42d991:	push   rbx
  42d992:	sub    rsp,0x28
  42d996:	mov    rsi,rcx
  42d999:	mov    rbx,rdx
  42d99c:	call   QWORD PTR [rip+0x15082]        # 0x442a24
  42d9a2:	lea    rdx,[rip+0x1777]        # 0x42f120
  42d9a9:	lea    rcx,[rax+0x60]
  42d9ad:	mov    r9,rsi
  42d9b0:	mov    r8,rbx
  42d9b3:	call   0x42d710
  42d9b8:	mov    ecx,0x1
  42d9bd:	call   0x42d738
  42d9c2:	nop
  42d9c3:	nop
  42d9c4:	nop
  42d9c5:	nop
  42d9c6:	nop
  42d9c7:	nop
  42d9c8:	nop
  42d9c9:	nop
  42d9ca:	nop
  42d9cb:	nop
  42d9cc:	nop
  42d9cd:	nop
  42d9ce:	nop
  42d9cf:	nop
  42d9d0:	push   rdi
  42d9d1:	push   rsi
  42d9d2:	push   rbx
  42d9d3:	sub    rsp,0x60
  42d9d7:	mov    esi,ecx
  42d9d9:	mov    rbx,rdx
  42d9dc:	call   0x42b1d0
  42d9e1:	lea    rdx,[rip+0xfffffffffffd3e88]        # 0x401870
  42d9e8:	mov    ecx,0xf
  42d9ed:	call   0x42d650
  42d9f2:	lea    rdx,[rip+0xfffffffffffd3e77]        # 0x401870
  42d9f9:	mov    ecx,0x2
  42d9fe:	call   0x42d650
  42da03:	mov    rdi,QWORD PTR [rip+0xe346]        # 0x43bd50
  42da0a:	jmp    0x42da23
  42da0c:	nop    DWORD PTR [rax+0x0]
  42da10:	cmp    eax,0x6c
  42da13:	jne    0x42dca0
  42da19:	mov    rax,QWORD PTR [rdi]
  42da1c:	mov    QWORD PTR [rip+0x1360d],rax        # 0x441030
  42da23:	lea    r8,[rip+0x176a]        # 0x42f194
  42da2a:	mov    rdx,rbx
  42da2d:	mov    ecx,esi
  42da2f:	call   0x42d1a0
  42da34:	cmp    eax,0xffffffff
  42da37:	jne    0x42da10
  42da39:	mov    rax,QWORD PTR [rip+0xe320]        # 0x43bd60
  42da40:	movsxd rax,DWORD PTR [rax]
  42da43:	cmp    esi,eax
  42da45:	jle    0x42dca0
  42da4b:	mov    rsi,QWORD PTR [rbx+rax*8]
  42da4f:	mov    edx,0xf0
  42da54:	mov    ecx,0x1
  42da59:	mov    QWORD PTR [rsp+0x38],0x0
  42da62:	call   0x42d740
  42da67:	lea    r8,[rsp+0x38]
  42da6c:	mov    QWORD PTR [rax+0x80],0xffffffffffffffff
  42da77:	mov    QWORD PTR [rax+0x38],0x0
  42da7f:	mov    DWORD PTR [rax+0x40],0x0
  42da86:	mov    rdx,rax
  42da89:	mov    rcx,rsi
  42da8c:	mov    rbx,rax
  42da8f:	call   0x4017a0
  42da94:	test   eax,eax
  42da96:	je     0x42dcf5
  42da9c:	mov    rdi,QWORD PTR [rsp+0x38]
  42daa1:	test   rdi,rdi
  42daa4:	jne    0x42dd18
  42daaa:	cmp    QWORD PTR [rbx+0x8],0x0
  42daaf:	je     0x42dd3b
  42dab5:	cmp    QWORD PTR [rbx+0x18],0x0
  42daba:	je     0x42dd4a
  42dac0:	cmp    DWORD PTR [rbx+0x28],0x0
  42dac4:	je     0x42dd59
  42daca:	mov    eax,DWORD PTR [rbx+0x30]
  42dacd:	cmp    DWORD PTR [rbx+0x34],eax
  42dad0:	jl     0x42dd68
  42dad6:	mov    rcx,rsi
  42dad9:	call   QWORD PTR [rip+0x14fcd]        # 0x442aac
  42dadf:	mov    QWORD PTR [rbx],rax
  42dae2:	call   0x4019a0
  42dae7:	mov    rcx,rbx
  42daea:	call   0x402420
  42daef:	mov    rcx,rbx
  42daf2:	call   0x402f30
  42daf7:	movzx  ecx,WORD PTR [rbx+0x28]
  42dafb:	mov    DWORD PTR [rsp+0x34],0x1
  42db03:	mov    DWORD PTR [rsp+0x44],0x0
  42db0b:	call   QWORD PTR [rip+0x15253]        # 0x442d64
  42db11:	xor    r8d,r8d
  42db14:	mov    WORD PTR [rsp+0x42],ax
  42db19:	mov    WORD PTR [rsp+0x40],0x2
  42db20:	mov    edx,0x1
  42db25:	mov    ecx,0x2
  42db2a:	call   QWORD PTR [rip+0x1527c]        # 0x442dac
  42db30:	cmp    rax,0xffffffffffffffff
  42db34:	mov    rsi,rax
  42db37:	je     0x42dd93
  42db3d:	mov    rcx,rax
  42db40:	call   0x4131b0
  42db45:	lea    r9,[rsp+0x34]
  42db4a:	mov    r8d,0x4
  42db50:	mov    edx,0xffff
  42db55:	mov    rcx,rsi
  42db58:	mov    DWORD PTR [rsp+0x20],0x4
  42db60:	call   QWORD PTR [rip+0x1523e]        # 0x442da4
  42db66:	mov    edi,DWORD PTR [rbx+0x28]
  42db69:	call   QWORD PTR [rip+0x14eb5]        # 0x442a24
  42db6f:	lea    rdx,[rip+0x168c]        # 0x42f202
  42db76:	lea    rcx,[rax+0x60]
  42db7a:	mov    r8d,edi
  42db7d:	call   0x42d710
  42db82:	lea    rdx,[rsp+0x40]
  42db87:	mov    r8d,0x10
  42db8d:	mov    rcx,rsi
  42db90:	call   QWORD PTR [rip+0x15176]        # 0x442d0c
  42db96:	test   eax,eax
  42db98:	js     0x42dda9
  42db9e:	mov    edx,0x5
  42dba3:	mov    rcx,rsi
  42dba6:	call   QWORD PTR [rip+0x151c8]        # 0x442d74
  42dbac:	lea    r9,[rsp+0x50]
  42dbb1:	xor    r8d,r8d
  42dbb4:	mov    QWORD PTR [rbx+0x70],rsi
  42dbb8:	mov    edx,0x1
  42dbbd:	mov    ecx,0x1
  42dbc2:	call   0x424700
  42dbc7:	test   eax,eax
  42dbc9:	js     0x42dcdf
  42dbcf:	mov    rcx,QWORD PTR [rsp+0x50]
  42dbd4:	call   0x4131b0
  42dbd9:	mov    rcx,QWORD PTR [rsp+0x58]
  42dbde:	call   0x4131b0
  42dbe3:	mov    rax,QWORD PTR [rsp+0x58]
  42dbe8:	mov    rcx,rbx
  42dbeb:	mov    QWORD PTR [rbx+0x80],rax
  42dbf2:	mov    rax,QWORD PTR [rsp+0x50]
  42dbf7:	mov    QWORD PTR [rbx+0x78],rax
  42dbfb:	call   0x401a90
  42dc00:	mov    edx,DWORD PTR [rbx+0xe8]
  42dc06:	mov    r9d,DWORD PTR [rbx+0x90]
  42dc0d:	lea    rcx,[rip+0x1614]        # 0x42f228
  42dc14:	mov    r8d,DWORD PTR [rbx+0xec]
  42dc1b:	call   0x42d688
  42dc20:	mov    rcx,rbx
  42dc23:	call   0x4025b0
  42dc28:	mov    rcx,rbx
  42dc2b:	call   0x403010
  42dc30:	mov    rsi,QWORD PTR [rip+0x150dd]        # 0x442d14
  42dc37:	mov    rcx,QWORD PTR [rbx+0x78]
  42dc3b:	call   rsi
  42dc3d:	mov    rcx,QWORD PTR [rbx+0x70]
  42dc41:	call   rsi
  42dc43:	mov    rcx,QWORD PTR [rbx+0x80]
  42dc4a:	call   rsi
  42dc4c:	cmp    DWORD PTR [rbx+0x40],0x0
  42dc50:	jne    0x42dcc9
  42dc52:	mov    rcx,QWORD PTR [rbx+0x8]
  42dc56:	call   0x42d6f8
  42dc5b:	mov    rcx,QWORD PTR [rbx+0x10]
  42dc5f:	call   0x42d6f8
  42dc64:	mov    rcx,QWORD PTR [rbx+0x18]
  42dc68:	call   0x42d6f8
  42dc6d:	mov    rcx,QWORD PTR [rbx+0x20]
  42dc71:	call   0x42d6f8
  42dc76:	mov    rcx,QWORD PTR [rbx]
  42dc79:	call   0x42d6f8
  42dc7e:	mov    rcx,rbx
  42dc81:	call   0x42d6f8
  42dc86:	lea    rcx,[rip+0x15d1]        # 0x42f25e
  42dc8d:	call   0x42d680
  42dc92:	xor    eax,eax
  42dc94:	jmp    0x42dcc1
  42dc96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dca0:	mov    rbx,QWORD PTR [rbx]
  42dca3:	call   QWORD PTR [rip+0x14d7b]        # 0x442a24
  42dca9:	lea    rdx,[rip+0x14b8]        # 0x42f168
  42dcb0:	lea    rcx,[rax+0x60]
  42dcb4:	mov    r8,rbx
  42dcb7:	call   0x42d710
  42dcbc:	mov    eax,0x1
  42dcc1:	add    rsp,0x60
  42dcc5:	pop    rbx
  42dcc6:	pop    rsi
  42dcc7:	pop    rdi
  42dcc8:	ret    
  42dcc9:	lea    rcx,[rbx+0x48]
  42dccd:	call   QWORD PTR [rip+0x14c19]        # 0x4428ec
  42dcd3:	mov    DWORD PTR [rbx+0x40],0x0
  42dcda:	jmp    0x42dc52
  42dcdf:	lea    rcx,[rip+0x1537]        # 0x42f21d
  42dce6:	call   0x42d690
  42dceb:	mov    ecx,0x1
  42dcf0:	call   0x42d738
  42dcf5:	call   QWORD PTR [rip+0x14d29]        # 0x442a24
  42dcfb:	lea    rdx,[rip+0x1496]        # 0x42f198
  42dd02:	lea    rcx,[rax+0x60]
  42dd06:	mov    r8,rsi
  42dd09:	call   0x42d710
  42dd0e:	mov    ecx,0x1
  42dd13:	call   0x42d738
  42dd18:	call   QWORD PTR [rip+0x14d06]        # 0x442a24
  42dd1e:	lea    rdx,[rip+0x149d]        # 0x42f1c2
  42dd25:	lea    rcx,[rax+0x60]
  42dd29:	mov    r8,rdi
  42dd2c:	call   0x42d710
  42dd31:	mov    ecx,0x1
  42dd36:	call   0x42d738
  42dd3b:	lea    rdx,[rip+0x1484]        # 0x42f1c6
  42dd42:	mov    rcx,rsi
  42dd45:	call   0x42d990
  42dd4a:	lea    rdx,[rip+0x147a]        # 0x42f1cb
  42dd51:	mov    rcx,rsi
  42dd54:	call   0x42d990
  42dd59:	lea    rdx,[rip+0x1472]        # 0x42f1d2
  42dd60:	mov    rcx,rsi
  42dd63:	call   0x42d990
  42dd68:	call   QWORD PTR [rip+0x14cb6]        # 0x442a24
  42dd6e:	lea    rcx,[rip+0x1463]        # 0x42f1d8
  42dd75:	lea    r9,[rax+0x60]
  42dd79:	mov    r8d,0x22
  42dd7f:	mov    edx,0x1
  42dd84:	call   0x42d6e8
  42dd89:	mov    ecx,0x1
  42dd8e:	call   0x42d738
  42dd93:	lea    rcx,[rip+0x1461]        # 0x42f1fb
  42dd9a:	call   0x42d690
  42dd9f:	mov    ecx,0x1
  42dda4:	call   0x42d738
  42dda9:	lea    rcx,[rip+0x1468]        # 0x42f218
  42ddb0:	call   0x42d690
  42ddb5:	mov    ecx,0x1
  42ddba:	call   0x42d738
  42ddbf:	nop
  42ddc0:	jmp    0x40cff0
  42ddc5:	nop
  42ddc6:	nop
  42ddc7:	nop
  42ddc8:	nop
  42ddc9:	nop
  42ddca:	nop
  42ddcb:	nop
  42ddcc:	nop
  42ddcd:	nop
  42ddce:	nop
  42ddcf:	nop
  42ddd0:	mov    eax,DWORD PTR [rip+0x13782]        # 0x441558
  42ddd6:	test   eax,eax
  42ddd8:	jne    0x42dddb
  42ddda:	ret    
  42dddb:	jmp    0x42aeb0
  42dde0:	(bad)  
  42dde1:	(bad)  
  42dde2:	(bad)  
  42dde3:	(bad)  
  42dde4:	(bad)  
  42dde5:	(bad)  
  42dde6:	(bad)  
  42dde7:	inc    DWORD PTR [rax]
  42dde9:	add    BYTE PTR [rax],al
  42ddeb:	add    BYTE PTR [rax],al
  42dded:	add    BYTE PTR [rax],al
  42ddef:	add    bh,bh
  42ddf1:	(bad)  
  42ddf2:	(bad)  
  42ddf3:	(bad)  
  42ddf4:	(bad)  
  42ddf5:	(bad)  
  42ddf6:	(bad)  
  42ddf7:	inc    eax
  42ddf9:	fld    QWORD PTR [rdx+0x0]
  42ddfc:	add    BYTE PTR [rax],al
  42ddfe:	add    BYTE PTR [rax],al
  42de00:	rcr    ch,1
  42de02:	rex.X add BYTE PTR [rax],al
	...
