
4bbd4db544dc9fc6600c983bba42b07f3e9ada5501f2ec0d011c04c065f3eb41.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x37a75]        # 0x438a90
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x37a76]        # 0x438aa0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x37a79]        # 0x438ab0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x37a3c]        # 0x438a80
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x378df]        # 0x438930
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x37a11]        # 0x438a70
  40105f:	mov    DWORD PTR [rip+0x3cfa3],edx        # 0x43e008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x429670
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x4274b0
  401081:	mov    rdx,QWORD PTR [rip+0x37948]        # 0x4389d0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x3792e]        # 0x4389c0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x37994]        # 0x438a30
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x378cb]        # 0x438970
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x427090
  4010af:	mov    rax,QWORD PTR [rip+0x3782a]        # 0x4388e0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x429670
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x26269]        # 0x427390
  401127:	call   0x427380
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x378f5]        # 0x438a60
  40116b:	lea    r8,[rip+0x3cea6]        # 0x43e018
  401172:	lea    rdx,[rip+0x3cea7]        # 0x43e020
  401179:	lea    rcx,[rip+0x3cea8]        # 0x43e028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x3ce78],eax        # 0x43e000
  401188:	lea    rax,[rip+0x3ce71]        # 0x43e000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x37885]        # 0x438a20
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x429688
  4011a3:	mov    DWORD PTR [rip+0x3ce67],eax        # 0x43e010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x378aa]        # 0x438a70
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x377ab]        # 0x4389a0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x3e79a]        # 0x43f99c
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x37787]        # 0x4389b0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x3cdba],0x1        # 0x43e004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x376bc]        # 0x438920
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x4276a0
  40127d:	lea    rcx,[rip+0x269bc]        # 0x427c40
  401284:	call   QWORD PTR [rip+0x3e70a]        # 0x43f994
  40128a:	mov    rdx,QWORD PTR [rip+0x376ff]        # 0x438990
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x427b50
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x4296b0
  4012a5:	call   0x427490
  4012aa:	mov    rax,QWORD PTR [rip+0x3767f]        # 0x438930
  4012b1:	mov    QWORD PTR [rip+0x3dc90],rax        # 0x43ef48
  4012b8:	mov    rax,QWORD PTR [rip+0x376a1]        # 0x438960
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x3dc29],rax        # 0x43ef40
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x29cca],eax        # 0x42b000
  401336:	mov    r12d,DWORD PTR [rip+0x3cceb]        # 0x43e028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x429538
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x3ccc2]        # 0x43e020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x429490
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x429538
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x429528
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x3cc6a],rbp        # 0x43e020
  4013b6:	call   0x427060
  4013bb:	mov    rax,QWORD PTR [rip+0x3758e]        # 0x438950
  4013c2:	mov    rdx,QWORD PTR [rip+0x3cc4f]        # 0x43e018
  4013c9:	mov    ecx,DWORD PTR [rip+0x3cc59]        # 0x43e028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x3cc3c]        # 0x43e018
  4013dc:	mov    rdx,QWORD PTR [rip+0x3cc3d]        # 0x43e020
  4013e3:	call   0x429810
  4013e8:	mov    ecx,DWORD PTR [rip+0x3cc1a]        # 0x43e008
  4013ee:	mov    DWORD PTR [rip+0x3cc18],eax        # 0x43e00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x3cc02]        # 0x43e004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x429658
  40140b:	mov    eax,DWORD PTR [rip+0x3cbfb]        # 0x43e00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x37579]        # 0x4389b0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x429660
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x3758d]        # 0x4389f0
  401463:	mov    rcx,QWORD PTR [rip+0x37576]        # 0x4389e0
  40146a:	call   0x429640
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x3e493]        # 0x43f92c
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x37569]        # 0x438a10
  4014a7:	mov    rcx,QWORD PTR [rip+0x37552]        # 0x438a00
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x429640
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x4295c0
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x37595]        # 0x438a70
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x4270a0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x37565]        # 0x438a70
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x4270a0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	test   rcx,rcx
  401533:	je     0x401542
  401535:	mov    rdx,QWORD PTR [rcx+0xd8]
  40153c:	cmp    QWORD PTR [rdx],0x0
  401540:	jne    0x401543
  401542:	ret    
  401543:	mov    r8d,DWORD PTR [rcx+0x8]
  401547:	lea    rcx,[rip+0x2aab2]        # 0x42c000
  40154e:	add    rdx,0x8
  401552:	jmp    0x429508
  401557:	nop    WORD PTR [rax+rax*1+0x0]
  401560:	push   r13
  401562:	push   r12
  401564:	push   rbp
  401565:	push   rdi
  401566:	push   rsi
  401567:	push   rbx
  401568:	sub    rsp,0x38
  40156c:	mov    ebx,DWORD PTR [r8+0x20]
  401570:	mov    rsi,r8
  401573:	test   ebx,ebx
  401575:	je     0x401649
  40157b:	cmp    ebx,0x1647
  401581:	je     0x401640
  401587:	cmp    ebx,0x4e32
  40158d:	je     0x401640
  401593:	cmp    ebx,0x1645
  401599:	je     0x401640
  40159f:	movsx  r12d,WORD PTR [r8+0x28]
  4015a4:	movzx  ebp,BYTE PTR [r8+0x2b]
  4015a9:	mov    r13,QWORD PTR [r8]
  4015ac:	mov    rdi,QWORD PTR [rip+0x3e459]        # 0x43fa0c
  4015b3:	call   rdi
  4015b5:	lea    rdx,[rip+0x2aa74]        # 0x42c030
  4015bc:	lea    rcx,[rax+0x60]
  4015c0:	mov    r8d,ebx
  4015c3:	mov    QWORD PTR [rsp+0x28],r13
  4015c8:	mov    DWORD PTR [rsp+0x20],r12d
  4015cd:	mov    r9d,ebp
  4015d0:	call   0x429598
  4015d5:	mov    rbx,QWORD PTR [rsi+0x10]
  4015d9:	test   rbx,rbx
  4015dc:	je     0x4015f8
  4015de:	cmp    BYTE PTR [rbx],0x0
  4015e1:	je     0x4015f8
  4015e3:	call   rdi
  4015e5:	lea    rdx,[rip+0x2aa6b]        # 0x42c057
  4015ec:	lea    rcx,[rax+0x60]
  4015f0:	mov    r8,rbx
  4015f3:	call   0x429598
  4015f8:	mov    ebx,DWORD PTR [rsi+0x24]
  4015fb:	test   ebx,ebx
  4015fd:	jle    0x401614
  4015ff:	call   rdi
  401601:	lea    rdx,[rip+0x2aa5e]        # 0x42c066
  401608:	lea    rcx,[rax+0x60]
  40160c:	mov    r8d,ebx
  40160f:	call   0x429598
  401614:	mov    rbx,QWORD PTR [rsi+0x8]
  401618:	call   rdi
  40161a:	lea    rdx,[rip+0x2aa4e]        # 0x42c06f
  401621:	lea    rcx,[rax+0x60]
  401625:	mov    r8,rbx
  401628:	call   0x429598
  40162d:	xor    eax,eax
  40162f:	add    rsp,0x38
  401633:	pop    rbx
  401634:	pop    rsi
  401635:	pop    rdi
  401636:	pop    rbp
  401637:	pop    r12
  401639:	pop    r13
  40163b:	ret    
  40163c:	nop    DWORD PTR [rax+0x0]
  401640:	test   BYTE PTR [rip+0x3c9f1],0x20        # 0x43e038
  401647:	je     0x40162d
  401649:	mov    rbx,QWORD PTR [rsi+0x8]
  40164d:	call   QWORD PTR [rip+0x3e3b9]        # 0x43fa0c
  401653:	lea    rdx,[rip+0x2a9cc]        # 0x42c026
  40165a:	lea    rcx,[rax+0x60]
  40165e:	mov    r8,rbx
  401661:	call   0x429598
  401666:	xor    eax,eax
  401668:	add    rsp,0x38
  40166c:	pop    rbx
  40166d:	pop    rsi
  40166e:	pop    rdi
  40166f:	pop    rbp
  401670:	pop    r12
  401672:	pop    r13
  401674:	ret    
  401675:	nop
  401676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401680:	push   r12
  401682:	push   rbp
  401683:	push   rdi
  401684:	push   rsi
  401685:	push   rbx
  401686:	sub    rsp,0x30
  40168a:	movzx  ebp,BYTE PTR [r8+0x2b]
  40168f:	mov    r12,QWORD PTR [r8+0x8]
  401693:	mov    edi,DWORD PTR [r8+0x20]
  401697:	mov    rbx,r8
  40169a:	mov    rsi,QWORD PTR [rip+0x3e36b]        # 0x43fa0c
  4016a1:	call   rsi
  4016a3:	lea    rdx,[rip+0x2a9ce]        # 0x42c078
  4016aa:	lea    rcx,[rax+0x60]
  4016ae:	mov    QWORD PTR [rsp+0x20],r12
  4016b3:	mov    r9d,ebp
  4016b6:	mov    r8d,edi
  4016b9:	call   0x429598
  4016be:	mov    ecx,DWORD PTR [rbx+0x2c]
  4016c1:	test   ecx,ecx
  4016c3:	je     0x4016e8
  4016c5:	call   0x4294a0
  4016ca:	mov    ebx,DWORD PTR [rbx+0x2c]
  4016cd:	mov    rdi,rax
  4016d0:	call   rsi
  4016d2:	lea    rdx,[rip+0x2a9bc]        # 0x42c095
  4016d9:	lea    rcx,[rax+0x60]
  4016dd:	mov    r9,rdi
  4016e0:	mov    r8d,ebx
  4016e3:	call   0x429598
  4016e8:	mov    eax,0x2
  4016ed:	add    rsp,0x30
  4016f1:	pop    rbx
  4016f2:	pop    rsi
  4016f3:	pop    rdi
  4016f4:	pop    rbp
  4016f5:	pop    r12
  4016f7:	ret    
  4016f8:	nop    DWORD PTR [rax+rax*1+0x0]
  401700:	push   r12
  401702:	push   rbp
  401703:	push   rdi
  401704:	push   rsi
  401705:	push   rbx
  401706:	sub    rsp,0x20
  40170a:	test   rcx,rcx
  40170d:	mov    r12,rcx
  401710:	mov    rbp,rdx
  401713:	je     0x401860
  401719:	test   rdx,rdx
  40171c:	je     0x401860
  401722:	mov    rcx,r12
  401725:	call   0x429490
  40172a:	lea    rcx,[rax+0x2]
  40172e:	mov    edx,0x8
  401733:	call   0x4295c8
  401738:	test   rax,rax
  40173b:	mov    rsi,rax
  40173e:	je     0x4018a0
  401744:	xor    ebx,ebx
  401746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401750:	lea    rdx,[rip+0x2a968]        # 0x42c0bf
  401757:	mov    rcx,r12
  40175a:	mov    edi,ebx
  40175c:	xor    r12d,r12d
  40175f:	call   0x429470
  401764:	mov    QWORD PTR [rsi+rbx*8],rax
  401768:	add    rbx,0x1
  40176c:	test   rax,rax
  40176f:	jne    0x401750
  401771:	mov    r12,QWORD PTR [rip+0x37368]        # 0x438ae0
  401778:	mov    rax,QWORD PTR [rip+0x37351]        # 0x438ad0
  40177f:	lea    rbx,[rip+0x2a98a]        # 0x42c110
  401786:	mov    DWORD PTR [rbp+0x0],0x0
  40178d:	mov    DWORD PTR [r12],0x0
  401795:	mov    DWORD PTR [rax],0x0
  40179b:	lea    r8,[rip+0x2a966]        # 0x42c108
  4017a2:	mov    rdx,rsi
  4017a5:	mov    ecx,edi
  4017a7:	call   0x429030
  4017ac:	cmp    eax,0xffffffff
  4017af:	je     0x401880
  4017b5:	lea    r8d,[rax-0x66]
  4017b9:	cmp    r8d,0x10
  4017bd:	ja     0x401820
  4017bf:	movsxd rax,DWORD PTR [rbx+r8*4]
  4017c3:	add    rax,rbx
  4017c6:	jmp    rax
  4017c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4017d0:	or     DWORD PTR [rbp+0x0],0x1
  4017d4:	jmp    0x40179b
  4017d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017e0:	or     DWORD PTR [rbp+0x0],0x2
  4017e4:	jmp    0x40179b
  4017e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017f0:	or     DWORD PTR [rbp+0x0],0x10
  4017f4:	jmp    0x40179b
  4017f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401800:	or     DWORD PTR [rbp+0x0],0x8
  401804:	jmp    0x40179b
  401806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401810:	or     DWORD PTR [rbp+0x0],0x4
  401814:	jmp    0x40179b
  401816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401820:	movsxd rax,DWORD PTR [r12]
  401824:	mov    rbx,QWORD PTR [rsi+rax*8-0x8]
  401829:	call   QWORD PTR [rip+0x3e1dd]        # 0x43fa0c
  40182f:	lea    rdx,[rip+0x2a892]        # 0x42c0c8
  401836:	lea    rcx,[rax+0x60]
  40183a:	mov    r8,rbx
  40183d:	call   0x429598
  401842:	mov    rcx,rsi
  401845:	call   0x429580
  40184a:	xor    eax,eax
  40184c:	add    rsp,0x20
  401850:	pop    rbx
  401851:	pop    rsi
  401852:	pop    rdi
  401853:	pop    rbp
  401854:	pop    r12
  401856:	ret    
  401857:	nop    WORD PTR [rax+rax*1+0x0]
  401860:	lea    rdx,[rip+0x2a842]        # 0x42c0a9
  401867:	lea    rcx,[rip+0x2a842]        # 0x42c0b0
  40186e:	mov    r8d,0x15f
  401874:	call   0x4291e0
  401879:	jmp    0x401722
  40187e:	xchg   ax,ax
  401880:	mov    rcx,rsi
  401883:	call   0x429580
  401888:	mov    eax,0x1
  40188d:	add    rsp,0x20
  401891:	pop    rbx
  401892:	pop    rsi
  401893:	pop    rdi
  401894:	pop    rbp
  401895:	pop    r12
  401897:	ret    
  401898:	nop    DWORD PTR [rax+rax*1+0x0]
  4018a0:	xor    eax,eax
  4018a2:	add    rsp,0x20
  4018a6:	pop    rbx
  4018a7:	pop    rsi
  4018a8:	pop    rdi
  4018a9:	pop    rbp
  4018aa:	pop    r12
  4018ac:	ret    
  4018ad:	nop    DWORD PTR [rax]
  4018b0:	push   r15
  4018b2:	push   r14
  4018b4:	push   r13
  4018b6:	push   r12
  4018b8:	push   rbp
  4018b9:	push   rdi
  4018ba:	push   rsi
  4018bb:	push   rbx
  4018bc:	sub    rsp,0x438
  4018c3:	mov    r13,QWORD PTR [rsp+0x4a0]
  4018cb:	mov    r12,rdx
  4018ce:	lea    rdx,[rip+0x2a87f]        # 0x42c154
  4018d5:	mov    rbx,rcx
  4018d8:	mov    rsi,r8
  4018db:	mov    rbp,r9
  4018de:	call   0x4295a0
  4018e3:	mov    r14,rax
  4018e6:	lea    rax,[rsp+0x30]
  4018eb:	test   r14,r14
  4018ee:	mov    QWORD PTR [rsp+0x28],rax
  4018f3:	je     0x4019b1
  4018f9:	nop    DWORD PTR [rax+0x0]
  401900:	mov    rcx,QWORD PTR [rsp+0x28]
  401905:	mov    r8,r14
  401908:	mov    edx,0x400
  40190d:	call   0x4295a8
  401912:	test   rax,rax
  401915:	mov    rdi,rax
  401918:	je     0x401994
  40191a:	mov    rbx,QWORD PTR [r12]
  40191e:	jmp    0x401935
  401920:	add    rdx,rdx
  401923:	mov    rcx,rbx
  401926:	mov    QWORD PTR [rsi],rdx
  401929:	call   0x4294e8
  40192e:	mov    QWORD PTR [r12],rax
  401932:	mov    rbx,rax
  401935:	mov    r15,QWORD PTR [rbp+0x0]
  401939:	mov    rcx,rdi
  40193c:	call   0x429490
  401941:	mov    rdx,QWORD PTR [rsi]
  401944:	lea    rcx,[r15+rax*1+0x2]
  401949:	cmp    rcx,rdx
  40194c:	ja     0x401920
  40194e:	lea    rcx,[rbx+r15*1]
  401952:	lea    r8,[rax+0x1]
  401956:	mov    rdx,rdi
  401959:	call   0x429528
  40195e:	mov    rbx,QWORD PTR [rbp+0x0]
  401962:	mov    rcx,rbx
  401965:	add    rcx,QWORD PTR [r12]
  401969:	call   0x429490
  40196e:	add    rbx,rax
  401971:	mov    edx,0xa
  401976:	mov    rcx,rdi
  401979:	mov    QWORD PTR [rbp+0x0],rbx
  40197d:	call   0x429480
  401982:	test   rax,rax
  401985:	je     0x40198a
  401987:	mov    BYTE PTR [rax],0x0
  40198a:	add    DWORD PTR [r13+0x0],0x1
  40198f:	jmp    0x401900
  401994:	mov    rcx,r14
  401997:	call   0x4295b8
  40199c:	nop
  40199d:	add    rsp,0x438
  4019a4:	pop    rbx
  4019a5:	pop    rsi
  4019a6:	pop    rdi
  4019a7:	pop    rbp
  4019a8:	pop    r12
  4019aa:	pop    r13
  4019ac:	pop    r14
  4019ae:	pop    r15
  4019b0:	ret    
  4019b1:	call   QWORD PTR [rip+0x3e08d]        # 0x43fa44
  4019b7:	mov    ecx,DWORD PTR [rax]
  4019b9:	call   0x4294a0
  4019be:	mov    rsi,rax
  4019c1:	call   QWORD PTR [rip+0x3e045]        # 0x43fa0c
  4019c7:	lea    rdx,[rip+0x2a78a]        # 0x42c158
  4019ce:	lea    rcx,[rax+0x60]
  4019d2:	mov    r9,rsi
  4019d5:	mov    r8,rbx
  4019d8:	call   0x429598
  4019dd:	jmp    0x40199d
  4019df:	nop
  4019e0:	sub    rsp,0x28
  4019e4:	mov    edx,0xb0
  4019e9:	mov    ecx,0x1
  4019ee:	call   0x4295c8
  4019f3:	test   rax,rax
  4019f6:	je     0x401a0b
  4019f8:	mov    rdx,QWORD PTR [rip+0x37171]        # 0x438b70
  4019ff:	mov    QWORD PTR [rax+0x30],rdx
  401a03:	mov    QWORD PTR [rax+0x38],rdx
  401a07:	mov    QWORD PTR [rax+0x40],rdx
  401a0b:	add    rsp,0x28
  401a0f:	ret    
  401a10:	push   rbx
  401a11:	sub    rsp,0x20
  401a15:	mov    rbx,rcx
  401a18:	mov    rcx,QWORD PTR [rcx+0x48]
  401a1c:	test   rcx,rcx
  401a1f:	je     0x401a34
  401a21:	cmp    BYTE PTR [rbx+0x18],0x2
  401a25:	ja     0x401a40
  401a27:	call   0x429580
  401a2c:	mov    QWORD PTR [rbx+0x48],0x0
  401a34:	add    rsp,0x20
  401a38:	pop    rbx
  401a39:	ret    
  401a3a:	nop    WORD PTR [rax+rax*1+0x0]
  401a40:	mov    rcx,QWORD PTR [rcx]
  401a43:	call   0x429580
  401a48:	mov    rcx,QWORD PTR [rbx+0x48]
  401a4c:	jmp    0x401a27
  401a4e:	xchg   ax,ax
  401a50:	push   rbx
  401a51:	sub    rsp,0x20
  401a55:	mov    rbx,rcx
  401a58:	lea    rcx,[rcx+0x30]
  401a5c:	call   0x41f7e0
  401a61:	lea    rcx,[rbx+0x38]
  401a65:	call   0x41f7e0
  401a6a:	lea    rcx,[rbx+0x40]
  401a6e:	call   0x41f7e0
  401a73:	mov    rcx,rbx
  401a76:	add    rsp,0x20
  401a7a:	pop    rbx
  401a7b:	jmp    0x429580
  401a80:	push   r12
  401a82:	push   rbp
  401a83:	push   rdi
  401a84:	push   rsi
  401a85:	push   rbx
  401a86:	sub    rsp,0x20
  401a8a:	test   rcx,rcx
  401a8d:	je     0x401af4
  401a8f:	test   rdx,rdx
  401a92:	je     0x401af4
  401a94:	xor    edi,edi
  401a96:	xor    esi,esi
  401a98:	cmp    WORD PTR [rcx+0x8],0x0
  401a9d:	mov    r12,rdx
  401aa0:	mov    rbx,rcx
  401aa3:	je     0x401ae2
  401aa5:	mov    rax,QWORD PTR [rbx]
  401aa8:	mov    rax,QWORD PTR [rax+rdi*1]
  401aac:	cmp    BYTE PTR [rax+0x18],0x2
  401ab0:	jbe    0x401ad3
  401ab2:	mov    rbp,r12
  401ab5:	add    rbp,QWORD PTR [rax+0x48]
  401ab9:	sub    rbp,QWORD PTR [rbx+0x18]
  401abd:	mov    rcx,QWORD PTR [rbp+0x0]
  401ac1:	test   rcx,rcx
  401ac4:	je     0x401ad3
  401ac6:	call   0x429580
  401acb:	mov    QWORD PTR [rbp+0x0],0x0
  401ad3:	movzx  eax,WORD PTR [rbx+0x8]
  401ad7:	add    esi,0x1
  401ada:	add    rdi,0x8
  401ade:	cmp    esi,eax
  401ae0:	jl     0x401aa5
  401ae2:	mov    rcx,r12
  401ae5:	add    rsp,0x20
  401ae9:	pop    rbx
  401aea:	pop    rsi
  401aeb:	pop    rdi
  401aec:	pop    rbp
  401aed:	pop    r12
  401aef:	jmp    0x429580
  401af4:	add    rsp,0x20
  401af8:	pop    rbx
  401af9:	pop    rsi
  401afa:	pop    rdi
  401afb:	pop    rbp
  401afc:	pop    r12
  401afe:	ret    
  401aff:	nop
  401b00:	push   rbx
  401b01:	sub    rsp,0x1e0
  401b08:	cmp    BYTE PTR [rip+0x3c569],0x0        # 0x43e078
  401b0f:	je     0x401b20
  401b11:	mov    eax,0x1
  401b16:	add    rsp,0x1e0
  401b1d:	pop    rbx
  401b1e:	ret    
  401b1f:	nop
  401b20:	mov    ecx,DWORD PTR [rip+0x3c522]        # 0x43e048
  401b26:	test   ecx,ecx
  401b28:	jne    0x401ba2
  401b2a:	lea    rcx,[rip+0x3c50f]        # 0x43e040
  401b31:	call   0x4267a0
  401b36:	cmp    BYTE PTR [rip+0x3c53b],0x0        # 0x43e078
  401b3d:	jne    0x401b90
  401b3f:	lea    rdx,[rsp+0x40]
  401b44:	mov    ecx,0x202
  401b49:	call   QWORD PTR [rip+0x3e185]        # 0x43fcd4
  401b4f:	test   eax,eax
  401b51:	mov    ebx,eax
  401b53:	lea    rcx,[rip+0x3c4f6]        # 0x43e050
  401b5a:	sete   BYTE PTR [rip+0x3c517]        # 0x43e078
  401b61:	call   QWORD PTR [rip+0x3dde5]        # 0x43f94c
  401b67:	test   ebx,ebx
  401b69:	je     0x401b11
  401b6b:	mov    ecx,ebx
  401b6d:	call   0x421c10
  401b72:	mov    rdx,QWORD PTR [rip+0x37037]        # 0x438bb0
  401b79:	mov    edx,DWORD PTR [rdx]
  401b7b:	test   edx,edx
  401b7d:	jne    0x401bb1
  401b7f:	mov    rcx,rax
  401b82:	call   0x423150
  401b87:	xor    eax,eax
  401b89:	jmp    0x401b16
  401b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  401b90:	lea    rcx,[rip+0x3c4b9]        # 0x43e050
  401b97:	call   QWORD PTR [rip+0x3ddaf]        # 0x43f94c
  401b9d:	jmp    0x401b11
  401ba2:	lea    rcx,[rip+0x3c4a7]        # 0x43e050
  401ba9:	call   QWORD PTR [rip+0x3dd2d]        # 0x43f8dc
  401baf:	jmp    0x401b36
  401bb1:	lea    r8,[rip+0x2aec8]        # 0x42ca80
  401bb8:	lea    rcx,[rip+0x2aef3]        # 0x42cab2
  401bbf:	mov    QWORD PTR [rsp+0x20],rax
  401bc4:	mov    r9d,ebx
  401bc7:	mov    edx,0x2b02
  401bcc:	mov    QWORD PTR [rsp+0x38],rax
  401bd1:	call   0x423fa0
  401bd6:	mov    rax,QWORD PTR [rsp+0x38]
  401bdb:	jmp    0x401b7f
  401bdd:	nop    DWORD PTR [rax]
  401be0:	push   r13
  401be2:	push   r12
  401be4:	push   rbp
  401be5:	push   rdi
  401be6:	push   rsi
  401be7:	push   rbx
  401be8:	sub    rsp,0x48
  401bec:	test   rdx,rdx
  401bef:	mov    rdi,rcx
  401bf2:	mov    rsi,rdx
  401bf5:	je     0x401c54
  401bf7:	call   0x4067d0
  401bfc:	test   rax,rax
  401bff:	jne    0x401cfa
  401c05:	mov    edx,0x48
  401c0a:	mov    ecx,0x1
  401c0f:	call   0x4295c8
  401c14:	test   rax,rax
  401c17:	mov    rbx,rax
  401c1a:	je     0x401cfa
  401c20:	mov    DWORD PTR [rax+0x8],0x2
  401c27:	mov    rax,QWORD PTR [rdi+0x58]
  401c2b:	lea    rcx,[rbx+0x10]
  401c2f:	mov    QWORD PTR [rdi+0x58],rbx
  401c33:	mov    r8d,0x1e
  401c39:	mov    rdx,rsi
  401c3c:	mov    QWORD PTR [rbx],rax
  401c3f:	call   0x426c20
  401c44:	mov    rax,rbx
  401c47:	add    rsp,0x48
  401c4b:	pop    rbx
  401c4c:	pop    rsi
  401c4d:	pop    rdi
  401c4e:	pop    rbp
  401c4f:	pop    r12
  401c51:	pop    r13
  401c53:	ret    
  401c54:	mov    eax,ecx
  401c56:	mov    edx,0x4ec4ec4f
  401c5b:	mov    r12d,ecx
  401c5e:	mul    edx
  401c60:	lea    rsi,[rsp+0x20]
  401c65:	mov    ebx,0x100
  401c6a:	mov    r13d,0x38e38e39
  401c70:	shr    edx,0x3
  401c73:	imul   eax,edx,0x1a
  401c76:	mov    ebp,edx
  401c78:	sub    r12d,eax
  401c7b:	add    r12d,0x61
  401c7f:	nop
  401c80:	mov    eax,DWORD PTR [rip+0x2939a]        # 0x42b020
  401c86:	mov    BYTE PTR [rsp+0x20],r12b
  401c8b:	mov    r8d,ebp
  401c8e:	mov    ecx,0x1
  401c93:	lea    r9,[rsi+0x1]
  401c97:	add    eax,0x1
  401c9a:	movzx  eax,ax
  401c9d:	mov    DWORD PTR [rip+0x2937d],eax        # 0x42b020
  401ca3:	jmp    0x401ca8
  401ca5:	add    ecx,0x1
  401ca8:	mov    eax,r8d
  401cab:	add    r9,0x1
  401caf:	mul    r13d
  401cb2:	shr    edx,0x3
  401cb5:	lea    eax,[rdx+rdx*8]
  401cb8:	shl    eax,0x2
  401cbb:	sub    r8d,eax
  401cbe:	lea    eax,[r8+0x30]
  401cc2:	add    r8d,0x57
  401cc6:	cmp    al,0x39
  401cc8:	cmovbe r8d,eax
  401ccc:	cmp    ecx,0x5
  401ccf:	mov    BYTE PTR [r9-0x1],r8b
  401cd3:	mov    r8d,edx
  401cd6:	je     0x401d09
  401cd8:	cmp    ecx,0x9
  401cdb:	jne    0x401ca5
  401cdd:	mov    BYTE PTR [r9],0x0
  401ce1:	mov    rdx,rsi
  401ce4:	mov    rcx,rdi
  401ce7:	call   0x4067d0
  401cec:	test   rax,rax
  401cef:	je     0x401c05
  401cf5:	sub    ebx,0x1
  401cf8:	jne    0x401c80
  401cfa:	xor    eax,eax
  401cfc:	add    rsp,0x48
  401d00:	pop    rbx
  401d01:	pop    rsi
  401d02:	pop    rdi
  401d03:	pop    rbp
  401d04:	pop    r12
  401d06:	pop    r13
  401d08:	ret    
  401d09:	mov    eax,DWORD PTR [rip+0x29311]        # 0x42b020
  401d0f:	lea    eax,[rax+rax*2]
  401d12:	add    r8d,eax
  401d15:	jmp    0x401ca5
  401d17:	nop    WORD PTR [rax+rax*1+0x0]
  401d20:	push   rsi
  401d21:	push   rbx
  401d22:	sub    rsp,0x28
  401d26:	test   rcx,rcx
  401d29:	je     0x401d74
  401d2b:	movzx  eax,WORD PTR [rcx+0x8]
  401d2f:	test   ax,ax
  401d32:	je     0x401d74
  401d34:	mov    rdx,QWORD PTR [rcx]
  401d37:	sub    eax,0x1
  401d3a:	mov    rbx,rcx
  401d3d:	mov    WORD PTR [rcx+0x8],ax
  401d41:	movzx  ecx,ax
  401d44:	mov    rsi,QWORD PTR [rdx+rcx*8]
  401d48:	cmp    QWORD PTR [rsi+0x48],0x0
  401d4d:	je     0x401d61
  401d4f:	mov    rdx,QWORD PTR [rsi+0x50]
  401d53:	test   rdx,rdx
  401d56:	je     0x401d61
  401d58:	mov    rcx,rsi
  401d5b:	call   rdx
  401d5d:	movzx  eax,WORD PTR [rbx+0x8]
  401d61:	test   ax,ax
  401d64:	je     0x401d80
  401d66:	mov    rcx,rsi
  401d69:	add    rsp,0x28
  401d6d:	pop    rbx
  401d6e:	pop    rsi
  401d6f:	jmp    0x401a50
  401d74:	add    rsp,0x28
  401d78:	pop    rbx
  401d79:	pop    rsi
  401d7a:	ret    
  401d7b:	nop    DWORD PTR [rax+rax*1+0x0]
  401d80:	mov    rcx,QWORD PTR [rbx]
  401d83:	call   0x429580
  401d88:	mov    rcx,rsi
  401d8b:	mov    QWORD PTR [rbx],0x0
  401d92:	add    rsp,0x28
  401d96:	pop    rbx
  401d97:	pop    rsi
  401d98:	jmp    0x401a50
  401d9d:	nop    DWORD PTR [rax]
  401da0:	push   rsi
  401da1:	push   rbx
  401da2:	sub    rsp,0x28
  401da6:	mov    rax,QWORD PTR [rcx]
  401da9:	mov    rbx,rcx
  401dac:	call   QWORD PTR [rax+0x10]
  401daf:	cmp    QWORD PTR [rbx+0x48],0x0
  401db4:	mov    esi,eax
  401db6:	je     0x401dc6
  401db8:	mov    rax,QWORD PTR [rbx+0x50]
  401dbc:	test   rax,rax
  401dbf:	je     0x401dc6
  401dc1:	mov    rcx,rbx
  401dc4:	call   rax
  401dc6:	lea    rax,[rip+0xfffffffffffffc43]        # 0x401a10
  401dcd:	movsxd rcx,esi
  401dd0:	mov    QWORD PTR [rbx+0x50],rax
  401dd4:	call   0x429538
  401dd9:	test   rax,rax
  401ddc:	mov    QWORD PTR [rbx+0x48],rax
  401de0:	je     0x401e20
  401de2:	cmp    BYTE PTR [rbx+0x18],0x2
  401de6:	ja     0x401df0
  401de8:	add    rsp,0x28
  401dec:	pop    rbx
  401ded:	pop    rsi
  401dee:	ret    
  401def:	nop
  401df0:	mov    QWORD PTR [rax],0x0
  401df7:	mov    QWORD PTR [rax+0x8],0x0
  401dff:	mov    QWORD PTR [rax+0x10],0x0
  401e07:	mov    QWORD PTR [rax+0x18],0x0
  401e0f:	mov    QWORD PTR [rax+0x20],0x0
  401e17:	add    rsp,0x28
  401e1b:	pop    rbx
  401e1c:	pop    rsi
  401e1d:	ret    
  401e1e:	xchg   ax,ax
  401e20:	xor    eax,eax
  401e22:	jmp    0x401de8
  401e24:	xchg   ax,ax
  401e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e30:	test   rdx,rdx
  401e33:	je     0x401e71
  401e35:	mov    rax,QWORD PTR [rdx+0x10]
  401e39:	test   rax,rax
  401e3c:	je     0x401e51
  401e3e:	mov    QWORD PTR [rax+0x110],0x0
  401e49:	mov    QWORD PTR [rdx+0x10],0x0
  401e51:	mov    rax,QWORD PTR [rcx+0x110]
  401e58:	test   rax,rax
  401e5b:	je     0x401e65
  401e5d:	mov    QWORD PTR [rax+0x10],0x0
  401e65:	mov    QWORD PTR [rdx+0x10],rcx
  401e69:	mov    QWORD PTR [rcx+0x110],rdx
  401e70:	ret    
  401e71:	mov    rax,QWORD PTR [rcx+0x110]
  401e78:	test   rax,rax
  401e7b:	je     0x401e69
  401e7d:	mov    QWORD PTR [rax+0x10],0x0
  401e85:	mov    QWORD PTR [rcx+0x110],rdx
  401e8c:	ret    
  401e8d:	nop    DWORD PTR [rax]
  401e90:	test   rcx,rcx
  401e93:	je     0x401eb1
  401e95:	mov    rax,QWORD PTR [rcx+0x10]
  401e99:	test   rax,rax
  401e9c:	je     0x401eb1
  401e9e:	mov    QWORD PTR [rax+0x110],0x0
  401ea9:	mov    QWORD PTR [rcx+0x10],0x0
  401eb1:	repz ret 
  401eb3:	nop    DWORD PTR [rax]
  401eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ec0:	push   r12
  401ec2:	push   rbp
  401ec3:	push   rdi
  401ec4:	push   rsi
  401ec5:	push   rbx
  401ec6:	sub    rsp,0x20
  401eca:	movzx  edi,WORD PTR [rcx+0x8]
  401ece:	mov    r12,rcx
  401ed1:	test   edi,edi
  401ed3:	je     0x401f79
  401ed9:	lea    eax,[rdi-0x1]
  401edc:	xor    esi,esi
  401ede:	xor    ebx,ebx
  401ee0:	lea    rbp,[rax*8+0x8]
  401ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  401ef0:	mov    rax,QWORD PTR [r12]
  401ef4:	mov    rcx,QWORD PTR [rax+rsi*1]
  401ef8:	add    rsi,0x8
  401efc:	mov    rdx,QWORD PTR [rcx]
  401eff:	mov    QWORD PTR [rcx+0x50],0x0
  401f07:	call   QWORD PTR [rdx+0x10]
  401f0a:	lea    ebx,[rax+rbx*1+0x7]
  401f0e:	and    ebx,0xfffffff8
  401f11:	cmp    rsi,rbp
  401f14:	jne    0x401ef0
  401f16:	mov    DWORD PTR [r12+0x28],ebx
  401f1b:	movsxd rcx,ebx
  401f1e:	mov    edx,0x1
  401f23:	call   0x4295c8
  401f28:	test   rax,rax
  401f2b:	mov    rbp,rax
  401f2e:	mov    QWORD PTR [r12+0x18],rax
  401f33:	je     0x401fa4
  401f35:	lea    rax,[rip+0xfffffffffffffb44]        # 0x401a80
  401f3c:	xor    esi,esi
  401f3e:	xor    ebx,ebx
  401f40:	mov    QWORD PTR [r12+0x20],rax
  401f45:	mov    rax,QWORD PTR [r12]
  401f49:	mov    r8d,ebx
  401f4c:	add    r8,rbp
  401f4f:	mov    rcx,QWORD PTR [rax+rsi*8]
  401f53:	add    rsi,0x1
  401f57:	mov    rax,QWORD PTR [rcx]
  401f5a:	mov    QWORD PTR [rcx+0x48],r8
  401f5e:	call   QWORD PTR [rax+0x10]
  401f61:	lea    ebx,[rax+rbx*1+0x7]
  401f65:	and    ebx,0xfffffff8
  401f68:	cmp    edi,esi
  401f6a:	jg     0x401f45
  401f6c:	xor    eax,eax
  401f6e:	add    rsp,0x20
  401f72:	pop    rbx
  401f73:	pop    rsi
  401f74:	pop    rdi
  401f75:	pop    rbp
  401f76:	pop    r12
  401f78:	ret    
  401f79:	mov    DWORD PTR [rcx+0x28],0x0
  401f80:	mov    edx,0x1
  401f85:	xor    ecx,ecx
  401f87:	call   0x4295c8
  401f8c:	test   rax,rax
  401f8f:	mov    QWORD PTR [r12+0x18],rax
  401f94:	je     0x401fa4
  401f96:	lea    rax,[rip+0xfffffffffffffae3]        # 0x401a80
  401f9d:	mov    QWORD PTR [r12+0x20],rax
  401fa2:	jmp    0x401f6c
  401fa4:	mov    eax,0xffffffff
  401fa9:	jmp    0x401f6e
  401fab:	nop    DWORD PTR [rax+rax*1+0x0]
  401fb0:	jmp    0x401ec0
  401fb5:	nop
  401fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401fc0:	push   rsi
  401fc1:	push   rbx
  401fc2:	sub    rsp,0x28
  401fc6:	test   rcx,rcx
  401fc9:	mov    rbx,rcx
  401fcc:	mov    rsi,rdx
  401fcf:	je     0x402000
  401fd1:	test   rsi,rsi
  401fd4:	je     0x401ff0
  401fd6:	mov    rax,QWORD PTR [rbx+0x20]
  401fda:	test   rax,rax
  401fdd:	je     0x401ff0
  401fdf:	mov    rdx,rsi
  401fe2:	mov    rcx,rbx
  401fe5:	add    rsp,0x28
  401fe9:	pop    rbx
  401fea:	pop    rsi
  401feb:	rex.W jmp rax
  401fee:	xchg   ax,ax
  401ff0:	add    rsp,0x28
  401ff4:	pop    rbx
  401ff5:	pop    rsi
  401ff6:	ret    
  401ff7:	nop    WORD PTR [rax+rax*1+0x0]
  402000:	lea    rdx,[rip+0x2aaab]        # 0x42cab2
  402007:	lea    rcx,[rip+0x2aaaa]        # 0x42cab8
  40200e:	mov    r8d,0x251
  402014:	call   0x4291e0
  402019:	jmp    0x401fd1
  40201b:	nop    DWORD PTR [rax+rax*1+0x0]
  402020:	push   r12
  402022:	push   rbp
  402023:	push   rdi
  402024:	push   rsi
  402025:	push   rbx
  402026:	sub    rsp,0xb0
  40202d:	mov    eax,0x702
  402032:	lea    r12,[rcx+0xb8]
  402039:	mov    rdi,rdx
  40203c:	lea    rdx,[rip+0x2aa7e]        # 0x42cac1
  402043:	mov    BYTE PTR [rcx+0xf0],0x3
  40204a:	mov    WORD PTR [rcx+0xc],ax
  40204e:	mov    rbx,rcx
  402051:	mov    DWORD PTR [rcx+0x10],0x0
  402058:	mov    rcx,r12
  40205b:	mov    QWORD PTR [rsp+0x28],0x0
  402064:	call   0x41f8a0
  402069:	test   rax,rax
  40206c:	je     0x4021c5
  402072:	xor    edx,edx
  402074:	xor    ecx,ecx
  402076:	call   0x4294d8
  40207b:	mov    rcx,rax
  40207e:	call   QWORD PTR [rip+0x3da08]        # 0x43fa8c
  402084:	test   rax,rax
  402087:	mov    rsi,rax
  40208a:	je     0x4021c5
  402090:	lea    rbp,[rsp+0x28]
  402095:	lea    rdx,[rip+0x2aa30]        # 0x42cacc
  40209c:	mov    rcx,rax
  40209f:	mov    r8,rbp
  4020a2:	call   0x4292a0
  4020a7:	test   rax,rax
  4020aa:	je     0x402116
  4020ac:	lea    rdx,[rip+0x2aa1b]        # 0x42cace
  4020b3:	mov    r8,rbp
  4020b6:	xor    ecx,ecx
  4020b8:	call   0x4292a0
  4020bd:	test   rax,rax
  4020c0:	mov    rbp,rax
  4020c3:	je     0x402116
  4020c5:	mov    rcx,rax
  4020c8:	call   0x4295d0
  4020cd:	test   eax,eax
  4020cf:	jle    0x402102
  4020d1:	lea    rcx,[rsp+0x30]
  4020d6:	lea    rdx,[rip+0x2a9f3]        # 0x42cad0
  4020dd:	mov    r8,rbp
  4020e0:	call   0x429330
  4020e5:	test   eax,eax
  4020e7:	js     0x402102
  4020e9:	mov    rcx,rsi
  4020ec:	call   0x429580
  4020f1:	mov    rbp,QWORD PTR [rsp+0x30]
  4020f6:	test   rbp,rbp
  4020f9:	je     0x4021d5
  4020ff:	mov    rsi,rbp
  402102:	mov    rdx,rbp
  402105:	mov    rcx,r12
  402108:	call   0x41f8a0
  40210d:	test   rax,rax
  402110:	je     0x4021c5
  402116:	mov    rcx,rsi
  402119:	call   0x429580
  40211e:	test   rdi,rdi
  402121:	je     0x402154
  402123:	mov    rdx,QWORD PTR [rdi]
  402126:	test   rdx,rdx
  402129:	je     0x40213d
  40212b:	lea    rcx,[rbx+0x18]
  40212f:	call   0x41f8a0
  402134:	test   rax,rax
  402137:	je     0x4021c5
  40213d:	mov    rdx,QWORD PTR [rdi+0x8]
  402141:	test   rdx,rdx
  402144:	je     0x402154
  402146:	lea    rcx,[rbx+0x20]
  40214a:	call   0x41f8a0
  40214f:	test   rax,rax
  402152:	je     0x4021c5
  402154:	mov    rax,QWORD PTR [rbx+0x18]
  402158:	cmp    QWORD PTR [rax],0x0
  40215c:	je     0x4021b0
  40215e:	lea    rsi,[rsp+0x30]
  402163:	xor    eax,eax
  402165:	mov    ecx,0x10
  40216a:	mov    edx,0x80
  40216f:	mov    rdi,rsi
  402172:	rep stos QWORD PTR es:[rdi],rax
  402175:	mov    rcx,rsi
  402178:	call   QWORD PTR [rip+0x3db96]        # 0x43fd14
  40217e:	lea    rcx,[rbx+0x30]
  402182:	mov    rdx,rsi
  402185:	mov    BYTE PTR [rsp+0xaf],0x0
  40218d:	call   0x41f8a0
  402192:	test   rax,rax
  402195:	je     0x4021c5
  402197:	or     BYTE PTR [rbx+0xf5],0x6
  40219e:	mov    rax,rbx
  4021a1:	add    rsp,0xb0
  4021a8:	pop    rbx
  4021a9:	pop    rsi
  4021aa:	pop    rdi
  4021ab:	pop    rbp
  4021ac:	pop    r12
  4021ae:	ret    
  4021af:	nop
  4021b0:	lea    rcx,[rbx+0x18]
  4021b4:	lea    rdx,[rip+0x2a91a]        # 0x42cad5
  4021bb:	call   0x41f8a0
  4021c0:	test   rax,rax
  4021c3:	jne    0x40215e
  4021c5:	xor    eax,eax
  4021c7:	add    rsp,0xb0
  4021ce:	pop    rbx
  4021cf:	pop    rsi
  4021d0:	pop    rdi
  4021d1:	pop    rbp
  4021d2:	pop    r12
  4021d4:	ret    
  4021d5:	xor    esi,esi
  4021d7:	jmp    0x402116
  4021dc:	nop    DWORD PTR [rax+0x0]
  4021e0:	push   rsi
  4021e1:	push   rbx
  4021e2:	sub    rsp,0x38
  4021e6:	mov    edx,0xf8
  4021eb:	mov    esi,ecx
  4021ed:	mov    ecx,0x1
  4021f2:	call   0x4295c8
  4021f7:	test   rax,rax
  4021fa:	mov    rbx,rax
  4021fd:	je     0x4023d0
  402203:	or     BYTE PTR [rax+0xf5],0x4
  40220a:	or     BYTE PTR [rax+0xf4],0x80
  402211:	test   esi,esi
  402213:	mov    rax,QWORD PTR [rip+0x36956]        # 0x438b70
  40221a:	mov    QWORD PTR [rbx+0xc8],0x0
  402225:	lea    rdx,[rip+0x2a8b4]        # 0x42cae0
  40222c:	mov    QWORD PTR [rbx+0xd0],0x0
  402237:	mov    QWORD PTR [rbx],rax
  40223a:	mov    QWORD PTR [rbx+0x18],rax
  40223e:	mov    QWORD PTR [rbx+0x20],rax
  402242:	mov    QWORD PTR [rbx+0x30],rax
  402246:	mov    QWORD PTR [rbx+0x38],rax
  40224a:	mov    QWORD PTR [rbx+0x68],rax
  40224e:	mov    QWORD PTR [rbx+0x70],rax
  402252:	mov    QWORD PTR [rbx+0x78],rax
  402256:	mov    QWORD PTR [rbx+0x88],rax
  40225d:	mov    QWORD PTR [rbx+0x80],rax
  402264:	mov    QWORD PTR [rbx+0xc0],rax
  40226b:	mov    QWORD PTR [rbx+0xe0],rax
  402272:	mov    QWORD PTR [rbx+0xb8],rax
  402279:	mov    QWORD PTR [rbx+0xd8],rax
  402280:	mov    QWORD PTR [rbx+0x40],rax
  402284:	mov    QWORD PTR [rbx+0x48],rax
  402288:	mov    QWORD PTR [rbx+0x58],rax
  40228c:	mov    QWORD PTR [rbx+0x60],rax
  402290:	mov    QWORD PTR [rbx+0x50],rax
  402294:	jne    0x402395
  40229a:	mov    rcx,rbx
  40229d:	call   0x41f8a0
  4022a2:	test   rax,rax
  4022a5:	je     0x4023d9
  4022ab:	mov    BYTE PTR [rbx+0x98],0x1
  4022b2:	mov    BYTE PTR [rbx+0x99],0xe
  4022b9:	mov    rax,rbx
  4022bc:	mov    BYTE PTR [rbx+0x9a],0x0
  4022c3:	mov    BYTE PTR [rbx+0x9b],0x0
  4022ca:	mov    BYTE PTR [rbx+0x9c],0x60
  4022d1:	mov    BYTE PTR [rbx+0x9d],0x8
  4022d8:	mov    BYTE PTR [rbx+0x9e],0x81
  4022df:	mov    BYTE PTR [rbx+0x9f],0x81
  4022e6:	mov    BYTE PTR [rbx+0xa0],0xe8
  4022ed:	mov    BYTE PTR [rbx+0xa1],0xf
  4022f4:	mov    BYTE PTR [rbx+0xa2],0x6d
  4022fb:	mov    BYTE PTR [rbx+0xa3],0x7f
  402302:	mov    BYTE PTR [rbx+0xa4],0xff
  402309:	mov    BYTE PTR [rbx+0xa5],0xff
  402310:	mov    BYTE PTR [rbx+0xa6],0xff
  402317:	mov    BYTE PTR [rbx+0xa7],0xfe
  40231e:	mov    BYTE PTR [rbx+0xa8],0x2
  402325:	mov    BYTE PTR [rbx+0xa9],0xe
  40232c:	mov    BYTE PTR [rbx+0xaa],0x0
  402333:	mov    BYTE PTR [rbx+0xab],0x0
  40233a:	mov    BYTE PTR [rbx+0xac],0x0
  402341:	mov    BYTE PTR [rbx+0xad],0x0
  402348:	mov    BYTE PTR [rbx+0xae],0x0
  40234f:	mov    BYTE PTR [rbx+0xaf],0x0
  402356:	mov    BYTE PTR [rbx+0xb0],0x0
  40235d:	mov    BYTE PTR [rbx+0xb1],0x0
  402364:	mov    BYTE PTR [rbx+0xb2],0x0
  40236b:	mov    BYTE PTR [rbx+0xb3],0x2
  402372:	mov    BYTE PTR [rbx+0xb4],0x68
  402379:	mov    BYTE PTR [rbx+0xb5],0x0
  402380:	mov    BYTE PTR [rbx+0xb6],0x0
  402387:	mov    BYTE PTR [rbx+0xb7],0x0
  40238e:	add    rsp,0x38
  402392:	pop    rbx
  402393:	pop    rsi
  402394:	ret    
  402395:	lea    rcx,[rip+0x2a74b]        # 0x42cae7
  40239c:	mov    QWORD PTR [rsp+0x28],rdx
  4023a1:	call   0x429560
  4023a6:	mov    rdx,QWORD PTR [rsp+0x28]
  4023ab:	lea    rcx,[rip+0x2a73d]        # 0x42caef
  4023b2:	test   rax,rax
  4023b5:	mov    rsi,rax
  4023b8:	cmove  rsi,rdx
  4023bc:	call   0x429560
  4023c1:	mov    rdx,rax
  4023c4:	test   rax,rax
  4023c7:	cmove  rdx,rsi
  4023cb:	jmp    0x40229a
  4023d0:	xor    eax,eax
  4023d2:	add    rsp,0x38
  4023d6:	pop    rbx
  4023d7:	pop    rsi
  4023d8:	ret    
  4023d9:	mov    rcx,rbx
  4023dc:	call   0x429580
  4023e1:	xor    eax,eax
  4023e3:	jmp    0x40238e
  4023e5:	nop
  4023e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4023f0:	push   rsi
  4023f1:	push   rbx
  4023f2:	sub    rsp,0x28
  4023f6:	test   rcx,rcx
  4023f9:	je     0x4024f4
  4023ff:	lea    rsi,[rcx+0x78]
  402403:	mov    rbx,rcx
  402406:	mov    rcx,rsi
  402409:	call   0x41f7c0
  40240e:	mov    rcx,rsi
  402411:	lea    rsi,[rbx+0x80]
  402418:	call   0x41f7e0
  40241d:	mov    rcx,rsi
  402420:	call   0x41f7c0
  402425:	mov    rcx,rsi
  402428:	call   0x41f7e0
  40242d:	mov    rcx,rbx
  402430:	call   0x41f7e0
  402435:	lea    rcx,[rbx+0x18]
  402439:	call   0x41f7e0
  40243e:	lea    rcx,[rbx+0x20]
  402442:	call   0x41f7e0
  402447:	lea    rcx,[rbx+0x30]
  40244b:	call   0x41f7e0
  402450:	lea    rcx,[rbx+0x68]
  402454:	call   0x41f7e0
  402459:	lea    rcx,[rbx+0x70]
  40245d:	call   0x41f7e0
  402462:	lea    rcx,[rbx+0x88]
  402469:	call   0x41f7e0
  40246e:	lea    rcx,[rbx+0xb8]
  402475:	call   0x41f7e0
  40247a:	lea    rcx,[rbx+0x38]
  40247e:	call   0x41f7e0
  402483:	mov    rcx,QWORD PTR [rbx+0xc8]
  40248a:	test   rcx,rcx
  40248d:	je     0x402495
  40248f:	call   QWORD PTR [rip+0x3d86f]        # 0x43fd04
  402495:	lea    rcx,[rbx+0xc0]
  40249c:	call   0x41f7e0
  4024a1:	lea    rcx,[rbx+0xe0]
  4024a8:	call   0x41f7e0
  4024ad:	lea    rcx,[rbx+0xd8]
  4024b4:	call   0x41f7e0
  4024b9:	lea    rcx,[rbx+0x40]
  4024bd:	call   0x41f7e0
  4024c2:	lea    rcx,[rbx+0x48]
  4024c6:	call   0x41f7e0
  4024cb:	lea    rcx,[rbx+0x58]
  4024cf:	call   0x41f7e0
  4024d4:	lea    rcx,[rbx+0x60]
  4024d8:	call   0x41f7e0
  4024dd:	lea    rcx,[rbx+0x50]
  4024e1:	call   0x41f7e0
  4024e6:	mov    rcx,rbx
  4024e9:	add    rsp,0x28
  4024ed:	pop    rbx
  4024ee:	pop    rsi
  4024ef:	jmp    0x429580
  4024f4:	add    rsp,0x28
  4024f8:	pop    rbx
  4024f9:	pop    rsi
  4024fa:	ret    
  4024fb:	nop    DWORD PTR [rax+rax*1+0x0]
  402500:	push   rbp
  402501:	push   rdi
  402502:	push   rsi
  402503:	push   rbx
  402504:	sub    rsp,0x28
  402508:	mov    edi,edx
  40250a:	mov    rbp,rcx
  40250d:	lea    rcx,[rdi+0x14]
  402511:	call   0x429538
  402516:	test   rax,rax
  402519:	mov    rbx,rax
  40251c:	je     0x40254c
  40251e:	mov    DWORD PTR [rax+0xc],0x0
  402525:	xor    eax,eax
  402527:	test   rbp,rbp
  40252a:	mov    DWORD PTR [rbx+0x10],edi
  40252d:	mov    WORD PTR [rbx+0x8],ax
  402531:	mov    QWORD PTR [rbx],0x0
  402538:	je     0x40254c
  40253a:	lea    rcx,[rbx+0x14]
  40253e:	mov    r8,rdi
  402541:	mov    rdx,rbp
  402544:	call   0x429528
  402549:	mov    DWORD PTR [rbx+0xc],edi
  40254c:	mov    rax,rbx
  40254f:	add    rsp,0x28
  402553:	pop    rbx
  402554:	pop    rsi
  402555:	pop    rdi
  402556:	pop    rbp
  402557:	ret    
  402558:	nop    DWORD PTR [rax+rax*1+0x0]
  402560:	push   rbx
  402561:	sub    rsp,0x20
  402565:	cmp    DWORD PTR [rcx+0x10],edx
  402568:	mov    rax,rcx
  40256b:	mov    ebx,edx
  40256d:	jb     0x402575
  40256f:	add    rsp,0x20
  402573:	pop    rbx
  402574:	ret    
  402575:	mov    edx,edx
  402577:	add    rdx,0x14
  40257b:	call   0x4294e8
  402580:	test   rax,rax
  402583:	je     0x40256f
  402585:	mov    DWORD PTR [rax+0x10],ebx
  402588:	add    rsp,0x20
  40258c:	pop    rbx
  40258d:	ret    
  40258e:	xchg   ax,ax
  402590:	push   rbx
  402591:	sub    rsp,0x20
  402595:	test   rcx,rcx
  402598:	je     0x4025b0
  40259a:	nop    WORD PTR [rax+rax*1+0x0]
  4025a0:	mov    rbx,QWORD PTR [rcx]
  4025a3:	call   0x429580
  4025a8:	test   rbx,rbx
  4025ab:	mov    rcx,rbx
  4025ae:	jne    0x4025a0
  4025b0:	add    rsp,0x20
  4025b4:	pop    rbx
  4025b5:	ret    
  4025b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4025c0:	push   rdi
  4025c1:	push   rsi
  4025c2:	push   rbx
  4025c3:	sub    rsp,0x20
  4025c7:	test   rcx,rcx
  4025ca:	mov    rbx,rcx
  4025cd:	mov    rsi,rdx
  4025d0:	je     0x402640
  4025d2:	cmp    QWORD PTR [rcx+0xd8],0x0
  4025da:	je     0x402640
  4025dc:	cmp    QWORD PTR [rcx+0x108],0x0
  4025e4:	je     0x402640
  4025e6:	cmp    rsi,0x1ff
  4025ed:	mov    eax,esi
  4025ef:	ja     0x4025fb
  4025f1:	mov    eax,0x200
  4025f6:	mov    esi,0x200
  4025fb:	mov    DWORD PTR [rbx+0x30],eax
  4025fe:	mov    eax,DWORD PTR [rbx+0xe8]
  402604:	cmp    rsi,rax
  402607:	jb     0x402680
  402609:	mov    rax,QWORD PTR [rbx+0x108]
  402610:	mov    edi,esi
  402612:	add    esi,0x10
  402615:	cmp    esi,DWORD PTR [rax+0x10]
  402618:	ja     0x402660
  40261a:	lea    rdx,[rax+0x14]
  40261e:	mov    QWORD PTR [rbx+0x108],rax
  402625:	mov    rax,rbx
  402628:	mov    DWORD PTR [rbx+0xe0],edi
  40262e:	mov    QWORD PTR [rbx+0xd8],rdx
  402635:	add    rsp,0x20
  402639:	pop    rbx
  40263a:	pop    rsi
  40263b:	pop    rdi
  40263c:	ret    
  40263d:	nop    DWORD PTR [rax]
  402640:	lea    rdx,[rip+0x2a46b]        # 0x42cab2
  402647:	lea    rcx,[rip+0x2a4aa]        # 0x42caf8
  40264e:	mov    r8d,0x4fb
  402654:	call   0x4291e0
  402659:	jmp    0x4025e6
  40265b:	nop    DWORD PTR [rax+rax*1+0x0]
  402660:	mov    edx,esi
  402662:	mov    rcx,rax
  402665:	add    rdx,0x14
  402669:	call   0x4294e8
  40266e:	test   rax,rax
  402671:	je     0x402680
  402673:	mov    DWORD PTR [rax+0x10],esi
  402676:	jmp    0x40261a
  402678:	nop    DWORD PTR [rax+rax*1+0x0]
  402680:	xor    eax,eax
  402682:	add    rsp,0x20
  402686:	pop    rbx
  402687:	pop    rsi
  402688:	pop    rdi
  402689:	ret    
  40268a:	nop    WORD PTR [rax+rax*1+0x0]
  402690:	push   rbx
  402691:	sub    rsp,0x20
  402695:	test   rcx,rcx
  402698:	je     0x4026c4
  40269a:	mov    rbx,rcx
  40269d:	mov    rcx,QWORD PTR [rcx]
  4026a0:	call   0x429580
  4026a5:	mov    rcx,QWORD PTR [rbx+0x8]
  4026a9:	call   0x429580
  4026ae:	mov    rcx,QWORD PTR [rbx+0x10]
  4026b2:	call   0x429580
  4026b7:	mov    rcx,rbx
  4026ba:	add    rsp,0x20
  4026be:	pop    rbx
  4026bf:	jmp    0x429580
  4026c4:	add    rsp,0x20
  4026c8:	pop    rbx
  4026c9:	ret    
  4026ca:	nop    WORD PTR [rax+rax*1+0x0]
  4026d0:	push   rsi
  4026d1:	push   rbx
  4026d2:	sub    rsp,0x28
  4026d6:	mov    rsi,rcx
  4026d9:	call   0x401b00
  4026de:	test   eax,eax
  4026e0:	je     0x402720
  4026e2:	call   0x41f470
  4026e7:	test   rax,rax
  4026ea:	mov    rbx,rax
  4026ed:	je     0x402720
  4026ef:	mov    edx,0x28
  4026f4:	mov    ecx,0x1
  4026f9:	call   0x4295c8
  4026fe:	test   rax,rax
  402701:	je     0x402711
  402703:	mov    QWORD PTR [rax],rbx
  402706:	mov    QWORD PTR [rax+0x8],rsi
  40270a:	add    rsp,0x28
  40270e:	pop    rbx
  40270f:	pop    rsi
  402710:	ret    
  402711:	mov    rcx,rbx
  402714:	call   0x402690
  402719:	nop    DWORD PTR [rax+0x0]
  402720:	xor    eax,eax
  402722:	add    rsp,0x28
  402726:	pop    rbx
  402727:	pop    rsi
  402728:	ret    
  402729:	nop    DWORD PTR [rax+0x0]
  402730:	push   rbx
  402731:	sub    rsp,0x20
  402735:	test   rcx,rcx
  402738:	je     0x402752
  40273a:	mov    rbx,rcx
  40273d:	mov    rcx,QWORD PTR [rcx]
  402740:	call   0x402690
  402745:	mov    rcx,rbx
  402748:	add    rsp,0x20
  40274c:	pop    rbx
  40274d:	jmp    0x429580
  402752:	add    rsp,0x20
  402756:	pop    rbx
  402757:	ret    
  402758:	nop    DWORD PTR [rax+rax*1+0x0]
  402760:	sub    rsp,0x38
  402764:	mov    edx,0x18
  402769:	mov    ecx,0x1
  40276e:	call   0x4295c8
  402773:	test   rax,rax
  402776:	je     0x40277d
  402778:	add    rsp,0x38
  40277c:	ret    
  40277d:	xor    ecx,ecx
  40277f:	mov    QWORD PTR [rsp+0x28],rax
  402784:	call   0x402690
  402789:	mov    rax,QWORD PTR [rsp+0x28]
  40278e:	jmp    0x402778
  402790:	push   rbx
  402791:	sub    rsp,0x20
  402795:	test   rcx,rcx
  402798:	je     0x4027fb
  40279a:	xor    eax,eax
  40279c:	mov    rbx,rcx
  40279f:	mov    BYTE PTR [rcx+0x2a],0x0
  4027a3:	mov    WORD PTR [rcx+0x28],ax
  4027a7:	mov    DWORD PTR [rcx+0x20],0x0
  4027ae:	mov    BYTE PTR [rcx+0x2b],0x0
  4027b2:	mov    DWORD PTR [rcx+0x24],0x0
  4027b9:	mov    rcx,QWORD PTR [rcx+0x8]
  4027bd:	call   0x429580
  4027c2:	mov    rcx,QWORD PTR [rbx]
  4027c5:	mov    QWORD PTR [rbx+0x8],0x0
  4027cd:	call   0x429580
  4027d2:	mov    rcx,QWORD PTR [rbx+0x10]
  4027d6:	mov    QWORD PTR [rbx],0x0
  4027dd:	call   0x429580
  4027e2:	mov    rcx,QWORD PTR [rbx+0x18]
  4027e6:	mov    QWORD PTR [rbx+0x10],0x0
  4027ee:	call   0x429580
  4027f3:	mov    QWORD PTR [rbx+0x18],0x0
  4027fb:	add    rsp,0x20
  4027ff:	pop    rbx
  402800:	ret    
  402801:	nop    DWORD PTR [rax+rax*1+0x0]
  402806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402810:	cmp    ecx,0x4268
  402816:	mov    eax,ecx
  402818:	je     0x4028b0
  40281e:	jle    0x402871
  402820:	cmp    ecx,0x4e29
  402826:	je     0x402860
  402828:	jle    0x402850
  40282a:	cmp    ecx,0x4e33
  402830:	je     0x4028a2
  402832:	cmp    ecx,0x4e34
  402838:	je     0x402860
  40283a:	cmp    ecx,0x4e2e
  402840:	je     0x4028d0
  402846:	xor    eax,eax
  402848:	ret    
  402849:	nop    DWORD PTR [rax+0x0]
  402850:	cmp    ecx,0x4e24
  402856:	je     0x402860
  402858:	cmp    ecx,0x4e26
  40285e:	jne    0x402846
  402860:	lea    rcx,[rip+0x2a2d7]        # 0x42cb3e
  402867:	mov    rax,QWORD PTR [rip+0x3d21e]        # 0x43fa8c
  40286e:	rex.W jmp rax
  402871:	cmp    ecx,0x962
  402877:	je     0x4028c0
  402879:	lea    rcx,[rip+0x2a2a6]        # 0x42cb26
  402880:	jle    0x402892
  402882:	cmp    eax,0x963
  402887:	je     0x402867
  402889:	cmp    eax,0x964
  40288e:	je     0x402867
  402890:	jmp    0x402846
  402892:	cmp    eax,0x960
  402897:	je     0x402867
  402899:	cmp    eax,0x961
  40289e:	je     0x402867
  4028a0:	jmp    0x402846
  4028a2:	lea    rcx,[rip+0x2a289]        # 0x42cb32
  4028a9:	jmp    0x402867
  4028ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4028b0:	lea    rcx,[rip+0x2a281]        # 0x42cb38
  4028b7:	jmp    0x402867
  4028b9:	nop    DWORD PTR [rax+0x0]
  4028c0:	lea    rcx,[rip+0x2a259]        # 0x42cb20
  4028c7:	jmp    0x402867
  4028c9:	nop    DWORD PTR [rax+0x0]
  4028d0:	lea    rcx,[rip+0x2a255]        # 0x42cb2c
  4028d7:	jmp    0x402867
  4028d9:	nop    DWORD PTR [rax+0x0]
  4028e0:	push   rbx
  4028e1:	sub    rsp,0x20
  4028e5:	mov    ecx,DWORD PTR [rcx+0x4]
  4028e8:	test   ecx,ecx
  4028ea:	js     0x4029f0
  4028f0:	cmp    edx,0x235
  4028f6:	je     0x403a58
  4028fc:	jle    0x402972
  4028fe:	cmp    edx,0xf44
  402904:	je     0x403a64
  40290a:	jle    0x402a80
  402910:	cmp    edx,0x2853
  402916:	je     0x403a1c
  40291c:	jg     0x402c10
  402922:	cmp    edx,0x1873
  402928:	je     0x403a10
  40292e:	jle    0x402f10
  402934:	cmp    edx,0x1c9f
  40293a:	je     0x403ab8
  402940:	jg     0x403211
  402946:	cmp    edx,0x1901
  40294c:	je     0x403bc0
  402952:	cmp    edx,0x1b62
  402958:	je     0x403bb4
  40295e:	cmp    edx,0x1874
  402964:	jne    0x4029e0
  402966:	lea    rcx,[rip+0x2a1c5]        # 0x42cb32
  40296d:	jmp    0x402cb0
  402972:	cmp    edx,0x101
  402978:	je     0x403cbc
  40297e:	jle    0x402af0
  402984:	cmp    edx,0x20c
  40298a:	je     0x403cb0
  402990:	jg     0x402be0
  402996:	cmp    edx,0x200
  40299c:	je     0x403ca4
  4029a2:	jle    0x402f94
  4029a8:	cmp    edx,0x208
  4029ae:	je     0x403c14
  4029b4:	jg     0x403241
  4029ba:	cmp    edx,0x206
  4029c0:	je     0x403b48
  4029c6:	jg     0x403b3c
  4029cc:	cmp    edx,0x205
  4029d2:	lea    rcx,[rip+0x2a1a1]        # 0x42cb7a
  4029d9:	je     0x402cb0
  4029df:	nop
  4029e0:	xor    ebx,ebx
  4029e2:	jmp    0x402cdb
  4029e7:	nop    WORD PTR [rax+rax*1+0x0]
  4029f0:	cmp    edx,0xa42
  4029f6:	je     0x4041f3
  4029fc:	jle    0x402b60
  402a02:	cmp    edx,0x17d8
  402a08:	je     0x404457
  402a0e:	jg     0x402d30
  402a14:	cmp    edx,0xf4c
  402a1a:	je     0x40444b
  402a20:	jle    0x403140
  402a26:	cmp    edx,0x12e2
  402a2c:	je     0x404463
  402a32:	jg     0x403380
  402a38:	cmp    edx,0xf56
  402a3e:	je     0x40402b
  402a44:	jg     0x403770
  402a4a:	cmp    edx,0xf4f
  402a50:	je     0x4041db
  402a56:	jle    0x403e27
  402a5c:	cmp    edx,0xf51
  402a62:	je     0x40438b
  402a68:	cmp    edx,0xf52
  402a6e:	jne    0x4029e0
  402a74:	lea    rcx,[rip+0x2a117]        # 0x42cb92
  402a7b:	jmp    0x402cb0
  402a80:	cmp    edx,0x9de
  402a86:	je     0x403a34
  402a8c:	jg     0x402c61
  402a92:	cmp    edx,0x38f
  402a98:	je     0x403a28
  402a9e:	jle    0x402f52
  402aa4:	cmp    edx,0x6b3
  402aaa:	je     0x403ac4
  402ab0:	jg     0x403280
  402ab6:	cmp    edx,0x5e1
  402abc:	je     0x403bf0
  402ac2:	cmp    edx,0x5e4
  402ac8:	je     0x403be4
  402ace:	cmp    edx,0x4fc
  402ad4:	jne    0x4029e0
  402ada:	lea    rcx,[rip+0x2a0b1]        # 0x42cb92
  402ae1:	jmp    0x402cb0
  402ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402af0:	cmp    edx,0xe5
  402af6:	je     0x403c38
  402afc:	jg     0x402ce4
  402b02:	cmp    edx,0xc9
  402b08:	je     0x403c2c
  402b0e:	jle    0x402e10
  402b14:	cmp    edx,0xd0
  402b1a:	je     0x403af4
  402b20:	jle    0x403590
  402b26:	cmp    edx,0xdc
  402b2c:	je     0x403ae8
  402b32:	cmp    edx,0xe3
  402b38:	je     0x403adc
  402b3e:	cmp    edx,0xd5
  402b44:	jne    0x4029e0
  402b4a:	lea    rcx,[rip+0x2a005]        # 0x42cb56
  402b51:	jmp    0x402cb0
  402b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b60:	cmp    edx,0x128
  402b66:	je     0x40413f
  402b6c:	jg     0x402da0
  402b72:	cmp    edx,0xe9
  402b78:	je     0x404133
  402b7e:	jle    0x4030e0
  402b84:	cmp    edx,0xf7
  402b8a:	je     0x404253
  402b90:	jg     0x4032e0
  402b96:	cmp    edx,0xf1
  402b9c:	je     0x404127
  402ba2:	jg     0x403700
  402ba8:	cmp    edx,0xeb
  402bae:	je     0x4043af
  402bb4:	lea    rcx,[rip+0x29fad]        # 0x42cb68
  402bbb:	jl     0x402cb0
  402bc1:	cmp    edx,0xec
  402bc7:	je     0x402cb0
  402bcd:	cmp    edx,0xee
  402bd3:	je     0x402cb0
  402bd9:	xor    ebx,ebx
  402bdb:	jmp    0x402cdb
  402be0:	cmp    edx,0x222
  402be6:	je     0x403a40
  402bec:	jle    0x402ed2
  402bf2:	cmp    edx,0x226
  402bf8:	je     0x403c20
  402bfe:	jg     0x403250
  402c04:	lea    rcx,[rip+0x29f81]        # 0x42cb8c
  402c0b:	jmp    0x402cb0
  402c10:	cmp    edx,0x2b6e
  402c16:	je     0x4039a4
  402c1c:	jle    0x402e90
  402c22:	cmp    edx,0x46ab
  402c28:	je     0x403ad0
  402c2e:	jg     0x4032b0
  402c34:	cmp    edx,0x4346
  402c3a:	je     0x403a7c
  402c40:	cmp    edx,0x4347
  402c46:	je     0x403a70
  402c4c:	cmp    edx,0x2b71
  402c52:	jne    0x4029e0
  402c58:	lea    rcx,[rip+0x29ec7]        # 0x42cb26
  402c5f:	jmp    0x402cb0
  402c61:	cmp    edx,0xe15
  402c67:	je     0x4039ec
  402c6d:	jle    0x402fe0
  402c73:	cmp    edx,0xe75
  402c79:	je     0x4039f8
  402c7f:	jg     0x4031b5
  402c85:	cmp    edx,0xe17
  402c8b:	je     0x403ba8
  402c91:	jl     0x403b9c
  402c97:	cmp    edx,0xe25
  402c9d:	lea    rcx,[rip+0x29f1e]        # 0x42cbc2
  402ca4:	jne    0x4029e0
  402caa:	nop    WORD PTR [rax+rax*1+0x0]
  402cb0:	call   QWORD PTR [rip+0x3cdd6]        # 0x43fa8c
  402cb6:	test   rax,rax
  402cb9:	mov    rbx,rax
  402cbc:	je     0x402cdb
  402cbe:	lea    rdx,[rip+0x29f03]        # 0x42cbc8
  402cc5:	mov    r8d,0x3
  402ccb:	mov    rcx,rbx
  402cce:	call   0x429530
  402cd3:	test   eax,eax
  402cd5:	je     0x4031a0
  402cdb:	mov    rax,rbx
  402cde:	add    rsp,0x20
  402ce2:	pop    rbx
  402ce3:	ret    
  402ce4:	cmp    edx,0xee
  402cea:	je     0x403a4c
  402cf0:	jle    0x402e50
  402cf6:	cmp    edx,0xf7
  402cfc:	je     0x403aac
  402d02:	jg     0x4031e5
  402d08:	cmp    edx,0xf5
  402d0e:	je     0x403998
  402d14:	lea    rcx,[rip+0x29e4d]        # 0x42cb68
  402d1b:	jg     0x402cb0
  402d1d:	cmp    edx,0xf4
  402d23:	je     0x402cb0
  402d25:	xor    ebx,ebx
  402d27:	jmp    0x402cdb
  402d29:	nop    DWORD PTR [rax+0x0]
  402d30:	cmp    edx,0x3b8f
  402d36:	je     0x4043a3
  402d3c:	jle    0x403080
  402d42:	cmp    edx,0x4267
  402d48:	je     0x4042b3
  402d4e:	jg     0x4033d0
  402d54:	cmp    edx,0x3d1d
  402d5a:	je     0x404343
  402d60:	jg     0x403848
  402d66:	cmp    edx,0x3cf5
  402d6c:	je     0x4040bb
  402d72:	jle    0x403fa7
  402d78:	cmp    edx,0x3d06
  402d7e:	je     0x4040d3
  402d84:	cmp    edx,0x3d0a
  402d8a:	jne    0x4029e0
  402d90:	lea    rcx,[rip+0x29dfb]        # 0x42cb92
  402d97:	jmp    0x402cb0
  402d9c:	nop    DWORD PTR [rax+0x0]
  402da0:	cmp    edx,0x21e
  402da6:	je     0x404397
  402dac:	jle    0x403022
  402db2:	cmp    edx,0x5e1
  402db8:	je     0x40425f
  402dbe:	jg     0x403330
  402dc4:	cmp    edx,0x272
  402dca:	je     0x40405b
  402dd0:	jg     0x403736
  402dd6:	cmp    edx,0x223
  402ddc:	je     0x40410f
  402de2:	jle    0x403f8f
  402de8:	cmp    edx,0x226
  402dee:	je     0x4040a3
  402df4:	cmp    edx,0x263
  402dfa:	jne    0x4029e0
  402e00:	lea    rcx,[rip+0x29d8b]        # 0x42cb92
  402e07:	jmp    0x402cb0
  402e0c:	nop    DWORD PTR [rax+0x0]
  402e10:	cmp    edx,0x6e
  402e13:	je     0x403c5c
  402e19:	jle    0x4035c0
  402e1f:	cmp    edx,0x89
  402e25:	je     0x403c50
  402e2b:	cmp    edx,0xa8
  402e31:	je     0x403c44
  402e37:	cmp    edx,0x71
  402e3a:	jne    0x4029e0
  402e40:	lea    rcx,[rip+0x29cdf]        # 0x42cb26
  402e47:	jmp    0x402cb0
  402e4c:	nop    DWORD PTR [rax+0x0]
  402e50:	cmp    edx,0xe9
  402e56:	je     0x403a04
  402e5c:	jle    0x403560
  402e62:	cmp    edx,0xeb
  402e68:	je     0x403aa0
  402e6e:	lea    rcx,[rip+0x29cf3]        # 0x42cb68
  402e75:	jl     0x402cb0
  402e7b:	cmp    edx,0xec
  402e81:	je     0x402cb0
  402e87:	xor    ebx,ebx
  402e89:	jmp    0x402cdb
  402e8e:	xchg   ax,ax
  402e90:	cmp    edx,0x285c
  402e96:	je     0x403b24
  402e9c:	jle    0x403670
  402ea2:	cmp    edx,0x2b66
  402ea8:	je     0x403b18
  402eae:	cmp    edx,0x2b69
  402eb4:	je     0x403b0c
  402eba:	cmp    edx,0x2b0d
  402ec0:	jne    0x4029e0
  402ec6:	lea    rcx,[rip+0x29ccb]        # 0x42cb98
  402ecd:	jmp    0x402cb0
  402ed2:	cmp    edx,0x217
  402ed8:	je     0x403b84
  402ede:	jle    0x4035e0
  402ee4:	cmp    edx,0x220
  402eea:	je     0x403b78
  402ef0:	jg     0x403b6c
  402ef6:	cmp    edx,0x21e
  402efc:	lea    rcx,[rip+0x29c77]        # 0x42cb7a
  402f03:	je     0x402cb0
  402f09:	xor    ebx,ebx
  402f0b:	jmp    0x402cdb
  402f10:	cmp    edx,0x1200
  402f16:	je     0x403d10
  402f1c:	jle    0x403610
  402f22:	cmp    edx,0x17d8
  402f28:	je     0x403d04
  402f2e:	cmp    edx,0x185b
  402f34:	je     0x403cf8
  402f3a:	cmp    edx,0x1346
  402f40:	jne    0x4029e0
  402f46:	lea    rcx,[rip+0x29c6f]        # 0x42cbbc
  402f4d:	jmp    0x402cb0
  402f52:	cmp    edx,0x273
  402f58:	je     0x403c74
  402f5e:	jle    0x403640
  402f64:	cmp    edx,0x281
  402f6a:	je     0x403cd4
  402f70:	cmp    edx,0x282
  402f76:	je     0x403cc8
  402f7c:	cmp    edx,0x274
  402f82:	jne    0x4029e0
  402f88:	lea    rcx,[rip+0x29c03]        # 0x42cb92
  402f8f:	jmp    0x402cb0
  402f94:	cmp    edx,0x115
  402f9a:	je     0x40398c
  402fa0:	jle    0x4036d0
  402fa6:	cmp    edx,0x133
  402fac:	je     0x403cec
  402fb2:	cmp    edx,0x199
  402fb8:	je     0x403ce0
  402fbe:	cmp    edx,0x131
  402fc4:	jne    0x4029e0
  402fca:	lea    rcx,[rip+0x29b9d]        # 0x42cb6e
  402fd1:	jmp    0x402cb0
  402fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402fe0:	cmp    edx,0xa42
  402fe6:	je     0x403c80
  402fec:	jle    0x4036a0
  402ff2:	cmp    edx,0xafc
  402ff8:	je     0x403c98
  402ffe:	cmp    edx,0xe14
  403004:	je     0x403c8c
  40300a:	cmp    edx,0xa9a
  403010:	jne    0x4029e0
  403016:	lea    rcx,[rip+0x29b81]        # 0x42cb9e
  40301d:	jmp    0x402cb0
  403022:	cmp    edx,0x206
  403028:	je     0x4040eb
  40302e:	jle    0x403470
  403034:	cmp    edx,0x20b
  40303a:	je     0x4043bb
  403040:	jg     0x4038b4
  403046:	cmp    edx,0x208
  40304c:	lea    rcx,[rip+0x29b15]        # 0x42cb68
  403053:	je     0x402cb0
  403059:	jl     0x402cb0
  40305f:	cmp    edx,0x209
  403065:	je     0x402cb0
  40306b:	cmp    edx,0x20a
  403071:	je     0x402cb0
  403077:	xor    ebx,ebx
  403079:	jmp    0x402cdb
  40307e:	xchg   ax,ax
  403080:	cmp    edx,0x1fd9
  403086:	je     0x40414b
  40308c:	jle    0x4034c0
  403092:	cmp    edx,0x2b02
  403098:	je     0x404223
  40309e:	jg     0x4038ea
  4030a4:	cmp    edx,0x2731
  4030aa:	je     0x404097
  4030b0:	jle    0x403fef
  4030b6:	cmp    edx,0x2747
  4030bc:	je     0x4040af
  4030c2:	cmp    edx,0x2751
  4030c8:	jne    0x4029e0
  4030ce:	lea    rcx,[rip+0x29ab7]        # 0x42cb8c
  4030d5:	jmp    0x402cb0
  4030da:	nop    WORD PTR [rax+rax*1+0x0]
  4030e0:	cmp    edx,0xc9
  4030e6:	je     0x404163
  4030ec:	jle    0x403420
  4030f2:	cmp    edx,0xd5
  4030f8:	je     0x4043d3
  4030fe:	jg     0x403920
  403104:	cmp    edx,0xcf
  40310a:	je     0x4040c7
  403110:	jle    0x403fbf
  403116:	cmp    edx,0xd0
  40311c:	je     0x4040df
  403122:	cmp    edx,0xd2
  403128:	jne    0x4029e0
  40312e:	lea    rcx,[rip+0x29a3f]        # 0x42cb74
  403135:	jmp    0x402cb0
  40313a:	nop    WORD PTR [rax+rax*1+0x0]
  403140:	cmp    edx,0xe17
  403146:	je     0x40426b
  40314c:	jle    0x403510
  403152:	cmp    edx,0xe8e
  403158:	je     0x4041c3
  40315e:	jg     0x403956
  403164:	cmp    edx,0xe75
  40316a:	je     0x40435b
  403170:	jle    0x403f17
  403176:	cmp    edx,0xe78
  40317c:	je     0x404337
  403182:	cmp    edx,0xe8d
  403188:	jne    0x4029e0
  40318e:	lea    rcx,[rip+0x299f7]        # 0x42cb8c
  403195:	jmp    0x402cb0
  40319a:	nop    WORD PTR [rax+rax*1+0x0]
  4031a0:	mov    eax,0x3053
  4031a5:	mov    BYTE PTR [rbx+0x2],0x30
  4031a9:	mov    WORD PTR [rbx],ax
  4031ac:	mov    rax,rbx
  4031af:	add    rsp,0x20
  4031b3:	pop    rbx
  4031b4:	ret    
  4031b5:	cmp    edx,0xf3f
  4031bb:	je     0x4039bc
  4031c1:	cmp    edx,0xf42
  4031c7:	je     0x4039b0
  4031cd:	cmp    edx,0xf3e
  4031d3:	jne    0x4029e0
  4031d9:	lea    rcx,[rip+0x299b2]        # 0x42cb92
  4031e0:	jmp    0x402cb0
  4031e5:	cmp    edx,0xf9
  4031eb:	je     0x403bd8
  4031f1:	jl     0x403bcc
  4031f7:	cmp    edx,0x100
  4031fd:	lea    rcx,[rip+0x2996a]        # 0x42cb6e
  403204:	je     0x402cb0
  40320a:	xor    ebx,ebx
  40320c:	jmp    0x402cdb
  403211:	cmp    edx,0x251e
  403217:	je     0x403b60
  40321d:	cmp    edx,0x2842
  403223:	je     0x403b54
  403229:	cmp    edx,0x251d
  40322f:	jne    0x4029e0
  403235:	lea    rcx,[rip+0x29908]        # 0x42cb44
  40323c:	jmp    0x402cb0
  403241:	lea    rcx,[rip+0x29920]        # 0x42cb68
  403248:	jmp    0x402cb0
  40324d:	nop    DWORD PTR [rax]
  403250:	cmp    edx,0x22f
  403256:	je     0x403c08
  40325c:	cmp    edx,0x232
  403262:	je     0x403bfc
  403268:	cmp    edx,0x22e
  40326e:	jne    0x4029e0
  403274:	lea    rcx,[rip+0x298b7]        # 0x42cb32
  40327b:	jmp    0x402cb0
  403280:	cmp    edx,0x779
  403286:	je     0x403a94
  40328c:	cmp    edx,0x781
  403292:	je     0x403a88
  403298:	cmp    edx,0x6b8
  40329e:	jne    0x4029e0
  4032a4:	lea    rcx,[rip+0x29911]        # 0x42cbbc
  4032ab:	jmp    0x402cb0
  4032b0:	cmp    edx,0x47ae
  4032b6:	je     0x4039d4
  4032bc:	cmp    edx,0x47af
  4032c2:	je     0x4039c8
  4032c8:	cmp    edx,0x46c5
  4032ce:	jne    0x4029e0
  4032d4:	lea    rcx,[rip+0x298e1]        # 0x42cbbc
  4032db:	jmp    0x402cb0
  4032e0:	cmp    edx,0x106
  4032e6:	je     0x404373
  4032ec:	jg     0x4037dc
  4032f2:	cmp    edx,0xf9
  4032f8:	je     0x404247
  4032fe:	jl     0x40423b
  403304:	cmp    edx,0x100
  40330a:	lea    rcx,[rip+0x2985d]        # 0x42cb6e
  403311:	je     0x402cb0
  403317:	cmp    edx,0x101
  40331d:	je     0x402cb0
  403323:	xor    ebx,ebx
  403325:	jmp    0x402cdb
  40332a:	nop    WORD PTR [rax+rax*1+0x0]
  403330:	cmp    edx,0x9de
  403336:	je     0x404433
  40333c:	jg     0x403812
  403342:	cmp    edx,0x6ee
  403348:	je     0x4042a7
  40334e:	jle    0x403e0f
  403354:	cmp    edx,0x777
  40335a:	je     0x40446f
  403360:	cmp    edx,0x779
  403366:	jne    0x4029e0
  40336c:	lea    rcx,[rip+0x29837]        # 0x42cbaa
  403373:	jmp    0x402cb0
  403378:	nop    DWORD PTR [rax+rax*1+0x0]
  403380:	cmp    edx,0x13fc
  403386:	je     0x404313
  40338c:	jg     0x40387e
  403392:	cmp    edx,0x133d
  403398:	je     0x404103
  40339e:	jle    0x403f77
  4033a4:	cmp    edx,0x133e
  4033aa:	je     0x4042bf
  4033b0:	cmp    edx,0x1393
  4033b6:	jne    0x4029e0
  4033bc:	lea    rcx,[rip+0x29763]        # 0x42cb26
  4033c3:	jmp    0x402cb0
  4033c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4033d0:	cmp    edx,0x4991
  4033d6:	je     0x404403
  4033dc:	jg     0x4037a6
  4033e2:	cmp    edx,0x44a3
  4033e8:	je     0x40429b
  4033ee:	jle    0x403df7
  4033f4:	cmp    edx,0x4652
  4033fa:	je     0x40416f
  403400:	cmp    edx,0x4818
  403406:	jne    0x4029e0
  40340c:	lea    rcx,[rip+0x29719]        # 0x42cb2c
  403413:	jmp    0x402cb0
  403418:	nop    DWORD PTR [rax+rax*1+0x0]
  403420:	cmp    edx,0x83
  403426:	je     0x4041ff
  40342c:	jle    0x403d28
  403432:	cmp    edx,0xa8
  403438:	je     0x4041e7
  40343e:	jle    0x403e3f
  403444:	cmp    edx,0xaa
  40344a:	je     0x4040f7
  403450:	cmp    edx,0xae
  403456:	jne    0x4029e0
  40345c:	lea    rcx,[rip+0x29735]        # 0x42cb98
  403463:	jmp    0x402cb0
  403468:	nop    DWORD PTR [rax+rax*1+0x0]
  403470:	cmp    edx,0x134
  403476:	je     0x4042cb
  40347c:	jle    0x403d4f
  403482:	cmp    edx,0x200
  403488:	je     0x4041ab
  40348e:	jle    0x403eb7
  403494:	cmp    edx,0x203
  40349a:	je     0x404157
  4034a0:	cmp    edx,0x205
  4034a6:	jne    0x4029e0
  4034ac:	lea    rcx,[rip+0x296c7]        # 0x42cb7a
  4034b3:	jmp    0x402cb0
  4034b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4034c0:	cmp    edx,0x1fb2
  4034c6:	je     0x4042d7
  4034cc:	jle    0x403d7f
  4034d2:	cmp    edx,0x1fc6
  4034d8:	je     0x40441b
  4034de:	jle    0x403ee7
  4034e4:	cmp    edx,0x1fd0
  4034ea:	je     0x404277
  4034f0:	cmp    edx,0x1fd8
  4034f6:	jne    0x4029e0
  4034fc:	lea    rcx,[rip+0x2965f]        # 0x42cb62
  403503:	jmp    0x402cb0
  403508:	nop    DWORD PTR [rax+rax*1+0x0]
  403510:	cmp    edx,0xafc
  403516:	je     0x4042e3
  40351c:	jle    0x403daf
  403522:	cmp    edx,0xe14
  403528:	je     0x40401f
  40352e:	jle    0x404007
  403534:	cmp    edx,0xe15
  40353a:	je     0x40432b
  403540:	cmp    edx,0xe16
  403546:	jne    0x4029e0
  40354c:	lea    rcx,[rip+0x29615]        # 0x42cb68
  403553:	jmp    0x402cb0
  403558:	nop    DWORD PTR [rax+rax*1+0x0]
  403560:	cmp    edx,0xe6
  403566:	je     0x403b00
  40356c:	cmp    edx,0xe8
  403572:	lea    rcx,[rip+0x295ef]        # 0x42cb68
  403579:	je     0x402cb0
  40357f:	xor    ebx,ebx
  403581:	jmp    0x402cdb
  403586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403590:	cmp    edx,0xce
  403596:	je     0x403c68
  40359c:	cmp    edx,0xcf
  4035a2:	lea    rcx,[rip+0x29613]        # 0x42cbbc
  4035a9:	je     0x402cb0
  4035af:	xor    ebx,ebx
  4035b1:	jmp    0x402cdb
  4035b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4035c0:	cmp    edx,0x66
  4035c3:	je     0x403b90
  4035c9:	cmp    edx,0x6d
  4035cc:	lea    rcx,[rip+0x29583]        # 0x42cb56
  4035d3:	je     0x402cb0
  4035d9:	xor    ebx,ebx
  4035db:	jmp    0x402cdb
  4035e0:	cmp    edx,0x211
  4035e6:	je     0x403d1c
  4035ec:	cmp    edx,0x212
  4035f2:	lea    rcx,[rip+0x29593]        # 0x42cb8c
  4035f9:	je     0x402cb0
  4035ff:	xor    ebx,ebx
  403601:	jmp    0x402cdb
  403606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403610:	cmp    edx,0x11fa
  403616:	lea    rcx,[rip+0x29509]        # 0x42cb26
  40361d:	je     0x402cb0
  403623:	cmp    edx,0x11fb
  403629:	je     0x402cb0
  40362f:	xor    ebx,ebx
  403631:	jmp    0x402cdb
  403636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403640:	cmp    edx,0x247
  403646:	je     0x403b30
  40364c:	cmp    edx,0x263
  403652:	lea    rcx,[rip+0x29539]        # 0x42cb92
  403659:	je     0x402cb0
  40365f:	xor    ebx,ebx
  403661:	jmp    0x402cdb
  403666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403670:	cmp    edx,0x285a
  403676:	lea    rcx,[rip+0x294a9]        # 0x42cb26
  40367d:	je     0x402cb0
  403683:	cmp    edx,0x285b
  403689:	je     0x402cb0
  40368f:	xor    ebx,ebx
  403691:	jmp    0x402cdb
  403696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036a0:	cmp    edx,0xa29
  4036a6:	lea    rcx,[rip+0x294df]        # 0x42cb8c
  4036ad:	je     0x402cb0
  4036b3:	cmp    edx,0xa37
  4036b9:	je     0x402cb0
  4036bf:	xor    ebx,ebx
  4036c1:	jmp    0x402cdb
  4036c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036d0:	cmp    edx,0x106
  4036d6:	je     0x4039e0
  4036dc:	cmp    edx,0x111
  4036e2:	lea    rcx,[rip+0x294a3]        # 0x42cb8c
  4036e9:	je     0x402cb0
  4036ef:	xor    ebx,ebx
  4036f1:	jmp    0x402cdb
  4036f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403700:	cmp    edx,0xf4
  403706:	je     0x40408b
  40370c:	jle    0x403fd7
  403712:	cmp    edx,0xf5
  403718:	je     0x404067
  40371e:	cmp    edx,0xf6
  403724:	jne    0x4029e0
  40372a:	lea    rcx,[rip+0x29437]        # 0x42cb68
  403731:	jmp    0x402cb0
  403736:	cmp    edx,0x274
  40373c:	je     0x40404f
  403742:	jl     0x404043
  403748:	cmp    edx,0x38f
  40374e:	je     0x404037
  403754:	cmp    edx,0x3ef
  40375a:	lea    rcx,[rip+0x29407]        # 0x42cb68
  403761:	je     0x402cb0
  403767:	xor    ebx,ebx
  403769:	jmp    0x402cdb
  40376e:	xchg   ax,ax
  403770:	cmp    edx,0x1205
  403776:	je     0x4043f7
  40377c:	jle    0x403e6f
  403782:	cmp    edx,0x120a
  403788:	je     0x40440f
  40378e:	cmp    edx,0x1268
  403794:	jne    0x4029e0
  40379a:	lea    rcx,[rip+0x293eb]        # 0x42cb8c
  4037a1:	jmp    0x402cb0
  4037a6:	cmp    edx,0x5239
  4037ac:	je     0x404367
  4037b2:	jle    0x403f2f
  4037b8:	cmp    edx,0x52ae
  4037be:	je     0x40437f
  4037c4:	cmp    edx,0x5307
  4037ca:	jne    0x4029e0
  4037d0:	lea    rcx,[rip+0x293df]        # 0x42cbb6
  4037d7:	jmp    0x402cb0
  4037dc:	cmp    edx,0x111
  4037e2:	je     0x404427
  4037e8:	jle    0x403eff
  4037ee:	cmp    edx,0x115
  4037f4:	je     0x40443f
  4037fa:	cmp    edx,0x127
  403800:	jne    0x4029e0
  403806:	lea    rcx,[rip+0x29367]        # 0x42cb74
  40380d:	jmp    0x402cb0
  403812:	cmp    edx,0xa0b
  403818:	je     0x4042fb
  40381e:	jle    0x403f47
  403824:	cmp    edx,0xa29
  40382a:	je     0x40434f
  403830:	cmp    edx,0xa37
  403836:	jne    0x4029e0
  40383c:	lea    rcx,[rip+0x29349]        # 0x42cb8c
  403843:	jmp    0x402cb0
  403848:	cmp    edx,0x4215
  40384e:	je     0x404307
  403854:	jle    0x403f5f
  40385a:	cmp    edx,0x4232
  403860:	je     0x40431f
  403866:	cmp    edx,0x4236
  40386c:	jne    0x4029e0
  403872:	lea    rcx,[rip+0x292b9]        # 0x42cb32
  403879:	jmp    0x402cb0
  40387e:	cmp    edx,0x16b4
  403884:	je     0x4043eb
  40388a:	jle    0x403e57
  403890:	cmp    edx,0x1774
  403896:	je     0x4043c7
  40389c:	cmp    edx,0x17d6
  4038a2:	jne    0x4029e0
  4038a8:	lea    rcx,[rip+0x29277]        # 0x42cb26
  4038af:	jmp    0x402cb0
  4038b4:	cmp    edx,0x211
  4038ba:	je     0x404217
  4038c0:	jle    0x403e9f
  4038c6:	cmp    edx,0x212
  4038cc:	je     0x40422f
  4038d2:	cmp    edx,0x217
  4038d8:	jne    0x4029e0
  4038de:	lea    rcx,[rip+0x29295]        # 0x42cb7a
  4038e5:	jmp    0x402cb0
  4038ea:	cmp    edx,0x2b20
  4038f0:	je     0x40420b
  4038f6:	jle    0x403e87
  4038fc:	cmp    edx,0x2b25
  403902:	je     0x4043df
  403908:	cmp    edx,0x372e
  40390e:	jne    0x4029e0
  403914:	lea    rcx,[rip+0x2920b]        # 0x42cb26
  40391b:	jmp    0x402cb0
  403920:	cmp    edx,0xe5
  403926:	je     0x4041b7
  40392c:	jle    0x403ecf
  403932:	cmp    edx,0xe6
  403938:	je     0x4041cf
  40393e:	cmp    edx,0xe8
  403944:	jne    0x4029e0
  40394a:	lea    rcx,[rip+0x29217]        # 0x42cb68
  403951:	jmp    0x402cb0
  403956:	cmp    edx,0xf3f
  40395c:	je     0x4042ef
  403962:	jle    0x403ddf
  403968:	cmp    edx,0xf42
  40396e:	je     0x40411b
  403974:	cmp    edx,0xf44
  40397a:	jne    0x4029e0
  403980:	lea    rcx,[rip+0x2920b]        # 0x42cb92
  403987:	jmp    0x402cb0
  40398c:	lea    rcx,[rip+0x291ff]        # 0x42cb92
  403993:	jmp    0x402cb0
  403998:	lea    rcx,[rip+0x291e7]        # 0x42cb86
  40399f:	jmp    0x402cb0
  4039a4:	lea    rcx,[rip+0x2917b]        # 0x42cb26
  4039ab:	jmp    0x402cb0
  4039b0:	lea    rcx,[rip+0x291db]        # 0x42cb92
  4039b7:	jmp    0x402cb0
  4039bc:	lea    rcx,[rip+0x291cf]        # 0x42cb92
  4039c3:	jmp    0x402cb0
  4039c8:	lea    rcx,[rip+0x29157]        # 0x42cb26
  4039cf:	jmp    0x402cb0
  4039d4:	lea    rcx,[rip+0x2914b]        # 0x42cb26
  4039db:	jmp    0x402cb0
  4039e0:	lea    rcx,[rip+0x2913f]        # 0x42cb26
  4039e7:	jmp    0x402cb0
  4039ec:	lea    rcx,[rip+0x29199]        # 0x42cb8c
  4039f3:	jmp    0x402cb0
  4039f8:	lea    rcx,[rip+0x291a5]        # 0x42cba4
  4039ff:	jmp    0x402cb0
  403a04:	lea    rcx,[rip+0x29181]        # 0x42cb8c
  403a0b:	jmp    0x402cb0
  403a10:	lea    rcx,[rip+0x2911b]        # 0x42cb32
  403a17:	jmp    0x402cb0
  403a1c:	lea    rcx,[rip+0x29103]        # 0x42cb26
  403a23:	jmp    0x402cb0
  403a28:	lea    rcx,[rip+0x2911b]        # 0x42cb4a
  403a2f:	jmp    0x402cb0
  403a34:	lea    rcx,[rip+0x2915d]        # 0x42cb98
  403a3b:	jmp    0x402cb0
  403a40:	lea    rcx,[rip+0x29145]        # 0x42cb8c
  403a47:	jmp    0x402cb0
  403a4c:	lea    rcx,[rip+0x29115]        # 0x42cb68
  403a53:	jmp    0x402cb0
  403a58:	lea    rcx,[rip+0x290d3]        # 0x42cb32
  403a5f:	jmp    0x402cb0
  403a64:	lea    rcx,[rip+0x29127]        # 0x42cb92
  403a6b:	jmp    0x402cb0
  403a70:	lea    rcx,[rip+0x290af]        # 0x42cb26
  403a77:	jmp    0x402cb0
  403a7c:	lea    rcx,[rip+0x290a3]        # 0x42cb26
  403a83:	jmp    0x402cb0
  403a88:	lea    rcx,[rip+0x29127]        # 0x42cbb6
  403a8f:	jmp    0x402cb0
  403a94:	lea    rcx,[rip+0x2910f]        # 0x42cbaa
  403a9b:	jmp    0x402cb0
  403aa0:	lea    rcx,[rip+0x290c7]        # 0x42cb6e
  403aa7:	jmp    0x402cb0
  403aac:	lea    rcx,[rip+0x290b5]        # 0x42cb68
  403ab3:	jmp    0x402cb0
  403ab8:	lea    rcx,[rip+0x290d9]        # 0x42cb98
  403abf:	jmp    0x402cb0
  403ac4:	lea    rcx,[rip+0x29091]        # 0x42cb5c
  403acb:	jmp    0x402cb0
  403ad0:	lea    rcx,[rip+0x290d9]        # 0x42cbb0
  403ad7:	jmp    0x402cb0
  403adc:	lea    rcx,[rip+0x29085]        # 0x42cb68
  403ae3:	jmp    0x402cb0
  403ae8:	lea    rcx,[rip+0x29079]        # 0x42cb68
  403aef:	jmp    0x402cb0
  403af4:	lea    rcx,[rip+0x290a9]        # 0x42cba4
  403afb:	jmp    0x402cb0
  403b00:	lea    rcx,[rip+0x2901f]        # 0x42cb26
  403b07:	jmp    0x402cb0
  403b0c:	lea    rcx,[rip+0x29013]        # 0x42cb26
  403b13:	jmp    0x402cb0
  403b18:	lea    rcx,[rip+0x29007]        # 0x42cb26
  403b1f:	jmp    0x402cb0
  403b24:	lea    rcx,[rip+0x28ffb]        # 0x42cb26
  403b2b:	jmp    0x402cb0
  403b30:	lea    rcx,[rip+0x28ffb]        # 0x42cb32
  403b37:	jmp    0x402cb0
  403b3c:	lea    rcx,[rip+0x29025]        # 0x42cb68
  403b43:	jmp    0x402cb0
  403b48:	lea    rcx,[rip+0x2901f]        # 0x42cb6e
  403b4f:	jmp    0x402cb0
  403b54:	lea    rcx,[rip+0x28fcb]        # 0x42cb26
  403b5b:	jmp    0x402cb0
  403b60:	lea    rcx,[rip+0x28ffb]        # 0x42cb62
  403b67:	jmp    0x402cb0
  403b6c:	lea    rcx,[rip+0x29019]        # 0x42cb8c
  403b73:	jmp    0x402cb0
  403b78:	lea    rcx,[rip+0x2900d]        # 0x42cb8c
  403b7f:	jmp    0x402cb0
  403b84:	lea    rcx,[rip+0x28fef]        # 0x42cb7a
  403b8b:	jmp    0x402cb0
  403b90:	lea    rcx,[rip+0x29001]        # 0x42cb98
  403b97:	jmp    0x402cb0
  403b9c:	lea    rcx,[rip+0x28fc5]        # 0x42cb68
  403ba3:	jmp    0x402cb0
  403ba8:	lea    rcx,[rip+0x28fd1]        # 0x42cb80
  403baf:	jmp    0x402cb0
  403bb4:	lea    rcx,[rip+0x28ff5]        # 0x42cbb0
  403bbb:	jmp    0x402cb0
  403bc0:	lea    rcx,[rip+0x28fcb]        # 0x42cb92
  403bc7:	jmp    0x402cb0
  403bcc:	lea    rcx,[rip+0x28f95]        # 0x42cb68
  403bd3:	jmp    0x402cb0
  403bd8:	lea    rcx,[rip+0x28f8f]        # 0x42cb6e
  403bdf:	jmp    0x402cb0
  403be4:	lea    rcx,[rip+0x28fa1]        # 0x42cb8c
  403beb:	jmp    0x402cb0
  403bf0:	lea    rcx,[rip+0x28f95]        # 0x42cb8c
  403bf7:	jmp    0x402cb0
  403bfc:	lea    rcx,[rip+0x28f2f]        # 0x42cb32
  403c03:	jmp    0x402cb0
  403c08:	lea    rcx,[rip+0x28f23]        # 0x42cb32
  403c0f:	jmp    0x402cb0
  403c14:	lea    rcx,[rip+0x28f4d]        # 0x42cb68
  403c1b:	jmp    0x402cb0
  403c20:	lea    rcx,[rip+0x28f65]        # 0x42cb8c
  403c27:	jmp    0x402cb0
  403c2c:	lea    rcx,[rip+0x28f65]        # 0x42cb98
  403c33:	jmp    0x402cb0
  403c38:	lea    rcx,[rip+0x28ee7]        # 0x42cb26
  403c3f:	jmp    0x402cb0
  403c44:	lea    rcx,[rip+0x28f1d]        # 0x42cb68
  403c4b:	jmp    0x402cb0
  403c50:	lea    rcx,[rip+0x28f41]        # 0x42cb98
  403c57:	jmp    0x402cb0
  403c5c:	lea    rcx,[rip+0x28ef3]        # 0x42cb56
  403c63:	jmp    0x402cb0
  403c68:	lea    rcx,[rip+0x28eff]        # 0x42cb6e
  403c6f:	jmp    0x402cb0
  403c74:	lea    rcx,[rip+0x28f17]        # 0x42cb92
  403c7b:	jmp    0x402cb0
  403c80:	lea    rcx,[rip+0x28f05]        # 0x42cb8c
  403c87:	jmp    0x402cb0
  403c8c:	lea    rcx,[rip+0x28ef9]        # 0x42cb8c
  403c93:	jmp    0x402cb0
  403c98:	lea    rcx,[rip+0x28ef9]        # 0x42cb98
  403c9f:	jmp    0x402cb0
  403ca4:	lea    rcx,[rip+0x28ea5]        # 0x42cb50
  403cab:	jmp    0x402cb0
  403cb0:	lea    rcx,[rip+0x28eb1]        # 0x42cb68
  403cb7:	jmp    0x402cb0
  403cbc:	lea    rcx,[rip+0x28ed5]        # 0x42cb98
  403cc3:	jmp    0x402cb0
  403cc8:	lea    rcx,[rip+0x28ec3]        # 0x42cb92
  403ccf:	jmp    0x402cb0
  403cd4:	lea    rcx,[rip+0x28eb7]        # 0x42cb92
  403cdb:	jmp    0x402cb0
  403ce0:	lea    rcx,[rip+0x28e87]        # 0x42cb6e
  403ce7:	jmp    0x402cb0
  403cec:	lea    rcx,[rip+0x28ebd]        # 0x42cbb0
  403cf3:	jmp    0x402cb0
  403cf8:	lea    rcx,[rip+0x28e33]        # 0x42cb32
  403cff:	jmp    0x402cb0
  403d04:	lea    rcx,[rip+0x28e8d]        # 0x42cb98
  403d0b:	jmp    0x402cb0
  403d10:	lea    rcx,[rip+0x28e0f]        # 0x42cb26
  403d17:	jmp    0x402cb0
  403d1c:	lea    rcx,[rip+0x28e4b]        # 0x42cb6e
  403d23:	jmp    0x402cb0
  403d28:	cmp    edx,0x6e
  403d2b:	je     0x404187
  403d31:	cmp    edx,0x71
  403d34:	je     0x40417b
  403d3a:	cmp    edx,0x6d
  403d3d:	jne    0x4029e0
  403d43:	lea    rcx,[rip+0x28e0c]        # 0x42cb56
  403d4a:	jmp    0x402cb0
  403d4f:	cmp    edx,0x131
  403d55:	je     0x40419f
  403d5b:	cmp    edx,0x133
  403d61:	je     0x404193
  403d67:	cmp    edx,0x12a
  403d6d:	jne    0x4029e0
  403d73:	lea    rcx,[rip+0x28e00]        # 0x42cb7a
  403d7a:	jmp    0x402cb0
  403d7f:	cmp    edx,0x1f14
  403d85:	je     0x40407f
  403d8b:	cmp    edx,0x1f21
  403d91:	je     0x404073
  403d97:	cmp    edx,0x1901
  403d9d:	jne    0x4029e0
  403da3:	lea    rcx,[rip+0x28de8]        # 0x42cb92
  403daa:	jmp    0x402cb0
  403daf:	cmp    edx,0xa9a
  403db5:	je     0x40428f
  403dbb:	cmp    edx,0xac8
  403dc1:	je     0x404283
  403dc7:	cmp    edx,0xa43
  403dcd:	jne    0x4029e0
  403dd3:	lea    rcx,[rip+0x28db2]        # 0x42cb8c
  403dda:	jmp    0x402cb0
  403ddf:	cmp    edx,0xf3e
  403de5:	jne    0x4029e0
  403deb:	lea    rcx,[rip+0x28da0]        # 0x42cb92
  403df2:	jmp    0x402cb0
  403df7:	cmp    edx,0x439c
  403dfd:	jne    0x4029e0
  403e03:	lea    rcx,[rip+0x28d1c]        # 0x42cb26
  403e0a:	jmp    0x402cb0
  403e0f:	cmp    edx,0x5e4
  403e15:	jne    0x4029e0
  403e1b:	lea    rcx,[rip+0x28d6a]        # 0x42cb8c
  403e22:	jmp    0x402cb0
  403e27:	cmp    edx,0xf4e
  403e2d:	jne    0x4029e0
  403e33:	lea    rcx,[rip+0x28d58]        # 0x42cb92
  403e3a:	jmp    0x402cb0
  403e3f:	cmp    edx,0x89
  403e45:	jne    0x4029e0
  403e4b:	lea    rcx,[rip+0x28d46]        # 0x42cb98
  403e52:	jmp    0x402cb0
  403e57:	cmp    edx,0x141a
  403e5d:	jne    0x4029e0
  403e63:	lea    rcx,[rip+0x28cfe]        # 0x42cb68
  403e6a:	jmp    0x402cb0
  403e6f:	cmp    edx,0x113f
  403e75:	jne    0x4029e0
  403e7b:	lea    rcx,[rip+0x28d0a]        # 0x42cb8c
  403e82:	jmp    0x402cb0
  403e87:	cmp    edx,0x2b03
  403e8d:	jne    0x4029e0
  403e93:	lea    rcx,[rip+0x28cf2]        # 0x42cb8c
  403e9a:	jmp    0x402cb0
  403e9f:	cmp    edx,0x20c
  403ea5:	jne    0x4029e0
  403eab:	lea    rcx,[rip+0x28cb6]        # 0x42cb68
  403eb2:	jmp    0x402cb0
  403eb7:	cmp    edx,0x199
  403ebd:	jne    0x4029e0
  403ec3:	lea    rcx,[rip+0x28ca4]        # 0x42cb6e
  403eca:	jmp    0x402cb0
  403ecf:	cmp    edx,0xdc
  403ed5:	jne    0x4029e0
  403edb:	lea    rcx,[rip+0x28c86]        # 0x42cb68
  403ee2:	jmp    0x402cb0
  403ee7:	cmp    edx,0x1fb3
  403eed:	jne    0x4029e0
  403ef3:	lea    rcx,[rip+0x28c6e]        # 0x42cb68
  403efa:	jmp    0x402cb0
  403eff:	cmp    edx,0x10a
  403f05:	jne    0x4029e0
  403f0b:	lea    rcx,[rip+0x28c80]        # 0x42cb92
  403f12:	jmp    0x402cb0
  403f17:	cmp    edx,0xe25
  403f1d:	jne    0x4029e0
  403f23:	lea    rcx,[rip+0x28c98]        # 0x42cbc2
  403f2a:	jmp    0x402cb0
  403f2f:	cmp    edx,0x507c
  403f35:	jne    0x4029e0
  403f3b:	lea    rcx,[rip+0x28be4]        # 0x42cb26
  403f42:	jmp    0x402cb0
  403f47:	cmp    edx,0x9fd
  403f4d:	jne    0x4029e0
  403f53:	lea    rcx,[rip+0x28bcc]        # 0x42cb26
  403f5a:	jmp    0x402cb0
  403f5f:	cmp    edx,0x4209
  403f65:	jne    0x4029e0
  403f6b:	lea    rcx,[rip+0x28bc0]        # 0x42cb32
  403f72:	jmp    0x402cb0
  403f77:	cmp    edx,0x133c
  403f7d:	jne    0x4029e0
  403f83:	lea    rcx,[rip+0x28c32]        # 0x42cbbc
  403f8a:	jmp    0x402cb0
  403f8f:	cmp    edx,0x220
  403f95:	jne    0x4029e0
  403f9b:	lea    rcx,[rip+0x28bea]        # 0x42cb8c
  403fa2:	jmp    0x402cb0
  403fa7:	cmp    edx,0x3bdb
  403fad:	jne    0x4029e0
  403fb3:	lea    rcx,[rip+0x28bf6]        # 0x42cbb0
  403fba:	jmp    0x402cb0
  403fbf:	cmp    edx,0xce
  403fc5:	jne    0x4029e0
  403fcb:	lea    rcx,[rip+0x28b9c]        # 0x42cb6e
  403fd2:	jmp    0x402cb0
  403fd7:	cmp    edx,0xf2
  403fdd:	jne    0x4029e0
  403fe3:	lea    rcx,[rip+0x28b90]        # 0x42cb7a
  403fea:	jmp    0x402cb0
  403fef:	cmp    edx,0x213a
  403ff5:	jne    0x4029e0
  403ffb:	lea    rcx,[rip+0x28b90]        # 0x42cb92
  404002:	jmp    0x402cb0
  404007:	cmp    edx,0xc26
  40400d:	jne    0x4029e0
  404013:	lea    rcx,[rip+0x28b0c]        # 0x42cb26
  40401a:	jmp    0x402cb0
  40401f:	lea    rcx,[rip+0x28b66]        # 0x42cb8c
  404026:	jmp    0x402cb0
  40402b:	lea    rcx,[rip+0x28b60]        # 0x42cb92
  404032:	jmp    0x402cb0
  404037:	lea    rcx,[rip+0x28b0c]        # 0x42cb4a
  40403e:	jmp    0x402cb0
  404043:	lea    rcx,[rip+0x28b48]        # 0x42cb92
  40404a:	jmp    0x402cb0
  40404f:	lea    rcx,[rip+0x28b3c]        # 0x42cb92
  404056:	jmp    0x402cb0
  40405b:	lea    rcx,[rip+0x28b30]        # 0x42cb92
  404062:	jmp    0x402cb0
  404067:	lea    rcx,[rip+0x28b18]        # 0x42cb86
  40406e:	jmp    0x402cb0
  404073:	lea    rcx,[rip+0x28b18]        # 0x42cb92
  40407a:	jmp    0x402cb0
  40407f:	lea    rcx,[rip+0x28aa0]        # 0x42cb26
  404086:	jmp    0x402cb0
  40408b:	lea    rcx,[rip+0x28ad6]        # 0x42cb68
  404092:	jmp    0x402cb0
  404097:	lea    rcx,[rip+0x28b12]        # 0x42cbb0
  40409e:	jmp    0x402cb0
  4040a3:	lea    rcx,[rip+0x28ae2]        # 0x42cb8c
  4040aa:	jmp    0x402cb0
  4040af:	lea    rcx,[rip+0x28ad6]        # 0x42cb8c
  4040b6:	jmp    0x402cb0
  4040bb:	lea    rcx,[rip+0x28ae8]        # 0x42cbaa
  4040c2:	jmp    0x402cb0
  4040c7:	lea    rcx,[rip+0x28aee]        # 0x42cbbc
  4040ce:	jmp    0x402cb0
  4040d3:	lea    rcx,[rip+0x28a4c]        # 0x42cb26
  4040da:	jmp    0x402cb0
  4040df:	lea    rcx,[rip+0x28abe]        # 0x42cba4
  4040e6:	jmp    0x402cb0
  4040eb:	lea    rcx,[rip+0x28a7c]        # 0x42cb6e
  4040f2:	jmp    0x402cb0
  4040f7:	lea    rcx,[rip+0x28a9a]        # 0x42cb98
  4040fe:	jmp    0x402cb0
  404103:	lea    rcx,[rip+0x28aac]        # 0x42cbb6
  40410a:	jmp    0x402cb0
  40410f:	lea    rcx,[rip+0x28a76]        # 0x42cb8c
  404116:	jmp    0x402cb0
  40411b:	lea    rcx,[rip+0x28a70]        # 0x42cb92
  404122:	jmp    0x402cb0
  404127:	lea    rcx,[rip+0x28a46]        # 0x42cb74
  40412e:	jmp    0x402cb0
  404133:	lea    rcx,[rip+0x28a52]        # 0x42cb8c
  40413a:	jmp    0x402cb0
  40413f:	lea    rcx,[rip+0x28a34]        # 0x42cb7a
  404146:	jmp    0x402cb0
  40414b:	lea    rcx,[rip+0x289f2]        # 0x42cb44
  404152:	jmp    0x402cb0
  404157:	lea    rcx,[rip+0x28a2e]        # 0x42cb8c
  40415e:	jmp    0x402cb0
  404163:	lea    rcx,[rip+0x28a2e]        # 0x42cb98
  40416a:	jmp    0x402cb0
  40416f:	lea    rcx,[rip+0x289b0]        # 0x42cb26
  404176:	jmp    0x402cb0
  40417b:	lea    rcx,[rip+0x289a4]        # 0x42cb26
  404182:	jmp    0x402cb0
  404187:	lea    rcx,[rip+0x289c8]        # 0x42cb56
  40418e:	jmp    0x402cb0
  404193:	lea    rcx,[rip+0x28a16]        # 0x42cbb0
  40419a:	jmp    0x402cb0
  40419f:	lea    rcx,[rip+0x289c8]        # 0x42cb6e
  4041a6:	jmp    0x402cb0
  4041ab:	lea    rcx,[rip+0x2899e]        # 0x42cb50
  4041b2:	jmp    0x402cb0
  4041b7:	lea    rcx,[rip+0x28968]        # 0x42cb26
  4041be:	jmp    0x402cb0
  4041c3:	lea    rcx,[rip+0x289c2]        # 0x42cb8c
  4041ca:	jmp    0x402cb0
  4041cf:	lea    rcx,[rip+0x28950]        # 0x42cb26
  4041d6:	jmp    0x402cb0
  4041db:	lea    rcx,[rip+0x289b0]        # 0x42cb92
  4041e2:	jmp    0x402cb0
  4041e7:	lea    rcx,[rip+0x2897a]        # 0x42cb68
  4041ee:	jmp    0x402cb0
  4041f3:	lea    rcx,[rip+0x28992]        # 0x42cb8c
  4041fa:	jmp    0x402cb0
  4041ff:	lea    rcx,[rip+0x28992]        # 0x42cb98
  404206:	jmp    0x402cb0
  40420b:	lea    rcx,[rip+0x2897a]        # 0x42cb8c
  404212:	jmp    0x402cb0
  404217:	lea    rcx,[rip+0x28950]        # 0x42cb6e
  40421e:	jmp    0x402cb0
  404223:	lea    rcx,[rip+0x288fc]        # 0x42cb26
  40422a:	jmp    0x402cb0
  40422f:	lea    rcx,[rip+0x28956]        # 0x42cb8c
  404236:	jmp    0x402cb0
  40423b:	lea    rcx,[rip+0x28926]        # 0x42cb68
  404242:	jmp    0x402cb0
  404247:	lea    rcx,[rip+0x28920]        # 0x42cb6e
  40424e:	jmp    0x402cb0
  404253:	lea    rcx,[rip+0x28914]        # 0x42cb6e
  40425a:	jmp    0x402cb0
  40425f:	lea    rcx,[rip+0x28926]        # 0x42cb8c
  404266:	jmp    0x402cb0
  40426b:	lea    rcx,[rip+0x2890e]        # 0x42cb80
  404272:	jmp    0x402cb0
  404277:	lea    rcx,[rip+0x2891a]        # 0x42cb98
  40427e:	jmp    0x402cb0
  404283:	lea    rcx,[rip+0x2889c]        # 0x42cb26
  40428a:	jmp    0x402cb0
  40428f:	lea    rcx,[rip+0x28908]        # 0x42cb9e
  404296:	jmp    0x402cb0
  40429b:	lea    rcx,[rip+0x28884]        # 0x42cb26
  4042a2:	jmp    0x402cb0
  4042a7:	lea    rcx,[rip+0x288ae]        # 0x42cb5c
  4042ae:	jmp    0x402cb0
  4042b3:	lea    rcx,[rip+0x28878]        # 0x42cb32
  4042ba:	jmp    0x402cb0
  4042bf:	lea    rcx,[rip+0x288f6]        # 0x42cbbc
  4042c6:	jmp    0x402cb0
  4042cb:	lea    rcx,[rip+0x288de]        # 0x42cbb0
  4042d2:	jmp    0x402cb0
  4042d7:	lea    rcx,[rip+0x288ba]        # 0x42cb98
  4042de:	jmp    0x402cb0
  4042e3:	lea    rcx,[rip+0x288ae]        # 0x42cb98
  4042ea:	jmp    0x402cb0
  4042ef:	lea    rcx,[rip+0x2889c]        # 0x42cb92
  4042f6:	jmp    0x402cb0
  4042fb:	lea    rcx,[rip+0x28824]        # 0x42cb26
  404302:	jmp    0x402cb0
  404307:	lea    rcx,[rip+0x28824]        # 0x42cb32
  40430e:	jmp    0x402cb0
  404313:	lea    rcx,[rip+0x2880c]        # 0x42cb26
  40431a:	jmp    0x402cb0
  40431f:	lea    rcx,[rip+0x2880c]        # 0x42cb32
  404326:	jmp    0x402cb0
  40432b:	lea    rcx,[rip+0x2885a]        # 0x42cb8c
  404332:	jmp    0x402cb0
  404337:	lea    rcx,[rip+0x287e8]        # 0x42cb26
  40433e:	jmp    0x402cb0
  404343:	lea    rcx,[rip+0x28872]        # 0x42cbbc
  40434a:	jmp    0x402cb0
  40434f:	lea    rcx,[rip+0x28836]        # 0x42cb8c
  404356:	jmp    0x402cb0
  40435b:	lea    rcx,[rip+0x28842]        # 0x42cba4
  404362:	jmp    0x402cb0
  404367:	lea    rcx,[rip+0x287b8]        # 0x42cb26
  40436e:	jmp    0x402cb0
  404373:	lea    rcx,[rip+0x287ac]        # 0x42cb26
  40437a:	jmp    0x402cb0
  40437f:	lea    rcx,[rip+0x28836]        # 0x42cbbc
  404386:	jmp    0x402cb0
  40438b:	lea    rcx,[rip+0x28800]        # 0x42cb92
  404392:	jmp    0x402cb0
  404397:	lea    rcx,[rip+0x287dc]        # 0x42cb7a
  40439e:	jmp    0x402cb0
  4043a3:	lea    rcx,[rip+0x2877c]        # 0x42cb26
  4043aa:	jmp    0x402cb0
  4043af:	lea    rcx,[rip+0x287b8]        # 0x42cb6e
  4043b6:	jmp    0x402cb0
  4043bb:	lea    rcx,[rip+0x287a6]        # 0x42cb68
  4043c2:	jmp    0x402cb0
  4043c7:	lea    rcx,[rip+0x28758]        # 0x42cb26
  4043ce:	jmp    0x402cb0
  4043d3:	lea    rcx,[rip+0x2877c]        # 0x42cb56
  4043da:	jmp    0x402cb0
  4043df:	lea    rcx,[rip+0x28740]        # 0x42cb26
  4043e6:	jmp    0x402cb0
  4043eb:	lea    rcx,[rip+0x28734]        # 0x42cb26
  4043f2:	jmp    0x402cb0
  4043f7:	lea    rcx,[rip+0x28728]        # 0x42cb26
  4043fe:	jmp    0x402cb0
  404403:	lea    rcx,[rip+0x287a6]        # 0x42cbb0
  40440a:	jmp    0x402cb0
  40440f:	lea    rcx,[rip+0x28710]        # 0x42cb26
  404416:	jmp    0x402cb0
  40441b:	lea    rcx,[rip+0x2875e]        # 0x42cb80
  404422:	jmp    0x402cb0
  404427:	lea    rcx,[rip+0x2875e]        # 0x42cb8c
  40442e:	jmp    0x402cb0
  404433:	lea    rcx,[rip+0x2875e]        # 0x42cb98
  40443a:	jmp    0x402cb0
  40443f:	lea    rcx,[rip+0x2874c]        # 0x42cb92
  404446:	jmp    0x402cb0
  40444b:	lea    rcx,[rip+0x28740]        # 0x42cb92
  404452:	jmp    0x402cb0
  404457:	lea    rcx,[rip+0x2873a]        # 0x42cb98
  40445e:	jmp    0x402cb0
  404463:	lea    rcx,[rip+0x286bc]        # 0x42cb26
  40446a:	jmp    0x402cb0
  40446f:	lea    rcx,[rip+0x28746]        # 0x42cbbc
  404476:	jmp    0x402cb0
  40447b:	nop    DWORD PTR [rax+rax*1+0x0]
  404480:	push   rbx
  404481:	sub    rsp,0x20
  404485:	test   rcx,rcx
  404488:	je     0x4044a2
  40448a:	mov    rbx,rcx
  40448d:	mov    rcx,QWORD PTR [rcx]
  404490:	call   0x429580
  404495:	mov    rcx,rbx
  404498:	add    rsp,0x20
  40449c:	pop    rbx
  40449d:	jmp    0x429580
  4044a2:	add    rsp,0x20
  4044a6:	pop    rbx
  4044a7:	ret    
  4044a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4044b0:	push   rbp
  4044b1:	push   rdi
  4044b2:	push   rsi
  4044b3:	push   rbx
  4044b4:	sub    rsp,0x28
  4044b8:	test   rcx,rcx
  4044bb:	je     0x4045f0
  4044c1:	sub    DWORD PTR [rcx+0xc],0x1
  4044c5:	jne    0x4045f0
  4044cb:	mov    rax,QWORD PTR [rcx+0x10]
  4044cf:	test   rax,rax
  4044d2:	je     0x4044e7
  4044d4:	mov    QWORD PTR [rax+0x110],0x0
  4044df:	mov    QWORD PTR [rcx+0x10],0x0
  4044e7:	cmp    WORD PTR [rcx+0x8],0x0
  4044ec:	mov    rbx,rcx
  4044ef:	jne    0x404563
  4044f1:	mov    rdx,QWORD PTR [rbx+0x18]
  4044f5:	test   rdx,rdx
  4044f8:	je     0x40454a
  4044fa:	mov    rax,QWORD PTR [rbx+0x20]
  4044fe:	test   rax,rax
  404501:	je     0x404508
  404503:	mov    rcx,rbx
  404506:	call   rax
  404508:	cmp    WORD PTR [rbx+0x8],0x0
  40450d:	je     0x40454a
  40450f:	mov    rax,QWORD PTR [rbx]
  404512:	test   rax,rax
  404515:	je     0x40454a
  404517:	cmp    WORD PTR [rbx+0x8],0x0
  40451c:	je     0x404542
  40451e:	xor    edi,edi
  404520:	xor    esi,esi
  404522:	mov    rcx,QWORD PTR [rax+rdi*1]
  404526:	test   rcx,rcx
  404529:	je     0x404533
  40452b:	call   0x401a50
  404530:	mov    rax,QWORD PTR [rbx]
  404533:	movzx  edx,WORD PTR [rbx+0x8]
  404537:	add    esi,0x1
  40453a:	add    rdi,0x8
  40453e:	cmp    esi,edx
  404540:	jl     0x404522
  404542:	mov    rcx,rax
  404545:	call   0x429580
  40454a:	mov    rcx,QWORD PTR [rbx+0x30]
  40454e:	call   0x429580
  404553:	mov    rcx,rbx
  404556:	add    rsp,0x28
  40455a:	pop    rbx
  40455b:	pop    rsi
  40455c:	pop    rdi
  40455d:	pop    rbp
  40455e:	jmp    0x429580
  404563:	xor    ebp,ebp
  404565:	xor    edi,edi
  404567:	cmp    QWORD PTR [rcx],0x0
  40456b:	je     0x4044f1
  404571:	mov    rax,QWORD PTR [rbx]
  404574:	mov    rsi,QWORD PTR [rax+rbp*1]
  404578:	test   rsi,rsi
  40457b:	je     0x4045c5
  40457d:	mov    rcx,QWORD PTR [rsi+0xa8]
  404584:	test   rcx,rcx
  404587:	je     0x404599
  404589:	call   0x429580
  40458e:	mov    QWORD PTR [rsi+0xa8],0x0
  404599:	mov    rcx,QWORD PTR [rsi+0x98]
  4045a0:	call   0x404480
  4045a5:	cmp    QWORD PTR [rsi+0x48],0x0
  4045aa:	mov    QWORD PTR [rsi+0x98],0x0
  4045b5:	je     0x4045c5
  4045b7:	mov    rax,QWORD PTR [rsi+0x50]
  4045bb:	test   rax,rax
  4045be:	je     0x4045c5
  4045c0:	mov    rcx,rsi
  4045c3:	call   rax
  4045c5:	movzx  eax,WORD PTR [rbx+0x8]
  4045c9:	add    edi,0x1
  4045cc:	add    rbp,0x8
  4045d0:	cmp    edi,eax
  4045d2:	jl     0x404571
  4045d4:	mov    rdx,QWORD PTR [rbx+0x18]
  4045d8:	test   rdx,rdx
  4045db:	jne    0x4044fa
  4045e1:	jmp    0x404508
  4045e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4045f0:	add    rsp,0x28
  4045f4:	pop    rbx
  4045f5:	pop    rsi
  4045f6:	pop    rdi
  4045f7:	pop    rbp
  4045f8:	ret    
  4045f9:	nop    DWORD PTR [rax+0x0]
  404600:	push   r12
  404602:	push   rbp
  404603:	push   rdi
  404604:	push   rsi
  404605:	push   rbx
  404606:	sub    rsp,0x20
  40460a:	mov    edx,0x40
  40460f:	mov    r12d,ecx
  404612:	mov    ecx,0x1
  404617:	call   0x4295c8
  40461c:	test   rax,rax
  40461f:	mov    rdi,rax
  404622:	je     0x40469c
  404624:	test   r12w,r12w
  404628:	mov    DWORD PTR [rax+0xc],0x1
  40462f:	jne    0x404650
  404631:	mov    rax,rdi
  404634:	mov    WORD PTR [rdi+0x8],r12w
  404639:	mov    DWORD PTR [rdi+0x28],0x0
  404640:	add    rsp,0x20
  404644:	pop    rbx
  404645:	pop    rsi
  404646:	pop    rdi
  404647:	pop    rbp
  404648:	pop    r12
  40464a:	ret    
  40464b:	nop    DWORD PTR [rax+rax*1+0x0]
  404650:	movzx  ecx,r12w
  404654:	mov    edx,0x8
  404659:	call   0x4295c8
  40465e:	test   rax,rax
  404661:	mov    QWORD PTR [rdi],rax
  404664:	je     0x40469c
  404666:	lea    ebp,[r12-0x1]
  40466b:	mov    rbx,rax
  40466e:	xor    esi,esi
  404670:	movzx  ebp,bp
  404673:	shl    rbp,0x3
  404677:	jmp    0x40468c
  404679:	nop    DWORD PTR [rax+0x0]
  404680:	cmp    rsi,rbp
  404683:	je     0x404631
  404685:	mov    rbx,QWORD PTR [rdi]
  404688:	add    rsi,0x8
  40468c:	add    rbx,rsi
  40468f:	call   0x4019e0
  404694:	test   rax,rax
  404697:	mov    QWORD PTR [rbx],rax
  40469a:	jne    0x404680
  40469c:	mov    rcx,rdi
  40469f:	call   0x4044b0
  4046a4:	xor    eax,eax
  4046a6:	add    rsp,0x20
  4046aa:	pop    rbx
  4046ab:	pop    rsi
  4046ac:	pop    rdi
  4046ad:	pop    rbp
  4046ae:	pop    r12
  4046b0:	ret    
  4046b1:	nop    DWORD PTR [rax+rax*1+0x0]
  4046b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4046c0:	jmp    0x4044b0
  4046c5:	nop
  4046c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4046d0:	push   rbx
  4046d1:	sub    rsp,0x20
  4046d5:	mov    rax,rcx
  4046d8:	mov    rcx,QWORD PTR [rcx+0x38]
  4046dc:	test   rcx,rcx
  4046df:	je     0x4046f1
  4046e1:	mov    rbx,rax
  4046e4:	call   0x4044b0
  4046e9:	mov    QWORD PTR [rbx+0x38],0x0
  4046f1:	add    rsp,0x20
  4046f5:	pop    rbx
  4046f6:	ret    
  4046f7:	nop    WORD PTR [rax+rax*1+0x0]
  404700:	push   rbx
  404701:	sub    rsp,0x20
  404705:	mov    rbx,QWORD PTR [rcx]
  404708:	mov    QWORD PTR [rcx],0x0
  40470f:	test   rbx,rbx
  404712:	je     0x404721
  404714:	mov    eax,DWORD PTR [rbx+0x8]
  404717:	sub    eax,0x1
  40471a:	test   eax,eax
  40471c:	mov    DWORD PTR [rbx+0x8],eax
  40471f:	jle    0x404730
  404721:	add    rsp,0x20
  404725:	pop    rbx
  404726:	ret    
  404727:	nop    WORD PTR [rax+rax*1+0x0]
  404730:	mov    rcx,QWORD PTR [rbx+0x30]
  404734:	test   rcx,rcx
  404737:	je     0x404755
  404739:	mov    rax,QWORD PTR [rcx+0x10]
  40473d:	test   rax,rax
  404740:	je     0x404755
  404742:	mov    QWORD PTR [rax+0x110],0x0
  40474d:	mov    QWORD PTR [rcx+0x10],0x0
  404755:	call   0x4044b0
  40475a:	mov    rcx,QWORD PTR [rbx+0x38]
  40475e:	test   rcx,rcx
  404761:	je     0x404770
  404763:	call   0x4044b0
  404768:	mov    QWORD PTR [rbx+0x38],0x0
  404770:	mov    rcx,QWORD PTR [rbx+0x40]
  404774:	call   0x429580
  404779:	mov    rcx,rbx
  40477c:	add    rsp,0x20
  404780:	pop    rbx
  404781:	jmp    0x429580
  404786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404790:	push   rsi
  404791:	push   rbx
  404792:	sub    rsp,0x28
  404796:	mov    rbx,QWORD PTR [rip+0x34413]        # 0x438bb0
  40479d:	mov    rsi,rcx
  4047a0:	mov    QWORD PTR [rsp+0x48],rdx
  4047a5:	mov    ecx,DWORD PTR [rbx]
  4047a7:	test   ecx,ecx
  4047a9:	jne    0x40482b
  4047af:	mov    rax,QWORD PTR [rsi+0x58]
  4047b3:	mov    r9,QWORD PTR [rsp+0x48]
  4047b8:	cmp    r9,rax
  4047bb:	jne    0x4047cb
  4047bd:	jmp    0x4047f4
  4047bf:	nop
  4047c0:	mov    rdx,QWORD PTR [rax]
  4047c3:	cmp    r9,rdx
  4047c6:	je     0x404800
  4047c8:	mov    rax,rdx
  4047cb:	test   rax,rax
  4047ce:	jne    0x4047c0
  4047d0:	mov    eax,DWORD PTR [rbx]
  4047d2:	test   eax,eax
  4047d4:	je     0x404824
  4047d6:	lea    r8,[rip+0x2842b]        # 0x42cc08
  4047dd:	lea    rcx,[rip+0x282ce]        # 0x42cab2
  4047e4:	add    r9,0x10
  4047e8:	mov    edx,0xe07
  4047ed:	call   0x423fa0
  4047f2:	jmp    0x404824
  4047f4:	lea    rax,[rsi+0x58]
  4047f8:	nop    DWORD PTR [rax+rax*1+0x0]
  404800:	mov    rdx,QWORD PTR [r9]
  404803:	lea    rcx,[rsp+0x48]
  404808:	mov    QWORD PTR [rax],rdx
  40480b:	mov    rax,QWORD PTR [rsp+0x48]
  404810:	mov    QWORD PTR [rax],0x0
  404817:	mov    DWORD PTR [rax+0xc],0x0
  40481e:	call   0x404700
  404823:	nop
  404824:	add    rsp,0x28
  404828:	pop    rbx
  404829:	pop    rsi
  40482a:	ret    
  40482b:	mov    r9,rdx
  40482e:	lea    r8,[rip+0x2839b]        # 0x42cbd0
  404835:	lea    rcx,[rip+0x28276]        # 0x42cab2
  40483c:	add    r9,0x10
  404840:	mov    edx,0xdb7
  404845:	call   0x423fa0
  40484a:	jmp    0x4047af
  40484f:	nop
  404850:	push   rbp
  404851:	push   rdi
  404852:	push   rsi
  404853:	push   rbx
  404854:	sub    rsp,0x28
  404858:	mov    rax,QWORD PTR [rip+0x34351]        # 0x438bb0
  40485f:	mov    rdi,rcx
  404862:	mov    eax,DWORD PTR [rax]
  404864:	test   eax,eax
  404866:	jne    0x40499d
  40486c:	mov    rcx,QWORD PTR [rdi+0x118]
  404873:	test   rcx,rcx
  404876:	je     0x404894
  404878:	mov    rax,QWORD PTR [rcx+0x10]
  40487c:	test   rax,rax
  40487f:	je     0x404894
  404881:	mov    QWORD PTR [rax+0x110],0x0
  40488c:	mov    QWORD PTR [rcx+0x10],0x0
  404894:	call   0x4044b0
  404899:	mov    rcx,QWORD PTR [rdi+0x130]
  4048a0:	mov    QWORD PTR [rdi+0x118],0x0
  4048ab:	test   rcx,rcx
  4048ae:	je     0x4048cc
  4048b0:	mov    rax,QWORD PTR [rcx+0x10]
  4048b4:	test   rax,rax
  4048b7:	je     0x4048cc
  4048b9:	mov    QWORD PTR [rax+0x110],0x0
  4048c4:	mov    QWORD PTR [rcx+0x10],0x0
  4048cc:	call   0x4044b0
  4048d1:	mov    eax,DWORD PTR [rdi+0x120]
  4048d7:	mov    rsi,QWORD PTR [rdi+0x128]
  4048de:	mov    QWORD PTR [rdi+0x130],0x0
  4048e9:	mov    QWORD PTR [rdi+0x128],0x0
  4048f4:	mov    DWORD PTR [rdi+0x120],0x0
  4048fe:	test   eax,eax
  404900:	je     0x404952
  404902:	sub    eax,0x1
  404905:	mov    rbx,rsi
  404908:	lea    rbp,[rsi+rax*8+0x8]
  40490d:	nop    DWORD PTR [rax]
  404910:	test   rsi,rsi
  404913:	je     0x404941
  404915:	mov    rcx,QWORD PTR [rbx]
  404918:	test   rcx,rcx
  40491b:	je     0x404941
  40491d:	mov    rdx,QWORD PTR [rcx+0x10]
  404921:	test   rdx,rdx
  404924:	je     0x40493c
  404926:	mov    QWORD PTR [rdx+0x110],0x0
  404931:	mov    QWORD PTR [rcx+0x10],0x0
  404939:	mov    rcx,QWORD PTR [rbx]
  40493c:	call   0x4044b0
  404941:	add    rbx,0x8
  404945:	cmp    rbx,rbp
  404948:	jne    0x404910
  40494a:	mov    rcx,rsi
  40494d:	call   0x429580
  404952:	mov    rax,QWORD PTR [rdi+0x160]
  404959:	mov    BYTE PTR [rdi+0x141],0x0
  404960:	mov    DWORD PTR [rdi+0x144],0x0
  40496a:	test   rax,rax
  40496d:	je     0x404994
  40496f:	mov    rax,QWORD PTR [rax+0x30]
  404973:	test   rax,rax
  404976:	je     0x404994
  404978:	mov    rdx,QWORD PTR [rax+0x10]
  40497c:	test   rdx,rdx
  40497f:	je     0x404994
  404981:	mov    QWORD PTR [rdx+0x110],0x0
  40498c:	mov    QWORD PTR [rax+0x10],0x0
  404994:	add    rsp,0x28
  404998:	pop    rbx
  404999:	pop    rsi
  40499a:	pop    rdi
  40499b:	pop    rbp
  40499c:	ret    
  40499d:	lea    r8,[rip+0x28293]        # 0x42cc37
  4049a4:	lea    rcx,[rip+0x28107]        # 0x42cab2
  4049ab:	mov    edx,0x2847
  4049b0:	call   0x423fa0
  4049b5:	jmp    0x40486c
  4049ba:	nop    WORD PTR [rax+rax*1+0x0]
  4049c0:	push   rsi
  4049c1:	push   rbx
  4049c2:	sub    rsp,0x28
  4049c6:	mov    rbx,QWORD PTR [rcx]
  4049c9:	mov    QWORD PTR [rcx],0x0
  4049d0:	test   rbx,rbx
  4049d3:	je     0x4049e2
  4049d5:	mov    eax,DWORD PTR [rbx+0x8]
  4049d8:	sub    eax,0x1
  4049db:	test   eax,eax
  4049dd:	mov    DWORD PTR [rbx+0x8],eax
  4049e0:	jle    0x4049f0
  4049e2:	add    rsp,0x28
  4049e6:	pop    rbx
  4049e7:	pop    rsi
  4049e8:	ret    
  4049e9:	nop    DWORD PTR [rax+0x0]
  4049f0:	mov    rsi,QWORD PTR [rip+0x341b9]        # 0x438bb0
  4049f7:	mov    r10d,DWORD PTR [rsi]
  4049fa:	test   r10d,r10d
  4049fd:	jne    0x404a70
  4049ff:	mov    rcx,QWORD PTR [rbx+0x48]
  404a03:	test   rcx,rcx
  404a06:	je     0x404a24
  404a08:	mov    rax,QWORD PTR [rcx+0x10]
  404a0c:	test   rax,rax
  404a0f:	je     0x404a24
  404a11:	mov    QWORD PTR [rax+0x110],0x0
  404a1c:	mov    QWORD PTR [rcx+0x10],0x0
  404a24:	call   0x4044b0
  404a29:	mov    rcx,QWORD PTR [rbx+0x10]
  404a2d:	test   rcx,rcx
  404a30:	je     0x404a43
  404a32:	mov    r8d,DWORD PTR [rsi]
  404a35:	test   r8d,r8d
  404a38:	jne    0x404ad3
  404a3e:	call   0x429580
  404a43:	mov    rcx,QWORD PTR [rbx+0x20]
  404a47:	test   rcx,rcx
  404a4a:	je     0x404a5b
  404a4c:	mov    edx,DWORD PTR [rsi]
  404a4e:	test   edx,edx
  404a50:	jne    0x404af4
  404a56:	call   0x429580
  404a5b:	mov    eax,DWORD PTR [rsi]
  404a5d:	test   eax,eax
  404a5f:	jne    0x404ab5
  404a61:	mov    rcx,rbx
  404a64:	add    rsp,0x28
  404a68:	pop    rbx
  404a69:	pop    rsi
  404a6a:	jmp    0x429580
  404a6f:	nop
  404a70:	mov    r9d,DWORD PTR [rbx+0x18]
  404a74:	lea    r8,[rip+0x281d5]        # 0x42cc50
  404a7b:	lea    rcx,[rip+0x28030]        # 0x42cab2
  404a82:	mov    edx,0x3a77
  404a87:	call   0x423fa0
  404a8c:	mov    r9d,DWORD PTR [rsi]
  404a8f:	test   r9d,r9d
  404a92:	je     0x4049ff
  404a98:	lea    r8,[rip+0x281e1]        # 0x42cc80
  404a9f:	lea    rcx,[rip+0x2800c]        # 0x42cab2
  404aa6:	mov    edx,0x3a97
  404aab:	call   0x423fa0
  404ab0:	jmp    0x4049ff
  404ab5:	mov    r9d,DWORD PTR [rbx+0x18]
  404ab9:	lea    r8,[rip+0x28250]        # 0x42cd10
  404ac0:	lea    rcx,[rip+0x27feb]        # 0x42cab2
  404ac7:	mov    edx,0x3b77
  404acc:	call   0x423fa0
  404ad1:	jmp    0x404a61
  404ad3:	lea    rcx,[rip+0x27fd8]        # 0x42cab2
  404ada:	lea    r8,[rip+0x281cf]        # 0x42ccb0
  404ae1:	mov    edx,0x3ae7
  404ae6:	call   0x423fa0
  404aeb:	mov    rcx,QWORD PTR [rbx+0x10]
  404aef:	jmp    0x404a3e
  404af4:	lea    rcx,[rip+0x27fb7]        # 0x42cab2
  404afb:	lea    r8,[rip+0x281de]        # 0x42cce0
  404b02:	mov    edx,0x3b37
  404b07:	call   0x423fa0
  404b0c:	mov    rcx,QWORD PTR [rbx+0x20]
  404b10:	jmp    0x404a56
  404b15:	nop
  404b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b20:	push   r13
  404b22:	push   r12
  404b24:	push   rbp
  404b25:	push   rdi
  404b26:	push   rsi
  404b27:	push   rbx
  404b28:	sub    rsp,0x38
  404b2c:	mov    edi,DWORD PTR [rsp+0x90]
  404b33:	mov    rbp,rcx
  404b36:	mov    r12,rdx
  404b39:	mov    ecx,0x1
  404b3e:	mov    edx,0x58
  404b43:	mov    esi,r8d
  404b46:	mov    r13,r9
  404b49:	call   0x4295c8
  404b4e:	test   rax,rax
  404b51:	mov    rbx,rax
  404b54:	mov    QWORD PTR [rsp+0x28],rax
  404b59:	je     0x404c00
  404b5f:	mov    DWORD PTR [rax+0x8],0x1
  404b66:	mov    DWORD PTR [rax+0x50],0x1
  404b6d:	mov    edx,0x1
  404b72:	mov    DWORD PTR [rax+0x54],0x4
  404b79:	lea    eax,[rsi+0x1]
  404b7c:	movsxd rcx,eax
  404b7f:	call   0x4295c8
  404b84:	test   rax,rax
  404b87:	mov    QWORD PTR [rbx+0x10],rax
  404b8b:	je     0x404c00
  404b8d:	movsxd r8,esi
  404b90:	mov    rdx,r12
  404b93:	mov    rcx,rax
  404b96:	call   0x429528
  404b9b:	lea    ecx,[rdi+0x1]
  404b9e:	mov    edx,0x1
  404ba3:	movsxd rcx,ecx
  404ba6:	call   0x4295c8
  404bab:	test   rax,rax
  404bae:	mov    QWORD PTR [rbx+0x20],rax
  404bb2:	je     0x404c00
  404bb4:	movsxd r8,edi
  404bb7:	mov    rdx,r13
  404bba:	mov    rcx,rax
  404bbd:	call   0x429528
  404bc2:	mov    rax,QWORD PTR [rbp+0x50]
  404bc6:	test   rax,rax
  404bc9:	jne    0x404bd3
  404bcb:	jmp    0x404bf5
  404bcd:	nop    DWORD PTR [rax]
  404bd0:	mov    rax,rdx
  404bd3:	mov    rdx,QWORD PTR [rax]
  404bd6:	test   rdx,rdx
  404bd9:	jne    0x404bd0
  404bdb:	mov    QWORD PTR [rax],rbx
  404bde:	mov    rax,rbx
  404be1:	mov    DWORD PTR [rbx+0x8],0x2
  404be8:	add    rsp,0x38
  404bec:	pop    rbx
  404bed:	pop    rsi
  404bee:	pop    rdi
  404bef:	pop    rbp
  404bf0:	pop    r12
  404bf2:	pop    r13
  404bf4:	ret    
  404bf5:	mov    QWORD PTR [rbp+0x50],rbx
  404bf9:	jmp    0x404bde
  404bfb:	nop    DWORD PTR [rax+rax*1+0x0]
  404c00:	lea    rcx,[rsp+0x28]
  404c05:	call   0x4049c0
  404c0a:	xor    eax,eax
  404c0c:	add    rsp,0x38
  404c10:	pop    rbx
  404c11:	pop    rsi
  404c12:	pop    rdi
  404c13:	pop    rbp
  404c14:	pop    r12
  404c16:	pop    r13
  404c18:	ret    
  404c19:	nop    DWORD PTR [rax+0x0]
  404c20:	push   rsi
  404c21:	push   rbx
  404c22:	sub    rsp,0x28
  404c26:	mov    rbx,QWORD PTR [rip+0x33f83]        # 0x438bb0
  404c2d:	mov    rsi,rcx
  404c30:	mov    QWORD PTR [rsp+0x48],rdx
  404c35:	mov    ecx,DWORD PTR [rbx]
  404c37:	test   ecx,ecx
  404c39:	jne    0x404cb4
  404c3b:	mov    rax,QWORD PTR [rsi+0x50]
  404c3f:	mov    r8,QWORD PTR [rsp+0x48]
  404c44:	cmp    rax,r8
  404c47:	jne    0x404c5b
  404c49:	jmp    0x404c84
  404c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  404c50:	mov    rdx,QWORD PTR [rax]
  404c53:	cmp    rdx,r8
  404c56:	je     0x404c90
  404c58:	mov    rax,rdx
  404c5b:	test   rax,rax
  404c5e:	jne    0x404c50
  404c60:	mov    eax,DWORD PTR [rbx]
  404c62:	test   eax,eax
  404c64:	je     0x404cad
  404c66:	mov    r9d,DWORD PTR [r8+0x18]
  404c6a:	lea    rcx,[rip+0x27e41]        # 0x42cab2
  404c71:	lea    r8,[rip+0x28100]        # 0x42cd78
  404c78:	mov    edx,0x38d7
  404c7d:	call   0x423fa0
  404c82:	jmp    0x404cad
  404c84:	lea    rax,[rsi+0x50]
  404c88:	nop    DWORD PTR [rax+rax*1+0x0]
  404c90:	mov    rdx,QWORD PTR [r8]
  404c93:	lea    rcx,[rsp+0x48]
  404c98:	mov    QWORD PTR [rax],rdx
  404c9b:	mov    rax,QWORD PTR [rsp+0x48]
  404ca0:	mov    QWORD PTR [rax],0x0
  404ca7:	call   0x4049c0
  404cac:	nop
  404cad:	add    rsp,0x28
  404cb1:	pop    rbx
  404cb2:	pop    rsi
  404cb3:	ret    
  404cb4:	mov    r9d,DWORD PTR [rdx+0x18]
  404cb8:	lea    r8,[rip+0x28081]        # 0x42cd40
  404cbf:	lea    rcx,[rip+0x27dec]        # 0x42cab2
  404cc6:	mov    edx,0x3887
  404ccb:	call   0x423fa0
  404cd0:	jmp    0x404c3b
  404cd5:	nop
  404cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ce0:	push   rsi
  404ce1:	push   rbx
  404ce2:	sub    rsp,0x28
  404ce6:	test   rcx,rcx
  404ce9:	je     0x404e50
  404cef:	mov    rbx,rcx
  404cf2:	lea    rcx,[rcx+0x160]
  404cf9:	call   0x404700
  404cfe:	lea    rcx,[rbx+0x138]
  404d05:	call   0x4049c0
  404d0a:	mov    rax,QWORD PTR [rbx+0x110]
  404d11:	test   rax,rax
  404d14:	je     0x404d32
  404d16:	mov    rdx,QWORD PTR [rax+0x10]
  404d1a:	test   rdx,rdx
  404d1d:	je     0x404d32
  404d1f:	mov    QWORD PTR [rdx+0x110],0x0
  404d2a:	mov    QWORD PTR [rax+0x10],0x0
  404d32:	mov    rcx,rbx
  404d35:	call   0x404850
  404d3a:	mov    rax,QWORD PTR [rbx+0xc0]
  404d41:	test   rax,rax
  404d44:	je     0x404d4f
  404d46:	mov    rdx,rax
  404d49:	mov    rcx,rbx
  404d4c:	call   QWORD PTR [rax+0x10]
  404d4f:	mov    rdx,QWORD PTR [rbx+0x58]
  404d53:	mov    QWORD PTR [rbx+0xc0],0x0
  404d5e:	test   rdx,rdx
  404d61:	je     0x404d88
  404d63:	mov    rcx,rbx
  404d66:	call   0x404790
  404d6b:	mov    rdx,QWORD PTR [rbx+0x58]
  404d6f:	test   rdx,rdx
  404d72:	jne    0x404d63
  404d74:	mov    rdx,QWORD PTR [rbx+0x50]
  404d78:	test   rdx,rdx
  404d7b:	je     0x404d91
  404d7d:	nop    DWORD PTR [rax]
  404d80:	mov    rcx,rbx
  404d83:	call   0x404c20
  404d88:	mov    rdx,QWORD PTR [rbx+0x50]
  404d8c:	test   rdx,rdx
  404d8f:	jne    0x404d80
  404d91:	mov    rcx,rbx
  404d94:	call   0x4238f0
  404d99:	mov    rcx,rbx
  404d9c:	call   0x421b00
  404da1:	lea    rcx,[rbx+0x18]
  404da5:	call   0x421b90
  404daa:	mov    rcx,rbx
  404dad:	call   0x41e980
  404db2:	mov    rcx,QWORD PTR [rbx+0x8]
  404db6:	call   0x429580
  404dbb:	mov    rcx,QWORD PTR [rbx+0xc8]
  404dc2:	call   0x429580
  404dc7:	mov    rcx,QWORD PTR [rbx+0x38]
  404dcb:	test   rcx,rcx
  404dce:	je     0x404ddd
  404dd0:	call   0x429580
  404dd5:	mov    QWORD PTR [rbx+0x38],0x0
  404ddd:	mov    rcx,QWORD PTR [rbx+0x40]
  404de1:	test   rcx,rcx
  404de4:	je     0x404df3
  404de6:	call   0x429580
  404deb:	mov    QWORD PTR [rbx+0x40],0x0
  404df3:	mov    rcx,QWORD PTR [rbx+0x48]
  404df7:	test   rcx,rcx
  404dfa:	je     0x404e09
  404dfc:	call   0x429580
  404e01:	mov    QWORD PTR [rbx+0x48],0x0
  404e09:	mov    rcx,QWORD PTR [rbx+0x100]
  404e10:	test   rcx,rcx
  404e13:	je     0x404e25
  404e15:	mov    rsi,QWORD PTR [rcx]
  404e18:	call   0x429580
  404e1d:	test   rsi,rsi
  404e20:	mov    rcx,rsi
  404e23:	jne    0x404e15
  404e25:	mov    rcx,QWORD PTR [rbx+0x108]
  404e2c:	test   rcx,rcx
  404e2f:	je     0x404e41
  404e31:	mov    rsi,QWORD PTR [rcx]
  404e34:	call   0x429580
  404e39:	test   rsi,rsi
  404e3c:	mov    rcx,rsi
  404e3f:	jne    0x404e31
  404e41:	mov    rcx,rbx
  404e44:	add    rsp,0x28
  404e48:	pop    rbx
  404e49:	pop    rsi
  404e4a:	jmp    0x429580
  404e4f:	nop
  404e50:	add    rsp,0x28
  404e54:	pop    rbx
  404e55:	pop    rsi
  404e56:	ret    
  404e57:	nop    WORD PTR [rax+rax*1+0x0]
  404e60:	push   rdi
  404e61:	push   rsi
  404e62:	push   rbx
  404e63:	sub    rsp,0x20
  404e67:	mov    rdi,rcx
  404e6a:	mov    esi,edx
  404e6c:	mov    ecx,0x1
  404e71:	mov    edx,0x1b8
  404e76:	call   0x4295c8
  404e7b:	test   rax,rax
  404e7e:	mov    rbx,rax
  404e81:	je     0x404fa0
  404e87:	or     BYTE PTR [rax+0xa0],0x2
  404e8e:	mov    QWORD PTR [rax+0x28],rdi
  404e92:	lea    rdi,[rax+0x18]
  404e96:	mov    DWORD PTR [rax+0x30],esi
  404e99:	mov    QWORD PTR [rax+0x10],0xffffffffffffffff
  404ea1:	mov    rcx,rdi
  404ea4:	call   0x421b40
  404ea9:	test   eax,eax
  404eab:	jne    0x404fb0
  404eb1:	mov    rcx,rbx
  404eb4:	call   0x41e180
  404eb9:	test   eax,eax
  404ebb:	jne    0x404fb0
  404ec1:	xor    ecx,ecx
  404ec3:	mov    edx,esi
  404ec5:	mov    QWORD PTR [rbx+0xf8],0x0
  404ed0:	call   0x402500
  404ed5:	test   rax,rax
  404ed8:	mov    QWORD PTR [rbx+0x100],rax
  404edf:	je     0x404f80
  404ee5:	lea    edx,[rsi+0x10]
  404ee8:	add    rax,0x14
  404eec:	xor    ecx,ecx
  404eee:	mov    QWORD PTR [rbx+0xd0],rax
  404ef5:	call   0x402500
  404efa:	test   rax,rax
  404efd:	mov    QWORD PTR [rbx+0x108],rax
  404f04:	je     0x404f60
  404f06:	add    rax,0x14
  404f0a:	mov    rcx,rbx
  404f0d:	mov    DWORD PTR [rbx+0xe0],esi
  404f13:	mov    QWORD PTR [rbx+0xd8],rax
  404f1a:	mov    DWORD PTR [rbx+0x158],0x0
  404f24:	call   0x40d5b0
  404f29:	mov    DWORD PTR [rbx+0x148],0x5
  404f33:	mov    QWORD PTR [rbx+0x170],0x0
  404f3e:	mov    rax,rbx
  404f41:	mov    QWORD PTR [rbx+0x180],0x0
  404f4c:	mov    DWORD PTR [rbx+0x188],0x0
  404f56:	add    rsp,0x20
  404f5a:	pop    rbx
  404f5b:	pop    rsi
  404f5c:	pop    rdi
  404f5d:	ret    
  404f5e:	xchg   ax,ax
  404f60:	mov    rcx,QWORD PTR [rbx+0x100]
  404f67:	test   rcx,rcx
  404f6a:	je     0x404fa0
  404f6c:	nop    DWORD PTR [rax+0x0]
  404f70:	mov    rsi,QWORD PTR [rcx]
  404f73:	call   0x429580
  404f78:	test   rsi,rsi
  404f7b:	mov    rcx,rsi
  404f7e:	jne    0x404f70
  404f80:	mov    rcx,QWORD PTR [rbx+0x108]
  404f87:	test   rcx,rcx
  404f8a:	je     0x404fa0
  404f8c:	nop    DWORD PTR [rax+0x0]
  404f90:	mov    rsi,QWORD PTR [rcx]
  404f93:	call   0x429580
  404f98:	test   rsi,rsi
  404f9b:	mov    rcx,rsi
  404f9e:	jne    0x404f90
  404fa0:	mov    rcx,rbx
  404fa3:	call   0x404ce0
  404fa8:	xor    eax,eax
  404faa:	jmp    0x404f56
  404fac:	nop    DWORD PTR [rax+0x0]
  404fb0:	mov    rcx,rdi
  404fb3:	call   0x421b90
  404fb8:	mov    rcx,rbx
  404fbb:	call   0x41e980
  404fc0:	mov    rcx,rbx
  404fc3:	call   0x404ce0
  404fc8:	xor    eax,eax
  404fca:	jmp    0x404f56
  404fcc:	nop    DWORD PTR [rax+0x0]
  404fd0:	push   rsi
  404fd1:	push   rbx
  404fd2:	sub    rsp,0x28
  404fd6:	mov    edx,0x10
  404fdb:	mov    ebx,ecx
  404fdd:	mov    ecx,0x1
  404fe2:	call   0x4295c8
  404fe7:	test   rax,rax
  404fea:	mov    rsi,rax
  404fed:	je     0x405020
  404fef:	cmp    ebx,0x1000
  404ff5:	mov    ecx,0x1000
  404ffa:	mov    edx,0x1
  404fff:	cmova  ebx,ecx
  405002:	mov    ecx,ebx
  405004:	call   0x4295c8
  405009:	test   rax,rax
  40500c:	mov    QWORD PTR [rsi],rax
  40500f:	je     0x405020
  405011:	mov    rax,rsi
  405014:	add    rsp,0x28
  405018:	pop    rbx
  405019:	pop    rsi
  40501a:	ret    
  40501b:	nop    DWORD PTR [rax+rax*1+0x0]
  405020:	mov    rcx,rsi
  405023:	call   0x404480
  405028:	xor    eax,eax
  40502a:	jmp    0x405014
  40502c:	nop    DWORD PTR [rax+0x0]
  405030:	sub    rsp,0x28
  405034:	mov    edx,0x38
  405039:	mov    ecx,0x1
  40503e:	call   0x4295c8
  405043:	test   rax,rax
  405046:	je     0x405053
  405048:	mov    rdx,QWORD PTR [rip+0x33b21]        # 0x438b70
  40504f:	mov    QWORD PTR [rax+0x10],rdx
  405053:	add    rsp,0x28
  405057:	ret    
  405058:	nop    DWORD PTR [rax+rax*1+0x0]
  405060:	push   rbx
  405061:	sub    rsp,0x20
  405065:	mov    rbx,rcx
  405068:	lea    rcx,[rcx+0x10]
  40506c:	call   0x41f7e0
  405071:	mov    rcx,QWORD PTR [rbx+0x18]
  405075:	call   0x429580
  40507a:	mov    rcx,QWORD PTR [rbx+0x30]
  40507e:	mov    QWORD PTR [rbx+0x18],0x0
  405086:	call   0x4044b0
  40508b:	mov    QWORD PTR [rbx+0x30],0x0
  405093:	add    rsp,0x20
  405097:	pop    rbx
  405098:	ret    
  405099:	nop    DWORD PTR [rax+0x0]
  4050a0:	push   rbx
  4050a1:	sub    rsp,0x20
  4050a5:	test   rcx,rcx
  4050a8:	je     0x4050c0
  4050aa:	mov    rbx,rcx
  4050ad:	call   0x405060
  4050b2:	mov    rcx,rbx
  4050b5:	add    rsp,0x20
  4050b9:	pop    rbx
  4050ba:	jmp    0x429580
  4050bf:	nop
  4050c0:	add    rsp,0x20
  4050c4:	pop    rbx
  4050c5:	ret    
  4050c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050d0:	push   rbx
  4050d1:	sub    rsp,0x20
  4050d5:	mov    eax,0x1
  4050da:	mov    rbx,rcx
  4050dd:	mov    rcx,QWORD PTR [rcx]
  4050e0:	test   rdx,rdx
  4050e3:	cmove  rdx,rax
  4050e7:	test   rcx,rcx
  4050ea:	je     0x405100
  4050ec:	call   0x4294e8
  4050f1:	test   rax,rax
  4050f4:	je     0x4050f9
  4050f6:	mov    QWORD PTR [rbx],rax
  4050f9:	add    rsp,0x20
  4050fd:	pop    rbx
  4050fe:	ret    
  4050ff:	nop
  405100:	mov    rcx,rdx
  405103:	call   0x429538
  405108:	jmp    0x4050f1
  40510a:	nop    WORD PTR [rax+rax*1+0x0]
  405110:	push   rsi
  405111:	push   rbx
  405112:	sub    rsp,0x28
  405116:	mov    rbx,rcx
  405119:	call   0x4019e0
  40511e:	test   rax,rax
  405121:	mov    rsi,rax
  405124:	je     0x4051b0
  40512a:	test   rbx,rbx
  40512d:	je     0x405164
  40512f:	movzx  eax,WORD PTR [rbx+0x8]
  405133:	mov    rcx,rbx
  405136:	lea    rdx,[rax*8+0x8]
  40513e:	call   0x4050d0
  405143:	test   rax,rax
  405146:	je     0x4051a3
  405148:	movzx  edx,WORD PTR [rbx+0x8]
  40514c:	mov    rax,QWORD PTR [rbx]
  40514f:	lea    ecx,[rdx+0x1]
  405152:	mov    WORD PTR [rbx+0x8],cx
  405156:	mov    QWORD PTR [rax+rdx*8],rsi
  40515a:	mov    rax,rbx
  40515d:	add    rsp,0x28
  405161:	pop    rbx
  405162:	pop    rsi
  405163:	ret    
  405164:	mov    edx,0x40
  405169:	mov    ecx,0x1
  40516e:	call   0x4295c8
  405173:	test   rax,rax
  405176:	mov    rbx,rax
  405179:	je     0x40519b
  40517b:	mov    DWORD PTR [rax+0xc],0x1
  405182:	movzx  eax,WORD PTR [rax+0x8]
  405186:	mov    rcx,rbx
  405189:	lea    rdx,[rax*8+0x8]
  405191:	call   0x4050d0
  405196:	test   rax,rax
  405199:	jne    0x405148
  40519b:	mov    rcx,rbx
  40519e:	call   0x429580
  4051a3:	mov    rcx,rsi
  4051a6:	call   0x429580
  4051ab:	xor    eax,eax
  4051ad:	jmp    0x40515d
  4051af:	nop
  4051b0:	xor    eax,eax
  4051b2:	jmp    0x40515d
  4051b4:	xchg   ax,ax
  4051b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4051c0:	push   r15
  4051c2:	push   r14
  4051c4:	push   r13
  4051c6:	push   r12
  4051c8:	push   rbp
  4051c9:	push   rdi
  4051ca:	push   rsi
  4051cb:	push   rbx
  4051cc:	sub    rsp,0x48
  4051d0:	mov    r12,QWORD PTR [rip+0x339d9]        # 0x438bb0
  4051d7:	mov    r13d,r8d
  4051da:	mov    r14d,r8d
  4051dd:	mov    rbp,rcx
  4051e0:	mov    esi,edx
  4051e2:	mov    ebx,edx
  4051e4:	mov    r8d,DWORD PTR [r12]
  4051e8:	test   r8d,r8d
  4051eb:	jne    0x405315
  4051f1:	mov    edx,0x40
  4051f6:	mov    ecx,0x1
  4051fb:	call   0x4295c8
  405200:	test   rax,rax
  405203:	mov    rdi,rax
  405206:	je     0x40525c
  405208:	mov    DWORD PTR [rax+0xc],0x1
  40520f:	movzx  ecx,bx
  405212:	mov    edx,0x8
  405217:	call   0x4295c8
  40521c:	test   rax,rax
  40521f:	mov    QWORD PTR [rdi],rax
  405222:	je     0x40525c
  405224:	test   si,si
  405227:	mov    WORD PTR [rdi+0x8],si
  40522b:	je     0x405280
  40522d:	sub    esi,0x1
  405230:	mov    rbx,rax
  405233:	xor    r15d,r15d
  405236:	movzx  esi,si
  405239:	shl    rsi,0x3
  40523d:	jmp    0x40524c
  40523f:	nop
  405240:	cmp    r15,rsi
  405243:	je     0x405280
  405245:	mov    rbx,QWORD PTR [rdi]
  405248:	add    r15,0x8
  40524c:	add    rbx,r15
  40524f:	call   0x4019e0
  405254:	test   rax,rax
  405257:	mov    QWORD PTR [rbx],rax
  40525a:	jne    0x405240
  40525c:	mov    rcx,rdi
  40525f:	call   0x4044b0
  405264:	xor    eax,eax
  405266:	add    rsp,0x48
  40526a:	pop    rbx
  40526b:	pop    rsi
  40526c:	pop    rdi
  40526d:	pop    rbp
  40526e:	pop    r12
  405270:	pop    r13
  405272:	pop    r14
  405274:	pop    r15
  405276:	ret    
  405277:	nop    WORD PTR [rax+rax*1+0x0]
  405280:	test   r13w,r13w
  405284:	jne    0x4052f0
  405286:	mov    ebx,DWORD PTR [rbp+0x120]
  40528c:	lea    rcx,[rbp+0x128]
  405293:	lea    edx,[rbx+0x1]
  405296:	mov    rsi,rdx
  405299:	shl    rdx,0x3
  40529d:	call   0x4050d0
  4052a2:	test   rax,rax
  4052a5:	je     0x40525c
  4052a7:	mov    edx,DWORD PTR [r12]
  4052ab:	mov    QWORD PTR [rbp+0x128],rax
  4052b2:	mov    QWORD PTR [rax+rbx*8],rdi
  4052b6:	mov    DWORD PTR [rbp+0x120],esi
  4052bc:	test   edx,edx
  4052be:	je     0x405266
  4052c0:	lea    r8,[rip+0x27b21]        # 0x42cde8
  4052c7:	lea    rcx,[rip+0x277e4]        # 0x42cab2
  4052ce:	mov    r9d,esi
  4052d1:	mov    edx,0x1b47
  4052d6:	mov    QWORD PTR [rsp+0x38],rax
  4052db:	call   0x423fa0
  4052e0:	mov    rax,QWORD PTR [rsp+0x38]
  4052e5:	jmp    0x405266
  4052ea:	nop    WORD PTR [rax+rax*1+0x0]
  4052f0:	movzx  ecx,r14w
  4052f4:	mov    edx,0x2
  4052f9:	call   0x4295c8
  4052fe:	test   rax,rax
  405301:	mov    QWORD PTR [rdi+0x30],rax
  405305:	je     0x40525c
  40530b:	mov    WORD PTR [rdi+0x38],r13w
  405310:	jmp    0x405286
  405315:	movzx  eax,r13w
  405319:	lea    rcx,[rip+0x27792]        # 0x42cab2
  405320:	lea    r8,[rip+0x27a89]        # 0x42cdb0
  405327:	movzx  r9d,dx
  40532b:	mov    DWORD PTR [rsp+0x20],eax
  40532f:	mov    edx,0x1a27
  405334:	call   0x423fa0
  405339:	mov    ecx,DWORD PTR [r12]
  40533d:	test   ecx,ecx
  40533f:	je     0x4051f1
  405345:	mov    r9d,DWORD PTR [rbp+0x120]
  40534c:	lea    r8,[rip+0x27a95]        # 0x42cde8
  405353:	lea    rcx,[rip+0x27758]        # 0x42cab2
  40535a:	mov    edx,0x1a37
  40535f:	call   0x423fa0
  405364:	jmp    0x4051f1
  405369:	nop
  40536a:	nop
  40536b:	nop
  40536c:	nop
  40536d:	nop
  40536e:	nop
  40536f:	nop
  405370:	push   rdi
  405371:	push   rsi
  405372:	push   rbx
  405373:	sub    rsp,0x20
  405377:	mov    rsi,QWORD PTR [rcx+0x110]
  40537e:	test   rsi,rsi
  405381:	je     0x4053ca
  405383:	xor    ebx,ebx
  405385:	cmp    WORD PTR [rsi+0x8],0x0
  40538a:	mov    rdi,rcx
  40538d:	jne    0x40539c
  40538f:	jmp    0x4053c0
  405391:	movzx  eax,WORD PTR [rsi+0x8]
  405395:	add    ebx,0x1
  405398:	cmp    eax,ebx
  40539a:	jbe    0x4053c0
  40539c:	mov    rdx,QWORD PTR [rsi]
  40539f:	mov    eax,ebx
  4053a1:	mov    rcx,rdi
  4053a4:	mov    rdx,QWORD PTR [rdx+rax*8]
  4053a8:	mov    rax,QWORD PTR [rdx]
  4053ab:	call   QWORD PTR [rax+0x8]
  4053ae:	test   eax,eax
  4053b0:	jns    0x405391
  4053b2:	add    rsp,0x20
  4053b6:	pop    rbx
  4053b7:	pop    rsi
  4053b8:	pop    rdi
  4053b9:	ret    
  4053ba:	nop    WORD PTR [rax+rax*1+0x0]
  4053c0:	xor    eax,eax
  4053c2:	add    rsp,0x20
  4053c6:	pop    rbx
  4053c7:	pop    rsi
  4053c8:	pop    rdi
  4053c9:	ret    
  4053ca:	mov    eax,0xffffffff
  4053cf:	jmp    0x4053b2
  4053d1:	nop    DWORD PTR [rax+rax*1+0x0]
  4053d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053e0:	sub    ecx,0x9
  4053e3:	cmp    ecx,0x69
  4053e6:	ja     0x405490
  4053ec:	lea    rax,[rip+0x27a61]        # 0x42ce54
  4053f3:	movsxd rdx,DWORD PTR [rax+rcx*4]
  4053f7:	add    rax,rdx
  4053fa:	jmp    rax
  4053fc:	nop    DWORD PTR [rax+0x0]
  405400:	lea    rax,[rip+0x27a1e]        # 0x42ce25
  405407:	ret    
  405408:	nop    DWORD PTR [rax+rax*1+0x0]
  405410:	lea    rax,[rip+0x27a36]        # 0x42ce4d
  405417:	ret    
  405418:	nop    DWORD PTR [rax+rax*1+0x0]
  405420:	lea    rax,[rip+0x27a11]        # 0x42ce38
  405427:	ret    
  405428:	nop    DWORD PTR [rax+rax*1+0x0]
  405430:	lea    rax,[rip+0x279e9]        # 0x42ce20
  405437:	ret    
  405438:	nop    DWORD PTR [rax+rax*1+0x0]
  405440:	lea    rax,[rip+0x279e4]        # 0x42ce2b
  405447:	ret    
  405448:	nop    DWORD PTR [rax+rax*1+0x0]
  405450:	lea    rax,[rip+0x279d9]        # 0x42ce30
  405457:	ret    
  405458:	nop    DWORD PTR [rax+rax*1+0x0]
  405460:	lea    rax,[rip+0x279cd]        # 0x42ce34
  405467:	ret    
  405468:	nop    DWORD PTR [rax+rax*1+0x0]
  405470:	lea    rax,[rip+0x279c5]        # 0x42ce3c
  405477:	ret    
  405478:	nop    DWORD PTR [rax+rax*1+0x0]
  405480:	lea    rax,[rip+0x279c2]        # 0x42ce49
  405487:	ret    
  405488:	nop    DWORD PTR [rax+rax*1+0x0]
  405490:	lea    rax,[rip+0x2798d]        # 0x42ce24
  405497:	ret    
  405498:	nop    DWORD PTR [rax+rax*1+0x0]
  4054a0:	sub    ecx,0x20
  4054a3:	cmp    cl,0xdf
  4054a6:	ja     0x405730
  4054ac:	lea    rax,[rip+0x27cbd]        # 0x42d170
  4054b3:	movzx  ecx,cl
  4054b6:	movsxd rdx,DWORD PTR [rax+rcx*4]
  4054ba:	add    rax,rdx
  4054bd:	jmp    rax
  4054bf:	nop
  4054c0:	lea    rax,[rip+0x27b35]        # 0x42cffc
  4054c7:	ret    
  4054c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4054d0:	lea    rax,[rip+0x27c8a]        # 0x42d161
  4054d7:	ret    
  4054d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4054e0:	lea    rax,[rip+0x27c71]        # 0x42d158
  4054e7:	ret    
  4054e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4054f0:	lea    rax,[rip+0x27c5c]        # 0x42d153
  4054f7:	ret    
  4054f8:	nop    DWORD PTR [rax+rax*1+0x0]
  405500:	lea    rax,[rip+0x27c45]        # 0x42d14c
  405507:	ret    
  405508:	nop    DWORD PTR [rax+rax*1+0x0]
  405510:	lea    rax,[rip+0x27c30]        # 0x42d147
  405517:	ret    
  405518:	nop    DWORD PTR [rax+rax*1+0x0]
  405520:	lea    rax,[rip+0x27c12]        # 0x42d139
  405527:	ret    
  405528:	nop    DWORD PTR [rax+rax*1+0x0]
  405530:	lea    rax,[rip+0x27bf5]        # 0x42d12c
  405537:	ret    
  405538:	nop    DWORD PTR [rax+rax*1+0x0]
  405540:	lea    rax,[rip+0x27bdf]        # 0x42d126
  405547:	ret    
  405548:	nop    DWORD PTR [rax+rax*1+0x0]
  405550:	lea    rax,[rip+0x27bcb]        # 0x42d122
  405557:	ret    
  405558:	nop    DWORD PTR [rax+rax*1+0x0]
  405560:	lea    rax,[rip+0x27bae]        # 0x42d115
  405567:	ret    
  405568:	nop    DWORD PTR [rax+rax*1+0x0]
  405570:	lea    rax,[rip+0x27b94]        # 0x42d10b
  405577:	ret    
  405578:	nop    DWORD PTR [rax+rax*1+0x0]
  405580:	lea    rax,[rip+0x27b79]        # 0x42d100
  405587:	ret    
  405588:	nop    DWORD PTR [rax+rax*1+0x0]
  405590:	lea    rax,[rip+0x27b5d]        # 0x42d0f4
  405597:	ret    
  405598:	nop    DWORD PTR [rax+rax*1+0x0]
  4055a0:	lea    rax,[rip+0x27b45]        # 0x42d0ec
  4055a7:	ret    
  4055a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4055b0:	lea    rax,[rip+0x27b2d]        # 0x42d0e4
  4055b7:	ret    
  4055b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4055c0:	lea    rax,[rip+0x27b19]        # 0x42d0e0
  4055c7:	ret    
  4055c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4055d0:	lea    rax,[rip+0x27af3]        # 0x42d0ca
  4055d7:	ret    
  4055d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4055e0:	lea    rax,[rip+0x27ada]        # 0x42d0c1
  4055e7:	ret    
  4055e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4055f0:	lea    rax,[rip+0x27ac4]        # 0x42d0bb
  4055f7:	ret    
  4055f8:	nop    DWORD PTR [rax+rax*1+0x0]
  405600:	lea    rax,[rip+0x27aaf]        # 0x42d0b6
  405607:	ret    
  405608:	nop    DWORD PTR [rax+rax*1+0x0]
  405610:	lea    rax,[rip+0x27a99]        # 0x42d0b0
  405617:	ret    
  405618:	nop    DWORD PTR [rax+rax*1+0x0]
  405620:	lea    rax,[rip+0x27a81]        # 0x42d0a8
  405627:	ret    
  405628:	nop    DWORD PTR [rax+rax*1+0x0]
  405630:	lea    rax,[rip+0x27a62]        # 0x42d099
  405637:	ret    
  405638:	nop    DWORD PTR [rax+rax*1+0x0]
  405640:	lea    rax,[rip+0x27a44]        # 0x42d08b
  405647:	ret    
  405648:	nop    DWORD PTR [rax+rax*1+0x0]
  405650:	lea    rax,[rip+0x27a2c]        # 0x42d083
  405657:	ret    
  405658:	nop    DWORD PTR [rax+rax*1+0x0]
  405660:	lea    rax,[rip+0x27a14]        # 0x42d07b
  405667:	ret    
  405668:	nop    DWORD PTR [rax+rax*1+0x0]
  405670:	lea    rax,[rip+0x279fb]        # 0x42d072
  405677:	ret    
  405678:	nop    DWORD PTR [rax+rax*1+0x0]
  405680:	lea    rax,[rip+0x279e4]        # 0x42d06b
  405687:	ret    
  405688:	nop    DWORD PTR [rax+rax*1+0x0]
  405690:	lea    rax,[rip+0x279cc]        # 0x42d063
  405697:	ret    
  405698:	nop    DWORD PTR [rax+rax*1+0x0]
  4056a0:	lea    rax,[rip+0x279a8]        # 0x42d04f
  4056a7:	ret    
  4056a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4056b0:	lea    rax,[rip+0x2798c]        # 0x42d043
  4056b7:	ret    
  4056b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4056c0:	lea    rax,[rip+0x27970]        # 0x42d037
  4056c7:	ret    
  4056c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4056d0:	lea    rax,[rip+0x27959]        # 0x42d030
  4056d7:	ret    
  4056d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4056e0:	lea    rax,[rip+0x2793c]        # 0x42d023
  4056e7:	ret    
  4056e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4056f0:	lea    rax,[rip+0x27925]        # 0x42d01c
  4056f7:	ret    
  4056f8:	nop    DWORD PTR [rax+rax*1+0x0]
  405700:	lea    rax,[rip+0x27a65]        # 0x42d16c
  405707:	ret    
  405708:	nop    DWORD PTR [rax+rax*1+0x0]
  405710:	lea    rax,[rip+0x278fd]        # 0x42d014
  405717:	ret    
  405718:	nop    DWORD PTR [rax+rax*1+0x0]
  405720:	lea    rax,[rip+0x278e4]        # 0x42d00b
  405727:	ret    
  405728:	nop    DWORD PTR [rax+rax*1+0x0]
  405730:	lea    rax,[rip+0x276ed]        # 0x42ce24
  405737:	ret    
  405738:	nop    DWORD PTR [rax+rax*1+0x0]
  405740:	push   rsi
  405741:	push   rbx
  405742:	sub    rsp,0x28
  405746:	test   rcx,rcx
  405749:	mov    rbx,rcx
  40574c:	je     0x40576c
  40574e:	xchg   ax,ax
  405750:	mov    rcx,QWORD PTR [rbx]
  405753:	mov    rsi,QWORD PTR [rbx+0x8]
  405757:	call   0x429580
  40575c:	mov    rcx,rbx
  40575f:	mov    rbx,rsi
  405762:	call   0x429580
  405767:	test   rsi,rsi
  40576a:	jne    0x405750
  40576c:	add    rsp,0x28
  405770:	pop    rbx
  405771:	pop    rsi
  405772:	ret    
  405773:	nop    DWORD PTR [rax]
  405776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405780:	push   r12
  405782:	push   rbp
  405783:	push   rdi
  405784:	push   rsi
  405785:	push   rbx
  405786:	sub    rsp,0x20
  40578a:	lea    rdi,[r8*4+0x0]
  405792:	mov    rbp,rcx
  405795:	mov    rsi,r8
  405798:	mov    r12,rdx
  40579b:	lea    rcx,[rdi+0x1]
  40579f:	call   0x429538
  4057a4:	mov    rdx,rsi
  4057a7:	mov    rbx,rax
  4057aa:	mov    r9,rdi
  4057ad:	mov    r8,rax
  4057b0:	mov    rcx,rbp
  4057b3:	call   0x40d020
  4057b8:	test   rbx,rbx
  4057bb:	mov    rsi,rax
  4057be:	je     0x4057e1
  4057c0:	lea    rdx,[rax+0x1]
  4057c4:	mov    rcx,rbx
  4057c7:	call   0x4294e8
  4057cc:	mov    BYTE PTR [rax+rsi*1],0x0
  4057d0:	mov    QWORD PTR [r12],rax
  4057d4:	xor    eax,eax
  4057d6:	add    rsp,0x20
  4057da:	pop    rbx
  4057db:	pop    rsi
  4057dc:	pop    rdi
  4057dd:	pop    rbp
  4057de:	pop    r12
  4057e0:	ret    
  4057e1:	mov    QWORD PTR [r12],0x0
  4057e9:	mov    eax,0xffffffff
  4057ee:	jmp    0x4057d6
  4057f0:	push   r15
  4057f2:	push   r14
  4057f4:	push   r13
  4057f6:	push   r12
  4057f8:	push   rbp
  4057f9:	push   rdi
  4057fa:	push   rsi
  4057fb:	push   rbx
  4057fc:	sub    rsp,0x28
  405800:	xor    edi,edi
  405802:	test   edx,edx
  405804:	mov    rsi,rcx
  405807:	mov    r14d,edx
  40580a:	mov    r13,r8
  40580d:	mov    ebp,r9d
  405810:	jle    0x4058be
  405816:	xor    ebx,ebx
  405818:	xor    r12d,r12d
  40581b:	jmp    0x40585b
  40581d:	nop    DWORD PTR [rax]
  405820:	call   0x40cfb0
  405825:	sub    r14d,0x2
  405829:	movzx  ebx,ax
  40582c:	movzx  r8d,bx
  405830:	mov    rdx,r15
  405833:	mov    rcx,rsi
  405836:	call   0x405780
  40583b:	test   eax,eax
  40583d:	js     0x4058a0
  40583f:	sub    r14d,ebx
  405842:	mov    eax,r14d
  405845:	sub    eax,ebx
  405847:	cmp    WORD PTR [rsi],0x700
  40584c:	mov    rbx,r15
  40584f:	cmovae r14d,eax
  405853:	add    edi,0x1
  405856:	test   r14d,r14d
  405859:	jle    0x4058c1
  40585b:	mov    ecx,0x10
  405860:	call   0x429538
  405865:	test   rax,rax
  405868:	mov    r15,rax
  40586b:	je     0x4058a0
  40586d:	test   rbx,rbx
  405870:	mov    QWORD PTR [rax+0x8],0x0
  405878:	je     0x405893
  40587a:	mov    QWORD PTR [rbx+0x8],rax
  40587e:	test   ebp,ebp
  405880:	mov    rcx,rsi
  405883:	jne    0x405820
  405885:	call   0x40ce80
  40588a:	sub    r14d,0x1
  40588e:	movzx  ebx,al
  405891:	jmp    0x40582c
  405893:	mov    r12,rax
  405896:	jmp    0x40587e
  405898:	nop    DWORD PTR [rax+rax*1+0x0]
  4058a0:	mov    rcx,r12
  4058a3:	call   0x405740
  4058a8:	mov    eax,0xffffffff
  4058ad:	add    rsp,0x28
  4058b1:	pop    rbx
  4058b2:	pop    rsi
  4058b3:	pop    rdi
  4058b4:	pop    rbp
  4058b5:	pop    r12
  4058b7:	pop    r13
  4058b9:	pop    r14
  4058bb:	pop    r15
  4058bd:	ret    
  4058be:	xor    r12d,r12d
  4058c1:	mov    QWORD PTR [r13+0x0],r12
  4058c5:	mov    eax,edi
  4058c7:	jmp    0x4058ad
  4058c9:	nop    DWORD PTR [rax+0x0]
  4058d0:	push   rbp
  4058d1:	push   rdi
  4058d2:	push   rsi
  4058d3:	push   rbx
  4058d4:	sub    rsp,0x28
  4058d8:	mov    rsi,QWORD PTR [rcx+0x110]
  4058df:	test   rsi,rsi
  4058e2:	je     0x405970
  4058e8:	cmp    WORD PTR [rsi+0x8],0x0
  4058ed:	mov    rdi,rcx
  4058f0:	je     0x405945
  4058f2:	xor    ebx,ebx
  4058f4:	mov    rbp,QWORD PTR [rip+0x332b5]        # 0x438bb0
  4058fb:	jmp    0x405921
  4058fd:	nop    DWORD PTR [rax]
  405900:	mov    rdx,QWORD PTR [rsi]
  405903:	mov    eax,ebx
  405905:	mov    rcx,rdi
  405908:	mov    rdx,QWORD PTR [rdx+rax*8]
  40590c:	mov    rax,QWORD PTR [rdx]
  40590f:	call   QWORD PTR [rax+0x8]
  405912:	test   eax,eax
  405914:	js     0x405970
  405916:	movzx  eax,WORD PTR [rsi+0x8]
  40591a:	add    ebx,0x1
  40591d:	cmp    eax,ebx
  40591f:	jbe    0x405965
  405921:	mov    eax,DWORD PTR [rbp+0x0]
  405924:	test   eax,eax
  405926:	je     0x405900
  405928:	lea    r8,[rip+0x27be1]        # 0x42d510
  40592f:	lea    rcx,[rip+0x27bba]        # 0x42d4f0
  405936:	mov    r9d,ebx
  405939:	mov    edx,0x77c5
  40593e:	call   0x423fa0
  405943:	jmp    0x405900
  405945:	lea    rdx,[rip+0x27ba4]        # 0x42d4f0
  40594c:	lea    rcx,[rip+0x27ba5]        # 0x42d4f8
  405953:	mov    r8d,0x779
  405959:	call   0x4291e0
  40595e:	cmp    WORD PTR [rsi+0x8],0x0
  405963:	jne    0x4058f2
  405965:	xor    eax,eax
  405967:	add    rsp,0x28
  40596b:	pop    rbx
  40596c:	pop    rsi
  40596d:	pop    rdi
  40596e:	pop    rbp
  40596f:	ret    
  405970:	mov    eax,0xffffffff
  405975:	add    rsp,0x28
  405979:	pop    rbx
  40597a:	pop    rsi
  40597b:	pop    rdi
  40597c:	pop    rbp
  40597d:	ret    
  40597e:	xchg   ax,ax
  405980:	push   rbp
  405981:	push   rdi
  405982:	push   rsi
  405983:	push   rbx
  405984:	sub    rsp,0x38
  405988:	mov    rbx,rcx
  40598b:	mov    QWORD PTR [rsp+0x28],0x0
  405994:	call   0x40cfb0
  405999:	lea    r8,[rsp+0x28]
  40599e:	xor    r9d,r9d
  4059a1:	movzx  edx,ax
  4059a4:	mov    rcx,rbx
  4059a7:	call   0x4057f0
  4059ac:	test   eax,eax
  4059ae:	mov    ebp,eax
  4059b0:	js     0x405a5a
  4059b6:	mov    rcx,rbx
  4059b9:	call   0x404850
  4059be:	mov    QWORD PTR [rbx+0x150],0xffffffffffffffff
  4059c9:	movzx  ecx,bp
  4059cc:	call   0x404600
  4059d1:	test   rax,rax
  4059d4:	mov    rdi,rax
  4059d7:	je     0x405a28
  4059d9:	mov    QWORD PTR [rbx+0x118],rax
  4059e0:	mov    rdx,rax
  4059e3:	mov    rcx,rbx
  4059e6:	call   0x401e30
  4059eb:	test   ebp,ebp
  4059ed:	mov    rsi,QWORD PTR [rsp+0x28]
  4059f2:	je     0x405a55
  4059f4:	lea    eax,[rbp-0x1]
  4059f7:	xor    ebx,ebx
  4059f9:	lea    rbp,[rax*8+0x8]
  405a01:	jmp    0x405a10
  405a03:	add    rbx,0x8
  405a07:	mov    rsi,QWORD PTR [rsi+0x8]
  405a0b:	cmp    rbx,rbp
  405a0e:	je     0x405a40
  405a10:	mov    rcx,QWORD PTR [rdi]
  405a13:	mov    rdx,QWORD PTR [rsi]
  405a16:	mov    rcx,QWORD PTR [rcx+rbx*1]
  405a1a:	add    rcx,0x38
  405a1e:	call   0x41f8a0
  405a23:	test   rax,rax
  405a26:	jne    0x405a03
  405a28:	mov    rcx,QWORD PTR [rsp+0x28]
  405a2d:	call   0x405740
  405a32:	mov    eax,0xffffffff
  405a37:	add    rsp,0x38
  405a3b:	pop    rbx
  405a3c:	pop    rsi
  405a3d:	pop    rdi
  405a3e:	pop    rbp
  405a3f:	ret    
  405a40:	mov    rcx,QWORD PTR [rsp+0x28]
  405a45:	call   0x405740
  405a4a:	xor    eax,eax
  405a4c:	add    rsp,0x38
  405a50:	pop    rbx
  405a51:	pop    rsi
  405a52:	pop    rdi
  405a53:	pop    rbp
  405a54:	ret    
  405a55:	mov    rcx,rsi
  405a58:	jmp    0x405a45
  405a5a:	mov    eax,0xffffffff
  405a5f:	jmp    0x405a37
  405a61:	nop    DWORD PTR [rax+rax*1+0x0]
  405a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a70:	push   r15
  405a72:	push   r14
  405a74:	push   r13
  405a76:	push   r12
  405a78:	push   rbp
  405a79:	push   rdi
  405a7a:	push   rsi
  405a7b:	push   rbx
  405a7c:	sub    rsp,0x48
  405a80:	xor    r14d,r14d
  405a83:	mov    rsi,rcx
  405a86:	mov    r12,rdx
  405a89:	mov    r13d,r8d
  405a8c:	lea    rbp,[rsp+0x30]
  405a91:	call   0x40cfb0
  405a96:	mov    rbx,QWORD PTR [rsi+0x110]
  405a9d:	movzx  edi,ax
  405aa0:	jmp    0x405b20
  405aa2:	movzx  edx,al
  405aa5:	cmp    dx,WORD PTR [rbx+0x8]
  405aa9:	ja     0x405b4c
  405aaf:	mov    rdx,QWORD PTR [rbx]
  405ab2:	mov    r15,QWORD PTR [rdx+rax*8-0x8]
  405ab7:	test   r15,r15
  405aba:	je     0x405b4c
  405ac0:	movzx  eax,BYTE PTR [rsp+0x32]
  405ac5:	mov    r9d,eax
  405ac8:	shr    r9b,0x2
  405acc:	xor    r9d,0x1
  405ad0:	and    r9d,0x1
  405ad4:	lea    r10d,[r9+r9*1]
  405ad8:	movzx  r9d,BYTE PTR [r15+0x58]
  405add:	and    r9d,0xfffffff5
  405ae1:	test   al,0x8
  405ae3:	setne  dl
  405ae6:	or     r9d,r10d
  405ae9:	shl    edx,0x3
  405aec:	or     r9d,edx
  405aef:	test   al,0x10
  405af1:	setne  dl
  405af4:	and    r9d,0xffffffef
  405af8:	shl    edx,0x4
  405afb:	or     r9d,edx
  405afe:	test   r12,r12
  405b01:	mov    BYTE PTR [r15+0x58],r9b
  405b05:	je     0x405b1c
  405b07:	movzx  edx,BYTE PTR [rsp+0x31]
  405b0c:	test   dl,dl
  405b0e:	je     0x405b1c
  405b10:	movzx  ecx,dl
  405b13:	cmp    ecx,r13d
  405b16:	jle    0x405bb3
  405b1c:	test   al,0x20
  405b1e:	jne    0x405b58
  405b20:	cmp    edi,r14d
  405b23:	jbe    0x405ba0
  405b25:	mov    r8d,0x3
  405b2b:	mov    rdx,rbp
  405b2e:	mov    rcx,rsi
  405b31:	call   0x40cf10
  405b36:	add    r14d,0x3
  405b3a:	test   rbx,rbx
  405b3d:	je     0x405b4c
  405b3f:	movzx  eax,BYTE PTR [rsp+0x30]
  405b44:	test   al,al
  405b46:	jne    0x405aa2
  405b4c:	movzx  eax,BYTE PTR [rsp+0x32]
  405b51:	xor    r15d,r15d
  405b54:	test   al,0x20
  405b56:	je     0x405b20
  405b58:	mov    rcx,rsi
  405b5b:	call   0x40ce80
  405b60:	test   r15,r15
  405b63:	movzx  r9d,al
  405b67:	je     0x405bd0
  405b69:	lea    rdx,[r15+0x40]
  405b6d:	movzx  r8d,al
  405b71:	mov    rcx,rsi
  405b74:	mov    DWORD PTR [rsp+0x2c],r9d
  405b79:	call   0x40d1e0
  405b7e:	mov    r9d,DWORD PTR [rsp+0x2c]
  405b83:	cmp    WORD PTR [rsi],0x700
  405b88:	lea    eax,[r9+r9*1]
  405b8c:	cmovae r9d,eax
  405b90:	lea    r14d,[r9+r14*1+0x1]
  405b95:	cmp    edi,r14d
  405b98:	ja     0x405b25
  405b9a:	nop    WORD PTR [rax+rax*1+0x0]
  405ba0:	xor    eax,eax
  405ba2:	add    rsp,0x48
  405ba6:	pop    rbx
  405ba7:	pop    rsi
  405ba8:	pop    rdi
  405ba9:	pop    rbp
  405baa:	pop    r12
  405bac:	pop    r13
  405bae:	pop    r14
  405bb0:	pop    r15
  405bb2:	ret    
  405bb3:	mov    rdx,QWORD PTR [r12+rdx*8-0x8]
  405bb8:	lea    rcx,[r15+0x30]
  405bbc:	call   0x41f8a0
  405bc1:	test   rax,rax
  405bc4:	je     0x405bf6
  405bc6:	movzx  eax,BYTE PTR [rsp+0x32]
  405bcb:	jmp    0x405b1c
  405bd0:	cmp    WORD PTR [rsi],0x700
  405bd5:	lea    eax,[r9+r9*1]
  405bd9:	mov    rcx,rsi
  405bdc:	cmovae r9d,eax
  405be0:	xor    edx,edx
  405be2:	mov    r8d,r9d
  405be5:	mov    DWORD PTR [rsp+0x2c],r9d
  405bea:	call   0x40cf10
  405bef:	mov    r9d,DWORD PTR [rsp+0x2c]
  405bf4:	jmp    0x405b90
  405bf6:	mov    eax,0xffffffff
  405bfb:	jmp    0x405ba2
  405bfd:	nop    DWORD PTR [rax]
  405c00:	push   rbp
  405c01:	push   rdi
  405c02:	push   rsi
  405c03:	push   rbx
  405c04:	sub    rsp,0x28
  405c08:	mov    rbx,rcx
  405c0b:	call   0x40cfb0
  405c10:	mov    rcx,rbx
  405c13:	mov    esi,eax
  405c15:	call   0x40cfd0
  405c1a:	test   eax,eax
  405c1c:	mov    edi,eax
  405c1e:	je     0x405c70
  405c20:	sub    esi,0x4
  405c23:	mov    rcx,rbx
  405c26:	call   0x40ce80
  405c2b:	mov    rcx,rbx
  405c2e:	call   0x40cfb0
  405c33:	cmp    si,0x7
  405c37:	mov    ebp,eax
  405c39:	je     0x405c90
  405c3b:	mov    rdx,QWORD PTR [rbx+0x138]
  405c42:	test   rdx,rdx
  405c45:	je     0x405c5b
  405c47:	mov    WORD PTR [rdx+0x44],bp
  405c4b:	and    ebp,0x40
  405c4e:	mov    DWORD PTR [rdx+0x18],edi
  405c51:	je     0x405c5b
  405c53:	mov    rcx,rbx
  405c56:	call   0x404c20
  405c5b:	xor    eax,eax
  405c5d:	add    rsp,0x28
  405c61:	pop    rbx
  405c62:	pop    rsi
  405c63:	pop    rdi
  405c64:	pop    rbp
  405c65:	ret    
  405c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c70:	mov    rcx,rbx
  405c73:	sub    esi,0x5
  405c76:	call   0x40ce80
  405c7b:	movzx  r8d,al
  405c7f:	xor    edx,edx
  405c81:	mov    rcx,rbx
  405c84:	mov    rbp,r8
  405c87:	sub    esi,ebp
  405c89:	call   0x40cf10
  405c8e:	jmp    0x405c23
  405c90:	mov    rcx,rbx
  405c93:	call   0x40cfd0
  405c98:	jmp    0x405c3b
  405c9a:	nop    WORD PTR [rax+rax*1+0x0]
  405ca0:	push   r15
  405ca2:	push   r14
  405ca4:	push   r13
  405ca6:	push   r12
  405ca8:	push   rbp
  405ca9:	push   rdi
  405caa:	push   rsi
  405cab:	push   rbx
  405cac:	sub    rsp,0x58
  405cb0:	mov    rsi,rcx
  405cb3:	call   0x40cfb0
  405cb8:	movzx  ebp,ax
  405cbb:	movzx  eax,WORD PTR [rsi]
  405cbe:	cmp    ax,0x700
  405cc2:	jbe    0x405ded
  405cc8:	cmp    ax,0x701
  405ccc:	je     0x405de0
  405cd2:	test   ebp,ebp
  405cd4:	mov    DWORD PTR [rsp+0x28],0x0
  405cdc:	je     0x405f70
  405ce2:	lea    r15,[rsp+0x30]
  405ce7:	xor    ebx,ebx
  405ce9:	mov    QWORD PTR [rsp+0x20],0x0
  405cf2:	mov    ecx,0x10
  405cf7:	call   0x429538
  405cfc:	test   rax,rax
  405cff:	mov    r14,rax
  405d02:	je     0x405db6
  405d08:	test   rbx,rbx
  405d0b:	mov    QWORD PTR [rax],0x0
  405d12:	mov    QWORD PTR [rax+0x8],0x0
  405d1a:	je     0x405f20
  405d20:	mov    QWORD PTR [rbx+0x8],rax
  405d24:	mov    rcx,rsi
  405d27:	sub    ebp,0x1
  405d2a:	call   0x40ce80
  405d2f:	movzx  r13d,al
  405d33:	lea    eax,[r13-0x1]
  405d37:	cmp    eax,0x3
  405d3a:	mov    DWORD PTR [rsp+0x2c],eax
  405d3e:	ja     0x405db6
  405d40:	xor    r12d,r12d
  405d43:	xor    edi,edi
  405d45:	test   r13d,r13d
  405d48:	mov    rbx,r15
  405d4b:	jne    0x405d7a
  405d4d:	jmp    0x405f4d
  405d52:	mov    r8,QWORD PTR [rbx]
  405d55:	xor    edx,edx
  405d57:	mov    r9d,0xffffffff
  405d5d:	mov    rcx,rsi
  405d60:	add    edi,0x1
  405d63:	add    rbx,0x8
  405d67:	call   0x41abc0
  405d6c:	cmp    r13d,edi
  405d6f:	lea    r12,[rax+r12*1+0x1]
  405d74:	je     0x405e90
  405d7a:	mov    rcx,rsi
  405d7d:	call   0x40cfb0
  405d82:	movzx  edx,ax
  405d85:	movzx  r8d,ax
  405d89:	mov    rcx,rsi
  405d8c:	not    edx
  405d8e:	lea    ebp,[rbp+rdx*2+0x0]
  405d92:	mov    rdx,rbx
  405d95:	call   0x405780
  405d9a:	test   eax,eax
  405d9c:	jns    0x405d52
  405d9e:	test   edi,edi
  405da0:	je     0x405db6
  405da2:	sub    edi,0x1
  405da5:	movsxd rax,edi
  405da8:	mov    rcx,QWORD PTR [rsp+rax*8+0x30]
  405dad:	call   0x429580
  405db2:	test   edi,edi
  405db4:	jne    0x405da2
  405db6:	mov    rcx,QWORD PTR [rsp+0x20]
  405dbb:	call   0x405740
  405dc0:	mov    eax,0xffffffff
  405dc5:	add    rsp,0x58
  405dc9:	pop    rbx
  405dca:	pop    rsi
  405dcb:	pop    rdi
  405dcc:	pop    rbp
  405dcd:	pop    r12
  405dcf:	pop    r13
  405dd1:	pop    r14
  405dd3:	pop    r15
  405dd5:	ret    
  405dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405de0:	test   BYTE PTR [rsi+0xa0],0x4
  405de7:	je     0x405cd2
  405ded:	lea    r8,[rsp+0x30]
  405df2:	mov    r9d,0x1
  405df8:	mov    edx,ebp
  405dfa:	mov    rcx,rsi
  405dfd:	call   0x4057f0
  405e02:	mov    DWORD PTR [rsp+0x28],eax
  405e06:	mov    eax,DWORD PTR [rsp+0x28]
  405e0a:	test   eax,eax
  405e0c:	jle    0x405dc0
  405e0e:	movsxd rcx,eax
  405e11:	shl    rcx,0x3
  405e15:	call   0x429538
  405e1a:	test   rax,rax
  405e1d:	mov    rbx,rax
  405e20:	je     0x405f7e
  405e26:	mov    r8,rax
  405e29:	mov    eax,DWORD PTR [rsp+0x28]
  405e2d:	mov    r9,QWORD PTR [rsp+0x30]
  405e32:	sub    eax,0x1
  405e35:	lea    r11,[rbx+rax*8+0x8]
  405e3a:	nop    WORD PTR [rax+rax*1+0x0]
  405e40:	mov    r10,QWORD PTR [r9]
  405e43:	add    r8,0x8
  405e47:	mov    QWORD PTR [r8-0x8],r10
  405e4b:	cmp    r8,r11
  405e4e:	mov    r9,QWORD PTR [r9+0x8]
  405e52:	jne    0x405e40
  405e54:	mov    rcx,rsi
  405e57:	call   0x40ce80
  405e5c:	cmp    al,0xa5
  405e5e:	je     0x405f00
  405e64:	mov    rcx,rsi
  405e67:	xor    esi,esi
  405e69:	call   0x40ced0
  405e6e:	mov    rcx,rbx
  405e71:	call   0x429580
  405e76:	mov    rcx,QWORD PTR [rsp+0x30]
  405e7b:	call   0x405740
  405e80:	mov    eax,esi
  405e82:	jmp    0x405dc5
  405e87:	nop    WORD PTR [rax+rax*1+0x0]
  405e90:	mov    rcx,r12
  405e93:	call   0x429538
  405e98:	test   rax,rax
  405e9b:	mov    rbx,rax
  405e9e:	je     0x405f31
  405ea4:	mov    QWORD PTR [r14],rax
  405ea7:	xor    edi,edi
  405ea9:	mov    r8,QWORD PTR [r15+rdi*8]
  405ead:	mov    rdx,rbx
  405eb0:	mov    r9d,0xffffffff
  405eb6:	mov    rcx,rsi
  405eb9:	call   0x41abc0
  405ebe:	mov    rcx,QWORD PTR [r15+rdi*8]
  405ec2:	add    rax,rbx
  405ec5:	add    rdi,0x1
  405ec9:	mov    BYTE PTR [rax],0x2e
  405ecc:	lea    rbx,[rax+0x1]
  405ed0:	call   0x429580
  405ed5:	cmp    r13d,edi
  405ed8:	jg     0x405ea9
  405eda:	add    DWORD PTR [rsp+0x28],0x1
  405edf:	test   ebp,ebp
  405ee1:	mov    BYTE PTR [rbx-0x1],0x0
  405ee5:	mov    rbx,r14
  405ee8:	jg     0x405cf2
  405eee:	mov    rax,QWORD PTR [rsp+0x20]
  405ef3:	mov    QWORD PTR [rsp+0x30],rax
  405ef8:	jmp    0x405e06
  405efd:	nop    DWORD PTR [rax]
  405f00:	mov    r8d,DWORD PTR [rsp+0x28]
  405f05:	mov    rcx,rsi
  405f08:	mov    rdx,rbx
  405f0b:	call   0x405a70
  405f10:	mov    esi,eax
  405f12:	jmp    0x405e6e
  405f17:	nop    WORD PTR [rax+rax*1+0x0]
  405f20:	mov    QWORD PTR [rsp+0x20],rax
  405f25:	jmp    0x405d24
  405f2a:	sub    eax,0x1
  405f2d:	mov    DWORD PTR [rsp+0x2c],eax
  405f31:	mov    edi,DWORD PTR [rsp+0x2c]
  405f35:	movsxd rax,edi
  405f38:	mov    rcx,QWORD PTR [rsp+rax*8+0x30]
  405f3d:	call   0x429580
  405f42:	test   edi,edi
  405f44:	mov    eax,edi
  405f46:	jne    0x405f2a
  405f48:	jmp    0x405db6
  405f4d:	xor    ecx,ecx
  405f4f:	call   0x429538
  405f54:	test   rax,rax
  405f57:	mov    rbx,rax
  405f5a:	je     0x405db6
  405f60:	mov    QWORD PTR [r14],rbx
  405f63:	jmp    0x405eda
  405f68:	nop    DWORD PTR [rax+rax*1+0x0]
  405f70:	mov    QWORD PTR [rsp+0x20],0x0
  405f79:	jmp    0x405eee
  405f7e:	mov    rcx,QWORD PTR [rsp+0x30]
  405f83:	call   0x405740
  405f88:	jmp    0x405dc0
  405f8d:	nop    DWORD PTR [rax]
  405f90:	push   rbp
  405f91:	push   r14
  405f93:	push   r13
  405f95:	push   r12
  405f97:	push   rdi
  405f98:	push   rsi
  405f99:	push   rbx
  405f9a:	mov    rbp,rsp
  405f9d:	sub    rsp,0x20
  405fa1:	mov    rsi,QWORD PTR [rcx+0x110]
  405fa8:	test   rsi,rsi
  405fab:	je     0x40604b
  405fb1:	movzx  eax,WORD PTR [rsi+0x8]
  405fb5:	mov    rdi,rcx
  405fb8:	test   ax,ax
  405fbb:	je     0x406090
  405fc1:	movzx  r8d,ax
  405fc5:	add    r8d,0x7
  405fc9:	sar    r8d,0x3
  405fcd:	movsxd r8,r8d
  405fd0:	lea    rax,[r8+0x1e]
  405fd4:	and    eax,0x7ff0
  405fd9:	call   0x428410
  405fde:	xor    ebx,ebx
  405fe0:	sub    rsp,rax
  405fe3:	mov    rcx,rdi
  405fe6:	lea    r12,[rsp+0x20]
  405feb:	mov    rdx,r12
  405fee:	call   0x40cf10
  405ff3:	cmp    WORD PTR [rsi+0x8],0x0
  405ff8:	mov    r13,QWORD PTR [rip+0x32bb1]        # 0x438bb0
  405fff:	jne    0x406016
  406001:	jmp    0x406080
  406003:	mov    DWORD PTR [r14+0x64],0xffffffff
  40600b:	movzx  eax,WORD PTR [rsi+0x8]
  40600f:	add    ebx,0x1
  406012:	cmp    eax,ebx
  406014:	jbe    0x406080
  406016:	mov    rdx,QWORD PTR [rsi]
  406019:	mov    eax,ebx
  40601b:	mov    r14,QWORD PTR [rdx+rax*8]
  40601f:	mov    eax,DWORD PTR [r13+0x0]
  406023:	test   eax,eax
  406025:	jne    0x406060
  406027:	mov    eax,ebx
  406029:	shr    eax,0x3
  40602c:	movsx  edx,BYTE PTR [r12+rax*1]
  406031:	mov    eax,ebx
  406033:	and    eax,0x7
  406036:	bt     edx,eax
  406039:	jb     0x406003
  40603b:	mov    rax,QWORD PTR [r14]
  40603e:	mov    rdx,r14
  406041:	mov    rcx,rdi
  406044:	call   QWORD PTR [rax+0x8]
  406047:	test   eax,eax
  406049:	jns    0x40600b
  40604b:	mov    eax,0xffffffff
  406050:	mov    rsp,rbp
  406053:	pop    rbx
  406054:	pop    rsi
  406055:	pop    rdi
  406056:	pop    r12
  406058:	pop    r13
  40605a:	pop    r14
  40605c:	pop    rbp
  40605d:	ret    
  40605e:	xchg   ax,ax
  406060:	lea    r8,[rip+0x274d1]        # 0x42d538
  406067:	lea    rcx,[rip+0x27482]        # 0x42d4f0
  40606e:	mov    r9d,ebx
  406071:	mov    edx,0x79b5
  406076:	call   0x423fa0
  40607b:	jmp    0x406027
  40607d:	nop    DWORD PTR [rax]
  406080:	xor    eax,eax
  406082:	mov    rsp,rbp
  406085:	pop    rbx
  406086:	pop    rsi
  406087:	pop    rdi
  406088:	pop    r12
  40608a:	pop    r13
  40608c:	pop    r14
  40608e:	pop    rbp
  40608f:	ret    
  406090:	lea    rdx,[rip+0x27459]        # 0x42d4f0
  406097:	lea    rcx,[rip+0x2745a]        # 0x42d4f8
  40609e:	mov    r8d,0x795
  4060a4:	call   0x4291e0
  4060a9:	movzx  eax,WORD PTR [rsi+0x8]
  4060ad:	jmp    0x405fc1
  4060b2:	nop    DWORD PTR [rax+0x0]
  4060b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4060c0:	push   rdi
  4060c1:	push   rsi
  4060c2:	push   rbx
  4060c3:	sub    rsp,0x40
  4060c7:	mov    rdi,QWORD PTR [rip+0x32ac2]        # 0x438b90
  4060ce:	mov    rbx,rdx
  4060d1:	mov    edx,DWORD PTR [rdx+0x1c]
  4060d4:	mov    rsi,rcx
  4060d7:	test   BYTE PTR [rdi+rdx*1],0x20
  4060db:	mov    rax,rdx
  4060de:	je     0x4060eb
  4060e0:	mov    rdx,QWORD PTR [rcx+0x68]
  4060e4:	mov    rdx,QWORD PTR [rdx]
  4060e7:	mov    QWORD PTR [rbx+0x28],rdx
  4060eb:	cmp    eax,0xe1
  4060f0:	je     0x406165
  4060f2:	mov    r8,QWORD PTR [rbx+0x28]
  4060f6:	test   r8,r8
  4060f9:	je     0x4061e2
  4060ff:	test   BYTE PTR [rsi+0xa0],0x2
  406106:	je     0x406132
  406108:	mov    r9d,DWORD PTR [rbx+0x10]
  40610c:	mov    eax,0x7fffffff
  406111:	cmp    r9d,0xfffffff
  406118:	mov    DWORD PTR [rbx+0x20],r9d
  40611c:	jle    0x406140
  40611e:	mov    rdx,QWORD PTR [rip+0x32a8b]        # 0x438bb0
  406125:	mov    DWORD PTR [rbx+0x10],eax
  406128:	mov    edx,DWORD PTR [rdx]
  40612a:	test   edx,edx
  40612c:	jne    0x4061b0
  406132:	add    rsp,0x40
  406136:	pop    rbx
  406137:	pop    rsi
  406138:	pop    rdi
  406139:	ret    
  40613a:	nop    WORD PTR [rax+rax*1+0x0]
  406140:	movzx  ecx,BYTE PTR [r8+0x21]
  406145:	movzx  r10d,BYTE PTR [r8+0x8]
  40614a:	imul   ecx,r9d
  40614e:	mov    eax,ecx
  406150:	cdq    
  406151:	idiv   r10d
  406154:	lea    eax,[rcx+r10*1]
  406158:	test   edx,edx
  40615a:	cmovne ecx,eax
  40615d:	mov    eax,ecx
  40615f:	cdq    
  406160:	idiv   r10d
  406163:	jmp    0x40611e
  406165:	mov    eax,DWORD PTR [rbx+0x8]
  406168:	sub    eax,0x22
  40616b:	cmp    eax,0x1
  40616e:	ja     0x4060f2
  406170:	mov    rax,QWORD PTR [rsi+0x68]
  406174:	lea    r8,[rip+0x28f64]        # 0x42f0df
  40617b:	mov    rcx,rsi
  40617e:	mov    rax,QWORD PTR [rax]
  406181:	mov    rdx,QWORD PTR [rax+0x18]
  406185:	call   0x41f1c0
  40618a:	test   rax,rax
  40618d:	mov    QWORD PTR [rbx+0x28],rax
  406191:	je     0x406221
  406197:	test   BYTE PTR [rsi+0xa0],0x2
  40619e:	mov    r8,rax
  4061a1:	jne    0x406108
  4061a7:	jmp    0x406132
  4061a9:	nop    DWORD PTR [rax+0x0]
  4061b0:	mov    DWORD PTR [rsp+0x30],eax
  4061b4:	mov    rax,QWORD PTR [r8+0x18]
  4061b8:	lea    rcx,[rip+0x27331]        # 0x42d4f0
  4061bf:	mov    DWORD PTR [rsp+0x20],r9d
  4061c4:	mov    edx,0xc585
  4061c9:	mov    QWORD PTR [rsp+0x28],rax
  4061ce:	mov    r9,QWORD PTR [r8]
  4061d1:	lea    r8,[rip+0x27390]        # 0x42d568
  4061d8:	call   0x423fa0
  4061dd:	jmp    0x406132
  4061e2:	cmp    WORD PTR [rsi],0x6ff
  4061e7:	jbe    0x406132
  4061ed:	mov    eax,DWORD PTR [rbx+0x1c]
  4061f0:	test   BYTE PTR [rdi+rax*1],0x10
  4061f4:	je     0x406132
  4061fa:	mov    rax,QWORD PTR [rsi+0x68]
  4061fe:	mov    r8,QWORD PTR [rax+0x8]
  406202:	mov    QWORD PTR [rbx+0x28],r8
  406206:	test   BYTE PTR [rsi+0xa0],0x2
  40620d:	je     0x406132
  406213:	test   r8,r8
  406216:	jne    0x406108
  40621c:	jmp    0x406132
  406221:	mov    rax,QWORD PTR [rsi+0x68]
  406225:	mov    r8,QWORD PTR [rax]
  406228:	mov    QWORD PTR [rbx+0x28],r8
  40622c:	jmp    0x4060f6
  406231:	nop    DWORD PTR [rax+rax*1+0x0]
  406236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406240:	push   r15
  406242:	push   r14
  406244:	push   r13
  406246:	push   r12
  406248:	push   rbp
  406249:	push   rdi
  40624a:	push   rsi
  40624b:	push   rbx
  40624c:	sub    rsp,0x48
  406250:	mov    r13,QWORD PTR [rip+0x32959]        # 0x438bb0
  406257:	mov    rbx,rcx
  40625a:	mov    r10d,DWORD PTR [r13+0x0]
  40625e:	test   r10d,r10d
  406261:	jne    0x40655c
  406267:	mov    rcx,rbx
  40626a:	call   0x404850
  40626f:	mov    rcx,rbx
  406272:	mov    QWORD PTR [rbx+0x150],0xffffffffffffffff
  40627d:	call   0x40cfd0
  406282:	mov    rcx,rbx
  406285:	call   0x40cfb0
  40628a:	movzx  esi,ax
  40628d:	mov    ecx,esi
  40628f:	call   0x404600
  406294:	test   rax,rax
  406297:	mov    rbp,rax
  40629a:	je     0x406408
  4062a0:	mov    rdx,rax
  4062a3:	mov    rcx,rbx
  4062a6:	call   0x401e30
  4062ab:	mov    rax,QWORD PTR [rbx+0x138]
  4062b2:	test   rax,rax
  4062b5:	je     0x406550
  4062bb:	mov    QWORD PTR [rax+0x48],rbp
  4062bf:	mov    r9d,DWORD PTR [r13+0x0]
  4062c3:	test   r9d,r9d
  4062c6:	jne    0x406579
  4062cc:	xor    edi,edi
  4062ce:	cmp    WORD PTR [rbp+0x8],0x0
  4062d3:	mov    r12,QWORD PTR [rip+0x328b6]        # 0x438b90
  4062da:	je     0x406472
  4062e0:	mov    rdx,QWORD PTR [rbp+0x0]
  4062e4:	movzx  eax,di
  4062e7:	mov    rcx,rbx
  4062ea:	mov    rsi,QWORD PTR [rdx+rax*8]
  4062ee:	call   0x40ce80
  4062f3:	mov    rcx,rbx
  4062f6:	movzx  r8d,al
  4062fa:	lea    r14,[rsi+0x38]
  4062fe:	lea    r15,[rsi+0x40]
  406302:	mov    rdx,r14
  406305:	call   0x40d1e0
  40630a:	mov    rcx,rbx
  40630d:	call   0x40ce80
  406312:	xor    edx,edx
  406314:	movzx  r8d,al
  406318:	mov    rcx,rbx
  40631b:	call   0x40cf10
  406320:	mov    rcx,rbx
  406323:	call   0x40ce80
  406328:	xor    edx,edx
  40632a:	movzx  r8d,al
  40632e:	mov    rcx,rbx
  406331:	call   0x40cf10
  406336:	mov    rcx,rbx
  406339:	call   0x40ce80
  40633e:	lea    rdx,[rsi+0x30]
  406342:	movzx  r8d,al
  406346:	mov    rcx,rbx
  406349:	call   0x40d1e0
  40634e:	mov    rcx,rbx
  406351:	call   0x40ce80
  406356:	mov    rdx,r15
  406359:	movzx  r8d,al
  40635d:	mov    rcx,rbx
  406360:	call   0x40d1e0
  406365:	mov    rax,QWORD PTR [rsi+0x38]
  406369:	cmp    QWORD PTR [rax],0x0
  40636d:	jne    0x406383
  40636f:	mov    rdx,r15
  406372:	mov    rcx,r14
  406375:	call   0x41f900
  40637a:	test   rax,rax
  40637d:	je     0x406408
  406383:	mov    rcx,rbx
  406386:	call   0x40cfd0
  40638b:	movzx  ecx,BYTE PTR [rsi+0x58]
  40638f:	mov    r8d,eax
  406392:	mov    DWORD PTR [rsi+0xc],eax
  406395:	mov    edx,r8d
  406398:	and    eax,0x1
  40639b:	and    edx,0x2
  40639e:	shl    eax,0x4
  4063a1:	and    ecx,0xffffffe7
  4063a4:	cmp    edx,0x1
  4063a7:	setg   dl
  4063aa:	or     eax,ecx
  4063ac:	shl    edx,0x3
  4063af:	or     eax,edx
  4063b1:	mov    edx,r8d
  4063b4:	and    edx,0x10
  4063b7:	cmp    edx,0x1
  4063ba:	mov    edx,r8d
  4063bd:	setg   cl
  4063c0:	and    edx,0x20
  4063c3:	and    eax,0xfffffffc
  4063c6:	add    ecx,ecx
  4063c8:	cmp    edx,0x1
  4063cb:	setg   dl
  4063ce:	and    r8d,0x40
  4063d2:	or     eax,ecx
  4063d4:	or     eax,edx
  4063d6:	cmp    r8d,0x1
  4063da:	mov    rcx,rbx
  4063dd:	setg   dl
  4063e0:	and    eax,0xfffffffb
  4063e3:	shl    edx,0x2
  4063e6:	or     eax,edx
  4063e8:	mov    BYTE PTR [rsi+0x58],al
  4063eb:	call   0x40cfd0
  4063f0:	mov    rcx,rbx
  4063f3:	mov    DWORD PTR [rsi+0x8],eax
  4063f6:	call   0x40ce80
  4063fb:	movzx  eax,al
  4063fe:	cmp    BYTE PTR [r12+rax*1],0x0
  406403:	mov    r8,rax
  406406:	jne    0x406420
  406408:	mov    eax,0xffffffff
  40640d:	add    rsp,0x48
  406411:	pop    rbx
  406412:	pop    rsi
  406413:	pop    rdi
  406414:	pop    rbp
  406415:	pop    r12
  406417:	pop    r13
  406419:	pop    r14
  40641b:	pop    r15
  40641d:	ret    
  40641e:	xchg   ax,ax
  406420:	mov    rdx,rsi
  406423:	mov    rcx,rbx
  406426:	call   0x421130
  40642b:	mov    rax,QWORD PTR [rsi]
  40642e:	mov    rdx,rsi
  406431:	mov    rcx,rbx
  406434:	call   QWORD PTR [rax]
  406436:	mov    eax,DWORD PTR [rsi+0x10]
  406439:	mov    rdx,rsi
  40643c:	mov    rcx,rbx
  40643f:	mov    DWORD PTR [rsi+0x20],eax
  406442:	call   0x4060c0
  406447:	mov    rcx,rbx
  40644a:	call   0x40ce80
  40644f:	xor    edx,edx
  406451:	movzx  r8d,al
  406455:	mov    rcx,rbx
  406458:	call   0x40cf10
  40645d:	mov    eax,DWORD PTR [r13+0x0]
  406461:	test   eax,eax
  406463:	jne    0x406490
  406465:	add    edi,0x1
  406468:	cmp    WORD PTR [rbp+0x8],di
  40646c:	ja     0x4062e0
  406472:	mov    rcx,rbp
  406475:	add    rsp,0x48
  406479:	pop    rbx
  40647a:	pop    rsi
  40647b:	pop    rdi
  40647c:	pop    rbp
  40647d:	pop    r12
  40647f:	pop    r13
  406481:	pop    r14
  406483:	pop    r15
  406485:	jmp    0x401ec0
  40648a:	nop    WORD PTR [rax+rax*1+0x0]
  406490:	lea    r8,[rip+0x2716b]        # 0x42d602
  406497:	lea    rcx,[rip+0x27052]        # 0x42d4f0
  40649e:	movzx  r9d,di
  4064a2:	mov    edx,0x7305
  4064a7:	call   0x423fa0
  4064ac:	mov    r8d,DWORD PTR [r13+0x0]
  4064b0:	test   r8d,r8d
  4064b3:	je     0x406465
  4064b5:	mov    r9,QWORD PTR [rsi+0x38]
  4064b9:	lea    rcx,[rip+0x27030]        # 0x42d4f0
  4064c0:	lea    r8,[rip+0x27144]        # 0x42d60b
  4064c7:	mov    edx,0x7315
  4064cc:	add    r9,0x8
  4064d0:	call   0x423fa0
  4064d5:	mov    ecx,DWORD PTR [r13+0x0]
  4064d9:	test   ecx,ecx
  4064db:	je     0x406465
  4064dd:	movzx  eax,BYTE PTR [rsi+0x18]
  4064e1:	mov    r9d,DWORD PTR [rsi+0xc]
  4064e5:	lea    r8,[rip+0x27134]        # 0x42d620
  4064ec:	lea    rcx,[rip+0x26ffd]        # 0x42d4f0
  4064f3:	mov    edx,0x7375
  4064f8:	mov    DWORD PTR [rsp+0x30],eax
  4064fc:	mov    eax,DWORD PTR [rsi+0x14]
  4064ff:	mov    DWORD PTR [rsp+0x28],eax
  406503:	mov    eax,DWORD PTR [rsi+0x8]
  406506:	mov    DWORD PTR [rsp+0x20],eax
  40650a:	call   0x423fa0
  40650f:	mov    edx,DWORD PTR [r13+0x0]
  406513:	test   edx,edx
  406515:	je     0x406465
  40651b:	movzx  eax,BYTE PTR [rsi+0x1a]
  40651f:	mov    r9d,DWORD PTR [rsi+0x10]
  406523:	lea    r8,[rip+0x2711c]        # 0x42d646
  40652a:	lea    rcx,[rip+0x26fbf]        # 0x42d4f0
  406531:	mov    edx,0x73a5
  406536:	mov    DWORD PTR [rsp+0x28],eax
  40653a:	movzx  eax,BYTE PTR [rsi+0x19]
  40653e:	mov    DWORD PTR [rsp+0x20],eax
  406542:	call   0x423fa0
  406547:	jmp    0x406465
  40654c:	nop    DWORD PTR [rax+0x0]
  406550:	mov    QWORD PTR [rbx+0x118],rbp
  406557:	jmp    0x4062bf
  40655c:	lea    r8,[rip+0x2707c]        # 0x42d5df
  406563:	lea    rcx,[rip+0x26f86]        # 0x42d4f0
  40656a:	mov    edx,0x6d65
  40656f:	call   0x423fa0
  406574:	jmp    0x406267
  406579:	lea    r8,[rip+0x27075]        # 0x42d5f5
  406580:	lea    rcx,[rip+0x26f69]        # 0x42d4f0
  406587:	mov    r9d,esi
  40658a:	mov    edx,0x6ee5
  40658f:	call   0x423fa0
  406594:	jmp    0x4062cc
  406599:	nop    DWORD PTR [rax+0x0]
  4065a0:	push   r13
  4065a2:	push   r12
  4065a4:	push   rbp
  4065a5:	push   rdi
  4065a6:	push   rsi
  4065a7:	push   rbx
  4065a8:	sub    rsp,0x48
  4065ac:	mov    rsi,rcx
  4065af:	call   0x40cfd0
  4065b4:	mov    rcx,rsi
  4065b7:	call   0x40cfb0
  4065bc:	movzx  ecx,ax
  4065bf:	call   0x404600
  4065c4:	test   rax,rax
  4065c7:	mov    rbp,rax
  4065ca:	je     0x406671
  4065d0:	mov    rbx,QWORD PTR [rsi+0x160]
  4065d7:	test   rbx,rbx
  4065da:	je     0x4067b0
  4065e0:	mov    rcx,QWORD PTR [rbx+0x30]
  4065e4:	call   0x4046c0
  4065e9:	mov    QWORD PTR [rbx+0x30],rbp
  4065ed:	mov    rdx,rbp
  4065f0:	mov    rcx,rsi
  4065f3:	xor    edi,edi
  4065f5:	call   0x401e30
  4065fa:	cmp    WORD PTR [rbp+0x8],0x0
  4065ff:	mov    r12,QWORD PTR [rip+0x3258a]        # 0x438b90
  406606:	mov    r13,QWORD PTR [rip+0x325a3]        # 0x438bb0
  40660d:	je     0x4066d7
  406613:	mov    rdx,QWORD PTR [rbp+0x0]
  406617:	mov    eax,edi
  406619:	mov    rcx,rsi
  40661c:	mov    rbx,QWORD PTR [rdx+rax*8]
  406620:	call   0x40ce80
  406625:	mov    rcx,rsi
  406628:	movzx  r8d,al
  40662c:	lea    rdx,[rbx+0x38]
  406630:	call   0x40d1e0
  406635:	mov    rcx,rsi
  406638:	call   0x40cfd0
  40663d:	movzx  edx,BYTE PTR [rbx+0x58]
  406641:	test   al,0x20
  406643:	mov    DWORD PTR [rbx+0xc],eax
  406646:	setne  al
  406649:	mov    rcx,rsi
  40664c:	and    edx,0xfffffffe
  40664f:	or     eax,edx
  406651:	mov    BYTE PTR [rbx+0x58],al
  406654:	call   0x40cfd0
  406659:	mov    rcx,rsi
  40665c:	mov    DWORD PTR [rbx+0x8],eax
  40665f:	call   0x40ce80
  406664:	movzx  eax,al
  406667:	cmp    BYTE PTR [r12+rax*1],0x0
  40666c:	mov    r8,rax
  40666f:	jne    0x406683
  406671:	mov    eax,0xffffffff
  406676:	add    rsp,0x48
  40667a:	pop    rbx
  40667b:	pop    rsi
  40667c:	pop    rdi
  40667d:	pop    rbp
  40667e:	pop    r12
  406680:	pop    r13
  406682:	ret    
  406683:	mov    rdx,rbx
  406686:	mov    rcx,rsi
  406689:	call   0x421130
  40668e:	mov    rax,QWORD PTR [rbx]
  406691:	mov    rdx,rbx
  406694:	mov    rcx,rsi
  406697:	call   QWORD PTR [rax]
  406699:	mov    eax,DWORD PTR [rbx+0x10]
  40669c:	mov    rdx,rbx
  40669f:	mov    rcx,rsi
  4066a2:	mov    DWORD PTR [rbx+0x20],eax
  4066a5:	call   0x4060c0
  4066aa:	mov    rcx,rsi
  4066ad:	call   0x40ce80
  4066b2:	xor    edx,edx
  4066b4:	movzx  r8d,al
  4066b8:	mov    rcx,rsi
  4066bb:	call   0x40cf10
  4066c0:	mov    eax,DWORD PTR [r13+0x0]
  4066c4:	test   eax,eax
  4066c6:	jne    0x4066f0
  4066c8:	movzx  eax,WORD PTR [rbp+0x8]
  4066cc:	add    edi,0x1
  4066cf:	cmp    eax,edi
  4066d1:	ja     0x406613
  4066d7:	mov    rcx,rbp
  4066da:	add    rsp,0x48
  4066de:	pop    rbx
  4066df:	pop    rsi
  4066e0:	pop    rdi
  4066e1:	pop    rbp
  4066e2:	pop    r12
  4066e4:	pop    r13
  4066e6:	jmp    0x401ec0
  4066eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4066f0:	lea    r8,[rip+0x26f6d]        # 0x42d664
  4066f7:	lea    rcx,[rip+0x26df2]        # 0x42d4f0
  4066fe:	mov    r9d,edi
  406701:	mov    edx,0xa505
  406706:	call   0x423fa0
  40670b:	mov    r8d,DWORD PTR [r13+0x0]
  40670f:	test   r8d,r8d
  406712:	je     0x4066c8
  406714:	mov    r9,QWORD PTR [rbx+0x38]
  406718:	lea    rcx,[rip+0x26dd1]        # 0x42d4f0
  40671f:	lea    r8,[rip+0x26ee5]        # 0x42d60b
  406726:	mov    edx,0xa515
  40672b:	add    r9,0x8
  40672f:	call   0x423fa0
  406734:	mov    ecx,DWORD PTR [r13+0x0]
  406738:	test   ecx,ecx
  40673a:	je     0x4066c8
  40673c:	movzx  eax,BYTE PTR [rbx+0x18]
  406740:	mov    r9d,DWORD PTR [rbx+0xc]
  406744:	lea    r8,[rip+0x26ed5]        # 0x42d620
  40674b:	lea    rcx,[rip+0x26d9e]        # 0x42d4f0
  406752:	mov    edx,0xa525
  406757:	mov    DWORD PTR [rsp+0x30],eax
  40675b:	mov    eax,DWORD PTR [rbx+0x14]
  40675e:	mov    DWORD PTR [rsp+0x28],eax
  406762:	mov    eax,DWORD PTR [rbx+0x8]
  406765:	mov    DWORD PTR [rsp+0x20],eax
  406769:	call   0x423fa0
  40676e:	mov    edx,DWORD PTR [r13+0x0]
  406772:	test   edx,edx
  406774:	je     0x4066c8
  40677a:	movzx  eax,BYTE PTR [rbx+0x1a]
  40677e:	mov    r9d,DWORD PTR [rbx+0x10]
  406782:	lea    r8,[rip+0x26ebd]        # 0x42d646
  406789:	lea    rcx,[rip+0x26d60]        # 0x42d4f0
  406790:	mov    edx,0xa545
  406795:	mov    DWORD PTR [rsp+0x28],eax
  406799:	movzx  eax,BYTE PTR [rbx+0x19]
  40679d:	mov    DWORD PTR [rsp+0x20],eax
  4067a1:	call   0x423fa0
  4067a6:	jmp    0x4066c8
  4067ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4067b0:	mov    rcx,QWORD PTR [rsi+0x130]
  4067b7:	call   0x4046c0
  4067bc:	mov    QWORD PTR [rsi+0x130],rbp
  4067c3:	jmp    0x4065ed
  4067c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4067d0:	push   rsi
  4067d1:	push   rbx
  4067d2:	sub    rsp,0x28
  4067d6:	mov    rbx,QWORD PTR [rcx+0x58]
  4067da:	mov    rsi,rdx
  4067dd:	test   rbx,rbx
  4067e0:	jne    0x4067ec
  4067e2:	jmp    0x406810
  4067e4:	mov    rbx,QWORD PTR [rbx]
  4067e7:	test   rbx,rbx
  4067ea:	je     0x406810
  4067ec:	lea    rcx,[rbx+0x10]
  4067f0:	mov    rdx,rsi
  4067f3:	call   0x4294b0
  4067f8:	test   eax,eax
  4067fa:	jne    0x4067e4
  4067fc:	mov    rax,rbx
  4067ff:	add    rsp,0x28
  406803:	pop    rbx
  406804:	pop    rsi
  406805:	ret    
  406806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406810:	xor    eax,eax
  406812:	add    rsp,0x28
  406816:	pop    rbx
  406817:	pop    rsi
  406818:	ret    
  406819:	nop    DWORD PTR [rax+0x0]
  406820:	cmp    ecx,0x7c
  406823:	je     0x406841
  406825:	jg     0x406833
  406827:	cmp    ecx,0x79
  40682a:	mov    eax,0x4
  40682f:	jne    0x40683e
  406831:	repz ret 
  406833:	sub    ecx,0xfd
  406839:	cmp    ecx,0x2
  40683c:	jbe    0x406841
  40683e:	xor    eax,eax
  406840:	ret    
  406841:	mov    eax,0x8
  406846:	ret    
  406847:	nop    WORD PTR [rax+rax*1+0x0]
  406850:	sub    ecx,0x1f
  406853:	cmp    ecx,0xd2
  406859:	ja     0x406bb0
  40685f:	lea    rax,[rip+0x26fca]        # 0x42d830
  406866:	movsxd rdx,DWORD PTR [rax+rcx*4]
  40686a:	add    rax,rdx
  40686d:	jmp    rax
  40686f:	nop
  406870:	lea    rax,[rip+0x26f87]        # 0x42d7fe
  406877:	ret    
  406878:	nop    DWORD PTR [rax+rax*1+0x0]
  406880:	lea    rax,[rip+0x26f72]        # 0x42d7f9
  406887:	ret    
  406888:	nop    DWORD PTR [rax+rax*1+0x0]
  406890:	lea    rax,[rip+0x26589]        # 0x42ce20
  406897:	ret    
  406898:	nop    DWORD PTR [rax+rax*1+0x0]
  4068a0:	lea    rax,[rip+0x26e2f]        # 0x42d6d6
  4068a7:	ret    
  4068a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4068b0:	lea    rax,[rip+0x26dd6]        # 0x42d68d
  4068b7:	ret    
  4068b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4068c0:	lea    rax,[rip+0x26db9]        # 0x42d680
  4068c7:	ret    
  4068c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4068d0:	lea    rax,[rip+0x26561]        # 0x42ce38
  4068d7:	ret    
  4068d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4068e0:	lea    rax,[rip+0x26549]        # 0x42ce30
  4068e7:	ret    
  4068e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4068f0:	lea    rax,[rip+0x2653d]        # 0x42ce34
  4068f7:	ret    
  4068f8:	nop    DWORD PTR [rax+rax*1+0x0]
  406900:	lea    rax,[rip+0x2651e]        # 0x42ce25
  406907:	ret    
  406908:	nop    DWORD PTR [rax+rax*1+0x0]
  406910:	lea    rax,[rip+0x26e0b]        # 0x42d722
  406917:	ret    
  406918:	nop    DWORD PTR [rax+rax*1+0x0]
  406920:	lea    rax,[rip+0x26dee]        # 0x42d715
  406927:	ret    
  406928:	nop    DWORD PTR [rax+rax*1+0x0]
  406930:	lea    rax,[rip+0x26dcc]        # 0x42d703
  406937:	ret    
  406938:	nop    DWORD PTR [rax+rax*1+0x0]
  406940:	lea    rax,[rip+0x26dab]        # 0x42d6f2
  406947:	ret    
  406948:	nop    DWORD PTR [rax+rax*1+0x0]
  406950:	lea    rax,[rip+0x26d68]        # 0x42d6bf
  406957:	ret    
  406958:	nop    DWORD PTR [rax+rax*1+0x0]
  406960:	lea    rax,[rip+0x26d39]        # 0x42d6a0
  406967:	ret    
  406968:	nop    DWORD PTR [rax+rax*1+0x0]
  406970:	lea    rax,[rip+0x26dd3]        # 0x42d74a
  406977:	ret    
  406978:	nop    DWORD PTR [rax+rax*1+0x0]
  406980:	lea    rax,[rip+0x26df5]        # 0x42d77c
  406987:	ret    
  406988:	nop    DWORD PTR [rax+rax*1+0x0]
  406990:	lea    rax,[rip+0x26e5e]        # 0x42d7f5
  406997:	ret    
  406998:	nop    DWORD PTR [rax+rax*1+0x0]
  4069a0:	lea    rax,[rip+0x26dfa]        # 0x42d7a1
  4069a7:	ret    
  4069a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4069b0:	lea    rax,[rip+0x26d7b]        # 0x42d732
  4069b7:	ret    
  4069b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4069c0:	lea    rax,[rip+0x26e0a]        # 0x42d7d1
  4069c7:	ret    
  4069c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4069d0:	lea    rax,[rip+0x26c9e]        # 0x42d675
  4069d7:	ret    
  4069d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4069e0:	lea    rax,[rip+0x26e35]        # 0x42d81c
  4069e7:	ret    
  4069e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4069f0:	lea    rax,[rip+0x26cce]        # 0x42d6c5
  4069f7:	ret    
  4069f8:	nop    DWORD PTR [rax+rax*1+0x0]
  406a00:	lea    rax,[rip+0x26d6d]        # 0x42d774
  406a07:	ret    
  406a08:	nop    DWORD PTR [rax+rax*1+0x0]
  406a10:	lea    rax,[rip+0x26ca0]        # 0x42d6b7
  406a17:	ret    
  406a18:	nop    DWORD PTR [rax+rax*1+0x0]
  406a20:	lea    rax,[rip+0x26c5d]        # 0x42d684
  406a27:	ret    
  406a28:	nop    DWORD PTR [rax+rax*1+0x0]
  406a30:	lea    rax,[rip+0x26d87]        # 0x42d7be
  406a37:	ret    
  406a38:	nop    DWORD PTR [rax+rax*1+0x0]
  406a40:	lea    rax,[rip+0x26d6f]        # 0x42d7b6
  406a47:	ret    
  406a48:	nop    DWORD PTR [rax+rax*1+0x0]
  406a50:	lea    rax,[rip+0x26d95]        # 0x42d7ec
  406a57:	ret    
  406a58:	nop    DWORD PTR [rax+rax*1+0x0]
  406a60:	lea    rax,[rip+0x26d7a]        # 0x42d7e1
  406a67:	ret    
  406a68:	nop    DWORD PTR [rax+rax*1+0x0]
  406a70:	lea    rax,[rip+0x26c74]        # 0x42d6eb
  406a77:	ret    
  406a78:	nop    DWORD PTR [rax+rax*1+0x0]
  406a80:	lea    rax,[rip+0x26cb8]        # 0x42d73f
  406a87:	ret    
  406a88:	nop    DWORD PTR [rax+rax*1+0x0]
  406a90:	lea    rax,[rip+0x26c12]        # 0x42d6a9
  406a97:	ret    
  406a98:	nop    DWORD PTR [rax+rax*1+0x0]
  406aa0:	lea    rax,[rip+0x26ca9]        # 0x42d750
  406aa7:	ret    
  406aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  406ab0:	lea    rax,[rip+0x26ce0]        # 0x42d797
  406ab7:	ret    
  406ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  406ac0:	lea    rax,[rip+0x26cbf]        # 0x42d786
  406ac7:	ret    
  406ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  406ad0:	lea    rax,[rip+0x26caa]        # 0x42d781
  406ad7:	ret    
  406ad8:	nop    DWORD PTR [rax+rax*1+0x0]
  406ae0:	lea    rax,[rip+0x26be9]        # 0x42d6d0
  406ae7:	ret    
  406ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  406af0:	lea    rax,[rip+0x26cba]        # 0x42d7b1
  406af7:	ret    
  406af8:	nop    DWORD PTR [rax+rax*1+0x0]
  406b00:	lea    rax,[rip+0x26b67]        # 0x42d66e
  406b07:	ret    
  406b08:	nop    DWORD PTR [rax+rax*1+0x0]
  406b10:	lea    rax,[rip+0x26cf6]        # 0x42d80d
  406b17:	ret    
  406b18:	nop    DWORD PTR [rax+rax*1+0x0]
  406b20:	lea    rax,[rip+0x26cdc]        # 0x42d803
  406b27:	ret    
  406b28:	nop    DWORD PTR [rax+rax*1+0x0]
  406b30:	lea    rax,[rip+0x26c8d]        # 0x42d7c4
  406b37:	ret    
  406b38:	nop    DWORD PTR [rax+rax*1+0x0]
  406b40:	lea    rax,[rip+0x26c1f]        # 0x42d766
  406b47:	ret    
  406b48:	nop    DWORD PTR [rax+rax*1+0x0]
  406b50:	lea    rax,[rip+0x26c04]        # 0x42d75b
  406b57:	ret    
  406b58:	nop    DWORD PTR [rax+rax*1+0x0]
  406b60:	lea    rax,[rip+0x26c42]        # 0x42d7a9
  406b67:	ret    
  406b68:	nop    DWORD PTR [rax+rax*1+0x0]
  406b70:	lea    rax,[rip+0x26b1b]        # 0x42d692
  406b77:	ret    
  406b78:	nop    DWORD PTR [rax+rax*1+0x0]
  406b80:	lea    rax,[rip+0x26b60]        # 0x42d6e7
  406b87:	ret    
  406b88:	nop    DWORD PTR [rax+rax*1+0x0]
  406b90:	lea    rax,[rip+0x26b47]        # 0x42d6de
  406b97:	ret    
  406b98:	nop    DWORD PTR [rax+rax*1+0x0]
  406ba0:	lea    rax,[rip+0x26c7d]        # 0x42d824
  406ba7:	ret    
  406ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  406bb0:	lea    rax,[rip+0x2626d]        # 0x42ce24
  406bb7:	ret    
  406bb8:	nop    DWORD PTR [rax+rax*1+0x0]
  406bc0:	push   rbp
  406bc1:	push   rdi
  406bc2:	push   rsi
  406bc3:	push   rbx
  406bc4:	sub    rsp,0x48
  406bc8:	mov    rdi,QWORD PTR [rip+0x31fe1]        # 0x438bb0
  406bcf:	mov    rsi,rcx
  406bd2:	mov    rbx,rdx
  406bd5:	mov    ebp,r8d
  406bd8:	mov    ecx,DWORD PTR [rdi]
  406bda:	test   ecx,ecx
  406bdc:	jne    0x406d60
  406be2:	mov    rcx,rsi
  406be5:	call   0x40ce80
  406bea:	lea    rdx,[rbx+0x38]
  406bee:	movzx  r8d,al
  406bf2:	mov    rcx,rsi
  406bf5:	call   0x40d1e0
  406bfa:	mov    rcx,rsi
  406bfd:	call   0x40ce80
  406c02:	test   ebp,ebp
  406c04:	movzx  edx,al
  406c07:	mov    DWORD PTR [rbx+0xc],edx
  406c0a:	jne    0x406c61
  406c0c:	cmp    WORD PTR [rsi],0x500
  406c11:	je     0x406d00
  406c17:	mov    edx,eax
  406c19:	movzx  r8d,BYTE PTR [rbx+0x58]
  406c1e:	mov    ecx,eax
  406c20:	and    edx,0x2
  406c23:	cmp    edx,0x1
  406c26:	setg   dl
  406c29:	and    ecx,0x10
  406c2c:	shl    edx,0x3
  406c2f:	and    r8d,0xfffffff5
  406c33:	cmp    ecx,0x1
  406c36:	setg   cl
  406c39:	or     edx,r8d
  406c3c:	add    ecx,ecx
  406c3e:	or     edx,ecx
  406c40:	mov    ecx,eax
  406c42:	and    ecx,0x20
  406c45:	cmp    ecx,0x1
  406c48:	setg   cl
  406c4b:	and    eax,0x40
  406c4e:	and    edx,0xfffffffa
  406c51:	cmp    eax,0x1
  406c54:	setg   al
  406c57:	or     edx,ecx
  406c59:	shl    eax,0x2
  406c5c:	or     edx,eax
  406c5e:	mov    BYTE PTR [rbx+0x58],dl
  406c61:	cmp    WORD PTR [rsi],0x701
  406c66:	ja     0x406ce2
  406c68:	mov    rcx,rsi
  406c6b:	call   0x40cfd0
  406c70:	mov    rcx,rsi
  406c73:	mov    DWORD PTR [rbx+0x8],eax
  406c76:	call   0x40ce80
  406c7b:	mov    rdx,QWORD PTR [rip+0x31f0e]        # 0x438b90
  406c82:	movzx  eax,al
  406c85:	mov    r8,rax
  406c88:	cmp    BYTE PTR [rdx+rax*1],0x0
  406c8c:	jne    0x406ca0
  406c8e:	mov    eax,0xffffffff
  406c93:	add    rsp,0x48
  406c97:	pop    rbx
  406c98:	pop    rsi
  406c99:	pop    rdi
  406c9a:	pop    rbp
  406c9b:	ret    
  406c9c:	nop    DWORD PTR [rax+0x0]
  406ca0:	mov    rdx,rbx
  406ca3:	mov    rcx,rsi
  406ca6:	call   0x421130
  406cab:	mov    eax,DWORD PTR [rdi]
  406cad:	test   eax,eax
  406caf:	jne    0x406d20
  406cb1:	mov    rax,QWORD PTR [rbx]
  406cb4:	mov    rdx,rbx
  406cb7:	mov    rcx,rsi
  406cba:	call   QWORD PTR [rax]
  406cbc:	mov    edx,DWORD PTR [rdi]
  406cbe:	test   edx,edx
  406cc0:	jne    0x406da4
  406cc6:	mov    eax,DWORD PTR [rbx+0x10]
  406cc9:	mov    rdx,rbx
  406ccc:	mov    rcx,rsi
  406ccf:	mov    DWORD PTR [rbx+0x20],eax
  406cd2:	call   0x4060c0
  406cd7:	xor    eax,eax
  406cd9:	add    rsp,0x48
  406cdd:	pop    rbx
  406cde:	pop    rsi
  406cdf:	pop    rdi
  406ce0:	pop    rbp
  406ce1:	ret    
  406ce2:	mov    r8d,0x2
  406ce8:	xor    edx,edx
  406cea:	mov    rcx,rsi
  406ced:	call   0x40cf10
  406cf2:	jmp    0x406c68
  406cf7:	nop    WORD PTR [rax+rax*1+0x0]
  406d00:	movzx  ecx,BYTE PTR [rbx+0x58]
  406d04:	mov    edx,eax
  406d06:	and    edx,0x1
  406d09:	shl    edx,0x4
  406d0c:	and    ecx,0xffffffef
  406d0f:	or     edx,ecx
  406d11:	mov    BYTE PTR [rbx+0x58],dl
  406d14:	jmp    0x406c17
  406d19:	nop    DWORD PTR [rax+0x0]
  406d20:	mov    ebp,DWORD PTR [rbx+0x14]
  406d23:	mov    ecx,ebp
  406d25:	call   0x406850
  406d2a:	movzx  edx,BYTE PTR [rbx+0x18]
  406d2e:	lea    r8,[rip+0x26e83]        # 0x42dbb8
  406d35:	lea    rcx,[rip+0x267b4]        # 0x42d4f0
  406d3c:	mov    QWORD PTR [rsp+0x20],rax
  406d41:	mov    r9d,ebp
  406d44:	mov    DWORD PTR [rsp+0x28],edx
  406d48:	mov    edx,0x6895
  406d4d:	call   0x423fa0
  406d52:	jmp    0x406cb1
  406d57:	nop    WORD PTR [rax+rax*1+0x0]
  406d60:	lea    rdx,[rip+0x260bd]        # 0x42ce24
  406d67:	lea    rax,[rip+0x26e0e]        # 0x42db7c
  406d6e:	test   r8d,r8d
  406d71:	mov    DWORD PTR [rsp+0x28],r8d
  406d76:	lea    rcx,[rip+0x26773]        # 0x42d4f0
  406d7d:	lea    r8,[rip+0x26e0c]        # 0x42db90
  406d84:	cmove  rax,rdx
  406d88:	mov    QWORD PTR [rsp+0x20],rbx
  406d8d:	mov    r9,rsi
  406d90:	mov    QWORD PTR [rsp+0x30],rax
  406d95:	mov    edx,0x64b5
  406d9a:	call   0x423fa0
  406d9f:	jmp    0x406be2
  406da4:	mov    r9d,DWORD PTR [rbx+0x10]
  406da8:	lea    r8,[rip+0x26e41]        # 0x42dbf0
  406daf:	lea    rcx,[rip+0x2673a]        # 0x42d4f0
  406db6:	mov    edx,0x68e5
  406dbb:	call   0x423fa0
  406dc0:	jmp    0x406cc6
  406dc5:	nop
  406dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406dd0:	push   rbp
  406dd1:	push   rdi
  406dd2:	push   rsi
  406dd3:	push   rbx
  406dd4:	sub    rsp,0x48
  406dd8:	mov    rbp,QWORD PTR [rip+0x31dd1]        # 0x438bb0
  406ddf:	mov    rsi,rcx
  406de2:	mov    rdi,rdx
  406de5:	mov    ecx,DWORD PTR [rbp+0x0]
  406de8:	test   ecx,ecx
  406dea:	jne    0x406e80
  406df0:	mov    rcx,rsi
  406df3:	call   0x40cfb0
  406df8:	mov    rcx,QWORD PTR [rdi]
  406dfb:	call   0x405110
  406e00:	test   rax,rax
  406e03:	je     0x406ec0
  406e09:	movzx  edx,WORD PTR [rax+0x8]
  406e0d:	mov    QWORD PTR [rdi],rax
  406e10:	mov    r8d,0x1
  406e16:	mov    rax,QWORD PTR [rax]
  406e19:	mov    rcx,rsi
  406e1c:	mov    rbx,QWORD PTR [rax+rdx*8-0x8]
  406e21:	mov    rdx,rbx
  406e24:	call   0x406bc0
  406e29:	mov    eax,DWORD PTR [rbx+0x10]
  406e2c:	mov    rcx,rbx
  406e2f:	mov    DWORD PTR [rbx+0x64],eax
  406e32:	call   0x401da0
  406e37:	test   rax,rax
  406e3a:	je     0x406ec0
  406e40:	mov    rax,QWORD PTR [rbx]
  406e43:	mov    rdx,rbx
  406e46:	mov    rcx,rsi
  406e49:	call   QWORD PTR [rax+0x8]
  406e4c:	mov    edx,DWORD PTR [rbp+0x0]
  406e4f:	test   edx,edx
  406e51:	jne    0x406ea5
  406e53:	mov    rdx,QWORD PTR [rbx+0x38]
  406e57:	cmp    QWORD PTR [rdx],0x0
  406e5b:	je     0x406e73
  406e5d:	cmp    BYTE PTR [rdx+0x8],0x40
  406e61:	je     0x406e73
  406e63:	mov    rcx,QWORD PTR [rdi]
  406e66:	mov    DWORD PTR [rsp+0x3c],eax
  406e6a:	call   0x401d20
  406e6f:	mov    eax,DWORD PTR [rsp+0x3c]
  406e73:	add    rsp,0x48
  406e77:	pop    rbx
  406e78:	pop    rsi
  406e79:	pop    rdi
  406e7a:	pop    rbp
  406e7b:	ret    
  406e7c:	nop    DWORD PTR [rax+0x0]
  406e80:	lea    r8,[rip+0x26d91]        # 0x42dc18
  406e87:	lea    rcx,[rip+0x26662]        # 0x42d4f0
  406e8e:	mov    QWORD PTR [rsp+0x20],rdx
  406e93:	mov    r9,rsi
  406e96:	mov    edx,0x4f37
  406e9b:	call   0x423fa0
  406ea0:	jmp    0x406df0
  406ea5:	mov    rcx,rbx
  406ea8:	mov    DWORD PTR [rsp+0x3c],eax
  406eac:	call   0x424320
  406eb1:	mov    eax,DWORD PTR [rsp+0x3c]
  406eb5:	jmp    0x406e53
  406eb7:	nop    WORD PTR [rax+rax*1+0x0]
  406ec0:	mov    eax,0xffffffff
  406ec5:	jmp    0x406e73
  406ec7:	nop    WORD PTR [rax+rax*1+0x0]
  406ed0:	push   rsi
  406ed1:	push   rbx
  406ed2:	sub    rsp,0x38
  406ed6:	mov    rdx,QWORD PTR [rcx+0x160]
  406edd:	lea    rax,[rcx+0x130]
  406ee4:	mov    rbx,rcx
  406ee7:	lea    rsi,[rdx+0x30]
  406eeb:	test   rdx,rdx
  406eee:	cmove  rsi,rax
  406ef2:	jmp    0x406eff
  406ef4:	mov    rdx,rsi
  406ef7:	mov    rcx,rbx
  406efa:	call   0x406dd0
  406eff:	mov    rcx,rbx
  406f02:	call   0x40ce80
  406f07:	movzx  eax,al
  406f0a:	cmp    eax,0xac
  406f0f:	je     0x406ef4
  406f11:	test   eax,eax
  406f13:	jne    0x406f30
  406f15:	mov    rdx,QWORD PTR [rip+0x31c94]        # 0x438bb0
  406f1c:	mov    eax,0xffffffff
  406f21:	mov    edx,DWORD PTR [rdx]
  406f23:	test   edx,edx
  406f25:	jne    0x406f4c
  406f27:	add    rsp,0x38
  406f2b:	pop    rbx
  406f2c:	pop    rsi
  406f2d:	ret    
  406f2e:	xchg   ax,ax
  406f30:	mov    rdx,QWORD PTR [rsi]
  406f33:	mov    rcx,rbx
  406f36:	call   0x401e30
  406f3b:	mov    rcx,rbx
  406f3e:	call   0x40ced0
  406f43:	xor    eax,eax
  406f45:	add    rsp,0x38
  406f49:	pop    rbx
  406f4a:	pop    rsi
  406f4b:	ret    
  406f4c:	lea    r8,[rip+0x26ced]        # 0x42dc40
  406f53:	lea    rcx,[rip+0x26596]        # 0x42d4f0
  406f5a:	mov    edx,0x5357
  406f5f:	mov    DWORD PTR [rsp+0x2c],eax
  406f63:	call   0x423fa0
  406f68:	mov    eax,DWORD PTR [rsp+0x2c]
  406f6c:	jmp    0x406f27
  406f6e:	xchg   ax,ax
  406f70:	push   rdi
  406f71:	push   rsi
  406f72:	push   rbx
  406f73:	sub    rsp,0x20
  406f77:	mov    rsi,rcx
  406f7a:	call   0x404850
  406f7f:	mov    rcx,rsi
  406f82:	mov    QWORD PTR [rsi+0x150],0xffffffffffffffff
  406f8d:	call   0x40cfb0
  406f92:	mov    rcx,rsi
  406f95:	call   0x40cfb0
  406f9a:	movzx  ecx,ax
  406f9d:	call   0x404600
  406fa2:	test   rax,rax
  406fa5:	mov    rdi,rax
  406fa8:	je     0x40701d
  406faa:	mov    rdx,rax
  406fad:	mov    rcx,rsi
  406fb0:	call   0x401e30
  406fb5:	mov    rax,QWORD PTR [rsi+0x138]
  406fbc:	test   rax,rax
  406fbf:	je     0x407014
  406fc1:	mov    QWORD PTR [rax+0x48],rdi
  406fc5:	xor    ebx,ebx
  406fc7:	cmp    WORD PTR [rdi+0x8],0x0
  406fcc:	je     0x407005
  406fce:	xchg   ax,ax
  406fd0:	mov    rax,QWORD PTR [rdi]
  406fd3:	mov    edx,ebx
  406fd5:	xor    r8d,r8d
  406fd8:	mov    rcx,rsi
  406fdb:	add    ebx,0x1
  406fde:	mov    rdx,QWORD PTR [rax+rdx*8]
  406fe2:	call   0x406bc0
  406fe7:	mov    rcx,rsi
  406fea:	call   0x40ce80
  406fef:	xor    edx,edx
  406ff1:	movzx  r8d,al
  406ff5:	mov    rcx,rsi
  406ff8:	call   0x40cf10
  406ffd:	movzx  eax,WORD PTR [rdi+0x8]
  407001:	cmp    eax,ebx
  407003:	ja     0x406fd0
  407005:	mov    rcx,rdi
  407008:	add    rsp,0x20
  40700c:	pop    rbx
  40700d:	pop    rsi
  40700e:	pop    rdi
  40700f:	jmp    0x401ec0
  407014:	mov    QWORD PTR [rsi+0x118],rdi
  40701b:	jmp    0x406fc5
  40701d:	mov    eax,0xffffffff
  407022:	add    rsp,0x20
  407026:	pop    rbx
  407027:	pop    rsi
  407028:	pop    rdi
  407029:	ret    
  40702a:	nop    WORD PTR [rax+rax*1+0x0]
  407030:	push   rdi
  407031:	push   rsi
  407032:	push   rbx
  407033:	sub    rsp,0x20
  407037:	mov    rsi,rcx
  40703a:	call   0x40cfb0
  40703f:	mov    rcx,rsi
  407042:	call   0x40cfb0
  407047:	movzx  ecx,ax
  40704a:	call   0x404600
  40704f:	test   rax,rax
  407052:	mov    rdi,rax
  407055:	je     0x4070f8
  40705b:	mov    rbx,QWORD PTR [rsi+0x160]
  407062:	test   rbx,rbx
  407065:	je     0x4070e0
  407067:	mov    rcx,QWORD PTR [rbx+0x30]
  40706b:	call   0x4046c0
  407070:	mov    QWORD PTR [rbx+0x30],rdi
  407074:	mov    rdx,rdi
  407077:	mov    rcx,rsi
  40707a:	xor    ebx,ebx
  40707c:	call   0x401e30
  407081:	cmp    WORD PTR [rdi+0x8],0x0
  407086:	je     0x4070c8
  407088:	nop    DWORD PTR [rax+rax*1+0x0]
  407090:	mov    rax,QWORD PTR [rdi]
  407093:	mov    edx,ebx
  407095:	mov    r8d,0x1
  40709b:	mov    rcx,rsi
  40709e:	add    ebx,0x1
  4070a1:	mov    rdx,QWORD PTR [rax+rdx*8]
  4070a5:	call   0x406bc0
  4070aa:	mov    rcx,rsi
  4070ad:	call   0x40ce80
  4070b2:	xor    edx,edx
  4070b4:	movzx  r8d,al
  4070b8:	mov    rcx,rsi
  4070bb:	call   0x40cf10
  4070c0:	movzx  eax,WORD PTR [rdi+0x8]
  4070c4:	cmp    eax,ebx
  4070c6:	ja     0x407090
  4070c8:	mov    rcx,rdi
  4070cb:	add    rsp,0x20
  4070cf:	pop    rbx
  4070d0:	pop    rsi
  4070d1:	pop    rdi
  4070d2:	jmp    0x401ec0
  4070d7:	nop    WORD PTR [rax+rax*1+0x0]
  4070e0:	mov    rcx,QWORD PTR [rsi+0x130]
  4070e7:	call   0x4046c0
  4070ec:	mov    QWORD PTR [rsi+0x130],rdi
  4070f3:	jmp    0x407074
  4070f8:	mov    eax,0xffffffff
  4070fd:	add    rsp,0x20
  407101:	pop    rbx
  407102:	pop    rsi
  407103:	pop    rdi
  407104:	ret    
  407105:	nop
  407106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407110:	push   rbp
  407111:	push   rdi
  407112:	push   rsi
  407113:	push   rbx
  407114:	sub    rsp,0x68
  407118:	mov    rsi,rcx
  40711b:	mov    rbx,rdx
  40711e:	cmp    WORD PTR [rsi],0x701
  407123:	jbe    0x4071a0
  407125:	call   0x40cfd0
  40712a:	mov    rcx,rsi
  40712d:	mov    DWORD PTR [rbx+0x8],eax
  407130:	call   0x40cfb0
  407135:	movzx  edx,BYTE PTR [rbx+0x58]
  407139:	cwde   
  40713a:	mov    r8d,eax
  40713d:	mov    DWORD PTR [rbx+0xc],eax
  407140:	and    eax,0x1
  407143:	and    edx,0xfffffffc
  407146:	test   r8b,0x8
  40714a:	setne  cl
  40714d:	or     eax,edx
  40714f:	add    ecx,ecx
  407151:	or     eax,ecx
  407153:	and    r8d,0x10
  407157:	mov    edx,eax
  407159:	setne  al
  40715c:	lea    ecx,[rax*4+0x0]
  407163:	mov    eax,edx
  407165:	and    eax,0xfffffffb
  407168:	or     eax,ecx
  40716a:	mov    rcx,rsi
  40716d:	mov    BYTE PTR [rbx+0x58],al
  407170:	call   0x40ce80
  407175:	mov    rdx,QWORD PTR [rip+0x31a14]        # 0x438b90
  40717c:	movzx  eax,al
  40717f:	mov    r8,rax
  407182:	cmp    BYTE PTR [rdx+rax*1],0x0
  407186:	jne    0x4071b0
  407188:	mov    eax,0xffffffff
  40718d:	add    rsp,0x68
  407191:	pop    rbx
  407192:	pop    rsi
  407193:	pop    rdi
  407194:	pop    rbp
  407195:	ret    
  407196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4071a0:	call   0x40cfb0
  4071a5:	cwde   
  4071a6:	jmp    0x40712a
  4071a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4071b0:	mov    rdx,rbx
  4071b3:	mov    rcx,rsi
  4071b6:	call   0x421130
  4071bb:	xor    eax,eax
  4071bd:	cmp    DWORD PTR [rbx+0x14],0x2d
  4071c1:	je     0x407284
  4071c7:	movzx  edx,BYTE PTR [rbx+0x58]
  4071cb:	shl    eax,0x6
  4071ce:	mov    rcx,rsi
  4071d1:	and    edx,0xffffffbf
  4071d4:	or     eax,edx
  4071d6:	mov    rdx,rbx
  4071d9:	mov    BYTE PTR [rbx+0x58],al
  4071dc:	mov    rax,QWORD PTR [rbx]
  4071df:	call   QWORD PTR [rax]
  4071e1:	mov    eax,DWORD PTR [rbx+0x10]
  4071e4:	mov    rdx,rbx
  4071e7:	mov    rcx,rsi
  4071ea:	mov    DWORD PTR [rbx+0x20],eax
  4071ed:	call   0x4060c0
  4071f2:	mov    rcx,rsi
  4071f5:	call   0x40ce80
  4071fa:	lea    rdx,[rbx+0x38]
  4071fe:	movzx  r8d,al
  407202:	mov    rcx,rsi
  407205:	call   0x40d1e0
  40720a:	mov    rax,QWORD PTR [rip+0x3199f]        # 0x438bb0
  407211:	mov    eax,DWORD PTR [rax]
  407213:	test   eax,eax
  407215:	je     0x40718d
  40721b:	mov    edi,DWORD PTR [rbx+0x1c]
  40721e:	mov    ecx,edi
  407220:	call   0x406850
  407225:	mov    esi,DWORD PTR [rbx+0x14]
  407228:	mov    rbp,rax
  40722b:	mov    ecx,esi
  40722d:	call   0x406850
  407232:	mov    rcx,rax
  407235:	mov    eax,DWORD PTR [rbx+0x20]
  407238:	mov    rdx,QWORD PTR [rbx+0x38]
  40723c:	mov    QWORD PTR [rsp+0x28],rcx
  407241:	lea    r8,[rip+0x26a30]        # 0x42dc78
  407248:	lea    rcx,[rip+0x262a1]        # 0x42d4f0
  40724f:	mov    QWORD PTR [rsp+0x38],rbp
  407254:	mov    DWORD PTR [rsp+0x30],edi
  407258:	mov    DWORD PTR [rsp+0x50],eax
  40725c:	mov    eax,DWORD PTR [rbx+0x10]
  40725f:	lea    r9,[rdx+0x8]
  407263:	mov    DWORD PTR [rsp+0x20],esi
  407267:	mov    edx,0x5e35
  40726c:	mov    DWORD PTR [rsp+0x48],eax
  407270:	movzx  eax,BYTE PTR [rbx+0x18]
  407274:	mov    DWORD PTR [rsp+0x40],eax
  407278:	call   0x423fa0
  40727d:	xor    eax,eax
  40727f:	jmp    0x40718d
  407284:	cmp    DWORD PTR [rbx+0x8],0x50
  407288:	sete   al
  40728b:	jmp    0x4071c7
  407290:	push   r13
  407292:	push   r12
  407294:	push   rbp
  407295:	push   rdi
  407296:	push   rsi
  407297:	push   rbx
  407298:	sub    rsp,0x58
  40729c:	mov    rbp,QWORD PTR [rip+0x3190d]        # 0x438bb0
  4072a3:	mov    rdi,rcx
  4072a6:	mov    ebx,DWORD PTR [rbp+0x0]
  4072a9:	test   ebx,ebx
  4072ab:	jne    0x4074a0
  4072b1:	mov    rcx,rdi
  4072b4:	call   0x40cfb0
  4072b9:	movsx  r13d,ax
  4072bd:	test   r13d,r13d
  4072c0:	js     0x407400
  4072c6:	mov    rcx,rdi
  4072c9:	call   0x404850
  4072ce:	mov    QWORD PTR [rdi+0x150],0xffffffffffffffff
  4072d9:	movzx  ecx,r13w
  4072dd:	call   0x404600
  4072e2:	test   rax,rax
  4072e5:	mov    rsi,rax
  4072e8:	je     0x407588
  4072ee:	mov    rdx,rax
  4072f1:	mov    rcx,rdi
  4072f4:	call   0x401e30
  4072f9:	mov    rax,QWORD PTR [rdi+0x138]
  407300:	test   rax,rax
  407303:	je     0x407420
  407309:	mov    rcx,QWORD PTR [rax+0x48]
  40730d:	call   0x4044b0
  407312:	mov    r11d,DWORD PTR [rbp+0x0]
  407316:	mov    rax,QWORD PTR [rdi+0x138]
  40731d:	test   r11d,r11d
  407320:	mov    QWORD PTR [rax+0x48],rsi
  407324:	jne    0x40756b
  40732a:	test   r13d,r13d
  40732d:	je     0x4073e3
  407333:	lea    eax,[r13-0x1]
  407337:	xor    ebx,ebx
  407339:	lea    r12,[rax*8+0x8]
  407341:	mov    rax,QWORD PTR [rsi]
  407344:	mov    rcx,rdi
  407347:	mov    rdx,QWORD PTR [rax+rbx*1]
  40734b:	add    rbx,0x8
  40734f:	call   0x407110
  407354:	cmp    rbx,r12
  407357:	jne    0x407341
  407359:	mov    r8d,DWORD PTR [rbp+0x0]
  40735d:	test   r8d,r8d
  407360:	jne    0x4074dc
  407366:	test   r13d,r13d
  407369:	je     0x4073e3
  40736b:	lea    eax,[r13-0x1]
  40736f:	xor    ebx,ebx
  407371:	lea    rdi,[rax*8+0x8]
  407379:	jmp    0x407389
  40737b:	nop    DWORD PTR [rax+rax*1+0x0]
  407380:	add    rbx,0x8
  407384:	cmp    rbx,rdi
  407387:	je     0x4073e3
  407389:	mov    edx,DWORD PTR [rbp+0x0]
  40738c:	mov    rax,QWORD PTR [rsi]
  40738f:	test   edx,edx
  407391:	mov    rax,QWORD PTR [rax+rbx*1]
  407395:	je     0x407380
  407397:	mov    ecx,DWORD PTR [rax+0x8]
  40739a:	mov    rdx,QWORD PTR [rax+0x38]
  40739e:	lea    r8,[rip+0x26a5e]        # 0x42de03
  4073a5:	add    rbx,0x8
  4073a9:	mov    DWORD PTR [rsp+0x40],ecx
  4073ad:	mov    ecx,DWORD PTR [rax+0x1c]
  4073b0:	lea    r9,[rdx+0x8]
  4073b4:	mov    edx,0x6315
  4073b9:	mov    DWORD PTR [rsp+0x38],ecx
  4073bd:	mov    ecx,DWORD PTR [rax+0x14]
  4073c0:	mov    DWORD PTR [rsp+0x30],ecx
  4073c4:	mov    ecx,DWORD PTR [rax+0x20]
  4073c7:	mov    DWORD PTR [rsp+0x28],ecx
  4073cb:	mov    eax,DWORD PTR [rax+0x10]
  4073ce:	lea    rcx,[rip+0x2611b]        # 0x42d4f0
  4073d5:	mov    DWORD PTR [rsp+0x20],eax
  4073d9:	call   0x423fa0
  4073de:	cmp    rbx,rdi
  4073e1:	jne    0x407389
  4073e3:	mov    rcx,rsi
  4073e6:	add    rsp,0x58
  4073ea:	pop    rbx
  4073eb:	pop    rsi
  4073ec:	pop    rdi
  4073ed:	pop    rbp
  4073ee:	pop    r12
  4073f0:	pop    r13
  4073f2:	jmp    0x401ec0
  4073f7:	nop    WORD PTR [rax+rax*1+0x0]
  407400:	mov    eax,DWORD PTR [rbp+0x0]
  407403:	test   eax,eax
  407405:	jne    0x4074bd
  40740b:	add    rsp,0x58
  40740f:	pop    rbx
  407410:	pop    rsi
  407411:	pop    rdi
  407412:	pop    rbp
  407413:	pop    r12
  407415:	pop    r13
  407417:	ret    
  407418:	nop    DWORD PTR [rax+rax*1+0x0]
  407420:	mov    r10d,DWORD PTR [rbp+0x0]
  407424:	mov    QWORD PTR [rdi+0x118],rsi
  40742b:	test   r10d,r10d
  40742e:	je     0x40732a
  407434:	lea    rdx,[rip+0x268c4]        # 0x42dcff
  40743b:	lea    rax,[rip+0x259e2]        # 0x42ce24
  407442:	cmp    r13d,0x1
  407446:	lea    r8,[rip+0x2691b]        # 0x42dd68
  40744d:	lea    rcx,[rip+0x2609c]        # 0x42d4f0
  407454:	mov    r9d,r13d
  407457:	cmovne rax,rdx
  40745b:	mov    edx,0x61b5
  407460:	mov    QWORD PTR [rsp+0x20],rax
  407465:	call   0x423fa0
  40746a:	mov    r9d,DWORD PTR [rbp+0x0]
  40746e:	test   r9d,r9d
  407471:	je     0x40732a
  407477:	lea    r8,[rip+0x2691e]        # 0x42dd9c
  40747e:	lea    rcx,[rip+0x2606b]        # 0x42d4f0
  407485:	mov    r9d,r13d
  407488:	mov    edx,0x6225
  40748d:	call   0x423fa0
  407492:	jmp    0x40732a
  407497:	nop    WORD PTR [rax+rax*1+0x0]
  4074a0:	lea    r8,[rip+0x26861]        # 0x42dd08
  4074a7:	lea    rcx,[rip+0x26042]        # 0x42d4f0
  4074ae:	mov    edx,0x6025
  4074b3:	call   0x423fa0
  4074b8:	jmp    0x4072b1
  4074bd:	lea    r8,[rip+0x26866]        # 0x42dd2a
  4074c4:	lea    rcx,[rip+0x26025]        # 0x42d4f0
  4074cb:	mov    edx,0x60b5
  4074d0:	call   0x423fa0
  4074d5:	xor    eax,eax
  4074d7:	jmp    0x40740b
  4074dc:	lea    rax,[rip+0x268ee]        # 0x42ddd1
  4074e3:	lea    rcx,[rip+0x26006]        # 0x42d4f0
  4074ea:	lea    r9,[rip+0x268c2]        # 0x42ddb3
  4074f1:	lea    r8,[rip+0x268c0]        # 0x42ddb8
  4074f8:	mov    edx,0x62b5
  4074fd:	mov    QWORD PTR [rsp+0x30],rax
  407502:	lea    rax,[rip+0x268ce]        # 0x42ddd7
  407509:	mov    QWORD PTR [rsp+0x28],rax
  40750e:	lea    rax,[rip+0x268cd]        # 0x42dde2
  407515:	mov    QWORD PTR [rsp+0x20],rax
  40751a:	call   0x423fa0
  40751f:	mov    ecx,DWORD PTR [rbp+0x0]
  407522:	test   ecx,ecx
  407524:	je     0x407366
  40752a:	lea    rax,[rip+0x27ba6]        # 0x42f0d7
  407531:	lea    r9,[rip+0x27b92]        # 0x42f0ca
  407538:	lea    r8,[rip+0x268ae]        # 0x42dded
  40753f:	lea    rcx,[rip+0x25faa]        # 0x42d4f0
  407546:	mov    edx,0x62c5
  40754b:	mov    QWORD PTR [rsp+0x30],rax
  407550:	lea    rax,[rip+0x27b78]        # 0x42f0cf
  407557:	mov    QWORD PTR [rsp+0x28],rax
  40755c:	mov    QWORD PTR [rsp+0x20],rax
  407561:	call   0x423fa0
  407566:	jmp    0x407366
  40756b:	lea    r8,[rip+0x267c6]        # 0x42dd38
  407572:	lea    rcx,[rip+0x25f77]        # 0x42d4f0
  407579:	mov    edx,0x6185
  40757e:	call   0x423fa0
  407583:	jmp    0x40746a
  407588:	mov    eax,0xffffffff
  40758d:	jmp    0x40740b
  407592:	nop    DWORD PTR [rax+0x0]
  407596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4075a0:	push   r14
  4075a2:	push   r13
  4075a4:	push   r12
  4075a6:	push   rbp
  4075a7:	push   rdi
  4075a8:	push   rsi
  4075a9:	push   rbx
  4075aa:	sub    rsp,0x30
  4075ae:	xor    edi,edi
  4075b0:	mov    rsi,rcx
  4075b3:	call   0x40cfb0
  4075b8:	mov    rbp,QWORD PTR [rsi+0x118]
  4075bf:	mov    r12,QWORD PTR [rip+0x315ca]        # 0x438b90
  4075c6:	mov    r13,QWORD PTR [rip+0x315e3]        # 0x438bb0
  4075cd:	cmp    WORD PTR [rbp+0x8],0x0
  4075d2:	je     0x407672
  4075d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4075e0:	mov    rdx,QWORD PTR [rbp+0x0]
  4075e4:	mov    eax,edi
  4075e6:	mov    rcx,rsi
  4075e9:	mov    rbx,QWORD PTR [rdx+rax*8]
  4075ed:	mov    edx,DWORD PTR [rsi+0x4]
  4075f0:	test   edx,edx
  4075f2:	js     0x407690
  4075f8:	call   0x40cfd0
  4075fd:	mov    DWORD PTR [rbx+0x8],eax
  407600:	mov    rcx,rsi
  407603:	call   0x40ce80
  407608:	movzx  eax,al
  40760b:	cmp    BYTE PTR [r12+rax*1],0x0
  407610:	mov    r8,rax
  407613:	jne    0x407630
  407615:	mov    eax,0xffffffff
  40761a:	add    rsp,0x30
  40761e:	pop    rbx
  40761f:	pop    rsi
  407620:	pop    rdi
  407621:	pop    rbp
  407622:	pop    r12
  407624:	pop    r13
  407626:	pop    r14
  407628:	ret    
  407629:	nop    DWORD PTR [rax+0x0]
  407630:	mov    rdx,rbx
  407633:	mov    rcx,rsi
  407636:	call   0x421130
  40763b:	mov    eax,DWORD PTR [r13+0x0]
  40763f:	test   eax,eax
  407641:	jne    0x4076e0
  407647:	mov    rax,QWORD PTR [rbx]
  40764a:	mov    rdx,rbx
  40764d:	mov    rcx,rsi
  407650:	add    edi,0x1
  407653:	call   QWORD PTR [rax]
  407655:	mov    eax,DWORD PTR [rbx+0x10]
  407658:	mov    rdx,rbx
  40765b:	mov    rcx,rsi
  40765e:	mov    DWORD PTR [rbx+0x20],eax
  407661:	call   0x4060c0
  407666:	movzx  eax,WORD PTR [rbp+0x8]
  40766a:	cmp    eax,edi
  40766c:	ja     0x4075e0
  407672:	mov    rcx,rbp
  407675:	add    rsp,0x30
  407679:	pop    rbx
  40767a:	pop    rsi
  40767b:	pop    rdi
  40767c:	pop    rbp
  40767d:	pop    r12
  40767f:	pop    r13
  407681:	pop    r14
  407683:	jmp    0x401ec0
  407688:	nop    DWORD PTR [rax+rax*1+0x0]
  407690:	call   0x40cfb0
  407695:	cwde   
  407696:	mov    rcx,rsi
  407699:	mov    DWORD PTR [rbx+0x8],eax
  40769c:	call   0x40cfb0
  4076a1:	movzx  edx,BYTE PTR [rbx+0x58]
  4076a5:	mov    r8d,eax
  4076a8:	and    eax,0x1
  4076ab:	and    edx,0xfffffffc
  4076ae:	test   r8b,0x8
  4076b2:	setne  cl
  4076b5:	or     eax,edx
  4076b7:	add    ecx,ecx
  4076b9:	or     eax,ecx
  4076bb:	and    r8d,0x10
  4076bf:	mov    edx,eax
  4076c1:	setne  al
  4076c4:	lea    ecx,[rax*4+0x0]
  4076cb:	mov    eax,edx
  4076cd:	and    eax,0xfffffffb
  4076d0:	or     eax,ecx
  4076d2:	mov    BYTE PTR [rbx+0x58],al
  4076d5:	jmp    0x407600
  4076da:	nop    WORD PTR [rax+rax*1+0x0]
  4076e0:	mov    r14d,DWORD PTR [rbx+0x14]
  4076e4:	mov    ecx,r14d
  4076e7:	call   0x406850
  4076ec:	movzx  edx,BYTE PTR [rbx+0x18]
  4076f0:	lea    r8,[rip+0x264c1]        # 0x42dbb8
  4076f7:	lea    rcx,[rip+0x25df2]        # 0x42d4f0
  4076fe:	mov    QWORD PTR [rsp+0x20],rax
  407703:	mov    r9d,r14d
  407706:	mov    DWORD PTR [rsp+0x28],edx
  40770a:	mov    edx,0x4155
  40770f:	call   0x423fa0
  407714:	jmp    0x407647
  407719:	nop    DWORD PTR [rax+0x0]
  407720:	push   r12
  407722:	push   rbp
  407723:	push   rdi
  407724:	push   rsi
  407725:	push   rbx
  407726:	sub    rsp,0x50
  40772a:	mov    rsi,QWORD PTR [rip+0x3147f]        # 0x438bb0
  407731:	mov    rbx,rcx
  407734:	mov    edi,edx
  407736:	mov    r8d,DWORD PTR [rsi]
  407739:	test   r8d,r8d
  40773c:	jne    0x4077a0
  40773e:	test   rcx,rcx
  407741:	je     0x4077e4
  407747:	cmp    DWORD PTR [rcx+0x148],0x5
  40774e:	je     0x4077e4
  407754:	lea    eax,[rdi-0x20]
  407757:	cmp    eax,0xdf
  40775c:	ja     0x407d00
  407762:	lea    r8,[rip+0x268f3]        # 0x42e05c
  407769:	movsxd rax,DWORD PTR [r8+rax*4]
  40776d:	add    r8,rax
  407770:	jmp    r8
  407773:	mov    ecx,DWORD PTR [rsi]
  407775:	test   ecx,ecx
  407777:	jne    0x407dc4
  40777d:	mov    rcx,rbx
  407780:	call   0x40cfb0
  407785:	xor    edx,edx
  407787:	movzx  r8d,ax
  40778b:	mov    rcx,rbx
  40778e:	call   0x40cf10
  407793:	xor    eax,eax
  407795:	add    rsp,0x50
  407799:	pop    rbx
  40779a:	pop    rsi
  40779b:	pop    rdi
  40779c:	pop    rbp
  40779d:	pop    r12
  40779f:	ret    
  4077a0:	movzx  ecx,dl
  4077a3:	call   0x4054a0
  4077a8:	lea    r8,[rip+0x26679]        # 0x42de28
  4077af:	lea    rcx,[rip+0x25d3a]        # 0x42d4f0
  4077b6:	mov    QWORD PTR [rsp+0x20],rax
  4077bb:	mov    r9d,edi
  4077be:	mov    edx,0x7d7
  4077c3:	call   0x423fa0
  4077c8:	test   rbx,rbx
  4077cb:	je     0x4077da
  4077cd:	cmp    DWORD PTR [rbx+0x148],0x5
  4077d4:	jne    0x407754
  4077da:	mov    ecx,DWORD PTR [rsi]
  4077dc:	test   ecx,ecx
  4077de:	jne    0x407fbf
  4077e4:	mov    rcx,rbx
  4077e7:	call   0x421ae0
  4077ec:	mov    eax,0xffffffff
  4077f1:	jmp    0x407795
  4077f3:	mov    edx,edi
  4077f5:	mov    rcx,rbx
  4077f8:	call   0x408640
  4077fd:	jmp    0x407795
  4077ff:	nop
  407800:	mov    r10d,DWORD PTR [rsi]
  407803:	test   r10d,r10d
  407806:	jne    0x407f41
  40780c:	cmp    WORD PTR [rbx],0x500
  407811:	je     0x40782c
  407813:	lea    rdx,[rip+0x25cd6]        # 0x42d4f0
  40781a:	lea    rcx,[rip+0x267b2]        # 0x42dfd3
  407821:	mov    r8d,0xb42
  407827:	call   0x4291e0
  40782c:	mov    rcx,rbx
  40782f:	call   0x40cfb0
  407834:	mov    rcx,rbx
  407837:	call   0x40ce80
  40783c:	mov    rcx,rbx
  40783f:	mov    ebp,eax
  407841:	call   0x40ce80
  407846:	mov    rcx,rbx
  407849:	mov    r12d,eax
  40784c:	call   0x40ce80
  407851:	cmp    al,0x1
  407853:	je     0x407db4
  407859:	jb     0x407dad
  40785f:	cmp    al,0x4
  407861:	jne    0x407d89
  407867:	mov    rcx,rbx
  40786a:	call   0x40cfd0
  40786f:	mov    r8d,DWORD PTR [rsi]
  407872:	test   r8d,r8d
  407875:	jne    0x407f73
  40787b:	cmp    bpl,0x4
  40787f:	jne    0x407d27
  407885:	mov    DWORD PTR [rbx+0x17c],eax
  40788b:	xor    eax,eax
  40788d:	jmp    0x407795
  407892:	xor    r8d,r8d
  407895:	xor    edx,edx
  407897:	mov    rcx,rbx
  40789a:	call   0x405a70
  40789f:	jmp    0x407795
  4078a4:	mov    rcx,rbx
  4078a7:	call   0x405ca0
  4078ac:	jmp    0x407795
  4078b1:	mov    rcx,rbx
  4078b4:	call   0x4075a0
  4078b9:	jmp    0x407795
  4078be:	xchg   ax,ax
  4078c0:	mov    rcx,rbx
  4078c3:	call   0x405980
  4078c8:	jmp    0x407795
  4078cd:	nop    DWORD PTR [rax]
  4078d0:	mov    rcx,rbx
  4078d3:	call   0x405c00
  4078d8:	jmp    0x407795
  4078dd:	nop    DWORD PTR [rax]
  4078e0:	mov    rcx,rbx
  4078e3:	call   0x407290
  4078e8:	jmp    0x407795
  4078ed:	nop    DWORD PTR [rax]
  4078f0:	mov    r8d,0x8
  4078f6:	xor    edx,edx
  4078f8:	mov    rcx,rbx
  4078fb:	call   0x40cf10
  407900:	xor    eax,eax
  407902:	jmp    0x407795
  407907:	nop    WORD PTR [rax+rax*1+0x0]
  407910:	mov    rcx,rbx
  407913:	call   0x40cfd0
  407918:	mov    rcx,rbx
  40791b:	mov    edi,eax
  40791d:	call   0x40cee0
  407922:	lea    ecx,[rax+0x3]
  407925:	cmp    cl,0x1
  407928:	jbe    0x407d31
  40792e:	cmp    al,0xac
  407930:	je     0x407d31
  407936:	xor    eax,eax
  407938:	add    rsp,0x50
  40793c:	pop    rbx
  40793d:	pop    rsi
  40793e:	pop    rdi
  40793f:	pop    rbp
  407940:	pop    r12
  407942:	ret    
  407943:	mov    rcx,rbx
  407946:	call   0x40ce80
  40794b:	movzx  esi,al
  40794e:	cmp    esi,0x2
  407951:	jle    0x407979
  407953:	mov    rcx,rbx
  407956:	sub    esi,0x3
  407959:	call   0x40ce80
  40795e:	mov    rcx,rbx
  407961:	call   0x40cfb0
  407966:	mov    rdx,QWORD PTR [rbx+0xc0]
  40796d:	movzx  r8d,ax
  407971:	mov    rcx,rbx
  407974:	call   0x4258a0
  407979:	movsxd r8,esi
  40797c:	xor    edx,edx
  40797e:	mov    rcx,rbx
  407981:	call   0x40cf10
  407986:	xor    eax,eax
  407988:	jmp    0x407795
  40798d:	nop    DWORD PTR [rax]
  407990:	mov    rcx,rbx
  407993:	call   0x406240
  407998:	jmp    0x407795
  40799d:	nop    DWORD PTR [rax]
  4079a0:	mov    edx,DWORD PTR [rsi]
  4079a2:	test   edx,edx
  4079a4:	jne    0x407ec7
  4079aa:	mov    rcx,rbx
  4079ad:	call   0x40cfd0
  4079b2:	xor    edx,edx
  4079b4:	mov    r8d,eax
  4079b7:	mov    rcx,rbx
  4079ba:	call   0x40cf10
  4079bf:	xor    eax,eax
  4079c1:	jmp    0x407938
  4079c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4079d0:	lea    rcx,[rbx+0x160]
  4079d7:	call   0x404700
  4079dc:	mov    rcx,rbx
  4079df:	call   0x4065a0
  4079e4:	jmp    0x407795
  4079e9:	nop    DWORD PTR [rax+0x0]
  4079f0:	lea    rdx,[rsp+0x48]
  4079f5:	mov    rcx,rbx
  4079f8:	call   0x40a410
  4079fd:	jmp    0x407795
  407a02:	mov    rcx,rbx
  407a05:	call   0x406f70
  407a0a:	jmp    0x407795
  407a0f:	nop
  407a10:	mov    rcx,rbx
  407a13:	call   0x40cfb0
  407a18:	mov    edx,DWORD PTR [rsi]
  407a1a:	test   edx,edx
  407a1c:	jne    0x407eee
  407a22:	mov    r9,QWORD PTR [rbx+0xc0]
  407a29:	test   r9,r9
  407a2c:	je     0x407d27
  407a32:	movzx  r8d,ax
  407a36:	mov    rdx,r9
  407a39:	mov    rcx,rbx
  407a3c:	call   QWORD PTR [r9+0x18]
  407a40:	jmp    0x407795
  407a45:	lea    rcx,[rbx+0x160]
  407a4c:	call   0x404700
  407a51:	mov    rcx,rbx
  407a54:	call   0x407030
  407a59:	jmp    0x407795
  407a5e:	xchg   ax,ax
  407a60:	mov    rcx,rbx
  407a63:	call   0x405f90
  407a68:	jmp    0x407795
  407a6d:	nop    DWORD PTR [rax]
  407a70:	mov    rcx,rbx
  407a73:	call   0x4058d0
  407a78:	jmp    0x407795
  407a7d:	nop    DWORD PTR [rax]
  407a80:	cmp    WORD PTR [rbx],0x703
  407a85:	jbe    0x407773
  407a8b:	jmp    0x407aa5
  407a8d:	nop    DWORD PTR [rax]
  407a90:	mov    rcx,rbx
  407a93:	call   0x40cfd0
  407a98:	xor    edx,edx
  407a9a:	mov    r8d,eax
  407a9d:	mov    rcx,rbx
  407aa0:	call   0x40cf10
  407aa5:	mov    rcx,rbx
  407aa8:	call   0x40ce80
  407aad:	cmp    al,0xff
  407aaf:	jne    0x407a90
  407ab1:	xor    eax,eax
  407ab3:	jmp    0x407938
  407ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  407ac0:	mov    rcx,rbx
  407ac3:	call   0x40ced0
  407ac8:	mov    rcx,rbx
  407acb:	call   0x406ed0
  407ad0:	jmp    0x407795
  407ad5:	mov    rcx,rbx
  407ad8:	lea    r12,[rbx+0x7d]
  407adc:	call   0x40cfb0
  407ae1:	movzx  esi,ax
  407ae4:	mov    QWORD PTR [rbx+0x7d],0x0
  407aec:	mov    QWORD PTR [r12+0x8],0x0
  407af5:	cmp    esi,0x1
  407af8:	mov    QWORD PTR [r12+0x10],0x0
  407b01:	mov    QWORD PTR [r12+0x18],0x0
  407b0a:	mov    BYTE PTR [rbx+0x7d],0x1
  407b0e:	mov    BYTE PTR [rbx+0x7e],0xe
  407b12:	mov    BYTE PTR [rbx+0x8d],0x2
  407b19:	mov    BYTE PTR [rbx+0x8e],0xe
  407b20:	jle    0x407936
  407b26:	mov    ebp,0xfffffffe
  407b2b:	jmp    0x407b43
  407b2d:	nop    DWORD PTR [rax]
  407b30:	xor    edx,edx
  407b32:	mov    rcx,rbx
  407b35:	call   0x40cf10
  407b3a:	cmp    esi,0x1
  407b3d:	jle    0x407936
  407b43:	mov    rcx,rbx
  407b46:	call   0x40ce80
  407b4b:	mov    rcx,rbx
  407b4e:	mov    edi,eax
  407b50:	call   0x40ce80
  407b55:	mov    edx,ebp
  407b57:	movzx  eax,al
  407b5a:	sub    edx,eax
  407b5c:	mov    r8,rax
  407b5f:	lea    eax,[rdi-0x1]
  407b62:	add    esi,edx
  407b64:	cmp    al,0x1
  407b66:	ja     0x407b30
  407b68:	cmp    r8b,0xe
  407b6c:	ja     0x407d70
  407b72:	movzx  edx,dil
  407b76:	mov    rcx,rbx
  407b79:	shl    rdx,0x4
  407b7d:	sub    rdx,r8
  407b80:	add    rdx,r12
  407b83:	call   0x40cf10
  407b88:	test   rax,rax
  407b8b:	je     0x407d27
  407b91:	cmp    dil,0x2
  407b95:	jne    0x407b3a
  407b97:	cmp    DWORD PTR [rbx+0x4],0xbffffff
  407b9e:	ja     0x407b3a
  407ba0:	xor    eax,eax
  407ba2:	jmp    0x407938
  407ba7:	nop    WORD PTR [rax+rax*1+0x0]
  407bb0:	mov    rcx,rbx
  407bb3:	call   0x405370
  407bb8:	jmp    0x407795
  407bbd:	nop    DWORD PTR [rax]
  407bc0:	mov    rcx,rbx
  407bc3:	mov    QWORD PTR [rsp+0x40],0x0
  407bcc:	mov    QWORD PTR [rsp+0x48],0x0
  407bd5:	call   0x40cfb0
  407bda:	movzx  ebp,ax
  407bdd:	test   ebp,ebp
  407bdf:	je     0x407f17
  407be5:	mov    rcx,rbx
  407be8:	call   0x40ce80
  407bed:	cmp    al,0x7
  407bef:	mov    edi,eax
  407bf1:	je     0x407e02
  407bf7:	cmp    al,0x8
  407bf9:	je     0x407fa0
  407bff:	lea    eax,[rdi-0x9]
  407c02:	cmp    al,0x1
  407c04:	jbe    0x408017
  407c0a:	cmp    dil,0x4
  407c0e:	jbe    0x407c1b
  407c10:	cmp    WORD PTR [rbx],0x700
  407c15:	ja     0x407f5e
  407c1b:	mov    rcx,rbx
  407c1e:	call   0x40ce80
  407c23:	lea    rdx,[rsp+0x48]
  407c28:	movzx  r8d,al
  407c2c:	mov    rcx,rbx
  407c2f:	call   0x405780
  407c34:	mov    rcx,rbx
  407c37:	mov    ebp,eax
  407c39:	call   0x40ce80
  407c3e:	lea    rdx,[rsp+0x40]
  407c43:	movzx  r8d,al
  407c47:	mov    rcx,rbx
  407c4a:	call   0x405780
  407c4f:	add    ebp,eax
  407c51:	jne    0x4080fc
  407c57:	cmp    dil,0x2
  407c5b:	je     0x407e8a
  407c61:	jbe    0x407ded
  407c67:	cmp    dil,0x3
  407c6b:	je     0x407e6a
  407c71:	cmp    dil,0x4
  407c75:	jne    0x407dfb
  407c7b:	mov    rcx,QWORD PTR [rsp+0x48]
  407c80:	xor    ebp,ebp
  407c82:	call   0x4295d0
  407c87:	cmp    eax,0x1ff
  407c8c:	jle    0x407ca5
  407c8e:	mov    ebp,DWORD PTR [rsi]
  407c90:	test   ebp,ebp
  407c92:	jne    0x408118
  407c98:	movsxd rdx,eax
  407c9b:	mov    rcx,rbx
  407c9e:	xor    ebp,ebp
  407ca0:	call   0x4025c0
  407ca5:	mov    rax,QWORD PTR [rbx+0x170]
  407cac:	test   rax,rax
  407caf:	je     0x407cc4
  407cb1:	movzx  edx,dil
  407cb5:	mov    r9,QWORD PTR [rsp+0x48]
  407cba:	mov    r8,QWORD PTR [rsp+0x40]
  407cbf:	mov    rcx,rbx
  407cc2:	call   rax
  407cc4:	mov    rcx,QWORD PTR [rsp+0x40]
  407cc9:	call   0x429580
  407cce:	mov    rcx,QWORD PTR [rsp+0x48]
  407cd3:	test   rcx,rcx
  407cd6:	je     0x407936
  407cdc:	test   rbp,rbp
  407cdf:	je     0x407e93
  407ce5:	mov    rcx,QWORD PTR [rbp+0x0]
  407ce9:	call   0x429580
  407cee:	mov    rax,QWORD PTR [rsp+0x48]
  407cf3:	mov    QWORD PTR [rbp+0x0],rax
  407cf7:	xor    eax,eax
  407cf9:	jmp    0x407795
  407cfe:	xchg   ax,ax
  407d00:	mov    rcx,rbx
  407d03:	call   0x421ae0
  407d08:	mov    rcx,QWORD PTR [rbx+0x28]
  407d0c:	xor    r9d,r9d
  407d0f:	mov    r8d,0x4e34
  407d15:	mov    rdx,rbx
  407d18:	call   0x40a8d0
  407d1d:	mov    eax,DWORD PTR [rsi]
  407d1f:	test   eax,eax
  407d21:	jne    0x407e9f
  407d27:	mov    eax,0xffffffff
  407d2c:	jmp    0x407795
  407d31:	mov    r11d,DWORD PTR [rsi]
  407d34:	mov    BYTE PTR [rbx+0x141],0x1
  407d3b:	mov    DWORD PTR [rbx+0x144],edi
  407d41:	test   r11d,r11d
  407d44:	je     0x407936
  407d4a:	lea    r8,[rip+0x26237]        # 0x42df88
  407d51:	lea    rcx,[rip+0x25798]        # 0x42d4f0
  407d58:	mov    r9d,edi
  407d5b:	mov    edx,0x9b5
  407d60:	call   0x423fa0
  407d65:	xor    eax,eax
  407d67:	jmp    0x407795
  407d6c:	nop    DWORD PTR [rax+0x0]
  407d70:	sub    r8,0xe
  407d74:	xor    edx,edx
  407d76:	mov    rcx,rbx
  407d79:	call   0x40cf10
  407d7e:	mov    r8d,0xe
  407d84:	jmp    0x407b72
  407d89:	mov    r9d,DWORD PTR [rsi]
  407d8c:	test   r9d,r9d
  407d8f:	jne    0x40802f
  407d95:	movzx  r8d,al
  407d99:	xor    edx,edx
  407d9b:	mov    rcx,rbx
  407d9e:	call   0x40cf10
  407da3:	mov    eax,0xffffffff
  407da8:	jmp    0x407795
  407dad:	xor    eax,eax
  407daf:	jmp    0x40786f
  407db4:	mov    rcx,rbx
  407db7:	call   0x40ce80
  407dbc:	movzx  eax,al
  407dbf:	jmp    0x40786f
  407dc4:	movzx  ecx,dil
  407dc8:	call   0x4054a0
  407dcd:	lea    r8,[rip+0x2625c]        # 0x42e030
  407dd4:	lea    rcx,[rip+0x25715]        # 0x42d4f0
  407ddb:	mov    r9,rax
  407dde:	mov    edx,0xf43
  407de3:	call   0x423fa0
  407de8:	jmp    0x40777d
  407ded:	cmp    dil,0x1
  407df1:	lea    rbp,[rbx+0x48]
  407df5:	je     0x407ca5
  407dfb:	xor    ebp,ebp
  407dfd:	jmp    0x407ca5
  407e02:	mov    rcx,rbx
  407e05:	call   0x40ce80
  407e0a:	movzx  ebp,al
  407e0d:	mov    eax,DWORD PTR [rsi]
  407e0f:	mov    r12d,ebp
  407e12:	test   eax,eax
  407e14:	jne    0x408089
  407e1a:	lea    rdi,[rbx+0x70]
  407e1e:	cmp    ebp,0x4
  407e21:	mov    DWORD PTR [rbx+0x70],0x0
  407e28:	mov    BYTE PTR [rdi+0x4],0x0
  407e2c:	ja     0x407fdc
  407e32:	movzx  r8d,r12b
  407e36:	mov    rdx,rdi
  407e39:	mov    rcx,rbx
  407e3c:	call   0x40cf10
  407e41:	mov    r12d,DWORD PTR [rsi]
  407e44:	test   r12d,r12d
  407e47:	jne    0x408060
  407e4d:	mov    rcx,rbx
  407e50:	call   0x40ce80
  407e55:	xor    edx,edx
  407e57:	movzx  r8d,al
  407e5b:	mov    rcx,rbx
  407e5e:	call   0x40cf10
  407e63:	xor    eax,eax
  407e65:	jmp    0x407795
  407e6a:	mov    esi,DWORD PTR [rsi]
  407e6c:	test   esi,esi
  407e6e:	jne    0x4080da
  407e74:	mov    rdx,QWORD PTR [rsp+0x48]
  407e79:	mov    rcx,rbx
  407e7c:	lea    rbp,[rbx+0x40]
  407e80:	call   0x41f280
  407e85:	jmp    0x407ca5
  407e8a:	lea    rbp,[rbx+0x38]
  407e8e:	jmp    0x407ca5
  407e93:	call   0x429580
  407e98:	xor    eax,eax
  407e9a:	jmp    0x407795
  407e9f:	movzx  eax,dil
  407ea3:	lea    r8,[rip+0x26197]        # 0x42e041
  407eaa:	lea    rcx,[rip+0x2563f]        # 0x42d4f0
  407eb1:	mov    DWORD PTR [rsp+0x20],eax
  407eb5:	mov    r9d,edi
  407eb8:	mov    edx,0x1112
  407ebd:	call   0x423fa0
  407ec2:	jmp    0x407d27
  407ec7:	mov    ecx,edi
  407ec9:	call   0x4054a0
  407ece:	lea    r8,[rip+0x2615b]        # 0x42e030
  407ed5:	lea    rcx,[rip+0x25614]        # 0x42d4f0
  407edc:	mov    r9,rax
  407edf:	mov    edx,0x1083
  407ee4:	call   0x423fa0
  407ee9:	jmp    0x4079aa
  407eee:	lea    r8,[rip+0x25f99]        # 0x42de8e
  407ef5:	lea    rcx,[rip+0x255f4]        # 0x42d4f0
  407efc:	movzx  r9d,ax
  407f00:	mov    edx,0x1b75
  407f05:	mov    DWORD PTR [rsp+0x3c],eax
  407f09:	call   0x423fa0
  407f0e:	mov    eax,DWORD PTR [rsp+0x3c]
  407f12:	jmp    0x407a22
  407f17:	mov    eax,DWORD PTR [rsi]
  407f19:	test   eax,eax
  407f1b:	je     0x4077e4
  407f21:	lea    r8,[rip+0x25f82]        # 0x42deaa
  407f28:	lea    rcx,[rip+0x255c1]        # 0x42d4f0
  407f2f:	xor    r9d,r9d
  407f32:	mov    edx,0x85e2
  407f37:	call   0x423fa0
  407f3c:	jmp    0x4077e4
  407f41:	lea    r8,[rip+0x26071]        # 0x42dfb9
  407f48:	lea    rcx,[rip+0x255a1]        # 0x42d4f0
  407f4f:	mov    edx,0xb405
  407f54:	call   0x423fa0
  407f59:	jmp    0x40780c
  407f5e:	lea    r8d,[rbp-0x1]
  407f62:	xor    edx,edx
  407f64:	mov    rcx,rbx
  407f67:	call   0x40cf10
  407f6c:	xor    eax,eax
  407f6e:	jmp    0x407795
  407f73:	lea    r8,[rip+0x26099]        # 0x42e013
  407f7a:	lea    rcx,[rip+0x2556f]        # 0x42d4f0
  407f81:	mov    DWORD PTR [rsp+0x20],eax
  407f85:	movzx  r9d,r12b
  407f89:	mov    edx,0xb595
  407f8e:	mov    DWORD PTR [rsp+0x3c],eax
  407f92:	call   0x423fa0
  407f97:	mov    eax,DWORD PTR [rsp+0x3c]
  407f9b:	jmp    0x40787b
  407fa0:	mov    rcx,rbx
  407fa3:	call   0x40ce80
  407fa8:	lea    rdx,[rbx+0x75]
  407fac:	mov    r8d,0x8
  407fb2:	mov    rcx,rbx
  407fb5:	call   0x40cf10
  407fba:	jmp    0x407e4d
  407fbf:	lea    r8,[rip+0x25e92]        # 0x42de58
  407fc6:	lea    rcx,[rip+0x25523]        # 0x42d4f0
  407fcd:	mov    edx,0x807
  407fd2:	call   0x423fa0
  407fd7:	jmp    0x4077e4
  407fdc:	mov    rdx,rdi
  407fdf:	mov    rcx,rbx
  407fe2:	mov    r8d,0x5
  407fe8:	call   0x40cf10
  407fed:	lea    r8d,[rbp-0x5]
  407ff1:	xor    edx,edx
  407ff3:	mov    rcx,rbx
  407ff6:	call   0x40cf10
  407ffb:	mov    r8d,DWORD PTR [rbx+0x70]
  407fff:	movzx  edx,BYTE PTR [rbx+0x74]
  408003:	mov    rcx,rbx
  408006:	and    r8d,0xfffff
  40800d:	call   0x41f2f0
  408012:	jmp    0x407e41
  408017:	mov    QWORD PTR [rbx+0x75],0x0
  40801f:	mov    rcx,rbx
  408022:	call   0x40ce80
  408027:	xor    edx,edx
  408029:	movzx  r8d,al
  40802d:	jmp    0x407fb2
  40802f:	movzx  edx,al
  408032:	lea    r8,[rip+0x25faf]        # 0x42dfe8
  408039:	lea    rcx,[rip+0x254b0]        # 0x42d4f0
  408040:	mov    DWORD PTR [rsp+0x20],edx
  408044:	movzx  r9d,r12b
  408048:	mov    edx,0xb545
  40804d:	mov    BYTE PTR [rsp+0x3c],al
  408051:	call   0x423fa0
  408056:	movzx  eax,BYTE PTR [rsp+0x3c]
  40805b:	jmp    0x407d95
  408060:	lea    r8,[rip+0x25eae]        # 0x42df15
  408067:	lea    rcx,[rip+0x25482]        # 0x42d4f0
  40806e:	mov    QWORD PTR [rsp+0x20],0x5
  408077:	mov    r9,rdi
  40807a:	mov    edx,0x87e4
  40807f:	call   0x423d00
  408084:	jmp    0x407e4d
  408089:	lea    r8,[rip+0x25e30]        # 0x42dec0
  408090:	lea    rcx,[rip+0x25459]        # 0x42d4f0
  408097:	mov    r9d,ebp
  40809a:	mov    edx,0x8732
  40809f:	lea    rdi,[rbx+0x70]
  4080a3:	call   0x423fa0
  4080a8:	cmp    DWORD PTR [rsi],0x0
  4080ab:	je     0x407e1e
  4080b1:	lea    r8,[rip+0x25e44]        # 0x42defc
  4080b8:	lea    rcx,[rip+0x25431]        # 0x42d4f0
  4080bf:	mov    QWORD PTR [rsp+0x20],0x5
  4080c8:	mov    r9,rdi
  4080cb:	mov    edx,0x8744
  4080d0:	call   0x423d00
  4080d5:	jmp    0x407e1e
  4080da:	mov    r9,QWORD PTR [rsp+0x48]
  4080df:	lea    r8,[rip+0x25e72]        # 0x42df58
  4080e6:	lea    rcx,[rip+0x25403]        # 0x42d4f0
  4080ed:	mov    edx,0x8bc7
  4080f2:	call   0x423fa0
  4080f7:	jmp    0x407e74
  4080fc:	mov    rcx,QWORD PTR [rsp+0x48]
  408101:	call   0x429580
  408106:	mov    rcx,QWORD PTR [rsp+0x40]
  40810b:	call   0x429580
  408110:	or     eax,0xffffffff
  408113:	jmp    0x407795
  408118:	mov    r9,QWORD PTR [rsp+0x40]
  40811d:	lea    r8,[rip+0x25e0c]        # 0x42df30
  408124:	lea    rcx,[rip+0x253c5]        # 0x42d4f0
  40812b:	mov    DWORD PTR [rsp+0x20],eax
  40812f:	mov    edx,0x8ac5
  408134:	mov    DWORD PTR [rsp+0x3c],eax
  408138:	call   0x423fa0
  40813d:	mov    eax,DWORD PTR [rsp+0x3c]
  408141:	jmp    0x407c98
  408146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408150:	push   r15
  408152:	push   r14
  408154:	push   r13
  408156:	push   r12
  408158:	push   rbp
  408159:	push   rdi
  40815a:	push   rsi
  40815b:	push   rbx
  40815c:	sub    rsp,0x78
  408160:	mov    r15,QWORD PTR [rip+0x30a49]        # 0x438bb0
  408167:	mov    rbp,rcx
  40816a:	mov    r8d,DWORD PTR [r15]
  40816d:	test   r8d,r8d
  408170:	jne    0x4085e8
  408176:	lea    rax,[rbp+0x8]
  40817a:	mov    DWORD PTR [rsp+0x68],0x0
  408182:	mov    DWORD PTR [rsp+0x6c],0xffffffff
  40818a:	mov    QWORD PTR [rsp+0x60],rax
  40818f:	nop
  408190:	mov    rcx,rbp
  408193:	call   0x40ce80
  408198:	mov    ecx,DWORD PTR [r15]
  40819b:	movzx  edi,al
  40819e:	mov    ebx,edi
  4081a0:	test   ecx,ecx
  4081a2:	jne    0x408545
  4081a8:	cmp    bl,0xad
  4081ab:	jne    0x4083b0
  4081b1:	and    BYTE PTR [rbp+0xa0],0xfb
  4081b8:	mov    rcx,rbp
  4081bb:	call   0x40cfb0
  4081c0:	movzx  ebx,ax
  4081c3:	cmp    ebx,0x9
  4081c6:	jbe    0x4083be
  4081cc:	mov    rcx,rbp
  4081cf:	call   0x40ce80
  4081d4:	mov    rcx,rbp
  4081d7:	mov    BYTE PTR [rsp+0x5e],al
  4081db:	call   0x40ce80
  4081e0:	mov    rcx,rbp
  4081e3:	mov    r13d,eax
  4081e6:	call   0x40ce80
  4081eb:	mov    rcx,rbp
  4081ee:	mov    r12d,eax
  4081f1:	mov    BYTE PTR [rsp+0x40],al
  4081f5:	call   0x40ce80
  4081fa:	mov    rcx,rbp
  4081fd:	mov    esi,eax
  4081ff:	call   0x40ce80
  408204:	movzx  ecx,r12b
  408208:	movzx  r9d,r13b
  40820c:	movzx  r8d,sil
  408210:	mov    r10d,r9d
  408213:	mov    edx,ecx
  408215:	movzx  eax,al
  408218:	shl    r10d,0x18
  40821c:	shl    edx,0x10
  40821f:	mov    r12d,r8d
  408222:	or     edx,r10d
  408225:	shl    r12d,0x8
  408229:	or     edx,eax
  40822b:	or     r12d,edx
  40822e:	cmp    r12d,0x7010000
  408235:	je     0x408532
  40823b:	cmp    r12d,0x72090002
  408242:	lea    rsi,[rip+0x261a5]        # 0x42e3ee
  408249:	je     0x408275
  40824b:	ja     0x408410
  408251:	cmp    r12d,0x7000000
  408258:	lea    rsi,[rip+0x2617d]        # 0x42e3dc
  40825f:	je     0x408275
  408261:	cmp    r12d,0x71000001
  408268:	lea    rsi,[rip+0x26176]        # 0x42e3e5
  40826f:	jne    0x408438
  408275:	mov    edx,DWORD PTR [r15]
  408278:	test   edx,edx
  40827a:	jne    0x408450
  408280:	mov    rcx,rbp
  408283:	sub    ebx,0xa
  408286:	call   0x40ce80
  40828b:	mov    rcx,QWORD PTR [rbp+0x8]
  40828f:	call   0x429580
  408294:	cmp    r13b,0x6
  408298:	ja     0x4084b0
  40829e:	cmp    r13b,0x4
  4082a2:	mov    r8d,ebx
  4082a5:	mov    rdx,QWORD PTR [rsp+0x60]
  4082aa:	mov    rcx,rbp
  4082ad:	jbe    0x4083d4
  4082b3:	call   0x405780
  4082b8:	add    DWORD PTR [rsp+0x68],eax
  4082bc:	xor    ebx,ebx
  4082be:	mov    rcx,rbp
  4082c1:	mov    r14b,r13b
  4082c4:	call   0x40ce80
  4082c9:	mov    rcx,rbp
  4082cc:	mov    r12d,eax
  4082cf:	call   0x40ce80
  4082d4:	mov    rcx,rbp
  4082d7:	movzx  esi,al
  4082da:	shl    r12d,0x18
  4082de:	call   0x40ce80
  4082e3:	mov    rcx,rbp
  4082e6:	mov    BYTE PTR [rsp+0x5f],al
  4082ea:	shl    esi,0x10
  4082ed:	call   0x40ce80
  4082f2:	movzx  r9d,al
  4082f6:	mov    rdx,QWORD PTR [rsp+0x40]
  4082fb:	mov    rax,r14
  4082fe:	or     r9d,ebx
  408301:	movzx  ebx,BYTE PTR [rsp+0x5f]
  408306:	or     r9d,r12d
  408309:	or     r9d,esi
  40830c:	mov    ah,dl
  40830e:	mov    r14,rax
  408311:	shl    ebx,0x8
  408314:	or     r9d,ebx
  408317:	cmp    ax,0x204
  40831b:	je     0x4084e0
  408321:	mov    r10d,DWORD PTR [r15]
  408324:	mov    DWORD PTR [rbp+0x4],r9d
  408328:	test   r10d,r10d
  40832b:	jne    0x408515
  408331:	movzx  eax,BYTE PTR [rsp+0x5e]
  408336:	and    eax,0xfffffffb
  408339:	cmp    al,0x1
  40833b:	jne    0x408365
  40833d:	mov    rax,QWORD PTR [rbp+0xc0]
  408344:	mov    DWORD PTR [rsp+0x6c],0x0
  40834c:	test   rax,rax
  40834f:	je     0x408365
  408351:	mov    rdx,rax
  408354:	mov    rcx,rbp
  408357:	call   QWORD PTR [rax+0x10]
  40835a:	mov    QWORD PTR [rbp+0xc0],0x0
  408365:	cmp    edi,0xfd
  40836b:	jne    0x408190
  408371:	cmp    WORD PTR [rbp+0x0],0x500
  408377:	je     0x408571
  40837d:	mov    ecx,DWORD PTR [rsp+0x68]
  408381:	test   ecx,ecx
  408383:	jne    0x4085a1
  408389:	mov    r8d,DWORD PTR [rbp+0x4]
  40838d:	test   r8d,r8d
  408390:	js     0x4085c7
  408396:	mov    edx,DWORD PTR [r15]
  408399:	test   edx,edx
  40839b:	jne    0x408605
  4083a1:	mov    eax,DWORD PTR [rsp+0x6c]
  4083a5:	jmp    0x4083c3
  4083a7:	nop    WORD PTR [rax+rax*1+0x0]
  4083b0:	mov    edx,edi
  4083b2:	mov    rcx,rbp
  4083b5:	call   0x407720
  4083ba:	test   eax,eax
  4083bc:	jns    0x408365
  4083be:	mov    eax,0xffffffff
  4083c3:	add    rsp,0x78
  4083c7:	pop    rbx
  4083c8:	pop    rsi
  4083c9:	pop    rdi
  4083ca:	pop    rbp
  4083cb:	pop    r12
  4083cd:	pop    r13
  4083cf:	pop    r14
  4083d1:	pop    r15
  4083d3:	ret    
  4083d4:	call   0x405780
  4083d9:	mov    rcx,QWORD PTR [rbp+0x8]
  4083dd:	add    DWORD PTR [rsp+0x68],eax
  4083e1:	test   rcx,rcx
  4083e4:	je     0x4085c0
  4083ea:	lea    rdx,[rip+0x260dc]        # 0x42e4cd
  4083f1:	call   0x429478
  4083f6:	cmp    rax,0x1
  4083fa:	sbb    ebx,ebx
  4083fc:	not    ebx
  4083fe:	and    ebx,0x80000000
  408404:	jmp    0x4082be
  408409:	nop    DWORD PTR [rax+0x0]
  408410:	cmp    r12d,0x730a0003
  408417:	lea    rsi,[rip+0x25fda]        # 0x42e3f8
  40841e:	je     0x408275
  408424:	cmp    r12d,0x730b0003
  40842b:	lea    rsi,[rip+0x25feb]        # 0x42e41d
  408432:	je     0x408275
  408438:	mov    edx,DWORD PTR [r15]
  40843b:	lea    rsi,[rip+0x25fe0]        # 0x42e422
  408442:	test   edx,edx
  408444:	je     0x408280
  40844a:	nop    WORD PTR [rax+rax*1+0x0]
  408450:	mov    DWORD PTR [rsp+0x28],r8d
  408455:	mov    DWORD PTR [rsp+0x20],ecx
  408459:	lea    r8,[rip+0x26028]        # 0x42e488
  408460:	lea    rcx,[rip+0x25089]        # 0x42d4f0
  408467:	mov    DWORD PTR [rsp+0x30],eax
  40846b:	mov    edx,0x1587
  408470:	call   0x423fa0
  408475:	mov    r11d,DWORD PTR [r15]
  408478:	test   r11d,r11d
  40847b:	je     0x408280
  408481:	lea    r8,[rip+0x26028]        # 0x42e4b0
  408488:	lea    rcx,[rip+0x25061]        # 0x42d4f0
  40848f:	mov    QWORD PTR [rsp+0x20],rsi
  408494:	mov    r9d,r12d
  408497:	mov    edx,0x15a7
  40849c:	call   0x423fa0
  4084a1:	jmp    0x408280
  4084a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4084b0:	shr    ebx,1
  4084b2:	mov    rdx,QWORD PTR [rsp+0x60]
  4084b7:	mov    rcx,rbp
  4084ba:	mov    r8d,ebx
  4084bd:	mov    ebx,0x80000000
  4084c2:	and    r8d,0x7fffffff
  4084c9:	call   0x405780
  4084ce:	add    DWORD PTR [rsp+0x68],eax
  4084d2:	jmp    0x4082be
  4084d7:	nop    WORD PTR [rax+rax*1+0x0]
  4084e0:	mov    eax,r9d
  4084e3:	and    eax,0xff0000ff
  4084e8:	cmp    eax,0x5f0000ff
  4084ed:	jne    0x408321
  4084f3:	mov    r10d,DWORD PTR [r15]
  4084f6:	and    r9d,0x7fff00
  4084fd:	or     r9d,0x800000
  408504:	shl    r9d,0x8
  408508:	test   r10d,r10d
  40850b:	mov    DWORD PTR [rbp+0x4],r9d
  40850f:	je     0x408331
  408515:	lea    r8,[rip+0x25fbb]        # 0x42e4d7
  40851c:	lea    rcx,[rip+0x24fcd]        # 0x42d4f0
  408523:	mov    edx,0x17a7
  408528:	call   0x423fa0
  40852d:	jmp    0x408331
  408532:	or     BYTE PTR [rbp+0xa0],0x4
  408539:	lea    rsi,[rip+0x25ea0]        # 0x42e3e0
  408540:	jmp    0x408275
  408545:	mov    ecx,edi
  408547:	call   0x4054a0
  40854c:	lea    r8,[rip+0x25f0d]        # 0x42e460
  408553:	lea    rcx,[rip+0x24f96]        # 0x42d4f0
  40855a:	mov    QWORD PTR [rsp+0x20],rax
  40855f:	mov    r9d,edi
  408562:	mov    edx,0x1327
  408567:	call   0x423fa0
  40856c:	jmp    0x4081a8
  408571:	mov    rax,QWORD PTR [rbp+0xc0]
  408578:	test   rax,rax
  40857b:	je     0x40837d
  408581:	xor    r8d,r8d
  408584:	mov    rdx,rax
  408587:	mov    rcx,rbp
  40858a:	call   QWORD PTR [rax+0x18]
  40858d:	test   eax,eax
  40858f:	jns    0x408190
  408595:	mov    ecx,DWORD PTR [rsp+0x68]
  408599:	test   ecx,ecx
  40859b:	je     0x408389
  4085a1:	mov    eax,DWORD PTR [r15]
  4085a4:	test   eax,eax
  4085a6:	je     0x4083be
  4085ac:	mov    ebx,0xffffffff
  4085b1:	lea    r9,[rip+0x25e7e]        # 0x42e436
  4085b8:	jmp    0x40861d
  4085ba:	nop    WORD PTR [rax+rax*1+0x0]
  4085c0:	xor    ebx,ebx
  4085c2:	jmp    0x4082be
  4085c7:	mov    rcx,QWORD PTR [rbp+0xd0]
  4085ce:	movzx  eax,BYTE PTR [rcx+0x4]
  4085d2:	shl    eax,0x8
  4085d5:	mov    edx,eax
  4085d7:	movzx  eax,BYTE PTR [rcx+0x5]
  4085db:	add    eax,edx
  4085dd:	mov    DWORD PTR [rbp+0xa4],eax
  4085e3:	jmp    0x408396
  4085e8:	lea    r8,[rip+0x25e50]        # 0x42e43f
  4085ef:	lea    rcx,[rip+0x24efa]        # 0x42d4f0
  4085f6:	mov    edx,0x12a7
  4085fb:	call   0x423fa0
  408600:	jmp    0x408176
  408605:	mov    ebx,DWORD PTR [rsp+0x6c]
  408609:	lea    r9,[rip+0x25e1a]        # 0x42e42a
  408610:	lea    rax,[rip+0x25e1f]        # 0x42e436
  408617:	test   ebx,ebx
  408619:	cmovne r9,rax
  40861d:	lea    r8,[rip+0x25ecc]        # 0x42e4f0
  408624:	lea    rcx,[rip+0x24ec5]        # 0x42d4f0
  40862b:	mov    edx,0x19f7
  408630:	call   0x423fa0
  408635:	mov    eax,ebx
  408637:	jmp    0x4083c3
  40863c:	nop    DWORD PTR [rax+0x0]
  408640:	push   r14
  408642:	push   r13
  408644:	push   r12
  408646:	push   rbp
  408647:	push   rdi
  408648:	push   rsi
  408649:	push   rbx
  40864a:	add    rsp,0xffffffffffffff80
  40864e:	xor    eax,eax
  408650:	lea    rbp,[rsp+0x50]
  408655:	mov    rbx,rcx
  408658:	mov    ecx,0x6
  40865d:	mov    r12d,edx
  408660:	mov    rdi,rbp
  408663:	rep stos QWORD PTR es:[rdi],rax
  408666:	mov    rcx,rbx
  408669:	call   0x40cfb0
  40866e:	mov    rcx,rbx
  408671:	call   0x40cfd0
  408676:	mov    rcx,rbx
  408679:	mov    DWORD PTR [rsp+0x70],eax
  40867d:	call   0x40ce80
  408682:	mov    rcx,rbx
  408685:	movzx  eax,al
  408688:	mov    WORD PTR [rsp+0x78],ax
  40868d:	call   0x40ce80
  408692:	cmp    r12d,0xab
  408699:	mov    BYTE PTR [rsp+0x7b],al
  40869d:	je     0x408914
  4086a3:	cmp    r12d,0xe5
  4086aa:	je     0x4088a0
  4086b0:	cmp    r12d,0xaa
  4086b7:	je     0x4086f0
  4086b9:	mov    rax,QWORD PTR [rip+0x304f0]        # 0x438bb0
  4086c0:	mov    r11d,DWORD PTR [rax]
  4086c3:	test   r11d,r11d
  4086c6:	jne    0x408b00
  4086cc:	mov    rcx,rbp
  4086cf:	mov    esi,0xffffffff
  4086d4:	call   0x402790
  4086d9:	mov    eax,esi
  4086db:	sub    rsp,0xffffffffffffff80
  4086df:	pop    rbx
  4086e0:	pop    rsi
  4086e1:	pop    rdi
  4086e2:	pop    rbp
  4086e3:	pop    r12
  4086e5:	pop    r13
  4086e7:	pop    r14
  4086e9:	ret    
  4086ea:	nop    WORD PTR [rax+rax*1+0x0]
  4086f0:	mov    BYTE PTR [rsp+0x7a],0x1
  4086f5:	xor    r13d,r13d
  4086f8:	mov    rdi,QWORD PTR [rip+0x304b1]        # 0x438bb0
  4086ff:	mov    r10d,DWORD PTR [rdi]
  408702:	test   r10d,r10d
  408705:	jne    0x408a80
  40870b:	mov    rcx,rbx
  40870e:	call   0x40cfb0
  408713:	lea    rdx,[rbp+0x8]
  408717:	movzx  r8d,ax
  40871b:	mov    rcx,rbx
  40871e:	call   0x405780
  408723:	mov    rcx,rbx
  408726:	mov    esi,eax
  408728:	call   0x40ce80
  40872d:	mov    rcx,rbx
  408730:	movzx  r8d,al
  408734:	mov    rdx,rbp
  408737:	call   0x405780
  40873c:	mov    rcx,QWORD PTR [rsp+0x50]
  408741:	lea    r14d,[rsi+rax*1]
  408745:	test   rcx,rcx
  408748:	je     0x40874f
  40874a:	cmp    BYTE PTR [rcx],0x0
  40874d:	jne    0x40878f
  40874f:	cmp    QWORD PTR [rbx+0x168],0x0
  408757:	je     0x40878f
  408759:	call   0x429580
  40875e:	mov    rax,QWORD PTR [rbx+0x168]
  408765:	mov    QWORD PTR [rsp+0x50],0x0
  40876e:	lea    rdx,[rip+0x25e16]        # 0x42e58b
  408775:	mov    rcx,rbp
  408778:	mov    r8,QWORD PTR [rax]
  40877b:	add    r8,0x8
  40877f:	call   0x429330
  408784:	cmp    eax,0xffffffff
  408787:	mov    esi,eax
  408789:	je     0x408a30
  40878f:	mov    rcx,rbx
  408792:	call   0x40ce80
  408797:	lea    rdx,[rbp+0x10]
  40879b:	mov    rcx,rbx
  40879e:	movzx  r8d,al
  4087a2:	call   0x405780
  4087a7:	cmp    WORD PTR [rbx],0x701
  4087ac:	lea    esi,[rax+r14*1]
  4087b0:	mov    rcx,rbx
  4087b3:	jbe    0x408894
  4087b9:	call   0x40cfd0
  4087be:	cmp    QWORD PTR [rsp+0x68],0x0
  4087c4:	mov    DWORD PTR [rsp+0x74],eax
  4087c8:	je     0x408ae3
  4087ce:	cmp    r13d,0x1
  4087d2:	je     0x408873
  4087d8:	test   esi,esi
  4087da:	jne    0x4086cc
  4087e0:	cmp    r12d,0xe5
  4087e7:	je     0x408934
  4087ed:	cmp    r12d,0xab
  4087f4:	je     0x408980
  4087fa:	mov    rax,QWORD PTR [rbx+0x28]
  4087fe:	cmp    QWORD PTR [rax+0x10],0x0
  408803:	je     0x408a20
  408809:	mov    edx,DWORD PTR [rdi]
  40880b:	test   edx,edx
  40880d:	jne    0x408aa2
  408813:	mov    r8,rbp
  408816:	mov    rdx,rbx
  408819:	mov    rcx,rax
  40881c:	call   QWORD PTR [rax+0x10]
  40881f:	cmp    QWORD PTR [rbx+0xc8],0x0
  408827:	je     0x408a05
  40882d:	mov    rcx,rbp
  408830:	call   0x402790
  408835:	mov    esi,DWORD PTR [rdi]
  408837:	test   esi,esi
  408839:	je     0x4086d9
  40883f:	lea    r8,[rip+0x25dca]        # 0x42e610
  408846:	lea    rcx,[rip+0x24ca3]        # 0x42d4f0
  40884d:	mov    edx,0x9712
  408852:	xor    esi,esi
  408854:	call   0x423fa0
  408859:	jmp    0x4086d9
  40885e:	xchg   ax,ax
  408860:	movzx  edx,al
  408863:	mov    rcx,rbx
  408866:	call   0x407720
  40886b:	cmp    eax,0x80000000
  408870:	adc    esi,0xffffffff
  408873:	mov    rcx,rbx
  408876:	call   0x40ce80
  40887b:	cmp    al,0xd7
  40887d:	je     0x408860
  40887f:	cmp    al,0xec
  408881:	je     0x408860
  408883:	cmp    al,0x20
  408885:	je     0x408860
  408887:	mov    rcx,rbx
  40888a:	call   0x40ced0
  40888f:	jmp    0x4087d8
  408894:	call   0x40cfb0
  408899:	cwde   
  40889a:	jmp    0x4087be
  40889f:	nop
  4088a0:	cmp    al,0xa
  4088a2:	mov    rcx,rbx
  4088a5:	seta   BYTE PTR [rsp+0x7a]
  4088aa:	call   0x40ce80
  4088af:	movzx  eax,al
  4088b2:	lea    rcx,[rax+0x1]
  4088b6:	mov    rsi,rax
  4088b9:	call   0x429538
  4088be:	test   rax,rax
  4088c1:	mov    QWORD PTR [rsp+0x68],rax
  4088c6:	je     0x4086cc
  4088cc:	mov    r8,rsi
  4088cf:	mov    rcx,rbx
  4088d2:	mov    rdx,rax
  4088d5:	call   0x40cf10
  4088da:	mov    rax,QWORD PTR [rsp+0x68]
  4088df:	lea    rdi,[rip+0x25c33]        # 0x42e519
  4088e6:	mov    ecx,0x6
  4088eb:	mov    BYTE PTR [rax+rsi*1],0x0
  4088ef:	mov    rax,QWORD PTR [rsp+0x68]
  4088f4:	mov    rsi,rax
  4088f7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4088f9:	je     0x408921
  4088fb:	mov    rcx,rbx
  4088fe:	call   0x40ce80
  408903:	mov    rcx,rbx
  408906:	movzx  r13d,al
  40890a:	call   0x40cfb0
  40890f:	jmp    0x4086f8
  408914:	mov    BYTE PTR [rsp+0x7a],0x0
  408919:	xor    r13d,r13d
  40891c:	jmp    0x4086f8
  408921:	mov    rcx,rax
  408924:	call   0x429580
  408929:	mov    QWORD PTR [rsp+0x68],0x0
  408932:	jmp    0x4088fb
  408934:	mov    rax,QWORD PTR [rbx+0x160]
  40893b:	test   rax,rax
  40893e:	je     0x4087fa
  408944:	mov    r8d,DWORD PTR [rbx+0x4]
  408948:	test   r8d,r8d
  40894b:	js     0x4087fa
  408951:	cmp    DWORD PTR [rsp+0x70],0xade
  408959:	jne    0x4087fa
  40895f:	mov    BYTE PTR [rax+0x2e],0x1
  408963:	mov    rdx,QWORD PTR [rbx+0x160]
  40896a:	mov    rcx,rbx
  40896d:	call   0x404790
  408972:	jmp    0x40881f
  408977:	nop    WORD PTR [rax+rax*1+0x0]
  408980:	mov    r9d,DWORD PTR [rsp+0x70]
  408985:	cmp    r9d,0x423a
  40898c:	jne    0x4087fa
  408992:	mov    ecx,DWORD PTR [rbx+0x4]
  408995:	test   ecx,ecx
  408997:	js     0x408ac3
  40899d:	mov    rax,QWORD PTR [rbx+0x28]
  4089a1:	cmp    QWORD PTR [rax+0x10],0x0
  4089a6:	jne    0x408809
  4089ac:	nop    DWORD PTR [rax+0x0]
  4089b0:	mov    eax,DWORD PTR [rdi]
  4089b2:	test   eax,eax
  4089b4:	je     0x40881f
  4089ba:	mov    rax,QWORD PTR [rsp+0x58]
  4089bf:	lea    r8,[rip+0x25c12]        # 0x42e5d8
  4089c6:	lea    rcx,[rip+0x24b23]        # 0x42d4f0
  4089cd:	mov    edx,0x9633
  4089d2:	mov    QWORD PTR [rsp+0x40],rax
  4089d7:	mov    eax,DWORD PTR [rsp+0x74]
  4089db:	mov    DWORD PTR [rsp+0x38],eax
  4089df:	mov    rax,QWORD PTR [rsp+0x50]
  4089e4:	mov    QWORD PTR [rsp+0x30],rax
  4089e9:	movsx  eax,WORD PTR [rsp+0x78]
  4089ee:	mov    DWORD PTR [rsp+0x28],eax
  4089f2:	movzx  eax,BYTE PTR [rsp+0x7b]
  4089f7:	mov    DWORD PTR [rsp+0x20],eax
  4089fb:	call   0x423fa0
  408a00:	jmp    0x40881f
  408a05:	mov    rax,QWORD PTR [rsp+0x50]
  408a0a:	mov    QWORD PTR [rsp+0x50],0x0
  408a13:	mov    QWORD PTR [rbx+0xc8],rax
  408a1a:	jmp    0x40882d
  408a1f:	nop
  408a20:	mov    r9d,DWORD PTR [rsp+0x70]
  408a25:	test   r9d,r9d
  408a28:	je     0x40881f
  408a2e:	jmp    0x4089b0
  408a30:	mov    r9d,DWORD PTR [rdi]
  408a33:	test   r9d,r9d
  408a36:	je     0x4086d9
  408a3c:	mov    rbx,QWORD PTR [rip+0x37001]        # 0x43fa44
  408a43:	call   rbx
  408a45:	mov    ecx,DWORD PTR [rax]
  408a47:	call   0x4294a0
  408a4c:	mov    rdi,rax
  408a4f:	call   rbx
  408a51:	mov    QWORD PTR [rsp+0x20],rdi
  408a56:	mov    r9d,DWORD PTR [rax]
  408a59:	lea    r8,[rip+0x25b30]        # 0x42e590
  408a60:	lea    rcx,[rip+0x24a89]        # 0x42d4f0
  408a67:	mov    edx,0x9242
  408a6c:	call   0x423fa0
  408a71:	jmp    0x4086d9
  408a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408a80:	mov    r9d,DWORD PTR [rsp+0x70]
  408a85:	lea    r8,[rip+0x25acc]        # 0x42e558
  408a8c:	lea    rcx,[rip+0x24a5d]        # 0x42d4f0
  408a93:	mov    edx,0x9182
  408a98:	call   0x423fa0
  408a9d:	jmp    0x40870b
  408aa2:	lea    r8,[rip+0x25aff]        # 0x42e5a8
  408aa9:	lea    rcx,[rip+0x24a40]        # 0x42d4f0
  408ab0:	mov    edx,0x9602
  408ab5:	call   0x423fa0
  408aba:	mov    rax,QWORD PTR [rbx+0x28]
  408abe:	jmp    0x408813
  408ac3:	cmp    DWORD PTR [rbx+0x178],0x2
  408aca:	jne    0x40899d
  408ad0:	cmp    QWORD PTR [rbx+0x138],0x0
  408ad8:	jne    0x40881f
  408ade:	jmp    0x40899d
  408ae3:	mov    edx,DWORD PTR [rsp+0x70]
  408ae7:	mov    rcx,rbx
  408aea:	call   0x4028e0
  408aef:	mov    QWORD PTR [rsp+0x68],rax
  408af4:	jmp    0x4087ce
  408af9:	nop    DWORD PTR [rax+0x0]
  408b00:	lea    r8,[rip+0x25a19]        # 0x42e520
  408b07:	lea    rcx,[rip+0x249e2]        # 0x42d4f0
  408b0e:	mov    r9d,r12d
  408b11:	mov    edx,0x9132
  408b16:	call   0x423fa0
  408b1b:	jmp    0x4086cc
  408b20:	push   r15
  408b22:	push   r14
  408b24:	push   r13
  408b26:	push   r12
  408b28:	push   rbp
  408b29:	push   rdi
  408b2a:	push   rsi
  408b2b:	push   rbx
  408b2c:	sub    rsp,0x98
  408b33:	mov    rsi,QWORD PTR [rip+0x30076]        # 0x438bb0
  408b3a:	mov    rax,QWORD PTR [rcx+0x150]
  408b41:	mov    rbx,rcx
  408b44:	mov    QWORD PTR [rsp+0xe8],rdx
  408b4c:	mov    QWORD PTR [rsp+0xf0],r8
  408b54:	mov    ebp,r9d
  408b57:	mov    QWORD PTR [rsp+0x68],0x0
  408b60:	mov    r10d,DWORD PTR [rsi]
  408b63:	mov    QWORD PTR [rsp+0x40],rax
  408b68:	test   r10d,r10d
  408b6b:	jne    0x409580
  408b71:	test   DWORD PTR [rcx+0x148],0xfffffffd
  408b7b:	jne    0x408ba4
  408b7d:	mov    rax,QWORD PTR [rsp+0xe8]
  408b85:	mov    DWORD PTR [rax],0xfd4
  408b8b:	mov    eax,0x1
  408b90:	add    rsp,0x98
  408b97:	pop    rbx
  408b98:	pop    rsi
  408b99:	pop    rdi
  408b9a:	pop    rbp
  408b9b:	pop    r12
  408b9d:	pop    r13
  408b9f:	pop    r14
  408ba1:	pop    r15
  408ba3:	ret    
  408ba4:	mov    edx,0x4
  408ba9:	mov    rcx,rbx
  408bac:	xor    r13d,r13d
  408baf:	call   0x40ab40
  408bb4:	xor    edi,edi
  408bb6:	xor    r12d,r12d
  408bb9:	cmp    eax,0x4
  408bbc:	jne    0x408d26
  408bc2:	lea    rax,[rsp+0x70]
  408bc7:	mov    QWORD PTR [rsp+0x48],rax
  408bcc:	lea    rax,[rsp+0x68]
  408bd1:	mov    QWORD PTR [rsp+0x58],rax
  408bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408be0:	mov    rcx,rbx
  408be3:	call   0x40ce80
  408be8:	mov    r8d,DWORD PTR [rsi]
  408beb:	movzx  r15d,al
  408bef:	mov    r14d,r15d
  408bf2:	test   r8d,r8d
  408bf5:	jne    0x408c20
  408bf7:	lea    eax,[r14-0x20]
  408bfb:	cmp    al,0xdf
  408bfd:	ja     0x409480
  408c03:	lea    rdx,[rip+0x26032]        # 0x42ec3c
  408c0a:	movzx  eax,al
  408c0d:	movsxd rax,DWORD PTR [rdx+rax*4]
  408c11:	add    rdx,rax
  408c14:	jmp    rdx
  408c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c20:	mov    ecx,r15d
  408c23:	call   0x4054a0
  408c28:	lea    r8,[rip+0x25a69]        # 0x42e698
  408c2f:	lea    rcx,[rip+0x248ba]        # 0x42d4f0
  408c36:	mov    QWORD PTR [rsp+0x20],rax
  408c3b:	mov    r9d,r15d
  408c3e:	mov    edx,0x21c5
  408c43:	call   0x423fa0
  408c48:	jmp    0x408bf7
  408c4a:	nop    WORD PTR [rax+rax*1+0x0]
  408c50:	mov    eax,DWORD PTR [rbx+0x178]
  408c56:	lea    ecx,[rax-0x2]
  408c59:	cmp    ecx,0x9
  408c5c:	ja     0x408c71
  408c5e:	mov    eax,0x1
  408c63:	shl    rax,cl
  408c66:	test   eax,0x2a1
  408c6b:	jne    0x409bd3
  408c71:	mov    rax,QWORD PTR [rsp+0xe8]
  408c79:	test   ebp,0x200
  408c7f:	mov    DWORD PTR [rax],0xfd6
  408c85:	je     0x409aa5
  408c8b:	mov    rcx,rbx
  408c8e:	mov    r13d,0x300
  408c94:	call   0x40ced0
  408c99:	mov    r10d,DWORD PTR [rsi]
  408c9c:	test   r10d,r10d
  408c9f:	je     0x408cf4
  408ca1:	lea    r8,[rip+0x25a20]        # 0x42e6c8
  408ca8:	lea    rcx,[rip+0x24841]        # 0x42d4f0
  408caf:	mov    edx,0x3137
  408cb4:	call   0x423fa0
  408cb9:	jmp    0x408cf4
  408cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  408cc0:	mov    rax,QWORD PTR [rsp+0xe8]
  408cc8:	test   ebp,0x200
  408cce:	mov    DWORD PTR [rax],0xfd5
  408cd4:	je     0x4096f0
  408cda:	mov    rcx,rbx
  408cdd:	mov    r13d,0x300
  408ce3:	call   0x40ced0
  408ce8:	mov    r14d,DWORD PTR [rsi]
  408ceb:	test   r14d,r14d
  408cee:	jne    0x40a155
  408cf4:	movzx  eax,BYTE PTR [rbx+0x14c]
  408cfb:	or     edi,eax
  408cfd:	jne    0x409028
  408d03:	test   r13d,ebp
  408d06:	jne    0x409566
  408d0c:	mov    eax,DWORD PTR [rbx+0x148]
  408d12:	test   eax,0xfffffffd
  408d17:	je     0x409a80
  408d1d:	cmp    eax,0x5
  408d20:	jne    0x408be0
  408d26:	mov    eax,0xffffffff
  408d2b:	jmp    0x408b90
  408d30:	mov    rcx,rbx
  408d33:	call   0x40cfb0
  408d38:	mov    rcx,rbx
  408d3b:	movzx  r14d,ax
  408d3f:	call   0x40ce80
  408d44:	mov    rcx,rbx
  408d47:	mov    r15d,eax
  408d4a:	call   0x40ce80
  408d4f:	cmp    r15b,0x20
  408d53:	jne    0x409ac3
  408d59:	mov    rcx,rbx
  408d5c:	call   0x40ce80
  408d61:	cmp    al,0x1e
  408d63:	mov    r14d,eax
  408d66:	ja     0x409b73
  408d6c:	mov    r8,QWORD PTR [rsp+0x48]
  408d71:	movzx  edx,al
  408d74:	mov    r9d,0x1e
  408d7a:	mov    rcx,rbx
  408d7d:	call   0x40d020
  408d82:	movzx  eax,al
  408d85:	mov    BYTE PTR [rsp+rax*1+0x70],0x0
  408d8a:	mov    rdx,QWORD PTR [rsp+0x48]
  408d8f:	mov    rcx,rbx
  408d92:	call   0x4067d0
  408d97:	mov    rdx,rax
  408d9a:	jmp    0x409add
  408d9f:	nop
  408da0:	mov    rax,QWORD PTR [rsp+0xe8]
  408da8:	test   bpl,0x8
  408dac:	mov    rcx,rbx
  408daf:	mov    DWORD PTR [rax],0xfd1
  408db5:	je     0x409680
  408dbb:	call   0x40ced0
  408dc0:	mov    edx,DWORD PTR [rsi]
  408dc2:	mov    r13d,0xc
  408dc8:	test   edx,edx
  408dca:	je     0x408cf4
  408dd0:	lea    r8,[rip+0x258f1]        # 0x42e6c8
  408dd7:	lea    rcx,[rip+0x24712]        # 0x42d4f0
  408dde:	mov    edx,0x2347
  408de3:	call   0x423fa0
  408de8:	jmp    0x408cf4
  408ded:	nop    DWORD PTR [rax]
  408df0:	mov    rax,QWORD PTR [rsp+0xe8]
  408df8:	test   ebp,0x200
  408dfe:	mov    DWORD PTR [rax],0xfd4
  408e04:	je     0x409693
  408e0a:	mov    rcx,rbx
  408e0d:	mov    r13d,0x300
  408e13:	call   0x40ced0
  408e18:	mov    r15d,DWORD PTR [rsi]
  408e1b:	test   r15d,r15d
  408e1e:	je     0x408cf4
  408e24:	lea    r8,[rip+0x2589d]        # 0x42e6c8
  408e2b:	lea    rcx,[rip+0x246be]        # 0x42d4f0
  408e32:	mov    edx,0x2d07
  408e37:	call   0x423fa0
  408e3c:	jmp    0x408cf4
  408e41:	mov    rax,QWORD PTR [rsp+0xe8]
  408e49:	test   bpl,0x80
  408e4d:	mov    rcx,rbx
  408e50:	mov    DWORD PTR [rax],0xfd3
  408e56:	je     0x409613
  408e5c:	call   0x40ced0
  408e61:	mov    eax,DWORD PTR [rsi]
  408e63:	mov    r13d,0xc0
  408e69:	test   eax,eax
  408e6b:	je     0x408cf4
  408e71:	lea    r8,[rip+0x25850]        # 0x42e6c8
  408e78:	lea    rcx,[rip+0x24671]        # 0x42d4f0
  408e7f:	mov    edx,0x2c17
  408e84:	call   0x423fa0
  408e89:	jmp    0x408cf4
  408e8e:	xchg   ax,ax
  408e90:	mov    rax,QWORD PTR [rsp+0xe8]
  408e98:	test   ebp,0x8000
  408e9e:	mov    rcx,rbx
  408ea1:	mov    DWORD PTR [rax],0xfca
  408ea7:	je     0x409600
  408ead:	call   0x40ced0
  408eb2:	mov    eax,DWORD PTR [rsi]
  408eb4:	mov    r13d,0xc000
  408eba:	test   eax,eax
  408ebc:	je     0x408cf4
  408ec2:	lea    r8,[rip+0x257ff]        # 0x42e6c8
  408ec9:	lea    rcx,[rip+0x24620]        # 0x42d4f0
  408ed0:	mov    edx,0x2c97
  408ed5:	call   0x423fa0
  408eda:	jmp    0x408cf4
  408edf:	nop
  408ee0:	mov    rax,QWORD PTR [rsp+0xe8]
  408ee8:	test   ebp,0x80000
  408eee:	mov    DWORD PTR [rax],0xfcc
  408ef4:	je     0x409630
  408efa:	mov    rcx,rbx
  408efd:	mov    r13d,0xc0000
  408f03:	call   0x40ced0
  408f08:	mov    r8d,DWORD PTR [rsi]
  408f0b:	test   r8d,r8d
  408f0e:	je     0x408cf4
  408f14:	lea    r8,[rip+0x257ad]        # 0x42e6c8
  408f1b:	lea    rcx,[rip+0x245ce]        # 0x42d4f0
  408f22:	mov    edx,0x31f7
  408f27:	call   0x423fa0
  408f2c:	jmp    0x408cf4
  408f31:	mov    rax,QWORD PTR [rbx+0x118]
  408f38:	test   rax,rax
  408f3b:	je     0x408f41
  408f3d:	mov    BYTE PTR [rax+0x3a],0x1
  408f41:	mov    rax,QWORD PTR [rsp+0xe8]
  408f49:	test   ebp,0x2000
  408f4f:	mov    rcx,rbx
  408f52:	mov    DWORD PTR [rax],0xfcd
  408f58:	je     0x4094d0
  408f5e:	call   0x40ced0
  408f63:	mov    r9d,DWORD PTR [rsi]
  408f66:	mov    r13d,0x3000
  408f6c:	test   r9d,r9d
  408f6f:	je     0x408cf4
  408f75:	lea    r8,[rip+0x2574c]        # 0x42e6c8
  408f7c:	lea    rcx,[rip+0x2456d]        # 0x42d4f0
  408f83:	mov    edx,0x2937
  408f88:	call   0x423fa0
  408f8d:	jmp    0x408cf4
  408f92:	mov    rax,QWORD PTR [rbx+0x138]
  408f99:	test   rax,rax
  408f9c:	je     0x409cd0
  408fa2:	mov    rdx,QWORD PTR [rax+0x48]
  408fa6:	mov    rcx,rbx
  408fa9:	call   0x401e30
  408fae:	mov    r11d,DWORD PTR [rsi]
  408fb1:	test   r11d,r11d
  408fb4:	jne    0x40a0a1
  408fba:	mov    rax,QWORD PTR [rbx+0x110]
  408fc1:	test   rax,rax
  408fc4:	je     0x408fca
  408fc6:	mov    BYTE PTR [rax+0x3a],0x1
  408fca:	mov    rax,QWORD PTR [rsp+0xe8]
  408fd2:	test   ebp,0x800
  408fd8:	mov    rcx,rbx
  408fdb:	mov    DWORD PTR [rax],0xfc8
  408fe1:	jne    0x409cf0
  408fe7:	cmp    r14b,0xd2
  408feb:	jne    0x409b60
  408ff1:	call   0x405f90
  408ff6:	mov    r13d,0xc00
  408ffc:	mov    r12d,eax
  408fff:	jmp    0x409010
  409001:	mov    rcx,rbx
  409004:	call   0x405c00
  409009:	mov    r12d,eax
  40900c:	nop    DWORD PTR [rax+0x0]
  409010:	test   r12d,r12d
  409013:	js     0x409566
  409019:	movzx  eax,BYTE PTR [rbx+0x14c]
  409020:	or     edi,eax
  409022:	je     0x408d03
  409028:	xor    ebp,ebp
  40902a:	jmp    0x408d0c
  40902f:	nop
  409030:	cmp    DWORD PTR [rbx+0x178],0x7
  409037:	mov    rcx,rbx
  40903a:	je     0x40905a
  40903c:	mov    rax,QWORD PTR [rsp+0xe8]
  409044:	test   bpl,0x8
  409048:	mov    r13d,0xc
  40904e:	mov    DWORD PTR [rax],0xfd1
  409054:	jne    0x409d24
  40905a:	call   0x407290
  40905f:	test   eax,eax
  409061:	mov    r12d,eax
  409064:	js     0x409566
  40906a:	mov    rcx,rbx
  40906d:	call   0x40ce80
  409072:	cmp    al,0xa4
  409074:	mov    rcx,rbx
  409077:	je     0x409c01
  40907d:	call   0x40ced0
  409082:	jmp    0x408cf4
  409087:	nop    WORD PTR [rax+rax*1+0x0]
  409090:	mov    rcx,rbx
  409093:	call   0x40cfd0
  409098:	mov    rcx,rbx
  40909b:	mov    r14d,eax
  40909e:	call   0x40cee0
  4090a3:	mov    edx,eax
  4090a5:	and    edx,0xffffffbf
  4090a8:	cmp    dl,0xac
  4090ab:	je     0x4090c0
  4090ad:	lea    edx,[rax+0x3]
  4090b0:	cmp    dl,0x1
  4090b3:	jbe    0x4090c0
  4090b5:	cmp    al,0x20
  4090b7:	jne    0x408cf4
  4090bd:	nop    DWORD PTR [rax]
  4090c0:	mov    eax,DWORD PTR [rbx+0x178]
  4090c6:	test   eax,eax
  4090c8:	jne    0x408cf4
  4090ce:	mov    rax,QWORD PTR [rsp+0xe8]
  4090d6:	and    ebp,0xffff7fff
  4090dc:	xor    r12d,r12d
  4090df:	mov    r13d,0xc000
  4090e5:	mov    DWORD PTR [rax],0xfcb
  4090eb:	mov    eax,DWORD PTR [rsi]
  4090ed:	mov    BYTE PTR [rbx+0x141],0x1
  4090f4:	mov    DWORD PTR [rbx+0x144],r14d
  4090fb:	test   eax,eax
  4090fd:	je     0x408cf4
  409103:	lea    r8,[rip+0x25ace]        # 0x42ebd8
  40910a:	lea    rcx,[rip+0x243df]        # 0x42d4f0
  409111:	mov    r9d,r14d
  409114:	mov    edx,0x2a37
  409119:	call   0x423fa0
  40911e:	jmp    0x408cf4
  409123:	mov    rax,QWORD PTR [rsp+0xe8]
  40912b:	test   bpl,0x8
  40912f:	mov    rcx,rbx
  409132:	mov    DWORD PTR [rax],0xfd1
  409138:	je     0x4095e3
  40913e:	call   0x40ced0
  409143:	mov    eax,DWORD PTR [rsi]
  409145:	mov    r13d,0xc
  40914b:	test   eax,eax
  40914d:	je     0x408cf4
  409153:	lea    r8,[rip+0x2556e]        # 0x42e6c8
  40915a:	lea    rcx,[rip+0x2438f]        # 0x42d4f0
  409161:	mov    edx,0x2387
  409166:	call   0x423fa0
  40916b:	jmp    0x408cf4
  409170:	mov    rax,QWORD PTR [rsp+0xe8]
  409178:	test   bpl,0x80
  40917c:	mov    rcx,rbx
  40917f:	mov    DWORD PTR [rax],0xfd3
  409185:	je     0x409650
  40918b:	call   0x40ced0
  409190:	mov    eax,DWORD PTR [rsi]
  409192:	mov    r13d,0xc0
  409198:	test   eax,eax
  40919a:	je     0x408cf4
  4091a0:	lea    r8,[rip+0x25521]        # 0x42e6c8
  4091a7:	lea    rcx,[rip+0x24342]        # 0x42d4f0
  4091ae:	mov    edx,0x2c57
  4091b3:	call   0x423fa0
  4091b8:	jmp    0x408cf4
  4091bd:	nop    DWORD PTR [rax]
  4091c0:	mov    rcx,rbx
  4091c3:	mov    QWORD PTR [rsp+0x70],0x0
  4091cc:	call   0x40cfb0
  4091d1:	mov    r8d,DWORD PTR [rsi]
  4091d4:	movzx  r12d,ax
  4091d8:	test   r8d,r8d
  4091db:	jne    0x409fc0
  4091e1:	mov    rcx,rbx
  4091e4:	call   0x40cfb0
  4091e9:	mov    r8,QWORD PTR [rsp+0x48]
  4091ee:	lea    edx,[r12-0x2]
  4091f3:	xor    r9d,r9d
  4091f6:	mov    rcx,rbx
  4091f9:	mov    r14d,eax
  4091fc:	call   0x4057f0
  409201:	test   eax,eax
  409203:	mov    DWORD PTR [rsp+0x54],eax
  409207:	jle    0x409560
  40920d:	mov    ecx,DWORD PTR [rsi]
  40920f:	test   ecx,ecx
  409211:	jne    0x409fa0
  409217:	movzx  edx,WORD PTR [rsp+0x54]
  40921c:	xor    r8d,r8d
  40921f:	mov    rcx,rbx
  409222:	call   0x4051c0
  409227:	test   rax,rax
  40922a:	mov    QWORD PTR [rbx+0x128],rax
  409231:	je     0x409a90
  409237:	mov    edx,DWORD PTR [rsi]
  409239:	test   edx,edx
  40923b:	jne    0x409f75
  409241:	mov    edx,DWORD PTR [rbx+0x120]
  409247:	mov    rcx,rbx
  40924a:	sub    edx,0x1
  40924d:	mov    r12,QWORD PTR [rax+rdx*8]
  409251:	mov    rdx,r12
  409254:	call   0x401e30
  409259:	mov    eax,DWORD PTR [rsp+0x54]
  40925d:	mov    r15,QWORD PTR [rsp+0x70]
  409262:	mov    WORD PTR [r12+0xa],r14w
  409268:	mov    DWORD PTR [rsp+0x54],edi
  40926c:	xor    r14d,r14d
  40926f:	mov    rdi,r12
  409272:	sub    eax,0x1
  409275:	lea    rax,[rax*8+0x8]
  40927d:	mov    r12,rax
  409280:	mov    rax,QWORD PTR [rdi]
  409283:	mov    rdx,QWORD PTR [r15]
  409286:	mov    rcx,QWORD PTR [rax+r14*1]
  40928a:	add    rcx,0x38
  40928e:	call   0x41f8a0
  409293:	test   rax,rax
  409296:	je     0x409a90
  40929c:	add    r14,0x8
  4092a0:	mov    r15,QWORD PTR [r15+0x8]
  4092a4:	cmp    r14,r12
  4092a7:	jne    0x409280
  4092a9:	mov    rcx,QWORD PTR [rsp+0x70]
  4092ae:	mov    edi,DWORD PTR [rsp+0x54]
  4092b2:	xor    r12d,r12d
  4092b5:	call   0x405740
  4092ba:	jmp    0x408cf4
  4092bf:	nop
  4092c0:	mov    rax,QWORD PTR [rsp+0xe8]
  4092c8:	test   ebp,0x20000
  4092ce:	mov    DWORD PTR [rax],0xfcc
  4092d4:	je     0x409663
  4092da:	mov    rcx,rbx
  4092dd:	mov    r13d,0x30000
  4092e3:	call   0x40ced0
  4092e8:	mov    r9d,DWORD PTR [rsi]
  4092eb:	test   r9d,r9d
  4092ee:	je     0x408cf4
  4092f4:	lea    r8,[rip+0x253cd]        # 0x42e6c8
  4092fb:	lea    rcx,[rip+0x241ee]        # 0x42d4f0
  409302:	mov    edx,0x31b7
  409307:	call   0x423fa0
  40930c:	jmp    0x408cf4
  409311:	mov    rcx,rbx
  409314:	call   0x40ced0
  409319:	mov    r9d,DWORD PTR [rbx+0x178]
  409320:	test   r9d,r9d
  409323:	je     0x409805
  409329:	mov    eax,DWORD PTR [rsi]
  40932b:	mov    r14,QWORD PTR [rsp+0x58]
  409330:	test   eax,eax
  409332:	je     0x40934b
  409334:	jmp    0x40a26b
  409339:	nop    DWORD PTR [rax+0x0]
  409340:	mov    rdx,r14
  409343:	mov    rcx,rbx
  409346:	call   0x406dd0
  40934b:	mov    rcx,rbx
  40934e:	call   0x40ce80
  409353:	cmp    al,0xac
  409355:	jne    0x409780
  40935b:	mov    eax,DWORD PTR [rsi]
  40935d:	test   eax,eax
  40935f:	je     0x409340
  409361:	lea    r8,[rip+0x253c8]        # 0x42e730
  409368:	lea    rcx,[rip+0x24181]        # 0x42d4f0
  40936f:	mov    edx,0x24f5
  409374:	call   0x423fa0
  409379:	jmp    0x409340
  40937b:	nop    DWORD PTR [rax+rax*1+0x0]
  409380:	mov    rcx,rbx
  409383:	call   0x405980
  409388:	mov    r12d,eax
  40938b:	jmp    0x409010
  409390:	mov    rax,QWORD PTR [rsp+0xe8]
  409398:	test   bpl,0x8
  40939c:	mov    rcx,rbx
  40939f:	mov    DWORD PTR [rax],0xfd1
  4093a5:	je     0x409730
  4093ab:	call   0x40ced0
  4093b0:	mov    eax,DWORD PTR [rsi]
  4093b2:	mov    r13d,0xc
  4093b8:	test   eax,eax
  4093ba:	je     0x408cf4
  4093c0:	lea    r8,[rip+0x25301]        # 0x42e6c8
  4093c7:	lea    rcx,[rip+0x24122]        # 0x42d4f0
  4093ce:	mov    edx,0x23f7
  4093d3:	call   0x423fa0
  4093d8:	jmp    0x408cf4
  4093dd:	nop    DWORD PTR [rax]
  4093e0:	mov    rax,QWORD PTR [rsp+0xe8]
  4093e8:	test   bpl,0x20
  4093ec:	mov    rcx,rbx
  4093ef:	mov    DWORD PTR [rax],0xfd2
  4093f5:	je     0x409860
  4093fb:	call   0x40ced0
  409400:	mov    eax,DWORD PTR [rsi]
  409402:	mov    r13d,0x30
  409408:	test   eax,eax
  40940a:	je     0x408cf4
  409410:	lea    r8,[rip+0x252b1]        # 0x42e6c8
  409417:	lea    rcx,[rip+0x240d2]        # 0x42d4f0
  40941e:	mov    edx,0x26f7
  409423:	call   0x423fa0
  409428:	jmp    0x408cf4
  40942d:	nop    DWORD PTR [rax]
  409430:	mov    rax,QWORD PTR [rsp+0xe8]
  409438:	test   bpl,0x20
  40943c:	mov    rcx,rbx
  40943f:	mov    DWORD PTR [rax],0xfd2
  409445:	je     0x409910
  40944b:	call   0x40ced0
  409450:	mov    r10d,DWORD PTR [rsi]
  409453:	mov    r13d,0x30
  409459:	test   r10d,r10d
  40945c:	je     0x408cf4
  409462:	lea    r8,[rip+0x2525f]        # 0x42e6c8
  409469:	lea    rcx,[rip+0x24080]        # 0x42d4f0
  409470:	mov    edx,0x2737
  409475:	call   0x423fa0
  40947a:	jmp    0x408cf4
  40947f:	nop
  409480:	mov    rax,QWORD PTR [rsp+0xe8]
  409488:	test   bpl,0x2
  40948c:	mov    DWORD PTR [rax],0xfd7
  409492:	je     0x409763
  409498:	mov    rcx,rbx
  40949b:	mov    r13d,0x3
  4094a1:	call   0x40ced0
  4094a6:	mov    ecx,DWORD PTR [rsi]
  4094a8:	test   ecx,ecx
  4094aa:	je     0x408cf4
  4094b0:	lea    r8,[rip+0x25211]        # 0x42e6c8
  4094b7:	lea    rcx,[rip+0x24032]        # 0x42d4f0
  4094be:	mov    edx,0x3237
  4094c3:	call   0x423fa0
  4094c8:	jmp    0x408cf4
  4094cd:	nop    DWORD PTR [rax]
  4094d0:	call   0x40cfb0
  4094d5:	mov    r8d,DWORD PTR [rsi]
  4094d8:	movsx  r13d,ax
  4094dc:	test   r8d,r8d
  4094df:	jne    0x40a135
  4094e5:	mov    r9d,DWORD PTR [rbx+0x120]
  4094ec:	test   r9d,r9d
  4094ef:	je     0x40953b
  4094f1:	mov    rax,QWORD PTR [rbx+0x128]
  4094f8:	mov    r12,QWORD PTR [rax]
  4094fb:	movzx  edx,WORD PTR [r12+0xa]
  409501:	cmp    r13d,edx
  409504:	je     0x409d50
  40950a:	lea    edx,[r9-0x1]
  40950e:	lea    rcx,[rax+0x8]
  409512:	lea    rax,[rax+rdx*8+0x8]
  409517:	jmp    0x409536
  409519:	nop    DWORD PTR [rax+0x0]
  409520:	mov    r12,QWORD PTR [rcx]
  409523:	add    rcx,0x8
  409527:	movzx  edx,WORD PTR [r12+0xa]
  40952d:	cmp    r13d,edx
  409530:	je     0x409d50
  409536:	cmp    rcx,rax
  409539:	jne    0x409520
  40953b:	mov    ecx,DWORD PTR [rsi]
  40953d:	test   ecx,ecx
  40953f:	je     0x409560
  409541:	lea    r8,[rip+0x25628]        # 0x42eb70
  409548:	lea    rcx,[rip+0x23fa1]        # 0x42d4f0
  40954f:	mov    edx,0x7555
  409554:	call   0x423fa0
  409559:	nop    DWORD PTR [rax+0x0]
  409560:	mov    r12d,0xffffffff
  409566:	mov    edx,0x3
  40956b:	mov    rcx,rbx
  40956e:	call   0x40ab40
  409573:	mov    eax,r12d
  409576:	jmp    0x408b90
  40957b:	nop    DWORD PTR [rax+rax*1+0x0]
  409580:	mov    DWORD PTR [rsp+0x30],r9d
  409585:	mov    QWORD PTR [rsp+0x28],r8
  40958a:	mov    r9,rcx
  40958d:	lea    r8,[rip+0x250ac]        # 0x42e640
  409594:	lea    rcx,[rip+0x23f55]        # 0x42d4f0
  40959b:	mov    QWORD PTR [rsp+0x20],rdx
  4095a0:	mov    edx,0x20d7
  4095a5:	call   0x423fa0
  4095aa:	test   DWORD PTR [rbx+0x148],0xfffffffd
  4095b4:	jne    0x408ba4
  4095ba:	mov    r9d,DWORD PTR [rsi]
  4095bd:	test   r9d,r9d
  4095c0:	je     0x408b7d
  4095c6:	lea    r8,[rip+0x2509b]        # 0x42e668
  4095cd:	lea    rcx,[rip+0x23f1c]        # 0x42d4f0
  4095d4:	mov    edx,0x2107
  4095d9:	call   0x423fa0
  4095de:	jmp    0x408b7d
  4095e3:	call   0x406240
  4095e8:	mov    r13d,0xc
  4095ee:	mov    r12d,eax
  4095f1:	jmp    0x409010
  4095f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409600:	call   0x405370
  409605:	mov    r13d,0xc000
  40960b:	mov    r12d,eax
  40960e:	jmp    0x409010
  409613:	call   0x407030
  409618:	mov    r13d,0xc0
  40961e:	mov    r12d,eax
  409621:	jmp    0x409010
  409626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409630:	mov    edx,r15d
  409633:	mov    rcx,rbx
  409636:	mov    r13d,0xc0000
  40963c:	call   0x407720
  409641:	mov    r12d,eax
  409644:	jmp    0x409010
  409649:	nop    DWORD PTR [rax+0x0]
  409650:	call   0x4065a0
  409655:	mov    r13d,0xc0
  40965b:	mov    r12d,eax
  40965e:	jmp    0x409010
  409663:	mov    edx,r15d
  409666:	mov    rcx,rbx
  409669:	mov    r13d,0x30000
  40966f:	call   0x407720
  409674:	mov    r12d,eax
  409677:	jmp    0x409010
  40967c:	nop    DWORD PTR [rax+0x0]
  409680:	call   0x406f70
  409685:	mov    r13d,0xc
  40968b:	mov    r12d,eax
  40968e:	jmp    0x409010
  409693:	mov    rdx,QWORD PTR [rsp+0xf0]
  40969b:	mov    rcx,rbx
  40969e:	call   0x40a410
  4096a3:	cmp    DWORD PTR [rbx+0x178],0x64
  4096aa:	mov    r12d,eax
  4096ad:	jne    0x409bb0
  4096b3:	cmp    QWORD PTR [rsp+0xf0],0x0
  4096bc:	mov    r13d,0x300
  4096c2:	je     0x409010
  4096c8:	mov    rax,QWORD PTR [rsp+0xf0]
  4096d0:	test   BYTE PTR [rax],0x2
  4096d3:	jne    0x409010
  4096d9:	mov    rdx,QWORD PTR [rbx+0x160]
  4096e0:	mov    rcx,rbx
  4096e3:	call   0x404790
  4096e8:	jmp    0x409010
  4096ed:	nop    DWORD PTR [rax]
  4096f0:	mov    rdx,QWORD PTR [rsp+0xf0]
  4096f8:	mov    rcx,rbx
  4096fb:	call   0x40a410
  409700:	cmp    DWORD PTR [rbx+0x178],0xf
  409707:	mov    r12d,eax
  40970a:	ja     0x409bb0
  409710:	mov    edx,DWORD PTR [rbx+0x178]
  409716:	lea    rax,[rip+0x2589f]        # 0x42efbc
  40971d:	movsxd rdx,DWORD PTR [rax+rdx*4]
  409721:	add    rax,rdx
  409724:	jmp    rax
  409726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409730:	call   0x4075a0
  409735:	test   eax,eax
  409737:	mov    r12d,eax
  40973a:	js     0x409566
  409740:	mov    rcx,rbx
  409743:	call   0x40ce80
  409748:	cmp    al,0xa4
  40974a:	mov    rcx,rbx
  40974d:	je     0x409fe0
  409753:	call   0x40ced0
  409758:	mov    r13d,0xc
  40975e:	jmp    0x408cf4
  409763:	mov    edx,r15d
  409766:	mov    rcx,rbx
  409769:	mov    r13d,0x3
  40976f:	call   0x407720
  409774:	mov    r12d,eax
  409777:	jmp    0x409010
  40977c:	nop    DWORD PTR [rax+0x0]
  409780:	mov    rcx,rbx
  409783:	call   0x40ced0
  409788:	mov    eax,DWORD PTR [rsi]
  40978a:	test   eax,eax
  40978c:	jne    0x40a103
  409792:	mov    rax,QWORD PTR [rsp+0x68]
  409797:	test   rax,rax
  40979a:	mov    rcx,rax
  40979d:	je     0x4097fb
  40979f:	cmp    WORD PTR [rax+0x8],0x0
  4097a4:	je     0x4097fb
  4097a6:	mov    rdx,QWORD PTR [rax]
  4097a9:	mov    r14,QWORD PTR [rdx]
  4097ac:	mov    edx,DWORD PTR [rbx+0x178]
  4097b2:	cmp    edx,0x2
  4097b5:	je     0x40a0be
  4097bb:	lea    eax,[rdx-0xb]
  4097be:	and    eax,0xfffffffd
  4097c1:	jne    0x4097ea
  4097c3:	mov    rax,QWORD PTR [rbx+0x160]
  4097ca:	test   rax,rax
  4097cd:	je     0x4097ea
  4097cf:	mov    r11d,DWORD PTR [rax+0xc]
  4097d3:	test   r11d,r11d
  4097d6:	jne    0x4097ea
  4097d8:	mov    r10d,DWORD PTR [r14+0x64]
  4097dc:	test   r10d,r10d
  4097df:	jle    0x4097ea
  4097e1:	mov    rcx,QWORD PTR [r14+0x48]
  4097e5:	mov    ecx,DWORD PTR [rcx]
  4097e7:	mov    DWORD PTR [rax+0xc],ecx
  4097ea:	cmp    edx,0xf
  4097ed:	je     0x40a321
  4097f3:	mov    rax,QWORD PTR [rsp+0x68]
  4097f8:	mov    rcx,rax
  4097fb:	call   0x4046c0
  409800:	jmp    0x408cf4
  409805:	mov    rax,QWORD PTR [rsp+0xe8]
  40980d:	test   ebp,0x8000
  409813:	mov    rcx,rbx
  409816:	mov    DWORD PTR [rax],0xfca
  40981c:	je     0x409bc0
  409822:	call   0x40ced0
  409827:	mov    r9d,DWORD PTR [rsi]
  40982a:	mov    r13d,0xc000
  409830:	test   r9d,r9d
  409833:	je     0x408cf4
  409839:	lea    r8,[rip+0x24e88]        # 0x42e6c8
  409840:	lea    rcx,[rip+0x23ca9]        # 0x42d4f0
  409847:	mov    edx,0x2677
  40984c:	call   0x423fa0
  409851:	jmp    0x408cf4
  409856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409860:	call   0x40cfb0
  409865:	mov    rcx,rbx
  409868:	call   0x40cfb0
  40986d:	mov    rcx,rbx
  409870:	mov    r13d,eax
  409873:	call   0x40ce80
  409878:	mov    r9d,DWORD PTR [rsi]
  40987b:	movzx  eax,al
  40987e:	mov    r15d,eax
  409881:	test   r9d,r9d
  409884:	jne    0x40a243
  40988a:	mov    r8d,DWORD PTR [rbx+0x120]
  409891:	test   r8d,r8d
  409894:	je     0x4098db
  409896:	mov    rax,QWORD PTR [rbx+0x128]
  40989d:	movsx  ecx,r13w
  4098a1:	mov    r12,QWORD PTR [rax]
  4098a4:	movzx  edx,WORD PTR [r12+0xa]
  4098aa:	cmp    edx,ecx
  4098ac:	je     0x409dd0
  4098b2:	sub    r8d,0x1
  4098b6:	lea    rdx,[rax+0x8]
  4098ba:	lea    r8,[rax+r8*8+0x8]
  4098bf:	jmp    0x4098d6
  4098c1:	mov    r12,QWORD PTR [rdx]
  4098c4:	add    rdx,0x8
  4098c8:	movzx  eax,WORD PTR [r12+0xa]
  4098ce:	cmp    eax,ecx
  4098d0:	je     0x409dd0
  4098d6:	cmp    rdx,r8
  4098d9:	jne    0x4098c1
  4098db:	test   r9d,r9d
  4098de:	je     0x409560
  4098e4:	lea    r8,[rip+0x24f7d]        # 0x42e868
  4098eb:	lea    rcx,[rip+0x23bfe]        # 0x42d4f0
  4098f2:	movsx  r9d,r13w
  4098f6:	mov    edx,0x57e7
  4098fb:	mov    r12d,0xffffffff
  409901:	call   0x423fa0
  409906:	jmp    0x409566
  40990b:	nop    DWORD PTR [rax+rax*1+0x0]
  409910:	call   0x40cfb0
  409915:	mov    r9d,DWORD PTR [rsi]
  409918:	movzx  r12d,ax
  40991c:	test   r9d,r9d
  40991f:	jne    0x40a223
  409925:	mov    rcx,rbx
  409928:	call   0x40cfb0
  40992d:	mov    r8d,DWORD PTR [rsi]
  409930:	mov    r14d,eax
  409933:	test   r8d,r8d
  409936:	jne    0x40a202
  40993c:	mov    rcx,rbx
  40993f:	call   0x40ce80
  409944:	mov    ecx,DWORD PTR [rsi]
  409946:	movzx  eax,al
  409949:	mov    DWORD PTR [rsp+0x54],eax
  40994d:	test   ecx,ecx
  40994f:	jne    0x40a1e2
  409955:	mov    r8d,DWORD PTR [rsp+0x54]
  40995a:	mov    edx,r12d
  40995d:	mov    rcx,rbx
  409960:	call   0x4051c0
  409965:	test   rax,rax
  409968:	mov    QWORD PTR [rbx+0x128],rax
  40996f:	je     0x409560
  409975:	mov    edx,DWORD PTR [rsi]
  409977:	test   edx,edx
  409979:	jne    0x40a1b7
  40997f:	mov    edx,DWORD PTR [rbx+0x120]
  409985:	mov    rcx,rbx
  409988:	sub    edx,0x1
  40998b:	mov    r13,QWORD PTR [rax+rdx*8]
  40998f:	mov    rdx,r13
  409992:	call   0x401e30
  409997:	mov    r15d,DWORD PTR [rsi]
  40999a:	test   r15d,r15d
  40999d:	jne    0x40a19a
  4099a3:	mov    edx,DWORD PTR [rsp+0x54]
  4099a7:	mov    r15,QWORD PTR [r13+0x30]
  4099ab:	mov    WORD PTR [r13+0xa],r14w
  4099b0:	mov    eax,edx
  4099b2:	sub    eax,0x1
  4099b5:	test   edx,edx
  4099b7:	lea    r14,[r15+rax*2+0x2]
  4099bc:	je     0x4099d6
  4099be:	xchg   ax,ax
  4099c0:	mov    rcx,rbx
  4099c3:	add    r15,0x2
  4099c7:	call   0x40cfb0
  4099cc:	mov    WORD PTR [r15-0x2],ax
  4099d1:	cmp    r15,r14
  4099d4:	jne    0x4099c0
  4099d6:	mov    eax,DWORD PTR [rsi]
  4099d8:	test   eax,eax
  4099da:	jne    0x40a172
  4099e0:	test   r12d,r12d
  4099e3:	je     0x409b40
  4099e9:	xor    r15d,r15d
  4099ec:	jmp    0x4099ff
  4099ee:	xchg   ax,ax
  4099f0:	add    r15,0x1
  4099f4:	cmp    r12d,r15d
  4099f7:	jbe    0x409b20
  4099fd:	mov    eax,DWORD PTR [rsi]
  4099ff:	test   eax,eax
  409a01:	jne    0x409a60
  409a03:	mov    rax,QWORD PTR [r13+0x0]
  409a07:	mov    rcx,rbx
  409a0a:	mov    r14,QWORD PTR [rax+r15*8]
  409a0e:	call   0x40ce80
  409a13:	mov    rcx,rbx
  409a16:	mov    BYTE PTR [r14+0x5e],al
  409a1a:	call   0x40cfb0
  409a1f:	mov    rdx,r14
  409a22:	mov    WORD PTR [r14+0x60],ax
  409a27:	mov    rcx,rbx
  409a2a:	call   0x407110
  409a2f:	mov    rax,QWORD PTR [r14+0x38]
  409a33:	cmp    QWORD PTR [rax],0x0
  409a37:	jne    0x4099f0
  409a39:	movzx  ecx,BYTE PTR [r14+0x5e]
  409a3e:	call   0x4053e0
  409a43:	lea    rcx,[r14+0x38]
  409a47:	mov    rdx,rax
  409a4a:	call   0x41f8a0
  409a4f:	test   rax,rax
  409a52:	jne    0x4099f0
  409a54:	jmp    0x409560
  409a59:	nop    DWORD PTR [rax+0x0]
  409a60:	lea    r8,[rip+0x25039]        # 0x42eaa0
  409a67:	lea    rcx,[rip+0x23a82]        # 0x42d4f0
  409a6e:	mov    edx,0xaf45
  409a73:	call   0x423fa0
  409a78:	jmp    0x409a03
  409a7a:	nop    WORD PTR [rax+rax*1+0x0]
  409a80:	cmp    edi,0x1
  409a83:	sbb    eax,eax
  409a85:	and    eax,0x3
  409a88:	sub    eax,0x2
  409a8b:	jmp    0x408b90
  409a90:	mov    rcx,QWORD PTR [rsp+0x70]
  409a95:	mov    r12d,0xffffffff
  409a9b:	call   0x405740
  409aa0:	jmp    0x409566
  409aa5:	mov    rdx,QWORD PTR [rsp+0xf0]
  409aad:	mov    rcx,rbx
  409ab0:	mov    r13d,0x300
  409ab6:	call   0x40a410
  409abb:	mov    r12d,eax
  409abe:	jmp    0x409010
  409ac3:	mov    eax,DWORD PTR [rsi]
  409ac5:	test   eax,eax
  409ac7:	jne    0x409caf
  409acd:	lea    r8d,[r14-0x2]
  409ad1:	xor    edx,edx
  409ad3:	mov    rcx,rbx
  409ad6:	call   0x40cf10
  409adb:	xor    edx,edx
  409add:	mov    rcx,rbx
  409ae0:	call   0x4180d0
  409ae5:	mov    rax,QWORD PTR [rbx+0x160]
  409aec:	test   rax,rax
  409aef:	je     0x408cf4
  409af5:	cmp    BYTE PTR [rax+0x2e],0x0
  409af9:	jne    0x408cf4
  409aff:	mov    rcx,rbx
  409b02:	call   0x40ce80
  409b07:	cmp    al,0xe5
  409b09:	je     0x409ff3
  409b0f:	mov    rcx,rbx
  409b12:	jmp    0x40907d
  409b17:	nop    WORD PTR [rax+rax*1+0x0]
  409b20:	mov    r12d,DWORD PTR [rsi]
  409b23:	test   r12d,r12d
  409b26:	je     0x409b40
  409b28:	lea    r8,[rip+0x24fa1]        # 0x42ead0
  409b2f:	lea    rcx,[rip+0x239ba]        # 0x42d4f0
  409b36:	mov    edx,0xb025
  409b3b:	call   0x423fa0
  409b40:	mov    rcx,r13
  409b43:	mov    r13d,0x30
  409b49:	call   0x401fb0
  409b4e:	mov    r12d,eax
  409b51:	jmp    0x409010
  409b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b60:	call   0x4058d0
  409b65:	mov    r13d,0xc00
  409b6b:	mov    r12d,eax
  409b6e:	jmp    0x409010
  409b73:	mov    r8,QWORD PTR [rsp+0x48]
  409b78:	mov    rcx,rbx
  409b7b:	mov    r9d,0x1e
  409b81:	mov    edx,0x1e
  409b86:	call   0x40d020
  409b8b:	lea    r8d,[r14-0x1e]
  409b8f:	movzx  eax,al
  409b92:	xor    edx,edx
  409b94:	mov    rcx,rbx
  409b97:	mov    BYTE PTR [rsp+rax*1+0x70],0x0
  409b9c:	movzx  r8d,r8b
  409ba0:	call   0x40cf10
  409ba5:	jmp    0x408d8a
  409baa:	nop    WORD PTR [rax+rax*1+0x0]
  409bb0:	mov    r13d,0x300
  409bb6:	jmp    0x409010
  409bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  409bc0:	call   0x406ed0
  409bc5:	mov    r13d,0xc000
  409bcb:	mov    r12d,eax
  409bce:	jmp    0x409010
  409bd3:	mov    rdx,QWORD PTR [rsp+0xf0]
  409bdb:	mov    rcx,rbx
  409bde:	call   0x40a410
  409be3:	mov    r12d,eax
  409be6:	mov    rax,QWORD PTR [rbx+0x150]
  409bed:	cmp    rax,0xffffffffffffffff
  409bf1:	cmove  rax,QWORD PTR [rsp+0x40]
  409bf7:	mov    QWORD PTR [rsp+0x40],rax
  409bfc:	jmp    0x409010
  409c01:	call   0x405ca0
  409c06:	mov    r12d,eax
  409c09:	jmp    0x409010
  409c0e:	mov    r11d,DWORD PTR [rsi]
  409c11:	test   r11d,r11d
  409c14:	jne    0x40a35b
  409c1a:	mov    rdx,QWORD PTR [rbx+0x138]
  409c21:	test   rdx,rdx
  409c24:	je     0x409c42
  409c26:	movzx  eax,WORD PTR [rdx+0x44]
  409c2a:	and    eax,0xfffffffd
  409c2d:	or     eax,0x5
  409c30:	cmp    DWORD PTR [rdx+0x40],0x2
  409c34:	mov    WORD PTR [rdx+0x44],ax
  409c38:	jne    0x409c42
  409c3a:	mov    rcx,rbx
  409c3d:	call   0x404c20
  409c42:	mov    rax,QWORD PTR [rsp+0xe8]
  409c4a:	mov    r13d,0x300
  409c50:	mov    r12d,0x1
  409c56:	mov    DWORD PTR [rax],0x1
  409c5c:	jmp    0x408cf4
  409c61:	mov    rax,QWORD PTR [rsp+0xe8]
  409c69:	mov    r13d,0x300
  409c6f:	mov    DWORD PTR [rax],0xfd4
  409c75:	mov    rax,QWORD PTR [rsp+0x40]
  409c7a:	mov    QWORD PTR [rbx+0x150],rax
  409c81:	jmp    0x409010
  409c86:	cmp    QWORD PTR [rsp+0xf0],0x0
  409c8f:	je     0x409c42
  409c91:	mov    rax,QWORD PTR [rsp+0xf0]
  409c99:	test   BYTE PTR [rax],0x2
  409c9c:	jne    0x409c42
  409c9e:	mov    rdx,QWORD PTR [rbx+0x160]
  409ca5:	mov    rcx,rbx
  409ca8:	call   0x404790
  409cad:	jmp    0x409c42
  409caf:	lea    r8,[rip+0x24f52]        # 0x42ec08
  409cb6:	lea    rcx,[rip+0x23833]        # 0x42d4f0
  409cbd:	movzx  r9d,r15b
  409cc1:	mov    edx,0x9dc2
  409cc6:	call   0x423fa0
  409ccb:	jmp    0x409acd
  409cd0:	mov    rdx,QWORD PTR [rbx+0x118]
  409cd7:	test   rdx,rdx
  409cda:	je     0x408fba
  409ce0:	mov    rcx,rbx
  409ce3:	call   0x401e30
  409ce8:	jmp    0x408fba
  409ced:	nop    DWORD PTR [rax]
  409cf0:	call   0x40ced0
  409cf5:	mov    r10d,DWORD PTR [rsi]
  409cf8:	mov    r13d,0xc00
  409cfe:	test   r10d,r10d
  409d01:	je     0x408cf4
  409d07:	lea    r8,[rip+0x249ba]        # 0x42e6c8
  409d0e:	lea    rcx,[rip+0x237db]        # 0x42d4f0
  409d15:	mov    edx,0x2847
  409d1a:	call   0x423fa0
  409d1f:	jmp    0x408cf4
  409d24:	call   0x40ced0
  409d29:	mov    ecx,DWORD PTR [rsi]
  409d2b:	test   ecx,ecx
  409d2d:	je     0x408cf4
  409d33:	lea    r8,[rip+0x2498e]        # 0x42e6c8
  409d3a:	lea    rcx,[rip+0x237af]        # 0x42d4f0
  409d41:	mov    edx,0x2277
  409d46:	call   0x423fa0
  409d4b:	jmp    0x408cf4
  409d50:	mov    rdx,r12
  409d53:	mov    rcx,rbx
  409d56:	call   0x401e30
  409d5b:	cmp    WORD PTR [r12+0x8],0x0
  409d62:	je     0x409f67
  409d68:	xor    r13d,r13d
  409d6b:	jmp    0x409d83
  409d6d:	nop    DWORD PTR [rax]
  409d70:	movzx  eax,WORD PTR [r12+0x8]
  409d76:	add    r13d,0x1
  409d7a:	cmp    r13d,eax
  409d7d:	jae    0x409f67
  409d83:	mov    rdx,QWORD PTR [r12]
  409d87:	mov    eax,r13d
  409d8a:	mov    rcx,rbx
  409d8d:	mov    rdx,QWORD PTR [rdx+rax*8]
  409d91:	mov    rax,QWORD PTR [rdx]
  409d94:	call   QWORD PTR [rax+0x8]
  409d97:	test   eax,eax
  409d99:	jns    0x409d70
  409d9b:	mov    edx,DWORD PTR [rsi]
  409d9d:	test   edx,edx
  409d9f:	je     0x409560
  409da5:	lea    r8,[rip+0x24dfc]        # 0x42eba8
  409dac:	lea    rcx,[rip+0x2373d]        # 0x42d4f0
  409db3:	mov    edx,0x7615
  409db8:	mov    r12d,0xffffffff
  409dbe:	call   0x423fa0
  409dc3:	jmp    0x409566
  409dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  409dd0:	test   r9d,r9d
  409dd3:	jne    0x40a2fe
  409dd9:	mov    rdx,r12
  409ddc:	mov    rcx,rbx
  409ddf:	call   0x401e30
  409de4:	mov    eax,DWORD PTR [rsi]
  409de6:	test   eax,eax
  409de8:	jne    0x40a2de
  409dee:	xor    r14d,r14d
  409df1:	xor    r13d,r13d
  409df4:	test   r15d,r15d
  409df7:	je     0x409f28
  409dfd:	mov    DWORD PTR [rsp+0x54],edi
  409e01:	jmp    0x409e62
  409e03:	mov    rdx,rdi
  409e06:	mov    rcx,rbx
  409e09:	call   0x421130
  409e0e:	mov    rax,QWORD PTR [rdi]
  409e11:	mov    rdx,rdi
  409e14:	mov    rcx,rbx
  409e17:	call   QWORD PTR [rax]
  409e19:	mov    edx,DWORD PTR [rsi]
  409e1b:	test   edx,edx
  409e1d:	jne    0x409f03
  409e23:	mov    eax,DWORD PTR [rdi+0x10]
  409e26:	mov    rdx,rdi
  409e29:	mov    rcx,rbx
  409e2c:	mov    DWORD PTR [rdi+0x20],eax
  409e2f:	call   0x4060c0
  409e34:	cmp    WORD PTR [rbx],0x402
  409e39:	je     0x409e51
  409e3b:	mov    rcx,rbx
  409e3e:	call   0x40ce80
  409e43:	xor    edx,edx
  409e45:	movzx  r8d,al
  409e49:	mov    rcx,rbx
  409e4c:	call   0x40cf10
  409e51:	add    r13d,0x1
  409e55:	add    r14,0x8
  409e59:	cmp    r15d,r13d
  409e5c:	je     0x409f24
  409e62:	mov    r11d,DWORD PTR [rsi]
  409e65:	test   r11d,r11d
  409e68:	jne    0x409ee3
  409e6a:	mov    rax,QWORD PTR [r12]
  409e6e:	mov    rcx,rbx
  409e71:	mov    rdi,QWORD PTR [rax+r14*1]
  409e75:	call   0x40ce80
  409e7a:	mov    rcx,rbx
  409e7d:	mov    BYTE PTR [rdi+0x5e],al
  409e80:	call   0x40ce80
  409e85:	movzx  eax,al
  409e88:	mov    WORD PTR [rdi+0x60],ax
  409e8c:	mov    rax,QWORD PTR [rdi+0x38]
  409e90:	cmp    QWORD PTR [rax],0x0
  409e94:	jne    0x409eb4
  409e96:	movzx  ecx,BYTE PTR [rdi+0x5e]
  409e9a:	call   0x4053e0
  409e9f:	lea    rcx,[rdi+0x38]
  409ea3:	mov    rdx,rax
  409ea6:	call   0x41f8a0
  409eab:	test   rax,rax
  409eae:	je     0x409560
  409eb4:	mov    rcx,rbx
  409eb7:	call   0x40cfd0
  409ebc:	mov    rcx,rbx
  409ebf:	mov    DWORD PTR [rdi+0x8],eax
  409ec2:	call   0x40ce80
  409ec7:	mov    rdx,QWORD PTR [rip+0x2ecc2]        # 0x438b90
  409ece:	movzx  eax,al
  409ed1:	mov    r8,rax
  409ed4:	cmp    BYTE PTR [rdx+rax*1],0x0
  409ed8:	jne    0x409e03
  409ede:	jmp    0x409560
  409ee3:	lea    r8,[rip+0x24a18]        # 0x42e902
  409eea:	lea    rcx,[rip+0x235ff]        # 0x42d4f0
  409ef1:	mov    r9d,r13d
  409ef4:	mov    edx,0x58c5
  409ef9:	call   0x423fa0
  409efe:	jmp    0x409e6a
  409f03:	mov    r9d,DWORD PTR [rdi+0x10]
  409f07:	lea    r8,[rip+0x24a12]        # 0x42e920
  409f0e:	lea    rcx,[rip+0x235db]        # 0x42d4f0
  409f15:	mov    edx,0x59e5
  409f1a:	call   0x423fa0
  409f1f:	jmp    0x409e23
  409f24:	mov    edi,DWORD PTR [rsp+0x54]
  409f28:	mov    rcx,rbx
  409f2b:	call   0x40ce80
  409f30:	mov    r14d,DWORD PTR [rsi]
  409f33:	movzx  r13d,al
  409f37:	test   r14d,r14d
  409f3a:	jne    0x40a33a
  409f40:	test   r13b,r13b
  409f43:	jne    0x40a28d
  409f49:	xor    eax,eax
  409f4b:	mov    WORD PTR [r12+0x38],ax
  409f51:	mov    rcx,r12
  409f54:	mov    r13d,0x30
  409f5a:	call   0x401fb0
  409f5f:	mov    r12d,eax
  409f62:	jmp    0x409010
  409f67:	mov    r13d,0x3000
  409f6d:	xor    r12d,r12d
  409f70:	jmp    0x408cf4
  409f75:	mov    r9d,DWORD PTR [rbx+0x120]
  409f7c:	lea    r8,[rip+0x2486d]        # 0x42e7f0
  409f83:	lea    rcx,[rip+0x23566]        # 0x42d4f0
  409f8a:	mov    edx,0xa965
  409f8f:	call   0x423fa0
  409f94:	mov    rax,QWORD PTR [rbx+0x128]
  409f9b:	jmp    0x409241
  409fa0:	lea    r8,[rip+0x24819]        # 0x42e7c0
  409fa7:	lea    rcx,[rip+0x23542]        # 0x42d4f0
  409fae:	mov    r9d,eax
  409fb1:	mov    edx,0xa915
  409fb6:	call   0x423fa0
  409fbb:	jmp    0x409217
  409fc0:	lea    r8,[rip+0x247c9]        # 0x42e790
  409fc7:	lea    rcx,[rip+0x23522]        # 0x42d4f0
  409fce:	mov    r9d,r12d
  409fd1:	mov    edx,0xa855
  409fd6:	call   0x423fa0
  409fdb:	jmp    0x4091e1
  409fe0:	call   0x405ca0
  409fe5:	mov    r13d,0xc
  409feb:	mov    r12d,eax
  409fee:	jmp    0x409010
  409ff3:	mov    edx,0xe5
  409ff8:	mov    rcx,rbx
  409ffb:	call   0x408640
  40a000:	mov    rax,QWORD PTR [rbx+0x160]
  40a007:	test   rax,rax
  40a00a:	je     0x408cf4
  40a010:	cmp    BYTE PTR [rax+0x2e],0x0
  40a014:	je     0x408cf4
  40a01a:	mov    rcx,rbx
  40a01d:	call   0x40ce80
  40a022:	cmp    al,0xfd
  40a024:	jne    0x409b0f
  40a02a:	mov    rdx,QWORD PTR [rsp+0xf0]
  40a032:	mov    rcx,rbx
  40a035:	call   0x40a410
  40a03a:	cmp    QWORD PTR [rsp+0xf0],0x0
  40a043:	mov    r12d,eax
  40a046:	je     0x40a053
  40a048:	mov    rax,QWORD PTR [rsp+0xf0]
  40a050:	and    DWORD PTR [rax],0xfffffffd
  40a053:	mov    rax,QWORD PTR [rsp+0xe8]
  40a05b:	test   ebp,0x200
  40a061:	mov    r13d,0x300
  40a067:	mov    DWORD PTR [rax],0xfd4
  40a06d:	je     0x409010
  40a073:	mov    rcx,rbx
  40a076:	call   0x40ced0
  40a07b:	cmp    DWORD PTR [rsi],0x0
  40a07e:	je     0x409010
  40a084:	lea    r8,[rip+0x2463d]        # 0x42e6c8
  40a08b:	lea    rcx,[rip+0x2345e]        # 0x42d4f0
  40a092:	mov    edx,0x2be7
  40a097:	call   0x423fa0
  40a09c:	jmp    0x409010
  40a0a1:	lea    r8,[rip+0x24a58]        # 0x42eb00
  40a0a8:	lea    rcx,[rip+0x23441]        # 0x42d4f0
  40a0af:	mov    edx,0x27b5
  40a0b4:	call   0x423fa0
  40a0b9:	jmp    0x408fba
  40a0be:	mov    r15,QWORD PTR [rbx+0x138]
  40a0c5:	test   r15,r15
  40a0c8:	je     0x4097f8
  40a0ce:	mov    rax,QWORD PTR [r14+0x48]
  40a0d2:	mov    r9d,DWORD PTR [rax]
  40a0d5:	mov    eax,DWORD PTR [rsi]
  40a0d7:	test   eax,eax
  40a0d9:	mov    DWORD PTR [r15+0x18],r9d
  40a0dd:	jne    0x40a378
  40a0e3:	movzx  eax,WORD PTR [r15+0x44]
  40a0e8:	and    eax,0xffffffb9
  40a0eb:	cmp    r9d,0x1
  40a0ef:	sbb    ecx,ecx
  40a0f1:	and    ecx,0x42
  40a0f4:	add    ecx,0x2
  40a0f7:	or     eax,ecx
  40a0f9:	mov    WORD PTR [r15+0x44],ax
  40a0fe:	jmp    0x4097bb
  40a103:	mov    rax,QWORD PTR [rsp+0x68]
  40a108:	mov    r9d,0xffffffff
  40a10e:	test   rax,rax
  40a111:	je     0x40a118
  40a113:	movzx  r9d,WORD PTR [rax+0x8]
  40a118:	lea    r8,[rip+0x24633]        # 0x42e752
  40a11f:	lea    rcx,[rip+0x233ca]        # 0x42d4f0
  40a126:	mov    edx,0x2537
  40a12b:	call   0x423fa0
  40a130:	jmp    0x409792
  40a135:	lea    r8,[rip+0x24a04]        # 0x42eb40
  40a13c:	lea    rcx,[rip+0x233ad]        # 0x42d4f0
  40a143:	mov    r9d,r13d
  40a146:	mov    edx,0x7515
  40a14b:	call   0x423fa0
  40a150:	jmp    0x4094e5
  40a155:	lea    r8,[rip+0x2456c]        # 0x42e6c8
  40a15c:	lea    rcx,[rip+0x2338d]        # 0x42d4f0
  40a163:	mov    edx,0x2dc7
  40a168:	call   0x423fa0
  40a16d:	jmp    0x408cf4
  40a172:	lea    r8,[rip+0x248f7]        # 0x42ea70
  40a179:	lea    rcx,[rip+0x23370]        # 0x42d4f0
  40a180:	mov    edx,0xaf15
  40a185:	call   0x423fa0
  40a18a:	test   r12d,r12d
  40a18d:	je     0x409b20
  40a193:	mov    eax,DWORD PTR [rsi]
  40a195:	jmp    0x4099e9
  40a19a:	lea    r8,[rip+0x2489f]        # 0x42ea40
  40a1a1:	lea    rcx,[rip+0x23348]        # 0x42d4f0
  40a1a8:	mov    edx,0xae35
  40a1ad:	call   0x423fa0
  40a1b2:	jmp    0x4099a3
  40a1b7:	mov    r9d,DWORD PTR [rbx+0x120]
  40a1be:	lea    r8,[rip+0x24843]        # 0x42ea08
  40a1c5:	lea    rcx,[rip+0x23324]        # 0x42d4f0
  40a1cc:	mov    edx,0xade5
  40a1d1:	call   0x423fa0
  40a1d6:	mov    rax,QWORD PTR [rbx+0x128]
  40a1dd:	jmp    0x40997f
  40a1e2:	lea    r8,[rip+0x247ef]        # 0x42e9d8
  40a1e9:	lea    rcx,[rip+0x23300]        # 0x42d4f0
  40a1f0:	mov    r9d,eax
  40a1f3:	mov    edx,0xad95
  40a1f8:	call   0x423fa0
  40a1fd:	jmp    0x409955
  40a202:	lea    r8,[rip+0x24797]        # 0x42e9a0
  40a209:	lea    rcx,[rip+0x232e0]        # 0x42d4f0
  40a210:	movzx  r9d,ax
  40a214:	mov    edx,0xad15
  40a219:	call   0x423fa0
  40a21e:	jmp    0x40993c
  40a223:	lea    r8,[rip+0x24746]        # 0x42e970
  40a22a:	lea    rcx,[rip+0x232bf]        # 0x42d4f0
  40a231:	mov    r9d,r12d
  40a234:	mov    edx,0xac75
  40a239:	call   0x423fa0
  40a23e:	jmp    0x409925
  40a243:	lea    r8,[rip+0x245de]        # 0x42e828
  40a24a:	lea    rcx,[rip+0x2329f]        # 0x42d4f0
  40a251:	movsx  r9d,r13w
  40a255:	mov    DWORD PTR [rsp+0x20],eax
  40a259:	mov    edx,0x5755
  40a25e:	call   0x423fa0
  40a263:	mov    r9d,DWORD PTR [rsi]
  40a266:	jmp    0x40988a
  40a26b:	lea    r8,[rip+0x24496]        # 0x42e708
  40a272:	lea    rcx,[rip+0x23277]        # 0x42d4f0
  40a279:	mov    edx,0x24d7
  40a27e:	call   0x423fa0
  40a283:	mov    r14,QWORD PTR [rsp+0x58]
  40a288:	jmp    0x40934b
  40a28d:	movzx  ecx,r13b
  40a291:	mov    edx,0x2
  40a296:	call   0x4295c8
  40a29b:	test   rax,rax
  40a29e:	mov    r14,rax
  40a2a1:	mov    QWORD PTR [r12+0x30],rax
  40a2a6:	je     0x409560
  40a2ac:	movzx  eax,r13b
  40a2b0:	mov    WORD PTR [r12+0x38],ax
  40a2b6:	lea    eax,[r13-0x1]
  40a2ba:	lea    r13,[r14+rax*2+0x2]
  40a2bf:	nop
  40a2c0:	mov    rcx,rbx
  40a2c3:	add    r14,0x2
  40a2c7:	call   0x40ce80
  40a2cc:	movzx  eax,al
  40a2cf:	mov    WORD PTR [r14-0x2],ax
  40a2d4:	cmp    r14,r13
  40a2d7:	jne    0x40a2c0
  40a2d9:	jmp    0x409f51
  40a2de:	lea    r8,[rip+0x245f3]        # 0x42e8d8
  40a2e5:	lea    rcx,[rip+0x23204]        # 0x42d4f0
  40a2ec:	mov    r9d,r15d
  40a2ef:	mov    edx,0x5855
  40a2f4:	call   0x423fa0
  40a2f9:	jmp    0x409dee
  40a2fe:	movzx  r9d,WORD PTR [r12+0xa]
  40a304:	lea    r8,[rip+0x245a5]        # 0x42e8b0
  40a30b:	lea    rcx,[rip+0x231de]        # 0x42d4f0
  40a312:	mov    edx,0x5827
  40a317:	call   0x423fa0
  40a31c:	jmp    0x409dd9
  40a321:	mov    rdx,QWORD PTR [rbx+0x160]
  40a328:	mov    rcx,rbx
  40a32b:	call   0x404790
  40a330:	mov    rcx,QWORD PTR [rsp+0x68]
  40a335:	jmp    0x4097fb
  40a33a:	lea    r8,[rip+0x245ff]        # 0x42e940
  40a341:	lea    rcx,[rip+0x231a8]        # 0x42d4f0
  40a348:	movzx  r9d,r13b
  40a34c:	mov    edx,0x5ac5
  40a351:	call   0x423fa0
  40a356:	jmp    0x409f40
  40a35b:	lea    r8,[rip+0x248c5]        # 0x42ec27
  40a362:	lea    rcx,[rip+0x23187]        # 0x42d4f0
  40a369:	mov    edx,0x2e67
  40a36e:	call   0x423fa0
  40a373:	jmp    0x409c1a
  40a378:	lea    r8,[rip+0x243f0]        # 0x42e76f
  40a37f:	lea    rcx,[rip+0x2316a]        # 0x42d4f0
  40a386:	mov    dx,0x25a7
  40a38a:	call   0x423fa0
  40a38f:	mov    r9d,DWORD PTR [r15+0x18]
  40a393:	mov    edx,DWORD PTR [rbx+0x178]
  40a399:	jmp    0x40a0e3
  40a39e:	xchg   ax,ax
  40a3a0:	push   r12
  40a3a2:	push   rbp
  40a3a3:	push   rdi
  40a3a4:	push   rsi
  40a3a5:	push   rbx
  40a3a6:	sub    rsp,0x30
  40a3aa:	xor    ebx,ebx
  40a3ac:	mov    r12d,0xffffffff
  40a3b2:	lea    rdi,[rsp+0x2c]
  40a3b7:	lea    rsi,[rsp+0x28]
  40a3bc:	mov    rbp,rcx
  40a3bf:	nop
  40a3c0:	mov    r9d,0x100
  40a3c6:	mov    r8,rdi
  40a3c9:	mov    rdx,rsi
  40a3cc:	mov    rcx,rbp
  40a3cf:	call   0x408b20
  40a3d4:	test   eax,eax
  40a3d6:	jne    0x40a3f4
  40a3d8:	mov    eax,DWORD PTR [rsp+0x28]
  40a3dc:	lea    r9d,[rax-0xfd4]
  40a3e3:	cmp    r9d,0x2
  40a3e7:	ja     0x40a3c0
  40a3e9:	test   BYTE PTR [rsp+0x2c],0x2
  40a3ee:	cmovne ebx,r12d
  40a3f2:	jmp    0x40a3c0
  40a3f4:	cmovs  ebx,eax
  40a3f7:	mov    eax,ebx
  40a3f9:	add    rsp,0x30
  40a3fd:	pop    rbx
  40a3fe:	pop    rsi
  40a3ff:	pop    rdi
  40a400:	pop    rbp
  40a401:	pop    r12
  40a403:	ret    
  40a404:	xchg   ax,ax
  40a406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a410:	push   r15
  40a412:	push   r14
  40a414:	push   r13
  40a416:	push   r12
  40a418:	push   rbp
  40a419:	push   rdi
  40a41a:	push   rsi
  40a41b:	push   rbx
  40a41c:	sub    rsp,0x58
  40a420:	mov    rbx,rcx
  40a423:	mov    r15,rdx
  40a426:	call   0x40cfb0
  40a42b:	mov    rcx,rbx
  40a42e:	movzx  r14d,ax
  40a432:	call   0x40cfb0
  40a437:	mov    r12,QWORD PTR [rip+0x2e772]        # 0x438bb0
  40a43e:	mov    eax,r14d
  40a441:	mov    ebp,r14d
  40a444:	shr    ax,0x5
  40a448:	shr    bp,0x4
  40a44c:	mov    r13d,r14d
  40a44f:	mov    esi,eax
  40a451:	and    r13d,0x1
  40a455:	and    ebp,0x1
  40a458:	mov    ecx,DWORD PTR [r12]
  40a45c:	and    esi,0x1
  40a45f:	mov    edi,r14d
  40a462:	test   ecx,ecx
  40a464:	jne    0x40a720
  40a46a:	mov    rax,QWORD PTR [rbx+0x118]
  40a471:	test   rax,rax
  40a474:	je     0x40a488
  40a476:	mov    BYTE PTR [rax+0x3b],r13b
  40a47a:	cmp    QWORD PTR [rbx+0x110],0x0
  40a482:	je     0x40a760
  40a488:	test   r15,r15
  40a48b:	je     0x40a490
  40a48d:	mov    DWORD PTR [r15],r14d
  40a490:	cmp    WORD PTR [rbx],0x701
  40a495:	mov    rcx,rbx
  40a498:	jbe    0x40a580
  40a49e:	call   0x40cff0
  40a4a3:	mov    r14,rax
  40a4a6:	mov    edx,DWORD PTR [r12]
  40a4aa:	test   edx,edx
  40a4ac:	jne    0x40a524
  40a4ae:	test   sil,sil
  40a4b1:	je     0x40a544
  40a4b7:	cmp    BYTE PTR [rbx+0x140],0x0
  40a4be:	mov    BYTE PTR [rbx+0x14c],0x0
  40a4c5:	je     0x40a590
  40a4cb:	mov    BYTE PTR [rbx+0xf1],0x7
  40a4d2:	mov    edx,0x2
  40a4d7:	mov    rcx,rbx
  40a4da:	call   0x40ab40
  40a4df:	mov    BYTE PTR [rbx+0x140],0x0
  40a4e6:	cmp    DWORD PTR [rbx+0x148],0x5
  40a4ed:	je     0x40a774
  40a4f3:	test   bpl,bpl
  40a4f6:	mov    rax,0xffffffffffffffff
  40a4fd:	cmovne rax,r14
  40a501:	mov    QWORD PTR [rbx+0x150],rax
  40a508:	mov    eax,esi
  40a50a:	shl    eax,0x1f
  40a50d:	sar    eax,0x1f
  40a510:	and    eax,0xfffffffe
  40a513:	add    rsp,0x58
  40a517:	pop    rbx
  40a518:	pop    rsi
  40a519:	pop    rdi
  40a51a:	pop    rbp
  40a51b:	pop    r12
  40a51d:	pop    r13
  40a51f:	pop    r14
  40a521:	pop    r15
  40a523:	ret    
  40a524:	lea    r8,[rip+0x24b35]        # 0x42f060
  40a52b:	lea    rcx,[rip+0x22fbe]        # 0x42d4f0
  40a532:	mov    r9,r14
  40a535:	mov    edx,0x8227
  40a53a:	call   0x423fa0
  40a53f:	test   sil,sil
  40a542:	jne    0x40a555
  40a544:	test   r13w,r13w
  40a548:	jne    0x40a4e6
  40a54a:	movzx  eax,BYTE PTR [rbx+0x14c]
  40a551:	test   al,al
  40a553:	jne    0x40a4e6
  40a555:	mov    eax,DWORD PTR [r12]
  40a559:	test   eax,eax
  40a55b:	je     0x40a4b7
  40a561:	lea    r8,[rip+0x24b20]        # 0x42f088
  40a568:	lea    rcx,[rip+0x22f81]        # 0x42d4f0
  40a56f:	mov    edx,0x8257
  40a574:	call   0x423fa0
  40a579:	jmp    0x40a4b7
  40a57e:	xchg   ax,ax
  40a580:	call   0x40cfd0
  40a585:	movsxd r14,eax
  40a588:	jmp    0x40a4a6
  40a58d:	nop    DWORD PTR [rax]
  40a590:	xor    edx,edx
  40a592:	mov    rcx,rbx
  40a595:	call   0x40ab40
  40a59a:	movzx  eax,BYTE PTR [rbx+0xa0]
  40a5a1:	test   al,0x8
  40a5a3:	je     0x40a4e6
  40a5a9:	mov    rdx,QWORD PTR [rbx+0x50]
  40a5ad:	and    eax,0xfffffff7
  40a5b0:	mov    BYTE PTR [rbx+0xa0],al
  40a5b6:	test   rdx,rdx
  40a5b9:	mov    QWORD PTR [rsp+0x48],rdx
  40a5be:	je     0x40a780
  40a5c4:	add    DWORD PTR [rdx+0x8],0x1
  40a5c8:	mov    r12d,0x1
  40a5ce:	lea    r13,[rsp+0x48]
  40a5d3:	jmp    0x40a5e5
  40a5d5:	mov    rcx,r13
  40a5d8:	call   0x4049c0
  40a5dd:	mov    QWORD PTR [rsp+0x48],rdi
  40a5e2:	mov    rdx,rdi
  40a5e5:	mov    rdi,QWORD PTR [rdx]
  40a5e8:	test   rdi,rdi
  40a5eb:	je     0x40a6e5
  40a5f1:	add    DWORD PTR [rdi+0x8],0x1
  40a5f5:	cmp    BYTE PTR [rdx+0x1d],0x0
  40a5f9:	je     0x40a5d5
  40a5fb:	mov    DWORD PTR [rdx+0x40],0x1
  40a602:	mov    rcx,rbx
  40a605:	call   0x41bcc0
  40a60a:	test   eax,eax
  40a60c:	js     0x40a6d0
  40a612:	mov    rcx,rbx
  40a615:	call   0x40a3a0
  40a61a:	test   eax,eax
  40a61c:	js     0x40a6d0
  40a622:	mov    rdx,QWORD PTR [rsp+0x48]
  40a627:	mov    rcx,rbx
  40a62a:	mov    BYTE PTR [rdx+0x1d],0x0
  40a62e:	call   0x41c520
  40a633:	mov    rcx,r13
  40a636:	call   0x4049c0
  40a63b:	test   rdi,rdi
  40a63e:	mov    QWORD PTR [rsp+0x48],rdi
  40a643:	jne    0x40a5e2
  40a645:	mov    rdx,QWORD PTR [rbx+0x58]
  40a649:	test   rdx,rdx
  40a64c:	mov    QWORD PTR [rsp+0x40],rdx
  40a651:	je     0x40a6b9
  40a653:	add    DWORD PTR [rdx+0x8],0x1
  40a657:	lea    r13,[rsp+0x40]
  40a65c:	jmp    0x40a670
  40a65e:	xchg   ax,ax
  40a660:	mov    rcx,r13
  40a663:	call   0x404700
  40a668:	mov    QWORD PTR [rsp+0x40],rdi
  40a66d:	mov    rdx,rdi
  40a670:	mov    rdi,QWORD PTR [rdx]
  40a673:	test   rdi,rdi
  40a676:	je     0x40a705
  40a67c:	add    DWORD PTR [rdi+0x8],0x1
  40a680:	cmp    BYTE PTR [rdx+0x2f],0x0
  40a684:	je     0x40a660
  40a686:	mov    rcx,rbx
  40a689:	call   0x41a3b0
  40a68e:	test   eax,eax
  40a690:	js     0x40a6e0
  40a692:	mov    rcx,rbx
  40a695:	call   0x40a3a0
  40a69a:	test   eax,eax
  40a69c:	js     0x40a6e0
  40a69e:	mov    rax,QWORD PTR [rsp+0x40]
  40a6a3:	mov    BYTE PTR [rax+0x2f],0x0
  40a6a7:	mov    rcx,r13
  40a6aa:	call   0x404700
  40a6af:	test   rdi,rdi
  40a6b2:	mov    QWORD PTR [rsp+0x40],rdi
  40a6b7:	jne    0x40a66d
  40a6b9:	test   r12d,r12d
  40a6bc:	jne    0x40a4e6
  40a6c2:	or     BYTE PTR [rbx+0xa0],0x8
  40a6c9:	jmp    0x40a4e6
  40a6ce:	xchg   ax,ax
  40a6d0:	xor    r12d,r12d
  40a6d3:	jmp    0x40a633
  40a6d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a6e0:	xor    r12d,r12d
  40a6e3:	jmp    0x40a6a7
  40a6e5:	cmp    BYTE PTR [rdx+0x1d],0x0
  40a6e9:	jne    0x40a5fb
  40a6ef:	mov    rcx,r13
  40a6f2:	call   0x4049c0
  40a6f7:	mov    QWORD PTR [rsp+0x48],0x0
  40a700:	jmp    0x40a645
  40a705:	cmp    BYTE PTR [rdx+0x2f],0x0
  40a709:	jne    0x40a686
  40a70f:	mov    rcx,r13
  40a712:	call   0x404700
  40a717:	jmp    0x40a6b9
  40a719:	nop    DWORD PTR [rax+0x0]
  40a720:	movzx  eax,bpl
  40a724:	shr    di,1
  40a727:	mov    r9d,r13d
  40a72a:	mov    DWORD PTR [rsp+0x30],eax
  40a72e:	and    edi,0x1
  40a731:	movzx  eax,sil
  40a735:	lea    r8,[rip+0x248c4]        # 0x42f000
  40a73c:	lea    rcx,[rip+0x22dad]        # 0x42d4f0
  40a743:	mov    DWORD PTR [rsp+0x28],edi
  40a747:	mov    DWORD PTR [rsp+0x20],eax
  40a74b:	and    r9d,0x1
  40a74f:	mov    edx,0x8117
  40a754:	call   0x423fa0
  40a759:	jmp    0x40a46a
  40a75e:	xchg   ax,ax
  40a760:	mov    rdx,QWORD PTR [rbx+0x118]
  40a767:	mov    rcx,rbx
  40a76a:	call   0x401e30
  40a76f:	jmp    0x40a488
  40a774:	mov    eax,0xffffffff
  40a779:	jmp    0x40a513
  40a77e:	xchg   ax,ax
  40a780:	mov    rdx,QWORD PTR [rbx+0x58]
  40a784:	mov    r12d,0x1
  40a78a:	test   rdx,rdx
  40a78d:	mov    QWORD PTR [rsp+0x40],rdx
  40a792:	jne    0x40a653
  40a798:	jmp    0x40a4e6
  40a79d:	nop    DWORD PTR [rax]
  40a7a0:	push   rsi
  40a7a1:	push   rbx
  40a7a2:	sub    rsp,0x38
  40a7a6:	movzx  edx,BYTE PTR [rcx+0x14c]
  40a7ad:	xor    eax,eax
  40a7af:	test   dl,dl
  40a7b1:	je     0x40a7bc
  40a7b3:	cmp    DWORD PTR [rcx+0x148],0x3
  40a7ba:	je     0x40a7c3
  40a7bc:	add    rsp,0x38
  40a7c0:	pop    rbx
  40a7c1:	pop    rsi
  40a7c2:	ret    
  40a7c3:	lea    rsi,[rsp+0x2c]
  40a7c8:	mov    rbx,rcx
  40a7cb:	xor    r9d,r9d
  40a7ce:	xor    r8d,r8d
  40a7d1:	mov    rdx,rsi
  40a7d4:	mov    rcx,rbx
  40a7d7:	call   0x408b20
  40a7dc:	cmp    eax,0xffffffff
  40a7df:	je     0x40a7bc
  40a7e1:	jg     0x40a7f1
  40a7e3:	cmp    eax,0xfffffffe
  40a7e6:	jne    0x40a7cb
  40a7e8:	xor    eax,eax
  40a7ea:	add    rsp,0x38
  40a7ee:	pop    rbx
  40a7ef:	pop    rsi
  40a7f0:	ret    
  40a7f1:	cmp    eax,0x1
  40a7f4:	jg     0x40a7cb
  40a7f6:	xor    eax,eax
  40a7f8:	jmp    0x40a7ea
  40a7fa:	nop    WORD PTR [rax+rax*1+0x0]
  40a800:	test   rcx,rcx
  40a803:	je     0x40a840
  40a805:	cmp    edx,0xfffffff
  40a80b:	mov    eax,0x7fffffff
  40a810:	jle    0x40a814
  40a812:	repz ret 
  40a814:	movzx  eax,BYTE PTR [rcx+0x21]
  40a818:	movzx  ecx,BYTE PTR [rcx+0x8]
  40a81c:	imul   edx,eax
  40a81f:	mov    eax,edx
  40a821:	mov    r8d,edx
  40a824:	cdq    
  40a825:	idiv   ecx
  40a827:	lea    eax,[r8+rcx*1]
  40a82b:	test   edx,edx
  40a82d:	cmovne r8d,eax
  40a831:	mov    eax,r8d
  40a834:	cdq    
  40a835:	idiv   ecx
  40a837:	ret    
  40a838:	nop    DWORD PTR [rax+rax*1+0x0]
  40a840:	mov    eax,edx
  40a842:	ret    
  40a843:	nop
  40a844:	nop
  40a845:	nop
  40a846:	nop
  40a847:	nop
  40a848:	nop
  40a849:	nop
  40a84a:	nop
  40a84b:	nop
  40a84c:	nop
  40a84d:	nop
  40a84e:	nop
  40a84f:	nop
  40a850:	sub    rsp,0x28
  40a854:	lea    rax,[rip+0x248b6]        # 0x42f111
  40a85b:	cmp    ecx,0x2
  40a85e:	je     0x40a898
  40a860:	cmp    ecx,0x3
  40a863:	lea    rax,[rip+0x248b6]        # 0x42f120
  40a86a:	je     0x40a898
  40a86c:	cmp    ecx,0x1
  40a86f:	lea    rax,[rip+0x2488a]        # 0x42f100
  40a876:	je     0x40a898
  40a878:	lea    rdx,[rip+0x248ba]        # 0x42f139
  40a87f:	lea    rcx,[rip+0x248ba]        # 0x42f140
  40a886:	mov    r8d,0x118
  40a88c:	call   0x4291e0
  40a891:	lea    rax,[rip+0x24898]        # 0x42f130
  40a898:	add    rsp,0x28
  40a89c:	ret    
  40a89d:	nop    DWORD PTR [rax]
  40a8a0:	movsxd rdx,edx
  40a8a3:	lea    rax,[rcx+rdx*1-0x1]
  40a8a8:	cmp    rcx,rax
  40a8ab:	jae    0x40a8cb
  40a8ad:	nop    DWORD PTR [rax]
  40a8b0:	movzx  r8d,BYTE PTR [rcx]
  40a8b4:	movzx  edx,BYTE PTR [rax]
  40a8b7:	add    rcx,0x1
  40a8bb:	sub    rax,0x1
  40a8bf:	mov    BYTE PTR [rax+0x1],r8b
  40a8c3:	cmp    rax,rcx
  40a8c6:	mov    BYTE PTR [rcx-0x1],dl
  40a8c9:	ja     0x40a8b0
  40a8cb:	repz ret 
  40a8cd:	nop    DWORD PTR [rax]
  40a8d0:	push   r14
  40a8d2:	push   r13
  40a8d4:	push   r12
  40a8d6:	push   rbp
  40a8d7:	push   rdi
  40a8d8:	push   rsi
  40a8d9:	push   rbx
  40a8da:	sub    rsp,0x70
  40a8de:	mov    rbp,QWORD PTR [rip+0x2e2cb]        # 0x438bb0
  40a8e5:	mov    ebx,r8d
  40a8e8:	mov    rsi,rcx
  40a8eb:	mov    r12,rdx
  40a8ee:	mov    r14d,r9d
  40a8f1:	mov    r8d,DWORD PTR [rbp+0x0]
  40a8f5:	test   r8d,r8d
  40a8f8:	jne    0x40aa95
  40a8fe:	cmp    ebx,0x960
  40a904:	lea    r10,[rip+0x25135]        # 0x42fa40
  40a90b:	jne    0x40a914
  40a90d:	jmp    0x40a91f
  40a90f:	nop
  40a910:	cmp    ebx,eax
  40a912:	je     0x40a91f
  40a914:	add    r10,0x10
  40a918:	mov    eax,DWORD PTR [r10]
  40a91b:	test   eax,eax
  40a91d:	jne    0x40a910
  40a91f:	test   rsi,rsi
  40a922:	je     0x40aa71
  40a928:	cmp    QWORD PTR [rsi+0x18],0x0
  40a92d:	je     0x40aa71
  40a933:	lea    r13,[rsp+0x40]
  40a938:	xor    eax,eax
  40a93a:	mov    ecx,0x6
  40a93f:	mov    edx,0xffffffff
  40a944:	mov    rdi,r13
  40a947:	rep stos QWORD PTR es:[rdi],rax
  40a94a:	mov    eax,DWORD PTR [r10+0x4]
  40a94e:	mov    ecx,ebx
  40a950:	mov    WORD PTR [rsp+0x68],dx
  40a955:	mov    DWORD PTR [rsp+0x60],ebx
  40a959:	mov    DWORD PTR [rsp+0x64],0xffffffff
  40a961:	mov    BYTE PTR [rsp+0x6b],al
  40a965:	lea    rax,[rip+0x247f0]        # 0x42f15c
  40a96c:	mov    QWORD PTR [rsp+0x40],rax
  40a971:	mov    rax,QWORD PTR [r10+0x8]
  40a975:	mov    QWORD PTR [rsp+0x48],rax
  40a97a:	call   0x402810
  40a97f:	mov    rcx,rsi
  40a982:	mov    QWORD PTR [rsp+0x58],rax
  40a987:	mov    DWORD PTR [rsp+0x6c],r14d
  40a98c:	mov    r8,r13
  40a98f:	mov    rdx,r12
  40a992:	call   QWORD PTR [rsi+0x18]
  40a995:	mov    ecx,DWORD PTR [rbp+0x0]
  40a998:	mov    esi,eax
  40a99a:	test   ecx,ecx
  40a99c:	jne    0x40aac3
  40a9a2:	mov    rcx,QWORD PTR [rsp+0x58]
  40a9a7:	call   0x429580
  40a9ac:	cmp    ebx,0x4e23
  40a9b2:	mov    QWORD PTR [rsp+0x58],0x0
  40a9bb:	sete   r13b
  40a9bf:	cmp    esi,0x3
  40a9c2:	jne    0x40a9e2
  40a9c4:	test   r13b,r13b
  40a9c7:	jne    0x40a9e2
  40a9c9:	lea    rdx,[rip+0x24769]        # 0x42f139
  40a9d0:	lea    rcx,[rip+0x247c1]        # 0x42f198
  40a9d7:	mov    r8d,0x16a
  40a9dd:	call   0x4291e0
  40a9e2:	cmp    esi,0x1
  40a9e5:	jne    0x40aa30
  40a9e7:	test   r13b,r13b
  40a9ea:	jne    0x40aa30
  40a9ec:	lea    rdx,[rip+0x24746]        # 0x42f139
  40a9f3:	lea    rcx,[rip+0x247ce]        # 0x42f1c8
  40a9fa:	mov    r8d,0x16b
  40aa00:	call   0x4291e0
  40aa05:	mov    eax,DWORD PTR [rbp+0x0]
  40aa08:	test   eax,eax
  40aa0a:	jne    0x40aaee
  40aa10:	mov    esi,0x2
  40aa15:	test   eax,eax
  40aa17:	jne    0x40aa49
  40aa19:	mov    eax,esi
  40aa1b:	add    rsp,0x70
  40aa1f:	pop    rbx
  40aa20:	pop    rsi
  40aa21:	pop    rdi
  40aa22:	pop    rbp
  40aa23:	pop    r12
  40aa25:	pop    r13
  40aa27:	pop    r14
  40aa29:	ret    
  40aa2a:	nop    WORD PTR [rax+rax*1+0x0]
  40aa30:	cmp    esi,0x2
  40aa33:	je     0x40aa3d
  40aa35:	cmp    ebx,0x4e23
  40aa3b:	jne    0x40aa05
  40aa3d:	cmp    esi,0x3
  40aa40:	je     0x40aa83
  40aa42:	mov    eax,DWORD PTR [rbp+0x0]
  40aa45:	test   eax,eax
  40aa47:	je     0x40aa19
  40aa49:	mov    ecx,esi
  40aa4b:	call   0x40a850
  40aa50:	lea    r8,[rip+0x247c7]        # 0x42f21e
  40aa57:	lea    rcx,[rip+0x246db]        # 0x42f139
  40aa5e:	mov    r9,rax
  40aa61:	mov    DWORD PTR [rsp+0x20],esi
  40aa65:	mov    edx,0x1777
  40aa6a:	call   0x423fa0
  40aa6f:	jmp    0x40aa19
  40aa71:	mov    eax,DWORD PTR [rbp+0x0]
  40aa74:	test   eax,eax
  40aa76:	jne    0x40ab1c
  40aa7c:	mov    esi,0x2
  40aa81:	jmp    0x40aa42
  40aa83:	mov    rcx,r12
  40aa86:	mov    esi,0x1
  40aa8b:	call   0x41aac0
  40aa90:	mov    eax,DWORD PTR [rbp+0x0]
  40aa93:	jmp    0x40aa15
  40aa95:	mov    DWORD PTR [rsp+0x30],r9d
  40aa9a:	lea    r8,[rip+0x246a1]        # 0x42f142
  40aaa1:	mov    r9,rcx
  40aaa4:	lea    rcx,[rip+0x2468e]        # 0x42f139
  40aaab:	mov    QWORD PTR [rsp+0x20],rdx
  40aab0:	mov    DWORD PTR [rsp+0x28],ebx
  40aab4:	mov    edx,0x1427
  40aab9:	call   0x423fa0
  40aabe:	jmp    0x40a8fe
  40aac3:	mov    ecx,eax
  40aac5:	call   0x40a850
  40aaca:	lea    r8,[rip+0x24697]        # 0x42f168
  40aad1:	lea    rcx,[rip+0x24661]        # 0x42f139
  40aad8:	mov    r9,rax
  40aadb:	mov    DWORD PTR [rsp+0x20],esi
  40aadf:	mov    edx,0x1607
  40aae4:	call   0x423fa0
  40aae9:	jmp    0x40a9a2
  40aaee:	mov    ecx,esi
  40aaf0:	call   0x40a850
  40aaf5:	lea    r8,[rip+0x246fc]        # 0x42f1f8
  40aafc:	lea    rcx,[rip+0x24636]        # 0x42f139
  40ab03:	mov    r9,rax
  40ab06:	mov    DWORD PTR [rsp+0x20],esi
  40ab0a:	mov    edx,0x16e1
  40ab0f:	call   0x423fa0
  40ab14:	mov    eax,DWORD PTR [rbp+0x0]
  40ab17:	jmp    0x40aa10
  40ab1c:	lea    r8,[rip+0x2481d]        # 0x42f340
  40ab23:	lea    rcx,[rip+0x2460f]        # 0x42f139
  40ab2a:	mov    r9,rsi
  40ab2d:	mov    edx,0x1662
  40ab32:	call   0x423fa0
  40ab37:	jmp    0x40aa7c
  40ab3c:	nop    DWORD PTR [rax+0x0]
  40ab40:	push   rdi
  40ab41:	push   rsi
  40ab42:	push   rbx
  40ab43:	sub    rsp,0x40
  40ab47:	cmp    edx,0x5
  40ab4a:	mov    rdi,rcx
  40ab4d:	mov    ebx,edx
  40ab4f:	ja     0x40ab80
  40ab51:	mov    esi,DWORD PTR [rdi+0x148]
  40ab57:	cmp    esi,0x5
  40ab5a:	ja     0x40aba4
  40ab5c:	cmp    ebx,esi
  40ab5e:	je     0x40abc7
  40ab60:	cmp    ebx,0x5
  40ab63:	ja     0x40ad40
  40ab69:	lea    rax,[rip+0x24784]        # 0x42f2f4
  40ab70:	mov    edx,ebx
  40ab72:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40ab76:	add    rax,rdx
  40ab79:	jmp    rax
  40ab7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab80:	lea    rdx,[rip+0x245b2]        # 0x42f139
  40ab87:	lea    rcx,[rip+0x246b2]        # 0x42f240
  40ab8e:	mov    r8d,0x45
  40ab94:	call   0x4291e0
  40ab99:	mov    esi,DWORD PTR [rdi+0x148]
  40ab9f:	cmp    esi,0x5
  40aba2:	jbe    0x40ab5c
  40aba4:	lea    rdx,[rip+0x2458e]        # 0x42f139
  40abab:	lea    rcx,[rip+0x246b6]        # 0x42f268
  40abb2:	mov    r8d,0x46
  40abb8:	call   0x4291e0
  40abbd:	mov    esi,DWORD PTR [rdi+0x148]
  40abc3:	cmp    ebx,esi
  40abc5:	jne    0x40ab60
  40abc7:	mov    eax,ebx
  40abc9:	add    rsp,0x40
  40abcd:	pop    rbx
  40abce:	pop    rsi
  40abcf:	pop    rdi
  40abd0:	ret    
  40abd1:	cmp    esi,0x5
  40abd4:	je     0x40ae10
  40abda:	cmp    esi,0x1
  40abdd:	je     0x40adb0
  40abe3:	cmp    esi,0x4
  40abe6:	je     0x40adb0
  40abec:	mov    DWORD PTR [rdi+0x148],ebx
  40abf2:	mov    eax,ebx
  40abf4:	mov    rbx,QWORD PTR [rip+0x2dfb5]        # 0x438bb0
  40abfb:	mov    edx,DWORD PTR [rbx]
  40abfd:	test   edx,edx
  40abff:	jne    0x40ad70
  40ac05:	add    rsp,0x40
  40ac09:	pop    rbx
  40ac0a:	pop    rsi
  40ac0b:	pop    rdi
  40ac0c:	ret    
  40ac0d:	nop    DWORD PTR [rax]
  40ac10:	lea    rcx,[rdi+0x180]
  40ac17:	call   0x426950
  40ac1c:	test   eax,eax
  40ac1e:	mov    eax,DWORD PTR [rdi+0x148]
  40ac24:	jne    0x40ac05
  40ac26:	cmp    eax,0x5
  40ac29:	je     0x40af9a
  40ac2f:	test   eax,0xfffffffd
  40ac34:	jne    0x40ae64
  40ac3a:	test   eax,eax
  40ac3c:	je     0x40af60
  40ac42:	mov    DWORD PTR [rdi+0x148],0x1
  40ac4c:	mov    eax,0x1
  40ac51:	mov    rbx,QWORD PTR [rip+0x2df58]        # 0x438bb0
  40ac58:	jmp    0x40abfb
  40ac5a:	nop    WORD PTR [rax+rax*1+0x0]
  40ac60:	cmp    esi,0x1
  40ac63:	je     0x40adc2
  40ac69:	cmp    esi,0x4
  40ac6c:	je     0x40adc2
  40ac72:	mov    rbx,QWORD PTR [rip+0x2df37]        # 0x438bb0
  40ac79:	mov    r10d,DWORD PTR [rbx]
  40ac7c:	test   r10d,r10d
  40ac7f:	jne    0x40aedc
  40ac85:	mov    eax,esi
  40ac87:	add    rsp,0x40
  40ac8b:	pop    rbx
  40ac8c:	pop    rsi
  40ac8d:	pop    rdi
  40ac8e:	ret    
  40ac8f:	nop
  40ac90:	cmp    esi,0x1
  40ac93:	je     0x40af30
  40ac99:	cmp    esi,0x4
  40ac9c:	je     0x40af30
  40aca2:	mov    rbx,QWORD PTR [rip+0x2df07]        # 0x438bb0
  40aca9:	mov    eax,DWORD PTR [rbx]
  40acab:	test   eax,eax
  40acad:	je     0x40ac85
  40acaf:	lea    rcx,[rip+0x24722]        # 0x42f3d8
  40acb6:	lea    rdx,[rip+0x24703]        # 0x42f3c0
  40acbd:	mov    eax,esi
  40acbf:	lea    r8,[rip+0x245d2]        # 0x42f298
  40acc6:	lea    r9,[rdx+rax*8]
  40acca:	mov    QWORD PTR [rsp+0x20],rcx
  40accf:	lea    rcx,[rip+0x24463]        # 0x42f139
  40acd6:	mov    edx,0x532
  40acdb:	call   0x423fa0
  40ace0:	mov    eax,DWORD PTR [rdi+0x148]
  40ace6:	jmp    0x40abfb
  40aceb:	nop    DWORD PTR [rax+rax*1+0x0]
  40acf0:	lea    rcx,[rdi+0x180]
  40acf7:	call   0x426950
  40acfc:	test   eax,eax
  40acfe:	jne    0x40af20
  40ad04:	cmp    DWORD PTR [rdi+0x148],0x3
  40ad0b:	je     0x40adf3
  40ad11:	lea    rcx,[rdi+0x190]
  40ad18:	call   QWORD PTR [rip+0x34c2e]        # 0x43f94c
  40ad1e:	mov    rbx,QWORD PTR [rip+0x2de8b]        # 0x438bb0
  40ad25:	mov    r11d,DWORD PTR [rbx]
  40ad28:	test   r11d,r11d
  40ad2b:	jne    0x40afda
  40ad31:	mov    esi,DWORD PTR [rdi+0x148]
  40ad37:	mov    eax,esi
  40ad39:	jmp    0x40ac87
  40ad3e:	xchg   ax,ax
  40ad40:	lea    rdx,[rip+0x243f2]        # 0x42f139
  40ad47:	lea    rcx,[rip+0x243f2]        # 0x42f140
  40ad4e:	mov    r8d,0x9f
  40ad54:	call   0x4291e0
  40ad59:	mov    eax,DWORD PTR [rdi+0x148]
  40ad5f:	mov    rbx,QWORD PTR [rip+0x2de4a]        # 0x438bb0
  40ad66:	jmp    0x40abfb
  40ad6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad70:	lea    rdx,[rip+0x24649]        # 0x42f3c0
  40ad77:	mov    ecx,eax
  40ad79:	lea    r8,[rip+0x24550]        # 0x42f2d0
  40ad80:	mov    DWORD PTR [rsp+0x3c],eax
  40ad84:	lea    rcx,[rdx+rcx*8]
  40ad88:	lea    r9,[rdx+rsi*8]
  40ad8c:	mov    edx,0xa52
  40ad91:	mov    QWORD PTR [rsp+0x20],rcx
  40ad96:	lea    rcx,[rip+0x2439c]        # 0x42f139
  40ad9d:	call   0x423fa0
  40ada2:	mov    eax,DWORD PTR [rsp+0x3c]
  40ada6:	jmp    0x40ac05
  40adab:	nop    DWORD PTR [rax+rax*1+0x0]
  40adb0:	lea    rcx,[rdi+0x190]
  40adb7:	call   QWORD PTR [rip+0x34b8f]        # 0x43f94c
  40adbd:	jmp    0x40abec
  40adc2:	cmp    esi,0x4
  40adc5:	je     0x40aea2
  40adcb:	lea    rcx,[rdi+0x190]
  40add2:	call   QWORD PTR [rip+0x34b74]        # 0x43f94c
  40add8:	mov    DWORD PTR [rdi+0x148],0x2
  40ade2:	mov    eax,0x2
  40ade7:	mov    rbx,QWORD PTR [rip+0x2ddc2]        # 0x438bb0
  40adee:	jmp    0x40abfb
  40adf3:	mov    DWORD PTR [rdi+0x148],0x4
  40adfd:	mov    eax,0x4
  40ae02:	mov    rbx,QWORD PTR [rip+0x2dda7]        # 0x438bb0
  40ae09:	jmp    0x40abfb
  40ae0e:	xchg   ax,ax
  40ae10:	cmp    QWORD PTR [rdi+0x10],0xffffffffffffffff
  40ae15:	jne    0x40abec
  40ae1b:	mov    rbx,QWORD PTR [rip+0x2dd8e]        # 0x438bb0
  40ae22:	mov    r9d,DWORD PTR [rbx]
  40ae25:	test   r9d,r9d
  40ae28:	je     0x40ac85
  40ae2e:	lea    rax,[rip+0x2458b]        # 0x42f3c0
  40ae35:	lea    r9,[rip+0x245ac]        # 0x42f3e8
  40ae3c:	lea    r8,[rip+0x24455]        # 0x42f298
  40ae43:	lea    rcx,[rip+0x242ef]        # 0x42f139
  40ae4a:	mov    edx,0x762
  40ae4f:	mov    QWORD PTR [rsp+0x20],rax
  40ae54:	call   0x423fa0
  40ae59:	mov    eax,DWORD PTR [rdi+0x148]
  40ae5f:	jmp    0x40abfb
  40ae64:	lea    rcx,[rdi+0x190]
  40ae6b:	call   QWORD PTR [rip+0x34adb]        # 0x43f94c
  40ae71:	mov    rbx,QWORD PTR [rip+0x2dd38]        # 0x438bb0
  40ae78:	mov    ecx,DWORD PTR [rbx]
  40ae7a:	test   ecx,ecx
  40ae7c:	jne    0x40b016
  40ae82:	mov    rcx,QWORD PTR [rdi+0x28]
  40ae86:	xor    r9d,r9d
  40ae89:	mov    r8d,0x4e33
  40ae8f:	mov    rdx,rdi
  40ae92:	call   0x40a8d0
  40ae97:	mov    eax,DWORD PTR [rdi+0x148]
  40ae9d:	jmp    0x40abfb
  40aea2:	mov    rcx,rdi
  40aea5:	call   0x404850
  40aeaa:	lea    rcx,[rdi+0x138]
  40aeb1:	mov    QWORD PTR [rdi+0x150],0xffffffffffffffff
  40aebc:	call   0x4049c0
  40aec1:	lea    rcx,[rdi+0x160]
  40aec8:	call   0x404700
  40aecd:	mov    DWORD PTR [rdi+0x178],0x0
  40aed7:	jmp    0x40adcb
  40aedc:	lea    rcx,[rip+0x244ed]        # 0x42f3d0
  40aee3:	lea    rdx,[rip+0x244d6]        # 0x42f3c0
  40aeea:	mov    eax,esi
  40aeec:	lea    r8,[rip+0x243a5]        # 0x42f298
  40aef3:	lea    r9,[rdx+rax*8]
  40aef7:	mov    QWORD PTR [rsp+0x20],rcx
  40aefc:	lea    rcx,[rip+0x24236]        # 0x42f139
  40af03:	mov    edx,0x642
  40af08:	call   0x423fa0
  40af0d:	mov    eax,DWORD PTR [rdi+0x148]
  40af13:	jmp    0x40abfb
  40af18:	nop    DWORD PTR [rax+rax*1+0x0]
  40af20:	mov    eax,DWORD PTR [rdi+0x148]
  40af26:	jmp    0x40ac05
  40af2b:	nop    DWORD PTR [rax+rax*1+0x0]
  40af30:	mov    DWORD PTR [rdi+0x148],0x3
  40af3a:	lea    rcx,[rdi+0x190]
  40af41:	call   QWORD PTR [rip+0x34a05]        # 0x43f94c
  40af47:	mov    eax,DWORD PTR [rdi+0x148]
  40af4d:	mov    rbx,QWORD PTR [rip+0x2dc5c]        # 0x438bb0
  40af54:	jmp    0x40abfb
  40af59:	nop    DWORD PTR [rax+0x0]
  40af60:	mov    rcx,rdi
  40af63:	call   0x404850
  40af68:	lea    rcx,[rdi+0x138]
  40af6f:	mov    QWORD PTR [rdi+0x150],0xffffffffffffffff
  40af7a:	call   0x4049c0
  40af7f:	lea    rcx,[rdi+0x160]
  40af86:	call   0x404700
  40af8b:	mov    DWORD PTR [rdi+0x178],0x0
  40af95:	jmp    0x40ac42
  40af9a:	lea    rcx,[rdi+0x190]
  40afa1:	call   QWORD PTR [rip+0x349a5]        # 0x43f94c
  40afa7:	mov    rbx,QWORD PTR [rip+0x2dc02]        # 0x438bb0
  40afae:	mov    r8d,DWORD PTR [rbx]
  40afb1:	test   r8d,r8d
  40afb4:	jne    0x40b04c
  40afba:	mov    rcx,QWORD PTR [rdi+0x28]
  40afbe:	xor    r9d,r9d
  40afc1:	mov    r8d,0x4e26
  40afc7:	mov    rdx,rdi
  40afca:	call   0x40a8d0
  40afcf:	mov    eax,DWORD PTR [rdi+0x148]
  40afd5:	jmp    0x40abfb
  40afda:	lea    rcx,[rip+0x243ff]        # 0x42f3e0
  40afe1:	lea    rdx,[rip+0x243d8]        # 0x42f3c0
  40afe8:	mov    eax,esi
  40afea:	lea    r8,[rip+0x242a7]        # 0x42f298
  40aff1:	lea    r9,[rdx+rax*8]
  40aff5:	mov    QWORD PTR [rsp+0x20],rcx
  40affa:	lea    rcx,[rip+0x24138]        # 0x42f139
  40b001:	mov    edx,0x5c2
  40b006:	call   0x423fa0
  40b00b:	mov    eax,DWORD PTR [rdi+0x148]
  40b011:	jmp    0x40abfb
  40b016:	lea    rcx,[rip+0x243ab]        # 0x42f3c8
  40b01d:	lea    rdx,[rip+0x2439c]        # 0x42f3c0
  40b024:	mov    eax,esi
  40b026:	lea    r8,[rip+0x2426b]        # 0x42f298
  40b02d:	mov    QWORD PTR [rsp+0x20],rcx
  40b032:	lea    r9,[rdx+rax*8]
  40b036:	lea    rcx,[rip+0x240fc]        # 0x42f139
  40b03d:	mov    edx,0x8d2
  40b042:	call   0x423fa0
  40b047:	jmp    0x40ae82
  40b04c:	lea    rcx,[rip+0x24375]        # 0x42f3c8
  40b053:	lea    rdx,[rip+0x24366]        # 0x42f3c0
  40b05a:	mov    eax,esi
  40b05c:	lea    r8,[rip+0x24235]        # 0x42f298
  40b063:	mov    QWORD PTR [rsp+0x20],rcx
  40b068:	lea    r9,[rdx+rax*8]
  40b06c:	lea    rcx,[rip+0x240c6]        # 0x42f139
  40b073:	mov    edx,0x872
  40b078:	call   0x423fa0
  40b07d:	jmp    0x40afba
  40b082:	nop    DWORD PTR [rax+0x0]
  40b086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b090:	push   rsi
  40b091:	push   rbx
  40b092:	sub    rsp,0x28
  40b096:	test   rdx,rdx
  40b099:	js     0x40b0d0
  40b09b:	mov    rsi,rcx
  40b09e:	lea    rcx,[rdx+0x1]
  40b0a2:	mov    rbx,rdx
  40b0a5:	call   0x429538
  40b0aa:	mov    r9,rax
  40b0ad:	xor    eax,eax
  40b0af:	test   r9,r9
  40b0b2:	je     0x40b0c6
  40b0b4:	mov    r8,rbx
  40b0b7:	mov    rdx,rsi
  40b0ba:	mov    rcx,r9
  40b0bd:	call   0x429528
  40b0c2:	mov    BYTE PTR [rax+rbx*1],0x0
  40b0c6:	add    rsp,0x28
  40b0ca:	pop    rbx
  40b0cb:	pop    rsi
  40b0cc:	ret    
  40b0cd:	nop    DWORD PTR [rax]
  40b0d0:	xor    eax,eax
  40b0d2:	jmp    0x40b0c6
  40b0d4:	nop
  40b0d5:	nop
  40b0d6:	nop
  40b0d7:	nop
  40b0d8:	nop
  40b0d9:	nop
  40b0da:	nop
  40b0db:	nop
  40b0dc:	nop
  40b0dd:	nop
  40b0de:	nop
  40b0df:	nop
  40b0e0:	push   rdi
  40b0e1:	push   rsi
  40b0e2:	push   rbx
  40b0e3:	sub    rsp,0x20
  40b0e7:	mov    rbx,QWORD PTR [rcx+0x28]
  40b0eb:	lea    rax,[rip+0x15e]        # 0x40b250
  40b0f2:	cmp    QWORD PTR [rbx+0x10],rax
  40b0f6:	je     0x40b100
  40b0f8:	add    rsp,0x20
  40b0fc:	pop    rbx
  40b0fd:	pop    rsi
  40b0fe:	pop    rdi
  40b0ff:	ret    
  40b100:	mov    edi,DWORD PTR [rbx+0x260]
  40b106:	cmp    edi,0x9
  40b109:	ja     0x40b0f8
  40b10b:	lea    rax,[rdi+rdi*2]
  40b10f:	mov    rsi,r9
  40b112:	mov    rcx,r8
  40b115:	mov    DWORD PTR [rbx+rax*8+0x278],edx
  40b11c:	xor    eax,eax
  40b11e:	test   r8,r8
  40b121:	je     0x40b129
  40b123:	call   QWORD PTR [rip+0x34963]        # 0x43fa8c
  40b129:	lea    rdx,[rdi+rdi*2]
  40b12d:	mov    QWORD PTR [rbx+rdx*8+0x268],rax
  40b135:	xor    eax,eax
  40b137:	test   rsi,rsi
  40b13a:	je     0x40b145
  40b13c:	mov    rcx,rsi
  40b13f:	call   QWORD PTR [rip+0x34947]        # 0x43fa8c
  40b145:	lea    rdx,[rdi+rdi*2]
  40b149:	mov    QWORD PTR [rbx+rdx*8+0x270],rax
  40b151:	add    DWORD PTR [rbx+0x260],0x1
  40b158:	add    rsp,0x20
  40b15c:	pop    rbx
  40b15d:	pop    rsi
  40b15e:	pop    rdi
  40b15f:	ret    
  40b160:	push   rbp
  40b161:	push   rdi
  40b162:	push   rsi
  40b163:	push   rbx
  40b164:	sub    rsp,0x28
  40b168:	mov    ebx,DWORD PTR [rcx+0x28]
  40b16b:	mov    rbp,rcx
  40b16e:	mov    rdi,r8
  40b171:	cmp    ebx,0x9
  40b174:	ja     0x40b246
  40b17a:	lea    rax,[rbx*8+0x0]
  40b182:	mov    rsi,rbx
  40b185:	shl    rsi,0x6
  40b189:	sub    rsi,rax
  40b18c:	add    rsi,rcx
  40b18f:	mov    BYTE PTR [rsi+0x60],dl
  40b192:	mov    rdx,QWORD PTR [r8]
  40b195:	mov    QWORD PTR [rsi+0x30],rdx
  40b199:	mov    rdx,QWORD PTR [r8+0x8]
  40b19d:	mov    QWORD PTR [rsi+0x38],rdx
  40b1a1:	mov    rdx,QWORD PTR [r8+0x10]
  40b1a5:	mov    QWORD PTR [rsi+0x40],rdx
  40b1a9:	mov    rdx,QWORD PTR [r8+0x18]
  40b1ad:	mov    QWORD PTR [rsi+0x48],rdx
  40b1b1:	mov    rdx,QWORD PTR [r8+0x20]
  40b1b5:	mov    QWORD PTR [rsi+0x50],rdx
  40b1b9:	mov    rdx,QWORD PTR [r8+0x28]
  40b1bd:	mov    QWORD PTR [rsi+0x58],rdx
  40b1c1:	mov    rcx,QWORD PTR [r8]
  40b1c4:	test   rcx,rcx
  40b1c7:	je     0x40b1d3
  40b1c9:	call   QWORD PTR [rip+0x348bd]        # 0x43fa8c
  40b1cf:	mov    QWORD PTR [rsi+0x30],rax
  40b1d3:	mov    rcx,QWORD PTR [rdi+0x8]
  40b1d7:	test   rcx,rcx
  40b1da:	je     0x40b1f9
  40b1dc:	call   QWORD PTR [rip+0x348aa]        # 0x43fa8c
  40b1e2:	lea    rcx,[rbx*8+0x0]
  40b1ea:	mov    rdx,rbx
  40b1ed:	shl    rdx,0x6
  40b1f1:	sub    rdx,rcx
  40b1f4:	mov    QWORD PTR [rbp+rdx*1+0x38],rax
  40b1f9:	mov    rcx,QWORD PTR [rdi+0x10]
  40b1fd:	test   rcx,rcx
  40b200:	je     0x40b21f
  40b202:	call   QWORD PTR [rip+0x34884]        # 0x43fa8c
  40b208:	lea    rcx,[rbx*8+0x0]
  40b210:	mov    rdx,rbx
  40b213:	shl    rdx,0x6
  40b217:	sub    rdx,rcx
  40b21a:	mov    QWORD PTR [rbp+rdx*1+0x40],rax
  40b21f:	mov    rcx,QWORD PTR [rdi+0x18]
  40b223:	test   rcx,rcx
  40b226:	je     0x40b242
  40b228:	call   QWORD PTR [rip+0x3485e]        # 0x43fa8c
  40b22e:	lea    rdx,[rbx*8+0x0]
  40b236:	shl    rbx,0x6
  40b23a:	sub    rbx,rdx
  40b23d:	mov    QWORD PTR [rbp+rbx*1+0x48],rax
  40b242:	add    DWORD PTR [rbp+0x28],0x1
  40b246:	add    rsp,0x28
  40b24a:	pop    rbx
  40b24b:	pop    rsi
  40b24c:	pop    rdi
  40b24d:	pop    rbp
  40b24e:	ret    
  40b24f:	nop
  40b250:	sub    rsp,0x28
  40b254:	xor    edx,edx
  40b256:	call   0x40b160
  40b25b:	xor    eax,eax
  40b25d:	add    rsp,0x28
  40b261:	ret    
  40b262:	nop    DWORD PTR [rax+0x0]
  40b266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b270:	sub    rsp,0x28
  40b274:	mov    edx,0x1
  40b279:	call   0x40b160
  40b27e:	mov    eax,0x2
  40b283:	add    rsp,0x28
  40b287:	ret    
  40b288:	nop    DWORD PTR [rax+rax*1+0x0]
  40b290:	push   rdi
  40b291:	push   rsi
  40b292:	push   rbx
  40b293:	sub    rsp,0x20
  40b297:	mov    edx,DWORD PTR [rcx+0x28]
  40b29a:	xor    esi,esi
  40b29c:	mov    rbx,rcx
  40b29f:	test   edx,edx
  40b2a1:	je     0x40b2c6
  40b2a3:	mov    eax,esi
  40b2a5:	add    esi,0x1
  40b2a8:	lea    rdx,[rax*8+0x0]
  40b2b0:	shl    rax,0x6
  40b2b4:	sub    rax,rdx
  40b2b7:	lea    rcx,[rbx+rax*1+0x30]
  40b2bc:	call   0x402790
  40b2c1:	cmp    DWORD PTR [rbx+0x28],esi
  40b2c4:	ja     0x40b2a3
  40b2c6:	mov    eax,DWORD PTR [rbx+0x260]
  40b2cc:	xor    esi,esi
  40b2ce:	mov    DWORD PTR [rbx+0x28],0x0
  40b2d5:	test   eax,eax
  40b2d7:	je     0x40b30b
  40b2d9:	nop    DWORD PTR [rax+0x0]
  40b2e0:	mov    eax,esi
  40b2e2:	add    esi,0x1
  40b2e5:	lea    rax,[rax+rax*2]
  40b2e9:	lea    rdi,[rbx+rax*8+0x260]
  40b2f1:	mov    rcx,QWORD PTR [rdi+0x8]
  40b2f5:	call   0x429580
  40b2fa:	mov    rcx,QWORD PTR [rdi+0x10]
  40b2fe:	call   0x429580
  40b303:	cmp    DWORD PTR [rbx+0x260],esi
  40b309:	ja     0x40b2e0
  40b30b:	mov    DWORD PTR [rbx+0x260],0x0
  40b315:	add    rsp,0x20
  40b319:	pop    rbx
  40b31a:	pop    rsi
  40b31b:	pop    rdi
  40b31c:	ret    
  40b31d:	nop    DWORD PTR [rax]
  40b320:	push   r15
  40b322:	push   r14
  40b324:	push   r13
  40b326:	push   r12
  40b328:	push   rbp
  40b329:	push   rdi
  40b32a:	push   rsi
  40b32b:	push   rbx
  40b32c:	sub    rsp,0x158
  40b333:	movzx  eax,BYTE PTR [rdx+0xf0]
  40b33a:	mov    rsi,rcx
  40b33d:	mov    rbp,rdx
  40b340:	mov    QWORD PTR [rsp+0x58],0x0
  40b349:	mov    BYTE PTR [rsp+0x4e],al
  40b34d:	mov    rax,QWORD PTR [rdx+0x70]
  40b351:	lea    rbx,[rax+0x8]
  40b355:	mov    rcx,rbx
  40b358:	call   0x429490
  40b35d:	cmp    WORD PTR [rsi],0x702
  40b362:	mov    BYTE PTR [rsi+0xf1],0x10
  40b369:	mov    edx,0x5c
  40b36e:	mov    rcx,rbx
  40b371:	mov    r13,rax
  40b374:	sbb    rdi,rdi
  40b377:	and    rdi,0xfffffffffffffff8
  40b37b:	add    rdi,0x5e
  40b37f:	call   0x4294b8
  40b384:	test   rax,rax
  40b387:	jne    0x40b860
  40b38d:	test   r13,r13
  40b390:	mov    QWORD PTR [rsp+0x40],rdi
  40b395:	mov    QWORD PTR [rsp+0x38],0x0
  40b39e:	je     0x40b860
  40b3a4:	lea    r14,[rsp+0x80]
  40b3ac:	lea    rdx,[rsp+0x58]
  40b3b1:	xor    r8d,r8d
  40b3b4:	mov    rcx,r14
  40b3b7:	call   0x425090
  40b3bc:	test   eax,eax
  40b3be:	js     0x40b848
  40b3c4:	mov    rax,QWORD PTR [rbp+0x30]
  40b3c8:	cmp    QWORD PTR [rsi+0xc0],0x0
  40b3d0:	lea    rdx,[rax+0x8]
  40b3d4:	mov    rax,QWORD PTR [rax]
  40b3d7:	mov    QWORD PTR [rsp+0xb0],rdx
  40b3df:	mov    DWORD PTR [rsp+0xbc],eax
  40b3e6:	je     0x40ba33
  40b3ec:	mov    DWORD PTR [rsp+0xcc],0x0
  40b3f7:	mov    DWORD PTR [rsp+0xdc],0x0
  40b402:	mov    rax,QWORD PTR [rbp+0x68]
  40b406:	cmp    WORD PTR [rsi],0x701
  40b40b:	mov    DWORD PTR [rsp+0x14c],0x0
  40b416:	mov    BYTE PTR [rsp+0x4f],0x0
  40b41b:	lea    rdx,[rax+0x8]
  40b41f:	mov    rax,QWORD PTR [rax]
  40b422:	mov    QWORD PTR [rsp+0xe0],rdx
  40b42a:	mov    DWORD PTR [rsp+0xec],eax
  40b431:	mov    rax,QWORD PTR [rbp+0x0]
  40b435:	lea    rdx,[rax+0x8]
  40b439:	mov    rax,QWORD PTR [rax]
  40b43c:	mov    QWORD PTR [rsp+0xf0],rdx
  40b444:	mov    DWORD PTR [rsp+0xfc],eax
  40b44b:	mov    rax,QWORD PTR [rbp+0x88]
  40b452:	lea    rdx,[rax+0x8]
  40b456:	mov    rax,QWORD PTR [rax]
  40b459:	mov    QWORD PTR [rsp+0x100],rdx
  40b461:	mov    DWORD PTR [rsp+0x10c],eax
  40b468:	mov    rax,QWORD PTR [rbp+0x18]
  40b46c:	lea    rdx,[rax+0x8]
  40b470:	mov    rax,QWORD PTR [rax]
  40b473:	mov    QWORD PTR [rsp+0x110],rdx
  40b47b:	mov    DWORD PTR [rsp+0x11c],eax
  40b482:	mov    rax,QWORD PTR [rbp+0xc0]
  40b489:	lea    rdx,[rax+0x8]
  40b48d:	mov    rax,QWORD PTR [rax]
  40b490:	mov    QWORD PTR [rsp+0x120],rdx
  40b498:	mov    DWORD PTR [rsp+0x12c],eax
  40b49f:	mov    rax,QWORD PTR [rbp+0x50]
  40b4a3:	lea    rdx,[rax+0x8]
  40b4a7:	mov    rax,QWORD PTR [rax]
  40b4aa:	mov    QWORD PTR [rsp+0x130],rdx
  40b4b2:	mov    DWORD PTR [rsp+0x13c],eax
  40b4b9:	ja     0x40b980
  40b4bf:	mov    rax,QWORD PTR [rsp+0xa8]
  40b4c7:	mov    r12d,edi
  40b4ca:	lea    rbx,[rsp+0xb0]
  40b4d2:	lea    r13,[rsp+0x60]
  40b4d7:	jmp    0x40b4f9
  40b4d9:	nop    DWORD PTR [rax+0x0]
  40b4e0:	lea    rcx,[rsp+0x150]
  40b4e8:	mov    DWORD PTR [rbx+0xc],r8d
  40b4ec:	add    rbx,0x10
  40b4f0:	cmp    rbx,rcx
  40b4f3:	jae    0x40b8a0
  40b4f9:	mov    r8d,DWORD PTR [rbx+0xc]
  40b4fd:	lea    edx,[r12+rax*1]
  40b501:	mov    r15d,eax
  40b504:	mov    DWORD PTR [rbx+0x8],edx
  40b507:	test   r8d,r8d
  40b50a:	je     0x40b4e0
  40b50c:	mov    rdx,QWORD PTR [rbx]
  40b50f:	mov    rcx,r13
  40b512:	call   0x425050
  40b517:	mov    rax,QWORD PTR [rsi+0x68]
  40b51b:	mov    QWORD PTR [rsp+0x20],r14
  40b520:	xor    r8d,r8d
  40b523:	mov    r9,r13
  40b526:	mov    rcx,rsi
  40b529:	mov    rdx,QWORD PTR [rax]
  40b52c:	call   0x424c10
  40b531:	test   eax,eax
  40b533:	js     0x40bae0
  40b539:	mov    rax,QWORD PTR [rsp+0xa8]
  40b541:	mov    r8d,eax
  40b544:	sub    r8d,r15d
  40b547:	jmp    0x40b4e0
  40b549:	nop    DWORD PTR [rax+0x0]
  40b550:	mov    edx,0x70000000
  40b555:	mov    rcx,rsi
  40b558:	call   0x40d490
  40b55d:	mov    ebx,DWORD PTR [rbp+0x10]
  40b560:	mov    eax,0x1000
  40b565:	mov    rcx,rsi
  40b568:	mov    r13d,eax
  40b56b:	lea    edx,[rbx-0x1000]
  40b571:	cmp    edx,0xefff
  40b577:	cmovbe r13d,ebx
  40b57b:	mov    edx,r13d
  40b57e:	call   0x40d490
  40b583:	cmp    DWORD PTR [rsi+0xe0],r13d
  40b58a:	jb     0x40ba23
  40b590:	lea    rdx,[rip+0x248e8]        # 0x42fe7f
  40b597:	mov    r8d,0x4
  40b59d:	mov    rcx,rsi
  40b5a0:	call   0x40d260
  40b5a5:	call   QWORD PTR [rip+0x34349]        # 0x43f8f4
  40b5ab:	mov    rcx,rsi
  40b5ae:	mov    edx,eax
  40b5b0:	call   0x40d490
  40b5b5:	lea    rdx,[rip+0x248bf]        # 0x42fe7b
  40b5bc:	mov    r8d,0x4
  40b5c2:	mov    rcx,rsi
  40b5c5:	call   0x40d260
  40b5ca:	movzx  eax,BYTE PTR [rbp+0xf4]
  40b5d1:	mov    rcx,rsi
  40b5d4:	and    eax,0x1
  40b5d7:	cmp    al,0x1
  40b5d9:	sbb    edx,edx
  40b5db:	and    edx,0x10
  40b5de:	add    edx,0xe0
  40b5e4:	call   0x40d520
  40b5e9:	movzx  ebx,BYTE PTR [rsp+0x4e]
  40b5ee:	mov    rcx,rsi
  40b5f1:	mov    eax,ebx
  40b5f3:	or     eax,0xffffff80
  40b5f6:	cmp    QWORD PTR [rsi+0xc0],0x0
  40b5fe:	cmovne ebx,eax
  40b601:	movzx  edx,bl
  40b604:	call   0x40d520
  40b609:	xor    edx,edx
  40b60b:	test   BYTE PTR [rbp+0xf5],0x8
  40b612:	je     0x40b620
  40b614:	cmp    WORD PTR [rsi],0x701
  40b619:	sbb    edx,edx
  40b61b:	not    edx
  40b61d:	and    edx,0x20
  40b620:	mov    rcx,rsi
  40b623:	call   0x40d520
  40b628:	movzx  ebx,BYTE PTR [rsp+0x4f]
  40b62d:	mov    rcx,rsi
  40b630:	mov    eax,ebx
  40b632:	or     eax,0x8
  40b635:	cmp    WORD PTR [rsi],0x703
  40b63a:	cmovae ebx,eax
  40b63d:	movzx  edx,bl
  40b640:	call   0x40d520
  40b645:	mov    edx,0xffffff88
  40b64a:	mov    rcx,rsi
  40b64d:	call   0x40d490
  40b652:	lea    rdx,[rip+0x2481e]        # 0x42fe77
  40b659:	mov    r8d,0x4
  40b65f:	mov    rcx,rsi
  40b662:	call   0x40d260
  40b667:	movsx  edx,WORD PTR [rsp+0xb8]
  40b66f:	mov    rcx,rsi
  40b672:	call   0x40d4d0
  40b677:	mov    edx,DWORD PTR [rsp+0xbc]
  40b67e:	mov    rcx,rsi
  40b681:	shr    edx,1
  40b683:	movsx  edx,dx
  40b686:	call   0x40d4d0
  40b68b:	cmp    QWORD PTR [rsi+0xc0],0x0
  40b693:	je     0x40ba93
  40b699:	xor    edx,edx
  40b69b:	mov    rcx,rsi
  40b69e:	call   0x40d4d0
  40b6a3:	xor    edx,edx
  40b6a5:	mov    rcx,rsi
  40b6a8:	call   0x40d4d0
  40b6ad:	xor    edx,edx
  40b6af:	mov    rcx,rsi
  40b6b2:	call   0x40d4d0
  40b6b7:	xor    edx,edx
  40b6b9:	mov    rcx,rsi
  40b6bc:	call   0x40d4d0
  40b6c1:	movsx  edx,WORD PTR [rsp+0xe8]
  40b6c9:	mov    rcx,rsi
  40b6cc:	lea    rbx,[rsp+0x50]
  40b6d1:	call   0x40d4d0
  40b6d6:	mov    edx,DWORD PTR [rsp+0xec]
  40b6dd:	mov    rcx,rsi
  40b6e0:	shr    edx,1
  40b6e2:	movsx  edx,dx
  40b6e5:	call   0x40d4d0
  40b6ea:	movsx  edx,WORD PTR [rsp+0xf8]
  40b6f2:	mov    rcx,rsi
  40b6f5:	call   0x40d4d0
  40b6fa:	mov    edx,DWORD PTR [rsp+0xfc]
  40b701:	mov    rcx,rsi
  40b704:	shr    edx,1
  40b706:	movsx  edx,dx
  40b709:	call   0x40d4d0
  40b70e:	xor    edx,edx
  40b710:	mov    rcx,rsi
  40b713:	call   0x40d4d0
  40b718:	xor    edx,edx
  40b71a:	mov    rcx,rsi
  40b71d:	call   0x40d4d0
  40b722:	movsx  edx,WORD PTR [rsp+0x108]
  40b72a:	mov    rcx,rsi
  40b72d:	call   0x40d4d0
  40b732:	mov    edx,DWORD PTR [rsp+0x10c]
  40b739:	mov    rcx,rsi
  40b73c:	shr    edx,1
  40b73e:	movsx  edx,dx
  40b741:	call   0x40d4d0
  40b746:	movsx  edx,WORD PTR [rsp+0x118]
  40b74e:	mov    rcx,rsi
  40b751:	call   0x40d4d0
  40b756:	mov    edx,DWORD PTR [rsp+0x11c]
  40b75d:	mov    rcx,rsi
  40b760:	shr    edx,1
  40b762:	movsx  edx,dx
  40b765:	call   0x40d4d0
  40b76a:	movsx  edx,WORD PTR [rsp+0x128]
  40b772:	mov    rcx,rsi
  40b775:	call   0x40d4d0
  40b77a:	mov    edx,DWORD PTR [rsp+0x12c]
  40b781:	mov    rcx,rsi
  40b784:	shr    edx,1
  40b786:	movsx  edx,dx
  40b789:	call   0x40d4d0
  40b78e:	mov    rcx,QWORD PTR [rsi+0x10]
  40b792:	mov    rdx,rbx
  40b795:	call   0x41f9a0
  40b79a:	mov    r8d,0x6
  40b7a0:	mov    rdx,rbx
  40b7a3:	mov    rcx,rsi
  40b7a6:	call   0x40d260
  40b7ab:	mov    edx,edi
  40b7ad:	add    dx,WORD PTR [rsp+0xa8]
  40b7b5:	mov    rcx,rsi
  40b7b8:	movsx  edx,dx
  40b7bb:	call   0x40d4d0
  40b7c0:	movsx  edx,WORD PTR [rsp+0x38]
  40b7c5:	mov    rcx,rsi
  40b7c8:	call   0x40d4d0
  40b7cd:	movsx  edx,WORD PTR [rsp+0x138]
  40b7d5:	mov    rcx,rsi
  40b7d8:	call   0x40d4d0
  40b7dd:	mov    edx,DWORD PTR [rsp+0x13c]
  40b7e4:	mov    rcx,rsi
  40b7e7:	shr    edx,1
  40b7e9:	movsx  edx,dx
  40b7ec:	call   0x40d4d0
  40b7f1:	cmp    WORD PTR [rsi],0x701
  40b7f6:	ja     0x40b9f0
  40b7fc:	mov    r8,QWORD PTR [rsp+0xa8]
  40b804:	mov    rdx,QWORD PTR [rsp+0x58]
  40b809:	mov    rcx,rsi
  40b80c:	call   0x40d260
  40b811:	mov    rax,QWORD PTR [rsi+0xc0]
  40b818:	test   rax,rax
  40b81b:	je     0x40b82d
  40b81d:	mov    r8,QWORD PTR [rsp+0x38]
  40b822:	mov    rdx,QWORD PTR [rax]
  40b825:	mov    rcx,rsi
  40b828:	call   0x40d260
  40b82d:	mov    rcx,rsi
  40b830:	call   0x40d5c0
  40b835:	mov    ebx,eax
  40b837:	call   0x423bb0
  40b83c:	mov    rcx,QWORD PTR [rsp+0x58]
  40b841:	call   0x429580
  40b846:	mov    eax,ebx
  40b848:	add    rsp,0x158
  40b84f:	pop    rbx
  40b850:	pop    rsi
  40b851:	pop    rdi
  40b852:	pop    rbp
  40b853:	pop    r12
  40b855:	pop    r13
  40b857:	pop    r14
  40b859:	pop    r15
  40b85b:	ret    
  40b85c:	nop    DWORD PTR [rax+0x0]
  40b860:	mov    rax,QWORD PTR [rip+0x2d349]        # 0x438bb0
  40b867:	mov    edx,DWORD PTR [rax]
  40b869:	test   edx,edx
  40b86b:	jne    0x40baf4
  40b871:	mov    rcx,rsi
  40b874:	call   0x425b40
  40b879:	test   rax,rax
  40b87c:	mov    QWORD PTR [rsi+0xc0],rax
  40b883:	je     0x40bb31
  40b889:	movsxd rax,DWORD PTR [rax+0x8]
  40b88d:	mov    QWORD PTR [rsp+0x38],rax
  40b892:	add    rax,rdi
  40b895:	mov    QWORD PTR [rsp+0x40],rax
  40b89a:	jmp    0x40b3a4
  40b89f:	nop
  40b8a0:	mov    ecx,DWORD PTR [rsp+0xd8]
  40b8a7:	mov    eax,DWORD PTR [rsp+0xdc]
  40b8ae:	mov    r8,QWORD PTR [rsp+0x58]
  40b8b3:	mov    r14,rcx
  40b8b6:	sub    rcx,rdi
  40b8b9:	test   rax,rax
  40b8bc:	mov    r12,rax
  40b8bf:	je     0x40b8ea
  40b8c1:	lea    rdx,[r8+rcx*1]
  40b8c5:	add    rcx,rax
  40b8c8:	add    rcx,r8
  40b8cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b8d0:	movzx  eax,BYTE PTR [rdx]
  40b8d3:	add    rdx,0x1
  40b8d7:	rol    al,0x4
  40b8da:	xor    eax,0xffffffa5
  40b8dd:	mov    BYTE PTR [rdx-0x1],al
  40b8e0:	cmp    rdx,rcx
  40b8e3:	jne    0x40b8d0
  40b8e5:	mov    r8,QWORD PTR [rsp+0x58]
  40b8ea:	mov    eax,DWORD PTR [rsp+0x148]
  40b8f1:	mov    r9d,DWORD PTR [rsp+0x14c]
  40b8f9:	sub    rax,rdi
  40b8fc:	lea    rdx,[r8+rax*1]
  40b900:	add    rax,r9
  40b903:	test   r9,r9
  40b906:	lea    rcx,[r8+rax*1]
  40b90a:	je     0x40b925
  40b90c:	nop    DWORD PTR [rax+0x0]
  40b910:	movzx  eax,BYTE PTR [rdx]
  40b913:	add    rdx,0x1
  40b917:	rol    al,0x4
  40b91a:	xor    eax,0xffffffa5
  40b91d:	mov    BYTE PTR [rdx-0x1],al
  40b920:	cmp    rdx,rcx
  40b923:	jne    0x40b910
  40b925:	mov    rax,QWORD PTR [rip+0x2d284]        # 0x438bb0
  40b92c:	mov    rbx,QWORD PTR [rsp+0x40]
  40b931:	add    rbx,QWORD PTR [rsp+0xa8]
  40b939:	mov    eax,DWORD PTR [rax]
  40b93b:	test   eax,eax
  40b93d:	jne    0x40bb14
  40b943:	call   0x423b60
  40b948:	mov    edx,ebx
  40b94a:	mov    rcx,rsi
  40b94d:	call   0x40d490
  40b952:	movzx  eax,WORD PTR [rbp+0xc]
  40b956:	sub    ax,0x700
  40b95a:	cmp    ax,0x4
  40b95e:	ja     0x40ba70
  40b964:	lea    rdx,[rip+0x24375]        # 0x42fce0
  40b96b:	movzx  eax,ax
  40b96e:	movsxd rax,DWORD PTR [rdx+rax*4]
  40b972:	add    rdx,rax
  40b975:	jmp    rdx
  40b977:	nop    WORD PTR [rax+rax*1+0x0]
  40b980:	test   BYTE PTR [rbp+0xf5],0x1
  40b987:	je     0x40b4bf
  40b98d:	mov    rax,QWORD PTR [rbp+0x80]
  40b994:	mov    BYTE PTR [rsp+0x4f],0x1
  40b999:	lea    rdx,[rax+0x8]
  40b99d:	mov    rax,QWORD PTR [rax]
  40b9a0:	mov    QWORD PTR [rsp+0x140],rdx
  40b9a8:	mov    DWORD PTR [rsp+0x14c],eax
  40b9af:	jmp    0x40b4bf
  40b9b4:	mov    edx,0x74000004
  40b9b9:	jmp    0x40b555
  40b9be:	xchg   ax,ax
  40b9c0:	mov    edx,0x71000001
  40b9c5:	jmp    0x40b555
  40b9ca:	nop    WORD PTR [rax+rax*1+0x0]
  40b9d0:	mov    edx,0x72090002
  40b9d5:	jmp    0x40b555
  40b9da:	nop    WORD PTR [rax+rax*1+0x0]
  40b9e0:	mov    edx,0x730b0003
  40b9e5:	jmp    0x40b555
  40b9ea:	nop    WORD PTR [rax+rax*1+0x0]
  40b9f0:	movsx  edx,WORD PTR [rsp+0x148]
  40b9f8:	mov    rcx,rsi
  40b9fb:	call   0x40d4d0
  40ba00:	mov    edx,DWORD PTR [rsp+0x14c]
  40ba07:	mov    rcx,rsi
  40ba0a:	shr    edx,1
  40ba0c:	movsx  edx,dx
  40ba0f:	call   0x40d4d0
  40ba14:	xor    edx,edx
  40ba16:	mov    rcx,rsi
  40ba19:	call   0x40d490
  40ba1e:	jmp    0x40b7fc
  40ba23:	movsxd rdx,r13d
  40ba26:	mov    rcx,rsi
  40ba29:	call   0x4025c0
  40ba2e:	jmp    0x40b590
  40ba33:	mov    rax,QWORD PTR [rbp+0x70]
  40ba37:	lea    rdx,[rax+0x8]
  40ba3b:	mov    rax,QWORD PTR [rax]
  40ba3e:	mov    QWORD PTR [rsp+0xc0],rdx
  40ba46:	mov    DWORD PTR [rsp+0xcc],eax
  40ba4d:	mov    rax,QWORD PTR [rbp+0x78]
  40ba51:	lea    rdx,[rax+0x8]
  40ba55:	mov    rax,QWORD PTR [rax]
  40ba58:	mov    QWORD PTR [rsp+0xd0],rdx
  40ba60:	mov    DWORD PTR [rsp+0xdc],eax
  40ba67:	jmp    0x40b402
  40ba6c:	nop    DWORD PTR [rax+0x0]
  40ba70:	lea    rdx,[rip+0x241f5]        # 0x42fc6c
  40ba77:	lea    rcx,[rip+0x24222]        # 0x42fca0
  40ba7e:	mov    r8d,0x3b0
  40ba84:	call   0x4291e0
  40ba89:	mov    edx,0x70000000
  40ba8e:	jmp    0x40b555
  40ba93:	movsx  edx,WORD PTR [rsp+0xc8]
  40ba9b:	mov    rcx,rsi
  40ba9e:	mov    r13d,r12d
  40baa1:	shr    r13d,1
  40baa4:	call   0x40d4d0
  40baa9:	mov    edx,DWORD PTR [rsp+0xcc]
  40bab0:	mov    rcx,rsi
  40bab3:	shr    edx,1
  40bab5:	movsx  edx,dx
  40bab8:	call   0x40d4d0
  40babd:	movsx  edx,r14w
  40bac1:	mov    rcx,rsi
  40bac4:	call   0x40d4d0
  40bac9:	movsx  edx,r13w
  40bacd:	mov    rcx,rsi
  40bad0:	call   0x40d4d0
  40bad5:	jmp    0x40b6c1
  40bada:	nop    WORD PTR [rax+rax*1+0x0]
  40bae0:	mov    rcx,QWORD PTR [rsp+0x58]
  40bae5:	call   0x429580
  40baea:	mov    eax,0xffffffff
  40baef:	jmp    0x40b848
  40baf4:	lea    r8,[rip+0x24145]        # 0x42fc40
  40bafb:	lea    rcx,[rip+0x2416a]        # 0x42fc6c
  40bb02:	mov    r9,rbx
  40bb05:	mov    edx,0x3466
  40bb0a:	call   0x423fa0
  40bb0f:	jmp    0x40b871
  40bb14:	lea    r8,[rip+0x2415d]        # 0x42fc78
  40bb1b:	lea    rcx,[rip+0x2414a]        # 0x42fc6c
  40bb22:	mov    edx,0x39b6
  40bb27:	call   0x423fa0
  40bb2c:	jmp    0x40b943
  40bb31:	mov    eax,0xffffffff
  40bb36:	jmp    0x40b848
  40bb3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bb40:	push   rsi
  40bb41:	push   rbx
  40bb42:	sub    rsp,0x38
  40bb46:	test   rdx,rdx
  40bb49:	mov    rsi,rcx
  40bb4c:	mov    rbx,rdx
  40bb4f:	je     0x40bb80
  40bb51:	mov    rcx,rdx
  40bb54:	mov    DWORD PTR [rsp+0x2c],r8d
  40bb59:	call   0x429490
  40bb5e:	mov    r8d,DWORD PTR [rsp+0x2c]
  40bb63:	mov    r9d,eax
  40bb66:	mov    rdx,rbx
  40bb69:	mov    rcx,rsi
  40bb6c:	add    rsp,0x38
  40bb70:	pop    rbx
  40bb71:	pop    rsi
  40bb72:	jmp    0x40d570
  40bb77:	nop    WORD PTR [rax+rax*1+0x0]
  40bb80:	xor    r9d,r9d
  40bb83:	jmp    0x40bb66
  40bb85:	nop
  40bb86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bb90:	push   r15
  40bb92:	push   r14
  40bb94:	push   r13
  40bb96:	push   r12
  40bb98:	push   rbp
  40bb99:	push   rdi
  40bb9a:	push   rsi
  40bb9b:	push   rbx
  40bb9c:	sub    rsp,0x3c8
  40bba3:	test   BYTE PTR [rdx+0xf5],0x2
  40bbaa:	mov    rbx,rcx
  40bbad:	mov    r14,rdx
  40bbb0:	mov    rbp,r8
  40bbb3:	je     0x40c585
  40bbb9:	movzx  eax,WORD PTR [rdx+0xc]
  40bbbd:	mov    edx,eax
  40bbbf:	shr    dx,0x8
  40bbc3:	test   dx,dx
  40bbc6:	je     0x40bd90
  40bbcc:	mov    rdx,QWORD PTR [r14+0xe0]
  40bbd3:	cmp    QWORD PTR [rdx],0x0
  40bbd7:	jne    0x40bd50
  40bbdd:	mov    QWORD PTR [rbx+0x168],r14
  40bbe4:	mov    WORD PTR [rbx],ax
  40bbe7:	movzx  eax,BYTE PTR [r14+0xf4]
  40bbef:	movzx  edx,BYTE PTR [rbx+0xa0]
  40bbf6:	shr    al,0x2
  40bbf9:	and    edx,0xfffffffe
  40bbfc:	and    eax,0x1
  40bbff:	or     eax,edx
  40bc01:	mov    BYTE PTR [rbx+0xa0],al
  40bc07:	mov    rax,QWORD PTR [rbx+0x68]
  40bc0b:	mov    rax,QWORD PTR [rax]
  40bc0e:	cmp    QWORD PTR [rax+0x10],0xffffffffffffffff
  40bc13:	je     0x40c190
  40bc19:	mov    r12d,DWORD PTR [r14+0x28]
  40bc1d:	test   r12d,r12d
  40bc20:	mov    eax,r12d
  40bc23:	je     0x40bd40
  40bc29:	cmp    QWORD PTR [r14+0xc8],0x0
  40bc31:	mov    DWORD PTR [rbx+0x158],eax
  40bc37:	je     0x40c4f4
  40bc3d:	mov    rax,QWORD PTR [r14+0x98]
  40bc44:	mov    QWORD PTR [rbx+0x7d],rax
  40bc48:	mov    rax,QWORD PTR [r14+0xa0]
  40bc4f:	mov    QWORD PTR [rbx+0x85],rax
  40bc56:	mov    rax,QWORD PTR [r14+0xa8]
  40bc5d:	mov    QWORD PTR [rbx+0x8d],rax
  40bc64:	mov    rax,QWORD PTR [r14+0xb0]
  40bc6b:	mov    QWORD PTR [rbx+0x95],rax
  40bc72:	mov    rsi,QWORD PTR [r14+0xc8]
  40bc79:	mov    edi,DWORD PTR [r14+0x8]
  40bc7d:	test   rsi,rsi
  40bc80:	jne    0x40bcb4
  40bc82:	jmp    0x40c539
  40bc87:	nop    WORD PTR [rax+rax*1+0x0]
  40bc90:	mov    QWORD PTR [rsp+0x20],rbp
  40bc95:	mov    r9d,r12d
  40bc98:	mov    rdx,rsi
  40bc9b:	mov    rcx,rbx
  40bc9e:	call   0x4221c0
  40bca3:	test   eax,eax
  40bca5:	je     0x40bf15
  40bcab:	mov    rsi,QWORD PTR [rsi+0x28]
  40bcaf:	test   rsi,rsi
  40bcb2:	je     0x40bce9
  40bcb4:	cmp    WORD PTR [rbx],0x500
  40bcb9:	mov    DWORD PTR [r14+0x8],edi
  40bcbd:	mov    r8d,edi
  40bcc0:	je     0x40bcd6
  40bcc2:	mov    rdx,QWORD PTR [r14+0xd8]
  40bcc9:	cmp    QWORD PTR [rdx],0x0
  40bccd:	je     0x40bcd3
  40bccf:	test   edi,edi
  40bcd1:	je     0x40bd25
  40bcd3:	mov    r8d,edi
  40bcd6:	test   r8d,r8d
  40bcd9:	jg     0x40bc90
  40bcdb:	mov    rsi,QWORD PTR [rsi+0x28]
  40bcdf:	mov    eax,0x4e29
  40bce4:	test   rsi,rsi
  40bce7:	jne    0x40bcb4
  40bce9:	mov    edi,DWORD PTR [r14+0x8]
  40bced:	mov    r12d,eax
  40bcf0:	neg    r12d
  40bcf3:	test   edi,edi
  40bcf5:	jle    0x40c150
  40bcfb:	mov    rcx,QWORD PTR [rbx+0x28]
  40bcff:	mov    r9d,DWORD PTR [rbp+0x0]
  40bd03:	mov    r8d,eax
  40bd06:	mov    rdx,rbx
  40bd09:	call   0x40a8d0
  40bd0e:	mov    eax,r12d
  40bd11:	add    rsp,0x3c8
  40bd18:	pop    rbx
  40bd19:	pop    rsi
  40bd1a:	pop    rdi
  40bd1b:	pop    rbp
  40bd1c:	pop    r12
  40bd1e:	pop    r13
  40bd20:	pop    r14
  40bd22:	pop    r15
  40bd24:	ret    
  40bd25:	add    rdx,0x8
  40bd29:	mov    rcx,rsi
  40bd2c:	call   0x422cd0
  40bd31:	mov    r8d,eax
  40bd34:	mov    DWORD PTR [r14+0x8],eax
  40bd38:	jmp    0x40bcd6
  40bd3a:	nop    WORD PTR [rax+rax*1+0x0]
  40bd40:	mov    eax,DWORD PTR [r14+0x94]
  40bd47:	jmp    0x40bc29
  40bd4c:	nop    DWORD PTR [rax+0x0]
  40bd50:	call   0x423c20
  40bd55:	test   eax,eax
  40bd57:	jne    0x40bd7d
  40bd59:	mov    eax,DWORD PTR [r14+0xe8]
  40bd60:	test   eax,eax
  40bd62:	je     0x40bd6d
  40bd64:	mov    rdx,QWORD PTR [rip+0x2cd95]        # 0x438b00
  40bd6b:	mov    DWORD PTR [rdx],eax
  40bd6d:	mov    rax,QWORD PTR [r14+0xe0]
  40bd74:	lea    rcx,[rax+0x8]
  40bd78:	call   0x4240b0
  40bd7d:	movzx  eax,WORD PTR [r14+0xc]
  40bd82:	jmp    0x40bbdd
  40bd87:	nop    WORD PTR [rax+rax*1+0x0]
  40bd90:	mov    rsi,QWORD PTR [rcx+0x28]
  40bd94:	mov    rax,QWORD PTR [rcx+0x170]
  40bd9b:	lea    r13,[rsp+0x60]
  40bda0:	mov    ecx,0x6b
  40bda5:	lea    r15,[rip+0x240e4]        # 0x42fe90
  40bdac:	mov    rdi,r13
  40bdaf:	mov    QWORD PTR [rsp+0x30],rax
  40bdb4:	mov    rax,QWORD PTR [rsi+0x18]
  40bdb8:	mov    QWORD PTR [rsp+0x38],rax
  40bdbd:	xor    eax,eax
  40bdbf:	rep stos QWORD PTR es:[rdi],rax
  40bdc2:	lea    rdi,[rip+0x240d3]        # 0x42fe9c
  40bdc9:	mov    rax,QWORD PTR [rsi]
  40bdcc:	mov    QWORD PTR [rbx+0x28],r13
  40bdd0:	mov    QWORD PTR [rsp+0x60],rax
  40bdd5:	lea    rax,[rip+0xfffffffffffff474]        # 0x40b250
  40bddc:	mov    QWORD PTR [rsp+0x70],rax
  40bde1:	lea    rax,[rip+0xfffffffffffff488]        # 0x40b270
  40bde8:	mov    QWORD PTR [rsp+0x78],rax
  40bded:	lea    rax,[rip+0xfffffffffffff2ec]        # 0x40b0e0
  40bdf4:	mov    QWORD PTR [rbx+0x170],rax
  40bdfb:	mov    QWORD PTR [rsi+0x18],0x0
  40be03:	movzx  eax,WORD PTR [r15]
  40be07:	mov    rcx,r13
  40be0a:	mov    WORD PTR [r14+0xc],ax
  40be0f:	call   0x40b290
  40be14:	mov    r8,rbp
  40be17:	mov    rdx,r14
  40be1a:	mov    rcx,rbx
  40be1d:	call   0x40bb90
  40be22:	test   eax,eax
  40be24:	mov    r12d,eax
  40be27:	js     0x40c120
  40be2d:	mov    rax,QWORD PTR [rsp+0x38]
  40be32:	mov    QWORD PTR [rsi+0x18],rax
  40be36:	mov    rax,QWORD PTR [rsp+0x30]
  40be3b:	mov    QWORD PTR [rbx+0x28],rsi
  40be3f:	mov    QWORD PTR [rbx+0x170],rax
  40be46:	mov    eax,DWORD PTR [rsp+0x88]
  40be4d:	test   eax,eax
  40be4f:	je     0x40bea4
  40be51:	mov    rcx,rsi
  40be54:	lea    rdi,[r13+0x30]
  40be58:	xor    esi,esi
  40be5a:	jmp    0x40be85
  40be5c:	nop    DWORD PTR [rax+0x0]
  40be60:	mov    rax,QWORD PTR [rcx+0x10]
  40be64:	test   rax,rax
  40be67:	je     0x40be71
  40be69:	mov    r8,rdi
  40be6c:	mov    rdx,rbx
  40be6f:	call   rax
  40be71:	add    esi,0x1
  40be74:	add    rdi,0x38
  40be78:	cmp    esi,DWORD PTR [rsp+0x88]
  40be7f:	jae    0x40bea4
  40be81:	mov    rcx,QWORD PTR [rbx+0x28]
  40be85:	cmp    BYTE PTR [rdi+0x30],0x0
  40be89:	je     0x40be60
  40be8b:	mov    rax,QWORD PTR [rcx+0x18]
  40be8f:	test   rax,rax
  40be92:	jne    0x40be69
  40be94:	add    esi,0x1
  40be97:	add    rdi,0x38
  40be9b:	cmp    esi,DWORD PTR [rsp+0x88]
  40bea2:	jb     0x40be81
  40bea4:	mov    eax,DWORD PTR [rsp+0x2c0]
  40beab:	xor    edi,edi
  40bead:	mov    rsi,r13
  40beb0:	test   eax,eax
  40beb2:	je     0x40bee9
  40beb4:	mov    rax,QWORD PTR [rbx+0x170]
  40bebb:	test   rax,rax
  40bebe:	je     0x40bed9
  40bec0:	mov    edx,DWORD PTR [rsi+0x278]
  40bec6:	mov    r9,QWORD PTR [rsi+0x270]
  40becd:	mov    rcx,rbx
  40bed0:	mov    r8,QWORD PTR [rsi+0x268]
  40bed7:	call   rax
  40bed9:	add    edi,0x1
  40bedc:	add    rsi,0x18
  40bee0:	cmp    edi,DWORD PTR [rsp+0x2c0]
  40bee7:	jb     0x40beb4
  40bee9:	mov    rcx,r13
  40beec:	call   0x40b290
  40bef1:	test   r12d,r12d
  40bef4:	jns    0x40bd0e
  40befa:	mov    rcx,QWORD PTR [rbx+0x28]
  40befe:	mov    r9d,DWORD PTR [rbp+0x0]
  40bf02:	mov    r8d,r12d
  40bf05:	neg    r8d
  40bf08:	mov    rdx,rbx
  40bf0b:	call   0x40a8d0
  40bf10:	jmp    0x40bd0e
  40bf15:	xor    edx,edx
  40bf17:	mov    QWORD PTR [r14+0xd0],rsi
  40bf1e:	mov    rcx,rbx
  40bf21:	call   0x40ab40
  40bf26:	mov    rax,QWORD PTR [rbx+0xc0]
  40bf2d:	mov    DWORD PTR [rbx+0xa4],0xffffffff
  40bf37:	test   rax,rax
  40bf3a:	je     0x40bf50
  40bf3c:	mov    rdx,rax
  40bf3f:	mov    rcx,rbx
  40bf42:	call   QWORD PTR [rax+0x10]
  40bf45:	mov    QWORD PTR [rbx+0xc0],0x0
  40bf50:	movzx  esi,WORD PTR [rbx]
  40bf53:	cmp    si,0x700
  40bf58:	ja     0x40c233
  40bf5e:	jne    0x40c1d0
  40bf64:	mov    rdx,r14
  40bf67:	mov    rcx,rbx
  40bf6a:	call   0x40b320
  40bf6f:	mov    edi,0x1
  40bf74:	test   eax,eax
  40bf76:	js     0x40c673
  40bf7c:	mov    rcx,rbx
  40bf7f:	call   0x408150
  40bf84:	test   eax,eax
  40bf86:	js     0x40c890
  40bf8c:	mov    r9d,DWORD PTR [r14+0xec]
  40bf93:	test   r9d,r9d
  40bf96:	jne    0x40c10f
  40bf9c:	test   edi,edi
  40bf9e:	jne    0x40c102
  40bfa4:	mov    rax,QWORD PTR [r14+0xc0]
  40bfab:	cmp    QWORD PTR [rax],0x0
  40bfaf:	je     0x40c102
  40bfb5:	lea    r8,[rax+0x8]
  40bfb9:	xor    edx,edx
  40bfbb:	mov    r9d,0xffffffff
  40bfc1:	mov    rcx,rbx
  40bfc4:	call   0x41abc0
  40bfc9:	lea    ecx,[rax+0x80]
  40bfcf:	movsxd rcx,ecx
  40bfd2:	call   0x429538
  40bfd7:	test   rax,rax
  40bfda:	mov    rsi,rax
  40bfdd:	je     0x40c8c5
  40bfe3:	mov    r8d,DWORD PTR [r14+0xec]
  40bfea:	mov    BYTE PTR [rax],0x0
  40bfed:	test   r8d,r8d
  40bff0:	jne    0x40c525
  40bff6:	cmp    DWORD PTR [rbx+0xa4],0xffffffff
  40bffd:	je     0x40c5d0
  40c003:	test   edi,edi
  40c005:	jne    0x40c018
  40c007:	mov    rcx,QWORD PTR [r14+0xc0]
  40c00e:	cmp    QWORD PTR [rcx],0x0
  40c012:	jne    0x40c48b
  40c018:	mov    rdx,rsi
  40c01b:	mov    rcx,rbx
  40c01e:	call   0x419570
  40c023:	mov    rcx,rsi
  40c026:	mov    r12d,eax
  40c029:	call   0x429580
  40c02e:	test   r12d,r12d
  40c031:	js     0x40bd0e
  40c037:	cmp    DWORD PTR [rbx+0xa4],0xffffffff
  40c03e:	lea    r13,[rsp+0x60]
  40c043:	lea    rsi,[rsp+0x50]
  40c048:	je     0x40c0c0
  40c04a:	mov    rcx,rbx
  40c04d:	call   0x40a3a0
  40c052:	test   eax,eax
  40c054:	js     0x40c0fa
  40c05a:	mov    eax,DWORD PTR [r14+0x94]
  40c061:	xor    r12d,r12d
  40c064:	mov    QWORD PTR [rbx+0x168],0x0
  40c06f:	mov    DWORD PTR [rbx+0x158],eax
  40c075:	jmp    0x40bd0e
  40c07a:	nop    WORD PTR [rax+rax*1+0x0]
  40c080:	mov    rax,QWORD PTR [rbx+0x118]
  40c087:	cmp    WORD PTR [rax+0x8],0x1
  40c08c:	jne    0x40c0c0
  40c08e:	mov    rax,QWORD PTR [rax]
  40c091:	mov    rdi,QWORD PTR [rax]
  40c094:	mov    edx,DWORD PTR [rdi+0x10]
  40c097:	mov    ecx,DWORD PTR [rdi+0x14]
  40c09a:	call   0x421820
  40c09f:	cmp    eax,0x34
  40c0a2:	je     0x40c6ac
  40c0a8:	cmp    eax,0x38
  40c0ab:	jne    0x40c0f5
  40c0ad:	mov    rax,QWORD PTR [rdi+0x48]
  40c0b1:	mov    eax,DWORD PTR [rax]
  40c0b3:	mov    DWORD PTR [rbx+0xa4],eax
  40c0b9:	nop    DWORD PTR [rax+0x0]
  40c0c0:	mov    r9d,0x500
  40c0c6:	mov    r8,r13
  40c0c9:	mov    rdx,rsi
  40c0cc:	mov    rcx,rbx
  40c0cf:	call   0x408b20
  40c0d4:	test   eax,eax
  40c0d6:	jne    0x40c62d
  40c0dc:	mov    eax,DWORD PTR [rsp+0x50]
  40c0e0:	cmp    eax,0xfc8
  40c0e5:	je     0x40c080
  40c0e7:	cmp    eax,0xfd4
  40c0ec:	jne    0x40c0c0
  40c0ee:	test   BYTE PTR [rsp+0x60],0x2
  40c0f3:	je     0x40c0c0
  40c0f5:	mov    eax,0xffffffff
  40c0fa:	mov    r12d,eax
  40c0fd:	jmp    0x40bd0e
  40c102:	cmp    DWORD PTR [rbx+0xa4],0xffffffff
  40c109:	jne    0x40c05a
  40c10f:	mov    rax,QWORD PTR [r14+0xc0]
  40c116:	jmp    0x40bfb5
  40c11b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c120:	mov    rcx,rbx
  40c123:	call   0x421ae0
  40c128:	cmp    r12d,0xffffb1de
  40c12f:	jne    0x40be2d
  40c135:	add    r15,0x2
  40c139:	cmp    r15,rdi
  40c13c:	jne    0x40be03
  40c142:	jmp    0x40be2d
  40c147:	nop    WORD PTR [rax+rax*1+0x0]
  40c150:	mov    rdx,QWORD PTR [rip+0x2ca59]        # 0x438bb0
  40c157:	mov    r13d,DWORD PTR [rdx]
  40c15a:	test   r13d,r13d
  40c15d:	je     0x40bcfb
  40c163:	lea    r8,[rip+0x23bf1]        # 0x42fd5b
  40c16a:	lea    rcx,[rip+0x23afb]        # 0x42fc6c
  40c171:	mov    edx,0x1f22
  40c176:	mov    DWORD PTR [rsp+0x30],eax
  40c17a:	call   0x423fa0
  40c17f:	mov    eax,DWORD PTR [rsp+0x30]
  40c183:	jmp    0x40bcfb
  40c188:	nop    DWORD PTR [rax+rax*1+0x0]
  40c190:	mov    rax,QWORD PTR [r14+0xb8]
  40c197:	cmp    QWORD PTR [rax],0x0
  40c19b:	je     0x40bc19
  40c1a1:	movzx  r8d,BYTE PTR [r14+0xf4]
  40c1a9:	lea    rdx,[rax+0x8]
  40c1ad:	mov    rcx,rbx
  40c1b0:	shr    r8b,0x7
  40c1b4:	and    r8d,0x1
  40c1b8:	call   0x41e290
  40c1bd:	test   eax,eax
  40c1bf:	jns    0x40bc19
  40c1c5:	mov    r12d,0xffffb1d6
  40c1cb:	jmp    0x40bd0e
  40c1d0:	lea    rcx,[rip+0x23bab]        # 0x42fd82
  40c1d7:	mov    BYTE PTR [rbx+0xf1],0x2
  40c1de:	call   0x429560
  40c1e3:	test   rax,rax
  40c1e6:	je     0x40c47f
  40c1ec:	lea    rcx,[rip+0x23b8f]        # 0x42fd82
  40c1f3:	call   0x429560
  40c1f8:	mov    rdi,rax
  40c1fb:	mov    rsi,QWORD PTR [r14+0x70]
  40c1ff:	mov    edx,0x5c
  40c204:	lea    rcx,[rsi+0x8]
  40c208:	call   0x4294b8
  40c20d:	test   rax,rax
  40c210:	je     0x40c63b
  40c216:	mov    rax,QWORD PTR [rip+0x2c993]        # 0x438bb0
  40c21d:	mov    edi,DWORD PTR [rax]
  40c21f:	test   edi,edi
  40c221:	jne    0x40c6be
  40c227:	mov    eax,0xffffffff
  40c22c:	xor    edi,edi
  40c22e:	jmp    0x40bf74
  40c233:	mov    rdi,QWORD PTR [r14+0xd8]
  40c23a:	cmp    QWORD PTR [rdi],0x0
  40c23e:	jne    0x40c461
  40c244:	lea    rdi,[rip+0x23aa9]        # 0x42fcf4
  40c24b:	mov    ebp,0xc
  40c250:	mov    edx,0xc
  40c255:	xor    ecx,ecx
  40c257:	mov    eax,0xc
  40c25c:	cmp    si,0x701
  40c261:	mov    BYTE PTR [rsp+0x60],0x0
  40c266:	mov    BYTE PTR [rsp+0x61],0x0
  40c26b:	mov    BYTE PTR [rsp+0x62],0x15
  40c270:	mov    BYTE PTR [rsp+0x63],0x0
  40c275:	mov    BYTE PTR [rsp+0x64],0x6
  40c27a:	mov    BYTE PTR [rsp+0x65],0x1
  40c27f:	mov    BYTE PTR [rsp+0x66],0x0
  40c284:	mov    BYTE PTR [rsp+0x67],0x1b
  40c289:	mov    BYTE PTR [rsp+0x68],0x0
  40c28e:	mov    BYTE PTR [rsp+0x69],0x1
  40c293:	mov    BYTE PTR [rsp+0x6a],0x2
  40c298:	mov    BYTE PTR [rsp+0x6b],0x0
  40c29d:	mov    BYTE PTR [rsp+0x6c],0x1c
  40c2a2:	mov    BYTE PTR [rsp+0x6f],0x3
  40c2a7:	mov    BYTE PTR [rsp+0x72],0x0
  40c2ac:	mov    BYTE PTR [rsp+0x73],0x4
  40c2b1:	mov    BYTE PTR [rsp+0x74],0x4
  40c2b6:	mov    BYTE PTR [rsp+0x75],0x0
  40c2bb:	mov    BYTE PTR [rsp+0x76],0x0
  40c2c0:	mov    BYTE PTR [rsp+0x77],0x0
  40c2c5:	mov    BYTE PTR [rsp+0x78],0x1
  40c2ca:	mov    BYTE PTR [rsp+0x79],0xff
  40c2cf:	mov    BYTE PTR [rsp+0x6d],cl
  40c2d3:	mov    BYTE PTR [rsp+0x6e],dl
  40c2d7:	jne    0x40c549
  40c2dd:	add    eax,0x1c
  40c2e0:	add    edx,0x1c
  40c2e3:	mov    BYTE PTR [rsp+0x74],0xff
  40c2e8:	sar    eax,0x8
  40c2eb:	mov    BYTE PTR [rsp+0x71],dl
  40c2ef:	mov    r8d,0x15
  40c2f5:	mov    BYTE PTR [rsp+0x70],al
  40c2f9:	cmp    DWORD PTR [rbx+0xe0],0xfff
  40c303:	jbe    0x40c5a5
  40c309:	lea    r13,[rsp+0x60]
  40c30e:	mov    rcx,rbx
  40c311:	mov    BYTE PTR [rbx+0xf1],0x12
  40c318:	mov    rdx,r13
  40c31b:	call   0x40d260
  40c320:	cmp    WORD PTR [rbx],0x702
  40c325:	lea    rax,[rip+0x23b57]        # 0x42fe83
  40c32c:	lea    rdx,[rip+0x23b56]        # 0x42fe89
  40c333:	mov    r8d,0x6
  40c339:	mov    rcx,rbx
  40c33c:	cmovb  rdx,rax
  40c340:	call   0x40d260
  40c345:	xor    edx,edx
  40c347:	cmp    BYTE PTR [r14+0x90],0x1
  40c34f:	mov    rcx,rbx
  40c352:	seta   dl
  40c355:	call   0x40d520
  40c35a:	mov    r8,rbp
  40c35d:	mov    rdx,rdi
  40c360:	mov    rcx,rbx
  40c363:	call   0x40d260
  40c368:	call   QWORD PTR [rip+0x33586]        # 0x43f8f4
  40c36e:	mov    rcx,rbx
  40c371:	mov    edx,eax
  40c373:	call   0x40d490
  40c378:	cmp    WORD PTR [rbx],0x701
  40c37d:	ja     0x40c5c1
  40c383:	mov    rcx,rbx
  40c386:	call   0x40d5c0
  40c38b:	test   eax,eax
  40c38d:	js     0x40bf6f
  40c393:	mov    rcx,rbx
  40c396:	call   0x4245f0
  40c39b:	test   eax,eax
  40c39d:	jle    0x40c457
  40c3a3:	cmp    BYTE PTR [rbx+0xf0],0x4
  40c3aa:	jne    0x40c457
  40c3b0:	mov    eax,DWORD PTR [rbx+0xe4]
  40c3b6:	mov    edi,DWORD PTR [rbx+0xec]
  40c3bc:	mov    r11d,edi
  40c3bf:	sub    r11d,eax
  40c3c2:	add    rax,QWORD PTR [rbx+0xd0]
  40c3c9:	test   r11d,r11d
  40c3cc:	mov    r8,rax
  40c3cf:	jle    0x40c457
  40c3d5:	movzx  ebp,BYTE PTR [rax]
  40c3d8:	cmp    bpl,0xff
  40c3dc:	je     0x40cc1e
  40c3e2:	cmp    r11d,0x4
  40c3e6:	jle    0x40c457
  40c3e8:	mov    eax,0x5
  40c3ed:	mov    esi,0x2
  40c3f2:	jmp    0x40c42f
  40c3f4:	lea    r9d,[rdx+rcx*1]
  40c3f8:	cmp    r11d,r9d
  40c3fb:	jl     0x40c457
  40c3fd:	test   ecx,ecx
  40c3ff:	je     0x40c40f
  40c401:	cmp    bpl,0x1
  40c405:	jne    0x40c40f
  40c407:	movsxd rdx,edx
  40c40a:	movzx  esi,BYTE PTR [r8+rdx*1]
  40c40f:	cmp    r11d,eax
  40c412:	jle    0x40c457
  40c414:	movzx  ebp,BYTE PTR [r8+rax*1]
  40c419:	cmp    bpl,0xff
  40c41d:	je     0x40c6e2
  40c423:	add    rax,0x5
  40c427:	lea    edx,[rax-0x1]
  40c42a:	cmp    r11d,edx
  40c42d:	jle    0x40c457
  40c42f:	movzx  edx,BYTE PTR [r8+rax*1-0x4]
  40c435:	movzx  ecx,BYTE PTR [r8+rax*1-0x3]
  40c43b:	movzx  r9d,BYTE PTR [r8+rax*1-0x1]
  40c441:	shl    edx,0x8
  40c444:	add    edx,ecx
  40c446:	movzx  ecx,BYTE PTR [r8+rax*1-0x2]
  40c44c:	shl    ecx,0x8
  40c44f:	add    ecx,r9d
  40c452:	cmp    r11d,edx
  40c455:	jge    0x40c3f4
  40c457:	mov    eax,0xffffffff
  40c45c:	jmp    0x40bf6f
  40c461:	add    rdi,0x8
  40c465:	mov    rcx,rdi
  40c468:	call   0x429490
  40c46d:	add    eax,0x1
  40c470:	mov    ecx,eax
  40c472:	mov    edx,eax
  40c474:	movsxd rbp,eax
  40c477:	shr    ecx,0x8
  40c47a:	jmp    0x40c25c
  40c47f:	mov    rax,QWORD PTR [r14]
  40c482:	lea    rdi,[rax+0x8]
  40c486:	jmp    0x40c1fb
  40c48b:	mov    rdx,rsi
  40c48e:	mov    r8d,DWORD PTR [rdx]
  40c491:	add    rdx,0x4
  40c495:	lea    eax,[r8-0x1010101]
  40c49c:	not    r8d
  40c49f:	and    eax,r8d
  40c4a2:	and    eax,0x80808080
  40c4a7:	je     0x40c48e
  40c4a9:	mov    r8d,eax
  40c4ac:	mov    r9d,0xffffffff
  40c4b2:	shr    r8d,0x10
  40c4b6:	test   eax,0x8080
  40c4bb:	cmove  eax,r8d
  40c4bf:	lea    r8,[rdx+0x2]
  40c4c3:	cmove  rdx,r8
  40c4c7:	add    al,al
  40c4c9:	lea    r8,[rcx+0x8]
  40c4cd:	sbb    rdx,0x3
  40c4d1:	mov    rcx,rbx
  40c4d4:	sub    rdx,rsi
  40c4d7:	lea    rax,[rsi+rdx*1]
  40c4db:	lea    rdx,[rsi+rdx*1+0x4]
  40c4e0:	mov    DWORD PTR [rax],0x20657375
  40c4e6:	mov    BYTE PTR [rax+0x4],0x0
  40c4ea:	call   0x41abc0
  40c4ef:	jmp    0x40c018
  40c4f4:	mov    rcx,QWORD PTR [rbx+0x28]
  40c4f8:	xor    r9d,r9d
  40c4fb:	mov    rdx,rbx
  40c4fe:	mov    r8d,0x4e2d
  40c504:	call   0x40a8d0
  40c509:	mov    rbx,QWORD PTR [rip+0x2c6a0]        # 0x438bb0
  40c510:	mov    eax,DWORD PTR [rbx]
  40c512:	test   eax,eax
  40c514:	jne    0x40c793
  40c51a:	mov    r12d,0xffffb1d7
  40c520:	jmp    0x40bd0e
  40c525:	lea    rdx,[rip+0x23931]        # 0x42fe5d
  40c52c:	mov    rcx,rax
  40c52f:	call   0x4294c8
  40c534:	jmp    0x40bff6
  40c539:	mov    r12d,0xffffb1d4
  40c53f:	mov    eax,0x4e2c
  40c544:	jmp    0x40bcf3
  40c549:	lea    ecx,[rax+0x21]
  40c54c:	add    eax,0x25
  40c54f:	mov    BYTE PTR [rsp+0x62],0x1a
  40c554:	sar    eax,0x8
  40c557:	mov    BYTE PTR [rsp+0x67],0x20
  40c55c:	mov    BYTE PTR [rsp+0x6c],0x21
  40c561:	sar    ecx,0x8
  40c564:	mov    BYTE PTR [rsp+0x75],al
  40c568:	mov    r8d,0x1a
  40c56e:	mov    BYTE PTR [rsp+0x70],cl
  40c572:	lea    ecx,[rdx+0x21]
  40c575:	add    edx,0x25
  40c578:	mov    BYTE PTR [rsp+0x76],dl
  40c57c:	mov    BYTE PTR [rsp+0x71],cl
  40c580:	jmp    0x40c2f9
  40c585:	mov    rcx,QWORD PTR [rcx+0x28]
  40c589:	xor    r9d,r9d
  40c58c:	mov    r8d,0x4ef6
  40c592:	mov    rdx,rbx
  40c595:	mov    r12d,0xffffffff
  40c59b:	call   0x40a8d0
  40c5a0:	jmp    0x40bd0e
  40c5a5:	mov    edx,0x1000
  40c5aa:	mov    rcx,rbx
  40c5ad:	mov    QWORD PTR [rsp+0x30],r8
  40c5b2:	call   0x4025c0
  40c5b7:	mov    r8,QWORD PTR [rsp+0x30]
  40c5bc:	jmp    0x40c309
  40c5c1:	xor    edx,edx
  40c5c3:	mov    rcx,rbx
  40c5c6:	call   0x40d520
  40c5cb:	jmp    0x40c383
  40c5d0:	mov    rdx,rsi
  40c5d3:	mov    ecx,DWORD PTR [rdx]
  40c5d5:	add    rdx,0x4
  40c5d9:	lea    eax,[rcx-0x1010101]
  40c5df:	not    ecx
  40c5e1:	and    eax,ecx
  40c5e3:	and    eax,0x80808080
  40c5e8:	je     0x40c5d3
  40c5ea:	mov    ecx,eax
  40c5ec:	mov    r8d,0x2064
  40c5f2:	shr    ecx,0x10
  40c5f5:	test   eax,0x8080
  40c5fa:	cmove  eax,ecx
  40c5fd:	lea    rcx,[rdx+0x2]
  40c601:	cmove  rdx,rcx
  40c605:	add    al,al
  40c607:	movabs rax,0x40207463656c6573
  40c611:	sbb    rdx,0x3
  40c615:	mov    QWORD PTR [rdx],rax
  40c618:	mov    DWORD PTR [rdx+0x8],0x69707340
  40c61f:	mov    WORD PTR [rdx+0xc],r8w
  40c624:	mov    BYTE PTR [rdx+0xe],0x0
  40c628:	jmp    0x40c003
  40c62d:	cmp    eax,0x1
  40c630:	jne    0x40c052
  40c636:	jmp    0x40c05a
  40c63b:	cmp    QWORD PTR [rsi],0x0
  40c63f:	jne    0x40c745
  40c645:	mov    rax,QWORD PTR [rip+0x2c564]        # 0x438bb0
  40c64c:	mov    esi,DWORD PTR [rax]
  40c64e:	test   esi,esi
  40c650:	je     0x40c227
  40c656:	lea    r8,[rip+0x23763]        # 0x42fdc0
  40c65d:	lea    rcx,[rip+0x23608]        # 0x42fc6c
  40c664:	mov    edx,0x27d2
  40c669:	call   0x423fa0
  40c66e:	jmp    0x40c227
  40c673:	mov    rax,QWORD PTR [rip+0x2c536]        # 0x438bb0
  40c67a:	mov    edx,DWORD PTR [rax]
  40c67c:	test   edx,edx
  40c67e:	jne    0x40cc5b
  40c684:	mov    rcx,rbx
  40c687:	mov    r12d,0xffffb1de
  40c68d:	call   0x421ae0
  40c692:	mov    rcx,QWORD PTR [rbx+0x28]
  40c696:	xor    r9d,r9d
  40c699:	mov    r8d,0x4e22
  40c69f:	mov    rdx,rbx
  40c6a2:	call   0x40a8d0
  40c6a7:	jmp    0x40bd0e
  40c6ac:	mov    rax,QWORD PTR [rdi+0x48]
  40c6b0:	movzx  eax,WORD PTR [rax]
  40c6b3:	mov    DWORD PTR [rbx+0xa4],eax
  40c6b9:	jmp    0x40c0c0
  40c6be:	lea    r8,[rip+0x236cb]        # 0x42fd90
  40c6c5:	lea    rcx,[rip+0x235a0]        # 0x42fc6c
  40c6cc:	mov    edx,0x2792
  40c6d1:	xor    edi,edi
  40c6d3:	call   0x423fa0
  40c6d8:	mov    eax,0xffffffff
  40c6dd:	jmp    0x40bf74
  40c6e2:	mov    rax,QWORD PTR [rip+0x2c4c7]        # 0x438bb0
  40c6e9:	mov    DWORD PTR [rbx+0xe4],edi
  40c6ef:	mov    ebp,DWORD PTR [rax]
  40c6f1:	test   ebp,ebp
  40c6f3:	jne    0x40cc3a
  40c6f9:	cmp    sil,0x2
  40c6fd:	je     0x40c810
  40c703:	mov    rcx,rbx
  40c706:	call   0x423550
  40c70b:	test   eax,eax
  40c70d:	js     0x40bf6f
  40c713:	mov    rdx,r14
  40c716:	mov    rcx,rbx
  40c719:	call   0x40b320
  40c71e:	mov    edx,eax
  40c720:	shr    edx,0x1f
  40c723:	test   dl,dl
  40c725:	jne    0x40c730
  40c727:	test   sil,sil
  40c72a:	jne    0x40bf6f
  40c730:	mov    rcx,rbx
  40c733:	mov    DWORD PTR [rsp+0x30],eax
  40c737:	call   0x4238f0
  40c73c:	mov    eax,DWORD PTR [rsp+0x30]
  40c740:	jmp    0x40bf6f
  40c745:	cmp    BYTE PTR [r14+0x90],0x0
  40c74d:	je     0x40c83b
  40c753:	cmp    WORD PTR [rbx],0x402
  40c758:	jne    0x40c823
  40c75e:	mov    rax,QWORD PTR [rip+0x2c44b]        # 0x438bb0
  40c765:	mov    r11d,DWORD PTR [rax]
  40c768:	test   r11d,r11d
  40c76b:	je     0x40c227
  40c771:	lea    r8,[rip+0x23680]        # 0x42fdf8
  40c778:	lea    rcx,[rip+0x234ed]        # 0x42fc6c
  40c77f:	mov    edx,0x2822
  40c784:	xor    edi,edi
  40c786:	call   0x423fa0
  40c78b:	or     eax,0xffffffff
  40c78e:	jmp    0x40bf74
  40c793:	lea    r8,[rip+0x23578]        # 0x42fd12
  40c79a:	lea    rcx,[rip+0x234cb]        # 0x42fc6c
  40c7a1:	mov    edx,0x1d32
  40c7a6:	call   0x423fa0
  40c7ab:	mov    r9,QWORD PTR [r14]
  40c7ae:	cmp    QWORD PTR [r9],0x0
  40c7b2:	jne    0x40c7e3
  40c7b4:	mov    r14d,DWORD PTR [rbx]
  40c7b7:	test   r14d,r14d
  40c7ba:	je     0x40c51a
  40c7c0:	lea    r8,[rip+0x2357e]        # 0x42fd45
  40c7c7:	lea    rcx,[rip+0x2349e]        # 0x42fc6c
  40c7ce:	mov    edx,0x1d72
  40c7d3:	mov    r12d,0xffffb1d7
  40c7d9:	call   0x423fa0
  40c7de:	jmp    0x40bd0e
  40c7e3:	mov    r15d,DWORD PTR [rbx]
  40c7e6:	test   r15d,r15d
  40c7e9:	je     0x40c51a
  40c7ef:	lea    r8,[rip+0x23539]        # 0x42fd2f
  40c7f6:	lea    rcx,[rip+0x2346f]        # 0x42fc6c
  40c7fd:	add    r9,0x8
  40c801:	mov    edx,0x1d52
  40c806:	call   0x423fa0
  40c80b:	jmp    0x40c51a
  40c810:	cmp    BYTE PTR [r14+0x90],0x1
  40c818:	jbe    0x40bf64
  40c81e:	jmp    0x40c457
  40c823:	mov    rcx,rbx
  40c826:	call   0x4258c0
  40c82b:	test   rax,rax
  40c82e:	mov    QWORD PTR [rbx+0xc0],rax
  40c835:	je     0x40c227
  40c83b:	movzx  eax,WORD PTR [rbx]
  40c83e:	cmp    ax,0x402
  40c842:	je     0x40cbb7
  40c848:	cmp    ax,0x406
  40c84c:	je     0x40cb9e
  40c852:	cmp    ax,0x500
  40c856:	je     0x40c8d0
  40c858:	mov    rax,QWORD PTR [rip+0x2c351]        # 0x438bb0
  40c85f:	mov    r10d,DWORD PTR [rax]
  40c862:	test   r10d,r10d
  40c865:	je     0x40c227
  40c86b:	lea    r8,[rip+0x235bb]        # 0x42fe2d
  40c872:	lea    rcx,[rip+0x233f3]        # 0x42fc6c
  40c879:	mov    edx,0x2941
  40c87e:	xor    edi,edi
  40c880:	call   0x423fa0
  40c885:	or     eax,0xffffffff
  40c888:	jmp    0x40bf74
  40c88d:	nop    DWORD PTR [rax]
  40c890:	mov    rax,QWORD PTR [rip+0x2c319]        # 0x438bb0
  40c897:	mov    eax,DWORD PTR [rax]
  40c899:	test   eax,eax
  40c89b:	je     0x40c684
  40c8a1:	lea    r9,[rip+0x23458]        # 0x42fd00
  40c8a8:	lea    r8,[rip+0x2359d]        # 0x42fe4c
  40c8af:	lea    rcx,[rip+0x233b6]        # 0x42fc6c
  40c8b6:	mov    edx,0x2122
  40c8bb:	call   0x423fa0
  40c8c0:	jmp    0x40c684
  40c8c5:	mov    r12d,0xffffffff
  40c8cb:	jmp    0x40bd0e
  40c8d0:	mov    eax,DWORD PTR [rip+0x23552]        # 0x42fe28
  40c8d6:	mov    DWORD PTR [rsp+0x40],eax
  40c8da:	mov    DWORD PTR [rsp+0x50],eax
  40c8de:	mov    rax,QWORD PTR [r14+0x30]
  40c8e2:	mov    r8d,0x1e
  40c8e8:	mov    rcx,rbx
  40c8eb:	lea    r13,[rsp+0x60]
  40c8f0:	lea    rdx,[rax+0x8]
  40c8f4:	call   0x40bb40
  40c8f9:	mov    rax,QWORD PTR [r14+0x70]
  40c8fd:	mov    r8d,0x1e
  40c903:	mov    rcx,rbx
  40c906:	lea    rdx,[rax+0x8]
  40c90a:	call   0x40bb40
  40c90f:	mov    rax,QWORD PTR [r14+0x78]
  40c913:	mov    r8d,0x1e
  40c919:	mov    rcx,rbx
  40c91c:	lea    rdx,[rax+0x8]
  40c920:	call   0x40bb40
  40c925:	call   QWORD PTR [rip+0x32fc9]        # 0x43f8f4
  40c92b:	lea    rdx,[rip+0x23516]        # 0x42fe48
  40c932:	mov    r8d,eax
  40c935:	mov    rcx,r13
  40c938:	call   0x4294c8
  40c93d:	mov    r8d,0x1e
  40c943:	mov    rdx,r13
  40c946:	mov    rcx,rbx
  40c949:	call   0x40bb40
  40c94e:	lea    rdx,[rip+0x2351c]        # 0x42fe71
  40c955:	mov    r8d,0x6
  40c95b:	mov    rcx,rbx
  40c95e:	call   0x40d260
  40c963:	movzx  edx,BYTE PTR [r14+0xf4]
  40c96b:	mov    rcx,rbx
  40c96e:	and    edx,0x1
  40c971:	call   0x40d520
  40c976:	xor    edx,edx
  40c978:	mov    r8d,0x2
  40c97e:	mov    rcx,rbx
  40c981:	call   0x40d260
  40c986:	cmp    WORD PTR [rbx],0x402
  40c98b:	je     0x40cc0c
  40c991:	xor    edx,edx
  40c993:	mov    rcx,rbx
  40c996:	call   0x40d490
  40c99b:	xor    edx,edx
  40c99d:	mov    r8d,0x3
  40c9a3:	mov    rcx,rbx
  40c9a6:	call   0x40d260
  40c9ab:	mov    rax,QWORD PTR [r14+0x68]
  40c9af:	mov    r8d,0x1e
  40c9b5:	mov    rcx,rbx
  40c9b8:	lea    rdx,[rax+0x8]
  40c9bc:	call   0x40bb40
  40c9c1:	mov    r8d,0x1e
  40c9c7:	mov    rdx,rdi
  40c9ca:	mov    rcx,rbx
  40c9cd:	call   0x40bb40
  40c9d2:	cmp    WORD PTR [rbx],0x402
  40c9d7:	je     0x40cca8
  40c9dd:	cmp    BYTE PTR [r14+0x90],0x0
  40c9e5:	jne    0x40cbf7
  40c9eb:	mov    rax,QWORD PTR [r14+0x78]
  40c9ef:	mov    rax,QWORD PTR [rax]
  40c9f2:	cmp    eax,0xfd
  40c9f7:	jg     0x40cbe3
  40c9fd:	mov    edi,0xfd
  40ca02:	movzx  r12d,al
  40ca06:	movsxd rbp,eax
  40ca09:	sub    edi,eax
  40ca0b:	add    eax,0x2
  40ca0e:	movsxd rdi,edi
  40ca11:	movzx  esi,al
  40ca14:	xor    edx,edx
  40ca16:	mov    rcx,rbx
  40ca19:	call   0x40d520
  40ca1e:	mov    edx,r12d
  40ca21:	mov    rcx,rbx
  40ca24:	call   0x40d520
  40ca29:	mov    rax,QWORD PTR [r14+0x78]
  40ca2d:	mov    r8,rbp
  40ca30:	mov    rcx,rbx
  40ca33:	lea    rdx,[rax+0x8]
  40ca37:	call   0x40d260
  40ca3c:	xor    edx,edx
  40ca3e:	mov    rcx,rbx
  40ca41:	mov    r8,rdi
  40ca44:	call   0x40d260
  40ca49:	mov    edx,esi
  40ca4b:	mov    rcx,rbx
  40ca4e:	call   0x40d520
  40ca53:	lea    rdx,[rsp+0x40]
  40ca58:	mov    r8d,0x4
  40ca5e:	mov    rcx,rbx
  40ca61:	call   0x40d260
  40ca66:	mov    rax,QWORD PTR [r14+0x88]
  40ca6d:	mov    r8d,0xa
  40ca73:	mov    rcx,rbx
  40ca76:	lea    rdx,[rax+0x8]
  40ca7a:	call   0x40bb40
  40ca7f:	cmp    WORD PTR [rbx],0x402
  40ca84:	je     0x40cbd4
  40ca8a:	lea    rsi,[rsp+0x50]
  40ca8f:	mov    r8d,0x4
  40ca95:	mov    rcx,rbx
  40ca98:	mov    rdx,rsi
  40ca9b:	call   0x40d260
  40caa0:	lea    rdx,[rip+0x233c7]        # 0x42fe6e
  40caa7:	mov    r8d,0x3
  40caad:	mov    rcx,rbx
  40cab0:	call   0x40d260
  40cab5:	mov    rax,QWORD PTR [r14+0x18]
  40cab9:	mov    r8d,0x1e
  40cabf:	mov    rcx,rbx
  40cac2:	lea    rdx,[rax+0x8]
  40cac6:	call   0x40bb40
  40cacb:	movzx  edx,BYTE PTR [r14+0xf4]
  40cad3:	mov    rcx,rbx
  40cad6:	shr    dl,1
  40cad8:	and    edx,0x1
  40cadb:	call   0x40d520
  40cae0:	mov    r8d,0x2
  40cae6:	xor    edx,edx
  40cae8:	mov    rcx,rbx
  40caeb:	call   0x40d260
  40caf0:	cmp    BYTE PTR [r14+0x90],0x1
  40caf8:	mov    rcx,rbx
  40cafb:	sbb    edx,edx
  40cafd:	not    edx
  40caff:	and    edx,0xa0
  40cb05:	call   0x40d520
  40cb0a:	xor    edx,edx
  40cb0c:	mov    r8d,0xa
  40cb12:	mov    rcx,rbx
  40cb15:	call   0x40d260
  40cb1a:	lea    rdx,[rip+0x2332a]        # 0x42fe4b
  40cb21:	mov    r8d,0x1e
  40cb27:	mov    rcx,rbx
  40cb2a:	call   0x40bb40
  40cb2f:	mov    edx,0x1
  40cb34:	mov    rcx,rbx
  40cb37:	call   0x40d520
  40cb3c:	mov    r8d,DWORD PTR [r14+0x10]
  40cb40:	lea    eax,[r8-0x200]
  40cb47:	cmp    eax,0xfdff
  40cb4c:	ja     0x40cbca
  40cb4e:	lea    rdx,[rip+0x232f3]        # 0x42fe48
  40cb55:	mov    rcx,r13
  40cb58:	call   0x4294c8
  40cb5d:	mov    r8d,0x6
  40cb63:	mov    rdx,r13
  40cb66:	mov    rcx,rbx
  40cb69:	call   0x40bb40
  40cb6e:	movzx  eax,WORD PTR [rbx]
  40cb71:	cmp    ax,0x402
  40cb75:	je     0x40ccd8
  40cb7b:	cmp    ax,0x406
  40cb7f:	je     0x40ccc3
  40cb85:	cmp    ax,0x500
  40cb89:	je     0x40cc67
  40cb8f:	mov    rcx,rbx
  40cb92:	xor    edi,edi
  40cb94:	call   0x40d5c0
  40cb99:	jmp    0x40bf74
  40cb9e:	mov    eax,DWORD PTR [rip+0x2327f]        # 0x42fe23
  40cba4:	mov    DWORD PTR [rsp+0x40],eax
  40cba8:	mov    eax,DWORD PTR [rip+0x23270]        # 0x42fe1e
  40cbae:	mov    DWORD PTR [rsp+0x50],eax
  40cbb2:	jmp    0x40c8de
  40cbb7:	mov    eax,DWORD PTR [rip+0x23261]        # 0x42fe1e
  40cbbd:	mov    DWORD PTR [rsp+0x40],eax
  40cbc1:	mov    DWORD PTR [rsp+0x50],eax
  40cbc5:	jmp    0x40c8de
  40cbca:	mov    DWORD PTR [rsp+0x60],0x323135
  40cbd2:	jmp    0x40cb5d
  40cbd4:	xor    edx,edx
  40cbd6:	mov    rcx,rbx
  40cbd9:	call   0x40d490
  40cbde:	jmp    0x40caa0
  40cbe3:	mov    esi,0x2
  40cbe8:	mov    edi,0xfd
  40cbed:	xor    ebp,ebp
  40cbef:	xor    r12d,r12d
  40cbf2:	jmp    0x40ca14
  40cbf7:	mov    r8d,0x100
  40cbfd:	xor    edx,edx
  40cbff:	mov    rcx,rbx
  40cc02:	call   0x40d260
  40cc07:	jmp    0x40ca53
  40cc0c:	mov    edx,0x200
  40cc11:	mov    rcx,rbx
  40cc14:	call   0x40d490
  40cc19:	jmp    0x40c99b
  40cc1e:	mov    rax,QWORD PTR [rip+0x2bf8b]        # 0x438bb0
  40cc25:	mov    DWORD PTR [rbx+0xe4],edi
  40cc2b:	mov    ecx,DWORD PTR [rax]
  40cc2d:	test   ecx,ecx
  40cc2f:	je     0x40c810
  40cc35:	mov    esi,0x2
  40cc3a:	lea    r8,[rip+0x2312f]        # 0x42fd70
  40cc41:	lea    rcx,[rip+0x23024]        # 0x42fc6c
  40cc48:	movsx  r9d,sil
  40cc4c:	mov    edx,0x4a15
  40cc51:	call   0x423fa0
  40cc56:	jmp    0x40c6f9
  40cc5b:	lea    r9,[rip+0x230a7]        # 0x42fd09
  40cc62:	jmp    0x40c8a8
  40cc67:	mov    r8d,0x4
  40cc6d:	xor    edx,edx
  40cc6f:	mov    rcx,rbx
  40cc72:	call   0x40d260
  40cc77:	mov    rcx,rbx
  40cc7a:	mov    edx,0xe2
  40cc7f:	call   0x40d520
  40cc84:	mov    rcx,rbx
  40cc87:	mov    edx,0x20
  40cc8c:	call   0x40d4d0
  40cc91:	lea    rdx,[rbx+0x7d]
  40cc95:	mov    r8d,0x20
  40cc9b:	mov    rcx,rbx
  40cc9e:	call   0x40d260
  40cca3:	jmp    0x40cb8f
  40cca8:	mov    rax,QWORD PTR [r14+0x78]
  40ccac:	mov    r8d,0xff
  40ccb2:	mov    rcx,rbx
  40ccb5:	lea    rdx,[rax+0x8]
  40ccb9:	call   0x40bb40
  40ccbe:	jmp    0x40ca53
  40ccc3:	mov    r8d,0x4
  40ccc9:	xor    edx,edx
  40cccb:	mov    rcx,rbx
  40ccce:	call   0x40d260
  40ccd3:	jmp    0x40cb8f
  40ccd8:	mov    r8d,0x8
  40ccde:	xor    edx,edx
  40cce0:	mov    rcx,rbx
  40cce3:	call   0x40d260
  40cce8:	jmp    0x40cb8f
  40cced:	nop    DWORD PTR [rax]
  40ccf0:	shl    edx,0x8
  40ccf3:	movzx  r8d,r8b
  40ccf7:	add    edx,r8d
  40ccfa:	mov    WORD PTR [rcx+0xc],dx
  40ccfe:	ret    
  40ccff:	nop
  40cd00:	mov    DWORD PTR [rcx+0x10],edx
  40cd03:	ret    
  40cd04:	xchg   ax,ax
  40cd06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cd10:	mov    DWORD PTR [rcx+0x8],edx
  40cd13:	ret    
  40cd14:	xchg   ax,ax
  40cd16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cd20:	push   rsi
  40cd21:	push   rbx
  40cd22:	sub    rsp,0x28
  40cd26:	mov    eax,0x1
  40cd2b:	test   rdx,rdx
  40cd2e:	je     0x40cd50
  40cd30:	lea    rbx,[rcx+0x78]
  40cd34:	mov    rsi,rdx
  40cd37:	mov    rcx,rbx
  40cd3a:	call   0x41f7c0
  40cd3f:	mov    rdx,rsi
  40cd42:	mov    rcx,rbx
  40cd45:	call   0x41f8a0
  40cd4a:	test   rax,rax
  40cd4d:	setne  al
  40cd50:	add    rsp,0x28
  40cd54:	pop    rbx
  40cd55:	pop    rsi
  40cd56:	ret    
  40cd57:	nop    WORD PTR [rax+rax*1+0x0]
  40cd60:	test   dl,dl
  40cd62:	movzx  edx,BYTE PTR [rcx+0xf4]
  40cd69:	sete   al
  40cd6c:	and    edx,0xfffffffe
  40cd6f:	or     eax,edx
  40cd71:	mov    BYTE PTR [rcx+0xf4],al
  40cd77:	ret    
  40cd78:	nop    DWORD PTR [rax+rax*1+0x0]
  40cd80:	sub    rsp,0x28
  40cd84:	add    rcx,0x70
  40cd88:	call   0x41f8a0
  40cd8d:	test   rax,rax
  40cd90:	setne  al
  40cd93:	add    rsp,0x28
  40cd97:	ret    
  40cd98:	nop    DWORD PTR [rax+rax*1+0x0]
  40cda0:	sub    rsp,0x28
  40cda4:	add    rcx,0x30
  40cda8:	call   0x41f8a0
  40cdad:	test   rax,rax
  40cdb0:	setne  al
  40cdb3:	add    rsp,0x28
  40cdb7:	ret    
  40cdb8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cdc0:	sub    rsp,0x28
  40cdc4:	add    rcx,0x68
  40cdc8:	call   0x41f8a0
  40cdcd:	test   rax,rax
  40cdd0:	setne  al
  40cdd3:	add    rsp,0x28
  40cdd7:	ret    
  40cdd8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cde0:	sub    rsp,0x28
  40cde4:	mov    eax,0x1
  40cde9:	test   rdx,rdx
  40cdec:	je     0x40cdf9
  40cdee:	call   0x41f8a0
  40cdf3:	test   rax,rax
  40cdf6:	setne  al
  40cdf9:	add    rsp,0x28
  40cdfd:	ret    
  40cdfe:	xchg   ax,ax
  40ce00:	sub    rsp,0x28
  40ce04:	add    rcx,0x88
  40ce0b:	call   0x41f8a0
  40ce10:	test   rax,rax
  40ce13:	setne  al
  40ce16:	add    rsp,0x28
  40ce1a:	ret    
  40ce1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce20:	sub    rsp,0x28
  40ce24:	add    rcx,0xb8
  40ce2b:	call   0x41f8a0
  40ce30:	test   rax,rax
  40ce33:	setne  al
  40ce36:	add    rsp,0x28
  40ce3a:	ret    
  40ce3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce40:	sub    rsp,0x28
  40ce44:	add    rcx,0x18
  40ce48:	call   0x41f8a0
  40ce4d:	test   rax,rax
  40ce50:	setne  al
  40ce53:	add    rsp,0x28
  40ce57:	ret    
  40ce58:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce60:	sub    rsp,0x38
  40ce64:	lea    r8,[rsp+0x2c]
  40ce69:	mov    DWORD PTR [rsp+0x2c],0x0
  40ce71:	call   0x40bb90
  40ce76:	add    rsp,0x38
  40ce7a:	ret    
  40ce7b:	nop
  40ce7c:	nop
  40ce7d:	nop
  40ce7e:	nop
  40ce7f:	nop
  40ce80:	push   rbx
  40ce81:	sub    rsp,0x20
  40ce85:	mov    rbx,rcx
  40ce88:	jmp    0x40ce9c
  40ce8a:	nop    WORD PTR [rax+rax*1+0x0]
  40ce90:	mov    rcx,rbx
  40ce93:	call   0x4245f0
  40ce98:	test   eax,eax
  40ce9a:	js     0x40cec4
  40ce9c:	mov    eax,DWORD PTR [rbx+0xe4]
  40cea2:	cmp    eax,DWORD PTR [rbx+0xec]
  40cea8:	jae    0x40ce90
  40ceaa:	mov    rdx,QWORD PTR [rbx+0xd0]
  40ceb1:	lea    ecx,[rax+0x1]
  40ceb4:	mov    DWORD PTR [rbx+0xe4],ecx
  40ceba:	movzx  eax,BYTE PTR [rdx+rax*1]
  40cebe:	add    rsp,0x20
  40cec2:	pop    rbx
  40cec3:	ret    
  40cec4:	xor    eax,eax
  40cec6:	add    rsp,0x20
  40ceca:	pop    rbx
  40cecb:	ret    
  40cecc:	nop    DWORD PTR [rax+0x0]
  40ced0:	sub    DWORD PTR [rcx+0xe4],0x1
  40ced7:	ret    
  40ced8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cee0:	push   rbx
  40cee1:	sub    rsp,0x20
  40cee5:	mov    rbx,rcx
  40cee8:	call   0x40ce80
  40ceed:	mov    edx,DWORD PTR [rbx+0xe4]
  40cef3:	test   edx,edx
  40cef5:	je     0x40cf00
  40cef7:	sub    edx,0x1
  40cefa:	mov    DWORD PTR [rbx+0xe4],edx
  40cf00:	add    rsp,0x20
  40cf04:	pop    rbx
  40cf05:	ret    
  40cf06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf10:	push   rbp
  40cf11:	push   rdi
  40cf12:	push   rsi
  40cf13:	push   rbx
  40cf14:	sub    rsp,0x28
  40cf18:	mov    rbp,rcx
  40cf1b:	mov    rsi,rdx
  40cf1e:	mov    rdi,r8
  40cf21:	mov    r9d,DWORD PTR [rbp+0xe4]
  40cf28:	mov    ebx,DWORD PTR [rbp+0xec]
  40cf2e:	sub    ebx,r9d
  40cf31:	cmp    rdi,rbx
  40cf34:	jbe    0x40cf70
  40cf36:	test   rsi,rsi
  40cf39:	je     0x40cf53
  40cf3b:	mov    rdx,r9
  40cf3e:	add    rdx,QWORD PTR [rbp+0xd0]
  40cf45:	mov    rcx,rsi
  40cf48:	mov    r8,rbx
  40cf4b:	add    rsi,rbx
  40cf4e:	call   0x429528
  40cf53:	mov    rcx,rbp
  40cf56:	sub    rdi,rbx
  40cf59:	call   0x4245f0
  40cf5e:	test   eax,eax
  40cf60:	jns    0x40cf21
  40cf62:	xor    eax,eax
  40cf64:	add    rsp,0x28
  40cf68:	pop    rbx
  40cf69:	pop    rsi
  40cf6a:	pop    rdi
  40cf6b:	pop    rbp
  40cf6c:	ret    
  40cf6d:	nop    DWORD PTR [rax]
  40cf70:	test   rdi,rdi
  40cf73:	je     0x40cfa0
  40cf75:	test   rsi,rsi
  40cf78:	je     0x40cf96
  40cf7a:	mov    rdx,r9
  40cf7d:	add    rdx,QWORD PTR [rbp+0xd0]
  40cf84:	mov    r8,rdi
  40cf87:	mov    rcx,rsi
  40cf8a:	call   0x429528
  40cf8f:	mov    r9d,DWORD PTR [rbp+0xe4]
  40cf96:	add    r9d,edi
  40cf99:	mov    DWORD PTR [rbp+0xe4],r9d
  40cfa0:	mov    rax,rsi
  40cfa3:	add    rsp,0x28
  40cfa7:	pop    rbx
  40cfa8:	pop    rsi
  40cfa9:	pop    rdi
  40cfaa:	pop    rbp
  40cfab:	ret    
  40cfac:	nop    DWORD PTR [rax+0x0]
  40cfb0:	sub    rsp,0x38
  40cfb4:	mov    r8d,0x2
  40cfba:	lea    rdx,[rsp+0x20]
  40cfbf:	call   0x40cf10
  40cfc4:	movzx  eax,WORD PTR [rsp+0x20]
  40cfc9:	add    rsp,0x38
  40cfcd:	ret    
  40cfce:	xchg   ax,ax
  40cfd0:	sub    rsp,0x38
  40cfd4:	mov    r8d,0x4
  40cfda:	lea    rdx,[rsp+0x2c]
  40cfdf:	call   0x40cf10
  40cfe4:	mov    eax,DWORD PTR [rsp+0x2c]
  40cfe8:	add    rsp,0x38
  40cfec:	ret    
  40cfed:	nop    DWORD PTR [rax]
  40cff0:	sub    rsp,0x38
  40cff4:	mov    r8d,0x8
  40cffa:	lea    rdx,[rsp+0x20]
  40cfff:	call   0x40cf10
  40d004:	mov    eax,DWORD PTR [rsp+0x24]
  40d008:	mov    edx,DWORD PTR [rsp+0x20]
  40d00c:	shl    rax,0x20
  40d010:	or     rax,rdx
  40d013:	add    rsp,0x38
  40d017:	ret    
  40d018:	nop    DWORD PTR [rax+rax*1+0x0]
  40d020:	push   r13
  40d022:	push   r12
  40d024:	push   rbp
  40d025:	push   rdi
  40d026:	push   rsi
  40d027:	push   rbx
  40d028:	sub    rsp,0x78
  40d02c:	cmp    WORD PTR [rcx],0x6ff
  40d031:	mov    rsi,rcx
  40d034:	mov    rbx,rdx
  40d037:	mov    rdi,r8
  40d03a:	mov    r12,r9
  40d03d:	jbe    0x40d0a3
  40d03f:	xor    eax,eax
  40d041:	test   rdi,rdi
  40d044:	lea    r8,[rdx+rdx*1]
  40d048:	je     0x40d0b0
  40d04a:	mov    rdx,QWORD PTR [rsi+0x68]
  40d04e:	lea    rbx,[rsp+0x30]
  40d053:	lea    rbp,[rsp+0x50]
  40d058:	mov    rcx,rbx
  40d05b:	mov    r13,QWORD PTR [rdx+rax*8]
  40d05f:	mov    rdx,rsi
  40d062:	call   0x424fb0
  40d067:	mov    r8,r12
  40d06a:	mov    rdx,rdi
  40d06d:	mov    rcx,rbp
  40d070:	call   0x425070
  40d075:	mov    QWORD PTR [rsp+0x20],rbp
  40d07a:	mov    r9,rbx
  40d07d:	mov    r8d,0x1
  40d083:	mov    rdx,r13
  40d086:	mov    rcx,rsi
  40d089:	call   0x424c10
  40d08e:	mov    rax,QWORD PTR [rsp+0x58]
  40d093:	sub    rax,rdi
  40d096:	add    rsp,0x78
  40d09a:	pop    rbx
  40d09b:	pop    rsi
  40d09c:	pop    rdi
  40d09d:	pop    rbp
  40d09e:	pop    r12
  40d0a0:	pop    r13
  40d0a2:	ret    
  40d0a3:	test   rdi,rdi
  40d0a6:	mov    r8,rdx
  40d0a9:	mov    eax,0x1
  40d0ae:	jne    0x40d04a
  40d0b0:	xor    edx,edx
  40d0b2:	mov    rcx,rsi
  40d0b5:	call   0x40cf10
  40d0ba:	mov    rax,rbx
  40d0bd:	add    rsp,0x78
  40d0c1:	pop    rbx
  40d0c2:	pop    rsi
  40d0c3:	pop    rdi
  40d0c4:	pop    rbp
  40d0c5:	pop    r12
  40d0c7:	pop    r13
  40d0c9:	ret    
  40d0ca:	nop    WORD PTR [rax+rax*1+0x0]
  40d0d0:	push   r14
  40d0d2:	push   r13
  40d0d4:	push   r12
  40d0d6:	push   rbp
  40d0d7:	push   rdi
  40d0d8:	push   rsi
  40d0d9:	push   rbx
  40d0da:	add    rsp,0xffffffffffffff80
  40d0de:	cmp    QWORD PTR [r9+0x28],0x0
  40d0e3:	mov    rdi,rcx
  40d0e6:	mov    rbp,rdx
  40d0e9:	mov    rsi,r8
  40d0ec:	mov    rbx,r9
  40d0ef:	je     0x40d1c2
  40d0f5:	test   rsi,rsi
  40d0f8:	jne    0x40d112
  40d0fa:	mov    DWORD PTR [rbx+0x64],0x0
  40d101:	xor    eax,eax
  40d103:	sub    rsp,0xffffffffffffff80
  40d107:	pop    rbx
  40d108:	pop    rsi
  40d109:	pop    rdi
  40d10a:	pop    rbp
  40d10b:	pop    r12
  40d10d:	pop    r13
  40d10f:	pop    r14
  40d111:	ret    
  40d112:	movsxd r14,DWORD PTR [rbx+0x10]
  40d116:	lea    r12,[rsp+0x40]
  40d11b:	mov    r8,rsi
  40d11e:	mov    r13,QWORD PTR [rbx+0x28]
  40d122:	lea    rsi,[rsp+0x60]
  40d127:	mov    rdx,rdi
  40d12a:	mov    rcx,r12
  40d12d:	call   0x424fb0
  40d132:	mov    rcx,rsi
  40d135:	mov    r8,r14
  40d138:	mov    rdx,rbp
  40d13b:	call   0x425070
  40d140:	mov    QWORD PTR [rsp+0x20],rsi
  40d145:	mov    r9,r12
  40d148:	mov    r8d,0x1
  40d14e:	mov    rdx,r13
  40d151:	mov    rcx,rdi
  40d154:	call   0x424c10
  40d159:	mov    rax,QWORD PTR [rsp+0x68]
  40d15e:	mov    rsi,QWORD PTR [rsp+0x48]
  40d163:	sub    rax,rbp
  40d166:	mov    DWORD PTR [rbx+0x64],eax
  40d169:	xor    eax,eax
  40d16b:	test   rsi,rsi
  40d16e:	je     0x40d103
  40d170:	xor    edx,edx
  40d172:	mov    r8,rsi
  40d175:	mov    rcx,rdi
  40d178:	call   0x40cf10
  40d17d:	mov    rdx,QWORD PTR [rip+0x2ba2c]        # 0x438bb0
  40d184:	mov    eax,0xffffffff
  40d189:	mov    edx,DWORD PTR [rdx]
  40d18b:	test   edx,edx
  40d18d:	je     0x40d103
  40d193:	mov    edx,DWORD PTR [rbx+0x64]
  40d196:	lea    r8,[rip+0x22d23]        # 0x42fec0
  40d19d:	lea    rcx,[rip+0x22cfc]        # 0x42fea0
  40d1a4:	mov    r9d,esi
  40d1a7:	mov    DWORD PTR [rsp+0x3c],eax
  40d1ab:	mov    DWORD PTR [rsp+0x20],edx
  40d1af:	mov    edx,0xea4
  40d1b4:	call   0x423fa0
  40d1b9:	mov    eax,DWORD PTR [rsp+0x3c]
  40d1bd:	jmp    0x40d103
  40d1c2:	lea    rdx,[rip+0x22cd7]        # 0x42fea0
  40d1c9:	lea    rcx,[rip+0x22cd7]        # 0x42fea7
  40d1d0:	mov    r8d,0xd9
  40d1d6:	call   0x4291e0
  40d1db:	jmp    0x40d0f5
  40d1e0:	push   r12
  40d1e2:	push   rbp
  40d1e3:	push   rdi
  40d1e4:	push   rsi
  40d1e5:	push   rbx
  40d1e6:	sub    rsp,0x20
  40d1ea:	lea    rbp,[r8*4+0x0]
  40d1f2:	mov    rbx,rdx
  40d1f5:	mov    r12,rcx
  40d1f8:	mov    rcx,rbx
  40d1fb:	mov    rdi,r8
  40d1fe:	mov    rdx,rbp
  40d201:	call   0x41f940
  40d206:	test   rax,rax
  40d209:	mov    rsi,rax
  40d20c:	je     0x40d240
  40d20e:	mov    rax,QWORD PTR [rbx]
  40d211:	mov    r9,rbp
  40d214:	mov    rdx,rdi
  40d217:	mov    rcx,r12
  40d21a:	mov    rsi,rbx
  40d21d:	lea    r8,[rax+0x8]
  40d221:	call   0x40d020
  40d226:	mov    rcx,rbx
  40d229:	mov    rdx,rax
  40d22c:	call   0x41f910
  40d231:	mov    rax,rsi
  40d234:	add    rsp,0x20
  40d238:	pop    rbx
  40d239:	pop    rsi
  40d23a:	pop    rdi
  40d23b:	pop    rbp
  40d23c:	pop    r12
  40d23e:	ret    
  40d23f:	nop
  40d240:	mov    r8,rdi
  40d243:	xor    edx,edx
  40d245:	mov    rcx,r12
  40d248:	call   0x40cf10
  40d24d:	mov    rax,rsi
  40d250:	add    rsp,0x20
  40d254:	pop    rbx
  40d255:	pop    rsi
  40d256:	pop    rdi
  40d257:	pop    rbp
  40d258:	pop    r12
  40d25a:	ret    
  40d25b:	nop
  40d25c:	nop
  40d25d:	nop
  40d25e:	nop
  40d25f:	nop
  40d260:	push   rbp
  40d261:	push   rdi
  40d262:	push   rsi
  40d263:	push   rbx
  40d264:	sub    rsp,0x28
  40d268:	test   r8,r8
  40d26b:	mov    rsi,rcx
  40d26e:	mov    rbp,rdx
  40d271:	mov    rdi,r8
  40d274:	je     0x40d2c1
  40d276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d280:	mov    eax,DWORD PTR [rsi+0xe8]
  40d286:	mov    ebx,DWORD PTR [rsi+0xe0]
  40d28c:	cmp    ebx,eax
  40d28e:	jbe    0x40d2d0
  40d290:	sub    ebx,eax
  40d292:	cmp    rdi,rbx
  40d295:	cmovbe rbx,rdi
  40d299:	add    rax,QWORD PTR [rsi+0xd8]
  40d2a0:	test   rbp,rbp
  40d2a3:	mov    r8,rbx
  40d2a6:	mov    rcx,rax
  40d2a9:	je     0x40d2e0
  40d2ab:	mov    rdx,rbp
  40d2ae:	add    rbp,rbx
  40d2b1:	call   0x429528
  40d2b6:	add    DWORD PTR [rsi+0xe8],ebx
  40d2bc:	sub    rdi,rbx
  40d2bf:	jne    0x40d280
  40d2c1:	xor    eax,eax
  40d2c3:	add    rsp,0x28
  40d2c7:	pop    rbx
  40d2c8:	pop    rsi
  40d2c9:	pop    rdi
  40d2ca:	pop    rbp
  40d2cb:	ret    
  40d2cc:	nop    DWORD PTR [rax+0x0]
  40d2d0:	xor    edx,edx
  40d2d2:	mov    rcx,rsi
  40d2d5:	call   0x424770
  40d2da:	jmp    0x40d280
  40d2dc:	nop    DWORD PTR [rax+0x0]
  40d2e0:	xor    edx,edx
  40d2e2:	call   0x429518
  40d2e7:	jmp    0x40d2b6
  40d2e9:	nop    DWORD PTR [rax+0x0]
  40d2f0:	push   rbp
  40d2f1:	push   rdi
  40d2f2:	push   rsi
  40d2f3:	push   rbx
  40d2f4:	sub    rsp,0x88
  40d2fb:	test   r8d,r8d
  40d2fe:	mov    rsi,rcx
  40d301:	mov    rdi,rdx
  40d304:	mov    ebx,r8d
  40d307:	js     0x40d380
  40d309:	cmp    WORD PTR [rsi],0x6ff
  40d30e:	jbe    0x40d360
  40d310:	lea    rbp,[rsp+0x30]
  40d315:	movsxd r8,ebx
  40d318:	lea    rbx,[rsp+0x50]
  40d31d:	mov    rdx,rdi
  40d320:	mov    rcx,rbp
  40d323:	call   0x425050
  40d328:	mov    rdx,rsi
  40d32b:	mov    rcx,rbx
  40d32e:	call   0x424fd0
  40d333:	mov    rax,QWORD PTR [rsi+0x68]
  40d337:	mov    QWORD PTR [rsp+0x20],rbx
  40d33c:	mov    r9,rbp
  40d33f:	xor    r8d,r8d
  40d342:	mov    rcx,rsi
  40d345:	mov    rdx,QWORD PTR [rax]
  40d348:	call   0x424c10
  40d34d:	mov    eax,DWORD PTR [rsp+0x70]
  40d351:	add    rsp,0x88
  40d358:	pop    rbx
  40d359:	pop    rsi
  40d35a:	pop    rdi
  40d35b:	pop    rbp
  40d35c:	ret    
  40d35d:	nop    DWORD PTR [rax]
  40d360:	movsxd r8,ebx
  40d363:	mov    rdx,rdi
  40d366:	mov    rcx,rsi
  40d369:	call   0x40d260
  40d36e:	mov    eax,ebx
  40d370:	add    rsp,0x88
  40d377:	pop    rbx
  40d378:	pop    rsi
  40d379:	pop    rdi
  40d37a:	pop    rbp
  40d37b:	ret    
  40d37c:	nop    DWORD PTR [rax+0x0]
  40d380:	mov    rax,QWORD PTR [rcx+0x68]
  40d384:	mov    rax,QWORD PTR [rax]
  40d387:	movzx  eax,BYTE PTR [rax+0x20]
  40d38b:	cmp    al,0x1
  40d38d:	je     0x40d3c0
  40d38f:	cmp    al,0x2
  40d391:	je     0x40d3d4
  40d393:	cmp    al,0x4
  40d395:	je     0x40d3f5
  40d397:	cmp    al,0x2
  40d399:	ja     0x40d41d
  40d39f:	lea    rdx,[rip+0x22b6a]        # 0x42ff10
  40d3a6:	lea    rcx,[rip+0x22b8a]        # 0x42ff37
  40d3ad:	mov    r8d,0x7c
  40d3b3:	call   0x4291e0
  40d3b8:	jmp    0x40d309
  40d3bd:	nop    DWORD PTR [rax]
  40d3c0:	mov    rcx,rdx
  40d3c3:	call   0x429490
  40d3c8:	mov    ebx,eax
  40d3ca:	test   ebx,ebx
  40d3cc:	jns    0x40d309
  40d3d2:	jmp    0x40d39f
  40d3d4:	mov    rax,rdx
  40d3d7:	jmp    0x40d3e4
  40d3d9:	nop    DWORD PTR [rax+0x0]
  40d3e0:	add    rax,0x2
  40d3e4:	cmp    BYTE PTR [rax],0x0
  40d3e7:	jne    0x40d3e0
  40d3e9:	cmp    BYTE PTR [rax+0x1],0x0
  40d3ed:	jne    0x40d3e0
  40d3ef:	mov    ebx,eax
  40d3f1:	sub    ebx,edi
  40d3f3:	jmp    0x40d3ca
  40d3f5:	mov    rax,rdx
  40d3f8:	jmp    0x40d404
  40d3fa:	nop    WORD PTR [rax+rax*1+0x0]
  40d400:	add    rax,0x4
  40d404:	cmp    BYTE PTR [rax],0x0
  40d407:	jne    0x40d400
  40d409:	cmp    BYTE PTR [rax+0x1],0x0
  40d40d:	jne    0x40d400
  40d40f:	cmp    BYTE PTR [rax+0x2],0x0
  40d413:	jne    0x40d400
  40d415:	cmp    BYTE PTR [rax+0x3],0x0
  40d419:	jne    0x40d400
  40d41b:	jmp    0x40d3ef
  40d41d:	lea    rdx,[rip+0x22aec]        # 0x42ff10
  40d424:	lea    rcx,[rip+0x22aed]        # 0x42ff18
  40d42b:	mov    r8d,0x78
  40d431:	call   0x4291e0
  40d436:	jmp    0x40d39f
  40d43b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d440:	push   rsi
  40d441:	push   rbx
  40d442:	sub    rsp,0x28
  40d446:	mov    eax,DWORD PTR [rcx+0xe8]
  40d44c:	cmp    eax,DWORD PTR [rcx+0xe0]
  40d452:	mov    rbx,rcx
  40d455:	mov    rsi,rdx
  40d458:	jb     0x40d467
  40d45a:	xor    edx,edx
  40d45c:	call   0x424770
  40d461:	mov    eax,DWORD PTR [rbx+0xe8]
  40d467:	add    rax,QWORD PTR [rbx+0xd8]
  40d46e:	mov    DWORD PTR [rax],esi
  40d470:	sar    rsi,0x20
  40d474:	mov    DWORD PTR [rax+0x4],esi
  40d477:	add    DWORD PTR [rbx+0xe8],0x8
  40d47e:	xor    eax,eax
  40d480:	add    rsp,0x28
  40d484:	pop    rbx
  40d485:	pop    rsi
  40d486:	ret    
  40d487:	nop    WORD PTR [rax+rax*1+0x0]
  40d490:	push   rsi
  40d491:	push   rbx
  40d492:	sub    rsp,0x28
  40d496:	mov    eax,DWORD PTR [rcx+0xe8]
  40d49c:	cmp    eax,DWORD PTR [rcx+0xe0]
  40d4a2:	mov    rbx,rcx
  40d4a5:	mov    esi,edx
  40d4a7:	jb     0x40d4b6
  40d4a9:	xor    edx,edx
  40d4ab:	call   0x424770
  40d4b0:	mov    eax,DWORD PTR [rbx+0xe8]
  40d4b6:	mov    rcx,QWORD PTR [rbx+0xd8]
  40d4bd:	mov    DWORD PTR [rcx+rax*1],esi
  40d4c0:	add    DWORD PTR [rbx+0xe8],0x4
  40d4c7:	xor    eax,eax
  40d4c9:	add    rsp,0x28
  40d4cd:	pop    rbx
  40d4ce:	pop    rsi
  40d4cf:	ret    
  40d4d0:	push   rsi
  40d4d1:	push   rbx
  40d4d2:	sub    rsp,0x28
  40d4d6:	mov    eax,DWORD PTR [rcx+0xe8]
  40d4dc:	cmp    eax,DWORD PTR [rcx+0xe0]
  40d4e2:	mov    rbx,rcx
  40d4e5:	mov    esi,edx
  40d4e7:	jb     0x40d4f6
  40d4e9:	xor    edx,edx
  40d4eb:	call   0x424770
  40d4f0:	mov    eax,DWORD PTR [rbx+0xe8]
  40d4f6:	mov    rcx,QWORD PTR [rbx+0xd8]
  40d4fd:	mov    WORD PTR [rcx+rax*1],si
  40d501:	add    DWORD PTR [rbx+0xe8],0x2
  40d508:	xor    eax,eax
  40d50a:	add    rsp,0x28
  40d50e:	pop    rbx
  40d50f:	pop    rsi
  40d510:	ret    
  40d511:	nop    DWORD PTR [rax+rax*1+0x0]
  40d516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d520:	push   rsi
  40d521:	push   rbx
  40d522:	sub    rsp,0x28
  40d526:	mov    eax,DWORD PTR [rcx+0xe8]
  40d52c:	cmp    eax,DWORD PTR [rcx+0xe0]
  40d532:	mov    rbx,rcx
  40d535:	mov    esi,edx
  40d537:	jb     0x40d546
  40d539:	xor    edx,edx
  40d53b:	call   0x424770
  40d540:	mov    eax,DWORD PTR [rbx+0xe8]
  40d546:	mov    rcx,QWORD PTR [rbx+0xd8]
  40d54d:	lea    edx,[rax+0x1]
  40d550:	mov    DWORD PTR [rbx+0xe8],edx
  40d556:	mov    BYTE PTR [rcx+rax*1],sil
  40d55a:	xor    eax,eax
  40d55c:	add    rsp,0x28
  40d560:	pop    rbx
  40d561:	pop    rsi
  40d562:	ret    
  40d563:	nop    DWORD PTR [rax]
  40d566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d570:	push   rdi
  40d571:	push   rsi
  40d572:	push   rbx
  40d573:	sub    rsp,0x20
  40d577:	cmp    r9d,r8d
  40d57a:	mov    ebx,r9d
  40d57d:	mov    esi,r8d
  40d580:	cmovg  ebx,r8d
  40d584:	mov    rdi,rcx
  40d587:	movsxd r8,ebx
  40d58a:	sub    esi,ebx
  40d58c:	call   0x40d260
  40d591:	xor    edx,edx
  40d593:	mov    rcx,rdi
  40d596:	movsxd r8,esi
  40d599:	call   0x40d260
  40d59e:	movzx  edx,bl
  40d5a1:	mov    rcx,rdi
  40d5a4:	add    rsp,0x20
  40d5a8:	pop    rbx
  40d5a9:	pop    rsi
  40d5aa:	pop    rdi
  40d5ab:	jmp    0x40d520
  40d5b0:	xor    eax,eax
  40d5b2:	mov    DWORD PTR [rcx+0xe8],0x8
  40d5bc:	ret    
  40d5bd:	nop    DWORD PTR [rax]
  40d5c0:	push   rbx
  40d5c1:	sub    rsp,0x20
  40d5c5:	test   rcx,rcx
  40d5c8:	je     0x40d601
  40d5ca:	cmp    DWORD PTR [rcx+0x148],0x5
  40d5d1:	je     0x40d601
  40d5d3:	mov    eax,DWORD PTR [rcx+0xe0]
  40d5d9:	cmp    DWORD PTR [rcx+0xe8],eax
  40d5df:	mov    rbx,rcx
  40d5e2:	jbe    0x40d5ef
  40d5e4:	xor    edx,edx
  40d5e6:	call   0x424770
  40d5eb:	test   eax,eax
  40d5ed:	js     0x40d606
  40d5ef:	mov    edx,0x1
  40d5f4:	mov    rcx,rbx
  40d5f7:	add    rsp,0x20
  40d5fb:	pop    rbx
  40d5fc:	jmp    0x424770
  40d601:	mov    eax,0xffffffff
  40d606:	add    rsp,0x20
  40d60a:	pop    rbx
  40d60b:	ret    
  40d60c:	nop
  40d60d:	nop
  40d60e:	nop
  40d60f:	nop
  40d610:	mov    r10,QWORD PTR [rsp+0x28]
  40d615:	cmp    rcx,rdx
  40d618:	mov    QWORD PTR [r10],0x0
  40d61f:	jne    0x40d62c
  40d621:	jmp    0x40d680
  40d623:	add    rcx,0x1
  40d627:	cmp    rdx,rcx
  40d62a:	je     0x40d680
  40d62c:	movzx  eax,BYTE PTR [rcx]
  40d62f:	cmp    al,0x20
  40d631:	je     0x40d623
  40d633:	cmp    al,0x2b
  40d635:	je     0x40d790
  40d63b:	cmp    al,0x2d
  40d63d:	jne    0x40d690
  40d63f:	mov    r11d,0x1
  40d645:	lea    rax,[rcx+0x1]
  40d649:	cmp    rdx,rax
  40d64c:	je     0x40d672
  40d64e:	cmp    BYTE PTR [rcx+0x1],0x20
  40d652:	je     0x40d669
  40d654:	jmp    0x40d780
  40d659:	nop    DWORD PTR [rax+0x0]
  40d660:	cmp    BYTE PTR [rax],0x20
  40d663:	jne    0x40d780
  40d669:	add    rax,0x1
  40d66d:	cmp    rdx,rax
  40d670:	jne    0x40d660
  40d672:	mov    BYTE PTR [r8],r11b
  40d675:	xor    eax,eax
  40d677:	ret    
  40d678:	nop    DWORD PTR [rax+rax*1+0x0]
  40d680:	mov    BYTE PTR [r8],0x0
  40d684:	mov    QWORD PTR [r9],0x0
  40d68b:	mov    rax,rcx
  40d68e:	ret    
  40d68f:	nop
  40d690:	mov    BYTE PTR [r8],0x0
  40d694:	cmp    rdx,rcx
  40d697:	jne    0x40d6a9
  40d699:	jmp    0x40d712
  40d69b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d6a0:	add    rcx,0x1
  40d6a4:	cmp    rdx,rcx
  40d6a7:	je     0x40d712
  40d6a9:	movzx  eax,BYTE PTR [rcx]
  40d6ac:	cmp    al,0x30
  40d6ae:	je     0x40d6a0
  40d6b0:	sub    eax,0x30
  40d6b3:	mov    r8,rcx
  40d6b6:	cmp    al,0x9
  40d6b8:	jbe    0x40d6cb
  40d6ba:	jmp    0x40d7a4
  40d6bf:	nop
  40d6c0:	movzx  eax,BYTE PTR [r8]
  40d6c4:	sub    eax,0x30
  40d6c7:	cmp    al,0x9
  40d6c9:	ja     0x40d720
  40d6cb:	add    r8,0x1
  40d6cf:	cmp    rdx,r8
  40d6d2:	jne    0x40d6c0
  40d6d4:	mov    rax,rdx
  40d6d7:	mov    r10,rcx
  40d6da:	sub    rax,rcx
  40d6dd:	mov    rcx,rdx
  40d6e0:	mov    QWORD PTR [r9],rax
  40d6e3:	cmp    rdx,rcx
  40d6e6:	je     0x40d7a0
  40d6ec:	movzx  r9d,BYTE PTR [rcx]
  40d6f0:	mov    r8,rcx
  40d6f3:	mov    rcx,r10
  40d6f6:	cmp    r9b,0x20
  40d6fa:	jne    0x40d675
  40d700:	add    r8,0x1
  40d704:	cmp    rdx,r8
  40d707:	je     0x40d68b
  40d709:	cmp    BYTE PTR [r8],0x20
  40d70d:	je     0x40d700
  40d70f:	xor    eax,eax
  40d711:	ret    
  40d712:	mov    r10,rcx
  40d715:	xor    eax,eax
  40d717:	jmp    0x40d6e0
  40d719:	nop    DWORD PTR [rax+0x0]
  40d720:	mov    rax,r8
  40d723:	sub    rax,rcx
  40d726:	mov    QWORD PTR [r9],rax
  40d729:	movzx  r9d,BYTE PTR [r8]
  40d72d:	cmp    r9b,0x2e
  40d731:	jne    0x40d6f6
  40d733:	lea    r9,[r8+0x1]
  40d737:	cmp    rdx,r9
  40d73a:	je     0x40d7ab
  40d73c:	movzx  eax,BYTE PTR [r8+0x1]
  40d741:	sub    eax,0x30
  40d744:	cmp    al,0x9
  40d746:	mov    rax,r9
  40d749:	jbe    0x40d75e
  40d74b:	xor    r8d,r8d
  40d74e:	jmp    0x40d770
  40d750:	movzx  r11d,BYTE PTR [rax]
  40d754:	lea    r8d,[r11-0x30]
  40d758:	cmp    r8b,0x9
  40d75c:	ja     0x40d798
  40d75e:	add    rax,0x1
  40d762:	cmp    rdx,rax
  40d765:	jne    0x40d750
  40d767:	mov    r8,rdx
  40d76a:	mov    rax,rdx
  40d76d:	sub    r8,r9
  40d770:	mov    QWORD PTR [r10],r8
  40d773:	mov    r10,rcx
  40d776:	mov    rcx,rax
  40d779:	jmp    0x40d6e3
  40d77e:	xchg   ax,ax
  40d780:	mov    BYTE PTR [r8],r11b
  40d783:	mov    rcx,rax
  40d786:	jmp    0x40d694
  40d78b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d790:	xor    r11d,r11d
  40d793:	jmp    0x40d645
  40d798:	mov    r8,rax
  40d79b:	sub    r8,r9
  40d79e:	jmp    0x40d770
  40d7a0:	mov    rax,r10
  40d7a3:	ret    
  40d7a4:	xor    eax,eax
  40d7a6:	jmp    0x40d726
  40d7ab:	mov    rax,rdx
  40d7ae:	xor    r8d,r8d
  40d7b1:	jmp    0x40d770
  40d7b3:	nop    DWORD PTR [rax]
  40d7b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d7c0:	push   rbx
  40d7c1:	sub    rsp,0x40
  40d7c5:	lea    rax,[rsp+0x38]
  40d7ca:	mov    rbx,r8
  40d7cd:	mov    r8,r9
  40d7d0:	lea    r9,[rsp+0x30]
  40d7d5:	mov    QWORD PTR [rsp+0x20],rax
  40d7da:	call   0x40d610
  40d7df:	test   rax,rax
  40d7e2:	je     0x40d850
  40d7e4:	mov    r9,QWORD PTR [rsp+0x30]
  40d7e9:	test   r9,r9
  40d7ec:	je     0x40d84c
  40d7ee:	movsx  ecx,BYTE PTR [rax]
  40d7f1:	movabs r10,0x1999999999999999
  40d7fb:	sub    ecx,0x30
  40d7fe:	movsxd rcx,ecx
  40d801:	jmp    0x40d821
  40d803:	cmp    rcx,r10
  40d806:	ja     0x40d841
  40d808:	movsx  edx,BYTE PTR [rax]
  40d80b:	lea    r8,[rcx+rcx*4]
  40d80f:	sub    edx,0x30
  40d812:	movsxd rdx,edx
  40d815:	lea    rdx,[rdx+r8*2]
  40d819:	cmp    rdx,rcx
  40d81c:	jb     0x40d841
  40d81e:	mov    rcx,rdx
  40d821:	sub    r9,0x1
  40d825:	add    rax,0x1
  40d829:	test   r9,r9
  40d82c:	mov    QWORD PTR [rsp+0x30],r9
  40d831:	jne    0x40d803
  40d833:	mov    eax,0x8
  40d838:	mov    QWORD PTR [rbx],rcx
  40d83b:	add    rsp,0x40
  40d83f:	pop    rbx
  40d840:	ret    
  40d841:	mov    eax,0xfffffffb
  40d846:	add    rsp,0x40
  40d84a:	pop    rbx
  40d84b:	ret    
  40d84c:	xor    ecx,ecx
  40d84e:	jmp    0x40d833
  40d850:	mov    eax,0xfffffffd
  40d855:	jmp    0x40d846
  40d857:	nop    WORD PTR [rax+rax*1+0x0]
  40d860:	push   rbx
  40d861:	sub    rsp,0x30
  40d865:	mov    rbx,r8
  40d868:	lea    r9,[rsp+0x27]
  40d86d:	lea    r8,[rsp+0x28]
  40d872:	call   0x40d7c0
  40d877:	test   eax,eax
  40d879:	js     0x40d8a1
  40d87b:	cmp    BYTE PTR [rsp+0x27],0x0
  40d880:	mov    rax,QWORD PTR [rsp+0x28]
  40d885:	je     0x40d8b0
  40d887:	movabs rdx,0x8000000000000000
  40d891:	cmp    rax,rdx
  40d894:	ja     0x40d8c3
  40d896:	neg    rax
  40d899:	mov    QWORD PTR [rbx],rax
  40d89c:	mov    eax,0x8
  40d8a1:	add    rsp,0x30
  40d8a5:	pop    rbx
  40d8a6:	ret    
  40d8a7:	nop    WORD PTR [rax+rax*1+0x0]
  40d8b0:	test   rax,rax
  40d8b3:	js     0x40d8c3
  40d8b5:	mov    QWORD PTR [rbx],rax
  40d8b8:	mov    eax,0x8
  40d8bd:	add    rsp,0x30
  40d8c1:	pop    rbx
  40d8c2:	ret    
  40d8c3:	mov    eax,0xfffffffb
  40d8c8:	jmp    0x40d8a1
  40d8ca:	nop    WORD PTR [rax+rax*1+0x0]
  40d8d0:	push   rbx
  40d8d1:	sub    rsp,0x50
  40d8d5:	lea    rax,[rsp+0x48]
  40d8da:	mov    rbx,r8
  40d8dd:	lea    r9,[rsp+0x40]
  40d8e2:	lea    r8,[rsp+0x3f]
  40d8e7:	mov    QWORD PTR [rsp+0x20],rax
  40d8ec:	call   0x40d610
  40d8f1:	test   rax,rax
  40d8f4:	je     0x40d963
  40d8f6:	mov    rcx,QWORD PTR [rsp+0x40]
  40d8fb:	xor    edx,edx
  40d8fd:	test   rcx,rcx
  40d900:	jne    0x40d90c
  40d902:	jmp    0x40d95f
  40d904:	cmp    edx,0xccccccc
  40d90a:	ja     0x40d954
  40d90c:	lea    r9d,[rdx+rdx*4]
  40d910:	movsx  edx,BYTE PTR [rax]
  40d913:	sub    rcx,0x1
  40d917:	add    rax,0x1
  40d91b:	test   rcx,rcx
  40d91e:	mov    QWORD PTR [rsp+0x40],rcx
  40d923:	lea    edx,[rdx+r9*2-0x30]
  40d928:	jne    0x40d904
  40d92a:	cmp    BYTE PTR [rsp+0x3f],0x0
  40d92f:	je     0x40d950
  40d931:	cmp    edx,0x80000000
  40d937:	ja     0x40d954
  40d939:	neg    edx
  40d93b:	mov    DWORD PTR [rbx],edx
  40d93d:	mov    eax,0x4
  40d942:	add    rsp,0x50
  40d946:	pop    rbx
  40d947:	ret    
  40d948:	nop    DWORD PTR [rax+rax*1+0x0]
  40d950:	test   edx,edx
  40d952:	jns    0x40d93b
  40d954:	mov    eax,0xfffffffb
  40d959:	add    rsp,0x50
  40d95d:	pop    rbx
  40d95e:	ret    
  40d95f:	xor    edx,edx
  40d961:	jmp    0x40d93b
  40d963:	mov    eax,0xfffffffd
  40d968:	jmp    0x40d942
  40d96a:	nop    WORD PTR [rax+rax*1+0x0]
  40d970:	push   rbp
  40d971:	push   rdi
  40d972:	push   rsi
  40d973:	push   rbx
  40d974:	sub    rsp,0xe8
  40d97b:	movzx  eax,BYTE PTR [r8]
  40d97f:	cmp    al,0x4d
  40d981:	ja     0x40db71
  40d987:	test   al,al
  40d989:	jne    0x40d994
  40d98b:	mov    BYTE PTR [r8],0x4d
  40d98f:	mov    eax,0x4d
  40d994:	cmp    BYTE PTR [r8+0x1],al
  40d998:	ja     0x40db71
  40d99e:	lea    rax,[rsp+0x48]
  40d9a3:	mov    rbx,r8
  40d9a6:	lea    r9,[rsp+0x40]
  40d9ab:	lea    r8,[rsp+0x3f]
  40d9b0:	mov    QWORD PTR [rsp+0x20],rax
  40d9b5:	call   0x40d610
  40d9ba:	test   rax,rax
  40d9bd:	mov    rbp,rax
  40d9c0:	je     0x40dba8
  40d9c6:	movzx  eax,BYTE PTR [rsp+0x3f]
  40d9cb:	lea    rsi,[rsp+0x80]
  40d9d3:	lea    rcx,[rsi+0x8]
  40d9d7:	mov    r9,rsi
  40d9da:	mov    BYTE PTR [rbx+0x2],al
  40d9dd:	nop    DWORD PTR [rax]
  40d9e0:	add    r9,0x1
  40d9e4:	mov    BYTE PTR [r9-0x1],0x30
  40d9e9:	cmp    r9,rcx
  40d9ec:	jne    0x40d9e0
  40d9ee:	movzx  eax,BYTE PTR [rbx+0x1]
  40d9f2:	movzx  ecx,BYTE PTR [rbx]
  40d9f5:	mov    r8,QWORD PTR [rsp+0x40]
  40d9fa:	sub    ecx,eax
  40d9fc:	mov    eax,0xfffffffb
  40da01:	movsxd rcx,ecx
  40da04:	cmp    rcx,r8
  40da07:	jb     0x40db76
  40da0d:	mov    rdx,rbp
  40da10:	mov    rcx,r9
  40da13:	call   0x429528
  40da18:	mov    r9,rax
  40da1b:	mov    rax,QWORD PTR [rsp+0x40]
  40da20:	mov    r8,QWORD PTR [rsp+0x48]
  40da25:	lea    rdi,[r9+rax*1]
  40da29:	lea    rdx,[rbp+rax*1+0x1]
  40da2e:	movzx  eax,BYTE PTR [rbx+0x1]
  40da32:	cmp    rax,r8
  40da35:	jb     0x40db93
  40da3b:	mov    rcx,rdi
  40da3e:	call   0x429528
  40da43:	mov    rax,QWORD PTR [rsp+0x48]
  40da48:	movzx  r8d,BYTE PTR [rbx+0x1]
  40da4d:	mov    edx,0x30
  40da52:	lea    rcx,[rdi+rax*1]
  40da56:	sub    r8,rax
  40da59:	call   0x429518
  40da5e:	movzx  eax,BYTE PTR [rbx+0x1]
  40da62:	lea    r11,[rsp+0x50]
  40da67:	mov    ecx,0xffffffff
  40da6c:	lea    r10,[rdi+rax*1-0x8]
  40da71:	movsx  edx,BYTE PTR [r10]
  40da75:	lea    rax,[r10+0x1]
  40da79:	lea    r9,[r10+0x8]
  40da7d:	nop    DWORD PTR [rax]
  40da80:	add    rax,0x1
  40da84:	lea    r8d,[rdx+rdx*4]
  40da88:	movsx  edx,BYTE PTR [rax-0x1]
  40da8c:	cmp    rax,r9
  40da8f:	lea    edx,[rdx+r8*2]
  40da93:	jne    0x40da80
  40da95:	sub    edx,0x1fca0550
  40da9b:	sub    r10,0x8
  40da9f:	add    ecx,0x1
  40daa2:	mov    DWORD PTR [r11],edx
  40daa5:	add    r11,0x4
  40daa9:	cmp    r10,rsi
  40daac:	ja     0x40da71
  40daae:	movzx  r8d,BYTE PTR [rbx]
  40dab2:	mov    rax,QWORD PTR [rip+0x2b097]        # 0x438b50
  40dab9:	test   ecx,ecx
  40dabb:	mov    QWORD PTR [rbx+0x3],0x0
  40dac3:	mov    QWORD PTR [rbx+0xb],0x0
  40dacb:	mov    QWORD PTR [rbx+0x13],0x0
  40dad3:	mov    QWORD PTR [rbx+0x1b],0x0
  40dadb:	mov    edi,DWORD PTR [rax+r8*4]
  40dadf:	je     0x40db01
  40dae1:	test   edx,edx
  40dae3:	je     0x40dafc
  40dae5:	jmp    0x40dba0
  40daea:	nop    WORD PTR [rax+rax*1+0x0]
  40daf0:	movsxd r9,ecx
  40daf3:	mov    edx,DWORD PTR [rsp+r9*4+0x50]
  40daf8:	test   edx,edx
  40dafa:	jne    0x40db0a
  40dafc:	sub    ecx,0x1
  40daff:	jne    0x40daf0
  40db01:	mov    edx,DWORD PTR [rsp+0x50]
  40db05:	xor    ecx,ecx
  40db07:	xor    r9d,r9d
  40db0a:	xor    r11d,r11d
  40db0d:	test   edx,edx
  40db0f:	jne    0x40db6a
  40db11:	sub    ecx,0x1
  40db14:	mov    esi,ecx
  40db16:	xor    eax,eax
  40db18:	mov    r8d,0x1
  40db1e:	jmp    0x40db2b
  40db20:	movsxd r9,ecx
  40db23:	sub    ecx,0x1
  40db26:	mov    edx,DWORD PTR [rsp+r9*4+0x50]
  40db2b:	test   edx,edx
  40db2d:	mov    r10d,edx
  40db30:	cmovne r8d,r11d
  40db34:	shr    r10d,0x8
  40db38:	imul   eax,eax,0x5f5e1
  40db3e:	add    eax,r10d
  40db41:	test   ecx,ecx
  40db43:	mov    DWORD PTR [rsp+r9*4+0x50],eax
  40db48:	movzx  eax,dl
  40db4b:	jns    0x40db20
  40db4d:	test   r8b,r8b
  40db50:	jne    0x40db82
  40db52:	sub    edi,0x1
  40db55:	movsxd r9,esi
  40db58:	mov    ecx,esi
  40db5a:	movsxd rdx,edi
  40db5d:	mov    BYTE PTR [rbx+rdx*1+0x2],al
  40db61:	mov    edx,DWORD PTR [rsp+r9*4+0x50]
  40db66:	test   edx,edx
  40db68:	je     0x40db11
  40db6a:	mov    esi,ecx
  40db6c:	lea    ecx,[rcx-0x1]
  40db6f:	jmp    0x40db16
  40db71:	mov    eax,0xffffffff
  40db76:	add    rsp,0xe8
  40db7d:	pop    rbx
  40db7e:	pop    rsi
  40db7f:	pop    rdi
  40db80:	pop    rbp
  40db81:	ret    
  40db82:	mov    eax,0x23
  40db87:	add    rsp,0xe8
  40db8e:	pop    rbx
  40db8f:	pop    rsi
  40db90:	pop    rdi
  40db91:	pop    rbp
  40db92:	ret    
  40db93:	mov    QWORD PTR [rsp+0x48],rax
  40db98:	mov    r8,rax
  40db9b:	jmp    0x40da3b
  40dba0:	movsxd r9,ecx
  40dba3:	jmp    0x40db0a
  40dba8:	mov    eax,0xfffffffd
  40dbad:	jmp    0x40db76
  40dbaf:	nop
  40dbb0:	push   rdi
  40dbb1:	push   rsi
  40dbb2:	push   rbx
  40dbb3:	sub    rsp,0x30
  40dbb7:	mov    rax,QWORD PTR [rip+0x2aff2]        # 0x438bb0
  40dbbe:	mov    rbx,rcx
  40dbc1:	mov    rsi,rdx
  40dbc4:	mov    eax,DWORD PTR [rax]
  40dbc6:	test   eax,eax
  40dbc8:	jne    0x40de70
  40dbce:	mov    rcx,rbx
  40dbd1:	call   0x429490
  40dbd6:	cmp    rax,0x3
  40dbda:	je     0x40dc12
  40dbdc:	lea    rdx,[rip+0x223b0]        # 0x42ff93
  40dbe3:	mov    rcx,rbx
  40dbe6:	mov    rdi,QWORD PTR [rip+0x31ea7]        # 0x43fa94
  40dbed:	call   rdi
  40dbef:	xor    r8d,r8d
  40dbf2:	test   eax,eax
  40dbf4:	jne    0x40dd50
  40dbfa:	test   rsi,rsi
  40dbfd:	je     0x40de60
  40dc03:	mov    DWORD PTR [rsi+0x4],r8d
  40dc07:	mov    eax,r8d
  40dc0a:	add    rsp,0x30
  40dc0e:	pop    rbx
  40dc0f:	pop    rsi
  40dc10:	pop    rdi
  40dc11:	ret    
  40dc12:	lea    rdx,[rip+0x2234a]        # 0x42ff63
  40dc19:	mov    rcx,rbx
  40dc1c:	mov    rdi,QWORD PTR [rip+0x31e71]        # 0x43fa94
  40dc23:	call   rdi
  40dc25:	xor    r8d,r8d
  40dc28:	test   eax,eax
  40dc2a:	je     0x40dbfa
  40dc2c:	lea    rdx,[rip+0x22334]        # 0x42ff67
  40dc33:	mov    rcx,rbx
  40dc36:	call   rdi
  40dc38:	test   eax,eax
  40dc3a:	mov    r8d,0x1
  40dc40:	je     0x40dbfa
  40dc42:	lea    rdx,[rip+0x22322]        # 0x42ff6b
  40dc49:	mov    rcx,rbx
  40dc4c:	call   rdi
  40dc4e:	test   eax,eax
  40dc50:	mov    r8d,0x2
  40dc56:	je     0x40dbfa
  40dc58:	lea    rdx,[rip+0x22310]        # 0x42ff6f
  40dc5f:	mov    rcx,rbx
  40dc62:	call   rdi
  40dc64:	test   eax,eax
  40dc66:	mov    r8d,0x3
  40dc6c:	je     0x40dbfa
  40dc6e:	lea    rdx,[rip+0x222fe]        # 0x42ff73
  40dc75:	mov    rcx,rbx
  40dc78:	call   rdi
  40dc7a:	test   eax,eax
  40dc7c:	mov    r8d,0x4
  40dc82:	je     0x40dbfa
  40dc88:	lea    rdx,[rip+0x222e8]        # 0x42ff77
  40dc8f:	mov    rcx,rbx
  40dc92:	call   rdi
  40dc94:	test   eax,eax
  40dc96:	mov    r8d,0x5
  40dc9c:	je     0x40dbfa
  40dca2:	lea    rdx,[rip+0x222d2]        # 0x42ff7b
  40dca9:	mov    rcx,rbx
  40dcac:	call   rdi
  40dcae:	test   eax,eax
  40dcb0:	mov    r8d,0x6
  40dcb6:	je     0x40dbfa
  40dcbc:	lea    rdx,[rip+0x222bc]        # 0x42ff7f
  40dcc3:	mov    rcx,rbx
  40dcc6:	call   rdi
  40dcc8:	test   eax,eax
  40dcca:	mov    r8d,0x7
  40dcd0:	je     0x40dbfa
  40dcd6:	lea    rdx,[rip+0x222a6]        # 0x42ff83
  40dcdd:	mov    rcx,rbx
  40dce0:	call   rdi
  40dce2:	test   eax,eax
  40dce4:	mov    r8d,0x8
  40dcea:	je     0x40dbfa
  40dcf0:	lea    rdx,[rip+0x22290]        # 0x42ff87
  40dcf7:	mov    rcx,rbx
  40dcfa:	call   rdi
  40dcfc:	test   eax,eax
  40dcfe:	mov    r8d,0x9
  40dd04:	je     0x40dbfa
  40dd0a:	lea    rdx,[rip+0x2227a]        # 0x42ff8b
  40dd11:	mov    rcx,rbx
  40dd14:	call   rdi
  40dd16:	test   eax,eax
  40dd18:	mov    r8d,0xa
  40dd1e:	je     0x40dbfa
  40dd24:	lea    rdx,[rip+0x22264]        # 0x42ff8f
  40dd2b:	mov    rcx,rbx
  40dd2e:	call   rdi
  40dd30:	test   eax,eax
  40dd32:	mov    r8d,0xb
  40dd38:	je     0x40dbfa
  40dd3e:	or     eax,0xffffffff
  40dd41:	jmp    0x40dc0a
  40dd46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dd50:	lea    rdx,[rip+0x22244]        # 0x42ff9b
  40dd57:	mov    rcx,rbx
  40dd5a:	call   rdi
  40dd5c:	test   eax,eax
  40dd5e:	mov    r8d,0x1
  40dd64:	je     0x40dbfa
  40dd6a:	lea    rdx,[rip+0x22233]        # 0x42ffa4
  40dd71:	mov    rcx,rbx
  40dd74:	call   rdi
  40dd76:	test   eax,eax
  40dd78:	mov    r8d,0x2
  40dd7e:	je     0x40dbfa
  40dd84:	lea    rdx,[rip+0x2221f]        # 0x42ffaa
  40dd8b:	mov    rcx,rbx
  40dd8e:	call   rdi
  40dd90:	test   eax,eax
  40dd92:	mov    r8d,0x3
  40dd98:	je     0x40dbfa
  40dd9e:	lea    rdx,[rip+0x2220b]        # 0x42ffb0
  40dda5:	mov    rcx,rbx
  40dda8:	call   rdi
  40ddaa:	test   eax,eax
  40ddac:	mov    r8d,0x5
  40ddb2:	je     0x40dbfa
  40ddb8:	lea    rdx,[rip+0x221f6]        # 0x42ffb5
  40ddbf:	mov    rcx,rbx
  40ddc2:	call   rdi
  40ddc4:	test   eax,eax
  40ddc6:	mov    r8d,0x6
  40ddcc:	je     0x40dbfa
  40ddd2:	lea    rdx,[rip+0x221e1]        # 0x42ffba
  40ddd9:	mov    rcx,rbx
  40dddc:	call   rdi
  40ddde:	test   eax,eax
  40dde0:	mov    r8d,0x7
  40dde6:	je     0x40dbfa
  40ddec:	lea    rdx,[rip+0x221ce]        # 0x42ffc1
  40ddf3:	mov    rcx,rbx
  40ddf6:	call   rdi
  40ddf8:	test   eax,eax
  40ddfa:	mov    r8d,0x8
  40de00:	je     0x40dbfa
  40de06:	lea    rdx,[rip+0x221be]        # 0x42ffcb
  40de0d:	mov    rcx,rbx
  40de10:	call   rdi
  40de12:	test   eax,eax
  40de14:	mov    r8d,0x9
  40de1a:	je     0x40dbfa
  40de20:	lea    rdx,[rip+0x221ac]        # 0x42ffd3
  40de27:	mov    rcx,rbx
  40de2a:	call   rdi
  40de2c:	test   eax,eax
  40de2e:	mov    r8d,0xa
  40de34:	je     0x40dbfa
  40de3a:	lea    rdx,[rip+0x2219b]        # 0x42ffdc
  40de41:	mov    rcx,rbx
  40de44:	call   rdi
  40de46:	test   eax,eax
  40de48:	jne    0x40dd3e
  40de4e:	mov    r8d,0xb
  40de54:	jmp    0x40dbfa
  40de59:	nop    DWORD PTR [rax+0x0]
  40de60:	mov    eax,r8d
  40de63:	add    rsp,0x30
  40de67:	pop    rbx
  40de68:	pop    rsi
  40de69:	pop    rdi
  40de6a:	ret    
  40de6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40de70:	call   0x429490
  40de75:	lea    r8,[rip+0x220c4]        # 0x42ff40
  40de7c:	lea    rcx,[rip+0x220d6]        # 0x42ff59
  40de83:	mov    QWORD PTR [rsp+0x20],rbx
  40de88:	mov    r9d,eax
  40de8b:	mov    edx,0xa9c5
  40de90:	call   0x423fa0
  40de95:	jmp    0x40dbce
  40de9a:	nop    WORD PTR [rax+rax*1+0x0]
  40dea0:	push   rsi
  40dea1:	push   rbx
  40dea2:	sub    rsp,0x28
  40dea6:	movzx  eax,BYTE PTR [rcx]
  40dea9:	mov    rbx,rcx
  40deac:	test   al,al
  40deae:	je     0x40dee0
  40deb0:	mov    rsi,QWORD PTR [rip+0x31c95]        # 0x43fb4c
  40deb7:	jmp    0x40decb
  40deb9:	nop    DWORD PTR [rax+0x0]
  40dec0:	add    rbx,0x1
  40dec4:	movzx  eax,BYTE PTR [rbx]
  40dec7:	test   al,al
  40dec9:	je     0x40dee0
  40decb:	movzx  ecx,al
  40dece:	call   rsi
  40ded0:	test   eax,eax
  40ded2:	jne    0x40dec0
  40ded4:	xor    eax,eax
  40ded6:	add    rsp,0x28
  40deda:	pop    rbx
  40dedb:	pop    rsi
  40dedc:	ret    
  40dedd:	nop    DWORD PTR [rax]
  40dee0:	mov    eax,0x1
  40dee5:	add    rsp,0x28
  40dee9:	pop    rbx
  40deea:	pop    rsi
  40deeb:	ret    
  40deec:	nop    DWORD PTR [rax+0x0]
  40def0:	movzx  eax,BYTE PTR [r9]
  40def4:	movzx  r10d,BYTE PTR [r9+0x1]
  40def9:	mov    BYTE PTR [r9+0x2],dl
  40defd:	mov    edx,r8d
  40df00:	mov    BYTE PTR [r9+0x1],cl
  40df04:	shr    edx,0x18
  40df07:	mov    BYTE PTR [r9+0x7],r8b
  40df0b:	mov    rcx,r9
  40df0e:	mov    BYTE PTR [r9+0x4],dl
  40df12:	mov    edx,r8d
  40df15:	mov    BYTE PTR [r9],0xa
  40df19:	shr    edx,0x10
  40df1c:	mov    BYTE PTR [r9+0x3],0x0
  40df21:	mov    BYTE PTR [r9+0x5],dl
  40df25:	mov    edx,r8d
  40df28:	movzx  r8d,r10b
  40df2c:	shr    edx,0x8
  40df2f:	mov    BYTE PTR [r9+0x6],dl
  40df33:	movzx  edx,al
  40df36:	jmp    0x413970
  40df3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40df40:	movzx  r10d,BYTE PTR [r9]
  40df44:	movzx  r11d,BYTE PTR [r9+0x1]
  40df49:	mov    rax,r8
  40df4c:	mov    BYTE PTR [r9+0x2],dl
  40df50:	mov    BYTE PTR [r9+0x1],cl
  40df54:	shr    rax,0x20
  40df58:	mov    BYTE PTR [r9+0xb],r8b
  40df5c:	mov    rcx,r9
  40df5f:	mov    edx,eax
  40df61:	mov    BYTE PTR [r9+0x7],al
  40df65:	mov    BYTE PTR [r9],0x14
  40df69:	shr    edx,0x18
  40df6c:	mov    BYTE PTR [r9+0x3],0x0
  40df71:	mov    BYTE PTR [r9+0x4],dl
  40df75:	mov    edx,eax
  40df77:	shr    edx,0x10
  40df7a:	mov    BYTE PTR [r9+0x5],dl
  40df7e:	mov    edx,eax
  40df80:	mov    eax,r8d
  40df83:	shr    eax,0x18
  40df86:	shr    edx,0x8
  40df89:	mov    BYTE PTR [r9+0x8],al
  40df8d:	mov    eax,r8d
  40df90:	mov    BYTE PTR [r9+0x6],dl
  40df94:	shr    eax,0x10
  40df97:	movzx  edx,r10b
  40df9b:	mov    BYTE PTR [r9+0x9],al
  40df9f:	mov    eax,r8d
  40dfa2:	movzx  r8d,r11b
  40dfa6:	shr    eax,0x8
  40dfa9:	mov    BYTE PTR [r9+0xa],al
  40dfad:	jmp    0x413970
  40dfb2:	nop    DWORD PTR [rax+0x0]
  40dfb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dfc0:	test   ecx,ecx
  40dfc2:	js     0x40e000
  40dfc4:	cmp    ecx,0x63
  40dfc7:	jg     0x40dfe0
  40dfc9:	cmp    ecx,0x31
  40dfcc:	jg     0x40dfd1
  40dfce:	add    ecx,0x64
  40dfd1:	mov    DWORD PTR [rdx],ecx
  40dfd3:	mov    eax,0x1
  40dfd8:	ret    
  40dfd9:	nop    DWORD PTR [rax+0x0]
  40dfe0:	lea    r8d,[rcx-0x6d9]
  40dfe7:	xor    eax,eax
  40dfe9:	cmp    r8d,0x2036
  40dff0:	ja     0x40e002
  40dff2:	sub    ecx,0x76c
  40dff8:	mov    al,0x1
  40dffa:	mov    DWORD PTR [rdx],ecx
  40dffc:	ret    
  40dffd:	nop    DWORD PTR [rax]
  40e000:	xor    eax,eax
  40e002:	repz ret 
  40e004:	xchg   ax,ax
  40e006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e010:	push   r12
  40e012:	push   rbp
  40e013:	push   rdi
  40e014:	push   rsi
  40e015:	push   rbx
  40e016:	sub    rsp,0x20
  40e01a:	mov    edi,ecx
  40e01c:	mov    rcx,rdx
  40e01f:	mov    rsi,rdx
  40e022:	mov    rbp,r8
  40e025:	mov    r12,r9
  40e028:	call   0x429490
  40e02d:	cmp    edi,0x100
  40e033:	mov    rbx,rax
  40e036:	je     0x40e070
  40e038:	lea    rdi,[rax+0x1]
  40e03c:	mov    rcx,rdi
  40e03f:	call   0x429538
  40e044:	test   rax,rax
  40e047:	mov    QWORD PTR [rbp+0x0],rax
  40e04b:	je     0x40e090
  40e04d:	mov    r8,rdi
  40e050:	mov    rdx,rsi
  40e053:	mov    rcx,rax
  40e056:	call   0x429528
  40e05b:	mov    eax,ebx
  40e05d:	add    rsp,0x20
  40e061:	pop    rbx
  40e062:	pop    rsi
  40e063:	pop    rdi
  40e064:	pop    rbp
  40e065:	pop    r12
  40e067:	ret    
  40e068:	nop    DWORD PTR [rax+rax*1+0x0]
  40e070:	mov    r8d,DWORD PTR [r12]
  40e074:	mov    rcx,QWORD PTR [rbp+0x0]
  40e078:	mov    rdx,rsi
  40e07b:	cmp    rax,r8
  40e07e:	cmovbe r8,rax
  40e082:	call   0x429528
  40e087:	jmp    0x40e05b
  40e089:	nop    DWORD PTR [rax+0x0]
  40e090:	mov    eax,0xfffffffc
  40e095:	jmp    0x40e05d
  40e097:	nop    WORD PTR [rax+rax*1+0x0]
  40e0a0:	push   rdi
  40e0a1:	push   rsi
  40e0a2:	push   rbx
  40e0a3:	sub    rsp,0x30
  40e0a7:	cmp    edx,0x40
  40e0aa:	mov    ebx,edx
  40e0ac:	mov    rsi,r8
  40e0af:	je     0x40e1e9
  40e0b5:	jle    0x40e0f2
  40e0b7:	cmp    edx,0x6c
  40e0ba:	je     0x40e16e
  40e0c0:	jg     0x40e1a0
  40e0c6:	cmp    edx,0x43
  40e0c9:	je     0x40e280
  40e0cf:	jg     0x40e160
  40e0d5:	cmp    edx,0x41
  40e0d8:	je     0x40e290
  40e0de:	cmp    edx,0x42
  40e0e1:	jne    0x40e2c0
  40e0e7:	test   ecx,ecx
  40e0e9:	jns    0x40e11e
  40e0eb:	mov    eax,0xfffffffb
  40e0f0:	jmp    0x40e125
  40e0f2:	cmp    edx,0x32
  40e0f5:	je     0x40e190
  40e0fb:	jle    0x40e1d0
  40e101:	cmp    edx,0x3b
  40e104:	je     0x40e260
  40e10a:	jg     0x40e130
  40e10c:	cmp    edx,0x34
  40e10f:	je     0x40e2f0
  40e115:	cmp    edx,0x38
  40e118:	jne    0x40e2c0
  40e11e:	mov    DWORD PTR [rsi],ecx
  40e120:	mov    eax,0x4
  40e125:	add    rsp,0x30
  40e129:	pop    rbx
  40e12a:	pop    rsi
  40e12b:	pop    rdi
  40e12c:	ret    
  40e12d:	nop    DWORD PTR [rax]
  40e130:	cmp    edx,0x3c
  40e133:	je     0x40e242
  40e139:	cmp    edx,0x3e
  40e13c:	jne    0x40e2c0
  40e142:	pxor   xmm0,xmm0
  40e146:	mov    eax,0x8
  40e14b:	cvtsi2sd xmm0,ecx
  40e14f:	movsd  QWORD PTR [r8],xmm0
  40e154:	jmp    0x40e125
  40e156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e160:	cmp    edx,0x68
  40e163:	je     0x40e190
  40e165:	cmp    edx,0x6a
  40e168:	jne    0x40e2c0
  40e16e:	test   ecx,ecx
  40e170:	mov    r9,rsi
  40e173:	js     0x40e302
  40e179:	mov    r8d,ecx
  40e17c:	xor    edx,edx
  40e17e:	xor    ecx,ecx
  40e180:	call   0x40def0
  40e185:	jmp    0x40e125
  40e187:	nop    WORD PTR [rax+rax*1+0x0]
  40e190:	test   ecx,ecx
  40e192:	mov    eax,0x1
  40e197:	setne  BYTE PTR [rsi]
  40e19a:	jmp    0x40e125
  40e19c:	nop    DWORD PTR [rax+0x0]
  40e1a0:	cmp    edx,0xa7
  40e1a6:	je     0x40e215
  40e1a8:	jg     0x40e201
  40e1aa:	cmp    edx,0x7a
  40e1ad:	je     0x40e2d0
  40e1b3:	cmp    edx,0x7f
  40e1b6:	jne    0x40e2c0
  40e1bc:	movsxd rcx,ecx
  40e1bf:	mov    eax,0x8
  40e1c4:	mov    QWORD PTR [rsi],rcx
  40e1c7:	add    rsp,0x30
  40e1cb:	pop    rbx
  40e1cc:	pop    rsi
  40e1cd:	pop    rdi
  40e1ce:	ret    
  40e1cf:	nop
  40e1d0:	cmp    edx,0x27
  40e1d3:	je     0x40e215
  40e1d5:	jle    0x40e2b0
  40e1db:	cmp    edx,0x2f
  40e1de:	je     0x40e215
  40e1e0:	cmp    edx,0x30
  40e1e3:	jne    0x40e2c0
  40e1e9:	cmp    ecx,0xff
  40e1ef:	ja     0x40e0eb
  40e1f5:	mov    BYTE PTR [rsi],cl
  40e1f7:	mov    eax,0x1
  40e1fc:	jmp    0x40e125
  40e201:	cmp    edx,0xaf
  40e207:	je     0x40e215
  40e209:	cmp    edx,0x100
  40e20f:	jne    0x40e2c0
  40e215:	lea    rdi,[rsp+0x20]
  40e21a:	lea    rdx,[rip+0x21dc4]        # 0x42ffe5
  40e221:	mov    r8d,ecx
  40e224:	mov    rcx,rdi
  40e227:	call   0x4294c8
  40e22c:	lea    r9,[rsi+0x8]
  40e230:	mov    r8,rsi
  40e233:	mov    rdx,rdi
  40e236:	mov    ecx,ebx
  40e238:	call   0x40e010
  40e23d:	jmp    0x40e125
  40e242:	movsxd rcx,ecx
  40e245:	mov    eax,0x8
  40e24a:	imul   rcx,rcx,0x2710
  40e251:	mov    QWORD PTR [r8],rcx
  40e254:	jmp    0x40e125
  40e259:	nop    DWORD PTR [rax+0x0]
  40e260:	pxor   xmm0,xmm0
  40e264:	mov    eax,0x4
  40e269:	cvtsi2ss xmm0,ecx
  40e26d:	movss  DWORD PTR [r8],xmm0
  40e272:	jmp    0x40e125
  40e277:	nop    WORD PTR [rax+rax*1+0x0]
  40e280:	test   ecx,ecx
  40e282:	jns    0x40e1bc
  40e288:	jmp    0x40e0eb
  40e28d:	nop    DWORD PTR [rax]
  40e290:	cmp    ecx,0xffff
  40e296:	ja     0x40e0eb
  40e29c:	mov    eax,0x2
  40e2a1:	mov    WORD PTR [rsi],cx
  40e2a4:	add    rsp,0x30
  40e2a8:	pop    rbx
  40e2a9:	pop    rsi
  40e2aa:	pop    rdi
  40e2ab:	ret    
  40e2ac:	nop    DWORD PTR [rax+0x0]
  40e2b0:	cmp    edx,0x23
  40e2b3:	je     0x40e215
  40e2b9:	nop    DWORD PTR [rax+0x0]
  40e2c0:	mov    eax,0xfffffffe
  40e2c5:	jmp    0x40e125
  40e2ca:	nop    WORD PTR [rax+rax*1+0x0]
  40e2d0:	lea    eax,[rcx+0x346dc]
  40e2d6:	cmp    eax,0x68db8
  40e2db:	ja     0x40e0eb
  40e2e1:	imul   ecx,ecx,0x2710
  40e2e7:	jmp    0x40e11e
  40e2ec:	nop    DWORD PTR [rax+0x0]
  40e2f0:	lea    eax,[rcx+0x8000]
  40e2f6:	cmp    eax,0xffff
  40e2fb:	jbe    0x40e29c
  40e2fd:	jmp    0x40e0eb
  40e302:	neg    ecx
  40e304:	mov    edx,0x1
  40e309:	mov    r8d,ecx
  40e30c:	xor    ecx,ecx
  40e30e:	call   0x40def0
  40e313:	jmp    0x40e125
  40e318:	nop    DWORD PTR [rax+rax*1+0x0]
  40e320:	push   rdi
  40e321:	push   rsi
  40e322:	push   rbx
  40e323:	sub    rsp,0x50
  40e327:	mov    rcx,QWORD PTR [rcx]
  40e32a:	mov    ebx,edx
  40e32c:	mov    rsi,r8
  40e32f:	cmp    rcx,0x7fffffff
  40e336:	mov    QWORD PTR [rsp+0x28],rcx
  40e33b:	jbe    0x40e400
  40e341:	cmp    edx,0x41
  40e344:	jle    0x40e383
  40e346:	cmp    edx,0x6c
  40e349:	je     0x40e372
  40e34b:	jg     0x40e450
  40e351:	cmp    edx,0x43
  40e354:	je     0x40e3eb
  40e35a:	jl     0x40e4c0
  40e360:	cmp    edx,0x68
  40e363:	je     0x40e4e0
  40e369:	cmp    edx,0x6a
  40e36c:	jne    0x40e440
  40e372:	mov    r8,rcx
  40e375:	mov    r9,rsi
  40e378:	xor    edx,edx
  40e37a:	xor    ecx,ecx
  40e37c:	call   0x40df40
  40e381:	jmp    0x40e3f3
  40e383:	cmp    edx,0x40
  40e386:	jge    0x40e470
  40e38c:	cmp    edx,0x32
  40e38f:	je     0x40e4e0
  40e395:	jle    0x40e480
  40e39b:	cmp    edx,0x3b
  40e39e:	je     0x40e410
  40e3a0:	jle    0x40e503
  40e3a6:	cmp    edx,0x3c
  40e3a9:	je     0x40e3d1
  40e3ab:	cmp    edx,0x3e
  40e3ae:	jne    0x40e440
  40e3b4:	test   rcx,rcx
  40e3b7:	js     0x40e540
  40e3bd:	pxor   xmm0,xmm0
  40e3c1:	cvtsi2sd xmm0,rcx
  40e3c6:	movsd  QWORD PTR [rsi],xmm0
  40e3ca:	mov    eax,0x8
  40e3cf:	jmp    0x40e3f3
  40e3d1:	movabs rax,0x346dc5d638865
  40e3db:	cmp    rcx,rax
  40e3de:	ja     0x40e470
  40e3e4:	imul   rcx,rcx,0x2710
  40e3eb:	mov    QWORD PTR [rsi],rcx
  40e3ee:	mov    eax,0x8
  40e3f3:	add    rsp,0x50
  40e3f7:	pop    rbx
  40e3f8:	pop    rsi
  40e3f9:	pop    rdi
  40e3fa:	ret    
  40e3fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e400:	call   0x40e0a0
  40e405:	add    rsp,0x50
  40e409:	pop    rbx
  40e40a:	pop    rsi
  40e40b:	pop    rdi
  40e40c:	ret    
  40e40d:	nop    DWORD PTR [rax]
  40e410:	test   rcx,rcx
  40e413:	js     0x40e520
  40e419:	pxor   xmm0,xmm0
  40e41d:	cvtsi2ss xmm0,rcx
  40e422:	mov    eax,0x4
  40e427:	movss  DWORD PTR [rsi],xmm0
  40e42b:	jmp    0x40e3f3
  40e42d:	nop    DWORD PTR [rax]
  40e430:	cmp    edx,0xaf
  40e436:	je     0x40e490
  40e438:	cmp    edx,0x100
  40e43e:	je     0x40e490
  40e440:	mov    eax,0xfffffffe
  40e445:	jmp    0x40e3f3
  40e447:	nop    WORD PTR [rax+rax*1+0x0]
  40e450:	cmp    edx,0xa7
  40e456:	je     0x40e490
  40e458:	jg     0x40e430
  40e45a:	cmp    edx,0x7a
  40e45d:	je     0x40e470
  40e45f:	cmp    edx,0x7f
  40e462:	jne    0x40e440
  40e464:	test   rcx,rcx
  40e467:	jns    0x40e3eb
  40e46d:	nop    DWORD PTR [rax]
  40e470:	mov    eax,0xfffffffb
  40e475:	jmp    0x40e3f3
  40e47a:	nop    WORD PTR [rax+rax*1+0x0]
  40e480:	cmp    edx,0x27
  40e483:	je     0x40e490
  40e485:	jg     0x40e4f0
  40e487:	cmp    edx,0x23
  40e48a:	jne    0x40e440
  40e48c:	nop    DWORD PTR [rax+0x0]
  40e490:	lea    rdi,[rsp+0x30]
  40e495:	lea    rdx,[rip+0x21b4c]        # 0x42ffe8
  40e49c:	mov    r8,rcx
  40e49f:	mov    rcx,rdi
  40e4a2:	call   0x4294c8
  40e4a7:	lea    r9,[rsi+0x8]
  40e4ab:	mov    r8,rsi
  40e4ae:	mov    rdx,rdi
  40e4b1:	mov    ecx,ebx
  40e4b3:	call   0x40e010
  40e4b8:	jmp    0x40e3f3
  40e4bd:	nop    DWORD PTR [rax]
  40e4c0:	mov    eax,0xffffffff
  40e4c5:	cmp    rcx,rax
  40e4c8:	ja     0x40e470
  40e4ca:	mov    DWORD PTR [r8],ecx
  40e4cd:	mov    eax,0x4
  40e4d2:	jmp    0x40e3f3
  40e4d7:	nop    WORD PTR [rax+rax*1+0x0]
  40e4e0:	mov    BYTE PTR [rsi],0x1
  40e4e3:	mov    eax,0x1
  40e4e8:	jmp    0x40e3f3
  40e4ed:	nop    DWORD PTR [rax]
  40e4f0:	cmp    edx,0x2f
  40e4f3:	je     0x40e490
  40e4f5:	cmp    edx,0x30
  40e4f8:	je     0x40e470
  40e4fe:	jmp    0x40e440
  40e503:	cmp    edx,0x34
  40e506:	je     0x40e470
  40e50c:	cmp    edx,0x38
  40e50f:	je     0x40e470
  40e515:	jmp    0x40e440
  40e51a:	nop    WORD PTR [rax+rax*1+0x0]
  40e520:	mov    rax,rcx
  40e523:	pxor   xmm0,xmm0
  40e527:	shr    rax,1
  40e52a:	and    ecx,0x1
  40e52d:	or     rax,rcx
  40e530:	cvtsi2ss xmm0,rax
  40e535:	addss  xmm0,xmm0
  40e539:	jmp    0x40e422
  40e53e:	xchg   ax,ax
  40e540:	mov    rax,rcx
  40e543:	pxor   xmm0,xmm0
  40e547:	shr    rax,1
  40e54a:	and    ecx,0x1
  40e54d:	or     rax,rcx
  40e550:	cvtsi2sd xmm0,rax
  40e555:	addsd  xmm0,xmm0
  40e559:	jmp    0x40e3c6
  40e55e:	xchg   ax,ax
  40e560:	push   rsi
  40e561:	push   rbx
  40e562:	sub    rsp,0x28
  40e566:	lea    rdx,[rip+0x21a81]        # 0x42ffee
  40e56d:	mov    rbx,QWORD PTR [rip+0x31520]        # 0x43fa94
  40e574:	mov    rsi,rcx
  40e577:	call   rbx
  40e579:	test   eax,eax
  40e57b:	mov    edx,0x1
  40e580:	je     0x40e593
  40e582:	lea    rdx,[rip+0x21a68]        # 0x42fff1
  40e589:	mov    rcx,rsi
  40e58c:	call   rbx
  40e58e:	test   eax,eax
  40e590:	sete   dl
  40e593:	mov    eax,edx
  40e595:	add    rsp,0x28
  40e599:	pop    rbx
  40e59a:	pop    rsi
  40e59b:	ret    
  40e59c:	nop    DWORD PTR [rax+0x0]
  40e5a0:	push   rsi
  40e5a1:	push   rbx
  40e5a2:	sub    rsp,0x38
  40e5a6:	xor    r11d,r11d
  40e5a9:	test   r9b,0x1
  40e5ad:	je     0x40e5ba
  40e5af:	add    r9d,0x1
  40e5b3:	sub    r8,0x1
  40e5b7:	mov    r11b,0x1
  40e5ba:	xor    esi,esi
  40e5bc:	cmp    r9d,r11d
  40e5bf:	ja     0x40e5e6
  40e5c1:	jmp    0x40e61f
  40e5c3:	and    r10d,0xf
  40e5c7:	mov    ebx,r11d
  40e5ca:	shr    ebx,1
  40e5cc:	cmp    ebx,edx
  40e5ce:	jae    0x40e5dd
  40e5d0:	test   r11b,0x1
  40e5d4:	je     0x40e610
  40e5d6:	or     r10d,esi
  40e5d9:	mov    BYTE PTR [rcx+rbx*1],r10b
  40e5dd:	add    r11d,0x1
  40e5e1:	cmp    r11d,r9d
  40e5e4:	je     0x40e61f
  40e5e6:	mov    r10d,r11d
  40e5e9:	movzx  r10d,BYTE PTR [r8+r10*1]
  40e5ee:	lea    ebx,[r10-0x30]
  40e5f2:	cmp    bl,0x9
  40e5f5:	jbe    0x40e5c3
  40e5f7:	and    r10d,0xffffffdf
  40e5fb:	lea    eax,[r10-0x41]
  40e5ff:	cmp    al,0x5
  40e601:	ja     0x40e630
  40e603:	sub    r10d,0x37
  40e607:	jmp    0x40e5c7
  40e609:	nop    DWORD PTR [rax+0x0]
  40e610:	mov    esi,r10d
  40e613:	add    r11d,0x1
  40e617:	shl    esi,0x4
  40e61a:	cmp    r11d,r9d
  40e61d:	jne    0x40e5e6
  40e61f:	mov    eax,r9d
  40e622:	shr    eax,1
  40e624:	add    rsp,0x38
  40e628:	pop    rbx
  40e629:	pop    rsi
  40e62a:	ret    
  40e62b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e630:	mov    rdx,QWORD PTR [rip+0x2a579]        # 0x438bb0
  40e637:	mov    eax,0xfffffffd
  40e63c:	mov    edx,DWORD PTR [rdx]
  40e63e:	test   edx,edx
  40e640:	je     0x40e624
  40e642:	lea    r8,[rip+0x219af]        # 0x42fff8
  40e649:	lea    rcx,[rip+0x21909]        # 0x42ff59
  40e650:	mov    edx,0x13a5
  40e655:	mov    DWORD PTR [rsp+0x2c],eax
  40e659:	call   0x423fa0
  40e65e:	mov    eax,DWORD PTR [rsp+0x2c]
  40e662:	jmp    0x40e624
  40e664:	xchg   ax,ax
  40e666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e670:	lea    edx,[rcx-0x2f]
  40e673:	cmp    edx,0x50
  40e676:	ja     0x40e710
  40e67c:	lea    r8,[rip+0x219c9]        # 0x43004c
  40e683:	movsxd rax,DWORD PTR [r8+rdx*4]
  40e687:	add    r8,rax
  40e68a:	jmp    r8
  40e68d:	nop    DWORD PTR [rax]
  40e690:	mov    eax,0x27
  40e695:	ret    
  40e696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e6a0:	mov    eax,0x26
  40e6a5:	ret    
  40e6a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e6b0:	mov    eax,0x7b
  40e6b5:	ret    
  40e6b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e6c0:	mov    eax,0x68
  40e6c5:	ret    
  40e6c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e6d0:	mov    eax,0x93
  40e6d5:	ret    
  40e6d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e6e0:	mov    eax,0x6f
  40e6e5:	ret    
  40e6e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e6f0:	mov    eax,0x6d
  40e6f5:	ret    
  40e6f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e700:	mov    eax,0x6e
  40e705:	ret    
  40e706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e710:	mov    eax,ecx
  40e712:	ret    
  40e713:	nop    DWORD PTR [rax]
  40e716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e720:	push   r15
  40e722:	push   r14
  40e724:	push   r13
  40e726:	push   r12
  40e728:	push   rbp
  40e729:	push   rdi
  40e72a:	push   rsi
  40e72b:	push   rbx
  40e72c:	sub    rsp,0x68
  40e730:	mov    ebp,DWORD PTR [rsp+0xd0]
  40e737:	test   rcx,rcx
  40e73a:	mov    r12,rcx
  40e73d:	mov    r13,rdx
  40e740:	mov    r14,r8
  40e743:	mov    rdi,r9
  40e746:	je     0x40e903
  40e74c:	test   r14,r14
  40e74f:	je     0x40e8c7
  40e755:	test   rdi,rdi
  40e758:	je     0x40e8e5
  40e75e:	cmp    DWORD PTR [rdi+0x24],0x98967f
  40e765:	ja     0x40e850
  40e76b:	cmp    ebp,0x8
  40e76e:	mov    eax,0x3
  40e773:	mov    rcx,r14
  40e776:	cmovae ebp,eax
  40e779:	mov    eax,DWORD PTR [rdi+0x20]
  40e77c:	mov    DWORD PTR [rsp+0x50],0x0
  40e784:	mov    DWORD PTR [rsp+0x30],eax
  40e788:	mov    eax,DWORD PTR [rdi+0x1c]
  40e78b:	mov    DWORD PTR [rsp+0x34],eax
  40e78f:	mov    eax,DWORD PTR [rdi+0x18]
  40e792:	mov    DWORD PTR [rsp+0x38],eax
  40e796:	mov    eax,DWORD PTR [rdi+0xc]
  40e799:	mov    DWORD PTR [rsp+0x3c],eax
  40e79d:	mov    eax,DWORD PTR [rdi+0x8]
  40e7a0:	mov    DWORD PTR [rsp+0x40],eax
  40e7a4:	mov    eax,DWORD PTR [rdi]
  40e7a6:	sub    eax,0x76c
  40e7ab:	mov    DWORD PTR [rsp+0x44],eax
  40e7af:	mov    eax,DWORD PTR [rdi+0x14]
  40e7b2:	mov    DWORD PTR [rsp+0x48],eax
  40e7b6:	mov    eax,DWORD PTR [rdi+0x10]
  40e7b9:	mov    DWORD PTR [rsp+0x4c],eax
  40e7bd:	call   0x429490
  40e7c2:	lea    rcx,[rax+0x6]
  40e7c6:	mov    rbx,rax
  40e7c9:	call   0x429538
  40e7ce:	mov    rsi,rax
  40e7d1:	xor    eax,eax
  40e7d3:	test   rsi,rsi
  40e7d6:	je     0x40e836
  40e7d8:	lea    r8,[rbx+0x1]
  40e7dc:	mov    rcx,rsi
  40e7df:	mov    rdx,r14
  40e7e2:	call   0x429528
  40e7e7:	mov    rcx,rsi
  40e7ea:	jmp    0x40e801
  40e7ec:	nop    DWORD PTR [rax+0x0]
  40e7f0:	cmp    rsi,rbx
  40e7f3:	jae    0x40e7fd
  40e7f5:	movzx  eax,BYTE PTR [rbx-0x1]
  40e7f9:	cmp    al,0x25
  40e7fb:	jne    0x40e870
  40e7fd:	lea    rcx,[rbx+0x1]
  40e801:	lea    rdx,[rip+0x219d3]        # 0x4301db
  40e808:	call   0x429478
  40e80d:	test   rax,rax
  40e810:	mov    rbx,rax
  40e813:	jne    0x40e7f0
  40e815:	lea    r9,[rsp+0x30]
  40e81a:	mov    r8,rsi
  40e81d:	mov    rdx,r13
  40e820:	mov    rcx,r12
  40e823:	call   0x429498
  40e828:	mov    rcx,rsi
  40e82b:	mov    rbx,rax
  40e82e:	call   0x429580
  40e833:	mov    rax,rbx
  40e836:	add    rsp,0x68
  40e83a:	pop    rbx
  40e83b:	pop    rsi
  40e83c:	pop    rdi
  40e83d:	pop    rbp
  40e83e:	pop    r12
  40e840:	pop    r13
  40e842:	pop    r14
  40e844:	pop    r15
  40e846:	ret    
  40e847:	nop    WORD PTR [rax+rax*1+0x0]
  40e850:	lea    rdx,[rip+0x21702]        # 0x42ff59
  40e857:	lea    rcx,[rip+0x21942]        # 0x4301a0
  40e85e:	mov    r8d,0xba9
  40e864:	call   0x4291e0
  40e869:	jmp    0x40e76b
  40e86e:	xchg   ax,ax
  40e870:	test   ebp,ebp
  40e872:	jne    0x40e87c
  40e874:	cmp    al,0x2e
  40e876:	je     0x40e921
  40e87c:	lea    r15,[rsp+0x20]
  40e881:	mov    r8d,DWORD PTR [rdi+0x24]
  40e885:	lea    rdx,[rip+0x21952]        # 0x4301de
  40e88c:	mov    rcx,r15
  40e88f:	call   0x4294c8
  40e894:	test   ebp,ebp
  40e896:	movsxd rcx,ebp
  40e899:	je     0x40e8af
  40e89b:	xor    eax,eax
  40e89d:	mov    edx,eax
  40e89f:	add    eax,0x1
  40e8a2:	movzx  r8d,BYTE PTR [r15+rdx*1]
  40e8a7:	cmp    eax,ebp
  40e8a9:	mov    BYTE PTR [rbx+rdx*1],r8b
  40e8ad:	jb     0x40e89d
  40e8af:	mov    rax,rbx
  40e8b2:	add    rcx,rbx
  40e8b5:	sub    rax,rsi
  40e8b8:	lea    rdx,[r14+rax*1+0x2]
  40e8bd:	call   0x4294a8
  40e8c2:	jmp    0x40e815
  40e8c7:	lea    rdx,[rip+0x2168b]        # 0x42ff59
  40e8ce:	lea    rcx,[rip+0x218bf]        # 0x430194
  40e8d5:	mov    r8d,0xba7
  40e8db:	call   0x4291e0
  40e8e0:	jmp    0x40e755
  40e8e5:	lea    rdx,[rip+0x2166d]        # 0x42ff59
  40e8ec:	lea    rcx,[rip+0x218a8]        # 0x43019b
  40e8f3:	mov    r8d,0xba8
  40e8f9:	call   0x4291e0
  40e8fe:	jmp    0x40e75e
  40e903:	lea    rdx,[rip+0x2164f]        # 0x42ff59
  40e90a:	lea    rcx,[rip+0x2187f]        # 0x430190
  40e911:	mov    r8d,0xba6
  40e917:	call   0x4291e0
  40e91c:	jmp    0x40e74c
  40e921:	mov    rax,rbx
  40e924:	lea    rcx,[rbx-0x1]
  40e928:	sub    rax,rsi
  40e92b:	lea    rdx,[r14+rax*1+0x2]
  40e930:	call   0x4294a8
  40e935:	jmp    0x40e815
  40e93a:	nop    WORD PTR [rax+rax*1+0x0]
  40e940:	push   rbp
  40e941:	push   rdi
  40e942:	push   rsi
  40e943:	push   rbx
  40e944:	sub    rsp,0x38
  40e948:	mov    rdi,QWORD PTR [rip+0x2a261]        # 0x438bb0
  40e94f:	mov    r8d,DWORD PTR [rdi]
  40e952:	test   r8d,r8d
  40e955:	jne    0x40e9b0
  40e957:	mov    eax,ecx
  40e959:	or     eax,edx
  40e95b:	test   eax,0xffffff00
  40e960:	jne    0x40e9a0
  40e962:	lea    rax,[rip+0x22617]        # 0x430f80
  40e969:	movsxd rcx,ecx
  40e96c:	movsxd rdx,edx
  40e96f:	movzx  r8d,BYTE PTR [rax+rcx*1]
  40e974:	movzx  ecx,BYTE PTR [rax+rdx*1]
  40e978:	lea    rax,[rip+0x225e1]        # 0x430f60
  40e97f:	mov    eax,DWORD PTR [rax+r8*4]
  40e983:	shr    eax,cl
  40e985:	and    eax,0x1
  40e988:	mov    ebp,eax
  40e98a:	nop    WORD PTR [rax+rax*1+0x0]
  40e990:	mov    eax,ebp
  40e992:	add    rsp,0x38
  40e996:	pop    rbx
  40e997:	pop    rsi
  40e998:	pop    rdi
  40e999:	pop    rbp
  40e99a:	ret    
  40e99b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e9a0:	xor    eax,eax
  40e9a2:	add    rsp,0x38
  40e9a6:	pop    rbx
  40e9a7:	pop    rsi
  40e9a8:	pop    rdi
  40e9a9:	pop    rbp
  40e9aa:	ret    
  40e9ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40e9b0:	mov    esi,ecx
  40e9b2:	mov    r9d,ecx
  40e9b5:	lea    r8,[rip+0x2182e]        # 0x4301ea
  40e9bc:	lea    rcx,[rip+0x21596]        # 0x42ff59
  40e9c3:	mov    ebx,edx
  40e9c5:	mov    DWORD PTR [rsp+0x20],edx
  40e9c9:	mov    edx,0xbfb7
  40e9ce:	call   0x423fa0
  40e9d3:	mov    eax,esi
  40e9d5:	or     eax,ebx
  40e9d7:	test   eax,0xffffff00
  40e9dc:	jne    0x40e9a0
  40e9de:	lea    rax,[rip+0x2259b]        # 0x430f80
  40e9e5:	movsxd rdx,esi
  40e9e8:	movsxd rcx,ebx
  40e9eb:	movzx  edx,BYTE PTR [rax+rdx*1]
  40e9ef:	movzx  ecx,BYTE PTR [rax+rcx*1]
  40e9f3:	lea    rax,[rip+0x22566]        # 0x430f60
  40e9fa:	mov    eax,DWORD PTR [rax+rdx*4]
  40e9fd:	shr    eax,cl
  40e9ff:	and    eax,0x1
  40ea02:	mov    ebp,eax
  40ea04:	mov    eax,DWORD PTR [rdi]
  40ea06:	test   eax,eax
  40ea08:	je     0x40e990
  40ea0a:	lea    rcx,[rip+0x217d6]        # 0x4301e7
  40ea11:	lea    rdx,[rip+0x217cb]        # 0x4301e3
  40ea18:	test   ebp,ebp
  40ea1a:	lea    r8,[rip+0x217e7]        # 0x430208
  40ea21:	mov    DWORD PTR [rsp+0x20],ebx
  40ea25:	mov    r9d,esi
  40ea28:	cmove  rdx,rcx
  40ea2c:	lea    rcx,[rip+0x21526]        # 0x42ff59
  40ea33:	mov    QWORD PTR [rsp+0x28],rdx
  40ea38:	mov    edx,0xc077
  40ea3d:	call   0x423fa0
  40ea42:	jmp    0x40e990
  40ea47:	nop    WORD PTR [rax+rax*1+0x0]
  40ea50:	push   r15
  40ea52:	push   r14
  40ea54:	push   r13
  40ea56:	push   r12
  40ea58:	push   rbp
  40ea59:	push   rdi
  40ea5a:	push   rsi
  40ea5b:	push   rbx
  40ea5c:	sub    rsp,0x18
  40ea60:	xor    eax,eax
  40ea62:	lea    rdi,[r8+0x8]
  40ea66:	mov    r9,r8
  40ea69:	mov    r10d,ecx
  40ea6c:	mov    QWORD PTR [r8],0x0
  40ea73:	mov    QWORD PTR [r8+0x24],0x0
  40ea7b:	mov    r11,rdx
  40ea7e:	and    rdi,0xfffffffffffffff8
  40ea82:	sub    r9,rdi
  40ea85:	add    r9d,0x2c
  40ea89:	shr    r9d,0x3
  40ea8d:	mov    ecx,r9d
  40ea90:	rep stos QWORD PTR es:[rdi],rax
  40ea93:	lea    eax,[r10-0x28]
  40ea97:	cmp    eax,0x3
  40ea9a:	ja     0x40ecc2
  40eaa0:	cmp    r10d,0x29
  40eaa4:	je     0x40f030
  40eaaa:	cmp    r10d,0x28
  40eaae:	mov    ecx,DWORD PTR [rdx+0x8]
  40eab1:	je     0x40eeb2
  40eab7:	mov    rbp,QWORD PTR [rdx]
  40eaba:	movabs r9,0xd6bf94d5e57a42bd
  40eac4:	mov    esi,0x88888889
  40eac9:	mov    rax,rbp
  40eacc:	mul    r9
  40eacf:	shr    rdx,0x17
  40ead3:	imul   rax,rdx,0x989680
  40eada:	mov    r9,rdx
  40eadd:	sub    ebp,eax
  40eadf:	mov    eax,edx
  40eae1:	mul    esi
  40eae3:	mov    eax,r9d
  40eae6:	mov    r12d,edx
  40eae9:	mov    edi,edx
  40eaeb:	shr    r12d,0x5
  40eaef:	shr    edi,0x5
  40eaf2:	imul   r12d,r12d,0x3c
  40eaf6:	sub    eax,r12d
  40eaf9:	cmp    r10d,0x2b
  40eafd:	mov    r12d,eax
  40eb00:	jne    0x40f260
  40eb06:	movsx  r15d,WORD PTR [r11+0xc]
  40eb0b:	mov    r9d,0x5b05b06
  40eb11:	lea    edi,[rdi+r15*1+0x5a0]
  40eb19:	mov    edx,edi
  40eb1b:	shr    edx,0x5
  40eb1e:	mov    eax,edx
  40eb20:	mul    r9d
  40eb23:	lea    ecx,[rcx+rdx*1-0x1]
  40eb27:	imul   edx,edx,0x5a0
  40eb2d:	lea    r11d,[rcx+0xb253a]
  40eb34:	add    ecx,0xb253e
  40eb3a:	mov    eax,ecx
  40eb3c:	sub    edi,edx
  40eb3e:	mov    edx,0x92492493
  40eb43:	imul   edx
  40eb45:	mov    eax,ecx
  40eb47:	sar    eax,0x1f
  40eb4a:	lea    r9d,[rdx+rcx*1]
  40eb4e:	mov    edx,0x396b06bd
  40eb53:	sar    r9d,0x2
  40eb57:	sub    r9d,eax
  40eb5a:	lea    eax,[r9*8+0x0]
  40eb62:	sub    eax,r9d
  40eb65:	sub    ecx,eax
  40eb67:	mov    r9d,ecx
  40eb6a:	lea    ecx,[r11*4+0x0]
  40eb72:	mov    eax,ecx
  40eb74:	sar    ecx,0x1f
  40eb77:	imul   edx
  40eb79:	sar    edx,0xf
  40eb7c:	sub    edx,ecx
  40eb7e:	imul   eax,edx,0x23ab1
  40eb84:	mov    r14d,edx
  40eb87:	lea    edx,[rax+0x6]
  40eb8a:	add    eax,0x3
  40eb8d:	cmovs  eax,edx
  40eb90:	mov    edx,0xb7bbe2dd
  40eb95:	sar    eax,0x2
  40eb98:	sub    r11d,eax
  40eb9b:	lea    r10d,[r11+0x1]
  40eb9f:	imul   r10d,r10d,0xfa0
  40eba6:	mov    eax,r10d
  40eba9:	imul   edx
  40ebab:	lea    ecx,[rdx+r10*1]
  40ebaf:	sar    r10d,0x1f
  40ebb3:	sar    ecx,0x14
  40ebb6:	sub    ecx,r10d
  40ebb9:	imul   edx,ecx,0x5b5
  40ebbf:	lea    eax,[rdx+0x3]
  40ebc2:	test   edx,edx
  40ebc4:	cmovns eax,edx
  40ebc7:	mov    edx,0x1ac83d19
  40ebcc:	sub    r14d,0x1
  40ebd0:	sar    eax,0x2
  40ebd3:	sub    r11d,eax
  40ebd6:	lea    r10d,[r11+0x1f]
  40ebda:	imul   r14d,r14d,0x64
  40ebde:	lea    ebx,[r10+r10*4]
  40ebe2:	shl    ebx,0x4
  40ebe5:	add    ecx,r14d
  40ebe8:	lea    r14d,[r11+0x3c]
  40ebec:	mov    eax,ebx
  40ebee:	sar    ebx,0x1f
  40ebf1:	imul   edx
  40ebf3:	sar    edx,0x8
  40ebf6:	sub    edx,ebx
  40ebf8:	imul   ebx,edx,0x98f
  40ebfe:	mov    r13d,edx
  40ec01:	mov    edx,0x66666667
  40ec06:	mov    eax,ebx
  40ec08:	sar    ebx,0x1f
  40ec0b:	imul   edx
  40ec0d:	mov    eax,r13d
  40ec10:	sar    edx,0x5
  40ec13:	sub    ebx,edx
  40ec15:	mov    edx,0x2e8ba2e9
  40ec1a:	imul   edx
  40ec1c:	mov    eax,r13d
  40ec1f:	add    ebx,r10d
  40ec22:	sar    eax,0x1f
  40ec25:	sar    edx,1
  40ec27:	sub    edx,eax
  40ec29:	lea    eax,[rdx+rdx*2]
  40ec2c:	add    ecx,edx
  40ec2e:	mov    r10d,edx
  40ec31:	shl    eax,0x2
  40ec34:	neg    eax
  40ec36:	lea    r13d,[r13+rax*1+0x1]
  40ec3b:	mov    eax,edi
  40ec3d:	mul    esi
  40ec3f:	mov    esi,edx
  40ec41:	mov    edx,0x55555556
  40ec46:	shr    esi,0x5
  40ec49:	imul   eax,esi,0x3c
  40ec4c:	sub    edi,eax
  40ec4e:	mov    eax,r13d
  40ec51:	imul   edx
  40ec53:	mov    eax,r13d
  40ec56:	mov    DWORD PTR [rsp+0xc],edi
  40ec5a:	sar    eax,0x1f
  40ec5d:	mov    edi,edx
  40ec5f:	sub    edi,eax
  40ec61:	cmp    r11d,0x131
  40ec68:	jle    0x40eff2
  40ec6e:	xchg   ax,ax
  40ec70:	lea    r14d,[r11-0x131]
  40ec77:	test   r10d,r10d
  40ec7a:	je     0x40effb
  40ec80:	mov    eax,DWORD PTR [rsp+0xc]
  40ec84:	mov    DWORD PTR [r8],ecx
  40ec87:	mov    DWORD PTR [r8+0x8],r13d
  40ec8b:	mov    DWORD PTR [r8+0x4],edi
  40ec8f:	mov    DWORD PTR [r8+0xc],ebx
  40ec93:	mov    DWORD PTR [r8+0x10],r14d
  40ec97:	mov    DWORD PTR [r8+0x1c],eax
  40ec9b:	mov    DWORD PTR [r8+0x14],r9d
  40ec9f:	xor    eax,eax
  40eca1:	mov    DWORD PTR [r8+0x18],esi
  40eca5:	mov    DWORD PTR [r8+0x20],r12d
  40eca9:	mov    DWORD PTR [r8+0x24],ebp
  40ecad:	mov    DWORD PTR [r8+0x28],r15d
  40ecb1:	add    rsp,0x18
  40ecb5:	pop    rbx
  40ecb6:	pop    rsi
  40ecb7:	pop    rdi
  40ecb8:	pop    rbp
  40ecb9:	pop    r12
  40ecbb:	pop    r13
  40ecbd:	pop    r14
  40ecbf:	pop    r15
  40ecc1:	ret    
  40ecc2:	cmp    r10d,0x3d
  40ecc6:	je     0x40f0c0
  40eccc:	cmp    r10d,0x3a
  40ecd0:	je     0x40f380
  40ecd6:	cmp    r10d,0x31
  40ecda:	je     0x40eeb0
  40ece0:	cmp    r10d,0x33
  40ece4:	je     0x40f4b5
  40ecea:	cmp    r10d,0xbc
  40ecf1:	je     0x40f510
  40ecf7:	cmp    r10d,0xbb
  40ecfe:	mov    eax,0xffffffff
  40ed03:	jne    0x40ecb1
  40ed05:	mov    r9,QWORD PTR [rdx]
  40ed08:	movabs rdx,0x431bde82d7b634db
  40ed12:	movabs rdi,0x8888888888888889
  40ed1c:	mov    rax,r9
  40ed1f:	mul    rdx
  40ed22:	mov    rcx,rdx
  40ed25:	shr    rcx,0x12
  40ed29:	imul   rax,rcx,0xf4240
  40ed30:	sub    r9,rax
  40ed33:	mov    rax,rcx
  40ed36:	mul    rdi
  40ed39:	lea    ebp,[r9+r9*4]
  40ed3d:	add    ebp,ebp
  40ed3f:	mov    rdi,rdx
  40ed42:	movabs rdx,0x2d82d82d82d82d83
  40ed4c:	shr    rdi,0x5
  40ed50:	lea    r12,[rcx+rdi*4]
  40ed54:	mov    rax,rdi
  40ed57:	shl    rax,0x6
  40ed5b:	sub    r12d,eax
  40ed5e:	mov    rax,rdi
  40ed61:	mul    rdx
  40ed64:	shr    rdx,0x8
  40ed68:	imul   rax,rdx,0x5a0
  40ed6f:	lea    ecx,[rdx+0x8e75]
  40ed75:	lea    r11d,[rdx+0x8e71]
  40ed7c:	mov    edx,0x92492493
  40ed81:	sub    rdi,rax
  40ed84:	mov    eax,ecx
  40ed86:	imul   edx
  40ed88:	mov    eax,ecx
  40ed8a:	sar    eax,0x1f
  40ed8d:	lea    r9d,[rdx+rcx*1]
  40ed91:	mov    edx,0x396b06bd
  40ed96:	sar    r9d,0x2
  40ed9a:	sub    r9d,eax
  40ed9d:	lea    eax,[r9*8+0x0]
  40eda5:	sub    eax,r9d
  40eda8:	sub    ecx,eax
  40edaa:	mov    r9d,ecx
  40edad:	lea    ecx,[r11*4+0x0]
  40edb5:	mov    eax,ecx
  40edb7:	sar    ecx,0x1f
  40edba:	imul   edx
  40edbc:	sar    edx,0xf
  40edbf:	mov    esi,edx
  40edc1:	sub    esi,ecx
  40edc3:	imul   eax,esi,0x23ab1
  40edc9:	lea    edx,[rax+0x6]
  40edcc:	add    eax,0x3
  40edcf:	cmovs  eax,edx
  40edd2:	mov    edx,0xb7bbe2dd
  40edd7:	sar    eax,0x2
  40edda:	sub    r11d,eax
  40eddd:	lea    r10d,[r11+0x1]
  40ede1:	imul   r10d,r10d,0xfa0
  40ede8:	mov    eax,r10d
  40edeb:	imul   edx
  40eded:	lea    ecx,[rdx+r10*1]
  40edf1:	sar    r10d,0x1f
  40edf5:	sar    ecx,0x14
  40edf8:	sub    ecx,r10d
  40edfb:	imul   edx,ecx,0x5b5
  40ee01:	lea    eax,[rdx+0x3]
  40ee04:	test   edx,edx
  40ee06:	cmovns eax,edx
  40ee09:	mov    edx,0x1ac83d19
  40ee0e:	sub    esi,0x1
  40ee11:	sar    eax,0x2
  40ee14:	sub    r11d,eax
  40ee17:	lea    r14d,[r11+0x1f]
  40ee1b:	imul   esi,esi,0x64
  40ee1e:	lea    r10d,[r14+r14*4]
  40ee22:	shl    r10d,0x4
  40ee26:	add    ecx,esi
  40ee28:	mov    eax,r10d
  40ee2b:	sar    r10d,0x1f
  40ee2f:	imul   edx
  40ee31:	sar    edx,0x8
  40ee34:	sub    edx,r10d
  40ee37:	imul   ebx,edx,0x98f
  40ee3d:	mov    r13d,edx
  40ee40:	mov    edx,0x66666667
  40ee45:	mov    eax,ebx
  40ee47:	sar    ebx,0x1f
  40ee4a:	imul   edx
  40ee4c:	mov    eax,r13d
  40ee4f:	sar    edx,0x5
  40ee52:	sub    ebx,edx
  40ee54:	mov    edx,0x2e8ba2e9
  40ee59:	imul   edx
  40ee5b:	mov    eax,r13d
  40ee5e:	add    ebx,r14d
  40ee61:	sar    eax,0x1f
  40ee64:	sar    edx,1
  40ee66:	sub    edx,eax
  40ee68:	lea    eax,[rdx+rdx*2]
  40ee6b:	mov    r10d,edx
  40ee6e:	add    ecx,edx
  40ee70:	mov    edx,0x88888889
  40ee75:	shl    eax,0x2
  40ee78:	neg    eax
  40ee7a:	lea    r13d,[r13+rax*1+0x1]
  40ee7f:	mov    eax,edi
  40ee81:	mul    edx
  40ee83:	mov    esi,edx
  40ee85:	shr    esi,0x5
  40ee88:	imul   eax,esi,0x3c
  40ee8b:	sub    edi,eax
  40ee8d:	mov    DWORD PTR [rsp+0xc],edi
  40ee91:	mov    eax,r13d
  40ee94:	mov    edx,0x55555556
  40ee99:	xor    r15d,r15d
  40ee9c:	imul   edx
  40ee9e:	mov    eax,r13d
  40eea1:	sar    eax,0x1f
  40eea4:	mov    edi,edx
  40eea6:	sub    edi,eax
  40eea8:	jmp    0x40efe1
  40eead:	nop    DWORD PTR [rax]
  40eeb0:	mov    ecx,DWORD PTR [rdx]
  40eeb2:	lea    r11d,[rcx+0xb253a]
  40eeb9:	add    ecx,0xb253e
  40eebf:	mov    edx,0x92492493
  40eec4:	mov    eax,ecx
  40eec6:	mov    DWORD PTR [rsp+0xc],0x0
  40eece:	imul   edx
  40eed0:	mov    eax,ecx
  40eed2:	sar    eax,0x1f
  40eed5:	lea    r9d,[rdx+rcx*1]
  40eed9:	mov    edx,0x396b06bd
  40eede:	sar    r9d,0x2
  40eee2:	sub    r9d,eax
  40eee5:	lea    eax,[r9*8+0x0]
  40eeed:	sub    eax,r9d
  40eef0:	sub    ecx,eax
  40eef2:	mov    r9d,ecx
  40eef5:	lea    ecx,[r11*4+0x0]
  40eefd:	mov    eax,ecx
  40eeff:	sar    ecx,0x1f
  40ef02:	imul   edx
  40ef04:	sar    edx,0xf
  40ef07:	mov    esi,edx
  40ef09:	sub    esi,ecx
  40ef0b:	imul   eax,esi,0x23ab1
  40ef11:	lea    edx,[rax+0x6]
  40ef14:	add    eax,0x3
  40ef17:	cmovs  eax,edx
  40ef1a:	mov    edx,0xb7bbe2dd
  40ef1f:	sar    eax,0x2
  40ef22:	sub    r11d,eax
  40ef25:	lea    r10d,[r11+0x1]
  40ef29:	imul   r10d,r10d,0xfa0
  40ef30:	mov    eax,r10d
  40ef33:	imul   edx
  40ef35:	lea    ecx,[rdx+r10*1]
  40ef39:	sar    r10d,0x1f
  40ef3d:	sar    ecx,0x14
  40ef40:	sub    ecx,r10d
  40ef43:	imul   edx,ecx,0x5b5
  40ef49:	lea    eax,[rdx+0x3]
  40ef4c:	test   edx,edx
  40ef4e:	cmovns eax,edx
  40ef51:	mov    edx,0x1ac83d19
  40ef56:	sub    esi,0x1
  40ef59:	sar    eax,0x2
  40ef5c:	xor    r15d,r15d
  40ef5f:	xor    ebp,ebp
  40ef61:	sub    r11d,eax
  40ef64:	xor    r12d,r12d
  40ef67:	lea    ebx,[r11+0x1f]
  40ef6b:	imul   esi,esi,0x64
  40ef6e:	lea    r10d,[rbx+rbx*4]
  40ef72:	shl    r10d,0x4
  40ef76:	add    ecx,esi
  40ef78:	xor    esi,esi
  40ef7a:	mov    eax,r10d
  40ef7d:	sar    r10d,0x1f
  40ef81:	imul   edx
  40ef83:	sar    edx,0x8
  40ef86:	mov    edi,edx
  40ef88:	mov    edx,0x66666667
  40ef8d:	sub    edi,r10d
  40ef90:	imul   r10d,edi,0x98f
  40ef97:	mov    eax,r10d
  40ef9a:	sar    r10d,0x1f
  40ef9e:	imul   edx
  40efa0:	mov    eax,edi
  40efa2:	sar    edx,0x5
  40efa5:	sub    r10d,edx
  40efa8:	mov    edx,0x2e8ba2e9
  40efad:	imul   edx
  40efaf:	mov    eax,edi
  40efb1:	add    ebx,r10d
  40efb4:	sar    eax,0x1f
  40efb7:	sar    edx,1
  40efb9:	sub    edx,eax
  40efbb:	lea    eax,[rdx+rdx*2]
  40efbe:	mov    r10d,edx
  40efc1:	add    ecx,edx
  40efc3:	mov    edx,0x55555556
  40efc8:	shl    eax,0x2
  40efcb:	neg    eax
  40efcd:	lea    r13d,[rdi+rax*1+0x1]
  40efd2:	mov    eax,r13d
  40efd5:	imul   edx
  40efd7:	mov    eax,r13d
  40efda:	sar    eax,0x1f
  40efdd:	mov    edi,edx
  40efdf:	sub    edi,eax
  40efe1:	cmp    r11d,0x131
  40efe8:	lea    r14d,[r11+0x3c]
  40efec:	jg     0x40ec70
  40eff2:	test   r10d,r10d
  40eff5:	jne    0x40ec80
  40effb:	test   cl,0x3
  40effe:	jne    0x40ec80
  40f004:	mov    eax,ecx
  40f006:	mov    edx,0x51eb851f
  40f00b:	mov    r10d,ecx
  40f00e:	imul   edx
  40f010:	sar    r10d,0x1f
  40f014:	mov    eax,edx
  40f016:	sar    eax,0x5
  40f019:	sub    eax,r10d
  40f01c:	imul   eax,eax,0x64
  40f01f:	cmp    ecx,eax
  40f021:	je     0x40f240
  40f027:	add    r14d,0x1
  40f02b:	jmp    0x40ec80
  40f030:	mov    rbp,QWORD PTR [rdx]
  40f033:	movabs rcx,0xd6bf94d5e57a42bd
  40f03d:	mov    rax,rbp
  40f040:	mul    rcx
  40f043:	mov    rcx,rdx
  40f046:	shr    rcx,0x17
  40f04a:	imul   rax,rcx,0x989680
  40f051:	sub    ebp,eax
  40f053:	mov    eax,ecx
  40f055:	mov    esi,0x88888889
  40f05a:	mul    esi
  40f05c:	mov    eax,ecx
  40f05e:	mov    r12d,edx
  40f061:	shr    r12d,0x5
  40f065:	imul   r12d,r12d,0x3c
  40f069:	sub    eax,r12d
  40f06c:	mov    r12d,eax
  40f06f:	mov    ecx,edx
  40f071:	mov    r11d,0x132
  40f077:	xor    edi,edi
  40f079:	shr    ecx,0x5
  40f07c:	xor    r13d,r13d
  40f07f:	mov    r10d,0x1
  40f085:	mov    eax,ecx
  40f087:	mov    ebx,0x1
  40f08c:	mov    r9d,0x1
  40f092:	mul    esi
  40f094:	xor    r15d,r15d
  40f097:	lea    r14d,[r11-0x131]
  40f09e:	mov    esi,edx
  40f0a0:	shr    esi,0x5
  40f0a3:	imul   eax,esi,0x3c
  40f0a6:	sub    ecx,eax
  40f0a8:	mov    DWORD PTR [rsp+0xc],ecx
  40f0ac:	mov    ecx,0x76c
  40f0b1:	jmp    0x40ec77
  40f0b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f0c0:	mov    ecx,DWORD PTR [rdx+0x4]
  40f0c3:	mov    ebp,0x1b4e81b5
  40f0c8:	mov    esi,0x88888889
  40f0cd:	mov    eax,ecx
  40f0cf:	mul    ebp
  40f0d1:	shr    edx,0x5
  40f0d4:	imul   eax,edx,0x12c
  40f0da:	mov    r9d,edx
  40f0dd:	sub    ecx,eax
  40f0df:	imul   ecx,ecx,0x3e8
  40f0e5:	add    ecx,0x96
  40f0eb:	mov    eax,ecx
  40f0ed:	mov    ecx,DWORD PTR [r11]
  40f0f0:	mul    ebp
  40f0f2:	mov    eax,r9d
  40f0f5:	lea    r11d,[rcx+0xb253a]
  40f0fc:	add    ecx,0xb253e
  40f102:	shr    edx,0x5
  40f105:	imul   ebp,edx,0x2710
  40f10b:	mul    esi
  40f10d:	mov    eax,ecx
  40f10f:	mov    r12d,edx
  40f112:	shr    edx,0x5
  40f115:	shr    r12d,0x5
  40f119:	mov    r14d,edx
  40f11c:	mov    edx,0x92492493
  40f121:	imul   r12d,r12d,0x3c
  40f125:	imul   edx
  40f127:	mov    eax,ecx
  40f129:	sar    eax,0x1f
  40f12c:	sub    r9d,r12d
  40f12f:	mov    r12d,r9d
  40f132:	lea    r9d,[rdx+rcx*1]
  40f136:	mov    edx,0x396b06bd
  40f13b:	sar    r9d,0x2
  40f13f:	sub    r9d,eax
  40f142:	lea    eax,[r9*8+0x0]
  40f14a:	sub    eax,r9d
  40f14d:	sub    ecx,eax
  40f14f:	mov    r9d,ecx
  40f152:	lea    ecx,[r11*4+0x0]
  40f15a:	mov    eax,ecx
  40f15c:	sar    ecx,0x1f
  40f15f:	imul   edx
  40f161:	sar    edx,0xf
  40f164:	mov    edi,edx
  40f166:	sub    edi,ecx
  40f168:	imul   eax,edi,0x23ab1
  40f16e:	lea    edx,[rax+0x6]
  40f171:	add    eax,0x3
  40f174:	cmovs  eax,edx
  40f177:	mov    edx,0xb7bbe2dd
  40f17c:	sar    eax,0x2
  40f17f:	sub    r11d,eax
  40f182:	lea    r10d,[r11+0x1]
  40f186:	imul   r10d,r10d,0xfa0
  40f18d:	mov    eax,r10d
  40f190:	imul   edx
  40f192:	lea    ecx,[rdx+r10*1]
  40f196:	sar    r10d,0x1f
  40f19a:	sar    ecx,0x14
  40f19d:	sub    ecx,r10d
  40f1a0:	imul   edx,ecx,0x5b5
  40f1a6:	mov    r15d,ecx
  40f1a9:	lea    eax,[rdx+0x3]
  40f1ac:	test   edx,edx
  40f1ae:	cmovns eax,edx
  40f1b1:	mov    edx,0x1ac83d19
  40f1b6:	sar    eax,0x2
  40f1b9:	sub    r11d,eax
  40f1bc:	lea    ecx,[r11+0x1f]
  40f1c0:	lea    r10d,[rcx+rcx*4]
  40f1c4:	shl    r10d,0x4
  40f1c8:	mov    eax,r10d
  40f1cb:	sar    r10d,0x1f
  40f1cf:	imul   edx
  40f1d1:	sar    edx,0x8
  40f1d4:	sub    edx,r10d
  40f1d7:	imul   ebx,edx,0x98f
  40f1dd:	mov    r13d,edx
  40f1e0:	mov    edx,0x66666667
  40f1e5:	mov    eax,ebx
  40f1e7:	sar    ebx,0x1f
  40f1ea:	imul   edx
  40f1ec:	mov    eax,r13d
  40f1ef:	sar    edx,0x5
  40f1f2:	sub    ebx,edx
  40f1f4:	mov    edx,0x2e8ba2e9
  40f1f9:	imul   edx
  40f1fb:	mov    eax,r13d
  40f1fe:	add    ebx,ecx
  40f200:	sar    eax,0x1f
  40f203:	lea    ecx,[rdi-0x1]
  40f206:	sar    edx,1
  40f208:	sub    edx,eax
  40f20a:	lea    eax,[rdx+rdx*2]
  40f20d:	mov    r10d,edx
  40f210:	imul   ecx,ecx,0x64
  40f213:	shl    eax,0x2
  40f216:	neg    eax
  40f218:	lea    r13d,[r13+rax*1+0x1]
  40f21d:	add    ecx,r15d
  40f220:	mov    eax,r14d
  40f223:	add    ecx,edx
  40f225:	mul    esi
  40f227:	mov    esi,edx
  40f229:	shr    esi,0x5
  40f22c:	imul   eax,esi,0x3c
  40f22f:	sub    r14d,eax
  40f232:	mov    DWORD PTR [rsp+0xc],r14d
  40f237:	jmp    0x40ee91
  40f23c:	nop    DWORD PTR [rax+0x0]
  40f240:	sar    edx,0x7
  40f243:	sub    edx,r10d
  40f246:	imul   edx,edx,0x190
  40f24c:	cmp    ecx,edx
  40f24e:	jne    0x40ec80
  40f254:	jmp    0x40f027
  40f259:	nop    DWORD PTR [rax+0x0]
  40f260:	lea    r11d,[rcx+0xb253a]
  40f267:	add    ecx,0xb253e
  40f26d:	mov    edx,0x92492493
  40f272:	mov    eax,ecx
  40f274:	imul   edx
  40f276:	mov    eax,ecx
  40f278:	sar    eax,0x1f
  40f27b:	lea    r9d,[rdx+rcx*1]
  40f27f:	mov    edx,0x396b06bd
  40f284:	sar    r9d,0x2
  40f288:	sub    r9d,eax
  40f28b:	lea    eax,[r9*8+0x0]
  40f293:	sub    eax,r9d
  40f296:	sub    ecx,eax
  40f298:	mov    r9d,ecx
  40f29b:	lea    ecx,[r11*4+0x0]
  40f2a3:	mov    eax,ecx
  40f2a5:	sar    ecx,0x1f
  40f2a8:	imul   edx
  40f2aa:	sar    edx,0xf
  40f2ad:	sub    edx,ecx
  40f2af:	imul   eax,edx,0x23ab1
  40f2b5:	mov    r14d,edx
  40f2b8:	lea    edx,[rax+0x6]
  40f2bb:	add    eax,0x3
  40f2be:	cmovs  eax,edx
  40f2c1:	mov    edx,0xb7bbe2dd
  40f2c6:	sar    eax,0x2
  40f2c9:	sub    r11d,eax
  40f2cc:	lea    r10d,[r11+0x1]
  40f2d0:	imul   r10d,r10d,0xfa0
  40f2d7:	mov    eax,r10d
  40f2da:	imul   edx
  40f2dc:	lea    ecx,[rdx+r10*1]
  40f2e0:	sar    r10d,0x1f
  40f2e4:	sar    ecx,0x14
  40f2e7:	sub    ecx,r10d
  40f2ea:	imul   edx,ecx,0x5b5
  40f2f0:	lea    eax,[rdx+0x3]
  40f2f3:	test   edx,edx
  40f2f5:	cmovns eax,edx
  40f2f8:	mov    edx,0x1ac83d19
  40f2fd:	sub    r14d,0x1
  40f301:	sar    eax,0x2
  40f304:	sub    r11d,eax
  40f307:	lea    r15d,[r11+0x1f]
  40f30b:	imul   r14d,r14d,0x64
  40f30f:	lea    r10d,[r15+r15*4]
  40f313:	shl    r10d,0x4
  40f317:	add    ecx,r14d
  40f31a:	mov    eax,r10d
  40f31d:	sar    r10d,0x1f
  40f321:	imul   edx
  40f323:	sar    edx,0x8
  40f326:	sub    edx,r10d
  40f329:	imul   r10d,edx,0x98f
  40f330:	mov    r13d,edx
  40f333:	mov    edx,0x66666667
  40f338:	mov    eax,r10d
  40f33b:	sar    r10d,0x1f
  40f33f:	imul   edx
  40f341:	mov    eax,r13d
  40f344:	sar    edx,0x5
  40f347:	sub    r10d,edx
  40f34a:	mov    edx,0x2e8ba2e9
  40f34f:	imul   edx
  40f351:	mov    eax,r13d
  40f354:	lea    ebx,[r15+r10*1]
  40f358:	sar    eax,0x1f
  40f35b:	sar    edx,1
  40f35d:	sub    edx,eax
  40f35f:	lea    eax,[rdx+rdx*2]
  40f362:	mov    r10d,edx
  40f365:	add    ecx,edx
  40f367:	shl    eax,0x2
  40f36a:	neg    eax
  40f36c:	lea    r13d,[r13+rax*1+0x1]
  40f371:	mov    eax,edi
  40f373:	mul    esi
  40f375:	jmp    0x40ee83
  40f37a:	nop    WORD PTR [rax+rax*1+0x0]
  40f380:	movzx  ecx,WORD PTR [rdx]
  40f383:	movzx  edi,WORD PTR [rdx+0x2]
  40f387:	mov    edx,0x92492493
  40f38c:	lea    r11d,[rcx+0xb253a]
  40f393:	add    ecx,0xb253e
  40f399:	mov    eax,ecx
  40f39b:	imul   edx
  40f39d:	lea    esi,[r11*4+0x0]
  40f3a5:	lea    r9d,[rdx+rcx*1]
  40f3a9:	mov    edx,0x396b06bd
  40f3ae:	sar    r9d,0x2
  40f3b2:	lea    eax,[r9*8+0x0]
  40f3ba:	sub    eax,r9d
  40f3bd:	sub    ecx,eax
  40f3bf:	mov    eax,esi
  40f3c1:	imul   edx
  40f3c3:	mov    r9d,ecx
  40f3c6:	mov    esi,edx
  40f3c8:	mov    edx,0xb7bbe2dd
  40f3cd:	shr    esi,0xf
  40f3d0:	imul   eax,esi,0x23ab1
  40f3d6:	add    eax,0x3
  40f3d9:	sar    eax,0x2
  40f3dc:	sub    r11d,eax
  40f3df:	lea    r10d,[r11+0x1]
  40f3e3:	imul   r10d,r10d,0xfa0
  40f3ea:	mov    eax,r10d
  40f3ed:	imul   edx
  40f3ef:	lea    ecx,[rdx+r10*1]
  40f3f3:	sar    r10d,0x1f
  40f3f7:	sar    ecx,0x14
  40f3fa:	sub    ecx,r10d
  40f3fd:	imul   edx,ecx,0x5b5
  40f403:	lea    eax,[rdx+0x3]
  40f406:	test   edx,edx
  40f408:	cmovns eax,edx
  40f40b:	mov    edx,0x1ac83d19
  40f410:	sub    esi,0x1
  40f413:	sar    eax,0x2
  40f416:	xor    r15d,r15d
  40f419:	xor    r12d,r12d
  40f41c:	sub    r11d,eax
  40f41f:	lea    ebx,[r11+0x1f]
  40f423:	imul   esi,esi,0x64
  40f426:	lea    r10d,[rbx+rbx*4]
  40f42a:	shl    r10d,0x4
  40f42e:	add    ecx,esi
  40f430:	mov    eax,r10d
  40f433:	sar    r10d,0x1f
  40f437:	imul   edx
  40f439:	sar    edx,0x8
  40f43c:	sub    edx,r10d
  40f43f:	imul   r10d,edx,0x98f
  40f446:	mov    ebp,edx
  40f448:	mov    edx,0x66666667
  40f44d:	mov    eax,r10d
  40f450:	sar    r10d,0x1f
  40f454:	imul   edx
  40f456:	mov    eax,ebp
  40f458:	sar    edx,0x5
  40f45b:	sub    r10d,edx
  40f45e:	mov    edx,0x2e8ba2e9
  40f463:	imul   edx
  40f465:	mov    eax,ebp
  40f467:	add    ebx,r10d
  40f46a:	sar    eax,0x1f
  40f46d:	sar    edx,1
  40f46f:	sub    edx,eax
  40f471:	lea    eax,[rdx+rdx*2]
  40f474:	mov    r10d,edx
  40f477:	add    ecx,edx
  40f479:	mov    edx,0x88888889
  40f47e:	shl    eax,0x2
  40f481:	neg    eax
  40f483:	lea    r13d,[rbp+rax*1+0x1]
  40f488:	mov    eax,edi
  40f48a:	xor    ebp,ebp
  40f48c:	mul    edx
  40f48e:	mov    esi,edx
  40f490:	mov    edx,0x55555556
  40f495:	shr    esi,0x5
  40f498:	imul   eax,esi,0x3c
  40f49b:	sub    edi,eax
  40f49d:	mov    eax,r13d
  40f4a0:	imul   edx
  40f4a2:	mov    eax,r13d
  40f4a5:	mov    DWORD PTR [rsp+0xc],edi
  40f4a9:	sar    eax,0x1f
  40f4ac:	mov    edi,edx
  40f4ae:	sub    edi,eax
  40f4b0:	jmp    0x40efe1
  40f4b5:	mov    ecx,DWORD PTR [rdx]
  40f4b7:	mov    r9d,0x1b4e81b5
  40f4bd:	mov    esi,0x88888889
  40f4c2:	mov    eax,ecx
  40f4c4:	mul    r9d
  40f4c7:	shr    edx,0x5
  40f4ca:	imul   eax,edx,0x12c
  40f4d0:	mov    r10d,edx
  40f4d3:	sub    ecx,eax
  40f4d5:	imul   ecx,ecx,0x3e8
  40f4db:	add    ecx,0x96
  40f4e1:	mov    eax,ecx
  40f4e3:	mul    r9d
  40f4e6:	mov    eax,r10d
  40f4e9:	mov    ecx,edx
  40f4eb:	mul    esi
  40f4ed:	shr    ecx,0x5
  40f4f0:	imul   ebp,ecx,0x2710
  40f4f6:	mov    r12d,edx
  40f4f9:	shr    r12d,0x5
  40f4fd:	imul   r12d,r12d,0x3c
  40f501:	sub    r10d,r12d
  40f504:	mov    r12d,r10d
  40f507:	jmp    0x40f06f
  40f50c:	nop    DWORD PTR [rax+0x0]
  40f510:	mov    r9,QWORD PTR [rdx]
  40f513:	movabs rdx,0x431bde82d7b634db
  40f51d:	mov    rax,r9
  40f520:	mul    rdx
  40f523:	mov    rcx,rdx
  40f526:	movabs rdx,0xc22e450672894ab7
  40f530:	shr    rcx,0x12
  40f534:	imul   rax,rcx,0xf4240
  40f53b:	sub    r9,rax
  40f53e:	mov    rax,rcx
  40f541:	mul    rdx
  40f544:	lea    ebp,[r9+r9*4]
  40f548:	add    ebp,ebp
  40f54a:	shr    rdx,0x10
  40f54e:	imul   rdx,rdx,0x15180
  40f555:	sub    rcx,rdx
  40f558:	jmp    0x40f053
  40f55d:	nop    DWORD PTR [rax]
  40f560:	push   r12
  40f562:	push   rbp
  40f563:	push   rdi
  40f564:	push   rsi
  40f565:	push   rbx
  40f566:	sub    rsp,0xa0
  40f56d:	mov    rdi,QWORD PTR [rsp+0xf0]
  40f575:	cmp    r9d,0x33
  40f579:	je     0x40f7d5
  40f57f:	jle    0x40f670
  40f585:	cmp    r9d,0xaf
  40f58c:	je     0x40f750
  40f592:	jg     0x40f600
  40f594:	cmp    r9d,0x3d
  40f598:	je     0x40f6e0
  40f59e:	cmp    r9d,0xa7
  40f5a5:	je     0x40f750
  40f5ab:	cmp    r9d,0x3a
  40f5af:	jne    0x40f694
  40f5b5:	mov    eax,DWORD PTR [r8+0x8]
  40f5b9:	cmp    eax,0xffff
  40f5be:	ja     0x40f80d
  40f5c4:	mov    WORD PTR [rdi],ax
  40f5c7:	mov    rdx,QWORD PTR [r8]
  40f5ca:	lea    rax,[rdx+0x11e1a300]
  40f5d1:	movabs rdx,0xe5109ec205d7bea7
  40f5db:	mul    rdx
  40f5de:	mov    eax,0x4
  40f5e3:	shr    rdx,0x1d
  40f5e7:	mov    WORD PTR [rdi+0x2],dx
  40f5eb:	add    rsp,0xa0
  40f5f2:	pop    rbx
  40f5f3:	pop    rsi
  40f5f4:	pop    rdi
  40f5f5:	pop    rbp
  40f5f6:	pop    r12
  40f5f8:	ret    
  40f5f9:	nop    DWORD PTR [rax+0x0]
  40f600:	cmp    r9d,0xbc
  40f607:	je     0x40f720
  40f60d:	cmp    r9d,0x100
  40f614:	je     0x40f750
  40f61a:	cmp    r9d,0xbb
  40f621:	jne    0x40f694
  40f623:	mov    eax,DWORD PTR [r8+0x8]
  40f627:	movabs rdx,0x141dd76000
  40f631:	movabs rcx,0xcccccccccccccccd
  40f63b:	add    eax,0xa96c9
  40f640:	cdqe   
  40f642:	imul   rax,rdx
  40f646:	mov    rdx,QWORD PTR [r8]
  40f649:	mov    r9,rax
  40f64c:	mov    rax,rdx
  40f64f:	mul    rcx
  40f652:	mov    eax,0x8
  40f657:	shr    rdx,0x3
  40f65b:	add    rdx,r9
  40f65e:	mov    QWORD PTR [rdi],rdx
  40f661:	add    rsp,0xa0
  40f668:	pop    rbx
  40f669:	pop    rsi
  40f66a:	pop    rdi
  40f66b:	pop    rbp
  40f66c:	pop    r12
  40f66e:	ret    
  40f66f:	nop
  40f670:	cmp    r9d,0x2b
  40f674:	jg     0x40f6b0
  40f676:	cmp    r9d,0x28
  40f67a:	jge    0x40f7b4
  40f680:	cmp    r9d,0x23
  40f684:	je     0x40f750
  40f68a:	cmp    r9d,0x27
  40f68e:	je     0x40f750
  40f694:	mov    eax,0xfffffffe
  40f699:	add    rsp,0xa0
  40f6a0:	pop    rbx
  40f6a1:	pop    rsi
  40f6a2:	pop    rdi
  40f6a3:	pop    rbp
  40f6a4:	pop    r12
  40f6a6:	ret    
  40f6a7:	nop    WORD PTR [rax+rax*1+0x0]
  40f6b0:	cmp    r9d,0x2f
  40f6b4:	je     0x40f750
  40f6ba:	cmp    r9d,0x31
  40f6be:	jne    0x40f694
  40f6c0:	mov    eax,DWORD PTR [r8+0x8]
  40f6c4:	mov    DWORD PTR [rdi],eax
  40f6c6:	mov    eax,0x4
  40f6cb:	add    rsp,0xa0
  40f6d2:	pop    rbx
  40f6d3:	pop    rsi
  40f6d4:	pop    rdi
  40f6d5:	pop    rbp
  40f6d6:	pop    r12
  40f6d8:	ret    
  40f6d9:	nop    DWORD PTR [rax+0x0]
  40f6e0:	mov    eax,DWORD PTR [r8+0x8]
  40f6e4:	movabs rcx,0xa7c5ac471b47843
  40f6ee:	mov    DWORD PTR [rdi],eax
  40f6f0:	mov    rax,QWORD PTR [r8]
  40f6f3:	lea    rdx,[rax+rax*2+0xc350]
  40f6fb:	shr    rdx,0x5
  40f6ff:	mov    rax,rdx
  40f702:	mul    rcx
  40f705:	mov    eax,0x8
  40f70a:	shr    rdx,0x7
  40f70e:	mov    DWORD PTR [rdi+0x4],edx
  40f711:	add    rsp,0xa0
  40f718:	pop    rbx
  40f719:	pop    rsi
  40f71a:	pop    rdi
  40f71b:	pop    rbp
  40f71c:	pop    r12
  40f71e:	ret    
  40f71f:	nop
  40f720:	mov    rax,QWORD PTR [r8]
  40f723:	movabs rdx,0xcccccccccccccccd
  40f72d:	mul    rdx
  40f730:	mov    eax,0x8
  40f735:	shr    rdx,0x3
  40f739:	mov    QWORD PTR [rdi],rdx
  40f73c:	add    rsp,0xa0
  40f743:	pop    rbx
  40f744:	pop    rsi
  40f745:	pop    rdi
  40f746:	pop    rbp
  40f747:	pop    r12
  40f749:	ret    
  40f74a:	nop    WORD PTR [rax+rax*1+0x0]
  40f750:	lea    r12,[rsp+0x30]
  40f755:	mov    rsi,r8
  40f758:	mov    eax,edx
  40f75a:	mov    rbp,rcx
  40f75d:	mov    rdx,rsi
  40f760:	mov    ecx,eax
  40f762:	mov    r8,r12
  40f765:	mov    ebx,r9d
  40f768:	call   0x40ea50
  40f76d:	mov    rax,QWORD PTR [rbp+0x0]
  40f771:	lea    rbp,[rsp+0x60]
  40f776:	mov    r9,r12
  40f779:	mov    edx,0x40
  40f77e:	mov    rcx,rbp
  40f781:	mov    r8,QWORD PTR [rax+0x10]
  40f785:	movzx  eax,BYTE PTR [rsi+0xe]
  40f789:	and    eax,0x7
  40f78c:	mov    DWORD PTR [rsp+0x20],eax
  40f790:	call   0x40e720
  40f795:	lea    r9,[rdi+0x8]
  40f799:	mov    r8,rdi
  40f79c:	mov    rdx,rbp
  40f79f:	mov    ecx,ebx
  40f7a1:	call   0x40e010
  40f7a6:	add    rsp,0xa0
  40f7ad:	pop    rbx
  40f7ae:	pop    rsi
  40f7af:	pop    rdi
  40f7b0:	pop    rbp
  40f7b1:	pop    r12
  40f7b3:	ret    
  40f7b4:	mov    rax,QWORD PTR [r8]
  40f7b7:	mov    rdx,QWORD PTR [r8+0x8]
  40f7bb:	mov    QWORD PTR [rdi],rax
  40f7be:	mov    eax,0x10
  40f7c3:	mov    QWORD PTR [rdi+0x8],rdx
  40f7c7:	add    rsp,0xa0
  40f7ce:	pop    rbx
  40f7cf:	pop    rsi
  40f7d0:	pop    rdi
  40f7d1:	pop    rbp
  40f7d2:	pop    r12
  40f7d4:	ret    
  40f7d5:	mov    rax,QWORD PTR [r8]
  40f7d8:	movabs rcx,0xa7c5ac471b47843
  40f7e2:	lea    rdx,[rax+rax*2+0xc350]
  40f7ea:	shr    rdx,0x5
  40f7ee:	mov    rax,rdx
  40f7f1:	mul    rcx
  40f7f4:	mov    eax,0x4
  40f7f9:	shr    rdx,0x7
  40f7fd:	mov    DWORD PTR [rdi],edx
  40f7ff:	add    rsp,0xa0
  40f806:	pop    rbx
  40f807:	pop    rsi
  40f808:	pop    rdi
  40f809:	pop    rbp
  40f80a:	pop    r12
  40f80c:	ret    
  40f80d:	mov    eax,0xfffffffb
  40f812:	jmp    0x40f6cb
  40f817:	nop    WORD PTR [rax+rax*1+0x0]
  40f820:	push   rbp
  40f821:	push   rdi
  40f822:	push   rsi
  40f823:	push   rbx
  40f824:	sub    rsp,0xa8
  40f82b:	mov    rsi,QWORD PTR [rsp+0xf0]
  40f833:	cmp    r8d,0x33
  40f837:	mov    rdi,rcx
  40f83a:	mov    r10,rdx
  40f83d:	mov    ebx,r8d
  40f840:	je     0x40fab2
  40f846:	jle    0x40f930
  40f84c:	cmp    r8d,0xaf
  40f853:	je     0x40f9e0
  40f859:	jg     0x40f8b5
  40f85b:	cmp    r8d,0x3d
  40f85f:	je     0x40f990
  40f865:	cmp    r8d,0xa7
  40f86c:	je     0x40f9e0
  40f872:	cmp    r8d,0x3a
  40f876:	jne    0x40f954
  40f87c:	mov    eax,DWORD PTR [rdx]
  40f87e:	cmp    eax,0xffff
  40f883:	ja     0x40fafa
  40f889:	mov    WORD PTR [rsi],ax
  40f88c:	mov    ecx,DWORD PTR [rdx+0x4]
  40f88f:	mov    edx,0x7482296b
  40f894:	mov    eax,ecx
  40f896:	sar    ecx,0x1f
  40f899:	imul   edx
  40f89b:	mov    eax,0x4
  40f8a0:	sar    edx,0xd
  40f8a3:	sub    edx,ecx
  40f8a5:	mov    WORD PTR [rsi+0x2],dx
  40f8a9:	add    rsp,0xa8
  40f8b0:	pop    rbx
  40f8b1:	pop    rsi
  40f8b2:	pop    rdi
  40f8b3:	pop    rbp
  40f8b4:	ret    
  40f8b5:	cmp    r8d,0xbc
  40f8bc:	je     0x40f9b0
  40f8c2:	cmp    r8d,0x100
  40f8c9:	je     0x40f9e0
  40f8cf:	cmp    r8d,0xbb
  40f8d6:	jne    0x40f954
  40f8d8:	mov    eax,DWORD PTR [rdx]
  40f8da:	movabs rdx,0x141dd76000
  40f8e4:	movabs rcx,0xaaaaaaaaaaaaaaab
  40f8ee:	add    eax,0xa96c9
  40f8f3:	cdqe   
  40f8f5:	imul   rax,rdx
  40f8f9:	movsxd rdx,DWORD PTR [r10+0x4]
  40f8fd:	imul   rdx,rdx,0x2710
  40f904:	mov    r8,rax
  40f907:	mov    rax,rdx
  40f90a:	mul    rcx
  40f90d:	mov    eax,0x8
  40f912:	shr    rdx,1
  40f915:	add    rdx,r8
  40f918:	mov    QWORD PTR [rsi],rdx
  40f91b:	add    rsp,0xa8
  40f922:	pop    rbx
  40f923:	pop    rsi
  40f924:	pop    rdi
  40f925:	pop    rbp
  40f926:	ret    
  40f927:	nop    WORD PTR [rax+rax*1+0x0]
  40f930:	cmp    r8d,0x2b
  40f934:	jg     0x40f965
  40f936:	cmp    r8d,0x28
  40f93a:	jge    0x40fa40
  40f940:	cmp    r8d,0x23
  40f944:	je     0x40f9e0
  40f94a:	cmp    r8d,0x27
  40f94e:	je     0x40f9e0
  40f954:	mov    eax,0xfffffffe
  40f959:	add    rsp,0xa8
  40f960:	pop    rbx
  40f961:	pop    rsi
  40f962:	pop    rdi
  40f963:	pop    rbp
  40f964:	ret    
  40f965:	cmp    r8d,0x2f
  40f969:	je     0x40f9e0
  40f96b:	cmp    r8d,0x31
  40f96f:	jne    0x40f954
  40f971:	mov    eax,DWORD PTR [rdx]
  40f973:	mov    DWORD PTR [rsi],eax
  40f975:	mov    eax,0x4
  40f97a:	add    rsp,0xa8
  40f981:	pop    rbx
  40f982:	pop    rsi
  40f983:	pop    rdi
  40f984:	pop    rbp
  40f985:	ret    
  40f986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f990:	mov    rax,QWORD PTR [rdx]
  40f993:	mov    QWORD PTR [rsi],rax
  40f996:	mov    eax,0x8
  40f99b:	add    rsp,0xa8
  40f9a2:	pop    rbx
  40f9a3:	pop    rsi
  40f9a4:	pop    rdi
  40f9a5:	pop    rbp
  40f9a6:	ret    
  40f9a7:	nop    WORD PTR [rax+rax*1+0x0]
  40f9b0:	movsxd rdx,DWORD PTR [rdx+0x4]
  40f9b4:	imul   rax,rdx,0x2710
  40f9bb:	movabs rdx,0xaaaaaaaaaaaaaaab
  40f9c5:	mul    rdx
  40f9c8:	mov    eax,0x8
  40f9cd:	shr    rdx,1
  40f9d0:	mov    QWORD PTR [rsi],rdx
  40f9d3:	add    rsp,0xa8
  40f9da:	pop    rbx
  40f9db:	pop    rsi
  40f9dc:	pop    rdi
  40f9dd:	pop    rbp
  40f9de:	ret    
  40f9df:	nop
  40f9e0:	lea    rbp,[rsp+0x30]
  40f9e5:	mov    rdx,r10
  40f9e8:	mov    ecx,0x3d
  40f9ed:	mov    r8,rbp
  40f9f0:	call   0x40ea50
  40f9f5:	mov    rax,QWORD PTR [rdi]
  40f9f8:	lea    rdi,[rsp+0x60]
  40f9fd:	mov    r9,rbp
  40fa00:	mov    edx,0x40
  40fa05:	mov    rcx,rdi
  40fa08:	mov    r8,QWORD PTR [rax+0x10]
  40fa0c:	mov    DWORD PTR [rsp+0x20],0x3
  40fa14:	call   0x40e720
  40fa19:	lea    r9,[rsi+0x8]
  40fa1d:	mov    r8,rsi
  40fa20:	mov    rdx,rdi
  40fa23:	mov    ecx,ebx
  40fa25:	call   0x40e010
  40fa2a:	add    rsp,0xa8
  40fa31:	pop    rbx
  40fa32:	pop    rsi
  40fa33:	pop    rdi
  40fa34:	pop    rbp
  40fa35:	ret    
  40fa36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fa40:	and    r9d,0x7
  40fa44:	cmp    r8d,0x2b
  40fa48:	mov    QWORD PTR [rsi+0x8],0x0
  40fa50:	mov    QWORD PTR [rsi],0x0
  40fa57:	mov    BYTE PTR [rsi+0xe],r9b
  40fa5b:	movzx  ecx,BYTE PTR [rsi+0xf]
  40fa5f:	je     0x40fad0
  40fa61:	cmp    r8d,0x28
  40fa65:	je     0x40fa95
  40fa67:	or     ecx,0x20
  40fa6a:	mov    BYTE PTR [rsi+0xe],0x3
  40fa6e:	mov    BYTE PTR [rsi+0xf],cl
  40fa71:	movsxd rdx,DWORD PTR [rdx+0x4]
  40fa75:	imul   rax,rdx,0x186a0
  40fa7c:	movabs rdx,0xaaaaaaaaaaaaaaab
  40fa86:	mul    rdx
  40fa89:	shr    rdx,1
  40fa8c:	cmp    r8d,0x29
  40fa90:	mov    QWORD PTR [rsi],rdx
  40fa93:	je     0x40faa1
  40fa95:	or     ecx,0x40
  40fa98:	mov    BYTE PTR [rsi+0xf],cl
  40fa9b:	mov    eax,DWORD PTR [r10]
  40fa9e:	mov    DWORD PTR [rsi+0x8],eax
  40faa1:	mov    eax,0x10
  40faa6:	add    rsp,0xa8
  40faad:	pop    rbx
  40faae:	pop    rsi
  40faaf:	pop    rdi
  40fab0:	pop    rbp
  40fab1:	ret    
  40fab2:	mov    eax,DWORD PTR [rdx+0x4]
  40fab5:	mov    DWORD PTR [rsi],eax
  40fab7:	mov    eax,0x4
  40fabc:	add    rsp,0xa8
  40fac3:	pop    rbx
  40fac4:	pop    rsi
  40fac5:	pop    rdi
  40fac6:	pop    rbp
  40fac7:	ret    
  40fac8:	nop    DWORD PTR [rax+rax*1+0x0]
  40fad0:	or     ecx,0xffffffa0
  40fad3:	mov    BYTE PTR [rsi+0xe],0x3
  40fad7:	mov    BYTE PTR [rsi+0xf],cl
  40fada:	movsxd rdx,DWORD PTR [rdx+0x4]
  40fade:	imul   rax,rdx,0x186a0
  40fae5:	movabs rdx,0xaaaaaaaaaaaaaaab
  40faef:	mul    rdx
  40faf2:	shr    rdx,1
  40faf5:	mov    QWORD PTR [rsi],rdx
  40faf8:	jmp    0x40fa95
  40fafa:	mov    eax,0xfffffffb
  40faff:	jmp    0x40f97a
  40fb04:	xchg   ax,ax
  40fb06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fb10:	push   r15
  40fb12:	push   r14
  40fb14:	push   r13
  40fb16:	push   r12
  40fb18:	push   rbp
  40fb19:	push   rdi
  40fb1a:	push   rsi
  40fb1b:	push   rbx
  40fb1c:	sub    rsp,0x188
  40fb23:	mov    ebx,DWORD PTR [rsp+0x1f0]
  40fb2a:	mov    rbp,QWORD PTR [rsp+0x1f8]
  40fb32:	test   r9d,r9d
  40fb35:	mov    rsi,rcx
  40fb38:	mov    edi,edx
  40fb3a:	mov    r12,r8
  40fb3d:	js     0x40fc40
  40fb43:	cmp    edi,0x62
  40fb46:	je     0x40fbc0
  40fb48:	cmp    ebx,0xa5
  40fb4e:	je     0x40fba0
  40fb50:	jg     0x40fb82
  40fb52:	cmp    ebx,0x25
  40fb55:	je     0x40fba0
  40fb57:	cmp    ebx,0x2d
  40fb5a:	je     0x40fba0
  40fb5c:	cmp    ebx,0x22
  40fb5f:	je     0x40fba0
  40fb61:	lea    r10d,[rdi-0x22]
  40fb65:	cmp    r10d,0xdf
  40fb6c:	ja     0x410330
  40fb72:	lea    rdx,[rip+0x20943]        # 0x4304bc
  40fb79:	movsxd rax,DWORD PTR [rdx+r10*4]
  40fb7d:	add    rdx,rax
  40fb80:	jmp    rdx
  40fb82:	cmp    ebx,0xe1
  40fb88:	je     0x40fba0
  40fb8a:	cmp    ebx,0x101
  40fb90:	je     0x40fba0
  40fb92:	cmp    ebx,0xad
  40fb98:	jne    0x40fb61
  40fb9a:	nop    WORD PTR [rax+rax*1+0x0]
  40fba0:	sub    edi,0x22
  40fba3:	cmp    edi,0xdf
  40fba9:	ja     0x410330
  40fbaf:	lea    rax,[rip+0x20c86]        # 0x43083c
  40fbb6:	movsxd rdx,DWORD PTR [rax+rdi*4]
  40fbba:	add    rax,rdx
  40fbbd:	jmp    rax
  40fbbf:	nop
  40fbc0:	mov    edi,DWORD PTR [r12+0x10]
  40fbc5:	mov    r9d,DWORD PTR [r12+0xc]
  40fbca:	mov    r12,QWORD PTR [r12]
  40fbce:	jmp    0x40fb48
  40fbd3:	mov    esi,0x4
  40fbd8:	cmp    ebx,0x101
  40fbde:	je     0x40fc70
  40fbe4:	mov    rcx,rsi
  40fbe7:	call   0x429538
  40fbec:	test   rax,rax
  40fbef:	mov    QWORD PTR [rbp+0x0],rax
  40fbf3:	je     0x411b50
  40fbf9:	mov    r8,rsi
  40fbfc:	mov    rdx,r12
  40fbff:	mov    rcx,rax
  40fc02:	call   0x429528
  40fc07:	nop    WORD PTR [rax+rax*1+0x0]
  40fc10:	mov    eax,esi
  40fc12:	add    rsp,0x188
  40fc19:	pop    rbx
  40fc1a:	pop    rsi
  40fc1b:	pop    rdi
  40fc1c:	pop    rbp
  40fc1d:	pop    r12
  40fc1f:	pop    r13
  40fc21:	pop    r14
  40fc23:	pop    r15
  40fc25:	ret    
  40fc26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fc30:	mov    esi,0x8
  40fc35:	jmp    0x40fbd8
  40fc37:	nop    WORD PTR [rax+rax*1+0x0]
  40fc40:	lea    rdx,[rip+0x20312]        # 0x42ff59
  40fc47:	lea    rcx,[rip+0x205e2]        # 0x430230
  40fc4e:	mov    r8d,0x75e
  40fc54:	mov    DWORD PTR [rsp+0x78],r9d
  40fc59:	call   0x4291e0
  40fc5e:	mov    r9d,DWORD PTR [rsp+0x78]
  40fc63:	jmp    0x40fb43
  40fc68:	nop    DWORD PTR [rax+rax*1+0x0]
  40fc70:	mov    r8d,DWORD PTR [rbp+0x8]
  40fc74:	mov    rcx,QWORD PTR [rbp+0x0]
  40fc78:	mov    rdx,r12
  40fc7b:	cmp    rsi,r8
  40fc7e:	cmovbe r8,rsi
  40fc82:	call   0x429528
  40fc87:	jmp    0x40fc10
  40fc89:	nop    DWORD PTR [rax+0x0]
  40fc90:	cmp    ebx,0xbc
  40fc96:	jne    0x411010
  40fc9c:	mov    rax,QWORD PTR [r12]
  40fca0:	mov    edx,0x1
  40fca5:	mov    esi,0x8
  40fcaa:	mov    QWORD PTR [rbp+0x0],rax
  40fcae:	xchg   ax,ax
  40fcb0:	cmp    ebx,0x3c
  40fcb3:	sete   al
  40fcb6:	and    eax,edx
  40fcb8:	test   al,al
  40fcba:	je     0x40fc10
  40fcc0:	rol    QWORD PTR [rbp+0x0],0x20
  40fcc5:	mov    eax,esi
  40fcc7:	jmp    0x40fc12
  40fccc:	nop    DWORD PTR [rax+0x0]
  40fcd0:	cmp    ebx,0x3c
  40fcd3:	jle    0x410f30
  40fcd9:	cmp    ebx,0x7a
  40fcdc:	je     0x4111fa
  40fce2:	jle    0x4111e3
  40fce8:	cmp    ebx,0xa7
  40fcee:	je     0x411171
  40fcf4:	jle    0x41251a
  40fcfa:	cmp    ebx,0xaf
  40fd00:	je     0x411171
  40fd06:	cmp    ebx,0x100
  40fd0c:	jne    0x410f5a
  40fd12:	mov    eax,DWORD PTR [rbp+0x8]
  40fd15:	lea    esi,[r9+r9*1]
  40fd19:	mov    r9,QWORD PTR [rbp+0x0]
  40fd1d:	cmp    esi,eax
  40fd1f:	cmovbe eax,esi
  40fd22:	cmp    eax,0x1
  40fd25:	jle    0x4127e5
  40fd2b:	lea    r10d,[rax-0x2]
  40fd2f:	lea    r8,[rip+0x2134a]        # 0x431080
  40fd36:	xor    eax,eax
  40fd38:	mov    r11d,r10d
  40fd3b:	shr    r11d,1
  40fd3e:	mov    ecx,r11d
  40fd41:	add    rcx,0x1
  40fd45:	movzx  edx,BYTE PTR [r12+rax*1]
  40fd4a:	shr    dl,0x4
  40fd4d:	and    edx,0xf
  40fd50:	movzx  edx,BYTE PTR [r8+rdx*1]
  40fd55:	mov    BYTE PTR [r9+rax*2],dl
  40fd59:	movzx  edx,BYTE PTR [r12+rax*1]
  40fd5e:	and    edx,0xf
  40fd61:	movzx  edx,BYTE PTR [r8+rdx*1]
  40fd66:	mov    BYTE PTR [r9+rax*2+0x1],dl
  40fd6b:	add    rax,0x1
  40fd6f:	cmp    rax,rcx
  40fd72:	jne    0x40fd45
  40fd74:	lea    edx,[r11+0x1]
  40fd78:	neg    r11d
  40fd7b:	lea    r9,[r9+rax*2]
  40fd7f:	lea    eax,[r10+r11*2]
  40fd83:	test   eax,eax
  40fd85:	je     0x40fc10
  40fd8b:	movsxd rdx,edx
  40fd8e:	movzx  eax,BYTE PTR [r12+rdx*1]
  40fd93:	lea    rdx,[rip+0x212e6]        # 0x431080
  40fd9a:	shr    al,0x4
  40fd9d:	and    eax,0xf
  40fda0:	movzx  eax,BYTE PTR [rdx+rax*1]
  40fda4:	mov    BYTE PTR [r9],al
  40fda7:	jmp    0x40fc10
  40fdac:	nop    DWORD PTR [rax+0x0]
  40fdb0:	cmp    ebx,0x2f
  40fdb3:	je     0x4110e0
  40fdb9:	jg     0x4110b0
  40fdbf:	cmp    ebx,0x24
  40fdc2:	jne    0x4110d2
  40fdc8:	mov    rax,QWORD PTR [r12]
  40fdcc:	mov    esi,0x10
  40fdd1:	mov    QWORD PTR [rbp+0x0],rax
  40fdd5:	mov    rax,QWORD PTR [r12+0x8]
  40fdda:	mov    QWORD PTR [rbp+0x8],rax
  40fdde:	jmp    0x40fc10
  40fde3:	mov    QWORD PTR [rsp+0x20],rbp
  40fde8:	mov    r9d,ebx
  40fdeb:	mov    r8,r12
  40fdee:	mov    edx,edi
  40fdf0:	mov    rcx,rsi
  40fdf3:	call   0x40f560
  40fdf8:	nop    DWORD PTR [rax+rax*1+0x0]
  40fe00:	mov    esi,eax
  40fe02:	test   esi,esi
  40fe04:	setg   dl
  40fe07:	jmp    0x40fcb0
  40fe0c:	nop    DWORD PTR [rax+0x0]
  40fe10:	movzx  ecx,BYTE PTR [r12]
  40fe15:	mov    r8,rbp
  40fe18:	mov    edx,ebx
  40fe1a:	call   0x40e0a0
  40fe1f:	jmp    0x40fe00
  40fe21:	cmp    ebx,0x31
  40fe24:	mov    eax,DWORD PTR [r12]
  40fe28:	jne    0x411090
  40fe2e:	mov    DWORD PTR [rbp+0x0],eax
  40fe31:	mov    edx,0x1
  40fe36:	mov    esi,0x4
  40fe3b:	jmp    0x40fcb0
  40fe40:	lea    eax,[rbx-0x23]
  40fe43:	cmp    eax,0xdd
  40fe48:	ja     0x410a7e
  40fe4e:	lea    rdx,[rip+0x20d67]        # 0x430bbc
  40fe55:	movsxd rax,DWORD PTR [rdx+rax*4]
  40fe59:	add    rdx,rax
  40fe5c:	jmp    rdx
  40fe5e:	xchg   ax,ax
  40fe60:	xor    ecx,ecx
  40fe62:	cmp    BYTE PTR [r12],0x0
  40fe67:	mov    r8,rbp
  40fe6a:	mov    edx,ebx
  40fe6c:	setne  cl
  40fe6f:	call   0x40e0a0
  40fe74:	jmp    0x40fe00
  40fe76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fe80:	cmp    ebx,0x40
  40fe83:	movsd  xmm0,QWORD PTR [r12]
  40fe89:	je     0x4116f9
  40fe8f:	jg     0x410d00
  40fe95:	cmp    ebx,0x32
  40fe98:	je     0x411e77
  40fe9e:	jle    0x4116d8
  40fea4:	cmp    ebx,0x3b
  40fea7:	je     0x4124ce
  40fead:	jg     0x411523
  40feb3:	cmp    ebx,0x34
  40feb6:	je     0x4121d4
  40febc:	cmp    ebx,0x38
  40febf:	jne    0x4121ca
  40fec5:	ucomisd xmm0,QWORD PTR [rip+0x2123b]        # 0x431108
  40fecd:	jb     0x412eeb
  40fed3:	movsd  xmm1,QWORD PTR [rip+0x21235]        # 0x431110
  40fedb:	ucomisd xmm1,xmm0
  40fedf:	jb     0x41349d
  40fee5:	cvttsd2si eax,xmm0
  40fee9:	mov    esi,0x4
  40feee:	mov    DWORD PTR [rbp+0x0],eax
  40fef1:	jmp    0x40fc10
  40fef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ff00:	movzx  ecx,WORD PTR [r12]
  40ff05:	mov    r8,rbp
  40ff08:	mov    edx,ebx
  40ff0a:	call   0x40e0a0
  40ff0f:	jmp    0x40fe00
  40ff14:	cmp    ebx,0x3a
  40ff17:	jne    0x410f64
  40ff1d:	mov    eax,DWORD PTR [r12]
  40ff21:	mov    edx,0x1
  40ff26:	mov    esi,0x4
  40ff2b:	mov    DWORD PTR [rbp+0x0],eax
  40ff2e:	jmp    0x40fcb0
  40ff33:	cmp    ebx,0x40
  40ff36:	movss  xmm0,DWORD PTR [r12]
  40ff3c:	je     0x41179e
  40ff42:	jg     0x410e20
  40ff48:	cmp    ebx,0x32
  40ff4b:	je     0x411d0c
  40ff51:	jle    0x41177d
  40ff57:	cmp    ebx,0x3b
  40ff5a:	je     0x412354
  40ff60:	jg     0x4115ec
  40ff66:	cmp    ebx,0x34
  40ff69:	je     0x412324
  40ff6f:	cmp    ebx,0x38
  40ff72:	jne    0x41231a
  40ff78:	ucomiss xmm0,DWORD PTR [rip+0x21135]        # 0x4310b4
  40ff7f:	jb     0x412ee1
  40ff85:	movss  xmm1,DWORD PTR [rip+0x2112b]        # 0x4310b8
  40ff8d:	ucomiss xmm1,xmm0
  40ff90:	jb     0x413032
  40ff96:	cvttss2si eax,xmm0
  40ff9a:	mov    esi,0x4
  40ff9f:	mov    DWORD PTR [rbp+0x0],eax
  40ffa2:	jmp    0x40fc10
  40ffa7:	nop    WORD PTR [rax+rax*1+0x0]
  40ffb0:	movsx  ecx,WORD PTR [r12]
  40ffb5:	mov    r8,rbp
  40ffb8:	mov    edx,ebx
  40ffba:	call   0x40e0a0
  40ffbf:	jmp    0x40fe00
  40ffc4:	mov    ecx,DWORD PTR [r12]
  40ffc8:	mov    r8,rbp
  40ffcb:	mov    edx,ebx
  40ffcd:	call   0x40e0a0
  40ffd2:	jmp    0x40fe00
  40ffd7:	nop    WORD PTR [rax+rax*1+0x0]
  40ffe0:	mov    rax,QWORD PTR [rip+0x28bc9]        # 0x438bb0
  40ffe7:	mov    eax,DWORD PTR [rax]
  40ffe9:	test   eax,eax
  40ffeb:	jne    0x4116bb
  40fff1:	movsxd r8,DWORD PTR [r12]
  40fff5:	mov    eax,DWORD PTR [r12+0x4]
  40fffa:	shl    r8,0x20
  40fffe:	or     r8,rax
  410001:	cmp    ebx,0x40
  410004:	je     0x411743
  41000a:	jg     0x410c90
  410010:	cmp    ebx,0x32
  410013:	je     0x41238b
  410019:	jle    0x411722
  41001f:	cmp    ebx,0x3b
  410022:	je     0x411ce4
  410028:	jg     0x411588
  41002e:	cmp    ebx,0x34
  410031:	je     0x4124e5
  410037:	cmp    ebx,0x38
  41003a:	jne    0x41222b
  410040:	mov    rax,r8
  410043:	movabs rdx,0x346dc5d63886594b
  41004d:	sar    r8,0x3f
  410051:	imul   rdx
  410054:	mov    ecx,0xffffffff
  410059:	mov    rax,rdx
  41005c:	mov    edx,0x80000000
  410061:	sar    rax,0xb
  410065:	sub    rax,r8
  410068:	add    rdx,rax
  41006b:	cmp    rdx,rcx
  41006e:	ja     0x413275
  410074:	mov    DWORD PTR [rbp+0x0],eax
  410077:	mov    esi,0x4
  41007c:	jmp    0x40fc10
  410081:	mov    QWORD PTR [rsp+0x20],rbp
  410086:	mov    r9d,0x3
  41008c:	mov    r8d,ebx
  41008f:	mov    rdx,r12
  410092:	mov    rcx,rsi
  410095:	call   0x40f820
  41009a:	jmp    0x40fe00
  41009f:	nop
  4100a0:	cmp    ebx,0x33
  4100a3:	mov    eax,DWORD PTR [r12]
  4100a7:	je     0x40fe2e
  4100ad:	mov    DWORD PTR [rsp+0x100],0x0
  4100b8:	mov    DWORD PTR [rsp+0x104],eax
  4100bf:	lea    rdx,[rsp+0x100]
  4100c7:	xor    r9d,r9d
  4100ca:	mov    rcx,rsi
  4100cd:	mov    QWORD PTR [rsp+0x20],rbp
  4100d2:	mov    r8d,ebx
  4100d5:	call   0x40f820
  4100da:	test   eax,eax
  4100dc:	mov    esi,eax
  4100de:	setg   dl
  4100e1:	jmp    0x40fcb0
  4100e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4100f0:	cmp    ebx,0x40
  4100f3:	je     0x4117f4
  4100f9:	jg     0x410d62
  4100ff:	cmp    ebx,0x32
  410102:	je     0x41167e
  410108:	jle    0x4117d3
  41010e:	cmp    ebx,0x3b
  410111:	je     0x41214c
  410117:	jg     0x411544
  41011d:	cmp    ebx,0x34
  410120:	je     0x4123a2
  410126:	cmp    ebx,0x38
  410129:	jne    0x412142
  41012f:	mov    rax,QWORD PTR [r12]
  410133:	xor    r8d,r8d
  410136:	mov    edx,0xa
  41013b:	mov    rcx,rbp
  41013e:	mov    QWORD PTR [rbp+0x0],rax
  410142:	mov    rax,QWORD PTR [r12+0x8]
  410147:	mov    QWORD PTR [rbp+0x8],rax
  41014b:	mov    rax,QWORD PTR [r12+0x10]
  410150:	mov    QWORD PTR [rbp+0x10],rax
  410154:	mov    rax,QWORD PTR [r12+0x18]
  410159:	mov    QWORD PTR [rbp+0x18],rax
  41015d:	movzx  eax,WORD PTR [r12+0x20]
  410163:	mov    WORD PTR [rbp+0x20],ax
  410167:	movzx  eax,BYTE PTR [r12+0x22]
  41016d:	mov    BYTE PTR [rbp+0x22],al
  410170:	call   0x413970
  410175:	test   eax,eax
  410177:	mov    esi,eax
  410179:	js     0x40fc10
  41017f:	cmp    BYTE PTR [rbp+0x3],0x0
  410183:	jne    0x411860
  410189:	movzx  edx,BYTE PTR [rbp+0x4]
  41018d:	movzx  r8d,BYTE PTR [rbp+0x2]
  410192:	xor    eax,eax
  410194:	mov    ecx,edx
  410196:	movzx  edx,BYTE PTR [rbp+0x5]
  41019a:	test   r8b,r8b
  41019d:	setne  al
  4101a0:	shl    ecx,0x8
  4101a3:	add    edx,ecx
  4101a5:	mov    ecx,edx
  4101a7:	movzx  edx,BYTE PTR [rbp+0x6]
  4101ab:	shl    ecx,0x8
  4101ae:	add    edx,ecx
  4101b0:	movzx  ecx,BYTE PTR [rbp+0x7]
  4101b4:	shl    edx,0x8
  4101b7:	add    edx,ecx
  4101b9:	mov    ecx,eax
  4101bb:	neg    ecx
  4101bd:	xor    edx,ecx
  4101bf:	add    eax,edx
  4101c1:	cdq    
  4101c2:	xor    r8d,edx
  4101c5:	and    r8d,0x1
  4101c9:	jne    0x411860
  4101cf:	mov    DWORD PTR [rbp+0x0],eax
  4101d2:	mov    esi,0x4
  4101d7:	jmp    0x40fc10
  4101dc:	nop    DWORD PTR [rax+0x0]
  4101e0:	cmp    ebx,0x40
  4101e3:	movsxd r8,DWORD PTR [r12]
  4101e7:	je     0x41188b
  4101ed:	jg     0x410e80
  4101f3:	cmp    ebx,0x32
  4101f6:	je     0x41243e
  4101fc:	jle    0x41186a
  410202:	cmp    ebx,0x3b
  410205:	je     0x412363
  41020b:	jg     0x4115ba
  410211:	cmp    ebx,0x34
  410214:	je     0x412498
  41021a:	cmp    ebx,0x38
  41021d:	jne    0x41248e
  410223:	mov    eax,r8d
  410226:	mov    edx,0x68db8bad
  41022b:	sar    r8d,0x1f
  41022f:	imul   edx
  410231:	mov    esi,0x4
  410236:	sar    edx,0xc
  410239:	sub    edx,r8d
  41023c:	mov    DWORD PTR [rbp+0x0],edx
  41023f:	jmp    0x40fc10
  410244:	mov    eax,DWORD PTR [r12]
  410248:	lea    rcx,[rsp+0x100]
  410250:	mov    r8,rbp
  410253:	mov    edx,ebx
  410255:	mov    QWORD PTR [rsp+0x100],rax
  41025d:	call   0x40e320
  410262:	jmp    0x40fe00
  410267:	nop    WORD PTR [rax+rax*1+0x0]
  410270:	mov    r8,rbp
  410273:	mov    edx,ebx
  410275:	mov    rcx,r12
  410278:	call   0x40e320
  41027d:	jmp    0x40fe00
  410282:	mov    rcx,QWORD PTR [r12]
  410286:	mov    eax,0x80000000
  41028b:	mov    edx,0xffffffff
  410290:	add    rax,rcx
  410293:	cmp    rax,rdx
  410296:	jbe    0x4112a3
  41029c:	cmp    ebx,0x41
  41029f:	jg     0x410ee0
  4102a5:	cmp    ebx,0x40
  4102a8:	jge    0x411ad4
  4102ae:	cmp    ebx,0x32
  4102b1:	je     0x4116a7
  4102b7:	jle    0x411ac3
  4102bd:	cmp    ebx,0x3b
  4102c0:	je     0x411b22
  4102c6:	jle    0x4126b0
  4102cc:	cmp    ebx,0x3c
  4102cf:	je     0x411aed
  4102d5:	cmp    ebx,0x3e
  4102d8:	jne    0x411ae3
  4102de:	pxor   xmm0,xmm0
  4102e2:	mov    esi,0x8
  4102e7:	cvtsi2sd xmm0,rcx
  4102ec:	movsd  QWORD PTR [rbp+0x0],xmm0
  4102f1:	jmp    0x40fc10
  4102f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410300:	cmp    ebx,0xbb
  410306:	mov    rcx,QWORD PTR [r12]
  41030a:	jne    0x410f90
  410310:	mov    QWORD PTR [rbp+0x0],rcx
  410314:	mov    edx,0x1
  410319:	mov    esi,0x8
  41031e:	jmp    0x40fcb0
  410323:	mov    esi,0x10
  410328:	jmp    0x40fbd8
  41032d:	nop    DWORD PTR [rax]
  410330:	mov    eax,0xfffffffe
  410335:	jmp    0x40fc12
  41033a:	nop    WORD PTR [rax+rax*1+0x0]
  410340:	mov    esi,0x1
  410345:	jmp    0x40fbd8
  41034a:	nop    WORD PTR [rax+rax*1+0x0]
  410350:	mov    esi,0x2
  410355:	jmp    0x40fbd8
  41035a:	nop    WORD PTR [rax+rax*1+0x0]
  410360:	mov    esi,r9d
  410363:	jmp    0x40fbd8
  410368:	nop    DWORD PTR [rax+rax*1+0x0]
  410370:	mov    esi,0x23
  410375:	jmp    0x40fbd8
  41037a:	nop    WORD PTR [rax+rax*1+0x0]
  410380:	cmp    r9d,0x1
  410384:	jbe    0x41166e
  41038a:	cmp    BYTE PTR [r12],0x30
  41038f:	je     0x411655
  410395:	lea    eax,[r9-0x1]
  410399:	test   BYTE PTR [r12+rax*1],0xdf
  41039e:	mov    rsi,rax
  4103a1:	je     0x4103bc
  4103a3:	jmp    0x4128f5
  4103a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4103b0:	lea    edx,[rsi-0x1]
  4103b3:	test   BYTE PTR [r12+rdx*1],0xdf
  4103b8:	jne    0x4103c0
  4103ba:	mov    esi,edx
  4103bc:	test   esi,esi
  4103be:	jne    0x4103b0
  4103c0:	cmp    ebx,0x101
  4103c6:	mov    rcx,QWORD PTR [rbp+0x0]
  4103ca:	je     0x41151b
  4103d0:	lea    ecx,[rsi+0x2]
  4103d3:	shr    ecx,1
  4103d5:	call   0x429538
  4103da:	test   rax,rax
  4103dd:	mov    rcx,rax
  4103e0:	mov    QWORD PTR [rbp+0x0],rax
  4103e4:	je     0x411b50
  4103ea:	mov    edx,0xffffffff
  4103ef:	mov    r9d,esi
  4103f2:	mov    r8,r12
  4103f5:	call   0x40e5a0
  4103fa:	jmp    0x40fc12
  4103ff:	mov    eax,DWORD PTR [rbp+0x8]
  410402:	mov    rcx,QWORD PTR [rbp+0x0]
  410406:	mov    rdx,r12
  410409:	mov    DWORD PTR [rsp+0x78],r9d
  41040e:	cmp    r9d,eax
  410411:	cmovbe eax,r9d
  410415:	mov    r8d,eax
  410418:	call   0x429528
  41041d:	mov    r9d,DWORD PTR [rsp+0x78]
  410422:	mov    esi,r9d
  410425:	jmp    0x40fc10
  41042a:	mov    esi,r9d
  41042d:	lea    r8,[rsp+0x100]
  410435:	mov    rcx,r12
  410438:	lea    rdx,[r12+rsi*1]
  41043c:	call   0x40d860
  410441:	test   eax,eax
  410443:	mov    esi,eax
  410445:	js     0x40fc10
  41044b:	mov    rax,QWORD PTR [rsp+0x100]
  410453:	mov    esi,0x8
  410458:	mov    QWORD PTR [rbp+0x0],rax
  41045c:	jmp    0x40fc10
  410461:	mov    esi,r9d
  410464:	mov    r8,rbp
  410467:	mov    rcx,r12
  41046a:	lea    rdx,[r12+rsi*1]
  41046e:	call   0x40d970
  410473:	mov    esi,eax
  410475:	jmp    0x40fc10
  41047a:	mov    esi,r9d
  41047d:	lea    r8,[rsp+0x100]
  410485:	lea    r9,[rsp+0xe0]
  41048d:	lea    rdx,[r12+rsi*1]
  410491:	mov    rcx,r12
  410494:	call   0x40d7c0
  410499:	test   eax,eax
  41049b:	js     0x412875
  4104a1:	cmp    BYTE PTR [rsp+0xe0],0x0
  4104a9:	jne    0x41285c
  4104af:	mov    rax,QWORD PTR [rsp+0x100]
  4104b7:	mov    esi,0x8
  4104bc:	mov    QWORD PTR [rbp+0x0],rax
  4104c0:	jmp    0x40fc10
  4104c5:	mov    esi,r9d
  4104c8:	lea    r8,[rsp+0x100]
  4104d0:	mov    rcx,r12
  4104d3:	lea    rdx,[r12+rsi*1]
  4104d7:	call   0x40d860
  4104dc:	test   eax,eax
  4104de:	mov    esi,eax
  4104e0:	js     0x40fc10
  4104e6:	mov    rax,QWORD PTR [rsp+0x100]
  4104ee:	mov    edx,0xffffffff
  4104f3:	cmp    rax,rdx
  4104f6:	ja     0x412ac1
  4104fc:	mov    DWORD PTR [rbp+0x0],eax
  4104ff:	mov    esi,0x4
  410504:	jmp    0x40fc10
  410509:	mov    esi,r9d
  41050c:	lea    r8,[rsp+0x100]
  410514:	mov    rcx,r12
  410517:	lea    rdx,[r12+rsi*1]
  41051b:	call   0x40d8d0
  410520:	test   eax,eax
  410522:	mov    esi,eax
  410524:	js     0x40fc10
  41052a:	mov    eax,DWORD PTR [rsp+0x100]
  410531:	mov    esi,0x4
  410536:	mov    DWORD PTR [rbp+0x0],eax
  410539:	jmp    0x40fc10
  41053e:	mov    esi,r9d
  410541:	lea    r8,[rsp+0x100]
  410549:	mov    rcx,r12
  41054c:	lea    rdx,[r12+rsi*1]
  410550:	call   0x40d8d0
  410555:	test   eax,eax
  410557:	mov    esi,eax
  410559:	js     0x40fc10
  41055f:	mov    eax,DWORD PTR [rsp+0x100]
  410566:	cmp    eax,0xffff
  41056b:	ja     0x412ac1
  410571:	mov    WORD PTR [rbp+0x0],ax
  410575:	mov    esi,0x2
  41057a:	jmp    0x40fc10
  41057f:	mov    rcx,r12
  410582:	mov    esi,0x8
  410587:	call   0x4295d8
  41058c:	movsd  QWORD PTR [rbp+0x0],xmm0
  410591:	jmp    0x40fc10
  410596:	mov    esi,r9d
  410599:	lea    rax,[rsp+0xe0]
  4105a1:	lea    r9,[rsp+0xd8]
  4105a9:	lea    rdx,[r12+rsi*1]
  4105ad:	lea    r8,[rsp+0xc0]
  4105b5:	mov    rcx,r12
  4105b8:	mov    QWORD PTR [rsp+0x20],rax
  4105bd:	call   0x40d610
  4105c2:	test   rax,rax
  4105c5:	je     0x412746
  4105cb:	mov    rsi,QWORD PTR [rsp+0xd8]
  4105d3:	cmp    rsi,0x12
  4105d7:	ja     0x412ac1
  4105dd:	xor    r11d,r11d
  4105e0:	cmp    BYTE PTR [rsp+0xc0],0x0
  4105e8:	je     0x4105f5
  4105ea:	mov    BYTE PTR [rsp+0x100],0x2d
  4105f2:	mov    r11b,0x1
  4105f5:	test   rsi,rsi
  4105f8:	je     0x412ea4
  4105fe:	mov    rdx,rsi
  410601:	mov    r8,rax
  410604:	mov    ecx,r11d
  410607:	nop    WORD PTR [rax+rax*1+0x0]
  410610:	add    r8,0x1
  410614:	movzx  r10d,BYTE PTR [r8-0x1]
  410619:	sub    rdx,0x1
  41061d:	mov    r9d,ecx
  410620:	add    ecx,0x1
  410623:	test   rdx,rdx
  410626:	mov    QWORD PTR [rsp+0xd8],rdx
  41062e:	mov    BYTE PTR [rsp+r9*1+0x100],r10b
  410636:	jne    0x410610
  410638:	lea    r9,[rax+rsi*1+0x1]
  41063d:	add    r11d,esi
  410640:	mov    QWORD PTR [rsp+0xd8],0x0
  41064c:	mov    r10,QWORD PTR [rsp+0xe0]
  410654:	mov    eax,r11d
  410657:	test   r10,r10
  41065a:	je     0x412715
  410660:	movzx  edx,BYTE PTR [r9]
  410664:	lea    eax,[r11+0x1]
  410668:	mov    r11d,r11d
  41066b:	mov    QWORD PTR [rsp+0xd8],0x1
  410677:	mov    BYTE PTR [rsp+r11*1+0x100],dl
  41067f:	mov    edx,0x1
  410684:	jmp    0x410693
  410686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410690:	mov    eax,r8d
  410693:	cmp    rdx,r10
  410696:	je     0x412715
  41069c:	movzx  ecx,BYTE PTR [r9+rdx*1]
  4106a1:	add    rdx,0x1
  4106a5:	lea    r8d,[rax+0x1]
  4106a9:	cmp    rdx,0x4
  4106ad:	mov    QWORD PTR [rsp+0xd8],rdx
  4106b5:	mov    BYTE PTR [rsp+rax*1+0x100],cl
  4106bc:	jne    0x410690
  4106be:	lea    rcx,[rsp+0x100]
  4106c6:	mov    edx,r8d
  4106c9:	lea    r8,[rsp+0xd0]
  4106d1:	add    rdx,rcx
  4106d4:	call   0x40d860
  4106d9:	test   eax,eax
  4106db:	js     0x412ac1
  4106e1:	cmp    ebx,0x3c
  4106e4:	je     0x41277b
  4106ea:	mov    rdx,QWORD PTR [rsp+0xd0]
  4106f2:	mov    eax,0x80000000
  4106f7:	mov    ecx,0xffffffff
  4106fc:	add    rax,rdx
  4106ff:	cmp    rax,rcx
  410702:	ja     0x412ac1
  410708:	mov    DWORD PTR [rbp+0x0],edx
  41070b:	mov    esi,0x4
  410710:	jmp    0x40fc10
  410715:	mov    rcx,r12
  410718:	mov    esi,0x4
  41071d:	call   0x4295d8
  410722:	pxor   xmm2,xmm2
  410726:	cvtsd2ss xmm2,xmm0
  41072a:	movss  DWORD PTR [rbp+0x0],xmm2
  41072f:	jmp    0x40fc10
  410734:	mov    edx,r9d
  410737:	mov    rcx,r12
  41073a:	mov    QWORD PTR [rsp+0xe8],0x0
  410746:	mov    QWORD PTR [rsp+0xe0],0x0
  410752:	mov    QWORD PTR [rsp+0xf0],0x0
  41075e:	mov    DWORD PTR [rsp+0xf8],0x0
  410769:	mov    DWORD PTR [rsp+0xe8],0x1
  410774:	call   0x40b090
  410779:	test   rax,rax
  41077c:	mov    QWORD PTR [rsp+0x90],rax
  410784:	je     0x4132b9
  41078a:	lea    rdi,[rsp+0xd8]
  410792:	lea    rdx,[rip+0x1fabc]        # 0x430255
  410799:	mov    rcx,rax
  41079c:	mov    r8,rdi
  41079f:	mov    QWORD PTR [rsp+0x70],rdi
  4107a4:	call   0x4292a0
  4107a9:	test   rax,rax
  4107ac:	mov    rsi,rax
  4107af:	je     0x410abc
  4107b5:	lea    rdi,[rsp+0x100]
  4107bd:	lea    rax,[rsp+0xe0]
  4107c5:	mov    r15,QWORD PTR [rip+0x283e4]        # 0x438bb0
  4107cc:	xor    ecx,ecx
  4107ce:	mov    DWORD PTR [rsp+0x1f0],ebx
  4107d5:	mov    QWORD PTR [rsp+0x1f8],rbp
  4107dd:	mov    QWORD PTR [rsp+0x80],rdi
  4107e5:	mov    rdi,QWORD PTR [rip+0x2f2a8]        # 0x43fa94
  4107ec:	xor    r13d,r13d
  4107ef:	mov    DWORD PTR [rsp+0x78],0x0
  4107f7:	xor    r12d,r12d
  4107fa:	mov    ebp,ecx
  4107fc:	mov    rbx,rax
  4107ff:	mov    QWORD PTR [rsp+0xa0],rdi
  410807:	lea    rdi,[rsp+0xc0]
  41080f:	mov    QWORD PTR [rsp+0xb0],rdi
  410817:	lea    rdi,[rsp+0xd0]
  41081f:	mov    QWORD PTR [rsp+0x88],rdi
  410827:	mov    ecx,DWORD PTR [r15]
  41082a:	test   ecx,ecx
  41082c:	jne    0x4127c5
  410832:	cmp    r12d,0x2
  410836:	je     0x4125f4
  41083c:	cmp    r12d,0x3
  410840:	je     0x4125d2
  410846:	cmp    r12d,0x1
  41084a:	mov    rcx,rsi
  41084d:	je     0x412528
  410853:	call   0x40dea0
  410858:	test   al,al
  41085a:	jne    0x412750
  410860:	movzx  r9d,BYTE PTR [rsi]
  410864:	test   r9b,r9b
  410867:	mov    r8d,r9d
  41086a:	je     0x41089c
  41086c:	movzx  r10d,r9b
  410870:	mov    rdx,rsi
  410873:	lea    eax,[r10-0x30]
  410877:	cmp    eax,0x9
  41087a:	mov    DWORD PTR [rsp+0x7c],eax
  41087e:	jbe    0x410891
  410880:	jmp    0x412900
  410885:	sub    eax,0x30
  410888:	cmp    eax,0x9
  41088b:	ja     0x4128fd
  410891:	add    rdx,0x1
  410895:	movzx  eax,BYTE PTR [rdx]
  410898:	test   al,al
  41089a:	jne    0x410885
  41089c:	cmp    DWORD PTR [r15],0x0
  4108a0:	jne    0x412f45
  4108a6:	xor    eax,eax
  4108a8:	or     rcx,0xffffffffffffffff
  4108ac:	mov    rdi,rsi
  4108af:	repnz scas al,BYTE PTR es:[rdi]
  4108b1:	mov    rax,rcx
  4108b4:	not    rax
  4108b7:	lea    rcx,[rax-0x1]
  4108bb:	sub    rax,0x2
  4108bf:	cmp    rax,0x7
  4108c3:	ja     0x410a88
  4108c9:	lea    rdx,[rip+0x20664]        # 0x430f34
  4108d0:	movsxd rax,DWORD PTR [rdx+rax*4]
  4108d4:	add    rdx,rax
  4108d7:	jmp    rdx
  4108d9:	cmp    r9d,0x22
  4108dd:	jbe    0x412746
  4108e3:	cmp    BYTE PTR [r12],0x7b
  4108e8:	je     0x412831
  4108ee:	mov    ecx,0x1
  4108f3:	xor    eax,eax
  4108f5:	xor    r8d,r8d
  4108f8:	jmp    0x410948
  4108fa:	nop    WORD PTR [rax+rax*1+0x0]
  410900:	cmp    eax,0x12
  410903:	je     0x411241
  410909:	cmp    eax,0x17
  41090c:	jne    0x410917
  41090e:	cmp    dl,0x2d
  410911:	je     0x412206
  410917:	lea    r11d,[rdx-0x30]
  41091b:	shl    r8d,0x4
  41091f:	cmp    r11b,0x9
  410923:	ja     0x411267
  410929:	lea    r8d,[r8+rdx*1-0x30]
  41092e:	cmp    rax,0x12
  410932:	ja     0x411285
  410938:	cmp    ecx,0x23
  41093b:	je     0x4126e7
  410941:	add    rax,0x1
  410945:	add    ecx,0x1
  410948:	cmp    eax,0xd
  41094b:	mov    r10d,eax
  41094e:	movsx  edx,BYTE PTR [r12+rax*1]
  410953:	je     0x411254
  410959:	ja     0x410900
  41095b:	cmp    eax,0x8
  41095e:	jne    0x410917
  410960:	cmp    dl,0x2d
  410963:	jne    0x412746
  410969:	mov    DWORD PTR [rbp+0x0],r8d
  41096d:	xor    r8d,r8d
  410970:	jmp    0x410941
  410972:	lea    ecx,[r9+0x1]
  410976:	mov    DWORD PTR [rsp+0x78],r9d
  41097b:	call   0x429538
  410980:	test   rax,rax
  410983:	mov    QWORD PTR [rbp+0x0],rax
  410987:	je     0x413261
  41098d:	mov    esi,DWORD PTR [rsp+0x78]
  410991:	mov    rdx,r12
  410994:	mov    rcx,rax
  410997:	mov    r8,rsi
  41099a:	call   0x429528
  41099f:	mov    r9d,DWORD PTR [rsp+0x78]
  4109a4:	mov    BYTE PTR [rax+rsi*1],0x0
  4109a8:	mov    esi,r9d
  4109ab:	jmp    0x40fe02
  4109b0:	mov    esi,r9d
  4109b3:	lea    r8,[rsp+0x100]
  4109bb:	mov    rcx,r12
  4109be:	lea    rdx,[r12+rsi*1]
  4109c2:	call   0x40d8d0
  4109c7:	test   eax,eax
  4109c9:	mov    esi,eax
  4109cb:	js     0x40fc10
  4109d1:	mov    r8d,DWORD PTR [rsp+0x100]
  4109d9:	mov    esi,0x1
  4109de:	test   r8d,r8d
  4109e1:	setne  BYTE PTR [rbp+0x0]
  4109e5:	cmp    ebx,0x3c
  4109e8:	sete   al
  4109eb:	jmp    0x40fcb8
  4109f0:	mov    esi,r9d
  4109f3:	lea    r8,[rsp+0x100]
  4109fb:	mov    rcx,r12
  4109fe:	lea    rdx,[r12+rsi*1]
  410a02:	call   0x40d8d0
  410a07:	test   eax,eax
  410a09:	mov    esi,eax
  410a0b:	js     0x40fc10
  410a11:	mov    eax,DWORD PTR [rsp+0x100]
  410a18:	lea    edx,[rax+0x8000]
  410a1e:	cmp    edx,0xffff
  410a24:	ja     0x412ac1
  410a2a:	mov    WORD PTR [rbp+0x0],ax
  410a2e:	mov    esi,0x2
  410a33:	jmp    0x40fc10
  410a38:	mov    esi,r9d
  410a3b:	lea    r8,[rsp+0x100]
  410a43:	mov    rcx,r12
  410a46:	lea    rdx,[r12+rsi*1]
  410a4a:	call   0x40d8d0
  410a4f:	test   eax,eax
  410a51:	mov    esi,eax
  410a53:	js     0x40fc10
  410a59:	mov    eax,DWORD PTR [rsp+0x100]
  410a60:	cmp    eax,0xff
  410a65:	ja     0x412ac1
  410a6b:	mov    BYTE PTR [rbp+0x0],al
  410a6e:	cmp    ebx,0x3c
  410a71:	mov    esi,0x1
  410a76:	sete   al
  410a79:	jmp    0x40fcb8
  410a7e:	mov    esi,0xfffffffe
  410a83:	jmp    0x40fc10
  410a88:	mov    r12d,0x3
  410a8e:	mov    r8,QWORD PTR [rsp+0x70]
  410a93:	lea    rdx,[rip+0x1f7bb]        # 0x430255
  410a9a:	xor    ecx,ecx
  410a9c:	call   0x4292a0
  410aa1:	test   rax,rax
  410aa4:	mov    rsi,rax
  410aa7:	jne    0x410827
  410aad:	mov    ebx,DWORD PTR [rsp+0x1f0]
  410ab4:	mov    rbp,QWORD PTR [rsp+0x1f8]
  410abc:	mov    esi,DWORD PTR [rsp+0xe4]
  410ac3:	mov    r11d,0xc
  410ac9:	mov    r10d,DWORD PTR [rsp+0xe0]
  410ad1:	mov    r8d,0x4
  410ad7:	lea    eax,[rsi-0xd]
  410ada:	cdq    
  410adb:	idiv   r11d
  410ade:	lea    edx,[r10+rax*1+0x76c]
  410ae6:	mov    r9d,eax
  410ae9:	imul   eax,edx,0x5b5
  410aef:	cdq    
  410af0:	idiv   r8d
  410af3:	mov    edi,eax
  410af5:	imul   eax,r9d,0xfffffff4
  410af9:	lea    edx,[rsi+rax*1-0x1]
  410afd:	imul   eax,edx,0x16f
  410b03:	cdq    
  410b04:	idiv   r11d
  410b07:	lea    ecx,[rdi+rax*1]
  410b0a:	lea    eax,[r10+r9*1+0x7d0]
  410b12:	mov    edi,0x64
  410b17:	cdq    
  410b18:	idiv   edi
  410b1a:	lea    eax,[rax+rax*2]
  410b1d:	cdq    
  410b1e:	idiv   r8d
  410b21:	sub    ecx,eax
  410b23:	add    ecx,DWORD PTR [rsp+0xe8]
  410b2a:	mov    esi,ecx
  410b2c:	lea    r12d,[rcx-0xa96ac]
  410b33:	mov    rcx,QWORD PTR [rsp+0x90]
  410b3b:	call   0x429580
  410b40:	cmp    ebx,0x31
  410b43:	je     0x412ab3
  410b49:	imul   eax,DWORD PTR [rsp+0xec],0x3c
  410b51:	add    eax,DWORD PTR [rsp+0xf0]
  410b58:	cmp    ebx,0x3a
  410b5b:	je     0x412e91
  410b61:	imul   eax,eax,0x3c
  410b64:	add    eax,DWORD PTR [rsp+0xf4]
  410b6b:	cmp    ebx,0x3d
  410b6e:	je     0x412f62
  410b74:	cmp    ebx,0x33
  410b77:	je     0x412fa3
  410b7d:	cmp    ebx,0xbc
  410b83:	je     0x413305
  410b89:	cmp    ebx,0xbb
  410b8f:	je     0x4132c3
  410b95:	movzx  edx,BYTE PTR [rbp+0xf]
  410b99:	or     BYTE PTR [rbp+0xe],0x7
  410b9d:	mov    esi,0x10
  410ba2:	imul   rcx,rax,0x989680
  410ba9:	mov    WORD PTR [rbp+0xc],0x0
  410baf:	mov    DWORD PTR [rbp+0x8],r12d
  410bb3:	and    edx,0x7f
  410bb6:	or     edx,0x60
  410bb9:	mov    BYTE PTR [rbp+0xf],dl
  410bbc:	mov    eax,DWORD PTR [rsp+0xf8]
  410bc3:	xor    edx,edx
  410bc5:	div    edi
  410bc7:	mov    eax,eax
  410bc9:	add    rcx,rax
  410bcc:	cmp    ebx,0x3c
  410bcf:	mov    QWORD PTR [rbp+0x0],rcx
  410bd3:	sete   al
  410bd6:	jmp    0x40fcb8
  410bdb:	mov    rcx,rsi
  410bde:	call   0x4295d0
  410be3:	mov    ecx,0x2710
  410be8:	cdq    
  410be9:	mov    r9d,eax
  410bec:	idiv   ecx
  410bee:	mov    r8d,0x64
  410bf4:	imul   edx,eax,0xffffd8f0
  410bfa:	mov    ecx,eax
  410bfc:	add    r9d,edx
  410bff:	mov    eax,r9d
  410c02:	cdq    
  410c03:	idiv   r8d
  410c06:	imul   edx,eax,0xffffff9c
  410c09:	lea    r8d,[rax-0x1]
  410c0d:	add    r9d,edx
  410c10:	cmp    r8d,0xb
  410c14:	ja     0x410a88
  410c1a:	lea    eax,[r9-0x1]
  410c1e:	mov    DWORD PTR [rsp+0xe4],r8d
  410c26:	cmp    eax,0x1e
  410c29:	ja     0x410a88
  410c2f:	mov    rdx,rbx
  410c32:	mov    DWORD PTR [rsp+0xe8],r9d
  410c3a:	call   0x40dfc0
  410c3f:	cmp    eax,0x1
  410c42:	sbb    r12d,r12d
  410c45:	and    r12d,0x3
  410c49:	jmp    0x410a8e
  410c4e:	mov    rcx,rsi
  410c51:	add    r13d,0x1
  410c55:	mov    r12d,0x2
  410c5b:	call   0x4295d0
  410c60:	mov    rdx,rbx
  410c63:	mov    ecx,eax
  410c65:	call   0x40dfc0
  410c6a:	jmp    0x410a8e
  410c6f:	add    ecx,0x1
  410c72:	mov    rdi,QWORD PTR [rsp+0x80]
  410c7a:	mov    r12d,0x1
  410c80:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  410c82:	jmp    0x410a8e
  410c87:	nop    WORD PTR [rax+rax*1+0x0]
  410c90:	cmp    ebx,0x6c
  410c93:	je     0x4119dc
  410c99:	jg     0x4113b8
  410c9f:	cmp    ebx,0x43
  410ca2:	je     0x411f3d
  410ca8:	jg     0x4119ca
  410cae:	cmp    ebx,0x41
  410cb1:	je     0x411e42
  410cb7:	cmp    ebx,0x42
  410cba:	jne    0x41222b
  410cc0:	mov    rax,r8
  410cc3:	movabs rdx,0x346dc5d63886594b
  410ccd:	sar    r8,0x3f
  410cd1:	imul   rdx
  410cd4:	mov    rax,rdx
  410cd7:	mov    edx,0xffffffff
  410cdc:	sar    rax,0xb
  410ce0:	sub    rax,r8
  410ce3:	cmp    rax,rdx
  410ce6:	ja     0x413363
  410cec:	mov    DWORD PTR [rbp+0x0],eax
  410cef:	mov    esi,0x4
  410cf4:	jmp    0x40fc10
  410cf9:	nop    DWORD PTR [rax+0x0]
  410d00:	cmp    ebx,0x6c
  410d03:	je     0x411903
  410d09:	jg     0x41144f
  410d0f:	cmp    ebx,0x43
  410d12:	je     0x412047
  410d18:	jg     0x4118f1
  410d1e:	cmp    ebx,0x41
  410d21:	je     0x411b93
  410d27:	cmp    ebx,0x42
  410d2a:	jne    0x4121ca
  410d30:	ucomisd xmm0,QWORD PTR [rip+0x203a8]        # 0x4310e0
  410d38:	jb     0x4134e3
  410d3e:	movsd  xmm1,QWORD PTR [rip+0x203d2]        # 0x431118
  410d46:	ucomisd xmm1,xmm0
  410d4a:	jb     0x4134cf
  410d50:	cvttsd2si rax,xmm0
  410d55:	mov    esi,0x4
  410d5a:	mov    DWORD PTR [rbp+0x0],eax
  410d5d:	jmp    0x40fc10
  410d62:	cmp    ebx,0x6c
  410d65:	je     0x41197c
  410d6b:	jg     0x4112b2
  410d71:	cmp    ebx,0x43
  410d74:	je     0x411e84
  410d7a:	jg     0x41196a
  410d80:	cmp    ebx,0x41
  410d83:	je     0x411bfc
  410d89:	cmp    ebx,0x42
  410d8c:	jne    0x412142
  410d92:	mov    rax,QWORD PTR [r12]
  410d96:	xor    r8d,r8d
  410d99:	mov    edx,0xa
  410d9e:	mov    rcx,rbp
  410da1:	mov    QWORD PTR [rbp+0x0],rax
  410da5:	mov    rax,QWORD PTR [r12+0x8]
  410daa:	mov    QWORD PTR [rbp+0x8],rax
  410dae:	mov    rax,QWORD PTR [r12+0x10]
  410db3:	mov    QWORD PTR [rbp+0x10],rax
  410db7:	mov    rax,QWORD PTR [r12+0x18]
  410dbc:	mov    QWORD PTR [rbp+0x18],rax
  410dc0:	movzx  eax,WORD PTR [r12+0x20]
  410dc6:	mov    WORD PTR [rbp+0x20],ax
  410dca:	movzx  eax,BYTE PTR [r12+0x22]
  410dd0:	mov    BYTE PTR [rbp+0x22],al
  410dd3:	call   0x413970
  410dd8:	test   eax,eax
  410dda:	mov    esi,eax
  410ddc:	js     0x40fc10
  410de2:	cmp    WORD PTR [rbp+0x2],0x0
  410de7:	jne    0x411860
  410ded:	movzx  eax,BYTE PTR [rbp+0x4]
  410df1:	mov    esi,0x4
  410df6:	shl    eax,0x8
  410df9:	mov    edx,eax
  410dfb:	movzx  eax,BYTE PTR [rbp+0x5]
  410dff:	add    eax,edx
  410e01:	shl    eax,0x8
  410e04:	mov    edx,eax
  410e06:	movzx  eax,BYTE PTR [rbp+0x6]
  410e0a:	add    eax,edx
  410e0c:	movzx  edx,BYTE PTR [rbp+0x7]
  410e10:	shl    eax,0x8
  410e13:	add    eax,edx
  410e15:	mov    DWORD PTR [rbp+0x0],eax
  410e18:	jmp    0x40fc10
  410e1d:	nop    DWORD PTR [rax]
  410e20:	cmp    ebx,0x6c
  410e23:	je     0x411a0d
  410e29:	jg     0x4114a6
  410e2f:	cmp    ebx,0x43
  410e32:	je     0x4120ff
  410e38:	jg     0x4119fb
  410e3e:	cmp    ebx,0x41
  410e41:	je     0x412455
  410e47:	cmp    ebx,0x42
  410e4a:	jne    0x41231a
  410e50:	ucomiss xmm0,DWORD PTR [rip+0x20249]        # 0x4310a0
  410e57:	jb     0x41333b
  410e5d:	movss  xmm1,DWORD PTR [rip+0x20257]        # 0x4310bc
  410e65:	ucomiss xmm1,xmm0
  410e68:	jb     0x413331
  410e6e:	cvttss2si rax,xmm0
  410e73:	mov    esi,0x4
  410e78:	mov    DWORD PTR [rbp+0x0],eax
  410e7b:	jmp    0x40fc10
  410e80:	cmp    ebx,0x6c
  410e83:	je     0x4118d2
  410e89:	jg     0x411405
  410e8f:	cmp    ebx,0x43
  410e92:	je     0x411f6c
  410e98:	jg     0x4118c0
  410e9e:	cmp    ebx,0x41
  410ea1:	je     0x411d63
  410ea7:	cmp    ebx,0x42
  410eaa:	jne    0x41248e
  410eb0:	mov    eax,r8d
  410eb3:	mov    edx,0x68db8bad
  410eb8:	sar    r8d,0x1f
  410ebc:	imul   edx
  410ebe:	sar    edx,0xc
  410ec1:	sub    edx,r8d
  410ec4:	js     0x41334f
  410eca:	mov    DWORD PTR [rbp+0x0],edx
  410ecd:	mov    esi,0x4
  410ed2:	jmp    0x40fc10
  410ed7:	nop    WORD PTR [rax+rax*1+0x0]
  410ee0:	cmp    ebx,0x6c
  410ee3:	je     0x410f0c
  410ee5:	jg     0x411615
  410eeb:	cmp    ebx,0x43
  410eee:	je     0x411a7d
  410ef4:	jl     0x411b3a
  410efa:	cmp    ebx,0x68
  410efd:	je     0x4116a7
  410f03:	cmp    ebx,0x6a
  410f06:	jne    0x411ae3
  410f0c:	test   rcx,rcx
  410f0f:	mov    r9,rbp
  410f12:	js     0x4127ec
  410f18:	mov    r8,rcx
  410f1b:	xor    edx,edx
  410f1d:	xor    ecx,ecx
  410f1f:	call   0x40df40
  410f24:	mov    esi,eax
  410f26:	jmp    0x40fc10
  410f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  410f30:	cmp    ebx,0x3b
  410f33:	jge    0x4111fa
  410f39:	cmp    ebx,0x2f
  410f3c:	je     0x411171
  410f42:	jg     0x4114fb
  410f48:	cmp    ebx,0x23
  410f4b:	je     0x411171
  410f51:	cmp    ebx,0x27
  410f54:	je     0x411171
  410f5a:	mov    esi,0xfffffffe
  410f5f:	jmp    0x40fc10
  410f64:	movzx  eax,WORD PTR [r12]
  410f69:	mov    DWORD PTR [rsp+0x100],eax
  410f70:	movzx  eax,WORD PTR [r12+0x2]
  410f76:	imul   eax,eax,0x4650
  410f7c:	mov    DWORD PTR [rsp+0x104],eax
  410f83:	jmp    0x4100bf
  410f88:	nop    DWORD PTR [rax+rax*1+0x0]
  410f90:	mov    rax,rcx
  410f93:	movabs rdx,0x32e73fb956a1b897
  410f9d:	mov    QWORD PTR [rsp+0x108],0x0
  410fa9:	mul    rdx
  410fac:	movabs rax,0x141dd76000
  410fb6:	mov    BYTE PTR [rsp+0x10e],0x6
  410fbe:	mov    BYTE PTR [rsp+0x10f],0x60
  410fc6:	mov    QWORD PTR [rsp+0x20],rbp
  410fcb:	mov    r9d,ebx
  410fce:	lea    r8,[rsp+0x100]
  410fd6:	shr    rdx,0x22
  410fda:	imul   rax,rdx
  410fde:	sub    edx,0xa96c9
  410fe4:	mov    DWORD PTR [rsp+0x108],edx
  410feb:	mov    edx,0x2a
  410ff0:	sub    rcx,rax
  410ff3:	lea    rax,[rcx+rcx*4]
  410ff7:	add    rax,rax
  410ffa:	mov    QWORD PTR [rsp+0x100],rax
  411002:	jmp    0x40fdf0
  411007:	nop    WORD PTR [rax+rax*1+0x0]
  411010:	mov    QWORD PTR [rsp+0x108],0x0
  41101c:	mov    QWORD PTR [rsp+0x100],0x0
  411028:	movabs rdx,0x32e73fb956a1b897
  411032:	mov    BYTE PTR [rsp+0x10e],0x6
  41103a:	mov    BYTE PTR [rsp+0x10f],0x20
  411042:	mov    r9d,ebx
  411045:	mov    rcx,QWORD PTR [r12]
  411049:	lea    r8,[rsp+0x100]
  411051:	mov    QWORD PTR [rsp+0x20],rbp
  411056:	mov    rax,rcx
  411059:	mul    rdx
  41105c:	movabs rax,0x141dd76000
  411066:	shr    rdx,0x22
  41106a:	imul   rdx,rax
  41106e:	sub    rcx,rdx
  411071:	mov    edx,0x29
  411076:	lea    rax,[rcx+rcx*4]
  41107a:	add    rax,rax
  41107d:	mov    QWORD PTR [rsp+0x100],rax
  411085:	jmp    0x40fdf0
  41108a:	nop    WORD PTR [rax+rax*1+0x0]
  411090:	mov    DWORD PTR [rsp+0x100],eax
  411097:	mov    DWORD PTR [rsp+0x104],0x0
  4110a2:	jmp    0x4100bf
  4110a7:	nop    WORD PTR [rax+rax*1+0x0]
  4110b0:	cmp    ebx,0xaf
  4110b6:	je     0x4110e0
  4110b8:	cmp    ebx,0x100
  4110be:	je     0x4110e0
  4110c0:	cmp    ebx,0xa7
  4110c6:	je     0x4110e0
  4110c8:	mov    esi,0xfffffffe
  4110cd:	jmp    0x40fc10
  4110d2:	cmp    ebx,0x27
  4110d5:	je     0x4110e0
  4110d7:	cmp    ebx,0x23
  4110da:	jne    0x4110c8
  4110dc:	nop    DWORD PTR [rax+0x0]
  4110e0:	movzx  eax,BYTE PTR [r12+0xf]
  4110e6:	movzx  r9d,WORD PTR [r12+0x4]
  4110ec:	lea    rsi,[rsp+0x100]
  4110f4:	lea    rdx,[rip+0x1f38d]        # 0x430488
  4110fb:	mov    rcx,rsi
  4110fe:	mov    DWORD PTR [rsp+0x60],eax
  411102:	movzx  eax,BYTE PTR [r12+0xe]
  411108:	mov    DWORD PTR [rsp+0x58],eax
  41110c:	movzx  eax,BYTE PTR [r12+0xd]
  411112:	mov    DWORD PTR [rsp+0x50],eax
  411116:	movzx  eax,BYTE PTR [r12+0xc]
  41111c:	mov    DWORD PTR [rsp+0x48],eax
  411120:	movzx  eax,BYTE PTR [r12+0xb]
  411126:	mov    DWORD PTR [rsp+0x40],eax
  41112a:	movzx  eax,BYTE PTR [r12+0xa]
  411130:	mov    DWORD PTR [rsp+0x38],eax
  411134:	movzx  eax,BYTE PTR [r12+0x9]
  41113a:	mov    DWORD PTR [rsp+0x30],eax
  41113e:	movzx  eax,BYTE PTR [r12+0x8]
  411144:	mov    DWORD PTR [rsp+0x28],eax
  411148:	movzx  eax,WORD PTR [r12+0x6]
  41114e:	mov    DWORD PTR [rsp+0x20],eax
  411152:	mov    r8d,DWORD PTR [r12]
  411156:	call   0x4294c8
  41115b:	lea    r9,[rbp+0x8]
  41115f:	mov    r8,rbp
  411162:	mov    rdx,rsi
  411165:	mov    ecx,ebx
  411167:	call   0x40e010
  41116c:	jmp    0x40fe00
  411171:	lea    esi,[r9+r9*1]
  411175:	mov    DWORD PTR [rsp+0x78],r9d
  41117a:	lea    ecx,[rsi+0x1]
  41117d:	movsxd rcx,ecx
  411180:	call   0x429538
  411185:	test   rax,rax
  411188:	mov    QWORD PTR [rbp+0x0],rax
  41118c:	je     0x412eff
  411192:	mov    r9d,DWORD PTR [rsp+0x78]
  411197:	test   r9d,r9d
  41119a:	jle    0x4111db
  41119c:	lea    r8,[rip+0x1fedd]        # 0x431080
  4111a3:	xor    edx,edx
  4111a5:	movzx  ecx,BYTE PTR [r12+rdx*1]
  4111aa:	shr    cl,0x4
  4111ad:	and    ecx,0xf
  4111b0:	movzx  ecx,BYTE PTR [r8+rcx*1]
  4111b5:	mov    BYTE PTR [rax+rdx*2],cl
  4111b8:	movzx  ecx,BYTE PTR [r12+rdx*1]
  4111bd:	and    ecx,0xf
  4111c0:	movzx  ecx,BYTE PTR [r8+rcx*1]
  4111c5:	mov    BYTE PTR [rax+rdx*2+0x1],cl
  4111c9:	add    rdx,0x1
  4111cd:	cmp    r9d,edx
  4111d0:	jg     0x4111a5
  4111d2:	lea    edx,[r9-0x1]
  4111d6:	lea    rax,[rax+rdx*2+0x2]
  4111db:	mov    BYTE PTR [rax],0x0
  4111de:	jmp    0x40fe02
  4111e3:	cmp    ebx,0x3e
  4111e6:	je     0x4111fa
  4111e8:	jl     0x410f5a
  4111ee:	lea    eax,[rbx-0x40]
  4111f1:	cmp    eax,0x3
  4111f4:	ja     0x410f5a
  4111fa:	mov    ecx,ebx
  4111fc:	mov    DWORD PTR [rsp+0x78],r9d
  411201:	call   0x420fb0
  411206:	mov    r9d,DWORD PTR [rsp+0x78]
  41120b:	mov    esi,eax
  41120d:	mov    rdx,r12
  411210:	mov    rcx,rbp
  411213:	cmp    eax,r9d
  411216:	mov    edi,r9d
  411219:	cmovle edi,eax
  41121c:	movsxd r13,edi
  41121f:	mov    r8,r13
  411222:	call   0x429528
  411227:	mov    r8d,esi
  41122a:	lea    rcx,[rbp+r13*1+0x0]
  41122f:	xor    edx,edx
  411231:	sub    r8d,edi
  411234:	movsxd r8,r8d
  411237:	call   0x429518
  41123c:	jmp    0x40fe02
  411241:	cmp    dl,0x2d
  411244:	jne    0x412746
  41124a:	mov    WORD PTR [rbp+0x6],r8w
  41124f:	jmp    0x41096d
  411254:	cmp    dl,0x2d
  411257:	jne    0x412746
  41125d:	mov    WORD PTR [rbp+0x4],r8w
  411262:	jmp    0x41096d
  411267:	and    edx,0xffffffdf
  41126a:	lea    r11d,[rdx-0x41]
  41126e:	cmp    r11b,0x5
  411272:	ja     0x412746
  411278:	movsx  edx,dl
  41127b:	lea    r8d,[r8+rdx*1-0x37]
  411280:	jmp    0x41092e
  411285:	test   r10b,0x1
  411289:	jne    0x410938
  41128f:	shr    r10d,1
  411292:	lea    edx,[r10-0xa]
  411296:	mov    BYTE PTR [rbp+rdx*1+0x8],r8b
  41129b:	xor    r8d,r8d
  41129e:	jmp    0x410938
  4112a3:	mov    r8,rbp
  4112a6:	mov    edx,ebx
  4112a8:	call   0x40e0a0
  4112ad:	jmp    0x40fe00
  4112b2:	cmp    ebx,0xa7
  4112b8:	je     0x411da6
  4112be:	jg     0x411d92
  4112c4:	cmp    ebx,0x7a
  4112c7:	je     0x411f97
  4112cd:	cmp    ebx,0x7f
  4112d0:	jne    0x412142
  4112d6:	mov    rax,QWORD PTR [r12]
  4112da:	xor    r8d,r8d
  4112dd:	mov    edx,0x14
  4112e2:	mov    rcx,rbp
  4112e5:	mov    QWORD PTR [rbp+0x0],rax
  4112e9:	mov    rax,QWORD PTR [r12+0x8]
  4112ee:	mov    QWORD PTR [rbp+0x8],rax
  4112f2:	mov    rax,QWORD PTR [r12+0x10]
  4112f7:	mov    QWORD PTR [rbp+0x10],rax
  4112fb:	mov    rax,QWORD PTR [r12+0x18]
  411300:	mov    QWORD PTR [rbp+0x18],rax
  411304:	movzx  eax,WORD PTR [r12+0x20]
  41130a:	mov    WORD PTR [rbp+0x20],ax
  41130e:	movzx  eax,BYTE PTR [r12+0x22]
  411314:	mov    BYTE PTR [rbp+0x22],al
  411317:	call   0x413970
  41131c:	test   eax,eax
  41131e:	mov    esi,eax
  411320:	js     0x40fc10
  411326:	cmp    BYTE PTR [rbp+0x3],0x0
  41132a:	jne    0x411860
  411330:	movzx  eax,BYTE PTR [rbp+0x4]
  411334:	movzx  r8d,BYTE PTR [rbp+0x2]
  411339:	shl    eax,0x8
  41133c:	mov    edx,eax
  41133e:	movzx  eax,BYTE PTR [rbp+0x5]
  411342:	add    eax,edx
  411344:	shl    eax,0x8
  411347:	mov    edx,eax
  411349:	movzx  eax,BYTE PTR [rbp+0x6]
  41134d:	add    eax,edx
  41134f:	movzx  edx,BYTE PTR [rbp+0x7]
  411353:	shl    eax,0x8
  411356:	lea    ecx,[rax+rdx*1]
  411359:	movzx  edx,BYTE PTR [rbp+0x8]
  41135d:	xor    eax,eax
  41135f:	shl    rcx,0x20
  411363:	test   r8b,r8b
  411366:	mov    r9,rcx
  411369:	setne  al
  41136c:	mov    ecx,edx
  41136e:	movzx  edx,BYTE PTR [rbp+0x9]
  411372:	shl    ecx,0x8
  411375:	add    edx,ecx
  411377:	mov    ecx,edx
  411379:	movzx  edx,BYTE PTR [rbp+0xa]
  41137d:	shl    ecx,0x8
  411380:	add    edx,ecx
  411382:	movzx  ecx,BYTE PTR [rbp+0xb]
  411386:	shl    edx,0x8
  411389:	add    edx,ecx
  41138b:	lea    rcx,[r9+rdx*1]
  41138f:	mov    rdx,rax
  411392:	neg    rdx
  411395:	xor    rdx,rcx
  411398:	add    rax,rdx
  41139b:	cqo    
  41139d:	xor    r8,rdx
  4113a0:	and    r8d,0x1
  4113a4:	jne    0x411860
  4113aa:	mov    QWORD PTR [rbp+0x0],rax
  4113ae:	mov    esi,0x8
  4113b3:	jmp    0x40fc10
  4113b8:	cmp    ebx,0xa7
  4113be:	je     0x411c88
  4113c4:	jg     0x411c74
  4113ca:	cmp    ebx,0x7a
  4113cd:	je     0x411d31
  4113d3:	cmp    ebx,0x7f
  4113d6:	jne    0x41222b
  4113dc:	mov    rax,r8
  4113df:	movabs rdx,0x346dc5d63886594b
  4113e9:	sar    r8,0x3f
  4113ed:	imul   rdx
  4113f0:	mov    esi,0x8
  4113f5:	sar    rdx,0xb
  4113f9:	sub    rdx,r8
  4113fc:	mov    QWORD PTR [rbp+0x0],rdx
  411400:	jmp    0x40fc10
  411405:	cmp    ebx,0xa7
  41140b:	je     0x41209c
  411411:	jg     0x412088
  411417:	cmp    ebx,0x7a
  41141a:	je     0x411d55
  411420:	cmp    ebx,0x7f
  411423:	jne    0x41248e
  411429:	mov    eax,r8d
  41142c:	mov    edx,0x68db8bad
  411431:	sar    r8d,0x1f
  411435:	imul   edx
  411437:	mov    esi,0x8
  41143c:	mov    eax,edx
  41143e:	sar    eax,0xc
  411441:	sub    eax,r8d
  411444:	cdqe   
  411446:	mov    QWORD PTR [rbp+0x0],rax
  41144a:	jmp    0x40fc10
  41144f:	cmp    ebx,0xa7
  411455:	je     0x411e1d
  41145b:	jg     0x411e09
  411461:	cmp    ebx,0x7a
  411464:	je     0x411dd0
  41146a:	cmp    ebx,0x7f
  41146d:	jne    0x4121ca
  411473:	ucomisd xmm0,QWORD PTR [rip+0x1fca5]        # 0x431120
  41147b:	ja     0x412f31
  411481:	movsd  xmm1,QWORD PTR [rip+0x1fc9f]        # 0x431128
  411489:	ucomisd xmm1,xmm0
  41148d:	ja     0x413381
  411493:	cvttsd2si rax,xmm0
  411498:	mov    esi,0x8
  41149d:	mov    QWORD PTR [rbp+0x0],rax
  4114a1:	jmp    0x40fc10
  4114a6:	cmp    ebx,0xa7
  4114ac:	je     0x411cbb
  4114b2:	jg     0x411ca7
  4114b8:	cmp    ebx,0x7a
  4114bb:	je     0x411bc5
  4114c1:	cmp    ebx,0x7f
  4114c4:	jne    0x41231a
  4114ca:	ucomiss xmm0,DWORD PTR [rip+0x1fbef]        # 0x4310c0
  4114d1:	ja     0x412ecd
  4114d7:	movss  xmm1,DWORD PTR [rip+0x1fbe5]        # 0x4310c4
  4114df:	ucomiss xmm1,xmm0
  4114e2:	ja     0x413046
  4114e8:	cvttss2si rax,xmm0
  4114ed:	mov    esi,0x8
  4114f2:	mov    QWORD PTR [rbp+0x0],rax
  4114f6:	jmp    0x40fc10
  4114fb:	cmp    ebx,0x34
  4114fe:	je     0x4111fa
  411504:	cmp    ebx,0x38
  411507:	je     0x4111fa
  41150d:	cmp    ebx,0x30
  411510:	jne    0x410f5a
  411516:	jmp    0x4111fa
  41151b:	mov    edx,DWORD PTR [rbp+0x8]
  41151e:	jmp    0x4103ef
  411523:	cmp    ebx,0x3c
  411526:	je     0x412186
  41152c:	cmp    ebx,0x3e
  41152f:	jne    0x4121ca
  411535:	movsd  QWORD PTR [rbp+0x0],xmm0
  41153a:	mov    esi,0x8
  41153f:	jmp    0x40fc10
  411544:	cmp    ebx,0x3c
  411547:	je     0x412235
  41154d:	cmp    ebx,0x3e
  411550:	jne    0x412142
  411556:	lea    rbx,[rsp+0x100]
  41155e:	mov    rcx,r12
  411561:	mov    rdx,rbx
  411564:	call   0x413620
  411569:	test   eax,eax
  41156b:	js     0x41327f
  411571:	mov    rcx,rbx
  411574:	mov    esi,0x8
  411579:	call   0x4295d8
  41157e:	movsd  QWORD PTR [rbp+0x0],xmm0
  411583:	jmp    0x40fc10
  411588:	cmp    ebx,0x3c
  41158b:	je     0x411647
  411591:	cmp    ebx,0x3e
  411594:	jne    0x41222b
  41159a:	pxor   xmm0,xmm0
  41159e:	mov    esi,0x8
  4115a3:	cvtsi2sd xmm0,r8
  4115a8:	divsd  xmm0,QWORD PTR [rip+0x1fae8]        # 0x431098
  4115b0:	movsd  QWORD PTR [rbp+0x0],xmm0
  4115b5:	jmp    0x40fc10
  4115ba:	cmp    ebx,0x3c
  4115bd:	je     0x411647
  4115c3:	cmp    ebx,0x3e
  4115c6:	jne    0x41248e
  4115cc:	pxor   xmm0,xmm0
  4115d0:	mov    esi,0x8
  4115d5:	cvtsi2sd xmm0,r8d
  4115da:	divsd  xmm0,QWORD PTR [rip+0x1fab6]        # 0x431098
  4115e2:	movsd  QWORD PTR [rbp+0x0],xmm0
  4115e7:	jmp    0x40fc10
  4115ec:	cmp    ebx,0x3c
  4115ef:	je     0x411b5a
  4115f5:	cmp    ebx,0x3e
  4115f8:	jne    0x41231a
  4115fe:	pxor   xmm4,xmm4
  411602:	mov    esi,0x8
  411607:	cvtss2sd xmm4,xmm0
  41160b:	movsd  QWORD PTR [rbp+0x0],xmm4
  411610:	jmp    0x40fc10
  411615:	cmp    ebx,0xa7
  41161b:	je     0x411aa4
  411621:	jg     0x411a94
  411627:	cmp    ebx,0x7a
  41162a:	je     0x411ad4
  411630:	cmp    ebx,0x7f
  411633:	jne    0x411ae3
  411639:	mov    QWORD PTR [rbp+0x0],rcx
  41163d:	mov    esi,0x8
  411642:	jmp    0x40fc10
  411647:	mov    QWORD PTR [rbp+0x0],r8
  41164b:	mov    esi,0x8
  411650:	jmp    0x40fcc0
  411655:	movzx  eax,BYTE PTR [r12+0x1]
  41165b:	and    eax,0xffffffdf
  41165e:	cmp    al,0x58
  411660:	jne    0x410395
  411666:	add    r12,0x2
  41166a:	sub    r9d,0x2
  41166e:	test   r9d,r9d
  411671:	jne    0x410395
  411677:	xor    esi,esi
  411679:	jmp    0x4103c0
  41167e:	mov    BYTE PTR [rbp+0x0],0x0
  411682:	movzx  edx,BYTE PTR [r12]
  411687:	mov    rax,QWORD PTR [rip+0x274c2]        # 0x438b50
  41168e:	mov    eax,DWORD PTR [rax+rdx*4]
  411691:	sub    eax,0x1
  411694:	test   eax,eax
  411696:	jle    0x410a6e
  41169c:	movsxd rdx,eax
  41169f:	cmp    BYTE PTR [r12+rdx*1+0x2],0x0
  4116a5:	je     0x411691
  4116a7:	cmp    ebx,0x3c
  4116aa:	mov    BYTE PTR [rbp+0x0],0x1
  4116ae:	mov    esi,0x1
  4116b3:	sete   al
  4116b6:	jmp    0x40fcb8
  4116bb:	lea    r8,[rip+0x1ed92]        # 0x430454
  4116c2:	lea    rcx,[rip+0x1e890]        # 0x42ff59
  4116c9:	mov    edx,0x4937
  4116ce:	call   0x423fa0
  4116d3:	jmp    0x40fff1
  4116d8:	cmp    ebx,0x27
  4116db:	je     0x411e1d
  4116e1:	jle    0x4121c1
  4116e7:	cmp    ebx,0x2f
  4116ea:	je     0x411e1d
  4116f0:	cmp    ebx,0x30
  4116f3:	jne    0x4121ca
  4116f9:	ucomisd xmm0,QWORD PTR [rip+0x1f9df]        # 0x4310e0
  411701:	jb     0x413345
  411707:	movsd  xmm1,QWORD PTR [rip+0x1f9d9]        # 0x4310e8
  41170f:	ucomisd xmm1,xmm0
  411713:	jb     0x412f27
  411719:	cvttsd2si eax,xmm0
  41171d:	jmp    0x410a6b
  411722:	cmp    ebx,0x27
  411725:	je     0x411c88
  41172b:	jle    0x412222
  411731:	cmp    ebx,0x2f
  411734:	je     0x411c88
  41173a:	cmp    ebx,0x30
  41173d:	jne    0x41222b
  411743:	lea    rax,[r8+0x270f]
  41174a:	cmp    rax,0x27370e
  411750:	ja     0x412f09
  411756:	mov    eax,r8d
  411759:	mov    edx,0x68db8bad
  41175e:	sar    r8d,0x1f
  411762:	imul   edx
  411764:	mov    esi,0x1
  411769:	sar    edx,0xc
  41176c:	sub    edx,r8d
  41176f:	cmp    ebx,0x3c
  411772:	mov    BYTE PTR [rbp+0x0],dl
  411775:	sete   al
  411778:	jmp    0x40fcb8
  41177d:	cmp    ebx,0x27
  411780:	je     0x411cbb
  411786:	jle    0x412311
  41178c:	cmp    ebx,0x2f
  41178f:	je     0x411cbb
  411795:	cmp    ebx,0x30
  411798:	jne    0x41231a
  41179e:	ucomiss xmm0,DWORD PTR [rip+0x1f8fb]        # 0x4310a0
  4117a5:	jb     0x4134a7
  4117ab:	movss  xmm1,DWORD PTR [rip+0x1f8f1]        # 0x4310a4
  4117b3:	ucomiss xmm1,xmm0
  4117b6:	jb     0x412ef5
  4117bc:	cvttss2si eax,xmm0
  4117c0:	cmp    ebx,0x3c
  4117c3:	mov    esi,0x1
  4117c8:	mov    BYTE PTR [rbp+0x0],al
  4117cb:	sete   al
  4117ce:	jmp    0x40fcb8
  4117d3:	cmp    ebx,0x27
  4117d6:	je     0x411da6
  4117dc:	jle    0x412139
  4117e2:	cmp    ebx,0x2f
  4117e5:	je     0x411da6
  4117eb:	cmp    ebx,0x30
  4117ee:	jne    0x412142
  4117f4:	mov    rax,QWORD PTR [r12]
  4117f8:	xor    r8d,r8d
  4117fb:	mov    edx,0x3
  411800:	mov    rcx,rbp
  411803:	mov    QWORD PTR [rbp+0x0],rax
  411807:	mov    rax,QWORD PTR [r12+0x8]
  41180c:	mov    QWORD PTR [rbp+0x8],rax
  411810:	mov    rax,QWORD PTR [r12+0x10]
  411815:	mov    QWORD PTR [rbp+0x10],rax
  411819:	mov    rax,QWORD PTR [r12+0x18]
  41181e:	mov    QWORD PTR [rbp+0x18],rax
  411822:	movzx  eax,WORD PTR [r12+0x20]
  411828:	mov    WORD PTR [rbp+0x20],ax
  41182c:	movzx  eax,BYTE PTR [r12+0x22]
  411832:	mov    BYTE PTR [rbp+0x22],al
  411835:	call   0x413970
  41183a:	test   eax,eax
  41183c:	mov    esi,eax
  41183e:	js     0x40fc10
  411844:	cmp    BYTE PTR [rbp+0x3],0x0
  411848:	jne    0x411860
  41184a:	cmp    BYTE PTR [rbp+0x2],0x0
  41184e:	movzx  eax,BYTE PTR [rbp+0x4]
  411852:	je     0x410a6b
  411858:	test   al,al
  41185a:	je     0x410a6b
  411860:	mov    esi,0xfffffffb
  411865:	jmp    0x40fc10
  41186a:	cmp    ebx,0x27
  41186d:	je     0x41209c
  411873:	jle    0x412485
  411879:	cmp    ebx,0x2f
  41187c:	je     0x41209c
  411882:	cmp    ebx,0x30
  411885:	jne    0x41248e
  41188b:	mov    eax,r8d
  41188e:	mov    edx,0x68db8bad
  411893:	sar    r8d,0x1f
  411897:	imul   edx
  411899:	mov    eax,edx
  41189b:	sar    eax,0xc
  41189e:	sub    eax,r8d
  4118a1:	cmp    eax,0xff
  4118a6:	jbe    0x410a6b
  4118ac:	mov    esi,0xfffffffb
  4118b1:	jmp    0x40fc10
  4118b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4118c0:	cmp    ebx,0x68
  4118c3:	je     0x41243e
  4118c9:	cmp    ebx,0x6a
  4118cc:	jne    0x41248e
  4118d2:	test   r8d,r8d
  4118d5:	mov    r9,rbp
  4118d8:	js     0x41287c
  4118de:	xor    edx,edx
  4118e0:	mov    ecx,0x4
  4118e5:	call   0x40def0
  4118ea:	mov    esi,eax
  4118ec:	jmp    0x40fc10
  4118f1:	cmp    ebx,0x68
  4118f4:	je     0x411e77
  4118fa:	cmp    ebx,0x6a
  4118fd:	jne    0x4121ca
  411903:	lea    rsi,[rsp+0x100]
  41190b:	lea    rdx,[rip+0x1eb6d]        # 0x43047f
  411912:	movq   r8,xmm0
  411917:	movapd xmm2,xmm0
  41191b:	mov    rcx,rsi
  41191e:	call   0x4294c8
  411923:	mov    rdx,rsi
  411926:	mov    ecx,DWORD PTR [rdx]
  411928:	add    rdx,0x4
  41192c:	lea    eax,[rcx-0x1010101]
  411932:	not    ecx
  411934:	and    eax,ecx
  411936:	and    eax,0x80808080
  41193b:	je     0x411926
  41193d:	mov    ecx,eax
  41193f:	mov    r8,rbp
  411942:	shr    ecx,0x10
  411945:	test   eax,0x8080
  41194a:	cmove  eax,ecx
  41194d:	lea    rcx,[rdx+0x2]
  411951:	cmove  rdx,rcx
  411955:	add    al,al
  411957:	mov    rcx,rsi
  41195a:	sbb    rdx,0x3
  41195e:	call   0x40d970
  411963:	mov    esi,eax
  411965:	jmp    0x40fc10
  41196a:	cmp    ebx,0x68
  41196d:	je     0x41167e
  411973:	cmp    ebx,0x6a
  411976:	jne    0x412142
  41197c:	mov    rax,QWORD PTR [r12]
  411980:	movzx  edx,BYTE PTR [rbp+0x0]
  411984:	mov    rcx,rbp
  411987:	movzx  r8d,BYTE PTR [rbp+0x1]
  41198c:	mov    QWORD PTR [rbp+0x0],rax
  411990:	mov    rax,QWORD PTR [r12+0x8]
  411995:	mov    QWORD PTR [rbp+0x8],rax
  411999:	mov    rax,QWORD PTR [r12+0x10]
  41199e:	mov    QWORD PTR [rbp+0x10],rax
  4119a2:	mov    rax,QWORD PTR [r12+0x18]
  4119a7:	mov    QWORD PTR [rbp+0x18],rax
  4119ab:	movzx  eax,WORD PTR [r12+0x20]
  4119b1:	mov    WORD PTR [rbp+0x20],ax
  4119b5:	movzx  eax,BYTE PTR [r12+0x22]
  4119bb:	mov    BYTE PTR [rbp+0x22],al
  4119be:	call   0x413970
  4119c3:	mov    esi,eax
  4119c5:	jmp    0x40fc10
  4119ca:	cmp    ebx,0x68
  4119cd:	je     0x41238b
  4119d3:	cmp    ebx,0x6a
  4119d6:	jne    0x41222b
  4119dc:	test   r8,r8
  4119df:	mov    r9,rbp
  4119e2:	js     0x412895
  4119e8:	xor    edx,edx
  4119ea:	mov    ecx,0x4
  4119ef:	call   0x40df40
  4119f4:	mov    esi,eax
  4119f6:	jmp    0x40fc10
  4119fb:	cmp    ebx,0x68
  4119fe:	je     0x411d0c
  411a04:	cmp    ebx,0x6a
  411a07:	jne    0x41231a
  411a0d:	cvtss2sd xmm0,xmm0
  411a11:	movzx  r8d,BYTE PTR [rbp+0x1]
  411a16:	lea    rsi,[rsp+0x100]
  411a1e:	lea    rdx,[rip+0x1ea4f]        # 0x430474
  411a25:	movapd xmm3,xmm0
  411a29:	movq   r9,xmm0
  411a2e:	mov    rcx,rsi
  411a31:	call   0x4294c8
  411a36:	mov    rdx,rsi
  411a39:	mov    ecx,DWORD PTR [rdx]
  411a3b:	add    rdx,0x4
  411a3f:	lea    eax,[rcx-0x1010101]
  411a45:	not    ecx
  411a47:	and    eax,ecx
  411a49:	and    eax,0x80808080
  411a4e:	je     0x411a39
  411a50:	mov    ecx,eax
  411a52:	mov    r8,rbp
  411a55:	shr    ecx,0x10
  411a58:	test   eax,0x8080
  411a5d:	cmove  eax,ecx
  411a60:	lea    rcx,[rdx+0x2]
  411a64:	cmove  rdx,rcx
  411a68:	add    al,al
  411a6a:	mov    rcx,rsi
  411a6d:	sbb    rdx,0x3
  411a71:	call   0x40d970
  411a76:	mov    esi,eax
  411a78:	jmp    0x40fc10
  411a7d:	test   rcx,rcx
  411a80:	js     0x413014
  411a86:	mov    QWORD PTR [rbp+0x0],rcx
  411a8a:	mov    esi,0x8
  411a8f:	jmp    0x40fc10
  411a94:	cmp    ebx,0xaf
  411a9a:	je     0x411aa4
  411a9c:	cmp    ebx,0x100
  411aa2:	jne    0x411ae3
  411aa4:	lea    rsi,[rsp+0x100]
  411aac:	lea    rdx,[rip+0x1e9b6]        # 0x430469
  411ab3:	mov    r8,rcx
  411ab6:	mov    rcx,rsi
  411ab9:	call   0x4294c8
  411abe:	jmp    0x41115b
  411ac3:	cmp    ebx,0x27
  411ac6:	je     0x411aa4
  411ac8:	jle    0x411ade
  411aca:	cmp    ebx,0x2f
  411acd:	je     0x411aa4
  411acf:	cmp    ebx,0x30
  411ad2:	jne    0x411ae3
  411ad4:	mov    esi,0xfffffffb
  411ad9:	jmp    0x40fc10
  411ade:	cmp    ebx,0x23
  411ae1:	je     0x411aa4
  411ae3:	mov    esi,0xfffffffe
  411ae8:	jmp    0x40fc10
  411aed:	movabs rax,0x346dc5d638865
  411af7:	movabs rdx,0x68db8bac710ca
  411b01:	add    rax,rcx
  411b04:	cmp    rax,rdx
  411b07:	ja     0x4134d9
  411b0d:	imul   rcx,rcx,0x2710
  411b14:	mov    esi,0x8
  411b19:	mov    QWORD PTR [rbp+0x0],rcx
  411b1d:	jmp    0x40fcc0
  411b22:	pxor   xmm0,xmm0
  411b26:	mov    esi,0x4
  411b2b:	cvtsi2ss xmm0,rcx
  411b30:	movss  DWORD PTR [rbp+0x0],xmm0
  411b35:	jmp    0x40fc10
  411b3a:	cmp    rcx,rdx
  411b3d:	ja     0x41303c
  411b43:	mov    DWORD PTR [rbp+0x0],ecx
  411b46:	mov    esi,0x4
  411b4b:	jmp    0x40fc10
  411b50:	mov    eax,0xfffffffc
  411b55:	jmp    0x40fc12
  411b5a:	ucomiss xmm0,DWORD PTR [rip+0x1f56b]        # 0x4310cc
  411b61:	ja     0x412eb9
  411b67:	movss  xmm1,DWORD PTR [rip+0x1f561]        # 0x4310d0
  411b6f:	ucomiss xmm1,xmm0
  411b72:	ja     0x41339f
  411b78:	mulss  xmm0,DWORD PTR [rip+0x1f554]        # 0x4310d4
  411b80:	cvttss2si rax,xmm0
  411b85:	mov    QWORD PTR [rbp+0x0],rax
  411b89:	mov    esi,0x8
  411b8e:	jmp    0x40fcc0
  411b93:	ucomisd xmm0,QWORD PTR [rip+0x1f545]        # 0x4310e0
  411b9b:	jb     0x413377
  411ba1:	movsd  xmm1,QWORD PTR [rip+0x1f557]        # 0x431100
  411ba9:	ucomisd xmm1,xmm0
  411bad:	jb     0x41336d
  411bb3:	cvttsd2si eax,xmm0
  411bb7:	mov    esi,0x2
  411bbc:	mov    WORD PTR [rbp+0x0],ax
  411bc0:	jmp    0x40fc10
  411bc5:	ucomiss xmm0,DWORD PTR [rip+0x1f50c]        # 0x4310d8
  411bcc:	ja     0x412ed7
  411bd2:	movss  xmm1,DWORD PTR [rip+0x1f502]        # 0x4310dc
  411bda:	ucomiss xmm1,xmm0
  411bdd:	ja     0x413028
  411be3:	mulss  xmm0,DWORD PTR [rip+0x1f4e9]        # 0x4310d4
  411beb:	mov    esi,0x4
  411bf0:	cvttss2si eax,xmm0
  411bf4:	mov    DWORD PTR [rbp+0x0],eax
  411bf7:	jmp    0x40fc10
  411bfc:	mov    rax,QWORD PTR [r12]
  411c00:	xor    r8d,r8d
  411c03:	mov    edx,0x5
  411c08:	mov    rcx,rbp
  411c0b:	mov    QWORD PTR [rbp+0x0],rax
  411c0f:	mov    rax,QWORD PTR [r12+0x8]
  411c14:	mov    QWORD PTR [rbp+0x8],rax
  411c18:	mov    rax,QWORD PTR [r12+0x10]
  411c1d:	mov    QWORD PTR [rbp+0x10],rax
  411c21:	mov    rax,QWORD PTR [r12+0x18]
  411c26:	mov    QWORD PTR [rbp+0x18],rax
  411c2a:	movzx  eax,WORD PTR [r12+0x20]
  411c30:	mov    WORD PTR [rbp+0x20],ax
  411c34:	movzx  eax,BYTE PTR [r12+0x22]
  411c3a:	mov    BYTE PTR [rbp+0x22],al
  411c3d:	call   0x413970
  411c42:	test   eax,eax
  411c44:	mov    esi,eax
  411c46:	js     0x40fc10
  411c4c:	cmp    WORD PTR [rbp+0x2],0x0
  411c51:	jne    0x411860
  411c57:	movzx  eax,BYTE PTR [rbp+0x4]
  411c5b:	mov    esi,0x2
  411c60:	shl    eax,0x8
  411c63:	mov    edx,eax
  411c65:	movzx  eax,BYTE PTR [rbp+0x5]
  411c69:	add    eax,edx
  411c6b:	mov    WORD PTR [rbp+0x0],ax
  411c6f:	jmp    0x40fc10
  411c74:	cmp    ebx,0xaf
  411c7a:	je     0x411c88
  411c7c:	cmp    ebx,0x100
  411c82:	jne    0x41222b
  411c88:	lea    rdx,[rsp+0x100]
  411c90:	mov    rcx,r12
  411c93:	call   0x4135a0
  411c98:	lea    r9,[rbp+0x8]
  411c9c:	mov    r8,rbp
  411c9f:	mov    rdx,rax
  411ca2:	jmp    0x411165
  411ca7:	cmp    ebx,0xaf
  411cad:	je     0x411cbb
  411caf:	cmp    ebx,0x100
  411cb5:	jne    0x41231a
  411cbb:	cvtss2sd xmm0,xmm0
  411cbf:	lea    rsi,[rsp+0x100]
  411cc7:	lea    rdx,[rip+0x1e7a1]        # 0x43046f
  411cce:	movapd xmm2,xmm0
  411cd2:	movq   r8,xmm0
  411cd7:	mov    rcx,rsi
  411cda:	call   0x4294c8
  411cdf:	jmp    0x41115b
  411ce4:	pxor   xmm0,xmm0
  411ce8:	mov    esi,0x4
  411ced:	pxor   xmm5,xmm5
  411cf1:	cvtsi2sd xmm0,r8
  411cf6:	divsd  xmm0,QWORD PTR [rip+0x1f39a]        # 0x431098
  411cfe:	cvtsd2ss xmm5,xmm0
  411d02:	movss  DWORD PTR [rbp+0x0],xmm5
  411d07:	jmp    0x40fc10
  411d0c:	pxor   xmm1,xmm1
  411d10:	ucomiss xmm0,xmm1
  411d13:	setp   al
  411d16:	mov    edx,0x1
  411d1b:	mov    esi,0x1
  411d20:	cmovne eax,edx
  411d23:	cmp    ebx,0x3c
  411d26:	mov    BYTE PTR [rbp+0x0],al
  411d29:	sete   al
  411d2c:	jmp    0x40fcb8
  411d31:	mov    eax,0x80000000
  411d36:	mov    edx,0xffffffff
  411d3b:	add    rax,r8
  411d3e:	cmp    rax,rdx
  411d41:	ja     0x4134bb
  411d47:	mov    DWORD PTR [rbp+0x0],r8d
  411d4b:	mov    esi,0x4
  411d50:	jmp    0x40fc10
  411d55:	mov    DWORD PTR [rbp+0x0],r8d
  411d59:	mov    esi,0x4
  411d5e:	jmp    0x40fc10
  411d63:	mov    eax,r8d
  411d66:	mov    edx,0x68db8bad
  411d6b:	sar    r8d,0x1f
  411d6f:	imul   edx
  411d71:	mov    eax,edx
  411d73:	sar    eax,0xc
  411d76:	sub    eax,r8d
  411d79:	cmp    eax,0xffff
  411d7e:	ja     0x41301e
  411d84:	mov    WORD PTR [rbp+0x0],ax
  411d88:	mov    esi,0x2
  411d8d:	jmp    0x40fc10
  411d92:	cmp    ebx,0xaf
  411d98:	je     0x411da6
  411d9a:	cmp    ebx,0x100
  411da0:	jne    0x412142
  411da6:	lea    rsi,[rsp+0x100]
  411dae:	mov    rcx,r12
  411db1:	mov    rdx,rsi
  411db4:	call   0x413620
  411db9:	test   eax,eax
  411dbb:	jns    0x41115b
  411dc1:	or     esi,0xffffffff
  411dc4:	jmp    0x40fc10
  411dc9:	nop    DWORD PTR [rax+0x0]
  411dd0:	ucomisd xmm0,QWORD PTR [rip+0x1f370]        # 0x431148
  411dd8:	ja     0x412f3b
  411dde:	movsd  xmm1,QWORD PTR [rip+0x1f36a]        # 0x431150
  411de6:	ucomisd xmm1,xmm0
  411dea:	ja     0x4132af
  411df0:	mulsd  xmm0,QWORD PTR [rip+0x1f2a0]        # 0x431098
  411df8:	mov    esi,0x4
  411dfd:	cvttsd2si eax,xmm0
  411e01:	mov    DWORD PTR [rbp+0x0],eax
  411e04:	jmp    0x40fc10
  411e09:	cmp    ebx,0xaf
  411e0f:	je     0x411e1d
  411e11:	cmp    ebx,0x100
  411e17:	jne    0x4121ca
  411e1d:	lea    rsi,[rsp+0x100]
  411e25:	movapd xmm2,xmm0
  411e29:	movq   r8,xmm0
  411e2e:	lea    rdx,[rip+0x1e644]        # 0x430479
  411e35:	mov    rcx,rsi
  411e38:	call   0x4294c8
  411e3d:	jmp    0x41115b
  411e42:	lea    rax,[r8+0x270f]
  411e49:	cmp    rax,0x2710270e
  411e4f:	ja     0x413359
  411e55:	mov    eax,r8d
  411e58:	mov    edx,0x68db8bad
  411e5d:	sar    r8d,0x1f
  411e61:	imul   edx
  411e63:	mov    esi,0x2
  411e68:	sar    edx,0xc
  411e6b:	sub    edx,r8d
  411e6e:	mov    WORD PTR [rbp+0x0],dx
  411e72:	jmp    0x40fc10
  411e77:	pxor   xmm1,xmm1
  411e7b:	ucomisd xmm0,xmm1
  411e7f:	jmp    0x411d13
  411e84:	mov    rax,QWORD PTR [r12]
  411e88:	xor    r8d,r8d
  411e8b:	mov    edx,0x14
  411e90:	mov    rcx,rbp
  411e93:	mov    QWORD PTR [rbp+0x0],rax
  411e97:	mov    rax,QWORD PTR [r12+0x8]
  411e9c:	mov    QWORD PTR [rbp+0x8],rax
  411ea0:	mov    rax,QWORD PTR [r12+0x10]
  411ea5:	mov    QWORD PTR [rbp+0x10],rax
  411ea9:	mov    rax,QWORD PTR [r12+0x18]
  411eae:	mov    QWORD PTR [rbp+0x18],rax
  411eb2:	movzx  eax,WORD PTR [r12+0x20]
  411eb8:	mov    WORD PTR [rbp+0x20],ax
  411ebc:	movzx  eax,BYTE PTR [r12+0x22]
  411ec2:	mov    BYTE PTR [rbp+0x22],al
  411ec5:	call   0x413970
  411eca:	test   eax,eax
  411ecc:	mov    esi,eax
  411ece:	js     0x40fc10
  411ed4:	cmp    WORD PTR [rbp+0x2],0x0
  411ed9:	jne    0x411860
  411edf:	movzx  eax,BYTE PTR [rbp+0x4]
  411ee3:	mov    esi,0x8
  411ee8:	shl    eax,0x8
  411eeb:	mov    edx,eax
  411eed:	movzx  eax,BYTE PTR [rbp+0x5]
  411ef1:	add    eax,edx
  411ef3:	shl    eax,0x8
  411ef6:	mov    edx,eax
  411ef8:	movzx  eax,BYTE PTR [rbp+0x6]
  411efc:	add    eax,edx
  411efe:	movzx  edx,BYTE PTR [rbp+0x7]
  411f02:	shl    eax,0x8
  411f05:	add    eax,edx
  411f07:	shl    rax,0x20
  411f0b:	mov    rcx,rax
  411f0e:	movzx  eax,BYTE PTR [rbp+0x8]
  411f12:	shl    eax,0x8
  411f15:	mov    edx,eax
  411f17:	movzx  eax,BYTE PTR [rbp+0x9]
  411f1b:	add    eax,edx
  411f1d:	shl    eax,0x8
  411f20:	mov    edx,eax
  411f22:	movzx  eax,BYTE PTR [rbp+0xa]
  411f26:	add    eax,edx
  411f28:	movzx  edx,BYTE PTR [rbp+0xb]
  411f2c:	shl    eax,0x8
  411f2f:	add    eax,edx
  411f31:	add    rax,rcx
  411f34:	mov    QWORD PTR [rbp+0x0],rax
  411f38:	jmp    0x40fc10
  411f3d:	mov    rax,r8
  411f40:	movabs rdx,0x346dc5d63886594b
  411f4a:	sar    r8,0x3f
  411f4e:	imul   rdx
  411f51:	sar    rdx,0xb
  411f55:	sub    rdx,r8
  411f58:	js     0x413395
  411f5e:	mov    QWORD PTR [rbp+0x0],rdx
  411f62:	mov    esi,0x8
  411f67:	jmp    0x40fc10
  411f6c:	mov    eax,r8d
  411f6f:	mov    edx,0x68db8bad
  411f74:	sar    r8d,0x1f
  411f78:	imul   edx
  411f7a:	sar    edx,0xc
  411f7d:	sub    edx,r8d
  411f80:	js     0x41338b
  411f86:	movsxd rax,edx
  411f89:	mov    esi,0x8
  411f8e:	mov    QWORD PTR [rbp+0x0],rax
  411f92:	jmp    0x40fc10
  411f97:	mov    rax,QWORD PTR [r12]
  411f9b:	mov    r8d,0x4
  411fa1:	mov    edx,0xa
  411fa6:	mov    rcx,rbp
  411fa9:	mov    QWORD PTR [rbp+0x0],rax
  411fad:	mov    rax,QWORD PTR [r12+0x8]
  411fb2:	mov    QWORD PTR [rbp+0x8],rax
  411fb6:	mov    rax,QWORD PTR [r12+0x10]
  411fbb:	mov    QWORD PTR [rbp+0x10],rax
  411fbf:	mov    rax,QWORD PTR [r12+0x18]
  411fc4:	mov    QWORD PTR [rbp+0x18],rax
  411fc8:	movzx  eax,WORD PTR [r12+0x20]
  411fce:	mov    WORD PTR [rbp+0x20],ax
  411fd2:	movzx  eax,BYTE PTR [r12+0x22]
  411fd8:	mov    BYTE PTR [rbp+0x22],al
  411fdb:	call   0x413970
  411fe0:	test   eax,eax
  411fe2:	mov    esi,eax
  411fe4:	js     0x40fc10
  411fea:	cmp    BYTE PTR [rbp+0x3],0x0
  411fee:	jne    0x411860
  411ff4:	movzx  edx,BYTE PTR [rbp+0x4]
  411ff8:	movzx  r8d,BYTE PTR [rbp+0x2]
  411ffd:	xor    eax,eax
  411fff:	mov    ecx,edx
  412001:	movzx  edx,BYTE PTR [rbp+0x5]
  412005:	test   r8b,r8b
  412008:	setne  al
  41200b:	shl    ecx,0x8
  41200e:	add    edx,ecx
  412010:	mov    ecx,edx
  412012:	movzx  edx,BYTE PTR [rbp+0x6]
  412016:	shl    ecx,0x8
  412019:	add    edx,ecx
  41201b:	movzx  ecx,BYTE PTR [rbp+0x7]
  41201f:	shl    edx,0x8
  412022:	add    edx,ecx
  412024:	mov    ecx,eax
  412026:	neg    ecx
  412028:	xor    edx,ecx
  41202a:	add    eax,edx
  41202c:	cdq    
  41202d:	xor    r8d,edx
  412030:	and    r8d,0x1
  412034:	jne    0x411860
  41203a:	mov    DWORD PTR [rbp+0x0],eax
  41203d:	mov    esi,0x4
  412042:	jmp    0x40fc10
  412047:	ucomisd xmm0,QWORD PTR [rip+0x1f0e1]        # 0x431130
  41204f:	ja     0x412ec3
  412055:	pxor   xmm1,xmm1
  412059:	ucomisd xmm1,xmm0
  41205d:	ja     0x4134c5
  412063:	movsd  xmm1,QWORD PTR [rip+0x1f0b5]        # 0x431120
  41206b:	ucomisd xmm0,xmm1
  41206f:	jae    0x4126c7
  412075:	cvttsd2si rax,xmm0
  41207a:	mov    QWORD PTR [rbp+0x0],rax
  41207e:	mov    esi,0x8
  412083:	jmp    0x40fc10
  412088:	cmp    ebx,0xaf
  41208e:	je     0x41209c
  412090:	cmp    ebx,0x100
  412096:	jne    0x41248e
  41209c:	test   r8d,r8d
  41209f:	js     0x412805
  4120a5:	mov    eax,r8d
  4120a8:	mov    edx,0x51eb851f
  4120ad:	sar    r8d,0x1f
  4120b1:	imul   edx
  4120b3:	lea    rsi,[rsp+0x100]
  4120bb:	mov    rcx,rsi
  4120be:	sar    edx,0x4
  4120c1:	mov    r9d,edx
  4120c4:	sub    r9d,r8d
  4120c7:	add    r9d,0x1
  4120cb:	sar    r9d,1
  4120ce:	mov    eax,r9d
  4120d1:	mov    edx,0x51eb851f
  4120d6:	imul   edx
  4120d8:	mov    eax,r9d
  4120db:	sar    eax,0x1f
  4120de:	sar    edx,0x5
  4120e1:	mov    r8d,edx
  4120e4:	lea    rdx,[rip+0x1e35f]        # 0x43044a
  4120eb:	sub    r8d,eax
  4120ee:	imul   eax,r8d,0x64
  4120f2:	sub    r9d,eax
  4120f5:	call   0x4294c8
  4120fa:	jmp    0x41115b
  4120ff:	ucomiss xmm0,DWORD PTR [rip+0x1efc2]        # 0x4310c8
  412106:	ja     0x412f1d
  41210c:	pxor   xmm1,xmm1
  412110:	ucomiss xmm1,xmm0
  412113:	ja     0x413291
  412119:	ucomiss xmm0,DWORD PTR [rip+0x1efa0]        # 0x4310c0
  412120:	jae    0x4126f1
  412126:	cvttss2si rax,xmm0
  41212b:	mov    QWORD PTR [rbp+0x0],rax
  41212f:	mov    esi,0x8
  412134:	jmp    0x40fc10
  412139:	cmp    ebx,0x23
  41213c:	je     0x411da6
  412142:	mov    esi,0xfffffffe
  412147:	jmp    0x40fc10
  41214c:	lea    rbx,[rsp+0x100]
  412154:	mov    rcx,r12
  412157:	mov    rdx,rbx
  41215a:	call   0x413620
  41215f:	test   eax,eax
  412161:	js     0x41327f
  412167:	mov    rcx,rbx
  41216a:	mov    esi,0x4
  41216f:	call   0x4295d8
  412174:	pxor   xmm3,xmm3
  412178:	cvtsd2ss xmm3,xmm0
  41217c:	movss  DWORD PTR [rbp+0x0],xmm3
  412181:	jmp    0x40fc10
  412186:	ucomisd xmm0,QWORD PTR [rip+0x1efaa]        # 0x431138
  41218e:	ja     0x412f13
  412194:	movsd  xmm1,QWORD PTR [rip+0x1efa4]        # 0x431140
  41219c:	ucomisd xmm1,xmm0
  4121a0:	ja     0x413287
  4121a6:	mulsd  xmm0,QWORD PTR [rip+0x1eeea]        # 0x431098
  4121ae:	mov    esi,0x8
  4121b3:	cvttsd2si rax,xmm0
  4121b8:	mov    QWORD PTR [rbp+0x0],rax
  4121bc:	jmp    0x40fcc0
  4121c1:	cmp    ebx,0x23
  4121c4:	je     0x411e1d
  4121ca:	mov    esi,0xfffffffe
  4121cf:	jmp    0x40fc10
  4121d4:	ucomisd xmm0,QWORD PTR [rip+0x1ef14]        # 0x4310f0
  4121dc:	jb     0x412acb
  4121e2:	movsd  xmm1,QWORD PTR [rip+0x1ef0e]        # 0x4310f8
  4121ea:	ucomisd xmm1,xmm0
  4121ee:	jb     0x41326b
  4121f4:	cvttsd2si eax,xmm0
  4121f8:	mov    esi,0x2
  4121fd:	mov    WORD PTR [rbp+0x0],ax
  412201:	jmp    0x40fc10
  412206:	sub    r9d,0x1
  41220a:	cmp    r9d,0x22
  41220e:	je     0x412746
  412214:	add    r12,0x1
  412218:	movsx  edx,BYTE PTR [r12+rax*1]
  41221d:	jmp    0x410917
  412222:	cmp    ebx,0x23
  412225:	je     0x411c88
  41222b:	mov    esi,0xfffffffe
  412230:	jmp    0x40fc10
  412235:	mov    rax,QWORD PTR [r12]
  412239:	mov    r8d,0x4
  41223f:	mov    edx,0x14
  412244:	mov    rcx,rbp
  412247:	mov    QWORD PTR [rbp+0x0],rax
  41224b:	mov    rax,QWORD PTR [r12+0x8]
  412250:	mov    QWORD PTR [rbp+0x8],rax
  412254:	mov    rax,QWORD PTR [r12+0x10]
  412259:	mov    QWORD PTR [rbp+0x10],rax
  41225d:	mov    rax,QWORD PTR [r12+0x18]
  412262:	mov    QWORD PTR [rbp+0x18],rax
  412266:	movzx  eax,WORD PTR [r12+0x20]
  41226c:	mov    WORD PTR [rbp+0x20],ax
  412270:	movzx  eax,BYTE PTR [r12+0x22]
  412276:	mov    BYTE PTR [rbp+0x22],al
  412279:	call   0x413970
  41227e:	test   eax,eax
  412280:	mov    esi,eax
  412282:	js     0x40fc10
  412288:	cmp    BYTE PTR [rbp+0x3],0x0
  41228c:	jne    0x411860
  412292:	movzx  eax,BYTE PTR [rbp+0x4]
  412296:	movzx  r8d,BYTE PTR [rbp+0x2]
  41229b:	shl    eax,0x8
  41229e:	mov    edx,eax
  4122a0:	movzx  eax,BYTE PTR [rbp+0x5]
  4122a4:	add    eax,edx
  4122a6:	shl    eax,0x8
  4122a9:	mov    edx,eax
  4122ab:	movzx  eax,BYTE PTR [rbp+0x6]
  4122af:	add    eax,edx
  4122b1:	movzx  edx,BYTE PTR [rbp+0x7]
  4122b5:	shl    eax,0x8
  4122b8:	lea    ecx,[rax+rdx*1]
  4122bb:	movzx  edx,BYTE PTR [rbp+0x8]
  4122bf:	xor    eax,eax
  4122c1:	shl    rcx,0x20
  4122c5:	test   r8b,r8b
  4122c8:	mov    r9,rcx
  4122cb:	setne  al
  4122ce:	mov    ecx,edx
  4122d0:	movzx  edx,BYTE PTR [rbp+0x9]
  4122d4:	shl    ecx,0x8
  4122d7:	add    edx,ecx
  4122d9:	mov    ecx,edx
  4122db:	movzx  edx,BYTE PTR [rbp+0xa]
  4122df:	shl    ecx,0x8
  4122e2:	add    edx,ecx
  4122e4:	movzx  ecx,BYTE PTR [rbp+0xb]
  4122e8:	shl    edx,0x8
  4122eb:	add    edx,ecx
  4122ed:	lea    rcx,[r9+rdx*1]
  4122f1:	mov    rdx,rax
  4122f4:	neg    rdx
  4122f7:	xor    rdx,rcx
  4122fa:	add    rax,rdx
  4122fd:	cqo    
  4122ff:	xor    r8,rdx
  412302:	and    r8d,0x1
  412306:	je     0x411b85
  41230c:	jmp    0x411860
  412311:	cmp    ebx,0x23
  412314:	je     0x411cbb
  41231a:	mov    esi,0xfffffffe
  41231f:	jmp    0x40fc10
  412324:	ucomiss xmm0,DWORD PTR [rip+0x1ed7d]        # 0x4310a8
  41232b:	jb     0x412ad5
  412331:	movss  xmm1,DWORD PTR [rip+0x1ed73]        # 0x4310ac
  412339:	ucomiss xmm1,xmm0
  41233c:	jb     0x4133cc
  412342:	cvttss2si eax,xmm0
  412346:	mov    esi,0x2
  41234b:	mov    WORD PTR [rbp+0x0],ax
  41234f:	jmp    0x40fc10
  412354:	movss  DWORD PTR [rbp+0x0],xmm0
  412359:	mov    esi,0x4
  41235e:	jmp    0x40fc10
  412363:	pxor   xmm0,xmm0
  412367:	mov    esi,0x4
  41236c:	pxor   xmm4,xmm4
  412370:	cvtsi2sd xmm0,r8d
  412375:	divsd  xmm0,QWORD PTR [rip+0x1ed1b]        # 0x431098
  41237d:	cvtsd2ss xmm4,xmm0
  412381:	movss  DWORD PTR [rbp+0x0],xmm4
  412386:	jmp    0x40fc10
  41238b:	test   r8,r8
  41238e:	mov    esi,0x1
  412393:	setne  BYTE PTR [rbp+0x0]
  412397:	cmp    ebx,0x3c
  41239a:	sete   al
  41239d:	jmp    0x40fcb8
  4123a2:	mov    rax,QWORD PTR [r12]
  4123a6:	xor    r8d,r8d
  4123a9:	mov    edx,0x5
  4123ae:	mov    rcx,rbp
  4123b1:	mov    QWORD PTR [rbp+0x0],rax
  4123b5:	mov    rax,QWORD PTR [r12+0x8]
  4123ba:	mov    QWORD PTR [rbp+0x8],rax
  4123be:	mov    rax,QWORD PTR [r12+0x10]
  4123c3:	mov    QWORD PTR [rbp+0x10],rax
  4123c7:	mov    rax,QWORD PTR [r12+0x18]
  4123cc:	mov    QWORD PTR [rbp+0x18],rax
  4123d0:	movzx  eax,WORD PTR [r12+0x20]
  4123d6:	mov    WORD PTR [rbp+0x20],ax
  4123da:	movzx  eax,BYTE PTR [r12+0x22]
  4123e0:	mov    BYTE PTR [rbp+0x22],al
  4123e3:	call   0x413970
  4123e8:	test   eax,eax
  4123ea:	mov    esi,eax
  4123ec:	js     0x40fc10
  4123f2:	cmp    BYTE PTR [rbp+0x3],0x0
  4123f6:	jne    0x411860
  4123fc:	movzx  edx,BYTE PTR [rbp+0x2]
  412400:	movzx  r8d,BYTE PTR [rbp+0x4]
  412405:	xor    eax,eax
  412407:	movzx  ecx,BYTE PTR [rbp+0x5]
  41240b:	test   dl,dl
  41240d:	setne  al
  412410:	shl    r8d,0x8
  412414:	add    r8d,ecx
  412417:	mov    ecx,eax
  412419:	neg    ecx
  41241b:	xor    ecx,r8d
  41241e:	add    eax,ecx
  412420:	mov    ecx,eax
  412422:	sar    ecx,0xf
  412425:	xor    edx,ecx
  412427:	and    edx,0x1
  41242a:	jne    0x411860
  412430:	mov    WORD PTR [rbp+0x0],ax
  412434:	mov    esi,0x2
  412439:	jmp    0x40fc10
  41243e:	test   r8d,r8d
  412441:	mov    esi,0x1
  412446:	setne  BYTE PTR [rbp+0x0]
  41244a:	cmp    ebx,0x3c
  41244d:	sete   al
  412450:	jmp    0x40fcb8
  412455:	ucomiss xmm0,DWORD PTR [rip+0x1ec44]        # 0x4310a0
  41245c:	jb     0x4132a5
  412462:	movss  xmm1,DWORD PTR [rip+0x1ec46]        # 0x4310b0
  41246a:	ucomiss xmm1,xmm0
  41246d:	jb     0x41329b
  412473:	cvttss2si eax,xmm0
  412477:	mov    esi,0x2
  41247c:	mov    WORD PTR [rbp+0x0],ax
  412480:	jmp    0x40fc10
  412485:	cmp    ebx,0x23
  412488:	je     0x41209c
  41248e:	mov    esi,0xfffffffe
  412493:	jmp    0x40fc10
  412498:	mov    eax,r8d
  41249b:	mov    edx,0x68db8bad
  4124a0:	sar    r8d,0x1f
  4124a4:	imul   edx
  4124a6:	mov    eax,edx
  4124a8:	sar    eax,0xc
  4124ab:	sub    eax,r8d
  4124ae:	lea    edx,[rax+0x8000]
  4124b4:	cmp    edx,0xffff
  4124ba:	ja     0x413050
  4124c0:	mov    WORD PTR [rbp+0x0],ax
  4124c4:	mov    esi,0x2
  4124c9:	jmp    0x40fc10
  4124ce:	pxor   xmm5,xmm5
  4124d2:	mov    esi,0x4
  4124d7:	cvtsd2ss xmm5,xmm0
  4124db:	movss  DWORD PTR [rbp+0x0],xmm5
  4124e0:	jmp    0x40fc10
  4124e5:	lea    rax,[r8+0x1388270f]
  4124ec:	cmp    rax,0x2710270e
  4124f2:	ja     0x4134b1
  4124f8:	mov    eax,r8d
  4124fb:	mov    edx,0x68db8bad
  412500:	sar    r8d,0x1f
  412504:	imul   edx
  412506:	mov    esi,0x2
  41250b:	sar    edx,0xc
  41250e:	sub    edx,r8d
  412511:	mov    WORD PTR [rbp+0x0],dx
  412515:	jmp    0x40fc10
  41251a:	cmp    ebx,0x7f
  41251d:	je     0x4111fa
  412523:	jmp    0x410f5a
  412528:	call   0x40dea0
  41252d:	test   al,al
  41252f:	jne    0x4128ae
  412535:	movzx  eax,BYTE PTR [rsi]
  412538:	test   al,al
  41253a:	je     0x412567
  41253c:	sub    eax,0x30
  41253f:	cmp    eax,0x9
  412542:	ja     0x410a88
  412548:	mov    rdx,rsi
  41254b:	jmp    0x41255c
  41254d:	nop    DWORD PTR [rax]
  412550:	sub    eax,0x30
  412553:	cmp    eax,0x9
  412556:	ja     0x410a88
  41255c:	add    rdx,0x1
  412560:	movzx  eax,BYTE PTR [rdx]
  412563:	test   al,al
  412565:	jne    0x412550
  412567:	xor    eax,eax
  412569:	or     rcx,0xffffffffffffffff
  41256d:	mov    rdi,rsi
  412570:	repnz scas al,BYTE PTR es:[rdi]
  412572:	mov    rax,rcx
  412575:	not    rax
  412578:	sub    rax,0x1
  41257c:	cmp    rax,0x2
  412580:	je     0x41258c
  412582:	cmp    rax,0x4
  412586:	jne    0x410a88
  41258c:	mov    rcx,QWORD PTR [rsp+0x80]
  412594:	call   0x4295d0
  412599:	lea    edx,[rax-0x1]
  41259c:	cmp    edx,0x1e
  41259f:	ja     0x4125a8
  4125a1:	mov    DWORD PTR [rsp+0xe8],eax
  4125a8:	mov    rcx,rsi
  4125ab:	add    DWORD PTR [rsp+0x78],0x1
  4125b0:	add    r13d,0x1
  4125b4:	call   0x4295d0
  4125b9:	mov    rdx,rbx
  4125bc:	mov    ecx,eax
  4125be:	call   0x40dfc0
  4125c3:	cmp    ebp,0x1
  4125c6:	sbb    r12d,r12d
  4125c9:	and    r12d,0x2
  4125cd:	jmp    0x410a8e
  4125d2:	mov    edx,DWORD PTR [r15]
  4125d5:	test   edx,edx
  4125d7:	jne    0x412950
  4125dd:	mov    rcx,QWORD PTR [rsp+0x90]
  4125e5:	mov    esi,0xfffffffd
  4125ea:	call   0x429580
  4125ef:	jmp    0x40fc10
  4125f4:	mov    rcx,rsi
  4125f7:	call   0x40dea0
  4125fc:	test   al,al
  4125fe:	jne    0x412791
  412604:	movzx  eax,BYTE PTR [rsi]
  412607:	test   al,al
  412609:	je     0x412633
  41260b:	sub    eax,0x30
  41260e:	cmp    eax,0x9
  412611:	ja     0x410a88
  412617:	mov    rdx,rsi
  41261a:	jmp    0x412628
  41261c:	sub    eax,0x30
  41261f:	cmp    eax,0x9
  412622:	ja     0x410a88
  412628:	add    rdx,0x1
  41262c:	movzx  eax,BYTE PTR [rdx]
  41262f:	test   al,al
  412631:	jne    0x41261c
  412633:	cmp    DWORD PTR [rsp+0x78],0x0
  412638:	setne  r14b
  41263c:	test   r13d,r13d
  41263f:	setne  BYTE PTR [rsp+0x7c]
  412644:	je     0x41264f
  412646:	test   r14b,r14b
  412649:	jne    0x410a88
  41264f:	xor    eax,eax
  412651:	or     rcx,0xffffffffffffffff
  412655:	mov    rdi,rsi
  412658:	repnz scas al,BYTE PTR es:[rdi]
  41265a:	mov    rax,rcx
  41265d:	not    rax
  412660:	sub    rax,0x1
  412664:	je     0x410a88
  41266a:	cmp    rax,0x2
  41266e:	jbe    0x412e4c
  412674:	cmp    rax,0x4
  412678:	jne    0x410a88
  41267e:	mov    rcx,rsi
  412681:	add    r13d,0x1
  412685:	call   0x4295d0
  41268a:	mov    rdx,rbx
  41268d:	mov    ecx,eax
  41268f:	call   0x40dfc0
  412694:	test   ebp,ebp
  412696:	je     0x410a8e
  41269c:	test   r14b,r14b
  41269f:	mov    eax,0x0
  4126a4:	cmovne r12d,eax
  4126a8:	jmp    0x410a8e
  4126ad:	nop    DWORD PTR [rax]
  4126b0:	cmp    ebx,0x34
  4126b3:	je     0x411ad4
  4126b9:	cmp    ebx,0x38
  4126bc:	je     0x411ad4
  4126c2:	jmp    0x411ae3
  4126c7:	subsd  xmm0,xmm1
  4126cb:	cvttsd2si rax,xmm0
  4126d0:	mov    QWORD PTR [rbp+0x0],rax
  4126d4:	movabs rax,0x8000000000000000
  4126de:	xor    QWORD PTR [rbp+0x0],rax
  4126e2:	jmp    0x41207e
  4126e7:	mov    esi,0x10
  4126ec:	jmp    0x40fc10
  4126f1:	subss  xmm0,DWORD PTR [rip+0x1e9c7]        # 0x4310c0
  4126f9:	cvttss2si rax,xmm0
  4126fe:	mov    QWORD PTR [rbp+0x0],rax
  412702:	movabs rax,0x8000000000000000
  41270c:	xor    QWORD PTR [rbp+0x0],rax
  412710:	jmp    0x41212f
  412715:	mov    rdx,QWORD PTR [rsp+0xd8]
  41271d:	nop    DWORD PTR [rax]
  412720:	lea    r8d,[rax+0x1]
  412724:	add    rdx,0x1
  412728:	mov    BYTE PTR [rsp+rax*1+0x100],0x30
  412730:	cmp    rdx,0x3
  412734:	mov    eax,r8d
  412737:	jbe    0x412720
  412739:	mov    QWORD PTR [rsp+0xd8],rdx
  412741:	jmp    0x4106be
  412746:	mov    esi,0xfffffffd
  41274b:	jmp    0x40fc10
  412750:	cmp    DWORD PTR [r15],0x0
  412754:	jne    0x412da9
  41275a:	mov    rdx,rbx
  41275d:	mov    rcx,rsi
  412760:	call   0x40dbb0
  412765:	test   eax,eax
  412767:	js     0x410a88
  41276d:	add    ebp,0x1
  412770:	mov    r12d,0x2
  412776:	jmp    0x410a8e
  41277b:	mov    rax,QWORD PTR [rsp+0xd0]
  412783:	mov    esi,0x8
  412788:	mov    QWORD PTR [rbp+0x0],rax
  41278c:	jmp    0x40fcc0
  412791:	test   ebp,ebp
  412793:	jne    0x410a88
  412799:	mov    rdx,rbx
  41279c:	mov    rcx,rsi
  41279f:	call   0x40dbb0
  4127a4:	test   eax,eax
  4127a6:	js     0x410a88
  4127ac:	cmp    DWORD PTR [rsp+0x78],0x0
  4127b1:	je     0x4127bb
  4127b3:	test   r13d,r13d
  4127b6:	je     0x4127bb
  4127b8:	xor    r12d,r12d
  4127bb:	mov    ebp,0x1
  4127c0:	jmp    0x410a8e
  4127c5:	lea    r8,[rip+0x1da8c]        # 0x430258
  4127cc:	lea    rcx,[rip+0x1d786]        # 0x42ff59
  4127d3:	mov    r9d,r12d
  4127d6:	mov    edx,0x7ee5
  4127db:	call   0x423fa0
  4127e0:	jmp    0x410832
  4127e5:	xor    edx,edx
  4127e7:	jmp    0x40fd83
  4127ec:	neg    rcx
  4127ef:	mov    edx,0x1
  4127f4:	mov    r8,rcx
  4127f7:	xor    ecx,ecx
  4127f9:	call   0x40df40
  4127fe:	mov    esi,eax
  412800:	jmp    0x40fc10
  412805:	mov    eax,r8d
  412808:	mov    ecx,0xffffffce
  41280d:	lea    rsi,[rsp+0x100]
  412815:	cdq    
  412816:	mov    BYTE PTR [rsp+0x100],0x2d
  41281e:	idiv   ecx
  412820:	lea    rcx,[rsi+0x1]
  412824:	add    eax,0x1
  412827:	sar    eax,1
  412829:	mov    r9d,eax
  41282c:	jmp    0x4120ce
  412831:	xor    eax,eax
  412833:	cmp    BYTE PTR [r12+0x18],0x2d
  412839:	sete   al
  41283c:	add    eax,0x24
  41283f:	cmp    r9d,eax
  412842:	jbe    0x412746
  412848:	cmp    BYTE PTR [r12+rax*1],0x7d
  41284d:	jne    0x412746
  412853:	add    r12,0x1
  412857:	jmp    0x4108ee
  41285c:	cmp    QWORD PTR [rsp+0x100],0x0
  412865:	je     0x4104af
  41286b:	mov    esi,0xfffffffb
  412870:	jmp    0x40fc10
  412875:	mov    esi,eax
  412877:	jmp    0x40fc10
  41287c:	neg    r8d
  41287f:	mov    edx,0x1
  412884:	mov    ecx,0x4
  412889:	call   0x40def0
  41288e:	mov    esi,eax
  412890:	jmp    0x40fc10
  412895:	neg    r8
  412898:	mov    edx,0x1
  41289d:	mov    ecx,0x4
  4128a2:	call   0x40df40
  4128a7:	mov    esi,eax
  4128a9:	jmp    0x40fc10
  4128ae:	mov    rdx,rbx
  4128b1:	mov    rcx,rsi
  4128b4:	call   0x40dbb0
  4128b9:	test   eax,eax
  4128bb:	js     0x412dc6
  4128c1:	mov    rcx,QWORD PTR [rsp+0x80]
  4128c9:	call   0x4295d0
  4128ce:	lea    edx,[rax-0x1]
  4128d1:	cmp    edx,0x1e
  4128d4:	ja     0x4128dd
  4128d6:	mov    DWORD PTR [rsp+0xe8],eax
  4128dd:	add    DWORD PTR [rsp+0x78],0x1
  4128e2:	add    ebp,0x1
  4128e5:	cmp    r13d,0x1
  4128e9:	sbb    r12d,r12d
  4128ec:	and    r12d,0x2
  4128f0:	jmp    0x410a8e
  4128f5:	mov    esi,r9d
  4128f8:	jmp    0x4103c0
  4128fd:	mov    rdx,rsi
  412900:	mov    eax,r9d
  412903:	xor    r14d,r14d
  412906:	xor    r11d,r11d
  412909:	xor    r12d,r12d
  41290c:	xor    edi,edi
  41290e:	jmp    0x41292b
  412910:	cmp    al,0x2d
  412912:	je     0x412933
  412914:	cmp    al,0x2e
  412916:	jne    0x41296d
  412918:	add    r11d,0x1
  41291c:	add    rdx,0x1
  412920:	movzx  eax,BYTE PTR [rdx]
  412923:	test   al,al
  412925:	je     0x412c82
  41292b:	lea    ecx,[rax-0x2f]
  41292e:	cmp    cl,0xa
  412931:	ja     0x412910
  412933:	cmp    al,0x2f
  412935:	jne    0x41293c
  412937:	add    edi,0x1
  41293a:	jmp    0x41291c
  41293c:	cmp    al,0x2d
  41293e:	je     0x41294a
  412940:	cmp    al,0x2e
  412942:	je     0x412918
  412944:	add    r14d,0x1
  412948:	jmp    0x41291c
  41294a:	add    r12d,0x1
  41294e:	jmp    0x41291c
  412950:	lea    r8,[rip+0x1daa1]        # 0x4303f8
  412957:	lea    rcx,[rip+0x1d5fb]        # 0x42ff59
  41295e:	mov    edx,0x8a15
  412963:	call   0x423fa0
  412968:	jmp    0x4125dd
  41296d:	cmp    DWORD PTR [rsp+0x7c],0x9
  412972:	ja     0x412b49
  412978:	movzx  eax,BYTE PTR [rsi+0x1]
  41297c:	sub    eax,0x30
  41297f:	cmp    eax,0x9
  412982:	ja     0x412b49
  412988:	cmp    BYTE PTR [rsi+0x2],0x2d
  41298c:	lea    rdi,[rsi+0x2]
  412990:	je     0x412adf
  412996:	mov    r14,QWORD PTR [rsp+0x88]
  41299e:	mov    r8d,0x4
  4129a4:	mov    rdx,rdi
  4129a7:	mov    rcx,r14
  4129aa:	call   0x426c20
  4129af:	xor    edx,edx
  4129b1:	mov    rcx,r14
  4129b4:	call   0x40dbb0
  4129b9:	test   eax,eax
  4129bb:	js     0x412b49
  4129c1:	movzx  eax,BYTE PTR [rsi+0x5]
  4129c5:	sub    eax,0x30
  4129c8:	cmp    eax,0x9
  4129cb:	ja     0x412b49
  4129d1:	movzx  eax,BYTE PTR [rsi+0x6]
  4129d5:	sub    eax,0x30
  4129d8:	cmp    eax,0x9
  4129db:	ja     0x412b49
  4129e1:	movzx  eax,BYTE PTR [rsi+0x7]
  4129e5:	test   al,al
  4129e7:	je     0x412a05
  4129e9:	sub    eax,0x30
  4129ec:	cmp    eax,0x9
  4129ef:	ja     0x412b49
  4129f5:	movzx  eax,BYTE PTR [rsi+0x8]
  4129f9:	sub    eax,0x30
  4129fc:	cmp    eax,0x9
  4129ff:	ja     0x412b49
  412a05:	cmp    DWORD PTR [r15],0x0
  412a09:	jne    0x413434
  412a0f:	mov    r14,QWORD PTR [rsp+0xb0]
  412a17:	mov    rdx,rsi
  412a1a:	mov    r8d,0x3
  412a20:	mov    rcx,r14
  412a23:	call   0x426c20
  412a28:	mov    rcx,r14
  412a2b:	call   0x4295d0
  412a30:	lea    edx,[rax-0x1]
  412a33:	cmp    edx,0x1e
  412a36:	ja     0x412aab
  412a38:	mov    DWORD PTR [rsp+0xe8],eax
  412a3f:	cmp    BYTE PTR [rsi+0x2],0x2d
  412a43:	je     0x4133d6
  412a49:	mov    rdx,rdi
  412a4c:	mov    rdi,QWORD PTR [rsp+0x88]
  412a54:	mov    r8d,0x4
  412a5a:	mov    rcx,rdi
  412a5d:	call   0x426c20
  412a62:	mov    rdx,rbx
  412a65:	mov    rcx,rdi
  412a68:	call   0x40dbb0
  412a6d:	test   eax,eax
  412a6f:	js     0x412fe0
  412a75:	lea    rcx,[rsi+0x5]
  412a79:	call   0x4295d0
  412a7e:	cmp    DWORD PTR [r15],0x0
  412a82:	mov    esi,eax
  412a84:	je     0x412aa1
  412a86:	lea    r8,[rip+0x1d8db]        # 0x430368
  412a8d:	lea    rcx,[rip+0x1d4c5]        # 0x42ff59
  412a94:	mov    r9d,eax
  412a97:	mov    edx,0xa8a5
  412a9c:	call   0x423fa0
  412aa1:	mov    rdx,rbx
  412aa4:	mov    ecx,esi
  412aa6:	call   0x40dfc0
  412aab:	xor    r12d,r12d
  412aae:	jmp    0x410a8e
  412ab3:	mov    DWORD PTR [rbp+0x0],r12d
  412ab7:	mov    esi,0x4
  412abc:	jmp    0x40fc10
  412ac1:	mov    esi,0xfffffffb
  412ac6:	jmp    0x40fc10
  412acb:	mov    esi,0xfffffffb
  412ad0:	jmp    0x40fc10
  412ad5:	mov    esi,0xfffffffb
  412ada:	jmp    0x40fc10
  412adf:	mov    r14,QWORD PTR [rsp+0x88]
  412ae7:	lea    rdx,[rsi+0x3]
  412aeb:	mov    r8d,0x4
  412af1:	mov    rcx,r14
  412af4:	call   0x426c20
  412af9:	xor    edx,edx
  412afb:	mov    rcx,r14
  412afe:	call   0x40dbb0
  412b03:	test   eax,eax
  412b05:	js     0x412b49
  412b07:	cmp    BYTE PTR [rsi+0x6],0x2d
  412b0b:	jne    0x412b49
  412b0d:	movzx  eax,BYTE PTR [rsi+0x7]
  412b11:	sub    eax,0x30
  412b14:	cmp    eax,0x9
  412b17:	ja     0x412b49
  412b19:	movzx  eax,BYTE PTR [rsi+0x8]
  412b1d:	sub    eax,0x30
  412b20:	cmp    eax,0x9
  412b23:	ja     0x412b49
  412b25:	movzx  eax,BYTE PTR [rsi+0x9]
  412b29:	test   al,al
  412b2b:	je     0x412a05
  412b31:	sub    eax,0x30
  412b34:	cmp    eax,0x9
  412b37:	ja     0x412b49
  412b39:	movzx  eax,BYTE PTR [rsi+0xa]
  412b3d:	sub    eax,0x30
  412b40:	cmp    eax,0x9
  412b43:	jbe    0x412a05
  412b49:	mov    rcx,rsi
  412b4c:	jmp    0x412b62
  412b4e:	lea    edx,[rax-0x30]
  412b51:	cmp    dl,0xa
  412b54:	jbe    0x412b5e
  412b56:	cmp    al,0x2e
  412b58:	jne    0x413227
  412b5e:	add    rcx,0x1
  412b62:	movzx  eax,BYTE PTR [rcx]
  412b65:	test   al,al
  412b67:	jne    0x412b4e
  412b69:	cmp    DWORD PTR [r15],0x0
  412b6d:	je     0x412b87
  412b6f:	lea    r8,[rip+0x1d812]        # 0x430388
  412b76:	lea    rcx,[rip+0x1d3dc]        # 0x42ff59
  412b7d:	mov    edx,0x8355
  412b82:	call   0x423fa0
  412b87:	mov    DWORD PTR [rsp+0xb8],r13d
  412b8f:	mov    DWORD PTR [rsp+0x98],0x1
  412b9a:	mov    r13d,ebp
  412b9d:	xor    edi,edi
  412b9f:	xor    r12d,r12d
  412ba2:	mov    DWORD PTR [rsp+0x7c],0x0
  412baa:	xor    r14d,r14d
  412bad:	mov    BYTE PTR [rsp+0x9f],0x0
  412bb5:	xor    r9d,r9d
  412bb8:	mov    rbp,rsi
  412bbb:	mov    QWORD PTR [rsp+0xa8],rbx
  412bc3:	jmp    0x412c43
  412bc5:	movsx  ebx,sil
  412bc9:	lea    rcx,[rip+0x1d7db]        # 0x4303ab
  412bd0:	mov    edx,ebx
  412bd2:	call   0x4294b8
  412bd7:	test   rax,rax
  412bda:	mov    r9d,DWORD PTR [rsp+0xbc]
  412be2:	jne    0x41311e
  412be8:	cmp    sil,0x2e
  412bec:	je     0x41310d
  412bf2:	cmp    sil,0x3a
  412bf6:	je     0x41310d
  412bfc:	cmp    r9d,0x1
  412c00:	je     0x4130fb
  412c06:	jle    0x4130e4
  412c0c:	cmp    r9d,0x2
  412c10:	je     0x4130d6
  412c16:	cmp    r9d,0x3
  412c1a:	jne    0x412c3f
  412c1c:	cmp    DWORD PTR [rsp+0x98],0x3b9ac9ff
  412c27:	ja     0x412c3f
  412c29:	imul   eax,DWORD PTR [rsp+0x98],0xa
  412c31:	imul   edi,edi,0xa
  412c34:	lea    edi,[rdi+rbx*1-0x30]
  412c38:	mov    DWORD PTR [rsp+0x98],eax
  412c3f:	add    rbp,0x1
  412c43:	movzx  esi,BYTE PTR [rbp+0x0]
  412c47:	mov    DWORD PTR [rsp+0xbc],r9d
  412c4f:	test   sil,sil
  412c52:	jne    0x412bc5
  412c58:	cmp    r14d,0x17
  412c5c:	mov    ebp,r13d
  412c5f:	mov    rbx,QWORD PTR [rsp+0xa8]
  412c67:	mov    r13d,DWORD PTR [rsp+0xb8]
  412c6f:	ja     0x41318d
  412c75:	mov    DWORD PTR [rsp+0xec],r14d
  412c7d:	jmp    0x41318d
  412c82:	lea    eax,[r12+rdi*1]
  412c86:	add    eax,r11d
  412c89:	cmp    eax,0x2
  412c8c:	jne    0x41296d
  412c92:	sub    r12d,0x1
  412c96:	sete   al
  412c99:	sub    edi,0x1
  412c9c:	sete   dl
  412c9f:	or     al,dl
  412ca1:	jne    0x41296d
  412ca7:	sub    r11d,0x1
  412cab:	sete   r12b
  412caf:	je     0x41296d
  412cb5:	sub    r14d,0x4
  412cb9:	cmp    r14d,0x4
  412cbd:	ja     0x41296d
  412cc3:	cmp    DWORD PTR [r15],0x0
  412cc7:	jne    0x413069
  412ccd:	or     rcx,0xffffffffffffffff
  412cd1:	mov    rdi,rsi
  412cd4:	mov    eax,r12d
  412cd7:	repnz scas al,BYTE PTR es:[rdi]
  412cd9:	cmp    rcx,0xfffffffffffffff4
  412cdd:	je     0x413097
  412ce3:	mov    edi,0x2
  412ce8:	mov    r11d,0x1
  412cee:	xor    r12d,r12d
  412cf1:	xor    ecx,ecx
  412cf3:	xor    eax,eax
  412cf5:	xor    r14d,r14d
  412cf8:	xor    edx,edx
  412cfa:	mov    BYTE PTR [rsp+0x7c],0x0
  412cff:	jmp    0x412d2d
  412d01:	movzx  r9d,BYTE PTR [rsp+0x7c]
  412d07:	sub    r9d,0x30
  412d0b:	cmp    r9d,0x9
  412d0f:	ja     0x412d37
  412d11:	add    edx,0x1
  412d14:	add    rsi,0x1
  412d18:	movzx  r9d,BYTE PTR [rsi]
  412d1c:	mov    BYTE PTR [rsp+0x7c],r8b
  412d21:	test   r9b,r9b
  412d24:	je     0x412d70
  412d26:	movzx  r10d,r9b
  412d2a:	mov    r8d,r10d
  412d2d:	sub    r10d,0x30
  412d31:	cmp    r10d,0x9
  412d35:	ja     0x412d01
  412d37:	cmp    edx,r12d
  412d3a:	je     0x412d53
  412d3c:	cmp    edx,r11d
  412d3f:	je     0x412d62
  412d41:	cmp    edx,edi
  412d43:	jne    0x412d14
  412d45:	imul   ecx,ecx,0xa
  412d48:	movsx  r9d,r8b
  412d4c:	lea    ecx,[rcx+r9*1-0x30]
  412d51:	jmp    0x412d14
  412d53:	imul   r14d,r14d,0xa
  412d57:	movsx  r9d,r8b
  412d5b:	lea    r14d,[r14+r9*1-0x30]
  412d60:	jmp    0x412d3c
  412d62:	imul   eax,eax,0xa
  412d65:	movsx  r9d,r8b
  412d69:	lea    eax,[rax+r9*1-0x30]
  412d6e:	jmp    0x412d41
  412d70:	lea    r10d,[r14-0x1]
  412d74:	xor    r12d,r12d
  412d77:	cmp    r10d,0xb
  412d7b:	ja     0x410a8e
  412d81:	lea    edx,[rax-0x1]
  412d84:	mov    DWORD PTR [rsp+0xe4],r10d
  412d8c:	cmp    edx,0x1e
  412d8f:	ja     0x410a8e
  412d95:	mov    rdx,rbx
  412d98:	mov    DWORD PTR [rsp+0xe8],eax
  412d9f:	call   0x40dfc0
  412da4:	jmp    0x410a8e
  412da9:	lea    r8,[rip+0x1d4d0]        # 0x430280
  412db0:	lea    rcx,[rip+0x1d1a2]        # 0x42ff59
  412db7:	mov    edx,0x7f65
  412dbc:	call   0x423fa0
  412dc1:	jmp    0x41275a
  412dc6:	mov    rcx,rsi
  412dc9:	mov    r12d,0x3
  412dcf:	call   0x40e560
  412dd4:	test   al,al
  412dd6:	je     0x410a8e
  412ddc:	mov    rcx,QWORD PTR [rsp+0x80]
  412de4:	xor    r12b,r12b
  412de7:	call   0x4295d0
  412dec:	cmp    eax,0x17
  412def:	mov    edi,eax
  412df1:	ja     0x410a8e
  412df7:	lea    rdx,[rip+0x1d1f0]        # 0x42ffee
  412dfe:	mov    rcx,rsi
  412e01:	call   QWORD PTR [rip+0x2cc8d]        # 0x43fa94
  412e07:	test   eax,eax
  412e09:	jne    0x412e19
  412e0b:	cmp    edi,0xc
  412e0e:	cmove  edi,r12d
  412e12:	mov    DWORD PTR [rsp+0xec],edi
  412e19:	lea    rdx,[rip+0x1d1d1]        # 0x42fff1
  412e20:	mov    rcx,rsi
  412e23:	xor    r12d,r12d
  412e26:	call   QWORD PTR [rip+0x2cc68]        # 0x43fa94
  412e2c:	test   eax,eax
  412e2e:	jne    0x410a8e
  412e34:	lea    eax,[rdi-0x1]
  412e37:	cmp    eax,0xa
  412e3a:	jbe    0x41305a
  412e40:	mov    DWORD PTR [rsp+0xec],edi
  412e47:	jmp    0x410a8e
  412e4c:	cmp    DWORD PTR [rsp+0x78],0x0
  412e51:	mov    rcx,rsi
  412e54:	jne    0x4133a9
  412e5a:	call   0x4295d0
  412e5f:	lea    edx,[rax-0x1]
  412e62:	cmp    edx,0x1e
  412e65:	ja     0x412e6e
  412e67:	mov    DWORD PTR [rsp+0xe8],eax
  412e6e:	test   ebp,ebp
  412e70:	je     0x413007
  412e76:	cmp    BYTE PTR [rsp+0x7c],0x0
  412e7b:	je     0x413007
  412e81:	xor    r12d,r12d
  412e84:	mov    DWORD PTR [rsp+0x78],0x1
  412e8c:	jmp    0x410a8e
  412e91:	mov    WORD PTR [rbp+0x0],r12w
  412e96:	mov    WORD PTR [rbp+0x2],ax
  412e9a:	mov    esi,0x4
  412e9f:	jmp    0x40fc10
  412ea4:	lea    r9,[rax+0x1]
  412ea8:	mov    QWORD PTR [rsp+0xd8],0x0
  412eb4:	jmp    0x41064c
  412eb9:	mov    esi,0xfffffffb
  412ebe:	jmp    0x40fc10
  412ec3:	mov    esi,0xfffffffb
  412ec8:	jmp    0x40fc10
  412ecd:	mov    esi,0xfffffffb
  412ed2:	jmp    0x40fc10
  412ed7:	mov    esi,0xfffffffb
  412edc:	jmp    0x40fc10
  412ee1:	mov    esi,0xfffffffb
  412ee6:	jmp    0x40fc10
  412eeb:	mov    esi,0xfffffffb
  412ef0:	jmp    0x40fc10
  412ef5:	mov    esi,0xfffffffb
  412efa:	jmp    0x40fc10
  412eff:	mov    esi,0xfffffffc
  412f04:	jmp    0x40fc10
  412f09:	mov    esi,0xfffffffb
  412f0e:	jmp    0x40fc10
  412f13:	mov    esi,0xfffffffb
  412f18:	jmp    0x40fc10
  412f1d:	mov    esi,0xfffffffb
  412f22:	jmp    0x40fc10
  412f27:	mov    esi,0xfffffffb
  412f2c:	jmp    0x40fc10
  412f31:	mov    esi,0xfffffffb
  412f36:	jmp    0x40fc10
  412f3b:	mov    esi,0xfffffffb
  412f40:	jmp    0x40fc10
  412f45:	lea    r8,[rip+0x1d35c]        # 0x4302a8
  412f4c:	lea    rcx,[rip+0x1d006]        # 0x42ff59
  412f53:	mov    edx,0x8035
  412f58:	call   0x423fa0
  412f5d:	jmp    0x4108a6
  412f62:	imul   ecx,eax,0x12c
  412f68:	mov    eax,DWORD PTR [rsp+0xf8]
  412f6f:	mov    r8d,0xf4240
  412f75:	xor    edx,edx
  412f77:	mov    DWORD PTR [rbp+0x0],r12d
  412f7b:	mov    esi,0x8
  412f80:	div    r8d
  412f83:	mov    r8d,0x3e8
  412f89:	xor    edx,edx
  412f8b:	imul   eax,eax,0x12c
  412f91:	add    eax,0x96
  412f96:	div    r8d
  412f99:	add    eax,ecx
  412f9b:	mov    DWORD PTR [rbp+0x4],eax
  412f9e:	jmp    0x40fc10
  412fa3:	imul   ecx,eax,0x12c
  412fa9:	mov    eax,DWORD PTR [rsp+0xf8]
  412fb0:	mov    r8d,0xf4240
  412fb6:	xor    edx,edx
  412fb8:	mov    esi,0x4
  412fbd:	div    r8d
  412fc0:	mov    r8d,0x3e8
  412fc6:	xor    edx,edx
  412fc8:	imul   eax,eax,0x12c
  412fce:	add    eax,0x96
  412fd3:	div    r8d
  412fd6:	add    eax,ecx
  412fd8:	mov    DWORD PTR [rbp+0x0],eax
  412fdb:	jmp    0x40fc10
  412fe0:	cmp    DWORD PTR [r15],0x0
  412fe4:	je     0x412aab
  412fea:	lea    r8,[rip+0x1d347]        # 0x430338
  412ff1:	lea    rcx,[rip+0x1cf61]        # 0x42ff59
  412ff8:	mov    edx,0xa855
  412ffd:	call   0x423fa0
  413002:	jmp    0x412aab
  413007:	mov    DWORD PTR [rsp+0x78],0x1
  41300f:	jmp    0x410a8e
  413014:	mov    esi,0xfffffffb
  413019:	jmp    0x40fc10
  41301e:	mov    esi,0xfffffffb
  413023:	jmp    0x40fc10
  413028:	mov    esi,0xfffffffb
  41302d:	jmp    0x40fc10
  413032:	mov    esi,0xfffffffb
  413037:	jmp    0x40fc10
  41303c:	mov    esi,0xfffffffb
  413041:	jmp    0x40fc10
  413046:	mov    esi,0xfffffffb
  41304b:	jmp    0x40fc10
  413050:	mov    esi,0xfffffffb
  413055:	jmp    0x40fc10
  41305a:	add    edi,0xc
  41305d:	mov    DWORD PTR [rsp+0xec],edi
  413064:	jmp    0x410a8e
  413069:	lea    rcx,[rip+0x1cee9]        # 0x42ff59
  413070:	lea    r8,[rip+0x1d251]        # 0x4302c8
  413077:	mov    edx,0x82d5
  41307c:	mov    rdi,rsi
  41307f:	call   0x423fa0
  413084:	or     rcx,0xffffffffffffffff
  413088:	mov    eax,r12d
  41308b:	movzx  r9d,BYTE PTR [rsi]
  41308f:	repnz scas al,BYTE PTR es:[rdi]
  413091:	cmp    rcx,0xfffffffffffffff4
  413095:	jne    0x41309d
  413097:	cmp    BYTE PTR [rsi+0x4],0x2d
  41309b:	je     0x4130c0
  41309d:	mov    edi,0x2
  4130a2:	mov    r11d,0x1
  4130a8:	xor    r12d,r12d
  4130ab:	test   r9b,r9b
  4130ae:	mov    r8d,r9d
  4130b1:	je     0x412aab
  4130b7:	movzx  r10d,r9b
  4130bb:	jmp    0x412cf1
  4130c0:	cmp    BYTE PTR [rsi+0x7],0x2d
  4130c4:	jne    0x41309d
  4130c6:	xor    edi,edi
  4130c8:	mov    r11d,0x2
  4130ce:	mov    r12d,0x1
  4130d4:	jmp    0x4130ab
  4130d6:	imul   r12d,r12d,0xa
  4130da:	lea    r12d,[r12+rbx*1-0x30]
  4130df:	jmp    0x412c3f
  4130e4:	test   r9d,r9d
  4130e7:	jne    0x412c3f
  4130ed:	imul   r14d,r14d,0xa
  4130f1:	lea    r14d,[r14+rbx*1-0x30]
  4130f6:	jmp    0x412c3f
  4130fb:	imul   eax,DWORD PTR [rsp+0x7c],0xa
  413100:	lea    eax,[rax+rbx*1-0x30]
  413104:	mov    DWORD PTR [rsp+0x7c],eax
  413108:	jmp    0x412c3f
  41310d:	add    r9d,0x1
  413111:	mov    BYTE PTR [rsp+0x9f],sil
  413119:	jmp    0x412c3f
  41311e:	mov    rsi,rbp
  413121:	mov    rbx,QWORD PTR [rsp+0xa8]
  413129:	mov    ebp,r13d
  41312c:	lea    rdx,[rip+0x1cebb]        # 0x42ffee
  413133:	mov    r13d,DWORD PTR [rsp+0xb8]
  41313b:	mov    rcx,rsi
  41313e:	mov    rax,QWORD PTR [rsp+0xa0]
  413146:	call   rax
  413148:	test   eax,eax
  41314a:	jne    0x41315c
  41314c:	cmp    r14d,0xc
  413150:	cmove  r14d,eax
  413154:	mov    DWORD PTR [rsp+0xec],r14d
  41315c:	lea    rdx,[rip+0x1ce8e]        # 0x42fff1
  413163:	mov    rcx,rsi
  413166:	mov    rax,QWORD PTR [rsp+0xa0]
  41316e:	call   rax
  413170:	test   eax,eax
  413172:	jne    0x41318d
  413174:	lea    eax,[r14-0x1]
  413178:	cmp    eax,0xa
  41317b:	ja     0x412c75
  413181:	lea    r8d,[r14+0xc]
  413185:	mov    DWORD PTR [rsp+0xec],r8d
  41318d:	cmp    DWORD PTR [rsp+0x7c],0x3b
  413192:	ja     0x41319f
  413194:	mov    eax,DWORD PTR [rsp+0x7c]
  413198:	mov    DWORD PTR [rsp+0xf0],eax
  41319f:	cmp    r12d,0x3b
  4131a3:	ja     0x4131ad
  4131a5:	mov    DWORD PTR [rsp+0xf4],r12d
  4131ad:	cmp    DWORD PTR [r15],0x0
  4131b1:	je     0x4131ce
  4131b3:	lea    r8,[rip+0x1d1f8]        # 0x4303b2
  4131ba:	lea    rcx,[rip+0x1cd98]        # 0x42ff59
  4131c1:	mov    r9d,edi
  4131c4:	mov    edx,0xb397
  4131c9:	call   0x423fa0
  4131ce:	xor    r12d,r12d
  4131d1:	test   edi,edi
  4131d3:	je     0x410a8e
  4131d9:	cmp    BYTE PTR [rsp+0x9f],0x2e
  4131e1:	jne    0x413206
  4131e3:	mov    ecx,DWORD PTR [rsp+0x98]
  4131ea:	cmp    edi,ecx
  4131ec:	jae    0x413206
  4131ee:	mov    eax,0x3b9aca00
  4131f3:	xor    edx,edx
  4131f5:	div    ecx
  4131f7:	imul   eax,edi
  4131fa:	mov    DWORD PTR [rsp+0xf8],eax
  413201:	jmp    0x410a8e
  413206:	xor    r12d,r12d
  413209:	cmp    edi,0x3e7
  41320f:	ja     0x410a8e
  413215:	imul   edi,edi,0xf4240
  41321b:	mov    DWORD PTR [rsp+0xf8],edi
  413222:	jmp    0x410a8e
  413227:	call   0x40e560
  41322c:	test   al,al
  41322e:	jne    0x412b69
  413234:	cmp    DWORD PTR [r15],0x0
  413238:	mov    r12d,0x3
  41323e:	je     0x410a8e
  413244:	lea    r8,[rip+0x1d185]        # 0x4303d0
  41324b:	lea    rcx,[rip+0x1cd07]        # 0x42ff59
  413252:	mov    edx,0x8395
  413257:	call   0x423fa0
  41325c:	jmp    0x410a8e
  413261:	mov    esi,0xfffffffc
  413266:	jmp    0x40fc10
  41326b:	mov    esi,0xfffffffb
  413270:	jmp    0x40fc10
  413275:	mov    esi,0xfffffffb
  41327a:	jmp    0x40fc10
  41327f:	or     esi,0xffffffff
  413282:	jmp    0x40fc10
  413287:	mov    esi,0xfffffffb
  41328c:	jmp    0x40fc10
  413291:	mov    esi,0xfffffffb
  413296:	jmp    0x40fc10
  41329b:	mov    esi,0xfffffffb
  4132a0:	jmp    0x40fc10
  4132a5:	mov    esi,0xfffffffb
  4132aa:	jmp    0x40fc10
  4132af:	mov    esi,0xfffffffb
  4132b4:	jmp    0x40fc10
  4132b9:	mov    esi,0xfffffffc
  4132be:	jmp    0x40fc10
  4132c3:	imul   rcx,rax,0xf4240
  4132ca:	mov    eax,DWORD PTR [rsp+0xf8]
  4132d1:	mov    r8d,0x3e8
  4132d7:	xor    edx,edx
  4132d9:	div    r8d
  4132dc:	movabs rdx,0x141dd76000
  4132e6:	mov    eax,eax
  4132e8:	add    rcx,rax
  4132eb:	lea    eax,[rsi+0x1d]
  4132ee:	mov    esi,0x8
  4132f3:	cdqe   
  4132f5:	imul   rax,rdx
  4132f9:	add    rcx,rax
  4132fc:	mov    QWORD PTR [rbp+0x0],rcx
  413300:	jmp    0x40fc10
  413305:	imul   rcx,rax,0xf4240
  41330c:	mov    eax,DWORD PTR [rsp+0xf8]
  413313:	mov    r8d,0x3e8
  413319:	xor    edx,edx
  41331b:	mov    esi,0x8
  413320:	div    r8d
  413323:	mov    eax,eax
  413325:	add    rcx,rax
  413328:	mov    QWORD PTR [rbp+0x0],rcx
  41332c:	jmp    0x40fc10
  413331:	mov    esi,0xfffffffb
  413336:	jmp    0x40fc10
  41333b:	mov    esi,0xfffffffb
  413340:	jmp    0x40fc10
  413345:	mov    esi,0xfffffffb
  41334a:	jmp    0x40fc10
  41334f:	mov    esi,0xfffffffb
  413354:	jmp    0x40fc10
  413359:	mov    esi,0xfffffffb
  41335e:	jmp    0x40fc10
  413363:	mov    esi,0xfffffffb
  413368:	jmp    0x40fc10
  41336d:	mov    esi,0xfffffffb
  413372:	jmp    0x40fc10
  413377:	mov    esi,0xfffffffb
  41337c:	jmp    0x40fc10
  413381:	mov    esi,0xfffffffb
  413386:	jmp    0x40fc10
  41338b:	mov    esi,0xfffffffb
  413390:	jmp    0x40fc10
  413395:	mov    esi,0xfffffffb
  41339a:	jmp    0x40fc10
  41339f:	mov    esi,0xfffffffb
  4133a4:	jmp    0x40fc10
  4133a9:	call   0x4295d0
  4133ae:	mov    rdx,rbx
  4133b1:	mov    ecx,eax
  4133b3:	add    r13d,0x1
  4133b7:	call   0x40dfc0
  4133bc:	test   ebp,ebp
  4133be:	mov    eax,0x0
  4133c3:	cmovne r12d,eax
  4133c7:	jmp    0x410a8e
  4133cc:	mov    esi,0xfffffffb
  4133d1:	jmp    0x40fc10
  4133d6:	mov    rdi,QWORD PTR [rsp+0x88]
  4133de:	lea    rdx,[rsi+0x3]
  4133e2:	mov    r8d,0x4
  4133e8:	mov    rcx,rdi
  4133eb:	call   0x426c20
  4133f0:	mov    rdx,rbx
  4133f3:	mov    rcx,rdi
  4133f6:	call   0x40dbb0
  4133fb:	test   eax,eax
  4133fd:	js     0x413476
  4133ff:	lea    rcx,[rsi+0x7]
  413403:	call   0x4295d0
  413408:	cmp    DWORD PTR [r15],0x0
  41340c:	mov    esi,eax
  41340e:	je     0x412aa1
  413414:	lea    r8,[rip+0x1cf4d]        # 0x430368
  41341b:	lea    rcx,[rip+0x1cb37]        # 0x42ff59
  413422:	mov    r9d,eax
  413425:	mov    edx,0xa7e5
  41342a:	call   0x423fa0
  41342f:	jmp    0x412aa1
  413434:	lea    r8,[rip+0x1cebd]        # 0x4302f8
  41343b:	lea    rcx,[rip+0x1cb17]        # 0x42ff59
  413442:	mov    edx,0x8315
  413447:	call   0x423fa0
  41344c:	cmp    DWORD PTR [r15],0x0
  413450:	je     0x412a0f
  413456:	lea    r8,[rip+0x1cebf]        # 0x43031c
  41345d:	lea    rcx,[rip+0x1caf5]        # 0x42ff59
  413464:	mov    r9,rsi
  413467:	mov    edx,0xa6c5
  41346c:	call   0x423fa0
  413471:	jmp    0x412a0f
  413476:	cmp    DWORD PTR [r15],0x0
  41347a:	je     0x412aab
  413480:	lea    r8,[rip+0x1ceb1]        # 0x430338
  413487:	lea    rcx,[rip+0x1cacb]        # 0x42ff59
  41348e:	mov    edx,0xa795
  413493:	call   0x423fa0
  413498:	jmp    0x412aab
  41349d:	mov    esi,0xfffffffb
  4134a2:	jmp    0x40fc10
  4134a7:	mov    esi,0xfffffffb
  4134ac:	jmp    0x40fc10
  4134b1:	mov    esi,0xfffffffb
  4134b6:	jmp    0x40fc10
  4134bb:	mov    esi,0xfffffffb
  4134c0:	jmp    0x40fc10
  4134c5:	mov    esi,0xfffffffb
  4134ca:	jmp    0x40fc10
  4134cf:	mov    esi,0xfffffffb
  4134d4:	jmp    0x40fc10
  4134d9:	mov    esi,0xfffffffb
  4134de:	jmp    0x40fc10
  4134e3:	mov    esi,0xfffffffb
  4134e8:	jmp    0x40fc10
  4134ed:	nop
  4134ee:	nop
  4134ef:	nop
  4134f0:	lea    r9,[rip+0x1e1c9]        # 0x4316c0
  4134f7:	lea    eax,[r8+0x1]
  4134fb:	mov    r11d,r8d
  4134fe:	mov    r10d,r8d
  413501:	movsx  r11d,BYTE PTR [r9+r11*1]
  413506:	shr    r10d,0x5
  41350a:	movsx  eax,BYTE PTR [r9+rax*1]
  41350f:	sub    eax,r11d
  413512:	lea    r9d,[r10+rax*1+0x4]
  413517:	cmp    r9d,edx
  41351a:	jbe    0x413529
  41351c:	xor    eax,eax
  41351e:	ret    
  41351f:	nop
  413520:	mov    eax,edx
  413522:	mov    eax,DWORD PTR [rcx+rax*4]
  413525:	test   eax,eax
  413527:	jne    0x413590
  413529:	sub    edx,0x1
  41352c:	cmp    r9d,edx
  41352f:	jbe    0x413520
  413531:	lea    r9d,[r11+r8*4]
  413535:	lea    r8,[rip+0x1dcc4]        # 0x431200
  41353c:	cmp    r10d,edx
  41353f:	lea    rax,[r8+r9*4]
  413543:	jae    0x41357a
  413545:	mov    r11d,edx
  413548:	mov    r11d,DWORD PTR [rcx+r11*4]
  41354c:	cmp    DWORD PTR [r8+r9*4],r11d
  413550:	jb     0x413590
  413552:	jbe    0x41356e
  413554:	jmp    0x41351c
  413556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413560:	mov    r8d,edx
  413563:	mov    r11d,DWORD PTR [rax]
  413566:	cmp    DWORD PTR [rcx+r8*4],r11d
  41356a:	ja     0x413590
  41356c:	jb     0x41351c
  41356e:	sub    edx,0x1
  413571:	add    rax,0x4
  413575:	cmp    r10d,edx
  413578:	jb     0x413560
  41357a:	mov    eax,DWORD PTR [rax]
  41357c:	cmp    DWORD PTR [rcx+rdx*4],eax
  41357f:	sbb    eax,eax
  413581:	not    eax
  413583:	and    eax,0xfffffffb
  413586:	ret    
  413587:	nop    WORD PTR [rax+rax*1+0x0]
  413590:	mov    eax,0xfffffffb
  413595:	ret    
  413596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4135a0:	push   rbx
  4135a1:	sub    rsp,0x20
  4135a5:	movsxd r8,DWORD PTR [rcx]
  4135a8:	mov    rbx,rdx
  4135ab:	mov    rdx,r8
  4135ae:	mov    r8d,DWORD PTR [rcx+0x4]
  4135b2:	mov    rcx,rbx
  4135b5:	shl    rdx,0x20
  4135b9:	or     r8,rdx
  4135bc:	js     0x413612
  4135be:	add    r8,0x32
  4135c2:	movabs r10,0x28f5c28f5c28f5c3
  4135cc:	shr    r8,0x2
  4135d0:	mov    rax,r8
  4135d3:	mul    r10
  4135d6:	mov    r9,rdx
  4135d9:	shr    rdx,0x4
  4135dd:	mov    rax,rdx
  4135e0:	shr    r9,0x2
  4135e4:	mul    r10
  4135e7:	shr    rdx,0x2
  4135eb:	lea    rax,[rdx+rdx*4]
  4135ef:	mov    r8,rdx
  4135f2:	lea    rdx,[rip+0x1db87]        # 0x431180
  4135f9:	lea    rax,[rax+rax*4]
  4135fd:	shl    rax,0x2
  413601:	sub    r9d,eax
  413604:	call   0x4294c8
  413609:	mov    rax,rbx
  41360c:	add    rsp,0x20
  413610:	pop    rbx
  413611:	ret    
  413612:	lea    rcx,[rbx+0x1]
  413616:	mov    BYTE PTR [rbx],0x2d
  413619:	neg    r8
  41361c:	jmp    0x4135be
  41361e:	xchg   ax,ax
  413620:	push   r13
  413622:	push   r12
  413624:	push   rbp
  413625:	push   rdi
  413626:	push   rsi
  413627:	push   rbx
  413628:	sub    rsp,0x98
  41362f:	movzx  eax,BYTE PTR [rcx]
  413632:	mov    rsi,rdx
  413635:	lea    edx,[rax-0x1]
  413638:	cmp    dl,0x4c
  41363b:	ja     0x41391a
  413641:	cmp    al,BYTE PTR [rcx+0x1]
  413644:	jb     0x41391a
  41364a:	cmp    BYTE PTR [rcx+0x2],0x1
  41364e:	je     0x4138f5
  413654:	lea    rdx,[rip+0x1e0e5]        # 0x431740
  41365b:	lea    r10,[rcx+0x2]
  41365f:	mov    eax,DWORD PTR [rdx+rax*4]
  413662:	lea    edi,[rax-0x1]
  413665:	cmp    edi,0x1
  413668:	jbe    0x41390d
  41366e:	lea    r12d,[rax-0x3]
  413672:	lea    r8d,[rax-0x2]
  413676:	lea    rdx,[rsp+0x40]
  41367b:	mov    rbp,rsp
  41367e:	shr    r12d,1
  413681:	mov    r13d,r12d
  413684:	mov    rax,r13
  413687:	neg    rax
  41368a:	lea    rbx,[rsp+rax*4+0x3c]
  41368f:	nop
  413690:	mov    r9d,r8d
  413693:	sub    rdx,0x4
  413697:	sub    r8d,0x2
  41369b:	movzx  eax,BYTE PTR [r10+r9*1]
  4136a0:	movzx  r11d,BYTE PTR [r10+r9*1+0x1]
  4136a6:	shl    eax,0x8
  4136a9:	add    eax,r11d
  4136ac:	cmp    rdx,rbx
  4136af:	mov    DWORD PTR [rdx],eax
  4136b1:	jne    0x413690
  4136b3:	not    r13
  4136b6:	neg    r12d
  4136b9:	lea    r10,[rbp+r13*4+0x40]
  4136be:	lea    edi,[rdi+r12*2-0x2]
  4136c3:	cmp    edi,0x1
  4136c6:	je     0x4138e4
  4136cc:	mov    r9d,DWORD PTR [r10]
  4136cf:	lea    rax,[rbp+0x40]
  4136d3:	jmp    0x4136e5
  4136d5:	add    r10,0x4
  4136d9:	cmp    r10,rax
  4136dc:	je     0x41379c
  4136e2:	mov    r9d,DWORD PTR [r10]
  4136e5:	test   r9d,r9d
  4136e8:	je     0x4136d5
  4136ea:	add    rbp,0x40
  4136ee:	cmp    r10,rbp
  4136f1:	je     0x413924
  4136f7:	lea    rdi,[rsp+0x90]
  4136ff:	mov    r11d,0xd1b71759
  413705:	mov    eax,r9d
  413708:	mul    r11d
  41370b:	mov    r8d,edx
  41370e:	shr    edx,0xd
  413711:	shr    r8d,0xd
  413715:	mov    DWORD PTR [r10],edx
  413718:	imul   r8d,r8d,0x2710
  41371f:	sub    r9d,r8d
  413722:	test   edx,edx
  413724:	mov    r8d,r9d
  413727:	lea    r9,[r10+0x4]
  41372b:	mov    r12,r9
  41372e:	cmovne r12,r10
  413732:	cmp    r9,rbp
  413735:	je     0x413784
  413737:	lea    rax,[r10+0x8]
  41373b:	mov    rbx,rbp
  41373e:	sub    rbx,rax
  413741:	mov    rax,rbx
  413744:	shr    rax,0x2
  413748:	lea    rbx,[r10+rax*4+0x8]
  41374d:	nop    DWORD PTR [rax]
  413750:	mov    r10d,DWORD PTR [r9]
  413753:	shl    r8d,0x10
  413757:	add    r9,0x4
  41375b:	add    r10d,r8d
  41375e:	mov    eax,r10d
  413761:	mul    r11d
  413764:	mov    r8d,edx
  413767:	shr    edx,0xd
  41376a:	shr    r8d,0xd
  41376e:	mov    DWORD PTR [r9-0x4],edx
  413772:	imul   r8d,r8d,0x2710
  413779:	sub    r10d,r8d
  41377c:	cmp    r9,rbx
  41377f:	mov    r8d,r10d
  413782:	jne    0x413750
  413784:	sub    rdi,0x4
  413788:	cmp    r12,rbp
  41378b:	mov    DWORD PTR [rdi],r8d
  41378e:	je     0x4137e5
  413790:	mov    r9d,DWORD PTR [r12]
  413794:	mov    r10,r12
  413797:	jmp    0x413705
  41379c:	mov    BYTE PTR [rsi],0x30
  41379f:	cmp    BYTE PTR [rcx+0x1],0x0
  4137a3:	je     0x413904
  4137a9:	mov    BYTE PTR [rsi+0x1],0x2e
  4137ad:	movzx  edx,BYTE PTR [rcx+0x1]
  4137b1:	lea    rax,[rsi+0x2]
  4137b5:	sub    edx,0x1
  4137b8:	lea    rsi,[rax+rdx*1+0x1]
  4137bd:	nop    DWORD PTR [rax]
  4137c0:	add    rax,0x1
  4137c4:	mov    BYTE PTR [rax-0x1],0x30
  4137c8:	cmp    rax,rsi
  4137cb:	jne    0x4137c0
  4137cd:	mov    BYTE PTR [rsi],0x0
  4137d0:	mov    eax,0x1
  4137d5:	add    rsp,0x98
  4137dc:	pop    rbx
  4137dd:	pop    rsi
  4137de:	pop    rdi
  4137df:	pop    rbp
  4137e0:	pop    r12
  4137e2:	pop    r13
  4137e4:	ret    
  4137e5:	lea    r10,[rsp+0x90]
  4137ed:	sub    r10,rdi
  4137f0:	sar    r10,0x2
  4137f4:	shl    r10d,0x2
  4137f8:	cmp    r8d,0x3e7
  4137ff:	ja     0x41394f
  413805:	mov    r9d,0x3e8
  41380b:	mov    r11d,0xcccccccd
  413811:	mov    eax,r9d
  413814:	sub    r10d,0x1
  413818:	mul    r11d
  41381b:	shr    edx,0x3
  41381e:	cmp    edx,r8d
  413821:	mov    r9d,edx
  413824:	ja     0x413811
  413826:	movzx  edx,BYTE PTR [rcx+0x1]
  41382a:	mov    eax,r8d
  41382d:	cmp    edx,r10d
  413830:	jb     0x413866
  413832:	mov    BYTE PTR [rsi],0x30
  413835:	mov    BYTE PTR [rsi+0x1],0x2e
  413839:	lea    rdx,[rsi+0x2]
  41383d:	movzx  eax,BYTE PTR [rcx+0x1]
  413841:	cmp    r10d,eax
  413844:	jae    0x41395a
  41384a:	mov    eax,r10d
  41384d:	mov    rsi,rdx
  413850:	add    rsi,0x1
  413854:	mov    BYTE PTR [rsi-0x1],0x30
  413858:	movzx  edx,BYTE PTR [rcx+0x1]
  41385c:	add    eax,0x1
  41385f:	cmp    edx,eax
  413861:	ja     0x413850
  413863:	mov    eax,r8d
  413866:	mov    ebx,0xcccccccd
  41386b:	nop    DWORD PTR [rax+rax*1+0x0]
  413870:	xor    edx,edx
  413872:	sub    r10d,0x1
  413876:	div    r9d
  413879:	lea    r8d,[rax+0x30]
  41387d:	mov    eax,r9d
  413880:	mov    r11d,edx
  413883:	mul    ebx
  413885:	mov    eax,r11d
  413888:	mov    BYTE PTR [rsi],r8b
  41388b:	shr    edx,0x3
  41388e:	test   edx,edx
  413890:	mov    r9d,edx
  413893:	jne    0x4138b2
  413895:	lea    rdx,[rdi+0x4]
  413899:	lea    rax,[rsp+0x90]
  4138a1:	cmp    rdx,rax
  4138a4:	je     0x4138cb
  4138a6:	mov    eax,DWORD PTR [rdi+0x4]
  4138a9:	mov    r9d,0x3e8
  4138af:	mov    rdi,rdx
  4138b2:	movzx  edx,BYTE PTR [rcx+0x1]
  4138b6:	cmp    edx,r10d
  4138b9:	je     0x4138c1
  4138bb:	add    rsi,0x1
  4138bf:	jmp    0x413870
  4138c1:	mov    BYTE PTR [rsi+0x1],0x2e
  4138c5:	add    rsi,0x2
  4138c9:	jmp    0x413870
  4138cb:	mov    eax,0x1
  4138d0:	mov    BYTE PTR [rsi+0x1],0x0
  4138d4:	add    rsp,0x98
  4138db:	pop    rbx
  4138dc:	pop    rsi
  4138dd:	pop    rdi
  4138de:	pop    rbp
  4138df:	pop    r12
  4138e1:	pop    r13
  4138e3:	ret    
  4138e4:	movzx  r9d,BYTE PTR [rcx+0x3]
  4138e9:	sub    r10,0x4
  4138ed:	mov    DWORD PTR [r10],r9d
  4138f0:	jmp    0x4136cf
  4138f5:	mov    BYTE PTR [rsi],0x2d
  4138f8:	add    rsi,0x1
  4138fc:	movzx  eax,BYTE PTR [rcx]
  4138ff:	jmp    0x413654
  413904:	add    rsi,0x1
  413908:	jmp    0x4137cd
  41390d:	mov    rbp,rsp
  413910:	lea    r10,[rsp+0x40]
  413915:	jmp    0x4136c3
  41391a:	mov    eax,0xffffffff
  41391f:	jmp    0x4137d5
  413924:	mov    r8d,DWORD PTR [rsp+0x90]
  41392c:	xor    r10d,r10d
  41392f:	lea    rdi,[rsp+0x90]
  413937:	mov    r9d,0x3e8
  41393d:	cmp    r8d,0x3e7
  413944:	jbe    0x413805
  41394a:	jmp    0x413832
  41394f:	mov    r9d,0x3e8
  413955:	jmp    0x413826
  41395a:	mov    eax,r8d
  41395d:	mov    rsi,rdx
  413960:	jmp    0x413866
  413965:	nop
  413966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413970:	push   r15
  413972:	push   r14
  413974:	push   r13
  413976:	push   r12
  413978:	push   rbp
  413979:	push   rdi
  41397a:	push   rsi
  41397b:	push   rbx
  41397c:	sub    rsp,0x58
  413980:	movzx  r11d,BYTE PTR [rcx]
  413984:	mov    rbx,rcx
  413987:	mov    r12d,edx
  41398a:	mov    r14d,r8d
  41398d:	lea    eax,[r11-0x1]
  413991:	cmp    al,0x4c
  413993:	ja     0x413d04
  413999:	movzx  eax,BYTE PTR [rcx+0x1]
  41399d:	cmp    r11b,al
  4139a0:	jb     0x413d04
  4139a6:	cmp    dl,r8b
  4139a9:	jb     0x413d04
  4139af:	lea    edx,[rdx-0x1]
  4139b2:	cmp    dl,0x4c
  4139b5:	ja     0x413d04
  4139bb:	movzx  edi,r8b
  4139bf:	sub    edi,eax
  4139c1:	sete   r10b
  4139c5:	jne    0x4139f1
  4139c7:	cmp    r11b,r12b
  4139ca:	ja     0x4139f1
  4139cc:	lea    rdx,[rip+0x1dd6d]        # 0x431740
  4139d3:	movzx  eax,r12b
  4139d7:	mov    eax,DWORD PTR [rdx+rax*4]
  4139da:	sub    eax,DWORD PTR [rdx+r11*4]
  4139de:	jne    0x413c30
  4139e4:	mov    BYTE PTR [rbx],r12b
  4139e7:	mov    eax,0x23
  4139ec:	jmp    0x413c01
  4139f1:	lea    rsi,[rip+0x1dd48]        # 0x431740
  4139f8:	movsxd rax,r11d
  4139fb:	lea    r13,[rsp+0x30]
  413a00:	mov    r9d,DWORD PTR [rsi+rax*4]
  413a04:	mov    rbp,r13
  413a07:	mov    r8,r13
  413a0a:	xor    esi,esi
  413a0c:	lea    ecx,[r9-0x1]
  413a10:	jmp    0x413a14
  413a12:	mov    esi,edx
  413a14:	lea    edx,[rcx-0x3]
  413a17:	sub    ecx,0x4
  413a1a:	add    r8,0x4
  413a1e:	movsxd rdx,edx
  413a21:	movzx  eax,BYTE PTR [rbx+rdx*1+0x2]
  413a26:	movzx  r15d,BYTE PTR [rbx+rdx*1+0x3]
  413a2c:	shl    eax,0x8
  413a2f:	add    eax,r15d
  413a32:	movzx  r15d,BYTE PTR [rbx+rdx*1+0x4]
  413a38:	movzx  edx,BYTE PTR [rbx+rdx*1+0x5]
  413a3d:	shl    eax,0x8
  413a40:	add    eax,r15d
  413a43:	shl    eax,0x8
  413a46:	add    eax,edx
  413a48:	lea    edx,[rsi+0x1]
  413a4b:	mov    DWORD PTR [r8-0x4],eax
  413a4f:	cmp    ecx,0x0
  413a52:	jg     0x413a12
  413a54:	jne    0x413c12
  413a5a:	cmp    edx,0x1
  413a5d:	je     0x413d16
  413a63:	mov    eax,esi
  413a65:	mov    ecx,DWORD PTR [rsp+rax*4+0x30]
  413a69:	test   ecx,ecx
  413a6b:	je     0x413a82
  413a6d:	jmp    0x413d20
  413a72:	lea    edx,[rsi-0x1]
  413a75:	mov    rax,rdx
  413a78:	mov    edx,DWORD PTR [rsp+rdx*4+0x30]
  413a7c:	test   edx,edx
  413a7e:	jne    0x413a87
  413a80:	mov    esi,eax
  413a82:	cmp    esi,0x1
  413a85:	jne    0x413a72
  413a87:	movzx  r15d,r12b
  413a8b:	mov    BYTE PTR [rsp+0x2b],r10b
  413a90:	mov    DWORD PTR [rsp+0x2c],r9d
  413a95:	mov    r8d,r15d
  413a98:	sub    r8d,edi
  413a9b:	test   edi,edi
  413a9d:	js     0x413af5
  413a9f:	mov    edx,esi
  413aa1:	mov    rcx,r13
  413aa4:	call   0x4134f0
  413aa9:	test   eax,eax
  413aab:	jne    0x413cda
  413ab1:	movzx  r10d,BYTE PTR [rsp+0x2b]
  413ab7:	test   r10b,r10b
  413aba:	je     0x413c63
  413ac0:	lea    rax,[rip+0x1dc79]        # 0x431740
  413ac7:	mov    r9d,DWORD PTR [rsp+0x2c]
  413acc:	sub    r9d,DWORD PTR [rax+r15*4]
  413ad0:	je     0x4139e4
  413ad6:	mov    r9d,r9d
  413ad9:	lea    rcx,[rbx+0x3]
  413add:	mov    r8d,0x20
  413ae3:	lea    rdx,[rbx+r9*1+0x3]
  413ae8:	sub    r8,r9
  413aeb:	call   0x429520
  413af0:	jmp    0x4139e4
  413af5:	cmp    r11d,r8d
  413af8:	jg     0x413cc8
  413afe:	lea    rcx,[rip+0x1d69b]        # 0x4311a0
  413b05:	neg    edi
  413b07:	mov    r13d,0x9
  413b0d:	nop    DWORD PTR [rax]
  413b10:	cmp    edi,0x9
  413b13:	mov    eax,r13d
  413b16:	mov    r8d,esi
  413b19:	cmovle eax,edi
  413b1c:	sub    edi,eax
  413b1e:	mov    eax,eax
  413b20:	mov    r10d,DWORD PTR [rcx+rax*4]
  413b24:	mov    r11d,edi
  413b27:	xor    eax,eax
  413b29:	nop    DWORD PTR [rax+0x0]
  413b30:	lea    r9d,[r8-0x1]
  413b34:	shl    rax,0x20
  413b38:	mov    edx,DWORD PTR [rsp+r9*4+0x30]
  413b3d:	mov    r8,r9
  413b40:	add    rax,rdx
  413b43:	xor    edx,edx
  413b45:	div    r10
  413b48:	test   r9d,r9d
  413b4b:	mov    DWORD PTR [rsp+r9*4+0x30],eax
  413b50:	mov    eax,edx
  413b52:	jne    0x413b30
  413b54:	test   r11d,r11d
  413b57:	jg     0x413b10
  413b59:	lea    rax,[rip+0x1dbe0]        # 0x431740
  413b60:	mov    BYTE PTR [rbx],r12b
  413b63:	mov    BYTE PTR [rbx+0x1],r14b
  413b67:	mov    r9d,DWORD PTR [rax+r15*4]
  413b6b:	lea    eax,[r9-0x1]
  413b6f:	movsxd rcx,eax
  413b72:	shr    rcx,0x2
  413b76:	cmp    esi,ecx
  413b78:	mov    edx,ecx
  413b7a:	ja     0x413b91
  413b7c:	nop    DWORD PTR [rax+0x0]
  413b80:	mov    ecx,edx
  413b82:	sub    edx,0x1
  413b85:	cmp    esi,edx
  413b87:	mov    DWORD PTR [rsp+rcx*4+0x30],0x0
  413b8f:	jbe    0x413b80
  413b91:	cmp    eax,0x3
  413b94:	mov    r10d,eax
  413b97:	mov    ecx,eax
  413b99:	ja     0x413ba2
  413b9b:	jmp    0x413d0e
  413ba0:	mov    ecx,eax
  413ba2:	mov    edx,DWORD PTR [rbp+0x0]
  413ba5:	sub    eax,0x3
  413ba8:	add    rbp,0x4
  413bac:	cdqe   
  413bae:	mov    r8d,edx
  413bb1:	mov    BYTE PTR [rbx+rax*1+0x5],dl
  413bb5:	shr    r8d,0x18
  413bb9:	mov    BYTE PTR [rbx+rax*1+0x2],r8b
  413bbe:	mov    r8d,edx
  413bc1:	shr    r8d,0x10
  413bc5:	mov    BYTE PTR [rbx+rax*1+0x3],r8b
  413bca:	mov    r8d,edx
  413bcd:	shr    r8d,0x8
  413bd1:	mov    BYTE PTR [rbx+rax*1+0x4],r8b
  413bd6:	lea    eax,[rcx-0x4]
  413bd9:	cmp    eax,0x3
  413bdc:	ja     0x413ba0
  413bde:	sub    r9d,0x5
  413be2:	shr    r9d,0x2
  413be6:	mov    eax,r9d
  413be9:	add    r9d,0x1
  413bed:	neg    eax
  413bef:	lea    eax,[r10+rax*4-0x4]
  413bf4:	test   eax,eax
  413bf6:	jne    0x413ce4
  413bfc:	mov    eax,0x23
  413c01:	add    rsp,0x58
  413c05:	pop    rbx
  413c06:	pop    rsi
  413c07:	pop    rdi
  413c08:	pop    rbp
  413c09:	pop    r12
  413c0b:	pop    r13
  413c0d:	pop    r14
  413c0f:	pop    r15
  413c11:	ret    
  413c12:	neg    ecx
  413c14:	mov    r15d,0xffffffff
  413c1a:	mov    r8d,esi
  413c1d:	shl    ecx,0x3
  413c20:	shr    r15d,cl
  413c23:	and    eax,r15d
  413c26:	mov    DWORD PTR [rsp+r8*4+0x30],eax
  413c2b:	jmp    0x413a5a
  413c30:	mov    esi,eax
  413c32:	lea    rdi,[rcx+0x3]
  413c36:	mov    r8d,0x20
  413c3c:	lea    rcx,[rcx+rsi*1+0x3]
  413c41:	sub    r8,rsi
  413c44:	mov    rdx,rdi
  413c47:	call   0x429520
  413c4c:	mov    r8,rsi
  413c4f:	xor    edx,edx
  413c51:	mov    rcx,rdi
  413c54:	call   0x429518
  413c59:	mov    BYTE PTR [rbx],r12b
  413c5c:	mov    eax,0x23
  413c61:	jmp    0x413c01
  413c63:	lea    rcx,[rip+0x1d536]        # 0x4311a0
  413c6a:	nop    WORD PTR [rax+rax*1+0x0]
  413c70:	cmp    edi,0x9
  413c73:	mov    eax,0x9
  413c78:	mov    rdx,r13
  413c7b:	cmovle eax,edi
  413c7e:	xor    r11d,r11d
  413c81:	sub    edi,eax
  413c83:	mov    eax,eax
  413c85:	mov    r9d,DWORD PTR [rcx+rax*4]
  413c89:	lea    eax,[rsi-0x1]
  413c8c:	mov    r10d,edi
  413c8f:	lea    r8,[r13+rax*4+0x4]
  413c94:	mov    eax,DWORD PTR [rdx]
  413c96:	add    rdx,0x4
  413c9a:	imul   rax,r9
  413c9e:	add    rax,r11
  413ca1:	mov    DWORD PTR [rdx-0x4],eax
  413ca4:	shr    rax,0x20
  413ca8:	cmp    rdx,r8
  413cab:	mov    r11d,eax
  413cae:	jne    0x413c94
  413cb0:	test   r11d,r11d
  413cb3:	je     0x413cbe
  413cb5:	mov    edx,esi
  413cb7:	add    esi,0x1
  413cba:	mov    DWORD PTR [rsp+rdx*4+0x30],eax
  413cbe:	test   r10d,r10d
  413cc1:	jg     0x413c70
  413cc3:	jmp    0x413b59
  413cc8:	mov    edx,esi
  413cca:	mov    rcx,r13
  413ccd:	call   0x4134f0
  413cd2:	test   eax,eax
  413cd4:	je     0x413afe
  413cda:	mov    eax,0xfffffffb
  413cdf:	jmp    0x413c01
  413ce4:	mov    edx,DWORD PTR [rsp+r9*4+0x30]
  413ce9:	nop    DWORD PTR [rax+0x0]
  413cf0:	movsxd rcx,eax
  413cf3:	mov    BYTE PTR [rbx+rcx*1+0x2],dl
  413cf7:	shr    edx,0x8
  413cfa:	sub    eax,0x1
  413cfd:	jne    0x413cf0
  413cff:	jmp    0x413bfc
  413d04:	mov    eax,0xffffffff
  413d09:	jmp    0x413c01
  413d0e:	xor    r9d,r9d
  413d11:	jmp    0x413bf4
  413d16:	mov    esi,0x1
  413d1b:	jmp    0x413a87
  413d20:	mov    esi,edx
  413d22:	jmp    0x413a87
  413d27:	nop
  413d28:	nop
  413d29:	nop
  413d2a:	nop
  413d2b:	nop
  413d2c:	nop
  413d2d:	nop
  413d2e:	nop
  413d2f:	nop
  413d30:	push   rbp
  413d31:	push   rdi
  413d32:	push   rsi
  413d33:	push   rbx
  413d34:	sub    rsp,0x28
  413d38:	mov    rax,QWORD PTR [rdx]
  413d3b:	mov    rdi,rcx
  413d3e:	mov    rbp,rdx
  413d41:	cmp    BYTE PTR [rax+0x8],0x5b
  413d45:	lea    rsi,[rax+0x8]
  413d49:	je     0x413df0
  413d4f:	mov    edx,0x3a
  413d54:	mov    rcx,rsi
  413d57:	call   0x429480
  413d5c:	mov    rbx,rax
  413d5f:	cmp    rbx,rsi
  413d62:	je     0x413d69
  413d64:	test   rbx,rbx
  413d67:	jne    0x413dc2
  413d69:	mov    edx,0x5c
  413d6e:	mov    rcx,rsi
  413d71:	call   0x429480
  413d76:	cmp    rax,rsi
  413d79:	mov    rbx,rax
  413d7c:	je     0x413de0
  413d7e:	test   rax,rax
  413d81:	je     0x413de0
  413d83:	lea    rdx,[rax+0x1]
  413d87:	lea    rcx,[rdi+0xd8]
  413d8e:	call   0x41f8a0
  413d93:	test   rax,rax
  413d96:	je     0x413de0
  413d98:	mov    DWORD PTR [rdi+0x8],0x0
  413d9f:	sub    rbx,rsi
  413da2:	mov    rdx,rsi
  413da5:	mov    rcx,rdi
  413da8:	mov    r8,rbx
  413dab:	call   0x41f810
  413db0:	test   rax,rax
  413db3:	setne  al
  413db6:	movzx  eax,al
  413db9:	add    rsp,0x28
  413dbd:	pop    rbx
  413dbe:	pop    rsi
  413dbf:	pop    rdi
  413dc0:	pop    rbp
  413dc1:	ret    
  413dc2:	lea    rcx,[rbx+0x1]
  413dc6:	call   0x4295d0
  413dcb:	lea    rcx,[rdi+0xd8]
  413dd2:	mov    DWORD PTR [rdi+0x8],eax
  413dd5:	mov    DWORD PTR [rbp+0x8],eax
  413dd8:	call   0x41f7e0
  413ddd:	jmp    0x413d9f
  413ddf:	nop
  413de0:	xor    eax,eax
  413de2:	add    rsp,0x28
  413de6:	pop    rbx
  413de7:	pop    rsi
  413de8:	pop    rdi
  413de9:	pop    rbp
  413dea:	ret    
  413deb:	nop    DWORD PTR [rax+rax*1+0x0]
  413df0:	lea    rdx,[rip+0x1da89]        # 0x431880
  413df7:	mov    rcx,rsi
  413dfa:	call   0x429478
  413dff:	test   rax,rax
  413e02:	je     0x413d69
  413e08:	lea    rbx,[rax+0x1]
  413e0c:	jmp    0x413d5f
  413e11:	nop    DWORD PTR [rax+rax*1+0x0]
  413e16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413e20:	push   rsi
  413e21:	push   rbx
  413e22:	sub    rsp,0x38
  413e26:	mov    rsi,rcx
  413e29:	call   0x41f720
  413e2e:	test   rax,rax
  413e31:	mov    rbx,rax
  413e34:	je     0x413e70
  413e36:	lea    rcx,[rsp+0x28]
  413e3b:	lea    rdx,[rip+0x1da41]        # 0x431883
  413e42:	mov    r9,rsi
  413e45:	mov    r8,rax
  413e48:	call   0x429330
  413e4d:	test   eax,eax
  413e4f:	js     0x413e65
  413e51:	mov    rcx,rbx
  413e54:	call   0x429580
  413e59:	mov    rax,QWORD PTR [rsp+0x28]
  413e5e:	add    rsp,0x38
  413e62:	pop    rbx
  413e63:	pop    rsi
  413e64:	ret    
  413e65:	mov    QWORD PTR [rsp+0x28],0x0
  413e6e:	jmp    0x413e51
  413e70:	xor    eax,eax
  413e72:	jmp    0x413e5e
  413e74:	xchg   ax,ax
  413e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413e80:	push   rbx
  413e81:	sub    rsp,0x20
  413e85:	mov    rbx,rcx
  413e88:	call   0x4295d0
  413e8d:	test   eax,eax
  413e8f:	je     0x413ea0
  413e91:	add    rsp,0x20
  413e95:	pop    rbx
  413e96:	ret    
  413e97:	nop    WORD PTR [rax+rax*1+0x0]
  413ea0:	mov    rcx,rbx
  413ea3:	add    rsp,0x20
  413ea7:	pop    rbx
  413ea8:	jmp    0x41f680
  413ead:	nop    DWORD PTR [rax]
  413eb0:	movsx  eax,BYTE PTR [rcx]
  413eb3:	mov    edx,eax
  413eb5:	sub    eax,0x30
  413eb8:	cmp    eax,0x9
  413ebb:	jbe    0x413ed2
  413ebd:	or     edx,0x20
  413ec0:	xor    eax,eax
  413ec2:	movsx  edx,dl
  413ec5:	lea    r8d,[rdx-0x61]
  413ec9:	cmp    r8d,0x5
  413ecd:	ja     0x413ed5
  413ecf:	lea    eax,[rdx-0x57]
  413ed2:	shl    eax,0x4
  413ed5:	movsx  edx,BYTE PTR [rcx+0x1]
  413ed9:	mov    ecx,edx
  413edb:	sub    edx,0x30
  413ede:	cmp    edx,0x9
  413ee1:	jbe    0x413efc
  413ee3:	or     ecx,0x20
  413ee6:	movsx  ecx,cl
  413ee9:	lea    r8d,[rcx-0x61]
  413eed:	lea    edx,[rcx-0x57]
  413ef0:	mov    ecx,0x0
  413ef5:	cmp    r8d,0x5
  413ef9:	cmova  edx,ecx
  413efc:	add    eax,edx
  413efe:	ret    
  413eff:	nop
  413f00:	push   r13
  413f02:	push   r12
  413f04:	push   rbp
  413f05:	push   rdi
  413f06:	push   rsi
  413f07:	push   rbx
  413f08:	sub    rsp,0x28
  413f0c:	lea    r13,[rip+0x1e6ed]        # 0x432600
  413f13:	mov    rdi,QWORD PTR [rip+0x2bb7a]        # 0x43fa94
  413f1a:	xor    ebx,ebx
  413f1c:	mov    rbp,rcx
  413f1f:	mov    r12d,edx
  413f22:	mov    rsi,r13
  413f25:	mov    rdx,rsi
  413f28:	mov    rcx,rbp
  413f2b:	call   rdi
  413f2d:	test   eax,eax
  413f2f:	je     0x413f50
  413f31:	add    ebx,0x1
  413f34:	add    rsi,0x8
  413f38:	cmp    ebx,0x6
  413f3b:	jne    0x413f25
  413f3d:	mov    eax,r12d
  413f40:	add    rsp,0x28
  413f44:	pop    rbx
  413f45:	pop    rsi
  413f46:	pop    rdi
  413f47:	pop    rbp
  413f48:	pop    r12
  413f4a:	pop    r13
  413f4c:	ret    
  413f4d:	nop    DWORD PTR [rax]
  413f50:	movsxd rbx,ebx
  413f53:	movzx  eax,BYTE PTR [r13+rbx*8+0x7]
  413f59:	add    rsp,0x28
  413f5d:	pop    rbx
  413f5e:	pop    rsi
  413f5f:	pop    rdi
  413f60:	pop    rbp
  413f61:	pop    r12
  413f63:	pop    r13
  413f65:	ret    
  413f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413f70:	push   rdi
  413f71:	push   rsi
  413f72:	push   rbx
  413f73:	sub    rsp,0x30
  413f77:	mov    rbx,rdx
  413f7a:	mov    rdi,rcx
  413f7d:	mov    edx,0xffffffff
  413f82:	mov    rcx,rbx
  413f85:	mov    rsi,r8
  413f88:	call   0x413f00
  413f8d:	test   eax,eax
  413f8f:	js     0x413fa0
  413f91:	add    rsp,0x30
  413f95:	pop    rbx
  413f96:	pop    rsi
  413f97:	pop    rdi
  413f98:	ret    
  413f99:	nop    DWORD PTR [rax+0x0]
  413fa0:	mov    rax,QWORD PTR [rip+0x24c09]        # 0x438bb0
  413fa7:	mov    eax,DWORD PTR [rax]
  413fa9:	test   eax,eax
  413fab:	jne    0x413fc0
  413fad:	and    BYTE PTR [rsi+0xf5],0xfd
  413fb4:	xor    eax,eax
  413fb6:	add    rsp,0x30
  413fba:	pop    rbx
  413fbb:	pop    rsi
  413fbc:	pop    rdi
  413fbd:	ret    
  413fbe:	xchg   ax,ax
  413fc0:	lea    r8,[rip+0x1d8c9]        # 0x431890
  413fc7:	lea    rcx,[rip+0x1d8fc]        # 0x4318ca
  413fce:	mov    QWORD PTR [rsp+0x20],rdi
  413fd3:	mov    r9,rbx
  413fd6:	mov    edx,0x1cb2
  413fdb:	call   0x423fa0
  413fe0:	jmp    0x413fad
  413fe2:	nop    DWORD PTR [rax+0x0]
  413fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413ff0:	push   r15
  413ff2:	push   r14
  413ff4:	push   r13
  413ff6:	push   r12
  413ff8:	push   rbp
  413ff9:	push   rdi
  413ffa:	push   rsi
  413ffb:	push   rbx
  413ffc:	sub    rsp,0x138
  414003:	mov    rax,QWORD PTR [rip+0x24ba6]        # 0x438bb0
  41400a:	mov    QWORD PTR [rsp+0x198],r9
  414012:	mov    r13,rcx
  414015:	mov    QWORD PTR [rsp+0x188],rdx
  41401d:	mov    QWORD PTR [rsp+0x190],r8
  414025:	mov    r9d,DWORD PTR [rax]
  414028:	test   r9d,r9d
  41402b:	jne    0x414207
  414031:	mov    rbx,QWORD PTR [rip+0x2bb24]        # 0x43fb5c
  414038:	mov    rbp,QWORD PTR [rip+0x2bbfd]        # 0x43fc3c
  41403f:	lea    r12,[rsp+0x30]
  414044:	mov    DWORD PTR [rsp+0x2c],0x0
  41404c:	mov    DWORD PTR [rsp+0x28],0x0
  414054:	mov    r8,r13
  414057:	mov    edx,0x100
  41405c:	mov    rcx,r12
  41405f:	call   0x4295a8
  414064:	test   rax,rax
  414067:	je     0x4141e2
  41406d:	movzx  edi,BYTE PTR [rsp+0x30]
  414072:	mov    rsi,r12
  414075:	test   dil,dil
  414078:	jne    0x41408c
  41407a:	jmp    0x414054
  41407c:	nop    DWORD PTR [rax+0x0]
  414080:	add    rsi,0x1
  414084:	movzx  edi,BYTE PTR [rsi]
  414087:	test   dil,dil
  41408a:	je     0x414054
  41408c:	movzx  ecx,dil
  414090:	call   rbx
  414092:	test   eax,eax
  414094:	jne    0x414080
  414096:	cmp    dil,0x23
  41409a:	je     0x414054
  41409c:	cmp    dil,0x3b
  4140a0:	je     0x414054
  4140a2:	movzx  eax,BYTE PTR [rsi]
  4140a5:	cmp    al,0x3d
  4140a7:	je     0x414054
  4140a9:	test   al,al
  4140ab:	je     0x414054
  4140ad:	xor    edi,edi
  4140af:	xor    r14d,r14d
  4140b2:	jmp    0x4140b8
  4140b4:	test   al,al
  4140b6:	je     0x4140f8
  4140b8:	movzx  ecx,al
  4140bb:	call   rbx
  4140bd:	test   eax,eax
  4140bf:	jne    0x4140e9
  4140c1:	movzx  ecx,r14b
  4140c5:	call   rbx
  4140c7:	test   eax,eax
  4140c9:	je     0x4140d6
  4140cb:	movsxd rax,edi
  4140ce:	add    edi,0x1
  4140d1:	mov    BYTE PTR [rsp+rax*1+0x30],0x20
  4140d6:	lea    r14d,[rdi+0x1]
  4140da:	movzx  ecx,BYTE PTR [rsi]
  4140dd:	movsxd rdi,edi
  4140e0:	call   rbp
  4140e2:	mov    BYTE PTR [rsp+rdi*1+0x30],al
  4140e6:	movsxd rdi,r14d
  4140e9:	movzx  r14d,BYTE PTR [rsi]
  4140ed:	add    rsi,0x1
  4140f1:	movzx  eax,BYTE PTR [rsi]
  4140f4:	cmp    al,0x3d
  4140f6:	jne    0x4140b4
  4140f8:	test   edi,edi
  4140fa:	je     0x414054
  414100:	cmp    al,0x1
  414102:	mov    BYTE PTR [rsp+rdi*1+0x30],0x0
  414107:	sbb    rsi,0xffffffffffffffff
  41410b:	movzx  ecx,BYTE PTR [rsi]
  41410e:	test   cl,cl
  414110:	jne    0x41412f
  414112:	jmp    0x414241
  414117:	nop    WORD PTR [rax+rax*1+0x0]
  414120:	add    rsi,0x1
  414124:	movzx  ecx,BYTE PTR [rsi]
  414127:	test   cl,cl
  414129:	je     0x414241
  41412f:	call   rbx
  414131:	test   eax,eax
  414133:	jne    0x414120
  414135:	movzx  ecx,BYTE PTR [rsi]
  414138:	cmp    cl,0x3b
  41413b:	setne  dl
  41413e:	test   cl,cl
  414140:	setne  al
  414143:	test   dl,al
  414145:	je     0x414241
  41414b:	cmp    cl,0x23
  41414e:	je     0x414241
  414154:	mov    r15,rsi
  414157:	xor    r14d,r14d
  41415a:	xor    edi,edi
  41415c:	jmp    0x414165
  41415e:	xchg   ax,ax
  414160:	cmp    cl,0x23
  414163:	je     0x4141a9
  414165:	call   rbx
  414167:	test   eax,eax
  414169:	jne    0x41418e
  41416b:	movzx  ecx,dil
  41416f:	call   rbx
  414171:	test   eax,eax
  414173:	je     0x414180
  414175:	movsxd rax,r14d
  414178:	add    r14d,0x1
  41417c:	mov    BYTE PTR [rsi+rax*1],0x20
  414180:	movzx  edx,BYTE PTR [r15]
  414184:	movsxd rax,r14d
  414187:	add    r14d,0x1
  41418b:	mov    BYTE PTR [rsi+rax*1],dl
  41418e:	movzx  edi,BYTE PTR [r15]
  414192:	add    r15,0x1
  414196:	movzx  ecx,BYTE PTR [r15]
  41419a:	cmp    cl,0x3b
  41419d:	setne  dl
  4141a0:	test   cl,cl
  4141a2:	setne  al
  4141a5:	test   dl,al
  4141a7:	jne    0x414160
  4141a9:	movsxd r14,r14d
  4141ac:	mov    BYTE PTR [rsi+r14*1],0x0
  4141b1:	cmp    BYTE PTR [rsp+0x30],0x5b
  4141b6:	je     0x414254
  4141bc:	mov    edx,DWORD PTR [rsp+0x28]
  4141c0:	test   edx,edx
  4141c2:	je     0x414054
  4141c8:	mov    r8,QWORD PTR [rsp+0x198]
  4141d0:	mov    rdx,rsi
  4141d3:	mov    rcx,r12
  4141d6:	call   QWORD PTR [rsp+0x190]
  4141dd:	jmp    0x414054
  4141e2:	mov    rax,QWORD PTR [rip+0x249c7]        # 0x438bb0
  4141e9:	mov    eax,DWORD PTR [rax]
  4141eb:	test   eax,eax
  4141ed:	jne    0x414227
  4141ef:	mov    eax,DWORD PTR [rsp+0x2c]
  4141f3:	add    rsp,0x138
  4141fa:	pop    rbx
  4141fb:	pop    rsi
  4141fc:	pop    rdi
  4141fd:	pop    rbp
  4141fe:	pop    r12
  414200:	pop    r13
  414202:	pop    r14
  414204:	pop    r15
  414206:	ret    
  414207:	lea    r8,[rip+0x1d6c5]        # 0x4318d3
  41420e:	lea    rcx,[rip+0x1d6b5]        # 0x4318ca
  414215:	mov    r9,rdx
  414218:	mov    edx,0x1fa5
  41421d:	call   0x423fa0
  414222:	jmp    0x414031
  414227:	lea    r8,[rip+0x1d6e0]        # 0x43190e
  41422e:	lea    rcx,[rip+0x1d695]        # 0x4318ca
  414235:	mov    edx,0x2435
  41423a:	call   0x423fa0
  41423f:	jmp    0x4141ef
  414241:	xor    r14d,r14d
  414244:	mov    BYTE PTR [rsi+r14*1],0x0
  414249:	cmp    BYTE PTR [rsp+0x30],0x5b
  41424e:	jne    0x4141bc
  414254:	mov    edx,0x5d
  414259:	mov    rcx,r12
  41425c:	call   0x4294b8
  414261:	test   rax,rax
  414264:	je     0x414269
  414266:	mov    BYTE PTR [rax],0x0
  414269:	mov    rax,QWORD PTR [rip+0x24940]        # 0x438bb0
  414270:	mov    r8d,DWORD PTR [rax]
  414273:	test   r8d,r8d
  414276:	jne    0x4142e1
  414278:	lea    rdx,[r12+0x1]
  41427d:	mov    rcx,QWORD PTR [rsp+0x188]
  414285:	call   QWORD PTR [rip+0x2b809]        # 0x43fa94
  41428b:	test   eax,eax
  41428d:	mov    DWORD PTR [rsp+0x28],0x0
  414295:	jne    0x414054
  41429b:	mov    rax,QWORD PTR [rip+0x2490e]        # 0x438bb0
  4142a2:	mov    DWORD PTR [rsp+0x2c],0x1
  4142aa:	mov    DWORD PTR [rsp+0x28],0x1
  4142b2:	mov    ecx,DWORD PTR [rax]
  4142b4:	test   ecx,ecx
  4142b6:	je     0x414054
  4142bc:	lea    r8,[rip+0x1d63d]        # 0x431900
  4142c3:	lea    rcx,[rip+0x1d600]        # 0x4318ca
  4142ca:	mov    edx,0x2385
  4142cf:	call   0x423fa0
  4142d4:	mov    eax,DWORD PTR [rsp+0x2c]
  4142d8:	mov    DWORD PTR [rsp+0x28],eax
  4142dc:	jmp    0x414054
  4142e1:	lea    r9,[r12+0x1]
  4142e6:	lea    r8,[rip+0x1d5ff]        # 0x4318ec
  4142ed:	lea    rcx,[rip+0x1d5d6]        # 0x4318ca
  4142f4:	mov    edx,0x2355
  4142f9:	call   0x423fa0
  4142fe:	jmp    0x414278
  414303:	nop    DWORD PTR [rax]
  414306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414310:	push   r15
  414312:	push   r14
  414314:	push   r13
  414316:	push   r12
  414318:	push   rbp
  414319:	push   rdi
  41431a:	push   rsi
  41431b:	push   rbx
  41431c:	sub    rsp,0x48
  414320:	mov    r14,rdx
  414323:	lea    rdx,[rip+0x1d5f2]        # 0x43191c
  41432a:	mov    r13,rcx
  41432d:	mov    r12,r8
  414330:	mov    rdi,r9
  414333:	call   0x4295a0
  414338:	test   rax,rax
  41433b:	mov    rbx,rax
  41433e:	je     0x414490
  414344:	mov    rbp,QWORD PTR [rip+0x24865]        # 0x438bb0
  41434b:	mov    ecx,DWORD PTR [rbp+0x0]
  41434e:	test   ecx,ecx
  414350:	jne    0x4144d0
  414356:	mov    rax,QWORD PTR [rip+0x24813]        # 0x438b70
  41435d:	lea    r8,[rip+0x20fc]        # 0x416460
  414364:	lea    rdx,[rip+0x1d5e8]        # 0x431953
  41436b:	mov    r9,rdi
  41436e:	mov    rcx,rbx
  414371:	mov    QWORD PTR [rsp+0x38],rax
  414376:	call   0x413ff0
  41437b:	cmp    BYTE PTR [r12],0x0
  414380:	jne    0x4143b0
  414382:	mov    esi,DWORD PTR [rbp+0x0]
  414385:	test   esi,esi
  414387:	jne    0x414502
  41438d:	mov    rcx,rbx
  414390:	call   0x4295b8
  414395:	mov    eax,esi
  414397:	add    rsp,0x48
  41439b:	pop    rbx
  41439c:	pop    rsi
  41439d:	pop    rdi
  41439e:	pop    rbp
  41439f:	pop    r12
  4143a1:	pop    r13
  4143a3:	pop    r14
  4143a5:	pop    r15
  4143a7:	ret    
  4143a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4143b0:	mov    rcx,rbx
  4143b3:	lea    r14,[rsp+0x38]
  4143b8:	call   0x4294e0
  4143bd:	lea    rdx,[rdi+0xd8]
  4143c4:	mov    rcx,r14
  4143c7:	call   0x41f900
  4143cc:	test   rax,rax
  4143cf:	je     0x414382
  4143d1:	lea    r8,[rip+0x2088]        # 0x416460
  4143d8:	mov    r9,rdi
  4143db:	mov    rdx,r12
  4143de:	mov    rcx,rbx
  4143e1:	mov    r15d,DWORD PTR [rdi+0x8]
  4143e5:	call   0x413ff0
  4143ea:	test   BYTE PTR [rdi+0xf5],0x2
  4143f1:	mov    esi,eax
  4143f3:	je     0x4144f5
  4143f9:	mov    rax,QWORD PTR [rdi+0xd8]
  414400:	cmp    QWORD PTR [rax],0x0
  414404:	je     0x414450
  414406:	mov    r9d,DWORD PTR [rdi+0x8]
  41440a:	test   r9d,r9d
  41440d:	je     0x414450
  41440f:	test   r15d,r15d
  414412:	jne    0x414450
  414414:	mov    rdx,QWORD PTR [rsp+0x38]
  414419:	cmp    QWORD PTR [rdx],0x0
  41441d:	jne    0x414450
  41441f:	mov    edx,DWORD PTR [rbp+0x0]
  414422:	test   edx,edx
  414424:	je     0x414450
  414426:	add    rax,0x8
  41442a:	lea    r8,[rip+0x1d52f]        # 0x431960
  414431:	lea    rcx,[rip+0x1d492]        # 0x4318ca
  414438:	mov    QWORD PTR [rsp+0x20],rax
  41443d:	mov    edx,0x1a42
  414442:	call   0x423fa0
  414447:	nop    WORD PTR [rax+rax*1+0x0]
  414450:	mov    rcx,r14
  414453:	call   0x41f7e0
  414458:	test   esi,esi
  41445a:	je     0x414382
  414460:	mov    eax,DWORD PTR [rbp+0x0]
  414463:	test   eax,eax
  414465:	je     0x41438d
  41446b:	lea    r8,[rip+0x1d523]        # 0x431995
  414472:	lea    rcx,[rip+0x1d451]        # 0x4318ca
  414479:	mov    QWORD PTR [rsp+0x20],r13
  41447e:	mov    r9,r12
  414481:	mov    edx,0x12e5
  414486:	call   0x423fa0
  41448b:	jmp    0x41438d
  414490:	mov    rax,QWORD PTR [rip+0x24719]        # 0x438bb0
  414497:	mov    esi,DWORD PTR [rax]
  414499:	test   esi,esi
  41449b:	je     0x414395
  4144a1:	lea    r8,[rip+0x1d476]        # 0x43191e
  4144a8:	lea    rcx,[rip+0x1d41b]        # 0x4318ca
  4144af:	mov    QWORD PTR [rsp+0x20],r14
  4144b4:	mov    r9,r13
  4144b7:	mov    edx,0x1265
  4144bc:	xor    esi,esi
  4144be:	call   0x423fa0
  4144c3:	jmp    0x414395
  4144c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4144d0:	lea    r8,[rip+0x1d462]        # 0x431939
  4144d7:	lea    rcx,[rip+0x1d3ec]        # 0x4318ca
  4144de:	mov    QWORD PTR [rsp+0x20],r14
  4144e3:	mov    r9,r13
  4144e6:	mov    edx,0x12a5
  4144eb:	call   0x423fa0
  4144f0:	jmp    0x414356
  4144f5:	mov    rcx,r14
  4144f8:	call   0x41f7e0
  4144fd:	jmp    0x414382
  414502:	lea    r8,[rip+0x1d4aa]        # 0x4319b3
  414509:	lea    rcx,[rip+0x1d3ba]        # 0x4318ca
  414510:	mov    r9,r12
  414513:	mov    edx,0x1306
  414518:	xor    esi,esi
  41451a:	call   0x423fa0
  41451f:	jmp    0x41438d
  414524:	xchg   ax,ax
  414526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414530:	push   rsi
  414531:	push   rbx
  414532:	sub    rsp,0x48
  414536:	mov    rsi,rcx
  414539:	mov    rcx,QWORD PTR [rip+0x29b40]        # 0x43e080
  414540:	mov    rbx,rdx
  414543:	mov    QWORD PTR [rsp+0x38],0x0
  41454c:	test   rcx,rcx
  41454f:	je     0x414570
  414551:	mov    r8,rdx
  414554:	lea    rdx,[rip+0x1d475]        # 0x4319d0
  41455b:	mov    r9,rsi
  41455e:	call   0x414310
  414563:	test   eax,eax
  414565:	je     0x414570
  414567:	add    rsp,0x48
  41456b:	pop    rbx
  41456c:	pop    rsi
  41456d:	ret    
  41456e:	xchg   ax,ax
  414570:	lea    rcx,[rip+0x1d44d]        # 0x4319c4
  414577:	call   0x429560
  41457c:	test   rax,rax
  41457f:	mov    QWORD PTR [rsp+0x38],rax
  414584:	je     0x4146a0
  41458a:	lea    rdx,[rip+0x1d454]        # 0x4319e5
  414591:	mov    r9,rsi
  414594:	mov    r8,rbx
  414597:	mov    rcx,rax
  41459a:	call   0x414310
  41459f:	test   eax,eax
  4145a1:	jne    0x414567
  4145a3:	lea    rcx,[rip+0x1d487]        # 0x431a31
  4145aa:	call   0x429560
  4145af:	test   rax,rax
  4145b2:	je     0x414670
  4145b8:	lea    rcx,[rsp+0x38]
  4145bd:	lea    rdx,[rip+0x1e0ac]        # 0x432670
  4145c4:	mov    r8,rax
  4145c7:	call   0x429330
  4145cc:	test   eax,eax
  4145ce:	js     0x414601
  4145d0:	mov    rcx,QWORD PTR [rsp+0x38]
  4145d5:	lea    rdx,[rip+0x1e084]        # 0x432660
  4145dc:	mov    r9,rsi
  4145df:	mov    r8,rbx
  4145e2:	call   0x414310
  4145e7:	mov    rcx,QWORD PTR [rsp+0x38]
  4145ec:	mov    DWORD PTR [rsp+0x2c],eax
  4145f0:	call   0x429580
  4145f5:	mov    eax,DWORD PTR [rsp+0x2c]
  4145f9:	test   eax,eax
  4145fb:	jne    0x414567
  414601:	lea    rcx,[rip+0x1d45e]        # 0x431a66
  414608:	call   0x413e20
  41460d:	test   rax,rax
  414610:	mov    QWORD PTR [rsp+0x38],rax
  414615:	je     0x4146d0
  41461b:	lea    rdx,[rip+0x1d452]        # 0x431a74
  414622:	mov    r9,rsi
  414625:	mov    r8,rbx
  414628:	mov    rcx,rax
  41462b:	call   0x414310
  414630:	mov    rcx,QWORD PTR [rsp+0x38]
  414635:	mov    DWORD PTR [rsp+0x2c],eax
  414639:	call   0x429580
  41463e:	mov    eax,DWORD PTR [rsp+0x2c]
  414642:	test   eax,eax
  414644:	jne    0x414567
  41464a:	lea    rdx,[rip+0x1d4b7]        # 0x431b08
  414651:	lea    rcx,[rip+0x1d430]        # 0x431a88
  414658:	mov    r9,rsi
  41465b:	mov    r8,rbx
  41465e:	call   0x414310
  414663:	add    rsp,0x48
  414667:	pop    rbx
  414668:	pop    rsi
  414669:	ret    
  41466a:	nop    WORD PTR [rax+rax*1+0x0]
  414670:	mov    rax,QWORD PTR [rip+0x24539]        # 0x438bb0
  414677:	mov    edx,DWORD PTR [rax]
  414679:	test   edx,edx
  41467b:	je     0x414601
  41467d:	lea    r8,[rip+0x1d3bc]        # 0x431a40
  414684:	lea    rcx,[rip+0x1d23f]        # 0x4318ca
  41468b:	mov    edx,0x1706
  414690:	call   0x423fa0
  414695:	jmp    0x414601
  41469a:	nop    WORD PTR [rax+rax*1+0x0]
  4146a0:	mov    rax,QWORD PTR [rip+0x24509]        # 0x438bb0
  4146a7:	mov    ecx,DWORD PTR [rax]
  4146a9:	test   ecx,ecx
  4146ab:	je     0x4145a3
  4146b1:	lea    r8,[rip+0x1d348]        # 0x431a00
  4146b8:	lea    rcx,[rip+0x1d20b]        # 0x4318ca
  4146bf:	mov    edx,0x1636
  4146c4:	call   0x423fa0
  4146c9:	jmp    0x4145a3
  4146ce:	xchg   ax,ax
  4146d0:	mov    rax,QWORD PTR [rip+0x244d9]        # 0x438bb0
  4146d7:	mov    eax,DWORD PTR [rax]
  4146d9:	test   eax,eax
  4146db:	je     0x41464a
  4146e1:	lea    r9,[rip+0x1d3a0]        # 0x431a88
  4146e8:	lea    r8,[rip+0x1d3e9]        # 0x431ad8
  4146ef:	lea    rcx,[rip+0x1d1d4]        # 0x4318ca
  4146f6:	mov    edx,0x17a6
  4146fb:	call   0x423fa0
  414700:	jmp    0x41464a
  414705:	nop
  414706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414710:	push   rbp
  414711:	push   rdi
  414712:	push   rsi
  414713:	push   rbx
  414714:	sub    rsp,0x48
  414718:	lea    rbx,[rip+0x1de61]        # 0x432580
  41471f:	lea    rdi,[rip+0x1deda]        # 0x432600
  414726:	test   rdx,rdx
  414729:	mov    rsi,rcx
  41472c:	mov    rbp,rdx
  41472f:	je     0x4147d0
  414735:	mov    rdx,rbx
  414738:	mov    rcx,rsi
  41473b:	call   0x4294b0
  414740:	test   eax,eax
  414742:	je     0x414783
  414744:	add    rbx,0x8
  414748:	cmp    rbx,rdi
  41474b:	jne    0x414735
  41474d:	mov    rdx,QWORD PTR [rip+0x2445c]        # 0x438bb0
  414754:	xor    eax,eax
  414756:	mov    edx,DWORD PTR [rdx]
  414758:	test   edx,edx
  41475a:	je     0x41479c
  41475c:	lea    r8,[rip+0x1d3b5]        # 0x431b18
  414763:	lea    rcx,[rip+0x1d160]        # 0x4318ca
  41476a:	mov    r9,rsi
  41476d:	mov    edx,0x38e5
  414772:	mov    QWORD PTR [rsp+0x38],rax
  414777:	call   0x423fa0
  41477c:	mov    rax,QWORD PTR [rsp+0x38]
  414781:	jmp    0x41479c
  414783:	mov    rdx,QWORD PTR [rip+0x24426]        # 0x438bb0
  41478a:	movzx  eax,WORD PTR [rbx+0x6]
  41478e:	mov    ecx,DWORD PTR [rdx]
  414790:	mov    WORD PTR [rbp+0xc],ax
  414794:	test   ecx,ecx
  414796:	jne    0x4147a5
  414798:	lea    rax,[rbp+0xc]
  41479c:	add    rsp,0x48
  4147a0:	pop    rbx
  4147a1:	pop    rsi
  4147a2:	pop    rdi
  4147a3:	pop    rbp
  4147a4:	ret    
  4147a5:	lea    r8,[rip+0x1d38c]        # 0x431b38
  4147ac:	lea    rcx,[rip+0x1d117]        # 0x4318ca
  4147b3:	mov    DWORD PTR [rsp+0x20],eax
  4147b7:	mov    r9,rsi
  4147ba:	mov    edx,0x3935
  4147bf:	call   0x423fa0
  4147c4:	jmp    0x414798
  4147c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4147d0:	lea    rdx,[rip+0x1d0f3]        # 0x4318ca
  4147d7:	lea    rcx,[rip+0x1d334]        # 0x431b12
  4147de:	mov    r8d,0x389
  4147e4:	call   0x4291e0
  4147e9:	xor    eax,eax
  4147eb:	jmp    0x41479c
  4147ed:	nop    DWORD PTR [rax]
  4147f0:	push   rbx
  4147f1:	sub    rsp,0x20
  4147f5:	mov    rbx,rcx
  4147f8:	mov    rcx,QWORD PTR [rip+0x29881]        # 0x43e080
  4147ff:	test   rcx,rcx
  414802:	je     0x414814
  414804:	call   0x429580
  414809:	mov    QWORD PTR [rip+0x2986c],0x0        # 0x43e080
  414814:	xor    eax,eax
  414816:	test   rbx,rbx
  414819:	je     0x41483b
  41481b:	cmp    BYTE PTR [rbx],0x0
  41481e:	je     0x41483b
  414820:	mov    rcx,rbx
  414823:	call   QWORD PTR [rip+0x2b263]        # 0x43fa8c
  414829:	test   rax,rax
  41482c:	mov    QWORD PTR [rip+0x2984d],rax        # 0x43e080
  414833:	sete   al
  414836:	movzx  eax,al
  414839:	neg    eax
  41483b:	add    rsp,0x20
  41483f:	pop    rbx
  414840:	ret    
  414841:	nop    DWORD PTR [rax+rax*1+0x0]
  414846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414850:	push   rdi
  414851:	push   rbx
  414852:	sub    rsp,0x68
  414856:	test   rcx,rcx
  414859:	mov    rbx,rcx
  41485c:	mov    QWORD PTR [rsp+0x28],0x0
  414865:	je     0x4148c0
  414867:	lea    r8,[rsp+0x30]
  41486c:	xor    eax,eax
  41486e:	mov    ecx,0x6
  414873:	xor    edx,edx
  414875:	lea    r9,[rsp+0x28]
  41487a:	mov    rdi,r8
  41487d:	rep stos QWORD PTR es:[rdi],rax
  414880:	mov    DWORD PTR [rsp+0x38],0x1
  414888:	mov    DWORD PTR [rsp+0x30],0x400
  414890:	mov    rcx,rbx
  414893:	call   QWORD PTR [rip+0x2b473]        # 0x43fd0c
  414899:	test   eax,eax
  41489b:	jne    0x4148b0
  41489d:	mov    rax,QWORD PTR [rsp+0x28]
  4148a2:	add    rsp,0x68
  4148a6:	pop    rbx
  4148a7:	pop    rdi
  4148a8:	ret    
  4148a9:	nop    DWORD PTR [rax+0x0]
  4148b0:	xor    eax,eax
  4148b2:	add    rsp,0x68
  4148b6:	pop    rbx
  4148b7:	pop    rdi
  4148b8:	ret    
  4148b9:	nop    DWORD PTR [rax+0x0]
  4148c0:	lea    rdx,[rip+0x1d003]        # 0x4318ca
  4148c7:	lea    rcx,[rip+0x1d28e]        # 0x431b5c
  4148ce:	mov    r8d,0x3ba
  4148d4:	call   0x4291e0
  4148d9:	jmp    0x414867
  4148db:	nop    DWORD PTR [rax+rax*1+0x0]
  4148e0:	push   rsi
  4148e1:	push   rbx
  4148e2:	sub    rsp,0x28
  4148e6:	test   rcx,rcx
  4148e9:	mov    rsi,rcx
  4148ec:	mov    rbx,rdx
  4148ef:	je     0x414920
  4148f1:	test   rdx,rdx
  4148f4:	je     0x414920
  4148f6:	mov    rcx,rsi
  4148f9:	call   0x414850
  4148fe:	test   rax,rax
  414901:	mov    rsi,rax
  414904:	je     0x41493b
  414906:	mov    rcx,QWORD PTR [rbx]
  414909:	test   rcx,rcx
  41490c:	je     0x414914
  41490e:	call   QWORD PTR [rip+0x2b3f0]        # 0x43fd04
  414914:	mov    QWORD PTR [rbx],rsi
  414917:	xor    eax,eax
  414919:	add    rsp,0x28
  41491d:	pop    rbx
  41491e:	pop    rsi
  41491f:	ret    
  414920:	lea    rdx,[rip+0x1cfa3]        # 0x4318ca
  414927:	lea    rcx,[rip+0x1d242]        # 0x431b70
  41492e:	mov    r8d,0x3cd
  414934:	call   0x4291e0
  414939:	jmp    0x4148f6
  41493b:	mov    eax,0xffffffff
  414940:	jmp    0x414919
  414942:	nop    DWORD PTR [rax+0x0]
  414946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414950:	push   r15
  414952:	push   r14
  414954:	push   r13
  414956:	push   r12
  414958:	push   rbp
  414959:	push   rdi
  41495a:	push   rsi
  41495b:	push   rbx
  41495c:	sub    rsp,0x468
  414963:	mov    r15,QWORD PTR [rip+0x24246]        # 0x438bb0
  41496a:	mov    QWORD PTR [rsp+0x4b0],rcx
  414972:	mov    rsi,rdx
  414975:	mov    rbx,r8
  414978:	mov    QWORD PTR [rsp+0x4c8],r9
  414980:	mov    BYTE PTR [rsp+0x60],0x0
  414985:	mov    ebp,DWORD PTR [r15]
  414988:	mov    BYTE PTR [rsp+0x160],0x0
  414990:	mov    BYTE PTR [rsp+0x260],0x0
  414998:	mov    BYTE PTR [rsp+0x360],0x0
  4149a0:	test   ebp,ebp
  4149a2:	jne    0x414d20
  4149a8:	mov    rcx,rsi
  4149ab:	call   0x429490
  4149b0:	mov    rcx,rbx
  4149b3:	mov    rbp,rax
  4149b6:	call   0x429490
  4149bb:	lea    rcx,[rbp+rax*1+0xa]
  4149c0:	call   0x429538
  4149c5:	test   rax,rax
  4149c8:	mov    r13,rax
  4149cb:	je     0x414c13
  4149d1:	cmp    BYTE PTR [rbx],0x0
  4149d4:	je     0x414b60
  4149da:	cmp    BYTE PTR [rsi],0x0
  4149dd:	jne    0x414d01
  4149e3:	mov    BYTE PTR [rax],0x0
  4149e6:	mov    rdx,rbx
  4149e9:	mov    rcx,r13
  4149ec:	call   0x4294c0
  4149f1:	lea    rdx,[rip+0x1cf24]        # 0x43191c
  4149f8:	mov    rcx,r13
  4149fb:	call   0x4295a0
  414a00:	test   rax,rax
  414a03:	mov    rbp,rax
  414a06:	je     0x414c00
  414a0c:	mov    ebx,DWORD PTR [r15]
  414a0f:	test   ebx,ebx
  414a11:	jne    0x414d4f
  414a17:	lea    rax,[rsp+0x360]
  414a1f:	mov    r12,QWORD PTR [rip+0x2b136]        # 0x43fb5c
  414a26:	lea    rbx,[rsp+0x60]
  414a2b:	lea    r14,[rsp+0x58]
  414a30:	mov    DWORD PTR [rsp+0x48],0x0
  414a38:	xor    esi,esi
  414a3a:	mov    QWORD PTR [rsp+0x40],rax
  414a3f:	lea    rax,[rsp+0x160]
  414a47:	mov    QWORD PTR [rsp+0x30],rax
  414a4c:	lea    rax,[rsp+0x260]
  414a54:	mov    QWORD PTR [rsp+0x38],rax
  414a59:	nop    DWORD PTR [rax+0x0]
  414a60:	mov    r8,rbp
  414a63:	mov    edx,0xfe
  414a68:	mov    rcx,rbx
  414a6b:	call   0x4295a8
  414a70:	test   rax,rax
  414a73:	je     0x414bd0
  414a79:	movzx  ecx,BYTE PTR [rsp+0x60]
  414a7e:	cmp    cl,0x23
  414a81:	je     0x414a60
  414a83:	call   r12
  414a86:	test   eax,eax
  414a88:	je     0x414b70
  414a8e:	test   esi,esi
  414a90:	je     0x414a60
  414a92:	lea    rdx,[rip+0x1d150]        # 0x431be9
  414a99:	mov    r8,r14
  414a9c:	mov    rcx,rbx
  414a9f:	call   0x4292a0
  414aa4:	test   rax,rax
  414aa7:	je     0x414d45
  414aad:	lea    rdi,[rip+0x1d15f]        # 0x431c13
  414ab4:	mov    rsi,rax
  414ab7:	mov    ecx,0x6
  414abc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  414abe:	mov    esi,0x1
  414ac3:	seta   dl
  414ac6:	setb   al
  414ac9:	cmp    dl,al
  414acb:	jne    0x414a60
  414acd:	lea    rdx,[rip+0x1d115]        # 0x431be9
  414ad4:	xor    ecx,ecx
  414ad6:	mov    r8,r14
  414ad9:	lea    rdi,[rip+0x1d139]        # 0x431c19
  414ae0:	call   0x4292a0
  414ae5:	mov    ecx,0x4
  414aea:	mov    rsi,rax
  414aed:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  414aef:	jne    0x414d8c
  414af5:	mov    r10d,DWORD PTR [r15]
  414af8:	test   r10d,r10d
  414afb:	jne    0x414eff
  414b01:	lea    rdx,[rip+0x1d0e1]        # 0x431be9
  414b08:	xor    ecx,ecx
  414b0a:	mov    r8,r14
  414b0d:	call   0x4292a0
  414b12:	lea    rdx,[rip+0x1d0d0]        # 0x431be9
  414b19:	xor    ecx,ecx
  414b1b:	mov    r8,r14
  414b1e:	call   0x4292a0
  414b23:	lea    rdx,[rip+0x1d0bf]        # 0x431be9
  414b2a:	xor    ecx,ecx
  414b2c:	mov    r8,r14
  414b2f:	call   0x4292a0
  414b34:	mov    rcx,rax
  414b37:	mov    rsi,rax
  414b3a:	call   0x429490
  414b3f:	cmp    rax,0x11
  414b43:	ja     0x414e04
  414b49:	mov    DWORD PTR [rsp+0x48],0x1
  414b51:	mov    esi,0x1
  414b56:	jmp    0x414a60
  414b5b:	nop    DWORD PTR [rax+rax*1+0x0]
  414b60:	mov    BYTE PTR [rax],0x0
  414b63:	jmp    0x4149f1
  414b68:	nop    DWORD PTR [rax+rax*1+0x0]
  414b70:	lea    rdx,[rip+0x1d072]        # 0x431be9
  414b77:	mov    r8,r14
  414b7a:	mov    rcx,rbx
  414b7d:	xor    esi,esi
  414b7f:	call   0x4292a0
  414b84:	mov    rdx,QWORD PTR [rsp+0x4c8]
  414b8c:	mov    rcx,rax
  414b8f:	call   0x4294b0
  414b94:	test   eax,eax
  414b96:	jne    0x414a60
  414b9c:	mov    r11d,DWORD PTR [r15]
  414b9f:	mov    sil,0x1
  414ba2:	test   r11d,r11d
  414ba5:	je     0x414a60
  414bab:	mov    r9,QWORD PTR [rsp+0x4c8]
  414bb3:	lea    r8,[rip+0x1d036]        # 0x431bf0
  414bba:	lea    rcx,[rip+0x1cd09]        # 0x4318ca
  414bc1:	mov    edx,0x43d5
  414bc6:	call   0x423fa0
  414bcb:	jmp    0x414a60
  414bd0:	mov    rcx,rbp
  414bd3:	call   0x4295b8
  414bd8:	mov    rcx,r13
  414bdb:	call   0x429580
  414be0:	mov    ecx,DWORD PTR [rsp+0x48]
  414be4:	test   ecx,ecx
  414be6:	jne    0x414c20
  414be8:	mov    eax,DWORD PTR [rsp+0x48]
  414bec:	add    rsp,0x468
  414bf3:	pop    rbx
  414bf4:	pop    rsi
  414bf5:	pop    rdi
  414bf6:	pop    rbp
  414bf7:	pop    r12
  414bf9:	pop    r13
  414bfb:	pop    r14
  414bfd:	pop    r15
  414bff:	ret    
  414c00:	mov    esi,DWORD PTR [r15]
  414c03:	test   esi,esi
  414c05:	jne    0x414ebf
  414c0b:	mov    rcx,r13
  414c0e:	call   0x429580
  414c13:	xor    eax,eax
  414c15:	jmp    0x414bec
  414c17:	nop    WORD PTR [rax+rax*1+0x0]
  414c20:	mov    rax,QWORD PTR [rsp+0x4b0]
  414c28:	lea    rsi,[rsp+0x160]
  414c30:	mov    rcx,rsi
  414c33:	lea    rdx,[rax+0xc8]
  414c3a:	call   0x4148e0
  414c3f:	test   eax,eax
  414c41:	js     0x414cc0
  414c43:	mov    rax,QWORD PTR [rsp+0x4b0]
  414c4b:	mov    rdx,rsi
  414c4e:	lea    rcx,[rax+0x38]
  414c52:	call   0x41f8a0
  414c57:	test   rax,rax
  414c5a:	je     0x414c13
  414c5c:	mov    rax,QWORD PTR [rsp+0x4b0]
  414c64:	mov    rsi,QWORD PTR [rax+0xc8]
  414c6b:	test   rsi,rsi
  414c6e:	je     0x414ccb
  414c70:	mov    rdi,rax
  414c73:	jmp    0x414c7e
  414c75:	mov    rsi,QWORD PTR [rsi+0x28]
  414c79:	test   rsi,rsi
  414c7c:	je     0x414ccb
  414c7e:	mov    edx,DWORD PTR [r15]
  414c81:	test   edx,edx
  414c83:	je     0x414c75
  414c85:	mov    rcx,QWORD PTR [rdi+0xc8]
  414c8c:	mov    rdx,rbx
  414c8f:	mov    r8d,0xff
  414c95:	call   0x421a80
  414c9a:	lea    r8,[rip+0x1cfc6]        # 0x431c67
  414ca1:	lea    rcx,[rip+0x1cc22]        # 0x4318ca
  414ca8:	mov    r9,rax
  414cab:	mov    edx,0x46a5
  414cb0:	call   0x423fa0
  414cb5:	jmp    0x414c75
  414cb7:	nop    WORD PTR [rax+rax*1+0x0]
  414cc0:	mov    eax,DWORD PTR [r15]
  414cc3:	test   eax,eax
  414cc5:	jne    0x414edf
  414ccb:	cmp    BYTE PTR [rsp+0x260],0x0
  414cd3:	jne    0x414d6f
  414cd9:	cmp    BYTE PTR [rsp+0x360],0x0
  414ce1:	je     0x414be8
  414ce7:	mov    rdx,QWORD PTR [rsp+0x4b0]
  414cef:	lea    rcx,[rsp+0x360]
  414cf7:	call   0x414710
  414cfc:	jmp    0x414be8
  414d01:	mov    r8,rbp
  414d04:	mov    rdx,rsi
  414d07:	mov    rcx,rax
  414d0a:	mov    edi,0x5c
  414d0f:	call   0x429528
  414d14:	mov    WORD PTR [r13+rbp*1+0x0],di
  414d1a:	jmp    0x4149e6
  414d1f:	nop
  414d20:	mov    QWORD PTR [rsp+0x20],r8
  414d25:	lea    rcx,[rip+0x1cb9e]        # 0x4318ca
  414d2c:	lea    r8,[rip+0x1ce65]        # 0x431b98
  414d33:	mov    r9,rdx
  414d36:	mov    edx,0x4165
  414d3b:	call   0x423fa0
  414d40:	jmp    0x4149a8
  414d45:	mov    esi,0x1
  414d4a:	jmp    0x414a60
  414d4f:	lea    r8,[rip+0x1ce77]        # 0x431bcd
  414d56:	lea    rcx,[rip+0x1cb6d]        # 0x4318ca
  414d5d:	mov    r9,r13
  414d60:	mov    edx,0x4335
  414d65:	call   0x423fa0
  414d6a:	jmp    0x414a17
  414d6f:	lea    rcx,[rsp+0x260]
  414d77:	call   0x413e80
  414d7c:	mov    rdi,QWORD PTR [rsp+0x4b0]
  414d84:	mov    DWORD PTR [rdi+0x8],eax
  414d87:	jmp    0x414cd9
  414d8c:	lea    rdx,[rip+0x1ce56]        # 0x431be9
  414d93:	mov    r8,r14
  414d96:	xor    ecx,ecx
  414d98:	call   0x4292a0
  414d9d:	mov    rcx,QWORD PTR [rsp+0x40]
  414da2:	mov    rdx,rax
  414da5:	call   0x4294a8
  414daa:	lea    rdx,[rip+0x1ce38]        # 0x431be9
  414db1:	mov    r8,r14
  414db4:	xor    ecx,ecx
  414db6:	call   0x4292a0
  414dbb:	mov    rcx,QWORD PTR [rsp+0x30]
  414dc0:	mov    rdx,rax
  414dc3:	call   0x4294a8
  414dc8:	mov    r8d,DWORD PTR [r15]
  414dcb:	test   r8d,r8d
  414dce:	jne    0x414f1c
  414dd4:	lea    rdx,[rip+0x1ce0e]        # 0x431be9
  414ddb:	mov    r8,r14
  414dde:	xor    ecx,ecx
  414de0:	mov    esi,0x1
  414de5:	call   0x4292a0
  414dea:	mov    rcx,QWORD PTR [rsp+0x38]
  414def:	mov    rdx,rax
  414df2:	call   0x4294a8
  414df7:	mov    DWORD PTR [rsp+0x48],0x1
  414dff:	jmp    0x414a60
  414e04:	lea    rcx,[rsi+0x6]
  414e08:	call   0x413eb0
  414e0d:	lea    rcx,[rsi+0x8]
  414e11:	mov    edi,eax
  414e13:	shl    edi,0x8
  414e16:	call   0x413eb0
  414e1b:	mov    rcx,QWORD PTR [rsp+0x38]
  414e20:	lea    rdx,[rip+0x1ce04]        # 0x431c2b
  414e27:	mov    r8d,edi
  414e2a:	add    r8d,eax
  414e2d:	call   0x4294c8
  414e32:	lea    rcx,[rsi+0x10]
  414e36:	call   0x413eb0
  414e3b:	lea    rcx,[rsi+0xe]
  414e3f:	mov    DWORD PTR [rsp+0x4c],eax
  414e43:	call   0x413eb0
  414e48:	lea    rcx,[rsi+0xc]
  414e4c:	mov    edi,eax
  414e4e:	call   0x413eb0
  414e53:	lea    rcx,[rsi+0xa]
  414e57:	mov    DWORD PTR [rsp+0x48],eax
  414e5b:	call   0x413eb0
  414e60:	mov    r9d,DWORD PTR [rsp+0x4c]
  414e65:	mov    rcx,QWORD PTR [rsp+0x30]
  414e6a:	lea    rdx,[rip+0x1cdbd]        # 0x431c2e
  414e71:	mov    r8d,eax
  414e74:	mov    DWORD PTR [rsp+0x20],edi
  414e78:	mov    DWORD PTR [rsp+0x28],r9d
  414e7d:	mov    r9d,DWORD PTR [rsp+0x48]
  414e82:	call   0x4294c8
  414e87:	mov    r9d,DWORD PTR [r15]
  414e8a:	test   r9d,r9d
  414e8d:	je     0x414b49
  414e93:	mov    rax,QWORD PTR [rsp+0x30]
  414e98:	mov    r9,QWORD PTR [rsp+0x38]
  414e9d:	lea    r8,[rip+0x1cd96]        # 0x431c3a
  414ea4:	lea    rcx,[rip+0x1ca1f]        # 0x4318ca
  414eab:	mov    edx,0x44d5
  414eb0:	mov    QWORD PTR [rsp+0x20],rax
  414eb5:	call   0x423fa0
  414eba:	jmp    0x414b49
  414ebf:	lea    r8,[rip+0x1ccf4]        # 0x431bba
  414ec6:	lea    rcx,[rip+0x1c9fd]        # 0x4318ca
  414ecd:	mov    r9,r13
  414ed0:	mov    edx,0x42f5
  414ed5:	call   0x423fa0
  414eda:	jmp    0x414c0b
  414edf:	lea    r8,[rip+0x1cd9a]        # 0x431c80
  414ee6:	lea    rcx,[rip+0x1c9dd]        # 0x4318ca
  414eed:	mov    r9,rsi
  414ef0:	mov    edx,0x46e3
  414ef5:	call   0x423fa0
  414efa:	jmp    0x414ccb
  414eff:	lea    r8,[rip+0x1cd17]        # 0x431c1d
  414f06:	lea    rcx,[rip+0x1c9bd]        # 0x4318ca
  414f0d:	mov    edx,0x4455
  414f12:	call   0x423fa0
  414f17:	jmp    0x414b01
  414f1c:	mov    r9,QWORD PTR [rsp+0x30]
  414f21:	lea    r8,[rip+0x1cd2f]        # 0x431c57
  414f28:	lea    rcx,[rip+0x1c99b]        # 0x4318ca
  414f2f:	mov    edx,0x4545
  414f34:	call   0x423fa0
  414f39:	jmp    0x414dd4
  414f3e:	xchg   ax,ax
  414f40:	push   rbp
  414f41:	push   rdi
  414f42:	push   rsi
  414f43:	push   rbx
  414f44:	sub    rsp,0xb8
  414f4b:	mov    rbx,rcx
  414f4e:	lea    rcx,[rip+0x1cd56]        # 0x431cab
  414f55:	call   0x429560
  414f5a:	test   rax,rax
  414f5d:	mov    rdi,rax
  414f60:	je     0x414f80
  414f62:	mov    rdx,rbx
  414f65:	mov    rcx,rax
  414f68:	call   0x414710
  414f6d:	mov    rsi,QWORD PTR [rip+0x23c3c]        # 0x438bb0
  414f74:	mov    r9d,DWORD PTR [rsi]
  414f77:	test   r9d,r9d
  414f7a:	jne    0x415180
  414f80:	lea    rcx,[rip+0x1cd58]        # 0x431cdf
  414f87:	call   0x429560
  414f8c:	test   rax,rax
  414f8f:	je     0x414fe0
  414f91:	cmp    BYTE PTR [rax],0x0
  414f94:	jne    0x4150e0
  414f9a:	call   QWORD PTR [rip+0x2a954]        # 0x43f8f4
  414fa0:	lea    rcx,[rsp+0x30]
  414fa5:	lea    rdx,[rip+0x1d694]        # 0x432640
  414fac:	mov    r8d,eax
  414faf:	call   0x429330
  414fb4:	test   eax,eax
  414fb6:	js     0x414fe0
  414fb8:	mov    rdx,QWORD PTR [rsp+0x30]
  414fbd:	lea    rcx,[rbx+0xe0]
  414fc4:	call   0x41f8d0
  414fc9:	test   rax,rax
  414fcc:	jne    0x4150f8
  414fd2:	mov    rcx,QWORD PTR [rsp+0x30]
  414fd7:	call   0x429580
  414fdc:	nop    DWORD PTR [rax+0x0]
  414fe0:	lea    rcx,[rip+0x1cd2d]        # 0x431d14
  414fe7:	call   0x429560
  414fec:	test   rax,rax
  414fef:	mov    rdi,rax
  414ff2:	je     0x41501c
  414ff4:	mov    rcx,rax
  414ff7:	call   0x413e80
  414ffc:	lea    rcx,[rbx+0xd8]
  415003:	mov    DWORD PTR [rbx+0x8],eax
  415006:	call   0x41f7e0
  41500b:	mov    rsi,QWORD PTR [rip+0x23b9e]        # 0x438bb0
  415012:	mov    ecx,DWORD PTR [rsi]
  415014:	test   ecx,ecx
  415016:	jne    0x415160
  41501c:	lea    rcx,[rip+0x1cd22]        # 0x431d45
  415023:	call   0x429560
  415028:	test   rax,rax
  41502b:	mov    rdi,rax
  41502e:	je     0x4150d0
  415034:	lea    rdx,[rbx+0xc8]
  41503b:	mov    rcx,rax
  41503e:	call   0x4148e0
  415043:	test   eax,eax
  415045:	js     0x415133
  41504b:	lea    rcx,[rbx+0x38]
  41504f:	mov    rdx,rdi
  415052:	call   0x41f8a0
  415057:	test   rax,rax
  41505a:	je     0x4150d0
  41505c:	mov    rbx,QWORD PTR [rbx+0xc8]
  415063:	test   rbx,rbx
  415066:	je     0x4150d0
  415068:	mov    rsi,QWORD PTR [rip+0x23b41]        # 0x438bb0
  41506f:	lea    rbp,[rsp+0x30]
  415074:	jmp    0x415089
  415076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415080:	mov    rbx,QWORD PTR [rbx+0x28]
  415084:	test   rbx,rbx
  415087:	je     0x4150d0
  415089:	mov    eax,DWORD PTR [rsi]
  41508b:	test   eax,eax
  41508d:	je     0x415080
  41508f:	mov    rcx,rbx
  415092:	mov    r8d,0x80
  415098:	mov    rdx,rbp
  41509b:	call   0x421a80
  4150a0:	lea    r8,[rip+0x1ccd9]        # 0x431d80
  4150a7:	lea    rcx,[rip+0x1c81c]        # 0x4318ca
  4150ae:	mov    r9,rax
  4150b1:	mov    QWORD PTR [rsp+0x20],rdi
  4150b6:	mov    edx,0x3495
  4150bb:	call   0x423fa0
  4150c0:	mov    rbx,QWORD PTR [rbx+0x28]
  4150c4:	test   rbx,rbx
  4150c7:	jne    0x415089
  4150c9:	nop    DWORD PTR [rax+0x0]
  4150d0:	add    rsp,0xb8
  4150d7:	pop    rbx
  4150d8:	pop    rsi
  4150d9:	pop    rdi
  4150da:	pop    rbp
  4150db:	ret    
  4150dc:	nop    DWORD PTR [rax+0x0]
  4150e0:	lea    rcx,[rbx+0xe0]
  4150e7:	mov    rdx,rax
  4150ea:	call   0x41f8a0
  4150ef:	test   rax,rax
  4150f2:	je     0x414fe0
  4150f8:	mov    rsi,QWORD PTR [rip+0x23ab1]        # 0x438bb0
  4150ff:	mov    r8d,DWORD PTR [rsi]
  415102:	test   r8d,r8d
  415105:	je     0x414fe0
  41510b:	mov    r9,QWORD PTR [rbx+0xe0]
  415112:	lea    r8,[rip+0x1cbcf]        # 0x431ce8
  415119:	lea    rcx,[rip+0x1c7aa]        # 0x4318ca
  415120:	mov    edx,0x3195
  415125:	add    r9,0x8
  415129:	call   0x423fa0
  41512e:	jmp    0x414fe0
  415133:	mov    rax,QWORD PTR [rip+0x23a76]        # 0x438bb0
  41513a:	mov    edx,DWORD PTR [rax]
  41513c:	test   edx,edx
  41513e:	je     0x4150d0
  415140:	lea    r8,[rip+0x1cc09]        # 0x431d50
  415147:	lea    rcx,[rip+0x1c77c]        # 0x4318ca
  41514e:	mov    r9,rdi
  415151:	mov    edx,0x3423
  415156:	call   0x423fa0
  41515b:	jmp    0x4150d0
  415160:	lea    r8,[rip+0x1cbb9]        # 0x431d20
  415167:	lea    rcx,[rip+0x1c75c]        # 0x4318ca
  41516e:	mov    r9,rdi
  415171:	mov    edx,0x3255
  415176:	call   0x423fa0
  41517b:	jmp    0x41501c
  415180:	test   rax,rax
  415183:	lea    r9,[rip+0x1cb1b]        # 0x431ca5
  41518a:	lea    rax,[rip+0x1cb15]        # 0x431ca6
  415191:	lea    r8,[rip+0x1cb20]        # 0x431cb8
  415198:	lea    rcx,[rip+0x1c72b]        # 0x4318ca
  41519f:	mov    QWORD PTR [rsp+0x20],rdi
  4151a4:	cmove  r9,rax
  4151a8:	mov    edx,0x3305
  4151ad:	call   0x423fa0
  4151b2:	jmp    0x414f80
  4151b7:	nop    WORD PTR [rax+rax*1+0x0]
  4151c0:	push   r15
  4151c2:	push   r14
  4151c4:	push   r13
  4151c6:	push   r12
  4151c8:	push   rbp
  4151c9:	push   rdi
  4151ca:	push   rsi
  4151cb:	push   rbx
  4151cc:	sub    rsp,0xd8
  4151d3:	mov    r13,rcx
  4151d6:	xor    ecx,ecx
  4151d8:	mov    rbx,rdx
  4151db:	mov    rdi,r8
  4151de:	call   0x4021e0
  4151e3:	test   rax,rax
  4151e6:	mov    rsi,rax
  4151e9:	je     0x4155e0
  4151ef:	mov    rdx,rdi
  4151f2:	mov    rcx,rax
  4151f5:	call   0x402020
  4151fa:	test   rax,rax
  4151fd:	je     0x4155e0
  415203:	lea    rcx,[rip+0x1cbab]        # 0x431db5
  41520a:	call   0x429560
  41520f:	test   rax,rax
  415212:	je     0x415830
  415218:	cmp    BYTE PTR [rax],0x0
  41521b:	jne    0x415543
  415221:	call   QWORD PTR [rip+0x2a6cd]        # 0x43f8f4
  415227:	lea    rcx,[rsp+0x48]
  41522c:	lea    rdx,[rip+0x1d44d]        # 0x432680
  415233:	mov    r8d,eax
  415236:	call   0x429330
  41523b:	test   eax,eax
  41523d:	js     0x415830
  415243:	mov    rcx,QWORD PTR [rsp+0x48]
  415248:	xor    r12d,r12d
  41524b:	cmp    BYTE PTR [rcx],0x0
  41524e:	jne    0x415b50
  415254:	call   0x429580
  415259:	mov    rbp,QWORD PTR [rip+0x23950]        # 0x438bb0
  415260:	mov    r14d,DWORD PTR [rbp+0x0]
  415264:	test   r14d,r14d
  415267:	jne    0x415b02
  41526d:	mov    rax,QWORD PTR [rbx]
  415270:	mov    rcx,rsi
  415273:	lea    rdx,[rax+0x8]
  415277:	call   0x414530
  41527c:	test   eax,eax
  41527e:	je     0x4155f0
  415284:	mov    rcx,rsi
  415287:	mov    rdi,rbx
  41528a:	call   0x414f40
  41528f:	mov    rax,QWORD PTR [rbx]
  415292:	cmp    QWORD PTR [rax],0x0
  415296:	jne    0x4157b0
  41529c:	movzx  eax,WORD PTR [rbx+0xc]
  4152a0:	test   ax,ax
  4152a3:	je     0x4152b2
  4152a5:	test   rdi,rdi
  4152a8:	mov    WORD PTR [rsi+0xc],ax
  4152ac:	je     0x4157d4
  4152b2:	mov    rax,QWORD PTR [rbx+0x18]
  4152b6:	cmp    QWORD PTR [rax],0x0
  4152ba:	jne    0x415910
  4152c0:	mov    rax,QWORD PTR [rbx+0x20]
  4152c4:	cmp    QWORD PTR [rax],0x0
  4152c8:	jne    0x415937
  4152ce:	mov    rax,QWORD PTR [rbx+0xb8]
  4152d5:	cmp    QWORD PTR [rax],0x0
  4152d9:	jne    0x415961
  4152df:	movzx  eax,BYTE PTR [rbx+0xf4]
  4152e6:	test   al,al
  4152e8:	js     0x415308
  4152ea:	movzx  edx,BYTE PTR [rsi+0xf4]
  4152f1:	and    eax,0xffffff80
  4152f4:	and    edx,0x7f
  4152f7:	or     eax,edx
  4152f9:	test   rdi,rdi
  4152fc:	mov    BYTE PTR [rsi+0xf4],al
  415302:	je     0x41599a
  415308:	mov    rax,QWORD PTR [rbx+0xc0]
  41530f:	cmp    QWORD PTR [rax],0x0
  415313:	jne    0x415a10
  415319:	mov    rax,QWORD PTR [rbx+0x30]
  41531d:	cmp    QWORD PTR [rax],0x0
  415321:	jne    0x4159f0
  415327:	mov    rax,QWORD PTR [rbx+0x68]
  41532b:	cmp    QWORD PTR [rax],0x0
  41532f:	jne    0x4159d0
  415335:	mov    rax,QWORD PTR [rbx+0x70]
  415339:	cmp    QWORD PTR [rax],0x0
  41533d:	jne    0x4159b0
  415343:	mov    rax,QWORD PTR [rbx+0x78]
  415347:	cmp    QWORD PTR [rax],0x0
  41534b:	jne    0x4158e0
  415351:	mov    rax,QWORD PTR [rbx+0x88]
  415358:	cmp    QWORD PTR [rax],0x0
  41535c:	jne    0x4158c0
  415362:	movzx  edx,BYTE PTR [rbx+0xf4]
  415369:	movzx  eax,BYTE PTR [rbx+0x90]
  415370:	test   al,al
  415372:	je     0x41537a
  415374:	mov    BYTE PTR [rsi+0x90],al
  41537a:	test   dl,0x2
  41537d:	je     0x41538d
  41537f:	or     BYTE PTR [rsi+0xf4],0x2
  415386:	movzx  edx,BYTE PTR [rbx+0xf4]
  41538d:	and    edx,0x1
  415390:	je     0x415399
  415392:	or     BYTE PTR [rsi+0xf4],0x1
  415399:	mov    eax,DWORD PTR [rbx+0x10]
  41539c:	test   eax,eax
  41539e:	je     0x4153a3
  4153a0:	mov    DWORD PTR [rsi+0x10],eax
  4153a3:	mov    eax,DWORD PTR [rbx+0x8]
  4153a6:	test   eax,eax
  4153a8:	je     0x4153ad
  4153aa:	mov    DWORD PTR [rsi+0x8],eax
  4153ad:	mov    eax,DWORD PTR [rbx+0x28]
  4153b0:	test   eax,eax
  4153b2:	je     0x4153b7
  4153b4:	mov    DWORD PTR [rsi+0x28],eax
  4153b7:	mov    eax,DWORD PTR [rbx+0x94]
  4153bd:	test   eax,eax
  4153bf:	je     0x4153c7
  4153c1:	mov    DWORD PTR [rsi+0x94],eax
  4153c7:	movzx  eax,BYTE PTR [rbx+0xf5]
  4153ce:	test   al,0x4
  4153d0:	jne    0x4153e7
  4153d2:	movzx  edx,BYTE PTR [rsi+0xf5]
  4153d9:	and    eax,0x4
  4153dc:	and    edx,0xfffffffb
  4153df:	or     eax,edx
  4153e1:	mov    BYTE PTR [rsi+0xf5],al
  4153e7:	test   rdi,rdi
  4153ea:	je     0x415aa0
  4153f0:	mov    rax,QWORD PTR [rbx+0x50]
  4153f4:	cmp    QWORD PTR [rax],0x0
  4153f8:	jne    0x415553
  4153fe:	mov    rax,QWORD PTR [rbx+0x98]
  415405:	movzx  edx,BYTE PTR [rbx+0xf5]
  41540c:	mov    QWORD PTR [rsi+0x98],rax
  415413:	mov    rax,QWORD PTR [rbx+0xa0]
  41541a:	test   dl,0x8
  41541d:	mov    QWORD PTR [rsi+0xa0],rax
  415424:	mov    rax,QWORD PTR [rbx+0xa8]
  41542b:	mov    QWORD PTR [rsi+0xa8],rax
  415432:	mov    rax,QWORD PTR [rbx+0xb0]
  415439:	mov    QWORD PTR [rsi+0xb0],rax
  415440:	jne    0x4155ab
  415446:	movzx  eax,BYTE PTR [rsi+0xf5]
  41544d:	and    edx,0x1
  415450:	and    eax,0xfffffffe
  415453:	or     eax,edx
  415455:	mov    BYTE PTR [rsi+0xf5],al
  41545b:	nop    DWORD PTR [rax+rax*1+0x0]
  415460:	lea    rdx,[rbx+0x80]
  415467:	lea    rcx,[rsi+0x80]
  41546e:	call   0x41f900
  415473:	test   rax,rax
  415476:	je     0x4155e0
  41547c:	test   r12d,r12d
  41547f:	je     0x41551b
  415485:	mov    eax,DWORD PTR [rbp+0x0]
  415488:	test   eax,eax
  41548a:	jne    0x416290
  415490:	mov    rbx,QWORD PTR [rsi+0xc8]
  415497:	test   rbx,rbx
  41549a:	je     0x415ba0
  4154a0:	lea    rdi,[rsp+0x50]
  4154a5:	jmp    0x4154b9
  4154a7:	nop    WORD PTR [rax+rax*1+0x0]
  4154b0:	mov    rbx,QWORD PTR [rbx+0x28]
  4154b4:	test   rbx,rbx
  4154b7:	je     0x415500
  4154b9:	test   eax,eax
  4154bb:	je     0x4154b0
  4154bd:	mov    rcx,rbx
  4154c0:	mov    r8d,0x80
  4154c6:	mov    rdx,rdi
  4154c9:	call   0x421a80
  4154ce:	lea    r9,[rip+0x1cb5e]        # 0x432033
  4154d5:	lea    r8,[rip+0x1cb3a]        # 0x432016
  4154dc:	lea    rcx,[rip+0x1c3e7]        # 0x4318ca
  4154e3:	mov    QWORD PTR [rsp+0x20],rax
  4154e8:	mov    edx,0xda5
  4154ed:	call   0x423fa0
  4154f2:	mov    rbx,QWORD PTR [rbx+0x28]
  4154f6:	mov    eax,DWORD PTR [rbp+0x0]
  4154f9:	test   rbx,rbx
  4154fc:	jne    0x4154b9
  4154fe:	xchg   ax,ax
  415500:	cmp    QWORD PTR [rsi+0xc8],0x0
  415508:	je     0x415ba0
  41550e:	test   eax,eax
  415510:	jne    0x415c08
  415516:	call   0x423c40
  41551b:	mov    rdx,QWORD PTR [rsi+0xe0]
  415522:	mov    rax,rsi
  415525:	cmp    QWORD PTR [rdx],0x0
  415529:	jne    0x4157f0
  41552f:	add    rsp,0xd8
  415536:	pop    rbx
  415537:	pop    rsi
  415538:	pop    rdi
  415539:	pop    rbp
  41553a:	pop    r12
  41553c:	pop    r13
  41553e:	pop    r14
  415540:	pop    r15
  415542:	ret    
  415543:	mov    rcx,rax
  415546:	call   0x4240b0
  41554b:	mov    r12d,eax
  41554e:	jmp    0x415259
  415553:	lea    rdx,[rbx+0x50]
  415557:	lea    rcx,[rsi+0x50]
  41555b:	call   0x41f900
  415560:	mov    rdi,rax
  415563:	mov    rax,QWORD PTR [rbx+0x98]
  41556a:	movzx  edx,BYTE PTR [rbx+0xf5]
  415571:	mov    QWORD PTR [rsi+0x98],rax
  415578:	mov    rax,QWORD PTR [rbx+0xa0]
  41557f:	test   dl,0x8
  415582:	mov    QWORD PTR [rsi+0xa0],rax
  415589:	mov    rax,QWORD PTR [rbx+0xa8]
  415590:	mov    QWORD PTR [rsi+0xa8],rax
  415597:	mov    rax,QWORD PTR [rbx+0xb0]
  41559e:	mov    QWORD PTR [rsi+0xb0],rax
  4155a5:	je     0x415a40
  4155ab:	movzx  ecx,BYTE PTR [rsi+0xf5]
  4155b2:	mov    eax,edx
  4155b4:	and    eax,0x8
  4155b7:	and    ecx,0xfffffff7
  4155ba:	or     ecx,eax
  4155bc:	mov    BYTE PTR [rsi+0xf5],cl
  4155c2:	movzx  edx,BYTE PTR [rbx+0xf5]
  4155c9:	and    edx,0x1
  4155cc:	and    ecx,0xfffffffe
  4155cf:	or     edx,ecx
  4155d1:	test   rdi,rdi
  4155d4:	mov    BYTE PTR [rsi+0xf5],dl
  4155da:	jne    0x415460
  4155e0:	mov    rcx,rsi
  4155e3:	call   0x4023f0
  4155e8:	xor    eax,eax
  4155ea:	jmp    0x41552f
  4155ef:	nop
  4155f0:	mov    rdx,rbx
  4155f3:	mov    rcx,rsi
  4155f6:	call   0x413d30
  4155fb:	test   eax,eax
  4155fd:	jne    0x415a50
  415603:	mov    edx,DWORD PTR [rbp+0x0]
  415606:	test   edx,edx
  415608:	jne    0x415beb
  41560e:	mov    rax,QWORD PTR [rbx]
  415611:	mov    rdi,rax
  415614:	add    rdi,0x8
  415618:	je     0x415624
  41561a:	cmp    BYTE PTR [rax+0x8],0x0
  41561e:	jne    0x415853
  415624:	lea    rcx,[rip+0x1c824]        # 0x431e4f
  41562b:	call   0x429560
  415630:	test   rax,rax
  415633:	mov    rdi,rax
  415636:	je     0x41631d
  41563c:	cmp    BYTE PTR [rax],0x0
  41563f:	lea    rax,[rip+0x1c768]        # 0x431dae
  415646:	cmove  rdi,rax
  41564a:	mov    r11d,DWORD PTR [rbp+0x0]
  41564e:	test   r11d,r11d
  415651:	jne    0x415838
  415657:	mov    r8,QWORD PTR [rip+0x28a22]        # 0x43e080
  41565e:	test   r8,r8
  415661:	je     0x41567d
  415663:	lea    rdx,[rip+0x1c63b]        # 0x431ca5
  41566a:	mov    r9,rdi
  41566d:	mov    rcx,rsi
  415670:	call   0x414950
  415675:	test   eax,eax
  415677:	jne    0x415284
  41567d:	lea    rcx,[rip+0x1c83c]        # 0x431ec0
  415684:	call   0x413e20
  415689:	test   rax,rax
  41568c:	mov    r14,rax
  41568f:	je     0x4156c5
  415691:	mov    ecx,DWORD PTR [rbp+0x0]
  415694:	test   ecx,ecx
  415696:	jne    0x416417
  41569c:	lea    rdx,[rip+0x1c602]        # 0x431ca5
  4156a3:	mov    r9,rdi
  4156a6:	mov    r8,r14
  4156a9:	mov    rcx,rsi
  4156ac:	call   0x414950
  4156b1:	mov    rcx,r14
  4156b4:	mov    r15d,eax
  4156b7:	call   0x429580
  4156bc:	test   r15d,r15d
  4156bf:	jne    0x415284
  4156c5:	lea    rcx,[rip+0x1c6e2]        # 0x431dae
  4156cc:	call   0x429560
  4156d1:	test   rax,rax
  4156d4:	je     0x4163c1
  4156da:	cmp    BYTE PTR [rax],0x0
  4156dd:	lea    rdx,[rip+0x1cf4c]        # 0x432630
  4156e4:	cmove  rax,rdx
  4156e8:	mov    edx,DWORD PTR [rbp+0x0]
  4156eb:	test   edx,edx
  4156ed:	jne    0x4163ed
  4156f3:	lea    r8,[rip+0x1c814]        # 0x431f0e
  4156fa:	mov    r9,rdi
  4156fd:	mov    rdx,rax
  415700:	mov    rcx,rsi
  415703:	call   0x414950
  415708:	test   eax,eax
  41570a:	jne    0x415284
  415710:	mov    r14d,DWORD PTR [rsi+0x8]
  415714:	lea    rcx,[rip+0x1c5f9]        # 0x431d14
  41571b:	mov    ax,0x599
  41571f:	test   r14d,r14d
  415722:	cmove  r14d,eax
  415726:	call   0x429560
  41572b:	test   rax,rax
  41572e:	mov    r15,rax
  415731:	je     0x415b62
  415737:	mov    rcx,rax
  41573a:	call   0x413e80
  41573f:	mov    r14d,eax
  415742:	mov    eax,DWORD PTR [rbp+0x0]
  415745:	test   eax,eax
  415747:	jne    0x4163cd
  41574d:	lea    rdx,[rsi+0xc8]
  415754:	mov    rcx,rdi
  415757:	call   0x4148e0
  41575c:	test   eax,eax
  41575e:	js     0x415771
  415760:	lea    rcx,[rsi+0x38]
  415764:	mov    rdx,rdi
  415767:	call   0x41f8a0
  41576c:	test   rax,rax
  41576f:	je     0x41577a
  415771:	test   r14d,r14d
  415774:	je     0x41577a
  415776:	mov    DWORD PTR [rsi+0x8],r14d
  41577a:	mov    eax,DWORD PTR [rbp+0x0]
  41577d:	test   eax,eax
  41577f:	jne    0x416329
  415785:	cmp    QWORD PTR [rsi+0xc8],0x0
  41578d:	jne    0x415284
  415793:	mov    rcx,QWORD PTR [r13+0x28]
  415797:	xor    r9d,r9d
  41579a:	mov    r8d,0x4e2c
  4157a0:	mov    rdx,r13
  4157a3:	call   0x40a8d0
  4157a8:	jmp    0x415284
  4157ad:	nop    DWORD PTR [rax]
  4157b0:	mov    rdx,rbx
  4157b3:	mov    rcx,rsi
  4157b6:	call   0x41f900
  4157bb:	mov    rdi,rax
  4157be:	movzx  eax,WORD PTR [rbx+0xc]
  4157c2:	test   ax,ax
  4157c5:	jne    0x4152a5
  4157cb:	test   rdi,rdi
  4157ce:	jne    0x4152b2
  4157d4:	movzx  eax,BYTE PTR [rbx+0xf4]
  4157db:	test   al,al
  4157dd:	mov    edx,eax
  4157df:	js     0x4159a1
  4157e5:	xor    edi,edi
  4157e7:	jmp    0x4152ea
  4157ec:	nop    DWORD PTR [rax+0x0]
  4157f0:	call   0x423c20
  4157f5:	mov    edx,eax
  4157f7:	mov    rax,rsi
  4157fa:	test   edx,edx
  4157fc:	jne    0x41552f
  415802:	mov    eax,DWORD PTR [rsi+0xe8]
  415808:	test   eax,eax
  41580a:	je     0x415815
  41580c:	mov    rdx,QWORD PTR [rip+0x232ed]        # 0x438b00
  415813:	mov    DWORD PTR [rdx],eax
  415815:	mov    rax,QWORD PTR [rsi+0xe0]
  41581c:	lea    rcx,[rax+0x8]
  415820:	call   0x4240b0
  415825:	mov    rax,rsi
  415828:	jmp    0x41552f
  41582d:	nop    DWORD PTR [rax]
  415830:	xor    r12d,r12d
  415833:	jmp    0x415259
  415838:	lea    r8,[rip+0x1c619]        # 0x431e58
  41583f:	lea    rcx,[rip+0x1c084]        # 0x4318ca
  415846:	mov    r9,rdi
  415849:	mov    edx,0x4895
  41584e:	call   0x423fa0
  415853:	mov    r10d,DWORD PTR [rbp+0x0]
  415857:	test   r10d,r10d
  41585a:	je     0x415657
  415860:	lea    r8,[rip+0x1c617]        # 0x431e7e
  415867:	lea    rcx,[rip+0x1c05c]        # 0x4318ca
  41586e:	mov    r9,rdi
  415871:	mov    edx,0x48c5
  415876:	call   0x423fa0
  41587b:	mov    r8,QWORD PTR [rip+0x287fe]        # 0x43e080
  415882:	test   r8,r8
  415885:	je     0x41567d
  41588b:	mov    r9d,DWORD PTR [rbp+0x0]
  41588f:	test   r9d,r9d
  415892:	je     0x415663
  415898:	mov    r9,r8
  41589b:	lea    rcx,[rip+0x1c028]        # 0x4318ca
  4158a2:	lea    r8,[rip+0x1c5f7]        # 0x431ea0
  4158a9:	mov    edx,0x4925
  4158ae:	call   0x423fa0
  4158b3:	mov    r8,QWORD PTR [rip+0x287c6]        # 0x43e080
  4158ba:	jmp    0x415663
  4158bf:	nop
  4158c0:	lea    rdx,[rbx+0x88]
  4158c7:	lea    rcx,[rsi+0x88]
  4158ce:	call   0x41f900
  4158d3:	mov    rdi,rax
  4158d6:	jmp    0x415362
  4158db:	nop    DWORD PTR [rax+rax*1+0x0]
  4158e0:	lea    rdi,[rsi+0x78]
  4158e4:	mov    rcx,rdi
  4158e7:	call   0x41f7c0
  4158ec:	lea    rdx,[rbx+0x78]
  4158f0:	mov    rcx,rdi
  4158f3:	call   0x41f900
  4158f8:	test   rax,rax
  4158fb:	mov    rdi,rax
  4158fe:	jne    0x415351
  415904:	jmp    0x415362
  415909:	nop    DWORD PTR [rax+0x0]
  415910:	lea    rdx,[rbx+0x18]
  415914:	lea    rcx,[rsi+0x18]
  415918:	call   0x41f900
  41591d:	test   rax,rax
  415920:	mov    rdi,rax
  415923:	je     0x4157d4
  415929:	mov    rax,QWORD PTR [rbx+0x20]
  41592d:	cmp    QWORD PTR [rax],0x0
  415931:	je     0x4152ce
  415937:	lea    rdx,[rbx+0x20]
  41593b:	lea    rcx,[rsi+0x20]
  41593f:	call   0x41f900
  415944:	test   rax,rax
  415947:	mov    rdi,rax
  41594a:	je     0x4157d4
  415950:	mov    rax,QWORD PTR [rbx+0xb8]
  415957:	cmp    QWORD PTR [rax],0x0
  41595b:	je     0x4152df
  415961:	lea    rdx,[rbx+0xb8]
  415968:	lea    rcx,[rsi+0xb8]
  41596f:	call   0x41f900
  415974:	mov    rdi,rax
  415977:	mov    eax,DWORD PTR [rbp+0x0]
  41597a:	test   eax,eax
  41597c:	jne    0x416359
  415982:	movzx  eax,BYTE PTR [rbx+0xf4]
  415989:	test   al,al
  41598b:	jns    0x4152ea
  415991:	test   rdi,rdi
  415994:	jne    0x415308
  41599a:	movzx  edx,BYTE PTR [rbx+0xf4]
  4159a1:	xor    edi,edi
  4159a3:	jmp    0x415369
  4159a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4159b0:	lea    rdx,[rbx+0x70]
  4159b4:	lea    rcx,[rsi+0x70]
  4159b8:	call   0x41f900
  4159bd:	test   rax,rax
  4159c0:	mov    rdi,rax
  4159c3:	jne    0x415343
  4159c9:	jmp    0x41599a
  4159cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4159d0:	lea    rdx,[rbx+0x68]
  4159d4:	lea    rcx,[rsi+0x68]
  4159d8:	call   0x41f900
  4159dd:	test   rax,rax
  4159e0:	mov    rdi,rax
  4159e3:	jne    0x415335
  4159e9:	jmp    0x41599a
  4159eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4159f0:	lea    rdx,[rbx+0x30]
  4159f4:	lea    rcx,[rsi+0x30]
  4159f8:	call   0x41f900
  4159fd:	test   rax,rax
  415a00:	mov    rdi,rax
  415a03:	jne    0x415327
  415a09:	jmp    0x41599a
  415a0b:	nop    DWORD PTR [rax+rax*1+0x0]
  415a10:	lea    rdx,[rbx+0xc0]
  415a17:	lea    rcx,[rsi+0xc0]
  415a1e:	call   0x41f900
  415a23:	mov    rdi,rax
  415a26:	mov    eax,DWORD PTR [rbp+0x0]
  415a29:	test   eax,eax
  415a2b:	jne    0x41638d
  415a31:	test   rdi,rdi
  415a34:	jne    0x415319
  415a3a:	jmp    0x41599a
  415a3f:	nop
  415a40:	movzx  ecx,BYTE PTR [rsi+0xf5]
  415a47:	jmp    0x4155c9
  415a4c:	nop    DWORD PTR [rax+0x0]
  415a50:	mov    rax,QWORD PTR [rsi]
  415a53:	mov    rcx,rsi
  415a56:	lea    rdx,[rax+0x8]
  415a5a:	call   0x414530
  415a5f:	test   eax,eax
  415a61:	jne    0x415bdb
  415a67:	mov    rax,QWORD PTR [rsi]
  415a6a:	lea    rdx,[rsi+0xc8]
  415a71:	lea    rcx,[rax+0x8]
  415a75:	call   0x4148e0
  415a7a:	test   eax,eax
  415a7c:	js     0x415603
  415a82:	lea    rcx,[rsi+0x38]
  415a86:	mov    rdx,rsi
  415a89:	call   0x41f900
  415a8e:	test   rax,rax
  415a91:	jne    0x415284
  415a97:	jmp    0x4155e0
  415a9c:	nop    DWORD PTR [rax+0x0]
  415aa0:	mov    rax,QWORD PTR [rbx+0x98]
  415aa7:	movzx  edx,BYTE PTR [rbx+0xf5]
  415aae:	mov    QWORD PTR [rsi+0x98],rax
  415ab5:	mov    rax,QWORD PTR [rbx+0xa0]
  415abc:	test   dl,0x8
  415abf:	mov    QWORD PTR [rsi+0xa0],rax
  415ac6:	mov    rax,QWORD PTR [rbx+0xa8]
  415acd:	mov    QWORD PTR [rsi+0xa8],rax
  415ad4:	mov    rax,QWORD PTR [rbx+0xb0]
  415adb:	mov    QWORD PTR [rsi+0xb0],rax
  415ae2:	jne    0x4155ab
  415ae8:	movzx  eax,BYTE PTR [rsi+0xf5]
  415aef:	and    edx,0x1
  415af2:	and    eax,0xfffffffe
  415af5:	or     eax,edx
  415af7:	mov    BYTE PTR [rsi+0xf5],al
  415afd:	jmp    0x4155e0
  415b02:	mov    r9,QWORD PTR [rbx]
  415b05:	lea    r8,[rip+0x1c2bc]        # 0x431dc8
  415b0c:	lea    rcx,[rip+0x1bdb7]        # 0x4318ca
  415b13:	mov    edx,0xa85
  415b18:	add    r9,0x8
  415b1c:	call   0x423fa0
  415b21:	mov    edi,DWORD PTR [rbp+0x0]
  415b24:	test   edi,edi
  415b26:	je     0x41526d
  415b2c:	lea    r8,[rip+0x1c2c5]        # 0x431df8
  415b33:	lea    rcx,[rip+0x1bd90]        # 0x4318ca
  415b3a:	mov    edx,0xac5
  415b3f:	call   0x423fa0
  415b44:	jmp    0x41526d
  415b49:	nop    DWORD PTR [rax+0x0]
  415b50:	call   0x4240b0
  415b55:	mov    rcx,QWORD PTR [rsp+0x48]
  415b5a:	mov    r12d,eax
  415b5d:	jmp    0x415254
  415b62:	mov    eax,DWORD PTR [rbp+0x0]
  415b65:	test   eax,eax
  415b67:	jne    0x416437
  415b6d:	lea    rdx,[rsi+0xc8]
  415b74:	mov    rcx,rdi
  415b77:	call   0x4148e0
  415b7c:	test   eax,eax
  415b7e:	js     0x415776
  415b84:	lea    rcx,[rsi+0x38]
  415b88:	mov    rdx,rdi
  415b8b:	call   0x41f8a0
  415b90:	test   rax,rax
  415b93:	jne    0x415776
  415b99:	jmp    0x41577a
  415b9e:	xchg   ax,ax
  415ba0:	test   eax,eax
  415ba2:	je     0x415516
  415ba8:	lea    rax,[rip+0x1c0f6]        # 0x431ca5
  415baf:	lea    r9,[rip+0x1c47d]        # 0x432033
  415bb6:	lea    r8,[rip+0x1c459]        # 0x432016
  415bbd:	lea    rcx,[rip+0x1bd06]        # 0x4318ca
  415bc4:	mov    edx,0xdd5
  415bc9:	mov    QWORD PTR [rsp+0x20],rax
  415bce:	call   0x423fa0
  415bd3:	mov    eax,DWORD PTR [rbp+0x0]
  415bd6:	jmp    0x41550e
  415bdb:	mov    rdx,rbx
  415bde:	mov    rcx,rsi
  415be1:	call   0x413d30
  415be6:	jmp    0x415284
  415beb:	lea    r8,[rip+0x1c226]        # 0x431e18
  415bf2:	lea    rcx,[rip+0x1bcd1]        # 0x4318ca
  415bf9:	mov    edx,0xc05
  415bfe:	call   0x423fa0
  415c03:	jmp    0x41560e
  415c08:	mov    rax,QWORD PTR [rsi+0xd8]
  415c0f:	lea    r9,[rip+0x1c425]        # 0x43203b
  415c16:	lea    r8,[rip+0x1c3f9]        # 0x432016
  415c1d:	lea    rcx,[rip+0x1bca6]        # 0x4318ca
  415c24:	mov    edx,0xdf5
  415c29:	add    rax,0x8
  415c2d:	mov    QWORD PTR [rsp+0x20],rax
  415c32:	call   0x423fa0
  415c37:	mov    r15d,DWORD PTR [rbp+0x0]
  415c3b:	test   r15d,r15d
  415c3e:	je     0x415516
  415c44:	mov    eax,DWORD PTR [rsi+0x8]
  415c47:	lea    r9,[rip+0x1c3fb]        # 0x432049
  415c4e:	lea    r8,[rip+0x1c3f9]        # 0x43204e
  415c55:	lea    rcx,[rip+0x1bc6e]        # 0x4318ca
  415c5c:	mov    edx,0xe05
  415c61:	mov    DWORD PTR [rsp+0x20],eax
  415c65:	call   0x423fa0
  415c6a:	mov    r14d,DWORD PTR [rbp+0x0]
  415c6e:	test   r14d,r14d
  415c71:	je     0x415516
  415c77:	movzx  eax,BYTE PTR [rsi+0xd]
  415c7b:	lea    r9,[rip+0x1c3d8]        # 0x43205a
  415c82:	lea    r8,[rip+0x1c3c5]        # 0x43204e
  415c89:	lea    rcx,[rip+0x1bc3a]        # 0x4318ca
  415c90:	mov    edx,0xe15
  415c95:	mov    DWORD PTR [rsp+0x20],eax
  415c99:	call   0x423fa0
  415c9e:	mov    r13d,DWORD PTR [rbp+0x0]
  415ca2:	test   r13d,r13d
  415ca5:	je     0x415516
  415cab:	movzx  eax,BYTE PTR [rsi+0xc]
  415caf:	lea    r9,[rip+0x1c3b2]        # 0x432068
  415cb6:	lea    r8,[rip+0x1c391]        # 0x43204e
  415cbd:	lea    rcx,[rip+0x1bc06]        # 0x4318ca
  415cc4:	mov    edx,0xe25
  415cc9:	mov    DWORD PTR [rsp+0x20],eax
  415ccd:	call   0x423fa0
  415cd2:	mov    r12d,DWORD PTR [rbp+0x0]
  415cd6:	test   r12d,r12d
  415cd9:	je     0x415516
  415cdf:	mov    eax,DWORD PTR [rsi+0x10]
  415ce2:	lea    r9,[rip+0x1c38d]        # 0x432076
  415ce9:	lea    r8,[rip+0x1c35e]        # 0x43204e
  415cf0:	lea    rcx,[rip+0x1bbd3]        # 0x4318ca
  415cf7:	mov    edx,0xe35
  415cfc:	mov    DWORD PTR [rsp+0x20],eax
  415d00:	call   0x423fa0
  415d05:	mov    edi,DWORD PTR [rbp+0x0]
  415d08:	test   edi,edi
  415d0a:	je     0x415516
  415d10:	mov    rax,QWORD PTR [rsi+0x18]
  415d14:	lea    r9,[rip+0x1c366]        # 0x432081
  415d1b:	lea    r8,[rip+0x1c2f4]        # 0x432016
  415d22:	lea    rcx,[rip+0x1bba1]        # 0x4318ca
  415d29:	mov    edx,0xe45
  415d2e:	add    rax,0x8
  415d32:	mov    QWORD PTR [rsp+0x20],rax
  415d37:	call   0x423fa0
  415d3c:	mov    ebx,DWORD PTR [rbp+0x0]
  415d3f:	test   ebx,ebx
  415d41:	je     0x415516
  415d47:	mov    rax,QWORD PTR [rsi+0x20]
  415d4b:	lea    r9,[rip+0x1c338]        # 0x43208a
  415d52:	lea    r8,[rip+0x1c2bd]        # 0x432016
  415d59:	lea    rcx,[rip+0x1bb6a]        # 0x4318ca
  415d60:	mov    edx,0xe55
  415d65:	add    rax,0x8
  415d69:	mov    QWORD PTR [rsp+0x20],rax
  415d6e:	call   0x423fa0
  415d73:	mov    r11d,DWORD PTR [rbp+0x0]
  415d77:	test   r11d,r11d
  415d7a:	je     0x415516
  415d80:	mov    eax,DWORD PTR [rsi+0x28]
  415d83:	lea    r9,[rip+0x1c30f]        # 0x432099
  415d8a:	lea    r8,[rip+0x1c2bd]        # 0x43204e
  415d91:	lea    rcx,[rip+0x1bb32]        # 0x4318ca
  415d98:	mov    edx,0xe65
  415d9d:	mov    DWORD PTR [rsp+0x20],eax
  415da1:	call   0x423fa0
  415da6:	mov    r10d,DWORD PTR [rbp+0x0]
  415daa:	test   r10d,r10d
  415dad:	je     0x415516
  415db3:	mov    rax,QWORD PTR [rsi+0x30]
  415db7:	lea    r9,[rip+0x1c2eb]        # 0x4320a9
  415dbe:	lea    r8,[rip+0x1c251]        # 0x432016
  415dc5:	lea    rcx,[rip+0x1bafe]        # 0x4318ca
  415dcc:	mov    edx,0xe75
  415dd1:	add    rax,0x8
  415dd5:	mov    QWORD PTR [rsp+0x20],rax
  415dda:	call   0x423fa0
  415ddf:	mov    r9d,DWORD PTR [rbp+0x0]
  415de3:	test   r9d,r9d
  415de6:	je     0x415516
  415dec:	mov    rax,QWORD PTR [rsi+0xb8]
  415df3:	lea    r8,[rip+0x1c21c]        # 0x432016
  415dfa:	lea    r9,[rip+0x1c1b1]        # 0x431fb2
  415e01:	lea    rcx,[rip+0x1bac2]        # 0x4318ca
  415e08:	mov    edx,0xe85
  415e0d:	add    rax,0x8
  415e11:	mov    QWORD PTR [rsp+0x20],rax
  415e16:	call   0x423fa0
  415e1b:	mov    r8d,DWORD PTR [rbp+0x0]
  415e1f:	test   r8d,r8d
  415e22:	je     0x415516
  415e28:	movzx  eax,BYTE PTR [rsi+0xf4]
  415e2f:	lea    rcx,[rip+0x1ba94]        # 0x4318ca
  415e36:	lea    r9,[rip+0x1c27d]        # 0x4320ba
  415e3d:	lea    r8,[rip+0x1c20a]        # 0x43204e
  415e44:	mov    edx,0xe95
  415e49:	shr    al,0x7
  415e4c:	movzx  eax,al
  415e4f:	mov    DWORD PTR [rsp+0x20],eax
  415e53:	call   0x423fa0
  415e58:	mov    ecx,DWORD PTR [rbp+0x0]
  415e5b:	test   ecx,ecx
  415e5d:	je     0x415516
  415e63:	mov    rax,QWORD PTR [rsi+0x68]
  415e67:	lea    r9,[rip+0x1c256]        # 0x4320c4
  415e6e:	lea    r8,[rip+0x1c1a1]        # 0x432016
  415e75:	lea    rcx,[rip+0x1ba4e]        # 0x4318ca
  415e7c:	mov    edx,0xea5
  415e81:	add    rax,0x8
  415e85:	mov    QWORD PTR [rsp+0x20],rax
  415e8a:	call   0x423fa0
  415e8f:	mov    edx,DWORD PTR [rbp+0x0]
  415e92:	test   edx,edx
  415e94:	je     0x415516
  415e9a:	mov    rax,QWORD PTR [rsi+0x70]
  415e9e:	lea    r9,[rip+0x1c228]        # 0x4320cd
  415ea5:	lea    r8,[rip+0x1c16a]        # 0x432016
  415eac:	lea    rcx,[rip+0x1ba17]        # 0x4318ca
  415eb3:	mov    edx,0xeb5
  415eb8:	add    rax,0x8
  415ebc:	mov    QWORD PTR [rsp+0x20],rax
  415ec1:	call   0x423fa0
  415ec6:	mov    eax,DWORD PTR [rbp+0x0]
  415ec9:	test   eax,eax
  415ecb:	je     0x415516
  415ed1:	mov    rax,QWORD PTR [rsi+0x88]
  415ed8:	lea    r9,[rip+0x1c1f8]        # 0x4320d7
  415edf:	lea    r8,[rip+0x1c130]        # 0x432016
  415ee6:	lea    rcx,[rip+0x1b9dd]        # 0x4318ca
  415eed:	mov    edx,0xee5
  415ef2:	add    rax,0x8
  415ef6:	mov    QWORD PTR [rsp+0x20],rax
  415efb:	call   0x423fa0
  415f00:	mov    eax,DWORD PTR [rbp+0x0]
  415f03:	test   eax,eax
  415f05:	je     0x415516
  415f0b:	movzx  eax,BYTE PTR [rsi+0xf4]
  415f12:	lea    r9,[rip+0x1c1c6]        # 0x4320df
  415f19:	lea    r8,[rip+0x1c12e]        # 0x43204e
  415f20:	lea    rcx,[rip+0x1b9a3]        # 0x4318ca
  415f27:	mov    edx,0xef5
  415f2c:	and    eax,0x1
  415f2f:	mov    DWORD PTR [rsp+0x20],eax
  415f33:	call   0x423fa0
  415f38:	mov    eax,DWORD PTR [rbp+0x0]
  415f3b:	test   eax,eax
  415f3d:	je     0x415516
  415f43:	movzx  eax,BYTE PTR [rsi+0xf4]
  415f4a:	lea    r9,[rip+0x1c198]        # 0x4320e9
  415f51:	lea    r8,[rip+0x1c0f6]        # 0x43204e
  415f58:	lea    rcx,[rip+0x1b96b]        # 0x4318ca
  415f5f:	mov    edx,0xf05
  415f64:	shr    al,1
  415f66:	and    eax,0x1
  415f69:	mov    DWORD PTR [rsp+0x20],eax
  415f6d:	call   0x423fa0
  415f72:	mov    eax,DWORD PTR [rbp+0x0]
  415f75:	test   eax,eax
  415f77:	je     0x415516
  415f7d:	movzx  eax,BYTE PTR [rsi+0x90]
  415f84:	lea    r9,[rip+0x1c170]        # 0x4320fb
  415f8b:	lea    r8,[rip+0x1c0bc]        # 0x43204e
  415f92:	lea    rcx,[rip+0x1b931]        # 0x4318ca
  415f99:	mov    edx,0xf15
  415f9e:	mov    DWORD PTR [rsp+0x20],eax
  415fa2:	call   0x423fa0
  415fa7:	mov    eax,DWORD PTR [rbp+0x0]
  415faa:	test   eax,eax
  415fac:	je     0x415516
  415fb2:	mov    eax,DWORD PTR [rsi+0x94]
  415fb8:	lea    r9,[rip+0x1c14a]        # 0x432109
  415fbf:	lea    r8,[rip+0x1c088]        # 0x43204e
  415fc6:	lea    rcx,[rip+0x1b8fd]        # 0x4318ca
  415fcd:	mov    edx,0xf25
  415fd2:	mov    DWORD PTR [rsp+0x20],eax
  415fd6:	call   0x423fa0
  415fdb:	mov    eax,DWORD PTR [rbp+0x0]
  415fde:	test   eax,eax
  415fe0:	je     0x415516
  415fe6:	mov    rax,QWORD PTR [rsi+0xc0]
  415fed:	lea    r9,[rip+0x1c123]        # 0x432117
  415ff4:	lea    r8,[rip+0x1c01b]        # 0x432016
  415ffb:	lea    rcx,[rip+0x1b8c8]        # 0x4318ca
  416002:	mov    edx,0xf55
  416007:	add    rax,0x8
  41600b:	mov    QWORD PTR [rsp+0x20],rax
  416010:	call   0x423fa0
  416015:	mov    r15d,DWORD PTR [rbp+0x0]
  416019:	test   r15d,r15d
  41601c:	je     0x415516
  416022:	mov    rax,QWORD PTR [rsi+0xe0]
  416029:	lea    r9,[rip+0x1c0f0]        # 0x432120
  416030:	lea    r8,[rip+0x1bfdf]        # 0x432016
  416037:	lea    rcx,[rip+0x1b88c]        # 0x4318ca
  41603e:	mov    edx,0xf65
  416043:	add    rax,0x8
  416047:	mov    QWORD PTR [rsp+0x20],rax
  41604c:	call   0x423fa0
  416051:	mov    r14d,DWORD PTR [rbp+0x0]
  416055:	test   r14d,r14d
  416058:	je     0x415516
  41605e:	mov    eax,DWORD PTR [rsi+0xe8]
  416064:	lea    r9,[rip+0x1c0bf]        # 0x43212a
  41606b:	lea    r8,[rip+0x1c0c4]        # 0x432136
  416072:	lea    rcx,[rip+0x1b851]        # 0x4318ca
  416079:	mov    edx,0xf75
  41607e:	mov    DWORD PTR [rsp+0x20],eax
  416082:	call   0x423fa0
  416087:	mov    r13d,DWORD PTR [rbp+0x0]
  41608b:	test   r13d,r13d
  41608e:	je     0x415516
  416094:	mov    eax,DWORD PTR [rsi+0xec]
  41609a:	lea    r9,[rip+0x1c0a1]        # 0x432142
  4160a1:	lea    r8,[rip+0x1bfa6]        # 0x43204e
  4160a8:	lea    rcx,[rip+0x1b81b]        # 0x4318ca
  4160af:	mov    edx,0xf85
  4160b4:	mov    DWORD PTR [rsp+0x20],eax
  4160b8:	call   0x423fa0
  4160bd:	mov    r12d,DWORD PTR [rbp+0x0]
  4160c1:	test   r12d,r12d
  4160c4:	je     0x415516
  4160ca:	movzx  eax,BYTE PTR [rsi+0xf4]
  4160d1:	lea    r9,[rip+0x1c074]        # 0x43214c
  4160d8:	lea    r8,[rip+0x1bf6f]        # 0x43204e
  4160df:	lea    rcx,[rip+0x1b7e4]        # 0x4318ca
  4160e6:	mov    edx,0xf95
  4160eb:	shr    al,0x2
  4160ee:	and    eax,0x1
  4160f1:	mov    DWORD PTR [rsp+0x20],eax
  4160f5:	call   0x423fa0
  4160fa:	mov    edi,DWORD PTR [rbp+0x0]
  4160fd:	test   edi,edi
  4160ff:	je     0x415516
  416105:	mov    rax,QWORD PTR [rsi+0x40]
  416109:	lea    r9,[rip+0x1c04f]        # 0x43215f
  416110:	lea    r8,[rip+0x1beff]        # 0x432016
  416117:	lea    rcx,[rip+0x1b7ac]        # 0x4318ca
  41611e:	mov    edx,0xfa5
  416123:	add    rax,0x8
  416127:	mov    QWORD PTR [rsp+0x20],rax
  41612c:	call   0x423fa0
  416131:	mov    ebx,DWORD PTR [rbp+0x0]
  416134:	test   ebx,ebx
  416136:	je     0x415516
  41613c:	mov    rax,QWORD PTR [rsi+0x48]
  416140:	lea    r9,[rip+0x1c02a]        # 0x432171
  416147:	lea    r8,[rip+0x1bec8]        # 0x432016
  41614e:	lea    rcx,[rip+0x1b775]        # 0x4318ca
  416155:	mov    edx,0xfb5
  41615a:	add    rax,0x8
  41615e:	mov    QWORD PTR [rsp+0x20],rax
  416163:	call   0x423fa0
  416168:	mov    r11d,DWORD PTR [rbp+0x0]
  41616c:	test   r11d,r11d
  41616f:	je     0x415516
  416175:	mov    rax,QWORD PTR [rsi+0x58]
  416179:	lea    r9,[rip+0x1bffc]        # 0x43217c
  416180:	lea    r8,[rip+0x1be8f]        # 0x432016
  416187:	lea    rcx,[rip+0x1b73c]        # 0x4318ca
  41618e:	mov    edx,0xfc5
  416193:	add    rax,0x8
  416197:	mov    QWORD PTR [rsp+0x20],rax
  41619c:	call   0x423fa0
  4161a1:	mov    r10d,DWORD PTR [rbp+0x0]
  4161a5:	test   r10d,r10d
  4161a8:	je     0x415516
  4161ae:	mov    rax,QWORD PTR [rsi+0x60]
  4161b2:	lea    r9,[rip+0x1bfca]        # 0x432183
  4161b9:	lea    r8,[rip+0x1be56]        # 0x432016
  4161c0:	lea    rcx,[rip+0x1b703]        # 0x4318ca
  4161c7:	mov    edx,0xfd5
  4161cc:	add    rax,0x8
  4161d0:	mov    QWORD PTR [rsp+0x20],rax
  4161d5:	call   0x423fa0
  4161da:	mov    r9d,DWORD PTR [rbp+0x0]
  4161de:	test   r9d,r9d
  4161e1:	je     0x415516
  4161e7:	movzx  eax,BYTE PTR [rsi+0xf5]
  4161ee:	lea    r8,[rip+0x1be59]        # 0x43204e
  4161f5:	lea    r9,[rip+0x1bf8f]        # 0x43218b
  4161fc:	lea    rcx,[rip+0x1b6c7]        # 0x4318ca
  416203:	mov    edx,0xfe5
  416208:	shr    al,0x2
  41620b:	and    eax,0x1
  41620e:	mov    DWORD PTR [rsp+0x20],eax
  416212:	call   0x423fa0
  416217:	mov    r8d,DWORD PTR [rbp+0x0]
  41621b:	test   r8d,r8d
  41621e:	je     0x415516
  416224:	mov    rax,QWORD PTR [rsi+0x50]
  416228:	lea    rcx,[rip+0x1b69b]        # 0x4318ca
  41622f:	lea    r9,[rip+0x1bf68]        # 0x43219e
  416236:	lea    r8,[rip+0x1bdd9]        # 0x432016
  41623d:	mov    edx,0xff5
  416242:	add    rax,0x8
  416246:	mov    QWORD PTR [rsp+0x20],rax
  41624b:	call   0x423fa0
  416250:	mov    ecx,DWORD PTR [rbp+0x0]
  416253:	test   ecx,ecx
  416255:	je     0x415516
  41625b:	movzx  eax,BYTE PTR [rsi+0xf5]
  416262:	lea    r9,[rip+0x1bf41]        # 0x4321aa
  416269:	lea    r8,[rip+0x1bdde]        # 0x43204e
  416270:	lea    rcx,[rip+0x1b653]        # 0x4318ca
  416277:	mov    edx,0x1005
  41627c:	shr    al,0x3
  41627f:	and    eax,0x1
  416282:	mov    DWORD PTR [rsp+0x20],eax
  416286:	call   0x423fa0
  41628b:	jmp    0x415516
  416290:	lea    r8,[rip+0x1bd55]        # 0x431fec
  416297:	lea    rcx,[rip+0x1b62c]        # 0x4318ca
  41629e:	mov    edx,0xd55
  4162a3:	call   0x423fa0
  4162a8:	mov    eax,DWORD PTR [rbp+0x0]
  4162ab:	test   eax,eax
  4162ad:	je     0x415490
  4162b3:	mov    rax,QWORD PTR [rsi]
  4162b6:	lea    r9,[rip+0x1bd4d]        # 0x43200a
  4162bd:	lea    r8,[rip+0x1bd52]        # 0x432016
  4162c4:	lea    rcx,[rip+0x1b5ff]        # 0x4318ca
  4162cb:	mov    edx,0xd65
  4162d0:	add    rax,0x8
  4162d4:	mov    QWORD PTR [rsp+0x20],rax
  4162d9:	call   0x423fa0
  4162de:	mov    eax,DWORD PTR [rbp+0x0]
  4162e1:	test   eax,eax
  4162e3:	je     0x415490
  4162e9:	mov    rax,QWORD PTR [rsi+0x38]
  4162ed:	lea    r9,[rip+0x1bd2e]        # 0x432022
  4162f4:	lea    r8,[rip+0x1bd1b]        # 0x432016
  4162fb:	lea    rcx,[rip+0x1b5c8]        # 0x4318ca
  416302:	mov    edx,0xd75
  416307:	add    rax,0x8
  41630b:	mov    QWORD PTR [rsp+0x20],rax
  416310:	call   0x423fa0
  416315:	mov    eax,DWORD PTR [rbp+0x0]
  416318:	jmp    0x415490
  41631d:	lea    rdi,[rip+0x1ba8a]        # 0x431dae
  416324:	jmp    0x41564a
  416329:	mov    rdx,QWORD PTR [rbx]
  41632c:	mov    rax,QWORD PTR [rsi]
  41632f:	lea    r8,[rip+0x1bc3a]        # 0x431f70
  416336:	lea    rcx,[rip+0x1b58d]        # 0x4318ca
  41633d:	add    rax,0x8
  416341:	lea    r9,[rdx+0x8]
  416345:	mov    edx,0xc25
  41634a:	mov    QWORD PTR [rsp+0x20],rax
  41634f:	call   0x423fa0
  416354:	jmp    0x415785
  416359:	mov    rax,QWORD PTR [rsi+0xb8]
  416360:	lea    r9,[rip+0x1bc4b]        # 0x431fb2
  416367:	lea    r8,[rip+0x1bc53]        # 0x431fc1
  41636e:	lea    rcx,[rip+0x1b555]        # 0x4318ca
  416375:	mov    edx,0x2c35
  41637a:	add    rax,0x8
  41637e:	mov    QWORD PTR [rsp+0x20],rax
  416383:	call   0x423fa0
  416388:	jmp    0x415982
  41638d:	mov    rax,QWORD PTR [rsi+0xc0]
  416394:	lea    r9,[rip+0x1bc43]        # 0x431fde
  41639b:	lea    r8,[rip+0x1bc1f]        # 0x431fc1
  4163a2:	lea    rcx,[rip+0x1b521]        # 0x4318ca
  4163a9:	mov    edx,0x2ca5
  4163ae:	add    rax,0x8
  4163b2:	mov    QWORD PTR [rsp+0x20],rax
  4163b7:	call   0x423fa0
  4163bc:	jmp    0x415a31
  4163c1:	lea    rax,[rip+0x1c268]        # 0x432630
  4163c8:	jmp    0x4156e8
  4163cd:	lea    r8,[rip+0x1bb4c]        # 0x431f20
  4163d4:	lea    rcx,[rip+0x1b4ef]        # 0x4318ca
  4163db:	mov    r9,r15
  4163de:	mov    edx,0x4d05
  4163e3:	call   0x423fa0
  4163e8:	jmp    0x41574d
  4163ed:	lea    r8,[rip+0x1baf4]        # 0x431ee8
  4163f4:	lea    rcx,[rip+0x1b4cf]        # 0x4318ca
  4163fb:	mov    r9,rax
  4163fe:	mov    edx,0x4b15
  416403:	mov    QWORD PTR [rsp+0x38],rax
  416408:	call   0x423fa0
  41640d:	mov    rax,QWORD PTR [rsp+0x38]
  416412:	jmp    0x4156f3
  416417:	lea    r8,[rip+0x1baae]        # 0x431ecc
  41641e:	lea    rcx,[rip+0x1b4a5]        # 0x4318ca
  416425:	mov    r9,rax
  416428:	mov    edx,0x49d5
  41642d:	call   0x423fa0
  416432:	jmp    0x41569c
  416437:	lea    r8,[rip+0x1bb0a]        # 0x431f48
  41643e:	lea    rcx,[rip+0x1b485]        # 0x4318ca
  416445:	mov    r9d,r14d
  416448:	mov    edx,0x4d25
  41644d:	call   0x423fa0
  416452:	jmp    0x415b6d
  416457:	nop    WORD PTR [rax+rax*1+0x0]
  416460:	push   r13
  416462:	push   r12
  416464:	push   rbp
  416465:	push   rdi
  416466:	push   rsi
  416467:	push   rbx
  416468:	sub    rsp,0xb8
  41646f:	mov    r12,QWORD PTR [rip+0x2273a]        # 0x438bb0
  416476:	mov    rbx,rcx
  416479:	mov    r13,rdx
  41647c:	mov    rbp,r8
  41647f:	mov    r10d,DWORD PTR [r12]
  416483:	test   r10d,r10d
  416486:	jne    0x416880
  41648c:	lea    rdi,[rip+0x1bd33]        # 0x4321c6
  416493:	mov    ecx,0xc
  416498:	mov    rsi,rbx
  41649b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41649d:	je     0x4167a0
  4164a3:	lea    rdi,[rip+0x1bd28]        # 0x4321d2
  4164aa:	mov    ecx,0x13
  4164af:	mov    rsi,rbx
  4164b2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4164b4:	je     0x4167c3
  4164ba:	lea    rdi,[rip+0x1bd24]        # 0x4321e5
  4164c1:	mov    ecx,0x12
  4164c6:	mov    rsi,rbx
  4164c9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4164cb:	je     0x4167f0
  4164d1:	lea    rdi,[rip+0x1bd1f]        # 0x4321f7
  4164d8:	mov    ecx,0x19
  4164dd:	mov    rsi,rbx
  4164e0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4164e2:	je     0x416843
  4164e8:	lea    rdi,[rip+0x1bd21]        # 0x432210
  4164ef:	mov    ecx,0xa
  4164f4:	mov    rsi,rbx
  4164f7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4164f9:	je     0x416803
  4164ff:	lea    rdi,[rip+0x1bd14]        # 0x43221a
  416506:	mov    ecx,0xc
  41650b:	mov    rsi,rbx
  41650e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416510:	je     0x4168a5
  416516:	lea    rdi,[rip+0x1bd09]        # 0x432226
  41651d:	mov    ecx,0x8
  416522:	mov    rsi,rbx
  416525:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416527:	je     0x416820
  41652d:	lea    rdi,[rip+0x1bcfa]        # 0x43222e
  416534:	mov    ecx,0xe
  416539:	mov    rsi,rbx
  41653c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41653e:	je     0x416820
  416544:	lea    rdi,[rip+0x1bcf1]        # 0x43223c
  41654b:	mov    ecx,0x10
  416550:	mov    rsi,rbx
  416553:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416555:	je     0x4168f0
  41655b:	lea    rdi,[rip+0x1bcea]        # 0x43224c
  416562:	mov    ecx,0x5
  416567:	mov    rsi,rbx
  41656a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41656c:	je     0x416910
  416572:	lea    rdi,[rip+0x1bad0]        # 0x432049
  416579:	mov    ecx,0x5
  41657e:	mov    rsi,rbx
  416581:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416583:	je     0x4169a3
  416589:	lea    rdi,[rip+0x1bd24]        # 0x4322b4
  416590:	mov    ecx,0x16
  416595:	mov    rsi,rbx
  416598:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41659a:	je     0x4169c3
  4165a0:	lea    rdi,[rip+0x1bd23]        # 0x4322ca
  4165a7:	mov    ecx,0xa
  4165ac:	mov    rsi,rbx
  4165af:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4165b1:	je     0x4169ee
  4165b7:	lea    rdi,[rip+0x1bd16]        # 0x4322d4
  4165be:	mov    ecx,0x8
  4165c3:	mov    rsi,rbx
  4165c6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4165c8:	je     0x416a3e
  4165ce:	lea    rdi,[rip+0x1bd12]        # 0x4322e7
  4165d5:	mov    ecx,0xf
  4165da:	mov    rsi,rbx
  4165dd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4165df:	je     0x416a86
  4165e5:	lea    rdi,[rip+0x1bd2f]        # 0x43231b
  4165ec:	mov    ecx,0xb
  4165f1:	mov    rsi,rbx
  4165f4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4165f6:	je     0x416ad4
  4165fc:	lea    rdi,[rip+0x1ba7e]        # 0x432081
  416603:	mov    ecx,0x9
  416608:	mov    rsi,rbx
  41660b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41660d:	je     0x416afc
  416613:	lea    rdi,[rip+0x1bd0c]        # 0x432326
  41661a:	mov    ecx,0x11
  41661f:	mov    rsi,rbx
  416622:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416624:	je     0x416b30
  41662a:	lea    rdi,[rip+0x1bd06]        # 0x432337
  416631:	mov    ecx,0x9
  416636:	mov    rsi,rbx
  416639:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41663b:	je     0x416b4f
  416641:	lea    rdi,[rip+0x1bcf8]        # 0x432340
  416648:	mov    ecx,0xb
  41664d:	mov    rsi,rbx
  416650:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  416652:	je     0x416b66
  416658:	lea    rdx,[rip+0x1bd61]        # 0x4323c0
  41665f:	mov    rcx,rbx
  416662:	call   0x4294b0
  416667:	test   eax,eax
  416669:	je     0x416bb5
  41666f:	lea    rdx,[rip+0x1bd57]        # 0x4323cd
  416676:	mov    rcx,rbx
  416679:	call   0x4294b0
  41667e:	test   eax,eax
  416680:	je     0x416b8a
  416686:	lea    rdx,[rip+0x1bd4b]        # 0x4323d8
  41668d:	mov    rcx,rbx
  416690:	call   0x4294b0
  416695:	test   eax,eax
  416697:	je     0x416c32
  41669d:	lea    rdx,[rip+0x1bd3f]        # 0x4323e3
  4166a4:	mov    rcx,rbx
  4166a7:	call   0x4294b0
  4166ac:	test   eax,eax
  4166ae:	je     0x416c0a
  4166b4:	lea    rdx,[rip+0x1bd2e]        # 0x4323e9
  4166bb:	mov    rcx,rbx
  4166be:	call   0x4294b0
  4166c3:	test   eax,eax
  4166c5:	je     0x416c1e
  4166cb:	lea    rdx,[rip+0x1bd1b]        # 0x4323ed
  4166d2:	mov    rcx,rbx
  4166d5:	call   0x4294b0
  4166da:	test   eax,eax
  4166dc:	je     0x416d46
  4166e2:	lea    rdx,[rip+0x1bd0c]        # 0x4323f5
  4166e9:	mov    rcx,rbx
  4166ec:	call   0x4294b0
  4166f1:	test   eax,eax
  4166f3:	je     0x416d85
  4166f9:	lea    rdx,[rip+0x1bcfe]        # 0x4323fe
  416700:	mov    rcx,rbx
  416703:	call   0x4294b0
  416708:	test   eax,eax
  41670a:	je     0x416d5a
  416710:	lea    rdx,[rip+0x1bd02]        # 0x432419
  416717:	mov    rcx,rbx
  41671a:	call   0x4294b0
  41671f:	test   eax,eax
  416721:	je     0x416ce1
  416727:	lea    rdx,[rip+0x1b9e9]        # 0x432117
  41672e:	mov    rcx,rbx
  416731:	call   0x4294b0
  416736:	test   eax,eax
  416738:	je     0x416cca
  41673e:	lea    rdx,[rip+0x1bce6]        # 0x43242b
  416745:	mov    rcx,rbx
  416748:	call   0x4294b0
  41674d:	test   eax,eax
  41674f:	je     0x416cf5
  416755:	cmp    DWORD PTR [r12],0x0
  41675a:	je     0x416780
  41675c:	lea    r8,[rip+0x1bd05]        # 0x432468
  416763:	lea    rcx,[rip+0x1b160]        # 0x4318ca
  41676a:	mov    r9,rbx
  41676d:	mov    edx,0x2a95
  416772:	call   0x423fa0
  416777:	nop    WORD PTR [rax+rax*1+0x0]
  416780:	mov    rdi,rbp
  416783:	test   rdi,rdi
  416786:	jne    0x4167b3
  416788:	and    BYTE PTR [rbp+0xf5],0xfd
  41678f:	add    rsp,0xb8
  416796:	pop    rbx
  416797:	pop    rsi
  416798:	pop    rdi
  416799:	pop    rbp
  41679a:	pop    r12
  41679c:	pop    r13
  41679e:	ret    
  41679f:	nop
  4167a0:	mov    rdx,rbp
  4167a3:	mov    rcx,r13
  4167a6:	mov    rdi,rbp
  4167a9:	call   0x414710
  4167ae:	test   rdi,rdi
  4167b1:	je     0x416788
  4167b3:	add    rsp,0xb8
  4167ba:	pop    rbx
  4167bb:	pop    rsi
  4167bc:	pop    rdi
  4167bd:	pop    rbp
  4167be:	pop    r12
  4167c0:	pop    r13
  4167c2:	ret    
  4167c3:	mov    rcx,r13
  4167c6:	call   0x4295d0
  4167cb:	lea    edx,[rax-0x200]
  4167d1:	cmp    edx,0xfdff
  4167d7:	ja     0x416780
  4167d9:	mov    DWORD PTR [rbp+0x10],eax
  4167dc:	add    rsp,0xb8
  4167e3:	pop    rbx
  4167e4:	pop    rsi
  4167e5:	pop    rdi
  4167e6:	pop    rbp
  4167e7:	pop    r12
  4167e9:	pop    r13
  4167eb:	ret    
  4167ec:	nop    DWORD PTR [rax+0x0]
  4167f0:	mov    r8,rbp
  4167f3:	mov    rdx,r13
  4167f6:	mov    rcx,rbx
  4167f9:	call   0x413f70
  4167fe:	mov    rdi,rbp
  416801:	jmp    0x4167ae
  416803:	lea    rcx,[rbp+0xe0]
  41680a:	mov    rdx,r13
  41680d:	call   0x41f8a0
  416812:	mov    rdi,rax
  416815:	jmp    0x4167ae
  416817:	nop    WORD PTR [rax+rax*1+0x0]
  416820:	mov    rcx,r13
  416823:	call   0x4295d0
  416828:	test   eax,eax
  41682a:	je     0x416780
  416830:	mov    rcx,r13
  416833:	call   0x4295d0
  416838:	mov    DWORD PTR [rbp+0x94],eax
  41683e:	jmp    0x4167b3
  416843:	mov    rdx,r13
  416846:	mov    r8,rbp
  416849:	mov    rcx,rbx
  41684c:	call   0x413f70
  416851:	movzx  edx,BYTE PTR [rbp+0xf4]
  416858:	and    eax,0x1
  41685b:	shl    eax,0x3
  41685e:	and    edx,0xfffffff7
  416861:	or     eax,edx
  416863:	mov    BYTE PTR [rbp+0xf4],al
  416869:	add    rsp,0xb8
  416870:	pop    rbx
  416871:	pop    rsi
  416872:	pop    rdi
  416873:	pop    rbp
  416874:	pop    r12
  416876:	pop    r13
  416878:	ret    
  416879:	nop    DWORD PTR [rax+0x0]
  416880:	mov    r9,rcx
  416883:	lea    r8,[rip+0x1b930]        # 0x4321ba
  41688a:	lea    rcx,[rip+0x1b039]        # 0x4318ca
  416891:	mov    QWORD PTR [rsp+0x20],rdx
  416896:	mov    edx,0x24f5
  41689b:	call   0x423fa0
  4168a0:	jmp    0x41648c
  4168a5:	lea    rdx,[rsp+0x30]
  4168aa:	xor    r8d,r8d
  4168ad:	mov    rcx,r13
  4168b0:	call   0x429468
  4168b5:	cmp    BYTE PTR [r13+0x0],0x0
  4168ba:	je     0x416780
  4168c0:	mov    rdx,QWORD PTR [rsp+0x30]
  4168c5:	cmp    BYTE PTR [rdx],0x0
  4168c8:	jne    0x416780
  4168ce:	lea    edx,[rax+0x7fffffff]
  4168d4:	cmp    edx,0xfffffffd
  4168d7:	ja     0x416780
  4168dd:	mov    DWORD PTR [rbp+0xe8],eax
  4168e3:	jmp    0x416780
  4168e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4168f0:	mov    rcx,r13
  4168f3:	call   0x4295d0
  4168f8:	test   eax,eax
  4168fa:	je     0x416780
  416900:	mov    rcx,r13
  416903:	call   0x4295d0
  416908:	mov    DWORD PTR [rbp+0x28],eax
  41690b:	jmp    0x4167b3
  416910:	lea    rdx,[rbp+0xc8]
  416917:	mov    rcx,r13
  41691a:	call   0x4148e0
  41691f:	test   eax,eax
  416921:	js     0x416a11
  416927:	mov    r8d,DWORD PTR [r12]
  41692b:	test   r8d,r8d
  41692e:	jne    0x416b10
  416934:	lea    rcx,[rbp+0x38]
  416938:	mov    rdx,r13
  41693b:	lea    rsi,[rsp+0x30]
  416940:	call   0x41f8a0
  416945:	mov    rbx,QWORD PTR [rbp+0xc8]
  41694c:	mov    rdi,rax
  41694f:	test   rbx,rbx
  416952:	jne    0x41696d
  416954:	jmp    0x4167ae
  416959:	nop    DWORD PTR [rax+0x0]
  416960:	mov    rbx,QWORD PTR [rbx+0x28]
  416964:	test   rbx,rbx
  416967:	je     0x4167ae
  41696d:	mov    ecx,DWORD PTR [r12]
  416971:	test   ecx,ecx
  416973:	je     0x416960
  416975:	mov    rdx,rsi
  416978:	mov    rcx,rbx
  41697b:	mov    r8d,0x80
  416981:	call   0x421a80
  416986:	lea    r8,[rip+0x1b917]        # 0x4322a4
  41698d:	lea    rcx,[rip+0x1af36]        # 0x4318ca
  416994:	mov    r9,rax
  416997:	mov    edx,0x2775
  41699c:	call   0x423fa0
  4169a1:	jmp    0x416960
  4169a3:	mov    rcx,r13
  4169a6:	call   0x4295d0
  4169ab:	test   eax,eax
  4169ad:	je     0x416780
  4169b3:	mov    rcx,r13
  4169b6:	call   0x4295d0
  4169bb:	mov    DWORD PTR [rbp+0x8],eax
  4169be:	jmp    0x4167b3
  4169c3:	mov    rdx,r13
  4169c6:	mov    r8,rbp
  4169c9:	mov    rcx,rbx
  4169cc:	call   0x413f70
  4169d1:	movzx  edx,BYTE PTR [rbp+0xf4]
  4169d8:	and    eax,0x1
  4169db:	shl    eax,0x2
  4169de:	and    edx,0xfffffffb
  4169e1:	or     eax,edx
  4169e3:	mov    BYTE PTR [rbp+0xf4],al
  4169e9:	jmp    0x4167b3
  4169ee:	mov    rcx,r13
  4169f1:	call   0x4295d0
  4169f6:	test   eax,eax
  4169f8:	je     0x416780
  4169fe:	mov    rcx,r13
  416a01:	call   0x4295d0
  416a06:	mov    DWORD PTR [rbp+0xec],eax
  416a0c:	jmp    0x4167b3
  416a11:	mov    r9d,DWORD PTR [r12]
  416a15:	test   r9d,r9d
  416a18:	je     0x4167b3
  416a1e:	lea    r8,[rip+0x1b833]        # 0x432258
  416a25:	lea    rcx,[rip+0x1ae9e]        # 0x4318ca
  416a2c:	mov    r9,r13
  416a2f:	mov    edx,0x2703
  416a34:	call   0x423fa0
  416a39:	jmp    0x4167b3
  416a3e:	lea    rcx,[rbp+0x20]
  416a42:	mov    rdx,r13
  416a45:	call   0x41f8a0
  416a4a:	mov    edx,DWORD PTR [r12]
  416a4e:	mov    rdi,rax
  416a51:	test   edx,edx
  416a53:	je     0x4167ae
  416a59:	mov    rax,QWORD PTR [rbp+0x20]
  416a5d:	lea    r8,[rip+0x1b878]        # 0x4322dc
  416a64:	lea    rcx,[rip+0x1ae5f]        # 0x4318ca
  416a6b:	mov    r9,rbx
  416a6e:	mov    edx,0x2835
  416a73:	add    rax,0x8
  416a77:	mov    QWORD PTR [rsp+0x20],rax
  416a7c:	call   0x423fa0
  416a81:	jmp    0x4167ae
  416a86:	lea    rcx,[rbp+0xb8]
  416a8d:	mov    rdx,r13
  416a90:	call   0x41f8a0
  416a95:	mov    rdi,rax
  416a98:	mov    eax,DWORD PTR [r12]
  416a9c:	test   eax,eax
  416a9e:	je     0x4167ae
  416aa4:	mov    rax,QWORD PTR [rbp+0xb8]
  416aab:	lea    r8,[rip+0x1b846]        # 0x4322f8
  416ab2:	lea    rcx,[rip+0x1ae11]        # 0x4318ca
  416ab9:	mov    r9,rbx
  416abc:	mov    edx,0x2865
  416ac1:	add    rax,0x8
  416ac5:	mov    QWORD PTR [rsp+0x20],rax
  416aca:	call   0x423fa0
  416acf:	jmp    0x4167ae
  416ad4:	mov    rdx,r13
  416ad7:	mov    r8,rbp
  416ada:	mov    rcx,rbx
  416add:	call   0x413f70
  416ae2:	movzx  edx,BYTE PTR [rbp+0xf4]
  416ae9:	shl    eax,0x7
  416aec:	and    edx,0x7f
  416aef:	or     eax,edx
  416af1:	mov    BYTE PTR [rbp+0xf4],al
  416af7:	jmp    0x4167b3
  416afc:	lea    rcx,[rbp+0x18]
  416b00:	mov    rdx,r13
  416b03:	call   0x41f8a0
  416b08:	mov    rdi,rax
  416b0b:	jmp    0x4167ae
  416b10:	lea    r8,[rip+0x1b777]        # 0x43228e
  416b17:	lea    rcx,[rip+0x1adac]        # 0x4318ca
  416b1e:	mov    r9,r13
  416b21:	mov    edx,0x2745
  416b26:	call   0x423fa0
  416b2b:	jmp    0x416934
  416b30:	mov    rdx,r13
  416b33:	mov    r8,rbp
  416b36:	mov    rcx,rbx
  416b39:	call   0x413f70
  416b3e:	mov    rdx,QWORD PTR [rip+0x21fcb]        # 0x438b10
  416b45:	mov    rdi,rbp
  416b48:	mov    DWORD PTR [rdx],eax
  416b4a:	jmp    0x4167ae
  416b4f:	lea    rcx,[rbp+0xd8]
  416b56:	mov    rdx,r13
  416b59:	call   0x41f8a0
  416b5e:	mov    rdi,rax
  416b61:	jmp    0x4167ae
  416b66:	lea    rdx,[rip+0x1b7de]        # 0x43234b
  416b6d:	mov    rcx,r13
  416b70:	mov    rbx,QWORD PTR [rip+0x28f1d]        # 0x43fa94
  416b77:	call   rbx
  416b79:	xor    edx,edx
  416b7b:	test   eax,eax
  416b7d:	jne    0x416bc8
  416b7f:	mov    BYTE PTR [rbp+0x90],dl
  416b85:	jmp    0x4167b3
  416b8a:	mov    rdx,r13
  416b8d:	mov    r8,rbp
  416b90:	mov    rcx,rbx
  416b93:	call   0x413f70
  416b98:	movzx  edx,BYTE PTR [rbp+0xf4]
  416b9f:	and    eax,0x1
  416ba2:	shl    eax,0x4
  416ba5:	and    edx,0xffffffef
  416ba8:	or     eax,edx
  416baa:	mov    BYTE PTR [rbp+0xf4],al
  416bb0:	jmp    0x4167b3
  416bb5:	mov    rdx,r13
  416bb8:	mov    rcx,rbp
  416bbb:	call   0x41f8a0
  416bc0:	mov    rdi,rax
  416bc3:	jmp    0x4167ae
  416bc8:	lea    rdx,[rip+0x1b780]        # 0x43234f
  416bcf:	mov    rcx,r13
  416bd2:	call   rbx
  416bd4:	test   eax,eax
  416bd6:	mov    edx,0x1
  416bdb:	je     0x416b7f
  416bdd:	lea    rdx,[rip+0x1b773]        # 0x432357
  416be4:	mov    rcx,r13
  416be7:	call   rbx
  416be9:	test   eax,eax
  416beb:	mov    edx,0x2
  416bf0:	je     0x416b7f
  416bf2:	cmp    DWORD PTR [r12],0x0
  416bf7:	jne    0x416c5d
  416bf9:	and    BYTE PTR [rbp+0xf5],0xfd
  416c00:	mov    edx,0x2
  416c05:	jmp    0x416b7f
  416c0a:	lea    rcx,[rbp+0x40]
  416c0e:	mov    rdx,r13
  416c11:	call   0x41f8a0
  416c16:	mov    rdi,rax
  416c19:	jmp    0x4167ae
  416c1e:	lea    rcx,[rbp+0x48]
  416c22:	mov    rdx,r13
  416c25:	call   0x41f8a0
  416c2a:	mov    rdi,rax
  416c2d:	jmp    0x4167ae
  416c32:	mov    rdx,r13
  416c35:	mov    r8,rbp
  416c38:	mov    rcx,rbx
  416c3b:	call   0x413f70
  416c40:	movzx  edx,BYTE PTR [rbp+0xf4]
  416c47:	and    eax,0x1
  416c4a:	shl    eax,0x5
  416c4d:	and    edx,0xffffffdf
  416c50:	or     eax,edx
  416c52:	mov    BYTE PTR [rbp+0xf4],al
  416c58:	jmp    0x4167b3
  416c5d:	lea    rax,[rip+0x1b6dc]        # 0x432340
  416c64:	lea    r8,[rip+0x1b6f5]        # 0x432360
  416c6b:	lea    rcx,[rip+0x1ac58]        # 0x4318ca
  416c72:	mov    r9,r13
  416c75:	mov    dx,0x1dd2
  416c79:	mov    QWORD PTR [rsp+0x20],rax
  416c7e:	call   0x423fa0
  416c83:	cmp    DWORD PTR [r12],0x0
  416c88:	je     0x416bf9
  416c8e:	lea    rax,[rip+0x1b6c2]        # 0x432357
  416c95:	lea    r9,[rip+0x1b6af]        # 0x43234b
  416c9c:	lea    r8,[rip+0x1b6f5]        # 0x432398
  416ca3:	lea    rcx,[rip+0x1ac20]        # 0x4318ca
  416caa:	mov    edx,0x1df2
  416caf:	mov    QWORD PTR [rsp+0x28],rax
  416cb4:	lea    rax,[rip+0x1b694]        # 0x43234f
  416cbb:	mov    QWORD PTR [rsp+0x20],rax
  416cc0:	call   0x423fa0
  416cc5:	jmp    0x416bf9
  416cca:	lea    rcx,[rbp+0xc0]
  416cd1:	mov    rdx,r13
  416cd4:	call   0x41f8a0
  416cd9:	mov    rdi,rax
  416cdc:	jmp    0x4167ae
  416ce1:	lea    rcx,[rbp+0x50]
  416ce5:	mov    rdx,r13
  416ce8:	call   0x41f8a0
  416ced:	mov    rdi,rax
  416cf0:	jmp    0x4167ae
  416cf5:	mov    rdx,r13
  416cf8:	mov    r8,rbp
  416cfb:	mov    rcx,rbx
  416cfe:	call   0x413f70
  416d03:	movzx  edx,BYTE PTR [rbp+0xf5]
  416d0a:	and    eax,0x1
  416d0d:	shl    eax,0x3
  416d10:	and    edx,0xfffffff7
  416d13:	or     eax,edx
  416d15:	mov    BYTE PTR [rbp+0xf5],al
  416d1b:	cmp    DWORD PTR [r12],0x0
  416d20:	je     0x4167b3
  416d26:	lea    r8,[rip+0x1b713]        # 0x432440
  416d2d:	lea    rcx,[rip+0x1ab96]        # 0x4318ca
  416d34:	mov    r9,r13
  416d37:	mov    edx,0x2a77
  416d3c:	call   0x423fa0
  416d41:	jmp    0x4167b3
  416d46:	lea    rcx,[rbp+0x58]
  416d4a:	mov    rdx,r13
  416d4d:	call   0x41f8a0
  416d52:	mov    rdi,rax
  416d55:	jmp    0x4167ae
  416d5a:	mov    rdx,r13
  416d5d:	mov    r8,rbp
  416d60:	mov    rcx,rbx
  416d63:	call   0x413f70
  416d68:	movzx  edx,BYTE PTR [rbp+0xf5]
  416d6f:	and    eax,0x1
  416d72:	shl    eax,0x2
  416d75:	and    edx,0xfffffffb
  416d78:	or     eax,edx
  416d7a:	mov    BYTE PTR [rbp+0xf5],al
  416d80:	jmp    0x4167b3
  416d85:	lea    rcx,[rbp+0x60]
  416d89:	mov    rdx,r13
  416d8c:	call   0x41f8a0
  416d91:	mov    rdi,rax
  416d94:	jmp    0x4167ae
  416d99:	nop    DWORD PTR [rax+0x0]
  416da0:	lea    rax,[rip+0x1b759]        # 0x432500
  416da7:	ret    
  416da8:	nop
  416da9:	nop
  416daa:	nop
  416dab:	nop
  416dac:	nop
  416dad:	nop
  416dae:	nop
  416daf:	nop
  416db0:	push   rbx
  416db1:	mov    rax,QWORD PTR [rsp+0x30]
  416db6:	test   rdx,rdx
  416db9:	mov    r11d,r8d
  416dbc:	lea    rbx,[r9+rax*1]
  416dc0:	je     0x416e30
  416dc2:	cmp    r8b,0x5d
  416dc6:	mov    ecx,0x5b
  416dcb:	lea    rax,[rdx+0x1]
  416dcf:	cmovne ecx,r8d
  416dd3:	cmp    r9,rbx
  416dd6:	mov    BYTE PTR [rdx],cl
  416dd8:	jne    0x416df0
  416dda:	jmp    0x416e17
  416ddc:	nop    DWORD PTR [rax+0x0]
  416de0:	add    r9,0x1
  416de4:	lea    rax,[rcx+0x1]
  416de8:	mov    BYTE PTR [rcx],r10b
  416deb:	cmp    r9,rbx
  416dee:	je     0x416e17
  416df0:	movzx  r10d,BYTE PTR [r9]
  416df4:	mov    rcx,rax
  416df7:	cmp    r10b,r11b
  416dfa:	jne    0x416de0
  416dfc:	mov    BYTE PTR [rax],r11b
  416dff:	movzx  r10d,BYTE PTR [r9]
  416e03:	add    r9,0x1
  416e07:	add    rcx,0x1
  416e0b:	cmp    r9,rbx
  416e0e:	lea    rax,[rcx+0x1]
  416e12:	mov    BYTE PTR [rcx],r10b
  416e15:	jne    0x416df0
  416e17:	mov    BYTE PTR [rax],r8b
  416e1a:	mov    BYTE PTR [rax+0x1],0x0
  416e1e:	add    rax,0x1
  416e22:	sub    rax,rdx
  416e25:	pop    rbx
  416e26:	ret    
  416e27:	nop    WORD PTR [rax+rax*1+0x0]
  416e30:	add    rax,0x2
  416e34:	cmp    r9,rbx
  416e37:	je     0x416e25
  416e39:	nop    DWORD PTR [rax+0x0]
  416e40:	xor    edx,edx
  416e42:	cmp    BYTE PTR [r9],r11b
  416e45:	sete   dl
  416e48:	add    r9,0x1
  416e4c:	add    rax,rdx
  416e4f:	cmp    r9,rbx
  416e52:	jne    0x416e40
  416e54:	pop    rbx
  416e55:	ret    
  416e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416e60:	push   rbp
  416e61:	push   rdi
  416e62:	push   rsi
  416e63:	push   rbx
  416e64:	sub    rsp,0x28
  416e68:	mov    rbx,rcx
  416e6b:	mov    rbp,rdx
  416e6e:	xor    edx,edx
  416e70:	mov    rsi,r8
  416e73:	call   0x40d520
  416e78:	xor    edx,edx
  416e7a:	mov    rcx,rbx
  416e7d:	mov    edi,esi
  416e7f:	call   0x40d520
  416e84:	mov    edx,0x63
  416e89:	mov    rcx,rbx
  416e8c:	call   0x40d520
  416e91:	mov    edx,esi
  416e93:	mov    rcx,rbx
  416e96:	call   0x40d490
  416e9b:	cmp    WORD PTR [rbx],0x700
  416ea0:	ja     0x416ed0
  416ea2:	test   rsi,rsi
  416ea5:	mov    eax,0xffffffff
  416eaa:	mov    rcx,rbx
  416ead:	cmove  edi,eax
  416eb0:	mov    edx,edi
  416eb2:	call   0x40d490
  416eb7:	mov    r8,rsi
  416eba:	mov    rdx,rbp
  416ebd:	mov    rcx,rbx
  416ec0:	add    rsp,0x28
  416ec4:	pop    rbx
  416ec5:	pop    rsi
  416ec6:	pop    rdi
  416ec7:	pop    rbp
  416ec8:	jmp    0x40d260
  416ecd:	nop    DWORD PTR [rax]
  416ed0:	lea    rdx,[rbx+0x70]
  416ed4:	mov    r8d,0x5
  416eda:	mov    rcx,rbx
  416edd:	call   0x40d260
  416ee2:	jmp    0x416ea2
  416ee4:	xchg   ax,ax
  416ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416ef0:	push   rbp
  416ef1:	push   rdi
  416ef2:	push   rsi
  416ef3:	push   rbx
  416ef4:	sub    rsp,0x128
  416efb:	mov    rbp,r8
  416efe:	xor    r8d,r8d
  416f01:	mov    rsi,rcx
  416f04:	cmp    rdx,rbp
  416f07:	mov    rbx,rdx
  416f0a:	lea    rdi,[rsp+0x20]
  416f0f:	jne    0x416f1c
  416f11:	jmp    0x416f53
  416f13:	add    rbx,0x1
  416f17:	cmp    rbp,rbx
  416f1a:	je     0x416f53
  416f1c:	movzx  r9d,BYTE PTR [rbx]
  416f20:	movsxd r10,r8d
  416f23:	lea    eax,[r8+0x1]
  416f27:	cmp    r9b,0x27
  416f2b:	mov    BYTE PTR [rsp+r10*1+0x20],r9b
  416f30:	je     0x416f70
  416f32:	cmp    eax,0xfd
  416f37:	mov    r8d,eax
  416f3a:	jle    0x416f13
  416f3c:	mov    rdx,rdi
  416f3f:	mov    rcx,rsi
  416f42:	add    rbx,0x1
  416f46:	call   0x40d2f0
  416f4b:	xor    r8d,r8d
  416f4e:	cmp    rbp,rbx
  416f51:	jne    0x416f1c
  416f53:	mov    rdx,rdi
  416f56:	mov    rcx,rsi
  416f59:	call   0x40d2f0
  416f5e:	nop
  416f5f:	add    rsp,0x128
  416f66:	pop    rbx
  416f67:	pop    rsi
  416f68:	pop    rdi
  416f69:	pop    rbp
  416f6a:	ret    
  416f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  416f70:	cdqe   
  416f72:	mov    BYTE PTR [rsp+rax*1+0x20],0x27
  416f77:	lea    eax,[r8+0x2]
  416f7b:	jmp    0x416f32
  416f7d:	nop    DWORD PTR [rax]
  416f80:	push   rsi
  416f81:	push   rbx
  416f82:	sub    rsp,0x28
  416f86:	test   rcx,rcx
  416f89:	mov    rsi,rcx
  416f8c:	mov    rbx,rdx
  416f8f:	je     0x416fc0
  416f91:	test   rdx,rdx
  416f94:	je     0x416fc0
  416f96:	movzx  edx,BYTE PTR [rdx]
  416f99:	test   dl,dl
  416f9b:	je     0x416fc0
  416f9d:	mov    rax,rsi
  416fa0:	mov    BYTE PTR [rax],dl
  416fa2:	add    rbx,0x1
  416fa6:	add    rax,0x2
  416faa:	mov    BYTE PTR [rax-0x1],0x0
  416fae:	movzx  edx,BYTE PTR [rbx]
  416fb1:	test   dl,dl
  416fb3:	jne    0x416fa0
  416fb5:	sub    rax,rsi
  416fb8:	add    rsp,0x28
  416fbc:	pop    rbx
  416fbd:	pop    rsi
  416fbe:	ret    
  416fbf:	nop
  416fc0:	lea    rdx,[rip+0x1b6f9]        # 0x4326c0
  416fc7:	lea    rcx,[rip+0x1b6fa]        # 0x4326c8
  416fce:	mov    r8d,0x5b
  416fd4:	call   0x4291e0
  416fd9:	movzx  edx,BYTE PTR [rbx]
  416fdc:	test   dl,dl
  416fde:	jne    0x416f9d
  416fe0:	xor    eax,eax
  416fe2:	jmp    0x416fb8
  416fe4:	xchg   ax,ax
  416fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416ff0:	push   r12
  416ff2:	push   rbp
  416ff3:	push   rdi
  416ff4:	push   rsi
  416ff5:	push   rbx
  416ff6:	sub    rsp,0x40
  416ffa:	cmp    WORD PTR [rcx],0x700
  416fff:	mov    rbx,rcx
  417002:	mov    edi,edx
  417004:	mov    esi,r8d
  417007:	mov    r12d,r9d
  41700a:	jbe    0x417160
  417010:	mov    edx,0xffffffff
  417015:	call   0x40d4d0
  41701a:	mov    edx,0x7
  41701f:	mov    rcx,rbx
  417022:	call   0x40d4d0
  417027:	mov    edx,0x2
  41702c:	mov    rcx,rbx
  41702f:	call   0x40d4d0
  417034:	xor    edx,edx
  417036:	mov    rcx,rbx
  417039:	call   0x40d520
  41703e:	xor    edx,edx
  417040:	mov    rcx,rbx
  417043:	call   0x40d520
  417048:	mov    edx,0x26
  41704d:	mov    rcx,rbx
  417050:	call   0x40d520
  417055:	mov    edx,0x4
  41705a:	mov    rcx,rbx
  41705d:	call   0x40d520
  417062:	mov    edx,0x4
  417067:	mov    rcx,rbx
  41706a:	call   0x40d520
  41706f:	mov    edx,edi
  417071:	mov    rcx,rbx
  417074:	call   0x40d490
  417079:	xor    edx,edx
  41707b:	mov    rcx,rbx
  41707e:	call   0x40d520
  417083:	xor    edx,edx
  417085:	mov    rcx,rbx
  417088:	call   0x40d520
  41708d:	mov    edx,0x26
  417092:	mov    rcx,rbx
  417095:	call   0x40d520
  41709a:	mov    edx,0x4
  41709f:	mov    rcx,rbx
  4170a2:	call   0x40d520
  4170a7:	mov    edx,0x4
  4170ac:	mov    rcx,rbx
  4170af:	call   0x40d520
  4170b4:	movzx  edx,sil
  4170b8:	mov    rcx,rbx
  4170bb:	call   0x40d490
  4170c0:	xor    edx,edx
  4170c2:	mov    rcx,rbx
  4170c5:	call   0x40d520
  4170ca:	xor    edx,edx
  4170cc:	mov    rcx,rbx
  4170cf:	call   0x40d520
  4170d4:	mov    edx,0x26
  4170d9:	mov    rcx,rbx
  4170dc:	call   0x40d520
  4170e1:	mov    edx,0x4
  4170e6:	mov    rcx,rbx
  4170e9:	call   0x40d520
  4170ee:	and    esi,0x30
  4170f1:	jne    0x417191
  4170f7:	xor    edx,edx
  4170f9:	mov    rcx,rbx
  4170fc:	call   0x40d520
  417101:	xor    edx,edx
  417103:	mov    rcx,rbx
  417106:	call   0x40d520
  41710b:	xor    edx,edx
  41710d:	mov    rcx,rbx
  417110:	call   0x40d520
  417115:	mov    rcx,rbx
  417118:	mov    edx,0x26
  41711d:	call   0x40d520
  417122:	mov    rcx,rbx
  417125:	mov    edx,0x4
  41712a:	call   0x40d520
  41712f:	mov    rcx,rbx
  417132:	mov    edx,0x4
  417137:	call   0x40d520
  41713c:	mov    edx,DWORD PTR [rsp+0x90]
  417143:	mov    rcx,rbx
  417146:	call   0x40d490
  41714b:	nop
  41714c:	add    rsp,0x40
  417150:	pop    rbx
  417151:	pop    rsi
  417152:	pop    rdi
  417153:	pop    rbp
  417154:	pop    r12
  417156:	ret    
  417157:	nop    WORD PTR [rax+rax*1+0x0]
  417160:	lea    rbp,[rsp+0x20]
  417165:	mov    edx,0xe
  41716a:	call   0x40d4d0
  41716f:	lea    rdx,[rip+0x1b568]        # 0x4326de
  417176:	mov    rcx,rbp
  417179:	call   0x416f80
  41717e:	mov    rdx,rbp
  417181:	mov    r8,rax
  417184:	mov    rcx,rbx
  417187:	call   0x40d260
  41718c:	jmp    0x417027
  417191:	mov    rcx,rbx
  417194:	mov    edx,0x4
  417199:	call   0x40d520
  41719e:	mov    edx,r12d
  4171a1:	mov    rcx,rbx
  4171a4:	call   0x40d490
  4171a9:	jmp    0x417101
  4171ae:	xchg   ax,ax
  4171b0:	push   r14
  4171b2:	push   r13
  4171b4:	push   r12
  4171b6:	push   rbp
  4171b7:	push   rdi
  4171b8:	push   rsi
  4171b9:	push   rbx
  4171ba:	sub    rsp,0x20
  4171be:	test   rcx,rcx
  4171c1:	mov    rbx,rcx
  4171c4:	mov    rsi,rdx
  4171c7:	mov    r12d,r8d
  4171ca:	je     0x417300
  4171d0:	cmp    rcx,rdx
  4171d3:	ja     0x417300
  4171d9:	mov    rax,rdx
  4171dc:	sub    rax,rcx
  4171df:	test   al,0x1
  4171e1:	jne    0x417300
  4171e7:	cmp    rbx,rsi
  4171ea:	je     0x417240
  4171ec:	lea    r14,[rip+0x1b565]        # 0x432758
  4171f3:	lea    rbp,[rsi-0x2]
  4171f7:	mov    edx,0x20
  4171fc:	nop    DWORD PTR [rax+0x0]
  417200:	cmp    BYTE PTR [rbx+0x1],0x0
  417204:	jne    0x417260
  417206:	movzx  r13d,BYTE PTR [rbx]
  41720a:	lea    eax,[r13-0x22]
  41720e:	cmp    al,0x39
  417210:	ja     0x4172f0
  417216:	movzx  eax,al
  417219:	movsxd rax,DWORD PTR [r14+rax*4]
  41721d:	add    rax,r14
  417220:	jmp    rax
  417222:	test   r12d,r12d
  417225:	je     0x4172f0
  41722b:	movzx  ecx,dl
  41722e:	call   QWORD PTR [rip+0x28910]        # 0x43fb44
  417234:	test   eax,eax
  417236:	jne    0x4172f0
  41723c:	nop    DWORD PTR [rax+0x0]
  417240:	mov    rax,rbx
  417243:	add    rsp,0x20
  417247:	pop    rbx
  417248:	pop    rsi
  417249:	pop    rdi
  41724a:	pop    rbp
  41724b:	pop    r12
  41724d:	pop    r13
  41724f:	pop    r14
  417251:	ret    
  417252:	lea    rax,[rbx+0x4]
  417256:	cmp    rsi,rax
  417259:	jae    0x417320
  41725f:	nop
  417260:	add    rbx,0x2
  417264:	mov    edx,0x20
  417269:	cmp    rsi,rbx
  41726c:	jne    0x417200
  41726e:	xchg   ax,ax
  417270:	mov    rax,rsi
  417273:	add    rsp,0x20
  417277:	pop    rbx
  417278:	pop    rsi
  417279:	pop    rdi
  41727a:	pop    rbp
  41727b:	pop    r12
  41727d:	pop    r13
  41727f:	pop    r14
  417281:	ret    
  417282:	cmp    r13b,0x5b
  417286:	mov    edi,0x5d
  41728b:	cmovne edi,r13d
  41728f:	cmp    rsi,rbx
  417292:	ja     0x417360
  417298:	lea    rdx,[rip+0x1b421]        # 0x4326c0
  41729f:	lea    rcx,[rip+0x1b47a]        # 0x432720
  4172a6:	mov    r8d,0x281
  4172ac:	call   0x4291e0
  4172b1:	jmp    0x4172b6
  4172b3:	mov    rbx,rcx
  4172b6:	lea    rcx,[rbx+0x2]
  4172ba:	cmp    rsi,rcx
  4172bd:	je     0x417270
  4172bf:	cmp    BYTE PTR [rbx+0x2],dil
  4172c3:	jne    0x4172b3
  4172c5:	cmp    BYTE PTR [rbx+0x3],0x0
  4172c9:	jne    0x4172b3
  4172cb:	lea    rcx,[rbx+0x4]
  4172cf:	cmp    rsi,rcx
  4172d2:	je     0x417270
  4172d4:	cmp    dil,BYTE PTR [rbx+0x4]
  4172d8:	jne    0x4172e0
  4172da:	cmp    BYTE PTR [rbx+0x5],0x0
  4172de:	je     0x4172b3
  4172e0:	mov    edx,r13d
  4172e3:	mov    rbx,rcx
  4172e6:	jmp    0x417269
  4172e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4172f0:	add    rbx,0x2
  4172f4:	mov    edx,r13d
  4172f7:	jmp    0x417269
  4172fc:	nop    DWORD PTR [rax+0x0]
  417300:	lea    rdx,[rip+0x1b3b9]        # 0x4326c0
  417307:	lea    rcx,[rip+0x1b3e2]        # 0x4326f0
  41730e:	mov    r8d,0x29b
  417314:	call   0x4291e0
  417319:	jmp    0x4171e7
  41731e:	xchg   ax,ax
  417320:	lea    rdx,[rip+0x1b424]        # 0x43274b
  417327:	mov    r8d,0x4
  41732d:	mov    rcx,rbx
  417330:	call   0x429530
  417335:	test   eax,eax
  417337:	jne    0x417373
  417339:	nop    DWORD PTR [rax+0x0]
  417340:	add    rbx,0x2
  417344:	cmp    rsi,rbx
  417347:	jbe    0x417264
  41734d:	cmp    BYTE PTR [rbx],0xa
  417350:	jne    0x417340
  417352:	cmp    BYTE PTR [rbx+0x1],0x0
  417356:	jne    0x417340
  417358:	jmp    0x417260
  41735d:	nop    DWORD PTR [rax]
  417360:	mov    rax,rsi
  417363:	sub    rax,rbx
  417366:	test   al,0x1
  417368:	je     0x4172b6
  41736e:	jmp    0x417298
  417373:	lea    rdx,[rip+0x1b3d5]        # 0x43274f
  41737a:	mov    r8d,0x4
  417380:	mov    rcx,rbx
  417383:	call   0x429530
  417388:	test   eax,eax
  41738a:	jne    0x417260
  417390:	add    rbx,0x2
  417394:	add    rbx,0x2
  417398:	cmp    rbp,rbx
  41739b:	jbe    0x417264
  4173a1:	lea    rdx,[rip+0x1b3ab]        # 0x432753
  4173a8:	mov    r8d,0x4
  4173ae:	mov    rcx,rbx
  4173b1:	call   0x429530
  4173b6:	test   eax,eax
  4173b8:	jne    0x417394
  4173ba:	add    rbx,0x4
  4173be:	mov    edx,0x20
  4173c3:	jmp    0x417269
  4173c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4173d0:	push   rsi
  4173d1:	push   rbx
  4173d2:	sub    rsp,0x28
  4173d6:	xor    esi,esi
  4173d8:	mov    rbx,rdx
  4173db:	lea    rax,[rcx-0x2]
  4173df:	jmp    0x4173e4
  4173e1:	add    esi,0x1
  4173e4:	lea    rcx,[rax+0x2]
  4173e8:	xor    r8d,r8d
  4173eb:	mov    rdx,rbx
  4173ee:	call   0x4171b0
  4173f3:	cmp    rax,rbx
  4173f6:	jne    0x4173e1
  4173f8:	mov    eax,esi
  4173fa:	add    rsp,0x28
  4173fe:	pop    rbx
  4173ff:	pop    rsi
  417400:	ret    
  417401:	nop    DWORD PTR [rax+rax*1+0x0]
  417406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417410:	push   r14
  417412:	push   r13
  417414:	push   r12
  417416:	push   rbp
  417417:	push   rdi
  417418:	push   rsi
  417419:	push   rbx
  41741a:	sub    rsp,0x40
  41741e:	cmp    WORD PTR [rcx],0x6ff
  417423:	mov    rdi,rcx
  417426:	mov    rbp,rdx
  417429:	mov    rbx,r8
  41742c:	lea    rsi,[rdx+r8*1]
  417430:	jbe    0x417554
  417436:	mov    rdx,rsi
  417439:	mov    rcx,rbp
  41743c:	call   0x4173d0
  417441:	lea    r12d,[rax+rax*1]
  417445:	cmp    eax,0x9
  417448:	movsxd r12,r12d
  41744b:	jle    0x41746f
  41744d:	mov    r9d,0xa
  417453:	mov    r10d,eax
  417456:	sub    r10d,r9d
  417459:	lea    r9d,[r9+r9*4]
  41745d:	add    r10d,0x1
  417461:	movsxd r10,r10d
  417464:	add    r9d,r9d
  417467:	add    r12,r10
  41746a:	cmp    eax,r9d
  41746d:	jge    0x417453
  41746f:	xor    edx,edx
  417471:	mov    rcx,rdi
  417474:	lea    rbx,[rbx+r12*2]
  417478:	call   0x40d520
  41747d:	xor    edx,edx
  41747f:	mov    rcx,rdi
  417482:	call   0x40d520
  417487:	mov    edx,0x63
  41748c:	mov    rcx,rdi
  41748f:	call   0x40d520
  417494:	mov    edx,ebx
  417496:	mov    rcx,rdi
  417499:	call   0x40d490
  41749e:	cmp    WORD PTR [rdi],0x700
  4174a3:	ja     0x417572
  4174a9:	mov    edx,ebx
  4174ab:	mov    rcx,rdi
  4174ae:	mov    r12,rbp
  4174b1:	call   0x40d490
  4174b6:	mov    r13d,0x1
  4174bc:	lea    r14,[rsp+0x20]
  4174c1:	jmp    0x417509
  4174c3:	cmp    rsi,rbx
  4174c6:	jb     0x41752a
  4174c8:	mov    r8,rbx
  4174cb:	mov    rdx,r12
  4174ce:	mov    rcx,rdi
  4174d1:	sub    r8,r12
  4174d4:	call   0x40d260
  4174d9:	cmp    rbx,rsi
  4174dc:	je     0x417545
  4174de:	lea    rdx,[rip+0x1b395]        # 0x43287a
  4174e5:	mov    r8d,r13d
  4174e8:	mov    rcx,r14
  4174eb:	lea    r12,[rbx+0x2]
  4174ef:	add    r13d,0x1
  4174f3:	call   0x4294c8
  4174f8:	mov    r8d,0xffffffff
  4174fe:	mov    rdx,r14
  417501:	mov    rcx,rdi
  417504:	call   0x40d2f0
  417509:	xor    r8d,r8d
  41750c:	mov    rdx,rsi
  41750f:	mov    rcx,r12
  417512:	call   0x4171b0
  417517:	cmp    rbp,rax
  41751a:	mov    rbx,rax
  41751d:	setbe  dl
  417520:	test   rax,rax
  417523:	setne  al
  417526:	test   dl,al
  417528:	jne    0x4174c3
  41752a:	lea    rdx,[rip+0x1b18f]        # 0x4326c0
  417531:	lea    rcx,[rip+0x1b320]        # 0x432858
  417538:	mov    r8d,0x466
  41753e:	call   0x4291e0
  417543:	jmp    0x4174c8
  417545:	add    rsp,0x40
  417549:	pop    rbx
  41754a:	pop    rsi
  41754b:	pop    rdi
  41754c:	pop    rbp
  41754d:	pop    r12
  41754f:	pop    r13
  417551:	pop    r14
  417553:	ret    
  417554:	lea    rdx,[rip+0x1b165]        # 0x4326c0
  41755b:	lea    rcx,[rip+0x1b2de]        # 0x432840
  417562:	mov    r8d,0x44e
  417568:	call   0x4291e0
  41756d:	jmp    0x417436
  417572:	lea    rdx,[rdi+0x70]
  417576:	mov    r8d,0x5
  41757c:	mov    rcx,rdi
  41757f:	call   0x40d260
  417584:	jmp    0x4174a9
  417589:	nop    DWORD PTR [rax+0x0]
  417590:	sub    rsp,0x28
  417594:	movzx  r8d,WORD PTR [rdx+0x44]
  417599:	test   r8w,r8w
  41759d:	je     0x4175a5
  41759f:	test   r8b,0x40
  4175a3:	je     0x4175b1
  4175a5:	call   0x404c20
  4175aa:	xor    eax,eax
  4175ac:	add    rsp,0x28
  4175b0:	ret    
  4175b1:	cmp    WORD PTR [rcx],0x6ff
  4175b6:	mov    eax,0x1
  4175bb:	jbe    0x4175ac
  4175bd:	and    r8d,0x4
  4175c1:	jne    0x4175a5
  4175c3:	jmp    0x4175ac
  4175c5:	nop
  4175c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4175d0:	push   rbp
  4175d1:	push   rdi
  4175d2:	push   rsi
  4175d3:	push   rbx
  4175d4:	sub    rsp,0x68
  4175d8:	test   r9d,r9d
  4175db:	mov    rdi,rcx
  4175de:	mov    rsi,rdx
  4175e1:	mov    rbp,r8
  4175e4:	movsxd rax,r9d
  4175e7:	js     0x4176b0
  4175ed:	cmp    DWORD PTR [rsi+0x30],0x1
  4175f1:	mov    QWORD PTR [rsp+0x50],rax
  4175f6:	je     0x417690
  4175fc:	movzx  r9d,BYTE PTR [rsi+0x9]
  417601:	movzx  r8d,BYTE PTR [rsi+0x20]
  417606:	xor    edx,edx
  417608:	imul   rax,r9
  41760c:	div    r8
  41760f:	lea    rcx,[rax+0x1]
  417613:	mov    QWORD PTR [rsp+0x58],rcx
  417618:	call   0x429538
  41761d:	test   rax,rax
  417620:	mov    rbx,rax
  417623:	je     0x4176c0
  417629:	mov    QWORD PTR [rsp+0x48],rax
  41762e:	lea    rax,[rsp+0x58]
  417633:	lea    r9,[rsp+0x40]
  417638:	xor    r8d,r8d
  41763b:	mov    DWORD PTR [rsi+0x34],0x0
  417642:	mov    rdx,rsi
  417645:	mov    QWORD PTR [rsp+0x30],rax
  41764a:	lea    rax,[rsp+0x48]
  41764f:	mov    rcx,rdi
  417652:	mov    QWORD PTR [rsp+0x40],rbp
  417657:	mov    QWORD PTR [rsp+0x28],rax
  41765c:	lea    rax,[rsp+0x50]
  417661:	mov    QWORD PTR [rsp+0x20],rax
  417666:	call   0x41e9f0
  41766b:	cmp    rax,0xffffffffffffffff
  41766f:	je     0x4176c4
  417671:	mov    rax,QWORD PTR [rsp+0x48]
  417676:	mov    rdi,QWORD PTR [rsp+0xb0]
  41767e:	sub    rax,rbx
  417681:	mov    QWORD PTR [rdi],rax
  417684:	mov    rax,rbx
  417687:	add    rsp,0x68
  41768b:	pop    rbx
  41768c:	pop    rsi
  41768d:	pop    rdi
  41768e:	pop    rbp
  41768f:	ret    
  417690:	mov    rdx,QWORD PTR [rsp+0xb0]
  417698:	mov    QWORD PTR [rdx],rax
  41769b:	mov    rax,rbp
  41769e:	add    rsp,0x68
  4176a2:	pop    rbx
  4176a3:	pop    rsi
  4176a4:	pop    rdi
  4176a5:	pop    rbp
  4176a6:	ret    
  4176a7:	nop    WORD PTR [rax+rax*1+0x0]
  4176b0:	mov    rcx,r8
  4176b3:	call   0x429490
  4176b8:	jmp    0x4175ed
  4176bd:	nop    DWORD PTR [rax]
  4176c0:	xor    eax,eax
  4176c2:	jmp    0x417687
  4176c4:	mov    rcx,rbx
  4176c7:	call   0x429580
  4176cc:	xor    eax,eax
  4176ce:	jmp    0x417687
  4176d0:	push   r12
  4176d2:	push   rbp
  4176d3:	push   rdi
  4176d4:	push   rsi
  4176d5:	push   rbx
  4176d6:	sub    rsp,0x40
  4176da:	test   rdx,rdx
  4176dd:	mov    rbx,rcx
  4176e0:	mov    rsi,rdx
  4176e3:	mov    QWORD PTR [rsp+0x30],0x0
  4176ec:	mov    QWORD PTR [rsp+0x38],0x0
  4176f5:	je     0x417860
  4176fb:	mov    rdi,QWORD PTR [rdx+0x8]
  4176ff:	test   rdi,rdi
  417702:	je     0x417860
  417708:	cmp    QWORD PTR [rdx],0x0
  41770c:	je     0x417860
  417712:	mov    rcx,rdi
  417715:	call   0x429490
  41771a:	mov    rdx,QWORD PTR [rbx+0x68]
  41771e:	lea    rcx,[rsp+0x30]
  417723:	mov    r9d,eax
  417726:	mov    r8,rdi
  417729:	mov    QWORD PTR [rsp+0x20],rcx
  41772e:	mov    rcx,rbx
  417731:	mov    rdx,QWORD PTR [rdx]
  417734:	call   0x4175d0
  417739:	test   rax,rax
  41773c:	mov    rbp,rax
  41773f:	je     0x4178cb
  417745:	mov    rdi,QWORD PTR [rsi]
  417748:	mov    rcx,rdi
  41774b:	call   0x429490
  417750:	mov    rdx,QWORD PTR [rbx+0x68]
  417754:	lea    rcx,[rsp+0x38]
  417759:	mov    r9d,eax
  41775c:	mov    r8,rdi
  41775f:	mov    QWORD PTR [rsp+0x20],rcx
  417764:	mov    rcx,rbx
  417767:	mov    rdx,QWORD PTR [rdx]
  41776a:	call   0x4175d0
  41776f:	test   rax,rax
  417772:	mov    r12,rax
  417775:	je     0x4178bd
  41777b:	mov    r8,QWORD PTR [rsp+0x38]
  417780:	add    r8d,DWORD PTR [rsp+0x30]
  417785:	mov    rcx,rbx
  417788:	mov    eax,DWORD PTR [rsi+0x10]
  41778b:	lea    edi,[r8+0xa]
  41778f:	add    r8d,0xe
  417793:	test   eax,eax
  417795:	cmovne edi,r8d
  417799:	lea    edx,[rdi+0x16]
  41779c:	call   0x40d490
  4177a1:	mov    edx,0x12
  4177a6:	mov    rcx,rbx
  4177a9:	call   0x40d490
  4177ae:	mov    edx,0x2
  4177b3:	mov    rcx,rbx
  4177b6:	call   0x40d4d0
  4177bb:	lea    rdx,[rbx+0x75]
  4177bf:	mov    r8d,0x8
  4177c5:	mov    rcx,rbx
  4177c8:	call   0x40d260
  4177cd:	mov    edx,0x1
  4177d2:	mov    rcx,rbx
  4177d5:	call   0x40d490
  4177da:	test   edi,edi
  4177dc:	je     0x417851
  4177de:	mov    edx,edi
  4177e0:	mov    rcx,rbx
  4177e3:	call   0x40d490
  4177e8:	mov    edx,0x1
  4177ed:	mov    rcx,rbx
  4177f0:	call   0x40d4d0
  4177f5:	movsx  edx,WORD PTR [rsp+0x30]
  4177fa:	mov    rcx,rbx
  4177fd:	call   0x40d4d0
  417802:	mov    r8,QWORD PTR [rsp+0x30]
  417807:	mov    rdx,rbp
  41780a:	mov    rcx,rbx
  41780d:	call   0x40d260
  417812:	movsx  edx,WORD PTR [rsp+0x38]
  417817:	mov    rcx,rbx
  41781a:	call   0x40d4d0
  41781f:	mov    r8,QWORD PTR [rsp+0x38]
  417824:	mov    rdx,r12
  417827:	mov    rcx,rbx
  41782a:	call   0x40d260
  41782f:	mov    edx,DWORD PTR [rsi+0x10]
  417832:	test   edx,edx
  417834:	jne    0x4178b0
  417836:	cmp    r12,QWORD PTR [rsi]
  417839:	je     0x417843
  41783b:	mov    rcx,r12
  41783e:	call   0x429580
  417843:	cmp    rbp,QWORD PTR [rsi+0x8]
  417847:	je     0x417851
  417849:	mov    rcx,rbp
  41784c:	call   0x429580
  417851:	xor    eax,eax
  417853:	add    rsp,0x40
  417857:	pop    rbx
  417858:	pop    rsi
  417859:	pop    rdi
  41785a:	pop    rbp
  41785b:	pop    r12
  41785d:	ret    
  41785e:	xchg   ax,ax
  417860:	mov    rcx,rbx
  417863:	mov    edx,0x16
  417868:	call   0x40d490
  41786d:	mov    rcx,rbx
  417870:	mov    edx,0x12
  417875:	call   0x40d490
  41787a:	mov    rcx,rbx
  41787d:	mov    edx,0x2
  417882:	call   0x40d4d0
  417887:	lea    rdx,[rbx+0x75]
  41788b:	mov    rcx,rbx
  41788e:	mov    r8d,0x8
  417894:	call   0x40d260
  417899:	mov    edx,0x1
  41789e:	mov    rcx,rbx
  4178a1:	call   0x40d490
  4178a6:	jmp    0x417851
  4178a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4178b0:	mov    rcx,rbx
  4178b3:	call   0x40d490
  4178b8:	jmp    0x417836
  4178bd:	cmp    rbp,QWORD PTR [rsi+0x8]
  4178c1:	je     0x4178cb
  4178c3:	mov    rcx,rbp
  4178c6:	call   0x429580
  4178cb:	xor    edx,edx
  4178cd:	mov    rcx,rbx
  4178d0:	call   0x40ab40
  4178d5:	mov    eax,0xffffffff
  4178da:	jmp    0x417853
  4178df:	nop
  4178e0:	push   r12
  4178e2:	push   rbp
  4178e3:	push   rdi
  4178e4:	push   rsi
  4178e5:	push   rbx
  4178e6:	sub    rsp,0x40
  4178ea:	test   r8b,0x1
  4178ee:	mov    rbx,rcx
  4178f1:	mov    rsi,rdx
  4178f4:	mov    edi,r8d
  4178f7:	je     0x417a64
  4178fd:	mov    rbp,QWORD PTR [rip+0x212ac]        # 0x438bb0
  417904:	mov    rax,QWORD PTR [rdx+0x38]
  417908:	mov    edx,DWORD PTR [rbp+0x0]
  41790b:	mov    r12,QWORD PTR [rax]
  41790e:	test   edx,edx
  417910:	jne    0x417ab0
  417916:	cmp    WORD PTR [rbx],0x6ff
  41791b:	ja     0x4179b1
  417921:	movzx  edx,r12b
  417925:	mov    rcx,rbx
  417928:	call   0x40d520
  41792d:	mov    rax,QWORD PTR [rsi+0x38]
  417931:	movsxd r8,r12d
  417934:	mov    rcx,rbx
  417937:	lea    rdx,[rax+0x8]
  41793b:	call   0x40d260
  417940:	mov    eax,DWORD PTR [rbp+0x0]
  417943:	test   eax,eax
  417945:	jne    0x417a90
  41794b:	movzx  edx,BYTE PTR [rsi+0x58]
  41794f:	mov    rcx,rbx
  417952:	shr    dl,0x5
  417955:	and    edx,0x1
  417958:	and    edi,0x4
  41795b:	je     0x417a44
  417961:	call   0x40d490
  417966:	cmp    WORD PTR [rbx],0x6ff
  41796b:	jbe    0x417a54
  417971:	movzx  edx,BYTE PTR [rsi+0x1c]
  417975:	mov    rcx,rbx
  417978:	call   0x40d520
  41797d:	mov    rax,QWORD PTR [rsi]
  417980:	mov    rdx,rsi
  417983:	mov    rcx,rbx
  417986:	call   QWORD PTR [rax+0x20]
  417989:	test   eax,eax
  41798b:	mov    esi,eax
  41798d:	jne    0x417ad0
  417993:	cmp    WORD PTR [rbx],0x6ff
  417998:	ja     0x4179a4
  41799a:	xor    edx,edx
  41799c:	mov    rcx,rbx
  41799f:	call   0x40d520
  4179a4:	mov    eax,esi
  4179a6:	add    rsp,0x40
  4179aa:	pop    rbx
  4179ab:	pop    rsi
  4179ac:	pop    rdi
  4179ad:	pop    rbp
  4179ae:	pop    r12
  4179b0:	ret    
  4179b1:	mov    rdx,QWORD PTR [rsi+0x38]
  4179b5:	mov    rax,QWORD PTR [rbx+0x68]
  4179b9:	lea    rcx,[rsp+0x38]
  4179be:	mov    r9d,r12d
  4179c1:	mov    QWORD PTR [rsp+0x20],rcx
  4179c6:	mov    rcx,rbx
  4179c9:	lea    r8,[rdx+0x8]
  4179cd:	mov    rdx,QWORD PTR [rax]
  4179d0:	call   0x4175d0
  4179d5:	test   rax,rax
  4179d8:	mov    r12,rax
  4179db:	je     0x417ad0
  4179e1:	mov    rdx,QWORD PTR [rsp+0x38]
  4179e6:	shr    rdx,1
  4179e9:	test   dil,0x2
  4179ed:	je     0x417a80
  4179f3:	add    edx,0x1
  4179f6:	mov    rcx,rbx
  4179f9:	movzx  edx,dl
  4179fc:	call   0x40d520
  417a01:	lea    rdx,[rip+0x1ae9f]        # 0x4328a7
  417a08:	mov    r8d,0x2
  417a0e:	mov    rcx,rbx
  417a11:	call   0x40d260
  417a16:	mov    r8,QWORD PTR [rsp+0x38]
  417a1b:	mov    rdx,r12
  417a1e:	mov    rcx,rbx
  417a21:	call   0x40d260
  417a26:	mov    rax,QWORD PTR [rsi+0x38]
  417a2a:	add    rax,0x8
  417a2e:	cmp    r12,rax
  417a31:	je     0x417940
  417a37:	mov    rcx,r12
  417a3a:	call   0x429580
  417a3f:	jmp    0x417940
  417a44:	call   0x40d520
  417a49:	cmp    WORD PTR [rbx],0x6ff
  417a4e:	ja     0x417971
  417a54:	mov    edx,DWORD PTR [rsi+0x8]
  417a57:	mov    rcx,rbx
  417a5a:	call   0x40d490
  417a5f:	jmp    0x417971
  417a64:	xor    edx,edx
  417a66:	call   0x40d520
  417a6b:	mov    rbp,QWORD PTR [rip+0x2113e]        # 0x438bb0
  417a72:	jmp    0x417940
  417a77:	nop    WORD PTR [rax+rax*1+0x0]
  417a80:	movzx  edx,dl
  417a83:	mov    rcx,rbx
  417a86:	call   0x40d520
  417a8b:	jmp    0x417a16
  417a8d:	nop    DWORD PTR [rax]
  417a90:	lea    r8,[rip+0x1ae19]        # 0x4328b0
  417a97:	lea    rcx,[rip+0x1ac22]        # 0x4326c0
  417a9e:	mov    edx,0x66a2
  417aa3:	call   0x423fa0
  417aa8:	jmp    0x41794b
  417aad:	nop    DWORD PTR [rax]
  417ab0:	lea    r8,[rip+0x1adc9]        # 0x432880
  417ab7:	lea    rcx,[rip+0x1ac02]        # 0x4326c0
  417abe:	mov    edx,0x6482
  417ac3:	call   0x423fa0
  417ac8:	jmp    0x417916
  417acd:	nop    DWORD PTR [rax]
  417ad0:	mov    esi,0xffffffff
  417ad5:	jmp    0x4179a4
  417ada:	nop    WORD PTR [rax+rax*1+0x0]
  417ae0:	push   r15
  417ae2:	push   r14
  417ae4:	push   r13
  417ae6:	push   r12
  417ae8:	push   rbp
  417ae9:	push   rdi
  417aea:	push   rsi
  417aeb:	push   rbx
  417aec:	sub    rsp,0x38
  417af0:	movzx  r15d,BYTE PTR [rcx+0x85]
  417af8:	mov    rsi,rcx
  417afb:	mov    rbp,rdx
  417afe:	mov    rdi,r8
  417b01:	mov    DWORD PTR [rsp+0x98],r9d
  417b09:	sar    r15d,0x3
  417b0d:	and    r15d,0x1
  417b11:	mov    DWORD PTR [rsp+0x2c],r15d
  417b16:	je     0x417c50
  417b1c:	mov    edx,0x20
  417b21:	mov    r12d,0x2
  417b27:	call   0x40d520
  417b2c:	xor    eax,eax
  417b2e:	cmp    WORD PTR [rdi],0x0
  417b32:	je     0x417c30
  417b38:	mov    r14d,DWORD PTR [rsp+0x98]
  417b40:	xor    r13d,r13d
  417b43:	mov    r12d,0x2
  417b49:	xor    r15d,r15d
  417b4c:	and    r14d,0x1
  417b50:	mov    rax,QWORD PTR [rbp+0x0]
  417b54:	test   r14d,r14d
  417b57:	mov    ebx,0x8
  417b5c:	mov    rdx,QWORD PTR [rax+r13*1]
  417b60:	je     0x417b6c
  417b62:	mov    rax,QWORD PTR [rdx+0x38]
  417b66:	mov    rbx,QWORD PTR [rax]
  417b69:	add    ebx,0x8
  417b6c:	mov    rax,QWORD PTR [rdx]
  417b6f:	mov    rcx,rsi
  417b72:	add    r15d,0x1
  417b76:	add    r13,0x8
  417b7a:	call   QWORD PTR [rax+0x18]
  417b7d:	add    ebx,eax
  417b7f:	movzx  eax,WORD PTR [rdi]
  417b82:	add    r12d,ebx
  417b85:	cmp    r15d,eax
  417b88:	jl     0x417b50
  417b8a:	mov    edx,DWORD PTR [rsp+0x2c]
  417b8e:	test   edx,edx
  417b90:	jne    0x417c30
  417b96:	movsx  edx,r12w
  417b9a:	mov    rcx,rsi
  417b9d:	call   0x40d4d0
  417ba2:	movsx  edx,WORD PTR [rdi]
  417ba5:	mov    rcx,rsi
  417ba8:	xor    ebx,ebx
  417baa:	call   0x40d4d0
  417baf:	cmp    WORD PTR [rdi],0x0
  417bb3:	je     0x417bdb
  417bb5:	mov    rax,QWORD PTR [rbp+0x0]
  417bb9:	mov    r8d,DWORD PTR [rsp+0x98]
  417bc1:	mov    rcx,rsi
  417bc4:	mov    rdx,QWORD PTR [rax+rbx*8]
  417bc8:	call   0x4178e0
  417bcd:	movzx  eax,WORD PTR [rdi]
  417bd0:	lea    edx,[rbx+0x1]
  417bd3:	add    rbx,0x1
  417bd7:	cmp    edx,eax
  417bd9:	jl     0x417bb5
  417bdb:	mov    edx,0xd7
  417be0:	mov    rcx,rsi
  417be3:	xor    r12d,r12d
  417be6:	call   0x40d520
  417beb:	xor    ebx,ebx
  417bed:	cmp    WORD PTR [rdi],0x0
  417bf1:	je     0x417c15
  417bf3:	mov    rax,QWORD PTR [rbp+0x0]
  417bf7:	xor    r8d,r8d
  417bfa:	mov    rcx,rsi
  417bfd:	add    ebx,0x1
  417c00:	mov    rdx,QWORD PTR [rax+r12*1]
  417c04:	add    r12,0x8
  417c08:	mov    rax,QWORD PTR [rdx]
  417c0b:	call   QWORD PTR [rax+0x28]
  417c0e:	movzx  eax,WORD PTR [rdi]
  417c11:	cmp    ebx,eax
  417c13:	jl     0x417bf3
  417c15:	add    rsp,0x38
  417c19:	pop    rbx
  417c1a:	pop    rsi
  417c1b:	pop    rdi
  417c1c:	pop    rbp
  417c1d:	pop    r12
  417c1f:	pop    r13
  417c21:	pop    r14
  417c23:	pop    r15
  417c25:	ret    
  417c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417c30:	lea    edx,[rax+rax*2]
  417c33:	mov    rcx,rsi
  417c36:	add    edx,r12d
  417c39:	call   0x40d490
  417c3e:	or     DWORD PTR [rsp+0x98],0x4
  417c46:	jmp    0x417ba2
  417c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  417c50:	mov    edx,0xec
  417c55:	call   0x40d520
  417c5a:	cmp    WORD PTR [rdi],0x0
  417c5e:	mov    edx,0x2
  417c63:	jne    0x417b38
  417c69:	jmp    0x417b9a
  417c6e:	xchg   ax,ax
  417c70:	push   r12
  417c72:	push   rbp
  417c73:	push   rdi
  417c74:	push   rsi
  417c75:	push   rbx
  417c76:	sub    rsp,0x40
  417c7a:	mov    rbp,rdx
  417c7d:	lea    rbx,[rsp+0x20]
  417c82:	mov    edx,0xa
  417c87:	mov    rsi,rcx
  417c8a:	mov    rdi,r8
  417c8d:	call   0x40d4d0
  417c92:	lea    rdx,[rip+0x1ac3a]        # 0x4328d3
  417c99:	mov    rcx,rbx
  417c9c:	call   0x416f80
  417ca1:	mov    rdx,rbx
  417ca4:	mov    r8,rax
  417ca7:	mov    rcx,rsi
  417caa:	call   0x40d260
  417caf:	xor    edx,edx
  417cb1:	mov    rcx,rsi
  417cb4:	call   0x40d4d0
  417cb9:	xor    edx,edx
  417cbb:	mov    rcx,rsi
  417cbe:	call   0x40d520
  417cc3:	xor    edx,edx
  417cc5:	mov    rcx,rsi
  417cc8:	call   0x40d520
  417ccd:	mov    edx,0x26
  417cd2:	mov    rcx,rsi
  417cd5:	call   0x40d520
  417cda:	mov    edx,0x4
  417cdf:	mov    rcx,rsi
  417ce2:	call   0x40d520
  417ce7:	mov    edx,0x4
  417cec:	mov    rcx,rsi
  417cef:	call   0x40d520
  417cf4:	mov    edx,DWORD PTR [rbp+0x0]
  417cf7:	mov    rcx,rsi
  417cfa:	call   0x40d490
  417cff:	mov    r12,QWORD PTR [rdi]
  417d02:	test   r12,r12
  417d05:	je     0x417d4a
  417d07:	cmp    WORD PTR [r12+0x8],0x0
  417d0e:	je     0x417d4a
  417d10:	xor    ebp,ebp
  417d12:	xor    edi,edi
  417d14:	mov    rax,QWORD PTR [r12]
  417d18:	xor    r8d,r8d
  417d1b:	mov    rcx,rsi
  417d1e:	add    edi,0x1
  417d21:	mov    rbx,QWORD PTR [rax+rbp*1]
  417d25:	add    rbp,0x8
  417d29:	mov    rdx,rbx
  417d2c:	call   0x4178e0
  417d31:	mov    rax,QWORD PTR [rbx]
  417d34:	xor    r8d,r8d
  417d37:	mov    rdx,rbx
  417d3a:	mov    rcx,rsi
  417d3d:	call   QWORD PTR [rax+0x28]
  417d40:	movzx  eax,WORD PTR [r12+0x8]
  417d46:	cmp    edi,eax
  417d48:	jl     0x417d14
  417d4a:	mov    DWORD PTR [rsi+0x178],0xc
  417d54:	add    rsp,0x40
  417d58:	pop    rbx
  417d59:	pop    rsi
  417d5a:	pop    rdi
  417d5b:	pop    rbp
  417d5c:	pop    r12
  417d5e:	ret    
  417d5f:	nop
  417d60:	push   r15
  417d62:	push   r14
  417d64:	push   r13
  417d66:	push   r12
  417d68:	push   rbp
  417d69:	push   rdi
  417d6a:	push   rsi
  417d6b:	push   rbx
  417d6c:	sub    rsp,0x178
  417d73:	movsxd r8,r8d
  417d76:	mov    rdi,rcx
  417d79:	mov    rbx,QWORD PTR [rdx+r8*8]
  417d7d:	mov    esi,DWORD PTR [rbx+0x64]
  417d80:	mov    r12,QWORD PTR [rbx+0x48]
  417d84:	test   esi,esi
  417d86:	js     0x417e90
  417d8c:	cmp    BYTE PTR [rbx+0x18],0x2
  417d90:	ja     0x417df0
  417d92:	mov    rdx,QWORD PTR [rbx+0x28]
  417d96:	test   rdx,rdx
  417d99:	je     0x417e00
  417d9b:	cmp    DWORD PTR [rdx+0x30],0x1
  417d9f:	je     0x417e00
  417da1:	lea    r11,[rsp+0x70]
  417da6:	mov    r9d,esi
  417da9:	mov    r8,r12
  417dac:	mov    rcx,rdi
  417daf:	mov    QWORD PTR [rsp+0x20],r11
  417db4:	call   0x4175d0
  417db9:	test   rax,rax
  417dbc:	mov    rbp,rax
  417dbf:	mov    esi,DWORD PTR [rsp+0x70]
  417dc3:	je     0x4180b0
  417dc9:	mov    r13d,0x1
  417dcf:	mov    ecx,DWORD PTR [rbx+0x14]
  417dd2:	lea    eax,[rcx-0x22]
  417dd5:	cmp    eax,0xcd
  417dda:	ja     0x418010
  417de0:	lea    rdx,[rip+0x1ab09]        # 0x4328f0
  417de7:	movsxd rax,DWORD PTR [rdx+rax*4]
  417deb:	add    rdx,rax
  417dee:	jmp    rdx
  417df0:	mov    rdx,QWORD PTR [rbx+0x28]
  417df4:	mov    r12,QWORD PTR [r12]
  417df8:	test   rdx,rdx
  417dfb:	jne    0x417d9b
  417dfd:	nop    DWORD PTR [rax]
  417e00:	mov    rbp,r12
  417e03:	xor    r13d,r13d
  417e06:	jmp    0x417dcf
  417e08:	nop    DWORD PTR [rax+rax*1+0x0]
  417e10:	lea    rdx,[rip+0x1aad2]        # 0x4328e9
  417e17:	mov    r8d,0x1
  417e1d:	mov    rcx,rdi
  417e20:	call   0x40d2f0
  417e25:	lea    rdx,[rip+0x1aabf]        # 0x4328eb
  417e2c:	mov    r8d,0x1
  417e32:	mov    rcx,rdi
  417e35:	call   0x40d2f0
  417e3a:	movsxd r8,esi
  417e3d:	mov    rdx,rbp
  417e40:	mov    rcx,rdi
  417e43:	add    r8,rbp
  417e46:	call   0x416ef0
  417e4b:	lea    rdx,[rip+0x1aa99]        # 0x4328eb
  417e52:	mov    r8d,0x1
  417e58:	mov    rcx,rdi
  417e5b:	call   0x40d2f0
  417e60:	cmp    r12,rbp
  417e63:	je     0x418080
  417e69:	test   r13b,r13b
  417e6c:	je     0x418080
  417e72:	mov    rcx,rbp
  417e75:	call   0x429580
  417e7a:	xor    eax,eax
  417e7c:	add    rsp,0x178
  417e83:	pop    rbx
  417e84:	pop    rsi
  417e85:	pop    rdi
  417e86:	pop    rbp
  417e87:	pop    r12
  417e89:	pop    r13
  417e8b:	pop    r14
  417e8d:	pop    r15
  417e8f:	ret    
  417e90:	cmp    WORD PTR [rcx],0x4ff
  417e95:	ja     0x417eaf
  417e97:	mov    eax,DWORD PTR [rbx+0x14]
  417e9a:	lea    edx,[rax-0x22]
  417e9d:	cmp    edx,0x1
  417ea0:	jbe    0x418060
  417ea6:	cmp    eax,0x63
  417ea9:	je     0x418060
  417eaf:	lea    rdx,[rip+0x1aa2b]        # 0x4328e1
  417eb6:	mov    r8d,0x4
  417ebc:	mov    rcx,rdi
  417ebf:	call   0x40d2f0
  417ec4:	xor    eax,eax
  417ec6:	jmp    0x417e7c
  417ec8:	nop    DWORD PTR [rax+rax*1+0x0]
  417ed0:	mov    edx,DWORD PTR [rbx+0x10]
  417ed3:	call   0x421820
  417ed8:	lea    rdx,[rsp+0x40]
  417edd:	mov    rcx,QWORD PTR [rdi+0x28]
  417ee1:	mov    DWORD PTR [rsp+0x20],0x2f
  417ee9:	mov    r9d,esi
  417eec:	mov    r8,rbp
  417eef:	mov    QWORD PTR [rsp+0x28],rdx
  417ef4:	mov    edx,eax
  417ef6:	call   0x40fb10
  417efb:	test   eax,eax
  417efd:	mov    ebx,eax
  417eff:	js     0x418090
  417f05:	lea    rdx,[rip+0x1a9df]        # 0x4328eb
  417f0c:	mov    r8d,0x1
  417f12:	mov    rcx,rdi
  417f15:	call   0x40d2f0
  417f1a:	mov    rdx,QWORD PTR [rsp+0x40]
  417f1f:	movsxd r8,ebx
  417f22:	mov    rcx,rdi
  417f25:	add    r8,rdx
  417f28:	call   0x416ef0
  417f2d:	lea    rdx,[rip+0x1a9b7]        # 0x4328eb
  417f34:	mov    r8d,0x1
  417f3a:	mov    rcx,rdi
  417f3d:	call   0x40d2f0
  417f42:	mov    rcx,QWORD PTR [rsp+0x40]
  417f47:	call   0x429580
  417f4c:	jmp    0x417e60
  417f51:	lea    rdx,[rip+0x1a98e]        # 0x4328e6
  417f58:	mov    r8d,0x2
  417f5e:	mov    rcx,rdi
  417f61:	call   0x40d260
  417f66:	test   esi,esi
  417f68:	je     0x4180ba
  417f6e:	lea    eax,[rsi-0x1]
  417f71:	mov    rbx,rbp
  417f74:	xor    r8d,r8d
  417f77:	lea    r11,[rsp+0x70]
  417f7c:	mov    r14,QWORD PTR [rip+0x20bad]        # 0x438b30
  417f83:	mov    rsi,rax
  417f86:	lea    r15,[rbp+rax*1+0x1]
  417f8b:	jmp    0x417f99
  417f8d:	nop    DWORD PTR [rax]
  417f90:	add    rbx,0x1
  417f94:	cmp    rbx,r15
  417f97:	je     0x417ff4
  417f99:	movzx  r10d,BYTE PTR [rbx]
  417f9d:	movsxd rdx,r8d
  417fa0:	lea    eax,[r8+0x1]
  417fa4:	add    r8d,0x2
  417fa8:	cdqe   
  417faa:	shr    r10b,0x4
  417fae:	movsx  r10,r10b
  417fb2:	movzx  ecx,BYTE PTR [r14+r10*1]
  417fb7:	mov    BYTE PTR [rsp+rdx*1+0x70],cl
  417fbb:	movzx  edx,BYTE PTR [rbx]
  417fbe:	and    edx,0xf
  417fc1:	cmp    r8d,0x100
  417fc8:	movzx  edx,BYTE PTR [r14+rdx*1]
  417fcd:	mov    BYTE PTR [rsp+rax*1+0x70],dl
  417fd1:	jne    0x417f90
  417fd3:	mov    rdx,r11
  417fd6:	mov    rcx,rdi
  417fd9:	add    rbx,0x1
  417fdd:	mov    QWORD PTR [rsp+0x38],r11
  417fe2:	call   0x40d2f0
  417fe7:	xor    r8d,r8d
  417fea:	cmp    rbx,r15
  417fed:	mov    r11,QWORD PTR [rsp+0x38]
  417ff2:	jne    0x417f99
  417ff4:	lea    rbp,[rbp+rsi*1+0x1]
  417ff9:	mov    rdx,r11
  417ffc:	mov    rcx,rdi
  417fff:	call   0x40d2f0
  418004:	jmp    0x417e60
  418009:	nop    DWORD PTR [rax+0x0]
  418010:	mov    edx,DWORD PTR [rbx+0x10]
  418013:	call   0x421820
  418018:	lea    rdx,[rsp+0x40]
  41801d:	mov    rcx,QWORD PTR [rdi+0x28]
  418021:	mov    DWORD PTR [rsp+0x20],0x2f
  418029:	mov    r9d,esi
  41802c:	mov    r8,rbp
  41802f:	mov    QWORD PTR [rsp+0x28],rdx
  418034:	mov    edx,eax
  418036:	call   0x40fb10
  41803b:	test   eax,eax
  41803d:	js     0x418090
  41803f:	mov    rdx,QWORD PTR [rsp+0x40]
  418044:	movsxd r8,eax
  418047:	mov    rcx,rdi
  41804a:	add    r8,rdx
  41804d:	call   0x416ef0
  418052:	jmp    0x417f42
  418057:	nop    WORD PTR [rax+rax*1+0x0]
  418060:	lea    rdx,[rip+0x1a877]        # 0x4328de
  418067:	mov    r8d,0x2
  41806d:	mov    rcx,rdi
  418070:	call   0x40d2f0
  418075:	xor    eax,eax
  418077:	jmp    0x417e7c
  41807c:	nop    DWORD PTR [rax+0x0]
  418080:	xor    eax,eax
  418082:	jmp    0x417e7c
  418087:	nop    WORD PTR [rax+rax*1+0x0]
  418090:	cmp    r12,rbp
  418093:	je     0x4180b0
  418095:	test   r13b,r13b
  418098:	je     0x4180b0
  41809a:	mov    rcx,rbp
  41809d:	call   0x429580
  4180a2:	mov    eax,0xffffffff
  4180a7:	jmp    0x417e7c
  4180ac:	nop    DWORD PTR [rax+0x0]
  4180b0:	mov    eax,0xffffffff
  4180b5:	jmp    0x417e7c
  4180ba:	xor    r8d,r8d
  4180bd:	lea    r11,[rsp+0x70]
  4180c2:	jmp    0x417ff9
  4180c7:	nop    WORD PTR [rax+rax*1+0x0]
  4180d0:	push   rsi
  4180d1:	push   rbx
  4180d2:	sub    rsp,0x28
  4180d6:	test   rdx,rdx
  4180d9:	mov    rsi,rcx
  4180dc:	mov    rbx,rdx
  4180df:	je     0x4180e5
  4180e1:	add    DWORD PTR [rdx+0x8],0x1
  4180e5:	lea    rcx,[rsi+0x160]
  4180ec:	call   0x404700
  4180f1:	mov    QWORD PTR [rsi+0x160],rbx
  4180f8:	add    rsp,0x28
  4180fc:	pop    rbx
  4180fd:	pop    rsi
  4180fe:	ret    
  4180ff:	nop
  418100:	cmp    WORD PTR [rcx],0x701
  418105:	mov    BYTE PTR [rcx+0xf1],dl
  41810b:	ja     0x418110
  41810d:	repz ret 
  41810f:	nop
  418110:	xor    edx,edx
  418112:	jmp    0x4176d0
  418117:	nop    WORD PTR [rax+rax*1+0x0]
  418120:	movzx  eax,BYTE PTR [rcx]
  418123:	cmp    al,0x2d
  418125:	je     0x418160
  418127:	cmp    al,0x2f
  418129:	je     0x418130
  41812b:	lea    rax,[rcx+0x1]
  41812f:	ret    
  418130:	cmp    BYTE PTR [rcx+0x1],0x2a
  418134:	lea    rax,[rcx+0x1]
  418138:	jne    0x41812b
  41813a:	nop    WORD PTR [rax+rax*1+0x0]
  418140:	add    rax,0x1
  418144:	movzx  edx,BYTE PTR [rax]
  418147:	test   dl,dl
  418149:	je     0x418184
  41814b:	cmp    dl,0x2a
  41814e:	jne    0x418140
  418150:	cmp    BYTE PTR [rax+0x1],0x2f
  418154:	jne    0x418140
  418156:	add    rax,0x2
  41815a:	ret    
  41815b:	nop    DWORD PTR [rax+rax*1+0x0]
  418160:	cmp    BYTE PTR [rcx+0x1],0x2d
  418164:	je     0x418178
  418166:	lea    rax,[rcx+0x1]
  41816a:	ret    
  41816b:	nop    DWORD PTR [rax+rax*1+0x0]
  418170:	cmp    al,0xa
  418172:	je     0x418180
  418174:	movzx  eax,BYTE PTR [rcx+0x1]
  418178:	add    rcx,0x1
  41817c:	test   al,al
  41817e:	jne    0x418170
  418180:	mov    rax,rcx
  418183:	ret    
  418184:	repz ret 
  418186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418190:	mov    edx,0x5d
  418195:	mov    rax,rcx
  418198:	movzx  ecx,BYTE PTR [rcx]
  41819b:	cmp    cl,0x5b
  41819e:	cmove  ecx,edx
  4181a1:	jmp    0x4181a7
  4181a3:	cmp    cl,dl
  4181a5:	je     0x4181b4
  4181a7:	add    rax,0x1
  4181ab:	movzx  edx,BYTE PTR [rax]
  4181ae:	test   dl,dl
  4181b0:	jne    0x4181a3
  4181b2:	repz ret 
  4181b4:	mov    rdx,rax
  4181b7:	add    rax,0x1
  4181bb:	cmp    cl,BYTE PTR [rdx+0x1]
  4181be:	je     0x4181a7
  4181c0:	repz ret 
  4181c2:	nop    DWORD PTR [rax+0x0]
  4181c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4181d0:	sub    rsp,0x28
  4181d4:	test   rcx,rcx
  4181d7:	je     0x4181f1
  4181d9:	movzx  edx,BYTE PTR [rcx]
  4181dc:	cmp    dl,0x2d
  4181df:	je     0x418220
  4181e1:	jg     0x418230
  4181e3:	cmp    dl,0x22
  4181e6:	je     0x418204
  4181e8:	cmp    dl,0x27
  4181eb:	je     0x418204
  4181ed:	test   dl,dl
  4181ef:	jne    0x41823f
  4181f1:	xor    eax,eax
  4181f3:	add    rsp,0x28
  4181f7:	ret    
  4181f8:	nop    DWORD PTR [rax+rax*1+0x0]
  418200:	cmp    dl,al
  418202:	je     0x418260
  418204:	add    rcx,0x1
  418208:	movzx  eax,BYTE PTR [rcx]
  41820b:	test   al,al
  41820d:	jne    0x418200
  41820f:	xor    edx,edx
  418211:	cmp    dl,0x2d
  418214:	jne    0x4181e1
  418216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418220:	call   0x418120
  418225:	mov    rcx,rax
  418228:	jmp    0x4181d9
  41822a:	nop    WORD PTR [rax+rax*1+0x0]
  418230:	cmp    dl,0x3f
  418233:	je     0x418250
  418235:	cmp    dl,0x5b
  418238:	je     0x418280
  41823a:	cmp    dl,0x2f
  41823d:	je     0x418220
  41823f:	movzx  edx,BYTE PTR [rcx+0x1]
  418243:	add    rcx,0x1
  418247:	jmp    0x4181dc
  418249:	nop    DWORD PTR [rax+0x0]
  418250:	mov    rax,rcx
  418253:	add    rsp,0x28
  418257:	ret    
  418258:	nop    DWORD PTR [rax+rax*1+0x0]
  418260:	mov    rax,rcx
  418263:	add    rcx,0x1
  418267:	movzx  eax,BYTE PTR [rax+0x1]
  41826b:	cmp    dl,al
  41826d:	je     0x418204
  41826f:	mov    edx,eax
  418271:	jmp    0x4181dc
  418276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418280:	mov    edx,0x5d
  418285:	jmp    0x418204
  41828a:	nop    WORD PTR [rax+rax*1+0x0]
  418290:	push   r12
  418292:	push   rbp
  418293:	push   rdi
  418294:	push   rsi
  418295:	push   rbx
  418296:	sub    rsp,0x20
  41829a:	test   rdx,rdx
  41829d:	mov    rbp,rcx
  4182a0:	mov    rbx,rdx
  4182a3:	mov    r12,r8
  4182a6:	je     0x41836f
  4182ac:	lea    rax,[rbx-0x1]
  4182b0:	xor    esi,esi
  4182b2:	jmp    0x4182b7
  4182b4:	add    esi,0x1
  4182b7:	lea    rcx,[rax+0x1]
  4182bb:	call   0x4181d0
  4182c0:	test   rax,rax
  4182c3:	jne    0x4182b4
  4182c5:	test   esi,esi
  4182c7:	je     0x418345
  4182c9:	movzx  eax,WORD PTR [r12+0x8]
  4182cf:	cmp    eax,esi
  4182d1:	jl     0x41838d
  4182d7:	cmp    WORD PTR [rbp+0x0],0x701
  4182dd:	mov    BYTE PTR [rbp+0xf1],0x1
  4182e4:	ja     0x418360
  4182e6:	xor    edi,edi
  4182e8:	jmp    0x418317
  4182ea:	nop    WORD PTR [rax+rax*1+0x0]
  4182f0:	mov    r8d,eax
  4182f3:	mov    rdx,rbx
  4182f6:	mov    rcx,rbp
  4182f9:	sub    r8d,ebx
  4182fc:	lea    rbx,[rsi+0x1]
  418300:	call   0x40d2f0
  418305:	mov    rdx,QWORD PTR [r12]
  418309:	mov    r8d,edi
  41830c:	mov    rcx,rbp
  41830f:	add    edi,0x1
  418312:	call   0x417d60
  418317:	mov    rcx,rbx
  41831a:	call   0x4181d0
  41831f:	test   rax,rax
  418322:	mov    rsi,rax
  418325:	jne    0x4182f0
  418327:	mov    r8d,0xffffffff
  41832d:	mov    rdx,rbx
  418330:	mov    rcx,rbp
  418333:	call   0x40d2f0
  418338:	xor    eax,eax
  41833a:	add    rsp,0x20
  41833e:	pop    rbx
  41833f:	pop    rsi
  418340:	pop    rdi
  418341:	pop    rbp
  418342:	pop    r12
  418344:	ret    
  418345:	cmp    WORD PTR [rbp+0x0],0x701
  41834b:	mov    BYTE PTR [rbp+0xf1],0x1
  418352:	jbe    0x418327
  418354:	xor    edx,edx
  418356:	mov    rcx,rbp
  418359:	call   0x4176d0
  41835e:	jmp    0x418327
  418360:	xor    edx,edx
  418362:	mov    rcx,rbp
  418365:	call   0x4176d0
  41836a:	jmp    0x4182e6
  41836f:	lea    rdx,[rip+0x1a34a]        # 0x4326c0
  418376:	lea    rcx,[rip+0x1a8ab]        # 0x432c28
  41837d:	mov    r8d,0xcec
  418383:	call   0x4291e0
  418388:	jmp    0x4182ac
  41838d:	mov    eax,0xffffffff
  418392:	jmp    0x41833a
  418394:	xchg   ax,ax
  418396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4183a0:	push   rbx
  4183a1:	sub    rsp,0x20
  4183a5:	xor    ebx,ebx
  4183a7:	lea    rax,[rcx-0x1]
  4183ab:	jmp    0x4183b3
  4183ad:	nop    DWORD PTR [rax]
  4183b0:	add    ebx,0x1
  4183b3:	lea    rcx,[rax+0x1]
  4183b7:	call   0x4181d0
  4183bc:	test   rax,rax
  4183bf:	jne    0x4183b0
  4183c1:	mov    eax,ebx
  4183c3:	add    rsp,0x20
  4183c7:	pop    rbx
  4183c8:	ret    
  4183c9:	nop    DWORD PTR [rax+0x0]
  4183d0:	movsxd rax,DWORD PTR [rdx+0x20]
  4183d4:	test   rax,rax
  4183d7:	jne    0x4183f5
  4183d9:	mov    r8d,DWORD PTR [rdx+0x1c]
  4183dd:	mov    r9,QWORD PTR [rip+0x207ac]        # 0x438b90
  4183e4:	movsxd rax,DWORD PTR [rdx+0x10]
  4183e8:	test   BYTE PTR [r9+r8*1],0x20
  4183ed:	lea    rcx,[rax+rax*1]
  4183f1:	cmovne rax,rcx
  4183f5:	movzx  ecx,BYTE PTR [rdx+0x18]
  4183f9:	cmp    cl,0x2
  4183fc:	je     0x418452
  4183fe:	cmp    cl,0x4
  418401:	je     0x418430
  418403:	cmp    cl,0x1
  418406:	je     0x418410
  418408:	repz ret 
  41840a:	nop    WORD PTR [rax+rax*1+0x0]
  418410:	cmp    rax,0xff
  418416:	mov    edx,0xff
  41841b:	cmova  rax,rdx
  41841f:	mov    dl,0x1
  418421:	test   rax,rax
  418424:	cmove  rax,rdx
  418428:	ret    
  418429:	nop    DWORD PTR [rax+0x0]
  418430:	cmp    DWORD PTR [rdx+0x1c],0x63
  418434:	je     0x418480
  418436:	cmp    rax,0x7fffffff
  41843c:	mov    edx,0x7fffffff
  418441:	cmova  rax,rdx
  418445:	mov    edx,0x1
  41844a:	test   rax,rax
  41844d:	cmove  rax,rdx
  418451:	ret    
  418452:	mov    edx,DWORD PTR [rdx+0x1c]
  418455:	mov    ecx,0x1f40
  41845a:	and    edx,0xfffffff7
  41845d:	cmp    edx,0xe7
  418463:	sete   dl
  418466:	movzx  edx,dl
  418469:	add    rdx,0x1
  41846d:	cmp    rax,0x1f40
  418473:	cmova  rax,rcx
  418477:	cmp    rdx,rax
  41847a:	cmovae rax,rdx
  41847e:	ret    
  41847f:	nop
  418480:	cmp    rax,0x7ffffffe
  418486:	mov    edx,0x7ffffffe
  41848b:	cmova  rax,rdx
  41848f:	mov    edx,0x2
  418494:	cmp    rax,0x2
  418498:	cmovb  rax,rdx
  41849c:	ret    
  41849d:	nop    DWORD PTR [rax]
  4184a0:	push   r13
  4184a2:	push   r12
  4184a4:	push   rbp
  4184a5:	push   rdi
  4184a6:	push   rsi
  4184a7:	push   rbx
  4184a8:	sub    rsp,0x28
  4184ac:	cmp    WORD PTR [rcx],0x700
  4184b1:	mov    r12,rdx
  4184b4:	mov    r13,rcx
  4184b7:	mov    rsi,r8
  4184ba:	sbb    ebx,ebx
  4184bc:	call   0x4183d0
  4184c1:	mov    edx,DWORD PTR [r12+0x20]
  4184c6:	mov    ecx,DWORD PTR [r12+0x1c]
  4184cb:	mov    rdi,rax
  4184ce:	mov    ebp,eax
  4184d0:	and    ebx,0xffffe1bf
  4184d6:	add    ebx,0x1f40
  4184dc:	call   0x421820
  4184e1:	lea    r9d,[rax-0x22]
  4184e5:	cmp    r9d,0xcd
  4184ec:	ja     0x418569
  4184ee:	lea    r10,[rip+0x1a8c3]        # 0x432db8
  4184f5:	movsxd rax,DWORD PTR [r10+r9*4]
  4184f9:	add    r10,rax
  4184fc:	jmp    r10
  4184ff:	nop
  418500:	lea    rdx,[rip+0x1a7dd]        # 0x432ce4
  418507:	nop    WORD PTR [rax+rax*1+0x0]
  418510:	test   ebp,ebp
  418512:	mov    r8d,0x1
  418518:	je     0x418522
  41851a:	cmp    ebp,ebx
  41851c:	cmovbe ebx,ebp
  41851f:	mov    r8d,ebx
  418522:	mov    rcx,rsi
  418525:	call   0x4294c8
  41852a:	xor    eax,eax
  41852c:	add    rsp,0x28
  418530:	pop    rbx
  418531:	pop    rsi
  418532:	pop    rdi
  418533:	pop    rbp
  418534:	pop    r12
  418536:	pop    r13
  418538:	ret    
  418539:	nop    DWORD PTR [rax+0x0]
  418540:	lea    rdx,[rip+0x1a798]        # 0x432cdf
  418547:	jmp    0x418510
  418549:	nop    DWORD PTR [rax+0x0]
  418550:	lea    rdx,[rip+0x1a169]        # 0x4326c0
  418557:	lea    rcx,[rip+0x1a844]        # 0x432da2
  41855e:	mov    r8d,0x373
  418564:	call   0x4291e0
  418569:	mov    rax,QWORD PTR [rip+0x20640]        # 0x438bb0
  418570:	mov    eax,DWORD PTR [rax]
  418572:	test   eax,eax
  418574:	jne    0x41880c
  41857a:	mov    eax,0xffffffff
  41857f:	mov    BYTE PTR [rsi],0x0
  418582:	add    rsp,0x28
  418586:	pop    rbx
  418587:	pop    rsi
  418588:	pop    rdi
  418589:	pop    rbp
  41858a:	pop    r12
  41858c:	pop    r13
  41858e:	ret    
  41858f:	nop
  418590:	lea    rdx,[rip+0x1a697]        # 0x432c2e
  418597:	movzx  r9d,BYTE PTR [r12+0x1a]
  41859d:	movzx  r8d,BYTE PTR [r12+0x19]
  4185a3:	mov    rcx,rsi
  4185a6:	call   0x4294c8
  4185ab:	xor    eax,eax
  4185ad:	jmp    0x41852c
  4185b2:	lea    rdx,[rip+0x1a7c3]        # 0x432d7c
  4185b9:	jmp    0x418510
  4185be:	xchg   ax,ax
  4185c0:	lea    rdx,[rip+0x1a7b1]        # 0x432d78
  4185c7:	jmp    0x418510
  4185cc:	nop    DWORD PTR [rax+0x0]
  4185d0:	lea    rdx,[rip+0x1a794]        # 0x432d6b
  4185d7:	jmp    0x418510
  4185dc:	nop    DWORD PTR [rax+0x0]
  4185e0:	lea    rdx,[rip+0x1a78a]        # 0x432d71
  4185e7:	jmp    0x418510
  4185ec:	nop    DWORD PTR [rax+0x0]
  4185f0:	lea    rdx,[rip+0x1a72d]        # 0x432d24
  4185f7:	jmp    0x418510
  4185fc:	nop    DWORD PTR [rax+0x0]
  418600:	lea    rdx,[rip+0x1a728]        # 0x432d2f
  418607:	jmp    0x418510
  41860c:	nop    DWORD PTR [rax+0x0]
  418610:	lea    rdx,[rip+0x1a71d]        # 0x432d34
  418617:	jmp    0x418510
  41861c:	nop    DWORD PTR [rax+0x0]
  418620:	lea    rdx,[rip+0x1a679]        # 0x432ca0
  418627:	jmp    0x418510
  41862c:	nop    DWORD PTR [rax+0x0]
  418630:	lea    rdx,[rip+0x1a67b]        # 0x432cb2
  418637:	jmp    0x418510
  41863c:	nop    DWORD PTR [rax+0x0]
  418640:	lea    rdx,[rip+0x1a71b]        # 0x432d62
  418647:	jmp    0x418510
  41864c:	nop    DWORD PTR [rax+0x0]
  418650:	lea    rdx,[rip+0x1a6eb]        # 0x432d42
  418657:	jmp    0x418510
  41865c:	nop    DWORD PTR [rax+0x0]
  418660:	lea    rdx,[rip+0x1a657]        # 0x432cbe
  418667:	jmp    0x418510
  41866c:	nop    DWORD PTR [rax+0x0]
  418670:	lea    rdx,[rip+0x1a6e7]        # 0x432d5e
  418677:	jmp    0x418510
  41867c:	nop    DWORD PTR [rax+0x0]
  418680:	cmp    WORD PTR [r13+0x0],0x6ff
  418687:	jbe    0x41857a
  41868d:	mov    ebp,edi
  41868f:	mov    ebx,0xfa0
  418694:	lea    rdx,[rip+0x1a65a]        # 0x432cf5
  41869b:	shr    ebp,1
  41869d:	jmp    0x418510
  4186a2:	lea    rdx,[rip+0x1a6dc]        # 0x432d85
  4186a9:	jmp    0x418510
  4186ae:	xchg   ax,ax
  4186b0:	lea    rdx,[rip+0x1a6e2]        # 0x432d99
  4186b7:	jmp    0x418510
  4186bc:	nop    DWORD PTR [rax+0x0]
  4186c0:	lea    rdx,[rip+0x1a5ff]        # 0x432cc6
  4186c7:	jmp    0x418510
  4186cc:	nop    DWORD PTR [rax+0x0]
  4186d0:	lea    rdx,[rip+0x1a5fe]        # 0x432cd5
  4186d7:	jmp    0x418510
  4186dc:	nop    DWORD PTR [rax+0x0]
  4186e0:	cmp    BYTE PTR [r12+0x18],0x8
  4186e6:	lea    rdx,[rip+0x1a6a0]        # 0x432d8d
  4186ed:	lea    rax,[rip+0x1a582]        # 0x432c76
  4186f4:	cmove  rdx,rax
  4186f8:	jmp    0x418510
  4186fd:	nop    DWORD PTR [rax]
  418700:	lea    rdx,[rip+0x1a641]        # 0x432d48
  418707:	jmp    0x418510
  41870c:	nop    DWORD PTR [rax+0x0]
  418710:	lea    rdx,[rip+0x1a526]        # 0x432c3d
  418717:	jmp    0x418597
  41871c:	nop    DWORD PTR [rax+0x0]
  418720:	cmp    BYTE PTR [r12+0x18],0x8
  418726:	je     0x41883b
  41872c:	cmp    WORD PTR [r13+0x0],0x6ff
  418733:	jbe    0x41857a
  418739:	mov    ebp,edi
  41873b:	mov    ebx,0xfa0
  418740:	lea    rdx,[rip+0x1a505]        # 0x432c4c
  418747:	shr    ebp,1
  418749:	jmp    0x418510
  41874e:	xchg   ax,ax
  418750:	cmp    WORD PTR [r13+0x0],0x6ff
  418757:	jbe    0x41857a
  41875d:	lea    rdx,[rip+0x1a59b]        # 0x432cff
  418764:	jmp    0x418510
  418769:	nop    DWORD PTR [rax+0x0]
  418770:	cmp    WORD PTR [r13+0x0],0x6ff
  418777:	jbe    0x41857a
  41877d:	lea    rdx,[rip+0x1a565]        # 0x432ce9
  418784:	jmp    0x418510
  418789:	nop    DWORD PTR [rax+0x0]
  418790:	lea    rdx,[rip+0x1a4ec]        # 0x432c83
  418797:	jmp    0x418510
  41879c:	nop    DWORD PTR [rax+0x0]
  4187a0:	lea    rdx,[rip+0x1a4ec]        # 0x432c93
  4187a7:	jmp    0x418510
  4187ac:	nop    DWORD PTR [rax+0x0]
  4187b0:	cmp    BYTE PTR [r12+0x18],0x8
  4187b6:	lea    rdx,[rip+0x1a559]        # 0x432d16
  4187bd:	lea    rax,[rip+0x1a4a3]        # 0x432c67
  4187c4:	cmove  rdx,rax
  4187c8:	jmp    0x418510
  4187cd:	nop    DWORD PTR [rax]
  4187d0:	cmp    WORD PTR [r13+0x0],0x6ff
  4187d7:	jbe    0x41857a
  4187dd:	lea    rdx,[rip+0x1a521]        # 0x432d05
  4187e4:	jmp    0x418510
  4187e9:	nop    DWORD PTR [rax+0x0]
  4187f0:	lea    rdx,[rip+0x1a562]        # 0x432d59
  4187f7:	jmp    0x418510
  4187fc:	nop    DWORD PTR [rax+0x0]
  418800:	lea    rdx,[rip+0x1a54c]        # 0x432d53
  418807:	jmp    0x418510
  41880c:	mov    edx,DWORD PTR [r12+0x20]
  418811:	mov    ecx,DWORD PTR [r12+0x1c]
  418816:	call   0x421820
  41881b:	lea    r8,[rip+0x1a582]        # 0x432da4
  418822:	lea    rcx,[rip+0x19e97]        # 0x4326c0
  418829:	mov    r9d,eax
  41882c:	mov    edx,0x3782
  418831:	call   0x423fa0
  418836:	jmp    0x41857a
  41883b:	lea    rdx,[rip+0x1a417]        # 0x432c59
  418842:	jmp    0x418510
  418847:	nop    WORD PTR [rax+rax*1+0x0]
  418850:	push   r15
  418852:	push   r14
  418854:	push   r13
  418856:	push   r12
  418858:	push   rbp
  418859:	push   rdi
  41885a:	push   rsi
  41885b:	push   rbx
  41885c:	sub    rsp,0x78
  418860:	cmp    WORD PTR [rcx],0x6ff
  418865:	mov    QWORD PTR [rsp+0xc0],rcx
  41886d:	mov    rsi,rdx
  418870:	mov    rbx,r8
  418873:	mov    r13,r9
  418876:	jbe    0x418a50
  41887c:	cmp    QWORD PTR [rsp+0xe0],0x0
  418885:	je     0x418a6e
  41888b:	lea    rdx,[rsi+rbx*1]
  41888f:	mov    rcx,rsi
  418892:	call   0x4173d0
  418897:	mov    ecx,0x200
  41889c:	mov    r14d,eax
  41889f:	call   0x429538
  4188a4:	test   rax,rax
  4188a7:	mov    QWORD PTR [rsp+0x38],rax
  4188ac:	je     0x418a9e
  4188b2:	xor    edi,edi
  4188b4:	test   r14d,r14d
  4188b7:	jle    0x418a91
  4188bd:	lea    rsi,[rsp+0x38]
  4188c2:	lea    rbp,[rsp+0x40]
  4188c7:	mov    QWORD PTR [rsp+0x28],0x0
  4188d0:	mov    r15d,0x200
  4188d6:	xor    r12d,r12d
  4188d9:	xor    edi,edi
  4188db:	lea    rbx,[rdi+0x50]
  4188df:	jmp    0x4188fc
  4188e1:	add    r15,0x200
  4188e8:	mov    rcx,rsi
  4188eb:	mov    rdx,r15
  4188ee:	call   0x4050d0
  4188f3:	test   rax,rax
  4188f6:	je     0x418a30
  4188fc:	cmp    r15,rbx
  4188ff:	jb     0x4188e1
  418901:	lea    ebx,[r12+0x1]
  418906:	lea    rdx,[rip+0x1a7eb]        # 0x4330f8
  41890d:	mov    rcx,rbp
  418910:	mov    r8d,ebx
  418913:	call   0x4294c8
  418918:	test   r13,r13
  41891b:	je     0x41892b
  41891d:	movzx  eax,WORD PTR [r13+0x8]
  418922:	cmp    eax,r12d
  418925:	jg     0x4189d0
  41892b:	mov    rdx,rbp
  41892e:	mov    ecx,DWORD PTR [rdx]
  418930:	add    rdx,0x4
  418934:	lea    eax,[rcx-0x1010101]
  41893a:	not    ecx
  41893c:	and    eax,ecx
  41893e:	and    eax,0x80808080
  418943:	je     0x41892e
  418945:	mov    ecx,eax
  418947:	shr    ecx,0x10
  41894a:	test   eax,0x8080
  41894f:	cmove  eax,ecx
  418952:	lea    rcx,[rdx+0x2]
  418956:	cmove  rdx,rcx
  41895a:	add    al,al
  41895c:	movabs rax,0x2872616863726176
  418966:	sbb    rdx,0x3
  41896a:	mov    QWORD PTR [rdx],rax
  41896d:	mov    eax,0x29
  418972:	mov    DWORD PTR [rdx+0x8],0x30303034
  418979:	mov    WORD PTR [rdx+0xc],ax
  41897d:	mov    rcx,rdi
  418980:	add    rcx,QWORD PTR [rsp+0x38]
  418985:	mov    rdx,rbp
  418988:	call   0x416f80
  41898d:	add    rdi,rax
  418990:	cmp    ebx,r14d
  418993:	je     0x418a8c
  418999:	test   rdi,rdi
  41899c:	je     0x4189b8
  41899e:	mov    rdx,QWORD PTR [rsp+0x38]
  4189a3:	lea    rax,[rdi+0x1]
  4189a7:	mov    BYTE PTR [rdx+rdi*1],0x2c
  4189ab:	mov    rdx,QWORD PTR [rsp+0x38]
  4189b0:	add    rdi,0x2
  4189b4:	mov    BYTE PTR [rdx+rax*1],0x0
  4189b8:	add    QWORD PTR [rsp+0x28],0x8
  4189be:	mov    r12d,ebx
  4189c1:	jmp    0x4188db
  4189c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4189d0:	mov    r8,rbp
  4189d3:	mov    edx,DWORD PTR [r8]
  4189d6:	add    r8,0x4
  4189da:	lea    eax,[rdx-0x1010101]
  4189e0:	not    edx
  4189e2:	and    eax,edx
  4189e4:	and    eax,0x80808080
  4189e9:	je     0x4189d3
  4189eb:	mov    edx,eax
  4189ed:	mov    rcx,QWORD PTR [rsp+0x28]
  4189f2:	shr    edx,0x10
  4189f5:	test   eax,0x8080
  4189fa:	cmove  eax,edx
  4189fd:	lea    rdx,[r8+0x2]
  418a01:	cmove  r8,rdx
  418a05:	add    al,al
  418a07:	mov    rax,QWORD PTR [r13+0x0]
  418a0b:	sbb    r8,0x3
  418a0f:	mov    rdx,QWORD PTR [rax+rcx*1]
  418a13:	mov    rcx,QWORD PTR [rsp+0xc0]
  418a1b:	call   0x4184a0
  418a20:	test   eax,eax
  418a22:	jns    0x41897d
  418a28:	nop    DWORD PTR [rax+rax*1+0x0]
  418a30:	mov    rcx,QWORD PTR [rsp+0x38]
  418a35:	call   0x429580
  418a3a:	xor    eax,eax
  418a3c:	add    rsp,0x78
  418a40:	pop    rbx
  418a41:	pop    rsi
  418a42:	pop    rdi
  418a43:	pop    rbp
  418a44:	pop    r12
  418a46:	pop    r13
  418a48:	pop    r14
  418a4a:	pop    r15
  418a4c:	ret    
  418a4d:	nop    DWORD PTR [rax]
  418a50:	lea    rdx,[rip+0x19c69]        # 0x4326c0
  418a57:	lea    rcx,[rip+0x19de2]        # 0x432840
  418a5e:	mov    r8d,0x399
  418a64:	call   0x4291e0
  418a69:	jmp    0x41887c
  418a6e:	lea    rdx,[rip+0x19c4b]        # 0x4326c0
  418a75:	lea    rcx,[rip+0x1a674]        # 0x4330f0
  418a7c:	mov    r8d,0x39a
  418a82:	call   0x4291e0
  418a87:	jmp    0x41888b
  418a8c:	mov    rax,QWORD PTR [rsp+0x38]
  418a91:	mov    rsi,QWORD PTR [rsp+0xe0]
  418a99:	mov    QWORD PTR [rsi],rdi
  418a9c:	jmp    0x418a3c
  418a9e:	xor    eax,eax
  418aa0:	jmp    0x418a3c
  418aa2:	nop    DWORD PTR [rax+0x0]
  418aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418ab0:	push   r15
  418ab2:	push   r14
  418ab4:	push   r13
  418ab6:	push   r12
  418ab8:	push   rbp
  418ab9:	push   rdi
  418aba:	push   rsi
  418abb:	push   rbx
  418abc:	sub    rsp,0x108
  418ac3:	test   r8,r8
  418ac6:	mov    r14,rcx
  418ac9:	mov    r15,rdx
  418acc:	mov    r13,r8
  418acf:	mov    rbx,r9
  418ad2:	je     0x418ba0
  418ad8:	movzx  esi,WORD PTR [r8+0x8]
  418add:	test   r15,r15
  418ae0:	je     0x418b8f
  418ae6:	mov    edx,0x1
  418aeb:	mov    rcx,r14
  418aee:	call   0x40ab40
  418af3:	cmp    eax,0x1
  418af6:	jne    0x418b8f
  418afc:	mov    rcx,r15
  418aff:	call   0x429490
  418b04:	movzx  edx,WORD PTR [r14]
  418b08:	mov    rdi,rax
  418b0b:	mov    rbp,rax
  418b0e:	cmp    dx,0x500
  418b13:	je     0x418bb0
  418b19:	cmp    dx,0x6ff
  418b1e:	ja     0x418b60
  418b20:	mov    BYTE PTR [r14+0xf1],0x1
  418b28:	mov    r8d,ebp
  418b2b:	mov    rdx,r15
  418b2e:	mov    rcx,r14
  418b31:	call   0x40d2f0
  418b36:	mov    rcx,r14
  418b39:	mov    edx,0x3
  418b3e:	call   0x40ab40
  418b43:	mov    rcx,r14
  418b46:	call   0x40d5c0
  418b4b:	add    rsp,0x108
  418b52:	pop    rbx
  418b53:	pop    rsi
  418b54:	pop    rdi
  418b55:	pop    rbp
  418b56:	pop    r12
  418b58:	pop    r13
  418b5a:	pop    r14
  418b5c:	pop    r15
  418b5e:	ret    
  418b5f:	nop
  418b60:	test   r13,r13
  418b63:	je     0x418b71
  418b65:	cmp    WORD PTR [r13+0x8],0x0
  418b6b:	jne    0x418e00
  418b71:	cmp    dx,0x701
  418b76:	mov    BYTE PTR [r14+0xf1],0x1
  418b7e:	jbe    0x418b28
  418b80:	mov    rdx,rbx
  418b83:	mov    rcx,r14
  418b86:	call   0x4176d0
  418b8b:	test   eax,eax
  418b8d:	je     0x418b28
  418b8f:	mov    eax,0xffffffff
  418b94:	jmp    0x418b4b
  418b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418ba0:	xor    esi,esi
  418ba2:	jmp    0x418add
  418ba7:	nop    WORD PTR [rax+rax*1+0x0]
  418bb0:	mov    rcx,r15
  418bb3:	call   0x4181d0
  418bb8:	test   rax,rax
  418bbb:	je     0x4190c0
  418bc1:	lea    rax,[rdi+0x1e]
  418bc5:	mov    rcx,rax
  418bc8:	mov    QWORD PTR [rsp+0x48],rax
  418bcd:	call   0x429538
  418bd2:	test   rax,rax
  418bd5:	mov    QWORD PTR [rsp+0xc8],rax
  418bdd:	je     0x418dd8
  418be3:	lea    rax,[rsp+0xc8]
  418beb:	mov    rcx,r15
  418bee:	xor    r12d,r12d
  418bf1:	xor    ebx,ebx
  418bf3:	xor    ebp,ebp
  418bf5:	mov    QWORD PTR [rsp+0x150],r14
  418bfd:	mov    QWORD PTR [rsp+0x58],rax
  418c02:	lea    rax,[rsp+0xd0]
  418c0a:	mov    QWORD PTR [rsp+0x50],rax
  418c0f:	call   0x4181d0
  418c14:	test   rax,rax
  418c17:	mov    rdi,rax
  418c1a:	je     0x418cda
  418c20:	mov    rsi,rax
  418c23:	sub    rsi,r15
  418c26:	lea    r14,[rsi+rbx*1]
  418c2a:	lea    rax,[r14+0xc]
  418c2e:	cmp    rax,QWORD PTR [rsp+0x48]
  418c33:	jae    0x418db0
  418c39:	add    rbx,QWORD PTR [rsp+0xc8]
  418c41:	mov    r8,rsi
  418c44:	mov    rdx,r15
  418c47:	lea    esi,[rbp+0x1]
  418c4a:	mov    rcx,rbx
  418c4d:	call   0x429528
  418c52:	mov    rcx,r14
  418c55:	add    rcx,QWORD PTR [rsp+0xc8]
  418c5d:	lea    rdx,[rip+0x19c16]        # 0x43287a
  418c64:	mov    r8d,esi
  418c67:	call   0x4294c8
  418c6c:	movsxd rbx,eax
  418c6f:	add    rbx,r14
  418c72:	test   r13,r13
  418c75:	je     0x418dd0
  418c7b:	movzx  eax,WORD PTR [r13+0x8]
  418c80:	cmp    ebp,eax
  418c82:	jge    0x418dd0
  418c88:	mov    r15,QWORD PTR [rsp+0x50]
  418c8d:	lea    rdx,[rip+0x19be6]        # 0x43287a
  418c94:	mov    r8d,esi
  418c97:	mov    rcx,r15
  418c9a:	call   0x4294c8
  418c9f:	mov    rax,QWORD PTR [r13+0x0]
  418ca3:	mov    rdx,r15
  418ca6:	mov    rcx,QWORD PTR [rax+r12*1]
  418caa:	add    r12,0x8
  418cae:	add    rcx,0x38
  418cb2:	call   0x41f8a0
  418cb7:	test   rax,rax
  418cba:	je     0x418dd0
  418cc0:	lea    r15,[rdi+0x1]
  418cc4:	mov    ebp,esi
  418cc6:	mov    rcx,r15
  418cc9:	call   0x4181d0
  418cce:	test   rax,rax
  418cd1:	mov    rdi,rax
  418cd4:	jne    0x418c20
  418cda:	mov    rcx,r15
  418cdd:	mov    r14,QWORD PTR [rsp+0x150]
  418ce5:	call   0x429490
  418cea:	lea    rdi,[rax+rbx*1]
  418cee:	mov    rsi,rax
  418cf1:	lea    rax,[rdi+0xc]
  418cf5:	cmp    QWORD PTR [rsp+0x48],rax
  418cfa:	jbe    0x418fb0
  418d00:	add    rbx,QWORD PTR [rsp+0xc8]
  418d08:	mov    rdx,r15
  418d0b:	mov    r8,rsi
  418d0e:	mov    rcx,rbx
  418d11:	call   0x429528
  418d16:	mov    rax,QWORD PTR [rsp+0xc8]
  418d1e:	mov    BYTE PTR [rax+rdi*1],0x0
  418d22:	mov    r15,QWORD PTR [rsp+0xc8]
  418d2a:	test   r15,r15
  418d2d:	je     0x418de5
  418d33:	mov    rsi,r15
  418d36:	mov    edx,0x21
  418d3b:	mov    rcx,r14
  418d3e:	mov    BYTE PTR [r14+0xf1],0xf
  418d46:	call   0x40d520
  418d4b:	lea    edx,[rdi+0x1]
  418d4e:	mov    rcx,r14
  418d51:	call   0x40d490
  418d56:	test   r13,r13
  418d59:	mov    rcx,r14
  418d5c:	setne  bl
  418d5f:	movzx  edx,bl
  418d62:	call   0x40d520
  418d67:	mov    r8,rdi
  418d6a:	mov    rdx,r15
  418d6d:	mov    rcx,r14
  418d70:	call   0x40d260
  418d75:	test   bl,bl
  418d77:	je     0x418d9e
  418d79:	mov    rax,QWORD PTR [r13+0x0]
  418d7d:	xor    r9d,r9d
  418d80:	lea    r8,[r13+0x8]
  418d84:	mov    rdx,r13
  418d87:	mov    rcx,r14
  418d8a:	mov    rax,QWORD PTR [rax]
  418d8d:	mov    rax,QWORD PTR [rax+0x38]
  418d91:	cmp    QWORD PTR [rax],0x0
  418d95:	setne  r9b
  418d99:	call   0x417ae0
  418d9e:	mov    rcx,rsi
  418da1:	call   0x429580
  418da6:	jmp    0x418b36
  418dab:	nop    DWORD PTR [rax+rax*1+0x0]
  418db0:	lea    rax,[r14+0x1e]
  418db4:	mov    rcx,QWORD PTR [rsp+0x58]
  418db9:	mov    rdx,rax
  418dbc:	mov    QWORD PTR [rsp+0x48],rax
  418dc1:	call   0x4050d0
  418dc6:	test   rax,rax
  418dc9:	jne    0x418c39
  418dcf:	nop
  418dd0:	mov    r14,QWORD PTR [rsp+0x150]
  418dd8:	mov    rcx,QWORD PTR [rsp+0xc8]
  418de0:	call   0x429580
  418de5:	xor    edx,edx
  418de7:	mov    rcx,r14
  418dea:	call   0x40ab40
  418def:	or     eax,0xffffffff
  418df2:	jmp    0x418b4b
  418df7:	nop    WORD PTR [rax+rax*1+0x0]
  418e00:	mov    rax,QWORD PTR [r14+0x68]
  418e04:	lea    rdx,[rsp+0xa0]
  418e0c:	mov    r9d,edi
  418e0f:	mov    r8,r15
  418e12:	mov    rcx,r14
  418e15:	mov    QWORD PTR [rsp+0x20],rdx
  418e1a:	mov    rdx,QWORD PTR [rax]
  418e1d:	call   0x4175d0
  418e22:	test   rax,rax
  418e25:	mov    r12,rax
  418e28:	je     0x4193a1
  418e2e:	mov    rdx,rax
  418e31:	add    rdx,QWORD PTR [rsp+0xa0]
  418e39:	mov    rcx,rax
  418e3c:	call   0x4173d0
  418e41:	test   eax,eax
  418e43:	mov    DWORD PTR [rsp+0x48],eax
  418e47:	je     0x418fd0
  418e4d:	lea    rax,[rsp+0xc8]
  418e55:	mov    r8,QWORD PTR [rsp+0xa0]
  418e5d:	mov    r9,r13
  418e60:	mov    rdx,r12
  418e63:	mov    rcx,r14
  418e66:	mov    QWORD PTR [rsp+0x20],rax
  418e6b:	call   0x418850
  418e70:	mov    rbp,rax
  418e73:	test   rbp,rbp
  418e76:	je     0x419394
  418e7c:	movzx  eax,WORD PTR [r14]
  418e80:	mov    BYTE PTR [r14+0xf1],0x3
  418e88:	cmp    ax,0x701
  418e8c:	ja     0x4190a0
  418e92:	cmp    ax,0x700
  418e96:	jbe    0x419060
  418e9c:	mov    edx,0xffffffff
  418ea1:	mov    rcx,r14
  418ea4:	call   0x40d4d0
  418ea9:	mov    edx,0xa
  418eae:	mov    rcx,r14
  418eb1:	call   0x40d4d0
  418eb6:	xor    edx,edx
  418eb8:	mov    rcx,r14
  418ebb:	call   0x40d4d0
  418ec0:	mov    eax,DWORD PTR [rsp+0x48]
  418ec4:	test   eax,eax
  418ec6:	jne    0x419040
  418ecc:	xor    edx,edx
  418ece:	mov    rcx,r14
  418ed1:	call   0x40d520
  418ed6:	xor    edx,edx
  418ed8:	mov    rcx,r14
  418edb:	call   0x40d520
  418ee0:	mov    edx,0x63
  418ee5:	mov    rcx,r14
  418ee8:	call   0x40d520
  418eed:	mov    edx,DWORD PTR [rsp+0xa0]
  418ef4:	mov    rcx,r14
  418ef7:	call   0x40d490
  418efc:	cmp    WORD PTR [r14],0x700
  418f02:	ja     0x4193d0
  418f08:	mov    edx,DWORD PTR [rsp+0xa0]
  418f0f:	mov    rcx,r14
  418f12:	call   0x40d490
  418f17:	mov    r8,QWORD PTR [rsp+0xa0]
  418f1f:	mov    rdx,r12
  418f22:	mov    rcx,r14
  418f25:	call   0x40d260
  418f2a:	cmp    r15,r12
  418f2d:	je     0x418f37
  418f2f:	mov    rcx,r12
  418f32:	call   0x429580
  418f37:	mov    r8,QWORD PTR [rsp+0xc8]
  418f3f:	mov    rdx,rbp
  418f42:	mov    rcx,r14
  418f45:	call   0x416e60
  418f4a:	mov    rcx,rbp
  418f4d:	call   0x429580
  418f52:	test   esi,esi
  418f54:	je     0x419030
  418f5a:	lea    eax,[rsi-0x1]
  418f5d:	xor    esi,esi
  418f5f:	lea    rdi,[rax*8+0x8]
  418f67:	jmp    0x418f7d
  418f69:	nop    DWORD PTR [rax+0x0]
  418f70:	add    rsi,0x8
  418f74:	cmp    rsi,rdi
  418f77:	je     0x419030
  418f7d:	mov    rax,QWORD PTR [r13+0x0]
  418f81:	xor    r8d,r8d
  418f84:	mov    rcx,r14
  418f87:	mov    rbx,QWORD PTR [rax+rsi*1]
  418f8b:	mov    rdx,rbx
  418f8e:	call   0x4178e0
  418f93:	mov    rax,QWORD PTR [rbx]
  418f96:	xor    r8d,r8d
  418f99:	mov    rdx,rbx
  418f9c:	mov    rcx,r14
  418f9f:	call   QWORD PTR [rax+0x28]
  418fa2:	test   eax,eax
  418fa4:	je     0x418f70
  418fa6:	jmp    0x418b8f
  418fab:	nop    DWORD PTR [rax+rax*1+0x0]
  418fb0:	lea    rdx,[rdi+0x1e]
  418fb4:	lea    rcx,[rsp+0xc8]
  418fbc:	call   0x4050d0
  418fc1:	test   rax,rax
  418fc4:	jne    0x418d00
  418fca:	jmp    0x418dd8
  418fcf:	nop
  418fd0:	cmp    WORD PTR [r14],0x6ff
  418fd6:	mov    rdi,QWORD PTR [rsp+0xa0]
  418fde:	jbe    0x4193b0
  418fe4:	mov    ecx,0x200
  418fe9:	call   0x429538
  418fee:	test   rax,rax
  418ff1:	mov    QWORD PTR [rsp+0xa8],rax
  418ff9:	je     0x41952d
  418fff:	movzx  edx,WORD PTR [r13+0x8]
  419004:	mov    rbp,rax
  419007:	mov    QWORD PTR [rsp+0x50],0x0
  419010:	test   dx,dx
  419013:	jne    0x4190d0
  419019:	mov    rax,QWORD PTR [rsp+0x50]
  41901e:	mov    QWORD PTR [rsp+0xc8],rax
  419026:	jmp    0x418e73
  41902b:	nop    DWORD PTR [rax+rax*1+0x0]
  419030:	mov    DWORD PTR [r14+0x178],0xa
  41903b:	jmp    0x418b36
  419040:	mov    r8,QWORD PTR [rsp+0xa0]
  419048:	mov    rdx,r12
  41904b:	mov    rcx,r14
  41904e:	call   0x417410
  419053:	jmp    0x418f2a
  419058:	nop    DWORD PTR [rax+rax*1+0x0]
  419060:	mov    rcx,r14
  419063:	lea    rbx,[rsp+0xd0]
  41906b:	mov    edx,0xd
  419070:	call   0x40d4d0
  419075:	lea    rdx,[rip+0x1a082]        # 0x4330fe
  41907c:	mov    rcx,rbx
  41907f:	call   0x416f80
  419084:	mov    rdx,rbx
  419087:	mov    r8,rax
  41908a:	mov    rcx,r14
  41908d:	call   0x40d260
  419092:	jmp    0x418eb6
  419097:	nop    WORD PTR [rax+rax*1+0x0]
  4190a0:	mov    rdx,rbx
  4190a3:	mov    rcx,r14
  4190a6:	call   0x4176d0
  4190ab:	test   eax,eax
  4190ad:	jne    0x419454
  4190b3:	movzx  eax,WORD PTR [r14]
  4190b7:	jmp    0x418e92
  4190bc:	nop    DWORD PTR [rax+0x0]
  4190c0:	xor    esi,esi
  4190c2:	jmp    0x418d36
  4190c7:	nop    WORD PTR [rax+rax*1+0x0]
  4190d0:	movzx  ecx,dx
  4190d3:	mov    edx,0x10
  4190d8:	call   0x4295c8
  4190dd:	test   rax,rax
  4190e0:	mov    QWORD PTR [rsp+0x58],rax
  4190e5:	je     0x41952d
  4190eb:	mov    rax,QWORD PTR [r13+0x0]
  4190ef:	mov    rax,QWORD PTR [rax]
  4190f2:	mov    rax,QWORD PTR [rax+0x38]
  4190f6:	cmp    QWORD PTR [rax],0x0
  4190fa:	jne    0x4191b0
  419100:	add    rdi,r12
  419103:	xor    eax,eax
  419105:	mov    QWORD PTR [rsp+0x168],rbx
  41910d:	mov    rcx,r12
  419110:	mov    rbx,rdi
  419113:	mov    DWORD PTR [rsp+0x50],esi
  419117:	mov    QWORD PTR [rsp+0x60],r12
  41911c:	mov    edi,eax
  41911e:	jmp    0x41912d
  419120:	movzx  eax,WORD PTR [r13+0x8]
  419125:	cmp    eax,edi
  419127:	jle    0x419441
  41912d:	mov    r8d,0x1
  419133:	mov    rdx,rbx
  419136:	call   0x4171b0
  41913b:	cmp    rbx,rax
  41913e:	mov    rsi,rax
  419141:	je     0x419403
  419147:	cmp    BYTE PTR [rax],0x40
  41914a:	lea    rcx,[rax+0x2]
  41914e:	jne    0x419120
  419150:	lea    rbp,[rax+0x2]
  419154:	cmp    rbx,rbp
  419157:	je     0x419525
  41915d:	mov    r12,rbp
  419160:	cmp    BYTE PTR [r12+0x1],0x0
  419166:	jne    0x41917c
  419168:	movzx  ecx,BYTE PTR [r12]
  41916d:	cmp    cl,0x5f
  419170:	je     0x41917c
  419172:	call   QWORD PTR [rip+0x269cc]        # 0x43fb44
  419178:	test   eax,eax
  41917a:	je     0x419185
  41917c:	add    r12,0x2
  419180:	cmp    rbx,r12
  419183:	jne    0x419160
  419185:	movsxd rax,edi
  419188:	mov    r8,r12
  41918b:	add    edi,0x1
  41918e:	shl    rax,0x4
  419192:	add    rax,QWORD PTR [rsp+0x58]
  419197:	sub    r8,rsi
  41919a:	mov    rcx,rbp
  41919d:	mov    QWORD PTR [rax],rsi
  4191a0:	mov    QWORD PTR [rax+0x8],r8
  4191a4:	jmp    0x419120
  4191a9:	nop    DWORD PTR [rax+0x0]
  4191b0:	lea    rcx,[rsp+0xb0]
  4191b8:	mov    rax,QWORD PTR [rsp+0x58]
  4191bd:	lea    rdx,[rsp+0xa8]
  4191c5:	mov    ebp,0x200
  4191ca:	mov    DWORD PTR [rsp+0x9c],esi
  4191d1:	mov    QWORD PTR [rsp+0x68],r12
  4191d6:	mov    QWORD PTR [rsp+0x78],rcx
  4191db:	lea    rcx,[rsp+0xc8]
  4191e3:	mov    QWORD PTR [rsp+0x158],r15
  4191eb:	add    rax,0x8
  4191ef:	mov    QWORD PTR [rsp+0x60],0x0
  4191f8:	mov    DWORD PTR [rsp+0x50],0x0
  419200:	mov    QWORD PTR [rsp+0x80],rcx
  419208:	lea    rcx,[rsp+0xb8]
  419210:	xor    edi,edi
  419212:	mov    r12,rax
  419215:	mov    r15,rbp
  419218:	mov    QWORD PTR [rsp+0x168],rbx
  419220:	mov    QWORD PTR [rsp+0x88],rcx
  419228:	lea    rcx,[rsp+0xc0]
  419230:	mov    rsi,rdx
  419233:	mov    QWORD PTR [rsp+0x90],rcx
  41923b:	lea    rcx,[rsp+0xd0]
  419243:	mov    QWORD PTR [rsp+0x70],rcx
  419248:	mov    rbp,QWORD PTR [r12-0x8]
  41924d:	test   rbp,rbp
  419250:	je     0x4193e7
  419256:	mov    rax,QWORD PTR [r12]
  41925a:	mov    QWORD PTR [rsp+0xc0],rax
  419262:	lea    rbx,[rdi+0x50]
  419266:	jmp    0x419293
  419268:	nop    DWORD PTR [rax+rax*1+0x0]
  419270:	add    r15,0x200
  419277:	mov    rcx,rsi
  41927a:	mov    rdx,r15
  41927d:	call   0x4050d0
  419282:	test   rax,rax
  419285:	je     0x419370
  41928b:	mov    rax,QWORD PTR [rsp+0xc0]
  419293:	add    rax,rbx
  419296:	cmp    r15,rax
  419299:	jb     0x419270
  41929b:	test   rbp,rbp
  41929e:	je     0x41946e
  4192a4:	mov    rbx,QWORD PTR [r12]
  4192a8:	mov    rcx,rdi
  4192ab:	add    rcx,QWORD PTR [rsp+0xa8]
  4192b3:	mov    rdx,rbp
  4192b6:	mov    r8,rbx
  4192b9:	add    rdi,rbx
  4192bc:	call   0x429528
  4192c1:	mov    rax,QWORD PTR [rsp+0xa8]
  4192c9:	lea    rbx,[rdi+0x2]
  4192cd:	mov    rcx,r14
  4192d0:	mov    BYTE PTR [rax+rdi*1],0x20
  4192d4:	mov    rax,QWORD PTR [rsp+0xa8]
  4192dc:	mov    BYTE PTR [rax+rdi*1+0x1],0x0
  4192e1:	mov    rdi,QWORD PTR [rsp+0x60]
  4192e6:	mov    rax,QWORD PTR [r13+0x0]
  4192ea:	mov    rdx,QWORD PTR [rax+rdi*1]
  4192ee:	mov    rdi,QWORD PTR [rsp+0x70]
  4192f3:	mov    r8,rdi
  4192f6:	call   0x4184a0
  4192fb:	cmp    BYTE PTR [rsp+0xd0],0x0
  419303:	je     0x419370
  419305:	mov    rcx,rbx
  419308:	add    rcx,QWORD PTR [rsp+0xa8]
  419310:	mov    rdx,rdi
  419313:	call   0x416f80
  419318:	add    DWORD PTR [rsp+0x50],0x1
  41931d:	lea    rdi,[rax+rbx*1]
  419321:	movzx  eax,WORD PTR [r13+0x8]
  419326:	mov    ebx,DWORD PTR [rsp+0x50]
  41932a:	cmp    ebx,eax
  41932c:	jge    0x41953b
  419332:	test   rdi,rdi
  419335:	je     0x419357
  419337:	mov    rdx,QWORD PTR [rsp+0xa8]
  41933f:	lea    rax,[rdi+0x1]
  419343:	mov    BYTE PTR [rdx+rdi*1],0x2c
  419347:	mov    rdx,QWORD PTR [rsp+0xa8]
  41934f:	add    rdi,0x2
  419353:	mov    BYTE PTR [rdx+rax*1],0x0
  419357:	add    QWORD PTR [rsp+0x60],0x8
  41935d:	add    r12,0x10
  419361:	jmp    0x419248
  419366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419370:	mov    r12,QWORD PTR [rsp+0x68]
  419375:	mov    r15,QWORD PTR [rsp+0x158]
  41937d:	mov    rcx,QWORD PTR [rsp+0x58]
  419382:	call   0x429580
  419387:	mov    rcx,QWORD PTR [rsp+0xa8]
  41938f:	call   0x429580
  419394:	cmp    r15,r12
  419397:	je     0x4193a1
  419399:	mov    rcx,r12
  41939c:	call   0x429580
  4193a1:	xor    edx,edx
  4193a3:	mov    rcx,r14
  4193a6:	call   0x40ab40
  4193ab:	jmp    0x418b8f
  4193b0:	lea    rdx,[rip+0x19309]        # 0x4326c0
  4193b7:	lea    rcx,[rip+0x19482]        # 0x432840
  4193be:	mov    r8d,0x3de
  4193c4:	call   0x4291e0
  4193c9:	jmp    0x418fe4
  4193ce:	xchg   ax,ax
  4193d0:	lea    rdx,[r14+0x70]
  4193d4:	mov    r8d,0x5
  4193da:	mov    rcx,r14
  4193dd:	call   0x40d260
  4193e2:	jmp    0x418f08
  4193e7:	mov    rax,QWORD PTR [r13+0x0]
  4193eb:	mov    rbx,QWORD PTR [rsp+0x60]
  4193f0:	mov    rax,QWORD PTR [rax+rbx*1]
  4193f4:	mov    rax,QWORD PTR [rax+0x38]
  4193f8:	mov    rax,QWORD PTR [rax]
  4193fb:	add    rax,rax
  4193fe:	jmp    0x41925a
  419403:	movzx  eax,WORD PTR [r13+0x8]
  419408:	mov    esi,DWORD PTR [rsp+0x50]
  41940c:	mov    r12,QWORD PTR [rsp+0x60]
  419411:	mov    rbx,QWORD PTR [rsp+0x168]
  419419:	test   eax,eax
  41941b:	jne    0x4191b0
  419421:	mov    QWORD PTR [rsp+0x50],0x0
  41942a:	mov    rcx,QWORD PTR [rsp+0x58]
  41942f:	call   0x429580
  419434:	mov    rbp,QWORD PTR [rsp+0xa8]
  41943c:	jmp    0x419019
  419441:	mov    esi,DWORD PTR [rsp+0x50]
  419445:	mov    r12,QWORD PTR [rsp+0x60]
  41944a:	mov    rbx,QWORD PTR [rsp+0x168]
  419452:	jmp    0x419419
  419454:	cmp    r15,r12
  419457:	je     0x419461
  419459:	mov    rcx,r12
  41945c:	call   0x429580
  419461:	mov    rcx,rbp
  419464:	call   0x429580
  419469:	jmp    0x418b8f
  41946e:	mov    rdx,QWORD PTR [r13+0x0]
  419472:	mov    rbx,QWORD PTR [rsp+0x60]
  419477:	xor    r8d,r8d
  41947a:	mov    r9,QWORD PTR [rsp+0x78]
  41947f:	mov    rcx,r14
  419482:	mov    rax,QWORD PTR [rdx+rbx*1]
  419486:	mov    rax,QWORD PTR [rax+0x38]
  41948a:	add    rax,0x8
  41948e:	mov    QWORD PTR [rsp+0xb0],rax
  419496:	mov    rax,QWORD PTR [rdx+rbx*1]
  41949a:	mov    rax,QWORD PTR [rax+0x38]
  41949e:	mov    rax,QWORD PTR [rax]
  4194a1:	mov    QWORD PTR [rsp+0xc0],rax
  4194a9:	mov    rax,rdi
  4194ac:	add    rax,QWORD PTR [rsp+0xa8]
  4194b4:	mov    QWORD PTR [rsp+0xb8],rax
  4194bc:	mov    rax,r15
  4194bf:	sub    rax,rdi
  4194c2:	mov    rdi,QWORD PTR [rsp+0x80]
  4194ca:	mov    QWORD PTR [rsp+0xc8],rax
  4194d2:	mov    rax,QWORD PTR [r14+0x68]
  4194d6:	mov    rax,QWORD PTR [rax]
  4194d9:	mov    DWORD PTR [rax+0x34],0x0
  4194e0:	mov    rax,QWORD PTR [r14+0x68]
  4194e4:	mov    QWORD PTR [rsp+0x30],rdi
  4194e9:	mov    rdi,QWORD PTR [rsp+0x88]
  4194f1:	mov    QWORD PTR [rsp+0x28],rdi
  4194f6:	mov    rdi,QWORD PTR [rsp+0x90]
  4194fe:	mov    QWORD PTR [rsp+0x20],rdi
  419503:	mov    rdx,QWORD PTR [rax]
  419506:	call   0x41e9f0
  41950b:	cmp    rax,0xffffffffffffffff
  41950f:	je     0x419370
  419515:	mov    rdi,r15
  419518:	sub    rdi,QWORD PTR [rsp+0xc8]
  419520:	jmp    0x4192c1
  419525:	mov    r12,rbx
  419528:	jmp    0x419185
  41952d:	mov    QWORD PTR [rsp+0x58],0x0
  419536:	jmp    0x41937d
  41953b:	mov    esi,DWORD PTR [rsp+0x9c]
  419542:	mov    r12,QWORD PTR [rsp+0x68]
  419547:	mov    QWORD PTR [rsp+0x50],rdi
  41954c:	mov    r15,QWORD PTR [rsp+0x158]
  419554:	mov    rbx,QWORD PTR [rsp+0x168]
  41955c:	jmp    0x41942a
  419561:	nop    DWORD PTR [rax+rax*1+0x0]
  419566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419570:	xor    r9d,r9d
  419573:	xor    r8d,r8d
  419576:	jmp    0x418ab0
  41957b:	nop    DWORD PTR [rax+rax*1+0x0]
  419580:	push   rbx
  419581:	sub    rsp,0x30
  419585:	mov    QWORD PTR [rsp+0x50],r8
  41958a:	mov    rbx,rcx
  41958d:	lea    r8,[rsp+0x50]
  419592:	lea    rcx,[rsp+0x28]
  419597:	mov    QWORD PTR [rsp+0x58],r9
  41959c:	mov    QWORD PTR [rsp+0x28],0x0
  4195a5:	mov    QWORD PTR [rsp+0x20],r8
  4195aa:	call   0x4293c0
  4195af:	test   eax,eax
  4195b1:	js     0x4195e0
  4195b3:	mov    rdx,QWORD PTR [rsp+0x28]
  4195b8:	mov    rcx,rbx
  4195bb:	xor    r9d,r9d
  4195be:	xor    r8d,r8d
  4195c1:	call   0x418ab0
  4195c6:	mov    rcx,QWORD PTR [rsp+0x28]
  4195cb:	mov    ebx,eax
  4195cd:	call   0x429580
  4195d2:	mov    eax,ebx
  4195d4:	add    rsp,0x30
  4195d8:	pop    rbx
  4195d9:	ret    
  4195da:	nop    WORD PTR [rax+rax*1+0x0]
  4195e0:	mov    ebx,0xffffffff
  4195e5:	jmp    0x4195d2
  4195e7:	nop    WORD PTR [rax+rax*1+0x0]
  4195f0:	push   r15
  4195f2:	push   r14
  4195f4:	push   r13
  4195f6:	push   r12
  4195f8:	push   rbp
  4195f9:	push   rdi
  4195fa:	push   rsi
  4195fb:	push   rbx
  4195fc:	sub    rsp,0x68
  419600:	test   rdx,rdx
  419603:	je     0x419920
  419609:	test   r9,r9
  41960c:	je     0x419920
  419612:	mov    r12,rdx
  419615:	mov    edx,0x1
  41961a:	mov    rdi,r9
  41961d:	mov    rsi,r8
  419620:	mov    rbx,rcx
  419623:	call   0x40ab40
  419628:	cmp    eax,0x1
  41962b:	jne    0x419920
  419631:	mov    rdx,rsi
  419634:	mov    rcx,rbx
  419637:	call   0x401be0
  41963c:	test   rax,rax
  41963f:	mov    rsi,rax
  419642:	je     0x419920
  419648:	lea    rbp,[rbx+0x160]
  41964f:	mov    rcx,rdi
  419652:	call   0x404700
  419657:	mov    QWORD PTR [rdi],rsi
  41965a:	mov    rcx,rbp
  41965d:	call   0x404700
  419662:	cmp    WORD PTR [rbx],0x6ff
  419667:	jbe    0x419940
  41966d:	mov    rcx,r12
  419670:	call   0x429490
  419675:	add    DWORD PTR [rsi+0x8],0x1
  419679:	mov    rcx,rbp
  41967c:	mov    r13,rax
  41967f:	call   0x404700
  419684:	cmp    WORD PTR [rbx],0x6ff
  419689:	mov    QWORD PTR [rbx+0x160],rsi
  419690:	jbe    0x419840
  419696:	mov    rax,QWORD PTR [rbx+0x68]
  41969a:	lea    rdx,[rsp+0x38]
  41969f:	mov    r9d,r13d
  4196a2:	mov    r8,r12
  4196a5:	mov    rcx,rbx
  4196a8:	mov    QWORD PTR [rsp+0x30],0x0
  4196b1:	mov    QWORD PTR [rsp+0x20],rdx
  4196b6:	mov    rdx,QWORD PTR [rax]
  4196b9:	call   0x4175d0
  4196be:	test   rax,rax
  4196c1:	mov    rbp,rax
  4196c4:	je     0x4199f0
  4196ca:	lea    rax,[rsp+0x30]
  4196cf:	mov    r9,QWORD PTR [rsp+0xd0]
  4196d7:	mov    r8,QWORD PTR [rsp+0x38]
  4196dc:	mov    rdx,rbp
  4196df:	mov    rcx,rbx
  4196e2:	mov    QWORD PTR [rsp+0x20],rax
  4196e7:	call   0x418850
  4196ec:	test   rax,rax
  4196ef:	mov    r13,rax
  4196f2:	je     0x4199e0
  4196f8:	movzx  eax,WORD PTR [rbx]
  4196fb:	mov    BYTE PTR [rbx+0xf1],0x3
  419702:	cmp    ax,0x701
  419706:	ja     0x419a34
  41970c:	cmp    ax,0x700
  419710:	jbe    0x419a00
  419716:	mov    edx,0xffffffff
  41971b:	mov    rcx,rbx
  41971e:	call   0x40d4d0
  419723:	mov    edx,0xb
  419728:	mov    rcx,rbx
  41972b:	call   0x40d4d0
  419730:	xor    edx,edx
  419732:	mov    rcx,rbx
  419735:	call   0x40d4d0
  41973a:	xor    edx,edx
  41973c:	mov    rcx,rbx
  41973f:	call   0x40d520
  419744:	mov    edx,0x1
  419749:	mov    rcx,rbx
  41974c:	call   0x40d520
  419751:	mov    edx,0x26
  419756:	mov    rcx,rbx
  419759:	call   0x40d520
  41975e:	mov    edx,0x4
  419763:	mov    rcx,rbx
  419766:	call   0x40d520
  41976b:	xor    edx,edx
  41976d:	mov    rcx,rbx
  419770:	call   0x40d520
  419775:	mov    r8,QWORD PTR [rsp+0x30]
  41977a:	mov    rdx,r13
  41977d:	mov    rcx,rbx
  419780:	call   0x416e60
  419785:	mov    r8,QWORD PTR [rsp+0x38]
  41978a:	mov    rdx,rbp
  41978d:	mov    rcx,rbx
  419790:	call   0x417410
  419795:	cmp    r12,rbp
  419798:	je     0x4197a2
  41979a:	mov    rcx,rbp
  41979d:	call   0x429580
  4197a2:	mov    rcx,r13
  4197a5:	call   0x429580
  4197aa:	xor    edx,edx
  4197ac:	mov    rcx,rbx
  4197af:	call   0x40d520
  4197b4:	xor    edx,edx
  4197b6:	mov    rcx,rbx
  4197b9:	call   0x40d520
  4197be:	mov    edx,0x26
  4197c3:	mov    rcx,rbx
  4197c6:	call   0x40d520
  4197cb:	mov    edx,0x4
  4197d0:	mov    rcx,rbx
  4197d3:	call   0x40d520
  4197d8:	mov    edx,0x4
  4197dd:	mov    rcx,rbx
  4197e0:	call   0x40d520
  4197e5:	mov    edx,0x1
  4197ea:	mov    rcx,rbx
  4197ed:	call   0x40d490
  4197f2:	mov    DWORD PTR [rbx+0x178],0xb
  4197fc:	mov    edx,0x3
  419801:	mov    rcx,rbx
  419804:	call   0x40ab40
  419809:	mov    rcx,rbx
  41980c:	call   0x40d5c0
  419811:	mov    ebp,eax
  419813:	test   ebp,ebp
  419815:	jns    0x419925
  41981b:	xor    edx,edx
  41981d:	mov    rcx,rbx
  419820:	call   0x40ab40
  419825:	mov    rcx,rdi
  419828:	call   0x404700
  41982d:	mov    rdx,rsi
  419830:	mov    rcx,rbx
  419833:	call   0x404790
  419838:	mov    eax,ebp
  41983a:	jmp    0x419925
  41983f:	nop
  419840:	movzx  r14d,BYTE PTR [rbx+0x86]
  419848:	lea    r15,[rsi+0x10]
  41984c:	mov    BYTE PTR [rbx+0xf1],0xf
  419853:	mov    rcx,r15
  419856:	call   0x429490
  41985b:	and    r14d,0x1
  41985f:	mov    edx,0xe7
  419864:	mov    rcx,rbx
  419867:	mov    rbp,rax
  41986a:	call   0x40d520
  41986f:	test   r14b,r14b
  419872:	lea    edx,[rbp+r13*1+0x5]
  419877:	je     0x419990
  41987d:	lea    edx,[rdx+rbp*1+0x10]
  419881:	mov    rcx,rbx
  419884:	movsxd r14,ebp
  419887:	movsx  edx,dx
  41988a:	call   0x40d4d0
  41988f:	mov    edx,0x1
  419894:	mov    rcx,rbx
  419897:	call   0x40d520
  41989c:	xor    edx,edx
  41989e:	mov    rcx,rbx
  4198a1:	call   0x40d520
  4198a6:	movzx  edx,bpl
  4198aa:	mov    rcx,rbx
  4198ad:	call   0x40d520
  4198b2:	mov    r8,r14
  4198b5:	mov    rdx,r15
  4198b8:	mov    rcx,rbx
  4198bb:	call   0x40d260
  4198c0:	lea    edx,[r13+rbp*1+0x10]
  4198c5:	mov    rcx,rbx
  4198c8:	movsx  edx,dx
  4198cb:	call   0x40d4d0
  4198d0:	lea    rdx,[rip+0x19840]        # 0x433117
  4198d7:	mov    r8d,0xc
  4198dd:	mov    rcx,rbx
  4198e0:	call   0x40d260
  4198e5:	mov    r8,r14
  4198e8:	mov    rdx,r15
  4198eb:	mov    rcx,rbx
  4198ee:	call   0x40d260
  4198f3:	lea    rdx,[rip+0x1982a]        # 0x433124
  4198fa:	mov    r8d,0x4
  419900:	mov    rcx,rbx
  419903:	call   0x40d260
  419908:	movsxd r8,r13d
  41990b:	mov    rdx,r12
  41990e:	mov    rcx,rbx
  419911:	call   0x40d260
  419916:	jmp    0x4197fc
  41991b:	nop    DWORD PTR [rax+rax*1+0x0]
  419920:	mov    eax,0xffffffff
  419925:	add    rsp,0x68
  419929:	pop    rbx
  41992a:	pop    rsi
  41992b:	pop    rdi
  41992c:	pop    rbp
  41992d:	pop    r12
  41992f:	pop    r13
  419931:	pop    r14
  419933:	pop    r15
  419935:	ret    
  419936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419940:	mov    rcx,r12
  419943:	call   QWORD PTR [rip+0x26143]        # 0x43fa8c
  419949:	test   rax,rax
  41994c:	mov    QWORD PTR [rsi+0x40],rax
  419950:	je     0x4199f0
  419956:	movzx  eax,WORD PTR [rbx]
  419959:	cmp    ax,0x6ff
  41995d:	ja     0x41966d
  419963:	cmp    ax,0x500
  419967:	je     0x41966d
  41996d:	mov    rdx,rsi
  419970:	mov    rcx,rbx
  419973:	mov    BYTE PTR [rsi+0x2e],0x1
  419977:	call   0x404790
  41997c:	xor    edx,edx
  41997e:	mov    rcx,rbx
  419981:	call   0x40ab40
  419986:	xor    eax,eax
  419988:	jmp    0x419925
  41998a:	nop    WORD PTR [rax+rax*1+0x0]
  419990:	mov    rcx,rbx
  419993:	movsx  edx,dx
  419996:	call   0x40d4d0
  41999b:	mov    rcx,rbx
  41999e:	mov    edx,0x1
  4199a3:	call   0x40d520
  4199a8:	xor    edx,edx
  4199aa:	mov    rcx,rbx
  4199ad:	call   0x40d520
  4199b2:	movzx  edx,bpl
  4199b6:	mov    rcx,rbx
  4199b9:	call   0x40d520
  4199be:	mov    rdx,r15
  4199c1:	mov    rcx,rbx
  4199c4:	movsxd r8,ebp
  4199c7:	call   0x40d260
  4199cc:	movsx  edx,r13w
  4199d0:	mov    rcx,rbx
  4199d3:	call   0x40d4d0
  4199d8:	jmp    0x419908
  4199dd:	nop    DWORD PTR [rax]
  4199e0:	cmp    r12,rbp
  4199e3:	je     0x4199f0
  4199e5:	mov    rcx,rbp
  4199e8:	call   0x429580
  4199ed:	nop    DWORD PTR [rax]
  4199f0:	mov    ebp,0xffffffff
  4199f5:	jmp    0x41981b
  4199fa:	nop    WORD PTR [rax+rax*1+0x0]
  419a00:	mov    rcx,rbx
  419a03:	lea    r14,[rsp+0x40]
  419a08:	mov    edx,0xa
  419a0d:	call   0x40d4d0
  419a12:	lea    rdx,[rip+0x196f3]        # 0x43310c
  419a19:	mov    rcx,r14
  419a1c:	call   0x416f80
  419a21:	mov    rdx,r14
  419a24:	mov    r8,rax
  419a27:	mov    rcx,rbx
  419a2a:	call   0x40d260
  419a2f:	jmp    0x419730
  419a34:	xor    edx,edx
  419a36:	mov    rcx,rbx
  419a39:	call   0x4176d0
  419a3e:	movzx  eax,WORD PTR [rbx]
  419a41:	jmp    0x41970c
  419a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419a50:	push   r13
  419a52:	push   r12
  419a54:	push   rbp
  419a55:	push   rdi
  419a56:	push   rsi
  419a57:	push   rbx
  419a58:	sub    rsp,0x68
  419a5c:	test   rdx,rdx
  419a5f:	je     0x419e37
  419a65:	mov    rbx,rcx
  419a68:	mov    rcx,rdx
  419a6b:	mov    rdi,r9
  419a6e:	mov    rbp,r8
  419a71:	mov    rsi,rdx
  419a74:	call   0x429490
  419a79:	cmp    WORD PTR [rbx],0x6ff
  419a7e:	mov    r12,rax
  419a81:	ja     0x419b24
  419a87:	xor    edx,edx
  419a89:	mov    rcx,rbx
  419a8c:	call   0x401be0
  419a91:	test   rax,rax
  419a94:	mov    rdi,rax
  419a97:	mov    QWORD PTR [rsp+0x40],rax
  419a9c:	je     0x419e37
  419aa2:	test   rbp,rbp
  419aa5:	je     0x419b55
  419aab:	cmp    WORD PTR [rbp+0x8],0x0
  419ab0:	je     0x419b55
  419ab6:	mov    BYTE PTR [rax+0x2e],0x1
  419aba:	mov    QWORD PTR [rax+0x38],rbp
  419abe:	mov    rcx,rsi
  419ac1:	call   QWORD PTR [rip+0x25fc5]        # 0x43fa8c
  419ac7:	mov    QWORD PTR [rdi+0x40],rax
  419acb:	mov    rdx,QWORD PTR [rsp+0x40]
  419ad0:	cmp    QWORD PTR [rdx+0x40],0x0
  419ad5:	je     0x419af2
  419ad7:	mov    edx,0x1
  419adc:	mov    rcx,rbx
  419adf:	call   0x40ab40
  419ae4:	cmp    eax,0x1
  419ae7:	je     0x419de0
  419aed:	mov    rdx,QWORD PTR [rsp+0x40]
  419af2:	mov    esi,0xffffffff
  419af7:	mov    QWORD PTR [rdx+0x38],0x0
  419aff:	mov    rcx,rbx
  419b02:	call   0x404790
  419b07:	lea    rcx,[rsp+0x40]
  419b0c:	call   0x404700
  419b11:	mov    r10d,esi
  419b14:	mov    eax,r10d
  419b17:	add    rsp,0x68
  419b1b:	pop    rbx
  419b1c:	pop    rsi
  419b1d:	pop    rdi
  419b1e:	pop    rbp
  419b1f:	pop    r12
  419b21:	pop    r13
  419b23:	ret    
  419b24:	mov    edx,0x1
  419b29:	mov    rcx,rbx
  419b2c:	mov    QWORD PTR [rsp+0x30],0x0
  419b35:	call   0x40ab40
  419b3a:	cmp    eax,0x1
  419b3d:	mov    r10d,0xffffffff
  419b43:	je     0x419b80
  419b45:	mov    eax,r10d
  419b48:	add    rsp,0x68
  419b4c:	pop    rbx
  419b4d:	pop    rsi
  419b4e:	pop    rdi
  419b4f:	pop    rbp
  419b50:	pop    r12
  419b52:	pop    r13
  419b54:	ret    
  419b55:	cmp    WORD PTR [rbx],0x500
  419b5a:	je     0x419cd5
  419b60:	mov    rdx,rsi
  419b63:	xor    r9d,r9d
  419b66:	xor    r8d,r8d
  419b69:	mov    rcx,rbx
  419b6c:	call   0x418ab0
  419b71:	mov    rdx,QWORD PTR [rsp+0x40]
  419b76:	mov    esi,eax
  419b78:	jmp    0x419aff
  419b7d:	nop    DWORD PTR [rax]
  419b80:	mov    rax,QWORD PTR [rbx+0x68]
  419b84:	lea    rdx,[rsp+0x38]
  419b89:	mov    r9d,r12d
  419b8c:	mov    r8,rsi
  419b8f:	mov    rcx,rbx
  419b92:	mov    QWORD PTR [rsp+0x20],rdx
  419b97:	mov    rdx,QWORD PTR [rax]
  419b9a:	call   0x4175d0
  419b9f:	test   rax,rax
  419ba2:	mov    r12,rax
  419ba5:	je     0x419e2d
  419bab:	lea    rax,[rsp+0x30]
  419bb0:	mov    r8,QWORD PTR [rsp+0x38]
  419bb5:	mov    r9,rbp
  419bb8:	mov    rdx,r12
  419bbb:	mov    rcx,rbx
  419bbe:	mov    QWORD PTR [rsp+0x20],rax
  419bc3:	call   0x418850
  419bc8:	test   rax,rax
  419bcb:	mov    r13,rax
  419bce:	je     0x419e20
  419bd4:	movzx  eax,WORD PTR [rbx]
  419bd7:	mov    BYTE PTR [rbx+0xf1],0x3
  419bde:	cmp    ax,0x701
  419be2:	ja     0x419e61
  419be8:	cmp    ax,0x700
  419bec:	ja     0x419e42
  419bf2:	mov    edx,0xd
  419bf7:	mov    rcx,rbx
  419bfa:	lea    rdi,[rsp+0x40]
  419bff:	call   0x40d4d0
  419c04:	lea    rdx,[rip+0x194f3]        # 0x4330fe
  419c0b:	mov    rcx,rdi
  419c0e:	call   0x416f80
  419c13:	mov    rdx,rdi
  419c16:	mov    r8,rax
  419c19:	mov    rcx,rbx
  419c1c:	call   0x40d260
  419c21:	xor    edx,edx
  419c23:	mov    rcx,rbx
  419c26:	call   0x40d4d0
  419c2b:	mov    r8,QWORD PTR [rsp+0x38]
  419c30:	mov    rdx,r12
  419c33:	mov    rcx,rbx
  419c36:	call   0x417410
  419c3b:	mov    r8,QWORD PTR [rsp+0x30]
  419c40:	mov    rdx,r13
  419c43:	mov    rcx,rbx
  419c46:	call   0x416e60
  419c4b:	cmp    rsi,r12
  419c4e:	je     0x419c58
  419c50:	mov    rcx,r12
  419c53:	call   0x429580
  419c58:	mov    rcx,r13
  419c5b:	xor    edi,edi
  419c5d:	xor    r12d,r12d
  419c60:	call   0x429580
  419c65:	cmp    WORD PTR [rbp+0x8],0x0
  419c6a:	je     0x419cae
  419c6c:	nop    DWORD PTR [rax+0x0]
  419c70:	mov    rax,QWORD PTR [rbp+0x0]
  419c74:	xor    r8d,r8d
  419c77:	mov    rcx,rbx
  419c7a:	mov    rsi,QWORD PTR [rax+rdi*1]
  419c7e:	mov    rdx,rsi
  419c81:	call   0x4178e0
  419c86:	mov    rax,QWORD PTR [rsi]
  419c89:	xor    r8d,r8d
  419c8c:	mov    rdx,rsi
  419c8f:	mov    rcx,rbx
  419c92:	call   QWORD PTR [rax+0x28]
  419c95:	test   eax,eax
  419c97:	js     0x419dd3
  419c9d:	movzx  eax,WORD PTR [rbp+0x8]
  419ca1:	add    r12d,0x1
  419ca5:	add    rdi,0x8
  419ca9:	cmp    eax,r12d
  419cac:	jg     0x419c70
  419cae:	mov    edx,0x3
  419cb3:	mov    rcx,rbx
  419cb6:	mov    DWORD PTR [rbx+0x178],0xa
  419cc0:	call   0x40ab40
  419cc5:	mov    rcx,rbx
  419cc8:	call   0x40d5c0
  419ccd:	mov    r10d,eax
  419cd0:	jmp    0x419b45
  419cd5:	lea    rcx,[rbx+0x160]
  419cdc:	call   0x404700
  419ce1:	mov    rax,QWORD PTR [rsp+0x40]
  419ce6:	mov    edx,0x1
  419ceb:	mov    rcx,rbx
  419cee:	mov    QWORD PTR [rbx+0x160],rax
  419cf5:	call   0x40ab40
  419cfa:	cmp    eax,0x1
  419cfd:	jne    0x419e37
  419d03:	mov    rax,QWORD PTR [rsp+0x40]
  419d08:	mov    BYTE PTR [rbx+0xf1],0xf
  419d0f:	lea    rcx,[rax+0x10]
  419d13:	call   0x429490
  419d18:	mov    edx,0xe7
  419d1d:	mov    rdi,rax
  419d20:	mov    rcx,rbx
  419d23:	call   0x40d520
  419d28:	lea    edx,[r12+rdi*2+0x15]
  419d2d:	mov    rcx,rbx
  419d30:	movsx  edx,dx
  419d33:	call   0x40d4d0
  419d38:	mov    edx,0x8
  419d3d:	mov    rcx,rbx
  419d40:	call   0x40d520
  419d45:	xor    edx,edx
  419d47:	mov    rcx,rbx
  419d4a:	call   0x40d520
  419d4f:	movzx  edx,dil
  419d53:	mov    rcx,rbx
  419d56:	call   0x40d520
  419d5b:	mov    rax,QWORD PTR [rsp+0x40]
  419d60:	mov    r8,rdi
  419d63:	mov    rcx,rbx
  419d66:	lea    rdx,[rax+0x10]
  419d6a:	call   0x40d260
  419d6f:	lea    edx,[r12+rdi*1+0x10]
  419d74:	mov    rcx,rbx
  419d77:	movsx  edx,dx
  419d7a:	call   0x40d4d0
  419d7f:	lea    rdx,[rip+0x19391]        # 0x433117
  419d86:	mov    r8d,0xc
  419d8c:	mov    rcx,rbx
  419d8f:	call   0x40d260
  419d94:	mov    rax,QWORD PTR [rsp+0x40]
  419d99:	movsxd r8,edi
  419d9c:	mov    rcx,rbx
  419d9f:	lea    rdx,[rax+0x10]
  419da3:	call   0x40d260
  419da8:	lea    rdx,[rip+0x19375]        # 0x433124
  419daf:	mov    r8d,0x4
  419db5:	mov    rcx,rbx
  419db8:	call   0x40d260
  419dbd:	mov    rcx,rbx
  419dc0:	movsxd r8,r12d
  419dc3:	mov    rdx,rsi
  419dc6:	call   0x40d260
  419dcb:	mov    rcx,rbx
  419dce:	call   0x40d5c0
  419dd3:	mov    r10d,eax
  419dd6:	jmp    0x419b45
  419ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  419de0:	mov    rax,QWORD PTR [rsp+0x40]
  419de5:	mov    rcx,rbx
  419de8:	mov    rdx,QWORD PTR [rax+0x40]
  419dec:	mov    r8,QWORD PTR [rax+0x38]
  419df0:	call   0x418290
  419df5:	test   eax,eax
  419df7:	mov    esi,eax
  419df9:	js     0x419e12
  419dfb:	mov    edx,0x3
  419e00:	mov    rcx,rbx
  419e03:	call   0x40ab40
  419e08:	mov    rcx,rbx
  419e0b:	call   0x40d5c0
  419e10:	mov    esi,eax
  419e12:	mov    rdx,QWORD PTR [rsp+0x40]
  419e17:	jmp    0x419af7
  419e1c:	nop    DWORD PTR [rax+0x0]
  419e20:	cmp    rsi,r12
  419e23:	je     0x419e2d
  419e25:	mov    rcx,r12
  419e28:	call   0x429580
  419e2d:	xor    edx,edx
  419e2f:	mov    rcx,rbx
  419e32:	call   0x40ab40
  419e37:	mov    r10d,0xffffffff
  419e3d:	jmp    0x419b45
  419e42:	mov    rcx,rbx
  419e45:	mov    edx,0xffffffff
  419e4a:	call   0x40d4d0
  419e4f:	mov    edx,0xa
  419e54:	mov    rcx,rbx
  419e57:	call   0x40d4d0
  419e5c:	jmp    0x419c21
  419e61:	mov    rdx,rdi
  419e64:	mov    rcx,rbx
  419e67:	call   0x4176d0
  419e6c:	test   eax,eax
  419e6e:	je     0x419e90
  419e70:	cmp    rsi,r12
  419e73:	je     0x419e7d
  419e75:	mov    rcx,r12
  419e78:	call   0x429580
  419e7d:	mov    rcx,r13
  419e80:	call   0x429580
  419e85:	mov    r10d,0xffffffff
  419e8b:	jmp    0x419b45
  419e90:	movzx  eax,WORD PTR [rbx]
  419e93:	jmp    0x419be8
  419e98:	nop    DWORD PTR [rax+rax*1+0x0]
  419ea0:	push   r15
  419ea2:	push   r14
  419ea4:	push   r13
  419ea6:	push   r12
  419ea8:	push   rbp
  419ea9:	push   rdi
  419eaa:	push   rsi
  419eab:	push   rbx
  419eac:	sub    rsp,0x68
  419eb0:	mov    r14,QWORD PTR [rsp+0xd0]
  419eb8:	test   rdx,rdx
  419ebb:	mov    QWORD PTR [rsp+0x30],0x0
  419ec4:	je     0x41a0b0
  419eca:	test   r9,r9
  419ecd:	je     0x41a0b0
  419ed3:	cmp    WORD PTR [rcx],0x6ff
  419ed8:	jbe    0x41a0b0
  419ede:	mov    rdi,rdx
  419ee1:	mov    edx,0x1
  419ee6:	mov    r12,r9
  419ee9:	mov    rsi,r8
  419eec:	mov    rbx,rcx
  419eef:	call   0x40ab40
  419ef4:	cmp    eax,0x1
  419ef7:	jne    0x41a0b0
  419efd:	mov    rdx,rsi
  419f00:	mov    rcx,rbx
  419f03:	call   0x401be0
  419f08:	test   rax,rax
  419f0b:	mov    r13,rax
  419f0e:	je     0x41a0b0
  419f14:	mov    rcx,r12
  419f17:	call   0x404700
  419f1c:	mov    QWORD PTR [r12],r13
  419f20:	add    DWORD PTR [r13+0x8],0x1
  419f25:	lea    rcx,[rbx+0x160]
  419f2c:	call   0x404700
  419f31:	mov    rcx,rdi
  419f34:	mov    QWORD PTR [rbx+0x160],r13
  419f3b:	call   0x429490
  419f40:	mov    rdx,QWORD PTR [rbx+0x68]
  419f44:	lea    rcx,[rsp+0x38]
  419f49:	mov    r9d,eax
  419f4c:	mov    r8,rdi
  419f4f:	mov    QWORD PTR [rsp+0x20],rcx
  419f54:	mov    rcx,rbx
  419f57:	mov    rdx,QWORD PTR [rdx]
  419f5a:	call   0x4175d0
  419f5f:	test   rax,rax
  419f62:	mov    rsi,rax
  419f65:	je     0x41a151
  419f6b:	lea    rax,[rsp+0x30]
  419f70:	mov    r8,QWORD PTR [rsp+0x38]
  419f75:	mov    r9,r14
  419f78:	mov    rdx,rsi
  419f7b:	mov    rcx,rbx
  419f7e:	mov    QWORD PTR [rsp+0x20],rax
  419f83:	call   0x418850
  419f88:	test   rax,rax
  419f8b:	mov    rbp,rax
  419f8e:	je     0x41a144
  419f94:	movzx  eax,WORD PTR [rbx]
  419f97:	mov    BYTE PTR [rbx+0xf1],0x3
  419f9e:	cmp    ax,0x701
  419fa2:	ja     0x41a160
  419fa8:	cmp    ax,0x700
  419fac:	jbe    0x41a110
  419fb2:	mov    edx,0xffffffff
  419fb7:	mov    rcx,rbx
  419fba:	call   0x40d4d0
  419fbf:	mov    edx,0xd
  419fc4:	mov    rcx,rbx
  419fc7:	call   0x40d4d0
  419fcc:	xor    edx,edx
  419fce:	mov    rcx,rbx
  419fd1:	call   0x40d4d0
  419fd6:	xor    edx,edx
  419fd8:	mov    rcx,rbx
  419fdb:	call   0x40d520
  419fe0:	mov    edx,0x1
  419fe5:	mov    rcx,rbx
  419fe8:	call   0x40d520
  419fed:	mov    edx,0x26
  419ff2:	mov    rcx,rbx
  419ff5:	call   0x40d520
  419ffa:	mov    edx,0x4
  419fff:	mov    rcx,rbx
  41a002:	call   0x40d520
  41a007:	xor    edx,edx
  41a009:	mov    rcx,rbx
  41a00c:	call   0x40d520
  41a011:	mov    r8,QWORD PTR [rsp+0x30]
  41a016:	mov    rdx,rbp
  41a019:	mov    rcx,rbx
  41a01c:	call   0x416e60
  41a021:	mov    r8,QWORD PTR [rsp+0x38]
  41a026:	mov    rdx,rsi
  41a029:	mov    rcx,rbx
  41a02c:	call   0x417410
  41a031:	cmp    rdi,rsi
  41a034:	je     0x41a03e
  41a036:	mov    rcx,rsi
  41a039:	call   0x429580
  41a03e:	mov    rcx,rbp
  41a041:	call   0x429580
  41a046:	test   r14,r14
  41a049:	je     0x41a0c0
  41a04b:	cmp    WORD PTR [r14+0x8],0x0
  41a051:	je     0x41a0c0
  41a053:	xor    edi,edi
  41a055:	xor    ebp,ebp
  41a057:	jmp    0x41a070
  41a059:	nop    DWORD PTR [rax+0x0]
  41a060:	movzx  eax,WORD PTR [r14+0x8]
  41a065:	add    ebp,0x1
  41a068:	add    rdi,0x8
  41a06c:	cmp    eax,ebp
  41a06e:	jle    0x41a0c0
  41a070:	mov    rax,QWORD PTR [r14]
  41a073:	xor    r8d,r8d
  41a076:	mov    rcx,rbx
  41a079:	mov    rsi,QWORD PTR [rax+rdi*1]
  41a07d:	mov    rdx,rsi
  41a080:	call   0x4178e0
  41a085:	mov    rax,QWORD PTR [rsi]
  41a088:	xor    r8d,r8d
  41a08b:	mov    rdx,rsi
  41a08e:	mov    rcx,rbx
  41a091:	call   QWORD PTR [rax+0x28]
  41a094:	test   eax,eax
  41a096:	jns    0x41a060
  41a098:	add    rsp,0x68
  41a09c:	pop    rbx
  41a09d:	pop    rsi
  41a09e:	pop    rdi
  41a09f:	pop    rbp
  41a0a0:	pop    r12
  41a0a2:	pop    r13
  41a0a4:	pop    r14
  41a0a6:	pop    r15
  41a0a8:	ret    
  41a0a9:	nop    DWORD PTR [rax+0x0]
  41a0b0:	mov    eax,0xffffffff
  41a0b5:	jmp    0x41a098
  41a0b7:	nop    WORD PTR [rax+rax*1+0x0]
  41a0c0:	mov    edx,0x3
  41a0c5:	mov    rcx,rbx
  41a0c8:	mov    DWORD PTR [rbx+0x178],0xd
  41a0d2:	call   0x40ab40
  41a0d7:	mov    rcx,rbx
  41a0da:	call   0x40d5c0
  41a0df:	mov    esi,eax
  41a0e1:	test   esi,esi
  41a0e3:	jns    0x41a098
  41a0e5:	xor    edx,edx
  41a0e7:	mov    rcx,rbx
  41a0ea:	call   0x40ab40
  41a0ef:	mov    rcx,r12
  41a0f2:	call   0x404700
  41a0f7:	mov    rdx,r13
  41a0fa:	mov    rcx,rbx
  41a0fd:	call   0x404790
  41a102:	mov    eax,esi
  41a104:	jmp    0x41a098
  41a106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a110:	mov    rcx,rbx
  41a113:	lea    r15,[rsp+0x40]
  41a118:	mov    edx,0xb
  41a11d:	call   0x40d4d0
  41a122:	lea    rdx,[rip+0x19000]        # 0x433129
  41a129:	mov    rcx,r15
  41a12c:	call   0x416f80
  41a131:	mov    rdx,r15
  41a134:	mov    r8,rax
  41a137:	mov    rcx,rbx
  41a13a:	call   0x40d260
  41a13f:	jmp    0x419fcc
  41a144:	cmp    rdi,rsi
  41a147:	je     0x41a151
  41a149:	mov    rcx,rsi
  41a14c:	call   0x429580
  41a151:	mov    esi,0xffffffff
  41a156:	jmp    0x41a0e5
  41a158:	nop    DWORD PTR [rax+rax*1+0x0]
  41a160:	xor    edx,edx
  41a162:	mov    rcx,rbx
  41a165:	call   0x4176d0
  41a16a:	movzx  eax,WORD PTR [rbx]
  41a16d:	jmp    0x419fa8
  41a172:	nop    DWORD PTR [rax+0x0]
  41a176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a180:	push   rbp
  41a181:	push   rdi
  41a182:	push   rsi
  41a183:	push   rbx
  41a184:	sub    rsp,0x28
  41a188:	mov    rax,QWORD PTR [rip+0x1ea21]        # 0x438bb0
  41a18f:	mov    rbx,rcx
  41a192:	mov    rsi,rdx
  41a195:	mov    ecx,DWORD PTR [rax]
  41a197:	test   ecx,ecx
  41a199:	jne    0x41a300
  41a19f:	mov    edx,0x1
  41a1a4:	mov    rcx,rbx
  41a1a7:	call   0x40ab40
  41a1ac:	cmp    eax,0x1
  41a1af:	jne    0x41a320
  41a1b5:	test   rsi,rsi
  41a1b8:	je     0x41a1be
  41a1ba:	add    DWORD PTR [rsi+0x8],0x1
  41a1be:	lea    rcx,[rbx+0x160]
  41a1c5:	call   0x404700
  41a1ca:	movzx  eax,WORD PTR [rbx]
  41a1cd:	mov    QWORD PTR [rbx+0x160],rsi
  41a1d4:	cmp    ax,0x6ff
  41a1d8:	ja     0x41a2b0
  41a1de:	cmp    BYTE PTR [rsi+0x2e],0x0
  41a1e2:	jne    0x41a2e0
  41a1e8:	mov    rcx,QWORD PTR [rsi+0x40]
  41a1ec:	test   rcx,rcx
  41a1ef:	je     0x41a1fe
  41a1f1:	call   0x429580
  41a1f6:	mov    QWORD PTR [rsi+0x40],0x0
  41a1fe:	lea    rbp,[rsi+0x10]
  41a202:	mov    BYTE PTR [rbx+0xf1],0xf
  41a209:	mov    rcx,rbp
  41a20c:	call   0x429490
  41a211:	mov    edx,0xe7
  41a216:	mov    rdi,rax
  41a219:	mov    rcx,rbx
  41a21c:	call   0x40d520
  41a221:	lea    eax,[rdi+0x5]
  41a224:	mov    rcx,rbx
  41a227:	movsx  edx,ax
  41a22a:	call   0x40d4d0
  41a22f:	mov    edx,0x2
  41a234:	mov    rcx,rbx
  41a237:	call   0x40d520
  41a23c:	xor    edx,edx
  41a23e:	cmp    QWORD PTR [rsi+0x38],0x0
  41a243:	mov    rcx,rbx
  41a246:	setne  dl
  41a249:	call   0x40d520
  41a24e:	movzx  edx,dil
  41a252:	mov    rcx,rbx
  41a255:	call   0x40d520
  41a25a:	movsxd r8,edi
  41a25d:	mov    rdx,rbp
  41a260:	mov    rcx,rbx
  41a263:	call   0x40d260
  41a268:	xor    edx,edx
  41a26a:	mov    rcx,rbx
  41a26d:	call   0x40d4d0
  41a272:	mov    rdx,QWORD PTR [rsi+0x38]
  41a276:	test   rdx,rdx
  41a279:	je     0x41a28a
  41a27b:	lea    r8,[rdx+0x8]
  41a27f:	xor    r9d,r9d
  41a282:	mov    rcx,rbx
  41a285:	call   0x417ae0
  41a28a:	mov    rcx,rbx
  41a28d:	mov    edx,0x3
  41a292:	call   0x40ab40
  41a297:	mov    rcx,rbx
  41a29a:	add    rsp,0x28
  41a29e:	pop    rbx
  41a29f:	pop    rsi
  41a2a0:	pop    rdi
  41a2a1:	pop    rbp
  41a2a2:	jmp    0x40d5c0
  41a2a7:	nop    WORD PTR [rax+rax*1+0x0]
  41a2b0:	mov    edx,DWORD PTR [rsi+0xc]
  41a2b3:	test   edx,edx
  41a2b5:	je     0x41a327
  41a2b7:	cmp    ax,0x701
  41a2bb:	mov    BYTE PTR [rbx+0xf1],0x3
  41a2c2:	jbe    0x41a2ce
  41a2c4:	xor    edx,edx
  41a2c6:	mov    rcx,rbx
  41a2c9:	call   0x4176d0
  41a2ce:	lea    rdx,[rsi+0xc]
  41a2d2:	lea    r8,[rsi+0x38]
  41a2d6:	mov    rcx,rbx
  41a2d9:	call   0x417c70
  41a2de:	jmp    0x41a28a
  41a2e0:	mov    rdx,QWORD PTR [rsi+0x40]
  41a2e4:	mov    r8,QWORD PTR [rsi+0x38]
  41a2e8:	mov    rcx,rbx
  41a2eb:	call   0x418290
  41a2f0:	test   eax,eax
  41a2f2:	jns    0x41a28a
  41a2f4:	add    rsp,0x28
  41a2f8:	pop    rbx
  41a2f9:	pop    rsi
  41a2fa:	pop    rdi
  41a2fb:	pop    rbp
  41a2fc:	ret    
  41a2fd:	nop    DWORD PTR [rax]
  41a300:	lea    r8,[rip+0x18e2e]        # 0x433135
  41a307:	lea    rcx,[rip+0x183b2]        # 0x4326c0
  41a30e:	mov    edx,0x6cc7
  41a313:	call   0x423fa0
  41a318:	jmp    0x41a19f
  41a31d:	nop    DWORD PTR [rax]
  41a320:	mov    eax,0xffffffff
  41a325:	jmp    0x41a2f4
  41a327:	xor    edx,edx
  41a329:	mov    rcx,rbx
  41a32c:	call   0x40ab40
  41a331:	mov    eax,0xffffffff
  41a336:	jmp    0x41a2f4
  41a338:	nop    DWORD PTR [rax+rax*1+0x0]
  41a340:	cmp    WORD PTR [rcx],0x6ff
  41a345:	jbe    0x41a34e
  41a347:	mov    eax,DWORD PTR [rdx+0xc]
  41a34a:	test   eax,eax
  41a34c:	je     0x41a35f
  41a34e:	xor    eax,eax
  41a350:	cmp    BYTE PTR [rdx+0x2e],0x0
  41a354:	jne    0x41a35f
  41a356:	xor    eax,eax
  41a358:	cmp    BYTE PTR [rdx+0x10],0x0
  41a35c:	setne  al
  41a35f:	repz ret 
  41a361:	nop    DWORD PTR [rax+rax*1+0x0]
  41a366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a370:	sub    rsp,0x28
  41a374:	cmp    WORD PTR [rcx],0x6ff
  41a379:	jbe    0x41a390
  41a37b:	mov    eax,DWORD PTR [rdx+0xc]
  41a37e:	test   eax,eax
  41a380:	jne    0x41a390
  41a382:	call   0x404790
  41a387:	xor    eax,eax
  41a389:	add    rsp,0x28
  41a38d:	ret    
  41a38e:	xchg   ax,ax
  41a390:	cmp    BYTE PTR [rdx+0x2e],0x0
  41a394:	jne    0x41a382
  41a396:	cmp    BYTE PTR [rdx+0x10],0x0
  41a39a:	je     0x41a382
  41a39c:	mov    BYTE PTR [rdx+0x2f],0x1
  41a3a0:	or     BYTE PTR [rcx+0xa0],0x8
  41a3a7:	xor    eax,eax
  41a3a9:	add    rsp,0x28
  41a3ad:	ret    
  41a3ae:	xchg   ax,ax
  41a3b0:	push   rdi
  41a3b1:	push   rsi
  41a3b2:	push   rbx
  41a3b3:	sub    rsp,0x40
  41a3b7:	test   rdx,rdx
  41a3ba:	je     0x41a5a2
  41a3c0:	mov    rax,QWORD PTR [rip+0x1e7e9]        # 0x438bb0
  41a3c7:	mov    rsi,rdx
  41a3ca:	mov    rbx,rcx
  41a3cd:	mov    eax,DWORD PTR [rax]
  41a3cf:	test   eax,eax
  41a3d1:	jne    0x41a5b0
  41a3d7:	mov    edx,0x1
  41a3dc:	mov    rcx,rbx
  41a3df:	call   0x40ab40
  41a3e4:	cmp    eax,0x1
  41a3e7:	jne    0x41a5a2
  41a3ed:	add    DWORD PTR [rsi+0x8],0x1
  41a3f1:	lea    rcx,[rbx+0x160]
  41a3f8:	call   0x404700
  41a3fd:	movzx  eax,WORD PTR [rbx]
  41a400:	mov    QWORD PTR [rbx+0x160],rsi
  41a407:	cmp    ax,0x6ff
  41a40b:	jbe    0x41a4a2
  41a411:	cmp    ax,0x701
  41a415:	mov    BYTE PTR [rbx+0xf1],0x3
  41a41c:	ja     0x41a590
  41a422:	cmp    ax,0x700
  41a426:	jbe    0x41a4e1
  41a42c:	mov    edx,0xffffffff
  41a431:	mov    rcx,rbx
  41a434:	call   0x40d4d0
  41a439:	mov    edx,0xf
  41a43e:	mov    rcx,rbx
  41a441:	call   0x40d4d0
  41a446:	xor    edx,edx
  41a448:	mov    rcx,rbx
  41a44b:	call   0x40d4d0
  41a450:	xor    edx,edx
  41a452:	mov    rcx,rbx
  41a455:	call   0x40d520
  41a45a:	xor    edx,edx
  41a45c:	mov    rcx,rbx
  41a45f:	call   0x40d520
  41a464:	mov    edx,0x26
  41a469:	mov    rcx,rbx
  41a46c:	call   0x40d520
  41a471:	mov    edx,0x4
  41a476:	mov    rcx,rbx
  41a479:	call   0x40d520
  41a47e:	mov    edx,0x4
  41a483:	mov    rcx,rbx
  41a486:	call   0x40d520
  41a48b:	mov    edx,DWORD PTR [rsi+0xc]
  41a48e:	mov    rcx,rbx
  41a491:	call   0x40d490
  41a496:	mov    DWORD PTR [rbx+0x178],0xf
  41a4a0:	jmp    0x41a4c4
  41a4a2:	cmp    BYTE PTR [rsi+0x2e],0x0
  41a4a6:	je     0x41a515
  41a4a8:	lea    rdx,[rip+0x18cc4]        # 0x433173
  41a4af:	mov    BYTE PTR [rbx+0xf1],0x1
  41a4b6:	mov    r8d,0xffffffff
  41a4bc:	mov    rcx,rbx
  41a4bf:	call   0x40d2f0
  41a4c4:	mov    edx,0x3
  41a4c9:	mov    rcx,rbx
  41a4cc:	call   0x40ab40
  41a4d1:	mov    rcx,rbx
  41a4d4:	call   0x40d5c0
  41a4d9:	add    rsp,0x40
  41a4dd:	pop    rbx
  41a4de:	pop    rsi
  41a4df:	pop    rdi
  41a4e0:	ret    
  41a4e1:	mov    rcx,rbx
  41a4e4:	lea    rdi,[rsp+0x20]
  41a4e9:	mov    edx,0xc
  41a4ee:	call   0x40d4d0
  41a4f3:	lea    rdx,[rip+0x18c6c]        # 0x433166
  41a4fa:	mov    rcx,rdi
  41a4fd:	call   0x416f80
  41a502:	mov    rdx,rdi
  41a505:	mov    r8,rax
  41a508:	mov    rcx,rbx
  41a50b:	call   0x40d260
  41a510:	jmp    0x41a446
  41a515:	add    rsi,0x10
  41a519:	mov    BYTE PTR [rbx+0xf1],0xf
  41a520:	mov    rcx,rsi
  41a523:	call   0x429490
  41a528:	mov    edx,0xe7
  41a52d:	mov    rdi,rax
  41a530:	mov    rcx,rbx
  41a533:	call   0x40d520
  41a538:	lea    eax,[rdi+0x5]
  41a53b:	mov    rcx,rbx
  41a53e:	movsx  edx,ax
  41a541:	call   0x40d4d0
  41a546:	mov    edx,0x4
  41a54b:	mov    rcx,rbx
  41a54e:	call   0x40d520
  41a553:	xor    edx,edx
  41a555:	mov    rcx,rbx
  41a558:	call   0x40d520
  41a55d:	movzx  edx,dil
  41a561:	mov    rcx,rbx
  41a564:	call   0x40d520
  41a569:	movsxd r8,edi
  41a56c:	mov    rdx,rsi
  41a56f:	mov    rcx,rbx
  41a572:	call   0x40d260
  41a577:	xor    edx,edx
  41a579:	mov    rcx,rbx
  41a57c:	call   0x40d4d0
  41a581:	mov    DWORD PTR [rbx+0x178],0x64
  41a58b:	jmp    0x41a4c4
  41a590:	xor    edx,edx
  41a592:	mov    rcx,rbx
  41a595:	call   0x4176d0
  41a59a:	movzx  eax,WORD PTR [rbx]
  41a59d:	jmp    0x41a422
  41a5a2:	mov    eax,0xffffffff
  41a5a7:	add    rsp,0x40
  41a5ab:	pop    rbx
  41a5ac:	pop    rsi
  41a5ad:	pop    rdi
  41a5ae:	ret    
  41a5af:	nop
  41a5b0:	lea    r9,[rdx+0x10]
  41a5b4:	lea    r8,[rip+0x18b90]        # 0x43314b
  41a5bb:	lea    rcx,[rip+0x180fe]        # 0x4326c0
  41a5c2:	mov    edx,0x76d7
  41a5c7:	call   0x423fa0
  41a5cc:	jmp    0x41a3d7
  41a5d1:	nop    DWORD PTR [rax+rax*1+0x0]
  41a5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a5e0:	push   r15
  41a5e2:	push   r14
  41a5e4:	push   r13
  41a5e6:	push   r12
  41a5e8:	push   rbp
  41a5e9:	push   rdi
  41a5ea:	push   rsi
  41a5eb:	push   rbx
  41a5ec:	sub    rsp,0x98
  41a5f3:	test   r8,r8
  41a5f6:	mov    rbx,rcx
  41a5f9:	mov    r15,rdx
  41a5fc:	mov    rdi,r8
  41a5ff:	mov    r12,r9
  41a602:	je     0x41aa20
  41a608:	movzx  ebp,WORD PTR [r8+0x8]
  41a60d:	test   rbx,rbx
  41a610:	je     0x41aa50
  41a616:	test   r15,r15
  41a619:	je     0x41aa30
  41a61f:	mov    edx,0x1
  41a624:	mov    rcx,rbx
  41a627:	mov    esi,0xffffffff
  41a62c:	call   0x40ab40
  41a631:	cmp    eax,0x1
  41a634:	jne    0x41a8b0
  41a63a:	lea    rcx,[rbx+0x160]
  41a641:	call   0x404700
  41a646:	mov    rcx,r15
  41a649:	call   0x429490
  41a64e:	movzx  ecx,WORD PTR [rbx]
  41a651:	mov    r13,rax
  41a654:	cmp    cx,0x6ff
  41a659:	ja     0x41a850
  41a65f:	cmp    cx,0x500
  41a664:	je     0x41a900
  41a66a:	cmp    cx,0x4ff
  41a66f:	ja     0x41aaab
  41a675:	test   rdi,rdi
  41a678:	je     0x41aa80
  41a67e:	movzx  r12d,WORD PTR [rdi+0x8]
  41a683:	test   r12d,r12d
  41a686:	je     0x41aa80
  41a68c:	xor    ebp,ebp
  41a68e:	xor    r13d,r13d
  41a691:	xor    esi,esi
  41a693:	lea    r14,[rsp+0x40]
  41a698:	jmp    0x41a6b0
  41a69a:	nop    WORD PTR [rax+rax*1+0x0]
  41a6a0:	add    esi,0x1
  41a6a3:	add    rbp,0x8
  41a6a7:	cmp    r12d,esi
  41a6aa:	je     0x41a792
  41a6b0:	mov    rax,QWORD PTR [rdi]
  41a6b3:	mov    r9,QWORD PTR [rax+rbp*1]
  41a6b7:	test   BYTE PTR [r9+0x58],0x20
  41a6bc:	je     0x41a6a0
  41a6be:	add    r13d,0x1
  41a6c2:	lea    rdx,[rip+0x18acc]        # 0x433195
  41a6c9:	mov    rcx,r14
  41a6cc:	mov    r8d,r13d
  41a6cf:	mov    QWORD PTR [rsp+0x38],r9
  41a6d4:	call   0x4294c8
  41a6d9:	mov    r9,QWORD PTR [rsp+0x38]
  41a6de:	mov    r8,r14
  41a6e1:	mov    edx,DWORD PTR [r8]
  41a6e4:	add    r8,0x4
  41a6e8:	lea    eax,[rdx-0x1010101]
  41a6ee:	not    edx
  41a6f0:	and    eax,edx
  41a6f2:	and    eax,0x80808080
  41a6f7:	je     0x41a6e1
  41a6f9:	mov    edx,eax
  41a6fb:	mov    rcx,rbx
  41a6fe:	shr    edx,0x10
  41a701:	test   eax,0x8080
  41a706:	cmove  eax,edx
  41a709:	lea    rdx,[r8+0x2]
  41a70d:	cmove  r8,rdx
  41a711:	add    al,al
  41a713:	mov    rdx,r9
  41a716:	sbb    r8,0x3
  41a71a:	call   0x4184a0
  41a71f:	mov    rcx,r14
  41a722:	mov    edx,DWORD PTR [rcx]
  41a724:	add    rcx,0x4
  41a728:	lea    eax,[rdx-0x1010101]
  41a72e:	not    edx
  41a730:	and    eax,edx
  41a732:	and    eax,0x80808080
  41a737:	je     0x41a722
  41a739:	mov    edx,eax
  41a73b:	mov    r8d,r13d
  41a73e:	shr    edx,0x10
  41a741:	test   eax,0x8080
  41a746:	cmove  eax,edx
  41a749:	lea    rdx,[rcx+0x2]
  41a74d:	cmove  rcx,rdx
  41a751:	add    al,al
  41a753:	lea    rdx,[rip+0x18a4a]        # 0x4331a4
  41a75a:	sbb    rcx,0x3
  41a75e:	add    rbp,0x8
  41a762:	call   0x4294c8
  41a767:	mov    r8d,0xffffffff
  41a76d:	mov    rdx,r14
  41a770:	mov    rcx,rbx
  41a773:	call   0x40d2f0
  41a778:	mov    rdx,QWORD PTR [rdi]
  41a77b:	mov    r8d,esi
  41a77e:	mov    rcx,rbx
  41a781:	add    esi,0x1
  41a784:	call   0x417d60
  41a789:	cmp    r12d,esi
  41a78c:	jne    0x41a6b0
  41a792:	lea    rdx,[rip+0x18a16]        # 0x4331af
  41a799:	mov    r8d,0x6
  41a79f:	mov    rcx,rbx
  41a7a2:	xor    ebp,ebp
  41a7a4:	xor    r14d,r14d
  41a7a7:	xor    esi,esi
  41a7a9:	call   0x40d2f0
  41a7ae:	mov    rdx,r15
  41a7b1:	mov    r8d,0xffffffff
  41a7b7:	mov    rcx,rbx
  41a7ba:	call   0x40d2f0
  41a7bf:	lea    r15,[rsp+0x40]
  41a7c4:	lea    rdx,[rip+0x189bb]        # 0x433186
  41a7cb:	jmp    0x41a80e
  41a7cd:	nop    DWORD PTR [rax]
  41a7d0:	lea    rdx,[rip+0x189e1]        # 0x4331b8
  41a7d7:	add    r14d,0x1
  41a7db:	mov    rcx,r15
  41a7de:	mov    r8d,r14d
  41a7e1:	call   0x4294c8
  41a7e6:	mov    r8d,0xffffffff
  41a7ec:	mov    rdx,r15
  41a7ef:	mov    rcx,rbx
  41a7f2:	call   0x40d2f0
  41a7f7:	add    esi,0x1
  41a7fa:	add    rbp,0x8
  41a7fe:	lea    rdx,[rip+0x189bf]        # 0x4331c4
  41a805:	cmp    r12d,esi
  41a808:	je     0x41a970
  41a80e:	mov    rax,QWORD PTR [rdi]
  41a811:	mov    r8d,0xffffffff
  41a817:	mov    rcx,rbx
  41a81a:	mov    r13,QWORD PTR [rax+rbp*1]
  41a81e:	call   0x40d2f0
  41a823:	mov    rdx,QWORD PTR [r13+0x38]
  41a827:	mov    r8,QWORD PTR [rdx]
  41a82a:	test   r8,r8
  41a82d:	jne    0x41a8d0
  41a833:	test   BYTE PTR [r13+0x58],0x20
  41a838:	jne    0x41a7d0
  41a83a:	mov    rdx,QWORD PTR [rdi]
  41a83d:	mov    r8d,esi
  41a840:	mov    rcx,rbx
  41a843:	call   0x417d60
  41a848:	jmp    0x41a7f7
  41a84a:	nop    WORD PTR [rax+rax*1+0x0]
  41a850:	mov    rax,QWORD PTR [rbx+0x68]
  41a854:	lea    rdx,[rsp+0x40]
  41a859:	mov    r9d,r13d
  41a85c:	mov    r8,r15
  41a85f:	mov    rcx,rbx
  41a862:	mov    QWORD PTR [rsp+0x20],rdx
  41a867:	mov    rdx,QWORD PTR [rax]
  41a86a:	call   0x4175d0
  41a86f:	test   rax,rax
  41a872:	mov    r13,rax
  41a875:	je     0x41aaab
  41a87b:	cmp    WORD PTR [rbx],0x701
  41a880:	mov    BYTE PTR [rbx+0xf1],0x3
  41a887:	jbe    0x41a990
  41a88d:	mov    rdx,r12
  41a890:	mov    rcx,rbx
  41a893:	call   0x4176d0
  41a898:	test   eax,eax
  41a89a:	je     0x41a990
  41a8a0:	cmp    r15,r13
  41a8a3:	je     0x41a8b0
  41a8a5:	mov    rcx,r13
  41a8a8:	call   0x429580
  41a8ad:	nop    DWORD PTR [rax]
  41a8b0:	mov    eax,esi
  41a8b2:	add    rsp,0x98
  41a8b9:	pop    rbx
  41a8ba:	pop    rsi
  41a8bb:	pop    rdi
  41a8bc:	pop    rbp
  41a8bd:	pop    r12
  41a8bf:	pop    r13
  41a8c1:	pop    r14
  41a8c3:	pop    r15
  41a8c5:	ret    
  41a8c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a8d0:	add    rdx,0x8
  41a8d4:	mov    rcx,rbx
  41a8d7:	call   0x40d2f0
  41a8dc:	lea    rdx,[rip+0x188d3]        # 0x4331b6
  41a8e3:	mov    r8d,0x1
  41a8e9:	mov    rcx,rbx
  41a8ec:	call   0x40d2f0
  41a8f1:	jmp    0x41a833
  41a8f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a900:	mov    edx,0xe6
  41a905:	mov    rcx,rbx
  41a908:	mov    BYTE PTR [rbx+0xf1],0xf
  41a90f:	call   0x40d520
  41a914:	lea    edx,[r13+0x3]
  41a918:	mov    rcx,rbx
  41a91b:	movsx  edx,dx
  41a91e:	call   0x40d4d0
  41a923:	movzx  edx,r13b
  41a927:	mov    rcx,rbx
  41a92a:	call   0x40d520
  41a92f:	movsxd r8,r13d
  41a932:	mov    rdx,r15
  41a935:	mov    rcx,rbx
  41a938:	call   0x40d260
  41a93d:	test   ebp,ebp
  41a93f:	je     0x41aa6e
  41a945:	mov    edx,0x2
  41a94a:	mov    rcx,rbx
  41a94d:	call   0x40d4d0
  41a952:	lea    r8,[rdi+0x8]
  41a956:	mov    r9d,0x1
  41a95c:	mov    rdx,rdi
  41a95f:	mov    rcx,rbx
  41a962:	call   0x417ae0
  41a967:	nop    WORD PTR [rax+rax*1+0x0]
  41a970:	mov    edx,0x3
  41a975:	mov    rcx,rbx
  41a978:	call   0x40ab40
  41a97d:	mov    rcx,rbx
  41a980:	call   0x40d5c0
  41a985:	mov    esi,eax
  41a987:	jmp    0x41a8b0
  41a98c:	nop    DWORD PTR [rax+0x0]
  41a990:	mov    rdx,QWORD PTR [rsp+0x40]
  41a995:	mov    rcx,rbx
  41a998:	shr    rdx,1
  41a99b:	movsx  edx,dx
  41a99e:	call   0x40d4d0
  41a9a3:	movsxd r8,DWORD PTR [rsp+0x40]
  41a9a8:	mov    rdx,r13
  41a9ab:	mov    rcx,rbx
  41a9ae:	call   0x40d260
  41a9b3:	cmp    r15,r13
  41a9b6:	je     0x41a9c0
  41a9b8:	mov    rcx,r13
  41a9bb:	call   0x429580
  41a9c0:	xor    edx,edx
  41a9c2:	mov    rcx,rbx
  41a9c5:	call   0x40d4d0
  41a9ca:	test   ebp,ebp
  41a9cc:	je     0x41a970
  41a9ce:	lea    eax,[rbp-0x1]
  41a9d1:	xor    esi,esi
  41a9d3:	lea    r12,[rax*8+0x8]
  41a9db:	nop    DWORD PTR [rax+rax*1+0x0]
  41a9e0:	mov    rax,QWORD PTR [rdi]
  41a9e3:	mov    r8d,0x1
  41a9e9:	mov    rcx,rbx
  41a9ec:	mov    rbp,QWORD PTR [rax+rsi*1]
  41a9f0:	add    rsi,0x8
  41a9f4:	mov    rdx,rbp
  41a9f7:	call   0x4178e0
  41a9fc:	mov    rax,QWORD PTR [rbp+0x0]
  41aa00:	xor    r8d,r8d
  41aa03:	mov    rdx,rbp
  41aa06:	mov    rcx,rbx
  41aa09:	call   QWORD PTR [rax+0x28]
  41aa0c:	cmp    rsi,r12
  41aa0f:	jne    0x41a9e0
  41aa11:	jmp    0x41a970
  41aa16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aa20:	xor    ebp,ebp
  41aa22:	jmp    0x41a60d
  41aa27:	nop    WORD PTR [rax+rax*1+0x0]
  41aa30:	lea    rdx,[rip+0x17c89]        # 0x4326c0
  41aa37:	lea    rcx,[rip+0x1874e]        # 0x43318c
  41aa3e:	mov    r8d,0x7f3
  41aa44:	call   0x4291e0
  41aa49:	jmp    0x41a61f
  41aa4e:	xchg   ax,ax
  41aa50:	lea    rdx,[rip+0x17c69]        # 0x4326c0
  41aa57:	lea    rcx,[rip+0x1872a]        # 0x433188
  41aa5e:	mov    r8d,0x7f2
  41aa64:	call   0x4291e0
  41aa69:	jmp    0x41a616
  41aa6e:	xor    edx,edx
  41aa70:	mov    rcx,rbx
  41aa73:	call   0x40d4d0
  41aa78:	jmp    0x41a970
  41aa7d:	nop    DWORD PTR [rax]
  41aa80:	lea    rdx,[rip+0x18728]        # 0x4331af
  41aa87:	mov    rcx,rbx
  41aa8a:	mov    r8d,0x6
  41aa90:	call   0x40d2f0
  41aa95:	mov    r8d,0xffffffff
  41aa9b:	mov    rdx,r15
  41aa9e:	mov    rcx,rbx
  41aaa1:	call   0x40d2f0
  41aaa6:	jmp    0x41a970
  41aaab:	xor    edx,edx
  41aaad:	mov    rcx,rbx
  41aab0:	call   0x40ab40
  41aab5:	jmp    0x41a8b0
  41aaba:	nop    WORD PTR [rax+rax*1+0x0]
  41aac0:	push   rsi
  41aac1:	push   rbx
  41aac2:	sub    rsp,0x48
  41aac6:	mov    rbx,rcx
  41aac9:	lea    rcx,[rcx+0x180]
  41aad0:	call   0x426950
  41aad5:	test   eax,eax
  41aad7:	je     0x41ab02
  41aad9:	movzx  eax,BYTE PTR [rbx+0x14c]
  41aae0:	test   al,al
  41aae2:	jne    0x41aaeb
  41aae4:	mov    BYTE PTR [rbx+0x14c],0x1
  41aaeb:	lea    rcx,[rbx+0x18]
  41aaef:	mov    edx,0x1
  41aaf4:	call   0x421bd0
  41aaf9:	xor    eax,eax
  41aafb:	add    rsp,0x48
  41aaff:	pop    rbx
  41ab00:	pop    rsi
  41ab01:	ret    
  41ab02:	mov    rdx,QWORD PTR [rip+0x1e0a7]        # 0x438bb0
  41ab09:	mov    r8d,DWORD PTR [rdx]
  41ab0c:	test   r8d,r8d
  41ab0f:	jne    0x41ab42
  41ab11:	movzx  edx,BYTE PTR [rbx+0x14c]
  41ab18:	test   dl,dl
  41ab1a:	jne    0x41ab26
  41ab1c:	mov    edx,DWORD PTR [rbx+0x148]
  41ab22:	test   edx,edx
  41ab24:	jne    0x41aba0
  41ab26:	mov    DWORD PTR [rsp+0x3c],eax
  41ab2a:	lea    rcx,[rbx+0x190]
  41ab31:	call   QWORD PTR [rip+0x24e15]        # 0x43f94c
  41ab37:	mov    eax,DWORD PTR [rsp+0x3c]
  41ab3b:	add    rsp,0x48
  41ab3f:	pop    rbx
  41ab40:	pop    rsi
  41ab41:	ret    
  41ab42:	mov    ecx,DWORD PTR [rbx+0x148]
  41ab48:	lea    rdx,[rip+0x18678]        # 0x4331c7
  41ab4f:	movzx  r8d,BYTE PTR [rbx+0x14c]
  41ab57:	lea    r9,[rip+0x18668]        # 0x4331c6
  41ab5e:	mov    DWORD PTR [rsp+0x3c],eax
  41ab62:	test   ecx,ecx
  41ab64:	mov    rcx,rdx
  41ab67:	cmove  rcx,r9
  41ab6b:	test   r8b,r8b
  41ab6e:	lea    r8,[rip+0x1865b]        # 0x4331d0
  41ab75:	mov    QWORD PTR [rsp+0x20],rcx
  41ab7a:	lea    rcx,[rip+0x17b3f]        # 0x4326c0
  41ab81:	cmove  r9,rdx
  41ab85:	mov    edx,0x89a7
  41ab8a:	call   0x423fa0
  41ab8f:	mov    eax,DWORD PTR [rsp+0x3c]
  41ab93:	jmp    0x41ab11
  41ab98:	nop    DWORD PTR [rax+rax*1+0x0]
  41aba0:	mov    rcx,rbx
  41aba3:	call   0x4248d0
  41aba8:	lea    rcx,[rbx+0x190]
  41abaf:	mov    esi,eax
  41abb1:	call   QWORD PTR [rip+0x24d95]        # 0x43f94c
  41abb7:	mov    eax,esi
  41abb9:	add    rsp,0x48
  41abbd:	pop    rbx
  41abbe:	pop    rsi
  41abbf:	ret    
  41abc0:	push   rbp
  41abc1:	push   rdi
  41abc2:	push   rsi
  41abc3:	push   rbx
  41abc4:	sub    rsp,0x38
  41abc8:	test   r9d,r9d
  41abcb:	mov    rbp,rcx
  41abce:	mov    rdi,rdx
  41abd1:	mov    rsi,r8
  41abd4:	movsxd rax,r9d
  41abd7:	js     0x41ac90
  41abdd:	cmp    DWORD PTR [rbp+0x4],0xc0500ff
  41abe4:	ja     0x41aca5
  41abea:	xor    r10d,r10d
  41abed:	test   rax,rax
  41abf0:	jne    0x41ac09
  41abf2:	jmp    0x41ac60
  41abf4:	test   r10,r10
  41abf7:	je     0x41ac29
  41abf9:	nop    DWORD PTR [rax+0x0]
  41ac00:	add    r10,0x1
  41ac04:	cmp    r10,rax
  41ac07:	je     0x41ac60
  41ac09:	movzx  ebx,BYTE PTR [rsi+r10*1]
  41ac0e:	mov    r11d,ebx
  41ac11:	and    r11d,0xffffffdf
  41ac15:	sub    r11d,0x41
  41ac19:	cmp    r11b,0x19
  41ac1d:	jbe    0x41ac00
  41ac1f:	lea    r8d,[rbx-0x30]
  41ac23:	cmp    r8b,0x9
  41ac27:	jbe    0x41abf4
  41ac29:	cmp    bl,0x5f
  41ac2c:	je     0x41ac00
  41ac2e:	mov    QWORD PTR [rsp+0x20],rax
  41ac33:	mov    r9,rsi
  41ac36:	mov    r8d,0x22
  41ac3c:	mov    rdx,rdi
  41ac3f:	mov    rcx,rbp
  41ac42:	call   0x416db0
  41ac47:	mov    rbx,rax
  41ac4a:	mov    rax,rbx
  41ac4d:	add    rsp,0x38
  41ac51:	pop    rbx
  41ac52:	pop    rsi
  41ac53:	pop    rdi
  41ac54:	pop    rbp
  41ac55:	ret    
  41ac56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ac60:	test   rdi,rdi
  41ac63:	mov    rbx,rax
  41ac66:	je     0x41ac4a
  41ac68:	mov    r8,rax
  41ac6b:	mov    rdx,rsi
  41ac6e:	mov    rcx,rdi
  41ac71:	call   0x429528
  41ac76:	mov    rax,rbx
  41ac79:	mov    BYTE PTR [rdi+rbx*1],0x0
  41ac7d:	add    rsp,0x38
  41ac81:	pop    rbx
  41ac82:	pop    rsi
  41ac83:	pop    rdi
  41ac84:	pop    rbp
  41ac85:	ret    
  41ac86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ac90:	mov    rcx,r8
  41ac93:	call   0x429490
  41ac98:	cmp    DWORD PTR [rbp+0x4],0xc0500ff
  41ac9f:	jbe    0x41abea
  41aca5:	mov    QWORD PTR [rsp+0x20],rax
  41acaa:	mov    r9,rsi
  41acad:	mov    r8d,0x5d
  41acb3:	mov    rdx,rdi
  41acb6:	mov    rcx,rbp
  41acb9:	call   0x416db0
  41acbe:	mov    rbx,rax
  41acc1:	mov    rax,rbx
  41acc4:	add    rsp,0x38
  41acc8:	pop    rbx
  41acc9:	pop    rsi
  41acca:	pop    rdi
  41accb:	pop    rbp
  41accc:	ret    
  41accd:	nop    DWORD PTR [rax]
  41acd0:	push   rbx
  41acd1:	sub    rsp,0x40
  41acd5:	test   r9d,r9d
  41acd8:	mov    rbx,rcx
  41acdb:	movsxd rax,r9d
  41acde:	js     0x41ad00
  41ace0:	mov    r9,r8
  41ace3:	mov    QWORD PTR [rsp+0x20],rax
  41ace8:	mov    r8d,0x27
  41acee:	mov    rcx,rbx
  41acf1:	call   0x416db0
  41acf6:	add    rsp,0x40
  41acfa:	pop    rbx
  41acfb:	ret    
  41acfc:	nop    DWORD PTR [rax+0x0]
  41ad00:	mov    rcx,r8
  41ad03:	mov    QWORD PTR [rsp+0x38],rdx
  41ad08:	mov    QWORD PTR [rsp+0x30],r8
  41ad0d:	call   0x429490
  41ad12:	mov    rdx,QWORD PTR [rsp+0x38]
  41ad17:	mov    r8,QWORD PTR [rsp+0x30]
  41ad1c:	jmp    0x41ace0
  41ad1e:	xchg   ax,ax
  41ad20:	push   r12
  41ad22:	push   rbp
  41ad23:	push   rdi
  41ad24:	push   rsi
  41ad25:	push   rbx
  41ad26:	sub    rsp,0x20
  41ad2a:	test   rdx,rdx
  41ad2d:	je     0x41aea0
  41ad33:	mov    rbp,QWORD PTR [rip+0x1de76]        # 0x438bb0
  41ad3a:	mov    rbx,rcx
  41ad3d:	mov    rdi,r9
  41ad40:	mov    rsi,rdx
  41ad43:	mov    ecx,DWORD PTR [rbp+0x0]
  41ad46:	test   ecx,ecx
  41ad48:	jne    0x41aeb0
  41ad4e:	movzx  edx,WORD PTR [rbx]
  41ad51:	cmp    dx,0x6ff
  41ad56:	ja     0x41ae60
  41ad5c:	xor    eax,eax
  41ad5e:	cmp    dx,0x500
  41ad63:	jne    0x41ae4f
  41ad69:	mov    edx,DWORD PTR [rdi]
  41ad6b:	test   edx,edx
  41ad6d:	je     0x41ae72
  41ad73:	cmp    DWORD PTR [rbx+0x148],0x1
  41ad7a:	jne    0x41aea0
  41ad80:	cmp    BYTE PTR [rbx+0xf1],0xf
  41ad87:	jne    0x41aea0
  41ad8d:	mov    edx,0x86
  41ad92:	mov    rcx,rbx
  41ad95:	call   0x40d520
  41ad9a:	mov    rcx,QWORD PTR [rsi+0x10]
  41ad9e:	call   0x429490
  41ada3:	mov    rcx,QWORD PTR [rsi+0x20]
  41ada7:	mov    r12,rax
  41adaa:	call   0x429490
  41adaf:	lea    edx,[r12+rax*1+0x6]
  41adb4:	mov    rcx,rbx
  41adb7:	movsx  edx,dx
  41adba:	call   0x40d4d0
  41adbf:	mov    eax,DWORD PTR [rbp+0x0]
  41adc2:	test   eax,eax
  41adc4:	jne    0x41aed1
  41adca:	mov    rcx,QWORD PTR [rsi+0x10]
  41adce:	call   0x429490
  41add3:	mov    rcx,rbx
  41add6:	movzx  edx,al
  41add9:	call   0x40d520
  41adde:	mov    rbp,QWORD PTR [rsi+0x10]
  41ade2:	mov    rcx,rbp
  41ade5:	call   0x429490
  41adea:	mov    rdx,rbp
  41aded:	movsxd r8,eax
  41adf0:	mov    rcx,rbx
  41adf3:	call   0x40d260
  41adf8:	mov    edx,0x1
  41adfd:	mov    rcx,rbx
  41ae00:	call   0x40d520
  41ae05:	xor    edx,edx
  41ae07:	mov    rcx,rbx
  41ae0a:	call   0x40d520
  41ae0f:	mov    rcx,QWORD PTR [rsi+0x20]
  41ae13:	call   0x429490
  41ae18:	mov    rcx,rbx
  41ae1b:	movsx  edx,ax
  41ae1e:	call   0x40d4d0
  41ae23:	mov    rsi,QWORD PTR [rsi+0x20]
  41ae27:	mov    rcx,rsi
  41ae2a:	call   0x429490
  41ae2f:	mov    rdx,rsi
  41ae32:	movsxd r8,eax
  41ae35:	mov    rcx,rbx
  41ae38:	call   0x40d260
  41ae3d:	xor    edx,edx
  41ae3f:	mov    rcx,rbx
  41ae42:	call   0x40d520
  41ae47:	mov    DWORD PTR [rdi],0x1
  41ae4d:	xor    eax,eax
  41ae4f:	add    rsp,0x20
  41ae53:	pop    rbx
  41ae54:	pop    rsi
  41ae55:	pop    rdi
  41ae56:	pop    rbp
  41ae57:	pop    r12
  41ae59:	ret    
  41ae5a:	nop    WORD PTR [rax+rax*1+0x0]
  41ae60:	or     WORD PTR [rsi+0x44],0xd
  41ae65:	xor    eax,eax
  41ae67:	add    rsp,0x20
  41ae6b:	pop    rbx
  41ae6c:	pop    rsi
  41ae6d:	pop    rdi
  41ae6e:	pop    rbp
  41ae6f:	pop    r12
  41ae71:	ret    
  41ae72:	mov    edx,0x1
  41ae77:	mov    rcx,rbx
  41ae7a:	call   0x40ab40
  41ae7f:	cmp    eax,0x1
  41ae82:	jne    0x41aea0
  41ae84:	cmp    DWORD PTR [rbx+0x148],0x1
  41ae8b:	mov    BYTE PTR [rbx+0xf1],0xf
  41ae92:	je     0x41ad8d
  41ae98:	nop    DWORD PTR [rax+rax*1+0x0]
  41aea0:	mov    eax,0xffffffff
  41aea5:	add    rsp,0x20
  41aea9:	pop    rbx
  41aeaa:	pop    rsi
  41aeab:	pop    rdi
  41aeac:	pop    rbp
  41aead:	pop    r12
  41aeaf:	ret    
  41aeb0:	mov    r9d,DWORD PTR [rdx+0x18]
  41aeb4:	lea    r8,[rip+0x18345]        # 0x433200
  41aebb:	lea    rcx,[rip+0x177fe]        # 0x4326c0
  41aec2:	mov    edx,0x9275
  41aec7:	call   0x423fa0
  41aecc:	jmp    0x41ad4e
  41aed1:	mov    rcx,QWORD PTR [rsi+0x10]
  41aed5:	call   0x429490
  41aeda:	mov    rcx,QWORD PTR [rsi+0x20]
  41aede:	mov    rbp,rax
  41aee1:	call   0x429490
  41aee6:	lea    r8,[rip+0x18338]        # 0x433225
  41aeed:	lea    r9d,[rbp+rax*1+0x6]
  41aef2:	lea    rcx,[rip+0x177c7]        # 0x4326c0
  41aef9:	mov    edx,0x93e2
  41aefe:	call   0x423fa0
  41af03:	jmp    0x41adca
  41af08:	nop    DWORD PTR [rax+rax*1+0x0]
  41af10:	push   r15
  41af12:	push   r14
  41af14:	push   r13
  41af16:	push   r12
  41af18:	push   rbp
  41af19:	push   rdi
  41af1a:	push   rsi
  41af1b:	push   rbx
  41af1c:	sub    rsp,0x78
  41af20:	test   rdx,rdx
  41af23:	je     0x41b206
  41af29:	mov    r13,QWORD PTR [rip+0x1dc80]        # 0x438bb0
  41af30:	mov    rbx,rcx
  41af33:	mov    r12,r9
  41af36:	mov    rbp,r8
  41af39:	mov    rsi,rdx
  41af3c:	mov    ecx,DWORD PTR [r13+0x0]
  41af40:	test   ecx,ecx
  41af42:	jne    0x41b400
  41af48:	mov    edx,DWORD PTR [r12]
  41af4c:	test   edx,edx
  41af4e:	je     0x41b1f0
  41af54:	cmp    DWORD PTR [rbx+0x148],0x1
  41af5b:	jne    0x41b206
  41af61:	add    DWORD PTR [rsi+0x8],0x1
  41af65:	cmp    QWORD PTR [rbx+0x138],0x0
  41af6d:	je     0x41af7b
  41af6f:	lea    rcx,[rbx+0x138]
  41af76:	call   0x4049c0
  41af7b:	movzx  eax,WORD PTR [rbx]
  41af7e:	mov    QWORD PTR [rbx+0x138],rsi
  41af85:	cmp    ax,0x500
  41af89:	je     0x41b382
  41af8f:	cmp    ax,0x6ff
  41af93:	jbe    0x41b1d0
  41af99:	test   rbp,rbp
  41af9c:	mov    QWORD PTR [rsp+0x40],0x0
  41afa5:	je     0x41b440
  41afab:	mov    rdi,QWORD PTR [rsi+0x20]
  41afaf:	movzx  r15d,WORD PTR [rbp+0x8]
  41afb4:	mov    rcx,rdi
  41afb7:	call   0x429490
  41afbc:	mov    rdx,QWORD PTR [rbx+0x68]
  41afc0:	lea    rcx,[rsp+0x48]
  41afc5:	mov    r8,rdi
  41afc8:	mov    r9d,eax
  41afcb:	mov    QWORD PTR [rsp+0x20],rcx
  41afd0:	mov    rcx,rbx
  41afd3:	mov    rdx,QWORD PTR [rdx]
  41afd6:	call   0x4175d0
  41afdb:	test   rax,rax
  41afde:	mov    rdi,rax
  41afe1:	je     0x41b2f7
  41afe7:	xor    r14d,r14d
  41afea:	test   r15d,r15d
  41afed:	jne    0x41b2c0
  41aff3:	movzx  eax,WORD PTR [rbx]
  41aff6:	mov    BYTE PTR [rbx+0xf1],0x3
  41affd:	cmp    ax,0x701
  41b001:	ja     0x41b370
  41b007:	cmp    ax,0x700
  41b00b:	jbe    0x41b265
  41b011:	mov    edx,0xffffffff
  41b016:	mov    rcx,rbx
  41b019:	call   0x40d4d0
  41b01e:	mov    edx,0x2
  41b023:	mov    rcx,rbx
  41b026:	call   0x40d4d0
  41b02b:	xor    edx,edx
  41b02d:	mov    rcx,rbx
  41b030:	call   0x40d4d0
  41b035:	xor    edx,edx
  41b037:	mov    rcx,rbx
  41b03a:	call   0x40d520
  41b03f:	mov    edx,0x1
  41b044:	mov    rcx,rbx
  41b047:	call   0x40d520
  41b04c:	mov    edx,0x26
  41b051:	mov    rcx,rbx
  41b054:	call   0x40d520
  41b059:	mov    edx,0x4
  41b05e:	mov    rcx,rbx
  41b061:	call   0x40d520
  41b066:	xor    edx,edx
  41b068:	mov    rcx,rbx
  41b06b:	call   0x40d520
  41b070:	cmp    QWORD PTR [rsp+0x40],0x0
  41b076:	je     0x41b210
  41b07c:	mov    r8,QWORD PTR [rsp+0x48]
  41b081:	mov    rdx,rdi
  41b084:	mov    rcx,rbx
  41b087:	call   0x417410
  41b08c:	cmp    QWORD PTR [rsi+0x20],rdi
  41b090:	je     0x41b09a
  41b092:	mov    rcx,rdi
  41b095:	call   0x429580
  41b09a:	xor    edx,edx
  41b09c:	mov    rcx,rbx
  41b09f:	call   0x40d520
  41b0a4:	mov    edx,0x1
  41b0a9:	mov    rcx,rbx
  41b0ac:	call   0x40d520
  41b0b1:	mov    edx,0x26
  41b0b6:	mov    rcx,rbx
  41b0b9:	call   0x40d520
  41b0be:	mov    edx,0x4
  41b0c3:	mov    rcx,rbx
  41b0c6:	call   0x40d520
  41b0cb:	mov    edx,0x4
  41b0d0:	mov    rcx,rbx
  41b0d3:	call   0x40d520
  41b0d8:	cmp    QWORD PTR [rsp+0x40],0x0
  41b0de:	mov    edx,DWORD PTR [rsi+0x50]
  41b0e1:	je     0x41b0e6
  41b0e3:	or     dh,0x10
  41b0e6:	mov    rcx,rbx
  41b0e9:	call   0x40d490
  41b0ee:	xor    edx,edx
  41b0f0:	mov    rcx,rbx
  41b0f3:	call   0x40d520
  41b0f8:	mov    edx,0x1
  41b0fd:	mov    rcx,rbx
  41b100:	call   0x40d520
  41b105:	mov    edx,0x26
  41b10a:	mov    rcx,rbx
  41b10d:	call   0x40d520
  41b112:	mov    edx,0x4
  41b117:	mov    rcx,rbx
  41b11a:	call   0x40d520
  41b11f:	mov    edx,0x4
  41b124:	mov    rcx,rbx
  41b127:	call   0x40d520
  41b12c:	mov    edx,DWORD PTR [rsi+0x54]
  41b12f:	mov    rcx,rbx
  41b132:	call   0x40d490
  41b137:	xor    edx,edx
  41b139:	mov    rcx,rbx
  41b13c:	call   0x40d520
  41b141:	mov    edx,0x1
  41b146:	mov    rcx,rbx
  41b149:	call   0x40d520
  41b14e:	mov    edx,0x26
  41b153:	mov    rcx,rbx
  41b156:	call   0x40d520
  41b15b:	mov    edx,0x4
  41b160:	mov    rcx,rbx
  41b163:	call   0x40d520
  41b168:	mov    edx,0x4
  41b16d:	mov    rcx,rbx
  41b170:	call   0x40d520
  41b175:	xor    edx,edx
  41b177:	mov    rcx,rbx
  41b17a:	call   0x40d490
  41b17f:	mov    r8,QWORD PTR [rsp+0x40]
  41b184:	test   r8,r8
  41b187:	jne    0x41b312
  41b18d:	mov    rcx,r14
  41b190:	call   0x429580
  41b195:	mov    DWORD PTR [r12],0x1
  41b19d:	mov    eax,DWORD PTR [r13+0x0]
  41b1a1:	mov    DWORD PTR [rbx+0x178],0x2
  41b1ab:	test   eax,eax
  41b1ad:	je     0x41b1dc
  41b1af:	lea    r8,[rip+0x180aa]        # 0x433260
  41b1b6:	lea    rcx,[rip+0x17503]        # 0x4326c0
  41b1bd:	mov    edx,0x9d52
  41b1c2:	call   0x423fa0
  41b1c7:	mov    eax,DWORD PTR [r13+0x0]
  41b1cb:	jmp    0x41b1d4
  41b1cd:	nop    DWORD PTR [rax]
  41b1d0:	mov    eax,DWORD PTR [r13+0x0]
  41b1d4:	test   eax,eax
  41b1d6:	jne    0x41b421
  41b1dc:	add    rsp,0x78
  41b1e0:	pop    rbx
  41b1e1:	pop    rsi
  41b1e2:	pop    rdi
  41b1e3:	pop    rbp
  41b1e4:	pop    r12
  41b1e6:	pop    r13
  41b1e8:	pop    r14
  41b1ea:	pop    r15
  41b1ec:	ret    
  41b1ed:	nop    DWORD PTR [rax]
  41b1f0:	mov    edx,0x1
  41b1f5:	mov    rcx,rbx
  41b1f8:	call   0x40ab40
  41b1fd:	cmp    eax,0x1
  41b200:	je     0x41af54
  41b206:	mov    eax,0xffffffff
  41b20b:	jmp    0x41b1dc
  41b20d:	nop    DWORD PTR [rax]
  41b210:	xor    edx,edx
  41b212:	mov    rcx,rbx
  41b215:	call   0x40d520
  41b21a:	xor    edx,edx
  41b21c:	mov    rcx,rbx
  41b21f:	call   0x40d520
  41b224:	mov    edx,0x63
  41b229:	mov    rcx,rbx
  41b22c:	call   0x40d520
  41b231:	mov    edx,DWORD PTR [rsp+0x48]
  41b235:	mov    rcx,rbx
  41b238:	call   0x40d490
  41b23d:	cmp    WORD PTR [rbx],0x700
  41b242:	ja     0x41b2a3
  41b244:	mov    edx,DWORD PTR [rsp+0x48]
  41b248:	mov    rcx,rbx
  41b24b:	call   0x40d490
  41b250:	movsxd r8,DWORD PTR [rsp+0x48]
  41b255:	mov    rdx,rdi
  41b258:	mov    rcx,rbx
  41b25b:	call   0x40d260
  41b260:	jmp    0x41b08c
  41b265:	mov    rcx,rbx
  41b268:	mov    edx,0xd
  41b26d:	call   0x40d4d0
  41b272:	lea    r9,[rsp+0x50]
  41b277:	lea    rdx,[rip+0x17fd4]        # 0x433252
  41b27e:	mov    rcx,r9
  41b281:	mov    QWORD PTR [rsp+0x38],r9
  41b286:	call   0x416f80
  41b28b:	mov    r9,QWORD PTR [rsp+0x38]
  41b290:	mov    r8,rax
  41b293:	mov    rcx,rbx
  41b296:	mov    rdx,r9
  41b299:	call   0x40d260
  41b29e:	jmp    0x41b02b
  41b2a3:	lea    rdx,[rbx+0x70]
  41b2a7:	mov    r8d,0x5
  41b2ad:	mov    rcx,rbx
  41b2b0:	call   0x40d260
  41b2b5:	jmp    0x41b244
  41b2b7:	nop    WORD PTR [rax+rax*1+0x0]
  41b2c0:	lea    rax,[rsp+0x40]
  41b2c5:	mov    r8,QWORD PTR [rsp+0x48]
  41b2ca:	mov    r9,rbp
  41b2cd:	mov    rdx,rdi
  41b2d0:	mov    rcx,rbx
  41b2d3:	mov    QWORD PTR [rsp+0x20],rax
  41b2d8:	call   0x418850
  41b2dd:	test   rax,rax
  41b2e0:	mov    r14,rax
  41b2e3:	jne    0x41aff3
  41b2e9:	cmp    QWORD PTR [rsi+0x20],rdi
  41b2ed:	je     0x41b2f7
  41b2ef:	mov    rcx,rdi
  41b2f2:	call   0x429580
  41b2f7:	mov    eax,DWORD PTR [r12]
  41b2fb:	test   eax,eax
  41b2fd:	jne    0x41b206
  41b303:	xor    edx,edx
  41b305:	mov    rcx,rbx
  41b308:	call   0x40ab40
  41b30d:	jmp    0x41b206
  41b312:	mov    rdx,r14
  41b315:	mov    rcx,rbx
  41b318:	call   0x416e60
  41b31d:	test   r15d,r15d
  41b320:	je     0x41b18d
  41b326:	lea    eax,[r15-0x1]
  41b32a:	xor    esi,esi
  41b32c:	lea    r15,[rax*8+0x8]
  41b334:	mov    rax,QWORD PTR [rbp+0x0]
  41b338:	xor    r8d,r8d
  41b33b:	mov    rcx,rbx
  41b33e:	mov    rdi,QWORD PTR [rax+rsi*1]
  41b342:	add    rsi,0x8
  41b346:	mov    rdx,rdi
  41b349:	call   0x4178e0
  41b34e:	mov    rax,QWORD PTR [rdi]
  41b351:	xor    r8d,r8d
  41b354:	mov    rdx,rdi
  41b357:	mov    rcx,rbx
  41b35a:	call   QWORD PTR [rax+0x28]
  41b35d:	cmp    rsi,r15
  41b360:	jne    0x41b334
  41b362:	jmp    0x41b18d
  41b367:	nop    WORD PTR [rax+rax*1+0x0]
  41b370:	xor    edx,edx
  41b372:	mov    rcx,rbx
  41b375:	call   0x4176d0
  41b37a:	movzx  eax,WORD PTR [rbx]
  41b37d:	jmp    0x41b007
  41b382:	mov    edx,0x84
  41b387:	mov    rcx,rbx
  41b38a:	mov    BYTE PTR [rbx+0xf1],0xf
  41b391:	call   0x40d520
  41b396:	mov    rcx,QWORD PTR [rsi+0x10]
  41b39a:	call   0x429490
  41b39f:	lea    edx,[rax+0x6]
  41b3a2:	mov    rcx,rbx
  41b3a5:	movsx  edx,dx
  41b3a8:	call   0x40d4d0
  41b3ad:	xor    edx,edx
  41b3af:	mov    rcx,rbx
  41b3b2:	call   0x40d490
  41b3b7:	mov    rcx,QWORD PTR [rsi+0x10]
  41b3bb:	call   0x429490
  41b3c0:	mov    rcx,rbx
  41b3c3:	movzx  edx,al
  41b3c6:	call   0x40d520
  41b3cb:	mov    rdi,QWORD PTR [rsi+0x10]
  41b3cf:	mov    rcx,rdi
  41b3d2:	call   0x429490
  41b3d7:	mov    rdx,rdi
  41b3da:	movsxd r8,eax
  41b3dd:	mov    rcx,rbx
  41b3e0:	call   0x40d260
  41b3e5:	xor    edx,edx
  41b3e7:	mov    rcx,rbx
  41b3ea:	call   0x40d520
  41b3ef:	mov    DWORD PTR [r12],0x1
  41b3f7:	movzx  eax,WORD PTR [rbx]
  41b3fa:	jmp    0x41af8f
  41b3ff:	nop
  41b400:	mov    r9d,DWORD PTR [rdx+0x18]
  41b404:	lea    r8,[rip+0x17e25]        # 0x433230
  41b40b:	lea    rcx,[rip+0x172ae]        # 0x4326c0
  41b412:	mov    edx,0x9565
  41b417:	call   0x423fa0
  41b41c:	jmp    0x41af48
  41b421:	lea    r8,[rip+0x17e60]        # 0x433288
  41b428:	lea    rcx,[rip+0x17291]        # 0x4326c0
  41b42f:	mov    edx,0x9d92
  41b434:	call   0x423fa0
  41b439:	xor    eax,eax
  41b43b:	jmp    0x41b1dc
  41b440:	mov    rdi,QWORD PTR [rsi+0x20]
  41b444:	mov    rcx,rdi
  41b447:	call   0x429490
  41b44c:	mov    rdx,QWORD PTR [rbx+0x68]
  41b450:	lea    rcx,[rsp+0x48]
  41b455:	mov    r8,rdi
  41b458:	mov    r9d,eax
  41b45b:	mov    QWORD PTR [rsp+0x20],rcx
  41b460:	mov    rcx,rbx
  41b463:	mov    rdx,QWORD PTR [rdx]
  41b466:	call   0x4175d0
  41b46b:	test   rax,rax
  41b46e:	mov    rdi,rax
  41b471:	je     0x41b2f7
  41b477:	xor    r15d,r15d
  41b47a:	xor    r14d,r14d
  41b47d:	jmp    0x41aff3
  41b482:	nop    DWORD PTR [rax+0x0]
  41b486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b490:	push   rbp
  41b491:	push   rdi
  41b492:	push   rsi
  41b493:	push   rbx
  41b494:	sub    rsp,0x28
  41b498:	test   rdx,rdx
  41b49b:	je     0x41b610
  41b4a1:	mov    rax,QWORD PTR [rip+0x1d708]        # 0x438bb0
  41b4a8:	mov    rsi,rdx
  41b4ab:	mov    rdi,r8
  41b4ae:	mov    rbx,rcx
  41b4b1:	mov    edx,DWORD PTR [rax]
  41b4b3:	test   edx,edx
  41b4b5:	jne    0x41b620
  41b4bb:	movzx  ecx,WORD PTR [rbx]
  41b4be:	cmp    cx,0x6ff
  41b4c3:	ja     0x41b5c0
  41b4c9:	xor    eax,eax
  41b4cb:	cmp    cx,0x500
  41b4d0:	jne    0x41b5ae
  41b4d6:	mov    eax,DWORD PTR [rdi]
  41b4d8:	test   eax,eax
  41b4da:	je     0x41b5e0
  41b4e0:	cmp    DWORD PTR [rbx+0x148],0x1
  41b4e7:	jne    0x41b610
  41b4ed:	cmp    BYTE PTR [rbx+0xf1],0xf
  41b4f4:	jne    0x41b610
  41b4fa:	add    DWORD PTR [rsi+0x8],0x1
  41b4fe:	cmp    QWORD PTR [rbx+0x138],0x0
  41b506:	je     0x41b514
  41b508:	lea    rcx,[rbx+0x138]
  41b50f:	call   0x4049c0
  41b514:	mov    edx,0x83
  41b519:	mov    rcx,rbx
  41b51c:	mov    QWORD PTR [rbx+0x138],rsi
  41b523:	call   0x40d520
  41b528:	mov    rcx,QWORD PTR [rsi+0x10]
  41b52c:	call   0x429490
  41b531:	lea    edx,[rax+0xc]
  41b534:	mov    rcx,rbx
  41b537:	movsx  edx,dx
  41b53a:	call   0x40d4d0
  41b53f:	xor    edx,edx
  41b541:	mov    rcx,rbx
  41b544:	call   0x40d490
  41b549:	mov    rcx,QWORD PTR [rsi+0x10]
  41b54d:	call   0x429490
  41b552:	mov    rcx,rbx
  41b555:	movzx  edx,al
  41b558:	call   0x40d520
  41b55d:	mov    rbp,QWORD PTR [rsi+0x10]
  41b561:	mov    rcx,rbp
  41b564:	call   0x429490
  41b569:	mov    rdx,rbp
  41b56c:	movsxd r8,eax
  41b56f:	mov    rcx,rbx
  41b572:	call   0x40d260
  41b577:	mov    edx,0x1
  41b57c:	mov    rcx,rbx
  41b57f:	call   0x40d520
  41b584:	xor    edx,edx
  41b586:	mov    rcx,rbx
  41b589:	call   0x40d520
  41b58e:	mov    edx,0x20
  41b593:	mov    rcx,rbx
  41b596:	call   0x40d520
  41b59b:	mov    edx,DWORD PTR [rsi+0x28]
  41b59e:	mov    rcx,rbx
  41b5a1:	call   0x40d490
  41b5a6:	mov    DWORD PTR [rdi],0x1
  41b5ac:	xor    eax,eax
  41b5ae:	add    rsp,0x28
  41b5b2:	pop    rbx
  41b5b3:	pop    rsi
  41b5b4:	pop    rdi
  41b5b5:	pop    rbp
  41b5b6:	ret    
  41b5b7:	nop    WORD PTR [rax+rax*1+0x0]
  41b5c0:	movzx  eax,WORD PTR [rsi+0x44]
  41b5c4:	and    eax,0xfffffffe
  41b5c7:	or     eax,0x24
  41b5ca:	mov    WORD PTR [rsi+0x44],ax
  41b5ce:	xor    eax,eax
  41b5d0:	add    rsp,0x28
  41b5d4:	pop    rbx
  41b5d5:	pop    rsi
  41b5d6:	pop    rdi
  41b5d7:	pop    rbp
  41b5d8:	ret    
  41b5d9:	nop    DWORD PTR [rax+0x0]
  41b5e0:	mov    edx,0x1
  41b5e5:	mov    rcx,rbx
  41b5e8:	call   0x40ab40
  41b5ed:	cmp    eax,0x1
  41b5f0:	jne    0x41b610
  41b5f2:	cmp    DWORD PTR [rbx+0x148],0x1
  41b5f9:	mov    BYTE PTR [rbx+0xf1],0xf
  41b600:	je     0x41b4fa
  41b606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b610:	mov    eax,0xffffffff
  41b615:	jmp    0x41b5ae
  41b617:	nop    WORD PTR [rax+rax*1+0x0]
  41b620:	mov    r9d,DWORD PTR [rsi+0x18]
  41b624:	lea    r8,[rip+0x17c8d]        # 0x4332b8
  41b62b:	lea    rcx,[rip+0x1708e]        # 0x4326c0
  41b632:	mov    edx,0x9e55
  41b637:	call   0x423fa0
  41b63c:	jmp    0x41b4bb
  41b641:	nop    DWORD PTR [rax+rax*1+0x0]
  41b646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b650:	push   r13
  41b652:	push   r12
  41b654:	push   rbp
  41b655:	push   rdi
  41b656:	push   rsi
  41b657:	push   rbx
  41b658:	sub    rsp,0x38
  41b65c:	test   rdx,rdx
  41b65f:	mov    rbx,rcx
  41b662:	mov    rsi,rdx
  41b665:	mov    edi,r8d
  41b668:	mov    ebp,r9d
  41b66b:	je     0x41b810
  41b671:	mov    rax,QWORD PTR [rip+0x1d538]        # 0x438bb0
  41b678:	mov    eax,DWORD PTR [rax]
  41b67a:	test   eax,eax
  41b67c:	jne    0x41b822
  41b682:	mov    edx,0x1
  41b687:	mov    rcx,rbx
  41b68a:	call   0x40ab40
  41b68f:	cmp    eax,0x1
  41b692:	jne    0x41b810
  41b698:	add    DWORD PTR [rsi+0x8],0x1
  41b69c:	cmp    QWORD PTR [rbx+0x138],0x0
  41b6a4:	je     0x41b6b2
  41b6a6:	lea    rcx,[rbx+0x138]
  41b6ad:	call   0x4049c0
  41b6b2:	movzx  eax,WORD PTR [rbx]
  41b6b5:	mov    QWORD PTR [rbx+0x138],rsi
  41b6bc:	cmp    ax,0x500
  41b6c0:	je     0x41b770
  41b6c6:	cmp    ax,0x6ff
  41b6ca:	jbe    0x41b734
  41b6cc:	cmp    ax,0x701
  41b6d0:	mov    BYTE PTR [rbx+0xf1],0x3
  41b6d7:	ja     0x41b750
  41b6d9:	cmp    edi,0x5
  41b6dc:	jne    0x41b6e8
  41b6de:	cmp    DWORD PTR [rsi+0x50],0x2
  41b6e2:	je     0x41b843
  41b6e8:	lea    rax,[rip+0x183ea]        # 0x433ad9
  41b6ef:	mov    edx,DWORD PTR [rsi+0x18]
  41b6f2:	mov    r9d,ebp
  41b6f5:	mov    rcx,rbx
  41b6f8:	movzx  r8d,BYTE PTR [rax+rdi*1]
  41b6fd:	mov    eax,DWORD PTR [rsi+0x28]
  41b700:	mov    DWORD PTR [rsp+0x20],eax
  41b704:	call   0x416ff0
  41b709:	mov    DWORD PTR [rbx+0x178],0x7
  41b713:	mov    rcx,rbx
  41b716:	mov    edx,0x3
  41b71b:	call   0x40ab40
  41b720:	mov    rcx,rbx
  41b723:	add    rsp,0x38
  41b727:	pop    rbx
  41b728:	pop    rsi
  41b729:	pop    rdi
  41b72a:	pop    rbp
  41b72b:	pop    r12
  41b72d:	pop    r13
  41b72f:	jmp    0x40d5c0
  41b734:	xor    edx,edx
  41b736:	mov    rcx,rbx
  41b739:	call   0x40ab40
  41b73e:	xor    eax,eax
  41b740:	add    rsp,0x38
  41b744:	pop    rbx
  41b745:	pop    rsi
  41b746:	pop    rdi
  41b747:	pop    rbp
  41b748:	pop    r12
  41b74a:	pop    r13
  41b74c:	ret    
  41b74d:	nop    DWORD PTR [rax]
  41b750:	xor    edx,edx
  41b752:	mov    rcx,rbx
  41b755:	call   0x4176d0
  41b75a:	cmp    edi,0x5
  41b75d:	je     0x41b6de
  41b763:	jmp    0x41b6e8
  41b768:	nop    DWORD PTR [rax+rax*1+0x0]
  41b770:	mov    rcx,QWORD PTR [rsi+0x10]
  41b774:	call   0x429490
  41b779:	mov    edx,0x82
  41b77e:	mov    rcx,rbx
  41b781:	mov    BYTE PTR [rbx+0xf1],0xf
  41b788:	mov    r12,rax
  41b78b:	call   0x40d520
  41b790:	lea    eax,[rdi-0x5]
  41b793:	mov    r8d,0xf5
  41b799:	cmp    r12,0xf5
  41b7a0:	cmova  r12,r8
  41b7a4:	mov    rcx,rbx
  41b7a7:	cmp    eax,0x2
  41b7aa:	sbb    edx,edx
  41b7ac:	and    edx,0x4
  41b7af:	cmp    eax,0x2
  41b7b2:	lea    edx,[rdx+r12*1+0x6]
  41b7b7:	sbb    r13,r13
  41b7ba:	and    r13d,0x4
  41b7be:	movzx  edx,dx
  41b7c1:	call   0x40d4d0
  41b7c6:	xor    edx,edx
  41b7c8:	mov    rcx,rbx
  41b7cb:	call   0x40d490
  41b7d0:	mov    edx,r12d
  41b7d3:	mov    rcx,rbx
  41b7d6:	call   0x40d520
  41b7db:	mov    rdx,QWORD PTR [rsi+0x10]
  41b7df:	mov    r8,r12
  41b7e2:	mov    rcx,rbx
  41b7e5:	call   0x40d260
  41b7ea:	movzx  edx,dil
  41b7ee:	mov    rcx,rbx
  41b7f1:	call   0x40d520
  41b7f6:	test   r13,r13
  41b7f9:	je     0x41b713
  41b7ff:	mov    edx,ebp
  41b801:	mov    rcx,rbx
  41b804:	call   0x40d490
  41b809:	jmp    0x41b713
  41b80e:	xchg   ax,ax
  41b810:	mov    eax,0xffffffff
  41b815:	add    rsp,0x38
  41b819:	pop    rbx
  41b81a:	pop    rsi
  41b81b:	pop    rdi
  41b81c:	pop    rbp
  41b81d:	pop    r12
  41b81f:	pop    r13
  41b821:	ret    
  41b822:	mov    r9d,DWORD PTR [rdx+0x18]
  41b826:	lea    r8,[rip+0x17ab3]        # 0x4332e0
  41b82d:	lea    rcx,[rip+0x16e8c]        # 0x4326c0
  41b834:	mov    edx,0xa4a5
  41b839:	call   0x423fa0
  41b83e:	jmp    0x41b682
  41b843:	mov    edx,DWORD PTR [rsi+0x18]
  41b846:	xor    r9d,r9d
  41b849:	mov    r8d,0x1
  41b84f:	mov    rcx,rbx
  41b852:	mov    DWORD PTR [rsp+0x20],0x0
  41b85a:	call   0x416ff0
  41b85f:	cmp    WORD PTR [rbx],0x702
  41b864:	mov    rcx,rbx
  41b867:	sbb    edx,edx
  41b869:	and    edx,0xffffff81
  41b86c:	add    edx,0xff
  41b872:	call   0x40d520
  41b877:	mov    eax,DWORD PTR [rsi+0x28]
  41b87a:	mov    edx,DWORD PTR [rsi+0x18]
  41b87d:	mov    r9d,ebp
  41b880:	mov    r8d,0x20
  41b886:	mov    rcx,rbx
  41b889:	mov    DWORD PTR [rsp+0x20],eax
  41b88d:	call   0x416ff0
  41b892:	jmp    0x41b709
  41b897:	nop    WORD PTR [rax+rax*1+0x0]
  41b8a0:	push   r13
  41b8a2:	push   r12
  41b8a4:	push   rbp
  41b8a5:	push   rdi
  41b8a6:	push   rsi
  41b8a7:	push   rbx
  41b8a8:	sub    rsp,0x78
  41b8ac:	test   rdx,rdx
  41b8af:	je     0x41bc43
  41b8b5:	mov    rsi,QWORD PTR [rip+0x1d2f4]        # 0x438bb0
  41b8bc:	mov    rdi,r8
  41b8bf:	mov    rbp,r9
  41b8c2:	mov    r12,rdx
  41b8c5:	mov    rbx,rcx
  41b8c8:	mov    r8d,DWORD PTR [rsi]
  41b8cb:	test   r8d,r8d
  41b8ce:	jne    0x41bc22
  41b8d4:	test   rdi,rdi
  41b8d7:	je     0x41bb14
  41b8dd:	test   rbp,rbp
  41b8e0:	je     0x41bb14
  41b8e6:	xor    eax,eax
  41b8e8:	cmp    WORD PTR [rbx],0x6ff
  41b8ed:	mov    DWORD PTR [rdi],0x0
  41b8f3:	mov    DWORD PTR [rbp+0x0],0x0
  41b8fa:	ja     0x41b910
  41b8fc:	add    rsp,0x78
  41b900:	pop    rbx
  41b901:	pop    rsi
  41b902:	pop    rdi
  41b903:	pop    rbp
  41b904:	pop    r12
  41b906:	pop    r13
  41b908:	ret    
  41b909:	nop    DWORD PTR [rax+0x0]
  41b910:	mov    edx,0x1
  41b915:	mov    rcx,rbx
  41b918:	call   0x40ab40
  41b91d:	cmp    eax,0x1
  41b920:	jne    0x41bc43
  41b926:	add    DWORD PTR [r12+0x8],0x1
  41b92c:	cmp    QWORD PTR [rbx+0x138],0x0
  41b934:	je     0x41b942
  41b936:	lea    rcx,[rbx+0x138]
  41b93d:	call   0x4049c0
  41b942:	movzx  eax,WORD PTR [rbx]
  41b945:	mov    QWORD PTR [rbx+0x138],r12
  41b94c:	mov    BYTE PTR [rbx+0xf1],0x3
  41b953:	cmp    ax,0x701
  41b957:	ja     0x41bc10
  41b95d:	cmp    ax,0x700
  41b961:	ja     0x41bb32
  41b967:	mov    edx,0xe
  41b96c:	mov    rcx,rbx
  41b96f:	lea    r13,[rsp+0x50]
  41b974:	call   0x40d4d0
  41b979:	lea    rdx,[rip+0x16d5e]        # 0x4326de
  41b980:	mov    rcx,r13
  41b983:	call   0x416f80
  41b988:	mov    rdx,r13
  41b98b:	mov    r8,rax
  41b98e:	mov    rcx,rbx
  41b991:	call   0x40d260
  41b996:	mov    edx,0x2
  41b99b:	mov    rcx,rbx
  41b99e:	call   0x40d4d0
  41b9a3:	xor    edx,edx
  41b9a5:	mov    rcx,rbx
  41b9a8:	call   0x40d520
  41b9ad:	xor    edx,edx
  41b9af:	mov    rcx,rbx
  41b9b2:	call   0x40d520
  41b9b7:	mov    edx,0x26
  41b9bc:	mov    rcx,rbx
  41b9bf:	call   0x40d520
  41b9c4:	mov    edx,0x4
  41b9c9:	mov    rcx,rbx
  41b9cc:	call   0x40d520
  41b9d1:	mov    edx,0x4
  41b9d6:	mov    rcx,rbx
  41b9d9:	call   0x40d520
  41b9de:	mov    edx,DWORD PTR [r12+0x18]
  41b9e3:	mov    rcx,rbx
  41b9e6:	call   0x40d490
  41b9eb:	xor    edx,edx
  41b9ed:	mov    rcx,rbx
  41b9f0:	call   0x40d520
  41b9f5:	xor    edx,edx
  41b9f7:	mov    rcx,rbx
  41b9fa:	call   0x40d520
  41b9ff:	mov    edx,0x26
  41ba04:	mov    rcx,rbx
  41ba07:	call   0x40d520
  41ba0c:	mov    edx,0x4
  41ba11:	mov    rcx,rbx
  41ba14:	call   0x40d520
  41ba19:	mov    edx,0x4
  41ba1e:	mov    rcx,rbx
  41ba21:	call   0x40d520
  41ba26:	mov    edx,0x100
  41ba2b:	mov    rcx,rbx
  41ba2e:	call   0x40d490
  41ba33:	xor    edx,edx
  41ba35:	mov    rcx,rbx
  41ba38:	call   0x40d520
  41ba3d:	mov    edx,0x1
  41ba42:	mov    rcx,rbx
  41ba45:	call   0x40d520
  41ba4a:	mov    edx,0x26
  41ba4f:	mov    rcx,rbx
  41ba52:	call   0x40d520
  41ba57:	mov    edx,0x4
  41ba5c:	mov    rcx,rbx
  41ba5f:	call   0x40d520
  41ba64:	xor    edx,edx
  41ba66:	mov    rcx,rbx
  41ba69:	call   0x40d520
  41ba6e:	xor    edx,edx
  41ba70:	mov    rcx,rbx
  41ba73:	call   0x40d520
  41ba78:	mov    edx,0x1
  41ba7d:	mov    rcx,rbx
  41ba80:	call   0x40d520
  41ba85:	mov    edx,0x26
  41ba8a:	mov    rcx,rbx
  41ba8d:	call   0x40d520
  41ba92:	mov    edx,0x4
  41ba97:	mov    rcx,rbx
  41ba9a:	call   0x40d520
  41ba9f:	xor    edx,edx
  41baa1:	mov    rcx,rbx
  41baa4:	call   0x40d520
  41baa9:	mov    edx,0x3
  41baae:	mov    rcx,rbx
  41bab1:	mov    DWORD PTR [rbx+0x178],0x0
  41babb:	call   0x40ab40
  41bac0:	mov    rcx,rbx
  41bac3:	call   0x40d5c0
  41bac8:	test   eax,eax
  41baca:	js     0x41b8fc
  41bad0:	lea    r13,[rsp+0x50]
  41bad5:	lea    r12,[rsp+0x4c]
  41bada:	mov    rcx,rbx
  41badd:	mov    r9d,0x4000
  41bae3:	mov    r8,r12
  41bae6:	mov    rdx,r13
  41bae9:	call   0x408b20
  41baee:	mov    ecx,DWORD PTR [rsi]
  41baf0:	test   ecx,ecx
  41baf2:	jne    0x41bc50
  41baf8:	test   eax,eax
  41bafa:	je     0x41bb51
  41bafc:	cmp    eax,0x1
  41baff:	mov    edx,0x0
  41bb04:	cmove  eax,edx
  41bb07:	add    rsp,0x78
  41bb0b:	pop    rbx
  41bb0c:	pop    rsi
  41bb0d:	pop    rdi
  41bb0e:	pop    rbp
  41bb0f:	pop    r12
  41bb11:	pop    r13
  41bb13:	ret    
  41bb14:	lea    rdx,[rip+0x16ba5]        # 0x4326c0
  41bb1b:	lea    rcx,[rip+0x17813]        # 0x433335
  41bb22:	mov    r8d,0xaa0
  41bb28:	call   0x4291e0
  41bb2d:	jmp    0x41b8e6
  41bb32:	mov    rcx,rbx
  41bb35:	mov    edx,0xffffffff
  41bb3a:	call   0x40d4d0
  41bb3f:	mov    edx,0x7
  41bb44:	mov    rcx,rbx
  41bb47:	call   0x40d4d0
  41bb4c:	jmp    0x41b996
  41bb51:	cmp    DWORD PTR [rsp+0x50],0xfca
  41bb59:	jne    0x41bada
  41bb5f:	cmp    BYTE PTR [rbx+0x141],0x0
  41bb66:	je     0x41bada
  41bb6c:	mov    eax,DWORD PTR [rbx+0x144]
  41bb72:	test   eax,eax
  41bb74:	jne    0x41bada
  41bb7a:	mov    rax,QWORD PTR [rbx+0x110]
  41bb81:	test   rax,rax
  41bb84:	je     0x41bada
  41bb8a:	cmp    WORD PTR [rax+0x8],0x2
  41bb8f:	jne    0x41bada
  41bb95:	mov    rdx,QWORD PTR [rax]
  41bb98:	mov    rax,QWORD PTR [rdx]
  41bb9b:	cmp    DWORD PTR [rax+0x14],0x26
  41bb9f:	jne    0x41bada
  41bba5:	mov    rdx,QWORD PTR [rdx+0x8]
  41bba9:	cmp    DWORD PTR [rdx+0x14],0x26
  41bbad:	jne    0x41bada
  41bbb3:	cmp    DWORD PTR [rax+0x10],0x4
  41bbb7:	jne    0x41bada
  41bbbd:	cmp    DWORD PTR [rdx+0x10],0x4
  41bbc1:	jne    0x41bada
  41bbc7:	mov    rax,QWORD PTR [rax+0x48]
  41bbcb:	mov    eax,DWORD PTR [rax]
  41bbcd:	mov    DWORD PTR [rdi],eax
  41bbcf:	mov    rax,QWORD PTR [rdx+0x48]
  41bbd3:	mov    r9d,DWORD PTR [rax]
  41bbd6:	mov    DWORD PTR [rbp+0x0],r9d
  41bbda:	cmp    DWORD PTR [rsi],0x0
  41bbdd:	je     0x41bada
  41bbe3:	mov    eax,DWORD PTR [rdi]
  41bbe5:	lea    r8,[rip+0x177e4]        # 0x4333d0
  41bbec:	lea    rcx,[rip+0x16acd]        # 0x4326c0
  41bbf3:	mov    edx,0xaf77
  41bbf8:	mov    DWORD PTR [rsp+0x20],eax
  41bbfc:	call   0x423fa0
  41bc01:	jmp    0x41bada
  41bc06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bc10:	xor    edx,edx
  41bc12:	mov    rcx,rbx
  41bc15:	call   0x4176d0
  41bc1a:	movzx  eax,WORD PTR [rbx]
  41bc1d:	jmp    0x41b95d
  41bc22:	mov    r9d,DWORD PTR [rdx+0x18]
  41bc26:	lea    r8,[rip+0x176db]        # 0x433308
  41bc2d:	lea    rcx,[rip+0x16a8c]        # 0x4326c0
  41bc34:	mov    edx,0xa9d5
  41bc39:	call   0x423fa0
  41bc3e:	jmp    0x41b8d4
  41bc43:	mov    eax,0xffffffff
  41bc48:	jmp    0x41b8fc
  41bc4d:	nop    DWORD PTR [rax]
  41bc50:	lea    r8,[rip+0x176f9]        # 0x433350
  41bc57:	lea    rcx,[rip+0x16a62]        # 0x4326c0
  41bc5e:	mov    r9d,eax
  41bc61:	mov    edx,0xae27
  41bc66:	mov    DWORD PTR [rsp+0x3c],eax
  41bc6a:	call   0x423fa0
  41bc6f:	mov    edx,DWORD PTR [rsi]
  41bc71:	mov    eax,DWORD PTR [rsp+0x3c]
  41bc75:	test   edx,edx
  41bc77:	je     0x41baf8
  41bc7d:	mov    edx,DWORD PTR [rsp+0x4c]
  41bc81:	mov    r9d,DWORD PTR [rsp+0x50]
  41bc86:	lea    r8,[rip+0x17703]        # 0x433390
  41bc8d:	mov    ecx,edx
  41bc8f:	and    edx,0x10
  41bc92:	and    ecx,0x2
  41bc95:	mov    DWORD PTR [rsp+0x20],edx
  41bc99:	mov    edx,0xae37
  41bc9e:	mov    DWORD PTR [rsp+0x28],ecx
  41bca2:	lea    rcx,[rip+0x16a17]        # 0x4326c0
  41bca9:	call   0x423fa0
  41bcae:	mov    eax,DWORD PTR [rsp+0x3c]
  41bcb2:	jmp    0x41baf8
  41bcb7:	nop    WORD PTR [rax+rax*1+0x0]
  41bcc0:	push   rdi
  41bcc1:	push   rsi
  41bcc2:	push   rbx
  41bcc3:	sub    rsp,0x40
  41bcc7:	test   rdx,rdx
  41bcca:	je     0x41be80
  41bcd0:	mov    rax,QWORD PTR [rip+0x1ced9]        # 0x438bb0
  41bcd7:	mov    rsi,rdx
  41bcda:	mov    rbx,rcx
  41bcdd:	mov    eax,DWORD PTR [rax]
  41bcdf:	test   eax,eax
  41bce1:	jne    0x41be90
  41bce7:	mov    edx,0x1
  41bcec:	mov    rcx,rbx
  41bcef:	call   0x40ab40
  41bcf4:	cmp    eax,0x1
  41bcf7:	jne    0x41be80
  41bcfd:	add    DWORD PTR [rsi+0x8],0x1
  41bd01:	cmp    QWORD PTR [rbx+0x138],0x0
  41bd09:	je     0x41bd17
  41bd0b:	lea    rcx,[rbx+0x138]
  41bd12:	call   0x4049c0
  41bd17:	movzx  eax,WORD PTR [rbx]
  41bd1a:	mov    QWORD PTR [rbx+0x138],rsi
  41bd21:	cmp    ax,0x500
  41bd25:	je     0x41be32
  41bd2b:	cmp    ax,0x6ff
  41bd2f:	jbe    0x41bdc7
  41bd35:	cmp    ax,0x701
  41bd39:	mov    BYTE PTR [rbx+0xf1],0x3
  41bd40:	ja     0x41be20
  41bd46:	cmp    ax,0x700
  41bd4a:	jbe    0x41bde4
  41bd50:	mov    edx,0xffffffff
  41bd55:	mov    rcx,rbx
  41bd58:	call   0x40d4d0
  41bd5d:	mov    edx,0x9
  41bd62:	mov    rcx,rbx
  41bd65:	call   0x40d4d0
  41bd6a:	mov    edx,0x2
  41bd6f:	mov    rcx,rbx
  41bd72:	call   0x40d4d0
  41bd77:	xor    edx,edx
  41bd79:	mov    rcx,rbx
  41bd7c:	call   0x40d520
  41bd81:	xor    edx,edx
  41bd83:	mov    rcx,rbx
  41bd86:	call   0x40d520
  41bd8b:	mov    edx,0x26
  41bd90:	mov    rcx,rbx
  41bd93:	call   0x40d520
  41bd98:	mov    edx,0x4
  41bd9d:	mov    rcx,rbx
  41bda0:	call   0x40d520
  41bda5:	mov    edx,0x4
  41bdaa:	mov    rcx,rbx
  41bdad:	call   0x40d520
  41bdb2:	mov    edx,DWORD PTR [rsi+0x18]
  41bdb5:	mov    rcx,rbx
  41bdb8:	call   0x40d490
  41bdbd:	mov    DWORD PTR [rbx+0x178],0x9
  41bdc7:	mov    edx,0x3
  41bdcc:	mov    rcx,rbx
  41bdcf:	call   0x40ab40
  41bdd4:	mov    rcx,rbx
  41bdd7:	call   0x40d5c0
  41bddc:	add    rsp,0x40
  41bde0:	pop    rbx
  41bde1:	pop    rsi
  41bde2:	pop    rdi
  41bde3:	ret    
  41bde4:	mov    rcx,rbx
  41bde7:	lea    rdi,[rsp+0x20]
  41bdec:	mov    edx,0xe
  41bdf1:	call   0x40d4d0
  41bdf6:	lea    rdx,[rip+0x1762e]        # 0x43342b
  41bdfd:	mov    rcx,rdi
  41be00:	call   0x416f80
  41be05:	mov    rdx,rdi
  41be08:	mov    r8,rax
  41be0b:	mov    rcx,rbx
  41be0e:	call   0x40d260
  41be13:	jmp    0x41bd6a
  41be18:	nop    DWORD PTR [rax+rax*1+0x0]
  41be20:	xor    edx,edx
  41be22:	mov    rcx,rbx
  41be25:	call   0x4176d0
  41be2a:	movzx  eax,WORD PTR [rbx]
  41be2d:	jmp    0x41bd46
  41be32:	mov    edx,0x80
  41be37:	mov    rcx,rbx
  41be3a:	mov    BYTE PTR [rbx+0xf1],0xf
  41be41:	call   0x40d520
  41be46:	mov    edx,0x5
  41be4b:	mov    rcx,rbx
  41be4e:	call   0x40d4d0
  41be53:	mov    edx,DWORD PTR [rsi+0x18]
  41be56:	mov    rcx,rbx
  41be59:	call   0x40d490
  41be5e:	cmp    DWORD PTR [rsi+0x40],0x1
  41be62:	je     0x41beb1
  41be64:	xor    edx,edx
  41be66:	mov    rcx,rbx
  41be69:	call   0x40d520
  41be6e:	movzx  eax,WORD PTR [rbx]
  41be71:	jmp    0x41bd2b
  41be76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41be80:	mov    eax,0xffffffff
  41be85:	add    rsp,0x40
  41be89:	pop    rbx
  41be8a:	pop    rsi
  41be8b:	pop    rdi
  41be8c:	ret    
  41be8d:	nop    DWORD PTR [rax]
  41be90:	mov    r9d,DWORD PTR [rdx+0x18]
  41be94:	lea    r8,[rip+0x1756d]        # 0x433408
  41be9b:	lea    rcx,[rip+0x1681e]        # 0x4326c0
  41bea2:	mov    edx,0xb0e5
  41bea7:	call   0x423fa0
  41beac:	jmp    0x41bce7
  41beb1:	mov    edx,0x1
  41beb6:	mov    rcx,rbx
  41beb9:	call   0x40d520
  41bebe:	mov    DWORD PTR [rsi+0x40],0x2
  41bec5:	movzx  eax,WORD PTR [rbx]
  41bec8:	jmp    0x41bd2b
  41becd:	nop    DWORD PTR [rax]
  41bed0:	push   rbp
  41bed1:	push   rdi
  41bed2:	push   rsi
  41bed3:	push   rbx
  41bed4:	sub    rsp,0x48
  41bed8:	test   rdx,rdx
  41bedb:	je     0x41c121
  41bee1:	mov    rax,QWORD PTR [rip+0x1ccc8]        # 0x438bb0
  41bee8:	mov    rsi,rdx
  41beeb:	mov    rbx,rcx
  41beee:	mov    eax,DWORD PTR [rax]
  41bef0:	test   eax,eax
  41bef2:	jne    0x41c100
  41bef8:	xor    eax,eax
  41befa:	cmp    WORD PTR [rbx],0x6ff
  41beff:	ja     0x41bf10
  41bf01:	add    rsp,0x48
  41bf05:	pop    rbx
  41bf06:	pop    rsi
  41bf07:	pop    rdi
  41bf08:	pop    rbp
  41bf09:	ret    
  41bf0a:	nop    WORD PTR [rax+rax*1+0x0]
  41bf10:	mov    edx,0x1
  41bf15:	mov    rcx,rbx
  41bf18:	call   0x40ab40
  41bf1d:	cmp    eax,0x1
  41bf20:	jne    0x41c121
  41bf26:	add    DWORD PTR [rsi+0x8],0x1
  41bf2a:	cmp    QWORD PTR [rbx+0x138],0x0
  41bf32:	je     0x41bf40
  41bf34:	lea    rcx,[rbx+0x138]
  41bf3b:	call   0x4049c0
  41bf40:	movzx  eax,WORD PTR [rbx]
  41bf43:	mov    QWORD PTR [rbx+0x138],rsi
  41bf4a:	mov    BYTE PTR [rbx+0xf1],0x3
  41bf51:	cmp    ax,0x701
  41bf55:	ja     0x41c0d1
  41bf5b:	cmp    ax,0x700
  41bf5f:	ja     0x41c0b2
  41bf65:	mov    edx,0xf
  41bf6a:	mov    rcx,rbx
  41bf6d:	lea    rdi,[rsp+0x20]
  41bf72:	call   0x40d4d0
  41bf77:	lea    rdx,[rip+0x174e7]        # 0x433465
  41bf7e:	mov    rcx,rdi
  41bf81:	call   0x416f80
  41bf86:	mov    rdx,rdi
  41bf89:	mov    r8,rax
  41bf8c:	mov    rcx,rbx
  41bf8f:	call   0x40d260
  41bf94:	xor    edx,edx
  41bf96:	mov    rcx,rbx
  41bf99:	call   0x40d4d0
  41bf9e:	xor    edx,edx
  41bfa0:	mov    rcx,rbx
  41bfa3:	call   0x40d520
  41bfa8:	xor    edx,edx
  41bfaa:	mov    rcx,rbx
  41bfad:	call   0x40d520
  41bfb2:	mov    edx,0x26
  41bfb7:	mov    rcx,rbx
  41bfba:	call   0x40d520
  41bfbf:	mov    edx,0x4
  41bfc4:	mov    rcx,rbx
  41bfc7:	call   0x40d520
  41bfcc:	mov    edx,0x4
  41bfd1:	mov    rcx,rbx
  41bfd4:	call   0x40d520
  41bfd9:	mov    edx,DWORD PTR [rsi+0x18]
  41bfdc:	mov    rcx,rbx
  41bfdf:	call   0x40d490
  41bfe4:	xor    edx,edx
  41bfe6:	mov    rcx,rbx
  41bfe9:	call   0x40d520
  41bfee:	xor    edx,edx
  41bff0:	mov    rcx,rbx
  41bff3:	call   0x40d520
  41bff8:	mov    edx,0x26
  41bffd:	mov    rcx,rbx
  41c000:	call   0x40d520
  41c005:	mov    edx,0x4
  41c00a:	mov    rcx,rbx
  41c00d:	call   0x40d520
  41c012:	mov    edx,0x4
  41c017:	mov    rcx,rbx
  41c01a:	call   0x40d520
  41c01f:	mov    edx,0x2
  41c024:	mov    rcx,rbx
  41c027:	call   0x40d490
  41c02c:	xor    edx,edx
  41c02e:	mov    rcx,rbx
  41c031:	call   0x40d520
  41c036:	xor    edx,edx
  41c038:	mov    rcx,rbx
  41c03b:	call   0x40d520
  41c040:	mov    edx,0xa7
  41c045:	mov    rcx,rbx
  41c048:	call   0x40d520
  41c04d:	mov    rcx,QWORD PTR [rsi+0x10]
  41c051:	call   0x429490
  41c056:	movsx  ebp,ax
  41c059:	mov    rcx,rbx
  41c05c:	mov    rdi,rax
  41c05f:	mov    edx,ebp
  41c061:	call   0x40d4d0
  41c066:	cmp    WORD PTR [rbx],0x700
  41c06b:	ja     0x41c0e3
  41c071:	mov    edx,ebp
  41c073:	mov    rcx,rbx
  41c076:	call   0x40d4d0
  41c07b:	mov    rdx,QWORD PTR [rsi+0x10]
  41c07f:	movsxd r8,edi
  41c082:	mov    rcx,rbx
  41c085:	call   0x40d260
  41c08a:	mov    edx,0x3
  41c08f:	mov    rcx,rbx
  41c092:	mov    DWORD PTR [rbx+0x178],0x8
  41c09c:	call   0x40ab40
  41c0a1:	mov    rcx,rbx
  41c0a4:	call   0x40d5c0
  41c0a9:	add    rsp,0x48
  41c0ad:	pop    rbx
  41c0ae:	pop    rsi
  41c0af:	pop    rdi
  41c0b0:	pop    rbp
  41c0b1:	ret    
  41c0b2:	mov    rcx,rbx
  41c0b5:	mov    edx,0xffffffff
  41c0ba:	call   0x40d4d0
  41c0bf:	mov    edx,0x8
  41c0c4:	mov    rcx,rbx
  41c0c7:	call   0x40d4d0
  41c0cc:	jmp    0x41bf94
  41c0d1:	xor    edx,edx
  41c0d3:	mov    rcx,rbx
  41c0d6:	call   0x4176d0
  41c0db:	movzx  eax,WORD PTR [rbx]
  41c0de:	jmp    0x41bf5b
  41c0e3:	lea    rdx,[rbx+0x70]
  41c0e7:	mov    r8d,0x5
  41c0ed:	mov    rcx,rbx
  41c0f0:	call   0x40d260
  41c0f5:	jmp    0x41c071
  41c0fa:	nop    WORD PTR [rax+rax*1+0x0]
  41c100:	mov    r9d,DWORD PTR [rdx+0x18]
  41c104:	lea    r8,[rip+0x17335]        # 0x433440
  41c10b:	lea    rcx,[rip+0x165ae]        # 0x4326c0
  41c112:	mov    edx,0xb4b5
  41c117:	call   0x423fa0
  41c11c:	jmp    0x41bef8
  41c121:	mov    eax,0xffffffff
  41c126:	jmp    0x41bf01
  41c12b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c130:	push   r13
  41c132:	push   r12
  41c134:	push   rbp
  41c135:	push   rdi
  41c136:	push   rsi
  41c137:	push   rbx
  41c138:	sub    rsp,0x58
  41c13c:	mov    rbp,QWORD PTR [rsp+0xb0]
  41c144:	test   rdx,rdx
  41c147:	je     0x41c350
  41c14d:	mov    rax,QWORD PTR [rip+0x1ca5c]        # 0x438bb0
  41c154:	mov    r12d,r9d
  41c157:	mov    edi,r8d
  41c15a:	mov    rsi,rdx
  41c15d:	mov    rbx,rcx
  41c160:	mov    eax,DWORD PTR [rax]
  41c162:	test   eax,eax
  41c164:	jne    0x41c380
  41c16a:	cmp    edi,0x1
  41c16d:	je     0x41c340
  41c173:	mov    edx,0x1
  41c178:	mov    rcx,rbx
  41c17b:	call   0x40ab40
  41c180:	cmp    eax,0x1
  41c183:	jne    0x41c350
  41c189:	add    DWORD PTR [rsi+0x8],0x1
  41c18d:	cmp    QWORD PTR [rbx+0x138],0x0
  41c195:	je     0x41c1a3
  41c197:	lea    rcx,[rbx+0x138]
  41c19e:	call   0x4049c0
  41c1a3:	movzx  eax,WORD PTR [rbx]
  41c1a6:	mov    QWORD PTR [rbx+0x138],rsi
  41c1ad:	cmp    ax,0x500
  41c1b1:	je     0x41c517
  41c1b7:	cmp    ax,0x6ff
  41c1bb:	jbe    0x41c2fc
  41c1c1:	cmp    ax,0x701
  41c1c5:	mov    BYTE PTR [rbx+0xf1],0x3
  41c1cc:	ja     0x41c362
  41c1d2:	cmp    ax,0x700
  41c1d6:	ja     0x41c320
  41c1dc:	mov    edx,0x9
  41c1e1:	mov    rcx,rbx
  41c1e4:	lea    r13,[rsp+0x30]
  41c1e9:	call   0x40d4d0
  41c1ee:	lea    rdx,[rip+0x172a7]        # 0x43349c
  41c1f5:	mov    rcx,r13
  41c1f8:	call   0x416f80
  41c1fd:	mov    rdx,r13
  41c200:	mov    r8,rax
  41c203:	mov    rcx,rbx
  41c206:	call   0x40d260
  41c20b:	xor    edx,edx
  41c20d:	mov    rcx,rbx
  41c210:	call   0x40d4d0
  41c215:	xor    edx,edx
  41c217:	mov    rcx,rbx
  41c21a:	call   0x40d520
  41c21f:	xor    edx,edx
  41c221:	mov    rcx,rbx
  41c224:	call   0x40d520
  41c229:	mov    edx,0x26
  41c22e:	mov    rcx,rbx
  41c231:	call   0x40d520
  41c236:	mov    edx,0x4
  41c23b:	mov    rcx,rbx
  41c23e:	call   0x40d520
  41c243:	mov    edx,0x4
  41c248:	mov    rcx,rbx
  41c24b:	call   0x40d520
  41c250:	mov    edx,DWORD PTR [rsi+0x18]
  41c253:	mov    rcx,rbx
  41c256:	call   0x40d490
  41c25b:	xor    edx,edx
  41c25d:	mov    rcx,rbx
  41c260:	call   0x40d520
  41c265:	xor    edx,edx
  41c267:	mov    rcx,rbx
  41c26a:	call   0x40d520
  41c26f:	mov    edx,0x26
  41c274:	mov    rcx,rbx
  41c277:	call   0x40d520
  41c27c:	mov    edx,0x4
  41c281:	mov    rcx,rbx
  41c284:	call   0x40d520
  41c289:	mov    edx,0x4
  41c28e:	mov    rcx,rbx
  41c291:	call   0x40d520
  41c296:	mov    edx,edi
  41c298:	mov    rcx,rbx
  41c29b:	or     edx,0x20
  41c29e:	call   0x40d490
  41c2a3:	xor    edx,edx
  41c2a5:	mov    rcx,rbx
  41c2a8:	call   0x40d520
  41c2ad:	xor    edx,edx
  41c2af:	mov    rcx,rbx
  41c2b2:	call   0x40d520
  41c2b7:	mov    edx,0x26
  41c2bc:	mov    rcx,rbx
  41c2bf:	call   0x40d520
  41c2c4:	mov    edx,0x4
  41c2c9:	mov    rcx,rbx
  41c2cc:	call   0x40d520
  41c2d1:	mov    edx,0x4
  41c2d6:	mov    rcx,rbx
  41c2d9:	call   0x40d520
  41c2de:	mov    edx,r12d
  41c2e1:	mov    rcx,rbx
  41c2e4:	call   0x40d490
  41c2e9:	cmp    edi,0x1
  41c2ec:	je     0x41c3a1
  41c2f2:	mov    DWORD PTR [rbx+0x178],0x1
  41c2fc:	mov    edx,0x3
  41c301:	mov    rcx,rbx
  41c304:	call   0x40ab40
  41c309:	mov    rcx,rbx
  41c30c:	call   0x40d5c0
  41c311:	add    rsp,0x58
  41c315:	pop    rbx
  41c316:	pop    rsi
  41c317:	pop    rdi
  41c318:	pop    rbp
  41c319:	pop    r12
  41c31b:	pop    r13
  41c31d:	ret    
  41c31e:	xchg   ax,ax
  41c320:	mov    rcx,rbx
  41c323:	mov    edx,0xffffffff
  41c328:	call   0x40d4d0
  41c32d:	mov    edx,0x1
  41c332:	mov    rcx,rbx
  41c335:	call   0x40d4d0
  41c33a:	jmp    0x41c20b
  41c33f:	nop
  41c340:	test   rbp,rbp
  41c343:	je     0x41c350
  41c345:	cmp    WORD PTR [rbp+0x8],0x0
  41c34a:	jne    0x41c173
  41c350:	mov    eax,0xffffffff
  41c355:	add    rsp,0x58
  41c359:	pop    rbx
  41c35a:	pop    rsi
  41c35b:	pop    rdi
  41c35c:	pop    rbp
  41c35d:	pop    r12
  41c35f:	pop    r13
  41c361:	ret    
  41c362:	xor    edx,edx
  41c364:	mov    rcx,rbx
  41c367:	call   0x4176d0
  41c36c:	movzx  eax,WORD PTR [rbx]
  41c36f:	cmp    ax,0x700
  41c373:	jbe    0x41c1dc
  41c379:	jmp    0x41c320
  41c37b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c380:	mov    r9d,DWORD PTR [rdx+0x18]
  41c384:	lea    r8,[rip+0x170ed]        # 0x433478
  41c38b:	lea    rcx,[rip+0x1632e]        # 0x4326c0
  41c392:	mov    edx,0xb8a5
  41c397:	call   0x423fa0
  41c39c:	jmp    0x41c16a
  41c3a1:	xor    edx,edx
  41c3a3:	mov    rcx,rbx
  41c3a6:	mov    QWORD PTR [rsp+0x30],0x0
  41c3af:	call   0x40d520
  41c3b4:	xor    edx,edx
  41c3b6:	mov    rcx,rbx
  41c3b9:	call   0x40d520
  41c3be:	mov    edx,0xe7
  41c3c3:	mov    rcx,rbx
  41c3c6:	call   0x40d520
  41c3cb:	movzx  edi,WORD PTR [rbp+0x8]
  41c3cf:	test   edi,edi
  41c3d1:	je     0x41c40c
  41c3d3:	mov    rax,QWORD PTR [rbp+0x0]
  41c3d7:	mov    rdx,QWORD PTR [rax]
  41c3da:	mov    rdx,QWORD PTR [rdx+0x30]
  41c3de:	cmp    QWORD PTR [rdx],0x0
  41c3e2:	jne    0x41c4b0
  41c3e8:	lea    edx,[rdi-0x1]
  41c3eb:	lea    rcx,[rax+rdx*8]
  41c3ef:	jmp    0x41c407
  41c3f1:	mov    rdx,QWORD PTR [rax+0x8]
  41c3f5:	add    rax,0x8
  41c3f9:	mov    rdx,QWORD PTR [rdx+0x30]
  41c3fd:	cmp    QWORD PTR [rdx],0x0
  41c401:	jne    0x41c4b0
  41c407:	cmp    rax,rcx
  41c40a:	jne    0x41c3f1
  41c40c:	xor    esi,esi
  41c40e:	xor    r12d,r12d
  41c411:	movsx  edx,WORD PTR [rsp+0x30]
  41c416:	mov    rcx,rbx
  41c419:	call   0x40d4d0
  41c41e:	cmp    WORD PTR [rbx],0x700
  41c423:	ja     0x41c500
  41c429:	movsx  edx,WORD PTR [rsp+0x30]
  41c42e:	mov    rcx,rbx
  41c431:	call   0x40d4d0
  41c436:	mov    r8,QWORD PTR [rsp+0x30]
  41c43b:	mov    rdx,r12
  41c43e:	mov    rcx,rbx
  41c441:	call   0x40d260
  41c446:	cmp    rsi,r12
  41c449:	je     0x41c453
  41c44b:	mov    rcx,r12
  41c44e:	call   0x429580
  41c453:	test   edi,edi
  41c455:	je     0x41c2f2
  41c45b:	lea    eax,[rdi-0x1]
  41c45e:	xor    esi,esi
  41c460:	lea    r12,[rax*8+0x8]
  41c468:	nop    DWORD PTR [rax+rax*1+0x0]
  41c470:	mov    rax,QWORD PTR [rbp+0x0]
  41c474:	mov    r8d,0x3
  41c47a:	mov    rcx,rbx
  41c47d:	mov    rdi,QWORD PTR [rax+rsi*1]
  41c481:	add    rsi,0x8
  41c485:	mov    rdx,rdi
  41c488:	call   0x4178e0
  41c48d:	mov    rax,QWORD PTR [rdi]
  41c490:	xor    r8d,r8d
  41c493:	mov    rdx,rdi
  41c496:	mov    rcx,rbx
  41c499:	call   QWORD PTR [rax+0x28]
  41c49c:	cmp    rsi,r12
  41c49f:	jne    0x41c470
  41c4a1:	jmp    0x41c2f2
  41c4a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c4b0:	lea    rsi,[rdx+0x8]
  41c4b4:	mov    rcx,rsi
  41c4b7:	call   0x429490
  41c4bc:	mov    rdx,QWORD PTR [rbx+0x68]
  41c4c0:	lea    rcx,[rsp+0x30]
  41c4c5:	mov    r9d,eax
  41c4c8:	mov    r8,rsi
  41c4cb:	mov    QWORD PTR [rsp+0x20],rcx
  41c4d0:	mov    rcx,rbx
  41c4d3:	mov    rdx,QWORD PTR [rdx]
  41c4d6:	call   0x4175d0
  41c4db:	test   rax,rax
  41c4de:	mov    r12,rax
  41c4e1:	jne    0x41c411
  41c4e7:	xor    edx,edx
  41c4e9:	mov    rcx,rbx
  41c4ec:	call   0x40ab40
  41c4f1:	jmp    0x41c350
  41c4f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c500:	lea    rdx,[rbx+0x70]
  41c504:	mov    r8d,0x5
  41c50a:	mov    rcx,rbx
  41c50d:	call   0x40d260
  41c512:	jmp    0x41c429
  41c517:	mov    BYTE PTR [rbx+0xf1],0xf
  41c51e:	jmp    0x41c4e7
  41c520:	push   rdi
  41c521:	push   rsi
  41c522:	push   rbx
  41c523:	sub    rsp,0x30
  41c527:	test   rdx,rdx
  41c52a:	je     0x41c661
  41c530:	mov    rsi,rdx
  41c533:	mov    rbx,rcx
  41c536:	call   0x417590
  41c53b:	test   eax,eax
  41c53d:	je     0x41c56e
  41c53f:	mov    rdi,QWORD PTR [rip+0x1c66a]        # 0x438bb0
  41c546:	mov    ecx,DWORD PTR [rdi]
  41c548:	test   ecx,ecx
  41c54a:	jne    0x41c640
  41c550:	movzx  edx,WORD PTR [rbx]
  41c553:	xor    eax,eax
  41c555:	cmp    dx,0x500
  41c55a:	je     0x41c5b0
  41c55c:	cmp    dx,0x6ff
  41c561:	jbe    0x41c56e
  41c563:	mov    edx,DWORD PTR [rsi+0x40]
  41c566:	sub    edx,0x1
  41c569:	cmp    edx,0x1
  41c56c:	jbe    0x41c580
  41c56e:	add    rsp,0x30
  41c572:	pop    rbx
  41c573:	pop    rsi
  41c574:	pop    rdi
  41c575:	ret    
  41c576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c580:	mov    edx,DWORD PTR [rdi]
  41c582:	test   edx,edx
  41c584:	je     0x41c56e
  41c586:	lea    r8,[rip+0x16f43]        # 0x4334d0
  41c58d:	lea    rcx,[rip+0x1612c]        # 0x4326c0
  41c594:	mov    edx,0xc312
  41c599:	mov    DWORD PTR [rsp+0x2c],eax
  41c59d:	call   0x423fa0
  41c5a2:	mov    eax,DWORD PTR [rsp+0x2c]
  41c5a6:	jmp    0x41c56e
  41c5a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c5b0:	mov    edx,0x1
  41c5b5:	mov    rcx,rbx
  41c5b8:	call   0x40ab40
  41c5bd:	cmp    eax,0x1
  41c5c0:	jne    0x41c661
  41c5c6:	add    DWORD PTR [rsi+0x8],0x1
  41c5ca:	cmp    QWORD PTR [rbx+0x138],0x0
  41c5d2:	je     0x41c5e0
  41c5d4:	lea    rcx,[rbx+0x138]
  41c5db:	call   0x4049c0
  41c5e0:	mov    edx,0x80
  41c5e5:	mov    rcx,rbx
  41c5e8:	mov    QWORD PTR [rbx+0x138],rsi
  41c5ef:	mov    BYTE PTR [rbx+0xf1],0xf
  41c5f6:	call   0x40d520
  41c5fb:	mov    edx,0x5
  41c600:	mov    rcx,rbx
  41c603:	call   0x40d4d0
  41c608:	mov    edx,DWORD PTR [rsi+0x18]
  41c60b:	mov    rcx,rbx
  41c60e:	call   0x40d490
  41c613:	mov    edx,0x1
  41c618:	mov    rcx,rbx
  41c61b:	call   0x40d520
  41c620:	mov    edx,0x3
  41c625:	mov    rcx,rbx
  41c628:	call   0x40ab40
  41c62d:	mov    rcx,rbx
  41c630:	call   0x40d5c0
  41c635:	movzx  edx,WORD PTR [rbx]
  41c638:	jmp    0x41c55c
  41c63d:	nop    DWORD PTR [rax]
  41c640:	mov    r9d,DWORD PTR [rsi+0x18]
  41c644:	lea    r8,[rip+0x16e5d]        # 0x4334a8
  41c64b:	lea    rcx,[rip+0x1606e]        # 0x4326c0
  41c652:	mov    edx,0xc185
  41c657:	call   0x423fa0
  41c65c:	jmp    0x41c550
  41c661:	mov    eax,0xffffffff
  41c666:	jmp    0x41c56e
  41c66b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c670:	push   rsi
  41c671:	push   rbx
  41c672:	sub    rsp,0x28
  41c676:	mov    rbx,rcx
  41c679:	mov    rsi,rdx
  41c67c:	call   0x417590
  41c681:	test   eax,eax
  41c683:	je     0x41c690
  41c685:	mov    BYTE PTR [rsi+0x1d],0x1
  41c689:	or     BYTE PTR [rbx+0xa0],0x8
  41c690:	xor    eax,eax
  41c692:	add    rsp,0x28
  41c696:	pop    rbx
  41c697:	pop    rsi
  41c698:	ret    
  41c699:	nop    DWORD PTR [rax+0x0]
  41c6a0:	push   rdi
  41c6a1:	push   rsi
  41c6a2:	push   rbx
  41c6a3:	sub    rsp,0x20
  41c6a7:	mov    DWORD PTR [rdx],r8d
  41c6aa:	mov    DWORD PTR [rdx+0x4],0x0
  41c6b1:	mov    edx,0x1
  41c6b6:	mov    rsi,rcx
  41c6b9:	mov    ebx,r8d
  41c6bc:	mov    rdi,r9
  41c6bf:	call   0x40ab40
  41c6c4:	cmp    eax,0x1
  41c6c7:	mov    ecx,0xffffffff
  41c6cc:	jne    0x41c6f6
  41c6ce:	add    ebx,ecx
  41c6d0:	movzx  eax,WORD PTR [rsi]
  41c6d3:	mov    ecx,0x1
  41c6d8:	cmp    ebx,0x1
  41c6db:	ja     0x41c6e8
  41c6dd:	cmp    ax,0x6ff
  41c6e1:	jbe    0x41c720
  41c6e3:	mov    ecx,0x3
  41c6e8:	mov    BYTE PTR [rsi+0xf1],cl
  41c6ee:	xor    ecx,ecx
  41c6f0:	cmp    ax,0x701
  41c6f4:	ja     0x41c700
  41c6f6:	mov    eax,ecx
  41c6f8:	add    rsp,0x20
  41c6fc:	pop    rbx
  41c6fd:	pop    rsi
  41c6fe:	pop    rdi
  41c6ff:	ret    
  41c700:	mov    rcx,rsi
  41c703:	mov    rdx,rdi
  41c706:	call   0x4176d0
  41c70b:	xor    ecx,ecx
  41c70d:	test   eax,eax
  41c70f:	setne  cl
  41c712:	neg    ecx
  41c714:	mov    eax,ecx
  41c716:	add    rsp,0x20
  41c71a:	pop    rbx
  41c71b:	pop    rsi
  41c71c:	pop    rdi
  41c71d:	ret    
  41c71e:	xchg   ax,ax
  41c720:	xor    ecx,ecx
  41c722:	mov    BYTE PTR [rsi+0xf1],0x1
  41c729:	mov    eax,ecx
  41c72b:	add    rsp,0x20
  41c72f:	pop    rbx
  41c730:	pop    rsi
  41c731:	pop    rdi
  41c732:	ret    
  41c733:	nop    DWORD PTR [rax]
  41c736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c740:	push   rbx
  41c741:	sub    rsp,0x20
  41c745:	test   rcx,rcx
  41c748:	mov    rbx,rcx
  41c74b:	je     0x41c770
  41c74d:	test   rdx,rdx
  41c750:	je     0x41c770
  41c752:	mov    rcx,rbx
  41c755:	mov    edx,0x3
  41c75a:	call   0x40ab40
  41c75f:	mov    rcx,rbx
  41c762:	add    rsp,0x20
  41c766:	pop    rbx
  41c767:	jmp    0x40d5c0
  41c76c:	nop    DWORD PTR [rax+0x0]
  41c770:	lea    rdx,[rip+0x15f49]        # 0x4326c0
  41c777:	lea    rcx,[rip+0x16d79]        # 0x4334f7
  41c77e:	mov    r8d,0xd2a
  41c784:	call   0x4291e0
  41c789:	jmp    0x41c752
  41c78b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c790:	push   rbp
  41c791:	push   rdi
  41c792:	push   rsi
  41c793:	push   rbx
  41c794:	sub    rsp,0x28
  41c798:	mov    eax,DWORD PTR [rdx]
  41c79a:	mov    rsi,rcx
  41c79d:	mov    rbx,rdx
  41c7a0:	mov    rdi,r8
  41c7a3:	mov    rbp,r9
  41c7a6:	test   eax,eax
  41c7a8:	jne    0x41c7e5
  41c7aa:	mov    eax,DWORD PTR [rbx+0x4]
  41c7ad:	test   al,0x1
  41c7af:	je     0x41c7c9
  41c7b1:	lea    rdx,[rip+0x169ce]        # 0x433186
  41c7b8:	mov    r8d,0x1
  41c7be:	mov    rcx,rsi
  41c7c1:	call   0x40d2f0
  41c7c6:	mov    eax,DWORD PTR [rbx+0x4]
  41c7c9:	or     eax,0x1
  41c7cc:	mov    r8,rbp
  41c7cf:	mov    rdx,rdi
  41c7d2:	mov    rcx,rsi
  41c7d5:	mov    DWORD PTR [rbx+0x4],eax
  41c7d8:	add    rsp,0x28
  41c7dc:	pop    rbx
  41c7dd:	pop    rsi
  41c7de:	pop    rdi
  41c7df:	pop    rbp
  41c7e0:	jmp    0x418290
  41c7e5:	lea    rdx,[rip+0x15ed4]        # 0x4326c0
  41c7ec:	lea    rcx,[rip+0x16d15]        # 0x433508
  41c7f3:	mov    r8d,0xd32
  41c7f9:	call   0x4291e0
  41c7fe:	jmp    0x41c7aa
  41c800:	push   rdi
  41c801:	push   rsi
  41c802:	push   rbx
  41c803:	sub    rsp,0x20
  41c807:	cmp    DWORD PTR [rdx],0x1
  41c80a:	mov    rsi,rcx
  41c80d:	mov    rbx,rdx
  41c810:	mov    rdi,r8
  41c813:	je     0x41c82e
  41c815:	lea    rdx,[rip+0x15ea4]        # 0x4326c0
  41c81c:	lea    rcx,[rip+0x16d0d]        # 0x433530
  41c823:	mov    r8d,0xd3e
  41c829:	call   0x4291e0
  41c82e:	movzx  edx,WORD PTR [rsi]
  41c831:	mov    eax,DWORD PTR [rbx+0x4]
  41c834:	cmp    dx,0x6ff
  41c839:	jbe    0x41c880
  41c83b:	test   al,0x1
  41c83d:	je     0x41c85a
  41c83f:	cmp    dx,0x702
  41c844:	mov    rcx,rsi
  41c847:	sbb    edx,edx
  41c849:	and    edx,0xffffff81
  41c84c:	add    edx,0xff
  41c852:	call   0x40d520
  41c857:	mov    eax,DWORD PTR [rbx+0x4]
  41c85a:	or     eax,0x1
  41c85d:	lea    rdx,[rdi+0xc]
  41c861:	lea    r8,[rdi+0x38]
  41c865:	mov    DWORD PTR [rbx+0x4],eax
  41c868:	mov    rcx,rsi
  41c86b:	call   0x417c70
  41c870:	xor    eax,eax
  41c872:	add    rsp,0x20
  41c876:	pop    rbx
  41c877:	pop    rsi
  41c878:	pop    rdi
  41c879:	ret    
  41c87a:	nop    WORD PTR [rax+rax*1+0x0]
  41c880:	test   al,0x1
  41c882:	jne    0x41c8a1
  41c884:	mov    rdx,QWORD PTR [rdi+0x40]
  41c888:	mov    r8,QWORD PTR [rdi+0x38]
  41c88c:	or     eax,0x1
  41c88f:	mov    rcx,rsi
  41c892:	mov    DWORD PTR [rbx+0x4],eax
  41c895:	add    rsp,0x20
  41c899:	pop    rbx
  41c89a:	pop    rsi
  41c89b:	pop    rdi
  41c89c:	jmp    0x418290
  41c8a1:	lea    rdx,[rip+0x168de]        # 0x433186
  41c8a8:	mov    r8d,0x1
  41c8ae:	mov    rcx,rsi
  41c8b1:	call   0x40d2f0
  41c8b6:	mov    eax,DWORD PTR [rbx+0x4]
  41c8b9:	jmp    0x41c884
  41c8bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41c8c0:	push   r13
  41c8c2:	push   r12
  41c8c4:	push   rbp
  41c8c5:	push   rdi
  41c8c6:	push   rsi
  41c8c7:	push   rbx
  41c8c8:	sub    rsp,0x108
  41c8cf:	mov    r12,QWORD PTR [rip+0x1c2da]        # 0x438bb0
  41c8d6:	mov    rbx,rcx
  41c8d9:	mov    esi,edx
  41c8db:	mov    ebp,r8d
  41c8de:	mov    r13d,DWORD PTR [r12]
  41c8e2:	test   r13d,r13d
  41c8e5:	jne    0x41ca20
  41c8eb:	movzx  eax,WORD PTR [rbx]
  41c8ee:	cmp    ax,0x500
  41c8f2:	je     0x41c960
  41c8f4:	cmp    ax,0x6ff
  41c8f8:	jbe    0x41c90c
  41c8fa:	cmp    esi,0x1
  41c8fd:	mov    BYTE PTR [rsp+0x80],0x0
  41c905:	je     0x41c940
  41c907:	cmp    esi,0x3
  41c90a:	je     0x41c920
  41c90c:	xor    eax,eax
  41c90e:	add    rsp,0x108
  41c915:	pop    rbx
  41c916:	pop    rsi
  41c917:	pop    rdi
  41c918:	pop    rbp
  41c919:	pop    r12
  41c91b:	pop    r13
  41c91d:	ret    
  41c91e:	xchg   ax,ax
  41c920:	cmp    ebp,0x26
  41c923:	ja     0x41cc80
  41c929:	lea    rax,[rip+0x16d64]        # 0x433694
  41c930:	mov    edx,ebp
  41c932:	movsxd rdx,DWORD PTR [rax+rdx*4]
  41c936:	add    rax,rdx
  41c939:	jmp    rax
  41c93b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c940:	cmp    ebp,0x26
  41c943:	ja     0x41cf38
  41c949:	lea    rax,[rip+0x16de0]        # 0x433730
  41c950:	movsxd rdx,DWORD PTR [rax+rbp*4]
  41c954:	add    rax,rdx
  41c957:	jmp    rax
  41c959:	nop    DWORD PTR [rax+0x0]
  41c960:	mov    edx,0x1
  41c965:	mov    rcx,rbx
  41c968:	mov    QWORD PTR [rsp+0x38],r9
  41c96d:	call   0x40ab40
  41c972:	mov    edx,eax
  41c974:	mov    eax,0xffffffff
  41c979:	cmp    edx,0x1
  41c97c:	jne    0x41c90e
  41c97e:	mov    dl,0xa6
  41c980:	mov    rcx,rbx
  41c983:	mov    BYTE PTR [rbx+0xf1],0xf
  41c98a:	call   0x40d520
  41c98f:	movzx  eax,WORD PTR [rsp+0x160]
  41c997:	mov    rcx,rbx
  41c99a:	lea    edx,[rax+0x3]
  41c99d:	movsx  edx,dx
  41c9a0:	call   0x40d4d0
  41c9a5:	movzx  edx,sil
  41c9a9:	mov    rcx,rbx
  41c9ac:	call   0x40d520
  41c9b1:	movzx  edx,bpl
  41c9b5:	mov    rcx,rbx
  41c9b8:	call   0x40d520
  41c9bd:	movzx  edx,BYTE PTR [rsp+0x160]
  41c9c5:	mov    rcx,rbx
  41c9c8:	call   0x40d520
  41c9cd:	mov    edi,DWORD PTR [rsp+0x160]
  41c9d4:	mov    r9,QWORD PTR [rsp+0x38]
  41c9d9:	test   edi,edi
  41c9db:	jne    0x41d0e0
  41c9e1:	mov    edx,0x3
  41c9e6:	mov    rcx,rbx
  41c9e9:	call   0x40ab40
  41c9ee:	mov    rcx,rbx
  41c9f1:	call   0x40d5c0
  41c9f6:	mov    rcx,rbx
  41c9f9:	call   0x40a3a0
  41c9fe:	mov    edx,0x0
  41ca03:	test   eax,eax
  41ca05:	cmovg  eax,edx
  41ca08:	add    rsp,0x108
  41ca0f:	pop    rbx
  41ca10:	pop    rsi
  41ca11:	pop    rdi
  41ca12:	pop    rbp
  41ca13:	pop    r12
  41ca15:	pop    r13
  41ca17:	ret    
  41ca18:	nop    DWORD PTR [rax+rax*1+0x0]
  41ca20:	lea    r8,[rip+0x16b37]        # 0x43355e
  41ca27:	lea    rcx,[rip+0x15c92]        # 0x4326c0
  41ca2e:	mov    edx,0xd637
  41ca33:	mov    QWORD PTR [rsp+0x38],r9
  41ca38:	call   0x423fa0
  41ca3d:	mov    r9,QWORD PTR [rsp+0x38]
  41ca42:	jmp    0x41c8eb
  41ca47:	mov    r9d,DWORD PTR [r12]
  41ca4b:	test   r9d,r9d
  41ca4e:	jne    0x41d12c
  41ca54:	movabs rax,0x40205443454c4553
  41ca5e:	mov    BYTE PTR [rsp+0x90],0x0
  41ca66:	mov    QWORD PTR [rsp+0x80],rax
  41ca6e:	movabs rax,0x736e6f6974706f40
  41ca78:	mov    QWORD PTR [rsp+0x88],rax
  41ca80:	lea    rdx,[rsp+0x80]
  41ca88:	xor    r9d,r9d
  41ca8b:	xor    r8d,r8d
  41ca8e:	mov    rcx,rbx
  41ca91:	xor    esi,esi
  41ca93:	lea    rdi,[rsp+0x4c]
  41ca98:	call   0x418ab0
  41ca9d:	lea    r13,[rsp+0x50]
  41caa2:	jmp    0x41caae
  41caa4:	cmp    DWORD PTR [rsp+0x4c],0xfc8
  41caac:	je     0x41caf0
  41caae:	xor    r8d,r8d
  41cab1:	mov    r9d,0x6914
  41cab7:	mov    rdx,rdi
  41caba:	mov    rcx,rbx
  41cabd:	call   0x408b20
  41cac2:	test   eax,eax
  41cac4:	je     0x41caa4
  41cac6:	mov    edx,DWORD PTR [r12]
  41caca:	test   edx,edx
  41cacc:	jne    0x41d0f8
  41cad2:	cmp    ebp,0x26
  41cad5:	ja     0x41c90c
  41cadb:	lea    rax,[rip+0x16cea]        # 0x4337cc
  41cae2:	movsxd rcx,DWORD PTR [rax+rbp*4]
  41cae6:	add    rax,rcx
  41cae9:	jmp    rax
  41caeb:	nop    DWORD PTR [rax+rax*1+0x0]
  41caf0:	xor    r8d,r8d
  41caf3:	mov    r9d,0x508
  41caf9:	mov    rdx,rdi
  41cafc:	mov    rcx,rbx
  41caff:	call   0x408b20
  41cb04:	test   eax,eax
  41cb06:	jne    0x41caae
  41cb08:	cmp    DWORD PTR [rsp+0x4c],0xfc8
  41cb10:	jne    0x41caae
  41cb12:	mov    rax,QWORD PTR [rbx+0x110]
  41cb19:	test   rax,rax
  41cb1c:	je     0x41caf0
  41cb1e:	mov    rax,QWORD PTR [rax]
  41cb21:	mov    rsi,QWORD PTR [rax]
  41cb24:	mov    edx,DWORD PTR [rsi+0x10]
  41cb27:	mov    ecx,DWORD PTR [rsi+0x14]
  41cb2a:	call   0x421820
  41cb2f:	mov    r9d,DWORD PTR [rsi+0x64]
  41cb33:	mov    r8,QWORD PTR [rsi+0x48]
  41cb37:	mov    edx,eax
  41cb39:	mov    rcx,QWORD PTR [rbx+0x28]
  41cb3d:	mov    QWORD PTR [rsp+0x28],r13
  41cb42:	mov    DWORD PTR [rsp+0x20],0x38
  41cb4a:	call   0x40fb10
  41cb4f:	mov    esi,DWORD PTR [rsp+0x50]
  41cb53:	jmp    0x41caf0
  41cb55:	movabs rax,0x44205443454c4553
  41cb5f:	mov    ecx,0x2927
  41cb64:	mov    DWORD PTR [rsp+0x98],0x33302f32
  41cb6f:	mov    QWORD PTR [rsp+0x80],rax
  41cb77:	movabs rax,0x2854524150455441
  41cb81:	mov    WORD PTR [rsp+0x9c],cx
  41cb89:	mov    QWORD PTR [rsp+0x88],rax
  41cb91:	movabs rax,0x302f3130272c7964
  41cb9b:	mov    BYTE PTR [rsp+0x9e],0x0
  41cba3:	mov    QWORD PTR [rsp+0x90],rax
  41cbab:	jmp    0x41ca80
  41cbb0:	movabs rax,0x40205443454c4553
  41cbba:	mov    edx,0x65
  41cbbf:	mov    QWORD PTR [rsp+0x80],rax
  41cbc7:	movabs rax,0x7a69737478657440
  41cbd1:	mov    WORD PTR [rsp+0x90],dx
  41cbd9:	mov    QWORD PTR [rsp+0x88],rax
  41cbe1:	jmp    0x41ca80
  41cbe6:	movabs rax,0x40205443454c4553
  41cbf0:	mov    r8d,0x7473
  41cbf6:	mov    BYTE PTR [rsp+0x92],0x0
  41cbfe:	mov    QWORD PTR [rsp+0x80],rax
  41cc06:	movabs rax,0x7269666574616440
  41cc10:	mov    WORD PTR [rsp+0x90],r8w
  41cc19:	mov    QWORD PTR [rsp+0x88],rax
  41cc21:	jmp    0x41ca80
  41cc26:	mov    edx,DWORD PTR [r12]
  41cc2a:	xor    eax,eax
  41cc2c:	and    esi,0x80
  41cc32:	setne  al
  41cc35:	mov    DWORD PTR [rbx+0x17c],eax
  41cc3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41cc40:	test   edx,edx
  41cc42:	je     0x41c90c
  41cc48:	mov    r9d,DWORD PTR [rbx+0x17c]
  41cc4f:	lea    r8,[rip+0x16a0a]        # 0x433660
  41cc56:	lea    rcx,[rip+0x15a63]        # 0x4326c0
  41cc5d:	mov    edx,0xe6b7
  41cc62:	call   0x423fa0
  41cc67:	jmp    0x41c90c
  41cc6c:	mov    edx,DWORD PTR [r12]
  41cc70:	xor    eax,eax
  41cc72:	and    esi,0x40
  41cc75:	setne  al
  41cc78:	mov    DWORD PTR [rbx+0x17c],eax
  41cc7e:	jmp    0x41cc40
  41cc80:	mov    eax,DWORD PTR [r12]
  41cc84:	test   eax,eax
  41cc86:	je     0x41ca80
  41cc8c:	lea    r8,[rip+0x169b3]        # 0x433646
  41cc93:	lea    rcx,[rip+0x15a26]        # 0x4326c0
  41cc9a:	mov    edx,0xe027
  41cc9f:	call   0x423fa0
  41cca4:	jmp    0x41ca80
  41cca9:	mov    edx,DWORD PTR [r12]
  41ccad:	xor    eax,eax
  41ccaf:	and    esi,0x100
  41ccb5:	setne  al
  41ccb8:	mov    DWORD PTR [rbx+0x17c],eax
  41ccbe:	jmp    0x41cc40
  41ccc0:	mov    edx,DWORD PTR [r12]
  41ccc4:	xor    eax,eax
  41ccc6:	and    esi,0x20
  41ccc9:	setne  al
  41cccc:	mov    DWORD PTR [rbx+0x17c],eax
  41ccd2:	jmp    0x41cc40
  41ccd7:	mov    edx,DWORD PTR [r12]
  41ccdb:	xor    eax,eax
  41ccdd:	and    esi,0x4
  41cce0:	setne  al
  41cce3:	mov    DWORD PTR [rbx+0x17c],eax
  41cce9:	jmp    0x41cc40
  41ccee:	cmp    esi,0x3d
  41ccf1:	ja     0x41d05f
  41ccf7:	lea    rax,[rip+0x16b6a]        # 0x433868
  41ccfe:	movsxd rdx,DWORD PTR [rax+rsi*4]
  41cd02:	add    rax,rdx
  41cd05:	jmp    rax
  41cd07:	mov    edx,DWORD PTR [r12]
  41cd0b:	xor    eax,eax
  41cd0d:	and    esi,0x8
  41cd10:	setne  al
  41cd13:	mov    DWORD PTR [rbx+0x17c],eax
  41cd19:	jmp    0x41cc40
  41cd1e:	mov    edx,DWORD PTR [r12]
  41cd22:	mov    DWORD PTR [rbx+0x17c],esi
  41cd28:	jmp    0x41cc40
  41cd2d:	mov    edx,DWORD PTR [r12]
  41cd31:	xor    eax,eax
  41cd33:	and    esi,0x2
  41cd36:	setne  al
  41cd39:	mov    DWORD PTR [rbx+0x17c],eax
  41cd3f:	jmp    0x41cc40
  41cd44:	mov    edx,DWORD PTR [r12]
  41cd48:	xor    eax,eax
  41cd4a:	and    esi,0x200
  41cd50:	setne  al
  41cd53:	mov    DWORD PTR [rbx+0x17c],eax
  41cd59:	jmp    0x41cc40
  41cd5e:	movabs rax,0x5449524120544553
  41cd68:	mov    r11d,0x4646
  41cd6e:	lea    rsi,[rsp+0x80]
  41cd76:	mov    QWORD PTR [rsp+0x80],rax
  41cd7e:	movabs rax,0x4f2054524f424148
  41cd88:	mov    WORD PTR [rsp+0x90],r11w
  41cd91:	mov    QWORD PTR [rsp+0x88],rax
  41cd99:	mov    BYTE PTR [rsp+0x92],0x0
  41cda1:	xor    r9d,r9d
  41cda4:	xor    r8d,r8d
  41cda7:	mov    rdx,rsi
  41cdaa:	mov    rcx,rbx
  41cdad:	call   0x418ab0
  41cdb2:	mov    rcx,rbx
  41cdb5:	call   0x40a3a0
  41cdba:	mov    edx,0x0
  41cdbf:	test   eax,eax
  41cdc1:	cmovns eax,edx
  41cdc4:	add    rsp,0x108
  41cdcb:	pop    rbx
  41cdcc:	pop    rsi
  41cdcd:	pop    rdi
  41cdce:	pop    rbp
  41cdcf:	pop    r12
  41cdd1:	pop    r13
  41cdd3:	ret    
  41cdd4:	movabs rax,0x5449524120544553
  41cdde:	mov    DWORD PTR [rsp+0x90],0x46464f
  41cde9:	lea    rsi,[rsp+0x80]
  41cdf1:	mov    QWORD PTR [rsp+0x80],rax
  41cdf9:	movabs rax,0x2045524f4e474948
  41ce03:	mov    QWORD PTR [rsp+0x88],rax
  41ce0b:	jmp    0x41cda1
  41ce0d:	cmp    BYTE PTR [r9],0x0
  41ce11:	lea    rsi,[rsp+0x80]
  41ce19:	lea    r8,[rip+0x1673a]        # 0x43355a
  41ce20:	lea    rax,[rip+0x16730]        # 0x433557
  41ce27:	lea    rdx,[rip+0x167a5]        # 0x4335d3
  41ce2e:	mov    rcx,rsi
  41ce31:	cmovne r8,rax
  41ce35:	call   0x4294c8
  41ce3a:	jmp    0x41cda1
  41ce3f:	cmp    BYTE PTR [r9],0x0
  41ce43:	lea    rsi,[rsp+0x80]
  41ce4b:	lea    r8,[rip+0x16708]        # 0x43355a
  41ce52:	lea    rax,[rip+0x166fe]        # 0x433557
  41ce59:	lea    rdx,[rip+0x16717]        # 0x433577
  41ce60:	mov    rcx,rsi
  41ce63:	cmovne r8,rax
  41ce67:	call   0x4294c8
  41ce6c:	jmp    0x41cda1
  41ce71:	cmp    BYTE PTR [r9],0x0
  41ce75:	lea    rsi,[rsp+0x80]
  41ce7d:	lea    r8,[rip+0x166d6]        # 0x43355a
  41ce84:	lea    rax,[rip+0x166cc]        # 0x433557
  41ce8b:	lea    rdx,[rip+0x16714]        # 0x4335a6
  41ce92:	mov    rcx,rsi
  41ce95:	cmovne r8,rax
  41ce99:	call   0x4294c8
  41ce9e:	jmp    0x41cda1
  41cea3:	cmp    BYTE PTR [r9],0x0
  41cea7:	lea    rsi,[rsp+0x80]
  41ceaf:	lea    r8,[rip+0x166a4]        # 0x43355a
  41ceb6:	lea    rax,[rip+0x1669a]        # 0x433557
  41cebd:	lea    rdx,[rip+0x166c5]        # 0x433589
  41cec4:	mov    rcx,rsi
  41cec7:	cmovne r8,rax
  41cecb:	call   0x4294c8
  41ced0:	jmp    0x41cda1
  41ced5:	cmp    BYTE PTR [r9],0x0
  41ced9:	lea    rsi,[rsp+0x80]
  41cee1:	lea    r8,[rip+0x16672]        # 0x43355a
  41cee8:	lea    rax,[rip+0x16668]        # 0x433557
  41ceef:	lea    rdx,[rip+0x166ce]        # 0x4335c4
  41cef6:	mov    rcx,rsi
  41cef9:	cmovne r8,rax
  41cefd:	call   0x4294c8
  41cf02:	jmp    0x41cda1
  41cf07:	movabs rax,0x5449524120544553
  41cf11:	mov    esi,0x4e
  41cf16:	mov    QWORD PTR [rsp+0x80],rax
  41cf1e:	movabs rax,0x4f2054524f424148
  41cf28:	mov    WORD PTR [rsp+0x90],si
  41cf30:	mov    QWORD PTR [rsp+0x88],rax
  41cf38:	lea    rsi,[rsp+0x80]
  41cf40:	jmp    0x41cda1
  41cf45:	movabs rax,0x5449524120544553
  41cf4f:	mov    r10d,0x4e4f
  41cf55:	mov    BYTE PTR [rsp+0x92],0x0
  41cf5d:	mov    QWORD PTR [rsp+0x80],rax
  41cf65:	movabs rax,0x2045524f4e474948
  41cf6f:	mov    WORD PTR [rsp+0x90],r10w
  41cf78:	mov    QWORD PTR [rsp+0x88],rax
  41cf80:	lea    rsi,[rsp+0x80]
  41cf88:	jmp    0x41cda1
  41cf8d:	cmp    BYTE PTR [r9],0x6
  41cf91:	ja     0x41d083
  41cf97:	movzx  edx,BYTE PTR [r9]
  41cf9b:	lea    rax,[rip+0x169be]        # 0x433960
  41cfa2:	movsxd rdx,DWORD PTR [rax+rdx*4]
  41cfa6:	add    rax,rdx
  41cfa9:	jmp    rax
  41cfab:	cmp    BYTE PTR [r9],0x0
  41cfaf:	lea    rsi,[rsp+0x80]
  41cfb7:	lea    r8,[rip+0x16599]        # 0x433557
  41cfbe:	lea    rax,[rip+0x16595]        # 0x43355a
  41cfc5:	lea    rdx,[rip+0x16620]        # 0x4335ec
  41cfcc:	mov    rcx,rsi
  41cfcf:	cmovne r8,rax
  41cfd3:	call   0x4294c8
  41cfd8:	jmp    0x41cda1
  41cfdd:	movzx  r8d,BYTE PTR [r9]
  41cfe1:	lea    rsi,[rsp+0x80]
  41cfe9:	lea    rdx,[rip+0x16611]        # 0x433601
  41cff0:	mov    rcx,rsi
  41cff3:	call   0x4294c8
  41cff8:	jmp    0x41cda1
  41cffd:	lea    rsi,[rsp+0x80]
  41d005:	mov    r8d,DWORD PTR [r9]
  41d008:	lea    rdx,[rip+0x16615]        # 0x433624
  41d00f:	mov    rcx,rsi
  41d012:	call   0x4294c8
  41d017:	jmp    0x41cda1
  41d01c:	mov    DWORD PTR [rbx+0x17c],0x4
  41d026:	mov    edx,DWORD PTR [r12]
  41d02a:	jmp    0x41cc40
  41d02f:	mov    DWORD PTR [rbx+0x17c],0x3
  41d039:	mov    edx,DWORD PTR [r12]
  41d03d:	jmp    0x41cc40
  41d042:	mov    DWORD PTR [rbx+0x17c],0x2
  41d04c:	mov    edx,DWORD PTR [r12]
  41d050:	jmp    0x41cc40
  41d055:	mov    DWORD PTR [rbx+0x17c],0x5
  41d05f:	mov    edx,DWORD PTR [r12]
  41d063:	jmp    0x41cc40
  41d068:	mov    DWORD PTR [rbx+0x17c],0x1
  41d072:	mov    edx,DWORD PTR [r12]
  41d076:	jmp    0x41cc40
  41d07b:	mov    DWORD PTR [rsp+0x50],0x6d7964
  41d083:	lea    rsi,[rsp+0x80]
  41d08b:	lea    r8,[rsp+0x50]
  41d090:	lea    rdx,[rip+0x1657b]        # 0x433612
  41d097:	mov    rcx,rsi
  41d09a:	call   0x4294c8
  41d09f:	jmp    0x41cda1
  41d0a4:	mov    DWORD PTR [rsp+0x50],0x64796d
  41d0ac:	jmp    0x41d083
  41d0ae:	mov    DWORD PTR [rsp+0x50],0x6d6479
  41d0b6:	jmp    0x41d083
  41d0b8:	mov    DWORD PTR [rsp+0x50],0x646d79
  41d0c0:	jmp    0x41d083
  41d0c2:	mov    DWORD PTR [rsp+0x50],0x79646d
  41d0ca:	jmp    0x41d083
  41d0cc:	mov    DWORD PTR [rsp+0x50],0x796d64
  41d0d4:	jmp    0x41d083
  41d0d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d0e0:	movsxd r8,DWORD PTR [rsp+0x160]
  41d0e8:	mov    rdx,r9
  41d0eb:	mov    rcx,rbx
  41d0ee:	call   0x40d260
  41d0f3:	jmp    0x41c9e1
  41d0f8:	lea    r8,[rip+0x1654e]        # 0x43364d
  41d0ff:	lea    rcx,[rip+0x155ba]        # 0x4326c0
  41d106:	mov    r9d,esi
  41d109:	mov    edx,0xe267
  41d10e:	call   0x423fa0
  41d113:	cmp    ebp,0x26
  41d116:	ja     0x41d05f
  41d11c:	lea    rax,[rip+0x16859]        # 0x43397c
  41d123:	movsxd rdx,DWORD PTR [rax+rbp*4]
  41d127:	add    rax,rdx
  41d12a:	jmp    rax
  41d12c:	lea    r8,[rip+0x16501]        # 0x433634
  41d133:	lea    rcx,[rip+0x15586]        # 0x4326c0
  41d13a:	mov    edx,0xde07
  41d13f:	call   0x423fa0
  41d144:	jmp    0x41ca54
  41d149:	nop    DWORD PTR [rax+0x0]
  41d150:	push   rbx
  41d151:	sub    rsp,0x20
  41d155:	cmp    WORD PTR [rcx],0x701
  41d15a:	jbe    0x41d1c0
  41d15c:	mov    edx,0x1
  41d161:	mov    rbx,rcx
  41d164:	call   0x40ab40
  41d169:	cmp    eax,0x1
  41d16c:	jne    0x41d1f0
  41d172:	cmp    WORD PTR [rbx],0x701
  41d177:	mov    BYTE PTR [rbx+0xf1],0xe
  41d17e:	ja     0x41d1e0
  41d180:	mov    rcx,rbx
  41d183:	mov    edx,0x5
  41d188:	call   0x40d4d0
  41d18d:	xor    edx,edx
  41d18f:	mov    rcx,rbx
  41d192:	call   0x40d520
  41d197:	xor    edx,edx
  41d199:	mov    rcx,rbx
  41d19c:	call   0x40d520
  41d1a1:	mov    rcx,rbx
  41d1a4:	mov    edx,0x3
  41d1a9:	call   0x40ab40
  41d1ae:	mov    rcx,rbx
  41d1b1:	add    rsp,0x20
  41d1b5:	pop    rbx
  41d1b6:	jmp    0x40d5c0
  41d1bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d1c0:	lea    rdx,[rip+0x16851]        # 0x433a18
  41d1c7:	xor    r9d,r9d
  41d1ca:	xor    r8d,r8d
  41d1cd:	add    rsp,0x20
  41d1d1:	pop    rbx
  41d1d2:	jmp    0x418ab0
  41d1d7:	nop    WORD PTR [rax+rax*1+0x0]
  41d1e0:	xor    edx,edx
  41d1e2:	mov    rcx,rbx
  41d1e5:	call   0x4176d0
  41d1ea:	jmp    0x41d180
  41d1ec:	nop    DWORD PTR [rax+0x0]
  41d1f0:	mov    eax,0xffffffff
  41d1f5:	add    rsp,0x20
  41d1f9:	pop    rbx
  41d1fa:	ret    
  41d1fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d200:	push   rsi
  41d201:	push   rbx
  41d202:	sub    rsp,0x28
  41d206:	cmp    WORD PTR [rcx],0x701
  41d20b:	ja     0x41d232
  41d20d:	test   edx,edx
  41d20f:	lea    rax,[rip+0x1681a]        # 0x433a30
  41d216:	lea    rdx,[rip+0x16841]        # 0x433a5e
  41d21d:	cmovne rdx,rax
  41d221:	xor    r9d,r9d
  41d224:	xor    r8d,r8d
  41d227:	add    rsp,0x28
  41d22b:	pop    rbx
  41d22c:	pop    rsi
  41d22d:	jmp    0x418ab0
  41d232:	mov    esi,edx
  41d234:	mov    edx,0x1
  41d239:	mov    rbx,rcx
  41d23c:	call   0x40ab40
  41d241:	cmp    eax,0x1
  41d244:	jne    0x41d2d0
  41d24a:	cmp    WORD PTR [rbx],0x701
  41d24f:	mov    BYTE PTR [rbx+0xf1],0xe
  41d256:	ja     0x41d2c3
  41d258:	mov    edx,0x8
  41d25d:	mov    rcx,rbx
  41d260:	call   0x40d4d0
  41d265:	xor    edx,edx
  41d267:	mov    rcx,rbx
  41d26a:	call   0x40d520
  41d26f:	test   esi,esi
  41d271:	jne    0x41d2a0
  41d273:	xor    edx,edx
  41d275:	mov    rcx,rbx
  41d278:	call   0x40d520
  41d27d:	mov    rcx,rbx
  41d280:	mov    edx,0x3
  41d285:	call   0x40ab40
  41d28a:	mov    rcx,rbx
  41d28d:	add    rsp,0x28
  41d291:	pop    rbx
  41d292:	pop    rsi
  41d293:	jmp    0x40d5c0
  41d298:	nop    DWORD PTR [rax+rax*1+0x0]
  41d2a0:	mov    rcx,rbx
  41d2a3:	mov    edx,0x1
  41d2a8:	call   0x40d520
  41d2ad:	xor    edx,edx
  41d2af:	mov    rcx,rbx
  41d2b2:	call   0x40d520
  41d2b7:	xor    edx,edx
  41d2b9:	mov    rcx,rbx
  41d2bc:	call   0x40d520
  41d2c1:	jmp    0x41d27d
  41d2c3:	xor    edx,edx
  41d2c5:	mov    rcx,rbx
  41d2c8:	call   0x4176d0
  41d2cd:	jmp    0x41d258
  41d2cf:	nop
  41d2d0:	mov    eax,0xffffffff
  41d2d5:	add    rsp,0x28
  41d2d9:	pop    rbx
  41d2da:	pop    rsi
  41d2db:	ret    
  41d2dc:	nop    DWORD PTR [rax+0x0]
  41d2e0:	push   rsi
  41d2e1:	push   rbx
  41d2e2:	sub    rsp,0x28
  41d2e6:	cmp    WORD PTR [rcx],0x701
  41d2eb:	ja     0x41d312
  41d2ed:	test   edx,edx
  41d2ef:	lea    rax,[rip+0x1678a]        # 0x433a80
  41d2f6:	lea    rdx,[rip+0x167af]        # 0x433aac
  41d2fd:	cmovne rdx,rax
  41d301:	xor    r9d,r9d
  41d304:	xor    r8d,r8d
  41d307:	add    rsp,0x28
  41d30b:	pop    rbx
  41d30c:	pop    rsi
  41d30d:	jmp    0x418ab0
  41d312:	mov    esi,edx
  41d314:	mov    edx,0x1
  41d319:	mov    rbx,rcx
  41d31c:	call   0x40ab40
  41d321:	cmp    eax,0x1
  41d324:	jne    0x41d3b0
  41d32a:	cmp    WORD PTR [rbx],0x701
  41d32f:	mov    BYTE PTR [rbx+0xf1],0xe
  41d336:	ja     0x41d3a3
  41d338:	mov    edx,0x7
  41d33d:	mov    rcx,rbx
  41d340:	call   0x40d4d0
  41d345:	xor    edx,edx
  41d347:	mov    rcx,rbx
  41d34a:	call   0x40d520
  41d34f:	test   esi,esi
  41d351:	jne    0x41d380
  41d353:	xor    edx,edx
  41d355:	mov    rcx,rbx
  41d358:	call   0x40d520
  41d35d:	mov    rcx,rbx
  41d360:	mov    edx,0x3
  41d365:	call   0x40ab40
  41d36a:	mov    rcx,rbx
  41d36d:	add    rsp,0x28
  41d371:	pop    rbx
  41d372:	pop    rsi
  41d373:	jmp    0x40d5c0
  41d378:	nop    DWORD PTR [rax+rax*1+0x0]
  41d380:	mov    rcx,rbx
  41d383:	mov    edx,0x1
  41d388:	call   0x40d520
  41d38d:	xor    edx,edx
  41d38f:	mov    rcx,rbx
  41d392:	call   0x40d520
  41d397:	xor    edx,edx
  41d399:	mov    rcx,rbx
  41d39c:	call   0x40d520
  41d3a1:	jmp    0x41d35d
  41d3a3:	xor    edx,edx
  41d3a5:	mov    rcx,rbx
  41d3a8:	call   0x4176d0
  41d3ad:	jmp    0x41d338
  41d3af:	nop
  41d3b0:	mov    eax,0xffffffff
  41d3b5:	add    rsp,0x28
  41d3b9:	pop    rbx
  41d3ba:	pop    rsi
  41d3bb:	ret    
  41d3bc:	nop    DWORD PTR [rax+0x0]
  41d3c0:	push   rdi
  41d3c1:	push   rsi
  41d3c2:	push   rbx
  41d3c3:	sub    rsp,0x20
  41d3c7:	mov    rax,QWORD PTR [rip+0x1b7e2]        # 0x438bb0
  41d3ce:	mov    rbx,rcx
  41d3d1:	mov    eax,DWORD PTR [rax]
  41d3d3:	test   eax,eax
  41d3d5:	jne    0x41d463
  41d3db:	xor    eax,eax
  41d3dd:	cmp    WORD PTR [rbx],0x500
  41d3e2:	je     0x41d3f0
  41d3e4:	add    rsp,0x20
  41d3e8:	pop    rbx
  41d3e9:	pop    rsi
  41d3ea:	pop    rdi
  41d3eb:	ret    
  41d3ec:	nop    DWORD PTR [rax+0x0]
  41d3f0:	lea    rax,[rip+0x166e9]        # 0x433ae0
  41d3f7:	mov    edi,DWORD PTR [rbx+0x158]
  41d3fd:	mov    rsi,QWORD PTR [rbx+0x28]
  41d401:	mov    DWORD PTR [rbx+0x158],0x5
  41d40b:	mov    edx,0x1
  41d410:	mov    rcx,rbx
  41d413:	mov    QWORD PTR [rbx+0x28],rax
  41d417:	call   0x40ab40
  41d41c:	cmp    eax,0x1
  41d41f:	jne    0x41d480
  41d421:	mov    rcx,rbx
  41d424:	mov    BYTE PTR [rbx+0xf1],0xf
  41d42b:	mov    edx,0x71
  41d430:	call   0x40d520
  41d435:	xor    edx,edx
  41d437:	mov    rcx,rbx
  41d43a:	call   0x40d520
  41d43f:	mov    edx,0x3
  41d444:	mov    rcx,rbx
  41d447:	call   0x40ab40
  41d44c:	mov    rcx,rbx
  41d44f:	call   0x40d5c0
  41d454:	mov    rcx,rbx
  41d457:	add    rsp,0x20
  41d45b:	pop    rbx
  41d45c:	pop    rsi
  41d45d:	pop    rdi
  41d45e:	jmp    0x40a3a0
  41d463:	lea    r8,[rip+0x1665c]        # 0x433ac6
  41d46a:	lea    rcx,[rip+0x1524f]        # 0x4326c0
  41d471:	mov    edx,0xed47
  41d476:	call   0x423fa0
  41d47b:	jmp    0x41d3db
  41d480:	mov    DWORD PTR [rbx+0x158],edi
  41d486:	mov    QWORD PTR [rbx+0x28],rsi
  41d48a:	mov    eax,0xffffffff
  41d48f:	jmp    0x41d3e4
  41d494:	nop
  41d495:	nop
  41d496:	nop
  41d497:	nop
  41d498:	nop
  41d499:	nop
  41d49a:	nop
  41d49b:	nop
  41d49c:	nop
  41d49d:	nop
  41d49e:	nop
  41d49f:	nop
  41d4a0:	push   rsi
  41d4a1:	push   rbx
  41d4a2:	sub    rsp,0x28
  41d4a6:	mov    eax,0xffffffff
  41d4ab:	mov    rsi,rdx
  41d4ae:	mov    rdx,QWORD PTR [rcx]
  41d4b1:	test   rdx,rdx
  41d4b4:	je     0x41d4db
  41d4b6:	mov    rbx,rcx
  41d4b9:	jmp    0x41d4cc
  41d4bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d4c0:	add    rbx,0x10
  41d4c4:	mov    rdx,QWORD PTR [rbx]
  41d4c7:	test   rdx,rdx
  41d4ca:	je     0x41d4e2
  41d4cc:	mov    rcx,rsi
  41d4cf:	call   0x4294b0
  41d4d4:	test   eax,eax
  41d4d6:	jne    0x41d4c0
  41d4d8:	mov    eax,DWORD PTR [rbx+0x8]
  41d4db:	add    rsp,0x28
  41d4df:	pop    rbx
  41d4e0:	pop    rsi
  41d4e1:	ret    
  41d4e2:	mov    eax,0xffffffff
  41d4e7:	add    rsp,0x28
  41d4eb:	pop    rbx
  41d4ec:	pop    rsi
  41d4ed:	ret    
  41d4ee:	xchg   ax,ax
  41d4f0:	push   rbx
  41d4f1:	sub    rsp,0x20
  41d4f5:	mov    rbx,rcx
  41d4f8:	mov    rcx,QWORD PTR [rcx+0x10]
  41d4fc:	cmp    rcx,0xffffffffffffffff
  41d500:	je     0x41d50f
  41d502:	call   0x426ea8
  41d507:	mov    QWORD PTR [rbx+0x10],0xffffffffffffffff
  41d50f:	mov    rcx,QWORD PTR [rbx+0x28]
  41d513:	cmp    rcx,0xffffffffffffffff
  41d517:	je     0x41d526
  41d519:	call   0x426ea8
  41d51e:	mov    QWORD PTR [rbx+0x28],0xffffffffffffffff
  41d526:	add    rsp,0x20
  41d52a:	pop    rbx
  41d52b:	ret    
  41d52c:	nop    DWORD PTR [rax+0x0]
  41d530:	sub    ecx,0x1e
  41d533:	cmp    ecx,0x7c
  41d536:	ja     0x41d620
  41d53c:	lea    rax,[rip+0x165fd]        # 0x433b40
  41d543:	movsxd rcx,DWORD PTR [rax+rcx*4]
  41d547:	add    rax,rcx
  41d54a:	jmp    rax
  41d54c:	nop    DWORD PTR [rax+0x0]
  41d550:	mov    eax,0x14
  41d555:	ret    
  41d556:	cmp    edx,0x405
  41d55c:	jne    0x41d6a0
  41d562:	mov    eax,0xd
  41d567:	repz ret 
  41d569:	cmp    edx,0x440
  41d56f:	jle    0x41da8a
  41d575:	cmp    edx,0x442
  41d57b:	je     0x41d562
  41d57d:	jl     0x41d6a0
  41d583:	cmp    edx,0x443
  41d589:	je     0x41d831
  41d58f:	cmp    edx,0x444
  41d595:	jne    0x41d6a0
  41d59b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d5a0:	mov    eax,0xe
  41d5a5:	ret    
  41d5a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d5b0:	mov    eax,0x10
  41d5b5:	ret    
  41d5b6:	cmp    edx,0x40c
  41d5bc:	jle    0x41d6a0
  41d5c2:	mov    eax,0x12
  41d5c7:	ret    
  41d5c8:	cmp    edx,0x2809
  41d5ce:	jl     0x41d6a0
  41d5d4:	cmp    edx,0x280a
  41d5da:	jle    0x41d6a0
  41d5e0:	cmp    edx,0x2c01
  41d5e6:	jne    0x41d6a0
  41d5ec:	nop    DWORD PTR [rax+0x0]
  41d5f0:	mov    eax,0x13
  41d5f5:	ret    
  41d5f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d600:	mov    eax,0x17
  41d605:	ret    
  41d606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d610:	mov    eax,0x18
  41d615:	ret    
  41d616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d620:	movzx  edx,dx
  41d623:	cmp    edx,0x80c
  41d629:	je     0x41d6a0
  41d62b:	jg     0x41d6e4
  41d631:	cmp    edx,0x427
  41d637:	jg     0x41d760
  41d63d:	cmp    edx,0x425
  41d643:	jge    0x41d550
  41d649:	cmp    edx,0x414
  41d64f:	jg     0x41d6b0
  41d651:	cmp    edx,0x413
  41d657:	jge    0x41d6a0
  41d659:	cmp    edx,0x408
  41d65f:	je     0x41d5b0
  41d665:	jle    0x41d880
  41d66b:	cmp    edx,0x40e
  41d671:	je     0x41d562
  41d677:	jle    0x41d5b6
  41d67d:	cmp    edx,0x411
  41d683:	mov    eax,0x1c
  41d688:	je     0x41d567
  41d68e:	mov    al,0x1e
  41d690:	jg     0x41d567
  41d696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d6a0:	mov    eax,0xf
  41d6a5:	ret    
  41d6a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d6b0:	cmp    edx,0x41d
  41d6b6:	je     0x41d6a0
  41d6b8:	jle    0x41d961
  41d6be:	cmp    edx,0x421
  41d6c4:	je     0x41d6a0
  41d6c6:	jg     0x41d9e2
  41d6cc:	cmp    edx,0x41f
  41d6d2:	je     0x41d831
  41d6d8:	jg     0x41d5f0
  41d6de:	mov    eax,0x1b
  41d6e3:	ret    
  41d6e4:	cmp    edx,0x180a
  41d6ea:	jg     0x41d7e4
  41d6f0:	cmp    edx,0x1809
  41d6f6:	jge    0x41d6a0
  41d6f8:	cmp    edx,0xc0a
  41d6fe:	jg     0x41d7c0
  41d704:	cmp    edx,0xc09
  41d70a:	jge    0x41d6a0
  41d70c:	cmp    edx,0x82c
  41d712:	je     0x41d5a0
  41d718:	jg     0x41d8f4
  41d71e:	cmp    edx,0x816
  41d724:	je     0x41d6a0
  41d72a:	jle    0x41d6a0
  41d730:	cmp    edx,0x81d
  41d736:	je     0x41d6a0
  41d73c:	cmp    edx,0x827
  41d742:	je     0x41d550
  41d748:	cmp    edx,0x81a
  41d74e:	jne    0x41d6a0
  41d754:	jmp    0x41d5a0
  41d759:	nop    DWORD PTR [rax+0x0]
  41d760:	cmp    edx,0x450
  41d766:	je     0x41d5a0
  41d76c:	jg     0x41d837
  41d772:	cmp    edx,0x438
  41d778:	jg     0x41d569
  41d77e:	cmp    edx,0x436
  41d784:	jge    0x41d6a0
  41d78a:	cmp    edx,0x42c
  41d790:	je     0x41d831
  41d796:	jg     0x41da9b
  41d79c:	cmp    edx,0x429
  41d7a2:	je     0x41d5f0
  41d7a8:	cmp    edx,0x42a
  41d7ae:	mov    eax,0x15
  41d7b3:	jne    0x41d6a0
  41d7b9:	repz ret 
  41d7bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41d7c0:	cmp    edx,0x104e
  41d7c6:	je     0x41d562
  41d7cc:	jg     0x41d8b7
  41d7d2:	cmp    edx,0x1004
  41d7d8:	jne    0x41d984
  41d7de:	mov    eax,0x1d
  41d7e3:	ret    
  41d7e4:	cmp    edx,0x2c0a
  41d7ea:	jg     0x41d930
  41d7f0:	cmp    edx,0x2c09
  41d7f6:	jge    0x41d6a0
  41d7fc:	cmp    edx,0x201a
  41d802:	je     0x41d6a0
  41d808:	jle    0x41da10
  41d80e:	cmp    edx,0x2801
  41d814:	je     0x41d5f0
  41d81a:	jg     0x41d5c8
  41d820:	cmp    edx,0x2401
  41d826:	je     0x41d5f0
  41d82c:	jmp    0x41d6a0
  41d831:	mov    eax,0x11
  41d836:	ret    
  41d837:	cmp    edx,0x480
  41d83d:	je     0x41d5f0
  41d843:	jle    0x41da45
  41d849:	cmp    edx,0x801
  41d84f:	je     0x41d5f0
  41d855:	jle    0x41dab8
  41d85b:	cmp    edx,0x807
  41d861:	je     0x41d6a0
  41d867:	jg     0x41d6a0
  41d86d:	cmp    edx,0x804
  41d873:	je     0x41d7de
  41d879:	jmp    0x41d6a0
  41d87e:	xchg   ax,ax
  41d880:	cmp    edx,0x404
  41d886:	je     0x41d8b1
  41d888:	jg     0x41d556
  41d88e:	cmp    edx,0x402
  41d894:	je     0x41d5a0
  41d89a:	jg     0x41d6a0
  41d8a0:	cmp    edx,0x401
  41d8a6:	je     0x41d5f0
  41d8ac:	jmp    0x41d6a0
  41d8b1:	mov    eax,0x1f
  41d8b6:	ret    
  41d8b7:	cmp    edx,0x140a
  41d8bd:	jg     0x41d9f3
  41d8c3:	cmp    edx,0x1409
  41d8c9:	jge    0x41d6a0
  41d8cf:	cmp    edx,0x1404
  41d8d5:	je     0x41d8b1
  41d8d7:	cmp    edx,0x1407
  41d8dd:	je     0x41d6a0
  41d8e3:	cmp    edx,0x1401
  41d8e9:	je     0x41d5f0
  41d8ef:	jmp    0x41d6a0
  41d8f4:	cmp    edx,0x85f
  41d8fa:	je     0x41d6a0
  41d900:	jle    0x41da5c
  41d906:	cmp    edx,0xc04
  41d90c:	je     0x41d8b1
  41d90e:	cmp    edx,0xc07
  41d914:	je     0x41d6a0
  41d91a:	cmp    edx,0xc01
  41d920:	je     0x41d5f0
  41d926:	jmp    0x41d6a0
  41d92b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d930:	cmp    edx,0x380a
  41d936:	je     0x41d6a0
  41d93c:	jg     0x41d9a7
  41d93e:	cmp    edx,0x3401
  41d944:	je     0x41d5f0
  41d94a:	jg     0x41daeb
  41d950:	cmp    edx,0x3001
  41d956:	je     0x41d5f0
  41d95c:	jmp    0x41d6a0
  41d961:	cmp    edx,0x418
  41d967:	je     0x41d562
  41d96d:	jle    0x41da79
  41d973:	cmp    edx,0x419
  41d979:	jne    0x41d562
  41d97f:	jmp    0x41d5a0
  41d984:	jg     0x41d6a0
  41d98a:	cmp    edx,0xc1a
  41d990:	je     0x41d5a0
  41d996:	cmp    edx,0x1001
  41d99c:	je     0x41d5f0
  41d9a2:	jmp    0x41d6a0
  41d9a7:	cmp    edx,0x400a
  41d9ad:	je     0x41d6a0
  41d9b3:	jg     0x41dad5
  41d9b9:	cmp    edx,0x3c0a
  41d9bf:	je     0x41d6a0
  41d9c5:	cmp    edx,0x4001
  41d9cb:	je     0x41d5f0
  41d9d1:	cmp    edx,0x3c01
  41d9d7:	jne    0x41d6a0
  41d9dd:	jmp    0x41d5f0
  41d9e2:	cmp    edx,0x423
  41d9e8:	jg     0x41d562
  41d9ee:	jmp    0x41d5a0
  41d9f3:	cmp    edx,0x141a
  41d9f9:	je     0x41d562
  41d9ff:	cmp    edx,0x1801
  41da05:	je     0x41d5f0
  41da0b:	jmp    0x41d6a0
  41da10:	cmp    edx,0x1c0a
  41da16:	jg     0x41dada
  41da1c:	cmp    edx,0x1c09
  41da22:	jge    0x41d6a0
  41da28:	cmp    edx,0x180c
  41da2e:	je     0x41d6a0
  41da34:	cmp    edx,0x1c01
  41da3a:	je     0x41d5f0
  41da40:	jmp    0x41d6a0
  41da45:	cmp    edx,0x46d
  41da4b:	je     0x41d6a0
  41da51:	jg     0x41db14
  41da57:	jmp    0x41d6a0
  41da5c:	cmp    edx,0x83e
  41da62:	je     0x41d6a0
  41da68:	cmp    edx,0x843
  41da6e:	je     0x41d5a0
  41da74:	jmp    0x41d6a0
  41da79:	cmp    edx,0x415
  41da7f:	je     0x41d562
  41da85:	jmp    0x41d6a0
  41da8a:	cmp    edx,0x43f
  41da90:	jl     0x41d6a0
  41da96:	jmp    0x41d5a0
  41da9b:	cmp    edx,0x42e
  41daa1:	jle    0x41d6a0
  41daa7:	cmp    edx,0x42f
  41daad:	je     0x41d5a0
  41dab3:	jmp    0x41d6a0
  41dab8:	cmp    edx,0x485
  41dabe:	je     0x41d6a0
  41dac4:	cmp    edx,0x48c
  41daca:	je     0x41d5f0
  41dad0:	jmp    0x41d6a0
  41dad5:	jmp    0x41d6a0
  41dada:	cmp    edx,0x2001
  41dae0:	je     0x41d5f0
  41dae6:	jmp    0x41d6a0
  41daeb:	cmp    edx,0x3409
  41daf1:	jl     0x41d6a0
  41daf7:	cmp    edx,0x340a
  41dafd:	jle    0x41d6a0
  41db03:	cmp    edx,0x3801
  41db09:	je     0x41d5f0
  41db0f:	jmp    0x41d6a0
  41db14:	jmp    0x41d6a0
  41db19:	nop    DWORD PTR [rax+0x0]
  41db20:	push   rbx
  41db21:	sub    rsp,0x20
  41db25:	mov    rdx,rcx
  41db28:	mov    rbx,rcx
  41db2b:	lea    rcx,[rip+0x1778e]        # 0x4352c0
  41db32:	call   0x41d4a0
  41db37:	test   eax,eax
  41db39:	js     0x41db41
  41db3b:	add    rsp,0x20
  41db3f:	pop    rbx
  41db40:	ret    
  41db41:	lea    rcx,[rip+0x16738]        # 0x434280
  41db48:	mov    rdx,rbx
  41db4b:	add    rsp,0x20
  41db4f:	pop    rbx
  41db50:	jmp    0x41d4a0
  41db55:	nop
  41db56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41db60:	push   r13
  41db62:	push   r12
  41db64:	push   rbp
  41db65:	push   rdi
  41db66:	push   rsi
  41db67:	push   rbx
  41db68:	sub    rsp,0x28
  41db6c:	mov    eax,DWORD PTR [rip+0x20556]        # 0x43e0c8
  41db72:	mov    edi,ecx
  41db74:	test   eax,eax
  41db76:	je     0x41dbd0
  41db78:	movsxd rbp,edi
  41db7b:	lea    rdx,[rip+0x18ebe]        # 0x436a40
  41db82:	mov    rcx,QWORD PTR [rip+0x2057f]        # 0x43e108
  41db89:	mov    rax,rbp
  41db8c:	lea    r12,[rip+0x2056d]        # 0x43e100
  41db93:	shl    rax,0x4
  41db97:	mov    rbx,QWORD PTR [rdx+rax*1]
  41db9b:	mov    rdx,rbx
  41db9e:	call   0x426ea0
  41dba3:	cmp    rax,0xffffffffffffffff
  41dba7:	je     0x41dbf0
  41dba9:	mov    rcx,rax
  41dbac:	mov    QWORD PTR [r12+rbp*8],rbx
  41dbb0:	call   0x426ea8
  41dbb5:	mov    rsi,QWORD PTR [r12+rbp*8]
  41dbb9:	mov    rax,rsi
  41dbbc:	add    rsp,0x28
  41dbc0:	pop    rbx
  41dbc1:	pop    rsi
  41dbc2:	pop    rdi
  41dbc3:	pop    rbp
  41dbc4:	pop    r12
  41dbc6:	pop    r13
  41dbc8:	ret    
  41dbc9:	nop    DWORD PTR [rax+0x0]
  41dbd0:	lea    rdx,[rip+0x16161]        # 0x433d38
  41dbd7:	lea    rcx,[rip+0x16162]        # 0x433d40
  41dbde:	mov    r8d,0xc9
  41dbe4:	call   0x4291e0
  41dbe9:	jmp    0x41db78
  41dbeb:	nop    DWORD PTR [rax+rax*1+0x0]
  41dbf0:	mov    rcx,QWORD PTR [rip+0x204c9]        # 0x43e0c0
  41dbf7:	mov    rdx,rbx
  41dbfa:	call   0x426ea0
  41dbff:	cmp    rax,0xffffffffffffffff
  41dc03:	jne    0x41dba9
  41dc05:	lea    rbx,[rip+0x176bc]        # 0x4352c8
  41dc0c:	lea    rsi,[rip+0x16121]        # 0x433d34
  41dc13:	jmp    0x41dc22
  41dc15:	add    rbx,0x10
  41dc19:	mov    rsi,QWORD PTR [rbx-0x8]
  41dc1d:	test   rsi,rsi
  41dc20:	je     0x41dc70
  41dc22:	cmp    edi,DWORD PTR [rbx]
  41dc24:	jne    0x41dc15
  41dc26:	mov    rcx,QWORD PTR [rip+0x204db]        # 0x43e108
  41dc2d:	mov    rdx,rsi
  41dc30:	lea    r13,[rip+0x204c9]        # 0x43e100
  41dc37:	call   0x426ea0
  41dc3c:	cmp    rax,0xffffffffffffffff
  41dc40:	jne    0x41dc57
  41dc42:	mov    rcx,QWORD PTR [rip+0x20477]        # 0x43e0c0
  41dc49:	mov    rdx,rsi
  41dc4c:	call   0x426ea0
  41dc51:	cmp    rax,0xffffffffffffffff
  41dc55:	je     0x41dc15
  41dc57:	mov    rcx,rax
  41dc5a:	mov    QWORD PTR [r13+rbp*8+0x0],rsi
  41dc5f:	call   0x426ea8
  41dc64:	mov    rsi,QWORD PTR [r13+rbp*8+0x0]
  41dc69:	jmp    0x41dbb9
  41dc6e:	xchg   ax,ax
  41dc70:	lea    rax,[rip+0x160db]        # 0x433d52
  41dc77:	mov    QWORD PTR [r12+rbp*8],rax
  41dc7b:	jmp    0x41dbb9
  41dc80:	push   r13
  41dc82:	push   r12
  41dc84:	push   rbp
  41dc85:	push   rdi
  41dc86:	push   rsi
  41dc87:	push   rbx
  41dc88:	sub    rsp,0x48
  41dc8c:	cmp    QWORD PTR [rcx+0x10],0xffffffffffffffff
  41dc91:	mov    rbx,rcx
  41dc94:	mov    esi,edx
  41dc96:	mov    edi,r8d
  41dc99:	je     0x41dcb4
  41dc9b:	lea    rdx,[rip+0x16096]        # 0x433d38
  41dca2:	lea    rcx,[rip+0x160b7]        # 0x433d60
  41dca9:	mov    r8d,0x193
  41dcaf:	call   0x4291e0
  41dcb4:	cmp    QWORD PTR [rbx+0x28],0xffffffffffffffff
  41dcb9:	je     0x41dcd4
  41dcbb:	lea    rdx,[rip+0x16076]        # 0x433d38
  41dcc2:	lea    rcx,[rip+0x160bf]        # 0x433d88
  41dcc9:	mov    r8d,0x194
  41dccf:	call   0x4291e0
  41dcd4:	test   esi,esi
  41dcd6:	js     0x41dda2
  41dcdc:	test   edi,edi
  41dcde:	js     0x41de00
  41dce4:	movsxd r12,esi
  41dce7:	lea    rax,[rip+0x18d52]        # 0x436a40
  41dcee:	movsxd r13,edi
  41dcf1:	mov    rdx,r12
  41dcf4:	shl    rdx,0x4
  41dcf8:	mov    r9,QWORD PTR [rax+rdx*1]
  41dcfc:	mov    r10,QWORD PTR [rax+rdx*1+0x8]
  41dd01:	mov    rdx,r13
  41dd04:	shl    rdx,0x4
  41dd08:	add    rdx,rax
  41dd0b:	cmp    esi,edi
  41dd0d:	mov    rax,QWORD PTR [rdx]
  41dd10:	mov    rdx,QWORD PTR [rdx+0x8]
  41dd14:	mov    QWORD PTR [rbx+0x18],r9
  41dd18:	mov    QWORD PTR [rbx+0x20],r10
  41dd1c:	mov    QWORD PTR [rbx],rax
  41dd1f:	mov    QWORD PTR [rbx+0x8],rdx
  41dd23:	je     0x41ddd0
  41dd29:	lea    rbp,[rip+0x203d0]        # 0x43e100
  41dd30:	mov    DWORD PTR [rbx+0x30],0x0
  41dd37:	cmp    QWORD PTR [rbp+r12*8+0x0],0x0
  41dd3d:	je     0x41deb0
  41dd43:	mov    rcx,QWORD PTR [rbp+r13*8+0x0]
  41dd48:	lea    rsi,[rip+0x203b1]        # 0x43e100
  41dd4f:	test   rcx,rcx
  41dd52:	je     0x41df00
  41dd58:	mov    rdx,QWORD PTR [rbp+r12*8+0x0]
  41dd5d:	call   0x426ea0
  41dd62:	cmp    rax,0xffffffffffffffff
  41dd66:	mov    QWORD PTR [rbx+0x10],rax
  41dd6a:	je     0x41de75
  41dd70:	mov    rdx,QWORD PTR [rbp+r13*8+0x0]
  41dd75:	mov    rcx,QWORD PTR [rbp+r12*8+0x0]
  41dd7a:	call   0x426ea0
  41dd7f:	mov    rdx,rax
  41dd82:	mov    QWORD PTR [rbx+0x28],rax
  41dd86:	mov    eax,0x1
  41dd8b:	cmp    rdx,0xffffffffffffffff
  41dd8f:	je     0x41de33
  41dd95:	add    rsp,0x48
  41dd99:	pop    rbx
  41dd9a:	pop    rsi
  41dd9b:	pop    rdi
  41dd9c:	pop    rbp
  41dd9d:	pop    r12
  41dd9f:	pop    r13
  41dda1:	ret    
  41dda2:	mov    rax,QWORD PTR [rip+0x1ae07]        # 0x438bb0
  41dda9:	mov    eax,DWORD PTR [rax]
  41ddab:	test   eax,eax
  41ddad:	je     0x41dd95
  41ddaf:	lea    r8,[rip+0x15ffa]        # 0x433db0
  41ddb6:	lea    rcx,[rip+0x15f7b]        # 0x433d38
  41ddbd:	mov    r9d,esi
  41ddc0:	mov    edx,0x1977
  41ddc5:	call   0x423fa0
  41ddca:	xor    eax,eax
  41ddcc:	jmp    0x41dd95
  41ddce:	xchg   ax,ax
  41ddd0:	mov    eax,0x1
  41ddd5:	mov    QWORD PTR [rbx+0x10],0xffffffffffffffff
  41dddd:	mov    QWORD PTR [rbx+0x28],0xffffffffffffffff
  41dde5:	mov    DWORD PTR [rbx+0x30],0x1
  41ddec:	add    rsp,0x48
  41ddf0:	pop    rbx
  41ddf1:	pop    rsi
  41ddf2:	pop    rdi
  41ddf3:	pop    rbp
  41ddf4:	pop    r12
  41ddf6:	pop    r13
  41ddf8:	ret    
  41ddf9:	nop    DWORD PTR [rax+0x0]
  41de00:	mov    rax,QWORD PTR [rip+0x1ada9]        # 0x438bb0
  41de07:	mov    eax,DWORD PTR [rax]
  41de09:	test   eax,eax
  41de0b:	je     0x41dd95
  41de11:	lea    r8,[rip+0x15fd0]        # 0x433de8
  41de18:	lea    rcx,[rip+0x15f19]        # 0x433d38
  41de1f:	mov    r9d,edi
  41de22:	mov    edx,0x19c7
  41de27:	call   0x423fa0
  41de2c:	xor    eax,eax
  41de2e:	jmp    0x41dd95
  41de33:	mov    rdx,QWORD PTR [rip+0x1ad76]        # 0x438bb0
  41de3a:	mov    edx,DWORD PTR [rdx]
  41de3c:	test   edx,edx
  41de3e:	je     0x41dd95
  41de44:	mov    rdx,QWORD PTR [rbx+0x18]
  41de48:	mov    r9,QWORD PTR [rbx]
  41de4b:	lea    r8,[rip+0x16006]        # 0x433e58
  41de52:	lea    rcx,[rip+0x15edf]        # 0x433d38
  41de59:	mov    DWORD PTR [rsp+0x3c],eax
  41de5d:	mov    QWORD PTR [rsp+0x20],rdx
  41de62:	mov    edx,0x1c37
  41de67:	call   0x423fa0
  41de6c:	mov    eax,DWORD PTR [rsp+0x3c]
  41de70:	jmp    0x41dd95
  41de75:	mov    rax,QWORD PTR [rip+0x1ad34]        # 0x438bb0
  41de7c:	mov    ecx,DWORD PTR [rax]
  41de7e:	test   ecx,ecx
  41de80:	je     0x41dd70
  41de86:	mov    rax,QWORD PTR [rbx]
  41de89:	mov    r9,QWORD PTR [rbx+0x18]
  41de8d:	lea    r8,[rip+0x15fc4]        # 0x433e58
  41de94:	lea    rcx,[rip+0x15e9d]        # 0x433d38
  41de9b:	mov    edx,0x1be7
  41dea0:	mov    QWORD PTR [rsp+0x20],rax
  41dea5:	call   0x423fa0
  41deaa:	jmp    0x41dd70
  41deaf:	nop
  41deb0:	mov    ecx,esi
  41deb2:	call   0x41db60
  41deb7:	test   rax,rax
  41deba:	jne    0x41dd43
  41dec0:	mov    rax,QWORD PTR [rip+0x1ace9]        # 0x438bb0
  41dec7:	mov    r9d,DWORD PTR [rax]
  41deca:	test   r9d,r9d
  41decd:	je     0x41dd43
  41ded3:	mov    rax,QWORD PTR [rbp+r12*8+0x0]
  41ded8:	lea    r8,[rip+0x15f41]        # 0x433e20
  41dedf:	lea    rcx,[rip+0x15e52]        # 0x433d38
  41dee6:	mov    r9d,esi
  41dee9:	mov    edx,0x1b07
  41deee:	mov    QWORD PTR [rsp+0x20],rax
  41def3:	call   0x423fa0
  41def8:	jmp    0x41dd43
  41defd:	nop    DWORD PTR [rax]
  41df00:	mov    ecx,edi
  41df02:	call   0x41db60
  41df07:	test   rax,rax
  41df0a:	je     0x41df16
  41df0c:	mov    rcx,QWORD PTR [rbp+r13*8+0x0]
  41df11:	jmp    0x41dd58
  41df16:	mov    rax,QWORD PTR [rip+0x1ac93]        # 0x438bb0
  41df1d:	mov    r8d,DWORD PTR [rax]
  41df20:	test   r8d,r8d
  41df23:	je     0x41df0c
  41df25:	mov    rax,QWORD PTR [rsi+r13*8]
  41df29:	lea    rcx,[rip+0x15e08]        # 0x433d38
  41df30:	lea    r8,[rip+0x15ee9]        # 0x433e20
  41df37:	mov    r9d,edi
  41df3a:	mov    edx,0x1b77
  41df3f:	mov    QWORD PTR [rsp+0x20],rax
  41df44:	call   0x423fa0
  41df49:	mov    rcx,QWORD PTR [rsi+r13*8]
  41df4d:	jmp    0x41dd58
  41df52:	nop    DWORD PTR [rax+0x0]
  41df56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41df60:	push   r13
  41df62:	push   r12
  41df64:	push   rbp
  41df65:	push   rdi
  41df66:	push   rsi
  41df67:	push   rbx
  41df68:	sub    rsp,0x28
  41df6c:	movsxd rax,DWORD PTR [rcx]
  41df6f:	mov    rsi,rdx
  41df72:	mov    rdi,rax
  41df75:	lea    r11,[rax*8-0x8]
  41df7d:	mov    r10d,eax
  41df80:	jmp    0x41df86
  41df82:	sub    r11,0x8
  41df86:	sub    r10d,0x1
  41df8a:	cmp    r10d,0x1
  41df8e:	jle    0x41dfc0
  41df90:	mov    rax,QWORD PTR [rsi]
  41df93:	mov    rbx,QWORD PTR [rax+r11*1]
  41df97:	movzx  eax,BYTE PTR [rbx+0x22]
  41df9b:	cmp    eax,r8d
  41df9e:	jne    0x41df82
  41dfa0:	movzx  eax,BYTE PTR [rbx+0xa]
  41dfa4:	cmp    eax,r9d
  41dfa7:	jne    0x41df82
  41dfa9:	mov    rax,rbx
  41dfac:	add    rsp,0x28
  41dfb0:	pop    rbx
  41dfb1:	pop    rsi
  41dfb2:	pop    rdi
  41dfb3:	pop    rbp
  41dfb4:	pop    r12
  41dfb6:	pop    r13
  41dfb8:	ret    
  41dfb9:	nop    DWORD PTR [rax+0x0]
  41dfc0:	mov    edx,edi
  41dfc2:	mov    r13d,r9d
  41dfc5:	mov    r12,rcx
  41dfc8:	sar    edx,0x1f
  41dfcb:	mov    ebp,r8d
  41dfce:	mov    ecx,edi
  41dfd0:	shr    edx,0x1e
  41dfd3:	movsxd r9,edi
  41dfd6:	lea    eax,[rdi+rdx*1]
  41dfd9:	and    eax,0x3
  41dfdc:	sub    eax,edx
  41dfde:	cmp    eax,0x3
  41dfe1:	je     0x41e013
  41dfe3:	mov    rax,QWORD PTR [rsi]
  41dfe6:	add    ecx,0x1
  41dfe9:	mov    r8d,r13d
  41dfec:	mov    DWORD PTR [r12],ecx
  41dff0:	mov    edx,ebp
  41dff2:	mov    rbx,QWORD PTR [rax+r9*8]
  41dff6:	mov    rcx,rbx
  41dff9:	call   0x41dc80
  41dffe:	test   eax,eax
  41e000:	jne    0x41dfa9
  41e002:	mov    rcx,rbx
  41e005:	xor    ebx,ebx
  41e007:	call   0x41d4f0
  41e00c:	sub    DWORD PTR [r12],0x1
  41e011:	jmp    0x41dfa9
  41e013:	mov    ecx,0xe0
  41e018:	call   0x429538
  41e01d:	test   rax,rax
  41e020:	mov    rbx,rax
  41e023:	je     0x41e0c4
  41e029:	lea    edx,[rdi+0x4]
  41e02c:	mov    rcx,QWORD PTR [rsi]
  41e02f:	movsxd rdx,edx
  41e032:	shl    rdx,0x3
  41e036:	call   0x4294e8
  41e03b:	test   rax,rax
  41e03e:	mov    r8,rax
  41e041:	je     0x41e0cb
  41e047:	movsxd r9,DWORD PTR [r12]
  41e04b:	mov    QWORD PTR [rsi],rax
  41e04e:	mov    ecx,0x1c
  41e053:	xor    eax,eax
  41e055:	mov    rdi,rbx
  41e058:	mov    rdx,rbx
  41e05b:	rep stos QWORD PTR es:[rdi],rax
  41e05e:	mov    rax,r8
  41e061:	xor    r8d,r8d
  41e064:	lea    r10,[r9*8+0x0]
  41e06c:	mov    rcx,r9
  41e06f:	add    rax,r8
  41e072:	add    r8,0x8
  41e076:	mov    QWORD PTR [rax+r10*1],rdx
  41e07a:	lea    rax,[rip+0x15e07]        # 0x433e88
  41e081:	mov    BYTE PTR [rdx+0x8],0x1
  41e085:	mov    BYTE PTR [rdx+0x9],0x1
  41e089:	mov    BYTE PTR [rdx+0x20],0x1
  41e08d:	add    rdx,0x38
  41e091:	mov    BYTE PTR [rdx-0x17],0x1
  41e095:	mov    QWORD PTR [rdx-0x20],rax
  41e099:	mov    QWORD PTR [rdx-0x38],rax
  41e09d:	mov    BYTE PTR [rdx-0x16],0x0
  41e0a1:	mov    BYTE PTR [rdx-0x2e],0x0
  41e0a5:	mov    QWORD PTR [rdx-0x28],0xffffffffffffffff
  41e0ad:	mov    QWORD PTR [rdx-0x10],0xffffffffffffffff
  41e0b5:	cmp    r8,0x20
  41e0b9:	je     0x41dfe3
  41e0bf:	mov    rax,QWORD PTR [rsi]
  41e0c2:	jmp    0x41e06f
  41e0c4:	xor    ebx,ebx
  41e0c6:	jmp    0x41dfa9
  41e0cb:	mov    rcx,rbx
  41e0ce:	xor    ebx,ebx
  41e0d0:	call   0x429580
  41e0d5:	jmp    0x41dfa9
  41e0da:	nop    WORD PTR [rax+rax*1+0x0]
  41e0e0:	push   rdi
  41e0e1:	push   rsi
  41e0e2:	push   rbx
  41e0e3:	sub    rsp,0x20
  41e0e7:	mov    rax,QWORD PTR [rcx+0x68]
  41e0eb:	test   edx,edx
  41e0ed:	mov    rsi,rcx
  41e0f0:	mov    ebx,edx
  41e0f2:	mov    rdi,QWORD PTR [rax+0x8]
  41e0f6:	jne    0x41e105
  41e0f8:	cmp    WORD PTR [rcx],0x6ff
  41e0fd:	mov    eax,0xf
  41e102:	cmova  ebx,eax
  41e105:	mov    rax,QWORD PTR [rip+0x1aaa4]        # 0x438bb0
  41e10c:	mov    eax,DWORD PTR [rax]
  41e10e:	test   eax,eax
  41e110:	jne    0x41e150
  41e112:	movzx  eax,BYTE PTR [rdi+0xa]
  41e116:	cmp    eax,ebx
  41e118:	je     0x41e143
  41e11a:	mov    rax,QWORD PTR [rsi+0x68]
  41e11e:	lea    rdx,[rsi+0x68]
  41e122:	lea    rcx,[rsi+0x60]
  41e126:	mov    r9d,ebx
  41e129:	mov    rax,QWORD PTR [rax]
  41e12c:	movzx  r8d,BYTE PTR [rax+0x22]
  41e131:	call   0x41df60
  41e136:	test   rax,rax
  41e139:	je     0x41e143
  41e13b:	mov    rdx,QWORD PTR [rsi+0x68]
  41e13f:	mov    QWORD PTR [rdx+0x8],rax
  41e143:	add    rsp,0x20
  41e147:	pop    rbx
  41e148:	pop    rsi
  41e149:	pop    rdi
  41e14a:	ret    
  41e14b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e150:	movsxd rax,ebx
  41e153:	lea    rdx,[rip+0x188e6]        # 0x436a40
  41e15a:	lea    r8,[rip+0x15d2f]        # 0x433e90
  41e161:	shl    rax,0x4
  41e165:	lea    rcx,[rip+0x15bcc]        # 0x433d38
  41e16c:	mov    r9,QWORD PTR [rdx+rax*1]
  41e170:	mov    edx,0x30c7
  41e175:	call   0x423fa0
  41e17a:	jmp    0x41e112
  41e17c:	nop    DWORD PTR [rax+0x0]
  41e180:	push   rdi
  41e181:	push   rsi
  41e182:	push   rbx
  41e183:	sub    rsp,0x20
  41e187:	cmp    QWORD PTR [rcx+0x68],0x0
  41e18c:	mov    rbx,rcx
  41e18f:	je     0x41e1aa
  41e191:	lea    rdx,[rip+0x15ba0]        # 0x433d38
  41e198:	lea    rcx,[rip+0x15d1d]        # 0x433ebc
  41e19f:	mov    r8d,0x10e
  41e1a5:	call   0x4291e0
  41e1aa:	mov    ecx,0x18
  41e1af:	mov    edi,0x1
  41e1b4:	call   0x429538
  41e1b9:	test   rax,rax
  41e1bc:	mov    rsi,rax
  41e1bf:	mov    QWORD PTR [rbx+0x68],rax
  41e1c3:	je     0x41e26b
  41e1c9:	mov    edx,0x38
  41e1ce:	mov    ecx,0x2
  41e1d3:	call   0x4295c8
  41e1d8:	test   rax,rax
  41e1db:	je     0x41e275
  41e1e1:	mov    rdx,QWORD PTR [rbx+0x68]
  41e1e5:	lea    rdi,[rip+0x15c9c]        # 0x433e88
  41e1ec:	lea    rcx,[rax+0x38]
  41e1f0:	mov    QWORD PTR [rsi],rax
  41e1f3:	mov    BYTE PTR [rax+0x8],0x1
  41e1f7:	mov    BYTE PTR [rax+0x9],0x1
  41e1fb:	mov    QWORD PTR [rax+0x18],rdi
  41e1ff:	mov    QWORD PTR [rax],rdi
  41e202:	mov    BYTE PTR [rax+0xa],0x0
  41e206:	mov    QWORD PTR [rax+0x10],0xffffffffffffffff
  41e20e:	mov    DWORD PTR [rbx+0x60],0x3
  41e215:	mov    BYTE PTR [rax+0x20],0x1
  41e219:	mov    BYTE PTR [rax+0x21],0x1
  41e21d:	mov    BYTE PTR [rax+0x22],0x0
  41e221:	mov    QWORD PTR [rax+0x28],0xffffffffffffffff
  41e229:	mov    QWORD PTR [rdx+0x8],rcx
  41e22d:	mov    QWORD PTR [rax+0x50],rdi
  41e231:	mov    QWORD PTR [rax+0x38],rdi
  41e235:	mov    BYTE PTR [rax+0x40],0x1
  41e239:	xor    edi,edi
  41e23b:	mov    BYTE PTR [rax+0x41],0x1
  41e23f:	mov    BYTE PTR [rax+0x58],0x1
  41e243:	mov    BYTE PTR [rax+0x59],0x1
  41e247:	mov    BYTE PTR [rax+0x5a],0x0
  41e24b:	mov    BYTE PTR [rax+0x42],0x0
  41e24f:	mov    QWORD PTR [rax+0x48],0xffffffffffffffff
  41e257:	mov    QWORD PTR [rax+0x60],0xffffffffffffffff
  41e25f:	mov    rax,QWORD PTR [rbx+0x68]
  41e263:	mov    rdx,QWORD PTR [rax+0x8]
  41e267:	mov    QWORD PTR [rax+0x10],rdx
  41e26b:	mov    eax,edi
  41e26d:	add    rsp,0x20
  41e271:	pop    rbx
  41e272:	pop    rsi
  41e273:	pop    rdi
  41e274:	ret    
  41e275:	mov    rcx,rsi
  41e278:	call   0x429580
  41e27d:	mov    QWORD PTR [rbx+0x68],0x0
  41e285:	jmp    0x41e26b
  41e287:	nop    WORD PTR [rax+rax*1+0x0]
  41e290:	push   r15
  41e292:	push   r14
  41e294:	push   r13
  41e296:	push   r12
  41e298:	push   rbp
  41e299:	push   rdi
  41e29a:	push   rsi
  41e29b:	push   rbx
  41e29c:	sub    rsp,0xb8
  41e2a3:	mov    r13,rcx
  41e2a6:	mov    rcx,rdx
  41e2a9:	mov    QWORD PTR [rsp+0x108],rdx
  41e2b1:	mov    DWORD PTR [rsp+0x110],r8d
  41e2b9:	call   0x41db20
  41e2be:	mov    rcx,QWORD PTR [r13+0x40]
  41e2c2:	mov    DWORD PTR [rsp+0x3c],eax
  41e2c6:	mov    DWORD PTR [rsp+0x38],0xffffffff
  41e2ce:	test   rcx,rcx
  41e2d1:	je     0x41e2dc
  41e2d3:	call   0x41db20
  41e2d8:	mov    DWORD PTR [rsp+0x38],eax
  41e2dc:	mov    r12,QWORD PTR [rip+0x1a8cd]        # 0x438bb0
  41e2e3:	mov    rax,QWORD PTR [r13+0x68]
  41e2e7:	mov    r15d,DWORD PTR [r12]
  41e2eb:	mov    rdi,QWORD PTR [rax]
  41e2ee:	test   r15d,r15d
  41e2f1:	mov    QWORD PTR [rsp+0x40],rdi
  41e2f6:	jne    0x41e3ab
  41e2fc:	mov    edx,DWORD PTR [rip+0x1fdc6]        # 0x43e0c8
  41e302:	test   edx,edx
  41e304:	je     0x41e3e3
  41e30a:	mov    r10d,DWORD PTR [rsp+0x110]
  41e312:	test   r10d,r10d
  41e315:	jne    0x41e4f1
  41e31b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e320:	mov    edx,DWORD PTR [rsp+0x3c]
  41e324:	mov    rcx,QWORD PTR [rax]
  41e327:	mov    r8d,0x2
  41e32d:	call   0x41dc80
  41e332:	test   eax,eax
  41e334:	je     0x41e566
  41e33a:	mov    rax,QWORD PTR [rsp+0x40]
  41e33f:	cmp    WORD PTR [rax+0x20],0x401
  41e345:	je     0x41e514
  41e34b:	mov    rax,QWORD PTR [r13+0x68]
  41e34f:	mov    r9d,DWORD PTR [rsp+0x38]
  41e354:	mov    rcx,QWORD PTR [rax+0x8]
  41e358:	test   r9d,r9d
  41e35b:	mov    DWORD PTR [rcx+0x30],0x1
  41e362:	js     0x41e530
  41e368:	mov    r8d,DWORD PTR [r12]
  41e36c:	test   r8d,r8d
  41e36f:	jne    0x41e8fb
  41e375:	mov    r8d,DWORD PTR [rsp+0x38]
  41e37a:	mov    edx,DWORD PTR [rsp+0x3c]
  41e37e:	call   0x41dc80
  41e383:	test   eax,eax
  41e385:	je     0x41e566
  41e38b:	mov    eax,DWORD PTR [r12]
  41e38f:	test   eax,eax
  41e391:	jne    0x41e8dc
  41e397:	add    rsp,0xb8
  41e39e:	pop    rbx
  41e39f:	pop    rsi
  41e3a0:	pop    rdi
  41e3a1:	pop    rbp
  41e3a2:	pop    r12
  41e3a4:	pop    r13
  41e3a6:	pop    r14
  41e3a8:	pop    r15
  41e3aa:	ret    
  41e3ab:	mov    rax,QWORD PTR [rsp+0x108]
  41e3b3:	lea    r8,[rip+0x15b1b]        # 0x433ed5
  41e3ba:	lea    rcx,[rip+0x15977]        # 0x433d38
  41e3c1:	mov    r9,r13
  41e3c4:	mov    edx,0x1457
  41e3c9:	mov    QWORD PTR [rsp+0x20],rax
  41e3ce:	call   0x423fa0
  41e3d3:	mov    r14d,DWORD PTR [rip+0x1fcee]        # 0x43e0c8
  41e3da:	test   r14d,r14d
  41e3dd:	jne    0x41e4d0
  41e3e3:	lea    rdx,[rip+0x15b03]        # 0x433eed
  41e3ea:	lea    rcx,[rip+0x15961]        # 0x433d52
  41e3f1:	call   0x426ea0
  41e3f6:	cmp    rax,0xffffffffffffffff
  41e3fa:	je     0x41e5af
  41e400:	lea    rdi,[rip+0x1594b]        # 0x433d52
  41e407:	mov    rcx,rax
  41e40a:	mov    QWORD PTR [rip+0x1fcef],rdi        # 0x43e100
  41e411:	lea    rdi,[rip+0x15ad5]        # 0x433eed
  41e418:	mov    QWORD PTR [rip+0x1fce9],rdi        # 0x43e108
  41e41f:	call   0x426ea8
  41e424:	mov    rcx,QWORD PTR [rip+0x1fcd5]        # 0x43e100
  41e42b:	lea    rdx,[rip+0x15ac1]        # 0x433ef3
  41e432:	call   0x426ea0
  41e437:	cmp    rax,0xffffffffffffffff
  41e43b:	je     0x41e453
  41e43d:	lea    rdi,[rip+0x15aaf]        # 0x433ef3
  41e444:	mov    rcx,rax
  41e447:	mov    QWORD PTR [rip+0x1fcc2],rdi        # 0x43e110
  41e44e:	call   0x426ea8
  41e453:	mov    rcx,QWORD PTR [rip+0x1fca6]        # 0x43e100
  41e45a:	lea    rdx,[rip+0x15a9a]        # 0x433efb
  41e461:	call   0x426ea0
  41e466:	cmp    rax,0xffffffffffffffff
  41e46a:	je     0x41e482
  41e46c:	lea    rdi,[rip+0x15a88]        # 0x433efb
  41e473:	mov    rcx,rax
  41e476:	mov    QWORD PTR [rip+0x1fc9b],rdi        # 0x43e118
  41e47d:	call   0x426ea8
  41e482:	mov    rax,QWORD PTR [rip+0x1fc87]        # 0x43e110
  41e489:	test   rax,rax
  41e48c:	je     0x41e6b6
  41e492:	cmp    QWORD PTR [rip+0x1fc7e],0x0        # 0x43e118
  41e49a:	je     0x41e6b6
  41e4a0:	lea    rsi,[rip+0x15a27]        # 0x433ece
  41e4a7:	mov    QWORD PTR [rip+0x1fc12],rax        # 0x43e0c0
  41e4ae:	xor    ebx,ebx
  41e4b0:	mov    edi,DWORD PTR [r12]
  41e4b4:	test   edi,edi
  41e4b6:	jne    0x41e570
  41e4bc:	add    rbx,0x8
  41e4c0:	cmp    rbx,0x20
  41e4c4:	jne    0x41e4b0
  41e4c6:	mov    DWORD PTR [rip+0x1fbf8],0x1        # 0x43e0c8
  41e4d0:	mov    ebx,DWORD PTR [r12]
  41e4d4:	test   ebx,ebx
  41e4d6:	jne    0x41e658
  41e4dc:	mov    r10d,DWORD PTR [rsp+0x110]
  41e4e4:	mov    rax,QWORD PTR [r13+0x68]
  41e4e8:	test   r10d,r10d
  41e4eb:	je     0x41e320
  41e4f1:	mov    edx,DWORD PTR [rsp+0x3c]
  41e4f5:	mov    rcx,QWORD PTR [rax]
  41e4f8:	mov    r8d,0x61
  41e4fe:	call   0x41dc80
  41e503:	test   eax,eax
  41e505:	jne    0x41e33a
  41e50b:	mov    rax,QWORD PTR [r13+0x68]
  41e50f:	jmp    0x41e320
  41e514:	mov    rax,QWORD PTR [rsp+0x40]
  41e519:	cmp    BYTE PTR [rax+0x9],0x1
  41e51d:	jne    0x41e34b
  41e523:	mov    BYTE PTR [rax+0x21],0x3
  41e527:	jmp    0x41e34b
  41e52c:	nop    DWORD PTR [rax+0x0]
  41e530:	movsxd rax,DWORD PTR [rsp+0x3c]
  41e535:	lea    rdx,[rip+0x18504]        # 0x436a40
  41e53c:	shl    rax,0x4
  41e540:	add    rdx,rax
  41e543:	mov    rax,QWORD PTR [rdx]
  41e546:	mov    rdx,QWORD PTR [rdx+0x8]
  41e54a:	mov    QWORD PTR [rcx+0x18],rax
  41e54e:	mov    QWORD PTR [rcx+0x20],rdx
  41e552:	mov    rcx,QWORD PTR [r13+0x68]
  41e556:	mov    rcx,QWORD PTR [rcx+0x8]
  41e55a:	mov    QWORD PTR [rcx],rax
  41e55d:	mov    QWORD PTR [rcx+0x8],rdx
  41e561:	jmp    0x41e38b
  41e566:	mov    eax,0xffffffff
  41e56b:	jmp    0x41e397
  41e570:	lea    rax,[rip+0x1fb89]        # 0x43e100
  41e577:	lea    rdx,[rip+0x184c2]        # 0x436a40
  41e57e:	lea    r8,[rip+0x15984]        # 0x433f09
  41e585:	lea    rcx,[rip+0x157ac]        # 0x433d38
  41e58c:	mov    rax,QWORD PTR [rax+rbx*1]
  41e590:	mov    r9,QWORD PTR [rdx+rbx*2]
  41e594:	mov    edx,0xb95
  41e599:	test   rax,rax
  41e59c:	cmove  rax,rsi
  41e5a0:	mov    QWORD PTR [rsp+0x20],rax
  41e5a5:	call   0x423fa0
  41e5aa:	jmp    0x41e4bc
  41e5af:	lea    rsi,[rip+0x16d12]        # 0x4352c8
  41e5b6:	lea    rdi,[rip+0x15777]        # 0x433d34
  41e5bd:	nop    DWORD PTR [rax]
  41e5c0:	mov    ebp,DWORD PTR [rsi]
  41e5c2:	test   ebp,ebp
  41e5c4:	jne    0x41e630
  41e5c6:	lea    rbx,[rip+0x16cfb]        # 0x4352c8
  41e5cd:	lea    rbp,[rip+0x15760]        # 0x433d34
  41e5d4:	jmp    0x41e5ed
  41e5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e5e0:	add    rbx,0x10
  41e5e4:	mov    rbp,QWORD PTR [rbx-0x8]
  41e5e8:	test   rbp,rbp
  41e5eb:	je     0x41e620
  41e5ed:	cmp    DWORD PTR [rbx],0x1
  41e5f0:	jne    0x41e5e0
  41e5f2:	mov    rdx,rbp
  41e5f5:	mov    rcx,rdi
  41e5f8:	call   0x426ea0
  41e5fd:	cmp    rax,0xffffffffffffffff
  41e601:	je     0x41e5e0
  41e603:	mov    rcx,rax
  41e606:	mov    QWORD PTR [rip+0x1faf3],rdi        # 0x43e100
  41e60d:	mov    QWORD PTR [rip+0x1faf4],rbp        # 0x43e108
  41e614:	call   0x426ea8
  41e619:	nop    DWORD PTR [rax+0x0]
  41e620:	mov    rcx,QWORD PTR [rip+0x1fad9]        # 0x43e100
  41e627:	test   rcx,rcx
  41e62a:	jne    0x41e42b
  41e630:	add    rsi,0x10
  41e634:	mov    rdi,QWORD PTR [rsi-0x8]
  41e638:	test   rdi,rdi
  41e63b:	jne    0x41e5c0
  41e63d:	mov    rcx,QWORD PTR [rip+0x1fabc]        # 0x43e100
  41e644:	test   rcx,rcx
  41e647:	jne    0x41e42b
  41e64d:	mov    r9d,0x1
  41e653:	jmp    0x41e894
  41e658:	mov    r9,QWORD PTR [rsp+0x108]
  41e660:	lea    r8,[rip+0x15941]        # 0x433fa8
  41e667:	lea    rcx,[rip+0x156ca]        # 0x433d38
  41e66e:	mov    edx,0x1577
  41e673:	call   0x423fa0
  41e678:	mov    r11d,DWORD PTR [r12]
  41e67c:	test   r11d,r11d
  41e67f:	je     0x41e4dc
  41e685:	lea    rax,[rip+0x15a8c]        # 0x434118
  41e68c:	mov    r9,QWORD PTR [rsp+0x108]
  41e694:	lea    r8,[rip+0x1593d]        # 0x433fd8
  41e69b:	lea    rcx,[rip+0x15696]        # 0x433d38
  41e6a2:	mov    edx,0x1597
  41e6a7:	mov    QWORD PTR [rsp+0x20],rax
  41e6ac:	call   0x423fa0
  41e6b1:	jmp    0x41e4dc
  41e6b6:	lea    rax,[rsp+0x7f]
  41e6bb:	lea    r15,[rip+0x15672]        # 0x433d34
  41e6c2:	mov    QWORD PTR [rsp+0x100],r13
  41e6ca:	lea    r14,[rip+0x16bf7]        # 0x4352c8
  41e6d1:	lea    rbp,[rip+0x18368]        # 0x436a40
  41e6d8:	lea    rbx,[rip+0x15824]        # 0x433f03
  41e6df:	mov    QWORD PTR [rsp+0x48],rax
  41e6e4:	lea    rax,[rsp+0x80]
  41e6ec:	mov    r13,r15
  41e6ef:	mov    QWORD PTR [rsp+0x50],rax
  41e6f4:	lea    rax,[rsp+0xa8]
  41e6fc:	mov    QWORD PTR [rsp+0x58],rax
  41e701:	lea    rax,[rsp+0x90]
  41e709:	mov    QWORD PTR [rsp+0x60],rax
  41e70e:	lea    rax,[rsp+0xa0]
  41e716:	mov    QWORD PTR [rsp+0x68],rax
  41e71b:	lea    rax,[rsp+0x98]
  41e723:	mov    r15,rax
  41e726:	jmp    0x41e741
  41e728:	nop    DWORD PTR [rax+rax*1+0x0]
  41e730:	add    r14,0x10
  41e734:	mov    r13,QWORD PTR [r14-0x8]
  41e738:	test   r13,r13
  41e73b:	je     0x41e866
  41e741:	movsxd rax,DWORD PTR [r14]
  41e744:	mov    ecx,0x5
  41e749:	mov    rdi,rbx
  41e74c:	shl    rax,0x4
  41e750:	mov    rsi,QWORD PTR [rbp+rax*1+0x0]
  41e755:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41e757:	jne    0x41e730
  41e759:	mov    rdx,QWORD PTR [rip+0x1f9a0]        # 0x43e100
  41e760:	mov    rcx,r13
  41e763:	call   0x426ea0
  41e768:	cmp    rax,0xffffffffffffffff
  41e76c:	mov    rsi,rax
  41e76f:	je     0x41e730
  41e771:	mov    rax,QWORD PTR [rsp+0x48]
  41e776:	mov    r9,QWORD PTR [rsp+0x58]
  41e77b:	mov    rcx,rsi
  41e77e:	mov    r8,QWORD PTR [rsp+0x60]
  41e783:	mov    rdx,QWORD PTR [rsp+0x68]
  41e788:	mov    QWORD PTR [rsp+0x20],r15
  41e78d:	mov    BYTE PTR [rsp+0x7f],0x41
  41e792:	mov    QWORD PTR [rsp+0xa0],rax
  41e79a:	mov    rax,QWORD PTR [rsp+0x50]
  41e79f:	mov    QWORD PTR [rsp+0x90],0x1
  41e7ab:	mov    QWORD PTR [rsp+0x98],0x4
  41e7b7:	mov    BYTE PTR [rsp+0x81],0x0
  41e7bf:	mov    BYTE PTR [rsp+0x80],0x0
  41e7c7:	mov    QWORD PTR [rsp+0xa8],rax
  41e7cf:	call   0x426eb0
  41e7d4:	cmp    rax,0xffffffffffffffff
  41e7d8:	je     0x41e819
  41e7da:	cmp    QWORD PTR [rsp+0x98],0x0
  41e7e3:	je     0x41e853
  41e7e5:	movzx  eax,BYTE PTR [rsp+0x80]
  41e7ed:	mov    ecx,0x1
  41e7f2:	test   al,al
  41e7f4:	je     0x41e840
  41e7f6:	mov    QWORD PTR [rsp+0x90],0x2
  41e802:	mov    edx,0x2
  41e807:	lea    rax,[rip+0x1f8f2]        # 0x43e100
  41e80e:	cmp    QWORD PTR [rax+rdx*8],0x0
  41e813:	je     0x41e830
  41e815:	test   cl,cl
  41e817:	jne    0x41e830
  41e819:	mov    rcx,rsi
  41e81c:	call   0x426ea8
  41e821:	jmp    0x41e730
  41e826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e830:	mov    QWORD PTR [rax+rdx*8],r13
  41e834:	jmp    0x41e819
  41e836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e840:	mov    QWORD PTR [rsp+0x90],0x3
  41e84c:	mov    edx,0x3
  41e851:	jmp    0x41e807
  41e853:	movzx  eax,BYTE PTR [rsp+0x82]
  41e85b:	xor    ecx,ecx
  41e85d:	mov    BYTE PTR [rsp+0x80],al
  41e864:	jmp    0x41e7f2
  41e866:	mov    rax,QWORD PTR [rip+0x1f8a3]        # 0x43e110
  41e86d:	mov    r13,QWORD PTR [rsp+0x100]
  41e875:	test   rax,rax
  41e878:	jne    0x41e4a0
  41e87e:	mov    rax,QWORD PTR [rip+0x1f893]        # 0x43e118
  41e885:	test   rax,rax
  41e888:	jne    0x41e4a0
  41e88e:	mov    r9d,0x2
  41e894:	mov    ecx,DWORD PTR [r12]
  41e898:	test   ecx,ecx
  41e89a:	je     0x41e566
  41e8a0:	lea    eax,[r9-0x1]
  41e8a4:	lea    r8,[rip+0x1567d]        # 0x433f28
  41e8ab:	lea    rcx,[rip+0x15486]        # 0x433d38
  41e8b2:	cdqe   
  41e8b4:	lea    rdx,[rax+rax*2]
  41e8b8:	lea    rax,[rip+0x15861]        # 0x434120
  41e8bf:	lea    rax,[rax+rdx*4]
  41e8c3:	mov    edx,0x14c7
  41e8c8:	mov    QWORD PTR [rsp+0x20],rax
  41e8cd:	call   0x423fa0
  41e8d2:	mov    eax,0xffffffff
  41e8d7:	jmp    0x41e397
  41e8dc:	lea    r8,[rip+0x15723]        # 0x434006
  41e8e3:	lea    rcx,[rip+0x1544e]        # 0x433d38
  41e8ea:	mov    edx,0x1807
  41e8ef:	call   0x423fa0
  41e8f4:	xor    eax,eax
  41e8f6:	jmp    0x41e397
  41e8fb:	mov    rax,QWORD PTR [r13+0x40]
  41e8ff:	mov    r9,QWORD PTR [rsp+0x108]
  41e907:	lea    rcx,[rip+0x1542a]        # 0x433d38
  41e90e:	lea    r8,[rip+0x156c3]        # 0x433fd8
  41e915:	mov    edx,0x1777
  41e91a:	mov    QWORD PTR [rsp+0x20],rax
  41e91f:	call   0x423fa0
  41e924:	mov    rax,QWORD PTR [r13+0x68]
  41e928:	mov    rcx,QWORD PTR [rax+0x8]
  41e92c:	jmp    0x41e375
  41e931:	nop    DWORD PTR [rax+rax*1+0x0]
  41e936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e940:	push   rdi
  41e941:	push   rsi
  41e942:	push   rbx
  41e943:	sub    rsp,0x20
  41e947:	mov    eax,DWORD PTR [rcx+0x60]
  41e94a:	xor    esi,esi
  41e94c:	xor    ebx,ebx
  41e94e:	mov    rdi,rcx
  41e951:	test   eax,eax
  41e953:	jle    0x41e96e
  41e955:	mov    rax,QWORD PTR [rdi+0x68]
  41e959:	add    ebx,0x1
  41e95c:	mov    rcx,QWORD PTR [rax+rsi*1]
  41e960:	add    rsi,0x8
  41e964:	call   0x41d4f0
  41e969:	cmp    DWORD PTR [rdi+0x60],ebx
  41e96c:	jg     0x41e955
  41e96e:	add    rsp,0x20
  41e972:	pop    rbx
  41e973:	pop    rsi
  41e974:	pop    rdi
  41e975:	ret    
  41e976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e980:	push   rdi
  41e981:	push   rsi
  41e982:	push   rbx
  41e983:	sub    rsp,0x20
  41e987:	cmp    QWORD PTR [rcx+0x68],0x0
  41e98c:	je     0x41e9e3
  41e98e:	mov    rdi,rcx
  41e991:	mov    esi,0x18
  41e996:	mov    ebx,0x3
  41e99b:	call   0x41e940
  41e9a0:	mov    rax,QWORD PTR [rdi+0x68]
  41e9a4:	mov    rcx,QWORD PTR [rax]
  41e9a7:	call   0x429580
  41e9ac:	cmp    DWORD PTR [rdi+0x60],0x3
  41e9b0:	jle    0x41e9cb
  41e9b2:	mov    rax,QWORD PTR [rdi+0x68]
  41e9b6:	add    ebx,0x4
  41e9b9:	mov    rcx,QWORD PTR [rax+rsi*1]
  41e9bd:	add    rsi,0x20
  41e9c1:	call   0x429580
  41e9c6:	cmp    DWORD PTR [rdi+0x60],ebx
  41e9c9:	jg     0x41e9b2
  41e9cb:	mov    rcx,QWORD PTR [rdi+0x68]
  41e9cf:	call   0x429580
  41e9d4:	mov    QWORD PTR [rdi+0x68],0x0
  41e9dc:	mov    DWORD PTR [rdi+0x60],0x0
  41e9e3:	add    rsp,0x20
  41e9e7:	pop    rbx
  41e9e8:	pop    rsi
  41e9e9:	pop    rdi
  41e9ea:	ret    
  41e9eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41e9f0:	push   r15
  41e9f2:	push   r14
  41e9f4:	push   r13
  41e9f6:	push   r12
  41e9f8:	push   rbp
  41e9f9:	push   rdi
  41e9fa:	push   rsi
  41e9fb:	push   rbx
  41e9fc:	sub    rsp,0x108
  41ea03:	mov    r12,QWORD PTR [rsp+0x170]
  41ea0b:	mov    r15,QWORD PTR [rsp+0x180]
  41ea13:	lea    rax,[rsp+0xa0]
  41ea1b:	mov    QWORD PTR [rsp+0x150],rcx
  41ea23:	test   r9,r9
  41ea26:	mov    ecx,0x3f
  41ea2b:	mov    r14,rdx
  41ea2e:	mov    DWORD PTR [rsp+0x160],r8d
  41ea36:	mov    rbx,r9
  41ea39:	mov    WORD PTR [rsp+0xa0],cx
  41ea41:	mov    QWORD PTR [rsp+0x40],rax
  41ea46:	mov    QWORD PTR [rsp+0xb0],rax
  41ea4e:	je     0x41ec20
  41ea54:	test   r12,r12
  41ea57:	je     0x41ec20
  41ea5d:	cmp    QWORD PTR [rsp+0x178],0x0
  41ea66:	je     0x41ec20
  41ea6c:	test   r15,r15
  41ea6f:	je     0x41ec20
  41ea75:	mov    rax,QWORD PTR [r12]
  41ea79:	test   rax,rax
  41ea7c:	je     0x41ec02
  41ea82:	mov    edx,DWORD PTR [rsp+0x160]
  41ea89:	test   edx,edx
  41ea8b:	je     0x41ec40
  41ea91:	cmp    DWORD PTR [rsp+0x160],0x1
  41ea99:	jne    0x41ecd3
  41ea9f:	lea    r13,[r14+0x18]
  41eaa3:	mov    QWORD PTR [rsp+0x48],r14
  41eaa8:	test   BYTE PTR [r14+0x30],0x1
  41eaad:	jne    0x41ec57
  41eab3:	mov    rcx,QWORD PTR [r13+0x10]
  41eab7:	cmp    rcx,0xffffffffffffffff
  41eabb:	je     0x41ec57
  41eac1:	lea    rax,[rsp+0xb8]
  41eac9:	mov    rbp,r13
  41eacc:	xor    esi,esi
  41eace:	mov    QWORD PTR [rsp+0x30],0xffffffffffffffff
  41ead7:	mov    r13,QWORD PTR [rsp+0x178]
  41eadf:	mov    QWORD PTR [rsp+0x58],rax
  41eae4:	lea    rax,[rsp+0xb0]
  41eaec:	mov    QWORD PTR [rsp+0x60],rax
  41eaf1:	lea    rax,[rsp+0xe0]
  41eaf9:	mov    QWORD PTR [rsp+0x68],rax
  41eafe:	lea    rax,[rsp+0xc8]
  41eb06:	mov    QWORD PTR [rsp+0x70],rax
  41eb0b:	lea    rax,[rsp+0xd8]
  41eb13:	mov    QWORD PTR [rsp+0x78],rax
  41eb18:	lea    rax,[rsp+0xf0]
  41eb20:	mov    QWORD PTR [rsp+0x80],rax
  41eb28:	jmp    0x41eb3f
  41eb2a:	nop    WORD PTR [rax+rax*1+0x0]
  41eb30:	test   rbx,rbx
  41eb33:	je     0x41ecb0
  41eb39:	xor    ebx,ebx
  41eb3b:	mov    rcx,QWORD PTR [rbp+0x10]
  41eb3f:	mov    QWORD PTR [rsp+0x20],r15
  41eb44:	mov    r9,r13
  41eb47:	mov    r8,r12
  41eb4a:	mov    rdx,rbx
  41eb4d:	call   0x426eb0
  41eb52:	cmp    rax,0xffffffffffffffff
  41eb56:	jne    0x41eb30
  41eb58:	mov    QWORD PTR [rsp+0x50],rax
  41eb5d:	call   QWORD PTR [rip+0x20ee1]        # 0x43fa44
  41eb63:	mov    eax,DWORD PTR [rax]
  41eb65:	mov    r10,QWORD PTR [rsp+0x50]
  41eb6a:	cmp    eax,0x2a
  41eb6d:	mov    DWORD PTR [rsp+0x3c],eax
  41eb71:	je     0x41edb0
  41eb77:	test   esi,esi
  41eb79:	mov    rbp,r10
  41eb7c:	je     0x41ebc0
  41eb7e:	test   BYTE PTR [r14+0x34],0x2
  41eb83:	jne    0x41ebc0
  41eb85:	cmp    DWORD PTR [rsp+0x160],0x1
  41eb8d:	je     0x41f16e
  41eb93:	cmp    QWORD PTR [rsp+0x150],0x0
  41eb9c:	je     0x41ebbb
  41eb9e:	mov    rax,QWORD PTR [rsp+0x150]
  41eba6:	xor    r9d,r9d
  41eba9:	mov    r8d,0x962
  41ebaf:	mov    rcx,QWORD PTR [rax+0x28]
  41ebb3:	mov    rdx,rax
  41ebb6:	call   0x40a8d0
  41ebbb:	or     BYTE PTR [r14+0x34],0x2
  41ebc0:	mov    eax,DWORD PTR [rsp+0x3c]
  41ebc4:	cmp    eax,0x7
  41ebc7:	je     0x41ed71
  41ebcd:	cmp    eax,0x16
  41ebd0:	je     0x41ed20
  41ebd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ebe0:	mov    rax,QWORD PTR [rsp+0x30]
  41ebe5:	cmp    rax,0xffffffffffffffff
  41ebe9:	je     0x41ebf3
  41ebeb:	mov    rcx,rax
  41ebee:	call   0x426ea8
  41ebf3:	call   QWORD PTR [rip+0x20e4b]        # 0x43fa44
  41ebf9:	mov    edi,DWORD PTR [rsp+0x3c]
  41ebfd:	mov    DWORD PTR [rax],edi
  41ebff:	mov    rax,rbp
  41ec02:	add    rsp,0x108
  41ec09:	pop    rbx
  41ec0a:	pop    rsi
  41ec0b:	pop    rdi
  41ec0c:	pop    rbp
  41ec0d:	pop    r12
  41ec0f:	pop    r13
  41ec11:	pop    r14
  41ec13:	pop    r15
  41ec15:	ret    
  41ec16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ec20:	lea    rdx,[rip+0x15111]        # 0x433d38
  41ec27:	lea    rcx,[rip+0x153f2]        # 0x434020
  41ec2e:	mov    r8d,0x235
  41ec34:	call   0x4291e0
  41ec39:	jmp    0x41ea75
  41ec3e:	xchg   ax,ax
  41ec40:	test   BYTE PTR [r14+0x30],0x1
  41ec45:	lea    rax,[r14+0x18]
  41ec49:	mov    r13,r14
  41ec4c:	mov    QWORD PTR [rsp+0x48],rax
  41ec51:	je     0x41eab3
  41ec57:	mov    rsi,QWORD PTR [r15]
  41ec5a:	mov    rax,QWORD PTR [rsp+0x178]
  41ec62:	cmp    QWORD PTR [r12],rsi
  41ec66:	mov    rdx,QWORD PTR [rbx]
  41ec69:	cmovbe rsi,QWORD PTR [r12]
  41ec6e:	mov    rcx,QWORD PTR [rax]
  41ec71:	mov    r8,rsi
  41ec74:	call   0x429528
  41ec79:	call   QWORD PTR [rip+0x20dc5]        # 0x43fa44
  41ec7f:	mov    rdx,QWORD PTR [r12]
  41ec83:	cmp    QWORD PTR [r15],rdx
  41ec86:	sbb    ecx,ecx
  41ec88:	sub    rdx,rsi
  41ec8b:	and    ecx,0x7
  41ec8e:	mov    DWORD PTR [rax],ecx
  41ec90:	mov    rax,QWORD PTR [rsp+0x178]
  41ec98:	mov    QWORD PTR [r12],rdx
  41ec9c:	sub    QWORD PTR [r15],rsi
  41ec9f:	add    QWORD PTR [rbx],rsi
  41eca2:	add    QWORD PTR [rax],rsi
  41eca5:	xor    eax,eax
  41eca7:	jmp    0x41ec02
  41ecac:	nop    DWORD PTR [rax+0x0]
  41ecb0:	test   esi,esi
  41ecb2:	mov    rbp,rax
  41ecb5:	mov    DWORD PTR [rsp+0x3c],0x0
  41ecbd:	je     0x41ebe0
  41ecc3:	test   BYTE PTR [r14+0x34],0x2
  41ecc8:	je     0x41eb85
  41ecce:	jmp    0x41ebe0
  41ecd3:	mov    rax,QWORD PTR [rip+0x19ed6]        # 0x438bb0
  41ecda:	mov    eax,DWORD PTR [rax]
  41ecdc:	test   eax,eax
  41ecde:	jne    0x41ef31
  41ece4:	cmp    DWORD PTR [rsp+0x160],0x1
  41ecec:	jbe    0x41ed60
  41ecee:	lea    rdx,[rip+0x15043]        # 0x433d38
  41ecf5:	lea    rcx,[rip+0x15394]        # 0x434090
  41ecfc:	mov    r8d,0x24a
  41ed02:	xor    r13d,r13d
  41ed05:	call   0x4291e0
  41ed0a:	mov    QWORD PTR [rsp+0x48],0x0
  41ed13:	jmp    0x41eaa8
  41ed18:	nop    DWORD PTR [rax+rax*1+0x0]
  41ed20:	test   BYTE PTR [r14+0x34],0x4
  41ed25:	jne    0x41ebe0
  41ed2b:	cmp    QWORD PTR [rsp+0x150],0x0
  41ed34:	je     0x41ed53
  41ed36:	mov    rax,QWORD PTR [rsp+0x150]
  41ed3e:	xor    r9d,r9d
  41ed41:	mov    r8d,0x961
  41ed47:	mov    rcx,QWORD PTR [rax+0x28]
  41ed4b:	mov    rdx,rax
  41ed4e:	call   0x40a8d0
  41ed53:	or     BYTE PTR [r14+0x34],0x4
  41ed58:	jmp    0x41ebe0
  41ed5d:	nop    DWORD PTR [rax]
  41ed60:	xor    r13d,r13d
  41ed63:	mov    QWORD PTR [rsp+0x48],0x0
  41ed6c:	jmp    0x41eaa8
  41ed71:	test   BYTE PTR [r14+0x34],0x1
  41ed76:	jne    0x41ebe0
  41ed7c:	cmp    QWORD PTR [rsp+0x150],0x0
  41ed85:	je     0x41eda4
  41ed87:	mov    rax,QWORD PTR [rsp+0x150]
  41ed8f:	xor    r9d,r9d
  41ed92:	mov    r8d,0x960
  41ed98:	mov    rcx,QWORD PTR [rax+0x28]
  41ed9c:	mov    rdx,rax
  41ed9f:	call   0x40a8d0
  41eda4:	or     BYTE PTR [r14+0x34],0x1
  41eda9:	jmp    0x41ebe0
  41edae:	xchg   ax,ax
  41edb0:	cmp    DWORD PTR [rsp+0x160],0x1
  41edb8:	jne    0x41ef29
  41edbe:	test   rbx,rbx
  41edc1:	je     0x41ef29
  41edc7:	mov    rdi,QWORD PTR [rsp+0x48]
  41edcc:	mov    r11,QWORD PTR [rbp+0x10]
  41edd0:	movzx  eax,BYTE PTR [rdi+0x8]
  41edd4:	cmp    al,BYTE PTR [rdi+0x9]
  41edd7:	je     0x41eee0
  41eddd:	mov    rax,QWORD PTR [rsp+0x48]
  41ede2:	lea    rdi,[rip+0x15104]        # 0x433eed
  41ede9:	mov    ecx,0x6
  41edee:	mov    rsi,QWORD PTR [rax]
  41edf1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41edf3:	jne    0x41ef60
  41edf9:	mov    rdx,QWORD PTR [rbx]
  41edfc:	xor    esi,esi
  41edfe:	movsx  eax,BYTE PTR [rdx]
  41ee01:	mov    ecx,eax
  41ee03:	sar    ecx,1
  41ee05:	and    eax,ecx
  41ee07:	nop    WORD PTR [rax+rax*1+0x0]
  41ee10:	add    eax,eax
  41ee12:	add    esi,0x1
  41ee15:	test   al,0x80
  41ee17:	jne    0x41ee10
  41ee19:	mov    rax,QWORD PTR [r12]
  41ee1d:	cmp    rsi,rax
  41ee20:	ja     0x41eea0
  41ee22:	add    rdx,rsi
  41ee25:	sub    rax,rsi
  41ee28:	mov    QWORD PTR [rbx],rdx
  41ee2b:	mov    QWORD PTR [r12],rax
  41ee2f:	test   rsi,rsi
  41ee32:	je     0x41ef29
  41ee38:	cmp    QWORD PTR [rsp+0x30],0xffffffffffffffff
  41ee3e:	je     0x41ef00
  41ee44:	mov    rax,QWORD PTR [rsp+0x40]
  41ee49:	mov    r8,QWORD PTR [rsp+0x58]
  41ee4e:	mov    r9,r13
  41ee51:	mov    rdx,QWORD PTR [rsp+0x60]
  41ee56:	mov    rcx,QWORD PTR [rsp+0x30]
  41ee5b:	mov    QWORD PTR [rsp+0x20],r15
  41ee60:	mov    QWORD PTR [rsp+0xb8],0x1
  41ee6c:	mov    QWORD PTR [rsp+0xb0],rax
  41ee74:	call   0x426eb0
  41ee79:	cmp    rax,0xffffffffffffffff
  41ee7d:	mov    r10,rax
  41ee80:	je     0x41ef29
  41ee86:	cmp    QWORD PTR [r12],0x0
  41ee8b:	je     0x41ef29
  41ee91:	mov    esi,0x1
  41ee96:	jmp    0x41eb3b
  41ee9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41eea0:	test   BYTE PTR [r14+0x34],0x2
  41eea5:	mov    rbp,r10
  41eea8:	jne    0x41ebe0
  41eeae:	cmp    QWORD PTR [rsp+0x150],0x0
  41eeb7:	je     0x41ebbb
  41eebd:	mov    rax,QWORD PTR [rsp+0x150]
  41eec5:	xor    r9d,r9d
  41eec8:	mov    r8d,0x964
  41eece:	mov    rcx,QWORD PTR [rax+0x28]
  41eed2:	mov    rdx,rax
  41eed5:	call   0x40a8d0
  41eeda:	jmp    0x41ebbb
  41eedf:	nop
  41eee0:	test   al,al
  41eee2:	je     0x41eddd
  41eee8:	mov    rdx,QWORD PTR [r12]
  41eeec:	cmp    rax,rdx
  41eeef:	ja     0x41eea0
  41eef1:	sub    rdx,rax
  41eef4:	add    QWORD PTR [rbx],rax
  41eef7:	mov    QWORD PTR [r12],rdx
  41eefb:	jmp    0x41ee38
  41ef00:	mov    rdx,QWORD PTR [rip+0x1f201]        # 0x43e108
  41ef07:	mov    rcx,QWORD PTR [rbp+0x0]
  41ef0b:	mov    QWORD PTR [rsp+0x50],r10
  41ef10:	call   0x426ea0
  41ef15:	cmp    rax,0xffffffffffffffff
  41ef19:	mov    QWORD PTR [rsp+0x30],rax
  41ef1e:	mov    r10,QWORD PTR [rsp+0x50]
  41ef23:	jne    0x41ee44
  41ef29:	mov    rbp,r10
  41ef2c:	jmp    0x41ecc3
  41ef31:	mov    r9d,DWORD PTR [rsp+0x160]
  41ef39:	lea    r8,[rip+0x15110]        # 0x434050
  41ef40:	lea    rcx,[rip+0x14df1]        # 0x433d38
  41ef47:	mov    edx,0x2497
  41ef4c:	call   0x423fa0
  41ef51:	jmp    0x41ece4
  41ef56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ef60:	mov    rax,QWORD PTR [rsp+0x68]
  41ef65:	mov    r9,QWORD PTR [rsp+0x70]
  41ef6a:	xor    r8d,r8d
  41ef6d:	xor    edx,edx
  41ef6f:	mov    rcx,r11
  41ef72:	mov    QWORD PTR [rsp+0x88],r10
  41ef7a:	mov    QWORD PTR [rsp+0x90],r11
  41ef82:	mov    QWORD PTR [rsp+0xd8],0x10
  41ef8e:	mov    QWORD PTR [rsp+0xc8],rax
  41ef96:	mov    rax,QWORD PTR [rsp+0x78]
  41ef9b:	mov    QWORD PTR [rsp+0x20],rax
  41efa0:	call   0x426eb0
  41efa5:	mov    rax,QWORD PTR [rsp+0x48]
  41efaa:	lea    rcx,[rip+0x15102]        # 0x4340b3
  41efb1:	mov    rdx,QWORD PTR [rax]
  41efb4:	call   0x426ea0
  41efb9:	cmp    rax,0xffffffffffffffff
  41efbd:	mov    QWORD PTR [rsp+0x50],rax
  41efc2:	mov    r10,QWORD PTR [rsp+0x88]
  41efca:	je     0x41eea0
  41efd0:	mov    rax,QWORD PTR [rsp+0xd8]
  41efd8:	mov    rdi,QWORD PTR [r12]
  41efdc:	mov    r11,QWORD PTR [rsp+0x90]
  41efe4:	cmp    rax,rdi
  41efe7:	mov    QWORD PTR [rsp+0xd0],rax
  41efef:	jbe    0x41f1b1
  41eff5:	mov    QWORD PTR [rsp+0xd0],rdi
  41effd:	mov    esi,0x10
  41f002:	mov    rdx,QWORD PTR [rbx]
  41f005:	mov    r8,rdi
  41f008:	sub    rsi,rax
  41f00b:	mov    rax,QWORD PTR [rsp+0x68]
  41f010:	mov    QWORD PTR [rsp+0x98],r10
  41f018:	mov    QWORD PTR [rsp+0x90],r11
  41f020:	add    rdi,rsi
  41f023:	lea    rcx,[rax+rsi*1]
  41f027:	call   0x429528
  41f02c:	lea    rdx,[rsp+0xc0]
  41f034:	mov    QWORD PTR [rsp+0xd0],rdi
  41f03c:	mov    rdi,QWORD PTR [rsp+0x80]
  41f044:	mov    rax,QWORD PTR [rsp+0x68]
  41f049:	mov    r9,QWORD PTR [rsp+0x70]
  41f04e:	mov    rcx,rdx
  41f051:	mov    rdx,QWORD PTR [rsp+0x78]
  41f056:	mov    QWORD PTR [rsp+0xd8],0x4
  41f062:	mov    QWORD PTR [rsp+0xc8],rdi
  41f06a:	mov    QWORD PTR [rsp+0x88],rcx
  41f072:	lea    rdi,[rsp+0xd0]
  41f07a:	mov    QWORD PTR [rsp+0xc0],rax
  41f082:	mov    QWORD PTR [rsp+0x20],rdx
  41f087:	mov    rdx,rcx
  41f08a:	mov    rcx,QWORD PTR [rsp+0x50]
  41f08f:	mov    r8,rdi
  41f092:	call   0x426eb0
  41f097:	mov    r11,QWORD PTR [rsp+0x68]
  41f09c:	mov    r8,QWORD PTR [rsp+0xc0]
  41f0a4:	xor    edx,edx
  41f0a6:	mov    r9,QWORD PTR [rsp+0x78]
  41f0ab:	mov    QWORD PTR [rsp+0xd8],0x10
  41f0b7:	sub    r8,r11
  41f0ba:	mov    QWORD PTR [rsp+0xc8],r11
  41f0c2:	mov    r11,QWORD PTR [rsp+0x90]
  41f0ca:	mov    rax,r8
  41f0cd:	xor    r8d,r8d
  41f0d0:	sub    rax,rsi
  41f0d3:	add    QWORD PTR [rbx],rax
  41f0d6:	sub    QWORD PTR [r12],rax
  41f0da:	mov    QWORD PTR [rsp+0x20],r9
  41f0df:	mov    r9,QWORD PTR [rsp+0x70]
  41f0e4:	mov    rcx,r11
  41f0e7:	mov    rsi,rax
  41f0ea:	call   0x426eb0
  41f0ef:	mov    r11,QWORD PTR [rsp+0x68]
  41f0f4:	mov    eax,0x10
  41f0f9:	sub    rax,QWORD PTR [rsp+0xd8]
  41f101:	mov    r9,QWORD PTR [rsp+0x70]
  41f106:	mov    rdx,QWORD PTR [rsp+0x88]
  41f10e:	mov    r8,rdi
  41f111:	mov    QWORD PTR [rsp+0xd8],0x10
  41f11d:	mov    QWORD PTR [rsp+0xc0],r11
  41f125:	mov    r11,QWORD PTR [rsp+0x80]
  41f12d:	mov    QWORD PTR [rsp+0xd0],rax
  41f135:	mov    rax,QWORD PTR [rsp+0x78]
  41f13a:	mov    QWORD PTR [rsp+0xc8],r11
  41f142:	mov    r11,QWORD PTR [rsp+0x90]
  41f14a:	mov    QWORD PTR [rsp+0x20],rax
  41f14f:	mov    rcx,r11
  41f152:	call   0x426eb0
  41f157:	mov    rcx,QWORD PTR [rsp+0x50]
  41f15c:	call   0x426ea8
  41f161:	mov    r10,QWORD PTR [rsp+0x98]
  41f169:	jmp    0x41ee2f
  41f16e:	cmp    rbp,0xffffffffffffffff
  41f172:	je     0x41eeae
  41f178:	cmp    QWORD PTR [rsp+0x150],0x0
  41f181:	mov    DWORD PTR [rsp+0x3c],0x0
  41f189:	je     0x41ebbb
  41f18f:	mov    rax,QWORD PTR [rsp+0x150]
  41f197:	xor    r9d,r9d
  41f19a:	mov    r8d,0x963
  41f1a0:	mov    rcx,QWORD PTR [rax+0x28]
  41f1a4:	mov    rdx,rax
  41f1a7:	call   0x40a8d0
  41f1ac:	jmp    0x41ebbb
  41f1b1:	mov    rdi,rax
  41f1b4:	jmp    0x41effd
  41f1b9:	nop    DWORD PTR [rax+0x0]
  41f1c0:	push   rbp
  41f1c1:	push   rdi
  41f1c2:	push   rsi
  41f1c3:	push   rbx
  41f1c4:	sub    rsp,0x28
  41f1c8:	mov    rdi,r8
  41f1cb:	mov    rbx,rcx
  41f1ce:	mov    rcx,rdx
  41f1d1:	mov    rbp,rdx
  41f1d4:	call   0x41db20
  41f1d9:	mov    rcx,rdi
  41f1dc:	mov    esi,eax
  41f1de:	call   0x41db20
  41f1e3:	test   esi,esi
  41f1e5:	js     0x41f230
  41f1e7:	test   eax,eax
  41f1e9:	js     0x41f210
  41f1eb:	lea    rdx,[rbx+0x68]
  41f1ef:	lea    rcx,[rbx+0x60]
  41f1f3:	mov    r9d,eax
  41f1f6:	mov    r8d,esi
  41f1f9:	add    rsp,0x28
  41f1fd:	pop    rbx
  41f1fe:	pop    rsi
  41f1ff:	pop    rdi
  41f200:	pop    rbp
  41f201:	jmp    0x41df60
  41f206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f210:	mov    rax,QWORD PTR [rip+0x19999]        # 0x438bb0
  41f217:	mov    eax,DWORD PTR [rax]
  41f219:	test   eax,eax
  41f21b:	jne    0x41f260
  41f21d:	xor    eax,eax
  41f21f:	add    rsp,0x28
  41f223:	pop    rbx
  41f224:	pop    rsi
  41f225:	pop    rdi
  41f226:	pop    rbp
  41f227:	ret    
  41f228:	nop    DWORD PTR [rax+rax*1+0x0]
  41f230:	mov    rax,QWORD PTR [rip+0x19979]        # 0x438bb0
  41f237:	mov    edx,DWORD PTR [rax]
  41f239:	test   edx,edx
  41f23b:	je     0x41f21d
  41f23d:	lea    r8,[rip+0x14e7c]        # 0x4340c0
  41f244:	lea    rcx,[rip+0x14aed]        # 0x433d38
  41f24b:	mov    r9,rbp
  41f24e:	mov    edx,0x2f87
  41f253:	call   0x423fa0
  41f258:	jmp    0x41f21d
  41f25a:	nop    WORD PTR [rax+rax*1+0x0]
  41f260:	lea    r8,[rip+0x14e59]        # 0x4340c0
  41f267:	lea    rcx,[rip+0x14aca]        # 0x433d38
  41f26e:	mov    r9,rdi
  41f271:	mov    edx,0x2fc7
  41f276:	call   0x423fa0
  41f27b:	jmp    0x41f21d
  41f27d:	nop    DWORD PTR [rax]
  41f280:	push   rsi
  41f281:	push   rbx
  41f282:	sub    rsp,0x28
  41f286:	mov    rsi,rcx
  41f289:	mov    rcx,rdx
  41f28c:	mov    rbx,rdx
  41f28f:	call   0x41db20
  41f294:	test   eax,eax
  41f296:	js     0x41f2b0
  41f298:	mov    edx,eax
  41f29a:	mov    rcx,rsi
  41f29d:	add    rsp,0x28
  41f2a1:	pop    rbx
  41f2a2:	pop    rsi
  41f2a3:	jmp    0x41e0e0
  41f2a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f2b0:	mov    rax,QWORD PTR [rip+0x198f9]        # 0x438bb0
  41f2b7:	mov    eax,DWORD PTR [rax]
  41f2b9:	test   eax,eax
  41f2bb:	jne    0x41f2c4
  41f2bd:	add    rsp,0x28
  41f2c1:	pop    rbx
  41f2c2:	pop    rsi
  41f2c3:	ret    
  41f2c4:	lea    r8,[rip+0x14e1d]        # 0x4340e8
  41f2cb:	lea    rcx,[rip+0x14a66]        # 0x433d38
  41f2d2:	mov    r9,rbx
  41f2d5:	mov    edx,0x31e7
  41f2da:	add    rsp,0x28
  41f2de:	pop    rbx
  41f2df:	pop    rsi
  41f2e0:	jmp    0x423fa0
  41f2e5:	nop
  41f2e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f2f0:	push   rbx
  41f2f1:	sub    rsp,0x20
  41f2f5:	mov    rbx,rcx
  41f2f8:	mov    ecx,edx
  41f2fa:	mov    edx,r8d
  41f2fd:	call   0x41d530
  41f302:	mov    rcx,rbx
  41f305:	mov    edx,eax
  41f307:	add    rsp,0x20
  41f30b:	pop    rbx
  41f30c:	jmp    0x41e0e0
  41f311:	nop    DWORD PTR [rax+rax*1+0x0]
  41f316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f320:	push   rbx
  41f321:	sub    rsp,0x20
  41f325:	mov    rbx,rcx
  41f328:	call   0x41db20
  41f32d:	test   eax,eax
  41f32f:	js     0x41f350
  41f331:	lea    rdx,[rip+0x17708]        # 0x436a40
  41f338:	cdqe   
  41f33a:	shl    rax,0x4
  41f33e:	mov    rax,QWORD PTR [rdx+rax*1]
  41f342:	add    rsp,0x20
  41f346:	pop    rbx
  41f347:	ret    
  41f348:	nop    DWORD PTR [rax+rax*1+0x0]
  41f350:	mov    rax,rbx
  41f353:	add    rsp,0x20
  41f357:	pop    rbx
  41f358:	ret    
  41f359:	nop    DWORD PTR [rax+0x0]
  41f360:	push   rbx
  41f361:	sub    rsp,0x20
  41f365:	movzx  eax,BYTE PTR [rdx+0x1]
  41f369:	mov    rbx,rcx
  41f36c:	movzx  ecx,BYTE PTR [rdx]
  41f36f:	shl    eax,0x8
  41f372:	add    eax,ecx
  41f374:	movzx  ecx,BYTE PTR [rdx+0x4]
  41f378:	mov    edx,eax
  41f37a:	call   0x41d530
  41f37f:	mov    rdx,QWORD PTR [rbx+0x68]
  41f383:	mov    r9d,eax
  41f386:	mov    rax,QWORD PTR [rdx+0x8]
  41f38a:	movzx  ecx,BYTE PTR [rax+0xa]
  41f38e:	cmp    ecx,r9d
  41f391:	je     0x41f3b0
  41f393:	mov    rax,QWORD PTR [rdx]
  41f396:	lea    rcx,[rbx+0x60]
  41f39a:	lea    rdx,[rbx+0x68]
  41f39e:	movzx  r8d,BYTE PTR [rax+0x22]
  41f3a3:	add    rsp,0x20
  41f3a7:	pop    rbx
  41f3a8:	jmp    0x41df60
  41f3ad:	nop    DWORD PTR [rax]
  41f3b0:	add    rsp,0x20
  41f3b4:	pop    rbx
  41f3b5:	ret    
  41f3b6:	nop
  41f3b7:	nop
  41f3b8:	nop
  41f3b9:	nop
  41f3ba:	nop
  41f3bb:	nop
  41f3bc:	nop
  41f3bd:	nop
  41f3be:	nop
  41f3bf:	nop
  41f3c0:	push   rbp
  41f3c1:	push   rdi
  41f3c2:	push   rsi
  41f3c3:	push   rbx
  41f3c4:	sub    rsp,0x28
  41f3c8:	lea    rdi,[rip+0x17cf1]        # 0x4370c0
  41f3cf:	mov    rax,rcx
  41f3d2:	mov    ecx,0x8
  41f3d7:	mov    rbp,rdx
  41f3da:	mov    rsi,rax
  41f3dd:	mov    rbx,r8
  41f3e0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41f3e2:	je     0x41f432
  41f3e4:	lea    rdi,[rip+0x17cdd]        # 0x4370c8
  41f3eb:	mov    ecx,0x9
  41f3f0:	mov    rsi,rax
  41f3f3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41f3f5:	je     0x41f451
  41f3f7:	lea    rdi,[rip+0x17cd3]        # 0x4370d1
  41f3fe:	mov    ecx,0xc
  41f403:	mov    rsi,rax
  41f406:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41f408:	je     0x41f413
  41f40a:	add    rsp,0x28
  41f40e:	pop    rbx
  41f40f:	pop    rsi
  41f410:	pop    rdi
  41f411:	pop    rbp
  41f412:	ret    
  41f413:	mov    rcx,QWORD PTR [r8+0x10]
  41f417:	call   0x429580
  41f41c:	mov    rcx,rbp
  41f41f:	call   QWORD PTR [rip+0x20667]        # 0x43fa8c
  41f425:	mov    QWORD PTR [rbx+0x10],rax
  41f429:	add    rsp,0x28
  41f42d:	pop    rbx
  41f42e:	pop    rsi
  41f42f:	pop    rdi
  41f430:	pop    rbp
  41f431:	ret    
  41f432:	mov    rcx,QWORD PTR [r8+0x8]
  41f436:	call   0x429580
  41f43b:	mov    rcx,rbp
  41f43e:	call   QWORD PTR [rip+0x20648]        # 0x43fa8c
  41f444:	mov    QWORD PTR [rbx+0x8],rax
  41f448:	add    rsp,0x28
  41f44c:	pop    rbx
  41f44d:	pop    rsi
  41f44e:	pop    rdi
  41f44f:	pop    rbp
  41f450:	ret    
  41f451:	mov    rcx,QWORD PTR [r8]
  41f454:	call   0x429580
  41f459:	mov    rcx,rbp
  41f45c:	call   QWORD PTR [rip+0x2062a]        # 0x43fa8c
  41f462:	mov    QWORD PTR [rbx],rax
  41f465:	add    rsp,0x28
  41f469:	pop    rbx
  41f46a:	pop    rsi
  41f46b:	pop    rdi
  41f46c:	pop    rbp
  41f46d:	ret    
  41f46e:	xchg   ax,ax
  41f470:	push   rbp
  41f471:	push   rdi
  41f472:	push   rsi
  41f473:	push   rbx
  41f474:	sub    rsp,0xa8
  41f47b:	call   0x402760
  41f480:	test   rax,rax
  41f483:	mov    rsi,rax
  41f486:	je     0x41f5c0
  41f48c:	mov    rax,QWORD PTR [rip+0x1971d]        # 0x438bb0
  41f493:	mov    eax,DWORD PTR [rax]
  41f495:	test   eax,eax
  41f497:	jne    0x41f5a0
  41f49d:	lea    rdx,[rip+0x17c73]        # 0x437117
  41f4a4:	lea    rcx,[rip+0x17c75]        # 0x437120
  41f4ab:	call   0x4295a0
  41f4b0:	mov    rbx,rax
  41f4b3:	mov    rax,rsi
  41f4b6:	test   rbx,rbx
  41f4b9:	je     0x41f4f2
  41f4bb:	lea    r8,[rip+0xfffffffffffffefe]        # 0x41f3c0
  41f4c2:	lea    rdx,[rip+0x17ca4]        # 0x43716d
  41f4c9:	mov    r9,rsi
  41f4cc:	mov    rcx,rbx
  41f4cf:	call   0x413ff0
  41f4d4:	xor    edx,edx
  41f4d6:	xor    ecx,ecx
  41f4d8:	call   0x4294d8
  41f4dd:	test   rax,rax
  41f4e0:	je     0x41f4e7
  41f4e2:	cmp    BYTE PTR [rax],0x0
  41f4e5:	jne    0x41f500
  41f4e7:	mov    rcx,rbx
  41f4ea:	call   0x4295b8
  41f4ef:	mov    rax,rsi
  41f4f2:	add    rsp,0xa8
  41f4f9:	pop    rbx
  41f4fa:	pop    rsi
  41f4fb:	pop    rdi
  41f4fc:	pop    rbp
  41f4fd:	ret    
  41f4fe:	xchg   ax,ax
  41f500:	lea    rbp,[rsp+0x20]
  41f505:	mov    r8d,0x80
  41f50b:	mov    rdx,rax
  41f50e:	lea    rdi,[rip+0x17bc8]        # 0x4370dd
  41f515:	mov    rcx,rbp
  41f518:	call   0x426c20
  41f51d:	mov    rcx,rbx
  41f520:	call   0x4294e0
  41f525:	lea    r8,[rip+0xfffffffffffffe94]        # 0x41f3c0
  41f52c:	mov    r9,rsi
  41f52f:	mov    rdx,rbp
  41f532:	mov    rcx,rbx
  41f535:	call   0x413ff0
  41f53a:	test   eax,eax
  41f53c:	mov    r8d,0x40
  41f542:	je     0x41f589
  41f544:	jmp    0x41f4e7
  41f546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f550:	mov    BYTE PTR [rax],0x0
  41f553:	mov    rcx,rbx
  41f556:	add    rdi,0x1
  41f55a:	call   0x4294e0
  41f55f:	lea    r8,[rip+0xfffffffffffffe5a]        # 0x41f3c0
  41f566:	mov    r9,rsi
  41f569:	mov    rdx,rbp
  41f56c:	mov    rcx,rbx
  41f56f:	call   0x413ff0
  41f574:	test   eax,eax
  41f576:	jne    0x41f4e7
  41f57c:	movzx  r8d,BYTE PTR [rdi]
  41f580:	test   r8b,r8b
  41f583:	je     0x41f4e7
  41f589:	movsx  edx,r8b
  41f58d:	mov    rcx,rbp
  41f590:	call   0x429480
  41f595:	test   rax,rax
  41f598:	jne    0x41f550
  41f59a:	add    rdi,0x1
  41f59e:	jmp    0x41f57c
  41f5a0:	lea    r8,[rip+0x17b41]        # 0x4370e8
  41f5a7:	lea    rcx,[rip+0x17b60]        # 0x43710e
  41f5ae:	mov    edx,0x3d5
  41f5b3:	call   0x423fa0
  41f5b8:	jmp    0x41f49d
  41f5bd:	nop    DWORD PTR [rax]
  41f5c0:	xor    eax,eax
  41f5c2:	jmp    0x41f4f2
  41f5c7:	nop
  41f5c8:	nop
  41f5c9:	nop
  41f5ca:	nop
  41f5cb:	nop
  41f5cc:	nop
  41f5cd:	nop
  41f5ce:	nop
  41f5cf:	nop
  41f5d0:	push   rbx
  41f5d1:	sub    rsp,0x20
  41f5d5:	mov    rbx,rdx
  41f5d8:	call   QWORD PTR [rip+0x20486]        # 0x43fa64
  41f5de:	test   rax,rax
  41f5e1:	je     0x41f610
  41f5e3:	mov    rdx,QWORD PTR [rax]
  41f5e6:	mov    QWORD PTR [rbx],rdx
  41f5e9:	mov    rdx,QWORD PTR [rax+0x8]
  41f5ed:	mov    QWORD PTR [rbx+0x8],rdx
  41f5f1:	mov    rdx,QWORD PTR [rax+0x10]
  41f5f5:	mov    QWORD PTR [rbx+0x10],rdx
  41f5f9:	mov    rdx,QWORD PTR [rax+0x18]
  41f5fd:	mov    QWORD PTR [rbx+0x18],rdx
  41f601:	mov    eax,DWORD PTR [rax+0x20]
  41f604:	mov    DWORD PTR [rbx+0x20],eax
  41f607:	mov    rax,rbx
  41f60a:	add    rsp,0x20
  41f60e:	pop    rbx
  41f60f:	ret    
  41f610:	xor    ebx,ebx
  41f612:	mov    rax,rbx
  41f615:	add    rsp,0x20
  41f619:	pop    rbx
  41f61a:	ret    
  41f61b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f620:	push   rsi
  41f621:	push   rbx
  41f622:	sub    rsp,0x58
  41f626:	mov    rsi,rcx
  41f629:	movsxd rbx,edx
  41f62c:	lea    rcx,[rsp+0x40]
  41f631:	call   QWORD PTR [rip+0x202d5]        # 0x43f90c
  41f637:	movzx  eax,WORD PTR [rsp+0x4e]
  41f63c:	movzx  r9d,WORD PTR [rsp+0x48]
  41f642:	lea    edx,[rbx-0x1]
  41f645:	lea    r8,[rip+0x17b34]        # 0x437180
  41f64c:	mov    rcx,rsi
  41f64f:	movsxd rdx,edx
  41f652:	mov    DWORD PTR [rsp+0x30],eax
  41f656:	movzx  eax,WORD PTR [rsp+0x4c]
  41f65b:	mov    DWORD PTR [rsp+0x28],eax
  41f65f:	movzx  eax,WORD PTR [rsp+0x4a]
  41f664:	mov    DWORD PTR [rsp+0x20],eax
  41f668:	call   QWORD PTR [rip+0x2040e]        # 0x43fa7c
  41f66e:	mov    rax,rsi
  41f671:	mov    BYTE PTR [rsi+rbx*1-0x1],0x0
  41f676:	add    rsp,0x58
  41f67a:	pop    rbx
  41f67b:	pop    rsi
  41f67c:	ret    
  41f67d:	nop    DWORD PTR [rax]
  41f680:	push   rdi
  41f681:	push   rbx
  41f682:	sub    rsp,0x78
  41f686:	xor    eax,eax
  41f688:	lea    r8,[rsp+0x40]
  41f68d:	mov    rdx,rcx
  41f690:	mov    ecx,0x6
  41f695:	mov    QWORD PTR [rsp+0x38],0x0
  41f69e:	lea    r9,[rsp+0x38]
  41f6a3:	mov    rdi,r8
  41f6a6:	rep stos QWORD PTR es:[rdi],rax
  41f6a9:	mov    DWORD PTR [rsp+0x44],0x2
  41f6b1:	mov    DWORD PTR [rsp+0x48],0x1
  41f6b9:	mov    DWORD PTR [rsp+0x40],0x1
  41f6c1:	call   QWORD PTR [rip+0x20645]        # 0x43fd0c
  41f6c7:	test   eax,eax
  41f6c9:	jne    0x41f715
  41f6cb:	mov    rcx,QWORD PTR [rsp+0x38]
  41f6d0:	cmp    DWORD PTR [rcx+0x4],0x2
  41f6d4:	jne    0x41f700
  41f6d6:	mov    rdx,QWORD PTR [rcx+0x20]
  41f6da:	test   rdx,rdx
  41f6dd:	je     0x41f700
  41f6df:	movzx  ecx,WORD PTR [rdx+0x2]
  41f6e3:	call   QWORD PTR [rip+0x20673]        # 0x43fd5c
  41f6e9:	mov    rcx,QWORD PTR [rsp+0x38]
  41f6ee:	movzx  ebx,ax
  41f6f1:	call   QWORD PTR [rip+0x2060d]        # 0x43fd04
  41f6f7:	mov    eax,ebx
  41f6f9:	add    rsp,0x78
  41f6fd:	pop    rbx
  41f6fe:	pop    rdi
  41f6ff:	ret    
  41f700:	mov    DWORD PTR [rsp+0x2c],eax
  41f704:	call   QWORD PTR [rip+0x205fa]        # 0x43fd04
  41f70a:	mov    eax,DWORD PTR [rsp+0x2c]
  41f70e:	add    rsp,0x78
  41f712:	pop    rbx
  41f713:	pop    rdi
  41f714:	ret    
  41f715:	xor    eax,eax
  41f717:	add    rsp,0x78
  41f71b:	pop    rbx
  41f71c:	pop    rdi
  41f71d:	ret    
  41f71e:	xchg   ax,ax
  41f720:	push   rsi
  41f721:	push   rbx
  41f722:	sub    rsp,0x148
  41f729:	mov    QWORD PTR [rsp+0x28],0x0
  41f732:	lea    rcx,[rsp+0x28]
  41f737:	call   QWORD PTR [rip+0x2054f]        # 0x43fc8c
  41f73d:	test   eax,eax
  41f73f:	js     0x41f7b0
  41f741:	xor    ecx,ecx
  41f743:	lea    r8,[rsp+0x20]
  41f748:	mov    edx,0x1a
  41f74d:	xor    ebx,ebx
  41f74f:	call   QWORD PTR [rip+0x20547]        # 0x43fc9c
  41f755:	test   eax,eax
  41f757:	js     0x41f780
  41f759:	lea    rsi,[rsp+0x30]
  41f75e:	mov    rcx,QWORD PTR [rsp+0x20]
  41f763:	mov    rdx,rsi
  41f766:	call   QWORD PTR [rip+0x20528]        # 0x43fc94
  41f76c:	test   eax,eax
  41f76e:	jne    0x41f7a0
  41f770:	mov    rcx,QWORD PTR [rsp+0x28]
  41f775:	mov    rdx,QWORD PTR [rsp+0x20]
  41f77a:	mov    rax,QWORD PTR [rcx]
  41f77d:	call   QWORD PTR [rax+0x28]
  41f780:	mov    rcx,QWORD PTR [rsp+0x28]
  41f785:	mov    rax,QWORD PTR [rcx]
  41f788:	call   QWORD PTR [rax+0x10]
  41f78b:	mov    rax,rbx
  41f78e:	add    rsp,0x148
  41f795:	pop    rbx
  41f796:	pop    rsi
  41f797:	ret    
  41f798:	nop    DWORD PTR [rax+rax*1+0x0]
  41f7a0:	mov    rcx,rsi
  41f7a3:	call   QWORD PTR [rip+0x202e3]        # 0x43fa8c
  41f7a9:	mov    rbx,rax
  41f7ac:	jmp    0x41f770
  41f7ae:	xchg   ax,ax
  41f7b0:	xor    ebx,ebx
  41f7b2:	jmp    0x41f78b
  41f7b4:	nop
  41f7b5:	nop
  41f7b6:	nop
  41f7b7:	nop
  41f7b8:	nop
  41f7b9:	nop
  41f7ba:	nop
  41f7bb:	nop
  41f7bc:	nop
  41f7bd:	nop
  41f7be:	nop
  41f7bf:	nop
  41f7c0:	mov    rax,QWORD PTR [rcx]
  41f7c3:	xor    edx,edx
  41f7c5:	mov    r8,QWORD PTR [rax]
  41f7c8:	lea    rcx,[rax+0x8]
  41f7cc:	jmp    0x429518
  41f7d1:	nop    DWORD PTR [rax+rax*1+0x0]
  41f7d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f7e0:	push   rbx
  41f7e1:	sub    rsp,0x20
  41f7e5:	lea    rax,[rip+0x179b4]        # 0x4371a0
  41f7ec:	mov    rbx,rcx
  41f7ef:	mov    rcx,QWORD PTR [rcx]
  41f7f2:	cmp    rcx,rax
  41f7f5:	je     0x41f7fc
  41f7f7:	call   0x429580
  41f7fc:	lea    rax,[rip+0x1799d]        # 0x4371a0
  41f803:	mov    QWORD PTR [rbx],rax
  41f806:	add    rsp,0x20
  41f80a:	pop    rbx
  41f80b:	ret    
  41f80c:	nop    DWORD PTR [rax+0x0]
  41f810:	push   rdi
  41f811:	push   rsi
  41f812:	push   rbx
  41f813:	sub    rsp,0x30
  41f817:	test   r8,r8
  41f81a:	mov    rbx,rcx
  41f81d:	mov    rsi,r8
  41f820:	jne    0x41f844
  41f822:	mov    rcx,QWORD PTR [rcx]
  41f825:	lea    rsi,[rip+0x17974]        # 0x4371a0
  41f82c:	cmp    rcx,rsi
  41f82f:	je     0x41f839
  41f831:	call   0x429580
  41f836:	mov    QWORD PTR [rbx],rsi
  41f839:	mov    rax,rbx
  41f83c:	add    rsp,0x30
  41f840:	pop    rbx
  41f841:	pop    rsi
  41f842:	pop    rdi
  41f843:	ret    
  41f844:	lea    rcx,[r8+0x9]
  41f848:	mov    QWORD PTR [rsp+0x28],rdx
  41f84d:	call   0x429538
  41f852:	test   rax,rax
  41f855:	mov    rdi,rax
  41f858:	je     0x41f895
  41f85a:	mov    rdx,QWORD PTR [rsp+0x28]
  41f85f:	lea    rcx,[rax+0x8]
  41f863:	mov    r8,rsi
  41f866:	call   0x429528
  41f86b:	mov    rcx,QWORD PTR [rbx]
  41f86e:	lea    rax,[rip+0x1792b]        # 0x4371a0
  41f875:	mov    BYTE PTR [rdi+rsi*1+0x8],0x0
  41f87a:	mov    QWORD PTR [rdi],rsi
  41f87d:	cmp    rcx,rax
  41f880:	je     0x41f887
  41f882:	call   0x429580
  41f887:	mov    rax,rbx
  41f88a:	mov    QWORD PTR [rbx],rdi
  41f88d:	add    rsp,0x30
  41f891:	pop    rbx
  41f892:	pop    rsi
  41f893:	pop    rdi
  41f894:	ret    
  41f895:	xor    ebx,ebx
  41f897:	jmp    0x41f839
  41f899:	nop    DWORD PTR [rax+0x0]
  41f8a0:	push   rsi
  41f8a1:	push   rbx
  41f8a2:	sub    rsp,0x28
  41f8a6:	mov    rsi,rcx
  41f8a9:	mov    rbx,rdx
  41f8ac:	mov    rcx,rdx
  41f8af:	call   0x429490
  41f8b4:	mov    rdx,rbx
  41f8b7:	mov    r8,rax
  41f8ba:	mov    rcx,rsi
  41f8bd:	add    rsp,0x28
  41f8c1:	pop    rbx
  41f8c2:	pop    rsi
  41f8c3:	jmp    0x41f810
  41f8c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f8d0:	push   rsi
  41f8d1:	push   rbx
  41f8d2:	sub    rsp,0x28
  41f8d6:	mov    rsi,rdx
  41f8d9:	call   0x41f8a0
  41f8de:	test   rax,rax
  41f8e1:	mov    rbx,rax
  41f8e4:	je     0x41f8ee
  41f8e6:	mov    rcx,rsi
  41f8e9:	call   0x429580
  41f8ee:	mov    rax,rbx
  41f8f1:	add    rsp,0x28
  41f8f5:	pop    rbx
  41f8f6:	pop    rsi
  41f8f7:	ret    
  41f8f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f900:	mov    rax,QWORD PTR [rdx]
  41f903:	mov    r8,QWORD PTR [rax]
  41f906:	lea    rdx,[rax+0x8]
  41f90a:	jmp    0x41f810
  41f90f:	nop
  41f910:	mov    r8,QWORD PTR [rcx]
  41f913:	mov    rax,rcx
  41f916:	lea    rcx,[rip+0x17883]        # 0x4371a0
  41f91d:	cmp    r8,rcx
  41f920:	je     0x41f930
  41f922:	cmp    QWORD PTR [r8],rdx
  41f925:	jb     0x41f930
  41f927:	mov    QWORD PTR [r8],rdx
  41f92a:	mov    BYTE PTR [r8+rdx*1+0x8],0x0
  41f930:	repz ret 
  41f932:	nop    DWORD PTR [rax+0x0]
  41f936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f940:	push   rdi
  41f941:	push   rsi
  41f942:	push   rbx
  41f943:	sub    rsp,0x20
  41f947:	mov    rbx,rcx
  41f94a:	lea    rcx,[rdx+0x9]
  41f94e:	mov    rdi,rdx
  41f951:	call   0x429538
  41f956:	test   rax,rax
  41f959:	mov    rsi,rax
  41f95c:	je     0x41f990
  41f95e:	mov    rcx,QWORD PTR [rbx]
  41f961:	lea    rax,[rip+0x17838]        # 0x4371a0
  41f968:	cmp    rcx,rax
  41f96b:	je     0x41f972
  41f96d:	call   0x429580
  41f972:	mov    rax,rbx
  41f975:	mov    BYTE PTR [rsi+0x8],0x0
  41f979:	mov    QWORD PTR [rsi],rdi
  41f97c:	mov    QWORD PTR [rbx],rsi
  41f97f:	add    rsp,0x20
  41f983:	pop    rbx
  41f984:	pop    rsi
  41f985:	pop    rdi
  41f986:	ret    
  41f987:	nop    WORD PTR [rax+rax*1+0x0]
  41f990:	xor    eax,eax
  41f992:	add    rsp,0x20
  41f996:	pop    rbx
  41f997:	pop    rsi
  41f998:	pop    rdi
  41f999:	ret    
  41f99a:	nop
  41f99b:	nop
  41f99c:	nop
  41f99d:	nop
  41f99e:	nop
  41f99f:	nop
  41f9a0:	xor    eax,eax
  41f9a2:	mov    DWORD PTR [rdx],0x0
  41f9a8:	mov    WORD PTR [rdx+0x4],ax
  41f9ac:	ret    
  41f9ad:	nop
  41f9ae:	nop
  41f9af:	nop
  41f9b0:	push   rsi
  41f9b1:	push   rbx
  41f9b2:	sub    rsp,0x38
  41f9b6:	mov    eax,DWORD PTR [rcx+0x10]
  41f9b9:	mov    rsi,rcx
  41f9bc:	test   eax,eax
  41f9be:	je     0x41f9f4
  41f9c0:	test   eax,eax
  41f9c2:	js     0x41fa22
  41f9c4:	movsxd r9,eax
  41f9c7:	mov    rbx,r8
  41f9ca:	mov    rcx,QWORD PTR [rsi+0x8]
  41f9ce:	cmp    r9,r8
  41f9d1:	cmovbe rbx,r9
  41f9d5:	sub    eax,ebx
  41f9d7:	mov    r8,rbx
  41f9da:	mov    DWORD PTR [rsi+0x10],eax
  41f9dd:	call   0x40cf10
  41f9e2:	test   rax,rax
  41f9e5:	mov    eax,0xffffffff
  41f9ea:	cmovne eax,ebx
  41f9ed:	add    rsp,0x38
  41f9f1:	pop    rbx
  41f9f2:	pop    rsi
  41f9f3:	ret    
  41f9f4:	mov    rcx,QWORD PTR [rcx+0x8]
  41f9f8:	mov    QWORD PTR [rsp+0x28],r8
  41f9fd:	mov    QWORD PTR [rsp+0x20],rdx
  41fa02:	call   0x40cfd0
  41fa07:	mov    ecx,0xffffffff
  41fa0c:	test   eax,eax
  41fa0e:	mov    r8,QWORD PTR [rsp+0x28]
  41fa13:	cmovle eax,ecx
  41fa16:	mov    rdx,QWORD PTR [rsp+0x20]
  41fa1b:	test   eax,eax
  41fa1d:	mov    DWORD PTR [rsi+0x10],eax
  41fa20:	jns    0x41f9c4
  41fa22:	xor    eax,eax
  41fa24:	add    rsp,0x38
  41fa28:	pop    rbx
  41fa29:	pop    rsi
  41fa2a:	ret    
  41fa2b:	nop    DWORD PTR [rax+rax*1+0x0]
  41fa30:	movzx  edx,BYTE PTR [rcx]
  41fa33:	mov    rax,QWORD PTR [rip+0x19116]        # 0x438b50
  41fa3a:	cmp    BYTE PTR [rcx+0x2],0x0
  41fa3e:	mov    edx,DWORD PTR [rax+rdx*4]
  41fa41:	sete   BYTE PTR [rcx+0x2]
  41fa45:	add    rcx,0x3
  41fa49:	sub    edx,0x1
  41fa4c:	jmp    0x40a8a0
  41fa51:	nop    DWORD PTR [rax+rax*1+0x0]
  41fa56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fa60:	push   rbp
  41fa61:	push   rdi
  41fa62:	push   rsi
  41fa63:	push   rbx
  41fa64:	sub    rsp,0x68
  41fa68:	mov    rdi,r8
  41fa6b:	lea    rbx,[rsp+0x30]
  41fa70:	mov    r8,QWORD PTR [rsp+0xb0]
  41fa78:	mov    rsi,rcx
  41fa7b:	mov    rbp,rdx
  41fa7e:	mov    rdx,r9
  41fa81:	mov    rcx,rbx
  41fa84:	call   0x425090
  41fa89:	test   eax,eax
  41fa8b:	js     0x41fac1
  41fa8d:	test   BYTE PTR [rsi+0xa0],0x2
  41fa94:	je     0x41fad0
  41fa96:	mov    rdx,QWORD PTR [rbp+0x0]
  41fa9a:	test   rdx,rdx
  41fa9d:	je     0x41fad0
  41fa9f:	mov    r9,QWORD PTR [rsp+0xb8]
  41faa7:	mov    QWORD PTR [rsp+0x20],rbx
  41faac:	mov    r8d,0x1
  41fab2:	mov    rcx,rsi
  41fab5:	call   0x424c10
  41faba:	mov    rdx,QWORD PTR [rsp+0x58]
  41fabf:	mov    DWORD PTR [rdi],edx
  41fac1:	add    rsp,0x68
  41fac5:	pop    rbx
  41fac6:	pop    rsi
  41fac7:	pop    rdi
  41fac8:	pop    rbp
  41fac9:	ret    
  41faca:	nop    WORD PTR [rax+rax*1+0x0]
  41fad0:	mov    rdx,QWORD PTR [rsp+0xb8]
  41fad8:	mov    r8,rbx
  41fadb:	mov    rcx,rsi
  41fade:	call   0x424f60
  41fae3:	jmp    0x41faba
  41fae5:	nop
  41fae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41faf0:	cmp    ecx,0xaf
  41faf6:	je     0x41fb50
  41faf8:	ja     0x41fb20
  41fafa:	cmp    ecx,0xa5
  41fb00:	mov    eax,0x25
  41fb05:	je     0x41fb1e
  41fb07:	jbe    0x41fb70
  41fb09:	cmp    ecx,0xa7
  41fb0f:	je     0x41fb60
  41fb11:	cmp    ecx,0xad
  41fb17:	mov    eax,0x2d
  41fb1c:	jne    0x41fb37
  41fb1e:	repz ret 
  41fb20:	cmp    ecx,0xe1
  41fb26:	je     0x41fb80
  41fb28:	ja     0x41fb40
  41fb2a:	cmp    ecx,0xbf
  41fb30:	mov    eax,0x7f
  41fb35:	je     0x41fb1e
  41fb37:	mov    eax,ecx
  41fb39:	ret    
  41fb3a:	nop    WORD PTR [rax+rax*1+0x0]
  41fb40:	cmp    ecx,0xe7
  41fb46:	je     0x41fb60
  41fb48:	cmp    ecx,0xef
  41fb4e:	jne    0x41fb37
  41fb50:	mov    eax,0x2f
  41fb55:	ret    
  41fb56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fb60:	mov    eax,0x27
  41fb65:	ret    
  41fb66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fb70:	cmp    ecx,0x63
  41fb73:	mov    al,0x23
  41fb75:	jne    0x41fb37
  41fb77:	repz ret 
  41fb79:	nop    DWORD PTR [rax+0x0]
  41fb80:	sub    edx,0x22
  41fb83:	cmp    edx,0x2
  41fb86:	sbb    eax,eax
  41fb88:	and    al,0x42
  41fb8a:	add    eax,0xe1
  41fb8f:	ret    
  41fb90:	push   rdi
  41fb91:	push   rsi
  41fb92:	push   rbx
  41fb93:	sub    rsp,0x20
  41fb97:	cmp    BYTE PTR [rdx+0x18],0x8
  41fb9b:	mov    rbx,rcx
  41fb9e:	mov    rdi,rdx
  41fba1:	ja     0x41fbdd
  41fba3:	movzx  edx,BYTE PTR [rdx+0x18]
  41fba7:	lea    rax,[rip+0x17612]        # 0x4371c0
  41fbae:	movsxd rdx,DWORD PTR [rax+rdx*4]
  41fbb2:	add    rax,rdx
  41fbb5:	jmp    rax
  41fbb7:	nop    WORD PTR [rax+rax*1+0x0]
  41fbc0:	mov    eax,DWORD PTR [rdi+0x14]
  41fbc3:	xor    edx,edx
  41fbc5:	sub    eax,0x24
  41fbc8:	cmp    eax,0x9b
  41fbcd:	ja     0x41fbda
  41fbcf:	lea    rdx,[rip+0x17baa]        # 0x437780
  41fbd6:	movsx  edx,BYTE PTR [rdx+rax*1]
  41fbda:	mov    DWORD PTR [rdi+0x10],edx
  41fbdd:	movzx  edx,WORD PTR [rbx]
  41fbe0:	cmp    dx,0x700
  41fbe5:	ja     0x41fc20
  41fbe7:	mov    eax,DWORD PTR [rdi+0x1c]
  41fbea:	lea    ecx,[rax-0x22]
  41fbed:	cmp    ecx,0x1
  41fbf0:	jbe    0x41fcf5
  41fbf6:	cmp    eax,0x63
  41fbf9:	je     0x41fcf5
  41fbff:	cmp    dx,0x701
  41fc04:	jbe    0x41fc11
  41fc06:	cmp    eax,0xf1
  41fc0b:	je     0x41fd50
  41fc11:	xor    eax,eax
  41fc13:	add    rsp,0x20
  41fc17:	pop    rbx
  41fc18:	pop    rsi
  41fc19:	pop    rdi
  41fc1a:	ret    
  41fc1b:	nop    DWORD PTR [rax+rax*1+0x0]
  41fc20:	mov    ecx,DWORD PTR [rdi+0x1c]
  41fc23:	lea    r8,[rip+0x17c16]        # 0x437840
  41fc2a:	test   BYTE PTR [r8+rcx*1],0x8
  41fc2f:	mov    rax,rcx
  41fc32:	jne    0x41fd20
  41fc38:	lea    ecx,[rax-0x22]
  41fc3b:	cmp    ecx,0x1
  41fc3e:	jbe    0x41fc45
  41fc40:	cmp    eax,0x63
  41fc43:	jne    0x41fbff
  41fc45:	cmp    dx,0x701
  41fc4a:	jbe    0x41fcf5
  41fc50:	mov    rcx,rbx
  41fc53:	add    rdi,0x30
  41fc57:	call   0x40ce80
  41fc5c:	test   al,al
  41fc5e:	mov    esi,eax
  41fc60:	je     0x41fc11
  41fc62:	mov    rcx,rbx
  41fc65:	call   0x40cfb0
  41fc6a:	mov    rdx,rdi
  41fc6d:	movzx  r8d,ax
  41fc71:	mov    rcx,rbx
  41fc74:	call   0x40d1e0
  41fc79:	sub    sil,0x1
  41fc7d:	jne    0x41fc62
  41fc7f:	xor    eax,eax
  41fc81:	add    rsp,0x20
  41fc85:	pop    rbx
  41fc86:	pop    rsi
  41fc87:	pop    rdi
  41fc88:	ret    
  41fc89:	nop    DWORD PTR [rax+0x0]
  41fc90:	mov    DWORD PTR [rdi+0x10],0x7fffffff
  41fc97:	movzx  edx,WORD PTR [rcx]
  41fc9a:	jmp    0x41fbe0
  41fc9f:	nop
  41fca0:	call   0x40ce80
  41fca5:	movzx  eax,al
  41fca8:	movzx  edx,WORD PTR [rbx]
  41fcab:	mov    DWORD PTR [rdi+0x10],eax
  41fcae:	jmp    0x41fbe0
  41fcb3:	call   0x40cfb0
  41fcb8:	cwde   
  41fcb9:	movzx  edx,WORD PTR [rbx]
  41fcbc:	test   eax,eax
  41fcbe:	mov    DWORD PTR [rdi+0x10],eax
  41fcc1:	jns    0x41fbe0
  41fcc7:	cmp    dx,0x701
  41fccc:	jbe    0x41fbe0
  41fcd2:	mov    BYTE PTR [rdi+0x18],0x8
  41fcd6:	mov    DWORD PTR [rdi+0x10],0x3fffffff
  41fcdd:	movzx  edx,WORD PTR [rbx]
  41fce0:	jmp    0x41fbe0
  41fce5:	call   0x40cfd0
  41fcea:	movzx  edx,WORD PTR [rbx]
  41fced:	mov    DWORD PTR [rdi+0x10],eax
  41fcf0:	jmp    0x41fbe0
  41fcf5:	mov    rcx,rbx
  41fcf8:	call   0x40cfb0
  41fcfd:	lea    rdx,[rdi+0x30]
  41fd01:	movzx  r8d,ax
  41fd05:	mov    rcx,rbx
  41fd08:	call   0x40d1e0
  41fd0d:	xor    eax,eax
  41fd0f:	add    rsp,0x20
  41fd13:	pop    rbx
  41fd14:	pop    rsi
  41fd15:	pop    rdi
  41fd16:	ret    
  41fd17:	nop    WORD PTR [rax+rax*1+0x0]
  41fd20:	lea    rsi,[rdi+0x59]
  41fd24:	mov    r8d,0x5
  41fd2a:	mov    rcx,rbx
  41fd2d:	mov    rdx,rsi
  41fd30:	call   0x40cf10
  41fd35:	mov    rdx,rsi
  41fd38:	mov    rcx,rbx
  41fd3b:	call   0x41f360
  41fd40:	movzx  edx,WORD PTR [rbx]
  41fd43:	mov    QWORD PTR [rdi+0x28],rax
  41fd47:	mov    eax,DWORD PTR [rdi+0x1c]
  41fd4a:	jmp    0x41fc38
  41fd4f:	nop
  41fd50:	mov    rcx,rbx
  41fd53:	call   0x40ce80
  41fd58:	test   al,al
  41fd5a:	je     0x41fc11
  41fd60:	mov    rcx,rbx
  41fd63:	call   0x40ce80
  41fd68:	xor    r9d,r9d
  41fd6b:	xor    r8d,r8d
  41fd6e:	movzx  edx,al
  41fd71:	mov    rcx,rbx
  41fd74:	call   0x40d020
  41fd79:	mov    rcx,rbx
  41fd7c:	call   0x40ce80
  41fd81:	xor    r9d,r9d
  41fd84:	xor    r8d,r8d
  41fd87:	movzx  edx,al
  41fd8a:	mov    rcx,rbx
  41fd8d:	call   0x40d020
  41fd92:	mov    rcx,rbx
  41fd95:	call   0x40cfb0
  41fd9a:	xor    r9d,r9d
  41fd9d:	movzx  edx,ax
  41fda0:	xor    r8d,r8d
  41fda3:	mov    rcx,rbx
  41fda6:	call   0x40d020
  41fdab:	jmp    0x41fc11
  41fdb0:	cmp    BYTE PTR [rcx+0x18],0x2
  41fdb4:	mov    eax,0x28
  41fdb9:	jbe    0x41fdc0
  41fdbb:	repz ret 
  41fdbd:	nop    DWORD PTR [rax]
  41fdc0:	mov    eax,DWORD PTR [rcx+0x10]
  41fdc3:	ret    
  41fdc4:	xchg   ax,ax
  41fdc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fdd0:	push   r12
  41fdd2:	push   rbp
  41fdd3:	push   rdi
  41fdd4:	push   rsi
  41fdd5:	push   rbx
  41fdd6:	sub    rsp,0x60
  41fdda:	mov    rbp,QWORD PTR [rip+0x18dcf]        # 0x438bb0
  41fde1:	mov    rdi,rcx
  41fde4:	mov    rbx,rdx
  41fde7:	mov    ecx,DWORD PTR [rbp+0x0]
  41fdea:	test   ecx,ecx
  41fdec:	jne    0x420135
  41fdf2:	cmp    BYTE PTR [rbx+0x18],0x8
  41fdf6:	ja     0x41fe24
  41fdf8:	movzx  edx,BYTE PTR [rbx+0x18]
  41fdfc:	lea    rax,[rip+0x17451]        # 0x437254
  41fe03:	movsxd rdx,DWORD PTR [rax+rdx*4]
  41fe07:	add    rax,rdx
  41fe0a:	jmp    rax
  41fe0c:	nop    DWORD PTR [rax+0x0]
  41fe10:	mov    rcx,rdi
  41fe13:	call   0x40ce80
  41fe18:	cmp    al,0x10
  41fe1a:	mov    rsi,QWORD PTR [rbx+0x48]
  41fe1e:	je     0x4201c0
  41fe24:	mov    esi,0xffffffff
  41fe29:	test   rdi,rdi
  41fe2c:	je     0x420270
  41fe32:	cmp    DWORD PTR [rdi+0x148],0x5
  41fe39:	je     0x420270
  41fe3f:	mov    edx,DWORD PTR [rbp+0x0]
  41fe42:	test   edx,edx
  41fe44:	jne    0x420190
  41fe4a:	test   esi,esi
  41fe4c:	js     0x4200f0
  41fe52:	cmp    BYTE PTR [rbx+0x18],0x2
  41fe56:	mov    rbp,QWORD PTR [rbx+0x48]
  41fe5a:	jbe    0x41fe90
  41fe5c:	test   esi,esi
  41fe5e:	jne    0x41ff41
  41fe64:	mov    rcx,QWORD PTR [rbp+0x0]
  41fe68:	mov    DWORD PTR [rbx+0x64],0x0
  41fe6f:	test   rcx,rcx
  41fe72:	je     0x41fe81
  41fe74:	call   0x429580
  41fe79:	mov    QWORD PTR [rbp+0x0],0x0
  41fe81:	xor    edi,edi
  41fe83:	mov    eax,edi
  41fe85:	add    rsp,0x60
  41fe89:	pop    rbx
  41fe8a:	pop    rsi
  41fe8b:	pop    rdi
  41fe8c:	pop    rbp
  41fe8d:	pop    r12
  41fe8f:	ret    
  41fe90:	test   BYTE PTR [rdi+0xa0],0x2
  41fe97:	je     0x41ff00
  41fe99:	cmp    QWORD PTR [rbx+0x28],0x0
  41fe9e:	je     0x41ff00
  41fea0:	mov    r9,rbx
  41fea3:	movsxd r8,esi
  41fea6:	mov    rdx,rbp
  41fea9:	mov    rcx,rdi
  41feac:	call   0x40d0d0
  41feb1:	test   eax,eax
  41feb3:	js     0x420270
  41feb9:	mov    eax,DWORD PTR [rbx+0x14]
  41febc:	cmp    eax,0xad
  41fec1:	je     0x420160
  41fec7:	jbe    0x420110
  41fecd:	cmp    eax,0xaf
  41fed2:	je     0x42011e
  41fed8:	cmp    eax,0xe1
  41fedd:	jne    0x41fe81
  41fedf:	xor    edi,edi
  41fee1:	cmp    DWORD PTR [rbx+0x8],0x22
  41fee5:	je     0x42011e
  41feeb:	nop    DWORD PTR [rax+rax*1+0x0]
  41fef0:	mov    eax,edi
  41fef2:	add    rsp,0x60
  41fef6:	pop    rbx
  41fef7:	pop    rsi
  41fef8:	pop    rdi
  41fef9:	pop    rbp
  41fefa:	pop    r12
  41fefc:	ret    
  41fefd:	nop    DWORD PTR [rax]
  41ff00:	mov    r12d,DWORD PTR [rbx+0x10]
  41ff04:	cmp    r12d,esi
  41ff07:	jge    0x4200c5
  41ff0d:	movsxd r8,r12d
  41ff10:	mov    rdx,rbp
  41ff13:	mov    rcx,rdi
  41ff16:	sub    esi,r12d
  41ff19:	call   0x40cf10
  41ff1e:	test   rax,rax
  41ff21:	je     0x420270
  41ff27:	test   esi,esi
  41ff29:	jle    0x4200df
  41ff2f:	movsxd r8,esi
  41ff32:	xor    edx,edx
  41ff34:	mov    rcx,rdi
  41ff37:	call   0x40cf10
  41ff3c:	jmp    0x4200df
  41ff41:	mov    eax,DWORD PTR [rbx+0x64]
  41ff44:	mov    r12d,0x0
  41ff4a:	movsxd r8,esi
  41ff4d:	test   eax,eax
  41ff4f:	cmovns r12d,DWORD PTR [rbx+0x64]
  41ff54:	movsxd r12,r12d
  41ff57:	cmp    r12,r8
  41ff5a:	jb     0x420220
  41ff60:	lea    rsi,[rsp+0x40]
  41ff65:	mov    rdx,rdi
  41ff68:	mov    rcx,rsi
  41ff6b:	call   0x424fb0
  41ff70:	lea    rdx,[rbx+0x28]
  41ff74:	lea    r8,[rbx+0x64]
  41ff78:	mov    QWORD PTR [rsp+0x28],rsi
  41ff7d:	mov    QWORD PTR [rsp+0x20],r12
  41ff82:	mov    r9,rbp
  41ff85:	mov    rcx,rdi
  41ff88:	call   0x41fa60
  41ff8d:	test   eax,eax
  41ff8f:	mov    ebx,eax
  41ff91:	jns    0x41fe81
  41ff97:	mov    r8,QWORD PTR [rsp+0x48]
  41ff9c:	test   r8,r8
  41ff9f:	je     0x41fe81
  41ffa5:	mov    rcx,rdi
  41ffa8:	xor    edx,edx
  41ffaa:	mov    edi,ebx
  41ffac:	call   0x40cf10
  41ffb1:	jmp    0x41fef0
  41ffb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ffc0:	mov    eax,DWORD PTR [rbx+0x14]
  41ffc3:	xor    esi,esi
  41ffc5:	sub    eax,0x24
  41ffc8:	cmp    eax,0x9b
  41ffcd:	ja     0x41fe29
  41ffd3:	lea    rdx,[rip+0x177a6]        # 0x437780
  41ffda:	movsx  esi,BYTE PTR [rdx+rax*1]
  41ffde:	jmp    0x41fe29
  41ffe3:	mov    rcx,rdi
  41ffe6:	call   0x40ce80
  41ffeb:	movzx  esi,al
  41ffee:	test   esi,esi
  41fff0:	je     0x41fe24
  41fff6:	jmp    0x41fe29
  41fffb:	nop    DWORD PTR [rax+rax*1+0x0]
  420000:	mov    rcx,rdi
  420003:	call   0x40cfb0
  420008:	movsx  esi,ax
  42000b:	jmp    0x41fe29
  420010:	mov    rcx,rdi
  420013:	call   0x40cfd0
  420018:	test   eax,eax
  42001a:	mov    esi,eax
  42001c:	je     0x41fe24
  420022:	jmp    0x41fe29
  420027:	nop    WORD PTR [rax+rax*1+0x0]
  420030:	mov    rcx,rdi
  420033:	mov    rbp,QWORD PTR [rbx+0x48]
  420037:	call   0x40cff0
  42003c:	cmp    rax,0xffffffffffffffff
  420040:	mov    rsi,rax
  420043:	je     0x420260
  420049:	test   rax,rax
  42004c:	jle    0x4201b0
  420052:	mov    rcx,QWORD PTR [rbp+0x0]
  420056:	call   0x429580
  42005b:	mov    edx,DWORD PTR [rbx+0x1c]
  42005e:	lea    rcx,[rip+0x177db]        # 0x437840
  420065:	mov    rax,rsi
  420068:	shr    rax,1
  42006b:	mov    QWORD PTR [rbp+0x0],0x0
  420073:	test   BYTE PTR [rcx+rdx*1],0x20
  420077:	cmovne rsi,rax
  42007b:	lea    rax,[rip+0xfffffffffffff92e]        # 0x41f9b0
  420082:	lea    rdx,[rbx+0x28]
  420086:	lea    r8,[rbx+0x64]
  42008a:	mov    rcx,rdi
  42008d:	mov    QWORD PTR [rsp+0x20],rsi
  420092:	mov    r9,rbp
  420095:	mov    QWORD PTR [rsp+0x40],rax
  42009a:	lea    rax,[rsp+0x40]
  42009f:	mov    QWORD PTR [rsp+0x48],rdi
  4200a4:	mov    DWORD PTR [rsp+0x50],0x0
  4200ac:	mov    QWORD PTR [rsp+0x28],rax
  4200b1:	call   0x41fa60
  4200b6:	mov    edi,eax
  4200b8:	mov    eax,edi
  4200ba:	add    rsp,0x60
  4200be:	pop    rbx
  4200bf:	pop    rsi
  4200c0:	pop    rdi
  4200c1:	pop    rbp
  4200c2:	pop    r12
  4200c4:	ret    
  4200c5:	movsxd r8,esi
  4200c8:	mov    rdx,rbp
  4200cb:	mov    rcx,rdi
  4200ce:	call   0x40cf10
  4200d3:	test   rax,rax
  4200d6:	je     0x420270
  4200dc:	mov    r12d,esi
  4200df:	mov    DWORD PTR [rbx+0x64],r12d
  4200e3:	mov    esi,r12d
  4200e6:	jmp    0x41feb9
  4200eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4200f0:	xor    edi,edi
  4200f2:	mov    DWORD PTR [rbx+0x64],0xffffffff
  4200f9:	mov    eax,edi
  4200fb:	add    rsp,0x60
  4200ff:	pop    rbx
  420100:	pop    rsi
  420101:	pop    rdi
  420102:	pop    rbp
  420103:	pop    r12
  420105:	ret    
  420106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420110:	cmp    eax,0x2d
  420113:	je     0x420160
  420115:	cmp    eax,0x2f
  420118:	jne    0x41fe81
  42011e:	mov    r8d,DWORD PTR [rbx+0x20]
  420122:	xor    edi,edi
  420124:	cmp    DWORD PTR [rbx+0x10],r8d
  420128:	jne    0x41fef0
  42012e:	mov    edx,0x20
  420133:	jmp    0x420166
  420135:	movzx  eax,BYTE PTR [rdx+0x18]
  420139:	lea    r8,[rip+0x170a8]        # 0x4371e8
  420140:	lea    rcx,[rip+0x170c8]        # 0x43720f
  420147:	mov    DWORD PTR [rsp+0x20],eax
  42014b:	mov    r9d,DWORD PTR [rdx+0x14]
  42014f:	mov    edx,0x2be5
  420154:	call   0x423fa0
  420159:	jmp    0x41fdf2
  42015e:	xchg   ax,ax
  420160:	mov    r8d,DWORD PTR [rbx+0x10]
  420164:	xor    edx,edx
  420166:	xor    edi,edi
  420168:	cmp    esi,r8d
  42016b:	jge    0x41fef0
  420171:	sub    r8d,esi
  420174:	movsxd rcx,esi
  420177:	add    rcx,rbp
  42017a:	movsxd r8,r8d
  42017d:	call   0x429518
  420182:	jmp    0x41fef0
  420187:	nop    WORD PTR [rax+rax*1+0x0]
  420190:	lea    r8,[rip+0x17091]        # 0x437228
  420197:	lea    rcx,[rip+0x17071]        # 0x43720f
  42019e:	mov    r9d,esi
  4201a1:	mov    edx,0x2ea5
  4201a6:	call   0x423fa0
  4201ab:	jmp    0x41fe4a
  4201b0:	xor    esi,esi
  4201b2:	jmp    0x42007b
  4201b7:	nop    WORD PTR [rax+rax*1+0x0]
  4201c0:	lea    r12,[rsi+0x8]
  4201c4:	mov    r8d,0x10
  4201ca:	mov    rcx,rdi
  4201cd:	mov    rdx,r12
  4201d0:	call   0x40cf10
  4201d5:	lea    rdx,[rsi+0x18]
  4201d9:	mov    r8d,0x8
  4201df:	mov    rcx,rdi
  4201e2:	call   0x40cf10
  4201e7:	mov    BYTE PTR [rsi+0x20],0x1
  4201eb:	cmp    WORD PTR [rdi],0x701
  4201f0:	jbe    0x42020f
  4201f2:	lea    rdx,[rip+0x1701d]        # 0x437216
  4201f9:	mov    r8d,0x10
  4201ff:	mov    rcx,r12
  420202:	call   0x429530
  420207:	test   eax,eax
  420209:	jne    0x42020f
  42020b:	mov    BYTE PTR [rsi+0x20],0x0
  42020f:	mov    rcx,rdi
  420212:	call   0x40cfd0
  420217:	mov    esi,eax
  420219:	jmp    0x41fe32
  42021e:	xchg   ax,ax
  420220:	mov    rcx,QWORD PTR [rbp+0x0]
  420224:	mov    QWORD PTR [rsp+0x38],r8
  420229:	call   0x429580
  42022e:	mov    r8,QWORD PTR [rsp+0x38]
  420233:	mov    eax,DWORD PTR [rbx+0x1c]
  420236:	lea    rdx,[rip+0x17603]        # 0x437840
  42023d:	mov    QWORD PTR [rbp+0x0],0x0
  420245:	mov    r12,r8
  420248:	shr    r12,1
  42024b:	test   BYTE PTR [rdx+rax*1],0x20
  42024f:	cmove  r12,r8
  420253:	jmp    0x41ff60
  420258:	nop    DWORD PTR [rax+rax*1+0x0]
  420260:	mov    DWORD PTR [rbx+0x64],eax
  420263:	xor    edi,edi
  420265:	jmp    0x41fef0
  42026a:	nop    WORD PTR [rax+rax*1+0x0]
  420270:	mov    edi,0xffffffff
  420275:	jmp    0x41fef0
  42027a:	nop    WORD PTR [rax+rax*1+0x0]
  420280:	push   rsi
  420281:	push   rbx
  420282:	sub    rsp,0x28
  420286:	mov    rbx,rdx
  420289:	mov    rsi,rcx
  42028c:	call   0x4183d0
  420291:	cmp    BYTE PTR [rbx+0x18],0x8
  420295:	ja     0x4202bd
  420297:	movzx  edx,BYTE PTR [rbx+0x18]
  42029b:	lea    r8,[rip+0x16fd6]        # 0x437278
  4202a2:	movsxd rdx,DWORD PTR [r8+rdx*4]
  4202a6:	add    r8,rdx
  4202a9:	jmp    r8
  4202ac:	nop    DWORD PTR [rax+0x0]
  4202b0:	mov    edx,0xffffffff
  4202b5:	mov    rcx,rsi
  4202b8:	call   0x40d4d0
  4202bd:	movzx  eax,WORD PTR [rsi]
  4202c0:	cmp    ax,0x500
  4202c4:	je     0x420313
  4202c6:	cmp    ax,0x700
  4202ca:	jbe    0x4202dc
  4202cc:	mov    eax,DWORD PTR [rbx+0x1c]
  4202cf:	lea    rdx,[rip+0x1756a]        # 0x437840
  4202d6:	test   BYTE PTR [rdx+rax*1],0x8
  4202da:	jne    0x4202e5
  4202dc:	xor    eax,eax
  4202de:	add    rsp,0x28
  4202e2:	pop    rbx
  4202e3:	pop    rsi
  4202e4:	ret    
  4202e5:	lea    rdx,[rsi+0x70]
  4202e9:	mov    r8d,0x5
  4202ef:	mov    rcx,rsi
  4202f2:	call   0x40d260
  4202f7:	xor    eax,eax
  4202f9:	add    rsp,0x28
  4202fd:	pop    rbx
  4202fe:	pop    rsi
  4202ff:	ret    
  420300:	mov    edx,eax
  420302:	mov    rcx,rsi
  420305:	call   0x40d490
  42030a:	movzx  eax,WORD PTR [rsi]
  42030d:	cmp    ax,0x500
  420311:	jne    0x4202c6
  420313:	mov    eax,DWORD PTR [rbx+0x1c]
  420316:	sub    eax,0x22
  420319:	cmp    eax,0x1
  42031c:	ja     0x4202dc
  42031e:	xor    edx,edx
  420320:	mov    rcx,rsi
  420323:	call   0x40d4d0
  420328:	movzx  eax,WORD PTR [rsi]
  42032b:	jmp    0x4202c6
  42032d:	nop    DWORD PTR [rax]
  420330:	movsx  edx,ax
  420333:	mov    rcx,rsi
  420336:	call   0x40d4d0
  42033b:	jmp    0x4202bd
  42033d:	nop    DWORD PTR [rax]
  420340:	movzx  edx,al
  420343:	mov    rcx,rsi
  420346:	call   0x40d520
  42034b:	jmp    0x4202bd
  420350:	movzx  r8d,BYTE PTR [rdx+0x18]
  420355:	mov    eax,0x4
  42035a:	cmp    r8b,0x5
  42035e:	je     0x420372
  420360:	movzx  eax,r8b
  420364:	cmp    r8b,0x8
  420368:	mov    r8d,0x2
  42036e:	cmove  eax,r8d
  420372:	movzx  ecx,WORD PTR [rcx]
  420375:	cmp    cx,0x500
  42037a:	je     0x4203a0
  42037c:	cmp    cx,0x700
  420381:	jbe    0x420398
  420383:	mov    ecx,DWORD PTR [rdx+0x1c]
  420386:	lea    r8,[rip+0x174b3]        # 0x437840
  42038d:	lea    edx,[rax+0x5]
  420390:	test   BYTE PTR [r8+rcx*1],0x8
  420395:	cmovne eax,edx
  420398:	repz ret 
  42039a:	nop    WORD PTR [rax+rax*1+0x0]
  4203a0:	mov    edx,DWORD PTR [rdx+0x1c]
  4203a3:	lea    ecx,[rax+0x2]
  4203a6:	sub    edx,0x22
  4203a9:	cmp    edx,0x1
  4203ac:	cmovbe eax,ecx
  4203af:	ret    
  4203b0:	push   r15
  4203b2:	push   r14
  4203b4:	push   r13
  4203b6:	push   r12
  4203b8:	push   rbp
  4203b9:	push   rdi
  4203ba:	push   rsi
  4203bb:	push   rbx
  4203bc:	sub    rsp,0x58
  4203c0:	mov    rax,QWORD PTR [rip+0x187e9]        # 0x438bb0
  4203c7:	mov    rsi,rcx
  4203ca:	mov    rbx,rdx
  4203cd:	mov    r14d,r8d
  4203d0:	mov    ecx,DWORD PTR [rax]
  4203d2:	test   ecx,ecx
  4203d4:	jne    0x420455
  4203d6:	mov    r13d,DWORD PTR [rdx+0x64]
  4203da:	test   r13d,r13d
  4203dd:	js     0x4204a3
  4203e3:	mov    rdx,rbx
  4203e6:	mov    rcx,rsi
  4203e9:	xor    ebp,ebp
  4203eb:	call   0x4183d0
  4203f0:	movzx  r9d,BYTE PTR [rbx+0x18]
  4203f5:	movsxd rdi,r13d
  4203f8:	mov    r11,rax
  4203fb:	mov    r12,QWORD PTR [rbx+0x48]
  4203ff:	cmp    r9b,0x2
  420403:	jbe    0x42040c
  420405:	mov    rbp,r12
  420408:	mov    r12,QWORD PTR [r12]
  42040c:	test   r14d,r14d
  42040f:	je     0x4204e0
  420415:	mov    r13,r12
  420418:	xor    r15d,r15d
  42041b:	cmp    WORD PTR [rsi],0x6ff
  420420:	jbe    0x420513
  420426:	mov    rax,QWORD PTR [rip+0x18783]        # 0x438bb0
  42042d:	mov    eax,DWORD PTR [rax]
  42042f:	test   eax,eax
  420431:	jne    0x420810
  420437:	cmp    r9b,0x8
  42043b:	ja     0x420560
  420441:	lea    rdx,[rip+0x16ee4]        # 0x43732c
  420448:	movzx  eax,r9b
  42044c:	movsxd rax,DWORD PTR [rdx+rax*4]
  420450:	add    rdx,rax
  420453:	jmp    rdx
  420455:	mov    r9d,DWORD PTR [rdx+0x64]
  420459:	lea    r8,[rip+0x16e40]        # 0x4372a0
  420460:	lea    rcx,[rip+0x16da8]        # 0x43720f
  420467:	mov    edx,0x3ad5
  42046c:	call   0x423fa0
  420471:	mov    r13d,DWORD PTR [rbx+0x64]
  420475:	test   r13d,r13d
  420478:	jns    0x4203e3
  42047e:	mov    rax,QWORD PTR [rip+0x1872b]        # 0x438bb0
  420485:	mov    edx,DWORD PTR [rax]
  420487:	test   edx,edx
  420489:	je     0x4204a3
  42048b:	lea    r8,[rip+0x16e2d]        # 0x4372bf
  420492:	lea    rcx,[rip+0x16d76]        # 0x43720f
  420499:	mov    edx,0x3b15
  42049e:	call   0x423fa0
  4204a3:	movzx  eax,BYTE PTR [rbx+0x18]
  4204a7:	cmp    al,0x4
  4204a9:	je     0x420670
  4204af:	jbe    0x420650
  4204b5:	cmp    al,0x5
  4204b7:	je     0x4205f0
  4204bd:	cmp    al,0x8
  4204bf:	jne    0x4206a0
  4204c5:	mov    rdx,0xffffffffffffffff
  4204cc:	mov    rcx,rsi
  4204cf:	call   0x40d440
  4204d4:	xor    eax,eax
  4204d6:	jmp    0x4205a4
  4204db:	nop    DWORD PTR [rax+rax*1+0x0]
  4204e0:	mov    rdx,QWORD PTR [rbx+0x28]
  4204e4:	test   rdx,rdx
  4204e7:	je     0x420415
  4204ed:	cmp    DWORD PTR [rdx+0x30],0x1
  4204f1:	je     0x420415
  4204f7:	test   r13d,r13d
  4204fa:	jne    0x4207c0
  420500:	xor    r15d,r15d
  420503:	xor    edi,edi
  420505:	cmp    WORD PTR [rsi],0x6ff
  42050a:	mov    r13,r12
  42050d:	ja     0x420426
  420513:	cmp    r9b,0x5
  420517:	ja     0x4205d0
  42051d:	lea    rdx,[rip+0x16e2c]        # 0x437350
  420524:	movzx  eax,r9b
  420528:	movsxd rax,DWORD PTR [rdx+rax*4]
  42052c:	add    rdx,rax
  42052f:	jmp    rdx
  420531:	cmp    rdi,r11
  420534:	cmova  rdi,r11
  420538:	test   r14d,r14d
  42053b:	je     0x420555
  42053d:	mov    eax,DWORD PTR [rbx+0x1c]
  420540:	lea    edx,[rax-0x22]
  420543:	cmp    edx,0x1
  420546:	jbe    0x420879
  42054c:	cmp    eax,0x63
  42054f:	je     0x420879
  420555:	mov    edx,edi
  420557:	mov    rcx,rsi
  42055a:	call   0x40d490
  42055f:	nop
  420560:	cmp    r15d,0xffffffff
  420564:	je     0x42086f
  42056a:	mov    r8,rdi
  42056d:	mov    rdx,r13
  420570:	mov    rcx,rsi
  420573:	call   0x40d260
  420578:	test   rdi,rdi
  42057b:	je     0x420590
  42057d:	cmp    BYTE PTR [rbx+0x18],0x8
  420581:	jne    0x420590
  420583:	xor    edx,edx
  420585:	mov    rcx,rsi
  420588:	call   0x40d490
  42058d:	nop    DWORD PTR [rax]
  420590:	test   r15d,r15d
  420593:	jle    0x4205a2
  420595:	cmp    r12,r13
  420598:	je     0x4205a2
  42059a:	mov    rcx,r13
  42059d:	call   0x429580
  4205a2:	xor    eax,eax
  4205a4:	add    rsp,0x58
  4205a8:	pop    rbx
  4205a9:	pop    rsi
  4205aa:	pop    rdi
  4205ab:	pop    rbp
  4205ac:	pop    r12
  4205ae:	pop    r13
  4205b0:	pop    r14
  4205b2:	pop    r15
  4205b4:	ret    
  4205b5:	mov    eax,DWORD PTR [rbx+0x14]
  4205b8:	xor    edi,edi
  4205ba:	sub    eax,0x24
  4205bd:	cmp    eax,0x9b
  4205c2:	ja     0x4205d0
  4205c4:	lea    rdx,[rip+0x171b5]        # 0x437780
  4205cb:	movsx  rdi,BYTE PTR [rdx+rax*1]
  4205d0:	cmp    r15d,0xffffffff
  4205d4:	je     0x42086f
  4205da:	mov    r8,rdi
  4205dd:	mov    rdx,r13
  4205e0:	mov    rcx,rsi
  4205e3:	call   0x40d260
  4205e8:	jmp    0x420590
  4205ea:	nop    WORD PTR [rax+rax*1+0x0]
  4205f0:	xor    edx,edx
  4205f2:	mov    rcx,rsi
  4205f5:	call   0x40d490
  4205fa:	xor    eax,eax
  4205fc:	jmp    0x4205a4
  4205fe:	xchg   ax,ax
  420600:	mov    edx,0x10
  420605:	mov    rcx,rsi
  420608:	call   0x40d520
  42060d:	lea    rdx,[rbp+0x8]
  420611:	mov    r8d,0x10
  420617:	mov    rcx,rsi
  42061a:	call   0x40d260
  42061f:	lea    rdx,[rbp+0x18]
  420623:	mov    r8d,0x8
  420629:	mov    rcx,rsi
  42062c:	call   0x40d260
  420631:	cmp    rdi,0x7fffffff
  420638:	mov    eax,0x7fffffff
  42063d:	mov    rcx,rsi
  420640:	cmova  rdi,rax
  420644:	mov    edx,edi
  420646:	call   0x40d490
  42064b:	jmp    0x4205d0
  42064d:	nop    DWORD PTR [rax]
  420650:	cmp    al,0x2
  420652:	jne    0x4206a0
  420654:	mov    edx,0xffffffff
  420659:	mov    rcx,rsi
  42065c:	call   0x40d4d0
  420661:	xor    eax,eax
  420663:	jmp    0x4205a4
  420668:	nop    DWORD PTR [rax+rax*1+0x0]
  420670:	test   r14d,r14d
  420673:	je     0x4206d0
  420675:	mov    eax,DWORD PTR [rbx+0x1c]
  420678:	lea    edx,[rax-0x22]
  42067b:	cmp    edx,0x1
  42067e:	jbe    0x4206bd
  420680:	cmp    eax,0x63
  420683:	je     0x4206bd
  420685:	mov    edx,0xffffffff
  42068a:	mov    rcx,rsi
  42068d:	call   0x40d490
  420692:	xor    eax,eax
  420694:	jmp    0x4205a4
  420699:	nop    DWORD PTR [rax+0x0]
  4206a0:	test   al,al
  4206a2:	jne    0x4206bd
  4206a4:	lea    rdx,[rip+0x16b64]        # 0x43720f
  4206ab:	lea    rcx,[rip+0x16c2a]        # 0x4372dc
  4206b2:	mov    r8d,0x3c3
  4206b8:	call   0x4291e0
  4206bd:	xor    edx,edx
  4206bf:	mov    rcx,rsi
  4206c2:	call   0x40d520
  4206c7:	xor    eax,eax
  4206c9:	jmp    0x4205a4
  4206ce:	xchg   ax,ax
  4206d0:	cmp    WORD PTR [rsi],0x6ff
  4206d5:	jbe    0x420675
  4206d7:	jmp    0x420685
  4206d9:	nop    DWORD PTR [rax+0x0]
  4206e0:	mov    eax,DWORD PTR [rbx+0x1c]
  4206e3:	xor    edi,edi
  4206e5:	sub    eax,0x24
  4206e8:	cmp    eax,0x9b
  4206ed:	ja     0x420560
  4206f3:	lea    rdx,[rip+0x17086]        # 0x437780
  4206fa:	movsx  rdi,BYTE PTR [rdx+rax*1]
  4206ff:	jmp    0x420560
  420704:	cmp    rdi,r11
  420707:	mov    rcx,rsi
  42070a:	cmova  rdi,r11
  42070e:	movzx  edx,dil
  420712:	call   0x40d520
  420717:	jmp    0x420560
  42071c:	nop    DWORD PTR [rax+0x0]
  420720:	cmp    rdi,r11
  420723:	mov    rcx,rsi
  420726:	cmova  rdi,r11
  42072a:	movsx  edx,di
  42072d:	call   0x40d4d0
  420732:	jmp    0x420560
  420737:	nop    WORD PTR [rax+rax*1+0x0]
  420740:	mov    rdx,rdi
  420743:	mov    rcx,rsi
  420746:	call   0x40d440
  42074b:	mov    edx,edi
  42074d:	mov    rcx,rsi
  420750:	call   0x40d490
  420755:	jmp    0x420560
  42075a:	nop    WORD PTR [rax+rax*1+0x0]
  420760:	test   rdi,rdi
  420763:	jne    0x420840
  420769:	mov    edx,0x1
  42076e:	mov    rcx,rsi
  420771:	call   0x40d520
  420776:	mov    eax,DWORD PTR [rbx+0x14]
  420779:	lea    rdx,[rip+0x170c0]        # 0x437840
  420780:	test   BYTE PTR [rdx+rax*1],0x30
  420784:	je     0x420860
  42078a:	mov    edx,0x20
  42078f:	mov    rcx,rsi
  420792:	call   0x40d520
  420797:	jmp    0x420590
  42079c:	nop    DWORD PTR [rax+0x0]
  4207a0:	cmp    rdi,0x1f40
  4207a7:	mov    eax,0x1f40
  4207ac:	mov    rcx,rsi
  4207af:	cmova  rdi,rax
  4207b3:	mov    edx,edi
  4207b5:	call   0x40d4d0
  4207ba:	jmp    0x4205d0
  4207bf:	nop
  4207c0:	lea    rax,[rsp+0x48]
  4207c5:	mov    r9d,r13d
  4207c8:	mov    r8,r12
  4207cb:	mov    rcx,rsi
  4207ce:	mov    QWORD PTR [rsp+0x38],r11
  4207d3:	mov    QWORD PTR [rsp+0x20],rax
  4207d8:	call   0x4175d0
  4207dd:	movsxd rdi,DWORD PTR [rsp+0x48]
  4207e2:	cmp    rax,0x1
  4207e6:	mov    r13,rax
  4207e9:	sbb    r15d,r15d
  4207ec:	movzx  r9d,BYTE PTR [rbx+0x18]
  4207f1:	mov    r11,QWORD PTR [rsp+0x38]
  4207f6:	or     r15d,0x1
  4207fa:	test   rax,rax
  4207fd:	mov    eax,0x0
  420802:	cmove  rdi,rax
  420806:	jmp    0x42041b
  42080b:	nop    DWORD PTR [rax+rax*1+0x0]
  420810:	lea    r8,[rip+0x16ae1]        # 0x4372f8
  420817:	lea    rcx,[rip+0x169f1]        # 0x43720f
  42081e:	mov    edx,0x3f55
  420823:	mov    QWORD PTR [rsp+0x38],r11
  420828:	call   0x423fa0
  42082d:	movzx  r9d,BYTE PTR [rbx+0x18]
  420832:	mov    r11,QWORD PTR [rsp+0x38]
  420837:	jmp    0x420437
  42083c:	nop    DWORD PTR [rax+0x0]
  420840:	cmp    rdi,0xff
  420847:	mov    eax,0xff
  42084c:	mov    rcx,rsi
  42084f:	cmova  rdi,rax
  420853:	mov    edx,edi
  420855:	call   0x40d520
  42085a:	jmp    0x4205d0
  42085f:	nop
  420860:	xor    edx,edx
  420862:	mov    rcx,rsi
  420865:	call   0x40d520
  42086a:	jmp    0x420590
  42086f:	mov    eax,0xffffffff
  420874:	jmp    0x4205a4
  420879:	mov    rcx,rsi
  42087c:	mov    edx,0x10
  420881:	call   0x40d520
  420886:	lea    rdx,[rip+0x16f93]        # 0x437820
  42088d:	mov    rcx,rsi
  420890:	mov    r8d,0x10
  420896:	call   0x40d260
  42089b:	lea    rdx,[rip+0x16f7e]        # 0x437820
  4208a2:	mov    r8d,0x8
  4208a8:	mov    rcx,rsi
  4208ab:	call   0x40d260
  4208b0:	jmp    0x420555
  4208b5:	nop
  4208b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4208c0:	push   rsi
  4208c1:	push   rbx
  4208c2:	sub    rsp,0x28
  4208c6:	mov    rbx,rdx
  4208c9:	mov    rsi,rcx
  4208cc:	call   0x40ce80
  4208d1:	movzx  eax,al
  4208d4:	mov    rcx,rsi
  4208d7:	mov    DWORD PTR [rbx+0x10],eax
  4208da:	call   0x40ce80
  4208df:	mov    rcx,rsi
  4208e2:	mov    BYTE PTR [rbx+0x19],al
  4208e5:	call   0x40ce80
  4208ea:	movzx  edx,BYTE PTR [rbx+0x19]
  4208ee:	mov    BYTE PTR [rbx+0x1a],al
  4208f1:	cmp    al,dl
  4208f3:	seta   cl
  4208f6:	sub    edx,0x1
  4208f9:	cmp    dl,0x4c
  4208fc:	seta   al
  4208ff:	or     eax,ecx
  420901:	movzx  eax,al
  420904:	neg    eax
  420906:	add    rsp,0x28
  42090a:	pop    rbx
  42090b:	pop    rsi
  42090c:	ret    
  42090d:	nop    DWORD PTR [rax]
  420910:	mov    eax,0x23
  420915:	ret    
  420916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420920:	push   rbp
  420921:	push   rdi
  420922:	push   rsi
  420923:	push   rbx
  420924:	sub    rsp,0x28
  420928:	mov    rsi,rcx
  42092b:	mov    rbp,rdx
  42092e:	call   0x40ce80
  420933:	movzx  r8d,al
  420937:	test   r8b,r8b
  42093a:	je     0x4209b0
  42093c:	mov    rbx,QWORD PTR [rbp+0x48]
  420940:	xor    eax,eax
  420942:	lea    rdi,[rbx+0x8]
  420946:	mov    r9,rbx
  420949:	mov    QWORD PTR [rbx],0x0
  420950:	mov    QWORD PTR [rbx+0x1b],0x0
  420958:	and    rdi,0xfffffffffffffff8
  42095c:	sub    r9,rdi
  42095f:	add    r9d,0x23
  420963:	shr    r9d,0x3
  420967:	cmp    r8b,0x21
  42096b:	mov    ecx,r9d
  42096e:	rep stos QWORD PTR es:[rdi],rax
  420971:	movzx  eax,BYTE PTR [rbp+0x19]
  420975:	mov    BYTE PTR [rbx],al
  420977:	movzx  eax,BYTE PTR [rbp+0x1a]
  42097b:	mov    BYTE PTR [rbx+0x1],al
  42097e:	mov    eax,0xffffffff
  420983:	ja     0x4209a1
  420985:	lea    rdx,[rbx+0x2]
  420989:	mov    rcx,rsi
  42098c:	call   0x40cf10
  420991:	cmp    WORD PTR [rsi],0x6ff
  420996:	ja     0x4209c2
  420998:	mov    DWORD PTR [rbp+0x64],0x23
  42099f:	xor    eax,eax
  4209a1:	add    rsp,0x28
  4209a5:	pop    rbx
  4209a6:	pop    rsi
  4209a7:	pop    rdi
  4209a8:	pop    rbp
  4209a9:	ret    
  4209aa:	nop    WORD PTR [rax+rax*1+0x0]
  4209b0:	xor    eax,eax
  4209b2:	mov    DWORD PTR [rbp+0x64],0xffffffff
  4209b9:	add    rsp,0x28
  4209bd:	pop    rbx
  4209be:	pop    rsi
  4209bf:	pop    rdi
  4209c0:	pop    rbp
  4209c1:	ret    
  4209c2:	mov    rcx,rbx
  4209c5:	call   0x41fa30
  4209ca:	jmp    0x420998
  4209cc:	nop    DWORD PTR [rax+0x0]
  4209d0:	push   rsi
  4209d1:	push   rbx
  4209d2:	sub    rsp,0x28
  4209d6:	mov    rax,QWORD PTR [rip+0x18173]        # 0x438b50
  4209dd:	mov    rsi,rdx
  4209e0:	movzx  edx,BYTE PTR [rdx+0x19]
  4209e4:	mov    rbx,rcx
  4209e7:	movzx  edx,BYTE PTR [rax+rdx*4]
  4209eb:	call   0x40d520
  4209f0:	movzx  edx,BYTE PTR [rsi+0x19]
  4209f4:	mov    rcx,rbx
  4209f7:	call   0x40d520
  4209fc:	movzx  edx,BYTE PTR [rsi+0x1a]
  420a00:	mov    rcx,rbx
  420a03:	call   0x40d520
  420a08:	xor    eax,eax
  420a0a:	add    rsp,0x28
  420a0e:	pop    rbx
  420a0f:	pop    rsi
  420a10:	ret    
  420a11:	nop    DWORD PTR [rax+rax*1+0x0]
  420a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420a20:	mov    eax,0x3
  420a25:	ret    
  420a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420a30:	push   rdi
  420a31:	push   rsi
  420a32:	push   rbx
  420a33:	sub    rsp,0x50
  420a37:	mov    eax,DWORD PTR [rdx+0x64]
  420a3a:	mov    rbx,QWORD PTR [rdx+0x48]
  420a3e:	mov    rsi,rcx
  420a41:	test   eax,eax
  420a43:	js     0x420ad0
  420a49:	movzx  edx,BYTE PTR [rbx]
  420a4c:	mov    rax,QWORD PTR [rip+0x180fd]        # 0x438b50
  420a53:	mov    edx,DWORD PTR [rax+rdx*4]
  420a56:	mov    edi,edx
  420a58:	movzx  edx,dl
  420a5b:	call   0x40d520
  420a60:	mov    rax,QWORD PTR [rbx]
  420a63:	cmp    WORD PTR [rsi],0x6ff
  420a68:	mov    QWORD PTR [rsp+0x20],rax
  420a6d:	mov    rax,QWORD PTR [rbx+0x8]
  420a71:	mov    QWORD PTR [rsp+0x28],rax
  420a76:	mov    rax,QWORD PTR [rbx+0x10]
  420a7a:	mov    QWORD PTR [rsp+0x30],rax
  420a7f:	mov    rax,QWORD PTR [rbx+0x18]
  420a83:	mov    QWORD PTR [rsp+0x38],rax
  420a88:	movzx  eax,WORD PTR [rbx+0x20]
  420a8c:	mov    WORD PTR [rsp+0x40],ax
  420a91:	movzx  eax,BYTE PTR [rbx+0x22]
  420a95:	lea    rbx,[rsp+0x20]
  420a9a:	mov    BYTE PTR [rsp+0x42],al
  420a9e:	ja     0x420ac0
  420aa0:	lea    rdx,[rbx+0x2]
  420aa4:	movzx  r8d,dil
  420aa8:	mov    rcx,rsi
  420aab:	call   0x40d260
  420ab0:	xor    eax,eax
  420ab2:	add    rsp,0x50
  420ab6:	pop    rbx
  420ab7:	pop    rsi
  420ab8:	pop    rdi
  420ab9:	ret    
  420aba:	nop    WORD PTR [rax+rax*1+0x0]
  420ac0:	mov    rcx,rbx
  420ac3:	call   0x41fa30
  420ac8:	jmp    0x420aa0
  420aca:	nop    WORD PTR [rax+rax*1+0x0]
  420ad0:	xor    edx,edx
  420ad2:	call   0x40d520
  420ad7:	xor    eax,eax
  420ad9:	add    rsp,0x50
  420add:	pop    rbx
  420ade:	pop    rsi
  420adf:	pop    rdi
  420ae0:	ret    
  420ae1:	nop    DWORD PTR [rax+rax*1+0x0]
  420ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420af0:	mov    eax,0xffffffff
  420af5:	ret    
  420af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420b00:	mov    eax,0xffffffff
  420b05:	ret    
  420b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420b10:	push   rbx
  420b11:	sub    rsp,0x20
  420b15:	cmp    DWORD PTR [rdx+0x14],0x28
  420b19:	mov    rbx,rdx
  420b1c:	mov    BYTE PTR [rdx+0x19],0x0
  420b20:	mov    BYTE PTR [rdx+0x1a],0x0
  420b24:	je     0x420b35
  420b26:	call   0x40ce80
  420b2b:	cmp    al,0x7
  420b2d:	mov    BYTE PTR [rbx+0x19],al
  420b30:	mov    BYTE PTR [rbx+0x1a],al
  420b33:	ja     0x420b50
  420b35:	mov    DWORD PTR [rbx+0x10],0x10
  420b3c:	mov    DWORD PTR [rbx+0x20],0x10
  420b43:	xor    eax,eax
  420b45:	add    rsp,0x20
  420b49:	pop    rbx
  420b4a:	ret    
  420b4b:	nop    DWORD PTR [rax+rax*1+0x0]
  420b50:	mov    eax,0xffffffff
  420b55:	jmp    0x420b45
  420b57:	nop    WORD PTR [rax+rax*1+0x0]
  420b60:	mov    eax,0x10
  420b65:	ret    
  420b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420b70:	push   rbp
  420b71:	push   rdi
  420b72:	push   rsi
  420b73:	push   rbx
  420b74:	sub    rsp,0x38
  420b78:	mov    rdi,QWORD PTR [rdx+0x48]
  420b7c:	mov    rbx,rcx
  420b7f:	mov    rsi,rdx
  420b82:	call   0x40ce80
  420b87:	movzx  eax,al
  420b8a:	test   eax,eax
  420b8c:	jne    0x420ba0
  420b8e:	mov    DWORD PTR [rsi+0x64],0xffffffff
  420b95:	add    rsp,0x38
  420b99:	pop    rbx
  420b9a:	pop    rsi
  420b9b:	pop    rdi
  420b9c:	pop    rbp
  420b9d:	ret    
  420b9e:	xchg   ax,ax
  420ba0:	mov    QWORD PTR [rdi],0x0
  420ba7:	mov    QWORD PTR [rdi+0x8],0x0
  420baf:	mov    ecx,DWORD PTR [rsi+0x14]
  420bb2:	cmp    ecx,0x2b
  420bb5:	je     0x420ca5
  420bbb:	cmp    ecx,0x29
  420bbe:	je     0x420caa
  420bc4:	sub    eax,0x3
  420bc7:	js     0x420cc2
  420bcd:	movzx  r8d,BYTE PTR [rsi+0x19]
  420bd2:	movzx  edx,BYTE PTR [rdi+0xe]
  420bd6:	and    r8d,0x7
  420bda:	and    edx,0xfffffff8
  420bdd:	or     r8d,edx
  420be0:	cmp    ecx,0x28
  420be3:	mov    BYTE PTR [rdi+0xe],r8b
  420be7:	je     0x420c51
  420be9:	lea    edx,[rax-0x3]
  420bec:	cmp    edx,0x2
  420bef:	ja     0x420cc2
  420bf5:	lea    rbp,[rsp+0x28]
  420bfa:	movsxd r8,eax
  420bfd:	mov    rcx,rbx
  420c00:	mov    QWORD PTR [rsp+0x28],0x0
  420c09:	mov    rdx,rbp
  420c0c:	call   0x40cf10
  420c11:	movzx  r8d,BYTE PTR [rsi+0x19]
  420c16:	mov    rax,QWORD PTR [rsp+0x28]
  420c1b:	cmp    r8d,0x6
  420c1f:	jg     0x420c32
  420c21:	lea    rax,[rax+rax*4]
  420c25:	add    r8d,0x1
  420c29:	add    rax,rax
  420c2c:	cmp    r8d,0x7
  420c30:	jne    0x420c21
  420c32:	or     BYTE PTR [rdi+0xf],0x20
  420c36:	mov    QWORD PTR [rdi],rax
  420c39:	cmp    DWORD PTR [rsi+0x14],0x29
  420c3d:	jne    0x420c5a
  420c3f:	xor    eax,eax
  420c41:	mov    DWORD PTR [rsi+0x64],0x10
  420c48:	add    rsp,0x38
  420c4c:	pop    rbx
  420c4d:	pop    rsi
  420c4e:	pop    rdi
  420c4f:	pop    rbp
  420c50:	ret    
  420c51:	test   eax,eax
  420c53:	jne    0x420cc2
  420c55:	lea    rbp,[rsp+0x28]
  420c5a:	mov    r8d,0x3
  420c60:	mov    rdx,rbp
  420c63:	mov    rcx,rbx
  420c66:	mov    DWORD PTR [rsp+0x28],0x0
  420c6e:	call   0x40cf10
  420c73:	or     BYTE PTR [rdi+0xf],0x40
  420c77:	mov    eax,DWORD PTR [rsp+0x28]
  420c7b:	sub    eax,0xa955b
  420c80:	cmp    DWORD PTR [rsi+0x14],0x2b
  420c84:	mov    DWORD PTR [rdi+0x8],eax
  420c87:	jne    0x420c3f
  420c89:	mov    rcx,rbx
  420c8c:	call   0x40cfb0
  420c91:	mov    WORD PTR [rdi+0xc],ax
  420c95:	add    ax,0x348
  420c99:	cmp    ax,0x690
  420c9d:	ja     0x420cc2
  420c9f:	or     BYTE PTR [rdi+0xf],0x80
  420ca3:	jmp    0x420c3f
  420ca5:	sub    eax,0x5
  420ca8:	js     0x420cc2
  420caa:	movzx  edx,BYTE PTR [rsi+0x19]
  420cae:	movzx  ecx,BYTE PTR [rdi+0xe]
  420cb2:	and    edx,0x7
  420cb5:	and    ecx,0xfffffff8
  420cb8:	or     edx,ecx
  420cba:	mov    BYTE PTR [rdi+0xe],dl
  420cbd:	jmp    0x420be9
  420cc2:	mov    eax,0xffffffff
  420cc7:	jmp    0x420b95
  420ccc:	nop    DWORD PTR [rax+0x0]
  420cd0:	sub    rsp,0x28
  420cd4:	cmp    DWORD PTR [rdx+0x1c],0x28
  420cd8:	je     0x420ce4
  420cda:	mov    edx,0x7
  420cdf:	call   0x40d520
  420ce4:	xor    eax,eax
  420ce6:	add    rsp,0x28
  420cea:	ret    
  420ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  420cf0:	sub    rsp,0x38
  420cf4:	mov    eax,DWORD PTR [rdx+0x64]
  420cf7:	mov    r8,QWORD PTR [rdx+0x48]
  420cfb:	test   eax,eax
  420cfd:	js     0x420da0
  420d03:	mov    edx,DWORD PTR [rdx+0x1c]
  420d06:	cmp    edx,0x28
  420d09:	je     0x420d70
  420d0b:	mov    rax,QWORD PTR [r8]
  420d0e:	mov    DWORD PTR [rsp+0x21],eax
  420d12:	shr    rax,0x20
  420d16:	cmp    edx,0x29
  420d19:	mov    BYTE PTR [rsp+0x25],al
  420d1d:	je     0x420d60
  420d1f:	mov    eax,DWORD PTR [r8+0x8]
  420d23:	add    eax,0xa955b
  420d28:	cmp    edx,0x2b
  420d2b:	mov    DWORD PTR [rsp+0x26],eax
  420d2f:	jne    0x420d90
  420d31:	movzx  eax,WORD PTR [r8+0xc]
  420d36:	lea    rdx,[rsp+0x20]
  420d3b:	lea    r8,[rdx+0xb]
  420d3f:	mov    WORD PTR [rsp+0x29],ax
  420d44:	sub    r8,rdx
  420d47:	lea    eax,[r8-0x1]
  420d4b:	mov    BYTE PTR [rsp+0x20],al
  420d4f:	call   0x40d260
  420d54:	xor    eax,eax
  420d56:	add    rsp,0x38
  420d5a:	ret    
  420d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  420d60:	lea    rdx,[rsp+0x20]
  420d65:	lea    r8,[rdx+0x6]
  420d69:	jmp    0x420d44
  420d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  420d70:	mov    eax,DWORD PTR [r8+0x8]
  420d74:	lea    rdx,[rsp+0x20]
  420d79:	lea    r8,[rdx+0x4]
  420d7d:	add    eax,0xa955b
  420d82:	mov    DWORD PTR [rsp+0x21],eax
  420d86:	jmp    0x420d44
  420d88:	nop    DWORD PTR [rax+rax*1+0x0]
  420d90:	lea    rdx,[rsp+0x20]
  420d95:	lea    r8,[rdx+0x9]
  420d99:	jmp    0x420d44
  420d9b:	nop    DWORD PTR [rax+rax*1+0x0]
  420da0:	xor    edx,edx
  420da2:	call   0x40d520
  420da7:	jmp    0x420d54
  420da9:	nop    DWORD PTR [rax+0x0]
  420db0:	push   rsi
  420db1:	push   rbx
  420db2:	sub    rsp,0x28
  420db6:	mov    rbx,rcx
  420db9:	mov    rsi,rdx
  420dbc:	call   0x40cfb0
  420dc1:	mov    rcx,rbx
  420dc4:	call   0x40ce80
  420dc9:	xor    r9d,r9d
  420dcc:	xor    r8d,r8d
  420dcf:	movzx  edx,al
  420dd2:	mov    rcx,rbx
  420dd5:	call   0x40d020
  420dda:	mov    rcx,rbx
  420ddd:	call   0x40ce80
  420de2:	xor    r9d,r9d
  420de5:	xor    r8d,r8d
  420de8:	movzx  edx,al
  420deb:	mov    rcx,rbx
  420dee:	call   0x40d020
  420df3:	mov    rcx,rbx
  420df6:	call   0x40ce80
  420dfb:	xor    r9d,r9d
  420dfe:	xor    r8d,r8d
  420e01:	movzx  edx,al
  420e04:	mov    rcx,rbx
  420e07:	call   0x40d020
  420e0c:	mov    rcx,rbx
  420e0f:	call   0x40cfb0
  420e14:	xor    r9d,r9d
  420e17:	movzx  edx,ax
  420e1a:	xor    r8d,r8d
  420e1d:	mov    rcx,rbx
  420e20:	call   0x40d020
  420e25:	xor    eax,eax
  420e27:	mov    DWORD PTR [rsi+0x10],0x7fffffff
  420e2e:	add    rsp,0x28
  420e32:	pop    rbx
  420e33:	pop    rsi
  420e34:	ret    
  420e35:	nop
  420e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420e40:	mov    eax,0x28
  420e45:	ret    
  420e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420e50:	push   rbx
  420e51:	sub    rsp,0x20
  420e55:	xor    edx,edx
  420e57:	mov    rbx,rcx
  420e5a:	call   0x40d520
  420e5f:	xor    edx,edx
  420e61:	mov    rcx,rbx
  420e64:	call   0x40d520
  420e69:	xor    edx,edx
  420e6b:	mov    rcx,rbx
  420e6e:	call   0x40d520
  420e73:	xor    eax,eax
  420e75:	add    rsp,0x20
  420e79:	pop    rbx
  420e7a:	ret    
  420e7b:	nop    DWORD PTR [rax+rax*1+0x0]
  420e80:	push   rsi
  420e81:	push   rbx
  420e82:	sub    rsp,0x28
  420e86:	mov    rsi,rcx
  420e89:	mov    BYTE PTR [rdx+0x19],0x6
  420e8d:	mov    BYTE PTR [rdx+0x1a],0x6
  420e91:	mov    rbx,rdx
  420e94:	call   0x40ce80
  420e99:	mov    rcx,rsi
  420e9c:	call   0x40ce80
  420ea1:	xor    eax,eax
  420ea3:	mov    DWORD PTR [rbx+0x10],0x8
  420eaa:	mov    DWORD PTR [rbx+0x20],0x8
  420eb1:	add    rsp,0x28
  420eb5:	pop    rbx
  420eb6:	pop    rsi
  420eb7:	ret    
  420eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  420ec0:	mov    eax,0x8
  420ec5:	ret    
  420ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420ed0:	push   rdi
  420ed1:	push   rsi
  420ed2:	push   rbx
  420ed3:	sub    rsp,0x20
  420ed7:	mov    rdi,QWORD PTR [rdx+0x48]
  420edb:	mov    rsi,rcx
  420ede:	mov    rbx,rdx
  420ee1:	call   0x40ce80
  420ee6:	test   al,al
  420ee8:	jne    0x420f00
  420eea:	xor    eax,eax
  420eec:	mov    DWORD PTR [rbx+0x64],0xffffffff
  420ef3:	add    rsp,0x20
  420ef7:	pop    rbx
  420ef8:	pop    rsi
  420ef9:	pop    rdi
  420efa:	ret    
  420efb:	nop    DWORD PTR [rax+rax*1+0x0]
  420f00:	mov    DWORD PTR [rbx+0x64],0x8
  420f07:	mov    rcx,rsi
  420f0a:	call   0x40cff0
  420f0f:	mov    QWORD PTR [rdi],rax
  420f12:	xor    eax,eax
  420f14:	add    rsp,0x20
  420f18:	pop    rbx
  420f19:	pop    rsi
  420f1a:	pop    rdi
  420f1b:	ret    
  420f1c:	nop    DWORD PTR [rax+0x0]
  420f20:	push   rbx
  420f21:	sub    rsp,0x20
  420f25:	mov    edx,0x8
  420f2a:	mov    rbx,rcx
  420f2d:	call   0x40d520
  420f32:	mov    edx,0x6
  420f37:	mov    rcx,rbx
  420f3a:	call   0x40d520
  420f3f:	xor    eax,eax
  420f41:	add    rsp,0x20
  420f45:	pop    rbx
  420f46:	ret    
  420f47:	nop    WORD PTR [rax+rax*1+0x0]
  420f50:	mov    eax,0x2
  420f55:	ret    
  420f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420f60:	push   rsi
  420f61:	push   rbx
  420f62:	sub    rsp,0x28
  420f66:	mov    eax,DWORD PTR [rdx+0x64]
  420f69:	mov    rsi,QWORD PTR [rdx+0x48]
  420f6d:	mov    rbx,rcx
  420f70:	test   eax,eax
  420f72:	js     0x420f92
  420f74:	mov    edx,0x8
  420f79:	call   0x40d520
  420f7e:	mov    rdx,QWORD PTR [rsi]
  420f81:	mov    rcx,rbx
  420f84:	call   0x40d440
  420f89:	xor    eax,eax
  420f8b:	add    rsp,0x28
  420f8f:	pop    rbx
  420f90:	pop    rsi
  420f91:	ret    
  420f92:	xor    edx,edx
  420f94:	call   0x40d520
  420f99:	xor    eax,eax
  420f9b:	add    rsp,0x28
  420f9f:	pop    rbx
  420fa0:	pop    rsi
  420fa1:	ret    
  420fa2:	nop    DWORD PTR [rax+0x0]
  420fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420fb0:	xor    eax,eax
  420fb2:	sub    ecx,0x24
  420fb5:	cmp    ecx,0x9b
  420fbb:	ja     0x420fc8
  420fbd:	lea    rax,[rip+0x167bc]        # 0x437780
  420fc4:	movsx  eax,BYTE PTR [rax+rcx*1]
  420fc8:	repz ret 
  420fca:	nop    WORD PTR [rax+rax*1+0x0]
  420fd0:	lea    eax,[rdx-0x1f]
  420fd3:	cmp    eax,0x5b
  420fd6:	ja     0x421020
  420fd8:	lea    r8,[rip+0x16389]        # 0x437368
  420fdf:	movsxd rax,DWORD PTR [r8+rax*4]
  420fe3:	add    r8,rax
  420fe6:	jmp    r8
  420fe9:	nop    DWORD PTR [rax+0x0]
  420ff0:	cmp    edx,0x33
  420ff3:	je     0x421005
  420ff5:	jg     0x42111d
  420ffb:	cmp    edx,0x2e
  420ffe:	je     0x421005
  421000:	cmp    edx,0x31
  421003:	jne    0x421050
  421005:	xor    eax,eax
  421007:	repz ret 
  421009:	nop    DWORD PTR [rax+0x0]
  421010:	mov    eax,0x4
  421015:	ret    
  421016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421020:	movzx  ecx,WORD PTR [rcx]
  421023:	cmp    cx,0x6ff
  421028:	jbe    0x421060
  42102a:	cmp    edx,0xad
  421030:	je     0x4210d0
  421036:	jg     0x4210a0
  421038:	xor    eax,eax
  42103a:	cmp    edx,0x7f
  42103d:	je     0x421007
  42103f:	jg     0x4210e0
  421045:	sub    edx,0x62
  421048:	cmp    edx,0x1
  42104b:	jbe    0x421010
  42104d:	nop    DWORD PTR [rax]
  421050:	mov    eax,0x1
  421055:	ret    
  421056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421060:	cmp    cx,0x500
  421065:	mov    eax,0x1
  42106a:	jne    0x421007
  42106c:	cmp    edx,0xa3
  421072:	je     0x421010
  421074:	jle    0x420ff0
  42107a:	cmp    edx,0xb0
  421080:	je     0x421005
  421082:	jg     0x421100
  421084:	cmp    edx,0xae
  42108a:	je     0x421010
  42108c:	cmp    edx,0xaf
  421092:	jne    0x421050
  421094:	mov    eax,0x5
  421099:	ret    
  42109a:	nop    WORD PTR [rax+rax*1+0x0]
  4210a0:	cmp    edx,0xef
  4210a6:	je     0x4210d0
  4210a8:	jle    0x4210c0
  4210aa:	cmp    edx,0xf1
  4210b0:	jg     0x421050
  4210b2:	mov    eax,0x8
  4210b7:	ret    
  4210b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4210c0:	cmp    edx,0xaf
  4210c6:	je     0x4210d0
  4210c8:	cmp    edx,0xe7
  4210ce:	jne    0x421050
  4210d0:	mov    eax,0x2
  4210d5:	ret    
  4210d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4210e0:	cmp    edx,0xa5
  4210e6:	je     0x4210d0
  4210e8:	cmp    edx,0xa7
  4210ee:	jne    0x421050
  4210f4:	jmp    0x4210d0
  4210f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421100:	cmp    edx,0xbf
  421106:	je     0x421005
  42110c:	cmp    edx,0xe1
  421112:	je     0x421094
  421118:	jmp    0x421050
  42111d:	sub    edx,0x40
  421120:	cmp    edx,0x3
  421123:	ja     0x421050
  421129:	jmp    0x421005
  42112e:	xchg   ax,ax
  421130:	push   rdi
  421131:	push   rsi
  421132:	push   rbx
  421133:	sub    rsp,0x20
  421137:	mov    rsi,rdx
  42113a:	cmp    r8d,0x6a
  42113e:	mov    rdi,rcx
  421141:	mov    ebx,r8d
  421144:	mov    DWORD PTR [rsi+0x1c],r8d
  421148:	je     0x42116c
  42114a:	jle    0x4211e0
  421150:	cmp    r8d,0xbc
  421157:	jg     0x4211c4
  421159:	cmp    r8d,0xbb
  421160:	jge    0x421210
  421166:	cmp    r8d,0x6c
  42116a:	jne    0x4211d4
  42116c:	mov    rax,QWORD PTR [rip+0x179ed]        # 0x438b60
  421173:	mov    edx,DWORD PTR [rsi+0x8]
  421176:	mov    ecx,ebx
  421178:	mov    QWORD PTR [rsi],rax
  42117b:	call   0x41faf0
  421180:	mov    DWORD PTR [rsi+0x64],0xffffffff
  421187:	mov    DWORD PTR [rsi+0x14],eax
  42118a:	mov    edx,ebx
  42118c:	mov    rcx,rdi
  42118f:	call   0x420fd0
  421194:	test   al,al
  421196:	mov    BYTE PTR [rsi+0x18],al
  421199:	jne    0x4211bc
  42119b:	sub    ebx,0x24
  42119e:	xor    eax,eax
  4211a0:	cmp    ebx,0x9b
  4211a6:	ja     0x4211b3
  4211a8:	lea    rax,[rip+0x165d1]        # 0x437780
  4211af:	movsx  eax,BYTE PTR [rax+rbx*1]
  4211b3:	mov    DWORD PTR [rsi+0x10],eax
  4211b6:	mov    DWORD PTR [rsi+0x20],eax
  4211b9:	mov    DWORD PTR [rsi+0x64],eax
  4211bc:	add    rsp,0x20
  4211c0:	pop    rbx
  4211c1:	pop    rsi
  4211c2:	pop    rdi
  4211c3:	ret    
  4211c4:	cmp    r8d,0xf0
  4211cb:	mov    rax,QWORD PTR [rip+0x1791e]        # 0x438af0
  4211d2:	je     0x421173
  4211d4:	mov    rax,QWORD PTR [rip+0x17945]        # 0x438b20
  4211db:	jmp    0x421173
  4211dd:	nop    DWORD PTR [rax]
  4211e0:	cmp    r8d,0x28
  4211e4:	jl     0x4211d4
  4211e6:	cmp    r8d,0x2b
  4211ea:	jle    0x421220
  4211ec:	cmp    r8d,0x62
  4211f0:	jne    0x4211d4
  4211f2:	cmp    WORD PTR [rcx],0x700
  4211f7:	mov    rax,QWORD PTR [rip+0x17922]        # 0x438b20
  4211fe:	cmovae rax,QWORD PTR [rip+0x1799a]        # 0x438ba0
  421206:	jmp    0x421173
  42120b:	nop    DWORD PTR [rax+rax*1+0x0]
  421210:	mov    rax,QWORD PTR [rip+0x17969]        # 0x438b80
  421217:	jmp    0x421173
  42121c:	nop    DWORD PTR [rax+0x0]
  421220:	mov    rax,QWORD PTR [rip+0x17919]        # 0x438b40
  421227:	jmp    0x421173
  42122c:	nop    DWORD PTR [rax+0x0]
  421230:	push   rdi
  421231:	push   rsi
  421232:	push   rbx
  421233:	sub    rsp,0x20
  421237:	movzx  eax,WORD PTR [rcx]
  42123a:	mov    rdi,rcx
  42123d:	mov    rsi,rdx
  421240:	mov    ebx,r8d
  421243:	cmp    ax,0x6ff
  421247:	ja     0x4212c0
  421249:	cmp    r8d,0x7f
  42124d:	jne    0x421260
  42124f:	cmp    ax,0x500
  421253:	mov    eax,0xbf
  421258:	cmove  ebx,eax
  42125b:	nop    DWORD PTR [rax+rax*1+0x0]
  421260:	mov    rdx,rsi
  421263:	mov    r8d,ebx
  421266:	mov    rcx,rdi
  421269:	call   0x421130
  42126e:	lea    rdx,[rip+0x165cb]        # 0x437840
  421275:	mov    eax,ebx
  421277:	movzx  eax,BYTE PTR [rdx+rax*1]
  42127b:	test   al,0x8
  42127d:	jne    0x4212e0
  42127f:	sub    ebx,0x22
  421282:	cmp    ebx,0x9a
  421288:	ja     0x4212b0
  42128a:	lea    rax,[rip+0x16247]        # 0x4374d8
  421291:	movsxd rdx,DWORD PTR [rax+rbx*4]
  421295:	add    rax,rdx
  421298:	jmp    rax
  42129a:	nop    WORD PTR [rax+rax*1+0x0]
  4212a0:	mov    BYTE PTR [rsi+0x19],0x6
  4212a4:	mov    BYTE PTR [rsi+0x1a],0x6
  4212a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4212b0:	add    rsp,0x20
  4212b4:	pop    rbx
  4212b5:	pop    rsi
  4212b6:	pop    rdi
  4212b7:	ret    
  4212b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4212c0:	cmp    r8d,0x27
  4212c4:	je     0x421320
  4212c6:	jbe    0x421430
  4212cc:	cmp    r8d,0x2d
  4212d0:	je     0x421310
  4212d2:	cmp    r8d,0x2f
  4212d6:	mov    eax,0xaf
  4212db:	cmove  ebx,eax
  4212de:	jmp    0x421260
  4212e0:	mov    rdx,QWORD PTR [rdi+0x68]
  4212e4:	shr    al,0x5
  4212e7:	xor    eax,0x1
  4212ea:	and    eax,0x1
  4212ed:	mov    rax,QWORD PTR [rdx+rax*8]
  4212f1:	mov    QWORD PTR [rsi+0x28],rax
  4212f5:	mov    eax,DWORD PTR [rdi+0x70]
  4212f8:	mov    DWORD PTR [rsi+0x59],eax
  4212fb:	movzx  eax,BYTE PTR [rdi+0x74]
  4212ff:	mov    BYTE PTR [rsi+0x5d],al
  421302:	jmp    0x42127f
  421307:	nop    WORD PTR [rax+rax*1+0x0]
  421310:	mov    ebx,0xad
  421315:	jmp    0x421260
  42131a:	nop    WORD PTR [rax+rax*1+0x0]
  421320:	mov    ebx,0xa7
  421325:	jmp    0x421260
  42132a:	nop    WORD PTR [rax+rax*1+0x0]
  421330:	cmp    WORD PTR [rdi],0x701
  421335:	jbe    0x4212b0
  42133b:	mov    BYTE PTR [rsi+0x18],0x8
  42133f:	mov    DWORD PTR [rsi+0x1c],0xa5
  421346:	jmp    0x4212b0
  42134b:	nop    DWORD PTR [rax+rax*1+0x0]
  421350:	cmp    WORD PTR [rdi],0x701
  421355:	jbe    0x4212b0
  42135b:	mov    BYTE PTR [rsi+0x18],0x8
  42135f:	mov    DWORD PTR [rsi+0x1c],0xa7
  421366:	jmp    0x4212b0
  42136b:	nop    DWORD PTR [rax+rax*1+0x0]
  421370:	mov    DWORD PTR [rsi+0x10],0x10
  421377:	mov    DWORD PTR [rsi+0x20],0x10
  42137e:	jmp    0x4212b0
  421383:	cmp    WORD PTR [rdi],0x701
  421388:	jbe    0x4212b0
  42138e:	mov    BYTE PTR [rsi+0x18],0x8
  421392:	mov    DWORD PTR [rsi+0x1c],0xe7
  421399:	jmp    0x4212b0
  42139e:	xchg   ax,ax
  4213a0:	mov    DWORD PTR [rsi+0x10],0x1
  4213a7:	mov    DWORD PTR [rsi+0x20],0x1
  4213ae:	jmp    0x4212b0
  4213b3:	mov    DWORD PTR [rsi+0x1c],0x26
  4213ba:	mov    BYTE PTR [rsi+0x18],0x1
  4213be:	mov    DWORD PTR [rsi+0x64],0xffffffff
  4213c5:	jmp    0x4212b0
  4213ca:	nop    WORD PTR [rax+rax*1+0x0]
  4213d0:	mov    DWORD PTR [rsi+0x1c],0x6f
  4213d7:	mov    BYTE PTR [rsi+0x18],0x1
  4213db:	mov    DWORD PTR [rsi+0x64],0xffffffff
  4213e2:	jmp    0x4212b0
  4213e7:	nop    WORD PTR [rax+rax*1+0x0]
  4213f0:	mov    DWORD PTR [rsi+0x1c],0x6d
  4213f7:	mov    BYTE PTR [rsi+0x18],0x1
  4213fb:	mov    DWORD PTR [rsi+0x64],0xffffffff
  421402:	jmp    0x4212b0
  421407:	nop    WORD PTR [rax+rax*1+0x0]
  421410:	mov    DWORD PTR [rsi+0x1c],0x6e
  421417:	mov    BYTE PTR [rsi+0x18],0x1
  42141b:	mov    DWORD PTR [rsi+0x64],0xffffffff
  421422:	jmp    0x4212b0
  421427:	nop    WORD PTR [rax+rax*1+0x0]
  421430:	cmp    r8d,0x25
  421434:	mov    eax,0xa5
  421439:	cmove  ebx,eax
  42143c:	jmp    0x421260
  421441:	nop    DWORD PTR [rax+rax*1+0x0]
  421446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421450:	push   r15
  421452:	push   r14
  421454:	push   r13
  421456:	push   r12
  421458:	push   rbp
  421459:	push   rdi
  42145a:	push   rsi
  42145b:	push   rbx
  42145c:	sub    rsp,0x68
  421460:	mov    rdi,rdx
  421463:	mov    rbx,rcx
  421466:	call   0x40cfd0
  42146b:	cmp    eax,0x1
  42146e:	mov    esi,eax
  421470:	mov    DWORD PTR [rdi+0x64],0xffffffff
  421477:	jbe    0x421780
  42147d:	mov    rcx,rbx
  421480:	call   0x40ce80
  421485:	mov    rcx,rbx
  421488:	movzx  r12d,al
  42148c:	call   0x40ce80
  421491:	mov    r13d,eax
  421494:	lea    rax,[rip+0x163a5]        # 0x437840
  42149b:	movsxd rdx,r12d
  42149e:	mov    r15d,r12d
  4214a1:	cmp    BYTE PTR [rax+rdx*1],0x0
  4214a5:	je     0x4215d8
  4214ab:	mov    rbp,QWORD PTR [rdi+0x48]
  4214af:	lea    r14d,[rsi-0x2]
  4214b3:	movzx  r8d,r13b
  4214b7:	cmp    r14d,r8d
  4214ba:	mov    DWORD PTR [rbp+0x10],r12d
  4214be:	jb     0x4215d5
  4214c4:	mov    edx,r12d
  4214c7:	movzx  r10d,BYTE PTR [rax+rdx*1]
  4214cc:	test   r10b,0x8
  4214d0:	je     0x42151e
  4214d2:	cmp    r13b,0x4
  4214d6:	mov    BYTE PTR [rsp+0x34],r10b
  4214db:	jbe    0x4215d5
  4214e1:	lea    rax,[rbp+0x14]
  4214e5:	mov    r8d,0x5
  4214eb:	mov    rcx,rbx
  4214ee:	sub    r13d,0x5
  4214f2:	lea    r14d,[rsi-0x7]
  4214f6:	mov    rdx,rax
  4214f9:	mov    QWORD PTR [rsp+0x38],rax
  4214fe:	call   0x40cf10
  421503:	movzx  r10d,BYTE PTR [rsp+0x34]
  421509:	and    r10d,0x20
  42150d:	je     0x421794
  421513:	mov    rax,QWORD PTR [rbx+0x68]
  421517:	mov    rax,QWORD PTR [rax]
  42151a:	mov    QWORD PTR [rdi+0x28],rax
  42151e:	lea    eax,[r15-0x6a]
  421522:	test   al,0xfd
  421524:	jne    0x421600
  42152a:	cmp    r13b,0x2
  42152e:	jne    0x4215d5
  421534:	mov    rcx,QWORD PTR [rbp+0x0]
  421538:	test   rcx,rcx
  42153b:	je     0x421542
  42153d:	call   0x429580
  421542:	mov    edx,0x23
  421547:	mov    ecx,0x1
  42154c:	mov    DWORD PTR [rbp+0xc],0x23
  421553:	call   0x4295c8
  421558:	mov    rcx,rbx
  42155b:	mov    r12,rax
  42155e:	mov    QWORD PTR [rbp+0x0],rax
  421562:	call   0x40ce80
  421567:	mov    rcx,rbx
  42156a:	mov    BYTE PTR [r12],al
  42156e:	lea    esi,[r14-0x2]
  421572:	call   0x40ce80
  421577:	movzx  edx,BYTE PTR [r12]
  42157c:	cmp    esi,0x21
  42157f:	mov    BYTE PTR [r12+0x1],al
  421584:	seta   r8b
  421588:	lea    ecx,[rdx-0x1]
  42158b:	cmp    cl,0x4c
  42158e:	seta   cl
  421591:	or     r8b,cl
  421594:	jne    0x4215d8
  421596:	cmp    al,dl
  421598:	ja     0x4215d8
  42159a:	lea    rdx,[r12+0x2]
  42159f:	mov    DWORD PTR [rdi+0x64],esi
  4215a2:	mov    r8d,esi
  4215a5:	mov    rcx,rbx
  4215a8:	call   0x40cf10
  4215ad:	xor    eax,eax
  4215af:	cmp    WORD PTR [rbx],0x6ff
  4215b4:	jbe    0x4215ea
  4215b6:	mov    rcx,r12
  4215b9:	mov    DWORD PTR [rsp+0x34],eax
  4215bd:	call   0x41fa30
  4215c2:	mov    eax,DWORD PTR [rsp+0x34]
  4215c6:	jmp    0x4215ea
  4215c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4215d0:	test   r13b,r13b
  4215d3:	je     0x421632
  4215d5:	mov    esi,r14d
  4215d8:	mov    r8d,esi
  4215db:	xor    edx,edx
  4215dd:	mov    rcx,rbx
  4215e0:	call   0x40cf10
  4215e5:	mov    eax,0xffffffff
  4215ea:	add    rsp,0x68
  4215ee:	pop    rbx
  4215ef:	pop    rsi
  4215f0:	pop    rdi
  4215f1:	pop    rbp
  4215f2:	pop    r12
  4215f4:	pop    r13
  4215f6:	pop    r14
  4215f8:	pop    r15
  4215fa:	ret    
  4215fb:	nop    DWORD PTR [rax+rax*1+0x0]
  421600:	cmp    r15b,0x28
  421604:	je     0x4215d0
  421606:	jb     0x4216a0
  42160c:	cmp    r15b,0x2b
  421610:	ja     0x4216a0
  421616:	cmp    r13b,0x1
  42161a:	jne    0x4215d5
  42161c:	mov    rcx,rbx
  42161f:	call   0x40ce80
  421624:	cmp    al,0x7
  421626:	mov    BYTE PTR [rdi+0x19],al
  421629:	mov    BYTE PTR [rdi+0x1a],al
  42162c:	ja     0x4215d5
  42162e:	sub    r14d,0x1
  421632:	mov    eax,DWORD PTR [rbx+0xe4]
  421638:	mov    rdx,QWORD PTR [rbx+0xd0]
  42163f:	sub    eax,0x1
  421642:	mov    DWORD PTR [rbx+0xe4],eax
  421648:	mov    BYTE PTR [rdx+rax*1],r14b
  42164c:	mov    rcx,QWORD PTR [rbp+0x0]
  421650:	test   rcx,rcx
  421653:	je     0x42165a
  421655:	call   0x429580
  42165a:	mov    edx,0x1
  42165f:	mov    ecx,0x10
  421664:	mov    DWORD PTR [rbp+0xc],0x10
  42166b:	call   0x4295c8
  421670:	mov    rdx,rdi
  421673:	mov    QWORD PTR [rbp+0x0],rax
  421677:	mov    rcx,rbx
  42167a:	mov    DWORD PTR [rdi+0x14],r12d
  42167e:	mov    QWORD PTR [rdi+0x48],rax
  421682:	call   0x420b70
  421687:	mov    DWORD PTR [rdi+0x14],0x62
  42168e:	mov    QWORD PTR [rdi+0x48],rbp
  421692:	jmp    0x4215ea
  421697:	nop    WORD PTR [rax+rax*1+0x0]
  4216a0:	cmp    r12d,0x24
  4216a4:	je     0x4217d0
  4216aa:	mov    edx,r12d
  4216ad:	mov    rcx,rbx
  4216b0:	call   0x420fd0
  4216b5:	movzx  r8d,r13b
  4216b9:	cmp    eax,r8d
  4216bc:	jne    0x4215d5
  4216c2:	cmp    eax,0x2
  4216c5:	jg     0x4215d5
  4216cb:	cmp    eax,0x1
  4216ce:	je     0x4217b0
  4216d4:	cmp    eax,0x2
  4216d7:	je     0x421800
  4216dd:	lea    eax,[r12-0x24]
  4216e2:	cmp    eax,0x9b
  4216e7:	jbe    0x4217de
  4216ed:	xor    eax,eax
  4216ef:	nop
  4216f0:	mov    DWORD PTR [rbp+0x8],eax
  4216f3:	mov    rcx,QWORD PTR [rbp+0x0]
  4216f7:	sub    r14d,r8d
  4216fa:	mov    DWORD PTR [rdi+0x64],r14d
  4216fe:	test   rcx,rcx
  421701:	je     0x421710
  421703:	call   0x429580
  421708:	mov    QWORD PTR [rbp+0x0],0x0
  421710:	test   r14d,r14d
  421713:	je     0x4217f0
  421719:	test   BYTE PTR [rbx+0xa0],0x2
  421720:	je     0x421736
  421722:	cmp    QWORD PTR [rdi+0x28],0x0
  421727:	je     0x421736
  421729:	xor    edx,edx
  42172b:	mov    ecx,r12d
  42172e:	call   0x41faf0
  421733:	mov    DWORD PTR [rbp+0x10],eax
  421736:	lea    rsi,[rsp+0x40]
  42173b:	mov    r8,r14
  42173e:	mov    rdx,rbx
  421741:	mov    rcx,rsi
  421744:	call   0x424fb0
  421749:	lea    rdx,[rdi+0x28]
  42174d:	lea    r8,[rdi+0x64]
  421751:	mov    QWORD PTR [rsp+0x28],rsi
  421756:	mov    QWORD PTR [rsp+0x20],r14
  42175b:	mov    r9,rbp
  42175e:	mov    rcx,rbx
  421761:	call   0x41fa60
  421766:	test   eax,eax
  421768:	js     0x4215ea
  42176e:	mov    eax,DWORD PTR [rdi+0x64]
  421771:	mov    DWORD PTR [rbp+0xc],eax
  421774:	xor    eax,eax
  421776:	jmp    0x4215ea
  42177b:	nop    DWORD PTR [rax+rax*1+0x0]
  421780:	mov    r8d,eax
  421783:	xor    edx,edx
  421785:	mov    rcx,rbx
  421788:	call   0x40cf10
  42178d:	xor    eax,eax
  42178f:	jmp    0x4215ea
  421794:	mov    rdx,QWORD PTR [rsp+0x38]
  421799:	mov    rcx,rbx
  42179c:	call   0x41f360
  4217a1:	jmp    0x42151a
  4217a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4217b0:	mov    rcx,rbx
  4217b3:	mov    DWORD PTR [rsp+0x34],r8d
  4217b8:	call   0x40ce80
  4217bd:	movzx  eax,al
  4217c0:	mov    r8d,DWORD PTR [rsp+0x34]
  4217c5:	mov    DWORD PTR [rbp+0x8],eax
  4217c8:	jmp    0x4216f3
  4217cd:	nop    DWORD PTR [rax]
  4217d0:	test   r13b,r13b
  4217d3:	jne    0x4215d5
  4217d9:	xor    eax,eax
  4217db:	xor    r8d,r8d
  4217de:	lea    rdx,[rip+0x15f9b]        # 0x437780
  4217e5:	movsx  eax,BYTE PTR [rdx+rax*1]
  4217e9:	jmp    0x4216f0
  4217ee:	xchg   ax,ax
  4217f0:	xor    eax,eax
  4217f2:	jmp    0x421771
  4217f7:	nop    WORD PTR [rax+rax*1+0x0]
  421800:	mov    rcx,rbx
  421803:	mov    DWORD PTR [rsp+0x34],r8d
  421808:	call   0x40cfb0
  42180d:	cwde   
  42180e:	mov    r8d,DWORD PTR [rsp+0x34]
  421813:	mov    DWORD PTR [rbp+0x8],eax
  421816:	jmp    0x4216f3
  42181b:	nop    DWORD PTR [rax+rax*1+0x0]
  421820:	cmp    ecx,0x6e
  421823:	je     0x421900
  421829:	jbe    0x421852
  42182b:	cmp    ecx,0x7b
  42182e:	mov    eax,0x31
  421833:	je     0x421850
  421835:	jbe    0x421883
  421837:	cmp    ecx,0x93
  42183d:	mov    eax,0x33
  421842:	je     0x421850
  421844:	cmp    ecx,0xbf
  42184a:	mov    al,0x7f
  42184c:	jne    0x421880
  42184e:	xchg   ax,ax
  421850:	repz ret 
  421852:	cmp    ecx,0x44
  421855:	je     0x4218d0
  421857:	jbe    0x4218a0
  421859:	cmp    ecx,0x68
  42185c:	mov    eax,0x32
  421861:	je     0x421850
  421863:	cmp    ecx,0x6d
  421866:	jne    0x421880
  421868:	cmp    edx,0x4
  42186b:	mov    eax,0x3b
  421870:	je     0x421850
  421872:	cmp    edx,0x8
  421875:	mov    al,0x3e
  421877:	cmovne eax,ecx
  42187a:	ret    
  42187b:	nop    DWORD PTR [rax+rax*1+0x0]
  421880:	mov    eax,ecx
  421882:	ret    
  421883:	cmp    ecx,0x6f
  421886:	jne    0x421880
  421888:	cmp    edx,0x4
  42188b:	mov    eax,0x3a
  421890:	je     0x421850
  421892:	cmp    edx,0x8
  421895:	mov    al,0x3d
  421897:	cmovne eax,ecx
  42189a:	ret    
  42189b:	nop    DWORD PTR [rax+rax*1+0x0]
  4218a0:	cmp    ecx,0x26
  4218a3:	jne    0x421880
  4218a5:	cmp    edx,0x2
  4218a8:	je     0x421950
  4218ae:	jle    0x421930
  4218b4:	cmp    edx,0x4
  4218b7:	mov    eax,0x38
  4218bc:	je     0x421850
  4218be:	cmp    edx,0x8
  4218c1:	mov    al,0x7f
  4218c3:	je     0x421850
  4218c5:	mov    eax,0x26
  4218ca:	ret    
  4218cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4218d0:	cmp    edx,0x2
  4218d3:	je     0x421940
  4218d5:	jle    0x421920
  4218d7:	cmp    edx,0x4
  4218da:	mov    eax,0x42
  4218df:	je     0x421850
  4218e5:	cmp    edx,0x8
  4218e8:	mov    al,0x43
  4218ea:	je     0x421850
  4218f0:	mov    eax,0x44
  4218f5:	ret    
  4218f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421900:	cmp    edx,0x4
  421903:	mov    eax,0x7a
  421908:	je     0x421850
  42190e:	cmp    edx,0x8
  421911:	mov    al,0x3c
  421913:	cmovne eax,ecx
  421916:	ret    
  421917:	nop    WORD PTR [rax+rax*1+0x0]
  421920:	cmp    edx,0x1
  421923:	mov    eax,0x40
  421928:	jne    0x4218f0
  42192a:	repz ret 
  42192c:	nop    DWORD PTR [rax+0x0]
  421930:	cmp    edx,0x1
  421933:	mov    eax,0x30
  421938:	jne    0x4218c5
  42193a:	repz ret 
  42193c:	nop    DWORD PTR [rax+0x0]
  421940:	mov    eax,0x41
  421945:	ret    
  421946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421950:	mov    eax,0x34
  421955:	ret    
  421956:	nop
  421957:	nop
  421958:	nop
  421959:	nop
  42195a:	nop
  42195b:	nop
  42195c:	nop
  42195d:	nop
  42195e:	nop
  42195f:	nop
  421960:	push   rsi
  421961:	push   rbx
  421962:	sub    rsp,0x28
  421966:	test   rcx,rcx
  421969:	mov    rbx,rcx
  42196c:	mov    esi,edx
  42196e:	je     0x421995
  421970:	mov    eax,DWORD PTR [rbx+0x4]
  421973:	cmp    eax,0x2
  421976:	je     0x42197d
  421978:	cmp    eax,0x17
  42197b:	jne    0x42198e
  42197d:	mov    rbx,QWORD PTR [rbx+0x20]
  421981:	movzx  ecx,si
  421984:	call   QWORD PTR [rip+0x1e3ba]        # 0x43fd44
  42198a:	mov    WORD PTR [rbx+0x2],ax
  42198e:	add    rsp,0x28
  421992:	pop    rbx
  421993:	pop    rsi
  421994:	ret    
  421995:	lea    rdx,[rip+0x15fa4]        # 0x437940
  42199c:	lea    rcx,[rip+0x15fa3]        # 0x437946
  4219a3:	mov    r8d,0xaa
  4219a9:	call   0x4291e0
  4219ae:	jmp    0x421970
  4219b0:	push   rbx
  4219b1:	sub    rsp,0x20
  4219b5:	mov    rbx,rcx
  4219b8:	call   0x41d3c0
  4219bd:	mov    rcx,QWORD PTR [rbx+0x10]
  4219c1:	call   QWORD PTR [rip+0x1e32d]        # 0x43fcf4
  4219c7:	cmp    eax,0xffffffff
  4219ca:	je     0x4219f0
  4219cc:	mov    edx,0x5
  4219d1:	mov    rcx,rbx
  4219d4:	mov    QWORD PTR [rbx+0x10],0xffffffffffffffff
  4219dc:	add    rsp,0x20
  4219e0:	pop    rbx
  4219e1:	jmp    0x40ab40
  4219e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4219f0:	call   QWORD PTR [rip+0x1e2ce]        # 0x43fcc4
  4219f6:	mov    rcx,QWORD PTR [rbx+0x28]
  4219fa:	mov    r9d,eax
  4219fd:	mov    r8d,0x4e58
  421a03:	mov    rdx,rbx
  421a06:	call   0x40a8d0
  421a0b:	jmp    0x4219cc
  421a0d:	nop    DWORD PTR [rax]
  421a10:	sub    rsp,0x1c8
  421a17:	mov    ecx,0x101
  421a1c:	lea    rdx,[rsp+0x20]
  421a21:	call   QWORD PTR [rip+0x1e2ad]        # 0x43fcd4
  421a27:	add    rsp,0x1c8
  421a2e:	ret    
  421a2f:	nop
  421a30:	mov    rax,QWORD PTR [rip+0x1e285]        # 0x43fcbc
  421a37:	rex.W jmp rax
  421a3a:	nop    WORD PTR [rax+rax*1+0x0]
  421a40:	sub    rsp,0x38
  421a44:	mov    edx,0x8004667e
  421a49:	mov    DWORD PTR [rsp+0x2c],0x1
  421a51:	lea    r8,[rsp+0x2c]
  421a56:	call   QWORD PTR [rip+0x1e2f0]        # 0x43fd4c
  421a5c:	xor    edx,edx
  421a5e:	test   eax,eax
  421a60:	js     0x421a70
  421a62:	mov    eax,edx
  421a64:	add    rsp,0x38
  421a68:	ret    
  421a69:	nop    DWORD PTR [rax+0x0]
  421a70:	call   QWORD PTR [rip+0x1e24e]        # 0x43fcc4
  421a76:	mov    edx,eax
  421a78:	mov    eax,edx
  421a7a:	add    rsp,0x38
  421a7e:	ret    
  421a7f:	nop
  421a80:	push   rbx
  421a81:	sub    rsp,0x40
  421a85:	test   rdx,rdx
  421a88:	je     0x421ad1
  421a8a:	test   r8d,r8d
  421a8d:	jle    0x421ad1
  421a8f:	mov    rbx,rdx
  421a92:	mov    r9d,r8d
  421a95:	mov    rdx,QWORD PTR [rcx+0x10]
  421a99:	mov    r8,rbx
  421a9c:	mov    rcx,QWORD PTR [rcx+0x20]
  421aa0:	mov    DWORD PTR [rsp+0x30],0x2
  421aa8:	mov    DWORD PTR [rsp+0x28],0x0
  421ab0:	mov    QWORD PTR [rsp+0x20],0x0
  421ab9:	call   QWORD PTR [rip+0x1e25d]        # 0x43fd1c
  421abf:	mov    edx,eax
  421ac1:	mov    rax,rbx
  421ac4:	test   edx,edx
  421ac6:	je     0x421ad8
  421ac8:	mov    BYTE PTR [rbx],0x0
  421acb:	add    rsp,0x40
  421acf:	pop    rbx
  421ad0:	ret    
  421ad1:	lea    rax,[rip+0x15e7b]        # 0x437953
  421ad8:	add    rsp,0x40
  421adc:	pop    rbx
  421add:	ret    
  421ade:	xchg   ax,ax
  421ae0:	test   rcx,rcx
  421ae3:	je     0x421af3
  421ae5:	cmp    DWORD PTR [rcx+0x148],0x5
  421aec:	je     0x421af3
  421aee:	jmp    0x4219b0
  421af3:	repz ret 
  421af5:	nop
  421af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421b00:	push   rbx
  421b01:	sub    rsp,0x20
  421b05:	mov    rbx,rcx
  421b08:	mov    rcx,QWORD PTR [rcx+0x10]
  421b0c:	cmp    rcx,0xffffffffffffffff
  421b10:	je     0x421b20
  421b12:	call   QWORD PTR [rip+0x1e1dc]        # 0x43fcf4
  421b18:	mov    QWORD PTR [rbx+0x10],0xffffffffffffffff
  421b20:	mov    edx,0x5
  421b25:	mov    rcx,rbx
  421b28:	add    rsp,0x20
  421b2c:	pop    rbx
  421b2d:	jmp    0x40ab40
  421b32:	nop    DWORD PTR [rax+0x0]
  421b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421b40:	push   rbx
  421b41:	sub    rsp,0x30
  421b45:	xor    r8d,r8d
  421b48:	mov    edx,0x1
  421b4d:	lea    r9,[rsp+0x20]
  421b52:	mov    QWORD PTR [rcx+0x8],0xffffffffffffffff
  421b5a:	mov    QWORD PTR [rcx],0xffffffffffffffff
  421b61:	mov    rbx,rcx
  421b64:	mov    ecx,0x1
  421b69:	call   0x4265f0
  421b6e:	test   eax,eax
  421b70:	jne    0x421b83
  421b72:	mov    rdx,QWORD PTR [rsp+0x20]
  421b77:	mov    QWORD PTR [rbx],rdx
  421b7a:	mov    rdx,QWORD PTR [rsp+0x28]
  421b7f:	mov    QWORD PTR [rbx+0x8],rdx
  421b83:	add    rsp,0x30
  421b87:	pop    rbx
  421b88:	ret    
  421b89:	nop    DWORD PTR [rax+0x0]
  421b90:	push   rbx
  421b91:	sub    rsp,0x20
  421b95:	mov    rbx,rcx
  421b98:	mov    rcx,QWORD PTR [rcx]
  421b9b:	cmp    rcx,0xffffffffffffffff
  421b9f:	je     0x421ba7
  421ba1:	call   QWORD PTR [rip+0x1e14d]        # 0x43fcf4
  421ba7:	mov    rcx,QWORD PTR [rbx+0x8]
  421bab:	cmp    rcx,0xffffffffffffffff
  421baf:	je     0x421bc0
  421bb1:	mov    rax,QWORD PTR [rip+0x1e13c]        # 0x43fcf4
  421bb8:	add    rsp,0x20
  421bbc:	pop    rbx
  421bbd:	rex.W jmp rax
  421bc0:	add    rsp,0x20
  421bc4:	pop    rbx
  421bc5:	ret    
  421bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421bd0:	sub    rsp,0x28
  421bd4:	mov    rcx,QWORD PTR [rcx]
  421bd7:	xor    r9d,r9d
  421bda:	mov    r8d,0x1
  421be0:	mov    BYTE PTR [rsp+0x38],dl
  421be4:	lea    rdx,[rsp+0x38]
  421be9:	call   QWORD PTR [rip+0x1e185]        # 0x43fd74
  421bef:	nop
  421bf0:	add    rsp,0x28
  421bf4:	ret    
  421bf5:	nop
  421bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c00:	ret    
  421c01:	nop    DWORD PTR [rax+rax*1+0x0]
  421c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c10:	push   rbx
  421c11:	sub    rsp,0x50
  421c15:	xor    edx,edx
  421c17:	mov    r9d,0x400
  421c1d:	lea    rax,[rsp+0x48]
  421c22:	mov    r8d,ecx
  421c25:	mov    QWORD PTR [rsp+0x48],0x0
  421c2e:	mov    QWORD PTR [rsp+0x30],0x0
  421c37:	mov    DWORD PTR [rsp+0x28],0x0
  421c3f:	mov    ecx,0x1100
  421c44:	mov    QWORD PTR [rsp+0x20],rax
  421c49:	call   QWORD PTR [rip+0x1dc95]        # 0x43f8e4
  421c4f:	mov    rbx,QWORD PTR [rsp+0x48]
  421c54:	test   rbx,rbx
  421c57:	je     0x421ca2
  421c59:	mov    rcx,rbx
  421c5c:	call   0x429490
  421c61:	test   rax,rax
  421c64:	je     0x421c99
  421c66:	sub    rax,0x1
  421c6a:	lea    rdx,[rbx+rax*1]
  421c6e:	movzx  ecx,BYTE PTR [rdx]
  421c71:	cmp    cl,0xa
  421c74:	jne    0x421c94
  421c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c80:	mov    BYTE PTR [rdx],0x0
  421c83:	mov    rbx,QWORD PTR [rsp+0x48]
  421c88:	lea    rdx,[rbx+rax*1]
  421c8c:	movzx  ecx,BYTE PTR [rdx]
  421c8f:	cmp    cl,0xa
  421c92:	je     0x421c80
  421c94:	cmp    cl,0xd
  421c97:	je     0x421c80
  421c99:	mov    rax,rbx
  421c9c:	add    rsp,0x50
  421ca0:	pop    rbx
  421ca1:	ret    
  421ca2:	lea    rbx,[rip+0x16057]        # 0x437d00
  421ca9:	mov    rax,rbx
  421cac:	add    rsp,0x50
  421cb0:	pop    rbx
  421cb1:	ret    
  421cb2:	nop    DWORD PTR [rax+0x0]
  421cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421cc0:	push   r15
  421cc2:	push   r14
  421cc4:	push   r13
  421cc6:	push   r12
  421cc8:	push   rbp
  421cc9:	push   rdi
  421cca:	push   rsi
  421ccb:	push   rbx
  421ccc:	sub    rsp,0x68
  421cd0:	test   rcx,rcx
  421cd3:	mov    r15,rcx
  421cd6:	mov    r12d,edx
  421cd9:	mov    ebx,r8d
  421cdc:	je     0x421ed0
  421ce2:	test   ebx,ebx
  421ce4:	js     0x421eb0
  421cea:	mov    rax,QWORD PTR [r15+0x28]
  421cee:	test   rax,rax
  421cf1:	je     0x421ea0
  421cf7:	cmp    QWORD PTR [rax+0x20],0x0
  421cfc:	mov    esi,0x1
  421d01:	je     0x421ea0
  421d07:	test   ebx,ebx
  421d09:	sete   BYTE PTR [rsp+0x38]
  421d0e:	test   ebx,ebx
  421d10:	js     0x421e42
  421d16:	imul   ebp,esi,0x3e8
  421d1c:	mov    eax,0xffffffff
  421d21:	test   esi,esi
  421d23:	mov    r13d,r12d
  421d26:	lea    r14,[rsp+0x40]
  421d2b:	mov    edi,ebx
  421d2d:	cmove  ebp,eax
  421d30:	and    r13d,0x300
  421d37:	mov    rax,QWORD PTR [r15+0x10]
  421d3b:	cmp    rax,0xffffffffffffffff
  421d3f:	je     0x421df2
  421d45:	test   r13d,r13d
  421d48:	je     0x421d67
  421d4a:	mov    rcx,QWORD PTR [r15+0xb0]
  421d51:	test   rcx,rcx
  421d54:	je     0x421d67
  421d56:	call   0x426d00
  421d5b:	test   eax,eax
  421d5d:	jne    0x421f32
  421d63:	mov    rax,QWORD PTR [r15+0x10]
  421d67:	mov    QWORD PTR [rsp+0x40],rax
  421d6c:	mov    rax,QWORD PTR [r15+0x20]
  421d70:	xor    ecx,ecx
  421d72:	mov    r8d,0x300
  421d78:	xor    r9d,r9d
  421d7b:	mov    WORD PTR [rsp+0x4a],cx
  421d80:	mov    WORD PTR [rsp+0x58],r8w
  421d86:	mov    edx,0x2
  421d8b:	mov    r8d,ebp
  421d8e:	mov    rcx,r14
  421d91:	mov    WORD PTR [rsp+0x48],r12w
  421d97:	mov    QWORD PTR [rsp+0x50],rax
  421d9c:	mov    WORD PTR [rsp+0x5a],r9w
  421da2:	call   0x426100
  421da7:	cmp    eax,0x0
  421daa:	jg     0x421ef0
  421db0:	jne    0x421e50
  421db6:	mov    rax,QWORD PTR [r15+0x28]
  421dba:	test   rax,rax
  421dbd:	je     0x421e10
  421dbf:	mov    rax,QWORD PTR [rax+0x20]
  421dc3:	test   rax,rax
  421dc6:	je     0x421e10
  421dc8:	mov    rcx,QWORD PTR [r15+0xf8]
  421dcf:	call   rax
  421dd1:	cmp    eax,0x1
  421dd4:	mov    r9d,eax
  421dd7:	je     0x421e2d
  421dd9:	xor    eax,eax
  421ddb:	cmp    r9d,0x2
  421ddf:	je     0x421df7
  421de1:	mov    rax,QWORD PTR [rip+0x16dc8]        # 0x438bb0
  421de8:	mov    eax,DWORD PTR [rax]
  421dea:	test   eax,eax
  421dec:	jne    0x421f10
  421df2:	mov    eax,0xffffffff
  421df7:	add    rsp,0x68
  421dfb:	pop    rbx
  421dfc:	pop    rsi
  421dfd:	pop    rdi
  421dfe:	pop    rbp
  421dff:	pop    r12
  421e01:	pop    r13
  421e03:	pop    r14
  421e05:	pop    r15
  421e07:	ret    
  421e08:	nop    DWORD PTR [rax+rax*1+0x0]
  421e10:	cmp    esi,ebx
  421e12:	je     0x421e2d
  421e14:	lea    rdx,[rip+0x15b25]        # 0x437940
  421e1b:	lea    rcx,[rip+0x15bee]        # 0x437a10
  421e22:	mov    r8d,0x208
  421e28:	call   0x4291e0
  421e2d:	sub    edi,esi
  421e2f:	test   edi,edi
  421e31:	jg     0x421d37
  421e37:	cmp    BYTE PTR [rsp+0x38],0x0
  421e3c:	jne    0x421d37
  421e42:	xor    eax,eax
  421e44:	jmp    0x421df7
  421e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421e50:	mov    DWORD PTR [rsp+0x3c],eax
  421e54:	call   QWORD PTR [rip+0x1de6a]        # 0x43fcc4
  421e5a:	cmp    eax,0x2714
  421e5f:	mov    r11d,DWORD PTR [rsp+0x3c]
  421e64:	jne    0x421f51
  421e6a:	add    edi,esi
  421e6c:	call   QWORD PTR [rip+0x1de52]        # 0x43fcc4
  421e72:	cmp    eax,0x2714
  421e77:	je     0x421db6
  421e7d:	lea    rdx,[rip+0x15abc]        # 0x437940
  421e84:	lea    rcx,[rip+0x15b15]        # 0x4379a0
  421e8b:	mov    r8d,0x1eb
  421e91:	call   0x4291e0
  421e96:	jmp    0x421db6
  421e9b:	nop    DWORD PTR [rax+rax*1+0x0]
  421ea0:	mov    esi,ebx
  421ea2:	jmp    0x421d07
  421ea7:	nop    WORD PTR [rax+rax*1+0x0]
  421eb0:	lea    rdx,[rip+0x15a89]        # 0x437940
  421eb7:	lea    rcx,[rip+0x15aa2]        # 0x437960
  421ebe:	mov    r8d,0x1a7
  421ec4:	call   0x4291e0
  421ec9:	jmp    0x421cea
  421ece:	xchg   ax,ax
  421ed0:	lea    rdx,[rip+0x15a69]        # 0x437940
  421ed7:	lea    rcx,[rip+0x15a76]        # 0x437954
  421ede:	mov    r8d,0x1a6
  421ee4:	call   0x4291e0
  421ee9:	jmp    0x421ce2
  421eee:	xchg   ax,ax
  421ef0:	movsx  eax,WORD PTR [rsp+0x4a]
  421ef5:	test   al,0x1
  421ef7:	jne    0x421f3c
  421ef9:	cmp    WORD PTR [rsp+0x5a],0x0
  421eff:	je     0x421df7
  421f05:	or     ah,0x80
  421f08:	jmp    0x421df7
  421f0d:	nop    DWORD PTR [rax]
  421f10:	lea    r8,[rip+0x15ac1]        # 0x4379d8
  421f17:	lea    rcx,[rip+0x15a22]        # 0x437940
  421f1e:	mov    edx,0x1ff4
  421f23:	call   0x423fa0
  421f28:	mov    eax,0xffffffff
  421f2d:	jmp    0x421df7
  421f32:	mov    eax,0x300
  421f37:	jmp    0x421df7
  421f3c:	mov    ecx,0x2746
  421f41:	call   QWORD PTR [rip+0x1dd85]        # 0x43fccc
  421f47:	mov    eax,0xffffffff
  421f4c:	jmp    0x421df7
  421f51:	mov    DWORD PTR [rsp+0x38],r11d
  421f56:	call   QWORD PTR [rip+0x1dd68]        # 0x43fcc4
  421f5c:	mov    ecx,eax
  421f5e:	call   0x421c10
  421f63:	mov    rbx,rax
  421f66:	mov    rax,QWORD PTR [rip+0x16c43]        # 0x438bb0
  421f6d:	mov    r11d,DWORD PTR [rsp+0x38]
  421f72:	mov    edx,DWORD PTR [rax]
  421f74:	test   edx,edx
  421f76:	jne    0x421f9f
  421f78:	lea    rax,[rip+0x15d81]        # 0x437d00
  421f7f:	cmp    rbx,rax
  421f82:	je     0x421f97
  421f84:	mov    DWORD PTR [rsp+0x38],r11d
  421f89:	mov    rcx,rbx
  421f8c:	call   QWORD PTR [rip+0x1d9ca]        # 0x43f95c
  421f92:	mov    r11d,DWORD PTR [rsp+0x38]
  421f97:	mov    eax,r11d
  421f9a:	jmp    0x421df7
  421f9f:	call   QWORD PTR [rip+0x1dd1f]        # 0x43fcc4
  421fa5:	lea    r8,[rip+0x159cc]        # 0x437978
  421fac:	lea    rcx,[rip+0x1598d]        # 0x437940
  421fb3:	mov    r9d,eax
  421fb6:	mov    QWORD PTR [rsp+0x20],rbx
  421fbb:	mov    edx,0x1e42
  421fc0:	call   0x423fa0
  421fc5:	mov    r11d,DWORD PTR [rsp+0x38]
  421fca:	jmp    0x421f78
  421fcc:	nop    DWORD PTR [rax+0x0]
  421fd0:	push   r15
  421fd2:	push   r14
  421fd4:	push   r13
  421fd6:	push   r12
  421fd8:	push   rbp
  421fd9:	push   rdi
  421fda:	push   rsi
  421fdb:	push   rbx
  421fdc:	sub    rsp,0x48
  421fe0:	test   rdx,rdx
  421fe3:	sete   r9b
  421fe7:	test   r8d,r8d
  421fea:	setle  al
  421fed:	or     r9b,al
  421ff0:	jne    0x422110
  421ff6:	test   rcx,rcx
  421ff9:	je     0x422110
  421fff:	mov    rbp,QWORD PTR [rip+0x1dd5e]        # 0x43fd64
  422006:	mov    r12,QWORD PTR [rip+0x1dcb7]        # 0x43fcc4
  42200d:	lea    r14,[rsp+0x30]
  422012:	mov    edi,r8d
  422015:	mov    rsi,rdx
  422018:	mov    rbx,rcx
  42201b:	mov    r13,rbp
  42201e:	mov    r15,r12
  422021:	mov    r8d,DWORD PTR [rbx+0x158]
  422028:	mov    edx,0x300
  42202d:	mov    rcx,rbx
  422030:	call   0x421cc0
  422035:	cmp    eax,0x0
  422038:	jle    0x422070
  42203a:	test   ah,0x80
  42203d:	jne    0x4220b0
  42203f:	xor    r9d,r9d
  422042:	mov    rdx,rsi
  422045:	mov    rcx,QWORD PTR [rbx+0x10]
  422049:	mov    r8d,edi
  42204c:	call   rbp
  42204e:	test   eax,eax
  422050:	mov    edx,eax
  422052:	jle    0x422120
  422058:	mov    eax,edx
  42205a:	add    rsp,0x48
  42205e:	pop    rbx
  42205f:	pop    rsi
  422060:	pop    rdi
  422061:	pop    rbp
  422062:	pop    r12
  422064:	pop    r13
  422066:	pop    r14
  422068:	pop    r15
  42206a:	ret    
  42206b:	nop    DWORD PTR [rax+rax*1+0x0]
  422070:	jne    0x4220e0
  422072:	call   r12
  422075:	mov    rcx,QWORD PTR [rbx+0x28]
  422079:	mov    r9d,eax
  42207c:	mov    r8d,0x4e23
  422082:	mov    rdx,rbx
  422085:	call   0x40a8d0
  42208a:	cmp    eax,0x1
  42208d:	je     0x422021
  42208f:	cmp    DWORD PTR [rbx+0x148],0x5
  422096:	je     0x422110
  422098:	mov    rcx,rbx
  42209b:	call   0x4219b0
  4220a0:	mov    eax,0xffffffff
  4220a5:	jmp    0x42205a
  4220a7:	nop    WORD PTR [rax+rax*1+0x0]
  4220b0:	xor    r9d,r9d
  4220b3:	mov    rcx,QWORD PTR [rbx+0x20]
  4220b7:	mov    r8d,0x10
  4220bd:	mov    rdx,r14
  4220c0:	call   r13
  4220c3:	movzx  eax,BYTE PTR [rbx+0x14c]
  4220ca:	cmp    al,0x1
  4220cc:	jne    0x422021
  4220d2:	mov    rcx,rbx
  4220d5:	call   0x4248d0
  4220da:	jmp    0x422021
  4220df:	nop
  4220e0:	call   r15
  4220e3:	cmp    eax,0x2733
  4220e8:	je     0x422021
  4220ee:	call   r15
  4220f1:	mov    rcx,rbx
  4220f4:	mov    esi,eax
  4220f6:	call   0x421b00
  4220fb:	mov    rcx,QWORD PTR [rbx+0x28]
  4220ff:	mov    r9d,esi
  422102:	mov    r8d,0x4e24
  422108:	mov    rdx,rbx
  42210b:	call   0x40a8d0
  422110:	mov    eax,0xffffffff
  422115:	jmp    0x42205a
  42211a:	nop    WORD PTR [rax+rax*1+0x0]
  422120:	mov    DWORD PTR [rsp+0x28],eax
  422124:	call   QWORD PTR [rip+0x1db9a]        # 0x43fcc4
  42212a:	cmp    eax,0x2733
  42212f:	mov    edx,DWORD PTR [rsp+0x28]
  422133:	jne    0x422142
  422135:	mov    ecx,edx
  422137:	shr    ecx,0x1f
  42213a:	test   cl,cl
  42213c:	jne    0x422021
  422142:	mov    rcx,rbx
  422145:	mov    DWORD PTR [rsp+0x2c],eax
  422149:	mov    DWORD PTR [rsp+0x28],edx
  42214d:	call   0x421b00
  422152:	mov    edx,DWORD PTR [rsp+0x28]
  422156:	mov    eax,DWORD PTR [rsp+0x2c]
  42215a:	mov    r9d,0x0
  422160:	mov    rcx,QWORD PTR [rbx+0x28]
  422164:	test   edx,edx
  422166:	cmovne r9d,eax
  42216a:	cmp    edx,0x1
  42216d:	mov    rdx,rbx
  422170:	sbb    eax,eax
  422172:	and    eax,0xd
  422175:	lea    r8d,[rax+0x4e24]
  42217c:	call   0x40a8d0
  422181:	mov    edx,0xffffffff
  422186:	jmp    0x422058
  42218b:	nop    DWORD PTR [rax+rax*1+0x0]
  422190:	sub    rsp,0x28
  422194:	mov    rax,QWORD PTR [rcx+0xb0]
  42219b:	test   rax,rax
  42219e:	je     0x4221b0
  4221a0:	movsxd r8,r8d
  4221a3:	mov    rcx,rax
  4221a6:	call   0x426cf0
  4221ab:	add    rsp,0x28
  4221af:	ret    
  4221b0:	add    rsp,0x28
  4221b4:	jmp    0x421fd0
  4221b9:	nop    DWORD PTR [rax+0x0]
  4221c0:	push   r15
  4221c2:	push   r14
  4221c4:	push   r13
  4221c6:	push   r12
  4221c8:	push   rbp
  4221c9:	push   rdi
  4221ca:	push   rsi
  4221cb:	push   rbx
  4221cc:	sub    rsp,0xf8
  4221d3:	mov    rbp,QWORD PTR [rsp+0x160]
  4221db:	mov    rsi,rcx
  4221de:	mov    rbx,rdx
  4221e1:	mov    r13d,r8d
  4221e4:	mov    r12d,r9d
  4221e7:	xor    r8d,r8d
  4221ea:	mov    DWORD PTR [rbp+0x0],0x0
  4221f1:	mov    ecx,DWORD PTR [rdx+0x4]
  4221f4:	mov    edx,0x1
  4221f9:	call   QWORD PTR [rip+0x1db8d]        # 0x43fd8c
  4221ff:	cmp    rax,0xffffffffffffffff
  422203:	mov    QWORD PTR [rsi+0x10],rax
  422207:	je     0x4224f0
  42220d:	lea    r14,[rsp+0x64]
  422212:	mov    r8d,0x8
  422218:	mov    edx,0xffff
  42221d:	mov    rcx,rax
  422220:	mov    rdi,QWORD PTR [rip+0x1db5d]        # 0x43fd84
  422227:	mov    DWORD PTR [rsi+0x148],0x0
  422231:	mov    r9,r14
  422234:	mov    DWORD PTR [rsp+0x64],0x1
  42223c:	mov    DWORD PTR [rsp+0x20],0x4
  422244:	call   rdi
  422246:	mov    r9,r14
  422249:	mov    DWORD PTR [rsp+0x64],0x1
  422251:	mov    rcx,QWORD PTR [rsi+0x10]
  422255:	mov    DWORD PTR [rsp+0x20],0x4
  42225d:	mov    r8d,0x1
  422263:	mov    edx,0x6
  422268:	call   rdi
  42226a:	mov    rax,QWORD PTR [rip+0x1d6eb]        # 0x43f95c
  422271:	mov    r15,QWORD PTR [rip+0x16938]        # 0x438bb0
  422278:	lea    r14,[rsp+0x70]
  42227d:	mov    QWORD PTR [rsp+0x48],rax
  422282:	mov    rax,QWORD PTR [rip+0x1da3b]        # 0x43fcc4
  422289:	mov    QWORD PTR [rsp+0x40],rax
  42228e:	jmp    0x4222d1
  422290:	mov    DWORD PTR [rbp+0x0],0x0
  422297:	mov    r10d,DWORD PTR [r15]
  42229a:	test   r10d,r10d
  42229d:	jne    0x422400
  4222a3:	test   r12d,r12d
  4222a6:	mov    edi,0x15f90
  4222ab:	cmovne edi,r12d
  4222af:	call   0x421a40
  4222b4:	test   eax,eax
  4222b6:	mov    DWORD PTR [rbp+0x0],eax
  4222b9:	je     0x422333
  4222bb:	mov    rcx,rsi
  4222be:	mov    edi,0x4e5a
  4222c3:	call   0x421b00
  4222c8:	mov    rbx,QWORD PTR [rbx+0x28]
  4222cc:	test   rbx,rbx
  4222cf:	je     0x422305
  4222d1:	mov    edx,r13d
  4222d4:	mov    rcx,rbx
  4222d7:	call   0x421960
  4222dc:	mov    rcx,rbx
  4222df:	mov    r8d,0x80
  4222e5:	mov    rdx,r14
  4222e8:	call   0x421a80
  4222ed:	mov    rcx,QWORD PTR [rsi+0x10]
  4222f1:	cmp    rcx,0xffffffffffffffff
  4222f5:	jne    0x422290
  4222f7:	mov    rbx,QWORD PTR [rbx+0x28]
  4222fb:	mov    edi,0x4e29
  422300:	test   rbx,rbx
  422303:	jne    0x4222d1
  422305:	mov    rcx,rsi
  422308:	call   0x421b00
  42230d:	mov    r11d,DWORD PTR [r15]
  422310:	test   r11d,r11d
  422313:	je     0x4223aa
  422319:	lea    r8,[rip+0x1572b]        # 0x437a4b
  422320:	lea    rcx,[rip+0x15619]        # 0x437940
  422327:	mov    edx,0x1522
  42232c:	call   0x423fa0
  422331:	jmp    0x4223aa
  422333:	mov    rdx,QWORD PTR [rbx+0x20]
  422337:	mov    rcx,QWORD PTR [rsi+0x10]
  42233b:	mov    r8d,DWORD PTR [rbx+0x10]
  42233f:	call   QWORD PTR [rip+0x1d9b7]        # 0x43fcfc
  422345:	test   eax,eax
  422347:	jne    0x422440
  42234d:	mov    r9d,DWORD PTR [r15]
  422350:	test   r9d,r9d
  422353:	jne    0x422534
  422359:	lea    rax,[rsp+0x68]
  42235e:	mov    DWORD PTR [rsp+0x68],0x4
  422366:	mov    DWORD PTR [rsp+0x6c],0x0
  42236e:	mov    rcx,QWORD PTR [rsi+0x10]
  422372:	lea    r9,[rsp+0x6c]
  422377:	mov    r8d,0x1007
  42237d:	mov    QWORD PTR [rsp+0x20],rax
  422382:	mov    edx,0xffff
  422387:	call   QWORD PTR [rip+0x1d9a7]        # 0x43fd34
  42238d:	test   eax,eax
  42238f:	jne    0x4224b0
  422395:	mov    ecx,DWORD PTR [rsp+0x6c]
  422399:	test   ecx,ecx
  42239b:	jne    0x4223c0
  42239d:	mov    eax,DWORD PTR [r15]
  4223a0:	test   eax,eax
  4223a2:	jne    0x42257b
  4223a8:	xor    edi,edi
  4223aa:	mov    eax,edi
  4223ac:	add    rsp,0xf8
  4223b3:	pop    rbx
  4223b4:	pop    rsi
  4223b5:	pop    rdi
  4223b6:	pop    rbp
  4223b7:	pop    r12
  4223b9:	pop    r13
  4223bb:	pop    r14
  4223bd:	pop    r15
  4223bf:	ret    
  4223c0:	mov    DWORD PTR [rbp+0x0],ecx
  4223c3:	call   0x421c10
  4223c8:	mov    edx,DWORD PTR [r15]
  4223cb:	test   edx,edx
  4223cd:	jne    0x4225c4
  4223d3:	lea    rdx,[rip+0x15926]        # 0x437d00
  4223da:	cmp    rax,rdx
  4223dd:	je     0x4222f7
  4223e3:	mov    rcx,rax
  4223e6:	mov    edi,0x4e29
  4223eb:	call   QWORD PTR [rip+0x1d56b]        # 0x43f95c
  4223f1:	jmp    0x4222c8
  4223f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422400:	movzx  eax,WORD PTR [rsi]
  422403:	lea    rcx,[rip+0x15536]        # 0x437940
  42240a:	lea    r8,[rip+0x15657]        # 0x437a68
  422411:	mov    DWORD PTR [rsp+0x20],r13d
  422416:	mov    r9,r14
  422419:	movzx  edx,al
  42241c:	movzx  eax,ah
  42241f:	mov    DWORD PTR [rsp+0x30],edx
  422423:	mov    DWORD PTR [rsp+0x28],eax
  422427:	mov    edx,0xd85
  42242c:	call   0x423fa0
  422431:	mov    rcx,QWORD PTR [rsi+0x10]
  422435:	jmp    0x4222a3
  42243a:	nop    WORD PTR [rax+rax*1+0x0]
  422440:	mov    rax,QWORD PTR [rsp+0x40]
  422445:	call   rax
  422447:	mov    DWORD PTR [rbp+0x0],eax
  42244a:	mov    ecx,eax
  42244c:	mov    DWORD PTR [rsp+0x50],eax
  422450:	call   0x421c10
  422455:	mov    r8d,DWORD PTR [r15]
  422458:	test   r8d,r8d
  42245b:	jne    0x422551
  422461:	lea    rdx,[rip+0x15898]        # 0x437d00
  422468:	cmp    rax,rdx
  42246b:	je     0x422476
  42246d:	mov    rcx,rax
  422470:	call   QWORD PTR [rip+0x1d4e6]        # 0x43f95c
  422476:	cmp    DWORD PTR [rsp+0x50],0x2733
  42247e:	jne    0x4222f7
  422484:	mov    DWORD PTR [rbp+0x0],0x274c
  42248b:	mov    r8d,edi
  42248e:	mov    edx,0x10
  422493:	mov    rcx,rsi
  422496:	call   0x421cc0
  42249b:	test   eax,eax
  42249d:	je     0x4222f7
  4224a3:	jmp    0x422359
  4224a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4224b0:	call   QWORD PTR [rip+0x1d80e]        # 0x43fcc4
  4224b6:	mov    ecx,eax
  4224b8:	mov    DWORD PTR [rbp+0x0],eax
  4224bb:	call   0x421c10
  4224c0:	mov    ecx,DWORD PTR [r15]
  4224c3:	test   ecx,ecx
  4224c5:	jne    0x42259a
  4224cb:	lea    rdx,[rip+0x1582e]        # 0x437d00
  4224d2:	cmp    rax,rdx
  4224d5:	je     0x4222f7
  4224db:	mov    rcx,rax
  4224de:	mov    edi,0x4e29
  4224e3:	mov    rax,QWORD PTR [rsp+0x48]
  4224e8:	call   rax
  4224ea:	jmp    0x4222c8
  4224ef:	nop
  4224f0:	call   QWORD PTR [rip+0x1d7ce]        # 0x43fcc4
  4224f6:	mov    DWORD PTR [rbp+0x0],eax
  4224f9:	mov    ecx,eax
  4224fb:	call   0x421c10
  422500:	mov    rdx,QWORD PTR [rip+0x166a9]        # 0x438bb0
  422507:	mov    ebx,DWORD PTR [rdx]
  422509:	test   ebx,ebx
  42250b:	jne    0x4225ee
  422511:	lea    rdx,[rip+0x157e8]        # 0x437d00
  422518:	mov    edi,0x4e28
  42251d:	cmp    rax,rdx
  422520:	je     0x4223aa
  422526:	mov    rcx,rax
  422529:	call   QWORD PTR [rip+0x1d42d]        # 0x43f95c
  42252f:	jmp    0x4223aa
  422534:	lea    r8,[rip+0x1555b]        # 0x437a96
  42253b:	lea    rcx,[rip+0x153fe]        # 0x437940
  422542:	mov    edx,0xee6
  422547:	call   0x423fa0
  42254c:	jmp    0x422359
  422551:	lea    r8,[rip+0x15558]        # 0x437ab0
  422558:	lea    rcx,[rip+0x153e1]        # 0x437940
  42255f:	mov    r9,rax
  422562:	mov    edx,0xf22
  422567:	mov    QWORD PTR [rsp+0x58],rax
  42256c:	call   0x423fa0
  422571:	mov    rax,QWORD PTR [rsp+0x58]
  422576:	jmp    0x422461
  42257b:	lea    r8,[rip+0x1558f]        # 0x437b11
  422582:	lea    rcx,[rip+0x153b7]        # 0x437940
  422589:	mov    edx,0x1576
  42258e:	xor    edi,edi
  422590:	call   0x423fa0
  422595:	jmp    0x4223aa
  42259a:	lea    r8,[rip+0x1553a]        # 0x437adb
  4225a1:	lea    rcx,[rip+0x15398]        # 0x437940
  4225a8:	mov    r9,rax
  4225ab:	mov    edx,0x10f2
  4225b0:	mov    QWORD PTR [rsp+0x50],rax
  4225b5:	call   0x423fa0
  4225ba:	mov    rax,QWORD PTR [rsp+0x50]
  4225bf:	jmp    0x4224cb
  4225c4:	lea    r8,[rip+0x1552a]        # 0x437af5
  4225cb:	lea    rcx,[rip+0x1536e]        # 0x437940
  4225d2:	mov    r9,rax
  4225d5:	mov    edx,0x1152
  4225da:	mov    QWORD PTR [rsp+0x50],rax
  4225df:	call   0x423fa0
  4225e4:	mov    rax,QWORD PTR [rsp+0x50]
  4225e9:	jmp    0x4223d3
  4225ee:	lea    r8,[rip+0x1543b]        # 0x437a30
  4225f5:	lea    rcx,[rip+0x15344]        # 0x437940
  4225fc:	mov    r9,rax
  4225ff:	mov    edx,0x1292
  422604:	mov    QWORD PTR [rsp+0x40],rax
  422609:	call   0x423fa0
  42260e:	mov    rax,QWORD PTR [rsp+0x40]
  422613:	jmp    0x422511
  422618:	nop    DWORD PTR [rax+rax*1+0x0]
  422620:	push   r15
  422622:	push   r14
  422624:	push   r13
  422626:	push   r12
  422628:	push   rbp
  422629:	push   rdi
  42262a:	push   rsi
  42262b:	push   rbx
  42262c:	sub    rsp,0x48
  422630:	test   rcx,rcx
  422633:	mov    rbx,rcx
  422636:	mov    rbp,rdx
  422639:	mov    rdi,r8
  42263c:	je     0x422830
  422642:	test   rdx,rdx
  422645:	je     0x422830
  42264b:	test   rdi,rdi
  42264e:	je     0x422863
  422654:	mov    r12,QWORD PTR [rip+0x1d669]        # 0x43fcc4
  42265b:	xor    esi,esi
  42265d:	mov    r14,QWORD PTR [rip+0x1654c]        # 0x438bb0
  422664:	mov    r13,QWORD PTR [rip+0x1d709]        # 0x43fd74
  42266b:	mov    QWORD PTR [rsp+0x38],r12
  422670:	mov    QWORD PTR [rsp+0x30],r12
  422675:	jmp    0x4226af
  422677:	nop    WORD PTR [rax+rax*1+0x0]
  422680:	mov    r8d,edi
  422683:	xor    r9d,r9d
  422686:	lea    rdx,[rbp+rsi*1+0x0]
  42268b:	sub    r8d,esi
  42268e:	mov    rcx,QWORD PTR [rbx+0x10]
  422692:	call   r13
  422695:	test   eax,eax
  422697:	mov    r15d,eax
  42269a:	jle    0x422720
  4226a0:	movsxd rdx,eax
  4226a3:	add    rsi,rdx
  4226a6:	cmp    rsi,rdi
  4226a9:	jae    0x422850
  4226af:	mov    r8d,DWORD PTR [rbx+0x158]
  4226b6:	mov    edx,0x10
  4226bb:	mov    rcx,rbx
  4226be:	call   0x421cc0
  4226c3:	cmp    eax,0x0
  4226c6:	jg     0x422680
  4226c8:	jne    0x4227b0
  4226ce:	mov    eax,DWORD PTR [r14]
  4226d1:	test   eax,eax
  4226d3:	jne    0x422810
  4226d9:	call   r12
  4226dc:	mov    rcx,QWORD PTR [rbx+0x28]
  4226e0:	mov    r9d,eax
  4226e3:	mov    r8d,0x4e23
  4226e9:	mov    rdx,rbx
  4226ec:	call   0x40a8d0
  4226f1:	cmp    eax,0x1
  4226f4:	je     0x4226a6
  4226f6:	cmp    DWORD PTR [rbx+0x148],0x5
  4226fd:	mov    eax,0xffffffff
  422702:	je     0x422852
  422708:	mov    rcx,rbx
  42270b:	mov    DWORD PTR [rsp+0x30],eax
  42270f:	call   0x4219b0
  422714:	mov    eax,DWORD PTR [rsp+0x30]
  422718:	jmp    0x422852
  42271d:	nop    DWORD PTR [rax]
  422720:	mov    rax,QWORD PTR [rsp+0x30]
  422725:	call   rax
  422727:	cmp    eax,0x2733
  42272c:	je     0x4226a6
  422732:	test   r15d,r15d
  422735:	je     0x4226a6
  42273b:	mov    ecx,eax
  42273d:	mov    DWORD PTR [rsp+0x30],eax
  422741:	call   0x421c10
  422746:	mov    rdx,QWORD PTR [rip+0x16463]        # 0x438bb0
  42274d:	mov    r10d,DWORD PTR [rsp+0x30]
  422752:	mov    ecx,DWORD PTR [rdx]
  422754:	test   ecx,ecx
  422756:	jne    0x422867
  42275c:	lea    rdx,[rip+0x1559d]        # 0x437d00
  422763:	cmp    rax,rdx
  422766:	je     0x42277b
  422768:	mov    DWORD PTR [rsp+0x30],r10d
  42276d:	mov    rcx,rax
  422770:	call   QWORD PTR [rip+0x1d1e6]        # 0x43f95c
  422776:	mov    r10d,DWORD PTR [rsp+0x30]
  42277b:	mov    rcx,rbx
  42277e:	mov    DWORD PTR [rsp+0x30],r10d
  422783:	call   0x421b00
  422788:	mov    r10d,DWORD PTR [rsp+0x30]
  42278d:	mov    rcx,QWORD PTR [rbx+0x28]
  422791:	mov    r8d,0x4e26
  422797:	mov    rdx,rbx
  42279a:	mov    r9d,r10d
  42279d:	call   0x40a8d0
  4227a2:	mov    eax,0xffffffff
  4227a7:	jmp    0x422852
  4227ac:	nop    DWORD PTR [rax+0x0]
  4227b0:	mov    rax,QWORD PTR [rsp+0x38]
  4227b5:	call   rax
  4227b7:	cmp    eax,0x2733
  4227bc:	je     0x4226a6
  4227c2:	mov    ecx,eax
  4227c4:	mov    DWORD PTR [rsp+0x30],eax
  4227c8:	call   0x421c10
  4227cd:	mov    rsi,rax
  4227d0:	mov    rax,QWORD PTR [rip+0x163d9]        # 0x438bb0
  4227d7:	mov    r10d,DWORD PTR [rsp+0x30]
  4227dc:	mov    edx,DWORD PTR [rax]
  4227de:	test   edx,edx
  4227e0:	jne    0x42289b
  4227e6:	lea    rax,[rip+0x15513]        # 0x437d00
  4227ed:	cmp    rsi,rax
  4227f0:	je     0x42277b
  4227f2:	mov    DWORD PTR [rsp+0x30],r10d
  4227f7:	mov    rcx,rsi
  4227fa:	call   QWORD PTR [rip+0x1d15c]        # 0x43f95c
  422800:	mov    r10d,DWORD PTR [rsp+0x30]
  422805:	jmp    0x42277b
  42280a:	nop    WORD PTR [rax+rax*1+0x0]
  422810:	lea    r8,[rip+0x15359]        # 0x437b70
  422817:	lea    rcx,[rip+0x15122]        # 0x437940
  42281e:	mov    edx,0x3354
  422823:	call   0x423fa0
  422828:	jmp    0x4226d9
  42282d:	nop    DWORD PTR [rax]
  422830:	lea    rdx,[rip+0x15109]        # 0x437940
  422837:	lea    rcx,[rip+0x152f0]        # 0x437b2e
  42283e:	mov    r8d,0x314
  422844:	call   0x4291e0
  422849:	jmp    0x42264b
  42284e:	xchg   ax,ax
  422850:	mov    eax,esi
  422852:	add    rsp,0x48
  422856:	pop    rbx
  422857:	pop    rsi
  422858:	pop    rdi
  422859:	pop    rbp
  42285a:	pop    r12
  42285c:	pop    r13
  42285e:	pop    r14
  422860:	pop    r15
  422862:	ret    
  422863:	xor    eax,eax
  422865:	jmp    0x422852
  422867:	lea    r8,[rip+0x152ce]        # 0x437b3c
  42286e:	lea    rcx,[rip+0x150cb]        # 0x437940
  422875:	mov    QWORD PTR [rsp+0x20],rax
  42287a:	mov    r9d,r10d
  42287d:	mov    edx,0x2574
  422882:	mov    QWORD PTR [rsp+0x38],rax
  422887:	call   0x423fa0
  42288c:	mov    rax,QWORD PTR [rsp+0x38]
  422891:	mov    r10d,DWORD PTR [rsp+0x30]
  422896:	jmp    0x42275c
  42289b:	lea    r8,[rip+0x152b3]        # 0x437b55
  4228a2:	lea    rcx,[rip+0x15097]        # 0x437940
  4228a9:	mov    r9d,r10d
  4228ac:	mov    QWORD PTR [rsp+0x20],rsi
  4228b1:	mov    edx,0x32d4
  4228b6:	call   0x423fa0
  4228bb:	mov    r10d,DWORD PTR [rsp+0x30]
  4228c0:	jmp    0x4227e6
  4228c5:	nop
  4228c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4228d0:	sub    rsp,0x28
  4228d4:	mov    rax,QWORD PTR [rcx+0xb0]
  4228db:	movsxd r8,r8d
  4228de:	test   rax,rax
  4228e1:	je     0x4228f0
  4228e3:	mov    rcx,rax
  4228e6:	call   0x426ce8
  4228eb:	add    rsp,0x28
  4228ef:	ret    
  4228f0:	add    rsp,0x28
  4228f4:	jmp    0x422620
  4228f9:	nop    DWORD PTR [rax+0x0]
  422900:	push   r15
  422902:	push   r14
  422904:	mov    eax,0x40e8
  422909:	push   r13
  42290b:	push   r12
  42290d:	push   rbp
  42290e:	push   rdi
  42290f:	push   rsi
  422910:	push   rbx
  422911:	call   0x428410
  422916:	sub    rsp,rax
  422919:	mov    rbx,rdx
  42291c:	lea    rsi,[rsp+0x60]
  422921:	mov    edx,0x59a
  422926:	mov    r15,rcx
  422929:	mov    rcx,rbx
  42292c:	call   0x421960
  422931:	mov    r8d,0x80
  422937:	mov    rdx,rsi
  42293a:	mov    rcx,rbx
  42293d:	call   0x421a80
  422942:	mov    rax,QWORD PTR [rip+0x16267]        # 0x438bb0
  422949:	mov    edi,DWORD PTR [rax]
  42294b:	test   edi,edi
  42294d:	jne    0x422c3b
  422953:	xor    r8d,r8d
  422956:	mov    ecx,DWORD PTR [rbx+0x4]
  422959:	mov    edx,0x2
  42295e:	call   QWORD PTR [rip+0x1d428]        # 0x43fd8c
  422964:	cmp    rax,0xffffffffffffffff
  422968:	mov    QWORD PTR [rsp+0x30],rax
  42296d:	je     0x422bef
  422973:	mov    rcx,QWORD PTR [rsp+0x30]
  422978:	call   0x421a40
  42297d:	test   eax,eax
  42297f:	jne    0x422c2b
  422985:	mov    r13,QWORD PTR [rip+0x1d3f0]        # 0x43fd7c
  42298c:	mov    rsi,QWORD PTR [rip+0x1d3d1]        # 0x43fd64
  422993:	lea    r12,[rsp+0xe0]
  42299b:	mov    rdi,QWORD PTR [rip+0x1d322]        # 0x43fcc4
  4229a2:	lea    r14,[rsp+0x50]
  4229a7:	xor    ebp,ebp
  4229a9:	nop    DWORD PTR [rax+0x0]
  4229b0:	mov    rax,QWORD PTR [rbx+0x10]
  4229b4:	xor    r9d,r9d
  4229b7:	mov    BYTE PTR [rsp+0xe0],0x3
  4229bf:	mov    r8d,0x1
  4229c5:	mov    rdx,r12
  4229c8:	mov    rcx,QWORD PTR [rsp+0x30]
  4229cd:	mov    DWORD PTR [rsp+0x28],eax
  4229d1:	mov    rax,QWORD PTR [rbx+0x20]
  4229d5:	mov    QWORD PTR [rsp+0x20],rax
  4229da:	call   r13
  4229dd:	test   eax,eax
  4229df:	js     0x422a7a
  4229e5:	mov    rax,QWORD PTR [rsp+0x30]
  4229ea:	xor    r10d,r10d
  4229ed:	mov    r9d,0x300
  4229f3:	mov    r8d,0x3e8
  4229f9:	mov    edx,0x1
  4229fe:	mov    rcx,r14
  422a01:	mov    WORD PTR [rsp+0x58],r9w
  422a07:	mov    WORD PTR [rsp+0x5a],r10w
  422a0d:	mov    QWORD PTR [rsp+0x50],rax
  422a12:	call   0x426100
  422a17:	test   eax,eax
  422a19:	js     0x422ab0
  422a1f:	jne    0x422a50
  422a21:	mov    rax,QWORD PTR [rip+0x16188]        # 0x438bb0
  422a28:	mov    r8d,DWORD PTR [rax]
  422a2b:	test   r8d,r8d
  422a2e:	jne    0x422bcf
  422a34:	mov    eax,0x1
  422a39:	add    ebp,0x1
  422a3c:	test   al,al
  422a3e:	je     0x422a7a
  422a40:	cmp    ebp,0xf
  422a43:	jle    0x4229b0
  422a49:	jmp    0x422a7a
  422a4b:	nop    DWORD PTR [rax+rax*1+0x0]
  422a50:	xor    r9d,r9d
  422a53:	mov    r8d,0x3fff
  422a59:	mov    rdx,r12
  422a5c:	mov    rcx,QWORD PTR [rsp+0x30]
  422a61:	call   rsi
  422a63:	cmp    eax,0x3
  422a66:	jg     0x422a70
  422a68:	test   eax,eax
  422a6a:	sete   al
  422a6d:	jmp    0x422a39
  422a6f:	nop
  422a70:	cmp    BYTE PTR [rsp+0xe0],0x5
  422a78:	je     0x422abe
  422a7a:	mov    rcx,QWORD PTR [rsp+0x30]
  422a7f:	call   QWORD PTR [rip+0x1d26f]        # 0x43fcf4
  422a85:	mov    rax,QWORD PTR [rip+0x16124]        # 0x438bb0
  422a8c:	mov    r11d,DWORD PTR [rax]
  422a8f:	test   r11d,r11d
  422a92:	jne    0x422c5b
  422a98:	xor    eax,eax
  422a9a:	add    rsp,0x40e8
  422aa1:	pop    rbx
  422aa2:	pop    rsi
  422aa3:	pop    rdi
  422aa4:	pop    rbp
  422aa5:	pop    r12
  422aa7:	pop    r13
  422aa9:	pop    r14
  422aab:	pop    r15
  422aad:	ret    
  422aae:	xchg   ax,ax
  422ab0:	call   rdi
  422ab2:	cmp    eax,0x2714
  422ab7:	jne    0x422a7a
  422ab9:	jmp    0x422a34
  422abe:	mov    rsi,QWORD PTR [rip+0x160eb]        # 0x438bb0
  422ac5:	mov    edx,0x3b
  422aca:	cdqe   
  422acc:	mov    WORD PTR [rsp+0x40],dx
  422ad1:	mov    BYTE PTR [rsp+rax*1+0xe0],0x0
  422ad9:	mov    ecx,DWORD PTR [rsi]
  422adb:	test   ecx,ecx
  422add:	jne    0x422c7b
  422ae3:	lea    r14,[rsp+0x48]
  422ae8:	lea    r13,[rsp+0x40]
  422aed:	lea    rcx,[r12+0x3]
  422af2:	mov    r8,r14
  422af5:	mov    rdx,r13
  422af8:	call   0x4292a0
  422afd:	test   r15,r15
  422b00:	mov    rbx,rax
  422b03:	setne  BYTE PTR [rsp+0x3f]
  422b08:	nop    DWORD PTR [rax+rax*1+0x0]
  422b10:	test   rbx,rbx
  422b13:	je     0x422a7a
  422b19:	cmp    BYTE PTR [rsp+0x3f],0x0
  422b1e:	je     0x422a7a
  422b24:	lea    rbp,[rip+0x15195]        # 0x437cc0
  422b2b:	xor    r12d,r12d
  422b2e:	xchg   ax,ax
  422b30:	xor    ecx,ecx
  422b32:	mov    r8,r14
  422b35:	mov    rdx,r13
  422b38:	call   0x4292a0
  422b3d:	mov    rdi,QWORD PTR [rbp+0x0]
  422b41:	mov    rcx,rbx
  422b44:	mov    rsi,rax
  422b47:	mov    rdx,rdi
  422b4a:	call   0x4294b0
  422b4f:	test   eax,eax
  422b51:	jne    0x422bb5
  422b53:	test   rsi,rsi
  422b56:	je     0x422ba3
  422b58:	lea    rdx,[rip+0x150c4]        # 0x437c23
  422b5f:	mov    r8,rbx
  422b62:	mov    r9,rsi
  422b65:	mov    rcx,r15
  422b68:	call   0x429598
  422b6d:	xor    ecx,ecx
  422b6f:	mov    r8,r14
  422b72:	mov    rdx,r13
  422b75:	call   0x4292a0
  422b7a:	test   rax,rax
  422b7d:	mov    rbx,rax
  422b80:	je     0x422b10
  422b82:	lea    rdi,[rip+0x150a3]        # 0x437c2c
  422b89:	mov    rsi,rax
  422b8c:	mov    ecx,0xb
  422b91:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  422b93:	je     0x422ba3
  422b95:	add    r12d,0x1
  422b99:	add    rbp,0x8
  422b9d:	cmp    r12d,0x6
  422ba1:	jbe    0x422b30
  422ba3:	mov    rdx,r15
  422ba6:	mov    ecx,0xa
  422bab:	call   0x429590
  422bb0:	jmp    0x422b10
  422bb5:	lea    rdx,[rip+0x15044]        # 0x437c00
  422bbc:	mov    r9,rbx
  422bbf:	mov    r8,rdi
  422bc2:	mov    rcx,r15
  422bc5:	call   0x429598
  422bca:	jmp    0x422b53
  422bcf:	lea    r8,[rip+0x14fe2]        # 0x437bb8
  422bd6:	lea    rcx,[rip+0x14d63]        # 0x437940
  422bdd:	mov    r9d,ebp
  422be0:	mov    edx,0x3b32
  422be5:	call   0x423fa0
  422bea:	jmp    0x422a34
  422bef:	call   QWORD PTR [rip+0x1d0cf]        # 0x43fcc4
  422bf5:	mov    ecx,eax
  422bf7:	call   0x421c10
  422bfc:	mov    rsi,QWORD PTR [rip+0x15fad]        # 0x438bb0
  422c03:	mov    ebx,DWORD PTR [rsi]
  422c05:	test   ebx,ebx
  422c07:	jne    0x422ca0
  422c0d:	lea    rdx,[rip+0x150ec]        # 0x437d00
  422c14:	cmp    rax,rdx
  422c17:	je     0x422a98
  422c1d:	mov    rcx,rax
  422c20:	call   QWORD PTR [rip+0x1cd36]        # 0x43f95c
  422c26:	jmp    0x422a98
  422c2b:	mov    rcx,QWORD PTR [rsp+0x30]
  422c30:	call   QWORD PTR [rip+0x1d0be]        # 0x43fcf4
  422c36:	jmp    0x422a98
  422c3b:	lea    r8,[rip+0x14f59]        # 0x437b9b
  422c42:	lea    rcx,[rip+0x14cf7]        # 0x437940
  422c49:	mov    r9,rsi
  422c4c:	mov    edx,0x3882
  422c51:	call   0x423fa0
  422c56:	jmp    0x422953
  422c5b:	lea    r8,[rip+0x14fd5]        # 0x437c37
  422c62:	lea    rcx,[rip+0x14cd7]        # 0x437940
  422c69:	xor    r9d,r9d
  422c6c:	mov    edx,0x3f82
  422c71:	call   0x423fa0
  422c76:	jmp    0x422a98
  422c7b:	lea    r8,[rip+0x14f69]        # 0x437beb
  422c82:	lea    rcx,[rip+0x14cb7]        # 0x437940
  422c89:	mov    QWORD PTR [rsp+0x20],rax
  422c8e:	mov    r9,r12
  422c91:	mov    edx,0x3ce5
  422c96:	call   0x423d00
  422c9b:	jmp    0x422ae3
  422ca0:	lea    r8,[rip+0x14d89]        # 0x437a30
  422ca7:	lea    rcx,[rip+0x14c92]        # 0x437940
  422cae:	mov    r9,rax
  422cb1:	mov    edx,0x38d2
  422cb6:	mov    QWORD PTR [rsp+0x30],rax
  422cbb:	call   0x423fa0
  422cc0:	mov    rax,QWORD PTR [rsp+0x30]
  422cc5:	jmp    0x422c0d
  422cca:	nop    WORD PTR [rax+rax*1+0x0]
  422cd0:	push   r15
  422cd2:	push   r14
  422cd4:	push   r13
  422cd6:	push   r12
  422cd8:	push   rbp
  422cd9:	push   rdi
  422cda:	push   rsi
  422cdb:	push   rbx
  422cdc:	sub    rsp,0x508
  422ce3:	lea    rbx,[rsp+0x80]
  422ceb:	mov    r12,rcx
  422cee:	mov    r15,rdx
  422cf1:	mov    edx,0x59a
  422cf6:	call   0x421960
  422cfb:	mov    r8d,0x80
  422d01:	mov    rdx,rbx
  422d04:	mov    rcx,r12
  422d07:	call   0x421a80
  422d0c:	mov    rax,QWORD PTR [rip+0x15e9d]        # 0x438bb0
  422d13:	mov    esi,DWORD PTR [rax]
  422d15:	test   esi,esi
  422d17:	jne    0x4230a0
  422d1d:	xor    r8d,r8d
  422d20:	mov    ecx,DWORD PTR [r12+0x4]
  422d25:	mov    edx,0x2
  422d2a:	call   QWORD PTR [rip+0x1d05c]        # 0x43fd8c
  422d30:	cmp    rax,0xffffffffffffffff
  422d34:	mov    rdi,rax
  422d37:	je     0x423030
  422d3d:	mov    rcx,rax
  422d40:	call   0x421a40
  422d45:	test   eax,eax
  422d47:	jne    0x423090
  422d4d:	lea    r14,[rsp+0x100]
  422d55:	xor    esi,esi
  422d57:	mov    r13,QWORD PTR [rip+0x1cd36]        # 0x43fa94
  422d5e:	lea    rax,[r14+0x1]
  422d62:	mov    QWORD PTR [rsp+0x38],rax
  422d67:	lea    rax,[rsp+0x70]
  422d6c:	mov    QWORD PTR [rsp+0x40],rax
  422d71:	lea    rax,[rsp+0x68]
  422d76:	mov    QWORD PTR [rsp+0x48],rax
  422d7b:	jmp    0x422d9f
  422d7d:	nop    DWORD PTR [rax]
  422d80:	mov    rax,QWORD PTR [rip+0x15e29]        # 0x438bb0
  422d87:	mov    r8d,DWORD PTR [rax]
  422d8a:	test   r8d,r8d
  422d8d:	jne    0x423070
  422d93:	add    esi,0x1
  422d96:	cmp    esi,0x10
  422d99:	je     0x422f61
  422d9f:	mov    rcx,QWORD PTR [rsp+0x38]
  422da4:	mov    rdx,r15
  422da7:	mov    r8d,0x3ff
  422dad:	mov    BYTE PTR [rsp+0x100],0x4
  422db5:	call   0x426c20
  422dba:	mov    rdx,r14
  422dbd:	mov    ecx,DWORD PTR [rdx]
  422dbf:	add    rdx,0x4
  422dc3:	lea    eax,[rcx-0x1010101]
  422dc9:	not    ecx
  422dcb:	and    eax,ecx
  422dcd:	and    eax,0x80808080
  422dd2:	je     0x422dbd
  422dd4:	mov    ecx,eax
  422dd6:	shr    ecx,0x10
  422dd9:	test   eax,0x8080
  422dde:	cmove  eax,ecx
  422de1:	lea    rcx,[rdx+0x2]
  422de5:	cmove  rdx,rcx
  422de9:	add    al,al
  422deb:	mov    rax,QWORD PTR [r12+0x10]
  422df0:	sbb    rdx,0x3
  422df4:	mov    rcx,rdi
  422df7:	xor    r9d,r9d
  422dfa:	sub    rdx,r14
  422dfd:	mov    DWORD PTR [rsp+0x28],eax
  422e01:	mov    rax,QWORD PTR [r12+0x20]
  422e06:	lea    r8d,[rdx+0x1]
  422e0a:	mov    rdx,r14
  422e0d:	mov    QWORD PTR [rsp+0x20],rax
  422e12:	call   QWORD PTR [rip+0x1cf64]        # 0x43fd7c
  422e18:	test   eax,eax
  422e1a:	js     0x422f61
  422e20:	mov    rcx,QWORD PTR [rsp+0x40]
  422e25:	xor    r10d,r10d
  422e28:	mov    r9d,0x300
  422e2e:	mov    r8d,0x3e8
  422e34:	mov    edx,0x1
  422e39:	mov    QWORD PTR [rsp+0x70],rdi
  422e3e:	mov    WORD PTR [rsp+0x78],r9w
  422e44:	mov    WORD PTR [rsp+0x7a],r10w
  422e4a:	call   0x426100
  422e4f:	test   eax,eax
  422e51:	js     0x422f50
  422e57:	je     0x422d80
  422e5d:	xor    r9d,r9d
  422e60:	mov    r8d,0x3ff
  422e66:	mov    rdx,r14
  422e69:	mov    rcx,rdi
  422e6c:	call   QWORD PTR [rip+0x1cef2]        # 0x43fd64
  422e72:	cmp    eax,0x3
  422e75:	jle    0x422d93
  422e7b:	cmp    BYTE PTR [rsp+0x100],0x5
  422e83:	jne    0x422d93
  422e89:	mov    rbx,QWORD PTR [rip+0x15d20]        # 0x438bb0
  422e90:	cdqe   
  422e92:	mov    BYTE PTR [rsp+rax*1+0x100],0x0
  422e9a:	mov    ecx,DWORD PTR [rbx]
  422e9c:	test   ecx,ecx
  422e9e:	jne    0x4230f7
  422ea4:	lea    rbx,[r14+0x3]
  422ea8:	xor    ecx,ecx
  422eaa:	xor    eax,eax
  422eac:	mov    QWORD PTR [rsp+0x50],rdi
  422eb1:	mov    DWORD PTR [rsp+0x5c],esi
  422eb5:	mov    edi,ecx
  422eb7:	mov    QWORD PTR [rsp+0x68],rbx
  422ebc:	mov    DWORD PTR [rsp+0x58],0x0
  422ec4:	mov    esi,eax
  422ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422ed0:	mov    edx,0x3b
  422ed5:	mov    rcx,rbx
  422ed8:	call   0x4294b8
  422edd:	test   rax,rax
  422ee0:	je     0x423000
  422ee6:	lea    rdx,[rax+0x1]
  422eea:	mov    QWORD PTR [rsp+0x68],rdx
  422eef:	mov    BYTE PTR [rax],0x0
  422ef2:	cmp    BYTE PTR [rbx],0x0
  422ef5:	je     0x422fb0
  422efb:	mov    rbp,QWORD PTR [rsp+0x68]
  422f00:	mov    edx,0x3b
  422f05:	mov    rcx,rbp
  422f08:	call   0x4294b8
  422f0d:	test   rax,rax
  422f10:	je     0x423000
  422f16:	lea    rdx,[rax+0x1]
  422f1a:	mov    QWORD PTR [rsp+0x68],rdx
  422f1f:	mov    BYTE PTR [rax],0x0
  422f22:	lea    rdx,[rip+0x14d4f]        # 0x437c78
  422f29:	mov    rcx,rbx
  422f2c:	call   r13
  422f2f:	test   eax,eax
  422f31:	jne    0x422f93
  422f33:	mov    rdx,r15
  422f36:	mov    rcx,rbp
  422f39:	call   r13
  422f3c:	test   eax,eax
  422f3e:	jne    0x4230c5
  422f44:	mov    rbx,QWORD PTR [rsp+0x68]
  422f49:	mov    edi,0x1
  422f4e:	jmp    0x422ed0
  422f50:	call   QWORD PTR [rip+0x1cd6e]        # 0x43fcc4
  422f56:	cmp    eax,0x2714
  422f5b:	je     0x422d93
  422f61:	xor    ebx,ebx
  422f63:	mov    rcx,rdi
  422f66:	call   QWORD PTR [rip+0x1cd88]        # 0x43fcf4
  422f6c:	mov    rax,QWORD PTR [rip+0x15c3d]        # 0x438bb0
  422f73:	mov    eax,DWORD PTR [rax]
  422f75:	test   eax,eax
  422f77:	jne    0x4230d7
  422f7d:	mov    eax,ebx
  422f7f:	add    rsp,0x508
  422f86:	pop    rbx
  422f87:	pop    rsi
  422f88:	pop    rdi
  422f89:	pop    rbp
  422f8a:	pop    r12
  422f8c:	pop    r13
  422f8e:	pop    r14
  422f90:	pop    r15
  422f92:	ret    
  422f93:	lea    rdx,[rip+0x14ceb]        # 0x437c85
  422f9a:	mov    rcx,rbx
  422f9d:	call   r13
  422fa0:	test   eax,eax
  422fa2:	je     0x422fc0
  422fa4:	mov    rbx,QWORD PTR [rsp+0x68]
  422fa9:	jmp    0x422ed0
  422fae:	xchg   ax,ax
  422fb0:	mov    rbp,rbx
  422fb3:	jmp    0x422f22
  422fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  422fc0:	mov    rdx,QWORD PTR [rsp+0x48]
  422fc5:	mov    r8d,0xa
  422fcb:	mov    rcx,rbp
  422fce:	call   0x429468
  422fd3:	mov    esi,eax
  422fd5:	lea    eax,[rax-0x1]
  422fd8:	cmp    eax,0xfffe
  422fdd:	ja     0x422fa4
  422fdf:	mov    rbx,QWORD PTR [rsp+0x68]
  422fe4:	mov    eax,0x1
  422fe9:	cmp    BYTE PTR [rbx],0x0
  422fec:	cmovne eax,DWORD PTR [rsp+0x58]
  422ff1:	mov    DWORD PTR [rsp+0x58],eax
  422ff5:	jmp    0x422ed0
  422ffa:	nop    WORD PTR [rax+rax*1+0x0]
  423000:	mov    ebx,esi
  423002:	mov    eax,edi
  423004:	mov    esi,DWORD PTR [rsp+0x5c]
  423008:	mov    rdi,QWORD PTR [rsp+0x50]
  42300d:	mov    QWORD PTR [rsp+0x68],0x0
  423016:	test   eax,eax
  423018:	je     0x422d93
  42301e:	mov    edx,DWORD PTR [rsp+0x58]
  423022:	test   edx,edx
  423024:	je     0x422d93
  42302a:	jmp    0x422f63
  42302f:	nop
  423030:	call   QWORD PTR [rip+0x1cc8e]        # 0x43fcc4
  423036:	mov    ecx,eax
  423038:	call   0x421c10
  42303d:	mov    rsi,QWORD PTR [rip+0x15b6c]        # 0x438bb0
  423044:	mov    r11d,DWORD PTR [rsi]
  423047:	test   r11d,r11d
  42304a:	jne    0x42311c
  423050:	lea    rdx,[rip+0x14ca9]        # 0x437d00
  423057:	xor    ebx,ebx
  423059:	cmp    rax,rdx
  42305c:	je     0x422f7d
  423062:	mov    rcx,rax
  423065:	call   QWORD PTR [rip+0x1c8f1]        # 0x43f95c
  42306b:	jmp    0x422f7d
  423070:	lea    r8,[rip+0x14b41]        # 0x437bb8
  423077:	lea    rcx,[rip+0x148c2]        # 0x437940
  42307e:	mov    r9d,esi
  423081:	mov    edx,0x43b2
  423086:	call   0x423fa0
  42308b:	jmp    0x422d93
  423090:	mov    rcx,rdi
  423093:	xor    ebx,ebx
  423095:	call   QWORD PTR [rip+0x1cc59]        # 0x43fcf4
  42309b:	jmp    0x422f7d
  4230a0:	lea    r8,[rip+0x14bb1]        # 0x437c58
  4230a7:	lea    rcx,[rip+0x14892]        # 0x437940
  4230ae:	mov    QWORD PTR [rsp+0x20],r15
  4230b3:	mov    r9,rbx
  4230b6:	mov    edx,0x40f2
  4230bb:	call   0x423fa0
  4230c0:	jmp    0x422d1d
  4230c5:	mov    ebx,esi
  4230c7:	mov    eax,edi
  4230c9:	mov    esi,DWORD PTR [rsp+0x5c]
  4230cd:	mov    rdi,QWORD PTR [rsp+0x50]
  4230d2:	jmp    0x423016
  4230d7:	lea    r8,[rip+0x14bab]        # 0x437c89
  4230de:	lea    rcx,[rip+0x1485b]        # 0x437940
  4230e5:	mov    r9d,ebx
  4230e8:	mov    edx,0x4832
  4230ed:	call   0x423fa0
  4230f2:	jmp    0x422f7d
  4230f7:	lea    r8,[rip+0x14aed]        # 0x437beb
  4230fe:	lea    rcx,[rip+0x1483b]        # 0x437940
  423105:	mov    QWORD PTR [rsp+0x20],rax
  42310a:	mov    r9,r14
  42310d:	mov    edx,0x45a5
  423112:	call   0x423d00
  423117:	jmp    0x422ea4
  42311c:	lea    r8,[rip+0x1490d]        # 0x437a30
  423123:	lea    rcx,[rip+0x14816]        # 0x437940
  42312a:	mov    r9,rax
  42312d:	mov    edx,0x4142
  423132:	mov    QWORD PTR [rsp+0x38],rax
  423137:	call   0x423fa0
  42313c:	mov    rax,QWORD PTR [rsp+0x38]
  423141:	jmp    0x423050
  423146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423150:	lea    rax,[rip+0x14ba9]        # 0x437d00
  423157:	cmp    rcx,rax
  42315a:	je     0x423170
  42315c:	mov    rax,QWORD PTR [rip+0x1c7f9]        # 0x43f95c
  423163:	rex.W jmp rax
  423166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423170:	repz ret 
  423172:	nop
  423173:	nop
  423174:	nop
  423175:	nop
  423176:	nop
  423177:	nop
  423178:	nop
  423179:	nop
  42317a:	nop
  42317b:	nop
  42317c:	nop
  42317d:	nop
  42317e:	nop
  42317f:	nop
  423180:	push   rdi
  423181:	push   rsi
  423182:	push   rbx
  423183:	sub    rsp,0x20
  423187:	mov    rax,QWORD PTR [rip+0x15a22]        # 0x438bb0
  42318e:	mov    rbx,rcx
  423191:	mov    rsi,rdx
  423194:	mov    rdi,r8
  423197:	mov    eax,DWORD PTR [rax]
  423199:	test   eax,eax
  42319b:	jne    0x4231b5
  42319d:	mov    r8,rdi
  4231a0:	mov    rdx,rsi
  4231a3:	mov    rcx,rbx
  4231a6:	call   0x422620
  4231ab:	cdqe   
  4231ad:	add    rsp,0x20
  4231b1:	pop    rbx
  4231b2:	pop    rsi
  4231b3:	pop    rdi
  4231b4:	ret    
  4231b5:	lea    r8,[rip+0x14b64]        # 0x437d20
  4231bc:	lea    rcx,[rip+0x14b6f]        # 0x437d32
  4231c3:	mov    edx,0x987
  4231c8:	call   0x423fa0
  4231cd:	jmp    0x42319d
  4231cf:	nop
  4231d0:	push   rdi
  4231d1:	push   rsi
  4231d2:	push   rbx
  4231d3:	sub    rsp,0x20
  4231d7:	mov    rax,QWORD PTR [rip+0x159d2]        # 0x438bb0
  4231de:	mov    rbx,rcx
  4231e1:	mov    rsi,rdx
  4231e4:	mov    rdi,r8
  4231e7:	mov    eax,DWORD PTR [rax]
  4231e9:	test   eax,eax
  4231eb:	jne    0x423205
  4231ed:	mov    r8d,edi
  4231f0:	mov    rdx,rsi
  4231f3:	mov    rcx,rbx
  4231f6:	call   0x421fd0
  4231fb:	cdqe   
  4231fd:	add    rsp,0x20
  423201:	pop    rbx
  423202:	pop    rsi
  423203:	pop    rdi
  423204:	ret    
  423205:	lea    r8,[rip+0x14b2c]        # 0x437d38
  42320c:	lea    rcx,[rip+0x14b1f]        # 0x437d32
  423213:	mov    edx,0x817
  423218:	call   0x423fa0
  42321d:	jmp    0x4231ed
  42321f:	nop
  423220:	push   rdi
  423221:	push   rsi
  423222:	push   rbx
  423223:	sub    rsp,0x20
  423227:	mov    rax,QWORD PTR [rip+0x15982]        # 0x438bb0
  42322e:	mov    rsi,rcx
  423231:	mov    rdi,rdx
  423234:	mov    rbx,r8
  423237:	mov    eax,DWORD PTR [rax]
  423239:	test   eax,eax
  42323b:	jne    0x423260
  42323d:	mov    r8,rbx
  423240:	mov    rdx,rdi
  423243:	mov    rcx,rsi
  423246:	call   0x40d260
  42324b:	mov    rax,rbx
  42324e:	add    rsp,0x20
  423252:	pop    rbx
  423253:	pop    rsi
  423254:	pop    rdi
  423255:	ret    
  423256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423260:	lea    r8,[rip+0x14ae3]        # 0x437d4a
  423267:	lea    rcx,[rip+0x14ac4]        # 0x437d32
  42326e:	mov    edx,0x747
  423273:	call   0x423fa0
  423278:	jmp    0x42323d
  42327a:	nop    WORD PTR [rax+rax*1+0x0]
  423280:	push   rdi
  423281:	push   rsi
  423282:	push   rbx
  423283:	sub    rsp,0x20
  423287:	mov    rax,QWORD PTR [rip+0x15922]        # 0x438bb0
  42328e:	mov    rsi,rcx
  423291:	mov    rdi,rdx
  423294:	mov    rbx,r8
  423297:	mov    eax,DWORD PTR [rax]
  423299:	test   eax,eax
  42329b:	jne    0x42333d
  4232a1:	cmp    DWORD PTR [rsi+0xe8],0x8
  4232a8:	jbe    0x4232be
  4232aa:	jmp    0x423333
  4232af:	nop
  4232b0:	jne    0x423304
  4232b2:	mov    rcx,rsi
  4232b5:	call   0x4245f0
  4232ba:	test   eax,eax
  4232bc:	js     0x4232f5
  4232be:	mov    r9d,DWORD PTR [rsi+0xe4]
  4232c5:	mov    eax,DWORD PTR [rsi+0xec]
  4232cb:	sub    eax,r9d
  4232ce:	jns    0x4232b0
  4232d0:	lea    rdx,[rip+0x14a5b]        # 0x437d32
  4232d7:	lea    rcx,[rip+0x14a9c]        # 0x437d7a
  4232de:	mov    r8d,0x62
  4232e4:	call   0x4291e0
  4232e9:	mov    rcx,rsi
  4232ec:	call   0x4245f0
  4232f1:	test   eax,eax
  4232f3:	jns    0x4232be
  4232f5:	mov    rax,0xffffffffffffffff
  4232fc:	add    rsp,0x20
  423300:	pop    rbx
  423301:	pop    rsi
  423302:	pop    rdi
  423303:	ret    
  423304:	cdqe   
  423306:	mov    rdx,r9
  423309:	mov    rcx,rdi
  42330c:	cmp    rax,rbx
  42330f:	cmovbe rbx,rax
  423313:	add    rdx,QWORD PTR [rsi+0xd0]
  42331a:	mov    r8,rbx
  42331d:	call   0x429528
  423322:	add    DWORD PTR [rsi+0xe4],ebx
  423328:	mov    rax,rbx
  42332b:	add    rsp,0x20
  42332f:	pop    rbx
  423330:	pop    rsi
  423331:	pop    rdi
  423332:	ret    
  423333:	mov    rcx,rsi
  423336:	call   0x40d5c0
  42333b:	jmp    0x4232be
  42333d:	lea    r8,[rip+0x14a1e]        # 0x437d62
  423344:	lea    rcx,[rip+0x149e7]        # 0x437d32
  42334b:	mov    edx,0x567
  423350:	call   0x423fa0
  423355:	jmp    0x4232a1
  42335a:	nop    WORD PTR [rax+rax*1+0x0]
  423360:	push   rdi
  423361:	push   rsi
  423362:	push   rbx
  423363:	sub    rsp,0x30
  423367:	mov    rbx,rcx
  42336a:	call   0x426cc8
  42336f:	cmp    QWORD PTR [rax+0x168],0x0
  423377:	mov    rsi,rax
  42337a:	je     0x4233aa
  42337c:	lea    rdx,[rsp+0x20]
  423381:	mov    rcx,rbx
  423384:	call   0x426d58
  423389:	test   eax,eax
  42338b:	js     0x423462
  423391:	mov    edi,DWORD PTR [rsp+0x20]
  423395:	test   edi,edi
  423397:	je     0x4233c0
  423399:	mov    rax,QWORD PTR [rip+0x15810]        # 0x438bb0
  4233a0:	mov    ecx,DWORD PTR [rax]
  4233a2:	test   ecx,ecx
  4233a4:	jne    0x4234a1
  4233aa:	mov    eax,0xffffffd5
  4233af:	add    rsp,0x30
  4233b3:	pop    rbx
  4233b4:	pop    rsi
  4233b5:	pop    rdi
  4233b6:	ret    
  4233b7:	nop    WORD PTR [rax+rax*1+0x0]
  4233c0:	mov    rdx,QWORD PTR [rsi+0x168]
  4233c7:	xor    eax,eax
  4233c9:	test   BYTE PTR [rdx+0xf5],0x4
  4233d0:	je     0x4233af
  4233d2:	lea    rdx,[rsp+0x24]
  4233d7:	mov    rcx,rbx
  4233da:	call   0x426d80
  4233df:	test   rax,rax
  4233e2:	mov    rbx,rax
  4233e5:	je     0x4234c6
  4233eb:	lea    rcx,[rsp+0x28]
  4233f0:	call   0x426c90
  4233f5:	mov    rcx,QWORD PTR [rsp+0x28]
  4233fa:	xor    r8d,r8d
  4233fd:	mov    rdx,rbx
  423400:	call   0x426c98
  423405:	mov    rax,QWORD PTR [rsi+0x168]
  42340c:	mov    rcx,QWORD PTR [rsp+0x28]
  423411:	mov    rdx,QWORD PTR [rax+0x38]
  423415:	add    rdx,0x8
  423419:	call   0x426ca8
  42341e:	mov    rcx,QWORD PTR [rsp+0x28]
  423423:	mov    ebx,eax
  423425:	call   0x426ca0
  42342a:	test   ebx,ebx
  42342c:	mov    eax,edi
  42342e:	jne    0x4233af
  423434:	mov    rax,QWORD PTR [rip+0x15775]        # 0x438bb0
  42343b:	mov    eax,DWORD PTR [rax]
  42343d:	test   eax,eax
  42343f:	je     0x4233aa
  423445:	lea    r8,[rip+0x149a4]        # 0x437df0
  42344c:	lea    rcx,[rip+0x148df]        # 0x437d32
  423453:	mov    edx,0x1942
  423458:	call   0x423fa0
  42345d:	jmp    0x4233aa
  423462:	mov    rdx,QWORD PTR [rip+0x15747]        # 0x438bb0
  423469:	mov    r8d,DWORD PTR [rdx]
  42346c:	test   r8d,r8d
  42346f:	je     0x4233aa
  423475:	mov    ecx,eax
  423477:	call   0x426cd0
  42347c:	lea    r8,[rip+0x14905]        # 0x437d88
  423483:	lea    rcx,[rip+0x148a8]        # 0x437d32
  42348a:	mov    r9,rax
  42348d:	mov    edx,0x1582
  423492:	call   0x423fa0
  423497:	mov    eax,0xffffffd5
  42349c:	jmp    0x4233af
  4234a1:	lea    r8,[rip+0x14901]        # 0x437da9
  4234a8:	lea    rcx,[rip+0x14883]        # 0x437d32
  4234af:	mov    r9d,edi
  4234b2:	mov    edx,0x1802
  4234b7:	call   0x423fa0
  4234bc:	mov    eax,0xffffffd5
  4234c1:	jmp    0x4233af
  4234c6:	mov    rax,QWORD PTR [rip+0x156e3]        # 0x438bb0
  4234cd:	mov    edx,DWORD PTR [rax]
  4234cf:	test   edx,edx
  4234d1:	je     0x4233aa
  4234d7:	lea    r8,[rip+0x148ea]        # 0x437dc8
  4234de:	lea    rcx,[rip+0x1484d]        # 0x437d32
  4234e5:	mov    edx,0x18c2
  4234ea:	call   0x423fa0
  4234ef:	jmp    0x4233aa
  4234f4:	xchg   ax,ax
  4234f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423500:	sub    rsp,0x38
  423504:	mov    rax,QWORD PTR [rip+0x156a5]        # 0x438bb0
  42350b:	mov    eax,DWORD PTR [rax]
  42350d:	test   eax,eax
  42350f:	jne    0x423520
  423511:	add    rsp,0x38
  423515:	ret    
  423516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423520:	mov    r9d,ecx
  423523:	lea    r8,[rip+0x148eb]        # 0x437e15
  42352a:	lea    rcx,[rip+0x14801]        # 0x437d32
  423531:	mov    QWORD PTR [rsp+0x20],rdx
  423536:	mov    edx,0xab5
  42353b:	call   0x423fa0
  423540:	nop
  423541:	add    rsp,0x38
  423545:	ret    
  423546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423550:	push   rbp
  423551:	push   rdi
  423552:	push   rsi
  423553:	push   rbx
  423554:	sub    rsp,0x48
  423558:	mov    r10d,DWORD PTR [rip+0x1af19]        # 0x43e478
  42355f:	mov    rdi,rcx
  423562:	mov    QWORD PTR [rsp+0x38],0x0
  42356b:	mov    QWORD PTR [rsp+0x30],0x0
  423574:	test   r10d,r10d
  423577:	je     0x4237a0
  42357d:	mov    rsi,QWORD PTR [rip+0x1562c]        # 0x438bb0
  423584:	mov    ecx,DWORD PTR [rsi]
  423586:	test   ecx,ecx
  423588:	je     0x423597
  42358a:	cmp    DWORD PTR [rip+0x1aee7],0x1        # 0x43e478
  423591:	jle    0x423801
  423597:	lea    rcx,[rsp+0x38]
  42359c:	call   0x426d90
  4235a1:	test   eax,eax
  4235a3:	mov    ebx,eax
  4235a5:	je     0x4235f0
  4235a7:	lea    rbp,[rip+0x1488f]        # 0x437e3d
  4235ae:	mov    rcx,QWORD PTR [rsp+0x30]
  4235b3:	test   rcx,rcx
  4235b6:	je     0x4235bd
  4235b8:	call   0x426d48
  4235bd:	mov    rcx,QWORD PTR [rsp+0x38]
  4235c2:	test   rcx,rcx
  4235c5:	je     0x4235cc
  4235c7:	call   0x426d88
  4235cc:	mov    eax,DWORD PTR [rsi]
  4235ce:	mov    edi,0xffffffff
  4235d3:	test   eax,eax
  4235d5:	jne    0x423830
  4235db:	mov    eax,edi
  4235dd:	add    rsp,0x48
  4235e1:	pop    rbx
  4235e2:	pop    rsi
  4235e3:	pop    rdi
  4235e4:	pop    rbp
  4235e5:	ret    
  4235e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4235f0:	mov    rax,QWORD PTR [rdi+0x168]
  4235f7:	mov    rcx,QWORD PTR [rax+0x58]
  4235fb:	cmp    QWORD PTR [rcx],0x0
  4235ff:	je     0x423687
  423605:	add    rcx,0x8
  423609:	lea    rdx,[rip+0x14897]        # 0x437ea7
  423610:	call   QWORD PTR [rip+0x1c47e]        # 0x43fa94
  423616:	test   eax,eax
  423618:	je     0x4237f0
  42361e:	mov    rax,QWORD PTR [rdi+0x168]
  423625:	mov    rcx,QWORD PTR [rsp+0x38]
  42362a:	mov    r8d,0x1
  423630:	mov    rdx,QWORD PTR [rax+0x58]
  423634:	add    rdx,0x8
  423638:	call   0x426d60
  42363d:	mov    ebx,eax
  42363f:	test   ebx,ebx
  423641:	jle    0x423880
  423647:	mov    rax,QWORD PTR [rdi+0x168]
  42364e:	mov    rdx,QWORD PTR [rax+0x60]
  423652:	cmp    QWORD PTR [rdx],0x0
  423656:	je     0x423676
  423658:	mov    rcx,QWORD PTR [rsp+0x38]
  42365d:	add    rdx,0x8
  423661:	mov    r8d,0x1
  423667:	call   0x426d70
  42366c:	test   eax,eax
  42366e:	mov    ebx,eax
  423670:	jle    0x4238b0
  423676:	mov    rcx,QWORD PTR [rsp+0x38]
  42367b:	lea    rdx,[rip+0xfffffffffffffcde]        # 0x423360
  423682:	call   0x426d78
  423687:	lea    rcx,[rsp+0x30]
  42368c:	mov    edx,0x2
  423691:	lea    rbp,[rip+0x147dd]        # 0x437e75
  423698:	call   0x426d18
  42369d:	test   eax,eax
  42369f:	mov    ebx,eax
  4236a1:	jne    0x4235ae
  4236a7:	mov    rcx,QWORD PTR [rsp+0x30]
  4236ac:	mov    rdx,rdi
  4236af:	call   0x426cc0
  4236b4:	mov    rcx,QWORD PTR [rsp+0x30]
  4236b9:	lea    rdx,[rip+0xfffffffffffffbc0]        # 0x423280
  4236c0:	call   0x426cb8
  4236c5:	mov    rcx,QWORD PTR [rsp+0x30]
  4236ca:	lea    rdx,[rip+0xfffffffffffffb4f]        # 0x423220
  4236d1:	call   0x426cb0
  4236d6:	mov    rcx,QWORD PTR [rsp+0x30]
  4236db:	call   0x426cd8
  4236e0:	mov    rcx,QWORD PTR [rsp+0x30]
  4236e5:	lea    rdx,[rip+0x147c2]        # 0x437eae
  4236ec:	xor    r8d,r8d
  4236ef:	call   0x426d08
  4236f4:	test   eax,eax
  4236f6:	mov    ebx,eax
  4236f8:	jne    0x4235ae
  4236fe:	mov    rcx,QWORD PTR [rsp+0x30]
  423703:	lea    rbp,[rip+0x14780]        # 0x437e8a
  42370a:	call   0x426cf8
  42370f:	mov    r8,QWORD PTR [rsp+0x38]
  423714:	mov    rcx,QWORD PTR [rsp+0x30]
  423719:	mov    edx,0x1
  42371e:	call   0x426d50
  423723:	test   eax,eax
  423725:	mov    ebx,eax
  423727:	jne    0x4235ae
  42372d:	mov    rcx,QWORD PTR [rsp+0x30]
  423732:	call   0x426d20
  423737:	test   eax,eax
  423739:	mov    ebx,eax
  42373b:	jne    0x4238bc
  423741:	mov    edx,DWORD PTR [rsi]
  423743:	test   edx,edx
  423745:	jne    0x4238c8
  42374b:	mov    rcx,QWORD PTR [rsp+0x30]
  423750:	mov    rdx,rdi
  423753:	call   0x426cc0
  423758:	mov    rcx,QWORD PTR [rsp+0x30]
  42375d:	lea    rdx,[rip+0xfffffffffffffa6c]        # 0x4231d0
  423764:	call   0x426cb8
  423769:	mov    rcx,QWORD PTR [rsp+0x30]
  42376e:	lea    rdx,[rip+0xfffffffffffffa0b]        # 0x423180
  423775:	call   0x426cb0
  42377a:	mov    rax,QWORD PTR [rsp+0x30]
  42377f:	mov    QWORD PTR [rdi+0xb0],rax
  423786:	mov    rax,QWORD PTR [rsp+0x38]
  42378b:	mov    QWORD PTR [rdi+0xb8],rax
  423792:	xor    edi,edi
  423794:	jmp    0x4235db
  423799:	nop    DWORD PTR [rax+0x0]
  4237a0:	mov    r9d,DWORD PTR [rip+0x1aca1]        # 0x43e448
  4237a7:	test   r9d,r9d
  4237aa:	jne    0x4237e0
  4237ac:	lea    rcx,[rip+0x1ac8d]        # 0x43e440
  4237b3:	call   0x4267a0
  4237b8:	mov    r8d,DWORD PTR [rip+0x1acb9]        # 0x43e478
  4237bf:	test   r8d,r8d
  4237c2:	je     0x423860
  4237c8:	lea    rcx,[rip+0x1ac81]        # 0x43e450
  4237cf:	call   QWORD PTR [rip+0x1c177]        # 0x43f94c
  4237d5:	jmp    0x42357d
  4237da:	nop    WORD PTR [rax+rax*1+0x0]
  4237e0:	lea    rcx,[rip+0x1ac69]        # 0x43e450
  4237e7:	call   QWORD PTR [rip+0x1c0ef]        # 0x43f8dc
  4237ed:	jmp    0x4237b8
  4237ef:	nop
  4237f0:	mov    rcx,QWORD PTR [rsp+0x38]
  4237f5:	call   0x426d68
  4237fa:	mov    ebx,eax
  4237fc:	jmp    0x42363f
  423801:	mov    ecx,0xb
  423806:	call   0x426d28
  42380b:	lea    rcx,[rip+0xfffffffffffffcee]        # 0x423500
  423812:	call   0x426d30
  423817:	mov    DWORD PTR [rip+0x1ac57],0x2        # 0x43e478
  423821:	jmp    0x423597
  423826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423830:	mov    ecx,ebx
  423832:	call   0x426cd0
  423837:	lea    r8,[rip+0x146a3]        # 0x437ee1
  42383e:	lea    rcx,[rip+0x144ed]        # 0x437d32
  423845:	mov    QWORD PTR [rsp+0x20],rax
  42384a:	mov    r9,rbp
  42384d:	mov    edx,0x2122
  423852:	call   0x423fa0
  423857:	jmp    0x4235db
  42385c:	nop    DWORD PTR [rax+0x0]
  423860:	call   0x426d38
  423865:	test   eax,eax
  423867:	mov    ebx,eax
  423869:	jne    0x423890
  42386b:	mov    DWORD PTR [rip+0x1ac03],0x1        # 0x43e478
  423875:	jmp    0x4237c8
  42387a:	nop    WORD PTR [rax+rax*1+0x0]
  423880:	lea    rbp,[rip+0x145cd]        # 0x437e54
  423887:	jmp    0x4235ae
  42388c:	nop    DWORD PTR [rax+0x0]
  423890:	lea    rcx,[rip+0x1abb9]        # 0x43e450
  423897:	lea    rbp,[rip+0x1458e]        # 0x437e2c
  42389e:	call   QWORD PTR [rip+0x1c0a8]        # 0x43f94c
  4238a4:	mov    rsi,QWORD PTR [rip+0x15305]        # 0x438bb0
  4238ab:	jmp    0x4235ae
  4238b0:	lea    rbp,[rip+0x145ad]        # 0x437e64
  4238b7:	jmp    0x4235ae
  4238bc:	lea    rbp,[rip+0x145da]        # 0x437e9d
  4238c3:	jmp    0x4235ae
  4238c8:	lea    r8,[rip+0x145fb]        # 0x437eca
  4238cf:	lea    rcx,[rip+0x1445c]        # 0x437d32
  4238d6:	mov    edx,0x2025
  4238db:	call   0x423fa0
  4238e0:	jmp    0x42374b
  4238e5:	nop
  4238e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4238f0:	push   rbx
  4238f1:	sub    rsp,0x20
  4238f5:	mov    rbx,rcx
  4238f8:	mov    rcx,QWORD PTR [rcx+0xb0]
  4238ff:	test   rcx,rcx
  423902:	je     0x423914
  423904:	call   0x426d48
  423909:	mov    QWORD PTR [rbx+0xb0],0x0
  423914:	mov    rcx,QWORD PTR [rbx+0xb8]
  42391b:	test   rcx,rcx
  42391e:	je     0x423930
  423920:	call   0x426d88
  423925:	mov    QWORD PTR [rbx+0xb8],0x0
  423930:	add    rsp,0x20
  423934:	pop    rbx
  423935:	ret    
  423936:	nop
  423937:	nop
  423938:	nop
  423939:	nop
  42393a:	nop
  42393b:	nop
  42393c:	nop
  42393d:	nop
  42393e:	nop
  42393f:	nop
  423940:	push   r13
  423942:	push   r12
  423944:	push   rbp
  423945:	push   rdi
  423946:	push   rsi
  423947:	push   rbx
  423948:	sub    rsp,0xa8
  42394f:	mov    eax,DWORD PTR [rip+0x76db]        # 0x42b030
  423955:	mov    rbp,rcx
  423958:	mov    rdi,rdx
  42395b:	mov    r12d,r8d
  42395e:	test   ah,0x20
  423961:	jne    0x423a60
  423967:	test   ah,0x10
  42396a:	je     0x423a10
  423970:	lea    rsi,[rsp+0x20]
  423975:	mov    rbx,rsi
  423978:	call   QWORD PTR [rip+0x1bf76]        # 0x43f8f4
  42397e:	lea    rdx,[rip+0x1456b]        # 0x437ef0
  423985:	mov    rcx,rbx
  423988:	mov    r8d,eax
  42398b:	call   0x4294c8
  423990:	cdqe   
  423992:	add    rbx,rax
  423995:	test   BYTE PTR [rip+0x7695],0x40        # 0x42b031
  42399c:	je     0x423a01
  42399e:	test   rdi,rdi
  4239a1:	je     0x423a01
  4239a3:	test   r12d,r12d
  4239a6:	mov    r13d,0x1
  4239ac:	je     0x423a01
  4239ae:	mov    rcx,rdi
  4239b1:	mov    edx,0x2f
  4239b6:	call   0x429480
  4239bb:	lea    rdx,[rax+0x1]
  4239bf:	test   rax,rax
  4239c2:	cmovne rdi,rdx
  4239c6:	mov    edx,0x5c
  4239cb:	mov    rcx,rdi
  4239ce:	call   0x429480
  4239d3:	lea    rdx,[rax+0x1]
  4239d7:	test   rax,rax
  4239da:	mov    r9d,r12d
  4239dd:	cmovne rdi,rdx
  4239e1:	test   r13d,r13d
  4239e4:	mov    r8,rdi
  4239e7:	je     0x423ac0
  4239ed:	lea    rdx,[rip+0x144ff]        # 0x437ef3
  4239f4:	mov    rcx,rbx
  4239f7:	call   0x4294c8
  4239fc:	cdqe   
  4239fe:	add    rbx,rax
  423a01:	lea    rax,[rbx+0x1]
  423a05:	mov    BYTE PTR [rbx],0x3a
  423a08:	jmp    0x423a38
  423a0a:	nop    WORD PTR [rax+rax*1+0x0]
  423a10:	test   ah,0x40
  423a13:	je     0x423a30
  423a15:	test   rdx,rdx
  423a18:	je     0x423a30
  423a1a:	test   r8d,r8d
  423a1d:	je     0x423a30
  423a1f:	lea    rsi,[rsp+0x20]
  423a24:	xor    r13d,r13d
  423a27:	mov    rbx,rsi
  423a2a:	jmp    0x4239ae
  423a2c:	nop    DWORD PTR [rax+0x0]
  423a30:	lea    rsi,[rsp+0x20]
  423a35:	mov    rax,rsi
  423a38:	mov    rdx,rbp
  423a3b:	mov    rcx,rsi
  423a3e:	mov    BYTE PTR [rax],0x0
  423a41:	call   0x429588
  423a46:	nop
  423a47:	add    rsp,0xa8
  423a4e:	pop    rbx
  423a4f:	pop    rsi
  423a50:	pop    rdi
  423a51:	pop    rbp
  423a52:	pop    r12
  423a54:	pop    r13
  423a56:	ret    
  423a57:	nop    WORD PTR [rax+rax*1+0x0]
  423a60:	lea    rsi,[rsp+0x20]
  423a65:	mov    edx,0x7f
  423a6a:	mov    rcx,rsi
  423a6d:	call   0x41f620
  423a72:	mov    rdx,rbp
  423a75:	mov    rcx,rax
  423a78:	call   0x429588
  423a7d:	mov    eax,DWORD PTR [rip+0x75ad]        # 0x42b030
  423a83:	test   ah,0x10
  423a86:	jne    0x423ab0
  423a88:	test   ah,0x40
  423a8b:	je     0x423aa4
  423a8d:	test   rdi,rdi
  423a90:	je     0x423aa4
  423a92:	test   r12d,r12d
  423a95:	mov    r13d,0x1
  423a9b:	mov    rbx,rsi
  423a9e:	jne    0x4239ae
  423aa4:	mov    rbx,rsi
  423aa7:	lea    rax,[rbx+0x1]
  423aab:	mov    BYTE PTR [rbx],0x3a
  423aae:	jmp    0x423a38
  423ab0:	mov    BYTE PTR [rsp+0x20],0x20
  423ab5:	lea    rbx,[rsi+0x1]
  423ab9:	jmp    0x423978
  423abe:	xchg   ax,ax
  423ac0:	lea    rdx,[rip+0x14435]        # 0x437efc
  423ac7:	mov    rcx,rbx
  423aca:	call   0x4294c8
  423acf:	cdqe   
  423ad1:	add    rbx,rax
  423ad4:	lea    rax,[rbx+0x1]
  423ad8:	mov    BYTE PTR [rbx],0x3a
  423adb:	jmp    0x423a38
  423ae0:	push   rdi
  423ae1:	push   rsi
  423ae2:	sub    rsp,0x28
  423ae6:	mov    rax,QWORD PTR [rip+0x1a9f3]        # 0x43e4e0
  423aed:	test   rax,rax
  423af0:	je     0x423b52
  423af2:	lea    rdi,[rip+0x14409]        # 0x437f02
  423af9:	mov    ecx,0x7
  423afe:	mov    rsi,rax
  423b01:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  423b03:	je     0x423b41
  423b05:	lea    rdi,[rip+0x143fd]        # 0x437f09
  423b0c:	mov    ecx,0x7
  423b11:	mov    rsi,rax
  423b14:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  423b16:	je     0x423b30
  423b18:	lea    rdx,[rip+0x143f1]        # 0x437f10
  423b1f:	mov    rcx,rax
  423b22:	add    rsp,0x28
  423b26:	pop    rsi
  423b27:	pop    rdi
  423b28:	jmp    0x4295a0
  423b2d:	nop    DWORD PTR [rax]
  423b30:	call   QWORD PTR [rip+0x1bed6]        # 0x43fa0c
  423b36:	add    rax,0x60
  423b3a:	add    rsp,0x28
  423b3e:	pop    rsi
  423b3f:	pop    rdi
  423b40:	ret    
  423b41:	call   QWORD PTR [rip+0x1bec5]        # 0x43fa0c
  423b47:	add    rax,0x30
  423b4b:	add    rsp,0x28
  423b4f:	pop    rsi
  423b50:	pop    rdi
  423b51:	ret    
  423b52:	xor    eax,eax
  423b54:	jmp    0x423b3a
  423b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423b60:	sub    rsp,0x28
  423b64:	mov    eax,DWORD PTR [rip+0x1a93e]        # 0x43e4a8
  423b6a:	test   eax,eax
  423b6c:	jne    0x423ba0
  423b6e:	lea    rcx,[rip+0x1a92b]        # 0x43e4a0
  423b75:	call   0x4267a0
  423b7a:	mov    rax,QWORD PTR [rip+0x1bdcb]        # 0x43f94c
  423b81:	lea    rcx,[rip+0x1a928]        # 0x43e4b0
  423b88:	mov    DWORD PTR [rip+0x1a8ee],0x0        # 0x43e480
  423b92:	add    rsp,0x28
  423b96:	rex.W jmp rax
  423b99:	nop    DWORD PTR [rax+0x0]
  423ba0:	lea    rcx,[rip+0x1a909]        # 0x43e4b0
  423ba7:	call   QWORD PTR [rip+0x1bd2f]        # 0x43f8dc
  423bad:	jmp    0x423b7a
  423baf:	nop
  423bb0:	sub    rsp,0x28
  423bb4:	mov    eax,DWORD PTR [rip+0x1a8ee]        # 0x43e4a8
  423bba:	test   eax,eax
  423bbc:	jne    0x423bf3
  423bbe:	lea    rcx,[rip+0x1a8db]        # 0x43e4a0
  423bc5:	call   0x4267a0
  423bca:	cmp    QWORD PTR [rip+0x1a906],0x0        # 0x43e4d8
  423bd2:	je     0x423c0a
  423bd4:	mov    DWORD PTR [rip+0x1a8a2],0x1        # 0x43e480
  423bde:	mov    rax,QWORD PTR [rip+0x1bd67]        # 0x43f94c
  423be5:	lea    rcx,[rip+0x1a8c4]        # 0x43e4b0
  423bec:	add    rsp,0x28
  423bf0:	rex.W jmp rax
  423bf3:	lea    rcx,[rip+0x1a8b6]        # 0x43e4b0
  423bfa:	call   QWORD PTR [rip+0x1bcdc]        # 0x43f8dc
  423c00:	cmp    QWORD PTR [rip+0x1a8d0],0x0        # 0x43e4d8
  423c08:	jne    0x423bd4
  423c0a:	cmp    QWORD PTR [rip+0x1a8ce],0x0        # 0x43e4e0
  423c12:	jne    0x423bd4
  423c14:	jmp    0x423bde
  423c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423c20:	cmp    QWORD PTR [rip+0x1a8b0],0x0        # 0x43e4d8
  423c28:	mov    eax,0x1
  423c2d:	je     0x423c31
  423c2f:	repz ret 
  423c31:	xor    eax,eax
  423c33:	cmp    QWORD PTR [rip+0x1a8a5],0x0        # 0x43e4e0
  423c3b:	setne  al
  423c3e:	ret    
  423c3f:	nop
  423c40:	push   rbx
  423c41:	sub    rsp,0x20
  423c45:	mov    eax,DWORD PTR [rip+0x1a85d]        # 0x43e4a8
  423c4b:	test   eax,eax
  423c4d:	jne    0x423ce0
  423c53:	lea    rcx,[rip+0x1a846]        # 0x43e4a0
  423c5a:	call   0x4267a0
  423c5f:	cmp    QWORD PTR [rip+0x1a871],0x0        # 0x43e4d8
  423c67:	mov    DWORD PTR [rip+0x1a80f],0x0        # 0x43e480
  423c71:	je     0x423ca0
  423c73:	mov    rbx,QWORD PTR [rip+0x1bd92]        # 0x43fa0c
  423c7a:	call   rbx
  423c7c:	add    rax,0x30
  423c80:	cmp    QWORD PTR [rip+0x1a851],rax        # 0x43e4d8
  423c87:	je     0x423ca0
  423c89:	call   rbx
  423c8b:	mov    rcx,QWORD PTR [rip+0x1a846]        # 0x43e4d8
  423c92:	add    rax,0x60
  423c96:	cmp    rcx,rax
  423c99:	je     0x423ca0
  423c9b:	call   0x4295b8
  423ca0:	mov    rcx,QWORD PTR [rip+0x1a839]        # 0x43e4e0
  423ca7:	mov    QWORD PTR [rip+0x1a826],0x0        # 0x43e4d8
  423cb2:	test   rcx,rcx
  423cb5:	je     0x423cc7
  423cb7:	call   0x429580
  423cbc:	mov    QWORD PTR [rip+0x1a819],0x0        # 0x43e4e0
  423cc7:	mov    rax,QWORD PTR [rip+0x1bc7e]        # 0x43f94c
  423cce:	lea    rcx,[rip+0x1a7db]        # 0x43e4b0
  423cd5:	add    rsp,0x20
  423cd9:	pop    rbx
  423cda:	rex.W jmp rax
  423cdd:	nop    DWORD PTR [rax]
  423ce0:	lea    rcx,[rip+0x1a7c9]        # 0x43e4b0
  423ce7:	call   QWORD PTR [rip+0x1bbef]        # 0x43f8dc
  423ced:	jmp    0x423c5f
  423cf2:	nop    DWORD PTR [rax+0x0]
  423cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423d00:	push   r15
  423d02:	push   r14
  423d04:	push   r13
  423d06:	push   r12
  423d08:	push   rbp
  423d09:	push   rdi
  423d0a:	push   rsi
  423d0b:	push   rbx
  423d0c:	sub    rsp,0xd8
  423d13:	mov    r10d,DWORD PTR [rip+0x7316]        # 0x42b030
  423d1a:	mov    rbp,QWORD PTR [rsp+0x140]
  423d22:	mov    eax,edx
  423d24:	and    eax,0xf
  423d27:	bt     r10d,eax
  423d2b:	jae    0x423d39
  423d2d:	mov    r10d,DWORD PTR [rip+0x1a74c]        # 0x43e480
  423d34:	test   r10d,r10d
  423d37:	jne    0x423d4d
  423d39:	add    rsp,0xd8
  423d40:	pop    rbx
  423d41:	pop    rsi
  423d42:	pop    rdi
  423d43:	pop    rbp
  423d44:	pop    r12
  423d46:	pop    r13
  423d48:	pop    r14
  423d4a:	pop    r15
  423d4c:	ret    
  423d4d:	cmp    QWORD PTR [rip+0x1a783],0x0        # 0x43e4d8
  423d55:	je     0x423f4e
  423d5b:	mov    rdi,r9
  423d5e:	mov    r9d,DWORD PTR [rip+0x1a743]        # 0x43e4a8
  423d65:	mov    rsi,r8
  423d68:	mov    ebx,edx
  423d6a:	mov    r12,rcx
  423d6d:	test   r9d,r9d
  423d70:	jne    0x423f3c
  423d76:	lea    rcx,[rip+0x1a723]        # 0x43e4a0
  423d7d:	call   0x4267a0
  423d82:	mov    r8d,DWORD PTR [rip+0x1a6fb]        # 0x43e484
  423d89:	mov    rax,QWORD PTR [rip+0x1a748]        # 0x43e4d8
  423d90:	test   r8d,r8d
  423d93:	mov    QWORD PTR [rsp+0x38],rax
  423d98:	je     0x423f72
  423d9e:	test   rax,rax
  423da1:	je     0x423f61
  423da7:	shr    ebx,0x4
  423daa:	mov    rdx,r12
  423dad:	mov    r8d,ebx
  423db0:	mov    rbx,QWORD PTR [rsp+0x38]
  423db5:	mov    rcx,rbx
  423db8:	call   0x423940
  423dbd:	lea    rdx,[rip+0x1414e]        # 0x437f12
  423dc4:	mov    r8,rsi
  423dc7:	mov    rcx,rbx
  423dca:	call   0x429598
  423dcf:	test   rbp,rbp
  423dd2:	je     0x423f10
  423dd8:	lea    rax,[rsp+0x40]
  423ddd:	mov    r14,QWORD PTR [rip+0x1bd70]        # 0x43fb54
  423de4:	xor    esi,esi
  423de6:	mov    QWORD PTR [rsp+0x30],rax
  423deb:	nop    DWORD PTR [rax+rax*1+0x0]
  423df0:	mov    r15,QWORD PTR [rsp+0x30]
  423df5:	lea    rdx,[rip+0x1411a]        # 0x437f16
  423dfc:	movzx  r8d,si
  423e00:	xor    r12d,r12d
  423e03:	mov    rcx,r15
  423e06:	call   0x4294c8
  423e0b:	movsxd rbx,eax
  423e0e:	add    rbx,r15
  423e11:	jmp    0x423e30
  423e13:	add    r12,0x1
  423e17:	mov    ecx,0x2020
  423e1c:	mov    BYTE PTR [r13+0x2],0x0
  423e21:	cmp    r12,0x10
  423e25:	mov    WORD PTR [r13+0x0],cx
  423e2a:	lea    rbx,[r13+0x2]
  423e2e:	je     0x423e6e
  423e30:	cmp    r12,0x8
  423e34:	lea    r13,[rbx+0x1]
  423e38:	je     0x423f80
  423e3e:	mov    BYTE PTR [rbx],0x20
  423e41:	lea    rax,[r12+rsi*1]
  423e45:	cmp    rax,rbp
  423e48:	jae    0x423e13
  423e4a:	movzx  r8d,BYTE PTR [rdi+r12*1]
  423e4f:	lea    rdx,[rip+0x140c5]        # 0x437f1b
  423e56:	mov    rcx,r13
  423e59:	add    r12,0x1
  423e5d:	call   0x4294c8
  423e62:	movsxd rbx,eax
  423e65:	add    rbx,r13
  423e68:	cmp    r12,0x10
  423e6c:	jne    0x423e30
  423e6e:	mov    edx,0x7c20
  423e73:	mov    BYTE PTR [rbx+0x2],0x0
  423e77:	add    rbx,0x2
  423e7b:	mov    WORD PTR [rbx-0x2],dx
  423e7f:	cmp    rbp,rsi
  423e82:	jbe    0x423ee4
  423e84:	mov    rax,rbp
  423e87:	mov    r15d,0x1
  423e8d:	mov    r12b,0x2e
  423e90:	sub    rax,rsi
  423e93:	mov    QWORD PTR [rsp+0x28],rax
  423e98:	jmp    0x423eae
  423e9a:	nop    WORD PTR [rax+rax*1+0x0]
  423ea0:	cmp    r15,0x8
  423ea4:	je     0x423f88
  423eaa:	add    r15,0x1
  423eae:	movzx  r13d,BYTE PTR [rdi+r15*1-0x1]
  423eb4:	mov    ecx,r13d
  423eb7:	call   r14
  423eba:	mov    r8d,r13d
  423ebd:	test   eax,eax
  423ebf:	lea    rdx,[rip+0x1405a]        # 0x437f20
  423ec6:	cmove  r8d,r12d
  423eca:	mov    rcx,rbx
  423ecd:	call   0x4294c8
  423ed2:	cdqe   
  423ed4:	add    rbx,rax
  423ed7:	cmp    QWORD PTR [rsp+0x28],r15
  423edc:	je     0x423ee4
  423ede:	cmp    r15,0x10
  423ee2:	jne    0x423ea0
  423ee4:	mov    rdx,QWORD PTR [rsp+0x38]
  423ee9:	mov    rcx,QWORD PTR [rsp+0x30]
  423eee:	mov    eax,0xa7c
  423ef3:	mov    WORD PTR [rbx],ax
  423ef6:	mov    BYTE PTR [rbx+0x2],0x0
  423efa:	add    rsi,0x10
  423efe:	add    rdi,0x10
  423f02:	call   0x429588
  423f07:	cmp    rbp,rsi
  423f0a:	ja     0x423df0
  423f10:	mov    rdi,QWORD PTR [rsp+0x38]
  423f15:	mov    ecx,0xa
  423f1a:	mov    rdx,rdi
  423f1d:	call   0x429590
  423f22:	mov    rcx,rdi
  423f25:	call   0x4295b0
  423f2a:	lea    rcx,[rip+0x1a57f]        # 0x43e4b0
  423f31:	call   QWORD PTR [rip+0x1ba15]        # 0x43f94c
  423f37:	jmp    0x423d39
  423f3c:	lea    rcx,[rip+0x1a56d]        # 0x43e4b0
  423f43:	call   QWORD PTR [rip+0x1b993]        # 0x43f8dc
  423f49:	jmp    0x423d82
  423f4e:	cmp    QWORD PTR [rip+0x1a58a],0x0        # 0x43e4e0
  423f56:	jne    0x423d5b
  423f5c:	jmp    0x423d39
  423f61:	call   0x423ae0
  423f66:	mov    QWORD PTR [rsp+0x38],rax
  423f6b:	mov    QWORD PTR [rip+0x1a566],rax        # 0x43e4d8
  423f72:	cmp    QWORD PTR [rsp+0x38],0x0
  423f78:	jne    0x423da7
  423f7e:	jmp    0x423f2a
  423f80:	mov    BYTE PTR [rbx],0x2d
  423f83:	jmp    0x423e41
  423f88:	mov    BYTE PTR [rbx],0x20
  423f8b:	add    rbx,0x1
  423f8f:	jmp    0x423eaa
  423f94:	xchg   ax,ax
  423f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423fa0:	push   rbp
  423fa1:	push   rdi
  423fa2:	push   rsi
  423fa3:	push   rbx
  423fa4:	sub    rsp,0x38
  423fa8:	mov    r10d,DWORD PTR [rip+0x7081]        # 0x42b030
  423faf:	mov    QWORD PTR [rsp+0x78],r9
  423fb4:	mov    r9d,edx
  423fb7:	and    r9d,0xf
  423fbb:	bt     r10d,r9d
  423fbf:	jae    0x423fcd
  423fc1:	mov    r9d,DWORD PTR [rip+0x1a4b8]        # 0x43e480
  423fc8:	test   r9d,r9d
  423fcb:	jne    0x423fe0
  423fcd:	add    rsp,0x38
  423fd1:	pop    rbx
  423fd2:	pop    rsi
  423fd3:	pop    rdi
  423fd4:	pop    rbp
  423fd5:	ret    
  423fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423fe0:	cmp    QWORD PTR [rip+0x1a4f0],0x0        # 0x43e4d8
  423fe8:	je     0x424080
  423fee:	mov    ebx,edx
  423ff0:	mov    edx,DWORD PTR [rip+0x1a4b2]        # 0x43e4a8
  423ff6:	mov    rsi,r8
  423ff9:	mov    rdi,rcx
  423ffc:	test   edx,edx
  423ffe:	jne    0x424070
  424000:	lea    rcx,[rip+0x1a499]        # 0x43e4a0
  424007:	call   0x4267a0
  42400c:	mov    eax,DWORD PTR [rip+0x1a472]        # 0x43e484
  424012:	mov    rbp,QWORD PTR [rip+0x1a4bf]        # 0x43e4d8
  424019:	test   eax,eax
  42401b:	je     0x4240a2
  424021:	test   rbp,rbp
  424024:	je     0x424093
  424026:	shr    ebx,0x4
  424029:	mov    rdx,rdi
  42402c:	mov    rcx,rbp
  42402f:	mov    r8d,ebx
  424032:	call   0x423940
  424037:	lea    r8,[rsp+0x78]
  42403c:	mov    rcx,rbp
  42403f:	mov    rdx,rsi
  424042:	mov    QWORD PTR [rsp+0x28],r8
  424047:	call   0x429450
  42404c:	mov    rcx,rbp
  42404f:	call   0x4295b0
  424054:	lea    rcx,[rip+0x1a455]        # 0x43e4b0
  42405b:	call   QWORD PTR [rip+0x1b8eb]        # 0x43f94c
  424061:	nop
  424062:	add    rsp,0x38
  424066:	pop    rbx
  424067:	pop    rsi
  424068:	pop    rdi
  424069:	pop    rbp
  42406a:	ret    
  42406b:	nop    DWORD PTR [rax+rax*1+0x0]
  424070:	lea    rcx,[rip+0x1a439]        # 0x43e4b0
  424077:	call   QWORD PTR [rip+0x1b85f]        # 0x43f8dc
  42407d:	jmp    0x42400c
  42407f:	nop
  424080:	cmp    QWORD PTR [rip+0x1a458],0x0        # 0x43e4e0
  424088:	jne    0x423fee
  42408e:	jmp    0x423fcd
  424093:	call   0x423ae0
  424098:	mov    rbp,rax
  42409b:	mov    QWORD PTR [rip+0x1a436],rax        # 0x43e4d8
  4240a2:	test   rbp,rbp
  4240a5:	jne    0x424026
  4240ab:	jmp    0x424054
  4240ad:	nop    DWORD PTR [rax]
  4240b0:	push   rbp
  4240b1:	push   rdi
  4240b2:	push   rsi
  4240b3:	push   rbx
  4240b4:	sub    rsp,0xb8
  4240bb:	mov    rbx,rcx
  4240be:	mov    ecx,DWORD PTR [rip+0x1a3e4]        # 0x43e4a8
  4240c4:	test   ecx,ecx
  4240c6:	jne    0x4241e0
  4240cc:	lea    rcx,[rip+0x1a3cd]        # 0x43e4a0
  4240d3:	call   0x4267a0
  4240d8:	test   rbx,rbx
  4240db:	je     0x424103
  4240dd:	mov    edx,DWORD PTR [rip+0x1a3a1]        # 0x43e484
  4240e3:	test   edx,edx
  4240e5:	je     0x424103
  4240e7:	mov    rdx,QWORD PTR [rip+0x1a3f2]        # 0x43e4e0
  4240ee:	test   rdx,rdx
  4240f1:	je     0x424103
  4240f3:	mov    rcx,rbx
  4240f6:	call   0x4294b0
  4240fb:	test   eax,eax
  4240fd:	je     0x4241c0
  424103:	cmp    QWORD PTR [rip+0x1a3cd],0x0        # 0x43e4d8
  42410b:	mov    DWORD PTR [rip+0x1a36b],0x0        # 0x43e480
  424115:	je     0x424144
  424117:	mov    rbp,QWORD PTR [rip+0x1b8ee]        # 0x43fa0c
  42411e:	call   rbp
  424120:	add    rax,0x30
  424124:	cmp    QWORD PTR [rip+0x1a3ad],rax        # 0x43e4d8
  42412b:	je     0x424144
  42412d:	call   rbp
  42412f:	mov    rcx,QWORD PTR [rip+0x1a3a2]        # 0x43e4d8
  424136:	add    rax,0x60
  42413a:	cmp    rcx,rax
  42413d:	je     0x424144
  42413f:	call   0x4295b8
  424144:	mov    rcx,QWORD PTR [rip+0x1a395]        # 0x43e4e0
  42414b:	mov    QWORD PTR [rip+0x1a382],0x0        # 0x43e4d8
  424156:	test   rcx,rcx
  424159:	je     0x42416b
  42415b:	call   0x429580
  424160:	mov    QWORD PTR [rip+0x1a375],0x0        # 0x43e4e0
  42416b:	test   rbx,rbx
  42416e:	je     0x4241c0
  424170:	cmp    BYTE PTR [rbx],0x0
  424173:	je     0x4241c0
  424175:	mov    ebp,DWORD PTR [rip+0x1a309]        # 0x43e484
  42417b:	test   ebp,ebp
  42417d:	jne    0x4241f2
  42417f:	lea    rdi,[rip+0x13d7c]        # 0x437f02
  424186:	mov    ecx,0x7
  42418b:	mov    rsi,rbx
  42418e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  424190:	je     0x4242c0
  424196:	lea    rdi,[rip+0x13d6c]        # 0x437f09
  42419d:	mov    ecx,0x7
  4241a2:	mov    rsi,rbx
  4241a5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4241a7:	jne    0x424283
  4241ad:	call   QWORD PTR [rip+0x1b859]        # 0x43fa0c
  4241b3:	add    rax,0x60
  4241b7:	mov    QWORD PTR [rip+0x1a31a],rax        # 0x43e4d8
  4241be:	jmp    0x42420e
  4241c0:	lea    rcx,[rip+0x1a2e9]        # 0x43e4b0
  4241c7:	mov    ebp,0x1
  4241cc:	call   QWORD PTR [rip+0x1b77a]        # 0x43f94c
  4241d2:	mov    eax,ebp
  4241d4:	add    rsp,0xb8
  4241db:	pop    rbx
  4241dc:	pop    rsi
  4241dd:	pop    rdi
  4241de:	pop    rbp
  4241df:	ret    
  4241e0:	lea    rcx,[rip+0x1a2c9]        # 0x43e4b0
  4241e7:	call   QWORD PTR [rip+0x1b6ef]        # 0x43f8dc
  4241ed:	jmp    0x4240d8
  4241f2:	mov    rcx,rbx
  4241f5:	call   QWORD PTR [rip+0x1b891]        # 0x43fa8c
  4241fb:	mov    QWORD PTR [rip+0x1a2de],rax        # 0x43e4e0
  424202:	call   0x423ae0
  424207:	mov    QWORD PTR [rip+0x1a2ca],rax        # 0x43e4d8
  42420e:	lea    rbx,[rsp+0x38]
  424213:	lea    rdi,[rsp+0x40]
  424218:	lea    rcx,[rip+0x1a291]        # 0x43e4b0
  42421f:	mov    DWORD PTR [rip+0x1a257],0x1        # 0x43e480
  424229:	call   QWORD PTR [rip+0x1b71d]        # 0x43f94c
  42422f:	mov    rcx,rbx
  424232:	call   QWORD PTR [rip+0x1b86c]        # 0x43faa4
  424238:	mov    rdx,rdi
  42423b:	mov    rcx,rbx
  42423e:	mov    BYTE PTR [rsp+0x70],0x0
  424243:	call   0x41f5d0
  424248:	test   rax,rax
  42424b:	je     0x424266
  42424d:	lea    rcx,[rsp+0x70]
  424252:	lea    r8,[rip+0x13ccc]        # 0x437f25
  424259:	mov    r9,rdi
  42425c:	mov    edx,0x40
  424261:	call   0x429498
  424266:	mov    eax,DWORD PTR [rip+0x1a214]        # 0x43e480
  42426c:	test   eax,eax
  42426e:	jne    0x4242e0
  424270:	mov    ebp,0x1
  424275:	mov    eax,ebp
  424277:	add    rsp,0xb8
  42427e:	pop    rbx
  42427f:	pop    rsi
  424280:	pop    rdi
  424281:	pop    rbp
  424282:	ret    
  424283:	lea    rdx,[rip+0x13c99]        # 0x437f23
  42428a:	mov    rcx,rbx
  42428d:	call   0x4295a0
  424292:	test   rax,rax
  424295:	mov    QWORD PTR [rip+0x1a23c],rax        # 0x43e4d8
  42429c:	jne    0x42420e
  4242a2:	lea    rcx,[rip+0x1a207]        # 0x43e4b0
  4242a9:	call   QWORD PTR [rip+0x1b69d]        # 0x43f94c
  4242af:	mov    eax,ebp
  4242b1:	add    rsp,0xb8
  4242b8:	pop    rbx
  4242b9:	pop    rsi
  4242ba:	pop    rdi
  4242bb:	pop    rbp
  4242bc:	ret    
  4242bd:	nop    DWORD PTR [rax]
  4242c0:	call   QWORD PTR [rip+0x1b746]        # 0x43fa0c
  4242c6:	add    rax,0x30
  4242ca:	mov    QWORD PTR [rip+0x1a207],rax        # 0x43e4d8
  4242d1:	jmp    0x42420e
  4242d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4242e0:	mov    eax,DWORD PTR [rip+0x6d4a]        # 0x42b030
  4242e6:	lea    r9,[rip+0x13c4a]        # 0x437f37
  4242ed:	lea    r8,[rip+0x13c4c]        # 0x437f40
  4242f4:	lea    rcx,[rip+0x13c85]        # 0x437f80
  4242fb:	mov    edx,0xa75
  424300:	mov    DWORD PTR [rsp+0x28],eax
  424304:	lea    rax,[rsp+0x70]
  424309:	mov    QWORD PTR [rsp+0x20],rax
  42430e:	call   0x423fa0
  424313:	jmp    0x424270
  424318:	nop    DWORD PTR [rax+rax*1+0x0]
  424320:	push   rbp
  424321:	push   rdi
  424322:	push   rsi
  424323:	push   rbx
  424324:	sub    rsp,0x38
  424328:	test   rcx,rcx
  42432b:	mov    rbx,rcx
  42432e:	je     0x424532
  424334:	cmp    QWORD PTR [rbx+0x48],0x0
  424339:	je     0x424550
  42433f:	mov    ecx,DWORD PTR [rbx+0x14]
  424342:	call   0x406850
  424347:	mov    edx,DWORD PTR [rbx+0x10]
  42434a:	mov    ecx,DWORD PTR [rbx+0x14]
  42434d:	mov    rsi,rax
  424350:	call   0x421820
  424355:	lea    edx,[rax-0x27]
  424358:	cmp    dx,0x17
  42435c:	ja     0x4244e0
  424362:	lea    rcx,[rip+0x13cd3]        # 0x43803c
  424369:	movzx  edx,dx
  42436c:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  424370:	add    rcx,rdx
  424373:	jmp    rcx
  424375:	mov    edx,DWORD PTR [rip+0x1a105]        # 0x43e480
  42437b:	test   edx,edx
  42437d:	jne    0x4245b5
  424383:	add    rsp,0x38
  424387:	pop    rbx
  424388:	pop    rsi
  424389:	pop    rdi
  42438a:	pop    rbp
  42438b:	ret    
  42438c:	nop    DWORD PTR [rax+0x0]
  424390:	mov    edi,DWORD PTR [rbx+0x64]
  424393:	test   edi,edi
  424395:	js     0x424511
  42439b:	lea    ecx,[rdi+0x1]
  42439e:	mov    edx,0x1
  4243a3:	movsxd rcx,ecx
  4243a6:	call   0x4295c8
  4243ab:	test   rax,rax
  4243ae:	mov    rbp,rax
  4243b1:	je     0x424593
  4243b7:	mov    rdx,QWORD PTR [rbx+0x48]
  4243bb:	movsxd r8,edi
  4243be:	mov    rcx,rax
  4243c1:	call   0x429528
  4243c6:	mov    ebx,DWORD PTR [rip+0x1a0b4]        # 0x43e480
  4243cc:	test   ebx,ebx
  4243ce:	jne    0x42456e
  4243d4:	mov    rcx,rbp
  4243d7:	add    rsp,0x38
  4243db:	pop    rbx
  4243dc:	pop    rsi
  4243dd:	pop    rdi
  4243de:	pop    rbp
  4243df:	jmp    0x429580
  4243e4:	mov    r10d,DWORD PTR [rip+0x1a095]        # 0x43e480
  4243eb:	test   r10d,r10d
  4243ee:	je     0x424383
  4243f0:	mov    rax,QWORD PTR [rbx+0x48]
  4243f4:	lea    r8,[rip+0x13bf8]        # 0x437ff3
  4243fb:	lea    rcx,[rip+0x13b7e]        # 0x437f80
  424402:	mov    r9,rsi
  424405:	mov    edx,0x1b47
  42440a:	movzx  eax,BYTE PTR [rax]
  42440d:	mov    DWORD PTR [rsp+0x20],eax
  424411:	call   0x423fa0
  424416:	jmp    0x424383
  42441b:	nop    DWORD PTR [rax+rax*1+0x0]
  424420:	mov    r9d,DWORD PTR [rip+0x1a059]        # 0x43e480
  424427:	test   r9d,r9d
  42442a:	je     0x424383
  424430:	mov    rax,QWORD PTR [rbx+0x48]
  424434:	lea    r8,[rip+0x13bb8]        # 0x437ff3
  42443b:	lea    rcx,[rip+0x13b3e]        # 0x437f80
  424442:	mov    r9,rsi
  424445:	mov    edx,0x1b77
  42444a:	movsx  eax,WORD PTR [rax]
  42444d:	mov    DWORD PTR [rsp+0x20],eax
  424451:	call   0x423fa0
  424456:	jmp    0x424383
  42445b:	nop    DWORD PTR [rax+rax*1+0x0]
  424460:	mov    r8d,DWORD PTR [rip+0x1a019]        # 0x43e480
  424467:	test   r8d,r8d
  42446a:	je     0x424383
  424470:	mov    rax,QWORD PTR [rbx+0x48]
  424474:	lea    r8,[rip+0x13b78]        # 0x437ff3
  42447b:	lea    rcx,[rip+0x13afe]        # 0x437f80
  424482:	mov    r9,rsi
  424485:	mov    edx,0x1ba7
  42448a:	mov    eax,DWORD PTR [rax]
  42448c:	mov    DWORD PTR [rsp+0x20],eax
  424490:	call   0x423fa0
  424495:	jmp    0x424383
  42449a:	nop    WORD PTR [rax+rax*1+0x0]
  4244a0:	mov    ecx,DWORD PTR [rip+0x19fda]        # 0x43e480
  4244a6:	test   ecx,ecx
  4244a8:	je     0x424383
  4244ae:	mov    rax,QWORD PTR [rbx+0x48]
  4244b2:	pxor   xmm1,xmm1
  4244b6:	lea    r8,[rip+0x13b4c]        # 0x438009
  4244bd:	lea    rcx,[rip+0x13abc]        # 0x437f80
  4244c4:	mov    r9,rsi
  4244c7:	mov    edx,0x1bd7
  4244cc:	cvtss2sd xmm1,DWORD PTR [rax]
  4244d0:	movsd  QWORD PTR [rsp+0x20],xmm1
  4244d6:	call   0x423fa0
  4244db:	jmp    0x424383
  4244e0:	mov    eax,DWORD PTR [rip+0x19f9a]        # 0x43e480
  4244e6:	test   eax,eax
  4244e8:	je     0x424383
  4244ee:	lea    r8,[rip+0x13b2a]        # 0x43801f
  4244f5:	mov    r9,rsi
  4244f8:	mov    edx,0x1c37
  4244fd:	lea    rcx,[rip+0x13a7c]        # 0x437f80
  424504:	add    rsp,0x38
  424508:	pop    rbx
  424509:	pop    rsi
  42450a:	pop    rdi
  42450b:	pop    rbp
  42450c:	jmp    0x423fa0
  424511:	mov    r11d,DWORD PTR [rip+0x19f68]        # 0x43e480
  424518:	mov    r9,rsi
  42451b:	lea    r8,[rip+0x13ab9]        # 0x437fdb
  424522:	mov    edx,0x1b07
  424527:	test   r11d,r11d
  42452a:	je     0x424383
  424530:	jmp    0x4244fd
  424532:	lea    rdx,[rip+0x13a47]        # 0x437f80
  424539:	lea    rcx,[rip+0x13a46]        # 0x437f86
  424540:	mov    r8d,0x19d
  424546:	call   0x4291e0
  42454b:	jmp    0x424334
  424550:	lea    rdx,[rip+0x13a29]        # 0x437f80
  424557:	lea    rcx,[rip+0x13a2c]        # 0x437f8a
  42455e:	mov    r8d,0x19e
  424564:	call   0x4291e0
  424569:	jmp    0x42433f
  42456e:	lea    r8,[rip+0x13a4e]        # 0x437fc3
  424575:	lea    rcx,[rip+0x13a04]        # 0x437f80
  42457c:	mov    QWORD PTR [rsp+0x20],rbp
  424581:	mov    r9,rsi
  424584:	mov    edx,0x1ad7
  424589:	call   0x423fa0
  42458e:	jmp    0x4243d4
  424593:	mov    edi,DWORD PTR [rip+0x19ee7]        # 0x43e480
  424599:	mov    r9,rsi
  42459c:	lea    r8,[rip+0x139fd]        # 0x437fa0
  4245a3:	mov    edx,0x1a97
  4245a8:	test   edi,edi
  4245aa:	je     0x424383
  4245b0:	jmp    0x4244fd
  4245b5:	mov    rax,QWORD PTR [rbx+0x48]
  4245b9:	lea    r8,[rip+0x13a49]        # 0x438009
  4245c0:	lea    rcx,[rip+0x139b9]        # 0x437f80
  4245c7:	mov    r9,rsi
  4245ca:	mov    edx,0x1c07
  4245cf:	movsd  xmm0,QWORD PTR [rax]
  4245d3:	movsd  QWORD PTR [rsp+0x20],xmm0
  4245d9:	call   0x423fa0
  4245de:	jmp    0x424383
  4245e3:	nop
  4245e4:	nop
  4245e5:	nop
  4245e6:	nop
  4245e7:	nop
  4245e8:	nop
  4245e9:	nop
  4245ea:	nop
  4245eb:	nop
  4245ec:	nop
  4245ed:	nop
  4245ee:	nop
  4245ef:	nop
  4245f0:	push   rbp
  4245f1:	push   rdi
  4245f2:	push   rsi
  4245f3:	push   rbx
  4245f4:	sub    rsp,0x48
  4245f8:	cmp    DWORD PTR [rcx+0x148],0x5
  4245ff:	mov    rbp,QWORD PTR [rcx+0xd0]
  424606:	mov    rdi,rcx
  424609:	je     0x424675
  42460b:	lea    rsi,[rbp+0x8]
  42460f:	mov    DWORD PTR [rcx+0xec],0x0
  424619:	mov    DWORD PTR [rcx+0xe4],0x0
  424623:	mov    rbx,rbp
  424626:	cmp    rsi,rbx
  424629:	ja     0x42464a
  42462b:	jmp    0x4246ab
  42462d:	nop    DWORD PTR [rax]
  424630:	cdqe   
  424632:	add    rbx,rax
  424635:	mov    rdx,rbx
  424638:	sub    rdx,rbp
  42463b:	cmp    rdx,0x3
  42463f:	jg     0x424710
  424645:	cmp    rbx,rsi
  424648:	jae    0x4246b1
  42464a:	mov    r8d,esi
  42464d:	mov    rdx,rbx
  424650:	mov    rcx,rdi
  424653:	sub    r8d,ebx
  424656:	call   0x422190
  42465b:	test   eax,eax
  42465d:	jg     0x424630
  42465f:	mov    rcx,rdi
  424662:	call   0x421ae0
  424667:	mov    eax,0xffffffff
  42466c:	add    rsp,0x48
  424670:	pop    rbx
  424671:	pop    rsi
  424672:	pop    rdi
  424673:	pop    rbp
  424674:	ret    
  424675:	mov    rdx,QWORD PTR [rip+0x14534]        # 0x438bb0
  42467c:	mov    eax,0xffffffff
  424681:	mov    r8d,DWORD PTR [rdx]
  424684:	test   r8d,r8d
  424687:	je     0x42466c
  424689:	lea    r8,[rip+0x13a10]        # 0x4380a0
  424690:	lea    rcx,[rip+0x13a2d]        # 0x4380c4
  424697:	mov    edx,0x2554
  42469c:	mov    DWORD PTR [rsp+0x3c],eax
  4246a0:	call   0x423fa0
  4246a5:	mov    eax,DWORD PTR [rsp+0x3c]
  4246a9:	jmp    0x42466c
  4246ab:	sub    rbx,rbp
  4246ae:	mov    rdx,rbx
  4246b1:	mov    rcx,QWORD PTR [rip+0x144f8]        # 0x438bb0
  4246b8:	movzx  eax,BYTE PTR [rbp+0x0]
  4246bc:	mov    DWORD PTR [rdi+0xec],edx
  4246c2:	mov    DWORD PTR [rdi+0xe4],0x8
  4246cc:	mov    ecx,DWORD PTR [rcx]
  4246ce:	mov    BYTE PTR [rdi+0xf0],al
  4246d4:	mov    eax,edx
  4246d6:	test   ecx,ecx
  4246d8:	je     0x42466c
  4246da:	mov    r9,QWORD PTR [rdi+0xd0]
  4246e1:	mov    eax,edx
  4246e3:	lea    r8,[rip+0x139e3]        # 0x4380cd
  4246ea:	lea    rcx,[rip+0x139d3]        # 0x4380c4
  4246f1:	mov    QWORD PTR [rsp+0x20],rax
  4246f6:	mov    edx,0x27f4
  4246fb:	call   0x423d00
  424700:	mov    eax,DWORD PTR [rdi+0xec]
  424706:	jmp    0x42466c
  42470b:	nop    DWORD PTR [rax+rax*1+0x0]
  424710:	movzx  esi,BYTE PTR [rbp+0x2]
  424714:	movzx  eax,BYTE PTR [rbp+0x3]
  424718:	shl    esi,0x8
  42471b:	add    esi,eax
  42471d:	cmp    esi,0x7
  424720:	jbe    0x42465f
  424726:	mov    rcx,QWORD PTR [rdi+0x100]
  42472d:	cmp    esi,DWORD PTR [rcx+0x10]
  424730:	ja     0x42473a
  424732:	add    rsi,rbp
  424735:	jmp    0x424626
  42473a:	mov    edx,esi
  42473c:	call   0x402560
  424741:	test   rax,rax
  424744:	je     0x42465f
  42474a:	sub    rbx,QWORD PTR [rdi+0xd0]
  424751:	lea    rbp,[rax+0x14]
  424755:	mov    QWORD PTR [rdi+0x100],rax
  42475c:	mov    QWORD PTR [rdi+0xd0],rbp
  424763:	add    rbx,rbp
  424766:	jmp    0x424732
  424768:	nop    DWORD PTR [rax+rax*1+0x0]
  424770:	push   rbp
  424771:	push   rdi
  424772:	push   rsi
  424773:	push   rbx
  424774:	sub    rsp,0x38
  424778:	mov    eax,DWORD PTR [rcx+0xe8]
  42477e:	mov    ebp,edx
  424780:	mov    edx,DWORD PTR [rcx+0xe0]
  424786:	mov    rbx,rcx
  424789:	cmp    eax,edx
  42478b:	jbe    0x424880
  424791:	sub    eax,edx
  424793:	mov    DWORD PTR [rcx+0xe8],edx
  424799:	lea    esi,[rax+0x8]
  42479c:	mov    edi,eax
  42479e:	movzx  edx,BYTE PTR [rbx+0xf1]
  4247a5:	mov    rax,QWORD PTR [rbx+0xd8]
  4247ac:	mov    BYTE PTR [rax],dl
  4247ae:	mov    rax,QWORD PTR [rbx+0xd8]
  4247b5:	mov    BYTE PTR [rax+0x1],bpl
  4247b9:	mov    eax,DWORD PTR [rbx+0xe8]
  4247bf:	mov    rdx,QWORD PTR [rbx+0xd8]
  4247c6:	shr    eax,0x8
  4247c9:	mov    BYTE PTR [rdx+0x2],al
  4247cc:	mov    rax,QWORD PTR [rbx+0xd8]
  4247d3:	mov    edx,DWORD PTR [rbx+0xe8]
  4247d9:	mov    BYTE PTR [rax+0x3],dl
  4247dc:	mov    eax,DWORD PTR [rbx+0xa8]
  4247e2:	mov    rdx,QWORD PTR [rbx+0xd8]
  4247e9:	sar    eax,0x8
  4247ec:	mov    BYTE PTR [rdx+0x4],al
  4247ef:	mov    rax,QWORD PTR [rbx+0xd8]
  4247f6:	mov    edx,DWORD PTR [rbx+0xa8]
  4247fc:	mov    BYTE PTR [rax+0x5],dl
  4247ff:	mov    rax,QWORD PTR [rbx+0xd8]
  424806:	xor    edx,edx
  424808:	mov    WORD PTR [rax+0x6],dx
  42480c:	cmp    WORD PTR [rbx],0x6ff
  424811:	jbe    0x42481d
  424813:	cmp    QWORD PTR [rbx+0x168],0x0
  42481b:	je     0x424890
  42481d:	mov    rax,QWORD PTR [rip+0x1438c]        # 0x438bb0
  424824:	mov    eax,DWORD PTR [rax]
  424826:	test   eax,eax
  424828:	jne    0x4248a0
  42482a:	mov    rdx,QWORD PTR [rbx+0xd8]
  424831:	mov    r8d,DWORD PTR [rbx+0xe8]
  424838:	movzx  r9d,bpl
  42483c:	mov    rcx,rbx
  42483f:	call   0x4228d0
  424844:	mov    r8,QWORD PTR [rbx+0xd8]
  42484b:	mov    edx,DWORD PTR [rbx+0xe0]
  424851:	mov    ebp,eax
  424853:	lea    rcx,[r8+0x8]
  424857:	add    rdx,r8
  42485a:	mov    r8,rdi
  42485d:	call   0x429528
  424862:	xor    eax,eax
  424864:	test   ebp,ebp
  424866:	mov    DWORD PTR [rbx+0xe8],esi
  42486c:	setle  al
  42486f:	neg    eax
  424871:	add    rsp,0x38
  424875:	pop    rbx
  424876:	pop    rsi
  424877:	pop    rdi
  424878:	pop    rbp
  424879:	ret    
  42487a:	nop    WORD PTR [rax+rax*1+0x0]
  424880:	mov    esi,0x8
  424885:	xor    edi,edi
  424887:	jmp    0x42479e
  42488c:	nop    DWORD PTR [rax+0x0]
  424890:	mov    rax,QWORD PTR [rbx+0xd8]
  424897:	mov    BYTE PTR [rax+0x6],0x1
  42489b:	jmp    0x42481d
  42489d:	nop    DWORD PTR [rax]
  4248a0:	mov    eax,DWORD PTR [rbx+0xe8]
  4248a6:	mov    r9,QWORD PTR [rbx+0xd8]
  4248ad:	lea    r8,[rip+0x13829]        # 0x4380dd
  4248b4:	lea    rcx,[rip+0x13809]        # 0x4380c4
  4248bb:	mov    edx,0x2e54
  4248c0:	mov    QWORD PTR [rsp+0x20],rax
  4248c5:	call   0x423d00
  4248ca:	jmp    0x42482a
  4248cf:	nop
  4248d0:	push   rsi
  4248d1:	push   rbx
  4248d2:	sub    rsp,0x48
  4248d6:	cmp    WORD PTR [rcx],0x6ff
  4248db:	mov    rbx,rcx
  4248de:	mov    BYTE PTR [rsp+0x30],0x6
  4248e3:	mov    BYTE PTR [rsp+0x31],0x1
  4248e8:	mov    BYTE PTR [rsp+0x32],0x0
  4248ed:	mov    BYTE PTR [rsp+0x33],0x8
  4248f2:	mov    DWORD PTR [rsp+0x34],0x0
  4248fa:	jbe    0x424906
  4248fc:	cmp    QWORD PTR [rcx+0x168],0x0
  424904:	je     0x424950
  424906:	mov    rax,QWORD PTR [rip+0x142a3]        # 0x438bb0
  42490d:	lea    rsi,[rsp+0x30]
  424912:	mov    eax,DWORD PTR [rax]
  424914:	test   eax,eax
  424916:	jne    0x424960
  424918:	mov    rdx,rsi
  42491b:	mov    r9d,0x1
  424921:	mov    r8d,0x8
  424927:	mov    rcx,rbx
  42492a:	call   0x4228d0
  42492f:	test   eax,eax
  424931:	mov    edx,0xffffffff
  424936:	jle    0x424941
  424938:	mov    BYTE PTR [rbx+0x14c],0x2
  42493f:	xor    edx,edx
  424941:	mov    eax,edx
  424943:	add    rsp,0x48
  424947:	pop    rbx
  424948:	pop    rsi
  424949:	ret    
  42494a:	nop    WORD PTR [rax+rax*1+0x0]
  424950:	mov    BYTE PTR [rsp+0x36],0x1
  424955:	jmp    0x424906
  424957:	nop    WORD PTR [rax+rax*1+0x0]
  424960:	lea    r8,[rip+0x13776]        # 0x4380dd
  424967:	lea    rcx,[rip+0x13756]        # 0x4380c4
  42496e:	mov    QWORD PTR [rsp+0x20],0x8
  424977:	mov    r9,rsi
  42497a:	mov    edx,0x3034
  42497f:	call   0x423d00
  424984:	jmp    0x424918
  424986:	nop
  424987:	nop
  424988:	nop
  424989:	nop
  42498a:	nop
  42498b:	nop
  42498c:	nop
  42498d:	nop
  42498e:	nop
  42498f:	nop
  424990:	push   rsi
  424991:	push   rbx
  424992:	sub    rsp,0x28
  424996:	mov    rbx,rcx
  424999:	mov    rcx,QWORD PTR [rcx+0x10]
  42499d:	mov    rsi,rdx
  4249a0:	cmp    rcx,rdx
  4249a3:	jae    0x4249c2
  4249a5:	lea    rcx,[rip+0x1374d]        # 0x4380f9
  4249ac:	lea    rdx,[rip+0x1373d]        # 0x4380f0
  4249b3:	mov    r8d,0x12b
  4249b9:	call   0x4291e0
  4249be:	mov    rcx,QWORD PTR [rbx+0x10]
  4249c2:	add    QWORD PTR [rbx+0x8],rsi
  4249c6:	sub    rcx,rsi
  4249c9:	mov    eax,esi
  4249cb:	mov    QWORD PTR [rbx+0x10],rcx
  4249cf:	add    rsp,0x28
  4249d3:	pop    rbx
  4249d4:	pop    rsi
  4249d5:	ret    
  4249d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4249e0:	push   rsi
  4249e1:	push   rbx
  4249e2:	sub    rsp,0x28
  4249e6:	mov    rbx,QWORD PTR [rcx+0x8]
  4249ea:	mov    rsi,rcx
  4249ed:	mov    rcx,QWORD PTR [rcx+0x10]
  4249f1:	cmp    r8,rbx
  4249f4:	cmovbe rbx,r8
  4249f8:	mov    r8,rbx
  4249fb:	call   0x40cf10
  424a00:	sub    QWORD PTR [rsi+0x8],rbx
  424a04:	mov    eax,ebx
  424a06:	add    rsp,0x28
  424a0a:	pop    rbx
  424a0b:	pop    rsi
  424a0c:	ret    
  424a0d:	nop    DWORD PTR [rax]
  424a10:	push   rdi
  424a11:	push   rsi
  424a12:	push   rbx
  424a13:	sub    rsp,0x20
  424a17:	cmp    QWORD PTR [rcx+0x10],rdx
  424a1b:	mov    rsi,QWORD PTR [rcx+0x18]
  424a1f:	mov    rbx,rcx
  424a22:	mov    rdi,rdx
  424a25:	jb     0x424af0
  424a2b:	mov    eax,DWORD PTR [rsi+0xe8]
  424a31:	mov    r8,rax
  424a34:	add    rax,QWORD PTR [rsi+0xd8]
  424a3b:	cmp    QWORD PTR [rbx+0x8],rax
  424a3f:	je     0x424a61
  424a41:	lea    rdx,[rip+0x136a8]        # 0x4380f0
  424a48:	lea    rcx,[rip+0x136d9]        # 0x438128
  424a4f:	mov    r8d,0xdc
  424a55:	call   0x4291e0
  424a5a:	mov    r8d,DWORD PTR [rsi+0xe8]
  424a61:	mov    r9d,DWORD PTR [rsi+0xe0]
  424a68:	lea    eax,[r9+0x10]
  424a6c:	sub    eax,r8d
  424a6f:	cmp    QWORD PTR [rbx+0x10],rax
  424a73:	je     0x424a9c
  424a75:	lea    rdx,[rip+0x13674]        # 0x4380f0
  424a7c:	lea    rcx,[rip+0x136dd]        # 0x438160
  424a83:	mov    r8d,0xdd
  424a89:	call   0x4291e0
  424a8e:	mov    r8d,DWORD PTR [rsi+0xe8]
  424a95:	mov    r9d,DWORD PTR [rsi+0xe0]
  424a9c:	add    r8d,edi
  424a9f:	cmp    r8d,r9d
  424aa2:	mov    DWORD PTR [rsi+0xe8],r8d
  424aa9:	jbe    0x424ac3
  424aab:	xor    edx,edx
  424aad:	mov    rcx,rsi
  424ab0:	call   0x424770
  424ab5:	mov    r8d,DWORD PTR [rsi+0xe8]
  424abc:	mov    r9d,DWORD PTR [rsi+0xe0]
  424ac3:	mov    eax,r8d
  424ac6:	add    rax,QWORD PTR [rsi+0xd8]
  424acd:	add    r9d,0x10
  424ad1:	add    QWORD PTR [rbx+0x20],rdi
  424ad5:	sub    r9d,r8d
  424ad8:	mov    QWORD PTR [rbx+0x8],rax
  424adc:	mov    eax,r9d
  424adf:	mov    QWORD PTR [rbx+0x10],rax
  424ae3:	mov    eax,edi
  424ae5:	add    rsp,0x20
  424ae9:	pop    rbx
  424aea:	pop    rsi
  424aeb:	pop    rdi
  424aec:	ret    
  424aed:	nop    DWORD PTR [rax]
  424af0:	lea    rdx,[rip+0x135f9]        # 0x4380f0
  424af7:	lea    rcx,[rip+0x13612]        # 0x438110
  424afe:	mov    r8d,0xdb
  424b04:	call   0x4291e0
  424b09:	jmp    0x424a2b
  424b0e:	xchg   ax,ax
  424b10:	push   rsi
  424b11:	push   rbx
  424b12:	sub    rsp,0x28
  424b16:	mov    rsi,rcx
  424b19:	mov    rcx,rdx
  424b1c:	mov    rbx,QWORD PTR [rsi+0x10]
  424b20:	mov    rdx,QWORD PTR [rsi+0x8]
  424b24:	cmp    r8,rbx
  424b27:	cmovbe rbx,r8
  424b2b:	mov    r8,rbx
  424b2e:	call   0x429528
  424b33:	add    QWORD PTR [rsi+0x8],rbx
  424b37:	sub    QWORD PTR [rsi+0x10],rbx
  424b3b:	mov    eax,ebx
  424b3d:	add    rsp,0x28
  424b41:	pop    rbx
  424b42:	pop    rsi
  424b43:	ret    
  424b44:	xchg   ax,ax
  424b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424b50:	push   rdi
  424b51:	push   rsi
  424b52:	push   rbx
  424b53:	sub    rsp,0x20
  424b57:	mov    rsi,rcx
  424b5a:	mov    rcx,rdx
  424b5d:	mov    rdi,rdx
  424b60:	add    rcx,QWORD PTR [rsi+0x28]
  424b64:	mov    rax,QWORD PTR [rsi+0x20]
  424b68:	lea    rdx,[rcx+0x100]
  424b6f:	mov    QWORD PTR [rsi+0x28],rcx
  424b73:	cmp    rdx,rax
  424b76:	jbe    0x424bb7
  424b78:	mov    rax,rcx
  424b7b:	mov    ebx,0x400
  424b80:	shr    rax,0x3
  424b84:	cmp    rcx,0x1000
  424b8b:	cmovb  rax,rbx
  424b8f:	lea    rbx,[rax+rcx*1]
  424b93:	mov    rcx,QWORD PTR [rsi+0x18]
  424b97:	mov    rdx,rbx
  424b9a:	call   0x4050d0
  424b9f:	mov    rdx,rax
  424ba2:	mov    eax,0xffffffff
  424ba7:	test   rdx,rdx
  424baa:	je     0x424bd3
  424bac:	mov    rcx,QWORD PTR [rsi+0x28]
  424bb0:	mov    QWORD PTR [rsi+0x20],rbx
  424bb4:	mov    rax,rbx
  424bb7:	cmp    rax,rcx
  424bba:	jbe    0x424be0
  424bbc:	mov    rdx,QWORD PTR [rsi+0x18]
  424bc0:	mov    rbx,rcx
  424bc3:	sub    rax,rcx
  424bc6:	add    rbx,QWORD PTR [rdx]
  424bc9:	mov    QWORD PTR [rsi+0x10],rax
  424bcd:	mov    eax,edi
  424bcf:	mov    QWORD PTR [rsi+0x8],rbx
  424bd3:	add    rsp,0x20
  424bd7:	pop    rbx
  424bd8:	pop    rsi
  424bd9:	pop    rdi
  424bda:	ret    
  424bdb:	nop    DWORD PTR [rax+rax*1+0x0]
  424be0:	lea    rcx,[rip+0x135c3]        # 0x4381aa
  424be7:	lea    rdx,[rip+0x13502]        # 0x4380f0
  424bee:	mov    r8d,0x150
  424bf4:	call   0x4291e0
  424bf9:	mov    rcx,QWORD PTR [rsi+0x28]
  424bfd:	mov    rax,QWORD PTR [rsi+0x20]
  424c01:	jmp    0x424bbc
  424c03:	nop    DWORD PTR [rax]
  424c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424c10:	push   r15
  424c12:	push   r14
  424c14:	mov    eax,0x1088
  424c19:	push   r13
  424c1b:	push   r12
  424c1d:	push   rbp
  424c1e:	push   rdi
  424c1f:	push   rsi
  424c20:	push   rbx
  424c21:	call   0x428410
  424c26:	sub    rsp,rax
  424c29:	mov    rbx,QWORD PTR [rsp+0x10f0]
  424c31:	mov    DWORD PTR [rdx+0x34],0x0
  424c38:	lea    rax,[rsp+0x80]
  424c40:	mov    QWORD PTR [rsp+0x68],0x0
  424c49:	cmp    QWORD PTR [rbx+0x10],0x0
  424c4e:	mov    QWORD PTR [rsp+0x48],rax
  424c53:	mov    QWORD PTR [rsp+0x60],rax
  424c58:	je     0x424d83
  424c5e:	mov    rbp,rdx
  424c61:	lea    rax,[rsp+0x60]
  424c66:	mov    rdx,QWORD PTR [rsp+0x48]
  424c6b:	mov    r12,QWORD PTR [rip+0x1add2]        # 0x43fa44
  424c72:	lea    r15,[rsp+0x78]
  424c77:	lea    r14,[rsp+0x70]
  424c7c:	lea    r13,[rsp+0x68]
  424c81:	mov    QWORD PTR [rsp+0x50],r9
  424c86:	mov    DWORD PTR [rsp+0x58],r8d
  424c8b:	mov    rdi,rcx
  424c8e:	mov    QWORD PTR [rsp+0x40],rax
  424c93:	mov    rax,QWORD PTR [rsp+0x50]
  424c98:	mov    r8d,0x1000
  424c9e:	sub    r8,QWORD PTR [rsp+0x68]
  424ca3:	mov    rcx,rax
  424ca6:	call   QWORD PTR [rax]
  424ca8:	test   eax,eax
  424caa:	js     0x424d83
  424cb0:	mov    rdx,QWORD PTR [rsp+0x68]
  424cb5:	jne    0x424cc0
  424cb7:	test   rdx,rdx
  424cba:	je     0x424f2f
  424cc0:	cdqe   
  424cc2:	add    rax,rdx
  424cc5:	mov    QWORD PTR [rsp+0x68],rax
  424cca:	mov    rax,QWORD PTR [rsp+0x48]
  424ccf:	mov    QWORD PTR [rsp+0x60],rax
  424cd4:	mov    rax,QWORD PTR [rbx+0x10]
  424cd8:	jmp    0x424d2a
  424cda:	nop    WORD PTR [rax+rax*1+0x0]
  424ce0:	cmp    QWORD PTR [rsp+0x78],0xffffffffffffffff
  424ce6:	jne    0x424e50
  424cec:	mov    rax,QWORD PTR [rip+0x13ebd]        # 0x438bb0
  424cf3:	mov    r8d,DWORD PTR [rax]
  424cf6:	test   r8d,r8d
  424cf9:	jne    0x424da0
  424cff:	cmp    esi,0x7
  424d02:	jne    0x424dd5
  424d08:	mov    rax,QWORD PTR [rbx+0x10]
  424d0c:	test   rax,rax
  424d0f:	je     0x424de0
  424d15:	cmp    QWORD PTR [rsp+0x68],0x0
  424d1b:	je     0x424de0
  424d21:	test   r11d,r11d
  424d24:	je     0x424de0
  424d2a:	mov    rdx,QWORD PTR [rbx+0x8]
  424d2e:	or     BYTE PTR [rbp+0x34],0x5
  424d32:	mov    rcx,rdi
  424d35:	mov    r9,QWORD PTR [rsp+0x40]
  424d3a:	mov    r8d,DWORD PTR [rsp+0x58]
  424d3f:	mov    QWORD PTR [rsp+0x30],r15
  424d44:	mov    QWORD PTR [rsp+0x28],r14
  424d49:	mov    QWORD PTR [rsp+0x70],rdx
  424d4e:	mov    rdx,rbp
  424d51:	mov    QWORD PTR [rsp+0x20],r13
  424d56:	mov    QWORD PTR [rsp+0x78],rax
  424d5b:	call   0x41e9f0
  424d60:	mov    QWORD PTR [rsp+0x78],rax
  424d65:	call   r12
  424d68:	mov    rdx,QWORD PTR [rsp+0x70]
  424d6d:	sub    rdx,QWORD PTR [rbx+0x8]
  424d71:	mov    rcx,rbx
  424d74:	mov    esi,DWORD PTR [rax]
  424d76:	call   QWORD PTR [rbx]
  424d78:	test   eax,eax
  424d7a:	mov    r11d,eax
  424d7d:	jns    0x424ce0
  424d83:	mov    eax,0xffffffff
  424d88:	add    rsp,0x1088
  424d8f:	pop    rbx
  424d90:	pop    rsi
  424d91:	pop    rdi
  424d92:	pop    rbp
  424d93:	pop    r12
  424d95:	pop    r13
  424d97:	pop    r14
  424d99:	pop    r15
  424d9b:	ret    
  424d9c:	nop    DWORD PTR [rax+0x0]
  424da0:	mov    DWORD PTR [rsp+0x5c],r11d
  424da5:	call   r12
  424da8:	mov    DWORD PTR [rsp+0x20],esi
  424dac:	mov    r9d,DWORD PTR [rax]
  424daf:	lea    r8,[rip+0x1341a]        # 0x4381d0
  424db6:	lea    rcx,[rip+0x13333]        # 0x4380f0
  424dbd:	mov    edx,0x7d4
  424dc2:	call   0x423fa0
  424dc7:	cmp    esi,0x7
  424dca:	mov    r11d,DWORD PTR [rsp+0x5c]
  424dcf:	je     0x424d08
  424dd5:	cmp    esi,0x2a
  424dd8:	je     0x424df1
  424dda:	nop    WORD PTR [rax+rax*1+0x0]
  424de0:	mov    rax,QWORD PTR [rip+0x13dc9]        # 0x438bb0
  424de7:	mov    ecx,DWORD PTR [rax]
  424de9:	test   ecx,ecx
  424deb:	jne    0x424ecc
  424df1:	mov    rdx,QWORD PTR [rsp+0x60]
  424df6:	cmp    rdx,QWORD PTR [rsp+0x48]
  424dfb:	je     0x424e6f
  424dfd:	mov    rsi,QWORD PTR [rsp+0x68]
  424e02:	test   rsi,rsi
  424e05:	jne    0x424e60
  424e07:	mov    rax,QWORD PTR [rsp+0x48]
  424e0c:	cmp    QWORD PTR [rbx+0x10],0x0
  424e11:	lea    rdx,[rax+rsi*1]
  424e15:	mov    QWORD PTR [rsp+0x60],rdx
  424e1a:	je     0x424d83
  424e20:	cmp    rdx,QWORD PTR [rsp+0x48]
  424e25:	jae    0x424c93
  424e2b:	lea    rdx,[rip+0x132be]        # 0x4380f0
  424e32:	lea    rcx,[rip+0x13388]        # 0x4381c1
  424e39:	mov    r8d,0x5f
  424e3f:	call   0x4291e0
  424e44:	mov    rdx,QWORD PTR [rsp+0x60]
  424e49:	jmp    0x424c93
  424e4e:	xchg   ax,ax
  424e50:	mov    rsi,QWORD PTR [rsp+0x68]
  424e55:	jmp    0x424e07
  424e57:	nop    WORD PTR [rax+rax*1+0x0]
  424e60:	mov    rcx,QWORD PTR [rsp+0x48]
  424e65:	mov    r8,rsi
  424e68:	call   0x429520
  424e6d:	jmp    0x424e07
  424e6f:	mov    rax,QWORD PTR [rip+0x13d3a]        # 0x438bb0
  424e76:	mov    eax,DWORD PTR [rax]
  424e78:	test   eax,eax
  424e7a:	jne    0x424f36
  424e80:	test   rdi,rdi
  424e83:	setne  bl
  424e86:	cmp    esi,0x16
  424e89:	jne    0x424ea4
  424e8b:	test   bl,bl
  424e8d:	je     0x424ea4
  424e8f:	mov    rcx,QWORD PTR [rdi+0x28]
  424e93:	xor    r9d,r9d
  424e96:	mov    r8d,0x961
  424e9c:	mov    rdx,rdi
  424e9f:	call   0x40a8d0
  424ea4:	cmp    esi,0x7
  424ea7:	jne    0x424ec2
  424ea9:	test   bl,bl
  424eab:	je     0x424ec2
  424ead:	mov    rcx,QWORD PTR [rdi+0x28]
  424eb1:	xor    r9d,r9d
  424eb4:	mov    r8d,0x960
  424eba:	mov    rdx,rdi
  424ebd:	call   0x40a8d0
  424ec2:	call   r12
  424ec5:	mov    DWORD PTR [rax],esi
  424ec7:	jmp    0x424d83
  424ecc:	call   r12
  424ecf:	mov    eax,DWORD PTR [rax]
  424ed1:	mov    r9d,DWORD PTR [rsp+0x68]
  424ed6:	lea    r8,[rip+0x1333b]        # 0x438218
  424edd:	lea    rcx,[rip+0x1320c]        # 0x4380f0
  424ee4:	mov    edx,0x814
  424ee9:	mov    DWORD PTR [rsp+0x20],eax
  424eed:	call   0x423fa0
  424ef2:	mov    rax,QWORD PTR [rip+0x13cb7]        # 0x438bb0
  424ef9:	mov    edx,DWORD PTR [rax]
  424efb:	test   edx,edx
  424efd:	je     0x424df1
  424f03:	mov    rax,QWORD PTR [rsp+0x68]
  424f08:	mov    r9,QWORD PTR [rsp+0x60]
  424f0d:	lea    r8,[rip+0x1334d]        # 0x438261
  424f14:	lea    rcx,[rip+0x131d5]        # 0x4380f0
  424f1b:	mov    edx,0x844
  424f20:	mov    QWORD PTR [rsp+0x20],rax
  424f25:	call   0x423d00
  424f2a:	jmp    0x424df1
  424f2f:	xor    eax,eax
  424f31:	jmp    0x424d88
  424f36:	lea    r8,[rip+0x1333b]        # 0x438278
  424f3d:	lea    rcx,[rip+0x131ac]        # 0x4380f0
  424f44:	mov    edx,0x884
  424f49:	call   0x423fa0
  424f4e:	jmp    0x424e80
  424f53:	nop    DWORD PTR [rax]
  424f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424f60:	push   rsi
  424f61:	push   rbx
  424f62:	sub    rsp,0x28
  424f66:	mov    rsi,rdx
  424f69:	mov    rbx,r8
  424f6c:	mov    r8,QWORD PTR [rbx+0x10]
  424f70:	test   r8,r8
  424f73:	je     0x424f90
  424f75:	mov    rdx,QWORD PTR [rbx+0x8]
  424f79:	mov    rcx,rsi
  424f7c:	call   QWORD PTR [rsi]
  424f7e:	test   eax,eax
  424f80:	je     0x424fa0
  424f82:	js     0x424f90
  424f84:	movsxd rdx,eax
  424f87:	mov    rcx,rbx
  424f8a:	call   QWORD PTR [rbx]
  424f8c:	test   eax,eax
  424f8e:	jns    0x424f6c
  424f90:	mov    eax,0xffffffff
  424f95:	add    rsp,0x28
  424f99:	pop    rbx
  424f9a:	pop    rsi
  424f9b:	ret    
  424f9c:	nop    DWORD PTR [rax+0x0]
  424fa0:	xor    eax,eax
  424fa2:	jmp    0x424f95
  424fa4:	xchg   ax,ax
  424fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424fb0:	lea    rax,[rip+0xfffffffffffffa29]        # 0x4249e0
  424fb7:	mov    QWORD PTR [rcx+0x8],r8
  424fbb:	mov    QWORD PTR [rcx+0x10],rdx
  424fbf:	mov    QWORD PTR [rcx],rax
  424fc2:	ret    
  424fc3:	nop    DWORD PTR [rax]
  424fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424fd0:	push   rdi
  424fd1:	push   rsi
  424fd2:	push   rbx
  424fd3:	sub    rsp,0x20
  424fd7:	mov    eax,DWORD PTR [rdx+0xe8]
  424fdd:	mov    rsi,rdx
  424fe0:	mov    edx,DWORD PTR [rdx+0xe0]
  424fe6:	mov    rbx,rcx
  424fe9:	lea    r8d,[rdx+0x10]
  424fed:	sub    r8d,eax
  424ff0:	test   r8d,r8d
  424ff3:	mov    edi,r8d
  424ff6:	jne    0x425014
  424ff8:	lea    rdx,[rip+0x130f1]        # 0x4380f0
  424fff:	lea    rcx,[rip+0x1329c]        # 0x4382a2
  425006:	mov    r8b,0xff
  425009:	call   0x4291e0
  42500e:	mov    eax,DWORD PTR [rsi+0xe8]
  425014:	add    rax,QWORD PTR [rsi+0xd8]
  42501b:	lea    rcx,[rip+0xfffffffffffff9ee]        # 0x424a10
  425022:	mov    QWORD PTR [rbx+0x10],rdi
  425026:	mov    QWORD PTR [rbx+0x20],0x0
  42502e:	mov    QWORD PTR [rbx+0x18],rsi
  425032:	mov    QWORD PTR [rbx],rcx
  425035:	mov    QWORD PTR [rbx+0x8],rax
  425039:	add    rsp,0x20
  42503d:	pop    rbx
  42503e:	pop    rsi
  42503f:	pop    rdi
  425040:	ret    
  425041:	nop    DWORD PTR [rax+rax*1+0x0]
  425046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425050:	lea    rax,[rip+0xfffffffffffffab9]        # 0x424b10
  425057:	mov    QWORD PTR [rcx+0x8],rdx
  42505b:	mov    QWORD PTR [rcx+0x10],r8
  42505f:	mov    QWORD PTR [rcx],rax
  425062:	ret    
  425063:	nop    DWORD PTR [rax]
  425066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425070:	lea    rax,[rip+0xfffffffffffff919]        # 0x424990
  425077:	mov    QWORD PTR [rcx+0x8],rdx
  42507b:	mov    QWORD PTR [rcx+0x10],r8
  42507f:	mov    QWORD PTR [rcx],rax
  425082:	ret    
  425083:	nop    DWORD PTR [rax]
  425086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425090:	push   rbx
  425091:	sub    rsp,0x30
  425095:	lea    rax,[rip+0xfffffffffffffab4]        # 0x424b50
  42509c:	cmp    r8,0x3ff
  4250a3:	mov    rbx,rcx
  4250a6:	mov    QWORD PTR [rcx+0x18],rdx
  4250aa:	mov    QWORD PTR [rcx],rax
  4250ad:	mov    rcx,QWORD PTR [rdx]
  4250b0:	jbe    0x4250d3
  4250b2:	test   rcx,rcx
  4250b5:	je     0x4250e8
  4250b7:	mov    QWORD PTR [rbx+0x20],r8
  4250bb:	mov    QWORD PTR [rbx+0x28],0x0
  4250c3:	xor    eax,eax
  4250c5:	mov    QWORD PTR [rbx+0x8],rcx
  4250c9:	mov    QWORD PTR [rbx+0x10],r8
  4250cd:	add    rsp,0x30
  4250d1:	pop    rbx
  4250d2:	ret    
  4250d3:	mov    QWORD PTR [rsp+0x20],rdx
  4250d8:	call   0x429580
  4250dd:	mov    rdx,QWORD PTR [rsp+0x20]
  4250e2:	mov    r8d,0x400
  4250e8:	mov    rcx,r8
  4250eb:	mov    QWORD PTR [rsp+0x28],rdx
  4250f0:	mov    QWORD PTR [rsp+0x20],r8
  4250f5:	call   0x429538
  4250fa:	mov    rdx,QWORD PTR [rsp+0x28]
  4250ff:	mov    rcx,rax
  425102:	mov    r8,QWORD PTR [rsp+0x20]
  425107:	test   rcx,rcx
  42510a:	mov    QWORD PTR [rdx],rax
  42510d:	mov    eax,0xffffffff
  425112:	jne    0x4250b7
  425114:	jmp    0x4250cd
  425116:	nop
  425117:	nop
  425118:	nop
  425119:	nop
  42511a:	nop
  42511b:	nop
  42511c:	nop
  42511d:	nop
  42511e:	nop
  42511f:	nop
  425120:	push   rbx
  425121:	sub    rsp,0x20
  425125:	mov    rcx,QWORD PTR [rdx]
  425128:	mov    rbx,rdx
  42512b:	call   0x429580
  425130:	mov    rcx,rbx
  425133:	call   0x429580
  425138:	xor    eax,eax
  42513a:	add    rsp,0x20
  42513e:	pop    rbx
  42513f:	ret    
  425140:	push   rsi
  425141:	push   rbx
  425142:	sub    rsp,0x28
  425146:	mov    rbx,rcx
  425149:	mov    esi,edx
  42514b:	mov    edx,0x65
  425150:	call   0x40d520
  425155:	mov    rcx,rbx
  425158:	mov    edx,0x3
  42515d:	call   0x40d520
  425162:	mov    rcx,rbx
  425165:	mov    edx,0x1
  42516a:	call   0x40d520
  42516f:	movsx  edx,si
  425172:	mov    rcx,rbx
  425175:	add    rsp,0x28
  425179:	pop    rbx
  42517a:	pop    rsi
  42517b:	jmp    0x40d4d0
  425180:	push   rbp
  425181:	push   r15
  425183:	push   r14
  425185:	push   r13
  425187:	push   r12
  425189:	push   rdi
  42518a:	push   rsi
  42518b:	push   rbx
  42518c:	sub    rsp,0xd8
  425193:	lea    rbp,[rsp+0x80]
  42519b:	lea    rax,[r9+0x4]
  42519f:	mov    r15,rdx
  4251a2:	mov    rdi,rcx
  4251a5:	mov    rdx,r8
  4251a8:	mov    rbx,r9
  4251ab:	mov    QWORD PTR [rbp-0x48],rax
  4251af:	lea    rax,[r9+0x13]
  4251b3:	and    rax,0xfffffffffffffff0
  4251b7:	call   0x428410
  4251bc:	xor    r13d,r13d
  4251bf:	sub    rsp,rax
  4251c2:	mov    r8,r9
  4251c5:	lea    r12,[rbp-0x40]
  4251c9:	lea    rsi,[rsp+0x20]
  4251ce:	mov    rcx,rsi
  4251d1:	lea    r14,[rsi+rbx*1]
  4251d5:	call   0x429528
  4251da:	lea    rax,[rsi+rbx*1+0x1]
  4251df:	mov    QWORD PTR [rbp-0x50],rax
  4251e3:	lea    rax,[rsi+rbx*1+0x2]
  4251e8:	mov    QWORD PTR [rbp-0x58],rax
  4251ec:	lea    rax,[rsi+rbx*1+0x3]
  4251f1:	lea    rbx,[rbp-0x20]
  4251f5:	mov    QWORD PTR [rbp-0x60],rax
  4251f9:	nop    DWORD PTR [rax+0x0]
  425200:	mov    edx,r13d
  425203:	mov    rax,QWORD PTR [rbp-0x50]
  425207:	mov    rcx,rbx
  42520a:	shr    edx,0x18
  42520d:	mov    BYTE PTR [r14],dl
  425210:	mov    edx,r13d
  425213:	shr    edx,0x10
  425216:	mov    BYTE PTR [rax],dl
  425218:	mov    rax,QWORD PTR [rbp-0x58]
  42521c:	mov    edx,r13d
  42521f:	shr    edx,0x8
  425222:	mov    BYTE PTR [rax],dl
  425224:	mov    rax,QWORD PTR [rbp-0x60]
  425228:	mov    BYTE PTR [rax],r13b
  42522b:	call   0x426ec0
  425230:	mov    rdx,QWORD PTR [rbp-0x48]
  425234:	mov    r8,rsi
  425237:	mov    rcx,rbx
  42523a:	call   0x426eb8
  42523f:	mov    edx,0x14
  425244:	mov    r8,r12
  425247:	mov    rcx,rbx
  42524a:	call   0x426ec8
  42524f:	xor    edx,edx
  425251:	cmp    r15,0x14
  425255:	jbe    0x425280
  425257:	nop    WORD PTR [rax+rax*1+0x0]
  425260:	movzx  ecx,BYTE PTR [r12+rdx*1]
  425265:	xor    BYTE PTR [rdi+rdx*1],cl
  425268:	add    rdx,0x1
  42526c:	cmp    rdx,0x14
  425270:	jne    0x425260
  425272:	add    rdi,0x14
  425276:	sub    r15,0x14
  42527a:	add    r13d,0x1
  42527e:	jmp    0x425200
  425280:	test   r15,r15
  425283:	je     0x425296
  425285:	movzx  ecx,BYTE PTR [r12+rdx*1]
  42528a:	xor    BYTE PTR [rdi+rdx*1],cl
  42528d:	add    rdx,0x1
  425291:	cmp    rdx,r15
  425294:	jne    0x425285
  425296:	lea    rsp,[rbp+0x58]
  42529a:	pop    rbx
  42529b:	pop    rsi
  42529c:	pop    rdi
  42529d:	pop    r12
  42529f:	pop    r13
  4252a1:	pop    r14
  4252a3:	pop    r15
  4252a5:	pop    rbp
  4252a6:	ret    
  4252a7:	nop    WORD PTR [rax+rax*1+0x0]
  4252b0:	push   r15
  4252b2:	push   r14
  4252b4:	push   r13
  4252b6:	push   r12
  4252b8:	push   rbp
  4252b9:	push   rdi
  4252ba:	push   rsi
  4252bb:	push   rbx
  4252bc:	sub    rsp,0xd48
  4252c3:	mov    rdi,QWORD PTR [rsp+0xdb0]
  4252cb:	lea    r12,[rsp+0x50]
  4252d0:	lea    rbp,[rsp+0x70]
  4252d5:	mov    rbx,r9
  4252d8:	mov    r15,r8
  4252db:	mov    DWORD PTR [rsp+0x68],edx
  4252df:	mov    QWORD PTR [rsp+0x60],rcx
  4252e4:	mov    QWORD PTR [rsp+0x48],0x800
  4252ed:	mov    rcx,r12
  4252f0:	call   QWORD PTR [rip+0x1a44e]        # 0x43f744
  4252f6:	mov    rcx,rbp
  4252f9:	call   0x426e70
  4252fe:	mov    rcx,rdi
  425301:	call   0x429490
  425306:	lea    r13,[rax+rbx*1]
  42530a:	mov    r14,rax
  42530d:	mov    rcx,r13
  425310:	call   0x429538
  425315:	test   rax,rax
  425318:	mov    rsi,rax
  42531b:	je     0x425480
  425321:	mov    r8,rbx
  425324:	mov    rdx,r15
  425327:	mov    rcx,rax
  42532a:	call   0x429528
  42532f:	lea    rcx,[rsi+rbx*1]
  425333:	mov    rdx,rdi
  425336:	mov    r8,r14
  425339:	lea    rbx,[rsp+0x540]
  425341:	call   0x429528
  425346:	lea    rdx,[rsp+0x60]
  42534b:	lea    r9,[rsp+0x48]
  425350:	lea    rcx,[rip+0x12f59]        # 0x4382b0
  425357:	mov    r8,rbx
  42535a:	call   0x426d10
  42535f:	test   eax,eax
  425361:	mov    edi,eax
  425363:	je     0x4253b0
  425365:	mov    rax,QWORD PTR [rip+0x13844]        # 0x438bb0
  42536c:	mov    ebx,DWORD PTR [rax]
  42536e:	test   ebx,ebx
  425370:	jne    0x425453
  425376:	xor    ebx,ebx
  425378:	mov    rcx,rsi
  42537b:	call   0x429580
  425380:	mov    rcx,rbp
  425383:	call   0x426e80
  425388:	mov    rcx,r12
  42538b:	call   QWORD PTR [rip+0x1a3ab]        # 0x43f73c
  425391:	mov    rax,rbx
  425394:	add    rsp,0xd48
  42539b:	pop    rbx
  42539c:	pop    rsi
  42539d:	pop    rdi
  42539e:	pop    rbp
  42539f:	pop    r12
  4253a1:	pop    r13
  4253a3:	pop    r14
  4253a5:	pop    r15
  4253a7:	ret    
  4253a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4253b0:	lea    rdi,[rsp+0xa0]
  4253b8:	mov    rdx,QWORD PTR [rsp+0x48]
  4253bd:	mov    r8,rbx
  4253c0:	mov    rcx,rdi
  4253c3:	call   0x426e98
  4253c8:	cmp    eax,0x2
  4253cb:	je     0x425400
  4253cd:	mov    rax,QWORD PTR [rip+0x137dc]        # 0x438bb0
  4253d4:	mov    r11d,DWORD PTR [rax]
  4253d7:	test   r11d,r11d
  4253da:	je     0x425376
  4253dc:	lea    r8,[rip+0x12f16]        # 0x4382f9
  4253e3:	lea    rcx,[rip+0x12ef8]        # 0x4382e2
  4253ea:	mov    edx,0x14c2
  4253ef:	xor    ebx,ebx
  4253f1:	call   0x423fa0
  4253f6:	jmp    0x425378
  4253f8:	nop    DWORD PTR [rax+rax*1+0x0]
  425400:	cmp    DWORD PTR [rsp+0xb8],0x1010
  42540b:	jne    0x4253cd
  42540d:	mov    r8,rdi
  425410:	mov    edx,0x2000
  425415:	mov    rcx,rbp
  425418:	call   0x426e78
  42541d:	test   eax,eax
  42541f:	jne    0x425487
  425421:	mov    rax,QWORD PTR [rip+0x13788]        # 0x438bb0
  425428:	mov    r10d,DWORD PTR [rax]
  42542b:	test   r10d,r10d
  42542e:	je     0x425376
  425434:	lea    r8,[rip+0x12ebe]        # 0x4382f9
  42543b:	lea    rcx,[rip+0x12ea0]        # 0x4382e2
  425442:	mov    edx,0x1522
  425447:	xor    ebx,ebx
  425449:	call   0x423fa0
  42544e:	jmp    0x425378
  425453:	mov    ecx,edi
  425455:	call   0x426cd0
  42545a:	lea    r8,[rip+0x12e5f]        # 0x4382c0
  425461:	lea    rcx,[rip+0x12e7a]        # 0x4382e2
  425468:	mov    QWORD PTR [rsp+0x20],rax
  42546d:	mov    r9d,edi
  425470:	mov    edx,0x1452
  425475:	call   0x423fa0
  42547a:	jmp    0x425376
  42547f:	nop
  425480:	xor    eax,eax
  425482:	jmp    0x425394
  425487:	mov    r14,QWORD PTR [rsp+0x70]
  42548c:	lea    rax,[r13+0x2a]
  425490:	cmp    r14,rax
  425493:	jae    0x4254c5
  425495:	mov    rax,QWORD PTR [rip+0x13714]        # 0x438bb0
  42549c:	mov    eax,DWORD PTR [rax]
  42549e:	test   eax,eax
  4254a0:	je     0x425376
  4254a6:	lea    r8,[rip+0x12e6e]        # 0x43831b
  4254ad:	lea    rcx,[rip+0x12e2e]        # 0x4382e2
  4254b4:	mov    edx,0x1592
  4254b9:	xor    ebx,ebx
  4254bb:	call   0x423fa0
  4254c0:	jmp    0x425378
  4254c5:	lea    rbx,[rsp+0x140]
  4254cd:	xor    eax,eax
  4254cf:	mov    ecx,0x80
  4254d4:	lea    r15d,[r14-0x15]
  4254d8:	mov    rdi,rbx
  4254db:	rep stos QWORD PTR es:[rdi],rax
  4254de:	lea    rdi,[rsp+0xd0]
  4254e6:	mov    rcx,rdi
  4254e9:	call   0x426ec0
  4254ee:	lea    r8,[rip+0x12e70]        # 0x438365
  4254f5:	xor    edx,edx
  4254f7:	mov    rcx,rdi
  4254fa:	call   0x426eb8
  4254ff:	lea    r9,[rbx+0x15]
  425503:	mov    rcx,rdi
  425506:	mov    edx,0x14
  42550b:	mov    r8,r9
  42550e:	mov    QWORD PTR [rsp+0x38],r9
  425513:	call   0x426ec8
  425518:	mov    rax,r14
  42551b:	mov    r8,r13
  42551e:	mov    rdx,rsi
  425521:	sub    rax,r13
  425524:	lea    rcx,[rbx+rax*1]
  425528:	mov    BYTE PTR [rsp+rax*1+0x13f],0x1
  425530:	call   0x429528
  425535:	mov    rdi,QWORD PTR [rip+0x13674]        # 0x438bb0
  42553c:	mov    r9d,DWORD PTR [rdi]
  42553f:	test   r9d,r9d
  425542:	mov    r9,QWORD PTR [rsp+0x38]
  425547:	jne    0x425636
  42554d:	lea    r13,[rbx+0x1]
  425551:	mov    edx,0x14
  425556:	mov    rcx,r13
  425559:	call   0x426000
  42555e:	mov    r8d,DWORD PTR [rdi]
  425561:	test   r8d,r8d
  425564:	jne    0x4256a9
  42556a:	lea    r13,[rbx+0x15]
  42556e:	lea    r8,[rbx+0x1]
  425572:	mov    r9d,0x14
  425578:	mov    rdx,r15
  42557b:	mov    rcx,r13
  42557e:	call   0x425180
  425583:	mov    ecx,DWORD PTR [rdi]
  425585:	test   ecx,ecx
  425587:	jne    0x425684
  42558d:	lea    r13,[rbx+0x1]
  425591:	lea    r8,[rbx+0x15]
  425595:	mov    edx,0x14
  42559a:	mov    r9,r15
  42559d:	mov    rcx,r13
  4255a0:	call   0x425180
  4255a5:	mov    edx,DWORD PTR [rdi]
  4255a7:	test   edx,edx
  4255a9:	jne    0x42565b
  4255af:	mov    r8,rbx
  4255b2:	mov    rdx,r14
  4255b5:	mov    rcx,r12
  4255b8:	call   0x426e88
  4255bd:	lea    r9,[rbp+0x8]
  4255c1:	lea    r8,[rbp+0x18]
  4255c5:	mov    rdx,r12
  4255c8:	mov    rcx,r12
  4255cb:	call   QWORD PTR [rip+0x1a17b]        # 0x43f74c
  4255d1:	mov    r13,QWORD PTR [rsp+0x70]
  4255d6:	mov    rcx,r13
  4255d9:	call   0x429538
  4255de:	mov    rbx,rax
  4255e1:	mov    rax,QWORD PTR [rsp+0xdb8]
  4255e9:	test   rbx,rbx
  4255ec:	mov    QWORD PTR [rax],r13
  4255ef:	je     0x425376
  4255f5:	mov    r8,r12
  4255f8:	mov    rdx,rbx
  4255fb:	mov    rcx,r13
  4255fe:	call   0x426e90
  425603:	cmp    DWORD PTR [rdi],0x0
  425606:	je     0x425378
  42560c:	mov    rax,QWORD PTR [rsp+0x70]
  425611:	lea    r8,[rip+0x12d1d]        # 0x438335
  425618:	lea    rcx,[rip+0x12cc3]        # 0x4382e2
  42561f:	mov    r9,rbx
  425622:	mov    edx,0x1645
  425627:	mov    QWORD PTR [rsp+0x20],rax
  42562c:	call   0x423d00
  425631:	jmp    0x425378
  425636:	mov    eax,r15d
  425639:	lea    r8,[rip+0x12cce]        # 0x43830e
  425640:	lea    rcx,[rip+0x12c9b]        # 0x4382e2
  425647:	mov    QWORD PTR [rsp+0x20],rax
  42564c:	mov    edx,0x10a5
  425651:	call   0x423d00
  425656:	jmp    0x42554d
  42565b:	lea    r8,[rip+0x12cb2]        # 0x438314
  425662:	lea    rcx,[rip+0x12c79]        # 0x4382e2
  425669:	mov    QWORD PTR [rsp+0x20],0x14
  425672:	mov    r9,r13
  425675:	mov    edx,0x1165
  42567a:	call   0x423d00
  42567f:	jmp    0x4255af
  425684:	lea    r8,[rip+0x12c83]        # 0x43830e
  42568b:	lea    rcx,[rip+0x12c50]        # 0x4382e2
  425692:	mov    QWORD PTR [rsp+0x20],r15
  425697:	mov    r9,r13
  42569a:	mov    edx,0x1125
  42569f:	call   0x423d00
  4256a4:	jmp    0x42558d
  4256a9:	lea    r8,[rip+0x12c64]        # 0x438314
  4256b0:	lea    rcx,[rip+0x12c2b]        # 0x4382e2
  4256b7:	mov    QWORD PTR [rsp+0x20],0x14
  4256c0:	mov    r9,r13
  4256c3:	mov    edx,0x10e5
  4256c8:	call   0x423d00
  4256cd:	jmp    0x42556a
  4256d2:	nop    DWORD PTR [rax+0x0]
  4256d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4256e0:	push   rdi
  4256e1:	push   rsi
  4256e2:	push   rbx
  4256e3:	sub    rsp,0x40
  4256e7:	mov    r10,QWORD PTR [rcx+0x168]
  4256ee:	mov    rbx,rcx
  4256f1:	mov    rsi,rdx
  4256f4:	test   r10,r10
  4256f7:	je     0x425890
  4256fd:	cmp    DWORD PTR [rdx+0x20],0x1e
  425701:	jne    0x425890
  425707:	mov    rax,QWORD PTR [rcx+0x130]
  42570e:	test   rax,rax
  425711:	je     0x425890
  425717:	movzx  edx,WORD PTR [rax+0x8]
  42571b:	cmp    dx,0x1
  42571f:	jbe    0x425890
  425725:	mov    rcx,QWORD PTR [rax]
  425728:	mov    rax,QWORD PTR [rcx+0x8]
  42572c:	cmp    DWORD PTR [rax+0x14],0xe1
  425733:	jne    0x425890
  425739:	cmp    dx,0x2
  42573d:	jne    0x425860
  425743:	mov    rdx,QWORD PTR [rax+0x48]
  425747:	xor    r9d,r9d
  42574a:	xor    r8d,r8d
  42574d:	mov    rcx,QWORD PTR [rdx]
  425750:	movsxd rdx,DWORD PTR [rax+0x10]
  425754:	lea    rax,[rsp+0x38]
  425759:	mov    QWORD PTR [rsp+0x28],rax
  42575e:	mov    rax,QWORD PTR [r10+0x78]
  425762:	add    rax,0x8
  425766:	mov    QWORD PTR [rsp+0x20],rax
  42576b:	call   0x4252b0
  425770:	test   rax,rax
  425773:	mov    rdi,rax
  425776:	je     0x425890
  42577c:	mov    edx,0x1f
  425781:	mov    rcx,rbx
  425784:	mov    BYTE PTR [rbx+0xf1],0xf
  42578b:	call   0x425140
  425790:	lea    rdx,[rip+0x12ba1]        # 0x438338
  425797:	mov    r8d,0x11
  42579d:	mov    rcx,rbx
  4257a0:	call   0x40d260
  4257a5:	mov    edx,0xd7
  4257aa:	mov    rcx,rbx
  4257ad:	call   0x40d520
  4257b2:	mov    edx,DWORD PTR [rsp+0x38]
  4257b6:	mov    rcx,rbx
  4257b9:	call   0x40d490
  4257be:	mov    r8,QWORD PTR [rsp+0x38]
  4257c3:	mov    rdx,rdi
  4257c6:	mov    rcx,rbx
  4257c9:	call   0x40d260
  4257ce:	mov    edx,0x20
  4257d3:	mov    rcx,rbx
  4257d6:	call   0x425140
  4257db:	lea    rdx,[rip+0x12b68]        # 0x43834a
  4257e2:	mov    r8d,0x1a
  4257e8:	mov    rcx,rbx
  4257eb:	call   0x40d260
  4257f0:	mov    edx,0xd7
  4257f5:	mov    rcx,rbx
  4257f8:	call   0x40d520
  4257fd:	xor    edx,edx
  4257ff:	mov    rcx,rbx
  425802:	call   0x40d520
  425807:	mov    edx,DWORD PTR [rsp+0x38]
  42580b:	mov    rcx,rbx
  42580e:	call   0x40d490
  425813:	mov    r8,QWORD PTR [rsp+0x38]
  425818:	mov    rdx,rdi
  42581b:	mov    rcx,rbx
  42581e:	call   0x40d260
  425823:	mov    rcx,rdi
  425826:	call   0x429580
  42582b:	mov    rcx,rbx
  42582e:	call   0x40d5c0
  425833:	mov    edi,eax
  425835:	mov    rcx,QWORD PTR [rsi]
  425838:	call   0x429580
  42583d:	mov    rcx,rsi
  425840:	call   0x429580
  425845:	mov    eax,edi
  425847:	mov    QWORD PTR [rbx+0xc0],0x0
  425852:	add    rsp,0x40
  425856:	pop    rbx
  425857:	pop    rsi
  425858:	pop    rdi
  425859:	ret    
  42585a:	nop    WORD PTR [rax+rax*1+0x0]
  425860:	mov    r9,QWORD PTR [rcx+0x10]
  425864:	cmp    DWORD PTR [r9+0x14],0xe1
  42586c:	jne    0x425890
  42586e:	mov    rdx,QWORD PTR [rax+0x48]
  425872:	mov    rcx,QWORD PTR [rdx]
  425875:	movsxd rdx,DWORD PTR [rax+0x10]
  425879:	mov    rax,QWORD PTR [r9+0x48]
  42587d:	movsxd r9,DWORD PTR [r9+0x10]
  425881:	mov    r8,QWORD PTR [rax]
  425884:	jmp    0x425754
  425889:	nop    DWORD PTR [rax+0x0]
  425890:	mov    edi,0xffffffff
  425895:	jmp    0x425835
  425897:	nop    WORD PTR [rax+rax*1+0x0]
  4258a0:	test   rdx,rdx
  4258a3:	je     0x4258b2
  4258a5:	lea    rax,[rip+0xfffffffffffff874]        # 0x425120
  4258ac:	cmp    QWORD PTR [rdx+0x10],rax
  4258b0:	je     0x4258b4
  4258b2:	repz ret 
  4258b4:	mov    DWORD PTR [rdx+0x20],r8d
  4258b8:	ret    
  4258b9:	nop    DWORD PTR [rax+0x0]
  4258c0:	sub    rsp,0x28
  4258c4:	cmp    QWORD PTR [rcx+0x168],0x0
  4258cc:	je     0x425900
  4258ce:	mov    edx,0x28
  4258d3:	mov    ecx,0x1
  4258d8:	call   0x4295c8
  4258dd:	test   rax,rax
  4258e0:	je     0x425900
  4258e2:	lea    rdx,[rip+0xfffffffffffff837]        # 0x425120
  4258e9:	mov    QWORD PTR [rax+0x10],rdx
  4258ed:	lea    rdx,[rip+0xfffffffffffffdec]        # 0x4256e0
  4258f4:	mov    QWORD PTR [rax+0x18],rdx
  4258f8:	add    rsp,0x28
  4258fc:	ret    
  4258fd:	nop    DWORD PTR [rax]
  425900:	xor    eax,eax
  425902:	jmp    0x4258f8
  425904:	nop
  425905:	nop
  425906:	nop
  425907:	nop
  425908:	nop
  425909:	nop
  42590a:	nop
  42590b:	nop
  42590c:	nop
  42590d:	nop
  42590e:	nop
  42590f:	nop
  425910:	push   rbx
  425911:	sub    rsp,0x20
  425915:	mov    rax,QWORD PTR [rip+0x18c1c]        # 0x43e538
  42591c:	mov    rbx,rdx
  42591f:	lea    rcx,[rdx+0x30]
  425923:	call   QWORD PTR [rax+0x48]
  425926:	mov    rax,QWORD PTR [rip+0x18c0b]        # 0x43e538
  42592d:	lea    rcx,[rbx+0x20]
  425931:	call   QWORD PTR [rax+0x20]
  425934:	mov    rax,QWORD PTR [rip+0x18bfd]        # 0x43e538
  42593b:	mov    rcx,QWORD PTR [rbx]
  42593e:	call   QWORD PTR [rax+0x80]
  425944:	mov    rcx,QWORD PTR [rbx+0x40]
  425948:	call   0x429580
  42594d:	mov    rcx,rbx
  425950:	call   0x429580
  425955:	xor    eax,eax
  425957:	add    rsp,0x20
  42595b:	pop    rbx
  42595c:	ret    
  42595d:	nop    DWORD PTR [rax]
  425960:	push   r13
  425962:	push   r12
  425964:	push   rbp
  425965:	push   rdi
  425966:	push   rsi
  425967:	push   rbx
  425968:	sub    rsp,0xc8
  42596f:	cmp    r8,0x1f
  425973:	mov    r12,rcx
  425976:	mov    rbx,rdx
  425979:	mov    rsi,r8
  42597c:	jbe    0x425adb
  425982:	mov    rcx,r8
  425985:	call   0x429538
  42598a:	test   rax,rax
  42598d:	mov    rdi,rax
  425990:	je     0x425adb
  425996:	mov    rcx,r12
  425999:	movsxd r8,esi
  42599c:	mov    rdx,rax
  42599f:	call   0x40cf10
  4259a4:	mov    rcx,QWORD PTR [rbx]
  4259a7:	test   rcx,rcx
  4259aa:	je     0x4259c0
  4259ac:	mov    rax,QWORD PTR [rip+0x18b85]        # 0x43e538
  4259b3:	call   QWORD PTR [rax+0x80]
  4259b9:	mov    QWORD PTR [rbx],0x0
  4259c0:	lea    rax,[rsp+0x80]
  4259c8:	mov    DWORD PTR [rsp+0x80],esi
  4259cf:	lea    r13,[rsp+0xb0]
  4259d7:	lea    rsi,[rbx+0x30]
  4259db:	lea    rcx,[rbx+0x20]
  4259df:	mov    r9d,0x914
  4259e5:	mov    QWORD PTR [rsp+0xa8],rax
  4259ed:	lea    rax,[rsp+0x90]
  4259f5:	mov    r8,QWORD PTR [rbx+0x40]
  4259f9:	mov    rdx,rsi
  4259fc:	mov    DWORD PTR [rsp+0xb0],0x0
  425a07:	mov    DWORD PTR [rsp+0xa0],0x0
  425a12:	mov    QWORD PTR [rsp+0xb8],rax
  425a1a:	lea    rax,[rsp+0x70]
  425a1f:	mov    DWORD PTR [rsp+0xb4],0x1
  425a2a:	mov    DWORD PTR [rsp+0xa4],0x1
  425a35:	mov    DWORD PTR [rsp+0x84],0x2
  425a40:	mov    QWORD PTR [rsp+0x58],rax
  425a45:	lea    rax,[rsp+0x6c]
  425a4a:	mov    QWORD PTR [rsp+0x88],rdi
  425a52:	mov    DWORD PTR [rsp+0x94],0x2
  425a5d:	mov    QWORD PTR [rsp+0x98],0x0
  425a69:	mov    QWORD PTR [rsp+0x50],rax
  425a6e:	lea    rax,[rsp+0xa0]
  425a76:	mov    DWORD PTR [rsp+0x90],0x0
  425a81:	mov    QWORD PTR [rsp+0x48],r13
  425a86:	mov    QWORD PTR [rsp+0x40],rsi
  425a8b:	mov    QWORD PTR [rsp+0x30],rax
  425a90:	mov    rax,QWORD PTR [rip+0x18aa1]        # 0x43e538
  425a97:	mov    DWORD PTR [rsp+0x38],0x0
  425a9f:	mov    DWORD PTR [rsp+0x28],0x0
  425aa7:	mov    DWORD PTR [rsp+0x20],0x0
  425aaf:	call   QWORD PTR [rax+0x30]
  425ab2:	mov    rcx,rdi
  425ab5:	mov    ebp,eax
  425ab7:	call   0x429580
  425abc:	mov    rax,QWORD PTR [rsp+0x98]
  425ac4:	cmp    ebp,0x90312
  425aca:	mov    QWORD PTR [rbx],rax
  425acd:	je     0x425b00
  425acf:	cmp    ebp,0x90314
  425ad5:	je     0x425af0
  425ad7:	test   ebp,ebp
  425ad9:	je     0x425b00
  425adb:	mov    eax,0xffffffff
  425ae0:	add    rsp,0xc8
  425ae7:	pop    rbx
  425ae8:	pop    rsi
  425ae9:	pop    rdi
  425aea:	pop    rbp
  425aeb:	pop    r12
  425aed:	pop    r13
  425aef:	ret    
  425af0:	mov    rax,QWORD PTR [rip+0x18a41]        # 0x43e538
  425af7:	mov    rdx,r13
  425afa:	mov    rcx,rsi
  425afd:	call   QWORD PTR [rax+0x40]
  425b00:	mov    r8d,DWORD PTR [rsp+0x90]
  425b08:	xor    eax,eax
  425b0a:	test   r8d,r8d
  425b0d:	je     0x425ae0
  425b0f:	mov    rdx,QWORD PTR [rbx]
  425b12:	mov    rcx,r12
  425b15:	call   0x40d260
  425b1a:	mov    rcx,r12
  425b1d:	call   0x40d5c0
  425b22:	add    rsp,0xc8
  425b29:	pop    rbx
  425b2a:	pop    rsi
  425b2b:	pop    rdi
  425b2c:	pop    rbp
  425b2d:	pop    r12
  425b2f:	pop    r13
  425b31:	ret    
  425b32:	nop    DWORD PTR [rax+0x0]
  425b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425b40:	push   r15
  425b42:	push   r14
  425b44:	push   r13
  425b46:	push   r12
  425b48:	push   rbp
  425b49:	push   rdi
  425b4a:	push   rsi
  425b4b:	push   rbx
  425b4c:	sub    rsp,0x108
  425b53:	mov    rbp,QWORD PTR [rcx+0x168]
  425b5a:	mov    QWORD PTR [rsp+0x78],0x0
  425b63:	test   rbp,rbp
  425b66:	je     0x425e80
  425b6c:	cmp    QWORD PTR [rip+0x189c4],0x0        # 0x43e538
  425b74:	mov    rsi,rcx
  425b77:	je     0x425e10
  425b7d:	lea    r12,[rsp+0xa0]
  425b85:	xor    eax,eax
  425b87:	mov    ecx,0x6
  425b8c:	mov    edx,0x5c
  425b91:	mov    rdi,r12
  425b94:	rep stos QWORD PTR es:[rdi],rax
  425b97:	mov    rax,QWORD PTR [rbp+0x70]
  425b9b:	lea    rbx,[rax+0x8]
  425b9f:	mov    rcx,rbx
  425ba2:	call   0x4294b8
  425ba7:	test   rax,rax
  425baa:	je     0x425bfe
  425bac:	mov    rdx,QWORD PTR [rbp+0x78]
  425bb0:	mov    DWORD PTR [rsp+0xcc],0x1
  425bbb:	lea    rcx,[rdx+0x8]
  425bbf:	mov    rdx,QWORD PTR [rdx]
  425bc2:	mov    QWORD PTR [rsp+0xb0],rbx
  425bca:	mov    QWORD PTR [rsp+0xc0],rcx
  425bd2:	lea    rcx,[rax+0x1]
  425bd6:	mov    DWORD PTR [rsp+0xc8],edx
  425bdd:	mov    rdx,rax
  425be0:	sub    rdx,rbx
  425be3:	mov    QWORD PTR [rsp+0xa0],rcx
  425beb:	mov    DWORD PTR [rsp+0xb8],edx
  425bf2:	call   0x429490
  425bf7:	mov    DWORD PTR [rsp+0xa8],eax
  425bfe:	mov    edx,0x48
  425c03:	mov    ecx,0x1
  425c08:	call   0x4295c8
  425c0d:	test   rax,rax
  425c10:	mov    rbx,rax
  425c13:	je     0x425e80
  425c19:	cmp    QWORD PTR [rsi+0x168],0x0
  425c21:	je     0x425e80
  425c27:	lea    rax,[rip+0xfffffffffffffce2]        # 0x425910
  425c2e:	cmp    QWORD PTR [rsp+0xb0],0x0
  425c37:	mov    edx,0x0
  425c3c:	lea    r13,[rbx+0x20]
  425c40:	lea    r14,[rsp+0x70]
  425c45:	mov    r8d,0x2
  425c4b:	mov    QWORD PTR [rbx+0x10],rax
  425c4f:	lea    rax,[rip+0xfffffffffffffd0a]        # 0x425960
  425c56:	mov    QWORD PTR [rbx+0x18],rax
  425c5a:	mov    rax,QWORD PTR [rip+0x188d7]        # 0x43e538
  425c61:	cmove  r12,rdx
  425c65:	xor    r9d,r9d
  425c68:	xor    ecx,ecx
  425c6a:	lea    rdx,[rip+0x12722]        # 0x438393
  425c71:	mov    rax,QWORD PTR [rax+0x18]
  425c75:	mov    QWORD PTR [rsp+0x40],r14
  425c7a:	mov    QWORD PTR [rsp+0x38],r13
  425c7f:	mov    QWORD PTR [rsp+0x30],0x0
  425c88:	mov    QWORD PTR [rsp+0x28],0x0
  425c91:	mov    QWORD PTR [rsp+0x20],r12
  425c96:	call   rax
  425c98:	test   eax,eax
  425c9a:	jne    0x425ead
  425ca0:	lea    rax,[rsp+0x80]
  425ca8:	mov    edx,0x2e
  425cad:	mov    DWORD PTR [rsp+0x90],0x0
  425cb8:	mov    DWORD PTR [rsp+0x94],0x1
  425cc3:	mov    DWORD PTR [rsp+0x84],0x2
  425cce:	mov    QWORD PTR [rsp+0x98],rax
  425cd6:	mov    rax,QWORD PTR [rbp+0x38]
  425cda:	mov    QWORD PTR [rsp+0x88],0x0
  425ce6:	mov    DWORD PTR [rsp+0x80],0x0
  425cf1:	lea    r12,[rax+0x8]
  425cf5:	mov    rcx,r12
  425cf8:	call   0x4294b8
  425cfd:	test   rax,rax
  425d00:	je     0x425ec0
  425d06:	mov    r9d,DWORD PTR [rbp+0x8]
  425d0a:	lea    rcx,[rbx+0x40]
  425d0e:	lea    rdx,[rip+0x12688]        # 0x43839d
  425d15:	mov    r8,r12
  425d18:	call   0x429330
  425d1d:	test   eax,eax
  425d1f:	js     0x425e90
  425d25:	mov    rax,QWORD PTR [rip+0x12e84]        # 0x438bb0
  425d2c:	lea    r15,[rsp+0xd0]
  425d34:	mov    eax,DWORD PTR [rax]
  425d36:	test   eax,eax
  425d38:	jne    0x425f50
  425d3e:	mov    rcx,QWORD PTR [rsp+0x78]
  425d43:	test   rcx,rcx
  425d46:	je     0x425d4e
  425d48:	call   QWORD PTR [rip+0x19fb6]        # 0x43fd04
  425d4e:	mov    rax,QWORD PTR [rip+0x187e3]        # 0x43e538
  425d55:	lea    rbp,[rbx+0x30]
  425d59:	lea    r12,[rsp+0x90]
  425d61:	mov    QWORD PTR [rsp+0x58],r14
  425d66:	mov    QWORD PTR [rsp+0x50],r15
  425d6b:	xor    edx,edx
  425d6d:	mov    QWORD PTR [rsp+0x48],r12
  425d72:	mov    QWORD PTR [rsp+0x40],rbp
  425d77:	mov    r9d,0x914
  425d7d:	mov    DWORD PTR [rsp+0x38],0x0
  425d85:	mov    QWORD PTR [rsp+0x30],0x0
  425d8e:	mov    rcx,r13
  425d91:	mov    DWORD PTR [rsp+0x28],0x0
  425d99:	mov    DWORD PTR [rsp+0x20],0x0
  425da1:	mov    r8,QWORD PTR [rbx+0x40]
  425da5:	call   QWORD PTR [rax+0x30]
  425da8:	cmp    eax,0x90312
  425dad:	je     0x425df0
  425daf:	cmp    eax,0x90314
  425db4:	je     0x425de0
  425db6:	test   eax,eax
  425db8:	je     0x425df0
  425dba:	mov    rdx,rbx
  425dbd:	mov    rcx,rsi
  425dc0:	call   0x425910
  425dc5:	xor    eax,eax
  425dc7:	add    rsp,0x108
  425dce:	pop    rbx
  425dcf:	pop    rsi
  425dd0:	pop    rdi
  425dd1:	pop    rbp
  425dd2:	pop    r12
  425dd4:	pop    r13
  425dd6:	pop    r14
  425dd8:	pop    r15
  425dda:	ret    
  425ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  425de0:	mov    rax,QWORD PTR [rip+0x18751]        # 0x43e538
  425de7:	mov    rdx,r12
  425dea:	mov    rcx,rbp
  425ded:	call   QWORD PTR [rax+0x40]
  425df0:	mov    eax,DWORD PTR [rsp+0x80]
  425df7:	mov    DWORD PTR [rbx+0x8],eax
  425dfa:	mov    rax,QWORD PTR [rsp+0x88]
  425e02:	mov    QWORD PTR [rbx],rax
  425e05:	mov    rax,rbx
  425e08:	jmp    0x425dc7
  425e0a:	nop    WORD PTR [rax+rax*1+0x0]
  425e10:	mov    edx,DWORD PTR [rip+0x186f2]        # 0x43e508
  425e16:	test   edx,edx
  425e18:	jne    0x425f71
  425e1e:	lea    rcx,[rip+0x186db]        # 0x43e500
  425e25:	call   0x4267a0
  425e2a:	cmp    QWORD PTR [rip+0x1870e],0x0        # 0x43e540
  425e32:	je     0x425e54
  425e34:	cmp    QWORD PTR [rip+0x186fc],0x0        # 0x43e538
  425e3c:	je     0x425fb0
  425e42:	lea    rcx,[rip+0x186c7]        # 0x43e510
  425e49:	call   QWORD PTR [rip+0x19afd]        # 0x43f94c
  425e4f:	jmp    0x425b7d
  425e54:	lea    rcx,[rip+0x12515]        # 0x438370
  425e5b:	call   QWORD PTR [rip+0x19af3]        # 0x43f954
  425e61:	test   rax,rax
  425e64:	mov    QWORD PTR [rip+0x186d5],rax        # 0x43e540
  425e6b:	jne    0x425e34
  425e6d:	lea    rcx,[rip+0x1869c]        # 0x43e510
  425e74:	call   QWORD PTR [rip+0x19ad2]        # 0x43f94c
  425e7a:	nop    WORD PTR [rax+rax*1+0x0]
  425e80:	xor    eax,eax
  425e82:	jmp    0x425dc7
  425e87:	nop    WORD PTR [rax+rax*1+0x0]
  425e90:	mov    rcx,QWORD PTR [rsp+0x78]
  425e95:	test   rcx,rcx
  425e98:	je     0x425ea0
  425e9a:	call   QWORD PTR [rip+0x19e64]        # 0x43fd04
  425ea0:	mov    rax,QWORD PTR [rip+0x18691]        # 0x43e538
  425ea7:	mov    rcx,r13
  425eaa:	call   QWORD PTR [rax+0x20]
  425ead:	mov    rcx,rbx
  425eb0:	call   0x429580
  425eb5:	xor    eax,eax
  425eb7:	jmp    0x425dc7
  425ebc:	nop    DWORD PTR [rax+0x0]
  425ec0:	lea    r15,[rsp+0xd0]
  425ec8:	mov    ecx,0x6
  425ecd:	xor    edx,edx
  425ecf:	mov    rdi,r15
  425ed2:	mov    r8,r15
  425ed5:	rep stos QWORD PTR es:[rdi],rax
  425ed8:	lea    rax,[rsp+0x78]
  425edd:	mov    DWORD PTR [rsp+0xd8],0x1
  425ee8:	mov    DWORD PTR [rsp+0xd0],0x20c02
  425ef3:	mov    rcx,r12
  425ef6:	mov    rdi,QWORD PTR [rip+0x19e0f]        # 0x43fd0c
  425efd:	mov    QWORD PTR [rsp+0x68],rax
  425f02:	mov    r9,rax
  425f05:	call   rdi
  425f07:	test   eax,eax
  425f09:	jne    0x425f83
  425f0b:	mov    rax,QWORD PTR [rsp+0x78]
  425f10:	mov    rdi,QWORD PTR [rax+0x18]
  425f14:	test   rdi,rdi
  425f17:	je     0x425f2d
  425f19:	mov    edx,0x2e
  425f1e:	mov    rcx,rdi
  425f21:	call   0x4294b8
  425f26:	test   rax,rax
  425f29:	cmovne r12,rdi
  425f2d:	mov    edx,0x2e
  425f32:	mov    rcx,r12
  425f35:	call   0x4294b8
  425f3a:	test   rax,rax
  425f3d:	je     0x425d3e
  425f43:	jmp    0x425d06
  425f48:	nop    DWORD PTR [rax+rax*1+0x0]
  425f50:	mov    r9,QWORD PTR [rbx+0x40]
  425f54:	lea    r8,[rip+0x12451]        # 0x4383ac
  425f5b:	lea    rcx,[rip+0x1245c]        # 0x4383be
  425f62:	mov    edx,0x1174
  425f67:	call   0x423fa0
  425f6c:	jmp    0x425d3e
  425f71:	lea    rcx,[rip+0x18598]        # 0x43e510
  425f78:	call   QWORD PTR [rip+0x1995e]        # 0x43f8dc
  425f7e:	jmp    0x425e2a
  425f83:	xor    edx,edx
  425f85:	mov    DWORD PTR [rsp+0xd0],0x20002
  425f90:	mov    r9,QWORD PTR [rsp+0x68]
  425f95:	mov    r8,r15
  425f98:	mov    rcx,r12
  425f9b:	call   rdi
  425f9d:	test   eax,eax
  425f9f:	jne    0x425f2d
  425fa1:	jmp    0x425f0b
  425fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425fb0:	lea    rdx,[rip+0x123c5]        # 0x43837c
  425fb7:	mov    rcx,QWORD PTR [rip+0x18582]        # 0x43e540
  425fbe:	call   QWORD PTR [rip+0x19960]        # 0x43f924
  425fc4:	test   rax,rax
  425fc7:	je     0x425e6d
  425fcd:	call   rax
  425fcf:	mov    rbx,rax
  425fd2:	mov    QWORD PTR [rip+0x1855f],rax        # 0x43e538
  425fd9:	lea    rcx,[rip+0x18530]        # 0x43e510
  425fe0:	call   QWORD PTR [rip+0x19966]        # 0x43f94c
  425fe6:	test   rbx,rbx
  425fe9:	jne    0x425b7d
  425fef:	xor    eax,eax
  425ff1:	jmp    0x425dc7
  425ff6:	nop
  425ff7:	nop
  425ff8:	nop
  425ff9:	nop
  425ffa:	nop
  425ffb:	nop
  425ffc:	nop
  425ffd:	nop
  425ffe:	nop
  425fff:	nop
  426000:	push   rdi
  426001:	push   rsi
  426002:	push   rbx
  426003:	sub    rsp,0x20
  426007:	movsxd rsi,edx
  42600a:	mov    rbx,rcx
  42600d:	mov    rdx,rcx
  426010:	mov    r8,rsi
  426013:	mov    ecx,0x1
  426018:	call   0x426ce0
  42601d:	test   eax,eax
  42601f:	js     0x426030
  426021:	add    rsp,0x20
  426025:	pop    rbx
  426026:	pop    rsi
  426027:	pop    rdi
  426028:	ret    
  426029:	nop    DWORD PTR [rax+0x0]
  426030:	xor    ecx,ecx
  426032:	mov    r8,rsi
  426035:	mov    rdx,rbx
  426038:	call   0x426ce0
  42603d:	test   eax,eax
  42603f:	jns    0x426021
  426041:	test   esi,esi
  426043:	jle    0x426021
  426045:	lea    eax,[rsi-0x1]
  426048:	mov    esi,0x81020409
  42604d:	lea    rdi,[rbx+rax*1+0x1]
  426052:	call   0x4294f0
  426057:	mov    ecx,eax
  426059:	add    rbx,0x1
  42605d:	imul   esi
  42605f:	add    edx,ecx
  426061:	sar    ecx,0x1f
  426064:	sar    edx,0x6
  426067:	sub    edx,ecx
  426069:	mov    BYTE PTR [rbx-0x1],dl
  42606c:	cmp    rbx,rdi
  42606f:	jne    0x426052
  426071:	jmp    0x426021
  426073:	nop
  426074:	nop
  426075:	nop
  426076:	nop
  426077:	nop
  426078:	nop
  426079:	nop
  42607a:	nop
  42607b:	nop
  42607c:	nop
  42607d:	nop
  42607e:	nop
  42607f:	nop
  426080:	push   rbx
  426081:	sub    rsp,0x30
  426085:	test   rcx,rcx
  426088:	mov    rbx,rcx
  42608b:	je     0x4260ed
  42608d:	lea    rcx,[rsp+0x20]
  426092:	call   QWORD PTR [rip+0x1989c]        # 0x43f934
  426098:	mov    r8d,DWORD PTR [rsp+0x24]
  42609d:	mov    eax,DWORD PTR [rsp+0x20]
  4260a1:	movabs rdx,0xd6bf94d5e57a42bd
  4260ab:	shl    r8,0x20
  4260af:	or     r8,rax
  4260b2:	movabs rax,0xfe624e212ac18000
  4260bc:	add    r8,rax
  4260bf:	mov    rax,r8
  4260c2:	mul    rdx
  4260c5:	shr    rdx,0x17
  4260c9:	mov    DWORD PTR [rbx],edx
  4260cb:	imul   rdx,rdx,0x989680
  4260d2:	sub    r8,rdx
  4260d5:	mov    edx,0xcccccccd
  4260da:	mov    eax,r8d
  4260dd:	mul    edx
  4260df:	xor    eax,eax
  4260e1:	shr    edx,0x3
  4260e4:	mov    DWORD PTR [rbx+0x4],edx
  4260e7:	add    rsp,0x30
  4260eb:	pop    rbx
  4260ec:	ret    
  4260ed:	call   QWORD PTR [rip+0x19951]        # 0x43fa44
  4260f3:	mov    DWORD PTR [rax],0x16
  4260f9:	mov    eax,0xffffffff
  4260fe:	jmp    0x4260e7
  426100:	push   r14
  426102:	push   r13
  426104:	push   r12
  426106:	push   rbp
  426107:	push   rdi
  426108:	push   rsi
  426109:	push   rbx
  42610a:	sub    rsp,0x680
  426111:	test   rcx,rcx
  426114:	mov    r12,rcx
  426117:	mov    ebx,edx
  426119:	je     0x426492
  42611f:	movsxd r13,edx
  426122:	shl    r13,0x4
  426126:	add    r13,rcx
  426129:	mov    rax,QWORD PTR [rip+0x4f10]        # 0x42b040
  426130:	cmp    rax,0xffffffffffffffff
  426134:	je     0x42649a
  42613a:	test   rax,rax
  42613d:	je     0x426160
  42613f:	mov    edx,ebx
  426141:	mov    rcx,r12
  426144:	call   rax
  426146:	add    rsp,0x680
  42614d:	pop    rbx
  42614e:	pop    rsi
  42614f:	pop    rdi
  426150:	pop    rbp
  426151:	pop    r12
  426153:	pop    r13
  426155:	pop    r14
  426157:	ret    
  426158:	nop    DWORD PTR [rax+rax*1+0x0]
  426160:	test   r12,r12
  426163:	je     0x42651c
  426169:	cmp    r13,r12
  42616c:	mov    DWORD PTR [rsp+0x50],0x0
  426174:	mov    DWORD PTR [rsp+0x260],0x0
  42617f:	mov    DWORD PTR [rsp+0x470],0x0
  42618a:	jbe    0x4264f3
  426190:	lea    rdi,[rsp+0x50]
  426195:	lea    rbp,[rsp+0x260]
  42619d:	lea    rsi,[rsp+0x470]
  4261a5:	xor    ebx,ebx
  4261a7:	xor    edx,edx
  4261a9:	mov    r9,r12
  4261ac:	xor    ecx,ecx
  4261ae:	xchg   ax,ax
  4261b0:	movzx  r14d,WORD PTR [r9+0x8]
  4261b5:	mov    eax,edx
  4261b7:	test   r14w,0x300
  4261bd:	je     0x426202
  4261bf:	test   edx,edx
  4261c1:	mov    r10,QWORD PTR [r9]
  4261c4:	je     0x426483
  4261ca:	cmp    QWORD PTR [rsp+0x58],r10
  4261cf:	je     0x426202
  4261d1:	lea    rax,[rdi+0x10]
  4261d5:	xor    r11d,r11d
  4261d8:	jmp    0x4261ee
  4261da:	nop    WORD PTR [rax+rax*1+0x0]
  4261e0:	add    rax,0x8
  4261e4:	cmp    QWORD PTR [rax-0x8],r10
  4261e8:	je     0x426400
  4261ee:	add    r11d,0x1
  4261f2:	cmp    r11d,edx
  4261f5:	jne    0x4261e0
  4261f7:	cmp    edx,0x3f
  4261fa:	mov    eax,edx
  4261fc:	jbe    0x426483
  426202:	test   r14b,0x10
  426206:	je     0x4263e0
  42620c:	test   ebx,ebx
  42620e:	mov    r10,QWORD PTR [r9]
  426211:	je     0x426455
  426217:	cmp    QWORD PTR [rsp+0x268],r10
  42621f:	je     0x4263f5
  426225:	lea    rdx,[rbp+0x10]
  426229:	xor    r11d,r11d
  42622c:	jmp    0x42623e
  42622e:	xchg   ax,ax
  426230:	add    rdx,0x8
  426234:	cmp    QWORD PTR [rdx-0x8],r10
  426238:	je     0x4263f5
  42623e:	add    r11d,0x1
  426242:	cmp    r11d,ebx
  426245:	jne    0x426230
  426247:	cmp    ebx,0x3f
  42624a:	mov    r14d,ebx
  42624d:	jbe    0x426455
  426253:	test   ecx,ecx
  426255:	je     0x426470
  42625b:	cmp    QWORD PTR [rsp+0x478],r10
  426263:	je     0x426290
  426265:	lea    rbx,[rsi+0x10]
  426269:	xor    r11d,r11d
  42626c:	jmp    0x42627a
  42626e:	xchg   ax,ax
  426270:	add    rbx,0x8
  426274:	cmp    QWORD PTR [rbx-0x8],r10
  426278:	je     0x426290
  42627a:	add    r11d,0x1
  42627e:	cmp    r11d,ecx
  426281:	jne    0x426270
  426283:	cmp    ecx,0x3f
  426286:	jbe    0x426470
  42628c:	nop    DWORD PTR [rax+0x0]
  426290:	mov    r10d,ecx
  426293:	add    r9,0x10
  426297:	mov    edx,eax
  426299:	mov    ebx,r14d
  42629c:	cmp    r13,r9
  42629f:	mov    ecx,r10d
  4262a2:	ja     0x4261b0
  4262a8:	mov    rcx,r12
  4262ab:	mov    DWORD PTR [rsp+0x50],eax
  4262af:	mov    DWORD PTR [rsp+0x260],r14d
  4262b7:	not    rcx
  4262ba:	mov    DWORD PTR [rsp+0x470],r10d
  4262c2:	add    rcx,r13
  4262c5:	shr    rcx,0x4
  4262c9:	add    ecx,0x2
  4262cc:	xor    eax,eax
  4262ce:	test   r8d,r8d
  4262d1:	js     0x426305
  4262d3:	mov    eax,r8d
  4262d6:	mov    edx,0x10624dd3
  4262db:	imul   edx
  4262dd:	mov    eax,r8d
  4262e0:	sar    eax,0x1f
  4262e3:	sar    edx,0x6
  4262e6:	sub    edx,eax
  4262e8:	mov    DWORD PTR [rsp+0x40],edx
  4262ec:	imul   edx,edx,0x3e8
  4262f2:	sub    r8d,edx
  4262f5:	imul   eax,r8d,0x3e8
  4262fc:	mov    DWORD PTR [rsp+0x44],eax
  426300:	lea    rax,[rsp+0x40]
  426305:	mov    QWORD PTR [rsp+0x20],rax
  42630a:	mov    r9,rsi
  42630d:	mov    r8,rbp
  426310:	mov    rdx,rdi
  426313:	call   QWORD PTR [rip+0x19a53]        # 0x43fd6c
  426319:	test   eax,eax
  42631b:	mov    ebx,eax
  42631d:	js     0x426512
  426323:	je     0x42635c
  426325:	xor    r14d,r14d
  426328:	cmp    r13,r12
  42632b:	ja     0x426394
  42632d:	lea    rdx,[rip+0x120ab]        # 0x4383df
  426334:	lea    rcx,[rip+0x120ab]        # 0x4383e6
  42633b:	mov    r8d,0xb2
  426341:	mov    ebx,r14d
  426344:	call   0x4291e0
  426349:	mov    eax,ebx
  42634b:	jmp    0x426146
  426350:	xor    edx,edx
  426352:	add    r12,0x10
  426356:	mov    WORD PTR [r12-0x6],dx
  42635c:	cmp    r13,r12
  42635f:	ja     0x426350
  426361:	xor    eax,eax
  426363:	jmp    0x426146
  426368:	nop    DWORD PTR [rax+rax*1+0x0]
  426370:	mov    rcx,QWORD PTR [r12]
  426374:	mov    rdx,rsi
  426377:	call   0x426e48
  42637c:	test   eax,eax
  42637e:	je     0x4263b5
  426380:	or     WORD PTR [r12+0xa],0x1
  426387:	add    r12,0x10
  42638b:	add    r14d,0x1
  42638f:	cmp    r13,r12
  426392:	jbe    0x4263c9
  426394:	movzx  edx,WORD PTR [r12+0x8]
  42639a:	xor    eax,eax
  42639c:	mov    WORD PTR [r12+0xa],ax
  4263a2:	test   dh,0x3
  4263a5:	jne    0x426432
  4263ab:	test   dl,0x10
  4263ae:	jne    0x426410
  4263b0:	test   dx,dx
  4263b3:	jne    0x426370
  4263b5:	movzx  eax,WORD PTR [r12+0xa]
  4263bb:	test   ax,ax
  4263be:	jne    0x426387
  4263c0:	add    r12,0x10
  4263c4:	cmp    r13,r12
  4263c7:	ja     0x426394
  4263c9:	cmp    r14d,ebx
  4263cc:	jne    0x42632d
  4263d2:	mov    eax,ebx
  4263d4:	jmp    0x426146
  4263d9:	nop    DWORD PTR [rax+0x0]
  4263e0:	test   r14w,r14w
  4263e4:	mov    r14d,ebx
  4263e7:	je     0x426290
  4263ed:	mov    r10,QWORD PTR [r9]
  4263f0:	jmp    0x426253
  4263f5:	mov    r14d,ebx
  4263f8:	jmp    0x426253
  4263fd:	nop    DWORD PTR [rax]
  426400:	mov    eax,edx
  426402:	jmp    0x426202
  426407:	nop    WORD PTR [rax+rax*1+0x0]
  426410:	mov    rcx,QWORD PTR [r12]
  426414:	mov    rdx,rbp
  426417:	call   0x426e48
  42641c:	test   eax,eax
  42641e:	je     0x426427
  426420:	or     WORD PTR [r12+0xa],0x10
  426427:	movzx  edx,WORD PTR [r12+0x8]
  42642d:	jmp    0x4263b0
  426432:	mov    rcx,QWORD PTR [r12]
  426436:	mov    rdx,rdi
  426439:	call   0x426e48
  42643e:	test   eax,eax
  426440:	je     0x42644a
  426442:	or     WORD PTR [r12+0xa],0x300
  42644a:	movzx  edx,WORD PTR [r12+0x8]
  426450:	jmp    0x4263ab
  426455:	mov    edx,ebx
  426457:	lea    r14d,[rbx+0x1]
  42645b:	mov    QWORD PTR [rsp+rdx*8+0x268],r10
  426463:	jmp    0x426253
  426468:	nop    DWORD PTR [rax+rax*1+0x0]
  426470:	mov    edx,ecx
  426472:	mov    QWORD PTR [rsp+rdx*8+0x478],r10
  42647a:	lea    r10d,[rcx+0x1]
  42647e:	jmp    0x426293
  426483:	mov    eax,edx
  426485:	mov    QWORD PTR [rsp+rax*8+0x58],r10
  42648a:	lea    eax,[rdx+0x1]
  42648d:	jmp    0x426202
  426492:	xor    r13d,r13d
  426495:	jmp    0x426129
  42649a:	mov    DWORD PTR [rsp+0x3c],r8d
  42649f:	mov    QWORD PTR [rip+0x4b96],0x0        # 0x42b040
  4264aa:	lea    rcx,[rip+0x11f1f]        # 0x4383d0
  4264b1:	call   QWORD PTR [rip+0x19465]        # 0x43f91c
  4264b7:	test   rax,rax
  4264ba:	mov    r8d,DWORD PTR [rsp+0x3c]
  4264bf:	je     0x4264e7
  4264c1:	mov    DWORD PTR [rsp+0x3c],r8d
  4264c6:	lea    rdx,[rip+0x11f0a]        # 0x4383d7
  4264cd:	mov    rcx,rax
  4264d0:	call   QWORD PTR [rip+0x1944e]        # 0x43f924
  4264d6:	mov    r8d,DWORD PTR [rsp+0x3c]
  4264db:	mov    QWORD PTR [rip+0x4b5e],rax        # 0x42b040
  4264e2:	jmp    0x42613a
  4264e7:	mov    rax,QWORD PTR [rip+0x4b52]        # 0x42b040
  4264ee:	jmp    0x42613a
  4264f3:	mov    ecx,0x1
  4264f8:	lea    rdi,[rsp+0x50]
  4264fd:	lea    rbp,[rsp+0x260]
  426505:	lea    rsi,[rsp+0x470]
  42650d:	jmp    0x4262cc
  426512:	mov    eax,0xffffffff
  426517:	jmp    0x426146
  42651c:	call   QWORD PTR [rip+0x19522]        # 0x43fa44
  426522:	mov    DWORD PTR [rax],0xe
  426528:	mov    eax,0xffffffff
  42652d:	jmp    0x426146
  426532:	nop
  426533:	nop
  426534:	nop
  426535:	nop
  426536:	nop
  426537:	nop
  426538:	nop
  426539:	nop
  42653a:	nop
  42653b:	nop
  42653c:	nop
  42653d:	nop
  42653e:	nop
  42653f:	nop
  426540:	push   rdi
  426541:	push   rsi
  426542:	push   rbx
  426543:	sub    rsp,0x120
  42654a:	lea    rdi,[rip+0x11eaf]        # 0x438400
  426551:	mov    rbx,rcx
  426554:	mov    ecx,0x2
  426559:	mov    rsi,rbx
  42655c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42655e:	je     0x4265a1
  426560:	lea    rsi,[rsp+0x20]
  426565:	mov    rcx,rbx
  426568:	mov    rdi,rsi
  42656b:	call   QWORD PTR [rip+0x1951b]        # 0x43fa8c
  426571:	mov    ecx,0x20
  426576:	mov    r8,rax
  426579:	xor    eax,eax
  42657b:	rep stos QWORD PTR es:[rdi],rax
  42657e:	mov    rax,r8
  426581:	cmp    BYTE PTR [rbx],0x0
  426584:	je     0x426596
  426586:	add    rbx,0x1
  42658a:	mov    BYTE PTR [rbx-0x1],0x2a
  42658e:	cmp    BYTE PTR [rbx],0x0
  426591:	jne    0x426586
  426593:	mov    rax,r8
  426596:	add    rsp,0x120
  42659d:	pop    rbx
  42659e:	pop    rsi
  42659f:	pop    rdi
  4265a0:	ret    
  4265a1:	lea    rsi,[rsp+0x20]
  4265a6:	call   QWORD PTR [rip+0x19460]        # 0x43fa0c
  4265ac:	mov    edx,0x100
  4265b1:	mov    r8,rax
  4265b4:	mov    rcx,rsi
  4265b7:	call   0x4295a8
  4265bc:	test   rax,rax
  4265bf:	je     0x426596
  4265c1:	mov    edx,0xa
  4265c6:	mov    rcx,rsi
  4265c9:	call   0x4294b8
  4265ce:	test   rax,rax
  4265d1:	je     0x4265e0
  4265d3:	mov    BYTE PTR [rax],0x0
  4265d6:	mov    rbx,rsi
  4265d9:	jmp    0x426565
  4265db:	nop    DWORD PTR [rax+rax*1+0x0]
  4265e0:	mov    rbx,rsi
  4265e3:	jmp    0x426565
  4265e5:	nop
  4265e6:	nop
  4265e7:	nop
  4265e8:	nop
  4265e9:	nop
  4265ea:	nop
  4265eb:	nop
  4265ec:	nop
  4265ed:	nop
  4265ee:	nop
  4265ef:	nop
  4265f0:	push   r13
  4265f2:	push   r12
  4265f4:	push   rbp
  4265f5:	push   rdi
  4265f6:	push   rsi
  4265f7:	push   rbx
  4265f8:	sub    rsp,0x58
  4265fc:	test   r9,r9
  4265ff:	je     0x426787
  426605:	xor    r8d,r8d
  426608:	mov    rbx,r9
  42660b:	mov    edi,edx
  42660d:	mov    ecx,0x2
  426612:	mov    rbp,QWORD PTR [rip+0x19773]        # 0x43fd8c
  426619:	call   rbp
  42661b:	cmp    rax,0xffffffffffffffff
  42661f:	mov    rsi,rax
  426622:	je     0x426787
  426628:	xor    r8d,r8d
  42662b:	mov    QWORD PTR [rbx+0x8],0xffffffffffffffff
  426633:	mov    edx,edi
  426635:	mov    ecx,0x2
  42663a:	call   rbp
  42663c:	cmp    rax,0xffffffffffffffff
  426640:	mov    QWORD PTR [rbx],rax
  426643:	je     0x426770
  426649:	mov    eax,0x2
  42664e:	lea    rdi,[rsp+0x30]
  426653:	mov    ecx,0x7f000001
  426658:	mov    WORD PTR [rsp+0x30],ax
  42665d:	call   QWORD PTR [rip+0x196d9]        # 0x43fd3c
  426663:	xor    edx,edx
  426665:	mov    DWORD PTR [rsp+0x34],eax
  426669:	mov    r8d,0x10
  42666f:	mov    WORD PTR [rsp+0x32],dx
  426674:	mov    rcx,rsi
  426677:	mov    rdx,rdi
  42667a:	call   QWORD PTR [rip+0x1966c]        # 0x43fcec
  426680:	test   eax,eax
  426682:	js     0x426770
  426688:	mov    edx,0x1
  42668d:	mov    rcx,rsi
  426690:	call   QWORD PTR [rip+0x196be]        # 0x43fd54
  426696:	test   eax,eax
  426698:	js     0x426770
  42669e:	lea    rbp,[rsp+0x2c]
  4266a3:	mov    DWORD PTR [rsp+0x2c],0x10
  4266ab:	mov    rdx,rdi
  4266ae:	mov    rcx,rsi
  4266b1:	mov    r12,QWORD PTR [rip+0x19674]        # 0x43fd2c
  4266b8:	mov    r8,rbp
  4266bb:	call   r12
  4266be:	test   eax,eax
  4266c0:	js     0x426770
  4266c6:	mov    r8d,0x10
  4266cc:	mov    rdx,rdi
  4266cf:	mov    rcx,QWORD PTR [rbx]
  4266d2:	call   QWORD PTR [rip+0x19624]        # 0x43fcfc
  4266d8:	test   eax,eax
  4266da:	js     0x426770
  4266e0:	lea    r13,[rsp+0x40]
  4266e5:	mov    DWORD PTR [rsp+0x2c],0x10
  4266ed:	mov    r8,rbp
  4266f0:	mov    rcx,rsi
  4266f3:	mov    rdx,r13
  4266f6:	call   QWORD PTR [rip+0x195e8]        # 0x43fce4
  4266fc:	cmp    rax,0xffffffffffffffff
  426700:	mov    QWORD PTR [rbx+0x8],rax
  426704:	je     0x426770
  426706:	mov    DWORD PTR [rsp+0x2c],0x10
  42670e:	mov    r8,rbp
  426711:	mov    rdx,rdi
  426714:	mov    rcx,QWORD PTR [rbx]
  426717:	call   r12
  42671a:	test   eax,eax
  42671c:	js     0x426770
  42671e:	mov    DWORD PTR [rsp+0x2c],0x10
  426726:	mov    rcx,QWORD PTR [rbx+0x8]
  42672a:	mov    r8,rbp
  42672d:	mov    rdx,r13
  426730:	call   QWORD PTR [rip+0x195ee]        # 0x43fd24
  426736:	test   eax,eax
  426738:	js     0x426770
  42673a:	mov    eax,DWORD PTR [rsp+0x40]
  42673e:	cmp    DWORD PTR [rsp+0x30],eax
  426742:	jne    0x426770
  426744:	mov    eax,DWORD PTR [rsp+0x44]
  426748:	cmp    DWORD PTR [rsp+0x34],eax
  42674c:	jne    0x426770
  42674e:	mov    rcx,rsi
  426751:	call   QWORD PTR [rip+0x1959d]        # 0x43fcf4
  426757:	xor    eax,eax
  426759:	add    rsp,0x58
  42675d:	pop    rbx
  42675e:	pop    rsi
  42675f:	pop    rdi
  426760:	pop    rbp
  426761:	pop    r12
  426763:	pop    r13
  426765:	ret    
  426766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426770:	mov    rcx,rsi
  426773:	mov    rsi,QWORD PTR [rip+0x1957a]        # 0x43fcf4
  42677a:	call   rsi
  42677c:	mov    rcx,QWORD PTR [rbx]
  42677f:	call   rsi
  426781:	mov    rcx,QWORD PTR [rbx+0x8]
  426785:	call   rsi
  426787:	mov    eax,0xffffffff
  42678c:	add    rsp,0x58
  426790:	pop    rbx
  426791:	pop    rsi
  426792:	pop    rdi
  426793:	pop    rbp
  426794:	pop    r12
  426796:	pop    r13
  426798:	ret    
  426799:	nop
  42679a:	nop
  42679b:	nop
  42679c:	nop
  42679d:	nop
  42679e:	nop
  42679f:	nop
  4267a0:	push   rbp
  4267a1:	push   rdi
  4267a2:	push   rsi
  4267a3:	push   rbx
  4267a4:	sub    rsp,0x48
  4267a8:	xor    eax,eax
  4267aa:	mov    rbx,rcx
  4267ad:	lock xadd DWORD PTR [rcx+0x8],eax
  4267b2:	test   eax,eax
  4267b4:	lea    rsi,[rcx+0x10]
  4267b8:	je     0x4267d0
  4267ba:	mov    rcx,rsi
  4267bd:	call   QWORD PTR [rip+0x19119]        # 0x43f8dc
  4267c3:	nop
  4267c4:	add    rsp,0x48
  4267c8:	pop    rbx
  4267c9:	pop    rsi
  4267ca:	pop    rdi
  4267cb:	pop    rbp
  4267cc:	ret    
  4267cd:	nop    DWORD PTR [rax]
  4267d0:	lea    rdi,[rsp+0x20]
  4267d5:	mov    QWORD PTR [rsp+0x20],rcx
  4267da:	mov    QWORD PTR [rsp+0x38],0x0
  4267e3:	mov    QWORD PTR [rsp+0x30],0x0
  4267ec:	mov    QWORD PTR [rsp+0x28],0x0
  4267f5:	mov    rdx,rdi
  4267f8:	xchg   QWORD PTR [rcx],rdx
  4267fb:	test   rdx,rdx
  4267fe:	je     0x426839
  426800:	mov    rcx,0xffffffffffffffff
  426807:	xor    eax,eax
  426809:	mov    QWORD PTR [rdx+0x8],rdi
  42680d:	lock cmpxchg QWORD PTR [rdx+0x18],rcx
  426813:	test   rax,rax
  426816:	mov    rcx,rax
  426819:	je     0x426821
  42681b:	call   QWORD PTR [rip+0x1916b]        # 0x43f98c
  426821:	xor    esi,esi
  426823:	mov    rax,rsi
  426826:	lock cmpxchg QWORD PTR [rsp+0x30],rsi
  42682d:	test   rax,rax
  426830:	mov    rsi,rax
  426833:	je     0x4268d3
  426839:	mov    eax,DWORD PTR [rbx+0x8]
  42683c:	lea    rsi,[rbx+0x10]
  426840:	test   eax,eax
  426842:	je     0x426890
  426844:	mov    r8,QWORD PTR [rsp+0x20]
  426849:	xor    ebx,ebx
  42684b:	mov    rax,rbx
  42684e:	lock cmpxchg QWORD PTR [rsp+0x28],rbx
  426855:	test   rax,rax
  426858:	mov    rdx,rax
  42685b:	mov    rcx,rax
  42685e:	je     0x4268a2
  426860:	mov    rdx,0xffffffffffffffff
  426867:	xor    eax,eax
  426869:	lock cmpxchg QWORD PTR [rcx+0x10],rdx
  42686f:	test   rax,rax
  426872:	je     0x4267ba
  426878:	mov    rcx,rax
  42687b:	call   QWORD PTR [rip+0x1910b]        # 0x43f98c
  426881:	jmp    0x4267ba
  426886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426890:	mov    rcx,rsi
  426893:	call   QWORD PTR [rip+0x190ab]        # 0x43f944
  426899:	mov    DWORD PTR [rbx+0x8],0x1
  4268a0:	jmp    0x426844
  4268a2:	mov    rax,rdi
  4268a5:	lock cmpxchg QWORD PTR [r8],rdx
  4268aa:	cmp    rdi,rax
  4268ad:	je     0x4267ba
  4268b3:	mov    rax,rdx
  4268b6:	lock cmpxchg QWORD PTR [rsp+0x38],rdx
  4268bd:	test   rax,rax
  4268c0:	mov    rbx,rax
  4268c3:	je     0x426903
  4268c5:	xor    eax,eax
  4268c7:	lock cmpxchg QWORD PTR [rsp+0x28],rax
  4268ce:	mov    rcx,rax
  4268d1:	jmp    0x426860
  4268d3:	xor    r9d,r9d
  4268d6:	xor    r8d,r8d
  4268d9:	xor    edx,edx
  4268db:	xor    ecx,ecx
  4268dd:	call   QWORD PTR [rip+0x18fe9]        # 0x43f8cc
  4268e3:	mov    rbp,rax
  4268e6:	mov    rax,rsi
  4268e9:	lock cmpxchg QWORD PTR [rsp+0x30],rbp
  4268f0:	test   rax,rax
  4268f3:	je     0x42692e
  4268f5:	mov    rcx,rbp
  4268f8:	call   QWORD PTR [rip+0x18fc6]        # 0x43f8c4
  4268fe:	jmp    0x426839
  426903:	xor    r9d,r9d
  426906:	xor    r8d,r8d
  426909:	xor    ecx,ecx
  42690b:	call   QWORD PTR [rip+0x18fbb]        # 0x43f8cc
  426911:	mov    rdi,rax
  426914:	mov    rax,rbx
  426917:	lock cmpxchg QWORD PTR [rsp+0x38],rdi
  42691e:	test   rax,rax
  426921:	je     0x42693e
  426923:	mov    rcx,rdi
  426926:	call   QWORD PTR [rip+0x18f98]        # 0x43f8c4
  42692c:	jmp    0x4268c5
  42692e:	mov    edx,0xffffffff
  426933:	mov    rcx,rbp
  426936:	call   QWORD PTR [rip+0x19098]        # 0x43f9d4
  42693c:	jmp    0x4268f5
  42693e:	or     edx,0xffffffff
  426941:	mov    rcx,rdi
  426944:	call   QWORD PTR [rip+0x1908a]        # 0x43f9d4
  42694a:	jmp    0x426923
  42694c:	nop    DWORD PTR [rax+0x0]
  426950:	push   rbp
  426951:	push   rdi
  426952:	push   rsi
  426953:	push   rbx
  426954:	sub    rsp,0x48
  426958:	mov    edx,DWORD PTR [rcx+0x8]
  42695b:	mov    rbx,rcx
  42695e:	test   edx,edx
  426960:	je     0x426982
  426962:	lea    rsi,[rbx+0x10]
  426966:	mov    rcx,rsi
  426969:	call   QWORD PTR [rip+0x19045]        # 0x43f9b4
  42696f:	test   eax,eax
  426971:	sete   al
  426974:	movzx  eax,al
  426977:	neg    eax
  426979:	add    rsp,0x48
  42697d:	pop    rbx
  42697e:	pop    rsi
  42697f:	pop    rdi
  426980:	pop    rbp
  426981:	ret    
  426982:	xor    eax,eax
  426984:	lock xadd DWORD PTR [rcx+0x8],eax
  426989:	test   eax,eax
  42698b:	jne    0x426962
  42698d:	lea    rdi,[rsp+0x20]
  426992:	mov    QWORD PTR [rsp+0x20],rcx
  426997:	mov    QWORD PTR [rsp+0x38],0x0
  4269a0:	mov    QWORD PTR [rsp+0x30],0x0
  4269a9:	mov    QWORD PTR [rsp+0x28],0x0
  4269b2:	mov    rdx,rdi
  4269b5:	xchg   QWORD PTR [rcx],rdx
  4269b8:	test   rdx,rdx
  4269bb:	je     0x4269f6
  4269bd:	mov    rcx,0xffffffffffffffff
  4269c4:	xor    eax,eax
  4269c6:	mov    QWORD PTR [rdx+0x8],rdi
  4269ca:	lock cmpxchg QWORD PTR [rdx+0x18],rcx
  4269d0:	test   rax,rax
  4269d3:	mov    rcx,rax
  4269d6:	je     0x4269de
  4269d8:	call   QWORD PTR [rip+0x18fae]        # 0x43f98c
  4269de:	xor    edx,edx
  4269e0:	mov    rax,rdx
  4269e3:	lock cmpxchg QWORD PTR [rsp+0x30],rdx
  4269ea:	test   rax,rax
  4269ed:	mov    rsi,rax
  4269f0:	je     0x426a86
  4269f6:	mov    eax,DWORD PTR [rbx+0x8]
  4269f9:	lea    rsi,[rbx+0x10]
  4269fd:	test   eax,eax
  4269ff:	je     0x426a43
  426a01:	mov    r8,QWORD PTR [rsp+0x20]
  426a06:	xor    edx,edx
  426a08:	mov    rax,rdx
  426a0b:	lock cmpxchg QWORD PTR [rsp+0x28],rdx
  426a12:	test   rax,rax
  426a15:	mov    rdx,rax
  426a18:	mov    rcx,rax
  426a1b:	je     0x426a55
  426a1d:	mov    rdx,0xffffffffffffffff
  426a24:	xor    eax,eax
  426a26:	lock cmpxchg QWORD PTR [rcx+0x10],rdx
  426a2c:	test   rax,rax
  426a2f:	je     0x426966
  426a35:	mov    rcx,rax
  426a38:	call   QWORD PTR [rip+0x18f4e]        # 0x43f98c
  426a3e:	jmp    0x426966
  426a43:	mov    rcx,rsi
  426a46:	call   QWORD PTR [rip+0x18ef8]        # 0x43f944
  426a4c:	mov    DWORD PTR [rbx+0x8],0x1
  426a53:	jmp    0x426a01
  426a55:	mov    rax,rdi
  426a58:	lock cmpxchg QWORD PTR [r8],rdx
  426a5d:	cmp    rdi,rax
  426a60:	je     0x426966
  426a66:	mov    rax,rdx
  426a69:	lock cmpxchg QWORD PTR [rsp+0x38],rdx
  426a70:	test   rax,rax
  426a73:	mov    rbx,rax
  426a76:	je     0x426ab4
  426a78:	xor    eax,eax
  426a7a:	lock cmpxchg QWORD PTR [rsp+0x28],rax
  426a81:	mov    rcx,rax
  426a84:	jmp    0x426a1d
  426a86:	xor    r9d,r9d
  426a89:	xor    r8d,r8d
  426a8c:	xor    ecx,ecx
  426a8e:	call   QWORD PTR [rip+0x18e38]        # 0x43f8cc
  426a94:	mov    rbp,rax
  426a97:	mov    rax,rsi
  426a9a:	lock cmpxchg QWORD PTR [rsp+0x30],rbp
  426aa1:	test   rax,rax
  426aa4:	je     0x426adf
  426aa6:	mov    rcx,rbp
  426aa9:	call   QWORD PTR [rip+0x18e15]        # 0x43f8c4
  426aaf:	jmp    0x4269f6
  426ab4:	xor    r9d,r9d
  426ab7:	xor    r8d,r8d
  426aba:	xor    ecx,ecx
  426abc:	call   QWORD PTR [rip+0x18e0a]        # 0x43f8cc
  426ac2:	mov    rdi,rax
  426ac5:	mov    rax,rbx
  426ac8:	lock cmpxchg QWORD PTR [rsp+0x38],rdi
  426acf:	test   rax,rax
  426ad2:	je     0x426aed
  426ad4:	mov    rcx,rdi
  426ad7:	call   QWORD PTR [rip+0x18de7]        # 0x43f8c4
  426add:	jmp    0x426a78
  426adf:	or     edx,0xffffffff
  426ae2:	mov    rcx,rbp
  426ae5:	call   QWORD PTR [rip+0x18ee9]        # 0x43f9d4
  426aeb:	jmp    0x426aa6
  426aed:	or     edx,0xffffffff
  426af0:	mov    rcx,rdi
  426af3:	call   QWORD PTR [rip+0x18edb]        # 0x43f9d4
  426af9:	jmp    0x426ad4
  426afb:	nop
  426afc:	nop
  426afd:	nop
  426afe:	nop
  426aff:	nop
  426b00:	push   r12
  426b02:	push   rbp
  426b03:	push   rdi
  426b04:	push   rsi
  426b05:	push   rbx
  426b06:	sub    rsp,0x20
  426b0a:	test   r8,r8
  426b0d:	mov    rbp,rdx
  426b10:	mov    rbx,r8
  426b13:	mov    r12d,r9d
  426b16:	je     0x426c05
  426b1c:	mov    rdx,rcx
  426b1f:	lea    rcx,[rip+0x118ea]        # 0x438410
  426b26:	lea    rdi,[rbp+rbx*1-0x1]
  426b2b:	mov    rsi,rbp
  426b2e:	call   0x429508
  426b33:	call   QWORD PTR [rip+0x18ed3]        # 0x43fa0c
  426b39:	lea    rcx,[rax+0x30]
  426b3d:	call   0x4295b0
  426b42:	jmp    0x426b53
  426b44:	cmp    eax,0xd
  426b47:	je     0x426b90
  426b49:	cmp    eax,0xa
  426b4c:	je     0x426b90
  426b4e:	cmp    rdi,rsi
  426b51:	ja     0x426bc0
  426b53:	call   0x429568
  426b58:	cmp    eax,0xffffffff
  426b5b:	jne    0x426b44
  426b5d:	mov    rbx,QWORD PTR [rip+0x18ee0]        # 0x43fa44
  426b64:	mov    BYTE PTR [rsi],0x0
  426b67:	call   rbx
  426b69:	mov    esi,DWORD PTR [rax]
  426b6b:	mov    ecx,0xa
  426b70:	call   0x429500
  426b75:	call   rbx
  426b77:	mov    DWORD PTR [rax],esi
  426b79:	xor    eax,eax
  426b7b:	add    rsp,0x20
  426b7f:	pop    rbx
  426b80:	pop    rsi
  426b81:	pop    rdi
  426b82:	pop    rbp
  426b83:	pop    r12
  426b85:	ret    
  426b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426b90:	mov    rbx,QWORD PTR [rip+0x18ead]        # 0x43fa44
  426b97:	mov    BYTE PTR [rsi],0x0
  426b9a:	call   rbx
  426b9c:	mov    esi,DWORD PTR [rax]
  426b9e:	mov    ecx,0xa
  426ba3:	call   0x429500
  426ba8:	call   rbx
  426baa:	mov    DWORD PTR [rax],esi
  426bac:	mov    rax,rbp
  426baf:	add    rsp,0x20
  426bb3:	pop    rbx
  426bb4:	pop    rsi
  426bb5:	pop    rdi
  426bb6:	pop    rbp
  426bb7:	pop    r12
  426bb9:	ret    
  426bba:	nop    WORD PTR [rax+rax*1+0x0]
  426bc0:	movzx  ebx,al
  426bc3:	and    eax,0x7f
  426bc6:	test   r12b,0x10
  426bca:	cmovne ebx,eax
  426bcd:	mov    ecx,ebx
  426bcf:	call   QWORD PTR [rip+0x18f77]        # 0x43fb4c
  426bd5:	test   eax,eax
  426bd7:	je     0x426bf9
  426bd9:	test   r12b,0x4
  426bdd:	je     0x426be9
  426bdf:	mov    ecx,ebx
  426be1:	call   QWORD PTR [rip+0x19055]        # 0x43fc3c
  426be7:	mov    ebx,eax
  426be9:	test   r12b,0x8
  426bed:	je     0x426bf9
  426bef:	mov    ecx,ebx
  426bf1:	call   QWORD PTR [rip+0x1904d]        # 0x43fc44
  426bf7:	mov    ebx,eax
  426bf9:	add    rsi,0x1
  426bfd:	mov    BYTE PTR [rsi-0x1],bl
  426c00:	jmp    0x426b53
  426c05:	call   QWORD PTR [rip+0x18e39]        # 0x43fa44
  426c0b:	mov    DWORD PTR [rax],0x16
  426c11:	xor    eax,eax
  426c13:	add    rsp,0x20
  426c17:	pop    rbx
  426c18:	pop    rsi
  426c19:	pop    rdi
  426c1a:	pop    rbp
  426c1b:	pop    r12
  426c1d:	ret    
  426c1e:	nop
  426c1f:	nop
  426c20:	push   rbp
  426c21:	push   rdi
  426c22:	push   rsi
  426c23:	push   rbx
  426c24:	sub    rsp,0x28
  426c28:	mov    rsi,r8
  426c2b:	mov    rbp,rcx
  426c2e:	mov    rcx,rdx
  426c31:	mov    rdi,rdx
  426c34:	call   0x429490
  426c39:	test   rsi,rsi
  426c3c:	mov    rbx,rax
  426c3f:	je     0x426c59
  426c41:	lea    r8,[rsi-0x1]
  426c45:	cmp    rax,r8
  426c48:	ja     0x426c65
  426c4a:	lea    r8,[rax+0x1]
  426c4e:	mov    rdx,rdi
  426c51:	mov    rcx,rbp
  426c54:	call   0x429528
  426c59:	mov    rax,rbx
  426c5c:	add    rsp,0x28
  426c60:	pop    rbx
  426c61:	pop    rsi
  426c62:	pop    rdi
  426c63:	pop    rbp
  426c64:	ret    
  426c65:	mov    rdx,rdi
  426c68:	mov    rcx,rbp
  426c6b:	call   0x429528
  426c70:	mov    rax,rbx
  426c73:	mov    BYTE PTR [rbp+rsi*1-0x1],0x0
  426c78:	add    rsp,0x28
  426c7c:	pop    rbx
  426c7d:	pop    rsi
  426c7e:	pop    rdi
  426c7f:	pop    rbp
  426c80:	ret    
  426c81:	nop
  426c82:	nop
  426c83:	nop
  426c84:	nop
  426c85:	nop
  426c86:	nop
  426c87:	nop
  426c88:	nop
  426c89:	nop
  426c8a:	nop
  426c8b:	nop
  426c8c:	nop
  426c8d:	nop
  426c8e:	nop
  426c8f:	nop
  426c90:	jmp    QWORD PTR [rip+0x18bc6]        # 0x43f85c
  426c96:	nop
  426c97:	nop
  426c98:	jmp    QWORD PTR [rip+0x18bb6]        # 0x43f854
  426c9e:	nop
  426c9f:	nop
  426ca0:	jmp    QWORD PTR [rip+0x18ba6]        # 0x43f84c
  426ca6:	nop
  426ca7:	nop
  426ca8:	jmp    QWORD PTR [rip+0x18b96]        # 0x43f844
  426cae:	nop
  426caf:	nop
  426cb0:	jmp    QWORD PTR [rip+0x18b86]        # 0x43f83c
  426cb6:	nop
  426cb7:	nop
  426cb8:	jmp    QWORD PTR [rip+0x18b76]        # 0x43f834
  426cbe:	nop
  426cbf:	nop
  426cc0:	jmp    QWORD PTR [rip+0x18b66]        # 0x43f82c
  426cc6:	nop
  426cc7:	nop
  426cc8:	jmp    QWORD PTR [rip+0x18b56]        # 0x43f824
  426cce:	nop
  426ccf:	nop
  426cd0:	jmp    QWORD PTR [rip+0x18b46]        # 0x43f81c
  426cd6:	nop
  426cd7:	nop
  426cd8:	jmp    QWORD PTR [rip+0x18b36]        # 0x43f814
  426cde:	nop
  426cdf:	nop
  426ce0:	jmp    QWORD PTR [rip+0x18b26]        # 0x43f80c
  426ce6:	nop
  426ce7:	nop
  426ce8:	jmp    QWORD PTR [rip+0x18b16]        # 0x43f804
  426cee:	nop
  426cef:	nop
  426cf0:	jmp    QWORD PTR [rip+0x18b06]        # 0x43f7fc
  426cf6:	nop
  426cf7:	nop
  426cf8:	jmp    QWORD PTR [rip+0x18af6]        # 0x43f7f4
  426cfe:	nop
  426cff:	nop
  426d00:	jmp    QWORD PTR [rip+0x18ae6]        # 0x43f7ec
  426d06:	nop
  426d07:	nop
  426d08:	jmp    QWORD PTR [rip+0x18ad6]        # 0x43f7e4
  426d0e:	nop
  426d0f:	nop
  426d10:	jmp    QWORD PTR [rip+0x18ac6]        # 0x43f7dc
  426d16:	nop
  426d17:	nop
  426d18:	jmp    QWORD PTR [rip+0x18ab6]        # 0x43f7d4
  426d1e:	nop
  426d1f:	nop
  426d20:	jmp    QWORD PTR [rip+0x18aa6]        # 0x43f7cc
  426d26:	nop
  426d27:	nop
  426d28:	jmp    QWORD PTR [rip+0x18a96]        # 0x43f7c4
  426d2e:	nop
  426d2f:	nop
  426d30:	jmp    QWORD PTR [rip+0x18a86]        # 0x43f7bc
  426d36:	nop
  426d37:	nop
  426d38:	jmp    QWORD PTR [rip+0x18a76]        # 0x43f7b4
  426d3e:	nop
  426d3f:	nop
  426d40:	jmp    QWORD PTR [rip+0x18a66]        # 0x43f7ac
  426d46:	nop
  426d47:	nop
  426d48:	jmp    QWORD PTR [rip+0x18a56]        # 0x43f7a4
  426d4e:	nop
  426d4f:	nop
  426d50:	jmp    QWORD PTR [rip+0x18a46]        # 0x43f79c
  426d56:	nop
  426d57:	nop
  426d58:	jmp    QWORD PTR [rip+0x18a36]        # 0x43f794
  426d5e:	nop
  426d5f:	nop
  426d60:	jmp    QWORD PTR [rip+0x18a26]        # 0x43f78c
  426d66:	nop
  426d67:	nop
  426d68:	jmp    QWORD PTR [rip+0x18a16]        # 0x43f784
  426d6e:	nop
  426d6f:	nop
  426d70:	jmp    QWORD PTR [rip+0x18a06]        # 0x43f77c
  426d76:	nop
  426d77:	nop
  426d78:	jmp    QWORD PTR [rip+0x189f6]        # 0x43f774
  426d7e:	nop
  426d7f:	nop
  426d80:	jmp    QWORD PTR [rip+0x189e6]        # 0x43f76c
  426d86:	nop
  426d87:	nop
  426d88:	jmp    QWORD PTR [rip+0x189d6]        # 0x43f764
  426d8e:	nop
  426d8f:	nop
  426d90:	jmp    QWORD PTR [rip+0x189c6]        # 0x43f75c
  426d96:	nop
  426d97:	nop
  426d98:	jmp    QWORD PTR [rip+0x18fee]        # 0x43fd8c
  426d9e:	nop
  426d9f:	nop
  426da0:	jmp    QWORD PTR [rip+0x18fde]        # 0x43fd84
  426da6:	nop
  426da7:	nop
  426da8:	jmp    QWORD PTR [rip+0x18fce]        # 0x43fd7c
  426dae:	nop
  426daf:	nop
  426db0:	jmp    QWORD PTR [rip+0x18fbe]        # 0x43fd74
  426db6:	nop
  426db7:	nop
  426db8:	jmp    QWORD PTR [rip+0x18fae]        # 0x43fd6c
  426dbe:	nop
  426dbf:	nop
  426dc0:	jmp    QWORD PTR [rip+0x18f9e]        # 0x43fd64
  426dc6:	nop
  426dc7:	nop
  426dc8:	jmp    QWORD PTR [rip+0x18f8e]        # 0x43fd5c
  426dce:	nop
  426dcf:	nop
  426dd0:	jmp    QWORD PTR [rip+0x18f7e]        # 0x43fd54
  426dd6:	nop
  426dd7:	nop
  426dd8:	jmp    QWORD PTR [rip+0x18f6e]        # 0x43fd4c
  426dde:	nop
  426ddf:	nop
  426de0:	jmp    QWORD PTR [rip+0x18f5e]        # 0x43fd44
  426de6:	nop
  426de7:	nop
  426de8:	jmp    QWORD PTR [rip+0x18f4e]        # 0x43fd3c
  426dee:	nop
  426def:	nop
  426df0:	jmp    QWORD PTR [rip+0x18f3e]        # 0x43fd34
  426df6:	nop
  426df7:	nop
  426df8:	jmp    QWORD PTR [rip+0x18f2e]        # 0x43fd2c
  426dfe:	nop
  426dff:	nop
  426e00:	jmp    QWORD PTR [rip+0x18f1e]        # 0x43fd24
  426e06:	nop
  426e07:	nop
  426e08:	jmp    QWORD PTR [rip+0x18f0e]        # 0x43fd1c
  426e0e:	nop
  426e0f:	nop
  426e10:	jmp    QWORD PTR [rip+0x18efe]        # 0x43fd14
  426e16:	nop
  426e17:	nop
  426e18:	jmp    QWORD PTR [rip+0x18eee]        # 0x43fd0c
  426e1e:	nop
  426e1f:	nop
  426e20:	jmp    QWORD PTR [rip+0x18ede]        # 0x43fd04
  426e26:	nop
  426e27:	nop
  426e28:	jmp    QWORD PTR [rip+0x18ece]        # 0x43fcfc
  426e2e:	nop
  426e2f:	nop
  426e30:	jmp    QWORD PTR [rip+0x18ebe]        # 0x43fcf4
  426e36:	nop
  426e37:	nop
  426e38:	jmp    QWORD PTR [rip+0x18eae]        # 0x43fcec
  426e3e:	nop
  426e3f:	nop
  426e40:	jmp    QWORD PTR [rip+0x18e9e]        # 0x43fce4
  426e46:	nop
  426e47:	nop
  426e48:	jmp    QWORD PTR [rip+0x18e8e]        # 0x43fcdc
  426e4e:	nop
  426e4f:	nop
  426e50:	jmp    QWORD PTR [rip+0x18e7e]        # 0x43fcd4
  426e56:	nop
  426e57:	nop
  426e58:	jmp    QWORD PTR [rip+0x18e6e]        # 0x43fccc
  426e5e:	nop
  426e5f:	nop
  426e60:	jmp    QWORD PTR [rip+0x18e5e]        # 0x43fcc4
  426e66:	nop
  426e67:	nop
  426e68:	jmp    QWORD PTR [rip+0x18e4e]        # 0x43fcbc
  426e6e:	nop
  426e6f:	nop
  426e70:	jmp    QWORD PTR [rip+0x18a1e]        # 0x43f894
  426e76:	nop
  426e77:	nop
  426e78:	jmp    QWORD PTR [rip+0x18a0e]        # 0x43f88c
  426e7e:	nop
  426e7f:	nop
  426e80:	jmp    QWORD PTR [rip+0x189fe]        # 0x43f884
  426e86:	nop
  426e87:	nop
  426e88:	jmp    QWORD PTR [rip+0x189ee]        # 0x43f87c
  426e8e:	nop
  426e8f:	nop
  426e90:	jmp    QWORD PTR [rip+0x189de]        # 0x43f874
  426e96:	nop
  426e97:	nop
  426e98:	jmp    QWORD PTR [rip+0x189ce]        # 0x43f86c
  426e9e:	nop
  426e9f:	nop
  426ea0:	jmp    QWORD PTR [rip+0x18a0e]        # 0x43f8b4
  426ea6:	nop
  426ea7:	nop
  426ea8:	jmp    QWORD PTR [rip+0x189fe]        # 0x43f8ac
  426eae:	nop
  426eaf:	nop
  426eb0:	jmp    QWORD PTR [rip+0x189ee]        # 0x43f8a4
  426eb6:	nop
  426eb7:	nop
  426eb8:	jmp    QWORD PTR [rip+0x18dbe]        # 0x43fc7c
  426ebe:	nop
  426ebf:	nop
  426ec0:	jmp    QWORD PTR [rip+0x18dae]        # 0x43fc74
  426ec6:	nop
  426ec7:	nop
  426ec8:	jmp    QWORD PTR [rip+0x18d9e]        # 0x43fc6c
  426ece:	nop
  426ecf:	nop
  426ed0:	jmp    QWORD PTR [rip+0x18876]        # 0x43f74c
  426ed6:	nop
  426ed7:	nop
  426ed8:	jmp    QWORD PTR [rip+0x18866]        # 0x43f744
  426ede:	nop
  426edf:	nop
  426ee0:	jmp    QWORD PTR [rip+0x18856]        # 0x43f73c
  426ee6:	nop
  426ee7:	nop
  426ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  426ef0:	push   rbx
  426ef1:	sub    rsp,0x30
  426ef5:	mov    rbx,rcx
  426ef8:	mov    rcx,QWORD PTR [rip+0x18051]        # 0x43ef50
  426eff:	call   0x4274a0
  426f04:	cmp    rax,0xffffffffffffffff
  426f08:	mov    QWORD PTR [rsp+0x20],rax
  426f0d:	je     0x426f85
  426f0f:	mov    ecx,0x8
  426f14:	call   0x429630
  426f19:	mov    rcx,QWORD PTR [rip+0x18030]        # 0x43ef50
  426f20:	call   0x4274a0
  426f25:	mov    rcx,QWORD PTR [rip+0x1802c]        # 0x43ef58
  426f2c:	mov    QWORD PTR [rsp+0x20],rax
  426f31:	call   0x4274a0
  426f36:	lea    rdx,[rsp+0x20]
  426f3b:	lea    r8,[rsp+0x28]
  426f40:	mov    rcx,rbx
  426f43:	mov    QWORD PTR [rsp+0x28],rax
  426f48:	call   0x429690
  426f4d:	mov    rcx,QWORD PTR [rsp+0x20]
  426f52:	mov    rbx,rax
  426f55:	call   0x4274b0
  426f5a:	mov    rcx,QWORD PTR [rsp+0x28]
  426f5f:	mov    QWORD PTR [rip+0x17fea],rax        # 0x43ef50
  426f66:	call   0x4274b0
  426f6b:	mov    ecx,0x8
  426f70:	mov    QWORD PTR [rip+0x17fe1],rax        # 0x43ef58
  426f77:	call   0x4295f0
  426f7c:	mov    rax,rbx
  426f7f:	add    rsp,0x30
  426f83:	pop    rbx
  426f84:	ret    
  426f85:	mov    rax,QWORD PTR [rip+0x119f4]        # 0x438980
  426f8c:	mov    rcx,rbx
  426f8f:	call   QWORD PTR [rax]
  426f91:	add    rsp,0x30
  426f95:	pop    rbx
  426f96:	ret    
  426f97:	nop    WORD PTR [rax+rax*1+0x0]
  426fa0:	sub    rsp,0x28
  426fa4:	call   0x426ef0
  426fa9:	test   rax,rax
  426fac:	sete   al
  426faf:	movzx  eax,al
  426fb2:	neg    eax
  426fb4:	add    rsp,0x28
  426fb8:	ret    
  426fb9:	nop
  426fba:	nop
  426fbb:	nop
  426fbc:	nop
  426fbd:	nop
  426fbe:	nop
  426fbf:	nop
  426fc0:	sub    rsp,0x28
  426fc4:	mov    rax,QWORD PTR [rip+0x4085]        # 0x42b050
  426fcb:	mov    rax,QWORD PTR [rax]
  426fce:	test   rax,rax
  426fd1:	je     0x426ff0
  426fd3:	call   rax
  426fd5:	mov    rax,QWORD PTR [rip+0x4074]        # 0x42b050
  426fdc:	lea    rdx,[rax+0x8]
  426fe0:	mov    rax,QWORD PTR [rax+0x8]
  426fe4:	mov    QWORD PTR [rip+0x4065],rdx        # 0x42b050
  426feb:	test   rax,rax
  426fee:	jne    0x426fd3
  426ff0:	add    rsp,0x28
  426ff4:	ret    
  426ff5:	nop
  426ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427000:	push   rsi
  427001:	push   rbx
  427002:	sub    rsp,0x28
  427006:	mov    rsi,QWORD PTR [rip+0x118e3]        # 0x4388f0
  42700d:	mov    rax,QWORD PTR [rsi]
  427010:	cmp    eax,0xffffffff
  427013:	mov    ebx,eax
  427015:	je     0x427040
  427017:	test   ebx,ebx
  427019:	je     0x42702a
  42701b:	nop    DWORD PTR [rax+rax*1+0x0]
  427020:	mov    eax,ebx
  427022:	call   QWORD PTR [rsi+rax*8]
  427025:	sub    ebx,0x1
  427028:	jne    0x427020
  42702a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x426fc0
  427031:	add    rsp,0x28
  427035:	pop    rbx
  427036:	pop    rsi
  427037:	jmp    0x426fa0
  42703c:	nop    DWORD PTR [rax+0x0]
  427040:	xor    ebx,ebx
  427042:	jmp    0x427046
  427044:	mov    ebx,eax
  427046:	lea    edx,[rbx+0x1]
  427049:	cmp    QWORD PTR [rsi+rdx*8],0x0
  42704e:	mov    rax,rdx
  427051:	jne    0x427044
  427053:	jmp    0x427017
  427055:	nop
  427056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427060:	mov    eax,DWORD PTR [rip+0x174fa]        # 0x43e560
  427066:	test   eax,eax
  427068:	je     0x427070
  42706a:	repz ret 
  42706c:	nop    DWORD PTR [rax+0x0]
  427070:	mov    DWORD PTR [rip+0x174e6],0x1        # 0x43e560
  42707a:	jmp    0x427000
  42707c:	nop
  42707d:	nop
  42707e:	nop
  42707f:	nop
  427080:	mov    rax,QWORD PTR [rip+0x1898d]        # 0x43fa14
  427087:	rex.W jmp rax
  42708a:	nop
  42708b:	nop
  42708c:	nop
  42708d:	nop
  42708e:	nop
  42708f:	nop
  427090:	xor    eax,eax
  427092:	ret    
  427093:	nop
  427094:	nop
  427095:	nop
  427096:	nop
  427097:	nop
  427098:	nop
  427099:	nop
  42709a:	nop
  42709b:	nop
  42709c:	nop
  42709d:	nop
  42709e:	nop
  42709f:	nop
  4270a0:	push   r12
  4270a2:	push   rbp
  4270a3:	push   rdi
  4270a4:	push   rsi
  4270a5:	push   rbx
  4270a6:	sub    rsp,0x40
  4270aa:	mov    rbx,QWORD PTR [rip+0x402f]        # 0x42b0e0
  4270b1:	movabs rax,0x2b992ddfa232
  4270bb:	mov    QWORD PTR [rsp+0x20],0x0
  4270c4:	cmp    rbx,rax
  4270c7:	je     0x4270e0
  4270c9:	not    rbx
  4270cc:	mov    QWORD PTR [rip+0x401d],rbx        # 0x42b0f0
  4270d3:	add    rsp,0x40
  4270d7:	pop    rbx
  4270d8:	pop    rsi
  4270d9:	pop    rdi
  4270da:	pop    rbp
  4270db:	pop    r12
  4270dd:	ret    
  4270de:	xchg   ax,ax
  4270e0:	lea    rcx,[rsp+0x20]
  4270e5:	call   QWORD PTR [rip+0x18849]        # 0x43f934
  4270eb:	mov    r12,QWORD PTR [rsp+0x20]
  4270f0:	call   QWORD PTR [rip+0x187fe]        # 0x43f8f4
  4270f6:	mov    ebp,eax
  4270f8:	call   QWORD PTR [rip+0x187fe]        # 0x43f8fc
  4270fe:	mov    edi,eax
  427100:	call   QWORD PTR [rip+0x18836]        # 0x43f93c
  427106:	lea    rcx,[rsp+0x30]
  42710b:	mov    esi,eax
  42710d:	call   QWORD PTR [rip+0x18851]        # 0x43f964
  427113:	xor    r12,QWORD PTR [rsp+0x30]
  427118:	mov    edx,edi
  42711a:	movabs rax,0xffffffffffff
  427124:	xor    rbp,r12
  427127:	mov    rdi,rbp
  42712a:	xor    rdi,rdx
  42712d:	mov    edx,esi
  42712f:	xor    rdi,rdx
  427132:	mov    rsi,rdi
  427135:	and    rsi,rax
  427138:	cmp    rsi,rbx
  42713b:	je     0x427160
  42713d:	mov    rax,rsi
  427140:	not    rax
  427143:	mov    QWORD PTR [rip+0x3f96],rsi        # 0x42b0e0
  42714a:	mov    QWORD PTR [rip+0x3f9f],rax        # 0x42b0f0
  427151:	add    rsp,0x40
  427155:	pop    rbx
  427156:	pop    rsi
  427157:	pop    rdi
  427158:	pop    rbp
  427159:	pop    r12
  42715b:	ret    
  42715c:	nop    DWORD PTR [rax+0x0]
  427160:	movabs rax,0xffffd466d2205dcc
  42716a:	movabs rsi,0x2b992ddfa233
  427174:	jmp    0x427143
  427176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427180:	push   rbp
  427181:	push   rsi
  427182:	push   rbx
  427183:	mov    rbp,rsp
  427186:	sub    rsp,0x70
  42718a:	mov    rsi,rcx
  42718d:	lea    rcx,[rip+0x1742c]        # 0x43e5c0
  427194:	call   QWORD PTR [rip+0x187da]        # 0x43f974
  42719a:	mov    rbx,QWORD PTR [rip+0x17517]        # 0x43e6b8
  4271a1:	xor    r8d,r8d
  4271a4:	lea    rdx,[rbp-0x28]
  4271a8:	mov    rcx,rbx
  4271ab:	call   QWORD PTR [rip+0x187cb]        # 0x43f97c
  4271b1:	test   rax,rax
  4271b4:	mov    r9,rax
  4271b7:	je     0x427260
  4271bd:	lea    rax,[rbp-0x20]
  4271c1:	mov    QWORD PTR [rsp+0x38],0x0
  4271ca:	mov    r8,rbx
  4271cd:	mov    rdx,QWORD PTR [rbp-0x28]
  4271d1:	xor    ecx,ecx
  4271d3:	mov    QWORD PTR [rsp+0x30],rax
  4271d8:	lea    rax,[rbp-0x18]
  4271dc:	mov    QWORD PTR [rsp+0x28],rax
  4271e1:	lea    rax,[rip+0x173d8]        # 0x43e5c0
  4271e8:	mov    QWORD PTR [rsp+0x20],rax
  4271ed:	call   QWORD PTR [rip+0x18791]        # 0x43f984
  4271f3:	mov    rax,QWORD PTR [rip+0x174be]        # 0x43e6b8
  4271fa:	xor    ecx,ecx
  4271fc:	mov    QWORD PTR [rip+0x1743d],rsi        # 0x43e640
  427203:	mov    DWORD PTR [rip+0x178b3],0xc0000409        # 0x43eac0
  42720d:	mov    DWORD PTR [rip+0x178ad],0x1        # 0x43eac4
  427217:	mov    QWORD PTR [rip+0x178b2],rax        # 0x43ead0
  42721e:	mov    rax,QWORD PTR [rip+0x3ebb]        # 0x42b0e0
  427225:	mov    QWORD PTR [rbp-0x10],rax
  427229:	mov    rax,QWORD PTR [rip+0x3ec0]        # 0x42b0f0
  427230:	mov    QWORD PTR [rbp-0x8],rax
  427234:	call   QWORD PTR [rip+0x1875a]        # 0x43f994
  42723a:	lea    rcx,[rip+0x111df]        # 0x438420
  427241:	call   QWORD PTR [rip+0x18775]        # 0x43f9bc
  427247:	call   QWORD PTR [rip+0x1869f]        # 0x43f8ec
  42724d:	mov    edx,0xc0000409
  427252:	mov    rcx,rax
  427255:	call   QWORD PTR [rip+0x18749]        # 0x43f9a4
  42725b:	call   0x4295e0
  427260:	mov    rax,QWORD PTR [rbp+0x18]
  427264:	mov    QWORD PTR [rip+0x1744d],rax        # 0x43e6b8
  42726b:	lea    rax,[rbp+0x8]
  42726f:	mov    QWORD PTR [rip+0x173e2],rax        # 0x43e658
  427276:	jmp    0x4271f3
  42727b:	nop
  42727c:	nop
  42727d:	nop
  42727e:	nop
  42727f:	nop
  427280:	sub    rsp,0x28
  427284:	test   edx,edx
  427286:	je     0x4272a0
  427288:	cmp    edx,0x3
  42728b:	je     0x4272a0
  42728d:	mov    eax,0x1
  427292:	add    rsp,0x28
  427296:	ret    
  427297:	nop    WORD PTR [rax+rax*1+0x0]
  4272a0:	call   0x427f90
  4272a5:	mov    eax,0x1
  4272aa:	add    rsp,0x28
  4272ae:	ret    
  4272af:	nop
  4272b0:	push   rsi
  4272b1:	push   rbx
  4272b2:	sub    rsp,0x28
  4272b6:	mov    rax,QWORD PTR [rip+0x11613]        # 0x4388d0
  4272bd:	cmp    DWORD PTR [rax],0x2
  4272c0:	je     0x4272c8
  4272c2:	mov    DWORD PTR [rax],0x2
  4272c8:	cmp    edx,0x2
  4272cb:	je     0x4272e0
  4272cd:	cmp    edx,0x1
  4272d0:	je     0x427312
  4272d2:	mov    eax,0x1
  4272d7:	add    rsp,0x28
  4272db:	pop    rbx
  4272dc:	pop    rsi
  4272dd:	ret    
  4272de:	xchg   ax,ax
  4272e0:	lea    rbx,[rip+0x19d79]        # 0x441060
  4272e7:	lea    rsi,[rip+0x19d72]        # 0x441060
  4272ee:	cmp    rbx,rsi
  4272f1:	je     0x4272d2
  4272f3:	mov    rax,QWORD PTR [rbx]
  4272f6:	test   rax,rax
  4272f9:	je     0x4272fd
  4272fb:	call   rax
  4272fd:	add    rbx,0x8
  427301:	cmp    rbx,rsi
  427304:	jne    0x4272f3
  427306:	mov    eax,0x1
  42730b:	add    rsp,0x28
  42730f:	pop    rbx
  427310:	pop    rsi
  427311:	ret    
  427312:	call   0x427f90
  427317:	jmp    0x4272d2
  427319:	nop    DWORD PTR [rax+0x0]
  427320:	xor    eax,eax
  427322:	ret    
  427323:	nop
  427324:	nop
  427325:	nop
  427326:	nop
  427327:	nop
  427328:	nop
  427329:	nop
  42732a:	nop
  42732b:	nop
  42732c:	nop
  42732d:	nop
  42732e:	nop
  42732f:	nop
  427330:	sub    rsp,0x58
  427334:	mov    rax,QWORD PTR [rip+0x17865]        # 0x43eba0
  42733b:	test   rax,rax
  42733e:	je     0x42736c
  427340:	movsd  xmm0,QWORD PTR [rsp+0x80]
  427349:	mov    DWORD PTR [rsp+0x20],ecx
  42734d:	lea    rcx,[rsp+0x20]
  427352:	mov    QWORD PTR [rsp+0x28],rdx
  427357:	movsd  QWORD PTR [rsp+0x30],xmm2
  42735d:	movsd  QWORD PTR [rsp+0x38],xmm3
  427363:	movsd  QWORD PTR [rsp+0x40],xmm0
  427369:	call   rax
  42736b:	nop
  42736c:	add    rsp,0x58
  427370:	ret    
  427371:	nop    DWORD PTR [rax+rax*1+0x0]
  427376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427380:	mov    QWORD PTR [rip+0x17819],rcx        # 0x43eba0
  427387:	jmp    0x429668
  42738c:	nop    DWORD PTR [rax+0x0]
  427390:	push   rsi
  427391:	push   rbx
  427392:	sub    rsp,0x78
  427396:	movaps XMMWORD PTR [rsp+0x40],xmm6
  42739b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  4273a0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  4273a6:	cmp    DWORD PTR [rcx],0x6
  4273a9:	ja     0x427480
  4273af:	mov    edx,DWORD PTR [rcx]
  4273b1:	lea    rax,[rip+0x111ac]        # 0x438564
  4273b8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  4273bc:	add    rax,rdx
  4273bf:	jmp    rax
  4273c1:	lea    rbx,[rip+0x11078]        # 0x438440
  4273c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4273d0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  4273d6:	mov    rsi,QWORD PTR [rcx+0x8]
  4273da:	movsd  xmm7,QWORD PTR [rcx+0x18]
  4273df:	movsd  xmm6,QWORD PTR [rcx+0x10]
  4273e4:	call   0x429680
  4273e9:	movsd  QWORD PTR [rsp+0x30],xmm8
  4273f0:	lea    rcx,[rax+0x60]
  4273f4:	lea    rdx,[rip+0x1113d]        # 0x438538
  4273fb:	movsd  QWORD PTR [rsp+0x28],xmm7
  427401:	mov    r9,rsi
  427404:	mov    r8,rbx
  427407:	movsd  QWORD PTR [rsp+0x20],xmm6
  42740d:	call   0x429598
  427412:	nop
  427413:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  427418:	xor    eax,eax
  42741a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  42741f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  427425:	add    rsp,0x78
  427429:	pop    rbx
  42742a:	pop    rsi
  42742b:	ret    
  42742c:	nop    DWORD PTR [rax+0x0]
  427430:	lea    rbx,[rip+0x11028]        # 0x43845f
  427437:	jmp    0x4273d0
  427439:	nop    DWORD PTR [rax+0x0]
  427440:	lea    rbx,[rip+0x11039]        # 0x438480
  427447:	jmp    0x4273d0
  427449:	nop    DWORD PTR [rax+0x0]
  427450:	lea    rbx,[rip+0x11099]        # 0x4384f0
  427457:	jmp    0x4273d0
  42745c:	nop    DWORD PTR [rax+0x0]
  427460:	lea    rbx,[rip+0x11061]        # 0x4384c8
  427467:	jmp    0x4273d0
  42746c:	nop    DWORD PTR [rax+0x0]
  427470:	lea    rbx,[rip+0x11029]        # 0x4384a0
  427477:	jmp    0x4273d0
  42747c:	nop    DWORD PTR [rax+0x0]
  427480:	lea    rbx,[rip+0x1109f]        # 0x438526
  427487:	jmp    0x4273d0
  42748c:	nop
  42748d:	nop
  42748e:	nop
  42748f:	nop
  427490:	fninit 
  427492:	ret    
  427493:	nop
  427494:	nop
  427495:	nop
  427496:	nop
  427497:	nop
  427498:	nop
  427499:	nop
  42749a:	nop
  42749b:	nop
  42749c:	nop
  42749d:	nop
  42749e:	nop
  42749f:	nop
  4274a0:	mov    rax,rcx
  4274a3:	ret    
  4274a4:	xchg   ax,ax
  4274a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4274b0:	mov    rax,rcx
  4274b3:	ret    
  4274b4:	nop
  4274b5:	nop
  4274b6:	nop
  4274b7:	nop
  4274b8:	nop
  4274b9:	nop
  4274ba:	nop
  4274bb:	nop
  4274bc:	nop
  4274bd:	nop
  4274be:	nop
  4274bf:	nop
  4274c0:	push   rsi
  4274c1:	push   rbx
  4274c2:	sub    rsp,0x38
  4274c6:	lea    rax,[rsp+0x58]
  4274cb:	mov    rbx,rcx
  4274ce:	mov    QWORD PTR [rsp+0x58],rdx
  4274d3:	mov    QWORD PTR [rsp+0x60],r8
  4274d8:	mov    QWORD PTR [rsp+0x68],r9
  4274dd:	mov    QWORD PTR [rsp+0x28],rax
  4274e2:	call   0x429680
  4274e7:	lea    rcx,[rip+0x11092]        # 0x438580
  4274ee:	lea    r9,[rax+0x60]
  4274f2:	mov    r8d,0x1b
  4274f8:	mov    edx,0x1
  4274fd:	call   0x429570
  427502:	mov    rsi,QWORD PTR [rsp+0x28]
  427507:	call   0x429680
  42750c:	lea    rcx,[rax+0x60]
  427510:	mov    rdx,rbx
  427513:	mov    r8,rsi
  427516:	call   0x429450
  42751b:	call   0x4295e0
  427520:	nop
  427521:	nop    DWORD PTR [rax+rax*1+0x0]
  427526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427530:	push   r13
  427532:	push   r12
  427534:	push   rbp
  427535:	push   rdi
  427536:	push   rsi
  427537:	push   rbx
  427538:	sub    rsp,0x58
  42753c:	movsxd rbp,DWORD PTR [rip+0x17681]        # 0x43ebc4
  427543:	mov    rbx,rcx
  427546:	mov    rsi,rdx
  427549:	mov    rdi,r8
  42754c:	test   ebp,ebp
  42754e:	jle    0x42764a
  427554:	mov    rax,QWORD PTR [rip+0x1766d]        # 0x43ebc8
  42755b:	xor    r9d,r9d
  42755e:	add    rax,0x8
  427562:	mov    r10,QWORD PTR [rax]
  427565:	cmp    rbx,r10
  427568:	jb     0x42757e
  42756a:	mov    rdx,QWORD PTR [rax+0x8]
  42756e:	mov    r11d,DWORD PTR [rdx+0x8]
  427572:	add    r10,r11
  427575:	cmp    rbx,r10
  427578:	jb     0x427630
  42757e:	add    r9d,0x1
  427582:	add    rax,0x18
  427586:	cmp    r9d,ebp
  427589:	jne    0x427562
  42758b:	mov    rcx,rbx
  42758e:	call   0x4281a0
  427593:	test   rax,rax
  427596:	mov    r12,rax
  427599:	je     0x427682
  42759f:	lea    rbp,[rbp+rbp*2+0x0]
  4275a4:	shl    rbp,0x3
  4275a8:	mov    r13,rbp
  4275ab:	add    r13,QWORD PTR [rip+0x17616]        # 0x43ebc8
  4275b2:	mov    QWORD PTR [r13+0x10],rax
  4275b6:	mov    DWORD PTR [r13+0x0],0x0
  4275be:	call   0x4282c0
  4275c3:	mov    edx,DWORD PTR [r12+0xc]
  4275c8:	mov    r8d,0x30
  4275ce:	add    rax,rdx
  4275d1:	lea    rdx,[rsp+0x20]
  4275d6:	mov    QWORD PTR [r13+0x8],rax
  4275da:	mov    rax,QWORD PTR [rip+0x175e7]        # 0x43ebc8
  4275e1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  4275e6:	call   QWORD PTR [rip+0x183e0]        # 0x43f9cc
  4275ec:	test   rax,rax
  4275ef:	je     0x427665
  4275f1:	mov    eax,DWORD PTR [rsp+0x44]
  4275f5:	lea    edx,[rax-0x4]
  4275f8:	and    edx,0xfffffffb
  4275fb:	je     0x427629
  4275fd:	sub    eax,0x40
  427600:	and    eax,0xffffffbf
  427603:	je     0x427629
  427605:	mov    r9,rbp
  427608:	add    r9,QWORD PTR [rip+0x175b9]        # 0x43ebc8
  42760f:	mov    r8d,0x40
  427615:	mov    rdx,QWORD PTR [rsp+0x38]
  42761a:	mov    rcx,QWORD PTR [rsp+0x20]
  42761f:	call   QWORD PTR [rip+0x1839f]        # 0x43f9c4
  427625:	test   eax,eax
  427627:	je     0x427651
  427629:	add    DWORD PTR [rip+0x17594],0x1        # 0x43ebc4
  427630:	mov    r8,rdi
  427633:	mov    rdx,rsi
  427636:	mov    rcx,rbx
  427639:	add    rsp,0x58
  42763d:	pop    rbx
  42763e:	pop    rsi
  42763f:	pop    rdi
  427640:	pop    rbp
  427641:	pop    r12
  427643:	pop    r13
  427645:	jmp    0x429528
  42764a:	xor    ebp,ebp
  42764c:	jmp    0x42758b
  427651:	call   QWORD PTR [rip+0x182ad]        # 0x43f904
  427657:	lea    rcx,[rip+0x10f9a]        # 0x4385f8
  42765e:	mov    edx,eax
  427660:	call   0x4274c0
  427665:	mov    rax,QWORD PTR [rip+0x1755c]        # 0x43ebc8
  42766c:	mov    edx,DWORD PTR [r12+0x8]
  427671:	lea    rcx,[rip+0x10f48]        # 0x4385c0
  427678:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  42767d:	call   0x4274c0
  427682:	lea    rcx,[rip+0x10f17]        # 0x4385a0
  427689:	mov    rdx,rbx
  42768c:	call   0x4274c0
  427691:	nop
  427692:	nop    DWORD PTR [rax+0x0]
  427696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4276a0:	push   rbp
  4276a1:	push   r14
  4276a3:	push   r13
  4276a5:	push   r12
  4276a7:	push   rdi
  4276a8:	push   rsi
  4276a9:	push   rbx
  4276aa:	mov    rbp,rsp
  4276ad:	sub    rsp,0x60
  4276b1:	mov    ebx,DWORD PTR [rip+0x17509]        # 0x43ebc0
  4276b7:	test   ebx,ebx
  4276b9:	je     0x4276d0
  4276bb:	mov    rsp,rbp
  4276be:	pop    rbx
  4276bf:	pop    rsi
  4276c0:	pop    rdi
  4276c1:	pop    r12
  4276c3:	pop    r13
  4276c5:	pop    r14
  4276c7:	pop    rbp
  4276c8:	ret    
  4276c9:	nop    DWORD PTR [rax+0x0]
  4276d0:	mov    DWORD PTR [rip+0x174e6],0x1        # 0x43ebc0
  4276da:	call   0x4281f0
  4276df:	cdqe   
  4276e1:	lea    rax,[rax+rax*2]
  4276e5:	lea    rax,[rax*8+0x1e]
  4276ed:	and    rax,0xfffffffffffffff0
  4276f1:	call   0x428410
  4276f6:	mov    rsi,QWORD PTR [rip+0x11203]        # 0x438900
  4276fd:	mov    rbx,QWORD PTR [rip+0x1120c]        # 0x438910
  427704:	sub    rsp,rax
  427707:	mov    DWORD PTR [rip+0x174b3],0x0        # 0x43ebc4
  427711:	lea    rax,[rsp+0x20]
  427716:	mov    QWORD PTR [rip+0x174ab],rax        # 0x43ebc8
  42771d:	mov    rax,rsi
  427720:	sub    rax,rbx
  427723:	cmp    rax,0x7
  427727:	jle    0x4276bb
  427729:	cmp    rax,0xb
  42772d:	jle    0x427755
  42772f:	mov    r11d,DWORD PTR [rbx]
  427732:	test   r11d,r11d
  427735:	jne    0x427880
  42773b:	mov    r10d,DWORD PTR [rbx+0x4]
  42773f:	test   r10d,r10d
  427742:	jne    0x427880
  427748:	mov    r9d,DWORD PTR [rbx+0x8]
  42774c:	test   r9d,r9d
  42774f:	jne    0x42776c
  427751:	add    rbx,0xc
  427755:	mov    r8d,DWORD PTR [rbx]
  427758:	test   r8d,r8d
  42775b:	jne    0x427880
  427761:	mov    ecx,DWORD PTR [rbx+0x4]
  427764:	test   ecx,ecx
  427766:	jne    0x427880
  42776c:	mov    edx,DWORD PTR [rbx+0x8]
  42776f:	cmp    edx,0x1
  427772:	jne    0x42798c
  427778:	add    rbx,0xc
  42777c:	cmp    rbx,rsi
  42777f:	jae    0x4276bb
  427785:	mov    r12,QWORD PTR [rip+0x111a4]        # 0x438930
  42778c:	lea    r13,[rbp-0x30]
  427790:	movabs r14,0xffffffff00000000
  42779a:	mov    ecx,DWORD PTR [rbx+0x4]
  42779d:	mov    eax,DWORD PTR [rbx]
  42779f:	movzx  edx,BYTE PTR [rbx+0x8]
  4277a3:	add    rax,r12
  4277a6:	add    rcx,r12
  4277a9:	cmp    edx,0x10
  4277ac:	mov    r8,QWORD PTR [rax]
  4277af:	je     0x4278f6
  4277b5:	jbe    0x4278bd
  4277bb:	cmp    edx,0x20
  4277be:	je     0x42793f
  4277c4:	cmp    edx,0x40
  4277c7:	jne    0x42792b
  4277cd:	sub    r8,rax
  4277d0:	mov    rdx,r13
  4277d3:	mov    rdi,r13
  4277d6:	mov    rax,r8
  4277d9:	add    rax,QWORD PTR [rcx]
  4277dc:	mov    r8d,0x8
  4277e2:	mov    QWORD PTR [rbp-0x30],rax
  4277e6:	call   0x427530
  4277eb:	add    rbx,0xc
  4277ef:	cmp    rbx,rsi
  4277f2:	jb     0x42779a
  4277f4:	mov    eax,DWORD PTR [rip+0x173ca]        # 0x43ebc4
  4277fa:	xor    ebx,ebx
  4277fc:	xor    esi,esi
  4277fe:	test   eax,eax
  427800:	jle    0x4276bb
  427806:	mov    r14,QWORD PTR [rip+0x181bf]        # 0x43f9cc
  42780d:	lea    r13,[rbp-0x34]
  427811:	mov    r12,QWORD PTR [rip+0x181ac]        # 0x43f9c4
  427818:	jmp    0x427833
  42781a:	nop    WORD PTR [rax+rax*1+0x0]
  427820:	add    esi,0x1
  427823:	add    rbx,0x18
  427827:	cmp    esi,DWORD PTR [rip+0x17397]        # 0x43ebc4
  42782d:	jge    0x4276bb
  427833:	mov    rax,rbx
  427836:	add    rax,QWORD PTR [rip+0x1738b]        # 0x43ebc8
  42783d:	mov    edx,DWORD PTR [rax]
  42783f:	test   edx,edx
  427841:	je     0x427820
  427843:	mov    rcx,QWORD PTR [rax+0x8]
  427847:	mov    r8d,0x30
  42784d:	mov    rdx,rdi
  427850:	call   r14
  427853:	test   rax,rax
  427856:	je     0x42796e
  42785c:	mov    rax,QWORD PTR [rip+0x17365]        # 0x43ebc8
  427863:	mov    r9,r13
  427866:	mov    rdx,QWORD PTR [rbp-0x18]
  42786a:	mov    rcx,QWORD PTR [rbp-0x30]
  42786e:	mov    r8d,DWORD PTR [rax+rbx*1]
  427872:	call   r12
  427875:	jmp    0x427820
  427877:	nop    WORD PTR [rax+rax*1+0x0]
  427880:	cmp    rbx,rsi
  427883:	jae    0x4276bb
  427889:	mov    r12,QWORD PTR [rip+0x110a0]        # 0x438930
  427890:	lea    rdi,[rbp-0x30]
  427894:	mov    ecx,DWORD PTR [rbx+0x4]
  427897:	mov    eax,DWORD PTR [rbx]
  427899:	mov    r8d,0x4
  42789f:	mov    rdx,rdi
  4278a2:	add    rbx,0x8
  4278a6:	add    rcx,r12
  4278a9:	add    eax,DWORD PTR [rcx]
  4278ab:	mov    DWORD PTR [rbp-0x30],eax
  4278ae:	call   0x427530
  4278b3:	cmp    rbx,rsi
  4278b6:	jb     0x427894
  4278b8:	jmp    0x4277f4
  4278bd:	cmp    edx,0x8
  4278c0:	jne    0x42792b
  4278c2:	movzx  edx,BYTE PTR [rcx]
  4278c5:	mov    rdi,r13
  4278c8:	mov    r10,rdx
  4278cb:	or     r10,0xffffffffffffff00
  4278d2:	test   dl,dl
  4278d4:	cmovs  rdx,r10
  4278d8:	sub    rdx,rax
  4278db:	lea    rax,[r8+rdx*1]
  4278df:	mov    r8d,0x1
  4278e5:	mov    rdx,r13
  4278e8:	mov    QWORD PTR [rbp-0x30],rax
  4278ec:	call   0x427530
  4278f1:	jmp    0x4277eb
  4278f6:	movzx  edx,WORD PTR [rcx]
  4278f9:	mov    rdi,r13
  4278fc:	mov    r10,rdx
  4278ff:	or     r10,0xffffffffffff0000
  427906:	test   dx,dx
  427909:	cmovs  rdx,r10
  42790d:	sub    rdx,rax
  427910:	lea    rax,[r8+rdx*1]
  427914:	mov    r8d,0x2
  42791a:	mov    rdx,r13
  42791d:	mov    QWORD PTR [rbp-0x30],rax
  427921:	call   0x427530
  427926:	jmp    0x4277eb
  42792b:	lea    rcx,[rip+0x10d26]        # 0x438658
  427932:	mov    QWORD PTR [rbp-0x30],0x0
  42793a:	call   0x4274c0
  42793f:	mov    edx,DWORD PTR [rcx]
  427941:	mov    rdi,r13
  427944:	mov    r10,rdx
  427947:	or     r10,r14
  42794a:	test   edx,edx
  42794c:	cmovs  rdx,r10
  427950:	sub    rdx,rax
  427953:	lea    rax,[r8+rdx*1]
  427957:	mov    r8d,0x4
  42795d:	mov    rdx,r13
  427960:	mov    QWORD PTR [rbp-0x30],rax
  427964:	call   0x427530
  427969:	jmp    0x4277eb
  42796e:	add    rbx,QWORD PTR [rip+0x17253]        # 0x43ebc8
  427975:	lea    rcx,[rip+0x10c44]        # 0x4385c0
  42797c:	mov    rax,QWORD PTR [rbx+0x10]
  427980:	mov    r8,QWORD PTR [rbx+0x8]
  427984:	mov    edx,DWORD PTR [rax+0x8]
  427987:	call   0x4274c0
  42798c:	lea    rcx,[rip+0x10c8d]        # 0x438620
  427993:	call   0x4274c0
  427998:	nop
  427999:	nop
  42799a:	nop
  42799b:	nop
  42799c:	nop
  42799d:	nop
  42799e:	nop
  42799f:	nop
  4279a0:	sub    rsp,0x28
  4279a4:	mov    eax,DWORD PTR [rcx]
  4279a6:	cmp    eax,0xc0000091
  4279ab:	ja     0x427a10
  4279ad:	cmp    eax,0xc000008d
  4279b2:	jae    0x427a2f
  4279b4:	cmp    eax,0xc0000008
  4279b9:	je     0x427ad0
  4279bf:	ja     0x427aa0
  4279c5:	cmp    eax,0x80000002
  4279ca:	je     0x427ad0
  4279d0:	cmp    eax,0xc0000005
  4279d5:	jne    0x427aae
  4279db:	xor    edx,edx
  4279dd:	mov    ecx,0xb
  4279e2:	call   0x4294d0
  4279e7:	cmp    rax,0x1
  4279eb:	je     0x427b30
  4279f1:	test   rax,rax
  4279f4:	je     0x427b10
  4279fa:	mov    ecx,0xb
  4279ff:	call   rax
  427a01:	xor    eax,eax
  427a03:	add    rsp,0x28
  427a07:	ret    
  427a08:	nop    DWORD PTR [rax+rax*1+0x0]
  427a10:	cmp    eax,0xc0000094
  427a15:	je     0x427ae0
  427a1b:	ja     0x427a60
  427a1d:	cmp    eax,0xc0000092
  427a22:	je     0x427ad0
  427a28:	cmp    eax,0xc0000093
  427a2d:	jne    0x427aae
  427a2f:	xor    edx,edx
  427a31:	mov    ecx,0x8
  427a36:	call   0x4294d0
  427a3b:	cmp    rax,0x1
  427a3f:	mov    rdx,rax
  427a42:	je     0x427ab8
  427a44:	test   rdx,rdx
  427a47:	mov    eax,0x1
  427a4c:	je     0x427a03
  427a4e:	mov    ecx,0x8
  427a53:	call   rdx
  427a55:	xor    eax,eax
  427a57:	add    rsp,0x28
  427a5b:	ret    
  427a5c:	nop    DWORD PTR [rax+0x0]
  427a60:	cmp    eax,0xc0000095
  427a65:	je     0x427ad0
  427a67:	cmp    eax,0xc0000096
  427a6c:	jne    0x427aae
  427a6e:	xor    edx,edx
  427a70:	mov    ecx,0x4
  427a75:	call   0x4294d0
  427a7a:	cmp    rax,0x1
  427a7e:	je     0x427b1a
  427a84:	test   rax,rax
  427a87:	je     0x427b10
  427a8d:	mov    ecx,0x4
  427a92:	call   rax
  427a94:	xor    eax,eax
  427a96:	jmp    0x427a03
  427a9b:	nop    DWORD PTR [rax+rax*1+0x0]
  427aa0:	cmp    eax,0xc000001d
  427aa5:	je     0x427a6e
  427aa7:	cmp    eax,0xc000008c
  427aac:	je     0x427ad0
  427aae:	mov    eax,0x1
  427ab3:	add    rsp,0x28
  427ab7:	ret    
  427ab8:	mov    edx,0x1
  427abd:	mov    ecx,0x8
  427ac2:	call   0x4294d0
  427ac7:	call   0x427490
  427acc:	nop    DWORD PTR [rax+0x0]
  427ad0:	xor    eax,eax
  427ad2:	add    rsp,0x28
  427ad6:	ret    
  427ad7:	nop    WORD PTR [rax+rax*1+0x0]
  427ae0:	xor    edx,edx
  427ae2:	mov    ecx,0x8
  427ae7:	call   0x4294d0
  427aec:	cmp    rax,0x1
  427af0:	mov    rdx,rax
  427af3:	jne    0x427a44
  427af9:	mov    edx,0x1
  427afe:	mov    ecx,0x8
  427b03:	call   0x4294d0
  427b08:	xor    eax,eax
  427b0a:	jmp    0x427a03
  427b0f:	nop
  427b10:	mov    eax,0x4
  427b15:	add    rsp,0x28
  427b19:	ret    
  427b1a:	mov    edx,0x1
  427b1f:	mov    ecx,0x4
  427b24:	call   0x4294d0
  427b29:	xor    eax,eax
  427b2b:	jmp    0x427a03
  427b30:	mov    edx,0x1
  427b35:	mov    ecx,0xb
  427b3a:	call   0x4294d0
  427b3f:	xor    eax,eax
  427b41:	jmp    0x427a03
  427b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427b50:	push   r12
  427b52:	push   rbp
  427b53:	push   rdi
  427b54:	push   rsi
  427b55:	push   rbx
  427b56:	sub    rsp,0x20
  427b5a:	call   0x4282c0
  427b5f:	mov    rbp,rax
  427b62:	mov    eax,DWORD PTR [rip+0x170a0]        # 0x43ec08
  427b68:	test   eax,eax
  427b6a:	jne    0x427b91
  427b6c:	test   rbp,rbp
  427b6f:	je     0x427b91
  427b71:	lea    rcx,[rip+0x10b18]        # 0x438690
  427b78:	mov    DWORD PTR [rip+0x17086],0x1        # 0x43ec08
  427b82:	call   0x428100
  427b87:	test   rax,rax
  427b8a:	je     0x427ba0
  427b8c:	mov    eax,0x1
  427b91:	add    rsp,0x20
  427b95:	pop    rbx
  427b96:	pop    rsi
  427b97:	pop    rdi
  427b98:	pop    rbp
  427b99:	pop    r12
  427b9b:	ret    
  427b9c:	nop    DWORD PTR [rax+0x0]
  427ba0:	lea    rbx,[rip+0x17199]        # 0x43ed40
  427ba7:	mov    ecx,0x30
  427bac:	lea    rdx,[rip+0x1708d]        # 0x43ec40
  427bb3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x4279a0
  427bba:	xor    esi,esi
  427bbc:	mov    rdi,rbx
  427bbf:	rep stos QWORD PTR es:[rdi],rax
  427bc2:	mov    rdi,rdx
  427bc5:	sub    r12,rbp
  427bc8:	mov    cl,0x20
  427bca:	rep stos QWORD PTR es:[rdi],rax
  427bcd:	mov    rdi,rdx
  427bd0:	jmp    0x427c00
  427bd2:	mov    BYTE PTR [rdi],0x9
  427bd5:	mov    DWORD PTR [rdi+0x4],r12d
  427bd9:	add    rsi,0x1
  427bdd:	mov    edx,DWORD PTR [rax+0xc]
  427be0:	add    rbx,0xc
  427be4:	mov    DWORD PTR [rbx-0xc],edx
  427be7:	add    edx,DWORD PTR [rax+0x8]
  427bea:	mov    rax,rdi
  427bed:	sub    rax,rbp
  427bf0:	add    rdi,0x8
  427bf4:	mov    DWORD PTR [rbx-0x4],eax
  427bf7:	mov    DWORD PTR [rbx-0x8],edx
  427bfa:	cmp    rsi,0x20
  427bfe:	je     0x427c35
  427c00:	mov    rcx,rsi
  427c03:	call   0x428230
  427c08:	test   rax,rax
  427c0b:	jne    0x427bd2
  427c0d:	test   rsi,rsi
  427c10:	je     0x427b8c
  427c16:	mov    edx,esi
  427c18:	nop    DWORD PTR [rax+rax*1+0x0]
  427c20:	mov    r8,rbp
  427c23:	lea    rcx,[rip+0x17116]        # 0x43ed40
  427c2a:	call   QWORD PTR [rip+0x17d3c]        # 0x43f96c
  427c30:	jmp    0x427b8c
  427c35:	mov    edx,0x20
  427c3a:	jmp    0x427c20
  427c3c:	nop    DWORD PTR [rax+0x0]
  427c40:	push   rbx
  427c41:	sub    rsp,0x20
  427c45:	mov    rdx,QWORD PTR [rcx]
  427c48:	mov    eax,DWORD PTR [rdx]
  427c4a:	mov    r8d,eax
  427c4d:	and    r8d,0x20ffffff
  427c54:	cmp    r8d,0x20474343
  427c5b:	je     0x427d60
  427c61:	cmp    eax,0xc0000091
  427c66:	mov    rbx,rcx
  427c69:	ja     0x427cf0
  427c6f:	cmp    eax,0xc000008d
  427c74:	jae    0x427d07
  427c7a:	cmp    eax,0xc0000008
  427c7f:	je     0x427cb3
  427c81:	ja     0x427cc0
  427c83:	cmp    eax,0x80000002
  427c88:	je     0x427cb3
  427c8a:	cmp    eax,0xc0000005
  427c8f:	jne    0x427cd2
  427c91:	xor    edx,edx
  427c93:	mov    ecx,0xb
  427c98:	call   0x4294d0
  427c9d:	cmp    rax,0x1
  427ca1:	je     0x427dd0
  427ca7:	test   rax,rax
  427caa:	je     0x427cd2
  427cac:	mov    ecx,0xb
  427cb1:	call   rax
  427cb3:	mov    eax,0xffffffff
  427cb8:	add    rsp,0x20
  427cbc:	pop    rbx
  427cbd:	ret    
  427cbe:	xchg   ax,ax
  427cc0:	cmp    eax,0xc000001d
  427cc5:	je     0x427d86
  427ccb:	cmp    eax,0xc000008c
  427cd0:	je     0x427cb3
  427cd2:	mov    rax,QWORD PTR [rip+0x16f27]        # 0x43ec00
  427cd9:	test   rax,rax
  427cdc:	je     0x427cb8
  427cde:	mov    rcx,rbx
  427ce1:	add    rsp,0x20
  427ce5:	pop    rbx
  427ce6:	rex.W jmp rax
  427ce9:	nop    DWORD PTR [rax+0x0]
  427cf0:	cmp    eax,0xc0000094
  427cf5:	je     0x427d32
  427cf7:	ja     0x427d70
  427cf9:	cmp    eax,0xc0000092
  427cfe:	je     0x427cb3
  427d00:	cmp    eax,0xc0000093
  427d05:	jne    0x427cd2
  427d07:	xor    edx,edx
  427d09:	mov    ecx,0x8
  427d0e:	call   0x4294d0
  427d13:	cmp    rax,0x1
  427d17:	jne    0x427d44
  427d19:	mov    edx,0x1
  427d1e:	mov    ecx,0x8
  427d23:	call   0x4294d0
  427d28:	call   0x427490
  427d2d:	jmp    0x427cb3
  427d32:	xor    edx,edx
  427d34:	mov    ecx,0x8
  427d39:	call   0x4294d0
  427d3e:	cmp    rax,0x1
  427d42:	je     0x427db2
  427d44:	test   rax,rax
  427d47:	je     0x427cd2
  427d49:	mov    ecx,0x8
  427d4e:	call   rax
  427d50:	mov    eax,0xffffffff
  427d55:	jmp    0x427cb8
  427d5a:	nop    WORD PTR [rax+rax*1+0x0]
  427d60:	test   BYTE PTR [rdx+0x4],0x1
  427d64:	jne    0x427c61
  427d6a:	jmp    0x427cb3
  427d6f:	nop
  427d70:	cmp    eax,0xc0000095
  427d75:	je     0x427cb3
  427d7b:	cmp    eax,0xc0000096
  427d80:	jne    0x427cd2
  427d86:	xor    edx,edx
  427d88:	mov    ecx,0x4
  427d8d:	call   0x4294d0
  427d92:	cmp    rax,0x1
  427d96:	je     0x427de4
  427d98:	test   rax,rax
  427d9b:	je     0x427cd2
  427da1:	mov    ecx,0x4
  427da6:	call   rax
  427da8:	mov    eax,0xffffffff
  427dad:	jmp    0x427cb8
  427db2:	mov    edx,0x1
  427db7:	mov    ecx,0x8
  427dbc:	call   0x4294d0
  427dc1:	jmp    0x427cb3
  427dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427dd0:	mov    edx,0x1
  427dd5:	mov    ecx,0xb
  427dda:	call   0x4294d0
  427ddf:	jmp    0x427cb3
  427de4:	mov    edx,0x1
  427de9:	mov    ecx,0x4
  427dee:	call   0x4294d0
  427df3:	jmp    0x427cb3
  427df8:	nop
  427df9:	nop
  427dfa:	nop
  427dfb:	nop
  427dfc:	nop
  427dfd:	nop
  427dfe:	nop
  427dff:	nop
  427e00:	push   rbp
  427e01:	push   rdi
  427e02:	push   rsi
  427e03:	push   rbx
  427e04:	sub    rsp,0x28
  427e08:	lea    rcx,[rip+0x170d1]        # 0x43eee0
  427e0f:	call   QWORD PTR [rip+0x17ac7]        # 0x43f8dc
  427e15:	mov    rbx,QWORD PTR [rip+0x170a4]        # 0x43eec0
  427e1c:	test   rbx,rbx
  427e1f:	je     0x427e54
  427e21:	mov    rbp,QWORD PTR [rip+0x17b84]        # 0x43f9ac
  427e28:	mov    rdi,QWORD PTR [rip+0x17ad5]        # 0x43f904
  427e2f:	nop
  427e30:	mov    ecx,DWORD PTR [rbx]
  427e32:	call   rbp
  427e34:	mov    rsi,rax
  427e37:	call   rdi
  427e39:	test   eax,eax
  427e3b:	jne    0x427e4b
  427e3d:	test   rsi,rsi
  427e40:	je     0x427e4b
  427e42:	mov    rax,QWORD PTR [rbx+0x8]
  427e46:	mov    rcx,rsi
  427e49:	call   rax
  427e4b:	mov    rbx,QWORD PTR [rbx+0x10]
  427e4f:	test   rbx,rbx
  427e52:	jne    0x427e30
  427e54:	mov    rax,QWORD PTR [rip+0x17af1]        # 0x43f94c
  427e5b:	lea    rcx,[rip+0x1707e]        # 0x43eee0
  427e62:	add    rsp,0x28
  427e66:	pop    rbx
  427e67:	pop    rsi
  427e68:	pop    rdi
  427e69:	pop    rbp
  427e6a:	rex.W jmp rax
  427e6d:	nop    DWORD PTR [rax]
  427e70:	push   rdi
  427e71:	push   rsi
  427e72:	push   rbx
  427e73:	sub    rsp,0x20
  427e77:	mov    eax,DWORD PTR [rip+0x1704b]        # 0x43eec8
  427e7d:	test   eax,eax
  427e7f:	jne    0x427e90
  427e81:	add    rsp,0x20
  427e85:	pop    rbx
  427e86:	pop    rsi
  427e87:	pop    rdi
  427e88:	ret    
  427e89:	nop    DWORD PTR [rax+0x0]
  427e90:	mov    rsi,rdx
  427e93:	mov    edi,ecx
  427e95:	mov    edx,0x18
  427e9a:	mov    ecx,0x1
  427e9f:	call   0x4295c8
  427ea4:	test   rax,rax
  427ea7:	mov    rbx,rax
  427eaa:	je     0x427ee8
  427eac:	mov    DWORD PTR [rax],edi
  427eae:	mov    QWORD PTR [rax+0x8],rsi
  427eb2:	lea    rcx,[rip+0x17027]        # 0x43eee0
  427eb9:	call   QWORD PTR [rip+0x17a1d]        # 0x43f8dc
  427ebf:	mov    rax,QWORD PTR [rip+0x16ffa]        # 0x43eec0
  427ec6:	lea    rcx,[rip+0x17013]        # 0x43eee0
  427ecd:	mov    QWORD PTR [rip+0x16fec],rbx        # 0x43eec0
  427ed4:	mov    QWORD PTR [rbx+0x10],rax
  427ed8:	call   QWORD PTR [rip+0x17a6e]        # 0x43f94c
  427ede:	xor    eax,eax
  427ee0:	add    rsp,0x20
  427ee4:	pop    rbx
  427ee5:	pop    rsi
  427ee6:	pop    rdi
  427ee7:	ret    
  427ee8:	mov    eax,0xffffffff
  427eed:	jmp    0x427e81
  427eef:	nop
  427ef0:	push   rbx
  427ef1:	sub    rsp,0x20
  427ef5:	mov    eax,DWORD PTR [rip+0x16fcd]        # 0x43eec8
  427efb:	test   eax,eax
  427efd:	jne    0x427f10
  427eff:	xor    eax,eax
  427f01:	add    rsp,0x20
  427f05:	pop    rbx
  427f06:	ret    
  427f07:	nop    WORD PTR [rax+rax*1+0x0]
  427f10:	mov    ebx,ecx
  427f12:	lea    rcx,[rip+0x16fc7]        # 0x43eee0
  427f19:	call   QWORD PTR [rip+0x179bd]        # 0x43f8dc
  427f1f:	mov    rdx,QWORD PTR [rip+0x16f9a]        # 0x43eec0
  427f26:	test   rdx,rdx
  427f29:	je     0x427f47
  427f2b:	mov    eax,DWORD PTR [rdx]
  427f2d:	cmp    eax,ebx
  427f2f:	jne    0x427f3e
  427f31:	jmp    0x427f7f
  427f33:	mov    r8d,DWORD PTR [rax]
  427f36:	cmp    r8d,ebx
  427f39:	je     0x427f60
  427f3b:	mov    rdx,rax
  427f3e:	mov    rax,QWORD PTR [rdx+0x10]
  427f42:	test   rax,rax
  427f45:	jne    0x427f33
  427f47:	lea    rcx,[rip+0x16f92]        # 0x43eee0
  427f4e:	call   QWORD PTR [rip+0x179f8]        # 0x43f94c
  427f54:	xor    eax,eax
  427f56:	add    rsp,0x20
  427f5a:	pop    rbx
  427f5b:	ret    
  427f5c:	nop    DWORD PTR [rax+0x0]
  427f60:	mov    rcx,rax
  427f63:	mov    rax,QWORD PTR [rax+0x10]
  427f67:	mov    QWORD PTR [rdx+0x10],rax
  427f6b:	call   0x429580
  427f70:	lea    rcx,[rip+0x16f69]        # 0x43eee0
  427f77:	call   QWORD PTR [rip+0x179cf]        # 0x43f94c
  427f7d:	jmp    0x427f54
  427f7f:	mov    rax,QWORD PTR [rdx+0x10]
  427f83:	mov    rcx,rdx
  427f86:	mov    QWORD PTR [rip+0x16f33],rax        # 0x43eec0
  427f8d:	jmp    0x427f6b
  427f8f:	nop
  427f90:	push   rbx
  427f91:	sub    rsp,0x20
  427f95:	cmp    edx,0x1
  427f98:	je     0x428030
  427f9e:	jb     0x427fd0
  427fa0:	cmp    edx,0x2
  427fa3:	je     0x427fc0
  427fa5:	cmp    edx,0x3
  427fa8:	jne    0x427fc5
  427faa:	mov    eax,DWORD PTR [rip+0x16f18]        # 0x43eec8
  427fb0:	test   eax,eax
  427fb2:	je     0x427fc5
  427fb4:	call   0x427e00
  427fb9:	jmp    0x427fc5
  427fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  427fc0:	call   0x427490
  427fc5:	mov    eax,0x1
  427fca:	add    rsp,0x20
  427fce:	pop    rbx
  427fcf:	ret    
  427fd0:	mov    eax,DWORD PTR [rip+0x16ef2]        # 0x43eec8
  427fd6:	test   eax,eax
  427fd8:	jne    0x428060
  427fde:	mov    eax,DWORD PTR [rip+0x16ee4]        # 0x43eec8
  427fe4:	cmp    eax,0x1
  427fe7:	jne    0x427fc5
  427fe9:	mov    rcx,QWORD PTR [rip+0x16ed0]        # 0x43eec0
  427ff0:	test   rcx,rcx
  427ff3:	je     0x428006
  427ff5:	mov    rbx,QWORD PTR [rcx+0x10]
  427ff9:	call   0x429580
  427ffe:	test   rbx,rbx
  428001:	mov    rcx,rbx
  428004:	jne    0x427ff5
  428006:	lea    rcx,[rip+0x16ed3]        # 0x43eee0
  42800d:	mov    QWORD PTR [rip+0x16ea8],0x0        # 0x43eec0
  428018:	mov    DWORD PTR [rip+0x16ea6],0x0        # 0x43eec8
  428022:	call   QWORD PTR [rip+0x178ac]        # 0x43f8d4
  428028:	jmp    0x427fc5
  42802a:	nop    WORD PTR [rax+rax*1+0x0]
  428030:	mov    eax,DWORD PTR [rip+0x16e92]        # 0x43eec8
  428036:	test   eax,eax
  428038:	je     0x428050
  42803a:	mov    eax,0x1
  42803f:	mov    DWORD PTR [rip+0x16e7f],0x1        # 0x43eec8
  428049:	add    rsp,0x20
  42804d:	pop    rbx
  42804e:	ret    
  42804f:	nop
  428050:	lea    rcx,[rip+0x16e89]        # 0x43eee0
  428057:	call   QWORD PTR [rip+0x178e7]        # 0x43f944
  42805d:	jmp    0x42803a
  42805f:	nop
  428060:	call   0x427e00
  428065:	jmp    0x427fde
  42806a:	nop
  42806b:	nop
  42806c:	nop
  42806d:	nop
  42806e:	nop
  42806f:	nop
  428070:	movsxd rax,DWORD PTR [rcx+0x3c]
  428074:	add    rcx,rax
  428077:	xor    eax,eax
  428079:	cmp    DWORD PTR [rcx],0x4550
  42807f:	je     0x428083
  428081:	repz ret 
  428083:	xor    eax,eax
  428085:	cmp    WORD PTR [rcx+0x18],0x20b
  42808b:	sete   al
  42808e:	ret    
  42808f:	nop
  428090:	cmp    WORD PTR [rcx],0x5a4d
  428095:	je     0x4280a0
  428097:	xor    eax,eax
  428099:	ret    
  42809a:	nop    WORD PTR [rax+rax*1+0x0]
  4280a0:	jmp    0x428070
  4280a2:	nop    DWORD PTR [rax+0x0]
  4280a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4280b0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4280b4:	add    rcx,rax
  4280b7:	movzx  eax,WORD PTR [rcx+0x14]
  4280bb:	lea    rax,[rcx+rax*1+0x18]
  4280c0:	movzx  ecx,WORD PTR [rcx+0x6]
  4280c4:	test   ecx,ecx
  4280c6:	je     0x4280f1
  4280c8:	sub    ecx,0x1
  4280cb:	lea    rcx,[rcx+rcx*4]
  4280cf:	lea    r9,[rax+rcx*8+0x28]
  4280d4:	mov    r8d,DWORD PTR [rax+0xc]
  4280d8:	cmp    r8,rdx
  4280db:	mov    rcx,r8
  4280de:	ja     0x4280e8
  4280e0:	add    ecx,DWORD PTR [rax+0x8]
  4280e3:	cmp    rdx,rcx
  4280e6:	jb     0x4280f3
  4280e8:	add    rax,0x28
  4280ec:	cmp    rax,r9
  4280ef:	jne    0x4280d4
  4280f1:	xor    eax,eax
  4280f3:	repz ret 
  4280f5:	nop
  4280f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428100:	push   rdi
  428101:	push   rsi
  428102:	push   rbx
  428103:	sub    rsp,0x20
  428107:	mov    rsi,rcx
  42810a:	call   0x429490
  42810f:	cmp    rax,0x8
  428113:	ja     0x428130
  428115:	mov    rbx,QWORD PTR [rip+0x10814]        # 0x438930
  42811c:	xor    edi,edi
  42811e:	cmp    WORD PTR [rbx],0x5a4d
  428123:	je     0x428140
  428125:	mov    rax,rdi
  428128:	add    rsp,0x20
  42812c:	pop    rbx
  42812d:	pop    rsi
  42812e:	pop    rdi
  42812f:	ret    
  428130:	xor    edi,edi
  428132:	mov    rax,rdi
  428135:	add    rsp,0x20
  428139:	pop    rbx
  42813a:	pop    rsi
  42813b:	pop    rdi
  42813c:	ret    
  42813d:	nop    DWORD PTR [rax]
  428140:	mov    rcx,rbx
  428143:	call   0x428070
  428148:	test   eax,eax
  42814a:	je     0x428125
  42814c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  428150:	add    rdx,rbx
  428153:	movzx  eax,WORD PTR [rdx+0x14]
  428157:	lea    rbx,[rdx+rax*1+0x18]
  42815c:	movzx  eax,WORD PTR [rdx+0x6]
  428160:	test   eax,eax
  428162:	je     0x428125
  428164:	sub    eax,0x1
  428167:	lea    rax,[rax+rax*4]
  42816b:	lea    rdi,[rbx+rax*8+0x28]
  428170:	jmp    0x42817b
  428172:	add    rbx,0x28
  428176:	cmp    rbx,rdi
  428179:	je     0x428130
  42817b:	mov    r8d,0x8
  428181:	mov    rdx,rsi
  428184:	mov    rcx,rbx
  428187:	call   0x429488
  42818c:	test   eax,eax
  42818e:	jne    0x428172
  428190:	mov    rdi,rbx
  428193:	mov    rax,rdi
  428196:	add    rsp,0x20
  42819a:	pop    rbx
  42819b:	pop    rsi
  42819c:	pop    rdi
  42819d:	ret    
  42819e:	xchg   ax,ax
  4281a0:	push   rsi
  4281a1:	push   rbx
  4281a2:	sub    rsp,0x28
  4281a6:	mov    rbx,QWORD PTR [rip+0x10783]        # 0x438930
  4281ad:	cmp    WORD PTR [rbx],0x5a4d
  4281b2:	je     0x4281c0
  4281b4:	xor    eax,eax
  4281b6:	add    rsp,0x28
  4281ba:	pop    rbx
  4281bb:	pop    rsi
  4281bc:	ret    
  4281bd:	nop    DWORD PTR [rax]
  4281c0:	mov    rsi,rcx
  4281c3:	mov    rcx,rbx
  4281c6:	call   0x428070
  4281cb:	test   eax,eax
  4281cd:	je     0x4281b4
  4281cf:	sub    rsi,rbx
  4281d2:	mov    rcx,rbx
  4281d5:	mov    rdx,rsi
  4281d8:	add    rsp,0x28
  4281dc:	pop    rbx
  4281dd:	pop    rsi
  4281de:	jmp    0x4280b0
  4281e3:	nop    DWORD PTR [rax]
  4281e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4281f0:	push   rbx
  4281f1:	sub    rsp,0x20
  4281f5:	mov    rbx,QWORD PTR [rip+0x10734]        # 0x438930
  4281fc:	xor    eax,eax
  4281fe:	cmp    WORD PTR [rbx],0x5a4d
  428203:	je     0x428210
  428205:	add    rsp,0x20
  428209:	pop    rbx
  42820a:	ret    
  42820b:	nop    DWORD PTR [rax+rax*1+0x0]
  428210:	mov    rcx,rbx
  428213:	call   0x428070
  428218:	test   eax,eax
  42821a:	je     0x428205
  42821c:	movsxd rax,DWORD PTR [rbx+0x3c]
  428220:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  428225:	add    rsp,0x20
  428229:	pop    rbx
  42822a:	ret    
  42822b:	nop    DWORD PTR [rax+rax*1+0x0]
  428230:	push   rdi
  428231:	push   rsi
  428232:	push   rbx
  428233:	sub    rsp,0x20
  428237:	mov    rsi,QWORD PTR [rip+0x106f2]        # 0x438930
  42823e:	xor    edi,edi
  428240:	mov    rbx,rcx
  428243:	cmp    WORD PTR [rsi],0x5a4d
  428248:	je     0x428255
  42824a:	mov    rax,rdi
  42824d:	add    rsp,0x20
  428251:	pop    rbx
  428252:	pop    rsi
  428253:	pop    rdi
  428254:	ret    
  428255:	mov    rcx,rsi
  428258:	call   0x428070
  42825d:	test   eax,eax
  42825f:	je     0x42824a
  428261:	movsxd rax,DWORD PTR [rsi+0x3c]
  428265:	add    rsi,rax
  428268:	movzx  eax,WORD PTR [rsi+0x14]
  42826c:	lea    rdx,[rsi+rax*1+0x18]
  428271:	movzx  eax,WORD PTR [rsi+0x6]
  428275:	test   eax,eax
  428277:	je     0x42824a
  428279:	sub    eax,0x1
  42827c:	lea    rax,[rax+rax*4]
  428280:	lea    rax,[rdx+rax*8+0x28]
  428285:	test   BYTE PTR [rdx+0x27],0x20
  428289:	je     0x428294
  42828b:	test   rbx,rbx
  42828e:	je     0x4282b0
  428290:	sub    rbx,0x1
  428294:	add    rdx,0x28
  428298:	cmp    rdx,rax
  42829b:	jne    0x428285
  42829d:	xor    edi,edi
  42829f:	mov    rax,rdi
  4282a2:	add    rsp,0x20
  4282a6:	pop    rbx
  4282a7:	pop    rsi
  4282a8:	pop    rdi
  4282a9:	ret    
  4282aa:	nop    WORD PTR [rax+rax*1+0x0]
  4282b0:	mov    rdi,rdx
  4282b3:	mov    rax,rdi
  4282b6:	add    rsp,0x20
  4282ba:	pop    rbx
  4282bb:	pop    rsi
  4282bc:	pop    rdi
  4282bd:	ret    
  4282be:	xchg   ax,ax
  4282c0:	push   rsi
  4282c1:	push   rbx
  4282c2:	sub    rsp,0x28
  4282c6:	mov    rsi,QWORD PTR [rip+0x10663]        # 0x438930
  4282cd:	xor    ebx,ebx
  4282cf:	cmp    WORD PTR [rsi],0x5a4d
  4282d4:	je     0x4282e0
  4282d6:	mov    rax,rbx
  4282d9:	add    rsp,0x28
  4282dd:	pop    rbx
  4282de:	pop    rsi
  4282df:	ret    
  4282e0:	mov    rcx,rsi
  4282e3:	call   0x428070
  4282e8:	test   eax,eax
  4282ea:	cmovne rbx,rsi
  4282ee:	mov    rax,rbx
  4282f1:	add    rsp,0x28
  4282f5:	pop    rbx
  4282f6:	pop    rsi
  4282f7:	ret    
  4282f8:	nop    DWORD PTR [rax+rax*1+0x0]
  428300:	push   rsi
  428301:	push   rbx
  428302:	sub    rsp,0x28
  428306:	mov    rbx,QWORD PTR [rip+0x10623]        # 0x438930
  42830d:	xor    eax,eax
  42830f:	cmp    WORD PTR [rbx],0x5a4d
  428314:	je     0x428320
  428316:	add    rsp,0x28
  42831a:	pop    rbx
  42831b:	pop    rsi
  42831c:	ret    
  42831d:	nop    DWORD PTR [rax]
  428320:	mov    rsi,rcx
  428323:	mov    rcx,rbx
  428326:	call   0x428070
  42832b:	test   eax,eax
  42832d:	je     0x428316
  42832f:	sub    rsi,rbx
  428332:	mov    rcx,rbx
  428335:	mov    rdx,rsi
  428338:	call   0x4280b0
  42833d:	test   rax,rax
  428340:	je     0x428351
  428342:	mov    eax,DWORD PTR [rax+0x24]
  428345:	not    eax
  428347:	shr    eax,0x1f
  42834a:	add    rsp,0x28
  42834e:	pop    rbx
  42834f:	pop    rsi
  428350:	ret    
  428351:	xor    eax,eax
  428353:	jmp    0x428316
  428355:	nop
  428356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428360:	push   rbp
  428361:	push   rdi
  428362:	push   rsi
  428363:	push   rbx
  428364:	sub    rsp,0x28
  428368:	mov    rdi,QWORD PTR [rip+0x105c1]        # 0x438930
  42836f:	xor    ebp,ebp
  428371:	mov    esi,ecx
  428373:	cmp    WORD PTR [rdi],0x5a4d
  428378:	je     0x428390
  42837a:	mov    rax,rbp
  42837d:	add    rsp,0x28
  428381:	pop    rbx
  428382:	pop    rsi
  428383:	pop    rdi
  428384:	pop    rbp
  428385:	ret    
  428386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428390:	mov    rcx,rdi
  428393:	call   0x428070
  428398:	test   eax,eax
  42839a:	je     0x42837a
  42839c:	movsxd rax,DWORD PTR [rdi+0x3c]
  4283a0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  4283a7:	test   edx,edx
  4283a9:	je     0x42837a
  4283ab:	mov    ebx,edx
  4283ad:	mov    rcx,rdi
  4283b0:	mov    rdx,rbx
  4283b3:	call   0x4280b0
  4283b8:	test   rax,rax
  4283bb:	je     0x42837a
  4283bd:	add    rbx,rdi
  4283c0:	mov    rdx,rbx
  4283c3:	jne    0x4283d7
  4283c5:	jmp    0x42837a
  4283c7:	nop    WORD PTR [rax+rax*1+0x0]
  4283d0:	sub    esi,0x1
  4283d3:	add    rdx,0x14
  4283d7:	mov    ecx,DWORD PTR [rdx+0x4]
  4283da:	test   ecx,ecx
  4283dc:	jne    0x4283e5
  4283de:	mov    eax,DWORD PTR [rdx+0xc]
  4283e1:	test   eax,eax
  4283e3:	je     0x428400
  4283e5:	test   esi,esi
  4283e7:	jg     0x4283d0
  4283e9:	mov    ebp,DWORD PTR [rdx+0xc]
  4283ec:	add    rbp,rdi
  4283ef:	mov    rax,rbp
  4283f2:	add    rsp,0x28
  4283f6:	pop    rbx
  4283f7:	pop    rsi
  4283f8:	pop    rdi
  4283f9:	pop    rbp
  4283fa:	ret    
  4283fb:	nop    DWORD PTR [rax+rax*1+0x0]
  428400:	xor    ebp,ebp
  428402:	mov    rax,rbp
  428405:	add    rsp,0x28
  428409:	pop    rbx
  42840a:	pop    rsi
  42840b:	pop    rdi
  42840c:	pop    rbp
  42840d:	ret    
  42840e:	nop
  42840f:	nop
  428410:	push   rcx
  428411:	push   rax
  428412:	cmp    rax,0x1000
  428418:	lea    rcx,[rsp+0x18]
  42841d:	jb     0x428438
  42841f:	sub    rcx,0x1000
  428426:	or     QWORD PTR [rcx],0x0
  42842a:	sub    rax,0x1000
  428430:	cmp    rax,0x1000
  428436:	ja     0x42841f
  428438:	sub    rcx,rax
  42843b:	or     QWORD PTR [rcx],0x0
  42843f:	pop    rax
  428440:	pop    rcx
  428441:	ret    
  428442:	nop
  428443:	nop
  428444:	nop
  428445:	nop
  428446:	nop
  428447:	nop
  428448:	nop
  428449:	nop
  42844a:	nop
  42844b:	nop
  42844c:	nop
  42844d:	nop
  42844e:	nop
  42844f:	nop
  428450:	push   r13
  428452:	push   r12
  428454:	push   rbp
  428455:	push   rdi
  428456:	push   rsi
  428457:	push   rbx
  428458:	mov    r12d,edx
  42845b:	mov    ebp,r8d
  42845e:	mov    edi,edx
  428460:	sub    r12d,ecx
  428463:	sub    ebp,edx
  428465:	mov    eax,r12d
  428468:	cdq    
  428469:	idiv   ebp
  42846b:	test   edx,edx
  42846d:	mov    r13d,edx
  428470:	je     0x4284f5
  428476:	mov    eax,ebp
  428478:	jmp    0x428483
  42847a:	nop    WORD PTR [rax+rax*1+0x0]
  428480:	mov    r13d,edx
  428483:	cdq    
  428484:	idiv   r13d
  428487:	mov    eax,r13d
  42848a:	test   edx,edx
  42848c:	jne    0x428480
  42848e:	mov    eax,r8d
  428491:	sub    eax,ecx
  428493:	cdq    
  428494:	idiv   r13d
  428497:	test   r13d,r13d
  42849a:	jle    0x4284ec
  42849c:	movsxd rdx,edi
  42849f:	xor    esi,esi
  4284a1:	lea    rdx,[r9+rdx*8]
  4284a5:	test   eax,eax
  4284a7:	lea    ecx,[rdi+rsi*1]
  4284aa:	jle    0x4284e3
  4284ac:	mov    rbx,QWORD PTR [rdx+rsi*8]
  4284b0:	xor    r10d,r10d
  4284b3:	mov    r11d,ecx
  4284b6:	lea    r8d,[rcx+rbp*1]
  4284ba:	sub    r11d,r12d
  4284bd:	cmp    edi,ecx
  4284bf:	mov    ecx,r11d
  4284c2:	cmovg  ecx,r8d
  4284c6:	add    r10d,0x1
  4284ca:	movsxd r11,ecx
  4284cd:	cmp    r10d,eax
  4284d0:	lea    r8,[r9+r11*8]
  4284d4:	mov    r11,QWORD PTR [r8]
  4284d7:	mov    QWORD PTR [r8],rbx
  4284da:	mov    QWORD PTR [rdx+rsi*8],r11
  4284de:	mov    rbx,r11
  4284e1:	jne    0x4284b3
  4284e3:	add    rsi,0x1
  4284e7:	cmp    r13d,esi
  4284ea:	jg     0x4284a5
  4284ec:	pop    rbx
  4284ed:	pop    rsi
  4284ee:	pop    rdi
  4284ef:	pop    rbp
  4284f0:	pop    r12
  4284f2:	pop    r13
  4284f4:	ret    
  4284f5:	mov    r13d,ebp
  4284f8:	jmp    0x42848e
  4284fa:	nop    WORD PTR [rax+rax*1+0x0]
  428500:	push   rdi
  428501:	push   rsi
  428502:	push   rbx
  428503:	sub    rsp,0x30
  428507:	mov    rax,QWORD PTR [rip+0x10432]        # 0x438940
  42850e:	mov    QWORD PTR [rsp+0x58],rdx
  428513:	mov    QWORD PTR [rsp+0x60],r8
  428518:	lea    rsi,[rsp+0x58]
  42851d:	mov    QWORD PTR [rsp+0x68],r9
  428522:	mov    rbx,rcx
  428525:	mov    rax,QWORD PTR [rax]
  428528:	mov    QWORD PTR [rsp+0x28],rsi
  42852d:	mov    rax,QWORD PTR [rax]
  428530:	mov    rdi,QWORD PTR [rax]
  428533:	call   0x429680
  428538:	lea    rdx,[rip+0x10161]        # 0x4386a0
  42853f:	lea    rcx,[rax+0x60]
  428543:	mov    r8,rdi
  428546:	call   0x429598
  42854b:	test   rbx,rbx
  42854e:	je     0x428564
  428550:	call   0x429680
  428555:	lea    rcx,[rax+0x60]
  428559:	mov    r8,rsi
  42855c:	mov    rdx,rbx
  42855f:	call   0x429450
  428564:	call   0x429680
  428569:	lea    rdx,[rax+0x60]
  42856d:	mov    ecx,0xa
  428572:	call   0x429590
  428577:	nop
  428578:	add    rsp,0x30
  42857c:	pop    rbx
  42857d:	pop    rsi
  42857e:	pop    rdi
  42857f:	ret    
  428580:	push   r15
  428582:	push   r14
  428584:	push   r13
  428586:	push   r12
  428588:	push   rbp
  428589:	push   rdi
  42858a:	push   rsi
  42858b:	push   rbx
  42858c:	sub    rsp,0x48
  428590:	mov    eax,DWORD PTR [rip+0x2b16]        # 0x42b0ac
  428596:	mov    rbp,QWORD PTR [rip+0x2b03]        # 0x42b0a0
  42859d:	mov    QWORD PTR [rsp+0x90],rcx
  4285a5:	mov    QWORD PTR [rsp+0x98],rdx
  4285ad:	mov    edx,0x3d
  4285b2:	mov    r14,r8
  4285b5:	mov    QWORD PTR [rsp+0xa8],r9
  4285bd:	mov    r13d,DWORD PTR [rsp+0xb0]
  4285c5:	mov    DWORD PTR [rsp+0x38],eax
  4285c9:	mov    rcx,rbp
  4285cc:	add    eax,0x1
  4285cf:	mov    DWORD PTR [rsp+0x3c],eax
  4285d3:	mov    DWORD PTR [rip+0x2ad3],eax        # 0x42b0ac
  4285d9:	call   0x4294b8
  4285de:	test   rax,rax
  4285e1:	mov    QWORD PTR [rsp+0x30],rax
  4285e6:	je     0x4287c4
  4285ec:	mov    rdi,rax
  4285ef:	add    rax,0x1
  4285f3:	sub    rdi,rbp
  4285f6:	mov    QWORD PTR [rsp+0x30],rax
  4285fb:	mov    r15,QWORD PTR [r14]
  4285fe:	test   r15,r15
  428601:	je     0x42880b
  428607:	lea    rbx,[r14+0x20]
  42860b:	mov    r12d,0xffffffff
  428611:	mov    DWORD PTR [rsp+0x2c],0x0
  428619:	xor    esi,esi
  42861b:	jmp    0x428635
  42861d:	nop    DWORD PTR [rax]
  428620:	test   r13d,r13d
  428623:	je     0x42865e
  428625:	add    rbx,0x20
  428629:	mov    r15,QWORD PTR [rbx-0x20]
  42862d:	add    esi,0x1
  428630:	test   r15,r15
  428633:	je     0x4286a0
  428635:	mov    r8,rdi
  428638:	mov    rdx,r15
  42863b:	mov    rcx,rbp
  42863e:	call   0x429488
  428643:	test   eax,eax
  428645:	jne    0x428625
  428647:	mov    rcx,r15
  42864a:	call   0x429490
  42864f:	cmp    rax,rdi
  428652:	je     0x42874d
  428658:	cmp    rdi,0x1
  42865c:	je     0x428620
  42865e:	cmp    r12d,0xffffffff
  428662:	je     0x428700
  428668:	movsxd rax,r12d
  42866b:	shl    rax,0x5
  42866f:	add    rax,r14
  428672:	mov    edx,DWORD PTR [rax+0x8]
  428675:	cmp    DWORD PTR [rbx-0x18],edx
  428678:	je     0x428710
  42867e:	add    rbx,0x20
  428682:	mov    r15,QWORD PTR [rbx-0x20]
  428686:	add    esi,0x1
  428689:	mov    DWORD PTR [rsp+0x2c],0x1
  428691:	test   r15,r15
  428694:	jne    0x428635
  428696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4286a0:	mov    r9d,DWORD PTR [rsp+0x2c]
  4286a5:	test   r9d,r9d
  4286a8:	je     0x428740
  4286ae:	mov    r8d,DWORD PTR [rip+0x29fb]        # 0x42b0b0
  4286b5:	test   r8d,r8d
  4286b8:	je     0x4286d8
  4286ba:	mov    rax,QWORD PTR [rsp+0x98]
  4286c2:	cmp    BYTE PTR [rax],0x3a
  4286c5:	je     0x4286d8
  4286c7:	lea    rcx,[rip+0x10062]        # 0x438730
  4286ce:	mov    r8,rbp
  4286d1:	mov    edx,edi
  4286d3:	call   0x428500
  4286d8:	mov    DWORD PTR [rip+0x29c6],0x0        # 0x42b0a8
  4286e2:	mov    eax,0x3f
  4286e7:	add    rsp,0x48
  4286eb:	pop    rbx
  4286ec:	pop    rsi
  4286ed:	pop    rdi
  4286ee:	pop    rbp
  4286ef:	pop    r12
  4286f1:	pop    r13
  4286f3:	pop    r14
  4286f5:	pop    r15
  4286f7:	ret    
  4286f8:	nop    DWORD PTR [rax+rax*1+0x0]
  428700:	mov    r12d,esi
  428703:	jmp    0x428625
  428708:	nop    DWORD PTR [rax+rax*1+0x0]
  428710:	mov    rdx,QWORD PTR [rax+0x10]
  428714:	cmp    QWORD PTR [rbx-0x10],rdx
  428718:	jne    0x42867e
  42871e:	mov    eax,DWORD PTR [rax+0x18]
  428721:	cmp    DWORD PTR [rbx-0x8],eax
  428724:	mov    eax,0x1
  428729:	cmove  eax,DWORD PTR [rsp+0x2c]
  42872e:	mov    DWORD PTR [rsp+0x2c],eax
  428732:	jmp    0x428625
  428737:	nop    WORD PTR [rax+rax*1+0x0]
  428740:	cmp    r12d,0xffffffff
  428744:	je     0x42880b
  42874a:	mov    esi,r12d
  42874d:	movsxd rax,esi
  428750:	shl    rax,0x5
  428754:	add    r14,rax
  428757:	cmp    QWORD PTR [rsp+0x30],0x0
  42875d:	mov    eax,DWORD PTR [r14+0x8]
  428761:	setne  cl
  428764:	je     0x4287d4
  428766:	test   eax,eax
  428768:	jne    0x4287d4
  42876a:	mov    ecx,DWORD PTR [rip+0x2940]        # 0x42b0b0
  428770:	test   ecx,ecx
  428772:	jne    0x4287a4
  428774:	cmp    QWORD PTR [r14+0x10],0x0
  428779:	je     0x4288d4
  42877f:	mov    DWORD PTR [rip+0x291f],0x0        # 0x42b0a8
  428789:	mov    rax,QWORD PTR [rsp+0x98]
  428791:	cmp    BYTE PTR [rax],0x3a
  428794:	je     0x4288c1
  42879a:	mov    eax,0x3f
  42879f:	jmp    0x4286e7
  4287a4:	mov    rax,QWORD PTR [rsp+0x98]
  4287ac:	cmp    BYTE PTR [rax],0x3a
  4287af:	je     0x428774
  4287b1:	lea    rcx,[rip+0xff48]        # 0x438700
  4287b8:	mov    r8,rbp
  4287bb:	mov    edx,edi
  4287bd:	call   0x428500
  4287c2:	jmp    0x428774
  4287c4:	mov    rcx,rbp
  4287c7:	call   0x429490
  4287cc:	mov    rdi,rax
  4287cf:	jmp    0x4285fb
  4287d4:	lea    edx,[rax-0x1]
  4287d7:	cmp    edx,0x1
  4287da:	jbe    0x428847
  4287dc:	cmp    QWORD PTR [rsp+0xa8],0x0
  4287e5:	je     0x4287f1
  4287e7:	mov    rax,QWORD PTR [rsp+0xa8]
  4287ef:	mov    DWORD PTR [rax],esi
  4287f1:	mov    rax,QWORD PTR [r14+0x10]
  4287f5:	test   rax,rax
  4287f8:	je     0x4288cb
  4287fe:	mov    edx,DWORD PTR [r14+0x18]
  428802:	mov    DWORD PTR [rax],edx
  428804:	xor    eax,eax
  428806:	jmp    0x4286e7
  42880b:	test   r13d,r13d
  42880e:	jne    0x428922
  428814:	mov    eax,DWORD PTR [rip+0x2896]        # 0x42b0b0
  42881a:	test   eax,eax
  42881c:	je     0x4286d8
  428822:	mov    rax,QWORD PTR [rsp+0x98]
  42882a:	cmp    BYTE PTR [rax],0x3a
  42882d:	je     0x4286d8
  428833:	lea    rcx,[rip+0xfe86]        # 0x4386c0
  42883a:	mov    rdx,rbp
  42883d:	call   0x428500
  428842:	jmp    0x4286d8
  428847:	test   cl,cl
  428849:	je     0x4288e3
  42884f:	mov    rdx,QWORD PTR [rsp+0x30]
  428854:	cmp    eax,0x1
  428857:	mov    QWORD PTR [rip+0x16732],rdx        # 0x43ef90
  42885e:	jne    0x4287dc
  428864:	mov    r15,QWORD PTR [rsp+0x30]
  428869:	test   r15,r15
  42886c:	jne    0x4287dc
  428872:	mov    edx,DWORD PTR [rip+0x2838]        # 0x42b0b0
  428878:	test   edx,edx
  42887a:	je     0x428898
  42887c:	mov    rax,QWORD PTR [rsp+0x98]
  428884:	cmp    BYTE PTR [rax],0x3a
  428887:	je     0x428898
  428889:	lea    rcx,[rip+0xfed0]        # 0x438760
  428890:	mov    rdx,rbp
  428893:	call   0x428500
  428898:	cmp    QWORD PTR [r14+0x10],0x0
  42889d:	je     0x428916
  42889f:	mov    DWORD PTR [rip+0x27ff],0x0        # 0x42b0a8
  4288a9:	mov    rax,QWORD PTR [rsp+0x98]
  4288b1:	sub    DWORD PTR [rip+0x27f4],0x1        # 0x42b0ac
  4288b8:	cmp    BYTE PTR [rax],0x3a
  4288bb:	jne    0x42879a
  4288c1:	mov    eax,0x3a
  4288c6:	jmp    0x4286e7
  4288cb:	mov    eax,DWORD PTR [r14+0x18]
  4288cf:	jmp    0x4286e7
  4288d4:	mov    eax,DWORD PTR [r14+0x18]
  4288d8:	mov    DWORD PTR [rip+0x27ca],eax        # 0x42b0a8
  4288de:	jmp    0x428789
  4288e3:	cmp    eax,0x1
  4288e6:	jne    0x4287dc
  4288ec:	mov    eax,DWORD PTR [rsp+0x38]
  4288f0:	mov    rdx,QWORD PTR [rsp+0x90]
  4288f8:	add    eax,0x2
  4288fb:	mov    DWORD PTR [rip+0x27ab],eax        # 0x42b0ac
  428901:	movsxd rax,DWORD PTR [rsp+0x3c]
  428906:	mov    r15,QWORD PTR [rdx+rax*8]
  42890a:	mov    QWORD PTR [rip+0x1667f],r15        # 0x43ef90
  428911:	jmp    0x428869
  428916:	mov    eax,DWORD PTR [r14+0x18]
  42891a:	mov    DWORD PTR [rip+0x2788],eax        # 0x42b0a8
  428920:	jmp    0x4288a9
  428922:	mov    eax,DWORD PTR [rsp+0x38]
  428926:	mov    DWORD PTR [rip+0x2780],eax        # 0x42b0ac
  42892c:	mov    eax,0xffffffff
  428931:	jmp    0x4286e7
  428936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428940:	push   r15
  428942:	push   r14
  428944:	push   r13
  428946:	push   r12
  428948:	push   rbp
  428949:	push   rdi
  42894a:	push   rsi
  42894b:	push   rbx
  42894c:	sub    rsp,0x38
  428950:	test   r8,r8
  428953:	mov    edi,ecx
  428955:	mov    r15,rdx
  428958:	mov    QWORD PTR [rsp+0x90],r8
  428960:	mov    QWORD PTR [rsp+0x98],r9
  428968:	je     0x428c3e
  42896e:	mov    r9d,DWORD PTR [rip+0x2737]        # 0x42b0ac
  428975:	test   r9d,r9d
  428978:	je     0x428bd0
  42897e:	cmp    DWORD PTR [rip+0x270b],0xffffffff        # 0x42b090
  428985:	je     0x428b44
  42898b:	mov    edx,DWORD PTR [rip+0x16607]        # 0x43ef98
  428991:	test   edx,edx
  428993:	jne    0x428b44
  428999:	mov    rax,QWORD PTR [rsp+0x90]
  4289a1:	movzx  eax,BYTE PTR [rax]
  4289a4:	cmp    al,0x2d
  4289a6:	je     0x428b78
  4289ac:	cmp    al,0x2b
  4289ae:	je     0x428c54
  4289b4:	mov    r8d,DWORD PTR [rip+0x26d5]        # 0x42b090
  4289bb:	test   r8d,r8d
  4289be:	jne    0x428c54
  4289c4:	sub    eax,0x2b
  4289c7:	test   al,0xfd
  4289c9:	je     0x428b80
  4289cf:	test   edx,edx
  4289d1:	mov    QWORD PTR [rip+0x165b4],0x0        # 0x43ef90
  4289dc:	jne    0x428bb0
  4289e2:	mov    r14d,DWORD PTR [rsp+0xa8]
  4289ea:	mov    ebp,DWORD PTR [rsp+0xa8]
  4289f1:	and    r14d,0x2
  4289f5:	and    ebp,0x1
  4289f8:	jmp    0x428a7e
  4289fd:	nop    DWORD PTR [rax]
  428a00:	lea    rax,[rip+0xfcae]        # 0x4386b5
  428a07:	test   r14d,r14d
  428a0a:	mov    edx,r14d
  428a0d:	mov    QWORD PTR [rip+0x268c],rax        # 0x42b0a0
  428a14:	jne    0x428d20
  428a1a:	test   ebp,ebp
  428a1c:	je     0x428c3e
  428a22:	mov    r12d,DWORD PTR [rip+0x266f]        # 0x42b098
  428a29:	cmp    r12d,0xffffffff
  428a2d:	je     0x428ba0
  428a33:	mov    r13d,DWORD PTR [rip+0x265a]        # 0x42b094
  428a3a:	cmp    r13d,0xffffffff
  428a3e:	je     0x428a75
  428a40:	mov    edx,r13d
  428a43:	mov    r9,r15
  428a46:	mov    r8d,ebx
  428a49:	mov    ecx,r12d
  428a4c:	call   0x428450
  428a51:	mov    esi,DWORD PTR [rip+0x2655]        # 0x42b0ac
  428a57:	mov    eax,r12d
  428a5a:	mov    edx,DWORD PTR [rip+0x16538]        # 0x43ef98
  428a60:	sub    eax,r13d
  428a63:	mov    DWORD PTR [rip+0x2627],0xffffffff        # 0x42b094
  428a6d:	add    eax,esi
  428a6f:	mov    DWORD PTR [rip+0x2623],eax        # 0x42b098
  428a75:	add    esi,0x1
  428a78:	mov    DWORD PTR [rip+0x262e],esi        # 0x42b0ac
  428a7e:	test   edx,edx
  428a80:	jne    0x428a94
  428a82:	mov    rsi,QWORD PTR [rip+0x2617]        # 0x42b0a0
  428a89:	movzx  eax,BYTE PTR [rsi]
  428a8c:	test   al,al
  428a8e:	jne    0x428c8e
  428a94:	movsxd rbx,DWORD PTR [rip+0x2611]        # 0x42b0ac
  428a9b:	mov    DWORD PTR [rip+0x164f3],0x0        # 0x43ef98
  428aa5:	cmp    ebx,edi
  428aa7:	mov    esi,ebx
  428aa9:	jge    0x428bf0
  428aaf:	movsxd rax,ebx
  428ab2:	mov    r13,QWORD PTR [r15+rax*8]
  428ab6:	cmp    BYTE PTR [r13+0x0],0x2d
  428abb:	mov    QWORD PTR [rip+0x25de],r13        # 0x42b0a0
  428ac2:	jne    0x428a00
  428ac8:	movzx  eax,BYTE PTR [r13+0x1]
  428acd:	test   al,al
  428acf:	jne    0x428c61
  428ad5:	mov    rcx,QWORD PTR [rsp+0x90]
  428add:	mov    edx,0x2d
  428ae2:	call   0x4294b8
  428ae7:	test   rax,rax
  428aea:	je     0x428a00
  428af0:	cmp    DWORD PTR [rip+0x25a1],0xffffffff        # 0x42b098
  428af7:	mov    rsi,r13
  428afa:	je     0x428b14
  428afc:	cmp    DWORD PTR [rip+0x2591],0xffffffff        # 0x42b094
  428b03:	mov    eax,0x2d
  428b08:	jne    0x428c8e
  428b0e:	mov    DWORD PTR [rip+0x2580],ebx        # 0x42b094
  428b14:	cmp    QWORD PTR [rsp+0x98],0x0
  428b1d:	je     0x428f0c
  428b23:	cmp    rsi,QWORD PTR [r15+rbx*8]
  428b27:	mov    eax,0x2d
  428b2c:	je     0x428d5e
  428b32:	add    rsi,0x1
  428b36:	xor    edx,edx
  428b38:	mov    QWORD PTR [rip+0x2561],rsi        # 0x42b0a0
  428b3f:	jmp    0x428ce2
  428b44:	lea    rcx,[rip+0xfb5a]        # 0x4386a5
  428b4b:	call   0x429560
  428b50:	test   rax,rax
  428b53:	mov    edx,DWORD PTR [rip+0x1643f]        # 0x43ef98
  428b59:	setne  al
  428b5c:	movzx  eax,al
  428b5f:	mov    DWORD PTR [rip+0x252b],eax        # 0x42b090
  428b65:	mov    rax,QWORD PTR [rsp+0x90]
  428b6d:	movzx  eax,BYTE PTR [rax]
  428b70:	cmp    al,0x2d
  428b72:	jne    0x4289ac
  428b78:	or     DWORD PTR [rsp+0xa8],0x2
  428b80:	add    QWORD PTR [rsp+0x90],0x1
  428b89:	test   edx,edx
  428b8b:	mov    QWORD PTR [rip+0x163fa],0x0        # 0x43ef90
  428b96:	je     0x4289e2
  428b9c:	jmp    0x428bb0
  428b9e:	xchg   ax,ax
  428ba0:	mov    DWORD PTR [rip+0x24f2],ebx        # 0x42b098
  428ba6:	jmp    0x428a75
  428bab:	nop    DWORD PTR [rax+rax*1+0x0]
  428bb0:	mov    DWORD PTR [rip+0x24da],0xffffffff        # 0x42b094
  428bba:	mov    DWORD PTR [rip+0x24d4],0xffffffff        # 0x42b098
  428bc4:	jmp    0x4289e2
  428bc9:	nop    DWORD PTR [rax+0x0]
  428bd0:	mov    DWORD PTR [rip+0x163be],0x1        # 0x43ef98
  428bda:	mov    DWORD PTR [rip+0x24c8],0x1        # 0x42b0ac
  428be4:	jmp    0x42897e
  428be9:	nop    DWORD PTR [rax+0x0]
  428bf0:	mov    esi,DWORD PTR [rip+0x249e]        # 0x42b094
  428bf6:	lea    rax,[rip+0xfab8]        # 0x4386b5
  428bfd:	mov    QWORD PTR [rip+0x249c],rax        # 0x42b0a0
  428c04:	cmp    esi,0xffffffff
  428c07:	je     0x428d3a
  428c0d:	mov    edi,DWORD PTR [rip+0x2485]        # 0x42b098
  428c13:	mov    r9,r15
  428c16:	mov    r8d,ebx
  428c19:	mov    edx,esi
  428c1b:	mov    ecx,edi
  428c1d:	sub    edi,esi
  428c1f:	call   0x428450
  428c24:	add    DWORD PTR [rip+0x2482],edi        # 0x42b0ac
  428c2a:	mov    DWORD PTR [rip+0x2460],0xffffffff        # 0x42b094
  428c34:	mov    DWORD PTR [rip+0x245a],0xffffffff        # 0x42b098
  428c3e:	mov    eax,0xffffffff
  428c43:	add    rsp,0x38
  428c47:	pop    rbx
  428c48:	pop    rsi
  428c49:	pop    rdi
  428c4a:	pop    rbp
  428c4b:	pop    r12
  428c4d:	pop    r13
  428c4f:	pop    r14
  428c51:	pop    r15
  428c53:	ret    
  428c54:	and    DWORD PTR [rsp+0xa8],0xfffffffe
  428c5c:	jmp    0x4289c4
  428c61:	mov    ebp,DWORD PTR [rip+0x2431]        # 0x42b098
  428c67:	cmp    ebp,0xffffffff
  428c6a:	je     0x428c7b
  428c6c:	cmp    DWORD PTR [rip+0x2421],0xffffffff        # 0x42b094
  428c73:	jne    0x428c7b
  428c75:	mov    DWORD PTR [rip+0x2419],ebx        # 0x42b094
  428c7b:	lea    rsi,[r13+0x1]
  428c7f:	cmp    al,0x2d
  428c81:	mov    QWORD PTR [rip+0x2418],rsi        # 0x42b0a0
  428c88:	je     0x428e3f
  428c8e:	cmp    QWORD PTR [rsp+0x98],0x0
  428c97:	je     0x428d5e
  428c9d:	movsxd rdx,DWORD PTR [rip+0x2408]        # 0x42b0ac
  428ca4:	cmp    rsi,QWORD PTR [r15+rdx*8]
  428ca8:	je     0x428d5e
  428cae:	cmp    al,0x2d
  428cb0:	je     0x428b32
  428cb6:	test   BYTE PTR [rsp+0xa8],0x4
  428cbe:	je     0x428d5e
  428cc4:	xor    edx,edx
  428cc6:	cmp    al,0x3a
  428cc8:	je     0x428ce2
  428cca:	mov    rcx,QWORD PTR [rsp+0x90]
  428cd2:	movsx  edx,al
  428cd5:	call   0x4294b8
  428cda:	xor    edx,edx
  428cdc:	test   rax,rax
  428cdf:	setne  dl
  428ce2:	mov    DWORD PTR [rsp+0x20],edx
  428ce6:	mov    r9,QWORD PTR [rsp+0xa0]
  428cee:	mov    rcx,r15
  428cf1:	mov    r8,QWORD PTR [rsp+0x98]
  428cf9:	mov    rdx,QWORD PTR [rsp+0x90]
  428d01:	call   0x428580
  428d06:	cmp    eax,0xffffffff
  428d09:	je     0x428d54
  428d0b:	lea    rcx,[rip+0xf9a3]        # 0x4386b5
  428d12:	mov    QWORD PTR [rip+0x2387],rcx        # 0x42b0a0
  428d19:	jmp    0x428c43
  428d1e:	xchg   ax,ax
  428d20:	add    ebx,0x1
  428d23:	mov    QWORD PTR [rip+0x16266],r13        # 0x43ef90
  428d2a:	mov    eax,0x1
  428d2f:	mov    DWORD PTR [rip+0x2377],ebx        # 0x42b0ac
  428d35:	jmp    0x428c43
  428d3a:	mov    eax,DWORD PTR [rip+0x2358]        # 0x42b098
  428d40:	cmp    eax,0xffffffff
  428d43:	je     0x428c2a
  428d49:	mov    DWORD PTR [rip+0x235d],eax        # 0x42b0ac
  428d4f:	jmp    0x428c2a
  428d54:	mov    rsi,QWORD PTR [rip+0x2345]        # 0x42b0a0
  428d5b:	movzx  eax,BYTE PTR [rsi]
  428d5e:	lea    rbp,[rsi+0x1]
  428d62:	movsx  ebx,al
  428d65:	cmp    ebx,0x3a
  428d68:	mov    QWORD PTR [rip+0x2331],rbp        # 0x42b0a0
  428d6f:	je     0x428dd4
  428d71:	cmp    ebx,0x2d
  428d74:	je     0x428f17
  428d7a:	mov    rcx,QWORD PTR [rsp+0x90]
  428d82:	mov    edx,ebx
  428d84:	call   0x4294b8
  428d89:	test   rax,rax
  428d8c:	je     0x428dd4
  428d8e:	cmp    ebx,0x57
  428d91:	jne    0x428e36
  428d97:	cmp    QWORD PTR [rsp+0x98],0x0
  428da0:	je     0x428e36
  428da6:	movzx  edx,BYTE PTR [rax+0x1]
  428daa:	cmp    dl,0x3b
  428dad:	je     0x428e90
  428db3:	cmp    dl,0x3a
  428db6:	je     0x428f2b
  428dbc:	cmp    BYTE PTR [rsi+0x1],0x0
  428dc0:	mov    eax,ebx
  428dc2:	jne    0x428c43
  428dc8:	add    DWORD PTR [rip+0x22dd],0x1        # 0x42b0ac
  428dcf:	jmp    0x428c43
  428dd4:	cmp    BYTE PTR [rsi+0x1],0x0
  428dd8:	jne    0x428de1
  428dda:	add    DWORD PTR [rip+0x22cb],0x1        # 0x42b0ac
  428de1:	mov    ecx,DWORD PTR [rip+0x22c9]        # 0x42b0b0
  428de7:	test   ecx,ecx
  428de9:	je     0x428e06
  428deb:	mov    rax,QWORD PTR [rsp+0x90]
  428df3:	cmp    BYTE PTR [rax],0x3a
  428df6:	je     0x428e06
  428df8:	lea    rcx,[rip+0xf8e1]        # 0x4386e0
  428dff:	mov    edx,ebx
  428e01:	call   0x428500
  428e06:	mov    DWORD PTR [rip+0x229c],ebx        # 0x42b0a8
  428e0c:	mov    eax,0x3f
  428e11:	jmp    0x428c43
  428e16:	mov    rcx,QWORD PTR [rsp+0x90]
  428e1e:	mov    edx,0x2d
  428e23:	call   0x4294b8
  428e28:	test   rax,rax
  428e2b:	je     0x428c3e
  428e31:	mov    ebx,0x2d
  428e36:	movzx  edx,BYTE PTR [rax+0x1]
  428e3a:	jmp    0x428db3
  428e3f:	cmp    BYTE PTR [r13+0x2],0x0
  428e44:	jne    0x428b14
  428e4a:	mov    esi,DWORD PTR [rip+0x2244]        # 0x42b094
  428e50:	lea    r8d,[rbx+0x1]
  428e54:	lea    rax,[rip+0xf85a]        # 0x4386b5
  428e5b:	mov    DWORD PTR [rip+0x224a],r8d        # 0x42b0ac
  428e62:	mov    QWORD PTR [rip+0x2237],rax        # 0x42b0a0
  428e69:	cmp    esi,0xffffffff
  428e6c:	je     0x428c2a
  428e72:	mov    ecx,ebp
  428e74:	mov    r9,r15
  428e77:	mov    edx,esi
  428e79:	call   0x428450
  428e7e:	sub    ebp,esi
  428e80:	add    DWORD PTR [rip+0x2226],ebp        # 0x42b0ac
  428e86:	jmp    0x428c2a
  428e8b:	nop    DWORD PTR [rax+rax*1+0x0]
  428e90:	cmp    BYTE PTR [rsi+0x1],0x0
  428e94:	jne    0x428fe5
  428e9a:	mov    eax,DWORD PTR [rip+0x220c]        # 0x42b0ac
  428ea0:	add    eax,0x1
  428ea3:	cmp    edi,eax
  428ea5:	mov    DWORD PTR [rip+0x2201],eax        # 0x42b0ac
  428eab:	jg     0x428fd8
  428eb1:	mov    edx,DWORD PTR [rip+0x21f9]        # 0x42b0b0
  428eb7:	lea    rax,[rip+0xf7f7]        # 0x4386b5
  428ebe:	mov    QWORD PTR [rip+0x21db],rax        # 0x42b0a0
  428ec5:	test   edx,edx
  428ec7:	je     0x428ee7
  428ec9:	mov    rax,QWORD PTR [rsp+0x90]
  428ed1:	cmp    BYTE PTR [rax],0x3a
  428ed4:	je     0x428ee7
  428ed6:	lea    rcx,[rip+0xf8c3]        # 0x4387a0
  428edd:	mov    edx,0x57
  428ee2:	call   0x428500
  428ee7:	mov    rax,QWORD PTR [rsp+0x90]
  428eef:	mov    DWORD PTR [rip+0x21af],0x57        # 0x42b0a8
  428ef9:	cmp    BYTE PTR [rax],0x3a
  428efc:	je     0x428fce
  428f02:	mov    eax,0x3f
  428f07:	jmp    0x428c43
  428f0c:	lea    rbp,[rsi+0x1]
  428f10:	mov    QWORD PTR [rip+0x2189],rbp        # 0x42b0a0
  428f17:	cmp    BYTE PTR [rsi+0x1],0x0
  428f1b:	je     0x428e16
  428f21:	mov    ebx,0x2d
  428f26:	jmp    0x428de1
  428f2b:	mov    QWORD PTR [rip+0x1605a],0x0        # 0x43ef90
  428f36:	cmp    BYTE PTR [rsi+0x1],0x0
  428f3a:	je     0x428f67
  428f3c:	mov    eax,DWORD PTR [rip+0x216a]        # 0x42b0ac
  428f42:	mov    QWORD PTR [rip+0x16047],rbp        # 0x43ef90
  428f49:	lea    rcx,[rip+0xf765]        # 0x4386b5
  428f50:	add    eax,0x1
  428f53:	mov    DWORD PTR [rip+0x2153],eax        # 0x42b0ac
  428f59:	mov    eax,ebx
  428f5b:	mov    QWORD PTR [rip+0x213e],rcx        # 0x42b0a0
  428f62:	jmp    0x428c43
  428f67:	cmp    BYTE PTR [rax+0x2],0x3a
  428f6b:	mov    eax,DWORD PTR [rip+0x213b]        # 0x42b0ac
  428f71:	je     0x428f49
  428f73:	add    eax,0x1
  428f76:	cmp    edi,eax
  428f78:	mov    DWORD PTR [rip+0x212e],eax        # 0x42b0ac
  428f7e:	jg     0x429012
  428f84:	lea    rax,[rip+0xf72a]        # 0x4386b5
  428f8b:	mov    QWORD PTR [rip+0x210e],rax        # 0x42b0a0
  428f92:	mov    eax,DWORD PTR [rip+0x2118]        # 0x42b0b0
  428f98:	test   eax,eax
  428f9a:	je     0x428fb7
  428f9c:	mov    rax,QWORD PTR [rsp+0x90]
  428fa4:	cmp    BYTE PTR [rax],0x3a
  428fa7:	je     0x428fb7
  428fa9:	lea    rcx,[rip+0xf7f0]        # 0x4387a0
  428fb0:	mov    edx,ebx
  428fb2:	call   0x428500
  428fb7:	mov    rax,QWORD PTR [rsp+0x90]
  428fbf:	mov    DWORD PTR [rip+0x20e3],ebx        # 0x42b0a8
  428fc5:	cmp    BYTE PTR [rax],0x3a
  428fc8:	jne    0x428f02
  428fce:	mov    eax,0x3a
  428fd3:	jmp    0x428c43
  428fd8:	cdqe   
  428fda:	mov    rax,QWORD PTR [r15+rax*8]
  428fde:	mov    QWORD PTR [rip+0x20bb],rax        # 0x42b0a0
  428fe5:	mov    r9,QWORD PTR [rsp+0xa0]
  428fed:	mov    r8,QWORD PTR [rsp+0x98]
  428ff5:	mov    rcx,r15
  428ff8:	mov    rdx,QWORD PTR [rsp+0x90]
  429000:	mov    DWORD PTR [rsp+0x20],0x0
  429008:	call   0x428580
  42900d:	jmp    0x428d0b
  429012:	movsxd rdx,eax
  429015:	mov    rdx,QWORD PTR [r15+rdx*8]
  429019:	mov    QWORD PTR [rip+0x15f70],rdx        # 0x43ef90
  429020:	jmp    0x428f49
  429025:	nop
  429026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429030:	sub    rsp,0x38
  429034:	xor    r9d,r9d
  429037:	mov    DWORD PTR [rsp+0x28],0x0
  42903f:	mov    QWORD PTR [rsp+0x20],0x0
  429048:	call   0x428940
  42904d:	add    rsp,0x38
  429051:	ret    
  429052:	nop    DWORD PTR [rax+0x0]
  429056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429060:	sub    rsp,0x38
  429064:	mov    rax,QWORD PTR [rsp+0x60]
  429069:	mov    DWORD PTR [rsp+0x28],0x1
  429071:	mov    QWORD PTR [rsp+0x20],rax
  429076:	call   0x428940
  42907b:	add    rsp,0x38
  42907f:	ret    
  429080:	sub    rsp,0x38
  429084:	mov    rax,QWORD PTR [rsp+0x60]
  429089:	mov    DWORD PTR [rsp+0x28],0x5
  429091:	mov    QWORD PTR [rsp+0x20],rax
  429096:	call   0x428940
  42909b:	add    rsp,0x38
  42909f:	ret    
  4290a0:	push   r12
  4290a2:	push   rbp
  4290a3:	push   rdi
  4290a4:	push   rsi
  4290a5:	push   rbx
  4290a6:	sub    rsp,0x250
  4290ad:	mov    rbx,rdx
  4290b0:	mov    rsi,rcx
  4290b3:	mov    ecx,0x4000
  4290b8:	mov    r12d,r8d
  4290bb:	call   0x429538
  4290c0:	test   rbx,rbx
  4290c3:	mov    rbp,rax
  4290c6:	je     0x429190
  4290cc:	cmp    WORD PTR [rbx],0x0
  4290d0:	lea    rax,[rip+0xf709]        # 0x4387e0
  4290d7:	cmove  rbx,rax
  4290db:	test   rsi,rsi
  4290de:	je     0x429181
  4290e4:	cmp    WORD PTR [rsi],0x0
  4290e8:	lea    rax,[rip+0xf705]        # 0x4387f4
  4290ef:	cmove  rsi,rax
  4290f3:	lea    rdi,[rsp+0x40]
  4290f8:	xor    ecx,ecx
  4290fa:	mov    r8d,0x104
  429100:	mov    rdx,rdi
  429103:	call   QWORD PTR [rip+0x1680b]        # 0x43f914
  429109:	test   eax,eax
  42910b:	je     0x429170
  42910d:	lea    r8,[rip+0xf6e4]        # 0x4387f8
  429114:	mov    QWORD PTR [rsp+0x30],rsi
  429119:	mov    DWORD PTR [rsp+0x28],r12d
  42911e:	mov    QWORD PTR [rsp+0x20],rbx
  429123:	mov    r9,rdi
  429126:	mov    edx,0x1fff
  42912b:	mov    rcx,rbp
  42912e:	call   0x429618
  429133:	mov    rax,QWORD PTR [rip+0xf936]        # 0x438a70
  42913a:	mov    eax,DWORD PTR [rax]
  42913c:	test   eax,eax
  42913e:	je     0x4291b5
  429140:	xor    ecx,ecx
  429142:	mov    r9d,0x12012
  429148:	lea    r8,[rip+0xf741]        # 0x438890
  42914f:	mov    rdx,rbp
  429152:	call   QWORD PTR [rip+0x16b54]        # 0x43fcac
  429158:	cmp    eax,0x3
  42915b:	je     0x4291a1
  42915d:	cmp    eax,0x5
  429160:	jne    0x42919c
  429162:	add    rsp,0x250
  429169:	pop    rbx
  42916a:	pop    rsi
  42916b:	pop    rdi
  42916c:	pop    rbp
  42916d:	pop    r12
  42916f:	ret    
  429170:	lea    rdx,[rip+0xf669]        # 0x4387e0
  429177:	mov    rcx,rdi
  42917a:	call   0x429448
  42917f:	jmp    0x42910d
  429181:	lea    rsi,[rip+0xf66c]        # 0x4387f4
  429188:	jmp    0x4290f3
  42918d:	nop    DWORD PTR [rax]
  429190:	lea    rbx,[rip+0xf649]        # 0x4387e0
  429197:	jmp    0x4290db
  42919c:	call   0x4295e0
  4291a1:	mov    ecx,0x16
  4291a6:	call   0x4294f8
  4291ab:	mov    ecx,0x3
  4291b0:	call   0x429648
  4291b5:	call   0x429680
  4291ba:	lea    rdx,[rip+0xf6bf]        # 0x438880
  4291c1:	lea    rcx,[rax+0x60]
  4291c5:	mov    r8,rbp
  4291c8:	call   0x429578
  4291cd:	call   0x4295e0
  4291d2:	nop
  4291d3:	nop    DWORD PTR [rax]
  4291d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4291e0:	push   rbp
  4291e1:	push   rdi
  4291e2:	push   rsi
  4291e3:	push   rbx
  4291e4:	sub    rsp,0x38
  4291e8:	mov    rdi,rdx
  4291eb:	mov    DWORD PTR [rsp+0x2c],r8d
  4291f0:	mov    rbp,rcx
  4291f3:	call   0x429490
  4291f8:	lea    rcx,[rax+rax*1+0x2]
  4291fd:	call   0x429538
  429202:	mov    rcx,rdi
  429205:	mov    rsi,rax
  429208:	call   0x429490
  42920d:	lea    rcx,[rax+rax*1+0x2]
  429212:	call   0x429538
  429217:	movzx  r9d,BYTE PTR [rbp+0x0]
  42921c:	xor    r10d,r10d
  42921f:	mov    rbx,rax
  429222:	mov    r8d,DWORD PTR [rsp+0x2c]
  429227:	test   r9b,r9b
  42922a:	je     0x429247
  42922c:	nop    DWORD PTR [rax+0x0]
  429230:	mov    WORD PTR [rsi+r10*2],r9w
  429235:	add    r10,0x1
  429239:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  42923f:	test   r9b,r9b
  429242:	jne    0x429230
  429244:	add    r10,r10
  429247:	movzx  r9d,BYTE PTR [rdi]
  42924b:	xor    edx,edx
  42924d:	mov    WORD PTR [rsi+r10*1],dx
  429252:	xor    r10d,r10d
  429255:	test   r9b,r9b
  429258:	je     0x429276
  42925a:	nop    WORD PTR [rax+rax*1+0x0]
  429260:	mov    WORD PTR [rbx+r10*2],r9w
  429265:	add    r10,0x1
  429269:	movzx  r9d,BYTE PTR [rdi+r10*1]
  42926e:	test   r9b,r9b
  429271:	jne    0x429260
  429273:	add    r10,r10
  429276:	xor    eax,eax
  429278:	mov    rdx,rbx
  42927b:	mov    rcx,rsi
  42927e:	mov    WORD PTR [rbx+r10*1],ax
  429283:	call   0x4290a0
  429288:	mov    rcx,rsi
  42928b:	call   0x429580
  429290:	mov    rcx,rbx
  429293:	add    rsp,0x38
  429297:	pop    rbx
  429298:	pop    rsi
  429299:	pop    rdi
  42929a:	pop    rbp
  42929b:	jmp    0x429580
  4292a0:	push   rbx
  4292a1:	test   rcx,rcx
  4292a4:	je     0x429319
  4292a6:	lea    rax,[rcx+0x1]
  4292aa:	mov    r9,rdx
  4292ad:	movsx  r11d,BYTE PTR [rax-0x1]
  4292b2:	jmp    0x4292b9
  4292b4:	cmp    r11d,r10d
  4292b7:	je     0x429303
  4292b9:	add    r9,0x1
  4292bd:	movsx  r10d,BYTE PTR [r9-0x1]
  4292c2:	test   r10d,r10d
  4292c5:	jne    0x4292b4
  4292c7:	test   r11d,r11d
  4292ca:	je     0x429325
  4292cc:	lea    rbx,[rax+0x1]
  4292d0:	mov    r9,rdx
  4292d3:	movsx  r11d,BYTE PTR [rbx-0x1]
  4292d8:	jmp    0x4292e5
  4292da:	nop    WORD PTR [rax+rax*1+0x0]
  4292e0:	test   r10d,r10d
  4292e3:	je     0x429310
  4292e5:	add    r9,0x1
  4292e9:	movsx  r10d,BYTE PTR [r9-0x1]
  4292ee:	cmp    r10d,r11d
  4292f1:	jne    0x4292e0
  4292f3:	test   r11d,r11d
  4292f6:	je     0x429315
  4292f8:	mov    BYTE PTR [rax],0x0
  4292fb:	mov    rax,rcx
  4292fe:	mov    QWORD PTR [r8],rbx
  429301:	pop    rbx
  429302:	ret    
  429303:	mov    rcx,rax
  429306:	jmp    0x4292a6
  429308:	nop    DWORD PTR [rax+rax*1+0x0]
  429310:	mov    rax,rbx
  429313:	jmp    0x4292cc
  429315:	xor    ebx,ebx
  429317:	jmp    0x4292fb
  429319:	mov    rcx,QWORD PTR [r8]
  42931c:	test   rcx,rcx
  42931f:	jne    0x4292a6
  429321:	xor    eax,eax
  429323:	pop    rbx
  429324:	ret    
  429325:	xor    eax,eax
  429327:	mov    QWORD PTR [r8],0x0
  42932e:	pop    rbx
  42932f:	ret    
  429330:	push   r12
  429332:	push   rbp
  429333:	push   rdi
  429334:	push   rsi
  429335:	push   rbx
  429336:	sub    rsp,0x30
  42933a:	lea    rsi,[rsp+0x70]
  42933f:	mov    QWORD PTR [rsp+0x70],r8
  429344:	mov    QWORD PTR [rsp+0x78],r9
  429349:	mov    r8,rdx
  42934c:	mov    r12,rcx
  42934f:	mov    rbp,rdx
  429352:	xor    ecx,ecx
  429354:	xor    edx,edx
  429356:	mov    r9,rsi
  429359:	mov    QWORD PTR [rsp+0x28],rsi
  42935e:	call   0x4295e8
  429363:	test   eax,eax
  429365:	mov    ebx,eax
  429367:	js     0x42939c
  429369:	lea    edi,[rax+0x1]
  42936c:	movsxd rdi,edi
  42936f:	mov    rcx,rdi
  429372:	call   0x429538
  429377:	test   rax,rax
  42937a:	mov    QWORD PTR [r12],rax
  42937e:	je     0x4293b0
  429380:	mov    rdx,rdi
  429383:	mov    r9,rsi
  429386:	mov    r8,rbp
  429389:	mov    rcx,rax
  42938c:	call   0x4295e8
  429391:	mov    rdx,QWORD PTR [r12]
  429395:	movsxd rax,ebx
  429398:	mov    BYTE PTR [rdx+rax*1],0x0
  42939c:	mov    eax,ebx
  42939e:	add    rsp,0x30
  4293a2:	pop    rbx
  4293a3:	pop    rsi
  4293a4:	pop    rdi
  4293a5:	pop    rbp
  4293a6:	pop    r12
  4293a8:	ret    
  4293a9:	nop    DWORD PTR [rax+0x0]
  4293b0:	mov    ebx,0xffffffff
  4293b5:	jmp    0x42939c
  4293b7:	nop
  4293b8:	nop
  4293b9:	nop
  4293ba:	nop
  4293bb:	nop
  4293bc:	nop
  4293bd:	nop
  4293be:	nop
  4293bf:	nop
  4293c0:	push   r12
  4293c2:	push   rbp
  4293c3:	push   rdi
  4293c4:	push   rsi
  4293c5:	push   rbx
  4293c6:	sub    rsp,0x20
  4293ca:	mov    r9,r8
  4293cd:	mov    r12,rcx
  4293d0:	mov    rdi,rdx
  4293d3:	xor    ecx,ecx
  4293d5:	mov    rbp,r8
  4293d8:	mov    r8,rdx
  4293db:	xor    edx,edx
  4293dd:	call   0x4295e8
  4293e2:	test   eax,eax
  4293e4:	mov    ebx,eax
  4293e6:	js     0x429430
  4293e8:	lea    esi,[rax+0x1]
  4293eb:	movsxd rsi,esi
  4293ee:	mov    rcx,rsi
  4293f1:	call   0x429538
  4293f6:	test   rax,rax
  4293f9:	mov    QWORD PTR [r12],rax
  4293fd:	je     0x429430
  4293ff:	mov    rdx,rsi
  429402:	mov    r9,rbp
  429405:	mov    r8,rdi
  429408:	mov    rcx,rax
  42940b:	call   0x4295e8
  429410:	mov    rdx,QWORD PTR [r12]
  429414:	movsxd rax,ebx
  429417:	mov    BYTE PTR [rdx+rax*1],0x0
  42941b:	mov    eax,ebx
  42941d:	add    rsp,0x20
  429421:	pop    rbx
  429422:	pop    rsi
  429423:	pop    rdi
  429424:	pop    rbp
  429425:	pop    r12
  429427:	ret    
  429428:	nop    DWORD PTR [rax+rax*1+0x0]
  429430:	mov    eax,0xffffffff
  429435:	jmp    0x42941d
  429437:	nop
  429438:	nop
  429439:	nop
  42943a:	nop
  42943b:	nop
  42943c:	nop
  42943d:	nop
  42943e:	nop
  42943f:	nop
  429440:	jmp    QWORD PTR [rip+0x16816]        # 0x43fc5c
  429446:	nop
  429447:	nop
  429448:	jmp    QWORD PTR [rip+0x16806]        # 0x43fc54
  42944e:	nop
  42944f:	nop
  429450:	jmp    QWORD PTR [rip+0x167f6]        # 0x43fc4c
  429456:	nop
  429457:	nop
  429458:	jmp    QWORD PTR [rip+0x167e6]        # 0x43fc44
  42945e:	nop
  42945f:	nop
  429460:	jmp    QWORD PTR [rip+0x167d6]        # 0x43fc3c
  429466:	nop
  429467:	nop
  429468:	jmp    QWORD PTR [rip+0x167c6]        # 0x43fc34
  42946e:	nop
  42946f:	nop
  429470:	jmp    QWORD PTR [rip+0x167b6]        # 0x43fc2c
  429476:	nop
  429477:	nop
  429478:	jmp    QWORD PTR [rip+0x167a6]        # 0x43fc24
  42947e:	nop
  42947f:	nop
  429480:	jmp    QWORD PTR [rip+0x16796]        # 0x43fc1c
  429486:	nop
  429487:	nop
  429488:	jmp    QWORD PTR [rip+0x16786]        # 0x43fc14
  42948e:	nop
  42948f:	nop
  429490:	jmp    QWORD PTR [rip+0x16776]        # 0x43fc0c
  429496:	nop
  429497:	nop
  429498:	jmp    QWORD PTR [rip+0x16766]        # 0x43fc04
  42949e:	nop
  42949f:	nop
  4294a0:	jmp    QWORD PTR [rip+0x16756]        # 0x43fbfc
  4294a6:	nop
  4294a7:	nop
  4294a8:	jmp    QWORD PTR [rip+0x16746]        # 0x43fbf4
  4294ae:	nop
  4294af:	nop
  4294b0:	jmp    QWORD PTR [rip+0x16736]        # 0x43fbec
  4294b6:	nop
  4294b7:	nop
  4294b8:	jmp    QWORD PTR [rip+0x16726]        # 0x43fbe4
  4294be:	nop
  4294bf:	nop
  4294c0:	jmp    QWORD PTR [rip+0x16716]        # 0x43fbdc
  4294c6:	nop
  4294c7:	nop
  4294c8:	jmp    QWORD PTR [rip+0x16706]        # 0x43fbd4
  4294ce:	nop
  4294cf:	nop
  4294d0:	jmp    QWORD PTR [rip+0x166f6]        # 0x43fbcc
  4294d6:	nop
  4294d7:	nop
  4294d8:	jmp    QWORD PTR [rip+0x166e6]        # 0x43fbc4
  4294de:	nop
  4294df:	nop
  4294e0:	jmp    QWORD PTR [rip+0x166d6]        # 0x43fbbc
  4294e6:	nop
  4294e7:	nop
  4294e8:	jmp    QWORD PTR [rip+0x166c6]        # 0x43fbb4
  4294ee:	nop
  4294ef:	nop
  4294f0:	jmp    QWORD PTR [rip+0x166b6]        # 0x43fbac
  4294f6:	nop
  4294f7:	nop
  4294f8:	jmp    QWORD PTR [rip+0x166a6]        # 0x43fba4
  4294fe:	nop
  4294ff:	nop
  429500:	jmp    QWORD PTR [rip+0x16696]        # 0x43fb9c
  429506:	nop
  429507:	nop
  429508:	jmp    QWORD PTR [rip+0x16686]        # 0x43fb94
  42950e:	nop
  42950f:	nop
  429510:	jmp    QWORD PTR [rip+0x16676]        # 0x43fb8c
  429516:	nop
  429517:	nop
  429518:	jmp    QWORD PTR [rip+0x16666]        # 0x43fb84
  42951e:	nop
  42951f:	nop
  429520:	jmp    QWORD PTR [rip+0x16656]        # 0x43fb7c
  429526:	nop
  429527:	nop
  429528:	jmp    QWORD PTR [rip+0x16646]        # 0x43fb74
  42952e:	nop
  42952f:	nop
  429530:	jmp    QWORD PTR [rip+0x16636]        # 0x43fb6c
  429536:	nop
  429537:	nop
  429538:	jmp    QWORD PTR [rip+0x16626]        # 0x43fb64
  42953e:	nop
  42953f:	nop
  429540:	jmp    QWORD PTR [rip+0x16616]        # 0x43fb5c
  429546:	nop
  429547:	nop
  429548:	jmp    QWORD PTR [rip+0x16606]        # 0x43fb54
  42954e:	nop
  42954f:	nop
  429550:	jmp    QWORD PTR [rip+0x165f6]        # 0x43fb4c
  429556:	nop
  429557:	nop
  429558:	jmp    QWORD PTR [rip+0x165e6]        # 0x43fb44
  42955e:	nop
  42955f:	nop
  429560:	jmp    QWORD PTR [rip+0x165d6]        # 0x43fb3c
  429566:	nop
  429567:	nop
  429568:	jmp    QWORD PTR [rip+0x165c6]        # 0x43fb34
  42956e:	nop
  42956f:	nop
  429570:	jmp    QWORD PTR [rip+0x165b6]        # 0x43fb2c
  429576:	nop
  429577:	nop
  429578:	jmp    QWORD PTR [rip+0x165a6]        # 0x43fb24
  42957e:	nop
  42957f:	nop
  429580:	jmp    QWORD PTR [rip+0x16596]        # 0x43fb1c
  429586:	nop
  429587:	nop
  429588:	jmp    QWORD PTR [rip+0x16586]        # 0x43fb14
  42958e:	nop
  42958f:	nop
  429590:	jmp    QWORD PTR [rip+0x16576]        # 0x43fb0c
  429596:	nop
  429597:	nop
  429598:	jmp    QWORD PTR [rip+0x16566]        # 0x43fb04
  42959e:	nop
  42959f:	nop
  4295a0:	jmp    QWORD PTR [rip+0x16556]        # 0x43fafc
  4295a6:	nop
  4295a7:	nop
  4295a8:	jmp    QWORD PTR [rip+0x16546]        # 0x43faf4
  4295ae:	nop
  4295af:	nop
  4295b0:	jmp    QWORD PTR [rip+0x16536]        # 0x43faec
  4295b6:	nop
  4295b7:	nop
  4295b8:	jmp    QWORD PTR [rip+0x16526]        # 0x43fae4
  4295be:	nop
  4295bf:	nop
  4295c0:	jmp    QWORD PTR [rip+0x16516]        # 0x43fadc
  4295c6:	nop
  4295c7:	nop
  4295c8:	jmp    QWORD PTR [rip+0x16506]        # 0x43fad4
  4295ce:	nop
  4295cf:	nop
  4295d0:	jmp    QWORD PTR [rip+0x164f6]        # 0x43facc
  4295d6:	nop
  4295d7:	nop
  4295d8:	jmp    QWORD PTR [rip+0x164e6]        # 0x43fac4
  4295de:	nop
  4295df:	nop
  4295e0:	jmp    QWORD PTR [rip+0x164d6]        # 0x43fabc
  4295e6:	nop
  4295e7:	nop
  4295e8:	jmp    QWORD PTR [rip+0x164c6]        # 0x43fab4
  4295ee:	nop
  4295ef:	nop
  4295f0:	jmp    QWORD PTR [rip+0x164b6]        # 0x43faac
  4295f6:	nop
  4295f7:	nop
  4295f8:	jmp    QWORD PTR [rip+0x164a6]        # 0x43faa4
  4295fe:	nop
  4295ff:	nop
  429600:	jmp    QWORD PTR [rip+0x16496]        # 0x43fa9c
  429606:	nop
  429607:	nop
  429608:	jmp    QWORD PTR [rip+0x16486]        # 0x43fa94
  42960e:	nop
  42960f:	nop
  429610:	jmp    QWORD PTR [rip+0x16476]        # 0x43fa8c
  429616:	nop
  429617:	nop
  429618:	jmp    QWORD PTR [rip+0x16466]        # 0x43fa84
  42961e:	nop
  42961f:	nop
  429620:	jmp    QWORD PTR [rip+0x16456]        # 0x43fa7c
  429626:	nop
  429627:	nop
  429628:	jmp    QWORD PTR [rip+0x16446]        # 0x43fa74
  42962e:	nop
  42962f:	nop
  429630:	jmp    QWORD PTR [rip+0x16436]        # 0x43fa6c
  429636:	nop
  429637:	nop
  429638:	jmp    QWORD PTR [rip+0x16426]        # 0x43fa64
  42963e:	nop
  42963f:	nop
  429640:	jmp    QWORD PTR [rip+0x16416]        # 0x43fa5c
  429646:	nop
  429647:	nop
  429648:	jmp    QWORD PTR [rip+0x163fe]        # 0x43fa4c
  42964e:	nop
  42964f:	nop
  429650:	jmp    QWORD PTR [rip+0x163ee]        # 0x43fa44
  429656:	nop
  429657:	nop
  429658:	jmp    QWORD PTR [rip+0x163de]        # 0x43fa3c
  42965e:	nop
  42965f:	nop
  429660:	jmp    QWORD PTR [rip+0x163ce]        # 0x43fa34
  429666:	nop
  429667:	nop
  429668:	jmp    QWORD PTR [rip+0x163b6]        # 0x43fa24
  42966e:	nop
  42966f:	nop
  429670:	jmp    QWORD PTR [rip+0x163a6]        # 0x43fa1c
  429676:	nop
  429677:	nop
  429678:	jmp    QWORD PTR [rip+0x16396]        # 0x43fa14
  42967e:	nop
  42967f:	nop
  429680:	jmp    QWORD PTR [rip+0x16386]        # 0x43fa0c
  429686:	nop
  429687:	nop
  429688:	jmp    QWORD PTR [rip+0x1636e]        # 0x43f9fc
  42968e:	nop
  42968f:	nop
  429690:	jmp    QWORD PTR [rip+0x1635e]        # 0x43f9f4
  429696:	nop
  429697:	nop
  429698:	jmp    QWORD PTR [rip+0x16346]        # 0x43f9e4
  42969e:	nop
  42969f:	nop
  4296a0:	mov    rax,QWORD PTR [rip+0x15889]        # 0x43ef30
  4296a7:	ret    
  4296a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4296b0:	mov    rax,rcx
  4296b3:	xchg   QWORD PTR [rip+0x15876],rax        # 0x43ef30
  4296ba:	ret    
  4296bb:	nop
  4296bc:	nop
  4296bd:	nop
  4296be:	nop
  4296bf:	nop
  4296c0:	jmp    QWORD PTR [rip+0x165d6]        # 0x43fc9c
  4296c6:	nop
  4296c7:	nop
  4296c8:	jmp    QWORD PTR [rip+0x165c6]        # 0x43fc94
  4296ce:	nop
  4296cf:	nop
  4296d0:	jmp    QWORD PTR [rip+0x165b6]        # 0x43fc8c
  4296d6:	nop
  4296d7:	nop
  4296d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4296e0:	jmp    QWORD PTR [rip+0x165c6]        # 0x43fcac
  4296e6:	nop
  4296e7:	nop
  4296e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4296f0:	jmp    QWORD PTR [rip+0x162de]        # 0x43f9d4
  4296f6:	nop
  4296f7:	nop
  4296f8:	jmp    QWORD PTR [rip+0x162ce]        # 0x43f9cc
  4296fe:	nop
  4296ff:	nop
  429700:	jmp    QWORD PTR [rip+0x162be]        # 0x43f9c4
  429706:	nop
  429707:	nop
  429708:	jmp    QWORD PTR [rip+0x162ae]        # 0x43f9bc
  42970e:	nop
  42970f:	nop
  429710:	jmp    QWORD PTR [rip+0x1629e]        # 0x43f9b4
  429716:	nop
  429717:	nop
  429718:	jmp    QWORD PTR [rip+0x1628e]        # 0x43f9ac
  42971e:	nop
  42971f:	nop
  429720:	jmp    QWORD PTR [rip+0x1627e]        # 0x43f9a4
  429726:	nop
  429727:	nop
  429728:	jmp    QWORD PTR [rip+0x1626e]        # 0x43f99c
  42972e:	nop
  42972f:	nop
  429730:	jmp    QWORD PTR [rip+0x1625e]        # 0x43f994
  429736:	nop
  429737:	nop
  429738:	jmp    QWORD PTR [rip+0x1624e]        # 0x43f98c
  42973e:	nop
  42973f:	nop
  429740:	jmp    QWORD PTR [rip+0x1623e]        # 0x43f984
  429746:	nop
  429747:	nop
  429748:	jmp    QWORD PTR [rip+0x1622e]        # 0x43f97c
  42974e:	nop
  42974f:	nop
  429750:	jmp    QWORD PTR [rip+0x1621e]        # 0x43f974
  429756:	nop
  429757:	nop
  429758:	jmp    QWORD PTR [rip+0x1620e]        # 0x43f96c
  42975e:	nop
  42975f:	nop
  429760:	jmp    QWORD PTR [rip+0x161fe]        # 0x43f964
  429766:	nop
  429767:	nop
  429768:	jmp    QWORD PTR [rip+0x161ee]        # 0x43f95c
  42976e:	nop
  42976f:	nop
  429770:	jmp    QWORD PTR [rip+0x161de]        # 0x43f954
  429776:	nop
  429777:	nop
  429778:	jmp    QWORD PTR [rip+0x161ce]        # 0x43f94c
  42977e:	nop
  42977f:	nop
  429780:	jmp    QWORD PTR [rip+0x161be]        # 0x43f944
  429786:	nop
  429787:	nop
  429788:	jmp    QWORD PTR [rip+0x161ae]        # 0x43f93c
  42978e:	nop
  42978f:	nop
  429790:	jmp    QWORD PTR [rip+0x1619e]        # 0x43f934
  429796:	nop
  429797:	nop
  429798:	jmp    QWORD PTR [rip+0x1618e]        # 0x43f92c
  42979e:	nop
  42979f:	nop
  4297a0:	jmp    QWORD PTR [rip+0x1617e]        # 0x43f924
  4297a6:	nop
  4297a7:	nop
  4297a8:	jmp    QWORD PTR [rip+0x1616e]        # 0x43f91c
  4297ae:	nop
  4297af:	nop
  4297b0:	jmp    QWORD PTR [rip+0x1615e]        # 0x43f914
  4297b6:	nop
  4297b7:	nop
  4297b8:	jmp    QWORD PTR [rip+0x1614e]        # 0x43f90c
  4297be:	nop
  4297bf:	nop
  4297c0:	jmp    QWORD PTR [rip+0x1613e]        # 0x43f904
  4297c6:	nop
  4297c7:	nop
  4297c8:	jmp    QWORD PTR [rip+0x1612e]        # 0x43f8fc
  4297ce:	nop
  4297cf:	nop
  4297d0:	jmp    QWORD PTR [rip+0x1611e]        # 0x43f8f4
  4297d6:	nop
  4297d7:	nop
  4297d8:	jmp    QWORD PTR [rip+0x1610e]        # 0x43f8ec
  4297de:	nop
  4297df:	nop
  4297e0:	jmp    QWORD PTR [rip+0x160fe]        # 0x43f8e4
  4297e6:	nop
  4297e7:	nop
  4297e8:	jmp    QWORD PTR [rip+0x160ee]        # 0x43f8dc
  4297ee:	nop
  4297ef:	nop
  4297f0:	jmp    QWORD PTR [rip+0x160de]        # 0x43f8d4
  4297f6:	nop
  4297f7:	nop
  4297f8:	jmp    QWORD PTR [rip+0x160ce]        # 0x43f8cc
  4297fe:	nop
  4297ff:	nop
  429800:	jmp    QWORD PTR [rip+0x160be]        # 0x43f8c4
  429806:	nop
  429807:	nop
  429808:	nop    DWORD PTR [rax+rax*1+0x0]
  429810:	push   r15
  429812:	push   r14
  429814:	push   r13
  429816:	push   r12
  429818:	push   rbp
  429819:	push   rdi
  42981a:	push   rsi
  42981b:	push   rbx
  42981c:	sub    rsp,0x2e8
  429823:	mov    rbx,rdx
  429826:	mov    edi,ecx
  429828:	call   0x427060
  42982d:	xor    ecx,ecx
  42982f:	mov    DWORD PTR [rsp+0x164],0x0
  42983a:	mov    QWORD PTR [rsp+0x190],0x1000
  429846:	mov    QWORD PTR [rsp+0x198],0x0
  429852:	mov    DWORD PTR [rsp+0x168],0x0
  42985d:	call   0x429440
  429862:	mov    DWORD PTR [rip+0x147d4],eax        # 0x43e03c
  429868:	call   0x421a10
  42986d:	test   eax,eax
  42986f:	mov    DWORD PTR [rsp+0x104],eax
  429876:	jne    0x429ce4
  42987c:	lea    rdx,[rip+0x290d]        # 0x42c190
  429883:	xor    ecx,ecx
  429885:	call   0x4294d8
  42988a:	mov    ecx,0x1
  42988f:	call   0x4021e0
  429894:	xor    ecx,ecx
  429896:	mov    QWORD PTR [rsp+0x118],rax
  42989e:	call   0x4026d0
  4298a3:	mov    rsi,QWORD PTR [rax]
  4298a6:	mov    QWORD PTR [rsp+0x108],rax
  4298ae:	test   rsi,rsi
  4298b1:	je     0x4298be
  4298b3:	cmp    QWORD PTR [rsi+0x10],0x0
  4298b8:	je     0x42a24e
  4298be:	mov    rax,QWORD PTR [rsp+0x108]
  4298c6:	lea    rsi,[rip+0xfffffffffffd7c93]        # 0x401560
  4298cd:	mov    r13,QWORD PTR [rip+0xf1ec]        # 0x438ac0
  4298d4:	xor    r15d,r15d
  4298d7:	mov    QWORD PTR [rsp+0xf0],0x0
  4298e3:	mov    DWORD PTR [rsp+0x110],0x0
  4298ee:	mov    QWORD PTR [rsp+0xf8],0x0
  4298fa:	xor    r14d,r14d
  4298fd:	xor    r12d,r12d
  429900:	mov    QWORD PTR [rax+0x10],rsi
  429904:	lea    rsi,[rip+0xfffffffffffd7d75]        # 0x401680
  42990b:	xor    ebp,ebp
  42990d:	mov    QWORD PTR [rsp+0x128],r13
  429915:	mov    QWORD PTR [rsp+0x130],r13
  42991d:	mov    QWORD PTR [rax+0x18],rsi
  429921:	lea    rax,[rip+0x2863]        # 0x42c18b
  429928:	xor    esi,esi
  42992a:	mov    QWORD PTR [rsp+0x140],r13
  429932:	mov    QWORD PTR [rsp+0x120],rax
  42993a:	mov    rax,QWORD PTR [rip+0x1614b]        # 0x43fa8c
  429941:	mov    QWORD PTR [rsp+0x138],rax
  429949:	nop    DWORD PTR [rax+0x0]
  429950:	lea    r8,[rip+0x2b9a]        # 0x42c4f1
  429957:	mov    rdx,rbx
  42995a:	mov    ecx,edi
  42995c:	call   0x429030
  429961:	cmp    eax,0xffffffff
  429964:	je     0x429d2b
  42996a:	sub    eax,0x43
  42996d:	cmp    eax,0x33
  429970:	ja     0x429cbb
  429976:	lea    rdx,[rip+0x2e8f]        # 0x42c80c
  42997d:	movsxd rax,DWORD PTR [rdx+rax*4]
  429981:	add    rdx,rax
  429984:	jmp    rdx
  429986:	or     DWORD PTR [rip+0x146ab],0x20        # 0x43e038
  42998d:	jmp    0x429950
  42998f:	mov    rax,QWORD PTR [rip+0xf12a]        # 0x438ac0
  429996:	mov    rax,QWORD PTR [rax]
  429999:	mov    QWORD PTR [rip+0x1678],rax        # 0x42b018
  4299a0:	jmp    0x429950
  4299a2:	mov    rax,QWORD PTR [rip+0xf117]        # 0x438ac0
  4299a9:	mov    rax,QWORD PTR [rax]
  4299ac:	mov    QWORD PTR [rip+0x165d],rax        # 0x42b010
  4299b3:	jmp    0x429950
  4299b5:	mov    rcx,QWORD PTR [r13+0x0]
  4299b9:	call   0x4295d0
  4299be:	mov    DWORD PTR [rsp+0x110],eax
  4299c5:	jmp    0x429950
  4299c7:	mov    rax,QWORD PTR [rip+0xf0f2]        # 0x438ac0
  4299ce:	mov    r15,QWORD PTR [rax]
  4299d1:	jmp    0x429950
  4299d6:	mov    rax,QWORD PTR [rip+0xf0e3]        # 0x438ac0
  4299dd:	mov    rax,QWORD PTR [rax]
  4299e0:	mov    QWORD PTR [rsp+0x120],rax
  4299e8:	jmp    0x429950
  4299ed:	mov    rcx,r14
  4299f0:	call   0x429580
  4299f5:	mov    rax,QWORD PTR [rip+0xf0c4]        # 0x438ac0
  4299fc:	mov    rcx,QWORD PTR [rax]
  4299ff:	call   QWORD PTR [rip+0x16087]        # 0x43fa8c
  429a05:	mov    r14,rax
  429a08:	jmp    0x429950
  429a0d:	mov    rcx,r12
  429a10:	call   0x429580
  429a15:	mov    rax,QWORD PTR [rip+0xf0a4]        # 0x438ac0
  429a1c:	mov    rcx,QWORD PTR [rax]
  429a1f:	call   QWORD PTR [rip+0x16067]        # 0x43fa8c
  429a25:	mov    r12,rax
  429a28:	jmp    0x429950
  429a2d:	mov    rcx,rsi
  429a30:	call   0x429580
  429a35:	mov    rax,QWORD PTR [rsp+0x140]
  429a3d:	mov    rcx,QWORD PTR [rax]
  429a40:	call   0x426540
  429a45:	mov    rsi,rax
  429a48:	jmp    0x429950
  429a4d:	or     DWORD PTR [rip+0x145e4],0x40        # 0x43e038
  429a54:	jmp    0x429950
  429a59:	mov    rcx,QWORD PTR [rsp+0xf0]
  429a61:	call   0x429580
  429a66:	mov    rax,QWORD PTR [rsp+0x128]
  429a6e:	mov    rcx,QWORD PTR [rax]
  429a71:	call   QWORD PTR [rip+0x16015]        # 0x43fa8c
  429a77:	mov    QWORD PTR [rsp+0xf0],rax
  429a7f:	jmp    0x429950
  429a84:	mov    rcx,QWORD PTR [rsp+0xf8]
  429a8c:	call   0x429580
  429a91:	mov    rax,QWORD PTR [rsp+0x130]
  429a99:	mov    rcx,QWORD PTR [rax]
  429a9c:	mov    rax,QWORD PTR [rsp+0x138]
  429aa4:	call   rax
  429aa6:	mov    QWORD PTR [rsp+0xf8],rax
  429aae:	jmp    0x429950
  429ab3:	mov    rcx,rbp
  429ab6:	call   0x429580
  429abb:	mov    rax,QWORD PTR [rip+0xeffe]        # 0x438ac0
  429ac2:	mov    rcx,QWORD PTR [rax]
  429ac5:	call   QWORD PTR [rip+0x15fc1]        # 0x43fa8c
  429acb:	mov    rbp,rax
  429ace:	jmp    0x429950
  429ad3:	mov    rax,QWORD PTR [rip+0xefe6]        # 0x438ac0
  429ada:	mov    rax,QWORD PTR [rax]
  429add:	mov    QWORD PTR [rip+0x1454c],rax        # 0x43e030
  429ae4:	jmp    0x429950
  429ae9:	call   0x416da0
  429aee:	cmp    DWORD PTR [rax+0x40],0x0
  429af2:	lea    rdx,[rip+0x2687]        # 0x42c180
  429af9:	lea    rcx,[rip+0x267c]        # 0x42c17c
  429b00:	mov    r9d,DWORD PTR [rax+0x1c]
  429b04:	mov    rbx,QWORD PTR [rax+0x28]
  429b08:	lea    r8,[rip+0x2674]        # 0x42c183
  429b0f:	mov    r13,rdx
  429b12:	mov    r12,rdx
  429b15:	mov    rbp,rdx
  429b18:	mov    rdi,rdx
  429b1b:	mov    rsi,rdx
  429b1e:	mov    r11,rdx
  429b21:	cmovne r13,rcx
  429b25:	cmp    DWORD PTR [rax+0x3c],0x0
  429b29:	mov    r10,rdx
  429b2c:	cmovne r12,rcx
  429b30:	cmp    DWORD PTR [rax+0x38],0x0
  429b34:	cmovne rbp,rcx
  429b38:	cmp    DWORD PTR [rax+0x34],0x0
  429b3c:	cmovne rdi,rcx
  429b40:	cmp    DWORD PTR [rax+0x30],0x0
  429b44:	cmovne rsi,rcx
  429b48:	cmp    DWORD PTR [rax+0x24],0x0
  429b4c:	cmovne r11,rcx
  429b50:	cmp    DWORD PTR [rax+0x20],0x0
  429b54:	cmovne r10,rcx
  429b58:	cmp    r9d,0xffffffff
  429b5c:	je     0x429b68
  429b5e:	test   r9d,r9d
  429b61:	cmovne rdx,rcx
  429b65:	mov    r8,rdx
  429b68:	cmp    DWORD PTR [rax+0x18],0x0
  429b6c:	lea    rcx,[rip+0x260d]        # 0x42c180
  429b73:	lea    rdx,[rip+0x2602]        # 0x42c17c
  429b7a:	mov    QWORD PTR [rsp+0x98],rdi
  429b82:	lea    rdi,[rip+0x272c]        # 0x42c2b5
  429b89:	mov    QWORD PTR [rsp+0x48],r8
  429b8e:	mov    QWORD PTR [rsp+0xe8],r13
  429b96:	mov    QWORD PTR [rsp+0xd8],r12
  429b9e:	lea    r8,[rip+0x260c]        # 0x42c1b1
  429ba5:	mov    QWORD PTR [rsp+0x90],rdi
  429bad:	lea    rdi,[rip+0x270a]        # 0x42c2be
  429bb4:	mov    QWORD PTR [rsp+0xc8],rbp
  429bbc:	cmove  rdx,rcx
  429bc0:	lea    rcx,[rip+0x26bb]        # 0x42c282
  429bc7:	mov    QWORD PTR [rsp+0x88],rsi
  429bcf:	mov    QWORD PTR [rsp+0x80],rdi
  429bd7:	lea    rdi,[rip+0x26e6]        # 0x42c2c4
  429bde:	mov    QWORD PTR [rsp+0x78],rbx
  429be3:	mov    QWORD PTR [rsp+0xe0],rcx
  429beb:	lea    rcx,[rip+0x2695]        # 0x42c287
  429bf2:	mov    QWORD PTR [rsp+0x68],r11
  429bf7:	mov    QWORD PTR [rsp+0x70],rdi
  429bfc:	lea    rdi,[rip+0x26cd]        # 0x42c2d0
  429c03:	mov    QWORD PTR [rsp+0x58],r10
  429c08:	mov    QWORD PTR [rsp+0xd0],rcx
  429c10:	lea    rcx,[rip+0x2677]        # 0x42c28e
  429c17:	mov    QWORD PTR [rsp+0x38],rdx
  429c1c:	mov    QWORD PTR [rsp+0x60],rdi
  429c21:	lea    rdi,[rip+0x26b6]        # 0x42c2de
  429c28:	mov    QWORD PTR [rsp+0xc0],rcx
  429c30:	lea    rcx,[rip+0x2ca5]        # 0x42c8dc
  429c37:	mov    QWORD PTR [rsp+0x50],rdi
  429c3c:	lea    rdi,[rip+0x26a9]        # 0x42c2ec
  429c43:	mov    QWORD PTR [rsp+0xb8],rcx
  429c4b:	lea    rcx,[rip+0x2644]        # 0x42c296
  429c52:	mov    QWORD PTR [rsp+0x40],rdi
  429c57:	lea    rdi,[rip+0x26aa]        # 0x42c308
  429c5e:	mov    QWORD PTR [rsp+0xb0],rcx
  429c66:	lea    rcx,[rip+0x2c72]        # 0x42c8df
  429c6d:	mov    QWORD PTR [rsp+0x30],rdi
  429c72:	lea    rdi,[rip+0x26ae]        # 0x42c327
  429c79:	mov    QWORD PTR [rsp+0xa8],rcx
  429c81:	lea    rcx,[rip+0x2617]        # 0x42c29f
  429c88:	mov    QWORD PTR [rsp+0xa0],rcx
  429c90:	mov    rdx,QWORD PTR [rax+0x8]
  429c94:	lea    rcx,[rip+0x2565]        # 0x42c200
  429c9b:	mov    QWORD PTR [rsp+0x20],rdi
  429ca0:	mov    QWORD PTR [rsp+0x28],rdx
  429ca5:	mov    r9,QWORD PTR [rax]
  429ca8:	lea    rdx,[rip+0x2511]        # 0x42c1c0
  429caf:	call   0x429508
  429cb4:	xor    ecx,ecx
  429cb6:	call   0x4295c0
  429cbb:	mov    rbx,QWORD PTR [rbx]
  429cbe:	call   QWORD PTR [rip+0x15d48]        # 0x43fa0c
  429cc4:	lea    rdx,[rip+0x2675]        # 0x42c340
  429ccb:	lea    rcx,[rax+0x60]
  429ccf:	mov    r9,rbx
  429cd2:	mov    r8,rbx
  429cd5:	call   0x429598
  429cda:	mov    ecx,0x1
  429cdf:	call   0x4295c0
  429ce4:	call   QWORD PTR [rip+0x15d22]        # 0x43fa0c
  429cea:	lea    rcx,[rip+0x24a2]        # 0x42c193
  429cf1:	lea    r9,[rax+0x60]
  429cf5:	mov    r8d,0x1d
  429cfb:	mov    edx,0x1
  429d00:	call   0x429570
  429d05:	mov    DWORD PTR [rsp+0x104],0x1
  429d10:	mov    eax,DWORD PTR [rsp+0x104]
  429d17:	add    rsp,0x2e8
  429d1e:	pop    rbx
  429d1f:	pop    rsi
  429d20:	pop    rdi
  429d21:	pop    rbp
  429d22:	pop    r12
  429d24:	pop    r13
  429d26:	pop    r14
  429d28:	pop    r15
  429d2a:	ret    
  429d2b:	test   r15,r15
  429d2e:	mov    r13d,DWORD PTR [rsp+0x110]
  429d36:	je     0x429d80
  429d38:	xor    eax,eax
  429d3a:	or     rcx,0xffffffffffffffff
  429d3e:	mov    rdi,r15
  429d41:	repnz scas al,BYTE PTR es:[rdi]
  429d43:	not    rcx
  429d46:	add    rcx,0x4
  429d4a:	call   0x429538
  429d4f:	test   rax,rax
  429d52:	mov    rdi,rax
  429d55:	je     0x429d80
  429d57:	lea    rcx,[rax+0x4]
  429d5b:	mov    rdx,r15
  429d5e:	mov    DWORD PTR [rax],0x2d206f67
  429d64:	call   0x4294a8
  429d69:	lea    rdx,[rip+0x142c8]        # 0x43e038
  429d70:	mov    rcx,rdi
  429d73:	call   0x401700
  429d78:	mov    rcx,rdi
  429d7b:	call   0x429580
  429d80:	test   rbp,rbp
  429d83:	mov    eax,DWORD PTR [rip+0x142af]        # 0x43e038
  429d89:	setne  dl
  429d8c:	je     0x429e1f
  429d92:	test   al,0x40
  429d94:	je     0x429e1f
  429d9a:	lea    rcx,[rip+0x276c]        # 0x42c50d
  429da1:	call   0x429560
  429da6:	test   rax,rax
  429da9:	mov    r8,rax
  429dac:	mov    QWORD PTR [rsp+0x260],rax
  429db4:	je     0x429de8
  429db6:	lea    rcx,[rsp+0x260]
  429dbe:	lea    rdx,[rip+0x2750]        # 0x42c515
  429dc5:	call   0x429330
  429dca:	test   eax,eax
  429dcc:	js     0x429e45
  429dce:	mov    rcx,QWORD PTR [rsp+0x260]
  429dd6:	call   0x4240b0
  429ddb:	mov    rcx,QWORD PTR [rsp+0x260]
  429de3:	call   0x429580
  429de8:	mov    rcx,rbp
  429deb:	call   0x414850
  429df0:	test   rax,rax
  429df3:	mov    rbx,rax
  429df6:	je     0x429e13
  429df8:	call   QWORD PTR [rip+0x15c0e]        # 0x43fa0c
  429dfe:	lea    rcx,[rax+0x60]
  429e02:	mov    rdx,rbx
  429e05:	call   0x422900
  429e0a:	mov    rcx,rbx
  429e0d:	call   QWORD PTR [rip+0x15ef1]        # 0x43fd04
  429e13:	call   0x423c40
  429e18:	xor    ecx,ecx
  429e1a:	call   0x4295c0
  429e1f:	test   rbp,rbp
  429e22:	jne    0x429e4f
  429e24:	test   r12,r12
  429e27:	jne    0x429e4f
  429e29:	mov    rbx,QWORD PTR [rbx]
  429e2c:	call   QWORD PTR [rip+0x15bda]        # 0x43fa0c
  429e32:	lea    rdx,[rip+0x26ef]        # 0x42c528
  429e39:	lea    rcx,[rax+0x60]
  429e3d:	mov    r8,rbx
  429e40:	call   0x429598
  429e45:	mov    ecx,0x1
  429e4a:	call   0x4295c0
  429e4f:	cmp    DWORD PTR [rsp+0x110],0x0
  429e57:	jne    0x429eb5
  429e59:	test   dl,dl
  429e5b:	je     0x429eb5
  429e5d:	test   al,0x10
  429e5f:	je     0x42abb1
  429e65:	mov    rcx,rbp
  429e68:	call   0x414850
  429e6d:	test   rax,rax
  429e70:	mov    rdi,rax
  429e73:	je     0x42ac1f
  429e79:	lea    rdx,[rip+0x2731]        # 0x42c5b1
  429e80:	mov    rcx,rax
  429e83:	call   0x422cd0
  429e88:	mov    r13d,eax
  429e8b:	mov    rcx,rdi
  429e8e:	call   QWORD PTR [rip+0x15e70]        # 0x43fd04
  429e94:	test   r13d,r13d
  429e97:	je     0x42ac1f
  429e9d:	test   BYTE PTR [rip+0x14194],0x10        # 0x43e038
  429ea4:	jne    0x429eb5
  429ea6:	lea    rcx,[rip+0x2713]        # 0x42c5c0
  429ead:	mov    edx,r13d
  429eb0:	call   0x429508
  429eb5:	test   r14,r14
  429eb8:	je     0x42ac48
  429ebe:	test   rsi,rsi
  429ec1:	je     0x42ada7
  429ec7:	cmp    QWORD PTR [rip+0x1149],0x0        # 0x42b018
  429ecf:	je     0x42ad81
  429ed5:	cmp    QWORD PTR [rip+0x1133],0x0        # 0x42b010
  429edd:	je     0x42ad5b
  429ee3:	mov    rdi,QWORD PTR [rsp+0x118]
  429eeb:	mov    rdx,r14
  429eee:	mov    rcx,rdi
  429ef1:	call   0x40cd80
  429ef6:	test   al,al
  429ef8:	je     0x42ad35
  429efe:	mov    rdx,QWORD PTR [rsp+0x120]
  429f06:	mov    rcx,rdi
  429f09:	call   0x40cdc0
  429f0e:	test   al,al
  429f10:	je     0x42ad35
  429f16:	lea    rdx,[rip+0x272a]        # 0x42c647
  429f1d:	mov    rcx,rdi
  429f20:	call   0x40ce00
  429f25:	test   al,al
  429f27:	je     0x42ad35
  429f2d:	lea    rdx,[rip+0x271f]        # 0x42c653
  429f34:	mov    rcx,rdi
  429f37:	call   0x40ce40
  429f3c:	test   al,al
  429f3e:	je     0x42ad35
  429f44:	mov    rdx,rsi
  429f47:	mov    rcx,rdi
  429f4a:	call   0x40cd20
  429f4f:	test   al,al
  429f51:	je     0x42ad35
  429f57:	cmp    QWORD PTR [rsp+0xf0],0x0
  429f60:	je     0x429f7f
  429f62:	mov    rdx,QWORD PTR [rsp+0xf0]
  429f6a:	mov    rcx,QWORD PTR [rsp+0x118]
  429f72:	call   0x40ce20
  429f77:	test   al,al
  429f79:	je     0x42ad35
  429f7f:	test   r12,r12
  429f82:	je     0x42abc2
  429f88:	mov    rcx,QWORD PTR [rsp+0x118]
  429f90:	mov    rdx,r12
  429f93:	call   0x40cde0
  429f98:	test   al,al
  429f9a:	je     0x42ad35
  429fa0:	mov    rax,QWORD PTR [rsp+0xf8]
  429fa8:	test   rax,rax
  429fab:	je     0x429fb5
  429fad:	mov    rcx,rax
  429fb0:	call   0x4147f0
  429fb5:	xor    eax,eax
  429fb7:	or     rcx,0xffffffffffffffff
  429fbb:	mov    rdi,rsi
  429fbe:	repnz scas al,BYTE PTR es:[rdi]
  429fc0:	xor    edx,edx
  429fc2:	not    rcx
  429fc5:	mov    r8,rcx
  429fc8:	mov    rcx,rsi
  429fcb:	sub    r8,0x1
  429fcf:	call   0x429518
  429fd4:	mov    rcx,QWORD PTR [rsp+0xf8]
  429fdc:	call   0x429580
  429fe1:	mov    rcx,rbp
  429fe4:	call   0x429580
  429fe9:	mov    rcx,r14
  429fec:	call   0x429580
  429ff1:	mov    rcx,rsi
  429ff4:	call   0x429580
  429ff9:	mov    rcx,r12
  429ffc:	call   0x429580
  42a001:	mov    rcx,QWORD PTR [rsp+0xf0]
  42a009:	call   0x429580
  42a00e:	mov    rcx,QWORD PTR [rsp+0x108]
  42a016:	mov    edx,0x200
  42a01b:	call   0x404e60
  42a020:	test   rax,rax
  42a023:	mov    r14,rax
  42a026:	je     0x42aca3
  42a02c:	mov    rax,QWORD PTR [rsp+0x108]
  42a034:	mov    rdx,QWORD PTR [rsp+0x118]
  42a03c:	mov    rcx,r14
  42a03f:	mov    QWORD PTR [r14+0xf8],0x0
  42a04a:	mov    r8,QWORD PTR [rax]
  42a04d:	call   0x4151c0
  42a052:	test   rax,rax
  42a055:	mov    rbx,rax
  42a058:	je     0x42a09a
  42a05a:	xor    edx,edx
  42a05c:	xor    ecx,ecx
  42a05e:	call   0x4294d8
  42a063:	test   rax,rax
  42a066:	je     0x42a0b9
  42a068:	test   BYTE PTR [rip+0x13fc9],0x10        # 0x43e038
  42a06f:	je     0x42a0aa
  42a071:	mov    rax,QWORD PTR [rbx+0xb8]
  42a078:	cmp    QWORD PTR [rax],0x0
  42a07c:	jne    0x42a0d3
  42a07e:	mov    rcx,QWORD PTR [rsp+0x118]
  42a086:	lea    rdx,[rip+0x25f8]        # 0x42c685
  42a08d:	call   0x40ce20
  42a092:	test   al,al
  42a094:	jne    0x42ac7a
  42a09a:	mov    DWORD PTR [rsp+0x104],0x1
  42a0a5:	jmp    0x429d10
  42a0aa:	lea    rcx,[rip+0x25c4]        # 0x42c675
  42a0b1:	mov    rdx,rax
  42a0b4:	call   0x429508
  42a0b9:	mov    rax,QWORD PTR [rbx+0xb8]
  42a0c0:	cmp    QWORD PTR [rax],0x0
  42a0c4:	je     0x42a07e
  42a0c6:	test   BYTE PTR [rip+0x13f6b],0x10        # 0x43e038
  42a0cd:	je     0x42a264
  42a0d3:	mov    rdx,QWORD PTR [rip+0x13f56]        # 0x43e030
  42a0da:	test   rdx,rdx
  42a0dd:	je     0x42a0fd
  42a0df:	lea    rcx,[rbx+0xc0]
  42a0e6:	call   0x41f8a0
  42a0eb:	test   rax,rax
  42a0ee:	je     0x42a09a
  42a0f0:	test   BYTE PTR [rip+0x13f41],0x10        # 0x43e038
  42a0f7:	je     0x42abfa
  42a0fd:	mov    rdx,rbx
  42a100:	mov    rcx,r14
  42a103:	call   0x40ce60
  42a108:	test   eax,eax
  42a10a:	js     0x42acc1
  42a110:	test   BYTE PTR [rip+0x13f21],0x20        # 0x43e038
  42a117:	jne    0x42abed
  42a11d:	mov    rcx,rbx
  42a120:	call   0x4023f0
  42a125:	mov    ecx,0x1000
  42a12a:	mov    QWORD PTR [rsp+0x190],0x1000
  42a136:	call   0x429538
  42a13b:	mov    QWORD PTR [rsp+0x188],rax
  42a143:	mov    BYTE PTR [rax],0x0
  42a146:	lea    rax,[rsp+0x1a0]
  42a14e:	mov    r15,QWORD PTR [rip+0x158b7]        # 0x43fa0c
  42a155:	mov    QWORD PTR [rsp+0x198],0x0
  42a161:	mov    QWORD PTR [rsp+0x120],rax
  42a169:	mov    rax,QWORD PTR [rip+0x1591c]        # 0x43fa8c
  42a170:	mov    QWORD PTR [rsp+0x150],rax
  42a178:	nop    DWORD PTR [rax+rax*1+0x0]
  42a180:	mov    eax,DWORD PTR [rsp+0x164]
  42a187:	mov    rcx,QWORD PTR [rsp+0x120]
  42a18f:	lea    rdx,[rip+0x2578]        # 0x42c70e
  42a196:	lea    r8d,[rax+0x1]
  42a19a:	mov    DWORD PTR [rsp+0x164],r8d
  42a1a2:	call   0x4294c8
  42a1a7:	test   BYTE PTR [rip+0x13e8a],0x10        # 0x43e038
  42a1ae:	jne    0x42a280
  42a1b4:	mov    ecx,0x400
  42a1b9:	call   0x429538
  42a1be:	test   rax,rax
  42a1c1:	mov    r12,rax
  42a1c4:	je     0x42a296
  42a1ca:	cmp    BYTE PTR [rsp+0x1a0],0x0
  42a1d2:	jne    0x42a9b6
  42a1d8:	mov    edi,0x400
  42a1dd:	xor    ebx,ebx
  42a1df:	mov    rbp,rdi
  42a1e2:	lea    rsi,[r12+rbx*1]
  42a1e6:	call   r15
  42a1e9:	mov    edx,ebp
  42a1eb:	mov    r8,rax
  42a1ee:	mov    rcx,rsi
  42a1f1:	sub    edx,ebx
  42a1f3:	call   0x4295a8
  42a1f8:	test   rax,rax
  42a1fb:	je     0x42a2d7
  42a201:	mov    edx,0xa
  42a206:	mov    rcx,rsi
  42a209:	call   0x4294b8
  42a20e:	test   rax,rax
  42a211:	jne    0x42a96f
  42a217:	mov    rcx,rsi
  42a21a:	call   0x429490
  42a21f:	add    rbx,rax
  42a222:	lea    rax,[rbx+0x400]
  42a229:	cmp    rbp,rax
  42a22c:	ja     0x42a1e2
  42a22e:	add    rbp,0x400
  42a235:	mov    rcx,r12
  42a238:	mov    rdx,rbp
  42a23b:	call   0x4294e8
  42a240:	test   rax,rax
  42a243:	je     0x42aa17
  42a249:	mov    r12,rax
  42a24c:	jmp    0x42a1e2
  42a24e:	mov    rcx,QWORD PTR [rip+0xe66b]        # 0x4388c0
  42a255:	call   QWORD PTR [rip+0x15831]        # 0x43fa8c
  42a25b:	mov    QWORD PTR [rsi+0x10],rax
  42a25f:	jmp    0x4298be
  42a264:	mov    rax,QWORD PTR [rbx+0xb8]
  42a26b:	lea    rcx,[rip+0x241e]        # 0x42c690
  42a272:	lea    rdx,[rax+0x8]
  42a276:	call   0x429508
  42a27b:	jmp    0x42a0d3
  42a280:	mov    ecx,0x400
  42a285:	call   0x429538
  42a28a:	test   rax,rax
  42a28d:	mov    r12,rax
  42a290:	jne    0x42a1d8
  42a296:	mov    rcx,QWORD PTR [rsp+0x188]
  42a29e:	call   0x429580
  42a2a3:	mov    rcx,r14
  42a2a6:	call   0x421ae0
  42a2ab:	mov    rcx,r14
  42a2ae:	call   0x404ce0
  42a2b3:	mov    rcx,QWORD PTR [rsp+0x118]
  42a2bb:	call   0x4023f0
  42a2c0:	mov    rcx,QWORD PTR [rsp+0x108]
  42a2c8:	call   0x402730
  42a2cd:	call   0x421a30
  42a2d2:	jmp    0x429d10
  42a2d7:	test   rbx,rbx
  42a2da:	je     0x42aa17
  42a2e0:	mov    r8d,0x2
  42a2e6:	lea    rdx,[rip+0x251b]        # 0x42c808
  42a2ed:	mov    rcx,r12
  42a2f0:	call   QWORD PTR [rip+0x157a6]        # 0x43fa9c
  42a2f6:	test   eax,eax
  42a2f8:	jne    0x42a5dc
  42a2fe:	xor    eax,eax
  42a300:	or     rcx,0xffffffffffffffff
  42a304:	mov    rdi,r12
  42a307:	repnz scas al,BYTE PTR es:[rdi]
  42a309:	cmp    rcx,0xfffffffffffffffc
  42a30d:	je     0x42a323
  42a30f:	movzx  ecx,BYTE PTR [r12+0x2]
  42a315:	call   QWORD PTR [rip+0x15841]        # 0x43fb5c
  42a31b:	test   eax,eax
  42a31d:	je     0x42a5dc
  42a323:	mov    rax,QWORD PTR [rsp+0x150]
  42a32b:	mov    rcx,r12
  42a32e:	mov    rbx,rax
  42a331:	call   rax
  42a333:	test   rax,rax
  42a336:	mov    rsi,rax
  42a339:	je     0x42ab70
  42a33f:	lea    rdx,[rsp+0x168]
  42a347:	mov    rcx,rsi
  42a34a:	mov    DWORD PTR [rsp+0x164],0x0
  42a355:	call   0x401700
  42a35a:	test   eax,eax
  42a35c:	mov    rcx,rsi
  42a35f:	je     0x42a9cf
  42a365:	call   0x429580
  42a36a:	mov    eax,DWORD PTR [rip+0x13cc8]        # 0x43e038
  42a370:	xor    eax,DWORD PTR [rsp+0x168]
  42a377:	mov    rcx,r14
  42a37a:	mov    rdx,QWORD PTR [rsp+0x188]
  42a382:	mov    DWORD PTR [rsp+0xf0],eax
  42a389:	mov    DWORD PTR [rsp+0x168],eax
  42a390:	call   0x419570
  42a395:	test   eax,eax
  42a397:	js     0x42ab8e
  42a39d:	lea    rdi,[rsp+0x170]
  42a3a5:	lea    rax,[rsp+0x16c]
  42a3ad:	lea    rsi,[rsp+0x1c0]
  42a3b5:	mov    QWORD PTR [rsp+0x158],r12
  42a3bd:	mov    ebx,0x1
  42a3c2:	mov    DWORD PTR [rsp+0x128],0x0
  42a3cd:	mov    QWORD PTR [rsp+0x138],rdi
  42a3d5:	lea    rdi,[rsp+0x220]
  42a3dd:	mov    r12,rax
  42a3e0:	mov    QWORD PTR [rsp+0x110],rdi
  42a3e8:	lea    rdi,[rsp+0x1f0]
  42a3f0:	mov    QWORD PTR [rsp+0x148],rdi
  42a3f8:	lea    rdi,[rsp+0x260]
  42a400:	mov    QWORD PTR [rsp+0x130],rdi
  42a408:	lea    rdi,[rsp+0x180]
  42a410:	mov    QWORD PTR [rsp+0x140],rdi
  42a418:	nop    DWORD PTR [rax+rax*1+0x0]
  42a420:	xor    r8d,r8d
  42a423:	mov    r9d,0x6914
  42a429:	mov    rdx,r12
  42a42c:	mov    rcx,r14
  42a42f:	call   0x408b20
  42a434:	test   eax,eax
  42a436:	jne    0x42a9f1
  42a43c:	mov    eax,DWORD PTR [rsp+0xf0]
  42a443:	and    eax,0x2
  42a446:	mov    DWORD PTR [rsp+0xf8],eax
  42a44d:	jne    0x42a6e1
  42a453:	mov    eax,DWORD PTR [rsp+0x16c]
  42a45a:	cmp    eax,0xfcb
  42a45f:	je     0x42a500
  42a465:	jle    0x42a78b
  42a46b:	cmp    eax,0xfcd
  42a470:	je     0x42a796
  42a476:	cmp    eax,0xfd1
  42a47b:	jne    0x42a520
  42a481:	test   BYTE PTR [rsp+0xf0],0x8
  42a489:	jne    0x42a520
  42a48f:	mov    rax,QWORD PTR [r14+0x110]
  42a496:	test   rax,rax
  42a499:	je     0x42a520
  42a49f:	xor    r13d,r13d
  42a4a2:	xor    edi,edi
  42a4a4:	cmp    WORD PTR [rax+0x8],0x0
  42a4a9:	je     0x42a9d9
  42a4af:	call   r15
  42a4b2:	lea    rdx,[rax+0x30]
  42a4b6:	mov    rax,QWORD PTR [r14+0x110]
  42a4bd:	add    edi,0x1
  42a4c0:	mov    rax,QWORD PTR [rax]
  42a4c3:	mov    rax,QWORD PTR [rax+r13*1]
  42a4c7:	mov    rcx,QWORD PTR [rax+0x38]
  42a4cb:	add    rcx,0x8
  42a4cf:	call   0x429588
  42a4d4:	mov    rax,QWORD PTR [r14+0x110]
  42a4db:	movzx  eax,WORD PTR [rax+0x8]
  42a4df:	cmp    edi,eax
  42a4e1:	jge    0x42a9d9
  42a4e7:	call   r15
  42a4ea:	mov    rcx,QWORD PTR [rip+0xb27]        # 0x42b018
  42a4f1:	lea    rdx,[rax+0x30]
  42a4f5:	add    r13,0x8
  42a4f9:	call   0x429588
  42a4fe:	jmp    0x42a4af
  42a500:	test   BYTE PTR [rip+0x13b31],0x10        # 0x43e038
  42a507:	jne    0x42a520
  42a509:	mov    edx,DWORD PTR [r14+0x144]
  42a510:	lea    rcx,[rip+0x223c]        # 0x42c753
  42a517:	call   0x429508
  42a51c:	nop    DWORD PTR [rax+0x0]
  42a520:	test   BYTE PTR [rsp+0xf0],0x1
  42a528:	jne    0x42a6f7
  42a52e:	mov    eax,DWORD PTR [rsp+0xf8]
  42a535:	test   eax,eax
  42a537:	je     0x42a420
  42a53d:	mov    rcx,QWORD PTR [rsp+0x140]
  42a545:	xor    edx,edx
  42a547:	call   0x426080
  42a54c:	mov    eax,DWORD PTR [rsp+0x184]
  42a553:	sub    eax,DWORD PTR [rsp+0x174]
  42a55a:	mov    ecx,0x3e8
  42a55f:	mov    r9d,DWORD PTR [rsp+0x180]
  42a567:	sub    r9d,DWORD PTR [rsp+0x170]
  42a56f:	mov    rbp,QWORD PTR [rsp+0x130]
  42a577:	mov    r8d,DWORD PTR [rsp+0x128]
  42a57f:	cdq    
  42a580:	idiv   ecx
  42a582:	lea    rdx,[rip+0x2207]        # 0x42c790
  42a589:	mov    rcx,rbp
  42a58c:	imul   r9d,r9d,0x3e8
  42a593:	add    r9d,eax
  42a596:	call   0x4294c8
  42a59b:	mov    rdi,QWORD PTR [rsp+0x110]
  42a5a3:	xor    eax,eax
  42a5a5:	mov    ecx,0xc
  42a5aa:	mov    r8,QWORD PTR [rsp+0x110]
  42a5b2:	mov    rdx,r14
  42a5b5:	rep stos DWORD PTR es:[rdi],eax
  42a5b7:	lea    rax,[rip+0x21b1]        # 0x42c76f
  42a5be:	mov    QWORD PTR [rsp+0x228],rbp
  42a5c6:	mov    QWORD PTR [rsp+0x220],rax
  42a5ce:	mov    rcx,QWORD PTR [r14+0x28]
  42a5d2:	call   0x401560
  42a5d7:	jmp    0x42a420
  42a5dc:	mov    rbx,QWORD PTR [rip+0x154a9]        # 0x43fa8c
  42a5e3:	mov    rcx,r12
  42a5e6:	call   rbx
  42a5e8:	test   rax,rax
  42a5eb:	mov    rbx,rax
  42a5ee:	je     0x42ad1f
  42a5f4:	lea    rdx,[rip+0x21ca]        # 0x42c7c5
  42a5fb:	mov    rcx,rax
  42a5fe:	call   0x429470
  42a603:	test   rax,rax
  42a606:	mov    rsi,rax
  42a609:	lea    rax,[rip+0x1b80]        # 0x42c190
  42a610:	lea    rdx,[rip+0x21b1]        # 0x42c7c8
  42a617:	cmove  rsi,rax
  42a61b:	mov    rcx,rsi
  42a61e:	call   QWORD PTR [rip+0x15470]        # 0x43fa94
  42a624:	test   eax,eax
  42a626:	je     0x42a296
  42a62c:	lea    rdx,[rip+0x219a]        # 0x42c7cd
  42a633:	mov    rcx,rsi
  42a636:	call   QWORD PTR [rip+0x15458]        # 0x43fa94
  42a63c:	test   eax,eax
  42a63e:	je     0x42a296
  42a644:	lea    rdx,[rip+0x2187]        # 0x42c7d2
  42a64b:	mov    rcx,rsi
  42a64e:	call   QWORD PTR [rip+0x15440]        # 0x43fa94
  42a654:	test   eax,eax
  42a656:	je     0x42a296
  42a65c:	lea    rdx,[rip+0x2173]        # 0x42c7d6
  42a663:	mov    rcx,rsi
  42a666:	call   QWORD PTR [rip+0x15428]        # 0x43fa94
  42a66c:	test   eax,eax
  42a66e:	jne    0x42a977
  42a674:	movzx  eax,WORD PTR [r14]
  42a678:	mov    rcx,QWORD PTR [rsp+0x188]
  42a680:	lea    rdx,[rip+0x20e2]        # 0x42c769
  42a687:	movzx  edi,ah
  42a68a:	movzx  r9d,al
  42a68e:	mov    r8d,edi
  42a691:	call   0x4294c8
  42a696:	mov    rdx,QWORD PTR [rsp+0x188]
  42a69e:	lea    rcx,[rip+0x2139]        # 0x42c7de
  42a6a5:	call   0x429508
  42a6aa:	mov    rax,QWORD PTR [rsp+0x188]
  42a6b2:	mov    DWORD PTR [rsp+0x164],0x0
  42a6bd:	mov    BYTE PTR [rax],0x0
  42a6c0:	mov    QWORD PTR [rsp+0x198],0x0
  42a6cc:	mov    rcx,r12
  42a6cf:	call   0x429580
  42a6d4:	mov    rcx,rbx
  42a6d7:	call   0x429580
  42a6dc:	jmp    0x42a180
  42a6e1:	mov    rcx,QWORD PTR [rsp+0x138]
  42a6e9:	xor    edx,edx
  42a6eb:	xor    ebx,ebx
  42a6ed:	call   0x426080
  42a6f2:	jmp    0x42a453
  42a6f7:	movzx  eax,WORD PTR [r14]
  42a6fb:	mov    rcx,QWORD PTR [rsp+0x110]
  42a703:	lea    rdx,[rip+0x205f]        # 0x42c769
  42a70a:	movzx  edi,ah
  42a70d:	mov    r13d,edi
  42a710:	movzx  edi,al
  42a713:	mov    r8d,r13d
  42a716:	mov    r9d,edi
  42a719:	imul   r13d,r13d,0xa
  42a71d:	call   0x4294c8
  42a722:	add    r13d,edi
  42a725:	je     0x42a52e
  42a72b:	mov    rdi,QWORD PTR [rsp+0x148]
  42a733:	xor    eax,eax
  42a735:	mov    ecx,0xc
  42a73a:	mov    rbp,QWORD PTR [rsp+0x130]
  42a742:	mov    r8,QWORD PTR [rsp+0x110]
  42a74a:	lea    rdx,[rip+0x2023]        # 0x42c774
  42a751:	rep stos DWORD PTR es:[rdi],eax
  42a753:	lea    rax,[rip+0x2015]        # 0x42c76f
  42a75a:	mov    rcx,rbp
  42a75d:	mov    QWORD PTR [rsp+0x1f0],rax
  42a765:	call   0x4294c8
  42a76a:	mov    rcx,QWORD PTR [r14+0x28]
  42a76e:	mov    r8,QWORD PTR [rsp+0x148]
  42a776:	mov    rdx,r14
  42a779:	mov    QWORD PTR [rsp+0x1f8],rbp
  42a781:	call   0x401560
  42a786:	jmp    0x42a52e
  42a78b:	cmp    eax,0xfc8
  42a790:	jne    0x42a520
  42a796:	xor    edi,edi
  42a798:	nop    DWORD PTR [rax+rax*1+0x0]
  42a7a0:	xor    r8d,r8d
  42a7a3:	mov    r9d,0x1508
  42a7a9:	mov    rdx,r12
  42a7ac:	mov    rcx,r14
  42a7af:	call   0x408b20
  42a7b4:	test   eax,eax
  42a7b6:	jne    0x42a928
  42a7bc:	mov    eax,DWORD PTR [rsp+0x16c]
  42a7c3:	cmp    eax,0xfcd
  42a7c8:	je     0x42a7d5
  42a7ca:	cmp    eax,0xfc8
  42a7cf:	jne    0x42a928
  42a7d5:	mov    rax,QWORD PTR [r14+0x110]
  42a7dc:	add    edi,0x1
  42a7df:	test   rax,rax
  42a7e2:	je     0x42a7a0
  42a7e4:	xor    r13d,r13d
  42a7e7:	cmp    WORD PTR [rax+0x8],0x0
  42a7ec:	jne    0x42a883
  42a7f2:	jmp    0x42a8d3
  42a7f7:	nop    WORD PTR [rax+rax*1+0x0]
  42a800:	mov    edx,DWORD PTR [rbp+0x10]
  42a803:	mov    ecx,DWORD PTR [rbp+0x14]
  42a806:	call   0x421820
  42a80b:	cmp    BYTE PTR [rbp+0x18],0x2
  42a80f:	mov    r8,QWORD PTR [rbp+0x48]
  42a813:	jbe    0x42a81e
  42a815:	cmp    DWORD PTR [rbp+0x14],0x62
  42a819:	je     0x42a81e
  42a81b:	mov    r8,QWORD PTR [r8]
  42a81e:	mov    r9d,DWORD PTR [rbp+0x64]
  42a822:	mov    rcx,QWORD PTR [r14+0x28]
  42a826:	mov    edx,eax
  42a828:	mov    QWORD PTR [rsp+0x28],rsi
  42a82d:	mov    DWORD PTR [rsp+0x20],0x27
  42a835:	call   0x40fb10
  42a83a:	test   eax,eax
  42a83c:	js     0x42a86c
  42a83e:	test   ebx,ebx
  42a840:	je     0x42a85f
  42a842:	test   r13,r13
  42a845:	jne    0x42a910
  42a84b:	call   r15
  42a84e:	mov    rcx,QWORD PTR [rsp+0x1c0]
  42a856:	lea    rdx,[rax+0x30]
  42a85a:	call   0x429588
  42a85f:	mov    rcx,QWORD PTR [rsp+0x1c0]
  42a867:	call   0x429580
  42a86c:	mov    rax,QWORD PTR [r14+0x110]
  42a873:	movzx  ecx,WORD PTR [rax+0x8]
  42a877:	lea    edx,[r13+0x1]
  42a87b:	add    r13,0x1
  42a87f:	cmp    ecx,edx
  42a881:	jle    0x42a8d3
  42a883:	mov    rdx,QWORD PTR [rax]
  42a886:	mov    rbp,QWORD PTR [rdx+r13*8]
  42a88a:	mov    edx,DWORD PTR [rbp+0x64]
  42a88d:	test   edx,edx
  42a88f:	jns    0x42a800
  42a895:	test   ebx,ebx
  42a897:	je     0x42a873
  42a899:	test   r13,r13
  42a89c:	jne    0x42a8f3
  42a89e:	call   r15
  42a8a1:	lea    rcx,[rip+0x1e91]        # 0x42c739
  42a8a8:	lea    r9,[rax+0x30]
  42a8ac:	mov    edx,0x1
  42a8b1:	mov    r8d,0x4
  42a8b7:	call   0x429570
  42a8bc:	mov    rax,QWORD PTR [r14+0x110]
  42a8c3:	lea    edx,[r13+0x1]
  42a8c7:	add    r13,0x1
  42a8cb:	movzx  ecx,WORD PTR [rax+0x8]
  42a8cf:	cmp    ecx,edx
  42a8d1:	jg     0x42a883
  42a8d3:	test   ebx,ebx
  42a8d5:	je     0x42a7a0
  42a8db:	call   r15
  42a8de:	mov    rcx,QWORD PTR [rip+0x72b]        # 0x42b010
  42a8e5:	lea    rdx,[rax+0x30]
  42a8e9:	call   0x429588
  42a8ee:	jmp    0x42a7a0
  42a8f3:	call   r15
  42a8f6:	mov    rcx,QWORD PTR [rip+0x71b]        # 0x42b018
  42a8fd:	lea    rdx,[rax+0x30]
  42a901:	call   0x429588
  42a906:	jmp    0x42a89e
  42a908:	nop    DWORD PTR [rax+rax*1+0x0]
  42a910:	call   r15
  42a913:	mov    rcx,QWORD PTR [rip+0x6fe]        # 0x42b018
  42a91a:	lea    rdx,[rax+0x30]
  42a91e:	call   0x429588
  42a923:	jmp    0x42a84b
  42a928:	test   BYTE PTR [rip+0x13709],0x10        # 0x43e038
  42a92f:	mov    DWORD PTR [rsp+0x128],edi
  42a936:	jne    0x42a520
  42a93c:	lea    rax,[rip+0x184e]        # 0x42c191
  42a943:	lea    r13,[rip+0x1846]        # 0x42c190
  42a94a:	cmp    edi,0x1
  42a94d:	cmovne r13,rax
  42a951:	call   r15
  42a954:	lea    rdx,[rip+0x1de3]        # 0x42c73e
  42a95b:	lea    rcx,[rax+0x30]
  42a95f:	mov    r9,r13
  42a962:	mov    r8d,edi
  42a965:	call   0x429598
  42a96a:	jmp    0x42a520
  42a96f:	mov    BYTE PTR [rax],0x0
  42a972:	jmp    0x42a2e0
  42a977:	lea    rdx,[rip+0x1e76]        # 0x42c7f4
  42a97e:	mov    rcx,rsi
  42a981:	call   QWORD PTR [rip+0x1510d]        # 0x43fa94
  42a987:	test   eax,eax
  42a989:	jne    0x42aa24
  42a98f:	mov    rax,QWORD PTR [rsp+0x188]
  42a997:	mov    DWORD PTR [rsp+0x164],0x0
  42a9a2:	mov    BYTE PTR [rax],0x0
  42a9a5:	mov    QWORD PTR [rsp+0x198],0x0
  42a9b1:	jmp    0x42a6cc
  42a9b6:	mov    rdx,QWORD PTR [rsp+0x120]
  42a9be:	lea    rcx,[rip+0x1d4e]        # 0x42c713
  42a9c5:	call   0x429508
  42a9ca:	jmp    0x42a1d8
  42a9cf:	call   0x429580
  42a9d4:	jmp    0x42a5e3
  42a9d9:	call   r15
  42a9dc:	mov    rcx,QWORD PTR [rip+0x62d]        # 0x42b010
  42a9e3:	lea    rdx,[rax+0x30]
  42a9e7:	call   0x429588
  42a9ec:	jmp    0x42a520
  42a9f1:	mov    r12,QWORD PTR [rsp+0x158]
  42a9f9:	mov    rax,QWORD PTR [rsp+0x188]
  42aa01:	xor    ebx,ebx
  42aa03:	mov    BYTE PTR [rax],0x0
  42aa06:	mov    QWORD PTR [rsp+0x198],0x0
  42aa12:	jmp    0x42a6cc
  42aa17:	mov    rcx,r12
  42aa1a:	call   0x429580
  42aa1f:	jmp    0x42a296
  42aa24:	lea    rdx,[rip+0x1dcf]        # 0x42c7fa
  42aa2b:	mov    rcx,rsi
  42aa2e:	call   QWORD PTR [rip+0x15060]        # 0x43fa94
  42aa34:	test   eax,eax
  42aa36:	je     0x42ab30
  42aa3c:	mov    rcx,QWORD PTR [rsp+0x188]
  42aa44:	jmp    0x42aa74
  42aa46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aa50:	add    rdx,rdx
  42aa53:	mov    QWORD PTR [rsp+0x190],rdx
  42aa5b:	call   0x4294e8
  42aa60:	test   rax,rax
  42aa63:	je     0x42ad1f
  42aa69:	mov    QWORD PTR [rsp+0x188],rax
  42aa71:	mov    rcx,rax
  42aa74:	mov    r8,r12
  42aa77:	mov    eax,DWORD PTR [r8]
  42aa7a:	add    r8,0x4
  42aa7e:	lea    edx,[rax-0x1010101]
  42aa84:	not    eax
  42aa86:	and    edx,eax
  42aa88:	and    edx,0x80808080
  42aa8e:	je     0x42aa77
  42aa90:	mov    eax,edx
  42aa92:	shr    eax,0x10
  42aa95:	test   edx,0x8080
  42aa9b:	cmove  edx,eax
  42aa9e:	lea    rax,[r8+0x2]
  42aaa2:	cmove  r8,rax
  42aaa6:	add    dl,dl
  42aaa8:	mov    rax,QWORD PTR [rsp+0x198]
  42aab0:	sbb    r8,0x3
  42aab4:	mov    rdx,QWORD PTR [rsp+0x190]
  42aabc:	sub    r8,r12
  42aabf:	lea    r9,[r8+rax*1+0x2]
  42aac4:	cmp    r9,rdx
  42aac7:	ja     0x42aa50
  42aac9:	add    rcx,rax
  42aacc:	mov    rdx,r12
  42aacf:	add    r8,0x1
  42aad3:	call   0x429528
  42aad8:	mov    rdx,QWORD PTR [rsp+0x198]
  42aae0:	add    rdx,QWORD PTR [rsp+0x188]
  42aae8:	or     r9,0xffffffffffffffff
  42aaec:	xor    eax,eax
  42aaee:	mov    rcx,r9
  42aaf1:	mov    rdi,rdx
  42aaf4:	repnz scas al,BYTE PTR es:[rdi]
  42aaf6:	not    rcx
  42aaf9:	mov    WORD PTR [rdx+rcx*1-0x1],0xa
  42ab00:	mov    rdx,QWORD PTR [rsp+0x198]
  42ab08:	mov    rcx,r9
  42ab0b:	mov    rdi,rdx
  42ab0e:	add    rdi,QWORD PTR [rsp+0x188]
  42ab16:	repnz scas al,BYTE PTR es:[rdi]
  42ab18:	mov    rax,rcx
  42ab1b:	not    rax
  42ab1e:	lea    rax,[rdx+rax*1-0x1]
  42ab23:	mov    QWORD PTR [rsp+0x198],rax
  42ab2b:	jmp    0x42a6cc
  42ab30:	lea    rdx,[rip+0x1c8e]        # 0x42c7c5
  42ab37:	xor    ecx,ecx
  42ab39:	call   0x429470
  42ab3e:	lea    rcx,[rsp+0x164]
  42ab46:	lea    rdx,[rsp+0x188]
  42ab4e:	lea    r9,[rsp+0x198]
  42ab56:	lea    r8,[rsp+0x190]
  42ab5e:	mov    QWORD PTR [rsp+0x20],rcx
  42ab63:	mov    rcx,rax
  42ab66:	call   0x4018b0
  42ab6b:	jmp    0x42a6cc
  42ab70:	lea    rdx,[rip+0x1532]        # 0x42c0a9
  42ab77:	lea    rcx,[rip+0x1b98]        # 0x42c716
  42ab7e:	mov    r8d,0x36a
  42ab84:	call   0x4291e0
  42ab89:	jmp    0x42a33f
  42ab8e:	call   r15
  42ab91:	lea    rcx,[rip+0x1b86]        # 0x42c71e
  42ab98:	lea    r9,[rax+0x60]
  42ab9c:	mov    r8d,0x1a
  42aba2:	mov    edx,0x1
  42aba7:	call   0x429570
  42abac:	jmp    0x42a9f9
  42abb1:	lea    rcx,[rip+0x1998]        # 0x42c550
  42abb8:	call   0x429508
  42abbd:	jmp    0x429e65
  42abc2:	mov    rdi,QWORD PTR [rsp+0x118]
  42abca:	mov    rdx,rbp
  42abcd:	mov    rcx,rdi
  42abd0:	call   0x40cde0
  42abd5:	test   al,al
  42abd7:	je     0x42ad35
  42abdd:	mov    edx,r13d
  42abe0:	mov    rcx,rdi
  42abe3:	call   0x40cd10
  42abe8:	jmp    0x429fb5
  42abed:	mov    rcx,rbx
  42abf0:	call   0x401530
  42abf5:	jmp    0x42a11d
  42abfa:	mov    rsi,QWORD PTR [rip+0x1342f]        # 0x43e030
  42ac01:	call   QWORD PTR [rip+0x14e05]        # 0x43fa0c
  42ac07:	lea    rdx,[rip+0x1aa2]        # 0x42c6b0
  42ac0e:	lea    rcx,[rax+0x60]
  42ac12:	mov    r8,rsi
  42ac15:	call   0x429598
  42ac1a:	jmp    0x42a0fd
  42ac1f:	mov    rbx,QWORD PTR [rbx]
  42ac22:	call   QWORD PTR [rip+0x14de4]        # 0x43fa0c
  42ac28:	lea    rdx,[rip+0x1959]        # 0x42c588
  42ac2f:	lea    rcx,[rax+0x60]
  42ac33:	mov    r9,rbp
  42ac36:	mov    r8,rbx
  42ac39:	call   0x429598
  42ac3e:	mov    ecx,0x1
  42ac43:	call   0x4295c0
  42ac48:	mov    edx,0x1
  42ac4d:	mov    ecx,0x1
  42ac52:	call   0x4295c8
  42ac57:	test   rsi,rsi
  42ac5a:	mov    r14,rax
  42ac5d:	jne    0x429ec7
  42ac63:	mov    edx,0x1
  42ac68:	mov    ecx,0x80
  42ac6d:	call   0x4295c8
  42ac72:	mov    rsi,rax
  42ac75:	jmp    0x429ec7
  42ac7a:	mov    rax,QWORD PTR [rsp+0x118]
  42ac82:	lea    rcx,[rbx+0xb8]
  42ac89:	lea    rdx,[rax+0xb8]
  42ac90:	call   0x41f900
  42ac95:	test   rax,rax
  42ac98:	jne    0x42a0c6
  42ac9e:	jmp    0x42a09a
  42aca3:	lea    rdx,[rip+0x13ff]        # 0x42c0a9
  42acaa:	lea    rcx,[rip+0x19c0]        # 0x42c671
  42acb1:	mov    r8d,0x2ed
  42acb7:	call   0x4291e0
  42acbc:	jmp    0x42a02c
  42acc1:	test   BYTE PTR [rip+0x13370],0x20        # 0x43e038
  42acc8:	je     0x42acd2
  42acca:	mov    rcx,rbx
  42accd:	call   0x401530
  42acd2:	mov    rcx,r14
  42acd5:	call   0x404ce0
  42acda:	mov    rcx,QWORD PTR [rsp+0x118]
  42ace2:	call   0x4023f0
  42ace7:	mov    rcx,QWORD PTR [rsp+0x108]
  42acef:	call   0x402730
  42acf4:	call   QWORD PTR [rip+0x14d12]        # 0x43fa0c
  42acfa:	lea    rcx,[rip+0x19df]        # 0x42c6e0
  42ad01:	lea    r9,[rax+0x60]
  42ad05:	mov    r8d,0x2d
  42ad0b:	mov    edx,0x1
  42ad10:	call   0x429570
  42ad15:	mov    ecx,0x1
  42ad1a:	call   0x4295c0
  42ad1f:	lea    rcx,[rip+0x1a98]        # 0x42c7be
  42ad26:	call   0x429510
  42ad2b:	mov    ecx,0x1
  42ad30:	call   0x4295c0
  42ad35:	mov    rbx,QWORD PTR [rbx]
  42ad38:	call   QWORD PTR [rip+0x14cce]        # 0x43fa0c
  42ad3e:	lea    rdx,[rip+0x1919]        # 0x42c65e
  42ad45:	lea    rcx,[rax+0x60]
  42ad49:	mov    r8,rbx
  42ad4c:	call   0x429598
  42ad51:	mov    ecx,0x1
  42ad56:	call   0x4295c0
  42ad5b:	mov    rbx,QWORD PTR [rbx]
  42ad5e:	call   QWORD PTR [rip+0x14ca8]        # 0x43fa0c
  42ad64:	lea    rdx,[rip+0x18ad]        # 0x42c618
  42ad6b:	lea    rcx,[rax+0x60]
  42ad6f:	mov    r8,rbx
  42ad72:	call   0x429598
  42ad77:	mov    ecx,0x1
  42ad7c:	call   0x4295c0
  42ad81:	mov    rbx,QWORD PTR [rbx]
  42ad84:	call   QWORD PTR [rip+0x14c82]        # 0x43fa0c
  42ad8a:	lea    rdx,[rip+0x1857]        # 0x42c5e8
  42ad91:	lea    rcx,[rax+0x60]
  42ad95:	mov    r8,rbx
  42ad98:	call   0x429598
  42ad9d:	mov    ecx,0x1
  42ada2:	call   0x4295c0
  42ada7:	mov    edx,0x1
  42adac:	mov    ecx,0x80
  42adb1:	call   0x4295c8
  42adb6:	lea    rcx,[rip+0x1a40]        # 0x42c7fd
  42adbd:	xor    r9d,r9d
  42adc0:	mov    r8d,0x80
  42adc6:	mov    rdx,rax
  42adc9:	mov    rsi,rax
  42adcc:	call   0x426b00
  42add1:	jmp    0x429ec7
  42add6:	nop
  42add7:	nop
  42add8:	nop
  42add9:	nop
  42adda:	nop
  42addb:	nop
  42addc:	nop
  42addd:	nop
  42adde:	nop
  42addf:	nop
  42ade0:	mov    eax,DWORD PTR [rip+0x13692]        # 0x43e478
  42ade6:	test   eax,eax
  42ade8:	jne    0x42adeb
  42adea:	ret    
  42adeb:	jmp    0x426d40
  42adf0:	jmp    0x423c40
  42adf5:	nop
  42adf6:	nop
  42adf7:	nop
  42adf8:	nop
  42adf9:	nop
  42adfa:	nop
  42adfb:	nop
  42adfc:	nop
  42adfd:	nop
  42adfe:	nop
  42adff:	nop
  42ae00:	(bad)  
  42ae01:	(bad)  
  42ae02:	(bad)  
  42ae03:	(bad)  
  42ae04:	(bad)  
  42ae05:	(bad)  
  42ae06:	(bad)  
  42ae07:	inc    DWORD PTR [rax]
  42ae09:	add    BYTE PTR [rax],al
  42ae0b:	add    BYTE PTR [rax],al
  42ae0d:	add    BYTE PTR [rax],al
  42ae0f:	add    bh,bh
  42ae11:	(bad)  
  42ae12:	(bad)  
  42ae13:	(bad)  
  42ae14:	(bad)  
  42ae15:	(bad)  
  42ae16:	(bad)  
  42ae17:	jmp    rax
  42ae19:	lods   eax,DWORD PTR ds:[rsi]
  42ae1a:	rex.X add BYTE PTR [rax],al
  42ae1d:	add    BYTE PTR [rax],al
  42ae1f:	add    al,dh
  42ae21:	lods   eax,DWORD PTR ds:[rsi]
  42ae22:	rex.X add BYTE PTR [rax],al
	...

Disassembly of section .data:

000000000042b000 <.data>:
  42b000:	or     al,BYTE PTR [rax]
	...
  42b00e:	add    BYTE PTR [rax],al
  42b010:	jrcxz  0x42afda
  42b012:	rex.X add BYTE PTR [rax],al
  42b015:	add    BYTE PTR [rax],al
  42b017:	add    ch,ah
  42b019:	enter  0x42,0x0
  42b01d:	add    BYTE PTR [rax],al
  42b01f:	add    BYTE PTR [rcx],al
	...
  42b02d:	add    BYTE PTR [rax],al
  42b02f:	add    bh,bh
  42b031:	rex.WRXB add BYTE PTR [r8],r8b
	...
  42b040:	(bad)  
  42b041:	(bad)  
  42b042:	(bad)  
  42b043:	(bad)  
  42b044:	(bad)  
  42b045:	(bad)  
  42b046:	(bad)  
  42b047:	inc    DWORD PTR [rax]
  42b049:	add    BYTE PTR [rax],al
  42b04b:	add    BYTE PTR [rax],al
  42b04d:	add    BYTE PTR [rax],al
  42b04f:	add    BYTE PTR [rax],bl
  42b051:	scas   al,BYTE PTR es:[rdi]
  42b052:	rex.X add BYTE PTR [rax],al
	...
  42b05d:	add    BYTE PTR [rax],al
  42b05f:	add    bh,bh
  42b061:	(bad)  
  42b062:	(bad)  
  42b063:	(bad)  
  42b064:	(bad)  
  42b065:	(bad)  
  42b066:	(bad)  
  42b067:	inc    DWORD PTR [rax]
  42b069:	add    BYTE PTR [rax],al
  42b06b:	add    BYTE PTR [rax],al
  42b06d:	add    BYTE PTR [rax],al
  42b06f:	add    bh,bh
	...
  42b07d:	add    BYTE PTR [rax],al
  42b07f:	add    BYTE PTR [rdx],al
	...
  42b08d:	add    BYTE PTR [rax],al
  42b08f:	add    bh,bh
  42b091:	(bad)  
  42b092:	(bad)  
  42b093:	(bad)  
  42b094:	(bad)  
  42b095:	(bad)  
  42b096:	(bad)  
  42b097:	(bad)  
  42b098:	(bad)  
  42b099:	(bad)  
  42b09a:	(bad)  
  42b09b:	inc    DWORD PTR [rax]
  42b09d:	add    BYTE PTR [rax],al
  42b09f:	add    BYTE PTR [rbp+0x4386],dh
  42b0a5:	add    BYTE PTR [rax],al
  42b0a7:	add    BYTE PTR [rdi],bh
  42b0a9:	add    BYTE PTR [rax],al
  42b0ab:	add    BYTE PTR [rcx],al
  42b0ad:	add    BYTE PTR [rax],al
  42b0af:	add    BYTE PTR [rcx],al
	...
  42b0bd:	add    BYTE PTR [rax],al
  42b0bf:	add    bh,bh
  42b0c1:	(bad)  
  42b0c2:	(bad)  
  42b0c3:	inc    DWORD PTR [rax]
	...
  42b0cd:	add    BYTE PTR [rax],al
  42b0cf:	add    BYTE PTR [rax+0x4296],ah
  42b0d5:	add    BYTE PTR [rax],al
  42b0d7:	add    BYTE PTR [rax+0x4296],dh
  42b0dd:	add    BYTE PTR [rax],al
  42b0df:	add    BYTE PTR [rdx],dh
  42b0e1:	movabs ds:0x2b992ddf,al
  42b0ea:	add    BYTE PTR [rax],al
  42b0ec:	add    BYTE PTR [rax],al
  42b0ee:	add    BYTE PTR [rax],al
  42b0f0:	int    0x5d
  42b0f2:	and    dl,dl
  42b0f4:	data16 (bad) 
  42b0f6:	(bad)  
  42b0f7:	inc    DWORD PTR [rax]
  42b0f9:	add    BYTE PTR [rax],al
  42b0fb:	add    BYTE PTR [rax],al
  42b0fd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

000000000042c000 <.rdata>:
  42c000:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42c003:	outs   dx,BYTE PTR ds:[rsi]
  42c004:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  42c009:	and    BYTE PTR [edi+ebp*2+0x20],dh
  42c00e:	imul   ebp,DWORD PTR [rsi+0x73],0x636e6174
  42c015:	and    BYTE PTR gs:[rip+0x6e6f2073],ah        # 0x6eb1e08f
  42c01c:	and    BYTE PTR [rax+0x6f],dh
  42c01f:	jb     0x42c095
  42c021:	and    BYTE PTR [rip+0x25000a64],ah        # 0x2542ca8b
  42c027:	jae    0x42c033
  42c029:	add    BYTE PTR [rax],al
  42c02b:	add    BYTE PTR [rax],al
  42c02d:	add    BYTE PTR [rax],al
  42c02f:	add    BYTE PTR [rbp+0x73],cl
  42c032:	and    BYTE PTR [eip+0x73282064],ah        # 0x736ae09d
  42c039:	gs jbe 0x42c0a1
  42c03c:	jb     0x42c0a7
  42c03e:	je     0x42c0b9
  42c040:	and    BYTE PTR [rip+0x73202c64],ah        # 0x7362ecaa
  42c046:	je     0x42c0a9
  42c048:	je     0x42c0af
  42c04a:	and    BYTE PTR [rip+0x66202964],ah        # 0x6662e9b4
  42c050:	jb     0x42c0c1
  42c052:	ins    DWORD PTR es:[rdi],dx
  42c053:	and    BYTE PTR [rip+0x202c0073],ah        # 0x206ec0cc
  42c059:	push   rax
  42c05a:	jb     0x42c0cb
  42c05c:	movsxd esp,DWORD PTR [rbp+0x64]
  42c05f:	jne    0x42c0d3
  42c061:	and    BYTE PTR gs:[rip+0x4c200073],ah        # 0x4c62c0db
  42c068:	imul   ebp,DWORD PTR [rsi+0x65],0x642520
  42c06f:	cmp    cl,BYTE PTR [rdx]
  42c071:	or     DWORD PTR [rdx],esp
  42c073:	and    eax,0xa2273
  42c078:	rex.RB jb 0x42c0ed
  42c07b:	outs   dx,DWORD PTR ds:[rsi]
  42c07c:	jb     0x42c09e
  42c07e:	and    eax,0x73282064
  42c083:	gs jbe 0x42c0eb
  42c086:	jb     0x42c0f1
  42c088:	je     0x42c103
  42c08a:	and    BYTE PTR [rip+0xa3a2964],ah        # 0xa7ce9f4
  42c090:	or     DWORD PTR [rip+0x9000a73],esp        # 0x942cb09
  42c096:	rex.WRXB push r11
  42c098:	and    BYTE PTR [rbp+0x72],ah
  42c09b:	jb     0x42c10c
  42c09d:	jb     0x42c0bf
  42c09f:	and    eax,0x22202c64
  42c0a4:	and    eax,0xa2273
  42c0a9:	je     0x42c11e
  42c0ab:	jno    0x42c119
  42c0ad:	movsxd eax,DWORD PTR cs:[rax]
  42c0b0:	jae    0x42c0d2
  42c0b2:	es and BYTE PTR es:[rdi+0x70],ch
  42c0b7:	je     0x42c118
  42c0b9:	data16 ins BYTE PTR es:[rdi],dx
  42c0bb:	(bad)  
  42c0bc:	addr32 jae 0x42c0bf
  42c0bf:	and    BYTE PTR [rax],al
  42c0c1:	add    BYTE PTR [rax],al
  42c0c3:	add    BYTE PTR [rax],al
  42c0c5:	add    BYTE PTR [rax],al
  42c0c7:	add    BYTE PTR [rdi+0x61],dl
  42c0ca:	jb     0x42c13a
  42c0cc:	imul   ebp,DWORD PTR [rsi+0x67],0x6e69203a
  42c0d3:	jbe    0x42c136
  42c0d5:	ins    BYTE PTR es:[rdi],dx
  42c0d6:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x6f697470
  42c0de:	outs   dx,BYTE PTR ds:[rsi]
  42c0df:	and    BYTE PTR [rdi],ah
  42c0e1:	and    eax,0x66202773
  42c0e6:	outs   dx,DWORD PTR ds:[rsi]
  42c0e7:	jne    0x42c157
  42c0e9:	cmp    ah,BYTE PTR fs:[rax]
  42c0ec:	and    ah,BYTE PTR [rdi+0x6f]
  42c0ef:	and    ah,BYTE PTR [rax]
  42c0f1:	je     0x42c165
  42c0f3:	gs (bad) 
  42c0f5:	je     0x42c15c
  42c0f7:	and    BYTE PTR fs:[rcx+0x73],ah
  42c0fb:	and    BYTE PTR [rbx+0x69],dh
  42c0fe:	ins    DWORD PTR es:[rdi],dx
  42c0ff:	jo     0x42c16d
  42c101:	and    BYTE PTR gs:[rbx+0x51],dl
  42c105:	rex.WR or r8b,BYTE PTR [rax]
  42c108:	pushw  0x714c
  42c10c:	je     0x42c184
  42c10e:	add    BYTE PTR [rax],al
  42c110:	add    BYTE PTR [rdi-0x3],dl
  42c113:	call   QWORD PTR [rax]
  42c115:	push   rdi
  42c116:	std    
  42c117:	push   rax
  42c119:	push   rsi
  42c11a:	std    
  42c11b:	call   QWORD PTR [rax]
  42c11d:	push   rdi
  42c11e:	std    
  42c11f:	call   QWORD PTR [rax]
  42c121:	push   rdi
  42c122:	std    
  42c123:	call   QWORD PTR [rax]
  42c125:	push   rdi
  42c126:	std    
  42c127:	call   QWORD PTR [rax]
  42c129:	push   rdi
  42c12a:	std    
  42c12b:	call   QWORD PTR [rax]
  42c12d:	push   rdi
  42c12e:	std    
  42c12f:	call   QWORD PTR [rax]
  42c131:	push   rdi
  42c132:	std    
  42c133:	call   QWORD PTR [rax]
  42c135:	push   rdi
  42c136:	std    
  42c137:	call   QWORD PTR [rax]
  42c139:	push   rdi
  42c13a:	std    
  42c13b:	jmp    rax
  42c13d:	push   rsi
  42c13e:	std    
  42c13f:	call   QWORD PTR [rax]
  42c141:	push   rdi
  42c142:	std    
  42c143:	call   QWORD PTR [rax]
  42c145:	push   rdi
  42c146:	std    
  42c147:	call   rax
  42c149:	push   rsi
  42c14a:	std    
  42c14b:	call   QWORD PTR [rax]
  42c14d:	push   rdi
  42c14e:	std    
  42c14f:	inc    eax
  42c151:	push   rsi
  42c152:	std    
  42c153:	push   QWORD PTR [rdx+0x0]
  42c156:	add    BYTE PTR [rax],al
  42c158:	push   rbp
  42c159:	outs   dx,BYTE PTR ds:[rsi]
  42c15a:	(bad)  
  42c15b:	(bad)  
  42c15c:	ins    BYTE PTR es:[rdi],dx
  42c15d:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  42c162:	outs   dx,DWORD PTR ds:[rsi]
  42c163:	jo     0x42c1ca
  42c165:	outs   dx,BYTE PTR ds:[rsi]
  42c166:	and    BYTE PTR [rcx+0x6e],ch
  42c169:	jo     0x42c1e0
  42c16b:	je     0x42c18d
  42c16d:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2527
  42c174:	jae    0x42c19d
  42c176:	cmp    ah,BYTE PTR [rax]
  42c178:	and    eax,0x79000a73
  42c17d:	gs jae 0x42c180
  42c180:	outs   dx,BYTE PTR ds:[rsi]
  42c181:	outs   dx,DWORD PTR ds:[rsi]
  42c182:	add    BYTE PTR [rbp+0x6e],dh
  42c185:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42c189:	outs   dx,BYTE PTR ds:[rsi]
  42c18a:	add    BYTE PTR [rbx+rdx*2+0x51],dl
  42c18e:	rex.WR add BYTE PTR [rax],r8b
  42c191:	jae    0x42c193
  42c193:	push   rbp
  42c194:	outs   dx,BYTE PTR ds:[rsi]
  42c195:	(bad)  
  42c196:	(bad)  
  42c197:	ins    BYTE PTR es:[rdi],dx
  42c198:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  42c19d:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  42c1a4:	imul   edi,DWORD PTR [rdx+0x65],0x636f7320
  42c1ab:	imul   esp,DWORD PTR [rbp+0x74],0x73
  42c1af:	or     al,BYTE PTR [rax]
  42c1b1:	push   rsi
  42c1b2:	gs jb  0x42c228
  42c1b5:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  42c1bc:	add    BYTE PTR [rax],al
  42c1be:	add    BYTE PTR [rax],al
  42c1c0:	rex.XB outs dx,DWORD PTR ds:[rsi]
  42c1c2:	ins    DWORD PTR es:[rdi],dx
  42c1c3:	jo     0x42c22e
  42c1c5:	ins    BYTE PTR es:[rdi],dx
  42c1c6:	gs sub eax,0x656d6974
  42c1cc:	and    BYTE PTR [rbx+0x65],dh
  42c1cf:	je     0x42c245
  42c1d1:	imul   ebp,DWORD PTR [rsi+0x67],0x65282073
  42c1d8:	jae    0x42c24e
  42c1da:	(bad)  
  42c1db:	(bad)  
  42c1dc:	ins    BYTE PTR es:[rdi],dx
  42c1dd:	imul   esi,DWORD PTR [rbx+0x68],0x77206465
  42c1e4:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x20656874
  42c1ec:	and    ah,BYTE PTR [rbx+0x6f]
  42c1ef:	outs   dx,BYTE PTR ds:[rsi]
  42c1f0:	imul   sp,WORD PTR [rdi+0x75],0x6572
  42c1f6:	and    ah,BYTE PTR [rax]
  42c1f8:	jae    0x42c25d
  42c1fa:	jb     0x42c265
  42c1fc:	jo     0x42c272
  42c1fe:	sub    DWORD PTR [rax],eax
  42c200:	and    eax,0x33250a73
  42c205:	xor    eax,0x25203a73
  42c20a:	jae    0x42c216
  42c20c:	and    eax,0x3a733533
  42c211:	and    BYTE PTR [rip+0x33250a73],ah        # 0x3367cc8a
  42c217:	xor    eax,0x25203a73
  42c21c:	jae    0x42c228
  42c21e:	and    eax,0x3a733533
  42c223:	and    BYTE PTR [rip+0x33250a73],ah        # 0x3367cc9c
  42c229:	xor    eax,0x25203a73
  42c22e:	jae    0x42c23a
  42c230:	and    eax,0x3a733533
  42c235:	and    BYTE PTR [rip+0x33250a73],ah        # 0x3367ccae
  42c23b:	xor    eax,0x25203a73
  42c240:	jae    0x42c24c
  42c242:	and    eax,0x3a733533
  42c247:	and    BYTE PTR [rip+0x33250a73],ah        # 0x3367ccc0
  42c24d:	xor    eax,0x25203a73
  42c252:	jae    0x42c25e
  42c254:	and    eax,0x3a733533
  42c259:	and    BYTE PTR [rip+0x33250a73],ah        # 0x3367ccd2
  42c25f:	xor    eax,0x25203a73
  42c264:	jae    0x42c270
  42c266:	and    eax,0x3a733533
  42c26b:	and    BYTE PTR [rip+0x33250a73],ah        # 0x3367cce4
  42c271:	xor    eax,0x25203a73
  42c276:	jae    0x42c282
  42c278:	and    eax,0x3a733533
  42c27d:	and    BYTE PTR [rip+0x4d000a73],ah        # 0x4d42ccf6
  42c283:	push   r10
  42c285:	push   rbx
  42c286:	add    BYTE PTR [rdi+0x6e],al
  42c289:	jne    0x42c2df
  42c28b:	rex.WR push rbx
  42c28d:	add    BYTE PTR [rdi+0x70],cl
  42c290:	outs   dx,BYTE PTR gs:[rsi]
  42c292:	push   rbx
  42c293:	push   rbx
  42c294:	rex.WR add BYTE PTR [rbx+0x65],r9b
  42c298:	jb     0x42c2fc
  42c29a:	gs jb  0x42c30c
  42c29d:	jae    0x42c29f
  42c29f:	push   rbx
  42c2a0:	push   rbx
  42c2a1:	push   rax
  42c2a2:	rex.WB and BYTE PTR [r10],spl
  42c2a5:	je     0x42c319
  42c2a7:	jne    0x42c31c
  42c2a9:	je     0x42c310
  42c2ab:	and    ah,BYTE PTR fs:[rax]
  42c2ae:	ins    BYTE PTR es:[rdi],dx
  42c2af:	outs   dx,DWORD PTR ds:[rsi]
  42c2b0:	imul   ebp,DWORD PTR [esi+0x73],0x696e7500
  42c2b8:	js     0x42c329
  42c2ba:	fs (bad) 
  42c2bd:	add    BYTE PTR [rcx+0x4f],ch
  42c2c0:	rex.R
  42c2c1:	rex.X
  42c2c2:	add    BYTE PTR [r12+r8*2+0x53],dl
  42c2c7:	and    BYTE PTR [rsi+0x65],dh
  42c2ca:	jb     0x42c33f
  42c2cc:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f636900
  42c2d3:	outs   dx,BYTE PTR ds:[rsi]
  42c2d4:	jbe    0x42c2f6
  42c2d6:	ins    BYTE PTR es:[rdi],dx
  42c2d7:	imul   esp,DWORD PTR [rdx+0x72],0x797261
  42c2de:	push   rsp
  42c2df:	push   0x64616572
  42c2e4:	and    BYTE PTR [rbx+0x61],dh
  42c2e7:	data16 gs je 0x42c364
  42c2eb:	add    BYTE PTR [rbx+0x79],dl
  42c2ee:	(bad)  
  42c2f0:	jae    0x42c357
  42c2f2:	and    BYTE PTR [rdx+0x69],ah
  42c2f5:	outs   dx,BYTE PTR ds:[rsi]
  42c2f6:	(bad)  
  42c2f7:	jb     0x42c372
  42c2f9:	and    BYTE PTR [rbx+0x6f],ah
  42c2fc:	ins    DWORD PTR es:[rdi],dx
  42c2fd:	jo     0x42c360
  42c2ff:	je     0x42c36a
  42c301:	(bad)  
  42c302:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x534d0079
  42c30a:	and    BYTE PTR [rdx+riz*2+0x2d],ah
  42c30e:	ins    BYTE PTR es:[rdi],dx
  42c30f:	imul   esp,DWORD PTR [rdx+0x20],0x72756f73
  42c316:	movsxd esp,DWORD PTR [rbp+0x20]
  42c319:	movsxd ebp,DWORD PTR [rdi+0x6d]
  42c31c:	jo     0x42c37f
  42c31e:	je     0x42c389
  42c320:	(bad)  
  42c321:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x72660079
  42c329:	gs gs je 0x42c391
  42c32d:	jae    0x42c35d
  42c32f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42c332:	data16 and BYTE PTR [rcx+rbp*2+0x72],ah
  42c337:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
  42c33c:	jns    0x42c33e
  42c33e:	add    BYTE PTR [rax],al
  42c340:	push   rbp
  42c341:	jae    0x42c3a4
  42c343:	cmp    cl,BYTE PTR gs:[ecx]
  42c347:	and    eax,0x2d5b2073
  42c34c:	(bad)  
  42c34d:	and    BYTE PTR [rcx+riz*2],bh
  42c350:	jo     0x42c3c2
  42c352:	outs   dx,BYTE PTR ds:[rsi]
  42c353:	(bad)  
  42c354:	ins    DWORD PTR es:[rdi],dx
  42c355:	gs ds pop rbp
  42c358:	and    BYTE PTR [rbx+0x2d],bl
  42c35b:	push   rbx
  42c35c:	and    BYTE PTR [rbx+rsi*2],bh
  42c35f:	gs jb  0x42c3d8
  42c362:	gs jb  0x42c3a3
  42c365:	and    BYTE PTR [rax+riz*1+0x2d],bh
  42c369:	rex.W and BYTE PTR [rax+rbp*2],dil
  42c36d:	outs   dx,DWORD PTR ds:[rsi]
  42c36e:	jae    0x42c3e4
  42c370:	outs   dx,BYTE PTR ds:[rsi]
  42c371:	(bad)  
  42c372:	ins    DWORD PTR es:[rdi],dx
  42c373:	gs and BYTE PTR ds:[rip+0x703c2070],ch        # 0x707ee3eb
  42c37b:	outs   dx,DWORD PTR ds:[rsi]
  42c37c:	jb     0x42c3f2
  42c37e:	ds pop rbp
  42c380:	and    BYTE PTR [rip+0x753c2055],ch        # 0x757ee3db
  42c386:	jae    0x42c3ed
  42c388:	jb     0x42c3f8
  42c38a:	(bad)  
  42c38b:	ins    DWORD PTR es:[rdi],dx
  42c38c:	gs and BYTE PTR ds:[rbx+0x2d],bl
  42c391:	push   rax
  42c392:	and    BYTE PTR [rax+rsi*2],bh
  42c395:	(bad)  
  42c396:	jae    0x42c40b
  42c398:	ja     0x42c409
  42c39a:	jb     0x42c400
  42c39c:	ds pop rbp
  42c39e:	and    BYTE PTR [rbx+0x2d],bl
  42c3a1:	rex.WB and BYTE PTR [r11+riz*2],dil
  42c3a5:	outs   dx,DWORD PTR ds:[rsi]
  42c3a6:	outs   dx,BYTE PTR ds:[rsi]
  42c3a7:	imul   sp,WORD PTR [rdi+0x20],0x6966
  42c3ad:	ins    BYTE PTR es:[rdi],dx
  42c3ae:	gs ds pop rbp
  42c3b1:	and    BYTE PTR [rbx+0x2d],bl
  42c3b4:	outs   dx,DWORD PTR ds:[rsi]
  42c3b5:	and    BYTE PTR [rdi+rbp*2],bh
  42c3b8:	jo     0x42c42e
  42c3ba:	imul   ebp,DWORD PTR [rdi+0x6e],0x205d3e73
  42c3c1:	pop    rbx
  42c3c2:	sub    eax,0x65642074
  42c3c7:	ins    BYTE PTR es:[rdi],dx
  42c3c8:	imul   ebp,DWORD PTR [rbp+0x5d],0x722d5b20
  42c3cf:	and    BYTE PTR [rbp+riz*2+0x6c],ah
  42c3d3:	imul   ebp,DWORD PTR [rbp+0x5d],0x442d5b20
  42c3da:	and    BYTE PTR [rcx+riz*2+0x74],ah
  42c3de:	(bad)  
  42c3df:	(bad)  
  42c3e1:	jae    0x42c448
  42c3e3:	pop    rbp
  42c3e4:	or     cl,BYTE PTR [rcx]
  42c3e6:	and    eax,0x432d2073
  42c3eb:	or     cl,BYTE PTR [rdi+0x70]
  42c3ee:	je     0x42c459
  42c3f0:	outs   dx,DWORD PTR ds:[rsi]
  42c3f1:	outs   dx,BYTE PTR ds:[rsi]
  42c3f2:	jae    0x42c42e
  42c3f4:	or     cl,BYTE PTR [rcx]
  42c3f6:	or     WORD PTR [rdi+rbp*2+0x20],ax
  42c3fb:	outs   dx,BYTE PTR ds:[rsi]
  42c3fc:	outs   dx,DWORD PTR ds:[rsi]
  42c3fd:	je     0x42c41f
  42c3ff:	jo     0x42c473
  42c401:	imul   ebp,DWORD PTR [rsi+0x74],0x6f6f6620
  42c408:	je     0x42c46f
  42c40a:	jb     0x42c416
  42c40c:	or     DWORD PTR [rax+0x9],ebp
  42c40f:	rex.R outs dx,DWORD PTR ds:[rsi]
  42c411:	and    BYTE PTR [rsi+0x6f],ch
  42c414:	je     0x42c436
  42c416:	jo     0x42c48a
  42c418:	imul   ebp,DWORD PTR [rsi+0x74],0x61656820
  42c41f:	fs gs jb 0x42c42d
  42c423:	or     DWORD PTR [rcx+rcx*1+0x50],esi
  42c427:	jb     0x42c492
  42c429:	outs   dx,BYTE PTR ds:[rsi]
  42c42a:	je     0x42c44c
  42c42c:	je     0x42c497
  42c42e:	ins    DWORD PTR es:[rdi],dx
  42c42f:	and    BYTE PTR gs:[rcx+0x6e],ch
  42c433:	outs   dx,WORD PTR ds:[rsi]
  42c435:	jb     0x42c4a4
  42c437:	(bad)  
  42c438:	je     0x42c4a3
  42c43a:	outs   dx,DWORD PTR ds:[rsi]
  42c43b:	outs   dx,BYTE PTR ds:[rsi]
  42c43c:	jae    0x42c448
  42c43e:	or     DWORD PTR [rsi+0x9],esi
  42c441:	push   rax
  42c442:	jb     0x42c4ad
  42c444:	outs   dx,BYTE PTR ds:[rsi]
  42c445:	je     0x42c467
  42c447:	push   rsp
  42c448:	rex.R push rbx
  42c44a:	and    BYTE PTR [rsi+0x65],dh
  42c44d:	jb     0x42c4c2
  42c44f:	imul   ebp,DWORD PTR [rdi+0x6e],0x971090a
  42c456:	push   rcx
  42c457:	jne    0x42c4c2
  42c459:	gs je  0x42c466
  42c45c:	or     cl,BYTE PTR [rcx]
  42c45e:	rex.R
  42c45f:	gs ins BYTE PTR es:[rdi],dx
  42c461:	imul   ebp,DWORD PTR [rbp+0x69],0x73726574
  42c468:	and    BYTE PTR [rbx+0x61],ah
  42c46b:	outs   dx,BYTE PTR ds:[rsi]
  42c46c:	and    BYTE PTR [rdx+0x65],ah
  42c46f:	and    BYTE PTR [rbp+0x75],ch
  42c472:	ins    BYTE PTR es:[rdi],dx
  42c473:	je     0x42c4de
  42c475:	sub    eax,0x72616863
  42c47a:	and    BYTE PTR [rbx+0x74],dh
  42c47d:	jb     0x42c4e8
  42c47f:	outs   dx,BYTE PTR ds:[rsi]
  42c480:	addr32 jae 0x42c4a3
  42c483:	(bad)  
  42c484:	jo     0x42c4f6
  42c486:	jb     0x42c4f7
  42c488:	jo     0x42c4fc
  42c48a:	imul   esp,DWORD PTR [rcx+0x74],0x20796c65
  42c491:	gs jae 0x42c4f7
  42c494:	(bad)  
  42c495:	jo     0x42c4fc
  42c497:	and    BYTE PTR fs:[rsi+0x6f],ah
  42c49b:	jb     0x42c4bd
  42c49d:	jns    0x42c50e
  42c49f:	jne    0x42c513
  42c4a1:	and    BYTE PTR [rbx+0x68],dh
  42c4a4:	gs ins BYTE PTR es:[rdi],dx
  42c4a6:	ins    BYTE PTR es:[rdi],dx
  42c4a7:	or     cl,BYTE PTR cs:[rcx]
  42c4aa:	rex.R
  42c4ab:	gs data16 (bad) 
  42c4ae:	jne    0x42c51c
  42c4b0:	je     0x42c4d2
  42c4b2:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42c4b5:	jne    0x42c524
  42c4b7:	outs   dx,BYTE PTR ds:[rsi]
  42c4b8:	and    BYTE PTR [rbp+riz*2+0x6c],ah
  42c4bc:	imul   ebp,DWORD PTR [rbp+0x69],0x20726f74
  42c4c3:	imul   esi,DWORD PTR [rbx+0x20],0x6261743c
  42c4ca:	cmp    esp,DWORD PTR ds:[rax]
  42c4cd:	fs gs data16 (bad) 
  42c4d1:	jne    0x42c53f
  42c4d3:	je     0x42c4f5
  42c4d5:	jb     0x42c546
  42c4d7:	ja     0x42c4f9
  42c4d9:	fs gs ins BYTE PTR es:[rdi],dx
  42c4dc:	imul   ebp,DWORD PTR [rbp+0x69],0x20726574
  42c4e3:	imul   esi,DWORD PTR [rbx+0x20],0x77656e3c
  42c4ea:	ins    BYTE PTR es:[rdi],dx
  42c4eb:	imul   ebp,DWORD PTR [rsi+0x65],0x61000a3e
  42c4f2:	cmp    cl,BYTE PTR [rax+0x3a]
  42c4f5:	push   rbx
  42c4f6:	cmp    cl,BYTE PTR [rcx+0x3a]
  42c4f9:	rex.WX cmp dl,BYTE PTR [rax+0x3a]
  42c4fd:	push   rbp
  42c4fe:	cmp    dh,BYTE PTR [rax+0x3a]
  42c501:	rex.XB outs dx,DWORD PTR ds:[rsi]
  42c503:	cmp    dh,BYTE PTR [rdx+rdi*1+0x72]
  42c507:	cmp    al,BYTE PTR [rdx+rdi*1+0x4c]
  42c50b:	jbe    0x42c50d
  42c50d:	push   rsp
  42c50e:	rex.R push rbx
  42c510:	rex.R push rbp
  42c512:	rex.WRB push r8
  42c514:	add    BYTE PTR [rip+0x6e692e73],ah        # 0x6eabf38d
  42c51a:	jae    0x42c590
  42c51c:	(bad)  
  42c51d:	outs   dx,BYTE PTR ds:[rsi]
  42c51e:	movsxd esp,DWORD PTR [rbp+0x73]
  42c521:	add    BYTE PTR [rax],al
  42c523:	add    BYTE PTR [rax],al
  42c525:	add    BYTE PTR [rax],al
  42c527:	add    BYTE PTR [rip+0x65203a73],ah        # 0x6562ffa0
  42c52d:	jb     0x42c5a1
  42c52f:	outs   dx,DWORD PTR ds:[rsi]
  42c530:	jb     0x42c56c
  42c532:	and    BYTE PTR [rbp+0x69],cl
  42c535:	jae    0x42c5aa
  42c537:	imul   ebp,DWORD PTR [rsi+0x67],0x67726120
  42c53e:	jne    0x42c5ad
  42c540:	outs   dx,BYTE PTR gs:[rsi]
  42c542:	je     0x42c564
  42c544:	sub    eax,0x726f2053
  42c549:	and    BYTE PTR [rip+0xa48],ch        # 0x42cf97
  42c54f:	add    BYTE PTR [rbp+0x69],cl
  42c552:	jae    0x42c5c7
  42c554:	imul   ebp,DWORD PTR [rsi+0x67],0x67726120
  42c55b:	jne    0x42c5ca
  42c55d:	outs   dx,BYTE PTR gs:[rsi]
  42c55f:	je     0x42c581
  42c561:	sub    eax,0x6c202c70
  42c566:	outs   dx,DWORD PTR ds:[rsi]
  42c567:	outs   dx,DWORD PTR ds:[rsi]
  42c568:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  42c56c:	and    BYTE PTR [rsi+0x6f],ah
  42c56f:	jb     0x42c591
  42c571:	fs gs data16 (bad) 
  42c575:	jne    0x42c5e3
  42c577:	je     0x42c599
  42c579:	imul   ebp,DWORD PTR [rsi+0x73],0x636e6174
  42c580:	and    BYTE PTR gs:[rsi],ch
  42c583:	cs and BYTE PTR cs:[rax],al
  42c587:	add    BYTE PTR [rip+0x6e203a73],ah        # 0x6e630000
  42c58d:	outs   dx,DWORD PTR ds:[rsi]
  42c58e:	and    BYTE PTR [rbp+riz*2+0x66],ah
  42c592:	(bad)  
  42c593:	jne    0x42c601
  42c595:	je     0x42c5b7
  42c597:	jo     0x42c608
  42c599:	jb     0x42c60f
  42c59b:	and    BYTE PTR [rax+0x72],dh
  42c59e:	outs   dx,DWORD PTR ds:[rsi]
  42c59f:	jbe    0x42c60a
  42c5a1:	fs gs and BYTE PTR fs:[rdx+0x79],ah
  42c5a7:	and    BYTE PTR [rax+0x6f],ch
  42c5aa:	jae    0x42c620
  42c5ac:	and    BYTE PTR [rip+0x4d000a73],ah        # 0x4d42d025
  42c5b2:	push   rbx
  42c5b3:	push   rbx
  42c5b4:	push   rcx
  42c5b5:	rex.WR push rbx
  42c5b7:	rex.RB push r10
  42c5b9:	push   rsi
  42c5ba:	rex.RB push r10
  42c5bc:	add    BYTE PTR [rax],al
  42c5be:	add    BYTE PTR [rax],al
  42c5c0:	outs   dx,WORD PTR ds:[rsi]
  42c5c2:	jne    0x42c632
  42c5c4:	and    BYTE PTR fs:[rbp+riz*2+0x66],ah
  42c5c9:	(bad)  
  42c5ca:	jne    0x42c638
  42c5cc:	je     0x42c5ee
  42c5ce:	imul   ebp,DWORD PTR [rsi+0x73],0x636e6174
  42c5d5:	gs sub al,0x20
  42c5d8:	jo     0x42c649
  42c5da:	jb     0x42c650
  42c5dc:	and    BYTE PTR [rip+0xa64],ah        # 0x42d046
  42c5e2:	add    BYTE PTR [rax],al
  42c5e4:	add    BYTE PTR [rax],al
  42c5e6:	add    BYTE PTR [rax],al
  42c5e8:	and    eax,0x6d203a73
  42c5ed:	imul   esi,DWORD PTR [rbx+0x73],0x20676e69
  42c5f4:	fs gs ins BYTE PTR es:[rdi],dx
  42c5f7:	imul   ebp,DWORD PTR [rbp+0x69],0x20726574
  42c5fe:	outs   dx,WORD PTR ds:[rsi]
  42c600:	jb     0x42c622
  42c602:	sub    eax,0x63282074
  42c607:	push   0x206b6365
  42c60c:	gs jae 0x42c672
  42c60f:	(bad)  
  42c610:	jo     0x42c67b
  42c612:	outs   dx,BYTE PTR ds:[rsi]
  42c613:	sub    DWORD PTR [edx],ecx
  42c616:	add    BYTE PTR [rax],al
  42c618:	and    eax,0x6d203a73
  42c61d:	imul   esi,DWORD PTR [rbx+0x73],0x20676e69
  42c624:	fs gs ins BYTE PTR es:[rdi],dx
  42c627:	imul   ebp,DWORD PTR [rbp+0x69],0x20726574
  42c62e:	outs   dx,WORD PTR ds:[rsi]
  42c630:	jb     0x42c652
  42c632:	sub    eax,0x63282072
  42c637:	push   0x206b6365
  42c63c:	gs jae 0x42c6a2
  42c63f:	(bad)  
  42c640:	jo     0x42c6ab
  42c642:	outs   dx,BYTE PTR ds:[rsi]
  42c643:	sub    DWORD PTR [edx],ecx
  42c646:	add    BYTE PTR [rsp+rax*2+0x53],dl
  42c64a:	sub    eax,0x7262694c
  42c64f:	(bad)  
  42c650:	jb     0x42c6cb
  42c652:	add    BYTE PTR [rbp+0x73],dh
  42c655:	pop    rdi
  42c656:	outs   dx,BYTE PTR gs:[rsi]
  42c658:	ins    BYTE PTR es:[edi],dx
  42c65a:	imul   esi,DWORD PTR [rbx+0x68],0x3a732500
  42c661:	and    BYTE PTR [rdi+0x75],ch
  42c664:	je     0x42c686
  42c666:	outs   dx,DWORD PTR ds:[rsi]
  42c667:	data16 and BYTE PTR [rbp+0x65],ch
  42c66b:	ins    DWORD PTR es:[rdi],dx
  42c66c:	outs   dx,DWORD PTR ds:[rsi]
  42c66d:	jb     0x42c6e8
  42c66f:	or     al,BYTE PTR [rax]
  42c671:	je     0x42c6d7
  42c673:	jae    0x42c675
  42c675:	ins    BYTE PTR es:[rdi],dx
  42c676:	outs   dx,DWORD PTR ds:[rsi]
  42c677:	movsxd esp,DWORD PTR [rcx+0x6c]
  42c67a:	and    BYTE PTR gs:[rcx+0x73],ch
  42c67e:	and    BYTE PTR [rdx],ah
  42c680:	and    eax,0xa2273
  42c685:	rex.WB push r11
  42c687:	rex.WRXB sub rax,0x39353838
  42c68d:	sub    eax,0x73750031
  42c692:	imul   ebp,DWORD PTR [rsi+0x67],0x66656420
  42c699:	(bad)  
  42c69a:	jne    0x42c708
  42c69c:	je     0x42c6be
  42c69e:	movsxd ebp,DWORD PTR [rax+0x61]
  42c6a1:	jb     0x42c716
  42c6a3:	gs je  0x42c6c6
  42c6a6:	and    ah,BYTE PTR [rip+0xa2273]        # 0x4ce91f
  42c6ac:	add    BYTE PTR [rax],al
  42c6ae:	add    BYTE PTR [rax],al
  42c6b0:	push   rbx
  42c6b1:	gs je  0x42c728
  42c6b4:	imul   ebp,DWORD PTR [rsi+0x67],0x20732520
  42c6bb:	(bad)  
  42c6bc:	jae    0x42c6de
  42c6be:	fs gs data16 (bad) 
  42c6c2:	jne    0x42c730
  42c6c4:	je     0x42c6e6
  42c6c6:	fs (bad) 
  42c6c8:	je     0x42c72b
  42c6ca:	(bad)  
  42c6cc:	jae    0x42c733
  42c6ce:	and    BYTE PTR [rcx+0x6e],ch
  42c6d1:	and    BYTE PTR [rdi+rbp*2+0x67],ch
  42c6d5:	imul   ebp,DWORD PTR [rsi+0x20],0x6b636170
  42c6dc:	gs je  0x42c6e9
  42c6df:	add    BYTE PTR [rax+rbp*2+0x65],dl
  42c6e3:	jb     0x42c74a
  42c6e5:	and    BYTE PTR [rdi+0x61],dh
  42c6e8:	jae    0x42c70a
  42c6ea:	(bad)  
  42c6eb:	and    BYTE PTR [rax+0x72],dh
  42c6ee:	outs   dx,DWORD PTR ds:[rsi]
  42c6ef:	(bad)  
  42c6f0:	ins    BYTE PTR es:[rdi],dx
  42c6f1:	gs ins DWORD PTR es:[rdi],dx
  42c6f3:	and    BYTE PTR [rbx+0x6f],ah
  42c6f6:	outs   dx,BYTE PTR ds:[rsi]
  42c6f7:	outs   dx,BYTE PTR ds:[rsi]
  42c6f8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  42c6fd:	and    BYTE PTR [edi+ebp*2+0x20],dh
  42c702:	je     0x42c76c
  42c704:	and    BYTE PTR gs:[rbx+0x65],dh
  42c708:	jb     0x42c780
  42c70a:	gs jb  0x42c717
  42c70d:	add    BYTE PTR [rip+0x203e64],ah        # 0x630577
  42c713:	and    eax,0x6f670073
  42c718:	pop    rdi
  42c719:	ins    BYTE PTR es:[rdi],dx
  42c71a:	imul   ebp,DWORD PTR [rsi+0x65],0x73647400
  42c721:	pop    rdi
  42c722:	jae    0x42c799
  42c724:	(bad)  
  42c725:	ins    DWORD PTR es:[rdi],dx
  42c726:	imul   esi,DWORD PTR [rdi+rbx*2+0x71],0x79726575
  42c72e:	sub    BYTE PTR [rcx],ch
  42c730:	and    BYTE PTR [rsi+0x61],ah
  42c733:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x554e000a
  42c73b:	rex.WR
  42c73c:	rex.WR add BYTE PTR [rax],r13b
  42c73f:	and    eax,0x6f722064
  42c744:	ja     0x42c76b
  42c746:	jae    0x42c768
  42c748:	(bad)  
  42c749:	data16 movsxd si,DWORD PTR gs:[rbp+riz*2+0x64]
  42c750:	sub    DWORD PTR [rdx],ecx
  42c752:	add    BYTE PTR [rax],ch
  42c754:	jb     0x42c7bb
  42c756:	je     0x42c7cd
  42c758:	jb     0x42c7c8
  42c75a:	and    BYTE PTR [rbx+0x74],dh
  42c75d:	(bad)  
  42c75e:	je     0x42c7d5
  42c760:	jae    0x42c782
  42c762:	cmp    eax,0x29642520
  42c767:	or     al,BYTE PTR [rax]
  42c769:	and    eax,0x64252e64
  42c76e:	add    BYTE PTR [rbx+rsi*2+0x71],dh
  42c772:	ins    BYTE PTR es:[rdi],dx
  42c773:	add    BYTE PTR [rbp+0x73],dh
  42c776:	imul   ebp,DWORD PTR [rsi+0x67],0x53445420
  42c77d:	and    BYTE PTR [rsi+0x65],dh
  42c780:	jb     0x42c7f5
  42c782:	imul   ebp,DWORD PTR [rdi+0x6e],0x732520
  42c789:	add    BYTE PTR [rax],al
  42c78b:	add    BYTE PTR [rax],al
  42c78d:	add    BYTE PTR [rax],al
  42c78f:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  42c793:	(bad)  
  42c794:	ins    BYTE PTR es:[rdi],dx
  42c795:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  42c799:	and    BYTE PTR gs:[rsi+0x6f],ah
  42c79d:	jb     0x42c7bf
  42c79f:	jo     0x42c813
  42c7a1:	outs   dx,DWORD PTR ds:[rsi]
  42c7a2:	movsxd esp,DWORD PTR [rbp+0x73]
  42c7a5:	jae    0x42c810
  42c7a7:	outs   dx,BYTE PTR ds:[rsi]
  42c7a8:	and    BYTE PTR [eip+0x6f722064],ah        # 0x6fb4e813
  42c7af:	ja     0x42c824
  42c7b1:	cmp    ah,BYTE PTR [rax]
  42c7b3:	and    eax,0x6d20646c
  42c7b8:	jae    0x42c81f
  42c7ba:	movsxd esi,DWORD PTR [rbx+0xa]
  42c7bd:	add    BYTE PTR [rbx+rsi*2+0x71],dh
  42c7c1:	ins    BYTE PTR es:[rdi],dx
  42c7c2:	cmp    ah,BYTE PTR [rax]
  42c7c4:	add    BYTE PTR [rax],ah
  42c7c6:	or     DWORD PTR [rax],eax
  42c7c8:	gs js  0x42c834
  42c7cb:	je     0x42c7cd
  42c7cd:	jno    0x42c844
  42c7cf:	imul   esi,DWORD PTR [rax+rax*1+0x62],0x76006579
  42c7d7:	gs jb  0x42c84d
  42c7da:	imul   ebp,DWORD PTR [rdi+0x6e],0x69737500
  42c7e1:	outs   dx,BYTE PTR ds:[rsi]
  42c7e2:	and    BYTE PTR [esp+eax*2+0x53],dl
  42c7e7:	and    BYTE PTR [rsi+0x65],dh
  42c7ea:	jb     0x42c85f
  42c7ec:	imul   ebp,DWORD PTR [rdi+0x6e],0xa732520
  42c7f3:	add    BYTE PTR [rdx+0x65],dh
  42c7f6:	jae    0x42c85d
  42c7f8:	je     0x42c7fa
  42c7fa:	cmp    dh,BYTE PTR [rdx+0x0]
  42c7fd:	push   rax
  42c7fe:	(bad)  
  42c7ff:	jae    0x42c874
  42c801:	ja     0x42c872
  42c803:	jb     0x42c869
  42c805:	cmp    ah,BYTE PTR [rax]
  42c807:	add    BYTE PTR [rdi+0x6f],ah
  42c80a:	add    BYTE PTR [rax],al
  42c80c:	fst    st(2)
  42c80e:	(bad)  
  42c80f:	inc    edi
  42c811:	sar    bh,cl
  42c813:	jmp    FWORD PTR [rdi-0x5000002c]
  42c819:	(bad)  
  42c81a:	(bad)  
  42c81b:	jmp    FWORD PTR [rdi-0x5800002c]
  42c821:	sar    bh,cl
  42c823:	(bad)  
  42c824:	js     0x42c7f8
  42c826:	(bad)  
  42c827:	dec    DWORD PTR [rbp-0x2e]
  42c82a:	(bad)  
  42c82b:	jmp    FWORD PTR [rdi+0x41ffffd4]
  42c831:	sar    bh,cl
  42c833:	jmp    FWORD PTR [rdi-0x5000002c]
  42c839:	(bad)  
  42c83a:	(bad)  
  42c83b:	jmp    FWORD PTR [rdi+0x21ffffd4]
  42c841:	sar    bh,cl
  42c843:	jmp    FWORD PTR [rdi-0x5000002c]
  42c849:	(bad)  
  42c84a:	(bad)  
  42c84b:	inc    DWORD PTR [rcx]
  42c84d:	sar    bh,cl
  42c84f:	jmp    FWORD PTR [rdi-0x1e00002c]
  42c855:	sar    edi,1
  42c857:	jmp    FWORD PTR [rdi-0x5000002c]
  42c85d:	(bad)  
  42c85e:	(bad)  
  42c85f:	jmp    FWORD PTR [rdi-0x5000002c]
  42c865:	(bad)  
  42c866:	(bad)  
  42c867:	jmp    FWORD PTR [rdi-0x5000002c]
  42c86d:	(bad)  
  42c86e:	(bad)  
  42c86f:	jmp    FWORD PTR [rdi-0x5000002c]
  42c875:	(bad)  
  42c876:	(bad)  
  42c877:	jmp    FWORD PTR [rdi-0x5000002c]
  42c87d:	(bad)  
  42c87e:	(bad)  
  42c87f:	jmp    FWORD PTR [rdi-0x3500002c]
  42c885:	sar    edi,1
  42c887:	jmp    FWORD PTR [rdi-0x5000002c]
  42c88d:	(bad)  
  42c88e:	(bad)  
  42c88f:	jmp    FWORD PTR [rdi-0x5000002c]
  42c895:	(bad)  
  42c896:	(bad)  
  42c897:	jmp    FWORD PTR [rdi-0x5000002c]
  42c89d:	(bad)  
  42c89e:	(bad)  
  42c89f:	jmp    FWORD PTR [rdi-0x5000002c]
  42c8a5:	(bad)  
  42c8a6:	(bad)  
  42c8a7:	jmp    FWORD PTR [rdi-0x5000002c]
  42c8ad:	(bad)  
  42c8ae:	(bad)  
  42c8af:	jmp    FWORD PTR [rdi-0x5000002c]
  42c8b5:	(bad)  
  42c8b6:	(bad)  
  42c8b7:	jmp    FWORD PTR [rdi-0x4400002c]
  42c8bd:	sar    edi,1
  42c8bf:	jmp    FWORD PTR [rcx-0x5000002f]
  42c8c5:	(bad)  
  42c8c6:	(bad)  
  42c8c7:	call   QWORD PTR [rsi-0x5000002f]
  42c8cd:	(bad)  
  42c8ce:	(bad)  
  42c8cf:	inc    DWORD PTR [rbx-0x5000002f]
  42c8d5:	(bad)  
  42c8d6:	(bad)  
  42c8d7:	(bad)  
  42c8d8:	jp     0x42c8ab
  42c8da:	(bad)  
  42c8db:	jmp    FWORD PTR [rsi+0x6f]
  42c8de:	add    BYTE PTR [rcx+0x65],bh
  42c8e1:	jae    0x42c8e3
  42c8e3:	or     al,BYTE PTR [rax]
  42c8e5:	or     DWORD PTR [rax],eax
	...
  42c8ff:	add    BYTE PTR [rax+0x420e],al
  42c905:	add    BYTE PTR [rax],al
  42c907:	add    al,dl
  42c909:	(bad)  
  42c90a:	rex.X add BYTE PTR [rax],al
  42c90d:	add    BYTE PTR [rax],al
  42c90f:	add    al,al
  42c911:	(bad)  
  42c912:	rex.X add BYTE PTR [rax],al
  42c915:	add    BYTE PTR [rax],al
  42c917:	add    BYTE PTR [rax+0xf],dl
  42c91a:	rex.X add BYTE PTR [rax],al
  42c91d:	add    BYTE PTR [rax],al
  42c91f:	add    BYTE PTR [rax],ah
  42c921:	cmovb  eax,DWORD PTR [rax]
  42c924:	add    BYTE PTR [rax],al
  42c926:	add    BYTE PTR [rax],al
  42c928:	(bad)  
  42c929:	cmovb  eax,DWORD PTR [rax]
	...
  42c940:	mov    al,0xd
  42c942:	rex.X add BYTE PTR [rax],al
  42c945:	add    BYTE PTR [rax],al
  42c947:	add    al,dl
  42c949:	std    
  42c94a:	add    BYTE PTR [r8],al
  42c94d:	add    BYTE PTR [rax],al
  42c94f:	add    BYTE PTR [rax+0xe],al
  42c952:	rex.X add BYTE PTR [rax],al
  42c955:	add    BYTE PTR [rax],al
  42c957:	add    BYTE PTR [rax+0x3],dl
  42c95a:	rex.X add BYTE PTR [rax],al
  42c95d:	add    BYTE PTR [rax],al
  42c95f:	add    BYTE PTR [rax+0xe],dl
  42c962:	rex.X add BYTE PTR [rax],al
  42c965:	add    BYTE PTR [rax],al
  42c967:	add    BYTE PTR [rax+0x4203],dh
	...
  42c97d:	add    BYTE PTR [rax],al
  42c97f:	add    BYTE PTR [rax],dl
  42c981:	or     eax,DWORD PTR [rdx+0x0]
  42c984:	add    BYTE PTR [rax],al
  42c986:	add    BYTE PTR [rax],al
  42c988:	jo     0x42c995
  42c98a:	rex.X add BYTE PTR [rax],al
  42c98d:	add    BYTE PTR [rax],al
  42c98f:	add    BYTE PTR [rax+0xb],ah
  42c992:	rex.X add BYTE PTR [rax],al
  42c995:	add    BYTE PTR [rax],al
  42c997:	add    BYTE PTR [rax+0x3],dl
  42c99a:	rex.X add BYTE PTR [rax],al
  42c99d:	add    BYTE PTR [rax],al
  42c99f:	add    al,dl
  42c9a1:	or     al,0x42
  42c9a3:	add    BYTE PTR [rax],al
  42c9a5:	add    BYTE PTR [rax],al
  42c9a7:	add    al,dh
  42c9a9:	or     al,0x42
	...
  42c9bf:	add    BYTE PTR [rax+0x41fb],dl
  42c9c5:	add    BYTE PTR [rax],al
  42c9c7:	add    BYTE PTR [rax+0x14],dl
  42c9ca:	rex.X add BYTE PTR [rax],al
  42c9cd:	add    BYTE PTR [rax],al
  42c9cf:	add    BYTE PTR [rax+0x41fd],dh
  42c9d5:	add    BYTE PTR [rax],al
  42c9d7:	add    BYTE PTR [rax+0x3],dl
  42c9da:	rex.X add BYTE PTR [rax],al
  42c9dd:	add    BYTE PTR [rax],al
  42c9df:	add    al,dh
  42c9e1:	or     al,BYTE PTR [rdx+0x0]
  42c9e4:	add    BYTE PTR [rax],al
  42c9e6:	add    BYTE PTR [rax],al
  42c9e8:	add    BYTE PTR [rbx],cl
  42c9ea:	rex.X add BYTE PTR [rax],al
	...
  42c9fd:	add    BYTE PTR [rax],al
  42c9ff:	add    al,al
  42ca01:	or     BYTE PTR [rdx+0x0],al
  42ca04:	add    BYTE PTR [rax],al
  42ca06:	add    BYTE PTR [rax],al
  42ca08:	and    BYTE PTR [rcx],cl
  42ca0a:	rex.X add BYTE PTR [rax],al
  42ca0d:	add    BYTE PTR [rax],al
  42ca0f:	add    BYTE PTR [rax],dl
  42ca11:	or     DWORD PTR [rdx+0x0],eax
  42ca14:	add    BYTE PTR [rax],al
  42ca16:	add    BYTE PTR [rax],al
  42ca18:	and    BYTE PTR [rdx],cl
  42ca1a:	rex.X add BYTE PTR [rax],al
  42ca1d:	add    BYTE PTR [rax],al
  42ca1f:	add    al,dl
  42ca21:	or     DWORD PTR [rdx+0x0],eax
  42ca24:	add    BYTE PTR [rax],al
  42ca26:	add    BYTE PTR [rax],al
  42ca28:	xor    BYTE PTR [rdx],cl
  42ca2a:	rex.X add BYTE PTR [rax],al
	...
  42ca3d:	add    BYTE PTR [rax],al
  42ca3f:	add    BYTE PTR [rax+0x41fb],dl
  42ca45:	add    BYTE PTR [rax],al
  42ca47:	add    al,dl
  42ca49:	std    
  42ca4a:	add    BYTE PTR [r8],al
  42ca4d:	add    BYTE PTR [rax],al
  42ca4f:	add    BYTE PTR [rax+0x41fd],dh
  42ca55:	add    BYTE PTR [rax],al
  42ca57:	add    BYTE PTR [rax+0x3],dl
  42ca5a:	rex.X add BYTE PTR [rax],al
  42ca5d:	add    BYTE PTR [rax],al
  42ca5f:	add    BYTE PTR [rax+0x4202],al
  42ca65:	add    BYTE PTR [rax],al
  42ca67:	add    BYTE PTR [rax+0x4203],dh
	...
  42ca7d:	add    BYTE PTR [rax],al
  42ca7f:	add    BYTE PTR [rsp+riz*2+0x73],dh
  42ca83:	pop    rdi
  42ca84:	imul   ebp,DWORD PTR [rsi+0x69],0x69775f74
  42ca8b:	outs   dx,BYTE PTR ds:[rsi]
  42ca8c:	jae    0x42cafd
  42ca8e:	movsxd ebp,DWORD PTR [rbx+0x3a]
  42ca91:	and    BYTE PTR [rdi+0x53],dl
  42ca94:	push   r11
  42ca96:	je     0x42caf9
  42ca98:	jb     0x42cb0e
  42ca9a:	jne    0x42cb0c
  42ca9c:	and    BYTE PTR [rsi+0x61],ah
  42ca9f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  42caa7:	push   0x20642520
  42caac:	sub    BYTE PTR [rip+0xa2973],ah        # 0x4cf425
  42cab2:	ins    DWORD PTR es:[rdi],dx
  42cab3:	gs ins DWORD PTR es:[rdi],dx
  42cab5:	movsxd eax,DWORD PTR cs:[rax]
  42cab8:	jb     0x42cb1f
  42caba:	jae    0x42cb1b
  42cabc:	imul   ebp,DWORD PTR [rsi+0x66],0x5349006f
  42cac3:	rex.WRXB sub rax,0x39353838
  42cac9:	sub    eax,0x2e0031
  42cace:	add    BYTE PTR [rbx+0x50],al
  42cad2:	and    eax,0x73750073
  42cad7:	pop    rdi
  42cad8:	outs   dx,BYTE PTR gs:[rsi]
  42cada:	ins    BYTE PTR es:[edi],dx
  42cadc:	imul   esi,DWORD PTR [rbx+0x68],0x42595300
  42cae3:	push   r11
  42cae5:	add    BYTE PTR [r11+rdx*2+0x51],r8b
  42caea:	push   rbp
  42caeb:	rex.RB push r10
  42caed:	pop    rcx
  42caee:	add    BYTE PTR [rsp+rax*2+0x53],dl
  42caf2:	push   rcx
  42caf3:	push   rbp
  42caf4:	rex.RB push r10
  42caf6:	pop    rcx
  42caf7:	add    BYTE PTR [rsp+riz*2+0x73],dh
  42cafb:	and    BYTE PTR [rsi],ah
  42cafd:	and    BYTE PTR es:[rsp+riz*2+0x73],dh
  42cb02:	sub    eax,0x74756f3e
  42cb07:	pop    rdi
  42cb08:	(bad)  
  42cb09:	jne    0x42cb71
  42cb0b:	and    BYTE PTR [rsi],ah
  42cb0d:	and    BYTE PTR es:[rsp+riz*2+0x73],dh
  42cb12:	sub    eax,0x6e65733e
  42cb17:	fs pop rdi
  42cb19:	jo     0x42cb7c
  42cb1b:	movsxd ebp,DWORD PTR [rbx+0x65]
  42cb1e:	je     0x42cb20
  42cb20:	push   rbx
  42cb21:	xor    DWORD PTR [rax],esi
  42cb23:	xor    BYTE PTR [rax],dh
  42cb25:	add    BYTE PTR [rdx+rsi*1],dh
  42cb28:	xor    BYTE PTR [rax],dh
  42cb2a:	xor    BYTE PTR [rax],al
  42cb2c:	xor    bh,BYTE PTR [rax]
  42cb2e:	xor    BYTE PTR [rax],dh
  42cb30:	xor    BYTE PTR [rax],al
  42cb32:	xor    dh,BYTE PTR [rax+rsi*1]
  42cb35:	xor    BYTE PTR [rax],dh
  42cb37:	add    BYTE PTR [rbx+0x31],dl
  42cb3a:	push   rsp
  42cb3b:	xor    BYTE PTR [rax],dh
  42cb3d:	add    BYTE PTR [rax],dh
  42cb3f:	cmp    BYTE PTR [rbx+0x30],dl
  42cb42:	xor    DWORD PTR [rax],eax
  42cb44:	xor    BYTE PTR [rcx],dh
  42cb46:	xor    BYTE PTR [rax],dh
  42cb48:	xor    eax,DWORD PTR [rax]
  42cb4a:	xor    BYTE PTR [rax],bh
  42cb4c:	xor    BYTE PTR [rax],dh
  42cb4e:	xor    al,0x0
  42cb50:	xor    dh,BYTE PTR [rcx]
  42cb52:	xor    BYTE PTR [rax],dh
  42cb54:	xor    BYTE PTR [rax],al
  42cb56:	xor    dh,BYTE PTR [rcx]
  42cb58:	push   rbx
  42cb59:	xor    BYTE PTR [rcx],dh
  42cb5b:	add    BYTE PTR [rdx],dh
  42cb5d:	xor    DWORD PTR [rbx+0x30],edx
  42cb60:	xor    al,BYTE PTR [rax]
  42cb62:	xor    dh,BYTE PTR [rdx]
  42cb64:	xor    BYTE PTR [rax],dh
  42cb66:	xor    DWORD PTR [rax],eax
  42cb68:	xor    dh,BYTE PTR [rdx]
  42cb6a:	xor    BYTE PTR [rax],dh
  42cb6c:	xor    eax,DWORD PTR [rax]
  42cb6e:	xor    dh,BYTE PTR [rdx]
  42cb70:	xor    BYTE PTR [rax],dh
  42cb72:	xor    eax,0x30323200
  42cb77:	xor    BYTE PTR [rdi],dh
  42cb79:	add    BYTE PTR [rdx],dh
  42cb7b:	xor    dh,BYTE PTR [rax]
  42cb7d:	xor    BYTE PTR [rax],bh
  42cb7f:	add    BYTE PTR [rdx],dh
  42cb81:	xor    dh,BYTE PTR [rax]
  42cb83:	xor    DWORD PTR [rdx],esi
  42cb85:	add    BYTE PTR [rdx],dh
  42cb87:	xor    dh,BYTE PTR [rax]
  42cb89:	xor    DWORD PTR [rax],edi
  42cb8b:	add    BYTE PTR [rdx],dh
  42cb8d:	xor    esi,DWORD PTR [rax]
  42cb8f:	xor    BYTE PTR [rax],dh
  42cb91:	add    BYTE PTR [rdx],dh
  42cb93:	xor    eax,0x303030
  42cb98:	xor    esi,DWORD PTR [rdi]
  42cb9a:	xor    BYTE PTR [rax],dh
  42cb9c:	xor    BYTE PTR [rax],al
  42cb9e:	xor    al,0x32
  42cba0:	push   rbx
  42cba1:	xor    BYTE PTR [rcx],dh
  42cba3:	add    BYTE PTR [rdx+rsi*1],dh
  42cba6:	push   rbx
  42cba7:	xor    BYTE PTR [rdx],dh
  42cba9:	add    BYTE PTR [rdx+rsi*1],dh
  42cbac:	push   rbx
  42cbad:	xor    DWORD PTR [rcx],esi
  42cbaf:	add    BYTE PTR [rdx+rsi*1],dh
  42cbb2:	push   rbx
  42cbb3:	xor    DWORD PTR [rdx],esi
  42cbb5:	add    BYTE PTR [rdx+rsi*1],dh
  42cbb8:	push   rbx
  42cbb9:	xor    dh,BYTE PTR [rcx]
  42cbbb:	add    BYTE PTR [rdx+rsi*1],dh
  42cbbe:	push   rbx
  42cbbf:	xor    dh,BYTE PTR [rdx]
  42cbc1:	add    BYTE PTR [rax],dh
  42cbc3:	xor    DWORD PTR [rax],esi
  42cbc5:	xor    BYTE PTR [rax],dh
  42cbc7:	add    BYTE PTR [rdx+rsi*1],dh
  42cbca:	push   rbx
  42cbcb:	add    BYTE PTR [rax],al
  42cbcd:	add    BYTE PTR [rax],al
  42cbcf:	add    BYTE PTR [rsp+riz*2+0x73],dh
  42cbd3:	pop    rdi
  42cbd4:	fs jns 0x42cc45
  42cbd7:	(bad)  
  42cbd8:	ins    DWORD PTR es:[rdi],dx
  42cbd9:	imul   esp,DWORD PTR [rbx+0x5f],0x6c616564
  42cbe0:	ins    BYTE PTR es:[rdi],dx
  42cbe1:	outs   dx,DWORD PTR ds:[rsi]
  42cbe2:	movsxd esp,DWORD PTR [rcx+0x74]
  42cbe5:	gs sub BYTE PTR fs:[rcx],ch
  42cbe9:	and    BYTE PTR [rdx],bh
  42cbeb:	and    BYTE PTR [rsi+0x72],ah
  42cbee:	gs imul ebp,DWORD PTR gs:[rsi+0x67],0x6e796420
  42cbf7:	(bad)  
  42cbf8:	ins    DWORD PTR es:[rdi],dx
  42cbf9:	imul   esp,DWORD PTR [rbx+0x5f],0x25206469
  42cc00:	jae    0x42cc0c
  42cc02:	add    BYTE PTR [rax],al
  42cc04:	add    BYTE PTR [rax],al
  42cc06:	add    BYTE PTR [rax],al
  42cc08:	je     0x42cc6e
  42cc0a:	jae    0x42cc6b
  42cc0c:	fs jns 0x42cc7d
  42cc0f:	(bad)  
  42cc10:	ins    DWORD PTR es:[rdi],dx
  42cc11:	imul   esp,DWORD PTR [rbx+0x5f],0x6c616564
  42cc18:	ins    BYTE PTR es:[rdi],dx
  42cc19:	outs   dx,DWORD PTR ds:[rsi]
  42cc1a:	movsxd esp,DWORD PTR [rcx+0x74]
  42cc1d:	gs sub BYTE PTR fs:[rcx],ch
  42cc21:	and    BYTE PTR [rdx],bh
  42cc23:	and    BYTE PTR [rbx+0x61],ah
  42cc26:	outs   dx,BYTE PTR ds:[rsi]
  42cc27:	outs   dx,BYTE PTR ds:[rsi]
  42cc28:	outs   dx,DWORD PTR ds:[rsi]
  42cc29:	je     0x42cc4b
  42cc2b:	imul   bp,WORD PTR [rsi+0x64],0x6920
  42cc31:	and    BYTE PTR fs:[rip+0x74000a73],ah        # 0x7442d6ab
  42cc38:	fs jae 0x42cc9a
  42cc3b:	data16 jb 0x42cca3
  42cc3e:	gs pop rdi
  42cc40:	(bad)  
  42cc41:	ins    BYTE PTR es:[rdi],dx
  42cc42:	ins    BYTE PTR es:[rdi],dx
  42cc43:	pop    rdi
  42cc44:	jb     0x42ccab
  42cc46:	jae    0x42ccbd
  42cc48:	ins    BYTE PTR es:[rdi],dx
  42cc49:	je     0x42ccbe
  42cc4b:	sub    BYTE PTR [rcx],ch
  42cc4d:	or     al,BYTE PTR [rax]
  42cc4f:	add    BYTE PTR [rsp+riz*2+0x73],dh
  42cc53:	pop    rdi
  42cc54:	jb     0x42ccbb
  42cc56:	ins    BYTE PTR es:[rdi],dx
  42cc57:	gs (bad) 
  42cc59:	jae    0x42ccc0
  42cc5b:	pop    rdi
  42cc5c:	movsxd esi,DWORD PTR [rbp+0x72]
  42cc5f:	jae    0x42ccd0
  42cc61:	jb     0x42cc8b
  42cc63:	sub    DWORD PTR [rax],esp
  42cc65:	cmp    ah,BYTE PTR [rax]
  42cc67:	data16 jb 0x42cccf
  42cc6a:	imul   ebp,DWORD PTR gs:[rsi+0x67],0x72756320
  42cc72:	jae    0x42cce3
  42cc74:	jb     0x42ccd5
  42cc76:	imul   esp,DWORD PTR [rax+riz*1+0x25],0xa64
  42cc7e:	add    BYTE PTR [rax],al
  42cc80:	je     0x42cce6
  42cc82:	jae    0x42cce3
  42cc84:	jb     0x42cceb
  42cc86:	ins    BYTE PTR es:[rdi],dx
  42cc87:	gs (bad) 
  42cc89:	jae    0x42ccf0
  42cc8b:	pop    rdi
  42cc8c:	movsxd esi,DWORD PTR [rbp+0x72]
  42cc8f:	jae    0x42cd00
  42cc91:	jb     0x42ccbb
  42cc93:	sub    DWORD PTR [rax],esp
  42cc95:	cmp    ah,BYTE PTR [rax]
  42cc97:	data16 jb 0x42ccff
  42cc9a:	imul   ebp,DWORD PTR gs:[rsi+0x67],0x72756320
  42cca2:	jae    0x42cd13
  42cca4:	jb     0x42ccc6
  42cca6:	jb     0x42cd0d
  42cca8:	jae    0x42cd1f
  42ccaa:	ins    BYTE PTR es:[rdi],dx
  42ccab:	je     0x42cd20
  42ccad:	or     al,BYTE PTR [rax]
  42ccaf:	add    BYTE PTR [rsp+riz*2+0x73],dh
  42ccb3:	pop    rdi
  42ccb4:	jb     0x42cd1b
  42ccb6:	ins    BYTE PTR es:[rdi],dx
  42ccb7:	gs (bad) 
  42ccb9:	jae    0x42cd20
  42ccbb:	pop    rdi
  42ccbc:	movsxd esi,DWORD PTR [rbp+0x72]
  42ccbf:	jae    0x42cd30
  42ccc1:	jb     0x42cceb
  42ccc3:	sub    DWORD PTR [rax],esp
  42ccc5:	cmp    ah,BYTE PTR [rax]
  42ccc7:	data16 jb 0x42cd2f
  42ccca:	imul   ebp,DWORD PTR gs:[rsi+0x67],0x72756320
  42ccd2:	jae    0x42cd43
  42ccd4:	jb     0x42ccf6
  42ccd6:	outs   dx,BYTE PTR ds:[rsi]
  42ccd7:	(bad)  
  42ccd8:	ins    DWORD PTR es:[rdi],dx
  42ccd9:	or     al,BYTE PTR gs:[rax]
  42ccdc:	add    BYTE PTR [rax],al
  42ccde:	add    BYTE PTR [rax],al
  42cce0:	je     0x42cd46
  42cce2:	jae    0x42cd43
  42cce4:	jb     0x42cd4b
  42cce6:	ins    BYTE PTR es:[rdi],dx
  42cce7:	gs (bad) 
  42cce9:	jae    0x42cd50
  42cceb:	pop    rdi
  42ccec:	movsxd esi,DWORD PTR [rbp+0x72]
  42ccef:	jae    0x42cd60
  42ccf1:	jb     0x42cd1b
  42ccf3:	sub    DWORD PTR [rax],esp
  42ccf5:	cmp    ah,BYTE PTR [rax]
  42ccf7:	data16 jb 0x42cd5f
  42ccfa:	imul   ebp,DWORD PTR gs:[rsi+0x67],0x72756320
  42cd02:	jae    0x42cd73
  42cd04:	jb     0x42cd26
  42cd06:	jno    0x42cd7d
  42cd08:	gs jb  0x42cd84
  42cd0b:	or     al,BYTE PTR [rax]
  42cd0d:	add    BYTE PTR [rax],al
  42cd0f:	add    BYTE PTR [rsp+riz*2+0x73],dh
  42cd13:	pop    rdi
  42cd14:	jb     0x42cd7b
  42cd16:	ins    BYTE PTR es:[rdi],dx
  42cd17:	gs (bad) 
  42cd19:	jae    0x42cd80
  42cd1b:	pop    rdi
  42cd1c:	movsxd esi,DWORD PTR [rbp+0x72]
  42cd1f:	jae    0x42cd90
  42cd21:	jb     0x42cd4b
  42cd23:	sub    DWORD PTR [rax],esp
  42cd25:	cmp    ah,BYTE PTR [rax]
  42cd27:	movsxd esi,DWORD PTR [rbp+0x72]
  42cd2a:	jae    0x42cd9b
  42cd2c:	jb     0x42cd8d
  42cd2e:	imul   esp,DWORD PTR [rax+riz*1+0x25],0x72662064
  42cd36:	gs gs or al,BYTE PTR fs:[rax]
  42cd3b:	add    BYTE PTR [rax],al
  42cd3d:	add    BYTE PTR [rax],al
  42cd3f:	add    BYTE PTR [rsp+riz*2+0x73],dh
  42cd43:	pop    rdi
  42cd44:	movsxd esi,DWORD PTR [rbp+0x72]
  42cd47:	jae    0x42cdb8
  42cd49:	jb     0x42cdaa
  42cd4b:	fs gs (bad) 
  42cd4e:	ins    BYTE PTR es:[rdi],dx
  42cd4f:	ins    BYTE PTR es:[rdi],dx
  42cd50:	outs   dx,DWORD PTR ds:[rsi]
  42cd51:	movsxd esp,DWORD PTR [rcx+0x74]
  42cd54:	gs sub BYTE PTR fs:[rcx],ch
  42cd58:	and    BYTE PTR [rdx],bh
  42cd5a:	and    BYTE PTR [rsi+0x72],ah
  42cd5d:	gs imul ebp,DWORD PTR gs:[rsi+0x67],0x72756320
  42cd66:	jae    0x42cdd7
  42cd68:	jb     0x42cdc9
  42cd6a:	imul   esp,DWORD PTR [rax+riz*1+0x25],0xa64
  42cd72:	add    BYTE PTR [rax],al
  42cd74:	add    BYTE PTR [rax],al
  42cd76:	add    BYTE PTR [rax],al
  42cd78:	je     0x42cdde
  42cd7a:	jae    0x42cddb
  42cd7c:	movsxd esi,DWORD PTR [rbp+0x72]
  42cd7f:	jae    0x42cdf0
  42cd81:	jb     0x42cde2
  42cd83:	fs gs (bad) 
  42cd86:	ins    BYTE PTR es:[rdi],dx
  42cd87:	ins    BYTE PTR es:[rdi],dx
  42cd88:	outs   dx,DWORD PTR ds:[rsi]
  42cd89:	movsxd esp,DWORD PTR [rcx+0x74]
  42cd8c:	gs sub BYTE PTR fs:[rcx],ch
  42cd90:	and    BYTE PTR [rdx],bh
  42cd92:	and    BYTE PTR [rbx+0x61],ah
  42cd95:	outs   dx,BYTE PTR ds:[rsi]
  42cd96:	outs   dx,BYTE PTR ds:[rsi]
  42cd97:	outs   dx,DWORD PTR ds:[rsi]
  42cd98:	je     0x42cdba
  42cd9a:	imul   bp,WORD PTR [rsi+0x64],0x6320
  42cda0:	jne    0x42ce14
  42cda2:	jae    0x42ce13
  42cda4:	jb     0x42ce05
  42cda6:	imul   esp,DWORD PTR [rax+riz*1+0x25],0xa64
  42cdae:	add    BYTE PTR [rax],al
  42cdb0:	(bad)  
  42cdb1:	ins    BYTE PTR es:[rdi],dx
  42cdb2:	ins    BYTE PTR es:[rdi],dx
  42cdb3:	outs   dx,DWORD PTR ds:[rsi]
  42cdb4:	movsxd ebx,DWORD PTR [rdi+0x63]
  42cdb7:	outs   dx,DWORD PTR ds:[rsi]
  42cdb8:	ins    DWORD PTR es:[rdi],dx
  42cdb9:	jo     0x42ce30
  42cdbb:	je     0x42ce22
  42cdbd:	pop    rdi
  42cdbe:	jb     0x42ce25
  42cdc0:	jae    0x42ce37
  42cdc2:	ins    BYTE PTR es:[rdi],dx
  42cdc3:	je     0x42cdf3
  42cdc5:	and    BYTE PTR [rsi+0x75],ch
  42cdc8:	ins    DWORD PTR es:[rdi],dx
  42cdc9:	pop    rdi
  42cdca:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42cdcd:	jae    0x42cdef
  42cdcf:	cmp    eax,0x20642520
  42cdd4:	(bad)  
  42cdd5:	jns    0x42ce3a
  42cdd7:	outs   dx,DWORD PTR ds:[rsi]
  42cdd8:	ins    BYTE PTR es:[rdi],dx
  42cdd9:	jae    0x42cdfb
  42cddb:	cmp    eax,0xa642520
	...
  42cde8:	(bad)  
  42cde9:	ins    BYTE PTR es:[rdi],dx
  42cdea:	ins    BYTE PTR es:[rdi],dx
  42cdeb:	outs   dx,DWORD PTR ds:[rsi]
  42cdec:	movsxd ebx,DWORD PTR [rdi+0x63]
  42cdef:	outs   dx,DWORD PTR ds:[rsi]
  42cdf0:	ins    DWORD PTR es:[rdi],dx
  42cdf1:	jo     0x42ce68
  42cdf3:	je     0x42ce5a
  42cdf5:	pop    rdi
  42cdf6:	jb     0x42ce5d
  42cdf8:	jae    0x42ce6f
  42cdfa:	ins    BYTE PTR es:[rdi],dx
  42cdfb:	je     0x42ce2b
  42cdfd:	and    BYTE PTR [rsi+0x75],ch
  42ce00:	ins    DWORD PTR es:[rdi],dx
  42ce01:	pop    rdi
  42ce02:	movsxd ebp,DWORD PTR [rdi+0x6d]
  42ce05:	jo     0x42ce66
  42ce07:	imul   ebp,DWORD PTR [rsi+0x66],0x203d206f
  42ce0e:	and    eax,0xa64
	...
  42ce1f:	add    BYTE PTR [rcx+0x76],ah
  42ce22:	add    BYTE PTR [eax],al
  42ce25:	movsxd ebp,DWORD PTR [rdi+0x75]
  42ce28:	outs   dx,BYTE PTR ds:[rsi]
  42ce29:	je     0x42ce2b
  42ce2b:	jbe    0x42ce8e
  42ce2d:	jb     0x42ce9f
  42ce2f:	add    BYTE PTR [rbp+0x61],ch
  42ce32:	js     0x42ce34
  42ce34:	ins    DWORD PTR es:[rdi],dx
  42ce35:	imul   ebp,DWORD PTR [rsi+0x0],0x6d7573
  42ce3c:	movsxd ebp,DWORD PTR [rax+0x65]
  42ce3f:	movsxd ebp,DWORD PTR [rbx+0x73]
  42ce42:	jne    0x42ceb1
  42ce44:	pop    rdi
  42ce45:	(bad)  
  42ce46:	addr32 add BYTE PTR [esi+0x61],dh
  42ce4b:	jb     0x42ce4d
  42ce4d:	jae    0x42cec3
  42ce4f:	fs gs jbe 0x42cec3
  42ce53:	add    BYTE PTR [rbp+rax*4-0x79c30003],ch
  42ce5a:	std    
  42ce5b:	(bad)  
  42ce5c:	cmp    al,0x86
  42ce5e:	std    
  42ce5f:	(bad)  
  42ce60:	cmp    al,0x86
  42ce62:	std    
  42ce63:	(bad)  
  42ce64:	cmp    al,0x86
  42ce66:	std    
  42ce67:	(bad)  
  42ce68:	cmp    al,0x86
  42ce6a:	std    
  42ce6b:	(bad)  
  42ce6c:	cmp    al,0x86
  42ce6e:	std    
  42ce6f:	(bad)  
  42ce70:	cmp    al,0x86
  42ce72:	std    
  42ce73:	(bad)  
  42ce74:	cmp    al,0x86
  42ce76:	std    
  42ce77:	(bad)  
  42ce78:	cmp    al,0x86
  42ce7a:	std    
  42ce7b:	(bad)  
  42ce7c:	cmp    al,0x86
  42ce7e:	std    
  42ce7f:	(bad)  
  42ce80:	cmp    al,0x86
  42ce82:	std    
  42ce83:	(bad)  
  42ce84:	cmp    al,0x86
  42ce86:	std    
  42ce87:	(bad)  
  42ce88:	cmp    al,0x86
  42ce8a:	std    
  42ce8b:	(bad)  
  42ce8c:	cmp    al,0x86
  42ce8e:	std    
  42ce8f:	(bad)  
  42ce90:	cmp    al,0x86
  42ce92:	std    
  42ce93:	(bad)  
  42ce94:	cmp    al,0x86
  42ce96:	std    
  42ce97:	(bad)  
  42ce98:	cmp    al,0x86
  42ce9a:	std    
  42ce9b:	(bad)  
  42ce9c:	cmp    al,0x86
  42ce9e:	std    
  42ce9f:	(bad)  
  42cea0:	cmp    al,0x86
  42cea2:	std    
  42cea3:	(bad)  
  42cea4:	cmp    al,0x86
  42cea6:	std    
  42cea7:	(bad)  
  42cea8:	cmp    al,0x86
  42ceaa:	std    
  42ceab:	(bad)  
  42ceac:	cmp    al,0x86
  42ceae:	std    
  42ceaf:	(bad)  
  42ceb0:	cmp    al,0x86
  42ceb2:	std    
  42ceb3:	(bad)  
  42ceb4:	cmp    al,0x86
  42ceb6:	std    
  42ceb7:	(bad)  
  42ceb8:	cmp    al,0x86
  42ceba:	std    
  42cebb:	(bad)  
  42cebc:	cmp    al,0x86
  42cebe:	std    
  42cebf:	(bad)  
  42cec0:	cmp    al,0x86
  42cec2:	std    
  42cec3:	(bad)  
  42cec4:	cmp    al,0x86
  42cec6:	std    
  42cec7:	(bad)  
  42cec8:	cmp    al,0x86
  42ceca:	std    
  42cecb:	(bad)  
  42cecc:	cmp    al,0x86
  42cece:	std    
  42cecf:	(bad)  
  42ced0:	cmp    al,0x86
  42ced2:	std    
  42ced3:	(bad)  
  42ced4:	cmp    al,0x86
  42ced6:	std    
  42ced7:	(bad)  
  42ced8:	cmp    al,0x86
  42ceda:	std    
  42cedb:	(bad)  
  42cedc:	cmp    al,0x86
  42cede:	std    
  42cedf:	(bad)  
  42cee0:	cmp    al,0x86
  42cee2:	std    
  42cee3:	(bad)  
  42cee4:	cmp    al,0x86
  42cee6:	std    
  42cee7:	(bad)  
  42cee8:	cmp    al,0x86
  42ceea:	std    
  42ceeb:	(bad)  
  42ceec:	cmp    al,0x86
  42ceee:	std    
  42ceef:	(bad)  
  42cef0:	mov    esp,0xbcfffd85
  42cef5:	test   ebp,edi
  42cef7:	jmp    FWORD PTR [rsi+rax*4]
  42cefa:	std    
  42cefb:	(bad)  
  42cefc:	in     al,dx
  42cefd:	test   ebp,edi
  42ceff:	(bad)  
  42cf00:	cmp    al,0x86
  42cf02:	std    
  42cf03:	(bad)  
  42cf04:	cmp    al,0x86
  42cf06:	std    
  42cf07:	(bad)  
  42cf08:	cmp    al,0x86
  42cf0a:	std    
  42cf0b:	(bad)  
  42cf0c:	cmp    al,0x86
  42cf0e:	std    
  42cf0f:	(bad)  
  42cf10:	cmp    al,0x86
  42cf12:	std    
  42cf13:	(bad)  
  42cf14:	cmp    al,0x86
  42cf16:	std    
  42cf17:	(bad)  
  42cf18:	cmp    al,0x86
  42cf1a:	std    
  42cf1b:	(bad)  
  42cf1c:	cmp    al,0x86
  42cf1e:	std    
  42cf1f:	(bad)  
  42cf20:	cmp    al,0x86
  42cf22:	std    
  42cf23:	(bad)  
  42cf24:	cmp    al,0x86
  42cf26:	std    
  42cf27:	(bad)  
  42cf28:	cmp    al,0x86
  42cf2a:	std    
  42cf2b:	(bad)  
  42cf2c:	cmp    al,0x86
  42cf2e:	std    
  42cf2f:	(bad)  
  42cf30:	cmp    al,0x86
  42cf32:	std    
  42cf33:	(bad)  
  42cf34:	cmp    al,0x86
  42cf36:	std    
  42cf37:	(bad)  
  42cf38:	cmp    al,0x86
  42cf3a:	std    
  42cf3b:	(bad)  
  42cf3c:	cmp    al,0x86
  42cf3e:	std    
  42cf3f:	(bad)  
  42cf40:	cmp    al,0x86
  42cf42:	std    
  42cf43:	(bad)  
  42cf44:	cmp    al,0x86
  42cf46:	std    
  42cf47:	(bad)  
  42cf48:	cmp    al,0x86
  42cf4a:	std    
  42cf4b:	(bad)  
  42cf4c:	cmp    al,0x86
  42cf4e:	std    
  42cf4f:	(bad)  
  42cf50:	cmp    al,0x86
  42cf52:	std    
  42cf53:	(bad)  
  42cf54:	cmp    al,0x86
  42cf56:	std    
  42cf57:	(bad)  
  42cf58:	cmp    al,0x86
  42cf5a:	std    
  42cf5b:	jmp    FWORD PTR [rbp+rax*4-0x7a530003]
  42cf62:	std    
  42cf63:	dec    esp
  42cf65:	test   ebp,edi
  42cf67:	dec    esp
  42cf69:	test   ebp,edi
  42cf6b:	(bad)  
  42cf6c:	fadd   QWORD PTR [rbp-0x7a230003]
  42cf72:	std    
  42cf73:	dec    DWORD PTR [rsi+rax*4]
  42cf76:	std    
  42cf77:	(bad)  
  42cf78:	cld    
  42cf79:	test   ebp,edi
  42cf7b:	(bad)  
  42cf7c:	cmp    al,0x86
  42cf7e:	std    
  42cf7f:	(bad)  
  42cf80:	cmp    al,0x86
  42cf82:	std    
  42cf83:	(bad)  
  42cf84:	cmp    al,0x86
  42cf86:	std    
  42cf87:	(bad)  
  42cf88:	cmp    al,0x86
  42cf8a:	std    
  42cf8b:	(bad)  
  42cf8c:	cmp    al,0x86
  42cf8e:	std    
  42cf8f:	(bad)  
  42cf90:	cmp    al,0x86
  42cf92:	std    
  42cf93:	(bad)  
  42cf94:	cmp    al,0x86
  42cf96:	std    
  42cf97:	(bad)  
  42cf98:	cmp    al,0x86
  42cf9a:	std    
  42cf9b:	(bad)  
  42cf9c:	cmp    al,0x86
  42cf9e:	std    
  42cf9f:	(bad)  
  42cfa0:	cmp    al,0x86
  42cfa2:	std    
  42cfa3:	(bad)  
  42cfa4:	cmp    al,0x86
  42cfa6:	std    
  42cfa7:	(bad)  
  42cfa8:	cmp    al,0x86
  42cfaa:	std    
  42cfab:	(bad)  
  42cfac:	cmp    al,0x86
  42cfae:	std    
  42cfaf:	(bad)  
  42cfb0:	cmp    al,0x86
  42cfb2:	std    
  42cfb3:	(bad)  
  42cfb4:	cmp    al,0x86
  42cfb6:	std    
  42cfb7:	(bad)  
  42cfb8:	cmp    al,0x86
  42cfba:	std    
  42cfbb:	(bad)  
  42cfbc:	cmp    al,0x86
  42cfbe:	std    
  42cfbf:	(bad)  
  42cfc0:	cmp    al,0x86
  42cfc2:	std    
  42cfc3:	(bad)  
  42cfc4:	cmp    al,0x86
  42cfc6:	std    
  42cfc7:	(bad)  
  42cfc8:	cmp    al,0x86
  42cfca:	std    
  42cfcb:	(bad)  
  42cfcc:	cmp    al,0x86
  42cfce:	std    
  42cfcf:	(bad)  
  42cfd0:	cmp    al,0x86
  42cfd2:	std    
  42cfd3:	(bad)  
  42cfd4:	cmp    al,0x86
  42cfd6:	std    
  42cfd7:	(bad)  
  42cfd8:	cmp    al,0x86
  42cfda:	std    
  42cfdb:	(bad)  
  42cfdc:	cmp    al,0x86
  42cfde:	std    
  42cfdf:	(bad)  
  42cfe0:	cmp    al,0x86
  42cfe2:	std    
  42cfe3:	(bad)  
  42cfe4:	cmp    al,0x86
  42cfe6:	std    
  42cfe7:	(bad)  
  42cfe8:	cmp    al,0x86
  42cfea:	std    
  42cfeb:	(bad)  
  42cfec:	cmp    al,0x86
  42cfee:	std    
  42cfef:	(bad)  
  42cff0:	cmp    al,0x86
  42cff2:	std    
  42cff3:	(bad)  
  42cff4:	cmp    al,0x86
  42cff6:	std    
  42cff7:	call   FWORD PTR [rsi+rax*4]
  42cffa:	std    
  42cffb:	call   QWORD PTR [rsp+rax*2+0x53]
  42cfff:	xor    eax,0x5241505f
  42d004:	rex.B
  42d005:	rex.WRB
  42d006:	rex.RX
  42d007:	rex.WRB push r12
  42d009:	xor    al,BYTE PTR [rax]
  42d00b:	rex.WRXB push r10
  42d00d:	rex.R
  42d00e:	rex.RB push r10
  42d010:	rex.X pop rcx
  42d012:	xor    al,BYTE PTR [rax]
  42d014:	push   rdx
  42d015:	rex.WRXB push r15
  42d017:	rex.RX
  42d018:	rex.WRB push r12
  42d01a:	xor    al,BYTE PTR [rax]
  42d01c:	rex.WR
  42d01d:	rex.WRXB
  42d01e:	rex.RXB
  42d01f:	rex.WRXB push r13
  42d021:	push   rsp
  42d022:	add    BYTE PTR [rdx+0x45],dl
  42d025:	push   rsp
  42d026:	push   rbp
  42d027:	push   rdx
  42d028:	rex.WRX push rbx
  42d02a:	push   rsp
  42d02b:	push   r12
  42d02d:	push   rbp
  42d02e:	push   rbx
  42d02f:	add    BYTE PTR [rax+0x52],dl
  42d032:	rex.WRXB
  42d033:	rex.XB
  42d034:	rex.WB
  42d035:	add    BYTE PTR [rsp+rax*2+0x53],r10b
  42d03a:	(bad)  
  42d03b:	pop    rdi
  42d03c:	push   rdx
  42d03d:	rex.RB push r11
  42d03f:	push   rbp
  42d040:	rex.WR push rsp
  42d042:	add    BYTE PTR [rsp+rax*2+0x53],dl
  42d046:	pop    rdi
  42d047:	rex.XB push r13
  42d049:	push   rdx
  42d04a:	rex.WB
  42d04b:	rex.WRX
  42d04c:	rex.RX
  42d04d:	rex.WRXB add BYTE PTR [r12+r8*2+0x53],r10b
  42d052:	(bad)  
  42d053:	pop    rdi
  42d054:	rex.XB
  42d055:	rex.WRXB
  42d056:	rex.WRB push r8
  42d058:	push   rbp
  42d059:	push   rsp
  42d05a:	rex.RB pop r15
  42d05c:	push   rdx
  42d05d:	rex.RB push r11
  42d05f:	push   rbp
  42d060:	rex.WR push rsp
  42d062:	add    BYTE PTR [rbx+0x4f],al
  42d065:	rex.WR
  42d066:	rex.WRX
  42d067:	rex.B
  42d068:	rex.WRB
  42d069:	add    BYTE PTR [r11+0x4f],r8b
  42d06d:	rex.WR
  42d06e:	rex.RX
  42d06f:	rex.WRB push r12
  42d071:	add    BYTE PTR [rcx+rbx*2+0x4e],al
  42d075:	rex.B
  42d076:	rex.WRB
  42d077:	rex.WB
  42d078:	rex.XB xor al,BYTE PTR [r8]
  42d07b:	push   rsp
  42d07c:	rex.B
  42d07d:	rex.X
  42d07e:	rex.WRX
  42d07f:	rex.B
  42d080:	rex.WRB
  42d081:	add    BYTE PTR [r11+0x4f],r8b
  42d085:	rex.WR
  42d086:	rex.WB
  42d087:	rex.WRX
  42d088:	rex.RX
  42d089:	rex.WRXB add BYTE PTR [r11+0x4f],r8b
  42d08d:	rex.WRB push r8
  42d08f:	push   rbp
  42d090:	push   rsp
  42d091:	rex.RB pop r15
  42d093:	rex.WRX
  42d094:	rex.B
  42d095:	rex.WRB
  42d096:	rex.RB push r11
  42d098:	add    BYTE PTR [rbx+0x4f],al
  42d09b:	rex.WRB push r8
  42d09d:	push   rbp
  42d09e:	push   rsp
  42d09f:	rex.RB pop r15
  42d0a1:	push   rdx
  42d0a2:	rex.RB push r11
  42d0a4:	push   rbp
  42d0a5:	rex.WR push rsp
  42d0a7:	add    BYTE PTR [rdi+0x52],cl
  42d0aa:	rex.R
  42d0ab:	rex.RB push r10
  42d0ad:	rex.X pop rcx
  42d0af:	add    BYTE PTR [rbp+0x52],al
  42d0b2:	push   rdx
  42d0b3:	rex.WRXB push r10
  42d0b5:	add    BYTE PTR [rcx+0x4e],cl
  42d0b8:	rex.RX
  42d0b9:	rex.WRXB add BYTE PTR [r8+0x41],r10b
  42d0bd:	push   rdx
  42d0be:	rex.B
  42d0bf:	rex.WRB add BYTE PTR [r15+rcx*2+0x47],r9b
  42d0c4:	rex.WB
  42d0c5:	rex.WRX
  42d0c6:	rex.B
  42d0c7:	rex.XB
  42d0c8:	rex.WXB add BYTE PTR [r11+0x4f],al
  42d0cc:	rex.WRX push rsp
  42d0ce:	push   rdx
  42d0cf:	rex.WRXB
  42d0d0:	rex.WR (bad) 
  42d0d2:	rex.RX
  42d0d3:	rex.RB
  42d0d4:	push   r12
  42d0d6:	push   rbp
  42d0d7:	push   rdx
  42d0d8:	rex.RB
  42d0d9:	rex.RB pop r8
  42d0db:	push   rsp
  42d0dc:	rex.B
  42d0dd:	rex.XB
  42d0de:	rex.WXB add BYTE PTR [r10+0x4f],dl
  42d0e2:	push   rdi
  42d0e3:	add    BYTE PTR [rsi+0x42],cl
  42d0e6:	rex.XB pop r15
  42d0e8:	push   rdx
  42d0e9:	rex.WRXB push r15
  42d0eb:	add    BYTE PTR [rbx+0x4d],al
  42d0ee:	push   rax
  42d0ef:	pop    rdi
  42d0f0:	push   rdx
  42d0f1:	rex.WRXB push r15
  42d0f3:	add    BYTE PTR [rsp+rax*2+0x53],dl
  42d0f7:	xor    eax,0x5241505f
  42d0fc:	rex.B
  42d0fd:	rex.WRB push r11
  42d0ff:	add    BYTE PTR [rbx+0x41],al
  42d102:	push   rax
  42d103:	rex.B
  42d104:	rex.X
  42d105:	rex.WB
  42d106:	rex.WR
  42d107:	rex.WB push r12
  42d109:	pop    rcx
  42d10a:	add    BYTE PTR [rbp+0x4e],al
  42d10d:	push   rsi
  42d10e:	rex.XB
  42d10f:	rex.W
  42d110:	rex.B
  42d111:	rex.WRX
  42d112:	rex.RXB
  42d113:	add    BYTE PTR [r11+0x45],r10b
  42d117:	push   rbx
  42d118:	push   rbx
  42d119:	rex.WB
  42d11a:	rex.WRXB
  42d11b:	rex.WRX push rbx
  42d11d:	push   rsp
  42d11e:	push   r12
  42d120:	add    BYTE PTR [r13+0x45],r8b
  42d124:	add    BYTE PTR [rdx+rax*2+0x52],r8b
  42d129:	push   rax
  42d12a:	add    BYTE PTR [r12+r8*2+0x53],dl
  42d12f:	xor    eax,0x4e59445f
  42d134:	rex.B
  42d135:	rex.WRB
  42d136:	rex.WB
  42d137:	add    BYTE PTR [r12+r8*2+0x53],dl
  42d13c:	xor    eax,0x5241505f
  42d141:	rex.B
  42d142:	rex.WRB
  42d143:	rex.RX
  42d144:	rex.WRB push r12
  42d146:	add    BYTE PTR [rcx+0x55],al
  42d149:	push   rsp
  42d14a:	rex.W add BYTE PTR [rdx+0x45],dl
  42d14e:	push   rbx
  42d14f:	push   rbp
  42d150:	rex.WR push rsp
  42d152:	add    BYTE PTR [rdi+rcx*2+0x4e],al
  42d156:	add    BYTE PTR [r15+rcx*2+0x4e],r8b
  42d15b:	rex.RB push r8
  42d15d:	push   rdx
  42d15e:	rex.WRXB
  42d15f:	add    BYTE PTR [r15+r9*2+0x4e],al
  42d164:	rex.RB
  42d165:	rex.WB
  42d166:	rex.WRX push rax
  42d168:	push   rdx
  42d169:	rex.WRXB
  42d16a:	rex.XB add BYTE PTR [r13+0x53],cl
  42d16e:	rex.RXB add BYTE PTR [r8-0x7d],r10b
  42d172:	std    
  42d173:	inc    eax
  42d175:	test   ebp,edi
  42d177:	push   QWORD PTR [rax-0x3f00027b]
  42d17d:	test   ebp,edi
  42d17f:	inc    eax
  42d181:	test   ebp,edi
  42d183:	inc    eax
  42d185:	test   ebp,edi
  42d187:	inc    eax
  42d189:	test   ebp,edi
  42d18b:	inc    eax
  42d18d:	test   ebp,edi
  42d18f:	inc    eax
  42d191:	test   ebp,edi
  42d193:	inc    eax
  42d195:	test   ebp,edi
  42d197:	inc    eax
  42d199:	test   ebp,edi
  42d19b:	inc    eax
  42d19d:	test   ebp,edi
  42d19f:	inc    eax
  42d1a1:	test   ebp,edi
  42d1a3:	inc    eax
  42d1a5:	test   ebp,edi
  42d1a7:	inc    eax
  42d1a9:	test   ebp,edi
  42d1ab:	inc    eax
  42d1ad:	test   ebp,edi
  42d1af:	inc    eax
  42d1b1:	test   ebp,edi
  42d1b3:	inc    eax
  42d1b5:	test   ebp,edi
  42d1b7:	inc    eax
  42d1b9:	test   ebp,edi
  42d1bb:	inc    eax
  42d1bd:	test   ebp,edi
  42d1bf:	inc    eax
  42d1c1:	test   ebp,edi
  42d1c3:	inc    eax
  42d1c5:	test   ebp,edi
  42d1c7:	inc    eax
  42d1c9:	test   ebp,edi
  42d1cb:	inc    eax
  42d1cd:	test   ebp,edi
  42d1cf:	inc    eax
  42d1d1:	test   ebp,edi
  42d1d3:	inc    eax
  42d1d5:	test   ebp,edi
  42d1d7:	inc    eax
  42d1d9:	test   ebp,edi
  42d1db:	inc    eax
  42d1dd:	test   ebp,edi
  42d1df:	inc    eax
  42d1e1:	test   ebp,edi
  42d1e3:	inc    eax
  42d1e5:	test   ebp,edi
  42d1e7:	inc    eax
  42d1e9:	test   ebp,edi
  42d1eb:	inc    eax
  42d1ed:	test   ebp,edi
  42d1ef:	inc    eax
  42d1f1:	test   ebp,edi
  42d1f3:	inc    eax
  42d1f5:	test   ebp,edi
  42d1f7:	inc    eax
  42d1f9:	test   ebp,edi
  42d1fb:	inc    eax
  42d1fd:	test   ebp,edi
  42d1ff:	inc    eax
  42d201:	test   ebp,edi
  42d203:	inc    eax
  42d205:	test   ebp,edi
  42d207:	inc    eax
  42d209:	test   ebp,edi
  42d20b:	inc    eax
  42d20d:	test   ebp,edi
  42d20f:	inc    eax
  42d211:	test   ebp,edi
  42d213:	inc    eax
  42d215:	test   ebp,edi
  42d217:	inc    eax
  42d219:	test   ebp,edi
  42d21b:	inc    eax
  42d21d:	test   ebp,edi
  42d21f:	inc    eax
  42d221:	test   ebp,edi
  42d223:	inc    eax
  42d225:	test   ebp,edi
  42d227:	inc    eax
  42d229:	test   ebp,edi
  42d22b:	inc    eax
  42d22d:	test   ebp,edi
  42d22f:	inc    eax
  42d231:	test   ebp,edi
  42d233:	inc    eax
  42d235:	test   ebp,edi
  42d237:	inc    eax
  42d239:	test   ebp,edi
  42d23b:	inc    eax
  42d23d:	test   ebp,edi
  42d23f:	inc    eax
  42d241:	test   ebp,edi
  42d243:	inc    eax
  42d245:	test   ebp,edi
  42d247:	inc    eax
  42d249:	test   ebp,edi
  42d24b:	inc    eax
  42d24d:	test   ebp,edi
  42d24f:	inc    eax
  42d251:	test   ebp,edi
  42d253:	inc    eax
  42d255:	test   ebp,edi
  42d257:	inc    eax
  42d259:	test   ebp,edi
  42d25b:	inc    eax
  42d25d:	test   ebp,edi
  42d25f:	inc    eax
  42d261:	test   ebp,edi
  42d263:	inc    eax
  42d265:	test   ebp,edi
  42d267:	inc    eax
  42d269:	test   ebp,edi
  42d26b:	inc    eax
  42d26d:	test   ebp,edi
  42d26f:	inc    eax
  42d271:	test   ebp,edi
  42d273:	jmp    QWORD PTR [rax-0x3f00027b]
  42d279:	test   ebp,edi
  42d27b:	inc    eax
  42d27d:	test   ebp,edi
  42d27f:	inc    eax
  42d281:	test   ebp,edi
  42d283:	call   QWORD PTR [rax-0x3f00027b]
  42d289:	test   ebp,edi
  42d28b:	inc    eax
  42d28d:	test   ebp,edi
  42d28f:	inc    eax
  42d291:	test   ebp,edi
  42d293:	inc    eax
  42d295:	test   ebp,edi
  42d297:	inc    eax
  42d299:	test   ebp,edi
  42d29b:	inc    eax
  42d29d:	test   ebp,edi
  42d29f:	inc    eax
  42d2a1:	test   ebp,edi
  42d2a3:	inc    eax
  42d2a5:	test   ebp,edi
  42d2a7:	inc    eax
  42d2a9:	test   ebp,edi
  42d2ab:	inc    eax
  42d2ad:	test   ebp,edi
  42d2af:	inc    eax
  42d2b1:	test   ebp,edi
  42d2b3:	inc    DWORD PTR [rax-0x3f00027b]
  42d2b9:	test   ebp,edi
  42d2bb:	inc    eax
  42d2bd:	test   ebp,edi
  42d2bf:	inc    eax
  42d2c1:	test   ebp,edi
  42d2c3:	inc    eax
  42d2c5:	test   ebp,edi
  42d2c7:	inc    eax
  42d2c9:	test   ebp,edi
  42d2cb:	inc    eax
  42d2cd:	test   ebp,edi
  42d2cf:	inc    eax
  42d2d1:	test   ebp,edi
  42d2d3:	push   QWORD PTR [rax-0x7b]
  42d2d6:	std    
  42d2d7:	inc    eax
  42d2d9:	test   ebp,edi
  42d2db:	inc    eax
  42d2dd:	test   ebp,edi
  42d2df:	jmp    QWORD PTR [rax-0x7b]
  42d2e2:	std    
  42d2e3:	inc    eax
  42d2e5:	test   ebp,edi
  42d2e7:	inc    eax
  42d2e9:	test   ebp,edi
  42d2eb:	inc    eax
  42d2ed:	test   ebp,edi
  42d2ef:	inc    eax
  42d2f1:	test   ebp,edi
  42d2f3:	call   QWORD PTR [rax-0x7b]
  42d2f6:	std    
  42d2f7:	inc    eax
  42d2f9:	test   ebp,edi
  42d2fb:	inc    DWORD PTR [rax-0x7b]
  42d2fe:	std    
  42d2ff:	inc    eax
  42d301:	test   ebp,edi
  42d303:	inc    eax
  42d305:	test   ebp,edi
  42d307:	inc    eax
  42d309:	test   ebp,edi
  42d30b:	inc    eax
  42d30d:	test   ebp,edi
  42d30f:	push   QWORD PTR [rax]
  42d311:	test   ebp,edi
  42d313:	inc    eax
  42d315:	test   ebp,edi
  42d317:	inc    eax
  42d319:	test   ebp,edi
  42d31b:	inc    eax
  42d31d:	test   ebp,edi
  42d31f:	inc    eax
  42d321:	test   ebp,edi
  42d323:	inc    eax
  42d325:	test   ebp,edi
  42d327:	inc    eax
  42d329:	test   ebp,edi
  42d32b:	inc    eax
  42d32d:	test   ebp,edi
  42d32f:	inc    eax
  42d331:	test   ebp,edi
  42d333:	inc    eax
  42d335:	test   ebp,edi
  42d337:	inc    eax
  42d339:	test   ebp,edi
  42d33b:	inc    eax
  42d33d:	test   ebp,edi
  42d33f:	inc    eax
  42d341:	test   ebp,edi
  42d343:	inc    eax
  42d345:	test   ebp,edi
  42d347:	inc    eax
  42d349:	test   ebp,edi
  42d34b:	inc    eax
  42d34d:	test   ebp,edi
  42d34f:	inc    eax
  42d351:	test   ebp,edi
  42d353:	inc    eax
  42d355:	test   ebp,edi
  42d357:	inc    eax
  42d359:	test   ebp,edi
  42d35b:	inc    eax
  42d35d:	test   ebp,edi
  42d35f:	inc    eax
  42d361:	test   ebp,edi
  42d363:	inc    eax
  42d365:	test   ebp,edi
  42d367:	inc    eax
  42d369:	test   ebp,edi
  42d36b:	inc    eax
  42d36d:	test   ebp,edi
  42d36f:	jmp    QWORD PTR [rax]
  42d371:	test   ebp,edi
  42d373:	call   QWORD PTR [rax]
  42d375:	test   ebp,edi
  42d377:	inc    eax
  42d379:	test   ebp,edi
  42d37b:	inc    DWORD PTR [rax]
  42d37d:	test   ebp,edi
  42d37f:	push   rax
  42d381:	test   ch,bh
  42d383:	jmp    rax
  42d385:	test   ch,bh
  42d387:	inc    eax
  42d389:	test   ebp,edi
  42d38b:	call   rax
  42d38d:	test   ch,bh
  42d38f:	inc    eax
  42d391:	test   ch,bh
  42d393:	push   QWORD PTR [rax-0x5f00027c]
  42d399:	test   ch,bh
  42d39b:	call   QWORD PTR [rax-0x7f00027c]
  42d3a1:	test   ch,bh
  42d3a3:	push   QWORD PTR [rax-0x7c]
  42d3a6:	std    
  42d3a7:	jmp    QWORD PTR [rax-0x7c]
  42d3aa:	std    
  42d3ab:	inc    eax
  42d3ad:	test   ebp,edi
  42d3af:	inc    eax
  42d3b1:	test   ebp,edi
  42d3b3:	inc    eax
  42d3b5:	test   ebp,edi
  42d3b7:	inc    eax
  42d3b9:	test   ebp,edi
  42d3bb:	inc    eax
  42d3bd:	test   ebp,edi
  42d3bf:	inc    eax
  42d3c1:	test   ebp,edi
  42d3c3:	inc    eax
  42d3c5:	test   ebp,edi
  42d3c7:	inc    eax
  42d3c9:	test   ebp,edi
  42d3cb:	inc    eax
  42d3cd:	test   ebp,edi
  42d3cf:	inc    eax
  42d3d1:	test   ebp,edi
  42d3d3:	inc    eax
  42d3d5:	test   ebp,edi
  42d3d7:	inc    eax
  42d3d9:	test   ebp,edi
  42d3db:	inc    eax
  42d3dd:	test   ebp,edi
  42d3df:	inc    eax
  42d3e1:	test   ebp,edi
  42d3e3:	inc    eax
  42d3e5:	test   ebp,edi
  42d3e7:	inc    eax
  42d3e9:	test   ebp,edi
  42d3eb:	inc    eax
  42d3ed:	test   ebp,edi
  42d3ef:	inc    eax
  42d3f1:	test   ebp,edi
  42d3f3:	inc    eax
  42d3f5:	test   ebp,edi
  42d3f7:	inc    eax
  42d3f9:	test   ebp,edi
  42d3fb:	inc    eax
  42d3fd:	test   ebp,edi
  42d3ff:	inc    eax
  42d401:	test   ebp,edi
  42d403:	inc    eax
  42d405:	test   ebp,edi
  42d407:	inc    eax
  42d409:	test   ebp,edi
  42d40b:	inc    eax
  42d40d:	test   ebp,edi
  42d40f:	inc    eax
  42d411:	test   ebp,edi
  42d413:	inc    eax
  42d415:	test   ebp,edi
  42d417:	inc    eax
  42d419:	test   ebp,edi
  42d41b:	inc    eax
  42d41d:	test   ebp,edi
  42d41f:	inc    eax
  42d421:	test   ebp,edi
  42d423:	inc    eax
  42d425:	test   ebp,edi
  42d427:	inc    eax
  42d429:	test   ebp,edi
  42d42b:	inc    eax
  42d42d:	test   ebp,edi
  42d42f:	inc    eax
  42d431:	test   ebp,edi
  42d433:	call   QWORD PTR [rax-0x7c]
  42d436:	std    
  42d437:	inc    DWORD PTR [rax-0x7c]
  42d43a:	std    
  42d43b:	push   QWORD PTR [rax]
  42d43d:	test   ch,bh
  42d43f:	inc    eax
  42d441:	test   ebp,edi
  42d443:	inc    eax
  42d445:	test   ebp,edi
  42d447:	inc    eax
  42d449:	test   ebp,edi
  42d44b:	jmp    QWORD PTR [rax]
  42d44d:	test   ch,bh
  42d44f:	inc    eax
  42d451:	test   ebp,edi
  42d453:	inc    eax
  42d455:	test   ebp,edi
  42d457:	inc    eax
  42d459:	test   ebp,edi
  42d45b:	inc    eax
  42d45d:	test   ebp,edi
  42d45f:	inc    eax
  42d461:	test   ebp,edi
  42d463:	inc    eax
  42d465:	test   ebp,edi
  42d467:	inc    eax
  42d469:	test   ebp,edi
  42d46b:	inc    eax
  42d46d:	test   ebp,edi
  42d46f:	inc    eax
  42d471:	test   ebp,edi
  42d473:	inc    eax
  42d475:	test   ebp,edi
  42d477:	call   QWORD PTR [rax]
  42d479:	test   ch,bh
  42d47b:	inc    DWORD PTR [rax]
  42d47d:	test   ch,bh
  42d47f:	push   rax
  42d481:	cmp    ebp,0xffffffff
  42d484:	loopne 0x42d409
  42d486:	std    
  42d487:	call   rax
  42d489:	cmp    ebp,0xffffffff
  42d48c:	rol    BYTE PTR [rbx-0x7a3f0003],0xfd
  42d493:	inc    eax
  42d495:	test   ebp,edi
  42d497:	inc    eax
  42d499:	test   ebp,edi
  42d49b:	inc    eax
  42d49d:	test   ebp,edi
  42d49f:	push   QWORD PTR [rax-0x5f00027d]
  42d4a5:	cmp    ebp,0xffffffff
  42d4a8:	nop
  42d4a9:	cmp    ebp,0xffffffff
  42d4ac:	rol    BYTE PTR [rbp-0x7a3f0003],0xfd
  42d4b3:	inc    eax
  42d4b5:	test   ebp,edi
  42d4b7:	inc    eax
  42d4b9:	test   ebp,edi
  42d4bb:	inc    eax
  42d4bd:	test   ebp,edi
  42d4bf:	inc    eax
  42d4c1:	test   ebp,edi
  42d4c3:	inc    eax
  42d4c5:	test   ebp,edi
  42d4c7:	inc    eax
  42d4c9:	test   ebp,edi
  42d4cb:	inc    eax
  42d4cd:	test   ebp,edi
  42d4cf:	inc    eax
  42d4d1:	test   ebp,edi
  42d4d3:	inc    eax
  42d4d5:	test   ebp,edi
  42d4d7:	inc    eax
  42d4d9:	test   ebp,edi
  42d4db:	inc    eax
  42d4dd:	test   ebp,edi
  42d4df:	inc    eax
  42d4e1:	test   ebp,edi
  42d4e3:	inc    DWORD PTR [rax+0x70fffd83]
  42d4e9:	cmp    ebp,0xffffffff
  42d4ec:	(bad)  
  42d4ed:	cmp    ebp,0xffffffff
  42d4f0:	je     0x42d561
  42d4f2:	imul   esp,DWORD PTR [rbp+0x6e],0x2e
  42d4f6:	movsxd eax,DWORD PTR [rax]
  42d4f8:	imul   ebp,DWORD PTR [rsi+0x66],0x6e3e2d6f
  42d4ff:	jne    0x42d56e
  42d501:	pop    rdi
  42d502:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42d505:	jae    0x42d527
  42d507:	and    BYTE PTR ds:[rax],dh
  42d50a:	add    BYTE PTR [rax],al
  42d50c:	add    BYTE PTR [rax],al
  42d50e:	add    BYTE PTR [rax],al
  42d510:	je     0x42d576
  42d512:	jae    0x42d573
  42d514:	jo     0x42d588
  42d516:	outs   dx,DWORD PTR ds:[rsi]
  42d517:	movsxd esp,DWORD PTR [rbp+0x73]
  42d51a:	jae    0x42d57b
  42d51c:	jb     0x42d58d
  42d51e:	ja     0x42d548
  42d520:	sub    DWORD PTR [rdx],edi
  42d522:	and    BYTE PTR [rdx+0x65],dh
  42d525:	(bad)  
  42d526:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c6f6320
  42d52e:	jne    0x42d59d
  42d530:	outs   dx,BYTE PTR ds:[rsi]
  42d531:	and    BYTE PTR [rip+0xa2064],ah        # 0x4cf59b
  42d537:	add    BYTE PTR [rsp+riz*2+0x73],dh
  42d53b:	pop    rdi
  42d53c:	jo     0x42d5b0
  42d53e:	outs   dx,DWORD PTR ds:[rsi]
  42d53f:	movsxd esp,DWORD PTR [rbp+0x73]
  42d542:	jae    0x42d5a3
  42d544:	outs   dx,BYTE PTR ds:[rsi]
  42d545:	(bad)  
  42d547:	jb     0x42d5b8
  42d549:	ja     0x42d573
  42d54b:	sub    DWORD PTR [rdx],edi
  42d54d:	and    BYTE PTR [rdx+0x65],dh
  42d550:	(bad)  
  42d551:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c6f6320
  42d559:	jne    0x42d5c8
  42d55b:	outs   dx,BYTE PTR ds:[rsi]
  42d55c:	and    BYTE PTR [rip+0xa2064],ah        # 0x4cf5c6
  42d562:	add    BYTE PTR [rax],al
  42d564:	add    BYTE PTR [rax],al
  42d566:	add    BYTE PTR [rax],al
  42d568:	(bad)  
  42d569:	fs push 0x75
  42d56c:	jae    0x42d5e2
  42d56e:	pop    rdi
  42d56f:	movsxd ebp,DWORD PTR [rax+0x61]
  42d572:	jb     0x42d5d5
  42d574:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  42d578:	pop    rdi
  42d579:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42d57c:	jne    0x42d5eb
  42d57e:	outs   dx,BYTE PTR ds:[rsi]
  42d57f:	pop    rdi
  42d580:	jae    0x42d5eb
  42d582:	jp     0x42d5e9
  42d584:	cmp    cl,BYTE PTR [rdx]
  42d586:	or     DWORD PTR [rbx+0x65],edx
  42d589:	jb     0x42d601
  42d58b:	gs jb  0x42d5ae
  42d58e:	movsxd ebp,DWORD PTR [rax+0x61]
  42d591:	jb     0x42d606
  42d593:	gs je  0x42d5d0
  42d596:	and    BYTE PTR [rip+0x53090a73],ah        # 0x534be00f
  42d59c:	gs jb  0x42d615
  42d59f:	gs jb  0x42d5c2
  42d5a2:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42d5a5:	jne    0x42d614
  42d5a7:	outs   dx,BYTE PTR ds:[rsi]
  42d5a8:	pop    rdi
  42d5a9:	jae    0x42d614
  42d5ab:	jp     0x42d612
  42d5ad:	cmp    ah,BYTE PTR [rax]
  42d5af:	and    eax,0x43090a64
  42d5b4:	ins    BYTE PTR es:[rdi],dx
  42d5b5:	imul   esp,DWORD PTR [rbp+0x6e],0x68632074
  42d5bc:	(bad)  
  42d5bd:	jb     0x42d632
  42d5bf:	gs je  0x42d5fc
  42d5c2:	and    BYTE PTR [rip+0x43090a73],ah        # 0x434be03b
  42d5c8:	ins    BYTE PTR es:[rdi],dx
  42d5c9:	imul   esp,DWORD PTR [rbp+0x6e],0x6f632074
  42d5d0:	ins    BYTE PTR es:[rdi],dx
  42d5d1:	jne    0x42d640
  42d5d3:	outs   dx,BYTE PTR ds:[rsi]
  42d5d4:	pop    rdi
  42d5d5:	jae    0x42d640
  42d5d7:	jp     0x42d63e
  42d5d9:	cmp    ah,BYTE PTR [rax]
  42d5db:	and    eax,0x74000a64
  42d5e0:	fs jae 0x42d618
  42d5e3:	pop    rdi
  42d5e4:	jo     0x42d658
  42d5e6:	outs   dx,DWORD PTR ds:[rsi]
  42d5e7:	movsxd esp,DWORD PTR [rbp+0x73]
  42d5ea:	jae    0x42d64b
  42d5ec:	jb     0x42d653
  42d5ee:	jae    0x42d665
  42d5f0:	ins    BYTE PTR es:[rdi],dx
  42d5f1:	je     0x42d625
  42d5f3:	or     al,BYTE PTR [rax]
  42d5f5:	outs   dx,BYTE PTR ds:[rsi]
  42d5f6:	jne    0x42d665
  42d5f8:	pop    rdi
  42d5f9:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42d5fc:	jae    0x42d63b
  42d5fe:	and    eax,0x63000a64
  42d603:	outs   dx,DWORD PTR ds:[rsi]
  42d604:	ins    BYTE PTR es:[rdi],dx
  42d605:	and    BYTE PTR [rip+0xa3a64],ah        # 0x4d106f
  42d60b:	or     DWORD PTR [rbx+0x6f],esp
  42d60e:	ins    BYTE PTR es:[rdi],dx
  42d60f:	jne    0x42d67e
  42d611:	outs   dx,BYTE PTR ds:[rsi]
  42d612:	pop    rdi
  42d613:	outs   dx,BYTE PTR ds:[rsi]
  42d614:	(bad)  
  42d615:	ins    DWORD PTR es:[rdi],dx
  42d616:	gs cmp eax,0x5d73255b
  42d61c:	or     al,BYTE PTR [rax]
  42d61e:	add    BYTE PTR [rax],al
  42d620:	or     DWORD PTR [rsi+0x6c],esp
  42d623:	(bad)  
  42d624:	addr32 jae 0x42d664
  42d627:	and    eax,0x74752078
  42d62c:	jns    0x42d69e
  42d62e:	gs cmp eax,0x74206425
  42d634:	jns    0x42d6a6
  42d636:	gs cmp eax,0x76206425
  42d63c:	(bad)  
  42d63d:	jb     0x42d6a8
  42d63f:	outs   dx,BYTE PTR ds:[rsi]
  42d640:	je     0x42d67f
  42d642:	and    eax,0x9000a64
  42d647:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42d64a:	jae    0x42d6b5
  42d64c:	jp     0x42d6b3
  42d64e:	cmp    eax,0x70206425
  42d653:	jb     0x42d6ba
  42d655:	movsxd edi,DWORD PTR [rip+0x73206425]        # 0x73633a80
  42d65b:	movsxd esp,DWORD PTR [rcx+0x6c]
  42d65e:	gs cmp eax,0xa6425
  42d664:	gs ins BYTE PTR es:[rdi],dx
  42d666:	gs ins DWORD PTR es:[rdi],dx
  42d668:	and    BYTE PTR [rip+0xa3a64],ah        # 0x4d10d2
  42d66e:	(bad)  
  42d66f:	imul   ebp,DWORD PTR [rsi+0x61],0x6c007972
  42d676:	outs   dx,DWORD PTR ds:[rsi]
  42d677:	outs   dx,BYTE PTR ds:[rsi]
  42d678:	addr32 (bad) 
  42d67a:	imul   ebp,DWORD PTR [rsi+0x61],0x62007972
  42d681:	imul   esi,DWORD PTR [rax+rax*1+0x62],0x6e2d7469
  42d689:	jne    0x42d6f7
  42d68b:	ins    BYTE PTR es:[rdi],dx
  42d68c:	add    BYTE PTR [rbx+0x68],ah
  42d68f:	(bad)  
  42d690:	jb     0x42d692
  42d692:	jae    0x42d701
  42d694:	(bad)  
  42d695:	ins    BYTE PTR es:[rdi],dx
  42d696:	ins    BYTE PTR es:[rdi],dx
  42d697:	fs (bad) 
  42d699:	je     0x42d700
  42d69b:	je     0x42d706
  42d69d:	ins    DWORD PTR es:[rdi],dx
  42d69e:	add    BYTE PTR gs:[rcx+riz*2+0x74],ah
  42d6a3:	gs je  0x42d70f
  42d6a6:	ins    DWORD PTR es:[rdi],dx
  42d6a7:	add    BYTE PTR gs:[rcx+riz*2+0x74],ah
  42d6ac:	gs je  0x42d718
  42d6af:	ins    DWORD PTR es:[rdi],dx
  42d6b0:	gs sub eax,0x6c6c756e
  42d6b6:	add    BYTE PTR [rbp+riz*2+0x63],ah
  42d6ba:	imul   ebp,DWORD PTR [rbp+0x61],0x6c66006c
  42d6c1:	outs   dx,DWORD PTR ds:[rsi]
  42d6c2:	(bad)  
  42d6c3:	je     0x42d6c5
  42d6c5:	data16 ins BYTE PTR es:[rdi],dx
  42d6c7:	outs   dx,DWORD PTR ds:[rsi]
  42d6c8:	(bad)  
  42d6c9:	je     0x42d6f8
  42d6cb:	outs   dx,BYTE PTR ds:[rsi]
  42d6cc:	jne    0x42d73a
  42d6ce:	ins    BYTE PTR es:[rdi],dx
  42d6cf:	add    BYTE PTR [rcx+0x6d],ch
  42d6d2:	(bad)  
  42d6d3:	add    BYTE PTR gs:[ecx+ebp*2+0x6e],dh
  42d6d9:	jns    0x42d744
  42d6db:	outs   dx,BYTE PTR ds:[rsi]
  42d6dc:	je     0x42d6de
  42d6de:	jae    0x42d74d
  42d6e0:	(bad)  
  42d6e1:	ins    BYTE PTR es:[rdi],dx
  42d6e2:	ins    BYTE PTR es:[rdi],dx
  42d6e3:	imul   ebp,DWORD PTR [rsi+0x74],0x746e6900
  42d6ea:	add    BYTE PTR [rdx+0x69],ah
  42d6ed:	imul   ebp,DWORD PTR [esi+0x74],0x736e7500
  42d6f5:	imul   esp,DWORD PTR [rdi+0x6e],0x74206465
  42d6fc:	imul   ebp,DWORD PTR [rsi+0x79],0x746e69
  42d703:	jne    0x42d773
  42d705:	jae    0x42d770
  42d707:	outs   dx,BYTE PTR ds:[esi]
  42d709:	gs and BYTE PTR fs:[rbx+0x6d],dh
  42d70e:	(bad)  
  42d70f:	ins    BYTE PTR es:[rdi],dx
  42d710:	ins    BYTE PTR es:[rdi],dx
  42d711:	imul   ebp,DWORD PTR [rsi+0x74],0x736e7500
  42d718:	imul   esp,DWORD PTR [rdi+0x6e],0x69206465
  42d71f:	outs   dx,BYTE PTR ds:[rsi]
  42d720:	je     0x42d722
  42d722:	jne    0x42d792
  42d724:	jae    0x42d78f
  42d726:	outs   dx,BYTE PTR ds:[esi]
  42d728:	gs and BYTE PTR fs:[rdx+0x69],ah
  42d72d:	imul   ebp,DWORD PTR [esi+0x74],0x746e6900
  42d735:	gs addr32 gs jb 0x42d767
  42d73a:	outs   dx,BYTE PTR ds:[rsi]
  42d73b:	jne    0x42d7a9
  42d73d:	ins    BYTE PTR es:[rdi],dx
  42d73e:	add    BYTE PTR [rbx+0x6d],dh
  42d741:	(bad)  
  42d742:	ins    BYTE PTR es:[rdi],dx
  42d743:	ins    BYTE PTR es:[rdi],dx
  42d744:	ins    DWORD PTR es:[rdi],dx
  42d745:	outs   dx,DWORD PTR ds:[rsi]
  42d746:	outs   dx,BYTE PTR ds:[rsi]
  42d747:	gs jns 0x42d74a
  42d74a:	ins    DWORD PTR es:[rdi],dx
  42d74b:	outs   dx,DWORD PTR ds:[rsi]
  42d74c:	outs   dx,BYTE PTR ds:[rsi]
  42d74d:	gs jns 0x42d750
  42d750:	ins    DWORD PTR es:[rdi],dx
  42d751:	outs   dx,DWORD PTR ds:[rsi]
  42d752:	outs   dx,BYTE PTR ds:[rsi]
  42d753:	gs jns 0x42d783
  42d756:	outs   dx,BYTE PTR ds:[rsi]
  42d757:	jne    0x42d7c5
  42d759:	ins    BYTE PTR es:[rdi],dx
  42d75a:	add    BYTE PTR [rbp+0x43],dl
  42d75d:	push   rbx
  42d75e:	sub    eax,0x65742032
  42d763:	js     0x42d7d9
  42d765:	add    BYTE PTR [rbp+0x43],dl
  42d768:	push   rbx
  42d769:	sub    eax,0x61762032
  42d76e:	jb     0x42d7d3
  42d770:	push   0x6e007261
  42d775:	jne    0x42d7e4
  42d777:	gs jb  0x42d7e3
  42d77a:	movsxd eax,DWORD PTR [rax]
  42d77c:	jb     0x42d7e3
  42d77e:	(bad)  
  42d77f:	ins    BYTE PTR es:[rdi],dx
  42d780:	add    BYTE PTR [rbp+riz*2+0x78],dh
  42d784:	je     0x42d786
  42d786:	jne    0x42d7f6
  42d788:	imul   esi,DWORD PTR [rcx+0x75],0x65646965
  42d78f:	outs   dx,BYTE PTR ds:[rsi]
  42d790:	je     0x42d7fb
  42d792:	imul   sp,WORD PTR [rbp+0x72],0x7600
  42d798:	(bad)  
  42d799:	jb     0x42d7fd
  42d79b:	imul   ebp,DWORD PTR [rsi+0x61],0x76007972
  42d7a2:	(bad)  
  42d7a3:	jb     0x42d808
  42d7a5:	push   0x76007261
  42d7aa:	(bad)  
  42d7ab:	jb     0x42d816
  42d7ad:	(bad)  
  42d7ae:	outs   dx,BYTE PTR ds:[rsi]
  42d7af:	je     0x42d7b1
  42d7b1:	jbe    0x42d822
  42d7b3:	imul   esp,DWORD PTR [rax+rax*1+0x78],0x616e6962
  42d7bb:	jb     0x42d836
  42d7bd:	add    BYTE PTR [rax+0x63],bh
  42d7c0:	push   0x78007261
  42d7c5:	and    BYTE PTR [rbp+0x43],dl
  42d7c8:	push   rbx
  42d7c9:	sub    eax,0x68632032
  42d7ce:	(bad)  
  42d7cf:	jb     0x42d7d1
  42d7d1:	js     0x42d7f3
  42d7d3:	push   rbp
  42d7d4:	rex.XB push r11
  42d7d6:	sub    eax,0x61762032
  42d7db:	jb     0x42d840
  42d7dd:	push   0x78007261
  42d7e2:	jbe    0x42d845
  42d7e4:	jb     0x42d848
  42d7e6:	imul   ebp,DWORD PTR [rsi+0x61],0x78007972
  42d7ed:	jbe    0x42d850
  42d7ef:	jb     0x42d854
  42d7f1:	push   0x78007261
  42d7f6:	ins    DWORD PTR es:[rdi],dx
  42d7f7:	ins    BYTE PTR es:[rdi],dx
  42d7f8:	add    BYTE PTR [rcx+riz*2+0x74],ah
  42d7fc:	add    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
  42d801:	add    BYTE PTR gs:[rcx+riz*2+0x74],ah
  42d806:	gs je  0x42d872
  42d809:	ins    DWORD PTR es:[rdi],dx
  42d80a:	xor    al,BYTE PTR gs:[rax]
  42d80d:	fs (bad) 
  42d80f:	je     0x42d876
  42d811:	je     0x42d87c
  42d813:	ins    DWORD PTR es:[rdi],dx
  42d814:	outs   dx,DWORD PTR gs:[rsi]
  42d816:	data16 data16 jae 0x42d87f
  42d81a:	je     0x42d81c
  42d81c:	(bad)  
  42d81d:	imul   esp,DWORD PTR [rdi+0x74],0x656d69
  42d824:	(bad)  
  42d825:	imul   esp,DWORD PTR [rdi+0x64],0x74657461
  42d82c:	imul   ebp,DWORD PTR [rbp+0x65],0xfd92c000
  42d833:	inc    DWORD PTR [rax-0x7f00026d]
  42d839:	xchg   ebx,eax
  42d83a:	std    
  42d83b:	push   QWORD PTR [rax-0x5f00026e]
  42d841:	xchg   edx,eax
  42d842:	std    
  42d843:	call   QWORD PTR [rax-0x7f00026e]
  42d849:	xchg   edx,eax
  42d84a:	std    
  42d84b:	inc    DWORD PTR [rax+0x70fffd91]
  42d851:	xchg   ecx,eax
  42d852:	std    
  42d853:	call   QWORD PTR [rax-0x70]
  42d856:	std    
  42d857:	inc    DWORD PTR [rax-0x70]
  42d85a:	std    
  42d85b:	push   rax
  42d85d:	xchg   edx,eax
  42d85e:	std    
  42d85f:	jmp    rax
  42d861:	xchg   edx,eax
  42d862:	std    
  42d863:	inc    DWORD PTR [rax-0x2f00026d]
  42d869:	xchg   edx,eax
  42d86a:	std    
  42d86b:	inc    DWORD PTR [rax-0x7f00026d]
  42d871:	nop
  42d872:	std    
  42d873:	push   QWORD PTR [rax-0x70]
  42d876:	std    
  42d877:	call   QWORD PTR [rax-0x70]
  42d87a:	std    
  42d87b:	call   QWORD PTR [rax+0x40fffd90]
  42d881:	nop
  42d882:	std    
  42d883:	jmp    QWORD PTR [rax-0x6d]
  42d886:	std    
  42d887:	inc    DWORD PTR [rax-0x7f00026d]
  42d88d:	xchg   ebx,eax
  42d88e:	std    
  42d88f:	inc    DWORD PTR [rax+0x50fffd93]
  42d895:	xchg   ebx,eax
  42d896:	std    
  42d897:	inc    DWORD PTR [rax+0x40fffd93]
  42d89d:	xchg   ebx,eax
  42d89e:	std    
  42d89f:	call   QWORD PTR [rax-0x6f]
  42d8a2:	std    
  42d8a3:	inc    DWORD PTR [rax-0x6f]
  42d8a6:	std    
  42d8a7:	push   QWORD PTR [rax]
  42d8a9:	xchg   ecx,eax
  42d8aa:	std    
  42d8ab:	jmp    QWORD PTR [rax]
  42d8ad:	xchg   ecx,eax
  42d8ae:	std    
  42d8af:	inc    DWORD PTR [rax+0x10fffd93]
  42d8b5:	xchg   ecx,eax
  42d8b6:	std    
  42d8b7:	inc    DWORD PTR [rax]
  42d8b9:	xchg   ecx,eax
  42d8ba:	std    
  42d8bb:	push   rax
  42d8bd:	nop
  42d8be:	std    
  42d8bf:	jmp    rax
  42d8c1:	nop
  42d8c2:	std    
  42d8c3:	inc    DWORD PTR [rax-0x7f00026d]
  42d8c9:	xchg   ebx,eax
  42d8ca:	std    
  42d8cb:	inc    DWORD PTR [rax-0x7f00026d]
  42d8d1:	xchg   ebx,eax
  42d8d2:	std    
  42d8d3:	inc    DWORD PTR [rax-0x7f00026d]
  42d8d9:	xchg   ebx,eax
  42d8da:	std    
  42d8db:	inc    DWORD PTR [rax-0x2f00026d]
  42d8e1:	nop
  42d8e2:	std    
  42d8e3:	inc    DWORD PTR [rax-0x5f00026d]
  42d8e9:	nop
  42d8ea:	std    
  42d8eb:	inc    DWORD PTR [rax+0x60fffd93]
  42d8f1:	nop
  42d8f2:	std    
  42d8f3:	inc    DWORD PTR [rax-0x3f00026d]
  42d8f9:	nop
  42d8fa:	std    
  42d8fb:	push   QWORD PTR [rax-0x7f000270]
  42d901:	xchg   ebx,eax
  42d902:	std    
  42d903:	inc    DWORD PTR [rax-0x7f00026d]
  42d909:	xchg   ebx,eax
  42d90a:	std    
  42d90b:	inc    DWORD PTR [rax-0x7f00026d]
  42d911:	xchg   ebx,eax
  42d912:	std    
  42d913:	inc    DWORD PTR [rax-0x7f00026d]
  42d919:	xchg   ebx,eax
  42d91a:	std    
  42d91b:	inc    DWORD PTR [rax-0x7f00026d]
  42d921:	xchg   ebx,eax
  42d922:	std    
  42d923:	inc    DWORD PTR [rax-0x7f00026d]
  42d929:	xchg   ebx,eax
  42d92a:	std    
  42d92b:	inc    DWORD PTR [rax-0x7f00026d]
  42d931:	xchg   ebx,eax
  42d932:	std    
  42d933:	inc    DWORD PTR [rax-0x7f00026d]
  42d939:	xchg   ebx,eax
  42d93a:	std    
  42d93b:	push   QWORD PTR [rax]
  42d93d:	xchg   ebx,eax
  42d93e:	std    
  42d93f:	jmp    QWORD PTR [rax]
  42d941:	xchg   ebx,eax
  42d942:	std    
  42d943:	inc    DWORD PTR [rax-0x7f00026d]
  42d949:	xchg   ebx,eax
  42d94a:	std    
  42d94b:	inc    DWORD PTR [rax+0x10fffd93]
  42d951:	xchg   ebx,eax
  42d952:	std    
  42d953:	push   rax
  42d955:	xchg   ecx,eax
  42d956:	std    
  42d957:	inc    DWORD PTR [rax-0x1f00026d]
  42d95d:	xchg   ecx,eax
  42d95e:	std    
  42d95f:	inc    DWORD PTR [rax-0x2f00026d]
  42d965:	xchg   ecx,eax
  42d966:	std    
  42d967:	inc    eax
  42d969:	xchg   ecx,eax
  42d96a:	std    
  42d96b:	push   QWORD PTR [rax-0x6e]
  42d96e:	std    
  42d96f:	jmp    QWORD PTR [rax-0x6e]
  42d972:	std    
  42d973:	inc    DWORD PTR [rax-0x7f00026d]
  42d979:	xchg   ebx,eax
  42d97a:	std    
  42d97b:	inc    DWORD PTR [rax-0x7f00026d]
  42d981:	xchg   ebx,eax
  42d982:	std    
  42d983:	inc    DWORD PTR [rax-0x7f00026d]
  42d989:	xchg   ebx,eax
  42d98a:	std    
  42d98b:	inc    DWORD PTR [rax-0x7f00026d]
  42d991:	xchg   ebx,eax
  42d992:	std    
  42d993:	inc    DWORD PTR [rax-0x7f00026d]
  42d999:	xchg   ebx,eax
  42d99a:	std    
  42d99b:	call   QWORD PTR [rax-0x6e]
  42d99e:	std    
  42d99f:	inc    DWORD PTR [rax-0x7f00026d]
  42d9a5:	xchg   ebx,eax
  42d9a6:	std    
  42d9a7:	inc    DWORD PTR [rax-0x7f00026d]
  42d9ad:	xchg   ebx,eax
  42d9ae:	std    
  42d9af:	inc    DWORD PTR [rax-0x6e]
  42d9b2:	std    
  42d9b3:	inc    DWORD PTR [rax-0x7f00026d]
  42d9b9:	xchg   ebx,eax
  42d9ba:	std    
  42d9bb:	inc    DWORD PTR [rax-0x7f00026d]
  42d9c1:	xchg   ebx,eax
  42d9c2:	std    
  42d9c3:	inc    DWORD PTR [rax-0x7f00026d]
  42d9c9:	xchg   ebx,eax
  42d9ca:	std    
  42d9cb:	inc    DWORD PTR [rax-0x7f00026d]
  42d9d1:	xchg   ebx,eax
  42d9d2:	std    
  42d9d3:	inc    DWORD PTR [rax-0x7f00026d]
  42d9d9:	xchg   ebx,eax
  42d9da:	std    
  42d9db:	inc    DWORD PTR [rax-0x7f00026d]
  42d9e1:	xchg   ebx,eax
  42d9e2:	std    
  42d9e3:	inc    DWORD PTR [rax-0x7f00026d]
  42d9e9:	xchg   ebx,eax
  42d9ea:	std    
  42d9eb:	inc    DWORD PTR [rax-0x7f00026d]
  42d9f1:	xchg   ebx,eax
  42d9f2:	std    
  42d9f3:	inc    DWORD PTR [rax-0x7f00026d]
  42d9f9:	xchg   ebx,eax
  42d9fa:	std    
  42d9fb:	inc    DWORD PTR [rax-0x7f00026d]
  42da01:	xchg   ebx,eax
  42da02:	std    
  42da03:	inc    DWORD PTR [rax-0x7f00026d]
  42da09:	xchg   ebx,eax
  42da0a:	std    
  42da0b:	inc    DWORD PTR [rax-0x7f00026d]
  42da11:	xchg   ebx,eax
  42da12:	std    
  42da13:	inc    DWORD PTR [rax-0x7f00026d]
  42da19:	xchg   ebx,eax
  42da1a:	std    
  42da1b:	inc    DWORD PTR [rax-0x7f00026d]
  42da21:	xchg   ebx,eax
  42da22:	std    
  42da23:	inc    DWORD PTR [rax-0x7f00026d]
  42da29:	xchg   ebx,eax
  42da2a:	std    
  42da2b:	inc    DWORD PTR [rax-0x7f00026d]
  42da31:	xchg   ebx,eax
  42da32:	std    
  42da33:	inc    DWORD PTR [rax-0x7f00026d]
  42da39:	xchg   ebx,eax
  42da3a:	std    
  42da3b:	inc    DWORD PTR [rax-0x7f00026d]
  42da41:	xchg   ebx,eax
  42da42:	std    
  42da43:	inc    DWORD PTR [rax+0x30fffd93]
  42da49:	xchg   edx,eax
  42da4a:	std    
  42da4b:	inc    DWORD PTR [rax+0x20fffd93]
  42da51:	xchg   edx,eax
  42da52:	std    
  42da53:	inc    DWORD PTR [rax-0x7f00026d]
  42da59:	xchg   ebx,eax
  42da5a:	std    
  42da5b:	inc    DWORD PTR [rax-0x7f00026d]
  42da61:	xchg   ebx,eax
  42da62:	std    
  42da63:	inc    DWORD PTR [rax+0x10fffd93]
  42da69:	xchg   edx,eax
  42da6a:	std    
  42da6b:	inc    DWORD PTR [rax+0xfffd93]
  42da71:	xchg   edx,eax
  42da72:	std    
  42da73:	inc    DWORD PTR [rax-0x7f00026d]
  42da79:	xchg   ebx,eax
  42da7a:	std    
  42da7b:	inc    DWORD PTR [rax-0x7f00026d]
  42da81:	xchg   ebx,eax
  42da82:	std    
  42da83:	inc    DWORD PTR [rax-0x7f00026d]
  42da89:	xchg   ebx,eax
  42da8a:	std    
  42da8b:	inc    DWORD PTR [rax-0x7f00026d]
  42da91:	xchg   ebx,eax
  42da92:	std    
  42da93:	inc    DWORD PTR [rax-0x7f00026d]
  42da99:	xchg   ebx,eax
  42da9a:	std    
  42da9b:	inc    DWORD PTR [rax+0x70fffd93]
  42daa1:	xchg   ebx,eax
  42daa2:	std    
  42daa3:	push   QWORD PTR [rax-0x7f00026f]
  42daa9:	xchg   ebx,eax
  42daaa:	std    
  42daab:	inc    DWORD PTR [rax-0x7f00026d]
  42dab1:	xchg   ebx,eax
  42dab2:	std    
  42dab3:	inc    DWORD PTR [rax-0x7f00026d]
  42dab9:	xchg   ebx,eax
  42daba:	std    
  42dabb:	inc    DWORD PTR [rax-0x7f00026d]
  42dac1:	xchg   ebx,eax
  42dac2:	std    
  42dac3:	inc    DWORD PTR [rax-0x7f00026d]
  42dac9:	xchg   ebx,eax
  42daca:	std    
  42dacb:	inc    DWORD PTR [rax-0x7f00026d]
  42dad1:	xchg   ebx,eax
  42dad2:	std    
  42dad3:	inc    DWORD PTR [rax-0x7f00026d]
  42dad9:	xchg   ebx,eax
  42dada:	std    
  42dadb:	inc    DWORD PTR [rax-0x7f00026d]
  42dae1:	xchg   ebx,eax
  42dae2:	std    
  42dae3:	inc    DWORD PTR [rax-0x7f00026d]
  42dae9:	xchg   ebx,eax
  42daea:	std    
  42daeb:	inc    DWORD PTR [rax-0x7f00026d]
  42daf1:	xchg   ebx,eax
  42daf2:	std    
  42daf3:	inc    DWORD PTR [rax-0x7f00026d]
  42daf9:	xchg   ebx,eax
  42dafa:	std    
  42dafb:	inc    DWORD PTR [rax-0x7f00026d]
  42db01:	xchg   ebx,eax
  42db02:	std    
  42db03:	inc    DWORD PTR [rax-0x7f00026d]
  42db09:	xchg   ebx,eax
  42db0a:	std    
  42db0b:	inc    DWORD PTR [rax-0x7f00026d]
  42db11:	xchg   ebx,eax
  42db12:	std    
  42db13:	inc    DWORD PTR [rax-0x7f00026d]
  42db19:	xchg   ebx,eax
  42db1a:	std    
  42db1b:	inc    DWORD PTR [rax-0x7f00026d]
  42db21:	xchg   ebx,eax
  42db22:	std    
  42db23:	inc    DWORD PTR [rax-0x7f00026d]
  42db29:	xchg   ebx,eax
  42db2a:	std    
  42db2b:	inc    DWORD PTR [rax-0x7f00026d]
  42db31:	xchg   ebx,eax
  42db32:	std    
  42db33:	inc    DWORD PTR [rax-0x5f00026d]
  42db39:	xchg   ecx,eax
  42db3a:	std    
  42db3b:	inc    DWORD PTR [rax-0x7f00026d]
  42db41:	xchg   ebx,eax
  42db42:	std    
  42db43:	inc    DWORD PTR [rax-0x7f00026d]
  42db49:	xchg   ebx,eax
  42db4a:	std    
  42db4b:	inc    DWORD PTR [rax-0x6f00026d]
  42db51:	xchg   ecx,eax
  42db52:	std    
  42db53:	inc    DWORD PTR [rax-0x7f00026d]
  42db59:	xchg   ebx,eax
  42db5a:	std    
  42db5b:	inc    DWORD PTR [rax-0x7f00026d]
  42db61:	xchg   ebx,eax
  42db62:	std    
  42db63:	inc    DWORD PTR [rax-0x7f00026d]
  42db69:	xchg   ebx,eax
  42db6a:	std    
  42db6b:	inc    DWORD PTR [rax+0xfffd93]
  42db71:	xchg   ebx,eax
  42db72:	std    
  42db73:	inc    DWORD PTR [rax+0x60fffd93]
  42db79:	xchg   ecx,eax
  42db7a:	std    
  42db7b:	call   FWORD PTR [rbx+0x66]
  42db7e:	outs   dx,DWORD PTR ds:[rsi]
  42db7f:	jb     0x42dba1
  42db81:	jo     0x42dbe4
  42db83:	jb     0x42dbe6
  42db85:	ins    DWORD PTR es:[rdi],dx
  42db86:	gs je  0x42dbee
  42db89:	jb     0x42dbe8
  42db8b:	add    BYTE PTR [rax],al
  42db8d:	add    BYTE PTR [rax],al
  42db8f:	add    BYTE PTR [rsp+riz*2+0x73],dh
  42db93:	pop    rdi
  42db94:	addr32 gs je 0x42dbf7
  42db98:	fs (bad) 
  42db9a:	je     0x42dbfd
  42db9c:	pop    rdi
  42db9d:	imul   ebp,DWORD PTR [rsi+0x66],0x7025286f
  42dba4:	sub    al,0x20
  42dba6:	and    eax,0x25202c70
  42dbab:	sub    DWORD PTR fs:[rax],esp
  42dbae:	and    eax,0xa73
  42dbb3:	add    BYTE PTR [rax],al
  42dbb5:	add    BYTE PTR [rax],al
  42dbb7:	add    BYTE PTR [rax+0x72],dh
  42dbba:	outs   dx,DWORD PTR ds:[rsi]
  42dbbb:	movsxd esp,DWORD PTR [rbp+0x73]
  42dbbe:	jae    0x42dc29
  42dbc0:	outs   dx,BYTE PTR ds:[rsi]
  42dbc1:	and    BYTE PTR [edx+0x65],dh
  42dbc5:	jae    0x42dc3c
  42dbc7:	ins    BYTE PTR es:[rdi],dx
  42dbc8:	je     0x42dbf8
  42dbca:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  42dbce:	and    BYTE PTR gs:[rip+0x28642520],bh        # 0x28a700f5
  42dbd5:	and    eax,0x202c2973
  42dbda:	jbe    0x42dc3d
  42dbdc:	jb     0x42dc47
  42dbde:	outs   dx,BYTE PTR ds:[rsi]
  42dbdf:	je     0x42dc40
  42dbe1:	jae    0x42dc4c
  42dbe3:	jp     0x42dc4a
  42dbe5:	and    BYTE PTR [rip+0xa64],ah        # 0x42e64f
  42dbeb:	add    BYTE PTR [rax],al
  42dbed:	add    BYTE PTR [rax],al
  42dbef:	add    BYTE PTR [rax+0x72],dh
  42dbf2:	outs   dx,DWORD PTR ds:[rsi]
  42dbf3:	movsxd esp,DWORD PTR [rbp+0x73]
  42dbf6:	jae    0x42dc61
  42dbf8:	outs   dx,BYTE PTR ds:[rsi]
  42dbf9:	and    BYTE PTR [edx+0x65],dh
  42dbfd:	jae    0x42dc74
  42dbff:	ins    BYTE PTR es:[rdi],dx
  42dc00:	je     0x42dc30
  42dc02:	and    BYTE PTR [rbx+0x6f],ah
  42dc05:	ins    BYTE PTR es:[rdi],dx
  42dc06:	jne    0x42dc75
  42dc08:	outs   dx,BYTE PTR ds:[rsi]
  42dc09:	pop    rdi
  42dc0a:	jae    0x42dc75
  42dc0c:	jp     0x42dc73
  42dc0e:	and    BYTE PTR [rip+0xa64],ah        # 0x42e678
  42dc14:	add    BYTE PTR [rax],al
  42dc16:	add    BYTE PTR [rax],al
  42dc18:	je     0x42dc7e
  42dc1a:	jae    0x42dc7b
  42dc1c:	jo     0x42dc90
  42dc1e:	outs   dx,DWORD PTR ds:[rsi]
  42dc1f:	movsxd esp,DWORD PTR [rbp+0x73]
  42dc22:	jae    0x42dc83
  42dc24:	jo     0x42dc87
  42dc26:	jb     0x42dc89
  42dc28:	ins    DWORD PTR es:[rdi],dx
  42dc29:	pop    rdi
  42dc2a:	jb     0x42dc91
  42dc2c:	jae    0x42dca3
  42dc2e:	ins    BYTE PTR es:[rdi],dx
  42dc2f:	je     0x42dc59
  42dc31:	and    eax,0x25202c70
  42dc36:	jo     0x42dc61
  42dc38:	or     al,BYTE PTR [rax]
  42dc3a:	add    BYTE PTR [rax],al
  42dc3c:	add    BYTE PTR [rax],al
  42dc3e:	add    BYTE PTR [rax],al
  42dc40:	gs jb  0x42dcb5
  42dc43:	outs   dx,DWORD PTR ds:[rsi]
  42dc44:	jb     0x42dc80
  42dc46:	and    BYTE PTR [rsp+riz*2+0x73],dh
  42dc4a:	pop    rdi
  42dc4b:	jo     0x42dcbf
  42dc4d:	outs   dx,DWORD PTR ds:[rsi]
  42dc4e:	movsxd esp,DWORD PTR [rbp+0x73]
  42dc51:	jae    0x42dcb2
  42dc53:	jo     0x42dcb6
  42dc55:	jb     0x42dcb8
  42dc57:	ins    DWORD PTR es:[rdi],dx
  42dc58:	pop    rdi
  42dc59:	jb     0x42dcc0
  42dc5b:	jae    0x42dcd2
  42dc5d:	ins    BYTE PTR es:[rdi],dx
  42dc5e:	je     0x42dc88
  42dc60:	sub    DWORD PTR [rax],esp
  42dc62:	jb     0x42dcc9
  42dc64:	je     0x42dcdb
  42dc66:	jb     0x42dcd6
  42dc68:	gs and BYTE PTR fs:[rsp+rax*2+0x53],dl
  42dc6e:	pop    rdi
  42dc6f:	rex.RX
  42dc70:	rex.B
  42dc71:	rex.WB
  42dc72:	rex.WR or r8b,BYTE PTR [rax]
  42dc75:	add    BYTE PTR [rax],al
  42dc77:	add    BYTE PTR [rsp+riz*2+0x73],dh
  42dc7b:	(bad)  
  42dc7c:	pop    rdi
  42dc7d:	addr32 gs je 0x42dce0
  42dc81:	fs (bad) 
  42dc83:	je     0x42dce6
  42dc85:	pop    rdi
  42dc86:	imul   ebp,DWORD PTR [rsi+0x66],0xa203a6f
  42dc8d:	or     DWORD PTR [rbx+0x6f],esp
  42dc90:	ins    BYTE PTR es:[rdi],dx
  42dc91:	outs   dx,BYTE PTR ds:[rsi]
  42dc92:	(bad)  
  42dc93:	ins    DWORD PTR es:[rdi],dx
  42dc94:	and    BYTE PTR gs:[rip+0xa732520],bh        # 0xab601bb
  42dc9b:	or     DWORD PTR [rcx+rdi*2+0x70],esi
  42dc9f:	and    BYTE PTR gs:[rip+0x20642520],bh        # 0x20a701c6
  42dca6:	sub    BYTE PTR [rip+0x90a2973],ah        # 0x94d061f
  42dcac:	jae    0x42dd13
  42dcae:	jb     0x42dd26
  42dcb0:	gs jb  0x42dcda
  42dcb3:	jae    0x42dcd5
  42dcb5:	je     0x42dd30
  42dcb7:	jo     0x42dd1e
  42dcb9:	and    BYTE PTR [rip+0x20642520],bh        # 0x20a701df
  42dcbf:	sub    BYTE PTR [rip+0x90a2973],ah        # 0x94d0638
  42dcc5:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42dcc8:	jne    0x42dd37
  42dcca:	outs   dx,BYTE PTR ds:[rsi]
  42dccb:	pop    rdi
  42dccc:	jbe    0x42dd2f
  42dcce:	jb     0x42dd39
  42dcd0:	outs   dx,BYTE PTR ds:[rsi]
  42dcd1:	je     0x42dd32
  42dcd3:	jae    0x42dd3e
  42dcd5:	jp     0x42dd3c
  42dcd7:	and    BYTE PTR [rip+0xa642520],bh        # 0xaa701fd
  42dcdd:	or     DWORD PTR [rbx+0x6f],esp
  42dce0:	ins    BYTE PTR es:[rdi],dx
  42dce1:	jne    0x42dd50
  42dce3:	outs   dx,BYTE PTR ds:[rsi]
  42dce4:	pop    rdi
  42dce5:	jae    0x42dd50
  42dce7:	jp     0x42dd4e
  42dce9:	and    BYTE PTR [rip+0x20642520],bh        # 0x20a7020f
  42dcef:	sub    BYTE PTR [rip+0x6e6f2064],ah        # 0x6eb1fd59
  42dcf5:	and    BYTE PTR [rbx+0x65],dh
  42dcf8:	jb     0x42dd70
  42dcfa:	gs jb  0x42dd26
  42dcfd:	or     al,BYTE PTR [rax]
  42dcff:	jae    0x42dd01
  42dd01:	add    BYTE PTR [rax],al
  42dd03:	add    BYTE PTR [rax],al
  42dd05:	add    BYTE PTR [rax],al
  42dd07:	add    BYTE PTR [rax+0x72],dh
  42dd0a:	outs   dx,DWORD PTR ds:[rsi]
  42dd0b:	movsxd esp,DWORD PTR [rbp+0x73]
  42dd0e:	jae    0x42dd79
  42dd10:	outs   dx,BYTE PTR ds:[rsi]
  42dd11:	and    BYTE PTR [esp+eax*2+0x53],dl
  42dd16:	(bad)  
  42dd17:	and    BYTE PTR [rdx+0x65],dh
  42dd1a:	jae    0x42dd91
  42dd1c:	ins    BYTE PTR es:[rdi],dx
  42dd1d:	je     0x42dd3f
  42dd1f:	ins    DWORD PTR es:[rdi],dx
  42dd20:	gs je  0x42dd84
  42dd23:	fs (bad) 
  42dd25:	je     0x42dd88
  42dd27:	or     al,BYTE PTR cs:[rax]
  42dd2a:	outs   dx,BYTE PTR ds:[rsi]
  42dd2b:	outs   dx,DWORD PTR ds:[rsi]
  42dd2c:	and    BYTE PTR [rbp+0x65],ch
  42dd2f:	je     0x42dd92
  42dd31:	and    BYTE PTR [rcx+riz*2+0x74],ah
  42dd35:	(bad)  
  42dd36:	or     al,BYTE PTR [rax]
  42dd38:	jae    0x42dd9f
  42dd3a:	je     0x42dd5c
  42dd3c:	movsxd esi,DWORD PTR [rbp+0x72]
  42dd3f:	jb     0x42dda6
  42dd41:	outs   dx,BYTE PTR ds:[rsi]
  42dd42:	je     0x42dda3
  42dd44:	jb     0x42ddab
  42dd46:	jae    0x42ddbd
  42dd48:	ins    BYTE PTR es:[rdi],dx
  42dd49:	je     0x42ddbe
  42dd4b:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42dd4f:	movsxd esi,DWORD PTR [rbp+0x72]
  42dd52:	jae    0x42ddc3
  42dd54:	jb     0x42dd83
  42dd56:	ds jb  0x42ddbe
  42dd59:	jae    0x42ddba
  42dd5b:	imul   ebp,DWORD PTR [rsi+0x66],0xa6f
  42dd62:	add    BYTE PTR [rax],al
  42dd64:	add    BYTE PTR [rax],al
  42dd66:	add    BYTE PTR [rax],al
  42dd68:	jae    0x42ddcf
  42dd6a:	je     0x42dd8c
  42dd6c:	movsxd esi,DWORD PTR [rbp+0x72]
  42dd6f:	jb     0x42ddd6
  42dd71:	outs   dx,BYTE PTR ds:[rsi]
  42dd72:	je     0x42ddd3
  42dd74:	jb     0x42dddb
  42dd76:	jae    0x42dded
  42dd78:	ins    BYTE PTR es:[rdi],dx
  42dd79:	je     0x42ddee
  42dd7b:	and    BYTE PTR [rax],ch
  42dd7d:	and    eax,0x6f632064
  42dd82:	ins    BYTE PTR es:[rdi],dx
  42dd83:	jne    0x42ddf2
  42dd85:	outs   dx,BYTE PTR ds:[rsi]
  42dd86:	and    eax,0x74202973
  42dd8b:	outs   dx,DWORD PTR ds:[rsi]
  42dd8c:	and    BYTE PTR [rsp+riz*2+0x73],dh
  42dd90:	sub    eax,0x7365723e
  42dd95:	pop    rdi
  42dd96:	imul   ebp,DWORD PTR [rsi+0x66],0x73000a6f
  42dd9d:	gs je  0x42de14
  42dda0:	imul   ebp,DWORD PTR [rsi+0x67],0x20707520
  42dda7:	and    eax,0x6f632064
  42ddac:	ins    BYTE PTR es:[rdi],dx
  42ddad:	jne    0x42de1c
  42ddaf:	outs   dx,BYTE PTR ds:[rsi]
  42ddb0:	jae    0x42ddbc
  42ddb2:	add    BYTE PTR [rsi+0x61],ch
  42ddb5:	ins    DWORD PTR es:[rdi],dx
  42ddb6:	add    BYTE PTR gs:[rax],ah
  42ddb9:	and    eax,0x7330322d
  42ddbe:	and    BYTE PTR [rip+0x7335312d],ah        # 0x73780ef1
  42ddc4:	and    BYTE PTR [rip+0x7335312d],ah        # 0x73780ef7
  42ddca:	and    BYTE PTR [rip+0xa73372d],ah        # 0xab614fd
  42ddd0:	add    BYTE PTR [rbp+0x74],dh
  42ddd3:	jns    0x42de45
  42ddd5:	add    BYTE PTR gs:[rcx+rdi*2+0x70],dh
  42ddda:	gs (bad) 
  42dddc:	ja     0x42de52
  42ddde:	jns    0x42de50
  42dde0:	add    BYTE PTR gs:[rbx+0x69],dh
  42dde4:	jp     0x42de4b
  42dde6:	(bad)  
  42dde7:	ja     0x42de5c
  42dde9:	imul   edi,DWORD PTR [rdx+0x65],0x2d252000
  42ddf0:	xor    dh,BYTE PTR [rax]
  42ddf2:	jae    0x42de14
  42ddf4:	and    eax,0x20733531
  42ddf9:	and    eax,0x20733531
  42ddfe:	and    eax,0xa7337
  42de03:	and    BYTE PTR [rip+0x7330322d],ah        # 0x73731036
  42de09:	and    BYTE PTR [rip+0x252f6437],ah        # 0x25724246
  42de0f:	sub    eax,0x25206437
  42de14:	(bad)  
  42de15:	fs (bad) 
  42de17:	and    eax,0x2064372d
  42de1c:	and    eax,0xa6437
  42de21:	add    BYTE PTR [rax],al
  42de23:	add    BYTE PTR [rax],al
  42de25:	add    BYTE PTR [rax],al
  42de27:	add    BYTE PTR [rsp+riz*2+0x73],dh
  42de2b:	pop    rdi
  42de2c:	jo     0x42dea0
  42de2e:	outs   dx,DWORD PTR ds:[rsi]
  42de2f:	movsxd esp,DWORD PTR [rbp+0x73]
  42de32:	jae    0x42de93
  42de34:	fs gs data16 (bad) 
  42de38:	jne    0x42dea6
  42de3a:	je     0x42de9b
  42de3c:	je     0x42dead
  42de3e:	imul   esp,DWORD PTR [rbp+0x6e],0x73
  42de42:	sub    BYTE PTR [rcx],ch
  42de44:	and    BYTE PTR [rbp+0x61],ch
  42de47:	jb     0x42deb4
  42de49:	gs jb  0x42de6c
  42de4c:	imul   esi,DWORD PTR [rbx+0x20],0x25287825
  42de53:	jae    0x42de7e
  42de55:	or     al,BYTE PTR [rax]
  42de57:	add    BYTE PTR [rbp+riz*2+0x61],ch
  42de5b:	jbe    0x42dec6
  42de5d:	outs   dx,BYTE PTR ds:[rsi]
  42de5e:	and    BYTE PTR [esp+eiz*2+0x73],dh
  42de63:	pop    rdi
  42de64:	jo     0x42ded8
  42de66:	outs   dx,DWORD PTR ds:[rsi]
  42de67:	movsxd esp,DWORD PTR [rbp+0x73]
  42de6a:	jae    0x42decb
  42de6c:	fs gs data16 (bad) 
  42de70:	jne    0x42dede
  42de72:	je     0x42ded3
  42de74:	je     0x42dee5
  42de76:	imul   esp,DWORD PTR [rbp+0x6e],0x73
  42de7a:	sub    BYTE PTR [rcx],ch
  42de7c:	and    BYTE PTR [rbx+0x6f],ah
  42de7f:	outs   dx,BYTE PTR ds:[rsi]
  42de80:	outs   dx,BYTE PTR ds:[rsi]
  42de81:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42de86:	outs   dx,BYTE PTR ds:[rsi]
  42de87:	and    BYTE PTR [rbp+riz*2+0x61],ah
  42de8b:	or     al,BYTE PTR fs:[rax]
  42de8e:	push   rsp
  42de8f:	rex.R push rbx
  42de91:	pop    rdi
  42de92:	push   r13
  42de94:	push   rsp
  42de95:	rex.W pop rdi
  42de97:	push   rsp
  42de98:	rex.WRXB
  42de99:	rex.WXB
  42de9a:	rex.RB
  42de9b:	rex.WRX and BYTE PTR [rax+0x44],r10b
  42de9f:	push   rbp
  42dea0:	and    BYTE PTR [rbx+0x69],dh
  42dea3:	jp     0x42df0a
  42dea5:	and    BYTE PTR [rip+0x47000a75],ah        # 0x4742e920
  42deab:	outs   dx,DWORD PTR ds:[rsi]
  42deac:	je     0x42dece
  42deae:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  42deb5:	and    BYTE PTR [rbx+0x69],dh
  42deb8:	jp     0x42df1f
  42deba:	and    BYTE PTR [rip+0xa75],ah        # 0x42e935
  42dec0:	je     0x42df26
  42dec2:	jae    0x42df23
  42dec4:	jo     0x42df38
  42dec6:	outs   dx,DWORD PTR ds:[rsi]
  42dec7:	movsxd esp,DWORD PTR [rbp+0x73]
  42deca:	jae    0x42df2b
  42decc:	outs   dx,BYTE PTR gs:[rsi]
  42dece:	jbe    0x42df2f
  42ded0:	movsxd ebp,DWORD PTR [rax+0x67]
  42ded3:	sub    BYTE PTR [rcx],ch
  42ded5:	cmp    ah,BYTE PTR [rax]
  42ded7:	and    eax,0x79622064
  42dedc:	je     0x42df43
  42dede:	jae    0x42df00
  42dee0:	outs   dx,DWORD PTR ds:[rsi]
  42dee1:	data16 and BYTE PTR [rbx+0x6f],ah
  42dee5:	ins    BYTE PTR es:[rdi],dx
  42dee6:	ins    BYTE PTR es:[rdi],dx
  42dee7:	(bad)  
  42dee8:	je     0x42df53
  42deea:	outs   dx,DWORD PTR ds:[rsi]
  42deeb:	outs   dx,BYTE PTR ds:[rsi]
  42deec:	and    BYTE PTR [rcx+riz*2+0x74],ah
  42def0:	(bad)  
  42def1:	and    BYTE PTR [rdx+0x65],dh
  42def4:	movsxd esp,DWORD PTR [rbp+0x69]
  42def7:	jbe    0x42df5e
  42def9:	or     al,BYTE PTR fs:[rax]
  42defc:	je     0x42df62
  42defe:	jae    0x42df2d
  42df00:	movsxd ebp,DWORD PTR ds:[rdi+0x6e]
  42df04:	outs   dx,BYTE PTR ds:[rsi]
  42df05:	sub    eax,0x6c6f633e
  42df0a:	ins    BYTE PTR es:[rdi],dx
  42df0b:	(bad)  
  42df0c:	je     0x42df77
  42df0e:	outs   dx,DWORD PTR ds:[rsi]
  42df0f:	outs   dx,BYTE PTR ds:[rsi]
  42df10:	and    BYTE PTR [rdi+0x61],dh
  42df13:	jae    0x42df15
  42df15:	je     0x42df7b
  42df17:	jae    0x42df46
  42df19:	movsxd ebp,DWORD PTR ds:[rdi+0x6e]
  42df1d:	outs   dx,BYTE PTR ds:[rsi]
  42df1e:	sub    eax,0x6c6f633e
  42df23:	ins    BYTE PTR es:[rdi],dx
  42df24:	(bad)  
  42df25:	je     0x42df90
  42df27:	outs   dx,DWORD PTR ds:[rsi]
  42df28:	outs   dx,BYTE PTR ds:[rsi]
  42df29:	and    BYTE PTR [rsi+0x6f],ch
  42df2c:	ja     0x42df2e
  42df2e:	add    BYTE PTR [rax],al
  42df30:	movsxd ebp,DWORD PTR [rax+0x61]
  42df33:	outs   dx,BYTE PTR ds:[rsi]
  42df34:	imul   ebp,DWORD PTR [esi+0x67],0x6f6c6220
  42df3c:	movsxd ebp,DWORD PTR [rbx+0x20]
  42df3f:	jae    0x42dfaa
  42df41:	jp     0x42dfa8
  42df43:	and    BYTE PTR [rsi+0x72],ah
  42df46:	outs   dx,DWORD PTR ds:[rsi]
  42df47:	ins    DWORD PTR es:[rdi],dx
  42df48:	and    BYTE PTR [rip+0x6f742073],ah        # 0x6fb6ffc1
  42df4e:	and    BYTE PTR [rip+0xa64],ah        # 0x42e9b8
  42df54:	add    BYTE PTR [rax],al
  42df56:	add    BYTE PTR [rax],al
  42df58:	jae    0x42dfbf
  42df5a:	jb     0x42dfd2
  42df5c:	gs jb  0x42df7f
  42df5f:	imul   ebp,DWORD PTR [rsi+0x64],0x74616369
  42df66:	gs and BYTE PTR fs:[rbx+0x68],ah
  42df6b:	(bad)  
  42df6c:	jb     0x42dfe1
  42df6e:	gs je  0x42df91
  42df71:	movsxd ebp,DWORD PTR [rax+0x61]
  42df74:	outs   dx,BYTE PTR ds:[rsi]
  42df75:	and    BYTE PTR gs:[edi+ebp*2+0x20],dh
  42df7b:	and    ah,BYTE PTR [rip+0xa2273]        # 0x4d01f4
  42df81:	add    BYTE PTR [rax],al
  42df83:	add    BYTE PTR [rax],al
  42df85:	add    BYTE PTR [rax],al
  42df87:	add    BYTE PTR [rsp+riz*2+0x73],dh
  42df8b:	pop    rdi
  42df8c:	jo     0x42e000
  42df8e:	outs   dx,DWORD PTR ds:[rsi]
  42df8f:	movsxd esp,DWORD PTR [rbp+0x73]
  42df92:	jae    0x42dff3
  42df94:	fs gs data16 (bad) 
  42df98:	jne    0x42e006
  42df9a:	je     0x42dffb
  42df9c:	je     0x42e00d
  42df9e:	imul   esp,DWORD PTR [rbp+0x6e],0x73
  42dfa2:	cmp    ah,BYTE PTR [rax]
  42dfa4:	jb     0x42e00b
  42dfa6:	je     0x42e01d
  42dfa8:	jb     0x42e018
  42dfaa:	and    BYTE PTR [rbx+0x74],dh
  42dfad:	(bad)  
  42dfae:	je     0x42e025
  42dfb0:	jae    0x42dfd2
  42dfb2:	imul   esi,DWORD PTR [rbx+0x20],0xa6425
  42dfb9:	je     0x42e01f
  42dfbb:	jae    0x42dff2
  42dfbd:	pop    rdi
  42dfbe:	jo     0x42e032
  42dfc0:	outs   dx,DWORD PTR ds:[rsi]
  42dfc1:	movsxd esp,DWORD PTR [rbp+0x73]
  42dfc4:	jae    0x42e025
  42dfc6:	outs   dx,DWORD PTR ds:[rsi]
  42dfc7:	jo     0x42e03d
  42dfc9:	imul   ebp,DWORD PTR [rdi+0x6e],0x28646d63
  42dfd0:	sub    DWORD PTR [rdx],ecx
  42dfd2:	add    BYTE PTR [rcx+0x53],cl
  42dfd5:	pop    rdi
  42dfd6:	push   rsp
  42dfd7:	rex.R push rbx
  42dfd9:	xor    eax,0x64742830
  42dfde:	jae    0x42e00d
  42dfe0:	movsxd ebp,DWORD PTR ds:[rdi+0x6e]
  42dfe4:	outs   dx,BYTE PTR ds:[rsi]
  42dfe5:	sub    DWORD PTR [rax],eax
  42dfe7:	add    BYTE PTR [rdi+0x6f],ch
  42dfea:	jo     0x42e05f
  42dfec:	cmp    ah,BYTE PTR [rax]
  42dfee:	movsxd esp,DWORD PTR [rcx+0x6e]
  42dff1:	outs   dx,BYTE PTR ds:[rsi]
  42dff2:	outs   dx,DWORD PTR ds:[rsi]
  42dff3:	je     0x42e015
  42dff5:	jo     0x42e069
  42dff7:	outs   dx,DWORD PTR ds:[rsi]
  42dff8:	movsxd esp,DWORD PTR [rbp+0x73]
  42dffb:	jae    0x42e01d
  42dffd:	outs   dx,DWORD PTR ds:[rsi]
  42dffe:	jo     0x42e074
  42e000:	imul   ebp,DWORD PTR [rdi+0x6e],0x20642520
  42e007:	outs   dx,DWORD PTR ds:[rsi]
  42e008:	data16 and BYTE PTR [rbx+0x69],dh
  42e00c:	jp     0x42e073
  42e00e:	and    BYTE PTR [rip+0x72000a64],ah        # 0x7242ea78
  42e014:	movsxd esp,DWORD PTR gs:[rbp+0x69]
  42e018:	jbe    0x42e07f
  42e01a:	and    BYTE PTR fs:[rdi+0x70],ch
  42e01e:	je     0x42e089
  42e020:	outs   dx,DWORD PTR ds:[rsi]
  42e021:	outs   dx,BYTE PTR ds:[rsi]
  42e022:	and    BYTE PTR [rip+0x61762064],ah        # 0x61b9008c
  42e028:	ins    BYTE PTR es:[rdi],dx
  42e029:	jne    0x42e090
  42e02b:	and    BYTE PTR [rip+0x45000a64],ah        # 0x4542ea95
  42e031:	(bad)  
  42e032:	je     0x42e09d
  42e034:	outs   dx,BYTE PTR ds:[rsi]
  42e035:	and    BYTE PTR [eip+0x6f742073],ah        # 0x6fb700af
  42e03c:	imul   esp,DWORD PTR [rbp+0x6e],0xa
  42e040:	add    BYTE PTR [rbp+0x6e],dl
  42e043:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42e047:	outs   dx,BYTE PTR ds:[rsi]
  42e048:	and    BYTE PTR [rbp+0x61],ch
  42e04b:	jb     0x42e0b8
  42e04d:	gs jb  0x42e08a
  42e050:	and    BYTE PTR [rip+0x78252864],ah        # 0x786808ba
  42e056:	sub    DWORD PTR [rcx],esp
  42e058:	and    DWORD PTR [rdx],ecx
  42e05a:	add    BYTE PTR [rax],al
  42e05c:	je     0x42dff7
  42e05e:	std    
  42e05f:	jmp    QWORD PTR [rsp+rbx*4-0x66bb0003]
  42e066:	std    
  42e067:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e06e:	std    
  42e06f:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e076:	std    
  42e077:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e07e:	std    
  42e07f:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e086:	std    
  42e087:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e08e:	std    
  42e08f:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e096:	std    
  42e097:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e09e:	std    
  42e09f:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e0a6:	std    
  42e0a7:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e0ae:	std    
  42e0af:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e0b6:	std    
  42e0b7:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e0be:	std    
  42e0bf:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e0c6:	std    
  42e0c7:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e0ce:	std    
  42e0cf:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e0d6:	std    
  42e0d7:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e0de:	std    
  42e0df:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e0e6:	std    
  42e0e7:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e0ee:	std    
  42e0ef:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e0f6:	std    
  42e0f7:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e0fe:	std    
  42e0ff:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e106:	std    
  42e107:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e10e:	std    
  42e10f:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e116:	std    
  42e117:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e11e:	std    
  42e11f:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e126:	std    
  42e127:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e12e:	std    
  42e12f:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e136:	std    
  42e137:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e13e:	std    
  42e13f:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e146:	std    
  42e147:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e14e:	std    
  42e14f:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e156:	std    
  42e157:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e15e:	std    
  42e15f:	push   QWORD PTR [rcx+rbx*4]
  42e162:	std    
  42e163:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e16a:	std    
  42e16b:	jmp    QWORD PTR [rsp+rbx*4-0x67180003]
  42e172:	std    
  42e173:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e17a:	std    
  42e17b:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e182:	std    
  42e183:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e18a:	std    
  42e18b:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e192:	std    
  42e193:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e19a:	std    
  42e19b:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e1a2:	std    
  42e1a3:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e1aa:	std    
  42e1ab:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e1b2:	std    
  42e1b3:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e1ba:	std    
  42e1bb:	jmp    QWORD PTR [rsp+rbx*4-0x674b0003]
  42e1c2:	std    
  42e1c3:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e1ca:	std    
  42e1cb:	call   QWORD PTR [rax+rbx*4-0x635b0003]
  42e1d2:	std    
  42e1d3:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e1da:	std    
  42e1db:	jmp    QWORD PTR [rsp+rbx*4-0x677b0003]
  42e1e2:	std    
  42e1e3:	jmp    QWORD PTR [rsp+rbx*4-0x678b0003]
  42e1ea:	std    
  42e1eb:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e1f2:	std    
  42e1f3:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e1fa:	std    
  42e1fb:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e202:	std    
  42e203:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e20a:	std    
  42e20b:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e212:	std    
  42e213:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e21a:	std    
  42e21b:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e222:	std    
  42e223:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e22a:	std    
  42e22b:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e232:	std    
  42e233:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e23a:	std    
  42e23b:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e242:	std    
  42e243:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e24a:	std    
  42e24b:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e252:	std    
  42e253:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e25a:	std    
  42e25b:	jmp    QWORD PTR [rax+rbx*4-0x3]
  42e25f:	call   QWORD PTR [rbp-0x68]
  42e262:	std    
  42e263:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e26a:	std    
  42e26b:	dec    DWORD PTR [rax-0x68]
  42e26e:	std    
  42e26f:	push   QWORD PTR [rsi]
  42e271:	cwde   
  42e272:	std    
  42e273:	jmp    QWORD PTR [rdi+rdx*4-0x635b0003]
  42e27a:	std    
  42e27b:	jmp    QWORD PTR [rsp+rbx*4-0x68e80003]
  42e282:	std    
  42e283:	call   QWORD PTR [rdi-0x68000269]
  42e289:	xchg   edi,eax
  42e28a:	std    
  42e28b:	jmp    QWORD PTR [rdx+rbx*4-0x3]
  42e28f:	call   QWORD PTR [rdi]
  42e291:	xchg   edi,eax
  42e292:	std    
  42e293:	jmp    QWORD PTR [rdx+rbx*4]
  42e296:	std    
  42e297:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e29e:	std    
  42e29f:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e2a6:	std    
  42e2a7:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e2ae:	std    
  42e2af:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e2b6:	std    
  42e2b7:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e2be:	std    
  42e2bf:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e2c6:	std    
  42e2c7:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e2ce:	std    
  42e2cf:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e2d6:	std    
  42e2d7:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e2de:	std    
  42e2df:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e2e6:	std    
  42e2e7:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e2ee:	std    
  42e2ef:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e2f6:	std    
  42e2f7:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e2fe:	std    
  42e2ff:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e306:	std    
  42e307:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e30e:	std    
  42e30f:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e316:	std    
  42e317:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e31e:	std    
  42e31f:	call   QWORD PTR [rdx+rbx*4]
  42e322:	std    
  42e323:	inc    DWORD PTR [rdx+rbx*4]
  42e326:	std    
  42e327:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e32e:	std    
  42e32f:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e336:	std    
  42e337:	call   QWORD PTR [rbx+rbx*4-0x3]
  42e33b:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e342:	std    
  42e343:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e34a:	std    
  42e34b:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e352:	std    
  42e353:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e35a:	std    
  42e35b:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e362:	std    
  42e363:	(bad)  
  42e364:	jns    0x42e300
  42e366:	std    
  42e367:	jmp    QWORD PTR [rbx+rbx*4-0x3]
  42e36b:	inc    DWORD PTR [rcx+rbx*4-0x3]
  42e36f:	call   QWORD PTR [rdi-0x5b000269]
  42e375:	pushf  
  42e376:	std    
  42e377:	call   QWORD PTR [rdi]
  42e379:	xchg   edi,eax
  42e37a:	std    
  42e37b:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e382:	std    
  42e383:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e38a:	std    
  42e38b:	(bad)  
  42e38c:	jmp    0xffffffffb542e12a
  42e391:	cdq    
  42e392:	std    
  42e393:	jmp    QWORD PTR [rsi-0x5b000267]
  42e399:	pushf  
  42e39a:	std    
  42e39b:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e3a2:	std    
  42e3a3:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e3aa:	std    
  42e3ab:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e3b2:	std    
  42e3b3:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e3ba:	std    
  42e3bb:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e3c2:	std    
  42e3c3:	jmp    QWORD PTR [rsp+rbx*4-0x635b0003]
  42e3ca:	std    
  42e3cb:	jmp    QWORD PTR [rsp+rbx*4-0x666b0003]
  42e3d2:	std    
  42e3d3:	call   QWORD PTR [rcx+rbx*4-0x666b0003]
  42e3da:	std    
  42e3db:	push   QWORD PTR [rdi]
  42e3dd:	xor    BYTE PTR cs:[rax],al
  42e3e0:	xor    dh,BYTE PTR [rax]
  42e3e2:	xor    BYTE PTR [rax],dh
  42e3e4:	add    BYTE PTR [rdx],dh
  42e3e6:	xor    BYTE PTR [rax],dh
  42e3e8:	xor    BYTE PTR [rax],ah
  42e3ea:	push   rbx
  42e3eb:	push   rax
  42e3ec:	xor    DWORD PTR [rax],eax
  42e3ee:	xor    dh,BYTE PTR [rax]
  42e3f0:	xor    BYTE PTR [rip+0x0],dh        # 0x42e3f6
  42e3f6:	add    BYTE PTR [rax],al
  42e3f8:	xor    dh,BYTE PTR [rax]
  42e3fa:	xor    BYTE PTR [rax],bh
  42e3fc:	and    BYTE PTR [rax],ch
  42e3fe:	outs   dx,BYTE PTR ds:[rsi]
  42e3ff:	outs   dx,DWORD PTR ds:[rsi]
  42e400:	and    BYTE PTR [rsi+0x42],cl
  42e403:	rex.XB push r10
  42e405:	rex.WRXB push r15
  42e407:	and    BYTE PTR [rdi+0x72],ch
  42e40a:	and    BYTE PTR [rsi+0x53],ah
  42e40d:	jo     0x42e470
  42e40f:	jb     0x42e484
  42e411:	rex.XB outs dx,DWORD PTR gs:[rsi]
  42e414:	ins    BYTE PTR es:[rdi],dx
  42e415:	jne    0x42e484
  42e417:	outs   dx,BYTE PTR ds:[rsi]
  42e418:	push   rbx
  42e419:	gs je  0x42e445
  42e41c:	add    BYTE PTR [rdx],dh
  42e41e:	xor    BYTE PTR [rax],dh
  42e420:	cmp    BYTE PTR [rax],al
  42e422:	jne    0x42e492
  42e424:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42e428:	outs   dx,BYTE PTR ds:[rsi]
  42e429:	add    BYTE PTR [rsp+rax*2+0x53],dl
  42e42d:	pop    rdi
  42e42e:	push   rbx
  42e42f:	push   rbp
  42e430:	rex.XB
  42e431:	rex.XB
  42e432:	rex.RB push r11
  42e434:	push   rbx
  42e435:	add    BYTE PTR [rsp+rax*2+0x53],dl
  42e439:	pop    rdi
  42e43a:	rex.RX
  42e43b:	rex.B
  42e43c:	rex.WB
  42e43d:	rex.WR add BYTE PTR [rsp+riz*2+0x73],r14b
  42e442:	pop    rdi
  42e443:	jo     0x42e4b7
  42e445:	outs   dx,DWORD PTR ds:[rsi]
  42e446:	movsxd esp,DWORD PTR [rbp+0x73]
  42e449:	jae    0x42e4aa
  42e44b:	ins    BYTE PTR es:[rdi],dx
  42e44c:	outs   dx,DWORD PTR ds:[rsi]
  42e44d:	imul   ebp,DWORD PTR [esi+0x5f],0x656b6f74
  42e455:	outs   dx,BYTE PTR ds:[rsi]
  42e456:	jae    0x42e480
  42e458:	sub    DWORD PTR [rdx],ecx
  42e45a:	add    BYTE PTR [rax],al
  42e45c:	add    BYTE PTR [rax],al
  42e45e:	add    BYTE PTR [rax],al
  42e460:	ins    BYTE PTR es:[rdi],dx
  42e461:	outs   dx,DWORD PTR ds:[rsi]
  42e462:	outs   dx,DWORD PTR ds:[rsi]
  42e463:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  42e467:	and    BYTE PTR [rsi+0x6f],ah
  42e46a:	jb     0x42e48c
  42e46c:	ins    BYTE PTR es:[rdi],dx
  42e46d:	outs   dx,DWORD PTR ds:[rsi]
  42e46e:	imul   ebp,DWORD PTR [esi+0x20],0x656b6f74
  42e476:	outs   dx,BYTE PTR ds:[rsi]
  42e477:	sub    al,0x20
  42e479:	outs   dx,DWORD PTR ds:[esi]
  42e47b:	je     0x42e49d
  42e47d:	and    BYTE PTR [rip+0x73252878],ah        # 0x73680cfb
  42e483:	sub    DWORD PTR [rdx],ecx
  42e485:	add    BYTE PTR [rax],al
  42e487:	add    BYTE PTR [rbx+0x65],dh
  42e48a:	jb     0x42e502
  42e48c:	gs jb  0x42e4af
  42e48f:	jb     0x42e4f6
  42e491:	jo     0x42e502
  42e493:	jb     0x42e509
  42e495:	jae    0x42e4b7
  42e497:	push   rsp
  42e498:	rex.R push rbx
  42e49a:	and    BYTE PTR [rsi+0x65],dh
  42e49d:	jb     0x42e512
  42e49f:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e782520
  42e4a6:	and    eax,0x78252e78
  42e4ab:	cs and eax,0x50000a78
  42e4b1:	jb     0x42e522
  42e4b3:	fs jne 0x42e519
  42e4b6:	je     0x42e4d8
  42e4b8:	outs   dx,BYTE PTR ds:[rsi]
  42e4b9:	(bad)  
  42e4ba:	ins    DWORD PTR es:[rdi],dx
  42e4bb:	and    BYTE PTR gs:[rsi+0x6f],ah
  42e4bf:	jb     0x42e4e1
  42e4c1:	xor    BYTE PTR [rax+0x25],bh
  42e4c4:	js     0x42e4e6
  42e4c6:	imul   esi,DWORD PTR [rbx+0x20],0xa7325
  42e4cd:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
  42e4d5:	je     0x42e4d7
  42e4d7:	push   rax
  42e4d8:	jb     0x42e549
  42e4da:	fs jne 0x42e540
  42e4dd:	je     0x42e4ff
  42e4df:	jbe    0x42e546
  42e4e1:	jb     0x42e556
  42e4e3:	imul   ebp,DWORD PTR [rdi+0x6e],0x586c2520
  42e4ea:	or     al,BYTE PTR [rax]
  42e4ec:	add    BYTE PTR [rax],al
  42e4ee:	add    BYTE PTR [rax],al
  42e4f0:	je     0x42e556
  42e4f2:	jae    0x42e553
  42e4f4:	jo     0x42e568
  42e4f6:	outs   dx,DWORD PTR ds:[rsi]
  42e4f7:	movsxd esp,DWORD PTR [rbp+0x73]
  42e4fa:	jae    0x42e55b
  42e4fc:	ins    BYTE PTR es:[rdi],dx
  42e4fd:	outs   dx,DWORD PTR ds:[rsi]
  42e4fe:	imul   ebp,DWORD PTR [esi+0x5f],0x656b6f74
  42e506:	outs   dx,BYTE PTR ds:[rsi]
  42e507:	jae    0x42e531
  42e509:	sub    DWORD PTR [rax],esp
  42e50b:	jb     0x42e572
  42e50d:	je     0x42e584
  42e50f:	jb     0x42e57f
  42e511:	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
  42e518:	add    BYTE PTR [rdx+0x5a],bl
  42e51b:	pop    rdx
  42e51c:	pop    rdx
  42e51d:	pop    rdx
  42e51e:	add    BYTE PTR [rax],al
  42e520:	je     0x42e586
  42e522:	jae    0x42e583
  42e524:	jo     0x42e598
  42e526:	outs   dx,DWORD PTR ds:[rsi]
  42e527:	movsxd esp,DWORD PTR [rbp+0x73]
  42e52a:	jae    0x42e58b
  42e52c:	imul   ebp,DWORD PTR [rsi+0x66],0x2029286f
  42e533:	movsxd esp,DWORD PTR [rcx+0x6c]
  42e536:	ins    BYTE PTR es:[rdi],dx
  42e537:	gs and BYTE PTR fs:[rdi+0x69],dh
  42e53c:	je     0x42e5a6
  42e53e:	and    BYTE PTR [rbp+0x6e],dh
  42e541:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42e545:	outs   dx,BYTE PTR ds:[rsi]
  42e546:	and    BYTE PTR [rbp+0x61],ch
  42e549:	jb     0x42e5b6
  42e54b:	gs jb  0x42e56e
  42e54e:	(bad)  
  42e54f:	and    eax,0xa212764
  42e554:	add    BYTE PTR [rax],al
  42e556:	add    BYTE PTR [rax],al
  42e558:	je     0x42e5be
  42e55a:	jae    0x42e5bb
  42e55c:	jo     0x42e5d0
  42e55e:	outs   dx,DWORD PTR ds:[rsi]
  42e55f:	movsxd esp,DWORD PTR [rbp+0x73]
  42e562:	jae    0x42e5c3
  42e564:	imul   ebp,DWORD PTR [rsi+0x66],0x2029286f
  42e56b:	jb     0x42e5d2
  42e56d:	(bad)  
  42e56e:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x73656d20
  42e576:	jae    0x42e5d9
  42e578:	and    BYTE PTR gs:[eip+0x72662064],ah        # 0x72a905e4
  42e580:	outs   dx,DWORD PTR ds:[rsi]
  42e581:	ins    DWORD PTR es:[rdi],dx
  42e582:	and    BYTE PTR [rbx+0x65],dh
  42e585:	jb     0x42e5fd
  42e587:	gs jb  0x42e594
  42e58a:	add    BYTE PTR [rbx+0x25],bl
  42e58d:	jae    0x42e5ec
  42e58f:	add    BYTE PTR [rdi+0x75],ch
  42e592:	je     0x42e5b4
  42e594:	outs   dx,DWORD PTR ds:[rsi]
  42e595:	data16 and BYTE PTR [rbp+0x65],ch
  42e599:	ins    DWORD PTR es:[rdi],dx
  42e59a:	outs   dx,DWORD PTR ds:[rsi]
  42e59b:	jb     0x42e616
  42e59d:	and    BYTE PTR [rax],ch
  42e59f:	and    eax,0x202c2964
  42e5a4:	and    eax,0x74000a73
  42e5a9:	fs jae 0x42e60b
  42e5ac:	jo     0x42e620
  42e5ae:	outs   dx,DWORD PTR ds:[rsi]
  42e5af:	movsxd esp,DWORD PTR [rbp+0x73]
  42e5b2:	jae    0x42e613
  42e5b4:	imul   ebp,DWORD PTR [rsi+0x66],0x2029286f
  42e5bb:	movsxd esp,DWORD PTR [rcx+0x6c]
  42e5be:	ins    BYTE PTR es:[rdi],dx
  42e5bf:	imul   ebp,DWORD PTR [rsi+0x67],0x696c6320
  42e5c6:	outs   dx,BYTE PTR gs:[rsi]
  42e5c8:	je     0x42e5ea
  42e5ca:	ins    DWORD PTR es:[rdi],dx
  42e5cb:	jae    0x42e634
  42e5cd:	and    BYTE PTR [rax+0x61],ch
  42e5d0:	outs   dx,BYTE PTR ds:[rsi]
  42e5d1:	fs ins BYTE PTR es:[rdi],dx
  42e5d3:	gs jb  0x42e5e0
  42e5d6:	add    BYTE PTR [rax],al
  42e5d8:	rex.WRB jae 0x42e642
  42e5db:	and    BYTE PTR [rip+0x53202c64],ah        # 0x53631245
  42e5e1:	gs jbe 0x42e649
  42e5e4:	jb     0x42e64f
  42e5e6:	je     0x42e661
  42e5e8:	and    BYTE PTR [rip+0x53202c64],ah        # 0x53631252
  42e5ee:	je     0x42e651
  42e5f0:	je     0x42e657
  42e5f2:	and    BYTE PTR [rip+0x53202c64],ah        # 0x5363125c
  42e5f8:	gs jb  0x42e671
  42e5fb:	gs jb  0x42e61e
  42e5fe:	and    eax,0x4c202c73
  42e603:	imul   ebp,DWORD PTR [rsi+0x65],0xa642520
  42e60a:	and    eax,0xa73
  42e60f:	add    BYTE PTR [rsp+riz*2+0x73],dh
  42e613:	pop    rdi
  42e614:	jo     0x42e688
  42e616:	outs   dx,DWORD PTR ds:[rsi]
  42e617:	movsxd esp,DWORD PTR [rbp+0x73]
  42e61a:	jae    0x42e67b
  42e61c:	imul   ebp,DWORD PTR [rsi+0x66],0x2029286f
  42e623:	jb     0x42e68a
  42e625:	je     0x42e69c
  42e627:	jb     0x42e697
  42e629:	imul   ebp,DWORD PTR [rsi+0x67],0x53445420
  42e630:	pop    rdi
  42e631:	push   rbx
  42e632:	push   rbp
  42e633:	rex.XB
  42e634:	rex.XB
  42e635:	rex.RB push r11
  42e637:	push   rbx
  42e638:	or     al,BYTE PTR [rax]
  42e63a:	add    BYTE PTR [rax],al
  42e63c:	add    BYTE PTR [rax],al
  42e63e:	add    BYTE PTR [rax],al
  42e640:	je     0x42e6a6
  42e642:	jae    0x42e6a3
  42e644:	jo     0x42e6b8
  42e646:	outs   dx,DWORD PTR ds:[rsi]
  42e647:	movsxd esp,DWORD PTR [rbp+0x73]
  42e64a:	jae    0x42e6ab
  42e64c:	je     0x42e6bd
  42e64e:	imul   esp,DWORD PTR [rbp+0x6e],0x73
  42e652:	sub    BYTE PTR [rip+0x25202c70],ah        # 0x256312c8
  42e658:	jo     0x42e686
  42e65a:	and    BYTE PTR [rip+0x30202c70],ah        # 0x306312d0
  42e660:	js     0x42e687
  42e662:	js     0x42e68d
  42e664:	or     al,BYTE PTR [rax]
  42e666:	add    BYTE PTR [rax],al
  42e668:	je     0x42e6ce
  42e66a:	jae    0x42e6cb
  42e66c:	jo     0x42e6e0
  42e66e:	outs   dx,DWORD PTR ds:[rsi]
  42e66f:	movsxd esp,DWORD PTR [rbp+0x73]
  42e672:	jae    0x42e6d3
  42e674:	je     0x42e6e5
  42e676:	imul   esp,DWORD PTR [rbp+0x6e],0x73
  42e67a:	sub    BYTE PTR [rcx],ch
  42e67c:	and    BYTE PTR [rbx+0x74],dh
  42e67f:	(bad)  
  42e680:	je     0x42e6e7
  42e682:	and    BYTE PTR [rcx+0x73],ch
  42e685:	and    BYTE PTR [rbx+0x4f],al
  42e688:	rex.WRB push r8
  42e68a:	rex.WR
  42e68b:	rex.RB push r12
  42e68d:	rex.RB
  42e68e:	or     r8b,BYTE PTR [rax]
  42e691:	add    BYTE PTR [rax],al
  42e693:	add    BYTE PTR [rax],al
  42e695:	add    BYTE PTR [rax],al
  42e697:	add    BYTE PTR [rax+0x72],dh
  42e69a:	outs   dx,DWORD PTR ds:[rsi]
  42e69b:	movsxd esp,DWORD PTR [rbp+0x73]
  42e69e:	jae    0x42e709
  42e6a0:	outs   dx,BYTE PTR ds:[rsi]
  42e6a1:	and    BYTE PTR [edx+0x65],dh
  42e6a5:	jae    0x42e71c
  42e6a7:	ins    BYTE PTR es:[rdi],dx
  42e6a8:	je     0x42e6ca
  42e6aa:	je     0x42e71b
  42e6ac:	imul   esp,DWORD PTR [rbp+0x6e],0x73
  42e6b0:	and    BYTE PTR cs:[rax],ah
  42e6b3:	ins    DWORD PTR es:[rdi],dx
  42e6b4:	(bad)  
  42e6b5:	jb     0x42e722
  42e6b7:	gs jb  0x42e6da
  42e6ba:	imul   esi,DWORD PTR [rbx+0x20],0x28782520
  42e6c1:	and    eax,0xa2973
  42e6c6:	add    BYTE PTR [rax],al
  42e6c8:	je     0x42e72e
  42e6ca:	jae    0x42e72b
  42e6cc:	jo     0x42e740
  42e6ce:	outs   dx,DWORD PTR ds:[rsi]
  42e6cf:	movsxd esp,DWORD PTR [rbp+0x73]
  42e6d2:	jae    0x42e733
  42e6d4:	je     0x42e745
  42e6d6:	imul   esp,DWORD PTR [rbp+0x6e],0x73
  42e6da:	cmp    bh,BYTE PTR [rdx]
  42e6dc:	push   rbx
  42e6dd:	rex.RB push r12
  42e6df:	pop    rdi
  42e6e0:	push   rdx
  42e6e1:	rex.RB push r12
  42e6e3:	push   rbp
  42e6e4:	push   rdx
  42e6e5:	rex.WRX and BYTE PTR [rbx+0x74],r14b
  42e6e9:	outs   dx,DWORD PTR ds:[rsi]
  42e6ea:	jo     0x42e75c
  42e6ec:	imul   ebp,DWORD PTR [rsi+0x67],0x206e6f20
  42e6f3:	movsxd esi,DWORD PTR [rbp+0x72]
  42e6f6:	jb     0x42e75d
  42e6f8:	outs   dx,BYTE PTR ds:[rsi]
  42e6f9:	je     0x42e71b
  42e6fb:	je     0x42e76c
  42e6fd:	imul   esp,DWORD PTR [rbp+0x6e],0xa
  42e701:	add    BYTE PTR [rax],al
  42e703:	add    BYTE PTR [rax],al
  42e705:	add    BYTE PTR [rax],al
  42e707:	add    BYTE PTR [rax+0x72],dh
  42e70a:	outs   dx,DWORD PTR ds:[rsi]
  42e70b:	movsxd esp,DWORD PTR [rbp+0x73]
  42e70e:	jae    0x42e779
  42e710:	outs   dx,BYTE PTR ds:[rsi]
  42e711:	and    BYTE PTR [eax+0x61],dh
  42e715:	jb     0x42e778
  42e717:	ins    DWORD PTR es:[rdi],dx
  42e718:	gs je  0x42e780
  42e71b:	jb     0x42e790
  42e71d:	and    BYTE PTR [rsi+0x6f],ah
  42e720:	jb     0x42e742
  42e722:	outs   dx,DWORD PTR ds:[rsi]
  42e723:	jo     0x42e745
  42e725:	and    eax,0xa64
  42e72a:	add    BYTE PTR [rax],al
  42e72c:	add    BYTE PTR [rax],al
  42e72e:	add    BYTE PTR [rax],al
  42e730:	movsxd esp,DWORD PTR [rcx+0x6c]
  42e733:	ins    BYTE PTR es:[rdi],dx
  42e734:	imul   ebp,DWORD PTR [rsi+0x67],0x73647420
  42e73b:	pop    rdi
  42e73c:	jo     0x42e7b0
  42e73e:	outs   dx,DWORD PTR ds:[rsi]
  42e73f:	movsxd esp,DWORD PTR [rbp+0x73]
  42e742:	jae    0x42e7a3
  42e744:	jo     0x42e7a7
  42e746:	jb     0x42e7a9
  42e748:	ins    DWORD PTR es:[rdi],dx
  42e749:	pop    rdi
  42e74a:	jb     0x42e7b1
  42e74c:	jae    0x42e7c3
  42e74e:	ins    BYTE PTR es:[rdi],dx
  42e74f:	je     0x42e75b
  42e751:	add    BYTE PTR [rip+0x69682064],ah        # 0x69ab07bb
  42e757:	fs fs outs dx,BYTE PTR gs:[rsi]
  42e75b:	and    BYTE PTR [rdx+0x65],dh
  42e75e:	je     0x42e7d5
  42e760:	jb     0x42e7d0
  42e762:	and    BYTE PTR [rax+0x61],dh
  42e765:	jb     0x42e7c8
  42e767:	ins    DWORD PTR es:[rdi],dx
  42e768:	gs je  0x42e7d0
  42e76b:	jb     0x42e7e0
  42e76d:	or     al,BYTE PTR [rax]
  42e76f:	jae    0x42e7e5
  42e771:	outs   dx,DWORD PTR ds:[rsi]
  42e772:	jb     0x42e7d9
  42e774:	and    BYTE PTR fs:[rcx+0x6e],ch
  42e778:	je     0x42e7df
  42e77a:	jb     0x42e7ea
  42e77c:	(bad)  
  42e77d:	ins    BYTE PTR es:[rdi],dx
  42e77e:	and    BYTE PTR [rbx+0x75],ah
  42e781:	jb     0x42e7f6
  42e783:	outs   dx,DWORD PTR ds:[rsi]
  42e784:	jb     0x42e7a6
  42e786:	imul   esp,DWORD PTR [rax+riz*1+0x25],0xa64
  42e78e:	add    BYTE PTR [rax],al
  42e790:	jo     0x42e804
  42e792:	outs   dx,DWORD PTR ds:[rsi]
  42e793:	movsxd esp,DWORD PTR [rbp+0x73]
  42e796:	jae    0x42e801
  42e798:	outs   dx,BYTE PTR ds:[rsi]
  42e799:	and    BYTE PTR [esp+eiz*2+0x73],dh
  42e79e:	xor    eax,0x6d6f6320
  42e7a3:	jo     0x42e81a
  42e7a5:	je     0x42e80c
  42e7a7:	and    BYTE PTR [rsi+0x61],ch
  42e7aa:	ins    DWORD PTR es:[rdi],dx
  42e7ab:	gs jae 0x42e7dc
  42e7ae:	and    BYTE PTR [rax+0x64],ch
  42e7b1:	jb     0x42e826
  42e7b3:	imul   edi,DWORD PTR [rdx+0x65],0x25203d20
  42e7ba:	or     al,BYTE PTR fs:[rax]
  42e7bd:	add    BYTE PTR [rax],al
  42e7bf:	add    BYTE PTR [rax+0x72],dh
  42e7c2:	outs   dx,DWORD PTR ds:[rsi]
  42e7c3:	movsxd esp,DWORD PTR [rbp+0x73]
  42e7c6:	jae    0x42e831
  42e7c8:	outs   dx,BYTE PTR ds:[rsi]
  42e7c9:	and    BYTE PTR [esp+eiz*2+0x73],dh
  42e7ce:	xor    eax,0x6d6f6320
  42e7d3:	jo     0x42e84a
  42e7d5:	je     0x42e83c
  42e7d7:	and    BYTE PTR [rsi+0x61],ch
  42e7da:	ins    DWORD PTR es:[rdi],dx
  42e7db:	gs jae 0x42e80c
  42e7de:	and    BYTE PTR [rsi+0x75],ch
  42e7e1:	ins    DWORD PTR es:[rdi],dx
  42e7e2:	pop    rdi
  42e7e3:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42e7e6:	jae    0x42e808
  42e7e8:	cmp    eax,0xa642520
  42e7ed:	add    BYTE PTR [rax],al
  42e7ef:	add    BYTE PTR [rax+0x72],dh
  42e7f2:	outs   dx,DWORD PTR ds:[rsi]
  42e7f3:	movsxd esp,DWORD PTR [rbp+0x73]
  42e7f6:	jae    0x42e861
  42e7f8:	outs   dx,BYTE PTR ds:[rsi]
  42e7f9:	and    BYTE PTR [esp+eiz*2+0x73],dh
  42e7fe:	xor    eax,0x6d6f6320
  42e803:	jo     0x42e87a
  42e805:	je     0x42e86c
  42e807:	and    BYTE PTR [rsi+0x61],ch
  42e80a:	ins    DWORD PTR es:[rdi],dx
  42e80b:	gs jae 0x42e83c
  42e80e:	and    BYTE PTR [rsi+0x75],ch
  42e811:	ins    DWORD PTR es:[rdi],dx
  42e812:	pop    rdi
  42e813:	movsxd ebp,DWORD PTR [rdi+0x6d]
  42e816:	jo     0x42e877
  42e818:	imul   ebp,DWORD PTR [rsi+0x66],0x203d206f
  42e81f:	and    eax,0xa64
  42e824:	add    BYTE PTR [rax],al
  42e826:	add    BYTE PTR [rax],al
  42e828:	je     0x42e88e
  42e82a:	jae    0x42e88b
  42e82c:	jo     0x42e8a0
  42e82e:	outs   dx,DWORD PTR ds:[rsi]
  42e82f:	movsxd esp,DWORD PTR [rbp+0x73]
  42e832:	jae    0x42e893
  42e834:	movsxd ebp,DWORD PTR [rdi+0x6d]
  42e837:	jo     0x42e8ae
  42e839:	je     0x42e8a0
  42e83b:	pop    rdi
  42e83c:	jb     0x42e8a3
  42e83e:	jae    0x42e8b5
  42e840:	ins    BYTE PTR es:[rdi],dx
  42e841:	je     0x42e86b
  42e843:	sub    DWORD PTR [rdx],edi
  42e845:	and    BYTE PTR [rbx+0x6f],ah
  42e848:	ins    DWORD PTR es:[rdi],dx
  42e849:	jo     0x42e8c0
  42e84b:	je     0x42e8b2
  42e84d:	pop    rdi
  42e84e:	imul   esp,DWORD PTR [rax+riz*1+0x25],0x6f662064
  42e856:	jb     0x42e878
  42e858:	and    eax,0x6f632064
  42e85d:	ins    BYTE PTR es:[rdi],dx
  42e85e:	jne    0x42e8cd
  42e860:	outs   dx,BYTE PTR ds:[rsi]
  42e861:	jae    0x42e86d
  42e863:	add    BYTE PTR [rax],al
  42e865:	add    BYTE PTR [rax],al
  42e867:	add    BYTE PTR [rdi+rbp*2+0x67],ch
  42e86b:	imul   esp,DWORD PTR [rbx+0x20],0x6f727265
  42e872:	jb     0x42e8ae
  42e874:	and    BYTE PTR [rbx+0x6f],ah
  42e877:	ins    DWORD PTR es:[rdi],dx
  42e878:	jo     0x42e8ef
  42e87a:	je     0x42e8e1
  42e87c:	pop    rdi
  42e87d:	imul   esp,DWORD PTR [rax+riz*1+0x28],0x20296425
  42e885:	data16 jb 0x42e8f7
  42e888:	ins    DWORD PTR es:[rdi],dx
  42e889:	and    BYTE PTR [rbx+0x65],dh
  42e88c:	jb     0x42e904
  42e88e:	gs jb  0x42e8b1
  42e891:	outs   dx,BYTE PTR ds:[rsi]
  42e892:	outs   dx,DWORD PTR ds:[rsi]
  42e893:	je     0x42e8b5
  42e895:	outs   dx,WORD PTR ds:[rsi]
  42e897:	jne    0x42e907
  42e899:	and    BYTE PTR fs:[rcx+0x6e],ch
  42e89d:	and    BYTE PTR [rsp+riz*2+0x73],dh
  42e8a1:	sub    eax,0x6d6f633e
  42e8a6:	jo     0x42e907
  42e8a8:	imul   ebp,DWORD PTR [rsi+0x66],0xa6f
  42e8af:	add    BYTE PTR [rsi+0x6f],ah
  42e8b2:	jne    0x42e922
  42e8b4:	and    BYTE PTR fs:[rbx+0x6f],ah
  42e8b8:	ins    DWORD PTR es:[rdi],dx
  42e8b9:	jo     0x42e930
  42e8bb:	je     0x42e922
  42e8bd:	imul   esp,DWORD PTR [rax+riz*1+0x25],0x6e692064
  42e8c5:	and    BYTE PTR [rsp+riz*2+0x73],dh
  42e8c9:	sub    eax,0x6d6f633e
  42e8ce:	jo     0x42e92f
  42e8d0:	imul   ebp,DWORD PTR [rsi+0x66],0xa6f
  42e8d7:	add    BYTE PTR [rax+0x72],dh
  42e8da:	outs   dx,DWORD PTR ds:[rsi]
  42e8db:	movsxd esp,DWORD PTR [rbp+0x73]
  42e8de:	jae    0x42e949
  42e8e0:	outs   dx,BYTE PTR ds:[rsi]
  42e8e1:	and    BYTE PTR [ebx+0x6f],ah
  42e8e5:	ins    DWORD PTR es:[rdi],dx
  42e8e6:	jo     0x42e95d
  42e8e8:	je     0x42e94f
  42e8ea:	and    BYTE PTR [rdx+0x65],dh
  42e8ed:	jae    0x42e964
  42e8ef:	ins    BYTE PTR es:[rdi],dx
  42e8f0:	je     0x42e920
  42e8f2:	and    BYTE PTR [rsi+0x75],ch
  42e8f5:	ins    DWORD PTR es:[rdi],dx
  42e8f6:	pop    rdi
  42e8f7:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42e8fa:	jae    0x42e91c
  42e8fc:	cmp    eax,0xa642520
  42e901:	add    BYTE PTR [rax+0x72],dh
  42e904:	outs   dx,DWORD PTR ds:[rsi]
  42e905:	movsxd esp,DWORD PTR [rbp+0x73]
  42e908:	jae    0x42e973
  42e90a:	outs   dx,BYTE PTR ds:[rsi]
  42e90b:	and    BYTE PTR [ebx+0x6f],ah
  42e90f:	ins    DWORD PTR es:[rdi],dx
  42e910:	jo     0x42e987
  42e912:	je     0x42e979
  42e914:	and    BYTE PTR [rbx+0x6f],ah
  42e917:	ins    BYTE PTR es:[rdi],dx
  42e918:	jne    0x42e987
  42e91a:	outs   dx,BYTE PTR ds:[rsi]
  42e91b:	and    BYTE PTR [rip+0x63000a64],ah        # 0x6342f385
  42e921:	outs   dx,DWORD PTR ds:[rsi]
  42e922:	ins    DWORD PTR es:[rdi],dx
  42e923:	jo     0x42e99a
  42e925:	je     0x42e98c
  42e927:	and    BYTE PTR [rbx+0x6f],ah
  42e92a:	ins    BYTE PTR es:[rdi],dx
  42e92b:	jne    0x42e99a
  42e92d:	outs   dx,BYTE PTR ds:[rsi]
  42e92e:	pop    rdi
  42e92f:	jae    0x42e99a
  42e931:	jp     0x42e998
  42e933:	and    BYTE PTR [rcx+0x73],ch
  42e936:	and    BYTE PTR [rip+0xa64],ah        # 0x42f3a0
  42e93c:	add    BYTE PTR [rax],al
  42e93e:	add    BYTE PTR [rax],al
  42e940:	jo     0x42e9b4
  42e942:	outs   dx,DWORD PTR ds:[rsi]
  42e943:	movsxd esp,DWORD PTR [rbp+0x73]
  42e946:	jae    0x42e9b1
  42e948:	outs   dx,BYTE PTR ds:[rsi]
  42e949:	and    BYTE PTR [esp+eiz*2+0x73],dh
  42e94e:	and    BYTE PTR [rbx+0x6f],ah
  42e951:	ins    DWORD PTR es:[rdi],dx
  42e952:	jo     0x42e9c9
  42e954:	je     0x42e9bb
  42e956:	and    BYTE PTR [rdx+0x65],dh
  42e959:	jae    0x42e9d0
  42e95b:	ins    BYTE PTR es:[rdi],dx
  42e95c:	je     0x42e98a
  42e95e:	and    BYTE PTR [rdx+0x79],ah
  42e961:	pop    rdi
  42e962:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42e965:	jae    0x42e987
  42e967:	cmp    eax,0xa642520
  42e96c:	add    BYTE PTR [rax],al
  42e96e:	add    BYTE PTR [rax],al
  42e970:	jo     0x42e9e4
  42e972:	outs   dx,DWORD PTR ds:[rsi]
  42e973:	movsxd esp,DWORD PTR [rbp+0x73]
  42e976:	jae    0x42e9e1
  42e978:	outs   dx,BYTE PTR ds:[rsi]
  42e979:	and    BYTE PTR [esp+eiz*2+0x73],dh
  42e97e:	(bad)  
  42e97f:	and    BYTE PTR [rbx+0x6f],ah
  42e982:	ins    DWORD PTR es:[rdi],dx
  42e983:	jo     0x42e9fa
  42e985:	je     0x42e9ec
  42e987:	and    BYTE PTR [rdx+0x65],dh
  42e98a:	jae    0x42ea01
  42e98c:	ins    BYTE PTR es:[rdi],dx
  42e98d:	je     0x42e9bd
  42e98f:	and    BYTE PTR [rsi+0x75],ch
  42e992:	ins    DWORD PTR es:[rdi],dx
  42e993:	pop    rdi
  42e994:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42e997:	jae    0x42e9b9
  42e999:	cmp    eax,0xa752520
  42e99e:	add    BYTE PTR [rax],al
  42e9a0:	jo     0x42ea14
  42e9a2:	outs   dx,DWORD PTR ds:[rsi]
  42e9a3:	movsxd esp,DWORD PTR [rbp+0x73]
  42e9a6:	jae    0x42ea11
  42e9a8:	outs   dx,BYTE PTR ds:[rsi]
  42e9a9:	and    BYTE PTR [esp+eiz*2+0x73],dh
  42e9ae:	(bad)  
  42e9af:	and    BYTE PTR [rbx+0x6f],ah
  42e9b2:	ins    DWORD PTR es:[rdi],dx
  42e9b3:	jo     0x42ea2a
  42e9b5:	je     0x42ea1c
  42e9b7:	and    BYTE PTR [rdx+0x65],dh
  42e9ba:	jae    0x42ea31
  42e9bc:	ins    BYTE PTR es:[rdi],dx
  42e9bd:	je     0x42e9ed
  42e9bf:	and    BYTE PTR [rbx+0x6f],ah
  42e9c2:	ins    DWORD PTR es:[rdi],dx
  42e9c3:	jo     0x42ea3a
  42e9c5:	je     0x42ea2c
  42e9c7:	pop    rdi
  42e9c8:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa752520
	...
  42e9d8:	jo     0x42ea4c
  42e9da:	outs   dx,DWORD PTR ds:[rsi]
  42e9db:	movsxd esp,DWORD PTR [rbp+0x73]
  42e9de:	jae    0x42ea49
  42e9e0:	outs   dx,BYTE PTR ds:[rsi]
  42e9e1:	and    BYTE PTR [esp+eiz*2+0x73],dh
  42e9e6:	(bad)  
  42e9e7:	and    BYTE PTR [rbx+0x6f],ah
  42e9ea:	ins    DWORD PTR es:[rdi],dx
  42e9eb:	jo     0x42ea62
  42e9ed:	je     0x42ea54
  42e9ef:	and    BYTE PTR [rdx+0x65],dh
  42e9f2:	jae    0x42ea69
  42e9f4:	ins    BYTE PTR es:[rdi],dx
  42e9f5:	je     0x42ea25
  42e9f7:	and    BYTE PTR [rdx+0x79],ah
  42e9fa:	pop    rdi
  42e9fb:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42e9fe:	jae    0x42ea20
  42ea00:	cmp    eax,0xa642520
  42ea05:	add    BYTE PTR [rax],al
  42ea07:	add    BYTE PTR [rax+0x72],dh
  42ea0a:	outs   dx,DWORD PTR ds:[rsi]
  42ea0b:	movsxd esp,DWORD PTR [rbp+0x73]
  42ea0e:	jae    0x42ea79
  42ea10:	outs   dx,BYTE PTR ds:[rsi]
  42ea11:	and    BYTE PTR [esp+eiz*2+0x73],dh
  42ea16:	(bad)  
  42ea17:	and    BYTE PTR [rbx+0x6f],ah
  42ea1a:	ins    DWORD PTR es:[rdi],dx
  42ea1b:	jo     0x42ea92
  42ea1d:	je     0x42ea84
  42ea1f:	and    BYTE PTR [rdx+0x65],dh
  42ea22:	jae    0x42ea99
  42ea24:	ins    BYTE PTR es:[rdi],dx
  42ea25:	je     0x42ea55
  42ea27:	and    BYTE PTR [rsi+0x75],ch
  42ea2a:	ins    DWORD PTR es:[rdi],dx
  42ea2b:	pop    rdi
  42ea2c:	movsxd ebp,DWORD PTR [rdi+0x6d]
  42ea2f:	jo     0x42ea90
  42ea31:	imul   ebp,DWORD PTR [rsi+0x66],0x203d206f
  42ea38:	and    eax,0xa64
  42ea3d:	add    BYTE PTR [rax],al
  42ea3f:	add    BYTE PTR [rax+0x72],dh
  42ea42:	outs   dx,DWORD PTR ds:[rsi]
  42ea43:	movsxd esp,DWORD PTR [rbp+0x73]
  42ea46:	jae    0x42eab1
  42ea48:	outs   dx,BYTE PTR ds:[rsi]
  42ea49:	and    BYTE PTR [esp+eiz*2+0x73],dh
  42ea4e:	(bad)  
  42ea4f:	and    BYTE PTR [rbx+0x6f],ah
  42ea52:	ins    DWORD PTR es:[rdi],dx
  42ea53:	jo     0x42eaca
  42ea55:	je     0x42eabc
  42ea57:	and    BYTE PTR [rdx+0x65],dh
  42ea5a:	jae    0x42ead1
  42ea5c:	ins    BYTE PTR es:[rdi],dx
  42ea5d:	je     0x42ea8d
  42ea5f:	and    BYTE PTR [rax+0x6f],dh
  42ea62:	imul   ebp,DWORD PTR [rsi+0x74],0xa3020
  42ea69:	add    BYTE PTR [rax],al
  42ea6b:	add    BYTE PTR [rax],al
  42ea6d:	add    BYTE PTR [rax],al
  42ea6f:	add    BYTE PTR [rax+0x72],dh
  42ea72:	outs   dx,DWORD PTR ds:[rsi]
  42ea73:	movsxd esp,DWORD PTR [rbp+0x73]
  42ea76:	jae    0x42eae1
  42ea78:	outs   dx,BYTE PTR ds:[rsi]
  42ea79:	and    BYTE PTR [esp+eiz*2+0x73],dh
  42ea7e:	(bad)  
  42ea7f:	and    BYTE PTR [rbx+0x6f],ah
  42ea82:	ins    DWORD PTR es:[rdi],dx
  42ea83:	jo     0x42eafa
  42ea85:	je     0x42eaec
  42ea87:	and    BYTE PTR [rdx+0x65],dh
  42ea8a:	jae    0x42eb01
  42ea8c:	ins    BYTE PTR es:[rdi],dx
  42ea8d:	je     0x42eabd
  42ea8f:	and    BYTE PTR [rax+0x6f],dh
  42ea92:	imul   ebp,DWORD PTR [rsi+0x74],0xa3120
  42ea99:	add    BYTE PTR [rax],al
  42ea9b:	add    BYTE PTR [rax],al
  42ea9d:	add    BYTE PTR [rax],al
  42ea9f:	add    BYTE PTR [rax+0x72],dh
  42eaa2:	outs   dx,DWORD PTR ds:[rsi]
  42eaa3:	movsxd esp,DWORD PTR [rbp+0x73]
  42eaa6:	jae    0x42eb11
  42eaa8:	outs   dx,BYTE PTR ds:[rsi]
  42eaa9:	and    BYTE PTR [esp+eiz*2+0x73],dh
  42eaae:	(bad)  
  42eaaf:	and    BYTE PTR [rbx+0x6f],ah
  42eab2:	ins    DWORD PTR es:[rdi],dx
  42eab3:	jo     0x42eb2a
  42eab5:	je     0x42eb1c
  42eab7:	and    BYTE PTR [rdx+0x65],dh
  42eaba:	jae    0x42eb31
  42eabc:	ins    BYTE PTR es:[rdi],dx
  42eabd:	je     0x42eaed
  42eabf:	and    BYTE PTR [rax+0x6f],dh
  42eac2:	imul   ebp,DWORD PTR [rsi+0x74],0xa3220
  42eac9:	add    BYTE PTR [rax],al
  42eacb:	add    BYTE PTR [rax],al
  42eacd:	add    BYTE PTR [rax],al
  42eacf:	add    BYTE PTR [rax+0x72],dh
  42ead2:	outs   dx,DWORD PTR ds:[rsi]
  42ead3:	movsxd esp,DWORD PTR [rbp+0x73]
  42ead6:	jae    0x42eb41
  42ead8:	outs   dx,BYTE PTR ds:[rsi]
  42ead9:	and    BYTE PTR [esp+eiz*2+0x73],dh
  42eade:	(bad)  
  42eadf:	and    BYTE PTR [rbx+0x6f],ah
  42eae2:	ins    DWORD PTR es:[rdi],dx
  42eae3:	jo     0x42eb5a
  42eae5:	je     0x42eb4c
  42eae7:	and    BYTE PTR [rdx+0x65],dh
  42eaea:	jae    0x42eb61
  42eaec:	ins    BYTE PTR es:[rdi],dx
  42eaed:	je     0x42eb1d
  42eaef:	and    BYTE PTR [rax+0x6f],dh
  42eaf2:	imul   ebp,DWORD PTR [rsi+0x74],0xa203520
  42eaf9:	add    BYTE PTR [rax],al
  42eafb:	add    BYTE PTR [rax],al
  42eafd:	add    BYTE PTR [rax],al
  42eaff:	add    BYTE PTR [rsp+riz*2+0x73],dh
  42eb03:	pop    rdi
  42eb04:	jo     0x42eb78
  42eb06:	outs   dx,DWORD PTR ds:[rsi]
  42eb07:	movsxd esp,DWORD PTR [rbp+0x73]
  42eb0a:	jae    0x42eb6b
  42eb0c:	je     0x42eb7d
  42eb0e:	imul   esp,DWORD PTR [rbp+0x6e],0x73
  42eb12:	sub    BYTE PTR [rcx],ch
  42eb14:	and    BYTE PTR cs:[rbx+0x65],dh
  42eb18:	je     0x42eb3a
  42eb1a:	movsxd esi,DWORD PTR [rbp+0x72]
  42eb1d:	jb     0x42eb84
  42eb1f:	outs   dx,BYTE PTR ds:[rsi]
  42eb20:	je     0x42eb81
  42eb22:	jb     0x42eb89
  42eb24:	jae    0x42eb9b
  42eb26:	ins    BYTE PTR es:[rdi],dx
  42eb27:	je     0x42eb9c
  42eb29:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42eb2d:	movsxd esi,DWORD PTR [rbp+0x72]
  42eb30:	jae    0x42eba1
  42eb32:	jb     0x42eb61
  42eb34:	ds jb  0x42eb9c
  42eb37:	jae    0x42eb98
  42eb39:	imul   ebp,DWORD PTR [rsi+0x66],0xa6f
  42eb40:	je     0x42eba6
  42eb42:	jae    0x42eba3
  42eb44:	jo     0x42ebb8
  42eb46:	outs   dx,DWORD PTR ds:[rsi]
  42eb47:	movsxd esp,DWORD PTR [rbp+0x73]
  42eb4a:	jae    0x42ebab
  42eb4c:	movsxd ebp,DWORD PTR [rdi+0x6d]
  42eb4f:	jo     0x42ebc6
  42eb51:	je     0x42ebb8
  42eb53:	sub    BYTE PTR [rcx],ch
  42eb55:	and    BYTE PTR [rsi+0x6f],ah
  42eb58:	jne    0x42ebc8
  42eb5a:	and    BYTE PTR fs:[rbx+0x6f],ah
  42eb5e:	ins    DWORD PTR es:[rdi],dx
  42eb5f:	jo     0x42ebd6
  42eb61:	je     0x42ebc8
  42eb63:	and    BYTE PTR [rcx+0x64],ch
  42eb66:	and    BYTE PTR [rip+0xa64],ah        # 0x42f5d0
  42eb6c:	add    BYTE PTR [rax],al
  42eb6e:	add    BYTE PTR [rax],al
  42eb70:	je     0x42ebd6
  42eb72:	jae    0x42ebd3
  42eb74:	jo     0x42ebe8
  42eb76:	outs   dx,DWORD PTR ds:[rsi]
  42eb77:	movsxd esp,DWORD PTR [rbp+0x73]
  42eb7a:	jae    0x42ebdb
  42eb7c:	movsxd ebp,DWORD PTR [rdi+0x6d]
  42eb7f:	jo     0x42ebf6
  42eb81:	je     0x42ebe8
  42eb83:	sub    BYTE PTR [rcx],ch
  42eb85:	and    BYTE PTR [rsi+0x41],al
  42eb88:	rex.WB
  42eb89:	rex.WR cmp r12b,BYTE PTR [rax]
  42eb8c:	imul   esp,DWORD PTR [rax+riz*1+0x65],0x65656378
  42eb94:	fs jae 0x42ebb7
  42eb97:	(bad)  
  42eb98:	outs   dx,DWORD PTR ds:[rsi]
  42eb99:	jne    0x42ec09
  42eb9b:	and    BYTE PTR fs:[rax],ch
  42eb9e:	and    eax,0xa2964
  42eba3:	add    BYTE PTR [rax],al
  42eba5:	add    BYTE PTR [rax],al
  42eba7:	add    BYTE PTR [rsp+riz*2+0x73],dh
  42ebab:	pop    rdi
  42ebac:	jo     0x42ec20
  42ebae:	outs   dx,DWORD PTR ds:[rsi]
  42ebaf:	movsxd esp,DWORD PTR [rbp+0x73]
  42ebb2:	jae    0x42ec13
  42ebb4:	movsxd ebp,DWORD PTR [rdi+0x6d]
  42ebb7:	jo     0x42ec2e
  42ebb9:	je     0x42ec20
  42ebbb:	sub    BYTE PTR [rcx],ch
  42ebbd:	and    BYTE PTR [rsi+0x41],al
  42ebc0:	rex.WB
  42ebc1:	rex.WR cmp r12b,BYTE PTR [rax]
  42ebc4:	addr32 gs je 0x42ec27
  42ebc8:	fs (bad) 
  42ebca:	je     0x42ec2d
  42ebcc:	sub    BYTE PTR [rcx],ch
  42ebce:	and    BYTE PTR [rsi+0x61],ah
  42ebd1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7400000a
  42ebd9:	fs jae 0x42ec3b
  42ebdc:	jo     0x42ec50
  42ebde:	outs   dx,DWORD PTR ds:[rsi]
  42ebdf:	movsxd esp,DWORD PTR [rbp+0x73]
  42ebe2:	jae    0x42ec43
  42ebe4:	je     0x42ec55
  42ebe6:	imul   esp,DWORD PTR [rbp+0x6e],0x73
  42ebea:	cmp    ah,BYTE PTR [rax]
  42ebec:	jb     0x42ec53
  42ebee:	je     0x42ec65
  42ebf0:	jb     0x42ec60
  42ebf2:	and    BYTE PTR [rbx+0x74],dh
  42ebf5:	(bad)  
  42ebf6:	je     0x42ec6d
  42ebf8:	jae    0x42ec1a
  42ebfa:	imul   esi,DWORD PTR [rbx+0x20],0xa6425
  42ec01:	add    BYTE PTR [rax],al
  42ec03:	add    BYTE PTR [rax],al
  42ec05:	add    BYTE PTR [rax],al
  42ec07:	add    BYTE PTR [rbp+0x6e],dl
  42ec0a:	jb     0x42ec71
  42ec0c:	movsxd ebp,DWORD PTR [rdi+0x67]
  42ec0f:	outs   dx,BYTE PTR ds:[rsi]
  42ec10:	imul   edi,DWORD PTR [rdx+0x65],0x44542064
  42ec17:	push   rbx
  42ec18:	xor    eax,0x4e59445f
  42ec1d:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  42ec21:	and    BYTE PTR gs:[rip+0x54000a78],ah        # 0x5442f6a0
  42ec28:	rex.R push rbx
  42ec2a:	pop    rdi
  42ec2b:	rex.WRXB push r8
  42ec2d:	pop    rdi
  42ec2e:	rex.XB push r13
  42ec30:	push   rdx
  42ec31:	push   rbx
  42ec32:	rex.WRXB push r10
  42ec34:	rex.XB
  42ec35:	rex.WR
  42ec36:	rex.WRXB push r11
  42ec38:	or     r8b,BYTE PTR [r8]
  42ec3b:	add    BYTE PTR [riz*4-0x57bb0003],dh
  42ec42:	std    
  42ec43:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec47:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec4b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec4f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec53:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec57:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec5b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec5f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec63:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec67:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec6b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec6f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec73:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec77:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec7b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec7f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec83:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec87:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec8b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec8f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec93:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec97:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec9b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ec9f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eca3:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eca7:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ecab:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ecaf:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ecb3:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ecb7:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ecbb:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ecbf:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ecc3:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ecc7:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eccb:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eccf:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ecd3:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ecd7:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ecdb:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ecdf:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ece3:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ece7:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eceb:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ecef:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ecf3:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ecf7:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ecfb:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ecff:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed03:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed07:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed0b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed0f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed13:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed17:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed1b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed1f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed23:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed27:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed2b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed2f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed33:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed37:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed3b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed3f:	jmp    rdi
  42ed41:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42ed42:	std    
  42ed43:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed47:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed4b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed4f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed53:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed57:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed5b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed5f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed63:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed67:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed6b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed6f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed73:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed77:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed7b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed7f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed83:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed87:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed8b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed8f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed93:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed97:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed9b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ed9f:	call   QWORD PTR [rsp+riz*4-0x3]
  42eda3:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eda7:	inc    DWORD PTR [rax+rbp*4-0x3]
  42edab:	inc    DWORD PTR [rax+rbp*4-0x3]
  42edaf:	inc    DWORD PTR [rax+rbp*4-0x3]
  42edb3:	inc    DWORD PTR [rax+rbp*4-0x3]
  42edb7:	inc    DWORD PTR [rax+rbp*4-0x3]
  42edbb:	inc    DWORD PTR [rax+rbp*4-0x3]
  42edbf:	push   rsp
  42edc1:	movabs ds:0xa3c5fffda844fffd,eax
  42edca:	std    
  42edcb:	inc    DWORD PTR [rax+rbp*4-0x3]
  42edcf:	inc    DWORD PTR [rax+rbp*4-0x3]
  42edd3:	inc    DWORD PTR [rax+rbp*4-0x3]
  42edd7:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eddb:	push   rsp
  42eddd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  42edde:	std    
  42eddf:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ede3:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ede7:	inc    DWORD PTR [rax+rbp*4-0x3]
  42edeb:	inc    DWORD PTR [rax+rbp*4-0x3]
  42edef:	inc    DWORD PTR [rax+rbp*4-0x3]
  42edf3:	inc    DWORD PTR [rax+rbp*4-0x3]
  42edf7:	inc    DWORD PTR [rax+rbp*4-0x3]
  42edfb:	inc    DWORD PTR [rax+rbp*4-0x3]
  42edff:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee03:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee07:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee0b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee0f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee13:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee17:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee1b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee1f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee23:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee27:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee2b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee2f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee33:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee37:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee3b:	inc    DWORD PTR [rdi+riz*4-0x3]
  42ee3f:	call   QWORD PTR [rdi+riz*4-0x3]
  42ee43:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee47:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee4b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee4f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee53:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee57:	inc    DWORD PTR [rbp+riz*4-0x585b0003]
  42ee5e:	std    
  42ee5f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee63:	inc    DWORD PTR [rsi+riz*4-0x597b0003]
  42ee6a:	std    
  42ee6b:	call   rbp
  42ee6d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  42ee6e:	std    
  42ee6f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee73:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee77:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee7b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee7f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee83:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee87:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee8b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee8f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee93:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee97:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee9b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ee9f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eea3:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eea7:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eeab:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eeaf:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eeb3:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eeb7:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eebb:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eebf:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eec3:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eec7:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eecb:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eecf:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eed3:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eed7:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eedb:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eedf:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eee3:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eee7:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eeeb:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eeef:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eef3:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eef7:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eefb:	inc    DWORD PTR [rax+rbp*4-0x3]
  42eeff:	call   QWORD PTR [rsi-0x5d]
  42ef02:	std    
  42ef03:	call   QWORD PTR [rsi-0x5d]
  42ef06:	std    
  42ef07:	push   rbp
  42ef09:	movabs ds:0xa844fffda844fffd,al
  42ef12:	std    
  42ef13:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef17:	call   QWORD PTR [rdx+riz*4-0x3]
  42ef1b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef1f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef23:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef27:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef2b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef2f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef33:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef37:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef3b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef3f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef43:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef47:	jmp    QWORD PTR [rdx+riz*4-0x57bb0003]
  42ef4e:	std    
  42ef4f:	inc    DWORD PTR [rsi+riz*4-0x57bb0003]
  42ef56:	std    
  42ef57:	push   rsp
  42ef59:	movabs al,ds:0xa844fffda844fffd
  42ef62:	std    
  42ef63:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef67:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef6b:	inc    DWORD PTR [rip+0x44fffda2]        # 0x4542ed13
  42ef71:	test   al,0xfd
  42ef73:	jmp    QWORD PTR [rcx+riz*4-0x3]
  42ef77:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef7b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef7f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef83:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef87:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef8b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef8f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef93:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef97:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef9b:	inc    DWORD PTR [rax+rbp*4-0x3]
  42ef9f:	inc    DWORD PTR [rax+rbp*4-0x3]
  42efa3:	inc    DWORD PTR [rax+rbp*4-0x3]
  42efa7:	inc    DWORD PTR [rax+rbp*4-0x3]
  42efab:	inc    DWORD PTR [rax+rbp*4-0x3]
  42efaf:	push   QWORD PTR [rcx+riz*4-0x5f7b0003]
  42efb6:	std    
  42efb7:	call   QWORD PTR [rax+riz*4]
  42efba:	std    
  42efbb:	push   rsp
  42efbd:	stos   DWORD PTR es:[rdi],eax
  42efbe:	std    
  42efbf:	inc    DWORD PTR [rsi-0x5a000254]
  42efc5:	lods   al,BYTE PTR ds:[rsi]
  42efc6:	std    
  42efc7:	inc    DWORD PTR [rsi-0x79000254]
  42efcd:	lods   al,BYTE PTR ds:[rsi]
  42efce:	std    
  42efcf:	inc    DWORD PTR [rsi-0x79000254]
  42efd5:	lods   al,BYTE PTR ds:[rsi]
  42efd6:	std    
  42efd7:	inc    DWORD PTR [rsi-0x79000254]
  42efdd:	lods   al,BYTE PTR ds:[rsi]
  42efde:	std    
  42efdf:	call   QWORD PTR [rdx-0x54]
  42efe2:	std    
  42efe3:	push   rsp
  42efe5:	stos   DWORD PTR es:[rdi],eax
  42efe6:	std    
  42efe7:	push   rsp
  42efe9:	stos   DWORD PTR es:[rdi],eax
  42efea:	std    
  42efeb:	push   rsp
  42efed:	stos   DWORD PTR es:[rdi],eax
  42efee:	std    
  42efef:	push   rsp
  42eff1:	stos   DWORD PTR es:[rdi],eax
  42eff2:	std    
  42eff3:	inc    DWORD PTR [rsi-0x35000254]
  42eff9:	lods   al,BYTE PTR ds:[rsi]
  42effa:	std    
  42effb:	inc    DWORD PTR [rax]
  42effd:	add    BYTE PTR [rax],al
  42efff:	add    BYTE PTR [rsp+riz*2+0x73],dh
  42f003:	pop    rdi
  42f004:	jo     0x42f078
  42f006:	outs   dx,DWORD PTR ds:[rsi]
  42f007:	movsxd esp,DWORD PTR [rbp+0x73]
  42f00a:	jae    0x42f06b
  42f00c:	outs   dx,BYTE PTR gs:[rsi]
  42f00e:	cmp    ah,BYTE PTR fs:[rax]
  42f011:	ins    DWORD PTR es:[rdi],dx
  42f012:	outs   dx,DWORD PTR ds:[rsi]
  42f013:	jb     0x42f07a
  42f015:	pop    rdi
  42f016:	jb     0x42f07d
  42f018:	jae    0x42f08f
  42f01a:	ins    BYTE PTR es:[rdi],dx
  42f01b:	je     0x42f090
  42f01d:	and    BYTE PTR [rip+0xa642520],bh        # 0xaa71543
  42f023:	or     DWORD PTR [rcx],ecx
  42f025:	ja     0x42f088
  42f027:	jae    0x42f088
  42f029:	movsxd esp,DWORD PTR [rcx+0x6e]
  42f02c:	movsxd esp,DWORD PTR [rbp+0x6c]
  42f02f:	ins    BYTE PTR es:[rdi],dx
  42f030:	gs and BYTE PTR fs:[rip+0xa642520],bh        # 0xaa71558
  42f038:	or     DWORD PTR [rcx],ecx
  42f03a:	gs jb  0x42f0af
  42f03d:	outs   dx,DWORD PTR ds:[rsi]
  42f03e:	jb     0x42f060
  42f040:	cmp    eax,0xa642520
  42f045:	or     DWORD PTR [rcx],ecx
  42f047:	outs   dx,DWORD PTR fs:[rsi]
  42f049:	outs   dx,BYTE PTR ds:[rsi]
  42f04a:	gs pop rdi
  42f04c:	movsxd ebp,DWORD PTR [rdi+0x75]
  42f04f:	outs   dx,BYTE PTR ds:[rsi]
  42f050:	je     0x42f0b1
  42f052:	jbe    0x42f0b5
  42f054:	ins    BYTE PTR es:[rdi],dx
  42f055:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa642520
  42f05d:	add    BYTE PTR [rax],al
  42f05f:	add    BYTE PTR [rax],ah
  42f061:	and    BYTE PTR [rax],ah
  42f063:	and    BYTE PTR [rax],ah
  42f065:	and    BYTE PTR [rax],ah
  42f067:	and    BYTE PTR [rax],ah
  42f069:	and    BYTE PTR [rax],ah
  42f06b:	and    BYTE PTR [rax],ah
  42f06d:	and    BYTE PTR [rax],ah
  42f06f:	and    BYTE PTR [rdx+0x6f],dh
  42f072:	ja     0x42f0e7
  42f074:	pop    rdi
  42f075:	(bad)  
  42f076:	data16 movsxd si,DWORD PTR gs:[rbp+riz*2+0x64]
  42f07d:	and    BYTE PTR [rip+0x36492520],bh        # 0x368c15a3
  42f083:	xor    al,0x64
  42f085:	or     al,BYTE PTR [rax]
  42f087:	add    BYTE PTR [rsp+riz*2+0x73],dh
  42f08b:	pop    rdi
  42f08c:	jo     0x42f100
  42f08e:	outs   dx,DWORD PTR ds:[rsi]
  42f08f:	movsxd esp,DWORD PTR [rbp+0x73]
  42f092:	jae    0x42f0f3
  42f094:	outs   dx,BYTE PTR gs:[rsi]
  42f096:	sub    BYTE PTR fs:[rcx],ch
  42f099:	and    BYTE PTR [rbx+0x74],dh
  42f09c:	(bad)  
  42f09d:	je     0x42f104
  42f09f:	and    BYTE PTR [rbx+0x65],dh
  42f0a2:	je     0x42f0c4
  42f0a4:	je     0x42f115
  42f0a6:	and    BYTE PTR [rsp+rax*2+0x53],dl
  42f0aa:	pop    rdi
  42f0ab:	rex.WB
  42f0ac:	rex.R
  42f0ad:	rex.WR
  42f0ae:	or     r8b,BYTE PTR [r8]
	...
  42f0bd:	add    BYTE PTR [rax],al
  42f0bf:	add    BYTE PTR [rip+0x2d2d2d2d],ch        # 0x2d701df2
  42f0c5:	sub    eax,0x2d2d2d2d
  42f0ca:	sub    eax,0x2d2d2d2d
  42f0cf:	sub    eax,0x2d2d2d2d
  42f0d4:	sub    eax,0x2d2d2d2d
  42f0d9:	sub    eax,0x2d2d2d2d
  42f0de:	add    BYTE PTR [rbp+0x54],dl
  42f0e1:	rex.RX sub eax,0x454c3631
	...
  42f0ff:	add    BYTE PTR [rsp+rax*2+0x53],dl
  42f103:	pop    rdi
  42f104:	rex.WB
  42f105:	rex.WRX push rsp
  42f107:	pop    rdi
  42f108:	rex.XB
  42f109:	rex.WRXB
  42f10a:	rex.WRX push rsp
  42f10c:	rex.WB
  42f10d:	rex.WRX push rbp
  42f10f:	add    BYTE PTR [r12+rax*2+0x53],r10b
  42f114:	pop    rdi
  42f115:	rex.WB
  42f116:	rex.WRX push rsp
  42f118:	pop    rdi
  42f119:	rex.XB
  42f11a:	rex.B
  42f11b:	rex.WRX
  42f11c:	rex.XB
  42f11d:	rex.RB
  42f11e:	rex.WR add BYTE PTR [rsp+rax*2+0x53],r10b
  42f123:	pop    rdi
  42f124:	rex.WB
  42f125:	rex.WRX push rsp
  42f127:	pop    rdi
  42f128:	push   rsp
  42f129:	rex.WB
  42f12a:	rex.WRB
  42f12b:	rex.RB
  42f12c:	rex.WRXB push r13
  42f12e:	push   rsp
  42f12f:	add    BYTE PTR [rsi+0x6f],ch
  42f132:	outs   dx,BYTE PTR ds:[rsi]
  42f133:	gs jae 0x42f1ab
  42f136:	movsxd ebp,DWORD PTR [rax+0x0]
  42f139:	jne    0x42f1af
  42f13b:	imul   ebp,DWORD PTR [rsi+rbp*1+0x63],0x74003000
  42f143:	fs jae 0x42f1ab
  42f146:	jb     0x42f1ba
  42f148:	outs   dx,DWORD PTR ds:[rsi]
  42f149:	jb     0x42f173
  42f14b:	and    eax,0x25202c70
  42f150:	jo     0x42f17e
  42f152:	and    BYTE PTR [rip+0x25202c64],ah        # 0x25631dbc
  42f158:	sub    DWORD PTR fs:[rdx],ecx
  42f15b:	add    BYTE PTR [rdi+0x70],cl
  42f15e:	outs   dx,BYTE PTR gs:[rsi]
  42f160:	rex.XB ins BYTE PTR es:[rdi],dx
  42f162:	imul   esp,DWORD PTR [rbp+0x6e],0x74000074
  42f169:	fs jae 0x42f1d1
  42f16c:	jb     0x42f1e0
  42f16e:	outs   dx,DWORD PTR ds:[rsi]
  42f16f:	jb     0x42f1ab
  42f171:	and    BYTE PTR [rbx+0x6c],ah
  42f174:	imul   esp,DWORD PTR [rbp+0x6e],0x696c2074
  42f17b:	(bad)  
  42f17d:	(bad)  
  42f17e:	jb     0x42f1f9
  42f180:	and    BYTE PTR [rdx+0x65],dh
  42f183:	je     0x42f1fa
  42f185:	jb     0x42f1f5
  42f187:	gs and BYTE PTR fs:[rip+0x64252873],ah        # 0x64681a02
  42f18f:	sub    DWORD PTR [rdx],ecx
  42f191:	add    BYTE PTR [rax],al
  42f193:	add    BYTE PTR [rax],al
  42f195:	add    BYTE PTR [rax],al
  42f197:	add    BYTE PTR [rbp+0x73],ch
  42f19a:	outs   dx,BYTE PTR ds:[esi]
  42f19c:	outs   dx,DWORD PTR ds:[rsi]
  42f19d:	and    BYTE PTR [rip+0x4454203d],bh        # 0x449711e0
  42f1a3:	push   rbx
  42f1a4:	rex.RB push r12
  42f1a6:	rex.WB
  42f1a7:	rex.WRB
  42f1a8:	and    BYTE PTR [r12+rdi*2+0x20],r15b
  42f1ad:	jb     0x42f212
  42f1af:	and    BYTE PTR [rcx],ah
  42f1b1:	cmp    eax,0x53445420
  42f1b6:	pop    rdi
  42f1b7:	rex.WB
  42f1b8:	rex.WRX push rsp
  42f1ba:	pop    rdi
  42f1bb:	push   rsp
  42f1bc:	rex.WB
  42f1bd:	rex.WRB
  42f1be:	rex.RB
  42f1bf:	rex.WRXB push r13
  42f1c1:	push   rsp
  42f1c2:	add    BYTE PTR [rax],al
  42f1c4:	add    BYTE PTR [rax],al
  42f1c6:	add    BYTE PTR [rax],al
  42f1c8:	ins    DWORD PTR es:[rdi],dx
  42f1c9:	jae    0x42f232
  42f1cb:	outs   dx,BYTE PTR ds:[rsi]
  42f1cc:	outs   dx,DWORD PTR ds:[rsi]
  42f1cd:	and    BYTE PTR [rip+0x4454203d],bh        # 0x44971210
  42f1d3:	push   rbx
  42f1d4:	rex.RB push r12
  42f1d6:	rex.WB
  42f1d7:	rex.WRB
  42f1d8:	and    BYTE PTR [r12+rdi*2+0x20],r15b
  42f1dd:	jb     0x42f242
  42f1df:	and    BYTE PTR [rcx],ah
  42f1e1:	cmp    eax,0x53445420
  42f1e6:	pop    rdi
  42f1e7:	rex.WB
  42f1e8:	rex.WRX push rsp
  42f1ea:	pop    rdi
  42f1eb:	rex.XB
  42f1ec:	rex.WRXB
  42f1ed:	rex.WRX push rsp
  42f1ef:	rex.WB
  42f1f0:	rex.WRX push rbp
  42f1f2:	add    BYTE PTR [r8],r8b
  42f1f5:	add    BYTE PTR [rax],al
  42f1f7:	add    BYTE PTR [rbp+0x78],ah
  42f1fa:	imul   esi,DWORD PTR [rdx+rdi*1+0x20],0x25287325
  42f202:	sub    DWORD PTR fs:[rax],esp
  42f205:	jbe    0x42f268
  42f207:	ins    BYTE PTR es:[rdi],dx
  42f208:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x20796c6e
  42f210:	outs   dx,WORD PTR ds:[rsi]
  42f212:	jb     0x42f234
  42f214:	push   rsp
  42f215:	rex.R push rbx
  42f217:	rex.RB push r12
  42f219:	rex.WB
  42f21a:	rex.WRB
  42f21b:	or     r8b,BYTE PTR [r8]
  42f21e:	je     0x42f284
  42f220:	jae    0x42f287
  42f222:	jb     0x42f296
  42f224:	outs   dx,DWORD PTR ds:[rsi]
  42f225:	jb     0x42f261
  42f227:	and    BYTE PTR [rdx+0x65],dh
  42f22a:	je     0x42f2a1
  42f22c:	jb     0x42f29c
  42f22e:	imul   ebp,DWORD PTR [rsi+0x67],0x28732520
  42f235:	and    eax,0xa2964
  42f23a:	add    BYTE PTR [rax],al
  42f23c:	add    BYTE PTR [rax],al
  42f23e:	add    BYTE PTR [rax],al
  42f240:	jae    0x42f2b6
  42f242:	(bad)  
  42f243:	je     0x42f2aa
  42f245:	and    BYTE PTR [rax+riz*1],bh
  42f248:	push   rsp
  42f249:	rex.R push rbx
  42f24b:	pop    rdi
  42f24c:	push   rsi
  42f24d:	rex.RB
  42f24e:	rex.XB push r12
  42f250:	rex.WRXB push r10
  42f252:	pop    rdi
  42f253:	push   rbx
  42f254:	rex.WB pop r10
  42f256:	sub    BYTE PTR [r11+0x74],r14b
  42f25a:	(bad)  
  42f25b:	je     0x42f2c2
  42f25d:	pop    rdi
  42f25e:	outs   dx,BYTE PTR ds:[rsi]
  42f25f:	(bad)  
  42f260:	ins    DWORD PTR es:[rdi],dx
  42f261:	gs jae 0x42f28d
  42f264:	add    BYTE PTR [rax],al
  42f266:	add    BYTE PTR [rax],al
  42f268:	je     0x42f2ce
  42f26a:	jae    0x42f299
  42f26c:	ds jae 0x42f2e3
  42f26f:	(bad)  
  42f270:	je     0x42f2d7
  42f272:	and    BYTE PTR [rax+riz*1],bh
  42f275:	push   rsp
  42f276:	rex.R push rbx
  42f278:	pop    rdi
  42f279:	push   rsi
  42f27a:	rex.RB
  42f27b:	rex.XB push r12
  42f27d:	rex.WRXB push r10
  42f27f:	pop    rdi
  42f280:	push   rbx
  42f281:	rex.WB pop r10
  42f283:	sub    BYTE PTR [r11+0x74],r14b
  42f287:	(bad)  
  42f288:	je     0x42f2ef
  42f28a:	pop    rdi
  42f28b:	outs   dx,BYTE PTR ds:[rsi]
  42f28c:	(bad)  
  42f28d:	ins    DWORD PTR es:[rdi],dx
  42f28e:	gs jae 0x42f2ba
  42f291:	add    BYTE PTR [rax],al
  42f293:	add    BYTE PTR [rax],al
  42f295:	add    BYTE PTR [rax],al
  42f297:	add    BYTE PTR [rdi+rbp*2+0x67],ch
  42f29b:	imul   esp,DWORD PTR [rbx+0x20],0x6f727265
  42f2a2:	jb     0x42f2de
  42f2a4:	and    BYTE PTR [rbx+0x61],ah
  42f2a7:	outs   dx,BYTE PTR ds:[rsi]
  42f2a8:	outs   dx,BYTE PTR ds:[rsi]
  42f2a9:	outs   dx,DWORD PTR ds:[rsi]
  42f2aa:	je     0x42f2cc
  42f2ac:	movsxd ebp,DWORD PTR [rax+0x61]
  42f2af:	outs   dx,BYTE PTR ds:[rsi]
  42f2b0:	and    BYTE PTR gs:[ecx+0x75],dh
  42f2b5:	gs jb  0x42f331
  42f2b8:	and    BYTE PTR [rbx+0x74],dh
  42f2bb:	(bad)  
  42f2bc:	je     0x42f323
  42f2be:	and    BYTE PTR [rsi+0x72],ah
  42f2c1:	outs   dx,DWORD PTR ds:[rsi]
  42f2c2:	ins    DWORD PTR es:[rdi],dx
  42f2c3:	and    BYTE PTR [rip+0x6f742073],ah        # 0x6fb7133c
  42f2c9:	and    BYTE PTR [rip+0xa73],ah        # 0x42fd42
  42f2cf:	add    BYTE PTR [rbx+0x68],al
  42f2d2:	(bad)  
  42f2d3:	outs   dx,BYTE PTR ds:[rsi]
  42f2d4:	gs and BYTE PTR fs:[ecx+0x75],dh
  42f2da:	gs jb  0x42f356
  42f2dd:	and    BYTE PTR [rbx+0x74],dh
  42f2e0:	(bad)  
  42f2e1:	je     0x42f348
  42f2e3:	and    BYTE PTR [rsi+0x72],ah
  42f2e6:	outs   dx,DWORD PTR ds:[rsi]
  42f2e7:	ins    DWORD PTR es:[rdi],dx
  42f2e8:	and    BYTE PTR [rip+0x6f742073],ah        # 0x6fb71361
  42f2ee:	and    BYTE PTR [rip+0xa73],ah        # 0x42fd67
  42f2f4:	fnstsw WORD PTR [rax-0x46e30003]
  42f2fa:	std    
  42f2fb:	jmp    FWORD PTR [rcx+rdi*4-0x3]
  42f2ff:	call   FWORD PTR [rcx+rdi*4-0x46030003]
  42f306:	std    
  42f307:	jmp    rsi
  42f309:	mov    eax,0xfffd
	...
  42f33e:	add    BYTE PTR [rax],al
  42f340:	je     0x42f3a6
  42f342:	jae    0x42f3a9
  42f344:	jb     0x42f3b8
  42f346:	outs   dx,DWORD PTR ds:[rsi]
  42f347:	jb     0x42f383
  42f349:	and    BYTE PTR [rbx+0x6c],ah
  42f34c:	imul   esp,DWORD PTR [rbp+0x6e],0x696c2074
  42f353:	(bad)  
  42f355:	(bad)  
  42f356:	jb     0x42f3d1
  42f358:	and    BYTE PTR [rsi+0x6f],ch
  42f35b:	je     0x42f37d
  42f35d:	movsxd esp,DWORD PTR [rcx+0x6c]
  42f360:	ins    BYTE PTR es:[rdi],dx
  42f361:	gs and BYTE PTR fs:[rdx+0x65],ah
  42f366:	movsxd esp,DWORD PTR [rcx+0x75]
  42f369:	jae    0x42f3d0
  42f36b:	and    BYTE PTR [rbp+0x69],ah
  42f36e:	je     0x42f3d8
  42f370:	gs jb  0x42f393
  42f373:	je     0x42f3d9
  42f375:	jae    0x42f3d6
  42f377:	movsxd esi,DWORD PTR [rax+rdi*2+0x20]
  42f37b:	sub    BYTE PTR [rip+0x6f202970],ah        # 0x6f631cf1
  42f381:	jb     0x42f3a3
  42f383:	je     0x42f3e9
  42f385:	jae    0x42f3e6
  42f387:	movsxd esi,DWORD PTR [rax+rdi*2+0x2d]
  42f38b:	ds gs jb 0x42f401
  42f38f:	pop    rdi
  42f390:	push   0x6c646e61
  42f395:	gs jb  0x42f3b8
  42f398:	imul   esi,DWORD PTR [rbx+0x20],0x4c4c554e
  42f39f:	or     al,BYTE PTR [rax]
	...
  42f3bd:	add    BYTE PTR [rax],al
  42f3bf:	add    BYTE PTR [rcx+0x44],cl
  42f3c2:	rex.WR
  42f3c3:	add    BYTE PTR [r8],r8b
  42f3c6:	add    BYTE PTR [rax],al
  42f3c8:	push   rdi
  42f3c9:	push   rdx
  42f3ca:	rex.WB push r12
  42f3cc:	rex.WB
  42f3cd:	rex.WRX
  42f3ce:	rex.RXB add BYTE PTR [r11+0x45],r10b
  42f3d2:	rex.WRX
  42f3d3:	rex.R
  42f3d4:	rex.WB
  42f3d5:	rex.WRX
  42f3d6:	rex.RXB add BYTE PTR [r8+0x45],r10b
  42f3da:	rex.WRX
  42f3db:	rex.R
  42f3dc:	rex.WB
  42f3dd:	rex.WRX
  42f3de:	rex.RXB add BYTE PTR [r10+0x45],r10b
  42f3e2:	rex.B
  42f3e3:	rex.R
  42f3e4:	rex.WB
  42f3e5:	rex.WRX
  42f3e6:	add    BYTE PTR [r13+r8*2+0x41],r8b
  42f3eb:	add    BYTE PTR [rax],r8b
  42f3ee:	add    BYTE PTR [rax],al
  42f3f0:	rex.X jne 0x42f459
  42f3f3:	data16 gs jb 0x42f417
  42f3f7:	gs js  0x42f462
  42f3fa:	(bad)  
  42f3fb:	jne    0x42f470
  42f3fd:	je     0x42f464
  42f3ff:	and    BYTE PTR fs:[rbx+0x6f],ah
  42f403:	outs   dx,BYTE PTR ds:[rsi]
  42f404:	jbe    0x42f46b
  42f406:	jb     0x42f47c
  42f408:	imul   ebp,DWORD PTR [rsi+0x67],0x61686320
  42f40f:	jb     0x42f472
  42f411:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  42f415:	jae    0x42f437
  42f417:	data16 jb 0x42f489
  42f41a:	ins    DWORD PTR es:[rdi],dx
  42f41b:	and    BYTE PTR [rbx+0x6c],ah
  42f41e:	imul   esp,DWORD PTR [rbp+0x6e],0x6e692074
  42f425:	je     0x42f496
  42f427:	and    BYTE PTR [rbx+0x65],dh
  42f42a:	jb     0x42f4a2
  42f42c:	gs jb  0x42f456
  42f42f:	jae    0x42f451
  42f431:	movsxd ebp,DWORD PTR [rax+0x61]
  42f434:	jb     0x42f497
  42f436:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  42f43a:	and    BYTE PTR [rbx+0x65],dh
  42f43d:	je     0x42f43f
  42f43f:	add    BYTE PTR [rbx+0x68],al
  42f442:	(bad)  
  42f443:	jb     0x42f4a6
  42f445:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  42f449:	and    BYTE PTR [rbx+0x65],dh
  42f44c:	je     0x42f46e
  42f44e:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42f451:	jbe    0x42f4b8
  42f453:	jb     0x42f4c8
  42f455:	imul   ebp,DWORD PTR [rdi+0x6e],0x20736920
  42f45c:	outs   dx,BYTE PTR ds:[rsi]
  42f45d:	outs   dx,DWORD PTR ds:[rsi]
  42f45e:	je     0x42f480
  42f460:	(bad)  
  42f461:	jbe    0x42f4c4
  42f463:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6220656c
  42f46b:	gs je  0x42f4e5
  42f46e:	gs outs dx,BYTE PTR gs:[rsi]
  42f471:	and    BYTE PTR [rbx+0x6c],ah
  42f474:	imul   esp,DWORD PTR [rbp+0x6e],0x68632074
  42f47b:	(bad)  
  42f47c:	jb     0x42f4df
  42f47e:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  42f482:	and    BYTE PTR [rbx+0x65],dh
  42f485:	je     0x42f4a7
  42f487:	(bad)  
  42f488:	and    eax,0x27732a2e
  42f48d:	and    BYTE PTR [rcx+0x6e],ah
  42f490:	and    BYTE PTR fs:[rbx+0x65],dh
  42f494:	jb     0x42f50c
  42f496:	gs jb  0x42f4b9
  42f499:	movsxd ebp,DWORD PTR [rax+0x61]
  42f49c:	jb     0x42f4ff
  42f49e:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  42f4a2:	and    BYTE PTR [rbx+0x65],dh
  42f4a5:	je     0x42f4c7
  42f4a7:	(bad)  
  42f4a8:	and    eax,0x27732a2e
  42f4ad:	add    BYTE PTR [rax],al
  42f4af:	add    BYTE PTR [rbp+0x72],al
  42f4b2:	jb     0x42f523
  42f4b4:	jb     0x42f4d6
  42f4b6:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42f4b9:	jbe    0x42f520
  42f4bb:	jb     0x42f531
  42f4bd:	imul   ebp,DWORD PTR [rsi+0x67],0x61686320
  42f4c4:	jb     0x42f527
  42f4c6:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  42f4ca:	jae    0x42f4ec
  42f4cc:	imul   ebp,DWORD PTR [rsi+0x74],0x6573206f
  42f4d3:	jb     0x42f54b
  42f4d5:	gs jb  0x42f4ff
  42f4d8:	jae    0x42f4fa
  42f4da:	movsxd ebp,DWORD PTR [rax+0x61]
  42f4dd:	jb     0x42f540
  42f4df:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  42f4e3:	and    BYTE PTR [rbx+0x65],dh
  42f4e6:	je     0x42f516
  42f4e8:	and    BYTE PTR [rbx+0x6f],dl
  42f4eb:	ins    DWORD PTR es:[rdi],dx
  42f4ec:	and    BYTE PTR gs:[rbx+0x68],ah
  42f4f0:	(bad)  
  42f4f1:	jb     0x42f554
  42f4f3:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  42f4f7:	sub    BYTE PTR [rbx+0x29],dh
  42f4fa:	and    BYTE PTR [rbx+0x6f],ah
  42f4fd:	jne    0x42f56b
  42f4ff:	and    BYTE PTR fs:[rsi+0x6f],ch
  42f503:	je     0x42f525
  42f505:	(bad)  
  42f506:	and    BYTE PTR gs:[rbx+0x6f],ah
  42f50a:	outs   dx,BYTE PTR ds:[rsi]
  42f50b:	jbe    0x42f572
  42f50d:	jb     0x42f583
  42f50f:	gs add BYTE PTR fs:[rax],al
  42f513:	add    BYTE PTR [rax],al
  42f515:	add    BYTE PTR [rax],al
  42f517:	add    BYTE PTR [rbx+0x6f],dl
  42f51a:	ins    DWORD PTR es:[rdi],dx
  42f51b:	and    BYTE PTR gs:[rbx+0x68],ah
  42f51f:	(bad)  
  42f520:	jb     0x42f583
  42f522:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  42f526:	sub    BYTE PTR [rbx+0x29],dh
  42f529:	and    BYTE PTR [rbx+0x6f],ah
  42f52c:	jne    0x42f59a
  42f52e:	and    BYTE PTR fs:[rsi+0x6f],ch
  42f532:	je     0x42f554
  42f534:	(bad)  
  42f535:	and    BYTE PTR gs:[rbx+0x6f],ah
  42f539:	outs   dx,BYTE PTR ds:[rsi]
  42f53a:	jbe    0x42f5a1
  42f53c:	jb     0x42f5b2
  42f53e:	gs and BYTE PTR fs:[rcx+0x6e],ch
  42f543:	je     0x42f5b4
  42f545:	and    BYTE PTR [rbx+0x6c],ah
  42f548:	imul   esp,DWORD PTR [rbp+0x6e],0x20732774
  42f54f:	movsxd ebp,DWORD PTR [rax+0x61]
  42f552:	jb     0x42f5b5
  42f554:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  42f558:	and    BYTE PTR [rbx+0x65],dh
  42f55b:	je     0x42f58b
  42f55d:	and    BYTE PTR [rax],ah
  42f55f:	push   rbp
  42f560:	outs   dx,BYTE PTR ds:[rsi]
  42f561:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42f564:	jbe    0x42f5cb
  42f566:	jb     0x42f5dc
  42f568:	gs and BYTE PTR fs:[rdx+0x79],ah
  42f56d:	je     0x42f5d4
  42f56f:	jae    0x42f591
  42f571:	ja     0x42f5d8
  42f573:	jb     0x42f5da
  42f575:	and    BYTE PTR [rbx+0x68],ah
  42f578:	(bad)  
  42f579:	outs   dx,BYTE PTR ds:[rsi]
  42f57a:	gs and BYTE PTR fs:[edi+ebp*2+0x20],dh
  42f581:	jno    0x42f5f8
  42f583:	gs jae 0x42f5fa
  42f586:	imul   ebp,DWORD PTR [rdi+0x6e],0x72616d20
  42f58d:	imul   esi,DWORD PTR [rbx+0x20],0x28
  42f591:	(bad)  
  42f592:	(bad)  
  42f593:	(bad)  
  42f594:	sub    DWORD PTR [rax],eax
  42f596:	add    BYTE PTR [rax],al
  42f598:	push   rbx
  42f599:	outs   dx,DWORD PTR ds:[rsi]
  42f59a:	ins    DWORD PTR es:[rdi],dx
  42f59b:	and    BYTE PTR gs:[rbx+0x68],ah
  42f59f:	(bad)  
  42f5a0:	jb     0x42f603
  42f5a2:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  42f5a6:	sub    BYTE PTR [rbx+0x29],dh
  42f5a9:	and    BYTE PTR [rbx+0x6f],ah
  42f5ac:	jne    0x42f61a
  42f5ae:	and    BYTE PTR fs:[rsi+0x6f],ch
  42f5b2:	je     0x42f5d4
  42f5b4:	(bad)  
  42f5b5:	and    BYTE PTR gs:[rbx+0x6f],ah
  42f5b9:	outs   dx,BYTE PTR ds:[rsi]
  42f5ba:	jbe    0x42f621
  42f5bc:	jb     0x42f632
  42f5be:	gs and BYTE PTR fs:[rcx+0x6e],ch
  42f5c3:	je     0x42f634
  42f5c5:	and    BYTE PTR [rbx+0x6c],ah
  42f5c8:	imul   esp,DWORD PTR [rbp+0x6e],0x20732774
  42f5cf:	movsxd ebp,DWORD PTR [rax+0x61]
  42f5d2:	jb     0x42f635
  42f5d4:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  42f5d8:	and    BYTE PTR [rbx+0x65],dh
  42f5db:	je     0x42f5dd
  42f5dd:	add    BYTE PTR [rax],al
  42f5df:	add    BYTE PTR [rdx+0x6f],al
  42f5e2:	je     0x42f64c
  42f5e4:	and    BYTE PTR [rax+0x6f],dh
  42f5e7:	jb     0x42f65d
  42f5e9:	and    BYTE PTR [rcx+0x6e],ah
  42f5ec:	and    BYTE PTR fs:[rcx+0x6e],ch
  42f5f0:	jae    0x42f666
  42f5f2:	(bad)  
  42f5f3:	outs   dx,BYTE PTR ds:[rsi]
  42f5f4:	movsxd esp,DWORD PTR [rbp+0x20]
  42f5f7:	jae    0x42f669
  42f5f9:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  42f5fd:	imul   esp,DWORD PTR [rbp+0x64],0x0
  42f604:	add    BYTE PTR [rax],al
  42f606:	add    BYTE PTR [rax],al
  42f608:	rex.B je 0x42f67f
  42f60b:	gs ins DWORD PTR es:[rdi],dx
  42f60d:	jo     0x42f683
  42f60f:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42f613:	imul   ebp,DWORD PTR [rsi+0x69],0x74616974
  42f61a:	and    BYTE PTR gs:[rcx+0x20],ah
  42f61e:	outs   dx,BYTE PTR ds:[rsi]
  42f61f:	gs ja  0x42f642
  42f622:	rex.B
  42f623:	fs (bad) 
  42f625:	jo     0x42f69b
  42f627:	imul   esi,DWORD PTR [rsi+0x65],0x72655320
  42f62e:	jbe    0x42f695
  42f630:	jb     0x42f652
  42f632:	outs   dx,DWORD PTR ds:[rsi]
  42f633:	jo     0x42f69a
  42f635:	jb     0x42f698
  42f637:	je     0x42f6a2
  42f639:	outs   dx,DWORD PTR ds:[rsi]
  42f63a:	outs   dx,BYTE PTR ds:[rsi]
  42f63b:	and    BYTE PTR [rdi+0x69],dh
  42f63e:	je     0x42f6a8
  42f640:	and    BYTE PTR [rdx+0x65],dh
  42f643:	jae    0x42f6ba
  42f645:	ins    BYTE PTR es:[rdi],dx
  42f646:	je     0x42f6bb
  42f648:	and    BYTE PTR [rax+0x65],dh
  42f64b:	outs   dx,BYTE PTR ds:[rsi]
  42f64c:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x0
  42f654:	add    BYTE PTR [rax],al
  42f656:	add    BYTE PTR [rax],al
  42f658:	rex.X (bad) 
  42f65a:	and    BYTE PTR fs:[rdi+rbp*2+0x6b],dh
  42f65f:	outs   dx,BYTE PTR gs:[rsi]
  42f661:	and    BYTE PTR [rsi+0x72],ah
  42f664:	outs   dx,DWORD PTR ds:[rsi]
  42f665:	ins    DWORD PTR es:[rdi],dx
  42f666:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42f66a:	and    BYTE PTR [rbx+0x65],dh
  42f66d:	jb     0x42f6e5
  42f66f:	gs jb  0x42f6ac
  42f672:	and    BYTE PTR [rcx+riz*2+0x74],al
  42f676:	(bad)  
  42f677:	jae    0x42f6ed
  42f679:	jb     0x42f6e0
  42f67b:	(bad)  
  42f67c:	ins    DWORD PTR es:[rdi],dx
  42f67d:	and    BYTE PTR [rax+0x72],dh
  42f680:	outs   dx,DWORD PTR ds:[rsi]
  42f681:	movsxd esp,DWORD PTR [rbp+0x73]
  42f684:	jae    0x42f6ef
  42f686:	outs   dx,BYTE PTR ds:[rsi]
  42f687:	and    BYTE PTR [edi+0x75],ch
  42f68b:	je     0x42f6ad
  42f68d:	outs   dx,DWORD PTR ds:[rsi]
  42f68e:	data16 and BYTE PTR [rbx+0x79],dh
  42f692:	outs   dx,BYTE PTR ds:[rsi]
  42f693:	movsxd eax,DWORD PTR [rax]
  42f695:	add    BYTE PTR [rax],al
  42f697:	add    BYTE PTR [rdx+rax*2+0x2d],al
  42f69b:	imul   r12,QWORD PTR [rdx+0x72],0x20797261
  42f6a3:	movsxd esp,DWORD PTR [rcx+0x70]
  42f6a6:	(bad)  
  42f6a7:	(bad)  
  42f6a8:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x20736569
  42f6b0:	outs   dx,BYTE PTR ds:[rsi]
  42f6b1:	outs   dx,DWORD PTR ds:[rsi]
  42f6b2:	je     0x42f6d4
  42f6b4:	(bad)  
  42f6b5:	movsxd esp,DWORD PTR [rbx+0x65]
  42f6b8:	jo     0x42f72e
  42f6ba:	gs and BYTE PTR fs:[rdx+0x79],ah
  42f6bf:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42f6c3:	and    BYTE PTR [rbx+0x65],dl
  42f6c6:	jb     0x42f73e
  42f6c8:	gs jb  0x42f6cb
  42f6cb:	add    BYTE PTR [rax],al
  42f6cd:	add    BYTE PTR [rax],al
  42f6cf:	add    BYTE PTR [rbp+0x6e],dl
  42f6d2:	gs js  0x42f745
  42f6d5:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  42f6da:	and    BYTE PTR [rbx+0x61],ah
  42f6dd:	jo     0x42f740
  42f6df:	(bad)  
  42f6e0:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x79742079
  42f6e8:	jo     0x42f74f
  42f6ea:	and    BYTE PTR [rcx+0x6e],ch
  42f6ed:	and    BYTE PTR [rbx+0x41],al
  42f6f0:	push   rax
  42f6f1:	rex.B
  42f6f2:	rex.X
  42f6f3:	rex.WB
  42f6f4:	rex.WR
  42f6f5:	rex.WB push r12
  42f6f7:	pop    rcx
  42f6f8:	and    BYTE PTR [rcx+riz*2+0x74],ah
  42f6fc:	(bad)  
  42f6fd:	jae    0x42f773
  42f6ff:	jb     0x42f766
  42f701:	(bad)  
  42f702:	ins    DWORD PTR es:[rdi],dx
  42f703:	add    BYTE PTR [rax],al
  42f705:	add    BYTE PTR [rax],al
  42f707:	add    BYTE PTR [rbp+0x72],al
  42f70a:	jb     0x42f77b
  42f70c:	jb     0x42f72e
  42f70e:	imul   ebp,DWORD PTR [rsi+0x20],0x736f6c63
  42f715:	imul   ebp,DWORD PTR [rsi+0x67],0x74656e20
  42f71c:	ja     0x42f78d
  42f71e:	jb     0x42f78b
  42f720:	and    BYTE PTR [rbx+0x6f],ah
  42f723:	outs   dx,BYTE PTR ds:[rsi]
  42f724:	outs   dx,BYTE PTR ds:[rsi]
  42f725:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42f72a:	outs   dx,BYTE PTR ds:[rsi]
  42f72b:	add    BYTE PTR [rax],al
  42f72d:	add    BYTE PTR [rax],al
  42f72f:	add    BYTE PTR [rbp+0x6e],dl
  42f732:	(bad)  
  42f733:	(bad)  
  42f734:	ins    BYTE PTR es:[rdi],dx
  42f735:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  42f73a:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42f73d:	outs   dx,BYTE PTR ds:[rsi]
  42f73e:	movsxd esi,DWORD PTR gs:[rdx+rdi*1+0x20]
  42f743:	rex.B
  42f744:	fs (bad) 
  42f746:	jo     0x42f7bc
  42f748:	imul   esi,DWORD PTR [rsi+0x65],0x72655320
  42f74f:	jbe    0x42f7b6
  42f751:	jb     0x42f773
  42f753:	imul   esi,DWORD PTR [rbx+0x20],0x76616e75
  42f75a:	(bad)  
  42f75b:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6f20656c
  42f763:	jb     0x42f785
  42f765:	outs   dx,DWORD PTR fs:[rsi]
  42f767:	gs jae 0x42f78a
  42f76a:	outs   dx,BYTE PTR ds:[rsi]
  42f76b:	outs   dx,DWORD PTR ds:[rsi]
  42f76c:	je     0x42f78e
  42f76e:	gs js  0x42f7da
  42f771:	jae    0x42f7e7
  42f773:	add    BYTE PTR [rax],al
  42f775:	add    BYTE PTR [rax],al
  42f777:	add    BYTE PTR [rbp+0x6e],dl
  42f77a:	jae    0x42f7eb
  42f77c:	ins    BYTE PTR es:[rdi],dx
  42f77d:	imul   esp,DWORD PTR [rbx+0x69],0x20646574
  42f784:	gs jbe 0x42f7ec
  42f787:	outs   dx,BYTE PTR ds:[rsi]
  42f788:	je     0x42f7aa
  42f78a:	outs   dx,BYTE PTR ds:[rsi]
  42f78b:	outs   dx,DWORD PTR ds:[rsi]
  42f78c:	je     0x42f7f7
  42f78e:	imul   sp,WORD PTR [rbx+0x61],0x6974
  42f794:	outs   dx,DWORD PTR ds:[rsi]
  42f795:	outs   dx,BYTE PTR ds:[rsi]
  42f796:	and    BYTE PTR [rdx+0x65],dh
  42f799:	movsxd esp,DWORD PTR [rbp+0x69]
  42f79c:	jbe    0x42f803
  42f79e:	add    BYTE PTR fs:[rcx+0x64],al
  42f7a2:	(bad)  
  42f7a3:	jo     0x42f819
  42f7a5:	imul   esi,DWORD PTR [rsi+0x65],0x72655320
  42f7ac:	jbe    0x42f813
  42f7ae:	jb     0x42f7d0
  42f7b0:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42f7b3:	outs   dx,BYTE PTR ds:[rsi]
  42f7b4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42f7b9:	outs   dx,BYTE PTR ds:[rsi]
  42f7ba:	and    BYTE PTR [rsi+0x61],ah
  42f7bd:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
  42f7c5:	add    BYTE PTR [rax],al
  42f7c7:	add    BYTE PTR [rsi+0x65],cl
  42f7ca:	outs   dx,DWORD PTR ds:[esi]
  42f7cc:	je     0x42f837
  42f7ce:	(bad)  
  42f7cf:	je     0x42f836
  42f7d1:	and    BYTE PTR fs:[rdi+rbp*2+0x67],ch
  42f7d6:	imul   ebp,DWORD PTR [rsi+0x20],0x65747461
  42f7dd:	ins    DWORD PTR es:[rdi],dx
  42f7de:	jo     0x42f854
  42f7e0:	and    BYTE PTR [rsi+0x61],ah
  42f7e3:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x72724500
  42f7eb:	outs   dx,DWORD PTR ds:[rsi]
  42f7ec:	jb     0x42f80e
  42f7ee:	imul   ebp,DWORD PTR [rsi+0x20],0x646e6573
  42f7f5:	imul   ebp,DWORD PTR [rsi+0x67],0x74756f20
  42f7fc:	sub    eax,0x622d666f
  42f801:	(bad)  
  42f802:	outs   dx,BYTE PTR ds:[rsi]
  42f803:	and    BYTE PTR fs:[rcx+riz*2+0x74],ah
  42f808:	(bad)  
  42f809:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42f80d:	je     0x42f877
  42f80f:	and    BYTE PTR gs:[rbx+0x65],dh
  42f813:	jb     0x42f88b
  42f815:	gs jb  0x42f818
  42f818:	push   rdx
  42f819:	gs (bad) 
  42f81b:	and    BYTE PTR fs:[rsi+0x72],ah
  42f81f:	outs   dx,DWORD PTR ds:[rsi]
  42f820:	ins    DWORD PTR es:[rdi],dx
  42f821:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42f825:	and    BYTE PTR [rbx+0x65],dh
  42f828:	jb     0x42f8a0
  42f82a:	gs jb  0x42f84d
  42f82d:	data16 (bad) 
  42f82f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
  42f837:	add    BYTE PTR [rcx+0x64],al
  42f83a:	(bad)  
  42f83b:	jo     0x42f8b1
  42f83d:	imul   esi,DWORD PTR [rsi+0x65],0x72655320
  42f844:	jbe    0x42f8ab
  42f846:	jb     0x42f868
  42f848:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42f84b:	outs   dx,BYTE PTR ds:[rsi]
  42f84c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42f851:	outs   dx,BYTE PTR ds:[rsi]
  42f852:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  42f856:	gs and BYTE PTR fs:[rdi+0x75],ch
  42f85b:	je     0x42f85d
  42f85d:	add    BYTE PTR [rax],al
  42f85f:	add    BYTE PTR [rbp+0x6e],dl
  42f862:	gs js  0x42f8d5
  42f865:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  42f86a:	and    BYTE PTR [rbp+0x4f],al
  42f86d:	rex.RX and BYTE PTR [rsi+0x72],r12b
  42f871:	outs   dx,DWORD PTR ds:[rsi]
  42f872:	ins    DWORD PTR es:[rdi],dx
  42f873:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42f877:	and    BYTE PTR [rbx+0x65],dh
  42f87a:	jb     0x42f8f2
  42f87c:	gs jb  0x42f87f
  42f87f:	add    BYTE PTR [rbx+0x65],dl
  42f882:	jb     0x42f8fa
  42f884:	gs jb  0x42f8a7
  42f887:	outs   dx,BYTE PTR ds:[rsi]
  42f888:	(bad)  
  42f889:	ins    DWORD PTR es:[rdi],dx
  42f88a:	and    BYTE PTR gs:[rsi+0x6f],ch
  42f88e:	je     0x42f8b0
  42f890:	outs   dx,WORD PTR ds:[rsi]
  42f892:	jne    0x42f902
  42f894:	and    BYTE PTR fs:[rcx+0x6e],ch
  42f898:	and    BYTE PTR [rbx+0x6f],ah
  42f89b:	outs   dx,BYTE PTR ds:[rsi]
  42f89c:	imul   sp,WORD PTR [rdi+0x75],0x6172
  42f8a2:	je     0x42f90d
  42f8a4:	outs   dx,DWORD PTR ds:[rsi]
  42f8a5:	outs   dx,BYTE PTR ds:[rsi]
  42f8a6:	and    BYTE PTR [rsi+0x69],ah
  42f8a9:	ins    BYTE PTR es:[rdi],dx
  42f8aa:	gs jae 0x42f8db
  42f8ad:	add    BYTE PTR [rbp+0x6e],dl
  42f8b0:	(bad)  
  42f8b1:	(bad)  
  42f8b2:	ins    BYTE PTR es:[rdi],dx
  42f8b3:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  42f8b8:	outs   dx,DWORD PTR ds:[rsi]
  42f8b9:	jo     0x42f920
  42f8bb:	outs   dx,BYTE PTR ds:[rsi]
  42f8bc:	and    BYTE PTR [rbx+0x6f],dh
  42f8bf:	movsxd ebp,DWORD PTR [rbx+0x65]
  42f8c2:	je     0x42f8c4
  42f8c4:	add    BYTE PTR [rax],al
  42f8c6:	add    BYTE PTR [rax],al
  42f8c8:	push   rdx
  42f8c9:	gs (bad) 
  42f8cb:	and    BYTE PTR fs:[rcx+0x74],ah
  42f8cf:	je     0x42f936
  42f8d1:	ins    DWORD PTR es:[rdi],dx
  42f8d2:	jo     0x42f948
  42f8d4:	gs and BYTE PTR fs:[rdi+0x68],dh
  42f8d9:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x2074756f
  42f8e1:	outs   dx,DWORD PTR ds:[rsi]
  42f8e2:	data16 and BYTE PTR [rbx+0x79],dh
  42f8e6:	outs   dx,BYTE PTR ds:[rsi]
  42f8e7:	movsxd ebp,DWORD PTR [rax+0x72]
  42f8ea:	outs   dx,DWORD PTR ds:[rsi]
  42f8eb:	outs   dx,BYTE PTR ds:[rsi]
  42f8ec:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
  42f8f3:	and    BYTE PTR [rdi+0x69],dh
  42f8f6:	je     0x42f960
  42f8f8:	and    BYTE PTR [rcx+0x64],al
  42f8fb:	(bad)  
  42f8fc:	jo     0x42f972
  42f8fe:	imul   esi,DWORD PTR [rsi+0x65],0x72655320
  42f905:	jbe    0x42f96c
  42f907:	jb     0x42f909
  42f909:	push   rbp
  42f90a:	outs   dx,BYTE PTR ds:[rsi]
  42f90b:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42f90f:	outs   dx,BYTE PTR ds:[rsi]
  42f910:	and    BYTE PTR [rax+0x6f],ch
  42f913:	jae    0x42f989
  42f915:	and    BYTE PTR [rbp+0x61],ch
  42f918:	movsxd ebp,DWORD PTR [rax+0x69]
  42f91b:	outs   dx,BYTE PTR ds:[rsi]
  42f91c:	and    BYTE PTR gs:[rsi+0x61],ch
  42f920:	ins    DWORD PTR es:[rdi],dx
  42f921:	gs add BYTE PTR cs:[rax],al
  42f925:	add    BYTE PTR [rax],al
  42f927:	add    BYTE PTR [rbp+0x6e],dl
  42f92a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42f92e:	outs   dx,BYTE PTR ds:[rsi]
  42f92f:	and    BYTE PTR [rbp+0x65],ch
  42f932:	jae    0x42f9a7
  42f934:	(bad)  
  42f935:	addr32 gs sub eax,0x69206469
  42f93c:	outs   dx,BYTE PTR ds:[rsi]
  42f93d:	and    BYTE PTR [rbp+0x53],cl
  42f940:	and    BYTE PTR [r9+r12*2+0x74],r12b
  42f945:	(bad)  
  42f946:	jae    0x42f9bc
  42f948:	jb     0x42f9af
  42f94a:	(bad)  
  42f94b:	ins    DWORD PTR es:[rdi],dx
  42f94c:	add    BYTE PTR [rax],al
  42f94e:	add    BYTE PTR [rax],al
  42f950:	push   rbp
  42f951:	outs   dx,BYTE PTR ds:[rsi]
  42f952:	(bad)  
  42f953:	(bad)  
  42f954:	ins    BYTE PTR es:[rdi],dx
  42f955:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  42f95a:	jae    0x42f9c1
  42f95c:	je     0x42f97e
  42f95e:	movsxd ebp,DWORD PTR [rdi+0x6d]
  42f961:	ins    DWORD PTR es:[rdi],dx
  42f962:	jne    0x42f9d2
  42f964:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  42f96b:	jae    0x42f98d
  42f96d:	je     0x42f9d8
  42f96f:	ins    DWORD PTR es:[rdi],dx
  42f970:	gs jb  0x42f973
  42f973:	add    BYTE PTR [rax],al
  42f975:	add    BYTE PTR [rax],al
  42f977:	add    BYTE PTR [rbp+0x6e],dl
  42f97a:	jb     0x42f9e1
  42f97c:	movsxd ebp,DWORD PTR [rdi+0x67]
  42f97f:	outs   dx,BYTE PTR ds:[rsi]
  42f980:	imul   edi,DWORD PTR [rdx+0x65],0x44542064
  42f987:	push   rbx
  42f988:	and    BYTE PTR [rsi+0x65],dh
  42f98b:	jb     0x42fa00
  42f98d:	imul   ebp,DWORD PTR [rdi+0x6e],0x63657220
  42f994:	imul   esi,DWORD PTR gs:[rsi+0x65],0x72662064
  42f99c:	outs   dx,DWORD PTR ds:[rsi]
  42f99d:	ins    DWORD PTR es:[rdi],dx
  42f99e:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42f9a2:	and    BYTE PTR [rbx+0x65],dh
  42f9a5:	jb     0x42fa1d
  42f9a7:	gs jb  0x42f9aa
  42f9aa:	push   rdi
  42f9ab:	jb     0x42fa16
  42f9ad:	je     0x42fa14
  42f9af:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  42f9b3:	je     0x42fa1d
  42f9b5:	and    BYTE PTR gs:[rbx+0x65],dh
  42f9b9:	jb     0x42fa31
  42f9bb:	gs jb  0x42f9de
  42f9be:	data16 (bad) 
  42f9c0:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x0
  42f9c8:	rex.WR outs dx,DWORD PTR ds:[rsi]
  42f9ca:	movsxd esp,DWORD PTR [rcx+0x6c]
  42f9cd:	and    BYTE PTR [rbx+0x6f],ah
  42f9d0:	outs   dx,BYTE PTR ds:[rsi]
  42f9d1:	imul   sp,WORD PTR [rdi+0x75],0x6172
  42f9d7:	je     0x42fa42
  42f9d9:	outs   dx,DWORD PTR ds:[rsi]
  42f9da:	outs   dx,BYTE PTR ds:[rsi]
  42f9db:	and    BYTE PTR [rbp+0x72],ah
  42f9de:	jb     0x42fa4f
  42f9e0:	jb     0x42fa10
  42f9e2:	and    BYTE PTR [rax],ah
  42f9e4:	rex.XB push 0x206b6365
  42f9ea:	push   rsp
  42f9eb:	rex.R push rbx
  42f9ed:	rex.R push rbp
  42f9ef:	rex.WRB push r8
  42f9f1:	rex.XB
  42f9f2:	rex.WRXB
  42f9f3:	rex.WRX
  42f9f4:	rex.RX
  42f9f5:	rex.WB
  42f9f6:	and    BYTE PTR [r15+r13*2+0x67],r13b
  42f9fb:	and    BYTE PTR [rsi+0x6f],ah
  42f9fe:	jb     0x42fa20
  42fa00:	fs gs je 0x42fa65
  42fa04:	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x726e7500
  42fa0c:	movsxd ebp,DWORD PTR gs:[rdi+0x67]
  42fa10:	outs   dx,BYTE PTR ds:[rsi]
  42fa11:	imul   edi,DWORD PTR [rdx+0x65],0x736d2064
  42fa18:	outs   dx,BYTE PTR ds:[esi]
  42fa1a:	outs   dx,DWORD PTR ds:[rsi]
	...
  42fa3f:	add    BYTE PTR [rax+0x9],ah
  42fa42:	add    BYTE PTR [rax],al
  42fa44:	add    al,0x0
  42fa46:	add    BYTE PTR [rax],al
  42fa48:	lock xrelease rex.X add BYTE PTR [rax],al
  42fa4d:	add    BYTE PTR [rax],al
  42fa4f:	add    BYTE PTR [rcx+0x9],ah
  42fa52:	add    BYTE PTR [rax],al
  42fa54:	add    al,0x0
  42fa56:	add    BYTE PTR [rax],al
  42fa58:	rex hlt 
  42fa5a:	rex.X add BYTE PTR [rax],al
  42fa5d:	add    BYTE PTR [rax],al
  42fa5f:	add    BYTE PTR [rdx+0x9],ah
  42fa62:	add    BYTE PTR [rax],al
  42fa64:	add    al,0x0
  42fa66:	add    BYTE PTR [rax],al
  42fa68:	mov    al,0xf4
  42fa6a:	rex.X add BYTE PTR [rax],al
  42fa6d:	add    BYTE PTR [rax],al
  42fa6f:	add    BYTE PTR [rbx+0x9],ah
  42fa72:	add    BYTE PTR [rax],al
  42fa74:	add    al,0x0
  42fa76:	add    BYTE PTR [rax],al
  42fa78:	sbb    ch,dh
  42fa7a:	rex.X add BYTE PTR [rax],al
  42fa7d:	add    BYTE PTR [rax],al
  42fa7f:	add    BYTE PTR [rcx+rcx*1+0x0],ah
  42fa83:	add    BYTE PTR [rax+rax*1],al
  42fa86:	add    BYTE PTR [rax],al
  42fa88:	cwde   
  42fa89:	cmc    
  42fa8a:	rex.X add BYTE PTR [rax],al
  42fa8d:	add    BYTE PTR [rax],al
  42fa8f:	add    ah,al
  42fa91:	or     DWORD PTR [rax],eax
  42fa93:	add    BYTE PTR [rdx],al
  42fa95:	add    BYTE PTR [rax],al
  42fa97:	add    al,ah
  42fa99:	cmc    
  42fa9a:	rex.X add BYTE PTR [rax],al
  42fa9d:	add    BYTE PTR [rax],al
  42fa9f:	add    BYTE PTR [rbx],dh
  42faa1:	rex.WRX add BYTE PTR [rax],r8b
  42faa4:	(bad)  
  42faa5:	add    BYTE PTR [rax],al
  42faa7:	add    BYTE PTR [rax],cl
  42faa9:	test   BYTE PTR [rdx+0x0],0x0
  42faad:	add    BYTE PTR [rax],al
  42faaf:	add    BYTE PTR [rsi+rcx*2],dh
  42fab2:	add    BYTE PTR [rax],al
  42fab4:	or     DWORD PTR [rax],eax
  42fab6:	add    BYTE PTR [rax],al
  42fab8:	pop    rax
  42fab9:	test   BYTE PTR [rdx+0x0],0x0
  42fabd:	add    BYTE PTR [rax],al
  42fabf:	add    bl,ch
  42fac1:	rex.WRX add BYTE PTR [rax],r8b
  42fac4:	or     DWORD PTR [rax],eax
  42fac6:	add    BYTE PTR [rax],al
  42fac8:	cwde   
  42fac9:	test   BYTE PTR [rdx+0x0],0x0
  42facd:	add    BYTE PTR [rax],al
  42facf:	add    ch,dh
  42fad1:	rex.WRX add BYTE PTR [rax],r8b
  42fad4:	or     DWORD PTR [rax],eax
  42fad6:	add    BYTE PTR [rax],al
  42fad8:	shl    dh,1
  42fada:	rex.X add BYTE PTR [rax],al
  42fadd:	add    BYTE PTR [rax],al
  42fadf:	add    BYTE PTR [rax+0x4e],bl
  42fae2:	add    BYTE PTR [rax],al
  42fae4:	or     DWORD PTR [rax],eax
  42fae6:	add    BYTE PTR [rax],al
  42fae8:	or     bh,dh
  42faea:	rex.X add BYTE PTR [rax],al
  42faed:	add    BYTE PTR [rax],al
  42faef:	add    BYTE PTR [rcx],ch
  42faf1:	rex.WRX add BYTE PTR [rax],r8b
  42faf4:	or     DWORD PTR [rax],eax
  42faf6:	add    BYTE PTR [rax],al
  42faf8:	xor    bh,dh
  42fafa:	rex.X add BYTE PTR [rax],al
  42fafd:	add    BYTE PTR [rax],al
  42faff:	add    cl,bl
  42fb01:	rex.WRX add BYTE PTR [rax],r8b
  42fb04:	or     DWORD PTR [rax],eax
  42fb06:	add    BYTE PTR [rax],al
  42fb08:	js     0x42fb01
  42fb0a:	rex.X add BYTE PTR [rax],al
  42fb0d:	add    BYTE PTR [rax],al
  42fb0f:	add    BYTE PTR [rdx],ah
  42fb11:	rex.WRX add BYTE PTR [rax],r8b
  42fb14:	or     DWORD PTR [rax],eax
  42fb16:	add    BYTE PTR [rax],al
  42fb18:	movabs al,ds:0xf2000000000042f7
  42fb21:	rex.WRX add BYTE PTR [rax],r8b
  42fb24:	or     DWORD PTR [rax],eax
  42fb26:	add    BYTE PTR [rax],al
  42fb28:	enter  0x42f7,0x0
  42fb2c:	add    BYTE PTR [rax],al
  42fb2e:	add    BYTE PTR [rax],al
  42fb30:	rex.WRX add BYTE PTR ss:[rax],r8b
  42fb34:	or     DWORD PTR [rax],eax
  42fb36:	add    BYTE PTR [rax],al
  42fb38:	call   0x433e34
  42fb3d:	add    BYTE PTR [rax],al
  42fb3f:	add    BYTE PTR [rsi+rcx*2],ah
  42fb42:	add    BYTE PTR [rax],al
  42fb44:	or     DWORD PTR [rax],eax
  42fb46:	add    BYTE PTR [rax],al
  42fb48:	sbb    al,bh
  42fb4a:	rex.X add BYTE PTR [rax],al
  42fb4d:	add    BYTE PTR [rax],al
  42fb4f:	add    BYTE PTR [rbx],ah
  42fb51:	rex.WRX add BYTE PTR [rax],r8b
  42fb54:	(bad)  
  42fb55:	add    BYTE PTR [rax],al
  42fb57:	add    BYTE PTR [rax],bh
  42fb59:	clc    
  42fb5a:	rex.X add BYTE PTR [rax],al
  42fb5d:	add    BYTE PTR [rax],al
  42fb5f:	add    BYTE PTR [rcx],dh
  42fb61:	rex.WRX add BYTE PTR [rax],r8b
  42fb64:	or     DWORD PTR [rax],eax
  42fb66:	add    BYTE PTR [rax],al
  42fb68:	(bad)  
  42fb69:	clc    
  42fb6a:	rex.X add BYTE PTR [rax],al
  42fb6d:	add    BYTE PTR [rax],al
  42fb6f:	add    BYTE PTR [rsi+rcx*2],ch
  42fb72:	add    BYTE PTR [rax],al
  42fb74:	add    al,BYTE PTR [rax]
  42fb76:	add    BYTE PTR [rax],al
  42fb78:	cmp    al,0x42
  42fb7b:	add    BYTE PTR [rax],al
  42fb7d:	add    BYTE PTR [rax],al
  42fb7f:	add    BYTE PTR [rax],ch
  42fb81:	rex.WRX add BYTE PTR [rax],r8b
  42fb84:	or     DWORD PTR [rax],eax
  42fb86:	add    BYTE PTR [rax],al
  42fb88:	scas   al,BYTE PTR es:[rdi]
  42fb89:	clc    
  42fb8a:	rex.X add BYTE PTR [rax],al
  42fb8d:	add    BYTE PTR [rax],al
  42fb8f:	add    BYTE PTR [rcx],ah
  42fb91:	rex.WRX add BYTE PTR [rax],r8b
  42fb94:	or     DWORD PTR [rax],eax
  42fb96:	add    BYTE PTR [rax],al
  42fb98:	enter  0x42f8,0x0
  42fb9c:	add    BYTE PTR [rax],al
  42fb9e:	add    BYTE PTR [rax],al
  42fba0:	sub    eax,0x200004e
  42fba5:	add    BYTE PTR [rax],al
  42fba7:	add    BYTE PTR [rcx],cl
  42fba9:	stc    
  42fbaa:	rex.X add BYTE PTR [rax],al
  42fbad:	add    BYTE PTR [rax],al
  42fbaf:	add    ah,dh
  42fbb1:	rex.WRX add BYTE PTR [rax],r8b
  42fbb4:	or     DWORD PTR [rax],eax
  42fbb6:	add    BYTE PTR [rax],al
  42fbb8:	sub    cl,bh
  42fbba:	rex.X add BYTE PTR [rax],al
  42fbbd:	add    BYTE PTR [rax],al
  42fbbf:	add    BYTE PTR [rdx+0x4e],bl
  42fbc2:	add    BYTE PTR [rax],al
  42fbc4:	or     DWORD PTR [rax],eax
  42fbc6:	add    BYTE PTR [rax],al
  42fbc8:	push   rax
  42fbc9:	stc    
  42fbca:	rex.X add BYTE PTR [rax],al
  42fbcd:	add    BYTE PTR [rax],al
  42fbcf:	add    BYTE PTR [rdx+0x900004e],dh
  42fbd5:	add    BYTE PTR [rax],al
  42fbd7:	add    BYTE PTR [rax-0x7],bh
  42fbda:	rex.X add BYTE PTR [rax],al
  42fbdd:	add    BYTE PTR [rax],al
  42fbdf:	add    BYTE PTR [rsi],ah
  42fbe1:	rex.WRX add BYTE PTR [rax],r8b
  42fbe4:	or     DWORD PTR [rax],eax
  42fbe6:	add    BYTE PTR [rax],al
  42fbe8:	stos   BYTE PTR es:[rdi],al
  42fbe9:	stc    
  42fbea:	rex.X add BYTE PTR [rax],al
  42fbed:	add    BYTE PTR [rax],al
  42fbef:	add    dh,dh
  42fbf1:	rex.WRX add BYTE PTR [rax],r8b
  42fbf4:	add    al,BYTE PTR [rax]
  42fbf6:	add    BYTE PTR [rax],al
  42fbf8:	enter  0x42f9,0x0
	...
  42fc04:	or     eax,DWORD PTR [rax]
  42fc06:	add    BYTE PTR [rax],al
  42fc08:	or     edx,edi
  42fc0a:	rex.X add BYTE PTR [rax],al
	...
  42fc3d:	add    BYTE PTR [rax],al
  42fc3f:	add    BYTE PTR [rbp+0x73],dh
  42fc42:	imul   ebp,DWORD PTR [rsi+0x67],0x50535320
  42fc49:	rex.WB and BYTE PTR [r9+0x75],spl
  42fc4d:	je     0x42fcb7
  42fc4f:	outs   dx,BYTE PTR gs:[rsi]
  42fc51:	je     0x42fcbc
  42fc53:	movsxd esp,DWORD PTR [rcx+0x74]
  42fc56:	imul   ebp,DWORD PTR [rdi+0x6e],0x726f6620
  42fc5d:	and    BYTE PTR [rdi],ah
  42fc5f:	and    eax,0x61202773
  42fc64:	movsxd esp,DWORD PTR [rbx+0x6f]
  42fc67:	jne    0x42fcd7
  42fc69:	je     0x42fc75
  42fc6b:	add    BYTE PTR [rdi+rbp*2+0x67],ch
  42fc6f:	imul   ebp,DWORD PTR [rsi+0x2e],0x63
  42fc76:	add    BYTE PTR [rax],al
  42fc78:	jno    0x42fcef
  42fc7a:	imul   esp,DWORD PTR [rbp+0x74],0x7320796c
  42fc81:	outs   dx,BYTE PTR gs:[rsi]
  42fc83:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x53445420
  42fc8b:	and    BYTE PTR [rdi],dh
  42fc8d:	sub    esp,DWORD PTR [rax]
  42fc8f:	ins    BYTE PTR es:[rdi],dx
  42fc90:	outs   dx,DWORD PTR ds:[rsi]
  42fc91:	imul   ebp,DWORD PTR [esi+0x20],0x6b636170
  42fc99:	gs je  0x42fca6
  42fc9c:	add    BYTE PTR [rax],al
  42fc9e:	add    BYTE PTR [rax],al
  42fca0:	xor    BYTE PTR [rax],ah
  42fca2:	es and BYTE PTR es:[rax],dh
  42fca6:	js     0x42fcdf
  42fca8:	xor    BYTE PTR [rax],dh
  42fcaa:	and    BYTE PTR [rdi*1+0x676f6c20],bh
  42fcb1:	imul   ebp,DWORD PTR [rsi+0x2d],0x7364743e
  42fcb8:	pop    rdi
  42fcb9:	jbe    0x42fd20
  42fcbb:	jb     0x42fd30
  42fcbd:	imul   ebp,DWORD PTR [rdi+0x6e],0x20262620
  42fcc4:	ins    BYTE PTR es:[rdi],dx
  42fcc5:	outs   dx,DWORD PTR ds:[rsi]
  42fcc6:	imul   ebp,DWORD PTR [esi+0x2d],0x7364743e
  42fcce:	pop    rdi
  42fccf:	jbe    0x42fd36
  42fcd1:	jb     0x42fd46
  42fcd3:	imul   ebp,DWORD PTR [rdi+0x6e],0x203d3c20
  42fcda:	xor    BYTE PTR [rax+0x37],bh
  42fcdd:	xor    BYTE PTR [rax+rax*1],dh
  42fce0:	jo     0x42fc9a
  42fce2:	std    
  42fce3:	jmp    rax
  42fce5:	mov    esp,0xbcf0fffd
  42fcea:	std    
  42fceb:	inc    DWORD PTR [rax]
  42fced:	mov    ebp,0xbcd4fffd
  42fcf2:	std    
  42fcf3:	dec    DWORD PTR [rbp+0x53]
  42fcf6:	push   rbx
  42fcf7:	push   rcx
  42fcf8:	rex.WR push rbx
  42fcfa:	gs jb  0x42fd73
  42fcfd:	gs jb  0x42fd00
  42fd00:	(bad)  
  42fd01:	movsxd esp,DWORD PTR [rbx+0x65]
  42fd04:	jo     0x42fd7a
  42fd06:	gs add BYTE PTR fs:[rdx+0x65],dh
  42fd0b:	push   0x65
  42fd0d:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  42fd11:	add    BYTE PTR [rcx+0x50],cl
  42fd14:	and    BYTE PTR [rcx+0x64],ah
  42fd17:	fs jb  0x42fd7f
  42fd1a:	jae    0x42fd8f
  42fd1c:	and    BYTE PTR [rax+0x6f],dh
  42fd1f:	imul   ebp,DWORD PTR [rsi+0x74],0x69207265
  42fd26:	jae    0x42fd48
  42fd28:	gs ins DWORD PTR es:[rdi],dx
  42fd2a:	jo     0x42fda0
  42fd2c:	jns    0x42fd38
  42fd2e:	add    BYTE PTR [rbx+0x65],dl
  42fd31:	jb     0x42fda9
  42fd33:	gs jb  0x42fd56
  42fd36:	and    eax,0x6f6e2073
  42fd3b:	je     0x42fd5d
  42fd3d:	outs   dx,WORD PTR ds:[rsi]
  42fd3f:	jne    0x42fdaf
  42fd41:	and    DWORD PTR fs:[rdx],ecx
  42fd44:	add    BYTE PTR [rsi+0x6f],cl
  42fd47:	and    BYTE PTR [rbx+0x65],dh
  42fd4a:	jb     0x42fdc2
  42fd4c:	gs jb  0x42fd6f
  42fd4f:	jae    0x42fdc1
  42fd51:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  42fd55:	imul   esp,DWORD PTR [rbp+0x64],0x69000a21
  42fd5c:	outs   dx,BYTE PTR ds:[rsi]
  42fd5d:	jbe    0x42fdc0
  42fd5f:	ins    BYTE PTR es:[rdi],dx
  42fd60:	imul   esp,DWORD PTR [rax+riz*1+0x70],0x2074726f
  42fd68:	outs   dx,BYTE PTR ds:[rsi]
  42fd69:	jne    0x42fdd8
  42fd6b:	(bad)  
  42fd6c:	gs jb  0x42fd79
  42fd6f:	add    BYTE PTR [rbp+riz*2+0x74],ah
  42fd73:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  42fd78:	and    BYTE PTR [rsi+0x6c],ah
  42fd7b:	(bad)  
  42fd7c:	and    BYTE PTR [eip+0x41000a64],ah        # 0x414307e7
  42fd83:	push   rbx
  42fd84:	pop    r15
  42fd86:	rex.R
  42fd87:	push   r12
  42fd89:	rex.B
  42fd8a:	rex.X
  42fd8b:	push   r11
  42fd8d:	add    BYTE PTR [r8],r8b
  42fd90:	rex.WRX push rsp
  42fd92:	and    BYTE PTR [rdi+rbp*2+0x67],ch
  42fd96:	imul   ebp,DWORD PTR [rsi+0x20],0x20746f6e
  42fd9d:	jae    0x42fe14
  42fd9f:	jo     0x42fe11
  42fda1:	outs   dx,DWORD PTR ds:[rsi]
  42fda2:	jb     0x42fe18
  42fda4:	and    BYTE PTR [rbp+0x73],dh
  42fda7:	imul   ebp,DWORD PTR [rsi+0x67],0x53445420
  42fdae:	and    BYTE PTR [rsi+rbp*1],dh
  42fdb1:	js     0x42fdd3
  42fdb3:	outs   dx,DWORD PTR ds:[rsi]
  42fdb4:	jb     0x42fdd6
  42fdb6:	xor    eax,0xa302e
  42fdbb:	add    BYTE PTR [rax],al
  42fdbd:	add    BYTE PTR [rax],al
  42fdbf:	add    BYTE PTR [rbx+0x65],cl
  42fdc2:	jb     0x42fe26
  42fdc4:	gs jb  0x42fe36
  42fdc7:	jae    0x42fde9
  42fdc9:	ins    BYTE PTR es:[rdi],dx
  42fdca:	outs   dx,DWORD PTR ds:[rsi]
  42fdcb:	imul   ebp,DWORD PTR [esi+0x20],0x20746f6e
  42fdd3:	jae    0x42fe4a
  42fdd5:	jo     0x42fe47
  42fdd7:	outs   dx,DWORD PTR ds:[rsi]
  42fdd8:	jb     0x42fe4e
  42fdda:	and    BYTE PTR [rbp+0x73],dh
  42fddd:	imul   ebp,DWORD PTR [rsi+0x67],0x53445420
  42fde4:	and    BYTE PTR [rsi+rbp*1],dh
  42fde7:	js     0x42fe09
  42fde9:	outs   dx,DWORD PTR ds:[rsi]
  42fdea:	jb     0x42fe0c
  42fdec:	xor    eax,0xa302e
  42fdf1:	add    BYTE PTR [rax],al
  42fdf3:	add    BYTE PTR [rax],al
  42fdf5:	add    BYTE PTR [rax],al
  42fdf7:	add    BYTE PTR [rbp+0x6e],al
  42fdfa:	movsxd esi,DWORD PTR [rdx+0x79]
  42fdfd:	jo     0x42fe73
  42fdff:	imul   ebp,DWORD PTR [rdi+0x6e],0x746f6e20
  42fe06:	and    BYTE PTR [rbx+0x75],dh
  42fe09:	jo     0x42fe7b
  42fe0b:	outs   dx,DWORD PTR ds:[rsi]
  42fe0c:	jb     0x42fe82
  42fe0e:	and    BYTE PTR [rbp+0x73],dh
  42fe11:	imul   ebp,DWORD PTR [rsi+0x67],0x53445420
  42fe18:	and    BYTE PTR [rsi+rbp*1],dh
  42fe1b:	js     0x42fe27
  42fe1d:	add    BYTE PTR [rdx+rax*1],al
  42fe20:	add    BYTE PTR [rax],al
  42fe22:	add    BYTE PTR [rsi+rax*1],al
  42fe25:	add    BYTE PTR [rax],al
  42fe27:	add    BYTE PTR [rip+0x0],al        # 0x42fe2d
  42fe2d:	push   rbp
  42fe2e:	outs   dx,BYTE PTR ds:[rsi]
  42fe2f:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42fe33:	outs   dx,BYTE PTR ds:[rsi]
  42fe34:	and    BYTE PTR [rax+0x72],dh
  42fe37:	outs   dx,DWORD PTR ds:[rsi]
  42fe38:	je     0x42fea9
  42fe3a:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42fe3d:	and    BYTE PTR [rsi+0x65],dh
  42fe40:	jb     0x42feb5
  42fe42:	imul   ebp,DWORD PTR [rdi+0x6e],0x25000a21
  42fe49:	add    BYTE PTR fs:[rax],al
  42fe4c:	ins    BYTE PTR es:[rdi],dx
  42fe4d:	outs   dx,DWORD PTR ds:[rsi]
  42fe4e:	imul   ebp,DWORD PTR [esi+0x20],0x6b636170
  42fe56:	gs je  0x42fe79
  42fe59:	and    eax,0x73000a73
  42fe5e:	gs je  0x42fe81
  42fe61:	je     0x42fec8
  42fe63:	js     0x42fed9
  42fe65:	jae    0x42fed0
  42fe67:	jp     0x42fece
  42fe69:	and    BYTE PTR [rip+0x2064],ah        # 0x431ed3
  42fe6f:	or     eax,0x6010311
  42fe74:	or     cl,BYTE PTR [rcx]
  42fe76:	add    DWORD PTR [rsi],esi
  42fe78:	add    al,0x0
  42fe7a:	add    BYTE PTR [rax],al
  42fe7c:	add    BYTE PTR [rax],al
  42fe7e:	add    BYTE PTR [rsi],al
  42fe80:	xor    edx,0xfffffff8
  42fe83:	or     BYTE PTR [rax],al
  42fe85:	add    DWORD PTR [rbp+0x0],edx
  42fe88:	add    BYTE PTR [rcx],cl
  42fe8a:	add    BYTE PTR [rax],al
  42fe8c:	add    BYTE PTR [rax],al
  42fe8e:	add    BYTE PTR [rax],al
  42fe90:	add    eax,DWORD PTR [rdi]
  42fe92:	add    al,BYTE PTR [rdi]
  42fe94:	add    DWORD PTR [rdi],eax
  42fe96:	add    BYTE PTR [rdi],al
  42fe98:	add    BYTE PTR [rip+0x402],al        # 0x4302a0
  42fe9e:	add    BYTE PTR [rax],al
  42fea0:	jb     0x42ff07
  42fea2:	(bad)  
  42fea3:	fs movsxd eax,DWORD PTR cs:[rax]
  42fea7:	movsxd esi,DWORD PTR [rbp+0x72]
  42feaa:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42fead:	sub    eax,0x6168633e
  42feb2:	jb     0x42ff13
  42feb4:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42feb7:	jbe    0x42feb9
  42feb9:	add    BYTE PTR [rax],al
  42febb:	add    BYTE PTR [rax],al
  42febd:	add    BYTE PTR [rax],al
  42febf:	add    BYTE PTR [rbp+0x72],ah
  42fec2:	jb     0x42ff33
  42fec4:	jb     0x42ff00
  42fec6:	and    BYTE PTR [rsp+riz*2+0x73],dh
  42feca:	pop    rdi
  42fecb:	addr32 gs je 0x42ff2e
  42fecf:	movsxd ebp,DWORD PTR [rax+0x61]
  42fed2:	jb     0x42ff33
  42fed4:	fs (bad) 
  42fed6:	je     0x42ff39
  42fed8:	cmp    ah,BYTE PTR [rax]
  42feda:	imul   esi,DWORD PTR fs:[rbx+0x63],0x65647261
  42fee2:	and    BYTE PTR fs:[rip+0x6e6f2075],ah        # 0x6eb21f5e
  42fee9:	and    BYTE PTR [rdi+0x69],dh
  42feec:	jb     0x42ff53
  42feee:	and    BYTE PTR [rdi+0x68],dh
  42fef1:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x64616572
  42fef9:	imul   ebp,DWORD PTR [rsi+0x67],0x20642520
  42ff00:	imul   ebp,DWORD PTR [rsi+0x74],0x6c63206f
  42ff07:	imul   esp,DWORD PTR [rbp+0x6e],0xa202e74
  42ff0e:	add    BYTE PTR [rax],al
  42ff10:	ja     0x42ff84
  42ff12:	imul   esi,DWORD PTR [rbp+riz*2+0x2e],0x6c630063
  42ff1a:	imul   esp,DWORD PTR [rbp+0x6e],0x6d3e2d74
  42ff21:	imul   ebp,DWORD PTR [rsi+0x5f],0x65747962
  42ff28:	jae    0x42ff89
  42ff2a:	jo     0x42ff91
  42ff2c:	jb     0x42ff8d
  42ff2e:	movsxd ebp,DWORD PTR [rax+0x61]
  42ff31:	jb     0x42ff53
  42ff33:	cmp    al,0x20
  42ff35:	xor    eax,DWORD PTR [rax]
  42ff37:	ins    BYTE PTR es:[rdi],dx
  42ff38:	outs   dx,BYTE PTR gs:[rsi]
  42ff3a:	and    BYTE PTR [rsi],bh
  42ff3c:	cmp    eax,0x73003020
  42ff41:	je     0x42ffb2
  42ff43:	jb     0x42ffaa
  42ff45:	pop    rdi
  42ff46:	ins    DWORD PTR es:[rdi],dx
  42ff47:	outs   dx,DWORD PTR ds:[rsi]
  42ff48:	outs   dx,BYTE PTR ds:[rsi]
  42ff49:	je     0x42ffb3
  42ff4b:	outs   dx,BYTE PTR ds:[rsi]
  42ff4c:	(bad)  
  42ff4d:	ins    DWORD PTR es:[rdi],dx
  42ff4e:	cmp    ah,BYTE PTR gs:[rax]
  42ff51:	and    eax,0x2520646c
  42ff56:	jae    0x42ff62
  42ff58:	add    BYTE PTR [rbx+0x6f],ah
  42ff5b:	outs   dx,BYTE PTR ds:[rsi]
  42ff5c:	jbe    0x42ffc3
  42ff5e:	jb     0x42ffd4
  42ff60:	movsxd eax,DWORD PTR cs:[rax]
  42ff63:	push   0x61
  42ff65:	outs   dx,BYTE PTR ds:[rsi]
  42ff66:	add    BYTE PTR [rsi+0x65],ah
  42ff69:	(bad)  
  42ff6a:	add    BYTE PTR [rbp+0x61],ch
  42ff6d:	jb     0x42ff6f
  42ff6f:	(bad)  
  42ff70:	jo     0x42ffe4
  42ff72:	add    BYTE PTR [rbp+0x61],ch
  42ff75:	jns    0x42ff77
  42ff77:	push   0x75
  42ff79:	outs   dx,BYTE PTR ds:[rsi]
  42ff7a:	add    BYTE PTR [rdx+0x75],ch
  42ff7d:	ins    BYTE PTR es:[rdi],dx
  42ff7e:	add    BYTE PTR [rcx+0x75],ah
  42ff81:	add    BYTE PTR [ebx+0x65],dh
  42ff85:	jo     0x42ff87
  42ff87:	outs   dx,DWORD PTR ds:[rsi]
  42ff88:	movsxd esi,DWORD PTR [rax+rax*1+0x6e]
  42ff8c:	outs   dx,DWORD PTR ds:[rsi]
  42ff8d:	jbe    0x42ff8f
  42ff8f:	fs movsxd eax,DWORD PTR gs:[rax]
  42ff93:	push   0x61
  42ff95:	outs   dx,BYTE PTR ds:[rsi]
  42ff96:	jne    0x42fff9
  42ff98:	jb     0x430013
  42ff9a:	add    BYTE PTR [rsi+0x65],ah
  42ff9d:	(bad)
  42ffa2:	jns    0x42ffa4
  42ffa4:	ins    DWORD PTR es:[rdi],dx
  42ffa5:	(bad)  
  42ffa6:	jb     0x43000b
  42ffa8:	push   0x72706100
  42ffad:	imul   ebp,DWORD PTR [rax+rax*1+0x6a],0x656e75
  42ffb5:	push   0x75
  42ffb7:	ins    BYTE PTR es:[rdi],dx
  42ffb8:	jns    0x42ffba
  42ffba:	(bad)  
  42ffbb:	jne    0x430024
  42ffbd:	jne    0x430032
  42ffbf:	je     0x42ffc1
  42ffc1:	jae    0x430028
  42ffc3:	jo     0x430039
  42ffc5:	gs ins DWORD PTR es:[rdi],dx
  42ffc7:	(bad)  
  42ffc8:	gs jb  0x42ffcb
  42ffcb:	outs   dx,DWORD PTR ds:[rsi]
  42ffcc:	movsxd esi,DWORD PTR [rdi+rbp*2+0x62]
  42ffd0:	gs jb  0x42ffd3
  42ffd3:	outs   dx,BYTE PTR ds:[rsi]
  42ffd4:	outs   dx,DWORD PTR ds:[rsi]
  42ffd5:	jbe    0x43003c
  42ffd7:	ins    DWORD PTR es:[rdi],dx
  42ffd8:	(bad)  
  42ffd9:	gs jb  0x42ffdc
  42ffdc:	fs movsxd esp,DWORD PTR gs:[rbp+0x6d]
  42ffe1:	(bad)  
  42ffe2:	gs jb  0x42ffe5
  42ffe5:	and    eax,0x49250064
  42ffea:	ss xor al,0x75
  42ffed:	add    BYTE PTR [rcx+0x6d],ah
  42fff0:	add    BYTE PTR [rax+0x6d],dh
  42fff3:	add    BYTE PTR [rax],al
  42fff5:	add    BYTE PTR [rax],al
  42fff7:	add    BYTE PTR [rbp+0x72],ah
  42fffa:	jb     0x43006b
  42fffc:	jb     0x43005d
  42fffe:	push   0x6c646e61
  430003:	gs jb  0x430040
  430006:	and    BYTE PTR [rax],ah
  430008:	(bad)  
  430009:	je     0x43007f
  43000b:	gs ins DWORD PTR es:[rdi],dx
  43000d:	jo     0x430083
  43000f:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  430013:	movsxd ebp,DWORD PTR [rdi+0x6e]
  430016:	jbe    0x43007d
  430018:	jb     0x43008e
  43001a:	and    BYTE PTR [rcx+riz*2+0x74],ah
  43001e:	(bad)  
  43001f:	and    BYTE PTR [rbx+0x74],dh
  430022:	outs   dx,DWORD PTR ds:[rsi]
  430023:	jo     0x430095
  430025:	gs and BYTE PTR fs:[rdx+0x79],ah
  43002a:	and    BYTE PTR [rbx+0x79],dh
  43002d:	outs   dx,BYTE PTR ds:[rsi]
  43002e:	je     0x430091
  430030:	js     0x430052
  430032:	gs jb  0x4300a7
  430035:	outs   dx,DWORD PTR ds:[rsi]
  430036:	jb     0x430058
  430038:	imul   ebp,DWORD PTR [rsi+0x20],0x72756f73
  43003f:	movsxd esp,DWORD PTR [rbp+0x20]
  430042:	imul   sp,WORD PTR [rbp+0x6c],0x2064
  430048:	or     al,BYTE PTR [rax]
  43004a:	add    BYTE PTR [rax],al
  43004c:	rex.R out 0xfd,al
  43004f:	call   QWORD PTR [rsi+riz*8-0x3]
  430053:	jmp    QWORD PTR [rsi+riz*8-0x3]
  430057:	push   QWORD PTR [rsi+riz*8-0x3]
  43005b:	inc    DWORD PTR [rsi+riz*8-0x19ab0003]
  430062:	std    
  430063:	inc    esp
  430065:	out    0xfd,al
  430067:	inc    esp
  430069:	out    0xfd,al
  43006b:	inc    esp
  43006d:	out    0xfd,al
  43006f:	call   QWORD PTR [rsi+riz*8-0x3]
  430073:	inc    esp
  430075:	out    0xfd,al
  430077:	call   QWORD PTR [rsi+riz*8-0x195b0003]
  43007e:	std    
  43007f:	push   QWORD PTR [rsi+riz*8-0x196b0003]
  430086:	std    
  430087:	jmp    QWORD PTR [rsi+riz*8-0x193b0003]
  43008e:	std    
  43008f:	call   QWORD PTR [rsi+riz*8-0x3]
  430093:	call   QWORD PTR [rsi+riz*8-0x3]
  430097:	call   QWORD PTR [rsi+riz*8-0x3]
  43009b:	call   QWORD PTR [rsi+riz*8-0x3]
  43009f:	inc    esp
  4300a1:	out    0xfd,al
  4300a3:	inc    esp
  4300a5:	out    0xfd,al
  4300a7:	inc    esp
  4300a9:	out    0xfd,al
  4300ab:	inc    esp
  4300ad:	out    0xfd,al
  4300af:	inc    esp
  4300b1:	out    0xfd,al
  4300b3:	inc    esp
  4300b5:	out    0xfd,al
  4300b7:	inc    esp
  4300b9:	out    0xfd,al
  4300bb:	inc    esp
  4300bd:	out    0xfd,al
  4300bf:	inc    esp
  4300c1:	out    0xfd,al
  4300c3:	inc    esp
  4300c5:	out    0xfd,al
  4300c7:	inc    esp
  4300c9:	out    0xfd,al
  4300cb:	inc    esp
  4300cd:	out    0xfd,al
  4300cf:	inc    esp
  4300d1:	out    0xfd,al
  4300d3:	inc    esp
  4300d5:	out    0xfd,al
  4300d7:	inc    esp
  4300d9:	out    0xfd,al
  4300db:	inc    esp
  4300dd:	out    0xfd,al
  4300df:	inc    esp
  4300e1:	out    0xfd,al
  4300e3:	inc    esp
  4300e5:	out    0xfd,al
  4300e7:	inc    esp
  4300e9:	out    0xfd,al
  4300eb:	inc    esp
  4300ed:	out    0xfd,al
  4300ef:	inc    esp
  4300f1:	out    0xfd,al
  4300f3:	inc    esp
  4300f5:	out    0xfd,al
  4300f7:	inc    esp
  4300f9:	out    0xfd,al
  4300fb:	inc    esp
  4300fd:	out    0xfd,al
  4300ff:	inc    esp
  430101:	out    0xfd,al
  430103:	inc    esp
  430105:	out    0xfd,al
  430107:	inc    esp
  430109:	out    0xfd,al
  43010b:	inc    esp
  43010d:	out    0xfd,al
  43010f:	inc    esp
  430111:	out    0xfd,al
  430113:	inc    esp
  430115:	out    0xfd,al
  430117:	inc    esp
  430119:	out    0xfd,al
  43011b:	inc    esp
  43011d:	out    0xfd,al
  43011f:	inc    esp
  430121:	out    0xfd,al
  430123:	inc    esp
  430125:	out    0xfd,al
  430127:	inc    esp
  430129:	out    0xfd,al
  43012b:	inc    esp
  43012d:	out    0xfd,al
  43012f:	inc    esp
  430131:	out    0xfd,al
  430133:	inc    esp
  430135:	out    0xfd,al
  430137:	inc    esp
  430139:	out    0xfd,al
  43013b:	inc    esp
  43013d:	out    0xfd,al
  43013f:	inc    esp
  430141:	out    0xfd,al
  430143:	inc    esp
  430145:	out    0xfd,al
  430147:	inc    esp
  430149:	out    0xfd,al
  43014b:	inc    esp
  43014d:	out    0xfd,al
  43014f:	inc    esp
  430151:	out    0xfd,al
  430153:	inc    esp
  430155:	out    0xfd,al
  430157:	inc    esp
  430159:	out    0xfd,al
  43015b:	inc    esp
  43015d:	out    0xfd,al
  43015f:	inc    esp
  430161:	out    0xfd,al
  430163:	inc    esp
  430165:	out    0xfd,al
  430167:	inc    esp
  430169:	out    0xfd,al
  43016b:	inc    esp
  43016d:	out    0xfd,al
  43016f:	inc    esp
  430171:	out    0xfd,al
  430173:	inc    esp
  430175:	out    0xfd,al
  430177:	push   QWORD PTR [rsi+riz*8-0x193b0003]
  43017e:	std    
  43017f:	inc    esp
  430181:	out    0xfd,al
  430183:	inc    esp
  430185:	out    0xfd,al
  430187:	inc    esp
  430189:	out    0xfd,al
  43018b:	call   QWORD PTR [rsi+riz*8-0x3]
  43018f:	jmp    QWORD PTR [rdx+0x75]
  430192:	data16 add BYTE PTR [rsi+0x6f],ah
  430196:	jb     0x430205
  430198:	(bad)  
  430199:	je     0x43019b
  43019b:	fs jb  0x43019e
  43019e:	add    BYTE PTR [rax],al
  4301a0:	xor    BYTE PTR [rax],ah
  4301a2:	cmp    al,0x3d
  4301a4:	and    BYTE PTR [rdx+rsi*2+0x2d],ah
  4301a8:	ds fs movsxd ebp,DWORD PTR gs:[rcx+0x6d]
  4301ae:	imul   esp,DWORD PTR [rbx+0x72],0x6365736f
  4301b5:	outs   dx,DWORD PTR ds:[rsi]
  4301b6:	outs   dx,BYTE PTR ds:[rsi]
  4301b7:	and    BYTE PTR fs:[rsi],ah
  4301ba:	and    BYTE PTR es:[rdx+rsi*2+0x2d],ah
  4301bf:	ds fs movsxd ebp,DWORD PTR gs:[rcx+0x6d]
  4301c5:	imul   esp,DWORD PTR [rbx+0x72],0x6365736f
  4301cc:	outs   dx,DWORD PTR ds:[rsi]
  4301cd:	outs   dx,BYTE PTR ds:[rsi]
  4301ce:	and    BYTE PTR fs:[rax+riz*1],bh
  4301d2:	xor    DWORD PTR [rax],esi
  4301d4:	xor    BYTE PTR [rax],dh
  4301d6:	xor    BYTE PTR [rax],dh
  4301d8:	xor    BYTE PTR [rax],dh
  4301da:	add    BYTE PTR [rip+0x3025007a],ah        # 0x3068025a
  4301e0:	(bad)  
  4301e1:	add    BYTE PTR fs:[rcx+0x65],bh
  4301e5:	jae    0x4301e7
  4301e7:	outs   dx,BYTE PTR ds:[rsi]
  4301e8:	outs   dx,DWORD PTR ds:[rsi]
  4301e9:	add    BYTE PTR [rsp+riz*2+0x73],dh
  4301ed:	pop    rdi
  4301ee:	ja     0x430259
  4301f0:	ins    BYTE PTR es:[rdi],dx
  4301f1:	ins    BYTE PTR es:[rdi],dx
  4301f2:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4301f5:	jbe    0x43025c
  4301f7:	jb     0x43026d
  4301f9:	sub    BYTE PTR [rip+0x25202c64],ah        # 0x25632e63
  4301ff:	sub    DWORD PTR fs:[rdx],ecx
  430202:	add    BYTE PTR [rax],al
  430204:	add    BYTE PTR [rax],al
  430206:	add    BYTE PTR [rax],al
  430208:	je     0x43026e
  43020a:	jae    0x43026b
  43020c:	ja     0x430277
  43020e:	ins    BYTE PTR es:[rdi],dx
  43020f:	ins    BYTE PTR es:[rdi],dx
  430210:	movsxd ebp,DWORD PTR [rdi+0x6e]
  430213:	jbe    0x43027a
  430215:	jb     0x43028b
  430217:	sub    BYTE PTR [rip+0x25202c64],ah        # 0x25632e81
  43021d:	sub    DWORD PTR fs:[rax],esp
  430220:	jb     0x430287
  430222:	je     0x430299
  430224:	jb     0x430294
  430226:	jae    0x430248
  430228:	and    eax,0xa73
  43022d:	add    BYTE PTR [rax],al
  43022f:	add    BYTE PTR [rbx+0x72],dh
  430232:	movsxd ebp,DWORD PTR [rbp+riz*2+0x6e]
  430236:	and    BYTE PTR [rsi],bh
  430238:	cmp    eax,0x26203020
  43023d:	and    BYTE PTR es:[rbx+0x72],dh
  430241:	movsxd ebp,DWORD PTR [rbp+riz*2+0x6e]
  430245:	and    BYTE PTR [rdi*1+0x34313220],bh
  43024c:	(bad)  
  43024d:	xor    al,0x38
  43024f:	xor    esi,DWORD PTR [rsi]
  430251:	xor    al,0x37
  430253:	jne    0x430255
  430255:	and    BYTE PTR [rax+rax*1],ch
  430258:	jae    0x4302ce
  43025a:	jb     0x4302c5
  43025c:	outs   dx,BYTE PTR ds:[rsi]
  43025d:	addr32 pop rdi
  43025f:	je     0x4302d0
  430261:	pop    rdi
  430262:	fs (bad) 
  430264:	je     0x4302cb
  430266:	je     0x4302d1
  430268:	ins    DWORD PTR es:[rdi],dx
  430269:	cmp    ah,BYTE PTR gs:[rax]
  43026c:	movsxd esi,DWORD PTR [rbp+0x72]
  43026f:	jb     0x4302d6
  430271:	outs   dx,BYTE PTR ds:[rsi]
  430272:	je     0x4302d3
  430274:	jae    0x4302ea
  430276:	(bad)  
  430277:	je     0x4302de
  430279:	and    BYTE PTR [rip+0xa642520],bh        # 0xaa7279f
  43027f:	add    BYTE PTR [rbx+0x74],dh
  430282:	jb     0x4302ed
  430284:	outs   dx,BYTE PTR ds:[rsi]
  430285:	addr32 pop rdi
  430287:	je     0x4302f8
  430289:	pop    rdi
  43028a:	fs (bad) 
  43028c:	je     0x4302f3
  43028e:	je     0x4302f9
  430290:	ins    DWORD PTR es:[rdi],dx
  430291:	cmp    ah,BYTE PTR gs:[rax]
  430294:	imul   esi,DWORD PTR [rbx+0x5f],0x68706c61
  43029b:	(bad)  
  43029c:	(bad)  
  43029d:	gs je  0x430309
  4302a0:	movsxd ecx,DWORD PTR [rdx]
  4302a2:	add    BYTE PTR [rax],al
  4302a4:	add    BYTE PTR [rax],al
  4302a6:	add    BYTE PTR [rax],al
  4302a8:	jae    0x43031e
  4302aa:	jb     0x430315
  4302ac:	outs   dx,BYTE PTR ds:[rsi]
  4302ad:	addr32 pop rdi
  4302af:	je     0x430320
  4302b1:	pop    rdi
  4302b2:	fs (bad) 
  4302b4:	je     0x43031b
  4302b6:	je     0x430321
  4302b8:	ins    DWORD PTR es:[rdi],dx
  4302b9:	cmp    ah,BYTE PTR gs:[rax]
  4302bc:	imul   esi,DWORD PTR [rbx+0x5f],0x656d756e
  4302c3:	jb     0x43032e
  4302c5:	movsxd ecx,DWORD PTR [rdx]
  4302c7:	add    BYTE PTR [rbx+0x74],dh
  4302ca:	jb     0x430335
  4302cc:	outs   dx,BYTE PTR ds:[rsi]
  4302cd:	addr32 pop rdi
  4302cf:	je     0x430340
  4302d1:	pop    rdi
  4302d2:	fs (bad) 
  4302d4:	je     0x43033b
  4302d6:	je     0x430341
  4302d8:	ins    DWORD PTR es:[rdi],dx
  4302d9:	cmp    ah,BYTE PTR gs:[rax]
  4302dc:	imul   esi,DWORD PTR [rbx+0x5f],0x656d756e
  4302e3:	jb     0x43034e
  4302e5:	movsxd ebx,DWORD PTR [rdi+0x64]
  4302e8:	(bad)  
  4302e9:	je     0x430350
  4302eb:	outs   dx,WORD PTR ds:[rsi]
  4302ed:	jb     0x43035c
  4302ef:	(bad)  
  4302f0:	je     0x4302fc
  4302f2:	add    BYTE PTR [rax],al
  4302f4:	add    BYTE PTR [rax],al
  4302f6:	add    BYTE PTR [rax],al
  4302f8:	jae    0x43036e
  4302fa:	jb     0x430365
  4302fc:	outs   dx,BYTE PTR ds:[rsi]
  4302fd:	addr32 pop rdi
  4302ff:	je     0x430370
  430301:	pop    rdi
  430302:	fs (bad) 
  430304:	je     0x43036b
  430306:	je     0x430371
  430308:	ins    DWORD PTR es:[rdi],dx
  430309:	cmp    ah,BYTE PTR gs:[rax]
  43030c:	imul   esi,DWORD PTR [rbx+0x5f],0x6d5f6464
  430313:	outs   dx,DWORD PTR ds:[rsi]
  430314:	outs   dx,BYTE PTR ds:[rsi]
  430315:	pop    rdi
  430316:	jns    0x430391
  430318:	jns    0x430393
  43031a:	or     al,BYTE PTR [rax]
  43031c:	jae    0x430392
  43031e:	outs   dx,DWORD PTR ds:[rsi]
  43031f:	jb     0x430386
  430321:	pop    rdi
  430322:	fs fs pop rdi
  430325:	ins    DWORD PTR es:[rdi],dx
  430326:	outs   dx,DWORD PTR ds:[rsi]
  430327:	outs   dx,BYTE PTR ds:[rsi]
  430328:	pop    rdi
  430329:	jns    0x4303a4
  43032b:	jns    0x43038c
  43032d:	fs (bad) 
  43032f:	je     0x430396
  430331:	cmp    ah,BYTE PTR [rax]
  430333:	and    eax,0xa73
  430338:	jae    0x4303ae
  43033a:	outs   dx,DWORD PTR ds:[rsi]
  43033b:	jb     0x4303a2
  43033d:	pop    rdi
  43033e:	fs fs pop rdi
  430341:	ins    DWORD PTR es:[rdi],dx
  430342:	outs   dx,DWORD PTR ds:[rsi]
  430343:	outs   dx,BYTE PTR ds:[rsi]
  430344:	pop    rdi
  430345:	jns    0x4303c0
  430347:	jns    0x4303a8
  430349:	fs (bad) 
  43034b:	je     0x4303b2
  43034d:	cmp    ah,BYTE PTR [rax]
  43034f:	jae    0x4303c5
  430351:	outs   dx,DWORD PTR ds:[rsi]
  430352:	jb     0x4303b9
  430354:	pop    rdi
  430355:	ins    DWORD PTR es:[rdi],dx
  430356:	outs   dx,DWORD PTR ds:[rsi]
  430357:	outs   dx,BYTE PTR ds:[rsi]
  430358:	je     0x4303c2
  43035a:	outs   dx,BYTE PTR ds:[rsi]
  43035b:	(bad)  
  43035c:	ins    DWORD PTR es:[rdi],dx
  43035d:	and    BYTE PTR gs:[rsi+0x61],ah
  430361:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7300000a
  430369:	je     0x4303da
  43036b:	jb     0x4303d2
  43036d:	pop    rdi
  43036e:	fs fs pop rdi
  430371:	ins    DWORD PTR es:[rdi],dx
  430372:	outs   dx,DWORD PTR ds:[rsi]
  430373:	outs   dx,BYTE PTR ds:[rsi]
  430374:	pop    rdi
  430375:	jns    0x4303f0
  430377:	jns    0x4303d8
  430379:	fs (bad) 
  43037b:	je     0x4303e2
  43037d:	cmp    ah,BYTE PTR [rax]
  43037f:	jns    0x4303e6
  430381:	(bad)  
  430382:	jb     0x4303a4
  430384:	and    eax,0x73000a64
  430389:	je     0x4303fd
  43038b:	imul   ebp,DWORD PTR [rsi+0x67],0x5f6f745f
  430392:	fs (bad) 
  430394:	je     0x4303fb
  430396:	je     0x430401
  430398:	ins    DWORD PTR es:[rdi],dx
  430399:	cmp    ah,BYTE PTR gs:[rax]
  43039c:	imul   esi,DWORD PTR [rbx+0x5f],0x656d6974
  4303a3:	outs   dx,WORD PTR ds:[rsi]
  4303a5:	jb     0x430414
  4303a7:	(bad)  
  4303a8:	je     0x4303b4
  4303aa:	add    BYTE PTR [rcx+0x70],ah
  4303ad:	ins    DWORD PTR es:[rdi],dx
  4303ae:	push   r8
  4303b0:	rex.WRB add BYTE PTR [r11+0x74],r14b
  4303b4:	outs   dx,DWORD PTR ds:[rsi]
  4303b5:	jb     0x43041c
  4303b7:	pop    rdi
  4303b8:	je     0x430423
  4303ba:	ins    DWORD PTR es:[rdi],dx
  4303bb:	sub    BYTE PTR gs:[rcx],ch
  4303be:	and    BYTE PTR [rsi+0x61],ch
  4303c1:	outs   dx,BYTE PTR ds:[rsi]
  4303c2:	outs   dx,DWORD PTR ds:[rsi]
  4303c3:	jae    0x43042a
  4303c5:	movsxd esi,DWORD PTR [rbx+0x20]
  4303c8:	cmp    eax,0xa642520
  4303cd:	add    BYTE PTR [rax],al
  4303cf:	add    BYTE PTR [rbx+0x74],dh
  4303d2:	jb     0x43043d
  4303d4:	outs   dx,BYTE PTR ds:[rsi]
  4303d5:	addr32 pop rdi
  4303d7:	je     0x430448
  4303d9:	pop    rdi
  4303da:	fs (bad) 
  4303dc:	je     0x430443
  4303de:	je     0x430449
  4303e0:	ins    DWORD PTR es:[rdi],dx
  4303e1:	cmp    ah,BYTE PTR gs:[rax]
  4303e4:	jae    0x43045a
  4303e6:	jb     0x430451
  4303e8:	outs   dx,BYTE PTR ds:[rsi]
  4303e9:	addr32 pop rdi
  4303eb:	addr32 (bad) 
  4303ed:	jb     0x430451
  4303ef:	ins    BYTE PTR es:[rdi],dx
  4303f0:	gs or  al,BYTE PTR fs:[rax]
  4303f4:	add    BYTE PTR [rax],al
  4303f6:	add    BYTE PTR [rax],al
  4303f8:	gs jb  0x43046d
  4303fb:	outs   dx,DWORD PTR ds:[rsi]
  4303fc:	jb     0x43045d
  4303fe:	push   0x6c646e61
  430403:	gs jb  0x430440
  430406:	and    BYTE PTR [rax],ah
  430408:	rex.B je 0x43047f
  43040b:	gs ins DWORD PTR es:[rdi],dx
  43040d:	jo     0x430483
  43040f:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  430413:	movsxd ebp,DWORD PTR [rdi+0x6e]
  430416:	jbe    0x43047d
  430418:	jb     0x43048e
  43041a:	and    BYTE PTR [rcx+riz*2+0x74],ah
  43041e:	(bad)  
  43041f:	and    BYTE PTR [rbx+0x74],dh
  430422:	outs   dx,DWORD PTR ds:[rsi]
  430423:	jo     0x430495
  430425:	gs and BYTE PTR fs:[rdx+0x79],ah
  43042a:	and    BYTE PTR [rbx+0x79],dh
  43042d:	outs   dx,BYTE PTR ds:[rsi]
  43042e:	je     0x430491
  430430:	js     0x430452
  430432:	gs jb  0x4304a7
  430435:	outs   dx,DWORD PTR ds:[rsi]
  430436:	jb     0x430458
  430438:	imul   ebp,DWORD PTR [rsi+0x20],0x72756f73
  43043f:	movsxd esp,DWORD PTR [rbp+0x20]
  430442:	imul   sp,WORD PTR [rbp+0x6c],0x2064
  430448:	or     al,BYTE PTR [rax]
  43044a:	and    eax,0x252e646c
  43044f:	xor    BYTE PTR [rdx],dh
  430451:	ins    BYTE PTR es:[rdi],dx
  430452:	jne    0x430454
  430454:	je     0x4304ba
  430456:	jae    0x4304b7
  430458:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43045b:	jbe    0x4304c2
  43045d:	jb     0x4304d3
  43045f:	pop    rdi
  430460:	ins    DWORD PTR es:[rdi],dx
  430461:	outs   dx,DWORD PTR ds:[rsi]
  430462:	outs   dx,BYTE PTR ds:[rsi]
  430463:	gs jns 0x43048e
  430466:	sub    DWORD PTR [rdx],ecx
  430468:	add    BYTE PTR [rip+0x64343649],ah        # 0x64773ab7
  43046e:	add    BYTE PTR [rip+0x67392e],ah        # 0xaa3da2
  430474:	and    eax,0x662a2e
  430479:	and    eax,0x6737312e
  43047e:	add    BYTE PTR [rip+0x6736312e],ah        # 0x677935b2
  430484:	add    BYTE PTR [rax],al
  430486:	add    BYTE PTR [rax],al
  430488:	and    eax,0x2d583830
  43048d:	and    eax,0x2d583430
  430492:	and    eax,0x2d583430
  430497:	and    eax,0x25583230
  43049c:	xor    BYTE PTR [rdx],dh
  43049e:	pop    rax
  43049f:	sub    eax,0x58323025
  4304a4:	and    eax,0x25583230
  4304a9:	xor    BYTE PTR [rdx],dh
  4304ab:	pop    rax
  4304ac:	and    eax,0x25583230
  4304b1:	xor    BYTE PTR [rdx],dh
  4304b3:	pop    rax
  4304b4:	and    eax,0x583230
  4304b9:	add    BYTE PTR [rax],al
  4304bb:	add    BYTE PTR [rax+rdi*8],dl
  4304be:	std    
  4304bf:	inc    DWORD PTR [rcx+rdi*8-0x70b0003]
  4304c6:	std    
  4304c7:	call   QWORD PTR [rax+rdi*8]
  4304ca:	std    
  4304cb:	push   QWORD PTR [rsi+rdi*8-0x3]
  4304cf:	inc    DWORD PTR [rcx+rdi*8-0x6d80003]
  4304d6:	std    
  4304d7:	jmp    QWORD PTR [rdi]
  4304d9:	stc    
  4304da:	std    
  4304db:	jmp    QWORD PTR [rdi]
  4304dd:	stc    
  4304de:	std    
  4304df:	jmp    QWORD PTR [rdi]
  4304e1:	stc    
  4304e2:	std    
  4304e3:	push   QWORD PTR [rsi+rdi*8-0x3]
  4304e7:	call   QWORD PTR [rax+rdi*8]
  4304ea:	std    
  4304eb:	push   QWORD PTR [rsi+rdi*8-0x3]
  4304ef:	inc    DWORD PTR [rcx+rdi*8-0x6ab0003]
  4304f6:	std    
  4304f7:	jmp    QWORD PTR [rbp-0x7]
  4304fa:	std    
  4304fb:	jmp    QWORD PTR [rcx+rdi*8-0x41b0003]
  430502:	std    
  430503:	push   rsp
  430505:	cli    
  430506:	std    
  430507:	push   QWORD PTR [rsi+rdi*8-0x3]
  43050b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43050f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430513:	dec    DWORD PTR [rax]
  430515:	sti    
  430516:	std    
  430517:	push   QWORD PTR [rsi+rdi*8-0x3]
  43051b:	call   FWORD PTR [rax-0x6]
  43051e:	std    
  43051f:	push   QWORD PTR [rdi-0x6]
  430522:	std    
  430523:	jmp    QWORD PTR [rbx+rdi*8]
  430526:	std    
  430527:	inc    ebp
  430529:	sti    
  43052a:	std    
  43052b:	inc    esp
  43052d:	stc    
  43052e:	std    
  43052f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430533:	call   QWORD PTR [rcx+rdi*8-0x3]
  430537:	inc    DWORD PTR [rdx+rdi*8-0x3]
  43053b:	dec    DWORD PTR [rax-0x4b000203]
  430541:	std    
  430542:	std    
  430543:	push   QWORD PTR [rsi+rdi*8-0x3]
  430547:	push   QWORD PTR [rsi+rdi*8-0x3]
  43054b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43054f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430553:	push   QWORD PTR [rsi+rdi*8-0x3]
  430557:	push   QWORD PTR [rsi+rdi*8-0x3]
  43055b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43055f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430563:	push   QWORD PTR [rsi+rdi*8-0x3]
  430567:	push   QWORD PTR [rsi+rdi*8-0x3]
  43056b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43056f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430573:	push   QWORD PTR [rsi+rdi*8-0x3]
  430577:	push   QWORD PTR [rsi+rdi*8-0x3]
  43057b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43057f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430583:	push   QWORD PTR [rsi+rdi*8-0x3]
  430587:	push   QWORD PTR [rsi+rdi*8-0x3]
  43058b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43058f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430593:	push   QWORD PTR [rsi+rdi*8-0x3]
  430597:	push   QWORD PTR [rsi+rdi*8-0x3]
  43059b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43059f:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305a3:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305a7:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305ab:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305af:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305b3:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305b7:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305bb:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305bf:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305c3:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305c7:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305cb:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305cf:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305d3:	jmp    QWORD PTR [rcx+rdi*8-0x18b0003]
  4305da:	std    
  4305db:	push   QWORD PTR [rsp+rdi*8]
  4305de:	std    
  4305df:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305e3:	push   QWORD PTR [rsp+rdi*8]
  4305e6:	std    
  4305e7:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305eb:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305ef:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305f3:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305f7:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305fb:	push   QWORD PTR [rsi+rdi*8-0x3]
  4305ff:	push   QWORD PTR [rsi+rdi*8-0x3]
  430603:	push   QWORD PTR [rsi+rdi*8-0x3]
  430607:	push   QWORD PTR [rsi+rdi*8-0x3]
  43060b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43060f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430613:	push   QWORD PTR [rsi+rdi*8-0x3]
  430617:	push   QWORD PTR [rsi+rdi*8-0x3]
  43061b:	jmp    QWORD PTR [rdi*8-0x18b0003]
  430622:	std    
  430623:	push   QWORD PTR [rsi+rdi*8-0x3]
  430627:	push   QWORD PTR [rsi+rdi*8-0x3]
  43062b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43062f:	inc    esi
  430631:	std    
  430632:	std    
  430633:	push   QWORD PTR [rsi+rdi*8-0x3]
  430637:	push   QWORD PTR [rsi+rdi*8-0x3]
  43063b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43063f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430643:	push   QWORD PTR [rsi+rdi*8-0x3]
  430647:	push   QWORD PTR [rsi+rdi*8-0x3]
  43064b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43064f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430653:	push   QWORD PTR [rsi+rdi*8-0x3]
  430657:	push   QWORD PTR [rsi+rdi*8-0x3]
  43065b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43065f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430663:	push   QWORD PTR [rsi+rdi*8-0x3]
  430667:	push   QWORD PTR [rsi+rdi*8-0x3]
  43066b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43066f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430673:	push   QWORD PTR [rsi+rdi*8-0x3]
  430677:	push   QWORD PTR [rsi+rdi*8-0x3]
  43067b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43067f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430683:	push   QWORD PTR [rsi+rdi*8-0x3]
  430687:	push   QWORD PTR [rsi+rdi*8-0x3]
  43068b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43068f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430693:	push   QWORD PTR [rsi+rdi*8-0x3]
  430697:	push   QWORD PTR [rsi+rdi*8-0x3]
  43069b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43069f:	push   QWORD PTR [rsi+rdi*8-0x3]
  4306a3:	push   QWORD PTR [rsi+rdi*8-0x3]
  4306a7:	push   QWORD PTR [rsi+rdi*8-0x3]
  4306ab:	push   QWORD PTR [rsi+rdi*8-0x3]
  4306af:	push   QWORD PTR [rsi+rdi*8-0x3]
  4306b3:	push   QWORD PTR [rsi+rdi*8-0x3]
  4306b7:	push   QWORD PTR [rsi+rdi*8-0x3]
  4306bb:	push   QWORD PTR [rsi+rdi*8-0x3]
  4306bf:	push   QWORD PTR [rsi+rdi*8-0x3]
  4306c3:	push   QWORD PTR [rsi+rdi*8-0x3]
  4306c7:	call   QWORD PTR [rax+rdi*8]
  4306ca:	std    
  4306cb:	push   QWORD PTR [rsi+rdi*8-0x3]
  4306cf:	inc    DWORD PTR [rcx+rdi*8-0x18b0003]
  4306d6:	std    
  4306d7:	push   QWORD PTR [rsi+rdi*8-0x3]
  4306db:	push   QWORD PTR [rsi+rdi*8-0x3]
  4306df:	push   QWORD PTR [rsi+rdi*8-0x3]
  4306e3:	push   QWORD PTR [rsi+rdi*8-0x3]
  4306e7:	call   QWORD PTR [rax+rdi*8]
  4306ea:	std    
  4306eb:	push   QWORD PTR [rsi+rdi*8-0x3]
  4306ef:	inc    DWORD PTR [rcx+rdi*8-0x18b0003]
  4306f6:	std    
  4306f7:	push   QWORD PTR [rsi+rdi*8-0x3]
  4306fb:	push   QWORD PTR [rsi+rdi*8-0x3]
  4306ff:	push   QWORD PTR [rsi+rdi*8-0x3]
  430703:	push   QWORD PTR [rsi+rdi*8-0x3]
  430707:	push   QWORD PTR [rsi+rdi*8-0x3]
  43070b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43070f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430713:	push   QWORD PTR [rsi+rdi*8-0x3]
  430717:	push   QWORD PTR [rsi+rdi*8-0x3]
  43071b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43071f:	inc    DWORD PTR [rsi+rdi*8-0x3]
  430723:	call   rsp
  430725:	idiv   ebp
  430727:	push   QWORD PTR [rsi+rdi*8-0x3]
  43072b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43072f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430733:	push   QWORD PTR [rsi+rdi*8-0x3]
  430737:	push   QWORD PTR [rsi+rdi*8-0x3]
  43073b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43073f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430743:	push   QWORD PTR [rsi+rdi*8-0x3]
  430747:	push   QWORD PTR [rsi+rdi*8-0x3]
  43074b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43074f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430753:	push   QWORD PTR [rsi+rdi*8-0x3]
  430757:	push   QWORD PTR [rsi+rdi*8-0x3]
  43075b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43075f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430763:	push   QWORD PTR [rsi+rdi*8-0x3]
  430767:	push   QWORD PTR [rsi+rdi*8-0x3]
  43076b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43076f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430773:	push   QWORD PTR [rsi+rdi*8-0x3]
  430777:	push   QWORD PTR [rsi+rdi*8-0x3]
  43077b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43077f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430783:	push   QWORD PTR [rsi+rdi*8-0x3]
  430787:	push   QWORD PTR [rsi+rdi*8-0x3]
  43078b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43078f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430793:	push   QWORD PTR [rsi+rdi*8-0x3]
  430797:	push   QWORD PTR [rsi+rdi*8-0x3]
  43079b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43079f:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307a3:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307a7:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307ab:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307af:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307b3:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307b7:	call   QWORD PTR [rax+rdi*8]
  4307ba:	std    
  4307bb:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307bf:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307c3:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307c7:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307cb:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307cf:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307d3:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307d7:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307db:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307df:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307e3:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307e7:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307eb:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307ef:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307f3:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307f7:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307fb:	push   QWORD PTR [rsi+rdi*8-0x3]
  4307ff:	push   QWORD PTR [rsi+rdi*8-0x3]
  430803:	push   QWORD PTR [rsi+rdi*8-0x3]
  430807:	push   QWORD PTR [rsi+rdi*8-0x3]
  43080b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43080f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430813:	push   QWORD PTR [rsi+rdi*8-0x3]
  430817:	push   QWORD PTR [rsi+rdi*8-0x3]
  43081b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43081f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430823:	push   QWORD PTR [rsi+rdi*8-0x3]
  430827:	push   QWORD PTR [rsi+rdi*8-0x3]
  43082b:	push   QWORD PTR [rsi+rdi*8-0x3]
  43082f:	push   QWORD PTR [rsi+rdi*8-0x3]
  430833:	push   QWORD PTR [rsi+rdi*8-0x3]
  430837:	call   QWORD PTR [rax+rdi*8]
  43083a:	std    
  43083b:	jmp    QWORD PTR [rbx+rdi*8]
  43083e:	std    
  43083f:	inc    DWORD PTR [rbx+rdi*8-0x3]
  430843:	jmp    rdi
  430845:	cli    
  430846:	std    
  430847:	jmp    QWORD PTR [rbx+rdi*8]
  43084a:	std    
  43084b:	push   rsp
  43084d:	cli    
  43084e:	std    
  43084f:	inc    DWORD PTR [rbx+rdi*8-0x3]
  430853:	jmp    rdi
  430855:	cli    
  430856:	std    
  430857:	jmp    rdi
  430859:	cli    
  43085a:	std    
  43085b:	jmp    rdi
  43085d:	cli    
  43085e:	std    
  43085f:	jmp    rdi
  430861:	cli    
  430862:	std    
  430863:	push   rsp
  430865:	cli    
  430866:	std    
  430867:	jmp    QWORD PTR [rbx+rdi*8]
  43086a:	std    
  43086b:	push   rsp
  43086d:	cli    
  43086e:	std    
  43086f:	inc    DWORD PTR [rbx+rdi*8-0x3]
  430873:	inc    DWORD PTR [rbx+rdi*8]
  430876:	std    
  430877:	call   QWORD PTR [rdi+0x4fffdf3]
  43087d:	sti    
  43087e:	std    
  43087f:	call   QWORD PTR [rdi+0x14fffdf3]
  430885:	sti    
  430886:	std    
  430887:	push   rsp
  430889:	cli    
  43088a:	std    
  43088b:	push   rsp
  43088d:	cli    
  43088e:	std    
  43088f:	push   rsp
  430891:	cli    
  430892:	std    
  430893:	call   QWORD PTR [rdi-0xb00020d]
  430899:	cli    
  43089a:	std    
  43089b:	call   QWORD PTR [rdi-0x6800020d]
  4308a1:	repz std 
  4308a3:	push   rsp
  4308a5:	repz std 
  4308a7:	push   rsp
  4308a9:	repz std 
  4308ab:	push   rsp
  4308ad:	repz std 
  4308af:	push   rsp
  4308b1:	cli    
  4308b2:	std    
  4308b3:	inc    DWORD PTR [rbx+rdi*8]
  4308b6:	std    
  4308b7:	call   QWORD PTR [rbx+rdi*8]
  4308ba:	std    
  4308bb:	call   QWORD PTR [rdi-0xb00020d]
  4308c1:	repz std 
  4308c3:	push   rsp
  4308c5:	cli    
  4308c6:	std    
  4308c7:	push   rsp
  4308c9:	cli    
  4308ca:	std    
  4308cb:	push   rsp
  4308cd:	cli    
  4308ce:	std    
  4308cf:	push   rsp
  4308d1:	cli    
  4308d2:	std    
  4308d3:	push   rsp
  4308d5:	cli    
  4308d6:	std    
  4308d7:	push   rsp
  4308d9:	cli    
  4308da:	std    
  4308db:	push   rsp
  4308dd:	cli    
  4308de:	std    
  4308df:	push   rsp
  4308e1:	cli    
  4308e2:	std    
  4308e3:	push   rsp
  4308e5:	cli    
  4308e6:	std    
  4308e7:	push   rsp
  4308e9:	cli    
  4308ea:	std    
  4308eb:	push   rsp
  4308ed:	cli    
  4308ee:	std    
  4308ef:	push   rsp
  4308f1:	cli    
  4308f2:	std    
  4308f3:	push   rsp
  4308f5:	cli    
  4308f6:	std    
  4308f7:	push   rsp
  4308f9:	cli    
  4308fa:	std    
  4308fb:	push   rsp
  4308fd:	cli    
  4308fe:	std    
  4308ff:	push   rsp
  430901:	cli    
  430902:	std    
  430903:	push   rsp
  430905:	cli    
  430906:	std    
  430907:	push   rsp
  430909:	cli    
  43090a:	std    
  43090b:	push   rsp
  43090d:	cli    
  43090e:	std    
  43090f:	push   rsp
  430911:	cli    
  430912:	std    
  430913:	push   rsp
  430915:	cli    
  430916:	std    
  430917:	push   rsp
  430919:	cli    
  43091a:	std    
  43091b:	push   rsp
  43091d:	cli    
  43091e:	std    
  43091f:	push   rsp
  430921:	cli    
  430922:	std    
  430923:	push   rsp
  430925:	cli    
  430926:	std    
  430927:	push   rsp
  430929:	cli    
  43092a:	std    
  43092b:	push   rsp
  43092d:	cli    
  43092e:	std    
  43092f:	push   rsp
  430931:	cli    
  430932:	std    
  430933:	push   rsp
  430935:	cli    
  430936:	std    
  430937:	push   rsp
  430939:	cli    
  43093a:	std    
  43093b:	push   rsp
  43093d:	cli    
  43093e:	std    
  43093f:	push   rsp
  430941:	cli    
  430942:	std    
  430943:	push   rsp
  430945:	cli    
  430946:	std    
  430947:	push   rsp
  430949:	cli    
  43094a:	std    
  43094b:	push   rsp
  43094d:	cli    
  43094e:	std    
  43094f:	push   rsp
  430951:	cli    
  430952:	std    
  430953:	inc    DWORD PTR [rbx+rdi*8]
  430956:	std    
  430957:	push   rsp
  430959:	cli    
  43095a:	std    
  43095b:	push   QWORD PTR [rbx+rdi*8]
  43095e:	std    
  43095f:	push   rsp
  430961:	cli    
  430962:	std    
  430963:	push   QWORD PTR [rbx+rdi*8]
  430966:	std    
  430967:	push   rsp
  430969:	cli    
  43096a:	std    
  43096b:	push   rsp
  43096d:	cli    
  43096e:	std    
  43096f:	push   rsp
  430971:	cli    
  430972:	std    
  430973:	push   rsp
  430975:	cli    
  430976:	std    
  430977:	push   rsp
  430979:	cli    
  43097a:	std    
  43097b:	push   rsp
  43097d:	cli    
  43097e:	std    
  43097f:	push   rsp
  430981:	cli    
  430982:	std    
  430983:	push   rsp
  430985:	cli    
  430986:	std    
  430987:	push   rsp
  430989:	cli    
  43098a:	std    
  43098b:	push   rsp
  43098d:	cli    
  43098e:	std    
  43098f:	push   rsp
  430991:	cli    
  430992:	std    
  430993:	push   rsp
  430995:	cli    
  430996:	std    
  430997:	push   rsp
  430999:	cli    
  43099a:	std    
  43099b:	call   QWORD PTR [rdi-0xb00020d]
  4309a1:	cli    
  4309a2:	std    
  4309a3:	push   rsp
  4309a5:	cli    
  4309a6:	std    
  4309a7:	push   rsp
  4309a9:	cli    
  4309aa:	std    
  4309ab:	push   rsp
  4309ad:	cli    
  4309ae:	std    
  4309af:	push   rsp
  4309b1:	repz std 
  4309b3:	push   rsp
  4309b5:	cli    
  4309b6:	std    
  4309b7:	push   rsp
  4309b9:	cli    
  4309ba:	std    
  4309bb:	push   rsp
  4309bd:	cli    
  4309be:	std    
  4309bf:	push   rsp
  4309c1:	cli    
  4309c2:	std    
  4309c3:	push   rsp
  4309c5:	cli    
  4309c6:	std    
  4309c7:	push   rsp
  4309c9:	cli    
  4309ca:	std    
  4309cb:	push   rsp
  4309cd:	cli    
  4309ce:	std    
  4309cf:	push   rsp
  4309d1:	cli    
  4309d2:	std    
  4309d3:	push   rsp
  4309d5:	cli    
  4309d6:	std    
  4309d7:	push   rsp
  4309d9:	cli    
  4309da:	std    
  4309db:	push   rsp
  4309dd:	cli    
  4309de:	std    
  4309df:	push   rsp
  4309e1:	cli    
  4309e2:	std    
  4309e3:	push   rsp
  4309e5:	cli    
  4309e6:	std    
  4309e7:	push   rsp
  4309e9:	cli    
  4309ea:	std    
  4309eb:	push   rsp
  4309ed:	cli    
  4309ee:	std    
  4309ef:	push   rsp
  4309f1:	cli    
  4309f2:	std    
  4309f3:	push   rsp
  4309f5:	cli    
  4309f6:	std    
  4309f7:	push   rsp
  4309f9:	cli    
  4309fa:	std    
  4309fb:	push   rsp
  4309fd:	cli    
  4309fe:	std    
  4309ff:	push   rsp
  430a01:	cli    
  430a02:	std    
  430a03:	push   rsp
  430a05:	cli    
  430a06:	std    
  430a07:	push   rsp
  430a09:	cli    
  430a0a:	std    
  430a0b:	push   rsp
  430a0d:	cli    
  430a0e:	std    
  430a0f:	push   rsp
  430a11:	cli    
  430a12:	std    
  430a13:	push   rsp
  430a15:	cli    
  430a16:	std    
  430a17:	push   rsp
  430a19:	cli    
  430a1a:	std    
  430a1b:	push   rsp
  430a1d:	cli    
  430a1e:	std    
  430a1f:	push   rsp
  430a21:	cli    
  430a22:	std    
  430a23:	push   rsp
  430a25:	cli    
  430a26:	std    
  430a27:	push   rsp
  430a29:	cli    
  430a2a:	std    
  430a2b:	push   rsp
  430a2d:	cli    
  430a2e:	std    
  430a2f:	push   rsp
  430a31:	cli    
  430a32:	std    
  430a33:	push   rsp
  430a35:	cli    
  430a36:	std    
  430a37:	push   rsp
  430a39:	cli    
  430a3a:	std    
  430a3b:	push   rsp
  430a3d:	cli    
  430a3e:	std    
  430a3f:	push   rsp
  430a41:	cli    
  430a42:	std    
  430a43:	push   rsp
  430a45:	cli    
  430a46:	std    
  430a47:	jmp    QWORD PTR [rbx+rdi*8]
  430a4a:	std    
  430a4b:	push   rsp
  430a4d:	cli    
  430a4e:	std    
  430a4f:	inc    DWORD PTR [rbx+rdi*8-0x3]
  430a53:	push   rsp
  430a55:	cli    
  430a56:	std    
  430a57:	push   rsp
  430a59:	cli    
  430a5a:	std    
  430a5b:	push   rsp
  430a5d:	cli    
  430a5e:	std    
  430a5f:	push   rsp
  430a61:	cli    
  430a62:	std    
  430a63:	push   rsp
  430a65:	cli    
  430a66:	std    
  430a67:	jmp    QWORD PTR [rbx+rdi*8]
  430a6a:	std    
  430a6b:	push   rsp
  430a6d:	cli    
  430a6e:	std    
  430a6f:	inc    DWORD PTR [rbx+rdi*8-0x3]
  430a73:	push   rsp
  430a75:	cli    
  430a76:	std    
  430a77:	push   rsp
  430a79:	cli    
  430a7a:	std    
  430a7b:	push   rsp
  430a7d:	cli    
  430a7e:	std    
  430a7f:	push   rsp
  430a81:	cli    
  430a82:	std    
  430a83:	push   rsp
  430a85:	cli    
  430a86:	std    
  430a87:	push   rsp
  430a89:	cli    
  430a8a:	std    
  430a8b:	push   rsp
  430a8d:	cli    
  430a8e:	std    
  430a8f:	push   rsp
  430a91:	cli    
  430a92:	std    
  430a93:	push   rsp
  430a95:	cli    
  430a96:	std    
  430a97:	push   rsp
  430a99:	cli    
  430a9a:	std    
  430a9b:	push   rsp
  430a9d:	cli    
  430a9e:	std    
  430a9f:	push   rsp
  430aa1:	repz std 
  430aa3:	push   rsp
  430aa5:	repz std 
  430aa7:	push   rsp
  430aa9:	cli    
  430aaa:	std    
  430aab:	push   rsp
  430aad:	cli    
  430aae:	std    
  430aaf:	push   rsp
  430ab1:	cli    
  430ab2:	std    
  430ab3:	push   rsp
  430ab5:	cli    
  430ab6:	std    
  430ab7:	push   rsp
  430ab9:	cli    
  430aba:	std    
  430abb:	push   rsp
  430abd:	cli    
  430abe:	std    
  430abf:	push   rsp
  430ac1:	cli    
  430ac2:	std    
  430ac3:	push   rsp
  430ac5:	cli    
  430ac6:	std    
  430ac7:	push   rsp
  430ac9:	cli    
  430aca:	std    
  430acb:	push   rsp
  430acd:	cli    
  430ace:	std    
  430acf:	push   rsp
  430ad1:	cli    
  430ad2:	std    
  430ad3:	push   rsp
  430ad5:	cli    
  430ad6:	std    
  430ad7:	push   rsp
  430ad9:	cli    
  430ada:	std    
  430adb:	push   rsp
  430add:	cli    
  430ade:	std    
  430adf:	push   rsp
  430ae1:	cli    
  430ae2:	std    
  430ae3:	push   rsp
  430ae5:	cli    
  430ae6:	std    
  430ae7:	push   rsp
  430ae9:	cli    
  430aea:	std    
  430aeb:	push   rsp
  430aed:	cli    
  430aee:	std    
  430aef:	push   rsp
  430af1:	cli    
  430af2:	std    
  430af3:	push   rsp
  430af5:	cli    
  430af6:	std    
  430af7:	push   rsp
  430af9:	cli    
  430afa:	std    
  430afb:	push   rsp
  430afd:	cli    
  430afe:	std    
  430aff:	push   rsp
  430b01:	cli    
  430b02:	std    
  430b03:	push   rsp
  430b05:	cli    
  430b06:	std    
  430b07:	push   rsp
  430b09:	cli    
  430b0a:	std    
  430b0b:	push   rsp
  430b0d:	cli    
  430b0e:	std    
  430b0f:	push   rsp
  430b11:	cli    
  430b12:	std    
  430b13:	push   rsp
  430b15:	cli    
  430b16:	std    
  430b17:	push   rsp
  430b19:	cli    
  430b1a:	std    
  430b1b:	push   rsp
  430b1d:	cli    
  430b1e:	std    
  430b1f:	push   rsp
  430b21:	cli    
  430b22:	std    
  430b23:	push   rsp
  430b25:	cli    
  430b26:	std    
  430b27:	push   rsp
  430b29:	cli    
  430b2a:	std    
  430b2b:	push   rsp
  430b2d:	cli    
  430b2e:	std    
  430b2f:	push   rsp
  430b31:	cli    
  430b32:	std    
  430b33:	push   rsp
  430b35:	cli    
  430b36:	std    
  430b37:	jmp    QWORD PTR [rbx+rdi*8]
  430b3a:	std    
  430b3b:	push   rsp
  430b3d:	cli    
  430b3e:	std    
  430b3f:	push   rsp
  430b41:	cli    
  430b42:	std    
  430b43:	push   rsp
  430b45:	cli    
  430b46:	std    
  430b47:	push   rsp
  430b49:	cli    
  430b4a:	std    
  430b4b:	push   rsp
  430b4d:	cli    
  430b4e:	std    
  430b4f:	push   rsp
  430b51:	cli    
  430b52:	std    
  430b53:	push   rsp
  430b55:	cli    
  430b56:	std    
  430b57:	push   rsp
  430b59:	cli    
  430b5a:	std    
  430b5b:	push   rsp
  430b5d:	cli    
  430b5e:	std    
  430b5f:	push   rsp
  430b61:	cli    
  430b62:	std    
  430b63:	push   rsp
  430b65:	cli    
  430b66:	std    
  430b67:	push   rsp
  430b69:	cli    
  430b6a:	std    
  430b6b:	push   rsp
  430b6d:	cli    
  430b6e:	std    
  430b6f:	push   rsp
  430b71:	cli    
  430b72:	std    
  430b73:	push   rsp
  430b75:	cli    
  430b76:	std    
  430b77:	push   rsp
  430b79:	cli    
  430b7a:	std    
  430b7b:	push   rsp
  430b7d:	cli    
  430b7e:	std    
  430b7f:	push   rsp
  430b81:	cli    
  430b82:	std    
  430b83:	push   rsp
  430b85:	cli    
  430b86:	std    
  430b87:	push   rsp
  430b89:	cli    
  430b8a:	std    
  430b8b:	push   rsp
  430b8d:	cli    
  430b8e:	std    
  430b8f:	push   rsp
  430b91:	cli    
  430b92:	std    
  430b93:	push   rsp
  430b95:	cli    
  430b96:	std    
  430b97:	push   rsp
  430b99:	cli    
  430b9a:	std    
  430b9b:	push   rsp
  430b9d:	cli    
  430b9e:	std    
  430b9f:	push   rsp
  430ba1:	cli    
  430ba2:	std    
  430ba3:	push   rsp
  430ba5:	cli    
  430ba6:	std    
  430ba7:	push   rsp
  430ba9:	cli    
  430baa:	std    
  430bab:	push   rsp
  430bad:	cli    
  430bae:	std    
  430baf:	push   rsp
  430bb1:	cli    
  430bb2:	std    
  430bb3:	push   rsp
  430bb5:	cli    
  430bb6:	std    
  430bb7:	jmp    QWORD PTR [rbx+rdi*8]
  430bba:	std    
  430bbb:	push   QWORD PTR [rsi+0x1dfffdfd]
  430bc1:	std    
  430bc2:	std    
  430bc3:	inc    edx
  430bc5:	(bad)  
  430bc6:	std    
  430bc7:	inc    edx
  430bc9:	(bad)  
  430bca:	std    
  430bcb:	push   QWORD PTR [rsi+0x78fffdfd]
  430bd1:	sti    
  430bd2:	std    
  430bd3:	(bad)  
  430bd4:	js     0x430bd1
  430bd6:	std    
  430bd7:	(bad)  
  430bd8:	js     0x430bd5
  430bda:	std    
  430bdb:	(bad)  
  430bdc:	js     0x430bd9
  430bde:	std    
  430bdf:	inc    edx
  430be1:	(bad)  
  430be2:	std    
  430be3:	inc    edx
  430be5:	(bad)  
  430be6:	std    
  430be7:	inc    edx
  430be9:	(bad)  
  430bea:	std    
  430beb:	push   QWORD PTR [rsi+0x7cfffdfd]
  430bf1:	(bad)  
  430bf2:	std    
  430bf3:	(bad)  
  430bf4:	js     0x430bf1
  430bf6:	std    
  430bf7:	push   rsp
  430bf9:	std    
  430bfa:	std    
  430bfb:	(bad)  
  430bfc:	js     0x430bf9
  430bfe:	std    
  430bff:	push   QWORD PTR [rsi+rdi*8]
  430c02:	std    
  430c03:	inc    edx
  430c05:	(bad)  
  430c06:	std    
  430c07:	inc    edx
  430c09:	(bad)  
  430c0a:	std    
  430c0b:	inc    edx
  430c0d:	(bad)  
  430c0e:	std    
  430c0f:	dec    DWORD PTR [rbp-0x7]
  430c12:	std    
  430c13:	inc    edx
  430c15:	(bad)  
  430c16:	std    
  430c17:	(bad)  
  430c18:	js     0x430c15
  430c1a:	std    
  430c1b:	call   FWORD PTR [rcx-0x5]
  430c1e:	std    
  430c1f:	(bad)  
  430c20:	(bad)  
  430c22:	std    
  430c23:	(bad)  
  430c24:	js     0x430c21
  430c26:	std    
  430c27:	inc    ebx
  430c29:	stc    
  430c2a:	std    
  430c2b:	inc    edx
  430c2d:	(bad)  
  430c2e:	std    
  430c2f:	(bad)  
  430c30:	jl     0x430c30
  430c32:	std    
  430c33:	inc    DWORD PTR [rdx+0x9fffdf9]
  430c39:	stc    
  430c3a:	std    
  430c3b:	(bad)  
  430c3c:	mov    esi,0xc2fffdf8
  430c41:	(bad)  
  430c42:	std    
  430c43:	inc    edx
  430c45:	(bad)  
  430c46:	std    
  430c47:	inc    edx
  430c49:	(bad)  
  430c4a:	std    
  430c4b:	inc    edx
  430c4d:	(bad)  
  430c4e:	std    
  430c4f:	inc    edx
  430c51:	(bad)  
  430c52:	std    
  430c53:	inc    edx
  430c55:	(bad)  
  430c56:	std    
  430c57:	inc    edx
  430c59:	(bad)  
  430c5a:	std    
  430c5b:	inc    edx
  430c5d:	(bad)  
  430c5e:	std    
  430c5f:	inc    edx
  430c61:	(bad)  
  430c62:	std    
  430c63:	inc    edx
  430c65:	(bad)  
  430c66:	std    
  430c67:	inc    edx
  430c69:	(bad)  
  430c6a:	std    
  430c6b:	inc    edx
  430c6d:	(bad)  
  430c6e:	std    
  430c6f:	inc    edx
  430c71:	(bad)  
  430c72:	std    
  430c73:	inc    edx
  430c75:	(bad)  
  430c76:	std    
  430c77:	inc    edx
  430c79:	(bad)  
  430c7a:	std    
  430c7b:	inc    edx
  430c7d:	(bad)  
  430c7e:	std    
  430c7f:	inc    edx
  430c81:	(bad)  
  430c82:	std    
  430c83:	inc    edx
  430c85:	(bad)  
  430c86:	std    
  430c87:	inc    edx
  430c89:	(bad)  
  430c8a:	std    
  430c8b:	inc    edx
  430c8d:	(bad)  
  430c8e:	std    
  430c8f:	inc    edx
  430c91:	(bad)  
  430c92:	std    
  430c93:	inc    edx
  430c95:	(bad)  
  430c96:	std    
  430c97:	inc    edx
  430c99:	(bad)  
  430c9a:	std    
  430c9b:	inc    edx
  430c9d:	(bad)  
  430c9e:	std    
  430c9f:	inc    edx
  430ca1:	(bad)  
  430ca2:	std    
  430ca3:	inc    edx
  430ca5:	(bad)  
  430ca6:	std    
  430ca7:	inc    edx
  430ca9:	(bad)  
  430caa:	std    
  430cab:	inc    edx
  430cad:	(bad)  
  430cae:	std    
  430caf:	inc    edx
  430cb1:	(bad)  
  430cb2:	std    
  430cb3:	inc    edx
  430cb5:	(bad)  
  430cb6:	std    
  430cb7:	inc    edx
  430cb9:	(bad)  
  430cba:	std    
  430cbb:	inc    edx
  430cbd:	(bad)  
  430cbe:	std    
  430cbf:	inc    edx
  430cc1:	(bad)  
  430cc2:	std    
  430cc3:	inc    edx
  430cc5:	(bad)  
  430cc6:	std    
  430cc7:	inc    edx
  430cc9:	(bad)  
  430cca:	std    
  430ccb:	inc    edx
  430ccd:	(bad)  
  430cce:	std    
  430ccf:	push   rsp
  430cd1:	std    
  430cd2:	std    
  430cd3:	inc    edx
  430cd5:	(bad)  
  430cd6:	std    
  430cd7:	jmp    QWORD PTR [rbp-0x3d000208]
  430cdd:	(bad)  
  430cde:	std    
  430cdf:	jmp    QWORD PTR [rbp-0x3d000208]
  430ce5:	(bad)  
  430ce6:	std    
  430ce7:	inc    edx
  430ce9:	(bad)  
  430cea:	std    
  430ceb:	inc    edx
  430ced:	(bad)  
  430cee:	std    
  430cef:	inc    edx
  430cf1:	(bad)  
  430cf2:	std    
  430cf3:	inc    edx
  430cf5:	(bad)  
  430cf6:	std    
  430cf7:	inc    edx
  430cf9:	(bad)  
  430cfa:	std    
  430cfb:	inc    edx
  430cfd:	(bad)  
  430cfe:	std    
  430cff:	inc    edx
  430d01:	(bad)  
  430d02:	std    
  430d03:	inc    edx
  430d05:	(bad)  
  430d06:	std    
  430d07:	inc    edx
  430d09:	(bad)  
  430d0a:	std    
  430d0b:	inc    edx
  430d0d:	(bad)  
  430d0e:	std    
  430d0f:	inc    edx
  430d11:	(bad)  
  430d12:	std    
  430d13:	inc    edx
  430d15:	(bad)  
  430d16:	std    
  430d17:	(bad)  
  430d18:	(bad)  
  430d1a:	std    
  430d1b:	inc    edx
  430d1d:	(bad)  
  430d1e:	std    
  430d1f:	inc    edx
  430d21:	(bad)  
  430d22:	std    
  430d23:	inc    edx
  430d25:	(bad)  
  430d26:	std    
  430d27:	inc    edx
  430d29:	(bad)  
  430d2a:	std    
  430d2b:	jmp    FWORD PTR [rsi-0x8]
  430d2e:	std    
  430d2f:	inc    edx
  430d31:	(bad)  
  430d32:	std    
  430d33:	inc    edx
  430d35:	(bad)  
  430d36:	std    
  430d37:	inc    edx
  430d39:	(bad)  
  430d3a:	std    
  430d3b:	inc    edx
  430d3d:	(bad)  
  430d3e:	std    
  430d3f:	inc    edx
  430d41:	(bad)  
  430d42:	std    
  430d43:	inc    edx
  430d45:	(bad)  
  430d46:	std    
  430d47:	inc    edx
  430d49:	(bad)  
  430d4a:	std    
  430d4b:	inc    edx
  430d4d:	(bad)  
  430d4e:	std    
  430d4f:	inc    edx
  430d51:	(bad)  
  430d52:	std    
  430d53:	inc    edx
  430d55:	(bad)  
  430d56:	std    
  430d57:	inc    edx
  430d59:	(bad)  
  430d5a:	std    
  430d5b:	inc    edx
  430d5d:	(bad)  
  430d5e:	std    
  430d5f:	inc    edx
  430d61:	(bad)  
  430d62:	std    
  430d63:	inc    edx
  430d65:	(bad)  
  430d66:	std    
  430d67:	inc    edx
  430d69:	(bad)  
  430d6a:	std    
  430d6b:	inc    edx
  430d6d:	(bad)  
  430d6e:	std    
  430d6f:	inc    edx
  430d71:	(bad)  
  430d72:	std    
  430d73:	inc    edx
  430d75:	(bad)  
  430d76:	std    
  430d77:	inc    edx
  430d79:	(bad)  
  430d7a:	std    
  430d7b:	inc    edx
  430d7d:	(bad)  
  430d7e:	std    
  430d7f:	inc    edx
  430d81:	(bad)  
  430d82:	std    
  430d83:	inc    edx
  430d85:	(bad)  
  430d86:	std    
  430d87:	inc    edx
  430d89:	(bad)  
  430d8a:	std    
  430d8b:	inc    edx
  430d8d:	(bad)  
  430d8e:	std    
  430d8f:	inc    edx
  430d91:	(bad)  
  430d92:	std    
  430d93:	inc    edx
  430d95:	(bad)  
  430d96:	std    
  430d97:	inc    edx
  430d99:	(bad)  
  430d9a:	std    
  430d9b:	inc    edx
  430d9d:	(bad)  
  430d9e:	std    
  430d9f:	inc    edx
  430da1:	(bad)  
  430da2:	std    
  430da3:	inc    edx
  430da5:	(bad)  
  430da6:	std    
  430da7:	inc    edx
  430da9:	(bad)  
  430daa:	std    
  430dab:	inc    edx
  430dad:	(bad)  
  430dae:	std    
  430daf:	inc    edx
  430db1:	(bad)  
  430db2:	std    
  430db3:	inc    edx
  430db5:	(bad)  
  430db6:	std    
  430db7:	inc    edx
  430db9:	(bad)  
  430dba:	std    
  430dbb:	inc    edx
  430dbd:	(bad)  
  430dbe:	std    
  430dbf:	inc    edx
  430dc1:	(bad)  
  430dc2:	std    
  430dc3:	inc    edx
  430dc5:	(bad)  
  430dc6:	std    
  430dc7:	inc    edx
  430dc9:	(bad)  
  430dca:	std    
  430dcb:	push   QWORD PTR [rsi-0x3d000203]
  430dd1:	(bad)  
  430dd2:	std    
  430dd3:	inc    edx
  430dd5:	(bad)  
  430dd6:	std    
  430dd7:	inc    edx
  430dd9:	(bad)  
  430dda:	std    
  430ddb:	inc    edx
  430ddd:	(bad)  
  430dde:	std    
  430ddf:	inc    edx
  430de1:	(bad)  
  430de2:	std    
  430de3:	inc    edx
  430de5:	(bad)  
  430de6:	std    
  430de7:	inc    edx
  430de9:	(bad)  
  430dea:	std    
  430deb:	push   QWORD PTR [rsi-0x3d000203]
  430df1:	(bad)  
  430df2:	std    
  430df3:	inc    edx
  430df5:	(bad)  
  430df6:	std    
  430df7:	inc    edx
  430df9:	(bad)  
  430dfa:	std    
  430dfb:	inc    edx
  430dfd:	(bad)  
  430dfe:	std    
  430dff:	inc    edx
  430e01:	(bad)  
  430e02:	std    
  430e03:	inc    edx
  430e05:	(bad)  
  430e06:	std    
  430e07:	inc    edx
  430e09:	(bad)  
  430e0a:	std    
  430e0b:	inc    edx
  430e0d:	(bad)  
  430e0e:	std    
  430e0f:	inc    edx
  430e11:	(bad)  
  430e12:	std    
  430e13:	inc    edx
  430e15:	(bad)  
  430e16:	std    
  430e17:	inc    edx
  430e19:	(bad)  
  430e1a:	std    
  430e1b:	(bad)  
  430e1c:	js     0x430e19
  430e1e:	std    
  430e1f:	(bad)  
  430e20:	js     0x430e1d
  430e22:	std    
  430e23:	inc    edx
  430e25:	(bad)  
  430e26:	std    
  430e27:	inc    edx
  430e29:	(bad)  
  430e2a:	std    
  430e2b:	inc    edx
  430e2d:	(bad)  
  430e2e:	std    
  430e2f:	inc    edx
  430e31:	(bad)  
  430e32:	std    
  430e33:	inc    edx
  430e35:	(bad)  
  430e36:	std    
  430e37:	inc    edx
  430e39:	(bad)  
  430e3a:	std    
  430e3b:	inc    edx
  430e3d:	(bad)  
  430e3e:	std    
  430e3f:	inc    edx
  430e41:	(bad)  
  430e42:	std    
  430e43:	inc    edx
  430e45:	(bad)  
  430e46:	std    
  430e47:	inc    edx
  430e49:	(bad)  
  430e4a:	std    
  430e4b:	inc    edx
  430e4d:	(bad)  
  430e4e:	std    
  430e4f:	inc    edx
  430e51:	(bad)  
  430e52:	std    
  430e53:	inc    edx
  430e55:	(bad)  
  430e56:	std    
  430e57:	inc    edx
  430e59:	(bad)  
  430e5a:	std    
  430e5b:	inc    edx
  430e5d:	(bad)  
  430e5e:	std    
  430e5f:	inc    edx
  430e61:	(bad)  
  430e62:	std    
  430e63:	inc    edx
  430e65:	(bad)  
  430e66:	std    
  430e67:	inc    edx
  430e69:	(bad)  
  430e6a:	std    
  430e6b:	inc    edx
  430e6d:	(bad)  
  430e6e:	std    
  430e6f:	inc    edx
  430e71:	(bad)  
  430e72:	std    
  430e73:	inc    edx
  430e75:	(bad)  
  430e76:	std    
  430e77:	inc    edx
  430e79:	(bad)  
  430e7a:	std    
  430e7b:	inc    edx
  430e7d:	(bad)  
  430e7e:	std    
  430e7f:	inc    edx
  430e81:	(bad)  
  430e82:	std    
  430e83:	inc    edx
  430e85:	(bad)  
  430e86:	std    
  430e87:	inc    edx
  430e89:	(bad)  
  430e8a:	std    
  430e8b:	inc    edx
  430e8d:	(bad)  
  430e8e:	std    
  430e8f:	inc    edx
  430e91:	(bad)  
  430e92:	std    
  430e93:	inc    edx
  430e95:	(bad)  
  430e96:	std    
  430e97:	inc    edx
  430e99:	(bad)  
  430e9a:	std    
  430e9b:	inc    edx
  430e9d:	(bad)  
  430e9e:	std    
  430e9f:	inc    edx
  430ea1:	(bad)  
  430ea2:	std    
  430ea3:	inc    edx
  430ea5:	(bad)  
  430ea6:	std    
  430ea7:	inc    edx
  430ea9:	(bad)  
  430eaa:	std    
  430eab:	inc    edx
  430ead:	(bad)  
  430eae:	std    
  430eaf:	inc    edx
  430eb1:	(bad)  
  430eb2:	std    
  430eb3:	inc    edx
  430eb5:	(bad)  
  430eb6:	std    
  430eb7:	inc    edx
  430eb9:	(bad)  
  430eba:	std    
  430ebb:	inc    edx
  430ebd:	(bad)  
  430ebe:	std    
  430ebf:	inc    edx
  430ec1:	(bad)  
  430ec2:	std    
  430ec3:	inc    edx
  430ec5:	(bad)  
  430ec6:	std    
  430ec7:	inc    edx
  430ec9:	(bad)  
  430eca:	std    
  430ecb:	inc    edx
  430ecd:	(bad)  
  430ece:	std    
  430ecf:	inc    edx
  430ed1:	(bad)  
  430ed2:	std    
  430ed3:	inc    edx
  430ed5:	(bad)  
  430ed6:	std    
  430ed7:	inc    edx
  430ed9:	(bad)  
  430eda:	std    
  430edb:	inc    edx
  430edd:	(bad)  
  430ede:	std    
  430edf:	inc    edx
  430ee1:	(bad)  
  430ee2:	std    
  430ee3:	inc    edx
  430ee5:	(bad)  
  430ee6:	std    
  430ee7:	inc    edx
  430ee9:	(bad)  
  430eea:	std    
  430eeb:	inc    edx
  430eed:	(bad)  
  430eee:	std    
  430eef:	inc    edx
  430ef1:	(bad)  
  430ef2:	std    
  430ef3:	inc    edx
  430ef5:	(bad)  
  430ef6:	std    
  430ef7:	inc    edx
  430ef9:	(bad)  
  430efa:	std    
  430efb:	inc    edx
  430efd:	(bad)  
  430efe:	std    
  430eff:	inc    edx
  430f01:	(bad)  
  430f02:	std    
  430f03:	inc    edx
  430f05:	(bad)  
  430f06:	std    
  430f07:	inc    edx
  430f09:	(bad)  
  430f0a:	std    
  430f0b:	inc    edx
  430f0d:	(bad)  
  430f0e:	std    
  430f0f:	inc    edx
  430f11:	(bad)  
  430f12:	std    
  430f13:	inc    edx
  430f15:	(bad)  
  430f16:	std    
  430f17:	inc    edx
  430f19:	(bad)  
  430f1a:	std    
  430f1b:	inc    edx
  430f1d:	(bad)  
  430f1e:	std    
  430f1f:	inc    edx
  430f21:	(bad)  
  430f22:	std    
  430f23:	inc    edx
  430f25:	(bad)  
  430f26:	std    
  430f27:	inc    edx
  430f29:	(bad)  
  430f2a:	std    
  430f2b:	inc    edx
  430f2d:	(bad)  
  430f2e:	std    
  430f2f:	inc    DWORD PTR [rbx-0x8]
  430f32:	std    
  430f33:	(bad)  
  430f34:	cmp    edi,ebp
  430f36:	std    
  430f37:	(bad)  
  430f38:	cmp    edi,ebp
  430f3a:	std    
  430f3b:	call   QWORD PTR [rbx+rdi*8-0x3]
  430f3f:	call   FWORD PTR [rdx]
  430f41:	std    
  430f42:	std    
  430f43:	call   QWORD PTR [rbx+rdi*8-0x3]
  430f47:	jmp    QWORD PTR [rdi+0x54fffdfc]
  430f4d:	sti    
  430f4e:	std    
  430f4f:	jmp    QWORD PTR [rdi+0xfffdfc]
	...
  430f61:	add    BYTE PTR [rax],al
  430f63:	add    dl,al
  430f65:	add    BYTE PTR [rax],al
  430f67:	add    BYTE PTR [rax],al
  430f69:	add    BYTE PTR [rax],al
  430f6b:	add    BYTE PTR [rdx-0x6e000000],cl
  430f71:	add    BYTE PTR [rax],al
  430f73:	add    dl,ah
  430f75:	add    BYTE PTR [rax],al
  430f77:	add    dl,ah
  430f79:	add    BYTE PTR [rax],al
  430f7b:	add    dl,bh
	...
  430fa1:	add    BYTE PTR [rcx],al
  430fa3:	(bad)  
  430fa4:	add    al,0x1
  430fa6:	add    BYTE PTR [rdi],al
  430fa8:	add    eax,DWORD PTR [rbx]
  430faa:	add    eax,DWORD PTR [rbx]
  430fac:	add    BYTE PTR [rcx],al
  430fae:	add    BYTE PTR [rdi],al
  430fb0:	(bad)  
  430fb1:	add    eax,DWORD PTR [rip+0x603]        # 0x4315ba
  430fb7:	add    BYTE PTR [rsi],al
  430fb9:	add    BYTE PTR [rbx],al
  430fbb:	(bad)  
  430fbc:	(bad)  
  430fbd:	add    eax,DWORD PTR [rsi]
  430fbf:	add    BYTE PTR [rsi],al
  430fc1:	(bad)  
  430fc2:	(bad)  
  430fc3:	(bad)  
	...
  430fe4:	add    BYTE PTR [rax],al
  430fe6:	add    BYTE PTR [rdx],al
  430fe8:	add    eax,0x5000500
	...
  430ff9:	add    BYTE PTR [rsi],al
  430ffb:	add    BYTE PTR [rax],al
  430ffd:	add    BYTE PTR [rax],al
  430fff:	(bad)  
	...
  431024:	add    BYTE PTR [rcx],al
  431026:	add    BYTE PTR [rdi],al
  431028:	add    BYTE PTR [rax],al
  43102a:	add    BYTE PTR [rax],al
  43102c:	add    BYTE PTR [rcx],al
  43102e:	add    BYTE PTR [rdi],al
	...
  431038:	add    BYTE PTR [rax],al
  43103a:	add    BYTE PTR [rbx],al
  43103c:	add    eax,DWORD PTR [rax]
	...
  43105e:	add    BYTE PTR [rax],al
  431060:	add    BYTE PTR [rcx],al
	...
  43107e:	add    BYTE PTR [rax],al
  431080:	xor    BYTE PTR [rcx],dh
  431082:	xor    dh,BYTE PTR [rbx]
  431084:	xor    al,0x35
  431086:	ss (bad) 
  431088:	cmp    BYTE PTR [rcx],bh
  43108a:	(bad)  
  43108b:	(bad)
	...
  43109c:	add    BYTE PTR [rax+0x40c3],cl
  4310a2:	add    BYTE PTR [rax],al
  4310a4:	add    BYTE PTR [rax],al
  4310a6:	jg     0x4310eb
  4310a8:	add    BYTE PTR [rax],al
  4310aa:	add    bh,al
  4310ac:	add    dh,bh
  4310ae:	inc    DWORD PTR [rsi+0x0]
  4310b1:	(bad)  
  4310b2:	jg     0x4310fb
  4310b4:	add    BYTE PTR [rax],al
  4310b6:	add    bh,cl
  4310b8:	add    BYTE PTR [rax],al
  4310ba:	add    BYTE PTR [rdi+0x0],cl
  4310bd:	add    BYTE PTR [rax+0x4f],al
  4310c3:	pop    rdi
  4310c4:	add    BYTE PTR [rax],al
  4310c6:	add    bh,bl
  4310c8:	add    BYTE PTR [rax],al
  4310ca:	sbb    BYTE PTR [rdi+0x17],0xb7
  4310ce:	push   rcx
  4310cf:	pop    rax
  4310d0:	(bad)  
  4310d1:	mov    bh,0x51
  4310d3:	fadd   DWORD PTR [rax]
  4310d5:	sbb    al,0x46
  4310d8:	add    BYTE PTR [rdi-0x48ffb7af],dh
  4310de:	push   rcx
  4310df:	enter  0x0,0x0
	...
  4310eb:	add    BYTE PTR [rax],al
  4310ed:	loopne 0x43115e
  4310ef:	add    BYTE PTR [rax],al
  4310f2:	add    BYTE PTR [rax],al
  4310f4:	add    BYTE PTR [rax],al
  4310f6:	loopne 0x4310b8
  4310f8:	add    BYTE PTR [rax],al
  4310fa:	add    BYTE PTR [rax],al
  4310fc:	sar    bh,0xdf
  4310ff:	add    BYTE PTR [rax],al
  431102:	add    BYTE PTR [rax],al
  431104:	loopne 0x431105
  431106:	out    dx,eax
  431107:	add    BYTE PTR [rax],al
  43110a:	add    BYTE PTR [rax],al
  43110c:	add    BYTE PTR [rax],al
  43110e:	loopne 0x4310d1
  431110:	add    BYTE PTR [rax],al
  431112:	sar    bh,0xff
  431115:	(bad)  
  431116:	fild   WORD PTR [rcx+0x0]
  431119:	add    al,ah
  43111b:	(bad)  
  43111c:	(bad)  
  43111d:	(bad)  
  43111e:	out    dx,eax
  43111f:	add    BYTE PTR [r8],al
  431122:	add    BYTE PTR [rax],al
  431124:	add    BYTE PTR [rax],al
  431126:	loopne 0x43116b
  431128:	add    BYTE PTR [rax],al
  43112a:	add    BYTE PTR [rax],al
  43112c:	add    BYTE PTR [rax],al
  43112e:	loopne 0x4310f3
  431130:	add    BYTE PTR [rax],al
  431132:	add    BYTE PTR [rax],al
  431134:	add    BYTE PTR [rax],al
  431136:	lock rex.XB sub BYTE PTR [r11+0x1c],al
  43113b:	jmp    0x43111f
  43113d:	or     al,BYTE PTR ss:[rbx+0x28]
  431141:	rex.XB sbb al,0xeb
  431144:	loop   0x43117c
  431146:	or     al,bl
  431148:	add    BYTE PTR [rax],al
  43114a:	add    BYTE PTR [rax],al
  43114c:	loopne 0x431184
  43114e:	or     al,BYTE PTR [rcx+0x0]
  431151:	add    BYTE PTR [rax],al
  431153:	add    al,ah
  431155:	ss or  al,cl
	...
  431180:	and    eax,0x64343649
  431185:	cs and eax,0x643230
	...
  43119f:	add    BYTE PTR [rcx],al
  4311a1:	add    BYTE PTR [rax],al
  4311a3:	add    BYTE PTR [rdx],cl
  4311a5:	add    BYTE PTR [rax],al
  4311a7:	add    BYTE PTR [rax+rax*1+0x0],ah
  4311ab:	add    al,ch
  4311ad:	add    eax,DWORD PTR [rax]
  4311af:	add    BYTE PTR [rax],dl
  4311b1:	(bad)  
  4311b2:	add    BYTE PTR [rax],al
  4311b4:	movabs al,ds:0x80000f4240000186
  4311bd:	xchg   esi,eax
  4311be:	cwde   
  4311bf:	add    BYTE PTR [rax],al
  4311c1:	loope  0x4311b8
  4311c3:	add    eax,0x3b9aca00
	...
  431200:	add    DWORD PTR [rax],eax
  431202:	add    BYTE PTR [rax],al
  431204:	or     al,BYTE PTR [rax]
  431206:	add    BYTE PTR [rax],al
  431208:	add    BYTE PTR fs:[rax],al
  43120b:	add    al,ch
  43120d:	add    eax,DWORD PTR [rax]
  43120f:	add    BYTE PTR [rax],dl
  431211:	(bad)  
  431212:	add    BYTE PTR [rax],al
  431214:	movabs al,ds:0x80000f4240000186
  43121d:	xchg   esi,eax
  43121e:	cwde   
  43121f:	add    BYTE PTR [rax],al
  431221:	loope  0x431218
  431223:	add    eax,0x3b9aca00
  431228:	add    al,BYTE PTR [rax]
  43122a:	add    BYTE PTR [rax],al
  43122c:	add    ah,ah
  43122e:	or     edx,DWORD PTR [rdi+rdx*1+0x0]
  431232:	add    BYTE PTR [rax],al
  431234:	add    al,ch
  431236:	jbe    0x431280
  431238:	call   0x43123d
  43123d:	adc    BYTE PTR [rbp+0x918d4],ah
  431243:	add    BYTE PTR [rax],al
  431245:	movabs al,ds:0x400000005af34e72
  43124e:	jp     0x431260
  431250:	jle    0x4311df
  431252:	add    eax,DWORD PTR [rax]
  431254:	add    BYTE PTR [rax-0x790d5b3a],al
  43125a:	and    eax,DWORD PTR [rax]
  43125c:	add    BYTE PTR [rax],al
  43125e:	shr    DWORD PTR [rdi+0x78],0x45
  431262:	movsxd eax,DWORD PTR [rcx]
  431264:	add    BYTE PTR [rax],al
  431266:	mov    bl,BYTE PTR [rbp-0x4d]
  431269:	mov    dh,0xe0
  43126b:	or     eax,0xa7640000
  431270:	add    al,0x23
  431272:	(bad)  
  431273:	mov    al,BYTE PTR [rax]
  431275:	add    al,ch
  431277:	mov    DWORD PTR [rip+0x2d000000],eax        # 0x2d43127d
  43127d:	pop    rsi
  43127e:	(bad)  
  43127f:	imul   eax,DWORD PTR [rax],0x0
  431282:	adc    BYTE PTR [rbx+0x36],ah
  431285:	add    BYTE PTR [rax],al
  431287:	add    ch,al
  431289:	lods   eax,DWORD PTR ds:[rsi]
  43128a:	leave  
  43128b:	xor    eax,0xdea00000
  431290:	(bad)  
  431291:	add    al,BYTE PTR [rax]
  431293:	add    BYTE PTR [rdx+0x19e0c9],bh
  431299:	add    BYTE PTR [rax-0x4e],al
  43129c:	sub    eax,0x4a000015
  4312a1:	loope  0x43126a
  4312a3:	add    al,BYTE PTR [rax]
  4312a5:	add    BYTE PTR [rax+0xd3c2f6],al
  4312ab:	add    ch,ch
  4312ad:	int3   
  4312ae:	(bad)  
  4312af:	sbb    eax,DWORD PTR [rax]
  4312b1:	add    BYTE PTR [rax],al
  4312b3:	movabs eax,ds:0x1614014800084595
  4312bc:	add    BYTE PTR [rax],al
  4312be:	add    BYTE PTR [rdx-0x2e],cl
  4312c1:	mov    bh,0x52
  4312c3:	add    dl,dl
  4312c5:	or     al,0xc8
  4312c7:	fadd   QWORD PTR [rax]
  4312c9:	add    BYTE PTR [rax],al
  4312cb:	in     al,0x3c
  4312cd:	cmp    eax,DWORD PTR cs:[rbx]
  4312d0:	cmp    al,0x80
  4312d2:	rcr    BYTE PTR [rdi-0x18000000],1
  4312d8:	pop    rsi
  4312d9:	(bad)  
  4312da:	rex.WRXB and BYTE PTR [r9+0x2],r12b
  4312de:	and    eax,0x3e
  4312e3:	adc    BYTE PTR [rcx],al
  4312e5:	add    BYTE PTR [rax],al
  4312e7:	add    BYTE PTR [rsi-0x35bce1f1],ch
  4312ed:	(bad)  
  4312ee:	jb     0x43135d
  4312f0:	add    BYTE PTR [rax],al
  4312f2:	add    BYTE PTR [rax+0xc],ah
  4312f8:	rcr    BYTE PTR [rsp+rbp*1+0x74edea9f],1
  4312ff:	rex.RX add BYTE PTR [rax],r8b
  431302:	add    BYTE PTR [rax+0x7e],al
  431305:	add    BYTE PTR [rax],al
  431307:	add    BYTE PTR [rdx],ah
  431309:	and    BYTE PTR [rsi-0x6eb4d9c9],bh
  43130f:	rol    BYTE PTR [rax],0x0
  431312:	add    BYTE PTR [rax+0x4ee],al
  431318:	pop    rbx
  431319:	rex.B ins DWORD PTR es:[rdi],dx
  43131b:	sub    eax,0x85acef81
  431320:	xor    QWORD PTR [r8],r8
  431323:	add    BYTE PTR [rbx+0xac6448d],dl
  431329:	pop    rbx
  43132a:	sar    DWORD PTR [rax],0x9
  43132d:	in     eax,dx
  43132e:	add    DWORD PTR [rax],eax
  431330:	rol    BYTE PTR [rdi-0x719b4153],0x8d
  431337:	(bad)  
  431338:	(bad)  
  431339:	rex.X adc eax,DWORD PTR [rax]
  43133c:	(bad)  
  43133d:	rex.WRB (bad) 
  43133f:	jb     0x431329
  431341:	pop    QWORD PTR [rdi-0x3f6831d5]
  431347:	add    BYTE PTR [rip+0x107bc907],dl        # 0x10bedc54
  43134d:	lahf   
  43134e:	rex.WXB mov r11b,0x10
  431351:	out    dx,al
  431352:	test   DWORD PTR [rdi],eax
  431354:	fld    DWORD PTR [rsi-0x26]
  431357:	(bad)  
  431358:	movabs al,ds:0x7a4b3b4ca800f436
  431361:	(bad)  
  431362:	xchg   BYTE PTR [rdx+0x40],bl
  431365:	and    cl,BYTE PTR [rdx+0x209]
  43136b:	add    BYTE PTR [rbx-0x3b0faf02],dl
  431371:	lods   al,BYTE PTR ds:[rsi]
  431372:	rex.XB mov DWORD PTR [r8+0x1d5f6556],eax
  431379:	add    BYTE PTR [rax],al
  43137b:	add    bl,al
  43137d:	icebp  
  43137e:	sub    DWORD PTR [rbx-0x55],esp
  431381:	mov    edi,0x61005ca4
  431386:	cmc    
  431387:	mov    ecx,0x125
  43138c:	movabs eax,ds:0x9e6f7cb5dfa371
  431395:	retf   0x4395
  431398:	jp     0x4313a5
  43139a:	add    BYTE PTR [rax],al
  43139c:	push   rax
  43139d:	jo     0x431401
  43139f:	mov    esp,0x305adf14
  4313a4:	add    ah,ah
  4313a6:	fldenv [rbx+0x72cb]
  4313ac:	and    DWORD PTR [rbx-0x28],esp
  4313af:	pop    rbx
  4313b0:	(bad)  
  4313b1:	mov    dh,0x8c
  4313b3:	jrcxz  0x4313b5
  4313b5:	call   0x7c347a3c
  4313ba:	add    al,0x0
  4313bc:	push   rdx
  4313bd:	fbstp  TBYTE PTR [rbx-0x6a]
  4313c0:	adc    BYTE PTR [rdi+rdi*2],ah
  4313c3:	jrcxz  0x4313c5
  4313c5:	adc    BYTE PTR [rip+0x2cd76f01],bl        # 0x2d1a82cc
  4313cb:	add    BYTE PTR [rcx+rdi*4],bh
  4313ce:	xchg   al,ah
  4313d0:	movabs al,ds:0x5e0b22a000e2f768
  4313d9:	push   0xffffffffffffffc0
  4313db:	add    DWORD PTR [rax+0x3c],esp
  4313de:	rex.XB vmovhps xmm13,xmm7,QWORD PTR [rdx+0x5a4000dd]
  4313e7:	outs   dx,DWORD PTR ds:[rsi]
  4313e8:	mov    bl,0x27
  4313ea:	test   BYTE PTR [rcx],dl
  4313ec:	enter  0xa05b,0xb4
  4313f0:	test   dh,bl
  4313f2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4313f3:	test   al,0x0
  4313f5:	add    BYTE PTR [rsi+0x298d0559],0xaf
  4313fc:	(bad)  
  4313fd:	xchg   ebp,eax
  4313fe:	rex.XB (bad) 
  431400:	sub    esi,DWORD PTR [rcx+0x9670]
  431406:	rex.B jg 0x43140f
  431409:	add    BYTE PTR [rax],al
  43140b:	add    BYTE PTR [rdx],dh
  43140d:	(bad)  
  43140e:	lahf   
  43140f:	xlat   BYTE PTR ds:[rbx]
  431410:	(bad)  
  431411:	fisub  DWORD PTR [rbx+0x66ebb28e]
  431417:	loopne 0x431419
  431419:	add    BYTE PTR [rdx+0x44f8],cl
  43141f:	add    cl,bh
  431421:	adc    eax,0x87d26c3b
  431426:	xchg   dx,ax
  431428:	std    
  431429:	xor    al,0x5
  43142b:	(bad)  
  43142c:	add    BYTE PTR [rax],al
  43142e:	fs mov ch,0xac
  431431:	add    al,BYTE PTR [rax]
  431433:	add    BYTE PTR [rdi+0x3b3a4edb],bh
  431439:	rex.WRX add QWORD PTR [rax-0x57cbee17],r15
  431440:	add    BYTE PTR [rax],al
  431442:	call   0x5dce5c
  431447:	add    BYTE PTR [rbp-0x6b],bh
  43144a:	adc    al,0x47
  43144c:	push   rsp
  43144d:	(bad)  
  43144e:	or     eax,0x8b31a30
  431453:	xchg   edx,eax
  431454:	add    BYTE PTR [rax],al
  431456:	adc    bl,bl
  431458:	rex.RX or r8d,DWORD PTR [rcx]
  43145b:	add    bl,ah
  43145d:	(bad)  
  43145e:	int    0xc6
  431460:	rex.WRB pop QWORD PTR [r10+0x56ff0ce0]
  431467:	mov    ah,0x0
  431469:	add    BYTE PTR [rax+0xa70c38e],ah
  43146f:	add    dh,ah
  431471:	fs or  al,ah
  431474:	or     DWORD PTR [rcx-0x9823ae7],ebx
  43147a:	or     eax,DWORD PTR gs:[rax]
  43147d:	add    BYTE PTR [rax-0x6e],al
  431480:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  431481:	addr32 push 0x67f10300
  431487:	test   al,0x5a
  431489:	cli    
  43148a:	push   QWORD PTR [rdx+0x71fba0e7]
  431490:	add    BYTE PTR [rax],al
  431492:	xor    BYTE PTR [rsi+0x4140c78],0x24
  431499:	push   0xf
  43149b:	xchg   esp,eax
  43149c:	mov    bh,al
  43149e:	(bad)  
  43149f:	std    
  4314a0:	or     eax,0x73d449
  4314a5:	add    BYTE PTR [rax],al
  4314a7:	and    DWORD PTR [rbp+0x7128c87c],esi
  4314ad:	and    eax,0xcb54c89a
  4314b2:	std    
  4314b3:	jmp    0x431438
  4314b5:	fimul  DWORD PTR [rdx-0x7a]
  4314b8:	add    BYTE PTR [rax],al
  4314ba:	add    BYTE PTR [rdx+0x1],cl
  4314bd:	add    BYTE PTR [rax],al
  4314bf:	add    BYTE PTR [rcx],bl
  4314c1:	(bad)  
  4314c3:	xchg   edi,eax
  4314c4:	jae    0x43153c
  4314c6:	add    eax,0xe9f14dd6
  4314cb:	(bad)  
  4314cc:	and    BYTE PTR [rcx+0x3eec],cl
  4314d2:	add    ah,ah
  4314d4:	sldt   WORD PTR [rax]
  4314d7:	add    BYTE PTR [rdx],al
  4314d9:	mov    bh,0x50
  4314db:	out    dx,al
  4314dc:	and    BYTE PTR [rax+0x6d045c36],0x23
  4314e3:	(bad)  
  4314e4:	rex.W pop rbx
  4314e6:	cmp    eax,0x75
  4314eb:	call   0x43158f
  4314f0:	(bad)  
  4314f1:	es (bad) 
  4314f3:	rex.WRXB add QWORD PTR [r13+0x22],r8
  4314f7:	(bad)  
  4314f8:	sub    al,0x42
  4314fa:	(bad)  
  4314fb:	xlat   BYTE PTR ds:[rbx]
  4314fc:	fst    DWORD PTR [rax+0x9465]
  431502:	add    BYTE PTR [rax],dl
  431504:	cmp    DWORD PTR [rsi],eax
  431506:	add    BYTE PTR [rax],al
  431508:	in     al,dx
  431509:	jl     0x431492
  43150b:	(bad)  
  43150c:	adc    dh,BYTE PTR [rdx-0x6a42faaa]
  431512:	(bad)  
  431513:	imul   edi,DWORD PTR [rdx-0x58],0xcbf7
  43151a:	add    BYTE PTR [rax+0x3e3a],ah
  431520:	cmp    cl,ah
  431522:	rex.WX jmp 0x4314dd
  431525:	hlt    
  431526:	(bad)  
  431527:	xor    eax,0x2261d969
  43152c:	retf   0xac94
  43152f:	test   DWORD PTR [rax],0x4d400000
  431535:	outs   dx,BYTE PTR ds:[rsi]
  431536:	add    al,BYTE PTR [rax]
  431538:	xor    cl,ah
  43153a:	in     al,dx
  43153b:	xor    BYTE PTR [rcx],dh
  43153d:	(bad)  
  43153e:	fst    QWORD PTR [rip+0x57d27e23]        # 0x58159367
  431544:	out    0xcf,al
  431546:	mov    ebp,0xac
  43154b:	add    BYTE PTR [rbx],0x4f
  43154e:	sbb    BYTE PTR [rax],al
  431550:	hlt    
  431551:	stc    
  431552:	(bad)  
  431553:	jmp    0xffffffffdaeaad45
  431558:	fs in  eax,dx
  43155a:	cmp    BYTE PTR [rsi+0x1],ch
  43155d:	(bad)  
  43155e:	push   0xffffffffffffffbf
  431560:	(bad)  
  431561:	(bad)  
  431562:	repz add BYTE PTR [rax+0x461c7fc3],dl
  431569:	out    dx,eax
  43156a:	mov    ecx,DWORD PTR [rdx+0x4e3945ef]
  431570:	or     dh,BYTE PTR [rsi]
  431572:	and    eax,0x7edd877a
  431577:	or     DWORD PTR [rbp-0x40e3025d],esp
  43157d:	pop    rax
  43157e:	ja     0x4315e9
  431580:	pop    rdx
  431581:	mov    ebx,0x1c640e3c
  431586:	je     0x43154d
  431588:	rex.RXB cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43158a:	hlt    
  43158b:	pop    rsi
  43158c:	jbe    0x4315f2
  43158e:	call   0xffffffffa9ba8bb4
  431593:	(bad)  
  431594:	mov    edx,DWORD PTR [rcx+0x5f]
  431597:	mov    gs,eax
  431599:	sbb    ecx,DWORD PTR [rcx+0x3b6]
  43159f:	add    bh,al
  4315a1:	mov    BYTE PTR [rsi+0x13ec9db5],cl
  4315a7:	push   rbx
  4315a8:	movabs eax,ds:0x108fb92f75329eaa
  4315b1:	(bad)  
  4315b2:	pop    rbx
  4315b3:	and    DWORD PTR [rip+0xffffffffc9000000],esp        # 0xffffffffc94315b9
  4315b9:	push   rdi
  4315ba:	xchg   ecx,eax
  4315bb:	(bad)  
  4315bc:	and    edi,DWORD PTR [rsi]
  4315be:	(bad)  
  4315bf:	ds rex.WRXB stos BYTE PTR es:[rdi],al
  4315c2:	xor    bh,dl
  4315c4:	xchg   ebx,eax
  4315c5:	fidivr DWORD PTR [rbx]
  4315c7:	popf   
  4315c8:	movabs al,ds:0xdc000001724d8ee6
  4315d1:	ins    DWORD PTR es:[rdi],dx
  4315d2:	lods   eax,DWORD PTR ds:[rsi]
  4315d3:	jmp    0x43163c
  4315d5:	ins    DWORD PTR es:[rdi],dx
  4315d6:	enter  0x1c73,0xa7
  4315da:	cli    
  4315db:	(bad)
  4315de:	push   rsi
  4315df:	and    al,0x40
  4315e1:	add    dl,BYTE PTR [rbp+0xe7d07]
  4315e7:	add    BYTE PTR [rdx+rcx*2+0x460d34c6],bl
  4315ee:	(bad)  
  4315ef:	test   DWORD PTR [rcx],ebx
  4315f1:	xchg   edx,ecx
  4315f3:	mov    ebx,0x6b61618a
  4315f8:	adc    BYTE PTR [rsi],0xd2
  4315fb:	rex.WXB in al,0x90
  4315fe:	add    BYTE PTR [rax],al
  431600:	sbb    eax,0x890fbeea
  431605:	mov    esp,0x46fe3a4a
  43160a:	jmp    0xffffffffce127c64
  43160f:	xor    DWORD PTR [rax],eax
  431611:	loope  0x431647
  431613:	imul   al
  431615:	test   al,0x5
  431617:	add    BYTE PTR ds:0x5d5d9d75,ah
  43161e:	jmp    0x431666
  431620:	in     eax,dx
  431621:	(bad)
  431624:	add    eax,0xf20a1a
  431629:	retf   0x9e10
  43162c:	(bad)  
  43162d:	cdq    
  43162e:	cmp    BYTE PTR [rax],al
  431630:	push   0x73
  431632:	xchg   ebx,eax
  431633:	movs   DWORD PTR es:[rdi],DWORD PTR es:[rsi]
  431635:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  431636:	xor    ebp,eax
  431638:	rex.WXB movabs r11,0xe400746504388f1f
  431642:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  431643:	sub    al,0xdd
  431645:	cli    
  431646:	xor    eax,0xc2822b02
  43164b:	xor    DWORD PTR [rdi+0x78],0x50f2b3f0
  431652:	cmp    eax,0xf22a3197
  431657:	mov    eax,DWORD PTR [rax]
  431659:	call   0xffffffffccead4ec
  43165e:	sbb    edx,DWORD PTR [rsi]
  431660:	mov    ch,0x15
  431662:	cdq    
  431663:	adc    DWORD PTR [rbx+0x790764b4],ebp
  431669:	sub    DWORD PTR [rbp-0x18],esp
  43166c:	icebp  
  43166d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  43166e:	jne    0x4316e7
  431670:	add    BYTE PTR [rax],dl
  431672:	xchg   ebp,eax
  431673:	jno    0x4315fb
  431675:	(bad)  
  431676:	adc    eax,0xfad912dd
  43167b:	scas   eax,DWORD PTR es:[rdi]
  43167c:	mov    bh,0xe
  43167e:	out    dx,eax
  43167f:	movabs r14,0xaa987b6e13f39e
  431689:	movabs al,ds:0x6fd2
	...
  4316be:	add    BYTE PTR [rax],al
  4316c0:	add    ch,bh
  4316c2:	cli    
  4316c3:	div    esp
  4316c5:	icebp  
  4316c6:	out    dx,al
  4316c7:	jmp    0x4316b1
  4316c9:	in     eax,0xe2
  4316cb:	loopne 0x4316ab
  4316cd:	(bad)  
  4316cf:	fcom   st(6)
  4316d1:	(bad)  
  4316d2:	rcl    al,cl
  4316d4:	(bad)  
  4316d5:	int    0xcc
  4316d7:	retf   
  4316d8:	retf   0xc8c9
  4316db:	mov    esi,0xc5c5c5c5
  4316e1:	(bad)
  4316e5:	sar    BYTE PTR [rdi-0x41414142],0xbe
  4316ec:	mov    esi,0xbebebebe
  4316f1:	mov    esi,0xc2c1c0bf
  4316f6:	ret    
  4316f7:	(bad)  
  4316f8:	(bad)
  4316fb:	leave  
  4316fc:	retf   
  4316fd:	int    0xcf
  4316ff:	rcl    ebx,1
  431701:	(bad)  
  431702:	(bad)  
  431703:	(bad)  
  431704:	xlat   BYTE PTR ds:[rbx]
  431705:	(bad)  
  431707:	fstp   st(7)
  431709:	loope  0x4316ee
  43170b:	in     eax,0xe7
  43170d:	jmp    0x4317fd
	...
  43173e:	add    BYTE PTR [rax],al
  431740:	add    DWORD PTR [rax],eax
  431742:	add    BYTE PTR [rax],al
  431744:	add    al,BYTE PTR [rax]
  431746:	add    BYTE PTR [rax],al
  431748:	add    al,BYTE PTR [rax]
  43174a:	add    BYTE PTR [rax],al
  43174c:	add    eax,DWORD PTR [rax]
  43174e:	add    BYTE PTR [rax],al
  431750:	add    eax,DWORD PTR [rax]
  431752:	add    BYTE PTR [rax],al
  431754:	add    al,0x0
  431756:	add    BYTE PTR [rax],al
  431758:	add    al,0x0
  43175a:	add    BYTE PTR [rax],al
  43175c:	add    al,0x0
  43175e:	add    BYTE PTR [rax],al
  431760:	add    eax,0x5000000
  431765:	add    BYTE PTR [rax],al
  431767:	add    BYTE PTR [rsi],al
  431769:	add    BYTE PTR [rax],al
  43176b:	add    BYTE PTR [rsi],al
  43176d:	add    BYTE PTR [rax],al
  43176f:	add    BYTE PTR [rsi],al
  431771:	add    BYTE PTR [rax],al
  431773:	add    BYTE PTR [rdi],al
  431775:	add    BYTE PTR [rax],al
  431777:	add    BYTE PTR [rdi],al
  431779:	add    BYTE PTR [rax],al
  43177b:	add    BYTE PTR [rax],cl
  43177d:	add    BYTE PTR [rax],al
  43177f:	add    BYTE PTR [rax],cl
  431781:	add    BYTE PTR [rax],al
  431783:	add    BYTE PTR [rcx],cl
  431785:	add    BYTE PTR [rax],al
  431787:	add    BYTE PTR [rcx],cl
  431789:	add    BYTE PTR [rax],al
  43178b:	add    BYTE PTR [rcx],cl
  43178d:	add    BYTE PTR [rax],al
  43178f:	add    BYTE PTR [rdx],cl
  431791:	add    BYTE PTR [rax],al
  431793:	add    BYTE PTR [rdx],cl
  431795:	add    BYTE PTR [rax],al
  431797:	add    BYTE PTR [rbx],cl
  431799:	add    BYTE PTR [rax],al
  43179b:	add    BYTE PTR [rbx],cl
  43179d:	add    BYTE PTR [rax],al
  43179f:	add    BYTE PTR [rbx],cl
  4317a1:	add    BYTE PTR [rax],al
  4317a3:	add    BYTE PTR [rax+rax*1],cl
  4317a6:	add    BYTE PTR [rax],al
  4317a8:	or     al,0x0
  4317aa:	add    BYTE PTR [rax],al
  4317ac:	or     eax,0xd000000
  4317b1:	add    BYTE PTR [rax],al
  4317b3:	add    BYTE PTR [rsi],cl
  4317b5:	add    BYTE PTR [rax],al
  4317b7:	add    BYTE PTR [rsi],cl
  4317b9:	add    BYTE PTR [rax],al
  4317bb:	add    BYTE PTR [rsi],cl
  4317bd:	add    BYTE PTR [rax],al
  4317bf:	add    BYTE PTR [rdi],cl
  4317c1:	add    BYTE PTR [rax],al
  4317c3:	add    BYTE PTR [rdi],cl
  4317c5:	add    BYTE PTR [rax],al
  4317c7:	add    BYTE PTR [rax],dl
  4317c9:	add    BYTE PTR [rax],al
  4317cb:	add    BYTE PTR [rax],dl
  4317cd:	add    BYTE PTR [rax],al
  4317cf:	add    BYTE PTR [rax],dl
  4317d1:	add    BYTE PTR [rax],al
  4317d3:	add    BYTE PTR [rcx],dl
  4317d5:	add    BYTE PTR [rax],al
  4317d7:	add    BYTE PTR [rcx],dl
  4317d9:	add    BYTE PTR [rax],al
  4317db:	add    BYTE PTR [rdx],dl
  4317dd:	add    BYTE PTR [rax],al
  4317df:	add    BYTE PTR [rdx],dl
  4317e1:	add    BYTE PTR [rax],al
  4317e3:	add    BYTE PTR [rbx],dl
  4317e5:	add    BYTE PTR [rax],al
  4317e7:	add    BYTE PTR [rbx],dl
  4317e9:	add    BYTE PTR [rax],al
  4317eb:	add    BYTE PTR [rbx],dl
  4317ed:	add    BYTE PTR [rax],al
  4317ef:	add    BYTE PTR [rax+rax*1],dl
  4317f2:	add    BYTE PTR [rax],al
  4317f4:	adc    al,0x0
  4317f6:	add    BYTE PTR [rax],al
  4317f8:	adc    eax,0x15000000
  4317fd:	add    BYTE PTR [rax],al
  4317ff:	add    BYTE PTR [rip+0x16000000],dl        # 0x16431805
  431805:	add    BYTE PTR [rax],al
  431807:	add    BYTE PTR [rsi],dl
  431809:	add    BYTE PTR [rax],al
  43180b:	add    BYTE PTR [rdi],dl
  43180d:	add    BYTE PTR [rax],al
  43180f:	add    BYTE PTR [rdi],dl
  431811:	add    BYTE PTR [rax],al
  431813:	add    BYTE PTR [rax],bl
  431815:	add    BYTE PTR [rax],al
  431817:	add    BYTE PTR [rax],bl
  431819:	add    BYTE PTR [rax],al
  43181b:	add    BYTE PTR [rax],bl
  43181d:	add    BYTE PTR [rax],al
  43181f:	add    BYTE PTR [rcx],bl
  431821:	add    BYTE PTR [rax],al
  431823:	add    BYTE PTR [rcx],bl
  431825:	add    BYTE PTR [rax],al
  431827:	add    BYTE PTR [rdx],bl
  431829:	add    BYTE PTR [rax],al
  43182b:	add    BYTE PTR [rdx],bl
  43182d:	add    BYTE PTR [rax],al
  43182f:	add    BYTE PTR [rdx],bl
  431831:	add    BYTE PTR [rax],al
  431833:	add    BYTE PTR [rbx],bl
  431835:	add    BYTE PTR [rax],al
  431837:	add    BYTE PTR [rbx],bl
  431839:	add    BYTE PTR [rax],al
  43183b:	add    BYTE PTR [rax+rax*1],bl
  43183e:	add    BYTE PTR [rax],al
  431840:	sbb    al,0x0
  431842:	add    BYTE PTR [rax],al
  431844:	sbb    al,0x0
  431846:	add    BYTE PTR [rax],al
  431848:	sbb    eax,0x1d000000
  43184d:	add    BYTE PTR [rax],al
  43184f:	add    BYTE PTR [rsi],bl
  431851:	add    BYTE PTR [rax],al
  431853:	add    BYTE PTR [rsi],bl
  431855:	add    BYTE PTR [rax],al
  431857:	add    BYTE PTR [rdi],bl
  431859:	add    BYTE PTR [rax],al
  43185b:	add    BYTE PTR [rdi],bl
  43185d:	add    BYTE PTR [rax],al
  43185f:	add    BYTE PTR [rdi],bl
  431861:	add    BYTE PTR [rax],al
  431863:	add    BYTE PTR [rax],ah
  431865:	add    BYTE PTR [rax],al
  431867:	add    BYTE PTR [rax],ah
  431869:	add    BYTE PTR [rax],al
  43186b:	add    BYTE PTR [rcx],ah
  43186d:	add    BYTE PTR [rax],al
  43186f:	add    BYTE PTR [rcx],ah
  431871:	add    BYTE PTR [rax],al
  431873:	add    BYTE PTR [rcx],ah
	...
  43187d:	add    BYTE PTR [rax],al
  43187f:	add    BYTE PTR [rbp+0x3a],bl
  431882:	add    BYTE PTR [rip+0x73252f73],ah        # 0x736847fb
	...
  431890:	push   rbp
  431891:	rex.WRX push rdx
  431893:	rex.RB
  431894:	rex.XB
  431895:	rex.WRXB
  431896:	rex.RXB
  431897:	rex.WRX
  431898:	rex.WB pop r10
  43189a:	rex.RB
  43189b:	and    BYTE PTR [rdi+0x70],r13b
  43189f:	je     0x43190a
  4318a1:	outs   dx,DWORD PTR ds:[rsi]
  4318a2:	outs   dx,BYTE PTR ds:[rsi]
  4318a3:	and    BYTE PTR [rsi+0x61],dh
  4318a6:	ins    BYTE PTR es:[rdi],dx
  4318a7:	jne    0x43190e
  4318a9:	and    BYTE PTR [rdi],ah
  4318ab:	and    eax,0x66202773
  4318b0:	outs   dx,DWORD PTR ds:[rsi]
  4318b1:	jb     0x4318d3
  4318b3:	(bad)  
  4318b4:	outs   dx,DWORD PTR ds:[rsi]
  4318b5:	outs   dx,DWORD PTR ds:[rsi]
  4318b6:	ins    BYTE PTR es:[rdi],dx
  4318b7:	gs (bad) 
  4318b9:	outs   dx,BYTE PTR ds:[rsi]
  4318ba:	and    BYTE PTR [rbx+0x65],dh
  4318bd:	je     0x431933
  4318bf:	imul   ebp,DWORD PTR [rsi+0x67],0x73252720
  4318c6:	(bad)  
  4318c7:	and    DWORD PTR [rdx],ecx
  4318c9:	add    BYTE PTR [rbx+0x6f],ah
  4318cc:	outs   dx,BYTE PTR ds:[rsi]
  4318cd:	imul   sp,WORD PTR [rdi+0x2e],0x63
  4318d3:	rex.WR outs dx,DWORD PTR ds:[rsi]
  4318d5:	outs   dx,DWORD PTR ds:[rsi]
  4318d6:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  4318da:	and    BYTE PTR [rsi+0x6f],ah
  4318dd:	jb     0x4318ff
  4318df:	jae    0x431946
  4318e1:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4318e5:	outs   dx,BYTE PTR ds:[rsi]
  4318e6:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4d475f
  4318ec:	or     DWORD PTR [rsi+0x6f],eax
  4318ef:	jne    0x43195f
  4318f1:	and    BYTE PTR fs:[rbx+0x65],dh
  4318f5:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4318f9:	outs   dx,BYTE PTR ds:[rsi]
  4318fa:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4d4773
  431900:	rex.RXB outs dx,DWORD PTR ds:[rsi]
  431902:	je     0x431924
  431904:	(bad)  
  431905:	and    BYTE PTR [rbp+0x61],ch
  431908:	je     0x43196d
  43190a:	push   0x9000a2e
  43190f:	push   rdx
  431910:	gs (bad) 
  431912:	movsxd ebp,DWORD PTR [rax+0x65]
  431915:	and    BYTE PTR fs:[rbp+0x4f],al
  431919:	rex.RX or r8b,BYTE PTR [rax]
  43191c:	jb     0x43191e
  43191e:	rex.XB outs dx,DWORD PTR ds:[rsi]
  431920:	jne    0x43198e
  431922:	and    BYTE PTR fs:[rsi+0x6f],ch
  431926:	je     0x431948
  431928:	outs   dx,DWORD PTR ds:[rsi]
  431929:	jo     0x431990
  43192b:	outs   dx,BYTE PTR ds:[rsi]
  43192c:	and    BYTE PTR [rdi],ah
  43192e:	and    eax,0x28202773
  431933:	and    eax,0xa2e2973
  431938:	add    BYTE PTR [rsi+0x6f],al
  43193b:	jne    0x4319ab
  43193d:	and    BYTE PTR fs:[rbx+0x6f],ah
  431941:	outs   dx,BYTE PTR ds:[rsi]
  431942:	data16 and BYTE PTR [rsi+0x69],ah
  431946:	ins    BYTE PTR es:[rdi],dx
  431947:	and    BYTE PTR gs:[rdi],ah
  43194a:	and    eax,0x25202773
  43194f:	jae    0x43197f
  431951:	or     al,BYTE PTR [rax]
  431953:	ins    BYTE PTR es:[edi],dx
  431955:	outs   dx,DWORD PTR ds:[rsi]
  431956:	(bad)
  43195b:	add    BYTE PTR [rax],al
  43195d:	add    BYTE PTR [rax],al
  43195f:	add    BYTE PTR [rbp+0x72],ah
  431962:	jb     0x4319d3
  431964:	jb     0x4319a0
  431966:	and    BYTE PTR [rbx+0x61],ah
  431969:	outs   dx,BYTE PTR ds:[rsi]
  43196a:	outs   dx,BYTE PTR ds:[rsi]
  43196b:	outs   dx,DWORD PTR ds:[rsi]
  43196c:	je     0x43198e
  43196e:	jae    0x4319e0
  431970:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  431974:	jns    0x431996
  431976:	(bad)  
  431977:	outs   dx,DWORD PTR ds:[rsi]
  431978:	je     0x4319e2
  43197a:	and    BYTE PTR [rax+0x6f],dh
  43197d:	jb     0x4319f3
  43197f:	and    BYTE PTR [rip+0x6e612064],ah        # 0x6ea439e9
  431985:	and    BYTE PTR fs:[rcx+0x6e],ch
  431989:	jae    0x4319ff
  43198b:	(bad)  
  43198c:	outs   dx,BYTE PTR ds:[rsi]
  43198d:	movsxd esp,DWORD PTR [rbp+0x20]
  431990:	and    eax,0xa2e73
  431995:	push   rbx
  431996:	jne    0x4319fb
  431998:	movsxd esp,DWORD PTR [rbp+0x73]
  43199b:	jae    0x4319d7
  43199d:	and    BYTE PTR [rbx+0x25],bl
  4319a0:	jae    0x4319ff
  4319a2:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4319a6:	imul   ebp,DWORD PTR [rsi+0x65],0x6e692064
  4319ad:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4d4826
  4319b3:	pop    rbx
  4319b4:	and    eax,0x6e205d73
  4319b9:	outs   dx,DWORD PTR ds:[rsi]
  4319ba:	je     0x4319dc
  4319bc:	outs   dx,WORD PTR ds:[rsi]
  4319be:	jne    0x431a2e
  4319c0:	fs or  al,BYTE PTR cs:[rax]
  4319c4:	rex.RX push rdx
  4319c6:	rex.RB
  4319c7:	rex.RB push r12
  4319c9:	rex.R push rbx
  4319cb:	rex.XB
  4319cc:	rex.WRXB
  4319cd:	rex.WRX
  4319ce:	rex.RX add BYTE PTR [rbx+0x65],r14b
  4319d2:	je     0x4319f4
  4319d4:	jo     0x431a48
  4319d6:	outs   dx,DWORD PTR ds:[rsi]
  4319d7:	addr32 jb 0x431a3b
  4319da:	ins    DWORD PTR es:[rdi],dx
  4319db:	ins    DWORD PTR es:[rdi],dx
  4319dc:	(bad)  
  4319dd:	je     0x431a48
  4319df:	movsxd esp,DWORD PTR [rcx+0x6c]
  4319e2:	ins    BYTE PTR es:[rdi],dx
  4319e3:	jns    0x4319e5
  4319e5:	sub    BYTE PTR [rsi+0x72],ah
  4319e8:	outs   dx,DWORD PTR ds:[rsi]
  4319e9:	ins    DWORD PTR es:[rdi],dx
  4319ea:	and    BYTE PTR [rsi+rax*2],ah
  4319ed:	push   rdx
  4319ee:	rex.RB
  4319ef:	rex.RB push r12
  4319f1:	rex.R push rbx
  4319f3:	rex.XB
  4319f4:	rex.WRXB
  4319f5:	rex.WRX
  4319f6:	rex.RX sub DWORD PTR [rax],r8d
  4319f9:	add    BYTE PTR [rax],al
  4319fb:	add    BYTE PTR [rax],al
  4319fd:	add    BYTE PTR [rax],al
  4319ff:	add    BYTE PTR [rsi],ch
  431a01:	cs and BYTE PTR cs:[rsi+rax*2],ah
  431a06:	push   rdx
  431a07:	rex.RB
  431a08:	rex.RB push r12
  431a0a:	rex.R push rbx
  431a0c:	rex.XB
  431a0d:	rex.WRXB
  431a0e:	rex.WRX
  431a0f:	rex.RX and BYTE PTR [rsi+0x6f],r13b
  431a13:	je     0x431a35
  431a15:	jae    0x431a7c
  431a17:	je     0x431a47
  431a19:	and    BYTE PTR [rax],ah
  431a1b:	push   rsp
  431a1c:	jb     0x431a97
  431a1e:	imul   ebp,DWORD PTR [rsi+0x67],0x52462420
  431a25:	rex.RB
  431a26:	rex.RB push r12
  431a28:	rex.R push rbx
  431a2a:	(bad)  
  431a2b:	gs je  0x431a91
  431a2e:	or     al,BYTE PTR cs:[rax]
  431a31:	rex.RX push rdx
  431a33:	rex.RB
  431a34:	rex.RB push r12
  431a36:	rex.R push rbx
	...
  431a40:	cs cs and BYTE PTR cs:[rsi+rax*2],ah
  431a46:	push   rdx
  431a47:	rex.RB
  431a48:	rex.RB push r12
  431a4a:	rex.R push rbx
  431a4c:	and    BYTE PTR [rsi+0x6f],ch
  431a4f:	je     0x431a71
  431a51:	jae    0x431ab8
  431a53:	je     0x431a83
  431a55:	and    BYTE PTR [rax],ah
  431a57:	push   rsp
  431a58:	jb     0x431ad3
  431a5a:	imul   ebp,DWORD PTR [rsi+0x67],0x4f482420
  431a61:	rex.WRB
  431a62:	rex.RB
  431a63:	or     al,BYTE PTR cs:[rax]
  431a66:	cs data16 jb 0x431acf
  431a6a:	gs je  0x431ad1
  431a6d:	jae    0x431a9d
  431a6f:	movsxd ebp,DWORD PTR [rdi+0x6e]
  431a72:	data16 add BYTE PTR [rax],ch
  431a75:	cs data16 jb 0x431ade
  431a79:	gs je  0x431ae0
  431a7c:	jae    0x431aac
  431a7e:	movsxd ebp,DWORD PTR [rdi+0x6e]
  431a81:	sub    WORD PTR [rax],ax
  431a84:	add    BYTE PTR [rax],al
  431a86:	add    BYTE PTR [rax],al
  431a88:	(bad)  
  431a89:	jae    0x431aee
  431a8b:	jb     0x431aee
  431a8d:	je     0x431af2
  431a8f:	push   0x65776a2f
  431a94:	(bad)  
  431a95:	ins    DWORD PTR es:[rdi],dx
  431a96:	js     0x431afd
  431a98:	sub    eax,0x6174636f
  431a9d:	jbe    0x431b04
  431a9f:	(bad)  
  431aa0:	xor    al,0x2e
  431aa2:	xor    ch,BYTE PTR [rsi]
  431aa4:	xor    DWORD PTR [rdi],ebp
  431aa6:	ja     0x431ade
  431aa8:	xor    al,0x2d
  431aaa:	xor    esi,DWORD PTR [rdx]
  431aac:	(bad)  
  431aad:	jne    0x431b22
  431aaf:	jb     0x431ae0
  431ab1:	js     0x431aeb
  431ab3:	ss pop rdi
  431ab5:	ss xor al,0x2d
  431ab8:	ja     0x431af0
  431aba:	xor    al,0x2d
  431abc:	ins    DWORD PTR es:[rdi],dx
  431abd:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  431ac4:	gs je  0x431b2a
  431ac7:	pop    rsp
  431ac8:	data16 jb 0x431b30
  431acb:	gs je  0x431b32
  431ace:	jae    0x431afe
  431ad0:	movsxd ebp,DWORD PTR [rdi+0x6e]
  431ad3:	data16 add BYTE PTR [rax],al
  431ad6:	add    BYTE PTR [rax],al
  431ad8:	cs cs and BYTE PTR cs:[rbp+0x72],al
  431ade:	jb     0x431b4f
  431ae0:	jb     0x431b02
  431ae2:	addr32 gs je 0x431b5a
  431ae6:	imul   ebp,DWORD PTR [rsi+0x67],0x2e2f7e20
  431aed:	data16 jb 0x431b55
  431af0:	gs je  0x431b57
  431af3:	jae    0x431b23
  431af5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  431af8:	data16 and BYTE PTR cs:[rax],ah
  431afc:	push   rsp
  431afd:	jb     0x431b78
  431aff:	imul   ebp,DWORD PTR [rsi+0x67],0x2e732520
  431b06:	or     al,BYTE PTR [rax]
  431b08:	sub    BYTE PTR [rbp+riz*2+0x66],ah
  431b0c:	(bad)  
  431b0d:	jne    0x431b7b
  431b0f:	je     0x431b3a
  431b11:	add    BYTE PTR [rdi+rbp*2+0x67],ch
  431b15:	imul   ebp,DWORD PTR [rsi+0x0],0x6f727265
  431b1c:	jb     0x431b58
  431b1e:	and    BYTE PTR [rsi+0x6f],ch
  431b21:	and    BYTE PTR [rbx+0x75],dh
  431b24:	movsxd ebp,DWORD PTR [rax+0x20]
  431b27:	jbe    0x431b8e
  431b29:	jb     0x431b9e
  431b2b:	imul   ebp,DWORD PTR [rdi+0x6e],0x7325203a
  431b32:	or     al,BYTE PTR [rax]
  431b34:	add    BYTE PTR [rax],al
  431b36:	add    BYTE PTR [rax],al
  431b38:	push   rbx
  431b39:	gs je  0x431bb0
  431b3c:	imul   ebp,DWORD PTR [rsi+0x67],0x73647420
  431b43:	and    BYTE PTR [rsi+0x65],dh
  431b46:	jb     0x431bbb
  431b48:	imul   ebp,DWORD PTR [rdi+0x6e],0x206f7420
  431b4f:	and    eax,0x30282073
  431b54:	js     0x431b7b
  431b56:	xor    BYTE PTR [rax+0x29],bh
  431b59:	or     al,BYTE PTR cs:[rax]
  431b5c:	jae    0x431bc3
  431b5e:	jb     0x431bd6
  431b60:	gs jb  0x431bd1
  431b63:	(bad)  
  431b64:	ins    DWORD PTR es:[rdi],dx
  431b65:	and    BYTE PTR gs:[rcx],ah
  431b68:	cmp    eax,0x4c554e20
  431b6d:	rex.WR add BYTE PTR [rax],r8b
  431b70:	jae    0x431bd7
  431b72:	jb     0x431bea
  431b74:	gs jb  0x431be5
  431b77:	(bad)  
  431b78:	ins    DWORD PTR es:[rdi],dx
  431b79:	and    BYTE PTR gs:[rcx],ah
  431b7c:	cmp    eax,0x4c554e20
  431b81:	rex.WR and BYTE PTR [rsi],r12b
  431b84:	and    BYTE PTR es:[rcx+0x64],ah
  431b88:	fs jb  0x431bab
  431b8b:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c9869b1
  431b91:	rex.WR add BYTE PTR [rax],r8b
  431b94:	add    BYTE PTR [rax],al
  431b96:	add    BYTE PTR [rax],al
  431b98:	push   rbx
  431b99:	gs (bad) 
  431b9b:	jb     0x431c00
  431b9d:	push   0x20676e69
  431ba2:	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
  431ba9:	movsxd esp,DWORD PTR [rbp+0x73]
  431bac:	and    BYTE PTR [rsi+0x69],ah
  431baf:	ins    BYTE PTR es:[rdi],dx
  431bb0:	and    BYTE PTR gs:[rip+0x73252f73],ah        # 0x73684b2a
  431bb7:	or     al,BYTE PTR cs:[rax]
  431bba:	rex.XB outs dx,DWORD PTR ds:[rsi]
  431bbc:	jne    0x431c2a
  431bbe:	outs   dx,BYTE PTR fs:[rsi]
  431bc0:	(bad)  
  431bc1:	je     0x431be3
  431bc3:	outs   dx,DWORD PTR ds:[rsi]
  431bc4:	jo     0x431c2b
  431bc6:	outs   dx,BYTE PTR ds:[rsi]
  431bc7:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4d4a40
  431bcd:	rex.WB outs dx,BYTE PTR ds:[rsi]
  431bcf:	je     0x431c36
  431bd1:	jb     0x431c39
  431bd3:	(bad)  
  431bd4:	movsxd esp,DWORD PTR [rbp+0x73]
  431bd7:	and    BYTE PTR [rsi+0x69],ah
  431bda:	ins    BYTE PTR es:[rdi],dx
  431bdb:	and    BYTE PTR gs:[rip+0x706f2073],ah        # 0x70b23c55
  431be2:	outs   dx,BYTE PTR gs:[rsi]
  431be4:	gs fs or al,BYTE PTR cs:[rax]
  431be9:	or     cl,BYTE PTR [rcx]
  431beb:	and    BYTE PTR [rax],al
  431bed:	add    BYTE PTR [rax],al
  431bef:	add    BYTE PTR [rsi+0x6f],al
  431bf2:	jne    0x431c62
  431bf4:	and    BYTE PTR fs:[rbp+0x61],ch
  431bf8:	je     0x431c5d
  431bfa:	push   0x20676e69
  431bff:	outs   dx,BYTE PTR gs:[rsi]
  431c01:	je     0x431c75
  431c03:	jns    0x431c25
  431c05:	outs   dx,WORD PTR ds:[rsi]
  431c07:	jb     0x431c29
  431c09:	push   0x2074736f
  431c0e:	and    eax,0xa2e73
  431c13:	jno    0x431c8a
  431c15:	gs jb  0x431c91
  431c18:	add    BYTE PTR [rsp+rbp*2+0x69],dh
  431c1c:	add    BYTE PTR [rsp+rcx*2+0x49],dl
  431c20:	and    BYTE PTR [rbx+0x65],dh
  431c23:	jb     0x431c9b
  431c25:	imul   esp,DWORD PTR [rbx+0x65],0x25000a2e
  431c2c:	add    BYTE PTR fs:[rip+0x64252e64],ah        # 0x64684a97
  431c33:	cs and eax,0x64252e64
  431c39:	add    BYTE PTR [rbp+rbp*2+0x70],dh
  431c3d:	pop    rdi
  431c3e:	jo     0x431caf
  431c40:	jb     0x431cb6
  431c42:	and    BYTE PTR [rip+0x2e732520],bh        # 0x2eb64168
  431c48:	and    BYTE PTR [rbp+rbp*2+0x70],dh
  431c4c:	pop    rdi
  431c4d:	imul   esi,DWORD PTR [rax+0x20],0x7325203d
  431c54:	or     al,BYTE PTR cs:[rax]
  431c57:	push   0x2074736f
  431c5c:	imul   sp,WORD PTR [rbp+0x6c],0x2064
  431c62:	and    eax,0xa2e73
  431c67:	push   rdx
  431c68:	gs jae 0x431cda
  431c6b:	ins    BYTE PTR es:[rdi],dx
  431c6c:	jbe    0x431cd3
  431c6e:	and    BYTE PTR fs:[rcx+0x50],cl
  431c72:	and    BYTE PTR [rcx+0x73],ah
  431c75:	and    BYTE PTR [rdi],ah
  431c77:	and    eax,0xa2e2773
  431c7c:	add    BYTE PTR [rax],al
  431c7e:	add    BYTE PTR [rax],al
  431c80:	rex.WRX (bad) 
  431c82:	ins    DWORD PTR es:[rdi],dx
  431c83:	and    BYTE PTR gs:[rdx+0x65],dh
  431c87:	jae    0x431cf8
  431c89:	ins    BYTE PTR es:[rdi],dx
  431c8a:	jne    0x431d00
  431c8c:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  431c93:	ins    BYTE PTR es:[rdi],dx
  431c94:	gs and BYTE PTR fs:[rsi+0x6f],ah
  431c99:	jb     0x431cbb
  431c9b:	rex.WB push r8
  431c9d:	and    BYTE PTR [rdi],ah
  431c9f:	and    eax,0xa2e2773
  431ca4:	add    BYTE PTR [rax],al
  431ca6:	outs   dx,BYTE PTR ds:[rsi]
  431ca7:	outs   dx,DWORD PTR ds:[rsi]
  431ca8:	je     0x431cca
  431caa:	add    BYTE PTR [rsp+rax*2+0x53],dl
  431cae:	push   rsi
  431caf:	rex.RB push r10
  431cb1:	add    BYTE PTR [rax],al
  431cb3:	add    BYTE PTR [rax],al
  431cb5:	add    BYTE PTR [rax],al
  431cb7:	add    BYTE PTR [rsp+rax*2+0x53],dl
  431cbb:	and    BYTE PTR [rsi+0x65],dh
  431cbe:	jb     0x431d33
  431cc0:	imul   ebp,DWORD PTR [rdi+0x6e],0x73732520
  431cc7:	gs je  0x431cea
  431cca:	je     0x431d3b
  431ccc:	and    BYTE PTR [rip+0x72662073],ah        # 0x72a93d45
  431cd2:	outs   dx,DWORD PTR ds:[rsi]
  431cd3:	ins    DWORD PTR es:[rdi],dx
  431cd4:	and    BYTE PTR [rsp+rdx*2],ah
  431cd7:	rex.R push rbx
  431cd9:	push   rsi
  431cda:	rex.RB push r10
  431cdc:	or     al,BYTE PTR cs:[rax]
  431cdf:	push   rsp
  431ce0:	rex.R push rbx
  431ce2:	rex.R push rbp
  431ce4:	rex.WRB push r8
  431ce6:	add    BYTE PTR [rax],al
  431ce8:	push   rbx
  431ce9:	gs je  0x431d60
  431cec:	imul   ebp,DWORD PTR [rsi+0x67],0x75642720
  431cf3:	ins    DWORD PTR es:[rdi],dx
  431cf4:	jo     0x431d55
  431cf6:	imul   bp,WORD PTR [rbp+riz*2+0x27],0x7420
  431cfd:	outs   dx,DWORD PTR ds:[rsi]
  431cfe:	and    BYTE PTR [rdi],ah
  431d00:	and    eax,0x66202773
  431d05:	jb     0x431d76
  431d07:	ins    DWORD PTR es:[rdi],dx
  431d08:	and    BYTE PTR [rsp+rdx*2],ah
  431d0b:	rex.R push rbx
  431d0d:	rex.R push rbp
  431d0f:	rex.WRB push r8
  431d11:	or     al,BYTE PTR cs:[rax]
  431d14:	push   rsp
  431d15:	rex.R push rbx
  431d17:	push   rax
  431d18:	rex.WRXB push r10
  431d1a:	push   rsp
  431d1b:	add    BYTE PTR [rax],al
  431d1d:	add    BYTE PTR [rax],al
  431d1f:	add    BYTE PTR [rbx+0x65],dl
  431d22:	je     0x431d98
  431d24:	imul   ebp,DWORD PTR [rsi+0x67],0x6f702720
  431d2b:	jb     0x431da1
  431d2d:	(bad)  
  431d2e:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  431d32:	and    eax,0x72662073
  431d37:	outs   dx,DWORD PTR ds:[rsi]
  431d38:	ins    DWORD PTR es:[rdi],dx
  431d39:	and    BYTE PTR [rsp+rdx*2],ah
  431d3c:	rex.R push rbx
  431d3e:	push   rax
  431d3f:	rex.WRXB push r10
  431d41:	push   rsp
  431d42:	or     al,BYTE PTR cs:[rax]
  431d45:	push   rsp
  431d46:	rex.R push rbx
  431d48:	rex.W
  431d49:	rex.WRXB push r11
  431d4b:	push   rsp
  431d4c:	add    BYTE PTR [rax],al
  431d4e:	add    BYTE PTR [rax],al
  431d50:	rex.WRX (bad) 
  431d52:	ins    DWORD PTR es:[rdi],dx
  431d53:	and    BYTE PTR gs:[rdx+0x65],dh
  431d57:	jae    0x431dc8
  431d59:	ins    BYTE PTR es:[rdi],dx
  431d5a:	jne    0x431dd0
  431d5c:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  431d63:	ins    BYTE PTR es:[rdi],dx
  431d64:	gs and BYTE PTR fs:[rsi+0x6f],ah
  431d69:	jb     0x431d8b
  431d6b:	(bad)  
  431d6c:	and    eax,0x66202773
  431d71:	jb     0x431de2
  431d73:	ins    DWORD PTR es:[rdi],dx
  431d74:	and    BYTE PTR [rsp+rdx*2],ah
  431d77:	rex.R push rbx
  431d79:	rex.W
  431d7a:	rex.WRXB push r11
  431d7c:	push   rsp
  431d7d:	or     al,BYTE PTR cs:[rax]
  431d80:	push   rbx
  431d81:	gs je  0x431df8
  431d84:	imul   ebp,DWORD PTR [rsi+0x67],0x20504920
  431d8b:	rex.B
  431d8c:	fs fs jb 0x431df5
  431d90:	jae    0x431e05
  431d92:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  431d96:	and    eax,0x25282073
  431d9b:	jae    0x431dc6
  431d9d:	and    BYTE PTR [rsi+0x72],ah
  431da0:	outs   dx,DWORD PTR ds:[rsi]
  431da1:	ins    DWORD PTR es:[rdi],dx
  431da2:	and    BYTE PTR [rsp+rdx*2],ah
  431da5:	rex.R push rbx
  431da7:	rex.W
  431da8:	rex.WRXB push r11
  431daa:	push   rsp
  431dab:	or     al,BYTE PTR cs:[rax]
  431dae:	push   rbx
  431daf:	pop    rcx
  431db0:	rex.X
  431db1:	push   r11
  431db3:	add    BYTE PTR [r12+rax*2+0x53],r10b
  431db8:	rex.R push rbp
  431dba:	rex.WRB push r8
  431dbc:	rex.XB
  431dbd:	rex.WRXB
  431dbe:	rex.WRX
  431dbf:	rex.RX
  431dc0:	rex.WB
  431dc1:	rex.RXB add BYTE PTR [r8],r8b
  431dc4:	add    BYTE PTR [rax],al
  431dc6:	add    BYTE PTR [rax],al
  431dc8:	rex.RXB
  431dc9:	gs je  0x431e40
  431dcc:	imul   ebp,DWORD PTR [rsi+0x67],0x6e6f6320
  431dd3:	outs   dx,BYTE PTR ds:[rsi]
  431dd4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  431dd9:	outs   dx,BYTE PTR ds:[rsi]
  431dda:	and    BYTE PTR [rcx+0x6e],ch
  431ddd:	outs   dx,WORD PTR ds:[rsi]
  431ddf:	jb     0x431e4e
  431de1:	(bad)  
  431de2:	je     0x431e4d
  431de4:	outs   dx,DWORD PTR ds:[rsi]
  431de5:	outs   dx,BYTE PTR ds:[rsi]
  431de6:	and    BYTE PTR [rsi+0x6f],ah
  431de9:	jb     0x431e0b
  431deb:	pop    rbx
  431dec:	and    eax,0xa2e5d73
  431df1:	add    BYTE PTR [rax],al
  431df3:	add    BYTE PTR [rax],al
  431df5:	add    BYTE PTR [rax],al
  431df7:	add    BYTE PTR [rcx+0x74],al
  431dfa:	je     0x431e61
  431dfc:	ins    DWORD PTR es:[rdi],dx
  431dfd:	jo     0x431e73
  431dff:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
  431e06:	jb     0x431e6d
  431e08:	(bad)  
  431e09:	and    BYTE PTR fs:[rbx+0x6f],ah
  431e0d:	outs   dx,BYTE PTR ds:[rsi]
  431e0e:	data16 and BYTE PTR [rsi+0x69],ah
  431e12:	ins    BYTE PTR es:[rdi],dx
  431e13:	gs jae 0x431e44
  431e16:	or     al,BYTE PTR [rax]
  431e18:	rex.RX (bad) 
  431e1a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206e6920
  431e22:	jb     0x431e89
  431e24:	(bad)  
  431e25:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6e6f6320
  431e2d:	data16 and BYTE PTR [rsi+0x69],ah
  431e31:	ins    BYTE PTR es:[rdi],dx
  431e32:	gs and BYTE PTR cs:[rax],ah
  431e36:	push   rsp
  431e37:	jb     0x431eb2
  431e39:	imul   ebp,DWORD PTR [rsi+0x67],0x746e6920
  431e40:	gs jb  0x431ea9
  431e43:	(bad)  
  431e44:	movsxd esp,DWORD PTR [rbp+0x20]
  431e47:	imul   bp,WORD PTR [rbp+riz*2+0x73],0xa2e
  431e4e:	add    BYTE PTR [rsp+rax*2+0x53],dl
  431e52:	push   rcx
  431e53:	push   rbp
  431e54:	rex.RB push r10
  431e56:	pop    rcx
  431e57:	add    BYTE PTR [rbx+0x65],dl
  431e5a:	je     0x431ed0
  431e5c:	imul   ebp,DWORD PTR [rsi+0x67],0x72657320
  431e63:	jbe    0x431eca
  431e65:	jb     0x431e87
  431e67:	je     0x431ed8
  431e69:	and    BYTE PTR [rip+0x72662073],ah        # 0x72a93ee2
  431e6f:	outs   dx,DWORD PTR ds:[rsi]
  431e70:	ins    DWORD PTR es:[rdi],dx
  431e71:	and    BYTE PTR [rsp+rdx*2],ah
  431e74:	rex.R push rbx
  431e76:	push   rcx
  431e77:	push   rbp
  431e78:	rex.RB push r10
  431e7a:	pop    rcx
  431e7b:	or     al,BYTE PTR cs:[rax]
  431e7e:	rex.WR outs dx,DWORD PTR ds:[rsi]
  431e80:	outs   dx,DWORD PTR ds:[rsi]
  431e81:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  431e85:	and    BYTE PTR [rsi+0x6f],ah
  431e88:	jb     0x431eaa
  431e8a:	jae    0x431ef1
  431e8c:	jb     0x431f04
  431e8e:	gs jb  0x431eb1
  431e91:	and    eax,0x2e2e2e73
  431e96:	or     al,BYTE PTR cs:[rax]
  431e99:	add    BYTE PTR [rax],al
  431e9b:	add    BYTE PTR [rax],al
  431e9d:	add    BYTE PTR [rax],al
  431e9f:	add    BYTE PTR [rdi+rbp*2+0x6f],cl
  431ea3:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  431ea7:	and    BYTE PTR [rsi+0x6f],ah
  431eaa:	jb     0x431ecc
  431eac:	jae    0x431f13
  431eae:	jb     0x431f26
  431eb0:	gs jb  0x431ed3
  431eb3:	imul   ebp,DWORD PTR [rsi+0x20],0x656c6966
  431eba:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4d4d33
  431ec0:	imul   ebp,DWORD PTR cs:[rsi+0x74],0x61667265
  431ec8:	movsxd esp,DWORD PTR [rbp+0x73]
  431ecb:	add    BYTE PTR [rdi+rbp*2+0x6f],cl
  431ecf:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  431ed3:	and    BYTE PTR [rsi+0x6f],ah
  431ed6:	jb     0x431ef8
  431ed8:	jae    0x431f3f
  431eda:	jb     0x431f52
  431edc:	gs jb  0x431eff
  431edf:	imul   ebp,DWORD PTR [rsi+0x20],0xa2e7325
  431ee6:	add    BYTE PTR [rax],al
  431ee8:	rex.WR outs dx,DWORD PTR ds:[rsi]
  431eea:	outs   dx,DWORD PTR ds:[rsi]
  431eeb:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  431eef:	and    BYTE PTR [rsi+0x6f],ah
  431ef2:	jb     0x431f14
  431ef4:	jae    0x431f5b
  431ef6:	jb     0x431f6e
  431ef8:	gs jb  0x431f1b
  431efb:	imul   ebp,DWORD PTR [rsi+0x20],0x692f7325
  431f02:	outs   dx,BYTE PTR ds:[rsi]
  431f03:	je     0x431f6a
  431f05:	jb     0x431f6d
  431f07:	(bad)  
  431f08:	movsxd esp,DWORD PTR [rbp+0x73]
  431f0b:	or     al,BYTE PTR cs:[rax]
  431f0e:	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
  431f15:	movsxd esp,DWORD PTR [rbp+0x73]
	...
  431f20:	push   rbx
  431f21:	gs je  0x431f98
  431f24:	imul   ebp,DWORD PTR [rsi+0x67],0x70692720
  431f2b:	pop    rdi
  431f2c:	jo     0x431f9d
  431f2e:	jb     0x431fa4
  431f30:	(bad)  
  431f31:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  431f35:	and    eax,0x72662073
  431f3a:	outs   dx,DWORD PTR ds:[rsi]
  431f3b:	ins    DWORD PTR es:[rdi],dx
  431f3c:	and    BYTE PTR [rsp+rdx*2],ah
  431f3f:	rex.R push rbx
  431f41:	push   rax
  431f42:	rex.WRXB push r10
  431f44:	push   rsp
  431f45:	or     al,BYTE PTR cs:[rax]
  431f48:	push   rbx
  431f49:	gs je  0x431fc0
  431f4c:	imul   ebp,DWORD PTR [rsi+0x67],0x70692720
  431f53:	pop    rdi
  431f54:	jo     0x431fc5
  431f56:	jb     0x431fcc
  431f58:	(bad)  
  431f59:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  431f5d:	and    eax,0x73612064
  431f62:	and    BYTE PTR [rcx+0x20],ah
  431f65:	addr32 jne 0x431fcd
  431f68:	jae    0x431fdd
  431f6a:	or     al,BYTE PTR cs:[rax]
  431f6d:	add    BYTE PTR [rax],al
  431f6f:	add    BYTE PTR [rsi+0x61],al
  431f72:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  431f7a:	imul   bp,WORD PTR [rsi+0x64],0x5b20
  431f80:	and    eax,0x69205d73
  431f85:	outs   dx,BYTE PTR ds:[rsi]
  431f86:	and    BYTE PTR [rbx+0x6f],ah
  431f89:	outs   dx,BYTE PTR ds:[rsi]
  431f8a:	imul   sp,WORD PTR [rdi+0x75],0x6172
  431f90:	je     0x431ffb
  431f92:	outs   dx,DWORD PTR ds:[rsi]
  431f93:	outs   dx,BYTE PTR ds:[rsi]
  431f94:	and    BYTE PTR [rsi+0x69],ah
  431f97:	ins    BYTE PTR es:[rdi],dx
  431f98:	gs jae 0x431fd6
  431f9b:	and    BYTE PTR [rdx+rsi*2+0x79],dh
  431f9f:	imul   ebp,DWORD PTR [rsi+0x67],0x73252720
  431fa6:	(bad)  
  431fa7:	and    BYTE PTR [rcx+0x6e],ch
  431faa:	jae    0x432020
  431fac:	gs (bad) 
  431fae:	fs or  al,BYTE PTR cs:[rax]
  431fb2:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  431fb6:	outs   dx,BYTE PTR ds:[rsi]
  431fb7:	je     0x432018
  431fb9:	movsxd ebp,DWORD PTR [rax+0x61]
  431fbc:	jb     0x432031
  431fbe:	gs je  0x431fc1
  431fc1:	je     0x432027
  431fc3:	jae    0x432024
  431fc5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  431fc8:	imul   sp,WORD PTR [rdi+0x5f],0x6f6c
  431fce:	imul   ebp,DWORD PTR [esi+0x3a],0x20732520
  431fd6:	imul   esi,DWORD PTR [rbx+0x20],0xa2e7325
  431fdd:	add    BYTE PTR [rcx+riz*2+0x74],ah
  431fe1:	(bad)  
  431fe2:	(bad)  
  431fe4:	jae    0x43204b
  431fe6:	pop    rdi
  431fe7:	outs   dx,BYTE PTR ds:[rsi]
  431fe8:	(bad)  
  431fe9:	ins    DWORD PTR es:[rdi],dx
  431fea:	add    BYTE PTR gs:[rsi+0x69],al
  431fee:	outs   dx,BYTE PTR ds:[rsi]
  431fef:	(bad)  
  431ff0:	ins    BYTE PTR es:[rdi],dx
  431ff1:	and    BYTE PTR [rbx+0x6f],ah
  431ff4:	outs   dx,BYTE PTR ds:[rsi]
  431ff5:	outs   dx,BYTE PTR ds:[rsi]
  431ff6:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  431ffb:	outs   dx,BYTE PTR ds:[rsi]
  431ffc:	and    BYTE PTR [rax+0x61],dh
  431fff:	jb     0x432062
  432001:	ins    DWORD PTR es:[rdi],dx
  432002:	gs je  0x43206a
  432005:	jb     0x43207a
  432007:	cmp    cl,BYTE PTR [rdx]
  432009:	add    BYTE PTR [rbx+0x65],dh
  43200c:	jb     0x432084
  43200e:	gs jb  0x432070
  432011:	outs   dx,BYTE PTR ds:[rsi]
  432012:	(bad)  
  432013:	ins    DWORD PTR es:[rdi],dx
  432014:	add    BYTE PTR gs:[rcx],cl
  432017:	and    eax,0x20733032
  43201c:	cmp    eax,0xa732520
  432021:	add    BYTE PTR [rbx+0x65],dh
  432024:	jb     0x43209c
  432026:	gs jb  0x432088
  432029:	push   0x5f74736f
  43202e:	outs   dx,BYTE PTR ds:[rsi]
  43202f:	(bad)  
  432030:	ins    DWORD PTR es:[rdi],dx
  432031:	add    BYTE PTR gs:[rcx+0x70],ch
  432035:	pop    rdi
  432036:	(bad)  
  432037:	fs fs jb 0x43203b
  43203b:	imul   ebp,DWORD PTR [rsi+0x73],0x636e6174
  432042:	gs pop rdi
  432044:	outs   dx,BYTE PTR ds:[rsi]
  432045:	(bad)  
  432046:	ins    DWORD PTR es:[rdi],dx
  432047:	add    BYTE PTR gs:[rax+0x6f],dh
  43204b:	jb     0x4320c1
  43204d:	add    BYTE PTR [rcx],cl
  43204f:	and    eax,0x20733032
  432054:	cmp    eax,0xa642520
  432059:	add    BYTE PTR [rbp+0x61],ch
  43205c:	push   0x6f
  43205e:	jb     0x4320bf
  432060:	jbe    0x4320c7
  432062:	jb     0x4320d7
  432064:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e696d00
  43206b:	outs   dx,DWORD PTR ds:[rsi]
  43206c:	jb     0x4320cd
  43206e:	jbe    0x4320d5
  432070:	jb     0x4320e5
  432072:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f6c6200
  432079:	movsxd ebp,DWORD PTR [rbx+0x5f]
  43207c:	jae    0x4320e7
  43207e:	jp     0x4320e5
  432080:	add    BYTE PTR [rcx+riz*2+0x6e],ch
  432084:	addr32 jne 0x4320e8
  432087:	add    BYTE PTR gs:[ebx+0x65],dh
  43208c:	jb     0x432104
  43208e:	gs jb  0x4320f0
  432091:	movsxd ebp,DWORD PTR [rax+0x61]
  432094:	jb     0x432109
  432096:	gs je  0x432099
  432099:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43209c:	outs   dx,BYTE PTR ds:[rsi]
  43209d:	movsxd esi,DWORD PTR gs:[rdi+rbx*2+0x74]
  4320a2:	imul   ebp,DWORD PTR [rbp+0x65],0x74756f
  4320a9:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  4320ad:	outs   dx,BYTE PTR ds:[rsi]
  4320ae:	je     0x43210f
  4320b0:	push   0x5f74736f
  4320b5:	outs   dx,BYTE PTR ds:[rsi]
  4320b6:	(bad)  
  4320b7:	ins    DWORD PTR es:[rdi],dx
  4320b8:	add    BYTE PTR gs:[rbp+0x73],dh
  4320bc:	gs pop rdi
  4320be:	jne    0x432134
  4320c0:	xor    WORD PTR [rsi],si
  4320c3:	add    BYTE PTR [rcx+0x70],ah
  4320c6:	jo     0x432127
  4320c8:	outs   dx,BYTE PTR ds:[rsi]
  4320c9:	(bad)  
  4320ca:	ins    DWORD PTR es:[rdi],dx
  4320cb:	add    BYTE PTR gs:[rbp+0x73],dh
  4320cf:	gs jb  0x432131
  4320d2:	outs   dx,BYTE PTR ds:[rsi]
  4320d3:	(bad)  
  4320d4:	ins    DWORD PTR es:[rdi],dx
  4320d5:	add    BYTE PTR gs:[rcx+rbp*2+0x62],ch
  4320da:	jb     0x43213d
  4320dc:	jb     0x432157
  4320de:	add    BYTE PTR [rdx+0x75],ah
  4320e1:	ins    BYTE PTR es:[rdi],dx
  4320e2:	imul   ebx,DWORD PTR [rdi+0x63],0x6f
  4320e6:	jo     0x432161
  4320e8:	add    BYTE PTR [rbx+0x75],dh
  4320eb:	jo     0x43215d
  4320ed:	jb     0x432154
  4320ef:	jae    0x432164
  4320f1:	pop    rdi
  4320f2:	ins    BYTE PTR es:[rdi],dx
  4320f3:	(bad)  
  4320f4:	outs   dx,BYTE PTR ds:[rsi]
  4320f5:	addr32 jne 0x432159
  4320f8:	add    BYTE PTR gs:[ebp+0x6e],ah
  4320fd:	movsxd esi,DWORD PTR [rdx+0x79]
  432100:	jo     0x432176
  432102:	and    BYTE PTR [rbp+riz*2+0x76],ch
  432106:	gs ins BYTE PTR es:[rdi],dx
  432108:	add    BYTE PTR [rcx+0x75],dh
  43210b:	gs jb  0x432187
  43210e:	pop    rdi
  43210f:	je     0x43217a
  432111:	ins    DWORD PTR es:[rdi],dx
  432112:	outs   dx,DWORD PTR gs:[rsi]
  432114:	jne    0x43218a
  432116:	add    BYTE PTR [rcx+riz*2+0x74],ah
  43211a:	(bad)  
  43211b:	(bad)  
  43211d:	jae    0x432184
  43211f:	add    BYTE PTR [rbp+rsi*2+0x6d],ah
  432123:	jo     0x432184
  432125:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6564
  43212c:	(bad)  
  43212d:	jne    0x432196
  43212f:	pop    rdi
  432130:	data16 ins BYTE PTR es:[rdi],dx
  432132:	(bad)  
  432133:	addr32 jae 0x432136
  432136:	or     DWORD PTR [rip+0x20733032],esp        # 0x20b6516e
  43213c:	cmp    eax,0xa782520
  432141:	add    BYTE PTR [rbp+riz*2+0x78],dh
  432145:	je     0x4321a6
  432147:	jae    0x4321b2
  432149:	jp     0x4321b0
  43214b:	add    BYTE PTR [rbp+0x6d],ah
  43214e:	jne    0x4321bc
  432150:	pop    rdi
  432151:	ins    BYTE PTR es:[rdi],dx
  432152:	imul   esi,DWORD PTR [rsp+rsi*2+0x6c],0x6e655f65
  43215a:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x72657300
  432162:	jbe    0x4321c9
  432164:	jb     0x4321c5
  432166:	jb     0x4321cd
  432168:	(bad)  
  432169:	ins    BYTE PTR es:[rdi],dx
  43216a:	ins    DWORD PTR es:[rdi],dx
  43216b:	pop    rdi
  43216c:	outs   dx,BYTE PTR ds:[rsi]
  43216d:	(bad)  
  43216e:	ins    DWORD PTR es:[rdi],dx
  43216f:	add    BYTE PTR gs:[rbx+0x65],dh
  432173:	jb     0x4321eb
  432175:	gs jb  0x4321d7
  432178:	jae    0x4321ea
  43217a:	outs   dx,BYTE PTR ds:[rsi]
  43217b:	add    BYTE PTR [rbx+0x61],ah
  43217e:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x7263
  432185:	ins    BYTE PTR es:[rdi],dx
  432186:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6863
  43218d:	movsxd ebp,DWORD PTR gs:[rbx+0x5f]
  432191:	jae    0x432206
  432193:	ins    BYTE PTR es:[rdi],dx
  432194:	pop    rdi
  432195:	push   0x6e74736f
  43219a:	(bad)  
  43219b:	ins    DWORD PTR es:[rdi],dx
  43219c:	add    BYTE PTR gs:[rdx+riz*2+0x5f],ah
  4321a1:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  4321a8:	add    BYTE PTR gs:[rdx+0x65],dh
  4321ac:	(bad)  
  4321ad:	outs   dx,DWORD PTR fs:[rsi]
  4321af:	outs   dx,BYTE PTR ds:[rsi]
  4321b0:	ins    BYTE PTR es:[rdi],dx
  4321b1:	jns    0x432212
  4321b3:	imul   ebp,DWORD PTR [rsi+0x74],0x746e65
  4321ba:	or     DWORD PTR [rip+0x203d2073],esp        # 0x20804233
  4321c0:	(bad)  
  4321c1:	and    eax,0xa2773
  4321c6:	je     0x43222c
  4321c8:	jae    0x4321ea
  4321ca:	jbe    0x432231
  4321cc:	jb     0x432241
  4321ce:	imul   ebp,DWORD PTR [rdi+0x6e],0x696e6900
  4321d5:	je     0x432240
  4321d7:	(bad)  
  4321d8:	ins    BYTE PTR es:[rdi],dx
  4321d9:	and    BYTE PTR [rdx+0x6c],ah
  4321dc:	outs   dx,DWORD PTR ds:[rsi]
  4321dd:	movsxd ebp,DWORD PTR [rbx+0x20]
  4321e0:	jae    0x43224b
  4321e2:	jp     0x432249
  4321e4:	add    BYTE PTR [rbx+0x77],dh
  4321e7:	(bad)  
  4321e8:	jo     0x43220a
  4321ea:	(bad)
  4321ef:	outs   dx,BYTE PTR ds:[rsi]
  4321f0:	and    BYTE PTR [rcx+riz*2+0x74],ah
  4321f4:	gs jae 0x4321f7
  4321f7:	outs   dx,BYTE PTR gs:[rsi]
  4321f9:	(bad)  
  4321fa:	(bad)  
  4321fb:	ins    BYTE PTR es:[rdi],dx
  4321fc:	and    BYTE PTR gs:[rdi+0x73],ah
  432200:	jae    0x432263
  432202:	jo     0x43226d
  432204:	and    BYTE PTR [rbp+riz*2+0x6c],ah
  432208:	gs addr32 (bad) 
  43220b:	je     0x432276
  43220d:	outs   dx,DWORD PTR ds:[rsi]
  43220e:	outs   dx,BYTE PTR ds:[rsi]
  43220f:	add    BYTE PTR [rbp+rsi*2+0x6d],ah
  432213:	jo     0x432235
  432215:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6564
  43221c:	(bad)  
  43221d:	jne    0x432286
  43221f:	and    BYTE PTR [rsi+0x6c],ah
  432222:	(bad)  
  432223:	addr32 jae 0x432226
  432226:	je     0x432291
  432228:	ins    DWORD PTR es:[rdi],dx
  432229:	outs   dx,DWORD PTR gs:[rsi]
  43222b:	jne    0x4322a1
  43222d:	add    BYTE PTR [rcx+0x75],dh
  432230:	gs jb  0x4322ac
  432233:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
  432237:	outs   dx,DWORD PTR gs:[rsi]
  432239:	jne    0x4322af
  43223b:	add    BYTE PTR [rbx+0x6f],ah
  43223e:	outs   dx,BYTE PTR ds:[rsi]
  43223f:	outs   dx,BYTE PTR ds:[rsi]
  432240:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  432245:	imul   ebp,DWORD PTR [rbp+0x65],0x74756f
  43224c:	push   0x74736f
  432251:	add    BYTE PTR [rax],al
  432253:	add    BYTE PTR [rax],al
  432255:	add    BYTE PTR [rax],al
  432257:	add    BYTE PTR [rsi+0x6f],al
  43225a:	jne    0x4322ca
  43225c:	and    BYTE PTR fs:[rax+0x6f],ch
  432260:	jae    0x4322d6
  432262:	and    BYTE PTR [rbp+0x6e],ah
  432265:	je     0x4322d9
  432267:	jns    0x432289
  432269:	and    eax,0x6f682073
  43226e:	ja     0x4322d5
  432270:	jbe    0x4322d7
  432272:	jb     0x432294
  432274:	outs   dx,BYTE PTR ds:[rsi]
  432275:	(bad)  
  432276:	ins    DWORD PTR es:[rdi],dx
  432277:	and    BYTE PTR gs:[rdx+0x65],dh
  43227b:	jae    0x4322ec
  43227d:	ins    BYTE PTR es:[rdi],dx
  43227e:	jne    0x4322f4
  432280:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
  432287:	ins    BYTE PTR es:[rdi],dx
  432288:	gs fs and BYTE PTR cs:[rdx],cl
  43228d:	add    BYTE PTR [rsi+0x6f],al
  432290:	jne    0x432300
  432292:	and    BYTE PTR fs:[rax+0x6f],ch
  432296:	jae    0x43230c
  432298:	and    BYTE PTR [rbp+0x6e],ah
  43229b:	je     0x43230f
  43229d:	jns    0x4322bf
  43229f:	and    eax,0xa2073
  4322a4:	rex.WB push r8
  4322a6:	and    BYTE PTR [rcx+0x64],ah
  4322a9:	fs jb  0x4322cc
  4322ac:	imul   esi,DWORD PTR [rbx+0x20],0xa2e7325
  4322b3:	add    BYTE PTR [rbp+0x6d],ah
  4322b6:	jne    0x432324
  4322b8:	(bad)  
  4322b9:	je     0x432320
  4322bb:	and    BYTE PTR [rcx+rbp*2+0x74],ch
  4322bf:	je     0x43232d
  4322c1:	and    BYTE PTR gs:[rbp+0x6e],ah
  4322c5:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x78657400
  4322cd:	je     0x4322ef
  4322cf:	jae    0x43233a
  4322d1:	jp     0x432338
  4322d3:	add    BYTE PTR [rbx+0x68],ah
  4322d6:	(bad)  
  4322d7:	jb     0x43234c
  4322d9:	gs je  0x4322dc
  4322dc:	and    eax,0x73692073
  4322e1:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4d515a
  4322e7:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  4322eb:	outs   dx,BYTE PTR ds:[rsi]
  4322ec:	je     0x43230e
  4322ee:	movsxd ebp,DWORD PTR [rax+0x61]
  4322f1:	jb     0x432366
  4322f3:	gs je  0x4322f6
  4322f6:	add    BYTE PTR [rax],al
  4322f8:	je     0x43235e
  4322fa:	jae    0x43235b
  4322fc:	jo     0x43235f
  4322fe:	jb     0x432373
  432300:	gs pop rdi
  432302:	movsxd ebp,DWORD PTR [rdi+0x6e]
  432305:	pop    di
  432307:	jae    0x43236e
  432309:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  43230d:	outs   dx,BYTE PTR ds:[rsi]
  43230e:	cmp    ah,BYTE PTR [rax]
  432310:	and    eax,0x73692073
  432315:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4d518e
  43231b:	jne    0x432390
  43231d:	and    BYTE PTR gs:[rbp+0x74],dh
  432321:	sub    ax,0x3631
  432325:	add    BYTE PTR [rbp+rsi*2+0x6d],ah
  432329:	jo     0x43234b
  43232b:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7061
  432332:	jo     0x432399
  432334:	outs   dx,BYTE PTR ds:[rsi]
  432335:	add    BYTE PTR fs:[rcx+0x6e],ch
  432339:	jae    0x4323af
  43233b:	(bad)  
  43233c:	outs   dx,BYTE PTR ds:[rsi]
  43233d:	movsxd esp,DWORD PTR [rbp+0x0]
  432340:	outs   dx,BYTE PTR gs:[rsi]
  432342:	movsxd esi,DWORD PTR [rdx+0x79]
  432345:	jo     0x4323bb
  432347:	imul   ebp,DWORD PTR [rdi+0x6e],0x66666f00
  43234e:	add    BYTE PTR [rdx+0x65],dh
  432351:	jno    0x4323c8
  432353:	gs jae 0x4323ca
  432356:	add    BYTE PTR [rdx+0x65],dh
  432359:	jno    0x4323d0
  43235b:	imul   esi,DWORD PTR [rdx+0x65],0x4e550000
  432362:	push   rdx
  432363:	rex.RB
  432364:	rex.XB
  432365:	rex.WRXB
  432366:	rex.RXB
  432367:	rex.WRX
  432368:	rex.WB pop r10
  43236a:	rex.RB
  43236b:	and    BYTE PTR [rdi+0x70],r13b
  43236f:	je     0x4323da
  432371:	outs   dx,DWORD PTR ds:[rsi]
  432372:	outs   dx,BYTE PTR ds:[rsi]
  432373:	and    BYTE PTR [rsi+0x61],dh
  432376:	ins    BYTE PTR es:[rdi],dx
  432377:	jne    0x4323de
  432379:	and    BYTE PTR [rdi],ah
  43237b:	and    eax,0x66202773
  432380:	outs   dx,DWORD PTR ds:[rsi]
  432381:	jb     0x4323a3
  432383:	(bad)  
  432384:	and    eax,0x73202773
  432389:	gs je  0x432400
  43238c:	imul   ebp,DWORD PTR [rsi+0x67],0xa21
  432393:	add    BYTE PTR [rax],al
  432395:	add    BYTE PTR [rax],al
  432397:	add    BYTE PTR [rsi+0x61],dl
  43239a:	ins    BYTE PTR es:[rdi],dx
  43239b:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x69747465
  4323a3:	outs   dx,BYTE PTR ds:[rsi]
  4323a4:	addr32 jae 0x4323c7
  4323a7:	(bad)  
  4323a8:	jb     0x43240f
  4323aa:	cmp    ah,BYTE PTR [rax]
  4323ac:	sub    BYTE PTR [rdi],ah
  4323ae:	and    eax,0x202c2773
  4323b3:	(bad)  
  4323b4:	and    eax,0x202c2773
  4323b9:	(bad)  
  4323ba:	and    eax,0xa292773
  4323bf:	add    BYTE PTR [rcx+0x73],ah
  4323c2:	(bad)  
  4323c3:	and    BYTE PTR [rcx+riz*2+0x74],ah
  4323c7:	(bad)  
  4323c8:	(bad)  
  4323ca:	jae    0x432431
  4323cc:	add    BYTE PTR [rbp+0x73],dh
  4323cf:	and    BYTE PTR gs:[rsi+0x74],ch
  4323d3:	ins    BYTE PTR es:[rdi],dx
  4323d4:	ins    DWORD PTR es:[rdi],dx
  4323d5:	jbe    0x432409
  4323d7:	add    BYTE PTR [rbp+0x73],dh
  4323da:	and    BYTE PTR gs:[rcx+riz*2+0x6e],ch
  4323df:	ins    DWORD PTR es:[rdi],dx
  4323e0:	(bad)  
  4323e1:	outs   dx,BYTE PTR ds:[rsi]
  4323e2:	add    BYTE PTR [rdx+0x65],dh
  4323e5:	(bad)  
  4323e6:	ins    BYTE PTR es:[rdi],dx
  4323e7:	ins    DWORD PTR es:[rdi],dx
  4323e8:	add    BYTE PTR [rbx+0x70],dh
  4323eb:	outs   dx,BYTE PTR ds:[rsi]
  4323ec:	add    BYTE PTR [rbx+0x61],ah
  4323ef:	and    BYTE PTR [rsi+0x69],ah
  4323f2:	ins    BYTE PTR es:[rdi],dx
  4323f3:	add    BYTE PTR gs:[rbx+0x72],ah
  4323f7:	ins    BYTE PTR es:[rdi],dx
  4323f8:	and    BYTE PTR [rsi+0x69],ah
  4323fb:	ins    BYTE PTR es:[rdi],dx
  4323fc:	add    BYTE PTR gs:[rbx+0x68],ah
  432400:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
  432404:	movsxd esp,DWORD PTR [rbp+0x72]
  432407:	je     0x432472
  432409:	imul   sp,WORD PTR [rbx+0x61],0x6574
  43240f:	and    BYTE PTR [rax+0x6f],ch
  432412:	jae    0x432488
  432414:	outs   dx,BYTE PTR ds:[rsi]
  432415:	(bad)  
  432416:	ins    DWORD PTR es:[rdi],dx
  432417:	add    BYTE PTR gs:[rcx+riz*2+0x74],ah
  43241c:	(bad)  
  43241d:	(bad)  
  43241f:	jae    0x432486
  432421:	and    BYTE PTR [rsi+0x69],ah
  432424:	ins    BYTE PTR es:[rdi],dx
  432425:	outs   dx,BYTE PTR gs:[rsi]
  432427:	(bad)  
  432428:	ins    DWORD PTR es:[rdi],dx
  432429:	add    BYTE PTR gs:[rdx+0x65],dh
  43242d:	(bad)  
  43242e:	fs sub eax,0x796c6e6f
  432434:	and    BYTE PTR [rcx+0x6e],ch
  432437:	je     0x43249e
  432439:	outs   dx,BYTE PTR ds:[rsi]
  43243a:	je     0x43243c
  43243c:	add    BYTE PTR [rax],al
  43243e:	add    BYTE PTR [rax],al
  432440:	push   rbx
  432441:	gs je  0x4324b8
  432444:	imul   ebp,DWORD PTR [rsi+0x67],0x61655220
  43244b:	rex.WRXB outs dx,BYTE PTR fs:[rsi]
  43244e:	ins    BYTE PTR es:[rdi],dx
  43244f:	jns    0x432471
  432451:	rex.WB outs dx,BYTE PTR ds:[rsi]
  432453:	je     0x4324ba
  432455:	outs   dx,BYTE PTR ds:[rsi]
  432456:	je     0x432478
  432458:	je     0x4324c9
  43245a:	and    BYTE PTR [rdi],ah
  43245c:	and    eax,0xa2e2773
  432461:	add    BYTE PTR [rax],al
  432463:	add    BYTE PTR [rax],al
  432465:	add    BYTE PTR [rax],al
  432467:	add    BYTE PTR [rbp+0x4e],dl
  43246a:	push   rdx
  43246b:	rex.RB
  43246c:	rex.XB
  43246d:	rex.WRXB
  43246e:	rex.RXB
  43246f:	rex.WRX
  432470:	rex.WB pop r10
  432472:	rex.RB
  432473:	and    BYTE PTR [rdi+0x70],r13b
  432477:	je     0x4324e2
  432479:	outs   dx,DWORD PTR ds:[rsi]
  43247a:	outs   dx,BYTE PTR ds:[rsi]
  43247b:	and    BYTE PTR [rdi],ah
  43247d:	and    eax,0x2e202773
  432482:	cs and BYTE PTR cs:[rcx+0x67],ch
  432487:	outs   dx,BYTE PTR ds:[rsi]
  432488:	outs   dx,DWORD PTR ds:[rsi]
  432489:	jb     0x4324f4
  43248b:	outs   dx,BYTE PTR ds:[rsi]
  43248c:	or     al,BYTE PTR cs:[eax]
  432490:	data16 jb 0x4324f8
  432493:	gs je  0x4324fa
  432496:	jae    0x4324b8
  432498:	jbe    0x4324cb
  43249a:	xor    BYTE PTR cs:[rax],dh
  43249d:	xor    dh,BYTE PTR cs:[rax+rax*1]
  4324a1:	add    BYTE PTR [rax],al
  4324a3:	add    BYTE PTR [rax],al
  4324a5:	add    BYTE PTR [rax],al
  4324a7:	add    BYTE PTR [rdi],ch
  4324a9:	jae    0x43250e
  4324ab:	jb     0x43250e
  4324ad:	je     0x432512
  4324af:	push   0x65776a2f
  4324b4:	(bad)  
  4324b5:	ins    DWORD PTR es:[rdi],dx
  4324b6:	js     0x43251d
  4324b8:	sub    eax,0x6174636f
  4324bd:	jbe    0x432524
  4324bf:	(bad)  
  4324c0:	xor    al,0x2e
  4324c2:	xor    ch,BYTE PTR [rsi]
  4324c4:	xor    DWORD PTR [rdi],ebp
  4324c6:	ja     0x4324fe
  4324c8:	xor    al,0x2d
  4324ca:	xor    esi,DWORD PTR [rdx]
  4324cc:	(bad)  
  4324cd:	jne    0x432542
  4324cf:	jb     0x432500
  4324d1:	js     0x43250b
  4324d3:	ss pop rdi
  4324d5:	ss xor al,0x2d
  4324d8:	ja     0x432510
  4324da:	xor    al,0x2d
  4324dc:	ins    DWORD PTR es:[rdi],dx
  4324dd:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  4324e4:	gs je  0x43254a
  4324e7:	add    BYTE PTR [rbp+0x6e],dh
  4324ea:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4324ee:	outs   dx,BYTE PTR ds:[rsi]
  4324ef:	add    BYTE PTR [rdi],dh
  4324f1:	xor    al,BYTE PTR cs:[rax]
	...
  432500:	nop
  432501:	and    al,0x43
  432503:	add    BYTE PTR [rax],al
  432505:	add    BYTE PTR [rax],al
  432507:	add    BYTE PTR [rax+0x4324],ch
  43250d:	add    BYTE PTR [rax],al
  43250f:	add    al,ch
  432511:	and    al,0x43
  432513:	add    BYTE PTR [rax],al
  432515:	add    BYTE PTR [rax],al
  432517:	add    BYTE PTR [rcx],al
	...
  432521:	add    BYTE PTR [rax],al
  432523:	add    BYTE PTR [rcx],al
  432525:	add    BYTE PTR [rax],al
  432527:	add    al,dh
  432529:	and    al,0x43
	...
  432533:	add    BYTE PTR [rcx],al
  432535:	add    BYTE PTR [rax],al
  432537:	add    BYTE PTR [rax],al
  432539:	add    BYTE PTR [rax],al
  43253b:	add    BYTE PTR [rcx],al
	...
  43257d:	add    BYTE PTR [rax],al
  43257f:	add    BYTE PTR [rax],dh
  432581:	add    BYTE PTR [rax],al
  432583:	add    BYTE PTR [rax],al
  432585:	add    BYTE PTR [rax],al
  432587:	add    BYTE PTR [rcx+0x75],ah
  43258a:	je     0x4325fb
  43258c:	add    BYTE PTR [rax],al
  43258e:	add    BYTE PTR [rax],al
  432590:	xor    al,0x2e
  432592:	xor    al,BYTE PTR [rax]
  432594:	add    BYTE PTR [rax],al
  432596:	add    al,BYTE PTR [rsp+rsi*1]
  432599:	xor    al,BYTE PTR cs:[rax]
  43259c:	add    BYTE PTR [rax],al
  43259e:	add    al,BYTE PTR [rsp+rsi*1]
  4325a1:	add    BYTE PTR ss:[rax],al
  4325a4:	add    BYTE PTR [rax],al
  4325a6:	(bad)  
  4325a7:	add    al,0x34
  4325a9:	cs add BYTE PTR ss:[rax],al
  4325ad:	add    BYTE PTR [rsi],al
  4325af:	add    al,0x35
  4325b1:	xor    BYTE PTR [rax],al
  4325b3:	add    BYTE PTR [rax],al
  4325b5:	add    BYTE PTR [rax],al
  4325b7:	add    eax,0x302e35
  4325bc:	add    BYTE PTR [rax],al
  4325be:	add    BYTE PTR [rip+0x3037],al        # 0x4355fb
  4325c4:	add    BYTE PTR [rax],al
  4325c6:	add    BYTE PTR [rdi],al
  4325c8:	(bad)  
  4325c9:	xor    BYTE PTR cs:[rax],al
  4325cc:	add    BYTE PTR [rax],al
  4325ce:	add    BYTE PTR [rdi],al
  4325d0:	cmp    BYTE PTR [rax],dh
  4325d2:	add    BYTE PTR [rax],al
  4325d4:	add    BYTE PTR [rax],al
  4325d6:	add    DWORD PTR [rdi],eax
  4325d8:	cmp    BYTE PTR [rsi],ch
  4325da:	xor    BYTE PTR [rax],al
  4325dc:	add    BYTE PTR [rax],al
  4325de:	add    DWORD PTR [rdi],eax
  4325e0:	(bad)  
  4325e1:	xor    DWORD PTR cs:[rax],eax
  4325e4:	add    BYTE PTR [rax],al
  4325e6:	add    DWORD PTR [rdi],eax
  4325e8:	(bad)  
  4325e9:	xor    al,BYTE PTR cs:[rax]
  4325ec:	add    BYTE PTR [rax],al
  4325ee:	add    al,BYTE PTR [rdi]
  4325f0:	(bad)  
  4325f1:	xor    eax,DWORD PTR cs:[rax]
  4325f4:	add    BYTE PTR [rax],al
  4325f6:	add    eax,DWORD PTR [rdi]
  4325f8:	(bad)  
  4325f9:	cs xor al,0x0
  4325fc:	add    BYTE PTR [rax],al
  4325fe:	add    al,0x7
  432600:	jns    0x432667
  432602:	jae    0x432604
  432604:	add    BYTE PTR [rax],al
  432606:	add    BYTE PTR [rcx],al
  432608:	outs   dx,BYTE PTR ds:[rsi]
  432609:	outs   dx,DWORD PTR ds:[rsi]
  43260a:	add    BYTE PTR [rax],al
  43260c:	add    BYTE PTR [rax],al
  43260e:	add    BYTE PTR [rax],al
  432610:	outs   dx,DWORD PTR ds:[rsi]
  432611:	outs   dx,BYTE PTR ds:[rsi]
  432612:	add    BYTE PTR [rax],al
  432614:	add    BYTE PTR [rax],al
  432616:	add    BYTE PTR [rcx],al
  432618:	outs   dx,DWORD PTR ds:[rsi]
  432619:	data16 data16 add BYTE PTR [rax],al
  43261d:	add    BYTE PTR [rax],al
  43261f:	add    BYTE PTR [rdx+rsi*2+0x75],dh
  432623:	add    BYTE PTR gs:[rax],al
  432626:	add    BYTE PTR [rcx],al
  432628:	data16 (bad) 
  43262a:	ins    BYTE PTR es:[rdi],dx
  43262b:	jae    0x432692
  43262d:	add    BYTE PTR [rax],al
  43262f:	add    BYTE PTR [rbx+0x3a],ah
  432632:	pop    rsp
	...
  43263f:	add    BYTE PTR [rbx+0x3a],ah
  432642:	pop    rsp
  432643:	data16 jb 0x4326ab
  432646:	gs je  0x4326ad
  432649:	jae    0x432679
  43264b:	ins    BYTE PTR es:[rdi],dx
  43264c:	outs   dx,DWORD PTR ds:[rsi]
  43264d:	addr32 cs and eax,0x64
	...
  432660:	sub    BYTE PTR [rsi+0x72],ah
  432663:	outs   dx,DWORD PTR ds:[rsi]
  432664:	ins    DWORD PTR es:[rdi],dx
  432665:	and    BYTE PTR [rsi+rax*2],ah
  432668:	push   rdx
  432669:	rex.RB
  43266a:	rex.RB push r12
  43266c:	rex.R push rbx
  43266e:	sub    DWORD PTR [rax],eax
  432670:	and    eax,0x72665c73
  432675:	gs gs je 0x4326dd
  432679:	jae    0x4326a9
  43267b:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43267e:	data16 add BYTE PTR [rbx+0x3a],ah
  432682:	pop    rsp
  432683:	je     0x4326e9
  432685:	jae    0x4326ea
  432687:	outs   dx,DWORD PTR ds:[rsi]
  432688:	outs   dx,BYTE PTR ds:[rsi]
  432689:	imul   sp,WORD PTR [rdi+0x2e],0x6f6c
  43268f:	addr32 cs and eax,0x64
	...
  43269e:	add    BYTE PTR [rax],al
  4326a0:	and    eax,0x64252062
  4326a5:	and    BYTE PTR [rip+0x49252059],ah        # 0x49684704
  4326ab:	cmp    ah,BYTE PTR [rip+0x70254d]        # 0xb34bfe
	...
  4326bd:	add    BYTE PTR [rax],al
  4326bf:	add    BYTE PTR [rcx+0x75],dh
  4326c2:	gs jb  0x43273e
  4326c5:	movsxd eax,DWORD PTR cs:[rax]
  4326c8:	(bad)  
  4326c9:	jne    0x432731
  4326cb:	data16 gs jb 0x4326ef
  4326cf:	es and BYTE PTR es:[rdx+0x75],ah
  4326d4:	data16 and BYTE PTR [rsi],ah
  4326d7:	and    BYTE PTR es:[rdx],ch
  4326da:	(bad)  
  4326db:	jne    0x432743
  4326dd:	add    BYTE PTR [rbx+0x70],dh
  4326e0:	pop    rdi
  4326e1:	movsxd esi,DWORD PTR [rbp+0x72]
  4326e4:	jae    0x432755
  4326e6:	jb     0x43274e
  4326e8:	gs je  0x43274e
  4326eb:	push   0x0
  4326f0:	jo     0x432712
  4326f2:	es and BYTE PTR es:[rbx+0x74],dh
  4326f7:	(bad)  
  4326f8:	jb     0x43276e
  4326fa:	and    BYTE PTR [rdi*1+0x646e6520],bh
  432701:	and    BYTE PTR [rsi],ah
  432703:	and    BYTE PTR es:[rax],ch
  432706:	outs   dx,BYTE PTR gs:[rsi]
  432708:	and    BYTE PTR fs:[rip+0x61747320],ch        # 0x61b79a2f
  43270f:	jb     0x432785
  432711:	sub    DWORD PTR [rax],esp
  432713:	and    eax,0x3d203220
  432718:	cmp    eax,0x3020
  43271d:	add    BYTE PTR [rax],al
  43271f:	add    BYTE PTR [rbx+0x5b],dh
  432722:	xor    DWORD PTR [rbp+0x20],ebx
  432725:	cmp    eax,0x2030203d
  43272a:	es and BYTE PTR es:[rbx+0x20],dh
  43272f:	cmp    al,0x20
  432731:	outs   dx,BYTE PTR gs:[rsi]
  432733:	and    BYTE PTR fs:[rsi],ah
  432736:	and    BYTE PTR es:[rax],ch
  432739:	outs   dx,BYTE PTR gs:[rsi]
  43273b:	and    BYTE PTR fs:[rip+0x20297320],ch        # 0x206c9a62
  432742:	and    eax,0x3d203220
  432747:	cmp    eax,0x2d003020
  43274c:	add    BYTE PTR [rip+0x2a002f00],ch        # 0x2a435652
  432752:	add    BYTE PTR [rdx],ch
  432754:	add    BYTE PTR [rdi],ch
  432756:	add    BYTE PTR [rax],al
  432758:	sub    cl,BYTE PTR [rbx-0x2]
  43275b:	call   FWORD PTR [rax-0x670001b5]
  432761:	rex.WXB (bad) 
  432763:	call   FWORD PTR [rax-0x670001b5]
  432769:	rex.WXB (bad) 
  43276b:	jmp    FWORD PTR [rdx]
  43276d:	rex.WXB (bad) 
  43276f:	call   FWORD PTR [rax-0x670001b5]
  432775:	rex.WXB (bad) 
  432777:	call   FWORD PTR [rax-0x670001b5]
  43277d:	rex.WXB (bad) 
  43277f:	call   FWORD PTR [rax-0x50001b5]
  432785:	rex.WX (bad) 
  432787:	call   FWORD PTR [rax-0x50001b5]
  43278d:	rex.WX (bad) 
  43278f:	call   FWORD PTR [rax-0x670001b5]
  432795:	rex.WXB (bad) 
  432797:	call   FWORD PTR [rax-0x670001b5]
  43279d:	rex.WXB (bad) 
  43279f:	call   FWORD PTR [rax-0x670001b5]
  4327a5:	rex.WXB (bad) 
  4327a7:	call   FWORD PTR [rax-0x670001b5]
  4327ad:	rex.WXB (bad) 
  4327af:	call   FWORD PTR [rax-0x670001b5]
  4327b5:	rex.WXB (bad) 
  4327b7:	call   FWORD PTR [rax-0x670001b5]
  4327bd:	rex.WXB (bad) 
  4327bf:	call   FWORD PTR [rax-0x670001b5]
  4327c5:	rex.WXB (bad) 
  4327c7:	call   FWORD PTR [rax-0x170001b5]
  4327cd:	rex.WX (bad) 
  4327cf:	dec    edx
  4327d1:	rex.WX (bad) 
  4327d3:	call   FWORD PTR [rax-0x670001b5]
  4327d9:	rex.WXB (bad) 
  4327db:	call   FWORD PTR [rax-0x670001b5]
  4327e1:	rex.WXB (bad) 
  4327e3:	call   FWORD PTR [rax-0x670001b5]
  4327e9:	rex.WXB (bad) 
  4327eb:	call   FWORD PTR [rax-0x670001b5]
  4327f1:	rex.WXB (bad) 
  4327f3:	call   FWORD PTR [rax-0x670001b5]
  4327f9:	rex.WXB (bad) 
  4327fb:	call   FWORD PTR [rax-0x670001b5]
  432801:	rex.WXB (bad) 
  432803:	call   FWORD PTR [rax-0x670001b5]
  432809:	rex.WXB (bad) 
  43280b:	call   FWORD PTR [rax-0x670001b5]
  432811:	rex.WXB (bad) 
  432813:	call   FWORD PTR [rax-0x670001b5]
  432819:	rex.WXB (bad) 
  43281b:	call   FWORD PTR [rax-0x670001b5]
  432821:	rex.WXB (bad) 
  432823:	call   FWORD PTR [rax-0x670001b5]
  432829:	rex.WXB (bad) 
  43282b:	call   FWORD PTR [rax-0x670001b5]
  432831:	rex.WXB (bad) 
  432833:	call   FWORD PTR [rax-0x670001b5]
  432839:	rex.WXB (bad) 
  43283b:	jmp    FWORD PTR [rdx]
  43283d:	rex.WXB (bad) 
  43283f:	dec    DWORD PTR [rcx+0x53]
  432842:	pop    rdi
  432843:	push   rsp
  432844:	rex.R push rbx
  432846:	(bad)  
  432847:	pop    rdi
  432848:	push   rax
  432849:	rex.WR push rbp
  43284b:	push   rbx
  43284c:	sub    BYTE PTR [rsp+riz*2+0x73],dh
  432850:	sub    eax,0x6e6f633e
  432855:	outs   dx,BYTE PTR ds:[rsi]
  432856:	sub    DWORD PTR [rax],eax
  432858:	and    BYTE PTR gs:[rsi],ah
  43285b:	and    BYTE PTR es:[rcx+0x75],dh
  43285f:	gs jb  0x4328db
  432862:	and    BYTE PTR [rdi*1+0x26206520],bh
  432869:	and    BYTE PTR es:[rbp+0x20],ah
  43286d:	cmp    al,0x3d
  43286f:	and    BYTE PTR [rcx+0x75],dh
  432872:	gs jb  0x4328ee
  432875:	pop    rdi
  432876:	outs   dx,BYTE PTR gs:[rsi]
  432878:	add    BYTE PTR fs:[rax+0x50],al
  43287c:	and    eax,0x74000064
  432881:	fs jae 0x4328e3
  432884:	jo     0x4328fb
  432886:	je     0x4328e7
  432888:	fs (bad) 
  43288a:	je     0x4328ed
  43288c:	pop    rdi
  43288d:	imul   ebp,DWORD PTR [rsi+0x66],0x7570206f
  432894:	je     0x43290a
  432896:	imul   ebp,DWORD PTR [rsi+0x67],0x72617020
  43289d:	(bad)  
  43289e:	ins    DWORD PTR es:[rdi],dx
  43289f:	pop    rdi
  4328a0:	outs   dx,BYTE PTR ds:[rsi]
  4328a1:	(bad)  
  4328a2:	ins    DWORD PTR es:[rdi],dx
  4328a3:	and    BYTE PTR gs:[rdx],cl
  4328a6:	add    BYTE PTR [rax+0x0],al
  4328a9:	add    BYTE PTR [rax],al
  4328ab:	add    BYTE PTR [rax],al
  4328ad:	add    BYTE PTR [rax],al
  4328af:	add    BYTE PTR [rsp+riz*2+0x73],dh
  4328b3:	pop    rdi
  4328b4:	jo     0x43292b
  4328b6:	je     0x432917
  4328b8:	fs (bad) 
  4328ba:	je     0x43291d
  4328bc:	pop    rdi
  4328bd:	imul   ebp,DWORD PTR [rsi+0x66],0x7570206f
  4328c4:	je     0x43293a
  4328c6:	imul   ebp,DWORD PTR [rsi+0x67],0x61747320
  4328cd:	je     0x432944
  4328cf:	jae    0x4328f1
  4328d1:	or     al,BYTE PTR [rax]
  4328d3:	jae    0x432945
  4328d5:	pop    rdi
  4328d6:	gs js  0x43293e
  4328d9:	movsxd esi,DWORD PTR [rbp+0x74]
  4328dc:	add    BYTE PTR gs:[rdi],ah
  4328df:	(bad)  
  4328e0:	add    BYTE PTR [rsi+0x55],cl
  4328e3:	rex.WR
  4328e4:	rex.WR add BYTE PTR [rax],r14b
  4328e7:	js     0x4328e9
  4328e9:	rex.WRX add BYTE PTR [rdi],r12b
  4328ec:	add    BYTE PTR [rax],al
  4328ee:	add    BYTE PTR [rax],al
  4328f0:	(bad)  
  4328f1:	push   rsi
  4328f2:	(bad)  
  4328f3:	push   QWORD PTR [rip+0xffffffffe0fffe55]        # 0xffffffffe143274e
  4328f9:	push   rbp
  4328fa:	(bad)  
  4328fb:	jmp    QWORD PTR [rcx+0x56]
  4328fe:	(bad)  
  4328ff:	jmp    QWORD PTR [rax]
  432901:	push   rdi
  432902:	(bad)  
  432903:	push   QWORD PTR [rip+0xffffffffe0fffe55]        # 0xffffffffe143275e
  432909:	push   rbp
  43290a:	(bad)  
  43290b:	jmp    rax
  43290d:	push   rbp
  43290e:	(bad)  
  43290f:	jmp    rax
  432911:	push   rbp
  432912:	(bad)  
  432913:	jmp    rax
  432915:	push   rbp
  432916:	(bad)  
  432917:	jmp    QWORD PTR [rax]
  432919:	push   rdi
  43291a:	(bad)  
  43291b:	jmp    QWORD PTR [rcx+0x56]
  43291e:	(bad)  
  43291f:	jmp    QWORD PTR [rax]
  432921:	push   rdi
  432922:	(bad)  
  432923:	push   QWORD PTR [rip+0x20fffe55]        # 0x2143277e
  432929:	push   rdi
  43292a:	(bad)  
  43292b:	jmp    rax
  43292d:	push   rbp
  43292e:	(bad)  
  43292f:	jmp    QWORD PTR [rax]
  432931:	push   rdi
  432932:	(bad)  
  432933:	jmp    rax
  432935:	push   rbp
  432936:	(bad)  
  432937:	jmp    QWORD PTR [rax]
  432939:	push   rdi
  43293a:	(bad)  
  43293b:	jmp    QWORD PTR [rax]
  43293d:	push   rdi
  43293e:	(bad)  
  43293f:	jmp    QWORD PTR [rax]
  432941:	push   rdi
  432942:	(bad)  
  432943:	jmp    QWORD PTR [rax]
  432945:	push   rdi
  432946:	(bad)  
  432947:	jmp    QWORD PTR [rax]
  432949:	push   rdi
  43294a:	(bad)  
  43294b:	jmp    QWORD PTR [rax]
  43294d:	push   rdi
  43294e:	(bad)  
  43294f:	jmp    rax
  432951:	push   rbp
  432952:	(bad)  
  432953:	jmp    QWORD PTR [rax]
  432955:	push   rdi
  432956:	(bad)  
  432957:	jmp    QWORD PTR [rax]
  432959:	push   rdi
  43295a:	(bad)  
  43295b:	jmp    rax
  43295d:	push   rbp
  43295e:	(bad)  
  43295f:	jmp    QWORD PTR [rax]
  432961:	push   rdi
  432962:	(bad)  
  432963:	jmp    QWORD PTR [rax]
  432965:	push   rdi
  432966:	(bad)  
  432967:	jmp    QWORD PTR [rax]
  432969:	push   rdi
  43296a:	(bad)  
  43296b:	jmp    QWORD PTR [rax]
  43296d:	push   rdi
  43296e:	(bad)  
  43296f:	jmp    QWORD PTR [rax]
  432971:	push   rdi
  432972:	(bad)  
  432973:	jmp    QWORD PTR [rax]
  432975:	push   rdi
  432976:	(bad)  
  432977:	jmp    QWORD PTR [rax]
  432979:	push   rdi
  43297a:	(bad)  
  43297b:	jmp    QWORD PTR [rax]
  43297d:	push   rdi
  43297e:	(bad)  
  43297f:	jmp    QWORD PTR [rax]
  432981:	push   rdi
  432982:	(bad)  
  432983:	jmp    QWORD PTR [rax]
  432985:	push   rdi
  432986:	(bad)  
  432987:	jmp    QWORD PTR [rax]
  432989:	push   rdi
  43298a:	(bad)  
  43298b:	jmp    QWORD PTR [rax]
  43298d:	push   rdi
  43298e:	(bad)  
  43298f:	jmp    QWORD PTR [rax]
  432991:	push   rdi
  432992:	(bad)  
  432993:	jmp    QWORD PTR [rax]
  432995:	push   rdi
  432996:	(bad)  
  432997:	jmp    QWORD PTR [rax]
  432999:	push   rdi
  43299a:	(bad)  
  43299b:	jmp    QWORD PTR [rax]
  43299d:	push   rdi
  43299e:	(bad)  
  43299f:	jmp    QWORD PTR [rax]
  4329a1:	push   rdi
  4329a2:	(bad)  
  4329a3:	jmp    QWORD PTR [rax]
  4329a5:	push   rdi
  4329a6:	(bad)  
  4329a7:	jmp    QWORD PTR [rax]
  4329a9:	push   rdi
  4329aa:	(bad)  
  4329ab:	jmp    QWORD PTR [rax]
  4329ad:	push   rdi
  4329ae:	(bad)  
  4329af:	jmp    QWORD PTR [rax]
  4329b1:	push   rdi
  4329b2:	(bad)  
  4329b3:	jmp    QWORD PTR [rax]
  4329b5:	push   rdi
  4329b6:	(bad)  
  4329b7:	jmp    QWORD PTR [rax]
  4329b9:	push   rdi
  4329ba:	(bad)  
  4329bb:	jmp    QWORD PTR [rax]
  4329bd:	push   rdi
  4329be:	(bad)  
  4329bf:	jmp    QWORD PTR [rax]
  4329c1:	push   rdi
  4329c2:	(bad)  
  4329c3:	jmp    QWORD PTR [rax]
  4329c5:	push   rdi
  4329c6:	(bad)  
  4329c7:	jmp    QWORD PTR [rax]
  4329c9:	push   rdi
  4329ca:	(bad)  
  4329cb:	jmp    QWORD PTR [rax]
  4329cd:	push   rdi
  4329ce:	(bad)  
  4329cf:	jmp    QWORD PTR [rax]
  4329d1:	push   rdi
  4329d2:	(bad)  
  4329d3:	jmp    QWORD PTR [rax]
  4329d5:	push   rdi
  4329d6:	(bad)  
  4329d7:	jmp    QWORD PTR [rax]
  4329d9:	push   rdi
  4329da:	(bad)  
  4329db:	jmp    QWORD PTR [rax]
  4329dd:	push   rdi
  4329de:	(bad)  
  4329df:	jmp    QWORD PTR [rax]
  4329e1:	push   rdi
  4329e2:	(bad)  
  4329e3:	jmp    QWORD PTR [rax]
  4329e5:	push   rdi
  4329e6:	(bad)  
  4329e7:	jmp    QWORD PTR [rax]
  4329e9:	push   rdi
  4329ea:	(bad)  
  4329eb:	jmp    QWORD PTR [rax]
  4329ed:	push   rdi
  4329ee:	(bad)  
  4329ef:	jmp    QWORD PTR [rax]
  4329f1:	push   rdi
  4329f2:	(bad)  
  4329f3:	jmp    QWORD PTR [rax]
  4329f5:	push   rbp
  4329f6:	(bad)  
  4329f7:	jmp    QWORD PTR [rax]
  4329f9:	push   rdi
  4329fa:	(bad)  
  4329fb:	jmp    QWORD PTR [rax]
  4329fd:	push   rdi
  4329fe:	(bad)  
  4329ff:	jmp    QWORD PTR [rax]
  432a01:	push   rdi
  432a02:	(bad)  
  432a03:	jmp    QWORD PTR [rax]
  432a05:	push   rbp
  432a06:	(bad)  
  432a07:	jmp    QWORD PTR [rax]
  432a09:	push   rdi
  432a0a:	(bad)  
  432a0b:	jmp    QWORD PTR [rax]
  432a0d:	push   rdi
  432a0e:	(bad)  
  432a0f:	jmp    QWORD PTR [rax]
  432a11:	push   rdi
  432a12:	(bad)  
  432a13:	jmp    QWORD PTR [rax]
  432a15:	push   rdi
  432a16:	(bad)  
  432a17:	jmp    QWORD PTR [rax]
  432a19:	push   rdi
  432a1a:	(bad)  
  432a1b:	jmp    QWORD PTR [rax]
  432a1d:	push   rdi
  432a1e:	(bad)  
  432a1f:	jmp    QWORD PTR [rax]
  432a21:	push   rdi
  432a22:	(bad)  
  432a23:	jmp    rax
  432a25:	push   rbp
  432a26:	(bad)  
  432a27:	jmp    QWORD PTR [rax]
  432a29:	push   rdi
  432a2a:	(bad)  
  432a2b:	jmp    QWORD PTR [rax]
  432a2d:	push   rdi
  432a2e:	(bad)  
  432a2f:	jmp    QWORD PTR [rax]
  432a31:	push   rdi
  432a32:	(bad)  
  432a33:	jmp    QWORD PTR [rax]
  432a35:	push   rdi
  432a36:	(bad)  
  432a37:	jmp    QWORD PTR [rax]
  432a39:	push   rdi
  432a3a:	(bad)  
  432a3b:	jmp    QWORD PTR [rax]
  432a3d:	push   rdi
  432a3e:	(bad)  
  432a3f:	jmp    QWORD PTR [rax]
  432a41:	push   rdi
  432a42:	(bad)  
  432a43:	jmp    QWORD PTR [rax]
  432a45:	push   rdi
  432a46:	(bad)  
  432a47:	jmp    QWORD PTR [rax]
  432a49:	push   rdi
  432a4a:	(bad)  
  432a4b:	jmp    QWORD PTR [rax]
  432a4d:	push   rdi
  432a4e:	(bad)  
  432a4f:	jmp    QWORD PTR [rax]
  432a51:	push   rdi
  432a52:	(bad)  
  432a53:	jmp    QWORD PTR [rax]
  432a55:	push   rdi
  432a56:	(bad)  
  432a57:	jmp    QWORD PTR [rax]
  432a59:	push   rdi
  432a5a:	(bad)  
  432a5b:	jmp    QWORD PTR [rax]
  432a5d:	push   rdi
  432a5e:	(bad)  
  432a5f:	jmp    QWORD PTR [rax]
  432a61:	push   rdi
  432a62:	(bad)  
  432a63:	jmp    QWORD PTR [rax]
  432a65:	push   rdi
  432a66:	(bad)  
  432a67:	jmp    QWORD PTR [rax]
  432a69:	push   rdi
  432a6a:	(bad)  
  432a6b:	jmp    QWORD PTR [rax]
  432a6d:	push   rdi
  432a6e:	(bad)  
  432a6f:	jmp    QWORD PTR [rax]
  432a71:	push   rdi
  432a72:	(bad)  
  432a73:	jmp    QWORD PTR [rax]
  432a75:	push   rdi
  432a76:	(bad)  
  432a77:	jmp    QWORD PTR [rax]
  432a79:	push   rdi
  432a7a:	(bad)  
  432a7b:	jmp    QWORD PTR [rax]
  432a7d:	push   rdi
  432a7e:	(bad)  
  432a7f:	jmp    QWORD PTR [rax]
  432a81:	push   rdi
  432a82:	(bad)  
  432a83:	jmp    QWORD PTR [rax]
  432a85:	push   rdi
  432a86:	(bad)  
  432a87:	jmp    QWORD PTR [rax]
  432a89:	push   rdi
  432a8a:	(bad)  
  432a8b:	jmp    QWORD PTR [rax]
  432a8d:	push   rdi
  432a8e:	(bad)  
  432a8f:	jmp    QWORD PTR [rax]
  432a91:	push   rdi
  432a92:	(bad)  
  432a93:	jmp    QWORD PTR [rax]
  432a95:	push   rdi
  432a96:	(bad)  
  432a97:	jmp    QWORD PTR [rax]
  432a99:	push   rdi
  432a9a:	(bad)  
  432a9b:	jmp    QWORD PTR [rax]
  432a9d:	push   rdi
  432a9e:	(bad)  
  432a9f:	jmp    QWORD PTR [rax]
  432aa1:	push   rdi
  432aa2:	(bad)  
  432aa3:	jmp    QWORD PTR [rax]
  432aa5:	push   rdi
  432aa6:	(bad)  
  432aa7:	jmp    QWORD PTR [rax]
  432aa9:	push   rdi
  432aaa:	(bad)  
  432aab:	jmp    QWORD PTR [rax]
  432aad:	push   rdi
  432aae:	(bad)  
  432aaf:	jmp    QWORD PTR [rax]
  432ab1:	push   rdi
  432ab2:	(bad)  
  432ab3:	jmp    QWORD PTR [rax]
  432ab5:	push   rdi
  432ab6:	(bad)  
  432ab7:	jmp    QWORD PTR [rax]
  432ab9:	push   rdi
  432aba:	(bad)  
  432abb:	jmp    QWORD PTR [rax]
  432abd:	push   rdi
  432abe:	(bad)  
  432abf:	jmp    QWORD PTR [rax]
  432ac1:	push   rdi
  432ac2:	(bad)  
  432ac3:	jmp    QWORD PTR [rax]
  432ac5:	push   rdi
  432ac6:	(bad)  
  432ac7:	jmp    QWORD PTR [rax]
  432ac9:	push   rdi
  432aca:	(bad)  
  432acb:	jmp    QWORD PTR [rax]
  432acd:	push   rdi
  432ace:	(bad)  
  432acf:	jmp    QWORD PTR [rax]
  432ad1:	push   rdi
  432ad2:	(bad)  
  432ad3:	jmp    QWORD PTR [rax]
  432ad5:	push   rdi
  432ad6:	(bad)  
  432ad7:	jmp    QWORD PTR [rax]
  432ad9:	push   rdi
  432ada:	(bad)  
  432adb:	jmp    QWORD PTR [rax]
  432add:	push   rdi
  432ade:	(bad)  
  432adf:	jmp    QWORD PTR [rax]
  432ae1:	push   rdi
  432ae2:	(bad)  
  432ae3:	jmp    QWORD PTR [rax]
  432ae5:	push   rdi
  432ae6:	(bad)  
  432ae7:	jmp    QWORD PTR [rax]
  432ae9:	push   rdi
  432aea:	(bad)  
  432aeb:	jmp    QWORD PTR [rax]
  432aed:	push   rdi
  432aee:	(bad)  
  432aef:	jmp    QWORD PTR [rax]
  432af1:	push   rdi
  432af2:	(bad)  
  432af3:	jmp    QWORD PTR [rax]
  432af5:	push   rdi
  432af6:	(bad)  
  432af7:	jmp    QWORD PTR [rax]
  432af9:	push   rdi
  432afa:	(bad)  
  432afb:	jmp    QWORD PTR [rcx+0x56]
  432afe:	(bad)  
  432aff:	jmp    QWORD PTR [rax]
  432b01:	push   rdi
  432b02:	(bad)  
  432b03:	push   QWORD PTR [rip+0x20fffe55]        # 0x2143295e
  432b09:	push   rdi
  432b0a:	(bad)  
  432b0b:	jmp    QWORD PTR [rax]
  432b0d:	push   rdi
  432b0e:	(bad)  
  432b0f:	jmp    QWORD PTR [rax]
  432b11:	push   rdi
  432b12:	(bad)  
  432b13:	jmp    QWORD PTR [rax]
  432b15:	push   rdi
  432b16:	(bad)  
  432b17:	jmp    QWORD PTR [rax]
  432b19:	push   rdi
  432b1a:	(bad)  
  432b1b:	jmp    QWORD PTR [rcx+0x56]
  432b1e:	(bad)  
  432b1f:	jmp    QWORD PTR [rax]
  432b21:	push   rdi
  432b22:	(bad)  
  432b23:	push   QWORD PTR [rip+0x20fffe55]        # 0x2143297e
  432b29:	push   rdi
  432b2a:	(bad)  
  432b2b:	jmp    QWORD PTR [rax]
  432b2d:	push   rdi
  432b2e:	(bad)  
  432b2f:	jmp    QWORD PTR [rax]
  432b31:	push   rdi
  432b32:	(bad)  
  432b33:	jmp    QWORD PTR [rax]
  432b35:	push   rdi
  432b36:	(bad)  
  432b37:	jmp    QWORD PTR [rax]
  432b39:	push   rdi
  432b3a:	(bad)  
  432b3b:	jmp    QWORD PTR [rax]
  432b3d:	push   rdi
  432b3e:	(bad)  
  432b3f:	jmp    QWORD PTR [rax]
  432b41:	push   rdi
  432b42:	(bad)  
  432b43:	jmp    QWORD PTR [rax]
  432b45:	push   rdi
  432b46:	(bad)  
  432b47:	jmp    QWORD PTR [rax]
  432b49:	push   rdi
  432b4a:	(bad)  
  432b4b:	jmp    QWORD PTR [rax]
  432b4d:	push   rdi
  432b4e:	(bad)  
  432b4f:	jmp    QWORD PTR [rax]
  432b51:	push   rdi
  432b52:	(bad)  
  432b53:	jmp    rax
  432b55:	push   rbp
  432b56:	(bad)  
  432b57:	jmp    rax
  432b59:	push   rbp
  432b5a:	(bad)  
  432b5b:	jmp    QWORD PTR [rax]
  432b5d:	push   rdi
  432b5e:	(bad)  
  432b5f:	jmp    QWORD PTR [rax]
  432b61:	push   rdi
  432b62:	(bad)  
  432b63:	jmp    QWORD PTR [rax]
  432b65:	push   rdi
  432b66:	(bad)  
  432b67:	jmp    QWORD PTR [rax]
  432b69:	push   rdi
  432b6a:	(bad)  
  432b6b:	jmp    QWORD PTR [rax]
  432b6d:	push   rdi
  432b6e:	(bad)  
  432b6f:	jmp    QWORD PTR [rax]
  432b71:	push   rdi
  432b72:	(bad)  
  432b73:	jmp    QWORD PTR [rax]
  432b75:	push   rdi
  432b76:	(bad)  
  432b77:	jmp    QWORD PTR [rax]
  432b79:	push   rdi
  432b7a:	(bad)  
  432b7b:	jmp    QWORD PTR [rax]
  432b7d:	push   rdi
  432b7e:	(bad)  
  432b7f:	jmp    QWORD PTR [rax]
  432b81:	push   rdi
  432b82:	(bad)  
  432b83:	jmp    QWORD PTR [rax]
  432b85:	push   rdi
  432b86:	(bad)  
  432b87:	jmp    QWORD PTR [rax]
  432b89:	push   rdi
  432b8a:	(bad)  
  432b8b:	jmp    QWORD PTR [rax]
  432b8d:	push   rdi
  432b8e:	(bad)  
  432b8f:	jmp    QWORD PTR [rax]
  432b91:	push   rdi
  432b92:	(bad)  
  432b93:	jmp    QWORD PTR [rax]
  432b95:	push   rdi
  432b96:	(bad)  
  432b97:	jmp    QWORD PTR [rax]
  432b99:	push   rdi
  432b9a:	(bad)  
  432b9b:	jmp    QWORD PTR [rax]
  432b9d:	push   rdi
  432b9e:	(bad)  
  432b9f:	jmp    QWORD PTR [rax]
  432ba1:	push   rdi
  432ba2:	(bad)  
  432ba3:	jmp    QWORD PTR [rax]
  432ba5:	push   rdi
  432ba6:	(bad)  
  432ba7:	jmp    QWORD PTR [rax]
  432ba9:	push   rdi
  432baa:	(bad)  
  432bab:	jmp    QWORD PTR [rax]
  432bad:	push   rdi
  432bae:	(bad)  
  432baf:	jmp    QWORD PTR [rax]
  432bb1:	push   rdi
  432bb2:	(bad)  
  432bb3:	jmp    QWORD PTR [rax]
  432bb5:	push   rdi
  432bb6:	(bad)  
  432bb7:	jmp    QWORD PTR [rax]
  432bb9:	push   rdi
  432bba:	(bad)  
  432bbb:	jmp    QWORD PTR [rax]
  432bbd:	push   rdi
  432bbe:	(bad)  
  432bbf:	jmp    QWORD PTR [rax]
  432bc1:	push   rdi
  432bc2:	(bad)  
  432bc3:	jmp    QWORD PTR [rax]
  432bc5:	push   rdi
  432bc6:	(bad)  
  432bc7:	jmp    QWORD PTR [rax]
  432bc9:	push   rdi
  432bca:	(bad)  
  432bcb:	jmp    QWORD PTR [rax]
  432bcd:	push   rdi
  432bce:	(bad)  
  432bcf:	jmp    QWORD PTR [rax]
  432bd1:	push   rdi
  432bd2:	(bad)  
  432bd3:	jmp    QWORD PTR [rax]
  432bd5:	push   rdi
  432bd6:	(bad)  
  432bd7:	jmp    QWORD PTR [rax]
  432bd9:	push   rdi
  432bda:	(bad)  
  432bdb:	jmp    QWORD PTR [rax]
  432bdd:	push   rdi
  432bde:	(bad)  
  432bdf:	jmp    QWORD PTR [rax]
  432be1:	push   rdi
  432be2:	(bad)  
  432be3:	jmp    QWORD PTR [rax]
  432be5:	push   rdi
  432be6:	(bad)  
  432be7:	jmp    QWORD PTR [rax]
  432be9:	push   rdi
  432bea:	(bad)  
  432beb:	jmp    QWORD PTR [rax]
  432bed:	push   rdi
  432bee:	(bad)  
  432bef:	jmp    QWORD PTR [rax]
  432bf1:	push   rdi
  432bf2:	(bad)  
  432bf3:	jmp    QWORD PTR [rax]
  432bf5:	push   rdi
  432bf6:	(bad)  
  432bf7:	jmp    QWORD PTR [rax]
  432bf9:	push   rdi
  432bfa:	(bad)  
  432bfb:	jmp    QWORD PTR [rax]
  432bfd:	push   rdi
  432bfe:	(bad)  
  432bff:	jmp    QWORD PTR [rax]
  432c01:	push   rdi
  432c02:	(bad)  
  432c03:	jmp    QWORD PTR [rax]
  432c05:	push   rbp
  432c06:	(bad)  
  432c07:	jmp    QWORD PTR [rax]
  432c09:	push   rdi
  432c0a:	(bad)  
  432c0b:	jmp    QWORD PTR [rax]
  432c0d:	push   rdi
  432c0e:	(bad)  
  432c0f:	jmp    QWORD PTR [rax]
  432c11:	push   rdi
  432c12:	(bad)  
  432c13:	jmp    QWORD PTR [rax]
  432c15:	push   rdi
  432c16:	(bad)  
  432c17:	jmp    QWORD PTR [rax]
  432c19:	push   rdi
  432c1a:	(bad)  
  432c1b:	jmp    QWORD PTR [rax]
  432c1d:	push   rdi
  432c1e:	(bad)  
  432c1f:	jmp    QWORD PTR [rax]
  432c21:	push   rdi
  432c22:	(bad)  
  432c23:	jmp    QWORD PTR [rax]
  432c25:	push   rbp
  432c26:	(bad)  
  432c27:	push   QWORD PTR [rcx+0x75]
  432c2a:	gs jb  0x432ca6
  432c2d:	add    BYTE PTR [rsi+0x55],cl
  432c30:	rex.WRB
  432c31:	rex.RB push r10
  432c33:	rex.WB
  432c34:	rex.XB sub BYTE PTR [rip+0x64252c64],spl        # 0x6468589f
  432c3b:	sub    DWORD PTR [rax],eax
  432c3d:	rex.R
  432c3e:	rex.RB
  432c3f:	rex.XB
  432c40:	rex.WB
  432c41:	rex.WRB
  432c42:	rex.B
  432c43:	rex.WR sub BYTE PTR [rip+0x64252c64],r12b        # 0x646858ae
  432c4a:	sub    DWORD PTR [rax],eax
  432c4c:	rex.WRX push rsi
  432c4e:	push   r10
  432c50:	rex.XB
  432c51:	rex.W
  432c52:	push   r10
  432c54:	sub    BYTE PTR [rip+0x4e002975],ah        # 0x4e4355cf
  432c5a:	push   rsi
  432c5b:	push   r10
  432c5d:	rex.XB
  432c5e:	rex.W
  432c5f:	push   r10
  432c61:	sub    BYTE PTR [rbp+0x41],cl
  432c64:	pop    rax
  432c65:	sub    DWORD PTR [rax],eax
  432c67:	push   rsi
  432c68:	push   r10
  432c6a:	rex.X
  432c6b:	rex.WB
  432c6c:	rex.WRX
  432c6d:	push   r10
  432c6f:	pop    rcx
  432c70:	sub    BYTE PTR [rbp+0x41],cl
  432c73:	pop    rax
  432c74:	sub    DWORD PTR [rax],eax
  432c76:	push   rsi
  432c77:	push   r10
  432c79:	rex.XB
  432c7a:	rex.W
  432c7b:	push   r10
  432c7d:	sub    BYTE PTR [rbp+0x41],cl
  432c80:	pop    rax
  432c81:	sub    DWORD PTR [rax],eax
  432c83:	push   rbp
  432c84:	rex.WRX push rbx
  432c86:	rex.WB
  432c87:	rex.RXB
  432c88:	rex.WRX
  432c89:	rex.RB
  432c8a:	and    BYTE PTR [rdx+0x49],r8b
  432c8e:	rex.RXB
  432c8f:	rex.WB
  432c90:	rex.WRX push rsp
  432c92:	add    BYTE PTR [rbp+0x4e],dl
  432c95:	push   rbx
  432c96:	rex.WB
  432c97:	rex.RXB
  432c98:	rex.WRX
  432c99:	rex.RB
  432c9a:	and    BYTE PTR [rcx+0x4e],r9b
  432c9e:	push   rsp
  432c9f:	add    BYTE PTR [rbp+0x4e],dl
  432ca2:	push   rbx
  432ca3:	rex.WB
  432ca4:	rex.RXB
  432ca5:	rex.WRX
  432ca6:	rex.RB
  432ca7:	and    BYTE PTR [rbx+0x4d],r10b
  432cab:	rex.B
  432cac:	rex.WR
  432cad:	rex.WR
  432cae:	rex.WB
  432caf:	rex.WRX push rsp
  432cb1:	add    BYTE PTR [rdx+0x49],al
  432cb4:	rex.RXB
  432cb5:	rex.R
  432cb6:	push   r12
  432cb8:	rex.RB push r12
  432cba:	rex.WB
  432cbb:	rex.WRB
  432cbc:	add    BYTE PTR [r10+0x49],r8b
  432cc0:	rex.RXB push r12
  432cc2:	rex.WB
  432cc3:	rex.WRB
  432cc4:	add    BYTE PTR [r9+rax*2+0x54],r8b
  432cc9:	rex.RB push r12
  432ccb:	rex.WB
  432ccc:	rex.WRB
  432ccd:	rex.RB
  432cce:	rex.WRXB
  432ccf:	rex.RX
  432cd0:	rex.RX push rbx
  432cd2:	rex.RB push r12
  432cd4:	add    BYTE PTR [rcx+rax*2+0x54],al
  432cd8:	rex.RB push r12
  432cda:	rex.WB
  432cdb:	rex.WRB
  432cdc:	xor    r8b,BYTE PTR [r8]
  432cdf:	rex.R
  432ce0:	push   r12
  432ce2:	add    BYTE PTR [r9+rcx*2+0x4d],r10b
  432ce7:	add    BYTE PTR [r11+0x51],r10b
  432ceb:	rex.WR pop rdi
  432ced:	push   rsi
  432cee:	push   r10
  432cf0:	rex.WB
  432cf1:	rex.B
  432cf2:	rex.WRX push rsp
  432cf4:	add    BYTE PTR [rsi+0x43],cl
  432cf7:	rex.W
  432cf8:	push   r10
  432cfa:	sub    BYTE PTR [rip+0x4e002975],ah        # 0x4e435675
  432d00:	push   rsp
  432d01:	rex.RB pop r8
  432d03:	push   rsp
  432d04:	add    BYTE PTR [rbp+0x4e],dl
  432d07:	rex.WB push r9
  432d09:	push   rbp
  432d0a:	rex.RB
  432d0b:	rex.WB
  432d0c:	rex.R
  432d0d:	rex.RB
  432d0e:	rex.WRX push rsp
  432d10:	rex.WB
  432d11:	rex.RX
  432d12:	rex.WB
  432d13:	rex.RB push r10
  432d15:	add    BYTE PTR [rsi+0x41],dl
  432d18:	push   rdx
  432d19:	rex.X
  432d1a:	rex.WB
  432d1b:	rex.WRX
  432d1c:	push   r10
  432d1e:	pop    rcx
  432d1f:	sub    BYTE PTR [rip+0x42002975],ah        # 0x4243569a
  432d25:	rex.WB
  432d26:	rex.WRX
  432d27:	push   r10
  432d29:	pop    rcx
  432d2a:	sub    BYTE PTR [rip+0x52002975],ah        # 0x524356a5
  432d30:	rex.RB
  432d31:	rex.B
  432d32:	rex.WR add BYTE PTR [rbx+0x4d],r10b
  432d36:	rex.B
  432d37:	rex.WR
  432d38:	rex.WR
  432d39:	rex.R
  432d3a:	push   r12
  432d3c:	rex.RB push r12
  432d3e:	rex.WB
  432d3f:	rex.WRB
  432d40:	add    BYTE PTR [r13+0x4f],r9b
  432d44:	rex.WRX
  432d45:	rex.RB pop r9
  432d47:	add    BYTE PTR [rbx+0x4d],dl
  432d4a:	rex.B
  432d4b:	rex.WR
  432d4c:	rex.WR
  432d4d:	rex.WRB
  432d4e:	rex.WRXB
  432d4f:	rex.WRX
  432d50:	rex.RB pop r9
  432d52:	add    BYTE PTR [rcx+0x4d],cl
  432d55:	rex.B
  432d56:	rex.RXB
  432d57:	add    BYTE PTR [r13+rax*2+0x58],r10b
  432d5c:	push   rsp
  432d5d:	add    BYTE PTR [rdx+0x49],al
  432d60:	push   rsp
  432d61:	add    BYTE PTR [rcx+rax*2+0x54],al
  432d65:	rex.RB push r12
  432d67:	rex.WB
  432d68:	rex.WRB
  432d69:	add    BYTE PTR [r14+0x4c],r8b
  432d6d:	rex.WRXB
  432d6e:	push   r12
  432d70:	add    BYTE PTR [rdx+0x49],al
  432d73:	rex.RXB
  432d74:	rex.WB
  432d75:	rex.WRX push rsp
  432d77:	add    BYTE PTR [rcx+0x4e],cl
  432d7a:	push   rsp
  432d7b:	add    BYTE PTR [rbx+0x4d],dl
  432d7e:	rex.B
  432d7f:	rex.WR
  432d80:	rex.WR
  432d81:	rex.WB
  432d82:	rex.WRX push rsp
  432d84:	add    BYTE PTR [rcx+rcx*2+0x4e],dl
  432d88:	pop    rcx
  432d89:	rex.WB
  432d8a:	rex.WRX push rsp
  432d8c:	add    BYTE PTR [rsi+0x41],dl
  432d8f:	push   rdx
  432d90:	rex.XB
  432d91:	rex.W
  432d92:	push   r10
  432d94:	sub    BYTE PTR [rip+0x43002975],ah        # 0x4343570f
  432d9a:	rex.W
  432d9b:	push   r10
  432d9d:	sub    BYTE PTR [rip+0x30002975],ah        # 0x30435718
  432da3:	add    BYTE PTR [rbp+0x6e],dl
  432da6:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  432daa:	outs   dx,BYTE PTR ds:[rsi]
  432dab:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  432daf:	and    BYTE PTR gs:[rip+0xa64],ah        # 0x43381a
  432db6:	add    BYTE PTR [rax],al
  432db8:	rex.W pop rdx
  432dba:	(bad)  
  432dbb:	(bad)  
  432dbc:	cmp    BYTE PTR [rdx-0x2],bl
  432dbf:	call   FWORD PTR [rax]
  432dc1:	pop    rdx
  432dc2:	(bad)  
  432dc3:	(bad)  
  432dc4:	clc    
  432dc5:	pop    rcx
  432dc6:	(bad)  
  432dc7:	call   FWORD PTR [rax+0x28fffe57]
  432dcd:	pop    rcx
  432dce:	(bad)  
  432dcf:	dec    DWORD PTR [rax+0x48fffe57]
  432dd5:	push   rdi
  432dd6:	(bad)  
  432dd7:	call   FWORD PTR [rax]
  432dd9:	pop    rcx
  432dda:	(bad)  
  432ddb:	dec    DWORD PTR [rax]
  432ddd:	pop    rcx
  432dde:	(bad)  
  432ddf:	push   QWORD PTR [rcx+0x38fffe57]
  432de5:	pop    rax
  432de6:	(bad)  
  432de7:	push   QWORD PTR [rcx-0x70001a9]
  432ded:	pop    rax
  432dee:	(bad)  
  432def:	(bad)  
  432df0:	(bad)  
  432df1:	pop    rax
  432df2:	(bad)  
  432df3:	dec    DWORD PTR [rax-0x470001a9]
  432df9:	pop    rax
  432dfa:	(bad)  
  432dfb:	dec    DWORD PTR [rax+0x57]
  432dfe:	(bad)  
  432dff:	(bad)  
  432e00:	cli    
  432e01:	push   rdi
  432e02:	(bad)  
  432e03:	push   QWORD PTR [rcx-0x4e0001a9]
  432e09:	push   rdi
  432e0a:	(bad)  
  432e0b:	push   QWORD PTR [rcx+0x8fffe57]
  432e11:	pop    rax
  432e12:	(bad)  
  432e13:	push   QWORD PTR [rcx+0x58fffe57]
  432e19:	pop    rax
  432e1a:	(bad)  
  432e1b:	dec    DWORD PTR [rax+0x58]
  432e1e:	(bad)  
  432e1f:	call   FWORD PTR [rax-0x770001a8]
  432e25:	pop    rax
  432e26:	(bad)  
  432e27:	call   FWORD PTR [rax]
  432e29:	pop    rax
  432e2a:	(bad)  
  432e2b:	push   QWORD PTR [rcx-0x4e0001a9]
  432e31:	push   rdi
  432e32:	(bad)  
  432e33:	jmp    FWORD PTR [rax+0x58]
  432e36:	(bad)  
  432e37:	(bad)  
  432e38:	call   0xffffffffd9432c96
  432e3d:	pop    rcx
  432e3e:	(bad)  
  432e3f:	push   QWORD PTR [rcx-0x4e0001a9]
  432e45:	push   rdi
  432e46:	(bad)  
  432e47:	push   QWORD PTR [rcx-0x4e0001a9]
  432e4d:	push   rdi
  432e4e:	(bad)  
  432e4f:	push   QWORD PTR [rcx-0x4e0001a9]
  432e55:	push   rdi
  432e56:	(bad)  
  432e57:	push   QWORD PTR [rcx-0x4e0001a9]
  432e5d:	push   rdi
  432e5e:	(bad)  
  432e5f:	push   QWORD PTR [rcx-0x4e0001a9]
  432e65:	push   rdi
  432e66:	(bad)  
  432e67:	push   QWORD PTR [rcx-0x4e0001a9]
  432e6d:	push   rdi
  432e6e:	(bad)  
  432e6f:	push   QWORD PTR [rcx-0x4e0001a9]
  432e75:	push   rdi
  432e76:	(bad)  
  432e77:	push   QWORD PTR [rcx-0x4e0001a9]
  432e7d:	push   rdi
  432e7e:	(bad)  
  432e7f:	push   QWORD PTR [rcx-0x4e0001a9]
  432e85:	push   rdi
  432e86:	(bad)  
  432e87:	push   QWORD PTR [rcx-0x4e0001a9]
  432e8d:	push   rdi
  432e8e:	(bad)  
  432e8f:	push   QWORD PTR [rcx-0x4e0001a9]
  432e95:	push   rdi
  432e96:	(bad)  
  432e97:	push   QWORD PTR [rcx-0x4e0001a9]
  432e9d:	push   rdi
  432e9e:	(bad)  
  432e9f:	push   QWORD PTR [rcx-0x4e0001a9]
  432ea5:	push   rdi
  432ea6:	(bad)  
  432ea7:	push   QWORD PTR [rcx-0x4e0001a9]
  432ead:	push   rdi
  432eae:	(bad)  
  432eaf:	push   QWORD PTR [rcx-0x4e0001a9]
  432eb5:	push   rdi
  432eb6:	(bad)  
  432eb7:	(bad)  
  432eb8:	mov    eax,0x98fffe59
  432ebd:	pop    rcx
  432ebe:	(bad)  
  432ebf:	push   QWORD PTR [rcx-0x4e0001a9]
  432ec5:	push   rdi
  432ec6:	(bad)  
  432ec7:	push   QWORD PTR [rcx+0x68fffe57]
  432ecd:	pop    rcx
  432ece:	(bad)  
  432ecf:	call   FWORD PTR [rax-0x4e0001a9]
  432ed5:	push   rdi
  432ed6:	(bad)  
  432ed7:	call   FWORD PTR [rax+0x59]
  432eda:	(bad)  
  432edb:	push   QWORD PTR [rcx-0x270001a9]
  432ee1:	push   rdi
  432ee2:	(bad)  
  432ee3:	call   FWORD PTR [rax-0x670001a9]
  432ee9:	push   rdi
  432eea:	(bad)  
  432eeb:	call   FWORD PTR [rax-0x4e0001a9]
  432ef1:	push   rdi
  432ef2:	(bad)  
  432ef3:	push   QWORD PTR [rcx-0x4e0001a9]
  432ef9:	push   rdi
  432efa:	(bad)  
  432efb:	push   QWORD PTR [rcx-0x4e0001a9]
  432f01:	push   rdi
  432f02:	(bad)  
  432f03:	push   QWORD PTR [rcx-0x4e0001a9]
  432f09:	push   rdi
  432f0a:	(bad)  
  432f0b:	push   QWORD PTR [rcx-0x4e0001a9]
  432f11:	push   rdi
  432f12:	(bad)  
  432f13:	push   QWORD PTR [rcx+0x48fffe57]
  432f19:	pop    rcx
  432f1a:	(bad)  
  432f1b:	push   QWORD PTR [rcx-0x4e0001a9]
  432f21:	push   rdi
  432f22:	(bad)  
  432f23:	push   QWORD PTR [rcx-0x4e0001a9]
  432f29:	push   rdi
  432f2a:	(bad)  
  432f2b:	jmp    FWORD PTR [rax]
  432f2d:	pop    rax
  432f2e:	(bad)  
  432f2f:	push   QWORD PTR [rcx-0x4e0001a9]
  432f35:	push   rdi
  432f36:	(bad)  
  432f37:	push   QWORD PTR [rcx-0x4e0001a9]
  432f3d:	push   rdi
  432f3e:	(bad)  
  432f3f:	push   QWORD PTR [rcx-0x4e0001a9]
  432f45:	push   rdi
  432f46:	(bad)  
  432f47:	push   QWORD PTR [rcx-0x4e0001a9]
  432f4d:	push   rdi
  432f4e:	(bad)  
  432f4f:	push   QWORD PTR [rcx-0x4e0001a9]
  432f55:	push   rdi
  432f56:	(bad)  
  432f57:	push   QWORD PTR [rcx-0x4e0001a9]
  432f5d:	push   rdi
  432f5e:	(bad)  
  432f5f:	push   QWORD PTR [rcx-0x4e0001a9]
  432f65:	push   rdi
  432f66:	(bad)  
  432f67:	push   QWORD PTR [rcx-0x4e0001a9]
  432f6d:	push   rdi
  432f6e:	(bad)  
  432f6f:	push   QWORD PTR [rcx-0x4e0001a9]
  432f75:	push   rdi
  432f76:	(bad)  
  432f77:	push   QWORD PTR [rcx-0x4e0001a9]
  432f7d:	push   rdi
  432f7e:	(bad)  
  432f7f:	push   QWORD PTR [rcx-0x4e0001a9]
  432f85:	push   rdi
  432f86:	(bad)  
  432f87:	push   QWORD PTR [rcx-0x4e0001a9]
  432f8d:	push   rdi
  432f8e:	(bad)  
  432f8f:	push   QWORD PTR [rcx-0x4e0001a9]
  432f95:	push   rdi
  432f96:	(bad)  
  432f97:	push   QWORD PTR [rcx-0x4e0001a9]
  432f9d:	push   rdi
  432f9e:	(bad)  
  432f9f:	push   QWORD PTR [rcx-0x4e0001a9]
  432fa5:	push   rdi
  432fa6:	(bad)  
  432fa7:	push   QWORD PTR [rcx-0x4e0001a9]
  432fad:	push   rdi
  432fae:	(bad)  
  432faf:	push   QWORD PTR [rcx-0x4e0001a9]
  432fb5:	push   rdi
  432fb6:	(bad)  
  432fb7:	push   QWORD PTR [rcx-0x4e0001a9]
  432fbd:	push   rdi
  432fbe:	(bad)  
  432fbf:	push   QWORD PTR [rcx-0x70001a9]
  432fc5:	pop    rcx
  432fc6:	(bad)  
  432fc7:	push   QWORD PTR [rcx+0x28fffe57]
  432fcd:	pop    rcx
  432fce:	(bad)  
  432fcf:	push   QWORD PTR [rcx-0x4e0001a9]
  432fd5:	push   rdi
  432fd6:	(bad)  
  432fd7:	push   QWORD PTR [rcx-0x4e0001a9]
  432fdd:	push   rdi
  432fde:	(bad)  
  432fdf:	push   QWORD PTR [rcx+0x38fffe57]
  432fe5:	pop    rax
  432fe6:	(bad)  
  432fe7:	push   QWORD PTR [rcx-0x70001a9]
  432fed:	pop    rax
  432fee:	(bad)  
  432fef:	push   QWORD PTR [rcx-0x4e0001a9]
  432ff5:	push   rdi
  432ff6:	(bad)  
  432ff7:	push   QWORD PTR [rcx-0x4e0001a9]
  432ffd:	push   rdi
  432ffe:	(bad)  
  432fff:	push   QWORD PTR [rcx-0x4e0001a9]
  433005:	push   rdi
  433006:	(bad)  
  433007:	push   QWORD PTR [rcx-0x4e0001a9]
  43300d:	push   rdi
  43300e:	(bad)  
  43300f:	push   QWORD PTR [rcx-0x4e0001a9]
  433015:	push   rdi
  433016:	(bad)  
  433017:	push   QWORD PTR [rcx+0x78fffe57]
  43301d:	pop    rax
  43301e:	(bad)  
  43301f:	jmp    FWORD PTR [rax-0x4e0001a8]
  433025:	push   rdi
  433026:	(bad)  
  433027:	push   QWORD PTR [rcx-0x4e0001a9]
  43302d:	push   rdi
  43302e:	(bad)  
  43302f:	push   QWORD PTR [rcx-0x4e0001a9]
  433035:	push   rdi
  433036:	(bad)  
  433037:	push   QWORD PTR [rcx-0x4e0001a9]
  43303d:	push   rdi
  43303e:	(bad)  
  43303f:	push   QWORD PTR [rcx-0x4e0001a9]
  433045:	push   rdi
  433046:	(bad)  
  433047:	push   QWORD PTR [rcx-0x4e0001a9]
  43304d:	push   rdi
  43304e:	(bad)  
  43304f:	push   QWORD PTR [rcx-0x4e0001a9]
  433055:	push   rdi
  433056:	(bad)  
  433057:	push   QWORD PTR [rcx-0x4e0001a9]
  43305d:	push   rdi
  43305e:	(bad)  
  43305f:	push   QWORD PTR [rcx-0x4e0001a9]
  433065:	push   rdi
  433066:	(bad)  
  433067:	push   QWORD PTR [rcx-0x4e0001a9]
  43306d:	push   rdi
  43306e:	(bad)  
  43306f:	push   QWORD PTR [rcx-0x4e0001a9]
  433075:	push   rdi
  433076:	(bad)  
  433077:	push   QWORD PTR [rcx-0x4e0001a9]
  43307d:	push   rdi
  43307e:	(bad)  
  43307f:	push   QWORD PTR [rcx-0x4e0001a9]
  433085:	push   rdi
  433086:	(bad)  
  433087:	push   QWORD PTR [rcx-0x4e0001a9]
  43308d:	push   rdi
  43308e:	(bad)  
  43308f:	push   QWORD PTR [rcx-0x4e0001a9]
  433095:	push   rdi
  433096:	(bad)  
  433097:	push   QWORD PTR [rcx-0x4e0001a9]
  43309d:	push   rdi
  43309e:	(bad)  
  43309f:	push   QWORD PTR [rcx-0x4e0001a9]
  4330a5:	push   rdi
  4330a6:	(bad)  
  4330a7:	push   QWORD PTR [rcx-0x4e0001a9]
  4330ad:	push   rdi
  4330ae:	(bad)  
  4330af:	push   QWORD PTR [rcx+0x48fffe57]
  4330b5:	pop    rdx
  4330b6:	(bad)  
  4330b7:	push   QWORD PTR [rcx-0x4e0001a9]
  4330bd:	push   rdi
  4330be:	(bad)  
  4330bf:	push   QWORD PTR [rcx-0x4e0001a9]
  4330c5:	push   rdi
  4330c6:	(bad)  
  4330c7:	push   QWORD PTR [rcx+0x68fffe57]
  4330cd:	pop    rcx
  4330ce:	(bad)  
  4330cf:	push   QWORD PTR [rcx-0x4e0001a9]
  4330d5:	push   rdi
  4330d6:	(bad)  
  4330d7:	push   QWORD PTR [rcx-0x4e0001a9]
  4330dd:	push   rdi
  4330de:	(bad)  
  4330df:	push   QWORD PTR [rcx-0x4e0001a9]
  4330e5:	push   rdi
  4330e6:	(bad)  
  4330e7:	push   QWORD PTR [rcx-0x370001a9]
  4330ed:	pop    rax
  4330ee:	(bad)  
  4330ef:	jmp    FWORD PTR [rdi+0x75]
  4330f2:	je     0x433153
  4330f4:	ins    BYTE PTR es:[rdi],dx
  4330f5:	outs   dx,BYTE PTR gs:[rsi]
  4330f7:	add    BYTE PTR [rax+0x50],al
  4330fa:	and    eax,0x73002064
  4330ff:	jo     0x433160
  433101:	gs js  0x433169
  433104:	movsxd esi,DWORD PTR [rbp+0x74]
  433107:	gs jae 0x43317b
  43310a:	ins    BYTE PTR es:[rdi],dx
  43310b:	add    BYTE PTR [rbx+0x70],dh
  43310e:	pop    rdi
  43310f:	jo     0x433183
  433111:	gs jo  0x433175
  433114:	jb     0x43317b
  433116:	add    BYTE PTR [rbx+0x72],ah
  433119:	gs (bad) 
  43311b:	je     0x433182
  43311d:	and    BYTE PTR [rax+0x72],dh
  433120:	outs   dx,DWORD PTR ds:[rsi]
  433121:	movsxd esp,DWORD PTR [rax]
  433123:	add    BYTE PTR [rax],ah
  433125:	(bad)  
  433126:	jae    0x433148
  433128:	add    BYTE PTR [rbx+0x70],dh
  43312b:	pop    rdi
  43312c:	jo     0x4331a0
  43312e:	gs jo  0x433196
  433131:	js     0x433198
  433133:	movsxd eax,DWORD PTR [rax]
  433135:	je     0x43319b
  433137:	jae    0x433198
  433139:	jae    0x4331b0
  43313b:	(bad)  
  43313c:	ins    DWORD PTR es:[rdi],dx
  43313d:	imul   esi,DWORD PTR [rdi+rbx*2+0x65],0x75636578
  433145:	je     0x4331ac
  433147:	sub    BYTE PTR [rcx],ch
  433149:	or     al,BYTE PTR [rax]
  43314b:	je     0x4331b1
  43314d:	jae    0x4331ae
  43314f:	jae    0x4331c6
  433151:	(bad)  
  433152:	ins    DWORD PTR es:[rdi],dx
  433153:	imul   esi,DWORD PTR [rdi+rbx*2+0x75],0x6572706e
  43315b:	jo     0x4331be
  43315d:	jb     0x4331c4
  43315f:	sub    BYTE PTR [rcx],ch
  433161:	and    BYTE PTR [rip+0x73000a73],ah        # 0x73433bda
  433167:	jo     0x4331c8
  433169:	jne    0x4331d9
  43316b:	jo     0x4331df
  43316d:	gs jo  0x4331d1
  433170:	jb     0x4331d7
  433172:	add    BYTE PTR [rbx+0x65],dh
  433175:	ins    BYTE PTR es:[rdi],dx
  433176:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x31]
  43317b:	and    BYTE PTR [rdi+0x68],dh
  43317e:	gs jb  0x4331e6
  433181:	and    BYTE PTR [rax],dh
  433183:	cmp    eax,0x200031
  433188:	je     0x4331ee
  43318a:	jae    0x43318c
  43318c:	jb     0x4331fe
  43318e:	movsxd ebx,DWORD PTR [rdi+0x6e]
  433191:	(bad)  
  433192:	ins    DWORD PTR es:[rdi],dx
  433193:	add    BYTE PTR gs:[rax],ah
  433196:	rex.R
  433197:	rex.RB
  433198:	rex.XB
  433199:	rex.WR
  43319a:	push   r10
  43319c:	and    BYTE PTR [r8+0x50],r8b
  4331a0:	and    eax,0x20002064
  4331a5:	push   rbx
  4331a6:	rex.RB push r12
  4331a8:	and    BYTE PTR [rax+0x50],al
  4331ab:	and    eax,0x20003d64
  4331b0:	rex.RB pop r8
  4331b2:	rex.RB
  4331b3:	rex.XB and BYTE PTR [r8],al
  4331b6:	cmp    eax,0x25504000
  4331bb:	and    BYTE PTR fs:[rdi+0x55],cl
  4331bf:	push   rsp
  4331c0:	push   rax
  4331c1:	push   rbp
  4331c2:	push   rsp
  4331c3:	add    BYTE PTR [rax+rax*1],ch
  4331c6:	add    BYTE PTR [rsi+0x6f],ch
  4331c9:	je     0x4331eb
  4331cb:	add    BYTE PTR [rax],al
  4331cd:	add    BYTE PTR [rax],al
  4331cf:	add    BYTE PTR [rsp+riz*2+0x73],dh
  4331d3:	pop    rdi
  4331d4:	jae    0x43323b
  4331d6:	outs   dx,BYTE PTR ds:[rsi]
  4331d7:	fs pop rdi
  4331d9:	movsxd esp,DWORD PTR [rcx+0x6e]
  4331dc:	movsxd esp,DWORD PTR [rbp+0x6c]
  4331df:	cmp    ah,BYTE PTR [rax]
  4331e1:	and    eax,0x5f6e6973
  4331e6:	movsxd esp,DWORD PTR [rcx+0x6e]
  4331e9:	movsxd esp,DWORD PTR [rbp+0x6c]
  4331ec:	and    BYTE PTR [rcx+0x6e],ah
  4331ef:	and    BYTE PTR fs:[rip+0x6c646973],ah        # 0x6ca79b69
  4331f6:	or     al,BYTE PTR gs:[rax]
  4331f9:	add    BYTE PTR [rax],al
  4331fb:	add    BYTE PTR [rax],al
  4331fd:	add    BYTE PTR [rax],al
  4331ff:	add    BYTE PTR [rsp+riz*2+0x73],dh
  433203:	pop    rdi
  433204:	movsxd esi,DWORD PTR [rbp+0x72]
  433207:	jae    0x433278
  433209:	jb     0x43326a
  43320b:	fs movsxd ebp,DWORD PTR gs:[rcx+riz*2+0x72]
  433211:	sub    BYTE PTR gs:[rcx],ch
  433214:	and    BYTE PTR [rbx+0x75],ah
  433217:	jb     0x43328c
  433219:	outs   dx,DWORD PTR ds:[rsi]
  43321a:	jb     0x43323c
  43321c:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa642520
  433224:	add    BYTE PTR [rbx+0x69],dh
  433227:	jp     0x43328e
  433229:	and    BYTE PTR [rip+0xa752520],bh        # 0xab8574f
  43322f:	add    BYTE PTR [rsp+riz*2+0x73],dh
  433233:	pop    rdi
  433234:	movsxd esi,DWORD PTR [rbp+0x72]
  433237:	jae    0x4332a8
  433239:	jb     0x43329a
  43323b:	outs   dx,DWORD PTR ds:[rsi]
  43323c:	jo     0x4332a3
  43323e:	outs   dx,BYTE PTR ds:[rsi]
  43323f:	sub    BYTE PTR [rcx],ch
  433241:	and    BYTE PTR [rbx+0x75],ah
  433244:	jb     0x4332b9
  433246:	outs   dx,DWORD PTR ds:[rsi]
  433247:	jb     0x433269
  433249:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa642520
  433251:	add    BYTE PTR [rbx+0x70],dh
  433254:	pop    rdi
  433255:	movsxd esi,DWORD PTR [rbp+0x72]
  433258:	jae    0x4332c9
  43325a:	jb     0x4332cb
  43325c:	jo     0x4332c3
  43325e:	outs   dx,BYTE PTR ds:[rsi]
  43325f:	add    BYTE PTR [rsp+riz*2+0x73],dh
  433263:	pop    rdi
  433264:	movsxd esi,DWORD PTR [rbp+0x72]
  433267:	jae    0x4332d8
  433269:	jb     0x4332ca
  43326b:	outs   dx,DWORD PTR ds:[rsi]
  43326c:	jo     0x4332d3
  43326e:	outs   dx,BYTE PTR ds:[rsi]
  43326f:	and    BYTE PTR [rax],ch
  433271:	sub    DWORD PTR [rdx],edi
  433273:	and    BYTE PTR [rdx+0x50],dl
  433276:	rex.XB and BYTE PTR [r11+0x61],spl
  43327a:	ins    BYTE PTR es:[rdi],dx
  43327b:	ins    BYTE PTR es:[rdi],dx
  43327c:	and    BYTE PTR [rbx+0x65],dh
  43327f:	je     0x4332a1
  433281:	jne    0x4332f3
  433283:	and    BYTE PTR [rdx],cl
  433285:	add    BYTE PTR [rax],al
  433287:	add    BYTE PTR [rsp+riz*2+0x73],dh
  43328b:	pop    rdi
  43328c:	movsxd esi,DWORD PTR [rbp+0x72]
  43328f:	jae    0x433300
  433291:	jb     0x4332f2
  433293:	outs   dx,DWORD PTR ds:[rsi]
  433294:	jo     0x4332fb
  433296:	outs   dx,BYTE PTR ds:[rsi]
  433297:	and    BYTE PTR [rax],ch
  433299:	sub    DWORD PTR [rdx],edi
  43329b:	and    BYTE PTR [rbx+0x75],ah
  43329e:	jb     0x433313
  4332a0:	outs   dx,DWORD PTR ds:[rsi]
  4332a1:	jb     0x4332c3
  4332a3:	outs   dx,DWORD PTR ds:[rsi]
  4332a4:	jo     0x43330b
  4332a6:	outs   dx,BYTE PTR ds:[rsi]
  4332a7:	and    BYTE PTR [rbx+0x6f],ah
  4332aa:	ins    DWORD PTR es:[rdi],dx
  4332ab:	jo     0x433319
  4332ad:	gs je  0x433315
  4332b0:	or     al,BYTE PTR fs:[rax]
  4332b3:	add    BYTE PTR [rax],al
  4332b5:	add    BYTE PTR [rax],al
  4332b7:	add    BYTE PTR [rsp+riz*2+0x73],dh
  4332bb:	pop    rdi
  4332bc:	movsxd esi,DWORD PTR [rbp+0x72]
  4332bf:	jae    0x433330
  4332c1:	jb     0x433322
  4332c3:	jae    0x43332a
  4332c5:	je     0x433339
  4332c7:	outs   dx,DWORD PTR ds:[rsi]
  4332c8:	ja     0x43333d
  4332ca:	sub    BYTE PTR [rcx],ch
  4332cc:	and    BYTE PTR [rbx+0x75],ah
  4332cf:	jb     0x433344
  4332d1:	outs   dx,DWORD PTR ds:[rsi]
  4332d2:	jb     0x4332f4
  4332d4:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa642520
  4332dc:	add    BYTE PTR [rax],al
  4332de:	add    BYTE PTR [rax],al
  4332e0:	je     0x433346
  4332e2:	jae    0x433343
  4332e4:	movsxd esi,DWORD PTR [rbp+0x72]
  4332e7:	jae    0x433358
  4332e9:	jb     0x43334a
  4332eb:	data16 gs je 0x433352
  4332ef:	push   0x63202928
  4332f4:	jne    0x433368
  4332f6:	jae    0x433367
  4332f8:	jb     0x43331a
  4332fa:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa642520
  433302:	add    BYTE PTR [rax],al
  433304:	add    BYTE PTR [rax],al
  433306:	add    BYTE PTR [rax],al
  433308:	je     0x43336e
  43330a:	jae    0x43336b
  43330c:	movsxd esi,DWORD PTR [rbp+0x72]
  43330f:	jae    0x433380
  433311:	jb     0x433372
  433313:	addr32 gs je 0x433376
  433317:	movsxd esi,DWORD PTR [rbp+0x72]
  43331a:	jae    0x43338b
  43331c:	jb     0x43337d
  43331e:	imul   ebp,DWORD PTR [rsi+0x66],0x2029286f
  433325:	movsxd esi,DWORD PTR [rbp+0x72]
  433328:	jae    0x433399
  43332a:	jb     0x43334c
  43332c:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa642520
  433334:	add    BYTE PTR [rax+0x72],dh
  433337:	outs   dx,DWORD PTR ds:[rsi]
  433338:	ja     0x433399
  43333a:	outs   dx,BYTE PTR ds:[rsi]
  43333b:	jne    0x4333aa
  43333d:	(bad)  
  43333e:	gs jb  0x433361
  433341:	es and BYTE PTR es:[rax+0x72],dh
  433346:	outs   dx,DWORD PTR ds:[rsi]
  433347:	ja     0x4333a8
  433349:	movsxd ebp,DWORD PTR [rdi+0x75]
  43334c:	outs   dx,BYTE PTR ds:[rsi]
  43334d:	je     0x43334f
  43334f:	add    BYTE PTR [rsp+riz*2+0x73],dh
  433353:	pop    rdi
  433354:	movsxd esi,DWORD PTR [rbp+0x72]
  433357:	jae    0x4333c8
  433359:	jb     0x4333ba
  43335b:	addr32 gs je 0x4333be
  43335f:	movsxd esi,DWORD PTR [rbp+0x72]
  433362:	jae    0x4333d3
  433364:	jb     0x4333c5
  433366:	imul   ebp,DWORD PTR [rsi+0x66],0x74203a6f
  43336d:	fs jae 0x4333cf
  433370:	jo     0x4333e4
  433372:	outs   dx,DWORD PTR ds:[rsi]
  433373:	movsxd esp,DWORD PTR [rbp+0x73]
  433376:	jae    0x4333d7
  433378:	je     0x4333e9
  43337a:	imul   esp,DWORD PTR [rbp+0x6e],0x73
  43337e:	and    BYTE PTR [rdx+0x65],dh
  433381:	je     0x4333f8
  433383:	jb     0x4333f3
  433385:	gs and BYTE PTR fs:[rip+0xa64],ah        # 0x433df1
  43338d:	add    BYTE PTR [rax],al
  43338f:	add    BYTE PTR [rax],ah
  433391:	and    BYTE PTR [rax],ah
  433393:	and    BYTE PTR [rdx+0x65],dh
  433396:	jae    0x43340d
  433398:	ins    BYTE PTR es:[rdi],dx
  433399:	je     0x4333fa
  43339b:	je     0x433416
  43339d:	jo     0x433404
  43339f:	cmp    eax,0x202c6425
  4333a4:	push   rsp
  4333a5:	rex.R push rbx
  4333a7:	pop    rdi
  4333a8:	rex.R
  4333a9:	rex.WRXB
  4333aa:	rex.WRX
  4333ab:	rex.RB pop r15
  4333ad:	rex.XB
  4333ae:	rex.WRXB push r13
  4333b0:	rex.WRX push rsp
  4333b2:	cmp    eax,0x202c7825
  4333b7:	push   rsp
  4333b8:	rex.R push rbx
  4333ba:	pop    rdi
  4333bb:	rex.R
  4333bc:	rex.WRXB
  4333bd:	rex.WRX
  4333be:	rex.RB pop r15
  4333c0:	rex.RB push r10
  4333c2:	push   rdx
  4333c3:	rex.WRXB push r10
  4333c5:	cmp    eax,0xa7825
  4333ca:	add    BYTE PTR [rax],al
  4333cc:	add    BYTE PTR [rax],al
  4333ce:	add    BYTE PTR [rax],al
  4333d0:	sub    eax,0x2d2d2d2d
  4333d5:	sub    eax,0x2d2d2d2d
  4333da:	sub    eax,0x2d2d2d2d
  4333df:	sub    eax,0x7270203e
  4333e4:	outs   dx,DWORD PTR ds:[rsi]
  4333e5:	ja     0x433446
  4333e7:	outs   dx,BYTE PTR ds:[rsi]
  4333e8:	jne    0x433457
  4333ea:	(bad)  
  4333eb:	gs jb  0x43342b
  4333ee:	and    eax,0x70202c75
  4333f3:	jb     0x433464
  4333f5:	ja     0x433456
  4333f7:	movsxd ebp,DWORD PTR [rdi+0x75]
  4333fa:	outs   dx,BYTE PTR ds:[rsi]
  4333fb:	je     0x43343a
  4333fd:	and    eax,0xa75
  433402:	add    BYTE PTR [rax],al
  433404:	add    BYTE PTR [rax],al
  433406:	add    BYTE PTR [rax],al
  433408:	je     0x43346e
  43340a:	jae    0x43346b
  43340c:	movsxd esi,DWORD PTR [rbp+0x72]
  43340f:	jae    0x433480
  433411:	jb     0x433472
  433413:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  433417:	sub    BYTE PTR gs:[rcx],ch
  43341a:	and    BYTE PTR [rbx+0x75],ah
  43341d:	jb     0x433492
  43341f:	outs   dx,DWORD PTR ds:[rsi]
  433420:	jb     0x433442
  433422:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa642520
  43342a:	add    BYTE PTR [rbx+0x70],dh
  43342d:	pop    rdi
  43342e:	movsxd esi,DWORD PTR [rbp+0x72]
  433431:	jae    0x4334a2
  433433:	jb     0x433498
  433435:	ins    BYTE PTR es:[rdi],dx
  433436:	outs   dx,DWORD PTR ds:[rsi]
  433437:	jae    0x43349e
  433439:	add    BYTE PTR [rax],al
  43343b:	add    BYTE PTR [rax],al
  43343d:	add    BYTE PTR [rax],al
  43343f:	add    BYTE PTR [rsp+riz*2+0x73],dh
  433443:	pop    rdi
  433444:	movsxd esi,DWORD PTR [rbp+0x72]
  433447:	jae    0x4334b8
  433449:	jb     0x4334aa
  43344b:	jae    0x4334b2
  43344d:	je     0x4334bd
  43344f:	(bad)  
  433450:	ins    DWORD PTR es:[rdi],dx
  433451:	sub    BYTE PTR gs:[rcx],ch
  433454:	and    BYTE PTR [rbx+0x75],ah
  433457:	jb     0x4334cc
  433459:	outs   dx,DWORD PTR ds:[rsi]
  43345a:	jb     0x43347c
  43345c:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa642520
  433464:	add    BYTE PTR [rbx+0x70],dh
  433467:	pop    rdi
  433468:	movsxd esi,DWORD PTR [rbp+0x72]
  43346b:	jae    0x4334dc
  43346d:	jb     0x4334de
  43346f:	jo     0x4334e5
  433471:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  433478:	je     0x4334de
  43347a:	jae    0x4334db
  43347c:	movsxd esi,DWORD PTR [rbp+0x72]
  43347f:	jae    0x4334f0
  433481:	jb     0x4334e2
  433483:	jne    0x4334f5
  433485:	fs (bad) 
  433487:	je     0x4334ee
  433489:	sub    BYTE PTR [rcx],ch
  43348b:	and    BYTE PTR [rbx+0x75],ah
  43348e:	jb     0x433503
  433490:	outs   dx,DWORD PTR ds:[rsi]
  433491:	jb     0x4334b3
  433493:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa642520
  43349b:	add    BYTE PTR [rbx+0x70],dh
  43349e:	pop    rdi
  43349f:	movsxd esi,DWORD PTR [rbp+0x72]
  4334a2:	jae    0x433513
  4334a4:	jb     0x4334a6
  4334a6:	add    BYTE PTR [rax],al
  4334a8:	je     0x43350e
  4334aa:	jae    0x43350b
  4334ac:	movsxd esi,DWORD PTR [rbp+0x72]
  4334af:	jae    0x433520
  4334b1:	jb     0x433512
  4334b3:	fs gs (bad) 
  4334b6:	ins    BYTE PTR es:[rdi],dx
  4334b7:	ins    BYTE PTR es:[rdi],dx
  4334b8:	outs   dx,DWORD PTR ds:[rsi]
  4334b9:	movsxd ebp,DWORD PTR [rax]
  4334bb:	sub    DWORD PTR [rax],esp
  4334bd:	movsxd esi,DWORD PTR [rbp+0x72]
  4334c0:	jae    0x433531
  4334c2:	jb     0x4334e4
  4334c4:	imul   esp,DWORD PTR [rax+riz*1+0x3d],0xa642520
  4334cc:	add    BYTE PTR [rax],al
  4334ce:	add    BYTE PTR [rax],al
  4334d0:	je     0x433536
  4334d2:	jae    0x433533
  4334d4:	movsxd esi,DWORD PTR [rbp+0x72]
  4334d7:	jae    0x433548
  4334d9:	jb     0x43353a
  4334db:	fs gs (bad) 
  4334de:	ins    BYTE PTR es:[rdi],dx
  4334df:	ins    BYTE PTR es:[rdi],dx
  4334e0:	outs   dx,DWORD PTR ds:[rsi]
  4334e1:	movsxd ebp,DWORD PTR [rax]
  4334e3:	sub    DWORD PTR [rdx],edi
  4334e5:	and    BYTE PTR [rsi+0x72],ah
  4334e8:	gs imul ebp,DWORD PTR gs:[rsi+0x67],0x72756320
  4334f1:	jae    0x433562
  4334f3:	jb     0x433515
  4334f5:	or     al,BYTE PTR [rax]
  4334f7:	je     0x43355d
  4334f9:	jae    0x43351b
  4334fb:	es and BYTE PTR es:[rbp+0x75],ch
  433500:	ins    BYTE PTR es:[rdi],dx
  433501:	je     0x43356c
  433503:	jo     0x433571
  433505:	add    BYTE PTR gs:[rax],al
  433508:	ins    DWORD PTR es:[rdi],dx
  433509:	jne    0x433577
  43350b:	je     0x433576
  43350d:	jo     0x43357b
  43350f:	gs sub eax,0x7079743e
  433515:	and    BYTE PTR gs:[rip+0x4454203d],bh        # 0x44975559
  43351c:	push   rbx
  43351d:	pop    rdi
  43351e:	rex.WRB push r13
  433520:	rex.WR push rsp
  433522:	rex.WB push r8
  433524:	rex.WR
  433525:	rex.RB pop r15
  433527:	push   rcx
  433528:	push   rbp
  433529:	rex.RB push r10
  43352b:	pop    rcx
  43352c:	add    BYTE PTR [rax],al
  43352e:	add    BYTE PTR [rax],al
  433530:	ins    DWORD PTR es:[rdi],dx
  433531:	jne    0x43359f
  433533:	je     0x43359e
  433535:	jo     0x4335a3
  433537:	gs sub eax,0x7079743e
  43353d:	and    BYTE PTR gs:[rip+0x4454203d],bh        # 0x44975581
  433544:	push   rbx
  433545:	pop    rdi
  433546:	rex.WRB push r13
  433548:	rex.WR push rsp
  43354a:	rex.WB push r8
  43354c:	rex.WR
  43354d:	rex.RB pop r15
  43354f:	rex.RB pop r8
  433551:	rex.RB
  433552:	rex.XB push r13
  433554:	push   rsp
  433555:	add    BYTE PTR [r15+0x4e],r9b
  433559:	add    BYTE PTR [rdi+0x46],cl
  43355c:	add    BYTE PTR [rsp+r12*2+0x73],r14b
  433561:	pop    rdi
  433562:	jae    0x4335d9
  433564:	(bad)  
  433565:	ins    DWORD PTR es:[rdi],dx
  433566:	imul   esi,DWORD PTR [rdi+rbx*2+0x6f],0x6f697470
  43356e:	outs   dx,BYTE PTR ds:[rsi]
  43356f:	movsxd ebp,DWORD PTR [rbp+0x64]
  433572:	sub    BYTE PTR [rcx],ch
  433574:	and    BYTE PTR [rdx],cl
  433576:	add    BYTE PTR [rbx+0x45],dl
  433579:	push   rsp
  43357a:	and    BYTE PTR [rcx+0x4e],al
  43357d:	push   rbx
  43357e:	rex.WB pop r15
  433580:	rex.WRX push rbp
  433582:	rex.WR
  433583:	rex.WR push rbx
  433585:	and    BYTE PTR [rip+0x45530073],ah        # 0x459635fe
  43358b:	push   rsp
  43358c:	and    BYTE PTR [rcx+0x4d],cl
  43358f:	push   rax
  433590:	rex.WR
  433591:	rex.WB
  433592:	rex.XB
  433593:	rex.WB push r12
  433595:	pop    rdi
  433596:	push   rsp
  433597:	push   rdx
  433598:	rex.B
  433599:	rex.WRX push rbx
  43359b:	rex.B
  43359c:	rex.XB push r12
  43359e:	rex.WB
  43359f:	rex.WRXB
  4335a0:	rex.WRX push rbx
  4335a2:	and    BYTE PTR [rip+0x45530073],ah        # 0x4596361b
  4335a8:	push   rsp
  4335a9:	and    BYTE PTR [rbx+0x55],al
  4335ac:	push   rdx
  4335ad:	push   rbx
  4335ae:	rex.WRXB push r10
  4335b0:	pop    rdi
  4335b1:	rex.XB
  4335b2:	rex.WR
  4335b3:	rex.WRXB push r11
  4335b5:	rex.RB pop r15
  4335b7:	rex.WRXB
  4335b8:	rex.WRX pop rdi
  4335ba:	rex.XB
  4335bb:	rex.WRXB
  4335bc:	rex.WRB
  4335bd:	rex.WRB
  4335be:	rex.WB push r12
  4335c0:	and    BYTE PTR [rip+0x45530073],ah        # 0x45963639
  4335c6:	push   rsp
  4335c7:	and    BYTE PTR [rsi+0x4f],cl
  4335ca:	rex.XB
  4335cb:	rex.WRXB push r13
  4335cd:	rex.WRX push rsp
  4335cf:	and    BYTE PTR [rip+0x45530073],ah        # 0x45963648
  4335d5:	push   rsp
  4335d6:	and    BYTE PTR [rcx+0x55],dl
  4335d9:	rex.WRXB push r12
  4335db:	rex.RB
  4335dc:	rex.R pop rdi
  4335de:	rex.WB
  4335df:	rex.R
  4335e0:	rex.RB
  4335e1:	rex.WRX push rsp
  4335e3:	rex.WB
  4335e4:	rex.RX
  4335e5:	rex.WB
  4335e6:	rex.RB push r10
  4335e8:	and    BYTE PTR [rip+0x45530073],ah        # 0x45963661
  4335ee:	push   rsp
  4335ef:	and    BYTE PTR [rcx+0x4e],al
  4335f2:	push   rbx
  4335f3:	rex.WB pop r15
  4335f5:	push   rdi
  4335f6:	push   r10
  4335f8:	rex.WRX
  4335f9:	rex.WB
  4335fa:	rex.WRX
  4335fb:	rex.RXB push r11
  4335fd:	and    BYTE PTR [rip+0x45530073],ah        # 0x45963676
  433603:	push   rsp
  433604:	and    BYTE PTR [rcx+rax*2+0x54],al
  433608:	rex.RB
  433609:	rex.RX
  43360a:	rex.WB push r10
  43360c:	push   rbx
  43360d:	push   rsp
  43360e:	and    BYTE PTR [rip+0x45530064],ah        # 0x45963678
  433614:	push   rsp
  433615:	and    BYTE PTR [rcx+rax*2+0x54],al
  433619:	rex.RB
  43361a:	rex.RX
  43361b:	rex.WRXB push r10
  43361d:	rex.WRB
  43361e:	push   r12
  433620:	and    BYTE PTR [rip+0x45530073],ah        # 0x45963699
  433626:	push   rsp
  433627:	and    BYTE PTR [rbp+rax*2+0x58],dl
  43362b:	push   rsp
  43362c:	push   rbx
  43362d:	rex.WB pop r10
  43362f:	and    BYTE PTR [rip+0x45530064],r12b        # 0x4596369a
  433636:	rex.WR
  433637:	rex.RB
  433638:	rex.XB push r12
  43363a:	and    BYTE PTR [rax+0x40],al
  43363d:	outs   dx,DWORD PTR ds:[rsi]
  43363e:	jo     0x4336b4
  433640:	imul   ebp,DWORD PTR [rdi+0x6e],0x77000a73
  433647:	push   0xa217461
  43364c:	add    BYTE PTR [rdi+0x70],ch
  43364f:	je     0x4336ba
  433651:	outs   dx,DWORD PTR ds:[rsi]
  433652:	outs   dx,BYTE PTR ds:[rsi]
  433653:	jbe    0x4336b6
  433655:	ins    BYTE PTR es:[rdi],dx
  433656:	and    BYTE PTR [rip+0xa642520],bh        # 0xaa75b7c
  43365c:	add    BYTE PTR [rax],al
  43365e:	add    BYTE PTR [rax],al
  433660:	je     0x4336c6
  433662:	jae    0x4336c3
  433664:	jae    0x4336db
  433666:	(bad)  
  433667:	ins    DWORD PTR es:[rdi],dx
  433668:	imul   esi,DWORD PTR [rdi+rbx*2+0x6f],0x6f697470
  433670:	outs   dx,BYTE PTR ds:[rsi]
  433671:	movsxd ebp,DWORD PTR [rbp+0x64]
  433674:	cmp    ah,BYTE PTR [rax]
  433676:	jb     0x4336dd
  433678:	je     0x4336ef
  43367a:	jb     0x4336ea
  43367c:	gs and BYTE PTR fs:[rdi+0x70],ch
  433681:	je     0x4336ec
  433683:	outs   dx,DWORD PTR ds:[rsi]
  433684:	outs   dx,BYTE PTR ds:[rsi]
  433685:	pop    rdi
  433686:	jbe    0x4336e9
  433688:	ins    BYTE PTR es:[rdi],dx
  433689:	jne    0x4336f0
  43368b:	and    BYTE PTR [rip+0xa642520],bh        # 0xaa75bb1
  433691:	add    BYTE PTR [rax],al
  433693:	add    ah,ch
  433695:	xchg   ebp,eax
  433696:	(bad)  
  433697:	call   QWORD PTR [rdx-0x6b]
  43369a:	(bad)  
  43369b:	call   FWORD PTR [rdx*4-0x6a130002]
  4336a2:	(bad)  
  4336a3:	(bad)  
  4336a4:	in     al,dx
  4336a5:	xchg   ebp,eax
  4336a6:	(bad)  
  4336a7:	(bad)  
  4336a8:	in     al,dx
  4336a9:	xchg   ebp,eax
  4336aa:	(bad)  
  4336ab:	(bad)  
  4336ac:	in     al,dx
  4336ad:	xchg   ebp,eax
  4336ae:	(bad)  
  4336af:	inc    ecx
  4336b1:	xchg   esp,eax
  4336b2:	(bad)  
  4336b3:	(bad)  
  4336b4:	in     al,dx
  4336b5:	xchg   ebp,eax
  4336b6:	(bad)  
  4336b7:	(bad)  
  4336b8:	in     al,dx
  4336b9:	xchg   ebp,eax
  4336ba:	(bad)  
  4336bb:	(bad)  
  4336bc:	in     al,dx
  4336bd:	xchg   ebp,eax
  4336be:	(bad)  
  4336bf:	(bad)  
  4336c0:	in     al,dx
  4336c1:	xchg   ebp,eax
  4336c2:	(bad)  
  4336c3:	(bad)  
  4336c4:	in     al,dx
  4336c5:	xchg   ebp,eax
  4336c6:	(bad)  
  4336c7:	(bad)  
  4336c8:	in     al,dx
  4336c9:	xchg   ebp,eax
  4336ca:	(bad)  
  4336cb:	(bad)  
  4336cc:	in     al,dx
  4336cd:	xchg   ebp,eax
  4336ce:	(bad)  
  4336cf:	push   QWORD PTR [rbx-0x1300016d]
  4336d5:	xchg   ebp,eax
  4336d6:	(bad)  
  4336d7:	push   QWORD PTR [rbx-0x1300016d]
  4336dd:	xchg   ebp,eax
  4336de:	(bad)  
  4336df:	(bad)  
  4336e0:	in     al,dx
  4336e1:	xchg   ebp,eax
  4336e2:	(bad)  
  4336e3:	(bad)  
  4336e4:	in     al,dx
  4336e5:	xchg   ebp,eax
  4336e6:	(bad)  
  4336e7:	push   QWORD PTR [rbx-0x1300016d]
  4336ed:	xchg   ebp,eax
  4336ee:	(bad)  
  4336ef:	(bad)  
  4336f0:	in     al,dx
  4336f1:	xchg   ebp,eax
  4336f2:	(bad)  
  4336f3:	(bad)  
  4336f4:	in     al,dx
  4336f5:	xchg   ebp,eax
  4336f6:	(bad)  
  4336f7:	push   QWORD PTR [rbx-0x4c00016d]
  4336fd:	xchg   ebx,eax
  4336fe:	(bad)  
  4336ff:	(bad)  
  433700:	in     al,dx
  433701:	xchg   ebp,eax
  433702:	(bad)  
  433703:	(bad)  
  433704:	in     al,dx
  433705:	xchg   ebp,eax
  433706:	(bad)  
  433707:	(bad)  
  433708:	in     al,dx
  433709:	xchg   ebp,eax
  43370a:	(bad)  
  43370b:	(bad)  
  43370c:	in     al,dx
  43370d:	xchg   ebp,eax
  43370e:	(bad)  
  43370f:	(bad)  
  433710:	in     al,dx
  433711:	xchg   ebp,eax
  433712:	(bad)  
  433713:	(bad)  
  433714:	in     al,dx
  433715:	xchg   ebp,eax
  433716:	(bad)  
  433717:	(bad)  
  433718:	in     al,dx
  433719:	xchg   ebp,eax
  43371a:	(bad)  
  43371b:	push   QWORD PTR [rbx-0x4c00016d]
  433721:	xchg   ebx,eax
  433722:	(bad)  
  433723:	push   QWORD PTR [rbx-0x4c00016d]
  433729:	xchg   ebx,eax
  43372a:	(bad)  
  43372b:	push   QWORD PTR [rbx+0x8fffe93]
  433731:	cwde   
  433732:	(bad)  
  433733:	jmp    FWORD PTR [rbp-0x32000168]
  433739:	cwde   
  43373a:	(bad)  
  43373b:	dec    DWORD PTR [rax]
  43373d:	cwde   
  43373e:	(bad)  
  43373f:	dec    DWORD PTR [rax]
  433741:	cwde   
  433742:	(bad)  
  433743:	dec    DWORD PTR [rax]
  433745:	cwde   
  433746:	(bad)  
  433747:	dec    DWORD PTR [rax]
  433749:	cwde   
  43374a:	(bad)  
  43374b:	call   FWORD PTR [rbp-0x68]
  43374e:	(bad)  
  43374f:	dec    DWORD PTR [rax]
  433751:	cwde   
  433752:	(bad)  
  433753:	dec    DWORD PTR [rax]
  433755:	cwde   
  433756:	(bad)  
  433757:	dec    DWORD PTR [rax]
  433759:	cwde   
  43375a:	(bad)  
  43375b:	dec    DWORD PTR [rax]
  43375d:	cwde   
  43375e:	(bad)  
  43375f:	dec    DWORD PTR [rax]
  433761:	cwde   
  433762:	(bad)  
  433763:	dec    DWORD PTR [rax]
  433765:	cwde   
  433766:	(bad)  
  433767:	dec    DWORD PTR [rax]
  433769:	cwde   
  43376a:	(bad)  
  43376b:	call   QWORD PTR [rip+0x8fffe98]        # 0x9433609
  433771:	cwde   
  433772:	(bad)  
  433773:	call   rdi
  433775:	xchg   edi,eax
  433776:	(bad)  
  433777:	dec    DWORD PTR [rax]
  433779:	cwde   
  43377a:	(bad)  
  43377b:	dec    DWORD PTR [rax]
  43377d:	cwde   
  43377e:	(bad)  
  43377f:	dec    DWORD PTR [rax]
  433781:	cwde   
  433782:	(bad)  
  433783:	jmp    QWORD PTR [rbp+0x8fffe97]
  433789:	cwde   
  43378a:	(bad)  
  43378b:	dec    DWORD PTR [rax]
  43378d:	cwde   
  43378e:	(bad)  
  43378f:	dec    DWORD PTR [rax]
  433791:	cwde   
  433792:	(bad)  
  433793:	push   QWORD PTR [rbx-0x69]
  433796:	(bad)  
  433797:	inc    DWORD PTR [rcx-0x69]
  43379a:	(bad)  
  43379b:	dec    DWORD PTR [rax]
  43379d:	cwde   
  43379e:	(bad)  
  43379f:	dec    DWORD PTR [rax]
  4337a1:	cwde   
  4337a2:	(bad)  
  4337a3:	dec    DWORD PTR [rax]
  4337a5:	cwde   
  4337a6:	(bad)  
  4337a7:	dec    DWORD PTR [rax]
  4337a9:	cwde   
  4337aa:	(bad)  
  4337ab:	dec    DWORD PTR [rax]
  4337ad:	cwde   
  4337ae:	(bad)  
  4337af:	dec    DWORD PTR [rax]
  4337b1:	cwde   
  4337b2:	(bad)  
  4337b3:	dec    DWORD PTR [rax]
  4337b5:	cwde   
  4337b6:	(bad)  
  4337b7:	dec    DWORD PTR [rdi]
  4337b9:	xchg   edi,eax
  4337ba:	(bad)  
  4337bb:	(bad)  
  4337bc:	fst    QWORD PTR [rsi-0x695b0002]
  4337c2:	(bad)  
  4337c3:	jmp    FWORD PTR [rsi]
  4337c5:	xchg   esi,eax
  4337c6:	(bad)  
  4337c7:	(bad)  
  4337c8:	jnp    0x433762
  4337ca:	(bad)  
  4337cb:	inc    DWORD PTR [rax-0x6f]
  4337ce:	(bad)  
  4337cf:	call   QWORD PTR [rsi-0x6b]
  4337d2:	(bad)  
  4337d3:	call   QWORD PTR [rsi-0x6b]
  4337d6:	(bad)  
  4337d7:	inc    DWORD PTR [rax-0x6f]
  4337da:	(bad)  
  4337db:	inc    DWORD PTR [rax-0x6f]
  4337de:	(bad)  
  4337df:	inc    DWORD PTR [rax-0x6f]
  4337e2:	(bad)  
  4337e3:	inc    DWORD PTR [rax-0x6f]
  4337e6:	(bad)  
  4337e7:	jmp    QWORD PTR [rdx]
  4337e9:	xchg   ebp,eax
  4337ea:	(bad)  
  4337eb:	inc    DWORD PTR [rax-0x6f]
  4337ee:	(bad)  
  4337ef:	inc    DWORD PTR [rax-0x6f]
  4337f2:	(bad)  
  4337f3:	inc    DWORD PTR [rax-0x6f]
  4337f6:	(bad)  
  4337f7:	inc    DWORD PTR [rax-0x6f]
  4337fa:	(bad)  
  4337fb:	inc    DWORD PTR [rax-0x6f]
  4337fe:	(bad)  
  4337ff:	inc    DWORD PTR [rax-0x6f]
  433802:	(bad)  
  433803:	inc    DWORD PTR [rax-0x6f]
  433806:	(bad)  
  433807:	call   FWORD PTR [rsi-0x6c]
  43380a:	(bad)  
  43380b:	inc    DWORD PTR [rax-0x6f]
  43380e:	(bad)  
  43380f:	jmp    QWORD PTR [rsp+rdx*4-0x6ebf0002]
  433816:	(bad)  
  433817:	inc    DWORD PTR [rax-0x6f]
  43381a:	(bad)  
  43381b:	inc    DWORD PTR [rax-0x6f]
  43381e:	(bad)  
  43381f:	(bad)  
  433820:	jl     0x4337b7
  433822:	(bad)  
  433823:	inc    DWORD PTR [rax-0x6f]
  433826:	(bad)  
  433827:	inc    DWORD PTR [rax-0x6f]
  43382a:	(bad)  
  43382b:	inc    DWORD PTR [rax-0x6f]
  43382e:	(bad)  
  43382f:	jmp    QWORD PTR [rbp-0x6b]
  433832:	(bad)  
  433833:	dec    DWORD PTR [rdi]
  433835:	xchg   ebp,eax
  433836:	(bad)  
  433837:	inc    DWORD PTR [rax-0x6f]
  43383a:	(bad)  
  43383b:	inc    DWORD PTR [rax-0x6f]
  43383e:	(bad)  
  43383f:	inc    DWORD PTR [rax-0x6f]
  433842:	(bad)  
  433843:	inc    DWORD PTR [rax-0x6f]
  433846:	(bad)  
  433847:	inc    DWORD PTR [rax-0x6f]
  43384a:	(bad)  
  43384b:	inc    DWORD PTR [rax-0x6f]
  43384e:	(bad)  
  43384f:	inc    DWORD PTR [rax-0x6f]
  433852:	(bad)  
  433853:	(bad)  
  433854:	clc    
  433855:	xchg   esp,eax
  433856:	(bad)  
  433857:	jmp    rcx
  433859:	xchg   esp,eax
  43385a:	(bad)  
  43385b:	call   FWORD PTR [rsi-0x6c]
  43385e:	(bad)  
  43385f:	jmp    QWORD PTR [rsp+rdx*4-0x6ac00002]
  433866:	(bad)  
  433867:	push   rdi
  433869:	xchg   edi,eax
  43386a:	(bad)  
  43386b:	push   rdi
  43386d:	xchg   edi,eax
  43386e:	(bad)  
  43386f:	inc    DWORD PTR [rax]
  433871:	cwde   
  433872:	(bad)  
  433873:	(bad)  
  433874:	in     eax,dx
  433875:	xchg   edi,eax
  433876:	(bad)  
  433877:	push   rdi
  433879:	xchg   edi,eax
  43387a:	(bad)  
  43387b:	push   rdi
  43387d:	xchg   edi,eax
  43387e:	(bad)  
  43387f:	push   rdi
  433881:	xchg   edi,eax
  433882:	(bad)  
  433883:	push   rdi
  433885:	xchg   edi,eax
  433886:	(bad)  
  433887:	push   rdi
  433889:	xchg   edi,eax
  43388a:	(bad)  
  43388b:	push   rdi
  43388d:	xchg   edi,eax
  43388e:	(bad)  
  43388f:	push   rdi
  433891:	xchg   edi,eax
  433892:	(bad)  
  433893:	push   rdi
  433895:	xchg   edi,eax
  433896:	(bad)  
  433897:	push   rdi
  433899:	xchg   edi,eax
  43389a:	(bad)  
  43389b:	push   rdi
  43389d:	xchg   edi,eax
  43389e:	(bad)  
  43389f:	push   rdi
  4338a1:	xchg   edi,eax
  4338a2:	(bad)  
  4338a3:	push   rdi
  4338a5:	xchg   edi,eax
  4338a6:	(bad)  
  4338a7:	push   rdi
  4338a9:	xchg   edi,eax
  4338aa:	(bad)  
  4338ab:	push   rdi
  4338ad:	xchg   edi,eax
  4338ae:	(bad)  
  4338af:	push   rdi
  4338b1:	xchg   edi,eax
  4338b2:	(bad)  
  4338b3:	push   rdi
  4338b5:	xchg   edi,eax
  4338b6:	(bad)  
  4338b7:	push   rdi
  4338b9:	xchg   edi,eax
  4338ba:	(bad)  
  4338bb:	push   rdi
  4338bd:	xchg   edi,eax
  4338be:	(bad)  
  4338bf:	push   rdi
  4338c1:	xchg   edi,eax
  4338c2:	(bad)  
  4338c3:	push   rdi
  4338c5:	xchg   edi,eax
  4338c6:	(bad)  
  4338c7:	push   rdi
  4338c9:	xchg   edi,eax
  4338ca:	(bad)  
  4338cb:	push   rdi
  4338cd:	xchg   edi,eax
  4338ce:	(bad)  
  4338cf:	push   rdi
  4338d1:	xchg   edi,eax
  4338d2:	(bad)  
  4338d3:	push   rdi
  4338d5:	xchg   edi,eax
  4338d6:	(bad)  
  4338d7:	push   rdi
  4338d9:	xchg   edi,eax
  4338da:	(bad)  
  4338db:	push   rdi
  4338dd:	xchg   edi,eax
  4338de:	(bad)  
  4338df:	push   rdi
  4338e1:	xchg   edi,eax
  4338e2:	(bad)  
  4338e3:	push   rdi
  4338e5:	xchg   edi,eax
  4338e6:	(bad)  
  4338e7:	(bad)  
  4338e8:	ficom  DWORD PTR [rdi-0x68080002]
  4338ee:	(bad)  
  4338ef:	inc    edi
  4338f1:	xchg   edi,eax
  4338f2:	(bad)  
  4338f3:	push   rdi
  4338f5:	xchg   edi,eax
  4338f6:	(bad)  
  4338f7:	push   rdi
  4338f9:	xchg   edi,eax
  4338fa:	(bad)  
  4338fb:	push   rdi
  4338fd:	xchg   edi,eax
  4338fe:	(bad)  
  4338ff:	push   rdi
  433901:	xchg   edi,eax
  433902:	(bad)  
  433903:	push   rdi
  433905:	xchg   edi,eax
  433906:	(bad)  
  433907:	push   rdi
  433909:	xchg   edi,eax
  43390a:	(bad)  
  43390b:	push   rdi
  43390d:	xchg   edi,eax
  43390e:	(bad)  
  43390f:	push   rdi
  433911:	xchg   edi,eax
  433912:	(bad)  
  433913:	push   rdi
  433915:	xchg   edi,eax
  433916:	(bad)  
  433917:	push   rdi
  433919:	xchg   edi,eax
  43391a:	(bad)  
  43391b:	push   rdi
  43391d:	xchg   edi,eax
  43391e:	(bad)  
  43391f:	push   rdi
  433921:	xchg   edi,eax
  433922:	(bad)  
  433923:	push   rdi
  433925:	xchg   edi,eax
  433926:	(bad)  
  433927:	push   rdi
  433929:	xchg   edi,eax
  43392a:	(bad)  
  43392b:	push   rdi
  43392d:	xchg   edi,eax
  43392e:	(bad)  
  43392f:	push   rdi
  433931:	xchg   edi,eax
  433932:	(bad)  
  433933:	push   rdi
  433935:	xchg   edi,eax
  433936:	(bad)  
  433937:	push   rdi
  433939:	xchg   edi,eax
  43393a:	(bad)  
  43393b:	push   rdi
  43393d:	xchg   edi,eax
  43393e:	(bad)  
  43393f:	push   rdi
  433941:	xchg   edi,eax
  433942:	(bad)  
  433943:	push   rdi
  433945:	xchg   edi,eax
  433946:	(bad)  
  433947:	push   rdi
  433949:	xchg   edi,eax
  43394a:	(bad)  
  43394b:	push   rdi
  43394d:	xchg   edi,eax
  43394e:	(bad)  
  43394f:	push   rdi
  433951:	xchg   edi,eax
  433952:	(bad)  
  433953:	push   rdi
  433955:	xchg   edi,eax
  433956:	(bad)  
  433957:	push   QWORD PTR [rdi+rdx*4-0x684b0002]
  43395e:	(bad)  
  43395f:	jmp    QWORD PTR [rbx]
  433961:	xchg   edi,eax
  433962:	(bad)  
  433963:	jmp    QWORD PTR [rdx-0x69]
  433966:	(bad)  
  433967:	jmp    FWORD PTR [rdi+rdx*4-0x2]
  43396b:	call   FWORD PTR [rax-0x69]
  43396e:	(bad)  
  43396f:	dec    DWORD PTR [rsi-0x69]
  433972:	(bad)  
  433973:	inc    DWORD PTR [rdi+rdx*4-0x2]
  433977:	call   FWORD PTR [rbx]
  433979:	xchg   edi,eax
  43397a:	(bad)  
  43397b:	jmp    rbx
  43397d:	xchg   esi,eax
  43397e:	(bad)  
  43397f:	jmp    QWORD PTR [rdx-0x5d00016d]
  433985:	xchg   ebx,eax
  433986:	(bad)  
  433987:	jmp    rbx
  433989:	xchg   esi,eax
  43398a:	(bad)  
  43398b:	jmp    rbx
  43398d:	xchg   esi,eax
  43398e:	(bad)  
  43398f:	jmp    rbx
  433991:	xchg   esi,eax
  433992:	(bad)  
  433993:	jmp    rbx
  433995:	xchg   esi,eax
  433996:	(bad)  
  433997:	push   QWORD PTR [rdx-0x6d]
  43399a:	(bad)  
  43399b:	jmp    rbx
  43399d:	xchg   esi,eax
  43399e:	(bad)  
  43399f:	jmp    rbx
  4339a1:	xchg   esi,eax
  4339a2:	(bad)  
  4339a3:	jmp    rbx
  4339a5:	xchg   esi,eax
  4339a6:	(bad)  
  4339a7:	jmp    rbx
  4339a9:	xchg   esi,eax
  4339aa:	(bad)  
  4339ab:	jmp    rbx
  4339ad:	xchg   esi,eax
  4339ae:	(bad)  
  4339af:	jmp    rbx
  4339b1:	xchg   esi,eax
  4339b2:	(bad)  
  4339b3:	jmp    rbx
  4339b5:	xchg   esi,eax
  4339b6:	(bad)  
  4339b7:	jmp    FWORD PTR [rdx-0x1c00016e]
  4339bd:	xchg   esi,eax
  4339be:	(bad)  
  4339bf:	push   rax
  4339c1:	xchg   edx,eax
  4339c2:	(bad)  
  4339c3:	jmp    rbx
  4339c5:	xchg   esi,eax
  4339c6:	(bad)  
  4339c7:	jmp    rbx
  4339c9:	xchg   esi,eax
  4339ca:	(bad)  
  4339cb:	jmp    rbx
  4339cd:	xchg   esi,eax
  4339ce:	(bad)  
  4339cf:	dec    eax
  4339d1:	xchg   ebx,eax
  4339d2:	(bad)  
  4339d3:	jmp    rbx
  4339d5:	xchg   esi,eax
  4339d6:	(bad)  
  4339d7:	jmp    rbx
  4339d9:	xchg   esi,eax
  4339da:	(bad)  
  4339db:	jmp    rbx
  4339dd:	xchg   esi,eax
  4339de:	(bad)  
  4339df:	push   QWORD PTR [rcx+0x5bfffe93]
  4339e5:	xchg   ebx,eax
  4339e6:	(bad)  
  4339e7:	jmp    rbx
  4339e9:	xchg   esi,eax
  4339ea:	(bad)  
  4339eb:	jmp    rbx
  4339ed:	xchg   esi,eax
  4339ee:	(bad)  
  4339ef:	jmp    rbx
  4339f1:	xchg   esi,eax
  4339f2:	(bad)  
  4339f3:	jmp    rbx
  4339f5:	xchg   esi,eax
  4339f6:	(bad)  
  4339f7:	jmp    rbx
  4339f9:	xchg   esi,eax
  4339fa:	(bad)  
  4339fb:	jmp    rbx
  4339fd:	xchg   esi,eax
  4339fe:	(bad)  
  4339ff:	jmp    rbx
  433a01:	xchg   esi,eax
  433a02:	(bad)  
  433a03:	inc    DWORD PTR [rbx+rdx*4-0x2]
  433a07:	jmp    FWORD PTR [rip+0xffffffffaafffe93]        # 0xffffffffab4338a0
  433a0d:	xchg   edx,eax
  433a0e:	(bad)  
  433a0f:	push   rax
  433a11:	xchg   edx,eax
  433a12:	(bad)  
  433a13:	dec    DWORD PTR [rbx+0x42fffe93]
  433a19:	rex.RB
  433a1a:	rex.RXB
  433a1b:	rex.WB
  433a1c:	rex.WRX and BYTE PTR [rdx+r10*2+0x41],r10b
  433a21:	rex.WRX push rbx
  433a23:	rex.B
  433a24:	rex.XB push r12
  433a26:	rex.WB
  433a27:	rex.WRXB
  433a28:	rex.WRX add BYTE PTR [rax],r8b
  433a2b:	add    BYTE PTR [rax],al
  433a2d:	add    BYTE PTR [rax],al
  433a2f:	add    BYTE PTR [rcx+0x46],cl
  433a32:	and    BYTE PTR [rax+0x40],al
  433a35:	push   rsp
  433a36:	push   rdx
  433a37:	rex.B
  433a38:	rex.WRX
  433a39:	rex.XB
  433a3a:	rex.WRXB push r13
  433a3c:	rex.WRX push rsp
  433a3e:	and    BYTE PTR [rsi],bh
  433a40:	and    BYTE PTR [rax],dh
  433a42:	and    BYTE PTR [rdx+0x4f],dl
  433a45:	rex.WR
  433a46:	rex.WR
  433a47:	rex.X
  433a48:	rex.B
  433a49:	rex.XB
  433a4a:	rex.WXB and BYTE PTR [r10+0x45],al
  433a4e:	rex.RXB
  433a4f:	rex.WB
  433a50:	rex.WRX and BYTE PTR [rdx+r10*2+0x41],r10b
  433a55:	rex.WRX push rbx
  433a57:	rex.B
  433a58:	rex.XB push r12
  433a5a:	rex.WB
  433a5b:	rex.WRXB
  433a5c:	rex.WRX add BYTE PTR [rcx+0x46],r9b
  433a60:	and    BYTE PTR [rax+0x40],al
  433a63:	push   rsp
  433a64:	push   rdx
  433a65:	rex.B
  433a66:	rex.WRX
  433a67:	rex.XB
  433a68:	rex.WRXB push r13
  433a6a:	rex.WRX push rsp
  433a6c:	and    BYTE PTR [rsi],bh
  433a6e:	and    BYTE PTR [rax],dh
  433a70:	and    BYTE PTR [rdx+0x4f],dl
  433a73:	rex.WR
  433a74:	rex.WR
  433a75:	rex.X
  433a76:	rex.B
  433a77:	rex.XB
  433a78:	rex.WXB add BYTE PTR [r8],al
  433a7b:	add    BYTE PTR [rax],al
  433a7d:	add    BYTE PTR [rax],al
  433a7f:	add    BYTE PTR [rcx+0x46],cl
  433a82:	and    BYTE PTR [rax+0x40],al
  433a85:	push   rsp
  433a86:	push   rdx
  433a87:	rex.B
  433a88:	rex.WRX
  433a89:	rex.XB
  433a8a:	rex.WRXB push r13
  433a8c:	rex.WRX push rsp
  433a8e:	and    BYTE PTR [rsi],bh
  433a90:	and    BYTE PTR [rax],dh
  433a92:	and    BYTE PTR [rbx+0x4f],al
  433a95:	rex.WRB
  433a96:	rex.WRB
  433a97:	rex.WB push r12
  433a99:	and    BYTE PTR [rdx+0x45],al
  433a9c:	rex.RXB
  433a9d:	rex.WB
  433a9e:	rex.WRX and BYTE PTR [rdx+r10*2+0x41],r10b
  433aa3:	rex.WRX push rbx
  433aa5:	rex.B
  433aa6:	rex.XB push r12
  433aa8:	rex.WB
  433aa9:	rex.WRXB
  433aaa:	rex.WRX add BYTE PTR [rcx+0x46],r9b
  433aae:	and    BYTE PTR [rax+0x40],al
  433ab1:	push   rsp
  433ab2:	push   rdx
  433ab3:	rex.B
  433ab4:	rex.WRX
  433ab5:	rex.XB
  433ab6:	rex.WRXB push r13
  433ab8:	rex.WRX push rsp
  433aba:	and    BYTE PTR [rsi],bh
  433abc:	and    BYTE PTR [rax],dh
  433abe:	and    BYTE PTR [rbx+0x4f],al
  433ac1:	rex.WRB
  433ac2:	rex.WRB
  433ac3:	rex.WB push r12
  433ac5:	add    BYTE PTR [rsp+riz*2+0x73],dh
  433ac9:	pop    rdi
  433aca:	imul   esi,DWORD PTR fs:[rbx+0x63],0x656e6e6f
  433ad2:	movsxd esi,DWORD PTR [rax+rbp*1+0x29]
  433ad6:	and    BYTE PTR [rdx],cl
  433ad8:	add    BYTE PTR [rax],al
  433ada:	add    al,BYTE PTR [rcx+rax*1]
  433add:	or     BYTE PTR [rax],dl
  433adf:	and    BYTE PTR [rax],al
	...
  433b3d:	add    BYTE PTR [rax],al
  433b3f:	add    al,al
  433b41:	(bad)  
  433b42:	(bad)  
  433b43:	inc    eax
  433b45:	(bad)  
  433b46:	(bad)  
  433b47:	inc    eax
  433b49:	(bad)  
  433b4a:	(bad)  
  433b4b:	inc    eax
  433b4d:	(bad)  
  433b4e:	(bad)  
  433b4f:	inc    eax
  433b51:	(bad)  
  433b52:	(bad)  
  433b53:	jmp    rax
  433b55:	(bad)  
  433b56:	(bad)  
  433b57:	jmp    rax
  433b59:	(bad)  
  433b5a:	(bad)  
  433b5b:	jmp    rax
  433b5d:	(bad)  
  433b5e:	(bad)  
  433b5f:	jmp    rax
  433b61:	(bad)  
  433b62:	(bad)  
  433b63:	jmp    rax
  433b65:	(bad)  
  433b66:	(bad)  
  433b67:	call   rax
  433b69:	(bad)  
  433b6a:	(bad)  
  433b6b:	call   rax
  433b6d:	(bad)  
  433b6e:	(bad)  
  433b6f:	call   rax
  433b71:	(bad)  
  433b72:	(bad)  
  433b73:	call   rax
  433b75:	(bad)  
  433b76:	(bad)  
  433b77:	call   rax
  433b79:	(bad)  
  433b7a:	(bad)  
  433b7b:	jmp    rax
  433b7d:	(bad)  
  433b7e:	(bad)  
  433b7f:	jmp    rax
  433b81:	(bad)  
  433b82:	(bad)  
  433b83:	jmp    rax
  433b85:	(bad)  
  433b86:	(bad)  
  433b87:	jmp    rax
  433b89:	(bad)  
  433b8a:	(bad)  
  433b8b:	call   rax
  433b8d:	(bad)  
  433b8e:	(bad)  
  433b8f:	jmp    rax
  433b91:	(bad)  
  433b92:	(bad)  
  433b93:	jmp    rax
  433b95:	(bad)  
  433b96:	(bad)  
  433b97:	jmp    rax
  433b99:	(bad)  
  433b9a:	(bad)  
  433b9b:	jmp    rax
  433b9d:	(bad)  
  433b9e:	(bad)  
  433b9f:	jmp    rax
  433ba1:	(bad)  
  433ba2:	(bad)  
  433ba3:	call   rax
  433ba5:	(bad)  
  433ba6:	(bad)  
  433ba7:	call   rax
  433ba9:	(bad)  
  433baa:	(bad)  
  433bab:	call   rax
  433bad:	(bad)  
  433bae:	(bad)  
  433baf:	call   rax
  433bb1:	(bad)  
  433bb2:	(bad)  
  433bb3:	call   rax
  433bb5:	(bad)  
  433bb6:	(bad)  
  433bb7:	call   rax
  433bb9:	(bad)  
  433bba:	(bad)  
  433bbb:	call   rax
  433bbd:	(bad)  
  433bbe:	(bad)  
  433bbf:	jmp    rax
  433bc1:	(bad)  
  433bc2:	(bad)  
  433bc3:	jmp    rax
  433bc5:	(bad)  
  433bc6:	(bad)  
  433bc7:	jmp    rax
  433bc9:	(bad)  
  433bca:	(bad)  
  433bcb:	jmp    rax
  433bcd:	(bad)  
  433bce:	(bad)  
  433bcf:	jmp    rax
  433bd1:	(bad)  
  433bd2:	(bad)  
  433bd3:	jmp    rax
  433bd5:	(bad)  
  433bd6:	(bad)  
  433bd7:	jmp    rax
  433bd9:	(bad)  
  433bda:	(bad)  
  433bdb:	jmp    rax
  433bdd:	(bad)  
  433bde:	(bad)  
  433bdf:	jmp    rax
  433be1:	(bad)  
  433be2:	(bad)  
  433be3:	jmp    rax
  433be5:	(bad)  
  433be6:	(bad)  
  433be7:	jmp    rax
  433be9:	(bad)  
  433bea:	(bad)  
  433beb:	jmp    rax
  433bed:	(bad)  
  433bee:	(bad)  
  433bef:	jmp    rax
  433bf1:	(bad)  
  433bf2:	(bad)  
  433bf3:	jmp    rax
  433bf5:	(bad)  
  433bf6:	(bad)  
  433bf7:	jmp    rax
  433bf9:	(bad)  
  433bfa:	(bad)  
  433bfb:	jmp    rax
  433bfd:	(bad)  
  433bfe:	(bad)  
  433bff:	jmp    rax
  433c01:	(bad)  
  433c02:	(bad)  
  433c03:	jmp    rax
  433c05:	(bad)  
  433c06:	(bad)  
  433c07:	jmp    QWORD PTR [rdx]
  433c09:	(bad)  
  433c0a:	(bad)  
  433c0b:	jmp    QWORD PTR [rdx]
  433c0d:	(bad)  
  433c0e:	(bad)  
  433c0f:	jmp    QWORD PTR [rdx]
  433c11:	(bad)  
  433c12:	(bad)  
  433c13:	jmp    rax
  433c15:	(bad)  
  433c16:	(bad)  
  433c17:	jmp    rax
  433c19:	(bad)  
  433c1a:	(bad)  
  433c1b:	jmp    rax
  433c1d:	(bad)  
  433c1e:	(bad)  
  433c1f:	jmp    rax
  433c21:	(bad)  
  433c22:	(bad)  
  433c23:	jmp    rax
  433c25:	(bad)  
  433c26:	(bad)  
  433c27:	jmp    rax
  433c29:	(bad)  
  433c2a:	(bad)  
  433c2b:	jmp    rax
  433c2d:	(bad)  
  433c2e:	(bad)  
  433c2f:	jmp    rax
  433c31:	(bad)  
  433c32:	(bad)  
  433c33:	jmp    rax
  433c35:	(bad)  
  433c36:	(bad)  
  433c37:	jmp    rax
  433c39:	(bad)  
  433c3a:	(bad)  
  433c3b:	jmp    rax
  433c3d:	(bad)  
  433c3e:	(bad)  
  433c3f:	jmp    rax
  433c41:	(bad)  
  433c42:	(bad)  
  433c43:	jmp    rax
  433c45:	(bad)  
  433c46:	(bad)  
  433c47:	jmp    rax
  433c49:	(bad)  
  433c4a:	(bad)  
  433c4b:	jmp    rax
  433c4d:	(bad)  
  433c4e:	(bad)  
  433c4f:	jmp    rax
  433c51:	(bad)  
  433c52:	(bad)  
  433c53:	jmp    rax
  433c55:	(bad)  
  433c56:	(bad)  
  433c57:	jmp    rax
  433c59:	(bad)  
  433c5a:	(bad)  
  433c5b:	jmp    rax
  433c5d:	(bad)  
  433c5e:	(bad)  
  433c5f:	jmp    rax
  433c61:	(bad)  
  433c62:	(bad)  
  433c63:	jmp    rax
  433c65:	(bad)  
  433c66:	(bad)  
  433c67:	jmp    rax
  433c69:	(bad)  
  433c6a:	(bad)  
  433c6b:	jmp    QWORD PTR [rax-0x66]
  433c6e:	(bad)  
  433c6f:	jmp    QWORD PTR [rax-0x66]
  433c72:	(bad)  
  433c73:	jmp    rax
  433c75:	(bad)  
  433c76:	(bad)  
  433c77:	jmp    rax
  433c79:	(bad)  
  433c7a:	(bad)  
  433c7b:	jmp    rax
  433c7d:	(bad)  
  433c7e:	(bad)  
  433c7f:	jmp    rax
  433c81:	(bad)  
  433c82:	(bad)  
  433c83:	jmp    rax
  433c85:	(bad)  
  433c86:	(bad)  
  433c87:	jmp    rax
  433c89:	(bad)  
  433c8a:	(bad)  
  433c8b:	push   QWORD PTR [rax-0x66]
  433c8e:	(bad)  
  433c8f:	push   QWORD PTR [rax-0x66]
  433c92:	(bad)  
  433c93:	jmp    rax
  433c95:	(bad)  
  433c96:	(bad)  
  433c97:	jmp    rax
  433c99:	(bad)  
  433c9a:	(bad)  
  433c9b:	jmp    rax
  433c9d:	(bad)  
  433c9e:	(bad)  
  433c9f:	jmp    rax
  433ca1:	(bad)  
  433ca2:	(bad)  
  433ca3:	jmp    rax
  433ca5:	(bad)  
  433ca6:	(bad)  
  433ca7:	push   QWORD PTR [rax-0x66]
  433caa:	(bad)  
  433cab:	push   QWORD PTR [rax-0x66]
  433cae:	(bad)  
  433caf:	push   QWORD PTR [rax-0x66]
  433cb2:	(bad)  
  433cb3:	jmp    rax
  433cb5:	(bad)  
  433cb6:	(bad)  
  433cb7:	push   QWORD PTR [rax-0x66]
  433cba:	(bad)  
  433cbb:	jmp    rax
  433cbd:	(bad)  
  433cbe:	(bad)  
  433cbf:	jmp    rax
  433cc1:	(bad)  
  433cc2:	(bad)  
  433cc3:	jmp    rax
  433cc5:	(bad)  
  433cc6:	(bad)  
  433cc7:	jmp    rax
  433cc9:	(bad)  
  433cca:	(bad)  
  433ccb:	jmp    rax
  433ccd:	(bad)  
  433cce:	(bad)  
  433ccf:	jmp    rax
  433cd1:	(bad)  
  433cd2:	(bad)  
  433cd3:	jmp    rax
  433cd5:	(bad)  
  433cd6:	(bad)  
  433cd7:	jmp    rax
  433cd9:	(bad)  
  433cda:	(bad)  
  433cdb:	jmp    rax
  433cdd:	(bad)  
  433cde:	(bad)  
  433cdf:	jmp    rax
  433ce1:	(bad)  
  433ce2:	(bad)  
  433ce3:	jmp    rax
  433ce5:	(bad)  
  433ce6:	(bad)  
  433ce7:	jmp    rax
  433ce9:	(bad)  
  433cea:	(bad)  
  433ceb:	inc    DWORD PTR [rdx-0x7d000166]
  433cf1:	(bad)  
  433cf2:	(bad)  
  433cf3:	jmp    rax
  433cf5:	(bad)  
  433cf6:	(bad)  
  433cf7:	jmp    rax
  433cf9:	(bad)  
  433cfa:	(bad)  
  433cfb:	jmp    rax
  433cfd:	(bad)  
  433cfe:	(bad)  
  433cff:	jmp    rax
  433d01:	(bad)  
  433d02:	(bad)  
  433d03:	jmp    rax
  433d05:	(bad)  
  433d06:	(bad)  
  433d07:	jmp    rax
  433d09:	(bad)  
  433d0a:	(bad)  
  433d0b:	push   QWORD PTR [rax-0x4f000166]
  433d11:	(bad)  
  433d12:	(bad)  
  433d13:	jmp    rax
  433d15:	(bad)  
  433d16:	(bad)  
  433d17:	jmp    rax
  433d19:	(bad)  
  433d1a:	(bad)  
  433d1b:	jmp    rax
  433d1d:	(bad)  
  433d1e:	(bad)  
  433d1f:	jmp    rax
  433d21:	(bad)  
  433d22:	(bad)  
  433d23:	jmp    rax
  433d25:	(bad)  
  433d26:	(bad)  
  433d27:	jmp    rax
  433d29:	(bad)  
  433d2a:	(bad)  
  433d2b:	call   QWORD PTR [rax]
  433d2d:	(bad)  
  433d2e:	(bad)  
  433d2f:	call   QWORD PTR [rax]
  433d31:	(bad)  
  433d32:	(bad)  
  433d33:	push   QWORD PTR [rsi]
  433d35:	xor    al,0x36
  433d37:	add    BYTE PTR [rcx+0x63],ch
  433d3a:	outs   dx,DWORD PTR ds:[rsi]
  433d3b:	outs   dx,BYTE PTR ds:[rsi]
  433d3c:	jbe    0x433d6c
  433d3e:	movsxd eax,DWORD PTR [rax]
  433d40:	imul   esp,DWORD PTR [rbx+0x6f],0x695f766e
  433d47:	outs   dx,BYTE PTR ds:[rsi]
  433d48:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  433d50:	add    BYTE PTR fs:[rcx+0x53],cl
  433d54:	rex.WRXB sub rax,0x39353838
  433d5a:	sub    eax,0x31
  433d5f:	add    BYTE PTR [rbx+0x68],ah
  433d62:	(bad)  
  433d63:	jb     0x433dc4
  433d65:	movsxd ebp,DWORD PTR [rdi+0x6e]
  433d68:	jbe    0x433d97
  433d6a:	ds je  0x433ddc
  433d6d:	movsxd esp,DWORD PTR cs:[rax+riz*1+0x3d]
  433d72:	cmp    eax,0x63692820
  433d77:	outs   dx,DWORD PTR ds:[rsi]
  433d78:	outs   dx,BYTE PTR ds:[rsi]
  433d79:	jbe    0x433dda
  433d7b:	je     0x433da6
  433d7d:	and    BYTE PTR [rip+0x31],ch        # 0x433db4
  433d83:	add    BYTE PTR [rax],al
  433d85:	add    BYTE PTR [rax],al
  433d87:	add    BYTE PTR [rbx+0x68],ah
  433d8a:	(bad)  
  433d8b:	jb     0x433dec
  433d8d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  433d90:	jbe    0x433dbf
  433d92:	ds data16 jb 0x433e05
  433d96:	ins    DWORD PTR es:[rdi],dx
  433d97:	movsxd esp,DWORD PTR cs:[rax+riz*1+0x3d]
  433d9c:	cmp    eax,0x63692820
  433da1:	outs   dx,DWORD PTR ds:[rsi]
  433da2:	outs   dx,BYTE PTR ds:[rsi]
  433da3:	jbe    0x433e04
  433da5:	je     0x433dd0
  433da7:	and    BYTE PTR [rip+0x31],ch        # 0x433dde
  433dad:	add    BYTE PTR [rax],al
  433daf:	add    BYTE PTR [rsp+riz*2+0x73],dh
  433db3:	pop    rdi
  433db4:	imul   esp,DWORD PTR [rbx+0x6f],0x695f766e
  433dbb:	outs   dx,BYTE PTR ds:[rsi]
  433dbc:	outs   dx,WORD PTR ds:[rsi]
  433dbe:	pop    rdi
  433dbf:	imul   ebp,DWORD PTR [rsi+0x69],0x63203a74
  433dc6:	ins    BYTE PTR es:[rdi],dx
  433dc7:	imul   esp,DWORD PTR [rbp+0x6e],0x68632074
  433dce:	(bad)  
  433dcf:	jb     0x433e44
  433dd1:	gs je  0x433df4
  433dd4:	outs   dx,BYTE PTR ds:[rsi]
  433dd5:	(bad)  
  433dd6:	ins    DWORD PTR es:[rdi],dx
  433dd7:	and    BYTE PTR gs:[rdx],ah
  433dda:	and    eax,0x69202264
  433ddf:	outs   dx,BYTE PTR ds:[rsi]
  433de0:	jbe    0x433e43
  433de2:	ins    BYTE PTR es:[rdi],dx
  433de3:	imul   esp,DWORD PTR [rdx+rcx*1+0x0],0x73647400
  433deb:	pop    rdi
  433dec:	imul   esp,DWORD PTR [rbx+0x6f],0x695f766e
  433df3:	outs   dx,BYTE PTR ds:[rsi]
  433df4:	outs   dx,WORD PTR ds:[rsi]
  433df6:	pop    rdi
  433df7:	imul   ebp,DWORD PTR [rsi+0x69],0x73203a74
  433dfe:	gs jb  0x433e77
  433e01:	gs jb  0x433e24
  433e04:	movsxd ebp,DWORD PTR [rax+0x61]
  433e07:	jb     0x433e7c
  433e09:	gs je  0x433e2c
  433e0c:	outs   dx,BYTE PTR ds:[rsi]
  433e0d:	(bad)  
  433e0e:	ins    DWORD PTR es:[rdi],dx
  433e0f:	and    BYTE PTR gs:[rdx],ah
  433e12:	and    eax,0x69202264
  433e17:	outs   dx,BYTE PTR ds:[rsi]
  433e18:	jbe    0x433e7b
  433e1a:	ins    BYTE PTR es:[rdi],dx
  433e1b:	imul   esp,DWORD PTR [rdx+rcx*1+0x0],0x61684300
  433e23:	jb     0x433e98
  433e25:	gs je  0x433e48
  433e28:	and    eax,0x6f6e2064
  433e2d:	je     0x433e4f
  433e2f:	jae    0x433ea6
  433e31:	jo     0x433ea3
  433e33:	outs   dx,DWORD PTR ds:[rsi]
  433e34:	jb     0x433eaa
  433e36:	gs and BYTE PTR fs:[rdx+0x79],ah
  433e3b:	and    BYTE PTR [rcx+0x63],ch
  433e3e:	outs   dx,DWORD PTR ds:[rsi]
  433e3f:	outs   dx,BYTE PTR ds:[rsi]
  433e40:	jbe    0x433e6e
  433e42:	and    BYTE PTR [rbp+0x73],dh
  433e45:	imul   ebp,DWORD PTR [rsi+0x67],0x73252220
  433e4c:	and    ah,BYTE PTR [rax]
  433e4e:	imul   ebp,DWORD PTR [rsi+0x73],0x64616574
  433e55:	or     al,BYTE PTR [rax]
  433e57:	add    BYTE PTR [rsp+riz*2+0x73],dh
  433e5b:	pop    rdi
  433e5c:	imul   esp,DWORD PTR [rbx+0x6f],0x695f766e
  433e63:	outs   dx,BYTE PTR ds:[rsi]
  433e64:	outs   dx,WORD PTR ds:[rsi]
  433e66:	pop    rdi
  433e67:	imul   ebp,DWORD PTR [rsi+0x69],0x63203a74
  433e6e:	(bad)  
  433e6f:	outs   dx,BYTE PTR ds:[rsi]
  433e70:	outs   dx,BYTE PTR ds:[rsi]
  433e71:	outs   dx,DWORD PTR ds:[rsi]
  433e72:	je     0x433e94
  433e74:	movsxd ebp,DWORD PTR [rdi+0x6e]
  433e77:	jbe    0x433ede
  433e79:	jb     0x433eef
  433e7b:	and    BYTE PTR [rdx],ah
  433e7d:	and    eax,0x3e2d2273
  433e82:	and    ah,BYTE PTR [rip+0xa2273]        # 0x4d60fb
	...
  433e90:	jae    0x433ef7
  433e92:	je     0x433f08
  433e94:	imul   ebp,DWORD PTR [rsi+0x67],0x72657320
  433e9b:	jbe    0x433f02
  433e9d:	jb     0x433ebf
  433e9f:	jae    0x433f0a
  433ea1:	outs   dx,BYTE PTR ds:[rsi]
  433ea2:	ins    BYTE PTR es:[edi],dx
  433ea4:	gs sub eax,0x65747962
  433eaa:	and    BYTE PTR [rbx+0x68],ah
  433ead:	(bad)  
  433eae:	jb     0x433f23
  433eb0:	gs je  0x433ed3
  433eb3:	je     0x433f24
  433eb5:	and    BYTE PTR [rdx],ah
  433eb7:	and    eax,0xa2273
  433ebc:	and    DWORD PTR [rbx+0x6f],esp
  433ebf:	outs   dx,BYTE PTR ds:[rsi]
  433ec0:	outs   dx,BYTE PTR ds:[rsi]
  433ec1:	sub    eax,0x6168633e
  433ec6:	jb     0x433f27
  433ec8:	movsxd ebp,DWORD PTR [rdi+0x6e]
  433ecb:	jbe    0x433f40
  433ecd:	add    BYTE PTR [rax],ch
  433ecf:	outs   dx,BYTE PTR ds:[rsi]
  433ed0:	jne    0x433f3e
  433ed2:	ins    BYTE PTR es:[rdi],dx
  433ed3:	sub    DWORD PTR [rax],eax
  433ed5:	je     0x433f3b
  433ed7:	jae    0x433f38
  433ed9:	imul   esp,DWORD PTR [rbx+0x6f],0x6f5f766e
  433ee0:	jo     0x433f47
  433ee2:	outs   dx,BYTE PTR ds:[rsi]
  433ee3:	sub    BYTE PTR [rip+0x25202c70],ah        # 0x25636b59
  433ee9:	jae    0x433f14
  433eeb:	or     al,BYTE PTR [rax]
  433eed:	push   rbp
  433eee:	push   rsp
  433eef:	rex.RX sub eax,0x43550038
  433ef5:	push   rbx
  433ef6:	sub    eax,0x454c32
  433efb:	push   rbp
  433efc:	rex.XB push r11
  433efe:	sub    eax,0x454232
  433f03:	push   rbp
  433f04:	rex.XB push r11
  433f06:	sub    eax,0x6f6c0032
  433f0b:	movsxd esp,DWORD PTR [rcx+0x6c]
  433f0e:	and    BYTE PTR [rsi+0x61],ch
  433f11:	ins    DWORD PTR es:[rdi],dx
  433f12:	and    BYTE PTR gs:[rsi+0x6f],ah
  433f16:	jb     0x433f38
  433f18:	and    eax,0x73692073
  433f1d:	and    BYTE PTR [rip+0xa73],ah        # 0x434996
  433f23:	add    BYTE PTR [rax],al
  433f25:	add    BYTE PTR [rax],al
  433f27:	add    BYTE PTR [rbp+0x72],ah
  433f2a:	jb     0x433f9b
  433f2c:	jb     0x433f68
  433f2e:	and    BYTE PTR [rsp+riz*2+0x73],dh
  433f32:	pop    rdi
  433f33:	imul   esp,DWORD PTR [rbx+0x6f],0x695f766e
  433f3a:	outs   dx,BYTE PTR ds:[rsi]
  433f3b:	imul   esi,DWORD PTR [rax+rbp*1+0x29],0x74657220
  433f43:	jne    0x433fb7
  433f45:	outs   dx,BYTE PTR ds:[rsi]
  433f46:	gs and BYTE PTR fs:[rip+0x63203b64],ah        # 0x63637ab2
  433f4e:	outs   dx,DWORD PTR ds:[rsi]
  433f4f:	jne    0x433fbd
  433f51:	and    BYTE PTR fs:[rsi+0x6f],ch
  433f55:	je     0x433f77
  433f57:	imul   bp,WORD PTR [rsi+0x64],0x6120
  433f5d:	and    BYTE PTR [rsi+0x61],ch
  433f60:	ins    DWORD PTR es:[rdi],dx
  433f61:	and    BYTE PTR gs:[rsi+0x6f],ah
  433f65:	jb     0x433f87
  433f67:	and    eax,0x68742073
  433f6c:	(bad)  
  433f6d:	je     0x433f8f
  433f6f:	jns    0x433fe0
  433f71:	jne    0x433fe5
  433f73:	and    BYTE PTR [rcx+0x63],ch
  433f76:	outs   dx,DWORD PTR ds:[rsi]
  433f77:	outs   dx,BYTE PTR ds:[rsi]
  433f78:	jbe    0x433f9a
  433f7a:	(bad)  
  433f7b:	movsxd esp,DWORD PTR [rbx+0x65]
  433f7e:	jo     0x433ff4
  433f80:	jae    0x433fb0
  433f82:	or     dh,BYTE PTR [rbp+0x73]
  433f85:	cmp    ah,BYTE PTR gs:[rax]
  433f88:	and    ah,BYTE PTR [rbx+0x6f]
  433f8b:	outs   dx,BYTE PTR ds:[rsi]
  433f8c:	imul   sp,WORD PTR [rdi+0x75],0x6572
  433f92:	and    BYTE PTR [rip+0x7369642d],ch        # 0x73aca3c5
  433f98:	(bad)  
  433f99:	(bad)  
  433f9a:	ins    BYTE PTR es:[rdi],dx
  433f9b:	gs sub eax,0x6962696c
  433fa1:	movsxd ebp,DWORD PTR [rdi+0x6e]
  433fa4:	jbe    0x433fc8
  433fa6:	add    BYTE PTR [rax],al
  433fa8:	jae    0x43400f
  433faa:	je     0x434020
  433fac:	imul   ebp,DWORD PTR [rsi+0x67],0x20707520
  433fb3:	movsxd ebp,DWORD PTR [rdi+0x6e]
  433fb6:	jbe    0x43401d
  433fb8:	jb     0x43402d
  433fba:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f662073
  433fc1:	jb     0x433fe3
  433fc3:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  433fc7:	outs   dx,BYTE PTR ds:[rsi]
  433fc8:	je     0x433fea
  433fca:	movsxd ebp,DWORD PTR [rax+0x61]
  433fcd:	jb     0x434042
  433fcf:	gs je  0x433ff2
  433fd2:	and    ah,BYTE PTR [rip+0xa2273]        # 0x4d624b
  433fd8:	jo     0x43404c
  433fda:	gs jo  0x43403e
  433fdd:	jb     0x434048
  433fdf:	outs   dx,BYTE PTR ds:[rsi]
  433fe0:	and    BYTE PTR [ecx+0x63],ch
  433fe4:	outs   dx,DWORD PTR ds:[rsi]
  433fe5:	outs   dx,BYTE PTR ds:[rsi]
  433fe6:	jbe    0x434008
  433fe8:	outs   dx,WORD PTR ds:[rsi]
  433fea:	jb     0x43400c
  433fec:	and    ah,BYTE PTR [rip+0x3c202273]        # 0x3c636265
  433ff2:	sub    eax,0x2522203e
  433ff7:	jae    0x43401b
  433ff9:	and    BYTE PTR [rbx+0x6f],ah
  433ffc:	outs   dx,BYTE PTR ds:[rsi]
  433ffd:	jbe    0x434064
  433fff:	jb     0x434074
  434001:	imul   ebp,DWORD PTR [rdi+0x6e],0x6474000a
  434008:	jae    0x434069
  43400a:	imul   esp,DWORD PTR [rbx+0x6f],0x6f5f766e
  434011:	jo     0x434078
  434013:	outs   dx,BYTE PTR ds:[rsi]
  434014:	cmp    ah,BYTE PTR [rax]
  434016:	outs   dx,DWORD PTR fs:[rsi]
  434018:	outs   dx,BYTE PTR ds:[rsi]
  434019:	or     al,BYTE PTR gs:[rax]
  43401c:	add    BYTE PTR [rax],al
  43401e:	add    BYTE PTR [rax],al
  434020:	imul   ebp,DWORD PTR [rsi+0x62],0x26206675
  434027:	and    BYTE PTR es:[rcx+0x6e],ch
  43402b:	(bad)  
  43402c:	jns    0x4340a2
  43402e:	gs jae 0x43409d
  434031:	gs data16 je 0x434055
  434035:	es and BYTE PTR es:[rdi+0x75],ch
  43403a:	je     0x43409e
  43403c:	jne    0x4340a4
  43403e:	and    BYTE PTR [rsi],ah
  434040:	and    BYTE PTR es:[rdi+0x75],ch
  434044:	je     0x4340a8
  434046:	jns    0x4340bc
  434048:	gs jae 0x4340b7
  43404b:	gs data16 je 0x43404f
  43404f:	add    BYTE PTR [rsp+riz*2+0x73],dh
  434053:	pop    rdi
  434054:	imul   esp,DWORD PTR [rbx+0x6f],0x203a766e
  43405b:	jne    0x4340cb
  43405d:	(bad)  
  43405e:	(bad)  
  43405f:	ins    BYTE PTR es:[rdi],dx
  434060:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  434065:	fs gs je 0x4340ce
  434069:	jb     0x4340d8
  43406b:	imul   ebp,DWORD PTR [rsi+0x65],0x20666920
  434072:	and    eax,0x656d2064
  434077:	(bad)  
  434078:	outs   dx,BYTE PTR ds:[rsi]
  434079:	jae    0x43409b
  43407b:	imul   ebp,DWORD PTR [rsi+0x20],0x6f20726f
  434082:	jne    0x4340f8
  434084:	and    BYTE PTR cs:[rax],ah
  434087:	or     al,BYTE PTR [rax]
  434089:	add    BYTE PTR [rax],al
  43408b:	add    BYTE PTR [rax],al
  43408d:	add    BYTE PTR [rax],al
  43408f:	add    BYTE PTR [rcx+0x6f],ch
  434092:	and    BYTE PTR [rip+0x6f74203d],bh        # 0x6fb760d5
  434098:	pop    rdi
  434099:	jae    0x434100
  43409b:	jb     0x434113
  43409d:	gs jb  0x4340c0
  4340a0:	jl     0x43411e
  4340a2:	and    BYTE PTR [rcx+0x6f],ch
  4340a5:	and    BYTE PTR [rip+0x6f74203d],bh        # 0x6fb760e8
  4340ab:	pop    rdi
  4340ac:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
  4340b0:	outs   dx,BYTE PTR ds:[rsi]
  4340b1:	je     0x4340b3
  4340b3:	push   rbp
  4340b4:	rex.XB push r11
  4340b6:	sub    eax,0x34
  4340bb:	add    BYTE PTR [rax],al
  4340bd:	add    BYTE PTR [rax],al
  4340bf:	add    BYTE PTR [rsp+riz*2+0x73],dh
  4340c3:	pop    rdi
  4340c4:	imul   esp,DWORD PTR [rbx+0x6f],0x675f766e
  4340cb:	gs je  0x434108
  4340ce:	and    BYTE PTR [rdi+0x68],dh
  4340d1:	(bad)  
  4340d2:	je     0x4340f4
  4340d4:	imul   esi,DWORD PTR [rbx+0x20],0x72616863
  4340db:	jae    0x434142
  4340dd:	je     0x4340ff
  4340df:	and    ah,BYTE PTR [rip+0xa3f2273]        # 0xa826358
  4340e5:	add    BYTE PTR [rax],al
  4340e7:	add    BYTE PTR [rsp+riz*2+0x73],dh
  4340eb:	pop    rdi
  4340ec:	jae    0x434160
  4340ee:	jbe    0x43414f
  4340f0:	movsxd ebp,DWORD PTR [rax+0x61]
  4340f3:	jb     0x434168
  4340f5:	gs je  0x434157
  4340f8:	movsxd ebp,DWORD PTR [rax+0x61]
  4340fb:	outs   dx,BYTE PTR ds:[rsi]
  4340fc:	gs cmp ah,BYTE PTR fs:[eax]
  434101:	ja     0x43416b
  434103:	(bad)  
  434104:	je     0x434126
  434106:	imul   esi,DWORD PTR [rbx+0x20],0x72616863
  43410d:	jae    0x434174
  43410f:	je     0x434131
  434111:	and    ah,BYTE PTR [rip+0xa3f2273]        # 0xa82638a
  434117:	add    BYTE PTR [rbp+0x43],dl
  43411a:	push   rbx
  43411b:	sub    eax,0x454c32
  434120:	rex.WB push r11
  434122:	rex.WRXB and BYTE PTR [r8],r15b
  434125:	cmp    BYTE PTR [rip+0x312d39],dh        # 0x746e64
  43412b:	add    BYTE PTR [rbp+0x54],dl
  43412e:	rex.RX sub eax,0x38
  434134:	add    BYTE PTR [rax],al
  434136:	add    BYTE PTR [rax],al
  434138:	(bad)  
  434139:	jae    0x43419e
  43413b:	imul   ebp,DWORD PTR [rcx+0x5f],0x69620038
  434142:	addr32 xor eax,0x31706300
  434148:	xor    dh,BYTE PTR [rip+0x70630030]        # 0x70a6417e
  43414e:	xor    DWORD PTR [rdx],esi
  434150:	xor    eax,0x70630031
  434155:	xor    DWORD PTR [rdx],esi
  434157:	xor    eax,0x70630032
  43415c:	xor    DWORD PTR [rdx],esi
  43415e:	xor    eax,0x70630033
  434163:	xor    DWORD PTR [rdx],esi
  434165:	xor    eax,0x70630034
  43416a:	xor    DWORD PTR [rdx],esi
  43416c:	xor    eax,0x70630035
  434171:	xor    DWORD PTR [rdx],esi
  434173:	xor    eax,0x70630036
  434178:	xor    DWORD PTR [rdx],esi
  43417a:	xor    eax,0x70630037
  43417f:	xor    DWORD PTR [rdx],esi
  434181:	xor    eax,0x70630038
  434186:	xor    al,0x33
  434188:	(bad)  
  434189:	add    BYTE PTR [rbx+0x70],ah
  43418c:	cmp    BYTE PTR [rip+0x70630030],dh        # 0x70a641c2
  434192:	cmp    BYTE PTR [rsi],dh
  434194:	xor    al,BYTE PTR [rax]
  434196:	movsxd esi,DWORD PTR [rax+0x38]
  434199:	ss add BYTE PTR ss:[rbx+0x70],ah
  43419e:	cmp    BYTE PTR [rdi],dh
  4341a0:	xor    al,0x0
  4341a2:	movsxd esi,DWORD PTR [rax+0x39]
  4341a5:	xor    esi,DWORD PTR [rdx]
  4341a7:	add    BYTE PTR [rbx+0x70],ah
  4341aa:	cmp    DWORD PTR [rbx],esi
  4341ac:	add    BYTE PTR ss:[rbx+0x70],ah
  4341b0:	cmp    DWORD PTR [rcx+rdi*1],esi
  4341b3:	add    BYTE PTR [rbx+0x70],ah
  4341b6:	cmp    DWORD PTR [rip+0x72670030],esi        # 0x72aa41ec
  4341bc:	gs imul edi,DWORD PTR gs:[rax],0x0
  4341c1:	imul   esi,DWORD PTR [rbx+0x6f],0x69003031
  4341c8:	jae    0x434239
  4341ca:	xor    DWORD PTR [rbx],esi
  4341cc:	add    BYTE PTR [rcx+0x73],ch
  4341cf:	outs   dx,DWORD PTR ds:[rsi]
  4341d0:	xor    DWORD PTR [rax+rax*1],esi
  4341d3:	imul   esi,DWORD PTR [rbx+0x6f],0x69003531
  4341da:	jae    0x43424b
  4341dc:	ss xor al,0x36
  4341df:	add    BYTE PTR [rcx+0x73],ch
  4341e2:	outs   dx,DWORD PTR ds:[rsi]
  4341e3:	cmp    BYTE PTR [rax],bh
  4341e5:	xor    eax,0x69003239
  4341ea:	jae    0x43425b
  4341ec:	cmp    BYTE PTR [rax],bh
  4341ee:	xor    eax,0x69003539
  4341f3:	jae    0x434264
  4341f5:	cmp    BYTE PTR [rax],bh
  4341f7:	xor    eax,0x69003639
  4341fc:	jae    0x43426d
  4341fe:	cmp    BYTE PTR [rax],bh
  434200:	xor    eax,0x69003739
  434205:	jae    0x434276
  434207:	cmp    BYTE PTR [rax],bh
  434209:	xor    eax,0x69003839
  43420e:	jae    0x43427f
  434210:	cmp    BYTE PTR [rax],bh
  434212:	xor    eax,0x69003939
  434217:	jae    0x434288
  434219:	pop    rdi
  43421a:	xor    DWORD PTR [rax],eax
  43421c:	imul   ebp,DWORD PTR [rdi+0x69],0x38
  434220:	add    BYTE PTR [rbp+0x61],ch
  434223:	movsxd eax,DWORD PTR [rax]
  434225:	ins    DWORD PTR es:[rdi],dx
  434226:	(bad)  
  434227:	movsxd ebx,DWORD PTR [rdi+0x63]
  43422a:	jns    0x43429e
  43422c:	add    BYTE PTR [rbp+0x61],ch
  43422f:	movsxd esp,DWORD PTR [rdi+0x72]
  434232:	gs imul eax,DWORD PTR gs:[rax],0x6d
  434237:	(bad)  
  434238:	movsxd esi,DWORD PTR [rax+rbp*2+0x61]
  43423c:	imul   eax,DWORD PTR [rax],0x7463616d
  434242:	jne    0x4342b6
  434244:	imul   eax,DWORD PTR [rax],0x72
  434247:	outs   dx,DWORD PTR ds:[rsi]
  434248:	ins    DWORD PTR es:[rdi],dx
  434249:	(bad)  
  43424a:	outs   dx,BYTE PTR ds:[rsi]
  43424b:	cmp    BYTE PTR [rax],al
  43424d:	jae    0x4342b9
  43424f:	imul   esi,DWORD PTR [rbx+0x0],0x36736974
  434256:	xor    dh,BYTE PTR [rax]
  434258:	add    BYTE PTR [rbp+0x74],dh
  43425b:	data16 cmp BYTE PTR [rax],al
	...
  43427e:	add    BYTE PTR [rax],al
  434280:	cmp    BYTE PTR [rcx+0x43],al
	...
  43428f:	add    BYTE PTR [rax+0x41],al
  434292:	rex.XB add BYTE PTR [r8],al
  434295:	add    BYTE PTR [rax],al
  434297:	add    BYTE PTR [rip+0x0],al        # 0x43429d
  43429d:	add    BYTE PTR [rax],al
  43429f:	add    BYTE PTR [rbp+0x41],al
  4342a2:	rex.XB add BYTE PTR [r8],al
  4342a5:	add    BYTE PTR [rax],al
  4342a7:	add    BYTE PTR [rip+0x0],cl        # 0x4342ad
  4342ad:	add    BYTE PTR [rax],al
  4342af:	add    BYTE PTR [rcx+rax*2+0x43],cl
  4342b3:	add    BYTE PTR [rax],al
  4342b5:	add    BYTE PTR [rax],al
  4342b7:	add    BYTE PTR [rsi],cl
  4342b9:	add    BYTE PTR [rax],al
  4342bb:	add    BYTE PTR [rax],al
  4342bd:	add    BYTE PTR [rax],al
  4342bf:	add    BYTE PTR [rbx+0x41],dl
  4342c2:	rex.XB add BYTE PTR [r8],al
  4342c5:	add    BYTE PTR [rax],al
  4342c7:	add    BYTE PTR [rdi],cl
  4342c9:	add    BYTE PTR [rax],al
  4342cb:	add    BYTE PTR [rax],al
  4342cd:	add    BYTE PTR [rax],al
  4342cf:	add    BYTE PTR [rdx+0x41],bl
  4342d2:	rex.XB add BYTE PTR [r8],al
  4342d5:	add    BYTE PTR [rax],al
  4342d7:	add    BYTE PTR [rax],dl
  4342d9:	add    BYTE PTR [rax],al
  4342db:	add    BYTE PTR [rax],al
  4342dd:	add    BYTE PTR [rax],al
  4342df:	add    BYTE PTR [rcx+0x41],ah
  4342e2:	rex.XB add BYTE PTR [r8],al
  4342e5:	add    BYTE PTR [rax],al
  4342e7:	add    BYTE PTR [rcx],dl
  4342e9:	add    BYTE PTR [rax],al
  4342eb:	add    BYTE PTR [rax],al
  4342ed:	add    BYTE PTR [rax],al
  4342ef:	add    BYTE PTR [rax+0x41],ch
  4342f2:	rex.XB add BYTE PTR [r8],al
  4342f5:	add    BYTE PTR [rax],al
  4342f7:	add    BYTE PTR [rdx],dl
  4342f9:	add    BYTE PTR [rax],al
  4342fb:	add    BYTE PTR [rax],al
  4342fd:	add    BYTE PTR [rax],al
  4342ff:	add    BYTE PTR [rdi+0x41],ch
  434302:	rex.XB add BYTE PTR [r8],al
  434305:	add    BYTE PTR [rax],al
  434307:	add    BYTE PTR [rbx],dl
  434309:	add    BYTE PTR [rax],al
  43430b:	add    BYTE PTR [rax],al
  43430d:	add    BYTE PTR [rax],al
  43430f:	add    BYTE PTR [rsi+0x41],dh
  434312:	rex.XB add BYTE PTR [r8],al
  434315:	add    BYTE PTR [rax],al
  434317:	add    BYTE PTR [rax+rax*1],dl
  43431a:	add    BYTE PTR [rax],al
  43431c:	add    BYTE PTR [rax],al
  43431e:	add    BYTE PTR [rax],al
  434320:	jge    0x434363
  434322:	rex.XB add BYTE PTR [r8],al
  434325:	add    BYTE PTR [rax],al
  434327:	add    BYTE PTR [rip+0x0],dl        # 0x43432d
  43432d:	add    BYTE PTR [rax],al
  43432f:	add    BYTE PTR [rcx+rax*2+0x43],al
  434336:	add    BYTE PTR [rax],al
  434338:	(bad)  
  434339:	add    BYTE PTR [rax],al
  43433b:	add    BYTE PTR [rax],al
  43433d:	add    BYTE PTR [rax],al
  43433f:	add    BYTE PTR [rdx+0x4341],cl
  434345:	add    BYTE PTR [rax],al
  434347:	add    BYTE PTR [rax],bl
  434349:	add    BYTE PTR [rax],al
  43434b:	add    BYTE PTR [rax],al
  43434d:	add    BYTE PTR [rax],al
  43434f:	add    BYTE PTR [rax+0x4341],dl
  434355:	add    BYTE PTR [rax],al
  434357:	add    BYTE PTR [rcx],bl
  434359:	add    BYTE PTR [rax],al
  43435b:	add    BYTE PTR [rax],al
  43435d:	add    BYTE PTR [rax],al
  43435f:	add    BYTE PTR [rsi+0x4341],dl
  434365:	add    BYTE PTR [rax],al
  434367:	add    BYTE PTR [rdx],bl
  434369:	add    BYTE PTR [rax],al
  43436b:	add    BYTE PTR [rax],al
  43436d:	add    BYTE PTR [rax],al
  43436f:	add    BYTE PTR [rcx+rax*2+0x43],bl
  434376:	add    BYTE PTR [rax],al
  434378:	sbb    eax,DWORD PTR [rax]
  43437a:	add    BYTE PTR [rax],al
  43437c:	add    BYTE PTR [rax],al
  43437e:	add    BYTE PTR [rax],al
  434380:	movabs ds:0x1c00000000004341,al
  434389:	add    BYTE PTR [rax],al
  43438b:	add    BYTE PTR [rax],al
  43438d:	add    BYTE PTR [rax],al
  43438f:	add    BYTE PTR [rax+0x4341],ch
  434395:	add    BYTE PTR [rax],al
  434397:	add    BYTE PTR [rip+0x0],bl        # 0x43439d
  43439d:	add    BYTE PTR [rax],al
  43439f:	add    BYTE PTR [rsi+0x4341],ch
  4343a5:	add    BYTE PTR [rax],al
  4343a7:	add    BYTE PTR [rsi],bl
  4343a9:	add    BYTE PTR [rax],al
  4343ab:	add    BYTE PTR [rax],al
  4343ad:	add    BYTE PTR [rax],al
  4343af:	add    BYTE PTR [rcx+rax*2+0x43],dh
  4343b6:	add    BYTE PTR [rax],al
  4343b8:	(bad)  
  4343b9:	add    BYTE PTR [rax],al
  4343bb:	add    BYTE PTR [rax],al
  4343bd:	add    BYTE PTR [rax],al
  4343bf:	add    BYTE PTR [rdx+0x4341],bh
  4343c5:	add    BYTE PTR [rax],al
  4343c7:	add    BYTE PTR [rdi],dh
  4343c9:	add    BYTE PTR [rax],al
  4343cb:	add    BYTE PTR [rax],al
  4343cd:	add    BYTE PTR [rax],al
  4343cf:	add    cl,al
  4343d1:	rex.B
  4343d2:	rex.XB add BYTE PTR [r8],al
  4343d5:	add    BYTE PTR [rax],al
  4343d7:	add    BYTE PTR [rip+0x0],ch        # 0x4343dd
  4343dd:	add    BYTE PTR [rax],al
  4343df:	add    bh,al
  4343e1:	rex.B
  4343e2:	rex.XB add BYTE PTR [r8],al
  4343e5:	add    BYTE PTR [rax],al
  4343e7:	add    BYTE PTR [rsi],ch
  4343e9:	add    BYTE PTR [rax],al
  4343eb:	add    BYTE PTR [rax],al
  4343ed:	add    BYTE PTR [rax],al
  4343ef:	add    ch,cl
  4343f1:	rex.B
  4343f2:	rex.XB add BYTE PTR [r8],al
  4343f5:	add    BYTE PTR [rax],al
  4343f7:	add    BYTE PTR [rdi],ch
  4343f9:	add    BYTE PTR [rax],al
  4343fb:	add    BYTE PTR [rax],al
  4343fd:	add    BYTE PTR [rax],al
  4343ff:	add    bl,dl
  434401:	rex.B
  434402:	rex.XB add BYTE PTR [r8],al
  434405:	add    BYTE PTR [rax],al
  434407:	add    BYTE PTR [rax],dh
  434409:	add    BYTE PTR [rax],al
  43440b:	add    BYTE PTR [rax],al
  43440d:	add    BYTE PTR [rax],al
  43440f:	add    cl,bl
  434411:	rex.B
  434412:	rex.XB add BYTE PTR [r8],al
  434415:	add    BYTE PTR [rax],al
  434417:	add    BYTE PTR [rsi+0x0],bl
  43441a:	add    BYTE PTR [rax],al
  43441c:	add    BYTE PTR [rax],al
  43441e:	add    BYTE PTR [rax],al
  434420:	loopne 0x434463
  434422:	rex.XB add BYTE PTR [r8],al
  434425:	add    BYTE PTR [rax],al
  434427:	add    BYTE PTR [rdx],dh
  434429:	add    BYTE PTR [rax],al
  43442b:	add    BYTE PTR [rax],al
  43442d:	add    BYTE PTR [rax],al
  43442f:	add    cl,ch
  434431:	rex.B
  434432:	rex.XB add BYTE PTR [r8],al
  434435:	add    BYTE PTR [rax],al
  434437:	add    BYTE PTR [rip+0x0],dh        # 0x43443d
  43443d:	add    BYTE PTR [rax],al
  43443f:	add    dl,dh
  434441:	rex.B
  434442:	rex.XB add BYTE PTR [r8],al
  434445:	add    BYTE PTR [rax],al
  434447:	add    BYTE PTR [rsi],dh
  434449:	add    BYTE PTR [rax],al
  43444b:	add    BYTE PTR [rax],al
  43444d:	add    BYTE PTR [rax],al
  43444f:	add    bl,bh
  434451:	rex.B
  434452:	rex.XB add BYTE PTR [r8],al
  434455:	add    BYTE PTR [rax],al
  434457:	add    BYTE PTR [rdi],dh
  434459:	add    BYTE PTR [rax],al
  43445b:	add    BYTE PTR [rax],al
  43445d:	add    BYTE PTR [rax],al
  43445f:	add    BYTE PTR [rdx+rax*2],al
  434462:	rex.XB add BYTE PTR [r8],al
  434465:	add    BYTE PTR [rax],al
  434467:	add    BYTE PTR [rax],bh
  434469:	add    BYTE PTR [rax],al
  43446b:	add    BYTE PTR [rax],al
  43446d:	add    BYTE PTR [rax],al
  43446f:	add    BYTE PTR [rip+0x4342],cl        # 0x4387b7
  434475:	add    BYTE PTR [rax],al
  434477:	add    BYTE PTR [rcx],bh
  434479:	add    BYTE PTR [rax],al
  43447b:	add    BYTE PTR [rax],al
  43447d:	add    BYTE PTR [rax],al
  43447f:	add    BYTE PTR [rsi],dl
  434481:	rex.X
  434482:	rex.XB add BYTE PTR [r8],al
	...
  43448d:	add    BYTE PTR [rax],al
  43448f:	add    BYTE PTR [rdx+rax*2],bl
  434492:	rex.XB add BYTE PTR [r8],al
  434495:	add    BYTE PTR [rax],al
  434497:	add    BYTE PTR [rcx+0x0],al
  43449a:	add    BYTE PTR [rax],al
  43449c:	add    BYTE PTR [rax],al
  43449e:	add    BYTE PTR [rax],al
  4344a0:	and    DWORD PTR [rdx+0x43],eax
  4344a3:	add    BYTE PTR [rax],al
  4344a5:	add    BYTE PTR [rax],al
  4344a7:	add    BYTE PTR [rbp+0x0],al
  4344aa:	add    BYTE PTR [rax],al
  4344ac:	add    BYTE PTR [rax],al
  4344ae:	add    BYTE PTR [rax],al
  4344b0:	and    eax,0x4342
  4344b5:	add    BYTE PTR [rax],al
  4344b7:	add    BYTE PTR [rcx+0x0],cl
  4344ba:	add    BYTE PTR [rax],al
  4344bc:	add    BYTE PTR [rax],al
  4344be:	add    BYTE PTR [rax],al
  4344c0:	sub    eax,0x4342
  4344c5:	add    BYTE PTR [rax],al
  4344c7:	add    BYTE PTR [rdx+0x0],cl
  4344ca:	add    BYTE PTR [rax],al
  4344cc:	add    BYTE PTR [rax],al
  4344ce:	add    BYTE PTR [rax],al
  4344d0:	ss rex.X
  4344d2:	rex.XB add BYTE PTR [r8],al
  4344d5:	add    BYTE PTR [rax],al
  4344d7:	add    BYTE PTR [rsi+0x0],cl
  4344da:	add    BYTE PTR [rax],al
  4344dc:	add    BYTE PTR [rax],al
  4344de:	add    BYTE PTR [rax],al
  4344e0:	ds rex.X
  4344e2:	rex.XB add BYTE PTR [r8],al
  4344e5:	add    BYTE PTR [rax],al
  4344e7:	add    BYTE PTR [rdi+0x0],cl
  4344ea:	add    BYTE PTR [rax],al
  4344ec:	add    BYTE PTR [rax],al
  4344ee:	add    BYTE PTR [rax],al
  4344f0:	rex.RX
  4344f1:	rex.X
  4344f2:	rex.XB add BYTE PTR [r8],al
  4344f5:	add    BYTE PTR [rax],al
  4344f7:	add    BYTE PTR [rbx+0x0],dl
  4344fa:	add    BYTE PTR [rax],al
  4344fc:	add    BYTE PTR [rax],al
  4344fe:	add    BYTE PTR [rax],al
  434500:	rex.WRB
  434501:	rex.X
  434502:	rex.XB add BYTE PTR [r8],al
  434505:	add    BYTE PTR [rax],al
  434507:	add    BYTE PTR [rax+rax*1+0x0],dl
  43450b:	add    BYTE PTR [rax],al
  43450d:	add    BYTE PTR [rax],al
  43450f:	add    BYTE PTR [rdx+0x42],dl
  434512:	rex.XB add BYTE PTR [r8],al
  434515:	add    BYTE PTR [rax],al
  434517:	add    BYTE PTR [rip+0x0],bh        # 0x43451d
  43451d:	add    BYTE PTR [rax],al
  43451f:	add    BYTE PTR [rcx+0x42],bl
  434522:	rex.XB add BYTE PTR [r8],al
  434525:	add    BYTE PTR [rax],al
  434527:	add    BYTE PTR [rcx],al
	...
  43453d:	add    BYTE PTR [rax],al
  43453f:	add    BYTE PTR [rax],bh
  434541:	xor    eax,0x36380030
  434546:	xor    al,BYTE PTR [rax]
  434548:	cmp    BYTE PTR [rsi],dh
  43454a:	add    BYTE PTR ss:[rcx+0x4e],al
  43454e:	push   rbx
  43454f:	rex.WB pop r15
  434551:	pop    rax
  434552:	xor    ebp,DWORD PTR [rsi]
  434554:	xor    al,0x2d
  434556:	xor    DWORD PTR [rcx],edi
  434558:	cmp    BYTE PTR ss:[rax],al
  43455b:	rex.B
  43455c:	rex.WRX push rbx
  43455e:	rex.WB pop r15
  434560:	pop    rax
  434561:	xor    ebp,DWORD PTR [rsi]
  434563:	xor    al,0x2d
  434565:	xor    DWORD PTR [rcx],edi
  434567:	cmp    BYTE PTR [rsi],dh
  434569:	add    BYTE PTR [rcx+0x52],al
  43456c:	rex.B
  43456d:	rex.X
  43456e:	rex.WB
  43456f:	rex.XB add BYTE PTR [r9+0x52],al
  434573:	rex.WRB push r11
  434575:	rex.XB
  434576:	rex.WB
  434577:	rex.WB sub rax,0x53410038
  43457d:	rex.XB
  43457e:	rex.WB
  43457f:	rex.WB add BYTE PTR [r9+0x53],al
  434583:	rex.WRB
  434584:	rex.WRXB sub rax,0x383037
  43458a:	rex.X
  43458b:	rex.WB
  43458c:	rex.RXB sub eax,0x49420035
  434592:	rex.RXB sub eax,0x45564946
  434598:	add    BYTE PTR [rdx+0x49],al
  43459b:	rex.RXB xor eax,0x47494200
  4345a1:	xor    eax,0x534b482d
  4345a6:	rex.XB push r11
  4345a8:	add    BYTE PTR [rdx+0x49],al
  4345ab:	rex.RXB xor eax,0x43534b48
  4345b1:	push   rbx
  4345b2:	add    BYTE PTR [rdx+0x49],al
  4345b5:	rex.RXB
  4345b6:	rex.RX
  4345b7:	rex.WB push r14
  4345b9:	add    BYTE PTR [r11+0x39],r8b
  4345bd:	cmp    DWORD PTR [rax],eax
  4345bf:	rex.XB
  4345c0:	rex.W
  4345c1:	rex.WB
  4345c2:	rex.WRX
  4345c3:	rex.RB push r11
  4345c5:	add    BYTE PTR [r11+0x4e],r8b
  4345c9:	add    BYTE PTR [rbx+0x4e],al
  4345cc:	sub    eax,0x35474942
  4345d1:	add    BYTE PTR [rbx+0x4e],al
  4345d4:	sub    eax,0x43004247
  4345d9:	rex.WRX sub rax,0x492d4247
  4345df:	push   rbx
  4345e0:	rex.WRXB
  4345e1:	rex.WB push r10
  4345e3:	xor    DWORD PTR [rsi],esi
  4345e5:	xor    eax,0x31504300
  4345ea:	xor    DWORD PTR [rbx],esi
  4345ec:	xor    eax,DWORD PTR [rax]
  4345ee:	rex.XB push r8
  4345f0:	xor    DWORD PTR [rdx],esi
  4345f2:	xor    eax,0x50430030
  4345f7:	xor    DWORD PTR [rdx],esi
  4345f9:	xor    eax,0x50430031
  4345fe:	xor    DWORD PTR [rdx],esi
  434600:	xor    eax,0x50430032
  434605:	xor    DWORD PTR [rdx],esi
  434607:	xor    eax,0x50430033
  43460c:	xor    DWORD PTR [rdx],esi
  43460e:	xor    eax,0x50430034
  434613:	xor    DWORD PTR [rdx],esi
  434615:	xor    eax,0x50430035
  43461a:	xor    DWORD PTR [rdx],esi
  43461c:	xor    eax,0x50430036
  434621:	xor    DWORD PTR [rdx],esi
  434623:	xor    eax,0x50430037
  434628:	xor    DWORD PTR [rdx],esi
  43462a:	xor    eax,0x50430038
  43462f:	xor    DWORD PTR [rbx],esi
  434631:	xor    DWORD PTR ss:[rax],eax
  434634:	rex.XB push r8
  434636:	xor    esi,DWORD PTR [rsi]
  434638:	(bad)  
  434639:	add    BYTE PTR [rbx+0x50],al
  43463c:	xor    al,0x33
  43463e:	(bad)  
  43463f:	add    BYTE PTR [rbx+0x50],al
  434642:	cmp    BYTE PTR [rcx],dh
  434644:	cmp    DWORD PTR [rax],eax
  434646:	rex.XB push r8
  434648:	cmp    BYTE PTR [rip+0x50430030],dh        # 0x5086467e
  43464e:	cmp    BYTE PTR [rsi],dh
  434650:	xor    al,BYTE PTR [rax]
  434652:	rex.XB push r8
  434654:	cmp    BYTE PTR [rsi],dh
  434656:	add    BYTE PTR ss:[rbx+0x50],al
  43465a:	cmp    BYTE PTR [rdi],dh
  43465c:	xor    al,0x0
  43465e:	rex.XB push r8
  434660:	cmp    DWORD PTR [rbx],esi
  434662:	xor    al,BYTE PTR [rax]
  434664:	rex.XB push r8
  434666:	cmp    DWORD PTR [rbx],esi
  434668:	add    BYTE PTR ss:[rbx+0x50],al
  43466c:	cmp    DWORD PTR [rcx+rdi*1],esi
  43466f:	add    BYTE PTR [rbx+0x50],al
  434672:	cmp    DWORD PTR [rip+0x53430030],esi        # 0x538646a8
  434678:	push   r11
  43467a:	rex.XB
  43467b:	rex.WB
  43467c:	rex.WB add BYTE PTR [r11+0x53],al
  434680:	rex.X
  434681:	rex.WB
  434682:	rex.RXB xor eax,0x45534300
  434688:	push   rbp
  434689:	rex.XB
  43468a:	rex.WXB push r10
  43468c:	add    BYTE PTR [rbx+0x53],al
  43468f:	rex.RB push r13
  434691:	rex.XB push r8
  434693:	rex.WXB
  434694:	rex.R
  434695:	rex.RX
  434696:	rex.WRB push r12
  434698:	rex.WX
  434699:	push   r8
  43469b:	rex.B
  43469c:	rex.WRX
  43469d:	rex.RB push r11
  43469f:	add    BYTE PTR [r11+0x53],r8b
  4346a3:	rex.RB push r13
  4346a5:	rex.XB push r12
  4346a7:	push   rdi
  4346a8:	add    BYTE PTR [rbx+0x53],al
  4346ab:	rex.RXB
  4346ac:	rex.X xor sil,BYTE PTR [rbx]
  4346af:	xor    DWORD PTR [rdx],esi
  4346b1:	add    BYTE PTR [rbx+0x53],al
  4346b4:	rex.W
  4346b5:	rex.B
  4346b6:	rex.WR
  4346b7:	rex.RX push rdi
  4346b9:	rex.WB
  4346ba:	rex.R push rsp
  4346bc:	rex.W
  4346bd:	rex.WXB
  4346be:	push   r12
  4346c0:	rex.B
  4346c1:	rex.WXB
  4346c2:	rex.B
  4346c3:	rex.WRX
  4346c4:	add    BYTE PTR [r11+0x53],al
  4346c8:	rex.W push rax
  4346ca:	push   rdx
  4346cb:	rex.WRXB
  4346cc:	rex.WRB
  4346cd:	rex.B
  4346ce:	rex.WRX cmp BYTE PTR [rax],r8b
  4346d1:	rex.XB push r11
  4346d3:	rex.WB
  4346d4:	rex.X
  4346d5:	rex.WRB cmp BYTE PTR [r14],r14b
  4346d8:	add    BYTE PTR ss:[rbx+0x53],al
  4346dc:	rex.WB push r11
  4346de:	xor    QWORD PTR [r10+r9*2],r14
  4346e2:	rex.WB push r11
  4346e4:	rex.XB
  4346e5:	xor    dh,BYTE PTR ss:[rdx]
  4346e8:	xor    BYTE PTR [rdx+0x4f],dl
  4346eb:	add    BYTE PTR [rbx+0x53],al
  4346ee:	rex.WB push r11
  4346f0:	rex.WRXB xor QWORD PTR [rip+0x53494a39],r14        # 0x538c9130
  4346f7:	pop    rax
  4346f8:	xor    BYTE PTR [rdx],dh
  4346fa:	xor    DWORD PTR [rdx],esi
  4346fc:	xor    DWORD PTR [rcx],edi
  4346fe:	cmp    DWORD PTR [rax],esi
  434700:	add    BYTE PTR [rbx+0x53],al
  434703:	rex.WB push r11
  434705:	rex.WRXB xor r14b,BYTE PTR [r8]
  434708:	xor    dh,BYTE PTR [rdx]
  43470a:	rex.XB
  43470b:	rex.WRX add BYTE PTR [rbx+0x53],r8b
  43470f:	rex.WB push r11
  434711:	rex.WRXB xor r14b,BYTE PTR [r8]
  434714:	xor    dh,BYTE PTR [rdx]
  434716:	rex.WX push rax
  434718:	add    BYTE PTR [rbx+0x53],al
  43471b:	rex.WB push r11
  43471d:	rex.WRXB xor r14b,BYTE PTR [r8]
  434720:	xor    dh,BYTE PTR [rdx]
  434722:	rex.WX push rax
  434724:	xor    al,BYTE PTR [rax]
  434726:	rex.XB push r11
  434728:	rex.WB push r11
  43472a:	rex.WRXB xor r14b,BYTE PTR [r8]
  43472d:	xor    dh,BYTE PTR [rdx]
  43472f:	rex.WXB push r10
  434731:	add    BYTE PTR [rbx+0x53],al
  434734:	rex.WB push r11
  434736:	rex.WRXB xor rax,0x31424737
  43473c:	cmp    DWORD PTR [rax],edi
  43473e:	cmp    BYTE PTR [rax],al
  434740:	rex.XB push r11
  434742:	rex.WB push r11
  434744:	rex.WRXB xor rax,0x32424738
  43474a:	xor    esi,DWORD PTR [rcx]
  43474c:	xor    bh,BYTE PTR [rax]
  43474e:	xor    BYTE PTR [rax],al
  434750:	rex.XB push r11
  434752:	rex.WB push r11
  434754:	rex.WRXB cmp BYTE PTR [r15],r14b
  434757:	rex.WX
  434758:	rex.WB push r11
  43475a:	pop    rax
  43475b:	xor    BYTE PTR [rdx],dh
  43475d:	xor    BYTE PTR [rax],bh
  43475f:	add    BYTE PTR [rbx+0x53],al
  434762:	rex.WB push r11
  434764:	rex.WRXB
  434765:	rex.WR
  434766:	push   r12
  434768:	rex.WB
  434769:	rex.WRX xor QWORD PTR [rax],r8
  43476c:	rex.XB push r11
  43476e:	rex.WB push r11
  434770:	rex.WRXB
  434771:	rex.WR
  434772:	push   r12
  434774:	rex.WB
  434775:	rex.WRX xor r8b,BYTE PTR [rax]
  434778:	rex.XB push r11
  43477a:	rex.WB push r11
  43477c:	rex.WRXB
  43477d:	rex.WR
  43477e:	push   r12
  434780:	rex.WB
  434781:	rex.WRX xor r8,QWORD PTR [rax]
  434784:	rex.XB push r11
  434786:	rex.WB push r11
  434788:	rex.WRXB
  434789:	rex.WR
  43478a:	push   r12
  43478c:	rex.WB
  43478d:	rex.WRX xor al,0x0
  434790:	rex.XB push r11
  434792:	rex.WB push r11
  434794:	rex.WRXB
  434795:	rex.WR
  434796:	push   r12
  434798:	rex.WB
  434799:	rex.WRX xor rax,0x49534300
  43479f:	push   rbx
  4347a0:	rex.WRXB
  4347a1:	rex.WR
  4347a2:	push   r12
  4347a4:	rex.WB
  4347a5:	rex.WRX
  4347a6:	add    BYTE PTR ss:[rbx+0x53],al
  4347aa:	rex.WB push r11
  4347ac:	rex.WRXB
  4347ad:	rex.WR
  4347ae:	push   r12
  4347b0:	rex.WB
  4347b1:	rex.WRX
  4347b2:	push   r10
  4347b4:	rex.B
  4347b5:	rex.X
  4347b6:	rex.WB
  4347b7:	rex.XB add BYTE PTR [r11+0x53],al
  4347bb:	rex.WB push r11
  4347bd:	rex.WRXB
  4347be:	rex.WR
  4347bf:	push   r12
  4347c1:	rex.WB
  4347c2:	rex.WRX
  4347c3:	rex.XB pop r9
  4347c5:	push   rdx
  4347c6:	rex.WB
  4347c7:	rex.WR
  4347c8:	rex.WR
  4347c9:	rex.WB
  4347ca:	rex.XB add BYTE PTR [r11+0x53],al
  4347ce:	rex.WB push r11
  4347d0:	rex.WRXB
  4347d1:	rex.WR
  4347d2:	push   r12
  4347d4:	rex.WB
  4347d5:	rex.WRX
  4347d6:	rex.RXB push r10
  4347d8:	rex.RB
  4347d9:	rex.RB
  4347da:	rex.WXB add BYTE PTR [r11+0x53],al
  4347de:	rex.WB push r11
  4347e0:	rex.WRXB
  4347e1:	rex.WR
  4347e2:	push   r12
  4347e4:	rex.WB
  4347e5:	rex.WRX
  4347e6:	rex.W
  4347e7:	rex.RB
  4347e8:	rex.X push rdx
  4347ea:	rex.RB push r15
  4347ec:	add    BYTE PTR [rbx+0x53],al
  4347ef:	rex.WXB
  4347f0:	rex.WRXB
  4347f1:	rex.WB cmp BYTE PTR [r10+0x0],dl
  4347f5:	rex.XB push r11
  4347f7:	rex.WXB push r11
  4347f9:	rex.XB xor eax,0x31313036
  4347ff:	cmp    DWORD PTR [rax],edi
  434801:	(bad)  
  434802:	add    BYTE PTR [rbx+0x53],al
  434805:	rex.WRB
  434806:	rex.B
  434807:	rex.XB
  434808:	rex.WB
  434809:	rex.WRX push rsp
  43480b:	rex.WRXB push r11
  43480d:	rex.W add BYTE PTR [rbx+0x53],al
  434811:	push   rax
  434812:	rex.XB cmp BYTE PTR [rip+0x4c554d30],sil        # 0x4c989549
  434819:	push   rsp
  43481a:	rex.WB
  43481b:	rex.WR
  43481c:	rex.WB
  43481d:	rex.WRX
  43481e:	rex.RXB push r13
  434820:	rex.B
  434821:	rex.WR add BYTE PTR [rbx+0x53],r8b
  434825:	push   rax
  434826:	rex.XB cmp BYTE PTR [r14],sil
  434829:	xor    cl,BYTE PTR [rcx+rax*2+0x54]
  43482d:	rex.WB
  43482e:	rex.WRX
  43482f:	rex.W
  434830:	rex.RB
  434831:	rex.X push rdx
  434833:	rex.RB push r15
  434835:	add    BYTE PTR [rbx+0x53],al
  434838:	push   rbx
  434839:	rex.W
  43483a:	rex.WB
  43483b:	rex.RX push rsp
  43483d:	rex.WX
  43483e:	rex.WB push r11
  434840:	add    BYTE PTR [rbx+0x53],al
  434843:	push   rbp
  434844:	rex.XB push r11
  434846:	xor    al,0x0
  434848:	rex.XB push r11
  43484a:	push   rbp
  43484b:	rex.WRX
  43484c:	rex.WB
  43484d:	rex.XB
  43484e:	rex.WRXB
  43484f:	rex.R
  434850:	add    BYTE PTR [r11+0x53],r8b
  434854:	push   rbp
  434855:	rex.WRX
  434856:	rex.WB
  434857:	rex.XB
  434858:	rex.WRXB
  434859:	rex.R
  43485a:	xor    DWORD PTR [r9],r14d
  43485d:	add    BYTE PTR [rbx+0x53],al
  434860:	push   rbp
  434861:	rex.WRX
  434862:	rex.WB
  434863:	rex.XB
  434864:	rex.WRXB
  434865:	rex.R
  434866:	xor    DWORD PTR [r9],r14d
  434869:	push   rbp
  43486a:	push   rsp
  43486b:	rex.RX (bad) 
  43486d:	add    BYTE PTR [rbx+0x53],al
  434870:	push   rsi
  434871:	rex.WB push r11
  434873:	rex.XB
  434874:	rex.WB
  434875:	rex.WB add BYTE PTR [r11+0x59],al
  434879:	push   rdx
  43487a:	rex.WB
  43487b:	rex.WR
  43487c:	rex.WR
  43487d:	rex.WB
  43487e:	rex.XB add BYTE PTR [r13+0x43],al
  434882:	rex.WRB
  434883:	rex.B sub eax,0x343131
  434889:	rex.RB
  43488a:	rex.XB
  43488b:	rex.WRB
  43488c:	rex.B sub eax,0x383131
  434892:	rex.RB
  434893:	rex.WR
  434894:	rex.WRXB push r12
  434896:	pop    rdi
  434897:	cmp    DWORD PTR [rdx],esi
  434899:	cmp    BYTE PTR [rax],al
  43489b:	rex.RB push r13
  43489d:	rex.XB sub eax,0x45004e43
  4348a3:	push   rbp
  4348a4:	rex.XB sub eax,0x4500504a
  4348aa:	push   rbp
  4348ab:	rex.XB sub eax,0x4500524b
  4348b1:	push   rbp
  4348b2:	rex.XB sub eax,0x45005754
  4348b8:	push   rbp
  4348b9:	rex.XB
  4348ba:	rex.XB
  4348bb:	rex.WRX add BYTE PTR [rbp+0x55],r8b
  4348bf:	rex.XB
  4348c0:	rex.WX push rax
  4348c2:	add    BYTE PTR [rbp+0x55],al
  4348c5:	rex.XB
  4348c6:	rex.WXB push r10
  4348c8:	add    BYTE PTR [rbp+0x55],al
  4348cb:	rex.XB push r12
  4348cd:	push   rdi
  4348ce:	add    BYTE PTR [rax],al
  4348d0:	rex.RB pop r8
  4348d2:	push   rsp
  4348d3:	rex.RB
  4348d4:	rex.WRX
  4348d5:	rex.R
  4348d6:	rex.RB
  4348d7:	rex.R pop rdi
  4348d9:	push   rbp
  4348da:	rex.WRX
  4348db:	rex.WB pop r8
  4348dd:	pop    rdi
  4348de:	rex.XB
  4348df:	rex.WRXB
  4348e0:	rex.R
  4348e1:	rex.RB pop r15
  4348e3:	push   rax
  4348e4:	rex.B
  4348e5:	rex.XB
  4348e6:	rex.WXB
  4348e7:	rex.RB
  4348e8:	rex.R pop rdi
  4348ea:	rex.RX
  4348eb:	rex.WRXB push r10
  4348ed:	rex.WRB
  4348ee:	push   r12
  4348f0:	pop    rdi
  4348f1:	rex.RX
  4348f2:	rex.WRXB push r10
  4348f4:	pop    rdi
  4348f5:	rex.WX
  4348f6:	push   r8
  4348f8:	rex.B
  4348f9:	rex.WRX
  4348fa:	rex.RB push r11
  4348fc:	add    BYTE PTR [r15+0x42],r8b
  434900:	xor    DWORD PTR [rax],edi
  434902:	xor    BYTE PTR [rbx],dh
  434904:	xor    BYTE PTR [rax],al
  434906:	rex.RXB
  434907:	rex.X xor sil,BYTE PTR [rbx]
  43490a:	xor    DWORD PTR [rdx],esi
  43490c:	add    BYTE PTR [rdi+0x42],al
  43490f:	rex.WXB add BYTE PTR [r15+0x42],al
  434913:	pop    rdi
  434914:	xor    DWORD PTR [rcx],edi
  434916:	cmp    BYTE PTR [rax],bh
  434918:	sub    eax,0x47003038
  43491d:	rex.X pop rdi
  43491f:	xor    dh,BYTE PTR [rbx]
  434921:	xor    DWORD PTR [rdx],esi
  434923:	sub    eax,0x47003038
  434928:	rex.RB
  434929:	rex.WRXB push r10
  43492b:	rex.RXB
  43492c:	rex.WB
  43492d:	rex.B
  43492e:	rex.WRX sub rax,0x44414341
  434934:	rex.RB
  434935:	rex.WRB pop r9
  434937:	add    BYTE PTR [rdi+0x45],al
  43493a:	rex.WRXB push r10
  43493c:	rex.RXB
  43493d:	rex.WB
  43493e:	rex.B
  43493f:	rex.WRX sub rax,0x47005350
  434945:	push   rdx
  434946:	rex.RB
  434947:	rex.RB
  434948:	rex.WXB add BYTE PTR [r15+0x52],al
  43494c:	rex.RB
  43494d:	rex.RB
  43494e:	rex.WXB cmp BYTE PTR [r8],al
  434951:	rex.W
  434952:	rex.RB
  434953:	rex.X push rdx
  434955:	rex.RB push r15
  434957:	add    BYTE PTR [rax+0x50],cl
  43495a:	sub    eax,0x414d4f52
  43495f:	rex.WRX cmp BYTE PTR [rax],r8b
  434962:	rex.W pop rdx
  434964:	add    BYTE PTR [rax+0x5a],cl
  434967:	sub    eax,0x322d4247
  43496c:	xor    esi,DWORD PTR [rcx]
  43496e:	xor    al,BYTE PTR [rax]
  434970:	rex.WB
  434971:	rex.X
  434972:	rex.WRB sub rax,0x31315043
  434978:	xor    esi,DWORD PTR [rbx]
  43497a:	add    BYTE PTR [rcx+0x42],cl
  43497d:	xor    r14,QWORD PTR [r14]
  434980:	(bad)  
  434981:	add    BYTE PTR [rcx+0x42],cl
  434984:	rex.WRB xor al,0x33
  434987:	(bad)  
  434988:	add    BYTE PTR [rcx+0x42],cl
  43498b:	rex.WRB cmp BYTE PTR [r9],r14b
  43498e:	cmp    DWORD PTR [rax],eax
  434990:	rex.WB
  434991:	rex.X
  434992:	rex.WRB cmp BYTE PTR [rip+0x42490030],r14b        # 0x428c49c9
  434999:	rex.WRB cmp BYTE PTR [r14],r14b
  43499c:	xor    al,BYTE PTR [rax]
  43499e:	rex.WB
  43499f:	rex.X
  4349a0:	rex.WRB cmp BYTE PTR [r14],r14b
  4349a3:	add    BYTE PTR ss:[rcx+0x53],cl
  4349a7:	rex.WRXB sub rax,0x34363031
  4349ad:	ss sub eax,0x2d534355
  4349b3:	xor    al,BYTE PTR [rax]
  4349b5:	rex.WB push r11
  4349b7:	rex.WRXB sub rax,0x34363031
  4349bd:	ss sub eax,0x2d534355
  4349c3:	xor    al,0x0
  4349c5:	rex.WB push r11
  4349c7:	rex.WRXB sub rax,0x32323032
  4349cd:	sub    eax,0x49004e43
  4349d2:	push   rbx
  4349d3:	rex.WRXB sub rax,0x32323032
  4349d9:	sub    eax,0x452d4e43
  4349de:	pop    rax
  4349df:	push   rsp
  4349e0:	add    BYTE PTR [rcx+0x53],cl
  4349e3:	rex.WRXB sub rax,0x32323032
  4349e9:	sub    eax,0x4900504a
  4349ee:	push   rbx
  4349ef:	rex.WRXB sub rax,0x32323032
  4349f5:	sub    eax,0x312d504a
  4349fa:	add    BYTE PTR [rcx+0x53],cl
  4349fd:	rex.WRXB sub rax,0x32323032
  434a03:	sub    eax,0x322d504a
  434a08:	add    BYTE PTR [rcx+0x53],cl
  434a0b:	rex.WRXB sub rax,0x32323032
  434a11:	sub    eax,0x4900524b
  434a16:	push   rbx
  434a17:	rex.WRXB sub rax,0x39353838
  434a1d:	sub    eax,0x49003031
  434a22:	push   rbx
  434a23:	rex.WRXB sub rax,0x39353838
  434a29:	sub    eax,0x49003331
  434a2e:	push   rbx
  434a2f:	rex.WRXB sub rax,0x39353838
  434a35:	sub    eax,0x49003431
  434a3a:	push   rbx
  434a3b:	rex.WRXB sub rax,0x39353838
  434a41:	sub    eax,0x49003531
  434a46:	push   rbx
  434a47:	rex.WRXB sub rax,0x39353838
  434a4d:	sub    eax,0x49003631
  434a52:	push   rbx
  434a53:	rex.WRXB sub rax,0x39353838
  434a59:	sub    eax,0x53490032
  434a5e:	rex.WRXB sub rax,0x39353838
  434a64:	sub    eax,0x53490033
  434a69:	rex.WRXB sub rax,0x39353838
  434a6f:	sub    eax,0x53490034
  434a74:	rex.WRXB sub rax,0x39353838
  434a7a:	sub    eax,0x53490035
  434a7f:	rex.WRXB sub rax,0x39353838
  434a85:	sub    eax,0x53490036
  434a8a:	rex.WRXB sub rax,0x39353838
  434a90:	sub    eax,0x53490037
  434a95:	rex.WRXB sub rax,0x39353838
  434a9b:	sub    eax,0x53490038
  434aa0:	rex.WRXB sub rax,0x39353838
  434aa6:	sub    eax,0x53490039
  434aab:	rex.WRXB sub rax,0x544c4543
  434ab1:	rex.WB
  434ab2:	rex.XB add BYTE PTR [r9+0x53],cl
  434ab6:	rex.WRXB sub rax,0x312d5249
  434abc:	xor    BYTE PTR [rax],dh
  434abe:	add    BYTE PTR [rcx+0x53],cl
  434ac1:	rex.WRXB sub rax,0x312d5249
  434ac7:	xor    BYTE PTR [rcx],dh
  434ac9:	add    BYTE PTR [rcx+0x53],cl
  434acc:	rex.WRXB sub rax,0x312d5249
  434ad2:	xor    BYTE PTR [rcx],bh
  434ad4:	add    BYTE PTR [rcx+0x53],cl
  434ad7:	rex.WRXB sub rax,0x312d5249
  434add:	xor    DWORD PTR [rax],esi
  434adf:	add    BYTE PTR [rcx+0x53],cl
  434ae2:	rex.WRXB sub rax,0x312d5249
  434ae8:	xor    dh,BYTE PTR [rsi]
  434aea:	add    BYTE PTR [rcx+0x53],cl
  434aed:	rex.WRXB sub rax,0x312d5249
  434af3:	xor    dh,BYTE PTR [rdi]
  434af5:	add    BYTE PTR [rcx+0x53],cl
  434af8:	rex.WRXB sub rax,0x312d5249
  434afe:	xor    edi,DWORD PTR [rax]
  434b00:	add    BYTE PTR [rcx+0x53],cl
  434b03:	rex.WRXB sub rax,0x312d5249
  434b09:	xor    al,0x0
  434b0b:	rex.WB push r11
  434b0d:	rex.WRXB sub rax,0x312d5249
  434b13:	xor    al,0x34
  434b15:	add    BYTE PTR [rcx+0x53],cl
  434b18:	rex.WRXB sub rax,0x312d5249
  434b1e:	xor    al,0x38
  434b20:	add    BYTE PTR [rcx+0x53],cl
  434b23:	rex.WRXB sub rax,0x312d5249
  434b29:	xor    al,0x39
  434b2b:	add    BYTE PTR [rcx+0x53],cl
  434b2e:	rex.WRXB sub rax,0x312d5249
  434b34:	xor    eax,0x53490037
  434b39:	rex.WRXB sub rax,0x312d5249
  434b3f:	xor    eax,0x53490039
  434b44:	rex.WRXB sub rax,0x312d5249
  434b4a:	ss xor eax,0x4f534900
  434b50:	sub    eax,0x312d5249
  434b55:	ss add BYTE PTR ss:[rcx+0x53],cl
  434b5a:	rex.WRXB sub rax,0x312d5249
  434b60:	(bad)  
  434b61:	cmp    DWORD PTR [rax],eax
  434b63:	rex.WB push r11
  434b65:	rex.WRXB sub rax,0x312d5249
  434b6b:	cmp    DWORD PTR [rcx],edi
  434b6d:	add    BYTE PTR [rcx+0x53],cl
  434b70:	rex.WRXB sub rax,0x322d5249
  434b76:	xor    BYTE PTR [rbx],dh
  434b78:	add    BYTE PTR [rcx+0x53],cl
  434b7b:	rex.WRXB sub rax,0x322d5249
  434b81:	xor    dh,BYTE PTR [rsi]
  434b83:	add    BYTE PTR [rcx+0x53],cl
  434b86:	rex.WRXB sub rax,0x352d5249
  434b8c:	(bad)  
  434b8d:	add    BYTE PTR [rcx+0x53],cl
  434b90:	rex.WRXB sub rax,0x352d5249
  434b96:	cmp    BYTE PTR [rax],al
  434b98:	rex.WB push r11
  434b9a:	rex.WRXB sub rax,0x362d5249
  434ba0:	add    BYTE PTR [rcx+0x53],cl
  434ba3:	rex.WRXB sub rax,0x382d5249
  434ba9:	(bad)  
  434baa:	add    BYTE PTR [rcx+0x53],cl
  434bad:	rex.WRXB
  434bae:	ss xor al,0x36
  434bb1:	sub    eax,0x49004e43
  434bb6:	push   rbx
  434bb7:	rex.WRXB
  434bb8:	ss xor al,0x36
  434bbb:	sub    eax,0x4900504a
  434bc0:	push   rbx
  434bc1:	rex.WRXB
  434bc2:	ss xor al,0x36
  434bc5:	sub    eax,0x49005355
  434bca:	push   rbx
  434bcb:	rex.WRXB cmp BYTE PTR [r8],r15b
  434bce:	xor    eax,0x312d39
  434bd3:	rex.WB push r11
  434bd5:	rex.WRXB cmp BYTE PTR [r8],r15b
  434bd8:	xor    eax,0x30312d39
  434bdd:	add    BYTE PTR [rcx+0x53],cl
  434be0:	rex.WRXB cmp BYTE PTR [r8],r15b
  434be3:	xor    eax,0x35312d39
  434be8:	add    BYTE PTR [rcx+0x53],cl
  434beb:	rex.WRXB cmp BYTE PTR [r8],r15b
  434bee:	xor    eax,0x322d39
  434bf3:	rex.WB push r11
  434bf5:	rex.WRXB cmp BYTE PTR [r8],r15b
  434bf8:	xor    eax,0x342d39
  434bfd:	rex.WB push r11
  434bff:	rex.WRXB cmp BYTE PTR [r8],r15b
  434c02:	xor    eax,0x352d39
  434c07:	rex.WB push r11
  434c09:	rex.WRXB cmp BYTE PTR [r8],r15b
  434c0c:	xor    eax,0x362d39
  434c11:	rex.WB push r11
  434c13:	rex.WRXB cmp BYTE PTR [r8],r15b
  434c16:	xor    eax,0x372d39
  434c1b:	rex.WB push r11
  434c1d:	rex.WRXB cmp BYTE PTR [r8],r15b
  434c20:	xor    eax,0x382d39
  434c25:	rex.WB push r11
  434c27:	rex.WRXB cmp BYTE PTR [r8],r15b
  434c2a:	xor    eax,0x392d39
  434c2f:	rex.WB push r11
  434c31:	rex.WRXB pop r15
  434c33:	ss xor al,0x36
  434c36:	cs rex.WB push r10
  434c39:	push   rsi
  434c3a:	cmp    dh,BYTE PTR [rcx]
  434c3c:	cmp    DWORD PTR [rcx],edi
  434c3e:	xor    DWORD PTR [rax],eax
  434c40:	rex.WB push r11
  434c42:	rex.WRXB pop r15
  434c44:	cmp    BYTE PTR [rax],bh
  434c46:	xor    eax,0x312d39
  434c4b:	rex.WB push r11
  434c4d:	rex.WRXB pop r15
  434c4f:	cmp    BYTE PTR [rax],bh
  434c51:	xor    eax,0x30312d39
  434c56:	add    BYTE PTR [rcx+0x53],cl
  434c59:	rex.WRXB pop r15
  434c5b:	cmp    BYTE PTR [rax],bh
  434c5d:	xor    eax,0x30312d39
  434c62:	cmp    dh,BYTE PTR [rcx]
  434c64:	cmp    DWORD PTR [rcx],edi
  434c66:	xor    al,BYTE PTR [rax]
  434c68:	rex.WB push r11
  434c6a:	rex.WRXB pop r15
  434c6c:	cmp    BYTE PTR [rax],bh
  434c6e:	xor    eax,0x33312d39
  434c73:	add    BYTE PTR [rcx+0x53],cl
  434c76:	rex.WRXB pop r15
  434c78:	cmp    BYTE PTR [rax],bh
  434c7a:	xor    eax,0x34312d39
  434c7f:	add    BYTE PTR [rcx+0x53],cl
  434c82:	rex.WRXB pop r15
  434c84:	cmp    BYTE PTR [rax],bh
  434c86:	xor    eax,0x34312d39
  434c8b:	cmp    dh,BYTE PTR [rcx]
  434c8d:	cmp    DWORD PTR [rcx],edi
  434c8f:	cmp    BYTE PTR [rax],al
  434c91:	rex.WB push r11
  434c93:	rex.WRXB pop r15
  434c95:	cmp    BYTE PTR [rax],bh
  434c97:	xor    eax,0x35312d39
  434c9c:	add    BYTE PTR [rcx+0x53],cl
  434c9f:	rex.WRXB pop r15
  434ca1:	cmp    BYTE PTR [rax],bh
  434ca3:	xor    eax,0x35312d39
  434ca8:	cmp    dh,BYTE PTR [rcx]
  434caa:	cmp    DWORD PTR [rcx],edi
  434cac:	cmp    BYTE PTR [rax],al
  434cae:	rex.WB push r11
  434cb0:	rex.WRXB pop r15
  434cb2:	cmp    BYTE PTR [rax],bh
  434cb4:	xor    eax,0x36312d39
  434cb9:	add    BYTE PTR [rcx+0x53],cl
  434cbc:	rex.WRXB pop r15
  434cbe:	cmp    BYTE PTR [rax],bh
  434cc0:	xor    eax,0x36312d39
  434cc5:	cmp    dh,BYTE PTR [rdx]
  434cc7:	xor    BYTE PTR [rax],dh
  434cc9:	xor    BYTE PTR [rax],al
  434ccb:	rex.WB push r11
  434ccd:	rex.WRXB pop r15
  434ccf:	cmp    BYTE PTR [rax],bh
  434cd1:	xor    eax,0x3a312d39
  434cd6:	xor    DWORD PTR [rcx],edi
  434cd8:	cmp    BYTE PTR [rdi],dh
  434cda:	add    BYTE PTR [rcx+0x53],cl
  434cdd:	rex.WRXB pop r15
  434cdf:	cmp    BYTE PTR [rax],bh
  434ce1:	xor    eax,0x322d39
  434ce6:	rex.WB push r11
  434ce8:	rex.WRXB pop r15
  434cea:	cmp    BYTE PTR [rax],bh
  434cec:	xor    eax,0x3a322d39
  434cf1:	xor    DWORD PTR [rcx],edi
  434cf3:	cmp    BYTE PTR [rdi],dh
  434cf5:	add    BYTE PTR [rcx+0x53],cl
  434cf8:	rex.WRXB pop r15
  434cfa:	cmp    BYTE PTR [rax],bh
  434cfc:	xor    eax,0x332d39
  434d01:	rex.WB push r11
  434d03:	rex.WRXB pop r15
  434d05:	cmp    BYTE PTR [rax],bh
  434d07:	xor    eax,0x3a332d39
  434d0c:	xor    DWORD PTR [rcx],edi
  434d0e:	cmp    BYTE PTR [rax],bh
  434d10:	add    BYTE PTR [rcx+0x53],cl
  434d13:	rex.WRXB pop r15
  434d15:	cmp    BYTE PTR [rax],bh
  434d17:	xor    eax,0x342d39
  434d1c:	rex.WB push r11
  434d1e:	rex.WRXB pop r15
  434d20:	cmp    BYTE PTR [rax],bh
  434d22:	xor    eax,0x3a342d39
  434d27:	xor    DWORD PTR [rcx],edi
  434d29:	cmp    BYTE PTR [rax],bh
  434d2b:	add    BYTE PTR [rcx+0x53],cl
  434d2e:	rex.WRXB pop r15
  434d30:	cmp    BYTE PTR [rax],bh
  434d32:	xor    eax,0x352d39
  434d37:	rex.WB push r11
  434d39:	rex.WRXB pop r15
  434d3b:	cmp    BYTE PTR [rax],bh
  434d3d:	xor    eax,0x3a352d39
  434d42:	xor    DWORD PTR [rcx],edi
  434d44:	cmp    BYTE PTR [rax],bh
  434d46:	add    BYTE PTR [rcx+0x53],cl
  434d49:	rex.WRXB pop r15
  434d4b:	cmp    BYTE PTR [rax],bh
  434d4d:	xor    eax,0x362d39
  434d52:	rex.WB push r11
  434d54:	rex.WRXB pop r15
  434d56:	cmp    BYTE PTR [rax],bh
  434d58:	xor    eax,0x3a362d39
  434d5d:	xor    DWORD PTR [rcx],edi
  434d5f:	cmp    BYTE PTR [rdi],dh
  434d61:	add    BYTE PTR [rcx+0x53],cl
  434d64:	rex.WRXB pop r15
  434d66:	cmp    BYTE PTR [rax],bh
  434d68:	xor    eax,0x372d39
  434d6d:	rex.WB push r11
  434d6f:	rex.WRXB pop r15
  434d71:	cmp    BYTE PTR [rax],bh
  434d73:	xor    eax,0x3a372d39
  434d78:	xor    DWORD PTR [rcx],edi
  434d7a:	cmp    BYTE PTR [rdi],dh
  434d7c:	add    BYTE PTR [rcx+0x53],cl
  434d7f:	rex.WRXB pop r15
  434d81:	cmp    BYTE PTR [rax],bh
  434d83:	xor    eax,0x382d39
  434d88:	rex.WB push r11
  434d8a:	rex.WRXB pop r15
  434d8c:	cmp    BYTE PTR [rax],bh
  434d8e:	xor    eax,0x3a382d39
  434d93:	xor    DWORD PTR [rcx],edi
  434d95:	cmp    BYTE PTR [rax],bh
  434d97:	add    BYTE PTR [rcx+0x53],cl
  434d9a:	rex.WRXB pop r15
  434d9c:	cmp    BYTE PTR [rax],bh
  434d9e:	xor    eax,0x392d39
  434da3:	rex.WB push r11
  434da5:	rex.WRXB pop r15
  434da7:	cmp    BYTE PTR [rax],bh
  434da9:	xor    eax,0x3a392d39
  434dae:	xor    DWORD PTR [rcx],edi
  434db0:	cmp    BYTE PTR [rcx],bh
  434db2:	add    BYTE PTR [rdx+0x41],cl
  434db5:	push   rsi
  434db6:	add    BYTE PTR [r10+0x49],cl
  434dba:	push   rbx
  434dbb:	xor    BYTE PTR [rdx],dh
  434dbd:	xor    BYTE PTR [rax],bh
  434dbf:	add    BYTE PTR [rdx+0x49],cl
  434dc2:	push   rbx
  434dc3:	pop    rax
  434dc4:	xor    BYTE PTR [rdx],dh
  434dc6:	xor    BYTE PTR [rcx],dh
  434dc8:	sub    eax,0x36373931
  434dcd:	add    BYTE PTR [rdx+0x49],cl
  434dd0:	push   rbx
  434dd1:	pop    rdi
  434dd2:	rex.XB
  434dd3:	xor    dh,BYTE PTR ss:[rdx]
  434dd6:	xor    BYTE PTR [rip+0x39363931],ch        # 0x3979870d
  434ddc:	sub    eax,0x4a004f52
  434de1:	rex.WB push r11
  434de3:	pop    rdi
  434de4:	rex.XB
  434de5:	xor    dh,BYTE PTR ss:[rdx]
  434de8:	ss sub eax,0x33383931
  434dee:	add    BYTE PTR [rdx+0x49],cl
  434df1:	push   rbx
  434df2:	pop    rdi
  434df3:	pop    rax
  434df4:	xor    BYTE PTR [rdx],dh
  434df6:	xor    BYTE PTR [rcx],dh
  434df8:	add    BYTE PTR [rdx+0x49],cl
  434dfb:	push   rbx
  434dfc:	pop    rdi
  434dfd:	pop    rax
  434dfe:	xor    BYTE PTR [rdx],dh
  434e00:	xor    BYTE PTR [rax],bh
  434e02:	add    BYTE PTR [rdx+0x49],cl
  434e05:	push   rbx
  434e06:	pop    rdi
  434e07:	pop    rax
  434e08:	xor    BYTE PTR [rdx],dh
  434e0a:	xor    BYTE PTR [rax],bh
  434e0c:	sub    eax,0x33383931
  434e11:	add    BYTE PTR [rdx+0x49],cl
  434e14:	push   rbx
  434e15:	pop    rdi
  434e16:	pop    rax
  434e17:	xor    BYTE PTR [rdx],dh
  434e19:	xor    BYTE PTR [rax],bh
  434e1b:	sub    eax,0x30393931
  434e20:	add    BYTE PTR [rdx+0x49],cl
  434e23:	push   rbx
  434e24:	pop    rdi
  434e25:	pop    rax
  434e26:	xor    BYTE PTR [rdx],dh
  434e28:	xor    DWORD PTR [rdx],esi
  434e2a:	add    BYTE PTR [rdx+0x49],cl
  434e2d:	push   rbx
  434e2e:	pop    rdi
  434e2f:	pop    rax
  434e30:	xor    BYTE PTR [rdx],dh
  434e32:	xor    DWORD PTR [rdx],esi
  434e34:	sub    eax,0x30393931
  434e39:	add    BYTE PTR [rdx+0x49],cl
  434e3c:	push   rbx
  434e3d:	pop    rdi
  434e3e:	pop    rax
  434e3f:	xor    BYTE PTR [rdx],dh
  434e41:	xor    DWORD PTR [rdx],esi
  434e43:	xor    DWORD PTR cs:[rcx],edi
  434e46:	cmp    DWORD PTR [rax],esi
  434e48:	sub    eax,0x4f4a0030
  434e4d:	rex.W
  434e4e:	rex.B
  434e4f:	rex.X add BYTE PTR [rdx+0x50],cl
  434e53:	add    BYTE PTR [rbx+0x4f],cl
  434e56:	rex.WB cmp BYTE PTR [rip+0x4f4b0052],bpl        # 0x4f8e4eaf
  434e5d:	rex.WB cmp BYTE PTR [rip+0x4b005552],bpl        # 0x4b43a3b6
  434e64:	rex.WRXB
  434e65:	rex.WB cmp BYTE PTR [rip+0x4f4b0054],bpl        # 0x4f8e4ec0
  434e6c:	rex.WB cmp BYTE PTR [rip+0x4f4b0055],bpl        # 0x4f8e4ec8
  434e73:	push   rdx
  434e74:	rex.RB
  434e75:	rex.B
  434e76:	rex.WRX add BYTE PTR [rbx+0x53],r9b
  434e7a:	rex.XB pop r15
  434e7c:	xor    eax,0x313036
  434e81:	rex.WXB push r11
  434e83:	pop    rdi
  434e84:	rex.XB pop r15
  434e86:	xor    eax,0x2d313036
  434e8b:	xor    DWORD PTR [rcx],edi
  434e8d:	cmp    BYTE PTR [rdi],dh
  434e8f:	add    BYTE PTR [rbx+0x53],cl
  434e92:	pop    rdi
  434e93:	rex.XB pop r15
  434e95:	xor    eax,0x2d313036
  434e9a:	xor    DWORD PTR [rcx],edi
  434e9c:	cmp    BYTE PTR [rcx],bh
  434e9e:	add    BYTE PTR [rcx+rsi*1+0x0],cl
  434ea2:	rex.WR xor r8b,BYTE PTR [rax]
  434ea5:	xor    r8,QWORD PTR [rax]
  434ea8:	rex.WR xor al,0x0
  434eab:	rex.WR xor rax,0x364c00
  434eb1:	rex.WR (bad) 
  434eb3:	add    BYTE PTR [rax+rdi*1+0x0],cl
  434eb7:	rex.WR
  434eb8:	push   r12
  434eba:	rex.WB
  434ebb:	rex.WRX xor QWORD PTR [rax],r8
  434ebe:	rex.WR
  434ebf:	push   r12
  434ec1:	rex.WB
  434ec2:	rex.WRX xor r8b,BYTE PTR [rax]
  434ec5:	rex.WR
  434ec6:	push   r12
  434ec8:	rex.WB
  434ec9:	rex.WRX xor r8,QWORD PTR [rax]
  434ecc:	rex.WR
  434ecd:	push   r12
  434ecf:	rex.WB
  434ed0:	rex.WRX xor al,0x0
  434ed3:	rex.WR
  434ed4:	push   r12
  434ed6:	rex.WB
  434ed7:	rex.WRX xor rax,0x54414c00
  434edd:	rex.WB
  434ede:	rex.WRX
  434edf:	add    BYTE PTR ss:[rcx+rax*2+0x54],cl
  434ee4:	rex.WB
  434ee5:	rex.WRX (bad) 
  434ee7:	add    BYTE PTR [rcx+rax*2+0x54],cl
  434eeb:	rex.WB
  434eec:	rex.WRX cmp BYTE PTR [rax],r8b
  434eef:	rex.WRB
  434ef0:	rex.B
  434ef1:	rex.XB add BYTE PTR [r13+0x41],cl
  434ef5:	rex.XB
  434ef6:	push   r10
  434ef8:	rex.B
  434ef9:	rex.X
  434efa:	rex.WB
  434efb:	rex.XB add BYTE PTR [r13+0x41],cl
  434eff:	rex.XB
  434f00:	rex.XB
  434f01:	rex.RB
  434f02:	rex.WRX push rsp
  434f04:	push   rdx
  434f05:	rex.B
  434f06:	rex.WR
  434f07:	rex.RB push r13
  434f09:	push   rdx
  434f0a:	rex.WRXB push r8
  434f0c:	add    BYTE PTR [r13+0x41],r9b
  434f10:	rex.XB
  434f11:	rex.XB push r10
  434f13:	rex.WRXB
  434f14:	push   r12
  434f16:	rex.WB
  434f17:	rex.B
  434f18:	rex.WRX add BYTE PTR [rbp+0x41],r9b
  434f1c:	rex.XB
  434f1d:	rex.XB pop r9
  434f1f:	push   rdx
  434f20:	rex.WB
  434f21:	rex.WR
  434f22:	rex.WR
  434f23:	rex.WB
  434f24:	rex.XB add BYTE PTR [r13+0x41],cl
  434f28:	rex.XB
  434f29:	rex.RXB push r10
  434f2b:	rex.RB
  434f2c:	rex.RB
  434f2d:	rex.WXB add BYTE PTR [r13+0x41],cl
  434f31:	rex.XB
  434f32:	rex.W
  434f33:	rex.RB
  434f34:	rex.X push rdx
  434f36:	rex.RB push r15
  434f38:	add    BYTE PTR [rbp+0x41],cl
  434f3b:	rex.XB
  434f3c:	rex.WB
  434f3d:	rex.XB
  434f3e:	rex.RB
  434f3f:	rex.WR
  434f40:	rex.B
  434f41:	rex.WRX
  434f42:	add    BYTE PTR [rbp+0x41],r9b
  434f46:	rex.XB
  434f47:	rex.WB
  434f48:	rex.WRX push rsp
  434f4a:	rex.WRXB push r11
  434f4c:	rex.W add BYTE PTR [rbp+0x41],cl
  434f50:	rex.XB push r10
  434f52:	rex.WRXB
  434f53:	rex.WRB
  434f54:	rex.B
  434f55:	rex.WRX add BYTE PTR [rbp+0x41],r9b
  434f59:	rex.XB push r10
  434f5b:	rex.WRXB
  434f5c:	rex.WRB
  434f5d:	rex.B
  434f5e:	rex.WRX
  434f5f:	rex.WB
  434f60:	add    BYTE PTR [r13+0x41],cl
  434f64:	rex.XB push r12
  434f66:	rex.W
  434f67:	rex.B
  434f68:	rex.WB add BYTE PTR [r13+0x41],cl
  434f6c:	rex.XB push r12
  434f6e:	push   rbp
  434f6f:	push   rdx
  434f70:	rex.WXB
  434f71:	rex.WB push r11
  434f73:	rex.W add BYTE PTR [rbp+0x41],cl
  434f77:	rex.XB push r13
  434f79:	rex.WXB push r10
  434f7b:	rex.B
  434f7c:	rex.WB
  434f7d:	rex.WRX
  434f7e:	add    BYTE PTR [r13+0x53],r9b
  434f82:	sub    eax,0x49534e41
  434f87:	add    BYTE PTR [rbp+0x53],cl
  434f8a:	sub    eax,0x42415241
  434f8f:	add    BYTE PTR [rbp+0x53],cl
  434f92:	sub    eax,0x4c525943
  434f97:	add    BYTE PTR [rbp+0x53],cl
  434f9a:	sub    eax,0x4d004545
  434f9f:	push   rbx
  434fa0:	sub    eax,0x45455247
  434fa5:	rex.WXB add BYTE PTR [r13+0x53],cl
  434fa9:	sub    eax,0x52424548
  434fae:	add    BYTE PTR [rbp+0x53],cl
  434fb1:	sub    eax,0x4b525554
  434fb6:	add    BYTE PTR [rbp+0x53],cl
  434fb9:	pop    rdi
  434fba:	rex.WXB
  434fbb:	rex.B
  434fbc:	rex.WRX
  434fbd:	rex.WX
  434fbe:	rex.WB add BYTE PTR [r13+0x55],cl
  434fc2:	rex.WR
  434fc3:	rex.RB
  434fc4:	rex.WR
  434fc5:	rex.B
  434fc6:	rex.WRXB sub rax,0x454e0031
  434fcc:	pop    rax
  434fcd:	push   rsp
  434fce:	push   rbx
  434fcf:	push   rsp
  434fd0:	rex.RB push r8
  434fd2:	add    BYTE PTR [rdx+0x38],dl
  434fd5:	add    BYTE PTR [rdx+0x4f],dl
  434fd8:	rex.WRB
  434fd9:	rex.B
  434fda:	rex.WRX cmp BYTE PTR [rax],r8b
  434fdd:	push   rbx
  434fde:	rex.W
  434fdf:	rex.WB
  434fe0:	rex.RX push rsp
  434fe2:	sub    eax,0x53494a
  434fe7:	push   rbx
  434fe8:	rex.W
  434fe9:	rex.WB
  434fea:	rex.RX push rsp
  434fec:	pop    rdi
  434fed:	rex.WX
  434fee:	rex.WB push r11
  434ff0:	add    BYTE PTR [rbx+0x4a],dl
  434ff3:	rex.WB push r11
  434ff5:	add    BYTE PTR [rbx+rax*2+0x56],dl
  434ff9:	rex.WRX add BYTE PTR [rbx+r8*2+0x56],r10b
  434ffe:	rex.WRX sub rax,0x32313735
  435004:	add    BYTE PTR [rbx+rax*2+0x56],dl
  435008:	rex.WRX xor rax,0x2d323137
  43500e:	xor    DWORD PTR [rax],eax
  435010:	push   rsp
  435011:	rex.XB push r14
  435013:	rex.WRX xor rax,0x2d323137
  435019:	xor    DWORD PTR [rdx],edi
  43501b:	xor    DWORD PTR [rcx],edi
  43501d:	cmp    DWORD PTR [rbx],esi
  43501f:	add    BYTE PTR [rcx+rcx*2+0x53],dl
  435023:	sub    eax,0x303236
  435028:	push   rsp
  435029:	rex.WB push r11
  43502b:	xor    dh,BYTE PTR ss:[rax]
  43502e:	add    BYTE PTR [rcx+rcx*2+0x53],dl
  435032:	xor    dh,BYTE PTR ss:[rax]
  435035:	sub    eax,0x49540030
  43503a:	push   rbx
  43503b:	xor    dh,BYTE PTR ss:[rax]
  43503e:	xor    dh,BYTE PTR cs:[rip+0x312d3932]        # 0x31708977
  435045:	add    BYTE PTR [rcx+rcx*2+0x53],dl
  435049:	xor    dh,BYTE PTR ss:[rax]
  43504c:	xor    dh,BYTE PTR cs:[rip+0x302d3333]        # 0x30708386
  435053:	add    BYTE PTR [rcx+rcx*2+0x53],dl
  435057:	xor    dh,BYTE PTR ss:[rax]
  43505a:	xor    dh,BYTE PTR cs:[rip+0x312d3333]        # 0x31708394
  435061:	add    BYTE PTR [rbp+0x43],dl
  435064:	push   rbx
  435065:	sub    eax,0x4e492d32
  43506a:	push   rsp
  43506b:	rex.RB push r10
  43506d:	rex.WRX
  43506e:	rex.B
  43506f:	rex.WR add BYTE PTR [rbp+0x43],r10b
  435073:	push   rbx
  435074:	sub    eax,0x57532d32
  435079:	push   r8
  43507b:	push   rax
  43507c:	rex.RB
  43507d:	add    BYTE PTR [rbp+0x43],r10b
  435081:	push   rbx
  435082:	sub    eax,0x4e492d34
  435087:	push   rsp
  435088:	rex.RB push r10
  43508a:	rex.WRX
  43508b:	rex.B
  43508c:	rex.WR add BYTE PTR [rbp+0x43],r10b
  435090:	push   rbx
  435091:	sub    eax,0x57532d34
  435096:	push   r8
  435098:	push   rax
  435099:	rex.RB
  43509a:	add    BYTE PTR [rbp+0x43],r10b
  43509e:	push   rbx
  43509f:	sub    eax,0x454234
  4350a4:	push   rbp
  4350a5:	rex.XB push r11
  4350a7:	sub    eax,0x454c34
  4350ac:	push   rbp
  4350ad:	rex.XB push r11
  4350af:	xor    al,BYTE PTR [rax]
  4350b1:	push   rbp
  4350b2:	rex.XB push r11
  4350b4:	xor    al,0x0
  4350b6:	push   rbp
  4350b7:	rex.W
  4350b8:	rex.XB add BYTE PTR [r13+0x4e],dl
  4350bc:	rex.WB
  4350bd:	rex.XB
  4350be:	rex.WRXB
  4350bf:	rex.R
  4350c0:	rex.RB sub eax,0x312d31
  4350c6:	push   rbp
  4350c7:	rex.WRX
  4350c8:	rex.WB
  4350c9:	rex.XB
  4350ca:	rex.WRXB
  4350cb:	rex.R
  4350cc:	rex.RB sub eax,0x2d312d31
  4350d2:	push   rbp
  4350d3:	push   rsp
  4350d4:	rex.RX sub eax,0x4e550037
  4350da:	rex.WB
  4350db:	rex.XB
  4350dc:	rex.WRXB
  4350dd:	rex.R
  4350de:	rex.RB
  4350df:	rex.X
  4350e0:	rex.WB
  4350e1:	rex.RXB add BYTE PTR [r13+0x4e],r10b
  4350e5:	rex.WB
  4350e6:	rex.XB
  4350e7:	rex.WRXB
  4350e8:	rex.R
  4350e9:	rex.RB
  4350ea:	rex.WR
  4350eb:	rex.WB push r12
  4350ed:	push   rsp
  4350ee:	rex.WR
  4350ef:	add    BYTE PTR [r13+0x53],r10b
  4350f3:	add    BYTE PTR [rbp+0x53],dl
  4350f6:	sub    eax,0x49435341
  4350fb:	rex.WB add BYTE PTR [r13+0x54],dl
  4350ff:	rex.RX sub eax,0x55003631
  435105:	push   rsp
  435106:	rex.RX sub eax,0x45423631
  43510c:	add    BYTE PTR [rbp+0x54],dl
  43510f:	rex.RX sub eax,0x454c3631
  435115:	add    BYTE PTR [rbp+0x54],dl
  435118:	rex.RX sub eax,0x55003233
  43511e:	push   rsp
  43511f:	rex.RX sub eax,0x45423233
  435125:	add    BYTE PTR [rbp+0x54],dl
  435128:	rex.RX sub eax,0x454c3233
  43512e:	add    BYTE PTR [rbp+0x54],dl
  435131:	rex.RX sub eax,0x54550037
  435137:	rex.RX xor DWORD PTR [rsi],r14d
  43513a:	add    BYTE PTR [rbp+0x54],dl
  43513d:	rex.RX (bad) 
  43513f:	add    BYTE PTR [rbp+0x54],dl
  435142:	rex.RX cmp BYTE PTR [rax],r8b
  435145:	push   rsi
  435146:	rex.WB push r11
  435148:	rex.XB
  435149:	rex.WB
  43514a:	rex.WB add BYTE PTR [r14+0x49],dl
  43514e:	push   rbx
  43514f:	rex.XB
  435150:	rex.WB
  435151:	xor    QWORD PTR [r14],rbp
  435154:	xor    DWORD PTR [rip+0x49570031],ebp        # 0x499a518b
  43515a:	rex.WRX
  43515b:	rex.X
  43515c:	rex.B
  43515d:	rex.WR push rsp
  43515f:	push   rdx
  435160:	rex.WB
  435161:	rex.WRB add BYTE PTR [r15+0x49],r10b
  435165:	rex.WRX
  435166:	rex.R
  435167:	rex.WRXB push r15
  435169:	push   rbx
  43516a:	sub    eax,0x30353231
  43516f:	add    BYTE PTR [rdi+0x49],dl
  435172:	rex.WRX
  435173:	rex.R
  435174:	rex.WRXB push r15
  435176:	push   rbx
  435177:	sub    eax,0x31353231
  43517c:	add    BYTE PTR [rdi+0x49],dl
  43517f:	rex.WRX
  435180:	rex.R
  435181:	rex.WRXB push r15
  435183:	push   rbx
  435184:	sub    eax,0x32353231
  435189:	add    BYTE PTR [rdi+0x49],dl
  43518c:	rex.WRX
  43518d:	rex.R
  43518e:	rex.WRXB push r15
  435190:	push   rbx
  435191:	sub    eax,0x33353231
  435196:	add    BYTE PTR [rdi+0x49],dl
  435199:	rex.WRX
  43519a:	rex.R
  43519b:	rex.WRXB push r15
  43519d:	push   rbx
  43519e:	sub    eax,0x34353231
  4351a3:	add    BYTE PTR [rdi+0x49],dl
  4351a6:	rex.WRX
  4351a7:	rex.R
  4351a8:	rex.WRXB push r15
  4351aa:	push   rbx
  4351ab:	sub    eax,0x35353231
  4351b0:	add    BYTE PTR [rdi+0x49],dl
  4351b3:	rex.WRX
  4351b4:	rex.R
  4351b5:	rex.WRXB push r15
  4351b7:	push   rbx
  4351b8:	sub    eax,0x36353231
  4351bd:	add    BYTE PTR [rdi+0x49],dl
  4351c0:	rex.WRX
  4351c1:	rex.R
  4351c2:	rex.WRXB push r15
  4351c4:	push   rbx
  4351c5:	sub    eax,0x37353231
  4351ca:	add    BYTE PTR [rdi+0x49],dl
  4351cd:	rex.WRX
  4351ce:	rex.R
  4351cf:	rex.WRXB push r15
  4351d1:	push   rbx
  4351d2:	sub    eax,0x38353231
  4351d7:	add    BYTE PTR [rdi+0x49],dl
  4351da:	rex.WRX
  4351db:	rex.R
  4351dc:	rex.WRXB push r15
  4351de:	push   rbx
  4351df:	sub    eax,0x343738
  4351e4:	pop    rax
  4351e5:	xor    BYTE PTR [rdx],dh
  4351e7:	xor    BYTE PTR [rcx],dh
  4351e9:	add    BYTE PTR [rax+0x30],bl
  4351ec:	xor    dh,BYTE PTR [rax]
  4351ee:	cmp    BYTE PTR [rax],al
  4351f0:	pop    rax
  4351f1:	xor    BYTE PTR [rdx],dh
  4351f3:	xor    DWORD PTR [rdx],esi
  4351f5:	add    BYTE PTR [rbp+0x75],ah
  4351f8:	movsxd ecx,DWORD PTR [rdx+0x50]
  4351fb:	add    BYTE PTR [rbp+0x75],ah
  4351fe:	movsxd ecx,DWORD PTR [rbx+0x52]
  435201:	add    BYTE PTR [rbp+0x75],ah
  435204:	movsxd edx,DWORD PTR [rdi+rdx*2+0x0]
  435208:	push   0x43353170
  43520d:	rex.WRX add BYTE PTR [rcx+0x73],r13b
  435211:	outs   dx,DWORD PTR ds:[rsi]
  435212:	cmp    BYTE PTR [rcx],dh
  435214:	add    BYTE PTR [rcx+0x73],ch
  435217:	outs   dx,DWORD PTR ds:[rsi]
  435218:	cmp    BYTE PTR [rcx],dh
  43521a:	xor    eax,0x6f736900
  43521f:	cmp    BYTE PTR [rdx],dh
  435221:	add    BYTE PTR [rcx+0x73],ch
  435224:	outs   dx,DWORD PTR ds:[rsi]
  435225:	cmp    BYTE PTR [rbx],dh
  435227:	add    BYTE PTR [rcx+0x73],ch
  43522a:	outs   dx,DWORD PTR ds:[rsi]
  43522b:	cmp    BYTE PTR [rax+rax*1],dh
  43522e:	imul   esi,DWORD PTR [rbx+0x6f],0x69003538
  435235:	jae    0x4352a6
  435237:	cmp    BYTE PTR [rsi],dh
  435239:	add    BYTE PTR [rcx+0x73],ch
  43523c:	outs   dx,DWORD PTR ds:[rsi]
  43523d:	cmp    BYTE PTR [rdi],dh
  43523f:	add    BYTE PTR [rcx+0x73],ch
  435242:	outs   dx,DWORD PTR ds:[rsi]
  435243:	cmp    BYTE PTR [rax],bh
  435245:	add    BYTE PTR [rcx+0x73],ch
  435248:	outs   dx,DWORD PTR ds:[rsi]
  435249:	cmp    BYTE PTR [rax],bh
  43524b:	xor    eax,0x69003139
  435250:	jae    0x4352c1
  435252:	cmp    BYTE PTR [rax],bh
  435254:	xor    eax,0x353139
  435259:	imul   esi,DWORD PTR [rbx+0x6f],0x39353838
  435260:	xor    eax,DWORD PTR [rax]
  435262:	imul   esi,DWORD PTR [rbx+0x6f],0x39353838
  435269:	xor    al,0x0
  43526b:	imul   esi,DWORD PTR [rbx+0x6f],0x72003938
  435272:	outs   dx,DWORD PTR ds:[rsi]
  435273:	ins    DWORD PTR es:[rdi],dx
  435274:	(bad)  
  435275:	cmp    BYTE PTR [rax],al
  435277:	je     0x4352e1
  435279:	(bad)  
  43527a:	imul   edi,DWORD PTR [rax],0x73637500
  435280:	xor    al,BYTE PTR [rax]
  435282:	jne    0x4352e7
  435284:	jae    0x4352ba
	...
  4352be:	add    BYTE PTR [rax],al
  4352c0:	xor    al,0x3d
  4352c2:	rex.XB add BYTE PTR [r8],al
  4352c5:	add    BYTE PTR [rax],al
  4352c7:	add    BYTE PTR [rsi+0x0],bl
  4352ca:	add    BYTE PTR [rax],al
  4352cc:	add    BYTE PTR [rax],al
  4352ce:	add    BYTE PTR [rax],al
  4352d0:	rex
  4352d1:	rex.RB
  4352d2:	rex.XB add BYTE PTR [r8],al
  4352d5:	add    BYTE PTR [rax],al
  4352d7:	add    BYTE PTR [rax],bl
  4352d9:	add    BYTE PTR [rax],al
  4352db:	add    BYTE PTR [rax],al
  4352dd:	add    BYTE PTR [rax],al
  4352df:	add    BYTE PTR [rbp+rax*2+0x43],al
  4352e3:	add    BYTE PTR [rax],al
  4352e5:	add    BYTE PTR [rax],al
  4352e7:	add    BYTE PTR [rcx],bl
  4352e9:	add    BYTE PTR [rax],al
  4352eb:	add    BYTE PTR [rax],al
  4352ed:	add    BYTE PTR [rax],al
  4352ef:	add    BYTE PTR [rax+0x45],cl
  4352f2:	rex.XB add BYTE PTR [r8],al
  4352f5:	add    BYTE PTR [rax],al
  4352f7:	add    BYTE PTR [rdx],bl
  4352f9:	add    BYTE PTR [rax],al
  4352fb:	add    BYTE PTR [rax],al
  4352fd:	add    BYTE PTR [rax],al
  4352ff:	add    BYTE PTR [rbp+rax*2+0x43],cl
  435303:	add    BYTE PTR [rax],al
  435305:	add    BYTE PTR [rax],al
  435307:	add    BYTE PTR [rsi+0x0],bl
  43530a:	add    BYTE PTR [rax],al
  43530c:	add    BYTE PTR [rax],al
  43530e:	add    BYTE PTR [rax],al
  435310:	pop    rbx
  435311:	rex.RB
  435312:	rex.XB add BYTE PTR [r8],al
  435315:	add    BYTE PTR [rax],al
  435317:	add    BYTE PTR [rsi+0x0],bl
  43531a:	add    BYTE PTR [rax],al
  43531c:	add    BYTE PTR [rax],al
  43531e:	add    BYTE PTR [rax],al
  435320:	push   0x45
  435322:	rex.XB add BYTE PTR [r8],al
  435325:	add    BYTE PTR [rax],al
  435327:	add    BYTE PTR [rsi],dh
  435329:	add    BYTE PTR [rax],al
  43532b:	add    BYTE PTR [rax],al
  43532d:	add    BYTE PTR [rax],al
  43532f:	add    BYTE PTR [rcx+0x45],dh
  435332:	rex.XB add BYTE PTR [r8],al
  435335:	add    BYTE PTR [rax],al
  435337:	add    BYTE PTR [rax+rax*1],al
  43533a:	add    BYTE PTR [rax],al
  43533c:	add    BYTE PTR [rax],al
  43533e:	add    BYTE PTR [rax],al
  435340:	jnp    0x435387
  435342:	rex.XB add BYTE PTR [r8],al
  435345:	add    BYTE PTR [rax],al
  435347:	add    BYTE PTR [rsi+0x0],bl
  43534a:	add    BYTE PTR [rax],al
  43534c:	add    BYTE PTR [rax],al
  43534e:	add    BYTE PTR [rax],al
  435350:	add    DWORD PTR [rbp+0x43],0x0
  435357:	add    BYTE PTR [rsi],dh
  435359:	add    BYTE PTR [rax],al
  43535b:	add    BYTE PTR [rax],al
  43535d:	add    BYTE PTR [rax],al
  43535f:	add    BYTE PTR [rdx+0x4345],cl
  435365:	add    BYTE PTR [rax],al
  435367:	add    BYTE PTR [rip+0x0],al        # 0x43536d
  43536d:	add    BYTE PTR [rax],al
  43536f:	add    BYTE PTR [rax+0x4345],dl
  435375:	add    BYTE PTR [rax],al
  435377:	add    BYTE PTR [rip+0x0],al        # 0x43537d
  43537d:	add    BYTE PTR [rax],al
  43537f:	add    BYTE PTR [rcx+0x4345],bl
  435385:	add    BYTE PTR [rax],al
  435387:	add    BYTE PTR [rip+0x0],al        # 0x43538d
  43538d:	add    BYTE PTR [rax],al
  43538f:	add    BYTE PTR [rsi+0x4345],bl
  435395:	add    BYTE PTR [rax],al
  435397:	add    BYTE PTR [rsi],al
  435399:	add    BYTE PTR [rax],al
  43539b:	add    BYTE PTR [rax],al
  43539d:	add    BYTE PTR [rax],al
  43539f:	add    BYTE PTR [rcx+0x4345],ch
  4353a5:	add    BYTE PTR [rax],al
  4353a7:	add    BYTE PTR [rsi],al
  4353a9:	add    BYTE PTR [rax],al
  4353ab:	add    BYTE PTR [rax],al
  4353ad:	add    BYTE PTR [rax],al
  4353af:	add    BYTE PTR [rbx+0x4345],dh
  4353b5:	add    BYTE PTR [rax],al
  4353b7:	add    BYTE PTR [rip+0x0],al        # 0x4353bd
  4353bd:	add    BYTE PTR [rax],al
  4353bf:	add    BYTE PTR [rbx+0x4345],bh
  4353c5:	add    BYTE PTR [rax],al
  4353c7:	add    BYTE PTR [rdi],al
  4353c9:	add    BYTE PTR [rax],al
  4353cb:	add    BYTE PTR [rax],al
  4353cd:	add    BYTE PTR [rax],al
  4353cf:	add    BYTE PTR [rdi+0x4345],bh
  4353d5:	add    BYTE PTR [rax],al
  4353d7:	add    BYTE PTR [rax],cl
  4353d9:	add    BYTE PTR [rax],al
  4353db:	add    BYTE PTR [rax],al
  4353dd:	add    BYTE PTR [rax],al
  4353df:	add    bh,al
  4353e1:	rex.RB
  4353e2:	rex.XB add BYTE PTR [r8],al
  4353e5:	add    BYTE PTR [rax],al
  4353e7:	add    BYTE PTR [rcx],cl
  4353e9:	add    BYTE PTR [rax],al
  4353eb:	add    BYTE PTR [rax],al
  4353ed:	add    BYTE PTR [rax],al
  4353ef:	add    dl,cl
  4353f1:	rex.RB
  4353f2:	rex.XB add BYTE PTR [r8],al
  4353f5:	add    BYTE PTR [rax],al
  4353f7:	add    BYTE PTR [rip+0x0],al        # 0x4353fd
  4353fd:	add    BYTE PTR [rax],al
  4353ff:	add    dl,dl
  435401:	rex.RB
  435402:	rex.XB add BYTE PTR [r8],al
  435405:	add    BYTE PTR [rax],al
  435407:	add    BYTE PTR [rdx],cl
  435409:	add    BYTE PTR [rax],al
  43540b:	add    BYTE PTR [rax],al
  43540d:	add    BYTE PTR [rax],al
  43540f:	add    al,bl
  435411:	rex.RB
  435412:	rex.XB add BYTE PTR [r8],al
  435415:	add    BYTE PTR [rax],al
  435417:	add    BYTE PTR [rbx],cl
  435419:	add    BYTE PTR [rax],al
  43541b:	add    BYTE PTR [rax],al
  43541d:	add    BYTE PTR [rax],al
  43541f:	add    bh,ah
  435421:	rex.RB
  435422:	rex.XB add BYTE PTR [r8],al
  435425:	add    BYTE PTR [rax],al
  435427:	add    BYTE PTR [rax+rax*1],cl
  43542a:	add    BYTE PTR [rax],al
  43542c:	add    BYTE PTR [rax],al
  43542e:	add    BYTE PTR [rax],al
  435430:	out    dx,al
  435431:	rex.RB
  435432:	rex.XB add BYTE PTR [r8],al
  435435:	add    BYTE PTR [rax],al
  435437:	add    BYTE PTR [rip+0x0],cl        # 0x43543d
  43543d:	add    BYTE PTR [rax],al
  43543f:	add    ch,dh
  435441:	rex.RB
  435442:	rex.XB add BYTE PTR [r8],al
  435445:	add    BYTE PTR [rax],al
  435447:	add    BYTE PTR [rsi],cl
  435449:	add    BYTE PTR [rax],al
  43544b:	add    BYTE PTR [rax],al
  43544d:	add    BYTE PTR [rax],al
  43544f:	add    ah,bh
  435451:	rex.RB
  435452:	rex.XB add BYTE PTR [r8],al
  435455:	add    BYTE PTR [rax],al
  435457:	add    BYTE PTR [rdi],cl
  435459:	add    BYTE PTR [rax],al
  43545b:	add    BYTE PTR [rax],al
  43545d:	add    BYTE PTR [rax],al
  43545f:	add    BYTE PTR [rbx],al
  435461:	rex.RX
  435462:	rex.XB add BYTE PTR [r8],al
  435465:	add    BYTE PTR [rax],al
  435467:	add    BYTE PTR [rax],dl
  435469:	add    BYTE PTR [rax],al
  43546b:	add    BYTE PTR [rax],al
  43546d:	add    BYTE PTR [rax],al
  43546f:	add    BYTE PTR [rdx],cl
  435471:	rex.RX
  435472:	rex.XB add BYTE PTR [r8],al
  435475:	add    BYTE PTR [rax],al
  435477:	add    BYTE PTR [rcx],dl
  435479:	add    BYTE PTR [rax],al
  43547b:	add    BYTE PTR [rax],al
  43547d:	add    BYTE PTR [rax],al
  43547f:	add    BYTE PTR [rcx],dl
  435481:	rex.RX
  435482:	rex.XB add BYTE PTR [r8],al
  435485:	add    BYTE PTR [rax],al
  435487:	add    BYTE PTR [rdx],dl
  435489:	add    BYTE PTR [rax],al
  43548b:	add    BYTE PTR [rax],al
  43548d:	add    BYTE PTR [rax],al
  43548f:	add    BYTE PTR [rax],bl
  435491:	rex.RX
  435492:	rex.XB add BYTE PTR [r8],al
  435495:	add    BYTE PTR [rax],al
  435497:	add    BYTE PTR [rbx],dl
  435499:	add    BYTE PTR [rax],al
  43549b:	add    BYTE PTR [rax],al
  43549d:	add    BYTE PTR [rax],al
  43549f:	add    BYTE PTR [rdi],bl
  4354a1:	rex.RX
  4354a2:	rex.XB add BYTE PTR [r8],al
  4354a5:	add    BYTE PTR [rax],al
  4354a7:	add    BYTE PTR [rax+rax*1],dl
  4354aa:	add    BYTE PTR [rax],al
  4354ac:	add    BYTE PTR [rax],al
  4354ae:	add    BYTE PTR [rax],al
  4354b0:	es rex.RX
  4354b2:	rex.XB add BYTE PTR [r8],al
  4354b5:	add    BYTE PTR [rax],al
  4354b7:	add    BYTE PTR [rip+0x0],dl        # 0x4354bd
  4354bd:	add    BYTE PTR [rax],al
  4354bf:	add    BYTE PTR [rip+0x4346],ch        # 0x43980b
  4354c5:	add    BYTE PTR [rax],al
  4354c7:	add    BYTE PTR [rsi],dl
  4354c9:	add    BYTE PTR [rax],al
  4354cb:	add    BYTE PTR [rax],al
  4354cd:	add    BYTE PTR [rax],al
  4354cf:	add    BYTE PTR [rsi+rax*2],dh
  4354d2:	rex.XB add BYTE PTR [r8],al
  4354d5:	add    BYTE PTR [rax],al
  4354d7:	add    BYTE PTR [rsi+0x0],bl
  4354da:	add    BYTE PTR [rax],al
  4354dc:	add    BYTE PTR [rax],al
  4354de:	add    BYTE PTR [rax],al
  4354e0:	cmp    al,BYTE PTR [rsi+0x43]
  4354e3:	add    BYTE PTR [rax],al
  4354e5:	add    BYTE PTR [rax],al
  4354e7:	add    BYTE PTR [rdi],dl
  4354e9:	add    BYTE PTR [rax],al
  4354eb:	add    BYTE PTR [rax],al
  4354ed:	add    BYTE PTR [rax],al
  4354ef:	add    BYTE PTR [rax+0x46],al
  4354f2:	rex.XB add BYTE PTR [r8],al
	...
  4354fd:	add    BYTE PTR [rax],al
  4354ff:	add    BYTE PTR [rsi+0x46],al
  435502:	rex.XB add BYTE PTR [r8],al
  435505:	add    BYTE PTR [rax],al
  435507:	add    BYTE PTR [rax],bl
  435509:	add    BYTE PTR [rax],al
  43550b:	add    BYTE PTR [rax],al
  43550d:	add    BYTE PTR [rax],al
  43550f:	add    BYTE PTR [rsi+rax*2+0x43],cl
  435513:	add    BYTE PTR [rax],al
  435515:	add    BYTE PTR [rax],al
  435517:	add    BYTE PTR [rcx],bl
  435519:	add    BYTE PTR [rax],al
  43551b:	add    BYTE PTR [rax],al
  43551d:	add    BYTE PTR [rax],al
  43551f:	add    BYTE PTR [rdx+0x46],dl
  435522:	rex.XB add BYTE PTR [r8],al
  435525:	add    BYTE PTR [rax],al
  435527:	add    BYTE PTR [rdx],bl
  435529:	add    BYTE PTR [rax],al
  43552b:	add    BYTE PTR [rax],al
  43552d:	add    BYTE PTR [rax],al
  43552f:	add    BYTE PTR [rax+0x46],bl
  435532:	rex.XB add BYTE PTR [r8],al
  435535:	add    BYTE PTR [rax],al
  435537:	add    BYTE PTR [rbx],bl
  435539:	add    BYTE PTR [rax],al
  43553b:	add    BYTE PTR [rax],al
  43553d:	add    BYTE PTR [rax],al
  43553f:	add    BYTE PTR [rsi+0x46],bl
  435542:	rex.XB add BYTE PTR [r8],al
  435545:	add    BYTE PTR [rax],al
  435547:	add    BYTE PTR [rax+rax*1],bl
  43554a:	add    BYTE PTR [rax],al
  43554c:	add    BYTE PTR [rax],al
  43554e:	add    BYTE PTR [rax],al
  435550:	fs rex.RX
  435552:	rex.XB add BYTE PTR [r8],al
  435555:	add    BYTE PTR [rax],al
  435557:	add    BYTE PTR [rip+0x0],bl        # 0x43555d
  43555d:	add    BYTE PTR [rax],al
  43555f:	add    BYTE PTR [rdx+0x46],ch
  435562:	rex.XB add BYTE PTR [r8],al
  435565:	add    BYTE PTR [rax],al
  435567:	add    BYTE PTR [rsi],bl
  435569:	add    BYTE PTR [rax],al
  43556b:	add    BYTE PTR [rax],al
  43556d:	add    BYTE PTR [rax],al
  43556f:	add    BYTE PTR [rax+0x46],dh
  435572:	rex.XB add BYTE PTR [r8],al
  435575:	add    BYTE PTR [rax],al
  435577:	add    BYTE PTR [rdi],bl
  435579:	add    BYTE PTR [rax],al
  43557b:	add    BYTE PTR [rax],al
  43557d:	add    BYTE PTR [rax],al
  43557f:	add    BYTE PTR [rsi+0x46],dh
  435582:	rex.XB add BYTE PTR [r8],al
  435585:	add    BYTE PTR [rax],al
  435587:	add    BYTE PTR [rsi+0x0],bl
  43558a:	add    BYTE PTR [rax],al
  43558c:	add    BYTE PTR [rax],al
  43558e:	add    BYTE PTR [rax],al
  435590:	jle    0x4355d8
  435592:	rex.XB add BYTE PTR [r8],al
  435595:	add    BYTE PTR [rax],al
  435597:	add    BYTE PTR [rip+0x0],al        # 0x43559d
  43559d:	add    BYTE PTR [rax],al
  43559f:	add    BYTE PTR [rbp+0x4346],al
  4355a5:	add    BYTE PTR [rax],al
  4355a7:	add    BYTE PTR [rcx],ah
  4355a9:	add    BYTE PTR [rax],al
  4355ab:	add    BYTE PTR [rax],al
  4355ad:	add    BYTE PTR [rax],al
  4355af:	add    BYTE PTR [rbp+0x4346],cl
  4355b5:	add    BYTE PTR [rax],al
  4355b7:	add    BYTE PTR [rax],ah
  4355b9:	add    BYTE PTR [rax],al
  4355bb:	add    BYTE PTR [rax],al
  4355bd:	add    BYTE PTR [rax],al
  4355bf:	add    BYTE PTR [rcx+0x4346],ah
  4355c5:	add    BYTE PTR [rax],al
  4355c7:	add    BYTE PTR [rdx],ah
  4355c9:	add    BYTE PTR [rax],al
  4355cb:	add    BYTE PTR [rax],al
  4355cd:	add    BYTE PTR [rax],al
  4355cf:	add    BYTE PTR [rcx+0x4346],ch
  4355d5:	add    BYTE PTR [rax],al
  4355d7:	add    BYTE PTR [rdx],cl
  4355d9:	add    BYTE PTR [rax],al
  4355db:	add    BYTE PTR [rax],al
  4355dd:	add    BYTE PTR [rax],al
  4355df:	add    BYTE PTR [rdx+0x4346],dh
  4355e5:	add    BYTE PTR [rax],al
  4355e7:	add    BYTE PTR [rax+0x0],al
  4355ea:	add    BYTE PTR [rax],al
  4355ec:	add    BYTE PTR [rax],al
  4355ee:	add    BYTE PTR [rax],al
  4355f0:	mov    BYTE PTR [rsi+0x43],0x0
  4355f4:	add    BYTE PTR [rax],al
  4355f6:	add    BYTE PTR [rax],al
  4355f8:	push   rbx
  4355f9:	add    BYTE PTR [rax],al
  4355fb:	add    BYTE PTR [rax],al
  4355fd:	add    BYTE PTR [rax],al
  4355ff:	add    cl,dl
  435601:	rex.RX
  435602:	rex.XB add BYTE PTR [r8],al
  435605:	add    BYTE PTR [rax],al
  435607:	add    BYTE PTR [rdx],bl
  435609:	add    BYTE PTR [rax],al
  43560b:	add    BYTE PTR [rax],al
  43560d:	add    BYTE PTR [rax],al
  43560f:	add    dl,bl
  435611:	rex.RX
  435612:	rex.XB add BYTE PTR [r8],al
  435615:	add    BYTE PTR [rax],al
  435617:	add    BYTE PTR [rdx],bh
  435619:	add    BYTE PTR [rax],al
  43561b:	add    BYTE PTR [rax],al
  43561d:	add    BYTE PTR [rax],al
  43561f:	add    ah,ch
  435621:	rex.RX
  435622:	rex.XB add BYTE PTR [r8],al
  435625:	add    BYTE PTR [rax],al
  435627:	add    BYTE PTR [rax+rax*1],bh
  43562a:	add    BYTE PTR [rax],al
  43562c:	add    BYTE PTR [rax],al
  43562e:	add    BYTE PTR [rax],al
  435630:	add    DWORD PTR [rdi+0x43],eax
  435633:	add    BYTE PTR [rax],al
  435635:	add    BYTE PTR [rax],al
  435637:	add    BYTE PTR [rdi],ah
  435639:	add    BYTE PTR [rax],al
  43563b:	add    BYTE PTR [rax],al
  43563d:	add    BYTE PTR [rax],al
  43563f:	add    BYTE PTR [rip+0x4347],cl        # 0x43998c
  435645:	add    BYTE PTR [rax],al
  435647:	add    BYTE PTR [rcx],ch
  435649:	add    BYTE PTR [rax],al
  43564b:	add    BYTE PTR [rax],al
  43564d:	add    BYTE PTR [rax],al
  43564f:	add    BYTE PTR [rcx],bl
  435651:	rex.RXB
  435652:	rex.XB add BYTE PTR [r8],al
  435655:	add    BYTE PTR [rax],al
  435657:	add    BYTE PTR [rbx],ch
  435659:	add    BYTE PTR [rax],al
  43565b:	add    BYTE PTR [rax],al
  43565d:	add    BYTE PTR [rax],al
  43565f:	add    BYTE PTR [rsi],ah
  435661:	rex.RXB
  435662:	rex.XB add BYTE PTR [r8],al
  435665:	add    BYTE PTR [rax],al
  435667:	add    BYTE PTR [rax+rax*1],ch
  43566a:	add    BYTE PTR [rax],al
  43566c:	add    BYTE PTR [rax],al
  43566e:	add    BYTE PTR [rax],al
  435670:	xor    al,BYTE PTR [rdi+0x43]
  435673:	add    BYTE PTR [rax],al
  435675:	add    BYTE PTR [rax],al
  435677:	add    BYTE PTR [rcx],cl
  435679:	add    BYTE PTR [rax],al
  43567b:	add    BYTE PTR [rax],al
  43567d:	add    BYTE PTR [rax],al
  43567f:	add    BYTE PTR [rax+0x47],al
  435682:	rex.XB add BYTE PTR [r8],al
  435685:	add    BYTE PTR [rax],al
  435687:	add    BYTE PTR [rax],cl
  435689:	add    BYTE PTR [rax],al
  43568b:	add    BYTE PTR [rax],al
  43568d:	add    BYTE PTR [rax],al
  43568f:	add    BYTE PTR [rax+0x47],dl
  435692:	rex.XB add BYTE PTR [r8],al
  435695:	add    BYTE PTR [rax],al
  435697:	add    BYTE PTR [rsi],bh
  435699:	add    BYTE PTR [rax],al
  43569b:	add    BYTE PTR [rax],al
  43569d:	add    BYTE PTR [rax],al
  43569f:	add    BYTE PTR [rax+0x47],ah
  4356a2:	rex.XB add BYTE PTR [r8],al
	...
  4356ad:	add    BYTE PTR [rax],al
  4356af:	add    BYTE PTR [rdi+rax*2+0x43],ch
  4356b3:	add    BYTE PTR [rax],al
  4356b5:	add    BYTE PTR [rax],al
  4356b7:	add    BYTE PTR [rdx],dh
  4356b9:	add    BYTE PTR [rax],al
  4356bb:	add    BYTE PTR [rax],al
  4356bd:	add    BYTE PTR [rax],al
  4356bf:	add    BYTE PTR [rax+0x47],bh
  4356c2:	rex.XB add BYTE PTR [r8],al
  4356c5:	add    BYTE PTR [rax],al
  4356c7:	add    BYTE PTR [rbx],dh
  4356c9:	add    BYTE PTR [rax],al
  4356cb:	add    BYTE PTR [rax],al
  4356cd:	add    BYTE PTR [rax],al
  4356cf:	add    BYTE PTR [rdi+rax*2+0x43],al
  4356d6:	add    BYTE PTR [rax],al
  4356d8:	xor    al,0x0
  4356da:	add    BYTE PTR [rax],al
  4356dc:	add    BYTE PTR [rax],al
  4356de:	add    BYTE PTR [rax],al
  4356e0:	nop
  4356e1:	rex.RXB
  4356e2:	rex.XB add BYTE PTR [r8],al
  4356e5:	add    BYTE PTR [rax],al
  4356e7:	add    BYTE PTR [rcx],bh
  4356e9:	add    BYTE PTR [rax],al
  4356eb:	add    BYTE PTR [rax],al
  4356ed:	add    BYTE PTR [rax],al
  4356ef:	add    BYTE PTR [rdi+rax*2+0x43],bl
  4356f6:	add    BYTE PTR [rax],al
  4356f8:	sub    eax,0x0
  4356fd:	add    BYTE PTR [rax],al
  4356ff:	add    BYTE PTR [rax+0x4347],ch
  435705:	add    BYTE PTR [rax],al
  435707:	add    BYTE PTR [rsi],dh
  435709:	add    BYTE PTR [rax],al
  43570b:	add    BYTE PTR [rax],al
  43570d:	add    BYTE PTR [rax],al
  43570f:	add    BYTE PTR [rcx+0x4347],bh
  435715:	add    BYTE PTR [rax],al
  435717:	add    BYTE PTR [rip+0x0],dh        # 0x43571d
  43571d:	add    BYTE PTR [rax],al
  43571f:	add    ah,cl
  435721:	rex.RXB
  435722:	rex.XB add BYTE PTR [r8],al
  435725:	add    BYTE PTR [rax],al
  435727:	add    BYTE PTR [rdi],dh
  435729:	add    BYTE PTR [rax],al
  43572b:	add    BYTE PTR [rax],al
  43572d:	add    BYTE PTR [rax],al
  43572f:	add    ah,bl
  435731:	rex.RXB
  435732:	rex.XB add BYTE PTR [r8],al
  435735:	add    BYTE PTR [rax],al
  435737:	add    BYTE PTR [rax],bh
  435739:	add    BYTE PTR [rax],al
  43573b:	add    BYTE PTR [rax],al
  43573d:	add    BYTE PTR [rax],al
  43573f:	add    ch,ch
  435741:	rex.RXB
  435742:	rex.XB add BYTE PTR [r8],al
  435745:	add    BYTE PTR [rax],al
  435747:	add    BYTE PTR [rcx+0x0],al
  43574a:	add    BYTE PTR [rax],al
  43574c:	add    BYTE PTR [rax],al
  43574e:	add    BYTE PTR [rax],al
  435750:	cmc    
  435751:	rex.RXB
  435752:	rex.XB add BYTE PTR [r8],al
  435755:	add    BYTE PTR [rax],al
  435757:	add    BYTE PTR [rbx],bh
  435759:	add    BYTE PTR [rax],al
  43575b:	add    BYTE PTR [rax],al
  43575d:	add    BYTE PTR [rax],al
  43575f:	add    BYTE PTR [rbx],al
  435761:	rex.W
  435762:	rex.XB add BYTE PTR [r8],al
  435765:	add    BYTE PTR [rax],al
  435767:	add    BYTE PTR [rbp+0x0],al
  43576a:	add    BYTE PTR [rax],al
  43576c:	add    BYTE PTR [rax],al
  43576e:	add    BYTE PTR [rax],al
  435770:	cmovs  eax,DWORD PTR [rbx+0x0]
  435774:	add    BYTE PTR [rax],al
  435776:	add    BYTE PTR [rax],al
  435778:	sbb    BYTE PTR [rax],al
  43577a:	add    BYTE PTR [rax],al
  43577c:	add    BYTE PTR [rax],al
  43577e:	add    BYTE PTR [rax],al
  435780:	and    ecx,DWORD PTR [rax+0x43]
  435783:	add    BYTE PTR [rax],al
  435785:	add    BYTE PTR [rax],al
  435787:	add    BYTE PTR [rcx],bl
  435789:	add    BYTE PTR [rax],al
  43578b:	add    BYTE PTR [rax],al
  43578d:	add    BYTE PTR [rax],al
  43578f:	add    BYTE PTR [rsi],dh
  435791:	rex.W
  435792:	rex.XB add BYTE PTR [r8],al
  435795:	add    BYTE PTR [rax],al
  435797:	add    BYTE PTR [rax+rax*1+0x0],dl
  43579b:	add    BYTE PTR [rax],al
  43579d:	add    BYTE PTR [rax],al
  43579f:	add    BYTE PTR [rcx+0x48],al
  4357a2:	rex.XB add BYTE PTR [r8],al
  4357a5:	add    BYTE PTR [rax],al
  4357a7:	add    BYTE PTR [rcx+0x0],bl
  4357aa:	add    BYTE PTR [rax],al
  4357ac:	add    BYTE PTR [rax],al
  4357ae:	add    BYTE PTR [rax],al
  4357b0:	rex.W
  4357b1:	rex.W
  4357b2:	rex.XB add BYTE PTR [r8],al
  4357b5:	add    BYTE PTR [rax],al
  4357b7:	add    BYTE PTR [rsi+0x0],dl
  4357ba:	add    BYTE PTR [rax],al
  4357bc:	add    BYTE PTR [rax],al
  4357be:	add    BYTE PTR [rax],al
  4357c0:	push   rdx
  4357c1:	rex.W
  4357c2:	rex.XB add BYTE PTR [r8],al
  4357c5:	add    BYTE PTR [rax],al
  4357c7:	add    BYTE PTR [rbx],al
  4357c9:	add    BYTE PTR [rax],al
  4357cb:	add    BYTE PTR [rax],al
  4357cd:	add    BYTE PTR [rax],al
  4357cf:	add    BYTE PTR [rsi+0x48],bl
  4357d2:	rex.XB add BYTE PTR [r8],al
  4357d5:	add    BYTE PTR [rax],al
  4357d7:	add    BYTE PTR [rbp+0x0],ah
  4357da:	add    BYTE PTR [rax],al
  4357dc:	add    BYTE PTR [rax],al
  4357de:	add    BYTE PTR [rax],al
  4357e0:	outs   dx,BYTE PTR ds:[rsi]
  4357e1:	rex.W
  4357e2:	rex.XB add BYTE PTR [r8],al
  4357e5:	add    BYTE PTR [rax],al
  4357e7:	add    BYTE PTR [rsi+0x0],ah
  4357ea:	add    BYTE PTR [rax],al
  4357ec:	add    BYTE PTR [rax],al
  4357ee:	add    BYTE PTR [rax],al
  4357f0:	ja     0x43583a
  4357f2:	rex.XB add BYTE PTR [r8],al
  4357f5:	add    BYTE PTR [rax],al
  4357f7:	add    BYTE PTR [rip+0x0],dh        # 0x4357fd
  4357fd:	add    BYTE PTR [rax],al
  4357ff:	add    BYTE PTR [rax+0x4348],al
  435805:	add    BYTE PTR [rax],al
  435807:	add    BYTE PTR [rsi],dh
  435809:	add    BYTE PTR [rax],al
  43580b:	add    BYTE PTR [rax],al
  43580d:	add    BYTE PTR [rax],al
  43580f:	add    BYTE PTR [rcx+0x4348],cl
  435815:	add    BYTE PTR [rax],al
  435817:	add    BYTE PTR [rdi],dh
  435819:	add    BYTE PTR [rax],al
  43581b:	add    BYTE PTR [rax],al
  43581d:	add    BYTE PTR [rax],al
  43581f:	add    BYTE PTR [rdx+0x4348],dl
  435825:	add    BYTE PTR [rax],al
  435827:	add    BYTE PTR [rdi],dh
  435829:	add    BYTE PTR [rax],al
  43582b:	add    BYTE PTR [rax],al
  43582d:	add    BYTE PTR [rax],al
  43582f:	add    BYTE PTR [rbx+0x4348],bl
  435835:	add    BYTE PTR [rax],al
  435837:	add    BYTE PTR [rdx],cl
  435839:	add    BYTE PTR [rax],al
  43583b:	add    BYTE PTR [rax],al
  43583d:	add    BYTE PTR [rax],al
  43583f:	add    BYTE PTR [rdx+0x4348],ah
  435845:	add    BYTE PTR [rax],al
  435847:	add    BYTE PTR [rax],ah
  435849:	add    BYTE PTR [rax],al
  43584b:	add    BYTE PTR [rax],al
  43584d:	add    BYTE PTR [rax],al
  43584f:	add    BYTE PTR [rcx+0x4348],ch
  435855:	add    BYTE PTR [rax],al
  435857:	add    BYTE PTR [rcx],ah
  435859:	add    BYTE PTR [rax],al
  43585b:	add    BYTE PTR [rax],al
  43585d:	add    BYTE PTR [rax],al
  43585f:	add    BYTE PTR [rax+0x4348],dh
  435865:	add    BYTE PTR [rax],al
  435867:	add    BYTE PTR [rdx],ah
  435869:	add    BYTE PTR [rax],al
  43586b:	add    BYTE PTR [rax],al
  43586d:	add    BYTE PTR [rax],al
  43586f:	add    BYTE PTR [rdi+0x4348],dh
  435875:	add    BYTE PTR [rax],al
  435877:	add    BYTE PTR [rdx],cl
  435879:	add    BYTE PTR [rax],al
  43587b:	add    BYTE PTR [rax],al
  43587d:	add    BYTE PTR [rax],al
  43587f:	add    BYTE PTR [rbp+0x4348],bh
  435885:	add    BYTE PTR [rax],al
  435887:	add    BYTE PTR [rax],ah
  435889:	add    BYTE PTR [rax],al
  43588b:	add    BYTE PTR [rax],al
  43588d:	add    BYTE PTR [rax],al
  43588f:	add    bl,al
  435891:	rex.W
  435892:	rex.XB add BYTE PTR [r8],al
  435895:	add    BYTE PTR [rax],al
  435897:	add    BYTE PTR [rcx],ah
  435899:	add    BYTE PTR [rax],al
  43589b:	add    BYTE PTR [rax],al
  43589d:	add    BYTE PTR [rax],al
  43589f:	add    cl,cl
  4358a1:	rex.W
  4358a2:	rex.XB add BYTE PTR [r8],al
  4358a5:	add    BYTE PTR [rax],al
  4358a7:	add    BYTE PTR [rdx],ah
  4358a9:	add    BYTE PTR [rax],al
  4358ab:	add    BYTE PTR [rax],al
  4358ad:	add    BYTE PTR [rax],al
  4358af:	add    al,dl
  4358b1:	rex.W
  4358b2:	rex.XB add BYTE PTR [r8],al
  4358b5:	add    BYTE PTR [rax],al
  4358b7:	add    BYTE PTR [rax],ah
  4358b9:	add    BYTE PTR [rax],al
  4358bb:	add    BYTE PTR [rax],al
  4358bd:	add    BYTE PTR [rax],al
  4358bf:	add    dh,bh
  4358c1:	rex.W
  4358c2:	rex.XB add BYTE PTR [r8],al
  4358c5:	add    BYTE PTR [rax],al
  4358c7:	add    BYTE PTR [rbx],ah
  4358c9:	add    BYTE PTR [rax],al
  4358cb:	add    BYTE PTR [rax],al
  4358cd:	add    BYTE PTR [rax],al
  4358cf:	add    BYTE PTR [rsi],al
  4358d1:	rex.WB
  4358d2:	rex.XB add BYTE PTR [r8],al
  4358d5:	add    BYTE PTR [rax],al
  4358d7:	add    BYTE PTR [rdx],cl
  4358d9:	add    BYTE PTR [rax],al
  4358db:	add    BYTE PTR [rax],al
  4358dd:	add    BYTE PTR [rax],al
  4358df:	add    BYTE PTR [rip+0x4349],cl        # 0x439c2e
  4358e5:	add    BYTE PTR [rax],al
  4358e7:	add    BYTE PTR [rip+0x0],bl        # 0x4358ed
  4358ed:	add    BYTE PTR [rax],al
  4358ef:	add    BYTE PTR [rcx],dl
  4358f1:	rex.WB
  4358f2:	rex.XB add BYTE PTR [r8],al
  4358f5:	add    BYTE PTR [rax],al
  4358f7:	add    BYTE PTR [rcx],cl
  4358f9:	add    BYTE PTR [rax],al
  4358fb:	add    BYTE PTR [rax],al
  4358fd:	add    BYTE PTR [rax],al
  4358ff:	add    BYTE PTR [rcx+rcx*2],bl
  435902:	rex.XB add BYTE PTR [r8],al
  435905:	add    BYTE PTR [rax],al
  435907:	add    BYTE PTR [rax],cl
  435909:	add    BYTE PTR [rax],al
  43590b:	add    BYTE PTR [rax],al
  43590d:	add    BYTE PTR [rax],al
  43590f:	add    BYTE PTR [rdi],ah
  435911:	rex.WB
  435912:	rex.XB add BYTE PTR [r8],al
  435915:	add    BYTE PTR [rax],al
  435917:	add    BYTE PTR [rax+rax*1],ah
  43591a:	add    BYTE PTR [rax],al
  43591c:	add    BYTE PTR [rax],al
  43591e:	add    BYTE PTR [rax],al
  435920:	cmp    BYTE PTR [rcx+0x43],cl
  435923:	add    BYTE PTR [rax],al
  435925:	add    BYTE PTR [rax],al
  435927:	add    BYTE PTR [rip+0x0],ah        # 0x43592d
  43592d:	add    BYTE PTR [rax],al
  43592f:	add    BYTE PTR [rcx+rcx*2+0x43],al
  435933:	add    BYTE PTR [rax],al
  435935:	add    BYTE PTR [rax],al
  435937:	add    BYTE PTR [rdi],dh
  435939:	add    BYTE PTR [rax],al
  43593b:	add    BYTE PTR [rax],al
  43593d:	add    BYTE PTR [rax],al
  43593f:	add    BYTE PTR [rdx+0x49],cl
  435942:	rex.XB add BYTE PTR [r8],al
  435945:	add    BYTE PTR [rax],al
  435947:	add    BYTE PTR [rdi],dh
  435949:	add    BYTE PTR [rax],al
  43594b:	add    BYTE PTR [rax],al
  43594d:	add    BYTE PTR [rax],al
  43594f:	add    BYTE PTR [rcx+0x49],dl
  435952:	rex.XB add BYTE PTR [r8],al
  435955:	add    BYTE PTR [rax],al
  435957:	add    BYTE PTR [rax],bh
  435959:	add    BYTE PTR [rax],al
  43595b:	add    BYTE PTR [rax],al
  43595d:	add    BYTE PTR [rax],al
  43595f:	add    BYTE PTR [rax+0x49],bl
  435962:	rex.XB add BYTE PTR [r8],al
  435965:	add    BYTE PTR [rax],al
  435967:	add    BYTE PTR [rbx+0x0],dl
  43596a:	add    BYTE PTR [rax],al
  43596c:	add    BYTE PTR [rax],al
  43596e:	add    BYTE PTR [rax],al
  435970:	(bad)  
  435971:	rex.WB
  435972:	rex.XB add BYTE PTR [r8],al
  435975:	add    BYTE PTR [rax],al
  435977:	add    BYTE PTR [rsi],ah
  435979:	add    BYTE PTR [rax],al
  43597b:	add    BYTE PTR [rax],al
  43597d:	add    BYTE PTR [rax],al
  43597f:	add    BYTE PTR [rbp+0x49],ah
  435982:	rex.XB add BYTE PTR [r8],al
  435985:	add    BYTE PTR [rax],al
  435987:	add    BYTE PTR [rsi],ah
  435989:	add    BYTE PTR [rax],al
  43598b:	add    BYTE PTR [rax],al
  43598d:	add    BYTE PTR [rax],al
  43598f:	add    BYTE PTR [rax+0x49],dh
  435992:	rex.XB add BYTE PTR [r8],al
  435995:	add    BYTE PTR [rax],al
  435997:	add    BYTE PTR [rax+rax*1],cl
  43599a:	add    BYTE PTR [rax],al
  43599c:	add    BYTE PTR [rax],al
  43599e:	add    BYTE PTR [rax],al
  4359a0:	jnp    0x4359eb
  4359a2:	rex.XB add BYTE PTR [r8],al
  4359a5:	add    BYTE PTR [rax],al
  4359a7:	add    BYTE PTR [rsi+0x0],bl
  4359aa:	add    BYTE PTR [rax],al
  4359ac:	add    BYTE PTR [rax],al
  4359ae:	add    BYTE PTR [rax],al
  4359b0:	(bad)  
  4359b1:	rex.WB
  4359b2:	rex.XB add BYTE PTR [r8],al
  4359b5:	add    BYTE PTR [rax],al
  4359b7:	add    BYTE PTR [rdi],dl
  4359b9:	add    BYTE PTR [rax],al
  4359bb:	add    BYTE PTR [rax],al
  4359bd:	add    BYTE PTR [rax],al
  4359bf:	add    BYTE PTR [rcx+0x4349],cl
	...
  4359cd:	add    BYTE PTR [rax],al
  4359cf:	add    BYTE PTR [rax+0x4349],dl
  4359d5:	add    BYTE PTR [rax],al
  4359d7:	add    BYTE PTR [rax],bl
  4359d9:	add    BYTE PTR [rax],al
  4359db:	add    BYTE PTR [rax],al
  4359dd:	add    BYTE PTR [rax],al
  4359df:	add    BYTE PTR [rdi+0x4349],dl
  4359e5:	add    BYTE PTR [rax],al
  4359e7:	add    BYTE PTR [rcx],bl
  4359e9:	add    BYTE PTR [rax],al
  4359eb:	add    BYTE PTR [rax],al
  4359ed:	add    BYTE PTR [rax],al
  4359ef:	add    BYTE PTR [rsi+0x4349],bl
  4359f5:	add    BYTE PTR [rax],al
  4359f7:	add    BYTE PTR [rdx],bl
  4359f9:	add    BYTE PTR [rax],al
  4359fb:	add    BYTE PTR [rax],al
  4359fd:	add    BYTE PTR [rax],al
  4359ff:	add    BYTE PTR [rbp+0x4349],ah
  435a05:	add    BYTE PTR [rax],al
  435a07:	add    BYTE PTR [rsi+0x0],dl
  435a0a:	add    BYTE PTR [rax],al
  435a0c:	add    BYTE PTR [rax],al
  435a0e:	add    BYTE PTR [rax],al
  435a10:	mov    ch,0x49
  435a12:	rex.XB add BYTE PTR [r8],al
  435a15:	add    BYTE PTR [rax],al
  435a17:	add    BYTE PTR [rcx+0x0],bl
  435a1a:	add    BYTE PTR [rax],al
  435a1c:	add    BYTE PTR [rax],al
  435a1e:	add    BYTE PTR [rax],al
  435a20:	(bad)
  435a23:	add    BYTE PTR [rax],al
  435a25:	add    BYTE PTR [rax],al
  435a27:	add    BYTE PTR [rdi],ah
  435a29:	add    BYTE PTR [rax],al
  435a2b:	add    BYTE PTR [rax],al
  435a2d:	add    BYTE PTR [rax],al
  435a2f:	add    cl,dl
  435a31:	rex.WB
  435a32:	rex.XB add BYTE PTR [r8],al
  435a35:	add    BYTE PTR [rax],al
  435a37:	add    BYTE PTR [rax],ch
  435a39:	add    BYTE PTR [rax],al
  435a3b:	add    BYTE PTR [rax],al
  435a3d:	add    BYTE PTR [rax],al
  435a3f:	add    cl,ah
  435a41:	rex.WB
  435a42:	rex.XB add BYTE PTR [r8],al
  435a45:	add    BYTE PTR [rax],al
  435a47:	add    BYTE PTR [rcx],ch
  435a49:	add    BYTE PTR [rax],al
  435a4b:	add    BYTE PTR [rax],al
  435a4d:	add    BYTE PTR [rax],al
  435a4f:	add    ch,ch
  435a51:	rex.WB
  435a52:	rex.XB add BYTE PTR [r8],al
  435a55:	add    BYTE PTR [rax],al
  435a57:	add    BYTE PTR [rdx],ch
  435a59:	add    BYTE PTR [rax],al
  435a5b:	add    BYTE PTR [rax],al
  435a5d:	add    BYTE PTR [rax],al
  435a5f:	add    bl,bh
  435a61:	rex.WB
  435a62:	rex.XB add BYTE PTR [r8],al
  435a65:	add    BYTE PTR [rax],al
  435a67:	add    BYTE PTR [rbx],ch
  435a69:	add    BYTE PTR [rax],al
  435a6b:	add    BYTE PTR [rax],al
  435a6d:	add    BYTE PTR [rax],al
  435a6f:	add    BYTE PTR [rcx],cl
  435a71:	rex.WX
  435a72:	rex.XB add BYTE PTR [r8],al
  435a75:	add    BYTE PTR [rax],al
  435a77:	add    BYTE PTR [rax+rax*1],ch
  435a7a:	add    BYTE PTR [rax],al
  435a7c:	add    BYTE PTR [rax],al
  435a7e:	add    BYTE PTR [rax],al
  435a80:	push   rdx
  435a81:	cmp    eax,0x43
	...
  435a8e:	add    BYTE PTR [rax],al
  435a90:	adc    eax,0x434a
  435a95:	add    BYTE PTR [rax],al
  435a97:	add    BYTE PTR [rip+0x0],ch        # 0x435a9d
  435a9d:	add    BYTE PTR [rax],al
  435a9f:	add    BYTE PTR [rcx],ah
  435aa1:	rex.WX
  435aa2:	rex.XB add BYTE PTR [r8],al
  435aa5:	add    BYTE PTR [rax],al
  435aa7:	add    BYTE PTR [rsi],ch
  435aa9:	add    BYTE PTR [rax],al
  435aab:	add    BYTE PTR [rax],al
  435aad:	add    BYTE PTR [rax],al
  435aaf:	add    BYTE PTR [rip+0x434a],ch        # 0x439dff
  435ab5:	add    BYTE PTR [rax],al
  435ab7:	add    BYTE PTR [rdi],ch
  435ab9:	add    BYTE PTR [rax],al
  435abb:	add    BYTE PTR [rax],al
  435abd:	add    BYTE PTR [rax],al
  435abf:	add    BYTE PTR [rcx],bh
  435ac1:	rex.WX
  435ac2:	rex.XB add BYTE PTR [r8],al
  435ac5:	add    BYTE PTR [rax],al
  435ac7:	add    BYTE PTR [rax],dh
  435ac9:	add    BYTE PTR [rax],al
  435acb:	add    BYTE PTR [rax],al
  435acd:	add    BYTE PTR [rax],al
  435acf:	add    BYTE PTR [rbp+0x4a],al
  435ad2:	rex.XB add BYTE PTR [r8],al
  435ad5:	add    BYTE PTR [rax],al
  435ad7:	add    BYTE PTR [rcx],dh
  435ad9:	add    BYTE PTR [rax],al
  435adb:	add    BYTE PTR [rax],al
  435add:	add    BYTE PTR [rax],al
  435adf:	add    BYTE PTR [rcx+0x4a],dl
  435ae2:	rex.XB add BYTE PTR [r8],al
  435ae5:	add    BYTE PTR [rax],al
  435ae7:	add    BYTE PTR [rdx],dh
  435ae9:	add    BYTE PTR [rax],al
  435aeb:	add    BYTE PTR [rax],al
  435aed:	add    BYTE PTR [rax],al
  435aef:	add    BYTE PTR [rdx+rcx*2+0x43],bl
  435af3:	add    BYTE PTR [rax],al
  435af5:	add    BYTE PTR [rax],al
  435af7:	add    BYTE PTR [rbx],dh
  435af9:	add    BYTE PTR [rax],al
  435afb:	add    BYTE PTR [rax],al
  435afd:	add    BYTE PTR [rax],al
  435aff:	add    BYTE PTR [rdi+0x4a],ah
  435b02:	rex.XB add BYTE PTR [r8],al
  435b05:	add    BYTE PTR [rax],al
  435b07:	add    BYTE PTR [rax+rax*1],dh
  435b0a:	add    BYTE PTR [rax],al
  435b0c:	add    BYTE PTR [rax],al
  435b0e:	add    BYTE PTR [rax],al
  435b10:	jb     0x435b5c
  435b12:	rex.XB add BYTE PTR [r8],al
  435b15:	add    BYTE PTR [rax],al
  435b17:	add    BYTE PTR [rip+0x0],dh        # 0x435b1d
  435b1d:	add    BYTE PTR [rax],al
  435b1f:	add    BYTE PTR [rbp+0x4a],bh
  435b22:	rex.XB add BYTE PTR [r8],al
  435b25:	add    BYTE PTR [rax],al
  435b27:	add    BYTE PTR [rsi],dh
  435b29:	add    BYTE PTR [rax],al
  435b2b:	add    BYTE PTR [rax],al
  435b2d:	add    BYTE PTR [rax],al
  435b2f:	add    BYTE PTR [rax+0x434a],cl
  435b35:	add    BYTE PTR [rax],al
  435b37:	add    BYTE PTR [rdi],dh
  435b39:	add    BYTE PTR [rax],al
  435b3b:	add    BYTE PTR [rax],al
  435b3d:	add    BYTE PTR [rax],al
  435b3f:	add    BYTE PTR [rbx+0x434a],dl
  435b45:	add    BYTE PTR [rax],al
  435b47:	add    BYTE PTR [rax],bh
  435b49:	add    BYTE PTR [rax],al
  435b4b:	add    BYTE PTR [rax],al
  435b4d:	add    BYTE PTR [rax],al
  435b4f:	add    BYTE PTR [rsi+0x434a],bl
  435b55:	add    BYTE PTR [rax],al
  435b57:	add    BYTE PTR [rcx],bh
  435b59:	add    BYTE PTR [rax],al
  435b5b:	add    BYTE PTR [rax],al
  435b5d:	add    BYTE PTR [rax],al
  435b5f:	add    BYTE PTR [rcx+0x434a],ch
  435b65:	add    BYTE PTR [rax],al
  435b67:	add    BYTE PTR [rdi],ch
  435b69:	add    BYTE PTR [rax],al
  435b6b:	add    BYTE PTR [rax],al
  435b6d:	add    BYTE PTR [rax],al
  435b6f:	add    BYTE PTR [rdx+rcx*2+0x43],dh
	...
  435b7e:	add    BYTE PTR [rax],al
  435b80:	mov    edi,0x434a
  435b85:	add    BYTE PTR [rax],al
  435b87:	add    BYTE PTR [rdx],dh
  435b89:	add    BYTE PTR [rax],al
  435b8b:	add    BYTE PTR [rax],al
  435b8d:	add    BYTE PTR [rax],al
  435b8f:	add    dl,cl
  435b91:	rex.WX
  435b92:	rex.XB add BYTE PTR [r8],al
  435b95:	add    BYTE PTR [rax],al
  435b97:	add    BYTE PTR [rbx],dh
  435b99:	add    BYTE PTR [rax],al
  435b9b:	add    BYTE PTR [rax],al
  435b9d:	add    BYTE PTR [rax],al
  435b9f:	add    ch,dl
  435ba1:	rex.WX
  435ba2:	rex.XB add BYTE PTR [r8],al
  435ba5:	add    BYTE PTR [rax],al
  435ba7:	add    BYTE PTR [rax+rax*1],dh
  435baa:	add    BYTE PTR [rax],al
  435bac:	add    BYTE PTR [rax],al
  435bae:	add    BYTE PTR [rax],al
  435bb0:	loopne 0x435bfc
  435bb2:	rex.XB add BYTE PTR [r8],al
  435bb5:	add    BYTE PTR [rax],al
  435bb7:	add    BYTE PTR [rdi],dh
  435bb9:	add    BYTE PTR [rax],al
  435bbb:	add    BYTE PTR [rax],al
  435bbd:	add    BYTE PTR [rax],al
  435bbf:	add    bl,ch
  435bc1:	rex.WX
  435bc2:	rex.XB add BYTE PTR [r8],al
  435bc5:	add    BYTE PTR [rax],al
  435bc7:	add    BYTE PTR [rsi],dh
  435bc9:	add    BYTE PTR [rax],al
  435bcb:	add    BYTE PTR [rax],al
  435bcd:	add    BYTE PTR [rax],al
  435bcf:	add    dh,dh
  435bd1:	rex.WX
  435bd2:	rex.XB add BYTE PTR [r8],al
  435bd5:	add    BYTE PTR [rax],al
  435bd7:	add    BYTE PTR [rax],bh
  435bd9:	add    BYTE PTR [rax],al
  435bdb:	add    BYTE PTR [rax],al
  435bdd:	add    BYTE PTR [rax],al
  435bdf:	add    BYTE PTR [rcx],al
  435be1:	rex.WXB
  435be2:	rex.XB add BYTE PTR [r8],al
  435be5:	add    BYTE PTR [rax],al
  435be7:	add    BYTE PTR [rdx],bh
  435be9:	add    BYTE PTR [rax],al
  435beb:	add    BYTE PTR [rax],al
  435bed:	add    BYTE PTR [rax],al
  435bef:	add    BYTE PTR [rbx],cl
  435bf1:	rex.WXB
  435bf2:	rex.XB add BYTE PTR [r8],al
  435bf5:	add    BYTE PTR [rax],al
  435bf7:	add    BYTE PTR [rip+0x0],dh        # 0x435bfd
  435bfd:	add    BYTE PTR [rax],al
  435bff:	add    BYTE PTR [rsi],dl
  435c01:	rex.WXB
  435c02:	rex.XB add BYTE PTR [r8],al
  435c05:	add    BYTE PTR [rax],al
  435c07:	add    BYTE PTR [rcx],bh
  435c09:	add    BYTE PTR [rax],al
  435c0b:	add    BYTE PTR [rax],al
  435c0d:	add    BYTE PTR [rax],al
  435c0f:	add    BYTE PTR [rcx],ah
  435c11:	rex.WXB
  435c12:	rex.XB add BYTE PTR [r8],al
  435c15:	add    BYTE PTR [rax],al
  435c17:	add    BYTE PTR [rbx],bh
  435c19:	add    BYTE PTR [rax],al
  435c1b:	add    BYTE PTR [rax],al
  435c1d:	add    BYTE PTR [rax],al
  435c1f:	add    BYTE PTR [rbx+rcx*2],ch
  435c22:	rex.XB add BYTE PTR [r8],al
  435c25:	add    BYTE PTR [rax],al
  435c27:	add    BYTE PTR [rip+0x0],ch        # 0x435c2d
  435c2d:	add    BYTE PTR [rax],al
  435c2f:	add    BYTE PTR [rdi],dh
  435c31:	rex.WXB
  435c32:	rex.XB add BYTE PTR [r8],al
  435c35:	add    BYTE PTR [rax],al
  435c37:	add    BYTE PTR [rax+rax*1],bh
  435c3a:	add    BYTE PTR [rax],al
  435c3c:	add    BYTE PTR [rax],al
  435c3e:	add    BYTE PTR [rax],al
  435c40:	rex.X
  435c41:	rex.WXB
  435c42:	rex.XB add BYTE PTR [r8],al
  435c45:	add    BYTE PTR [rax],al
  435c47:	add    BYTE PTR [rbx],cl
  435c49:	add    BYTE PTR [rax],al
  435c4b:	add    BYTE PTR [rax],al
  435c4d:	add    BYTE PTR [rax],al
  435c4f:	add    BYTE PTR [rbp+0x4b],cl
  435c52:	rex.XB add BYTE PTR [r8],al
  435c55:	add    BYTE PTR [rax],al
  435c57:	add    BYTE PTR [rip+0x0],bh        # 0x435c5d
  435c5d:	add    BYTE PTR [rax],al
  435c5f:	add    BYTE PTR [rax+0x4b],bl
  435c62:	rex.XB add BYTE PTR [r8],al
  435c65:	add    BYTE PTR [rax],al
  435c67:	add    BYTE PTR [rsi],ch
  435c69:	add    BYTE PTR [rax],al
  435c6b:	add    BYTE PTR [rax],al
  435c6d:	add    BYTE PTR [rax],al
  435c6f:	add    BYTE PTR [rbx+0x4b],ah
  435c72:	rex.XB add BYTE PTR [r8],al
  435c75:	add    BYTE PTR [rax],al
  435c77:	add    BYTE PTR [rdi],ch
  435c79:	add    BYTE PTR [rax],al
  435c7b:	add    BYTE PTR [rax],al
  435c7d:	add    BYTE PTR [rax],al
  435c7f:	add    BYTE PTR [rsi+0x4b],ch
  435c82:	rex.XB add BYTE PTR [r8],al
  435c85:	add    BYTE PTR [rax],al
  435c87:	add    BYTE PTR [rax],dh
  435c89:	add    BYTE PTR [rax],al
  435c8b:	add    BYTE PTR [rax],al
  435c8d:	add    BYTE PTR [rax],al
  435c8f:	add    BYTE PTR [rcx+0x4b],bh
  435c92:	rex.XB add BYTE PTR [r8],al
  435c95:	add    BYTE PTR [rax],al
  435c97:	add    BYTE PTR [rcx],dh
  435c99:	add    BYTE PTR [rax],al
  435c9b:	add    BYTE PTR [rax],al
  435c9d:	add    BYTE PTR [rax],al
  435c9f:	add    BYTE PTR [rbx+rcx*2+0x43],al
  435ca6:	add    BYTE PTR [rax],al
  435ca8:	or     DWORD PTR [rax],eax
  435caa:	add    BYTE PTR [rax],al
  435cac:	add    BYTE PTR [rax],al
  435cae:	add    BYTE PTR [rax],al
  435cb0:	mov    cs,WORD PTR [rbx+0x43]
  435cb3:	add    BYTE PTR [rax],al
  435cb5:	add    BYTE PTR [rax],al
  435cb7:	add    BYTE PTR [rax],cl
  435cb9:	add    BYTE PTR [rax],al
  435cbb:	add    BYTE PTR [rax],al
  435cbd:	add    BYTE PTR [rax],al
  435cbf:	add    BYTE PTR [rax+0x434b],bl
  435cc5:	add    BYTE PTR [rax],al
  435cc7:	add    BYTE PTR [rsi+0x0],bl
  435cca:	add    BYTE PTR [rax],al
  435ccc:	add    BYTE PTR [rax],al
  435cce:	add    BYTE PTR [rax],al
  435cd0:	movabs eax,ds:0x3e0000000000434b
  435cd9:	add    BYTE PTR [rax],al
  435cdb:	add    BYTE PTR [rax],al
  435cdd:	add    BYTE PTR [rax],al
  435cdf:	add    BYTE PTR [rbx+0x434b],ch
  435ce5:	add    BYTE PTR [rax],al
  435ce7:	add    BYTE PTR [rcx],cl
  435ce9:	add    BYTE PTR [rax],al
  435ceb:	add    BYTE PTR [rax],al
  435ced:	add    BYTE PTR [rax],al
  435cef:	add    BYTE PTR [rbp+0x434b],dh
  435cf5:	add    BYTE PTR [rax],al
  435cf7:	add    BYTE PTR [rdx],bh
  435cf9:	add    BYTE PTR [rax],al
  435cfb:	add    BYTE PTR [rax],al
  435cfd:	add    BYTE PTR [rax],al
  435cff:	add    BYTE PTR [rdi+0x434b],bh
  435d05:	add    BYTE PTR [rax],al
  435d07:	add    BYTE PTR [rsi+0x0],bl
  435d0a:	add    BYTE PTR [rax],al
  435d0c:	add    BYTE PTR [rax],al
  435d0e:	add    BYTE PTR [rax],al
  435d10:	leave  
  435d11:	rex.WXB
  435d12:	rex.XB add BYTE PTR [r8],al
	...
  435d1d:	add    BYTE PTR [rax],al
  435d1f:	add    bl,dl
  435d21:	rex.WXB
  435d22:	rex.XB add BYTE PTR [r8],al
  435d25:	add    BYTE PTR [rax],al
  435d27:	add    BYTE PTR [rip+0x0],ch        # 0x435d2d
  435d2d:	add    BYTE PTR [rax],al
  435d2f:	add    dh,bl
  435d31:	rex.WXB
  435d32:	rex.XB add BYTE PTR [r8],al
  435d35:	add    BYTE PTR [rax],al
  435d37:	add    BYTE PTR [rax],dh
  435d39:	add    BYTE PTR [rax],al
  435d3b:	add    BYTE PTR [rax],al
  435d3d:	add    BYTE PTR [rax],al
  435d3f:	add    cl,ch
  435d41:	rex.WXB
  435d42:	rex.XB add BYTE PTR [r8],al
  435d45:	add    BYTE PTR [rax],al
  435d47:	add    BYTE PTR [rdx],dh
  435d49:	add    BYTE PTR [rax],al
  435d4b:	add    BYTE PTR [rax],al
  435d4d:	add    BYTE PTR [rax],al
  435d4f:	add    bl,dh
  435d51:	rex.WXB
  435d52:	rex.XB add BYTE PTR [r8],al
  435d55:	add    BYTE PTR [rax],al
  435d57:	add    BYTE PTR [rax+rax*1],dh
  435d5a:	add    BYTE PTR [rax],al
  435d5c:	add    BYTE PTR [rax],al
  435d5e:	add    BYTE PTR [rax],al
  435d60:	std    
  435d61:	rex.WXB
  435d62:	rex.XB add BYTE PTR [r8],al
  435d65:	add    BYTE PTR [rax],al
  435d67:	add    BYTE PTR [rip+0x0],dh        # 0x435d6d
  435d6d:	add    BYTE PTR [rax],al
  435d6f:	add    BYTE PTR [rdi],al
  435d71:	rex.WR
  435d72:	rex.XB add BYTE PTR [r8],al
  435d75:	add    BYTE PTR [rax],al
  435d77:	add    BYTE PTR [rsi],dh
  435d79:	add    BYTE PTR [rax],al
  435d7b:	add    BYTE PTR [rax],al
  435d7d:	add    BYTE PTR [rax],al
  435d7f:	add    BYTE PTR [rcx],dl
  435d81:	rex.WR
  435d82:	rex.XB add BYTE PTR [r8],al
  435d85:	add    BYTE PTR [rax],al
  435d87:	add    BYTE PTR [rdi],dh
  435d89:	add    BYTE PTR [rax],al
  435d8b:	add    BYTE PTR [rax],al
  435d8d:	add    BYTE PTR [rax],al
  435d8f:	add    BYTE PTR [rbx],bl
  435d91:	rex.WR
  435d92:	rex.XB add BYTE PTR [r8],al
  435d95:	add    BYTE PTR [rax],al
  435d97:	add    BYTE PTR [rax],bh
  435d99:	add    BYTE PTR [rax],al
  435d9b:	add    BYTE PTR [rax],al
  435d9d:	add    BYTE PTR [rax],al
  435d9f:	add    BYTE PTR [rip+0x434c],ah        # 0x43a0f1
  435da5:	add    BYTE PTR [rax],al
  435da7:	add    BYTE PTR [rcx],bh
  435da9:	add    BYTE PTR [rax],al
  435dab:	add    BYTE PTR [rax],al
  435dad:	add    BYTE PTR [rax],al
  435daf:	add    BYTE PTR [rdi],ch
  435db1:	rex.WR
  435db2:	rex.XB add BYTE PTR [r8],al
  435db5:	add    BYTE PTR [rax],al
  435db7:	add    BYTE PTR [rsi+0x0],bl
  435dba:	add    BYTE PTR [rax],al
  435dbc:	add    BYTE PTR [rax],al
  435dbe:	add    BYTE PTR [rax],al
  435dc0:	rex
  435dc1:	rex.WR
  435dc2:	rex.XB add BYTE PTR [r8],al
	...
  435dcd:	add    BYTE PTR [rax],al
  435dcf:	add    BYTE PTR [rbx+0x4c],cl
  435dd2:	rex.XB add BYTE PTR [r8],al
  435dd5:	add    BYTE PTR [rax],al
  435dd7:	add    BYTE PTR [rip+0x0],ch        # 0x435ddd
  435ddd:	add    BYTE PTR [rax],al
  435ddf:	add    BYTE PTR [rdi+0x4c],dl
  435de2:	rex.XB add BYTE PTR [r8],al
  435de5:	add    BYTE PTR [rax],al
  435de7:	add    BYTE PTR [rip+0x0],ch        # 0x435ded
  435ded:	add    BYTE PTR [rax],al
  435def:	add    BYTE PTR [rax+0x4c],ch
  435df2:	rex.XB add BYTE PTR [r8],al
  435df5:	add    BYTE PTR [rax],al
  435df7:	add    BYTE PTR [rsi],ch
  435df9:	add    BYTE PTR [rax],al
  435dfb:	add    BYTE PTR [rax],al
  435dfd:	add    BYTE PTR [rax],al
  435dff:	add    BYTE PTR [rsp+rcx*2+0x43],dh
  435e03:	add    BYTE PTR [rax],al
  435e05:	add    BYTE PTR [rax],al
  435e07:	add    BYTE PTR [rdi],ch
  435e09:	add    BYTE PTR [rax],al
  435e0b:	add    BYTE PTR [rax],al
  435e0d:	add    BYTE PTR [rax],al
  435e0f:	add    BYTE PTR [rax+0x434c],al
  435e15:	add    BYTE PTR [rax],al
  435e17:	add    BYTE PTR [rdi],ch
  435e19:	add    BYTE PTR [rax],al
  435e1b:	add    BYTE PTR [rax],al
  435e1d:	add    BYTE PTR [rax],al
  435e1f:	add    BYTE PTR [rcx+0x434c],dl
  435e25:	add    BYTE PTR [rax],al
  435e27:	add    BYTE PTR [rax],dh
  435e29:	add    BYTE PTR [rax],al
  435e2b:	add    BYTE PTR [rax],al
  435e2d:	add    BYTE PTR [rax],al
  435e2f:	add    BYTE PTR [rbp+0x434c],bl
  435e35:	add    BYTE PTR [rax],al
  435e37:	add    BYTE PTR [rax],dh
  435e39:	add    BYTE PTR [rax],al
  435e3b:	add    BYTE PTR [rax],al
  435e3d:	add    BYTE PTR [rax],al
  435e3f:	add    BYTE PTR [rsi+0x434c],ch
  435e45:	add    BYTE PTR [rax],al
  435e47:	add    BYTE PTR [rcx],dh
  435e49:	add    BYTE PTR [rax],al
  435e4b:	add    BYTE PTR [rax],al
  435e4d:	add    BYTE PTR [rax],al
  435e4f:	add    BYTE PTR [rdx+0x434c],bh
  435e55:	add    BYTE PTR [rax],al
  435e57:	add    BYTE PTR [rcx],dh
  435e59:	add    BYTE PTR [rax],al
  435e5b:	add    BYTE PTR [rax],al
  435e5d:	add    BYTE PTR [rax],al
  435e5f:	add    bl,cl
  435e61:	rex.WR
  435e62:	rex.XB add BYTE PTR [r8],al
	...
  435e6d:	add    BYTE PTR [rax],al
  435e6f:	add    bl,bl
  435e71:	rex.WR
  435e72:	rex.XB add BYTE PTR [r8],al
  435e75:	add    BYTE PTR [rax],al
  435e77:	add    BYTE PTR [rdx],dh
  435e79:	add    BYTE PTR [rax],al
  435e7b:	add    BYTE PTR [rax],al
  435e7d:	add    BYTE PTR [rax],al
  435e7f:	add    dh,ah
  435e81:	rex.WR
  435e82:	rex.XB add BYTE PTR [r8],al
  435e85:	add    BYTE PTR [rax],al
  435e87:	add    BYTE PTR [rdx],dh
  435e89:	add    BYTE PTR [rax],al
  435e8b:	add    BYTE PTR [rax],al
  435e8d:	add    BYTE PTR [rax],al
  435e8f:	add    dh,dh
  435e91:	rex.WR
  435e92:	rex.XB add BYTE PTR [r8],al
  435e95:	add    BYTE PTR [rax],al
  435e97:	add    BYTE PTR [rbx],dh
  435e99:	add    BYTE PTR [rax],al
  435e9b:	add    BYTE PTR [rax],al
  435e9d:	add    BYTE PTR [rax],al
  435e9f:	add    BYTE PTR [rcx],al
  435ea1:	rex.WRB
  435ea2:	rex.XB add BYTE PTR [r8],al
  435ea5:	add    BYTE PTR [rax],al
  435ea7:	add    BYTE PTR [rbx],dh
  435ea9:	add    BYTE PTR [rax],al
  435eab:	add    BYTE PTR [rax],al
  435ead:	add    BYTE PTR [rax],al
  435eaf:	add    BYTE PTR [rcx],dl
  435eb1:	rex.WRB
  435eb2:	rex.XB add BYTE PTR [r8],al
  435eb5:	add    BYTE PTR [rax],al
  435eb7:	add    BYTE PTR [rax+rax*1],dh
  435eba:	add    BYTE PTR [rax],al
  435ebc:	add    BYTE PTR [rax],al
  435ebe:	add    BYTE PTR [rax],al
  435ec0:	sbb    al,0x4d
  435ec2:	rex.XB add BYTE PTR [r8],al
  435ec5:	add    BYTE PTR [rax],al
  435ec7:	add    BYTE PTR [rax+rax*1],dh
  435eca:	add    BYTE PTR [rax],al
  435ecc:	add    BYTE PTR [rax],al
  435ece:	add    BYTE PTR [rax],al
  435ed0:	sub    al,0x4d
  435ed2:	rex.XB add BYTE PTR [r8],al
  435ed5:	add    BYTE PTR [rax],al
  435ed7:	add    BYTE PTR [rip+0x0],dh        # 0x435edd
  435edd:	add    BYTE PTR [rax],al
  435edf:	add    BYTE PTR [rdi],dh
  435ee1:	rex.WRB
  435ee2:	rex.XB add BYTE PTR [r8],al
  435ee5:	add    BYTE PTR [rax],al
  435ee7:	add    BYTE PTR [rip+0x0],dh        # 0x435eed
  435eed:	add    BYTE PTR [rax],al
  435eef:	add    BYTE PTR [rdi+0x4d],al
  435ef2:	rex.XB add BYTE PTR [r8],al
  435ef5:	add    BYTE PTR [rax],al
  435ef7:	add    BYTE PTR [rsi],dh
  435ef9:	add    BYTE PTR [rax],al
  435efb:	add    BYTE PTR [rax],al
  435efd:	add    BYTE PTR [rax],al
  435eff:	add    BYTE PTR [rdx+0x4d],dl
  435f02:	rex.XB add BYTE PTR [r8],al
  435f05:	add    BYTE PTR [rax],al
  435f07:	add    BYTE PTR [rsi],dh
  435f09:	add    BYTE PTR [rax],al
  435f0b:	add    BYTE PTR [rax],al
  435f0d:	add    BYTE PTR [rax],al
  435f0f:	add    BYTE PTR [rdx+0x4d],ah
  435f12:	rex.XB add BYTE PTR [r8],al
  435f15:	add    BYTE PTR [rax],al
  435f17:	add    BYTE PTR [rdi],dh
  435f19:	add    BYTE PTR [rax],al
  435f1b:	add    BYTE PTR [rax],al
  435f1d:	add    BYTE PTR [rax],al
  435f1f:	add    BYTE PTR [rbp+0x4d],ch
  435f22:	rex.XB add BYTE PTR [r8],al
  435f25:	add    BYTE PTR [rax],al
  435f27:	add    BYTE PTR [rdi],dh
  435f29:	add    BYTE PTR [rax],al
  435f2b:	add    BYTE PTR [rax],al
  435f2d:	add    BYTE PTR [rax],al
  435f2f:	add    BYTE PTR [rbp+0x4d],bh
  435f32:	rex.XB add BYTE PTR [r8],al
  435f35:	add    BYTE PTR [rax],al
  435f37:	add    BYTE PTR [rax],bh
  435f39:	add    BYTE PTR [rax],al
  435f3b:	add    BYTE PTR [rax],al
  435f3d:	add    BYTE PTR [rax],al
  435f3f:	add    BYTE PTR [rax+0x434d],cl
  435f45:	add    BYTE PTR [rax],al
  435f47:	add    BYTE PTR [rax],bh
  435f49:	add    BYTE PTR [rax],al
  435f4b:	add    BYTE PTR [rax],al
  435f4d:	add    BYTE PTR [rax],al
  435f4f:	add    BYTE PTR [rax+0x434d],bl
  435f55:	add    BYTE PTR [rax],al
  435f57:	add    BYTE PTR [rcx],bh
  435f59:	add    BYTE PTR [rax],al
  435f5b:	add    BYTE PTR [rax],al
  435f5d:	add    BYTE PTR [rax],al
  435f5f:	add    BYTE PTR [rbx+0x434d],ah
  435f65:	add    BYTE PTR [rax],al
  435f67:	add    BYTE PTR [rcx],bh
  435f69:	add    BYTE PTR [rax],al
  435f6b:	add    BYTE PTR [rax],al
  435f6d:	add    BYTE PTR [rax],al
  435f6f:	add    BYTE PTR [rbx+0x434d],dh
  435f75:	add    BYTE PTR [rax],al
  435f77:	add    BYTE PTR [rdi],bh
  435f79:	add    BYTE PTR [rax],al
  435f7b:	add    BYTE PTR [rax],al
  435f7d:	add    BYTE PTR [rax],al
  435f7f:	add    BYTE PTR [rax+0x434d],bh
  435f85:	add    BYTE PTR [rax],al
  435f87:	add    BYTE PTR [rsi],bh
  435f89:	add    BYTE PTR [rax],al
  435f8b:	add    BYTE PTR [rax],al
  435f8d:	add    BYTE PTR [rax],al
  435f8f:	add    al,al
  435f91:	rex.WRB
  435f92:	rex.XB add BYTE PTR [r8],al
  435f95:	add    BYTE PTR [rax],al
  435f97:	add    BYTE PTR [rax+0x0],al
  435f9a:	add    BYTE PTR [rax],al
  435f9c:	add    BYTE PTR [rax],al
  435f9e:	add    BYTE PTR [rax],al
  435fa0:	(bad)  
  435fa1:	rex.WRB
  435fa2:	rex.XB add BYTE PTR [r8],al
  435fa5:	add    BYTE PTR [rax],al
  435fa7:	add    BYTE PTR [rdx],bh
  435fa9:	add    BYTE PTR [rax],al
  435fab:	add    BYTE PTR [rax],al
  435fad:	add    BYTE PTR [rax],al
  435faf:	add    al,ah
  435fb1:	rex.WRB
  435fb2:	rex.XB add BYTE PTR [r8],al
  435fb5:	add    BYTE PTR [rax],al
  435fb7:	add    BYTE PTR [rsi],bh
  435fb9:	add    BYTE PTR [rax],al
  435fbb:	add    BYTE PTR [rax],al
  435fbd:	add    BYTE PTR [rax],al
  435fbf:	add    bh,ch
  435fc1:	rex.WRB
  435fc2:	rex.XB add BYTE PTR [r8],al
  435fc5:	add    BYTE PTR [rax],al
  435fc7:	add    BYTE PTR [rax+0x0],al
  435fca:	add    BYTE PTR [rax],al
  435fcc:	add    BYTE PTR [rax],al
  435fce:	add    BYTE PTR [rax],al
  435fd0:	stc    
  435fd1:	rex.WRB
  435fd2:	rex.XB add BYTE PTR [r8],al
  435fd5:	add    BYTE PTR [rax],al
  435fd7:	add    BYTE PTR [rsi],bh
  435fd9:	add    BYTE PTR [rax],al
  435fdb:	add    BYTE PTR [rax],al
  435fdd:	add    BYTE PTR [rax],al
  435fdf:	add    BYTE PTR [rbx],al
  435fe1:	rex.WRX
  435fe2:	rex.XB add BYTE PTR [r8],al
  435fe5:	add    BYTE PTR [rax],al
  435fe7:	add    BYTE PTR [rsi],bh
  435fe9:	add    BYTE PTR [rax],al
  435feb:	add    BYTE PTR [rax],al
  435fed:	add    BYTE PTR [rax],al
  435fef:	add    BYTE PTR [rdx],dl
  435ff1:	rex.WRX
  435ff2:	rex.XB add BYTE PTR [r8],al
  435ff5:	add    BYTE PTR [rax],al
  435ff7:	add    BYTE PTR [rsi],bh
  435ff9:	add    BYTE PTR [rax],al
  435ffb:	add    BYTE PTR [rax],al
  435ffd:	add    BYTE PTR [rax],al
  435fff:	add    BYTE PTR [rcx],ah
  436001:	rex.WRX
  436002:	rex.XB add BYTE PTR [r8],al
  436005:	add    BYTE PTR [rax],al
  436007:	add    BYTE PTR [rax+rax*1],bh
  43600a:	add    BYTE PTR [rax],al
  43600c:	add    BYTE PTR [rax],al
  43600e:	add    BYTE PTR [rax],al
  436010:	sub    ecx,DWORD PTR [rsi+0x43]
  436013:	add    BYTE PTR [rax],al
  436015:	add    BYTE PTR [rax],al
  436017:	add    BYTE PTR [rax+rax*1],bh
  43601a:	add    BYTE PTR [rax],al
  43601c:	add    BYTE PTR [rax],al
  43601e:	add    BYTE PTR [rax],al
  436020:	cmp    cl,BYTE PTR [rsi+0x43]
  436023:	add    BYTE PTR [rax],al
  436025:	add    BYTE PTR [rax],al
  436027:	add    BYTE PTR [rax+rax*1],bh
  43602a:	add    BYTE PTR [rax],al
  43602c:	add    BYTE PTR [rax],al
  43602e:	add    BYTE PTR [rax],al
  436030:	rex.WXB
  436031:	rex.WRX
  436032:	rex.XB add BYTE PTR [r8],al
  436035:	add    BYTE PTR [rax],al
  436037:	add    BYTE PTR [rsi],dl
  436039:	add    BYTE PTR [rax],al
  43603b:	add    BYTE PTR [rax],al
  43603d:	add    BYTE PTR [rax],al
  43603f:	add    BYTE PTR [rcx+0x4e],dl
  436042:	rex.XB add BYTE PTR [r8],al
  436045:	add    BYTE PTR [rax],al
  436047:	add    BYTE PTR [rdx],bh
  436049:	add    BYTE PTR [rax],al
  43604b:	add    BYTE PTR [rax],al
  43604d:	add    BYTE PTR [rax],al
  43604f:	add    BYTE PTR [rsi+rcx*2+0x43],dl
  436053:	add    BYTE PTR [rax],al
  436055:	add    BYTE PTR [rax],al
  436057:	add    BYTE PTR [rcx+0x0],al
  43605a:	add    BYTE PTR [rax],al
  43605c:	add    BYTE PTR [rax],al
  43605e:	add    BYTE PTR [rax],al
  436060:	pop    rbx
  436061:	rex.WRX
  436062:	rex.XB add BYTE PTR [r8],al
  436065:	add    BYTE PTR [rax],al
  436067:	add    BYTE PTR [rdx+0x0],al
  43606a:	add    BYTE PTR [rax],al
  43606c:	add    BYTE PTR [rax],al
  43606e:	add    BYTE PTR [rax],al
  436070:	movsxd ecx,DWORD PTR [rsi+0x43]
  436073:	add    BYTE PTR [rax],al
  436075:	add    BYTE PTR [rax],al
  436077:	add    BYTE PTR [rbx+0x0],al
  43607a:	add    BYTE PTR [rax],al
  43607c:	add    BYTE PTR [rax],al
  43607e:	add    BYTE PTR [rax],al
  436080:	push   0x4e
  436082:	rex.XB add BYTE PTR [r8],al
  436085:	add    BYTE PTR [rax],al
  436087:	add    BYTE PTR [rax+rax*1+0x0],al
  43608b:	add    BYTE PTR [rax],al
  43608d:	add    BYTE PTR [rax],al
  43608f:	add    BYTE PTR [rcx+0x4e],dh
  436092:	rex.XB add BYTE PTR [r8],al
  436095:	add    BYTE PTR [rax],al
  436097:	add    BYTE PTR [rbx],bh
  436099:	add    BYTE PTR [rax],al
  43609b:	add    BYTE PTR [rax],al
  43609d:	add    BYTE PTR [rax],al
  43609f:	add    BYTE PTR [rax+0x4e],bh
  4360a2:	rex.XB add BYTE PTR [r8],al
  4360a5:	add    BYTE PTR [rax],al
  4360a7:	add    BYTE PTR [rbx],bh
  4360a9:	add    BYTE PTR [rax],al
  4360ab:	add    BYTE PTR [rax],al
  4360ad:	add    BYTE PTR [rax],al
  4360af:	add    BYTE PTR [rcx+0x434e],al
  4360b5:	add    BYTE PTR [rax],al
  4360b7:	add    BYTE PTR [rbx],bh
  4360b9:	add    BYTE PTR [rax],al
  4360bb:	add    BYTE PTR [rax],al
  4360bd:	add    BYTE PTR [rax],al
  4360bf:	add    BYTE PTR [rax+0x434e],dl
  4360c5:	add    BYTE PTR [rax],al
  4360c7:	add    BYTE PTR [rbx],bh
  4360c9:	add    BYTE PTR [rax],al
  4360cb:	add    BYTE PTR [rax],al
  4360cd:	add    BYTE PTR [rax],al
  4360cf:	add    BYTE PTR [rdi+0x434e],bl
	...
  4360dd:	add    BYTE PTR [rax],al
  4360df:	add    BYTE PTR [rdx+0x434e],ah
  4360e5:	add    BYTE PTR [rax],al
  4360e7:	add    BYTE PTR [rdx],dh
  4360e9:	add    BYTE PTR [rax],al
  4360eb:	add    BYTE PTR [rax],al
  4360ed:	add    BYTE PTR [rax],al
  4360ef:	add    BYTE PTR [rbp+0x434e],ah
  4360f5:	add    BYTE PTR [rax],al
  4360f7:	add    BYTE PTR [rbx],dh
  4360f9:	add    BYTE PTR [rax],al
  4360fb:	add    BYTE PTR [rax],al
  4360fd:	add    BYTE PTR [rax],al
  4360ff:	add    BYTE PTR [rax+0x434e],ch
  436105:	add    BYTE PTR [rax],al
  436107:	add    BYTE PTR [rax+rax*1],dh
  43610a:	add    BYTE PTR [rax],al
  43610c:	add    BYTE PTR [rax],al
  43610e:	add    BYTE PTR [rax],al
  436110:	stos   DWORD PTR es:[rdi],eax
  436111:	rex.WRX
  436112:	rex.XB add BYTE PTR [r8],al
  436115:	add    BYTE PTR [rax],al
  436117:	add    BYTE PTR [rcx],bh
  436119:	add    BYTE PTR [rax],al
  43611b:	add    BYTE PTR [rax],al
  43611d:	add    BYTE PTR [rax],al
  43611f:	add    BYTE PTR [rsi+0x434e],ch
  436125:	add    BYTE PTR [rax],al
  436127:	add    BYTE PTR [rip+0x0],ch        # 0x43612d
  43612d:	add    BYTE PTR [rax],al
  43612f:	add    BYTE PTR [rcx+0x434e],dh
  436135:	add    BYTE PTR [rax],al
  436137:	add    BYTE PTR [rsi],ch
  436139:	add    BYTE PTR [rax],al
  43613b:	add    BYTE PTR [rax],al
  43613d:	add    BYTE PTR [rax],al
  43613f:	add    BYTE PTR [rsi+rcx*2+0x43],dh
  436146:	add    BYTE PTR [rax],al
  436148:	(bad)  
  436149:	add    BYTE PTR [rax],al
  43614b:	add    BYTE PTR [rax],al
  43614d:	add    BYTE PTR [rax],al
  43614f:	add    BYTE PTR [rdi+0x434e],dh
	...
  43615d:	add    BYTE PTR [rax],al
  43615f:	add    BYTE PTR [rsi+0x434e],bh
  436165:	add    BYTE PTR [rax],al
  436167:	add    BYTE PTR [rdx],dh
  436169:	add    BYTE PTR [rax],al
  43616b:	add    BYTE PTR [rax],al
  43616d:	add    BYTE PTR [rax],al
  43616f:	add    ch,al
  436171:	rex.WRX
  436172:	rex.XB add BYTE PTR [r8],al
  436175:	add    BYTE PTR [rax],al
  436177:	add    BYTE PTR [rbx],dh
  436179:	add    BYTE PTR [rax],al
  43617b:	add    BYTE PTR [rax],al
  43617d:	add    BYTE PTR [rax],al
  43617f:	add    ah,cl
  436181:	rex.WRX
  436182:	rex.XB add BYTE PTR [r8],al
  436185:	add    BYTE PTR [rax],al
  436187:	add    BYTE PTR [rax+rax*1],dh
  43618a:	add    BYTE PTR [rax],al
  43618c:	add    BYTE PTR [rax],al
  43618e:	add    BYTE PTR [rax],al
  436190:	ror    DWORD PTR [rsi+0x43],cl
  436193:	add    BYTE PTR [rax],al
  436195:	add    BYTE PTR [rax],al
  436197:	add    BYTE PTR [rcx],bh
  436199:	add    BYTE PTR [rax],al
  43619b:	add    BYTE PTR [rax],al
  43619d:	add    BYTE PTR [rax],al
  43619f:	add    dl,bl
  4361a1:	rex.WRX
  4361a2:	rex.XB add BYTE PTR [r8],al
  4361a5:	add    BYTE PTR [rax],al
  4361a7:	add    BYTE PTR [rip+0x0],ch        # 0x4361ad
  4361ad:	add    BYTE PTR [rax],al
  4361af:	add    cl,ah
  4361b1:	rex.WRX
  4361b2:	rex.XB add BYTE PTR [r8],al
  4361b5:	add    BYTE PTR [rax],al
  4361b7:	add    BYTE PTR [rsi],ch
  4361b9:	add    BYTE PTR [rax],al
  4361bb:	add    BYTE PTR [rax],al
  4361bd:	add    BYTE PTR [rax],al
  4361bf:	add    al,ch
  4361c1:	rex.WRX
  4361c2:	rex.XB add BYTE PTR [r8],al
  4361c5:	add    BYTE PTR [rax],al
  4361c7:	add    BYTE PTR [rdi],ch
  4361c9:	add    BYTE PTR [rax],al
  4361cb:	add    BYTE PTR [rax],al
  4361cd:	add    BYTE PTR [rax],al
  4361cf:	add    bh,ch
  4361d1:	rex.WRX
  4361d2:	rex.XB add BYTE PTR [r8],al
  4361d5:	add    BYTE PTR [rax],al
  4361d7:	add    BYTE PTR [rbp+0x0],al
  4361da:	add    BYTE PTR [rax],al
  4361dc:	add    BYTE PTR [rax],al
  4361de:	add    BYTE PTR [rax],al
  4361e0:	repz rex.WRX
  4361e2:	rex.XB add BYTE PTR [r8],al
  4361e5:	add    BYTE PTR [rax],al
  4361e7:	add    BYTE PTR [rsi+0x0],al
  4361ea:	add    BYTE PTR [rax],al
  4361ec:	add    BYTE PTR [rax],al
  4361ee:	add    BYTE PTR [rax],al
  4361f0:	std    
  4361f1:	rex.WRX
  4361f2:	rex.XB add BYTE PTR [r8],al
  4361f5:	add    BYTE PTR [rax],al
  4361f7:	add    BYTE PTR [rdi+0x0],al
  4361fa:	add    BYTE PTR [rax],al
  4361fc:	add    BYTE PTR [rax],al
  4361fe:	add    BYTE PTR [rax],al
  436200:	(bad)  
  436201:	rex.WRXB
  436202:	rex.XB add BYTE PTR [r8],al
  436205:	add    BYTE PTR [rax],al
  436207:	add    BYTE PTR [rax+0x0],cl
  43620a:	add    BYTE PTR [rax],al
  43620c:	add    BYTE PTR [rax],al
  43620e:	add    BYTE PTR [rax],al
  436210:	sbb    cl,BYTE PTR [rdi+0x43]
  436213:	add    BYTE PTR [rax],al
  436215:	add    BYTE PTR [rax],al
  436217:	add    BYTE PTR [rcx+0x0],cl
  43621a:	add    BYTE PTR [rax],al
  43621c:	add    BYTE PTR [rax],al
  43621e:	add    BYTE PTR [rax],al
  436220:	es rex.WRXB
  436222:	rex.XB add BYTE PTR [r8],al
  436225:	add    BYTE PTR [rax],al
  436227:	add    BYTE PTR [rdx+0x0],cl
  43622a:	add    BYTE PTR [rax],al
  43622c:	add    BYTE PTR [rax],al
  43622e:	add    BYTE PTR [rax],al
  436230:	(bad)  
  436231:	rex.WRXB
  436232:	rex.XB add BYTE PTR [r8],al
  436235:	add    BYTE PTR [rax],al
  436237:	add    BYTE PTR [rbx+0x0],cl
  43623a:	add    BYTE PTR [rax],al
  43623c:	add    BYTE PTR [rax],al
  43623e:	add    BYTE PTR [rax],al
  436240:	cmp    DWORD PTR [rdi+0x43],ecx
  436243:	add    BYTE PTR [rax],al
  436245:	add    BYTE PTR [rax],al
  436247:	add    BYTE PTR [rax+rax*1+0x0],cl
  43624b:	add    BYTE PTR [rax],al
  43624d:	add    BYTE PTR [rax],al
  43624f:	add    BYTE PTR [rdi+rcx*2+0x43],al
  436253:	add    BYTE PTR [rax],al
  436255:	add    BYTE PTR [rax],al
  436257:	add    BYTE PTR [rbp+0x0],al
  43625a:	add    BYTE PTR [rax],al
  43625c:	add    BYTE PTR [rax],al
  43625e:	add    BYTE PTR [rax],al
  436260:	rex.WRX
  436261:	rex.WRXB
  436262:	rex.XB add BYTE PTR [r8],al
  436265:	add    BYTE PTR [rax],al
  436267:	add    BYTE PTR [rbp+0x0],al
  43626a:	add    BYTE PTR [rax],al
  43626c:	add    BYTE PTR [rax],al
  43626e:	add    BYTE PTR [rax],al
  436270:	push   rdi
  436271:	rex.WRXB
  436272:	rex.XB add BYTE PTR [r8],al
  436275:	add    BYTE PTR [rax],al
  436277:	add    BYTE PTR [rbp+0x0],cl
  43627a:	add    BYTE PTR [rax],al
  43627c:	add    BYTE PTR [rax],al
  43627e:	add    BYTE PTR [rax],al
  436280:	(bad)  
  436281:	rex.WRXB
  436282:	rex.XB add BYTE PTR [r8],al
  436285:	add    BYTE PTR [rax],al
  436287:	add    BYTE PTR [rsi+0x0],cl
  43628a:	add    BYTE PTR [rax],al
  43628c:	add    BYTE PTR [rax],al
  43628e:	add    BYTE PTR [rax],al
  436290:	push   0x4f
  436292:	rex.XB add BYTE PTR [r8],al
  436295:	add    BYTE PTR [rax],al
  436297:	add    BYTE PTR [rdi+0x0],cl
  43629a:	add    BYTE PTR [rax],al
  43629c:	add    BYTE PTR [rax],al
  43629e:	add    BYTE PTR [rax],al
  4362a0:	jne    0x4362f1
  4362a2:	rex.XB add BYTE PTR [r8],al
  4362a5:	add    BYTE PTR [rax],al
  4362a7:	add    BYTE PTR [rax+0x0],dl
  4362aa:	add    BYTE PTR [rax],al
  4362ac:	add    BYTE PTR [rax],al
  4362ae:	add    BYTE PTR [rax],al
  4362b0:	or     BYTE PTR [rdi+0x43],0x0
  4362b4:	add    BYTE PTR [rax],al
  4362b6:	add    BYTE PTR [rax],al
  4362b8:	sldt   WORD PTR [rax]
  4362bb:	add    BYTE PTR [rax],al
  4362bd:	add    BYTE PTR [rax],al
  4362bf:	add    BYTE PTR [rax+0x434f],cl
  4362c5:	add    BYTE PTR [rax],al
  4362c7:	add    BYTE PTR [rbx],dl
  4362c9:	add    BYTE PTR [rax],al
  4362cb:	add    BYTE PTR [rax],al
  4362cd:	add    BYTE PTR [rax],al
  4362cf:	add    BYTE PTR [rax+0x434f],dl
  4362d5:	add    BYTE PTR [rax],al
  4362d7:	add    BYTE PTR [rsi],cl
  4362d9:	add    BYTE PTR [rax],al
  4362db:	add    BYTE PTR [rax],al
  4362dd:	add    BYTE PTR [rax],al
  4362df:	add    BYTE PTR [rax+0x434f],bl
  4362e5:	add    BYTE PTR [rax],al
  4362e7:	add    BYTE PTR [rip+0x0],cl        # 0x4362ed
  4362ed:	add    BYTE PTR [rax],al
  4362ef:	add    BYTE PTR [rsi+0x434f],bl
  4362f5:	add    BYTE PTR [rax],al
  4362f7:	add    BYTE PTR [rax],dl
  4362f9:	add    BYTE PTR [rax],al
  4362fb:	add    BYTE PTR [rax],al
  4362fd:	add    BYTE PTR [rax],al
  4362ff:	add    BYTE PTR [rdi+0x434f],ah
  436305:	add    BYTE PTR [rax],al
  436307:	add    BYTE PTR [rdx],dl
  436309:	add    BYTE PTR [rax],al
  43630b:	add    BYTE PTR [rax],al
  43630d:	add    BYTE PTR [rax],al
  43630f:	add    BYTE PTR [rdi+0x434f],ch
  436315:	add    BYTE PTR [rax],al
  436317:	add    BYTE PTR [rcx],dl
  436319:	add    BYTE PTR [rax],al
  43631b:	add    BYTE PTR [rax],al
  43631d:	add    BYTE PTR [rax],al
  43631f:	add    BYTE PTR [rdi+0x434f],dh
  436325:	add    BYTE PTR [rax],al
  436327:	add    BYTE PTR [rax+rax*1+0x0],dl
  43632b:	add    BYTE PTR [rax],al
  43632d:	add    BYTE PTR [rax],al
  43632f:	add    al,al
  436331:	rex.WRXB
  436332:	rex.XB add BYTE PTR [r8],al
  436335:	add    BYTE PTR [rax],al
  436337:	add    BYTE PTR [rcx+0x0],dl
  43633a:	add    BYTE PTR [rax],al
  43633c:	add    BYTE PTR [rax],al
  43633e:	add    BYTE PTR [rax],al
  436340:	retf   0x434f
  436343:	add    BYTE PTR [rax],al
  436345:	add    BYTE PTR [rax],al
  436347:	add    BYTE PTR [rdx+0x0],dl
  43634a:	add    BYTE PTR [rax],al
  43634c:	add    BYTE PTR [rax],al
  43634e:	add    BYTE PTR [rax],al
  436350:	ror    DWORD PTR [rdi+0x43],cl
  436353:	add    BYTE PTR [rax],al
  436355:	add    BYTE PTR [rax],al
  436357:	add    BYTE PTR [rbx+0x0],dl
  43635a:	add    BYTE PTR [rax],al
  43635c:	add    BYTE PTR [rax],al
  43635e:	add    BYTE PTR [rax],al
  436360:	(bad)  
  436361:	rex.WRXB
  436362:	rex.XB add BYTE PTR [r8],al
  436365:	add    BYTE PTR [rax],al
  436367:	add    BYTE PTR [rbx+0x0],dl
  43636a:	add    BYTE PTR [rax],al
  43636c:	add    BYTE PTR [rax],al
  43636e:	add    BYTE PTR [rax],al
  436370:	fisttp QWORD PTR [rdi+0x43]
  436373:	add    BYTE PTR [rax],al
  436375:	add    BYTE PTR [rax],al
  436377:	add    BYTE PTR [rax+rax*1+0x0],dl
  43637b:	add    BYTE PTR [rax],al
  43637d:	add    BYTE PTR [rax],al
  43637f:	add    bh,ah
  436381:	rex.WRXB
  436382:	rex.XB add BYTE PTR [r8],al
  436385:	add    BYTE PTR [rax],al
  436387:	add    BYTE PTR [rax+rax*1+0x0],dl
  43638b:	add    BYTE PTR [rax],al
  43638d:	add    BYTE PTR [rax],al
  43638f:	add    cl,dh
  436391:	rex.WRXB
  436392:	rex.XB add BYTE PTR [r8],al
  436395:	add    BYTE PTR [rax],al
  436397:	add    BYTE PTR [rax+rax*1+0x0],dl
  43639b:	add    BYTE PTR [rax],al
  43639d:	add    BYTE PTR [rax],al
  43639f:	add    dh,dh
  4363a1:	rex.WRXB
  4363a2:	rex.XB add BYTE PTR [r8],al
  4363a5:	add    BYTE PTR [rax],al
  4363a7:	add    BYTE PTR [rbp+0x0],dl
  4363aa:	add    BYTE PTR [rax],al
  4363ac:	add    BYTE PTR [rax],al
  4363ae:	add    BYTE PTR [rax],al
  4363b0:	sti    
  4363b1:	rex.WRXB
  4363b2:	rex.XB add BYTE PTR [r8],al
  4363b5:	add    BYTE PTR [rax],al
  4363b7:	add    BYTE PTR [rbp+0x0],dl
  4363ba:	add    BYTE PTR [rax],al
  4363bc:	add    BYTE PTR [rax],al
  4363be:	add    BYTE PTR [rax],al
  4363c0:	add    eax,0x4350
  4363c5:	add    BYTE PTR [rax],al
  4363c7:	add    BYTE PTR [rbp+0x0],dl
  4363ca:	add    BYTE PTR [rax],al
  4363cc:	add    BYTE PTR [rax],al
  4363ce:	add    BYTE PTR [rax],al
  4363d0:	adc    BYTE PTR [rax+0x43],dl
  4363d3:	add    BYTE PTR [rax],al
  4363d5:	add    BYTE PTR [rax],al
  4363d7:	add    BYTE PTR [rbp+0x0],dl
  4363da:	add    BYTE PTR [rax],al
  4363dc:	add    BYTE PTR [rax],al
  4363de:	add    BYTE PTR [rax],al
  4363e0:	and    BYTE PTR [rax+0x43],dl
  4363e3:	add    BYTE PTR [rax],al
  4363e5:	add    BYTE PTR [rax],al
  4363e7:	add    BYTE PTR [rip+0x0],bh        # 0x4363ed
  4363ed:	add    BYTE PTR [rax],al
  4363ef:	add    BYTE PTR [rax],ch
  4363f1:	push   rax
  4363f2:	rex.XB add BYTE PTR [r8],al
  4363f5:	add    BYTE PTR [rax],al
  4363f7:	add    BYTE PTR [rip+0x0],bh        # 0x4363fd
  4363fd:	add    BYTE PTR [rax],al
  4363ff:	add    BYTE PTR [rdi],ch
  436401:	push   rax
  436402:	rex.XB add BYTE PTR [r8],al
  436405:	add    BYTE PTR [rax],al
  436407:	add    BYTE PTR [rip+0x0],bh        # 0x43640d
  43640d:	add    BYTE PTR [rax],al
  43640f:	add    BYTE PTR [rax],bh
  436411:	push   rax
  436412:	rex.XB add BYTE PTR [r8],al
  436415:	add    BYTE PTR [rax],al
  436417:	add    BYTE PTR [rip+0x0],bh        # 0x43641d
  43641d:	add    BYTE PTR [rax],al
  43641f:	add    BYTE PTR [rsi+0x50],al
  436422:	rex.XB add BYTE PTR [r8],al
  436425:	add    BYTE PTR [rax],al
  436427:	add    BYTE PTR [rip+0x0],bh        # 0x43642d
  43642d:	add    BYTE PTR [rax],al
  43642f:	add    BYTE PTR [rax+rdx*2+0x43],dl
  436433:	add    BYTE PTR [rax],al
  436435:	add    BYTE PTR [rax],al
  436437:	add    BYTE PTR [rip+0x0],bh        # 0x43643d
  43643d:	add    BYTE PTR [rax],al
  43643f:	add    BYTE PTR [rbx],al
  436441:	(bad)  
  436442:	rex.XB add BYTE PTR [r8],al
  436445:	add    BYTE PTR [rax],al
  436447:	add    BYTE PTR [rsi+0x0],dl
  43644a:	add    BYTE PTR [rax],al
  43644c:	add    BYTE PTR [rax],al
  43644e:	add    BYTE PTR [rax],al
  436450:	(bad)  
  436451:	push   rax
  436452:	rex.XB add BYTE PTR [r8],al
  436455:	add    BYTE PTR [rax],al
  436457:	add    BYTE PTR [rdi+0x0],dl
  43645a:	add    BYTE PTR [rax],al
  43645c:	add    BYTE PTR [rax],al
  43645e:	add    BYTE PTR [rax],al
  436460:	jno    0x4364b2
  436462:	rex.XB add BYTE PTR [r8],al
  436465:	add    BYTE PTR [rax],al
  436467:	add    BYTE PTR [rax+0x0],bl
  43646a:	add    BYTE PTR [rax],al
  43646c:	add    BYTE PTR [rax],al
  43646e:	add    BYTE PTR [rax],al
  436470:	sti    
  436471:	rex.XB add BYTE PTR ds:[r8],al
  436475:	add    BYTE PTR [rax],al
  436477:	add    BYTE PTR [rbx],al
  436479:	add    BYTE PTR [rax],al
  43647b:	add    BYTE PTR [rax],al
  43647d:	add    BYTE PTR [rax],al
  43647f:	add    bl,dh
  436481:	rex.XB add BYTE PTR ds:[r8],al
  436485:	add    BYTE PTR [rax],al
  436487:	add    BYTE PTR [rdx],al
  436489:	add    BYTE PTR [rax],al
  43648b:	add    BYTE PTR [rax],al
  43648d:	add    BYTE PTR [rax],al
  43648f:	add    BYTE PTR [rbx+0x4340],dh
  436495:	add    BYTE PTR [rax],al
  436497:	add    BYTE PTR [rcx+0x0],bl
  43649a:	add    BYTE PTR [rax],al
  43649c:	add    BYTE PTR [rax],al
  43649e:	add    BYTE PTR [rax],al
  4364a0:	jg     0x4364f2
  4364a2:	rex.XB add BYTE PTR [r8],al
  4364a5:	add    BYTE PTR [rax],al
  4364a7:	add    BYTE PTR [rdx+0x0],bl
  4364aa:	add    BYTE PTR [rax],al
  4364ac:	add    BYTE PTR [rax],al
  4364ae:	add    BYTE PTR [rax],al
  4364b0:	mov    ss,WORD PTR [rax+0x43]
  4364b3:	add    BYTE PTR [rax],al
  4364b5:	add    BYTE PTR [rax],al
  4364b7:	add    BYTE PTR [rbx+0x0],bl
  4364ba:	add    BYTE PTR [rax],al
  4364bc:	add    BYTE PTR [rax],al
  4364be:	add    BYTE PTR [rax],al
  4364c0:	pushf  
  4364c1:	push   rax
  4364c2:	rex.XB add BYTE PTR [r8],al
  4364c5:	add    BYTE PTR [rax],al
  4364c7:	add    BYTE PTR [rax+rax*1+0x0],bl
  4364cb:	add    BYTE PTR [rax],al
  4364cd:	add    BYTE PTR [rax],al
  4364cf:	add    BYTE PTR [rax+rdx*2+0x43],ah
  4364d6:	add    BYTE PTR [rax],al
  4364d8:	pop    rbp
  4364d9:	add    BYTE PTR [rax],al
  4364db:	add    BYTE PTR [rax],al
  4364dd:	add    BYTE PTR [rax],al
  4364df:	add    BYTE PTR [rax+rdx*2+0x43],ch
  4364e6:	add    BYTE PTR [rax],al
  4364e8:	push   rsi
  4364e9:	add    BYTE PTR [rax],al
  4364eb:	add    BYTE PTR [rax],al
  4364ed:	add    BYTE PTR [rax],al
  4364ef:	add    BYTE PTR [rcx+0x4350],dh
  4364f5:	add    BYTE PTR [rax],al
  4364f7:	add    BYTE PTR [rcx+0x0],bl
  4364fa:	add    BYTE PTR [rax],al
  4364fc:	add    BYTE PTR [rax],al
  4364fe:	add    BYTE PTR [rax],al
  436500:	mov    dh,0x50
  436502:	rex.XB add BYTE PTR [r8],al
  436505:	add    BYTE PTR [rax],al
  436507:	add    BYTE PTR [rsi],bl
  436509:	add    BYTE PTR [rax],al
  43650b:	add    BYTE PTR [rax],al
  43650d:	add    BYTE PTR [rax],al
  43650f:	add    BYTE PTR [rdx+0x4350],bh
  436515:	add    BYTE PTR [rax],al
  436517:	add    BYTE PTR [rbx],al
  436519:	add    BYTE PTR [rax],al
  43651b:	add    BYTE PTR [rax],al
  43651d:	add    BYTE PTR [rax],al
  43651f:	add    dh,al
  436521:	push   rax
  436522:	rex.XB add BYTE PTR [r8],al
  436525:	add    BYTE PTR [rax],al
  436527:	add    BYTE PTR [rbp+0x0],ah
  43652a:	add    BYTE PTR [rax],al
  43652c:	add    BYTE PTR [rax],al
  43652e:	add    BYTE PTR [rax],al
  436530:	fcom   DWORD PTR [rax+0x43]
  436533:	add    BYTE PTR [rax],al
  436535:	add    BYTE PTR [rax],al
  436537:	add    BYTE PTR [rbx],al
  436539:	add    BYTE PTR [rax],al
  43653b:	add    BYTE PTR [rax],al
  43653d:	add    BYTE PTR [rax],al
  43653f:	add    bl,ah
  436541:	push   rax
  436542:	rex.XB add BYTE PTR [r8],al
  436545:	add    BYTE PTR [rax],al
  436547:	add    BYTE PTR [rdx],al
  436549:	add    BYTE PTR [rax],al
  43654b:	add    BYTE PTR [rax],al
  43654d:	add    BYTE PTR [rax],al
  43654f:	add    cl,dh
  436551:	push   rax
  436552:	rex.XB add BYTE PTR [r8],al
  436555:	add    BYTE PTR [rax],al
  436557:	add    BYTE PTR [rsi+0x0],bl
  43655a:	add    BYTE PTR [rax],al
  43655c:	add    BYTE PTR [rax],al
  43655e:	add    BYTE PTR [rax],al
  436560:	hlt    
  436561:	push   rax
  436562:	rex.XB add BYTE PTR [r8],al
  436565:	add    BYTE PTR [rax],al
  436567:	add    BYTE PTR [rsi+0x0],bl
  43656a:	add    BYTE PTR [rax],al
  43656c:	add    BYTE PTR [rax],al
  43656e:	add    BYTE PTR [rax],al
  436570:	std    
  436571:	push   rax
  436572:	rex.XB add BYTE PTR [r8],al
  436575:	add    BYTE PTR [rax],al
  436577:	add    BYTE PTR [rdi+0x0],bl
  43657a:	add    BYTE PTR [rax],al
  43657c:	add    BYTE PTR [rax],al
  43657e:	add    BYTE PTR [rax],al
  436580:	add    al,0x51
  436582:	rex.XB add BYTE PTR [r8],al
  436585:	add    BYTE PTR [rax],al
  436587:	add    BYTE PTR [rax+0x0],ah
  43658a:	add    BYTE PTR [rax],al
  43658c:	add    BYTE PTR [rax],al
  43658e:	add    BYTE PTR [rax],al
  436590:	or     eax,0x4351
  436595:	add    BYTE PTR [rax],al
  436597:	add    BYTE PTR [rcx+0x0],ah
  43659a:	add    BYTE PTR [rax],al
  43659c:	add    BYTE PTR [rax],al
  43659e:	add    BYTE PTR [rax],al
  4365a0:	(bad)  
  4365a1:	push   rcx
  4365a2:	rex.XB add BYTE PTR [r8],al
  4365a5:	add    BYTE PTR [rax],al
  4365a7:	add    BYTE PTR [rdx+0x0],ah
  4365aa:	add    BYTE PTR [rax],al
  4365ac:	add    BYTE PTR [rax],al
  4365ae:	add    BYTE PTR [rax],al
  4365b0:	sbb    eax,0x4351
  4365b5:	add    BYTE PTR [rax],al
  4365b7:	add    BYTE PTR [rbx+0x0],ah
  4365ba:	add    BYTE PTR [rax],al
  4365bc:	add    BYTE PTR [rax],al
  4365be:	add    BYTE PTR [rax],al
  4365c0:	es push rcx
  4365c2:	rex.XB add BYTE PTR [r8],al
  4365c5:	add    BYTE PTR [rax],al
  4365c7:	add    BYTE PTR [rax+rax*1+0x0],ah
  4365cb:	add    BYTE PTR [rax],al
  4365cd:	add    BYTE PTR [rax],al
  4365cf:	add    BYTE PTR [rdi],ch
  4365d1:	push   rcx
  4365d2:	rex.XB add BYTE PTR [r8],al
  4365d5:	add    BYTE PTR [rax],al
  4365d7:	add    BYTE PTR [rbp+0x0],ah
  4365da:	add    BYTE PTR [rax],al
  4365dc:	add    BYTE PTR [rax],al
  4365de:	add    BYTE PTR [rax],al
  4365e0:	in     eax,dx
  4365e1:	rex.XB add BYTE PTR ds:[r8],al
  4365e5:	add    BYTE PTR [rax],al
  4365e7:	add    BYTE PTR [rcx],al
  4365e9:	add    BYTE PTR [rax],al
  4365eb:	add    BYTE PTR [rax],al
  4365ed:	add    BYTE PTR [rax],al
  4365ef:	add    BYTE PTR [rip+0x4351],dh        # 0x43a946
  4365f5:	add    BYTE PTR [rax],al
  4365f7:	add    BYTE PTR [rdi+0x0],bl
  4365fa:	add    BYTE PTR [rax],al
  4365fc:	add    BYTE PTR [rax],al
  4365fe:	add    BYTE PTR [rax],al
  436600:	cmp    edx,DWORD PTR [rcx+0x43]
  436603:	add    BYTE PTR [rax],al
  436605:	add    BYTE PTR [rax],al
  436607:	add    BYTE PTR [rbp+0x0],ah
  43660a:	add    BYTE PTR [rax],al
  43660c:	add    BYTE PTR [rax],al
  43660e:	add    BYTE PTR [rax],al
  436610:	rex push rcx
  436612:	rex.XB add BYTE PTR [r8],al
  436615:	add    BYTE PTR [rax],al
  436617:	add    BYTE PTR [rcx],al
  436619:	add    BYTE PTR [rax],al
  43661b:	add    BYTE PTR [rax],al
  43661d:	add    BYTE PTR [rax],al
  43661f:	add    BYTE PTR [rbp+0x51],al
  436622:	rex.XB add BYTE PTR [r8],al
  436625:	add    BYTE PTR [rax],al
  436627:	add    BYTE PTR [rsi+0x0],ah
  43662a:	add    BYTE PTR [rax],al
  43662c:	add    BYTE PTR [rax],al
  43662e:	add    BYTE PTR [rax],al
  436630:	rex.WR push rcx
  436632:	rex.XB add BYTE PTR [r8],al
  436635:	add    BYTE PTR [rax],al
  436637:	add    BYTE PTR [rsi+0x0],ah
  43663a:	add    BYTE PTR [rax],al
  43663c:	add    BYTE PTR [rax],al
  43663e:	add    BYTE PTR [rax],al
  436640:	pop    rax
  436641:	push   rcx
  436642:	rex.XB add BYTE PTR [r8],al
  436645:	add    BYTE PTR [rax],al
  436647:	add    BYTE PTR [rax+rax*1],dl
  43664a:	add    BYTE PTR [rax],al
  43664c:	add    BYTE PTR [rax],al
  43664e:	add    BYTE PTR [rax],al
  436650:	movsxd edx,DWORD PTR [rcx+0x43]
  436653:	add    BYTE PTR [rax],al
  436655:	add    BYTE PTR [rax],al
  436657:	add    BYTE PTR [rip+0x0],cl        # 0x43665d
  43665d:	add    BYTE PTR [rax],al
  43665f:	add    BYTE PTR [rax+0x51],dh
  436662:	rex.XB add BYTE PTR [r8],al
  436665:	add    BYTE PTR [rax],al
  436667:	add    BYTE PTR [rsi],cl
  436669:	add    BYTE PTR [rax],al
  43666b:	add    BYTE PTR [rax],al
  43666d:	add    BYTE PTR [rax],al
  43666f:	add    BYTE PTR [rbp+0x51],bh
  436672:	rex.XB add BYTE PTR [r8],al
  436675:	add    BYTE PTR [rax],al
  436677:	add    BYTE PTR [rdi],cl
  436679:	add    BYTE PTR [rax],al
  43667b:	add    BYTE PTR [rax],al
  43667d:	add    BYTE PTR [rax],al
  43667f:	add    BYTE PTR [rdx+0x4351],cl
  436685:	add    BYTE PTR [rax],al
  436687:	add    BYTE PTR [rax],dl
  436689:	add    BYTE PTR [rax],al
  43668b:	add    BYTE PTR [rax],al
  43668d:	add    BYTE PTR [rax],al
  43668f:	add    BYTE PTR [rdi+0x4351],dl
  436695:	add    BYTE PTR [rax],al
  436697:	add    BYTE PTR [rcx],dl
  436699:	add    BYTE PTR [rax],al
  43669b:	add    BYTE PTR [rax],al
  43669d:	add    BYTE PTR [rax],al
  43669f:	add    BYTE PTR [rcx+rdx*2+0x43],ah
  4366a6:	add    BYTE PTR [rax],al
  4366a8:	adc    al,BYTE PTR [rax]
  4366aa:	add    BYTE PTR [rax],al
  4366ac:	add    BYTE PTR [rax],al
  4366ae:	add    BYTE PTR [rax],al
  4366b0:	mov    cl,0x51
  4366b2:	rex.XB add BYTE PTR [r8],al
  4366b5:	add    BYTE PTR [rax],al
  4366b7:	add    BYTE PTR [rbx],dl
  4366b9:	add    BYTE PTR [rax],al
  4366bb:	add    BYTE PTR [rax],al
  4366bd:	add    BYTE PTR [rax],al
  4366bf:	add    BYTE PTR [rsi+0x4351],bh
  4366c5:	add    BYTE PTR [rax],al
  4366c7:	add    BYTE PTR [rax+rax*1],dl
  4366ca:	add    BYTE PTR [rax],al
  4366cc:	add    BYTE PTR [rax],al
  4366ce:	add    BYTE PTR [rax],al
  4366d0:	retf   
  4366d1:	push   rcx
  4366d2:	rex.XB add BYTE PTR [r8],al
  4366d5:	add    BYTE PTR [rax],al
  4366d7:	add    BYTE PTR [rip+0x0],dl        # 0x4366dd
  4366dd:	add    BYTE PTR [rax],al
  4366df:	add    al,bl
  4366e1:	push   rcx
  4366e2:	rex.XB add BYTE PTR [r8],al
  4366e5:	add    BYTE PTR [rax],al
  4366e7:	add    BYTE PTR [rbx],bl
  4366e9:	add    BYTE PTR [rax],al
  4366eb:	add    BYTE PTR [rax],al
  4366ed:	add    BYTE PTR [rax],al
  4366ef:	add    ah,ah
  4366f1:	push   rcx
  4366f2:	rex.XB add BYTE PTR [r8],al
  4366f5:	add    BYTE PTR [rax],al
  4366f7:	add    BYTE PTR [rax+0x0],al
  4366fa:	add    BYTE PTR [rax],al
  4366fc:	add    BYTE PTR [rax],al
  4366fe:	add    BYTE PTR [rax],al
  436700:	(bad)  
  436701:	push   rcx
  436702:	rex.XB add BYTE PTR [r8],al
  436705:	add    BYTE PTR [rax],al
  436707:	add    BYTE PTR [rsi],bh
  436709:	add    BYTE PTR [rax],al
  43670b:	add    BYTE PTR [rax],al
  43670d:	add    BYTE PTR [rax],al
  43670f:	add    al,dh
  436711:	push   rcx
  436712:	rex.XB add BYTE PTR [r8],al
  436715:	add    BYTE PTR [rax],al
  436717:	add    BYTE PTR [rax+rax*1],bh
  43671a:	add    BYTE PTR [rax],al
  43671c:	add    BYTE PTR [rax],al
  43671e:	add    BYTE PTR [rax],al
  436720:	rex
  436721:	rex.B
  436722:	rex.XB add BYTE PTR [r8],al
  436725:	add    BYTE PTR [rax],al
  436727:	add    BYTE PTR [rip+0x0],al        # 0x43672d
  43672d:	add    BYTE PTR [rax],al
  43672f:	add    BYTE PTR [rbp+0x41],al
  436732:	rex.XB add BYTE PTR [r8],al
  436735:	add    BYTE PTR [rax],al
  436737:	add    BYTE PTR [rip+0x0],cl        # 0x43673d
  43673d:	add    BYTE PTR [rax],al
  43673f:	add    BYTE PTR [rcx+rax*2+0x43],cl
  436743:	add    BYTE PTR [rax],al
  436745:	add    BYTE PTR [rax],al
  436747:	add    BYTE PTR [rsi],cl
  436749:	add    BYTE PTR [rax],al
  43674b:	add    BYTE PTR [rax],al
  43674d:	add    BYTE PTR [rax],al
  43674f:	add    BYTE PTR [rbx+0x41],dl
  436752:	rex.XB add BYTE PTR [r8],al
  436755:	add    BYTE PTR [rax],al
  436757:	add    BYTE PTR [rdi],cl
  436759:	add    BYTE PTR [rax],al
  43675b:	add    BYTE PTR [rax],al
  43675d:	add    BYTE PTR [rax],al
  43675f:	add    BYTE PTR [rdx+0x41],bl
  436762:	rex.XB add BYTE PTR [r8],al
  436765:	add    BYTE PTR [rax],al
  436767:	add    BYTE PTR [rax],dl
  436769:	add    BYTE PTR [rax],al
  43676b:	add    BYTE PTR [rax],al
  43676d:	add    BYTE PTR [rax],al
  43676f:	add    BYTE PTR [rcx+0x41],ah
  436772:	rex.XB add BYTE PTR [r8],al
  436775:	add    BYTE PTR [rax],al
  436777:	add    BYTE PTR [rcx],dl
  436779:	add    BYTE PTR [rax],al
  43677b:	add    BYTE PTR [rax],al
  43677d:	add    BYTE PTR [rax],al
  43677f:	add    BYTE PTR [rax+0x41],ch
  436782:	rex.XB add BYTE PTR [r8],al
  436785:	add    BYTE PTR [rax],al
  436787:	add    BYTE PTR [rdx],dl
  436789:	add    BYTE PTR [rax],al
  43678b:	add    BYTE PTR [rax],al
  43678d:	add    BYTE PTR [rax],al
  43678f:	add    BYTE PTR [rdi+0x41],ch
  436792:	rex.XB add BYTE PTR [r8],al
  436795:	add    BYTE PTR [rax],al
  436797:	add    BYTE PTR [rbx],dl
  436799:	add    BYTE PTR [rax],al
  43679b:	add    BYTE PTR [rax],al
  43679d:	add    BYTE PTR [rax],al
  43679f:	add    BYTE PTR [rsi+0x41],dh
  4367a2:	rex.XB add BYTE PTR [r8],al
  4367a5:	add    BYTE PTR [rax],al
  4367a7:	add    BYTE PTR [rax+rax*1],dl
  4367aa:	add    BYTE PTR [rax],al
  4367ac:	add    BYTE PTR [rax],al
  4367ae:	add    BYTE PTR [rax],al
  4367b0:	jge    0x4367f3
  4367b2:	rex.XB add BYTE PTR [r8],al
  4367b5:	add    BYTE PTR [rax],al
  4367b7:	add    BYTE PTR [rip+0x0],dl        # 0x4367bd
  4367bd:	add    BYTE PTR [rax],al
  4367bf:	add    BYTE PTR [rcx+rax*2+0x43],al
  4367c6:	add    BYTE PTR [rax],al
  4367c8:	(bad)  
  4367c9:	add    BYTE PTR [rax],al
  4367cb:	add    BYTE PTR [rax],al
  4367cd:	add    BYTE PTR [rax],al
  4367cf:	add    BYTE PTR [rdx+0x4341],cl
  4367d5:	add    BYTE PTR [rax],al
  4367d7:	add    BYTE PTR [rax],bl
  4367d9:	add    BYTE PTR [rax],al
  4367db:	add    BYTE PTR [rax],al
  4367dd:	add    BYTE PTR [rax],al
  4367df:	add    BYTE PTR [rax+0x4341],dl
  4367e5:	add    BYTE PTR [rax],al
  4367e7:	add    BYTE PTR [rcx],bl
  4367e9:	add    BYTE PTR [rax],al
  4367eb:	add    BYTE PTR [rax],al
  4367ed:	add    BYTE PTR [rax],al
  4367ef:	add    BYTE PTR [rsi+0x4341],dl
  4367f5:	add    BYTE PTR [rax],al
  4367f7:	add    BYTE PTR [rdx],bl
  4367f9:	add    BYTE PTR [rax],al
  4367fb:	add    BYTE PTR [rax],al
  4367fd:	add    BYTE PTR [rax],al
  4367ff:	add    BYTE PTR [rcx+rax*2+0x43],bl
  436806:	add    BYTE PTR [rax],al
  436808:	sbb    eax,DWORD PTR [rax]
  43680a:	add    BYTE PTR [rax],al
  43680c:	add    BYTE PTR [rax],al
  43680e:	add    BYTE PTR [rax],al
  436810:	not    BYTE PTR [rcx+0x43]
  436813:	add    BYTE PTR [rax],al
  436815:	add    BYTE PTR [rax],al
  436817:	add    BYTE PTR [rax],ah
  436819:	add    BYTE PTR [rax],al
  43681b:	add    BYTE PTR [rax],al
  43681d:	add    BYTE PTR [rax],al
  43681f:	add    ah,bh
  436821:	push   rcx
  436822:	rex.XB add BYTE PTR [r8],al
  436825:	add    BYTE PTR [rax],al
  436827:	add    BYTE PTR [rcx],ah
  436829:	add    BYTE PTR [rax],al
  43682b:	add    BYTE PTR [rax],al
  43682d:	add    BYTE PTR [rax],al
  43682f:	add    BYTE PTR [rdx],al
  436831:	push   rdx
  436832:	rex.XB add BYTE PTR [r8],al
  436835:	add    BYTE PTR [rax],al
  436837:	add    BYTE PTR [rdx],ah
  436839:	add    BYTE PTR [rax],al
  43683b:	add    BYTE PTR [rax],al
  43683d:	add    BYTE PTR [rax],al
  43683f:	add    BYTE PTR [rax],cl
  436841:	push   rdx
  436842:	rex.XB add BYTE PTR [r8],al
  436845:	add    BYTE PTR [rax],al
  436847:	add    BYTE PTR [rax],cl
  436849:	add    BYTE PTR [rax],al
  43684b:	add    BYTE PTR [rax],al
  43684d:	add    BYTE PTR [rax],al
  43684f:	add    BYTE PTR [rdi],cl
  436851:	push   rdx
  436852:	rex.XB add BYTE PTR [r8],al
	...
  43685d:	add    BYTE PTR [rax],al
  43685f:	add    BYTE PTR [rip+0x4352],dl        # 0x43abb7
  436865:	add    BYTE PTR [rax],al
  436867:	add    BYTE PTR [rax],dh
  436869:	add    BYTE PTR [rax],al
  43686b:	add    BYTE PTR [rax],al
  43686d:	add    BYTE PTR [rax],al
  43686f:	add    BYTE PTR [rdx+rdx*2],bl
  436872:	rex.XB add BYTE PTR [r8],al
  436875:	add    BYTE PTR [rax],al
  436877:	add    BYTE PTR [rdx],dh
  436879:	add    BYTE PTR [rax],al
  43687b:	add    BYTE PTR [rax],al
  43687d:	add    BYTE PTR [rax],al
  43687f:	add    BYTE PTR [rdx],ah
  436881:	push   rdx
  436882:	rex.XB add BYTE PTR [r8],al
  436885:	add    BYTE PTR [rax],al
  436887:	add    BYTE PTR [rbx],dh
  436889:	add    BYTE PTR [rax],al
  43688b:	add    BYTE PTR [rax],al
  43688d:	add    BYTE PTR [rax],al
  43688f:	add    BYTE PTR [rax],ch
  436891:	push   rdx
  436892:	rex.XB add BYTE PTR [r8],al
  436895:	add    BYTE PTR [rax],al
  436897:	add    BYTE PTR [rax+rax*1],dh
  43689a:	add    BYTE PTR [rax],al
  43689c:	add    BYTE PTR [rax],al
  43689e:	add    BYTE PTR [rax],al
  4368a0:	cs push rdx
  4368a2:	rex.XB add BYTE PTR [r8],al
  4368a5:	add    BYTE PTR [rax],al
  4368a7:	add    BYTE PTR [rip+0x0],dh        # 0x4368ad
  4368ad:	add    BYTE PTR [rax],al
  4368af:	add    BYTE PTR [rdx+rdx*2],dh
  4368b2:	rex.XB add BYTE PTR [r8],al
  4368b5:	add    BYTE PTR [rax],al
  4368b7:	add    BYTE PTR [rsi],dh
  4368b9:	add    BYTE PTR [rax],al
  4368bb:	add    BYTE PTR [rax],al
  4368bd:	add    BYTE PTR [rax],al
  4368bf:	add    BYTE PTR [rdx],bh
  4368c1:	push   rdx
  4368c2:	rex.XB add BYTE PTR [r8],al
  4368c5:	add    BYTE PTR [rax],al
  4368c7:	add    BYTE PTR [rdi],dh
  4368c9:	add    BYTE PTR [rax],al
  4368cb:	add    BYTE PTR [rax],al
  4368cd:	add    BYTE PTR [rax],al
  4368cf:	add    BYTE PTR [rax+0x52],al
  4368d2:	rex.XB add BYTE PTR [r8],al
  4368d5:	add    BYTE PTR [rax],al
  4368d7:	add    BYTE PTR [rax],bh
  4368d9:	add    BYTE PTR [rax],al
  4368db:	add    BYTE PTR [rax],al
  4368dd:	add    BYTE PTR [rax],al
  4368df:	add    BYTE PTR [rsi+0x52],al
  4368e2:	rex.XB add BYTE PTR [r8],al
	...
  4368ed:	add    BYTE PTR [rax],al
  4368ef:	add    BYTE PTR [rdi+0x52],cl
  4368f2:	rex.XB add BYTE PTR [r8],al
  4368f5:	add    BYTE PTR [rax],al
  4368f7:	add    BYTE PTR [rax],dh
  4368f9:	add    BYTE PTR [rax],al
  4368fb:	add    BYTE PTR [rax],al
  4368fd:	add    BYTE PTR [rax],al
  4368ff:	add    al,ah
  436901:	rex.B
  436902:	rex.XB add BYTE PTR [r8],al
  436905:	add    BYTE PTR [rax],al
  436907:	add    BYTE PTR [rdx],dh
  436909:	add    BYTE PTR [rax],al
  43690b:	add    BYTE PTR [rax],al
  43690d:	add    BYTE PTR [rax],al
  43690f:	add    BYTE PTR [rcx+0x52],bl
  436912:	rex.XB add BYTE PTR [r8],al
  436915:	add    BYTE PTR [rax],al
  436917:	add    BYTE PTR [rbx],dh
  436919:	add    BYTE PTR [rax],al
  43691b:	add    BYTE PTR [rax],al
  43691d:	add    BYTE PTR [rax],al
  43691f:	add    BYTE PTR [rdx+0x52],ah
  436922:	rex.XB add BYTE PTR [r8],al
  436925:	add    BYTE PTR [rax],al
  436927:	add    BYTE PTR [rax+rax*1],dh
  43692a:	add    BYTE PTR [rax],al
  43692c:	add    BYTE PTR [rax],al
  43692e:	add    BYTE PTR [rax],al
  436930:	jmp    0x43ac76
  436935:	add    BYTE PTR [rax],al
  436937:	add    BYTE PTR [rip+0x0],dh        # 0x43693d
  43693d:	add    BYTE PTR [rax],al
  43693f:	add    dl,dh
  436941:	rex.B
  436942:	rex.XB add BYTE PTR [r8],al
  436945:	add    BYTE PTR [rax],al
  436947:	add    BYTE PTR [rsi],dh
  436949:	add    BYTE PTR [rax],al
  43694b:	add    BYTE PTR [rax],al
  43694d:	add    BYTE PTR [rax],al
  43694f:	add    bl,bh
  436951:	rex.B
  436952:	rex.XB add BYTE PTR [r8],al
  436955:	add    BYTE PTR [rax],al
  436957:	add    BYTE PTR [rdi],dh
  436959:	add    BYTE PTR [rax],al
  43695b:	add    BYTE PTR [rax],al
  43695d:	add    BYTE PTR [rax],al
  43695f:	add    BYTE PTR [rdx+rax*2],al
  436962:	rex.XB add BYTE PTR [r8],al
  436965:	add    BYTE PTR [rax],al
  436967:	add    BYTE PTR [rax],bh
  436969:	add    BYTE PTR [rax],al
  43696b:	add    BYTE PTR [rax],al
  43696d:	add    BYTE PTR [rax],al
  43696f:	add    BYTE PTR [rip+0x4342],cl        # 0x43acb7
  436975:	add    BYTE PTR [rax],al
  436977:	add    BYTE PTR [rcx],bh
  436979:	add    BYTE PTR [rax],al
  43697b:	add    BYTE PTR [rax],al
  43697d:	add    BYTE PTR [rax],al
  43697f:	add    BYTE PTR [rbx+0x52],ch
  436982:	rex.XB add BYTE PTR [r8],al
  436985:	add    BYTE PTR [rax],al
  436987:	add    BYTE PTR [rcx],bh
  436989:	add    BYTE PTR [rax],al
  43698b:	add    BYTE PTR [rax],al
  43698d:	add    BYTE PTR [rax],al
  43698f:	add    BYTE PTR [rcx+0x52],dh
  436992:	rex.XB add BYTE PTR [r8],al
  436995:	add    BYTE PTR [rax],al
  436997:	add    BYTE PTR [rbx+0x0],dl
  43699a:	add    BYTE PTR [rax],al
  43699c:	add    BYTE PTR [rax],al
  43699e:	add    BYTE PTR [rax],al
  4369a0:	rex.RX
  4369a1:	rex.X
  4369a2:	rex.XB add BYTE PTR [r8],al
  4369a5:	add    BYTE PTR [rax],al
  4369a7:	add    BYTE PTR [rbx+0x0],dl
  4369aa:	add    BYTE PTR [rax],al
  4369ac:	add    BYTE PTR [rax],al
  4369ae:	add    BYTE PTR [rax],al
  4369b0:	rex.WRB
  4369b1:	rex.X
  4369b2:	rex.XB add BYTE PTR [r8],al
  4369b5:	add    BYTE PTR [rax],al
  4369b7:	add    BYTE PTR [rax+rax*1+0x0],dl
  4369bb:	add    BYTE PTR [rax],al
  4369bd:	add    BYTE PTR [rax],al
  4369bf:	add    BYTE PTR [rdi+0x52],dh
  4369c2:	rex.XB add BYTE PTR [r8],al
  4369c5:	add    BYTE PTR [rax],al
  4369c7:	add    BYTE PTR [rip+0x0],bh        # 0x4369cd
  4369cd:	add    BYTE PTR [rax],al
  4369cf:	add    BYTE PTR [rdx+0x42],dl
  4369d2:	rex.XB add BYTE PTR [r8],al
  4369d5:	add    BYTE PTR [rax],al
  4369d7:	add    BYTE PTR [rip+0x0],bh        # 0x4369dd
  4369dd:	add    BYTE PTR [rax],al
  4369df:	add    BYTE PTR [rbp+0x52],bh
  4369e2:	rex.XB add BYTE PTR [r8],al
  4369e5:	add    BYTE PTR [rax],al
  4369e7:	add    BYTE PTR [rsi+0x0],dl
  4369ea:	add    BYTE PTR [rax],al
  4369ec:	add    BYTE PTR [rax],al
  4369ee:	add    BYTE PTR [rax],al
  4369f0:	(bad)  
  4369f1:	push   rdx
  4369f2:	rex.XB add BYTE PTR [r8],al
  4369f5:	add    BYTE PTR [rax],al
  4369f7:	add    BYTE PTR [rcx+0x0],bl
  4369fa:	add    BYTE PTR [rax],al
  4369fc:	add    BYTE PTR [rax],al
  4369fe:	add    BYTE PTR [rax],al
  436a00:	pop    rcx
  436a01:	rex.X
  436a02:	rex.XB add BYTE PTR [r8],al
  436a05:	add    BYTE PTR [rax],al
  436a07:	add    BYTE PTR [rcx],al
	...
  436a3d:	add    BYTE PTR [rax],al
  436a3f:	add    BYTE PTR [rdx+0x3d],dl
  436a42:	rex.XB add BYTE PTR [r8],al
  436a45:	add    BYTE PTR [rax],al
  436a47:	add    BYTE PTR [rcx],al
  436a49:	add    DWORD PTR [rax],eax
  436a4b:	add    BYTE PTR [rax],al
  436a4d:	add    BYTE PTR [rax],al
  436a4f:	add    ch,ch
  436a51:	rex.XB add BYTE PTR ds:[r8],al
  436a55:	add    BYTE PTR [rax],al
  436a57:	add    BYTE PTR [rcx],al
  436a59:	add    al,0x1
  436a5b:	add    BYTE PTR [rax],al
  436a5d:	add    BYTE PTR [rax],al
  436a5f:	add    bl,dh
  436a61:	rex.XB add BYTE PTR ds:[r8],al
  436a65:	add    BYTE PTR [rax],al
  436a67:	add    BYTE PTR [rdx],al
  436a69:	add    al,BYTE PTR [rdx]
  436a6b:	add    BYTE PTR [rax],al
  436a6d:	add    BYTE PTR [rax],al
  436a6f:	add    bl,bh
  436a71:	rex.XB add BYTE PTR ds:[r8],al
  436a75:	add    BYTE PTR [rax],al
  436a77:	add    BYTE PTR [rdx],al
  436a79:	add    al,BYTE PTR [rbx]
  436a7b:	add    BYTE PTR [rax],al
  436a7d:	add    BYTE PTR [rax],al
  436a7f:	add    BYTE PTR [rcx+0x45],dh
  436a82:	rex.XB add BYTE PTR [r8],al
  436a85:	add    BYTE PTR [rax],al
  436a87:	add    BYTE PTR [rcx],al
  436a89:	add    DWORD PTR [rax+rax*1],eax
  436a8c:	add    BYTE PTR [rax],al
  436a8e:	add    BYTE PTR [rax],al
  436a90:	mov    al,BYTE PTR [rbp+0x43]
  436a93:	add    BYTE PTR [rax],al
  436a95:	add    BYTE PTR [rax],al
  436a97:	add    BYTE PTR [rcx],al
  436a99:	add    al,BYTE PTR [rip+0x0]        # 0x436a9f
  436a9f:	add    BYTE PTR [rsi+0x4345],bl
  436aa5:	add    BYTE PTR [rax],al
  436aa7:	add    BYTE PTR [rcx],al
  436aa9:	add    al,BYTE PTR [rsi]
  436aab:	add    BYTE PTR [rax],al
  436aad:	add    BYTE PTR [rax],al
  436aaf:	add    BYTE PTR [rbx+0x4345],bh
  436ab5:	add    BYTE PTR [rax],al
  436ab7:	add    BYTE PTR [rcx],al
  436ab9:	add    DWORD PTR [rdi],eax
  436abb:	add    BYTE PTR [rax],al
  436abd:	add    BYTE PTR [rax],al
  436abf:	add    BYTE PTR [rdi+0x4345],bh
  436ac5:	add    BYTE PTR [rax],al
  436ac7:	add    BYTE PTR [rcx],al
  436ac9:	add    DWORD PTR [rax],ecx
  436acb:	add    BYTE PTR [rax],al
  436acd:	add    BYTE PTR [rax],al
  436acf:	add    bh,al
  436ad1:	rex.RB
  436ad2:	rex.XB add BYTE PTR [r8],al
  436ad5:	add    BYTE PTR [rax],al
  436ad7:	add    BYTE PTR [rcx],al
  436ad9:	add    DWORD PTR [rcx],ecx
  436adb:	add    BYTE PTR [rax],al
  436add:	add    BYTE PTR [rax],al
  436adf:	add    dl,dl
  436ae1:	rex.RB
  436ae2:	rex.XB add BYTE PTR [r8],al
  436ae5:	add    BYTE PTR [rax],al
  436ae7:	add    BYTE PTR [rcx],al
  436ae9:	add    cl,BYTE PTR [rdx]
  436aeb:	add    BYTE PTR [rax],al
  436aed:	add    BYTE PTR [rax],al
  436aef:	add    al,bl
  436af1:	rex.RB
  436af2:	rex.XB add BYTE PTR [r8],al
  436af5:	add    BYTE PTR [rax],al
  436af7:	add    BYTE PTR [rcx],al
  436af9:	add    DWORD PTR [rbx],ecx
  436afb:	add    BYTE PTR [rax],al
  436afd:	add    BYTE PTR [rax],al
  436aff:	add    bh,ah
  436b01:	rex.RB
  436b02:	rex.XB add BYTE PTR [r8],al
  436b05:	add    BYTE PTR [rax],al
  436b07:	add    BYTE PTR [rcx],al
  436b09:	add    DWORD PTR [rax+rax*1],ecx
  436b0c:	add    BYTE PTR [rax],al
  436b0e:	add    BYTE PTR [rax],al
  436b10:	out    dx,al
  436b11:	rex.RB
  436b12:	rex.XB add BYTE PTR [r8],al
  436b15:	add    BYTE PTR [rax],al
  436b17:	add    BYTE PTR [rcx],al
  436b19:	add    DWORD PTR [rip+0x0],ecx        # 0x436b1f
  436b1f:	add    ch,dh
  436b21:	rex.RB
  436b22:	rex.XB add BYTE PTR [r8],al
  436b25:	add    BYTE PTR [rax],al
  436b27:	add    BYTE PTR [rcx],al
  436b29:	add    DWORD PTR [rsi],ecx
  436b2b:	add    BYTE PTR [rax],al
  436b2d:	add    BYTE PTR [rax],al
  436b2f:	add    ah,bh
  436b31:	rex.RB
  436b32:	rex.XB add BYTE PTR [r8],al
  436b35:	add    BYTE PTR [rax],al
  436b37:	add    BYTE PTR [rcx],al
  436b39:	add    DWORD PTR [rdi],ecx
  436b3b:	add    BYTE PTR [rax],al
  436b3d:	add    BYTE PTR [rax],al
  436b3f:	add    BYTE PTR [rbx],al
  436b41:	rex.RX
  436b42:	rex.XB add BYTE PTR [r8],al
  436b45:	add    BYTE PTR [rax],al
  436b47:	add    BYTE PTR [rcx],al
  436b49:	add    DWORD PTR [rax],edx
  436b4b:	add    BYTE PTR [rax],al
  436b4d:	add    BYTE PTR [rax],al
  436b4f:	add    BYTE PTR [rdx],cl
  436b51:	rex.RX
  436b52:	rex.XB add BYTE PTR [r8],al
  436b55:	add    BYTE PTR [rax],al
  436b57:	add    BYTE PTR [rcx],al
  436b59:	add    DWORD PTR [rcx],edx
  436b5b:	add    BYTE PTR [rax],al
  436b5d:	add    BYTE PTR [rax],al
  436b5f:	add    BYTE PTR [rcx],dl
  436b61:	rex.RX
  436b62:	rex.XB add BYTE PTR [r8],al
  436b65:	add    BYTE PTR [rax],al
  436b67:	add    BYTE PTR [rcx],al
  436b69:	add    DWORD PTR [rdx],edx
  436b6b:	add    BYTE PTR [rax],al
  436b6d:	add    BYTE PTR [rax],al
  436b6f:	add    BYTE PTR [rax],bl
  436b71:	rex.RX
  436b72:	rex.XB add BYTE PTR [r8],al
  436b75:	add    BYTE PTR [rax],al
  436b77:	add    BYTE PTR [rcx],al
  436b79:	add    DWORD PTR [rbx],edx
  436b7b:	add    BYTE PTR [rax],al
  436b7d:	add    BYTE PTR [rax],al
  436b7f:	add    BYTE PTR [rdi],bl
  436b81:	rex.RX
  436b82:	rex.XB add BYTE PTR [r8],al
  436b85:	add    BYTE PTR [rax],al
  436b87:	add    BYTE PTR [rcx],al
  436b89:	add    DWORD PTR [rax+rax*1],edx
  436b8c:	add    BYTE PTR [rax],al
  436b8e:	add    BYTE PTR [rax],al
  436b90:	es rex.RX
  436b92:	rex.XB add BYTE PTR [r8],al
  436b95:	add    BYTE PTR [rax],al
  436b97:	add    BYTE PTR [rcx],al
  436b99:	add    DWORD PTR [rip+0x0],edx        # 0x436b9f
  436b9f:	add    BYTE PTR [rip+0x4346],ch        # 0x43aeeb
  436ba5:	add    BYTE PTR [rax],al
  436ba7:	add    BYTE PTR [rcx],al
  436ba9:	add    dl,BYTE PTR [rsi]
  436bab:	add    BYTE PTR [rax],al
  436bad:	add    BYTE PTR [rax],al
  436baf:	add    BYTE PTR [rdx],bh
  436bb1:	rex.RX
  436bb2:	rex.XB add BYTE PTR [r8],al
  436bb5:	add    BYTE PTR [rax],al
  436bb7:	add    BYTE PTR [rcx],al
  436bb9:	add    DWORD PTR [rdi],edx
  436bbb:	add    BYTE PTR [rax],al
  436bbd:	add    BYTE PTR [rax],al
  436bbf:	add    BYTE PTR [rsi+0x46],al
  436bc2:	rex.XB add BYTE PTR [r8],al
  436bc5:	add    BYTE PTR [rax],al
  436bc7:	add    BYTE PTR [rcx],al
  436bc9:	add    DWORD PTR [rax],ebx
  436bcb:	add    BYTE PTR [rax],al
  436bcd:	add    BYTE PTR [rax],al
  436bcf:	add    BYTE PTR [rsi+rax*2+0x43],cl
  436bd3:	add    BYTE PTR [rax],al
  436bd5:	add    BYTE PTR [rax],al
  436bd7:	add    BYTE PTR [rcx],al
  436bd9:	add    DWORD PTR [rcx],ebx
  436bdb:	add    BYTE PTR [rax],al
  436bdd:	add    BYTE PTR [rax],al
  436bdf:	add    BYTE PTR [rdx+0x46],dl
  436be2:	rex.XB add BYTE PTR [r8],al
  436be5:	add    BYTE PTR [rax],al
  436be7:	add    BYTE PTR [rcx],al
  436be9:	add    DWORD PTR [rdx],ebx
  436beb:	add    BYTE PTR [rax],al
  436bed:	add    BYTE PTR [rax],al
  436bef:	add    BYTE PTR [rax+0x46],bl
  436bf2:	rex.XB add BYTE PTR [r8],al
  436bf5:	add    BYTE PTR [rax],al
  436bf7:	add    BYTE PTR [rcx],al
  436bf9:	add    DWORD PTR [rbx],ebx
  436bfb:	add    BYTE PTR [rax],al
  436bfd:	add    BYTE PTR [rax],al
  436bff:	add    BYTE PTR [rsi+0x46],bl
  436c02:	rex.XB add BYTE PTR [r8],al
  436c05:	add    BYTE PTR [rax],al
  436c07:	add    BYTE PTR [rcx],al
  436c09:	add    bl,BYTE PTR [rax+rax*1]
  436c0c:	add    BYTE PTR [rax],al
  436c0e:	add    BYTE PTR [rax],al
  436c10:	fs rex.RX
  436c12:	rex.XB add BYTE PTR [r8],al
  436c15:	add    BYTE PTR [rax],al
  436c17:	add    BYTE PTR [rcx],al
  436c19:	add    bl,BYTE PTR [rip+0x0]        # 0x436c1f
  436c1f:	add    BYTE PTR [rdx+0x46],ch
  436c22:	rex.XB add BYTE PTR [r8],al
  436c25:	add    BYTE PTR [rax],al
  436c27:	add    BYTE PTR [rcx],al
  436c29:	add    bl,BYTE PTR [rsi]
  436c2b:	add    BYTE PTR [rax],al
  436c2d:	add    BYTE PTR [rax],al
  436c2f:	add    BYTE PTR [rax+0x46],dh
  436c32:	rex.XB add BYTE PTR [r8],al
  436c35:	add    BYTE PTR [rax],al
  436c37:	add    BYTE PTR [rcx],al
  436c39:	add    bl,BYTE PTR [rdi]
  436c3b:	add    BYTE PTR [rax],al
  436c3d:	add    BYTE PTR [rax],al
  436c3f:	add    BYTE PTR [rdx+0x4348],ah
  436c45:	add    BYTE PTR [rax],al
  436c47:	add    BYTE PTR [rcx],al
  436c49:	add    esp,DWORD PTR [rax]
  436c4b:	add    BYTE PTR [rax],al
  436c4d:	add    BYTE PTR [rax],al
  436c4f:	add    BYTE PTR [rcx+0x4348],ch
  436c55:	add    BYTE PTR [rax],al
  436c57:	add    BYTE PTR [rcx],al
  436c59:	add    ah,BYTE PTR [rcx]
  436c5b:	add    BYTE PTR [rax],al
  436c5d:	add    BYTE PTR [rax],al
  436c5f:	add    BYTE PTR [rax+0x4348],dh
  436c65:	add    BYTE PTR [rax],al
  436c67:	add    BYTE PTR [rcx],al
  436c69:	add    al,0x22
  436c6b:	add    BYTE PTR [rax],al
  436c6d:	add    BYTE PTR [rax],al
  436c6f:	add    dh,bh
  436c71:	rex.W
  436c72:	rex.XB add BYTE PTR [r8],al
  436c75:	add    BYTE PTR [rax],al
  436c77:	add    BYTE PTR [rcx],al
  436c79:	add    al,0x23
  436c7b:	add    BYTE PTR [rax],al
  436c7d:	add    BYTE PTR [rax],al
  436c7f:	add    BYTE PTR [rdi],ah
  436c81:	rex.WB
  436c82:	rex.XB add BYTE PTR [r8],al
  436c85:	add    BYTE PTR [rax],al
  436c87:	add    BYTE PTR [rcx],al
  436c89:	add    DWORD PTR [rax+rax*1],esp
  436c8c:	add    BYTE PTR [rax],al
  436c8e:	add    BYTE PTR [rax],al
  436c90:	cmp    BYTE PTR [rcx+0x43],cl
  436c93:	add    BYTE PTR [rax],al
  436c95:	add    BYTE PTR [rax],al
  436c97:	add    BYTE PTR [rcx],al
  436c99:	add    DWORD PTR [rip+0x0],esp        # 0x436c9f
  436c9f:	add    BYTE PTR [rdx+0x49],ah
  436ca2:	rex.XB add BYTE PTR [r8],al
  436ca5:	add    BYTE PTR [rax],al
  436ca7:	add    BYTE PTR [rcx],al
  436ca9:	add    DWORD PTR [rsi],esp
  436cab:	add    BYTE PTR [rax],al
  436cad:	add    BYTE PTR [rax],al
  436caf:	add    ch,al
  436cb1:	rex.WB
  436cb2:	rex.XB add BYTE PTR [r8],al
  436cb5:	add    BYTE PTR [rax],al
  436cb7:	add    BYTE PTR [rcx],al
  436cb9:	add    al,0x27
  436cbb:	add    BYTE PTR [rax],al
  436cbd:	add    BYTE PTR [rax],al
  436cbf:	add    cl,dl
  436cc1:	rex.WB
  436cc2:	rex.XB add BYTE PTR [r8],al
  436cc5:	add    BYTE PTR [rax],al
  436cc7:	add    BYTE PTR [rcx],al
  436cc9:	add    al,0x28
  436ccb:	add    BYTE PTR [rax],al
  436ccd:	add    BYTE PTR [rax],al
  436ccf:	add    cl,ah
  436cd1:	rex.WB
  436cd2:	rex.XB add BYTE PTR [r8],al
  436cd5:	add    BYTE PTR [rax],al
  436cd7:	add    BYTE PTR [rcx],al
  436cd9:	add    DWORD PTR [rcx],ebp
  436cdb:	add    BYTE PTR [rax],al
  436cdd:	add    BYTE PTR [rax],al
  436cdf:	add    ch,ch
  436ce1:	rex.WB
  436ce2:	rex.XB add BYTE PTR [r8],al
  436ce5:	add    BYTE PTR [rax],al
  436ce7:	add    BYTE PTR [rcx],al
  436ce9:	add    DWORD PTR [rdx],ebp
  436ceb:	add    BYTE PTR [rax],al
  436ced:	add    BYTE PTR [rax],al
  436cef:	add    bl,bh
  436cf1:	rex.WB
  436cf2:	rex.XB add BYTE PTR [r8],al
  436cf5:	add    BYTE PTR [rax],al
  436cf7:	add    BYTE PTR [rcx],al
  436cf9:	add    DWORD PTR [rbx],ebp
  436cfb:	add    BYTE PTR [rax],al
  436cfd:	add    BYTE PTR [rax],al
  436cff:	add    BYTE PTR [rcx],cl
  436d01:	rex.WX
  436d02:	rex.XB add BYTE PTR [r8],al
  436d05:	add    BYTE PTR [rax],al
  436d07:	add    BYTE PTR [rcx],al
  436d09:	add    ch,BYTE PTR [rax+rax*1]
  436d0c:	add    BYTE PTR [rax],al
  436d0e:	add    BYTE PTR [rax],al
  436d10:	adc    eax,0x434a
  436d15:	add    BYTE PTR [rax],al
  436d17:	add    BYTE PTR [rcx],al
  436d19:	add    DWORD PTR [rip+0x0],ebp        # 0x436d1f
  436d1f:	add    BYTE PTR [rcx],ah
  436d21:	rex.WX
  436d22:	rex.XB add BYTE PTR [r8],al
  436d25:	add    BYTE PTR [rax],al
  436d27:	add    BYTE PTR [rcx],al
  436d29:	add    DWORD PTR [rsi],ebp
  436d2b:	add    BYTE PTR [rax],al
  436d2d:	add    BYTE PTR [rax],al
  436d2f:	add    BYTE PTR [rip+0x434a],ch        # 0x43b07f
  436d35:	add    BYTE PTR [rax],al
  436d37:	add    BYTE PTR [rcx],al
  436d39:	add    DWORD PTR [rdi],ebp
  436d3b:	add    BYTE PTR [rax],al
  436d3d:	add    BYTE PTR [rax],al
  436d3f:	add    BYTE PTR [rcx],bh
  436d41:	rex.WX
  436d42:	rex.XB add BYTE PTR [r8],al
  436d45:	add    BYTE PTR [rax],al
  436d47:	add    BYTE PTR [rcx],al
  436d49:	add    DWORD PTR [rax],esi
  436d4b:	add    BYTE PTR [rax],al
  436d4d:	add    BYTE PTR [rax],al
  436d4f:	add    BYTE PTR [rbp+0x4a],al
  436d52:	rex.XB add BYTE PTR [r8],al
  436d55:	add    BYTE PTR [rax],al
  436d57:	add    BYTE PTR [rcx],al
  436d59:	add    DWORD PTR [rcx],esi
  436d5b:	add    BYTE PTR [rax],al
  436d5d:	add    BYTE PTR [rax],al
  436d5f:	add    BYTE PTR [rcx+0x4a],dl
  436d62:	rex.XB add BYTE PTR [r8],al
  436d65:	add    BYTE PTR [rax],al
  436d67:	add    BYTE PTR [rcx],al
  436d69:	add    DWORD PTR [rdx],esi
  436d6b:	add    BYTE PTR [rax],al
  436d6d:	add    BYTE PTR [rax],al
  436d6f:	add    BYTE PTR [rdx+rcx*2+0x43],bl
  436d73:	add    BYTE PTR [rax],al
  436d75:	add    BYTE PTR [rax],al
  436d77:	add    BYTE PTR [rcx],al
  436d79:	add    DWORD PTR [rbx],esi
  436d7b:	add    BYTE PTR [rax],al
  436d7d:	add    BYTE PTR [rax],al
  436d7f:	add    BYTE PTR [rdi+0x4a],ah
  436d82:	rex.XB add BYTE PTR [r8],al
  436d85:	add    BYTE PTR [rax],al
  436d87:	add    BYTE PTR [rcx],al
  436d89:	add    DWORD PTR [rax+rax*1],esi
  436d8c:	add    BYTE PTR [rax],al
  436d8e:	add    BYTE PTR [rax],al
  436d90:	jb     0x436ddc
  436d92:	rex.XB add BYTE PTR [r8],al
  436d95:	add    BYTE PTR [rax],al
  436d97:	add    BYTE PTR [rcx],al
  436d99:	add    DWORD PTR [rip+0x0],esi        # 0x436d9f
  436d9f:	add    BYTE PTR [rbp+0x4a],bh
  436da2:	rex.XB add BYTE PTR [r8],al
  436da5:	add    BYTE PTR [rax],al
  436da7:	add    BYTE PTR [rcx],al
  436da9:	add    DWORD PTR [rsi],esi
  436dab:	add    BYTE PTR [rax],al
  436dad:	add    BYTE PTR [rax],al
  436daf:	add    BYTE PTR [rax+0x434a],cl
  436db5:	add    BYTE PTR [rax],al
  436db7:	add    BYTE PTR [rcx],al
  436db9:	add    DWORD PTR [rdi],esi
  436dbb:	add    BYTE PTR [rax],al
  436dbd:	add    BYTE PTR [rax],al
  436dbf:	add    BYTE PTR [rbx+0x434a],dl
  436dc5:	add    BYTE PTR [rax],al
  436dc7:	add    BYTE PTR [rcx],al
  436dc9:	add    DWORD PTR [rax],edi
  436dcb:	add    BYTE PTR [rax],al
  436dcd:	add    BYTE PTR [rax],al
  436dcf:	add    BYTE PTR [rsi+0x434a],bl
  436dd5:	add    BYTE PTR [rax],al
  436dd7:	add    BYTE PTR [rcx],al
  436dd9:	add    DWORD PTR [rcx],edi
  436ddb:	add    BYTE PTR [rax],al
  436ddd:	add    BYTE PTR [rax],al
  436ddf:	add    BYTE PTR [rcx],al
  436de1:	rex.WXB
  436de2:	rex.XB add BYTE PTR [r8],al
  436de5:	add    BYTE PTR [rax],al
  436de7:	add    BYTE PTR [rcx],al
  436de9:	add    DWORD PTR [rdx],edi
  436deb:	add    BYTE PTR [rax],al
  436ded:	add    BYTE PTR [rax],al
  436def:	add    BYTE PTR [rcx],ah
  436df1:	rex.WXB
  436df2:	rex.XB add BYTE PTR [r8],al
  436df5:	add    BYTE PTR [rax],al
  436df7:	add    BYTE PTR [rcx],al
  436df9:	add    DWORD PTR [rbx],edi
  436dfb:	add    BYTE PTR [rax],al
  436dfd:	add    BYTE PTR [rax],al
  436dff:	add    BYTE PTR [rdi],dh
  436e01:	rex.WXB
  436e02:	rex.XB add BYTE PTR [r8],al
  436e05:	add    BYTE PTR [rax],al
  436e07:	add    BYTE PTR [rcx],al
  436e09:	add    DWORD PTR [rax+rax*1],edi
  436e0c:	add    BYTE PTR [rax],al
  436e0e:	add    BYTE PTR [rax],al
  436e10:	rex.WRB
  436e11:	rex.WXB
  436e12:	rex.XB add BYTE PTR [r8],al
  436e15:	add    BYTE PTR [rax],al
  436e17:	add    BYTE PTR [rcx],al
  436e19:	add    DWORD PTR [rip+0x0],edi        # 0x436e1f
  436e1f:	add    BYTE PTR [rcx+0x434b],ah
  436e25:	add    BYTE PTR [rax],al
  436e27:	add    BYTE PTR [rcx],al
  436e29:	add    DWORD PTR [rsi],edi
  436e2b:	add    BYTE PTR [rax],al
  436e2d:	add    BYTE PTR [rax],al
  436e2f:	add    BYTE PTR [rbx+0x434d],dh
  436e35:	add    BYTE PTR [rax],al
  436e37:	add    BYTE PTR [rcx],al
  436e39:	add    DWORD PTR [rdi],edi
  436e3b:	add    BYTE PTR [rax],al
  436e3d:	add    BYTE PTR [rax],al
  436e3f:	add    al,al
  436e41:	rex.WRB
  436e42:	rex.XB add BYTE PTR [r8],al
  436e45:	add    BYTE PTR [rax],al
  436e47:	add    BYTE PTR [rcx],al
  436e49:	add    DWORD PTR [rax+0x0],eax
  436e4c:	add    BYTE PTR [rax],al
  436e4e:	add    BYTE PTR [rax],al
  436e50:	push   rsp
  436e51:	rex.WRX
  436e52:	rex.XB add BYTE PTR [r8],al
  436e55:	add    BYTE PTR [rax],al
  436e57:	add    BYTE PTR [rcx],al
  436e59:	add    DWORD PTR [rcx+0x0],eax
  436e5c:	add    BYTE PTR [rax],al
  436e5e:	add    BYTE PTR [rax],al
  436e60:	pop    rbx
  436e61:	rex.WRX
  436e62:	rex.XB add BYTE PTR [r8],al
  436e65:	add    BYTE PTR [rax],al
  436e67:	add    BYTE PTR [rcx],al
  436e69:	add    DWORD PTR [rdx+0x0],eax
  436e6c:	add    BYTE PTR [rax],al
  436e6e:	add    BYTE PTR [rax],al
  436e70:	movsxd ecx,DWORD PTR [rsi+0x43]
  436e73:	add    BYTE PTR [rax],al
  436e75:	add    BYTE PTR [rax],al
  436e77:	add    BYTE PTR [rcx],al
  436e79:	add    DWORD PTR [rbx+0x0],eax
  436e7c:	add    BYTE PTR [rax],al
  436e7e:	add    BYTE PTR [rax],al
  436e80:	push   0x4e
  436e82:	rex.XB add BYTE PTR [r8],al
  436e85:	add    BYTE PTR [rax],al
  436e87:	add    BYTE PTR [rcx],al
  436e89:	add    DWORD PTR [rax+rax*1+0x0],eax
  436e8d:	add    BYTE PTR [rax],al
  436e8f:	add    bh,ch
  436e91:	rex.WRX
  436e92:	rex.XB add BYTE PTR [r8],al
  436e95:	add    BYTE PTR [rax],al
  436e97:	add    BYTE PTR [rcx],al
  436e99:	add    DWORD PTR [rbp+0x0],eax
  436e9c:	add    BYTE PTR [rax],al
  436e9e:	add    BYTE PTR [rax],al
  436ea0:	repz rex.WRX
  436ea2:	rex.XB add BYTE PTR [r8],al
  436ea5:	add    BYTE PTR [rax],al
  436ea7:	add    BYTE PTR [rcx],al
  436ea9:	add    DWORD PTR [rsi+0x0],eax
  436eac:	add    BYTE PTR [rax],al
  436eae:	add    BYTE PTR [rax],al
  436eb0:	std    
  436eb1:	rex.WRX
  436eb2:	rex.XB add BYTE PTR [r8],al
  436eb5:	add    BYTE PTR [rax],al
  436eb7:	add    BYTE PTR [rcx],al
  436eb9:	add    DWORD PTR [rdi+0x0],eax
  436ebc:	add    BYTE PTR [rax],al
  436ebe:	add    BYTE PTR [rax],al
  436ec0:	(bad)  
  436ec1:	rex.WRXB
  436ec2:	rex.XB add BYTE PTR [r8],al
  436ec5:	add    BYTE PTR [rax],al
  436ec7:	add    BYTE PTR [rcx],al
  436ec9:	add    DWORD PTR [rax+0x0],ecx
  436ecc:	add    BYTE PTR [rax],al
  436ece:	add    BYTE PTR [rax],al
  436ed0:	sbb    cl,BYTE PTR [rdi+0x43]
  436ed3:	add    BYTE PTR [rax],al
  436ed5:	add    BYTE PTR [rax],al
  436ed7:	add    BYTE PTR [rcx],al
  436ed9:	add    DWORD PTR [rcx+0x0],ecx
  436edc:	add    BYTE PTR [rax],al
  436ede:	add    BYTE PTR [rax],al
  436ee0:	es rex.WRXB
  436ee2:	rex.XB add BYTE PTR [r8],al
  436ee5:	add    BYTE PTR [rax],al
  436ee7:	add    BYTE PTR [rcx],al
  436ee9:	add    DWORD PTR [rdx+0x0],ecx
  436eec:	add    BYTE PTR [rax],al
  436eee:	add    BYTE PTR [rax],al
  436ef0:	(bad)  
  436ef1:	rex.WRXB
  436ef2:	rex.XB add BYTE PTR [r8],al
  436ef5:	add    BYTE PTR [rax],al
  436ef7:	add    BYTE PTR [rcx],al
  436ef9:	add    DWORD PTR [rbx+0x0],ecx
  436efc:	add    BYTE PTR [rax],al
  436efe:	add    BYTE PTR [rax],al
  436f00:	cmp    DWORD PTR [rdi+0x43],ecx
  436f03:	add    BYTE PTR [rax],al
  436f05:	add    BYTE PTR [rax],al
  436f07:	add    BYTE PTR [rcx],al
  436f09:	add    DWORD PTR [rax+rax*1+0x0],ecx
  436f0d:	add    BYTE PTR [rax],al
  436f0f:	add    BYTE PTR [rdi+0x4f],dl
  436f12:	rex.XB add BYTE PTR [r8],al
  436f15:	add    BYTE PTR [rax],al
  436f17:	add    BYTE PTR [rcx],al
  436f19:	add    DWORD PTR [rbp+0x0],ecx
  436f1c:	add    BYTE PTR [rax],al
  436f1e:	add    BYTE PTR [rax],al
  436f20:	(bad)  
  436f21:	rex.WRXB
  436f22:	rex.XB add BYTE PTR [r8],al
  436f25:	add    BYTE PTR [rax],al
  436f27:	add    BYTE PTR [rcx],al
  436f29:	add    DWORD PTR [rsi+0x0],ecx
  436f2c:	add    BYTE PTR [rax],al
  436f2e:	add    BYTE PTR [rax],al
  436f30:	push   0x4f
  436f32:	rex.XB add BYTE PTR [r8],al
  436f35:	add    BYTE PTR [rax],al
  436f37:	add    BYTE PTR [rcx],al
  436f39:	add    DWORD PTR [rdi+0x0],ecx
  436f3c:	add    BYTE PTR [rax],al
  436f3e:	add    BYTE PTR [rax],al
  436f40:	jne    0x436f91
  436f42:	rex.XB add BYTE PTR [r8],al
  436f45:	add    BYTE PTR [rax],al
  436f47:	add    BYTE PTR [rcx],al
  436f49:	add    DWORD PTR [rax+0x0],edx
  436f4c:	add    BYTE PTR [rax],al
  436f4e:	add    BYTE PTR [rax],al
  436f50:	ror    BYTE PTR [rdi+0x43],0x0
  436f54:	add    BYTE PTR [rax],al
  436f56:	add    BYTE PTR [rax],al
  436f58:	add    DWORD PTR [rcx],eax
  436f5a:	push   rcx
  436f5b:	add    BYTE PTR [rax],al
  436f5d:	add    BYTE PTR [rax],al
  436f5f:	add    dl,cl
  436f61:	rex.WRXB
  436f62:	rex.XB add BYTE PTR [r8],al
  436f65:	add    BYTE PTR [rax],al
  436f67:	add    BYTE PTR [rcx],al
  436f69:	add    DWORD PTR [rdx+0x0],edx
  436f6c:	add    BYTE PTR [rax],al
  436f6e:	add    BYTE PTR [rax],al
  436f70:	(bad)  
  436f71:	rex.WRXB
  436f72:	rex.XB add BYTE PTR [r8],al
  436f75:	add    BYTE PTR [rax],al
  436f77:	add    BYTE PTR [rcx],al
  436f79:	add    DWORD PTR [rbx+0x0],edx
  436f7c:	add    BYTE PTR [rax],al
  436f7e:	add    BYTE PTR [rax],al
  436f80:	icebp  
  436f81:	rex.WRXB
  436f82:	rex.XB add BYTE PTR [r8],al
  436f85:	add    BYTE PTR [rax],al
  436f87:	add    BYTE PTR [rcx],al
  436f89:	add    dl,BYTE PTR [rax+rax*1+0x0]
  436f8d:	add    BYTE PTR [rax],al
  436f8f:	add    dh,dh
  436f91:	rex.WRXB
  436f92:	rex.XB add BYTE PTR [r8],al
  436f95:	add    BYTE PTR [rax],al
  436f97:	add    BYTE PTR [rcx],al
  436f99:	add    DWORD PTR [rbp+0x0],edx
  436f9c:	add    BYTE PTR [rax],al
  436f9e:	add    BYTE PTR [rax],al
  436fa0:	add    edi,DWORD PTR [rdi]
  436fa2:	rex.XB add BYTE PTR [r8],al
  436fa5:	add    BYTE PTR [rax],al
  436fa7:	add    BYTE PTR [rdx],al
  436fa9:	add    dl,BYTE PTR [rsi+0x0]
  436fac:	add    BYTE PTR [rax],al
  436fae:	add    BYTE PTR [rax],al
  436fb0:	(bad)  
  436fb1:	push   rax
  436fb2:	rex.XB add BYTE PTR [r8],al
  436fb5:	add    BYTE PTR [rax],al
  436fb7:	add    BYTE PTR [rdx],al
  436fb9:	add    dl,BYTE PTR [rdi+0x0]
  436fbc:	add    BYTE PTR [rax],al
  436fbe:	add    BYTE PTR [rax],al
  436fc0:	jno    0x437012
  436fc2:	rex.XB add BYTE PTR [r8],al
  436fc5:	add    BYTE PTR [rax],al
  436fc7:	add    BYTE PTR [rdx],al
  436fc9:	add    bl,BYTE PTR [rax+0x0]
  436fcc:	add    BYTE PTR [rax],al
  436fce:	add    BYTE PTR [rax],al
  436fd0:	mov    bl,0x40
  436fd2:	rex.XB add BYTE PTR [r8],al
  436fd5:	add    BYTE PTR [rax],al
  436fd7:	add    BYTE PTR [rsp+rax*1],al
  436fda:	pop    rcx
  436fdb:	add    BYTE PTR [rax],al
  436fdd:	add    BYTE PTR [rax],al
  436fdf:	add    BYTE PTR [rdi+0x50],bh
  436fe2:	rex.XB add BYTE PTR [r8],al
  436fe5:	add    BYTE PTR [rax],al
  436fe7:	add    BYTE PTR [rsp+rax*1],al
  436fea:	pop    rdx
  436feb:	add    BYTE PTR [rax],al
  436fed:	add    BYTE PTR [rax],al
  436fef:	add    BYTE PTR [rsi+0x4350],cl
  436ff5:	add    BYTE PTR [rax],al
  436ff7:	add    BYTE PTR [rsp+rax*1],al
  436ffa:	pop    rbx
  436ffb:	add    BYTE PTR [rax],al
  436ffd:	add    BYTE PTR [rax],al
  436fff:	add    BYTE PTR [rax+rdx*2+0x43],bl
  437006:	add    BYTE PTR [rax],al
  437008:	add    al,0x4
  43700a:	pop    rsp
  43700b:	add    BYTE PTR [rax],al
  43700d:	add    BYTE PTR [rax],al
  43700f:	add    BYTE PTR [rax+rdx*2+0x43],ah
  437016:	add    BYTE PTR [rax],al
  437018:	add    al,0x4
  43701a:	pop    rbp
  43701b:	add    BYTE PTR [rax],al
  43701d:	add    BYTE PTR [rax],al
  43701f:	add    ah,dh
  437021:	push   rax
  437022:	rex.XB add BYTE PTR [r8],al
  437025:	add    BYTE PTR [rax],al
  437027:	add    BYTE PTR [rcx],al
  437029:	add    DWORD PTR [rsi+0x0],ebx
  43702c:	add    BYTE PTR [rax],al
  43702e:	add    BYTE PTR [rax],al
  437030:	std    
  437031:	push   rax
  437032:	rex.XB add BYTE PTR [r8],al
  437035:	add    BYTE PTR [rax],al
  437037:	add    BYTE PTR [rdx],al
  437039:	add    al,0x5f
  43703b:	add    BYTE PTR [rax],al
  43703d:	add    BYTE PTR [rax],al
  43703f:	add    BYTE PTR [rcx+rdx*2],al
  437042:	rex.XB add BYTE PTR [r8],al
  437045:	add    BYTE PTR [rax],al
  437047:	add    BYTE PTR [rdx],al
  437049:	add    al,0x60
  43704b:	add    BYTE PTR [rax],al
  43704d:	add    BYTE PTR [rax],al
  43704f:	add    BYTE PTR [rip+0x4351],cl        # 0x43b3a6
  437055:	add    BYTE PTR [rax],al
  437057:	add    BYTE PTR [rdx],al
  437059:	add    al,0x61
  43705b:	add    BYTE PTR [rax],al
  43705d:	add    BYTE PTR [rax],al
  43705f:	add    BYTE PTR [rsi],dl
  437061:	push   rcx
  437062:	rex.XB add BYTE PTR [r8],al
  437065:	add    BYTE PTR [rax],al
  437067:	add    BYTE PTR [rsp+rax*1],al
  43706a:	(bad)  
  43706b:	add    BYTE PTR [rax],al
  43706d:	add    BYTE PTR [rax],al
  43706f:	add    BYTE PTR [rip+0x4351],bl        # 0x43b3c6
  437075:	add    BYTE PTR [rax],al
  437077:	add    BYTE PTR [rsp+rax*1],al
  43707a:	movsxd eax,DWORD PTR [rax]
  43707c:	add    BYTE PTR [rax],al
  43707e:	add    BYTE PTR [rax],al
  437080:	es push rcx
  437082:	rex.XB add BYTE PTR [r8],al
  437085:	add    BYTE PTR [rax],al
  437087:	add    BYTE PTR [rsp+rax*1],al
  43708a:	add    BYTE PTR fs:[rax],al
  43708d:	add    BYTE PTR [rax],al
  43708f:	add    BYTE PTR [rdi],ch
  437091:	push   rcx
  437092:	rex.XB add BYTE PTR [r8],al
  437095:	add    BYTE PTR [rax],al
  437097:	add    BYTE PTR [rcx],al
  437099:	add    al,0x65
  43709b:	add    BYTE PTR [rax],al
  43709d:	add    BYTE PTR [rax],al
  43709f:	add    BYTE PTR [rbp+0x51],al
  4370a2:	rex.XB add BYTE PTR [r8],al
  4370a5:	add    BYTE PTR [rax],al
  4370a7:	add    BYTE PTR [rcx],al
  4370a9:	add    DWORD PTR [rsi+0x0],esp
	...
  4370c0:	movsxd ebp,DWORD PTR [rax+0x61]
  4370c3:	jb     0x437138
  4370c5:	gs je  0x4370c8
  4370c8:	ins    BYTE PTR es:[rdi],dx
  4370c9:	(bad)  
  4370ca:	outs   dx,BYTE PTR ds:[rsi]
  4370cb:	addr32 jne 0x43712f
  4370ce:	add    BYTE PTR gs:[ecx+eiz*2+0x74],ah
  4370d4:	and    BYTE PTR gs:[rsi+0x6f],ah
  4370d8:	jb     0x437147
  4370da:	(bad)  
  4370db:	je     0x4370dd
  4370dd:	rex
  4370de:	cs pop rdi
	...
  4370e8:	rex.B je 0x43715f
  4370eb:	gs ins DWORD PTR es:[rdi],dx
  4370ed:	jo     0x437163
  4370ef:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
  4370f6:	jb     0x43715d
  4370f8:	(bad)  
  4370f9:	and    BYTE PTR fs:[rdi+rbp*2+0x63],ch
  4370fe:	(bad)  
  4370ff:	ins    BYTE PTR es:[rdi],dx
  437100:	gs jae 0x437131
  437103:	movsxd ebp,DWORD PTR [rdi+0x6e]
  437106:	data16 and BYTE PTR [rsi+0x69],ah
  43710a:	ins    BYTE PTR es:[rdi],dx
  43710b:	or     al,BYTE PTR gs:[rax]
  43710e:	ins    BYTE PTR es:[rdi],dx
  43710f:	outs   dx,DWORD PTR ds:[rsi]
  437110:	movsxd esp,DWORD PTR [rcx+0x6c]
  437113:	gs movsxd eax,DWORD PTR cs:[rax]
  437117:	jb     0x437119
  437119:	add    BYTE PTR [rax],al
  43711b:	add    BYTE PTR [rax],al
  43711d:	add    BYTE PTR [rax],al
  43711f:	add    BYTE PTR [rdi],ch
  437121:	jae    0x437186
  437123:	jb     0x437186
  437125:	je     0x43718a
  437127:	push   0x65776a2f
  43712c:	(bad)  
  43712d:	ins    DWORD PTR es:[rdi],dx
  43712e:	js     0x437195
  437130:	sub    eax,0x6174636f
  437135:	jbe    0x43719c
  437137:	(bad)  
  437138:	xor    al,0x2e
  43713a:	xor    ch,BYTE PTR [rsi]
  43713c:	xor    DWORD PTR [rdi],ebp
  43713e:	ja     0x437176
  437140:	xor    al,0x2d
  437142:	xor    esi,DWORD PTR [rdx]
  437144:	(bad)  
  437145:	jne    0x4371ba
  437147:	jb     0x437178
  437149:	js     0x437183
  43714b:	ss pop rdi
  43714d:	ss xor al,0x2d
  437150:	ja     0x437188
  437152:	xor    al,0x2d
  437154:	ins    DWORD PTR es:[rdi],dx
  437155:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  43715c:	gs je  0x4371c2
  43715f:	pop    rsp
  437160:	ins    BYTE PTR es:[rdi],dx
  437161:	outs   dx,DWORD PTR ds:[rsi]
  437162:	movsxd esp,DWORD PTR [rcx+0x6c]
  437165:	gs jae 0x437196
  437168:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43716b:	data16 add BYTE PTR [rbp+riz*2+0x66],ah
  437170:	(bad)  
  437171:	jne    0x4371df
  437173:	je     0x437175
	...
  43717d:	add    BYTE PTR [rax],al
  43717f:	add    BYTE PTR [rip+0x3a753230],ah        # 0x3ab8a3b5
  437185:	and    eax,0x3a753230
  43718a:	and    eax,0x2e753230
  43718f:	and    eax,0x753330
	...
  4371c0:	add    BYTE PTR [rdx-0x751f0002],cl
  4371c6:	(bad)  
  4371c7:	push   rbx
  4371c9:	mov    bh,dh
  4371cb:	call   FWORD PTR [rip+0x25fffe8a]        # 0x2643705b
  4371d1:	mov    edi,esi
  4371d3:	jmp    QWORD PTR [rip+0x1dfffe8b]        # 0x1e437064
  4371d9:	mov    bh,dh
  4371db:	call   FWORD PTR [rip+0xffffffffd0fffe8a]        # 0xffffffffd143706b
  4371e1:	mov    bh,dh
  4371e3:	inc    DWORD PTR [rax]
  4371e5:	add    BYTE PTR [rax],al
  4371e7:	add    BYTE PTR [rsp+riz*2+0x73],dh
  4371eb:	pop    rdi
  4371ec:	addr32 gs je 0x43724f
  4371f0:	fs (bad) 
  4371f2:	je     0x437255
  4371f4:	cmp    ah,BYTE PTR [rax]
  4371f6:	je     0x437271
  4371f8:	jo     0x43725f
  4371fa:	and    BYTE PTR [rip+0x76202c64],ah        # 0x76639e64
  437200:	(bad)  
  437201:	jb     0x43726c
  437203:	outs   dx,BYTE PTR ds:[rsi]
  437204:	je     0x437226
  437206:	jae    0x437271
  437208:	jp     0x43726f
  43720a:	and    BYTE PTR [rip+0x64000a64],ah        # 0x64437c74
  437210:	(bad)  
  437211:	je     0x437274
  437213:	movsxd eax,DWORD PTR cs:[rax]
  437216:	fs jne 0x437286
  437219:	ins    DWORD PTR es:[rdi],dx
  43721a:	jns    0x43723c
  43721c:	je     0x437283
  43721e:	js     0x437294
  437220:	jo     0x437296
  437222:	jb     0x437224
  437224:	add    BYTE PTR [rax],al
  437226:	add    BYTE PTR [rax],al
  437228:	je     0x43728e
  43722a:	jae    0x43728b
  43722c:	addr32 gs je 0x43728f
  437230:	fs (bad) 
  437232:	je     0x437295
  437234:	sub    BYTE PTR [rcx],ch
  437236:	cmp    ah,BYTE PTR [rax]
  437238:	ja     0x4372a3
  43723a:	jb     0x4372a1
  43723c:	and    BYTE PTR [rbx+0x6f],ah
  43723f:	ins    BYTE PTR es:[rdi],dx
  437240:	jne    0x4372af
  437242:	outs   dx,BYTE PTR ds:[rsi]
  437243:	and    BYTE PTR [rbx+0x69],dh
  437246:	jp     0x4372ad
  437248:	and    BYTE PTR [rcx+0x73],ch
  43724b:	and    BYTE PTR [rip+0xa2064],ah        # 0x4d92b5
  437251:	add    BYTE PTR [rax],al
  437253:	add    BYTE PTR [rbp+rcx*4-0x2],ch
  437257:	dec    DWORD PTR [rdi-0x53000173]
  43725d:	(bad)  
  43725e:	(bad)  
  43725f:	call   rax
  437261:	mov    edi,esi
  437263:	(bad)  
  437264:	mov    esp,0xbcfffe8b
  437269:	(bad)  
  43726a:	(bad)  
  43726b:	call   rax
  43726d:	mov    edi,esi
  43726f:	call   rax
  437271:	mov    edi,esi
  437273:	(bad)  
  437274:	fmul   QWORD PTR [rbp-0x6fba0002]
  43727a:	(bad)  
  43727b:	dec    eax
  43727d:	nop
  43727e:	(bad)  
  43727f:	(bad)  
  437280:	mov    eax,0x45fffe90
  437285:	nop
  437286:	(bad)  
  437287:	dec    DWORD PTR [rax-0x77000170]
  43728d:	nop
  43728e:	(bad)  
  43728f:	inc    DWORD PTR [rbp-0x70]
  437292:	(bad)  
  437293:	inc    DWORD PTR [rbp-0x70]
  437296:	(bad)  
  437297:	(bad)  
  437298:	cmp    BYTE PTR [rax+0xfffe],dl
  43729e:	add    BYTE PTR [rax],al
  4372a0:	je     0x437306
  4372a2:	jae    0x437303
  4372a4:	outs   dx,BYTE PTR gs:[esi]
  4372a7:	gs jb  0x437313
  4372aa:	movsxd ebx,DWORD PTR [rdi+0x70]
  4372ad:	jne    0x437323
  4372af:	cmp    ah,BYTE PTR [rax]
  4372b1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4372b4:	jae    0x43731f
  4372b6:	jp     0x43731d
  4372b8:	and    BYTE PTR [rip+0xa642520],bh        # 0xaa797de
  4372be:	add    BYTE PTR [rsp+riz*2+0x73],dh
  4372c2:	pop    rdi
  4372c3:	outs   dx,BYTE PTR gs:[esi]
  4372c6:	gs jb  0x437332
  4372c9:	movsxd ebx,DWORD PTR [rdi+0x70]
  4372cc:	jne    0x437342
  4372ce:	cmp    ah,BYTE PTR [rax]
  4372d0:	outs   dx,BYTE PTR ds:[rsi]
  4372d1:	jne    0x43733f
  4372d3:	ins    BYTE PTR es:[rdi],dx
  4372d4:	and    BYTE PTR [rax+0x61],dh
  4372d7:	jb     0x43733a
  4372d9:	ins    DWORD PTR es:[rdi],dx
  4372da:	or     al,BYTE PTR [rax]
  4372dc:	movsxd esi,DWORD PTR [rbp+0x72]
  4372df:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4372e2:	sub    eax,0x6c6f633e
  4372e7:	jne    0x437356
  4372e9:	outs   dx,BYTE PTR ds:[rsi]
  4372ea:	pop    rdi
  4372eb:	jbe    0x43734e
  4372ed:	jb     0x437358
  4372ef:	outs   dx,BYTE PTR ds:[rsi]
  4372f0:	je     0x437351
  4372f2:	jae    0x43735d
  4372f4:	jp     0x43735b
  4372f6:	add    BYTE PTR [rax],al
  4372f8:	je     0x43735e
  4372fa:	jae    0x43735b
  4372fc:	outs   dx,BYTE PTR gs:[esi]
  4372ff:	gs jb  0x43736b
  437302:	movsxd ebx,DWORD PTR [rdi+0x70]
  437305:	jne    0x43737b
  437307:	cmp    ah,BYTE PTR [rax]
  437309:	outs   dx,BYTE PTR ds:[rsi]
  43730a:	outs   dx,DWORD PTR ds:[rsi]
  43730b:	je     0x43732d
  43730d:	outs   dx,BYTE PTR ds:[rsi]
  43730e:	jne    0x43737c
  437310:	ins    BYTE PTR es:[rdi],dx
  437311:	and    BYTE PTR [rax+0x61],dh
  437314:	jb     0x437377
  437316:	ins    DWORD PTR es:[rdi],dx
  437317:	and    BYTE PTR [rsi+0x61],dh
  43731a:	jb     0x437385
  43731c:	outs   dx,BYTE PTR ds:[rsi]
  43731d:	je     0x43737e
  43731f:	jae    0x43738a
  437321:	jp     0x437388
  437323:	and    BYTE PTR [rip+0xa642520],bh        # 0xaa79849
  437329:	add    BYTE PTR [rax],al
  43732b:	add    BYTE PTR [rbx+rdx*4-0x6c270002],dh
  437332:	(bad)  
  437333:	push   rsp
  437335:	xchg   ebx,eax
  437336:	(bad)  
  437337:	push   QWORD PTR [rdx+rdx*4]
  43733a:	(bad)  
  43733b:	inc    DWORD PTR [rip+0x34fffe92]        # 0x354371d3
  437341:	xchg   edx,eax
  437342:	(bad)  
  437343:	push   QWORD PTR [rdx+rdx*4]
  437346:	(bad)  
  437347:	push   QWORD PTR [rdx+rdx*4]
  43734a:	(bad)  
  43734b:	call   QWORD PTR [rsp+rdx*4]
  43734e:	(bad)  
  43734f:	jmp    QWORD PTR [rbp-0x6e]
  437352:	(bad)  
  437353:	call   QWORD PTR [rax]
  437355:	xchg   esp,eax
  437356:	(bad)  
  437357:	call   QWORD PTR [rax-0x6c]
  43735a:	(bad)  
  43735b:	inc    DWORD PTR [rax-0x4f00016e]
  437361:	xchg   edx,eax
  437362:	(bad)  
  437363:	jmp    rcx
  437365:	xchg   edx,eax
  437366:	(bad)  
  437367:	call   FWORD PTR [rbp-0x47000164]
  43736d:	pushf  
  43736e:	(bad)  
  43736f:	(bad)  
  437370:	mov    eax,0xa8fffe9c
  437375:	pushf  
  437376:	(bad)  
  437377:	jmp    FWORD PTR [rax-0x47000164]
  43737d:	pushf  
  43737e:	(bad)  
  43737f:	(bad)  
  437380:	mov    eax,0xb8fffe9c
  437385:	pushf  
  437386:	(bad)  
  437387:	(bad)  
  437388:	mov    eax,0xb8fffe9c
  43738d:	pushf  
  43738e:	(bad)  
  43738f:	(bad)  
  437390:	mov    eax,0xb8fffe9c
  437395:	pushf  
  437396:	(bad)  
  437397:	(bad)  
  437398:	mov    eax,0xb8fffe9c
  43739d:	pushf  
  43739e:	(bad)  
  43739f:	(bad)  
  4373a0:	mov    eax,0xb8fffe9c
  4373a5:	pushf  
  4373a6:	(bad)  
  4373a7:	(bad)  
  4373a8:	mov    eax,0x9dfffe9c
  4373ad:	pushf  
  4373ae:	(bad)  
  4373af:	(bad)  
  4373b0:	mov    eax,0x9dfffe9c
  4373b5:	pushf  
  4373b6:	(bad)  
  4373b7:	(bad)  
  4373b8:	mov    eax,0x9dfffe9c
  4373bd:	pushf  
  4373be:	(bad)  
  4373bf:	(bad)  
  4373c0:	mov    eax,0xb8fffe9c
  4373c5:	pushf  
  4373c6:	(bad)  
  4373c7:	(bad)  
  4373c8:	mov    eax,0x9dfffe9c
  4373cd:	pushf  
  4373ce:	(bad)  
  4373cf:	(bad)  
  4373d0:	mov    eax,0x9dfffe9c
  4373d5:	pushf  
  4373d6:	(bad)  
  4373d7:	call   FWORD PTR [rbp-0x62000164]
  4373dd:	pushf  
  4373de:	(bad)  
  4373df:	call   FWORD PTR [rbp-0x62000164]
  4373e5:	pushf  
  4373e6:	(bad)  
  4373e7:	(bad)  
  4373e8:	mov    eax,0xb8fffe9c
  4373ed:	pushf  
  4373ee:	(bad)  
  4373ef:	(bad)  
  4373f0:	mov    eax,0xb8fffe9c
  4373f5:	pushf  
  4373f6:	(bad)  
  4373f7:	(bad)  
  4373f8:	mov    eax,0xb8fffe9c
  4373fd:	pushf  
  4373fe:	(bad)  
  4373ff:	(bad)  
  437400:	mov    eax,0xb8fffe9c
  437405:	pushf  
  437406:	(bad)  
  437407:	(bad)  
  437408:	mov    eax,0xb8fffe9c
  43740d:	pushf  
  43740e:	(bad)  
  43740f:	(bad)  
  437410:	mov    eax,0xb8fffe9c
  437415:	pushf  
  437416:	(bad)  
  437417:	(bad)  
  437418:	mov    eax,0xb8fffe9c
  43741d:	pushf  
  43741e:	(bad)  
  43741f:	(bad)  
  437420:	mov    eax,0xb8fffe9c
  437425:	pushf  
  437426:	(bad)  
  437427:	(bad)  
  437428:	mov    eax,0xb8fffe9c
  43742d:	pushf  
  43742e:	(bad)  
  43742f:	(bad)  
  437430:	mov    eax,0xb8fffe9c
  437435:	pushf  
  437436:	(bad)  
  437437:	(bad)  
  437438:	mov    eax,0xb8fffe9c
  43743d:	pushf  
  43743e:	(bad)  
  43743f:	(bad)  
  437440:	mov    eax,0xb8fffe9c
  437445:	pushf  
  437446:	(bad)  
  437447:	(bad)  
  437448:	mov    eax,0xb8fffe9c
  43744d:	pushf  
  43744e:	(bad)  
  43744f:	(bad)  
  437450:	mov    eax,0xb8fffe9c
  437455:	pushf  
  437456:	(bad)  
  437457:	(bad)  
  437458:	mov    eax,0xb8fffe9c
  43745d:	pushf  
  43745e:	(bad)  
  43745f:	(bad)  
  437460:	mov    eax,0xb8fffe9c
  437465:	pushf  
  437466:	(bad)  
  437467:	(bad)  
  437468:	mov    eax,0xb8fffe9c
  43746d:	pushf  
  43746e:	(bad)  
  43746f:	(bad)  
  437470:	mov    eax,0xb8fffe9c
  437475:	pushf  
  437476:	(bad)  
  437477:	(bad)  
  437478:	mov    eax,0xb8fffe9c
  43747d:	pushf  
  43747e:	(bad)  
  43747f:	(bad)  
  437480:	mov    eax,0xb8fffe9c
  437485:	pushf  
  437486:	(bad)  
  437487:	(bad)  
  437488:	mov    eax,0xb8fffe9c
  43748d:	pushf  
  43748e:	(bad)  
  43748f:	(bad)  
  437490:	mov    eax,0xb8fffe9c
  437495:	pushf  
  437496:	(bad)  
  437497:	(bad)  
  437498:	mov    eax,0xb8fffe9c
  43749d:	pushf  
  43749e:	(bad)  
  43749f:	(bad)  
  4374a0:	mov    eax,0xb8fffe9c
  4374a5:	pushf  
  4374a6:	(bad)  
  4374a7:	(bad)  
  4374a8:	mov    eax,0xb8fffe9c
  4374ad:	pushf  
  4374ae:	(bad)  
  4374af:	(bad)  
  4374b0:	mov    eax,0xb8fffe9c
  4374b5:	pushf  
  4374b6:	(bad)  
  4374b7:	(bad)  
  4374b8:	mov    eax,0xb8fffe9c
  4374bd:	pushf  
  4374be:	(bad)  
  4374bf:	(bad)  
  4374c0:	mov    eax,0xb8fffe9c
  4374c5:	pushf  
  4374c6:	(bad)  
  4374c7:	(bad)  
  4374c8:	mov    eax,0xb8fffe9c
  4374cd:	pushf  
  4374ce:	(bad)  
  4374cf:	(bad)  
  4374d0:	mov    eax,0x9dfffe9c
  4374d5:	pushf  
  4374d6:	(bad)  
  4374d7:	call   FWORD PTR [rax-0x62]
  4374da:	(bad)  
  4374db:	(bad)  
  4374dc:	js     0x43747c
  4374de:	(bad)  
  4374df:	call   FWORD PTR [rax-0x27000162]
  4374e5:	popf   
  4374e6:	(bad)  
  4374e7:	(bad)  
  4374e8:	fcomp  DWORD PTR [rbp-0x62270002]
  4374ee:	(bad)  
  4374ef:	(bad)  
  4374f0:	fcomp  DWORD PTR [rbp-0x62270002]
  4374f6:	(bad)  
  4374f7:	(bad)  
  4374f8:	fcomp  DWORD PTR [rbp-0x62270002]
  4374fe:	(bad)  
  4374ff:	(bad)  
  437500:	fcomp  DWORD PTR [rbp-0x62270002]
  437506:	(bad)  
  437507:	(bad)  
  437508:	fcomp  DWORD PTR [rbp-0x62270002]
  43750e:	(bad)  
  43750f:	(bad)  
  437510:	fistp  DWORD PTR [rsi-0x62270002]
  437516:	(bad)  
  437517:	(bad)  
  437518:	fcomp  DWORD PTR [rbp-0x62270002]
  43751e:	(bad)  
  43751f:	(bad)  
  437520:	fistp  DWORD PTR [rsi-0x62270002]
  437526:	(bad)  
  437527:	(bad)  
  437528:	fcomp  DWORD PTR [rbp-0x62270002]
  43752e:	(bad)  
  43752f:	(bad)  
  437530:	fistp  DWORD PTR [rsi-0x62270002]
  437536:	(bad)  
  437537:	(bad)  
  437538:	clc    
  437539:	sahf   
  43753a:	(bad)  
  43753b:	call   FWORD PTR [rax]
  43753d:	lahf   
  43753e:	(bad)  
  43753f:	(bad)  
  437540:	cmp    BYTE PTR [rdi-0x61070002],bl
  437546:	(bad)  
  437547:	call   FWORD PTR [rax]
  437549:	lahf   
  43754a:	(bad)  
  43754b:	(bad)  
  43754c:	fcomp  DWORD PTR [rbp-0x62270002]
  437552:	(bad)  
  437553:	(bad)  
  437554:	fcomp  DWORD PTR [rbp-0x62270002]
  43755a:	(bad)  
  43755b:	(bad)  
  43755c:	fcomp  DWORD PTR [rbp-0x62270002]
  437562:	(bad)  
  437563:	(bad)  
  437564:	fcomp  DWORD PTR [rbp-0x62270002]
  43756a:	(bad)  
  43756b:	(bad)  
  43756c:	fcomp  DWORD PTR [rbp-0x62270002]
  437572:	(bad)  
  437573:	(bad)  
  437574:	fcomp  DWORD PTR [rbp-0x62270002]
  43757a:	(bad)  
  43757b:	(bad)  
  43757c:	fcomp  DWORD PTR [rbp-0x62270002]
  437582:	(bad)  
  437583:	(bad)  
  437584:	fcomp  DWORD PTR [rbp-0x62270002]
  43758a:	(bad)  
  43758b:	(bad)  
  43758c:	fcomp  DWORD PTR [rbp-0x62270002]
  437592:	(bad)  
  437593:	(bad)  
  437594:	fcomp  DWORD PTR [rbp-0x62270002]
  43759a:	(bad)  
  43759b:	(bad)  
  43759c:	fcomp  DWORD PTR [rbp-0x62270002]
  4375a2:	(bad)  
  4375a3:	(bad)  
  4375a4:	fcomp  DWORD PTR [rbp-0x62270002]
  4375aa:	(bad)  
  4375ab:	(bad)  
  4375ac:	fcomp  DWORD PTR [rbp-0x62270002]
  4375b2:	(bad)  
  4375b3:	(bad)  
  4375b4:	fcomp  DWORD PTR [rbp-0x62270002]
  4375ba:	(bad)  
  4375bb:	(bad)  
  4375bc:	fcomp  DWORD PTR [rbp-0x62270002]
  4375c2:	(bad)  
  4375c3:	(bad)  
  4375c4:	fcomp  DWORD PTR [rbp-0x62270002]
  4375ca:	(bad)  
  4375cb:	(bad)  
  4375cc:	fcomp  DWORD PTR [rbp-0x62270002]
  4375d2:	(bad)  
  4375d3:	(bad)  
  4375d4:	fcomp  DWORD PTR [rbp-0x62270002]
  4375da:	(bad)  
  4375db:	jmp    FWORD PTR [rbx-0x27000162]
  4375e1:	popf   
  4375e2:	(bad)  
  4375e3:	(bad)  
  4375e4:	fcomp  DWORD PTR [rbp-0x62270002]
  4375ea:	(bad)  
  4375eb:	(bad)  
  4375ec:	fcomp  DWORD PTR [rbp-0x61370002]
  4375f2:	(bad)  
  4375f3:	(bad)  
  4375f4:	fcomp  DWORD PTR [rbp-0x62270002]
  4375fa:	(bad)  
  4375fb:	(bad)  
  4375fc:	fcomp  DWORD PTR [rbp-0x62270002]
  437602:	(bad)  
  437603:	(bad)  
  437604:	fcomp  DWORD PTR [rbp-0x62270002]
  43760a:	(bad)  
  43760b:	(bad)  
  43760c:	fcomp  DWORD PTR [rbp-0x62270002]
  437612:	(bad)  
  437613:	(bad)  
  437614:	fcomp  DWORD PTR [rbp-0x62270002]
  43761a:	(bad)  
  43761b:	(bad)  
  43761c:	fcomp  DWORD PTR [rbp-0x62270002]
  437622:	(bad)  
  437623:	(bad)  
  437624:	fcomp  DWORD PTR [rbp-0x62270002]
  43762a:	(bad)  
  43762b:	(bad)  
  43762c:	fcomp  DWORD PTR [rbp-0x62270002]
  437632:	(bad)  
  437633:	(bad)  
  437634:	fcomp  DWORD PTR [rbp-0x60c70002]
  43763a:	(bad)  
  43763b:	(bad)  
  43763c:	fcomp  DWORD PTR [rbp-0x62270002]
  437642:	(bad)  
  437643:	(bad)  
  437644:	fcomp  DWORD PTR [rbp-0x62270002]
  43764a:	(bad)  
  43764b:	(bad)  
  43764c:	fistp  DWORD PTR [rsi-0x62270002]
  437652:	(bad)  
  437653:	(bad)  
  437654:	fcomp  DWORD PTR [rbp-0x62270002]
  43765a:	(bad)  
  43765b:	(bad)  
  43765c:	fcomp  DWORD PTR [rbp-0x62270002]
  437662:	(bad)  
  437663:	(bad)  
  437664:	fcomp  DWORD PTR [rbp-0x62270002]
  43766a:	(bad)  
  43766b:	(bad)  
  43766c:	fcomp  DWORD PTR [rbp-0x62270002]
  437672:	(bad)  
  437673:	(bad)  
  437674:	fcomp  DWORD PTR [rbp-0x62270002]
  43767a:	(bad)  
  43767b:	(bad)  
  43767c:	fcomp  DWORD PTR [rbp-0x62270002]
  437682:	(bad)  
  437683:	(bad)  
  437684:	fcomp  DWORD PTR [rbp-0x62270002]
  43768a:	(bad)  
  43768b:	(bad)  
  43768c:	fcomp  DWORD PTR [rbp-0x62270002]
  437692:	(bad)  
  437693:	(bad)  
  437694:	fcomp  DWORD PTR [rbp-0x62270002]
  43769a:	(bad)  
  43769b:	(bad)  
  43769c:	fcomp  DWORD PTR [rbp-0x62270002]
  4376a2:	(bad)  
  4376a3:	(bad)  
  4376a4:	fcomp  DWORD PTR [rbp-0x62270002]
  4376aa:	(bad)  
  4376ab:	(bad)  
  4376ac:	fcomp  DWORD PTR [rbp-0x62270002]
  4376b2:	(bad)  
  4376b3:	(bad)  
  4376b4:	fcomp  DWORD PTR [rbp-0x62270002]
  4376ba:	(bad)  
  4376bb:	(bad)  
  4376bc:	fcomp  DWORD PTR [rbp-0x62270002]
  4376c2:	(bad)  
  4376c3:	(bad)  
  4376c4:	fcomp  DWORD PTR [rbp-0x62270002]
  4376ca:	(bad)  
  4376cb:	(bad)  
  4376cc:	fcomp  DWORD PTR [rbp-0x62270002]
  4376d2:	(bad)  
  4376d3:	(bad)  
  4376d4:	fcomp  DWORD PTR [rbp-0x62270002]
  4376da:	(bad)  
  4376db:	(bad)  
  4376dc:	fcomp  DWORD PTR [rbp-0x62270002]
  4376e2:	(bad)  
  4376e3:	(bad)  
  4376e4:	fcomp  DWORD PTR [rbp-0x62270002]
  4376ea:	(bad)  
  4376eb:	(bad)  
  4376ec:	fcomp  DWORD PTR [rbp-0x62270002]
  4376f2:	(bad)  
  4376f3:	(bad)  
  4376f4:	fcomp  DWORD PTR [rbp-0x62270002]
  4376fa:	(bad)  
  4376fb:	(bad)  
  4376fc:	fcomp  DWORD PTR [rbp-0x62270002]
  437702:	(bad)  
  437703:	(bad)  
  437704:	fcomp  DWORD PTR [rbp-0x62270002]
  43770a:	(bad)  
  43770b:	(bad)  
  43770c:	fcomp  DWORD PTR [rbp-0x62270002]
  437712:	(bad)  
  437713:	(bad)  
  437714:	fcomp  DWORD PTR [rbp-0x62270002]
  43771a:	(bad)  
  43771b:	(bad)  
  43771c:	fcomp  DWORD PTR [rbp-0x62270002]
  437722:	(bad)  
  437723:	(bad)  
  437724:	fcomp  DWORD PTR [rbp-0x62270002]
  43772a:	(bad)  
  43772b:	(bad)  
  43772c:	fcomp  DWORD PTR [rbp-0x62270002]
  437732:	(bad)  
  437733:	(bad)  
  437734:	fcomp  DWORD PTR [rbp-0x62270002]
  43773a:	(bad)  
  43773b:	dec    eax
  43773d:	popf   
  43773e:	(bad)  
  43773f:	dec    eax
  437741:	popf   
  437742:	(bad)  
  437743:	inc    DWORD PTR [rax]
	...
  43777d:	add    BYTE PTR [rax],al
  43777f:	add    BYTE PTR [rax],dl
  437781:	add    BYTE PTR [rax],al
  437783:	add    BYTE PTR [rbx],al
  437785:	add    BYTE PTR [rax],al
  437787:	add    BYTE PTR [rax],al
  437789:	add    BYTE PTR [rax],cl
  43778b:	add    BYTE PTR [rcx],al
  43778d:	add    al,0x1
  43778f:	add    al,0x2
  437791:	add    BYTE PTR [rax],al
  437793:	add    BYTE PTR [rax+rax*1],al
  437796:	add    al,0x4
  437798:	or     BYTE PTR [rax],cl
  43779a:	or     BYTE PTR [rax],al
  43779c:	add    DWORD PTR [rdx],eax
  43779e:	add    al,0x8
	...
  4377c4:	add    DWORD PTR [rax],eax
	...
  4377d6:	add    al,0x4
  4377d8:	add    BYTE PTR [rax],al
  4377da:	add    BYTE PTR [rax],cl
	...
  4377ec:	add    BYTE PTR [rax],al
  4377ee:	add    BYTE PTR [rax+rax*1],al
	...
  437809:	add    BYTE PTR [rax],al
  43780b:	add    BYTE PTR [rcx],al
	...
  437815:	add    BYTE PTR [rax],al
  437817:	or     BYTE PTR [rax],cl
  437819:	add    BYTE PTR [rax],al
  43781b:	or     BYTE PTR [rax],al
  43781d:	add    BYTE PTR [rax],al
  43781f:	add    bh,bh
  437821:	(bad)  
  437822:	(bad)  
  437823:	(bad)  
  437824:	(bad)  
  437825:	(bad)  
  437826:	(bad)  
  437827:	(bad)  
  437828:	(bad)  
  437829:	(bad)  
  43782a:	(bad)  
  43782b:	(bad)  
  43782c:	(bad)  
  43782d:	(bad)  
  43782e:	(bad)  
  43782f:	inc    DWORD PTR [rax]
	...
  43785d:	add    BYTE PTR [rax],al
  43785f:	add    al,BYTE PTR [rax]
  437861:	add    BYTE PTR [rip+0x105031d],al        # 0x1487b84
  437867:	adc    eax,0x81818183
  43786c:	add    BYTE PTR [rdx+rax*1],al
  43786f:	adc    al,0x2
  437871:	(bad)  
  437872:	add    al,BYTE PTR [rdx+0x2]
  437878:	add    al,BYTE PTR [rax]
  43787a:	(bad)  
  43787b:	add    al,BYTE PTR [rdx]
  43787d:	(bad)  
  43787e:	add    al,BYTE PTR [rax]
  437880:	add    al,BYTE PTR [rdx]
  437882:	add    al,BYTE PTR [rdx]
  437884:	add    DWORD PTR [rax],eax
	...
  4378a2:	add    eax,0x2d
  4378a7:	and    eax,0x400001
  4378ac:	rex add DWORD PTR [rcx],eax
  4378af:	add    DWORD PTR [rax],0x0
  4378b5:	add    BYTE PTR [rax],al
  4378b7:	add    BYTE PTR [rax],al
  4378b9:	add    BYTE PTR [rdx],al
  4378bb:	add    DWORD PTR [rax],0x20000
	...
  4378d1:	add    BYTE PTR [rax],al
  4378d3:	add    DWORD PTR [rax],0x0
	...
  4378e1:	add    BYTE PTR [rax],al
  4378e3:	add    eax,0x1d000500
  4378e8:	add    BYTE PTR [rax],al
  4378ea:	add    BYTE PTR [rax],al
  4378ec:	add    BYTE PTR [rip+0x21d25],al        # 0x459617
	...
  4378fa:	add    BYTE PTR [rcx+0x2000081],al
	...
  437920:	add    BYTE PTR [rip+0x0],al        # 0x437926
  437926:	add    BYTE PTR [rip+0x0],ch        # 0x43792c
  43792c:	add    BYTE PTR [rax],al
  43792e:	add    BYTE PTR [rip+0x2505],ch        # 0x439e39
	...
  437940:	outs   dx,BYTE PTR ds:[rsi]
  437941:	gs je  0x437972
  437944:	movsxd eax,DWORD PTR [rax]
  437946:	(bad)  
  437947:	fs fs jb 0x43796b
  43794b:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c98c771
  437951:	rex.WR add BYTE PTR [rax],r8b
  437954:	je     0x4379ba
  437956:	jae    0x437978
  437958:	and    DWORD PTR [rip+0x4c554e20],edi        # 0x4c98c77e
  43795e:	rex.WR add BYTE PTR [rcx+rbp*2+0x6d],r14b
  437963:	outs   dx,DWORD PTR gs:[rsi]
  437965:	jne    0x4379db
  437967:	pop    rdi
  437968:	jae    0x4379cf
  43796a:	movsxd ebp,DWORD PTR [rdi+0x6e]
  43796d:	fs jae 0x437990
  437970:	ds cmp eax,0x3020
  437976:	add    BYTE PTR [rax],al
  437978:	gs jb  0x4379ed
  43797b:	outs   dx,DWORD PTR ds:[rsi]
  43797c:	jb     0x4379b8
  43797e:	and    BYTE PTR [rax+0x6f],dh
  437981:	ins    BYTE PTR es:[rdi],dx
  437982:	ins    BYTE PTR es:[rdi],dx
  437983:	sub    BYTE PTR [rdx],dh
  437985:	sub    DWORD PTR [rax],esp
  437987:	jb     0x4379ee
  437989:	je     0x437a00
  43798b:	jb     0x4379fb
  43798d:	gs and BYTE PTR fs:[rip+0x22202c64],ah        # 0x2263a5f9
  437995:	and    eax,0xa2273
  43799a:	add    BYTE PTR [rax],al
  43799c:	add    BYTE PTR [rax],al
  43799e:	add    BYTE PTR [rax],al
  4379a0:	jb     0x437a05
  4379a2:	and    BYTE PTR [rip+0x2030203d],bh        # 0x207399e5
  4379a8:	jl     0x437a26
  4379aa:	and    BYTE PTR [rax],ch
  4379ac:	jb     0x437a11
  4379ae:	and    BYTE PTR [rax+riz*1],bh
  4379b1:	xor    BYTE PTR [rax],ah
  4379b3:	es and BYTE PTR es:[rbx+0x6f],dh
  4379b8:	movsxd ebp,DWORD PTR [rbx+0x5f]
  4379bb:	gs jb  0x437a30
  4379be:	outs   dx,BYTE PTR ds:[rsi]
  4379bf:	outs   dx,DWORD PTR ds:[rsi]
  4379c0:	and    BYTE PTR [rip+0x4454203d],bh        # 0x44979a03
  4379c6:	push   rbx
  4379c7:	push   rbx
  4379c8:	rex.WRXB
  4379c9:	rex.XB
  4379ca:	rex.WXB pop r15
  4379cc:	rex.RB
  4379cd:	rex.WB
  4379ce:	rex.WRX push rsp
  4379d0:	push   rdx
  4379d1:	sub    DWORD PTR [rax],eax
  4379d3:	add    BYTE PTR [rax],al
  4379d5:	add    BYTE PTR [rax],al
  4379d7:	add    BYTE PTR [rsp+riz*2+0x73],dh
  4379db:	pop    rdi
  4379dc:	jae    0x437a43
  4379de:	ins    BYTE PTR es:[rdi],dx
  4379df:	movsxd esi,DWORD PTR gs:[rdx+rdi*1+0x20]
  4379e4:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  4379eb:	and    BYTE PTR [rcx+0x6e],ch
  4379ee:	je     0x437a55
  4379f0:	jb     0x437a67
  4379f2:	jo     0x437a68
  4379f4:	and    BYTE PTR [rax+0x61],ch
  4379f7:	outs   dx,BYTE PTR ds:[rsi]
  4379f8:	fs ins BYTE PTR es:[rdi],dx
  4379fa:	gs jb  0x437a1d
  4379fd:	jb     0x437a64
  4379ff:	je     0x437a76
  437a01:	jb     0x437a71
  437a03:	and    BYTE PTR [rbx+0x6f],ah
  437a06:	fs cmp ah,BYTE PTR gs:[rax]
  437a0a:	and    eax,0xa64
  437a0f:	add    BYTE PTR [rax+0x6f],dh
  437a12:	ins    BYTE PTR es:[rdi],dx
  437a13:	ins    BYTE PTR es:[rdi],dx
  437a14:	pop    rdi
  437a15:	jae    0x437a7c
  437a17:	movsxd ebp,DWORD PTR [rdi+0x6e]
  437a1a:	fs jae 0x437a3d
  437a1d:	cmp    eax,0x6974203d
  437a22:	ins    DWORD PTR es:[rdi],dx
  437a23:	outs   dx,DWORD PTR gs:[rsi]
  437a25:	jne    0x437a9b
  437a27:	pop    rdi
  437a28:	jae    0x437a8f
  437a2a:	movsxd ebp,DWORD PTR [rdi+0x6e]
  437a2d:	fs jae 0x437a30
  437a30:	jae    0x437aa1
  437a32:	movsxd ebp,DWORD PTR [rbx+0x65]
  437a35:	je     0x437a57
  437a37:	movsxd esi,DWORD PTR [rdx+0x65]
  437a3a:	(bad)  
  437a3b:	je     0x437aa6
  437a3d:	outs   dx,DWORD PTR ds:[rsi]
  437a3e:	outs   dx,BYTE PTR ds:[rsi]
  437a3f:	and    BYTE PTR [rbp+0x72],ah
  437a42:	jb     0x437ab3
  437a44:	jb     0x437a80
  437a46:	and    BYTE PTR [rip+0x74000a73],ah        # 0x744384bf
  437a4c:	fs jae 0x437aae
  437a4f:	outs   dx,DWORD PTR ds:[rsi]
  437a50:	jo     0x437ab7
  437a52:	outs   dx,BYTE PTR ds:[rsi]
  437a53:	pop    rdi
  437a54:	jae    0x437ac5
  437a56:	movsxd ebp,DWORD PTR [rbx+0x65]
  437a59:	je     0x437a83
  437a5b:	sub    DWORD PTR [rax],esp
  437a5d:	data16 (bad) 
  437a5f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0xa
  437a67:	add    BYTE PTR [rbx+0x6f],al
  437a6a:	outs   dx,BYTE PTR ds:[rsi]
  437a6b:	outs   dx,BYTE PTR ds:[rsi]
  437a6c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  437a71:	and    BYTE PTR [edi+ebp*2+0x20],dh
  437a76:	and    eax,0x6f702073
  437a7b:	jb     0x437af1
  437a7d:	and    BYTE PTR [rip+0x54282064],ah        # 0x546b9ae7
  437a83:	rex.R push rbx
  437a85:	and    BYTE PTR [rsi+0x65],dh
  437a88:	jb     0x437afd
  437a8a:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  437a91:	and    eax,0xa2964
  437a96:	movsxd ebp,DWORD PTR [rdi+0x6e]
  437a99:	outs   dx,BYTE PTR ds:[rsi]
  437a9a:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  437a9f:	outs   dx,BYTE PTR ds:[rsi]
  437aa0:	and    BYTE PTR [rbp+0x73],ah
  437aa3:	je     0x437b06
  437aa5:	(bad)  
  437aa6:	ins    BYTE PTR es:[rdi],dx
  437aa7:	imul   esi,DWORD PTR [rbx+0x68],0xa6465
  437aae:	add    BYTE PTR [rax],al
  437ab0:	je     0x437b16
  437ab2:	jae    0x437b13
  437ab4:	outs   dx,DWORD PTR ds:[rsi]
  437ab5:	jo     0x437b1c
  437ab7:	outs   dx,BYTE PTR ds:[rsi]
  437ab8:	pop    rdi
  437ab9:	jae    0x437b2a
  437abb:	movsxd ebp,DWORD PTR [rbx+0x65]
  437abe:	je     0x437afa
  437ac0:	and    BYTE PTR [rbx+0x6f],ah
  437ac3:	outs   dx,BYTE PTR ds:[rsi]
  437ac4:	outs   dx,BYTE PTR ds:[rsi]
  437ac5:	movsxd esi,DWORD PTR gs:[rax+rbp*1+0x32]
  437aca:	sub    DWORD PTR [rax],esp
  437acc:	jb     0x437b33
  437ace:	je     0x437b45
  437ad0:	jb     0x437b40
  437ad2:	gs and BYTE PTR fs:[rdx],ah
  437ad6:	and    eax,0xa2273
  437adb:	addr32 gs je 0x437b52
  437adf:	outs   dx,DWORD PTR ds:[rsi]
  437ae0:	movsxd ebp,DWORD PTR [rbx+0x6f]
  437ae3:	jo     0x437b59
  437ae5:	sub    BYTE PTR [rdx],dh
  437ae7:	sub    DWORD PTR [rax],esp
  437ae9:	data16 (bad) 
  437aeb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7325203a
  437af3:	or     al,BYTE PTR [rax]
  437af5:	addr32 gs je 0x437b6c
  437af9:	outs   dx,DWORD PTR ds:[rsi]
  437afa:	movsxd ebp,DWORD PTR [rbx+0x6f]
  437afd:	jo     0x437b73
  437aff:	sub    BYTE PTR [rdx],dh
  437b01:	sub    DWORD PTR [rax],esp
  437b03:	jb     0x437b6a
  437b05:	jo     0x437b76
  437b07:	jb     0x437b7d
  437b09:	gs cmp ah,BYTE PTR fs:[rax]
  437b0d:	and    eax,0x74000a73
  437b12:	fs jae 0x437b74
  437b15:	outs   dx,DWORD PTR ds:[rsi]
  437b16:	jo     0x437b7d
  437b18:	outs   dx,BYTE PTR ds:[rsi]
  437b19:	pop    rdi
  437b1a:	jae    0x437b8b
  437b1c:	movsxd ebp,DWORD PTR [rbx+0x65]
  437b1f:	je     0x437b49
  437b21:	sub    DWORD PTR [rax],esp
  437b23:	jae    0x437b9a
  437b25:	movsxd esp,DWORD PTR [rbx+0x65]
  437b28:	gs fs gs or al,BYTE PTR fs:[rax]
  437b2e:	je     0x437b94
  437b30:	jae    0x437b52
  437b32:	es and BYTE PTR es:[rdx+0x75],ah
  437b37:	data16 data16 gs jb 0x437b3c
  437b3c:	jae    0x437ba3
  437b3e:	outs   dx,BYTE PTR ds:[rsi]
  437b3f:	sub    BYTE PTR fs:[rdx],dh
  437b42:	sub    DWORD PTR [rax],esp
  437b44:	data16 (bad) 
  437b46:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6425203a
  437b4e:	and    BYTE PTR [rax],ch
  437b50:	and    eax,0xa2973
  437b55:	jae    0x437bbc
  437b57:	ins    BYTE PTR es:[rdi],dx
  437b58:	movsxd esi,DWORD PTR gs:[rax+rbp*1+0x32]
  437b5d:	sub    DWORD PTR [rax],esp
  437b5f:	data16 (bad) 
  437b61:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6425203a
  437b69:	and    BYTE PTR [rax],ch
  437b6b:	and    eax,0xa2973
  437b70:	je     0x437bd6
  437b72:	jae    0x437bd3
  437b74:	outs   dx,DWORD PTR ds:[esi]
  437b76:	outs   dx,DWORD PTR ds:[rsi]
  437b77:	fs ja  0x437bec
  437b7a:	imul   esi,DWORD PTR [rbp+riz*2+0x28],0x74203a29
  437b82:	imul   ebp,DWORD PTR [rbp+0x65],0x756f2064
  437b89:	je     0x437bb7
  437b8b:	and    BYTE PTR [rcx+0x73],ah
  437b8e:	imul   ebp,DWORD PTR [rcx+0x6e],0x67
  437b92:	and    BYTE PTR [rbx+0x6c],ah
  437b95:	imul   esp,DWORD PTR [rbp+0x6e],0x74000a74
  437b9c:	fs jae 0x437bd6
  437b9f:	pop    rdi
  437ba0:	addr32 gs je 0x437c03
  437ba4:	imul   ebp,DWORD PTR [rsi+0x73],0x636e6174
  437bab:	gs pop rdi
  437bad:	jo     0x437c1e
  437baf:	jb     0x437c25
  437bb1:	jae    0x437bdb
  437bb3:	and    eax,0xa2973
  437bb8:	je     0x437c1e
  437bba:	jae    0x437bf3
  437bbc:	pop    rdi
  437bbd:	addr32 gs je 0x437c20
  437bc1:	imul   ebp,DWORD PTR [rsi+0x73],0x636e6174
  437bc8:	gs pop rdi
  437bca:	jo     0x437c3b
  437bcc:	jb     0x437c42
  437bce:	cmp    ah,BYTE PTR [rax]
  437bd0:	je     0x437c3b
  437bd2:	ins    DWORD PTR es:[rdi],dx
  437bd3:	gs and BYTE PTR fs:[rdi+0x75],ch
  437bd8:	je     0x437bfa
  437bda:	outs   dx,DWORD PTR ds:[rsi]
  437bdb:	outs   dx,BYTE PTR ds:[rsi]
  437bdc:	and    BYTE PTR [rdx+rsi*2+0x79],dh
  437be0:	and    BYTE PTR [rip+0x666f2064],ah        # 0x66b29c4a
  437be6:	and    BYTE PTR [rcx],dh
  437be8:	or     al,BYTE PTR ss:[rax]
  437beb:	imul   ebp,DWORD PTR [rsi+0x73],0x636e6174
  437bf2:	and    BYTE PTR gs:[rcx+0x6e],ch
  437bf6:	outs   dx,WORD PTR ds:[rsi]
	...
  437c00:	gs jb  0x437c75
  437c03:	outs   dx,DWORD PTR ds:[rsi]
  437c04:	jb     0x437c40
  437c06:	and    BYTE PTR [rbp+0x78],ah
  437c09:	jo     0x437c70
  437c0b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
  437c0f:	and    BYTE PTR [edi],ah
  437c12:	and    eax,0x202c2773
  437c17:	outs   dx,WORD PTR ds:[rsi]
  437c19:	jne    0x437c89
  437c1b:	and    BYTE PTR fs:[rdi],ah
  437c1e:	and    eax,0xa2773
  437c23:	and    eax,0x20733531
  437c28:	and    eax,0x53000a73
  437c2d:	gs jb  0x437ca6
  437c30:	gs jb  0x437c81
  437c33:	(bad)  
  437c34:	ins    DWORD PTR es:[rdi],dx
  437c35:	add    BYTE PTR gs:[rbp+riz*2+0x66],ah
  437c3a:	(bad)  
  437c3b:	jne    0x437ca9
  437c3d:	je     0x437c5f
  437c3f:	imul   ebp,DWORD PTR [rsi+0x73],0x636e6174
  437c46:	and    BYTE PTR gs:[rax+0x6f],dh
  437c4a:	jb     0x437cc0
  437c4c:	and    BYTE PTR [rcx+0x73],ch
  437c4f:	and    BYTE PTR [rip+0xa64],ah        # 0x4386b9
  437c55:	add    BYTE PTR [rax],al
  437c57:	add    BYTE PTR [rsp+riz*2+0x73],dh
  437c5b:	(bad)  
  437c5c:	pop    rdi
  437c5d:	addr32 gs je 0x437cc0
  437c61:	imul   ebp,DWORD PTR [rsi+0x73],0x636e6174
  437c68:	gs pop rdi
  437c6a:	jo     0x437cdb
  437c6c:	jb     0x437ce2
  437c6e:	sub    BYTE PTR [rip+0x25202c73],ah        # 0x2563a8e7
  437c74:	jae    0x437c9f
  437c76:	or     al,BYTE PTR [rax]
  437c78:	rex.WB outs dx,BYTE PTR ds:[rsi]
  437c7a:	jae    0x437cf0
  437c7c:	(bad)  
  437c7d:	outs   dx,BYTE PTR ds:[rsi]
  437c7e:	movsxd esp,DWORD PTR [rbp+0x4e]
  437c81:	(bad)  
  437c82:	ins    DWORD PTR es:[rdi],dx
  437c83:	add    BYTE PTR gs:[rbx+riz*2+0x70],dh
  437c88:	add    BYTE PTR [rcx+0x6e],ch
  437c8b:	jae    0x437d01
  437c8d:	(bad)  
  437c8e:	outs   dx,BYTE PTR ds:[rsi]
  437c8f:	movsxd esp,DWORD PTR [rbp+0x20]
  437c92:	jo     0x437d03
  437c94:	jb     0x437d0a
  437c96:	and    BYTE PTR [rcx+0x73],ch
  437c99:	and    BYTE PTR [rip+0x49000a64],ah        # 0x49438703
  437c9f:	jae    0x437ce4
  437ca1:	ins    BYTE PTR es:[rdi],dx
  437ca2:	jne    0x437d17
  437ca4:	je     0x437d0b
  437ca6:	jb     0x437d0d
  437ca8:	add    BYTE PTR fs:[rsi+0x65],dl
  437cac:	jb     0x437d21
  437cae:	imul   ebp,DWORD PTR [rdi+0x6e],0x706e00
  437cb5:	jbe    0x437d20
  437cb7:	(bad)  
	...
  437cc0:	sub    al,0x7c
  437cc2:	rex.XB add BYTE PTR [r8],al
  437cc5:	add    BYTE PTR [rax],al
  437cc7:	add    BYTE PTR [rax+0x7c],bh
  437cca:	rex.XB add BYTE PTR [r8],al
  437ccd:	add    BYTE PTR [rax],al
  437ccf:	add    BYTE PTR [rsi+0x437c],bl
  437cd5:	add    BYTE PTR [rax],al
  437cd7:	add    BYTE PTR [rdx+0x437c],ch
  437cdd:	add    BYTE PTR [rax],al
  437cdf:	add    BYTE PTR [rbp+0x437c],al
  437ce5:	add    BYTE PTR [rax],al
  437ce7:	add    BYTE PTR [rdx+0x437c],dh
  437ced:	add    BYTE PTR [rax],al
  437cef:	add    BYTE PTR [rbp+0x437c],dh
	...
  437cfd:	add    BYTE PTR [rax],al
  437cff:	add    BYTE PTR [rbp+0x6e],dh
  437d02:	outs   dx,DWORD PTR fs:[rsi]
  437d04:	movsxd esi,DWORD PTR [rbp+0x6d]
  437d07:	outs   dx,BYTE PTR gs:[rsi]
  437d09:	je     0x437d70
  437d0b:	and    BYTE PTR fs:[rdi+0x53],dl
  437d0f:	and    BYTE PTR [r13+0x72],spl
  437d13:	jb     0x437d84
  437d15:	jb     0x437d37
  437d17:	movsxd ebp,DWORD PTR [rdi+0x64]
  437d1a:	add    BYTE PTR gs:[rax],al
  437d1d:	add    BYTE PTR [rax],al
  437d1f:	add    BYTE PTR [rcx+0x6e],ch
  437d22:	and    BYTE PTR [rsp+riz*2+0x73],dh
  437d26:	pop    rdi
  437d27:	jo     0x437d9e
  437d29:	jae    0x437d93
  437d2b:	pop    rdi
  437d2c:	data16 jne 0x437d9d
  437d2f:	movsxd ecx,DWORD PTR [rdx]
  437d31:	add    BYTE PTR [rsp+rbp*2+0x73],dh
  437d35:	movsxd eax,DWORD PTR cs:[rax]
  437d38:	imul   ebp,DWORD PTR [rsi+0x20],0x5f736474
  437d3f:	jo     0x437db6
  437d41:	ins    BYTE PTR es:[rdi],dx
  437d42:	ins    BYTE PTR es:[rdi],dx
  437d43:	pop    rdi
  437d44:	data16 jne 0x437db5
  437d47:	movsxd ecx,DWORD PTR [rdx]
  437d49:	add    BYTE PTR [rcx+0x6e],ch
  437d4c:	and    BYTE PTR [rsp+riz*2+0x73],dh
  437d50:	pop    rdi
  437d51:	jo     0x437dc8
  437d53:	jae    0x437dbd
  437d55:	pop    rdi
  437d56:	data16 jne 0x437dc7
  437d59:	movsxd ebx,DWORD PTR [rdi+0x6c]
  437d5c:	outs   dx,DWORD PTR ds:[rsi]
  437d5d:	imul   ebp,DWORD PTR [esi+0xa],0x206e6900
  437d65:	je     0x437dcb
  437d67:	jae    0x437dc8
  437d69:	jo     0x437de0
  437d6b:	ins    BYTE PTR es:[rdi],dx
  437d6c:	ins    BYTE PTR es:[rdi],dx
  437d6d:	pop    rdi
  437d6e:	data16 jne 0x437ddf
  437d71:	movsxd ebx,DWORD PTR [rdi+0x6c]
  437d74:	outs   dx,DWORD PTR ds:[rsi]
  437d75:	imul   ebp,DWORD PTR [esi+0xa],0x76616800
  437d7d:	and    BYTE PTR gs:[rsi],bh
  437d80:	cmp    eax,0x3020
  437d85:	add    BYTE PTR [rax],al
  437d87:	add    BYTE PTR [rbp+0x72],al
  437d8a:	jb     0x437dfb
  437d8c:	jb     0x437dae
  437d8e:	jbe    0x437df5
  437d90:	jb     0x437dfb
  437d92:	data16 jns 0x437dfe
  437d95:	outs   dx,BYTE PTR ds:[rsi]
  437d96:	and    BYTE PTR [ebx+0x65],ah
  437d9a:	jb     0x437e10
  437d9c:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  437da3:	cmp    ah,BYTE PTR [rax]
  437da5:	and    eax,0x43000a73
  437daa:	gs jb  0x437e21
  437dad:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  437db4:	and    BYTE PTR [rbx+0x74],dh
  437db7:	(bad)  
  437db8:	je     0x437e2f
  437dba:	jae    0x437df6
  437dbc:	and    BYTE PTR [rip+0xa75],ah        # 0x438837
  437dc2:	add    BYTE PTR [rax],al
  437dc4:	add    BYTE PTR [rax],al
  437dc6:	add    BYTE PTR [rax],al
  437dc8:	rex.RB jb 0x437e3d
  437dcb:	outs   dx,DWORD PTR ds:[rsi]
  437dcc:	jb     0x437dee
  437dce:	addr32 gs je 0x437e46
  437dd2:	imul   ebp,DWORD PTR [rsi+0x67],0x534c5420
  437dd9:	and    BYTE PTR [rbx+0x65],dh
  437ddc:	jae    0x437e51
  437dde:	imul   ebp,DWORD PTR [rdi+0x6e],0x65657020
  437de5:	jb     0x437e5a
  437de7:	or     al,BYTE PTR [rax]
  437de9:	add    BYTE PTR [rax],al
  437deb:	add    BYTE PTR [rax],al
  437ded:	add    BYTE PTR [rax],al
  437def:	add    BYTE PTR [rbx+0x65],al
  437df2:	jb     0x437e68
  437df4:	imul   esp,DWORD PTR [rsi+0x69],0x65746163
  437dfb:	and    BYTE PTR [rax+0x6f],ch
  437dfe:	jae    0x437e74
  437e00:	outs   dx,BYTE PTR ds:[rsi]
  437e01:	(bad)  
  437e02:	ins    DWORD PTR es:[rdi],dx
  437e03:	and    BYTE PTR gs:[rdi+rbp*2+0x65],ah
  437e08:	jae    0x437e2a
  437e0a:	outs   dx,BYTE PTR ds:[rsi]
  437e0b:	outs   dx,DWORD PTR ds:[rsi]
  437e0c:	je     0x437e2e
  437e0e:	ins    DWORD PTR es:[rdi],dx
  437e0f:	(bad)  
  437e10:	je     0x437e75
  437e12:	push   0x4e47000a
  437e17:	push   rbp
  437e18:	push   rsp
  437e19:	rex.WR push rbx
  437e1b:	cmp    ah,BYTE PTR [rax]
  437e1d:	ins    BYTE PTR es:[rdi],dx
  437e1e:	gs jbe 0x437e86
  437e21:	ins    BYTE PTR es:[rdi],dx
  437e22:	and    BYTE PTR [rip+0x200a3a64],ah        # 0x204db88c
  437e28:	and    BYTE PTR [rip+0x6e690073],ah        # 0x6eac7ea1
  437e2e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x697a696c
  437e36:	outs   dx,BYTE PTR ds:[rsi]
  437e37:	and    BYTE PTR [esp+ebp*2+0x73],dh
  437e3c:	add    BYTE PTR [rcx+0x6c],ah
  437e3f:	ins    BYTE PTR es:[rdi],dx
  437e40:	outs   dx,DWORD PTR ds:[rsi]
  437e41:	movsxd esp,DWORD PTR [rcx+0x74]
  437e44:	imul   ebp,DWORD PTR [rsi+0x67],0x65726320
  437e4b:	fs outs dx,BYTE PTR gs:[rsi]
  437e4e:	je     0x437eb9
  437e50:	(bad)  
  437e51:	ins    BYTE PTR es:[rdi],dx
  437e52:	jae    0x437e54
  437e54:	ins    BYTE PTR es:[rdi],dx
  437e55:	outs   dx,DWORD PTR ds:[rsi]
  437e56:	(bad)  
  437e57:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x20414320
  437e5f:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6f6c
  437e66:	(bad)  
  437e67:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x4c524320
  437e6f:	and    BYTE PTR [rsi+0x69],ah
  437e72:	ins    BYTE PTR es:[rdi],dx
  437e73:	add    BYTE PTR gs:[rcx+0x6e],ch
  437e77:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x697a696c
  437e7f:	outs   dx,BYTE PTR ds:[rsi]
  437e80:	and    BYTE PTR [ebx+0x65],dh
  437e84:	jae    0x437ef9
  437e86:	imul   ebp,DWORD PTR [rdi+0x6e],0x74657300
  437e8d:	je     0x437ef8
  437e8f:	outs   dx,BYTE PTR ds:[rsi]
  437e90:	and    BYTE PTR [ebx+0x72],ah
  437e94:	gs fs outs dx,BYTE PTR gs:[rsi]
  437e98:	je     0x437f03
  437e9a:	(bad)  
  437e9b:	ins    BYTE PTR es:[rdi],dx
  437e9c:	add    BYTE PTR [rax+0x61],ch
  437e9f:	outs   dx,BYTE PTR ds:[rsi]
  437ea0:	fs jae 0x437f0b
  437ea3:	(bad)  
  437ea4:	imul   esp,DWORD PTR [rbp+0x0],0x73
  437ea8:	jns    0x437f1d
  437eaa:	je     0x437f11
  437eac:	ins    DWORD PTR es:[rdi],dx
  437ead:	add    BYTE PTR [rsi+0x4f],cl
  437eb0:	push   rdx
  437eb1:	rex.WRB
  437eb2:	rex.B
  437eb3:	rex.WR cmp r12b,BYTE PTR [rip+0x504d4f43]        # 0x5090cdfd
  437eba:	push   r12
  437ebc:	cmp    ch,BYTE PTR [rip+0x53524556]        # 0x5395c418
  437ec2:	sub    eax,0x334c5353
  437ec7:	xor    BYTE PTR cs:[rax],al
  437eca:	push   0x73646e61
  437ecf:	push   0x20656b61
  437ed4:	jae    0x437f4b
  437ed6:	movsxd esp,DWORD PTR [rbx+0x65]
  437ed9:	gs fs gs and DWORD PTR fs:[rcx],esp
  437edf:	or     al,BYTE PTR [rax]
  437ee1:	and    eax,0x61662073
  437ee6:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x7325203a
  437eee:	or     al,BYTE PTR [rax]
  437ef0:	and    eax,0x28200064
  437ef5:	and    eax,0x64253a73
  437efa:	sub    DWORD PTR [rax],eax
  437efc:	and    eax,0x64253a73
  437f01:	add    BYTE PTR [rbx+0x74],dh
  437f04:	outs   dx,DWORD PTR fs:[rsi]
  437f06:	jne    0x437f7c
  437f08:	add    BYTE PTR [rbx+0x74],dh
  437f0b:	fs gs jb 0x437f81
  437f0f:	add    BYTE PTR [rcx+0x0],ah
  437f12:	and    eax,0x25000a73
  437f17:	xor    BYTE PTR [rax+rdi*2],dh
  437f1a:	add    BYTE PTR [rip+0x783230],ah        # 0xbbb150
  437f20:	and    eax,0x770063
  437f25:	and    eax,0x6d252d59
  437f2a:	sub    eax,0x25206425
  437f2f:	rex.W cmp spl,BYTE PTR [rip+0x53253a4d]        # 0x5368b983
  437f36:	add    BYTE PTR [rcx],dh
  437f38:	xor    BYTE PTR cs:[rax],dh
  437f3b:	xor    dh,BYTE PTR cs:[rax+rax*1]
  437f3f:	add    BYTE PTR [rbx+0x74],dl
  437f42:	(bad)  
  437f43:	jb     0x437fb9
  437f45:	imul   ebp,DWORD PTR [rsi+0x67],0x676f6c20
  437f4c:	and    BYTE PTR [rsi+0x69],ah
  437f4f:	ins    BYTE PTR es:[rdi],dx
  437f50:	and    BYTE PTR gs:[rsi+0x6f],ah
  437f54:	jb     0x437f76
  437f56:	rex.RX jb 0x437fbe
  437f59:	gs push rsp
  437f5b:	rex.R push rbx
  437f5d:	and    BYTE PTR [rip+0x6f090a73],ah        # 0x6f4c89d6
  437f63:	outs   dx,BYTE PTR ds:[rsi]
  437f64:	and    BYTE PTR [rip+0x69772073],ah        # 0x69ba9fdd
  437f6a:	je     0x437fd4
  437f6c:	and    BYTE PTR [rbp+riz*2+0x62],ah
  437f70:	jne    0x437fd9
  437f72:	and    BYTE PTR [rsi+0x6c],ah
  437f75:	(bad)  
  437f76:	addr32 jae 0x437f99
  437f79:	xor    BYTE PTR [rax+0x25],bh
  437f7c:	js     0x437fac
  437f7e:	or     al,BYTE PTR [rax]
  437f80:	ins    BYTE PTR es:[rdi],dx
  437f81:	outs   dx,DWORD PTR ds:[rsi]
  437f82:	movsxd eax,DWORD PTR cs:[eax]
  437f86:	movsxd ebp,DWORD PTR [rdi+0x6c]
  437f89:	add    BYTE PTR [rbx+0x6f],ah
  437f8c:	ins    BYTE PTR es:[rdi],dx
  437f8d:	sub    eax,0x6c6f633e
  437f92:	jne    0x438001
  437f94:	outs   dx,BYTE PTR ds:[rsi]
  437f95:	pop    rdi
  437f96:	fs (bad) 
  437f98:	je     0x437ffb
  437f9a:	add    BYTE PTR [rax],al
  437f9c:	add    BYTE PTR [rax],al
  437f9e:	add    BYTE PTR [rax],al
  437fa0:	outs   dx,BYTE PTR ds:[rsi]
  437fa1:	outs   dx,DWORD PTR ds:[rsi]
  437fa2:	and    BYTE PTR [rbp+0x65],ch
  437fa5:	ins    DWORD PTR es:[rdi],dx
  437fa6:	outs   dx,DWORD PTR ds:[rsi]
  437fa7:	jb     0x438022
  437fa9:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  437fad:	ins    BYTE PTR es:[rdi],dx
  437fae:	outs   dx,DWORD PTR ds:[rsi]
  437faf:	and    BYTE PTR [ecx+eiz*2+0x74],ah
  437fb4:	(bad)  
  437fb5:	and    BYTE PTR [rsi+0x6f],ah
  437fb8:	jb     0x437fda
  437fba:	je     0x438035
  437fbc:	jo     0x438023
  437fbe:	and    BYTE PTR [rip+0x74000a73],ah        # 0x74438a37
  437fc4:	jns    0x438036
  437fc6:	and    BYTE PTR gs:[rip+0x61682073],ah        # 0x61aba040
  437fcd:	jae    0x437fef
  437fcf:	jbe    0x438032
  437fd1:	ins    BYTE PTR es:[rdi],dx
  437fd2:	jne    0x438039
  437fd4:	and    BYTE PTR [rdx],ah
  437fd6:	and    eax,0xa2273
  437fdb:	je     0x438056
  437fdd:	jo     0x438044
  437fdf:	and    BYTE PTR [rip+0x61682073],ah        # 0x61aba058
  437fe5:	jae    0x438007
  437fe7:	jbe    0x43804a
  437fe9:	ins    BYTE PTR es:[rdi],dx
  437fea:	jne    0x438051
  437fec:	and    BYTE PTR [rsi+0x55],cl
  437fef:	rex.WR
  437ff0:	rex.WR or r8b,BYTE PTR [rax]
  437ff3:	je     0x43806e
  437ff5:	jo     0x43805c
  437ff7:	and    BYTE PTR [rip+0x61682073],ah        # 0x61aba070
  437ffd:	jae    0x43801f
  437fff:	jbe    0x438062
  438001:	ins    BYTE PTR es:[rdi],dx
  438002:	jne    0x438069
  438004:	and    BYTE PTR [rip+0x74000a64],ah        # 0x74438a6e
  43800a:	jns    0x43807c
  43800c:	and    BYTE PTR gs:[rip+0x61682073],ah        # 0x61aba086
  438013:	jae    0x438035
  438015:	jbe    0x438078
  438017:	ins    BYTE PTR es:[rdi],dx
  438018:	jne    0x43807f
  43801a:	and    BYTE PTR [rip+0x63000a66],ah        # 0x63438a86
  438020:	(bad)  
  438021:	outs   dx,BYTE PTR ds:[rsi]
  438022:	outs   dx,BYTE PTR ds:[rsi]
  438023:	outs   dx,DWORD PTR ds:[rsi]
  438024:	je     0x438046
  438026:	ins    BYTE PTR es:[rdi],dx
  438027:	outs   dx,DWORD PTR ds:[rsi]
  438028:	and    BYTE PTR [ecx+eiz*2+0x74],ah
  43802d:	(bad)  
  43802e:	and    BYTE PTR [rsi+0x6f],ah
  438031:	jb     0x438053
  438033:	je     0x4380ae
  438035:	jo     0x43809c
  438037:	and    BYTE PTR [rip+0x54000a73],ah        # 0x54438ab0
  43803d:	ret    
  43803e:	(bad)  
  43803f:	jmp    QWORD PTR [rsp+rax*8-0x3b5b0002]
  438046:	(bad)  
  438047:	jmp    QWORD PTR [rsp+rax*8-0x3b5b0002]
  43804e:	(bad)  
  43804f:	jmp    QWORD PTR [rsp+rax*8-0x3b5b0002]
  438056:	(bad)  
  438057:	jmp    QWORD PTR [rsp+rax*8-0x3cab0002]
  43805e:	(bad)  
  43805f:	jmp    FWORD PTR [rax-0x5b00013d]
  438065:	(bad)  
  438066:	(bad)  
  438067:	jmp    QWORD PTR [rsp+rax*8-0x3b5b0002]
  43806e:	(bad)  
  43806f:	jmp    rsp
  438071:	ret    
  438072:	(bad)  
  438073:	jmp    QWORD PTR [rsp+rax*8-0x3b5b0002]
  43807a:	(bad)  
  43807b:	jmp    QWORD PTR [rsp+rax*8-0x3bdb0002]
  438082:	(bad)  
  438083:	jmp    QWORD PTR [rsp+rax*8-0x3b5b0002]
  43808a:	(bad)  
  43808b:	jmp    QWORD PTR [rsp+rax*8-0x2]
  43808f:	jmp    QWORD PTR [rsp+rax*8-0x3b5b0002]
  438096:	(bad)  
  438097:	(bad)  
  438098:	cmp    ebx,eax
  43809a:	(bad)  
  43809b:	inc    DWORD PTR [rax]
  43809d:	add    BYTE PTR [rax],al
  43809f:	add    BYTE PTR [rdx+0x65],dl
  4380a2:	(bad)  
  4380a3:	and    BYTE PTR fs:[rcx+0x74],ah
  4380a7:	je     0x43810e
  4380a9:	ins    DWORD PTR es:[rdi],dx
  4380aa:	jo     0x438120
  4380ac:	and    BYTE PTR [rdi+0x68],dh
  4380af:	outs   dx,BYTE PTR gs:[rsi]
  4380b1:	and    BYTE PTR [rbx+0x74],dh
  4380b4:	(bad)  
  4380b5:	je     0x43811c
  4380b7:	and    BYTE PTR [rcx+0x73],ch
  4380ba:	and    BYTE PTR [rsp+rax*2+0x53],dl
  4380be:	pop    rdi
  4380bf:	rex.R
  4380c0:	rex.RB
  4380c1:	rex.B
  4380c2:	add    BYTE PTR [rax+0x61],r14b
  4380c6:	movsxd ebp,DWORD PTR [rbx+0x65]
  4380c9:	je     0x4380f9
  4380cb:	movsxd eax,DWORD PTR [rax]
  4380cd:	push   rdx
  4380ce:	movsxd esp,DWORD PTR gs:[rbp+0x69]
  4380d2:	jbe    0x438139
  4380d4:	and    BYTE PTR fs:[rax+0x61],dh
  4380d8:	movsxd ebp,DWORD PTR [rbx+0x65]
  4380db:	je     0x4380dd
  4380dd:	push   rbx
  4380de:	outs   dx,BYTE PTR gs:[rsi]
  4380e0:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x63617020
  4380e8:	imul   esp,DWORD PTR [rbp+0x74],0x0
  4380ec:	add    BYTE PTR [rax],al
  4380ee:	add    BYTE PTR [rax],al
  4380f0:	jae    0x438166
  4380f2:	jb     0x438159
  4380f4:	(bad)  
  4380f5:	ins    DWORD PTR es:[rdi],dx
  4380f6:	movsxd eax,DWORD PTR cs:[rax]
  4380f9:	jae    0x43816f
  4380fb:	jb     0x438162
  4380fd:	(bad)  
  4380fe:	ins    DWORD PTR es:[rdi],dx
  4380ff:	sub    eax,0x6675623e
  438104:	pop    rdi
  438105:	ins    BYTE PTR es:[rdi],dx
  438106:	outs   dx,BYTE PTR gs:[rsi]
  438108:	and    BYTE PTR [rsi],bh
  43810a:	cmp    eax,0x6e656c20
  43810f:	add    BYTE PTR [rbp+riz*2+0x6e],ch
  438113:	and    BYTE PTR [rdi*1+0x72747320],bh
  43811a:	gs (bad) 
  43811c:	ins    DWORD PTR es:[rdi],dx
  43811d:	sub    eax,0x6675623e
  438122:	pop    rdi
  438123:	ins    BYTE PTR es:[rdi],dx
  438124:	outs   dx,BYTE PTR gs:[rsi]
  438126:	add    BYTE PTR [rax],al
  438128:	jae    0x43819e
  43812a:	jb     0x438191
  43812c:	(bad)  
  43812d:	ins    DWORD PTR es:[rdi],dx
  43812e:	sub    eax,0x6675623e
  438133:	data16 gs jb 0x438157
  438137:	cmp    eax,0x6328203d
  43813c:	push   0x2a207261
  438141:	sub    DWORD PTR [rax],esp
  438143:	je     0x4381a9
  438145:	jae    0x438174
  438147:	outs   dx,DWORD PTR ds:[rsi]
  438149:	jne    0x4381bf
  43814b:	pop    rdi
  43814c:	(bad)  
  43814d:	jne    0x4381b5
  43814f:	and    BYTE PTR [rbx],ch
  438151:	and    BYTE PTR [rsp+riz*2+0x73],dh
  438155:	sub    eax,0x74756f3e
  43815a:	pop    rdi
  43815b:	jo     0x4381cc
  43815d:	jae    0x43815f
  43815f:	add    BYTE PTR [rbx+0x74],dh
  438162:	jb     0x4381c9
  438164:	(bad)  
  438165:	ins    DWORD PTR es:[rdi],dx
  438166:	sub    eax,0x6675623e
  43816b:	pop    rdi
  43816c:	ins    BYTE PTR es:[rdi],dx
  43816d:	outs   dx,BYTE PTR gs:[rsi]
  43816f:	and    BYTE PTR [rip+0x6474203d],bh        # 0x64b7a1b2
  438175:	jae    0x4381a4
  438177:	outs   dx,DWORD PTR ds:[rsi]
  438179:	jne    0x4381ef
  43817b:	pop    rdi
  43817c:	(bad)  
  43817d:	jne    0x4381e5
  43817f:	pop    rdi
  438180:	ins    DWORD PTR es:[rdi],dx
  438181:	(bad)  
  438182:	js     0x4381a4
  438184:	sub    eax,0x73647420
  438189:	sub    eax,0x74756f3e
  43818e:	pop    rdi
  43818f:	jo     0x438200
  438191:	jae    0x4381b3
  438193:	sub    esp,DWORD PTR [rax]
  438195:	push   rsp
  438196:	rex.R push rbx
  438198:	pop    rdi
  438199:	rex.B
  43819a:	rex.R
  43819b:	rex.R
  43819c:	rex.WB push r12
  43819e:	rex.WB
  43819f:	rex.WRXB
  4381a0:	rex.WRX
  4381a1:	rex.B
  4381a2:	rex.WR pop rdi
  4381a4:	push   rbx
  4381a5:	push   rax
  4381a6:	rex.B
  4381a7:	rex.XB
  4381a8:	add    BYTE PTR [r11+0x2d],r14b
  4381ac:	ds (bad) 
  4381ae:	ins    BYTE PTR es:[rdi],dx
  4381af:	ins    BYTE PTR es:[rdi],dx
  4381b0:	outs   dx,DWORD PTR ds:[rsi]
  4381b1:	movsxd esp,DWORD PTR [rcx+0x74]
  4381b4:	gs and BYTE PTR fs:[rsi],bh
  4381b8:	and    BYTE PTR [rbx+0x2d],dh
  4381bb:	ds jae 0x438227
  4381be:	jp     0x438225
  4381c0:	add    BYTE PTR [rcx+0x62],ch
  4381c3:	and    BYTE PTR [rsi],bh
  4381c5:	cmp    eax,0x6d657420
  4381ca:	jo     0x4381cc
  4381cc:	add    BYTE PTR [rax],al
  4381ce:	add    BYTE PTR [rax],al
  4381d0:	rex.RB jb 0x438245
  4381d3:	outs   dx,DWORD PTR ds:[rsi]
  4381d4:	jb     0x438210
  4381d6:	and    BYTE PTR [rsp+riz*2+0x73],dh
  4381da:	pop    rdi
  4381db:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4381de:	jbe    0x438245
  4381e0:	jb     0x438256
  4381e2:	pop    rdi
  4381e3:	jae    0x438259
  4381e5:	jb     0x43824c
  4381e7:	(bad)  
  4381e8:	ins    DWORD PTR es:[rdi],dx
  4381e9:	cmp    ah,BYTE PTR [rax]
  4381eb:	je     0x438251
  4381ed:	jae    0x43824e
  4381ef:	imul   esp,DWORD PTR [rbx+0x6f],0x7220766e
  4381f6:	gs je  0x43826e
  4381f9:	jb     0x438269
  4381fb:	gs and BYTE PTR fs:[rbp+0x72],ah
  438200:	jb     0x438270
  438202:	outs   dx,DWORD PTR ds:[rsi]
  438203:	and    BYTE PTR [rip+0x63202c64],ah        # 0x6363ae6d
  438209:	outs   dx,DWORD PTR ds:[rsi]
  43820a:	outs   dx,BYTE PTR ds:[rsi]
  43820b:	jbe    0x43826c
  43820d:	gs jb  0x438282
  438210:	outs   dx,BYTE PTR ds:[rsi]
  438211:	outs   dx,DWORD PTR ds:[rsi]
  438212:	and    BYTE PTR [rip+0xa64],ah        # 0x438c7c
  438218:	rex.RB jb 0x43828d
  43821b:	outs   dx,DWORD PTR ds:[rsi]
  43821c:	jb     0x438258
  43821e:	and    BYTE PTR [rsp+riz*2+0x73],dh
  438222:	pop    rdi
  438223:	movsxd ebp,DWORD PTR [rdi+0x6e]
  438226:	jbe    0x43828d
  438228:	jb     0x43829e
  43822a:	pop    rdi
  43822b:	jae    0x4382a1
  43822d:	jb     0x438294
  43822f:	(bad)  
  438230:	ins    DWORD PTR es:[rdi],dx
  438231:	cmp    ah,BYTE PTR [rax]
  438233:	rex.RXB (bad) 
  438235:	jbe    0x43829c
  438237:	and    BYTE PTR [rbp+0x70],dh
  43823a:	and    BYTE PTR [rbx+0x6f],ah
  43823d:	outs   dx,BYTE PTR ds:[rsi]
  43823e:	jbe    0x4382a5
  438240:	jb     0x4382b6
  438242:	imul   ebp,DWORD PTR [rsi+0x67],0x20752520
  438249:	(bad)  
  43824a:	jns    0x4382c0
  43824c:	gs jae 0x43826f
  43824f:	fs jne 0x4382b7
  438252:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  438256:	gs jb  0x4382cb
  438259:	outs   dx,DWORD PTR ds:[rsi]
  43825a:	jb     0x43827c
  43825c:	and    eax,0xa2e64
  438261:	push   rsp
  438262:	jb     0x4382d3
  438264:	jne    0x4382c8
  438266:	ins    BYTE PTR es:[rdi],dx
  438267:	gs jae 0x4382d9
  43826a:	ins    DWORD PTR es:[rdi],dx
  43826b:	and    BYTE PTR gs:[rdx+0x79],ah
  43826f:	je     0x4382d6
  438271:	jae    0x4382ad
  438273:	add    BYTE PTR [rax],al
  438275:	add    BYTE PTR [rax],al
  438277:	add    BYTE PTR [rsi+0x6f],cl
  43827a:	and    BYTE PTR [rbx+0x6f],ah
  43827d:	outs   dx,BYTE PTR ds:[rsi]
  43827e:	jbe    0x4382e5
  438280:	jb     0x4382f5
  438282:	imul   ebp,DWORD PTR [rdi+0x6e],0x736f7020
  438289:	jae    0x4382f4
  43828b:	(bad)  
  43828c:	ins    BYTE PTR es:[rdi],dx
  43828d:	cmp    ah,BYTE PTR gs:[rax]
  438290:	jae    0x438301
  438292:	ins    DWORD PTR es:[rdi],dx
  438293:	and    BYTE PTR gs:[rdx+0x79],ah
  438297:	je     0x4382fe
  438299:	jae    0x4382bb
  43829b:	ins    BYTE PTR es:[rdi],dx
  43829c:	gs data16 je 0x4382ce
  4382a0:	or     al,BYTE PTR [rax]
  4382a2:	ins    BYTE PTR es:[rdi],dx
  4382a3:	gs data16 je 0x4382c7
  4382a7:	and    BYTE PTR ds:[rax],dh
  4382aa:	add    BYTE PTR [rax],al
  4382ac:	add    BYTE PTR [rax],al
  4382ae:	add    BYTE PTR [rax],al
  4382b0:	push   rdx
  4382b1:	push   rbx
  4382b2:	and    BYTE PTR [r8+0x55],dl
  4382b6:	rex.X
  4382b7:	rex.WR
  4382b8:	rex.WB
  4382b9:	rex.XB and BYTE PTR [r11+0x45],cl
  4382bd:	pop    rcx
  4382be:	add    BYTE PTR [rax],al
  4382c0:	rex.RB jb 0x438335
  4382c3:	outs   dx,DWORD PTR ds:[rsi]
  4382c4:	jb     0x4382e6
  4382c6:	and    eax,0x65642064
  4382cb:	movsxd ebp,DWORD PTR [rdi+0x64]
  4382ce:	imul   ebp,DWORD PTR [rsi+0x67],0x62757020
  4382d5:	ins    BYTE PTR es:[rdi],dx
  4382d6:	imul   esp,DWORD PTR [rbx+0x20],0x3a79656b
  4382dd:	and    BYTE PTR [rip+0x73000a73],ah        # 0x73438d56
  4382e3:	movsxd ebx,DWORD PTR gs:[rdi+0x6e]
  4382e7:	outs   dx,DWORD PTR gs:[esi]
  4382ea:	je     0x438355
  4382ec:	(bad)  
  4382ed:	je     0x438354
  4382ef:	pop    rdi
  4382f0:	outs   dx,BYTE PTR ds:[esi]
  4382f2:	jne    0x438368
  4382f4:	ins    BYTE PTR es:[rdi],dx
  4382f5:	jae    0x438325
  4382f7:	push   0x766e4900
  4382fc:	(bad)  
  4382fd:	ins    BYTE PTR es:[rdi],dx
  4382fe:	imul   esp,DWORD PTR [rax+riz*1+0x44],0x63205245
  438306:	outs   dx,DWORD PTR ds:[rsi]
  438307:	outs   dx,BYTE PTR ds:[rsi]
  438308:	je     0x43836f
  43830a:	outs   dx,BYTE PTR ds:[rsi]
  43830b:	je     0x438317
  43830d:	add    BYTE PTR [rbp+0x6d],ah
  438310:	cs fs (bad) 
  438313:	add    BYTE PTR [rbp+0x6d],ah
  438316:	cs jb  0x438388
  438319:	jae    0x43831b
  43831b:	rex.RB jb 0x438390
  43831e:	outs   dx,DWORD PTR ds:[rsi]
  43831f:	jb     0x438341
  438321:	outs   dx,BYTE PTR gs:[rsi]
  438323:	movsxd esi,DWORD PTR [rdx+0x79]
  438326:	jo     0x43839c
  438328:	imul   ebp,DWORD PTR [rsi+0x67],0x73656d20
  43832f:	jae    0x438392
  438331:	or     al,BYTE PTR gs:[eax]
  438335:	gs ins DWORD PTR es:[rdi],dx
  438337:	add    ah,ch
  438339:	(bad)  
  43833a:	add    BYTE PTR [rcx],al
  43833c:	add    BYTE PTR [rax],al
  43833e:	add    BYTE PTR [rax],al
  438340:	add    BYTE PTR [rax],al
  438342:	add    cl,ah
  438344:	(bad)  
  438345:	(bad)  
  438346:	(bad)  
  438347:	jg     0x438349
  438349:	add    ah,ch
  43834b:	(bad)  
  43834c:	add    BYTE PTR [rdx],al
  43834e:	add    BYTE PTR [rax],al
  438350:	add    BYTE PTR [rax],al
  438352:	add    BYTE PTR [rax],al
  438354:	add    BYTE PTR [rdi],ah
  438356:	inc    DWORD PTR [rax]
  438358:	add    BYTE PTR [rax],al
  43835a:	add    BYTE PTR [rax],al
  43835c:	add    BYTE PTR [rax],al
  43835e:	loope  0x43835f
  438360:	(bad)  
  438361:	(bad)  
  438362:	jg     0x438364
	...
  438370:	jae    0x4383d7
  438372:	movsxd esi,DWORD PTR [rbp+0x72]
  438375:	xor    esi,DWORD PTR [rdx]
  438377:	cs fs ins BYTE PTR es:[rdi],dx
  43837a:	ins    BYTE PTR es:[rdi],dx
  43837b:	add    BYTE PTR [rcx+0x6e],cl
  43837e:	imul   esi,DWORD PTR [rbx+rdx*2+0x65],0x69727563
  438386:	je     0x438401
  438388:	rex.WB outs dx,BYTE PTR ds:[rsi]
  43838a:	je     0x4383f1
  43838c:	jb     0x4383f4
  43838e:	(bad)  
  43838f:	movsxd esp,DWORD PTR [rbp+0x41]
  438392:	add    BYTE PTR [rsi+0x65],cl
  438395:	outs   dx,DWORD PTR ds:[esi]
  438397:	je     0x438402
  438399:	(bad)  
  43839a:	je     0x438401
  43839c:	add    BYTE PTR [rbp+0x53],cl
  43839f:	push   rbx
  4383a0:	push   rcx
  4383a1:	rex.WR push rbx
  4383a3:	jbe    0x438408
  4383a5:	(bad)  
  4383a6:	and    eax,0x64253a73
  4383ab:	add    BYTE PTR [rbx+0x65],ch
  4383ae:	jb     0x438412
  4383b0:	gs jb  0x438422
  4383b3:	jae    0x4383d5
  4383b5:	outs   dx,BYTE PTR ds:[rsi]
  4383b6:	(bad)  
  4383b7:	ins    DWORD PTR es:[rdi],dx
  4383b8:	and    BYTE PTR gs:[rip+0x73000a73],ah        # 0x73438e32
  4383bf:	jae    0x438431
  4383c1:	imul   ebp,DWORD PTR [rsi],0x63
	...
  4383cf:	add    BYTE PTR [rdi+0x73],dh
  4383d2:	xor    bl,BYTE PTR [rdi+0x33]
  4383d5:	xor    al,BYTE PTR [rax]
  4383d7:	push   rdi
  4383d8:	push   rbx
  4383d9:	push   r8
  4383db:	outs   dx,DWORD PTR ds:[rsi]
  4383dc:	ins    BYTE PTR es:[rdi],dx
  4383dd:	ins    BYTE PTR es:[rdi],dx
  4383de:	add    BYTE PTR [rax+0x6f],dh
  4383e1:	ins    BYTE PTR es:[rdi],dx
  4383e2:	ins    BYTE PTR es:[rdi],dx
  4383e3:	movsxd eax,DWORD PTR cs:[rax]
  4383e6:	jo     0x438457
  4383e8:	ins    BYTE PTR es:[rdi],dx
  4383e9:	ins    BYTE PTR es:[rdi],dx
  4383ea:	gs and BYTE PTR fs:[rip+0x6573203d],bh        # 0x65b6a42f
  4383f2:	ins    BYTE PTR es:[rdi],dx
  4383f3:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
	...
  438400:	sub    eax,0x0
	...
  43840d:	add    BYTE PTR [rax],al
  43840f:	add    BYTE PTR [rip+0x73],ah        # 0x438488
	...
  43841d:	add    BYTE PTR [rax],al
  43841f:	add    al,al
  438421:	(bad)  
  438422:	rex.XB add BYTE PTR [r8],al
  438425:	add    BYTE PTR [rax],al
  438427:	add    al,al
  438429:	in     eax,0x43
  43842b:	add    BYTE PTR [rax],al
  43842d:	add    BYTE PTR [rax],al
  43842f:	add    BYTE PTR [rax+0x4272],dh
	...
  43843d:	add    BYTE PTR [rax],al
  43843f:	add    BYTE PTR [rcx+0x72],al
  438442:	addr32 jne 0x4384b2
  438445:	outs   dx,BYTE PTR gs:[rsi]
  438447:	je     0x438469
  438449:	outs   dx,DWORD PTR fs:[rsi]
  43844b:	ins    DWORD PTR es:[rdi],dx
  43844c:	(bad)  
  43844d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  438454:	jb     0x438476
  438456:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  43845a:	rex.B
  43845b:	rex.WB
  43845c:	rex.WRX sub QWORD PTR [rax],r8
  43845f:	rex.B jb 0x4384c9
  438462:	jne    0x4384d1
  438464:	outs   dx,BYTE PTR gs:[rsi]
  438466:	je     0x438488
  438468:	jae    0x4384d3
  43846a:	outs   dx,BYTE PTR ds:[rsi]
  43846b:	addr32 jne 0x4384da
  43846e:	(bad)  
  43846f:	jb     0x4384da
  438471:	je     0x4384ec
  438473:	and    BYTE PTR [rax],ch
  438475:	push   rbx
  438476:	rex.WB
  438477:	rex.RXB
  438478:	rex.WRX sub QWORD PTR [rax],r8
  43847b:	add    BYTE PTR [rax],al
  43847d:	add    BYTE PTR [rax],al
  43847f:	add    BYTE PTR [rdi+0x76],cl
  438482:	gs jb  0x4384eb
  438485:	ins    BYTE PTR es:[rdi],dx
  438486:	outs   dx,DWORD PTR ds:[rsi]
  438487:	ja     0x4384a9
  438489:	jb     0x4384ec
  43848b:	outs   dx,BYTE PTR ds:[rsi]
  43848c:	and    BYTE PTR gs:[ebp+0x72],ah
  438491:	jb     0x438502
  438493:	jb     0x4384b5
  438495:	sub    BYTE PTR [rdi+0x56],cl
  438498:	rex.RB push r10
  43849a:	rex.RX
  43849b:	rex.WR
  43849c:	rex.WRXB push r15
  43849e:	sub    DWORD PTR [rax],eax
  4384a0:	push   rax
  4384a1:	(bad)  
  4384a2:	jb     0x438518
  4384a4:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  4384ab:	jae    0x4384cd
  4384ad:	outs   dx,DWORD PTR ds:[rsi]
  4384ae:	data16 and BYTE PTR [rbx+0x69],dh
  4384b2:	outs   dx,BYTE PTR ds:[esi]
  4384b4:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  4384bb:	and    BYTE PTR gs:[rax],ch
  4384be:	push   rax
  4384bf:	rex.WR
  4384c0:	rex.WRXB push r11
  4384c2:	push   rbx
  4384c3:	sub    DWORD PTR [rax],eax
  4384c5:	add    BYTE PTR [rax],al
  4384c7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  4384cb:	(bad)  
  4384cc:	ins    BYTE PTR es:[rdi],dx
  4384cd:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  4384d1:	jae    0x4384f3
  4384d3:	outs   dx,DWORD PTR ds:[rsi]
  4384d4:	data16 and BYTE PTR [rbx+0x69],dh
  4384d8:	outs   dx,BYTE PTR ds:[esi]
  4384da:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  4384e1:	and    BYTE PTR gs:[rax],ch
  4384e4:	push   rsp
  4384e5:	rex.WR
  4384e6:	rex.WRXB push r11
  4384e8:	push   rbx
  4384e9:	sub    DWORD PTR [rax],eax
  4384eb:	add    BYTE PTR [rax],al
  4384ed:	add    BYTE PTR [rax],al
  4384ef:	add    BYTE PTR [rax+rbp*2+0x65],dl
  4384f3:	and    BYTE PTR [rdx+0x65],dh
  4384f6:	jae    0x43856d
  4384f8:	ins    BYTE PTR es:[rdi],dx
  4384f9:	je     0x43851b
  4384fb:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  438502:	jae    0x438571
  438504:	(bad)  
  438505:	ins    BYTE PTR es:[rdi],dx
  438506:	ins    BYTE PTR es:[rdi],dx
  438507:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  43850b:	(bad)  
  43850c:	and    BYTE PTR gs:[rdx+0x65],dh
  438510:	jo     0x438584
  438512:	gs jae 0x43857a
  438515:	outs   dx,BYTE PTR ds:[rsi]
  438516:	je     0x43857d
  438518:	and    BYTE PTR fs:[rax],ch
  43851b:	push   rbp
  43851c:	rex.WRX
  43851d:	rex.R
  43851e:	rex.RB push r10
  438520:	rex.RX
  438521:	rex.WR
  438522:	rex.WRXB push r15
  438524:	sub    DWORD PTR [rax],eax
  438526:	push   rbp
  438527:	outs   dx,BYTE PTR ds:[rsi]
  438528:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  43852c:	outs   dx,BYTE PTR ds:[rsi]
  43852d:	and    BYTE PTR [rbp+0x72],ah
  438530:	jb     0x4385a1
  438532:	jb     0x438534
  438534:	add    BYTE PTR [rax],al
  438536:	add    BYTE PTR [rax],al
  438538:	pop    rdi
  438539:	ins    DWORD PTR es:[rdi],dx
  43853a:	(bad)  
  43853b:	je     0x4385a5
  43853d:	gs jb  0x4385b2
  438540:	sub    BYTE PTR [rcx],ch
  438542:	cmp    ah,BYTE PTR [rax]
  438544:	and    eax,0x6e692073
  438549:	and    BYTE PTR [rip+0x67252873],ah        # 0x6768adc2
  43854f:	sub    al,0x20
  438551:	and    eax,0x20202967
  438556:	sub    BYTE PTR [rdx+0x65],dh
  438559:	je     0x4385d1
  43855b:	(bad)  
  43855c:	ins    BYTE PTR es:[rdi],dx
  43855d:	cmp    eax,0xa296725
  438562:	add    BYTE PTR [rax],al
  438564:	sbb    al,0xef
  438566:	(bad)  
  438567:	call   FWORD PTR [rbp-0x12]
  43856a:	(bad)  
  43856b:	dec    esp
  43856d:	out    dx,al
  43856e:	(bad)  
  43856f:	(bad)  
  438570:	fsub   st(6),st
  438572:	(bad)  
  438573:	(bad)  
  438574:	in     al,dx
  438575:	out    dx,al
  438576:	(bad)  
  438577:	(bad)  
  438578:	cld    
  438579:	out    dx,al
  43857a:	(bad)  
  43857b:	dec    DWORD PTR [rdi+rbp*8]
  43857e:	(bad)  
  43857f:	dec    DWORD PTR [rbp+0x69]
  438582:	outs   dx,BYTE PTR ds:[rsi]
  438583:	addr32 ja 0x4385b3
  438586:	ja     0x4385be
  438588:	xor    al,0x20
  43858a:	jb     0x438601
  43858c:	outs   dx,BYTE PTR ds:[rsi]
  43858d:	je     0x4385f8
  43858f:	ins    DWORD PTR es:[rdi],dx
  438590:	and    BYTE PTR gs:[rsi+0x61],ah
  438594:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  43859c:	add    BYTE PTR [rax],al
  43859e:	add    BYTE PTR [rax],al
  4385a0:	rex.B
  4385a1:	fs fs jb 0x43860a
  4385a5:	jae    0x43861a
  4385a7:	and    BYTE PTR [rip+0x61682070],ah        # 0x61aba61d
  4385ad:	jae    0x4385cf
  4385af:	outs   dx,BYTE PTR ds:[rsi]
  4385b0:	outs   dx,DWORD PTR ds:[rsi]
  4385b1:	and    BYTE PTR [rcx+0x6d],ch
  4385b4:	(bad)  
  4385b5:	addr32 gs sub eax,0x74636573
  4385bc:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  4385c3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4385ca:	jne    0x438631
  4385cc:	jb     0x438647
  4385ce:	and    BYTE PTR [rsi+0x61],ah
  4385d1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  4385d9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a5a643
  4385df:	je     0x438646
  4385e1:	jae    0x438603
  4385e3:	(bad)  
  4385e4:	je     0x438606
  4385e6:	(bad)  
  4385e7:	fs fs jb 0x438650
  4385eb:	jae    0x438660
  4385ed:	and    BYTE PTR [rip+0x70],ah        # 0x438663
  4385f3:	add    BYTE PTR [rax],al
  4385f5:	add    BYTE PTR [rax],al
  4385f7:	add    BYTE PTR [rax],ah
  4385f9:	and    BYTE PTR [rsi+0x69],dl
  4385fc:	jb     0x438672
  4385fe:	jne    0x438661
  438600:	ins    BYTE PTR es:[rdi],dx
  438601:	push   rax
  438602:	jb     0x438673
  438604:	je     0x43866b
  438606:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  43860a:	(bad)  
  43860b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  438613:	push   0x646f6320
  438618:	and    BYTE PTR gs:[rax],dh
  43861b:	js     0x438642
  43861d:	js     0x43861f
  43861f:	add    BYTE PTR [rax],ah
  438621:	and    BYTE PTR [rbp+0x6e],dl
  438624:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  438628:	outs   dx,BYTE PTR ds:[rsi]
  438629:	and    BYTE PTR [rax+0x73],dh
  43862c:	gs jne 0x438693
  43862f:	outs   dx,DWORD PTR ds:[rsi]
  438630:	and    BYTE PTR [rdx+0x65],dh
  438633:	ins    BYTE PTR es:[rdi],dx
  438634:	outs   dx,DWORD PTR ds:[rsi]
  438635:	movsxd esp,DWORD PTR [rcx+0x74]
  438638:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  43863f:	je     0x4386b0
  438641:	movsxd ebp,DWORD PTR [rdi+0x6c]
  438644:	and    BYTE PTR [rsi+0x65],dh
  438647:	jb     0x4386bc
  438649:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  438650:	or     al,BYTE PTR [rax]
  438652:	add    BYTE PTR [rax],al
  438654:	add    BYTE PTR [rax],al
  438656:	add    BYTE PTR [rax],al
  438658:	and    BYTE PTR [rax],ah
  43865a:	push   rbp
  43865b:	outs   dx,BYTE PTR ds:[rsi]
  43865c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  438660:	outs   dx,BYTE PTR ds:[rsi]
  438661:	and    BYTE PTR [rax+0x73],dh
  438664:	gs jne 0x4386cb
  438667:	outs   dx,DWORD PTR ds:[rsi]
  438668:	and    BYTE PTR [rdx+0x65],dh
  43866b:	ins    BYTE PTR es:[rdi],dx
  43866c:	outs   dx,DWORD PTR ds:[rsi]
  43866d:	movsxd esp,DWORD PTR [rcx+0x74]
  438670:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  438677:	and    BYTE PTR [rbx+0x69],dh
  43867a:	jp     0x4386e1
  43867c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4db4e6
	...
  43868e:	add    BYTE PTR [rax],al
  438690:	cs jo  0x4386f7
  438693:	(bad)  
  438694:	je     0x4386f7
	...
  43869e:	add    BYTE PTR [rax],al
  4386a0:	and    eax,0x203a73
  4386a5:	push   rax
  4386a6:	rex.WRXB push r11
  4386a8:	rex.WB pop r8
  4386aa:	rex.WR pop rcx
  4386ac:	pop    rdi
  4386ad:	rex.XB
  4386ae:	rex.WRXB push r10
  4386b0:	push   rdx
  4386b1:	rex.RB
  4386b2:	rex.XB push r12
	...
  4386c0:	jne    0x438730
  4386c2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4386c6:	outs   dx,BYTE PTR ds:[rsi]
  4386c7:	and    BYTE PTR [rdi+0x70],ch
  4386ca:	je     0x438735
  4386cc:	outs   dx,DWORD PTR ds:[rsi]
  4386cd:	outs   dx,BYTE PTR ds:[rsi]
  4386ce:	and    BYTE PTR [rip+0x7325202d],ch        # 0x7368a701
	...
  4386e0:	jne    0x438750
  4386e2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4386e6:	outs   dx,BYTE PTR ds:[rsi]
  4386e7:	and    BYTE PTR [rdi+0x70],ch
  4386ea:	je     0x438755
  4386ec:	outs   dx,DWORD PTR ds:[rsi]
  4386ed:	outs   dx,BYTE PTR ds:[rsi]
  4386ee:	and    BYTE PTR [rip+0x6325202d],ch        # 0x6368a721
	...
  438700:	outs   dx,DWORD PTR ds:[rsi]
  438701:	jo     0x438777
  438703:	imul   ebp,DWORD PTR [rdi+0x6e],0x656f6420
  43870a:	jae    0x43877a
  43870c:	(bad)  
  43870d:	je     0x43872f
  43870f:	je     0x438772
  438711:	imul   esp,DWORD PTR [rbp+0x20],0x61
  438715:	outs   dx,BYTE PTR ds:[rsi]
  438716:	and    BYTE PTR [rcx+0x72],ah
  438719:	addr32 jne 0x438789
  43871c:	outs   dx,BYTE PTR gs:[rsi]
  43871e:	je     0x438740
  438720:	sub    eax,0x2e25202d
  438725:	sub    dh,BYTE PTR [rbx+0x0]
	...
  438730:	(bad)  
  438731:	ins    DWORD PTR es:[rdi],dx
  438732:	(bad)  
  438733:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  43873a:	outs   dx,DWORD PTR ds:[rsi]
  43873b:	jo     0x4387b1
  43873d:	imul   ebp,DWORD PTR [rdi+0x6e],0x202d2d20
  438744:	and    eax,0x732a2e
	...
  43875d:	add    BYTE PTR [rax],al
  43875f:	add    BYTE PTR [rdi+0x70],ch
  438762:	je     0x4387cd
  438764:	outs   dx,DWORD PTR ds:[rsi]
  438765:	outs   dx,BYTE PTR ds:[rsi]
  438766:	and    BYTE PTR [rdx+0x65],dh
  438769:	jno    0x4387e0
  43876b:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  438772:	and    BYTE PTR [rcx+0x72],ah
  438775:	addr32 jne 0x4387e5
  438778:	outs   dx,BYTE PTR gs:[rsi]
  43877a:	je     0x43879c
  43877c:	sub    eax,0x7325202d
	...
  43879d:	add    BYTE PTR [rax],al
  43879f:	add    BYTE PTR [rdi+0x70],ch
  4387a2:	je     0x43880d
  4387a4:	outs   dx,DWORD PTR ds:[rsi]
  4387a5:	outs   dx,BYTE PTR ds:[rsi]
  4387a6:	and    BYTE PTR [rdx+0x65],dh
  4387a9:	jno    0x438820
  4387ab:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  4387b2:	and    BYTE PTR [rcx+0x72],ah
  4387b5:	addr32 jne 0x438825
  4387b8:	outs   dx,BYTE PTR gs:[rsi]
  4387ba:	je     0x4387dc
  4387bc:	sub    eax,0x6325202d
	...
  4387dd:	add    BYTE PTR [rax],al
  4387df:	add    BYTE PTR [rax+rax*1],bh
  4387e2:	jne    0x4387e4
  4387e4:	outs   dx,BYTE PTR ds:[rsi]
  4387e5:	add    BYTE PTR [rbx+0x0],ch
  4387e8:	outs   dx,BYTE PTR ds:[rsi]
  4387e9:	add    BYTE PTR [rdi+0x0],ch
  4387ec:	ja     0x4387ee
  4387ee:	outs   dx,BYTE PTR ds:[rsi]
  4387ef:	add    BYTE PTR [rsi],bh
  4387f1:	add    BYTE PTR [rax],al
  4387f3:	add    BYTE PTR [rdi],bh
  4387f5:	add    BYTE PTR [rax],al
  4387f7:	add    BYTE PTR [rcx+0x0],al
  4387fa:	jae    0x4387fc
  4387fc:	jae    0x4387fe
  4387fe:	add    BYTE PTR gs:[rdx+0x0],dh
  438802:	je     0x438804
  438804:	imul   eax,DWORD PTR [rax],0x6e006f
  43880a:	and    BYTE PTR [rax],al
  43880c:	data16 add BYTE PTR [rcx+0x0],ah
  438810:	imul   eax,DWORD PTR [rax],0x65006c
  438816:	add    BYTE PTR fs:[rcx],ah
  438819:	add    BYTE PTR [rdx],cl
  43881b:	add    BYTE PTR [rdx],cl
  43881d:	add    BYTE PTR [rax+0x0],dl
  438820:	jb     0x438822
  438822:	outs   dx,DWORD PTR ds:[rsi]
  438823:	add    BYTE PTR [rdi+0x0],ah
  438826:	jb     0x438828
  438828:	(bad)  
  438829:	add    BYTE PTR [rbp+0x0],ch
  43882c:	cmp    al,BYTE PTR [rax]
  43882e:	and    BYTE PTR [rax],al
  438830:	and    eax,0x73007700
  438835:	add    BYTE PTR [rdx],cl
  438837:	add    BYTE PTR [rsi+0x0],al
  43883a:	imul   eax,DWORD PTR [rax],0x65006c
  438840:	cmp    al,BYTE PTR [rax]
  438842:	and    BYTE PTR [rax],al
  438844:	and    eax,0x73007700
  438849:	add    BYTE PTR [rax+rax*1],ch
  43884c:	and    BYTE PTR [rax],al
  43884e:	rex.WR add BYTE PTR [rcx+0x0],r13b
  438852:	outs   dx,BYTE PTR ds:[rsi]
  438853:	add    BYTE PTR [rbp+0x0],ah
  438856:	and    BYTE PTR [rax],al
  438858:	and    eax,0xa007500
  43885d:	add    BYTE PTR [rdx],cl
  43885f:	add    BYTE PTR [rbp+0x0],al
  438862:	js     0x438864
  438864:	jo     0x438866
  438866:	jb     0x438868
  438868:	add    BYTE PTR gs:[rbx+0x0],dh
  43886c:	jae    0x43886e
  43886e:	imul   eax,DWORD PTR [rax],0x6e006f
  438874:	cmp    al,BYTE PTR [rax]
  438876:	and    BYTE PTR [rax],al
  438878:	and    eax,0x73007700
  43887d:	add    BYTE PTR [rax],al
  43887f:	add    BYTE PTR [rip+0x73007700],ah        # 0x7343ff85
  438885:	add    BYTE PTR [rdx],cl
	...
  43888f:	add    BYTE PTR [rbp+0x0],cl
  438892:	imul   eax,DWORD PTR [rax],0x47006e
  438898:	push   rdi
  438899:	add    BYTE PTR [rax],ah
  43889b:	add    BYTE PTR [rdx+0x0],dl
  43889e:	jne    0x4388a0
  4388a0:	outs   dx,BYTE PTR ds:[rsi]
  4388a1:	add    BYTE PTR [rax+rax*1+0x69],dh
  4388a5:	add    BYTE PTR [rbp+0x0],ch
  4388a8:	add    BYTE PTR gs:[rax],ah
  4388ab:	add    BYTE PTR [rcx+0x0],al
  4388ae:	jae    0x4388b0
  4388b0:	jae    0x4388b2
  4388b2:	add    BYTE PTR gs:[rdx+0x0],dh
  4388b6:	je     0x4388b8
  4388b8:	imul   eax,DWORD PTR [rax],0x6e006f
  4388be:	add    BYTE PTR [rax],al
  4388c0:	movabs al,ds:0x4326
  4388c9:	add    BYTE PTR [rax],al
  4388cb:	add    BYTE PTR [rax],al
  4388cd:	add    BYTE PTR [rax],al
  4388cf:	add    BYTE PTR [rax+0x42b0],al
	...
  4388dd:	add    BYTE PTR [rax],al
  4388df:	add    al,al
  4388e1:	mov    al,0x42
	...
  4388ef:	add    BYTE PTR [rax],al
  4388f1:	scas   al,BYTE PTR es:[rdi]
  4388f2:	rex.X add BYTE PTR [rax],al
	...
  4388fd:	add    BYTE PTR [rax],al
  4388ff:	add    BYTE PTR [rax+0x4393],ah
	...
  43890d:	add    BYTE PTR [rax],al
  43890f:	add    BYTE PTR [rax+0x4393],ah
	...
  43891d:	add    BYTE PTR [rax],al
  43891f:	add    BYTE PTR [rax],dh
  438921:	test   BYTE PTR [rbx+0x0],al
	...
  438930:	add    BYTE PTR [rax],al
  438932:	add    BYTE PTR [rax],al
	...
  43893d:	add    BYTE PTR [rax],al
  43893f:	add    ah,ch
  438941:	stc    
  438942:	rex.XB add BYTE PTR [r8],al
	...
  43894d:	add    BYTE PTR [rax],al
  43894f:	add    BYTE PTR [rdx+rdi*8],al
  438952:	rex.XB add BYTE PTR [r8],al
	...
  43895d:	add    BYTE PTR [rax],al
  43895f:	add    BYTE PTR [rdx+rdi*8],ch
  438962:	rex.XB add BYTE PTR [r8],al
	...
  43896d:	add    BYTE PTR [rax],al
  43896f:	add    BYTE PTR [rdx+rdi*8+0x43],dl
	...
  43897f:	add    BYTE PTR [rdx+rdi*8+0x43],dh
	...
  43898f:	add    BYTE PTR [rax],al
  438991:	in     al,dx
  438992:	rex.XB add BYTE PTR [r8],al
	...
  43899d:	add    BYTE PTR [rax],al
  43899f:	add    BYTE PTR [rax-0x11],ch
  4389a2:	rex.XB add BYTE PTR [r8],al
	...
  4389ad:	add    BYTE PTR [rax],al
  4389af:	add    BYTE PTR [rax-0x11],ah
  4389b2:	rex.XB add BYTE PTR [r8],al
	...
  4389bd:	add    BYTE PTR [rax],al
  4389bf:	add    BYTE PTR [rax-0x11],dl
  4389c2:	rex.XB add BYTE PTR [r8],al
	...
  4389cd:	add    BYTE PTR [rax],al
  4389cf:	add    BYTE PTR [rax-0x11],bl
  4389d2:	rex.XB add BYTE PTR [r8],al
	...
  4389e1:	adc    BYTE PTR [rax+rax*1+0x0],al
	...
  4389ed:	add    BYTE PTR [rax],al
  4389ef:	add    BYTE PTR [rax],dl
  4389f1:	adc    BYTE PTR [rax+rax*1+0x0],al
	...
  4389fd:	add    BYTE PTR [rax],al
  4389ff:	add    BYTE PTR [rax],bl
  438a01:	adc    BYTE PTR [rax+rax*1+0x0],al
	...
  438a0d:	add    BYTE PTR [rax],al
  438a0f:	add    BYTE PTR [rax],dh
  438a11:	adc    BYTE PTR [rax+rax*1+0x0],al
	...
  438a1d:	add    BYTE PTR [rax],al
  438a1f:	add    BYTE PTR [rax-0x1b],dh
  438a22:	rex.XB add BYTE PTR [r8],al
	...
  438a2d:	add    BYTE PTR [rax],al
  438a2f:	add    al,dl
  438a31:	jmp    0x438a76
	...
  438a3f:	add    BYTE PTR [rax+0x7c],al
  438a42:	rex.X add BYTE PTR [rax],al
	...
  438a4d:	add    BYTE PTR [rax],al
  438a4f:	add    BYTE PTR [rax+0x4273],dl
	...
  438a5d:	add    BYTE PTR [rax],al
  438a5f:	add    BYTE PTR [rax+0x43eb],al
	...
  438a6d:	add    BYTE PTR [rax],al
  438a6f:	add    BYTE PTR [rax+0x43eb],dh
	...
  438a7d:	add    BYTE PTR [rax],al
  438a7f:	add    BYTE PTR [rax+0x43e5],al
	...
  438a8d:	add    BYTE PTR [rax],al
  438a8f:	add    BYTE PTR [rax+0x43eb],bl
	...
  438a9d:	add    BYTE PTR [rax],al
  438a9f:	add    BYTE PTR [rbx+rbp*8+0x43],dl
	...
  438aae:	add    BYTE PTR [rax],al
  438ab0:	nop
  438ab1:	jmp    0x438af6
	...
  438abf:	add    BYTE PTR [rax+0x43ef],dl
	...
  438acd:	add    BYTE PTR [rax],al
  438acf:	add    BYTE PTR [rax+0x42b0],dh
	...
  438add:	add    BYTE PTR [rax],al
  438adf:	add    BYTE PTR [rax+rsi*4+0x42],ch
	...
  438aee:	add    BYTE PTR [rax],al
  438af0:	rex leave 
  438af2:	rex.X add BYTE PTR [rax],al
	...
  438afd:	add    BYTE PTR [rax],al
  438aff:	add    BYTE PTR [rax],dh
  438b01:	mov    al,0x42
	...
  438b0f:	add    BYTE PTR [rsp+riz*8+0x43],al
	...
  438b1e:	add    BYTE PTR [rax],al
  438b20:	rex retf 0x42
	...
  438b30:	adc    BYTE PTR [rax],0x43
	...
  438b3f:	add    BYTE PTR [rax+0x42c9],al
	...
  438b4d:	add    BYTE PTR [rax],al
  438b4f:	add    BYTE PTR [rax+0x17],al
  438b52:	rex.XB add BYTE PTR [r8],al
	...
  438b61:	retf   0x42
	...
  438b70:	movabs al,ds:0x4371
	...
  438b81:	leave  
  438b82:	rex.X add BYTE PTR [rax],al
	...
  438b8d:	add    BYTE PTR [rax],al
  438b8f:	add    BYTE PTR [rax+0x78],al
  438b92:	rex.XB add BYTE PTR [r8],al
	...
  438b9d:	add    BYTE PTR [rax],al
  438b9f:	add    al,al
  438ba1:	leave  
  438ba2:	rex.X add BYTE PTR [rax],al
	...
  438bad:	add    BYTE PTR [rax],al
  438baf:	add    BYTE PTR [rax+0x43e4],al
	...
  438bbd:	add    BYTE PTR [rax],al
  438bbf:	add    BYTE PTR [rdi+0x43],al
  438bc2:	rex.XB cmp spl,BYTE PTR [r8]
  438bc5:	sub    BYTE PTR [rdi+0x4e],al
  438bc8:	push   rbp
  438bc9:	sub    DWORD PTR [rax],esp
  438bcb:	xor    al,0x2e
  438bcd:	cmp    DWORD PTR [rsi],ebp
  438bcf:	xor    al,0x0
	...
  438bdd:	add    BYTE PTR [rax],al
  438bdf:	add    BYTE PTR [rdi+0x43],al
  438be2:	rex.XB cmp spl,BYTE PTR [r8]
  438be5:	sub    BYTE PTR [rdi+0x4e],al
  438be8:	push   rbp
  438be9:	sub    DWORD PTR [rax],esp
  438beb:	xor    al,0x2e
  438bed:	cmp    DWORD PTR [rsi],ebp
  438bef:	xor    al,0x0
	...
  438bfd:	add    BYTE PTR [rax],al
  438bff:	add    BYTE PTR [rdi+0x43],al
  438c02:	rex.XB cmp spl,BYTE PTR [r8]
  438c05:	sub    BYTE PTR [rdi+0x4e],al
  438c08:	push   rbp
  438c09:	sub    DWORD PTR [rax],esp
  438c0b:	xor    al,0x2e
  438c0d:	cmp    DWORD PTR [rsi],ebp
  438c0f:	xor    al,0x0
	...
  438c1d:	add    BYTE PTR [rax],al
  438c1f:	add    BYTE PTR [rdi+0x43],al
  438c22:	rex.XB cmp spl,BYTE PTR [r8]
  438c25:	sub    BYTE PTR [rdi+0x4e],al
  438c28:	push   rbp
  438c29:	sub    DWORD PTR [rax],esp
  438c2b:	xor    al,0x2e
  438c2d:	cmp    DWORD PTR [rsi],ebp
  438c2f:	xor    al,0x0
	...
  438c3d:	add    BYTE PTR [rax],al
  438c3f:	add    BYTE PTR [rdi+0x43],al
  438c42:	rex.XB cmp spl,BYTE PTR [r8]
  438c45:	sub    BYTE PTR [rdi+0x4e],al
  438c48:	push   rbp
  438c49:	sub    DWORD PTR [rax],esp
  438c4b:	xor    al,0x2e
  438c4d:	cmp    DWORD PTR [rsi],ebp
  438c4f:	xor    al,0x0
	...
  438c5d:	add    BYTE PTR [rax],al
  438c5f:	add    BYTE PTR [rdi+0x43],al
  438c62:	rex.XB cmp spl,BYTE PTR [r8]
  438c65:	sub    BYTE PTR [rdi+0x4e],al
  438c68:	push   rbp
  438c69:	sub    DWORD PTR [rax],esp
  438c6b:	xor    al,0x2e
  438c6d:	cmp    DWORD PTR [rsi],ebp
  438c6f:	xor    al,0x0
	...
  438c7d:	add    BYTE PTR [rax],al
  438c7f:	add    BYTE PTR [rdi+0x43],al
  438c82:	rex.XB cmp spl,BYTE PTR [r8]
  438c85:	sub    BYTE PTR [rdi+0x4e],al
  438c88:	push   rbp
  438c89:	sub    DWORD PTR [rax],esp
  438c8b:	xor    al,0x2e
  438c8d:	cmp    DWORD PTR [rsi],ebp
  438c8f:	xor    al,0x0
	...
  438c9d:	add    BYTE PTR [rax],al
  438c9f:	add    BYTE PTR [rdi+0x43],al
  438ca2:	rex.XB cmp spl,BYTE PTR [r8]
  438ca5:	sub    BYTE PTR [rdi+0x4e],al
  438ca8:	push   rbp
  438ca9:	sub    DWORD PTR [rax],esp
  438cab:	xor    al,0x2e
  438cad:	cmp    DWORD PTR [rsi],ebp
  438caf:	xor    al,0x0
	...
  438cbd:	add    BYTE PTR [rax],al
  438cbf:	add    BYTE PTR [rdi+0x43],al
  438cc2:	rex.XB cmp spl,BYTE PTR [r8]
  438cc5:	sub    BYTE PTR [rdi+0x4e],al
  438cc8:	push   rbp
  438cc9:	sub    DWORD PTR [rax],esp
  438ccb:	xor    al,0x2e
  438ccd:	cmp    DWORD PTR [rsi],ebp
  438ccf:	xor    al,0x0
	...
  438cdd:	add    BYTE PTR [rax],al
  438cdf:	add    BYTE PTR [rdi+0x43],al
  438ce2:	rex.XB cmp spl,BYTE PTR [r8]
  438ce5:	sub    BYTE PTR [rdi+0x4e],al
  438ce8:	push   rbp
  438ce9:	sub    DWORD PTR [rax],esp
  438ceb:	xor    al,0x2e
  438ced:	cmp    DWORD PTR [rsi],ebp
  438cef:	xor    al,0x0
	...
  438cfd:	add    BYTE PTR [rax],al
  438cff:	add    BYTE PTR [rdi+0x43],al
  438d02:	rex.XB cmp spl,BYTE PTR [r8]
  438d05:	sub    BYTE PTR [rdi+0x4e],al
  438d08:	push   rbp
  438d09:	sub    DWORD PTR [rax],esp
  438d0b:	xor    al,0x2e
  438d0d:	cmp    DWORD PTR [rsi],ebp
  438d0f:	xor    al,0x0
	...
  438d1d:	add    BYTE PTR [rax],al
  438d1f:	add    BYTE PTR [rdi+0x43],al
  438d22:	rex.XB cmp spl,BYTE PTR [r8]
  438d25:	sub    BYTE PTR [rdi+0x4e],al
  438d28:	push   rbp
  438d29:	sub    DWORD PTR [rax],esp
  438d2b:	xor    al,0x2e
  438d2d:	cmp    DWORD PTR [rsi],ebp
  438d2f:	xor    al,0x0
	...
  438d3d:	add    BYTE PTR [rax],al
  438d3f:	add    BYTE PTR [rdi+0x43],al
  438d42:	rex.XB cmp spl,BYTE PTR [r8]
  438d45:	sub    BYTE PTR [rdi+0x4e],al
  438d48:	push   rbp
  438d49:	sub    DWORD PTR [rax],esp
  438d4b:	xor    al,0x2e
  438d4d:	cmp    DWORD PTR [rsi],ebp
  438d4f:	xor    al,0x0
	...
  438d5d:	add    BYTE PTR [rax],al
  438d5f:	add    BYTE PTR [rdi+0x43],al
  438d62:	rex.XB cmp spl,BYTE PTR [r8]
  438d65:	sub    BYTE PTR [rdi+0x4e],al
  438d68:	push   rbp
  438d69:	sub    DWORD PTR [rax],esp
  438d6b:	xor    al,0x2e
  438d6d:	cmp    DWORD PTR [rsi],ebp
  438d6f:	xor    al,0x0
	...
  438d7d:	add    BYTE PTR [rax],al
  438d7f:	add    BYTE PTR [rdi+0x43],al
  438d82:	rex.XB cmp spl,BYTE PTR [r8]
  438d85:	sub    BYTE PTR [rdi+0x4e],al
  438d88:	push   rbp
  438d89:	sub    DWORD PTR [rax],esp
  438d8b:	xor    al,0x2e
  438d8d:	cmp    DWORD PTR [rsi],ebp
  438d8f:	xor    al,0x0
	...
  438d9d:	add    BYTE PTR [rax],al
  438d9f:	add    BYTE PTR [rdi+0x43],al
  438da2:	rex.XB cmp spl,BYTE PTR [r8]
  438da5:	sub    BYTE PTR [rdi+0x4e],al
  438da8:	push   rbp
  438da9:	sub    DWORD PTR [rax],esp
  438dab:	xor    al,0x2e
  438dad:	cmp    DWORD PTR [rsi],ebp
  438daf:	xor    al,0x0
	...
  438dbd:	add    BYTE PTR [rax],al
  438dbf:	add    BYTE PTR [rdi+0x43],al
  438dc2:	rex.XB cmp spl,BYTE PTR [r8]
  438dc5:	sub    BYTE PTR [rdi+0x4e],al
  438dc8:	push   rbp
  438dc9:	sub    DWORD PTR [rax],esp
  438dcb:	xor    al,0x2e
  438dcd:	cmp    DWORD PTR [rsi],ebp
  438dcf:	xor    al,0x0
	...
  438ddd:	add    BYTE PTR [rax],al
  438ddf:	add    BYTE PTR [rdi+0x43],al
  438de2:	rex.XB cmp spl,BYTE PTR [r8]
  438de5:	sub    BYTE PTR [rdi+0x4e],al
  438de8:	push   rbp
  438de9:	sub    DWORD PTR [rax],esp
  438deb:	xor    al,0x2e
  438ded:	cmp    DWORD PTR [rsi],ebp
  438def:	xor    al,0x0
	...
  438dfd:	add    BYTE PTR [rax],al
  438dff:	add    BYTE PTR [rdi+0x43],al
  438e02:	rex.XB cmp spl,BYTE PTR [r8]
  438e05:	sub    BYTE PTR [rdi+0x4e],al
  438e08:	push   rbp
  438e09:	sub    DWORD PTR [rax],esp
  438e0b:	xor    al,0x2e
  438e0d:	cmp    DWORD PTR [rsi],ebp
  438e0f:	xor    al,0x0
	...
  438e1d:	add    BYTE PTR [rax],al
  438e1f:	add    BYTE PTR [rdi+0x43],al
  438e22:	rex.XB cmp spl,BYTE PTR [r8]
  438e25:	sub    BYTE PTR [rdi+0x4e],al
  438e28:	push   rbp
  438e29:	sub    DWORD PTR [rax],esp
  438e2b:	xor    al,0x2e
  438e2d:	cmp    DWORD PTR [rsi],ebp
  438e2f:	xor    al,0x0
	...
  438e3d:	add    BYTE PTR [rax],al
  438e3f:	add    BYTE PTR [rdi+0x43],al
  438e42:	rex.XB cmp spl,BYTE PTR [r8]
  438e45:	sub    BYTE PTR [rdi+0x4e],al
  438e48:	push   rbp
  438e49:	sub    DWORD PTR [rax],esp
  438e4b:	xor    al,0x2e
  438e4d:	cmp    DWORD PTR [rsi],ebp
  438e4f:	xor    al,0x0
	...
  438e5d:	add    BYTE PTR [rax],al
  438e5f:	add    BYTE PTR [rdi+0x43],al
  438e62:	rex.XB cmp spl,BYTE PTR [r8]
  438e65:	sub    BYTE PTR [rdi+0x4e],al
  438e68:	push   rbp
  438e69:	sub    DWORD PTR [rax],esp
  438e6b:	xor    al,0x2e
  438e6d:	cmp    DWORD PTR [rsi],ebp
  438e6f:	xor    al,0x0
	...
  438e7d:	add    BYTE PTR [rax],al
  438e7f:	add    BYTE PTR [rdi+0x43],al
  438e82:	rex.XB cmp spl,BYTE PTR [r8]
  438e85:	sub    BYTE PTR [rdi+0x4e],al
  438e88:	push   rbp
  438e89:	sub    DWORD PTR [rax],esp
  438e8b:	xor    al,0x2e
  438e8d:	cmp    DWORD PTR [rsi],ebp
  438e8f:	xor    al,0x0
	...
  438e9d:	add    BYTE PTR [rax],al
  438e9f:	add    BYTE PTR [rdi+0x43],al
  438ea2:	rex.XB cmp spl,BYTE PTR [r8]
  438ea5:	sub    BYTE PTR [rdi+0x4e],al
  438ea8:	push   rbp
  438ea9:	sub    DWORD PTR [rax],esp
  438eab:	xor    al,0x2e
  438ead:	cmp    DWORD PTR [rsi],ebp
  438eaf:	xor    al,0x0
	...
  438ebd:	add    BYTE PTR [rax],al
  438ebf:	add    BYTE PTR [rdi+0x43],al
  438ec2:	rex.XB cmp spl,BYTE PTR [r8]
  438ec5:	sub    BYTE PTR [rdi+0x4e],al
  438ec8:	push   rbp
  438ec9:	sub    DWORD PTR [rax],esp
  438ecb:	xor    al,0x2e
  438ecd:	cmp    DWORD PTR [rsi],ebp
  438ecf:	xor    al,0x0
	...
  438edd:	add    BYTE PTR [rax],al
  438edf:	add    BYTE PTR [rdi+0x43],al
  438ee2:	rex.XB cmp spl,BYTE PTR [r8]
  438ee5:	sub    BYTE PTR [rdi+0x4e],al
  438ee8:	push   rbp
  438ee9:	sub    DWORD PTR [rax],esp
  438eeb:	xor    al,0x2e
  438eed:	cmp    DWORD PTR [rsi],ebp
  438eef:	xor    al,0x0
	...
  438efd:	add    BYTE PTR [rax],al
  438eff:	add    BYTE PTR [rdi+0x43],al
  438f02:	rex.XB cmp spl,BYTE PTR [r8]
  438f05:	sub    BYTE PTR [rdi+0x4e],al
  438f08:	push   rbp
  438f09:	sub    DWORD PTR [rax],esp
  438f0b:	xor    al,0x2e
  438f0d:	cmp    DWORD PTR [rsi],ebp
  438f0f:	xor    al,0x0
	...
  438f1d:	add    BYTE PTR [rax],al
  438f1f:	add    BYTE PTR [rdi+0x43],al
  438f22:	rex.XB cmp spl,BYTE PTR [r8]
  438f25:	sub    BYTE PTR [rdi+0x4e],al
  438f28:	push   rbp
  438f29:	sub    DWORD PTR [rax],esp
  438f2b:	xor    al,0x2e
  438f2d:	cmp    DWORD PTR [rsi],ebp
  438f2f:	xor    al,0x0
	...
  438f3d:	add    BYTE PTR [rax],al
  438f3f:	add    BYTE PTR [rdi+0x43],al
  438f42:	rex.XB cmp spl,BYTE PTR [r8]
  438f45:	sub    BYTE PTR [rdi+0x4e],al
  438f48:	push   rbp
  438f49:	sub    DWORD PTR [rax],esp
  438f4b:	xor    al,0x2e
  438f4d:	cmp    DWORD PTR [rsi],ebp
  438f4f:	xor    al,0x0
	...
  438f5d:	add    BYTE PTR [rax],al
  438f5f:	add    BYTE PTR [rdi+0x43],al
  438f62:	rex.XB cmp spl,BYTE PTR [r8]
  438f65:	sub    BYTE PTR [rdi+0x4e],al
  438f68:	push   rbp
  438f69:	sub    DWORD PTR [rax],esp
  438f6b:	xor    al,0x2e
  438f6d:	cmp    DWORD PTR [rsi],ebp
  438f6f:	xor    al,0x0
	...
  438f7d:	add    BYTE PTR [rax],al
  438f7f:	add    BYTE PTR [rdi+0x43],al
  438f82:	rex.XB cmp spl,BYTE PTR [r8]
  438f85:	sub    BYTE PTR [rdi+0x4e],al
  438f88:	push   rbp
  438f89:	sub    DWORD PTR [rax],esp
  438f8b:	xor    al,0x2e
  438f8d:	cmp    DWORD PTR [rsi],ebp
  438f8f:	xor    al,0x0
	...
  438f9d:	add    BYTE PTR [rax],al
  438f9f:	add    BYTE PTR [rdi+0x43],al
  438fa2:	rex.XB cmp spl,BYTE PTR [r8]
  438fa5:	sub    BYTE PTR [rdi+0x4e],al
  438fa8:	push   rbp
  438fa9:	sub    DWORD PTR [rax],esp
  438fab:	xor    al,0x2e
  438fad:	cmp    DWORD PTR [rsi],ebp
  438faf:	xor    al,0x0
	...
  438fbd:	add    BYTE PTR [rax],al
  438fbf:	add    BYTE PTR [rdi+0x43],al
  438fc2:	rex.XB cmp spl,BYTE PTR [r8]
  438fc5:	sub    BYTE PTR [rdi+0x4e],al
  438fc8:	push   rbp
  438fc9:	sub    DWORD PTR [rax],esp
  438fcb:	xor    al,0x2e
  438fcd:	cmp    DWORD PTR [rsi],ebp
  438fcf:	xor    al,0x0
	...
  438fdd:	add    BYTE PTR [rax],al
  438fdf:	add    BYTE PTR [rdi+0x43],al
  438fe2:	rex.XB cmp spl,BYTE PTR [r8]
  438fe5:	sub    BYTE PTR [rdi+0x4e],al
  438fe8:	push   rbp
  438fe9:	sub    DWORD PTR [rax],esp
  438feb:	xor    al,0x2e
  438fed:	cmp    DWORD PTR [rsi],ebp
  438fef:	xor    al,0x0
	...
  438ffd:	add    BYTE PTR [rax],al
  438fff:	add    BYTE PTR [rdi+0x43],al
  439002:	rex.XB cmp spl,BYTE PTR [r8]
  439005:	sub    BYTE PTR [rdi+0x4e],al
  439008:	push   rbp
  439009:	sub    DWORD PTR [rax],esp
  43900b:	xor    al,0x2e
  43900d:	cmp    DWORD PTR [rsi],ebp
  43900f:	xor    al,0x0
	...
  43901d:	add    BYTE PTR [rax],al
  43901f:	add    BYTE PTR [rdi+0x43],al
  439022:	rex.XB cmp spl,BYTE PTR [r8]
  439025:	sub    BYTE PTR [rdi+0x4e],al
  439028:	push   rbp
  439029:	sub    DWORD PTR [rax],esp
  43902b:	xor    al,0x2e
  43902d:	cmp    DWORD PTR [rsi],ebp
  43902f:	xor    al,0x0
	...
  43903d:	add    BYTE PTR [rax],al
  43903f:	add    BYTE PTR [rdi+0x43],al
  439042:	rex.XB cmp spl,BYTE PTR [r8]
  439045:	sub    BYTE PTR [rdi+0x4e],al
  439048:	push   rbp
  439049:	sub    DWORD PTR [rax],esp
  43904b:	xor    al,0x2e
  43904d:	cmp    DWORD PTR [rsi],ebp
  43904f:	xor    al,0x0
	...
  43905d:	add    BYTE PTR [rax],al
  43905f:	add    BYTE PTR [rdi+0x43],al
  439062:	rex.XB cmp spl,BYTE PTR [r8]
  439065:	sub    BYTE PTR [rdi+0x4e],al
  439068:	push   rbp
  439069:	sub    DWORD PTR [rax],esp
  43906b:	xor    al,0x2e
  43906d:	cmp    DWORD PTR [rsi],ebp
  43906f:	xor    al,0x0
	...
  43907d:	add    BYTE PTR [rax],al
  43907f:	add    BYTE PTR [rdi+0x43],al
  439082:	rex.XB cmp spl,BYTE PTR [r8]
  439085:	sub    BYTE PTR [rdi+0x4e],al
  439088:	push   rbp
  439089:	sub    DWORD PTR [rax],esp
  43908b:	xor    al,0x2e
  43908d:	cmp    DWORD PTR [rsi],ebp
  43908f:	xor    al,0x0
	...
  43909d:	add    BYTE PTR [rax],al
  43909f:	add    BYTE PTR [rdi+0x43],al
  4390a2:	rex.XB cmp spl,BYTE PTR [r8]
  4390a5:	sub    BYTE PTR [rdi+0x4e],al
  4390a8:	push   rbp
  4390a9:	sub    DWORD PTR [rax],esp
  4390ab:	xor    al,0x2e
  4390ad:	cmp    DWORD PTR [rsi],ebp
  4390af:	xor    al,0x0
	...
  4390bd:	add    BYTE PTR [rax],al
  4390bf:	add    BYTE PTR [rdi+0x43],al
  4390c2:	rex.XB cmp spl,BYTE PTR [r8]
  4390c5:	sub    BYTE PTR [rdi+0x4e],al
  4390c8:	push   rbp
  4390c9:	sub    DWORD PTR [rax],esp
  4390cb:	xor    al,0x2e
  4390cd:	cmp    DWORD PTR [rsi],ebp
  4390cf:	xor    al,0x0
	...
  4390dd:	add    BYTE PTR [rax],al
  4390df:	add    BYTE PTR [rdi+0x43],al
  4390e2:	rex.XB cmp spl,BYTE PTR [r8]
  4390e5:	sub    BYTE PTR [rdi+0x4e],al
  4390e8:	push   rbp
  4390e9:	sub    DWORD PTR [rax],esp
  4390eb:	xor    al,0x2e
  4390ed:	cmp    DWORD PTR [rsi],ebp
  4390ef:	xor    al,0x0
	...
  4390fd:	add    BYTE PTR [rax],al
  4390ff:	add    BYTE PTR [rdi+0x43],al
  439102:	rex.XB cmp spl,BYTE PTR [r8]
  439105:	sub    BYTE PTR [rdi+0x4e],al
  439108:	push   rbp
  439109:	sub    DWORD PTR [rax],esp
  43910b:	xor    al,0x2e
  43910d:	cmp    DWORD PTR [rsi],ebp
  43910f:	xor    al,0x0
	...
  43911d:	add    BYTE PTR [rax],al
  43911f:	add    BYTE PTR [rdi+0x43],al
  439122:	rex.XB cmp spl,BYTE PTR [r8]
  439125:	sub    BYTE PTR [rdi+0x4e],al
  439128:	push   rbp
  439129:	sub    DWORD PTR [rax],esp
  43912b:	xor    al,0x2e
  43912d:	cmp    DWORD PTR [rsi],ebp
  43912f:	xor    al,0x0
	...
  43913d:	add    BYTE PTR [rax],al
  43913f:	add    BYTE PTR [rdi+0x43],al
  439142:	rex.XB cmp spl,BYTE PTR [r8]
  439145:	sub    BYTE PTR [rdi+0x4e],al
  439148:	push   rbp
  439149:	sub    DWORD PTR [rax],esp
  43914b:	xor    al,0x2e
  43914d:	cmp    DWORD PTR [rsi],ebp
  43914f:	xor    al,0x0
	...
  43915d:	add    BYTE PTR [rax],al
  43915f:	add    BYTE PTR [rdi+0x43],al
  439162:	rex.XB cmp spl,BYTE PTR [r8]
  439165:	sub    BYTE PTR [rdi+0x4e],al
  439168:	push   rbp
  439169:	sub    DWORD PTR [rax],esp
  43916b:	xor    al,0x2e
  43916d:	cmp    DWORD PTR [rsi],ebp
  43916f:	xor    al,0x0
	...
  43917d:	add    BYTE PTR [rax],al
  43917f:	add    BYTE PTR [rdi+0x43],al
  439182:	rex.XB cmp spl,BYTE PTR [r8]
  439185:	sub    BYTE PTR [rdi+0x4e],al
  439188:	push   rbp
  439189:	sub    DWORD PTR [rax],esp
  43918b:	xor    al,0x2e
  43918d:	cmp    DWORD PTR [rsi],ebp
  43918f:	xor    al,0x0
	...
  43919d:	add    BYTE PTR [rax],al
  43919f:	add    BYTE PTR [rdi+0x43],al
  4391a2:	rex.XB cmp spl,BYTE PTR [r8]
  4391a5:	sub    BYTE PTR [rdi+0x4e],al
  4391a8:	push   rbp
  4391a9:	sub    DWORD PTR [rax],esp
  4391ab:	xor    al,0x2e
  4391ad:	cmp    DWORD PTR [rsi],ebp
  4391af:	xor    al,0x0
	...
  4391bd:	add    BYTE PTR [rax],al
  4391bf:	add    BYTE PTR [rdi+0x43],al
  4391c2:	rex.XB cmp spl,BYTE PTR [r8]
  4391c5:	sub    BYTE PTR [rdi+0x4e],al
  4391c8:	push   rbp
  4391c9:	sub    DWORD PTR [rax],esp
  4391cb:	xor    al,0x2e
  4391cd:	cmp    DWORD PTR [rsi],ebp
  4391cf:	xor    al,0x0
	...
  4391dd:	add    BYTE PTR [rax],al
  4391df:	add    BYTE PTR [rdi+0x43],al
  4391e2:	rex.XB cmp spl,BYTE PTR [r8]
  4391e5:	sub    BYTE PTR [rdi+0x4e],al
  4391e8:	push   rbp
  4391e9:	sub    DWORD PTR [rax],esp
  4391eb:	xor    al,0x2e
  4391ed:	cmp    DWORD PTR [rsi],ebp
  4391ef:	xor    al,0x0
	...
  4391fd:	add    BYTE PTR [rax],al
  4391ff:	add    BYTE PTR [rdi+0x43],al
  439202:	rex.XB cmp spl,BYTE PTR [r8]
  439205:	sub    BYTE PTR [rdi+0x4e],al
  439208:	push   rbp
  439209:	sub    DWORD PTR [rax],esp
  43920b:	xor    al,0x2e
  43920d:	cmp    DWORD PTR [rsi],ebp
  43920f:	xor    al,0x0
	...
  43921d:	add    BYTE PTR [rax],al
  43921f:	add    BYTE PTR [rdi+0x43],al
  439222:	rex.XB cmp spl,BYTE PTR [r8]
  439225:	sub    BYTE PTR [rdi+0x4e],al
  439228:	push   rbp
  439229:	sub    DWORD PTR [rax],esp
  43922b:	xor    al,0x2e
  43922d:	cmp    DWORD PTR [rsi],ebp
  43922f:	xor    al,0x0
	...
  43923d:	add    BYTE PTR [rax],al
  43923f:	add    BYTE PTR [rdi+0x43],al
  439242:	rex.XB cmp spl,BYTE PTR [r8]
  439245:	sub    BYTE PTR [rdi+0x4e],al
  439248:	push   rbp
  439249:	sub    DWORD PTR [rax],esp
  43924b:	xor    al,0x2e
  43924d:	cmp    DWORD PTR [rsi],ebp
  43924f:	xor    al,0x0
	...
  43925d:	add    BYTE PTR [rax],al
  43925f:	add    BYTE PTR [rdi+0x43],al
  439262:	rex.XB cmp spl,BYTE PTR [r8]
  439265:	sub    BYTE PTR [rdi+0x4e],al
  439268:	push   rbp
  439269:	sub    DWORD PTR [rax],esp
  43926b:	xor    al,0x2e
  43926d:	cmp    DWORD PTR [rsi],ebp
  43926f:	xor    al,0x0
	...
  43927d:	add    BYTE PTR [rax],al
  43927f:	add    BYTE PTR [rdi+0x43],al
  439282:	rex.XB cmp spl,BYTE PTR [r8]
  439285:	sub    BYTE PTR [rdi+0x4e],al
  439288:	push   rbp
  439289:	sub    DWORD PTR [rax],esp
  43928b:	xor    al,0x2e
  43928d:	cmp    DWORD PTR [rsi],ebp
  43928f:	xor    al,0x0
	...
  43929d:	add    BYTE PTR [rax],al
  43929f:	add    BYTE PTR [rdi+0x43],al
  4392a2:	rex.XB cmp spl,BYTE PTR [r8]
  4392a5:	sub    BYTE PTR [rdi+0x4e],al
  4392a8:	push   rbp
  4392a9:	sub    DWORD PTR [rax],esp
  4392ab:	xor    al,0x2e
  4392ad:	cmp    DWORD PTR [rsi],ebp
  4392af:	xor    al,0x0
	...
  4392bd:	add    BYTE PTR [rax],al
  4392bf:	add    BYTE PTR [rdi+0x43],al
  4392c2:	rex.XB cmp spl,BYTE PTR [r8]
  4392c5:	sub    BYTE PTR [rdi+0x4e],al
  4392c8:	push   rbp
  4392c9:	sub    DWORD PTR [rax],esp
  4392cb:	xor    al,0x2e
  4392cd:	cmp    DWORD PTR [rsi],ebp
  4392cf:	xor    al,0x0
	...
  4392dd:	add    BYTE PTR [rax],al
  4392df:	add    BYTE PTR [rdi+0x43],al
  4392e2:	rex.XB cmp spl,BYTE PTR [r8]
  4392e5:	sub    BYTE PTR [rdi+0x4e],al
  4392e8:	push   rbp
  4392e9:	sub    DWORD PTR [rax],esp
  4392eb:	xor    al,0x2e
  4392ed:	cmp    DWORD PTR [rsi],ebp
  4392ef:	xor    al,0x0
	...
  4392fd:	add    BYTE PTR [rax],al
  4392ff:	add    BYTE PTR [rdi+0x43],al
  439302:	rex.XB cmp spl,BYTE PTR [r8]
  439305:	sub    BYTE PTR [rdi+0x4e],al
  439308:	push   rbp
  439309:	sub    DWORD PTR [rax],esp
  43930b:	xor    al,0x2e
  43930d:	cmp    DWORD PTR [rsi],ebp
  43930f:	xor    al,0x0
	...
  43931d:	add    BYTE PTR [rax],al
  43931f:	add    BYTE PTR [rdi+0x43],al
  439322:	rex.XB cmp spl,BYTE PTR [r8]
  439325:	sub    BYTE PTR [rdi+0x4e],al
  439328:	push   rbp
  439329:	sub    DWORD PTR [rax],esp
  43932b:	xor    al,0x2e
  43932d:	cmp    DWORD PTR [rsi],ebp
  43932f:	xor    al,0x0
	...
  43933d:	add    BYTE PTR [rax],al
  43933f:	add    BYTE PTR [rdi+0x43],al
  439342:	rex.XB cmp spl,BYTE PTR [r8]
  439345:	sub    BYTE PTR [rdi+0x4e],al
  439348:	push   rbp
  439349:	sub    DWORD PTR [rax],esp
  43934b:	xor    al,0x2e
  43934d:	cmp    DWORD PTR [rsi],ebp
  43934f:	xor    al,0x0
	...
  43935d:	add    BYTE PTR [rax],al
  43935f:	add    BYTE PTR [rdi+0x43],al
  439362:	rex.XB cmp spl,BYTE PTR [r8]
  439365:	sub    BYTE PTR [rdi+0x4e],al
  439368:	push   rbp
  439369:	sub    DWORD PTR [rax],esp
  43936b:	xor    al,0x2e
  43936d:	cmp    DWORD PTR [rsi],ebp
  43936f:	xor    al,0x0
	...
  43937d:	add    BYTE PTR [rax],al
  43937f:	add    BYTE PTR [rdi+0x43],al
  439382:	rex.XB cmp spl,BYTE PTR [r8]
  439385:	sub    BYTE PTR [rdi+0x4e],al
  439388:	push   rbp
  439389:	sub    DWORD PTR [rax],esp
  43938b:	xor    al,0x2e
  43938d:	cmp    DWORD PTR [rsi],ebp
  43938f:	xor    al,0x0
	...

Disassembly of section .pdata:

000000000043a000 <.pdata>:
  43a000:	add    BYTE PTR [rax],dl
  43a002:	add    BYTE PTR [rax],al
  43a004:	add    DWORD PTR [rax],edx
  43a006:	add    BYTE PTR [rax],al
  43a008:	add    al,al
  43a00a:	add    eax,DWORD PTR [rax]
  43a00c:	adc    BYTE PTR [rax],dl
  43a00e:	add    BYTE PTR [rax],al
  43a010:	push   rcx
  43a011:	adc    DWORD PTR [rax],eax
  43a013:	add    BYTE PTR [rax+rax*8],al
  43a016:	add    eax,DWORD PTR [rax]
  43a018:	(bad)  
  43a019:	adc    DWORD PTR [rax],eax
  43a01b:	add    BYTE PTR [rsi+0xc000011],ch
  43a021:	rol    BYTE PTR [rbx],0x0
  43a024:	mov    al,0x11
  43a026:	add    BYTE PTR [rax],al
  43a028:	(bad)  
  43a029:	adc    al,0x0
  43a02b:	add    BYTE PTR [rax+rax*8],dl
  43a02e:	add    eax,DWORD PTR [rax]
  43a030:	rcl    BYTE PTR [rax+rax*1],1
  43a033:	add    dl,dh
  43a035:	adc    al,0x0
  43a037:	add    BYTE PTR [rax],ch
  43a039:	rol    BYTE PTR [rbx],0x0
  43a03c:	add    BYTE PTR [rip+0x15220000],dl        # 0x1565a042
  43a042:	add    BYTE PTR [rax],al
  43a044:	rex.W rol BYTE PTR [rbx],0x0
  43a048:	xor    BYTE PTR [rip+0x15570000],dl        # 0x159aa04e
  43a04e:	add    BYTE PTR [rax],al
  43a050:	push   0x600003c0
  43a055:	adc    eax,0x16750000
  43a05a:	add    BYTE PTR [rax],al
  43a05c:	ins    BYTE PTR es:[rdi],dx
  43a05d:	rol    BYTE PTR [rbx],0x0
  43a060:	adc    BYTE PTR [rsi],0x0
  43a063:	add    al,bh
  43a065:	(bad)  
  43a066:	add    BYTE PTR [rax],al
  43a068:	add    al,0x3
  43a06b:	add    BYTE PTR [rax],al
  43a06d:	(bad)  
  43a06e:	add    BYTE PTR [rax],al
  43a070:	lods   eax,DWORD PTR ds:[rsi]
  43a071:	sbb    BYTE PTR [rax],al
  43a073:	add    BYTE PTR [rax-0x4ffffc40],dl
  43a079:	sbb    BYTE PTR [rax],al
  43a07b:	add    bh,bl
  43a07d:	sbb    DWORD PTR [rax],eax
  43a07f:	add    BYTE PTR [rax-0x1ffffc40],ah
  43a085:	sbb    DWORD PTR [rax],eax
  43a087:	add    BYTE PTR [rax],dl
  43a089:	sbb    al,BYTE PTR [rax]
  43a08b:	add    al,dl
  43a08d:	rol    BYTE PTR [rbx],0x0
  43a090:	adc    BYTE PTR [rdx],bl
  43a092:	add    BYTE PTR [rax],al
  43a094:	rex.WRX sbb r8b,BYTE PTR [rax]
  43a097:	add    al,bl
  43a099:	rol    BYTE PTR [rbx],0x0
  43a09c:	push   rax
  43a09d:	sbb    al,BYTE PTR [rax]
  43a09f:	add    BYTE PTR [rax-0x1fffffe6],al
  43a0a5:	rol    BYTE PTR [rbx],0x0
  43a0a8:	sbb    BYTE PTR [rdx],0x0
  43a0ab:	add    bh,bh
  43a0ad:	sbb    al,BYTE PTR [rax]
  43a0af:	add    al,ch
  43a0b1:	rol    BYTE PTR [rbx],0x0
  43a0b4:	add    BYTE PTR [rbx],bl
  43a0b6:	add    BYTE PTR [rax],al
  43a0b8:	fstp   QWORD PTR [rbx]
  43a0ba:	add    BYTE PTR [rax],al
  43a0bc:	clc    
  43a0bd:	rol    BYTE PTR [rbx],0x0
  43a0c0:	loopne 0x43a0dd
  43a0c2:	add    BYTE PTR [rax],al
  43a0c4:	(bad)  
  43a0c5:	sbb    eax,0xc1040000
  43a0ca:	add    eax,DWORD PTR [rax]
  43a0cc:	and    BYTE PTR [rip+0x1d9d0000],bl        # 0x1de0a0d2
  43a0d2:	add    BYTE PTR [rax],al
  43a0d4:	sbb    cl,al
  43a0d6:	add    eax,DWORD PTR [rax]
  43a0d8:	movabs al,ds:0x2400001e2400001d
  43a0e1:	rol    DWORD PTR [rbx],0x0
  43a0e4:	xor    BYTE PTR [rsi],bl
  43a0e6:	add    BYTE PTR [rax],al
  43a0e8:	lea    ebx,[rsi]
  43a0ea:	add    BYTE PTR [rax],al
  43a0ec:	xor    cl,al
  43a0ee:	add    eax,DWORD PTR [rax]
  43a0f0:	nop
  43a0f1:	(bad)  
  43a0f2:	add    BYTE PTR [rax],al
  43a0f4:	mov    bl,0x1e
  43a0f6:	add    BYTE PTR [rax],al
  43a0f8:	xor    al,0xc1
  43a0fa:	add    eax,DWORD PTR [rax]
  43a0fc:	rcr    BYTE PTR [rsi],0x0
  43a0ff:	add    BYTE PTR [rbx+0x3800001f],ch
  43a105:	rol    DWORD PTR [rbx],0x0
  43a108:	mov    al,0x1f
  43a10a:	add    BYTE PTR [rax],al
  43a10c:	mov    ch,0x1f
  43a10e:	add    BYTE PTR [rax],al
  43a110:	rol    QWORD PTR [rbx],0x0
  43a114:	rcr    BYTE PTR [rdi],0x0
  43a117:	add    BYTE PTR [rbx],bl
  43a119:	and    BYTE PTR [rax],al
  43a11b:	add    BYTE PTR [rcx+rax*8+0x3],cl
  43a11f:	add    BYTE PTR [rax],ah
  43a121:	and    BYTE PTR [rax],al
  43a123:	add    ah,bl
  43a125:	and    DWORD PTR [rax],eax
  43a127:	add    BYTE PTR [rax-0x3f],bl
  43a12a:	add    eax,DWORD PTR [rax]
  43a12c:	loopne 0x43a14f
  43a12e:	add    BYTE PTR [rax],al
  43a130:	in     eax,0x23
  43a132:	add    BYTE PTR [rax],al
  43a134:	ins    BYTE PTR es:[rdi],dx
  43a135:	rol    DWORD PTR [rbx],0x0
  43a138:	lock and eax,DWORD PTR [rax]
  43a13b:	add    bl,bh
  43a13d:	and    al,0x0
  43a13f:	add    BYTE PTR [rax-0x3f],bh
  43a142:	add    eax,DWORD PTR [rax]
  43a144:	add    BYTE PTR [rip+0x25580000],ah        # 0x259ba14a
  43a14a:	add    BYTE PTR [rax],al
  43a14c:	test   cl,al
  43a14e:	add    eax,DWORD PTR [rax]
  43a150:	(bad)  
  43a151:	and    eax,0x258e0000
  43a156:	add    BYTE PTR [rax],al
  43a158:	xchg   esp,eax
  43a159:	rol    DWORD PTR [rbx],0x0
  43a15c:	nop
  43a15d:	and    eax,0x25b60000
  43a162:	add    BYTE PTR [rax],al
  43a164:	pushf  
  43a165:	rol    DWORD PTR [rbx],0x0
  43a168:	shl    BYTE PTR [rip+0x268a0000],0x0        # 0x26cda16f
  43a16f:	add    BYTE PTR [rcx+rax*8+0x26900003],ah
  43a176:	add    BYTE PTR [rax],al
  43a178:	retf   0x26
  43a17b:	add    BYTE PTR [rax-0x2ffffc3f],dh
  43a181:	add    BYTE PTR es:[rax],al
  43a184:	sub    DWORD PTR [rdi],esp
  43a186:	add    BYTE PTR [rax],al
  43a188:	mov    eax,0x300003c1
  43a18d:	(bad)  
  43a18e:	add    BYTE PTR [rax],al
  43a190:	pop    rax
  43a191:	(bad)  
  43a192:	add    BYTE PTR [rax],al
  43a194:	(bad)
  43a198:	(bad)  
  43a199:	(bad)  
  43a19a:	add    BYTE PTR [rax],al
  43a19c:	nop
  43a19d:	(bad)  
  43a19e:	add    BYTE PTR [rax],al
  43a1a0:	int3   
  43a1a1:	rol    DWORD PTR [rbx],0x0
  43a1a4:	nop
  43a1a5:	(bad)  
  43a1a6:	add    BYTE PTR [rax],al
  43a1a8:	add    DWORD PTR [rax],ebp
  43a1aa:	add    BYTE PTR [rax],al
  43a1ac:	(bad)  
  43a1ad:	rol    DWORD PTR [rbx],0x0
  43a1b0:	adc    BYTE PTR [rax],ch
  43a1b2:	add    BYTE PTR [rax],al
  43a1b4:	fldcw  WORD PTR [rax]
  43a1b6:	add    BYTE PTR [rax],al
  43a1b8:	fadd   st(1),st
  43a1ba:	add    eax,DWORD PTR [rax]
  43a1bc:	loopne 0x43a1e6
  43a1be:	add    BYTE PTR [rax],al
  43a1c0:	jnp    0x43a206
  43a1c2:	add    BYTE PTR [rax],al
  43a1c4:	loopne 0x43a187
  43a1c6:	add    eax,DWORD PTR [rax]
  43a1c8:	add    BYTE PTR [rax+rax*1+0x0],0xa8
  43a1cd:	add    BYTE PTR [rax],r8b
  43a1d0:	call   0xffffffffb043a596
  43a1d5:	add    BYTE PTR [rax],r8b
  43a1d8:	stc    
  43a1d9:	add    BYTE PTR [r8],r8b
  43a1dc:	lock rol DWORD PTR [rbx],0x0
  43a1e0:	add    BYTE PTR [rsi+0x0],al
  43a1e3:	add    BYTE PTR [rcx+0x46],dh
  43a1e9:	ret    0x3
  43a1ec:	rol    BYTE PTR [rsi+0x0],0x0
  43a1f0:	(bad)
  43a1f3:	add    BYTE PTR [rax],dl
  43a1f5:	ret    0x3
  43a1f8:	rol    BYTE PTR [rsi+0x0],1
  43a1fb:	add    bh,dh
  43a1fd:	rex.RX add BYTE PTR [rax],r8b
  43a200:	adc    al,0xc2
  43a202:	add    eax,DWORD PTR [rax]
  43a204:	add    BYTE PTR [rdi+0x0],al
  43a207:	add    BYTE PTR [rsi+0x1c000047],al
  43a20d:	ret    0x3
  43a210:	nop
  43a211:	rex.RXB add BYTE PTR [r8],r8b
  43a214:	rex.WRXB
  43a215:	rex.W add BYTE PTR [rax],al
  43a218:	and    al,0xc2
  43a21a:	add    eax,DWORD PTR [rax]
  43a21c:	push   rax
  43a21d:	rex.W add BYTE PTR [rax],al
  43a220:	mov    edx,0x30000049
  43a225:	ret    0x3
  43a228:	ror    BYTE PTR [rcx+0x0],0x0
  43a22c:	adc    eax,0x4000004b
  43a231:	ret    0x3
  43a234:	and    BYTE PTR [rbx+0x0],cl
  43a237:	add    BYTE PTR [rcx],bl
  43a239:	rex.WR add BYTE PTR [rax],r8b
  43a23c:	rex.WR ret 0x3
  43a240:	and    BYTE PTR [rax+rax*1+0x0],cl
  43a244:	(bad)  
  43a245:	rex.WR add BYTE PTR [rax],r8b
  43a248:	(bad)  
  43a249:	ret    0x3
  43a24c:	loopne 0x43a29a
  43a24e:	add    BYTE PTR [rax],al
  43a250:	push   rdi
  43a251:	rex.WRX add BYTE PTR [rax],r8b
  43a254:	ins    BYTE PTR es:[rdi],dx
  43a255:	ret    0x3
  43a258:	(bad)  
  43a259:	rex.WRX add BYTE PTR [rax],r8b
  43a25c:	int3   
  43a25d:	rex.WRXB add BYTE PTR [r8],r8b
  43a260:	js     0x43a224
  43a262:	add    eax,DWORD PTR [rax]
  43a264:	ror    BYTE PTR [rdi+0x0],1
  43a267:	add    BYTE PTR [rax+rdx*2],ch
  43a26a:	add    BYTE PTR [rax],al
  43a26c:	test   dl,al
  43a26e:	add    eax,DWORD PTR [rax]
  43a270:	xor    BYTE PTR [rax+0x0],dl
  43a273:	add    BYTE PTR [rax+0x50],bl
  43a276:	add    BYTE PTR [rax],al
  43a278:	nop
  43a279:	ret    0x3
  43a27c:	(bad)  
  43a27d:	push   rax
  43a27e:	add    BYTE PTR [rax],al
  43a280:	cdq    
  43a281:	push   rax
  43a282:	add    BYTE PTR [rax],al
  43a284:	cwde   
  43a285:	ret    0x3
  43a288:	movabs al,ds:0xa0000050c6000050
  43a291:	ret    0x3
  43a294:	rcl    BYTE PTR [rax+0x0],1
  43a297:	add    BYTE PTR [rdx],cl
  43a299:	push   rcx
  43a29a:	add    BYTE PTR [rax],al
  43a29c:	test   al,0xc2
  43a29e:	add    eax,DWORD PTR [rax]
  43a2a0:	adc    BYTE PTR [rcx+0x0],dl
  43a2a3:	add    BYTE PTR [rcx+rdx*2-0x3d500000],dh
  43a2aa:	add    eax,DWORD PTR [rax]
  43a2ac:	rcl    BYTE PTR [rcx+0x0],0x0
  43a2b0:	imul   edx,DWORD PTR [rbx+0x0],0x3c2bc00
  43a2b7:	add    BYTE PTR [rax+0x53],dh
  43a2ba:	add    BYTE PTR [rax],al
  43a2bc:	rcl    DWORD PTR [rbx+0x0],1
  43a2bf:	add    ah,dl
  43a2c1:	ret    0x3
  43a2c4:	loopne 0x43a319
  43a2c6:	add    BYTE PTR [rax],al
  43a2c8:	cwde   
  43a2c9:	push   rsp
  43a2ca:	add    BYTE PTR [rax],al
  43a2cc:	loopne 0x43a290
  43a2ce:	add    eax,DWORD PTR [rax]
  43a2d0:	movabs al,ds:0xe400005738000054
  43a2d9:	ret    0x3
  43a2dc:	rex push rdi
  43a2de:	add    BYTE PTR [rax],al
  43a2e0:	jae    0x43a339
  43a2e2:	add    BYTE PTR [rax],al
  43a2e4:	call   0xffffffff8043a6ab
  43a2e9:	push   rdi
  43a2ea:	add    BYTE PTR [rax],al
  43a2ec:	lock push rdi
  43a2ee:	add    BYTE PTR [rax],al
  43a2f0:	hlt    
  43a2f1:	ret    0x3
  43a2f4:	lock push rdi
  43a2f6:	add    BYTE PTR [rax],al
  43a2f8:	leave  
  43a2f9:	pop    rax
  43a2fa:	add    BYTE PTR [rax],al
  43a2fc:	add    al,0xc3
  43a2fe:	add    eax,DWORD PTR [rax]
  43a300:	rcr    BYTE PTR [rax+0x0],1
  43a303:	add    BYTE PTR [rsi+0x59],bh
  43a306:	add    BYTE PTR [rax],al
  43a308:	sbb    al,0xc3
  43a30a:	add    eax,DWORD PTR [rax]
  43a30c:	sbb    BYTE PTR [rcx+0x0],0x0
  43a310:	(bad)  
  43a311:	pop    rdx
  43a312:	add    BYTE PTR [rax],al
  43a314:	sub    al,0xc3
  43a316:	add    eax,DWORD PTR [rax]
  43a318:	jo     0x43a374
  43a31a:	add    BYTE PTR [rax],al
  43a31c:	std    
  43a31d:	pop    rbx
  43a31e:	add    BYTE PTR [rax],al
  43a320:	cmp    al,0xc3
  43a322:	add    eax,DWORD PTR [rax]
  43a324:	add    BYTE PTR [rax+rax*1+0x0],bl
  43a328:	(bad)  
  43a329:	pop    rsp
  43a32a:	add    BYTE PTR [rax],al
  43a32c:	push   rsp
  43a32d:	ret    
  43a32e:	add    eax,DWORD PTR [rax]
  43a330:	movabs al,ds:0x6400005f8d00005c
  43a339:	ret    
  43a33a:	add    eax,DWORD PTR [rax]
  43a33c:	nop
  43a33d:	pop    rdi
  43a33e:	add    BYTE PTR [rax],al
  43a340:	mov    dl,0x60
  43a342:	add    BYTE PTR [rax],al
  43a344:	jl     0x43a309
  43a346:	add    eax,DWORD PTR [rax]
  43a348:	shl    BYTE PTR [rax+0x0],0x0
  43a34c:	xor    DWORD PTR [rdx+0x0],esp
  43a34f:	add    BYTE PTR [rbx+rax*8+0x62400003],dl
  43a356:	add    BYTE PTR [rax],al
  43a358:	cdq    
  43a359:	add    BYTE PTR gs:[rax],al
  43a35c:	movabs al,ds:0xc8000065a00003c3
  43a365:	add    BYTE PTR [eax],al
  43a368:	mov    eax,0xd00003c3
  43a36d:	add    BYTE PTR [eax],al
  43a370:	sbb    DWORD PTR [rax+0x0],ebp
  43a373:	add    ah,cl
  43a375:	ret    
  43a376:	add    eax,DWORD PTR [rax]
  43a378:	and    BYTE PTR [rax+0x0],ch
  43a37b:	add    BYTE PTR [rdi+0x68],al
  43a37e:	add    BYTE PTR [rax],al
  43a380:	fadd   st,st(3)
  43a382:	add    eax,DWORD PTR [rax]
  43a384:	push   rax
  43a385:	push   0x6bb80000
  43a38a:	add    BYTE PTR [rax],al
  43a38c:	fadd   st(3),st
  43a38e:	add    eax,DWORD PTR [rax]
  43a390:	shr    BYTE PTR [rbx+0x0],0x0
  43a394:	(bad)
  43a397:	add    al,ah
  43a399:	ret    
  43a39a:	add    eax,DWORD PTR [rax]
  43a39c:	shr    BYTE PTR [rbp+0x0],1
  43a39f:	add    bh,al
  43a3a1:	outs   dx,BYTE PTR ds:[rsi]
  43a3a2:	add    BYTE PTR [rax],al
  43a3a4:	lock ret 
  43a3a6:	add    eax,DWORD PTR [rax]
  43a3a8:	shr    BYTE PTR [rsi+0x0],1
  43a3ab:	add    BYTE PTR [rsi+0x6f],ch
  43a3ae:	add    BYTE PTR [rax],al
  43a3b0:	add    ah,al
  43a3b2:	add    eax,DWORD PTR [rax]
  43a3b4:	jo     0x43a425
  43a3b6:	add    BYTE PTR [rax],al
  43a3b8:	sub    dh,BYTE PTR [rax+0x0]
  43a3bb:	add    BYTE PTR [rsp+rax*8],cl
  43a3be:	add    eax,DWORD PTR [rax]
  43a3c0:	xor    BYTE PTR [rax+0x0],dh
  43a3c3:	add    BYTE PTR [rip+0x18000071],al        # 0x1843a43a
  43a3c9:	(bad)
  43a3cd:	jno    0x43a3cf
  43a3cf:	add    BYTE PTR [rax+0x24000072],dl
  43a3d5:	(bad)
  43a3d9:	jb     0x43a3db
  43a3db:	add    BYTE PTR [rdx+0x34000075],dl
  43a3e1:	(bad)
  43a3e5:	jne    0x43a3e7
  43a3e7:	add    BYTE PTR [rcx],bl
  43a3e9:	ja     0x43a3eb
  43a3eb:	add    BYTE PTR [rax-0x3c],cl
  43a3ee:	add    eax,DWORD PTR [rax]
  43a3f0:	and    BYTE PTR [rdi+0x0],dh
  43a3f3:	add    BYTE PTR [rsi-0x7f],al
  43a3f6:	add    BYTE PTR [rax],al
  43a3f8:	pop    rsp
  43a3f9:	(bad)
  43a3fd:	add    DWORD PTR [rax],0x863c00
  43a403:	add    BYTE PTR [rsp+rax*8+0x3],ch
  43a407:	add    BYTE PTR [rax-0x7a],al
  43a40a:	add    BYTE PTR [rax],al
  43a40c:	and    BYTE PTR [rbx-0x3b7c0000],cl
  43a412:	add    eax,DWORD PTR [rax]
  43a414:	and    BYTE PTR [rbx-0x5c620000],cl
  43a41a:	add    BYTE PTR [rax],al
  43a41c:	cwde   
  43a41d:	(bad)
  43a421:	movabs ds:0xc4b00000a4040000,eax
  43a42a:	add    eax,DWORD PTR [rax]
  43a42c:	adc    BYTE PTR [rax+rax*1+0xa79d00],ah
  43a433:	add    al,al
  43a435:	(bad)
  43a439:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43a43a:	add    BYTE PTR [rax],al
  43a43c:	cli    
  43a43d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43a43e:	add    BYTE PTR [rax],al
  43a440:	fadd   st,st(4)
  43a442:	add    eax,DWORD PTR [rax]
  43a444:	add    BYTE PTR [rax-0x57bd0000],ch
  43a44a:	add    BYTE PTR [rax],al
  43a44c:	in     al,0xc4
  43a44e:	add    eax,DWORD PTR [rax]
  43a450:	push   rax
  43a451:	test   al,0x0
  43a453:	add    BYTE PTR [rbp-0x17ffff58],bl
  43a459:	(bad)
  43a45d:	test   al,0x0
  43a45f:	add    ch,cl
  43a461:	test   al,0x0
  43a463:	add    al,dh
  43a465:	(bad)
  43a469:	test   al,0x0
  43a46b:	add    BYTE PTR [rbx+rbp*4],bh
  43a46e:	add    BYTE PTR [rax],al
  43a470:	hlt    
  43a471:	(bad)
  43a475:	stos   DWORD PTR es:[rdi],eax
  43a476:	add    BYTE PTR [rax],al
  43a478:	(bad)  
  43a479:	mov    al,0x0
  43a47b:	add    BYTE PTR [rax],cl
  43a47d:	(bad)
  43a480:	nop
  43a481:	mov    al,0x0
  43a483:	add    ah,dl
  43a485:	mov    al,0x0
  43a487:	add    BYTE PTR [rax*8-0x4f1ffffd],dl
  43a48e:	add    BYTE PTR [rax],al
  43a490:	(bad)  
  43a491:	mov    cl,0x0
  43a493:	add    BYTE PTR [rax],ah
  43a495:	(bad)
  43a498:	(bad)  
  43a499:	mov    cl,0x0
  43a49b:	add    BYTE PTR [rdi-0x4e],cl
  43a49e:	add    BYTE PTR [rax],al
  43a4a0:	sub    al,0xc5
  43a4a2:	add    eax,DWORD PTR [rax]
  43a4a4:	push   rax
  43a4a5:	mov    dl,0x0
  43a4a7:	add    BYTE PTR [rdx-0x4e],ah
  43a4aa:	add    BYTE PTR [rax],al
  43a4ac:	cmp    al,0xc5
  43a4ae:	add    eax,DWORD PTR [rax]
  43a4b0:	jo     0x43a464
  43a4b2:	add    BYTE PTR [rax],al
  43a4b4:	mov    BYTE PTR [rdx-0x3abc0000],dh
  43a4ba:	add    eax,DWORD PTR [rax]
  43a4bc:	nop
  43a4bd:	mov    dl,0x0
  43a4bf:	add    BYTE PTR [rip+0x4c0000b3],bl        # 0x4c43a578
  43a4c5:	(bad)
  43a4c8:	and    BYTE PTR [rbx-0x44c50000],dh
  43a4ce:	add    BYTE PTR [rax],al
  43a4d0:	pop    rax
  43a4d1:	(bad)
  43a4d4:	rex mov ebx,0xbb850000
  43a4da:	add    BYTE PTR [rax],al
  43a4dc:	jo     0x43a4a3
  43a4de:	add    eax,DWORD PTR [rax]
  43a4e0:	nop
  43a4e1:	mov    ebx,0xcced0000
  43a4e6:	add    BYTE PTR [rax],al
  43a4e8:	jl     0x43a4af
  43a4ea:	add    eax,DWORD PTR [rax]
  43a4ec:	lock int3 
  43a4ee:	add    BYTE PTR [rax],al
  43a4f0:	dec    esp
  43a4f2:	add    BYTE PTR [rax],al
  43a4f4:	xchg   esp,eax
  43a4f5:	(bad)
  43a4f8:	add    ch,cl
  43a4fa:	add    BYTE PTR [rax],al
  43a4fc:	add    al,0xcd
  43a4fe:	add    BYTE PTR [rax],al
  43a500:	cwde   
  43a501:	(bad)
  43a504:	adc    ch,cl
  43a506:	add    BYTE PTR [rax],al
  43a508:	adc    al,0xcd
  43a50a:	add    BYTE PTR [rax],al
  43a50c:	pushf  
  43a50d:	(bad)
  43a510:	and    ch,cl
  43a512:	add    BYTE PTR [rax],al
  43a514:	push   rdi
  43a515:	int    0x0
  43a517:	add    BYTE PTR [rax+0x600003c5],ah
  43a51d:	int    0x0
  43a51f:	add    BYTE PTR [rax-0x33],bh
  43a522:	add    BYTE PTR [rax],al
  43a524:	lods   al,BYTE PTR ds:[rsi]
  43a525:	(bad)
  43a528:	or     ch,0x0
  43a52b:	add    BYTE PTR [rax-0x4fffff33],bl
  43a531:	(bad)
  43a534:	movabs al,ds:0xb80000cdb80000cd
  43a53d:	(bad)
  43a540:	ror    ch,0x0
  43a543:	add    al,bl
  43a545:	int    0x0
  43a547:	add    al,al
  43a549:	(bad)
  43a54c:	loopne 0x43a51b
  43a54e:	add    BYTE PTR [rax],al
  43a550:	dec    ch
  43a552:	add    BYTE PTR [rax],al
  43a554:	enter  0x3c5,0x0
  43a558:	add    dh,cl
  43a55a:	add    BYTE PTR [rax],al
  43a55c:	sbb    ecx,esi
  43a55e:	add    BYTE PTR [rax],al
  43a560:	rol    ch,1
  43a562:	add    eax,DWORD PTR [rax]
  43a564:	and    dh,cl
  43a566:	add    BYTE PTR [rax],al
  43a568:	cmp    ecx,esi
  43a56a:	add    BYTE PTR [rax],al
  43a56c:	fadd   st,st(5)
  43a56e:	add    eax,DWORD PTR [rax]
  43a570:	rex (bad) 
  43a572:	add    BYTE PTR [rax],al
  43a574:	pop    rax
  43a575:	(bad)  
  43a576:	add    BYTE PTR [rax],al
  43a578:	loopne 0x43a53f
  43a57a:	add    eax,DWORD PTR [rax]
  43a57c:	(bad)  
  43a57d:	(bad)  
  43a57e:	add    BYTE PTR [rax],al
  43a580:	jnp    0x43a550
  43a582:	add    BYTE PTR [rax],al
  43a584:	call   0xffffffff8043a94e
  43a589:	(bad)  
  43a58a:	add    BYTE PTR [rax],al
  43a58c:	int3   
  43a58d:	(bad)  
  43a58e:	add    BYTE PTR [rax],al
  43a590:	(bad)
  43a594:	ror    dh,1
  43a596:	add    BYTE PTR [rax],al
  43a598:	fmul   st,st(6)
  43a59a:	add    BYTE PTR [rax],al
  43a59c:	clc    
  43a59d:	(bad)
  43a5a0:	loopne 0x43a570
  43a5a2:	add    BYTE PTR [rax],al
  43a5a4:	(bad)  
  43a5a5:	iret   
  43a5a6:	add    BYTE PTR [rax],al
  43a5a8:	cld    
  43a5a9:	(bad)
  43a5ac:	adc    bh,cl
  43a5ae:	add    BYTE PTR [rax],al
  43a5b0:	lods   al,BYTE PTR ds:[rsi]
  43a5b1:	iret   
  43a5b2:	add    BYTE PTR [rax],al
  43a5b4:	add    al,0xc6
  43a5b6:	add    eax,DWORD PTR [rax]
  43a5b8:	mov    al,0xcf
  43a5ba:	add    BYTE PTR [rax],al
  43a5bc:	(bad)  
  43a5bd:	iret   
  43a5be:	add    BYTE PTR [rax],al
  43a5c0:	adc    al,0xc6
  43a5c2:	add    eax,DWORD PTR [rax]
  43a5c4:	ror    bh,1
  43a5c6:	add    BYTE PTR [rax],al
  43a5c8:	in     eax,dx
  43a5c9:	iret   
  43a5ca:	add    BYTE PTR [rax],al
  43a5cc:	sbb    al,0xc6
  43a5ce:	add    eax,DWORD PTR [rax]
  43a5d0:	lock iret 
  43a5d2:	add    BYTE PTR [rax],al
  43a5d4:	sbb    al,dl
  43a5d6:	add    BYTE PTR [rax],al
  43a5d8:	and    al,0xc6
  43a5da:	add    eax,DWORD PTR [rax]
  43a5dc:	and    al,dl
  43a5de:	add    BYTE PTR [rax],al
  43a5e0:	retf   0xd0
  43a5e3:	add    BYTE PTR [rsi+rax*8],ch
  43a5e6:	add    eax,DWORD PTR [rax]
  43a5e8:	rcl    al,1
  43a5ea:	add    BYTE PTR [rax],al
  43a5ec:	loopne 0x43a5bf
  43a5ee:	add    BYTE PTR [rax],al
  43a5f0:	rex mov BYTE PTR [rbx],0x0
  43a5f4:	loopne 0x43a5c7
  43a5f6:	add    BYTE PTR [rax],al
  43a5f8:	pop    rbx
  43a5f9:	rol    BYTE PTR [rax],cl
  43a5fb:	add    BYTE PTR [rsi+rax*8+0x3],dl
  43a5ff:	add    BYTE PTR [rax-0x2e],ah
  43a602:	add    BYTE PTR [rax],al
  43a604:	jmp    0x6443a6db
  43a609:	mov    BYTE PTR [rbx],0x0
  43a60c:	lock rol BYTE PTR [rax],cl
  43a60f:	add    BYTE PTR [rbx],bh
  43a611:	(bad)  
  43a612:	add    BYTE PTR [rax],al
  43a614:	je     0x43a5dc
  43a616:	add    eax,DWORD PTR [rax]
  43a618:	rex (bad) 
  43a61a:	add    BYTE PTR [rax],al
  43a61c:	xchg   esp,edx
  43a61e:	add    BYTE PTR [rax],al
  43a620:	test   dh,al
  43a622:	add    eax,DWORD PTR [rax]
  43a624:	nop
  43a625:	(bad)  
  43a626:	add    BYTE PTR [rax],al
  43a628:	rcl    ah,1
  43a62a:	add    BYTE PTR [rax],al
  43a62c:	nop
  43a62d:	mov    BYTE PTR [rbx],0x0
  43a630:	rcl    ah,1
  43a632:	add    BYTE PTR [rax],al
  43a634:	adc    ebp,edx
  43a636:	add    BYTE PTR [rax],al
  43a638:	pushf  
  43a639:	mov    BYTE PTR [rbx],0x0
  43a63c:	and    ch,dl
  43a63e:	add    BYTE PTR [rax],al
  43a640:	movsxd edx,ebp
  43a642:	add    BYTE PTR [rax],al
  43a644:	test   al,0xc6
  43a646:	add    eax,DWORD PTR [rax]
  43a648:	jo     0x43a61f
  43a64a:	add    BYTE PTR [rax],al
  43a64c:	mov    al,0xd5
  43a64e:	add    BYTE PTR [rax],al
  43a650:	mov    ah,0xc6
  43a652:	add    eax,DWORD PTR [rax]
  43a654:	mov    al,0xd5
  43a656:	add    BYTE PTR [rax],al
  43a658:	mov    ebp,0xc00000d5
  43a65d:	mov    BYTE PTR [rbx],0x0
  43a660:	rcl    ch,0x0
  43a663:	add    BYTE PTR [rsi+rdx*8],cl
  43a666:	add    BYTE PTR [rax],al
  43a668:	(bad)  
  43a669:	mov    BYTE PTR [rbx],0x0
  43a66c:	adc    dh,dl
  43a66e:	add    BYTE PTR [rax],al
  43a670:	mov    bl,0xd7
  43a672:	add    BYTE PTR [rax],al
  43a674:	int3   
  43a675:	mov    BYTE PTR [rbx],0x0
  43a678:	rcl    bh,0x0
  43a67b:	add    BYTE PTR [rdi-0x28],dl
  43a67e:	add    BYTE PTR [rax],al
  43a680:	rol    dh,1
  43a682:	add    eax,DWORD PTR [rax]
  43a684:	(bad)  
  43a685:	fadd   DWORD PTR [rax]
  43a687:	add    dl,cl
  43a689:	fadd   DWORD PTR [rax]
  43a68b:	add    al,bl
  43a68d:	mov    BYTE PTR [rbx],0x0
  43a690:	rcr    al,1
  43a692:	add    BYTE PTR [rax],al
  43a694:	push   0xffffffffffffffd9
  43a696:	add    BYTE PTR [rax],al
  43a698:	loopne 0x43a660
  43a69a:	add    eax,DWORD PTR [rax]
  43a69c:	jo     0x43a677
  43a69e:	add    BYTE PTR [rax],al
  43a6a0:	scas   eax,DWORD PTR es:[rdi]
  43a6a1:	fild   DWORD PTR [rax]
  43a6a3:	add    al,ch
  43a6a5:	mov    BYTE PTR [rbx],0x0
  43a6a8:	mov    al,0xdb
  43a6aa:	add    BYTE PTR [rax],al
  43a6ac:	(bad)  
  43a6ad:	fiadd  WORD PTR [rax]
  43a6af:	add    al,bh
  43a6b1:	mov    BYTE PTR [rbx],0x0
  43a6b4:	movabs al,ds:0x40000deec0000de
  43a6bd:	mov    DWORD PTR [rbx],0xdef000
  43a6c3:	add    BYTE PTR [rbx],bh
  43a6c5:	fild   WORD PTR [rax]
  43a6c7:	add    BYTE PTR [rax],dl
  43a6c9:	mov    DWORD PTR [rbx],0xdf4000
  43a6cf:	add    BYTE PTR [rdx+0x140000df],dh
  43a6d5:	mov    DWORD PTR [rbx],0xdfc000
  43a6db:	add    BYTE PTR [rax+riz*8],al
  43a6de:	add    BYTE PTR [rax],al
  43a6e0:	sbb    bh,al
  43a6e2:	add    eax,DWORD PTR [rax]
  43a6e4:	adc    al,ah
  43a6e6:	add    BYTE PTR [rax],al
  43a6e8:	xchg   edi,eax
  43a6e9:	loopne 0x43a6eb
  43a6eb:	add    BYTE PTR [rdi+rax*8],bl
  43a6ee:	add    eax,DWORD PTR [rax]
  43a6f0:	movabs al,ds:0x2c0000e3180000e0
  43a6f9:	mov    DWORD PTR [rbx],0xe32000
  43a6ff:	add    BYTE PTR [rsi-0x1b],bl
  43a702:	add    BYTE PTR [rax],al
  43a704:	cmp    bh,al
  43a706:	add    eax,DWORD PTR [rax]
  43a708:	(bad)  
  43a709:	in     eax,0x0
  43a70b:	add    BYTE PTR [rbp+riz*8-0x38bc0000],bl
  43a712:	add    eax,DWORD PTR [rax]
  43a714:	movabs al,ds:0x500000e6640000e5
  43a71d:	mov    DWORD PTR [rbx],0xe67000
  43a723:	add    BYTE PTR [rbx],dl
  43a725:	out    0x0,eax
  43a727:	add    BYTE PTR [rdi+rax*8+0x3],bl
  43a72b:	add    BYTE PTR [rax],ah
  43a72d:	out    0x0,eax
  43a72f:	add    BYTE PTR [rdx],bh
  43a731:	jmp    0xffffffffc7a3a736
  43a736:	add    eax,DWORD PTR [rax]
  43a738:	rex jmp 0xffffffffea8aa73e
  43a73e:	add    BYTE PTR [rax],al
  43a740:	js     0x43a709
  43a742:	add    eax,DWORD PTR [rax]
  43a744:	push   rax
  43a745:	(bad)  
  43a746:	add    BYTE PTR [rax],al
  43a748:	pop    rbp
  43a749:	cmc    
  43a74a:	add    BYTE PTR [rax],al
  43a74c:	mov    bh,al
  43a74e:	add    eax,DWORD PTR [rax]
  43a750:	(bad)  
  43a751:	cmc    
  43a752:	add    BYTE PTR [rax],al
  43a754:	(bad)  
  43a755:	clc    
  43a756:	add    BYTE PTR [rax],al
  43a758:	movabs al,ds:0x40000f8200003c7
  43a761:	sti    
  43a762:	add    BYTE PTR [rax],al
  43a764:	mov    ah,0xc7
  43a766:	add    eax,DWORD PTR [rax]
  43a768:	adc    bl,bh
  43a76a:	add    BYTE PTR [rax],al
  43a76c:	in     eax,dx
  43a76d:	xor    al,0x1
  43a76f:	add    ah,al
  43a771:	mov    DWORD PTR [rbx],0x134f000
  43a777:	add    BYTE PTR [rsi-0x23fffecb],dl
  43a77d:	mov    DWORD PTR [rbx],0x135a000
  43a783:	add    BYTE PTR [rsi],bl
  43a785:	add    DWORD PTR ss:[rax],eax
  43a788:	loopne 0x43a751
  43a78a:	add    eax,DWORD PTR [rax]
  43a78c:	and    BYTE PTR [rsi],dh
  43a78e:	add    DWORD PTR [rax],eax
  43a790:	cmp    DWORD PTR gs:[rcx],eax
  43a793:	add    al,ch
  43a795:	mov    DWORD PTR [rbx],0x1397000
  43a79b:	add    BYTE PTR [rdi],ah
  43a79d:	cmp    eax,0xc7fc0001
  43a7a2:	add    eax,DWORD PTR [rax]
  43a7a4:	xor    BYTE PTR [rip+0x3e110001],bh        # 0x3e54a7ab
  43a7aa:	add    DWORD PTR [rax],eax
  43a7ac:	adc    al,0xc8
  43a7ae:	add    eax,DWORD PTR [rax]
  43a7b0:	and    BYTE PTR [rsi],bh
  43a7b2:	add    DWORD PTR [rax],eax
  43a7b4:	je     0x43a7f4
  43a7b6:	add    DWORD PTR [rax],eax
  43a7b8:	and    al,0xc8
  43a7ba:	add    eax,DWORD PTR [rax]
  43a7bc:	cmp    BYTE PTR [rsi],0x1
  43a7bf:	add    BYTE PTR [rbp+0x3000013e],ch
  43a7c5:	enter  0x3,0xb0
  43a7c9:	add    DWORD PTR ds:[rax],eax
  43a7cc:	(bad)  
  43a7cd:	add    DWORD PTR ds:[rax],eax
  43a7d0:	cmp    al,cl
  43a7d2:	add    eax,DWORD PTR [rax]
  43a7d4:	add    BYTE PTR [rdi],bh
  43a7d6:	add    DWORD PTR [rax],eax
  43a7d8:	data16 (bad) 
  43a7da:	add    DWORD PTR [rax],eax
  43a7dc:	cmp    al,0xc8
  43a7de:	add    eax,DWORD PTR [rax]
  43a7e0:	jo     0x43a821
  43a7e2:	add    DWORD PTR [rax],eax
  43a7e4:	loop   0x43a825
  43a7e6:	add    DWORD PTR [rax],eax
  43a7e8:	push   rax
  43a7e9:	enter  0x3,0xf0
  43a7ed:	(bad)  
  43a7ee:	add    DWORD PTR [rax],eax
  43a7f0:	add    eax,DWORD PTR [rbx+0x1]
  43a7f3:	add    BYTE PTR [rax+rcx*8+0x3],bl
  43a7f7:	add    BYTE PTR [rax],dl
  43a7f9:	rex.XB add DWORD PTR [r8],eax
  43a7fc:	and    al,0x45
  43a7fe:	add    DWORD PTR [rax],eax
  43a800:	je     0x43a7ca
  43a802:	add    eax,DWORD PTR [rax]
  43a804:	xor    BYTE PTR [rbp+0x1],al
  43a807:	add    BYTE PTR [rip+0xffffffff8c000147],al        # 0xffffffff8c43a954
  43a80d:	enter  0x3,0x10
  43a811:	rex.RXB add DWORD PTR [r8],r8d
  43a814:	in     eax,dx
  43a815:	rex.RXB add DWORD PTR [r8],r8d
  43a818:	cwde   
  43a819:	enter  0x3,0xf0
  43a81d:	rex.RXB add DWORD PTR [r8],r8d
  43a820:	rex.B
  43a821:	add    QWORD PTR [rax],rax
  43a824:	test   al,0xc8
  43a826:	add    eax,DWORD PTR [rax]
  43a828:	push   rax
  43a829:	add    QWORD PTR [rax],rax
  43a82c:	fisttp DWORD PTR [rax+0x1]
  43a82f:	add    BYTE PTR [rax-0x1ffffc38],dh
  43a835:	add    QWORD PTR [rax],rax
  43a838:	rex.X
  43a839:	add    QWORD PTR [r8],rax
  43a83c:	mov    esp,0x500003c8
  43a841:	add    QWORD PTR [r8],rax
  43a844:	rex.WRXB add QWORD PTR ds:[r8],r8
  43a848:	enter  0x3c8,0x0
  43a84c:	rex
  43a84d:	rex.WRXB add QWORD PTR [r8],r8
  43a850:	mov    bh,0x51
  43a852:	add    DWORD PTR [rax],eax
  43a854:	loopne 0x43a81e
  43a856:	add    eax,DWORD PTR [rax]
  43a858:	rcl    BYTE PTR [rcx+0x1],0x0
  43a85c:	push   rdi
  43a85d:	add    DWORD PTR fs:[rax],eax
  43a860:	lock enter 0x3,0x60
  43a865:	add    DWORD PTR fs:[rax],eax
  43a868:	cdq    
  43a869:	ins    DWORD PTR es:[rdi],dx
  43a86a:	add    DWORD PTR [rax],eax
  43a86c:	or     cl,cl
  43a86e:	add    eax,DWORD PTR [rax]
  43a870:	movabs al,ds:0x1c00016da800016d
  43a879:	leave  
  43a87a:	add    eax,DWORD PTR [rax]
  43a87c:	mov    al,0x6d
  43a87e:	add    DWORD PTR [rax],eax
  43a880:	push   rsi
  43a881:	outs   dx,BYTE PTR ds:[rsi]
  43a882:	add    DWORD PTR [rax],eax
  43a884:	and    cl,cl
  43a886:	add    eax,DWORD PTR [rax]
  43a888:	(bad)  
  43a889:	outs   dx,BYTE PTR ds:[rsi]
  43a88a:	add    DWORD PTR [rax],eax
  43a88c:	in     al,0x6e
  43a88e:	add    DWORD PTR [rax],eax
  43a890:	sub    cl,cl
  43a892:	add    eax,DWORD PTR [rax]
  43a894:	lock outs dx,BYTE PTR ds:[rsi]
  43a896:	add    DWORD PTR [rax],eax
  43a898:	jge    0x43a909
  43a89a:	add    DWORD PTR [rax],eax
  43a89c:	cmp    cl,cl
  43a89e:	add    eax,DWORD PTR [rax]
  43a8a0:	sub    BYTE PTR [rdi+0x1],0x0
  43a8a4:	in     al,0x6f
  43a8a6:	add    DWORD PTR [rax],eax
  43a8a8:	rex.W leave 
  43a8aa:	add    eax,DWORD PTR [rax]
  43a8ac:	lock outs dx,DWORD PTR ds:[rsi]
  43a8ae:	add    DWORD PTR [rax],eax
  43a8b0:	scas   al,BYTE PTR es:[rdi]
  43a8b1:	jno    0x43a8b4
  43a8b3:	add    BYTE PTR [rcx+rcx*8+0x3],dl
  43a8b7:	add    BYTE PTR [rax-0x37fffe8f],dh
  43a8bd:	jae    0x43a8c0
  43a8bf:	add    BYTE PTR [rcx+rcx*8+0x3],ah
  43a8c3:	add    al,dl
  43a8c5:	jae    0x43a8c8
  43a8c7:	add    BYTE PTR [rcx],al
  43a8c9:	je     0x43a8cc
  43a8cb:	add    BYTE PTR [rax-0x37],bh
  43a8ce:	add    eax,DWORD PTR [rax]
  43a8d0:	adc    BYTE PTR [rcx+rax*1+0x0],dh
  43a8d4:	mov    DWORD PTR [rbp+0x1],esi
  43a8d7:	add    BYTE PTR [rcx+rcx*8+0x75900003],al
  43a8de:	add    DWORD PTR [rax],eax
  43a8e0:	(bad)
  43a8e3:	add    BYTE PTR [rax-0x2ffffc37],bl
  43a8e9:	jne    0x43a8ec
  43a8eb:	add    al,dl
  43a8ed:	jbe    0x43a8f0
  43a8ef:	add    BYTE PTR [rax-0x2ffffc37],ah
  43a8f5:	jbe    0x43a8f8
  43a8f7:	add    bh,bl
  43a8f9:	js     0x43a8fc
  43a8fb:	add    BYTE PTR [rax-0x1ffffc37],dh
  43a901:	js     0x43a904
  43a903:	add    dl,bl
  43a905:	jp     0x43a908
  43a907:	add    al,al
  43a909:	leave  
  43a90a:	add    eax,DWORD PTR [rax]
  43a90c:	loopne 0x43a988
  43a90e:	add    DWORD PTR [rax],eax
  43a910:	outs   dx,BYTE PTR ds:[rsi]
  43a911:	jl     0x43a914
  43a913:	add    al,dl
  43a915:	leave  
  43a916:	add    eax,DWORD PTR [rax]
  43a918:	jo     0x43a996
  43a91a:	add    DWORD PTR [rax],eax
  43a91c:	pop    rdi
  43a91d:	jge    0x43a920
  43a91f:	add    al,ch
  43a921:	leave  
  43a922:	add    eax,DWORD PTR [rax]
  43a924:	(bad)  
  43a925:	jge    0x43a928
  43a927:	add    bh,al
  43a929:	add    BYTE PTR [rcx],0x0
  43a92c:	clc    
  43a92d:	leave  
  43a92e:	add    eax,DWORD PTR [rax]
  43a930:	rol    BYTE PTR [rax-0x7f00ffff],1
  43a936:	add    DWORD PTR [rax],eax
  43a938:	adc    dl,cl
  43a93a:	add    eax,DWORD PTR [rax]
  43a93c:	add    BYTE PTR [rcx-0x7ee8ffff],al
  43a942:	add    DWORD PTR [rax],eax
  43a944:	sbb    al,0xca
  43a946:	add    eax,DWORD PTR [rax]
  43a948:	and    BYTE PTR [rcx-0x7e79ffff],al
  43a94e:	add    DWORD PTR [rax],eax
  43a950:	and    dl,cl
  43a952:	add    eax,DWORD PTR [rax]
  43a954:	nop
  43a955:	add    DWORD PTR [rcx],0x181c200
  43a95b:	add    BYTE PTR [rdx+rcx*8],ah
  43a95e:	add    eax,DWORD PTR [rax]
  43a960:	rol    BYTE PTR [rcx-0x7d75ffff],1
  43a966:	add    DWORD PTR [rax],eax
  43a968:	sub    dl,cl
  43a96a:	add    eax,DWORD PTR [rax]
  43a96c:	nop
  43a96d:	(bad)  
  43a96e:	add    DWORD PTR [rax],eax
  43a970:	xchg   esp,eax
  43a971:	add    DWORD PTR [rcx],0x0
  43a974:	xor    dl,cl
  43a976:	add    eax,DWORD PTR [rax]
  43a978:	movabs al,ds:0x40000183c9000183
  43a981:	retf   0x3
  43a984:	rol    BYTE PTR [rbx-0x7b62ffff],1
  43a98a:	add    DWORD PTR [rax],eax
  43a98c:	rex.W retf 0x3
  43a990:	movabs al,ds:0x4c00018847000184
  43a999:	retf   0x3
  43a99c:	push   rax
  43a99d:	mov    BYTE PTR [rcx],al
  43a99f:	add    BYTE PTR [rdx+0x6000018a],ah
  43a9a5:	retf   0x3
  43a9a8:	mov    al,0x8a
  43a9aa:	add    DWORD PTR [rax],eax
  43a9ac:	(bad)  
  43a9ad:	xchg   ebp,eax
  43a9ae:	add    DWORD PTR [rax],eax
  43a9b0:	js     0x43a97c
  43a9b2:	add    eax,DWORD PTR [rax]
  43a9b4:	jo     0x43a94b
  43a9b6:	add    DWORD PTR [rax],eax
  43a9b8:	jnp    0x43a94f
  43a9ba:	add    DWORD PTR [rax],eax
  43a9bc:	nop
  43a9bd:	retf   0x3
  43a9c0:	adc    BYTE PTR [rbp-0x6a18ffff],0x1
  43a9c7:	add    BYTE PTR [rdx+rcx*8-0x6a0ffffd],dl
  43a9ce:	add    DWORD PTR [rax],eax
  43a9d0:	rex.RX (bad) 
  43a9d2:	add    DWORD PTR [rax],eax
  43a9d4:	pushf  
  43a9d5:	retf   0x3
  43a9d8:	push   rax
  43a9d9:	(bad)  
  43a9da:	add    DWORD PTR [rax],eax
  43a9dc:	cwde   
  43a9dd:	sahf   
  43a9de:	add    DWORD PTR [rax],eax
  43a9e0:	mov    ah,0xca
  43a9e2:	add    eax,DWORD PTR [rax]
  43a9e4:	movabs al,ds:0xc80001a17200019e
  43a9ed:	retf   0x3
  43a9f0:	and    BYTE PTR [rcx-0x5cc7ffff],0x1
  43a9f7:	add    al,ah
  43a9f9:	retf   0x3
  43a9fc:	rex movabs ds:0xcaf00001a3610001,eax
  43aa06:	add    eax,DWORD PTR [rax]
  43aa08:	jo     0x43a9ad
  43aa0a:	add    DWORD PTR [rax],eax
  43aa0c:	scas   al,BYTE PTR es:[rdi]
  43aa0d:	movabs ds:0xa3b00003caf40001,eax
  43aa16:	add    DWORD PTR [rax],eax
  43aa18:	shl    DWORD PTR [rbp-0x3503ffff],1
  43aa1e:	add    eax,DWORD PTR [rax]
  43aa20:	loopne 0x43a9c7
  43aa22:	add    DWORD PTR [rax],eax
  43aa24:	mov    edx,0x80001aa
  43aa29:	retf   
  43aa2a:	add    eax,DWORD PTR [rax]
  43aa2c:	shr    BYTE PTR [rdx-0x543fffff],0x1
  43aa33:	add    BYTE PTR [rax],ah
  43aa35:	retf   
  43aa36:	add    eax,DWORD PTR [rax]
  43aa38:	shr    BYTE PTR [rbx-0x5332ffff],0x1
  43aa3f:	add    BYTE PTR [rbx+rcx*8],ch
  43aa42:	add    eax,DWORD PTR [rax]
  43aa44:	shr    BYTE PTR [rcx+rax*1+0x1ad1e00],1
  43aa4b:	add    BYTE PTR [rbx+rcx*8],bh
  43aa4e:	add    eax,DWORD PTR [rax]
  43aa50:	and    BYTE PTR [rbp-0x50f7ffff],ch
  43aa56:	add    DWORD PTR [rax],eax
  43aa58:	rex.R retf 
  43aa5a:	add    eax,DWORD PTR [rax]
  43aa5c:	adc    BYTE PTR [rdi-0x4b7dffff],ch
  43aa62:	add    DWORD PTR [rax],eax
  43aa64:	push   rsp
  43aa65:	retf   
  43aa66:	add    eax,DWORD PTR [rax]
  43aa68:	nop
  43aa69:	mov    ah,0x1
  43aa6b:	add    BYTE PTR [rcx-0x4a],al
  43aa6e:	add    DWORD PTR [rax],eax
  43aa70:	ins    BYTE PTR es:[rdi],dx
  43aa71:	retf   
  43aa72:	add    eax,DWORD PTR [rax]
  43aa74:	push   rax
  43aa75:	mov    dh,0x1
  43aa77:	add    BYTE PTR [rdi+0x7c0001b8],dl
  43aa7d:	retf   
  43aa7e:	add    eax,DWORD PTR [rax]
  43aa80:	movabs al,ds:0x900001bcb70001b8
  43aa89:	retf   
  43aa8a:	add    eax,DWORD PTR [rax]
  43aa8c:	sar    BYTE PTR [rcx+rax*1+0x1becd00],0x0
  43aa94:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43aa95:	retf   
  43aa96:	add    eax,DWORD PTR [rax]
  43aa98:	sar    BYTE PTR [rsi-0x3ed4ffff],1
  43aa9e:	add    DWORD PTR [rax],eax
  43aaa0:	mov    al,0xcb
  43aaa2:	add    eax,DWORD PTR [rax]
  43aaa4:	xor    cl,al
  43aaa6:	add    DWORD PTR [rax],eax
  43aaa8:	and    ch,al
  43aaaa:	add    DWORD PTR [rax],eax
  43aaac:	ror    bl,0x3
  43aaaf:	add    BYTE PTR [rax],ah
  43aab1:	(bad)
  43aab4:	imul   eax,esi,0x1
  43aab7:	add    ah,dl
  43aab9:	retf   
  43aaba:	add    eax,DWORD PTR [rax]
  43aabc:	jo     0x43aa84
  43aabe:	add    DWORD PTR [rax],eax
  43aac0:	cdq    
  43aac1:	mov    BYTE PTR [rcx],0x0
  43aac4:	loopne 0x43aa91
  43aac6:	add    eax,DWORD PTR [rax]
  43aac8:	movabs al,ds:0xec0001c7330001c6
  43aad1:	retf   
  43aad2:	add    eax,DWORD PTR [rax]
  43aad4:	rex mov DWORD PTR [rcx],0x1c78b00
  43aadb:	add    al,bh
  43aadd:	retf   
  43aade:	add    eax,DWORD PTR [rax]
  43aae0:	nop
  43aae1:	mov    DWORD PTR [rcx],0x1c80000
  43aae7:	add    BYTE PTR [rax],al
  43aae9:	int3   
  43aaea:	add    eax,DWORD PTR [rax]
  43aaec:	add    al,cl
  43aaee:	add    DWORD PTR [rax],eax
  43aaf0:	mov    ebx,0x100001c8
  43aaf5:	int3   
  43aaf6:	add    eax,DWORD PTR [rax]
  43aaf8:	ror    al,0x1
  43aafb:	add    BYTE PTR [rcx-0x2f],cl
  43aafe:	add    DWORD PTR [rax],eax
  43ab00:	sbb    al,0xcc
  43ab02:	add    eax,DWORD PTR [rax]
  43ab04:	push   rax
  43ab05:	rol    DWORD PTR [rcx],1
  43ab07:	add    bl,bh
  43ab09:	rol    DWORD PTR [rcx],1
  43ab0b:	add    BYTE PTR [rax],dh
  43ab0d:	int3   
  43ab0e:	add    eax,DWORD PTR [rax]
  43ab10:	add    dl,dl
  43ab12:	add    DWORD PTR [rax],eax
  43ab14:	(bad)  
  43ab16:	add    DWORD PTR [rax],eax
  43ab18:	cmp    ah,cl
  43ab1a:	add    eax,DWORD PTR [rax]
  43ab1c:	loopne 0x43aaf0
  43ab1e:	add    DWORD PTR [rax],eax
  43ab20:	mov    esp,0x440001d3
  43ab25:	int3   
  43ab26:	add    eax,DWORD PTR [rax]
  43ab28:	rcl    bl,0x1
  43ab2b:	add    BYTE PTR [rsp+rdx*8-0x33afffff],dl
  43ab32:	add    eax,DWORD PTR [rax]
  43ab34:	movabs al,ds:0x5c0001d4ee0001d4
  43ab3d:	int3   
  43ab3e:	add    eax,DWORD PTR [rax]
  43ab40:	lock (bad) 
  43ab42:	add    DWORD PTR [rax],eax
  43ab44:	sub    al,0xd5
  43ab46:	add    DWORD PTR [rax],eax
  43ab48:	push   0x300003cc
  43ab4d:	(bad)  
  43ab4e:	add    DWORD PTR [rax],eax
  43ab50:	sbb    ebx,ebx
  43ab52:	add    DWORD PTR [rax],eax
  43ab54:	jo     0x43ab22
  43ab56:	add    eax,DWORD PTR [rax]
  43ab58:	and    bl,bl
  43ab5a:	add    DWORD PTR [rax],eax
  43ab5c:	push   rbp
  43ab5d:	fild   DWORD PTR [rcx]
  43ab5f:	add    BYTE PTR [rsp+rcx*8+0x3],dh
  43ab63:	add    BYTE PTR [rax-0x25],ah
  43ab66:	add    DWORD PTR [rax],eax
  43ab68:	sbb    ah,0x1
  43ab6b:	add    BYTE PTR [rsp+rcx*8+0x3],bh
  43ab6f:	add    BYTE PTR [rax+0x520001dc],al
  43ab75:	fild   WORD PTR [rcx]
  43ab77:	add    BYTE PTR [rax+0x600003cc],dl
  43ab7d:	fild   WORD PTR [rcx]
  43ab7f:	add    dl,bl
  43ab81:	loopne 0x43ab84
  43ab83:	add    BYTE PTR [rsp+rcx*8-0x1f1ffffd],ah
  43ab8a:	add    DWORD PTR [rax],eax
  43ab8c:	jl     0x43ab6f
  43ab8e:	add    DWORD PTR [rax],eax
  43ab90:	mov    eax,0x800003cc
  43ab95:	loope  0x43ab98
  43ab97:	add    BYTE PTR [rdi-0x3bfffe1e],al
  43ab9d:	int3   
  43ab9e:	add    eax,DWORD PTR [rax]
  43aba0:	nop
  43aba1:	loop   0x43aba4
  43aba3:	add    BYTE PTR [rcx],dh
  43aba5:	jmp    0xffffffffcd13abab
  43abaa:	add    eax,DWORD PTR [rax]
  43abac:	rex jmp 0xffffffffe9b9abb3
  43abb2:	add    DWORD PTR [rax],eax
  43abb4:	call   0xffffffff8043af85
  43abb9:	jmp    0xffffffffea2eabbf
  43abbe:	add    DWORD PTR [rax],eax
  43abc0:	hlt    
  43abc1:	int3   
  43abc2:	add    eax,DWORD PTR [rax]
  43abc4:	lock jmp 0xfffffffff1fcabcb
  43abca:	add    DWORD PTR [rax],eax
  43abcc:	add    ch,cl
  43abce:	add    eax,DWORD PTR [rax]
  43abd0:	shl    cl,0x1
  43abd3:	add    BYTE PTR [rbp-0xe],bh
  43abd6:	add    DWORD PTR [rax],eax
  43abd8:	sbb    ch,cl
  43abda:	add    eax,DWORD PTR [rax]
  43abdc:	xor    dl,0x1
  43abdf:	add    ch,ah
  43abe1:	repnz add DWORD PTR [rax],eax
  43abe4:	sub    ch,cl
  43abe6:	add    eax,DWORD PTR [rax]
  43abe8:	lock xacquire add DWORD PTR [rax],eax
  43abec:	adc    ebx,esi
  43abee:	add    DWORD PTR [rax],eax
  43abf0:	xor    al,0xcd
  43abf2:	add    eax,DWORD PTR [rax]
  43abf4:	and    bl,dh
  43abf6:	add    DWORD PTR [rax],eax
  43abf8:	pop    rcx
  43abf9:	repz add DWORD PTR [rax],eax
  43abfc:	cmp    al,0xcd
  43abfe:	add    eax,DWORD PTR [rax]
  43ac00:	(bad)  
  43ac01:	repz add DWORD PTR [rax],eax
  43ac04:	mov    dh,0xf3
  43ac06:	add    DWORD PTR [rax],eax
  43ac08:	rex.R int 0x3
  43ac0b:	add    al,al
  43ac0d:	repz add DWORD PTR [rax],eax
  43ac10:	outs   dx,BYTE PTR ds:[rsi]
  43ac11:	hlt    
  43ac12:	add    DWORD PTR [rax],eax
  43ac14:	rex.WR int 0x3
  43ac17:	add    BYTE PTR [rax-0xc],dh
  43ac1a:	add    DWORD PTR [rax],eax
  43ac1c:	(bad)  
  43ac1d:	cmc    
  43ac1e:	add    DWORD PTR [rax],eax
  43ac20:	pop    rsp
  43ac21:	int    0x3
  43ac23:	add    al,dl
  43ac25:	cmc    
  43ac26:	add    DWORD PTR [rax],eax
  43ac28:	sbb    esi,esi
  43ac2a:	add    DWORD PTR [rax],eax
  43ac2c:	ins    BYTE PTR es:[rdi],dx
  43ac2d:	int    0x3
  43ac2f:	add    BYTE PTR [rax],ah
  43ac31:	test   BYTE PTR [rcx],0x0
  43ac34:	jge    0x43ac2c
  43ac36:	add    DWORD PTR [rax],eax
  43ac38:	je     0x43ac07
  43ac3a:	add    eax,DWORD PTR [rax]
  43ac3c:	xor    dh,0x1
  43ac3f:	add    BYTE PTR [rsi],bl
  43ac41:	test   DWORD PTR [rcx],0x3cd8000
  43ac47:	add    BYTE PTR [rax],ah
  43ac49:	test   DWORD PTR [rcx],0x1f7b400
  43ac4f:	add    BYTE PTR [rbp+rcx*8-0x83ffffd],cl
  43ac56:	add    DWORD PTR [rax],eax
  43ac58:	shl    edi,1
  43ac5a:	add    DWORD PTR [rax],eax
  43ac5c:	cwde   
  43ac5d:	int    0x3
  43ac5f:	add    al,ah
  43ac61:	test   DWORD PTR [rcx],0x1f80c00
  43ac67:	add    BYTE PTR [rbp+rcx*8-0x7effffd],bl
  43ac6e:	add    DWORD PTR [rax],eax
  43ac70:	cdq    
  43ac71:	clc    
  43ac72:	add    DWORD PTR [rax],eax
  43ac74:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43ac75:	int    0x3
  43ac77:	add    BYTE PTR [rax-0x37fffe08],ah
  43ac7d:	clc    
  43ac7e:	add    DWORD PTR [rax],eax
  43ac80:	mov    al,0xcd
  43ac82:	add    eax,DWORD PTR [rax]
  43ac84:	sar    al,1
  43ac86:	add    DWORD PTR [rax],eax
  43ac88:	clc    
  43ac89:	clc    
  43ac8a:	add    DWORD PTR [rax],eax
  43ac8c:	mov    esp,0x3cd
  43ac91:	stc    
  43ac92:	add    DWORD PTR [rax],eax
  43ac94:	psubw  mm0,QWORD PTR [rcx]
  43ac97:	add    al,cl
  43ac99:	int    0x3
  43ac9b:	add    BYTE PTR [rax],dl
  43ac9d:	stc    
  43ac9e:	add    DWORD PTR [rax],eax
  43aca0:	xor    bh,cl
  43aca2:	add    DWORD PTR [rax],eax
  43aca4:	int3   
  43aca5:	int    0x3
  43aca7:	add    BYTE PTR [rax-0x7],al
  43acaa:	add    DWORD PTR [rax],eax
  43acac:	(bad)  
  43acad:	stc    
  43acae:	add    DWORD PTR [rax],eax
  43acb0:	ror    ch,1
  43acb2:	add    eax,DWORD PTR [rax]
  43acb4:	movabs al,ds:0xdc0001f9ad0001f9
  43acbd:	int    0x3
  43acbf:	add    BYTE PTR [rax+0x2b0001f9],dh
  43acc5:	cli    
  43acc6:	add    DWORD PTR [rax],eax
  43acc8:	loopne 0x43ac97
  43acca:	add    eax,DWORD PTR [rax]
  43accc:	xor    dl,bh
  43acce:	add    DWORD PTR [rax],eax
  43acd0:	push   rcx
  43acd1:	cli    
  43acd2:	add    DWORD PTR [rax],eax
  43acd4:	in     al,dx
  43acd5:	int    0x3
  43acd7:	add    BYTE PTR [rax-0x6],ah
  43acda:	add    DWORD PTR [rax],eax
  43acdc:	in     eax,0xfa
  43acde:	add    DWORD PTR [rax],eax
  43ace0:	lock int 0x3
  43ace3:	add    al,dh
  43ace5:	cli    
  43ace6:	add    DWORD PTR [rax],eax
  43ace8:	nop
  43ace9:	sti    
  43acea:	add    DWORD PTR [rax],eax
  43acec:	add    dh,cl
  43acee:	add    eax,DWORD PTR [rax]
  43acf0:	nop
  43acf1:	sti    
  43acf2:	add    DWORD PTR [rax],eax
  43acf4:	mov    al,0xfd
  43acf6:	add    DWORD PTR [rax],eax
  43acf8:	add    al,0xce
  43acfa:	add    eax,DWORD PTR [rax]
  43acfc:	mov    al,0xfd
  43acfe:	add    DWORD PTR [rax],eax
  43ad00:	(bad)  
  43ad01:	std    
  43ad02:	add    DWORD PTR [rax],eax
  43ad04:	adc    dh,cl
  43ad06:	add    eax,DWORD PTR [rax]
  43ad08:	sar    ch,1
  43ad0a:	add    DWORD PTR [rax],eax
  43ad0c:	jp     0x43ad10
  43ad0e:	add    al,BYTE PTR [rax]
  43ad10:	adc    al,0xce
  43ad12:	add    eax,DWORD PTR [rax]
  43ad14:	add    BYTE PTR [rdx],0x2
  43ad17:	add    BYTE PTR [rax+0x3],dl
  43ad1a:	add    al,BYTE PTR [rax]
  43ad1c:	and    al,0xce
  43ad1e:	add    eax,DWORD PTR [rax]
  43ad20:	push   rax
  43ad21:	add    eax,DWORD PTR [rdx]
  43ad23:	add    BYTE PTR [rax+0x30000203],dh
  43ad29:	(bad)  
  43ad2a:	add    eax,DWORD PTR [rax]
  43ad2c:	mov    al,0x3
  43ad2e:	add    al,BYTE PTR [rax]
  43ad30:	mov    ch,0x8
  43ad32:	add    al,BYTE PTR [rax]
  43ad34:	xor    al,0xce
  43ad36:	add    eax,DWORD PTR [rax]
  43ad38:	ror    BYTE PTR [rax],0x2
  43ad3b:	add    BYTE PTR [rip+0x4c000209],cl        # 0x4c43af4a
  43ad41:	(bad)  
  43ad42:	add    eax,DWORD PTR [rax]
  43ad44:	adc    BYTE PTR [rcx],cl
  43ad46:	add    al,BYTE PTR [rax]
  43ad48:	(bad)  
  43ad49:	or     DWORD PTR [rdx],eax
  43ad4b:	add    BYTE PTR [rax-0x32],bl
  43ad4e:	add    eax,DWORD PTR [rax]
  43ad50:	and    BYTE PTR [rcx],cl
  43ad52:	add    al,BYTE PTR [rax]
  43ad54:	int3   
  43ad55:	or     DWORD PTR [rdx],eax
  43ad57:	add    BYTE PTR [rsi+rcx*8+0x3],bl
  43ad5b:	add    al,dl
  43ad5d:	or     DWORD PTR [rdx],eax
  43ad5f:	add    BYTE PTR [rcx],dl
  43ad61:	or     al,BYTE PTR [rdx]
  43ad63:	add    BYTE PTR [rsi+rcx*8+0x3],ch
  43ad67:	add    BYTE PTR [rax],ah
  43ad69:	or     al,BYTE PTR [rdx]
  43ad6b:	add    BYTE PTR [rsi],ah
  43ad6d:	or     al,BYTE PTR [rdx]
  43ad6f:	add    BYTE PTR [rax-0x32],bh
  43ad72:	add    eax,DWORD PTR [rax]
  43ad74:	xor    BYTE PTR [rdx],cl
  43ad76:	add    al,BYTE PTR [rax]
  43ad78:	loope  0x43ad84
  43ad7a:	add    al,BYTE PTR [rax]
  43ad7c:	jl     0x43ad4c
  43ad7e:	add    eax,DWORD PTR [rax]
  43ad80:	lock or al,BYTE PTR [rdx]
  43ad83:	add    dh,dh
  43ad85:	or     al,BYTE PTR [rdx]
  43ad87:	add    BYTE PTR [rax+0x3ce],cl
  43ad8d:	or     eax,DWORD PTR [rdx]
  43ad8f:	add    BYTE PTR [rsi],al
  43ad91:	or     eax,DWORD PTR [rdx]
  43ad93:	add    BYTE PTR [rsi+rcx*8+0xb100003],cl
  43ad9a:	add    al,BYTE PTR [rax]
  43ad9c:	push   rdi
  43ad9d:	or     eax,DWORD PTR [rdx]
  43ad9f:	add    BYTE PTR [rax+0x600003ce],dl
  43ada5:	or     eax,DWORD PTR [rdx]
  43ada7:	add    BYTE PTR [rsi+0xb],ah
  43adaa:	add    al,BYTE PTR [rax]
  43adac:	cwde   
  43adad:	(bad)  
  43adae:	add    eax,DWORD PTR [rax]
  43adb0:	jo     0x43adbd
  43adb2:	add    al,BYTE PTR [rax]
  43adb4:	int3   
  43adb5:	or     al,0x2
  43adb7:	add    BYTE PTR [rsi+rcx*8+0xcd00003],bl
  43adbe:	add    al,BYTE PTR [rax]
  43adc0:	jmp    0x43adce
  43adc2:	add    al,BYTE PTR [rax]
  43adc4:	lods   al,BYTE PTR ds:[rsi]
  43adc5:	(bad)  
  43adc6:	add    eax,DWORD PTR [rax]
  43adc8:	lock or al,0x2
  43adcb:	add    BYTE PTR [rcx-0x4bfffdf3],ch
  43add1:	(bad)  
  43add2:	add    eax,DWORD PTR [rax]
  43add4:	mov    al,0xd
  43add6:	add    al,BYTE PTR [rax]
  43add8:	xor    eax,0xbc00020e
  43addd:	(bad)  
  43adde:	add    eax,DWORD PTR [rax]
  43ade0:	rex (bad) 
  43ade2:	add    al,BYTE PTR [rax]
  43ade4:	rex.RX (bad) 
  43ade6:	add    al,BYTE PTR [rax]
  43ade8:	enter  0x3ce,0x0
  43adec:	push   rax
  43aded:	(bad)  
  43adee:	add    al,BYTE PTR [rax]
  43adf0:	jnp    0x43ae00
  43adf2:	add    al,BYTE PTR [rax]
  43adf4:	int3   
  43adf5:	(bad)  
  43adf6:	add    eax,DWORD PTR [rax]
  43adf8:	or     BYTE PTR [rsi],0x2
  43adfb:	add    BYTE PTR [rax-0x2bfffdf2],bh
  43ae01:	(bad)  
  43ae02:	add    eax,DWORD PTR [rax]
  43ae04:	ror    BYTE PTR [rsi],0x2
  43ae07:	add    dh,al
  43ae09:	(bad)  
  43ae0a:	add    al,BYTE PTR [rax]
  43ae0c:	loopne 0x43addc
  43ae0e:	add    eax,DWORD PTR [rax]
  43ae10:	ror    BYTE PTR [rsi],1
  43ae12:	add    al,BYTE PTR [rax]
  43ae14:	sbb    al,0xf
  43ae16:	add    al,BYTE PTR [rax]
  43ae18:	in     al,0xce
  43ae1a:	add    eax,DWORD PTR [rax]
  43ae1c:	and    BYTE PTR [rdi],cl
  43ae1e:	add    al,BYTE PTR [rax]
  43ae20:	rex.RXB lar r8d,WORD PTR [r8]
  43ae24:	lock (bad) 
  43ae26:	add    eax,DWORD PTR [rax]
  43ae28:	push   rax
  43ae29:	lar    eax,WORD PTR [rax]
  43ae2c:	push   rsi
  43ae2d:	lar    eax,WORD PTR [rax]
  43ae30:	clc    
  43ae31:	(bad)  
  43ae32:	add    eax,DWORD PTR [rax]
  43ae34:	(bad)  
  43ae35:	lar    eax,WORD PTR [rax]
  43ae38:	movabs ds:0xb00003cefc00020f,al
  43ae41:	lar    eax,WORD PTR [rax]
  43ae44:	retf   0x20f
  43ae47:	add    BYTE PTR [rax],cl
  43ae49:	iret   
  43ae4a:	add    eax,DWORD PTR [rax]
  43ae4c:	ror    BYTE PTR [rdi],1
  43ae4e:	add    al,BYTE PTR [rax]
  43ae50:	adc    DWORD PTR cs:[rdx],eax
  43ae53:	add    BYTE PTR [rdi+rcx*8],cl
  43ae56:	add    eax,DWORD PTR [rax]
  43ae58:	xor    BYTE PTR [rcx],dl
  43ae5a:	add    al,BYTE PTR [rax]
  43ae5c:	sub    al,0x12
  43ae5e:	add    al,BYTE PTR [rax]
  43ae60:	adc    bh,cl
  43ae62:	add    eax,DWORD PTR [rax]
  43ae64:	xor    BYTE PTR [rdx],dl
  43ae66:	add    al,BYTE PTR [rax]
  43ae68:	rex.B adc al,0x2
  43ae6b:	add    BYTE PTR [rdi+rcx*8],bl
  43ae6e:	add    eax,DWORD PTR [rax]
  43ae70:	push   rax
  43ae71:	adc    al,0x2
  43ae73:	add    BYTE PTR [rbx],bl
  43ae75:	sbb    BYTE PTR [rdx],al
  43ae77:	add    BYTE PTR [rax],ch
  43ae79:	iret   
  43ae7a:	add    eax,DWORD PTR [rax]
  43ae7c:	and    BYTE PTR [rax],bl
  43ae7e:	add    al,BYTE PTR [rax]
  43ae80:	push   rsi
  43ae81:	sbb    DWORD PTR [rdx],eax
  43ae83:	add    BYTE PTR [rax-0x31],al
  43ae86:	add    eax,DWORD PTR [rax]
  43ae88:	(bad)  
  43ae89:	sbb    DWORD PTR [rdx],eax
  43ae8b:	add    BYTE PTR [rax+0x44000219],dh
  43ae91:	iret   
  43ae92:	add    eax,DWORD PTR [rax]
  43ae94:	mov    al,0x19
  43ae96:	add    al,BYTE PTR [rax]
  43ae98:	or     eax,0x5000021a
  43ae9d:	iret   
  43ae9e:	add    eax,DWORD PTR [rax]
  43aea0:	adc    BYTE PTR [rdx],bl
  43aea2:	add    al,BYTE PTR [rax]
  43aea4:	(bad)  
  43aea5:	sbb    al,BYTE PTR [rdx]
  43aea7:	add    BYTE PTR [rax-0x31],bl
  43aeaa:	add    eax,DWORD PTR [rax]
  43aeac:	xor    BYTE PTR [rdx],bl
  43aeae:	add    al,BYTE PTR [rax]
  43aeb0:	cmp    bl,BYTE PTR [rdx]
  43aeb2:	add    al,BYTE PTR [rax]
  43aeb4:	(bad)  
  43aeb5:	iret   
  43aeb6:	add    eax,DWORD PTR [rax]
  43aeb8:	sbb    al,BYTE PTR [rdx]
  43aebb:	add    BYTE PTR [rdi+0x1a],bh
  43aebe:	add    al,BYTE PTR [rax]
  43aec0:	fs iret 
  43aec2:	add    eax,DWORD PTR [rax]
  43aec4:	sbb    BYTE PTR [rdx],0x2
  43aec7:	add    dh,bl
  43aec9:	sbb    al,BYTE PTR [rdx]
  43aecb:	add    BYTE PTR [rdi+rcx*8+0x3],ch
  43aecf:	add    al,ah
  43aed1:	sbb    al,BYTE PTR [rdx]
  43aed3:	add    ch,dh
  43aed5:	sbb    al,BYTE PTR [rdx]
  43aed7:	add    BYTE PTR [rdi+rcx*8+0x3],dh
  43aedb:	add    BYTE PTR [rax],al
  43aedd:	sbb    eax,DWORD PTR [rdx]
  43aedf:	add    BYTE PTR [rdx],dh
  43aee1:	sbb    eax,DWORD PTR [rdx]
  43aee3:	add    BYTE PTR [rax-0x31],bh
  43aee6:	add    eax,DWORD PTR [rax]
  43aee8:	rex sbb eax,DWORD PTR [rdx]
  43aeeb:	add    BYTE PTR [rcx-0x7ffffde5],cl
  43aef1:	iret   
  43aef2:	add    eax,DWORD PTR [rax]
  43aef4:	nop
  43aef5:	sbb    eax,DWORD PTR [rdx]
  43aef7:	add    dh,al
  43aef9:	sbb    eax,DWORD PTR [rdx]
  43aefb:	add    BYTE PTR [rax-0x2ffffc31],cl
  43af01:	sbb    eax,DWORD PTR [rdx]
  43af03:	add    ch,dh
  43af05:	sbb    eax,DWORD PTR [rdx]
  43af07:	add    BYTE PTR [rax+0x3cf],dl
  43af0d:	sbb    al,0x2
  43af0f:	add    BYTE PTR [rcx],al
  43af11:	sbb    al,0x2
  43af13:	add    BYTE PTR [rax+0x100003cf],bl
  43af19:	sbb    al,0x2
  43af1b:	add    BYTE PTR [rdx-0x63fffde4],dh
  43af21:	iret   
  43af22:	add    eax,DWORD PTR [rax]
  43af24:	rcr    BYTE PTR [rdx+rax*1],0x0
  43af28:	int3   
  43af29:	(bad)  
  43af2a:	add    al,BYTE PTR [rax]
  43af2c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43af2d:	iret   
  43af2e:	add    eax,DWORD PTR [rax]
  43af30:	rcr    BYTE PTR [rdi],1
  43af32:	add    al,BYTE PTR [rax]
  43af34:	mov    esp,DWORD PTR [rcx]
  43af36:	add    al,BYTE PTR [rax]
  43af38:	mov    esp,0x900003cf
  43af3d:	and    DWORD PTR [rdx],eax
  43af3f:	add    BYTE PTR [rcx-0x2bfffddf],bh
  43af45:	iret   
  43af46:	add    eax,DWORD PTR [rax]
  43af48:	shl    BYTE PTR [rcx],0x2
  43af4b:	add    BYTE PTR [rax],bl
  43af4d:	add    al,BYTE PTR es:[rax]
  43af50:	fmul   st(7),st
  43af52:	add    eax,DWORD PTR [rax]
  43af54:	and    BYTE PTR [rsi],ah
  43af56:	add    al,BYTE PTR [rax]
  43af58:	(bad)
  43af5b:	add    ah,dh
  43af5d:	iret   
  43af5e:	add    eax,DWORD PTR [rax]
  43af60:	shr    BYTE PTR [rax],1
  43af62:	add    al,BYTE PTR [rax]
  43af64:	stc    
  43af65:	sub    BYTE PTR [rdx],al
  43af67:	add    BYTE PTR [rax+rdx*8],cl
  43af6a:	add    eax,DWORD PTR [rax]
  43af6c:	add    BYTE PTR [rcx],ch
  43af6e:	add    al,BYTE PTR [rax]
  43af70:	retf   0x22c
  43af73:	add    BYTE PTR [rax+rdx*8],dl
  43af76:	add    eax,DWORD PTR [rax]
  43af78:	shr    BYTE PTR [rdx+rax*1],1
  43af7b:	add    BYTE PTR [rsi+0x31],al
  43af7e:	add    al,BYTE PTR [rax]
  43af80:	sub    al,0xd0
  43af82:	add    eax,DWORD PTR [rax]
  43af84:	push   rax
  43af85:	xor    DWORD PTR [rdx],eax
  43af87:	add    BYTE PTR [rdx+0x31],dh
  43af8a:	add    al,BYTE PTR [rax]
  43af8c:	rex.R rol BYTE PTR [rbx],1
  43af8f:	add    BYTE PTR [rax-0x30fffdcf],al
  43af95:	xor    DWORD PTR [rdx],eax
  43af97:	add    BYTE PTR [rax-0x30],cl
  43af9a:	add    eax,DWORD PTR [rax]
  43af9c:	shl    BYTE PTR [rcx],1
  43af9e:	add    al,BYTE PTR [rax]
  43afa0:	(bad)  
  43afa1:	xor    al,BYTE PTR [rdx]
  43afa3:	add    BYTE PTR [rax+rdx*8+0x3],dl
  43afa7:	add    BYTE PTR [rax],ah
  43afa9:	xor    al,BYTE PTR [rdx]
  43afab:	add    BYTE PTR [rdx+0x32],bh
  43afae:	add    al,BYTE PTR [rax]
  43afb0:	(bad)  
  43afb1:	rol    BYTE PTR [rbx],1
  43afb3:	add    BYTE PTR [rax+0x5a000232],al
  43afb9:	xor    eax,DWORD PTR [rdx]
  43afbb:	add    BYTE PTR [rax+rdx*8+0x3],ch
  43afbf:	add    BYTE PTR [rax+0x33],ah
  43afc2:	add    al,BYTE PTR [rax]
  43afc4:	hlt    
  43afc5:	xor    al,0x2
  43afc7:	add    BYTE PTR [rax-0x30],bh
  43afca:	add    eax,DWORD PTR [rax]
  43afcc:	add    BYTE PTR [rip+0x35460002],dh        # 0x3589afd4
  43afd2:	add    al,BYTE PTR [rax]
  43afd4:	test   al,dl
  43afd6:	add    eax,DWORD PTR [rax]
  43afd8:	push   rax
  43afd9:	xor    eax,0x38e50002
  43afde:	add    al,BYTE PTR [rax]
  43afe0:	mov    eax,ss
  43afe2:	add    eax,DWORD PTR [rax]
  43afe4:	lock cmp BYTE PTR [rdx],al
  43afe7:	add    BYTE PTR [rsi],dh
  43afe9:	cmp    DWORD PTR [rdx],eax
  43afeb:	add    BYTE PTR [rax+rdx*8+0x39400003],bl
  43aff2:	add    al,BYTE PTR [rax]
  43aff4:	loopne 0x43b030
  43aff6:	add    al,BYTE PTR [rax]
  43aff8:	test   al,0xd0
  43affa:	add    eax,DWORD PTR [rax]
  43affc:	loopne 0x43b038
  43affe:	add    al,BYTE PTR [rax]
  43b000:	push   rsi
  43b001:	cmp    eax,DWORD PTR [rdx]
  43b003:	add    BYTE PTR [rax+rdx*8+0x3b600003],bh
  43b00a:	add    al,BYTE PTR [rax]
  43b00c:	scas   eax,DWORD PTR es:[rdi]
  43b00d:	cmp    eax,DWORD PTR [rdx]
  43b00f:	add    al,cl
  43b011:	rol    BYTE PTR [rbx],1
  43b013:	add    BYTE PTR [rax+0x1600023b],dh
  43b019:	cmp    al,0x2
  43b01b:	add    al,dl
  43b01d:	rol    BYTE PTR [rbx],1
  43b01f:	add    BYTE PTR [rax],ah
  43b021:	cmp    al,0x2
  43b023:	add    BYTE PTR [rdi],bh
  43b025:	cmp    al,0x2
  43b027:	add    al,bl
  43b029:	rol    BYTE PTR [rbx],1
  43b02b:	add    BYTE PTR [rax+0x3c],al
  43b02e:	add    al,BYTE PTR [rax]
  43b030:	repnz cmp al,0x2
  43b033:	add    ah,bl
  43b035:	rol    BYTE PTR [rbx],1
  43b037:	add    BYTE PTR [rax],al
  43b039:	cmp    eax,0x3f940002
  43b03e:	add    al,BYTE PTR [rax]
  43b040:	in     al,0xd0
  43b042:	add    eax,DWORD PTR [rax]
  43b044:	movabs al,ds:0xfc000240ad00023f
  43b04d:	rol    BYTE PTR [rbx],1
  43b04f:	add    BYTE PTR [rax+0x18000240],dh
  43b055:	rex.XB add al,BYTE PTR [r8]
  43b058:	or     al,0xd1
  43b05a:	add    eax,DWORD PTR [rax]
  43b05c:	and    BYTE PTR [rbx+0x2],al
  43b05f:	add    bl,ah
  43b061:	add    r8b,BYTE PTR [r8]
  43b064:	sbb    al,0xd1
  43b066:	add    eax,DWORD PTR [rax]
  43b068:	lock add r8b,BYTE PTR [r8]
  43b06c:	push   0x30000247
  43b071:	rol    DWORD PTR [rbx],1
  43b073:	add    BYTE PTR [rax+0x47],dh
  43b076:	add    al,BYTE PTR [rax]
  43b078:	iret   
  43b079:	rex.W add al,BYTE PTR [rax]
  43b07c:	rex rol DWORD PTR [rbx],1
  43b07f:	add    al,dl
  43b081:	rex.W add al,BYTE PTR [rax]
  43b084:	xchg   BYTE PTR [rcx+0x2],cl
  43b087:	add    BYTE PTR [rax-0x2f],dl
  43b08a:	add    eax,DWORD PTR [rax]
  43b08c:	nop
  43b08d:	rex.WB add al,BYTE PTR [r8]
  43b090:	(bad)  
  43b091:	rex.WB add al,BYTE PTR [r8]
  43b094:	pop    rsp
  43b095:	rol    DWORD PTR [rbx],1
  43b097:	add    al,ah
  43b099:	rex.WB add al,BYTE PTR [r8]
  43b09c:	or     eax,0x6800024a
  43b0a1:	rol    DWORD PTR [rbx],1
  43b0a3:	add    BYTE PTR [rax],dl
  43b0a5:	rex.WX add al,BYTE PTR [rax]
  43b0a8:	(bad)  
  43b0a9:	rex.WXB add al,BYTE PTR [r8]
  43b0ac:	je     0x43b07f
  43b0ae:	add    eax,DWORD PTR [rax]
  43b0b0:	adc    BYTE PTR [rbx+0x2],cl
  43b0b3:	add    BYTE PTR [rbx+rcx*2+0x2],al
  43b0b7:	add    BYTE PTR [rax+0x500003d1],al
  43b0bd:	rex.WXB add al,BYTE PTR [r8]
  43b0c0:	add    ecx,DWORD PTR [rdx+rax*1+0x0]
  43b0c4:	mov    ecx,ss
  43b0c6:	add    eax,DWORD PTR [rax]
  43b0c8:	adc    BYTE PTR [rdx+rax*1+0x0],cl
  43b0cc:	push   rbx
  43b0cd:	rex.WRXB add r8b,BYTE PTR [r8]
  43b0d0:	cwde   
  43b0d1:	rol    DWORD PTR [rbx],1
  43b0d3:	add    BYTE PTR [rax+0x4f],ah
  43b0d6:	add    al,BYTE PTR [rax]
  43b0d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43b0d9:	rex.WRXB add r8b,BYTE PTR [r8]
  43b0dc:	mov    al,0xd1
  43b0de:	add    eax,DWORD PTR [rax]
  43b0e0:	mov    al,0x4f
  43b0e2:	add    al,BYTE PTR [rax]
  43b0e4:	ret    
  43b0e5:	rex.WRXB add r8b,BYTE PTR [r8]
  43b0e8:	mov    esp,0xd00003d1
  43b0ed:	rex.WRXB add r8b,BYTE PTR [r8]
  43b0f0:	push   r8
  43b0f2:	add    al,BYTE PTR [rax]
  43b0f4:	rcl    cl,0x3
  43b0f7:	add    BYTE PTR [rax+0x50],dl
  43b0fa:	add    al,BYTE PTR [rax]
  43b0fc:	movsxd edx,DWORD PTR [rax+0x2]
  43b0ff:	add    ah,cl
  43b101:	rol    DWORD PTR [rbx],1
  43b103:	add    BYTE PTR [rax+0x50],dh
  43b106:	add    al,BYTE PTR [rax]
  43b108:	adc    DWORD PTR [rax+0x2],0x0
  43b10c:	rcl    cl,1
  43b10e:	add    eax,DWORD PTR [rax]
  43b110:	nop
  43b111:	push   rax
  43b112:	add    al,BYTE PTR [rax]
  43b114:	(bad)  
  43b115:	push   rcx
  43b116:	add    al,BYTE PTR [rax]
  43b118:	(bad)  
  43b119:	rol    DWORD PTR [rbx],1
  43b11b:	add    BYTE PTR [rax],ah
  43b11d:	push   rcx
  43b11e:	add    al,BYTE PTR [rax]
  43b120:	rex push rcx
  43b122:	add    al,BYTE PTR [rax]
  43b124:	(bad)  
  43b126:	add    eax,DWORD PTR [rax]
  43b128:	rex push rcx
  43b12a:	add    al,BYTE PTR [rax]
  43b12c:	adc    BYTE PTR [rcx+0x2],0x0
  43b130:	in     al,0xd1
  43b132:	add    eax,DWORD PTR [rax]
  43b134:	adc    BYTE PTR [rcx+0x2],0x0
  43b138:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  43b139:	push   rdx
  43b13a:	add    al,BYTE PTR [rax]
  43b13c:	lock rol DWORD PTR [rbx],1
  43b13f:	add    BYTE PTR [rax-0x2dfffdae],dh
  43b145:	push   rsi
  43b146:	add    al,BYTE PTR [rax]
  43b148:	or     al,0xd2
  43b14a:	add    eax,DWORD PTR [rax]
  43b14c:	loopne 0x43b1a4
  43b14e:	add    al,BYTE PTR [rax]
  43b150:	xchg   edi,eax
  43b151:	pop    rax
  43b152:	add    al,BYTE PTR [rax]
  43b154:	and    al,0xd2
  43b156:	add    eax,DWORD PTR [rax]
  43b158:	movabs al,ds:0x30000258b9000258
  43b161:	rol    BYTE PTR [rbx],cl
  43b163:	add    al,al
  43b165:	pop    rax
  43b166:	add    al,BYTE PTR [rax]
  43b168:	add    al,0x59
  43b16a:	add    al,BYTE PTR [rax]
  43b16c:	xor    al,0xd2
  43b16e:	add    eax,DWORD PTR [rax]
  43b170:	adc    BYTE PTR [rcx+0x2],bl
  43b173:	add    BYTE PTR [rbp+0x59],bl
  43b176:	add    al,BYTE PTR [rax]
  43b178:	cmp    al,0xd2
  43b17a:	add    eax,DWORD PTR [rax]
  43b17c:	(bad)  
  43b17d:	pop    rcx
  43b17e:	add    al,BYTE PTR [rax]
  43b180:	xor    bl,BYTE PTR [rbx+0x2]
  43b183:	add    BYTE PTR [rdx+rdx*8+0x3],al
  43b187:	add    BYTE PTR [rax+0x5b],al
  43b18a:	add    al,BYTE PTR [rax]
  43b18c:	neg    BYTE PTR [rdi+0x2]
  43b18f:	add    BYTE PTR [rax-0x2e],bl
  43b192:	add    eax,DWORD PTR [rax]
  43b194:	add    BYTE PTR [rax+0x2],ah
  43b197:	add    BYTE PTR [rbx+0x60],dh
  43b19a:	add    al,BYTE PTR [rax]
  43b19c:	jo     0x43b170
  43b19e:	add    eax,DWORD PTR [rax]
  43b1a0:	and    BYTE PTR [rax+0x2],0x0
  43b1a4:	add    BYTE PTR [rcx+0x2],ah
  43b1a7:	add    BYTE PTR [rdx+rdx*8+0x3],bh
  43b1ab:	add    BYTE PTR [rax],al
  43b1ad:	(bad)  
  43b1ae:	add    al,BYTE PTR [rax]
  43b1b0:	xor    ah,BYTE PTR [rbp+0x2]
  43b1b3:	add    BYTE PTR [rdx+rdx*8+0x65400003],al
  43b1ba:	add    al,BYTE PTR [rax]
  43b1bc:	in     eax,0x65
  43b1be:	add    al,BYTE PTR [rax]
  43b1c0:	pushf  
  43b1c1:	rol    BYTE PTR [rbx],cl
  43b1c3:	add    al,dh
  43b1c5:	add    al,BYTE PTR gs:[rax]
  43b1c8:	cdq    
  43b1c9:	add    al,BYTE PTR [eax]
  43b1cc:	lods   al,BYTE PTR ds:[rsi]
  43b1cd:	rol    BYTE PTR [rbx],cl
  43b1cf:	add    BYTE PTR [rax+0x4c000267],ah
  43b1d5:	imul   eax,DWORD PTR [rdx],0x3d2c000
  43b1db:	add    BYTE PTR [rax+0x69],dl
  43b1de:	add    al,BYTE PTR [rax]
  43b1e0:	sti    
  43b1e1:	push   0x2
  43b1e3:	add    al,dl
  43b1e5:	rol    BYTE PTR [rbx],cl
  43b1e7:	add    BYTE PTR [rax],al
  43b1e9:	imul   eax,DWORD PTR [rdx],0x0
  43b1ec:	(bad)  
  43b1ed:	ins    BYTE PTR es:[rdi],dx
  43b1ee:	add    al,BYTE PTR [rax]
  43b1f0:	loopne 0x43b1c4
  43b1f2:	add    eax,DWORD PTR [rax]
  43b1f4:	and    BYTE PTR [rdx+rax*1+0x0],ch
  43b1f8:	sub    DWORD PTR [rdx+rax*1+0x0],0x3d2f0
  43b200:	lock outs dx,BYTE PTR ds:[rsi]
  43b202:	add    al,BYTE PTR [rax]
  43b204:	xchg   edi,eax
  43b205:	outs   dx,DWORD PTR ds:[rsi]
  43b206:	add    al,BYTE PTR [rax]
  43b208:	add    bl,dl
  43b20a:	add    eax,DWORD PTR [rax]
  43b20c:	movabs al,ds:0x800026fb900026f
  43b215:	rol    DWORD PTR [rbx],cl
  43b217:	add    al,al
  43b219:	outs   dx,DWORD PTR ds:[rsi]
  43b21a:	add    al,BYTE PTR [rax]
  43b21c:	cmc    
  43b21d:	outs   dx,DWORD PTR ds:[rsi]
  43b21e:	add    al,BYTE PTR [rax]
  43b220:	adc    bl,dl
  43b222:	add    eax,DWORD PTR [rax]
  43b224:	add    BYTE PTR [rax+0x2],dh
  43b227:	add    BYTE PTR [rbp+0x70],dl
  43b22a:	add    al,BYTE PTR [rax]
  43b22c:	sbb    bl,dl
  43b22e:	add    eax,DWORD PTR [rax]
  43b230:	(bad)  
  43b231:	jo     0x43b235
  43b233:	add    BYTE PTR [rax+rsi*2+0x2],bh
  43b237:	add    BYTE PTR [rbx+rdx*8],ah
  43b23a:	add    eax,DWORD PTR [rax]
  43b23c:	xor    BYTE PTR [rax+0x2],0x0
  43b240:	mov    dh,BYTE PTR [rax+0x2]
  43b243:	add    BYTE PTR [rax],ch
  43b245:	rol    DWORD PTR [rbx],cl
  43b247:	add    BYTE PTR [rax-0x6cfffd90],dl
  43b24d:	jo     0x43b251
  43b24f:	add    BYTE PTR [rbx+rdx*8],ch
  43b252:	add    eax,DWORD PTR [rax]
  43b254:	movabs al,ds:0x3000027176000270
  43b25d:	rol    DWORD PTR [rbx],cl
  43b25f:	add    BYTE PTR [rax+0x7b000271],al
  43b265:	jb     0x43b269
  43b267:	add    BYTE PTR [rax-0x2d],al
  43b26a:	add    eax,DWORD PTR [rax]
  43b26c:	xor    BYTE PTR [rdx+0x2],0x0
  43b270:	scas   eax,DWORD PTR es:[rdi]
  43b271:	jb     0x43b275
  43b273:	add    BYTE PTR [rax-0x2d],dl
  43b276:	add    eax,DWORD PTR [rax]
  43b278:	mov    al,0x72
  43b27a:	add    al,BYTE PTR [rax]
  43b27c:	sbb    DWORD PTR [rbx+0x2],esi
  43b27f:	add    BYTE PTR [rax-0x2d],bl
  43b282:	add    eax,DWORD PTR [rax]
  43b284:	and    BYTE PTR [rbx+0x2],dh
  43b287:	add    BYTE PTR [rbx],ah
  43b289:	jae    0x43b28d
  43b28b:	add    BYTE PTR [rbx+rdx*8+0x3],ah
  43b28f:	add    BYTE PTR [rax],dh
  43b291:	jae    0x43b295
  43b293:	add    BYTE PTR [rcx+0x73],dh
  43b296:	add    al,BYTE PTR [rax]
  43b298:	push   0xffffffff800003d3
  43b29d:	jae    0x43b2a1
  43b29f:	add    BYTE PTR [rbx+rsi*2-0x2c8ffffe],cl
  43b2a6:	add    eax,DWORD PTR [rax]
  43b2a8:	nop
  43b2a9:	jae    0x43b2ad
  43b2ab:	add    BYTE PTR [rsp+rsi*2-0x2c8bfffe],cl
  43b2b2:	add    eax,DWORD PTR [rax]
  43b2b4:	nop
  43b2b5:	je     0x43b2b9
  43b2b7:	add    BYTE PTR [rbx-0x73fffd8c],dl
  43b2bd:	rol    DWORD PTR [rbx],cl
  43b2bf:	add    BYTE PTR [rax-0x5bfffd8c],ah
  43b2c5:	je     0x43b2c9
  43b2c7:	add    BYTE PTR [rax-0x4ffffc2d],dl
  43b2cd:	je     0x43b2d1
  43b2cf:	add    BYTE PTR [rsp+rsi*2-0x2c6bfffe],dh
  43b2d6:	add    eax,DWORD PTR [rax]
  43b2d8:	shl    BYTE PTR [rdx+rax*1+0x0],0x21
  43b2dd:	jne    0x43b2e1
  43b2df:	add    BYTE PTR [rax+0x300003d3],bl
  43b2e5:	jne    0x43b2e9
  43b2e7:	add    BYTE PTR [rdx-0x5bfffd8a],dl
  43b2ed:	rol    DWORD PTR [rbx],cl
  43b2ef:	add    BYTE PTR [rax-0x66fffd8a],ah
  43b2f5:	jns    0x43b2f9
  43b2f7:	add    BYTE PTR [rax-0x5ffffc2d],bh
  43b2fd:	jns    0x43b301
  43b2ff:	add    BYTE PTR [rsi+0x7b],al
  43b302:	add    al,BYTE PTR [rax]
  43b304:	rcl    bl,1
  43b306:	add    eax,DWORD PTR [rax]
  43b308:	push   rax
  43b309:	jnp    0x43b30d
  43b30b:	add    BYTE PTR [rsp+rdi*2],bh
  43b30e:	add    al,BYTE PTR [rax]
  43b310:	fcom   st(3)
  43b312:	add    eax,DWORD PTR [rax]
  43b314:	rex jl 0x43b319
  43b317:	add    al,bh
  43b319:	jge    0x43b31d
  43b31b:	add    al,ch
  43b31d:	rol    DWORD PTR [rbx],cl
  43b31f:	add    BYTE PTR [rax],al
  43b321:	jle    0x43b325
  43b323:	add    BYTE PTR [rbp+0x7e],ch
  43b326:	add    al,BYTE PTR [rax]
  43b328:	lock rol DWORD PTR [rbx],cl
  43b32b:	add    BYTE PTR [rax+0x7e],dh
  43b32e:	add    al,BYTE PTR [rax]
  43b330:	out    dx,eax
  43b331:	jle    0x43b335
  43b333:	add    BYTE PTR [rax],al
  43b335:	(bad)  
  43b336:	add    eax,DWORD PTR [rax]
  43b338:	lock jle 0x43b33d
  43b33b:	add    BYTE PTR [rdi+0xc00027f],cl
  43b341:	(bad)  
  43b342:	add    eax,DWORD PTR [rax]
  43b344:	nop
  43b345:	jg     0x43b349
  43b347:	add    BYTE PTR [rdx-0x80],ch
  43b34a:	add    al,BYTE PTR [rax]
  43b34c:	adc    al,0xd4
  43b34e:	add    eax,DWORD PTR [rax]
  43b350:	jo     0x43b2d2
  43b352:	add    al,BYTE PTR [rax]
  43b354:	pop    QWORD PTR [rax-0x2be3fffe]
  43b35a:	add    eax,DWORD PTR [rax]
  43b35c:	nop
  43b35d:	add    BYTE PTR [rdx],0x0
  43b360:	movabs ds:0xb00003d420000280,al
  43b369:	add    BYTE PTR [rdx],0x0
  43b36c:	cmc    
  43b36d:	add    BYTE PTR [rdx],0x0
  43b370:	and    al,0xd4
  43b372:	add    eax,DWORD PTR [rax]
  43b374:	add    BYTE PTR [rcx-0x7e61fffe],al
  43b37a:	add    al,BYTE PTR [rax]
  43b37c:	sub    ah,dl
  43b37e:	add    eax,DWORD PTR [rax]
  43b380:	movabs al,ds:0x34000281e3000281
  43b389:	(bad)  
  43b38a:	add    eax,DWORD PTR [rax]
  43b38c:	lock add DWORD PTR [rdx],0x2822b00
  43b393:	add    BYTE PTR [rax-0x2c],al
  43b396:	add    eax,DWORD PTR [rax]
  43b398:	xor    BYTE PTR [rdx-0x7d41fffe],al
  43b39e:	add    al,BYTE PTR [rax]
  43b3a0:	rex.W (bad) 
  43b3a2:	add    eax,DWORD PTR [rax]
  43b3a4:	rol    BYTE PTR [rdx-0x7d07fffe],0x2
  43b3ab:	add    BYTE PTR [rsp+rdx*8+0x3],dl
  43b3af:	add    BYTE PTR [rax],al
  43b3b1:	add    DWORD PTR [rdx],0x0
  43b3b4:	push   rbp
  43b3b5:	add    DWORD PTR [rdx],0x0
  43b3b8:	(bad)  
  43b3b9:	(bad)  
  43b3ba:	add    eax,DWORD PTR [rax]
  43b3bc:	(bad)  
  43b3bd:	add    DWORD PTR [rdx],0x0
  43b3c0:	(bad)  
  43b3c1:	test   BYTE PTR [rdx],al
  43b3c3:	add    BYTE PTR [rsp+rdx*8+0x3],ch
  43b3c7:	add    BYTE PTR [rax-0x7c],dl
  43b3ca:	add    al,BYTE PTR [rax]
  43b3cc:	cli    
  43b3cd:	test   BYTE PTR [rdx],al
  43b3cf:	add    BYTE PTR [rsp+rdx*8+0x3],bh
  43b3d3:	add    BYTE PTR [rax],al
  43b3d5:	test   DWORD PTR [rdx],eax
  43b3d7:	add    BYTE PTR [rax-0x73fffd7b],al
  43b3dd:	(bad)  
  43b3de:	add    eax,DWORD PTR [rax]
  43b3e0:	add    BYTE PTR [rbp-0x76c9fffe],0x2
  43b3e7:	add    BYTE PTR [rax+0x400003d4],bl
  43b3ed:	mov    DWORD PTR [rdx],eax
  43b3ef:	add    BYTE PTR [rip+0xffffffffb0000290],ah        # 0xffffffffb043b685
  43b3f5:	(bad)  
  43b3f6:	add    eax,DWORD PTR [rax]
  43b3f8:	xor    BYTE PTR [rax-0x6fadfffe],dl
  43b3fe:	add    al,BYTE PTR [rax]
  43b400:	enter  0x3d4,0x0
  43b404:	(bad)  
  43b405:	nop
  43b406:	add    al,BYTE PTR [rax]
  43b408:	adc    BYTE PTR [rax-0x2b2ffffe],0x3
  43b40f:	add    BYTE PTR [rax-0x5ffffd70],al
  43b415:	nop
  43b416:	add    al,BYTE PTR [rax]
  43b418:	fcom   st(4)
  43b41a:	add    eax,DWORD PTR [rax]
  43b41c:	movabs al,ds:0xe0000291d3000290
  43b425:	(bad)  
  43b426:	add    eax,DWORD PTR [rax]
  43b428:	loopne 0x43b3bb
  43b42a:	add    al,BYTE PTR [rax]
  43b42c:	movabs al,ds:0xa00003d4f4000292
  43b435:	xchg   edx,eax
  43b436:	add    al,BYTE PTR [rax]
  43b438:	xor    BYTE PTR [rbx-0x2afbfffe],dl
  43b43e:	add    eax,DWORD PTR [rax]
  43b440:	xor    BYTE PTR [rbx-0x6c48fffe],dl
  43b446:	add    al,BYTE PTR [rax]
  43b448:	or     al,0xd5
  43b44a:	add    eax,DWORD PTR [rax]
  43b44c:	rcl    BYTE PTR [rbx-0x6bc8fffe],0x2
  43b453:	add    BYTE PTR [rdx*8-0x695ffffd],bl
  43b45a:	add    al,BYTE PTR [rax]
  43b45c:	test   al,0x96
  43b45e:	add    al,BYTE PTR [rax]
  43b460:	sub    al,0xd5
  43b462:	add    eax,DWORD PTR [rax]
  43b464:	mov    al,0x96
  43b466:	add    al,BYTE PTR [rax]
  43b468:	mov    ebx,0x30000296
  43b46d:	(bad)  
  43b46e:	add    eax,DWORD PTR [rax]
  43b470:	adc    BYTE PTR [rax-0x5229fffe],bl
  43b476:	add    al,BYTE PTR [rax]
  43b478:	mov    eax,0xe00003c0
  43b47d:	lods   eax,DWORD PTR ds:[rsi]
  43b47e:	add    al,BYTE PTR [rax]
  43b480:	lock lods eax,DWORD PTR ds:[rsi]
  43b482:	add    al,BYTE PTR [rax]
  43b484:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43b485:	rol    BYTE PTR [rbx],1
  43b487:	add    al,dh
  43b489:	lods   eax,DWORD PTR ds:[rsi]
  43b48a:	add    al,BYTE PTR [rax]
  43b48c:	cmc    
  43b48d:	lods   eax,DWORD PTR ds:[rsi]
  43b48e:	add    al,BYTE PTR [rax]
  43b490:	sub    al,0xd1
  43b492:	add    eax,DWORD PTR [rax]

Disassembly of section .xdata:

000000000043c000 <.xdata>:
  43c000:	add    DWORD PTR [rax],eax
  43c002:	add    BYTE PTR [rax],al
  43c004:	add    DWORD PTR [rcx+rax*1],eax
  43c007:	add    BYTE PTR [rdx+rax*2],al
  43c00a:	add    BYTE PTR [rax],al
  43c00c:	add    DWORD PTR [rcx+rax*1],eax
  43c00f:	add    BYTE PTR [rdx+riz*2],al
  43c012:	add    BYTE PTR [rax],al
  43c014:	add    DWORD PTR [rdi],ecx
  43c016:	or     BYTE PTR [rax],al
  43c018:	lgdt   [rbx]
  43c01b:	add    BYTE PTR [rax],cl
  43c01d:	xor    BYTE PTR [rdi],al
  43c01f:	(bad)  
  43c020:	(bad)  
  43c021:	jo     0x43c028
  43c023:	push   rax
  43c024:	add    al,0xc0
  43c026:	add    dl,al
  43c028:	or     DWORD PTR [rcx+rax*1],eax
  43c02b:	add    BYTE PTR [rdx+rax*2],al
  43c02e:	add    BYTE PTR [rax],al
  43c030:	cwde   
  43c031:	xchg   esi,eax
  43c032:	add    al,BYTE PTR [rax]
  43c034:	add    DWORD PTR [rax],eax
  43c036:	add    BYTE PTR [rax],al
  43c038:	(bad)  
  43c039:	adc    al,0x0
  43c03b:	add    ah,ch
  43c03d:	adc    al,0x0
  43c03f:	add    BYTE PTR [rax+0x7c],al
  43c042:	add    al,BYTE PTR [rax]
  43c044:	in     al,dx
  43c045:	adc    al,0x0
  43c047:	add    BYTE PTR [rcx],cl
  43c049:	add    al,0x1
  43c04b:	add    BYTE PTR [rdx+rax*2],al
  43c04e:	add    BYTE PTR [rax],al
  43c050:	cwde   
  43c051:	xchg   esi,eax
  43c052:	add    al,BYTE PTR [rax]
  43c054:	add    DWORD PTR [rax],eax
  43c056:	add    BYTE PTR [rax],al
  43c058:	add    al,0x15
  43c05a:	add    BYTE PTR [rax],al
  43c05c:	sbb    al,0x15
  43c05e:	add    BYTE PTR [rax],al
  43c060:	rex jl 0x43c065
  43c063:	add    BYTE PTR [rdx*1+0x10000],bl
  43c06a:	add    BYTE PTR [rax],al
  43c06c:	add    DWORD PTR [rdi+rax*1],ecx
  43c06f:	add    BYTE PTR [rdx+riz*2],cl
  43c072:	or     BYTE PTR [rax],dh
  43c074:	(bad)  
  43c075:	(bad)  
  43c076:	(bad)  
  43c077:	jo     0x43c07e
  43c079:	push   rax
  43c07a:	add    al,0xc0
  43c07c:	add    dl,al
  43c07e:	add    BYTE PTR [rax],al
  43c080:	add    DWORD PTR [rdx],ecx
  43c082:	(bad)  
  43c083:	add    BYTE PTR [rdx],cl
  43c085:	push   rdx
  43c086:	(bad)  
  43c087:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3c4ed
  43c08d:	push   rax
  43c08e:	add    al,al
  43c090:	add    DWORD PTR [rdx],ecx
  43c092:	(bad)  
  43c093:	add    BYTE PTR [rdx],cl
  43c095:	xor    al,BYTE PTR [rsi]
  43c097:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3c4fd
  43c09d:	push   rax
  43c09e:	add    al,al
  43c0a0:	add    DWORD PTR [rbx],edx
  43c0a2:	or     al,BYTE PTR [rax]
  43c0a4:	adc    eax,DWORD PTR [rcx]
  43c0a6:	xchg   DWORD PTR [rax],eax
  43c0a8:	or     al,0x30
  43c0aa:	or     esp,DWORD PTR [rax+0xa]
  43c0ad:	jo     0x43c0b8
  43c0af:	push   rax
  43c0b0:	or     al,al
  43c0b2:	(bad)  
  43c0b3:	rol    BYTE PTR [rax+riz*8],1
  43c0b6:	add    dh,al
  43c0b8:	add    DWORD PTR [rbx],edx
  43c0ba:	or     al,BYTE PTR [rax]
  43c0bc:	adc    eax,DWORD PTR [rcx]
  43c0be:	pop    rbp
  43c0bf:	add    BYTE PTR [rax+rsi*1],cl
  43c0c2:	or     esp,DWORD PTR [rax+0xa]
  43c0c5:	jo     0x43c0d0
  43c0c7:	push   rax
  43c0c8:	or     al,al
  43c0ca:	(bad)  
  43c0cb:	rol    BYTE PTR [rax+riz*8],1
  43c0ce:	add    dh,al
  43c0d0:	add    DWORD PTR [rcx+rax*1],eax
  43c0d3:	add    BYTE PTR [rdx+rax*2],al
  43c0d6:	add    BYTE PTR [rax],al
  43c0d8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248c0e0
  43c0de:	add    DWORD PTR [rax],esi
  43c0e0:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248c0e8
  43c0e6:	add    DWORD PTR [rax],esi
  43c0e8:	add    DWORD PTR [rdx],ecx
  43c0ea:	(bad)  
  43c0eb:	add    BYTE PTR [rdx],cl
  43c0ed:	xor    al,BYTE PTR [rsi]
  43c0ef:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3c555
  43c0f5:	push   rax
  43c0f6:	add    al,al
  43c0f8:	add    DWORD PTR [rax],ecx
  43c0fa:	add    eax,DWORD PTR [rax]
  43c0fc:	or     BYTE PTR [rcx],al
  43c0fe:	cmp    al,0x0
  43c100:	add    DWORD PTR [rax],esi
  43c102:	add    BYTE PTR [rax],al
  43c104:	add    DWORD PTR [rdi+rax*1],ecx
  43c107:	add    BYTE PTR [rdx+rax*4],cl
  43c10a:	or     BYTE PTR [rax],dh
  43c10c:	(bad)  
  43c10d:	(bad)  
  43c10e:	(bad)  
  43c10f:	jo     0x43c116
  43c111:	push   rax
  43c112:	add    al,0xc0
  43c114:	add    dl,al
  43c116:	add    BYTE PTR [rax],al
  43c118:	add    DWORD PTR [rsi],eax
  43c11a:	add    eax,DWORD PTR [rax]
  43c11c:	(bad)  
  43c11d:	rex.X add sil,BYTE PTR [rax]
  43c120:	add    DWORD PTR [rax+0x0],esp
  43c123:	add    BYTE PTR [rcx],al
  43c125:	(bad)  
  43c126:	add    eax,DWORD PTR [rax]
  43c128:	(bad)  
  43c129:	rex.X add sil,BYTE PTR [rax]
  43c12c:	add    DWORD PTR [rax+0x0],esp
  43c12f:	add    BYTE PTR [rcx],al
  43c131:	add    BYTE PTR [rax],al
  43c133:	add    BYTE PTR [rcx],al
  43c135:	add    BYTE PTR [rax],al
  43c137:	add    BYTE PTR [rcx],al
  43c139:	or     al,BYTE PTR [rsi]
  43c13b:	add    BYTE PTR [rdx],cl
  43c13d:	xor    al,BYTE PTR [rsi]
  43c13f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3c5a5
  43c145:	push   rax
  43c146:	add    al,al
  43c148:	add    DWORD PTR [rax],eax
  43c14a:	add    BYTE PTR [rax],al
  43c14c:	add    DWORD PTR [rsi],eax
  43c14e:	add    eax,DWORD PTR [rax]
  43c150:	(bad)  
  43c151:	rex.X add sil,BYTE PTR [rax]
  43c154:	add    DWORD PTR [rax+0x0],esp
  43c157:	add    BYTE PTR [rcx],al
  43c159:	or     eax,0x10d0007
  43c15e:	(bad)  
  43c15f:	add    BYTE PTR [rsi],al
  43c161:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3c5c7
  43c167:	push   rax
  43c168:	add    al,al
  43c16a:	add    BYTE PTR [rax],al
  43c16c:	add    DWORD PTR [rsi],eax
  43c16e:	add    eax,DWORD PTR [rax]
  43c170:	(bad)  
  43c171:	(bad)  
  43c173:	xor    BYTE PTR [rcx],al
  43c175:	(bad)  
  43c176:	add    BYTE PTR [rax],al
  43c178:	add    DWORD PTR [rsi],eax
  43c17a:	add    eax,DWORD PTR [rax]
  43c17c:	(bad)  
  43c17d:	rex.X add sil,BYTE PTR [rax]
  43c180:	add    DWORD PTR [rax+0x0],esp
  43c183:	add    BYTE PTR [rcx],al
  43c185:	or     BYTE PTR [rip+0x4420800],al        # 0x485c98b
  43c18b:	xor    BYTE PTR [rbx],al
  43c18d:	(bad)  
  43c18e:	add    dh,BYTE PTR [rax+0x1]
  43c191:	push   rax
  43c192:	add    BYTE PTR [rax],al
  43c194:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248c19c
  43c19a:	add    DWORD PTR [rax],esi
  43c19c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248c1a4
  43c1a2:	add    DWORD PTR [rax],esi
  43c1a4:	add    DWORD PTR [rdi],eax
  43c1a6:	add    al,0x0
  43c1a8:	(bad)  
  43c1a9:	xor    al,BYTE PTR [rbx]
  43c1ab:	xor    BYTE PTR [rdx],al
  43c1ad:	(bad)  
  43c1ae:	add    DWORD PTR [rax+0x1],esi
  43c1b1:	add    eax,0x32050002
  43c1b6:	add    DWORD PTR [rax],esi
  43c1b8:	add    DWORD PTR [rsi],eax
  43c1ba:	add    eax,DWORD PTR [rax]
  43c1bc:	(bad)  
  43c1bd:	rex.X add sil,BYTE PTR [rax]
  43c1c0:	add    DWORD PTR [rax+0x0],esp
  43c1c3:	add    BYTE PTR [rcx],al
  43c1c5:	add    eax,0x32050002
  43c1ca:	add    DWORD PTR [rax],esi
  43c1cc:	add    DWORD PTR [rcx+rax*1],eax
  43c1cf:	add    BYTE PTR [rdx+riz*2],al
  43c1d2:	add    BYTE PTR [rax],al
  43c1d4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248c1dc
  43c1da:	add    DWORD PTR [rax],esi
  43c1dc:	add    DWORD PTR [rax],eax
  43c1de:	add    BYTE PTR [rax],al
  43c1e0:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248c1e8
  43c1e6:	add    DWORD PTR [rax],esi
  43c1e8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248c1f0
  43c1ee:	add    DWORD PTR [rax],esi
  43c1f0:	add    DWORD PTR [rax],ecx
  43c1f2:	add    eax,0x4420800
  43c1f7:	xor    BYTE PTR [rbx],al
  43c1f9:	(bad)  
  43c1fa:	add    dh,BYTE PTR [rax+0x1]
  43c1fd:	push   rax
  43c1fe:	add    BYTE PTR [rax],al
  43c200:	add    DWORD PTR [rdx],ecx
  43c202:	(bad)  
  43c203:	add    BYTE PTR [rdx],cl
  43c205:	xor    al,BYTE PTR [rsi]
  43c207:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3c66d
  43c20d:	push   rax
  43c20e:	add    al,al
  43c210:	add    DWORD PTR [rax],eax
  43c212:	add    BYTE PTR [rax],al
  43c214:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248c21c
  43c21a:	add    DWORD PTR [rax],esi
  43c21c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248c224
  43c222:	add    DWORD PTR [rax],esi
  43c224:	add    DWORD PTR [rsi],eax
  43c226:	add    eax,DWORD PTR [rax]
  43c228:	(bad)  
  43c229:	rex.X add sil,BYTE PTR [rax]
  43c22c:	add    DWORD PTR [rax+0x0],esp
  43c22f:	add    BYTE PTR [rcx],al
  43c231:	or     BYTE PTR [rip+0x4420800],al        # 0x485ca37
  43c237:	xor    BYTE PTR [rbx],al
  43c239:	(bad)  
  43c23a:	add    dh,BYTE PTR [rax+0x1]
  43c23d:	push   rax
  43c23e:	add    BYTE PTR [rax],al
  43c240:	add    DWORD PTR [rsi],eax
  43c242:	add    eax,DWORD PTR [rax]
  43c244:	(bad)  
  43c245:	rex.X add sil,BYTE PTR [rax]
  43c248:	add    DWORD PTR [rax+0x0],esp
  43c24b:	add    BYTE PTR [rcx],al
  43c24d:	or     al,0x7
  43c24f:	add    BYTE PTR [rdx+riz*2],cl
  43c252:	or     BYTE PTR [rax],dh
  43c254:	(bad)  
  43c255:	(bad)  
  43c256:	(bad)  
  43c257:	jo     0x43c25e
  43c259:	push   rax
  43c25a:	add    al,0xc0
  43c25c:	add    dl,al
  43c25e:	add    BYTE PTR [rax],al
  43c260:	add    DWORD PTR [rsi],eax
  43c262:	add    eax,DWORD PTR [rax]
  43c264:	(bad)  
  43c265:	rex.X add sil,BYTE PTR [rax]
  43c268:	add    DWORD PTR [rax+0x0],esp
  43c26b:	add    BYTE PTR [rcx],al
  43c26d:	(bad)  
  43c26e:	add    eax,DWORD PTR [rax]
  43c270:	(bad)  
  43c271:	rex.X add sil,BYTE PTR [rax]
  43c274:	add    DWORD PTR [rax+0x0],esp
  43c277:	add    BYTE PTR [rcx],al
  43c279:	(bad)  
  43c27a:	add    al,0x0
  43c27c:	(bad)  
  43c27d:	xor    al,BYTE PTR [rbx]
  43c27f:	xor    BYTE PTR [rdx],al
  43c281:	(bad)  
  43c282:	add    DWORD PTR [rax+0x1],esi
  43c285:	(bad)  
  43c286:	add    eax,DWORD PTR [rax]
  43c288:	(bad)  
  43c289:	rex.X add sil,BYTE PTR [rax]
  43c28c:	add    DWORD PTR [rax+0x0],esp
  43c28f:	add    BYTE PTR [rcx],al
  43c291:	add    al,0x1
  43c293:	add    BYTE PTR [rdx+rax*2],al
  43c296:	add    BYTE PTR [rax],al
  43c298:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248c2a0
  43c29e:	add    DWORD PTR [rax],esi
  43c2a0:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248c2a8
  43c2a6:	add    DWORD PTR [rax],esi
  43c2a8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248c2b0
  43c2ae:	add    DWORD PTR [rax],esi
  43c2b0:	add    DWORD PTR [rsi],eax
  43c2b2:	add    eax,DWORD PTR [rax]
  43c2b4:	(bad)  
  43c2b5:	rex.X add sil,BYTE PTR [rax]
  43c2b8:	add    DWORD PTR [rax+0x0],esp
  43c2bb:	add    BYTE PTR [rcx],al
  43c2bd:	adc    BYTE PTR [rcx],cl
  43c2bf:	add    BYTE PTR [rax],dl
  43c2c1:	(bad)  
  43c2c2:	or     al,0x30
  43c2c4:	or     esp,DWORD PTR [rax+0xa]
  43c2c7:	jo     0x43c2d2
  43c2c9:	push   rax
  43c2ca:	or     al,al
  43c2cc:	(bad)  
  43c2cd:	rol    BYTE PTR [rax+riz*8],1
  43c2d0:	add    dh,al
  43c2d2:	add    BYTE PTR [rax],al
  43c2d4:	add    DWORD PTR [rdi],eax
  43c2d6:	add    al,0x0
  43c2d8:	(bad)  
  43c2d9:	xor    al,BYTE PTR [rbx]
  43c2db:	xor    BYTE PTR [rdx],al
  43c2dd:	(bad)  
  43c2de:	add    DWORD PTR [rax+0x1],esi
  43c2e1:	add    BYTE PTR [rax],al
  43c2e3:	add    BYTE PTR [rcx],al
  43c2e5:	add    BYTE PTR [rax],al
  43c2e7:	add    BYTE PTR [rcx],al
  43c2e9:	(bad)  
  43c2ea:	add    eax,DWORD PTR [rax]
  43c2ec:	(bad)  
  43c2ed:	rex.X add sil,BYTE PTR [rax]
  43c2f0:	add    DWORD PTR [rax+0x0],esp
  43c2f3:	add    BYTE PTR [rcx],al
  43c2f5:	or     al,BYTE PTR [rsi]
  43c2f7:	add    BYTE PTR [rdx],cl
  43c2f9:	xor    al,BYTE PTR [rsi]
  43c2fb:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3c761
  43c301:	push   rax
  43c302:	add    al,al
  43c304:	add    DWORD PTR [rax],edx
  43c306:	or     DWORD PTR [rax],eax
  43c308:	adc    BYTE PTR [rdx+0xc],al
  43c30b:	xor    BYTE PTR [rbx],cl
  43c30d:	(bad)  
  43c30e:	or     dh,BYTE PTR [rax+0x9]
  43c311:	push   rax
  43c312:	or     al,al
  43c314:	(bad)  
  43c315:	rol    BYTE PTR [rax+riz*8],1
  43c318:	add    dh,al
  43c31a:	add    BYTE PTR [rax],al
  43c31c:	add    DWORD PTR [rax],ecx
  43c31e:	add    eax,0x4420800
  43c323:	xor    BYTE PTR [rbx],al
  43c325:	(bad)  
  43c326:	add    dh,BYTE PTR [rax+0x1]
  43c329:	push   rax
  43c32a:	add    BYTE PTR [rax],al
  43c32c:	add    DWORD PTR [rax],ecx
  43c32e:	add    eax,0x4620800
  43c333:	xor    BYTE PTR [rbx],al
  43c335:	(bad)  
  43c336:	add    dh,BYTE PTR [rax+0x1]
  43c339:	push   rax
  43c33a:	add    BYTE PTR [rax],al
  43c33c:	add    DWORD PTR [rax],edx
  43c33e:	or     DWORD PTR [rax],eax
  43c340:	adc    BYTE PTR [rdx+0x600b300c],al
  43c346:	or     dh,BYTE PTR [rax+0x9]
  43c349:	push   rax
  43c34a:	or     al,al
  43c34c:	(bad)  
  43c34d:	rol    BYTE PTR [rax+riz*8],1
  43c350:	add    dh,al
  43c352:	add    BYTE PTR [rax],al
  43c354:	add    DWORD PTR [rax],ecx
  43c356:	add    eax,0x4420800
  43c35b:	xor    BYTE PTR [rbx],al
  43c35d:	(bad)  
  43c35e:	add    dh,BYTE PTR [rax+0x1]
  43c361:	push   rax
  43c362:	add    BYTE PTR [rax],al
  43c364:	add    DWORD PTR [rax],edx
  43c366:	or     DWORD PTR [rax],eax
  43c368:	adc    BYTE PTR [rdx+0x600b300c],ah
  43c36e:	or     dh,BYTE PTR [rax+0x9]
  43c371:	push   rax
  43c372:	or     al,al
  43c374:	(bad)  
  43c375:	rol    BYTE PTR [rax+riz*8],1
  43c378:	add    dh,al
  43c37a:	add    BYTE PTR [rax],al
  43c37c:	add    DWORD PTR [rcx],edx
  43c37e:	or     DWORD PTR [rip+0x30d3211],eax        # 0x350f595
  43c384:	or     dh,BYTE PTR [rax]
  43c386:	or     DWORD PTR [rax+0x8],esp
  43c389:	jo     0x43c392
  43c38b:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x223c762
  43c392:	add    BYTE PTR [rax],al
  43c394:	add    DWORD PTR [rdi],eax
  43c396:	add    al,0x0
  43c398:	(bad)  
  43c399:	jb     0x43c39e
  43c39b:	xor    BYTE PTR [rdx],al
  43c39d:	(bad)  
  43c39e:	add    DWORD PTR [rax+0x1],esi
  43c3a1:	adc    BYTE PTR [rcx],cl
  43c3a3:	add    BYTE PTR [rax],dl
  43c3a5:	(bad)  
  43c3a6:	or     al,0x30
  43c3a8:	or     esp,DWORD PTR [rax+0xa]
  43c3ab:	jo     0x43c3b6
  43c3ad:	push   rax
  43c3ae:	or     al,al
  43c3b0:	(bad)  
  43c3b1:	rol    BYTE PTR [rax+riz*8],1
  43c3b4:	add    dh,al
  43c3b6:	add    BYTE PTR [rax],al
  43c3b8:	add    DWORD PTR [rdi+rax*1],ecx
  43c3bb:	add    BYTE PTR [rdx+rax*4],cl
  43c3be:	or     BYTE PTR [rax],dh
  43c3c0:	(bad)  
  43c3c1:	(bad)  
  43c3c2:	(bad)  
  43c3c3:	jo     0x43c3ca
  43c3c5:	push   rax
  43c3c6:	add    al,0xc0
  43c3c8:	add    dl,al
  43c3ca:	add    BYTE PTR [rax],al
  43c3cc:	add    DWORD PTR [rsi],eax
  43c3ce:	add    eax,DWORD PTR [rax]
  43c3d0:	(bad)  
  43c3d1:	rex.X add sil,BYTE PTR [rax]
  43c3d4:	add    DWORD PTR [rax+0x0],esp
  43c3d7:	add    BYTE PTR [rcx],al
  43c3d9:	add    BYTE PTR [rax],al
  43c3db:	add    BYTE PTR [rcx],al
  43c3dd:	add    BYTE PTR [rax],al
  43c3df:	add    BYTE PTR [rcx],al
  43c3e1:	or     BYTE PTR [rip+0x4820800],al        # 0x4c5cbe7
  43c3e7:	xor    BYTE PTR [rbx],al
  43c3e9:	(bad)  
  43c3ea:	add    dh,BYTE PTR [rax+0x1]
  43c3ed:	push   rax
  43c3ee:	add    BYTE PTR [rax],al
  43c3f0:	add    DWORD PTR [rax],ecx
  43c3f2:	add    eax,0x4820800
  43c3f7:	xor    BYTE PTR [rbx],al
  43c3f9:	(bad)  
  43c3fa:	add    dh,BYTE PTR [rax+0x1]
  43c3fd:	push   rax
  43c3fe:	add    BYTE PTR [rax],al
  43c400:	add    DWORD PTR [rsi],eax
  43c402:	add    eax,DWORD PTR [rax]
  43c404:	(bad)  
  43c405:	(bad)  
  43c407:	xor    BYTE PTR [rcx],al
  43c409:	(bad)  
  43c40a:	add    BYTE PTR [rax],al
  43c40c:	add    DWORD PTR [rdi],eax
  43c40e:	add    al,0x0
  43c410:	(bad)  
  43c411:	xor    al,BYTE PTR [rbx]
  43c413:	xor    BYTE PTR [rdx],al
  43c415:	(bad)  
  43c416:	add    DWORD PTR [rax+0x1],esi
  43c419:	(bad)  
  43c41a:	add    al,0x0
  43c41c:	(bad)  
  43c41d:	xor    al,BYTE PTR [rbx]
  43c41f:	xor    BYTE PTR [rdx],al
  43c421:	(bad)  
  43c422:	add    DWORD PTR [rax+0x1],esi
  43c425:	or     BYTE PTR [rip+0x4c20800],al        # 0x505cc2b
  43c42b:	xor    BYTE PTR [rbx],al
  43c42d:	(bad)  
  43c42e:	add    dh,BYTE PTR [rax+0x1]
  43c431:	push   rax
  43c432:	add    BYTE PTR [rax],al
  43c434:	add    DWORD PTR [rdi+rax*1],ecx
  43c437:	add    BYTE PTR [rdx+riz*4],cl
  43c43a:	or     BYTE PTR [rax],dh
  43c43c:	(bad)  
  43c43d:	(bad)  
  43c43e:	(bad)  
  43c43f:	jo     0x43c446
  43c441:	push   rax
  43c442:	add    al,0xc0
  43c444:	add    dl,al
  43c446:	add    BYTE PTR [rax],al
  43c448:	add    DWORD PTR [rsi],ecx
  43c44a:	or     BYTE PTR [rax],al
  43c44c:	(bad)  
  43c44d:	push   rdx
  43c44e:	or     dh,BYTE PTR [rax]
  43c450:	or     DWORD PTR [rax+0x8],esp
  43c453:	jo     0x43c45c
  43c455:	push   rax
  43c456:	(bad)  
  43c457:	rol    BYTE PTR [rax+rdx*8],0x2
  43c45b:	loopne 0x43c45e
  43c45d:	or     al,BYTE PTR [rsi]
  43c45f:	add    BYTE PTR [rdx],cl
  43c461:	xchg   edx,eax
  43c462:	(bad)  
  43c463:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3c8c9
  43c469:	push   rax
  43c46a:	add    al,al
  43c46c:	add    DWORD PTR [rax],edx
  43c46e:	or     DWORD PTR [rax],eax
  43c470:	adc    dl,ah
  43c472:	or     al,0x30
  43c474:	or     esp,DWORD PTR [rax+0xa]
  43c477:	jo     0x43c482
  43c479:	push   rax
  43c47a:	or     al,al
  43c47c:	(bad)  
  43c47d:	rol    BYTE PTR [rax+riz*8],1
  43c480:	add    dh,al
  43c482:	add    BYTE PTR [rax],al
  43c484:	add    DWORD PTR [rsi],ecx
  43c486:	or     BYTE PTR [rax],al
  43c488:	(bad)  
  43c489:	repnz or dh,BYTE PTR [rax]
  43c48c:	or     DWORD PTR [rax+0x8],esp
  43c48f:	jo     0x43c498
  43c491:	push   rax
  43c492:	(bad)  
  43c493:	rol    BYTE PTR [rax+rdx*8],0x2
  43c497:	loopne 0x43c49a
  43c499:	adc    ecx,DWORD PTR [rdx]
  43c49b:	add    BYTE PTR [rbx],dl
  43c49d:	add    DWORD PTR [rbx],edx
  43c49f:	add    BYTE PTR [rax+rsi*1],cl
  43c4a2:	or     esp,DWORD PTR [rax+0xa]
  43c4a5:	jo     0x43c4b0
  43c4a7:	push   rax
  43c4a8:	or     al,al
  43c4aa:	(bad)  
  43c4ab:	rol    BYTE PTR [rax+riz*8],1
  43c4ae:	add    dh,al
  43c4b0:	add    DWORD PTR [rdx],ecx
  43c4b2:	(bad)  
  43c4b3:	add    BYTE PTR [rdx],cl
  43c4b5:	push   rdx
  43c4b6:	(bad)  
  43c4b7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3c91d
  43c4bd:	push   rax
  43c4be:	add    al,al
  43c4c0:	add    DWORD PTR [rax],edx
  43c4c2:	or     DWORD PTR [rax],eax
  43c4c4:	adc    BYTE PTR [rdx+0x600b300c],ah
  43c4ca:	or     dh,BYTE PTR [rax+0x9]
  43c4cd:	push   rax
  43c4ce:	or     al,al
  43c4d0:	(bad)  
  43c4d1:	rol    BYTE PTR [rax+riz*8],1
  43c4d4:	add    dh,al
  43c4d6:	add    BYTE PTR [rax],al
  43c4d8:	add    DWORD PTR [rsi],eax
  43c4da:	add    eax,DWORD PTR [rax]
  43c4dc:	(bad)  
  43c4dd:	(bad)  
  43c4df:	xor    BYTE PTR [rcx],al
  43c4e1:	(bad)  
  43c4e2:	add    BYTE PTR [rax],al
  43c4e4:	add    DWORD PTR [rax],eax
  43c4e6:	add    BYTE PTR [rax],al
  43c4e8:	add    DWORD PTR [rcx+rax*1],eax
  43c4eb:	add    BYTE PTR [rdx+rax*2],al
  43c4ee:	add    BYTE PTR [rax],al
  43c4f0:	add    DWORD PTR [rax],eax
  43c4f2:	add    BYTE PTR [rax],al
  43c4f4:	add    DWORD PTR [rsi],ecx
  43c4f6:	or     BYTE PTR [rax],al
  43c4f8:	(bad)  
  43c4f9:	ror    BYTE PTR [rdx],cl
  43c4fb:	xor    BYTE PTR [rcx],cl
  43c4fd:	(bad)  
  43c4fe:	or     BYTE PTR [rax+0x7],dh
  43c501:	push   rax
  43c502:	(bad)  
  43c503:	rol    BYTE PTR [rax+rdx*8],0x2
  43c507:	loopne 0x43c50a
  43c509:	(bad)  
  43c50a:	add    al,0x0
  43c50c:	(bad)  
  43c50d:	jb     0x43c512
  43c50f:	xor    BYTE PTR [rdx],al
  43c511:	(bad)  
  43c512:	add    DWORD PTR [rax+0x1],esi
  43c515:	(bad)  
  43c516:	add    eax,DWORD PTR [rax]
  43c518:	(bad)  
  43c519:	rex.X add sil,BYTE PTR [rax]
  43c51c:	add    DWORD PTR [rax+0x0],esp
  43c51f:	add    BYTE PTR [rcx],al
  43c521:	(bad)  
  43c522:	add    al,0x0
  43c524:	(bad)  
  43c525:	xor    al,BYTE PTR [rbx]
  43c527:	xor    BYTE PTR [rdx],al
  43c529:	(bad)  
  43c52a:	add    DWORD PTR [rax+0x1],esi
  43c52d:	or     BYTE PTR [rip+0x4420800],al        # 0x485cd33
  43c533:	xor    BYTE PTR [rbx],al
  43c535:	(bad)  
  43c536:	add    dh,BYTE PTR [rax+0x1]
  43c539:	push   rax
  43c53a:	add    BYTE PTR [rax],al
  43c53c:	add    DWORD PTR [rcx+rax*1],eax
  43c53f:	add    BYTE PTR [rdx+rax*2],al
  43c542:	add    BYTE PTR [rax],al
  43c544:	add    DWORD PTR [rcx+rax*1],eax
  43c547:	add    BYTE PTR [rdx+rax*2],al
  43c54a:	add    BYTE PTR [rax],al
  43c54c:	add    DWORD PTR [rdi],eax
  43c54e:	add    al,0x0
  43c550:	(bad)  
  43c551:	xor    al,BYTE PTR [rbx]
  43c553:	xor    BYTE PTR [rdx],al
  43c555:	(bad)  
  43c556:	add    DWORD PTR [rax+0x1],esi
  43c559:	adc    ecx,DWORD PTR [rdx]
  43c55b:	add    BYTE PTR [rbx],dl
  43c55d:	add    DWORD PTR [rbx],ebp
  43c55f:	add    BYTE PTR [rax+rsi*1],cl
  43c562:	or     esp,DWORD PTR [rax+0xa]
  43c565:	jo     0x43c570
  43c567:	push   rax
  43c568:	or     al,al
  43c56a:	(bad)  
  43c56b:	rol    BYTE PTR [rax+riz*8],1
  43c56e:	add    dh,al
  43c570:	add    DWORD PTR [rsi],eax
  43c572:	add    eax,DWORD PTR [rax]
  43c574:	(bad)  
  43c575:	(bad)  
  43c577:	xor    BYTE PTR [rcx],al
  43c579:	(bad)  
  43c57a:	add    BYTE PTR [rax],al
  43c57c:	add    DWORD PTR [rbx],edx
  43c57e:	or     al,BYTE PTR [rax]
  43c580:	adc    eax,DWORD PTR [rcx]
  43c582:	jns    0x43c584
  43c584:	or     al,0x30
  43c586:	or     esp,DWORD PTR [rax+0xa]
  43c589:	jo     0x43c594
  43c58b:	push   rax
  43c58c:	or     al,al
  43c58e:	(bad)  
  43c58f:	rol    BYTE PTR [rax+riz*8],1
  43c592:	add    dh,al
  43c594:	add    DWORD PTR [rax],eax
  43c596:	add    BYTE PTR [rax],al
  43c598:	add    DWORD PTR [rax],eax
  43c59a:	add    BYTE PTR [rax],al
  43c59c:	add    DWORD PTR [rax],eax
  43c59e:	add    BYTE PTR [rax],al
  43c5a0:	add    DWORD PTR [rsi],eax
  43c5a2:	add    eax,DWORD PTR [rax]
  43c5a4:	(bad)  
  43c5a5:	rex.X add sil,BYTE PTR [rax]
  43c5a8:	add    DWORD PTR [rax+0x0],esp
  43c5ab:	add    BYTE PTR [rcx],al
  43c5ad:	add    BYTE PTR [rax],al
  43c5af:	add    BYTE PTR [rcx],al
  43c5b1:	add    al,0x1
  43c5b3:	add    BYTE PTR [rdx+rax*2],al
  43c5b6:	add    BYTE PTR [rax],al
  43c5b8:	add    DWORD PTR [rcx+rax*1],eax
  43c5bb:	add    BYTE PTR [rdx+rax*2],al
  43c5be:	add    BYTE PTR [rax],al
  43c5c0:	add    DWORD PTR [rcx+rax*1],eax
  43c5c3:	add    BYTE PTR [rdx+rax*2],al
  43c5c6:	add    BYTE PTR [rax],al
  43c5c8:	add    DWORD PTR [rcx+rax*1],eax
  43c5cb:	add    BYTE PTR [rdx+rax*2],al
  43c5ce:	add    BYTE PTR [rax],al
  43c5d0:	add    DWORD PTR [rcx+rax*1],eax
  43c5d3:	add    BYTE PTR [rdx+rax*2],al
  43c5d6:	add    BYTE PTR [rax],al
  43c5d8:	add    DWORD PTR [rcx+rax*1],eax
  43c5db:	add    BYTE PTR [rdx+rax*2],al
  43c5de:	add    BYTE PTR [rax],al
  43c5e0:	add    DWORD PTR [rcx+rax*1],eax
  43c5e3:	add    BYTE PTR [rdx+rax*2],al
  43c5e6:	add    BYTE PTR [rax],al
  43c5e8:	add    DWORD PTR [rcx+rax*1],eax
  43c5eb:	add    BYTE PTR [rdx+riz*2],al
  43c5ee:	add    BYTE PTR [rax],al
  43c5f0:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248c5f8
  43c5f6:	add    DWORD PTR [rax],esi
  43c5f8:	add    DWORD PTR [rax],eax
  43c5fa:	add    BYTE PTR [rax],al
  43c5fc:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248c604
  43c602:	add    DWORD PTR [rax],esi
  43c604:	add    DWORD PTR [rax],ecx
  43c606:	add    eax,0x4420800
  43c60b:	xor    BYTE PTR [rbx],al
  43c60d:	(bad)  
  43c60e:	add    dh,BYTE PTR [rax+0x1]
  43c611:	push   rax
  43c612:	add    BYTE PTR [rax],al
  43c614:	add    DWORD PTR [rcx+rax*1],eax
  43c617:	add    BYTE PTR [rdx+riz*2],al
  43c61a:	add    BYTE PTR [rax],al
  43c61c:	add    DWORD PTR [rcx+rax*1],eax
  43c61f:	add    BYTE PTR [rdx+riz*2],al
  43c622:	add    BYTE PTR [rax],al
  43c624:	add    DWORD PTR [rcx+rax*1],eax
  43c627:	add    BYTE PTR [rdx+riz*2],al
  43c62a:	add    BYTE PTR [rax],al
  43c62c:	add    DWORD PTR [rdi+rax*1],ecx
  43c62f:	add    BYTE PTR [rdx+riz*8],cl
  43c632:	or     BYTE PTR [rax],dh
  43c634:	(bad)  
  43c635:	(bad)  
  43c636:	(bad)  
  43c637:	jo     0x43c63e
  43c639:	push   rax
  43c63a:	add    al,0xc0
  43c63c:	add    dl,al
  43c63e:	add    BYTE PTR [rax],al
  43c640:	add    DWORD PTR [rsi],ecx
  43c642:	or     BYTE PTR [rax],al
  43c644:	(bad)  
  43c645:	repnz or dh,BYTE PTR [rax]
  43c648:	or     DWORD PTR [rax+0x8],esp
  43c64b:	jo     0x43c654
  43c64d:	push   rax
  43c64e:	(bad)  
  43c64f:	rol    BYTE PTR [rax+rdx*8],0x2
  43c653:	loopne 0x43c656
  43c655:	or     al,BYTE PTR [rsi]
  43c657:	add    BYTE PTR [rdx],cl
  43c659:	xor    al,BYTE PTR [rsi]
  43c65b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3cac1
  43c661:	push   rax
  43c662:	add    al,al
  43c664:	add    DWORD PTR [rax],ecx
  43c666:	add    eax,0x4420800
  43c66b:	xor    BYTE PTR [rbx],al
  43c66d:	(bad)  
  43c66e:	add    dh,BYTE PTR [rax+0x1]
  43c671:	push   rax
  43c672:	add    BYTE PTR [rax],al
  43c674:	add    DWORD PTR [rbx],ecx
  43c676:	(bad)  
  43c677:	add    BYTE PTR [rbx],cl
  43c679:	add    DWORD PTR [rcx],edx
  43c67b:	add    BYTE PTR [rax+rsi*1],al
  43c67e:	add    esp,DWORD PTR [rax+0x2]
  43c681:	jo     0x43c684
  43c683:	push   rax
  43c684:	add    DWORD PTR [rsi],eax
  43c686:	add    eax,DWORD PTR [rax]
  43c688:	(bad)  
  43c689:	rex.X add sil,BYTE PTR [rax]
  43c68c:	add    DWORD PTR [rax+0x0],esp
  43c68f:	add    BYTE PTR [rcx],al
  43c691:	(bad)  
  43c692:	add    eax,DWORD PTR [rax]
  43c694:	(bad)  
  43c695:	rex.X add sil,BYTE PTR [rax]
  43c698:	add    DWORD PTR [rax+0x0],esp
  43c69b:	add    BYTE PTR [rcx],al
  43c69d:	(bad)  
  43c69e:	add    eax,DWORD PTR [rax]
  43c6a0:	(bad)  
  43c6a1:	rex.X add sil,BYTE PTR [rax]
  43c6a4:	add    DWORD PTR [rax+0x0],esp
  43c6a7:	add    BYTE PTR [rcx],al
  43c6a9:	(bad)  
  43c6aa:	add    eax,DWORD PTR [rax]
  43c6ac:	(bad)  
  43c6ad:	rex.X add sil,BYTE PTR [rax]
  43c6b0:	add    DWORD PTR [rax+0x0],esp
  43c6b3:	add    BYTE PTR [rcx],al
  43c6b5:	(bad)  
  43c6b6:	add    al,0x0
  43c6b8:	(bad)  
  43c6b9:	xor    al,BYTE PTR [rbx]
  43c6bb:	xor    BYTE PTR [rdx],al
  43c6bd:	(bad)  
  43c6be:	add    DWORD PTR [rax+0x1],esi
  43c6c1:	add    BYTE PTR [rax],al
  43c6c3:	add    BYTE PTR [rcx],al
  43c6c5:	add    eax,0x32050002
  43c6ca:	add    DWORD PTR [rax],esi
  43c6cc:	add    DWORD PTR [rax],eax
  43c6ce:	add    BYTE PTR [rax],al
  43c6d0:	add    DWORD PTR [rip+0x72050002],eax        # 0x7248c6d8
  43c6d6:	add    DWORD PTR [rax],esi
  43c6d8:	add    DWORD PTR [rip+0x52050002],eax        # 0x5248c6e0
  43c6de:	add    DWORD PTR [rax],esi
  43c6e0:	add    DWORD PTR [rip+0xffffffff92050002],eax        # 0xffffffff9248c6e8
  43c6e6:	add    DWORD PTR [rax],esi
  43c6e8:	add    DWORD PTR [rbx],ecx
  43c6ea:	(bad)  
  43c6eb:	add    BYTE PTR [rbx],cl
  43c6ed:	add    DWORD PTR [rip+0x3300400],ebx        # 0x373caf3
  43c6f3:	(bad)  
  43c6f4:	add    dh,BYTE PTR [rax+0x1]
  43c6f7:	push   rax
  43c6f8:	add    DWORD PTR [rdi],eax
  43c6fa:	add    al,0x0
  43c6fc:	(bad)  
  43c6fd:	push   rdx
  43c6fe:	add    esi,DWORD PTR [rax]
  43c700:	add    ah,BYTE PTR [rax+0x1]
  43c703:	jo     0x43c706
  43c705:	(bad)  
  43c706:	add    eax,DWORD PTR [rax]
  43c708:	(bad)  
  43c709:	rex.X add sil,BYTE PTR [rax]
  43c70c:	add    DWORD PTR [rax+0x0],esp
  43c70f:	add    BYTE PTR [rcx],al
  43c711:	add    BYTE PTR [rax],al
  43c713:	add    BYTE PTR [rcx],al
  43c715:	add    BYTE PTR [rax],al
  43c717:	add    BYTE PTR [rcx],al
  43c719:	add    BYTE PTR [rax],al
  43c71b:	add    BYTE PTR [rcx],al
  43c71d:	or     al,BYTE PTR [rsi]
  43c71f:	add    BYTE PTR [rdx],cl
  43c721:	xor    al,BYTE PTR [rsi]
  43c723:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3cb89
  43c729:	push   rax
  43c72a:	add    al,al
  43c72c:	add    DWORD PTR [rdi],eax
  43c72e:	add    al,0x0
  43c730:	(bad)  
  43c731:	push   rdx
  43c732:	add    esi,DWORD PTR [rax]
  43c734:	add    ah,BYTE PTR [rax+0x1]
  43c737:	jo     0x43c73a
  43c739:	(bad)  
  43c73a:	add    al,0x0
  43c73c:	(bad)  
  43c73d:	xchg   edx,eax
  43c73e:	add    esi,DWORD PTR [rax]
  43c740:	add    ah,BYTE PTR [rax+0x1]
  43c743:	jo     0x43c746
  43c745:	(bad)  
  43c746:	add    eax,DWORD PTR [rax]
  43c748:	(bad)  
  43c749:	rex.X add sil,BYTE PTR [rax]
  43c74c:	add    DWORD PTR [rax+0x0],esp
  43c74f:	add    BYTE PTR [rcx],al
  43c751:	(bad)  
  43c752:	add    eax,DWORD PTR [rax]
  43c754:	(bad)  
  43c755:	(bad)  
  43c757:	xor    BYTE PTR [rcx],al
  43c759:	(bad)  
  43c75a:	add    BYTE PTR [rax],al
  43c75c:	add    DWORD PTR [rax],eax
  43c75e:	add    BYTE PTR [rax],al
  43c760:	add    DWORD PTR [rax],edx
  43c762:	or     DWORD PTR [rax],eax
  43c764:	adc    dl,al
  43c766:	or     al,0x30
  43c768:	or     esp,DWORD PTR [rax+0xa]
  43c76b:	jo     0x43c776
  43c76d:	push   rax
  43c76e:	or     al,al
  43c770:	(bad)  
  43c771:	rol    BYTE PTR [rax+riz*8],1
  43c774:	add    dh,al
  43c776:	add    BYTE PTR [rax],al
  43c778:	add    DWORD PTR [rax],ecx
  43c77a:	add    eax,0x4620800
  43c77f:	xor    BYTE PTR [rbx],al
  43c781:	(bad)  
  43c782:	add    dh,BYTE PTR [rax+0x1]
  43c785:	push   rax
  43c786:	add    BYTE PTR [rax],al
  43c788:	add    DWORD PTR [rax],edx
  43c78a:	or     DWORD PTR [rax],eax
  43c78c:	adc    BYTE PTR [rdx],ah
  43c78e:	or     al,0x30
  43c790:	or     esp,DWORD PTR [rax+0xa]
  43c793:	jo     0x43c79e
  43c795:	push   rax
  43c796:	or     al,al
  43c798:	(bad)  
  43c799:	rol    BYTE PTR [rax+riz*8],1
  43c79c:	add    dh,al
  43c79e:	add    BYTE PTR [rax],al
  43c7a0:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x150c7ad
  43c7a6:	adc    al,0x0
  43c7a8:	(bad)  
  43c7a9:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3cc0f
  43c7af:	push   rax
  43c7b0:	add    al,al
  43c7b2:	add    BYTE PTR [rax],al
  43c7b4:	add    DWORD PTR [rbx],ecx
  43c7b6:	(bad)  
  43c7b7:	add    BYTE PTR [rbx],cl
  43c7b9:	add    DWORD PTR [rip+0x3300400],edx        # 0x373cbbf
  43c7bf:	(bad)  
  43c7c0:	add    dh,BYTE PTR [rax+0x1]
  43c7c3:	push   rax
  43c7c4:	add    DWORD PTR [rbx],edx
  43c7c6:	or     al,BYTE PTR [rax]
  43c7c8:	adc    eax,DWORD PTR [rcx]
  43c7ca:	xor    DWORD PTR [rax],eax
  43c7cc:	or     al,0x30
  43c7ce:	or     esp,DWORD PTR [rax+0xa]
  43c7d1:	jo     0x43c7dc
  43c7d3:	push   rax
  43c7d4:	or     al,al
  43c7d6:	(bad)  
  43c7d7:	rol    BYTE PTR [rax+riz*8],1
  43c7da:	add    dh,al
  43c7dc:	add    DWORD PTR [rax],eax
  43c7de:	add    BYTE PTR [rax],al
  43c7e0:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248c7e8
  43c7e6:	add    DWORD PTR [rax],esi
  43c7e8:	add    DWORD PTR [rdi],ecx
  43c7ea:	or     BYTE PTR [rax],al
  43c7ec:	lgdt   [rbx]
  43c7ef:	add    BYTE PTR [rax],cl
  43c7f1:	xor    BYTE PTR [rdi],al
  43c7f3:	(bad)  
  43c7f4:	(bad)  
  43c7f5:	jo     0x43c7fc
  43c7f7:	push   rax
  43c7f8:	add    al,0xc0
  43c7fa:	add    dl,al
  43c7fc:	add    DWORD PTR [rax],edx
  43c7fe:	or     DWORD PTR [rax],eax
  43c800:	adc    BYTE PTR [rdx+0x600b300c],ah
  43c806:	or     dh,BYTE PTR [rax+0x9]
  43c809:	push   rax
  43c80a:	or     al,al
  43c80c:	(bad)  
  43c80d:	rol    BYTE PTR [rax+riz*8],1
  43c810:	add    dh,al
  43c812:	add    BYTE PTR [rax],al
  43c814:	add    DWORD PTR [rax],ecx
  43c816:	add    eax,0x4420800
  43c81b:	xor    BYTE PTR [rbx],al
  43c81d:	(bad)  
  43c81e:	add    dh,BYTE PTR [rax+0x1]
  43c821:	push   rax
  43c822:	add    BYTE PTR [rax],al
  43c824:	add    DWORD PTR [rsi],eax
  43c826:	add    eax,DWORD PTR [rax]
  43c828:	(bad)  
  43c829:	(bad)  
  43c82b:	xor    BYTE PTR [rcx],al
  43c82d:	(bad)  
  43c82e:	add    BYTE PTR [rax],al
  43c830:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248c838
  43c836:	add    DWORD PTR [rax],esi
  43c838:	add    DWORD PTR [rax],eax
  43c83a:	add    BYTE PTR [rax],al
  43c83c:	add    DWORD PTR [rdi+rax*1],ecx
  43c83f:	add    BYTE PTR [rdx+rax*2],cl
  43c842:	or     BYTE PTR [rax],dh
  43c844:	(bad)  
  43c845:	(bad)  
  43c846:	(bad)  
  43c847:	jo     0x43c84e
  43c849:	push   rax
  43c84a:	add    al,0xc0
  43c84c:	add    dl,al
  43c84e:	add    BYTE PTR [rax],al
  43c850:	add    DWORD PTR [rdi],eax
  43c852:	add    al,0x0
  43c854:	(bad)  
  43c855:	push   rdx
  43c856:	add    esi,DWORD PTR [rax]
  43c858:	add    ah,BYTE PTR [rax+0x1]
  43c85b:	jo     0x43c85e
  43c85d:	adc    ecx,DWORD PTR [rdx]
  43c85f:	add    BYTE PTR [rbx],dl
  43c861:	add    DWORD PTR [rdi],esp
  43c863:	add    BYTE PTR [rax+rsi*1],cl
  43c866:	or     esp,DWORD PTR [rax+0xa]
  43c869:	jo     0x43c874
  43c86b:	push   rax
  43c86c:	or     al,al
  43c86e:	(bad)  
  43c86f:	rol    BYTE PTR [rax+riz*8],1
  43c872:	add    dh,al
  43c874:	add    DWORD PTR [rax],edx
  43c876:	or     DWORD PTR [rax],eax
  43c878:	adc    BYTE PTR [rdx+0x600b300c],al
  43c87e:	or     dh,BYTE PTR [rax+0x9]
  43c881:	push   rax
  43c882:	or     al,al
  43c884:	(bad)  
  43c885:	rol    BYTE PTR [rax+riz*8],1
  43c888:	add    dh,al
  43c88a:	add    BYTE PTR [rax],al
  43c88c:	add    DWORD PTR [rsi],eax
  43c88e:	add    eax,DWORD PTR [rax]
  43c890:	(bad)  
  43c891:	(bad)  
  43c892:	add    dh,BYTE PTR [rax]
  43c894:	add    DWORD PTR [rax+0x0],esp
  43c897:	add    BYTE PTR [rcx],al
  43c899:	or     BYTE PTR [rip+0x4820800],al        # 0x4c5d09f
  43c89f:	xor    BYTE PTR [rbx],al
  43c8a1:	(bad)  
  43c8a2:	add    dh,BYTE PTR [rax+0x1]
  43c8a5:	push   rax
  43c8a6:	add    BYTE PTR [rax],al
  43c8a8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248c8b0
  43c8ae:	add    DWORD PTR [rax],esi
  43c8b0:	add    DWORD PTR [rsi],eax
  43c8b2:	add    eax,DWORD PTR [rax]
  43c8b4:	(bad)  
  43c8b5:	ret    0x3002
  43c8b8:	add    DWORD PTR [rax+0x0],esi
  43c8bb:	add    BYTE PTR [rcx],al
  43c8bd:	(bad)  
  43c8be:	add    eax,DWORD PTR [rax]
  43c8c0:	(bad)  
  43c8c1:	rex.X add sil,BYTE PTR [rax]
  43c8c4:	add    DWORD PTR [rax+0x0],esp
  43c8c7:	add    BYTE PTR [rcx],al
  43c8c9:	adc    ecx,DWORD PTR [rdx]
  43c8cb:	add    BYTE PTR [rbx],dl
  43c8cd:	add    DWORD PTR [rbp+0xb300c00],ecx
  43c8d3:	(bad)  
  43c8d4:	or     dh,BYTE PTR [rax+0x9]
  43c8d7:	push   rax
  43c8d8:	or     al,al
  43c8da:	(bad)  
  43c8db:	rol    BYTE PTR [rax+riz*8],1
  43c8de:	add    dh,al
  43c8e0:	add    DWORD PTR [rbx],ecx
  43c8e2:	(bad)  
  43c8e3:	add    BYTE PTR [rbx],cl
  43c8e5:	add    DWORD PTR [rdi],edx
  43c8e7:	add    BYTE PTR [rax+rsi*1],al
  43c8ea:	add    esp,DWORD PTR [rax+0x2]
  43c8ed:	jo     0x43c8f0
  43c8ef:	push   rax
  43c8f0:	add    DWORD PTR [rbx],edx
  43c8f2:	or     al,BYTE PTR [rax]
  43c8f4:	adc    eax,DWORD PTR [rcx]
  43c8f6:	sbb    eax,DWORD PTR [rax]
  43c8f8:	or     al,0x30
  43c8fa:	or     esp,DWORD PTR [rax+0xa]
  43c8fd:	jo     0x43c908
  43c8ff:	push   rax
  43c900:	or     al,al
  43c902:	(bad)  
  43c903:	rol    BYTE PTR [rax+riz*8],1
  43c906:	add    dh,al
  43c908:	add    DWORD PTR [rdi],ecx
  43c90a:	or     BYTE PTR [rax],al
  43c90c:	lgdt   [rdi]
  43c90f:	add    BYTE PTR [rax],cl
  43c911:	xor    BYTE PTR [rdi],al
  43c913:	(bad)  
  43c914:	(bad)  
  43c915:	jo     0x43c91c
  43c917:	push   rax
  43c918:	add    al,0xc0
  43c91a:	add    dl,al
  43c91c:	add    DWORD PTR [rax],eax
  43c91e:	add    BYTE PTR [rax],al
  43c920:	add    DWORD PTR [rcx],eax
  43c922:	add    DWORD PTR [rax],eax
  43c924:	add    DWORD PTR [rax],esi
  43c926:	add    BYTE PTR [rax],al
  43c928:	add    DWORD PTR [rax],ecx
  43c92a:	add    eax,0x4420800
  43c92f:	xor    BYTE PTR [rbx],al
  43c931:	(bad)  
  43c932:	add    dh,BYTE PTR [rax+0x1]
  43c935:	push   rax
  43c936:	add    BYTE PTR [rax],al
  43c938:	add    DWORD PTR [rbx],ecx
  43c93a:	(bad)  
  43c93b:	add    BYTE PTR [rbx],cl
  43c93d:	add    DWORD PTR [rip+0x3300400],esp        # 0x373cd43
  43c943:	(bad)  
  43c944:	add    dh,BYTE PTR [rax+0x1]
  43c947:	push   rax
  43c948:	add    DWORD PTR [rsi],eax
  43c94a:	add    eax,DWORD PTR [rax]
  43c94c:	(bad)  
  43c94d:	rex.X add sil,BYTE PTR [rax]
  43c950:	add    DWORD PTR [rax+0x0],esp
  43c953:	add    BYTE PTR [rcx],al
  43c955:	or     al,BYTE PTR [rsi]
  43c957:	add    BYTE PTR [rdx],cl
  43c959:	jb     0x43c961
  43c95b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3cdc1
  43c961:	push   rax
  43c962:	add    al,al
  43c964:	add    DWORD PTR [rsi],ecx
  43c966:	or     BYTE PTR [rax],al
  43c968:	(bad)  
  43c969:	xor    cl,BYTE PTR [rdx]
  43c96b:	xor    BYTE PTR [rcx],cl
  43c96d:	(bad)  
  43c96e:	or     BYTE PTR [rax+0x7],dh
  43c971:	push   rax
  43c972:	(bad)  
  43c973:	rol    BYTE PTR [rax+rdx*8],0x2
  43c977:	loopne 0x43c97a
  43c979:	(bad)  
  43c97a:	add    eax,DWORD PTR [rax]
  43c97c:	(bad)  
  43c97d:	rex.X add sil,BYTE PTR [rax]
  43c980:	add    DWORD PTR [rax+0x0],esp
  43c983:	add    BYTE PTR [rcx],al
  43c985:	(bad)  
  43c986:	or     BYTE PTR [rax],al
  43c988:	(bad)  
  43c989:	jb     0x43c995
  43c98b:	xor    BYTE PTR [rcx],cl
  43c98d:	(bad)  
  43c98e:	or     BYTE PTR [rax+0x7],dh
  43c991:	push   rax
  43c992:	(bad)  
  43c993:	rol    BYTE PTR [rax+rdx*8],0x2
  43c997:	loopne 0x43c99a
  43c999:	add    al,0x1
  43c99b:	add    BYTE PTR [rdx+rax*2],al
  43c99e:	add    BYTE PTR [rax],al
  43c9a0:	add    DWORD PTR [rax],ecx
  43c9a2:	add    eax,0x4c20800
  43c9a7:	xor    BYTE PTR [rbx],al
  43c9a9:	(bad)  
  43c9aa:	add    dh,BYTE PTR [rax+0x1]
  43c9ad:	push   rax
  43c9ae:	add    BYTE PTR [rax],al
  43c9b0:	add    DWORD PTR [rdx],ecx
  43c9b2:	(bad)  
  43c9b3:	add    BYTE PTR [rdx],cl
  43c9b5:	jb     0x43c9bd
  43c9b7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3ce1d
  43c9bd:	push   rax
  43c9be:	add    al,al
  43c9c0:	add    DWORD PTR [rdx],ecx
  43c9c2:	(bad)  
  43c9c3:	add    BYTE PTR [rdx],cl
  43c9c5:	jb     0x43c9cd
  43c9c7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3ce2d
  43c9cd:	push   rax
  43c9ce:	add    al,al
  43c9d0:	add    DWORD PTR [rax],edx
  43c9d2:	or     DWORD PTR [rax],eax
  43c9d4:	adc    BYTE PTR [rdx+0xc],ah
  43c9d7:	xor    BYTE PTR [rbx],cl
  43c9d9:	(bad)  
  43c9da:	or     dh,BYTE PTR [rax+0x9]
  43c9dd:	push   rax
  43c9de:	or     al,al
  43c9e0:	(bad)  
  43c9e1:	rol    BYTE PTR [rax+riz*8],1
  43c9e4:	add    dh,al
  43c9e6:	add    BYTE PTR [rax],al
  43c9e8:	add    DWORD PTR [rdx],ecx
  43c9ea:	(bad)  
  43c9eb:	add    BYTE PTR [rdx],cl
  43c9ed:	jb     0x43c9f5
  43c9ef:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3ce55
  43c9f5:	push   rax
  43c9f6:	add    al,al
  43c9f8:	add    DWORD PTR [rbx],edx
  43c9fa:	or     al,BYTE PTR [rax]
  43c9fc:	adc    eax,DWORD PTR [rcx]
  43c9fe:	(bad)  
  43c9ff:	add    BYTE PTR [rax+rsi*1],cl
  43ca02:	or     esp,DWORD PTR [rax+0xa]
  43ca05:	jo     0x43ca10
  43ca07:	push   rax
  43ca08:	or     al,al
  43ca0a:	(bad)  
  43ca0b:	rol    BYTE PTR [rax+riz*8],1
  43ca0e:	add    dh,al
  43ca10:	add    DWORD PTR [rsi],eax
  43ca12:	add    eax,DWORD PTR [rax]
  43ca14:	(bad)  
  43ca15:	rex.X add sil,BYTE PTR [rax]
  43ca18:	add    DWORD PTR [rax+0x0],esp
  43ca1b:	add    BYTE PTR [rcx],al
  43ca1d:	add    BYTE PTR [rax],al
  43ca1f:	add    BYTE PTR [rcx],al
  43ca21:	add    BYTE PTR [rax],al
  43ca23:	add    BYTE PTR [rcx],al
  43ca25:	add    BYTE PTR [rax],al
  43ca27:	add    BYTE PTR [rcx],al
  43ca29:	add    al,0x1
  43ca2b:	add    BYTE PTR [rdx+rax*2],al
  43ca2e:	add    BYTE PTR [rax],al
  43ca30:	add    DWORD PTR [rdx],ecx
  43ca32:	(bad)  
  43ca33:	add    BYTE PTR [rdx],cl
  43ca35:	xor    al,BYTE PTR [rsi]
  43ca37:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3ce9d
  43ca3d:	push   rax
  43ca3e:	add    al,al
  43ca40:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248ca48
  43ca46:	add    DWORD PTR [rax],esi
  43ca48:	add    DWORD PTR [rax],eax
  43ca4a:	add    BYTE PTR [rax],al
  43ca4c:	add    DWORD PTR [rdi+rax*1],ecx
  43ca4f:	add    BYTE PTR [rdx+rax*2],cl
  43ca52:	or     BYTE PTR [rax],dh
  43ca54:	(bad)  
  43ca55:	(bad)  
  43ca56:	(bad)  
  43ca57:	jo     0x43ca5e
  43ca59:	push   rax
  43ca5a:	add    al,0xc0
  43ca5c:	add    dl,al
  43ca5e:	add    BYTE PTR [rax],al
  43ca60:	add    DWORD PTR [rax],edx
  43ca62:	or     DWORD PTR [rax],eax
  43ca64:	adc    dl,ah
  43ca66:	or     al,0x30
  43ca68:	or     esp,DWORD PTR [rax+0xa]
  43ca6b:	jo     0x43ca76
  43ca6d:	push   rax
  43ca6e:	or     al,al
  43ca70:	(bad)  
  43ca71:	rol    BYTE PTR [rax+riz*8],1
  43ca74:	add    dh,al
  43ca76:	add    BYTE PTR [rax],al
  43ca78:	add    DWORD PTR [rbx],edx
  43ca7a:	or     al,BYTE PTR [rax]
  43ca7c:	adc    eax,DWORD PTR [rcx]
  43ca7e:	and    DWORD PTR [rax],eax
  43ca80:	or     al,0x30
  43ca82:	or     esp,DWORD PTR [rax+0xa]
  43ca85:	jo     0x43ca90
  43ca87:	push   rax
  43ca88:	or     al,al
  43ca8a:	(bad)  
  43ca8b:	rol    BYTE PTR [rax+riz*8],1
  43ca8e:	add    dh,al
  43ca90:	add    DWORD PTR [rax],eax
  43ca92:	add    BYTE PTR [rax],al
  43ca94:	add    DWORD PTR [rip+0x52050002],eax        # 0x5248ca9c
  43ca9a:	add    DWORD PTR [rax],esi
  43ca9c:	add    DWORD PTR [rax],edx
  43ca9e:	or     DWORD PTR [rax],eax
  43caa0:	adc    dl,al
  43caa2:	or     al,0x30
  43caa4:	or     esp,DWORD PTR [rax+0xa]
  43caa7:	jo     0x43cab2
  43caa9:	push   rax
  43caaa:	or     al,al
  43caac:	(bad)  
  43caad:	rol    BYTE PTR [rax+riz*8],1
  43cab0:	add    dh,al
  43cab2:	add    BYTE PTR [rax],al
  43cab4:	add    DWORD PTR [rdi+rax*1],ecx
  43cab7:	add    BYTE PTR [rdx+rax*8],cl
  43caba:	or     BYTE PTR [rax],dh
  43cabc:	(bad)  
  43cabd:	(bad)  
  43cabe:	(bad)  
  43cabf:	jo     0x43cac6
  43cac1:	push   rax
  43cac2:	add    al,0xc0
  43cac4:	add    dl,al
  43cac6:	add    BYTE PTR [rax],al
  43cac8:	add    DWORD PTR [rax],edx
  43caca:	or     DWORD PTR [rax],eax
  43cacc:	adc    dl,al
  43cace:	or     al,0x30
  43cad0:	or     esp,DWORD PTR [rax+0xa]
  43cad3:	jo     0x43cade
  43cad5:	push   rax
  43cad6:	or     al,al
  43cad8:	(bad)  
  43cad9:	rol    BYTE PTR [rax+riz*8],1
  43cadc:	add    dh,al
  43cade:	add    BYTE PTR [rax],al
  43cae0:	add    DWORD PTR [rax],ecx
  43cae2:	add    eax,0x4420800
  43cae7:	xor    BYTE PTR [rbx],al
  43cae9:	(bad)  
  43caea:	add    dh,BYTE PTR [rax+0x1]
  43caed:	push   rax
  43caee:	add    BYTE PTR [rax],al
  43caf0:	add    DWORD PTR [rax],eax
  43caf2:	add    BYTE PTR [rax],al
  43caf4:	add    DWORD PTR [rcx+rax*1],eax
  43caf7:	add    BYTE PTR [rdx+rax*2],al
  43cafa:	add    BYTE PTR [rax],al
  43cafc:	add    DWORD PTR [rdi],eax
  43cafe:	add    al,0x0
  43cb00:	(bad)  
  43cb01:	jb     0x43cb06
  43cb03:	xor    BYTE PTR [rdx],al
  43cb05:	(bad)  
  43cb06:	add    DWORD PTR [rax+0x1],esi
  43cb09:	adc    ecx,DWORD PTR [rdx]
  43cb0b:	add    BYTE PTR [rbx],dl
  43cb0d:	add    DWORD PTR [rbx],edx
  43cb0f:	add    BYTE PTR [rax+rsi*1],cl
  43cb12:	or     esp,DWORD PTR [rax+0xa]
  43cb15:	jo     0x43cb20
  43cb17:	push   rax
  43cb18:	or     al,al
  43cb1a:	(bad)  
  43cb1b:	rol    BYTE PTR [rax+riz*8],1
  43cb1e:	add    dh,al
  43cb20:	add    DWORD PTR [rsi],eax
  43cb22:	add    eax,DWORD PTR [rax]
  43cb24:	(bad)  
  43cb25:	(bad)  
  43cb26:	add    dh,BYTE PTR [rax]
  43cb28:	add    DWORD PTR [rax+0x0],esp
  43cb2b:	add    BYTE PTR [rcx],al
  43cb2d:	or     BYTE PTR [rip+0x4620800],al        # 0x4a5d333
  43cb33:	xor    BYTE PTR [rbx],al
  43cb35:	(bad)  
  43cb36:	add    dh,BYTE PTR [rax+0x1]
  43cb39:	push   rax
  43cb3a:	add    BYTE PTR [rax],al
  43cb3c:	add    DWORD PTR [rip+0x72050002],eax        # 0x7248cb44
  43cb42:	add    DWORD PTR [rax],esi
  43cb44:	add    DWORD PTR [rdx],ecx
  43cb46:	(bad)  
  43cb47:	add    BYTE PTR [rdx],cl
  43cb49:	xor    al,BYTE PTR [rsi]
  43cb4b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3cfb1
  43cb51:	push   rax
  43cb52:	add    al,al
  43cb54:	add    DWORD PTR [rax],edx
  43cb56:	or     DWORD PTR [rax],eax
  43cb58:	adc    dl,ah
  43cb5a:	or     al,0x30
  43cb5c:	or     esp,DWORD PTR [rax+0xa]
  43cb5f:	jo     0x43cb6a
  43cb61:	push   rax
  43cb62:	or     al,al
  43cb64:	(bad)  
  43cb65:	rol    BYTE PTR [rax+riz*8],1
  43cb68:	add    dh,al
  43cb6a:	add    BYTE PTR [rax],al
  43cb6c:	add    DWORD PTR [rax],ecx
  43cb6e:	add    eax,0x4420800
  43cb73:	xor    BYTE PTR [rbx],al
  43cb75:	(bad)  
  43cb76:	add    dh,BYTE PTR [rax+0x1]
  43cb79:	push   rax
  43cb7a:	add    BYTE PTR [rax],al
  43cb7c:	add    DWORD PTR [rdi+rax*1],ecx
  43cb7f:	add    BYTE PTR [rdx+riz*2],cl
  43cb82:	or     BYTE PTR [rax],dh
  43cb84:	(bad)  
  43cb85:	(bad)  
  43cb86:	(bad)  
  43cb87:	jo     0x43cb8e
  43cb89:	push   rax
  43cb8a:	add    al,0xc0
  43cb8c:	add    dl,al
  43cb8e:	add    BYTE PTR [rax],al
  43cb90:	add    DWORD PTR [rdi+rax*1],ecx
  43cb93:	add    BYTE PTR [rdx+riz*8],cl
  43cb96:	or     BYTE PTR [rax],dh
  43cb98:	(bad)  
  43cb99:	(bad)  
  43cb9a:	(bad)  
  43cb9b:	jo     0x43cba2
  43cb9d:	push   rax
  43cb9e:	add    al,0xc0
  43cba0:	add    dl,al
  43cba2:	add    BYTE PTR [rax],al
  43cba4:	add    DWORD PTR [rdi],eax
  43cba6:	add    al,0x0
  43cba8:	(bad)  
  43cba9:	jb     0x43cbae
  43cbab:	xor    BYTE PTR [rdx],al
  43cbad:	(bad)  
  43cbae:	add    DWORD PTR [rax+0x1],esi
  43cbb1:	or     BYTE PTR [rip+0x4820800],al        # 0x4c5d3b7
  43cbb7:	xor    BYTE PTR [rbx],al
  43cbb9:	(bad)  
  43cbba:	add    dh,BYTE PTR [rax+0x1]
  43cbbd:	push   rax
  43cbbe:	add    BYTE PTR [rax],al
  43cbc0:	add    DWORD PTR [rdi+rax*1],ecx
  43cbc3:	add    BYTE PTR [rdx+riz*4],cl
  43cbc6:	or     BYTE PTR [rax],dh
  43cbc8:	(bad)  
  43cbc9:	(bad)  
  43cbca:	(bad)  
  43cbcb:	jo     0x43cbd2
  43cbcd:	push   rax
  43cbce:	add    al,0xc0
  43cbd0:	add    dl,al
  43cbd2:	add    BYTE PTR [rax],al
  43cbd4:	add    DWORD PTR [rdi],eax
  43cbd6:	add    al,0x0
  43cbd8:	(bad)  
  43cbd9:	push   rdx
  43cbda:	add    esi,DWORD PTR [rax]
  43cbdc:	add    ah,BYTE PTR [rax+0x1]
  43cbdf:	jo     0x43cbe2
  43cbe1:	(bad)  
  43cbe2:	add    eax,DWORD PTR [rax]
  43cbe4:	(bad)  
  43cbe5:	rex.X add sil,BYTE PTR [rax]
  43cbe8:	add    DWORD PTR [rax+0x0],esp
  43cbeb:	add    BYTE PTR [rcx],al
  43cbed:	(bad)  
  43cbee:	add    al,0x0
  43cbf0:	(bad)  
  43cbf1:	xor    al,BYTE PTR [rbx]
  43cbf3:	xor    BYTE PTR [rdx],al
  43cbf5:	(bad)  
  43cbf6:	add    DWORD PTR [rax+0x1],esi
  43cbf9:	add    eax,0x32050002
  43cbfe:	add    DWORD PTR [rax],esi
  43cc00:	add    DWORD PTR [rax],ecx
  43cc02:	add    eax,0x4420800
  43cc07:	xor    BYTE PTR [rbx],al
  43cc09:	(bad)  
  43cc0a:	add    dh,BYTE PTR [rax+0x1]
  43cc0d:	push   rax
  43cc0e:	add    BYTE PTR [rax],al
  43cc10:	add    DWORD PTR [rdi],eax
  43cc12:	add    al,0x0
  43cc14:	(bad)  
  43cc15:	xor    al,BYTE PTR [rbx]
  43cc17:	xor    BYTE PTR [rdx],al
  43cc19:	(bad)  
  43cc1a:	add    DWORD PTR [rax+0x1],esi
  43cc1d:	invd   
  43cc1f:	add    BYTE PTR [rdi],cl
  43cc21:	add    DWORD PTR [rcx],esp
  43cc23:	add    BYTE PTR [rax],cl
  43cc25:	xor    BYTE PTR [rdi],al
  43cc27:	(bad)  
  43cc28:	(bad)  
  43cc29:	jo     0x43cc30
  43cc2b:	push   rax
  43cc2c:	add    al,0xc0
  43cc2e:	add    dl,al
  43cc30:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248cc38
  43cc36:	add    DWORD PTR [rax],esi
  43cc38:	add    DWORD PTR [rsi],eax
  43cc3a:	add    eax,DWORD PTR [rax]
  43cc3c:	(bad)  
  43cc3d:	rex.X add sil,BYTE PTR [rax]
  43cc40:	add    DWORD PTR [rax+0x0],esp
  43cc43:	add    BYTE PTR [rcx],al
  43cc45:	(bad)  
  43cc46:	add    eax,DWORD PTR [rax]
  43cc48:	(bad)  
  43cc49:	rex.X add sil,BYTE PTR [rax]
  43cc4c:	add    DWORD PTR [rax+0x0],esp
  43cc4f:	add    BYTE PTR [rcx],al
  43cc51:	(bad)  
  43cc52:	add    al,0x0
  43cc54:	(bad)  
  43cc55:	xor    al,BYTE PTR [rbx]
  43cc57:	xor    BYTE PTR [rdx],al
  43cc59:	(bad)  
  43cc5a:	add    DWORD PTR [rax+0x1],esi
  43cc5d:	(bad)  
  43cc5e:	add    eax,DWORD PTR [rax]
  43cc60:	(bad)  
  43cc61:	rex.X add sil,BYTE PTR [rax]
  43cc64:	add    DWORD PTR [rax+0x0],esp
  43cc67:	add    BYTE PTR [rcx],al
  43cc69:	add    eax,0x32050002
  43cc6e:	add    DWORD PTR [rax],esi
  43cc70:	add    DWORD PTR [rax],eax
  43cc72:	add    BYTE PTR [rax],al
  43cc74:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248cc7c
  43cc7a:	add    DWORD PTR [rax],esi
  43cc7c:	add    DWORD PTR [rdi+rax*1],ecx
  43cc7f:	add    BYTE PTR [rdx+rax*2],cl
  43cc82:	or     BYTE PTR [rax],dh
  43cc84:	(bad)  
  43cc85:	(bad)  
  43cc86:	(bad)  
  43cc87:	jo     0x43cc8e
  43cc89:	push   rax
  43cc8a:	add    al,0xc0
  43cc8c:	add    dl,al
  43cc8e:	add    BYTE PTR [rax],al
  43cc90:	add    DWORD PTR [rdi+rax*1],ecx
  43cc93:	add    BYTE PTR [rdx+rax*4],cl
  43cc96:	or     BYTE PTR [rax],dh
  43cc98:	(bad)  
  43cc99:	(bad)  
  43cc9a:	(bad)  
  43cc9b:	jo     0x43cca2
  43cc9d:	push   rax
  43cc9e:	add    al,0xc0
  43cca0:	add    dl,al
  43cca2:	add    BYTE PTR [rax],al
  43cca4:	add    DWORD PTR [rdi+rax*1],ecx
  43cca7:	add    BYTE PTR [rdx+rax*2],cl
  43ccaa:	or     BYTE PTR [rax],dh
  43ccac:	(bad)  
  43ccad:	(bad)  
  43ccae:	(bad)  
  43ccaf:	jo     0x43ccb6
  43ccb1:	push   rax
  43ccb2:	add    al,0xc0
  43ccb4:	add    dl,al
  43ccb6:	add    BYTE PTR [rax],al
  43ccb8:	add    DWORD PTR [rdi],eax
  43ccba:	add    al,0x0
  43ccbc:	(bad)  
  43ccbd:	xor    al,BYTE PTR [rbx]
  43ccbf:	xor    BYTE PTR [rdx],al
  43ccc1:	(bad)  
  43ccc2:	add    DWORD PTR [rax+0x1],esi
  43ccc5:	(bad)  
  43ccc6:	add    al,0x0
  43ccc8:	(bad)  
  43ccc9:	xor    al,BYTE PTR [rbx]
  43cccb:	xor    BYTE PTR [rdx],al
  43cccd:	(bad)  
  43ccce:	add    DWORD PTR [rax+0x1],esi
  43ccd1:	adc    ecx,DWORD PTR [rdx]
  43ccd3:	add    BYTE PTR [rbx],dl
  43ccd5:	add    DWORD PTR [rdi],edx
  43ccd7:	add    BYTE PTR [rax+rsi*1],cl
  43ccda:	or     esp,DWORD PTR [rax+0xa]
  43ccdd:	jo     0x43cce8
  43ccdf:	push   rax
  43cce0:	or     al,al
  43cce2:	(bad)  
  43cce3:	rol    BYTE PTR [rax+riz*8],1
  43cce6:	add    dh,al
  43cce8:	add    DWORD PTR [rdi],eax
  43ccea:	add    al,0x0
  43ccec:	(bad)  
  43cced:	xor    al,BYTE PTR [rbx]
  43ccef:	xor    BYTE PTR [rdx],al
  43ccf1:	(bad)  
  43ccf2:	add    DWORD PTR [rax+0x1],esi
  43ccf5:	(bad)  
  43ccf6:	add    al,0x0
  43ccf8:	(bad)  
  43ccf9:	xor    al,BYTE PTR [rbx]
  43ccfb:	xor    BYTE PTR [rdx],al
  43ccfd:	(bad)  
  43ccfe:	add    DWORD PTR [rax+0x1],esi
  43cd01:	adc    ecx,DWORD PTR [rdx]
  43cd03:	add    BYTE PTR [rbx],dl
  43cd05:	add    DWORD PTR [rcx],esp
  43cd07:	add    BYTE PTR [rax+rsi*1],cl
  43cd0a:	or     esp,DWORD PTR [rax+0xa]
  43cd0d:	jo     0x43cd18
  43cd0f:	push   rax
  43cd10:	or     al,al
  43cd12:	(bad)  
  43cd13:	rol    BYTE PTR [rax+riz*8],1
  43cd16:	add    dh,al
  43cd18:	add    DWORD PTR [rax],ecx
  43cd1a:	add    eax,0x4420800
  43cd1f:	xor    BYTE PTR [rbx],al
  43cd21:	(bad)  
  43cd22:	add    dh,BYTE PTR [rax+0x1]
  43cd25:	push   rax
  43cd26:	add    BYTE PTR [rax],al
  43cd28:	add    DWORD PTR [rsi],eax
  43cd2a:	add    eax,DWORD PTR [rax]
  43cd2c:	(bad)  
  43cd2d:	rex.X add sil,BYTE PTR [rax]
  43cd30:	add    DWORD PTR [rax+0x0],esp
  43cd33:	add    BYTE PTR [rcx],al
  43cd35:	add    eax,0x32050002
  43cd3a:	add    DWORD PTR [rax],esi
  43cd3c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248cd44
  43cd42:	add    DWORD PTR [rax],esi
  43cd44:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248cd4c
  43cd4a:	add    DWORD PTR [rax],esi
  43cd4c:	add    DWORD PTR [rax],ecx
  43cd4e:	add    eax,0x4420800
  43cd53:	xor    BYTE PTR [rbx],al
  43cd55:	(bad)  
  43cd56:	add    dh,BYTE PTR [rax+0x1]
  43cd59:	push   rax
  43cd5a:	add    BYTE PTR [rax],al
  43cd5c:	add    DWORD PTR [rbx],ecx
  43cd5e:	(bad)  
  43cd5f:	add    BYTE PTR [rbx],cl
  43cd61:	add    DWORD PTR [rip+0x3300400],edx        # 0x373d167
  43cd67:	(bad)  
  43cd68:	add    dh,BYTE PTR [rax+0x1]
  43cd6b:	push   rax
  43cd6c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248cd74
  43cd72:	add    DWORD PTR [rax],esi
  43cd74:	add    DWORD PTR [rsi],eax
  43cd76:	add    eax,DWORD PTR [rax]
  43cd78:	(bad)  
  43cd79:	movabs ds:0x601000060013002,al
  43cd82:	add    eax,DWORD PTR [rax]
  43cd84:	(bad)  
  43cd85:	loop   0x43cd89
  43cd87:	xor    BYTE PTR [rcx],al
  43cd89:	jo     0x43cd8b
  43cd8b:	add    BYTE PTR [rcx],al
  43cd8d:	or     DWORD PTR [rax+rax*1],eax
  43cd90:	or     DWORD PTR [rcx],eax
  43cd92:	sub    DWORD PTR [rax],eax
  43cd94:	add    dh,BYTE PTR [rax]
  43cd96:	add    DWORD PTR [rax+0x1],esp
  43cd99:	add    BYTE PTR [rax],al
  43cd9b:	add    BYTE PTR [rcx],al
  43cd9d:	add    eax,0x32050002
  43cda2:	add    DWORD PTR [rax],esi
  43cda4:	add    DWORD PTR [rdi],eax
  43cda6:	add    al,0x0
  43cda8:	(bad)  
  43cda9:	push   rdx
  43cdaa:	add    esi,DWORD PTR [rax]
  43cdac:	add    ah,BYTE PTR [rax+0x1]
  43cdaf:	jo     0x43cdb2
  43cdb1:	(bad)  
  43cdb2:	add    eax,DWORD PTR [rax]
  43cdb4:	(bad)  
  43cdb5:	rex.X add sil,BYTE PTR [rax]
  43cdb8:	add    DWORD PTR [rax+0x0],esp
  43cdbb:	add    BYTE PTR [rcx],al
  43cdbd:	(bad)  
  43cdbe:	add    eax,DWORD PTR [rax]
  43cdc0:	(bad)  
  43cdc1:	rex.X add sil,BYTE PTR [rax]
  43cdc4:	add    DWORD PTR [rax+0x0],esp
  43cdc7:	add    BYTE PTR [rcx],al
  43cdc9:	add    BYTE PTR [rax],al
  43cdcb:	add    BYTE PTR [rcx],al
  43cdcd:	add    BYTE PTR [rax],al
  43cdcf:	add    BYTE PTR [rcx],al
  43cdd1:	(bad)  
  43cdd2:	add    al,0x0
  43cdd4:	(bad)  
  43cdd5:	xor    al,BYTE PTR [rbx]
  43cdd7:	xor    BYTE PTR [rdx],al
  43cdd9:	(bad)  
  43cdda:	add    DWORD PTR [rax+0x1],esi
  43cddd:	add    BYTE PTR [rax],al
  43cddf:	add    BYTE PTR [rcx],al
  43cde1:	(bad)  
  43cde2:	add    eax,DWORD PTR [rax]
  43cde4:	(bad)  
  43cde5:	(bad)  
  43cde7:	xor    BYTE PTR [rcx],al
  43cde9:	(bad)  
  43cdea:	add    BYTE PTR [rax],al
  43cdec:	add    DWORD PTR [rax],eax
  43cdee:	add    BYTE PTR [rax],al
  43cdf0:	add    DWORD PTR [rax],ecx
  43cdf2:	add    eax,0x4c20800
  43cdf7:	xor    BYTE PTR [rbx],al
  43cdf9:	(bad)  
  43cdfa:	add    dh,BYTE PTR [rax+0x1]
  43cdfd:	push   rax
  43cdfe:	add    BYTE PTR [rax],al
  43ce00:	add    DWORD PTR [rax],eax
  43ce02:	add    BYTE PTR [rax],al
  43ce04:	add    DWORD PTR [rdi],eax
  43ce06:	add    al,0x0
  43ce08:	(bad)  
  43ce09:	xor    al,BYTE PTR [rbx]
  43ce0b:	xor    BYTE PTR [rdx],al
  43ce0d:	(bad)  
  43ce0e:	add    DWORD PTR [rax+0x1],esi
  43ce11:	add    BYTE PTR [rax],al
  43ce13:	add    BYTE PTR [rcx],al
  43ce15:	or     al,BYTE PTR [rsi]
  43ce17:	add    BYTE PTR [rdx],cl
  43ce19:	mov    dl,0x6
  43ce1b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3d281
  43ce21:	push   rax
  43ce22:	add    al,al
  43ce24:	add    DWORD PTR [rsi],eax
  43ce26:	add    eax,DWORD PTR [rax]
  43ce28:	(bad)  
  43ce29:	rex.X add sil,BYTE PTR [rax]
  43ce2c:	add    DWORD PTR [rax+0x0],esp
  43ce2f:	add    BYTE PTR [rcx],al
  43ce31:	add    BYTE PTR [rax],al
  43ce33:	add    BYTE PTR [rcx],al
  43ce35:	adc    BYTE PTR [rcx],cl
  43ce37:	add    BYTE PTR [rax],dl
  43ce39:	movabs ds:0x5009700a600b300c,al
  43ce42:	or     al,al
  43ce44:	(bad)  
  43ce45:	rol    BYTE PTR [rax+riz*8],1
  43ce48:	add    dh,al
  43ce4a:	add    BYTE PTR [rax],al
  43ce4c:	add    DWORD PTR [rsi],eax
  43ce4e:	add    eax,DWORD PTR [rax]
  43ce50:	(bad)  
  43ce51:	rex.X add sil,BYTE PTR [rax]
  43ce54:	add    DWORD PTR [rax+0x0],esp
  43ce57:	add    BYTE PTR [rcx],al
  43ce59:	add    BYTE PTR [rax],al
  43ce5b:	add    BYTE PTR [rcx],al
  43ce5d:	or     BYTE PTR [rip+0x4420800],al        # 0x485d663
  43ce63:	xor    BYTE PTR [rbx],al
  43ce65:	(bad)  
  43ce66:	add    dh,BYTE PTR [rax+0x1]
  43ce69:	push   rax
  43ce6a:	add    BYTE PTR [rax],al
  43ce6c:	add    DWORD PTR [rsi],eax
  43ce6e:	add    eax,DWORD PTR [rax]
  43ce70:	(bad)  
  43ce71:	rex.X add sil,BYTE PTR [rax]
  43ce74:	add    DWORD PTR [rax+0x0],esp
  43ce77:	add    BYTE PTR [rcx],al
  43ce79:	add    BYTE PTR [rax],al
  43ce7b:	add    BYTE PTR [rcx],al
  43ce7d:	(bad)  
  43ce7e:	add    al,0x0
  43ce80:	(bad)  
  43ce81:	xchg   edx,eax
  43ce82:	add    esi,DWORD PTR [rax]
  43ce84:	add    ah,BYTE PTR [rax+0x1]
  43ce87:	jo     0x43ce8a
  43ce89:	add    BYTE PTR [rax],al
  43ce8b:	add    BYTE PTR [rcx],al
  43ce8d:	add    BYTE PTR [rax],al
  43ce8f:	add    BYTE PTR [rcx],al
  43ce91:	add    eax,0x32050002
  43ce96:	add    DWORD PTR [rax],esi
  43ce98:	add    DWORD PTR [rax],eax
  43ce9a:	add    BYTE PTR [rax],al
  43ce9c:	add    DWORD PTR [rax],ecx
  43ce9e:	add    eax,0x4620800
  43cea3:	xor    BYTE PTR [rbx],al
  43cea5:	(bad)  
  43cea6:	add    dh,BYTE PTR [rax+0x1]
  43cea9:	push   rax
  43ceaa:	add    BYTE PTR [rax],al
  43ceac:	add    DWORD PTR [rcx+rax*1],eax
  43ceaf:	add    BYTE PTR [rdx+rax*2],al
  43ceb2:	add    BYTE PTR [rax],al
  43ceb4:	add    DWORD PTR [rcx+rax*1],eax
  43ceb7:	add    BYTE PTR [rdx+riz*2],al
  43ceba:	add    BYTE PTR [rax],al
  43cebc:	add    DWORD PTR [rsi],eax
  43cebe:	add    eax,DWORD PTR [rax]
  43cec0:	(bad)  
  43cec1:	rex.X add sil,BYTE PTR [rax]
  43cec4:	add    DWORD PTR [rax+0x0],esp
  43cec7:	add    BYTE PTR [rcx],al
  43cec9:	add    BYTE PTR [rax],al
  43cecb:	add    BYTE PTR [rcx],al
  43cecd:	add    eax,0x32050002
  43ced2:	add    DWORD PTR [rax],esi
  43ced4:	add    DWORD PTR [rsi],eax
  43ced6:	add    eax,DWORD PTR [rax]
  43ced8:	(bad)  
  43ced9:	rex.X add sil,BYTE PTR [rax]
  43cedc:	add    DWORD PTR [rax+0x0],esp
  43cedf:	add    BYTE PTR [rcx],al
  43cee1:	add    BYTE PTR [rax],al
  43cee3:	add    BYTE PTR [rcx],al
  43cee5:	(bad)  
  43cee6:	add    al,0x0
  43cee8:	(bad)  
  43cee9:	xor    al,BYTE PTR [rbx]
  43ceeb:	xor    BYTE PTR [rdx],al
  43ceed:	(bad)  
  43ceee:	add    DWORD PTR [rax+0x1],esi
  43cef1:	add    eax,0x32050002
  43cef6:	add    DWORD PTR [rax],esi
  43cef8:	add    DWORD PTR [rax],eax
  43cefa:	add    BYTE PTR [rax],al
  43cefc:	add    DWORD PTR [rsi],eax
  43cefe:	add    eax,DWORD PTR [rax]
  43cf00:	(bad)  
  43cf01:	rex.X add sil,BYTE PTR [rax]
  43cf04:	add    DWORD PTR [rax+0x0],esp
  43cf07:	add    BYTE PTR [rcx],al
  43cf09:	add    BYTE PTR [rax],al
  43cf0b:	add    BYTE PTR [rcx],al
  43cf0d:	add    BYTE PTR [rax],al
  43cf0f:	add    BYTE PTR [rcx],al
  43cf11:	(bad)  
  43cf12:	add    al,0x0
  43cf14:	(bad)  
  43cf15:	xor    al,BYTE PTR [rbx]
  43cf17:	xor    BYTE PTR [rdx],al
  43cf19:	(bad)  
  43cf1a:	add    DWORD PTR [rax+0x1],esi
  43cf1d:	(bad)  
  43cf1e:	add    al,0x0
  43cf20:	(bad)  
  43cf21:	xor    al,BYTE PTR [rbx]
  43cf23:	xor    BYTE PTR [rdx],al
  43cf25:	(bad)  
  43cf26:	add    DWORD PTR [rax+0x1],esi
  43cf29:	adc    BYTE PTR [rcx],cl
  43cf2b:	add    BYTE PTR [rax],dl
  43cf2d:	ret    0x300c
  43cf30:	or     esp,DWORD PTR [rax+0xa]
  43cf33:	jo     0x43cf3e
  43cf35:	push   rax
  43cf36:	or     al,al
  43cf38:	(bad)  
  43cf39:	rol    BYTE PTR [rax+riz*8],1
  43cf3c:	add    dh,al
  43cf3e:	add    BYTE PTR [rax],al
  43cf40:	add    DWORD PTR [rax],eax
  43cf42:	add    BYTE PTR [rax],al
  43cf44:	add    DWORD PTR [rsi],eax
  43cf46:	add    eax,DWORD PTR [rax]
  43cf48:	(bad)  
  43cf49:	rex.X add sil,BYTE PTR [rax]
  43cf4c:	add    DWORD PTR [rax+0x0],esp
  43cf4f:	add    BYTE PTR [rcx],al
  43cf51:	add    eax,0x32050002
  43cf56:	add    DWORD PTR [rax],esi
  43cf58:	add    DWORD PTR [rdi],eax
  43cf5a:	add    al,BYTE PTR [rax]
  43cf5c:	(bad)  
  43cf5d:	add    DWORD PTR [rcx],edi
  43cf5f:	add    BYTE PTR [rcx],al
  43cf61:	add    BYTE PTR [rax],al
  43cf63:	add    BYTE PTR [rcx],al
  43cf65:	add    al,0x1
  43cf67:	add    BYTE PTR [rdx+riz*2],al
  43cf6a:	add    BYTE PTR [rax],al
  43cf6c:	add    DWORD PTR [rip+0x72050002],eax        # 0x7248cf74
  43cf72:	add    DWORD PTR [rax],esi
  43cf74:	add    DWORD PTR [rax],eax
  43cf76:	add    BYTE PTR [rax],al
  43cf78:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248cf80
  43cf7e:	add    DWORD PTR [rax],esi
  43cf80:	add    DWORD PTR [rip+0x52050002],eax        # 0x5248cf88
  43cf86:	add    DWORD PTR [rax],esi
  43cf88:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248cf90
  43cf8e:	add    DWORD PTR [rax],esi
  43cf90:	add    DWORD PTR [rcx+rax*1],eax
  43cf93:	add    BYTE PTR [rdx+rax*2],al
  43cf96:	add    BYTE PTR [rax],al
  43cf98:	add    DWORD PTR [rax],eax
  43cf9a:	add    BYTE PTR [rax],al
  43cf9c:	add    DWORD PTR [rip+0xffffffff92050002],eax        # 0xffffffff9248cfa4
  43cfa2:	add    DWORD PTR [rax],esi
  43cfa4:	add    DWORD PTR [rax],edx
  43cfa6:	or     DWORD PTR [rax],eax
  43cfa8:	adc    dl,al
  43cfaa:	or     al,0x30
  43cfac:	or     esp,DWORD PTR [rax+0xa]
  43cfaf:	jo     0x43cfba
  43cfb1:	push   rax
  43cfb2:	or     al,al
  43cfb4:	(bad)  
  43cfb5:	rol    BYTE PTR [rax+riz*8],1
  43cfb8:	add    dh,al
  43cfba:	add    BYTE PTR [rax],al
  43cfbc:	add    DWORD PTR [rax],edx
  43cfbe:	or     DWORD PTR [rax],eax
  43cfc0:	adc    BYTE PTR [rdx+0x600b300c],al
  43cfc6:	or     dh,BYTE PTR [rax+0x9]
  43cfc9:	push   rax
  43cfca:	or     al,al
  43cfcc:	(bad)  
  43cfcd:	rol    BYTE PTR [rax+riz*8],1
  43cfd0:	add    dh,al
  43cfd2:	add    BYTE PTR [rax],al
  43cfd4:	add    DWORD PTR [rcx+rax*1],eax
  43cfd7:	add    BYTE PTR [rdx+rax*2],al
  43cfda:	add    BYTE PTR [rax],al
  43cfdc:	add    DWORD PTR [rbx],edx
  43cfde:	or     al,BYTE PTR [rax]
  43cfe0:	adc    eax,DWORD PTR [rcx]
  43cfe2:	(bad)  
  43cfe3:	add    BYTE PTR [rax+rsi*1],cl
  43cfe6:	or     esp,DWORD PTR [rax+0xa]
  43cfe9:	jo     0x43cff4
  43cfeb:	push   rax
  43cfec:	or     al,al
  43cfee:	(bad)  
  43cfef:	rol    BYTE PTR [rax+riz*8],1
  43cff2:	add    dh,al
  43cff4:	add    DWORD PTR [rax],edx
  43cff6:	or     DWORD PTR [rax],eax
  43cff8:	adc    BYTE PTR [rdx+0x600b300c],al
  43cffe:	or     dh,BYTE PTR [rax+0x9]
  43d001:	push   rax
  43d002:	or     al,al
  43d004:	(bad)  
  43d005:	rol    BYTE PTR [rax+riz*8],1
  43d008:	add    dh,al
  43d00a:	add    BYTE PTR [rax],al
  43d00c:	add    DWORD PTR [rcx+rax*1],eax
  43d00f:	add    BYTE PTR [rdx+rax*2],al
  43d012:	add    BYTE PTR [rax],al
  43d014:	add    DWORD PTR [rcx],ebx
  43d016:	or     al,BYTE PTR [rax]
  43d018:	sbb    DWORD PTR [rcx],eax
  43d01a:	sbb    eax,0x10301108
  43d01f:	(bad)  
  43d020:	pshufw mm1,QWORD PTR [rsi],0x50
  43d024:	or     eax,0x4d00bc0
  43d029:	loopne 0x43d02d
  43d02b:	lock add DWORD PTR [rbx],edx
  43d02e:	or     al,BYTE PTR [rax]
  43d030:	adc    eax,DWORD PTR [rcx]
  43d032:	movabs eax,ds:0x9700a600b300c00
  43d03b:	push   rax
  43d03c:	or     al,al
  43d03e:	(bad)  
  43d03f:	rol    BYTE PTR [rax+riz*8],1
  43d042:	add    dh,al
  43d044:	add    DWORD PTR [rax],eax
  43d046:	add    BYTE PTR [rax],al
  43d048:	add    DWORD PTR [rdi],eax
  43d04a:	add    al,0x0
  43d04c:	(bad)  
  43d04d:	xor    al,BYTE PTR [rbx]
  43d04f:	xor    BYTE PTR [rdx],al
  43d051:	(bad)  
  43d052:	add    DWORD PTR [rax+0x1],esi
  43d055:	(bad)  
  43d056:	add    al,0x0
  43d058:	(bad)  
  43d059:	xor    al,BYTE PTR [rbx]
  43d05b:	xor    BYTE PTR [rdx],al
  43d05d:	(bad)  
  43d05e:	add    DWORD PTR [rax+0x1],esi
  43d061:	(bad)  
  43d062:	add    al,0x0
  43d064:	(bad)  
  43d065:	xor    al,BYTE PTR [rbx]
  43d067:	xor    BYTE PTR [rdx],al
  43d069:	(bad)  
  43d06a:	add    DWORD PTR [rax+0x1],esi
  43d06d:	(bad)  
  43d06e:	add    al,0x0
  43d070:	(bad)  
  43d071:	xor    al,BYTE PTR [rbx]
  43d073:	xor    BYTE PTR [rdx],al
  43d075:	(bad)  
  43d076:	add    DWORD PTR [rax+0x1],esi
  43d079:	(bad)  
  43d07a:	add    al,0x0
  43d07c:	(bad)  
  43d07d:	push   rdx
  43d07e:	add    esi,DWORD PTR [rax]
  43d080:	add    ah,BYTE PTR [rax+0x1]
  43d083:	jo     0x43d086
  43d085:	add    al,0x1
  43d087:	add    BYTE PTR [rdx+riz*2],al
  43d08a:	add    BYTE PTR [rax],al
  43d08c:	add    DWORD PTR [rax],ecx
  43d08e:	add    eax,0x4820800
  43d093:	xor    BYTE PTR [rbx],al
  43d095:	(bad)  
  43d096:	add    dh,BYTE PTR [rax+0x1]
  43d099:	push   rax
  43d09a:	add    BYTE PTR [rax],al
  43d09c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248d0a4
  43d0a2:	add    DWORD PTR [rax],esi
  43d0a4:	add    DWORD PTR [rax],eax
  43d0a6:	add    BYTE PTR [rax],al
  43d0a8:	add    DWORD PTR [rdi],ecx
  43d0aa:	or     BYTE PTR [rax],al
  43d0ac:	lgdt   [rip+0x7300800]        # 0x773d8b3
  43d0b3:	(bad)  
  43d0b4:	(bad)  
  43d0b5:	jo     0x43d0bc
  43d0b7:	push   rax
  43d0b8:	add    al,0xc0
  43d0ba:	add    dl,al
  43d0bc:	add    DWORD PTR [rsi],eax
  43d0be:	add    eax,DWORD PTR [rax]
  43d0c0:	(bad)  
  43d0c1:	rex.X add spl,BYTE PTR [rax+0x1]
  43d0c5:	jo     0x43d0c7
  43d0c7:	add    BYTE PTR [rcx],al
  43d0c9:	add    al,0x1
  43d0cb:	add    BYTE PTR [rdx+rax*2],al
  43d0ce:	add    BYTE PTR [rax],al
  43d0d0:	add    DWORD PTR [rcx+rax*1],eax
  43d0d3:	add    BYTE PTR [rdx+rax*2],al
  43d0d6:	add    BYTE PTR [rax],al
  43d0d8:	add    DWORD PTR [rax],eax
  43d0da:	add    BYTE PTR [rax],al
  43d0dc:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248d0e4
  43d0e2:	add    DWORD PTR [rax],esi
  43d0e4:	add    DWORD PTR [rbx],edx
  43d0e6:	or     al,BYTE PTR [rax]
  43d0e8:	adc    eax,DWORD PTR [rcx]
  43d0ea:	sbb    eax,DWORD PTR [rax]
  43d0ec:	or     al,0x30
  43d0ee:	or     esp,DWORD PTR [rax+0xa]
  43d0f1:	jo     0x43d0fc
  43d0f3:	push   rax
  43d0f4:	or     al,al
  43d0f6:	(bad)  
  43d0f7:	rol    BYTE PTR [rax+riz*8],1
  43d0fa:	add    dh,al
  43d0fc:	add    DWORD PTR [rax],ecx
  43d0fe:	add    eax,0x4620800
  43d103:	xor    BYTE PTR [rbx],al
  43d105:	(bad)  
  43d106:	add    dh,BYTE PTR [rax+0x1]
  43d109:	push   rax
  43d10a:	add    BYTE PTR [rax],al
  43d10c:	add    DWORD PTR [rbx],ecx
  43d10e:	(bad)  
  43d10f:	add    BYTE PTR [rbx],cl
  43d111:	add    DWORD PTR [rdi],edx
  43d113:	add    BYTE PTR [rax+rsi*1],al
  43d116:	add    esp,DWORD PTR [rax+0x2]
  43d119:	jo     0x43d11c
  43d11b:	push   rax
  43d11c:	add    DWORD PTR [rax],ecx
  43d11e:	add    eax,0x4620800
  43d123:	xor    BYTE PTR [rbx],al
  43d125:	(bad)  
  43d126:	add    dh,BYTE PTR [rax+0x1]
  43d129:	push   rax
  43d12a:	add    BYTE PTR [rax],al
  43d12c:	add    DWORD PTR [rax],eax
  43d12e:	add    BYTE PTR [rax],al
  43d130:	add    DWORD PTR [rax],ecx
  43d132:	add    eax,0x4820800
  43d137:	xor    BYTE PTR [rbx],al
  43d139:	(bad)  
  43d13a:	add    dh,BYTE PTR [rax+0x1]
  43d13d:	push   rax
  43d13e:	add    BYTE PTR [rax],al
  43d140:	add    DWORD PTR [rax],ecx
  43d142:	add    eax,0x4620800
  43d147:	xor    BYTE PTR [rbx],al
  43d149:	(bad)  
  43d14a:	add    dh,BYTE PTR [rax+0x1]
  43d14d:	push   rax
  43d14e:	add    BYTE PTR [rax],al
  43d150:	add    DWORD PTR [rsi],eax
  43d152:	add    eax,DWORD PTR [rax]
  43d154:	(bad)  
  43d155:	(bad)  
  43d156:	add    dh,BYTE PTR [rax]
  43d158:	add    DWORD PTR [rax+0x0],esp
  43d15b:	add    BYTE PTR [rcx],al
  43d15d:	(bad)  
  43d15e:	add    eax,DWORD PTR [rax]
  43d160:	(bad)  
  43d161:	rex.X add sil,BYTE PTR [rax]
  43d164:	add    DWORD PTR [rax+0x0],esp
  43d167:	add    BYTE PTR [rcx],al
  43d169:	(bad)  
  43d16a:	add    eax,DWORD PTR [rax]
  43d16c:	(bad)  
  43d16d:	rex.X add sil,BYTE PTR [rax]
  43d170:	add    DWORD PTR [rax+0x0],esp
  43d173:	add    BYTE PTR [rcx],al
  43d175:	(bad)  
  43d176:	add    al,0x0
  43d178:	(bad)  
  43d179:	xor    al,BYTE PTR [rbx]
  43d17b:	xor    BYTE PTR [rdx],al
  43d17d:	(bad)  
  43d17e:	add    DWORD PTR [rax+0x1],esi
  43d181:	(bad)  
  43d182:	add    eax,DWORD PTR [rax]
  43d184:	(bad)  
  43d185:	rex.X add sil,BYTE PTR [rax]
  43d188:	add    DWORD PTR [rax+0x0],esp
  43d18b:	add    BYTE PTR [rcx],al
  43d18d:	(bad)  
  43d18e:	add    al,0x0
  43d190:	(bad)  
  43d191:	xor    al,BYTE PTR [rbx]
  43d193:	xor    BYTE PTR [rdx],al
  43d195:	(bad)  
  43d196:	add    DWORD PTR [rax+0x1],esi
  43d199:	sbb    DWORD PTR [rdx],ecx
  43d19b:	add    BYTE PTR [rcx],bl
  43d19d:	add    DWORD PTR [rcx],edx
  43d19f:	add    dl,BYTE PTR [rcx]
  43d1a1:	xor    BYTE PTR [rax],dl
  43d1a3:	(bad)  
  43d1a4:	pshufw mm1,QWORD PTR [rsi],0x50
  43d1a8:	or     eax,0x4d00bc0
  43d1ad:	loopne 0x43d1b1
  43d1af:	lock add DWORD PTR [rsi],eax
  43d1b2:	add    eax,DWORD PTR [rax]
  43d1b4:	(bad)  
  43d1b5:	rex.X add sil,BYTE PTR [rax]
  43d1b8:	add    DWORD PTR [rax+0x0],esp
  43d1bb:	add    BYTE PTR [rcx],al
  43d1bd:	add    BYTE PTR [rax],al
  43d1bf:	add    BYTE PTR [rcx],al
  43d1c1:	(bad)  
  43d1c2:	add    al,0x0
  43d1c4:	(bad)  
  43d1c5:	xor    al,BYTE PTR [rbx]
  43d1c7:	xor    BYTE PTR [rdx],al
  43d1c9:	(bad)  
  43d1ca:	add    DWORD PTR [rax+0x1],esi
  43d1cd:	add    BYTE PTR [rax],al
  43d1cf:	add    BYTE PTR [rcx],al
  43d1d1:	add    BYTE PTR [rax],al
  43d1d3:	add    BYTE PTR [rcx],al
  43d1d5:	add    eax,0x52050002
  43d1da:	add    DWORD PTR [rax],esi
  43d1dc:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248d1e4
  43d1e2:	add    DWORD PTR [rax],esi
  43d1e4:	add    DWORD PTR [rsi],eax
  43d1e6:	add    eax,DWORD PTR [rax]
  43d1e8:	(bad)  
  43d1e9:	rex.X add sil,BYTE PTR [rax]
  43d1ec:	add    DWORD PTR [rax+0x0],esp
  43d1ef:	add    BYTE PTR [rcx],al
  43d1f1:	sbb    ecx,DWORD PTR [rbx]
  43d1f3:	test   DWORD PTR [rbx],ebx
  43d1f5:	add    edx,DWORD PTR [rbx]
  43d1f7:	add    DWORD PTR [rbx],ebx
  43d1f9:	add    BYTE PTR [rax+rsi*1],cl
  43d1fc:	or     esp,DWORD PTR [rax+0xa]
  43d1ff:	jo     0x43d20a
  43d201:	rol    BYTE PTR [rdi],0xd0
  43d204:	add    eax,0x1f003e0
  43d209:	push   rax
  43d20a:	add    BYTE PTR [rax],al
  43d20c:	add    DWORD PTR [rbx],edx
  43d20e:	or     al,BYTE PTR [rax]
  43d210:	adc    eax,DWORD PTR [rcx]
  43d212:	test   eax,0xb300c01
  43d217:	(bad)  
  43d218:	or     dh,BYTE PTR [rax+0x9]
  43d21b:	push   rax
  43d21c:	or     al,al
  43d21e:	(bad)  
  43d21f:	rol    BYTE PTR [rax+riz*8],1
  43d222:	add    dh,al
  43d224:	add    DWORD PTR [rdi],eax
  43d226:	add    al,0x0
  43d228:	(bad)  
  43d229:	jb     0x43d22e
  43d22b:	xor    BYTE PTR [rdx],al
  43d22d:	(bad)  
  43d22e:	add    DWORD PTR [rax+0x1],esi
  43d231:	add    BYTE PTR [rax],al
  43d233:	add    BYTE PTR [rcx],al
  43d235:	add    al,0x1
  43d237:	add    BYTE PTR [rdx+rax*2],al
  43d23a:	add    BYTE PTR [rax],al
  43d23c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248d244
  43d242:	add    DWORD PTR [rax],esi
  43d244:	add    DWORD PTR [rdi],ecx
  43d246:	or     BYTE PTR [rax],al
  43d248:	lidt   [rcx]
  43d24b:	add    BYTE PTR [rax],cl
  43d24d:	xor    BYTE PTR [rdi],al
  43d24f:	(bad)  
  43d250:	(bad)  
  43d251:	jo     0x43d258
  43d253:	push   rax
  43d254:	add    al,0xc0
  43d256:	add    dl,al
  43d258:	add    DWORD PTR [rbx],edx
  43d25a:	or     al,BYTE PTR [rax]
  43d25c:	adc    eax,DWORD PTR [rcx]
  43d25e:	and    DWORD PTR [rax],eax
  43d260:	or     al,0x30
  43d262:	or     esp,DWORD PTR [rax+0xa]
  43d265:	jo     0x43d270
  43d267:	push   rax
  43d268:	or     al,al
  43d26a:	(bad)  
  43d26b:	rol    BYTE PTR [rax+riz*8],1
  43d26e:	add    dh,al
  43d270:	add    DWORD PTR [rdi],eax
  43d272:	add    al,0x0
  43d274:	(bad)  
  43d275:	xor    al,BYTE PTR [rbx]
  43d277:	xor    BYTE PTR [rdx],al
  43d279:	(bad)  
  43d27a:	add    DWORD PTR [rax+0x1],esi
  43d27d:	add    eax,0x52050002
  43d282:	add    DWORD PTR [rax],esi
  43d284:	add    DWORD PTR [rcx],edx
  43d286:	or     DWORD PTR [rax],eax
  43d288:	adc    DWORD PTR [rcx],eax
  43d28a:	rol    BYTE PTR [rax],1
  43d28c:	or     dh,BYTE PTR [rax]
  43d28e:	or     DWORD PTR [rax+0x8],esp
  43d291:	jo     0x43d29a
  43d293:	push   rax
  43d294:	(bad)  
  43d295:	rol    BYTE PTR [rax+rdx*8],0x2
  43d299:	loopne 0x43d29b
  43d29b:	add    BYTE PTR [rcx],al
  43d29d:	or     al,BYTE PTR [rip+0x24010a00]        # 0x2444dca3
  43d2a3:	add    BYTE PTR [rbx],al
  43d2a5:	xor    BYTE PTR [rdx],al
  43d2a7:	(bad)  
  43d2a8:	add    DWORD PTR [rax+0x0],esi
  43d2ab:	add    BYTE PTR [rcx],al
  43d2ad:	or     al,0x7
  43d2af:	add    BYTE PTR [rdx+riz*4],cl
  43d2b2:	or     BYTE PTR [rax],dh
  43d2b4:	(bad)  
  43d2b5:	(bad)  
  43d2b6:	(bad)  
  43d2b7:	jo     0x43d2be
  43d2b9:	push   rax
  43d2ba:	add    al,0xc0
  43d2bc:	add    dl,al
  43d2be:	add    BYTE PTR [rax],al
  43d2c0:	add    DWORD PTR [rax],ecx
  43d2c2:	add    eax,0x4820800
  43d2c7:	xor    BYTE PTR [rbx],al
  43d2c9:	(bad)  
  43d2ca:	add    dh,BYTE PTR [rax+0x1]
  43d2cd:	push   rax
  43d2ce:	add    BYTE PTR [rax],al
  43d2d0:	add    DWORD PTR [rax],ecx
  43d2d2:	add    eax,0x4820800
  43d2d7:	xor    BYTE PTR [rbx],al
  43d2d9:	(bad)  
  43d2da:	add    dh,BYTE PTR [rax+0x1]
  43d2dd:	push   rax
  43d2de:	add    BYTE PTR [rax],al
  43d2e0:	add    DWORD PTR [rdx],ecx
  43d2e2:	(bad)  
  43d2e3:	add    BYTE PTR [rdx],cl
  43d2e5:	xor    al,BYTE PTR [rsi]
  43d2e7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3d74d
  43d2ed:	push   rax
  43d2ee:	add    al,al
  43d2f0:	add    DWORD PTR [rax],ecx
  43d2f2:	add    eax,0x4420800
  43d2f7:	xor    BYTE PTR [rbx],al
  43d2f9:	(bad)  
  43d2fa:	add    dh,BYTE PTR [rax+0x1]
  43d2fd:	push   rax
  43d2fe:	add    BYTE PTR [rax],al
  43d300:	add    DWORD PTR [rip+0x52050002],eax        # 0x5248d308
  43d306:	add    DWORD PTR [rax],esi
  43d308:	add    DWORD PTR [rcx+rax*1],eax
  43d30b:	add    BYTE PTR [rdx+rax*2],al
  43d30e:	add    BYTE PTR [rax],al
  43d310:	add    DWORD PTR [rcx+rax*1],eax
  43d313:	add    BYTE PTR [rdx+rax*2],al
  43d316:	add    BYTE PTR [rax],al
  43d318:	add    DWORD PTR [rsi],eax
  43d31a:	add    eax,DWORD PTR [rax]
  43d31c:	(bad)  
  43d31d:	rex.X add sil,BYTE PTR [rax]
  43d320:	add    DWORD PTR [rax+0x0],esp
  43d323:	add    BYTE PTR [rcx],al
  43d325:	add    BYTE PTR [rax],al
  43d327:	add    BYTE PTR [rcx],al
  43d329:	add    BYTE PTR [rax],al
  43d32b:	add    BYTE PTR [rcx],al
  43d32d:	add    BYTE PTR [rax],al
  43d32f:	add    BYTE PTR [rcx],al
  43d331:	or     al,BYTE PTR [rsi]
  43d333:	add    BYTE PTR [rdx],cl
  43d335:	jb     0x43d33d
  43d337:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3d79d
  43d33d:	push   rax
  43d33e:	add    al,al
  43d340:	add    DWORD PTR [rdx],ecx
  43d342:	add    eax,0x6d20a05
  43d347:	add    eax,DWORD PTR [rbx]
  43d349:	xor    BYTE PTR [rdx],al
  43d34b:	(bad)  
  43d34c:	add    DWORD PTR [rax+0x0],edx
  43d34f:	add    BYTE PTR [rcx],al
  43d351:	add    al,0x1
  43d353:	add    BYTE PTR [rdx+rax*2],al
  43d356:	add    BYTE PTR [rax],al
  43d358:	add    DWORD PTR [rsi],eax
  43d35a:	add    eax,DWORD PTR [rax]
  43d35c:	(bad)  
  43d35d:	rex.X add sil,BYTE PTR [rax]
  43d360:	add    DWORD PTR [rax+0x0],esp
  43d363:	add    BYTE PTR [rcx],al
  43d365:	add    BYTE PTR [rax],al
  43d367:	add    BYTE PTR [rcx],al
  43d369:	add    al,0x1
  43d36b:	add    BYTE PTR [rdx+riz*4],al
  43d36e:	add    BYTE PTR [rax],al
  43d370:	add    DWORD PTR [rax],eax
  43d372:	add    BYTE PTR [rax],al
  43d374:	add    DWORD PTR [rsi],edx
  43d376:	or     DWORD PTR [rax],eax
  43d378:	(bad)  
  43d379:	mov    BYTE PTR [rsi],al
  43d37b:	add    BYTE PTR [rax],dl
  43d37d:	js     0x43d384
  43d37f:	add    BYTE PTR [rbx],cl
  43d381:	push   0xffffffffe2060004
  43d386:	add    dh,BYTE PTR [rax]
  43d388:	add    DWORD PTR [rax+0x0],esp
  43d38b:	add    BYTE PTR [rcx],al
  43d38d:	add    BYTE PTR [rax],al
  43d38f:	add    BYTE PTR [rcx],al
  43d391:	add    BYTE PTR [rax],al
  43d393:	add    BYTE PTR [rcx],al
  43d395:	add    BYTE PTR [rax],al
  43d397:	add    BYTE PTR [rcx],al
  43d399:	(bad)  
  43d39a:	add    eax,DWORD PTR [rax]
  43d39c:	(bad)  
  43d39d:	(bad)  
  43d39f:	xor    BYTE PTR [rcx],al
  43d3a1:	(bad)  
  43d3a2:	add    BYTE PTR [rax],al
  43d3a4:	add    DWORD PTR [rdi+rax*1],ecx
  43d3a7:	add    BYTE PTR [rdx+riz*4],cl
  43d3aa:	or     BYTE PTR [rax],dh
  43d3ac:	(bad)  
  43d3ad:	(bad)  
  43d3ae:	(bad)  
  43d3af:	jo     0x43d3b6
  43d3b1:	push   rax
  43d3b2:	add    al,0xc0
  43d3b4:	add    dl,al
  43d3b6:	add    BYTE PTR [rax],al
  43d3b8:	add    DWORD PTR [rcx],edx
  43d3ba:	or     DWORD PTR [rip+0x30db211],eax        # 0x35185d1
  43d3c0:	or     dh,BYTE PTR [rax]
  43d3c2:	or     DWORD PTR [rax+0x8],esp
  43d3c5:	jo     0x43d3ce
  43d3c7:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x223d79e
  43d3ce:	add    BYTE PTR [rax],al
  43d3d0:	add    DWORD PTR [rcx+rax*1],eax
  43d3d3:	add    BYTE PTR [rdx+rax*2],al
  43d3d6:	add    BYTE PTR [rax],al
  43d3d8:	add    DWORD PTR [rdx],ecx
  43d3da:	(bad)  
  43d3db:	add    BYTE PTR [rdx],cl
  43d3dd:	xor    al,BYTE PTR [rsi]
  43d3df:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3d845
  43d3e5:	push   rax
  43d3e6:	add    al,al
  43d3e8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248d3f0
  43d3ee:	add    DWORD PTR [rax],esi
  43d3f0:	add    DWORD PTR [rax],ecx
  43d3f2:	add    eax,0x4420800
  43d3f7:	xor    BYTE PTR [rbx],al
  43d3f9:	(bad)  
  43d3fa:	add    dh,BYTE PTR [rax+0x1]
  43d3fd:	push   rax
  43d3fe:	add    BYTE PTR [rax],al
  43d400:	add    DWORD PTR [rdi],eax
  43d402:	add    al,0x0
  43d404:	(bad)  
  43d405:	xor    al,BYTE PTR [rbx]
  43d407:	xor    BYTE PTR [rdx],al
  43d409:	(bad)  
  43d40a:	add    DWORD PTR [rax+0x1],esi
  43d40d:	add    eax,0x32050002
  43d412:	add    DWORD PTR [rax],esi
  43d414:	add    DWORD PTR [rip+0x32050002],eax        # 0x3248d41c
  43d41a:	add    DWORD PTR [rax],esi
  43d41c:	add    DWORD PTR [rax],eax
  43d41e:	add    BYTE PTR [rax],al
  43d420:	add    DWORD PTR [rax],eax
  43d422:	add    BYTE PTR [rax],al
  43d424:	add    DWORD PTR [rax],eax
  43d426:	add    BYTE PTR [rax],al
  43d428:	add    DWORD PTR [rdi],eax
  43d42a:	add    al,0x0
  43d42c:	(bad)  
  43d42d:	xor    al,BYTE PTR [rbx]
  43d42f:	xor    BYTE PTR [rdx],al
  43d431:	(bad)  
  43d432:	add    DWORD PTR [rax+0x1],esi
  43d435:	(bad)  
  43d436:	add    eax,DWORD PTR [rax]
  43d438:	(bad)  
  43d439:	rex.X add sil,BYTE PTR [rax]
  43d43c:	add    DWORD PTR [rax+0x0],esp
  43d43f:	add    BYTE PTR [rcx],al
  43d441:	add    eax,0x32050002
  43d446:	add    DWORD PTR [rax],esi
  43d448:	add    DWORD PTR [rdi],eax
  43d44a:	add    al,0x0
  43d44c:	(bad)  
  43d44d:	xor    al,BYTE PTR [rbx]
  43d44f:	xor    BYTE PTR [rdx],al
  43d451:	(bad)  
  43d452:	add    DWORD PTR [rax+0x1],esi
  43d455:	(bad)  
  43d456:	add    eax,DWORD PTR [rax]
  43d458:	(bad)  
  43d459:	rex.X add sil,BYTE PTR [rax]
  43d45c:	add    DWORD PTR [rax+0x0],esp
  43d45f:	add    BYTE PTR [rcx],al
  43d461:	(bad)  
  43d462:	add    eax,DWORD PTR [rax]
  43d464:	(bad)  
  43d465:	rex.X add sil,BYTE PTR [rax]
  43d468:	add    DWORD PTR [rax+0x0],esp
  43d46b:	add    BYTE PTR [rcx],al
  43d46d:	or     BYTE PTR [rip+0x4420800],al        # 0x485dc73
  43d473:	xor    BYTE PTR [rbx],al
  43d475:	(bad)  
  43d476:	add    dh,BYTE PTR [rax+0x1]
  43d479:	push   rax
  43d47a:	add    BYTE PTR [rax],al
  43d47c:	add    DWORD PTR [rax],ecx
  43d47e:	(bad)  
  43d47f:	add    BYTE PTR [rax],cl
  43d481:	xor    BYTE PTR [rdi],al
  43d483:	(bad)  
  43d484:	(bad)  
  43d485:	jo     0x43d48c
  43d487:	push   rax
  43d488:	add    al,0xc0
  43d48a:	add    dl,al
  43d48c:	add    DWORD PTR [rdi],eax
  43d48e:	add    al,0x0
  43d490:	(bad)  
  43d491:	push   rdx
  43d492:	add    esi,DWORD PTR [rax]
  43d494:	add    ah,BYTE PTR [rax+0x1]
  43d497:	jo     0x43d49a
  43d499:	adc    BYTE PTR [rcx],cl
  43d49b:	add    BYTE PTR [rax],dl
  43d49d:	(bad)  
  43d49e:	or     al,0x30
  43d4a0:	or     esp,DWORD PTR [rax+0xa]
  43d4a3:	jo     0x43d4ae
  43d4a5:	push   rax
  43d4a6:	or     al,al
  43d4a8:	(bad)  
  43d4a9:	rol    BYTE PTR [rax+riz*8],1
  43d4ac:	add    dh,al
  43d4ae:	add    BYTE PTR [rax],al
  43d4b0:	add    DWORD PTR [rax],edx
  43d4b2:	or     DWORD PTR [rax],eax
  43d4b4:	adc    BYTE PTR [rdx+0xc],ah
  43d4b7:	xor    BYTE PTR [rbx],cl
  43d4b9:	(bad)  
  43d4ba:	or     dh,BYTE PTR [rax+0x9]
  43d4bd:	push   rax
  43d4be:	or     al,al
  43d4c0:	(bad)  
  43d4c1:	rol    BYTE PTR [rax+riz*8],1
  43d4c4:	add    dh,al
  43d4c6:	add    BYTE PTR [rax],al
  43d4c8:	add    DWORD PTR [rcx+rax*1],eax
  43d4cb:	add    BYTE PTR [rdx+riz*2],al
  43d4ce:	add    BYTE PTR [rax],al
  43d4d0:	add    DWORD PTR [rcx+rax*1],eax
  43d4d3:	add    BYTE PTR [rdx+riz*2],al
  43d4d6:	add    BYTE PTR [rax],al
  43d4d8:	add    DWORD PTR [rcx+rax*1],eax
  43d4db:	add    BYTE PTR [rdx+riz*2],al
  43d4de:	add    BYTE PTR [rax],al
  43d4e0:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x150d4ed
  43d4e6:	rex.WX add BYTE PTR [rsi],al
  43d4e9:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3d94f
  43d4ef:	push   rax
  43d4f0:	add    al,al
  43d4f2:	add    BYTE PTR [rax],al
  43d4f4:	add    DWORD PTR [rax],ecx
  43d4f6:	add    eax,0x4620800
  43d4fb:	xor    BYTE PTR [rbx],al
  43d4fd:	(bad)  
  43d4fe:	add    dh,BYTE PTR [rax+0x1]
  43d501:	push   rax
  43d502:	add    BYTE PTR [rax],al
  43d504:	add    DWORD PTR [rcx],eax
  43d506:	add    DWORD PTR [rax],eax
  43d508:	add    DWORD PTR [rax],esi
  43d50a:	add    BYTE PTR [rax],al
  43d50c:	add    DWORD PTR [rdx],ecx
  43d50e:	(bad)  
  43d50f:	add    BYTE PTR [rdx],cl
  43d511:	push   rdx
  43d512:	(bad)  
  43d513:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3d979
  43d519:	push   rax
  43d51a:	add    al,al
  43d51c:	add    DWORD PTR [rdx],ecx
  43d51e:	(bad)  
  43d51f:	add    BYTE PTR [rdx],cl
  43d521:	xor    al,BYTE PTR [rsi]
  43d523:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b3d989
  43d529:	push   rax
  43d52a:	add    al,al
  43d52c:	add    DWORD PTR [rax],eax
  43d52e:	add    BYTE PTR [rax],al
  43d530:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000043e000 <.bss>:
	...

Disassembly of section .idata:

000000000043f000 <.idata>:
  43f000:	fdivr  st(0),st
  43f002:	add    eax,DWORD PTR [rax]
	...
  43f00c:	ror    BYTE PTR [rdx],0x4
  43f00f:	add    BYTE PTR [rdi+rsi*8],bh
  43f012:	add    eax,DWORD PTR [rax]
  43f014:	cld    
  43f015:	lock add eax,DWORD PTR [rax]
	...
  43f020:	push   rsp
  43f021:	or     eax,DWORD PTR [rax+rax*1]
  43f024:	pop    rsp
  43f025:	test   DWORD PTR [rbx],0x3f20c00
	...
  43f033:	add    BYTE PTR [rax+0x6c00040b],al
  43f039:	clc    
  43f03a:	add    eax,DWORD PTR [rax]
  43f03c:	rex.R
  43f03d:	repnz add eax,DWORD PTR [rax]
	...
  43f048:	movabs al,ds:0x640003f8a400040b
  43f051:	repnz add eax,DWORD PTR [rax]
	...
  43f05c:	cmp    al,0xc
  43f05e:	add    al,0x0
  43f060:	(bad)  
  43f061:	clc    
  43f062:	add    eax,DWORD PTR [rax]
  43f064:	test   bl,dh
  43f066:	add    eax,DWORD PTR [rax]
	...
  43f070:	mov    WORD PTR [rip+0xfffffffff9e40004],cs        # 0xfffffffffa27f07a
  43f076:	add    eax,DWORD PTR [rax]
  43f078:	or     al,0xf6
  43f07a:	add    eax,DWORD PTR [rax]
	...
  43f084:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43f085:	or     eax,0xfc6c0004
  43f08a:	add    eax,DWORD PTR [rax]
  43f08c:	sub    al,0xf6
  43f08e:	add    eax,DWORD PTR [rax]
	...
  43f098:	ror    BYTE PTR [rip+0xfffffffffc8c0004],0x3        # 0xfffffffffccff0a3
  43f09f:	add    BYTE PTR [rsi+rsi*8+0x3],cl
	...
  43f0ab:	add    al,dl
  43f0ad:	or     eax,0xfcac0004
  43f0b2:	add    eax,DWORD PTR [rax]
  43f0b4:	pop    rsp
  43f0b5:	test   BYTE PTR [rbx],0x0
	...
  43f0c0:	rex.W (bad) 
  43f0c2:	add    al,0x0
  43f0c4:	mov    esp,0x3fc
	...
  43f0d9:	add    BYTE PTR [rax],al
  43f0db:	add    BYTE PTR [rbp+rdi*8+0x3],bl
  43f0e2:	add    BYTE PTR [rax],al
  43f0e4:	lods   al,BYTE PTR ds:[rsi]
  43f0e5:	std    
  43f0e6:	add    eax,DWORD PTR [rax]
  43f0e8:	add    BYTE PTR [rax],al
  43f0ea:	add    BYTE PTR [rax],al
  43f0ec:	mov    esp,0x3fd
	...
  43f0f9:	add    BYTE PTR [rax],al
  43f0fb:	add    ah,cl
  43f0fd:	std    
  43f0fe:	add    eax,DWORD PTR [rax]
  43f100:	add    BYTE PTR [rax],al
  43f102:	add    BYTE PTR [rax],al
  43f104:	clc    
  43f105:	std    
  43f106:	add    eax,DWORD PTR [rax]
  43f108:	add    BYTE PTR [rax],al
  43f10a:	add    BYTE PTR [rax],al
  43f10c:	and    dh,bh
  43f10e:	add    eax,DWORD PTR [rax]
  43f110:	add    BYTE PTR [rax],al
  43f112:	add    BYTE PTR [rax],al
  43f114:	rex inc BYTE PTR [rbx]
  43f117:	add    BYTE PTR [rax],al
  43f119:	add    BYTE PTR [rax],al
  43f11b:	add    BYTE PTR [rsi+rdi*8+0x3],ch
  43f11f:	add    BYTE PTR [rax],al
  43f121:	add    BYTE PTR [rax],al
  43f123:	add    BYTE PTR [rsi+rdi*8+0x3],dl
  43f12a:	add    BYTE PTR [rax],al
  43f12c:	sar    dh,0x3
  43f12f:	add    BYTE PTR [rax],al
  43f131:	add    BYTE PTR [rax],al
  43f133:	add    ah,ch
  43f135:	inc    BYTE PTR [rbx]
  43f137:	add    BYTE PTR [rax],al
  43f139:	add    BYTE PTR [rax],al
  43f13b:	add    BYTE PTR [rax],dl
  43f13d:	inc    DWORD PTR [rbx]
  43f13f:	add    BYTE PTR [rax],al
  43f141:	add    BYTE PTR [rax],al
  43f143:	add    BYTE PTR [rdi+rdi*8],ch
  43f146:	add    eax,DWORD PTR [rax]
  43f148:	add    BYTE PTR [rax],al
  43f14a:	add    BYTE PTR [rax],al
  43f14c:	cmp    al,0xff
  43f14e:	add    eax,DWORD PTR [rax]
  43f150:	add    BYTE PTR [rax],al
  43f152:	add    BYTE PTR [rax],al
  43f154:	push   rsp
  43f155:	inc    DWORD PTR [rbx]
  43f157:	add    BYTE PTR [rax],al
  43f159:	add    BYTE PTR [rax],al
  43f15b:	add    BYTE PTR [rdi+rdi*8+0x3],ch
  43f15f:	add    BYTE PTR [rax],al
  43f161:	add    BYTE PTR [rax],al
  43f163:	add    BYTE PTR [rax+0x3ff],dl
  43f169:	add    BYTE PTR [rax],al
  43f16b:	add    BYTE PTR [rax+0x3ff],dh
  43f171:	add    BYTE PTR [rax],al
  43f173:	add    ah,al
  43f175:	inc    DWORD PTR [rbx]
  43f177:	add    BYTE PTR [rax],al
  43f179:	add    BYTE PTR [rax],al
  43f17b:	add    ah,dl
  43f17d:	inc    DWORD PTR [rbx]
  43f17f:	add    BYTE PTR [rax],al
  43f181:	add    BYTE PTR [rax],al
  43f183:	add    al,dh
  43f185:	inc    DWORD PTR [rbx]
  43f187:	add    BYTE PTR [rax],al
  43f189:	add    BYTE PTR [rax],al
  43f18b:	add    BYTE PTR [rax],dl
  43f18d:	add    BYTE PTR [rax+rax*1],al
  43f190:	add    BYTE PTR [rax],al
  43f192:	add    BYTE PTR [rax],al
  43f194:	xor    BYTE PTR [rax],al
  43f196:	add    al,0x0
  43f198:	add    BYTE PTR [rax],al
  43f19a:	add    BYTE PTR [rax],al
  43f19c:	push   rax
  43f19d:	add    BYTE PTR [rax+rax*1],al
  43f1a0:	add    BYTE PTR [rax],al
  43f1a2:	add    BYTE PTR [rax],al
  43f1a4:	push   0x400
  43f1a9:	add    BYTE PTR [rax],al
  43f1ab:	add    BYTE PTR [rax+0x400],al
  43f1b1:	add    BYTE PTR [rax],al
  43f1b3:	add    BYTE PTR [rax+0x400],dl
  43f1b9:	add    BYTE PTR [rax],al
  43f1bb:	add    BYTE PTR [rax+0x400],dh
  43f1c1:	add    BYTE PTR [rax],al
  43f1c3:	add    ah,al
  43f1c5:	add    BYTE PTR [rax+rax*1],al
  43f1c8:	add    BYTE PTR [rax],al
  43f1ca:	add    BYTE PTR [rax],al
  43f1cc:	loopne 0x43f1ce
  43f1ce:	add    al,0x0
  43f1d0:	add    BYTE PTR [rax],al
  43f1d2:	add    BYTE PTR [rax],al
  43f1d4:	cld    
  43f1d5:	add    BYTE PTR [rax+rax*1],al
  43f1d8:	add    BYTE PTR [rax],al
  43f1da:	add    BYTE PTR [rax],al
  43f1dc:	and    al,0x1
  43f1de:	add    al,0x0
  43f1e0:	add    BYTE PTR [rax],al
  43f1e2:	add    BYTE PTR [rax],al
  43f1e4:	add    QWORD PTR [rax+rax*1],r8
  43f1e8:	add    BYTE PTR [rax],al
  43f1ea:	add    BYTE PTR [rax],al
  43f1ec:	jo     0x43f1ef
  43f1ee:	add    al,0x0
  43f1f0:	add    BYTE PTR [rax],al
  43f1f2:	add    BYTE PTR [rax],al
  43f1f4:	mov    WORD PTR [rcx],es
  43f1f6:	add    al,0x0
  43f1f8:	add    BYTE PTR [rax],al
  43f1fa:	add    BYTE PTR [rax],al
  43f1fc:	test   al,0x1
  43f1fe:	add    al,0x0
	...
  43f20c:	rol    BYTE PTR [rcx],0x4
  43f20f:	add    BYTE PTR [rax],al
  43f211:	add    BYTE PTR [rax],al
  43f213:	add    ah,ah
  43f215:	add    DWORD PTR [rax+rax*1],eax
  43f218:	add    BYTE PTR [rax],al
  43f21a:	add    BYTE PTR [rax],al
  43f21c:	add    BYTE PTR [rdx],al
  43f21e:	add    al,0x0
  43f220:	add    BYTE PTR [rax],al
  43f222:	add    BYTE PTR [rax],al
  43f224:	sbb    al,0x2
  43f226:	add    al,0x0
  43f228:	add    BYTE PTR [rax],al
  43f22a:	add    BYTE PTR [rax],al
  43f22c:	cmp    al,0x2
  43f22e:	add    al,0x0
  43f230:	add    BYTE PTR [rax],al
  43f232:	add    BYTE PTR [rax],al
  43f234:	push   0x402
	...
  43f241:	add    BYTE PTR [rax],al
  43f243:	add    BYTE PTR [rax+0x402],cl
  43f249:	add    BYTE PTR [rax],al
  43f24b:	add    BYTE PTR [rdx+rax*1+0x4],dl
  43f252:	add    BYTE PTR [rax],al
  43f254:	test   al,0x2
  43f256:	add    al,0x0
	...
  43f264:	mov    eax,0x402
  43f269:	add    BYTE PTR [rax],al
  43f26b:	add    dh,al
  43f26d:	add    al,BYTE PTR [rax+rax*1]
  43f270:	add    BYTE PTR [rax],al
  43f272:	add    BYTE PTR [rax],al
  43f274:	(bad)  
  43f275:	add    al,BYTE PTR [rax+rax*1]
  43f278:	add    BYTE PTR [rax],al
  43f27a:	add    BYTE PTR [rax],al
  43f27c:	out    dx,al
  43f27d:	add    al,BYTE PTR [rax+rax*1]
  43f280:	add    BYTE PTR [rax],al
  43f282:	add    BYTE PTR [rax],al
  43f284:	(bad)  
  43f285:	add    eax,DWORD PTR [rax+rax*1]
  43f288:	add    BYTE PTR [rax],al
  43f28a:	add    BYTE PTR [rax],al
  43f28c:	sbb    BYTE PTR [rbx],al
  43f28e:	add    al,0x0
  43f290:	add    BYTE PTR [rax],al
  43f292:	add    BYTE PTR [rax],al
  43f294:	sub    al,0x3
  43f296:	add    al,0x0
  43f298:	add    BYTE PTR [rax],al
  43f29a:	add    BYTE PTR [rax],al
  43f29c:	add    eax,DWORD PTR [rax+r8*1]
  43f2a0:	add    BYTE PTR [rax],al
  43f2a2:	add    BYTE PTR [rax],al
  43f2a4:	pop    rax
  43f2a5:	add    eax,DWORD PTR [rax+rax*1]
  43f2a8:	add    BYTE PTR [rax],al
  43f2aa:	add    BYTE PTR [rax],al
  43f2ac:	push   0x403
  43f2b1:	add    BYTE PTR [rax],al
  43f2b3:	add    BYTE PTR [rax+0x3],bh
  43f2b6:	add    al,0x0
  43f2b8:	add    BYTE PTR [rax],al
  43f2ba:	add    BYTE PTR [rax],al
  43f2bc:	mov    es,WORD PTR [rbx]
  43f2be:	add    al,0x0
  43f2c0:	add    BYTE PTR [rax],al
  43f2c2:	add    BYTE PTR [rax],al
  43f2c4:	movabs ds:0xb400000000000403,al
  43f2cd:	add    eax,DWORD PTR [rax+rax*1]
  43f2d0:	add    BYTE PTR [rax],al
  43f2d2:	add    BYTE PTR [rax],al
  43f2d4:	mov    BYTE PTR [rbx],0x4
  43f2d7:	add    BYTE PTR [rax],al
  43f2d9:	add    BYTE PTR [rax],al
  43f2db:	add    al,ah
  43f2dd:	add    eax,DWORD PTR [rax+rax*1]
  43f2e0:	add    BYTE PTR [rax],al
  43f2e2:	add    BYTE PTR [rax],al
  43f2e4:	lock add eax,DWORD PTR [rax+rax*1]
  43f2e8:	add    BYTE PTR [rax],al
  43f2ea:	add    BYTE PTR [rax],al
  43f2ec:	or     al,0x4
  43f2ee:	add    al,0x0
  43f2f0:	add    BYTE PTR [rax],al
  43f2f2:	add    BYTE PTR [rax],al
  43f2f4:	and    al,0x4
  43f2f6:	add    al,0x0
  43f2f8:	add    BYTE PTR [rax],al
  43f2fa:	add    BYTE PTR [rax],al
  43f2fc:	xor    al,0x4
  43f2fe:	add    al,0x0
  43f300:	add    BYTE PTR [rax],al
  43f302:	add    BYTE PTR [rax],al
  43f304:	add    al,0x4
  43f307:	add    BYTE PTR [rax],al
  43f309:	add    BYTE PTR [rax],al
  43f30b:	add    BYTE PTR [rdx+0x4],bl
  43f30e:	add    al,0x0
  43f310:	add    BYTE PTR [rax],al
  43f312:	add    BYTE PTR [rax],al
  43f314:	jo     0x43f31a
  43f316:	add    al,0x0
  43f318:	add    BYTE PTR [rax],al
  43f31a:	add    BYTE PTR [rax],al
  43f31c:	test   BYTE PTR [rsp+rax*1],al
  43f31f:	add    BYTE PTR [rax],al
  43f321:	add    BYTE PTR [rax],al
  43f323:	add    BYTE PTR [rsi+0x404],bl
  43f329:	add    BYTE PTR [rax],al
  43f32b:	add    BYTE PTR [rdx+0x404],dh
  43f331:	add    BYTE PTR [rax],al
  43f333:	add    BYTE PTR [rsi+0x404],bh
  43f339:	add    BYTE PTR [rax],al
  43f33b:	add    ah,bl
  43f33d:	add    al,0x4
  43f33f:	add    BYTE PTR [rax],al
  43f341:	add    BYTE PTR [rax],al
  43f343:	add    ah,ah
  43f345:	add    al,0x4
  43f347:	add    BYTE PTR [rax],al
  43f349:	add    BYTE PTR [rax],al
  43f34b:	add    al,bh
  43f34d:	add    al,0x4
  43f34f:	add    BYTE PTR [rax],al
  43f351:	add    BYTE PTR [rax],al
  43f353:	add    BYTE PTR [rsi],al
  43f355:	add    eax,0x4
  43f35a:	add    BYTE PTR [rax],al
  43f35c:	and    BYTE PTR [rip+0x4],al        # 0x43f366
  43f362:	add    BYTE PTR [rax],al
  43f364:	cmp    al,0x5
  43f366:	add    al,0x0
  43f368:	add    BYTE PTR [rax],al
  43f36a:	add    BYTE PTR [rax],al
  43f36c:	rex.WRX add rax,0x4
  43f372:	add    BYTE PTR [rax],al
  43f374:	pop    rsi
  43f375:	add    eax,0x4
	...
  43f382:	add    BYTE PTR [rax],al
  43f384:	je     0x43f38b
  43f386:	add    al,0x0
  43f388:	add    BYTE PTR [rax],al
  43f38a:	add    BYTE PTR [rax],al
  43f38c:	mov    WORD PTR [rip+0x4],es        # 0x43f396
  43f392:	add    BYTE PTR [rax],al
  43f394:	xchg   esi,eax
  43f395:	add    eax,0x4
  43f39a:	add    BYTE PTR [rax],al
  43f39c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43f39d:	add    eax,0x4
  43f3a2:	add    BYTE PTR [rax],al
  43f3a4:	mov    ah,0x5
  43f3a6:	add    al,0x0
  43f3a8:	add    BYTE PTR [rax],al
  43f3aa:	add    BYTE PTR [rax],al
  43f3ac:	rol    BYTE PTR [rip+0x4],0x0        # 0x43f3b7
  43f3b3:	add    dh,cl
  43f3b5:	add    eax,0x4
  43f3ba:	add    BYTE PTR [rax],al
  43f3bc:	fiadd  WORD PTR [rip+0x4]        # 0x43f3c6
  43f3c2:	add    BYTE PTR [rax],al
  43f3c4:	lock add eax,0x4
  43f3ca:	add    BYTE PTR [rax],al
  43f3cc:	add    al,0x6
  43f3ce:	add    al,0x0
  43f3d0:	add    BYTE PTR [rax],al
  43f3d2:	add    BYTE PTR [rax],al
  43f3d4:	(bad)  
  43f3d5:	(bad)  
  43f3d6:	add    al,0x0
  43f3d8:	add    BYTE PTR [rax],al
  43f3da:	add    BYTE PTR [rax],al
  43f3dc:	sbb    al,0x6
  43f3de:	add    al,0x0
  43f3e0:	add    BYTE PTR [rax],al
  43f3e2:	add    BYTE PTR [rax],al
  43f3e4:	es (bad) 
  43f3e6:	add    al,0x0
  43f3e8:	add    BYTE PTR [rax],al
  43f3ea:	add    BYTE PTR [rax],al
  43f3ec:	xor    BYTE PTR [rsi],al
  43f3ee:	add    al,0x0
  43f3f0:	add    BYTE PTR [rax],al
  43f3f2:	add    BYTE PTR [rax],al
  43f3f4:	cmp    BYTE PTR [rsi],al
  43f3f6:	add    al,0x0
  43f3f8:	add    BYTE PTR [rax],al
  43f3fa:	add    BYTE PTR [rax],al
  43f3fc:	rex.X (bad) 
  43f3fe:	add    al,0x0
  43f400:	add    BYTE PTR [rax],al
  43f402:	add    BYTE PTR [rax],al
  43f404:	rex.WRX (bad) 
  43f406:	add    al,0x0
  43f408:	add    BYTE PTR [rax],al
  43f40a:	add    BYTE PTR [rax],al
  43f40c:	pop    rsi
  43f40d:	(bad)  
  43f40e:	add    al,0x0
  43f410:	add    BYTE PTR [rax],al
  43f412:	add    BYTE PTR [rax],al
  43f414:	data16 (bad) 
  43f416:	add    al,0x0
  43f418:	add    BYTE PTR [rax],al
  43f41a:	add    BYTE PTR [rax],al
  43f41c:	jo     0x43f424
  43f41e:	add    al,0x0
  43f420:	add    BYTE PTR [rax],al
  43f422:	add    BYTE PTR [rax],al
  43f424:	jl     0x43f42c
  43f426:	add    al,0x0
  43f428:	add    BYTE PTR [rax],al
  43f42a:	add    BYTE PTR [rax],al
  43f42c:	mov    al,BYTE PTR [rsi]
  43f42e:	add    al,0x0
  43f430:	add    BYTE PTR [rax],al
  43f432:	add    BYTE PTR [rax],al
  43f434:	xchg   esp,eax
  43f435:	(bad)  
  43f436:	add    al,0x0
  43f438:	add    BYTE PTR [rax],al
  43f43a:	add    BYTE PTR [rax],al
  43f43c:	movabs al,ds:0xac00000000000406
  43f445:	(bad)  
  43f446:	add    al,0x0
  43f448:	add    BYTE PTR [rax],al
  43f44a:	add    BYTE PTR [rax],al
  43f44c:	mov    dh,0x6
  43f44e:	add    al,0x0
  43f450:	add    BYTE PTR [rax],al
  43f452:	add    BYTE PTR [rax],al
  43f454:	rol    BYTE PTR [rsi],0x4
  43f457:	add    BYTE PTR [rax],al
  43f459:	add    BYTE PTR [rax],al
  43f45b:	add    dh,cl
  43f45d:	(bad)  
  43f45e:	add    al,0x0
  43f460:	add    BYTE PTR [rax],al
  43f462:	add    BYTE PTR [rax],al
  43f464:	(bad)  
  43f465:	(bad)  
  43f466:	add    al,0x0
  43f468:	add    BYTE PTR [rax],al
  43f46a:	add    BYTE PTR [rax],al
  43f46c:	fiadd  WORD PTR [rsi]
  43f46e:	add    al,0x0
  43f470:	add    BYTE PTR [rax],al
  43f472:	add    BYTE PTR [rax],al
  43f474:	out    0x6,al
  43f476:	add    al,0x0
  43f478:	add    BYTE PTR [rax],al
  43f47a:	add    BYTE PTR [rax],al
  43f47c:	lock (bad) 
  43f47e:	add    al,0x0
  43f480:	add    BYTE PTR [rax],al
  43f482:	add    BYTE PTR [rax],al
  43f484:	clc    
  43f485:	(bad)  
  43f486:	add    al,0x0
  43f488:	add    BYTE PTR [rax],al
  43f48a:	add    BYTE PTR [rax],al
  43f48c:	add    al,BYTE PTR [rdi]
  43f48e:	add    al,0x0
  43f490:	add    BYTE PTR [rax],al
  43f492:	add    BYTE PTR [rax],al
  43f494:	or     al,0x7
  43f496:	add    al,0x0
  43f498:	add    BYTE PTR [rax],al
  43f49a:	add    BYTE PTR [rax],al
  43f49c:	adc    al,0x7
  43f49e:	add    al,0x0
  43f4a0:	add    BYTE PTR [rax],al
  43f4a2:	add    BYTE PTR [rax],al
  43f4a4:	sbb    al,0x7
  43f4a6:	add    al,0x0
  43f4a8:	add    BYTE PTR [rax],al
  43f4aa:	add    BYTE PTR [rax],al
  43f4ac:	es (bad) 
  43f4ae:	add    al,0x0
  43f4b0:	add    BYTE PTR [rax],al
  43f4b2:	add    BYTE PTR [rax],al
  43f4b4:	cs (bad) 
  43f4b6:	add    al,0x0
  43f4b8:	add    BYTE PTR [rax],al
  43f4ba:	add    BYTE PTR [rax],al
  43f4bc:	ss (bad) 
  43f4be:	add    al,0x0
  43f4c0:	add    BYTE PTR [rax],al
  43f4c2:	add    BYTE PTR [rax],al
  43f4c4:	ds (bad) 
  43f4c6:	add    al,0x0
  43f4c8:	add    BYTE PTR [rax],al
  43f4ca:	add    BYTE PTR [rax],al
  43f4cc:	rex.WX (bad) 
  43f4ce:	add    al,0x0
  43f4d0:	add    BYTE PTR [rax],al
  43f4d2:	add    BYTE PTR [rax],al
  43f4d4:	push   rsp
  43f4d5:	(bad)  
  43f4d6:	add    al,0x0
  43f4d8:	add    BYTE PTR [rax],al
  43f4da:	add    BYTE PTR [rax],al
  43f4dc:	pop    rsi
  43f4dd:	(bad)  
  43f4de:	add    al,0x0
  43f4e0:	add    BYTE PTR [rax],al
  43f4e2:	add    BYTE PTR [rax],al
  43f4e4:	push   0x407
  43f4e9:	add    BYTE PTR [rax],al
  43f4eb:	add    BYTE PTR [rdx+0x7],dh
  43f4ee:	add    al,0x0
  43f4f0:	add    BYTE PTR [rax],al
  43f4f2:	add    BYTE PTR [rax],al
  43f4f4:	jl     0x43f4fd
  43f4f6:	add    al,0x0
  43f4f8:	add    BYTE PTR [rax],al
  43f4fa:	add    BYTE PTR [rax],al
  43f4fc:	xchg   BYTE PTR [rdi],al
  43f4fe:	add    al,0x0
  43f500:	add    BYTE PTR [rax],al
  43f502:	add    BYTE PTR [rax],al
  43f504:	nop
  43f505:	(bad)  
  43f506:	add    al,0x0
  43f508:	add    BYTE PTR [rax],al
  43f50a:	add    BYTE PTR [rax],al
  43f50c:	(bad)  
  43f50d:	(bad)  
  43f50e:	add    al,0x0
  43f510:	add    BYTE PTR [rax],al
  43f512:	add    BYTE PTR [rax],al
  43f514:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43f515:	(bad)  
  43f516:	add    al,0x0
  43f518:	add    BYTE PTR [rax],al
  43f51a:	add    BYTE PTR [rax],al
  43f51c:	scas   al,BYTE PTR es:[rdi]
  43f51d:	(bad)  
  43f51e:	add    al,0x0
  43f520:	add    BYTE PTR [rax],al
  43f522:	add    BYTE PTR [rax],al
  43f524:	mov    eax,0x407
  43f529:	add    BYTE PTR [rax],al
  43f52b:	add    dl,al
  43f52d:	(bad)  
  43f52e:	add    al,0x0
  43f530:	add    BYTE PTR [rax],al
  43f532:	add    BYTE PTR [rax],al
  43f534:	int3   
  43f535:	(bad)  
  43f536:	add    al,0x0
  43f538:	add    BYTE PTR [rax],al
  43f53a:	add    BYTE PTR [rax],al
  43f53c:	(bad)  
  43f53d:	(bad)  
  43f53e:	add    al,0x0
  43f540:	add    BYTE PTR [rax],al
  43f542:	add    BYTE PTR [rax],al
  43f544:	loopne 0x43f54d
  43f546:	add    al,0x0
  43f548:	add    BYTE PTR [rax],al
  43f54a:	add    BYTE PTR [rax],al
  43f54c:	call   0x43f958
  43f551:	add    BYTE PTR [rax],al
  43f553:	add    al,dh
  43f555:	(bad)  
  43f556:	add    al,0x0
  43f558:	add    BYTE PTR [rax],al
  43f55a:	add    BYTE PTR [rax],al
  43f55c:	cli    
  43f55d:	(bad)  
  43f55e:	add    al,0x0
  43f560:	add    BYTE PTR [rax],al
  43f562:	add    BYTE PTR [rax],al
  43f564:	add    al,0x8
  43f566:	add    al,0x0
  43f568:	add    BYTE PTR [rax],al
  43f56a:	add    BYTE PTR [rax],al
  43f56c:	adc    BYTE PTR [rax],cl
  43f56e:	add    al,0x0
  43f570:	add    BYTE PTR [rax],al
  43f572:	add    BYTE PTR [rax],al
  43f574:	sbb    cl,BYTE PTR [rax]
  43f576:	add    al,0x0
  43f578:	add    BYTE PTR [rax],al
  43f57a:	add    BYTE PTR [rax],al
  43f57c:	and    al,0x8
  43f57e:	add    al,0x0
  43f580:	add    BYTE PTR [rax],al
  43f582:	add    BYTE PTR [rax],al
  43f584:	or     BYTE PTR cs:[rax+rax*1],al
  43f588:	add    BYTE PTR [rax],al
  43f58a:	add    BYTE PTR [rax],al
  43f58c:	cmp    BYTE PTR [rax],cl
  43f58e:	add    al,0x0
  43f590:	add    BYTE PTR [rax],al
  43f592:	add    BYTE PTR [rax],al
  43f594:	or     BYTE PTR [rax+r8*1],al
  43f598:	add    BYTE PTR [rax],al
  43f59a:	add    BYTE PTR [rax],al
  43f59c:	rex.WR or BYTE PTR [rax+rax*1],r8b
  43f5a0:	add    BYTE PTR [rax],al
  43f5a2:	add    BYTE PTR [rax],al
  43f5a4:	pop    rax
  43f5a5:	or     BYTE PTR [rax+rax*1],al
  43f5a8:	add    BYTE PTR [rax],al
  43f5aa:	add    BYTE PTR [rax],al
  43f5ac:	or     BYTE PTR fs:[rax+rax*1],al
  43f5b0:	add    BYTE PTR [rax],al
  43f5b2:	add    BYTE PTR [rax],al
  43f5b4:	outs   dx,BYTE PTR ds:[rsi]
  43f5b5:	or     BYTE PTR [rax+rax*1],al
  43f5b8:	add    BYTE PTR [rax],al
  43f5ba:	add    BYTE PTR [rax],al
  43f5bc:	js     0x43f5c6
  43f5be:	add    al,0x0
  43f5c0:	add    BYTE PTR [rax],al
  43f5c2:	add    BYTE PTR [rax],al
  43f5c4:	(bad)  
  43f5c5:	or     BYTE PTR [rax+rax*1],al
  43f5c8:	add    BYTE PTR [rax],al
  43f5ca:	add    BYTE PTR [rax],al
  43f5cc:	mov    WORD PTR [rax],cs
  43f5ce:	add    al,0x0
  43f5d0:	add    BYTE PTR [rax],al
  43f5d2:	add    BYTE PTR [rax],al
  43f5d4:	xchg   esi,eax
  43f5d5:	or     BYTE PTR [rax+rax*1],al
  43f5d8:	add    BYTE PTR [rax],al
  43f5da:	add    BYTE PTR [rax],al
  43f5dc:	movabs al,ds:0xaa00000000000408
  43f5e5:	or     BYTE PTR [rax+rax*1],al
  43f5e8:	add    BYTE PTR [rax],al
  43f5ea:	add    BYTE PTR [rax],al
  43f5ec:	mov    ah,0x8
  43f5ee:	add    al,0x0
  43f5f0:	add    BYTE PTR [rax],al
  43f5f2:	add    BYTE PTR [rax],al
  43f5f4:	ror    BYTE PTR [rax],0x4
  43f5f7:	add    BYTE PTR [rax],al
  43f5f9:	add    BYTE PTR [rax],al
  43f5fb:	add    dl,cl
  43f5fd:	or     BYTE PTR [rax+rax*1],al
	...
  43f60c:	(bad)  
  43f60d:	or     BYTE PTR [rax+rax*1],al
  43f610:	add    BYTE PTR [rax],al
  43f612:	add    BYTE PTR [rax],al
  43f614:	in     al,dx
  43f615:	or     BYTE PTR [rax+rax*1],al
  43f618:	add    BYTE PTR [rax],al
  43f61a:	add    BYTE PTR [rax],al
  43f61c:	add    BYTE PTR [rcx],cl
  43f61e:	add    al,0x0
	...
  43f62c:	sbb    BYTE PTR [rcx],cl
  43f62e:	add    al,0x0
  43f630:	add    BYTE PTR [rax],al
  43f632:	add    BYTE PTR [rax],al
  43f634:	or     DWORD PTR es:[rax+rax*1],eax
  43f638:	add    BYTE PTR [rax],al
  43f63a:	add    BYTE PTR [rax],al
  43f63c:	or     DWORD PTR ds:[rax+rax*1],eax
	...
  43f64c:	pop    rsp
  43f64d:	or     DWORD PTR [rax+rax*1],eax
	...
  43f65c:	push   0x9
  43f65e:	add    al,0x0
  43f660:	add    BYTE PTR [rax],al
  43f662:	add    BYTE PTR [rax],al
  43f664:	js     0x43f66f
  43f666:	add    al,0x0
  43f668:	add    BYTE PTR [rax],al
  43f66a:	add    BYTE PTR [rax],al
  43f66c:	mov    cl,BYTE PTR [rcx]
  43f66e:	add    al,0x0
  43f670:	add    BYTE PTR [rax],al
  43f672:	add    BYTE PTR [rax],al
  43f674:	pushf  
  43f675:	or     DWORD PTR [rax+rax*1],eax
  43f678:	add    BYTE PTR [rax],al
  43f67a:	add    BYTE PTR [rax],al
  43f67c:	stos   BYTE PTR es:[rdi],al
  43f67d:	or     DWORD PTR [rax+rax*1],eax
  43f680:	add    BYTE PTR [rax],al
  43f682:	add    BYTE PTR [rax],al
  43f684:	mov    edx,0x409
  43f689:	add    BYTE PTR [rax],al
  43f68b:	add    ah,al
  43f68d:	or     DWORD PTR [rax+rax*1],eax
  43f690:	add    BYTE PTR [rax],al
  43f692:	add    BYTE PTR [rax],al
  43f694:	int3   
  43f695:	or     DWORD PTR [rax+rax*1],eax
  43f698:	add    BYTE PTR [rax],al
  43f69a:	add    BYTE PTR [rax],al
  43f69c:	fimul  DWORD PTR [rcx]
  43f69e:	add    al,0x0
  43f6a0:	add    BYTE PTR [rax],al
  43f6a2:	add    BYTE PTR [rax],al
  43f6a4:	in     al,0x9
  43f6a6:	add    al,0x0
  43f6a8:	add    BYTE PTR [rax],al
  43f6aa:	add    BYTE PTR [rax],al
  43f6ac:	hlt    
  43f6ad:	or     DWORD PTR [rax+rax*1],eax
  43f6b0:	add    BYTE PTR [rax],al
  43f6b2:	add    BYTE PTR [rax],al
  43f6b4:	add    cl,BYTE PTR [rdx]
  43f6b6:	add    al,0x0
  43f6b8:	add    BYTE PTR [rax],al
  43f6ba:	add    BYTE PTR [rax],al
  43f6bc:	adc    BYTE PTR [rdx],cl
  43f6be:	add    al,0x0
  43f6c0:	add    BYTE PTR [rax],al
  43f6c2:	add    BYTE PTR [rax],al
  43f6c4:	(bad)  
  43f6c5:	or     al,BYTE PTR [rax+rax*1]
  43f6c8:	add    BYTE PTR [rax],al
  43f6ca:	add    BYTE PTR [rax],al
  43f6cc:	sub    al,0xa
  43f6ce:	add    al,0x0
  43f6d0:	add    BYTE PTR [rax],al
  43f6d2:	add    BYTE PTR [rax],al
  43f6d4:	cmp    cl,BYTE PTR [rdx]
  43f6d6:	add    al,0x0
  43f6d8:	add    BYTE PTR [rax],al
  43f6da:	add    BYTE PTR [rax],al
  43f6dc:	rex.W or al,BYTE PTR [rax+rax*1]
  43f6e0:	add    BYTE PTR [rax],al
  43f6e2:	add    BYTE PTR [rax],al
  43f6e4:	push   rax
  43f6e5:	or     al,BYTE PTR [rax+rax*1]
  43f6e8:	add    BYTE PTR [rax],al
  43f6ea:	add    BYTE PTR [rax],al
  43f6ec:	pop    rax
  43f6ed:	or     al,BYTE PTR [rax+rax*1]
  43f6f0:	add    BYTE PTR [rax],al
  43f6f2:	add    BYTE PTR [rax],al
  43f6f4:	data16 or al,BYTE PTR [rax+rax*1]
  43f6f8:	add    BYTE PTR [rax],al
  43f6fa:	add    BYTE PTR [rax],al
  43f6fc:	jo     0x43f708
  43f6fe:	add    al,0x0
  43f700:	add    BYTE PTR [rax],al
  43f702:	add    BYTE PTR [rax],al
  43f704:	js     0x43f710
  43f706:	add    al,0x0
  43f708:	add    BYTE PTR [rax],al
  43f70a:	add    BYTE PTR [rax],al
  43f70c:	or     BYTE PTR [rdx],0x4
  43f70f:	add    BYTE PTR [rax],al
  43f711:	add    BYTE PTR [rax],al
  43f713:	add    BYTE PTR [rdx+0x40a],cl
  43f719:	add    BYTE PTR [rax],al
  43f71b:	add    BYTE PTR [rdx+0x40a],dl
  43f721:	add    BYTE PTR [rax],al
  43f723:	add    BYTE PTR [rdx+rcx*1+0x4],bl
  43f72a:	add    BYTE PTR [rax],al
  43f72c:	stos   BYTE PTR es:[rdi],al
  43f72d:	or     al,BYTE PTR [rax+rax*1]
	...
  43f73c:	pushf  
  43f73d:	std    
  43f73e:	add    eax,DWORD PTR [rax]
  43f740:	add    BYTE PTR [rax],al
  43f742:	add    BYTE PTR [rax],al
  43f744:	lods   al,BYTE PTR ds:[rsi]
  43f745:	std    
  43f746:	add    eax,DWORD PTR [rax]
  43f748:	add    BYTE PTR [rax],al
  43f74a:	add    BYTE PTR [rax],al
  43f74c:	mov    esp,0x3fd
	...
  43f759:	add    BYTE PTR [rax],al
  43f75b:	add    ah,cl
  43f75d:	std    
  43f75e:	add    eax,DWORD PTR [rax]
  43f760:	add    BYTE PTR [rax],al
  43f762:	add    BYTE PTR [rax],al
  43f764:	clc    
  43f765:	std    
  43f766:	add    eax,DWORD PTR [rax]
  43f768:	add    BYTE PTR [rax],al
  43f76a:	add    BYTE PTR [rax],al
  43f76c:	and    dh,bh
  43f76e:	add    eax,DWORD PTR [rax]
  43f770:	add    BYTE PTR [rax],al
  43f772:	add    BYTE PTR [rax],al
  43f774:	rex inc BYTE PTR [rbx]
  43f777:	add    BYTE PTR [rax],al
  43f779:	add    BYTE PTR [rax],al
  43f77b:	add    BYTE PTR [rsi+rdi*8+0x3],ch
  43f77f:	add    BYTE PTR [rax],al
  43f781:	add    BYTE PTR [rax],al
  43f783:	add    BYTE PTR [rsi+rdi*8+0x3],dl
  43f78a:	add    BYTE PTR [rax],al
  43f78c:	sar    dh,0x3
  43f78f:	add    BYTE PTR [rax],al
  43f791:	add    BYTE PTR [rax],al
  43f793:	add    ah,ch
  43f795:	inc    BYTE PTR [rbx]
  43f797:	add    BYTE PTR [rax],al
  43f799:	add    BYTE PTR [rax],al
  43f79b:	add    BYTE PTR [rax],dl
  43f79d:	inc    DWORD PTR [rbx]
  43f79f:	add    BYTE PTR [rax],al
  43f7a1:	add    BYTE PTR [rax],al
  43f7a3:	add    BYTE PTR [rdi+rdi*8],ch
  43f7a6:	add    eax,DWORD PTR [rax]
  43f7a8:	add    BYTE PTR [rax],al
  43f7aa:	add    BYTE PTR [rax],al
  43f7ac:	cmp    al,0xff
  43f7ae:	add    eax,DWORD PTR [rax]
  43f7b0:	add    BYTE PTR [rax],al
  43f7b2:	add    BYTE PTR [rax],al
  43f7b4:	push   rsp
  43f7b5:	inc    DWORD PTR [rbx]
  43f7b7:	add    BYTE PTR [rax],al
  43f7b9:	add    BYTE PTR [rax],al
  43f7bb:	add    BYTE PTR [rdi+rdi*8+0x3],ch
  43f7bf:	add    BYTE PTR [rax],al
  43f7c1:	add    BYTE PTR [rax],al
  43f7c3:	add    BYTE PTR [rax+0x3ff],dl
  43f7c9:	add    BYTE PTR [rax],al
  43f7cb:	add    BYTE PTR [rax+0x3ff],dh
  43f7d1:	add    BYTE PTR [rax],al
  43f7d3:	add    ah,al
  43f7d5:	inc    DWORD PTR [rbx]
  43f7d7:	add    BYTE PTR [rax],al
  43f7d9:	add    BYTE PTR [rax],al
  43f7db:	add    ah,dl
  43f7dd:	inc    DWORD PTR [rbx]
  43f7df:	add    BYTE PTR [rax],al
  43f7e1:	add    BYTE PTR [rax],al
  43f7e3:	add    al,dh
  43f7e5:	inc    DWORD PTR [rbx]
  43f7e7:	add    BYTE PTR [rax],al
  43f7e9:	add    BYTE PTR [rax],al
  43f7eb:	add    BYTE PTR [rax],dl
  43f7ed:	add    BYTE PTR [rax+rax*1],al
  43f7f0:	add    BYTE PTR [rax],al
  43f7f2:	add    BYTE PTR [rax],al
  43f7f4:	xor    BYTE PTR [rax],al
  43f7f6:	add    al,0x0
  43f7f8:	add    BYTE PTR [rax],al
  43f7fa:	add    BYTE PTR [rax],al
  43f7fc:	push   rax
  43f7fd:	add    BYTE PTR [rax+rax*1],al
  43f800:	add    BYTE PTR [rax],al
  43f802:	add    BYTE PTR [rax],al
  43f804:	push   0x400
  43f809:	add    BYTE PTR [rax],al
  43f80b:	add    BYTE PTR [rax+0x400],al
  43f811:	add    BYTE PTR [rax],al
  43f813:	add    BYTE PTR [rax+0x400],dl
  43f819:	add    BYTE PTR [rax],al
  43f81b:	add    BYTE PTR [rax+0x400],dh
  43f821:	add    BYTE PTR [rax],al
  43f823:	add    ah,al
  43f825:	add    BYTE PTR [rax+rax*1],al
  43f828:	add    BYTE PTR [rax],al
  43f82a:	add    BYTE PTR [rax],al
  43f82c:	loopne 0x43f82e
  43f82e:	add    al,0x0
  43f830:	add    BYTE PTR [rax],al
  43f832:	add    BYTE PTR [rax],al
  43f834:	cld    
  43f835:	add    BYTE PTR [rax+rax*1],al
  43f838:	add    BYTE PTR [rax],al
  43f83a:	add    BYTE PTR [rax],al
  43f83c:	and    al,0x1
  43f83e:	add    al,0x0
  43f840:	add    BYTE PTR [rax],al
  43f842:	add    BYTE PTR [rax],al
  43f844:	add    QWORD PTR [rax+rax*1],r8
  43f848:	add    BYTE PTR [rax],al
  43f84a:	add    BYTE PTR [rax],al
  43f84c:	jo     0x43f84f
  43f84e:	add    al,0x0
  43f850:	add    BYTE PTR [rax],al
  43f852:	add    BYTE PTR [rax],al
  43f854:	mov    WORD PTR [rcx],es
  43f856:	add    al,0x0
  43f858:	add    BYTE PTR [rax],al
  43f85a:	add    BYTE PTR [rax],al
  43f85c:	test   al,0x1
  43f85e:	add    al,0x0
	...
  43f86c:	rol    BYTE PTR [rcx],0x4
  43f86f:	add    BYTE PTR [rax],al
  43f871:	add    BYTE PTR [rax],al
  43f873:	add    ah,ah
  43f875:	add    DWORD PTR [rax+rax*1],eax
  43f878:	add    BYTE PTR [rax],al
  43f87a:	add    BYTE PTR [rax],al
  43f87c:	add    BYTE PTR [rdx],al
  43f87e:	add    al,0x0
  43f880:	add    BYTE PTR [rax],al
  43f882:	add    BYTE PTR [rax],al
  43f884:	sbb    al,0x2
  43f886:	add    al,0x0
  43f888:	add    BYTE PTR [rax],al
  43f88a:	add    BYTE PTR [rax],al
  43f88c:	cmp    al,0x2
  43f88e:	add    al,0x0
  43f890:	add    BYTE PTR [rax],al
  43f892:	add    BYTE PTR [rax],al
  43f894:	push   0x402
	...
  43f8a1:	add    BYTE PTR [rax],al
  43f8a3:	add    BYTE PTR [rax+0x402],cl
  43f8a9:	add    BYTE PTR [rax],al
  43f8ab:	add    BYTE PTR [rdx+rax*1+0x4],dl
  43f8b2:	add    BYTE PTR [rax],al
  43f8b4:	test   al,0x2
  43f8b6:	add    al,0x0
	...
  43f8c4:	mov    eax,0x402
  43f8c9:	add    BYTE PTR [rax],al
  43f8cb:	add    dh,al
  43f8cd:	add    al,BYTE PTR [rax+rax*1]
  43f8d0:	add    BYTE PTR [rax],al
  43f8d2:	add    BYTE PTR [rax],al
  43f8d4:	(bad)  
  43f8d5:	add    al,BYTE PTR [rax+rax*1]
  43f8d8:	add    BYTE PTR [rax],al
  43f8da:	add    BYTE PTR [rax],al
  43f8dc:	out    dx,al
  43f8dd:	add    al,BYTE PTR [rax+rax*1]
  43f8e0:	add    BYTE PTR [rax],al
  43f8e2:	add    BYTE PTR [rax],al
  43f8e4:	(bad)  
  43f8e5:	add    eax,DWORD PTR [rax+rax*1]
  43f8e8:	add    BYTE PTR [rax],al
  43f8ea:	add    BYTE PTR [rax],al
  43f8ec:	sbb    BYTE PTR [rbx],al
  43f8ee:	add    al,0x0
  43f8f0:	add    BYTE PTR [rax],al
  43f8f2:	add    BYTE PTR [rax],al
  43f8f4:	sub    al,0x3
  43f8f6:	add    al,0x0
  43f8f8:	add    BYTE PTR [rax],al
  43f8fa:	add    BYTE PTR [rax],al
  43f8fc:	add    eax,DWORD PTR [rax+r8*1]
  43f900:	add    BYTE PTR [rax],al
  43f902:	add    BYTE PTR [rax],al
  43f904:	pop    rax
  43f905:	add    eax,DWORD PTR [rax+rax*1]
  43f908:	add    BYTE PTR [rax],al
  43f90a:	add    BYTE PTR [rax],al
  43f90c:	push   0x403
  43f911:	add    BYTE PTR [rax],al
  43f913:	add    BYTE PTR [rax+0x3],bh
  43f916:	add    al,0x0
  43f918:	add    BYTE PTR [rax],al
  43f91a:	add    BYTE PTR [rax],al
  43f91c:	mov    es,WORD PTR [rbx]
  43f91e:	add    al,0x0
  43f920:	add    BYTE PTR [rax],al
  43f922:	add    BYTE PTR [rax],al
  43f924:	movabs ds:0xb400000000000403,al
  43f92d:	add    eax,DWORD PTR [rax+rax*1]
  43f930:	add    BYTE PTR [rax],al
  43f932:	add    BYTE PTR [rax],al
  43f934:	mov    BYTE PTR [rbx],0x4
  43f937:	add    BYTE PTR [rax],al
  43f939:	add    BYTE PTR [rax],al
  43f93b:	add    al,ah
  43f93d:	add    eax,DWORD PTR [rax+rax*1]
  43f940:	add    BYTE PTR [rax],al
  43f942:	add    BYTE PTR [rax],al
  43f944:	lock add eax,DWORD PTR [rax+rax*1]
  43f948:	add    BYTE PTR [rax],al
  43f94a:	add    BYTE PTR [rax],al
  43f94c:	or     al,0x4
  43f94e:	add    al,0x0
  43f950:	add    BYTE PTR [rax],al
  43f952:	add    BYTE PTR [rax],al
  43f954:	and    al,0x4
  43f956:	add    al,0x0
  43f958:	add    BYTE PTR [rax],al
  43f95a:	add    BYTE PTR [rax],al
  43f95c:	xor    al,0x4
  43f95e:	add    al,0x0
  43f960:	add    BYTE PTR [rax],al
  43f962:	add    BYTE PTR [rax],al
  43f964:	add    al,0x4
  43f967:	add    BYTE PTR [rax],al
  43f969:	add    BYTE PTR [rax],al
  43f96b:	add    BYTE PTR [rdx+0x4],bl
  43f96e:	add    al,0x0
  43f970:	add    BYTE PTR [rax],al
  43f972:	add    BYTE PTR [rax],al
  43f974:	jo     0x43f97a
  43f976:	add    al,0x0
  43f978:	add    BYTE PTR [rax],al
  43f97a:	add    BYTE PTR [rax],al
  43f97c:	test   BYTE PTR [rsp+rax*1],al
  43f97f:	add    BYTE PTR [rax],al
  43f981:	add    BYTE PTR [rax],al
  43f983:	add    BYTE PTR [rsi+0x404],bl
  43f989:	add    BYTE PTR [rax],al
  43f98b:	add    BYTE PTR [rdx+0x404],dh
  43f991:	add    BYTE PTR [rax],al
  43f993:	add    BYTE PTR [rsi+0x404],bh
  43f999:	add    BYTE PTR [rax],al
  43f99b:	add    ah,bl
  43f99d:	add    al,0x4
  43f99f:	add    BYTE PTR [rax],al
  43f9a1:	add    BYTE PTR [rax],al
  43f9a3:	add    ah,ah
  43f9a5:	add    al,0x4
  43f9a7:	add    BYTE PTR [rax],al
  43f9a9:	add    BYTE PTR [rax],al
  43f9ab:	add    al,bh
  43f9ad:	add    al,0x4
  43f9af:	add    BYTE PTR [rax],al
  43f9b1:	add    BYTE PTR [rax],al
  43f9b3:	add    BYTE PTR [rsi],al
  43f9b5:	add    eax,0x4
  43f9ba:	add    BYTE PTR [rax],al
  43f9bc:	and    BYTE PTR [rip+0x4],al        # 0x43f9c6
  43f9c2:	add    BYTE PTR [rax],al
  43f9c4:	cmp    al,0x5
  43f9c6:	add    al,0x0
  43f9c8:	add    BYTE PTR [rax],al
  43f9ca:	add    BYTE PTR [rax],al
  43f9cc:	rex.WRX add rax,0x4
  43f9d2:	add    BYTE PTR [rax],al
  43f9d4:	pop    rsi
  43f9d5:	add    eax,0x4
	...
  43f9e2:	add    BYTE PTR [rax],al
  43f9e4:	je     0x43f9eb
  43f9e6:	add    al,0x0
  43f9e8:	add    BYTE PTR [rax],al
  43f9ea:	add    BYTE PTR [rax],al
  43f9ec:	mov    WORD PTR [rip+0x4],es        # 0x43f9f6
  43f9f2:	add    BYTE PTR [rax],al
  43f9f4:	xchg   esi,eax
  43f9f5:	add    eax,0x4
  43f9fa:	add    BYTE PTR [rax],al
  43f9fc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43f9fd:	add    eax,0x4
  43fa02:	add    BYTE PTR [rax],al
  43fa04:	mov    ah,0x5
  43fa06:	add    al,0x0
  43fa08:	add    BYTE PTR [rax],al
  43fa0a:	add    BYTE PTR [rax],al
  43fa0c:	rol    BYTE PTR [rip+0x4],0x0        # 0x43fa17
  43fa13:	add    dh,cl
  43fa15:	add    eax,0x4
  43fa1a:	add    BYTE PTR [rax],al
  43fa1c:	fiadd  WORD PTR [rip+0x4]        # 0x43fa26
  43fa22:	add    BYTE PTR [rax],al
  43fa24:	lock add eax,0x4
  43fa2a:	add    BYTE PTR [rax],al
  43fa2c:	add    al,0x6
  43fa2e:	add    al,0x0
  43fa30:	add    BYTE PTR [rax],al
  43fa32:	add    BYTE PTR [rax],al
  43fa34:	(bad)  
  43fa35:	(bad)  
  43fa36:	add    al,0x0
  43fa38:	add    BYTE PTR [rax],al
  43fa3a:	add    BYTE PTR [rax],al
  43fa3c:	sbb    al,0x6
  43fa3e:	add    al,0x0
  43fa40:	add    BYTE PTR [rax],al
  43fa42:	add    BYTE PTR [rax],al
  43fa44:	es (bad) 
  43fa46:	add    al,0x0
  43fa48:	add    BYTE PTR [rax],al
  43fa4a:	add    BYTE PTR [rax],al
  43fa4c:	xor    BYTE PTR [rsi],al
  43fa4e:	add    al,0x0
  43fa50:	add    BYTE PTR [rax],al
  43fa52:	add    BYTE PTR [rax],al
  43fa54:	cmp    BYTE PTR [rsi],al
  43fa56:	add    al,0x0
  43fa58:	add    BYTE PTR [rax],al
  43fa5a:	add    BYTE PTR [rax],al
  43fa5c:	rex.X (bad) 
  43fa5e:	add    al,0x0
  43fa60:	add    BYTE PTR [rax],al
  43fa62:	add    BYTE PTR [rax],al
  43fa64:	rex.WRX (bad) 
  43fa66:	add    al,0x0
  43fa68:	add    BYTE PTR [rax],al
  43fa6a:	add    BYTE PTR [rax],al
  43fa6c:	pop    rsi
  43fa6d:	(bad)  
  43fa6e:	add    al,0x0
  43fa70:	add    BYTE PTR [rax],al
  43fa72:	add    BYTE PTR [rax],al
  43fa74:	data16 (bad) 
  43fa76:	add    al,0x0
  43fa78:	add    BYTE PTR [rax],al
  43fa7a:	add    BYTE PTR [rax],al
  43fa7c:	jo     0x43fa84
  43fa7e:	add    al,0x0
  43fa80:	add    BYTE PTR [rax],al
  43fa82:	add    BYTE PTR [rax],al
  43fa84:	jl     0x43fa8c
  43fa86:	add    al,0x0
  43fa88:	add    BYTE PTR [rax],al
  43fa8a:	add    BYTE PTR [rax],al
  43fa8c:	mov    al,BYTE PTR [rsi]
  43fa8e:	add    al,0x0
  43fa90:	add    BYTE PTR [rax],al
  43fa92:	add    BYTE PTR [rax],al
  43fa94:	xchg   esp,eax
  43fa95:	(bad)  
  43fa96:	add    al,0x0
  43fa98:	add    BYTE PTR [rax],al
  43fa9a:	add    BYTE PTR [rax],al
  43fa9c:	movabs al,ds:0xac00000000000406
  43faa5:	(bad)  
  43faa6:	add    al,0x0
  43faa8:	add    BYTE PTR [rax],al
  43faaa:	add    BYTE PTR [rax],al
  43faac:	mov    dh,0x6
  43faae:	add    al,0x0
  43fab0:	add    BYTE PTR [rax],al
  43fab2:	add    BYTE PTR [rax],al
  43fab4:	rol    BYTE PTR [rsi],0x4
  43fab7:	add    BYTE PTR [rax],al
  43fab9:	add    BYTE PTR [rax],al
  43fabb:	add    dh,cl
  43fabd:	(bad)  
  43fabe:	add    al,0x0
  43fac0:	add    BYTE PTR [rax],al
  43fac2:	add    BYTE PTR [rax],al
  43fac4:	(bad)  
  43fac5:	(bad)  
  43fac6:	add    al,0x0
  43fac8:	add    BYTE PTR [rax],al
  43faca:	add    BYTE PTR [rax],al
  43facc:	fiadd  WORD PTR [rsi]
  43face:	add    al,0x0
  43fad0:	add    BYTE PTR [rax],al
  43fad2:	add    BYTE PTR [rax],al
  43fad4:	out    0x6,al
  43fad6:	add    al,0x0
  43fad8:	add    BYTE PTR [rax],al
  43fada:	add    BYTE PTR [rax],al
  43fadc:	lock (bad) 
  43fade:	add    al,0x0
  43fae0:	add    BYTE PTR [rax],al
  43fae2:	add    BYTE PTR [rax],al
  43fae4:	clc    
  43fae5:	(bad)  
  43fae6:	add    al,0x0
  43fae8:	add    BYTE PTR [rax],al
  43faea:	add    BYTE PTR [rax],al
  43faec:	add    al,BYTE PTR [rdi]
  43faee:	add    al,0x0
  43faf0:	add    BYTE PTR [rax],al
  43faf2:	add    BYTE PTR [rax],al
  43faf4:	or     al,0x7
  43faf6:	add    al,0x0
  43faf8:	add    BYTE PTR [rax],al
  43fafa:	add    BYTE PTR [rax],al
  43fafc:	adc    al,0x7
  43fafe:	add    al,0x0
  43fb00:	add    BYTE PTR [rax],al
  43fb02:	add    BYTE PTR [rax],al
  43fb04:	sbb    al,0x7
  43fb06:	add    al,0x0
  43fb08:	add    BYTE PTR [rax],al
  43fb0a:	add    BYTE PTR [rax],al
  43fb0c:	es (bad) 
  43fb0e:	add    al,0x0
  43fb10:	add    BYTE PTR [rax],al
  43fb12:	add    BYTE PTR [rax],al
  43fb14:	cs (bad) 
  43fb16:	add    al,0x0
  43fb18:	add    BYTE PTR [rax],al
  43fb1a:	add    BYTE PTR [rax],al
  43fb1c:	ss (bad) 
  43fb1e:	add    al,0x0
  43fb20:	add    BYTE PTR [rax],al
  43fb22:	add    BYTE PTR [rax],al
  43fb24:	ds (bad) 
  43fb26:	add    al,0x0
  43fb28:	add    BYTE PTR [rax],al
  43fb2a:	add    BYTE PTR [rax],al
  43fb2c:	rex.WX (bad) 
  43fb2e:	add    al,0x0
  43fb30:	add    BYTE PTR [rax],al
  43fb32:	add    BYTE PTR [rax],al
  43fb34:	push   rsp
  43fb35:	(bad)  
  43fb36:	add    al,0x0
  43fb38:	add    BYTE PTR [rax],al
  43fb3a:	add    BYTE PTR [rax],al
  43fb3c:	pop    rsi
  43fb3d:	(bad)  
  43fb3e:	add    al,0x0
  43fb40:	add    BYTE PTR [rax],al
  43fb42:	add    BYTE PTR [rax],al
  43fb44:	push   0x407
  43fb49:	add    BYTE PTR [rax],al
  43fb4b:	add    BYTE PTR [rdx+0x7],dh
  43fb4e:	add    al,0x0
  43fb50:	add    BYTE PTR [rax],al
  43fb52:	add    BYTE PTR [rax],al
  43fb54:	jl     0x43fb5d
  43fb56:	add    al,0x0
  43fb58:	add    BYTE PTR [rax],al
  43fb5a:	add    BYTE PTR [rax],al
  43fb5c:	xchg   BYTE PTR [rdi],al
  43fb5e:	add    al,0x0
  43fb60:	add    BYTE PTR [rax],al
  43fb62:	add    BYTE PTR [rax],al
  43fb64:	nop
  43fb65:	(bad)  
  43fb66:	add    al,0x0
  43fb68:	add    BYTE PTR [rax],al
  43fb6a:	add    BYTE PTR [rax],al
  43fb6c:	(bad)  
  43fb6d:	(bad)  
  43fb6e:	add    al,0x0
  43fb70:	add    BYTE PTR [rax],al
  43fb72:	add    BYTE PTR [rax],al
  43fb74:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  43fb75:	(bad)  
  43fb76:	add    al,0x0
  43fb78:	add    BYTE PTR [rax],al
  43fb7a:	add    BYTE PTR [rax],al
  43fb7c:	scas   al,BYTE PTR es:[rdi]
  43fb7d:	(bad)  
  43fb7e:	add    al,0x0
  43fb80:	add    BYTE PTR [rax],al
  43fb82:	add    BYTE PTR [rax],al
  43fb84:	mov    eax,0x407
  43fb89:	add    BYTE PTR [rax],al
  43fb8b:	add    dl,al
  43fb8d:	(bad)  
  43fb8e:	add    al,0x0
  43fb90:	add    BYTE PTR [rax],al
  43fb92:	add    BYTE PTR [rax],al
  43fb94:	int3   
  43fb95:	(bad)  
  43fb96:	add    al,0x0
  43fb98:	add    BYTE PTR [rax],al
  43fb9a:	add    BYTE PTR [rax],al
  43fb9c:	(bad)  
  43fb9d:	(bad)  
  43fb9e:	add    al,0x0
  43fba0:	add    BYTE PTR [rax],al
  43fba2:	add    BYTE PTR [rax],al
  43fba4:	loopne 0x43fbad
  43fba6:	add    al,0x0
  43fba8:	add    BYTE PTR [rax],al
  43fbaa:	add    BYTE PTR [rax],al
  43fbac:	call   0x43ffb8
  43fbb1:	add    BYTE PTR [rax],al
  43fbb3:	add    al,dh
  43fbb5:	(bad)  
  43fbb6:	add    al,0x0
  43fbb8:	add    BYTE PTR [rax],al
  43fbba:	add    BYTE PTR [rax],al
  43fbbc:	cli    
  43fbbd:	(bad)  
  43fbbe:	add    al,0x0
  43fbc0:	add    BYTE PTR [rax],al
  43fbc2:	add    BYTE PTR [rax],al
  43fbc4:	add    al,0x8
  43fbc6:	add    al,0x0
  43fbc8:	add    BYTE PTR [rax],al
  43fbca:	add    BYTE PTR [rax],al
  43fbcc:	adc    BYTE PTR [rax],cl
  43fbce:	add    al,0x0
  43fbd0:	add    BYTE PTR [rax],al
  43fbd2:	add    BYTE PTR [rax],al
  43fbd4:	sbb    cl,BYTE PTR [rax]
  43fbd6:	add    al,0x0
  43fbd8:	add    BYTE PTR [rax],al
  43fbda:	add    BYTE PTR [rax],al
  43fbdc:	and    al,0x8
  43fbde:	add    al,0x0
  43fbe0:	add    BYTE PTR [rax],al
  43fbe2:	add    BYTE PTR [rax],al
  43fbe4:	or     BYTE PTR cs:[rax+rax*1],al
  43fbe8:	add    BYTE PTR [rax],al
  43fbea:	add    BYTE PTR [rax],al
  43fbec:	cmp    BYTE PTR [rax],cl
  43fbee:	add    al,0x0
  43fbf0:	add    BYTE PTR [rax],al
  43fbf2:	add    BYTE PTR [rax],al
  43fbf4:	or     BYTE PTR [rax+r8*1],al
  43fbf8:	add    BYTE PTR [rax],al
  43fbfa:	add    BYTE PTR [rax],al
  43fbfc:	rex.WR or BYTE PTR [rax+rax*1],r8b
  43fc00:	add    BYTE PTR [rax],al
  43fc02:	add    BYTE PTR [rax],al
  43fc04:	pop    rax
  43fc05:	or     BYTE PTR [rax+rax*1],al
  43fc08:	add    BYTE PTR [rax],al
  43fc0a:	add    BYTE PTR [rax],al
  43fc0c:	or     BYTE PTR fs:[rax+rax*1],al
  43fc10:	add    BYTE PTR [rax],al
  43fc12:	add    BYTE PTR [rax],al
  43fc14:	outs   dx,BYTE PTR ds:[rsi]
  43fc15:	or     BYTE PTR [rax+rax*1],al
  43fc18:	add    BYTE PTR [rax],al
  43fc1a:	add    BYTE PTR [rax],al
  43fc1c:	js     0x43fc26
  43fc1e:	add    al,0x0
  43fc20:	add    BYTE PTR [rax],al
  43fc22:	add    BYTE PTR [rax],al
  43fc24:	(bad)  
  43fc25:	or     BYTE PTR [rax+rax*1],al
  43fc28:	add    BYTE PTR [rax],al
  43fc2a:	add    BYTE PTR [rax],al
  43fc2c:	mov    WORD PTR [rax],cs
  43fc2e:	add    al,0x0
  43fc30:	add    BYTE PTR [rax],al
  43fc32:	add    BYTE PTR [rax],al
  43fc34:	xchg   esi,eax
  43fc35:	or     BYTE PTR [rax+rax*1],al
  43fc38:	add    BYTE PTR [rax],al
  43fc3a:	add    BYTE PTR [rax],al
  43fc3c:	movabs al,ds:0xaa00000000000408
  43fc45:	or     BYTE PTR [rax+rax*1],al
  43fc48:	add    BYTE PTR [rax],al
  43fc4a:	add    BYTE PTR [rax],al
  43fc4c:	mov    ah,0x8
  43fc4e:	add    al,0x0
  43fc50:	add    BYTE PTR [rax],al
  43fc52:	add    BYTE PTR [rax],al
  43fc54:	ror    BYTE PTR [rax],0x4
  43fc57:	add    BYTE PTR [rax],al
  43fc59:	add    BYTE PTR [rax],al
  43fc5b:	add    dl,cl
  43fc5d:	or     BYTE PTR [rax+rax*1],al
	...
  43fc6c:	(bad)  
  43fc6d:	or     BYTE PTR [rax+rax*1],al
  43fc70:	add    BYTE PTR [rax],al
  43fc72:	add    BYTE PTR [rax],al
  43fc74:	in     al,dx
  43fc75:	or     BYTE PTR [rax+rax*1],al
  43fc78:	add    BYTE PTR [rax],al
  43fc7a:	add    BYTE PTR [rax],al
  43fc7c:	add    BYTE PTR [rcx],cl
  43fc7e:	add    al,0x0
	...
  43fc8c:	sbb    BYTE PTR [rcx],cl
  43fc8e:	add    al,0x0
  43fc90:	add    BYTE PTR [rax],al
  43fc92:	add    BYTE PTR [rax],al
  43fc94:	or     DWORD PTR es:[rax+rax*1],eax
  43fc98:	add    BYTE PTR [rax],al
  43fc9a:	add    BYTE PTR [rax],al
  43fc9c:	or     DWORD PTR ds:[rax+rax*1],eax
	...
  43fcac:	pop    rsp
  43fcad:	or     DWORD PTR [rax+rax*1],eax
	...
  43fcbc:	push   0x9
  43fcbe:	add    al,0x0
  43fcc0:	add    BYTE PTR [rax],al
  43fcc2:	add    BYTE PTR [rax],al
  43fcc4:	js     0x43fccf
  43fcc6:	add    al,0x0
  43fcc8:	add    BYTE PTR [rax],al
  43fcca:	add    BYTE PTR [rax],al
  43fccc:	mov    cl,BYTE PTR [rcx]
  43fcce:	add    al,0x0
  43fcd0:	add    BYTE PTR [rax],al
  43fcd2:	add    BYTE PTR [rax],al
  43fcd4:	pushf  
  43fcd5:	or     DWORD PTR [rax+rax*1],eax
  43fcd8:	add    BYTE PTR [rax],al
  43fcda:	add    BYTE PTR [rax],al
  43fcdc:	stos   BYTE PTR es:[rdi],al
  43fcdd:	or     DWORD PTR [rax+rax*1],eax
  43fce0:	add    BYTE PTR [rax],al
  43fce2:	add    BYTE PTR [rax],al
  43fce4:	mov    edx,0x409
  43fce9:	add    BYTE PTR [rax],al
  43fceb:	add    ah,al
  43fced:	or     DWORD PTR [rax+rax*1],eax
  43fcf0:	add    BYTE PTR [rax],al
  43fcf2:	add    BYTE PTR [rax],al
  43fcf4:	int3   
  43fcf5:	or     DWORD PTR [rax+rax*1],eax
  43fcf8:	add    BYTE PTR [rax],al
  43fcfa:	add    BYTE PTR [rax],al
  43fcfc:	fimul  DWORD PTR [rcx]
  43fcfe:	add    al,0x0
  43fd00:	add    BYTE PTR [rax],al
  43fd02:	add    BYTE PTR [rax],al
  43fd04:	in     al,0x9
  43fd06:	add    al,0x0
  43fd08:	add    BYTE PTR [rax],al
  43fd0a:	add    BYTE PTR [rax],al
  43fd0c:	hlt    
  43fd0d:	or     DWORD PTR [rax+rax*1],eax
  43fd10:	add    BYTE PTR [rax],al
  43fd12:	add    BYTE PTR [rax],al
  43fd14:	add    cl,BYTE PTR [rdx]
  43fd16:	add    al,0x0
  43fd18:	add    BYTE PTR [rax],al
  43fd1a:	add    BYTE PTR [rax],al
  43fd1c:	adc    BYTE PTR [rdx],cl
  43fd1e:	add    al,0x0
  43fd20:	add    BYTE PTR [rax],al
  43fd22:	add    BYTE PTR [rax],al
  43fd24:	(bad)  
  43fd25:	or     al,BYTE PTR [rax+rax*1]
  43fd28:	add    BYTE PTR [rax],al
  43fd2a:	add    BYTE PTR [rax],al
  43fd2c:	sub    al,0xa
  43fd2e:	add    al,0x0
  43fd30:	add    BYTE PTR [rax],al
  43fd32:	add    BYTE PTR [rax],al
  43fd34:	cmp    cl,BYTE PTR [rdx]
  43fd36:	add    al,0x0
  43fd38:	add    BYTE PTR [rax],al
  43fd3a:	add    BYTE PTR [rax],al
  43fd3c:	rex.W or al,BYTE PTR [rax+rax*1]
  43fd40:	add    BYTE PTR [rax],al
  43fd42:	add    BYTE PTR [rax],al
  43fd44:	push   rax
  43fd45:	or     al,BYTE PTR [rax+rax*1]
  43fd48:	add    BYTE PTR [rax],al
  43fd4a:	add    BYTE PTR [rax],al
  43fd4c:	pop    rax
  43fd4d:	or     al,BYTE PTR [rax+rax*1]
  43fd50:	add    BYTE PTR [rax],al
  43fd52:	add    BYTE PTR [rax],al
  43fd54:	data16 or al,BYTE PTR [rax+rax*1]
  43fd58:	add    BYTE PTR [rax],al
  43fd5a:	add    BYTE PTR [rax],al
  43fd5c:	jo     0x43fd68
  43fd5e:	add    al,0x0
  43fd60:	add    BYTE PTR [rax],al
  43fd62:	add    BYTE PTR [rax],al
  43fd64:	js     0x43fd70
  43fd66:	add    al,0x0
  43fd68:	add    BYTE PTR [rax],al
  43fd6a:	add    BYTE PTR [rax],al
  43fd6c:	or     BYTE PTR [rdx],0x4
  43fd6f:	add    BYTE PTR [rax],al
  43fd71:	add    BYTE PTR [rax],al
  43fd73:	add    BYTE PTR [rdx+0x40a],cl
  43fd79:	add    BYTE PTR [rax],al
  43fd7b:	add    BYTE PTR [rdx+0x40a],dl
  43fd81:	add    BYTE PTR [rax],al
  43fd83:	add    BYTE PTR [rdx+rcx*1+0x4],bl
  43fd8a:	add    BYTE PTR [rax],al
  43fd8c:	stos   BYTE PTR es:[rdi],al
  43fd8d:	or     al,BYTE PTR [rax+rax*1]
	...
  43fd9c:	(bad)  
  43fd9d:	add    DWORD PTR [rdi+0x5f],ebx
  43fda0:	ins    DWORD PTR es:[edi],dx
  43fda2:	jo     0x43fe1e
  43fda4:	pop    rdi
  43fda5:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  43fda9:	jb     0x43fdab
  43fdab:	add    BYTE PTR [rax],cl
  43fdad:	add    bl,BYTE PTR [rdi+0x5f]
  43fdb0:	ins    DWORD PTR es:[edi],dx
  43fdb2:	jo     0x43fe2e
  43fdb4:	pop    rdi
  43fdb5:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  43fdbc:	xor    al,BYTE PTR [rdx]
  43fdbe:	pop    rdi
  43fdbf:	pop    rdi
  43fdc0:	ins    DWORD PTR es:[edi],dx
  43fdc2:	jo     0x43fe3e
  43fdc4:	pop    rdi
  43fdc5:	jo     0x43fe36
  43fdc7:	ja     0x43fe36
  43fdc9:	add    BYTE PTR [rax],al
  43fdcb:	add    BYTE PTR [rax],ch
  43fdcd:	add    BYTE PTR [rdi+0x6e],ah
  43fdd0:	jne    0x43fe46
  43fdd2:	ins    BYTE PTR es:[rdi],dx
  43fdd3:	jae    0x43fe34
  43fdd5:	movsxd esp,DWORD PTR [rbp+0x72]
  43fdd8:	je     0x43fe43
  43fdda:	imul   sp,WORD PTR [rbx+0x61],0x6574
  43fde0:	pop    rdi
  43fde1:	(bad)  
  43fde2:	ins    BYTE PTR es:[rdi],dx
  43fde3:	ins    BYTE PTR es:[rdi],dx
  43fde4:	outs   dx,DWORD PTR ds:[rsi]
  43fde5:	movsxd esp,DWORD PTR [rcx+0x74]
  43fde8:	gs pop rdi
  43fdea:	movsxd esi,DWORD PTR [rdx+0x65]
  43fded:	fs outs dx,BYTE PTR gs:[rsi]
  43fdf0:	je     0x43fe5b
  43fdf2:	(bad)  
  43fdf3:	ins    BYTE PTR es:[rdi],dx
  43fdf4:	jae    0x43fdf6
  43fdf6:	add    BYTE PTR [rax],al
  43fdf8:	sub    eax,0x756e6700
  43fdfd:	je     0x43fe6b
  43fdff:	jae    0x43fe60
  43fe01:	movsxd esp,DWORD PTR [rbp+0x72]
  43fe04:	je     0x43fe6f
  43fe06:	imul   sp,WORD PTR [rbx+0x61],0x6574
  43fe0c:	pop    rdi
  43fe0d:	data16 jb 0x43fe75
  43fe10:	gs pop rdi
  43fe12:	movsxd esi,DWORD PTR [rdx+0x65]
  43fe15:	fs outs dx,BYTE PTR gs:[rsi]
  43fe18:	je     0x43fe83
  43fe1a:	(bad)  
  43fe1b:	ins    BYTE PTR es:[rdi],dx
  43fe1c:	jae    0x43fe1e
  43fe1e:	add    BYTE PTR [rax],al
  43fe20:	xor    eax,0x756e6700
  43fe25:	je     0x43fe93
  43fe27:	jae    0x43fe88
  43fe29:	movsxd esp,DWORD PTR [rbp+0x72]
  43fe2c:	je     0x43fe97
  43fe2e:	imul   sp,WORD PTR [rbx+0x61],0x6574
  43fe34:	pop    rdi
  43fe35:	addr32 gs je 0x43fe98
  43fe39:	jo     0x43fea0
  43fe3b:	gs jb  0x43feb1
  43fe3e:	add    BYTE PTR [rax],al
  43fe40:	rex.WRXB add BYTE PTR [r15+0x6e],r12b
  43fe44:	jne    0x43feba
  43fe46:	ins    BYTE PTR es:[rdi],dx
  43fe47:	jae    0x43fea8
  43fe49:	movsxd esp,DWORD PTR [rbp+0x72]
  43fe4c:	je     0x43feb7
  43fe4e:	imul   sp,WORD PTR [rbx+0x61],0x6574
  43fe54:	pop    rdi
  43fe55:	jae    0x43febc
  43fe57:	je     0x43feb8
  43fe59:	jbe    0x43fec0
  43fe5b:	jb     0x43fec6
  43fe5d:	data16 jns 0x43febf
  43fe60:	data16 jne 0x43fed1
  43fe63:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  43fe67:	outs   dx,BYTE PTR ds:[rsi]
  43fe68:	add    BYTE PTR [rax],al
  43fe6a:	add    BYTE PTR [rax],al
  43fe6c:	push   rdx
  43fe6d:	add    BYTE PTR [rdi+0x6e],ah
  43fe70:	jne    0x43fee6
  43fe72:	ins    BYTE PTR es:[rdi],dx
  43fe73:	jae    0x43fed4
  43fe75:	movsxd esp,DWORD PTR [rbp+0x72]
  43fe78:	je     0x43fee3
  43fe7a:	imul   sp,WORD PTR [rbx+0x61],0x6574
  43fe80:	pop    rdi
  43fe81:	jae    0x43fee8
  43fe83:	je     0x43fee4
  43fe85:	js     0x43febc
  43fe87:	xor    BYTE PTR [rcx],bh
  43fe89:	pop    rdi
  43fe8a:	movsxd esi,DWORD PTR [rdx+0x6c]
  43fe8d:	pop    rdi
  43fe8e:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x5b00
  43fe95:	add    BYTE PTR [rdi+0x6e],ah
  43fe98:	jne    0x43ff0e
  43fe9a:	ins    BYTE PTR es:[rdi],dx
  43fe9b:	jae    0x43fefc
  43fe9d:	movsxd esp,DWORD PTR [rbp+0x72]
  43fea0:	je     0x43ff0b
  43fea2:	imul   sp,WORD PTR [rbx+0x61],0x6574
  43fea8:	pop    rdi
  43fea9:	jae    0x43ff10
  43feab:	je     0x43ff0c
  43fead:	js     0x43fee4
  43feaf:	xor    BYTE PTR [rcx],bh
  43feb1:	pop    rdi
  43feb2:	jae    0x43ff2d
  43feb4:	jae    0x43ff2a
  43feb6:	gs ins DWORD PTR es:[rdi],dx
  43feb8:	pop    rdi
  43feb9:	je     0x43ff2d
  43febb:	jne    0x43ff30
  43febd:	je     0x43febf
  43febf:	add    BYTE PTR [rsi+0x0],bl
  43fec2:	outs   dx,BYTE PTR ds:[esi]
  43fec4:	jne    0x43ff3a
  43fec6:	ins    BYTE PTR es:[rdi],dx
  43fec7:	jae    0x43ff28
  43fec9:	movsxd esp,DWORD PTR [rbp+0x72]
  43fecc:	je     0x43ff37
  43fece:	imul   sp,WORD PTR [rbx+0x61],0x6574
  43fed4:	pop    rdi
  43fed5:	jae    0x43ff3c
  43fed7:	je     0x43ff38
  43fed9:	js     0x43ff10
  43fedb:	xor    BYTE PTR [rcx],bh
  43fedd:	pop    rdi
  43fede:	je     0x43ff52
  43fee0:	jne    0x43ff55
  43fee2:	je     0x43ff43
  43fee4:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x0
  43feeb:	add    BYTE PTR [rsi+0x0],ah
  43feee:	outs   dx,BYTE PTR ds:[esi]
  43fef0:	jne    0x43ff66
  43fef2:	ins    BYTE PTR es:[rdi],dx
  43fef3:	jae    0x43ff54
  43fef5:	movsxd esp,DWORD PTR [rbp+0x72]
  43fef8:	je     0x43ff63
  43fefa:	imul   sp,WORD PTR [rbx+0x61],0x6574
  43ff00:	pop    rdi
  43ff01:	jbe    0x43ff68
  43ff03:	jb     0x43ff6e
  43ff05:	data16 jns 0x43ff67
  43ff08:	jo     0x43ff6f
  43ff0a:	gs jb  0x43ff80
  43ff0d:	xor    al,BYTE PTR [rax]
  43ff0f:	add    BYTE PTR [rdx+0x756e6700],al
  43ff15:	je     0x43ff83
  43ff17:	jae    0x43ff78
  43ff19:	movsxd esi,DWORD PTR [rdx+0x65]
  43ff1c:	fs outs dx,BYTE PTR gs:[rsi]
  43ff1f:	je     0x43ff8a
  43ff21:	(bad)  
  43ff22:	ins    BYTE PTR es:[rdi],dx
  43ff23:	jae    0x43ff84
  43ff25:	jae    0x43ff8c
  43ff27:	je     0x43ff29
  43ff29:	add    BYTE PTR [rax],al
  43ff2b:	add    BYTE PTR [rcx+0x756e6700],dl
  43ff31:	je     0x43ff9f
  43ff33:	jae    0x43ff94
  43ff35:	fs imul ebp,DWORD PTR gs:[rsi+0x69],0xbe0074
  43ff3e:	outs   dx,BYTE PTR ds:[esi]
  43ff40:	jne    0x43ffb6
  43ff42:	ins    BYTE PTR es:[rdi],dx
  43ff43:	jae    0x43ffa4
  43ff45:	ins    BYTE PTR es:[edi],dx
  43ff47:	outs   dx,DWORD PTR ds:[rsi]
  43ff48:	(bad)
  43ff4d:	imul   ebp,DWORD PTR gs:[rsi+0x69],0xbf000074
  43ff55:	add    BYTE PTR [rdi+0x6e],ah
  43ff58:	jne    0x43ffce
  43ff5a:	ins    BYTE PTR es:[rdi],dx
  43ff5b:	jae    0x43ffbc
  43ff5d:	ins    BYTE PTR es:[edi],dx
  43ff5f:	outs   dx,DWORD PTR ds:[rsi]
  43ff60:	(bad)
  43ff65:	outs   dx,BYTE PTR ds:[rsi]
  43ff66:	imul   esi,DWORD PTR [rax+rax*1+0x0],0xc10000
  43ff6e:	outs   dx,BYTE PTR ds:[esi]
  43ff70:	jne    0x43ffe6
  43ff72:	ins    BYTE PTR es:[rdi],dx
  43ff73:	jae    0x43ffd4
  43ff75:	ins    BYTE PTR es:[edi],dx
  43ff77:	outs   dx,DWORD PTR ds:[rsi]
  43ff78:	(bad)
  43ff7d:	gs je  0x43ffdf
  43ff80:	ins    BYTE PTR es:[rdi],dx
  43ff81:	outs   dx,DWORD PTR ds:[rsi]
  43ff82:	addr32 pop rdi
  43ff84:	data16 jne 0x43fff5
  43ff87:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  43ff8b:	outs   dx,BYTE PTR ds:[rsi]
  43ff8c:	add    BYTE PTR [rax],al
  43ff8e:	add    BYTE PTR [rax],al
  43ff90:	ret    0x6700
  43ff93:	outs   dx,BYTE PTR ds:[rsi]
  43ff94:	jne    0x44000a
  43ff96:	ins    BYTE PTR es:[rdi],dx
  43ff97:	jae    0x43fff8
  43ff99:	ins    BYTE PTR es:[edi],dx
  43ff9b:	outs   dx,DWORD PTR ds:[rsi]
  43ff9c:	(bad)
  43ffa1:	gs je  0x440003
  43ffa4:	ins    BYTE PTR es:[rdi],dx
  43ffa5:	outs   dx,DWORD PTR ds:[rsi]
  43ffa6:	addr32 pop rdi
  43ffa8:	ins    BYTE PTR es:[rdi],dx
  43ffa9:	gs jbe 0x440011
  43ffac:	ins    BYTE PTR es:[rdi],dx
  43ffad:	add    BYTE PTR [rax],al
  43ffaf:	add    dh,al
  43ffb1:	add    BYTE PTR [rdi+0x6e],ah
  43ffb4:	jne    0x44002a
  43ffb6:	ins    BYTE PTR es:[rdi],dx
  43ffb7:	jae    0x440018
  43ffb9:	push   0x73646e61
  43ffbe:	push   0x656b61
  43ffc3:	add    al,ch
  43ffc5:	add    BYTE PTR [rdi+0x6e],ah
  43ffc8:	jne    0x44003e
  43ffca:	ins    BYTE PTR es:[rdi],dx
  43ffcb:	jae    0x44002c
  43ffcd:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  43ffd4:	jno    0x43ffd7
  43ffd6:	outs   dx,BYTE PTR ds:[esi]
  43ffd8:	jne    0x44004e
  43ffda:	ins    BYTE PTR es:[rdi],dx
  43ffdb:	jae    0x44003c
  43ffdd:	jo     0x440044
  43ffdf:	ins    DWORD PTR es:[rdi],dx
  43ffe0:	pop    rdi
  43ffe1:	(bad)  
  43ffe3:	jae    0x44004a
  43ffe5:	ss xor al,0x5f
  43ffe8:	fs movsxd ebp,DWORD PTR gs:[rdi+0x64]
  43ffed:	add    BYTE PTR gs:[rax],al
  43fff0:	leave  
  43fff1:	add    DWORD PTR [rdi+0x6e],esp
  43fff4:	jne    0x44006a
  43fff6:	ins    BYTE PTR es:[rdi],dx
  43fff7:	jae    0x440058
  43fff9:	jo     0x44006d
  43fffb:	imul   ebp,DWORD PTR [rdi+0x72],0x5f797469
  440002:	jae    0x440069
  440004:	je     0x440065
  440006:	imul   esi,DWORD PTR fs:[rdx+0x65],0x7463
  44000e:	add    BYTE PTR [rax],al
  440010:	and    al,BYTE PTR [rdx]
  440012:	outs   dx,BYTE PTR ds:[esi]
  440014:	jne    0x44008a
  440016:	ins    BYTE PTR es:[rdi],dx
  440017:	jae    0x440078
  440019:	jb     0x440080
  44001b:	movsxd ebp,DWORD PTR [rdi+0x72]
  44001e:	fs pop rdi
  440020:	movsxd ebp,DWORD PTR [rax+0x65]
  440023:	movsxd ebp,DWORD PTR [rbx+0x5f]
  440026:	jo     0x44008d
  440028:	outs   dx,BYTE PTR ds:[rsi]
  440029:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x24000000
  440031:	add    ah,BYTE PTR [rdi+0x6e]
  440034:	jne    0x4400aa
  440036:	ins    BYTE PTR es:[rdi],dx
  440037:	jae    0x440098
  440039:	jb     0x4400a0
  44003b:	movsxd ebp,DWORD PTR [rdi+0x72]
  44003e:	fs pop rdi
  440040:	imul   esi,DWORD PTR fs:[rbx+0x61],0x5f656c62
  440048:	jo     0x4400ab
  44004a:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x67022b00
  440053:	outs   dx,BYTE PTR ds:[rsi]
  440054:	jne    0x4400ca
  440056:	ins    BYTE PTR es:[rdi],dx
  440057:	jae    0x4400b8
  440059:	jb     0x4400c0
  44005b:	movsxd ebp,DWORD PTR [rdi+0x72]
  44005e:	fs pop rdi
  440060:	jb     0x4400c7
  440062:	movsxd esi,DWORD PTR [rsi+0x0]
  440065:	add    BYTE PTR [rax],al
  440067:	add    BYTE PTR [rsi],ch
  440069:	add    ah,BYTE PTR [rdi+0x6e]
  44006c:	jne    0x4400e2
  44006e:	ins    BYTE PTR es:[rdi],dx
  44006f:	jae    0x4400d0
  440071:	jb     0x4400d8
  440073:	movsxd ebp,DWORD PTR [rdi+0x72]
  440076:	fs pop rdi
  440078:	jae    0x4400df
  44007a:	outs   dx,BYTE PTR ds:[rsi]
  44007b:	add    BYTE PTR fs:[rax],al
  44007e:	add    BYTE PTR [rax],al
  440080:	add    ah,BYTE PTR ss:[rdi+0x6e]
  440084:	jne    0x4400fa
  440086:	ins    BYTE PTR es:[rdi],dx
  440087:	jae    0x4400e8
  440089:	jb     0x4400f9
  44008b:	add    BYTE PTR fs:[rax],al
  44008e:	add    BYTE PTR [rax],al
  440090:	pop    rax
  440091:	add    ah,BYTE PTR [rdi+0x6e]
  440094:	jne    0x44010a
  440096:	ins    BYTE PTR es:[rdi],dx
  440097:	jae    0x4400f8
  440099:	jae    0x440100
  44009b:	je     0x4400fc
  44009d:	fs gs data16 (bad) 
  4400a1:	jne    0x44010f
  4400a3:	je     0x440104
  4400a5:	jo     0x440119
  4400a7:	imul   ebp,DWORD PTR [rdi+0x72],0x797469
  4400ae:	add    BYTE PTR [rax],al
  4400b0:	mov    BYTE PTR [rdx],al
  4400b2:	outs   dx,BYTE PTR ds:[esi]
  4400b4:	jne    0x44012a
  4400b6:	ins    BYTE PTR es:[rdi],dx
  4400b7:	jae    0x440118
  4400b9:	jae    0x44012f
  4400bb:	jb     0x440122
  4400bd:	jb     0x440131
  4400bf:	outs   dx,DWORD PTR ds:[rsi]
  4400c0:	jb     0x4400c2
  4400c2:	add    BYTE PTR [rax],al
  4400c4:	movabs ds:0x5f736c74756e6702,eax
  4400cd:	je     0x440141
  4400cf:	(bad)  
  4400d0:	outs   dx,BYTE PTR ds:[rsi]
  4400d1:	jae    0x440143
  4400d3:	outs   dx,DWORD PTR ds:[rsi]
  4400d4:	jb     0x44014a
  4400d6:	pop    rdi
  4400d7:	addr32 gs je 0x44013a
  4400db:	jo     0x440151
  4400dd:	jb     0x4400df
  4400df:	add    BYTE PTR [rax+0x756e6702],ch
  4400e5:	je     0x440153
  4400e7:	jae    0x440148
  4400e9:	je     0x44015d
  4400eb:	(bad)  
  4400ec:	outs   dx,BYTE PTR ds:[rsi]
  4400ed:	jae    0x44015f
  4400ef:	outs   dx,DWORD PTR ds:[rsi]
  4400f0:	jb     0x440166
  4400f2:	pop    rdi
  4400f3:	jae    0x44015a
  4400f5:	je     0x440156
  4400f7:	jo     0x44016d
  4400f9:	jb     0x4400fb
  4400fb:	add    BYTE PTR [rdx+0x756e6702],ch
  440101:	je     0x44016f
  440103:	jae    0x440164
  440105:	je     0x440179
  440107:	(bad)  
  440108:	outs   dx,BYTE PTR ds:[rsi]
  440109:	jae    0x44017b
  44010b:	outs   dx,DWORD PTR ds:[rsi]
  44010c:	jb     0x440182
  44010e:	pop    rdi
  44010f:	jae    0x440176
  440111:	je     0x440172
  440113:	jo     0x44018a
  440115:	ins    BYTE PTR es:[rdi],dx
  440116:	ins    BYTE PTR es:[rdi],dx
  440117:	pop    rdi
  440118:	data16 jne 0x440189
  44011b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  44011f:	outs   dx,BYTE PTR ds:[rsi]
  440120:	add    BYTE PTR [rax],al
  440122:	add    BYTE PTR [rax],al
  440124:	lods   al,BYTE PTR ds:[rsi]
  440125:	add    ah,BYTE PTR [rdi+0x6e]
  440128:	jne    0x44019e
  44012a:	ins    BYTE PTR es:[rdi],dx
  44012b:	jae    0x44018c
  44012d:	je     0x4401a1
  44012f:	(bad)  
  440130:	outs   dx,BYTE PTR ds:[rsi]
  440131:	jae    0x4401a3
  440133:	outs   dx,DWORD PTR ds:[rsi]
  440134:	jb     0x4401aa
  440136:	pop    rdi
  440137:	jae    0x44019e
  440139:	je     0x44019a
  44013b:	jo     0x4401b2
  44013d:	jae    0x4401a7
  44013f:	pop    rdi
  440140:	data16 jne 0x4401b1
  440143:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  440147:	outs   dx,BYTE PTR ds:[rsi]
  440148:	add    BYTE PTR [rax],al
  44014a:	add    BYTE PTR [rax],al
  44014c:	(bad)  
  44014d:	add    esp,DWORD PTR [rdi+0x6e]
  440150:	jne    0x4401c6
  440152:	ins    BYTE PTR es:[rdi],dx
  440153:	jae    0x4401b4
  440155:	js     0x44018c
  440157:	xor    BYTE PTR [rcx],bh
  440159:	pop    rdi
  44015a:	movsxd esi,DWORD PTR [rdx+0x74]
  44015d:	pop    rdi
  44015e:	movsxd ebp,DWORD PTR [rax+0x65]
  440161:	movsxd ebp,DWORD PTR [rbx+0x5f]
  440164:	push   0x6e74736f
  440169:	(bad)  
  44016a:	ins    DWORD PTR es:[rdi],dx
  44016b:	add    BYTE PTR gs:[rax],al
  44016e:	add    BYTE PTR [rax],al
  440170:	sbb    al,0x3
  440172:	outs   dx,BYTE PTR ds:[esi]
  440174:	jne    0x4401ea
  440176:	ins    BYTE PTR es:[rdi],dx
  440177:	jae    0x4401d8
  440179:	js     0x4401b0
  44017b:	xor    BYTE PTR [rcx],bh
  44017d:	pop    rdi
  44017e:	movsxd esi,DWORD PTR [rdx+0x74]
  440181:	pop    rdi
  440182:	fs imul ebp,DWORD PTR gs:[rsi+0x69],0x74
  44018b:	add    BYTE PTR [rbx+0x3],dl
  44018e:	outs   dx,BYTE PTR ds:[esi]
  440190:	jne    0x440206
  440192:	ins    BYTE PTR es:[rdi],dx
  440193:	jae    0x4401f4
  440195:	js     0x4401cc
  440197:	xor    BYTE PTR [rcx],bh
  440199:	pop    rdi
  44019a:	movsxd esi,DWORD PTR [rdx+0x74]
  44019d:	pop    rdi
  44019e:	imul   ebp,DWORD PTR [rbp+0x70],0x74726f
  4401a5:	add    BYTE PTR [rax],al
  4401a7:	add    BYTE PTR [rbp+0x3],dl
  4401aa:	outs   dx,BYTE PTR ds:[esi]
  4401ac:	jne    0x440222
  4401ae:	ins    BYTE PTR es:[rdi],dx
  4401af:	jae    0x440210
  4401b1:	js     0x4401e8
  4401b3:	xor    BYTE PTR [rcx],bh
  4401b5:	pop    rdi
  4401b6:	movsxd esi,DWORD PTR [rdx+0x74]
  4401b9:	pop    rdi
  4401ba:	imul   ebp,DWORD PTR [rsi+0x69],0x45000074
  4401c1:	add    BYTE PTR [rsi+0x65],ch
  4401c4:	je     0x44023a
  4401c6:	ins    BYTE PTR es:[rdi],dx
  4401c7:	gs pop rdi
  4401c9:	(bad)  
  4401ca:	jae    0x44023a
  4401cc:	xor    DWORD PTR [rdi+0x64],ebx
  4401cf:	gs jb  0x440231
  4401d2:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
  4401da:	pop    rdi
  4401db:	imul   si,WORD PTR [rdx+0x73],0x74
  4401e1:	add    BYTE PTR [rax],al
  4401e3:	add    BYTE PTR [rbp+0x74656e00],al
  4401e9:	je     0x440257
  4401eb:	gs pop rdi
  4401ed:	ins    DWORD PTR es:[rdi],dx
  4401ee:	jo     0x44026a
  4401f0:	pop    rdi
  4401f1:	addr32 gs je 0x440254
  4401f5:	jae    0x44026b
  4401f7:	jb     0x440258
  4401f9:	xor    dh,BYTE PTR [rip+0x36]        # 0x440235
  4401ff:	add    BYTE PTR [rax+rax*1+0x7474656e],cl
  440206:	ins    BYTE PTR es:[rdi],dx
  440207:	gs pop rdi
  440209:	ins    DWORD PTR es:[rdi],dx
  44020a:	jo     0x440286
  44020c:	pop    rdi
  44020d:	jae    0x440274
  44020f:	je     0x440270
  440211:	jae    0x440287
  440213:	jb     0x440274
  440215:	xor    dh,BYTE PTR [rip+0x755f36]        # 0xb96151
  44021b:	add    bl,al
  44021d:	add    BYTE PTR [rsi+0x65],ch
  440220:	je     0x440296
  440222:	ins    BYTE PTR es:[rdi],dx
  440223:	gs pop rdi
  440225:	jb     0x44029a
  440227:	(bad)  
  440228:	pop    rdi
  440229:	jo     0x4402a0
  44022b:	(bad)  
  44022c:	ins    BYTE PTR es:[rdi],dx
  44022d:	imul   esp,DWORD PTR [rbx+0x5f],0x5f79656b
  440234:	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  440238:	jb     0x44023a
  44023a:	add    BYTE PTR [rax],al
  44023c:	(bad)  
  44023d:	add    BYTE PTR [rsi+0x65],ch
  440240:	je     0x4402b6
  440242:	ins    BYTE PTR es:[rdi],dx
  440243:	gs pop rdi
  440245:	jb     0x4402ba
  440247:	(bad)  
  440248:	pop    rdi
  440249:	jo     0x4402c0
  44024b:	(bad)  
  44024c:	ins    BYTE PTR es:[rdi],dx
  44024d:	imul   esp,DWORD PTR [rbx+0x5f],0x5f79656b
  440254:	data16 jb 0x4402c6
  440257:	ins    DWORD PTR es:[rdi],dx
  440258:	pop    rdi
  440259:	fs gs jb 0x4402bc
  44025d:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
  440265:	add    BYTE PTR [rax],al
  440267:	add    ch,al
  440269:	add    BYTE PTR [rsi+0x65],ch
  44026c:	je     0x4402e2
  44026e:	ins    BYTE PTR es:[rdi],dx
  44026f:	gs pop rdi
  440271:	jb     0x4402e6
  440273:	(bad)  
  440274:	pop    rdi
  440275:	jo     0x4402ec
  440277:	(bad)  
  440278:	ins    BYTE PTR es:[rdi],dx
  440279:	imul   esp,DWORD PTR [rbx+0x5f],0x5f79656b
  440280:	imul   ebp,DWORD PTR [rsi+0x69],0x74
  440287:	add    BYTE PTR [rip+0x62696c00],al        # 0x62ad6e8d
  44028d:	imul   esp,DWORD PTR [rbx+0x6f],0x766e
  440294:	(bad)  
  440295:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  440299:	imul   esp,DWORD PTR [rbx+0x6f],0x635f766e
  4402a0:	ins    BYTE PTR es:[rdi],dx
  4402a1:	outs   dx,DWORD PTR ds:[rsi]
  4402a2:	jae    0x440309
  4402a4:	add    BYTE PTR [rax],al
  4402a6:	add    BYTE PTR [rax],al
  4402a8:	(bad)  
  4402a9:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  4402ad:	imul   esp,DWORD PTR [rbx+0x6f],0x6f5f766e
  4402b4:	jo     0x44031b
  4402b6:	outs   dx,BYTE PTR ds:[rsi]
  4402b7:	add    BYTE PTR [rbp+0x0],dl
  4402ba:	rex.XB ins BYTE PTR es:[rdi],dx
  4402bc:	outs   dx,DWORD PTR ds:[rsi]
  4402bd:	jae    0x440324
  4402bf:	rex.W (bad) 
  4402c1:	outs   dx,BYTE PTR ds:[rsi]
  4402c2:	fs ins BYTE PTR es:[rdi],dx
  4402c4:	add    BYTE PTR gs:[rsi+0x65724300],al
  4402cb:	(bad)  
  4402cc:	je     0x440333
  4402ce:	rex.RB jbe 0x440336
  4402d1:	outs   dx,BYTE PTR ds:[rsi]
  4402d2:	je     0x440315
  4402d4:	add    BYTE PTR [rax],al
  4402d6:	fadd   DWORD PTR [rax]
  4402d8:	rex.R
  4402d9:	gs ins BYTE PTR es:[rdi],dx
  4402db:	gs je  0x440343
  4402de:	rex.XB jb 0x44034a
  4402e1:	je     0x44034c
  4402e3:	movsxd esp,DWORD PTR [rcx+0x6c]
  4402e6:	push   rbx
  4402e7:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4402ec:	outs   dx,BYTE PTR ds:[rsi]
  4402ed:	add    al,bh
  4402ef:	add    BYTE PTR [rbp+0x6e],al
  4402f2:	je     0x440359
  4402f4:	jb     0x440339
  4402f6:	jb     0x440361
  4402f8:	je     0x440363
  4402fa:	movsxd esp,DWORD PTR [rcx+0x6c]
  4402fd:	push   rbx
  4402fe:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  440303:	outs   dx,BYTE PTR ds:[rsi]
  440304:	add    BYTE PTR [rax],al
  440306:	imul   eax,DWORD PTR [rcx],0x6d726f46
  44030c:	(bad)  
  44030d:	je     0x44035c
  44030f:	gs jae 0x440385
  440312:	(bad)  
  440313:	add    BYTE PTR gs:[r8d],al
  440318:	int    0x1
  44031a:	rex.RXB
  44031b:	gs je  0x440361
  44031e:	jne    0x440392
  440320:	jb     0x440387
  440322:	outs   dx,BYTE PTR ds:[rsi]
  440323:	je     0x440375
  440325:	jb     0x440396
  440327:	movsxd esp,DWORD PTR [rbp+0x73]
  44032a:	jae    0x44032c
  44032c:	(bad)  
  44032d:	add    DWORD PTR [rdi+0x65],eax
  440330:	je     0x440375
  440332:	jne    0x4403a6
  440334:	jb     0x44039b
  440336:	outs   dx,BYTE PTR ds:[rsi]
  440337:	je     0x440389
  440339:	jb     0x4403aa
  44033b:	movsxd esp,DWORD PTR [rbp+0x73]
  44033e:	jae    0x440389
  440340:	fs add dl,dl
  440343:	add    DWORD PTR [rdi+0x65],eax
  440346:	je     0x44038b
  440348:	jne    0x4403bc
  44034a:	jb     0x4403b1
  44034c:	outs   dx,BYTE PTR ds:[rsi]
  44034d:	je     0x4403a3
  44034f:	push   0x64616572
  440354:	rex.WB
  440355:	add    BYTE PTR fs:[rax],al
  440358:	adc    BYTE PTR [rdx],al
  44035a:	rex.RXB
  44035b:	gs je  0x4403aa
  44035e:	(bad)  
  44035f:	jae    0x4403d5
  440361:	rex.RB jb 0x4403d6
  440364:	outs   dx,DWORD PTR ds:[rsi]
  440365:	jb     0x440367
  440367:	add    BYTE PTR [rdx],dl
  440369:	add    al,BYTE PTR [rdi+0x65]
  44036c:	je     0x4403ba
  44036e:	outs   dx,DWORD PTR ds:[rsi]
  44036f:	movsxd esp,DWORD PTR [rcx+0x6c]
  440372:	push   rsp
  440373:	imul   ebp,DWORD PTR [rbp+0x65],0x2230000
  44037a:	rex.RXB
  44037b:	gs je  0x4403cb
  44037e:	outs   dx,DWORD PTR ds:[rsi]
  44037f:	fs jne 0x4403ee
  440382:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
  44038c:	add    BYTE PTR [rax],al
  44038e:	and    al,0x2
  440390:	rex.RXB
  440391:	gs je  0x4403e1
  440394:	outs   dx,DWORD PTR ds:[rsi]
  440395:	fs jne 0x440404
  440398:	gs rex.W (bad) 
  44039b:	outs   dx,BYTE PTR ds:[rsi]
  44039c:	fs ins BYTE PTR es:[rdi],dx
  44039e:	add    BYTE PTR gs:[r8],al
  4403a2:	push   rsi
  4403a3:	add    al,BYTE PTR [rdi+0x65]
  4403a6:	je     0x4403f8
  4403a8:	jb     0x440419
  4403aa:	movsxd eax,DWORD PTR [rcx+0x64]
  4403ad:	fs jb  0x440415
  4403b0:	jae    0x440425
  4403b2:	add    BYTE PTR [rax],al
  4403b4:	jae    0x4403b8
  4403b6:	rex.RXB
  4403b7:	gs je  0x44040d
  4403ba:	je     0x44041d
  4403bc:	jb     0x440432
  4403be:	jne    0x440430
  4403c0:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4403c2:	outs   dx,WORD PTR ds:[rsi]
  4403c4:	add    BYTE PTR [r10+0x74654702],cl
  4403cb:	push   rbx
  4403cc:	jns    0x440441
  4403ce:	je     0x440435
  4403d0:	ins    DWORD PTR es:[rdi],dx
  4403d1:	push   rsp
  4403d2:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  4403d9:	ins    BYTE PTR es:[rdi],dx
  4403da:	gs push rsp
  4403dc:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  4403e3:	gs je  0x44043a
  4403e6:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  4403ed:	je     0x4403ef
  4403ef:	add    cl,bh
  4403f1:	add    cl,BYTE PTR [rcx+0x6e]
  4403f4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  4403fc:	rex.XB jb 0x440468
  4403ff:	je     0x44046a
  440401:	movsxd esp,DWORD PTR [rcx+0x6c]
  440404:	push   rbx
  440405:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  44040a:	outs   dx,BYTE PTR ds:[rsi]
  44040b:	add    BYTE PTR [rbx+0x3],cl
  44040e:	rex.WR
  44040f:	gs (bad) 
  440411:	jbe    0x440478
  440413:	rex.XB jb 0x44047f
  440416:	je     0x440481
  440418:	movsxd esp,DWORD PTR [rcx+0x6c]
  44041b:	push   rbx
  44041c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  440421:	outs   dx,BYTE PTR ds:[rsi]
  440422:	add    BYTE PTR [rax],al
  440424:	add    r9,QWORD PTR [rdi+r13*2+0x61]
  440429:	imul   r12,QWORD PTR fs:[rdx+0x72],0x41797261
  440432:	add    BYTE PTR [rax],al
  440434:	pop    rbx
  440435:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
  440439:	(bad)  
  44043a:	ins    BYTE PTR es:[rdi],dx
  44043b:	rex.RX jb 0x4404a3
  44043e:	add    BYTE PTR gs:[rbx+0x65755103],bh
  440445:	jb     0x4404c0
  440447:	push   rax
  440448:	gs jb  0x4404b1
  44044b:	outs   dx,DWORD PTR ds:[rsi]
  44044c:	jb     0x4404bb
  44044e:	(bad)  
  44044f:	outs   dx,BYTE PTR ds:[rsi]
  440450:	movsxd esp,DWORD PTR [rbp+0x43]
  440453:	outs   dx,DWORD PTR ds:[rsi]
  440454:	jne    0x4404c4
  440456:	je     0x4404bd
  440458:	jb     0x44045a
  44045a:	add    DWORD PTR [rdx+rdx*2],eax
  44045d:	je     0x4404cb
  44045f:	rex.B
  440460:	fs fs rex.RX jne 0x4404d3
  440465:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  440469:	outs   dx,BYTE PTR ds:[rsi]
  44046a:	push   rsp
  44046b:	(bad)  
  44046c:	(bad)  
  44046d:	ins    BYTE PTR es:[rdi],dx
  44046e:	add    BYTE PTR gs:[rdx],al
  440471:	add    al,0x52
  440473:	je     0x4404e1
  440475:	rex.XB (bad) 
  440477:	jo     0x4404ed
  440479:	jne    0x4404ed
  44047b:	rex.XB outs dx,DWORD PTR gs:[rsi]
  44047e:	outs   dx,BYTE PTR ds:[rsi]
  44047f:	je     0x4404e6
  440481:	js     0x4404f7
  440483:	add    BYTE PTR [rcx],cl
  440485:	add    al,0x52
  440487:	je     0x4404f5
  440489:	rex.WR outs dx,DWORD PTR ds:[rsi]
  44048b:	outs   dx,DWORD PTR ds:[rsi]
  44048c:	imul   esi,DWORD PTR [rbp+0x70],0x46
  440490:	jne    0x440500
  440492:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  440496:	outs   dx,BYTE PTR ds:[rsi]
  440497:	rex.RB outs dx,BYTE PTR ds:[rsi]
  440499:	je     0x44050d
  44049b:	jns    0x44049d
  44049d:	add    BYTE PTR [rax],dl
  44049f:	add    al,0x52
  4404a1:	je     0x44050f
  4404a3:	push   rsi
  4404a4:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  4404ab:	outs   dx,BYTE PTR ds:[rsi]
  4404ac:	ja     0x440517
  4404ae:	outs   dx,BYTE PTR ds:[rsi]
  4404af:	add    BYTE PTR fs:[rax],al
  4404b2:	push   rbx
  4404b3:	add    al,0x53
  4404b5:	gs je  0x4404fd
  4404b8:	jbe    0x44051f
  4404ba:	outs   dx,BYTE PTR ds:[rsi]
  4404bb:	je     0x4404bd
  4404bd:	add    BYTE PTR [rdi+0x74655304],bl
  4404c3:	push   rbp
  4404c4:	outs   dx,BYTE PTR ds:[rsi]
  4404c5:	push   0x6c646e61
  4404ca:	gs fs rex.RB js 0x440532
  4404cf:	gs jo  0x440546
  4404d2:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4404d9:	gs jb  0x4404dc
  4404dc:	lods   al,BYTE PTR ds:[rsi]
  4404dd:	add    al,0x53
  4404df:	ins    BYTE PTR es:[rdi],dx
  4404e0:	gs gs jo 0x4404e4
  4404e4:	mov    edx,0x72655404
  4404e9:	ins    DWORD PTR es:[rdi],dx
  4404ea:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  4404f1:	outs   dx,DWORD PTR ds:[rsi]
  4404f2:	movsxd esp,DWORD PTR [rbp+0x73]
  4404f5:	jae    0x4404f7
  4404f7:	add    cl,al
  4404f9:	add    al,0x54
  4404fb:	ins    BYTE PTR es:[rdi],dx
  4404fc:	jae    0x440545
  4404fe:	gs je  0x440557
  440501:	(bad)  
  440502:	ins    BYTE PTR es:[rdi],dx
  440503:	jne    0x44056a
  440505:	add    al,cl
  440507:	add    al,0x54
  440509:	jb     0x440584
  44050b:	rex.RB outs dx,BYTE PTR ds:[rsi]
  44050d:	je     0x440574
  44050f:	jb     0x440554
  440511:	jb     0x44057c
  440513:	je     0x44057e
  440515:	movsxd esp,DWORD PTR [rcx+0x6c]
  440518:	push   rbx
  440519:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  44051e:	outs   dx,BYTE PTR ds:[rsi]
  44051f:	add    dh,cl
  440521:	add    al,0x55
  440523:	outs   dx,BYTE PTR ds:[rsi]
  440524:	push   0x6c646e61
  440529:	gs fs rex.RB js 0x440591
  44052e:	gs jo  0x4405a5
  440531:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  440538:	gs jb  0x44053b
  44053b:	add    ah,ch
  44053d:	add    al,0x56
  44053f:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  440546:	jb     0x4405b7
  440548:	je     0x4405af
  44054a:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  44054e:	out    dx,al
  44054f:	add    al,0x56
  440551:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  440558:	jne    0x4405bf
  44055a:	jb     0x4405d5
  44055c:	add    BYTE PTR [rax],al
  44055e:	test   BYTE PTR [rdi+rdx*2],0x61
  440562:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
  44056a:	ins    BYTE PTR es:[edi],dx
  44056c:	gs rex.WRXB (bad) 
  44056f:	push   0x65
  440571:	movsxd esi,DWORD PTR [rax+rax*1+0x37]
  440575:	add    BYTE PTR [rdi+0x5f],bl
  440578:	rex.XB pop r15
  44057a:	jae    0x4405ec
  44057c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  440580:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  440587:	ins    BYTE PTR es:[rdi],dx
  440588:	gs jb  0x44058b
  44058b:	add    BYTE PTR [rsi+0x0],al
  44058e:	pop    rdi
  44058f:	pop    rdi
  440590:	(bad)  
  440591:	jb     0x4405fa
  440593:	jbe    0x440595
  440595:	add    BYTE PTR [rsi+0x0],cl
  440598:	pop    rdi
  440599:	pop    rdi
  44059a:	fs ins BYTE PTR es:[rdi],dx
  44059c:	ins    BYTE PTR es:[rdi],dx
  44059d:	outs   dx,DWORD PTR ds:[rsi]
  44059e:	outs   dx,BYTE PTR ds:[rsi]
  44059f:	gs js  0x44060b
  4405a2:	je     0x4405a4
  4405a4:	push   rcx
  4405a5:	add    BYTE PTR [rdi+0x5f],bl
  4405a8:	addr32 gs je 0x440619
  4405ac:	(bad)  
  4405ad:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  4405b4:	push   rdx
  4405b5:	add    BYTE PTR [rdi+0x5f],bl
  4405b8:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  4405bf:	add    BYTE PTR [rbx+0x0],dl
  4405c2:	pop    rdi
  4405c3:	pop    rdi
  4405c4:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  4405cb:	movsxd eax,DWORD PTR [rax]
  4405cd:	add    BYTE PTR [rdx+0x0],bl
  4405d0:	pop    rdi
  4405d1:	pop    rdi
  4405d2:	ins    BYTE PTR es:[rdi],dx
  4405d3:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4405d6:	jbe    0x440637
  4405d8:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  4405df:	add    BYTE PTR [rdi+0x5f],bl
  4405e2:	jae    0x440649
  4405e4:	je     0x440645
  4405e6:	(bad)  
  4405e7:	jo     0x440659
  4405e9:	pop    rdi
  4405ea:	je     0x440665
  4405ec:	jo     0x440653
  4405ee:	add    BYTE PTR [rax],al
  4405f0:	(bad)  
  4405f1:	add    BYTE PTR [rdi+0x5f],bl
  4405f4:	jae    0x44065b
  4405f6:	je     0x44066d
  4405f8:	jae    0x44065f
  4405fa:	jb     0x440669
  4405fc:	(bad)  
  4405fd:	je     0x440667
  4405ff:	gs jb  0x440674
  440602:	add    BYTE PTR [rax],al
  440604:	jno    0x440606
  440606:	pop    rdi
  440607:	(bad)  
  440608:	movsxd ebp,DWORD PTR [rbp+0x64]
  44060b:	ins    BYTE PTR es:[rdi],dx
  44060c:	outs   dx,BYTE PTR ds:[rsi]
  44060d:	add    BYTE PTR [rax+0x0],bh
  440610:	pop    rdi
  440611:	(bad)  
  440612:	ins    DWORD PTR es:[rdi],dx
  440613:	jae    0x44067c
  440615:	pop    rdi
  440616:	gs js  0x440682
  440619:	je     0x44061b
  44061b:	add    BYTE PTR [rdx+0x65635f00],cl
  440621:	js     0x44068c
  440623:	je     0x440625
  440625:	add    BYTE PTR [rdx+0x72655f00],bh
  44062b:	jb     0x44069b
  44062d:	outs   dx,DWORD PTR ds:[rsi]
  44062e:	add    BYTE PTR [rax],al
  440630:	ret    
  440631:	add    BYTE PTR [rdi+0x65],bl
  440634:	js     0x44069f
  440636:	je     0x440638
  440638:	fiadd  DWORD PTR [rax]
  44063a:	pop    rdi
  44063b:	ins    WORD PTR es:[rdi],dx
  44063d:	outs   dx,DWORD PTR ds:[rsi]
  44063e:	fs add BYTE PTR gs:[rax],al
  440642:	sbb    al,BYTE PTR [rcx]
  440644:	pop    rdi
  440645:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  44064c:	ins    DWORD PTR es:[rdi],dx
  44064d:	add    BYTE PTR [rdi+0x1],bh
  440650:	pop    rdi
  440651:	ins    BYTE PTR es:[rdi],dx
  440652:	outs   dx,DWORD PTR ds:[rsi]
  440653:	movsxd esp,DWORD PTR [rcx+0x6c]
  440656:	je     0x4406c1
  440658:	ins    DWORD PTR es:[rdi],dx
  440659:	gs ss xor al,0x0
  44065d:	add    BYTE PTR [rax+0x6f6c5f01],al
  440663:	movsxd ebp,DWORD PTR [rbx+0x0]
  440666:	and    eax,0x6e6f5f02
  44066b:	gs js  0x4406d7
  44066e:	je     0x440670
  440670:	pop    rcx
  440671:	add    bl,BYTE PTR [rdi+0x73]
  440674:	outs   dx,BYTE PTR ds:[rsi]
  440675:	jo     0x4406e9
  440677:	imul   ebp,DWORD PTR [rsi+0x74],0x2630066
  44067e:	pop    rdi
  44067f:	jae    0x4406ef
  440681:	ja     0x4406f3
  440683:	jb     0x4406ee
  440685:	outs   dx,BYTE PTR ds:[rsi]
  440686:	je     0x4406ee
  440688:	add    BYTE PTR [rax],al
  44068a:	add    BYTE PTR [rdx],0x5f
  44068d:	jae    0x440703
  44068f:	jb     0x4406f5
  440691:	jne    0x440703
  440693:	add    BYTE PTR [rbx+0x74735f02],al
  440699:	jb     0x440704
  44069b:	movsxd ebp,DWORD PTR [rbp+0x70]
  44069e:	add    BYTE PTR [rax],al
  4406a0:	lea    eax,[rdx]
  4406a2:	pop    rdi
  4406a3:	jae    0x440719
  4406a5:	jb     0x440715
  4406a7:	imul   esp,DWORD PTR [rbx+0x6d],0x2af0070
  4406ae:	pop    rdi
  4406af:	je     0x44071a
  4406b1:	ins    DWORD PTR es:[rdi],dx
  4406b2:	gs ss xor al,0x0
  4406b6:	(bad)
  4406ba:	outs   dx,BYTE PTR ds:[rsi]
  4406bb:	ins    BYTE PTR es:[rdi],dx
  4406bc:	outs   dx,DWORD PTR ds:[rsi]
  4406bd:	movsxd ebp,DWORD PTR [rbx+0x0]
  4406c0:	loope  0x4406c4
  4406c2:	pop    rdi
  4406c3:	jbe    0x440738
  4406c5:	outs   dx,BYTE PTR ds:[rsi]
  4406c6:	jo     0x44073a
  4406c8:	imul   ebp,DWORD PTR [rsi+0x74],0x7f000066
  4406cf:	add    esp,DWORD PTR [rcx+0x62]
  4406d2:	outs   dx,DWORD PTR ds:[rsi]
  4406d3:	jb     0x440749
  4406d5:	add    BYTE PTR [rbx+0x6f746103],cl
  4406db:	data16 add BYTE PTR [rax],al
  4406de:	mov    WORD PTR [rbx],es
  4406e0:	(bad)  
  4406e1:	je     0x440752
  4406e3:	imul   eax,DWORD PTR [rax],0x63039000
  4406e9:	(bad)  
  4406ea:	ins    BYTE PTR es:[rdi],dx
  4406eb:	ins    BYTE PTR es:[rdi],dx
  4406ec:	outs   dx,DWORD PTR ds:[rsi]
  4406ed:	movsxd eax,DWORD PTR [rax]
  4406ef:	add    BYTE PTR [rbp+0x69786503],bl
  4406f5:	je     0x4406f7
  4406f7:	add    BYTE PTR [rcx+0x6c636603],ah
  4406fd:	outs   dx,DWORD PTR ds:[rsi]
  4406fe:	jae    0x440765
  440700:	add    BYTE PTR [rax],al
  440702:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  440703:	add    esp,DWORD PTR [rsi+0x66]
  440706:	ins    BYTE PTR es:[rdi],dx
  440707:	jne    0x44077c
  440709:	push   0x3a70000
  44070e:	data16 addr32 gs je 0x440786
  440713:	add    BYTE PTR [rsi+0x706f6603],ch
  440719:	outs   dx,BYTE PTR gs:[rsi]
  44071b:	add    BYTE PTR [rax+0x72706603],dh
  440721:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  440728:	data16 jo 0x4407a0
  44072b:	je     0x440790
  44072d:	add    BYTE PTR [rbx+0x75706603],dh
  440733:	je     0x4407a8
  440735:	add    BYTE PTR [rdi+0x65726603],dh
  44073b:	add    BYTE PTR gs:[rax],al
  44073e:	rol    BYTE PTR [rbx],0x66
  440741:	ja     0x4407b3
  440743:	jb     0x4407ae
  440745:	outs   dx,BYTE PTR ds:[rsi]
  440746:	je     0x4407ae
  440748:	add    BYTE PTR [rax],al
  44074a:	ret    0x6603
  44074d:	ja     0x4407c1
  44074f:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c600
  440757:	gs je  0x4407bd
  44075a:	push   0xffffffffc7007261
  44075f:	add    esp,DWORD PTR [rdi+0x65]
  440762:	je     0x4407c9
  440764:	outs   dx,BYTE PTR ds:[rsi]
  440765:	jbe    0x440767
  440767:	add    dh,cl
  440769:	add    ebp,DWORD PTR [rcx+0x73]
  44076c:	(bad)  
  44076d:	ins    BYTE PTR es:[rdi],dx
  44076e:	outs   dx,BYTE PTR ds:[rsi]
  44076f:	jne    0x4407de
  440771:	add    bh,cl
  440773:	add    ebp,DWORD PTR [rcx+0x73]
  440776:	(bad)  
  440777:	ins    BYTE PTR es:[rdi],dx
  440778:	jo     0x4407e2
  44077a:	(bad)  
  44077b:	add    ch,dl
  44077d:	add    ebp,DWORD PTR [rcx+0x73]
  440780:	jo     0x4407f4
  440782:	imul   ebp,DWORD PTR [rsi+0x74],0x6903d700
  440789:	jae    0x4407fe
  44078b:	jo     0x4407ee
  44078d:	movsxd esp,DWORD PTR [rbp+0x0]
  440790:	lock add ebp,DWORD PTR [rbp+0x61]
  440794:	ins    BYTE PTR es:[rdi],dx
  440795:	ins    BYTE PTR es:[rdi],dx
  440796:	outs   dx,DWORD PTR ds:[rsi]
  440797:	movsxd eax,DWORD PTR [rax]
  440799:	add    bh,dh
  44079b:	add    ebp,DWORD PTR [rbp+0x65]
  44079e:	ins    DWORD PTR es:[rdi],dx
  44079f:	movsxd ebp,DWORD PTR [rbp+0x70]
  4407a2:	add    BYTE PTR [rax],al
  4407a4:	clc    
  4407a5:	add    ebp,DWORD PTR [rbp+0x65]
  4407a8:	ins    DWORD PTR es:[rdi],dx
  4407a9:	movsxd esi,DWORD PTR [rax+0x79]
  4407ac:	add    BYTE PTR [rax],al
  4407ae:	stc    
  4407af:	add    ebp,DWORD PTR [rbp+0x65]
  4407b2:	ins    DWORD PTR es:[rdi],dx
  4407b3:	ins    DWORD PTR es:[rdi],dx
  4407b4:	outs   dx,DWORD PTR ds:[rsi]
  4407b5:	jbe    0x44081c
  4407b7:	add    dl,bh
  4407b9:	add    ebp,DWORD PTR [rbp+0x65]
  4407bc:	ins    DWORD PTR es:[rdi],dx
  4407bd:	jae    0x440824
  4407bf:	je     0x4407c1
  4407c1:	add    dh,bh
  4407c3:	add    esi,DWORD PTR [rax+0x65]
  4407c6:	jb     0x44083a
  4407c8:	outs   dx,DWORD PTR ds:[rsi]
  4407c9:	jb     0x4407cb
  4407cb:	add    BYTE PTR [rcx],al
  4407cd:	add    al,0x70
  4407cf:	jb     0x44083a
  4407d1:	outs   dx,BYTE PTR ds:[rsi]
  4407d2:	je     0x44083a
  4407d4:	add    BYTE PTR [rax],al
  4407d6:	add    al,0x4
  4407d8:	jo     0x44084f
  4407da:	je     0x44083f
  4407dc:	push   0xa007261
  4407e1:	add    al,0x72
  4407e3:	(bad)  
  4407e4:	imul   esi,DWORD PTR [rbx+0x65],0x72040b00
  4407eb:	(bad)  
  4407ec:	outs   dx,BYTE PTR ds:[rsi]
  4407ed:	add    BYTE PTR fs:[rax],al
  4407f0:	or     al,0x4
  4407f2:	jb     0x440859
  4407f4:	(bad)  
  4407f5:	ins    BYTE PTR es:[rdi],dx
  4407f6:	ins    BYTE PTR es:[rdi],dx
  4407f7:	outs   dx,DWORD PTR ds:[rsi]
  4407f8:	movsxd eax,DWORD PTR [rax]
  4407fa:	(bad)  
  4407fc:	jb     0x440863
  4407fe:	ja     0x440869
  440800:	outs   dx,BYTE PTR ds:[rsi]
  440801:	add    BYTE PTR fs:[rax],al
  440804:	adc    al,0x4
  440806:	jae    0x44086d
  440808:	je     0x440876
  44080a:	outs   dx,DWORD PTR ds:[rsi]
  44080b:	movsxd esp,DWORD PTR [rcx+0x6c]
  44080e:	add    BYTE PTR gs:[rsi],dl
  440811:	add    al,0x73
  440813:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  44081a:	sbb    eax,DWORD PTR [rbx+rsi*2]
  44081d:	jo     0x440891
  44081f:	imul   ebp,DWORD PTR [rsi+0x74],0x4210066
  440826:	jae    0x44089c
  440828:	jb     0x44088d
  44082a:	(bad)  
  44082b:	je     0x44082d
  44082d:	add    BYTE PTR [rbx],ah
  44082f:	add    al,0x73
  440831:	je     0x4408a5
  440833:	movsxd ebp,DWORD PTR [rax+0x72]
  440836:	add    BYTE PTR [rax],al
  440838:	and    al,0x4
  44083a:	jae    0x4408b0
  44083c:	jb     0x4408a1
  44083e:	ins    DWORD PTR es:[rdi],dx
  44083f:	jo     0x440841
  440841:	add    BYTE PTR [rsi],ah
  440843:	add    al,0x73
  440845:	je     0x4408b9
  440847:	movsxd esi,DWORD PTR [rax+0x79]
  44084a:	add    BYTE PTR [rax],al
  44084c:	sub    DWORD PTR [rbx+rsi*2],eax
  44084f:	je     0x4408c3
  440851:	gs jb  0x4408c6
  440854:	outs   dx,DWORD PTR ds:[rsi]
  440855:	jb     0x440857
  440857:	add    BYTE PTR [rdx],ch
  440859:	add    al,0x73
  44085b:	je     0x4408cf
  44085d:	data16 je 0x4408c9
  440860:	ins    DWORD PTR es:[rdi],dx
  440861:	add    BYTE PTR gs:[rax],al
  440864:	sub    eax,DWORD PTR [rbx+rsi*2]
  440867:	je     0x4408db
  440869:	ins    BYTE PTR es:[rdi],dx
  44086a:	outs   dx,BYTE PTR gs:[rsi]
  44086c:	add    BYTE PTR [rax],al
  44086e:	cs add al,0x73
  440871:	je     0x4408e5
  440873:	outs   dx,BYTE PTR ds:[rsi]
  440874:	movsxd ebp,DWORD PTR [rbp+0x70]
  440877:	add    BYTE PTR [rdx],dh
  440879:	add    al,0x73
  44087b:	je     0x4408ef
  44087d:	jb     0x4408e2
  44087f:	push   0x4340072
  440884:	jae    0x4408fa
  440886:	jb     0x4408fb
  440888:	je     0x4408fc
  44088a:	add    BYTE PTR [rax],al
  44088c:	ss add al,0x73
  44088f:	je     0x440903
  440891:	je     0x440902
  440893:	imul   eax,DWORD PTR [rax],0x0
  440896:	cmp    BYTE PTR [rbx+rsi*2],al
  440899:	je     0x44090d
  44089b:	je     0x44090c
  44089d:	ins    BYTE PTR es:[rdi],dx
  44089e:	add    BYTE PTR [rax],al
  4408a0:	rex.W add al,0x74
  4408a3:	outs   dx,DWORD PTR ds:[rsi]
  4408a4:	ins    BYTE PTR es:[rdi],dx
  4408a5:	outs   dx,DWORD PTR ds:[rsi]
  4408a6:	ja     0x44090d
  4408a8:	jb     0x4408aa
  4408aa:	rex.WB add al,0x74
  4408ad:	outs   dx,DWORD PTR ds:[rsi]
  4408ae:	jne    0x440920
  4408b0:	jo     0x440917
  4408b2:	jb     0x4408b4
  4408b4:	rex.WRX add al,0x76
  4408b7:	data16 jo 0x44092c
  4408ba:	imul   ebp,DWORD PTR [rsi+0x74],0x5d000066
  4408c1:	add    al,0x77
  4408c3:	movsxd esi,DWORD PTR [rbx+0x63]
  4408c6:	jo     0x440941
  4408c8:	add    BYTE PTR [rax],al
  4408ca:	fiadd  WORD PTR [rdi+rbx*2]
  4408cd:	imul   esi,DWORD PTR [rbx+0x61],0x797474
  4408d4:	add    QWORD PTR [r14+0x65],rbp
  4408d8:	je     0x44094e
  4408da:	ins    BYTE PTR es:[rdi],dx
  4408db:	gs pop rdi
  4408dd:	jae    0x440947
  4408df:	(bad)  
  4408e0:	xor    DWORD PTR [rdi+0x64],ebx
  4408e3:	imul   esp,DWORD PTR [rdi+0x65],0x7473
  4408ea:	add    BYTE PTR [rax],al
  4408ec:	rex.WX add QWORD PTR [rsi+0x65],rbp
  4408f0:	je     0x440966
  4408f2:	ins    BYTE PTR es:[rdi],dx
  4408f3:	gs pop rdi
  4408f5:	jae    0x44095f
  4408f7:	(bad)  
  4408f8:	xor    DWORD PTR [rdi+0x69],ebx
  4408fb:	outs   dx,BYTE PTR ds:[rsi]
  4408fc:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x656e014b
  440904:	je     0x44097a
  440906:	ins    BYTE PTR es:[rdi],dx
  440907:	gs pop rdi
  440909:	jae    0x440973
  44090b:	(bad)  
  44090c:	xor    DWORD PTR [rdi+0x75],ebx
  44090f:	jo     0x440975
  440911:	(bad)  
  440912:	je     0x440979
  440914:	add    BYTE PTR [rax],al
  440916:	add    BYTE PTR [rax],al
  440918:	fild   WORD PTR [rax]
  44091a:	push   rbx
  44091b:	rex.W
  44091c:	rex.RXB
  44091d:	gs je  0x44096d
  440920:	(bad)  
  440921:	ins    BYTE PTR es:[rdi],dx
  440922:	ins    BYTE PTR es:[rdi],dx
  440923:	outs   dx,DWORD PTR ds:[rsi]
  440924:	movsxd eax,DWORD PTR [rax]
  440926:	in     eax,0x0
  440928:	push   rbx
  440929:	rex.W
  44092a:	rex.RXB
  44092b:	gs je  0x44097e
  44092e:	(bad)  
  44092f:	je     0x440999
  440931:	rex.RX jb 0x4409a3
  440934:	ins    DWORD PTR es:[rdi],dx
  440935:	rex.WB
  440936:	rex.R
  440937:	imul   r14,QWORD PTR [rbx+0x74],0xfffffffff1000041
  44093f:	add    BYTE PTR [rbx+0x48],dl
  440942:	rex.RXB
  440943:	gs je  0x440999
  440946:	jo     0x4409ad
  440948:	movsxd ebp,DWORD PTR [rcx+0x61]
  44094b:	ins    BYTE PTR es:[rdi],dx
  44094c:	rex.RX outs dx,DWORD PTR ds:[rsi]
  44094e:	ins    BYTE PTR es:[rdi],dx
  44094f:	fs gs jb 0x44099f
  440953:	outs   dx,DWORD PTR ds:[rsi]
  440954:	movsxd esp,DWORD PTR [rcx+0x74]
  440957:	imul   ebp,DWORD PTR [rdi+0x6e],0x1f00000
  44095e:	rex.WRB
  44095f:	gs jae 0x4409d5
  440962:	(bad)  
  440963:	rex.X outs dx,DWORD PTR gs:[esi]
  440967:	js     0x4409c0
  440969:	add    BYTE PTR [rdx],bl
  44096b:	add    BYTE PTR [rdi+0x53],dl
  44096e:	rex.B
  44096f:	rex.XB ins BYTE PTR es:[rdi],dx
  440971:	gs (bad) 
  440973:	outs   dx,BYTE PTR ds:[rsi]
  440974:	jne    0x4409e6
  440976:	add    BYTE PTR [rax],al
  440978:	sub    eax,DWORD PTR [rax]
  44097a:	push   rdi
  44097b:	push   rbx
  44097c:	rex.B
  44097d:	rex.RXB
  44097e:	gs je  0x4409cd
  440981:	(bad)  
  440982:	jae    0x4409f8
  440984:	rex.RB jb 0x4409f9
  440987:	outs   dx,DWORD PTR ds:[rsi]
  440988:	jb     0x44098a
  44098a:	rex.WRXB add BYTE PTR [r15+0x53],r10b
  44098e:	push   r11
  440990:	gs je  0x4409df
  440993:	(bad)  
  440994:	jae    0x440a0a
  440996:	rex.RB jb 0x440a0b
  440999:	outs   dx,DWORD PTR ds:[rsi]
  44099a:	jb     0x44099c
  44099c:	push   rsp
  44099d:	add    BYTE PTR [rdi+0x53],dl
  4409a0:	push   r11
  4409a2:	je     0x440a05
  4409a4:	jb     0x440a1a
  4409a6:	jne    0x440a18
  4409a8:	add    BYTE PTR [rax],al
  4409aa:	xchg   edx,eax
  4409ab:	add    BYTE PTR [rdi+0x5f],bl
  4409ae:	push   rdi
  4409af:	push   rbx
  4409b0:	rex.B
  4409b1:	rex.RX
  4409b2:	rex.R
  4409b3:	rex.WB jae 0x440a09
  4409b6:	gs je  0x4409b9
  4409b9:	add    BYTE PTR [rbx+0x63636100],dl
  4409bf:	gs jo  0x440a36
  4409c2:	add    BYTE PTR [rax],al
  4409c4:	xchg   esp,eax
  4409c5:	add    BYTE PTR [rdx+0x69],ah
  4409c8:	outs   dx,BYTE PTR ds:[rsi]
  4409c9:	add    BYTE PTR fs:[rax],al
  4409cc:	xchg   ebp,eax
  4409cd:	add    BYTE PTR [rbx+0x6c],ah
  4409d0:	outs   dx,DWORD PTR ds:[rsi]
  4409d1:	jae    0x440a38
  4409d3:	jae    0x440a44
  4409d5:	movsxd ebp,DWORD PTR [rbx+0x65]
  4409d8:	je     0x4409da
  4409da:	xchg   esi,eax
  4409db:	add    BYTE PTR [rbx+0x6f],ah
  4409de:	outs   dx,BYTE PTR ds:[rsi]
  4409df:	outs   dx,BYTE PTR ds:[rsi]
  4409e0:	movsxd esi,DWORD PTR gs:[rax+rax*1-0x69]
  4409e5:	add    BYTE PTR [rsi+0x72],ah
  4409e8:	gs gs (bad) 
  4409eb:	fs fs jb 0x440a58
  4409ef:	outs   dx,BYTE PTR ds:[rsi]
  4409f0:	outs   dx,WORD PTR ds:[rsi]
  4409f2:	add    BYTE PTR [rax],al
  4409f4:	cwde   
  4409f5:	add    BYTE PTR [rdi+0x65],ah
  4409f8:	je     0x440a5b
  4409fa:	fs fs jb 0x440a67
  4409fe:	outs   dx,BYTE PTR ds:[rsi]
  4409ff:	outs   dx,WORD PTR ds:[rsi]
  440a01:	add    BYTE PTR [rbx+0x74656700],bl
  440a07:	push   0x6e74736f
  440a0c:	(bad)  
  440a0d:	ins    DWORD PTR es:[rdi],dx
  440a0e:	add    BYTE PTR gs:[rax+rax*1+0x6e746567],bl
  440a16:	(bad)  
  440a17:	ins    DWORD PTR es:[rdi],dx
  440a18:	imul   ebp,DWORD PTR gs:[rsi+0x66],0x9d006f
  440a20:	addr32 gs je 0x440a94
  440a24:	gs gs jb 0x440a96
  440a28:	(bad)  
  440a29:	ins    DWORD PTR es:[rdi],dx
  440a2a:	add    BYTE PTR gs:[rdx+0x74656700],ah
  440a31:	jae    0x440aa2
  440a33:	movsxd ebp,DWORD PTR [rbx+0x6e]
  440a36:	(bad)  
  440a37:	ins    DWORD PTR es:[rdi],dx
  440a38:	add    BYTE PTR gs:[rbx+0x74656700],ah
  440a3f:	jae    0x440ab0
  440a41:	movsxd ebp,DWORD PTR [rbx+0x6f]
  440a44:	jo     0x440aba
  440a46:	add    BYTE PTR [rax],al
  440a48:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  440a49:	add    BYTE PTR [rax+0x74],ch
  440a4c:	outs   dx,DWORD PTR ds:[rsi]
  440a4d:	outs   dx,BYTE PTR ds:[rsi]
  440a4e:	ins    BYTE PTR es:[rdi],dx
  440a4f:	add    BYTE PTR [rbp+0x6f746800],ah
  440a55:	outs   dx,BYTE PTR ds:[rsi]
  440a56:	jae    0x440a58
  440a58:	stos   BYTE PTR es:[rdi],al
  440a59:	add    BYTE PTR [rcx+0x6f],ch
  440a5c:	movsxd esi,DWORD PTR [rsp+rbp*2+0x73]
  440a60:	outs   dx,DWORD PTR ds:[rsi]
  440a61:	movsxd ebp,DWORD PTR [rbx+0x65]
  440a64:	je     0x440a66
  440a66:	stos   DWORD PTR es:[rdi],eax
  440a67:	add    BYTE PTR [rcx+rbp*2+0x73],ch
  440a6b:	je     0x440ad2
  440a6d:	outs   dx,BYTE PTR ds:[rsi]
  440a6e:	add    BYTE PTR [rax],al
  440a70:	lods   eax,DWORD PTR ds:[rsi]
  440a71:	add    BYTE PTR [rsi+0x74],ch
  440a74:	outs   dx,DWORD PTR ds:[rsi]
  440a75:	push   0xae0073
  440a7a:	jb     0x440ae1
  440a7c:	movsxd esi,DWORD PTR [rsi+0x0]
  440a7f:	add    BYTE PTR [rax+0x6c657300],dh
  440a85:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x0]
  440a8a:	mov    cl,0x0
  440a8c:	jae    0x440af3
  440a8e:	outs   dx,BYTE PTR ds:[rsi]
  440a8f:	add    BYTE PTR fs:[rax],al
  440a92:	mov    dl,0x0
  440a94:	jae    0x440afb
  440a96:	outs   dx,BYTE PTR ds:[rsi]
  440a97:	fs je  0x440b09
  440a9a:	add    BYTE PTR [rax],al
  440a9c:	mov    bl,0x0
  440a9e:	jae    0x440b05
  440aa0:	je     0x440b15
  440aa2:	outs   dx,DWORD PTR ds:[rsi]
  440aa3:	movsxd ebp,DWORD PTR [rbx+0x6f]
  440aa6:	jo     0x440b1c
  440aa8:	add    BYTE PTR [rax],al
  440aaa:	mov    ch,0x0
  440aac:	jae    0x440b1d
  440aae:	movsxd ebp,DWORD PTR [rbx+0x65]
  440ab1:	je     0x440ab3
  440ab3:	add    BYTE PTR [rax],al
  440ab5:	lock add eax,DWORD PTR [rax]
  440ab8:	add    al,dh
  440aba:	add    eax,DWORD PTR [rax]
  440abc:	add    al,dh
  440abe:	add    eax,DWORD PTR [rax]
  440ac0:	ins    BYTE PTR es:[rdi],dx
  440ac1:	imul   esp,DWORD PTR [rdx+0x67],0x312d706d
  440ac8:	xor    BYTE PTR [rsi],ch
  440aca:	fs ins BYTE PTR es:[rdi],dx
  440acc:	ins    BYTE PTR es:[rdi],dx
  440acd:	add    BYTE PTR [rax],al
  440acf:	add    BYTE PTR [rax+rsi*8],dl
  440ad2:	add    eax,DWORD PTR [rax]
  440ad4:	adc    al,0xf0
  440ad6:	add    eax,DWORD PTR [rax]
  440ad8:	adc    al,0xf0
  440ada:	add    eax,DWORD PTR [rax]
  440adc:	adc    al,0xf0
  440ade:	add    eax,DWORD PTR [rax]
  440ae0:	adc    al,0xf0
  440ae2:	add    eax,DWORD PTR [rax]
  440ae4:	adc    al,0xf0
  440ae6:	add    eax,DWORD PTR [rax]
  440ae8:	adc    al,0xf0
  440aea:	add    eax,DWORD PTR [rax]
  440aec:	adc    al,0xf0
  440aee:	add    eax,DWORD PTR [rax]
  440af0:	adc    al,0xf0
  440af2:	add    eax,DWORD PTR [rax]
  440af4:	adc    al,0xf0
  440af6:	add    eax,DWORD PTR [rax]
  440af8:	adc    al,0xf0
  440afa:	add    eax,DWORD PTR [rax]
  440afc:	adc    al,0xf0
  440afe:	add    eax,DWORD PTR [rax]
  440b00:	adc    al,0xf0
  440b02:	add    eax,DWORD PTR [rax]
  440b04:	adc    al,0xf0
  440b06:	add    eax,DWORD PTR [rax]
  440b08:	adc    al,0xf0
  440b0a:	add    eax,DWORD PTR [rax]
  440b0c:	adc    al,0xf0
  440b0e:	add    eax,DWORD PTR [rax]
  440b10:	adc    al,0xf0
  440b12:	add    eax,DWORD PTR [rax]
  440b14:	adc    al,0xf0
  440b16:	add    eax,DWORD PTR [rax]
  440b18:	adc    al,0xf0
  440b1a:	add    eax,DWORD PTR [rax]
  440b1c:	adc    al,0xf0
  440b1e:	add    eax,DWORD PTR [rax]
  440b20:	adc    al,0xf0
  440b22:	add    eax,DWORD PTR [rax]
  440b24:	adc    al,0xf0
  440b26:	add    eax,DWORD PTR [rax]
  440b28:	adc    al,0xf0
  440b2a:	add    eax,DWORD PTR [rax]
  440b2c:	adc    al,0xf0
  440b2e:	add    eax,DWORD PTR [rax]
  440b30:	adc    al,0xf0
  440b32:	add    eax,DWORD PTR [rax]
  440b34:	adc    al,0xf0
  440b36:	add    eax,DWORD PTR [rax]
  440b38:	adc    al,0xf0
  440b3a:	add    eax,DWORD PTR [rax]
  440b3c:	adc    al,0xf0
  440b3e:	add    eax,DWORD PTR [rax]
  440b40:	adc    al,0xf0
  440b42:	add    eax,DWORD PTR [rax]
  440b44:	adc    al,0xf0
  440b46:	add    eax,DWORD PTR [rax]
  440b48:	adc    al,0xf0
  440b4a:	add    eax,DWORD PTR [rax]
  440b4c:	adc    al,0xf0
  440b4e:	add    eax,DWORD PTR [rax]
  440b50:	adc    al,0xf0
  440b52:	add    eax,DWORD PTR [rax]
  440b54:	ins    BYTE PTR es:[rdi],dx
  440b55:	imul   esp,DWORD PTR [rdx+0x67],0x6c74756e
  440b5c:	jae    0x440b8b
  440b5e:	xor    esi,DWORD PTR [rax]
  440b60:	cs fs ins BYTE PTR es:[rdi],dx
  440b63:	ins    BYTE PTR es:[rdi],dx
  440b64:	add    BYTE PTR [rax],al
  440b66:	add    BYTE PTR [rax],al
  440b68:	sub    al,dh
  440b6a:	add    eax,DWORD PTR [rax]
  440b6c:	sub    al,dh
  440b6e:	add    eax,DWORD PTR [rax]
  440b70:	sub    al,dh
  440b72:	add    eax,DWORD PTR [rax]
  440b74:	sub    al,dh
  440b76:	add    eax,DWORD PTR [rax]
  440b78:	sub    al,dh
  440b7a:	add    eax,DWORD PTR [rax]
  440b7c:	sub    al,dh
  440b7e:	add    eax,DWORD PTR [rax]
  440b80:	ins    BYTE PTR es:[rdi],dx
  440b81:	imul   esp,DWORD PTR [rdx+0x68],0x6577676f
  440b88:	gs fs sub eax,0x6c642e34
  440b8f:	ins    BYTE PTR es:[rdi],dx
  440b90:	add    BYTE PTR [rax],al
  440b92:	add    BYTE PTR [rax],al
  440b94:	cmp    al,0xf0
  440b96:	add    eax,DWORD PTR [rax]
  440b98:	cmp    al,0xf0
  440b9a:	add    eax,DWORD PTR [rax]
  440b9c:	cmp    al,0xf0
  440b9e:	add    eax,DWORD PTR [rax]
  440ba0:	ins    BYTE PTR es:[rdi],dx
  440ba1:	imul   esp,DWORD PTR [rdx+0x69],0x766e6f63
  440ba8:	sub    eax,0x6c642e32
  440bad:	ins    BYTE PTR es:[rdi],dx
  440bae:	add    BYTE PTR [rax],al
  440bb0:	push   rax
  440bb1:	lock add eax,DWORD PTR [rax]
  440bb4:	push   rax
  440bb5:	lock add eax,DWORD PTR [rax]
  440bb8:	push   rax
  440bb9:	lock add eax,DWORD PTR [rax]
  440bbc:	push   rax
  440bbd:	lock add eax,DWORD PTR [rax]
  440bc0:	push   rax
  440bc1:	lock add eax,DWORD PTR [rax]
  440bc4:	push   rax
  440bc5:	lock add eax,DWORD PTR [rax]
  440bc8:	push   rax
  440bc9:	lock add eax,DWORD PTR [rax]
  440bcc:	push   rax
  440bcd:	lock add eax,DWORD PTR [rax]
  440bd0:	push   rax
  440bd1:	lock add eax,DWORD PTR [rax]
  440bd4:	push   rax
  440bd5:	lock add eax,DWORD PTR [rax]
  440bd8:	push   rax
  440bd9:	lock add eax,DWORD PTR [rax]
  440bdc:	push   rax
  440bdd:	lock add eax,DWORD PTR [rax]
  440be0:	push   rax
  440be1:	lock add eax,DWORD PTR [rax]
  440be4:	push   rax
  440be5:	lock add eax,DWORD PTR [rax]
  440be8:	push   rax
  440be9:	lock add eax,DWORD PTR [rax]
  440bec:	push   rax
  440bed:	lock add eax,DWORD PTR [rax]
  440bf0:	push   rax
  440bf1:	lock add eax,DWORD PTR [rax]
  440bf4:	push   rax
  440bf5:	lock add eax,DWORD PTR [rax]
  440bf8:	push   rax
  440bf9:	lock add eax,DWORD PTR [rax]
  440bfc:	push   rax
  440bfd:	lock add eax,DWORD PTR [rax]
  440c00:	push   rax
  440c01:	lock add eax,DWORD PTR [rax]
  440c04:	push   rax
  440c05:	lock add eax,DWORD PTR [rax]
  440c08:	push   rax
  440c09:	lock add eax,DWORD PTR [rax]
  440c0c:	push   rax
  440c0d:	lock add eax,DWORD PTR [rax]
  440c10:	push   rax
  440c11:	lock add eax,DWORD PTR [rax]
  440c14:	push   rax
  440c15:	lock add eax,DWORD PTR [rax]
  440c18:	push   rax
  440c19:	lock add eax,DWORD PTR [rax]
  440c1c:	push   rax
  440c1d:	lock add eax,DWORD PTR [rax]
  440c20:	push   rax
  440c21:	lock add eax,DWORD PTR [rax]
  440c24:	push   rax
  440c25:	lock add eax,DWORD PTR [rax]
  440c28:	push   rax
  440c29:	lock add eax,DWORD PTR [rax]
  440c2c:	push   rax
  440c2d:	lock add eax,DWORD PTR [rax]
  440c30:	push   rax
  440c31:	lock add eax,DWORD PTR [rax]
  440c34:	push   rax
  440c35:	lock add eax,DWORD PTR [rax]
  440c38:	push   rax
  440c39:	lock add eax,DWORD PTR [rax]
  440c3c:	rex.WXB
  440c3d:	rex.RB push r10
  440c3f:	rex.WRX
  440c40:	rex.RB
  440c41:	xor    r14,QWORD PTR [rdx]
  440c44:	cs fs ins BYTE PTR es:[rdi],dx
  440c47:	ins    BYTE PTR es:[rdi],dx
  440c48:	add    BYTE PTR [rax],al
  440c4a:	add    BYTE PTR [rax],al
  440c4c:	lock add eax,DWORD PTR fs:[rax]
  440c50:	lock add eax,DWORD PTR fs:[rax]
  440c54:	lock add eax,DWORD PTR fs:[rax]
  440c58:	lock add eax,DWORD PTR fs:[rax]
  440c5c:	lock add eax,DWORD PTR fs:[rax]
  440c60:	lock add eax,DWORD PTR fs:[rax]
  440c64:	lock add eax,DWORD PTR fs:[rax]
  440c68:	lock add eax,DWORD PTR fs:[rax]
  440c6c:	lock add eax,DWORD PTR fs:[rax]
  440c70:	lock add eax,DWORD PTR fs:[rax]
  440c74:	lock add eax,DWORD PTR fs:[rax]
  440c78:	lock add eax,DWORD PTR fs:[rax]
  440c7c:	lock add eax,DWORD PTR fs:[rax]
  440c80:	lock add eax,DWORD PTR fs:[rax]
  440c84:	lock add eax,DWORD PTR fs:[rax]
  440c88:	lock add eax,DWORD PTR fs:[rax]
  440c8c:	lock add eax,DWORD PTR fs:[rax]
  440c90:	lock add eax,DWORD PTR fs:[rax]
  440c94:	lock add eax,DWORD PTR fs:[rax]
  440c98:	lock add eax,DWORD PTR fs:[rax]
  440c9c:	lock add eax,DWORD PTR fs:[rax]
  440ca0:	lock add eax,DWORD PTR fs:[rax]
  440ca4:	lock add eax,DWORD PTR fs:[rax]
  440ca8:	lock add eax,DWORD PTR fs:[rax]
  440cac:	lock add eax,DWORD PTR fs:[rax]
  440cb0:	lock add eax,DWORD PTR fs:[rax]
  440cb4:	lock add eax,DWORD PTR fs:[rax]
  440cb8:	lock add eax,DWORD PTR fs:[rax]
  440cbc:	lock add eax,DWORD PTR fs:[rax]
  440cc0:	lock add eax,DWORD PTR fs:[rax]
  440cc4:	lock add eax,DWORD PTR fs:[rax]
  440cc8:	lock add eax,DWORD PTR fs:[rax]
  440ccc:	lock add eax,DWORD PTR fs:[rax]
  440cd0:	lock add eax,DWORD PTR fs:[rax]
  440cd4:	lock add eax,DWORD PTR fs:[rax]
  440cd8:	lock add eax,DWORD PTR fs:[rax]
  440cdc:	lock add eax,DWORD PTR fs:[rax]
  440ce0:	lock add eax,DWORD PTR fs:[rax]
  440ce4:	lock add eax,DWORD PTR fs:[rax]
  440ce8:	lock add eax,DWORD PTR fs:[rax]
  440cec:	lock add eax,DWORD PTR fs:[rax]
  440cf0:	lock add eax,DWORD PTR fs:[rax]
  440cf4:	lock add eax,DWORD PTR fs:[rax]
  440cf8:	lock add eax,DWORD PTR fs:[rax]
  440cfc:	lock add eax,DWORD PTR fs:[rax]
  440d00:	lock add eax,DWORD PTR fs:[rax]
  440d04:	lock add eax,DWORD PTR fs:[rax]
  440d08:	lock add eax,DWORD PTR fs:[rax]
  440d0c:	lock add eax,DWORD PTR fs:[rax]
  440d10:	lock add eax,DWORD PTR fs:[rax]
  440d14:	lock add eax,DWORD PTR fs:[rax]
  440d18:	lock add eax,DWORD PTR fs:[rax]
  440d1c:	lock add eax,DWORD PTR fs:[rax]
  440d20:	lock add eax,DWORD PTR fs:[rax]
  440d24:	lock add eax,DWORD PTR fs:[rax]
  440d28:	lock add eax,DWORD PTR fs:[rax]
  440d2c:	lock add eax,DWORD PTR fs:[rax]
  440d30:	lock add eax,DWORD PTR fs:[rax]
  440d34:	lock add eax,DWORD PTR fs:[rax]
  440d38:	lock add eax,DWORD PTR fs:[rax]
  440d3c:	lock add eax,DWORD PTR fs:[rax]
  440d40:	lock add eax,DWORD PTR fs:[rax]
  440d44:	lock add eax,DWORD PTR fs:[rax]
  440d48:	lock add eax,DWORD PTR fs:[rax]
  440d4c:	lock add eax,DWORD PTR fs:[rax]
  440d50:	lock add eax,DWORD PTR fs:[rax]
  440d54:	lock add eax,DWORD PTR fs:[rax]
  440d58:	lock add eax,DWORD PTR fs:[rax]
  440d5c:	lock add eax,DWORD PTR fs:[rax]
  440d60:	lock add eax,DWORD PTR fs:[rax]
  440d64:	lock add eax,DWORD PTR fs:[rax]
  440d68:	lock add eax,DWORD PTR fs:[rax]
  440d6c:	lock add eax,DWORD PTR fs:[rax]
  440d70:	lock add eax,DWORD PTR fs:[rax]
  440d74:	lock add eax,DWORD PTR fs:[rax]
  440d78:	lock add eax,DWORD PTR fs:[rax]
  440d7c:	lock add eax,DWORD PTR fs:[rax]
  440d80:	lock add eax,DWORD PTR fs:[rax]
  440d84:	lock add eax,DWORD PTR fs:[rax]
  440d88:	lock add eax,DWORD PTR fs:[rax]
  440d8c:	ins    DWORD PTR es:[rdi],dx
  440d8d:	jae    0x440e05
  440d8f:	movsxd esi,DWORD PTR [rdx+0x74]
  440d92:	cs fs ins BYTE PTR es:[rdi],dx
  440d95:	ins    BYTE PTR es:[rdi],dx
  440d96:	add    BYTE PTR [rax],al
  440d98:	js     0x440d8a
  440d9a:	add    eax,DWORD PTR [rax]
  440d9c:	js     0x440d8e
  440d9e:	add    eax,DWORD PTR [rax]
  440da0:	js     0x440d92
  440da2:	add    eax,DWORD PTR [rax]
  440da4:	ins    BYTE PTR es:[rdi],dx
  440da5:	imul   esp,DWORD PTR [rdx+0x6e],0x6c747465
  440dac:	gs sub eax,0x6c642e36
  440db2:	ins    BYTE PTR es:[rdi],dx
  440db3:	add    BYTE PTR [rax+rsi*8-0xf73fffd],cl
  440dba:	add    eax,DWORD PTR [rax]
  440dbc:	mov    eax,?
  440dbe:	add    eax,DWORD PTR [rax]
  440dc0:	push   rbx
  440dc1:	rex.W
  440dc2:	rex.RB
  440dc3:	rex.WR
  440dc4:	xor    r14,QWORD PTR [rdx]
  440dc7:	cs fs ins BYTE PTR es:[rdi],dx
  440dca:	ins    BYTE PTR es:[rdi],dx
  440dcb:	add    BYTE PTR [rax+0x550003f0],ah
  440dd1:	push   rbx
  440dd2:	rex.RB push r10
  440dd4:	xor    esi,DWORD PTR [rdx]
  440dd6:	cs fs ins BYTE PTR es:[rdi],dx
  440dd9:	ins    BYTE PTR es:[rdi],dx
  440dda:	add    BYTE PTR [rax],al
  440ddc:	mov    ah,0xf0
  440dde:	add    eax,DWORD PTR [rax]
  440de0:	mov    ah,0xf0
  440de2:	add    eax,DWORD PTR [rax]
  440de4:	mov    ah,0xf0
  440de6:	add    eax,DWORD PTR [rax]
  440de8:	mov    ah,0xf0
  440dea:	add    eax,DWORD PTR [rax]
  440dec:	mov    ah,0xf0
  440dee:	add    eax,DWORD PTR [rax]
  440df0:	mov    ah,0xf0
  440df2:	add    eax,DWORD PTR [rax]
  440df4:	mov    ah,0xf0
  440df6:	add    eax,DWORD PTR [rax]
  440df8:	mov    ah,0xf0
  440dfa:	add    eax,DWORD PTR [rax]
  440dfc:	mov    ah,0xf0
  440dfe:	add    eax,DWORD PTR [rax]
  440e00:	mov    ah,0xf0
  440e02:	add    eax,DWORD PTR [rax]
  440e04:	mov    ah,0xf0
  440e06:	add    eax,DWORD PTR [rax]
  440e08:	mov    ah,0xf0
  440e0a:	add    eax,DWORD PTR [rax]
  440e0c:	mov    ah,0xf0
  440e0e:	add    eax,DWORD PTR [rax]
  440e10:	mov    ah,0xf0
  440e12:	add    eax,DWORD PTR [rax]
  440e14:	mov    ah,0xf0
  440e16:	add    eax,DWORD PTR [rax]
  440e18:	mov    ah,0xf0
  440e1a:	add    eax,DWORD PTR [rax]
  440e1c:	mov    ah,0xf0
  440e1e:	add    eax,DWORD PTR [rax]
  440e20:	mov    ah,0xf0
  440e22:	add    eax,DWORD PTR [rax]
  440e24:	mov    ah,0xf0
  440e26:	add    eax,DWORD PTR [rax]
  440e28:	mov    ah,0xf0
  440e2a:	add    eax,DWORD PTR [rax]
  440e2c:	mov    ah,0xf0
  440e2e:	add    eax,DWORD PTR [rax]
  440e30:	mov    ah,0xf0
  440e32:	add    eax,DWORD PTR [rax]
  440e34:	mov    ah,0xf0
  440e36:	add    eax,DWORD PTR [rax]
  440e38:	mov    ah,0xf0
  440e3a:	add    eax,DWORD PTR [rax]
  440e3c:	mov    ah,0xf0
  440e3e:	add    eax,DWORD PTR [rax]
  440e40:	mov    ah,0xf0
  440e42:	add    eax,DWORD PTR [rax]
  440e44:	mov    ah,0xf0
  440e46:	add    eax,DWORD PTR [rax]
  440e48:	push   rdi
  440e49:	push   rbx
  440e4a:	xor    bl,BYTE PTR [rdi+0x33]
  440e4d:	xor    ch,BYTE PTR [rsi]
  440e4f:	fs ins BYTE PTR es:[rdi],dx
  440e51:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

0000000000441000 <.CRT>:
	...
  441008:	(bad)  
  441009:	adc    DWORD PTR [rax+0x0],eax
	...
  441020:	adc    BYTE PTR [rax],dl
  441022:	add    BYTE PTR [rax],al
  441025:	add    BYTE PTR [rax],al
  441027:	add    BYTE PTR [rax+0x4270],al
	...
  44103d:	add    BYTE PTR [rax],al
  44103f:	add    BYTE PTR [rax+0x4272],dh
  441045:	add    BYTE PTR [rax],al
  441047:	add    BYTE PTR [rax+0x4272],al
	...

Disassembly of section .tls:

0000000000442000 <.tls>:
	...
  442020:	add    BYTE PTR [rax],ah
  442022:	add    BYTE PTR [rax],r8b
  442025:	add    BYTE PTR [rax],al
  442027:	add    BYTE PTR [rax+0x20],ah
  44202a:	add    BYTE PTR [rax],r8b
  44202d:	add    BYTE PTR [rax],al
  44202f:	add    BYTE PTR [rbx+rbp*8+0x43],bl
  442036:	add    BYTE PTR [rax],al
  442038:	adc    BYTE PTR [rax+rax*1+0x0],al
	...
