
8a003a2f25c4d464c9123cae4467afd4b50cc05287b370c53494c472bfbc8b48.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x28
   140001004:	and    QWORD PTR [rsp+0x30],0x0
   14000100a:	lea    r8,[rsp+0x30]
   14000100f:	lea    rdx,[rip+0x8582]        # 0x140009598
   140001016:	mov    ecx,0x1
   14000101b:	call   QWORD PTR [rip+0x8037]        # 0x140009058
   140001021:	test   eax,eax
   140001023:	je     0x1400010d9
   140001029:	mov    rcx,QWORD PTR [rsp+0x30]
   14000102e:	test   rcx,rcx
   140001031:	je     0x1400010d9
   140001037:	lea    rdx,[rip+0x8572]        # 0x1400095b0
   14000103e:	call   QWORD PTR [rip+0x8024]        # 0x140009068
   140001044:	mov    rcx,QWORD PTR [rsp+0x30]
   140001049:	lea    rdx,[rip+0x8578]        # 0x1400095c8
   140001050:	mov    QWORD PTR [rip+0xb6e1],rax        # 0x14000c738
   140001057:	call   QWORD PTR [rip+0x800b]        # 0x140009068
   14000105d:	mov    rcx,QWORD PTR [rsp+0x30]
   140001062:	lea    rdx,[rip+0x8577]        # 0x1400095e0
   140001069:	mov    QWORD PTR [rip+0xb6d0],rax        # 0x14000c740
   140001070:	call   QWORD PTR [rip+0x7ff2]        # 0x140009068
   140001076:	mov    rcx,QWORD PTR [rsp+0x30]
   14000107b:	lea    rdx,[rip+0x856e]        # 0x1400095f0
   140001082:	mov    QWORD PTR [rip+0xb6bf],rax        # 0x14000c748
   140001089:	call   QWORD PTR [rip+0x7fd9]        # 0x140009068
   14000108f:	cmp    QWORD PTR [rip+0xb6a1],0x0        # 0x14000c738
   140001097:	mov    QWORD PTR [rip+0xb6b2],rax        # 0x14000c750
   14000109e:	je     0x1400010b9
   1400010a0:	cmp    QWORD PTR [rip+0xb698],0x0        # 0x14000c740
   1400010a8:	je     0x1400010b9
   1400010aa:	cmp    QWORD PTR [rip+0xb696],0x0        # 0x14000c748
   1400010b2:	je     0x1400010b9
   1400010b4:	test   rax,rax
   1400010b7:	jne    0x1400010d9
   1400010b9:	and    QWORD PTR [rip+0xb677],0x0        # 0x14000c738
   1400010c1:	and    QWORD PTR [rip+0xb677],0x0        # 0x14000c740
   1400010c9:	and    QWORD PTR [rip+0xb677],0x0        # 0x14000c748
   1400010d1:	and    QWORD PTR [rip+0xb677],0x0        # 0x14000c750
   1400010d9:	lea    rcx,[rip+0x7cb0]        # 0x140008d90
   1400010e0:	add    rsp,0x28
   1400010e4:	jmp    0x1400086b8
   1400010e9:	int3   
   1400010ea:	int3   
   1400010eb:	int3   
   1400010ec:	int3   
   1400010ed:	int3   
   1400010ee:	int3   
   1400010ef:	int3   
   1400010f0:	rex push rdi
   1400010f2:	sub    rsp,0x20
   1400010f6:	mov    rdi,QWORD PTR [rip+0xb63b]        # 0x14000c738
   1400010fd:	test   rdi,rdi
   140001100:	je     0x140001152
   140001102:	cmp    QWORD PTR [rip+0xb626],0x0        # 0x14000c730
   14000110a:	je     0x140001134
   14000110c:	mov    rdi,QWORD PTR [rip+0xb62d]        # 0x14000c740
   140001113:	mov    rcx,rdi
   140001116:	call   QWORD PTR [rip+0x82dc]        # 0x1400093f8
   14000111c:	mov    rcx,QWORD PTR [rip+0xb60d]        # 0x14000c730
   140001123:	call   rdi
   140001125:	and    QWORD PTR [rip+0xb603],0x0        # 0x14000c730
   14000112d:	mov    rdi,QWORD PTR [rip+0xb604]        # 0x14000c738
   140001134:	mov    rcx,rdi
   140001137:	call   QWORD PTR [rip+0x82bb]        # 0x1400093f8
   14000113d:	lea    r9,[rip+0xb5ec]        # 0x14000c730
   140001144:	xor    r8d,r8d
   140001147:	xor    edx,edx
   140001149:	lea    rcx,[rip+0x85a0]        # 0x1400096f0
   140001150:	call   rdi
   140001152:	lea    rcx,[rip+0x7be7]        # 0x140008d40
   140001159:	add    rsp,0x20
   14000115d:	pop    rdi
   14000115e:	jmp    0x1400086b8
   140001163:	int3   
   140001164:	int3   
   140001165:	int3   
   140001166:	int3   
   140001167:	int3   
   140001168:	int3   
   140001169:	int3   
   14000116a:	int3   
   14000116b:	int3   
   14000116c:	int3   
   14000116d:	int3   
   14000116e:	int3   
   14000116f:	int3   
   140001170:	sub    rsp,0x28
   140001174:	xor    r8d,r8d
   140001177:	lea    rcx,[rip+0xb57a]        # 0x14000c6f8
   14000117e:	xor    edx,edx
   140001180:	call   QWORD PTR [rip+0x7f12]        # 0x140009098
   140001186:	lea    rcx,[rip+0x7c33]        # 0x140008dc0
   14000118d:	add    rsp,0x28
   140001191:	jmp    0x1400086b8
   140001196:	int3   
   140001197:	int3   
   140001198:	int3   
   140001199:	int3   
   14000119a:	int3   
   14000119b:	int3   
   14000119c:	int3   
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	mov    rax,QWORD PTR [rip+0xb501]        # 0x14000c6a8
   1400011a7:	mov    QWORD PTR [rip+0xae8a],rax        # 0x14000c038
   1400011ae:	lea    rax,[rip+0xae83]        # 0x14000c038
   1400011b5:	mov    QWORD PTR [rip+0xb4ec],rax        # 0x14000c6a8
   1400011bc:	ret    
   1400011bd:	int3   
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	mov    rax,QWORD PTR [rip+0xb4e1]        # 0x14000c6a8
   1400011c7:	mov    QWORD PTR [rip+0xaed2],rax        # 0x14000c0a0
   1400011ce:	lea    rax,[rip+0xaecb]        # 0x14000c0a0
   1400011d5:	mov    QWORD PTR [rip+0xb4cc],rax        # 0x14000c6a8
   1400011dc:	ret    
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	sub    rsp,0x28
   1400011e4:	lea    rcx,[rip+0x2c35]        # 0x140003e20
   1400011eb:	call   QWORD PTR [rip+0x7ec7]        # 0x1400090b8
   1400011f1:	mov    QWORD PTR [rip+0xaed8],rax        # 0x14000c0d0
   1400011f8:	add    rsp,0x28
   1400011fc:	ret    
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	mov    rax,QWORD PTR [rip+0xb4a1]        # 0x14000c6a8
   140001207:	mov    QWORD PTR [rip+0xaeca],rax        # 0x14000c0d8
   14000120e:	lea    rax,[rip+0xaec3]        # 0x14000c0d8
   140001215:	mov    QWORD PTR [rip+0xb48c],rax        # 0x14000c6a8
   14000121c:	ret    
   14000121d:	int3   
   14000121e:	int3   
   14000121f:	int3   
   140001220:	xor    eax,eax
   140001222:	lea    rcx,[rip+0x7bb7]        # 0x140008de0
   140001229:	mov    DWORD PTR [rip+0xb529],eax        # 0x14000c758
   14000122f:	jmp    0x1400086b8
   140001234:	int3   
   140001235:	int3   
   140001236:	int3   
   140001237:	int3   
   140001238:	int3   
   140001239:	int3   
   14000123a:	int3   
   14000123b:	int3   
   14000123c:	int3   
   14000123d:	int3   
   14000123e:	int3   
   14000123f:	int3   
   140001240:	int3   
   140001241:	int3   
   140001242:	int3   
   140001243:	int3   
   140001244:	int3   
   140001245:	int3   
   140001246:	int3   
   140001247:	int3   
   140001248:	sub    rsp,0x28
   14000124c:	cmp    DWORD PTR [rip+0xb4cd],0x0        # 0x14000c720
   140001253:	je     0x1400012b2
   140001255:	lea    rcx,[rip+0xb474]        # 0x14000c6d0
   14000125c:	call   QWORD PTR [rip+0x7e0e]        # 0x140009070
   140001262:	mov    eax,DWORD PTR [rip+0xb460]        # 0x14000c6c8
   140001268:	test   eax,eax
   14000126a:	jle    0x1400012a5
   14000126c:	dec    eax
   14000126e:	mov    DWORD PTR [rip+0xb454],eax        # 0x14000c6c8
   140001274:	call   QWORD PTR [rip+0x7f5e]        # 0x1400091d8
   14000127a:	mov    eax,DWORD PTR [rip+0xb444]        # 0x14000c6c4
   140001280:	cmp    DWORD PTR [rip+0xb442],eax        # 0x14000c6c8
   140001286:	jne    0x1400012a5
   140001288:	mov    DWORD PTR [rip+0xb42e],0x1        # 0x14000c6c0
   140001292:	call   QWORD PTR [rip+0x7f00]        # 0x140009198
   140001298:	mov    rcx,QWORD PTR [rip+0xb419]        # 0x14000c6b8
   14000129f:	call   QWORD PTR [rip+0x7ddb]        # 0x140009080
   1400012a5:	lea    rcx,[rip+0xb424]        # 0x14000c6d0
   1400012ac:	call   QWORD PTR [rip+0x7dc6]        # 0x140009078
   1400012b2:	add    rsp,0x28
   1400012b6:	ret    
   1400012b7:	int3   
   1400012b8:	int3   
   1400012b9:	int3   
   1400012ba:	int3   
   1400012bb:	int3   
   1400012bc:	int3   
   1400012bd:	int3   
   1400012be:	int3   
   1400012bf:	int3   
   1400012c0:	mov    QWORD PTR [rsp+0x18],rbx
   1400012c5:	mov    QWORD PTR [rsp+0x20],rsi
   1400012ca:	push   rbp
   1400012cb:	push   rdi
   1400012cc:	push   r12
   1400012ce:	push   r14
   1400012d0:	push   r15
   1400012d2:	mov    rbp,rsp
   1400012d5:	sub    rsp,0x40
   1400012d9:	xor    ebx,ebx
   1400012db:	xor    esi,esi
   1400012dd:	and    DWORD PTR [rbp-0x10],ebx
   1400012e0:	xor    edi,edi
   1400012e2:	and    DWORD PTR [rbp-0xc],ebx
   1400012e5:	xor    r15d,r15d
   1400012e8:	cmp    DWORD PTR [rcx+0x8],0x2
   1400012ec:	mov    r12,rcx
   1400012ef:	mov    QWORD PTR [rbp+0x30],rsi
   1400012f3:	mov    QWORD PTR [rbp+0x38],rdi
   1400012f7:	mov    QWORD PTR [rbp-0x8],r15
   1400012fb:	je     0x14000130b
   1400012fd:	mov    r14d,0x80070057
   140001303:	mov    ecx,r14d
   140001306:	jmp    0x1400013f7
   14000130b:	call   QWORD PTR [rip+0x7d4f]        # 0x140009060
   140001311:	xor    edx,edx
   140001313:	mov    rcx,rax
   140001316:	lea    r8d,[rdx+0x8]
   14000131a:	call   QWORD PTR [rip+0x7d28]        # 0x140009048
   140001320:	mov    rbx,rax
   140001323:	test   rax,rax
   140001326:	je     0x140001334
   140001328:	lea    rax,[rip+0x83e1]        # 0x140009710
   14000132f:	mov    QWORD PTR [rbx],rax
   140001332:	jmp    0x140001336
   140001334:	xor    ebx,ebx
   140001336:	mov    rax,rbx
   140001339:	neg    rax
   14000133c:	sbb    r14d,r14d
   14000133f:	not    r14d
   140001342:	and    r14d,0x8007000e
   140001349:	jl     0x140001303
   14000134b:	mov    rax,QWORD PTR [r12]
   14000134f:	lea    rcx,[rbp+0x30]
   140001353:	mov    QWORD PTR [rsp+0x28],rcx
   140001358:	mov    edx,DWORD PTR [rax]
   14000135a:	call   0x1400081a0
   14000135f:	mov    r14d,eax
   140001362:	test   eax,eax
   140001364:	jns    0x140001376
   140001366:	mov    ecx,eax
   140001368:	call   0x140008090
   14000136d:	mov    rsi,QWORD PTR [rbp+0x30]
   140001371:	jmp    0x1400013fc
   140001376:	mov    rsi,QWORD PTR [rbp+0x30]
   14000137a:	lea    rcx,[rbp-0x10]
   14000137e:	mov    rdx,rsi
   140001381:	call   0x140001f44
   140001386:	mov    r14d,eax
   140001389:	test   eax,eax
   14000138b:	jns    0x14000139a
   14000138d:	mov    ecx,eax
   14000138f:	call   0x140008090
   140001394:	mov    r15,QWORD PTR [rbp-0x8]
   140001398:	jmp    0x1400013fc
   14000139a:	mov    rax,QWORD PTR [r12]
   14000139e:	lea    rcx,[rbp+0x38]
   1400013a2:	mov    QWORD PTR [rsp+0x28],rcx
   1400013a7:	mov    edx,DWORD PTR [rax+0x4]
   1400013aa:	call   0x1400081a0
   1400013af:	mov    r14d,eax
   1400013b2:	test   eax,eax
   1400013b4:	jns    0x1400013c3
   1400013b6:	mov    ecx,eax
   1400013b8:	call   0x140008090
   1400013bd:	mov    rdi,QWORD PTR [rbp+0x38]
   1400013c1:	jmp    0x140001394
   1400013c3:	mov    rdi,QWORD PTR [rbp+0x38]
   1400013c7:	lea    rcx,[rbp-0x10]
   1400013cb:	mov    rdx,rdi
   1400013ce:	call   0x140001f44
   1400013d3:	mov    r14d,eax
   1400013d6:	test   eax,eax
   1400013d8:	js     0x14000138d
   1400013da:	mov    r15,QWORD PTR [rbp-0x8]
   1400013de:	mov    rcx,rbx
   1400013e1:	mov    r8d,DWORD PTR [r12+0x8]
   1400013e6:	mov    rdx,r15
   1400013e9:	call   0x140002080
   1400013ee:	mov    r14d,eax
   1400013f1:	test   eax,eax
   1400013f3:	jns    0x1400013fc
   1400013f5:	mov    ecx,eax
   1400013f7:	call   0x140008090
   1400013fc:	mov    ecx,r14d
   1400013ff:	call   0x140007fa8
   140001404:	cmp    DWORD PTR [rbp-0x10],0x0
   140001408:	je     0x140001426
   14000140a:	test   r15,r15
   14000140d:	je     0x140001423
   14000140f:	call   QWORD PTR [rip+0x7c4b]        # 0x140009060
   140001415:	mov    r8,r15
   140001418:	xor    edx,edx
   14000141a:	mov    rcx,rax
   14000141d:	call   QWORD PTR [rip+0x7c2d]        # 0x140009050
   140001423:	xor    r15d,r15d
   140001426:	xor    ecx,ecx
   140001428:	call   0x140007fa8
   14000142d:	test   r15,r15
   140001430:	je     0x140001446
   140001432:	call   QWORD PTR [rip+0x7c28]        # 0x140009060
   140001438:	mov    r8,r15
   14000143b:	xor    edx,edx
   14000143d:	mov    rcx,rax
   140001440:	call   QWORD PTR [rip+0x7c0a]        # 0x140009050
   140001446:	test   rdi,rdi
   140001449:	je     0x140001454
   14000144b:	mov    rcx,rdi
   14000144e:	call   QWORD PTR [rip+0x7d54]        # 0x1400091a8
   140001454:	test   rsi,rsi
   140001457:	je     0x140001462
   140001459:	mov    rcx,rsi
   14000145c:	call   QWORD PTR [rip+0x7d46]        # 0x1400091a8
   140001462:	test   rbx,rbx
   140001465:	je     0x14000147b
   140001467:	call   QWORD PTR [rip+0x7bf3]        # 0x140009060
   14000146d:	mov    r8,rbx
   140001470:	xor    edx,edx
   140001472:	mov    rcx,rax
   140001475:	call   QWORD PTR [rip+0x7bd5]        # 0x140009050
   14000147b:	lea    r11,[rsp+0x40]
   140001480:	mov    eax,r14d
   140001483:	mov    rbx,QWORD PTR [r11+0x40]
   140001487:	mov    rsi,QWORD PTR [r11+0x48]
   14000148b:	mov    rsp,r11
   14000148e:	pop    r15
   140001490:	pop    r14
   140001492:	pop    r12
   140001494:	pop    rdi
   140001495:	pop    rbp
   140001496:	ret    
   140001497:	int3   
   140001498:	int3   
   140001499:	int3   
   14000149a:	int3   
   14000149b:	int3   
   14000149c:	int3   
   14000149d:	int3   
   14000149e:	int3   
   14000149f:	int3   
   1400014a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400014a5:	mov    QWORD PTR [rsp+0x10],rsi
   1400014aa:	push   rdi
   1400014ab:	sub    rsp,0x20
   1400014af:	mov    rbx,rcx
   1400014b2:	mov    ecx,0x1
   1400014b7:	call   QWORD PTR [rip+0x7e1b]        # 0x1400092d8
   1400014bd:	mov    edi,eax
   1400014bf:	test   eax,eax
   1400014c1:	js     0x1400014cb
   1400014c3:	mov    rcx,rbx
   1400014c6:	call   0x1400012c0
   1400014cb:	test   rbx,rbx
   1400014ce:	je     0x140001504
   1400014d0:	mov    rsi,QWORD PTR [rbx]
   1400014d3:	test   rsi,rsi
   1400014d6:	je     0x1400014f0
   1400014d8:	call   QWORD PTR [rip+0x7b82]        # 0x140009060
   1400014de:	mov    r8,rsi
   1400014e1:	xor    edx,edx
   1400014e3:	mov    rcx,rax
   1400014e6:	call   QWORD PTR [rip+0x7b64]        # 0x140009050
   1400014ec:	and    QWORD PTR [rbx],0x0
   1400014f0:	call   QWORD PTR [rip+0x7b6a]        # 0x140009060
   1400014f6:	mov    r8,rbx
   1400014f9:	xor    edx,edx
   1400014fb:	mov    rcx,rax
   1400014fe:	call   QWORD PTR [rip+0x7b4c]        # 0x140009050
   140001504:	test   edi,edi
   140001506:	js     0x14000150e
   140001508:	call   QWORD PTR [rip+0x7dba]        # 0x1400092c8
   14000150e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001513:	xor    eax,eax
   140001515:	mov    rsi,QWORD PTR [rsp+0x38]
   14000151a:	add    rsp,0x20
   14000151e:	pop    rdi
   14000151f:	ret    
   140001520:	int3   
   140001521:	int3   
   140001522:	int3   
   140001523:	int3   
   140001524:	int3   
   140001525:	int3   
   140001526:	int3   
   140001527:	int3   
   140001528:	int3   
   140001529:	int3   
   14000152a:	int3   
   14000152b:	int3   
   14000152c:	int3   
   14000152d:	int3   
   14000152e:	int3   
   14000152f:	int3   
   140001530:	mov    eax,0x1
   140001535:	lock xadd DWORD PTR [rcx+0x1c],eax
   14000153a:	inc    eax
   14000153c:	ret    
   14000153d:	int3   
   14000153e:	int3   
   14000153f:	int3   
   140001540:	int3   
   140001541:	int3   
   140001542:	int3   
   140001543:	int3   
   140001544:	int3   
   140001545:	int3   
   140001546:	int3   
   140001547:	int3   
   140001548:	int3   
   140001549:	int3   
   14000154a:	int3   
   14000154b:	int3   
   14000154c:	int3   
   14000154d:	int3   
   14000154e:	int3   
   14000154f:	int3   
   140001550:	mov    QWORD PTR [rsp+0x8],rbx
   140001555:	mov    QWORD PTR [rsp+0x10],rsi
   14000155a:	mov    QWORD PTR [rsp+0x18],rdi
   14000155f:	push   r14
   140001561:	sub    rsp,0x20
   140001565:	mov    rdi,rcx
   140001568:	or     esi,0xffffffff
   14000156b:	lock xadd DWORD PTR [rcx+0x1c],esi
   140001570:	sub    esi,0x1
   140001573:	jne    0x1400015d2
   140001575:	test   rcx,rcx
   140001578:	je     0x1400015d2
   14000157a:	lea    rax,[rip+0x8297]        # 0x140009818
   140001581:	mov    QWORD PTR [rcx],rax
   140001584:	add    rcx,0x10
   140001588:	call   0x140002fec
   14000158d:	call   0x140001248
   140001592:	lea    rcx,[rdi+0x10]
   140001596:	call   0x140002fec
   14000159b:	mov    r14,QWORD PTR [rdi+0x8]
   14000159f:	test   r14,r14
   1400015a2:	je     0x1400015be
   1400015a4:	mov    rax,QWORD PTR [r14]
   1400015a7:	mov    rbx,QWORD PTR [rax+0x10]
   1400015ab:	mov    rcx,rbx
   1400015ae:	call   QWORD PTR [rip+0x7e44]        # 0x1400093f8
   1400015b4:	mov    rcx,r14
   1400015b7:	call   rbx
   1400015b9:	and    QWORD PTR [rdi+0x8],0x0
   1400015be:	call   QWORD PTR [rip+0x7a9c]        # 0x140009060
   1400015c4:	mov    r8,rdi
   1400015c7:	xor    edx,edx
   1400015c9:	mov    rcx,rax
   1400015cc:	call   QWORD PTR [rip+0x7a7e]        # 0x140009050
   1400015d2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400015d7:	mov    eax,esi
   1400015d9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400015de:	mov    rdi,QWORD PTR [rsp+0x40]
   1400015e3:	add    rsp,0x20
   1400015e7:	pop    r14
   1400015e9:	ret    
   1400015ea:	int3   
   1400015eb:	int3   
   1400015ec:	int3   
   1400015ed:	int3   
   1400015ee:	int3   
   1400015ef:	int3   
   1400015f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400015f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400015fa:	push   rdi
   1400015fb:	sub    rsp,0x20
   1400015ff:	xor    edi,edi
   140001601:	mov    rsi,rcx
   140001604:	test   r8,r8
   140001607:	jne    0x140001610
   140001609:	mov    ecx,0x80070057
   14000160e:	jmp    0x140001664
   140001610:	mov    QWORD PTR [r8],rdi
   140001613:	mov    rax,QWORD PTR [rdx]
   140001616:	cmp    rax,QWORD PTR [rip+0x87cb]        # 0x140009de8
   14000161d:	jne    0x14000162c
   14000161f:	mov    rax,QWORD PTR [rdx+0x8]
   140001623:	cmp    rax,QWORD PTR [rip+0x87c6]        # 0x140009df0
   14000162a:	je     0x140001645
   14000162c:	mov    rax,QWORD PTR [rdx]
   14000162f:	cmp    rax,QWORD PTR [rip+0x875a]        # 0x140009d90
   140001636:	jne    0x14000165f
   140001638:	mov    rax,QWORD PTR [rdx+0x8]
   14000163c:	cmp    rax,QWORD PTR [rip+0x8755]        # 0x140009d98
   140001643:	jne    0x14000165f
   140001645:	mov    QWORD PTR [r8],rcx
   140001648:	mov    rax,QWORD PTR [rcx]
   14000164b:	mov    rbx,QWORD PTR [rax+0x8]
   14000164f:	mov    rcx,rbx
   140001652:	call   QWORD PTR [rip+0x7da0]        # 0x1400093f8
   140001658:	mov    rcx,rsi
   14000165b:	call   rbx
   14000165d:	jmp    0x14000166b
   14000165f:	mov    ecx,0x80004002
   140001664:	mov    edi,ecx
   140001666:	call   0x140008090
   14000166b:	mov    ecx,edi
   14000166d:	call   0x140007fa8
   140001672:	mov    rbx,QWORD PTR [rsp+0x30]
   140001677:	mov    eax,edi
   140001679:	mov    rsi,QWORD PTR [rsp+0x38]
   14000167e:	add    rsp,0x20
   140001682:	pop    rdi
   140001683:	ret    
   140001684:	int3   
   140001685:	int3   
   140001686:	int3   
   140001687:	int3   
   140001688:	int3   
   140001689:	int3   
   14000168a:	int3   
   14000168b:	int3   
   14000168c:	int3   
   14000168d:	int3   
   14000168e:	int3   
   14000168f:	int3   
   140001690:	mov    QWORD PTR [rsp+0x8],rbx
   140001695:	mov    QWORD PTR [rsp+0x10],rbp
   14000169a:	mov    QWORD PTR [rsp+0x18],rsi
   14000169f:	push   rdi
   1400016a0:	push   r14
   1400016a2:	push   r15
   1400016a4:	sub    rsp,0x20
   1400016a8:	mov    r15,r9
   1400016ab:	mov    ebp,r8d
   1400016ae:	mov    r14,rdx
   1400016b1:	mov    rsi,rcx
   1400016b4:	test   r9,r9
   1400016b7:	jne    0x1400016ca
   1400016b9:	mov    ecx,0x80070057
   1400016be:	mov    ebx,ecx
   1400016c0:	call   0x140008090
   1400016c5:	jmp    0x140001760
   1400016ca:	test   rdx,rdx
   1400016cd:	je     0x1400016b9
   1400016cf:	mov    rax,QWORD PTR [rdx]
   1400016d2:	mov    rdi,QWORD PTR [rax]
   1400016d5:	mov    rcx,rdi
   1400016d8:	call   QWORD PTR [rip+0x7d1a]        # 0x1400093f8
   1400016de:	lea    r8,[rsi+0x8]
   1400016e2:	mov    rcx,r14
   1400016e5:	lea    rdx,[rip+0x8694]        # 0x140009d80
   1400016ec:	call   rdi
   1400016ee:	mov    ebx,eax
   1400016f0:	test   eax,eax
   1400016f2:	jns    0x1400016f8
   1400016f4:	mov    ecx,eax
   1400016f6:	jmp    0x1400016c0
   1400016f8:	call   QWORD PTR [rip+0x7962]        # 0x140009060
   1400016fe:	xor    edx,edx
   140001700:	mov    rcx,rax
   140001703:	lea    r8d,[rdx+0x10]
   140001707:	call   QWORD PTR [rip+0x793b]        # 0x140009048
   14000170d:	test   rax,rax
   140001710:	je     0x140001721
   140001712:	lea    rcx,[rip+0x807f]        # 0x140009798
   140001719:	mov    QWORD PTR [rax],rcx
   14000171c:	and    QWORD PTR [rax+0x8],0x0
   140001721:	mov    QWORD PTR [rsi+0x10],rax
   140001725:	neg    rax
   140001728:	sbb    ebx,ebx
   14000172a:	not    ebx
   14000172c:	and    ebx,0x8007000e
   140001732:	jge    0x140001738
   140001734:	mov    ecx,ebx
   140001736:	jmp    0x1400016c0
   140001738:	mov    rdi,QWORD PTR [rsi+0x10]
   14000173c:	mov    rax,QWORD PTR [rdi]
   14000173f:	mov    rbx,QWORD PTR [rax]
   140001742:	mov    rcx,rbx
   140001745:	call   QWORD PTR [rip+0x7cad]        # 0x1400093f8
   14000174b:	mov    rcx,rdi
   14000174e:	call   rbx
   140001750:	mov    ebx,eax
   140001752:	test   eax,eax
   140001754:	js     0x1400016f4
   140001756:	mov    DWORD PTR [rsi+0x18],ebp
   140001759:	mov    rax,QWORD PTR [rsi+0x10]
   14000175d:	mov    QWORD PTR [r15],rax
   140001760:	mov    ecx,ebx
   140001762:	call   0x140007fa8
   140001767:	mov    rbp,QWORD PTR [rsp+0x48]
   14000176c:	mov    eax,ebx
   14000176e:	mov    rbx,QWORD PTR [rsp+0x40]
   140001773:	mov    rsi,QWORD PTR [rsp+0x50]
   140001778:	add    rsp,0x20
   14000177c:	pop    r15
   14000177e:	pop    r14
   140001780:	pop    rdi
   140001781:	ret    
   140001782:	int3   
   140001783:	int3   
   140001784:	int3   
   140001785:	int3   
   140001786:	int3   
   140001787:	int3   
   140001788:	int3   
   140001789:	int3   
   14000178a:	int3   
   14000178b:	int3   
   14000178c:	int3   
   14000178d:	int3   
   14000178e:	int3   
   14000178f:	int3   
   140001790:	rex push rbx
   140001792:	sub    rsp,0x20
   140001796:	xor    ebx,ebx
   140001798:	test   r8,r8
   14000179b:	jne    0x1400017ab
   14000179d:	mov    ecx,0x80070057
   1400017a2:	mov    ebx,ecx
   1400017a4:	call   0x140008090
   1400017a9:	jmp    0x1400017b2
   1400017ab:	mov    DWORD PTR [r8],0x1
   1400017b2:	mov    ecx,ebx
   1400017b4:	call   0x140007fa8
   1400017b9:	mov    eax,ebx
   1400017bb:	add    rsp,0x20
   1400017bf:	pop    rbx
   1400017c0:	ret    
   1400017c1:	int3   
   1400017c2:	int3   
   1400017c3:	int3   
   1400017c4:	int3   
   1400017c5:	int3   
   1400017c6:	int3   
   1400017c7:	int3   
   1400017c8:	int3   
   1400017c9:	int3   
   1400017ca:	int3   
   1400017cb:	int3   
   1400017cc:	int3   
   1400017cd:	int3   
   1400017ce:	int3   
   1400017cf:	int3   
   1400017d0:	rex push rbx
   1400017d2:	sub    rsp,0x20
   1400017d6:	mov    rax,QWORD PTR [rsp+0x58]
   1400017db:	xor    ebx,ebx
   1400017dd:	test   rax,rax
   1400017e0:	jne    0x1400017f0
   1400017e2:	mov    ecx,0x80070057
   1400017e7:	mov    ebx,ecx
   1400017e9:	call   0x140008090
   1400017ee:	jmp    0x1400017f6
   1400017f0:	mov    DWORD PTR [rax],0x1
   1400017f6:	mov    ecx,ebx
   1400017f8:	call   0x140007fa8
   1400017fd:	mov    eax,ebx
   1400017ff:	add    rsp,0x20
   140001803:	pop    rbx
   140001804:	ret    
   140001805:	int3   
   140001806:	int3   
   140001807:	int3   
   140001808:	int3   
   140001809:	int3   
   14000180a:	int3   
   14000180b:	int3   
   14000180c:	int3   
   14000180d:	int3   
   14000180e:	int3   
   14000180f:	int3   
   140001810:	rex push rbx
   140001812:	sub    rsp,0x20
   140001816:	mov    rax,QWORD PTR [rsp+0x50]
   14000181b:	xor    ebx,ebx
   14000181d:	test   rax,rax
   140001820:	jne    0x140001830
   140001822:	mov    ecx,0x80070057
   140001827:	mov    ebx,ecx
   140001829:	call   0x140008090
   14000182e:	jmp    0x140001836
   140001830:	mov    DWORD PTR [rax],0x1
   140001836:	mov    ecx,ebx
   140001838:	call   0x140007fa8
   14000183d:	mov    eax,ebx
   14000183f:	add    rsp,0x20
   140001843:	pop    rbx
   140001844:	ret    
   140001845:	int3   
   140001846:	int3   
   140001847:	int3   
   140001848:	int3   
   140001849:	int3   
   14000184a:	int3   
   14000184b:	int3   
   14000184c:	int3   
   14000184d:	int3   
   14000184e:	int3   
   14000184f:	int3   
   140001850:	mov    QWORD PTR [rsp+0x18],rbx
   140001855:	mov    QWORD PTR [rsp+0x20],rsi
   14000185a:	push   rdi
   14000185b:	sub    rsp,0x30
   14000185f:	mov    rdi,QWORD PTR [rcx+0x8]
   140001863:	mov    rsi,rcx
   140001866:	and    QWORD PTR [rsp+0x40],0x0
   14000186c:	mov    rax,QWORD PTR [rdi]
   14000186f:	mov    rbx,QWORD PTR [rax+0x60]
   140001873:	mov    rcx,rbx
   140001876:	call   QWORD PTR [rip+0x7b7c]        # 0x1400093f8
   14000187c:	lea    r8,[rsp+0x40]
   140001881:	mov    edx,0x1
   140001886:	mov    rcx,rdi
   140001889:	call   rbx
   14000188b:	mov    rax,QWORD PTR [rsp+0x40]
   140001890:	test   rax,rax
   140001893:	je     0x1400018dc
   140001895:	cmp    WORD PTR [rax],0x31
   140001899:	jne    0x1400018dc
   14000189b:	cmp    QWORD PTR [rsi+0x10],0x0
   1400018a0:	je     0x1400018dc
   1400018a2:	cmp    DWORD PTR [rsi+0x18],0x0
   1400018a6:	je     0x1400018dc
   1400018a8:	mov    rdi,QWORD PTR [rsi+0x10]
   1400018ac:	mov    DWORD PTR [rsp+0x48],0x68
   1400018b4:	mov    DWORD PTR [rsp+0x4c],0x69
   1400018bc:	mov    rax,QWORD PTR [rdi]
   1400018bf:	mov    rbx,QWORD PTR [rax+0x8]
   1400018c3:	mov    rcx,rbx
   1400018c6:	call   QWORD PTR [rip+0x7b2c]        # 0x1400093f8
   1400018cc:	mov    r8d,0x2
   1400018d2:	lea    rdx,[rsp+0x48]
   1400018d7:	mov    rcx,rdi
   1400018da:	call   rbx
   1400018dc:	mov    rdi,QWORD PTR [rsi+0x8]
   1400018e0:	test   rdi,rdi
   1400018e3:	je     0x1400018ff
   1400018e5:	mov    rax,QWORD PTR [rdi]
   1400018e8:	mov    rbx,QWORD PTR [rax+0x10]
   1400018ec:	mov    rcx,rbx
   1400018ef:	call   QWORD PTR [rip+0x7b03]        # 0x1400093f8
   1400018f5:	mov    rcx,rdi
   1400018f8:	call   rbx
   1400018fa:	and    QWORD PTR [rsi+0x8],0x0
   1400018ff:	and    QWORD PTR [rsp+0x20],0x0
   140001905:	xor    r9d,r9d
   140001908:	mov    rcx,QWORD PTR [rip+0x7dd9]        # 0x1400096e8
   14000190f:	xor    r8d,r8d
   140001912:	xor    edx,edx
   140001914:	call   QWORD PTR [rip+0x7ace]        # 0x1400093e8
   14000191a:	xor    ecx,ecx
   14000191c:	call   0x140007fa8
   140001921:	mov    rbx,QWORD PTR [rsp+0x40]
   140001926:	test   rbx,rbx
   140001929:	je     0x14000193f
   14000192b:	call   QWORD PTR [rip+0x772f]        # 0x140009060
   140001931:	mov    r8,rbx
   140001934:	xor    edx,edx
   140001936:	mov    rcx,rax
   140001939:	call   QWORD PTR [rip+0x7711]        # 0x140009050
   14000193f:	mov    rbx,QWORD PTR [rsp+0x50]
   140001944:	xor    eax,eax
   140001946:	mov    rsi,QWORD PTR [rsp+0x58]
   14000194b:	add    rsp,0x30
   14000194f:	pop    rdi
   140001950:	ret    
   140001951:	int3   
   140001952:	int3   
   140001953:	int3   
   140001954:	int3   
   140001955:	int3   
   140001956:	int3   
   140001957:	int3   
   140001958:	int3   
   140001959:	int3   
   14000195a:	int3   
   14000195b:	int3   
   14000195c:	int3   
   14000195d:	int3   
   14000195e:	int3   
   14000195f:	int3   
   140001960:	mov    QWORD PTR [rsp+0x8],rbx
   140001965:	mov    QWORD PTR [rsp+0x10],rsi
   14000196a:	push   rdi
   14000196b:	sub    rsp,0x20
   14000196f:	xor    esi,esi
   140001971:	test   r9,r9
   140001974:	jne    0x140001984
   140001976:	mov    ecx,0x80070057
   14000197b:	mov    esi,ecx
   14000197d:	call   0x140008090
   140001982:	jmp    0x1400019ca
   140001984:	mov    DWORD PTR [r9],0x1
   14000198b:	cmp    QWORD PTR [rcx+0x10],rsi
   14000198f:	je     0x1400019ca
   140001991:	cmp    DWORD PTR [rcx+0x18],esi
   140001994:	je     0x1400019ca
   140001996:	mov    rdi,QWORD PTR [rcx+0x10]
   14000199a:	mov    DWORD PTR [rsp+0x48],0x6a
   1400019a2:	mov    DWORD PTR [rsp+0x4c],0x6b
   1400019aa:	mov    rdx,QWORD PTR [rdi]
   1400019ad:	mov    rbx,QWORD PTR [rdx+0x8]
   1400019b1:	mov    rcx,rbx
   1400019b4:	call   QWORD PTR [rip+0x7a3e]        # 0x1400093f8
   1400019ba:	mov    r8d,0x2
   1400019c0:	lea    rdx,[rsp+0x48]
   1400019c5:	mov    rcx,rdi
   1400019c8:	call   rbx
   1400019ca:	mov    ecx,esi
   1400019cc:	call   0x140007fa8
   1400019d1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400019d6:	mov    eax,esi
   1400019d8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400019dd:	add    rsp,0x20
   1400019e1:	pop    rdi
   1400019e2:	ret    
   1400019e3:	int3   
   1400019e4:	int3   
   1400019e5:	int3   
   1400019e6:	int3   
   1400019e7:	int3   
   1400019e8:	int3   
   1400019e9:	int3   
   1400019ea:	int3   
   1400019eb:	int3   
   1400019ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400019f1:	mov    QWORD PTR [rsp+0x10],rbp
   1400019f6:	mov    QWORD PTR [rsp+0x18],rsi
   1400019fb:	push   rdi
   1400019fc:	push   r12
   1400019fe:	push   r13
   140001a00:	push   r14
   140001a02:	push   r15
   140001a04:	sub    rsp,0x20
   140001a08:	movsxd rbp,DWORD PTR [rcx+0xc]
   140001a0c:	xor    r15d,r15d
   140001a0f:	xor    r12d,r12d
   140001a12:	xor    r13d,r13d
   140001a15:	xor    ebx,ebx
   140001a17:	xor    edi,edi
   140001a19:	mov    r14d,edx
   140001a1c:	mov    rsi,rcx
   140001a1f:	test   rbp,rbp
   140001a22:	jle    0x140001a54
   140001a24:	mov    rcx,QWORD PTR [rsi+0x10]
   140001a28:	mov    rcx,QWORD PTR [rcx+rdi*8]
   140001a2c:	test   r14d,r14d
   140001a2f:	je     0x140001a38
   140001a31:	call   0x140005554
   140001a36:	jmp    0x140001a3d
   140001a38:	call   0x140005b24
   140001a3d:	mov    ebx,eax
   140001a3f:	test   eax,eax
   140001a41:	js     0x140001a4d
   140001a43:	inc    rdi
   140001a46:	cmp    rdi,rbp
   140001a49:	jge    0x140001a54
   140001a4b:	jmp    0x140001a24
   140001a4d:	mov    ecx,eax
   140001a4f:	call   0x140008090
   140001a54:	mov    ecx,ebx
   140001a56:	call   0x140007fa8
   140001a5b:	test   ebx,ebx
   140001a5d:	js     0x140001acb
   140001a5f:	mov    rcx,QWORD PTR [rsi+0x30]
   140001a63:	mov    r15d,0x1
   140001a69:	test   rcx,rcx
   140001a6c:	jne    0x140001a72
   140001a6e:	xor    ebx,ebx
   140001a70:	jmp    0x140001a87
   140001a72:	mov    edx,r14d
   140001a75:	call   0x140005c94
   140001a7a:	mov    ebx,eax
   140001a7c:	test   eax,eax
   140001a7e:	jns    0x140001a87
   140001a80:	mov    ecx,eax
   140001a82:	call   0x140008090
   140001a87:	mov    ecx,ebx
   140001a89:	call   0x140007fa8
   140001a8e:	test   ebx,ebx
   140001a90:	js     0x140001acb
   140001a92:	mov    rcx,QWORD PTR [rsi+0x28]
   140001a96:	mov    r12d,r15d
   140001a99:	test   rcx,rcx
   140001a9c:	jne    0x140001aa2
   140001a9e:	xor    ebx,ebx
   140001aa0:	jmp    0x140001ac0
   140001aa2:	test   r14d,r14d
   140001aa5:	je     0x140001aae
   140001aa7:	call   0x140005328
   140001aac:	jmp    0x140001ab3
   140001aae:	call   0x14000545c
   140001ab3:	mov    ebx,eax
   140001ab5:	test   eax,eax
   140001ab7:	jns    0x140001ac0
   140001ab9:	mov    ecx,eax
   140001abb:	call   0x140008090
   140001ac0:	mov    ecx,ebx
   140001ac2:	call   0x140007fa8
   140001ac7:	test   ebx,ebx
   140001ac9:	jns    0x140001ad4
   140001acb:	mov    ecx,ebx
   140001acd:	call   0x140008090
   140001ad2:	jmp    0x140001ad7
   140001ad4:	mov    r13d,r12d
   140001ad7:	test   ebx,ebx
   140001ad9:	jns    0x140001b7e
   140001adf:	test   r15d,r15d
   140001ae2:	je     0x140001b24
   140001ae4:	movsxd rbp,DWORD PTR [rsi+0xc]
   140001ae8:	xor    ecx,ecx
   140001aea:	xor    edi,edi
   140001aec:	test   rbp,rbp
   140001aef:	jle    0x140001b1f
   140001af1:	mov    rcx,QWORD PTR [rsi+0x10]
   140001af5:	mov    rcx,QWORD PTR [rcx+rdi*8]
   140001af9:	test   r14d,r14d
   140001afc:	jne    0x140001b05
   140001afe:	call   0x140005554
   140001b03:	jmp    0x140001b0a
   140001b05:	call   0x140005b24
   140001b0a:	mov    ecx,eax
   140001b0c:	test   eax,eax
   140001b0e:	js     0x140001b1a
   140001b10:	inc    rdi
   140001b13:	cmp    rdi,rbp
   140001b16:	jge    0x140001b1f
   140001b18:	jmp    0x140001af1
   140001b1a:	call   0x140008090
   140001b1f:	call   0x140007fa8
   140001b24:	test   r12d,r12d
   140001b27:	je     0x140001b4f
   140001b29:	mov    rcx,QWORD PTR [rsi+0x30]
   140001b2d:	test   rcx,rcx
   140001b30:	je     0x140001b4a
   140001b32:	xor    edx,edx
   140001b34:	test   r14d,r14d
   140001b37:	sete   dl
   140001b3a:	call   0x140005c94
   140001b3f:	mov    ecx,eax
   140001b41:	test   eax,eax
   140001b43:	jns    0x140001b4a
   140001b45:	call   0x140008090
   140001b4a:	call   0x140007fa8
   140001b4f:	test   r13d,r13d
   140001b52:	je     0x140001b7e
   140001b54:	mov    rcx,QWORD PTR [rsi+0x28]
   140001b58:	test   rcx,rcx
   140001b5b:	je     0x140001b79
   140001b5d:	test   r14d,r14d
   140001b60:	jne    0x140001b69
   140001b62:	call   0x140005328
   140001b67:	jmp    0x140001b6e
   140001b69:	call   0x14000545c
   140001b6e:	mov    ecx,eax
   140001b70:	test   eax,eax
   140001b72:	jns    0x140001b79
   140001b74:	call   0x140008090
   140001b79:	call   0x140007fa8
   140001b7e:	mov    ecx,ebx
   140001b80:	call   0x140007fa8
   140001b85:	test   ebx,ebx
   140001b87:	jns    0x140001b90
   140001b89:	mov    ecx,ebx
   140001b8b:	call   0x140008090
   140001b90:	mov    ecx,ebx
   140001b92:	call   0x140007fa8
   140001b97:	test   ebx,ebx
   140001b99:	jns    0x140001ba2
   140001b9b:	mov    ecx,ebx
   140001b9d:	call   0x140008090
   140001ba2:	mov    ecx,ebx
   140001ba4:	call   0x140007fa8
   140001ba9:	mov    rbp,QWORD PTR [rsp+0x58]
   140001bae:	mov    eax,ebx
   140001bb0:	mov    rbx,QWORD PTR [rsp+0x50]
   140001bb5:	mov    rsi,QWORD PTR [rsp+0x60]
   140001bba:	add    rsp,0x20
   140001bbe:	pop    r15
   140001bc0:	pop    r14
   140001bc2:	pop    r13
   140001bc4:	pop    r12
   140001bc6:	pop    rdi
   140001bc7:	ret    
   140001bc8:	int3   
   140001bc9:	int3   
   140001bca:	int3   
   140001bcb:	int3   
   140001bcc:	int3   
   140001bcd:	int3   
   140001bce:	int3   
   140001bcf:	int3   
   140001bd0:	rex push rbx
   140001bd2:	sub    rsp,0x30
   140001bd6:	xor    r9d,r9d
   140001bd9:	xor    r8d,r8d
   140001bdc:	xor    ecx,ecx
   140001bde:	lea    edx,[r9+0x1]
   140001be2:	call   QWORD PTR [rip+0x74c0]        # 0x1400090a8
   140001be8:	call   QWORD PTR [rip+0x74c2]        # 0x1400090b0
   140001bee:	mov    rcx,rax
   140001bf1:	lea    rdx,[rsp+0x20]
   140001bf6:	call   QWORD PTR [rip+0x758c]        # 0x140009188
   140001bfc:	xor    ebx,ebx
   140001bfe:	test   rax,rax
   140001c01:	jne    0x140001c25
   140001c03:	call   QWORD PTR [rip+0x7487]        # 0x140009090
   140001c09:	mov    ecx,eax
   140001c0b:	test   eax,eax
   140001c0d:	jne    0x140001c16
   140001c0f:	mov    eax,0x80004005
   140001c14:	jmp    0x140001c31
   140001c16:	movzx  eax,ax
   140001c19:	or     eax,0x80070000
   140001c1e:	test   ecx,ecx
   140001c20:	cmovle eax,ecx
   140001c23:	jmp    0x140001c31
   140001c25:	mov    ecx,DWORD PTR [rsp+0x20]
   140001c29:	mov    rdx,rax
   140001c2c:	call   0x140003988
   140001c31:	test   eax,eax
   140001c33:	sets   bl
   140001c36:	mov    eax,ebx
   140001c38:	add    rsp,0x30
   140001c3c:	pop    rbx
   140001c3d:	ret    
   140001c3e:	int3   
   140001c3f:	int3   
   140001c40:	int3   
   140001c41:	int3   
   140001c42:	int3   
   140001c43:	int3   
   140001c44:	mov    QWORD PTR [rsp+0x8],rbx
   140001c49:	push   rdi
   140001c4a:	sub    rsp,0x20
   140001c4e:	mov    rcx,QWORD PTR [rip+0xaa5b]        # 0x14000c6b0
   140001c55:	xor    edi,edi
   140001c57:	jmp    0x140001c65
   140001c59:	mov    rax,rcx
   140001c5c:	mov    rcx,QWORD PTR [rcx]
   140001c5f:	mov    QWORD PTR [rax],rdi
   140001c62:	mov    rdi,rax
   140001c65:	test   rcx,rcx
   140001c68:	jne    0x140001c59
   140001c6a:	mov    QWORD PTR [rip+0xaa3f],rdi        # 0x14000c6b0
   140001c71:	test   rdi,rdi
   140001c74:	je     0x140001cc5
   140001c76:	mov    rcx,QWORD PTR [rdi+0x10]
   140001c7a:	call   QWORD PTR [rip+0x7488]        # 0x140009108
   140001c80:	test   rax,rax
   140001c83:	je     0x140001cb2
   140001c85:	mov    rcx,QWORD PTR [rdi+0x8]
   140001c89:	call   QWORD PTR [rip+0x7479]        # 0x140009108
   140001c8f:	test   rax,rax
   140001c92:	je     0x140001c9a
   140001c94:	cmp    DWORD PTR [rdi+0x18],0x0
   140001c98:	je     0x140001cb6
   140001c9a:	mov    rcx,QWORD PTR [rdi+0x10]
   140001c9e:	call   QWORD PTR [rip+0x7464]        # 0x140009108
   140001ca4:	mov    rcx,rax
   140001ca7:	mov    rbx,rax
   140001caa:	call   QWORD PTR [rip+0x7748]        # 0x1400093f8
   140001cb0:	call   rbx
   140001cb2:	and    DWORD PTR [rdi+0x18],0x0
   140001cb6:	mov    rdi,QWORD PTR [rdi]
   140001cb9:	test   rdi,rdi
   140001cbc:	jne    0x140001c76
   140001cbe:	mov    rdi,QWORD PTR [rip+0xa9eb]        # 0x14000c6b0
   140001cc5:	xor    ecx,ecx
   140001cc7:	jmp    0x140001cd5
   140001cc9:	mov    rax,rdi
   140001ccc:	mov    rdi,QWORD PTR [rdi]
   140001ccf:	mov    QWORD PTR [rax],rcx
   140001cd2:	mov    rcx,rax
   140001cd5:	test   rdi,rdi
   140001cd8:	jne    0x140001cc9
   140001cda:	mov    QWORD PTR [rip+0xa9cf],rcx        # 0x14000c6b0
   140001ce1:	xor    ecx,ecx
   140001ce3:	call   0x140007fa8
   140001ce8:	mov    rbx,QWORD PTR [rsp+0x30]
   140001ced:	xor    eax,eax
   140001cef:	add    rsp,0x20
   140001cf3:	pop    rdi
   140001cf4:	ret    
   140001cf5:	int3   
   140001cf6:	int3   
   140001cf7:	int3   
   140001cf8:	int3   
   140001cf9:	int3   
   140001cfa:	int3   
   140001cfb:	int3   
   140001cfc:	mov    QWORD PTR [rsp+0x10],rbx
   140001d01:	mov    QWORD PTR [rsp+0x18],rbp
   140001d06:	mov    QWORD PTR [rsp+0x20],rsi
   140001d0b:	push   rdi
   140001d0c:	push   r14
   140001d0e:	push   r15
   140001d10:	sub    rsp,0x20
   140001d14:	movsxd rbp,DWORD PTR [rcx+0x4]
   140001d18:	mov    r15,rdx
   140001d1b:	mov    rsi,rcx
   140001d1e:	test   ebp,ebp
   140001d20:	jns    0x140001d2e
   140001d22:	mov    edi,0x8000ffff
   140001d27:	mov    ecx,edi
   140001d29:	jmp    0x140001dd0
   140001d2e:	lea    r8,[rsp+0x40]
   140001d33:	mov    ecx,ebp
   140001d35:	call   0x1400074d8
   140001d3a:	mov    edi,eax
   140001d3c:	test   eax,eax
   140001d3e:	jns    0x140001d47
   140001d40:	mov    ecx,eax
   140001d42:	jmp    0x140001dd0
   140001d47:	mov    edi,DWORD PTR [rsi]
   140001d49:	test   edi,edi
   140001d4b:	jns    0x140001d58
   140001d4d:	mov    edi,0x8000ffff
   140001d52:	mov    ebx,edi
   140001d54:	mov    ecx,edi
   140001d56:	jmp    0x140001dbc
   140001d58:	mov    r14d,DWORD PTR [rsp+0x40]
   140001d5d:	cmp    r14d,edi
   140001d60:	jg     0x140001d66
   140001d62:	xor    ebx,ebx
   140001d64:	jmp    0x140001dc1
   140001d66:	mov    DWORD PTR [rsp+0x40],edi
   140001d6a:	jmp    0x140001da5
   140001d6c:	test   edi,edi
   140001d6e:	jne    0x140001d7d
   140001d70:	mov    edi,0x20
   140001d75:	xor    ebx,ebx
   140001d77:	mov    DWORD PTR [rsp+0x40],edi
   140001d7b:	jmp    0x140001d9a
   140001d7d:	lea    r8,[rsp+0x40]
   140001d82:	mov    ecx,edi
   140001d84:	call   0x140007554
   140001d89:	mov    ebx,eax
   140001d8b:	test   eax,eax
   140001d8d:	jns    0x140001d96
   140001d8f:	mov    ecx,eax
   140001d91:	call   0x140008090
   140001d96:	mov    edi,DWORD PTR [rsp+0x40]
   140001d9a:	mov    ecx,ebx
   140001d9c:	call   0x140007fa8
   140001da1:	test   ebx,ebx
   140001da3:	js     0x140001dda
   140001da5:	cmp    edi,r14d
   140001da8:	jl     0x140001d6c
   140001daa:	mov    edx,edi
   140001dac:	mov    rcx,rsi
   140001daf:	call   0x140004bdc
   140001db4:	mov    ebx,eax
   140001db6:	test   eax,eax
   140001db8:	jns    0x140001dc1
   140001dba:	mov    ecx,eax
   140001dbc:	call   0x140008090
   140001dc1:	mov    ecx,ebx
   140001dc3:	call   0x140007fa8
   140001dc8:	mov    edi,ebx
   140001dca:	test   ebx,ebx
   140001dcc:	jns    0x140001dde
   140001dce:	mov    ecx,ebx
   140001dd0:	call   0x140008090
   140001dd5:	jmp    0x140001e5c
   140001dda:	mov    ecx,ebx
   140001ddc:	jmp    0x140001dbc
   140001dde:	mov    r8d,DWORD PTR [rsi+0x4]
   140001de2:	cmp    ebp,r8d
   140001de5:	jge    0x140001e07
   140001de7:	mov    rdx,QWORD PTR [rsi+0x8]
   140001deb:	sub    r8d,ebp
   140001dee:	movsxd r8,r8d
   140001df1:	shl    r8,0x3
   140001df5:	lea    rcx,[rdx+rbp*8]
   140001df9:	add    rcx,0x8
   140001dfd:	lea    rdx,[rdx+rbp*8]
   140001e01:	call   QWORD PTR [rip+0x7549]        # 0x140009350
   140001e07:	mov    rax,QWORD PTR [rsi+0x8]
   140001e0b:	mov    rdi,rbp
   140001e0e:	lea    rcx,[rax+rbp*8]
   140001e12:	xor    eax,eax
   140001e14:	mov    QWORD PTR [rcx],rax
   140001e17:	test   rcx,rcx
   140001e1a:	je     0x140001e1f
   140001e1c:	and    QWORD PTR [rcx],rax
   140001e1f:	mov    r14,QWORD PTR [rsi+0x8]
   140001e23:	mov    rbp,QWORD PTR [r15]
   140001e26:	and    QWORD PTR [r15],rax
   140001e29:	mov    rbx,QWORD PTR [r14+rdi*8]
   140001e2d:	test   rbx,rbx
   140001e30:	je     0x140001e53
   140001e32:	call   QWORD PTR [rip+0x7228]        # 0x140009060
   140001e38:	lea    r8,[rbx-0x4]
   140001e3c:	xor    edx,edx
   140001e3e:	mov    rcx,rax
   140001e41:	call   QWORD PTR [rip+0x7209]        # 0x140009050
   140001e47:	xor    ecx,ecx
   140001e49:	call   0x140007fa8
   140001e4e:	and    QWORD PTR [r14+rdi*8],0x0
   140001e53:	mov    QWORD PTR [r14+rdi*8],rbp
   140001e57:	inc    DWORD PTR [rsi+0x4]
   140001e5a:	xor    edi,edi
   140001e5c:	mov    ecx,edi
   140001e5e:	call   0x140007fa8
   140001e63:	mov    rbx,QWORD PTR [rsp+0x48]
   140001e68:	mov    eax,edi
   140001e6a:	mov    rbp,QWORD PTR [rsp+0x50]
   140001e6f:	mov    rsi,QWORD PTR [rsp+0x58]
   140001e74:	add    rsp,0x20
   140001e78:	pop    r15
   140001e7a:	pop    r14
   140001e7c:	pop    rdi
   140001e7d:	ret    
   140001e7e:	int3   
   140001e7f:	int3   
   140001e80:	int3   
   140001e81:	int3   
   140001e82:	int3   
   140001e83:	int3   
   140001e84:	mov    rax,rsp
   140001e87:	mov    QWORD PTR [rax+0x8],rbx
   140001e8b:	mov    QWORD PTR [rax+0x10],rbp
   140001e8f:	mov    QWORD PTR [rax+0x18],rsi
   140001e93:	mov    QWORD PTR [rax+0x20],rdi
   140001e97:	push   r12
   140001e99:	push   r14
   140001e9b:	push   r15
   140001e9d:	sub    rsp,0x20
   140001ea1:	mov    rbx,QWORD PTR [rcx+0x8]
   140001ea5:	mov    rdi,rdx
   140001ea8:	mov    r14d,DWORD PTR [rcx]
   140001eab:	mov    rsi,rcx
   140001eae:	mov    r15d,DWORD PTR [rcx+0x4]
   140001eb2:	and    QWORD PTR [rcx+0x8],0x0
   140001eb7:	mov    eax,DWORD PTR [rdx]
   140001eb9:	mov    DWORD PTR [rcx],eax
   140001ebb:	mov    eax,DWORD PTR [rdx+0x4]
   140001ebe:	mov    DWORD PTR [rcx+0x4],eax
   140001ec1:	mov    r12,QWORD PTR [rdx+0x8]
   140001ec5:	and    QWORD PTR [rdx+0x8],0x0
   140001eca:	mov    rbp,QWORD PTR [rcx+0x8]
   140001ece:	test   rbp,rbp
   140001ed1:	je     0x140001eec
   140001ed3:	call   QWORD PTR [rip+0x7187]        # 0x140009060
   140001ed9:	mov    r8,rbp
   140001edc:	xor    edx,edx
   140001ede:	mov    rcx,rax
   140001ee1:	call   QWORD PTR [rip+0x7169]        # 0x140009050
   140001ee7:	and    QWORD PTR [rsi+0x8],0x0
   140001eec:	mov    QWORD PTR [rsi+0x8],r12
   140001ef0:	mov    DWORD PTR [rdi],r14d
   140001ef3:	mov    DWORD PTR [rdi+0x4],r15d
   140001ef7:	mov    rsi,QWORD PTR [rdi+0x8]
   140001efb:	test   rsi,rsi
   140001efe:	je     0x140001f19
   140001f00:	call   QWORD PTR [rip+0x715a]        # 0x140009060
   140001f06:	mov    r8,rsi
   140001f09:	xor    edx,edx
   140001f0b:	mov    rcx,rax
   140001f0e:	call   QWORD PTR [rip+0x713c]        # 0x140009050
   140001f14:	and    QWORD PTR [rdi+0x8],0x0
   140001f19:	mov    rbp,QWORD PTR [rsp+0x48]
   140001f1e:	mov    rsi,QWORD PTR [rsp+0x50]
   140001f23:	mov    QWORD PTR [rdi+0x8],rbx
   140001f27:	mov    rbx,QWORD PTR [rsp+0x40]
   140001f2c:	mov    rdi,QWORD PTR [rsp+0x58]
   140001f31:	add    rsp,0x20
   140001f35:	pop    r15
   140001f37:	pop    r14
   140001f39:	pop    r12
   140001f3b:	ret    
   140001f3c:	int3   
   140001f3d:	int3   
   140001f3e:	int3   
   140001f3f:	int3   
   140001f40:	int3   
   140001f41:	int3   
   140001f42:	int3   
   140001f43:	int3   
   140001f44:	mov    QWORD PTR [rsp+0x10],rbx
   140001f49:	mov    QWORD PTR [rsp+0x20],rbp
   140001f4e:	push   rsi
   140001f4f:	push   rdi
   140001f50:	push   r15
   140001f52:	sub    rsp,0x20
   140001f56:	movsxd rbp,DWORD PTR [rcx+0x4]
   140001f5a:	mov    r15,rdx
   140001f5d:	mov    rsi,rcx
   140001f60:	test   ebp,ebp
   140001f62:	jns    0x140001f70
   140001f64:	mov    edi,0x8000ffff
   140001f69:	mov    ecx,edi
   140001f6b:	jmp    0x14000200f
   140001f70:	lea    r8,[rsp+0x50]
   140001f75:	mov    ecx,ebp
   140001f77:	call   0x1400074d8
   140001f7c:	mov    edi,eax
   140001f7e:	test   eax,eax
   140001f80:	jns    0x140001f89
   140001f82:	mov    ecx,eax
   140001f84:	jmp    0x14000200f
   140001f89:	mov    edi,DWORD PTR [rsi]
   140001f8b:	test   edi,edi
   140001f8d:	jns    0x140001f9a
   140001f8f:	mov    edi,0x8000ffff
   140001f94:	mov    ebx,edi
   140001f96:	mov    ecx,edi
   140001f98:	jmp    0x140001ffb
   140001f9a:	cmp    DWORD PTR [rsp+0x50],edi
   140001f9e:	jg     0x140001fa4
   140001fa0:	xor    ebx,ebx
   140001fa2:	jmp    0x140002000
   140001fa4:	mov    DWORD PTR [rsp+0x40],edi
   140001fa8:	jmp    0x140001fe3
   140001faa:	test   edi,edi
   140001fac:	jne    0x140001fbb
   140001fae:	mov    edi,0x20
   140001fb3:	xor    ebx,ebx
   140001fb5:	mov    DWORD PTR [rsp+0x40],edi
   140001fb9:	jmp    0x140001fd8
   140001fbb:	lea    r8,[rsp+0x40]
   140001fc0:	mov    ecx,edi
   140001fc2:	call   0x140007554
   140001fc7:	mov    ebx,eax
   140001fc9:	test   eax,eax
   140001fcb:	jns    0x140001fd4
   140001fcd:	mov    ecx,eax
   140001fcf:	call   0x140008090
   140001fd4:	mov    edi,DWORD PTR [rsp+0x40]
   140001fd8:	mov    ecx,ebx
   140001fda:	call   0x140007fa8
   140001fdf:	test   ebx,ebx
   140001fe1:	js     0x140002016
   140001fe3:	cmp    edi,DWORD PTR [rsp+0x50]
   140001fe7:	jl     0x140001faa
   140001fe9:	mov    edx,edi
   140001feb:	mov    rcx,rsi
   140001fee:	call   0x140004d40
   140001ff3:	mov    ebx,eax
   140001ff5:	test   eax,eax
   140001ff7:	jns    0x140002000
   140001ff9:	mov    ecx,eax
   140001ffb:	call   0x140008090
   140002000:	mov    ecx,ebx
   140002002:	call   0x140007fa8
   140002007:	mov    edi,ebx
   140002009:	test   ebx,ebx
   14000200b:	jns    0x14000201a
   14000200d:	mov    ecx,ebx
   14000200f:	call   0x140008090
   140002014:	jmp    0x14000205a
   140002016:	mov    ecx,ebx
   140002018:	jmp    0x140001ffb
   14000201a:	mov    r8d,DWORD PTR [rsi+0x4]
   14000201e:	cmp    ebp,r8d
   140002021:	jge    0x140002043
   140002023:	mov    rdx,QWORD PTR [rsi+0x8]
   140002027:	sub    r8d,ebp
   14000202a:	movsxd r8,r8d
   14000202d:	shl    r8,0x3
   140002031:	lea    rcx,[rdx+rbp*8]
   140002035:	add    rcx,0x8
   140002039:	lea    rdx,[rdx+rbp*8]
   14000203d:	call   QWORD PTR [rip+0x730d]        # 0x140009350
   140002043:	mov    rax,QWORD PTR [rsi+0x8]
   140002047:	xor    edx,edx
   140002049:	mov    QWORD PTR [rax+rbp*8],rdx
   14000204d:	mov    rax,QWORD PTR [rsi+0x8]
   140002051:	mov    QWORD PTR [rax+rbp*8],r15
   140002055:	inc    DWORD PTR [rsi+0x4]
   140002058:	xor    edi,edi
   14000205a:	mov    ecx,edi
   14000205c:	call   0x140007fa8
   140002061:	mov    rbx,QWORD PTR [rsp+0x48]
   140002066:	mov    eax,edi
   140002068:	mov    rbp,QWORD PTR [rsp+0x58]
   14000206d:	add    rsp,0x20
   140002071:	pop    r15
   140002073:	pop    rdi
   140002074:	pop    rsi
   140002075:	ret    
   140002076:	int3   
   140002077:	int3   
   140002078:	int3   
   140002079:	int3   
   14000207a:	int3   
   14000207b:	int3   
   14000207c:	int3   
   14000207d:	int3   
   14000207e:	int3   
   14000207f:	int3   
   140002080:	mov    QWORD PTR [rsp+0x20],rbx
   140002085:	push   rbp
   140002086:	push   rsi
   140002087:	push   rdi
   140002088:	push   r14
   14000208a:	push   r15
   14000208c:	mov    rbp,rsp
   14000208f:	sub    rsp,0x70
   140002093:	mov    rax,QWORD PTR [rip+0x9f6e]        # 0x14000c008
   14000209a:	xor    rax,rsp
   14000209d:	mov    QWORD PTR [rbp-0x10],rax
   1400020a1:	and    QWORD PTR [rbp-0x40],0x0
   1400020a6:	mov    r15,rdx
   1400020a9:	and    QWORD PTR [rbp-0x38],0x0
   1400020ae:	mov    r14,rcx
   1400020b1:	test   rdx,rdx
   1400020b4:	jne    0x1400020c2
   1400020b6:	mov    ecx,0x80070057
   1400020bb:	mov    edi,ecx
   1400020bd:	jmp    0x14000219b
   1400020c2:	cmp    r8d,0x2
   1400020c6:	jne    0x1400020b6
   1400020c8:	lea    r9,[rbp-0x30]
   1400020cc:	mov    edx,0x31
   1400020d1:	lea    r8,[rbp-0x28]
   1400020d5:	lea    rcx,[rip+0x7524]        # 0x140009600
   1400020dc:	call   QWORD PTR [rip+0x7206]        # 0x1400092e8
   1400020e2:	test   eax,eax
   1400020e4:	jns    0x1400020fb
   1400020e6:	xor    r9d,r9d
   1400020e9:	xor    r8d,r8d
   1400020ec:	mov    ecx,0xc000000d
   1400020f1:	lea    edx,[r9+0x1]
   1400020f5:	call   QWORD PTR [rip+0x6fc5]        # 0x1400090c0
   1400020fb:	mov    rdi,QWORD PTR [rbp-0x40]
   1400020ff:	mov    rsi,QWORD PTR [rbp-0x30]
   140002103:	test   rdi,rdi
   140002106:	je     0x140002122
   140002108:	and    QWORD PTR [rbp-0x40],0x0
   14000210d:	mov    rax,QWORD PTR [rdi]
   140002110:	mov    rbx,QWORD PTR [rax+0x10]
   140002114:	mov    rcx,rbx
   140002117:	call   QWORD PTR [rip+0x72db]        # 0x1400093f8
   14000211d:	mov    rcx,rdi
   140002120:	call   rbx
   140002122:	lea    r8,[rbp-0x40]
   140002126:	mov    rcx,rsi
   140002129:	lea    rdx,[rip+0x75d0]        # 0x140009700
   140002130:	call   QWORD PTR [rip+0x719a]        # 0x1400092d0
   140002136:	mov    edi,eax
   140002138:	test   eax,eax
   14000213a:	js     0x140002199
   14000213c:	mov    rdi,QWORD PTR [rbp-0x38]
   140002140:	test   rdi,rdi
   140002143:	je     0x14000215f
   140002145:	and    QWORD PTR [rbp-0x38],0x0
   14000214a:	mov    rax,QWORD PTR [rdi]
   14000214d:	mov    rbx,QWORD PTR [rax+0x10]
   140002151:	mov    rcx,rbx
   140002154:	call   QWORD PTR [rip+0x729e]        # 0x1400093f8
   14000215a:	mov    rcx,rdi
   14000215d:	call   rbx
   14000215f:	mov    rdx,QWORD PTR [rbp-0x40]
   140002163:	lea    rax,[rbp-0x38]
   140002167:	mov    r9d,0x2
   14000216d:	mov    QWORD PTR [rsp+0x20],rax
   140002172:	mov    r8,r15
   140002175:	mov    rcx,r14
   140002178:	call   0x140002220
   14000217d:	mov    edi,eax
   14000217f:	test   eax,eax
   140002181:	js     0x140002199
   140002183:	mov    r8,QWORD PTR [rbp-0x38]
   140002187:	mov    rcx,r14
   14000218a:	mov    rdx,QWORD PTR [rbp-0x40]
   14000218e:	call   0x140002bb0
   140002193:	mov    edi,eax
   140002195:	test   eax,eax
   140002197:	jns    0x1400021a0
   140002199:	mov    ecx,eax
   14000219b:	call   0x140008090
   1400021a0:	mov    ecx,edi
   1400021a2:	call   0x140007fa8
   1400021a7:	mov    rsi,QWORD PTR [rbp-0x38]
   1400021ab:	test   rsi,rsi
   1400021ae:	je     0x1400021ca
   1400021b0:	and    QWORD PTR [rbp-0x38],0x0
   1400021b5:	mov    rax,QWORD PTR [rsi]
   1400021b8:	mov    rbx,QWORD PTR [rax+0x10]
   1400021bc:	mov    rcx,rbx
   1400021bf:	call   QWORD PTR [rip+0x7233]        # 0x1400093f8
   1400021c5:	mov    rcx,rsi
   1400021c8:	call   rbx
   1400021ca:	mov    rsi,QWORD PTR [rbp-0x40]
   1400021ce:	test   rsi,rsi
   1400021d1:	je     0x1400021ed
   1400021d3:	and    QWORD PTR [rbp-0x40],0x0
   1400021d8:	mov    rax,QWORD PTR [rsi]
   1400021db:	mov    rbx,QWORD PTR [rax+0x10]
   1400021df:	mov    rcx,rbx
   1400021e2:	call   QWORD PTR [rip+0x7210]        # 0x1400093f8
   1400021e8:	mov    rcx,rsi
   1400021eb:	call   rbx
   1400021ed:	mov    eax,edi
   1400021ef:	mov    rcx,QWORD PTR [rbp-0x10]
   1400021f3:	xor    rcx,rsp
   1400021f6:	call   0x1400085f0
   1400021fb:	mov    rbx,QWORD PTR [rsp+0xb8]
   140002203:	add    rsp,0x70
   140002207:	pop    r15
   140002209:	pop    r14
   14000220b:	pop    rdi
   14000220c:	pop    rsi
   14000220d:	pop    rbp
   14000220e:	ret    
   14000220f:	int3   
   140002210:	int3   
   140002211:	int3   
   140002212:	int3   
   140002213:	int3   
   140002214:	int3   
   140002215:	int3   
   140002216:	int3   
   140002217:	int3   
   140002218:	int3   
   140002219:	int3   
   14000221a:	int3   
   14000221b:	int3   
   14000221c:	int3   
   14000221d:	int3   
   14000221e:	int3   
   14000221f:	int3   
   140002220:	mov    rax,rsp
   140002223:	mov    QWORD PTR [rax+0x10],rbx
   140002227:	mov    QWORD PTR [rax+0x18],rbp
   14000222b:	mov    QWORD PTR [rax+0x20],rsi
   14000222f:	mov    QWORD PTR [rax+0x8],rcx
   140002233:	push   rdi
   140002234:	push   r12
   140002236:	push   r13
   140002238:	push   r14
   14000223a:	push   r15
   14000223c:	sub    rsp,0x40
   140002240:	mov    r14,rdx
   140002243:	mov    r12d,r9d
   140002246:	xor    ebx,ebx
   140002248:	lea    rdx,[rax-0x38]
   14000224c:	and    QWORD PTR [rax-0x38],rbx
   140002250:	mov    r13,r8
   140002253:	call   0x140003f58
   140002258:	mov    rbp,QWORD PTR [rsp+0x30]
   14000225d:	mov    esi,eax
   14000225f:	test   eax,eax
   140002261:	js     0x1400023c5
   140002267:	mov    rcx,rbp
   14000226a:	call   QWORD PTR [rip+0x6e80]        # 0x1400090f0
   140002270:	cmp    eax,0xffffffff
   140002273:	je     0x140002282
   140002275:	not    al
   140002277:	movzx  edi,al
   14000227a:	shr    edi,0x4
   14000227d:	and    edi,0x1
   140002280:	jmp    0x140002284
   140002282:	xor    edi,edi
   140002284:	xor    ecx,ecx
   140002286:	call   0x140007fa8
   14000228b:	xor    ecx,ecx
   14000228d:	call   0x140007fa8
   140002292:	mov    rax,QWORD PTR [r14]
   140002295:	test   edi,edi
   140002297:	mov    rdi,QWORD PTR [rax+0x40]
   14000229b:	mov    rcx,rdi
   14000229e:	je     0x1400022e6
   1400022a0:	call   QWORD PTR [rip+0x7152]        # 0x1400093f8
   1400022a6:	mov    r15,QWORD PTR [rsp+0x90]
   1400022ae:	mov    edx,0x2
   1400022b3:	mov    r8,r15
   1400022b6:	mov    rcx,r14
   1400022b9:	call   rdi
   1400022bb:	xor    r14d,r14d
   1400022be:	mov    esi,eax
   1400022c0:	test   eax,eax
   1400022c2:	js     0x1400023c5
   1400022c8:	mov    rdi,QWORD PTR [rsp+0x70]
   1400022cd:	mov    rdx,rbp
   1400022d0:	mov    r8,QWORD PTR [r15]
   1400022d3:	mov    rcx,rdi
   1400022d6:	call   0x140002440
   1400022db:	mov    esi,eax
   1400022dd:	test   eax,eax
   1400022df:	jns    0x140002313
   1400022e1:	jmp    0x1400023c5
   1400022e6:	call   QWORD PTR [rip+0x710c]        # 0x1400093f8
   1400022ec:	mov    r15,QWORD PTR [rsp+0x90]
   1400022f4:	mov    edx,0x6
   1400022f9:	mov    r8,r15
   1400022fc:	mov    rcx,r14
   1400022ff:	call   rdi
   140002301:	xor    r14d,r14d
   140002304:	mov    esi,eax
   140002306:	test   eax,eax
   140002308:	js     0x1400023c5
   14000230e:	mov    rdi,QWORD PTR [rsp+0x70]
   140002313:	mov    eax,0x4
   140002318:	mul    r12
   14000231b:	mov    rbx,rax
   14000231e:	mov    rax,0xffffffffffffffff
   140002325:	cmovo  rbx,rax
   140002329:	call   QWORD PTR [rip+0x6d31]        # 0x140009060
   14000232f:	mov    r8,rbx
   140002332:	xor    edx,edx
   140002334:	mov    rcx,rax
   140002337:	call   QWORD PTR [rip+0x6d0b]        # 0x140009048
   14000233d:	mov    rbx,rax
   140002340:	test   rax,rax
   140002343:	jne    0x140002351
   140002345:	mov    rbx,r14
   140002348:	mov    esi,0x8007000e
   14000234d:	mov    ecx,esi
   14000234f:	jmp    0x1400023c7
   140002351:	mov    r8d,r14d
   140002354:	test   r12d,r12d
   140002357:	je     0x1400023a6
   140002359:	mov    rdx,rax
   14000235c:	mov    r9,r13
   14000235f:	mov    r10d,0x7fffffff
   140002365:	mov    rax,QWORD PTR [r9]
   140002368:	test   rax,rax
   14000236b:	je     0x140002393
   14000236d:	mov    rcx,r10
   140002370:	cmp    WORD PTR [rax],r14w
   140002374:	je     0x140002380
   140002376:	add    rax,0x2
   14000237a:	sub    rcx,0x1
   14000237e:	jne    0x140002370
   140002380:	test   rcx,rcx
   140002383:	je     0x14000242d
   140002389:	mov    rax,r10
   14000238c:	sub    rax,rcx
   14000238f:	mov    DWORD PTR [rdx],eax
   140002391:	jmp    0x140002396
   140002393:	mov    DWORD PTR [rdx],r14d
   140002396:	inc    r8d
   140002399:	add    r9,0x8
   14000239d:	add    rdx,0x4
   1400023a1:	cmp    r8d,r12d
   1400023a4:	jb     0x140002365
   1400023a6:	mov    rax,QWORD PTR [r15]
   1400023a9:	mov    r9,rbx
   1400023ac:	mov    r8d,r12d
   1400023af:	mov    QWORD PTR [rsp+0x20],rax
   1400023b4:	mov    rdx,r13
   1400023b7:	mov    rcx,rdi
   1400023ba:	call   0x140002810
   1400023bf:	mov    esi,eax
   1400023c1:	test   eax,eax
   1400023c3:	jns    0x1400023cc
   1400023c5:	mov    ecx,eax
   1400023c7:	call   0x140008090
   1400023cc:	mov    ecx,esi
   1400023ce:	call   0x140007fa8
   1400023d3:	test   rbp,rbp
   1400023d6:	je     0x1400023f4
   1400023d8:	call   QWORD PTR [rip+0x6c82]        # 0x140009060
   1400023de:	lea    r8,[rbp-0x4]
   1400023e2:	xor    edx,edx
   1400023e4:	mov    rcx,rax
   1400023e7:	call   QWORD PTR [rip+0x6c63]        # 0x140009050
   1400023ed:	xor    ecx,ecx
   1400023ef:	call   0x140007fa8
   1400023f4:	test   rbx,rbx
   1400023f7:	je     0x14000240d
   1400023f9:	call   QWORD PTR [rip+0x6c61]        # 0x140009060
   1400023ff:	mov    r8,rbx
   140002402:	xor    edx,edx
   140002404:	mov    rcx,rax
   140002407:	call   QWORD PTR [rip+0x6c43]        # 0x140009050
   14000240d:	lea    r11,[rsp+0x40]
   140002412:	mov    eax,esi
   140002414:	mov    rbx,QWORD PTR [r11+0x38]
   140002418:	mov    rbp,QWORD PTR [r11+0x40]
   14000241c:	mov    rsi,QWORD PTR [r11+0x48]
   140002420:	mov    rsp,r11
   140002423:	pop    r15
   140002425:	pop    r14
   140002427:	pop    r13
   140002429:	pop    r12
   14000242b:	pop    rdi
   14000242c:	ret    
   14000242d:	mov    esi,0x80070057
   140002432:	jmp    0x14000234d
   140002437:	int3   
   140002438:	int3   
   140002439:	int3   
   14000243a:	int3   
   14000243b:	int3   
   14000243c:	int3   
   14000243d:	int3   
   14000243e:	int3   
   14000243f:	int3   
   140002440:	mov    QWORD PTR [rsp+0x10],rbx
   140002445:	mov    QWORD PTR [rsp+0x20],rsi
   14000244a:	push   rbp
   14000244b:	push   rdi
   14000244c:	push   r12
   14000244e:	push   r14
   140002450:	push   r15
   140002452:	lea    rbp,[rsp-0x180]
   14000245a:	sub    rsp,0x280
   140002461:	mov    rax,QWORD PTR [rip+0x9ba0]        # 0x14000c008
   140002468:	xor    rax,rsp
   14000246b:	mov    QWORD PTR [rbp+0x170],rax
   140002472:	movups xmm0,XMMWORD PTR [rip+0x753f]        # 0x1400099b8
   140002479:	movzx  eax,WORD PTR [rip+0x7548]        # 0x1400099c8
   140002480:	mov    r14,r8
   140002483:	mov    rbx,rdx
   140002486:	mov    WORD PTR [rsp+0x70],ax
   14000248b:	mov    r15,rcx
   14000248e:	movaps XMMWORD PTR [rsp+0x60],xmm0
   140002493:	xor    edx,edx
   140002495:	lea    rcx,[rsp+0x72]
   14000249a:	mov    r8d,0x1f6
   1400024a0:	call   0x140008c8e
   1400024a5:	xor    r12d,r12d
   1400024a8:	lea    rcx,[rsp+0x60]
   1400024ad:	mov    edx,0x104
   1400024b2:	mov    QWORD PTR [rsp+0x38],r12
   1400024b7:	mov    QWORD PTR [rsp+0x20],r12
   1400024bc:	mov    eax,edx
   1400024be:	mov    QWORD PTR [rsp+0x28],r12
   1400024c3:	mov    QWORD PTR [rsp+0x30],r12
   1400024c8:	cmp    WORD PTR [rcx],r12w
   1400024cc:	je     0x1400024d8
   1400024ce:	add    rcx,0x2
   1400024d2:	sub    rax,0x1
   1400024d6:	jne    0x1400024c8
   1400024d8:	test   rax,rax
   1400024db:	je     0x140002736
   1400024e1:	mov    r8,rdx
   1400024e4:	mov    ecx,r12d
   1400024e7:	sub    r8,rax
   1400024ea:	lea    rax,[rsp+0x60]
   1400024ef:	lea    rax,[rax+r8*2]
   1400024f3:	sub    rdx,r8
   1400024f6:	je     0x14000252b
   1400024f8:	lea    r9,[r8+0x7ffffefa]
   1400024ff:	add    r9,rdx
   140002502:	sub    rbx,rax
   140002505:	test   r9,r9
   140002508:	je     0x140002526
   14000250a:	movzx  r8d,WORD PTR [rbx+rax*1]
   14000250f:	test   r8w,r8w
   140002513:	je     0x140002526
   140002515:	mov    WORD PTR [rax],r8w
   140002519:	dec    r9
   14000251c:	add    rax,0x2
   140002520:	sub    rdx,0x1
   140002524:	jne    0x140002505
   140002526:	test   rdx,rdx
   140002529:	jne    0x140002534
   14000252b:	sub    rax,0x2
   14000252f:	mov    ecx,0x8007007a
   140002534:	mov    WORD PTR [rax],r12w
   140002538:	mov    edi,ecx
   14000253a:	test   ecx,ecx
   14000253c:	js     0x14000273d
   140002542:	lea    r9,[rsp+0x40]
   140002547:	mov    edx,0x5
   14000254c:	lea    r8,[rsp+0x48]
   140002551:	lea    rcx,[rip+0x7478]        # 0x1400099d0
   140002558:	call   QWORD PTR [rip+0x6d8a]        # 0x1400092e8
   14000255e:	test   eax,eax
   140002560:	jns    0x140002577
   140002562:	xor    r9d,r9d
   140002565:	xor    r8d,r8d
   140002568:	mov    ecx,0xc000000d
   14000256d:	lea    edx,[r9+0x1]
   140002571:	call   QWORD PTR [rip+0x6b49]        # 0x1400090c0
   140002577:	mov    rax,QWORD PTR [r14]
   14000257a:	mov    rbx,QWORD PTR [rax+0x80]
   140002581:	mov    rcx,rbx
   140002584:	call   QWORD PTR [rip+0x6e6e]        # 0x1400093f8
   14000258a:	mov    rdx,QWORD PTR [rsp+0x40]
   14000258f:	lea    r8,[rsp+0x38]
   140002594:	mov    rcx,r14
   140002597:	call   rbx
   140002599:	mov    edi,eax
   14000259b:	test   eax,eax
   14000259d:	jns    0x1400025a6
   14000259f:	mov    ecx,eax
   1400025a1:	jmp    0x14000273d
   1400025a6:	mov    rdi,QWORD PTR [rsp+0x20]
   1400025ab:	mov    rsi,QWORD PTR [rsp+0x38]
   1400025b0:	test   rdi,rdi
   1400025b3:	je     0x1400025cf
   1400025b5:	mov    QWORD PTR [rsp+0x20],r12
   1400025ba:	mov    rax,QWORD PTR [rdi]
   1400025bd:	mov    rbx,QWORD PTR [rax+0x10]
   1400025c1:	mov    rcx,rbx
   1400025c4:	call   QWORD PTR [rip+0x6e2e]        # 0x1400093f8
   1400025ca:	mov    rcx,rdi
   1400025cd:	call   rbx
   1400025cf:	mov    rax,QWORD PTR [rsi]
   1400025d2:	mov    rbx,QWORD PTR [rax+0x38]
   1400025d6:	mov    rcx,rbx
   1400025d9:	call   QWORD PTR [rip+0x6e19]        # 0x1400093f8
   1400025df:	lea    r8,[rsp+0x20]
   1400025e4:	xor    edx,edx
   1400025e6:	mov    rcx,rsi
   1400025e9:	call   rbx
   1400025eb:	mov    edi,eax
   1400025ed:	test   eax,eax
   1400025ef:	js     0x14000259f
   1400025f1:	mov    rdi,QWORD PTR [rsp+0x28]
   1400025f6:	mov    rsi,QWORD PTR [rsp+0x20]
   1400025fb:	test   rdi,rdi
   1400025fe:	je     0x14000261a
   140002600:	mov    QWORD PTR [rsp+0x28],r12
   140002605:	mov    rax,QWORD PTR [rdi]
   140002608:	mov    rbx,QWORD PTR [rax+0x10]
   14000260c:	mov    rcx,rbx
   14000260f:	call   QWORD PTR [rip+0x6de3]        # 0x1400093f8
   140002615:	mov    rcx,rdi
   140002618:	call   rbx
   14000261a:	mov    rax,QWORD PTR [rsi]
   14000261d:	mov    rbx,QWORD PTR [rax+0x80]
   140002624:	mov    rcx,rbx
   140002627:	call   QWORD PTR [rip+0x6dcb]        # 0x1400093f8
   14000262d:	lea    rdx,[rsp+0x28]
   140002632:	mov    rcx,rsi
   140002635:	call   rbx
   140002637:	mov    edi,eax
   140002639:	test   eax,eax
   14000263b:	js     0x14000259f
   140002641:	mov    rdi,QWORD PTR [rsp+0x30]
   140002646:	mov    rsi,QWORD PTR [rsp+0x28]
   14000264b:	test   rdi,rdi
   14000264e:	je     0x14000266a
   140002650:	mov    QWORD PTR [rsp+0x30],r12
   140002655:	mov    rax,QWORD PTR [rdi]
   140002658:	mov    rbx,QWORD PTR [rax+0x10]
   14000265c:	mov    rcx,rbx
   14000265f:	call   QWORD PTR [rip+0x6d93]        # 0x1400093f8
   140002665:	mov    rcx,rdi
   140002668:	call   rbx
   14000266a:	lea    r9,[rsp+0x40]
   14000266f:	mov    edx,0x3
   140002674:	lea    r8,[rsp+0x48]
   140002679:	lea    rcx,[rip+0x7360]        # 0x1400099e0
   140002680:	call   QWORD PTR [rip+0x6c62]        # 0x1400092e8
   140002686:	test   eax,eax
   140002688:	jns    0x14000269f
   14000268a:	xor    r9d,r9d
   14000268d:	xor    r8d,r8d
   140002690:	mov    ecx,0xc000000d
   140002695:	lea    edx,[r9+0x1]
   140002699:	call   QWORD PTR [rip+0x6a21]        # 0x1400090c0
   14000269f:	mov    rax,QWORD PTR [rsi]
   1400026a2:	mov    rbx,QWORD PTR [rax+0x40]
   1400026a6:	mov    rcx,rbx
   1400026a9:	call   QWORD PTR [rip+0x6d49]        # 0x1400093f8
   1400026af:	mov    rdx,QWORD PTR [rsp+0x40]
   1400026b4:	lea    r8,[rsp+0x30]
   1400026b9:	mov    rcx,rsi
   1400026bc:	call   rbx
   1400026be:	mov    edi,eax
   1400026c0:	test   eax,eax
   1400026c2:	js     0x14000259f
   1400026c8:	mov    rdi,QWORD PTR [rsp+0x30]
   1400026cd:	lea    rax,[rsp+0x60]
   1400026d2:	or     rbx,0xffffffffffffffff
   1400026d6:	inc    rbx
   1400026d9:	cmp    WORD PTR [rax+rbx*2],r12w
   1400026de:	jne    0x1400026d6
   1400026e0:	mov    eax,0xffffffff
   1400026e5:	cmp    rbx,rax
   1400026e8:	jbe    0x140002701
   1400026ea:	xor    r9d,r9d
   1400026ed:	xor    r8d,r8d
   1400026f0:	mov    ecx,0xc000000d
   1400026f5:	mov    ebx,eax
   1400026f7:	lea    edx,[r9+0x1]
   1400026fb:	call   QWORD PTR [rip+0x69bf]        # 0x1400090c0
   140002701:	lea    r9,[rsp+0x40]
   140002706:	mov    edx,ebx
   140002708:	lea    r8,[rsp+0x48]
   14000270d:	lea    rcx,[rsp+0x60]
   140002712:	call   QWORD PTR [rip+0x6bd0]        # 0x1400092e8
   140002718:	mov    rdx,QWORD PTR [rsp+0x40]
   14000271d:	mov    r9,r14
   140002720:	mov    r8,rdi
   140002723:	mov    rcx,r15
   140002726:	call   0x140002a30
   14000272b:	mov    edi,eax
   14000272d:	test   eax,eax
   14000272f:	jns    0x140002742
   140002731:	jmp    0x14000259f
   140002736:	mov    ecx,0x80070057
   14000273b:	mov    edi,ecx
   14000273d:	call   0x140008090
   140002742:	mov    ecx,edi
   140002744:	call   0x140007fa8
   140002749:	mov    rsi,QWORD PTR [rsp+0x30]
   14000274e:	test   rsi,rsi
   140002751:	je     0x14000276d
   140002753:	mov    QWORD PTR [rsp+0x30],r12
   140002758:	mov    rax,QWORD PTR [rsi]
   14000275b:	mov    rbx,QWORD PTR [rax+0x10]
   14000275f:	mov    rcx,rbx
   140002762:	call   QWORD PTR [rip+0x6c90]        # 0x1400093f8
   140002768:	mov    rcx,rsi
   14000276b:	call   rbx
   14000276d:	mov    rsi,QWORD PTR [rsp+0x28]
   140002772:	test   rsi,rsi
   140002775:	je     0x140002791
   140002777:	mov    QWORD PTR [rsp+0x28],r12
   14000277c:	mov    rax,QWORD PTR [rsi]
   14000277f:	mov    rbx,QWORD PTR [rax+0x10]
   140002783:	mov    rcx,rbx
   140002786:	call   QWORD PTR [rip+0x6c6c]        # 0x1400093f8
   14000278c:	mov    rcx,rsi
   14000278f:	call   rbx
   140002791:	mov    rsi,QWORD PTR [rsp+0x20]
   140002796:	test   rsi,rsi
   140002799:	je     0x1400027b5
   14000279b:	mov    QWORD PTR [rsp+0x20],r12
   1400027a0:	mov    rax,QWORD PTR [rsi]
   1400027a3:	mov    rbx,QWORD PTR [rax+0x10]
   1400027a7:	mov    rcx,rbx
   1400027aa:	call   QWORD PTR [rip+0x6c48]        # 0x1400093f8
   1400027b0:	mov    rcx,rsi
   1400027b3:	call   rbx
   1400027b5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400027ba:	test   rsi,rsi
   1400027bd:	je     0x1400027d9
   1400027bf:	mov    QWORD PTR [rsp+0x38],r12
   1400027c4:	mov    rax,QWORD PTR [rsi]
   1400027c7:	mov    rbx,QWORD PTR [rax+0x10]
   1400027cb:	mov    rcx,rbx
   1400027ce:	call   QWORD PTR [rip+0x6c24]        # 0x1400093f8
   1400027d4:	mov    rcx,rsi
   1400027d7:	call   rbx
   1400027d9:	mov    eax,edi
   1400027db:	mov    rcx,QWORD PTR [rbp+0x170]
   1400027e2:	xor    rcx,rsp
   1400027e5:	call   0x1400085f0
   1400027ea:	lea    r11,[rsp+0x280]
   1400027f2:	mov    rbx,QWORD PTR [r11+0x38]
   1400027f6:	mov    rsi,QWORD PTR [r11+0x48]
   1400027fa:	mov    rsp,r11
   1400027fd:	pop    r15
   1400027ff:	pop    r14
   140002801:	pop    r12
   140002803:	pop    rdi
   140002804:	pop    rbp
   140002805:	ret    
   140002806:	int3   
   140002807:	int3   
   140002808:	int3   
   140002809:	int3   
   14000280a:	int3   
   14000280b:	int3   
   14000280c:	int3   
   14000280d:	int3   
   14000280e:	int3   
   14000280f:	int3   
   140002810:	mov    QWORD PTR [rsp+0x18],rbx
   140002815:	push   rbp
   140002816:	push   rsi
   140002817:	push   rdi
   140002818:	push   r12
   14000281a:	push   r13
   14000281c:	push   r14
   14000281e:	push   r15
   140002820:	mov    rbp,rsp
   140002823:	sub    rsp,0x70
   140002827:	mov    rax,QWORD PTR [rip+0x97da]        # 0x14000c008
   14000282e:	xor    rax,rsp
   140002831:	mov    QWORD PTR [rbp-0x8],rax
   140002835:	mov    r14,QWORD PTR [rbp+0x60]
   140002839:	mov    r13,r9
   14000283c:	and    DWORD PTR [rbp-0x40],0x0
   140002840:	lea    r9,[rbp-0x28]
   140002844:	and    QWORD PTR [rbp-0x48],0x0
   140002849:	mov    r15d,r8d
   14000284c:	mov    r12,rdx
   14000284f:	mov    QWORD PTR [rbp-0x38],rcx
   140002853:	lea    r8,[rbp-0x20]
   140002857:	mov    QWORD PTR [rbp-0x30],r14
   14000285b:	mov    edx,0x4
   140002860:	lea    rcx,[rip+0x7181]        # 0x1400099e8
   140002867:	call   QWORD PTR [rip+0x6a7b]        # 0x1400092e8
   14000286d:	test   eax,eax
   14000286f:	jns    0x140002886
   140002871:	xor    r9d,r9d
   140002874:	xor    r8d,r8d
   140002877:	mov    ecx,0xc000000d
   14000287c:	lea    edx,[r9+0x1]
   140002880:	call   QWORD PTR [rip+0x683a]        # 0x1400090c0
   140002886:	mov    rax,QWORD PTR [r14]
   140002889:	mov    rbx,QWORD PTR [rax+0x80]
   140002890:	mov    rcx,rbx
   140002893:	call   QWORD PTR [rip+0x6b5f]        # 0x1400093f8
   140002899:	mov    rdx,QWORD PTR [rbp-0x28]
   14000289d:	lea    r8,[rbp-0x48]
   1400028a1:	mov    rcx,r14
   1400028a4:	call   rbx
   1400028a6:	mov    edi,eax
   1400028a8:	test   eax,eax
   1400028aa:	jns    0x1400028b8
   1400028ac:	mov    ecx,eax
   1400028ae:	call   0x140008090
   1400028b3:	jmp    0x1400029d5
   1400028b8:	mov    rbx,QWORD PTR [rbp-0x48]
   1400028bc:	mov    rax,QWORD PTR [rbx]
   1400028bf:	mov    rdi,QWORD PTR [rax+0x30]
   1400028c3:	mov    rcx,rdi
   1400028c6:	call   QWORD PTR [rip+0x6b2c]        # 0x1400093f8
   1400028cc:	lea    rdx,[rbp-0x40]
   1400028d0:	mov    rcx,rbx
   1400028d3:	call   rdi
   1400028d5:	mov    edi,eax
   1400028d7:	test   eax,eax
   1400028d9:	js     0x1400028ac
   1400028db:	cmp    r15d,DWORD PTR [rbp-0x40]
   1400028df:	jbe    0x1400028ea
   1400028e1:	mov    edi,0x80070057
   1400028e6:	mov    ecx,edi
   1400028e8:	jmp    0x1400028ae
   1400028ea:	xor    esi,esi
   1400028ec:	test   r15d,r15d
   1400028ef:	je     0x1400029d5
   1400028f5:	mov    rbx,QWORD PTR [rbp-0x48]
   1400028f9:	and    QWORD PTR [rbp-0x50],0x0
   1400028fe:	mov    rax,QWORD PTR [rbx]
   140002901:	mov    rdi,QWORD PTR [rax+0x38]
   140002905:	mov    rcx,rdi
   140002908:	call   QWORD PTR [rip+0x6aea]        # 0x1400093f8
   14000290e:	lea    r8,[rbp-0x50]
   140002912:	mov    edx,esi
   140002914:	mov    rcx,rbx
   140002917:	call   rdi
   140002919:	mov    edi,eax
   14000291b:	test   eax,eax
   14000291d:	js     0x1400029ab
   140002923:	mov    edx,DWORD PTR [r13+0x0]
   140002927:	lea    r9,[rbp-0x28]
   14000292b:	mov    rcx,QWORD PTR [r12]
   14000292f:	lea    r8,[rbp-0x20]
   140002933:	mov    rbx,QWORD PTR [rbp-0x50]
   140002937:	call   QWORD PTR [rip+0x69ab]        # 0x1400092e8
   14000293d:	test   eax,eax
   14000293f:	jns    0x140002956
   140002941:	xor    r9d,r9d
   140002944:	xor    r8d,r8d
   140002947:	mov    ecx,0xc000000d
   14000294c:	lea    edx,[r9+0x1]
   140002950:	call   QWORD PTR [rip+0x676a]        # 0x1400090c0
   140002956:	mov    rdx,QWORD PTR [rbp-0x28]
   14000295a:	mov    r9,r14
   14000295d:	mov    rcx,QWORD PTR [rbp-0x38]
   140002961:	mov    r8,rbx
   140002964:	call   0x140002a30
   140002969:	mov    edi,eax
   14000296b:	test   eax,eax
   14000296d:	js     0x1400029ab
   14000296f:	mov    r14,QWORD PTR [rbp-0x50]
   140002973:	test   r14,r14
   140002976:	je     0x140002992
   140002978:	and    QWORD PTR [rbp-0x50],0x0
   14000297d:	mov    rax,QWORD PTR [r14]
   140002980:	mov    rbx,QWORD PTR [rax+0x10]
   140002984:	mov    rcx,rbx
   140002987:	call   QWORD PTR [rip+0x6a6b]        # 0x1400093f8
   14000298d:	mov    rcx,r14
   140002990:	call   rbx
   140002992:	mov    r14,QWORD PTR [rbp-0x30]
   140002996:	inc    esi
   140002998:	add    r13,0x4
   14000299c:	add    r12,0x8
   1400029a0:	cmp    esi,r15d
   1400029a3:	jb     0x1400028f5
   1400029a9:	jmp    0x1400029d5
   1400029ab:	mov    ecx,eax
   1400029ad:	call   0x140008090
   1400029b2:	mov    rsi,QWORD PTR [rbp-0x50]
   1400029b6:	test   rsi,rsi
   1400029b9:	je     0x1400029d5
   1400029bb:	and    QWORD PTR [rbp-0x50],0x0
   1400029c0:	mov    rax,QWORD PTR [rsi]
   1400029c3:	mov    rbx,QWORD PTR [rax+0x10]
   1400029c7:	mov    rcx,rbx
   1400029ca:	call   QWORD PTR [rip+0x6a28]        # 0x1400093f8
   1400029d0:	mov    rcx,rsi
   1400029d3:	call   rbx
   1400029d5:	mov    ecx,edi
   1400029d7:	call   0x140007fa8
   1400029dc:	mov    rsi,QWORD PTR [rbp-0x48]
   1400029e0:	test   rsi,rsi
   1400029e3:	je     0x1400029ff
   1400029e5:	and    QWORD PTR [rbp-0x48],0x0
   1400029ea:	mov    rax,QWORD PTR [rsi]
   1400029ed:	mov    rbx,QWORD PTR [rax+0x10]
   1400029f1:	mov    rcx,rbx
   1400029f4:	call   QWORD PTR [rip+0x69fe]        # 0x1400093f8
   1400029fa:	mov    rcx,rsi
   1400029fd:	call   rbx
   1400029ff:	mov    eax,edi
   140002a01:	mov    rcx,QWORD PTR [rbp-0x8]
   140002a05:	xor    rcx,rsp
   140002a08:	call   0x1400085f0
   140002a0d:	mov    rbx,QWORD PTR [rsp+0xc0]
   140002a15:	add    rsp,0x70
   140002a19:	pop    r15
   140002a1b:	pop    r14
   140002a1d:	pop    r13
   140002a1f:	pop    r12
   140002a21:	pop    rdi
   140002a22:	pop    rsi
   140002a23:	pop    rbp
   140002a24:	ret    
   140002a25:	int3   
   140002a26:	int3   
   140002a27:	int3   
   140002a28:	int3   
   140002a29:	int3   
   140002a2a:	int3   
   140002a2b:	int3   
   140002a2c:	int3   
   140002a2d:	int3   
   140002a2e:	int3   
   140002a2f:	int3   
   140002a30:	mov    QWORD PTR [rsp+0x8],rbx
   140002a35:	mov    QWORD PTR [rsp+0x10],rsi
   140002a3a:	push   rbp
   140002a3b:	push   rdi
   140002a3c:	push   r14
   140002a3e:	mov    rbp,rsp
   140002a41:	sub    rsp,0x30
   140002a45:	mov    rax,QWORD PTR [r9]
   140002a48:	mov    rsi,r9
   140002a4b:	and    QWORD PTR [rbp-0x8],0x0
   140002a50:	mov    r14,r8
   140002a53:	and    QWORD PTR [rbp+0x38],0x0
   140002a58:	mov    rdi,rdx
   140002a5b:	and    QWORD PTR [rbp-0x10],0x0
   140002a60:	mov    rbx,QWORD PTR [rax+0x58]
   140002a64:	mov    rcx,rbx
   140002a67:	call   QWORD PTR [rip+0x698b]        # 0x1400093f8
   140002a6d:	lea    r8,[rbp-0x8]
   140002a71:	mov    rdx,rdi
   140002a74:	mov    rcx,rsi
   140002a77:	call   rbx
   140002a79:	mov    edi,eax
   140002a7b:	test   eax,eax
   140002a7d:	js     0x140002b18
   140002a83:	mov    rdi,QWORD PTR [rbp+0x38]
   140002a87:	test   rdi,rdi
   140002a8a:	je     0x140002aa6
   140002a8c:	and    QWORD PTR [rbp+0x38],0x0
   140002a91:	mov    rax,QWORD PTR [rdi]
   140002a94:	mov    rbx,QWORD PTR [rax+0x10]
   140002a98:	mov    rcx,rbx
   140002a9b:	call   QWORD PTR [rip+0x6957]        # 0x1400093f8
   140002aa1:	mov    rcx,rdi
   140002aa4:	call   rbx
   140002aa6:	mov    rbx,QWORD PTR [rbp-0x8]
   140002aaa:	mov    rax,QWORD PTR [rbx]
   140002aad:	mov    rdi,QWORD PTR [rax]
   140002ab0:	mov    rcx,rdi
   140002ab3:	call   QWORD PTR [rip+0x693f]        # 0x1400093f8
   140002ab9:	lea    r8,[rbp+0x38]
   140002abd:	mov    rcx,rbx
   140002ac0:	lea    rdx,[rip+0x6ba1]        # 0x140009668
   140002ac7:	call   rdi
   140002ac9:	mov    edi,eax
   140002acb:	test   eax,eax
   140002acd:	js     0x140002b18
   140002acf:	mov    rdi,QWORD PTR [rbp-0x10]
   140002ad3:	test   rdi,rdi
   140002ad6:	je     0x140002af2
   140002ad8:	and    QWORD PTR [rbp-0x10],0x0
   140002add:	mov    rax,QWORD PTR [rdi]
   140002ae0:	mov    rbx,QWORD PTR [rax+0x10]
   140002ae4:	mov    rcx,rbx
   140002ae7:	call   QWORD PTR [rip+0x690b]        # 0x1400093f8
   140002aed:	mov    rcx,rdi
   140002af0:	call   rbx
   140002af2:	mov    rax,QWORD PTR [r14]
   140002af5:	mov    rbx,QWORD PTR [rax+0xb0]
   140002afc:	mov    rcx,rbx
   140002aff:	call   QWORD PTR [rip+0x68f3]        # 0x1400093f8
   140002b05:	mov    rdx,QWORD PTR [rbp+0x38]
   140002b09:	lea    r8,[rbp-0x10]
   140002b0d:	mov    rcx,r14
   140002b10:	call   rbx
   140002b12:	mov    edi,eax
   140002b14:	test   eax,eax
   140002b16:	jns    0x140002b1f
   140002b18:	mov    ecx,eax
   140002b1a:	call   0x140008090
   140002b1f:	mov    ecx,edi
   140002b21:	call   0x140007fa8
   140002b26:	mov    rsi,QWORD PTR [rbp-0x10]
   140002b2a:	test   rsi,rsi
   140002b2d:	je     0x140002b49
   140002b2f:	and    QWORD PTR [rbp-0x10],0x0
   140002b34:	mov    rax,QWORD PTR [rsi]
   140002b37:	mov    rbx,QWORD PTR [rax+0x10]
   140002b3b:	mov    rcx,rbx
   140002b3e:	call   QWORD PTR [rip+0x68b4]        # 0x1400093f8
   140002b44:	mov    rcx,rsi
   140002b47:	call   rbx
   140002b49:	mov    rsi,QWORD PTR [rbp+0x38]
   140002b4d:	test   rsi,rsi
   140002b50:	je     0x140002b6c
   140002b52:	and    QWORD PTR [rbp+0x38],0x0
   140002b57:	mov    rax,QWORD PTR [rsi]
   140002b5a:	mov    rbx,QWORD PTR [rax+0x10]
   140002b5e:	mov    rcx,rbx
   140002b61:	call   QWORD PTR [rip+0x6891]        # 0x1400093f8
   140002b67:	mov    rcx,rsi
   140002b6a:	call   rbx
   140002b6c:	mov    rsi,QWORD PTR [rbp-0x8]
   140002b70:	test   rsi,rsi
   140002b73:	je     0x140002b8f
   140002b75:	and    QWORD PTR [rbp-0x8],0x0
   140002b7a:	mov    rax,QWORD PTR [rsi]
   140002b7d:	mov    rbx,QWORD PTR [rax+0x10]
   140002b81:	mov    rcx,rbx
   140002b84:	call   QWORD PTR [rip+0x686e]        # 0x1400093f8
   140002b8a:	mov    rcx,rsi
   140002b8d:	call   rbx
   140002b8f:	mov    rbx,QWORD PTR [rsp+0x50]
   140002b94:	mov    eax,edi
   140002b96:	mov    rsi,QWORD PTR [rsp+0x58]
   140002b9b:	add    rsp,0x30
   140002b9f:	pop    r14
   140002ba1:	pop    rdi
   140002ba2:	pop    rbp
   140002ba3:	ret    
   140002ba4:	int3   
   140002ba5:	int3   
   140002ba6:	int3   
   140002ba7:	int3   
   140002ba8:	int3   
   140002ba9:	int3   
   140002baa:	int3   
   140002bab:	int3   
   140002bac:	int3   
   140002bad:	int3   
   140002bae:	int3   
   140002baf:	int3   
   140002bb0:	mov    QWORD PTR [rsp+0x8],rbx
   140002bb5:	push   rbp
   140002bb6:	push   rsi
   140002bb7:	push   rdi
   140002bb8:	push   r12
   140002bba:	push   r13
   140002bbc:	push   r14
   140002bbe:	push   r15
   140002bc0:	lea    rbp,[rsp-0x27]
   140002bc5:	sub    rsp,0x90
   140002bcc:	mov    rax,QWORD PTR [rip+0x9435]        # 0x14000c008
   140002bd3:	xor    rax,rsp
   140002bd6:	mov    QWORD PTR [rbp+0x1f],rax
   140002bda:	xor    ebx,ebx
   140002bdc:	lea    rax,[rbp-0x21]
   140002be0:	mov    r15,rdx
   140002be3:	mov    QWORD PTR [rbp-0x9],rbx
   140002be7:	mov    r13,r8
   140002bea:	mov    QWORD PTR [rbp-0x19],rbx
   140002bee:	mov    QWORD PTR [rbp-0x11],rbx
   140002bf2:	mov    edi,ebx
   140002bf4:	lea    edx,[rbx+0x6c]
   140002bf7:	mov    QWORD PTR [rbp-0x29],rbx
   140002bfb:	mov    QWORD PTR [rbp-0x31],rbx
   140002bff:	mov    esi,ebx
   140002c01:	mov    QWORD PTR [rbp-0x39],rbx
   140002c05:	mov    QWORD PTR [rbp-0x21],rbx
   140002c09:	mov    QWORD PTR [rsp+0x28],rax
   140002c0e:	call   0x1400081a0
   140002c13:	mov    r12,QWORD PTR [rbp-0x21]
   140002c17:	mov    r14d,eax
   140002c1a:	test   eax,eax
   140002c1c:	jns    0x140002c2a
   140002c1e:	mov    ecx,eax
   140002c20:	call   0x140008090
   140002c25:	jmp    0x140002f12
   140002c2a:	mov    r14,QWORD PTR [rbp-0x29]
   140002c2e:	test   r14,r14
   140002c31:	je     0x140002c4c
   140002c33:	mov    QWORD PTR [rbp-0x29],rbx
   140002c37:	mov    rax,QWORD PTR [r14]
   140002c3a:	mov    rbx,QWORD PTR [rax+0x10]
   140002c3e:	mov    rcx,rbx
   140002c41:	call   QWORD PTR [rip+0x67b1]        # 0x1400093f8
   140002c47:	mov    rcx,r14
   140002c4a:	call   rbx
   140002c4c:	or     rbx,0xffffffffffffffff
   140002c50:	xor    eax,eax
   140002c52:	inc    rbx
   140002c55:	cmp    WORD PTR [r12+rbx*2],ax
   140002c5a:	jne    0x140002c52
   140002c5c:	mov    eax,0xffffffff
   140002c61:	cmp    rbx,rax
   140002c64:	jbe    0x140002c7d
   140002c66:	xor    r9d,r9d
   140002c69:	xor    r8d,r8d
   140002c6c:	mov    ecx,0xc000000d
   140002c71:	mov    ebx,eax
   140002c73:	lea    edx,[r9+0x1]
   140002c77:	call   QWORD PTR [rip+0x6443]        # 0x1400090c0
   140002c7d:	lea    r9,[rbp-0x1]
   140002c81:	mov    edx,ebx
   140002c83:	lea    r8,[rbp+0x7]
   140002c87:	mov    rcx,r12
   140002c8a:	call   QWORD PTR [rip+0x6658]        # 0x1400092e8
   140002c90:	mov    rax,QWORD PTR [r15]
   140002c93:	mov    rbx,QWORD PTR [rax+0x38]
   140002c97:	mov    rcx,rbx
   140002c9a:	call   QWORD PTR [rip+0x6758]        # 0x1400093f8
   140002ca0:	mov    rdx,QWORD PTR [rbp-0x1]
   140002ca4:	lea    r8,[rbp-0x29]
   140002ca8:	mov    rcx,r15
   140002cab:	call   rbx
   140002cad:	xor    ebx,ebx
   140002caf:	mov    r14d,eax
   140002cb2:	cmp    eax,0x803e0105
   140002cb7:	jne    0x140002cc1
   140002cb9:	mov    r14d,ebx
   140002cbc:	jmp    0x140002f12
   140002cc1:	test   eax,eax
   140002cc3:	js     0x140002c1e
   140002cc9:	lea    r9,[rbp-0x1]
   140002ccd:	mov    edx,0x2a
   140002cd2:	lea    r8,[rbp+0x7]
   140002cd6:	lea    rcx,[rip+0x69a3]        # 0x140009680
   140002cdd:	call   QWORD PTR [rip+0x6605]        # 0x1400092e8
   140002ce3:	test   eax,eax
   140002ce5:	jns    0x140002cfc
   140002ce7:	xor    r9d,r9d
   140002cea:	xor    r8d,r8d
   140002ced:	mov    ecx,0xc000000d
   140002cf2:	lea    edx,[r9+0x1]
   140002cf6:	call   QWORD PTR [rip+0x63c4]        # 0x1400090c0
   140002cfc:	mov    r14,QWORD PTR [rbp-0x31]
   140002d00:	mov    r15,QWORD PTR [rbp-0x1]
   140002d04:	test   r14,r14
   140002d07:	je     0x140002d24
   140002d09:	mov    QWORD PTR [rbp-0x31],rbx
   140002d0d:	mov    rax,QWORD PTR [r14]
   140002d10:	mov    rbx,QWORD PTR [rax+0x10]
   140002d14:	mov    rcx,rbx
   140002d17:	call   QWORD PTR [rip+0x66db]        # 0x1400093f8
   140002d1d:	mov    rcx,r14
   140002d20:	call   rbx
   140002d22:	xor    ebx,ebx
   140002d24:	lea    r8,[rbp-0x31]
   140002d28:	mov    rcx,r15
   140002d2b:	lea    rdx,[rip+0x69a6]        # 0x1400096d8
   140002d32:	call   QWORD PTR [rip+0x6598]        # 0x1400092d0
   140002d38:	mov    r14d,eax
   140002d3b:	test   eax,eax
   140002d3d:	js     0x140002c1e
   140002d43:	mov    r14,QWORD PTR [rbp-0x39]
   140002d47:	mov    r15,QWORD PTR [rbp-0x31]
   140002d4b:	test   r14,r14
   140002d4e:	je     0x140002d69
   140002d50:	mov    QWORD PTR [rbp-0x39],rbx
   140002d54:	mov    rax,QWORD PTR [r14]
   140002d57:	mov    rbx,QWORD PTR [rax+0x10]
   140002d5b:	mov    rcx,rbx
   140002d5e:	call   QWORD PTR [rip+0x6694]        # 0x1400093f8
   140002d64:	mov    rcx,r14
   140002d67:	call   rbx
   140002d69:	mov    rax,QWORD PTR [r15]
   140002d6c:	mov    rbx,QWORD PTR [rax+0x30]
   140002d70:	mov    rcx,rbx
   140002d73:	call   QWORD PTR [rip+0x667f]        # 0x1400093f8
   140002d79:	lea    r8,[rbp-0x39]
   140002d7d:	mov    rdx,r13
   140002d80:	mov    rcx,r15
   140002d83:	call   rbx
   140002d85:	xor    ebx,ebx
   140002d87:	mov    r14d,eax
   140002d8a:	test   eax,eax
   140002d8c:	js     0x140002c1e
   140002d92:	xor    r9d,r9d
   140002d95:	xor    r8d,r8d
   140002d98:	xor    edx,edx
   140002d9a:	xor    ecx,ecx
   140002d9c:	call   QWORD PTR [rip+0x632e]        # 0x1400090d0
   140002da2:	mov    rsi,rax
   140002da5:	test   rax,rax
   140002da8:	jne    0x140002dd7
   140002daa:	mov    esi,ebx
   140002dac:	call   QWORD PTR [rip+0x62de]        # 0x140009090
   140002db2:	test   eax,eax
   140002db4:	jne    0x140002dbe
   140002db6:	mov    r14d,0x80004005
   140002dbc:	jmp    0x140002dcf
   140002dbe:	movzx  r14d,ax
   140002dc2:	or     r14d,0x80070000
   140002dc9:	test   eax,eax
   140002dcb:	cmovle r14d,eax
   140002dcf:	mov    ecx,r14d
   140002dd2:	jmp    0x140002c20
   140002dd7:	call   QWORD PTR [rip+0x6283]        # 0x140009060
   140002ddd:	xor    edx,edx
   140002ddf:	mov    rcx,rax
   140002de2:	lea    r8d,[rdx+0x28]
   140002de6:	call   QWORD PTR [rip+0x625c]        # 0x140009048
   140002dec:	mov    rdi,rax
   140002def:	test   rax,rax
   140002df2:	je     0x140002e21
   140002df4:	lea    rax,[rip+0x69fd]        # 0x1400097f8
   140002dfb:	mov    DWORD PTR [rdi+0x18],0x1
   140002e02:	mov    QWORD PTR [rdi],rax
   140002e05:	lea    rax,[rip+0x69cc]        # 0x1400097d8
   140002e0c:	mov    QWORD PTR [rdi+0x8],rax
   140002e10:	lea    rax,[rip+0x69a1]        # 0x1400097b8
   140002e17:	mov    QWORD PTR [rdi+0x10],rax
   140002e1b:	mov    QWORD PTR [rdi+0x20],rsi
   140002e1f:	jmp    0x140002e24
   140002e21:	mov    rdi,rbx
   140002e24:	test   rdi,rdi
   140002e27:	je     0x140002e45
   140002e29:	mov    rax,QWORD PTR [rdi]
   140002e2c:	mov    rbx,QWORD PTR [rax+0x8]
   140002e30:	mov    rcx,rbx
   140002e33:	call   QWORD PTR [rip+0x65bf]        # 0x1400093f8
   140002e39:	mov    rcx,rdi
   140002e3c:	call   rbx
   140002e3e:	xor    ebx,ebx
   140002e40:	test   rdi,rdi
   140002e43:	jne    0x140002e4d
   140002e45:	mov    r14d,0x8007000e
   140002e4b:	jmp    0x140002dcf
   140002e4d:	mov    rbx,QWORD PTR [rbp-0x39]
   140002e51:	mov    rax,QWORD PTR [rbx]
   140002e54:	mov    r14,QWORD PTR [rax+0x58]
   140002e58:	mov    rcx,r14
   140002e5b:	call   QWORD PTR [rip+0x6597]        # 0x1400093f8
   140002e61:	lea    r8,[rbp-0x9]
   140002e65:	mov    rdx,rdi
   140002e68:	mov    rcx,rbx
   140002e6b:	call   r14
   140002e6e:	xor    ebx,ebx
   140002e70:	mov    r14d,eax
   140002e73:	test   eax,eax
   140002e75:	js     0x140002c1e
   140002e7b:	mov    rbx,QWORD PTR [rbp-0x39]
   140002e7f:	mov    rax,QWORD PTR [rbx]
   140002e82:	mov    r14,QWORD PTR [rax+0x48]
   140002e86:	mov    rcx,r14
   140002e89:	call   QWORD PTR [rip+0x6569]        # 0x1400093f8
   140002e8f:	lea    r8,[rbp-0x19]
   140002e93:	mov    rcx,rbx
   140002e96:	lea    rdx,[rdi+0x8]
   140002e9a:	call   r14
   140002e9d:	xor    ebx,ebx
   140002e9f:	mov    r14d,eax
   140002ea2:	test   eax,eax
   140002ea4:	js     0x140002c1e
   140002eaa:	mov    rbx,QWORD PTR [rbp-0x39]
   140002eae:	mov    rax,QWORD PTR [rbx]
   140002eb1:	mov    r14,QWORD PTR [rax+0x68]
   140002eb5:	mov    rcx,r14
   140002eb8:	call   QWORD PTR [rip+0x653a]        # 0x1400093f8
   140002ebe:	lea    r8,[rbp-0x11]
   140002ec2:	mov    rcx,rbx
   140002ec5:	lea    rdx,[rdi+0x10]
   140002ec9:	call   r14
   140002ecc:	xor    ebx,ebx
   140002ece:	mov    r14d,eax
   140002ed1:	test   eax,eax
   140002ed3:	js     0x140002c1e
   140002ed9:	mov    rbx,QWORD PTR [rbp-0x29]
   140002edd:	mov    rax,QWORD PTR [rbx]
   140002ee0:	mov    r14,QWORD PTR [rax+0x30]
   140002ee4:	mov    rcx,r14
   140002ee7:	call   QWORD PTR [rip+0x650b]        # 0x1400093f8
   140002eed:	mov    rdx,QWORD PTR [rbp-0x39]
   140002ef1:	mov    rcx,rbx
   140002ef4:	call   r14
   140002ef7:	xor    ebx,ebx
   140002ef9:	mov    r14d,eax
   140002efc:	test   eax,eax
   140002efe:	js     0x140002c1e
   140002f04:	mov    edx,0x3a98
   140002f09:	mov    rcx,rsi
   140002f0c:	call   QWORD PTR [rip+0x61c6]        # 0x1400090d8
   140002f12:	mov    ecx,r14d
   140002f15:	call   0x140007fa8
   140002f1a:	test   r12,r12
   140002f1d:	je     0x140002f28
   140002f1f:	mov    rcx,r12
   140002f22:	call   QWORD PTR [rip+0x6280]        # 0x1400091a8
   140002f28:	test   rsi,rsi
   140002f2b:	je     0x140002f36
   140002f2d:	mov    rcx,rsi
   140002f30:	call   QWORD PTR [rip+0x6192]        # 0x1400090c8
   140002f36:	test   rdi,rdi
   140002f39:	je     0x140002f52
   140002f3b:	mov    rax,QWORD PTR [rdi]
   140002f3e:	mov    rbx,QWORD PTR [rax+0x10]
   140002f42:	mov    rcx,rbx
   140002f45:	call   QWORD PTR [rip+0x64ad]        # 0x1400093f8
   140002f4b:	mov    rcx,rdi
   140002f4e:	call   rbx
   140002f50:	xor    ebx,ebx
   140002f52:	mov    rdi,QWORD PTR [rbp-0x39]
   140002f56:	test   rdi,rdi
   140002f59:	je     0x140002f76
   140002f5b:	mov    QWORD PTR [rbp-0x39],rbx
   140002f5f:	mov    rax,QWORD PTR [rdi]
   140002f62:	mov    rbx,QWORD PTR [rax+0x10]
   140002f66:	mov    rcx,rbx
   140002f69:	call   QWORD PTR [rip+0x6489]        # 0x1400093f8
   140002f6f:	mov    rcx,rdi
   140002f72:	call   rbx
   140002f74:	xor    ebx,ebx
   140002f76:	mov    rdi,QWORD PTR [rbp-0x31]
   140002f7a:	test   rdi,rdi
   140002f7d:	je     0x140002f9a
   140002f7f:	mov    QWORD PTR [rbp-0x31],rbx
   140002f83:	mov    rax,QWORD PTR [rdi]
   140002f86:	mov    rbx,QWORD PTR [rax+0x10]
   140002f8a:	mov    rcx,rbx
   140002f8d:	call   QWORD PTR [rip+0x6465]        # 0x1400093f8
   140002f93:	mov    rcx,rdi
   140002f96:	call   rbx
   140002f98:	xor    ebx,ebx
   140002f9a:	mov    rdi,QWORD PTR [rbp-0x29]
   140002f9e:	test   rdi,rdi
   140002fa1:	je     0x140002fbc
   140002fa3:	mov    QWORD PTR [rbp-0x29],rbx
   140002fa7:	mov    rax,QWORD PTR [rdi]
   140002faa:	mov    rbx,QWORD PTR [rax+0x10]
   140002fae:	mov    rcx,rbx
   140002fb1:	call   QWORD PTR [rip+0x6441]        # 0x1400093f8
   140002fb7:	mov    rcx,rdi
   140002fba:	call   rbx
   140002fbc:	mov    eax,r14d
   140002fbf:	mov    rcx,QWORD PTR [rbp+0x1f]
   140002fc3:	xor    rcx,rsp
   140002fc6:	call   0x1400085f0
   140002fcb:	mov    rbx,QWORD PTR [rsp+0xd0]
   140002fd3:	add    rsp,0x90
   140002fda:	pop    r15
   140002fdc:	pop    r14
   140002fde:	pop    r13
   140002fe0:	pop    r12
   140002fe2:	pop    rdi
   140002fe3:	pop    rsi
   140002fe4:	pop    rbp
   140002fe5:	ret    
   140002fe6:	int3   
   140002fe7:	int3   
   140002fe8:	int3   
   140002fe9:	int3   
   140002fea:	int3   
   140002feb:	int3   
   140002fec:	mov    QWORD PTR [rsp+0x8],rbx
   140002ff1:	mov    QWORD PTR [rsp+0x10],rbp
   140002ff6:	mov    QWORD PTR [rsp+0x18],rsi
   140002ffb:	push   rdi
   140002ffc:	sub    rsp,0x20
   140003000:	mov    rbx,QWORD PTR [rcx]
   140003003:	mov    rsi,rcx
   140003006:	test   rbx,rbx
   140003009:	je     0x14000309a
   14000300f:	lea    rax,[rip+0x6782]        # 0x140009798
   140003016:	or     r9d,0xffffffff
   14000301a:	mov    QWORD PTR [rbx],rax
   14000301d:	mov    r8d,0x1
   140003023:	mov    rax,QWORD PTR [rbx+0x8]
   140003027:	mov    rdx,QWORD PTR [rax+0x8]
   14000302b:	mov    ecx,DWORD PTR [rax+0x4]
   14000302e:	call   QWORD PTR [rip+0x60e4]        # 0x140009118
   140003034:	mov    rdi,QWORD PTR [rbx+0x8]
   140003038:	test   rdi,rdi
   14000303b:	je     0x140003082
   14000303d:	xor    edx,edx
   14000303f:	mov    rcx,rdi
   140003042:	call   0x140006a2c
   140003047:	mov    rbp,QWORD PTR [rdi+0x8]
   14000304b:	test   rbp,rbp
   14000304e:	je     0x140003069
   140003050:	call   QWORD PTR [rip+0x600a]        # 0x140009060
   140003056:	mov    r8,rbp
   140003059:	xor    edx,edx
   14000305b:	mov    rcx,rax
   14000305e:	call   QWORD PTR [rip+0x5fec]        # 0x140009050
   140003064:	and    QWORD PTR [rdi+0x8],0x0
   140003069:	call   QWORD PTR [rip+0x5ff1]        # 0x140009060
   14000306f:	mov    r8,rdi
   140003072:	xor    edx,edx
   140003074:	mov    rcx,rax
   140003077:	call   QWORD PTR [rip+0x5fd3]        # 0x140009050
   14000307d:	and    QWORD PTR [rbx+0x8],0x0
   140003082:	call   QWORD PTR [rip+0x5fd8]        # 0x140009060
   140003088:	mov    r8,rbx
   14000308b:	xor    edx,edx
   14000308d:	mov    rcx,rax
   140003090:	call   QWORD PTR [rip+0x5fba]        # 0x140009050
   140003096:	and    QWORD PTR [rsi],0x0
   14000309a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000309f:	mov    rbp,QWORD PTR [rsp+0x38]
   1400030a4:	mov    rsi,QWORD PTR [rsp+0x40]
   1400030a9:	add    rsp,0x20
   1400030ad:	pop    rdi
   1400030ae:	ret    
   1400030af:	int3   
   1400030b0:	int3   
   1400030b1:	int3   
   1400030b2:	int3   
   1400030b3:	int3   
   1400030b4:	int3   
   1400030b5:	int3   
   1400030b6:	int3   
   1400030b7:	int3   
   1400030b8:	int3   
   1400030b9:	int3   
   1400030ba:	int3   
   1400030bb:	int3   
   1400030bc:	int3   
   1400030bd:	int3   
   1400030be:	int3   
   1400030bf:	int3   
   1400030c0:	rex push rbx
   1400030c2:	sub    rsp,0x20
   1400030c6:	mov    rbx,rcx
   1400030c9:	call   QWORD PTR [rip+0x5f91]        # 0x140009060
   1400030cf:	xor    edx,edx
   1400030d1:	mov    rcx,rax
   1400030d4:	lea    r8d,[rdx+0x10]
   1400030d8:	call   QWORD PTR [rip+0x5f6a]        # 0x140009048
   1400030de:	xor    ecx,ecx
   1400030e0:	test   rax,rax
   1400030e3:	je     0x1400030ee
   1400030e5:	mov    QWORD PTR [rax],rcx
   1400030e8:	mov    QWORD PTR [rax+0x8],rcx
   1400030ec:	jmp    0x1400030f1
   1400030ee:	mov    rax,rcx
   1400030f1:	mov    QWORD PTR [rbx+0x8],rax
   1400030f5:	neg    rax
   1400030f8:	sbb    ebx,ebx
   1400030fa:	not    ebx
   1400030fc:	and    ebx,0x8007000e
   140003102:	jge    0x14000310b
   140003104:	mov    ecx,ebx
   140003106:	call   0x140008090
   14000310b:	mov    ecx,ebx
   14000310d:	call   0x140007fa8
   140003112:	mov    eax,ebx
   140003114:	add    rsp,0x20
   140003118:	pop    rbx
   140003119:	ret    
   14000311a:	int3   
   14000311b:	int3   
   14000311c:	int3   
   14000311d:	int3   
   14000311e:	int3   
   14000311f:	int3   
   140003120:	mov    QWORD PTR [rsp+0x10],rbx
   140003125:	push   rbp
   140003126:	push   rsi
   140003127:	push   rdi
   140003128:	push   r12
   14000312a:	push   r13
   14000312c:	push   r14
   14000312e:	push   r15
   140003130:	sub    rsp,0x30
   140003134:	mov    rax,QWORD PTR [rcx]
   140003137:	mov    r14,rcx
   14000313a:	xor    edi,edi
   14000313c:	mov    r15d,r8d
   14000313f:	and    DWORD PTR [rsp+0x70],edi
   140003143:	mov    r13,rdx
   140003146:	xor    ebx,ebx
   140003148:	mov    rsi,QWORD PTR [rax+0x10]
   14000314c:	mov    rcx,rsi
   14000314f:	call   QWORD PTR [rip+0x62a3]        # 0x1400093f8
   140003155:	mov    rcx,r14
   140003158:	call   rsi
   14000315a:	mov    esi,eax
   14000315c:	test   eax,eax
   14000315e:	jns    0x140003167
   140003160:	mov    ecx,eax
   140003162:	jmp    0x1400032d2
   140003167:	call   QWORD PTR [rip+0x5ef3]        # 0x140009060
   14000316d:	xor    edx,edx
   14000316f:	mov    rcx,rax
   140003172:	lea    r8d,[rdx+0x10]
   140003176:	call   QWORD PTR [rip+0x5ecc]        # 0x140009048
   14000317c:	mov    rbx,rax
   14000317f:	test   rax,rax
   140003182:	je     0x1400032c9
   140003188:	and    QWORD PTR [rax],rdi
   14000318b:	mov    rbp,r15
   14000318e:	mov    DWORD PTR [rax+0x8],r15d
   140003192:	mov    eax,0x4
   140003197:	mul    r15
   14000319a:	mov    rsi,rax
   14000319d:	mov    rax,0xffffffffffffffff
   1400031a4:	cmovo  rsi,rax
   1400031a8:	call   QWORD PTR [rip+0x5eb2]        # 0x140009060
   1400031ae:	mov    r8,rsi
   1400031b1:	xor    edx,edx
   1400031b3:	mov    rcx,rax
   1400031b6:	call   QWORD PTR [rip+0x5e8c]        # 0x140009048
   1400031bc:	mov    r12,QWORD PTR [rbx]
   1400031bf:	mov    rsi,rax
   1400031c2:	test   r12,r12
   1400031c5:	je     0x1400031de
   1400031c7:	call   QWORD PTR [rip+0x5e93]        # 0x140009060
   1400031cd:	mov    r8,r12
   1400031d0:	xor    edx,edx
   1400031d2:	mov    rcx,rax
   1400031d5:	call   QWORD PTR [rip+0x5e75]        # 0x140009050
   1400031db:	and    QWORD PTR [rbx],rdi
   1400031de:	mov    QWORD PTR [rbx],rsi
   1400031e1:	test   rsi,rsi
   1400031e4:	je     0x1400032cb
   1400031ea:	test   r15d,r15d
   1400031ed:	je     0x140003205
   1400031ef:	xor    edx,edx
   1400031f1:	mov    eax,DWORD PTR [rdx+r13*1]
   1400031f5:	mov    rcx,QWORD PTR [rbx]
   1400031f8:	mov    DWORD PTR [rdx+rcx*1],eax
   1400031fb:	lea    rdx,[rdx+0x4]
   1400031ff:	sub    rbp,0x1
   140003203:	jne    0x1400031f1
   140003205:	lea    rax,[rsp+0x70]
   14000320a:	mov    r9,rbx
   14000320d:	mov    QWORD PTR [rsp+0x28],rax
   140003212:	lea    r8,[rip+0xffffffffffffe287]        # 0x1400014a0
   140003219:	xor    edx,edx
   14000321b:	mov    DWORD PTR [rsp+0x20],0x4
   140003223:	xor    ecx,ecx
   140003225:	call   QWORD PTR [rip+0x5eb5]        # 0x1400090e0
   14000322b:	test   rax,rax
   14000322e:	jne    0x140003253
   140003230:	call   QWORD PTR [rip+0x5e5a]        # 0x140009090
   140003236:	test   eax,eax
   140003238:	jne    0x140003241
   14000323a:	mov    esi,0x80004005
   14000323f:	jmp    0x14000324f
   140003241:	movzx  esi,ax
   140003244:	or     esi,0x80070000
   14000324a:	test   eax,eax
   14000324c:	cmovle esi,eax
   14000324f:	mov    ecx,esi
   140003251:	jmp    0x1400032d2
   140003253:	mov    rcx,QWORD PTR [r14+0x8]
   140003257:	lea    rdx,[rsp+0x88]
   14000325f:	mov    QWORD PTR [rsp+0x88],rax
   140003267:	call   0x140004528
   14000326c:	mov    esi,eax
   14000326e:	test   eax,eax
   140003270:	jns    0x140003283
   140003272:	mov    ecx,eax
   140003274:	call   0x140008090
   140003279:	mov    rdi,QWORD PTR [rsp+0x88]
   140003281:	jmp    0x1400032d7
   140003283:	mov    rax,QWORD PTR [r14+0x8]
   140003287:	mov    ecx,DWORD PTR [rax+0x4]
   14000328a:	mov    rdx,QWORD PTR [rax+0x8]
   14000328e:	lea    eax,[rcx-0x1]
   140003291:	movsxd rcx,eax
   140003294:	mov    rcx,QWORD PTR [rdx+rcx*8]
   140003298:	call   QWORD PTR [rip+0x5e4a]        # 0x1400090e8
   14000329e:	test   eax,eax
   1400032a0:	jne    0x1400032c5
   1400032a2:	call   QWORD PTR [rip+0x5de8]        # 0x140009090
   1400032a8:	test   eax,eax
   1400032aa:	jne    0x1400032b3
   1400032ac:	mov    esi,0x80004005
   1400032b1:	jmp    0x1400032c1
   1400032b3:	movzx  esi,ax
   1400032b6:	or     esi,0x80070000
   1400032bc:	test   eax,eax
   1400032be:	cmovle esi,eax
   1400032c1:	mov    ecx,esi
   1400032c3:	jmp    0x140003274
   1400032c5:	xor    ebx,ebx
   1400032c7:	jmp    0x140003279
   1400032c9:	xor    ebx,ebx
   1400032cb:	mov    ecx,0x8007000e
   1400032d0:	mov    esi,ecx
   1400032d2:	call   0x140008090
   1400032d7:	mov    ecx,esi
   1400032d9:	call   0x140007fa8
   1400032de:	test   rbx,rbx
   1400032e1:	je     0x140003317
   1400032e3:	mov    rbp,QWORD PTR [rbx]
   1400032e6:	test   rbp,rbp
   1400032e9:	je     0x140003303
   1400032eb:	call   QWORD PTR [rip+0x5d6f]        # 0x140009060
   1400032f1:	mov    r8,rbp
   1400032f4:	xor    edx,edx
   1400032f6:	mov    rcx,rax
   1400032f9:	call   QWORD PTR [rip+0x5d51]        # 0x140009050
   1400032ff:	and    QWORD PTR [rbx],0x0
   140003303:	call   QWORD PTR [rip+0x5d57]        # 0x140009060
   140003309:	mov    r8,rbx
   14000330c:	xor    edx,edx
   14000330e:	mov    rcx,rax
   140003311:	call   QWORD PTR [rip+0x5d39]        # 0x140009050
   140003317:	test   rdi,rdi
   14000331a:	je     0x140003325
   14000331c:	mov    rcx,rdi
   14000331f:	call   QWORD PTR [rip+0x5da3]        # 0x1400090c8
   140003325:	mov    eax,esi
   140003327:	mov    rbx,QWORD PTR [rsp+0x78]
   14000332c:	add    rsp,0x30
   140003330:	pop    r15
   140003332:	pop    r14
   140003334:	pop    r13
   140003336:	pop    r12
   140003338:	pop    rdi
   140003339:	pop    rsi
   14000333a:	pop    rbp
   14000333b:	ret    
   14000333c:	int3   
   14000333d:	int3   
   14000333e:	int3   
   14000333f:	int3   
   140003340:	int3   
   140003341:	int3   
   140003342:	int3   
   140003343:	int3   
   140003344:	int3   
   140003345:	int3   
   140003346:	int3   
   140003347:	int3   
   140003348:	int3   
   140003349:	int3   
   14000334a:	int3   
   14000334b:	int3   
   14000334c:	int3   
   14000334d:	int3   
   14000334e:	int3   
   14000334f:	int3   
   140003350:	mov    QWORD PTR [rsp+0x10],rbx
   140003355:	mov    QWORD PTR [rsp+0x18],rsi
   14000335a:	push   rbp
   14000335b:	push   rdi
   14000335c:	push   r14
   14000335e:	lea    rbp,[rsp-0x1d0]
   140003366:	sub    rsp,0x2d0
   14000336d:	mov    rax,QWORD PTR [rip+0x8c94]        # 0x14000c008
   140003374:	xor    rax,rsp
   140003377:	mov    QWORD PTR [rbp+0x1c0],rax
   14000337e:	mov    rsi,rcx
   140003381:	xor    r14d,r14d
   140003384:	lea    rcx,[rbp-0x4e]
   140003388:	mov    WORD PTR [rbp-0x50],r14w
   14000338d:	xor    edx,edx
   14000338f:	mov    r8d,0x206
   140003395:	call   0x140008c8e
   14000339a:	movaps xmm0,XMMWORD PTR [rip+0x665f]        # 0x140009a00
   1400033a1:	lea    rcx,[rip+0x9350]        # 0x14000c6f8
   1400033a8:	movaps xmm1,XMMWORD PTR [rip+0x6661]        # 0x140009a10
   1400033af:	movzx  eax,WORD PTR [rip+0x66a2]        # 0x140009a58
   1400033b6:	movaps XMMWORD PTR [rsp+0x60],xmm0
   1400033bb:	movaps xmm0,XMMWORD PTR [rip+0x665e]        # 0x140009a20
   1400033c2:	movaps XMMWORD PTR [rsp+0x70],xmm1
   1400033c7:	movaps xmm1,XMMWORD PTR [rip+0x6662]        # 0x140009a30
   1400033ce:	movaps XMMWORD PTR [rbp-0x80],xmm0
   1400033d2:	movaps xmm0,XMMWORD PTR [rip+0x6667]        # 0x140009a40
   1400033d9:	movaps XMMWORD PTR [rbp-0x70],xmm1
   1400033dd:	movsd  xmm1,QWORD PTR [rip+0x666b]        # 0x140009a50
   1400033e5:	movaps XMMWORD PTR [rbp-0x60],xmm0
   1400033e9:	movsd  QWORD PTR [rsp+0x50],xmm1
   1400033ef:	mov    QWORD PTR [rsp+0x40],r14
   1400033f4:	mov    WORD PTR [rsp+0x58],ax
   1400033f9:	mov    QWORD PTR [rsp+0x48],r14
   1400033fe:	call   QWORD PTR [rip+0x5c6c]        # 0x140009070
   140003404:	lea    rax,[rsp+0x48]
   140003409:	lea    edx,[r14+0x6c]
   14000340d:	mov    QWORD PTR [rsp+0x28],rax
   140003412:	call   0x1400081a0
   140003417:	mov    rbx,QWORD PTR [rsp+0x48]
   14000341c:	mov    edi,eax
   14000341e:	test   eax,eax
   140003420:	js     0x1400034af
   140003426:	lea    r9,[rsp+0x40]
   14000342b:	xor    r8d,r8d
   14000342e:	xor    edx,edx
   140003430:	lea    rcx,[rip+0x6991]        # 0x140009dc8
   140003437:	call   QWORD PTR [rip+0x5d3b]        # 0x140009178
   14000343d:	mov    edi,eax
   14000343f:	test   eax,eax
   140003441:	js     0x1400034af
   140003443:	mov    r9,QWORD PTR [rsp+0x40]
   140003448:	lea    rax,[rsp+0x50]
   14000344d:	mov    QWORD PTR [rsp+0x30],rax
   140003452:	lea    r8,[rip+0x6607]        # 0x140009a60
   140003459:	lea    rax,[rsp+0x60]
   14000345e:	mov    QWORD PTR [rsp+0x28],rbx
   140003463:	mov    edx,0x104
   140003468:	mov    QWORD PTR [rsp+0x20],rax
   14000346d:	lea    rcx,[rbp-0x50]
   140003471:	call   0x140007d58
   140003476:	mov    edi,eax
   140003478:	test   eax,eax
   14000347a:	js     0x1400034af
   14000347c:	lea    rcx,[rbp-0x50]
   140003480:	call   QWORD PTR [rip+0x5c6a]        # 0x1400090f0
   140003486:	cmp    eax,0xffffffff
   140003489:	jae    0x140003490
   14000348b:	mov    edi,r14d
   14000348e:	jmp    0x1400034b6
   140003490:	mov    rax,QWORD PTR [rsi]
   140003493:	mov    rdi,QWORD PTR [rax+0x18]
   140003497:	mov    rcx,rdi
   14000349a:	call   QWORD PTR [rip+0x5f58]        # 0x1400093f8
   1400034a0:	lea    rdx,[rbp-0x50]
   1400034a4:	mov    rcx,rsi
   1400034a7:	call   rdi
   1400034a9:	mov    edi,eax
   1400034ab:	test   eax,eax
   1400034ad:	jns    0x1400034b6
   1400034af:	mov    ecx,eax
   1400034b1:	call   0x140008090
   1400034b6:	mov    ecx,edi
   1400034b8:	call   0x140007fa8
   1400034bd:	lea    rcx,[rip+0x9234]        # 0x14000c6f8
   1400034c4:	call   QWORD PTR [rip+0x5bae]        # 0x140009078
   1400034ca:	test   rbx,rbx
   1400034cd:	je     0x1400034d8
   1400034cf:	mov    rcx,rbx
   1400034d2:	call   QWORD PTR [rip+0x5cd0]        # 0x1400091a8
   1400034d8:	mov    rcx,QWORD PTR [rsp+0x40]
   1400034dd:	test   rcx,rcx
   1400034e0:	je     0x1400034e8
   1400034e2:	call   QWORD PTR [rip+0x5cc0]        # 0x1400091a8
   1400034e8:	mov    eax,edi
   1400034ea:	mov    rcx,QWORD PTR [rbp+0x1c0]
   1400034f1:	xor    rcx,rsp
   1400034f4:	call   0x1400085f0
   1400034f9:	lea    r11,[rsp+0x2d0]
   140003501:	mov    rbx,QWORD PTR [r11+0x28]
   140003505:	mov    rsi,QWORD PTR [r11+0x30]
   140003509:	mov    rsp,r11
   14000350c:	pop    r14
   14000350e:	pop    rdi
   14000350f:	pop    rbp
   140003510:	ret    
   140003511:	int3   
   140003512:	int3   
   140003513:	int3   
   140003514:	int3   
   140003515:	int3   
   140003516:	int3   
   140003517:	int3   
   140003518:	int3   
   140003519:	int3   
   14000351a:	int3   
   14000351b:	int3   
   14000351c:	int3   
   14000351d:	int3   
   14000351e:	int3   
   14000351f:	int3   
   140003520:	mov    rax,rsp
   140003523:	mov    QWORD PTR [rax+0x8],rbx
   140003527:	mov    QWORD PTR [rax+0x18],rsi
   14000352b:	mov    QWORD PTR [rax+0x20],rdi
   14000352f:	push   rbp
   140003530:	push   r14
   140003532:	push   r15
   140003534:	lea    rbp,[rax-0x1c8]
   14000353b:	sub    rsp,0x2b0
   140003542:	mov    rax,QWORD PTR [rip+0x8abf]        # 0x14000c008
   140003549:	xor    rax,rsp
   14000354c:	mov    QWORD PTR [rbp+0x1a0],rax
   140003553:	mov    r14,rdx
   140003556:	lea    rcx,[rbp-0x6e]
   14000355a:	xor    r15d,r15d
   14000355d:	xor    edx,edx
   14000355f:	mov    r8d,0x206
   140003565:	mov    WORD PTR [rbp-0x70],r15w
   14000356a:	call   0x140008c8e
   14000356f:	xor    eax,eax
   140003571:	mov    QWORD PTR [rsp+0x40],r15
   140003576:	mov    QWORD PTR [rsp+0x30],r15
   14000357b:	mov    QWORD PTR [rsp+0x50],r15
   140003580:	mov    QWORD PTR [rsp+0x48],r15
   140003585:	mov    DWORD PTR [rsp+0x38],r15d
   14000358a:	mov    QWORD PTR [rsp+0x58],rax
   14000358f:	mov    QWORD PTR [rsp+0x60],rax
   140003594:	mov    QWORD PTR [rsp+0x68],rax
   140003599:	mov    QWORD PTR [rsp+0x70],rax
   14000359e:	mov    QWORD PTR [rsp+0x78],rax
   1400035a3:	mov    QWORD PTR [rbp-0x80],rax
   1400035a7:	test   r14,r14
   1400035aa:	jne    0x1400035b8
   1400035ac:	mov    esi,0x80070057
   1400035b1:	mov    ecx,esi
   1400035b3:	jmp    0x1400038a6
   1400035b8:	call   QWORD PTR [rip+0x5b42]        # 0x140009100
   1400035be:	mov    ebx,0x104
   1400035c3:	lea    r8,[rbp-0x70]
   1400035c7:	mov    rcx,rax
   1400035ca:	mov    r9d,ebx
   1400035cd:	xor    edx,edx
   1400035cf:	call   QWORD PTR [rip+0x5b23]        # 0x1400090f8
   1400035d5:	test   eax,eax
   1400035d7:	jne    0x1400035fa
   1400035d9:	call   QWORD PTR [rip+0x5ab1]        # 0x140009090
   1400035df:	test   eax,eax
   1400035e1:	jne    0x1400035ea
   1400035e3:	mov    esi,0x80004005
   1400035e8:	jmp    0x1400035b1
   1400035ea:	movzx  esi,ax
   1400035ed:	or     esi,0x80070000
   1400035f3:	test   eax,eax
   1400035f5:	cmovle esi,eax
   1400035f8:	jmp    0x1400035b1
   1400035fa:	cmp    eax,ebx
   1400035fc:	jb     0x140003605
   1400035fe:	mov    esi,0x8007007a
   140003603:	jmp    0x1400035b1
   140003605:	xor    edx,edx
   140003607:	lea    rax,[rsp+0x40]
   14000360c:	lea    r9,[rip+0x675d]        # 0x140009d70
   140003613:	mov    QWORD PTR [rsp+0x20],rax
   140003618:	lea    rcx,[rip+0x67f9]        # 0x140009e18
   14000361f:	lea    r8d,[rdx+0x1]
   140003623:	call   QWORD PTR [rip+0x5bc7]        # 0x1400091f0
   140003629:	mov    esi,eax
   14000362b:	test   eax,eax
   14000362d:	js     0x1400038a4
   140003633:	mov    rbx,QWORD PTR [rsp+0x40]
   140003638:	mov    rax,QWORD PTR [rbx]
   14000363b:	mov    rdi,QWORD PTR [rax+0xa0]
   140003642:	mov    rcx,rdi
   140003645:	call   QWORD PTR [rip+0x5dad]        # 0x1400093f8
   14000364b:	lea    rdx,[rbp-0x70]
   14000364f:	mov    rcx,rbx
   140003652:	call   rdi
   140003654:	mov    esi,eax
   140003656:	test   eax,eax
   140003658:	js     0x1400038a4
   14000365e:	mov    rbx,QWORD PTR [rsp+0x40]
   140003663:	mov    rax,QWORD PTR [rbx]
   140003666:	mov    rdi,QWORD PTR [rax+0x58]
   14000366a:	mov    rcx,rdi
   14000366d:	call   QWORD PTR [rip+0x5d85]        # 0x1400093f8
   140003673:	lea    rdx,[rip+0x66ee]        # 0x140009d68
   14000367a:	mov    rcx,rbx
   14000367d:	call   rdi
   14000367f:	mov    esi,eax
   140003681:	test   eax,eax
   140003683:	js     0x1400038a4
   140003689:	mov    rbx,QWORD PTR [rsp+0x40]
   14000368e:	mov    rax,QWORD PTR [rbx]
   140003691:	mov    rdi,QWORD PTR [rax]
   140003694:	mov    rcx,rdi
   140003697:	call   QWORD PTR [rip+0x5d5b]        # 0x1400093f8
   14000369d:	lea    r8,[rsp+0x48]
   1400036a2:	mov    rcx,rbx
   1400036a5:	lea    rdx,[rip+0x675c]        # 0x140009e08
   1400036ac:	call   rdi
   1400036ae:	mov    esi,eax
   1400036b0:	test   eax,eax
   1400036b2:	js     0x1400038a4
   1400036b8:	mov    rbx,QWORD PTR [rsp+0x48]
   1400036bd:	mov    rax,QWORD PTR [rbx]
   1400036c0:	mov    rdi,QWORD PTR [rax+0x30]
   1400036c4:	mov    rcx,rdi
   1400036c7:	call   QWORD PTR [rip+0x5d2b]        # 0x1400093f8
   1400036cd:	lea    rdx,[rsp+0x38]
   1400036d2:	mov    rcx,rbx
   1400036d5:	call   rdi
   1400036d7:	mov    esi,eax
   1400036d9:	test   eax,eax
   1400036db:	js     0x1400038a4
   1400036e1:	mov    esi,DWORD PTR [rsp+0x38]
   1400036e5:	mov    rbx,QWORD PTR [rsp+0x48]
   1400036ea:	bts    esi,0xd
   1400036ee:	mov    DWORD PTR [rsp+0x38],esi
   1400036f2:	mov    rax,QWORD PTR [rbx]
   1400036f5:	mov    rdi,QWORD PTR [rax+0x38]
   1400036f9:	mov    rcx,rdi
   1400036fc:	call   QWORD PTR [rip+0x5cf6]        # 0x1400093f8
   140003702:	mov    edx,esi
   140003704:	mov    rcx,rbx
   140003707:	call   rdi
   140003709:	mov    esi,eax
   14000370b:	test   eax,eax
   14000370d:	js     0x1400038a4
   140003713:	mov    rbx,QWORD PTR [rsp+0x40]
   140003718:	mov    rax,QWORD PTR [rbx]
   14000371b:	mov    rdi,QWORD PTR [rax]
   14000371e:	mov    rcx,rdi
   140003721:	call   QWORD PTR [rip+0x5cd1]        # 0x1400093f8
   140003727:	lea    r8,[rsp+0x30]
   14000372c:	mov    rcx,rbx
   14000372f:	lea    rdx,[rip+0x66f2]        # 0x140009e28
   140003736:	call   rdi
   140003738:	mov    esi,eax
   14000373a:	test   eax,eax
   14000373c:	js     0x1400038a4
   140003742:	mov    rbx,QWORD PTR [rsp+0x30]
   140003747:	mov    eax,0xb
   14000374c:	mov    WORD PTR [rsp+0x70],ax
   140003751:	or     eax,0xffffffff
   140003754:	mov    WORD PTR [rsp+0x78],ax
   140003759:	mov    rax,QWORD PTR [rbx]
   14000375c:	mov    rdi,QWORD PTR [rax+0x30]
   140003760:	mov    rcx,rdi
   140003763:	call   QWORD PTR [rip+0x5c8f]        # 0x1400093f8
   140003769:	lea    r8,[rsp+0x70]
   14000376e:	mov    rcx,rbx
   140003771:	lea    rdx,[rip+0x66d8]        # 0x140009e50
   140003778:	call   rdi
   14000377a:	mov    esi,eax
   14000377c:	test   eax,eax
   14000377e:	js     0x1400038a4
   140003784:	mov    rbx,QWORD PTR [rsp+0x30]
   140003789:	mov    rax,QWORD PTR [rbx]
   14000378c:	mov    rdi,QWORD PTR [rax+0x38]
   140003790:	mov    rcx,rdi
   140003793:	call   QWORD PTR [rip+0x5c5f]        # 0x1400093f8
   140003799:	mov    rcx,rbx
   14000379c:	call   rdi
   14000379e:	mov    esi,eax
   1400037a0:	test   eax,eax
   1400037a2:	js     0x1400038a4
   1400037a8:	mov    ebx,0x28
   1400037ad:	mov    ecx,ebx
   1400037af:	call   QWORD PTR [rip+0x5a33]        # 0x1400091e8
   1400037b5:	mov    rcx,rax
   1400037b8:	mov    QWORD PTR [rsp+0x60],rax
   1400037bd:	neg    rcx
   1400037c0:	sbb    esi,esi
   1400037c2:	not    esi
   1400037c4:	and    esi,0x8007000e
   1400037ca:	jl     0x1400037eb
   1400037cc:	mov    r9d,ebx
   1400037cf:	lea    r8,[rip+0x65ca]        # 0x140009da0
   1400037d6:	mov    edx,ebx
   1400037d8:	mov    rcx,rax
   1400037db:	call   QWORD PTR [rip+0x5bd7]        # 0x1400093b8
   1400037e1:	lea    eax,[rbx-0x9]
   1400037e4:	mov    WORD PTR [rsp+0x58],ax
   1400037e9:	jmp    0x1400037fc
   1400037eb:	xor    eax,eax
   1400037ed:	mov    QWORD PTR [rsp+0x58],rax
   1400037f2:	mov    QWORD PTR [rsp+0x60],rax
   1400037f7:	mov    QWORD PTR [rsp+0x68],rax
   1400037fc:	test   esi,esi
   1400037fe:	js     0x1400035b1
   140003804:	mov    rbx,QWORD PTR [rsp+0x30]
   140003809:	mov    rax,QWORD PTR [rbx]
   14000380c:	mov    rdi,QWORD PTR [rax+0x30]
   140003810:	mov    rcx,rdi
   140003813:	call   QWORD PTR [rip+0x5bdf]        # 0x1400093f8
   140003819:	lea    r8,[rsp+0x58]
   14000381e:	mov    rcx,rbx
   140003821:	lea    rdx,[rip+0x6610]        # 0x140009e38
   140003828:	call   rdi
   14000382a:	mov    esi,eax
   14000382c:	test   eax,eax
   14000382e:	js     0x1400038a4
   140003830:	mov    rbx,QWORD PTR [rsp+0x30]
   140003835:	mov    rax,QWORD PTR [rbx]
   140003838:	mov    rdi,QWORD PTR [rax+0x38]
   14000383c:	mov    rcx,rdi
   14000383f:	call   QWORD PTR [rip+0x5bb3]        # 0x1400093f8
   140003845:	mov    rcx,rbx
   140003848:	call   rdi
   14000384a:	mov    esi,eax
   14000384c:	test   eax,eax
   14000384e:	js     0x1400038a4
   140003850:	mov    rbx,QWORD PTR [rsp+0x40]
   140003855:	mov    rax,QWORD PTR [rbx]
   140003858:	mov    rdi,QWORD PTR [rax]
   14000385b:	mov    rcx,rdi
   14000385e:	call   QWORD PTR [rip+0x5b94]        # 0x1400093f8
   140003864:	lea    r8,[rsp+0x50]
   140003869:	mov    rcx,rbx
   14000386c:	lea    rdx,[rip+0x65f5]        # 0x140009e68
   140003873:	call   rdi
   140003875:	mov    esi,eax
   140003877:	test   eax,eax
   140003879:	js     0x1400038a4
   14000387b:	mov    rbx,QWORD PTR [rsp+0x50]
   140003880:	mov    rax,QWORD PTR [rbx]
   140003883:	mov    rdi,QWORD PTR [rax+0x30]
   140003887:	mov    rcx,rdi
   14000388a:	call   QWORD PTR [rip+0x5b68]        # 0x1400093f8
   140003890:	mov    r8d,0x1
   140003896:	mov    rdx,r14
   140003899:	mov    rcx,rbx
   14000389c:	call   rdi
   14000389e:	mov    esi,eax
   1400038a0:	test   eax,eax
   1400038a2:	jns    0x1400038ab
   1400038a4:	mov    ecx,eax
   1400038a6:	call   0x140008090
   1400038ab:	lea    rcx,[rsp+0x70]
   1400038b0:	call   QWORD PTR [rip+0x592a]        # 0x1400091e0
   1400038b6:	lea    rcx,[rsp+0x58]
   1400038bb:	call   QWORD PTR [rip+0x591f]        # 0x1400091e0
   1400038c1:	mov    ecx,esi
   1400038c3:	call   0x140007fa8
   1400038c8:	mov    rbx,QWORD PTR [rsp+0x48]
   1400038cd:	test   rbx,rbx
   1400038d0:	je     0x1400038ec
   1400038d2:	mov    rax,QWORD PTR [rbx]
   1400038d5:	mov    rdi,QWORD PTR [rax+0x10]
   1400038d9:	mov    rcx,rdi
   1400038dc:	call   QWORD PTR [rip+0x5b16]        # 0x1400093f8
   1400038e2:	mov    rcx,rbx
   1400038e5:	call   rdi
   1400038e7:	mov    QWORD PTR [rsp+0x48],r15
   1400038ec:	mov    rbx,QWORD PTR [rsp+0x50]
   1400038f1:	test   rbx,rbx
   1400038f4:	je     0x140003910
   1400038f6:	mov    rax,QWORD PTR [rbx]
   1400038f9:	mov    rdi,QWORD PTR [rax+0x10]
   1400038fd:	mov    rcx,rdi
   140003900:	call   QWORD PTR [rip+0x5af2]        # 0x1400093f8
   140003906:	mov    rcx,rbx
   140003909:	call   rdi
   14000390b:	mov    QWORD PTR [rsp+0x50],r15
   140003910:	mov    rbx,QWORD PTR [rsp+0x30]
   140003915:	test   rbx,rbx
   140003918:	je     0x140003934
   14000391a:	mov    rax,QWORD PTR [rbx]
   14000391d:	mov    rdi,QWORD PTR [rax+0x10]
   140003921:	mov    rcx,rdi
   140003924:	call   QWORD PTR [rip+0x5ace]        # 0x1400093f8
   14000392a:	mov    rcx,rbx
   14000392d:	call   rdi
   14000392f:	mov    QWORD PTR [rsp+0x30],r15
   140003934:	mov    rbx,QWORD PTR [rsp+0x40]
   140003939:	test   rbx,rbx
   14000393c:	je     0x140003953
   14000393e:	mov    rax,QWORD PTR [rbx]
   140003941:	mov    rdi,QWORD PTR [rax+0x10]
   140003945:	mov    rcx,rdi
   140003948:	call   QWORD PTR [rip+0x5aaa]        # 0x1400093f8
   14000394e:	mov    rcx,rbx
   140003951:	call   rdi
   140003953:	mov    eax,esi
   140003955:	mov    rcx,QWORD PTR [rbp+0x1a0]
   14000395c:	xor    rcx,rsp
   14000395f:	call   0x1400085f0
   140003964:	lea    r11,[rsp+0x2b0]
   14000396c:	mov    rbx,QWORD PTR [r11+0x20]
   140003970:	mov    rsi,QWORD PTR [r11+0x30]
   140003974:	mov    rdi,QWORD PTR [r11+0x38]
   140003978:	mov    rsp,r11
   14000397b:	pop    r15
   14000397d:	pop    r14
   14000397f:	pop    rbp
   140003980:	ret    
   140003981:	int3   
   140003982:	int3   
   140003983:	int3   
   140003984:	int3   
   140003985:	int3   
   140003986:	int3   
   140003987:	int3   
   140003988:	mov    QWORD PTR [rsp+0x8],rbx
   14000398d:	mov    QWORD PTR [rsp+0x10],rsi
   140003992:	push   rbp
   140003993:	push   rdi
   140003994:	push   r13
   140003996:	push   r14
   140003998:	push   r15
   14000399a:	lea    rbp,[rsp-0x37]
   14000399f:	sub    rsp,0xc0
   1400039a6:	and    QWORD PTR [rbp+0x77],0x0
   1400039ab:	mov    r14,rdx
   1400039ae:	movsxd r15,ecx
   1400039b1:	xor    ecx,ecx
   1400039b3:	call   0x140007fa8
   1400039b8:	call   0x1400041fc
   1400039bd:	mov    rsi,QWORD PTR [rip+0x8cec]        # 0x14000c6b0
   1400039c4:	mov    r13d,0x1
   1400039ca:	test   rsi,rsi
   1400039cd:	je     0x140003a19
   1400039cf:	cmp    DWORD PTR [rsi+0x18],0x0
   1400039d3:	jne    0x140003a06
   1400039d5:	mov    rcx,QWORD PTR [rsi+0x8]
   1400039d9:	call   QWORD PTR [rip+0x5729]        # 0x140009108
   1400039df:	test   rax,rax
   1400039e2:	je     0x140003a02
   1400039e4:	mov    rcx,QWORD PTR [rsi+0x8]
   1400039e8:	call   QWORD PTR [rip+0x571a]        # 0x140009108
   1400039ee:	mov    rcx,rax
   1400039f1:	mov    rbx,rax
   1400039f4:	call   QWORD PTR [rip+0x59fe]        # 0x1400093f8
   1400039fa:	call   rbx
   1400039fc:	mov    edi,eax
   1400039fe:	test   eax,eax
   140003a00:	js     0x140003a0b
   140003a02:	mov    DWORD PTR [rsi+0x18],r13d
   140003a06:	mov    rsi,QWORD PTR [rsi]
   140003a09:	jmp    0x1400039ca
   140003a0b:	mov    ecx,eax
   140003a0d:	call   0x140008090
   140003a12:	call   0x140001c44
   140003a17:	jmp    0x140003a1b
   140003a19:	xor    edi,edi
   140003a1b:	mov    ecx,edi
   140003a1d:	call   0x140007fa8
   140003a22:	test   edi,edi
   140003a24:	jns    0x140003a2d
   140003a26:	mov    ecx,edi
   140003a28:	call   0x140008090
   140003a2d:	mov    ecx,edi
   140003a2f:	call   0x140007fa8
   140003a34:	test   edi,edi
   140003a36:	jns    0x140003a44
   140003a38:	mov    ecx,edi
   140003a3a:	call   0x140008090
   140003a3f:	jmp    0x140003d9a
   140003a44:	lea    rcx,[rbp+0x77]
   140003a48:	call   0x140004688
   140003a4d:	mov    edi,eax
   140003a4f:	test   eax,eax
   140003a51:	jns    0x140003a57
   140003a53:	mov    ecx,eax
   140003a55:	jmp    0x140003a3a
   140003a57:	xor    esi,esi
   140003a59:	cmp    r15d,r13d
   140003a5c:	jle    0x140003b89
   140003a62:	mov    rcx,QWORD PTR [r14+0x8]
   140003a66:	lea    rdx,[rip+0x600b]        # 0x140009a78
   140003a6d:	call   QWORD PTR [rip+0x593d]        # 0x1400093b0
   140003a73:	test   eax,eax
   140003a75:	jne    0x140003ae6
   140003a77:	xor    edi,edi
   140003a79:	cmp    DWORD PTR [rip+0x8cd9],esi        # 0x14000c758
   140003a7f:	jne    0x140003aaa
   140003a81:	xor    edx,edx
   140003a83:	xor    ecx,ecx
   140003a85:	call   QWORD PTR [rip+0x576d]        # 0x1400091f8
   140003a8b:	test   eax,eax
   140003a8d:	js     0x140003a98
   140003a8f:	mov    DWORD PTR [rip+0x8cc2],r13d        # 0x14000c758
   140003a96:	jmp    0x140003aaa
   140003a98:	mov    ebx,0x80010106
   140003a9d:	cmp    eax,ebx
   140003a9f:	je     0x140003aaa
   140003aa1:	mov    ecx,eax
   140003aa3:	mov    edi,eax
   140003aa5:	call   0x140008090
   140003aaa:	mov    ecx,edi
   140003aac:	call   0x140007fa8
   140003ab1:	test   edi,edi
   140003ab3:	jns    0x140003abc
   140003ab5:	mov    ecx,edi
   140003ab7:	call   0x140008090
   140003abc:	mov    ecx,edi
   140003abe:	call   0x140007fa8
   140003ac3:	test   edi,edi
   140003ac5:	js     0x140003a38
   140003acb:	mov    edx,r13d
   140003ace:	mov    rcx,QWORD PTR [rbp+0x77]
   140003ad2:	call   0x1400019ec
   140003ad7:	mov    edi,eax
   140003ad9:	test   eax,eax
   140003adb:	jns    0x140003d98
   140003ae1:	jmp    0x140003a53
   140003ae6:	mov    rcx,QWORD PTR [r14+0x8]
   140003aea:	lea    rdx,[rip+0x5f9f]        # 0x140009a90
   140003af1:	call   QWORD PTR [rip+0x58b9]        # 0x1400093b0
   140003af7:	test   eax,eax
   140003af9:	jne    0x140003b56
   140003afb:	xor    edi,edi
   140003afd:	cmp    DWORD PTR [rip+0x8c55],esi        # 0x14000c758
   140003b03:	jne    0x140003b2e
   140003b05:	xor    edx,edx
   140003b07:	xor    ecx,ecx
   140003b09:	call   QWORD PTR [rip+0x56e9]        # 0x1400091f8
   140003b0f:	test   eax,eax
   140003b11:	js     0x140003b1c
   140003b13:	mov    DWORD PTR [rip+0x8c3e],r13d        # 0x14000c758
   140003b1a:	jmp    0x140003b2e
   140003b1c:	mov    ebx,0x80010106
   140003b21:	cmp    eax,ebx
   140003b23:	je     0x140003b2e
   140003b25:	mov    ecx,eax
   140003b27:	mov    edi,eax
   140003b29:	call   0x140008090
   140003b2e:	mov    ecx,edi
   140003b30:	call   0x140007fa8
   140003b35:	test   edi,edi
   140003b37:	jns    0x140003b40
   140003b39:	mov    ecx,edi
   140003b3b:	call   0x140008090
   140003b40:	mov    ecx,edi
   140003b42:	call   0x140007fa8
   140003b47:	test   edi,edi
   140003b49:	js     0x140003a38
   140003b4f:	xor    edx,edx
   140003b51:	jmp    0x140003ace
   140003b56:	mov    rcx,QWORD PTR [r14+r15*8-0x8]
   140003b5b:	lea    rdx,[rip+0x5f4e]        # 0x140009ab0
   140003b62:	call   QWORD PTR [rip+0x5848]        # 0x1400093b0
   140003b68:	test   eax,eax
   140003b6a:	je     0x140003b82
   140003b6c:	mov    rcx,QWORD PTR [r14+r15*8-0x8]
   140003b71:	lea    rdx,[rip+0x5f50]        # 0x140009ac8
   140003b78:	call   QWORD PTR [rip+0x5832]        # 0x1400093b0
   140003b7e:	test   eax,eax
   140003b80:	jne    0x140003b89
   140003b82:	mov    esi,r13d
   140003b85:	xor    edx,edx
   140003b87:	jmp    0x140003b8e
   140003b89:	mov    edx,0x2
   140003b8e:	xor    edi,edi
   140003b90:	mov    ebx,0x80010106
   140003b95:	cmp    DWORD PTR [rip+0x8bbd],edi        # 0x14000c758
   140003b9b:	jne    0x140003bbf
   140003b9d:	xor    ecx,ecx
   140003b9f:	call   QWORD PTR [rip+0x5653]        # 0x1400091f8
   140003ba5:	test   eax,eax
   140003ba7:	js     0x140003bb2
   140003ba9:	mov    DWORD PTR [rip+0x8ba8],r13d        # 0x14000c758
   140003bb0:	jmp    0x140003bbf
   140003bb2:	cmp    eax,ebx
   140003bb4:	je     0x140003bbf
   140003bb6:	mov    ecx,eax
   140003bb8:	mov    edi,eax
   140003bba:	call   0x140008090
   140003bbf:	mov    ecx,edi
   140003bc1:	call   0x140007fa8
   140003bc6:	test   edi,edi
   140003bc8:	jns    0x140003bd1
   140003bca:	mov    ecx,edi
   140003bcc:	call   0x140008090
   140003bd1:	mov    ecx,edi
   140003bd3:	call   0x140007fa8
   140003bd8:	test   edi,edi
   140003bda:	js     0x140003a38
   140003be0:	and    QWORD PTR [rsp+0x40],0x0
   140003be6:	xor    r9d,r9d
   140003be9:	and    DWORD PTR [rsp+0x38],0x0
   140003bee:	xor    r8d,r8d
   140003bf1:	and    QWORD PTR [rsp+0x30],0x0
   140003bf7:	or     edx,0xffffffff
   140003bfa:	mov    DWORD PTR [rsp+0x28],0x3
   140003c02:	xor    ecx,ecx
   140003c04:	mov    DWORD PTR [rsp+0x20],0x5
   140003c0c:	call   QWORD PTR [rip+0x55ae]        # 0x1400091c0
   140003c12:	mov    edi,eax
   140003c14:	test   eax,eax
   140003c16:	jns    0x140003c1f
   140003c18:	mov    ecx,eax
   140003c1a:	call   0x140008090
   140003c1f:	mov    ecx,edi
   140003c21:	call   0x140007fa8
   140003c26:	test   edi,edi
   140003c28:	js     0x140003a38
   140003c2e:	xor    edx,edx
   140003c30:	test   esi,esi
   140003c32:	je     0x140003d44
   140003c38:	xor    ecx,ecx
   140003c3a:	call   QWORD PTR [rip+0x55b8]        # 0x1400091f8
   140003c40:	mov    edi,eax
   140003c42:	call   QWORD PTR [rip+0x5588]        # 0x1400091d0
   140003c48:	cmp    edi,ebx
   140003c4a:	je     0x140003d3a
   140003c50:	test   edi,edi
   140003c52:	je     0x140003d3a
   140003c58:	cmp    edi,r13d
   140003c5b:	je     0x140003c6a
   140003c5d:	test   edi,edi
   140003c5f:	jns    0x140003d9a
   140003c65:	jmp    0x140003a38
   140003c6a:	mov    rcx,QWORD PTR [rbp+0x77]
   140003c6e:	call   0x140004790
   140003c73:	mov    edi,eax
   140003c75:	test   eax,eax
   140003c77:	js     0x140003a53
   140003c7d:	xor    ecx,ecx
   140003c7f:	call   0x140007fa8
   140003c84:	xor    ecx,ecx
   140003c86:	call   0x140007fa8
   140003c8b:	mov    rax,QWORD PTR [rbp+0x77]
   140003c8f:	or     ebx,0xffffffff
   140003c92:	mov    edx,ebx
   140003c94:	xor    edi,edi
   140003c96:	mov    rcx,QWORD PTR [rax+0x40]
   140003c9a:	call   QWORD PTR [rip+0x5438]        # 0x1400090d8
   140003ca0:	cmp    eax,ebx
   140003ca2:	jne    0x140003cce
   140003ca4:	call   QWORD PTR [rip+0x53e6]        # 0x140009090
   140003caa:	test   eax,eax
   140003cac:	jne    0x140003cb5
   140003cae:	mov    edi,0x80004005
   140003cb3:	jmp    0x140003cc7
   140003cb5:	movzx  edi,ax
   140003cb8:	or     edi,0x80070000
   140003cbe:	test   eax,eax
   140003cc0:	cmovle edi,eax
   140003cc3:	test   edi,edi
   140003cc5:	jns    0x140003cce
   140003cc7:	mov    ecx,edi
   140003cc9:	call   0x140008090
   140003cce:	mov    ecx,edi
   140003cd0:	call   0x140007fa8
   140003cd5:	test   edi,edi
   140003cd7:	jns    0x140003ce0
   140003cd9:	mov    ecx,edi
   140003cdb:	call   0x140008090
   140003ce0:	mov    ecx,edi
   140003ce2:	call   0x140007fa8
   140003ce7:	xor    ecx,ecx
   140003ce9:	call   0x140007fa8
   140003cee:	test   edi,edi
   140003cf0:	js     0x140003a38
   140003cf6:	mov    rbx,QWORD PTR [rbp+0x77]
   140003cfa:	xor    edi,edi
   140003cfc:	xor    esi,esi
   140003cfe:	movsxd r14,DWORD PTR [rbx+0x1c]
   140003d02:	test   r14,r14
   140003d05:	jle    0x140003d2e
   140003d07:	mov    rax,QWORD PTR [rbx+0x20]
   140003d0b:	mov    rax,QWORD PTR [rax+rsi*8]
   140003d0f:	mov    ecx,DWORD PTR [rax]
   140003d11:	call   QWORD PTR [rip+0x5499]        # 0x1400091b0
   140003d17:	mov    edi,eax
   140003d19:	test   eax,eax
   140003d1b:	js     0x140003d27
   140003d1d:	add    rsi,r13
   140003d20:	cmp    rsi,r14
   140003d23:	jl     0x140003d07
   140003d25:	jmp    0x140003d2e
   140003d27:	mov    ecx,eax
   140003d29:	call   0x140008090
   140003d2e:	mov    ecx,edi
   140003d30:	call   0x140007fa8
   140003d35:	jmp    0x140003c5d
   140003d3a:	mov    edi,0x8000ffff
   140003d3f:	jmp    0x140003a38
   140003d44:	mov    r8d,0x6c
   140003d4a:	lea    rcx,[rbp-0x35]
   140003d4e:	call   0x140008c8e
   140003d53:	and    QWORD PTR [rbp-0x31],0x0
   140003d58:	lea    rax,[rip+0x5d81]        # 0x140009ae0
   140003d5f:	mov    QWORD PTR [rbp-0x29],rax
   140003d63:	lea    rcx,[rbp-0x39]
   140003d67:	lea    rax,[rip+0x5d82]        # 0x140009af0
   140003d6e:	mov    DWORD PTR [rbp-0x39],0x70
   140003d75:	mov    QWORD PTR [rbp-0x21],rax
   140003d79:	mov    DWORD PTR [rbp-0x35],0x500
   140003d80:	mov    DWORD PTR [rbp-0x9],r13d
   140003d84:	call   QWORD PTR [rip+0x53f6]        # 0x140009180
   140003d8a:	xor    ecx,ecx
   140003d8c:	call   0x140007fa8
   140003d91:	xor    ecx,ecx
   140003d93:	call   0x140007fa8
   140003d98:	xor    edi,edi
   140003d9a:	call   0x140001c44
   140003d9f:	mov    ecx,edi
   140003da1:	call   0x140007fa8
   140003da6:	mov    rbx,QWORD PTR [rbp+0x77]
   140003daa:	test   rbx,rbx
   140003dad:	je     0x140003df9
   140003daf:	or     eax,0xffffffff
   140003db2:	lock xadd DWORD PTR [rbx],eax
   140003db6:	cmp    eax,r13d
   140003db9:	jne    0x140003df9
   140003dbb:	mov    rbx,QWORD PTR [rbp+0x77]
   140003dbf:	mov    rcx,QWORD PTR [rbx+0x40]
   140003dc3:	test   rcx,rcx
   140003dc6:	je     0x140003dd3
   140003dc8:	call   QWORD PTR [rip+0x52fa]        # 0x1400090c8
   140003dce:	and    QWORD PTR [rbx+0x40],0x0
   140003dd3:	lea    rcx,[rbx+0x18]
   140003dd7:	call   0x140005294
   140003ddc:	lea    rcx,[rbx+0x8]
   140003de0:	call   0x140005294
   140003de5:	call   QWORD PTR [rip+0x5275]        # 0x140009060
   140003deb:	mov    r8,rbx
   140003dee:	xor    edx,edx
   140003df0:	mov    rcx,rax
   140003df3:	call   QWORD PTR [rip+0x5257]        # 0x140009050
   140003df9:	lea    r11,[rsp+0xc0]
   140003e01:	mov    eax,edi
   140003e03:	mov    rbx,QWORD PTR [r11+0x30]
   140003e07:	mov    rsi,QWORD PTR [r11+0x38]
   140003e0b:	mov    rsp,r11
   140003e0e:	pop    r15
   140003e10:	pop    r14
   140003e12:	pop    r13
   140003e14:	pop    rdi
   140003e15:	pop    rbp
   140003e16:	ret    
   140003e17:	int3   
   140003e18:	int3   
   140003e19:	int3   
   140003e1a:	int3   
   140003e1b:	int3   
   140003e1c:	int3   
   140003e1d:	int3   
   140003e1e:	int3   
   140003e1f:	int3   
   140003e20:	mov    QWORD PTR [rsp+0x8],rbx
   140003e25:	mov    QWORD PTR [rsp+0x10],rbp
   140003e2a:	mov    QWORD PTR [rsp+0x18],rsi
   140003e2f:	push   rdi
   140003e30:	push   r14
   140003e32:	push   r15
   140003e34:	sub    rsp,0x20
   140003e38:	mov    r14,rdx
   140003e3b:	mov    r15,rcx
   140003e3e:	xor    edi,edi
   140003e40:	xor    ebp,ebp
   140003e42:	call   QWORD PTR [rip+0x5218]        # 0x140009060
   140003e48:	xor    edx,edx
   140003e4a:	lea    r8d,[rdi+0x10]
   140003e4e:	mov    rcx,rax
   140003e51:	call   QWORD PTR [rip+0x51f1]        # 0x140009048
   140003e57:	mov    rsi,rax
   140003e5a:	test   rax,rax
   140003e5d:	je     0x140003eb7
   140003e5f:	cmp    DWORD PTR [rip+0x88bb],edi        # 0x14000c720
   140003e65:	lea    rax,[rip+0x58fc]        # 0x140009768
   140003e6c:	mov    QWORD PTR [rsi],rax
   140003e6f:	mov    DWORD PTR [rsi+0x8],0x1
   140003e76:	je     0x140003e9e
   140003e78:	lea    rcx,[rip+0x8851]        # 0x14000c6d0
   140003e7f:	call   QWORD PTR [rip+0x51eb]        # 0x140009070
   140003e85:	inc    DWORD PTR [rip+0x883d]        # 0x14000c6c8
   140003e8b:	call   QWORD PTR [rip+0x530f]        # 0x1400091a0
   140003e91:	lea    rcx,[rip+0x8838]        # 0x14000c6d0
   140003e98:	call   QWORD PTR [rip+0x51da]        # 0x140009078
   140003e9e:	cmp    DWORD PTR [rip+0x881c],edi        # 0x14000c6c0
   140003ea4:	mov    rbx,rsi
   140003ea7:	je     0x140003eb0
   140003ea9:	mov    ebp,0x80010001
   140003eae:	jmp    0x140003ebe
   140003eb0:	xor    ebx,ebx
   140003eb2:	mov    rdi,rsi
   140003eb5:	jmp    0x140003ec5
   140003eb7:	xor    ebx,ebx
   140003eb9:	mov    ebp,0x8007000e
   140003ebe:	mov    ecx,ebp
   140003ec0:	call   0x140008090
   140003ec5:	mov    ecx,ebp
   140003ec7:	call   0x140007fa8
   140003ecc:	test   rbx,rbx
   140003ecf:	je     0x140003ee6
   140003ed1:	mov    rax,QWORD PTR [rbx]
   140003ed4:	mov    rsi,QWORD PTR [rax+0x10]
   140003ed8:	mov    rcx,rsi
   140003edb:	call   QWORD PTR [rip+0x5517]        # 0x1400093f8
   140003ee1:	mov    rcx,rbx
   140003ee4:	call   rsi
   140003ee6:	test   ebp,ebp
   140003ee8:	jns    0x140003eee
   140003eea:	mov    ecx,ebp
   140003eec:	jmp    0x140003f10
   140003eee:	mov    rax,QWORD PTR [rdi]
   140003ef1:	mov    rbx,QWORD PTR [rax]
   140003ef4:	mov    rcx,rbx
   140003ef7:	call   QWORD PTR [rip+0x54fb]        # 0x1400093f8
   140003efd:	mov    r8,r14
   140003f00:	mov    rdx,r15
   140003f03:	mov    rcx,rdi
   140003f06:	call   rbx
   140003f08:	mov    ebp,eax
   140003f0a:	test   eax,eax
   140003f0c:	jns    0x140003f15
   140003f0e:	mov    ecx,eax
   140003f10:	call   0x140008090
   140003f15:	mov    ecx,ebp
   140003f17:	call   0x140007fa8
   140003f1c:	test   rdi,rdi
   140003f1f:	je     0x140003f36
   140003f21:	mov    rcx,QWORD PTR [rdi]
   140003f24:	mov    rbx,QWORD PTR [rcx+0x10]
   140003f28:	mov    rcx,rbx
   140003f2b:	call   QWORD PTR [rip+0x54c7]        # 0x1400093f8
   140003f31:	mov    rcx,rdi
   140003f34:	call   rbx
   140003f36:	mov    rbx,QWORD PTR [rsp+0x40]
   140003f3b:	mov    eax,ebp
   140003f3d:	mov    rbp,QWORD PTR [rsp+0x48]
   140003f42:	mov    rsi,QWORD PTR [rsp+0x50]
   140003f47:	add    rsp,0x20
   140003f4b:	pop    r15
   140003f4d:	pop    r14
   140003f4f:	pop    rdi
   140003f50:	ret    
   140003f51:	int3   
   140003f52:	int3   
   140003f53:	int3   
   140003f54:	int3   
   140003f55:	int3   
   140003f56:	int3   
   140003f57:	int3   
   140003f58:	mov    rax,rsp
   140003f5b:	mov    QWORD PTR [rax+0x8],rbx
   140003f5f:	mov    QWORD PTR [rax+0x18],rsi
   140003f63:	mov    QWORD PTR [rax+0x20],rdi
   140003f67:	push   rbp
   140003f68:	push   r12
   140003f6a:	push   r13
   140003f6c:	push   r14
   140003f6e:	push   r15
   140003f70:	lea    rbp,[rax-0x198]
   140003f77:	sub    rsp,0x270
   140003f7e:	mov    rax,QWORD PTR [rip+0x8083]        # 0x14000c008
   140003f85:	xor    rax,rsp
   140003f88:	mov    QWORD PTR [rbp+0x160],rax
   140003f8f:	mov    eax,DWORD PTR [rip+0x55fb]        # 0x140009590
   140003f95:	lea    rcx,[rsp+0x50]
   140003f9a:	xor    r13d,r13d
   140003f9d:	mov    DWORD PTR [rsp+0x48],0x1
   140003fa5:	mov    r12,rdx
   140003fa8:	mov    QWORD PTR [rsp+0x38],r13
   140003fad:	mov    r15d,0x104
   140003fb3:	mov    QWORD PTR [rsp+0x40],r13
   140003fb8:	mov    ebx,r13d
   140003fbb:	mov    DWORD PTR [rsp+0x4c],eax
   140003fbf:	mov    edx,r15d
   140003fc2:	mov    QWORD PTR [rsp+0x30],rbx
   140003fc7:	mov    esi,r13d
   140003fca:	mov    edi,r13d
   140003fcd:	call   QWORD PTR [rip+0x513d]        # 0x140009110
   140003fd3:	test   eax,eax
   140003fd5:	jne    0x140004002
   140003fd7:	call   QWORD PTR [rip+0x50b3]        # 0x140009090
   140003fdd:	test   eax,eax
   140003fdf:	jne    0x140003fec
   140003fe1:	mov    r14d,0x80004005
   140003fe7:	jmp    0x14000414f
   140003fec:	movzx  r14d,ax
   140003ff0:	or     r14d,0x80070000
   140003ff7:	test   eax,eax
   140003ff9:	cmovle r14d,eax
   140003ffd:	jmp    0x14000414f
   140004002:	mov    rax,r15
   140004005:	lea    rcx,[rsp+0x50]
   14000400a:	cmp    WORD PTR [rcx],r13w
   14000400e:	je     0x14000401a
   140004010:	add    rcx,0x2
   140004014:	sub    rax,0x1
   140004018:	jne    0x14000400a
   14000401a:	test   rax,rax
   14000401d:	je     0x140004149
   140004023:	sub    r15,rax
   140004026:	mov    eax,0x5c
   14000402b:	cmp    ax,WORD PTR [rsp+r15*2+0x4e]
   140004031:	je     0x140004040
   140004033:	mov    eax,0x2f
   140004038:	cmp    ax,WORD PTR [rsp+r15*2+0x4e]
   14000403e:	jne    0x140004043
   140004040:	dec    r15
   140004043:	mov    eax,r15d
   140004046:	cmp    r15,rax
   140004049:	je     0x140004060
   14000404b:	mov    r14d,0x80070216
   140004051:	mov    ecx,r14d
   140004054:	call   0x140008090
   140004059:	mov    r15d,DWORD PTR [rsp+0x30]
   14000405e:	jmp    0x14000406a
   140004060:	xor    ecx,ecx
   140004062:	call   0x140007fa8
   140004067:	mov    r14d,r13d
   14000406a:	mov    ecx,r14d
   14000406d:	call   0x140007fa8
   140004072:	test   r14d,r14d
   140004075:	jns    0x140004081
   140004077:	mov    ecx,r14d
   14000407a:	call   0x140008090
   14000407f:	jmp    0x1400040a6
   140004081:	lea    r8,[rsp+0x30]
   140004086:	mov    edx,r15d
   140004089:	lea    rcx,[rsp+0x50]
   14000408e:	call   0x140007e80
   140004093:	mov    r14d,eax
   140004096:	test   eax,eax
   140004098:	jns    0x1400040a1
   14000409a:	mov    ecx,eax
   14000409c:	call   0x140008090
   1400040a1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400040a6:	mov    ecx,r14d
   1400040a9:	call   0x140007fa8
   1400040ae:	test   r14d,r14d
   1400040b1:	js     0x14000414f
   1400040b7:	lea    rdx,[rsp+0x30]
   1400040bc:	lea    rcx,[rip+0x58c5]        # 0x140009988
   1400040c3:	call   0x140007dd8
   1400040c8:	mov    r14d,eax
   1400040cb:	test   eax,eax
   1400040cd:	jns    0x1400040d8
   1400040cf:	mov    ecx,eax
   1400040d1:	call   0x140008090
   1400040d6:	jmp    0x140004100
   1400040d8:	mov    edx,DWORD PTR [rsp+0x30]
   1400040dc:	lea    r8,[rsp+0x40]
   1400040e1:	lea    rcx,[rip+0x58a0]        # 0x140009988
   1400040e8:	call   0x140007e80
   1400040ed:	mov    r14d,eax
   1400040f0:	test   eax,eax
   1400040f2:	jns    0x1400040fb
   1400040f4:	mov    ecx,eax
   1400040f6:	call   0x140008090
   1400040fb:	mov    rdi,QWORD PTR [rsp+0x40]
   140004100:	mov    ecx,r14d
   140004103:	call   0x140007fa8
   140004108:	test   r14d,r14d
   14000410b:	js     0x14000414f
   14000410d:	lea    r9,[rsp+0x4c]
   140004112:	mov    QWORD PTR [rsp+0x20],rdi
   140004117:	mov    r8,rbx
   14000411a:	lea    rcx,[rsp+0x38]
   14000411f:	mov    edx,0x3
   140004124:	call   0x140007d18
   140004129:	mov    r14d,eax
   14000412c:	test   eax,eax
   14000412e:	jns    0x14000413e
   140004130:	mov    ecx,eax
   140004132:	call   0x140008090
   140004137:	mov    rsi,QWORD PTR [rsp+0x38]
   14000413c:	jmp    0x140004157
   14000413e:	mov    rax,QWORD PTR [rsp+0x38]
   140004143:	mov    QWORD PTR [r12],rax
   140004147:	jmp    0x140004157
   140004149:	mov    r14d,0x80070057
   14000414f:	mov    ecx,r14d
   140004152:	call   0x140008090
   140004157:	mov    ecx,r14d
   14000415a:	call   0x140007fa8
   14000415f:	test   rdi,rdi
   140004162:	je     0x140004180
   140004164:	call   QWORD PTR [rip+0x4ef6]        # 0x140009060
   14000416a:	lea    r8,[rdi-0x4]
   14000416e:	xor    edx,edx
   140004170:	mov    rcx,rax
   140004173:	call   QWORD PTR [rip+0x4ed7]        # 0x140009050
   140004179:	xor    ecx,ecx
   14000417b:	call   0x140007fa8
   140004180:	test   rbx,rbx
   140004183:	je     0x1400041a1
   140004185:	call   QWORD PTR [rip+0x4ed5]        # 0x140009060
   14000418b:	lea    r8,[rbx-0x4]
   14000418f:	xor    edx,edx
   140004191:	mov    rcx,rax
   140004194:	call   QWORD PTR [rip+0x4eb6]        # 0x140009050
   14000419a:	xor    ecx,ecx
   14000419c:	call   0x140007fa8
   1400041a1:	test   rsi,rsi
   1400041a4:	je     0x1400041c2
   1400041a6:	call   QWORD PTR [rip+0x4eb4]        # 0x140009060
   1400041ac:	lea    r8,[rsi-0x4]
   1400041b0:	xor    edx,edx
   1400041b2:	mov    rcx,rax
   1400041b5:	call   QWORD PTR [rip+0x4e95]        # 0x140009050
   1400041bb:	xor    ecx,ecx
   1400041bd:	call   0x140007fa8
   1400041c2:	mov    eax,r14d
   1400041c5:	mov    rcx,QWORD PTR [rbp+0x160]
   1400041cc:	xor    rcx,rsp
   1400041cf:	call   0x1400085f0
   1400041d4:	lea    r11,[rsp+0x270]
   1400041dc:	mov    rbx,QWORD PTR [r11+0x30]
   1400041e0:	mov    rsi,QWORD PTR [r11+0x40]
   1400041e4:	mov    rdi,QWORD PTR [r11+0x48]
   1400041e8:	mov    rsp,r11
   1400041eb:	pop    r15
   1400041ed:	pop    r14
   1400041ef:	pop    r13
   1400041f1:	pop    r12
   1400041f3:	pop    rbp
   1400041f4:	ret    
   1400041f5:	int3   
   1400041f6:	int3   
   1400041f7:	int3   
   1400041f8:	int3   
   1400041f9:	int3   
   1400041fa:	int3   
   1400041fb:	int3   
   1400041fc:	mov    QWORD PTR [rsp+0x8],rbx
   140004201:	push   rdi
   140004202:	sub    rsp,0x20
   140004206:	call   QWORD PTR [rip+0x4e54]        # 0x140009060
   14000420c:	mov    edi,0x1
   140004211:	xor    edx,edx
   140004213:	mov    rcx,rax
   140004216:	mov    r8d,edi
   140004219:	call   QWORD PTR [rip+0x4e29]        # 0x140009048
   14000421f:	mov    rbx,rax
   140004222:	call   QWORD PTR [rip+0x4e38]        # 0x140009060
   140004228:	mov    r8d,edi
   14000422b:	xor    edx,edx
   14000422d:	mov    rcx,rax
   140004230:	call   QWORD PTR [rip+0x4e12]        # 0x140009048
   140004236:	mov    rdi,rax
   140004239:	xor    ecx,ecx
   14000423b:	call   0x140007fa8
   140004240:	test   rdi,rdi
   140004243:	je     0x140004259
   140004245:	call   QWORD PTR [rip+0x4e15]        # 0x140009060
   14000424b:	mov    r8,rdi
   14000424e:	xor    edx,edx
   140004250:	mov    rcx,rax
   140004253:	call   QWORD PTR [rip+0x4df7]        # 0x140009050
   140004259:	test   rbx,rbx
   14000425c:	je     0x140004272
   14000425e:	call   QWORD PTR [rip+0x4dfc]        # 0x140009060
   140004264:	mov    r8,rbx
   140004267:	xor    edx,edx
   140004269:	mov    rcx,rax
   14000426c:	call   QWORD PTR [rip+0x4dde]        # 0x140009050
   140004272:	xor    eax,eax
   140004274:	mov    rbx,QWORD PTR [rsp+0x30]
   140004279:	add    rsp,0x20
   14000427d:	pop    rdi
   14000427e:	ret    
   14000427f:	int3   
   140004280:	int3   
   140004281:	int3   
   140004282:	int3   
   140004283:	int3   
   140004284:	int3   
   140004285:	int3   
   140004286:	int3   
   140004287:	int3   
   140004288:	int3   
   140004289:	int3   
   14000428a:	int3   
   14000428b:	int3   
   14000428c:	int3   
   14000428d:	int3   
   14000428e:	int3   
   14000428f:	int3   
   140004290:	rex push rbx
   140004292:	sub    rsp,0x90
   140004299:	xor    edx,edx
   14000429b:	mov    rbx,rcx
   14000429e:	lea    rcx,[rsp+0x24]
   1400042a3:	lea    r8d,[rdx+0x6c]
   1400042a7:	call   0x140008c8e
   1400042ac:	and    QWORD PTR [rsp+0x28],0x0
   1400042b2:	lea    rax,[rip+0x5827]        # 0x140009ae0
   1400042b9:	mov    QWORD PTR [rsp+0x30],rax
   1400042be:	lea    rcx,[rsp+0x20]
   1400042c3:	lea    rax,[rip+0x5826]        # 0x140009af0
   1400042ca:	mov    DWORD PTR [rsp+0x20],0x70
   1400042d2:	mov    QWORD PTR [rsp+0x38],rax
   1400042d7:	mov    DWORD PTR [rsp+0x24],0x500
   1400042df:	mov    DWORD PTR [rsp+0x50],0x1
   1400042e7:	call   QWORD PTR [rip+0x4e93]        # 0x140009180
   1400042ed:	xor    ecx,ecx
   1400042ef:	call   0x140007fa8
   1400042f4:	mov    rcx,QWORD PTR [rbx+0x20]
   1400042f8:	test   rcx,rcx
   1400042fb:	je     0x140004303
   1400042fd:	call   QWORD PTR [rip+0x4d7d]        # 0x140009080
   140004303:	xor    ecx,ecx
   140004305:	call   0x140007fa8
   14000430a:	xor    eax,eax
   14000430c:	add    rsp,0x90
   140004313:	pop    rbx
   140004314:	ret    
   140004315:	int3   
   140004316:	int3   
   140004317:	int3   
   140004318:	int3   
   140004319:	int3   
   14000431a:	int3   
   14000431b:	int3   
   14000431c:	int3   
   14000431d:	int3   
   14000431e:	int3   
   14000431f:	int3   
   140004320:	mov    QWORD PTR [rsp+0x10],rbx
   140004325:	mov    QWORD PTR [rsp+0x18],rsi
   14000432a:	push   rdi
   14000432b:	sub    rsp,0x20
   14000432f:	mov    rdi,r8
   140004332:	mov    rsi,rcx
   140004335:	test   r8,r8
   140004338:	jne    0x140004348
   14000433a:	mov    ebx,0x80070057
   14000433f:	mov    ecx,ebx
   140004341:	call   0x140008090
   140004346:	jmp    0x140004364
   140004348:	mov    rax,QWORD PTR [r8]
   14000434b:	mov    rbx,QWORD PTR [rax+0x30]
   14000434f:	mov    rcx,rbx
   140004352:	call   QWORD PTR [rip+0x50a0]        # 0x1400093f8
   140004358:	lea    rdx,[rsp+0x30]
   14000435d:	mov    rcx,rdi
   140004360:	call   rbx
   140004362:	mov    ebx,eax
   140004364:	mov    rcx,QWORD PTR [rsi+0x18]
   140004368:	test   rcx,rcx
   14000436b:	je     0x140004373
   14000436d:	call   QWORD PTR [rip+0x4d0d]        # 0x140009080
   140004373:	mov    ecx,ebx
   140004375:	call   0x140007fa8
   14000437a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000437f:	mov    eax,ebx
   140004381:	mov    rbx,QWORD PTR [rsp+0x38]
   140004386:	add    rsp,0x20
   14000438a:	pop    rdi
   14000438b:	ret    
   14000438c:	int3   
   14000438d:	int3   
   14000438e:	int3   
   14000438f:	int3   
   140004390:	int3   
   140004391:	int3   
   140004392:	int3   
   140004393:	int3   
   140004394:	int3   
   140004395:	int3   
   140004396:	int3   
   140004397:	int3   
   140004398:	int3   
   140004399:	int3   
   14000439a:	int3   
   14000439b:	int3   
   14000439c:	int3   
   14000439d:	int3   
   14000439e:	int3   
   14000439f:	int3   
   1400043a0:	sub    rsp,0x28
   1400043a4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400043a8:	test   rcx,rcx
   1400043ab:	je     0x1400043b3
   1400043ad:	call   QWORD PTR [rip+0x4ccd]        # 0x140009080
   1400043b3:	xor    ecx,ecx
   1400043b5:	call   0x140007fa8
   1400043ba:	xor    eax,eax
   1400043bc:	add    rsp,0x28
   1400043c0:	ret    
   1400043c1:	int3   
   1400043c2:	int3   
   1400043c3:	int3   
   1400043c4:	int3   
   1400043c5:	int3   
   1400043c6:	int3   
   1400043c7:	int3   
   1400043c8:	int3   
   1400043c9:	int3   
   1400043ca:	int3   
   1400043cb:	int3   
   1400043cc:	int3   
   1400043cd:	int3   
   1400043ce:	int3   
   1400043cf:	int3   
   1400043d0:	mov    eax,0x1
   1400043d5:	lock xadd DWORD PTR [rcx+0x18],eax
   1400043da:	inc    eax
   1400043dc:	ret    
   1400043dd:	int3   
   1400043de:	int3   
   1400043df:	int3   
   1400043e0:	int3   
   1400043e1:	int3   
   1400043e2:	int3   
   1400043e3:	int3   
   1400043e4:	int3   
   1400043e5:	int3   
   1400043e6:	int3   
   1400043e7:	int3   
   1400043e8:	int3   
   1400043e9:	int3   
   1400043ea:	int3   
   1400043eb:	int3   
   1400043ec:	int3   
   1400043ed:	int3   
   1400043ee:	int3   
   1400043ef:	int3   
   1400043f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400043f5:	push   rdi
   1400043f6:	sub    rsp,0x20
   1400043fa:	mov    rdi,rcx
   1400043fd:	or     ebx,0xffffffff
   140004400:	lock xadd DWORD PTR [rcx+0x18],ebx
   140004405:	sub    ebx,0x1
   140004408:	jne    0x14000441e
   14000440a:	call   QWORD PTR [rip+0x4c50]        # 0x140009060
   140004410:	mov    r8,rdi
   140004413:	xor    edx,edx
   140004415:	mov    rcx,rax
   140004418:	call   QWORD PTR [rip+0x4c32]        # 0x140009050
   14000441e:	mov    eax,ebx
   140004420:	mov    rbx,QWORD PTR [rsp+0x30]
   140004425:	add    rsp,0x20
   140004429:	pop    rdi
   14000442a:	ret    
   14000442b:	int3   
   14000442c:	int3   
   14000442d:	int3   
   14000442e:	int3   
   14000442f:	int3   
   140004430:	int3   
   140004431:	int3   
   140004432:	int3   
   140004433:	int3   
   140004434:	int3   
   140004435:	int3   
   140004436:	int3   
   140004437:	int3   
   140004438:	int3   
   140004439:	int3   
   14000443a:	int3   
   14000443b:	int3   
   14000443c:	int3   
   14000443d:	int3   
   14000443e:	int3   
   14000443f:	int3   
   140004440:	mov    QWORD PTR [rsp+0x8],rbx
   140004445:	mov    QWORD PTR [rsp+0x10],rsi
   14000444a:	push   rdi
   14000444b:	sub    rsp,0x20
   14000444f:	xor    edi,edi
   140004451:	mov    rsi,rcx
   140004454:	test   r8,r8
   140004457:	jne    0x140004463
   140004459:	mov    ecx,0x80070057
   14000445e:	jmp    0x140004500
   140004463:	mov    QWORD PTR [r8],rdi
   140004466:	mov    rax,QWORD PTR [rdx]
   140004469:	cmp    rax,QWORD PTR [rip+0x5978]        # 0x140009de8
   140004470:	jne    0x14000447f
   140004472:	mov    rax,QWORD PTR [rdx+0x8]
   140004476:	cmp    rax,QWORD PTR [rip+0x5973]        # 0x140009df0
   14000447d:	je     0x140004498
   14000447f:	mov    rax,QWORD PTR [rdx]
   140004482:	cmp    rax,QWORD PTR [rip+0x58cf]        # 0x140009d58
   140004489:	jne    0x14000449d
   14000448b:	mov    rax,QWORD PTR [rdx+0x8]
   14000448f:	cmp    rax,QWORD PTR [rip+0x58ca]        # 0x140009d60
   140004496:	jne    0x14000449d
   140004498:	mov    QWORD PTR [r8],rcx
   14000449b:	jmp    0x1400044e4
   14000449d:	mov    rax,QWORD PTR [rdx]
   1400044a0:	cmp    rax,QWORD PTR [rip+0x58a1]        # 0x140009d48
   1400044a7:	jne    0x1400044bc
   1400044a9:	mov    rax,QWORD PTR [rdx+0x8]
   1400044ad:	cmp    rax,QWORD PTR [rip+0x589c]        # 0x140009d50
   1400044b4:	jne    0x1400044bc
   1400044b6:	lea    rax,[rcx+0x8]
   1400044ba:	jmp    0x1400044d9
   1400044bc:	mov    rax,QWORD PTR [rdx]
   1400044bf:	cmp    rax,QWORD PTR [rip+0x5872]        # 0x140009d38
   1400044c6:	jne    0x1400044fb
   1400044c8:	mov    rax,QWORD PTR [rdx+0x8]
   1400044cc:	cmp    rax,QWORD PTR [rip+0x586d]        # 0x140009d40
   1400044d3:	jne    0x1400044fb
   1400044d5:	lea    rax,[rcx+0x10]
   1400044d9:	test   rcx,rcx
   1400044dc:	jne    0x1400044e1
   1400044de:	mov    rax,rdi
   1400044e1:	mov    QWORD PTR [r8],rax
   1400044e4:	mov    rax,QWORD PTR [rcx]
   1400044e7:	mov    rbx,QWORD PTR [rax+0x8]
   1400044eb:	mov    rcx,rbx
   1400044ee:	call   QWORD PTR [rip+0x4f04]        # 0x1400093f8
   1400044f4:	mov    rcx,rsi
   1400044f7:	call   rbx
   1400044f9:	jmp    0x140004507
   1400044fb:	mov    ecx,0x80004002
   140004500:	mov    edi,ecx
   140004502:	call   0x140008090
   140004507:	mov    ecx,edi
   140004509:	call   0x140007fa8
   14000450e:	mov    rbx,QWORD PTR [rsp+0x30]
   140004513:	mov    eax,edi
   140004515:	mov    rsi,QWORD PTR [rsp+0x38]
   14000451a:	add    rsp,0x20
   14000451e:	pop    rdi
   14000451f:	ret    
   140004520:	int3   
   140004521:	int3   
   140004522:	int3   
   140004523:	int3   
   140004524:	int3   
   140004525:	int3   
   140004526:	int3   
   140004527:	int3   
   140004528:	mov    QWORD PTR [rsp+0x10],rbx
   14000452d:	mov    QWORD PTR [rsp+0x20],rbp
   140004532:	push   rsi
   140004533:	push   rdi
   140004534:	push   r15
   140004536:	sub    rsp,0x20
   14000453a:	movsxd rbp,DWORD PTR [rcx+0x4]
   14000453e:	mov    r15,rdx
   140004541:	mov    rsi,rcx
   140004544:	test   ebp,ebp
   140004546:	jns    0x140004554
   140004548:	mov    edi,0x8000ffff
   14000454d:	mov    ecx,edi
   14000454f:	jmp    0x1400045f3
   140004554:	lea    r8,[rsp+0x50]
   140004559:	mov    ecx,ebp
   14000455b:	call   0x1400074d8
   140004560:	mov    edi,eax
   140004562:	test   eax,eax
   140004564:	jns    0x14000456d
   140004566:	mov    ecx,eax
   140004568:	jmp    0x1400045f3
   14000456d:	mov    edi,DWORD PTR [rsi]
   14000456f:	test   edi,edi
   140004571:	jns    0x14000457e
   140004573:	mov    edi,0x8000ffff
   140004578:	mov    ebx,edi
   14000457a:	mov    ecx,edi
   14000457c:	jmp    0x1400045df
   14000457e:	cmp    DWORD PTR [rsp+0x50],edi
   140004582:	jg     0x140004588
   140004584:	xor    ebx,ebx
   140004586:	jmp    0x1400045e4
   140004588:	mov    DWORD PTR [rsp+0x40],edi
   14000458c:	jmp    0x1400045c7
   14000458e:	test   edi,edi
   140004590:	jne    0x14000459f
   140004592:	mov    edi,0x20
   140004597:	xor    ebx,ebx
   140004599:	mov    DWORD PTR [rsp+0x40],edi
   14000459d:	jmp    0x1400045bc
   14000459f:	lea    r8,[rsp+0x40]
   1400045a4:	mov    ecx,edi
   1400045a6:	call   0x140007554
   1400045ab:	mov    ebx,eax
   1400045ad:	test   eax,eax
   1400045af:	jns    0x1400045b8
   1400045b1:	mov    ecx,eax
   1400045b3:	call   0x140008090
   1400045b8:	mov    edi,DWORD PTR [rsp+0x40]
   1400045bc:	mov    ecx,ebx
   1400045be:	call   0x140007fa8
   1400045c3:	test   ebx,ebx
   1400045c5:	js     0x1400045fa
   1400045c7:	cmp    edi,DWORD PTR [rsp+0x50]
   1400045cb:	jl     0x14000458e
   1400045cd:	mov    edx,edi
   1400045cf:	mov    rcx,rsi
   1400045d2:	call   0x140006a2c
   1400045d7:	mov    ebx,eax
   1400045d9:	test   eax,eax
   1400045db:	jns    0x1400045e4
   1400045dd:	mov    ecx,eax
   1400045df:	call   0x140008090
   1400045e4:	mov    ecx,ebx
   1400045e6:	call   0x140007fa8
   1400045eb:	mov    edi,ebx
   1400045ed:	test   ebx,ebx
   1400045ef:	jns    0x1400045fe
   1400045f1:	mov    ecx,ebx
   1400045f3:	call   0x140008090
   1400045f8:	jmp    0x140004666
   1400045fa:	mov    ecx,ebx
   1400045fc:	jmp    0x1400045df
   1400045fe:	mov    r8d,DWORD PTR [rsi+0x4]
   140004602:	cmp    ebp,r8d
   140004605:	jge    0x140004627
   140004607:	mov    rdx,QWORD PTR [rsi+0x8]
   14000460b:	sub    r8d,ebp
   14000460e:	movsxd r8,r8d
   140004611:	shl    r8,0x3
   140004615:	lea    rcx,[rdx+rbp*8]
   140004619:	add    rcx,0x8
   14000461d:	lea    rdx,[rdx+rbp*8]
   140004621:	call   QWORD PTR [rip+0x4d29]        # 0x140009350
   140004627:	mov    rax,QWORD PTR [rsi+0x8]
   14000462b:	mov    rbx,rbp
   14000462e:	lea    rcx,[rax+rbp*8]
   140004632:	xor    eax,eax
   140004634:	mov    QWORD PTR [rcx],rax
   140004637:	test   rcx,rcx
   14000463a:	je     0x14000463f
   14000463c:	and    QWORD PTR [rcx],rax
   14000463f:	mov    rdi,QWORD PTR [rsi+0x8]
   140004643:	mov    rbp,QWORD PTR [r15]
   140004646:	and    QWORD PTR [r15],rax
   140004649:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14000464d:	test   rcx,rcx
   140004650:	je     0x14000465d
   140004652:	call   QWORD PTR [rip+0x4a70]        # 0x1400090c8
   140004658:	and    QWORD PTR [rdi+rbx*8],0x0
   14000465d:	mov    QWORD PTR [rdi+rbx*8],rbp
   140004661:	inc    DWORD PTR [rsi+0x4]
   140004664:	xor    edi,edi
   140004666:	mov    ecx,edi
   140004668:	call   0x140007fa8
   14000466d:	mov    rbx,QWORD PTR [rsp+0x48]
   140004672:	mov    eax,edi
   140004674:	mov    rbp,QWORD PTR [rsp+0x58]
   140004679:	add    rsp,0x20
   14000467d:	pop    r15
   14000467f:	pop    rdi
   140004680:	pop    rsi
   140004681:	ret    
   140004682:	int3   
   140004683:	int3   
   140004684:	int3   
   140004685:	int3   
   140004686:	int3   
   140004687:	int3   
   140004688:	mov    QWORD PTR [rsp+0x8],rbx
   14000468d:	mov    QWORD PTR [rsp+0x10],rsi
   140004692:	mov    QWORD PTR [rsp+0x18],rdi
   140004697:	push   r14
   140004699:	sub    rsp,0x20
   14000469d:	mov    r14,rcx
   1400046a0:	call   QWORD PTR [rip+0x49ba]        # 0x140009060
   1400046a6:	mov    ebx,0x48
   1400046ab:	xor    edx,edx
   1400046ad:	mov    rcx,rax
   1400046b0:	mov    r8d,ebx
   1400046b3:	call   QWORD PTR [rip+0x498f]        # 0x140009048
   1400046b9:	mov    rsi,rax
   1400046bc:	test   rax,rax
   1400046bf:	je     0x14000470f
   1400046c1:	mov    r8d,ebx
   1400046c4:	xor    edx,edx
   1400046c6:	mov    rcx,rax
   1400046c9:	call   0x140008c8e
   1400046ce:	mov    DWORD PTR [rsi],0x1
   1400046d4:	mov    rcx,rsi
   1400046d7:	and    DWORD PTR [rsi+0x8],0x0
   1400046db:	mov    rbx,rsi
   1400046de:	and    DWORD PTR [rsi+0xc],0x0
   1400046e2:	and    QWORD PTR [rsi+0x10],0x0
   1400046e7:	and    DWORD PTR [rsi+0x18],0x0
   1400046eb:	and    DWORD PTR [rsi+0x1c],0x0
   1400046ef:	and    QWORD PTR [rsi+0x20],0x0
   1400046f4:	and    QWORD PTR [rsi+0x40],0x0
   1400046f9:	call   0x140004e38
   1400046fe:	mov    edi,eax
   140004700:	test   eax,eax
   140004702:	jns    0x140004708
   140004704:	mov    ecx,eax
   140004706:	jmp    0x140004718
   140004708:	xor    ebx,ebx
   14000470a:	mov    QWORD PTR [r14],rsi
   14000470d:	jmp    0x14000471d
   14000470f:	mov    edi,0x8007000e
   140004714:	xor    ebx,ebx
   140004716:	mov    ecx,edi
   140004718:	call   0x140008090
   14000471d:	mov    ecx,edi
   14000471f:	call   0x140007fa8
   140004724:	test   rbx,rbx
   140004727:	je     0x14000476f
   140004729:	or     eax,0xffffffff
   14000472c:	lock xadd DWORD PTR [rbx],eax
   140004730:	cmp    eax,0x1
   140004733:	jne    0x14000476f
   140004735:	mov    rcx,QWORD PTR [rbx+0x40]
   140004739:	test   rcx,rcx
   14000473c:	je     0x140004749
   14000473e:	call   QWORD PTR [rip+0x4984]        # 0x1400090c8
   140004744:	and    QWORD PTR [rbx+0x40],0x0
   140004749:	lea    rcx,[rbx+0x18]
   14000474d:	call   0x140005294
   140004752:	lea    rcx,[rbx+0x8]
   140004756:	call   0x140005294
   14000475b:	call   QWORD PTR [rip+0x48ff]        # 0x140009060
   140004761:	mov    r8,rbx
   140004764:	xor    edx,edx
   140004766:	mov    rcx,rax
   140004769:	call   QWORD PTR [rip+0x48e1]        # 0x140009050
   14000476f:	mov    rbx,QWORD PTR [rsp+0x30]
   140004774:	mov    eax,edi
   140004776:	mov    rdi,QWORD PTR [rsp+0x40]
   14000477b:	mov    rsi,QWORD PTR [rsp+0x38]
   140004780:	add    rsp,0x20
   140004784:	pop    r14
   140004786:	ret    
   140004787:	int3   
   140004788:	int3   
   140004789:	int3   
   14000478a:	int3   
   14000478b:	int3   
   14000478c:	int3   
   14000478d:	int3   
   14000478e:	int3   
   14000478f:	int3   
   140004790:	mov    QWORD PTR [rsp+0x10],rbx
   140004795:	mov    QWORD PTR [rsp+0x18],rbp
   14000479a:	push   rsi
   14000479b:	push   rdi
   14000479c:	push   r13
   14000479e:	push   r14
   1400047a0:	push   r15
   1400047a2:	sub    rsp,0x30
   1400047a6:	movsxd r15,DWORD PTR [rcx+0x1c]
   1400047aa:	xor    ebx,ebx
   1400047ac:	xor    r14d,r14d
   1400047af:	mov    QWORD PTR [rsp+0x60],rbx
   1400047b4:	mov    rbp,rcx
   1400047b7:	test   r15,r15
   1400047ba:	jle    0x140004850
   1400047c0:	mov    rax,QWORD PTR [rbp+0x20]
   1400047c4:	mov    r13,QWORD PTR [rax+r14*8]
   1400047c8:	test   rbx,rbx
   1400047cb:	je     0x1400047e8
   1400047cd:	mov    rax,QWORD PTR [rbx]
   1400047d0:	mov    rdi,QWORD PTR [rax+0x10]
   1400047d4:	mov    rcx,rdi
   1400047d7:	call   QWORD PTR [rip+0x4c1b]        # 0x1400093f8
   1400047dd:	mov    rcx,rbx
   1400047e0:	call   rdi
   1400047e2:	and    QWORD PTR [rsp+0x60],0x0
   1400047e8:	mov    rcx,QWORD PTR [r13+0x18]
   1400047ec:	call   QWORD PTR [rip+0x4916]        # 0x140009108
   1400047f2:	mov    rcx,rax
   1400047f5:	mov    rbx,rax
   1400047f8:	call   QWORD PTR [rip+0x4bfa]        # 0x1400093f8
   1400047fe:	lea    rdx,[rsp+0x60]
   140004803:	lea    rcx,[rip+0x55ce]        # 0x140009dd8
   14000480a:	call   rbx
   14000480c:	mov    esi,eax
   14000480e:	test   eax,eax
   140004810:	js     0x140004937
   140004816:	mov    rdx,QWORD PTR [rsp+0x60]
   14000481b:	lea    rcx,[r13+0x4]
   14000481f:	mov    r9d,0x5
   140004825:	mov    QWORD PTR [rsp+0x20],r13
   14000482a:	lea    r8d,[r9-0x1]
   14000482e:	call   QWORD PTR [rip+0x4994]        # 0x1400091c8
   140004834:	mov    esi,eax
   140004836:	test   eax,eax
   140004838:	js     0x140004937
   14000483e:	inc    r14
   140004841:	cmp    r14,r15
   140004844:	jge    0x140004850
   140004846:	mov    rbx,QWORD PTR [rsp+0x60]
   14000484b:	jmp    0x1400047c0
   140004850:	mov    rcx,QWORD PTR [rbp+0x40]
   140004854:	test   rcx,rcx
   140004857:	je     0x140004864
   140004859:	call   QWORD PTR [rip+0x4869]        # 0x1400090c8
   14000485f:	and    QWORD PTR [rbp+0x40],0x0
   140004864:	xor    r9d,r9d
   140004867:	xor    r8d,r8d
   14000486a:	xor    ecx,ecx
   14000486c:	lea    edx,[r9+0x1]
   140004870:	call   QWORD PTR [rip+0x485a]        # 0x1400090d0
   140004876:	mov    rcx,QWORD PTR [rbp+0x40]
   14000487a:	mov    rbx,rax
   14000487d:	test   rcx,rcx
   140004880:	je     0x14000488d
   140004882:	call   QWORD PTR [rip+0x4840]        # 0x1400090c8
   140004888:	and    QWORD PTR [rbp+0x40],0x0
   14000488d:	mov    QWORD PTR [rbp+0x40],rbx
   140004891:	cmp    rbx,0x0
   140004895:	jne    0x1400048ba
   140004897:	call   QWORD PTR [rip+0x47f3]        # 0x140009090
   14000489d:	test   eax,eax
   14000489f:	jne    0x1400048a8
   1400048a1:	mov    esi,0x80004005
   1400048a6:	jmp    0x1400048b6
   1400048a8:	movzx  esi,ax
   1400048ab:	or     esi,0x80070000
   1400048b1:	test   eax,eax
   1400048b3:	cmovle esi,eax
   1400048b6:	mov    ecx,esi
   1400048b8:	jmp    0x140004939
   1400048ba:	mov    rdi,rbx
   1400048bd:	lea    rcx,[rip+0x7e0c]        # 0x14000c6d0
   1400048c4:	mov    ebx,DWORD PTR [rbp+0x38]
   1400048c7:	xor    edx,edx
   1400048c9:	xor    esi,esi
   1400048cb:	call   QWORD PTR [rip+0x47b7]        # 0x140009088
   1400048d1:	test   eax,eax
   1400048d3:	jne    0x1400048fd
   1400048d5:	call   QWORD PTR [rip+0x47b5]        # 0x140009090
   1400048db:	test   eax,eax
   1400048dd:	jne    0x1400048e6
   1400048df:	mov    esi,0x80004005
   1400048e4:	jmp    0x1400048f4
   1400048e6:	movzx  esi,ax
   1400048e9:	or     esi,0x80070000
   1400048ef:	test   eax,eax
   1400048f1:	cmovle esi,eax
   1400048f4:	mov    ecx,esi
   1400048f6:	call   0x140008090
   1400048fb:	jmp    0x140004920
   1400048fd:	and    DWORD PTR [rip+0x7dbd],esi        # 0x14000c6c0
   140004903:	mov    DWORD PTR [rip+0x7dbf],ebx        # 0x14000c6c8
   140004909:	mov    DWORD PTR [rip+0x7db5],ebx        # 0x14000c6c4
   14000490f:	mov    QWORD PTR [rip+0x7da2],rdi        # 0x14000c6b8
   140004916:	mov    DWORD PTR [rip+0x7e00],0x1        # 0x14000c720
   140004920:	mov    ecx,esi
   140004922:	call   0x140007fa8
   140004927:	test   esi,esi
   140004929:	js     0x1400048b6
   14000492b:	call   QWORD PTR [rip+0x4887]        # 0x1400091b8
   140004931:	mov    esi,eax
   140004933:	test   eax,eax
   140004935:	jns    0x14000493e
   140004937:	mov    ecx,eax
   140004939:	call   0x140008090
   14000493e:	mov    ecx,esi
   140004940:	call   0x140007fa8
   140004945:	mov    rbx,QWORD PTR [rsp+0x60]
   14000494a:	test   rbx,rbx
   14000494d:	je     0x140004964
   14000494f:	mov    rax,QWORD PTR [rbx]
   140004952:	mov    rdi,QWORD PTR [rax+0x10]
   140004956:	mov    rcx,rdi
   140004959:	call   QWORD PTR [rip+0x4a99]        # 0x1400093f8
   14000495f:	mov    rcx,rbx
   140004962:	call   rdi
   140004964:	mov    rbx,QWORD PTR [rsp+0x68]
   140004969:	mov    eax,esi
   14000496b:	mov    rbp,QWORD PTR [rsp+0x70]
   140004970:	add    rsp,0x30
   140004974:	pop    r15
   140004976:	pop    r14
   140004978:	pop    r13
   14000497a:	pop    rdi
   14000497b:	pop    rsi
   14000497c:	ret    
   14000497d:	int3   
   14000497e:	int3   
   14000497f:	int3   
   140004980:	int3   
   140004981:	int3   
   140004982:	int3   
   140004983:	int3   
   140004984:	int3   
   140004985:	int3   
   140004986:	int3   
   140004987:	int3   
   140004988:	int3   
   140004989:	int3   
   14000498a:	int3   
   14000498b:	int3   
   14000498c:	int3   
   14000498d:	int3   
   14000498e:	int3   
   14000498f:	int3   
   140004990:	mov    QWORD PTR [rsp+0x8],rbx
   140004995:	mov    QWORD PTR [rsp+0x10],rsi
   14000499a:	mov    QWORD PTR [rsp+0x18],rdi
   14000499f:	push   r14
   1400049a1:	sub    rsp,0x20
   1400049a5:	mov    r14,r8
   1400049a8:	mov    rsi,rdx
   1400049ab:	mov    rdi,rcx
   1400049ae:	test   r8,r8
   1400049b1:	jne    0x1400049bc
   1400049b3:	mov    ebx,0x80004003
   1400049b8:	mov    ecx,ebx
   1400049ba:	jmp    0x140004a14
   1400049bc:	mov    rax,QWORD PTR [rip+0x5425]        # 0x140009de8
   1400049c3:	cmp    rax,QWORD PTR [rdx]
   1400049c6:	jne    0x1400049f1
   1400049c8:	mov    rax,QWORD PTR [rip+0x5421]        # 0x140009df0
   1400049cf:	cmp    rax,QWORD PTR [rdx+0x8]
   1400049d3:	jne    0x1400049f1
   1400049d5:	mov    rax,QWORD PTR [rcx]
   1400049d8:	mov    rbx,QWORD PTR [rax+0x8]
   1400049dc:	mov    rcx,rbx
   1400049df:	call   QWORD PTR [rip+0x4a13]        # 0x1400093f8
   1400049e5:	mov    rcx,rdi
   1400049e8:	call   rbx
   1400049ea:	xor    ebx,ebx
   1400049ec:	mov    QWORD PTR [r14],rdi
   1400049ef:	jmp    0x140004a19
   1400049f1:	mov    rax,QWORD PTR [rcx]
   1400049f4:	mov    rbx,QWORD PTR [rax+0x28]
   1400049f8:	mov    rcx,rbx
   1400049fb:	call   QWORD PTR [rip+0x49f7]        # 0x1400093f8
   140004a01:	mov    r8,r14
   140004a04:	mov    rdx,rsi
   140004a07:	mov    rcx,rdi
   140004a0a:	call   rbx
   140004a0c:	mov    ebx,eax
   140004a0e:	test   eax,eax
   140004a10:	jns    0x140004a19
   140004a12:	mov    ecx,eax
   140004a14:	call   0x140008090
   140004a19:	mov    ecx,ebx
   140004a1b:	call   0x140007fa8
   140004a20:	mov    rsi,QWORD PTR [rsp+0x38]
   140004a25:	mov    eax,ebx
   140004a27:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a2c:	mov    rdi,QWORD PTR [rsp+0x40]
   140004a31:	add    rsp,0x20
   140004a35:	pop    r14
   140004a37:	ret    
   140004a38:	int3   
   140004a39:	int3   
   140004a3a:	int3   
   140004a3b:	int3   
   140004a3c:	int3   
   140004a3d:	int3   
   140004a3e:	int3   
   140004a3f:	int3   
   140004a40:	mov    eax,0x1
   140004a45:	lock xadd DWORD PTR [rcx+0x8],eax
   140004a4a:	inc    eax
   140004a4c:	ret    
   140004a4d:	int3   
   140004a4e:	int3   
   140004a4f:	int3   
   140004a50:	int3   
   140004a51:	int3   
   140004a52:	int3   
   140004a53:	int3   
   140004a54:	int3   
   140004a55:	int3   
   140004a56:	int3   
   140004a57:	int3   
   140004a58:	int3   
   140004a59:	int3   
   140004a5a:	int3   
   140004a5b:	int3   
   140004a5c:	int3   
   140004a5d:	int3   
   140004a5e:	int3   
   140004a5f:	int3   
   140004a60:	mov    QWORD PTR [rsp+0x8],rbx
   140004a65:	push   rdi
   140004a66:	sub    rsp,0x20
   140004a6a:	mov    rdi,rcx
   140004a6d:	or     ebx,0xffffffff
   140004a70:	lock xadd DWORD PTR [rcx+0x8],ebx
   140004a75:	sub    ebx,0x1
   140004a78:	jne    0x140004a93
   140004a7a:	call   QWORD PTR [rip+0x45e0]        # 0x140009060
   140004a80:	mov    r8,rdi
   140004a83:	xor    edx,edx
   140004a85:	mov    rcx,rax
   140004a88:	call   QWORD PTR [rip+0x45c2]        # 0x140009050
   140004a8e:	call   0x140001248
   140004a93:	mov    eax,ebx
   140004a95:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a9a:	add    rsp,0x20
   140004a9e:	pop    rdi
   140004a9f:	ret    
   140004aa0:	int3   
   140004aa1:	int3   
   140004aa2:	int3   
   140004aa3:	int3   
   140004aa4:	int3   
   140004aa5:	int3   
   140004aa6:	int3   
   140004aa7:	int3   
   140004aa8:	int3   
   140004aa9:	int3   
   140004aaa:	int3   
   140004aab:	int3   
   140004aac:	int3   
   140004aad:	int3   
   140004aae:	int3   
   140004aaf:	int3   
   140004ab0:	mov    QWORD PTR [rsp+0x8],rbx
   140004ab5:	mov    QWORD PTR [rsp+0x10],rsi
   140004aba:	push   rdi
   140004abb:	sub    rsp,0x20
   140004abf:	mov    rsi,rcx
   140004ac2:	mov    ecx,0x80004002
   140004ac7:	mov    rdi,r8
   140004aca:	test   r8,r8
   140004acd:	jne    0x140004ad6
   140004acf:	mov    ecx,0x80004003
   140004ad4:	jmp    0x140004b0f
   140004ad6:	mov    rax,QWORD PTR [rdx]
   140004ad9:	cmp    rax,QWORD PTR [rip+0x5248]        # 0x140009d28
   140004ae0:	jne    0x140004b0b
   140004ae2:	mov    rax,QWORD PTR [rdx+0x8]
   140004ae6:	cmp    rax,QWORD PTR [rip+0x5243]        # 0x140009d30
   140004aed:	jne    0x140004b0b
   140004aef:	mov    rax,QWORD PTR [rsi]
   140004af2:	mov    rbx,QWORD PTR [rax+0x8]
   140004af6:	mov    rcx,rbx
   140004af9:	call   QWORD PTR [rip+0x48f9]        # 0x1400093f8
   140004aff:	mov    rcx,rsi
   140004b02:	call   rbx
   140004b04:	xor    ecx,ecx
   140004b06:	mov    QWORD PTR [rdi],rsi
   140004b09:	jmp    0x140004b14
   140004b0b:	and    QWORD PTR [r8],0x0
   140004b0f:	call   0x140008090
   140004b14:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b19:	mov    eax,ecx
   140004b1b:	mov    rsi,QWORD PTR [rsp+0x38]
   140004b20:	add    rsp,0x20
   140004b24:	pop    rdi
   140004b25:	ret    
   140004b26:	int3   
   140004b27:	int3   
   140004b28:	int3   
   140004b29:	int3   
   140004b2a:	int3   
   140004b2b:	int3   
   140004b2c:	int3   
   140004b2d:	int3   
   140004b2e:	int3   
   140004b2f:	int3   
   140004b30:	rex push rbx
   140004b32:	sub    rsp,0x20
   140004b36:	test   r9,r9
   140004b39:	jne    0x140004b44
   140004b3b:	mov    ebx,0x80004003
   140004b40:	mov    ecx,ebx
   140004b42:	jmp    0x140004b67
   140004b44:	and    QWORD PTR [r9],0x0
   140004b48:	test   rdx,rdx
   140004b4b:	je     0x140004b54
   140004b4d:	mov    ebx,0x80040110
   140004b52:	jmp    0x140004b40
   140004b54:	mov    rdx,r9
   140004b57:	mov    rcx,r8
   140004b5a:	call   0x140005148
   140004b5f:	mov    ebx,eax
   140004b61:	test   eax,eax
   140004b63:	jns    0x140004b6c
   140004b65:	mov    ecx,eax
   140004b67:	call   0x140008090
   140004b6c:	mov    ecx,ebx
   140004b6e:	call   0x140007fa8
   140004b73:	mov    eax,ebx
   140004b75:	add    rsp,0x20
   140004b79:	pop    rbx
   140004b7a:	ret    
   140004b7b:	int3   
   140004b7c:	int3   
   140004b7d:	int3   
   140004b7e:	int3   
   140004b7f:	int3   
   140004b80:	int3   
   140004b81:	int3   
   140004b82:	int3   
   140004b83:	int3   
   140004b84:	int3   
   140004b85:	int3   
   140004b86:	int3   
   140004b87:	int3   
   140004b88:	int3   
   140004b89:	int3   
   140004b8a:	int3   
   140004b8b:	int3   
   140004b8c:	int3   
   140004b8d:	int3   
   140004b8e:	int3   
   140004b8f:	int3   
   140004b90:	sub    rsp,0x28
   140004b94:	test   edx,edx
   140004b96:	je     0x140004bc9
   140004b98:	cmp    DWORD PTR [rip+0x7b81],0x0        # 0x14000c720
   140004b9f:	je     0x140004bce
   140004ba1:	lea    rcx,[rip+0x7b28]        # 0x14000c6d0
   140004ba8:	call   QWORD PTR [rip+0x44c2]        # 0x140009070
   140004bae:	inc    DWORD PTR [rip+0x7b14]        # 0x14000c6c8
   140004bb4:	call   QWORD PTR [rip+0x45e6]        # 0x1400091a0
   140004bba:	lea    rcx,[rip+0x7b0f]        # 0x14000c6d0
   140004bc1:	call   QWORD PTR [rip+0x44b1]        # 0x140009078
   140004bc7:	jmp    0x140004bce
   140004bc9:	call   0x140001248
   140004bce:	xor    eax,eax
   140004bd0:	add    rsp,0x28
   140004bd4:	ret    
   140004bd5:	int3   
   140004bd6:	int3   
   140004bd7:	int3   
   140004bd8:	int3   
   140004bd9:	int3   
   140004bda:	int3   
   140004bdb:	int3   
   140004bdc:	mov    QWORD PTR [rsp+0x10],rbx
   140004be1:	mov    QWORD PTR [rsp+0x18],rbp
   140004be6:	mov    QWORD PTR [rsp+0x20],rsi
   140004beb:	push   rdi
   140004bec:	push   r12
   140004bee:	push   r13
   140004bf0:	push   r14
   140004bf2:	push   r15
   140004bf4:	sub    rsp,0x20
   140004bf8:	movsxd rbp,edx
   140004bfb:	xor    ebx,ebx
   140004bfd:	mov    rsi,rcx
   140004c00:	cmp    DWORD PTR [rcx],ebp
   140004c02:	je     0x140004d0a
   140004c08:	mov    r14d,DWORD PTR [rcx+0x4]
   140004c0c:	cmp    ebp,r14d
   140004c0f:	cmovl  r14d,ebp
   140004c13:	test   edx,edx
   140004c15:	jle    0x140004c8d
   140004c17:	mov    rcx,rbp
   140004c1a:	mov    rdi,rcx
   140004c1d:	shl    rdi,0x3
   140004c21:	mov    rax,rdi
   140004c24:	shr    rax,0x3
   140004c28:	cmp    rax,rcx
   140004c2b:	je     0x140004c3e
   140004c2d:	mov    ebx,0x80070216
   140004c32:	mov    ecx,ebx
   140004c34:	call   0x140008090
   140004c39:	mov    rdi,QWORD PTR [rsp+0x50]
   140004c3e:	mov    ecx,ebx
   140004c40:	call   0x140007fa8
   140004c45:	test   ebx,ebx
   140004c47:	jns    0x140004c55
   140004c49:	mov    ecx,ebx
   140004c4b:	call   0x140008090
   140004c50:	jmp    0x140004d0a
   140004c55:	call   QWORD PTR [rip+0x4405]        # 0x140009060
   140004c5b:	mov    r8,rdi
   140004c5e:	xor    edx,edx
   140004c60:	mov    rcx,rax
   140004c63:	call   QWORD PTR [rip+0x43df]        # 0x140009048
   140004c69:	mov    rbx,rax
   140004c6c:	test   rax,rax
   140004c6f:	je     0x140004d30
   140004c75:	test   r14d,r14d
   140004c78:	je     0x140004c8d
   140004c7a:	mov    rdx,QWORD PTR [rsi+0x8]
   140004c7e:	mov    rcx,rax
   140004c81:	movsxd r8,r14d
   140004c84:	shl    r8,0x3
   140004c88:	call   0x140008c82
   140004c8d:	cmp    ebp,DWORD PTR [rsi+0x4]
   140004c90:	jge    0x140004cdc
   140004c92:	mov    r12,rbp
   140004c95:	mov    r15d,ebp
   140004c98:	shl    r12,0x3
   140004c9c:	mov    r13,QWORD PTR [rsi+0x8]
   140004ca0:	add    r13,r12
   140004ca3:	je     0x140004ccf
   140004ca5:	mov    rdi,QWORD PTR [r13+0x0]
   140004ca9:	test   rdi,rdi
   140004cac:	je     0x140004ccf
   140004cae:	call   QWORD PTR [rip+0x43ac]        # 0x140009060
   140004cb4:	lea    r8,[rdi-0x4]
   140004cb8:	xor    edx,edx
   140004cba:	mov    rcx,rax
   140004cbd:	call   QWORD PTR [rip+0x438d]        # 0x140009050
   140004cc3:	xor    ecx,ecx
   140004cc5:	call   0x140007fa8
   140004cca:	and    QWORD PTR [r13+0x0],0x0
   140004ccf:	inc    r15d
   140004cd2:	add    r12,0x8
   140004cd6:	cmp    r15d,DWORD PTR [rsi+0x4]
   140004cda:	jl     0x140004c9c
   140004cdc:	mov    rdi,QWORD PTR [rsi+0x8]
   140004ce0:	test   rdi,rdi
   140004ce3:	je     0x140004cfe
   140004ce5:	call   QWORD PTR [rip+0x4375]        # 0x140009060
   140004ceb:	mov    r8,rdi
   140004cee:	xor    edx,edx
   140004cf0:	mov    rcx,rax
   140004cf3:	call   QWORD PTR [rip+0x4357]        # 0x140009050
   140004cf9:	and    QWORD PTR [rsi+0x8],0x0
   140004cfe:	mov    QWORD PTR [rsi+0x8],rbx
   140004d02:	xor    ebx,ebx
   140004d04:	mov    DWORD PTR [rsi+0x4],r14d
   140004d08:	mov    DWORD PTR [rsi],ebp
   140004d0a:	mov    ecx,ebx
   140004d0c:	call   0x140007fa8
   140004d11:	mov    rbp,QWORD PTR [rsp+0x60]
   140004d16:	mov    eax,ebx
   140004d18:	mov    rbx,QWORD PTR [rsp+0x58]
   140004d1d:	mov    rsi,QWORD PTR [rsp+0x68]
   140004d22:	add    rsp,0x20
   140004d26:	pop    r15
   140004d28:	pop    r14
   140004d2a:	pop    r13
   140004d2c:	pop    r12
   140004d2e:	pop    rdi
   140004d2f:	ret    
   140004d30:	mov    ebx,0x8007000e
   140004d35:	jmp    0x140004c49
   140004d3a:	int3   
   140004d3b:	int3   
   140004d3c:	int3   
   140004d3d:	int3   
   140004d3e:	int3   
   140004d3f:	int3   
   140004d40:	mov    QWORD PTR [rsp+0x10],rbx
   140004d45:	mov    QWORD PTR [rsp+0x18],rbp
   140004d4a:	push   rsi
   140004d4b:	push   rdi
   140004d4c:	push   r14
   140004d4e:	sub    rsp,0x20
   140004d52:	movsxd rsi,edx
   140004d55:	xor    ebx,ebx
   140004d57:	mov    rdi,rcx
   140004d5a:	cmp    DWORD PTR [rcx],esi
   140004d5c:	je     0x140004e09
   140004d62:	mov    ebp,DWORD PTR [rcx+0x4]
   140004d65:	cmp    esi,ebp
   140004d67:	cmovl  ebp,esi
   140004d6a:	test   edx,edx
   140004d6c:	jle    0x140004ddc
   140004d6e:	mov    rcx,rsi
   140004d71:	mov    r14,rcx
   140004d74:	shl    r14,0x3
   140004d78:	mov    rax,r14
   140004d7b:	shr    rax,0x3
   140004d7f:	cmp    rax,rcx
   140004d82:	je     0x140004d95
   140004d84:	mov    ebx,0x80070216
   140004d89:	mov    ecx,ebx
   140004d8b:	call   0x140008090
   140004d90:	mov    r14,QWORD PTR [rsp+0x40]
   140004d95:	mov    ecx,ebx
   140004d97:	call   0x140007fa8
   140004d9c:	test   ebx,ebx
   140004d9e:	jns    0x140004da9
   140004da0:	mov    ecx,ebx
   140004da2:	call   0x140008090
   140004da7:	jmp    0x140004e09
   140004da9:	call   QWORD PTR [rip+0x42b1]        # 0x140009060
   140004daf:	mov    r8,r14
   140004db2:	xor    edx,edx
   140004db4:	mov    rcx,rax
   140004db7:	call   QWORD PTR [rip+0x428b]        # 0x140009048
   140004dbd:	mov    rbx,rax
   140004dc0:	test   rax,rax
   140004dc3:	je     0x140004e25
   140004dc5:	test   ebp,ebp
   140004dc7:	je     0x140004ddc
   140004dc9:	mov    rdx,QWORD PTR [rdi+0x8]
   140004dcd:	mov    rcx,rax
   140004dd0:	movsxd r8,ebp
   140004dd3:	shl    r8,0x3
   140004dd7:	call   0x140008c82
   140004ddc:	mov    r14,QWORD PTR [rdi+0x8]
   140004de0:	test   r14,r14
   140004de3:	je     0x140004dfe
   140004de5:	call   QWORD PTR [rip+0x4275]        # 0x140009060
   140004deb:	mov    r8,r14
   140004dee:	xor    edx,edx
   140004df0:	mov    rcx,rax
   140004df3:	call   QWORD PTR [rip+0x4257]        # 0x140009050
   140004df9:	and    QWORD PTR [rdi+0x8],0x0
   140004dfe:	mov    QWORD PTR [rdi+0x8],rbx
   140004e02:	xor    ebx,ebx
   140004e04:	mov    DWORD PTR [rdi+0x4],ebp
   140004e07:	mov    DWORD PTR [rdi],esi
   140004e09:	mov    ecx,ebx
   140004e0b:	call   0x140007fa8
   140004e10:	mov    rbp,QWORD PTR [rsp+0x50]
   140004e15:	mov    eax,ebx
   140004e17:	mov    rbx,QWORD PTR [rsp+0x48]
   140004e1c:	add    rsp,0x20
   140004e20:	pop    r14
   140004e22:	pop    rdi
   140004e23:	pop    rsi
   140004e24:	ret    
   140004e25:	mov    ebx,0x8007000e
   140004e2a:	jmp    0x140004da0
   140004e2f:	int3   
   140004e30:	int3   
   140004e31:	int3   
   140004e32:	int3   
   140004e33:	int3   
   140004e34:	int3   
   140004e35:	int3   
   140004e36:	int3   
   140004e37:	int3   
   140004e38:	mov    r11,rsp
   140004e3b:	push   rbx
   140004e3c:	push   rbp
   140004e3d:	push   rsi
   140004e3e:	push   rdi
   140004e3f:	push   r12
   140004e41:	push   r13
   140004e43:	push   r14
   140004e45:	push   r15
   140004e47:	sub    rsp,0x38
   140004e4b:	mov    rsi,QWORD PTR [rip+0x7856]        # 0x14000c6a8
   140004e52:	xor    ebx,ebx
   140004e54:	and    DWORD PTR [rcx+0x38],ebx
   140004e57:	mov    rbp,rcx
   140004e5a:	test   rsi,rsi
   140004e5d:	je     0x140005128
   140004e63:	mov    eax,DWORD PTR [r11+0x8]
   140004e67:	mov    DWORD PTR [r11+0x10],eax
   140004e6b:	mov    ecx,DWORD PTR [rsi+0x8]
   140004e6e:	test   ecx,ecx
   140004e70:	je     0x140005107
   140004e76:	sub    ecx,0x1
   140004e79:	je     0x1400050fd
   140004e7f:	sub    ecx,0x1
   140004e82:	je     0x140004fdf
   140004e88:	cmp    ecx,0x1
   140004e8b:	jne    0x14000510f
   140004e91:	mov    rax,QWORD PTR [rsi+0x10]
   140004e95:	lea    r13,[rbp+0x18]
   140004e99:	mov    r15d,DWORD PTR [r13+0x4]
   140004e9d:	xor    ebx,ebx
   140004e9f:	mov    rdx,QWORD PTR [r13+0x8]
   140004ea3:	mov    DWORD PTR [rsp+0x90],r15d
   140004eab:	lea    rcx,[rax+0x4]
   140004eaf:	mov    QWORD PTR [rsp+0x20],rcx
   140004eb4:	test   r15d,r15d
   140004eb7:	je     0x140004f7d
   140004ebd:	xor    r14d,r14d
   140004ec0:	mov    edi,r15d
   140004ec3:	test   r15d,r15d
   140004ec6:	jle    0x140004f74
   140004ecc:	mov    r13,rcx
   140004ecf:	mov    r15,rdx
   140004ed2:	mov    eax,edi
   140004ed4:	mov    r8d,0x10
   140004eda:	cdq    
   140004edb:	sub    eax,edx
   140004edd:	mov    rdx,r13
   140004ee0:	sar    eax,1
   140004ee2:	mov    r12d,eax
   140004ee5:	add    eax,r14d
   140004ee8:	mov    DWORD PTR [rsp+0x80],eax
   140004eef:	cdqe   
   140004ef1:	mov    rcx,QWORD PTR [r15+rax*8]
   140004ef5:	add    rcx,0x4
   140004ef9:	call   0x140008c76
   140004efe:	xor    edx,edx
   140004f00:	mov    ecx,eax
   140004f02:	test   eax,eax
   140004f04:	setg   dl
   140004f07:	xor    eax,eax
   140004f09:	test   ecx,ecx
   140004f0b:	sets   al
   140004f0e:	cmp    edx,eax
   140004f10:	jns    0x140004f27
   140004f12:	mov    r14d,DWORD PTR [rsp+0x80]
   140004f1a:	or     eax,0xffffffff
   140004f1d:	inc    r14d
   140004f20:	sub    eax,r12d
   140004f23:	add    edi,eax
   140004f25:	jmp    0x140004f2a
   140004f27:	mov    edi,r12d
   140004f2a:	test   edi,edi
   140004f2c:	jg     0x140004ed2
   140004f2e:	lea    r13,[rbp+0x18]
   140004f32:	cmp    r14d,DWORD PTR [rsp+0x90]
   140004f3a:	jge    0x140004f74
   140004f3c:	mov    rdx,QWORD PTR [r13+0x8]
   140004f40:	mov    r8d,0x10
   140004f46:	mov    rcx,QWORD PTR [rsp+0x20]
   140004f4b:	movsxd rax,r14d
   140004f4e:	mov    rdx,QWORD PTR [rdx+rax*8]
   140004f52:	add    rdx,0x4
   140004f56:	call   0x140008c76
   140004f5b:	xor    edx,edx
   140004f5d:	mov    ecx,eax
   140004f5f:	test   eax,eax
   140004f61:	setg   dl
   140004f64:	xor    eax,eax
   140004f66:	test   ecx,ecx
   140004f68:	sets   al
   140004f6b:	cmp    edx,eax
   140004f6d:	js     0x140004f74
   140004f6f:	mov    dil,0x1
   140004f72:	jmp    0x140004f77
   140004f74:	xor    dil,dil
   140004f77:	mov    rax,QWORD PTR [rsi+0x10]
   140004f7b:	jmp    0x140004f83
   140004f7d:	xor    dil,dil
   140004f80:	xor    r14d,r14d
   140004f83:	test   dil,dil
   140004f86:	jne    0x140004fad
   140004f88:	mov    r8,rax
   140004f8b:	mov    edx,r14d
   140004f8e:	mov    rcx,r13
   140004f91:	call   0x1400066f0
   140004f96:	mov    ebx,eax
   140004f98:	test   eax,eax
   140004f9a:	jns    0x140004fad
   140004f9c:	mov    ecx,eax
   140004f9e:	call   0x140008090
   140004fa3:	mov    r14d,DWORD PTR [rsp+0x88]
   140004fab:	jmp    0x140004fbf
   140004fad:	xor    r14d,r14d
   140004fb0:	test   dil,dil
   140004fb3:	sete   r14b
   140004fb7:	mov    DWORD PTR [rsp+0x88],r14d
   140004fbf:	mov    ecx,ebx
   140004fc1:	call   0x140007fa8
   140004fc6:	test   ebx,ebx
   140004fc8:	js     0x140005121
   140004fce:	test   r14d,r14d
   140004fd1:	je     0x14000511c
   140004fd7:	inc    DWORD PTR [rbp+0x38]
   140004fda:	jmp    0x14000510f
   140004fdf:	movsxd r15,DWORD PTR [rbp+0xc]
   140004fe3:	mov    r13,QWORD PTR [rsi+0x10]
   140004fe7:	test   r15d,r15d
   140004fea:	jns    0x140004ff6
   140004fec:	mov    ebx,0x8000ffff
   140004ff1:	jmp    0x1400050a7
   140004ff6:	lea    r8,[rsp+0x98]
   140004ffe:	mov    ecx,r15d
   140005001:	call   0x1400074d8
   140005006:	mov    ebx,eax
   140005008:	test   eax,eax
   14000500a:	jns    0x140005013
   14000500c:	mov    ecx,eax
   14000500e:	jmp    0x1400050a9
   140005013:	mov    edi,DWORD PTR [rbp+0x8]
   140005016:	test   edi,edi
   140005018:	jns    0x140005023
   14000501a:	mov    ebx,0x8000ffff
   14000501f:	mov    ecx,ebx
   140005021:	jmp    0x140005097
   140005023:	mov    r12d,DWORD PTR [rsp+0x98]
   14000502b:	cmp    r12d,edi
   14000502e:	jg     0x140005034
   140005030:	xor    ebx,ebx
   140005032:	jmp    0x14000509c
   140005034:	mov    DWORD PTR [rsp+0x80],edi
   14000503b:	jmp    0x14000507f
   14000503d:	test   edi,edi
   14000503f:	jne    0x140005051
   140005041:	mov    edi,0x20
   140005046:	xor    ebx,ebx
   140005048:	mov    DWORD PTR [rsp+0x80],edi
   14000504f:	jmp    0x140005074
   140005051:	lea    r8,[rsp+0x80]
   140005059:	mov    ecx,edi
   14000505b:	call   0x140007554
   140005060:	mov    ebx,eax
   140005062:	test   eax,eax
   140005064:	jns    0x14000506d
   140005066:	mov    ecx,eax
   140005068:	call   0x140008090
   14000506d:	mov    edi,DWORD PTR [rsp+0x80]
   140005074:	mov    ecx,ebx
   140005076:	call   0x140007fa8
   14000507b:	test   ebx,ebx
   14000507d:	js     0x14000501f
   14000507f:	cmp    edi,r12d
   140005082:	jl     0x14000503d
   140005084:	mov    edx,edi
   140005086:	lea    rcx,[rbp+0x8]
   14000508a:	call   0x140004d40
   14000508f:	mov    ebx,eax
   140005091:	test   eax,eax
   140005093:	jns    0x14000509c
   140005095:	mov    ecx,eax
   140005097:	call   0x140008090
   14000509c:	mov    ecx,ebx
   14000509e:	call   0x140007fa8
   1400050a3:	test   ebx,ebx
   1400050a5:	jns    0x1400050b0
   1400050a7:	mov    ecx,ebx
   1400050a9:	call   0x140008090
   1400050ae:	jmp    0x1400050f0
   1400050b0:	mov    r8d,DWORD PTR [rbp+0xc]
   1400050b4:	cmp    r15d,r8d
   1400050b7:	jge    0x1400050d9
   1400050b9:	mov    rdx,QWORD PTR [rbp+0x10]
   1400050bd:	sub    r8d,r15d
   1400050c0:	movsxd r8,r8d
   1400050c3:	shl    r8,0x3
   1400050c7:	lea    rcx,[rdx+r15*8]
   1400050cb:	add    rcx,0x8
   1400050cf:	lea    rdx,[rdx+r15*8]
   1400050d3:	call   QWORD PTR [rip+0x4277]        # 0x140009350
   1400050d9:	mov    rax,QWORD PTR [rbp+0x10]
   1400050dd:	xor    edx,edx
   1400050df:	mov    QWORD PTR [rax+r15*8],rdx
   1400050e3:	mov    rax,QWORD PTR [rbp+0x10]
   1400050e7:	mov    QWORD PTR [rax+r15*8],r13
   1400050eb:	inc    DWORD PTR [rbp+0xc]
   1400050ee:	xor    ebx,ebx
   1400050f0:	mov    ecx,ebx
   1400050f2:	call   0x140007fa8
   1400050f7:	test   ebx,ebx
   1400050f9:	js     0x140005121
   1400050fb:	jmp    0x14000510f
   1400050fd:	mov    rax,QWORD PTR [rsi+0x10]
   140005101:	mov    QWORD PTR [rbp+0x30],rax
   140005105:	jmp    0x14000510f
   140005107:	mov    rax,QWORD PTR [rsi+0x10]
   14000510b:	mov    QWORD PTR [rbp+0x28],rax
   14000510f:	mov    rsi,QWORD PTR [rsi]
   140005112:	test   rsi,rsi
   140005115:	je     0x140005128
   140005117:	jmp    0x140004e6b
   14000511c:	mov    ebx,0x8000ffff
   140005121:	mov    ecx,ebx
   140005123:	call   0x140008090
   140005128:	mov    ecx,ebx
   14000512a:	call   0x140007fa8
   14000512f:	mov    eax,ebx
   140005131:	add    rsp,0x38
   140005135:	pop    r15
   140005137:	pop    r14
   140005139:	pop    r13
   14000513b:	pop    r12
   14000513d:	pop    rdi
   14000513e:	pop    rsi
   14000513f:	pop    rbp
   140005140:	pop    rbx
   140005141:	ret    
   140005142:	int3   
   140005143:	int3   
   140005144:	int3   
   140005145:	int3   
   140005146:	int3   
   140005147:	int3   
   140005148:	mov    QWORD PTR [rsp+0x8],rbx
   14000514d:	mov    QWORD PTR [rsp+0x10],rbp
   140005152:	mov    QWORD PTR [rsp+0x18],rsi
   140005157:	push   rdi
   140005158:	push   r14
   14000515a:	push   r15
   14000515c:	sub    rsp,0x20
   140005160:	mov    r14,rdx
   140005163:	mov    r15,rcx
   140005166:	xor    edi,edi
   140005168:	xor    ebp,ebp
   14000516a:	call   QWORD PTR [rip+0x3ef0]        # 0x140009060
   140005170:	xor    edx,edx
   140005172:	lea    r8d,[rdi+0x10]
   140005176:	mov    rcx,rax
   140005179:	call   QWORD PTR [rip+0x3ec9]        # 0x140009048
   14000517f:	mov    rsi,rax
   140005182:	test   rax,rax
   140005185:	je     0x1400051f1
   140005187:	add    rax,0x8
   14000518b:	je     0x140005193
   14000518d:	lea    rcx,[rax-0x8]
   140005191:	jmp    0x140005195
   140005193:	xor    ecx,ecx
   140005195:	xor    edx,edx
   140005197:	cmp    DWORD PTR [rip+0x7583],edx        # 0x14000c720
   14000519d:	mov    QWORD PTR [rcx],rdx
   1400051a0:	lea    rcx,[rip+0x4599]        # 0x140009740
   1400051a7:	mov    QWORD PTR [rsi],rcx
   1400051aa:	mov    DWORD PTR [rax],0x1
   1400051b0:	je     0x1400051d8
   1400051b2:	lea    rcx,[rip+0x7517]        # 0x14000c6d0
   1400051b9:	call   QWORD PTR [rip+0x3eb1]        # 0x140009070
   1400051bf:	inc    DWORD PTR [rip+0x7503]        # 0x14000c6c8
   1400051c5:	call   QWORD PTR [rip+0x3fd5]        # 0x1400091a0
   1400051cb:	lea    rcx,[rip+0x74fe]        # 0x14000c6d0
   1400051d2:	call   QWORD PTR [rip+0x3ea0]        # 0x140009078
   1400051d8:	cmp    DWORD PTR [rip+0x74e2],edi        # 0x14000c6c0
   1400051de:	mov    rbx,rsi
   1400051e1:	je     0x1400051ea
   1400051e3:	mov    ebp,0x80010001
   1400051e8:	jmp    0x1400051f8
   1400051ea:	xor    ebx,ebx
   1400051ec:	mov    rdi,rsi
   1400051ef:	jmp    0x1400051ff
   1400051f1:	xor    ebx,ebx
   1400051f3:	mov    ebp,0x8007000e
   1400051f8:	mov    ecx,ebp
   1400051fa:	call   0x140008090
   1400051ff:	mov    ecx,ebp
   140005201:	call   0x140007fa8
   140005206:	test   rbx,rbx
   140005209:	je     0x140005220
   14000520b:	mov    rax,QWORD PTR [rbx]
   14000520e:	mov    rsi,QWORD PTR [rax+0x10]
   140005212:	mov    rcx,rsi
   140005215:	call   QWORD PTR [rip+0x41dd]        # 0x1400093f8
   14000521b:	mov    rcx,rbx
   14000521e:	call   rsi
   140005220:	test   ebp,ebp
   140005222:	jns    0x140005228
   140005224:	mov    ecx,ebp
   140005226:	jmp    0x14000524a
   140005228:	mov    rax,QWORD PTR [rdi]
   14000522b:	mov    rbx,QWORD PTR [rax]
   14000522e:	mov    rcx,rbx
   140005231:	call   QWORD PTR [rip+0x41c1]        # 0x1400093f8
   140005237:	mov    r8,r14
   14000523a:	mov    rdx,r15
   14000523d:	mov    rcx,rdi
   140005240:	call   rbx
   140005242:	mov    ebp,eax
   140005244:	test   eax,eax
   140005246:	jns    0x14000524f
   140005248:	mov    ecx,eax
   14000524a:	call   0x140008090
   14000524f:	mov    ecx,ebp
   140005251:	call   0x140007fa8
   140005256:	test   rdi,rdi
   140005259:	je     0x140005270
   14000525b:	mov    rcx,QWORD PTR [rdi]
   14000525e:	mov    rbx,QWORD PTR [rcx+0x10]
   140005262:	mov    rcx,rbx
   140005265:	call   QWORD PTR [rip+0x418d]        # 0x1400093f8
   14000526b:	mov    rcx,rdi
   14000526e:	call   rbx
   140005270:	mov    rbx,QWORD PTR [rsp+0x40]
   140005275:	mov    eax,ebp
   140005277:	mov    rbp,QWORD PTR [rsp+0x48]
   14000527c:	mov    rsi,QWORD PTR [rsp+0x50]
   140005281:	add    rsp,0x20
   140005285:	pop    r15
   140005287:	pop    r14
   140005289:	pop    rdi
   14000528a:	ret    
   14000528b:	int3   
   14000528c:	int3   
   14000528d:	int3   
   14000528e:	int3   
   14000528f:	int3   
   140005290:	int3   
   140005291:	int3   
   140005292:	int3   
   140005293:	int3   
   140005294:	mov    QWORD PTR [rsp+0x8],rbx
   140005299:	mov    QWORD PTR [rsp+0x10],rbp
   14000529e:	mov    QWORD PTR [rsp+0x18],rsi
   1400052a3:	push   rdi
   1400052a4:	sub    rsp,0x20
   1400052a8:	xor    ebp,ebp
   1400052aa:	mov    rbx,rcx
   1400052ad:	cmp    DWORD PTR [rcx],ebp
   1400052af:	je     0x1400052e3
   1400052b1:	mov    edi,DWORD PTR [rcx+0x4]
   1400052b4:	test   edi,edi
   1400052b6:	cmovg  edi,ebp
   1400052b9:	mov    rsi,QWORD PTR [rcx+0x8]
   1400052bd:	test   rsi,rsi
   1400052c0:	je     0x1400052da
   1400052c2:	call   QWORD PTR [rip+0x3d98]        # 0x140009060
   1400052c8:	mov    r8,rsi
   1400052cb:	xor    edx,edx
   1400052cd:	mov    rcx,rax
   1400052d0:	call   QWORD PTR [rip+0x3d7a]        # 0x140009050
   1400052d6:	mov    QWORD PTR [rbx+0x8],rbp
   1400052da:	mov    QWORD PTR [rbx+0x8],rbp
   1400052de:	mov    DWORD PTR [rbx+0x4],edi
   1400052e1:	mov    DWORD PTR [rbx],ebp
   1400052e3:	xor    ecx,ecx
   1400052e5:	call   0x140007fa8
   1400052ea:	mov    rdi,QWORD PTR [rbx+0x8]
   1400052ee:	test   rdi,rdi
   1400052f1:	je     0x14000530b
   1400052f3:	call   QWORD PTR [rip+0x3d67]        # 0x140009060
   1400052f9:	mov    r8,rdi
   1400052fc:	xor    edx,edx
   1400052fe:	mov    rcx,rax
   140005301:	call   QWORD PTR [rip+0x3d49]        # 0x140009050
   140005307:	mov    QWORD PTR [rbx+0x8],rbp
   14000530b:	mov    rbx,QWORD PTR [rsp+0x30]
   140005310:	mov    rbp,QWORD PTR [rsp+0x38]
   140005315:	mov    rsi,QWORD PTR [rsp+0x40]
   14000531a:	add    rsp,0x20
   14000531e:	pop    rdi
   14000531f:	ret    
   140005320:	int3   
   140005321:	int3   
   140005322:	int3   
   140005323:	int3   
   140005324:	int3   
   140005325:	int3   
   140005326:	int3   
   140005327:	int3   
   140005328:	mov    QWORD PTR [rsp+0x8],rbx
   14000532d:	mov    QWORD PTR [rsp+0x10],rsi
   140005332:	mov    QWORD PTR [rsp+0x18],rdi
   140005337:	push   rbp
   140005338:	mov    rbp,rsp
   14000533b:	sub    rsp,0x30
   14000533f:	xor    edi,edi
   140005341:	mov    rsi,rcx
   140005344:	and    DWORD PTR [rbp-0x4],edi
   140005347:	and    DWORD PTR [rbp-0x8],edi
   14000534a:	mov    QWORD PTR [rbp-0x10],rdi
   14000534e:	call   0x14000545c
   140005353:	mov    ebx,eax
   140005355:	test   eax,eax
   140005357:	js     0x140005417
   14000535d:	mov    r8,QWORD PTR [rsi]
   140005360:	lea    rdx,[rip+0x47c9]        # 0x140009b30
   140005367:	lea    rcx,[rbp-0x10]
   14000536b:	call   0x140006b6c
   140005370:	mov    ebx,eax
   140005372:	test   eax,eax
   140005374:	jns    0x140005386
   140005376:	mov    ecx,eax
   140005378:	call   0x140008090
   14000537d:	mov    rdi,QWORD PTR [rbp-0x10]
   140005381:	jmp    0x14000541e
   140005386:	mov    rdi,QWORD PTR [rbp-0x10]
   14000538a:	mov    rdx,rdi
   14000538d:	call   0x140006c78
   140005392:	mov    ebx,eax
   140005394:	test   eax,eax
   140005396:	js     0x140005417
   140005398:	mov    r9,QWORD PTR [rsi+0x8]
   14000539c:	xor    r8d,r8d
   14000539f:	mov    rdx,rdi
   1400053a2:	call   0x140006ed0
   1400053a7:	mov    ebx,eax
   1400053a9:	test   eax,eax
   1400053ab:	js     0x140005417
   1400053ad:	test   rdi,rdi
   1400053b0:	je     0x1400053cb
   1400053b2:	call   QWORD PTR [rip+0x3ca8]        # 0x140009060
   1400053b8:	mov    r8,rdi
   1400053bb:	xor    edx,edx
   1400053bd:	mov    rcx,rax
   1400053c0:	call   QWORD PTR [rip+0x3c8a]        # 0x140009050
   1400053c6:	and    QWORD PTR [rbp-0x10],0x0
   1400053cb:	mov    r8,QWORD PTR [rsi+0x10]
   1400053cf:	lea    rdx,[rip+0x475a]        # 0x140009b30
   1400053d6:	and    DWORD PTR [rbp-0x4],0x0
   1400053da:	lea    rcx,[rbp-0x10]
   1400053de:	and    DWORD PTR [rbp-0x8],0x0
   1400053e2:	call   0x140006b6c
   1400053e7:	mov    ebx,eax
   1400053e9:	test   eax,eax
   1400053eb:	js     0x140005376
   1400053ed:	mov    rdi,QWORD PTR [rbp-0x10]
   1400053f1:	mov    rdx,rdi
   1400053f4:	call   0x140006c78
   1400053f9:	mov    ebx,eax
   1400053fb:	test   eax,eax
   1400053fd:	js     0x140005417
   1400053ff:	mov    r9,QWORD PTR [rsi]
   140005402:	lea    r8,[rip+0x473f]        # 0x140009b48
   140005409:	mov    rdx,rdi
   14000540c:	call   0x140006ed0
   140005411:	mov    ebx,eax
   140005413:	test   eax,eax
   140005415:	jns    0x14000541e
   140005417:	mov    ecx,eax
   140005419:	call   0x140008090
   14000541e:	mov    ecx,ebx
   140005420:	call   0x140007fa8
   140005425:	test   rdi,rdi
   140005428:	je     0x14000543e
   14000542a:	call   QWORD PTR [rip+0x3c30]        # 0x140009060
   140005430:	mov    r8,rdi
   140005433:	xor    edx,edx
   140005435:	mov    rcx,rax
   140005438:	call   QWORD PTR [rip+0x3c12]        # 0x140009050
   14000543e:	mov    rsi,QWORD PTR [rsp+0x48]
   140005443:	mov    eax,ebx
   140005445:	mov    rbx,QWORD PTR [rsp+0x40]
   14000544a:	mov    rdi,QWORD PTR [rsp+0x50]
   14000544f:	add    rsp,0x30
   140005453:	pop    rbp
   140005454:	ret    
   140005455:	int3   
   140005456:	int3   
   140005457:	int3   
   140005458:	int3   
   140005459:	int3   
   14000545a:	int3   
   14000545b:	int3   
   14000545c:	mov    QWORD PTR [rsp+0x8],rbx
   140005461:	mov    QWORD PTR [rsp+0x10],rsi
   140005466:	mov    QWORD PTR [rsp+0x18],rdi
   14000546b:	push   rbp
   14000546c:	mov    rbp,rsp
   14000546f:	sub    rsp,0x30
   140005473:	mov    r8,QWORD PTR [rcx]
   140005476:	lea    rdx,[rip+0x46b3]        # 0x140009b30
   14000547d:	and    QWORD PTR [rbp-0x10],0x0
   140005482:	mov    rsi,rcx
   140005485:	and    DWORD PTR [rbp-0x4],0x0
   140005489:	lea    rcx,[rbp-0x10]
   14000548d:	and    DWORD PTR [rbp-0x8],0x0
   140005491:	call   0x140006b6c
   140005496:	mov    ebx,eax
   140005498:	test   eax,eax
   14000549a:	jns    0x1400054a9
   14000549c:	mov    ecx,eax
   14000549e:	call   0x140008090
   1400054a3:	mov    rdi,QWORD PTR [rbp-0x10]
   1400054a7:	jmp    0x140005514
   1400054a9:	mov    rdi,QWORD PTR [rbp-0x10]
   1400054ad:	mov    rdx,rdi
   1400054b0:	call   0x140006dbc
   1400054b5:	mov    ebx,eax
   1400054b7:	test   eax,eax
   1400054b9:	js     0x14000550d
   1400054bb:	test   rdi,rdi
   1400054be:	je     0x1400054d9
   1400054c0:	call   QWORD PTR [rip+0x3b9a]        # 0x140009060
   1400054c6:	mov    r8,rdi
   1400054c9:	xor    edx,edx
   1400054cb:	mov    rcx,rax
   1400054ce:	call   QWORD PTR [rip+0x3b7c]        # 0x140009050
   1400054d4:	and    QWORD PTR [rbp-0x10],0x0
   1400054d9:	mov    r8,QWORD PTR [rsi+0x10]
   1400054dd:	lea    rdx,[rip+0x464c]        # 0x140009b30
   1400054e4:	and    DWORD PTR [rbp-0x4],0x0
   1400054e8:	lea    rcx,[rbp-0x10]
   1400054ec:	and    DWORD PTR [rbp-0x8],0x0
   1400054f0:	call   0x140006b6c
   1400054f5:	mov    ebx,eax
   1400054f7:	test   eax,eax
   1400054f9:	js     0x14000549c
   1400054fb:	mov    rdi,QWORD PTR [rbp-0x10]
   1400054ff:	mov    rdx,rdi
   140005502:	call   0x140006dbc
   140005507:	mov    ebx,eax
   140005509:	test   eax,eax
   14000550b:	jns    0x140005514
   14000550d:	mov    ecx,eax
   14000550f:	call   0x140008090
   140005514:	mov    ecx,ebx
   140005516:	call   0x140007fa8
   14000551b:	test   rdi,rdi
   14000551e:	je     0x140005534
   140005520:	call   QWORD PTR [rip+0x3b3a]        # 0x140009060
   140005526:	mov    r8,rdi
   140005529:	xor    edx,edx
   14000552b:	mov    rcx,rax
   14000552e:	call   QWORD PTR [rip+0x3b1c]        # 0x140009050
   140005534:	mov    rsi,QWORD PTR [rsp+0x48]
   140005539:	mov    eax,ebx
   14000553b:	mov    rbx,QWORD PTR [rsp+0x40]
   140005540:	mov    rdi,QWORD PTR [rsp+0x50]
   140005545:	add    rsp,0x30
   140005549:	pop    rbp
   14000554a:	ret    
   14000554b:	int3   
   14000554c:	int3   
   14000554d:	int3   
   14000554e:	int3   
   14000554f:	int3   
   140005550:	int3   
   140005551:	int3   
   140005552:	int3   
   140005553:	int3   
   140005554:	mov    QWORD PTR [rsp+0x8],rbx
   140005559:	push   rbp
   14000555a:	push   rsi
   14000555b:	push   rdi
   14000555c:	push   r12
   14000555e:	push   r13
   140005560:	push   r14
   140005562:	push   r15
   140005564:	mov    rbp,rsp
   140005567:	sub    rsp,0x50
   14000556b:	xor    r13d,r13d
   14000556e:	mov    r14,rcx
   140005571:	mov    edi,r13d
   140005574:	mov    QWORD PTR [rbp-0x30],r13
   140005578:	mov    QWORD PTR [rbp-0x28],r13
   14000557c:	mov    esi,r13d
   14000557f:	mov    QWORD PTR [rbp-0x20],r13
   140005583:	mov    r15d,r13d
   140005586:	mov    QWORD PTR [rbp-0x18],r13
   14000558a:	mov    QWORD PTR [rbp-0x10],r13
   14000558e:	mov    QWORD PTR [rbp-0x8],r13
   140005592:	mov    QWORD PTR [rbp+0x48],r13
   140005596:	call   0x140005b24
   14000559b:	mov    ebx,eax
   14000559d:	test   eax,eax
   14000559f:	js     0x140005a90
   1400055a5:	lea    rcx,[r14+0x4]
   1400055a9:	lea    rdx,[rbp+0x48]
   1400055ad:	call   QWORD PTR [rip+0x3bb5]        # 0x140009168
   1400055b3:	test   eax,eax
   1400055b5:	je     0x1400055c3
   1400055b7:	mov    ecx,0x8000ffff
   1400055bc:	mov    ebx,ecx
   1400055be:	jmp    0x140005a92
   1400055c3:	mov    r8,QWORD PTR [rbp+0x48]
   1400055c7:	lea    rdx,[rip+0x458a]        # 0x140009b58
   1400055ce:	lea    rcx,[rbp-0x10]
   1400055d2:	call   0x140006b6c
   1400055d7:	mov    ebx,eax
   1400055d9:	test   eax,eax
   1400055db:	jns    0x1400055ed
   1400055dd:	mov    ecx,eax
   1400055df:	call   0x140008090
   1400055e4:	mov    r15,QWORD PTR [rbp-0x10]
   1400055e8:	jmp    0x140005a97
   1400055ed:	mov    r15,QWORD PTR [rbp-0x10]
   1400055f1:	test   r15,r15
   1400055f4:	je     0x140005619
   1400055f6:	mov    eax,DWORD PTR [rbp-0x8]
   1400055f9:	test   eax,eax
   1400055fb:	je     0x140005619
   1400055fd:	mov    rbx,r15
   140005600:	mov    r12d,eax
   140005603:	movzx  ecx,WORD PTR [rbx]
   140005606:	call   QWORD PTR [rip+0x3d8c]        # 0x140009398
   14000560c:	mov    WORD PTR [rbx],ax
   14000560f:	lea    rbx,[rbx+0x2]
   140005613:	sub    r12,0x1
   140005617:	jne    0x140005603
   140005619:	xor    ecx,ecx
   14000561b:	call   0x140007fa8
   140005620:	mov    rdx,QWORD PTR [r14+0x30]
   140005624:	test   rdx,rdx
   140005627:	je     0x1400056d2
   14000562d:	call   0x140006c78
   140005632:	mov    ebx,eax
   140005634:	test   eax,eax
   140005636:	js     0x140005a90
   14000563c:	mov    r9,QWORD PTR [r14+0x28]
   140005640:	xor    r8d,r8d
   140005643:	mov    rdx,QWORD PTR [r14+0x30]
   140005647:	call   0x140006ed0
   14000564c:	mov    ebx,eax
   14000564e:	test   eax,eax
   140005650:	js     0x140005a90
   140005656:	mov    r8,QWORD PTR [r14+0x30]
   14000565a:	lea    rdx,[rip+0x4507]        # 0x140009b68
   140005661:	lea    rcx,[rbp-0x30]
   140005665:	call   0x140006b6c
   14000566a:	mov    ebx,eax
   14000566c:	test   eax,eax
   14000566e:	jns    0x140005680
   140005670:	mov    ecx,eax
   140005672:	call   0x140008090
   140005677:	mov    rdi,QWORD PTR [rbp-0x30]
   14000567b:	jmp    0x140005a97
   140005680:	mov    rdi,QWORD PTR [rbp-0x30]
   140005684:	mov    rdx,rdi
   140005687:	call   0x140006c78
   14000568c:	mov    ebx,eax
   14000568e:	test   eax,eax
   140005690:	js     0x140005a90
   140005696:	mov    r9,r15
   140005699:	xor    r8d,r8d
   14000569c:	mov    rdx,rdi
   14000569f:	call   0x140006ed0
   1400056a4:	mov    ebx,eax
   1400056a6:	test   eax,eax
   1400056a8:	js     0x140005a90
   1400056ae:	test   rdi,rdi
   1400056b1:	je     0x1400056ce
   1400056b3:	call   QWORD PTR [rip+0x39a7]        # 0x140009060
   1400056b9:	mov    r8,rdi
   1400056bc:	xor    edx,edx
   1400056be:	mov    rcx,rax
   1400056c1:	call   QWORD PTR [rip+0x3989]        # 0x140009050
   1400056c7:	mov    rdi,r13
   1400056ca:	mov    QWORD PTR [rbp-0x30],r13
   1400056ce:	mov    QWORD PTR [rbp-0x28],r13
   1400056d2:	mov    rdx,QWORD PTR [r14+0x38]
   1400056d6:	test   rdx,rdx
   1400056d9:	je     0x1400057e3
   1400056df:	call   0x140006c78
   1400056e4:	mov    ebx,eax
   1400056e6:	test   eax,eax
   1400056e8:	js     0x140005a90
   1400056ee:	mov    r9,QWORD PTR [r14+0x28]
   1400056f2:	xor    r8d,r8d
   1400056f5:	mov    rdx,QWORD PTR [r14+0x38]
   1400056f9:	call   0x140006ed0
   1400056fe:	mov    ebx,eax
   140005700:	test   eax,eax
   140005702:	js     0x140005a90
   140005708:	mov    r8,QWORD PTR [r14+0x38]
   14000570c:	lea    rdx,[rip+0x4455]        # 0x140009b68
   140005713:	lea    rcx,[rbp-0x30]
   140005717:	call   0x140006b6c
   14000571c:	mov    ebx,eax
   14000571e:	test   eax,eax
   140005720:	js     0x140005670
   140005726:	mov    rdi,QWORD PTR [rbp-0x30]
   14000572a:	mov    rdx,rdi
   14000572d:	call   0x140006c78
   140005732:	mov    ebx,eax
   140005734:	test   eax,eax
   140005736:	js     0x140005a90
   14000573c:	mov    r9,r15
   14000573f:	xor    r8d,r8d
   140005742:	mov    rdx,rdi
   140005745:	call   0x140006ed0
   14000574a:	mov    ebx,eax
   14000574c:	test   eax,eax
   14000574e:	js     0x140005a90
   140005754:	test   rdi,rdi
   140005757:	je     0x140005771
   140005759:	call   QWORD PTR [rip+0x3901]        # 0x140009060
   14000575f:	mov    r8,rdi
   140005762:	xor    edx,edx
   140005764:	mov    rcx,rax
   140005767:	call   QWORD PTR [rip+0x38e3]        # 0x140009050
   14000576d:	mov    QWORD PTR [rbp-0x30],r13
   140005771:	mov    r8,QWORD PTR [r14+0x38]
   140005775:	lea    rdx,[rip+0x4404]        # 0x140009b80
   14000577c:	lea    rcx,[rbp-0x30]
   140005780:	mov    QWORD PTR [rbp-0x28],r13
   140005784:	call   0x140006b6c
   140005789:	mov    ebx,eax
   14000578b:	test   eax,eax
   14000578d:	js     0x140005670
   140005793:	mov    rdi,QWORD PTR [rbp-0x30]
   140005797:	mov    rdx,rdi
   14000579a:	call   0x140006c78
   14000579f:	mov    ebx,eax
   1400057a1:	test   eax,eax
   1400057a3:	js     0x140005a90
   1400057a9:	mov    r9,QWORD PTR [r14+0x30]
   1400057ad:	xor    r8d,r8d
   1400057b0:	mov    rdx,rdi
   1400057b3:	call   0x140006ed0
   1400057b8:	mov    ebx,eax
   1400057ba:	test   eax,eax
   1400057bc:	js     0x140005a90
   1400057c2:	test   rdi,rdi
   1400057c5:	je     0x1400057df
   1400057c7:	call   QWORD PTR [rip+0x3893]        # 0x140009060
   1400057cd:	mov    r8,rdi
   1400057d0:	xor    edx,edx
   1400057d2:	mov    rcx,rax
   1400057d5:	call   QWORD PTR [rip+0x3875]        # 0x140009050
   1400057db:	mov    QWORD PTR [rbp-0x30],r13
   1400057df:	mov    QWORD PTR [rbp-0x28],r13
   1400057e3:	mov    r8,r15
   1400057e6:	lea    rdx,[rip+0x43ab]        # 0x140009b98
   1400057ed:	lea    rcx,[rbp-0x30]
   1400057f1:	call   0x140006b6c
   1400057f6:	mov    ebx,eax
   1400057f8:	test   eax,eax
   1400057fa:	js     0x140005670
   140005800:	mov    rdi,QWORD PTR [rbp-0x30]
   140005804:	mov    rdx,rdi
   140005807:	call   0x140006c78
   14000580c:	mov    ebx,eax
   14000580e:	test   eax,eax
   140005810:	js     0x140005a90
   140005816:	mov    r9,QWORD PTR [r14+0x28]
   14000581a:	xor    r8d,r8d
   14000581d:	mov    rdx,rdi
   140005820:	call   0x140006ed0
   140005825:	mov    ebx,eax
   140005827:	test   eax,eax
   140005829:	js     0x140005a90
   14000582f:	cmp    QWORD PTR [r14+0x30],r13
   140005833:	je     0x1400058b1
   140005835:	mov    r8,rdi
   140005838:	lea    rdx,[rip+0x4371]        # 0x140009bb0
   14000583f:	lea    rcx,[rbp-0x20]
   140005843:	call   0x140006b6c
   140005848:	mov    ebx,eax
   14000584a:	test   eax,eax
   14000584c:	jns    0x14000585e
   14000584e:	mov    ecx,eax
   140005850:	call   0x140008090
   140005855:	mov    rsi,QWORD PTR [rbp-0x20]
   140005859:	jmp    0x140005a97
   14000585e:	mov    rsi,QWORD PTR [rbp-0x20]
   140005862:	mov    rdx,rsi
   140005865:	call   0x140006c78
   14000586a:	mov    ebx,eax
   14000586c:	test   eax,eax
   14000586e:	js     0x140005a90
   140005874:	mov    r9,QWORD PTR [r14+0x30]
   140005878:	xor    r8d,r8d
   14000587b:	mov    rdx,rsi
   14000587e:	call   0x140006ed0
   140005883:	mov    ebx,eax
   140005885:	test   eax,eax
   140005887:	js     0x140005a90
   14000588d:	test   rsi,rsi
   140005890:	je     0x1400058ad
   140005892:	call   QWORD PTR [rip+0x37c8]        # 0x140009060
   140005898:	mov    r8,rsi
   14000589b:	xor    edx,edx
   14000589d:	mov    rcx,rax
   1400058a0:	call   QWORD PTR [rip+0x37aa]        # 0x140009050
   1400058a6:	mov    rsi,r13
   1400058a9:	mov    QWORD PTR [rbp-0x20],r13
   1400058ad:	mov    QWORD PTR [rbp-0x18],r13
   1400058b1:	cmp    QWORD PTR [r14+0x38],r13
   1400058b5:	je     0x140005927
   1400058b7:	mov    r8,rdi
   1400058ba:	lea    rdx,[rip+0x4307]        # 0x140009bc8
   1400058c1:	lea    rcx,[rbp-0x20]
   1400058c5:	call   0x140006b6c
   1400058ca:	mov    ebx,eax
   1400058cc:	test   eax,eax
   1400058ce:	js     0x14000584e
   1400058d4:	mov    rsi,QWORD PTR [rbp-0x20]
   1400058d8:	mov    rdx,rsi
   1400058db:	call   0x140006c78
   1400058e0:	mov    ebx,eax
   1400058e2:	test   eax,eax
   1400058e4:	js     0x140005a90
   1400058ea:	mov    r9,QWORD PTR [r14+0x38]
   1400058ee:	xor    r8d,r8d
   1400058f1:	mov    rdx,rsi
   1400058f4:	call   0x140006ed0
   1400058f9:	mov    ebx,eax
   1400058fb:	test   eax,eax
   1400058fd:	js     0x140005a90
   140005903:	test   rsi,rsi
   140005906:	je     0x140005923
   140005908:	call   QWORD PTR [rip+0x3752]        # 0x140009060
   14000590e:	mov    r8,rsi
   140005911:	xor    edx,edx
   140005913:	mov    rcx,rax
   140005916:	call   QWORD PTR [rip+0x3734]        # 0x140009050
   14000591c:	mov    rsi,r13
   14000591f:	mov    QWORD PTR [rbp-0x20],r13
   140005923:	mov    QWORD PTR [rbp-0x18],r13
   140005927:	mov    rax,QWORD PTR [r14+0x14]
   14000592b:	cmp    rax,QWORD PTR [rip+0x44c6]        # 0x140009df8
   140005932:	jne    0x140005945
   140005934:	mov    rax,QWORD PTR [r14+0x1c]
   140005938:	cmp    rax,QWORD PTR [rip+0x44c1]        # 0x140009e00
   14000593f:	je     0x140005a4b
   140005945:	mov    r8,rdi
   140005948:	lea    rdx,[rip+0x42b1]        # 0x140009c00
   14000594f:	lea    rcx,[rbp-0x20]
   140005953:	call   0x140006b6c
   140005958:	mov    ebx,eax
   14000595a:	test   eax,eax
   14000595c:	js     0x14000584e
   140005962:	mov    rsi,QWORD PTR [rbp-0x20]
   140005966:	mov    rdx,rsi
   140005969:	call   0x140006c78
   14000596e:	mov    ebx,eax
   140005970:	test   eax,eax
   140005972:	js     0x140005a90
   140005978:	mov    rax,QWORD PTR [rbp+0x48]
   14000597c:	test   rax,rax
   14000597f:	je     0x140005993
   140005981:	lea    rcx,[rbp+0x50]
   140005985:	mov    QWORD PTR [rbp+0x50],rax
   140005989:	call   QWORD PTR [rip+0x37d1]        # 0x140009160
   14000598f:	mov    QWORD PTR [rbp+0x48],r13
   140005993:	lea    rdx,[rbp+0x48]
   140005997:	lea    rcx,[r14+0x14]
   14000599b:	call   QWORD PTR [rip+0x37c7]        # 0x140009168
   1400059a1:	test   eax,eax
   1400059a3:	jne    0x1400055b7
   1400059a9:	test   r15,r15
   1400059ac:	je     0x1400059c6
   1400059ae:	call   QWORD PTR [rip+0x36ac]        # 0x140009060
   1400059b4:	mov    r8,r15
   1400059b7:	xor    edx,edx
   1400059b9:	mov    rcx,rax
   1400059bc:	call   QWORD PTR [rip+0x368e]        # 0x140009050
   1400059c2:	mov    QWORD PTR [rbp-0x10],r13
   1400059c6:	mov    r8,QWORD PTR [rbp+0x48]
   1400059ca:	lea    rdx,[rip+0x4187]        # 0x140009b58
   1400059d1:	lea    rcx,[rbp-0x10]
   1400059d5:	mov    QWORD PTR [rbp-0x8],r13
   1400059d9:	call   0x140006b6c
   1400059de:	mov    ebx,eax
   1400059e0:	test   eax,eax
   1400059e2:	js     0x1400055dd
   1400059e8:	mov    r15,QWORD PTR [rbp-0x10]
   1400059ec:	test   r15,r15
   1400059ef:	je     0x140005a14
   1400059f1:	mov    eax,DWORD PTR [rbp-0x8]
   1400059f4:	test   eax,eax
   1400059f6:	je     0x140005a14
   1400059f8:	mov    rbx,r15
   1400059fb:	mov    r12d,eax
   1400059fe:	movzx  ecx,WORD PTR [rbx]
   140005a01:	call   QWORD PTR [rip+0x3991]        # 0x140009398
   140005a07:	mov    WORD PTR [rbx],ax
   140005a0a:	lea    rbx,[rbx+0x2]
   140005a0e:	sub    r12,0x1
   140005a12:	jne    0x1400059fe
   140005a14:	xor    ecx,ecx
   140005a16:	call   0x140007fa8
   140005a1b:	mov    r9,r15
   140005a1e:	xor    r8d,r8d
   140005a21:	mov    rdx,rsi
   140005a24:	call   0x140006ed0
   140005a29:	mov    ebx,eax
   140005a2b:	test   eax,eax
   140005a2d:	js     0x140005a90
   140005a2f:	test   rsi,rsi
   140005a32:	je     0x140005a4b
   140005a34:	call   QWORD PTR [rip+0x3626]        # 0x140009060
   140005a3a:	mov    r8,rsi
   140005a3d:	xor    edx,edx
   140005a3f:	mov    rcx,rax
   140005a42:	call   QWORD PTR [rip+0x3608]        # 0x140009050
   140005a48:	mov    rsi,r13
   140005a4b:	mov    r9,QWORD PTR [r14+0x40]
   140005a4f:	test   r9,r9
   140005a52:	je     0x140005a69
   140005a54:	lea    r8,[rip+0x40ed]        # 0x140009b48
   140005a5b:	mov    rdx,rdi
   140005a5e:	call   0x140006ed0
   140005a63:	mov    ebx,eax
   140005a65:	test   eax,eax
   140005a67:	js     0x140005a90
   140005a69:	mov    ecx,DWORD PTR [r14]
   140005a6c:	test   ecx,ecx
   140005a6e:	je     0x140005a7f
   140005a70:	cmp    ecx,0x1
   140005a73:	jne    0x140005a97
   140005a75:	mov    rdx,rdi
   140005a78:	call   0x14000682c
   140005a7d:	jmp    0x140005a8a
   140005a7f:	mov    rdx,rdi
   140005a82:	mov    rcx,r14
   140005a85:	call   0x140006920
   140005a8a:	mov    ebx,eax
   140005a8c:	test   eax,eax
   140005a8e:	jns    0x140005a97
   140005a90:	mov    ecx,eax
   140005a92:	call   0x140008090
   140005a97:	mov    ecx,ebx
   140005a99:	call   0x140007fa8
   140005a9e:	mov    rax,QWORD PTR [rbp+0x48]
   140005aa2:	test   rax,rax
   140005aa5:	je     0x140005ab9
   140005aa7:	lea    rcx,[rbp+0x50]
   140005aab:	mov    QWORD PTR [rbp+0x50],rax
   140005aaf:	call   QWORD PTR [rip+0x36ab]        # 0x140009160
   140005ab5:	mov    QWORD PTR [rbp+0x48],r13
   140005ab9:	test   r15,r15
   140005abc:	je     0x140005ad2
   140005abe:	call   QWORD PTR [rip+0x359c]        # 0x140009060
   140005ac4:	mov    r8,r15
   140005ac7:	xor    edx,edx
   140005ac9:	mov    rcx,rax
   140005acc:	call   QWORD PTR [rip+0x357e]        # 0x140009050
   140005ad2:	test   rsi,rsi
   140005ad5:	je     0x140005aeb
   140005ad7:	call   QWORD PTR [rip+0x3583]        # 0x140009060
   140005add:	mov    r8,rsi
   140005ae0:	xor    edx,edx
   140005ae2:	mov    rcx,rax
   140005ae5:	call   QWORD PTR [rip+0x3565]        # 0x140009050
   140005aeb:	test   rdi,rdi
   140005aee:	je     0x140005b04
   140005af0:	call   QWORD PTR [rip+0x356a]        # 0x140009060
   140005af6:	mov    r8,rdi
   140005af9:	xor    edx,edx
   140005afb:	mov    rcx,rax
   140005afe:	call   QWORD PTR [rip+0x354c]        # 0x140009050
   140005b04:	mov    eax,ebx
   140005b06:	mov    rbx,QWORD PTR [rsp+0x90]
   140005b0e:	add    rsp,0x50
   140005b12:	pop    r15
   140005b14:	pop    r14
   140005b16:	pop    r13
   140005b18:	pop    r12
   140005b1a:	pop    rdi
   140005b1b:	pop    rsi
   140005b1c:	pop    rbp
   140005b1d:	ret    
   140005b1e:	int3   
   140005b1f:	int3   
   140005b20:	int3   
   140005b21:	int3   
   140005b22:	int3   
   140005b23:	int3   
   140005b24:	mov    QWORD PTR [rsp+0x18],rbx
   140005b29:	mov    QWORD PTR [rsp+0x20],rsi
   140005b2e:	push   rbp
   140005b2f:	push   rdi
   140005b30:	push   r12
   140005b32:	mov    rbp,rsp
   140005b35:	sub    rsp,0x30
   140005b39:	xor    esi,esi
   140005b3b:	mov    rdi,rcx
   140005b3e:	and    DWORD PTR [rbp-0x4],esi
   140005b41:	xor    ebx,ebx
   140005b43:	and    DWORD PTR [rbp-0x8],esi
   140005b46:	mov    r12d,0x8000ffff
   140005b4c:	and    QWORD PTR [rbp+0x20],rsi
   140005b50:	mov    ecx,DWORD PTR [rcx]
   140005b52:	mov    QWORD PTR [rbp-0x10],rsi
   140005b56:	test   ecx,ecx
   140005b58:	je     0x140005b5f
   140005b5a:	cmp    ecx,0x1
   140005b5d:	jmp    0x140005b9f
   140005b5f:	cmp    QWORD PTR [rdi+0x48],rbx
   140005b63:	je     0x140005ba1
   140005b65:	mov    rcx,QWORD PTR [rdi+0x48]
   140005b69:	lea    rdx,[rip+0x40e0]        # 0x140009c50
   140005b70:	call   0x140008c9a
   140005b75:	test   eax,eax
   140005b77:	je     0x140005bac
   140005b79:	mov    rcx,QWORD PTR [rdi+0x48]
   140005b7d:	lea    rdx,[rip+0x40e4]        # 0x140009c68
   140005b84:	call   0x140008c9a
   140005b89:	test   eax,eax
   140005b8b:	je     0x140005bac
   140005b8d:	mov    rcx,QWORD PTR [rdi+0x48]
   140005b91:	lea    rdx,[rip+0x40e0]        # 0x140009c78
   140005b98:	call   0x140008c9a
   140005b9d:	test   eax,eax
   140005b9f:	je     0x140005bac
   140005ba1:	mov    ecx,r12d
   140005ba4:	mov    ebx,r12d
   140005ba7:	call   0x140008090
   140005bac:	mov    ecx,ebx
   140005bae:	call   0x140007fa8
   140005bb3:	test   ebx,ebx
   140005bb5:	jns    0x140005bbb
   140005bb7:	mov    ecx,ebx
   140005bb9:	jmp    0x140005c38
   140005bbb:	mov    rdx,QWORD PTR [rdi+0x30]
   140005bbf:	test   rdx,rdx
   140005bc2:	je     0x140005bcf
   140005bc4:	call   0x140006dbc
   140005bc9:	mov    ebx,eax
   140005bcb:	test   eax,eax
   140005bcd:	js     0x140005c36
   140005bcf:	mov    rdx,QWORD PTR [rdi+0x38]
   140005bd3:	test   rdx,rdx
   140005bd6:	je     0x140005be3
   140005bd8:	call   0x140006dbc
   140005bdd:	mov    ebx,eax
   140005bdf:	test   eax,eax
   140005be1:	js     0x140005c36
   140005be3:	lea    rcx,[rdi+0x4]
   140005be7:	lea    rdx,[rbp+0x20]
   140005beb:	call   QWORD PTR [rip+0x3577]        # 0x140009168
   140005bf1:	test   eax,eax
   140005bf3:	je     0x140005bfd
   140005bf5:	mov    ebx,r12d
   140005bf8:	mov    ecx,r12d
   140005bfb:	jmp    0x140005c38
   140005bfd:	mov    r8,QWORD PTR [rbp+0x20]
   140005c01:	lea    rdx,[rip+0x4010]        # 0x140009c18
   140005c08:	lea    rcx,[rbp-0x10]
   140005c0c:	call   0x140006b6c
   140005c11:	mov    ebx,eax
   140005c13:	test   eax,eax
   140005c15:	jns    0x140005c24
   140005c17:	mov    ecx,eax
   140005c19:	call   0x140008090
   140005c1e:	mov    rsi,QWORD PTR [rbp-0x10]
   140005c22:	jmp    0x140005c3d
   140005c24:	mov    rsi,QWORD PTR [rbp-0x10]
   140005c28:	mov    rdx,rsi
   140005c2b:	call   0x140006dbc
   140005c30:	mov    ebx,eax
   140005c32:	test   eax,eax
   140005c34:	jns    0x140005c3d
   140005c36:	mov    ecx,eax
   140005c38:	call   0x140008090
   140005c3d:	mov    ecx,ebx
   140005c3f:	call   0x140007fa8
   140005c44:	mov    rax,QWORD PTR [rbp+0x20]
   140005c48:	test   rax,rax
   140005c4b:	je     0x140005c60
   140005c4d:	lea    rcx,[rbp+0x28]
   140005c51:	mov    QWORD PTR [rbp+0x28],rax
   140005c55:	call   QWORD PTR [rip+0x3505]        # 0x140009160
   140005c5b:	and    QWORD PTR [rbp+0x20],0x0
   140005c60:	test   rsi,rsi
   140005c63:	je     0x140005c79
   140005c65:	call   QWORD PTR [rip+0x33f5]        # 0x140009060
   140005c6b:	mov    r8,rsi
   140005c6e:	xor    edx,edx
   140005c70:	mov    rcx,rax
   140005c73:	call   QWORD PTR [rip+0x33d7]        # 0x140009050
   140005c79:	mov    rsi,QWORD PTR [rsp+0x68]
   140005c7e:	mov    eax,ebx
   140005c80:	mov    rbx,QWORD PTR [rsp+0x60]
   140005c85:	add    rsp,0x30
   140005c89:	pop    r12
   140005c8b:	pop    rdi
   140005c8c:	pop    rbp
   140005c8d:	ret    
   140005c8e:	int3   
   140005c8f:	int3   
   140005c90:	int3   
   140005c91:	int3   
   140005c92:	int3   
   140005c93:	int3   
   140005c94:	mov    QWORD PTR [rsp+0x8],rbx
   140005c99:	push   rbp
   140005c9a:	push   rsi
   140005c9b:	push   rdi
   140005c9c:	push   r14
   140005c9e:	push   r15
   140005ca0:	mov    rbp,rsp
   140005ca3:	sub    rsp,0x40
   140005ca7:	and    QWORD PTR [rbp-0x10],0x0
   140005cac:	mov    r15,rcx
   140005caf:	and    QWORD PTR [rbp+0x40],0x0
   140005cb4:	lea    rcx,[rbp-0x10]
   140005cb8:	and    QWORD PTR [rbp+0x48],0x0
   140005cbd:	mov    ebx,edx
   140005cbf:	call   0x140007010
   140005cc4:	mov    rdi,QWORD PTR [rbp-0x10]
   140005cc8:	mov    r14d,eax
   140005ccb:	test   eax,eax
   140005ccd:	js     0x140005cfe
   140005ccf:	lea    rdx,[rbp+0x40]
   140005cd3:	mov    rcx,rdi
   140005cd6:	call   QWORD PTR [rip+0x346c]        # 0x140009148
   140005cdc:	mov    r14d,eax
   140005cdf:	test   eax,eax
   140005ce1:	js     0x140005cfe
   140005ce3:	test   ebx,ebx
   140005ce5:	je     0x140005d65
   140005ce7:	mov    rcx,QWORD PTR [rbp+0x40]
   140005ceb:	xor    r8d,r8d
   140005cee:	mov    rdx,rdi
   140005cf1:	call   QWORD PTR [rip+0x3449]        # 0x140009140
   140005cf7:	mov    r14d,eax
   140005cfa:	test   eax,eax
   140005cfc:	jns    0x140005d05
   140005cfe:	mov    ecx,eax
   140005d00:	call   0x140008090
   140005d05:	mov    ecx,r14d
   140005d08:	call   0x140007fa8
   140005d0d:	mov    rbx,QWORD PTR [rbp+0x40]
   140005d11:	test   rbx,rbx
   140005d14:	je     0x140005d30
   140005d16:	mov    rax,QWORD PTR [rbx]
   140005d19:	mov    rsi,QWORD PTR [rax+0x10]
   140005d1d:	mov    rcx,rsi
   140005d20:	call   QWORD PTR [rip+0x36d2]        # 0x1400093f8
   140005d26:	mov    rcx,rbx
   140005d29:	call   rsi
   140005d2b:	and    QWORD PTR [rbp+0x40],0x0
   140005d30:	test   rdi,rdi
   140005d33:	je     0x140005d51
   140005d35:	call   QWORD PTR [rip+0x3325]        # 0x140009060
   140005d3b:	lea    r8,[rdi-0x4]
   140005d3f:	xor    edx,edx
   140005d41:	mov    rcx,rax
   140005d44:	call   QWORD PTR [rip+0x3306]        # 0x140009050
   140005d4a:	xor    ecx,ecx
   140005d4c:	call   0x140007fa8
   140005d51:	mov    eax,r14d
   140005d54:	mov    rbx,QWORD PTR [rsp+0x70]
   140005d59:	add    rsp,0x40
   140005d5d:	pop    r15
   140005d5f:	pop    r14
   140005d61:	pop    rdi
   140005d62:	pop    rsi
   140005d63:	pop    rbp
   140005d64:	ret    
   140005d65:	mov    rbx,QWORD PTR [rbp+0x40]
   140005d69:	mov    rax,QWORD PTR [rbx]
   140005d6c:	mov    rsi,QWORD PTR [rax+0x38]
   140005d70:	mov    rcx,rsi
   140005d73:	call   QWORD PTR [rip+0x367f]        # 0x1400093f8
   140005d79:	lea    rdx,[rbp+0x48]
   140005d7d:	mov    rcx,rbx
   140005d80:	call   rsi
   140005d82:	mov    r14d,eax
   140005d85:	test   eax,eax
   140005d87:	js     0x140005cfe
   140005d8d:	mov    rcx,QWORD PTR [rbp+0x48]
   140005d91:	mov    eax,DWORD PTR [rcx+0x14]
   140005d94:	mov    r9d,DWORD PTR [rcx+0x10]
   140005d98:	movzx  r8d,WORD PTR [rcx+0x1a]
   140005d9d:	movzx  edx,WORD PTR [rcx+0x18]
   140005da1:	mov    rcx,r15
   140005da4:	mov    DWORD PTR [rsp+0x20],eax
   140005da8:	call   QWORD PTR [rip+0x33a2]        # 0x140009150
   140005dae:	mov    rbx,QWORD PTR [rbp+0x40]
   140005db2:	mov    r14d,eax
   140005db5:	mov    rax,QWORD PTR [rbx]
   140005db8:	mov    rsi,QWORD PTR [rax+0x60]
   140005dbc:	mov    rcx,rsi
   140005dbf:	call   QWORD PTR [rip+0x3633]        # 0x1400093f8
   140005dc5:	mov    rdx,QWORD PTR [rbp+0x48]
   140005dc9:	mov    rcx,rbx
   140005dcc:	call   rsi
   140005dce:	test   r14d,r14d
   140005dd1:	jns    0x140005d05
   140005dd7:	mov    ecx,r14d
   140005dda:	jmp    0x140005d00
   140005ddf:	int3   
   140005de0:	int3   
   140005de1:	int3   
   140005de2:	int3   
   140005de3:	int3   
   140005de4:	int3   
   140005de5:	int3   
   140005de6:	int3   
   140005de7:	int3   
   140005de8:	int3   
   140005de9:	int3   
   140005dea:	int3   
   140005deb:	int3   
   140005dec:	int3   
   140005ded:	int3   
   140005dee:	int3   
   140005def:	int3   
   140005df0:	mov    QWORD PTR [rsp+0x8],rbx
   140005df5:	mov    QWORD PTR [rsp+0x10],rsi
   140005dfa:	mov    QWORD PTR [rsp+0x18],rdi
   140005dff:	push   r14
   140005e01:	sub    rsp,0x20
   140005e05:	mov    r14,r8
   140005e08:	mov    rsi,rdx
   140005e0b:	mov    rdi,rcx
   140005e0e:	test   r8,r8
   140005e11:	jne    0x140005e1c
   140005e13:	mov    ebx,0x80004003
   140005e18:	mov    ecx,ebx
   140005e1a:	jmp    0x140005e74
   140005e1c:	mov    rax,QWORD PTR [rip+0x3fc5]        # 0x140009de8
   140005e23:	cmp    rax,QWORD PTR [rdx]
   140005e26:	jne    0x140005e51
   140005e28:	mov    rax,QWORD PTR [rip+0x3fc1]        # 0x140009df0
   140005e2f:	cmp    rax,QWORD PTR [rdx+0x8]
   140005e33:	jne    0x140005e51
   140005e35:	mov    rax,QWORD PTR [rcx]
   140005e38:	mov    rbx,QWORD PTR [rax+0x8]
   140005e3c:	mov    rcx,rbx
   140005e3f:	call   QWORD PTR [rip+0x35b3]        # 0x1400093f8
   140005e45:	mov    rcx,rdi
   140005e48:	call   rbx
   140005e4a:	xor    ebx,ebx
   140005e4c:	mov    QWORD PTR [r14],rdi
   140005e4f:	jmp    0x140005e79
   140005e51:	mov    rax,QWORD PTR [rcx]
   140005e54:	mov    rbx,QWORD PTR [rax+0x20]
   140005e58:	mov    rcx,rbx
   140005e5b:	call   QWORD PTR [rip+0x3597]        # 0x1400093f8
   140005e61:	mov    r8,r14
   140005e64:	mov    rdx,rsi
   140005e67:	mov    rcx,rdi
   140005e6a:	call   rbx
   140005e6c:	mov    ebx,eax
   140005e6e:	test   eax,eax
   140005e70:	jns    0x140005e79
   140005e72:	mov    ecx,eax
   140005e74:	call   0x140008090
   140005e79:	mov    ecx,ebx
   140005e7b:	call   0x140007fa8
   140005e80:	mov    rsi,QWORD PTR [rsp+0x38]
   140005e85:	mov    eax,ebx
   140005e87:	mov    rbx,QWORD PTR [rsp+0x30]
   140005e8c:	mov    rdi,QWORD PTR [rsp+0x40]
   140005e91:	add    rsp,0x20
   140005e95:	pop    r14
   140005e97:	ret    
   140005e98:	int3   
   140005e99:	int3   
   140005e9a:	int3   
   140005e9b:	int3   
   140005e9c:	int3   
   140005e9d:	int3   
   140005e9e:	int3   
   140005e9f:	int3   
   140005ea0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ea5:	mov    QWORD PTR [rsp+0x10],rsi
   140005eaa:	push   rdi
   140005eab:	sub    rsp,0x20
   140005eaf:	mov    rsi,rcx
   140005eb2:	mov    ecx,0x80004002
   140005eb7:	mov    rdi,r8
   140005eba:	test   r8,r8
   140005ebd:	jne    0x140005ec6
   140005ebf:	mov    ecx,0x80004003
   140005ec4:	jmp    0x140005eff
   140005ec6:	mov    rax,QWORD PTR [rdx]
   140005ec9:	cmp    rax,QWORD PTR [rip+0x3e48]        # 0x140009d18
   140005ed0:	jne    0x140005efb
   140005ed2:	mov    rax,QWORD PTR [rdx+0x8]
   140005ed6:	cmp    rax,QWORD PTR [rip+0x3e43]        # 0x140009d20
   140005edd:	jne    0x140005efb
   140005edf:	mov    rax,QWORD PTR [rsi]
   140005ee2:	mov    rbx,QWORD PTR [rax+0x8]
   140005ee6:	mov    rcx,rbx
   140005ee9:	call   QWORD PTR [rip+0x3509]        # 0x1400093f8
   140005eef:	mov    rcx,rsi
   140005ef2:	call   rbx
   140005ef4:	xor    ecx,ecx
   140005ef6:	mov    QWORD PTR [rdi],rsi
   140005ef9:	jmp    0x140005f04
   140005efb:	and    QWORD PTR [r8],0x0
   140005eff:	call   0x140008090
   140005f04:	mov    rbx,QWORD PTR [rsp+0x30]
   140005f09:	mov    eax,ecx
   140005f0b:	mov    rsi,QWORD PTR [rsp+0x38]
   140005f10:	add    rsp,0x20
   140005f14:	pop    rdi
   140005f15:	ret    
   140005f16:	int3   
   140005f17:	int3   
   140005f18:	int3   
   140005f19:	int3   
   140005f1a:	int3   
   140005f1b:	int3   
   140005f1c:	int3   
   140005f1d:	int3   
   140005f1e:	int3   
   140005f1f:	int3   
   140005f20:	mov    rax,rsp
   140005f23:	mov    QWORD PTR [rax+0x8],rbx
   140005f27:	mov    QWORD PTR [rax+0x10],rsi
   140005f2b:	mov    QWORD PTR [rax+0x18],rdi
   140005f2f:	push   rbp
   140005f30:	push   r12
   140005f32:	push   r13
   140005f34:	push   r14
   140005f36:	push   r15
   140005f38:	lea    rbp,[rax-0x4f]
   140005f3c:	sub    rsp,0xb0
   140005f43:	and    QWORD PTR [rbp-0x11],0x0
   140005f48:	lea    rcx,[rip+0x3da9]        # 0x140009cf8
   140005f4f:	and    QWORD PTR [rbp-0x49],0x0
   140005f54:	xor    eax,eax
   140005f56:	and    DWORD PTR [rbp-0x1],eax
   140005f59:	xor    edi,edi
   140005f5b:	and    DWORD PTR [rbp+0x3],eax
   140005f5e:	mov    r12,r9
   140005f61:	and    QWORD PTR [rbp+0x7],rax
   140005f65:	lea    r9,[rip+0x3d9c]        # 0x140009d08
   140005f6c:	and    DWORD PTR [rbp-0x9],eax
   140005f6f:	mov    rbx,rdx
   140005f72:	and    QWORD PTR [rbp-0x21],rax
   140005f76:	lea    r8d,[rdi+0x15]
   140005f7a:	and    QWORD PTR [rbp+0xf],rax
   140005f7e:	xor    edx,edx
   140005f80:	and    QWORD PTR [rbp-0x41],0x0
   140005f85:	and    QWORD PTR [rbp-0x39],0x0
   140005f8a:	and    DWORD PTR [rbp-0x31],0x0
   140005f8e:	mov    DWORD PTR [rbp-0x19],eax
   140005f91:	lea    rax,[rbp-0x11]
   140005f95:	mov    QWORD PTR [rbp-0x29],rdi
   140005f99:	mov    QWORD PTR [rsp+0x20],rax
   140005f9e:	call   QWORD PTR [rip+0x324c]        # 0x1400091f0
   140005fa4:	mov    r14d,eax
   140005fa7:	test   eax,eax
   140005fa9:	jns    0x140005fb7
   140005fab:	mov    ecx,eax
   140005fad:	call   0x140008090
   140005fb2:	jmp    0x140006355
   140005fb7:	mov    r8,rbx
   140005fba:	lea    rdx,[rip+0x3c6f]        # 0x140009c30
   140005fc1:	lea    rcx,[rbp-0x29]
   140005fc5:	call   0x140007a94
   140005fca:	mov    r14d,eax
   140005fcd:	test   eax,eax
   140005fcf:	jns    0x140005fe1
   140005fd1:	mov    ecx,eax
   140005fd3:	call   0x140008090
   140005fd8:	mov    rdi,QWORD PTR [rbp-0x29]
   140005fdc:	jmp    0x140006355
   140005fe1:	mov    rbx,QWORD PTR [rbp-0x11]
   140005fe5:	mov    rdi,QWORD PTR [rbp-0x29]
   140005fe9:	mov    rax,QWORD PTR [rbx]
   140005fec:	mov    rsi,QWORD PTR [rax+0x18]
   140005ff0:	mov    rcx,rsi
   140005ff3:	call   QWORD PTR [rip+0x33ff]        # 0x1400093f8
   140005ff9:	and    QWORD PTR [rsp+0x20],0x0
   140005fff:	xor    r9d,r9d
   140006002:	mov    r8,rdi
   140006005:	mov    edx,0x40000030
   14000600a:	mov    rcx,rbx
   14000600d:	call   rsi
   14000600f:	mov    r14d,eax
   140006012:	test   eax,eax
   140006014:	js     0x140005fab
   140006016:	mov    rbx,QWORD PTR [rbp-0x11]
   14000601a:	mov    rax,QWORD PTR [rbx]
   14000601d:	mov    rsi,QWORD PTR [rax]
   140006020:	mov    rcx,rsi
   140006023:	call   QWORD PTR [rip+0x33cf]        # 0x1400093f8
   140006029:	lea    r8,[rbp-0x49]
   14000602d:	mov    rcx,rbx
   140006030:	lea    rdx,[rip+0x3d49]        # 0x140009d80
   140006037:	call   rsi
   140006039:	mov    r14d,eax
   14000603c:	test   eax,eax
   14000603e:	js     0x140005fab
   140006044:	mov    rbx,QWORD PTR [rbp-0x49]
   140006048:	mov    rax,QWORD PTR [rbx]
   14000604b:	mov    rsi,QWORD PTR [rax+0x58]
   14000604f:	mov    rcx,rsi
   140006052:	call   QWORD PTR [rip+0x33a0]        # 0x1400093f8
   140006058:	lea    rdx,[rbp-0x21]
   14000605c:	mov    rcx,rbx
   14000605f:	call   rsi
   140006061:	mov    r14d,eax
   140006064:	test   eax,eax
   140006066:	js     0x140005fab
   14000606c:	call   QWORD PTR [rip+0x2fee]        # 0x140009060
   140006072:	xor    edx,edx
   140006074:	mov    rcx,rax
   140006077:	lea    r8d,[rdx+0x20]
   14000607b:	call   QWORD PTR [rip+0x2fc7]        # 0x140009048
   140006081:	mov    r15,rax
   140006084:	test   rax,rax
   140006087:	je     0x1400060db
   140006089:	lea    rax,[rip+0x3788]        # 0x140009818
   140006090:	mov    QWORD PTR [r15],rax
   140006093:	and    QWORD PTR [r15+0x8],0x0
   140006098:	and    QWORD PTR [r15+0x10],0x0
   14000609d:	and    DWORD PTR [r15+0x18],0x0
   1400060a2:	cmp    DWORD PTR [rip+0x6677],0x0        # 0x14000c720
   1400060a9:	mov    DWORD PTR [r15+0x1c],0x1
   1400060b1:	je     0x1400060de
   1400060b3:	lea    rcx,[rip+0x6616]        # 0x14000c6d0
   1400060ba:	call   QWORD PTR [rip+0x2fb0]        # 0x140009070
   1400060c0:	inc    DWORD PTR [rip+0x6602]        # 0x14000c6c8
   1400060c6:	call   QWORD PTR [rip+0x30d4]        # 0x1400091a0
   1400060cc:	lea    rcx,[rip+0x65fd]        # 0x14000c6d0
   1400060d3:	call   QWORD PTR [rip+0x2f9f]        # 0x140009078
   1400060d9:	jmp    0x1400060de
   1400060db:	xor    r15d,r15d
   1400060de:	mov    rax,r15
   1400060e1:	neg    rax
   1400060e4:	sbb    r14d,r14d
   1400060e7:	not    r14d
   1400060ea:	and    r14d,0x8007000e
   1400060f1:	jge    0x140006100
   1400060f3:	mov    ecx,r14d
   1400060f6:	call   0x140008090
   1400060fb:	jmp    0x14000633b
   140006100:	mov    rax,QWORD PTR [r15]
   140006103:	mov    rbx,QWORD PTR [rax+0x40]
   140006107:	mov    rcx,rbx
   14000610a:	call   QWORD PTR [rip+0x32e8]        # 0x1400093f8
   140006110:	mov    r13d,DWORD PTR [rbp+0x77]
   140006114:	lea    r9,[rbp+0xf]
   140006118:	mov    rdx,QWORD PTR [rbp-0x49]
   14000611c:	mov    r8d,r13d
   14000611f:	mov    rcx,r15
   140006122:	call   rbx
   140006124:	mov    r14d,eax
   140006127:	test   eax,eax
   140006129:	jns    0x14000612f
   14000612b:	mov    ecx,eax
   14000612d:	jmp    0x1400060f6
   14000612f:	mov    rbx,QWORD PTR [rbp-0x49]
   140006133:	mov    rax,QWORD PTR [rbx]
   140006136:	mov    rsi,QWORD PTR [rax+0x80]
   14000613d:	mov    rcx,rsi
   140006140:	call   QWORD PTR [rip+0x32b2]        # 0x1400093f8
   140006146:	mov    rdx,r15
   140006149:	mov    rcx,rbx
   14000614c:	call   rsi
   14000614e:	mov    r14d,eax
   140006151:	test   eax,eax
   140006153:	js     0x14000612b
   140006155:	lea    r8,[rbp-0x1]
   140006159:	mov    rcx,r12
   14000615c:	call   0x14000646c
   140006161:	mov    r14d,eax
   140006164:	test   eax,eax
   140006166:	js     0x14000612b
   140006168:	mov    r12d,DWORD PTR [rbp+0x3]
   14000616c:	test   r13d,r13d
   14000616f:	je     0x1400061b4
   140006171:	test   r12d,r12d
   140006174:	jle    0x1400061b4
   140006176:	mov    rsi,QWORD PTR [rbp+0xf]
   14000617a:	test   rsi,rsi
   14000617d:	je     0x1400061b4
   14000617f:	xor    eax,eax
   140006181:	mov    DWORD PTR [rbp+0x1b],0x67
   140006188:	cmp    r12d,0x1
   14000618c:	setle  al
   14000618f:	add    eax,0x65
   140006192:	mov    DWORD PTR [rbp+0x17],eax
   140006195:	mov    rax,QWORD PTR [rsi]
   140006198:	mov    rbx,QWORD PTR [rax+0x8]
   14000619c:	mov    rcx,rbx
   14000619f:	call   QWORD PTR [rip+0x3253]        # 0x1400093f8
   1400061a5:	mov    r8d,0x2
   1400061ab:	lea    rdx,[rbp+0x17]
   1400061af:	mov    rcx,rsi
   1400061b2:	call   rbx
   1400061b4:	xor    r13d,r13d
   1400061b7:	test   r12d,r12d
   1400061ba:	jle    0x140006304
   1400061c0:	xor    eax,eax
   1400061c2:	mov    QWORD PTR [rbp-0x29],rax
   1400061c6:	mov    rcx,QWORD PTR [rbp+0x7]
   1400061ca:	mov    rbx,QWORD PTR [rbp-0x49]
   1400061ce:	mov    r14,QWORD PTR [rcx+rax*1]
   1400061d2:	mov    rax,QWORD PTR [rbx]
   1400061d5:	mov    rsi,QWORD PTR [rax+0x90]
   1400061dc:	mov    rcx,rsi
   1400061df:	call   QWORD PTR [rip+0x3213]        # 0x1400093f8
   1400061e5:	xor    r9d,r9d
   1400061e8:	lea    rax,[rbp-0x41]
   1400061ec:	mov    QWORD PTR [rsp+0x38],rax
   1400061f1:	mov    r8,r14
   1400061f4:	and    DWORD PTR [rsp+0x30],0x0
   1400061f9:	mov    rcx,rbx
   1400061fc:	and    DWORD PTR [rsp+0x28],0x0
   140006201:	and    QWORD PTR [rsp+0x20],0x0
   140006207:	lea    edx,[r9+0x7]
   14000620b:	call   rsi
   14000620d:	mov    r14d,eax
   140006210:	test   eax,eax
   140006212:	js     0x14000612b
   140006218:	jmp    0x140006287
   14000621a:	cmp    DWORD PTR [rbp-0x31],0x0
   14000621e:	jbe    0x1400062b5
   140006224:	mov    eax,DWORD PTR [rbp+0x77]
   140006227:	mov    rbx,QWORD PTR [rbp-0x39]
   14000622b:	neg    eax
   14000622d:	mov    DWORD PTR [rbp-0x19],0x1
   140006234:	sbb    esi,esi
   140006236:	and    esi,0x7
   140006239:	mov    rcx,QWORD PTR [rbx]
   14000623c:	mov    r14,QWORD PTR [rcx+0x58]
   140006240:	mov    rcx,r14
   140006243:	call   QWORD PTR [rip+0x31af]        # 0x1400093f8
   140006249:	xor    r9d,r9d
   14000624c:	mov    r8d,esi
   14000624f:	mov    rcx,rbx
   140006252:	lea    edx,[r9+0xc]
   140006256:	call   r14
   140006259:	mov    r14d,eax
   14000625c:	test   eax,eax
   14000625e:	js     0x14000612b
   140006264:	mov    rbx,QWORD PTR [rbp-0x39]
   140006268:	test   rbx,rbx
   14000626b:	je     0x140006287
   14000626d:	mov    rax,QWORD PTR [rbx]
   140006270:	mov    rsi,QWORD PTR [rax+0x10]
   140006274:	mov    rcx,rsi
   140006277:	call   QWORD PTR [rip+0x317b]        # 0x1400093f8
   14000627d:	mov    rcx,rbx
   140006280:	call   rsi
   140006282:	and    QWORD PTR [rbp-0x39],0x0
   140006287:	mov    rbx,QWORD PTR [rbp-0x41]
   14000628b:	mov    rax,QWORD PTR [rbx]
   14000628e:	mov    rsi,QWORD PTR [rax+0x18]
   140006292:	mov    rcx,rsi
   140006295:	call   QWORD PTR [rip+0x315d]        # 0x1400093f8
   14000629b:	lea    r9,[rbp-0x31]
   14000629f:	mov    edx,0x1
   1400062a4:	lea    r8,[rbp-0x39]
   1400062a8:	mov    rcx,rbx
   1400062ab:	call   rsi
   1400062ad:	test   eax,eax
   1400062af:	je     0x14000621a
   1400062b5:	mov    rbx,QWORD PTR [rbp-0x41]
   1400062b9:	test   rbx,rbx
   1400062bc:	je     0x1400062d8
   1400062be:	mov    rax,QWORD PTR [rbx]
   1400062c1:	mov    rsi,QWORD PTR [rax+0x10]
   1400062c5:	mov    rcx,rsi
   1400062c8:	call   QWORD PTR [rip+0x312a]        # 0x1400093f8
   1400062ce:	mov    rcx,rbx
   1400062d1:	call   rsi
   1400062d3:	and    QWORD PTR [rbp-0x41],0x0
   1400062d8:	mov    rax,QWORD PTR [rbp-0x29]
   1400062dc:	inc    r13d
   1400062df:	add    rax,0x8
   1400062e3:	mov    QWORD PTR [rbp-0x29],rax
   1400062e7:	cmp    r13d,r12d
   1400062ea:	jl     0x1400061c6
   1400062f0:	mov    eax,DWORD PTR [rbp-0x19]
   1400062f3:	test   eax,eax
   1400062f5:	jne    0x140006304
   1400062f7:	test   r12d,r12d
   1400062fa:	jle    0x140006304
   1400062fc:	mov    r14d,0x80070002
   140006302:	jmp    0x140006326
   140006304:	mov    rbx,QWORD PTR [rbp-0x49]
   140006308:	mov    rax,QWORD PTR [rbx]
   14000630b:	mov    rsi,QWORD PTR [rax+0x70]
   14000630f:	mov    rcx,rsi
   140006312:	call   QWORD PTR [rip+0x30e0]        # 0x1400093f8
   140006318:	lea    r8,[rbp-0x9]
   14000631c:	mov    edx,0x200
   140006321:	mov    rcx,rbx
   140006324:	call   rsi
   140006326:	mov    rcx,QWORD PTR [rbp+0x7f]
   14000632a:	test   rcx,rcx
   14000632d:	je     0x14000633b
   14000632f:	mov    rax,QWORD PTR [rbp-0x21]
   140006333:	and    QWORD PTR [rbp-0x21],0x0
   140006338:	mov    QWORD PTR [rcx],rax
   14000633b:	test   r15,r15
   14000633e:	je     0x140006355
   140006340:	mov    rax,QWORD PTR [r15]
   140006343:	mov    rbx,QWORD PTR [rax+0x10]
   140006347:	mov    rcx,rbx
   14000634a:	call   QWORD PTR [rip+0x30a8]        # 0x1400093f8
   140006350:	mov    rcx,r15
   140006353:	call   rbx
   140006355:	mov    ecx,r14d
   140006358:	call   0x140007fa8
   14000635d:	test   rdi,rdi
   140006360:	je     0x14000637e
   140006362:	call   QWORD PTR [rip+0x2cf8]        # 0x140009060
   140006368:	lea    r8,[rdi-0x4]
   14000636c:	xor    edx,edx
   14000636e:	mov    rcx,rax
   140006371:	call   QWORD PTR [rip+0x2cd9]        # 0x140009050
   140006377:	xor    ecx,ecx
   140006379:	call   0x140007fa8
   14000637e:	mov    rcx,QWORD PTR [rbp-0x21]
   140006382:	test   rcx,rcx
   140006385:	je     0x140006392
   140006387:	call   QWORD PTR [rip+0x2e1b]        # 0x1400091a8
   14000638d:	and    QWORD PTR [rbp-0x21],0x0
   140006392:	xor    edx,edx
   140006394:	lea    rcx,[rbp-0x1]
   140006398:	call   0x140004bdc
   14000639d:	mov    rbx,QWORD PTR [rbp+0x7]
   1400063a1:	test   rbx,rbx
   1400063a4:	je     0x1400063ba
   1400063a6:	call   QWORD PTR [rip+0x2cb4]        # 0x140009060
   1400063ac:	mov    r8,rbx
   1400063af:	xor    edx,edx
   1400063b1:	mov    rcx,rax
   1400063b4:	call   QWORD PTR [rip+0x2c96]        # 0x140009050
   1400063ba:	mov    rbx,QWORD PTR [rbp-0x39]
   1400063be:	test   rbx,rbx
   1400063c1:	je     0x1400063dd
   1400063c3:	mov    rax,QWORD PTR [rbx]
   1400063c6:	mov    rdi,QWORD PTR [rax+0x10]
   1400063ca:	mov    rcx,rdi
   1400063cd:	call   QWORD PTR [rip+0x3025]        # 0x1400093f8
   1400063d3:	mov    rcx,rbx
   1400063d6:	call   rdi
   1400063d8:	and    QWORD PTR [rbp-0x39],0x0
   1400063dd:	mov    rbx,QWORD PTR [rbp-0x41]
   1400063e1:	test   rbx,rbx
   1400063e4:	je     0x140006400
   1400063e6:	mov    rax,QWORD PTR [rbx]
   1400063e9:	mov    rdi,QWORD PTR [rax+0x10]
   1400063ed:	mov    rcx,rdi
   1400063f0:	call   QWORD PTR [rip+0x3002]        # 0x1400093f8
   1400063f6:	mov    rcx,rbx
   1400063f9:	call   rdi
   1400063fb:	and    QWORD PTR [rbp-0x41],0x0
   140006400:	mov    rbx,QWORD PTR [rbp-0x49]
   140006404:	test   rbx,rbx
   140006407:	je     0x140006423
   140006409:	mov    rax,QWORD PTR [rbx]
   14000640c:	mov    rdi,QWORD PTR [rax+0x10]
   140006410:	mov    rcx,rdi
   140006413:	call   QWORD PTR [rip+0x2fdf]        # 0x1400093f8
   140006419:	mov    rcx,rbx
   14000641c:	call   rdi
   14000641e:	and    QWORD PTR [rbp-0x49],0x0
   140006423:	mov    rbx,QWORD PTR [rbp-0x11]
   140006427:	test   rbx,rbx
   14000642a:	je     0x140006441
   14000642c:	mov    rax,QWORD PTR [rbx]
   14000642f:	mov    rdi,QWORD PTR [rax+0x10]
   140006433:	mov    rcx,rdi
   140006436:	call   QWORD PTR [rip+0x2fbc]        # 0x1400093f8
   14000643c:	mov    rcx,rbx
   14000643f:	call   rdi
   140006441:	lea    r11,[rsp+0xb0]
   140006449:	mov    eax,r14d
   14000644c:	mov    rbx,QWORD PTR [r11+0x30]
   140006450:	mov    rsi,QWORD PTR [r11+0x38]
   140006454:	mov    rdi,QWORD PTR [r11+0x40]
   140006458:	mov    rsp,r11
   14000645b:	pop    r15
   14000645d:	pop    r14
   14000645f:	pop    r13
   140006461:	pop    r12
   140006463:	pop    rbp
   140006464:	ret    
   140006465:	int3   
   140006466:	int3   
   140006467:	int3   
   140006468:	int3   
   140006469:	int3   
   14000646a:	int3   
   14000646b:	int3   
   14000646c:	mov    QWORD PTR [rsp+0x18],rbx
   140006471:	mov    WORD PTR [rsp+0x10],dx
   140006476:	push   rbp
   140006477:	push   rsi
   140006478:	push   rdi
   140006479:	push   r12
   14000647b:	push   r13
   14000647d:	push   r14
   14000647f:	push   r15
   140006481:	mov    rbp,rsp
   140006484:	sub    rsp,0x40
   140006488:	xor    r13d,r13d
   14000648b:	mov    r12,r8
   14000648e:	mov    QWORD PTR [rbp-0x20],r13
   140006492:	mov    rsi,rcx
   140006495:	mov    QWORD PTR [rbp-0x18],r13
   140006499:	mov    edi,r13d
   14000649c:	mov    QWORD PTR [rbp+0x40],r13
   1400064a0:	test   rcx,rcx
   1400064a3:	je     0x14000666b
   1400064a9:	cmp    WORD PTR [rcx],r13w
   1400064ad:	je     0x14000666b
   1400064b3:	test   r8,r8
   1400064b6:	je     0x14000666b
   1400064bc:	mov    r15d,DWORD PTR [rbp+0x48]
   1400064c0:	lea    r14d,[r13+0x3b]
   1400064c4:	mov    rbx,rcx
   1400064c7:	cmp    WORD PTR [rbx],r13w
   1400064cb:	je     0x1400065c1
   1400064d1:	mov    rax,QWORD PTR [rbp+0x40]
   1400064d5:	test   rax,rax
   1400064d8:	je     0x1400064fd
   1400064da:	lea    rbx,[rax-0x4]
   1400064de:	call   QWORD PTR [rip+0x2b7c]        # 0x140009060
   1400064e4:	mov    r8,rbx
   1400064e7:	xor    edx,edx
   1400064e9:	mov    rcx,rax
   1400064ec:	call   QWORD PTR [rip+0x2b5e]        # 0x140009050
   1400064f2:	xor    ecx,ecx
   1400064f4:	call   0x140007fa8
   1400064f9:	mov    QWORD PTR [rbp+0x40],r13
   1400064fd:	mov    edx,r14d
   140006500:	mov    rcx,rsi
   140006503:	call   QWORD PTR [rip+0x2e3f]        # 0x140009348
   140006509:	mov    r14,rax
   14000650c:	test   rax,rax
   14000650f:	je     0x1400065c1
   140006515:	lea    rbx,[rax+0x2]
   140006519:	test   rbx,rbx
   14000651c:	je     0x14000652e
   14000651e:	mov    eax,0x3b
   140006523:	cmp    WORD PTR [rbx],ax
   140006526:	jne    0x14000652e
   140006528:	add    rbx,0x2
   14000652c:	jne    0x140006523
   14000652e:	cmp    rsi,r14
   140006531:	je     0x1400065af
   140006533:	sub    r14,rsi
   140006536:	sar    r14,1
   140006539:	mov    eax,r14d
   14000653c:	cmp    r14,rax
   14000653f:	je     0x140006551
   140006541:	mov    eax,0x80070216
   140006546:	mov    ecx,eax
   140006548:	mov    edi,eax
   14000654a:	call   0x140008090
   14000654f:	jmp    0x14000655e
   140006551:	xor    ecx,ecx
   140006553:	call   0x140007fa8
   140006558:	mov    edi,r13d
   14000655b:	mov    r15d,r14d
   14000655e:	mov    ecx,edi
   140006560:	call   0x140007fa8
   140006565:	test   edi,edi
   140006567:	jns    0x14000656d
   140006569:	mov    ecx,edi
   14000656b:	jmp    0x140006584
   14000656d:	lea    r8,[rbp+0x40]
   140006571:	mov    edx,r15d
   140006574:	mov    rcx,rsi
   140006577:	call   0x140007e80
   14000657c:	mov    edi,eax
   14000657e:	test   eax,eax
   140006580:	jns    0x140006589
   140006582:	mov    ecx,eax
   140006584:	call   0x140008090
   140006589:	mov    ecx,edi
   14000658b:	call   0x140007fa8
   140006590:	test   edi,edi
   140006592:	js     0x140006667
   140006598:	lea    rdx,[rbp+0x40]
   14000659c:	lea    rcx,[rbp-0x20]
   1400065a0:	call   0x140001cfc
   1400065a5:	mov    edi,eax
   1400065a7:	test   eax,eax
   1400065a9:	js     0x140006663
   1400065af:	mov    rsi,rbx
   1400065b2:	mov    r14d,0x3b
   1400065b8:	test   rbx,rbx
   1400065bb:	jne    0x1400064c7
   1400065c1:	test   rsi,rsi
   1400065c4:	je     0x140006618
   1400065c6:	cmp    WORD PTR [rsi],r13w
   1400065ca:	je     0x140006618
   1400065cc:	lea    rdx,[rbp+0x48]
   1400065d0:	mov    rcx,rsi
   1400065d3:	call   0x140007dd8
   1400065d8:	mov    edi,eax
   1400065da:	test   eax,eax
   1400065dc:	js     0x1400065f3
   1400065de:	mov    edx,DWORD PTR [rbp+0x48]
   1400065e1:	lea    r8,[rbp+0x40]
   1400065e5:	mov    rcx,rsi
   1400065e8:	call   0x140007e80
   1400065ed:	mov    edi,eax
   1400065ef:	test   eax,eax
   1400065f1:	jns    0x1400065fa
   1400065f3:	mov    ecx,eax
   1400065f5:	call   0x140008090
   1400065fa:	mov    ecx,edi
   1400065fc:	call   0x140007fa8
   140006601:	test   edi,edi
   140006603:	js     0x140006667
   140006605:	lea    rdx,[rbp+0x40]
   140006609:	lea    rcx,[rbp-0x20]
   14000660d:	call   0x140001cfc
   140006612:	mov    edi,eax
   140006614:	test   eax,eax
   140006616:	js     0x140006663
   140006618:	lea    rdx,[rbp-0x20]
   14000661c:	mov    QWORD PTR [rbp-0x10],r13
   140006620:	lea    rcx,[rbp-0x10]
   140006624:	mov    QWORD PTR [rbp-0x8],r13
   140006628:	call   0x140001e84
   14000662d:	mov    rdx,r12
   140006630:	lea    rcx,[rbp-0x10]
   140006634:	call   0x140001e84
   140006639:	xor    edx,edx
   14000663b:	lea    rcx,[rbp-0x10]
   14000663f:	call   0x140004bdc
   140006644:	mov    rbx,QWORD PTR [rbp-0x8]
   140006648:	test   rbx,rbx
   14000664b:	je     0x140006677
   14000664d:	call   QWORD PTR [rip+0x2a0d]        # 0x140009060
   140006653:	mov    r8,rbx
   140006656:	xor    edx,edx
   140006658:	mov    rcx,rax
   14000665b:	call   QWORD PTR [rip+0x29ef]        # 0x140009050
   140006661:	jmp    0x140006677
   140006663:	mov    ecx,eax
   140006665:	jmp    0x140006672
   140006667:	mov    ecx,edi
   140006669:	jmp    0x140006672
   14000666b:	mov    ecx,0x80070057
   140006670:	mov    edi,ecx
   140006672:	call   0x140008090
   140006677:	mov    ecx,edi
   140006679:	call   0x140007fa8
   14000667e:	mov    rax,QWORD PTR [rbp+0x40]
   140006682:	test   rax,rax
   140006685:	je     0x1400066a6
   140006687:	lea    rbx,[rax-0x4]
   14000668b:	call   QWORD PTR [rip+0x29cf]        # 0x140009060
   140006691:	mov    r8,rbx
   140006694:	xor    edx,edx
   140006696:	mov    rcx,rax
   140006699:	call   QWORD PTR [rip+0x29b1]        # 0x140009050
   14000669f:	xor    ecx,ecx
   1400066a1:	call   0x140007fa8
   1400066a6:	xor    edx,edx
   1400066a8:	lea    rcx,[rbp-0x20]
   1400066ac:	call   0x140004bdc
   1400066b1:	mov    rbx,QWORD PTR [rbp-0x18]
   1400066b5:	test   rbx,rbx
   1400066b8:	je     0x1400066ce
   1400066ba:	call   QWORD PTR [rip+0x29a0]        # 0x140009060
   1400066c0:	mov    r8,rbx
   1400066c3:	xor    edx,edx
   1400066c5:	mov    rcx,rax
   1400066c8:	call   QWORD PTR [rip+0x2982]        # 0x140009050
   1400066ce:	mov    eax,edi
   1400066d0:	mov    rbx,QWORD PTR [rsp+0x90]
   1400066d8:	add    rsp,0x40
   1400066dc:	pop    r15
   1400066de:	pop    r14
   1400066e0:	pop    r13
   1400066e2:	pop    r12
   1400066e4:	pop    rdi
   1400066e5:	pop    rsi
   1400066e6:	pop    rbp
   1400066e7:	ret    
   1400066e8:	int3   
   1400066e9:	int3   
   1400066ea:	int3   
   1400066eb:	int3   
   1400066ec:	int3   
   1400066ed:	int3   
   1400066ee:	int3   
   1400066ef:	int3   
   1400066f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400066f5:	mov    QWORD PTR [rsp+0x18],rsi
   1400066fa:	push   rdi
   1400066fb:	push   r14
   1400066fd:	push   r15
   1400066ff:	sub    rsp,0x20
   140006703:	mov    rsi,rcx
   140006706:	movsxd r14,edx
   140006709:	mov    ecx,DWORD PTR [rcx+0x4]
   14000670c:	mov    r15,r8
   14000670f:	test   ecx,ecx
   140006711:	jns    0x14000671f
   140006713:	mov    edi,0x8000ffff
   140006718:	mov    ecx,edi
   14000671a:	jmp    0x1400067bc
   14000671f:	lea    r8,[rsp+0x58]
   140006724:	call   0x1400074d8
   140006729:	mov    edi,eax
   14000672b:	test   eax,eax
   14000672d:	jns    0x140006736
   14000672f:	mov    ecx,eax
   140006731:	jmp    0x1400067bc
   140006736:	mov    edi,DWORD PTR [rsi]
   140006738:	test   edi,edi
   14000673a:	jns    0x140006747
   14000673c:	mov    edi,0x8000ffff
   140006741:	mov    ebx,edi
   140006743:	mov    ecx,edi
   140006745:	jmp    0x1400067a8
   140006747:	cmp    DWORD PTR [rsp+0x58],edi
   14000674b:	jg     0x140006751
   14000674d:	xor    ebx,ebx
   14000674f:	jmp    0x1400067ad
   140006751:	mov    DWORD PTR [rsp+0x40],edi
   140006755:	jmp    0x140006790
   140006757:	test   edi,edi
   140006759:	jne    0x140006768
   14000675b:	mov    edi,0x20
   140006760:	xor    ebx,ebx
   140006762:	mov    DWORD PTR [rsp+0x40],edi
   140006766:	jmp    0x140006785
   140006768:	lea    r8,[rsp+0x40]
   14000676d:	mov    ecx,edi
   14000676f:	call   0x140007554
   140006774:	mov    ebx,eax
   140006776:	test   eax,eax
   140006778:	jns    0x140006781
   14000677a:	mov    ecx,eax
   14000677c:	call   0x140008090
   140006781:	mov    edi,DWORD PTR [rsp+0x40]
   140006785:	mov    ecx,ebx
   140006787:	call   0x140007fa8
   14000678c:	test   ebx,ebx
   14000678e:	js     0x1400067c3
   140006790:	cmp    edi,DWORD PTR [rsp+0x58]
   140006794:	jl     0x140006757
   140006796:	mov    edx,edi
   140006798:	mov    rcx,rsi
   14000679b:	call   0x140004d40
   1400067a0:	mov    ebx,eax
   1400067a2:	test   eax,eax
   1400067a4:	jns    0x1400067ad
   1400067a6:	mov    ecx,eax
   1400067a8:	call   0x140008090
   1400067ad:	mov    ecx,ebx
   1400067af:	call   0x140007fa8
   1400067b4:	mov    edi,ebx
   1400067b6:	test   ebx,ebx
   1400067b8:	jns    0x1400067c7
   1400067ba:	mov    ecx,ebx
   1400067bc:	call   0x140008090
   1400067c1:	jmp    0x140006807
   1400067c3:	mov    ecx,ebx
   1400067c5:	jmp    0x1400067a8
   1400067c7:	mov    r8d,DWORD PTR [rsi+0x4]
   1400067cb:	cmp    r14d,r8d
   1400067ce:	jge    0x1400067f0
   1400067d0:	mov    rdx,QWORD PTR [rsi+0x8]
   1400067d4:	sub    r8d,r14d
   1400067d7:	movsxd r8,r8d
   1400067da:	shl    r8,0x3
   1400067de:	lea    rcx,[rdx+r14*8]
   1400067e2:	add    rcx,0x8
   1400067e6:	lea    rdx,[rdx+r14*8]
   1400067ea:	call   QWORD PTR [rip+0x2b60]        # 0x140009350
   1400067f0:	mov    rax,QWORD PTR [rsi+0x8]
   1400067f4:	xor    edx,edx
   1400067f6:	mov    QWORD PTR [rax+r14*8],rdx
   1400067fa:	mov    rax,QWORD PTR [rsi+0x8]
   1400067fe:	mov    QWORD PTR [rax+r14*8],r15
   140006802:	inc    DWORD PTR [rsi+0x4]
   140006805:	xor    edi,edi
   140006807:	mov    ecx,edi
   140006809:	call   0x140007fa8
   14000680e:	mov    rbx,QWORD PTR [rsp+0x48]
   140006813:	mov    eax,edi
   140006815:	mov    rsi,QWORD PTR [rsp+0x50]
   14000681a:	add    rsp,0x20
   14000681e:	pop    r15
   140006820:	pop    r14
   140006822:	pop    rdi
   140006823:	ret    
   140006824:	int3   
   140006825:	int3   
   140006826:	int3   
   140006827:	int3   
   140006828:	int3   
   140006829:	int3   
   14000682a:	int3   
   14000682b:	int3   
   14000682c:	mov    rax,rsp
   14000682f:	mov    QWORD PTR [rax+0x10],rbx
   140006833:	mov    QWORD PTR [rax+0x18],rbp
   140006837:	mov    QWORD PTR [rax+0x20],rsi
   14000683b:	mov    QWORD PTR [rax+0x8],rcx
   14000683f:	push   rdi
   140006840:	sub    rsp,0x30
   140006844:	and    QWORD PTR [rax+0x8],0x0
   140006849:	lea    rcx,[rax+0x8]
   14000684d:	xor    esi,esi
   14000684f:	mov    rbp,rdx
   140006852:	and    DWORD PTR [rax-0xc],esi
   140006855:	and    DWORD PTR [rax-0x10],esi
   140006858:	mov    QWORD PTR [rax-0x18],rsi
   14000685c:	call   0x140007010
   140006861:	mov    rbx,QWORD PTR [rsp+0x40]
   140006866:	mov    edi,eax
   140006868:	test   eax,eax
   14000686a:	js     0x1400068bb
   14000686c:	mov    r8,rbp
   14000686f:	lea    rdx,[rip+0x3412]        # 0x140009c88
   140006876:	lea    rcx,[rsp+0x20]
   14000687b:	call   0x140006b6c
   140006880:	mov    edi,eax
   140006882:	test   eax,eax
   140006884:	jns    0x140006894
   140006886:	mov    ecx,eax
   140006888:	call   0x140008090
   14000688d:	mov    rsi,QWORD PTR [rsp+0x20]
   140006892:	jmp    0x1400068c2
   140006894:	mov    rsi,QWORD PTR [rsp+0x20]
   140006899:	mov    rdx,rsi
   14000689c:	call   0x140006c78
   1400068a1:	mov    edi,eax
   1400068a3:	test   eax,eax
   1400068a5:	js     0x1400068bb
   1400068a7:	mov    r9,rbx
   1400068aa:	xor    r8d,r8d
   1400068ad:	mov    rdx,rsi
   1400068b0:	call   0x140006ed0
   1400068b5:	mov    edi,eax
   1400068b7:	test   eax,eax
   1400068b9:	jns    0x1400068c2
   1400068bb:	mov    ecx,eax
   1400068bd:	call   0x140008090
   1400068c2:	mov    ecx,edi
   1400068c4:	call   0x140007fa8
   1400068c9:	test   rsi,rsi
   1400068cc:	je     0x1400068e2
   1400068ce:	call   QWORD PTR [rip+0x278c]        # 0x140009060
   1400068d4:	mov    r8,rsi
   1400068d7:	xor    edx,edx
   1400068d9:	mov    rcx,rax
   1400068dc:	call   QWORD PTR [rip+0x276e]        # 0x140009050
   1400068e2:	test   rbx,rbx
   1400068e5:	je     0x140006903
   1400068e7:	call   QWORD PTR [rip+0x2773]        # 0x140009060
   1400068ed:	lea    r8,[rbx-0x4]
   1400068f1:	xor    edx,edx
   1400068f3:	mov    rcx,rax
   1400068f6:	call   QWORD PTR [rip+0x2754]        # 0x140009050
   1400068fc:	xor    ecx,ecx
   1400068fe:	call   0x140007fa8
   140006903:	mov    rbx,QWORD PTR [rsp+0x48]
   140006908:	mov    eax,edi
   14000690a:	mov    rbp,QWORD PTR [rsp+0x50]
   14000690f:	mov    rsi,QWORD PTR [rsp+0x58]
   140006914:	add    rsp,0x30
   140006918:	pop    rdi
   140006919:	ret    
   14000691a:	int3   
   14000691b:	int3   
   14000691c:	int3   
   14000691d:	int3   
   14000691e:	int3   
   14000691f:	int3   
   140006920:	mov    rax,rsp
   140006923:	mov    QWORD PTR [rax+0x8],rbx
   140006927:	mov    QWORD PTR [rax+0x10],rbp
   14000692b:	push   rsi
   14000692c:	push   rdi
   14000692d:	push   r14
   14000692f:	sub    rsp,0x30
   140006933:	and    QWORD PTR [rax+0x18],0x0
   140006938:	xor    esi,esi
   14000693a:	and    DWORD PTR [rax-0x1c],esi
   14000693d:	mov    r14,rcx
   140006940:	and    DWORD PTR [rax-0x20],esi
   140006943:	lea    rcx,[rax+0x18]
   140006947:	mov    QWORD PTR [rax-0x28],rsi
   14000694b:	mov    rbp,rdx
   14000694e:	call   0x140007010
   140006953:	mov    rbx,QWORD PTR [rsp+0x60]
   140006958:	mov    edi,eax
   14000695a:	test   eax,eax
   14000695c:	js     0x1400069c6
   14000695e:	mov    r8,rbp
   140006961:	lea    rdx,[rip+0x3348]        # 0x140009cb0
   140006968:	lea    rcx,[rsp+0x20]
   14000696d:	call   0x140006b6c
   140006972:	mov    edi,eax
   140006974:	test   eax,eax
   140006976:	jns    0x140006986
   140006978:	mov    ecx,eax
   14000697a:	call   0x140008090
   14000697f:	mov    rsi,QWORD PTR [rsp+0x20]
   140006984:	jmp    0x1400069cd
   140006986:	mov    rsi,QWORD PTR [rsp+0x20]
   14000698b:	mov    rdx,rsi
   14000698e:	call   0x140006c78
   140006993:	mov    edi,eax
   140006995:	test   eax,eax
   140006997:	js     0x1400069c6
   140006999:	mov    r9,rbx
   14000699c:	xor    r8d,r8d
   14000699f:	mov    rdx,rsi
   1400069a2:	call   0x140006ed0
   1400069a7:	mov    edi,eax
   1400069a9:	test   eax,eax
   1400069ab:	js     0x1400069c6
   1400069ad:	mov    r9,QWORD PTR [r14+0x48]
   1400069b1:	lea    r8,[rip+0x3320]        # 0x140009cd8
   1400069b8:	mov    rdx,rsi
   1400069bb:	call   0x140006ed0
   1400069c0:	mov    edi,eax
   1400069c2:	test   eax,eax
   1400069c4:	jns    0x1400069cd
   1400069c6:	mov    ecx,eax
   1400069c8:	call   0x140008090
   1400069cd:	mov    ecx,edi
   1400069cf:	call   0x140007fa8
   1400069d4:	test   rsi,rsi
   1400069d7:	je     0x1400069ed
   1400069d9:	call   QWORD PTR [rip+0x2681]        # 0x140009060
   1400069df:	mov    r8,rsi
   1400069e2:	xor    edx,edx
   1400069e4:	mov    rcx,rax
   1400069e7:	call   QWORD PTR [rip+0x2663]        # 0x140009050
   1400069ed:	test   rbx,rbx
   1400069f0:	je     0x140006a0e
   1400069f2:	call   QWORD PTR [rip+0x2668]        # 0x140009060
   1400069f8:	lea    r8,[rbx-0x4]
   1400069fc:	xor    edx,edx
   1400069fe:	mov    rcx,rax
   140006a01:	call   QWORD PTR [rip+0x2649]        # 0x140009050
   140006a07:	xor    ecx,ecx
   140006a09:	call   0x140007fa8
   140006a0e:	mov    rbx,QWORD PTR [rsp+0x50]
   140006a13:	mov    eax,edi
   140006a15:	mov    rbp,QWORD PTR [rsp+0x58]
   140006a1a:	add    rsp,0x30
   140006a1e:	pop    r14
   140006a20:	pop    rdi
   140006a21:	pop    rsi
   140006a22:	ret    
   140006a23:	int3   
   140006a24:	int3   
   140006a25:	int3   
   140006a26:	int3   
   140006a27:	int3   
   140006a28:	int3   
   140006a29:	int3   
   140006a2a:	int3   
   140006a2b:	int3   
   140006a2c:	mov    QWORD PTR [rsp+0x10],rbx
   140006a31:	mov    QWORD PTR [rsp+0x18],rbp
   140006a36:	push   rsi
   140006a37:	push   rdi
   140006a38:	push   r12
   140006a3a:	push   r14
   140006a3c:	push   r15
   140006a3e:	sub    rsp,0x20
   140006a42:	movsxd rsi,edx
   140006a45:	xor    ebx,ebx
   140006a47:	mov    rdi,rcx
   140006a4a:	cmp    DWORD PTR [rcx],esi
   140006a4c:	je     0x140006b3b
   140006a52:	mov    r14d,DWORD PTR [rcx+0x4]
   140006a56:	cmp    esi,r14d
   140006a59:	cmovl  r14d,esi
   140006a5d:	test   edx,edx
   140006a5f:	jle    0x140006ad7
   140006a61:	mov    rcx,rsi
   140006a64:	mov    rbp,rcx
   140006a67:	shl    rbp,0x3
   140006a6b:	mov    rax,rbp
   140006a6e:	shr    rax,0x3
   140006a72:	cmp    rax,rcx
   140006a75:	je     0x140006a88
   140006a77:	mov    ebx,0x80070216
   140006a7c:	mov    ecx,ebx
   140006a7e:	call   0x140008090
   140006a83:	mov    rbp,QWORD PTR [rsp+0x50]
   140006a88:	mov    ecx,ebx
   140006a8a:	call   0x140007fa8
   140006a8f:	test   ebx,ebx
   140006a91:	jns    0x140006a9f
   140006a93:	mov    ecx,ebx
   140006a95:	call   0x140008090
   140006a9a:	jmp    0x140006b3b
   140006a9f:	call   QWORD PTR [rip+0x25bb]        # 0x140009060
   140006aa5:	mov    r8,rbp
   140006aa8:	xor    edx,edx
   140006aaa:	mov    rcx,rax
   140006aad:	call   QWORD PTR [rip+0x2595]        # 0x140009048
   140006ab3:	mov    rbx,rax
   140006ab6:	test   rax,rax
   140006ab9:	je     0x140006b5b
   140006abf:	test   r14d,r14d
   140006ac2:	je     0x140006ad7
   140006ac4:	mov    rdx,QWORD PTR [rdi+0x8]
   140006ac8:	mov    rcx,rax
   140006acb:	movsxd r8,r14d
   140006ace:	shl    r8,0x3
   140006ad2:	call   0x140008c82
   140006ad7:	cmp    esi,DWORD PTR [rdi+0x4]
   140006ada:	jge    0x140006b0d
   140006adc:	mov    r15,rsi
   140006adf:	mov    ebp,esi
   140006ae1:	shl    r15,0x3
   140006ae5:	mov    r12,QWORD PTR [rdi+0x8]
   140006ae9:	add    r12,r15
   140006aec:	je     0x140006b02
   140006aee:	mov    rcx,QWORD PTR [r12]
   140006af2:	test   rcx,rcx
   140006af5:	je     0x140006b02
   140006af7:	call   QWORD PTR [rip+0x25cb]        # 0x1400090c8
   140006afd:	and    QWORD PTR [r12],0x0
   140006b02:	inc    ebp
   140006b04:	add    r15,0x8
   140006b08:	cmp    ebp,DWORD PTR [rdi+0x4]
   140006b0b:	jl     0x140006ae5
   140006b0d:	mov    rbp,QWORD PTR [rdi+0x8]
   140006b11:	test   rbp,rbp
   140006b14:	je     0x140006b2f
   140006b16:	call   QWORD PTR [rip+0x2544]        # 0x140009060
   140006b1c:	mov    r8,rbp
   140006b1f:	xor    edx,edx
   140006b21:	mov    rcx,rax
   140006b24:	call   QWORD PTR [rip+0x2526]        # 0x140009050
   140006b2a:	and    QWORD PTR [rdi+0x8],0x0
   140006b2f:	mov    QWORD PTR [rdi+0x8],rbx
   140006b33:	xor    ebx,ebx
   140006b35:	mov    DWORD PTR [rdi+0x4],r14d
   140006b39:	mov    DWORD PTR [rdi],esi
   140006b3b:	mov    ecx,ebx
   140006b3d:	call   0x140007fa8
   140006b42:	mov    rbp,QWORD PTR [rsp+0x60]
   140006b47:	mov    eax,ebx
   140006b49:	mov    rbx,QWORD PTR [rsp+0x58]
   140006b4e:	add    rsp,0x20
   140006b52:	pop    r15
   140006b54:	pop    r14
   140006b56:	pop    r12
   140006b58:	pop    rdi
   140006b59:	pop    rsi
   140006b5a:	ret    
   140006b5b:	mov    ebx,0x8007000e
   140006b60:	jmp    0x140006a93
   140006b65:	int3   
   140006b66:	int3   
   140006b67:	int3   
   140006b68:	int3   
   140006b69:	int3   
   140006b6a:	int3   
   140006b6b:	int3   
   140006b6c:	mov    rax,rsp
   140006b6f:	mov    QWORD PTR [rax+0x10],rdx
   140006b73:	mov    QWORD PTR [rax+0x18],r8
   140006b77:	mov    QWORD PTR [rax+0x20],r9
   140006b7b:	push   rbx
   140006b7c:	push   rbp
   140006b7d:	push   rsi
   140006b7e:	push   rdi
   140006b7f:	push   r13
   140006b81:	push   r14
   140006b83:	push   r15
   140006b85:	sub    rsp,0x20
   140006b89:	xor    r15d,r15d
   140006b8c:	lea    r13,[rax+0x18]
   140006b90:	mov    r14,rdx
   140006b93:	mov    rdi,rcx
   140006b96:	mov    esi,0x400
   140006b9b:	cmp    QWORD PTR [rcx],r15
   140006b9e:	jne    0x140006bc7
   140006ba0:	mov    edx,esi
   140006ba2:	mov    QWORD PTR [rcx+0x8],r15
   140006ba6:	call   0x1400075d8
   140006bab:	mov    ebx,eax
   140006bad:	test   eax,eax
   140006baf:	jns    0x140006bb8
   140006bb1:	mov    ecx,eax
   140006bb3:	call   0x140008090
   140006bb8:	mov    ecx,ebx
   140006bba:	call   0x140007fa8
   140006bbf:	test   ebx,ebx
   140006bc1:	jns    0x140006bc7
   140006bc3:	mov    ecx,ebx
   140006bc5:	jmp    0x140006c40
   140006bc7:	lea    rbp,[rdi+0x8]
   140006bcb:	mov    r8,QWORD PTR [rdi]
   140006bce:	mov    r9,r13
   140006bd1:	mov    ecx,DWORD PTR [rbp+0x0]
   140006bd4:	mov    edx,DWORD PTR [rdi+0xc]
   140006bd7:	sub    edx,ecx
   140006bd9:	inc    edx
   140006bdb:	lea    rcx,[r8+rcx*2]
   140006bdf:	mov    r8,r14
   140006be2:	call   0x140007790
   140006be7:	mov    ebx,eax
   140006be9:	test   eax,eax
   140006beb:	jns    0x140006c2d
   140006bed:	cmp    eax,0x8007007a
   140006bf2:	jne    0x140006c3e
   140006bf4:	mov    rcx,QWORD PTR [rdi]
   140006bf7:	mov    eax,DWORD PTR [rbp+0x0]
   140006bfa:	mov    WORD PTR [rcx+rax*2],r15w
   140006bff:	mov    rcx,rdi
   140006c02:	cmp    esi,0x8000
   140006c08:	jae    0x140006c1b
   140006c0a:	mov    edx,esi
   140006c0c:	call   0x1400075d8
   140006c11:	mov    ebx,eax
   140006c13:	test   eax,eax
   140006c15:	js     0x140006c3e
   140006c17:	add    esi,esi
   140006c19:	jmp    0x140006bcb
   140006c1b:	mov    edx,0x400
   140006c20:	call   0x1400075d8
   140006c25:	mov    ebx,eax
   140006c27:	test   eax,eax
   140006c29:	js     0x140006c3e
   140006c2b:	jmp    0x140006bcb
   140006c2d:	mov    rcx,QWORD PTR [rdi]
   140006c30:	mov    rdx,rbp
   140006c33:	call   0x140007dd8
   140006c38:	mov    ebx,eax
   140006c3a:	test   eax,eax
   140006c3c:	jns    0x140006c45
   140006c3e:	mov    ecx,eax
   140006c40:	call   0x140008090
   140006c45:	mov    ecx,ebx
   140006c47:	call   0x140007fa8
   140006c4c:	test   ebx,ebx
   140006c4e:	jns    0x140006c57
   140006c50:	mov    ecx,ebx
   140006c52:	call   0x140008090
   140006c57:	mov    ecx,ebx
   140006c59:	call   0x140007fa8
   140006c5e:	mov    eax,ebx
   140006c60:	add    rsp,0x20
   140006c64:	pop    r15
   140006c66:	pop    r14
   140006c68:	pop    r13
   140006c6a:	pop    rdi
   140006c6b:	pop    rsi
   140006c6c:	pop    rbp
   140006c6d:	pop    rbx
   140006c6e:	ret    
   140006c6f:	int3   
   140006c70:	int3   
   140006c71:	int3   
   140006c72:	int3   
   140006c73:	int3   
   140006c74:	int3   
   140006c75:	int3   
   140006c76:	int3   
   140006c77:	int3   
   140006c78:	mov    r11,rsp
   140006c7b:	mov    QWORD PTR [r11+0x8],rcx
   140006c7f:	push   rbp
   140006c80:	push   rbx
   140006c81:	push   rdi
   140006c82:	mov    rbp,rsp
   140006c85:	sub    rsp,0x70
   140006c89:	xor    eax,eax
   140006c8b:	xor    ebx,ebx
   140006c8d:	and    QWORD PTR [rbp+0x38],rbx
   140006c91:	xor    r9d,r9d
   140006c94:	and    QWORD PTR [rbp+0x30],rbx
   140006c98:	xor    r8d,r8d
   140006c9b:	and    DWORD PTR [rbp-0x20],ebx
   140006c9e:	mov    rcx,0xffffffff80000000
   140006ca5:	mov    QWORD PTR [rbp-0x18],rax
   140006ca9:	mov    QWORD PTR [rbp-0x10],rax
   140006cad:	lea    rax,[rbp+0x20]
   140006cb1:	mov    QWORD PTR [r11-0x48],rax
   140006cb5:	lea    rax,[rbp+0x30]
   140006cb9:	mov    QWORD PTR [r11-0x50],rax
   140006cbd:	and    QWORD PTR [r11-0x58],rbx
   140006cc1:	mov    DWORD PTR [rsp+0x28],0x20019
   140006cc9:	and    DWORD PTR [rsp+0x20],ebx
   140006ccd:	call   QWORD PTR [rip+0x2355]        # 0x140009028
   140006cd3:	test   eax,eax
   140006cd5:	jne    0x140006d0a
   140006cd7:	xor    edi,edi
   140006cd9:	mov    rbx,QWORD PTR [rbp+0x30]
   140006cdd:	and    QWORD PTR [rbp+0x30],0x0
   140006ce2:	mov    ecx,edi
   140006ce4:	call   0x140007fa8
   140006ce9:	mov    rcx,QWORD PTR [rbp+0x30]
   140006ced:	test   rcx,rcx
   140006cf0:	je     0x140006cfd
   140006cf2:	call   QWORD PTR [rip+0x2308]        # 0x140009000
   140006cf8:	and    QWORD PTR [rbp+0x30],0x0
   140006cfd:	test   edi,edi
   140006cff:	jns    0x140006d25
   140006d01:	mov    ecx,edi
   140006d03:	call   0x140008090
   140006d08:	jmp    0x140006d6f
   140006d0a:	movzx  edi,ax
   140006d0d:	or     edi,0x80070000
   140006d13:	test   eax,eax
   140006d15:	cmovle edi,eax
   140006d18:	test   edi,edi
   140006d1a:	je     0x140006cd9
   140006d1c:	mov    ecx,edi
   140006d1e:	call   0x140008090
   140006d23:	jmp    0x140006ce2
   140006d25:	mov    eax,DWORD PTR [rbp+0x20]
   140006d28:	sub    eax,0x1
   140006d2b:	je     0x140006d6d
   140006d2d:	cmp    eax,0x1
   140006d30:	je     0x140006d39
   140006d32:	mov    edi,0x8000ffff
   140006d37:	jmp    0x140006d01
   140006d39:	mov    r8,QWORD PTR [rbp+0x38]
   140006d3d:	test   r8,r8
   140006d40:	je     0x140006d66
   140006d42:	mov    edx,0x4
   140006d47:	mov    rcx,rbx
   140006d4a:	call   QWORD PTR [rip+0x22b8]        # 0x140009008
   140006d50:	test   eax,eax
   140006d52:	je     0x140006d66
   140006d54:	movzx  edi,ax
   140006d57:	or     edi,0x80070000
   140006d5d:	test   eax,eax
   140006d5f:	cmovle edi,eax
   140006d62:	test   edi,edi
   140006d64:	jne    0x140006d01
   140006d66:	mov    edi,0x1
   140006d6b:	jmp    0x140006d6f
   140006d6d:	xor    edi,edi
   140006d6f:	mov    ecx,edi
   140006d71:	call   0x140007fa8
   140006d76:	mov    rcx,QWORD PTR [rbp+0x38]
   140006d7a:	test   rcx,rcx
   140006d7d:	je     0x140006d8a
   140006d7f:	call   QWORD PTR [rip+0x23ab]        # 0x140009130
   140006d85:	and    QWORD PTR [rbp+0x38],0x0
   140006d8a:	test   rbx,rbx
   140006d8d:	je     0x140006d98
   140006d8f:	mov    rcx,rbx
   140006d92:	call   QWORD PTR [rip+0x2268]        # 0x140009000
   140006d98:	test   edi,edi
   140006d9a:	jns    0x140006da3
   140006d9c:	mov    ecx,edi
   140006d9e:	call   0x140008090
   140006da3:	mov    ecx,edi
   140006da5:	call   0x140007fa8
   140006daa:	mov    eax,edi
   140006dac:	add    rsp,0x70
   140006db0:	pop    rdi
   140006db1:	pop    rbx
   140006db2:	pop    rbp
   140006db3:	ret    
   140006db4:	int3   
   140006db5:	int3   
   140006db6:	int3   
   140006db7:	int3   
   140006db8:	int3   
   140006db9:	int3   
   140006dba:	int3   
   140006dbb:	int3   
   140006dbc:	mov    r11,rsp
   140006dbf:	mov    QWORD PTR [r11+0x10],rbx
   140006dc3:	mov    QWORD PTR [r11+0x18],rbp
   140006dc7:	mov    QWORD PTR [r11+0x8],rcx
   140006dcb:	push   rsi
   140006dcc:	push   rdi
   140006dcd:	push   r14
   140006dcf:	sub    rsp,0x30
   140006dd3:	xor    ebx,ebx
   140006dd5:	lea    rax,[r11+0x8]
   140006dd9:	and    QWORD PTR [r11+0x8],rbx
   140006ddd:	xor    r8d,r8d
   140006de0:	mov    rcx,0xffffffff80000000
   140006de7:	mov    QWORD PTR [r11-0x28],rax
   140006deb:	mov    r14,rdx
   140006dee:	xor    edi,edi
   140006df0:	lea    ebp,[rbx+0x1]
   140006df3:	mov    r9d,ebp
   140006df6:	call   QWORD PTR [rip+0x2234]        # 0x140009030
   140006dfc:	test   eax,eax
   140006dfe:	jne    0x140006e51
   140006e00:	xor    esi,esi
   140006e02:	mov    rbx,QWORD PTR [rsp+0x50]
   140006e07:	and    QWORD PTR [rsp+0x50],rdi
   140006e0c:	mov    ecx,esi
   140006e0e:	call   0x140007fa8
   140006e13:	mov    rcx,QWORD PTR [rsp+0x50]
   140006e18:	test   rcx,rcx
   140006e1b:	je     0x140006e28
   140006e1d:	call   QWORD PTR [rip+0x21dd]        # 0x140009000
   140006e23:	and    QWORD PTR [rsp+0x50],rdi
   140006e28:	movzx  eax,si
   140006e2b:	test   eax,eax
   140006e2d:	je     0x140006e6e
   140006e2f:	cmp    eax,0x2
   140006e32:	je     0x140006e6c
   140006e34:	test   esi,esi
   140006e36:	mov    edi,esi
   140006e38:	mov    eax,0x80004005
   140006e3d:	cmovns edi,eax
   140006e40:	test   edi,edi
   140006e42:	jns    0x140006e4b
   140006e44:	mov    ecx,edi
   140006e46:	call   0x140008090
   140006e4b:	mov    ebp,DWORD PTR [rsp+0x50]
   140006e4f:	jmp    0x140006e6e
   140006e51:	movzx  esi,ax
   140006e54:	or     esi,0x80070000
   140006e5a:	test   eax,eax
   140006e5c:	cmovle esi,eax
   140006e5f:	test   esi,esi
   140006e61:	je     0x140006e02
   140006e63:	mov    ecx,esi
   140006e65:	call   0x140008090
   140006e6a:	jmp    0x140006e0c
   140006e6c:	xor    ebp,ebp
   140006e6e:	mov    ecx,edi
   140006e70:	call   0x140007fa8
   140006e75:	test   rbx,rbx
   140006e78:	je     0x140006e83
   140006e7a:	mov    rcx,rbx
   140006e7d:	call   QWORD PTR [rip+0x217d]        # 0x140009000
   140006e83:	test   edi,edi
   140006e85:	jns    0x140006e8b
   140006e87:	mov    ecx,edi
   140006e89:	jmp    0x140006ea6
   140006e8b:	test   ebp,ebp
   140006e8d:	je     0x140006eab
   140006e8f:	mov    rdx,r14
   140006e92:	mov    rcx,0xffffffff80000000
   140006e99:	call   0x1400071e4
   140006e9e:	mov    edi,eax
   140006ea0:	test   eax,eax
   140006ea2:	jns    0x140006eab
   140006ea4:	mov    ecx,eax
   140006ea6:	call   0x140008090
   140006eab:	mov    ecx,edi
   140006ead:	call   0x140007fa8
   140006eb2:	mov    rbx,QWORD PTR [rsp+0x58]
   140006eb7:	mov    eax,edi
   140006eb9:	mov    rbp,QWORD PTR [rsp+0x60]
   140006ebe:	add    rsp,0x30
   140006ec2:	pop    r14
   140006ec4:	pop    rdi
   140006ec5:	pop    rsi
   140006ec6:	ret    
   140006ec7:	int3   
   140006ec8:	int3   
   140006ec9:	int3   
   140006eca:	int3   
   140006ecb:	int3   
   140006ecc:	int3   
   140006ecd:	int3   
   140006ece:	int3   
   140006ecf:	int3   
   140006ed0:	mov    rax,rsp
   140006ed3:	mov    QWORD PTR [rax+0x10],rbx
   140006ed7:	mov    QWORD PTR [rax+0x18],rbp
   140006edb:	mov    QWORD PTR [rax+0x20],rsi
   140006edf:	mov    QWORD PTR [rax+0x8],rcx
   140006ee3:	push   rdi
   140006ee4:	push   r14
   140006ee6:	push   r15
   140006ee8:	sub    rsp,0x30
   140006eec:	xor    r15d,r15d
   140006eef:	mov    rsi,r9
   140006ef2:	mov    rbp,r8
   140006ef5:	mov    r14,rdx
   140006ef8:	mov    edi,r15d
   140006efb:	test   r9,r9
   140006efe:	je     0x140006f25
   140006f00:	mov    edi,0x3fffffff
   140006f05:	mov    rcx,r9
   140006f08:	mov    eax,edi
   140006f0a:	mov    ebx,r15d
   140006f0d:	cmp    WORD PTR [rcx],r15w
   140006f11:	je     0x140006f1d
   140006f13:	add    rcx,0x2
   140006f17:	sub    rax,0x1
   140006f1b:	jne    0x140006f0d
   140006f1d:	test   rax,rax
   140006f20:	jne    0x140006f33
   140006f22:	mov    rdi,r15
   140006f25:	mov    ebx,0x80070057
   140006f2a:	test   ebx,ebx
   140006f2c:	js     0x140006f38
   140006f2e:	add    rdi,rdi
   140006f31:	jmp    0x140006f3b
   140006f33:	sub    rdi,rax
   140006f36:	jmp    0x140006f2a
   140006f38:	mov    rdi,r15
   140006f3b:	test   ebx,ebx
   140006f3d:	js     0x140006f95
   140006f3f:	lea    rax,[rdi+0x2]
   140006f43:	cmp    rax,rdi
   140006f46:	jb     0x140006f50
   140006f48:	mov    rdi,rax
   140006f4b:	mov    ebx,r15d
   140006f4e:	jmp    0x140006f5c
   140006f50:	mov    ebx,0x80070216
   140006f55:	mov    ecx,ebx
   140006f57:	call   0x140008090
   140006f5c:	mov    ecx,ebx
   140006f5e:	call   0x140007fa8
   140006f63:	test   ebx,ebx
   140006f65:	js     0x140006f95
   140006f67:	mov    eax,edi
   140006f69:	cmp    rdi,rax
   140006f6c:	je     0x140006f80
   140006f6e:	mov    ebx,0x80070216
   140006f73:	mov    ecx,ebx
   140006f75:	call   0x140008090
   140006f7a:	mov    edi,DWORD PTR [rsp+0x50]
   140006f7e:	jmp    0x140006f8a
   140006f80:	xor    ecx,ecx
   140006f82:	call   0x140007fa8
   140006f87:	mov    ebx,r15d
   140006f8a:	mov    ecx,ebx
   140006f8c:	call   0x140007fa8
   140006f91:	test   ebx,ebx
   140006f93:	jns    0x140006f9e
   140006f95:	mov    ecx,ebx
   140006f97:	call   0x140008090
   140006f9c:	jmp    0x140006fa2
   140006f9e:	mov    DWORD PTR [rsp+0x50],edi
   140006fa2:	mov    ecx,ebx
   140006fa4:	call   0x140007fa8
   140006fa9:	test   ebx,ebx
   140006fab:	jns    0x140006fb4
   140006fad:	mov    ecx,ebx
   140006faf:	call   0x140008090
   140006fb4:	mov    edi,DWORD PTR [rsp+0x50]
   140006fb8:	mov    ecx,ebx
   140006fba:	call   0x140007fa8
   140006fbf:	test   ebx,ebx
   140006fc1:	jns    0x140006fc7
   140006fc3:	mov    ecx,ebx
   140006fc5:	jmp    0x140006fe1
   140006fc7:	mov    r9,rsi
   140006fca:	mov    DWORD PTR [rsp+0x20],edi
   140006fce:	mov    r8,rbp
   140006fd1:	mov    rdx,r14
   140006fd4:	call   0x1400073cc
   140006fd9:	mov    ebx,eax
   140006fdb:	test   eax,eax
   140006fdd:	jns    0x140006fe6
   140006fdf:	mov    ecx,eax
   140006fe1:	call   0x140008090
   140006fe6:	mov    ecx,ebx
   140006fe8:	call   0x140007fa8
   140006fed:	mov    rbp,QWORD PTR [rsp+0x60]
   140006ff2:	mov    eax,ebx
   140006ff4:	mov    rbx,QWORD PTR [rsp+0x58]
   140006ff9:	mov    rsi,QWORD PTR [rsp+0x68]
   140006ffe:	add    rsp,0x30
   140007002:	pop    r15
   140007004:	pop    r14
   140007006:	pop    rdi
   140007007:	ret    
   140007008:	int3   
   140007009:	int3   
   14000700a:	int3   
   14000700b:	int3   
   14000700c:	int3   
   14000700d:	int3   
   14000700e:	int3   
   14000700f:	int3   
   140007010:	mov    QWORD PTR [rsp+0x10],rbx
   140007015:	mov    QWORD PTR [rsp+0x18],rsi
   14000701a:	push   rbp
   14000701b:	push   rdi
   14000701c:	push   r14
   14000701e:	lea    rbp,[rsp-0x150]
   140007026:	sub    rsp,0x250
   14000702d:	mov    rax,QWORD PTR [rip+0x4fd4]        # 0x14000c008
   140007034:	xor    rax,rsp
   140007037:	mov    QWORD PTR [rbp+0x140],rax
   14000703e:	mov    rsi,rcx
   140007041:	xor    r14d,r14d
   140007044:	mov    ebx,r14d
   140007047:	lea    rcx,[rsp+0x28]
   14000704c:	mov    QWORD PTR [rsp+0x20],rbx
   140007051:	call   0x140007170
   140007056:	mov    edi,eax
   140007058:	test   eax,eax
   14000705a:	jns    0x140007068
   14000705c:	mov    ecx,eax
   14000705e:	call   0x140008090
   140007063:	jmp    0x140007118
   140007068:	mov    rcx,QWORD PTR [rsp+0x28]
   14000706d:	lea    rdx,[rsp+0x30]
   140007072:	mov    edi,0x105
   140007077:	mov    r8d,edi
   14000707a:	call   QWORD PTR [rip+0x20a0]        # 0x140009120
   140007080:	mov    WORD PTR [rbp+0x138],r14w
   140007088:	test   eax,eax
   14000708a:	jne    0x1400070ad
   14000708c:	call   QWORD PTR [rip+0x1ffe]        # 0x140009090
   140007092:	test   eax,eax
   140007094:	jne    0x14000709d
   140007096:	mov    edi,0x80004005
   14000709b:	jmp    0x1400070b9
   14000709d:	movzx  edi,ax
   1400070a0:	or     edi,0x80070000
   1400070a6:	test   eax,eax
   1400070a8:	cmovle edi,eax
   1400070ab:	jmp    0x1400070b9
   1400070ad:	cmp    eax,edi
   1400070af:	sbb    edi,edi
   1400070b1:	not    edi
   1400070b3:	and    edi,0x8007007a
   1400070b9:	test   edi,edi
   1400070bb:	jns    0x1400070c1
   1400070bd:	mov    ecx,edi
   1400070bf:	jmp    0x14000705e
   1400070c1:	lea    rdx,[rsp+0x28]
   1400070c6:	lea    rcx,[rsp+0x30]
   1400070cb:	call   0x140007dd8
   1400070d0:	mov    edi,eax
   1400070d2:	test   eax,eax
   1400070d4:	jns    0x1400070df
   1400070d6:	mov    ecx,eax
   1400070d8:	call   0x140008090
   1400070dd:	jmp    0x140007104
   1400070df:	mov    edx,DWORD PTR [rsp+0x28]
   1400070e3:	lea    r8,[rsp+0x20]
   1400070e8:	lea    rcx,[rsp+0x30]
   1400070ed:	call   0x140007e80
   1400070f2:	mov    edi,eax
   1400070f4:	test   eax,eax
   1400070f6:	jns    0x1400070ff
   1400070f8:	mov    ecx,eax
   1400070fa:	call   0x140008090
   1400070ff:	mov    rbx,QWORD PTR [rsp+0x20]
   140007104:	mov    ecx,edi
   140007106:	call   0x140007fa8
   14000710b:	test   edi,edi
   14000710d:	js     0x1400070bd
   14000710f:	mov    rax,rbx
   140007112:	mov    rbx,r14
   140007115:	mov    QWORD PTR [rsi],rax
   140007118:	mov    ecx,edi
   14000711a:	call   0x140007fa8
   14000711f:	test   rbx,rbx
   140007122:	je     0x140007140
   140007124:	call   QWORD PTR [rip+0x1f36]        # 0x140009060
   14000712a:	lea    r8,[rbx-0x4]
   14000712e:	xor    edx,edx
   140007130:	mov    rcx,rax
   140007133:	call   QWORD PTR [rip+0x1f17]        # 0x140009050
   140007139:	xor    ecx,ecx
   14000713b:	call   0x140007fa8
   140007140:	mov    eax,edi
   140007142:	mov    rcx,QWORD PTR [rbp+0x140]
   140007149:	xor    rcx,rsp
   14000714c:	call   0x1400085f0
   140007151:	lea    r11,[rsp+0x250]
   140007159:	mov    rbx,QWORD PTR [r11+0x28]
   14000715d:	mov    rsi,QWORD PTR [r11+0x30]
   140007161:	mov    rsp,r11
   140007164:	pop    r14
   140007166:	pop    rdi
   140007167:	pop    rbp
   140007168:	ret    
   140007169:	int3   
   14000716a:	int3   
   14000716b:	int3   
   14000716c:	int3   
   14000716d:	int3   
   14000716e:	int3   
   14000716f:	int3   
   140007170:	mov    QWORD PTR [rsp+0x8],rbx
   140007175:	push   rdi
   140007176:	sub    rsp,0x50
   14000717a:	mov    rdi,rcx
   14000717d:	lea    rdx,[rsp+0x20]
   140007182:	xor    ebx,ebx
   140007184:	lea    rcx,[rip+0xffffffffffffffe5]        # 0x140007170
   14000718b:	lea    r8d,[rbx+0x30]
   14000718f:	call   QWORD PTR [rip+0x1f93]        # 0x140009128
   140007195:	test   rax,rax
   140007198:	jne    0x1400071c2
   14000719a:	call   QWORD PTR [rip+0x1ef0]        # 0x140009090
   1400071a0:	test   eax,eax
   1400071a2:	jne    0x1400071ab
   1400071a4:	mov    ebx,0x80004005
   1400071a9:	jmp    0x1400071b9
   1400071ab:	movzx  ebx,ax
   1400071ae:	or     ebx,0x80070000
   1400071b4:	test   eax,eax
   1400071b6:	cmovle ebx,eax
   1400071b9:	mov    ecx,ebx
   1400071bb:	call   0x140008090
   1400071c0:	jmp    0x1400071ca
   1400071c2:	mov    rcx,QWORD PTR [rsp+0x28]
   1400071c7:	mov    QWORD PTR [rdi],rcx
   1400071ca:	mov    ecx,ebx
   1400071cc:	call   0x140007fa8
   1400071d1:	mov    eax,ebx
   1400071d3:	mov    rbx,QWORD PTR [rsp+0x60]
   1400071d8:	add    rsp,0x50
   1400071dc:	pop    rdi
   1400071dd:	ret    
   1400071de:	int3   
   1400071df:	int3   
   1400071e0:	int3   
   1400071e1:	int3   
   1400071e2:	int3   
   1400071e3:	int3   
   1400071e4:	mov    QWORD PTR [rsp+0x18],rbx
   1400071e9:	push   rbp
   1400071ea:	push   rsi
   1400071eb:	push   rdi
   1400071ec:	lea    rbp,[rsp-0x1a0]
   1400071f4:	sub    rsp,0x2a0
   1400071fb:	mov    rax,QWORD PTR [rip+0x4e06]        # 0x14000c008
   140007202:	xor    rax,rsp
   140007205:	mov    QWORD PTR [rbp+0x190],rax
   14000720c:	mov    rsi,rcx
   14000720f:	mov    QWORD PTR [rsp+0x70],rdx
   140007214:	lea    rcx,[rsp+0x68]
   140007219:	xor    ebx,ebx
   14000721b:	and    QWORD PTR [rsp+0x68],rbx
   140007220:	mov    r9d,0x2000000
   140007226:	mov    QWORD PTR [rsp+0x20],rcx
   14000722b:	xor    r8d,r8d
   14000722e:	mov    rcx,rsi
   140007231:	call   QWORD PTR [rip+0x1df9]        # 0x140009030
   140007237:	test   eax,eax
   140007239:	jne    0x14000731c
   14000723f:	xor    edi,edi
   140007241:	mov    rbx,QWORD PTR [rsp+0x68]
   140007246:	and    QWORD PTR [rsp+0x68],0x0
   14000724c:	mov    ecx,edi
   14000724e:	call   0x140007fa8
   140007253:	mov    rcx,QWORD PTR [rsp+0x68]
   140007258:	test   rcx,rcx
   14000725b:	je     0x140007269
   14000725d:	call   QWORD PTR [rip+0x1d9d]        # 0x140009000
   140007263:	and    QWORD PTR [rsp+0x68],0x0
   140007269:	test   edi,edi
   14000726b:	js     0x140007385
   140007271:	xor    edi,edi
   140007273:	lea    rax,[rsp+0x60]
   140007278:	mov    QWORD PTR [rsp+0x58],rdi
   14000727d:	xor    r9d,r9d
   140007280:	mov    QWORD PTR [rsp+0x50],rdi
   140007285:	xor    r8d,r8d
   140007288:	mov    QWORD PTR [rsp+0x48],rdi
   14000728d:	xor    edx,edx
   14000728f:	mov    QWORD PTR [rsp+0x40],rdi
   140007294:	mov    rcx,rbx
   140007297:	mov    QWORD PTR [rsp+0x38],rdi
   14000729c:	mov    QWORD PTR [rsp+0x30],rdi
   1400072a1:	mov    QWORD PTR [rsp+0x28],rdi
   1400072a6:	mov    QWORD PTR [rsp+0x20],rax
   1400072ab:	call   QWORD PTR [rip+0x1d5f]        # 0x140009010
   1400072b1:	test   eax,eax
   1400072b3:	je     0x1400072cd
   1400072b5:	movzx  edi,ax
   1400072b8:	or     edi,0x80070000
   1400072be:	test   eax,eax
   1400072c0:	cmovle edi,eax
   1400072c3:	test   edi,edi
   1400072c5:	jne    0x140007385
   1400072cb:	xor    edi,edi
   1400072cd:	mov    eax,DWORD PTR [rsp+0x60]
   1400072d1:	test   eax,eax
   1400072d3:	je     0x14000733e
   1400072d5:	dec    eax
   1400072d7:	lea    r8,[rbp-0x80]
   1400072db:	mov    edx,eax
   1400072dd:	mov    DWORD PTR [rsp+0x60],eax
   1400072e1:	mov    r9d,0x105
   1400072e7:	mov    rcx,rbx
   1400072ea:	call   QWORD PTR [rip+0x1d28]        # 0x140009018
   1400072f0:	test   eax,eax
   1400072f2:	je     0x140007306
   1400072f4:	movzx  edi,ax
   1400072f7:	or     edi,0x80070000
   1400072fd:	test   eax,eax
   1400072ff:	cmovle edi,eax
   140007302:	test   edi,edi
   140007304:	jne    0x140007385
   140007306:	lea    rdx,[rbp-0x80]
   14000730a:	mov    rcx,rbx
   14000730d:	call   0x1400071e4
   140007312:	mov    edi,eax
   140007314:	test   eax,eax
   140007316:	jns    0x1400072cb
   140007318:	mov    ecx,eax
   14000731a:	jmp    0x140007387
   14000731c:	movzx  edi,ax
   14000731f:	or     edi,0x80070000
   140007325:	test   eax,eax
   140007327:	cmovle edi,eax
   14000732a:	test   edi,edi
   14000732c:	je     0x140007241
   140007332:	mov    ecx,edi
   140007334:	call   0x140008090
   140007339:	jmp    0x14000724c
   14000733e:	test   rbx,rbx
   140007341:	je     0x14000734f
   140007343:	mov    rcx,rbx
   140007346:	call   QWORD PTR [rip+0x1cb4]        # 0x140009000
   14000734c:	mov    rbx,rdi
   14000734f:	mov    rdx,QWORD PTR [rsp+0x70]
   140007354:	mov    rcx,rsi
   140007357:	call   QWORD PTR [rip+0x1cdb]        # 0x140009038
   14000735d:	test   eax,eax
   14000735f:	je     0x14000737a
   140007361:	movzx  edi,ax
   140007364:	or     edi,0x80070000
   14000736a:	test   eax,eax
   14000736c:	cmovle edi,eax
   14000736f:	test   edi,edi
   140007371:	je     0x14000737a
   140007373:	mov    ecx,edi
   140007375:	call   0x140008090
   14000737a:	mov    ecx,edi
   14000737c:	call   0x140007fa8
   140007381:	test   edi,edi
   140007383:	jns    0x14000738c
   140007385:	mov    ecx,edi
   140007387:	call   0x140008090
   14000738c:	mov    ecx,edi
   14000738e:	call   0x140007fa8
   140007393:	test   rbx,rbx
   140007396:	je     0x1400073a1
   140007398:	mov    rcx,rbx
   14000739b:	call   QWORD PTR [rip+0x1c5f]        # 0x140009000
   1400073a1:	mov    eax,edi
   1400073a3:	mov    rcx,QWORD PTR [rbp+0x190]
   1400073aa:	xor    rcx,rsp
   1400073ad:	call   0x1400085f0
   1400073b2:	mov    rbx,QWORD PTR [rsp+0x2d0]
   1400073ba:	add    rsp,0x2a0
   1400073c1:	pop    rdi
   1400073c2:	pop    rsi
   1400073c3:	pop    rbp
   1400073c4:	ret    
   1400073c5:	int3   
   1400073c6:	int3   
   1400073c7:	int3   
   1400073c8:	int3   
   1400073c9:	int3   
   1400073ca:	int3   
   1400073cb:	int3   
   1400073cc:	mov    r11,rsp
   1400073cf:	mov    QWORD PTR [r11+0x10],rbx
   1400073d3:	mov    QWORD PTR [r11+0x18],rbp
   1400073d7:	mov    QWORD PTR [r11+0x20],rsi
   1400073db:	mov    QWORD PTR [r11+0x8],rcx
   1400073df:	push   rdi
   1400073e0:	sub    rsp,0x30
   1400073e4:	xor    ebx,ebx
   1400073e6:	lea    rax,[r11+0x8]
   1400073ea:	and    QWORD PTR [r11+0x8],rbx
   1400073ee:	mov    rsi,r9
   1400073f1:	mov    rbp,r8
   1400073f4:	mov    QWORD PTR [r11-0x18],rax
   1400073f8:	xor    r8d,r8d
   1400073fb:	mov    rcx,0xffffffff80000000
   140007402:	lea    r9d,[rbx+0x2]
   140007406:	call   QWORD PTR [rip+0x1c24]        # 0x140009030
   14000740c:	test   eax,eax
   14000740e:	jne    0x14000746f
   140007410:	xor    edi,edi
   140007412:	mov    rbx,QWORD PTR [rsp+0x40]
   140007417:	and    QWORD PTR [rsp+0x40],0x0
   14000741d:	mov    ecx,edi
   14000741f:	call   0x140007fa8
   140007424:	mov    rcx,QWORD PTR [rsp+0x40]
   140007429:	test   rcx,rcx
   14000742c:	je     0x14000743a
   14000742e:	call   QWORD PTR [rip+0x1bcc]        # 0x140009000
   140007434:	and    QWORD PTR [rsp+0x40],0x0
   14000743a:	test   edi,edi
   14000743c:	js     0x14000749c
   14000743e:	xor    ecx,ecx
   140007440:	call   0x140007fa8
   140007445:	mov    eax,DWORD PTR [rsp+0x60]
   140007449:	mov    r9d,0x1
   14000744f:	mov    DWORD PTR [rsp+0x28],eax
   140007453:	xor    r8d,r8d
   140007456:	mov    rdx,rbp
   140007459:	mov    QWORD PTR [rsp+0x20],rsi
   14000745e:	mov    rcx,rbx
   140007461:	call   QWORD PTR [rip+0x1bb9]        # 0x140009020
   140007467:	test   eax,eax
   140007469:	jne    0x14000748a
   14000746b:	xor    edi,edi
   14000746d:	jmp    0x1400074a3
   14000746f:	movzx  edi,ax
   140007472:	or     edi,0x80070000
   140007478:	test   eax,eax
   14000747a:	cmovle edi,eax
   14000747d:	test   edi,edi
   14000747f:	je     0x140007412
   140007481:	mov    ecx,edi
   140007483:	call   0x140008090
   140007488:	jmp    0x14000741d
   14000748a:	movzx  edi,ax
   14000748d:	or     edi,0x80070000
   140007493:	test   eax,eax
   140007495:	cmovle edi,eax
   140007498:	test   edi,edi
   14000749a:	je     0x1400074a3
   14000749c:	mov    ecx,edi
   14000749e:	call   0x140008090
   1400074a3:	mov    ecx,edi
   1400074a5:	call   0x140007fa8
   1400074aa:	test   rbx,rbx
   1400074ad:	je     0x1400074b8
   1400074af:	mov    rcx,rbx
   1400074b2:	call   QWORD PTR [rip+0x1b48]        # 0x140009000
   1400074b8:	mov    rbx,QWORD PTR [rsp+0x48]
   1400074bd:	mov    eax,edi
   1400074bf:	mov    rbp,QWORD PTR [rsp+0x50]
   1400074c4:	mov    rsi,QWORD PTR [rsp+0x58]
   1400074c9:	add    rsp,0x30
   1400074cd:	pop    rdi
   1400074ce:	ret    
   1400074cf:	int3   
   1400074d0:	int3   
   1400074d1:	int3   
   1400074d2:	int3   
   1400074d3:	int3   
   1400074d4:	int3   
   1400074d5:	int3   
   1400074d6:	int3   
   1400074d7:	int3   
   1400074d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400074dd:	mov    QWORD PTR [rsp+0x18],rsi
   1400074e2:	mov    DWORD PTR [rsp+0x10],edx
   1400074e6:	push   rdi
   1400074e7:	sub    rsp,0x20
   1400074eb:	mov    rsi,r8
   1400074ee:	test   ecx,ecx
   1400074f0:	js     0x140007527
   1400074f2:	lea    edi,[rcx+0x1]
   1400074f5:	cmp    edi,ecx
   1400074f7:	jb     0x1400074fd
   1400074f9:	xor    ebx,ebx
   1400074fb:	jmp    0x14000750d
   1400074fd:	mov    ebx,0x80070216
   140007502:	mov    ecx,ebx
   140007504:	call   0x140008090
   140007509:	mov    edi,DWORD PTR [rsp+0x38]
   14000750d:	mov    ecx,ebx
   14000750f:	call   0x140007fa8
   140007514:	test   ebx,ebx
   140007516:	js     0x14000752c
   140007518:	test   edi,edi
   14000751a:	jns    0x140007523
   14000751c:	mov    ebx,0x80070216
   140007521:	jmp    0x14000752c
   140007523:	mov    DWORD PTR [rsi],edi
   140007525:	jmp    0x140007533
   140007527:	mov    ebx,0x80070057
   14000752c:	mov    ecx,ebx
   14000752e:	call   0x140008090
   140007533:	mov    ecx,ebx
   140007535:	call   0x140007fa8
   14000753a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000753f:	mov    eax,ebx
   140007541:	mov    rbx,QWORD PTR [rsp+0x30]
   140007546:	add    rsp,0x20
   14000754a:	pop    rdi
   14000754b:	ret    
   14000754c:	int3   
   14000754d:	int3   
   14000754e:	int3   
   14000754f:	int3   
   140007550:	int3   
   140007551:	int3   
   140007552:	int3   
   140007553:	int3   
   140007554:	mov    QWORD PTR [rsp+0x8],rbx
   140007559:	mov    QWORD PTR [rsp+0x18],rsi
   14000755e:	mov    DWORD PTR [rsp+0x10],edx
   140007562:	push   rdi
   140007563:	sub    rsp,0x20
   140007567:	mov    rsi,r8
   14000756a:	test   ecx,ecx
   14000756c:	js     0x1400075ad
   14000756e:	xor    ebx,ebx
   140007570:	test   ecx,ecx
   140007572:	je     0x140007591
   140007574:	lea    edi,[rcx+rcx*1]
   140007577:	mov    eax,edi
   140007579:	shr    eax,1
   14000757b:	cmp    eax,ecx
   14000757d:	je     0x140007593
   14000757f:	mov    ebx,0x80070216
   140007584:	mov    ecx,ebx
   140007586:	call   0x140008090
   14000758b:	mov    edi,DWORD PTR [rsp+0x38]
   14000758f:	jmp    0x140007593
   140007591:	xor    edi,edi
   140007593:	mov    ecx,ebx
   140007595:	call   0x140007fa8
   14000759a:	test   ebx,ebx
   14000759c:	js     0x1400075b2
   14000759e:	test   edi,edi
   1400075a0:	jns    0x1400075a9
   1400075a2:	mov    ebx,0x80070216
   1400075a7:	jmp    0x1400075b2
   1400075a9:	mov    DWORD PTR [rsi],edi
   1400075ab:	jmp    0x1400075b9
   1400075ad:	mov    ebx,0x80070057
   1400075b2:	mov    ecx,ebx
   1400075b4:	call   0x140008090
   1400075b9:	mov    ecx,ebx
   1400075bb:	call   0x140007fa8
   1400075c0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400075c5:	mov    eax,ebx
   1400075c7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400075cc:	add    rsp,0x20
   1400075d0:	pop    rdi
   1400075d1:	ret    
   1400075d2:	int3   
   1400075d3:	int3   
   1400075d4:	int3   
   1400075d5:	int3   
   1400075d6:	int3   
   1400075d7:	int3   
   1400075d8:	mov    rax,rsp
   1400075db:	mov    QWORD PTR [rax+0x8],rbx
   1400075df:	mov    QWORD PTR [rax+0x10],rbp
   1400075e3:	mov    QWORD PTR [rax+0x20],rsi
   1400075e7:	mov    DWORD PTR [rax+0x18],r8d
   1400075eb:	push   rdi
   1400075ec:	push   r14
   1400075ee:	push   r15
   1400075f0:	sub    rsp,0x20
   1400075f4:	mov    eax,DWORD PTR [rcx+0xc]
   1400075f7:	xor    ebp,ebp
   1400075f9:	mov    r14,rcx
   1400075fc:	mov    r15d,0x80070216
   140007602:	lea    esi,[rax+rdx*1]
   140007605:	cmp    esi,eax
   140007607:	jb     0x14000760d
   140007609:	mov    ebx,ebp
   14000760b:	jmp    0x14000761c
   14000760d:	mov    ecx,r15d
   140007610:	mov    ebx,r15d
   140007613:	call   0x140008090
   140007618:	mov    esi,DWORD PTR [rsp+0x50]
   14000761c:	mov    ecx,ebx
   14000761e:	call   0x140007fa8
   140007623:	test   ebx,ebx
   140007625:	jns    0x140007633
   140007627:	mov    ecx,ebx
   140007629:	call   0x140008090
   14000762e:	jmp    0x140007706
   140007633:	cmp    esi,0x2000000
   140007639:	jb     0x140007642
   14000763b:	mov    ebx,0x8007007a
   140007640:	jmp    0x140007627
   140007642:	mov    edi,esi
   140007644:	lea    rax,[rdi+0x1]
   140007648:	cmp    rax,rdi
   14000764b:	jb     0x140007654
   14000764d:	mov    rdi,rax
   140007650:	mov    ebx,ebp
   140007652:	jmp    0x14000765f
   140007654:	mov    ecx,r15d
   140007657:	mov    ebx,r15d
   14000765a:	call   0x140008090
   14000765f:	mov    ecx,ebx
   140007661:	call   0x140007fa8
   140007666:	test   ebx,ebx
   140007668:	js     0x140007627
   14000766a:	mov    ebx,ebp
   14000766c:	test   rdi,rdi
   14000766f:	je     0x140007692
   140007671:	lea    rdx,[rdi+rdi*1]
   140007675:	mov    rax,rdx
   140007678:	shr    rax,1
   14000767b:	cmp    rax,rdi
   14000767e:	je     0x14000768d
   140007680:	mov    ecx,r15d
   140007683:	mov    ebx,r15d
   140007686:	call   0x140008090
   14000768b:	jmp    0x140007695
   14000768d:	mov    rdi,rdx
   140007690:	jmp    0x140007695
   140007692:	mov    rdi,rbp
   140007695:	mov    ecx,ebx
   140007697:	call   0x140007fa8
   14000769c:	test   ebx,ebx
   14000769e:	js     0x140007627
   1400076a0:	call   QWORD PTR [rip+0x19ba]        # 0x140009060
   1400076a6:	mov    r8,rdi
   1400076a9:	xor    edx,edx
   1400076ab:	mov    rcx,rax
   1400076ae:	call   QWORD PTR [rip+0x1994]        # 0x140009048
   1400076b4:	mov    rdi,rax
   1400076b7:	test   rax,rax
   1400076ba:	jne    0x1400076c6
   1400076bc:	mov    ebx,0x8007000e
   1400076c1:	jmp    0x140007627
   1400076c6:	mov    r8d,DWORD PTR [r14+0x8]
   1400076ca:	mov    rcx,rax
   1400076cd:	mov    rdx,QWORD PTR [r14]
   1400076d0:	add    r8,r8
   1400076d3:	call   0x140008c82
   1400076d8:	mov    eax,DWORD PTR [r14+0x8]
   1400076dc:	mov    WORD PTR [rdi+rax*2],bp
   1400076e0:	mov    DWORD PTR [r14+0xc],esi
   1400076e4:	mov    rsi,QWORD PTR [r14]
   1400076e7:	test   rsi,rsi
   1400076ea:	je     0x140007703
   1400076ec:	call   QWORD PTR [rip+0x196e]        # 0x140009060
   1400076f2:	mov    r8,rsi
   1400076f5:	xor    edx,edx
   1400076f7:	mov    rcx,rax
   1400076fa:	call   QWORD PTR [rip+0x1950]        # 0x140009050
   140007700:	mov    QWORD PTR [r14],rbp
   140007703:	mov    QWORD PTR [r14],rdi
   140007706:	mov    ecx,ebx
   140007708:	call   0x140007fa8
   14000770d:	mov    rbp,QWORD PTR [rsp+0x48]
   140007712:	mov    eax,ebx
   140007714:	mov    rbx,QWORD PTR [rsp+0x40]
   140007719:	mov    rsi,QWORD PTR [rsp+0x58]
   14000771e:	add    rsp,0x20
   140007722:	pop    r15
   140007724:	pop    r14
   140007726:	pop    rdi
   140007727:	ret    
   140007728:	int3   
   140007729:	int3   
   14000772a:	int3   
   14000772b:	int3   
   14000772c:	int3   
   14000772d:	int3   
   14000772e:	int3   
   14000772f:	int3   
   140007730:	sub    rcx,0x8
   140007734:	jmp    0x1400043f0
   140007739:	int3   
   14000773a:	int3   
   14000773b:	int3   
   14000773c:	int3   
   14000773d:	int3   
   14000773e:	int3   
   14000773f:	int3   
   140007740:	sub    rcx,0x10
   140007744:	jmp    0x1400043f0
   140007749:	int3   
   14000774a:	int3   
   14000774b:	int3   
   14000774c:	int3   
   14000774d:	int3   
   14000774e:	int3   
   14000774f:	int3   
   140007750:	sub    rcx,0x8
   140007754:	jmp    0x1400043d0
   140007759:	int3   
   14000775a:	int3   
   14000775b:	int3   
   14000775c:	int3   
   14000775d:	int3   
   14000775e:	int3   
   14000775f:	int3   
   140007760:	sub    rcx,0x8
   140007764:	jmp    0x140004440
   140007769:	int3   
   14000776a:	int3   
   14000776b:	int3   
   14000776c:	int3   
   14000776d:	int3   
   14000776e:	int3   
   14000776f:	int3   
   140007770:	sub    rcx,0x10
   140007774:	jmp    0x1400043d0
   140007779:	int3   
   14000777a:	int3   
   14000777b:	int3   
   14000777c:	int3   
   14000777d:	int3   
   14000777e:	int3   
   14000777f:	int3   
   140007780:	sub    rcx,0x10
   140007784:	jmp    0x140004440
   140007789:	int3   
   14000778a:	int3   
   14000778b:	int3   
   14000778c:	int3   
   14000778d:	int3   
   14000778e:	int3   
   14000778f:	int3   
   140007790:	mov    QWORD PTR [rsp+0x8],rbx
   140007795:	mov    QWORD PTR [rsp+0x10],rbp
   14000779a:	mov    QWORD PTR [rsp+0x18],rsi
   14000779f:	push   rdi
   1400077a0:	sub    rsp,0x20
   1400077a4:	xor    ebp,ebp
   1400077a6:	lea    rax,[rdx-0x1]
   1400077aa:	cmp    rax,0x7ffffffe
   1400077b0:	mov    rdi,rcx
   1400077b3:	mov    esi,ebp
   1400077b5:	mov    ecx,0x80070057
   1400077ba:	cmova  esi,ecx
   1400077bd:	test   esi,esi
   1400077bf:	js     0x1400077f1
   1400077c1:	lea    rbx,[rdx-0x1]
   1400077c5:	mov    rcx,rdi
   1400077c8:	mov    rdx,rbx
   1400077cb:	mov    esi,ebp
   1400077cd:	call   QWORD PTR [rip+0x1bed]        # 0x1400093c0
   1400077d3:	test   eax,eax
   1400077d5:	js     0x1400077e6
   1400077d7:	cdqe   
   1400077d9:	cmp    rax,rbx
   1400077dc:	ja     0x1400077e6
   1400077de:	jne    0x1400077f9
   1400077e0:	mov    WORD PTR [rdi+rbx*2],bp
   1400077e4:	jmp    0x1400077f9
   1400077e6:	mov    WORD PTR [rdi+rbx*2],bp
   1400077ea:	mov    esi,0x8007007a
   1400077ef:	jmp    0x1400077f9
   1400077f1:	test   rdx,rdx
   1400077f4:	je     0x1400077f9
   1400077f6:	mov    WORD PTR [rdi],bp
   1400077f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400077fe:	mov    eax,esi
   140007800:	mov    rsi,QWORD PTR [rsp+0x40]
   140007805:	mov    rbp,QWORD PTR [rsp+0x38]
   14000780a:	add    rsp,0x20
   14000780e:	pop    rdi
   14000780f:	ret    
   140007810:	int3   
   140007811:	int3   
   140007812:	int3   
   140007813:	int3   
   140007814:	int3   
   140007815:	int3   
   140007816:	int3   
   140007817:	int3   
   140007818:	mov    QWORD PTR [rsp+0x20],rbx
   14000781d:	push   rbp
   14000781e:	push   rsi
   14000781f:	push   rdi
   140007820:	push   r12
   140007822:	push   r13
   140007824:	push   r14
   140007826:	push   r15
   140007828:	sub    rsp,0x250
   14000782f:	mov    rax,QWORD PTR [rip+0x47d2]        # 0x14000c008
   140007836:	xor    rax,rsp
   140007839:	mov    QWORD PTR [rsp+0x240],rax
   140007841:	mov    QWORD PTR [rsp+0x20],r8
   140007846:	mov    r9,r8
   140007849:	mov    r8,rdx
   14000784c:	mov    r13,rdx
   14000784f:	mov    r12,rcx
   140007852:	mov    ebp,0x104
   140007857:	xor    edi,edi
   140007859:	lea    rcx,[rsp+0x30]
   14000785e:	mov    edx,ebp
   140007860:	mov    QWORD PTR [rsp+0x28],rdi
   140007865:	xor    ebx,ebx
   140007867:	call   0x140007790
   14000786c:	mov    esi,eax
   14000786e:	cmp    eax,0x8007007a
   140007873:	jne    0x1400079d5
   140007879:	mov    r15d,DWORD PTR [rsp+0x20]
   14000787e:	xor    esi,esi
   140007880:	mov    r14d,0x80070216
   140007886:	test   ebp,ebp
   140007888:	je     0x1400078aa
   14000788a:	lea    ecx,[rbp*2+0x0]
   140007891:	mov    eax,ecx
   140007893:	shr    eax,1
   140007895:	cmp    eax,ebp
   140007897:	je     0x1400078a6
   140007899:	mov    ecx,r14d
   14000789c:	mov    esi,r14d
   14000789f:	call   0x140008090
   1400078a4:	jmp    0x1400078ac
   1400078a6:	mov    ebp,ecx
   1400078a8:	jmp    0x1400078ac
   1400078aa:	xor    ebp,ebp
   1400078ac:	mov    ecx,esi
   1400078ae:	call   0x140007fa8
   1400078b3:	test   esi,esi
   1400078b5:	js     0x140007a17
   1400078bb:	xor    esi,esi
   1400078bd:	test   ebp,ebp
   1400078bf:	je     0x1400078e2
   1400078c1:	lea    ecx,[rbp*2+0x0]
   1400078c8:	mov    eax,ecx
   1400078ca:	shr    eax,1
   1400078cc:	cmp    eax,ebp
   1400078ce:	je     0x1400078dd
   1400078d0:	mov    ecx,r14d
   1400078d3:	mov    esi,r14d
   1400078d6:	call   0x140008090
   1400078db:	jmp    0x1400078e5
   1400078dd:	mov    r15d,ecx
   1400078e0:	jmp    0x1400078e5
   1400078e2:	xor    r15d,r15d
   1400078e5:	mov    ecx,esi
   1400078e7:	call   0x140007fa8
   1400078ec:	test   esi,esi
   1400078ee:	js     0x140007a17
   1400078f4:	test   rbx,rbx
   1400078f7:	je     0x14000790f
   1400078f9:	call   QWORD PTR [rip+0x1761]        # 0x140009060
   1400078ff:	mov    r8,rbx
   140007902:	xor    edx,edx
   140007904:	mov    rcx,rax
   140007907:	call   QWORD PTR [rip+0x1743]        # 0x140009050
   14000790d:	xor    ebx,ebx
   14000790f:	call   QWORD PTR [rip+0x174b]        # 0x140009060
   140007915:	mov    r8d,r15d
   140007918:	xor    edx,edx
   14000791a:	mov    rcx,rax
   14000791d:	call   QWORD PTR [rip+0x1725]        # 0x140009048
   140007923:	mov    r14,rax
   140007926:	test   rbx,rbx
   140007929:	je     0x14000793f
   14000792b:	call   QWORD PTR [rip+0x172f]        # 0x140009060
   140007931:	mov    r8,rbx
   140007934:	xor    edx,edx
   140007936:	mov    rcx,rax
   140007939:	call   QWORD PTR [rip+0x1711]        # 0x140009050
   14000793f:	test   r14,r14
   140007942:	je     0x1400079cc
   140007948:	mov    r9,QWORD PTR [rsp+0x20]
   14000794d:	mov    r8,r13
   140007950:	mov    edx,ebp
   140007952:	mov    rcx,r14
   140007955:	mov    rbx,r14
   140007958:	call   0x140007790
   14000795d:	mov    esi,eax
   14000795f:	cmp    eax,0x8007007a
   140007964:	je     0x14000787e
   14000796a:	test   eax,eax
   14000796c:	jns    0x140007975
   14000796e:	mov    ecx,eax
   140007970:	jmp    0x140007a19
   140007975:	lea    rdx,[rsp+0x20]
   14000797a:	mov    rcx,r14
   14000797d:	call   0x140007dd8
   140007982:	mov    esi,eax
   140007984:	test   eax,eax
   140007986:	jns    0x140007991
   140007988:	mov    ecx,eax
   14000798a:	call   0x140008090
   14000798f:	jmp    0x1400079b4
   140007991:	mov    edx,DWORD PTR [rsp+0x20]
   140007995:	lea    r8,[rsp+0x28]
   14000799a:	mov    rcx,r14
   14000799d:	call   0x140007e80
   1400079a2:	mov    esi,eax
   1400079a4:	test   eax,eax
   1400079a6:	jns    0x1400079af
   1400079a8:	mov    ecx,eax
   1400079aa:	call   0x140008090
   1400079af:	mov    rdi,QWORD PTR [rsp+0x28]
   1400079b4:	mov    ecx,esi
   1400079b6:	call   0x140007fa8
   1400079bb:	test   esi,esi
   1400079bd:	js     0x140007a17
   1400079bf:	mov    rax,rdi
   1400079c2:	xor    edi,edi
   1400079c4:	xor    esi,esi
   1400079c6:	mov    QWORD PTR [r12],rax
   1400079ca:	jmp    0x140007a1e
   1400079cc:	xor    ebx,ebx
   1400079ce:	mov    esi,0x8007000e
   1400079d3:	jmp    0x140007a17
   1400079d5:	test   eax,eax
   1400079d7:	js     0x14000796e
   1400079d9:	lea    rdx,[rsp+0x20]
   1400079de:	lea    rcx,[rsp+0x30]
   1400079e3:	call   0x140007dd8
   1400079e8:	mov    esi,eax
   1400079ea:	test   eax,eax
   1400079ec:	js     0x140007a05
   1400079ee:	mov    edx,DWORD PTR [rsp+0x20]
   1400079f2:	lea    rcx,[rsp+0x30]
   1400079f7:	mov    r8,r12
   1400079fa:	call   0x140007e80
   1400079ff:	mov    esi,eax
   140007a01:	test   eax,eax
   140007a03:	jns    0x140007a0c
   140007a05:	mov    ecx,eax
   140007a07:	call   0x140008090
   140007a0c:	mov    ecx,esi
   140007a0e:	call   0x140007fa8
   140007a13:	test   esi,esi
   140007a15:	jns    0x140007a1e
   140007a17:	mov    ecx,esi
   140007a19:	call   0x140008090
   140007a1e:	mov    ecx,esi
   140007a20:	call   0x140007fa8
   140007a25:	test   rdi,rdi
   140007a28:	je     0x140007a46
   140007a2a:	call   QWORD PTR [rip+0x1630]        # 0x140009060
   140007a30:	lea    r8,[rdi-0x4]
   140007a34:	xor    edx,edx
   140007a36:	mov    rcx,rax
   140007a39:	call   QWORD PTR [rip+0x1611]        # 0x140009050
   140007a3f:	xor    ecx,ecx
   140007a41:	call   0x140007fa8
   140007a46:	test   rbx,rbx
   140007a49:	je     0x140007a5f
   140007a4b:	call   QWORD PTR [rip+0x160f]        # 0x140009060
   140007a51:	mov    r8,rbx
   140007a54:	xor    edx,edx
   140007a56:	mov    rcx,rax
   140007a59:	call   QWORD PTR [rip+0x15f1]        # 0x140009050
   140007a5f:	mov    eax,esi
   140007a61:	mov    rcx,QWORD PTR [rsp+0x240]
   140007a69:	xor    rcx,rsp
   140007a6c:	call   0x1400085f0
   140007a71:	mov    rbx,QWORD PTR [rsp+0x2a8]
   140007a79:	add    rsp,0x250
   140007a80:	pop    r15
   140007a82:	pop    r14
   140007a84:	pop    r13
   140007a86:	pop    r12
   140007a88:	pop    rdi
   140007a89:	pop    rsi
   140007a8a:	pop    rbp
   140007a8b:	ret    
   140007a8c:	int3   
   140007a8d:	int3   
   140007a8e:	int3   
   140007a8f:	int3   
   140007a90:	int3   
   140007a91:	int3   
   140007a92:	int3   
   140007a93:	int3   
   140007a94:	mov    rax,rsp
   140007a97:	mov    QWORD PTR [rax+0x10],rdx
   140007a9b:	mov    QWORD PTR [rax+0x18],r8
   140007a9f:	mov    QWORD PTR [rax+0x20],r9
   140007aa3:	push   rbx
   140007aa4:	sub    rsp,0x20
   140007aa8:	lea    r8,[rax+0x18]
   140007aac:	call   0x140007818
   140007ab1:	mov    ebx,eax
   140007ab3:	test   eax,eax
   140007ab5:	jns    0x140007abe
   140007ab7:	mov    ecx,eax
   140007ab9:	call   0x140008090
   140007abe:	mov    ecx,ebx
   140007ac0:	call   0x140007fa8
   140007ac5:	mov    eax,ebx
   140007ac7:	add    rsp,0x20
   140007acb:	pop    rbx
   140007acc:	ret    
   140007acd:	int3   
   140007ace:	int3   
   140007acf:	int3   
   140007ad0:	int3   
   140007ad1:	int3   
   140007ad2:	int3   
   140007ad3:	int3   
   140007ad4:	mov    QWORD PTR [rsp+0x18],rbx
   140007ad9:	mov    QWORD PTR [rsp+0x8],rcx
   140007ade:	push   rbp
   140007adf:	push   rsi
   140007ae0:	push   rdi
   140007ae1:	push   r12
   140007ae3:	push   r13
   140007ae5:	push   r14
   140007ae7:	push   r15
   140007ae9:	sub    rsp,0x20
   140007aed:	xor    r15d,r15d
   140007af0:	mov    r12d,edx
   140007af3:	mov    r13,r8
   140007af6:	mov    edi,r15d
   140007af9:	mov    r14d,r15d
   140007afc:	mov    ebp,r15d
   140007aff:	test   edx,edx
   140007b01:	je     0x140007b53
   140007b03:	lea    rbx,[r8-0x8]
   140007b07:	lea    rbx,[rbx+0x8]
   140007b0b:	mov    rax,QWORD PTR [rbx]
   140007b0e:	test   rax,rax
   140007b11:	je     0x140007b18
   140007b13:	mov    esi,DWORD PTR [rax-0x4]
   140007b16:	jmp    0x140007b1b
   140007b18:	mov    esi,r15d
   140007b1b:	xor    ecx,ecx
   140007b1d:	call   0x140007fa8
   140007b22:	lea    eax,[rsi+r14*1]
   140007b26:	cmp    eax,r14d
   140007b29:	jb     0x140007b33
   140007b2b:	mov    r14d,eax
   140007b2e:	mov    esi,r15d
   140007b31:	jmp    0x140007b41
   140007b33:	mov    eax,0x80070216
   140007b38:	mov    ecx,eax
   140007b3a:	mov    esi,eax
   140007b3c:	call   0x140008090
   140007b41:	mov    ecx,esi
   140007b43:	call   0x140007fa8
   140007b48:	test   esi,esi
   140007b4a:	js     0x140007b64
   140007b4c:	inc    ebp
   140007b4e:	cmp    ebp,r12d
   140007b51:	jb     0x140007b07
   140007b53:	lea    eax,[r14+0x1]
   140007b57:	cmp    eax,r14d
   140007b5a:	jb     0x140007b70
   140007b5c:	mov    r14d,eax
   140007b5f:	mov    esi,r15d
   140007b62:	jmp    0x140007b7c
   140007b64:	mov    ecx,esi
   140007b66:	call   0x140008090
   140007b6b:	jmp    0x140007cd2
   140007b70:	mov    esi,0x80070216
   140007b75:	mov    ecx,esi
   140007b77:	call   0x140008090
   140007b7c:	mov    ecx,esi
   140007b7e:	call   0x140007fa8
   140007b83:	test   esi,esi
   140007b85:	js     0x140007b64
   140007b87:	mov    rbx,r15
   140007b8a:	mov    esi,r15d
   140007b8d:	test   r14d,r14d
   140007b90:	je     0x140007c57
   140007b96:	lea    ebp,[r14+r14*1]
   140007b9a:	mov    eax,ebp
   140007b9c:	shr    eax,1
   140007b9e:	cmp    eax,r14d
   140007ba1:	je     0x140007bb5
   140007ba3:	mov    eax,0x80070216
   140007ba8:	mov    ecx,eax
   140007baa:	mov    esi,eax
   140007bac:	call   0x140008090
   140007bb1:	mov    ebp,DWORD PTR [rsp+0x68]
   140007bb5:	mov    ecx,esi
   140007bb7:	call   0x140007fa8
   140007bbc:	test   esi,esi
   140007bbe:	jns    0x140007bcc
   140007bc0:	mov    ecx,esi
   140007bc2:	call   0x140008090
   140007bc7:	jmp    0x140007c57
   140007bcc:	lea    eax,[rbp+0x4]
   140007bcf:	cmp    eax,ebp
   140007bd1:	jb     0x140007bda
   140007bd3:	mov    ebp,eax
   140007bd5:	mov    esi,r15d
   140007bd8:	jmp    0x140007be8
   140007bda:	mov    eax,0x80070216
   140007bdf:	mov    ecx,eax
   140007be1:	mov    esi,eax
   140007be3:	call   0x140008090
   140007be8:	mov    ecx,esi
   140007bea:	call   0x140007fa8
   140007bef:	test   esi,esi
   140007bf1:	js     0x140007bc0
   140007bf3:	call   QWORD PTR [rip+0x1467]        # 0x140009060
   140007bf9:	mov    r8d,ebp
   140007bfc:	xor    edx,edx
   140007bfe:	mov    rcx,rax
   140007c01:	call   QWORD PTR [rip+0x1441]        # 0x140009048
   140007c07:	mov    rbx,rax
   140007c0a:	test   rax,rax
   140007c0d:	jne    0x140007c19
   140007c0f:	mov    rbx,r15
   140007c12:	mov    esi,0x8007000e
   140007c17:	jmp    0x140007bc0
   140007c19:	lea    eax,[r14-0x1]
   140007c1d:	cmp    eax,r14d
   140007c20:	ja     0x140007c29
   140007c22:	mov    DWORD PTR [rbx],eax
   140007c24:	mov    esi,r15d
   140007c27:	jmp    0x140007c37
   140007c29:	mov    eax,0x80070216
   140007c2e:	mov    ecx,eax
   140007c30:	mov    esi,eax
   140007c32:	call   0x140008090
   140007c37:	mov    ecx,esi
   140007c39:	call   0x140007fa8
   140007c3e:	test   esi,esi
   140007c40:	js     0x140007bc0
   140007c46:	mov    eax,DWORD PTR [rbx]
   140007c48:	lea    rdi,[rbx+0x4]
   140007c4c:	mov    rbx,r15
   140007c4f:	mov    esi,r15d
   140007c52:	mov    WORD PTR [rdi+rax*2],r15w
   140007c57:	mov    ecx,esi
   140007c59:	call   0x140007fa8
   140007c5e:	test   rbx,rbx
   140007c61:	je     0x140007c77
   140007c63:	call   QWORD PTR [rip+0x13f7]        # 0x140009060
   140007c69:	mov    r8,rbx
   140007c6c:	xor    edx,edx
   140007c6e:	mov    rcx,rax
   140007c71:	call   QWORD PTR [rip+0x13d9]        # 0x140009050
   140007c77:	test   esi,esi
   140007c79:	js     0x140007b64
   140007c7f:	mov    r15,rdi
   140007c82:	test   r12d,r12d
   140007c85:	je     0x140007cc1
   140007c87:	xor    esi,esi
   140007c89:	lea    r14,[r13-0x8]
   140007c8d:	lea    r14,[r14+0x8]
   140007c91:	mov    rbp,QWORD PTR [r14]
   140007c94:	test   rbp,rbp
   140007c97:	je     0x140007c9e
   140007c99:	mov    ebx,DWORD PTR [rbp-0x4]
   140007c9c:	jmp    0x140007ca0
   140007c9e:	xor    ebx,ebx
   140007ca0:	xor    ecx,ecx
   140007ca2:	call   0x140007fa8
   140007ca7:	add    rbx,rbx
   140007caa:	mov    rdx,rbp
   140007cad:	mov    r8,rbx
   140007cb0:	mov    rcx,r15
   140007cb3:	call   0x140008c82
   140007cb8:	add    r15,rbx
   140007cbb:	sub    r12,0x1
   140007cbf:	jne    0x140007c8d
   140007cc1:	mov    rcx,QWORD PTR [rsp+0x60]
   140007cc6:	mov    rax,rdi
   140007cc9:	xor    r15d,r15d
   140007ccc:	mov    edi,r15d
   140007ccf:	mov    QWORD PTR [rcx],rax
   140007cd2:	mov    ecx,esi
   140007cd4:	call   0x140007fa8
   140007cd9:	test   rdi,rdi
   140007cdc:	je     0x140007cfa
   140007cde:	call   QWORD PTR [rip+0x137c]        # 0x140009060
   140007ce4:	lea    r8,[rdi-0x4]
   140007ce8:	xor    edx,edx
   140007cea:	mov    rcx,rax
   140007ced:	call   QWORD PTR [rip+0x135d]        # 0x140009050
   140007cf3:	xor    ecx,ecx
   140007cf5:	call   0x140007fa8
   140007cfa:	mov    eax,esi
   140007cfc:	mov    rbx,QWORD PTR [rsp+0x70]
   140007d01:	add    rsp,0x20
   140007d05:	pop    r15
   140007d07:	pop    r14
   140007d09:	pop    r13
   140007d0b:	pop    r12
   140007d0d:	pop    rdi
   140007d0e:	pop    rsi
   140007d0f:	pop    rbp
   140007d10:	ret    
   140007d11:	int3   
   140007d12:	int3   
   140007d13:	int3   
   140007d14:	int3   
   140007d15:	int3   
   140007d16:	int3   
   140007d17:	int3   
   140007d18:	mov    rax,rsp
   140007d1b:	mov    DWORD PTR [rax+0x10],edx
   140007d1e:	mov    QWORD PTR [rax+0x18],r8
   140007d22:	mov    QWORD PTR [rax+0x20],r9
   140007d26:	push   rbx
   140007d27:	sub    rsp,0x20
   140007d2b:	lea    r8,[rax+0x18]
   140007d2f:	call   0x140007ad4
   140007d34:	mov    ebx,eax
   140007d36:	test   eax,eax
   140007d38:	jns    0x140007d41
   140007d3a:	mov    ecx,eax
   140007d3c:	call   0x140008090
   140007d41:	mov    ecx,ebx
   140007d43:	call   0x140007fa8
   140007d48:	mov    eax,ebx
   140007d4a:	add    rsp,0x20
   140007d4e:	pop    rbx
   140007d4f:	ret    
   140007d50:	int3   
   140007d51:	int3   
   140007d52:	int3   
   140007d53:	int3   
   140007d54:	int3   
   140007d55:	int3   
   140007d56:	int3   
   140007d57:	int3   
   140007d58:	mov    QWORD PTR [rsp+0x18],r8
   140007d5d:	mov    QWORD PTR [rsp+0x20],r9
   140007d62:	push   rbx
   140007d63:	push   rbp
   140007d64:	push   rsi
   140007d65:	push   rdi
   140007d66:	sub    rsp,0x28
   140007d6a:	xor    ebp,ebp
   140007d6c:	lea    rax,[rdx-0x1]
   140007d70:	cmp    rax,0x7ffffffe
   140007d76:	mov    rsi,rcx
   140007d79:	mov    edi,ebp
   140007d7b:	mov    ecx,0x80070057
   140007d80:	cmova  edi,ecx
   140007d83:	test   edi,edi
   140007d85:	js     0x140007dbc
   140007d87:	lea    rbx,[rdx-0x1]
   140007d8b:	mov    rcx,rsi
   140007d8e:	mov    rdx,rbx
   140007d91:	lea    r9,[rsp+0x68]
   140007d96:	mov    edi,ebp
   140007d98:	call   QWORD PTR [rip+0x1622]        # 0x1400093c0
   140007d9e:	test   eax,eax
   140007da0:	js     0x140007db1
   140007da2:	cdqe   
   140007da4:	cmp    rax,rbx
   140007da7:	ja     0x140007db1
   140007da9:	jne    0x140007dc4
   140007dab:	mov    WORD PTR [rsi+rbx*2],bp
   140007daf:	jmp    0x140007dc4
   140007db1:	mov    WORD PTR [rsi+rbx*2],bp
   140007db5:	mov    edi,0x8007007a
   140007dba:	jmp    0x140007dc4
   140007dbc:	test   rdx,rdx
   140007dbf:	je     0x140007dc4
   140007dc1:	mov    WORD PTR [rsi],bp
   140007dc4:	mov    eax,edi
   140007dc6:	add    rsp,0x28
   140007dca:	pop    rdi
   140007dcb:	pop    rsi
   140007dcc:	pop    rbp
   140007dcd:	pop    rbx
   140007dce:	ret    
   140007dcf:	int3   
   140007dd0:	int3   
   140007dd1:	int3   
   140007dd2:	int3   
   140007dd3:	int3   
   140007dd4:	int3   
   140007dd5:	int3   
   140007dd6:	int3   
   140007dd7:	int3   
   140007dd8:	mov    QWORD PTR [rsp+0x10],rbx
   140007ddd:	mov    DWORD PTR [rsp+0x18],r8d
   140007de2:	push   rbp
   140007de3:	push   rsi
   140007de4:	push   rdi
   140007de5:	sub    rsp,0x20
   140007de9:	xor    ebp,ebp
   140007deb:	mov    rsi,rdx
   140007dee:	test   rcx,rcx
   140007df1:	je     0x140007e1a
   140007df3:	mov    edi,0x7fffffff
   140007df8:	mov    ebx,ebp
   140007dfa:	mov    eax,edi
   140007dfc:	cmp    WORD PTR [rcx],bp
   140007dff:	je     0x140007e0b
   140007e01:	add    rcx,0x2
   140007e05:	sub    rax,0x1
   140007e09:	jne    0x140007dfc
   140007e0b:	test   rax,rax
   140007e0e:	jne    0x140007e15
   140007e10:	mov    rdi,rbp
   140007e13:	jmp    0x140007e1f
   140007e15:	sub    rdi,rax
   140007e18:	jmp    0x140007e24
   140007e1a:	mov    rdi,QWORD PTR [rsp+0x40]
   140007e1f:	mov    ebx,0x80070057
   140007e24:	test   ebx,ebx
   140007e26:	cmovs  rdi,rbp
   140007e2a:	js     0x140007e59
   140007e2c:	mov    eax,edi
   140007e2e:	cmp    rdi,rax
   140007e31:	je     0x140007e45
   140007e33:	mov    ebx,0x80070216
   140007e38:	mov    ecx,ebx
   140007e3a:	call   0x140008090
   140007e3f:	mov    edi,DWORD PTR [rsp+0x50]
   140007e43:	jmp    0x140007e4e
   140007e45:	xor    ecx,ecx
   140007e47:	call   0x140007fa8
   140007e4c:	mov    ebx,ebp
   140007e4e:	mov    ecx,ebx
   140007e50:	call   0x140007fa8
   140007e55:	test   ebx,ebx
   140007e57:	jns    0x140007e62
   140007e59:	mov    ecx,ebx
   140007e5b:	call   0x140008090
   140007e60:	jmp    0x140007e64
   140007e62:	mov    DWORD PTR [rsi],edi
   140007e64:	mov    ecx,ebx
   140007e66:	call   0x140007fa8
   140007e6b:	mov    eax,ebx
   140007e6d:	mov    rbx,QWORD PTR [rsp+0x48]
   140007e72:	add    rsp,0x20
   140007e76:	pop    rdi
   140007e77:	pop    rsi
   140007e78:	pop    rbp
   140007e79:	ret    
   140007e7a:	int3   
   140007e7b:	int3   
   140007e7c:	int3   
   140007e7d:	int3   
   140007e7e:	int3   
   140007e7f:	int3   
   140007e80:	mov    QWORD PTR [rsp+0x10],rbx
   140007e85:	mov    QWORD PTR [rsp+0x18],rbp
   140007e8a:	push   rsi
   140007e8b:	push   rdi
   140007e8c:	push   r12
   140007e8e:	push   r14
   140007e90:	push   r15
   140007e92:	sub    rsp,0x20
   140007e96:	xor    r15d,r15d
   140007e99:	mov    esi,edx
   140007e9b:	mov    r14,r8
   140007e9e:	mov    rbp,rcx
   140007ea1:	mov    ebx,r15d
   140007ea4:	test   rcx,rcx
   140007ea7:	je     0x140007f7d
   140007ead:	lea    edi,[rsi+0x1]
   140007eb0:	mov    r12d,0x80070216
   140007eb6:	cmp    edi,esi
   140007eb8:	jae    0x140007ec9
   140007eba:	mov    ecx,r12d
   140007ebd:	mov    ebx,r12d
   140007ec0:	call   0x140008090
   140007ec5:	mov    edi,DWORD PTR [rsp+0x50]
   140007ec9:	mov    ecx,ebx
   140007ecb:	call   0x140007fa8
   140007ed0:	test   ebx,ebx
   140007ed2:	jns    0x140007ee0
   140007ed4:	mov    ecx,ebx
   140007ed6:	call   0x140008090
   140007edb:	jmp    0x140007f80
   140007ee0:	mov    ebx,r15d
   140007ee3:	test   edi,edi
   140007ee5:	je     0x140007f03
   140007ee7:	lea    ecx,[rdi+rdi*1]
   140007eea:	mov    eax,ecx
   140007eec:	shr    eax,1
   140007eee:	cmp    eax,edi
   140007ef0:	je     0x140007eff
   140007ef2:	mov    ecx,r12d
   140007ef5:	mov    ebx,r12d
   140007ef8:	call   0x140008090
   140007efd:	jmp    0x140007f06
   140007eff:	mov    edi,ecx
   140007f01:	jmp    0x140007f06
   140007f03:	mov    edi,r15d
   140007f06:	mov    ecx,ebx
   140007f08:	call   0x140007fa8
   140007f0d:	test   ebx,ebx
   140007f0f:	js     0x140007ed4
   140007f11:	lea    eax,[rdi+0x4]
   140007f14:	cmp    eax,edi
   140007f16:	jb     0x140007f1f
   140007f18:	mov    edi,eax
   140007f1a:	mov    ebx,r15d
   140007f1d:	jmp    0x140007f2a
   140007f1f:	mov    ecx,r12d
   140007f22:	mov    ebx,r12d
   140007f25:	call   0x140008090
   140007f2a:	mov    ecx,ebx
   140007f2c:	call   0x140007fa8
   140007f31:	test   ebx,ebx
   140007f33:	js     0x140007ed4
   140007f35:	call   QWORD PTR [rip+0x1125]        # 0x140009060
   140007f3b:	mov    r8d,edi
   140007f3e:	xor    edx,edx
   140007f40:	mov    rcx,rax
   140007f43:	call   QWORD PTR [rip+0x10ff]        # 0x140009048
   140007f49:	test   rax,rax
   140007f4c:	jne    0x140007f58
   140007f4e:	mov    ebx,0x8007000e
   140007f53:	jmp    0x140007ed4
   140007f58:	lea    rdi,[rax+0x4]
   140007f5c:	mov    DWORD PTR [rax],esi
   140007f5e:	lea    rbx,[rsi+rsi*1]
   140007f62:	mov    rcx,rdi
   140007f65:	mov    r8,rbx
   140007f68:	mov    rdx,rbp
   140007f6b:	call   0x140008c82
   140007f70:	mov    WORD PTR [rbx+rdi*1],r15w
   140007f75:	mov    ebx,r15d
   140007f78:	mov    QWORD PTR [r14],rdi
   140007f7b:	jmp    0x140007f80
   140007f7d:	mov    QWORD PTR [r8],r15
   140007f80:	mov    ecx,ebx
   140007f82:	call   0x140007fa8
   140007f87:	mov    rbp,QWORD PTR [rsp+0x60]
   140007f8c:	mov    eax,ebx
   140007f8e:	mov    rbx,QWORD PTR [rsp+0x58]
   140007f93:	add    rsp,0x20
   140007f97:	pop    r15
   140007f99:	pop    r14
   140007f9b:	pop    r12
   140007f9d:	pop    rdi
   140007f9e:	pop    rsi
   140007f9f:	ret    
   140007fa0:	int3   
   140007fa1:	int3   
   140007fa2:	int3   
   140007fa3:	int3   
   140007fa4:	int3   
   140007fa5:	int3   
   140007fa6:	int3   
   140007fa7:	int3   
   140007fa8:	mov    QWORD PTR [rsp+0x10],rbx
   140007fad:	mov    QWORD PTR [rsp+0x18],rsi
   140007fb2:	push   rdi
   140007fb3:	sub    rsp,0x40
   140007fb7:	mov    rax,QWORD PTR [rip+0x404a]        # 0x14000c008
   140007fbe:	xor    rax,rsp
   140007fc1:	mov    QWORD PTR [rsp+0x30],rax
   140007fc6:	mov    eax,ecx
   140007fc8:	xor    esi,esi
   140007fca:	xor    ecx,ecx
   140007fcc:	mov    QWORD PTR [rsp+0x22],rcx
   140007fd1:	mov    DWORD PTR [rsp+0x2a],ecx
   140007fd5:	mov    WORD PTR [rsp+0x2e],cx
   140007fda:	mov    ecx,0x1
   140007fdf:	mov    BYTE PTR [rsp+0x22],cl
   140007fe3:	mov    BYTE PTR [rsp+0x24],cl
   140007fe7:	test   eax,eax
   140007fe9:	js     0x140007ffc
   140007feb:	mov    WORD PTR [rsp+0x20],si
   140007ff0:	movabs rcx,0x8000000000000000
   140007ffa:	jmp    0x14000800b
   140007ffc:	mov    WORD PTR [rsp+0x20],cx
   140008001:	movabs rcx,0x4000000000000000
   14000800b:	or     rcx,rax
   14000800e:	cmp    QWORD PTR [rip+0x4723],rsi        # 0x14000c738
   140008015:	mov    QWORD PTR [rsp+0x28],rcx
   14000801a:	je     0x14000806a
   14000801c:	mov    rbx,QWORD PTR [rip+0x470d]        # 0x14000c730
   140008023:	test   rbx,rbx
   140008026:	je     0x14000806a
   140008028:	mov    rdi,QWORD PTR [rip+0x4719]        # 0x14000c748
   14000802f:	mov    rcx,rdi
   140008032:	call   QWORD PTR [rip+0x13c0]        # 0x1400093f8
   140008038:	lea    rdx,[rsp+0x20]
   14000803d:	mov    rcx,rbx
   140008040:	call   rdi
   140008042:	test   al,al
   140008044:	je     0x14000806a
   140008046:	mov    rbx,QWORD PTR [rip+0x4703]        # 0x14000c750
   14000804d:	mov    rcx,rbx
   140008050:	call   QWORD PTR [rip+0x13a2]        # 0x1400093f8
   140008056:	mov    rcx,QWORD PTR [rip+0x46d3]        # 0x14000c730
   14000805d:	lea    rdx,[rsp+0x20]
   140008062:	xor    r9d,r9d
   140008065:	xor    r8d,r8d
   140008068:	call   rbx
   14000806a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000806f:	xor    rcx,rsp
   140008072:	call   0x1400085f0
   140008077:	mov    rbx,QWORD PTR [rsp+0x58]
   14000807c:	mov    rsi,QWORD PTR [rsp+0x60]
   140008081:	add    rsp,0x40
   140008085:	pop    rdi
   140008086:	ret    
   140008087:	int3   
   140008088:	int3   
   140008089:	int3   
   14000808a:	int3   
   14000808b:	int3   
   14000808c:	int3   
   14000808d:	int3   
   14000808e:	int3   
   14000808f:	int3   
   140008090:	mov    eax,DWORD PTR [rip+0x468e]        # 0x14000c724
   140008096:	test   eax,eax
   140008098:	je     0x1400080a8
   14000809a:	test   ecx,ecx
   14000809c:	jns    0x1400080a8
   14000809e:	cmp    eax,ecx
   1400080a0:	je     0x1400080a7
   1400080a2:	cmp    eax,0xffffffff
   1400080a5:	jne    0x1400080a8
   1400080a7:	int3   
   1400080a8:	ret    
   1400080a9:	int3   
   1400080aa:	int3   
   1400080ab:	int3   
   1400080ac:	int3   
   1400080ad:	int3   
   1400080ae:	int3   
   1400080af:	int3   
   1400080b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400080b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400080ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400080bf:	push   rdi
   1400080c0:	sub    rsp,0x20
   1400080c4:	mov    eax,edx
   1400080c6:	mov    rsi,r9
   1400080c9:	xor    r9d,r9d
   1400080cc:	shr    eax,0x4
   1400080cf:	mov    edi,edx
   1400080d1:	xor    ecx,ecx
   1400080d3:	lea    ebp,[r9+0x1]
   1400080d7:	add    ax,bp
   1400080da:	lea    edx,[rbp+0x5]
   1400080dd:	movzx  r8d,ax
   1400080e1:	call   QWORD PTR [rip+0x1151]        # 0x140009238
   1400080e7:	xor    ebx,ebx
   1400080e9:	test   rax,rax
   1400080ec:	je     0x140008168
   1400080ee:	mov    rdx,rax
   1400080f1:	xor    ecx,ecx
   1400080f3:	call   QWORD PTR [rip+0x1127]        # 0x140009220
   1400080f9:	test   rax,rax
   1400080fc:	je     0x140008168
   1400080fe:	mov    rcx,rax
   140008101:	call   QWORD PTR [rip+0x1121]        # 0x140009228
   140008107:	mov    rdx,rax
   14000810a:	test   rax,rax
   14000810d:	je     0x140008161
   14000810f:	and    edi,0xf
   140008112:	jbe    0x140008127
   140008114:	mov    eax,edi
   140008116:	movzx  ecx,WORD PTR [rdx]
   140008119:	add    ecx,ebp
   14000811b:	movsxd rcx,ecx
   14000811e:	lea    rdx,[rdx+rcx*2]
   140008122:	sub    rax,rbp
   140008125:	jne    0x140008116
   140008127:	test   rsi,rsi
   14000812a:	je     0x14000814f
   14000812c:	movzx  r8d,WORD PTR [rdx]
   140008130:	add    rdx,0x2
   140008134:	movzx  eax,r8w
   140008138:	neg    ax
   14000813b:	mov    rax,QWORD PTR [rsp+0x50]
   140008140:	sbb    rcx,rcx
   140008143:	and    rcx,rdx
   140008146:	mov    QWORD PTR [rsi],rcx
   140008149:	mov    WORD PTR [rax],r8w
   14000814d:	jmp    0x140008181
   14000814f:	mov    rcx,QWORD PTR [rsp+0x50]
   140008154:	test   rcx,rcx
   140008157:	je     0x140008181
   140008159:	movzx  eax,WORD PTR [rdx]
   14000815c:	mov    WORD PTR [rcx],ax
   14000815f:	jmp    0x140008181
   140008161:	mov    ebx,0x80004005
   140008166:	jmp    0x140008181
   140008168:	call   QWORD PTR [rip+0xf22]        # 0x140009090
   14000816e:	test   eax,eax
   140008170:	cmove  eax,ebp
   140008173:	movzx  ebx,ax
   140008176:	or     ebx,0x80070000
   14000817c:	test   eax,eax
   14000817e:	cmovle ebx,eax
   140008181:	mov    rbp,QWORD PTR [rsp+0x38]
   140008186:	mov    eax,ebx
   140008188:	mov    rbx,QWORD PTR [rsp+0x30]
   14000818d:	mov    rsi,QWORD PTR [rsp+0x40]
   140008192:	add    rsp,0x20
   140008196:	pop    rdi
   140008197:	ret    
   140008198:	int3   
   140008199:	int3   
   14000819a:	int3   
   14000819b:	int3   
   14000819c:	int3   
   14000819d:	int3   
   14000819e:	int3   
   14000819f:	int3   
   1400081a0:	mov    r11,rsp
   1400081a3:	mov    QWORD PTR [r11+0x8],rbx
   1400081a7:	mov    QWORD PTR [r11+0x10],rbp
   1400081ab:	mov    QWORD PTR [r11+0x20],r9
   1400081af:	mov    WORD PTR [r11+0x18],r8w
   1400081b4:	push   rsi
   1400081b5:	push   rdi
   1400081b6:	push   r14
   1400081b8:	sub    rsp,0x30
   1400081bc:	mov    r14,QWORD PTR [rsp+0x78]
   1400081c1:	lea    rax,[r11+0x18]
   1400081c5:	xor    ebp,ebp
   1400081c7:	mov    QWORD PTR [r11-0x28],rax
   1400081cb:	lea    r9,[r11+0x20]
   1400081cf:	mov    QWORD PTR [r14],rbp
   1400081d2:	call   0x1400080b0
   1400081d7:	mov    ebx,eax
   1400081d9:	test   eax,eax
   1400081db:	js     0x140008218
   1400081dd:	movzx  eax,WORD PTR [rsp+0x60]
   1400081e2:	lea    rsi,[rax+rax*1]
   1400081e6:	lea    rcx,[rsi+0x2]
   1400081ea:	call   QWORD PTR [rip+0xff8]        # 0x1400091e8
   1400081f0:	mov    rdi,rax
   1400081f3:	test   rax,rax
   1400081f6:	je     0x140008213
   1400081f8:	mov    rdx,QWORD PTR [rsp+0x68]
   1400081fd:	mov    r8,rsi
   140008200:	mov    rcx,rax
   140008203:	mov    ebx,ebp
   140008205:	call   0x140008c82
   14000820a:	mov    WORD PTR [rsi+rdi*1],bp
   14000820e:	mov    QWORD PTR [r14],rdi
   140008211:	jmp    0x140008218
   140008213:	mov    ebx,0x8007000e
   140008218:	mov    rbp,QWORD PTR [rsp+0x58]
   14000821d:	mov    eax,ebx
   14000821f:	mov    rbx,QWORD PTR [rsp+0x50]
   140008224:	add    rsp,0x30
   140008228:	pop    r14
   14000822a:	pop    rdi
   14000822b:	pop    rsi
   14000822c:	ret    
   14000822d:	int3   
   14000822e:	int3   
   14000822f:	int3   
   140008230:	int3   
   140008231:	int3   
   140008232:	int3   
   140008233:	int3   
   140008234:	int3   
   140008235:	int3   
   140008236:	int3   
   140008237:	int3   
   140008238:	int3   
   140008239:	int3   
   14000823a:	int3   
   14000823b:	int3   
   14000823c:	int3   
   14000823d:	int3   
   14000823e:	int3   
   14000823f:	int3   
   140008240:	sub    rsp,0x28
   140008244:	mov    eax,0x5a4d
   140008249:	cmp    WORD PTR [rip+0xffffffffffff7db0],ax        # 0x140000000
   140008250:	je     0x140008256
   140008252:	xor    eax,eax
   140008254:	jmp    0x1400082a5
   140008256:	movsxd rcx,DWORD PTR [rip+0xffffffffffff7ddf]        # 0x14000003c
   14000825d:	lea    rax,[rip+0xffffffffffff7d9c]        # 0x140000000
   140008264:	add    rcx,rax
   140008267:	cmp    DWORD PTR [rcx],0x4550
   14000826d:	jne    0x140008252
   14000826f:	movzx  eax,WORD PTR [rcx+0x18]
   140008273:	cmp    eax,0x10b
   140008278:	je     0x140008294
   14000827a:	cmp    eax,0x20b
   14000827f:	jne    0x140008252
   140008281:	xor    eax,eax
   140008283:	cmp    DWORD PTR [rcx+0x84],0xe
   14000828a:	jbe    0x1400082a5
   14000828c:	cmp    DWORD PTR [rcx+0xf8],eax
   140008292:	jmp    0x1400082a2
   140008294:	xor    eax,eax
   140008296:	cmp    DWORD PTR [rcx+0x74],0xe
   14000829a:	jbe    0x1400082a5
   14000829c:	cmp    DWORD PTR [rcx+0xe8],eax
   1400082a2:	setne  al
   1400082a5:	mov    ecx,0x2
   1400082aa:	mov    DWORD PTR [rip+0x3e60],eax        # 0x14000c110
   1400082b0:	call   0x1400087a8
   1400082b5:	mov    ecx,eax
   1400082b7:	call   QWORD PTR [rip+0x10c3]        # 0x140009380
   1400082bd:	mov    rcx,QWORD PTR [rip+0x1074]        # 0x140009338
   1400082c4:	or     rax,0xffffffffffffffff
   1400082c8:	mov    QWORD PTR [rip+0x44a1],rax        # 0x14000c770
   1400082cf:	mov    QWORD PTR [rip+0x44a2],rax        # 0x14000c778
   1400082d6:	mov    eax,DWORD PTR [rip+0x3e48]        # 0x14000c124
   1400082dc:	mov    DWORD PTR [rcx],eax
   1400082de:	mov    rcx,QWORD PTR [rip+0x104b]        # 0x140009330
   1400082e5:	mov    eax,DWORD PTR [rip+0x3e2d]        # 0x14000c118
   1400082eb:	mov    DWORD PTR [rcx],eax
   1400082ed:	call   0x1400089c0
   1400082f2:	cmp    DWORD PTR [rip+0x3d07],0x0        # 0x14000c000
   1400082f9:	jne    0x140008308
   1400082fb:	lea    rcx,[rip+0x6be]        # 0x1400089c0
   140008302:	call   QWORD PTR [rip+0x1060]        # 0x140009368
   140008308:	xor    eax,eax
   14000830a:	add    rsp,0x28
   14000830e:	ret    
   14000830f:	int3   
   140008310:	int3   
   140008311:	int3   
   140008312:	int3   
   140008313:	int3   
   140008314:	int3   
   140008315:	int3   
   140008316:	int3   
   140008317:	int3   
   140008318:	int3   
   140008319:	int3   
   14000831a:	int3   
   14000831b:	int3   
   14000831c:	int3   
   14000831d:	int3   
   14000831e:	int3   
   14000831f:	int3   
   140008320:	sub    rsp,0x38
   140008324:	mov    eax,DWORD PTR [rip+0x3df6]        # 0x14000c120
   14000832a:	lea    r8,[rip+0x3dd7]        # 0x14000c108
   140008331:	mov    r9d,DWORD PTR [rip+0x3de4]        # 0x14000c11c
   140008338:	lea    rdx,[rip+0x3dc1]        # 0x14000c100
   14000833f:	mov    DWORD PTR [rip+0x3dcf],eax        # 0x14000c114
   140008345:	lea    rcx,[rip+0x3dac]        # 0x14000c0f8
   14000834c:	lea    rax,[rip+0x3dc1]        # 0x14000c114
   140008353:	mov    QWORD PTR [rsp+0x20],rax
   140008358:	call   QWORD PTR [rip+0xfba]        # 0x140009318
   14000835e:	mov    DWORD PTR [rip+0x3d98],eax        # 0x14000c0fc
   140008364:	add    rsp,0x38
   140008368:	ret    
   140008369:	int3   
   14000836a:	int3   
   14000836b:	int3   
   14000836c:	int3   
   14000836d:	int3   
   14000836e:	int3   
   14000836f:	int3   
   140008370:	sub    rsp,0x28
   140008374:	call   0x1400088e4
   140008379:	add    rsp,0x28
   14000837d:	jmp    0x140008388
   140008382:	int3   
   140008383:	int3   
   140008384:	int3   
   140008385:	int3   
   140008386:	int3   
   140008387:	int3   
   140008388:	mov    rax,rsp
   14000838b:	mov    QWORD PTR [rax+0x8],rbx
   14000838f:	mov    QWORD PTR [rax+0x10],rsi
   140008393:	mov    QWORD PTR [rax+0x18],rdi
   140008397:	push   r15
   140008399:	sub    rsp,0xb0
   1400083a0:	and    DWORD PTR [rsp+0x20],0x0
   1400083a5:	lea    rcx,[rax-0x78]
   1400083a9:	call   QWORD PTR [rip+0xea9]        # 0x140009258
   1400083af:	nop
   1400083b0:	mov    rax,QWORD PTR gs:0x30
   1400083b9:	mov    rbx,QWORD PTR [rax+0x8]
   1400083bd:	xor    esi,esi
   1400083bf:	xor    eax,eax
   1400083c1:	lock cmpxchg QWORD PTR [rip+0x4396],rbx        # 0x14000c760
   1400083ca:	je     0x1400083e5
   1400083cc:	cmp    rax,rbx
   1400083cf:	jne    0x1400083d8
   1400083d1:	mov    esi,0x1
   1400083d6:	jmp    0x1400083e5
   1400083d8:	mov    ecx,0x3e8
   1400083dd:	call   QWORD PTR [rip+0xebd]        # 0x1400092a0
   1400083e3:	jmp    0x1400083bf
   1400083e5:	mov    eax,DWORD PTR [rip+0x437d]        # 0x14000c768
   1400083eb:	cmp    eax,0x1
   1400083ee:	jne    0x1400083fa
   1400083f0:	lea    ecx,[rax+0x1e]
   1400083f3:	call   0x1400087f4
   1400083f8:	jmp    0x14000846b
   1400083fa:	mov    eax,DWORD PTR [rip+0x4368]        # 0x14000c768
   140008400:	test   eax,eax
   140008402:	jne    0x140008461
   140008404:	mov    DWORD PTR [rip+0x435a],0x1        # 0x14000c768
   14000840e:	lea    r15,[rip+0x1063]        # 0x140009478
   140008415:	lea    rbx,[rip+0x1044]        # 0x140009460
   14000841c:	mov    QWORD PTR [rsp+0x38],rbx
   140008421:	mov    DWORD PTR [rsp+0x30],eax
   140008425:	cmp    rbx,r15
   140008428:	jae    0x140008453
   14000842a:	test   eax,eax
   14000842c:	jne    0x140008457
   14000842e:	mov    rdi,QWORD PTR [rbx]
   140008431:	test   rdi,rdi
   140008434:	je     0x140008448
   140008436:	mov    rcx,rdi
   140008439:	mov    rax,QWORD PTR [rip+0xfb8]        # 0x1400093f8
   140008440:	call   rax
   140008442:	call   rdi
   140008444:	mov    DWORD PTR [rsp+0x30],eax
   140008448:	add    rbx,0x8
   14000844c:	mov    QWORD PTR [rsp+0x38],rbx
   140008451:	jmp    0x140008425
   140008453:	test   eax,eax
   140008455:	je     0x14000846b
   140008457:	mov    eax,0xff
   14000845c:	jmp    0x1400085c4
   140008461:	mov    DWORD PTR [rip+0x3c89],0x1        # 0x14000c0f4
   14000846b:	mov    eax,DWORD PTR [rip+0x42f7]        # 0x14000c768
   140008471:	cmp    eax,0x1
   140008474:	jne    0x140008493
   140008476:	lea    rdx,[rip+0xfdb]        # 0x140009458
   14000847d:	lea    rcx,[rip+0xf84]        # 0x140009408
   140008484:	call   0x1400089ca
   140008489:	mov    DWORD PTR [rip+0x42d5],0x2        # 0x14000c768
   140008493:	test   esi,esi
   140008495:	jne    0x1400084a0
   140008497:	xor    eax,eax
   140008499:	xchg   QWORD PTR [rip+0x42c0],rax        # 0x14000c760
   1400084a0:	cmp    QWORD PTR [rip+0x42d8],0x0        # 0x14000c780
   1400084a8:	je     0x1400084d8
   1400084aa:	lea    rcx,[rip+0x42cf]        # 0x14000c780
   1400084b1:	call   0x140008850
   1400084b6:	test   eax,eax
   1400084b8:	je     0x1400084d8
   1400084ba:	mov    rbx,QWORD PTR [rip+0x42bf]        # 0x14000c780
   1400084c1:	mov    rcx,rbx
   1400084c4:	mov    rax,QWORD PTR [rip+0xf2d]        # 0x1400093f8
   1400084cb:	call   rax
   1400084cd:	xor    r8d,r8d
   1400084d0:	lea    edx,[r8+0x2]
   1400084d4:	xor    ecx,ecx
   1400084d6:	call   rbx
   1400084d8:	mov    rax,QWORD PTR [rip+0xe61]        # 0x140009340
   1400084df:	mov    rbx,QWORD PTR [rax]
   1400084e2:	mov    QWORD PTR [rsp+0x28],rbx
   1400084e7:	mov    edi,DWORD PTR [rsp+0x20]
   1400084eb:	cmp    BYTE PTR [rbx],0x20
   1400084ee:	ja     0x140008563
   1400084f0:	cmp    BYTE PTR [rbx],0x0
   1400084f3:	je     0x1400084f9
   1400084f5:	test   edi,edi
   1400084f7:	jne    0x140008563
   1400084f9:	mov    al,BYTE PTR [rbx]
   1400084fb:	dec    al
   1400084fd:	cmp    al,0x1f
   1400084ff:	ja     0x14000850b
   140008501:	inc    rbx
   140008504:	mov    QWORD PTR [rsp+0x28],rbx
   140008509:	jmp    0x1400084f9
   14000850b:	mov    ecx,DWORD PTR [rsp+0x7c]
   14000850f:	movzx  eax,WORD PTR [rsp+0x80]
   140008517:	mov    r9d,0xa
   14000851d:	and    cl,0x1
   140008520:	cmovne r9d,eax
   140008524:	mov    r8,rbx
   140008527:	xor    edx,edx
   140008529:	lea    rcx,[rip+0xffffffffffff7ad0]        # 0x140000000
   140008530:	call   0x140001bd0
   140008535:	mov    DWORD PTR [rip+0x3bb5],eax        # 0x14000c0f0
   14000853b:	cmp    DWORD PTR [rip+0x3bce],0x0        # 0x14000c110
   140008542:	jne    0x14000854c
   140008544:	mov    ecx,eax
   140008546:	call   QWORD PTR [rip+0xe44]        # 0x140009390
   14000854c:	cmp    DWORD PTR [rip+0x3ba1],0x0        # 0x14000c0f4
   140008553:	jne    0x140008561
   140008555:	call   QWORD PTR [rip+0xe1d]        # 0x140009378
   14000855b:	mov    eax,DWORD PTR [rip+0x3b8f]        # 0x14000c0f0
   140008561:	jmp    0x1400085c4
   140008563:	cmp    BYTE PTR [rbx],0x22
   140008566:	jne    0x140008575
   140008568:	xor    eax,eax
   14000856a:	test   edi,edi
   14000856c:	sete   al
   14000856f:	mov    edi,eax
   140008571:	mov    DWORD PTR [rsp+0x20],eax
   140008575:	movzx  ecx,BYTE PTR [rbx]
   140008578:	call   QWORD PTR [rip+0xdf2]        # 0x140009370
   14000857e:	test   eax,eax
   140008580:	je     0x14000858a
   140008582:	inc    rbx
   140008585:	mov    QWORD PTR [rsp+0x28],rbx
   14000858a:	inc    rbx
   14000858d:	mov    QWORD PTR [rsp+0x28],rbx
   140008592:	jmp    0x1400084eb
   140008597:	mov    DWORD PTR [rip+0x3b53],eax        # 0x14000c0f0
   14000859d:	cmp    DWORD PTR [rip+0x3b6c],0x0        # 0x14000c110
   1400085a4:	jne    0x1400085af
   1400085a6:	mov    ecx,eax
   1400085a8:	call   QWORD PTR [rip+0xdda]        # 0x140009388
   1400085ae:	int3   
   1400085af:	cmp    DWORD PTR [rip+0x3b3e],0x0        # 0x14000c0f4
   1400085b6:	jne    0x1400085c4
   1400085b8:	call   QWORD PTR [rip+0xdba]        # 0x140009378
   1400085be:	mov    eax,DWORD PTR [rip+0x3b2c]        # 0x14000c0f0
   1400085c4:	lea    r11,[rsp+0xb0]
   1400085cc:	mov    rbx,QWORD PTR [r11+0x10]
   1400085d0:	mov    rsi,QWORD PTR [r11+0x18]
   1400085d4:	mov    rdi,QWORD PTR [r11+0x20]
   1400085d8:	mov    rsp,r11
   1400085db:	pop    r15
   1400085dd:	ret    
   1400085de:	int3   
   1400085df:	int3   
   1400085e0:	int3   
   1400085e1:	int3   
   1400085e2:	int3   
   1400085e3:	int3   
   1400085e4:	int3   
   1400085e5:	int3   
   1400085e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400085f0:	cmp    rcx,QWORD PTR [rip+0x3a11]        # 0x14000c008
   1400085f7:	jne    0x140008609
   1400085f9:	rol    rcx,0x10
   1400085fd:	test   cx,0xffff
   140008602:	jne    0x140008605
   140008604:	ret    
   140008605:	ror    rcx,0x10
   140008609:	jmp    0x140008a40
   14000860e:	int3   
   14000860f:	int3   
   140008610:	int3   
   140008611:	int3   
   140008612:	int3   
   140008613:	int3   
   140008614:	mov    QWORD PTR [rsp+0x8],rbx
   140008619:	push   rdi
   14000861a:	sub    rsp,0x20
   14000861e:	mov    rdi,rcx
   140008621:	mov    rax,QWORD PTR [rip+0x4150]        # 0x14000c778
   140008628:	mov    QWORD PTR [rsp+0x38],rax
   14000862d:	cmp    rax,0xffffffffffffffff
   140008631:	jne    0x14000864a
   140008633:	mov    rbx,QWORD PTR [rip+0xcd6]        # 0x140009310
   14000863a:	mov    rcx,rbx
   14000863d:	call   QWORD PTR [rip+0xdb5]        # 0x1400093f8
   140008643:	mov    rcx,rdi
   140008646:	call   rbx
   140008648:	jmp    0x1400086a7
   14000864a:	mov    ecx,0x8
   14000864f:	call   0x140008bb8
   140008654:	nop
   140008655:	mov    rax,QWORD PTR [rip+0x411c]        # 0x14000c778
   14000865c:	mov    QWORD PTR [rsp+0x38],rax
   140008661:	mov    rax,QWORD PTR [rip+0x4108]        # 0x14000c770
   140008668:	mov    QWORD PTR [rsp+0x40],rax
   14000866d:	lea    r8,[rsp+0x40]
   140008672:	lea    rdx,[rsp+0x38]
   140008677:	mov    rcx,rdi
   14000867a:	call   0x140008bd0
   14000867f:	mov    rbx,rax
   140008682:	mov    rdx,QWORD PTR [rsp+0x38]
   140008687:	mov    QWORD PTR [rip+0x40ea],rdx        # 0x14000c778
   14000868e:	mov    rdx,QWORD PTR [rsp+0x40]
   140008693:	mov    QWORD PTR [rip+0x40d6],rdx        # 0x14000c770
   14000869a:	mov    ecx,0x8
   14000869f:	call   0x140008bc4
   1400086a4:	mov    rax,rbx
   1400086a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400086ac:	add    rsp,0x20
   1400086b0:	pop    rdi
   1400086b1:	ret    
   1400086b2:	int3   
   1400086b3:	int3   
   1400086b4:	int3   
   1400086b5:	int3   
   1400086b6:	int3   
   1400086b7:	int3   
   1400086b8:	sub    rsp,0x28
   1400086bc:	call   0x140008614
   1400086c1:	neg    rax
   1400086c4:	sbb    eax,eax
   1400086c6:	neg    eax
   1400086c8:	dec    eax
   1400086ca:	add    rsp,0x28
   1400086ce:	ret    
   1400086cf:	int3   
   1400086d0:	int3   
   1400086d1:	int3   
   1400086d2:	int3   
   1400086d3:	int3   
   1400086d4:	int3   
   1400086d5:	int3   
   1400086d6:	int3   
   1400086d7:	int3   
   1400086d8:	int3   
   1400086d9:	int3   
   1400086da:	int3   
   1400086db:	int3   
   1400086dc:	int3   
   1400086dd:	int3   
   1400086de:	int3   
   1400086df:	int3   
   1400086e0:	sub    rsp,0x28
   1400086e4:	mov    rax,QWORD PTR [rcx]
   1400086e7:	cmp    DWORD PTR [rax],0xe06d7363
   1400086ed:	jne    0x140008712
   1400086ef:	cmp    DWORD PTR [rax+0x18],0x4
   1400086f3:	jne    0x140008712
   1400086f5:	mov    ecx,DWORD PTR [rax+0x20]
   1400086f8:	lea    eax,[rcx-0x19930520]
   1400086fe:	cmp    eax,0x2
   140008701:	jbe    0x14000870b
   140008703:	cmp    ecx,0x1994000
   140008709:	jne    0x140008712
   14000870b:	call   QWORD PTR [rip+0xbf7]        # 0x140009308
   140008711:	int3   
   140008712:	xor    eax,eax
   140008714:	add    rsp,0x28
   140008718:	ret    
   140008719:	int3   
   14000871a:	int3   
   14000871b:	int3   
   14000871c:	int3   
   14000871d:	int3   
   14000871e:	int3   
   14000871f:	int3   
   140008720:	sub    rsp,0x28
   140008724:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400086e0
   14000872b:	call   QWORD PTR [rip+0xadf]        # 0x140009210
   140008731:	xor    eax,eax
   140008733:	add    rsp,0x28
   140008737:	ret    
   140008738:	int3   
   140008739:	int3   
   14000873a:	int3   
   14000873b:	int3   
   14000873c:	int3   
   14000873d:	int3   
   14000873e:	jmp    QWORD PTR [rip+0xbbc]        # 0x140009300
   140008744:	int3   
   140008745:	int3   
   140008746:	int3   
   140008747:	int3   
   140008748:	int3   
   140008749:	int3   
   14000874a:	int3   
   14000874b:	int3   
   14000874c:	sub    rsp,0x18
   140008750:	xor    edx,edx
   140008752:	lea    rax,[rcx-0x1]
   140008756:	cmp    rax,0xfffffffffffffffd
   14000875a:	ja     0x140008798
   14000875c:	mov    eax,0x5a4d
   140008761:	cmp    WORD PTR [rcx],ax
   140008764:	jne    0x140008790
   140008766:	cmp    DWORD PTR [rcx+0x3c],edx
   140008769:	jl     0x140008790
   14000876b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140008772:	jae    0x140008790
   140008774:	movsxd rax,DWORD PTR [rcx+0x3c]
   140008778:	add    rax,rcx
   14000877b:	mov    QWORD PTR [rsp],rax
   14000877f:	cmp    DWORD PTR [rax],0x4550
   140008785:	cmovne rax,rdx
   140008789:	mov    rdx,rax
   14000878c:	mov    QWORD PTR [rsp],rax
   140008790:	jmp    0x140008798
   140008792:	xor    edx,edx
   140008794:	mov    QWORD PTR [rsp],rdx
   140008798:	mov    rax,rdx
   14000879b:	add    rsp,0x18
   14000879f:	ret    
   1400087a0:	int3   
   1400087a1:	int3   
   1400087a2:	int3   
   1400087a3:	int3   
   1400087a4:	int3   
   1400087a5:	int3   
   1400087a6:	int3   
   1400087a7:	int3   
   1400087a8:	rex push rbx
   1400087aa:	sub    rsp,0x20
   1400087ae:	mov    ebx,ecx
   1400087b0:	xor    ecx,ecx
   1400087b2:	call   QWORD PTR [rip+0xa78]        # 0x140009230
   1400087b8:	test   rax,rax
   1400087bb:	je     0x1400087e5
   1400087bd:	mov    rcx,rax
   1400087c0:	call   0x14000874c
   1400087c5:	test   rax,rax
   1400087c8:	je     0x1400087e5
   1400087ca:	mov    ecx,0x2
   1400087cf:	cmp    WORD PTR [rax+0x5c],cx
   1400087d3:	jne    0x1400087d9
   1400087d5:	mov    eax,ecx
   1400087d7:	jmp    0x1400087e7
   1400087d9:	cmp    WORD PTR [rax+0x5c],0x3
   1400087de:	mov    eax,0x1
   1400087e3:	je     0x1400087e7
   1400087e5:	mov    eax,ebx
   1400087e7:	add    rsp,0x20
   1400087eb:	pop    rbx
   1400087ec:	ret    
   1400087ed:	int3   
   1400087ee:	int3   
   1400087ef:	int3   
   1400087f0:	int3   
   1400087f1:	int3   
   1400087f2:	int3   
   1400087f3:	int3   
   1400087f4:	jmp    QWORD PTR [rip+0xafe]        # 0x1400092f8
   1400087fa:	int3   
   1400087fb:	int3   
   1400087fc:	int3   
   1400087fd:	int3   
   1400087fe:	int3   
   1400087ff:	int3   
   140008800:	movsxd r8,DWORD PTR [rcx+0x3c]
   140008804:	xor    r9d,r9d
   140008807:	add    r8,rcx
   14000880a:	mov    r10,rdx
   14000880d:	movzx  eax,WORD PTR [r8+0x14]
   140008812:	movzx  r11d,WORD PTR [r8+0x6]
   140008817:	add    rax,0x18
   14000881b:	add    rax,r8
   14000881e:	test   r11d,r11d
   140008821:	je     0x140008841
   140008823:	mov    edx,DWORD PTR [rax+0xc]
   140008826:	cmp    r10,rdx
   140008829:	jb     0x140008835
   14000882b:	mov    ecx,DWORD PTR [rax+0x8]
   14000882e:	add    ecx,edx
   140008830:	cmp    r10,rcx
   140008833:	jb     0x140008843
   140008835:	inc    r9d
   140008838:	add    rax,0x28
   14000883c:	cmp    r9d,r11d
   14000883f:	jb     0x140008823
   140008841:	xor    eax,eax
   140008843:	ret    
   140008844:	int3   
   140008845:	int3   
   140008846:	int3   
   140008847:	int3   
   140008848:	int3   
   140008849:	int3   
   14000884a:	int3   
   14000884b:	int3   
   14000884c:	int3   
   14000884d:	int3   
   14000884e:	int3   
   14000884f:	int3   
   140008850:	mov    QWORD PTR [rsp+0x8],rbx
   140008855:	push   rdi
   140008856:	sub    rsp,0x20
   14000885a:	mov    rbx,rcx
   14000885d:	lea    rdi,[rip+0xffffffffffff779c]        # 0x140000000
   140008864:	mov    rcx,rdi
   140008867:	call   0x1400088b0
   14000886c:	test   eax,eax
   14000886e:	je     0x140008892
   140008870:	sub    rbx,rdi
   140008873:	mov    rdx,rbx
   140008876:	mov    rcx,rdi
   140008879:	call   0x140008800
   14000887e:	test   rax,rax
   140008881:	je     0x140008892
   140008883:	mov    eax,DWORD PTR [rax+0x24]
   140008886:	shr    eax,0x1f
   140008889:	not    eax
   14000888b:	and    eax,0x1
   14000888e:	jmp    0x140008892
   140008890:	xor    eax,eax
   140008892:	mov    rbx,QWORD PTR [rsp+0x30]
   140008897:	add    rsp,0x20
   14000889b:	pop    rdi
   14000889c:	ret    
   14000889d:	int3   
   14000889e:	int3   
   14000889f:	int3   
   1400088a0:	int3   
   1400088a1:	int3   
   1400088a2:	int3   
   1400088a3:	int3   
   1400088a4:	int3   
   1400088a5:	int3   
   1400088a6:	int3   
   1400088a7:	int3   
   1400088a8:	int3   
   1400088a9:	int3   
   1400088aa:	int3   
   1400088ab:	int3   
   1400088ac:	int3   
   1400088ad:	int3   
   1400088ae:	int3   
   1400088af:	int3   
   1400088b0:	mov    rax,rcx
   1400088b3:	mov    ecx,0x5a4d
   1400088b8:	cmp    WORD PTR [rax],cx
   1400088bb:	je     0x1400088c0
   1400088bd:	xor    eax,eax
   1400088bf:	ret    
   1400088c0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400088c4:	add    rcx,rax
   1400088c7:	xor    eax,eax
   1400088c9:	cmp    DWORD PTR [rcx],0x4550
   1400088cf:	jne    0x1400088dd
   1400088d1:	mov    edx,0x20b
   1400088d6:	cmp    WORD PTR [rcx+0x18],dx
   1400088da:	sete   al
   1400088dd:	ret    
   1400088de:	int3   
   1400088df:	int3   
   1400088e0:	int3   
   1400088e1:	int3   
   1400088e2:	int3   
   1400088e3:	int3   
   1400088e4:	mov    QWORD PTR [rsp+0x20],rbx
   1400088e9:	push   rbp
   1400088ea:	mov    rbp,rsp
   1400088ed:	sub    rsp,0x20
   1400088f1:	and    QWORD PTR [rbp+0x18],0x0
   1400088f6:	movabs rbx,0x2b992ddfa232
   140008900:	mov    rax,QWORD PTR [rip+0x3701]        # 0x14000c008
   140008907:	cmp    rax,rbx
   14000890a:	jne    0x14000899f
   140008910:	lea    rcx,[rbp+0x18]
   140008914:	call   QWORD PTR [rip+0x996]        # 0x1400092b0
   14000891a:	mov    rax,QWORD PTR [rbp+0x18]
   14000891e:	mov    QWORD PTR [rbp+0x10],rax
   140008922:	call   QWORD PTR [rip+0x928]        # 0x140009250
   140008928:	mov    eax,eax
   14000892a:	xor    QWORD PTR [rbp+0x10],rax
   14000892e:	call   QWORD PTR [rip+0x92c]        # 0x140009260
   140008934:	mov    eax,eax
   140008936:	xor    QWORD PTR [rbp+0x10],rax
   14000893a:	call   QWORD PTR [rip+0x978]        # 0x1400092b8
   140008940:	mov    eax,eax
   140008942:	shl    rax,0x18
   140008946:	xor    QWORD PTR [rbp+0x10],rax
   14000894a:	call   QWORD PTR [rip+0x968]        # 0x1400092b8
   140008950:	mov    eax,eax
   140008952:	lea    rcx,[rbp+0x10]
   140008956:	xor    rax,QWORD PTR [rbp+0x10]
   14000895a:	xor    rax,rcx
   14000895d:	lea    rcx,[rbp+0x20]
   140008961:	mov    QWORD PTR [rbp+0x10],rax
   140008965:	call   QWORD PTR [rip+0x905]        # 0x140009270
   14000896b:	mov    eax,DWORD PTR [rbp+0x20]
   14000896e:	movabs rcx,0xffffffffffff
   140008978:	shl    rax,0x20
   14000897c:	xor    rax,QWORD PTR [rbp+0x20]
   140008980:	xor    rax,QWORD PTR [rbp+0x10]
   140008984:	and    rax,rcx
   140008987:	movabs rcx,0x2b992ddfa233
   140008991:	cmp    rax,rbx
   140008994:	cmove  rax,rcx
   140008998:	mov    QWORD PTR [rip+0x3669],rax        # 0x14000c008
   14000899f:	mov    rbx,QWORD PTR [rsp+0x48]
   1400089a4:	not    rax
   1400089a7:	mov    QWORD PTR [rip+0x3662],rax        # 0x14000c010
   1400089ae:	add    rsp,0x20
   1400089b2:	pop    rbp
   1400089b3:	ret    
   1400089b4:	int3   
   1400089b5:	int3   
   1400089b6:	int3   
   1400089b7:	int3   
   1400089b8:	int3   
   1400089b9:	int3   
   1400089ba:	int3   
   1400089bb:	int3   
   1400089bc:	int3   
   1400089bd:	int3   
   1400089be:	int3   
   1400089bf:	int3   
   1400089c0:	xor    eax,eax
   1400089c2:	ret    
   1400089c3:	int3   
   1400089c4:	int3   
   1400089c5:	int3   
   1400089c6:	int3   
   1400089c7:	int3   
   1400089c8:	int3   
   1400089c9:	int3   
   1400089ca:	jmp    QWORD PTR [rip+0x990]        # 0x140009360
   1400089d0:	int3   
   1400089d1:	int3   
   1400089d2:	int3   
   1400089d3:	int3   
   1400089d4:	int3   
   1400089d5:	int3   
   1400089d6:	jmp    QWORD PTR [rip+0x97c]        # 0x140009358
   1400089dc:	int3   
   1400089dd:	int3   
   1400089de:	int3   
   1400089df:	int3   
   1400089e0:	int3   
   1400089e1:	int3   
   1400089e2:	int3   
   1400089e3:	int3   
   1400089e4:	int3   
   1400089e5:	int3   
   1400089e6:	int3   
   1400089e7:	int3   
   1400089e8:	int3   
   1400089e9:	int3   
   1400089ea:	int3   
   1400089eb:	int3   
   1400089ec:	int3   
   1400089ed:	int3   
   1400089ee:	int3   
   1400089ef:	int3   
   1400089f0:	ret    0x0
   1400089f3:	int3   
   1400089f4:	int3   
   1400089f5:	int3   
   1400089f6:	int3   
   1400089f7:	int3   
   1400089f8:	int3   
   1400089f9:	int3   
   1400089fa:	int3   
   1400089fb:	int3   
   1400089fc:	rex push rbx
   1400089fe:	sub    rsp,0x20
   140008a02:	mov    rbx,rcx
   140008a05:	xor    ecx,ecx
   140008a07:	call   QWORD PTR [rip+0x803]        # 0x140009210
   140008a0d:	mov    rcx,rbx
   140008a10:	call   QWORD PTR [rip+0x7f2]        # 0x140009208
   140008a16:	call   QWORD PTR [rip+0x6e4]        # 0x140009100
   140008a1c:	mov    rcx,rax
   140008a1f:	mov    edx,0xc0000409
   140008a24:	add    rsp,0x20
   140008a28:	pop    rbx
   140008a29:	rex.W jmp QWORD PTR [rip+0x818]        # 0x140009248
   140008a30:	int3   
   140008a31:	int3   
   140008a32:	int3   
   140008a33:	int3   
   140008a34:	int3   
   140008a35:	int3   
   140008a36:	int3   
   140008a37:	int3   
   140008a38:	int3   
   140008a39:	int3   
   140008a3a:	int3   
   140008a3b:	int3   
   140008a3c:	int3   
   140008a3d:	int3   
   140008a3e:	int3   
   140008a3f:	int3   
   140008a40:	mov    QWORD PTR [rsp+0x8],rcx
   140008a45:	sub    rsp,0x88
   140008a4c:	lea    rcx,[rip+0x377d]        # 0x14000c1d0
   140008a53:	call   QWORD PTR [rip+0x82f]        # 0x140009288
   140008a59:	mov    rax,QWORD PTR [rip+0x3868]        # 0x14000c2c8
   140008a60:	mov    QWORD PTR [rsp+0x48],rax
   140008a65:	xor    r8d,r8d
   140008a68:	lea    rdx,[rsp+0x50]
   140008a6d:	mov    rcx,QWORD PTR [rsp+0x48]
   140008a72:	call   QWORD PTR [rip+0x818]        # 0x140009290
   140008a78:	mov    QWORD PTR [rsp+0x40],rax
   140008a7d:	cmp    QWORD PTR [rsp+0x40],0x0
   140008a83:	je     0x140008ac7
   140008a85:	mov    QWORD PTR [rsp+0x38],0x0
   140008a8e:	lea    rax,[rsp+0x58]
   140008a93:	mov    QWORD PTR [rsp+0x30],rax
   140008a98:	lea    rax,[rsp+0x60]
   140008a9d:	mov    QWORD PTR [rsp+0x28],rax
   140008aa2:	lea    rax,[rip+0x3727]        # 0x14000c1d0
   140008aa9:	mov    QWORD PTR [rsp+0x20],rax
   140008aae:	mov    r9,QWORD PTR [rsp+0x40]
   140008ab3:	mov    r8,QWORD PTR [rsp+0x48]
   140008ab8:	mov    rdx,QWORD PTR [rsp+0x50]
   140008abd:	xor    ecx,ecx
   140008abf:	call   QWORD PTR [rip+0x7bb]        # 0x140009280
   140008ac5:	jmp    0x140008aea
   140008ac7:	mov    rax,QWORD PTR [rip+0x379a]        # 0x14000c268
   140008ace:	mov    rax,QWORD PTR [rax]
   140008ad1:	mov    QWORD PTR [rip+0x37f0],rax        # 0x14000c2c8
   140008ad8:	mov    rax,QWORD PTR [rip+0x3789]        # 0x14000c268
   140008adf:	add    rax,0x8
   140008ae3:	mov    QWORD PTR [rip+0x377e],rax        # 0x14000c268
   140008aea:	mov    rax,QWORD PTR [rip+0x37d7]        # 0x14000c2c8
   140008af1:	mov    QWORD PTR [rip+0x3648],rax        # 0x14000c140
   140008af8:	mov    rax,QWORD PTR [rsp+0x90]
   140008b00:	mov    QWORD PTR [rip+0x3749],rax        # 0x14000c250
   140008b07:	mov    DWORD PTR [rip+0x361f],0xc0000409        # 0x14000c130
   140008b11:	mov    DWORD PTR [rip+0x3619],0x1        # 0x14000c134
   140008b1b:	mov    DWORD PTR [rip+0x3623],0x3        # 0x14000c148
   140008b25:	mov    eax,0x8
   140008b2a:	imul   rax,rax,0x0
   140008b2e:	lea    rcx,[rip+0x361b]        # 0x14000c150
   140008b35:	mov    QWORD PTR [rcx+rax*1],0x2
   140008b3d:	mov    eax,0x8
   140008b42:	imul   rax,rax,0x1
   140008b46:	lea    rcx,[rip+0x3603]        # 0x14000c150
   140008b4d:	mov    rdx,QWORD PTR [rip+0x34b4]        # 0x14000c008
   140008b54:	mov    QWORD PTR [rcx+rax*1],rdx
   140008b58:	mov    eax,0x8
   140008b5d:	imul   rax,rax,0x2
   140008b61:	lea    rcx,[rip+0x35e8]        # 0x14000c150
   140008b68:	mov    rdx,QWORD PTR [rip+0x34a1]        # 0x14000c010
   140008b6f:	mov    QWORD PTR [rcx+rax*1],rdx
   140008b73:	mov    eax,0x8
   140008b78:	imul   rax,rax,0x0
   140008b7c:	mov    rcx,QWORD PTR [rip+0x3485]        # 0x14000c008
   140008b83:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140008b88:	mov    eax,0x8
   140008b8d:	imul   rax,rax,0x1
   140008b91:	mov    rcx,QWORD PTR [rip+0x3478]        # 0x14000c010
   140008b98:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140008b9d:	lea    rcx,[rip+0x9dc]        # 0x140009580
   140008ba4:	call   0x1400089fc
   140008ba9:	add    rsp,0x88
   140008bb0:	ret    
   140008bb1:	int3   
   140008bb2:	int3   
   140008bb3:	int3   
   140008bb4:	int3   
   140008bb5:	int3   
   140008bb6:	int3   
   140008bb7:	int3   
   140008bb8:	jmp    QWORD PTR [rip+0x76a]        # 0x140009328
   140008bbe:	int3   
   140008bbf:	int3   
   140008bc0:	int3   
   140008bc1:	int3   
   140008bc2:	int3   
   140008bc3:	int3   
   140008bc4:	jmp    QWORD PTR [rip+0x756]        # 0x140009320
   140008bca:	int3   
   140008bcb:	int3   
   140008bcc:	int3   
   140008bcd:	int3   
   140008bce:	int3   
   140008bcf:	int3   
   140008bd0:	jmp    QWORD PTR [rip+0x7f2]        # 0x1400093c8
   140008bd6:	int3   
   140008bd7:	int3   
   140008bd8:	int3   
   140008bd9:	int3   
   140008bda:	int3   
   140008bdb:	int3   
   140008bdc:	int3   
   140008bdd:	int3   
   140008bde:	int3   
   140008bdf:	int3   
   140008be0:	int3   
   140008be1:	int3   
   140008be2:	int3   
   140008be3:	int3   
   140008be4:	int3   
   140008be5:	int3   
   140008be6:	int3   
   140008be7:	int3   
   140008be8:	sub    rsp,0x28
   140008bec:	mov    r8,QWORD PTR [r9+0x38]
   140008bf0:	mov    rcx,rdx
   140008bf3:	mov    rdx,r9
   140008bf6:	call   0x140008c0c
   140008bfb:	mov    eax,0x1
   140008c00:	add    rsp,0x28
   140008c04:	ret    
   140008c05:	int3   
   140008c06:	int3   
   140008c07:	int3   
   140008c08:	int3   
   140008c09:	int3   
   140008c0a:	int3   
   140008c0b:	int3   
   140008c0c:	rex push rbx
   140008c0e:	sub    rsp,0x20
   140008c12:	mov    r11d,DWORD PTR [r8]
   140008c15:	mov    rbx,rdx
   140008c18:	and    r11d,0xfffffff8
   140008c1c:	mov    r9,rcx
   140008c1f:	test   BYTE PTR [r8],0x4
   140008c23:	mov    r10,rcx
   140008c26:	je     0x140008c3b
   140008c28:	mov    eax,DWORD PTR [r8+0x8]
   140008c2c:	movsxd r10,DWORD PTR [r8+0x4]
   140008c30:	neg    eax
   140008c32:	add    r10,rcx
   140008c35:	movsxd rcx,eax
   140008c38:	and    r10,rcx
   140008c3b:	movsxd rax,r11d
   140008c3e:	mov    rdx,QWORD PTR [rax+r10*1]
   140008c42:	mov    rax,QWORD PTR [rbx+0x10]
   140008c46:	mov    ecx,DWORD PTR [rax+0x8]
   140008c49:	add    rcx,QWORD PTR [rbx+0x8]
   140008c4d:	test   BYTE PTR [rcx+0x3],0xf
   140008c51:	je     0x140008c5f
   140008c53:	movzx  eax,BYTE PTR [rcx+0x3]
   140008c57:	and    eax,0xfffffff0
   140008c5a:	cdqe   
   140008c5c:	add    r9,rax
   140008c5f:	xor    r9,rdx
   140008c62:	mov    rcx,r9
   140008c65:	add    rsp,0x20
   140008c69:	pop    rbx
   140008c6a:	jmp    0x1400085f0
   140008c6f:	int3   
   140008c70:	int3   
   140008c71:	int3   
   140008c72:	int3   
   140008c73:	int3   
   140008c74:	int3   
   140008c75:	int3   
   140008c76:	jmp    QWORD PTR [rip+0x754]        # 0x1400093d0
   140008c7c:	int3   
   140008c7d:	int3   
   140008c7e:	int3   
   140008c7f:	int3   
   140008c80:	int3   
   140008c81:	int3   
   140008c82:	jmp    QWORD PTR [rip+0x720]        # 0x1400093a8
   140008c88:	int3   
   140008c89:	int3   
   140008c8a:	int3   
   140008c8b:	int3   
   140008c8c:	int3   
   140008c8d:	int3   
   140008c8e:	jmp    QWORD PTR [rip+0x70c]        # 0x1400093a0
   140008c94:	int3   
   140008c95:	int3   
   140008c96:	int3   
   140008c97:	int3   
   140008c98:	int3   
   140008c99:	int3   
   140008c9a:	jmp    QWORD PTR [rip+0x738]        # 0x1400093d8
   140008ca0:	int3   
   140008ca1:	int3   
   140008ca2:	int3   
   140008ca3:	int3   
   140008ca4:	int3   
   140008ca5:	int3   
   140008ca6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008cb0:	jmp    rax
   140008cb2:	int3   
   140008cb3:	int3   
   140008cb4:	int3   
   140008cb5:	int3   
   140008cb6:	int3   
   140008cb7:	int3   
   140008cb8:	int3   
   140008cb9:	int3   
   140008cba:	int3   
   140008cbb:	int3   
   140008cbc:	int3   
   140008cbd:	int3   
   140008cbe:	int3   
   140008cbf:	int3   
   140008cc0:	int3   
   140008cc1:	int3   
   140008cc2:	int3   
   140008cc3:	int3   
   140008cc4:	int3   
   140008cc5:	int3   
   140008cc6:	rex push rbp
   140008cc8:	sub    rsp,0x20
   140008ccc:	mov    rbp,rdx
   140008ccf:	mov    rax,QWORD PTR [rcx]
   140008cd2:	mov    rdx,rcx
   140008cd5:	mov    ecx,DWORD PTR [rax]
   140008cd7:	call   0x14000873e
   140008cdc:	nop
   140008cdd:	add    rsp,0x20
   140008ce1:	pop    rbp
   140008ce2:	ret    
   140008ce3:	int3   
   140008ce4:	int3   
   140008ce5:	int3   
   140008ce6:	int3   
   140008ce7:	int3   
   140008ce8:	int3   
   140008ce9:	int3   
   140008cea:	rex push rbp
   140008cec:	sub    rsp,0x20
   140008cf0:	mov    rbp,rdx
   140008cf3:	mov    ecx,0x8
   140008cf8:	call   0x140008bc4
   140008cfd:	nop
   140008cfe:	add    rsp,0x20
   140008d02:	pop    rbp
   140008d03:	ret    
   140008d04:	int3   
   140008d05:	int3   
   140008d06:	int3   
   140008d07:	int3   
   140008d08:	int3   
   140008d09:	int3   
   140008d0a:	int3   
   140008d0b:	int3   
   140008d0c:	int3   
   140008d0d:	int3   
   140008d0e:	int3   
   140008d0f:	int3   
   140008d10:	rex push rbp
   140008d12:	sub    rsp,0x20
   140008d16:	mov    rbp,rdx
   140008d19:	mov    rax,QWORD PTR [rcx]
   140008d1c:	xor    ecx,ecx
   140008d1e:	cmp    DWORD PTR [rax],0xc0000005
   140008d24:	sete   cl
   140008d27:	mov    eax,ecx
   140008d29:	add    rsp,0x20
   140008d2d:	pop    rbp
   140008d2e:	ret    
   140008d2f:	int3   
   140008d30:	int3   
   140008d31:	int3   
   140008d32:	int3   
   140008d33:	int3   
   140008d34:	int3   
   140008d35:	int3   
   140008d36:	int3   
   140008d37:	int3   
   140008d38:	int3   
   140008d39:	int3   
   140008d3a:	int3   
   140008d3b:	int3   
   140008d3c:	int3   
   140008d3d:	int3   
   140008d3e:	int3   
   140008d3f:	int3   
   140008d40:	rex push rdi
   140008d42:	sub    rsp,0x20
   140008d46:	cmp    QWORD PTR [rip+0x39ea],0x0        # 0x14000c738
   140008d4e:	je     0x140008d7b
   140008d50:	cmp    QWORD PTR [rip+0x39d8],0x0        # 0x14000c730
   140008d58:	je     0x140008d7b
   140008d5a:	mov    rdi,QWORD PTR [rip+0x39df]        # 0x14000c740
   140008d61:	mov    rcx,rdi
   140008d64:	call   QWORD PTR [rip+0x68e]        # 0x1400093f8
   140008d6a:	mov    rcx,QWORD PTR [rip+0x39bf]        # 0x14000c730
   140008d71:	call   rdi
   140008d73:	and    QWORD PTR [rip+0x39b5],0x0        # 0x14000c730
   140008d7b:	add    rsp,0x20
   140008d7f:	pop    rdi
   140008d80:	ret    
   140008d81:	int3   
   140008d82:	int3   
   140008d83:	int3   
   140008d84:	int3   
   140008d85:	int3   
   140008d86:	int3   
   140008d87:	int3   
   140008d88:	int3   
   140008d89:	int3   
   140008d8a:	int3   
   140008d8b:	int3   
   140008d8c:	int3   
   140008d8d:	int3   
   140008d8e:	int3   
   140008d8f:	int3   
   140008d90:	xor    eax,eax
   140008d92:	mov    QWORD PTR [rip+0x399f],rax        # 0x14000c738
   140008d99:	mov    QWORD PTR [rip+0x39a0],rax        # 0x14000c740
   140008da0:	mov    QWORD PTR [rip+0x39a1],rax        # 0x14000c748
   140008da7:	mov    QWORD PTR [rip+0x39a2],rax        # 0x14000c750
   140008dae:	ret    
   140008daf:	int3   
   140008db0:	int3   
   140008db1:	int3   
   140008db2:	int3   
   140008db3:	int3   
   140008db4:	int3   
   140008db5:	int3   
   140008db6:	int3   
   140008db7:	int3   
   140008db8:	int3   
   140008db9:	int3   
   140008dba:	int3   
   140008dbb:	int3   
   140008dbc:	int3   
   140008dbd:	int3   
   140008dbe:	int3   
   140008dbf:	int3   
   140008dc0:	lea    rcx,[rip+0x3931]        # 0x14000c6f8
   140008dc7:	rex.W jmp QWORD PTR [rip+0x2d2]        # 0x1400090a0
   140008dce:	int3   
   140008dcf:	int3   
   140008dd0:	int3   
   140008dd1:	int3   
   140008dd2:	int3   
   140008dd3:	int3   
   140008dd4:	int3   
   140008dd5:	int3   
   140008dd6:	int3   
   140008dd7:	int3   
   140008dd8:	int3   
   140008dd9:	int3   
   140008dda:	int3   
   140008ddb:	int3   
   140008ddc:	int3   
   140008ddd:	int3   
   140008dde:	int3   
   140008ddf:	int3   
   140008de0:	sub    rsp,0x28
   140008de4:	cmp    DWORD PTR [rip+0x396d],0x0        # 0x14000c758
   140008deb:	je     0x140008df3
   140008ded:	call   QWORD PTR [rip+0x3dd]        # 0x1400091d0
   140008df3:	add    rsp,0x28
   140008df7:	ret    

Disassembly of section .rdata:

0000000140009000 <.rdata>:
   140009000:	adc    BYTE PTR [rbp+0x0],ch
   140009006:	add    BYTE PTR [rax],al
   140009008:	(bad)  
   140009009:	lods   eax,DWORD PTR ds:[rsi]
   14000900a:	add    BYTE PTR [rax],al
   14000900c:	add    BYTE PTR [rax],al
   14000900e:	add    BYTE PTR [rax],al
   140009010:	xor    ch,BYTE PTR [rbp+0x0]
   140009016:	add    BYTE PTR [rax],al
   140009018:	rex.RX lods eax,DWORD PTR ds:[rsi]
   14000901a:	add    BYTE PTR [rax],al
   14000901c:	add    BYTE PTR [rax],al
   14000901e:	add    BYTE PTR [rax],al
   140009020:	push   rsp
   140009021:	lods   eax,DWORD PTR ds:[rsi]
   140009022:	add    BYTE PTR [rax],al
   140009024:	add    BYTE PTR [rax],al
   140009026:	add    BYTE PTR [rax],al
   140009028:	lods   ax,WORD PTR ds:[rsi]
   14000902a:	add    BYTE PTR [rax],al
   14000902c:	add    BYTE PTR [rax],al
   14000902e:	add    BYTE PTR [rax],al
   140009030:	js     0x140008fdf
   140009032:	add    BYTE PTR [rax],al
   140009034:	add    BYTE PTR [rax],al
   140009036:	add    BYTE PTR [rax],al
   140009038:	mov    BYTE PTR [rbp+0x0],ch
	...
   140009046:	add    BYTE PTR [rax],al
   140009048:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009049:	lods   eax,DWORD PTR ds:[rsi]
   14000904a:	add    BYTE PTR [rax],al
   14000904c:	add    BYTE PTR [rax],al
   14000904e:	add    BYTE PTR [rax],al
   140009050:	mov    dl,0xad
   140009052:	add    BYTE PTR [rax],al
   140009054:	add    BYTE PTR [rax],al
   140009056:	add    BYTE PTR [rax],al
   140009058:	mov    esi,0xad
   14000905d:	add    BYTE PTR [rax],al
   14000905f:	add    ah,dl
   140009061:	lods   eax,DWORD PTR ds:[rsi]
   140009062:	add    BYTE PTR [rax],al
   140009064:	add    BYTE PTR [rax],al
   140009066:	add    BYTE PTR [rax],al
   140009068:	out    0xad,al
   14000906a:	add    BYTE PTR [rax],al
   14000906c:	add    BYTE PTR [rax],al
   14000906e:	add    BYTE PTR [rax],al
   140009070:	clc    
   140009071:	lods   eax,DWORD PTR ds:[rsi]
   140009072:	add    BYTE PTR [rax],al
   140009074:	add    BYTE PTR [rax],al
   140009076:	add    BYTE PTR [rax],al
   140009078:	adc    BYTE PTR [rsi+0x0],ch
   14000907e:	add    BYTE PTR [rax],al
   140009080:	sub    BYTE PTR [rsi+0x0],ch
   140009086:	add    BYTE PTR [rax],al
   140009088:	xor    al,0xae
   14000908a:	add    BYTE PTR [rax],al
   14000908c:	add    BYTE PTR [rax],al
   14000908e:	add    BYTE PTR [rax],al
   140009090:	pop    rsp
   140009091:	scas   al,BYTE PTR es:[rdi]
   140009092:	add    BYTE PTR [rax],al
   140009094:	add    BYTE PTR [rax],al
   140009096:	add    BYTE PTR [rax],al
   140009098:	ins    BYTE PTR es:[rdi],dx
   140009099:	scas   al,BYTE PTR es:[rdi]
   14000909a:	add    BYTE PTR [rax],al
   14000909c:	add    BYTE PTR [rax],al
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	mov    ch,BYTE PTR [rsi+0x0]
   1400090a6:	add    BYTE PTR [rax],al
   1400090a8:	movabs ds:0xb8000000000000ae,al
   1400090b1:	scas   al,BYTE PTR es:[rdi]
   1400090b2:	add    BYTE PTR [rax],al
   1400090b4:	add    BYTE PTR [rax],al
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	retf   0xae
   1400090bb:	add    BYTE PTR [rax],al
   1400090bd:	add    BYTE PTR [rax],al
   1400090bf:	add    dl,bl
   1400090c1:	scas   al,BYTE PTR es:[rdi]
   1400090c2:	add    BYTE PTR [rax],al
   1400090c4:	add    BYTE PTR [rax],al
   1400090c6:	add    BYTE PTR [rax],al
   1400090c8:	in     al,dx
   1400090c9:	scas   al,BYTE PTR es:[rdi]
   1400090ca:	add    BYTE PTR [rax],al
   1400090cc:	add    BYTE PTR [rax],al
   1400090ce:	add    BYTE PTR [rax],al
   1400090d0:	cli    
   1400090d1:	scas   al,BYTE PTR es:[rdi]
   1400090d2:	add    BYTE PTR [rax],al
   1400090d4:	add    BYTE PTR [rax],al
   1400090d6:	add    BYTE PTR [rax],al
   1400090d8:	or     ch,BYTE PTR [rdi+0x0]
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	and    BYTE PTR [rdi+0x0],ch
   1400090e6:	add    BYTE PTR [rax],al
   1400090e8:	xor    BYTE PTR [rdi+0x0],ch
   1400090ee:	add    BYTE PTR [rax],al
   1400090f0:	rex scas eax,DWORD PTR es:[rdi]
   1400090f2:	add    BYTE PTR [rax],al
   1400090f4:	add    BYTE PTR [rax],al
   1400090f6:	add    BYTE PTR [rax],al
   1400090f8:	push   rsi
   1400090f9:	scas   eax,DWORD PTR es:[rdi]
   1400090fa:	add    BYTE PTR [rax],al
   1400090fc:	add    BYTE PTR [rax],al
   1400090fe:	add    BYTE PTR [rax],al
   140009100:	jo     0x1400090b1
   140009102:	add    BYTE PTR [rax],al
   140009104:	add    BYTE PTR [rax],al
   140009106:	add    BYTE PTR [rax],al
   140009108:	test   BYTE PTR [rdi+0x0],ch
   14000910e:	add    BYTE PTR [rax],al
   140009110:	xchg   esp,eax
   140009111:	scas   eax,DWORD PTR es:[rdi]
   140009112:	add    BYTE PTR [rax],al
   140009114:	add    BYTE PTR [rax],al
   140009116:	add    BYTE PTR [rax],al
   140009118:	stos   BYTE PTR es:[rdi],al
   140009119:	scas   eax,DWORD PTR es:[rdi]
   14000911a:	add    BYTE PTR [rax],al
   14000911c:	add    BYTE PTR [rax],al
   14000911e:	add    BYTE PTR [rax],al
   140009120:	(bad)  
   140009121:	scas   eax,DWORD PTR es:[rdi]
   140009122:	add    BYTE PTR [rax],al
   140009124:	add    BYTE PTR [rax],al
   140009126:	add    BYTE PTR [rax],al
   140009128:	fisubr DWORD PTR [rdi+0x0]
   14000912e:	add    BYTE PTR [rax],al
   140009130:	(bad)  
   140009131:	scas   eax,DWORD PTR es:[rdi]
	...
   14000913e:	add    BYTE PTR [rax],al
   140009140:	movabs ds:0xa180000000000000,eax
   140009149:	add    BYTE PTR [rax],al
   14000914b:	add    BYTE PTR [rax],al
   14000914d:	add    BYTE PTR [rax],al
   14000914f:	cmp    BYTE PTR [rdx+0x0],0x0
   140009156:	add    BYTE PTR [rax+0x0],al
   14000915c:	add    BYTE PTR [rax],al
   14000915e:	add    BYTE PTR [rax],al
   140009160:	stos   BYTE PTR es:[rdi],al
   140009161:	mov    dl,0x0
   140009163:	add    BYTE PTR [rax],al
   140009165:	add    BYTE PTR [rax],al
   140009167:	add    BYTE PTR [rdx+rsi*4+0x0],bh
	...
   140009176:	add    BYTE PTR [rax],al
   140009178:	adc    dh,BYTE PTR [rsi+0x0]
   14000917e:	add    BYTE PTR [rax],al
   140009180:	sub    dh,BYTE PTR [rsi+0x0]
   140009186:	add    BYTE PTR [rax],al
   140009188:	cld    
   140009189:	mov    ch,0x0
	...
   140009197:	add    BYTE PTR [rcx+rsi*4+0x0],al
   14000919e:	add    BYTE PTR [rax],al
   1400091a0:	push   rdx
   1400091a1:	mov    cl,0x0
   1400091a3:	add    BYTE PTR [rax],al
   1400091a5:	add    BYTE PTR [rax],al
   1400091a7:	add    BYTE PTR [rdx+0xb2],bl
   1400091ad:	add    BYTE PTR [rax],al
   1400091af:	add    BYTE PTR [rdx+rsi*4+0x0],al
   1400091b6:	add    BYTE PTR [rax],al
   1400091b8:	ins    BYTE PTR es:[rdi],dx
   1400091b9:	mov    dl,0x0
   1400091bb:	add    BYTE PTR [rax],al
   1400091bd:	add    BYTE PTR [rax],al
   1400091bf:	add    BYTE PTR [rsi+0xb1],bh
   1400091c5:	add    BYTE PTR [rax],al
   1400091c7:	add    BYTE PTR [rdx+rsi*4+0x0],dl
   1400091cb:	add    BYTE PTR [rax],al
   1400091cd:	add    BYTE PTR [rax],al
   1400091cf:	add    BYTE PTR [rdx-0x4e],al
   1400091d2:	add    BYTE PTR [rax],al
   1400091d4:	add    BYTE PTR [rax],al
   1400091d6:	add    BYTE PTR [rax],al
   1400091d8:	push   0xffffffffffffffb1
   1400091da:	add    BYTE PTR [rax],al
   1400091dc:	add    BYTE PTR [rax],al
   1400091de:	add    BYTE PTR [rax],al
   1400091e0:	cs mov dl,0x0
   1400091e3:	add    BYTE PTR [rax],al
   1400091e5:	add    BYTE PTR [rax],al
   1400091e7:	add    BYTE PTR [rdx+rsi*4],bl
   1400091ea:	add    BYTE PTR [rax],al
   1400091ec:	add    BYTE PTR [rax],al
   1400091ee:	add    BYTE PTR [rax],al
   1400091f0:	or     BYTE PTR [rdx+0x0],dh
   1400091f6:	add    BYTE PTR [rax],al
   1400091f8:	(bad)  
   1400091f9:	mov    cl,0x0
	...
   140009207:	add    ah,ah
   140009209:	mov    bl,0x0
   14000920b:	add    BYTE PTR [rax],al
   14000920d:	add    BYTE PTR [rax],al
   14000920f:	add    BYTE PTR [rax],al
   140009211:	mov    bl,0x0
	...
   14000921f:	add    BYTE PTR [rsi],ah
   140009221:	mov    ah,0x0
   140009223:	add    BYTE PTR [rax],al
   140009225:	add    BYTE PTR [rax],al
   140009227:	add    BYTE PTR [rsi],dh
   140009229:	mov    ah,0x0
   14000922b:	add    BYTE PTR [rax],al
   14000922d:	add    BYTE PTR [rax],al
   14000922f:	add    BYTE PTR [rsi],bl
   140009231:	mov    bl,0x0
   140009233:	add    BYTE PTR [rax],al
   140009235:	add    BYTE PTR [rax],al
   140009237:	add    BYTE PTR [rsp+rsi*4],dl
	...
   140009246:	add    BYTE PTR [rax],al
   140009248:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000924f:	add    BYTE PTR [rbx+rsi*4+0x0],cl
   140009253:	add    BYTE PTR [rax],al
   140009255:	add    BYTE PTR [rax],al
   140009257:	add    dh,ch
   140009259:	mov    dl,0x0
   14000925b:	add    BYTE PTR [rax],al
   14000925d:	add    BYTE PTR [rax],al
   14000925f:	add    BYTE PTR [rdx-0x4d],ah
	...
   14000926e:	add    BYTE PTR [rax],al
   140009270:	xor    dh,BYTE PTR [rbx+0x0]
	...
   14000927e:	add    BYTE PTR [rax],al
   140009280:	shl    BYTE PTR [rbx+0x0],1
   140009286:	add    BYTE PTR [rax],al
   140009288:	movabs ds:0xb6000000000000b3,al
   140009291:	mov    bl,0x0
	...
   14000929f:	add    dh,ah
   1400092a1:	mov    dl,0x0
	...
   1400092af:	add    BYTE PTR [rax-0x4d],bh
   1400092b2:	add    BYTE PTR [rax],al
   1400092b4:	add    BYTE PTR [rax],al
   1400092b6:	add    BYTE PTR [rax],al
   1400092b8:	xchg   edx,eax
   1400092b9:	mov    bl,0x0
	...
   1400092c7:	add    BYTE PTR [rcx+rsi*4+0x0],ch
   1400092ce:	add    BYTE PTR [rax],al
   1400092d0:	int3   
   1400092d1:	mov    dl,0x0
   1400092d3:	add    BYTE PTR [rax],al
   1400092d5:	add    BYTE PTR [rax],al
   1400092d7:	add    BYTE PTR [rcx+rsi*4+0x0],bl
	...
   1400092e6:	add    BYTE PTR [rax],al
   1400092e8:	call   0x14000939e
	...
   1400092f5:	add    BYTE PTR [rax],al
   1400092f7:	add    BYTE PTR [rax-0x50],bl
   1400092fa:	add    BYTE PTR [rax],al
   1400092fc:	add    BYTE PTR [rax],al
   1400092fe:	add    BYTE PTR [rax],al
   140009300:	rex.WX mov al,0x0
   140009303:	add    BYTE PTR [rax],al
   140009305:	add    BYTE PTR [rax],al
   140009307:	add    BYTE PTR [rsi],bh
   140009309:	mov    cl,0x0
   14000930b:	add    BYTE PTR [rax],al
   14000930d:	add    BYTE PTR [rax],al
   14000930f:	add    BYTE PTR [rax],ch
   140009311:	mov    cl,0x0
   140009313:	add    BYTE PTR [rax],al
   140009315:	add    BYTE PTR [rax],al
   140009317:	add    BYTE PTR [rsi-0x50],ah
   14000931a:	add    BYTE PTR [rax],al
   14000931c:	add    BYTE PTR [rax],al
   14000931e:	add    BYTE PTR [rax],al
   140009320:	adc    BYTE PTR [rcx+0x0],dh
   140009326:	add    BYTE PTR [rax],al
   140009328:	or     BYTE PTR [rcx+0x0],dh
   14000932e:	add    BYTE PTR [rax],al
   140009330:	cld    
   140009331:	mov    al,0x0
   140009333:	add    BYTE PTR [rax],al
   140009335:	add    BYTE PTR [rax],al
   140009337:	add    dl,dh
   140009339:	mov    al,0x0
   14000933b:	add    BYTE PTR [rax],al
   14000933d:	add    BYTE PTR [rax],al
   14000933f:	add    al,ch
   140009341:	mov    al,0x0
   140009343:	add    BYTE PTR [rax],al
   140009345:	add    BYTE PTR [rax],al
   140009347:	add    BYTE PTR [rax+rsi*4],dh
   14000934a:	add    BYTE PTR [rax],al
   14000934c:	add    BYTE PTR [rax],al
   14000934e:	add    BYTE PTR [rax],al
   140009350:	sub    dh,BYTE PTR [rax+0x0]
   140009356:	add    BYTE PTR [rax],al
   140009358:	shl    BYTE PTR [rax+0x0],1
   14000935e:	add    BYTE PTR [rax],al
   140009360:	(bad)  
   140009361:	mov    al,0x0
   140009363:	add    BYTE PTR [rax],al
   140009365:	add    BYTE PTR [rax],al
   140009367:	add    BYTE PTR [rax+0xb0],dh
   14000936d:	add    BYTE PTR [rax],al
   14000936f:	add    BYTE PTR [rdx+0xb0],ah
   140009375:	add    BYTE PTR [rax],al
   140009377:	add    BYTE PTR [rax+0xb0],bl
   14000937d:	add    BYTE PTR [rax],al
   14000937f:	add    BYTE PTR [rsi-0x50],dh
   140009382:	add    BYTE PTR [rax],al
   140009384:	add    BYTE PTR [rax],al
   140009386:	add    BYTE PTR [rax],al
   140009388:	nop
   140009389:	mov    al,0x0
   14000938b:	add    BYTE PTR [rax],al
   14000938d:	add    BYTE PTR [rax],al
   14000938f:	add    BYTE PTR [rax+0xb0],cl
   140009395:	add    BYTE PTR [rax],al
   140009397:	add    BYTE PTR [rsi],bh
   140009399:	mov    al,0x0
   14000939b:	add    BYTE PTR [rax],al
   14000939d:	add    BYTE PTR [rax],al
   14000939f:	add    BYTE PTR [rsi+rsi*4+0x0],bl
   1400093a3:	add    BYTE PTR [rax],al
   1400093a5:	add    BYTE PTR [rax],al
   1400093a7:	add    BYTE PTR [rdx-0x4a],dl
   1400093aa:	add    BYTE PTR [rax],al
   1400093ac:	add    BYTE PTR [rax],al
   1400093ae:	add    BYTE PTR [rax],al
   1400093b0:	(bad)  
   1400093b1:	mov    al,0x0
   1400093b3:	add    BYTE PTR [rax],al
   1400093b5:	add    BYTE PTR [rax],al
   1400093b7:	add    BYTE PTR [rdx],dl
   1400093b9:	mov    al,0x0
   1400093bb:	add    BYTE PTR [rax],al
   1400093bd:	add    BYTE PTR [rax],al
   1400093bf:	add    BYTE PTR [rax+rsi*4],al
   1400093c2:	add    BYTE PTR [rax],al
   1400093c4:	add    BYTE PTR [rax],al
   1400093c6:	add    BYTE PTR [rax],al
   1400093c8:	sbb    dh,BYTE PTR [rcx+0x0]
   1400093ce:	add    BYTE PTR [rax],al
   1400093d0:	rex.W mov sil,0x0
   1400093d3:	add    BYTE PTR [rax],al
   1400093d5:	add    BYTE PTR [rax],al
   1400093d7:	add    BYTE PTR [rsi-0x4a],ah
	...
   1400093e6:	add    BYTE PTR [rax],al
   1400093e8:	fdiv   DWORD PTR [rbp+0x0]
	...
   1400093f6:	add    BYTE PTR [rax],al
   1400093f8:	lock mov DWORD PTR [rax],eax
   1400093fb:	rex add DWORD PTR [rax],eax
   1400093fe:	add    BYTE PTR [rax],al
   140009400:	mov    al,0x8c
   140009402:	add    BYTE PTR [rax+0x1],al
	...
   14000940d:	add    BYTE PTR [rax],al
   14000940f:	add    BYTE PTR [rax],ah
   140009411:	add    DWORD PTR [rax],0x40
   140009414:	add    DWORD PTR [rax],eax
   140009416:	add    BYTE PTR [rax],al
   140009418:	add    BYTE PTR [rax],dl
   14000941a:	add    BYTE PTR [rax+0x1],al
   14000941d:	add    BYTE PTR [rax],al
   14000941f:	add    al,dh
   140009421:	adc    BYTE PTR [rax],al
   140009423:	rex add DWORD PTR [rax],eax
   140009426:	add    BYTE PTR [rax],al
   140009428:	jo     0x14000943b
   14000942a:	add    BYTE PTR [rax+0x1],al
   14000942d:	add    BYTE PTR [rax],al
   14000942f:	add    BYTE PTR [rax+0x1400011],ah
   140009435:	add    BYTE PTR [rax],al
   140009437:	add    al,al
   140009439:	adc    DWORD PTR [rax],eax
   14000943b:	rex add DWORD PTR [rax],eax
   14000943e:	add    BYTE PTR [rax],al
   140009440:	loopne 0x140009453
   140009442:	add    BYTE PTR [rax+0x1],al
   140009445:	add    BYTE PTR [rax],al
   140009447:	add    BYTE PTR [rax],al
   140009449:	adc    al,BYTE PTR [rax]
   14000944b:	rex add DWORD PTR [rax],eax
   14000944e:	add    BYTE PTR [rax],al
   140009450:	and    BYTE PTR [rdx],dl
   140009452:	add    BYTE PTR [rax+0x1],al
	...
   140009465:	add    BYTE PTR [rax],al
   140009467:	add    BYTE PTR [rax-0x7e],al
   14000946a:	add    BYTE PTR [rax+0x1],al
   14000946d:	add    BYTE PTR [rax],al
   14000946f:	add    BYTE PTR [rax],ah
   140009471:	xchg   DWORD PTR [rax],eax
   140009473:	rex add DWORD PTR [rax],eax
	...
   14000947e:	add    BYTE PTR [rax],al
   140009480:	add    BYTE PTR [rax],dl
   140009482:	add    BYTE PTR [rax],al
   140009484:	lock adc BYTE PTR [rax],al
   140009487:	add    BYTE PTR [rax+0x11],dh
   14000948a:	add    BYTE PTR [rax],al
   14000948c:	movabs al,ds:0xe0000011c0000011
   140009495:	adc    DWORD PTR [rax],eax
   140009497:	add    BYTE PTR [rax],al
   140009499:	adc    al,BYTE PTR [rax]
   14000949b:	add    BYTE PTR [rax],ah
   14000949d:	adc    al,BYTE PTR [rax]
   14000949f:	add    BYTE PTR [rax+0x30000014],ah
   1400094a5:	adc    eax,0x15500000
   1400094aa:	add    BYTE PTR [rax],al
   1400094ac:	lock adc eax,0x16900000
   1400094b2:	add    BYTE PTR [rax],al
   1400094b4:	nop
   1400094b5:	(bad)  
   1400094b6:	add    BYTE PTR [rax],al
   1400094b8:	rcl    BYTE PTR [rdi],1
   1400094ba:	add    BYTE PTR [rax],al
   1400094bc:	adc    BYTE PTR [rax],bl
   1400094be:	add    BYTE PTR [rax],al
   1400094c0:	push   rax
   1400094c1:	sbb    BYTE PTR [rax],al
   1400094c3:	add    BYTE PTR [rax+0x19],ah
   1400094c6:	add    BYTE PTR [rax],al
   1400094c8:	and    BYTE PTR [rax],0x0
   1400094cb:	add    BYTE PTR [rax],ah
   1400094cd:	and    al,BYTE PTR [rax]
   1400094cf:	add    BYTE PTR [rax+0x24],al
   1400094d2:	add    BYTE PTR [rax],al
   1400094d4:	adc    BYTE PTR [rax],ch
   1400094d6:	add    BYTE PTR [rax],al
   1400094d8:	xor    BYTE PTR [rdx],ch
   1400094da:	add    BYTE PTR [rax],al
   1400094dc:	mov    al,0x2b
   1400094de:	add    BYTE PTR [rax],al
   1400094e0:	shl    BYTE PTR [rax],0x0
   1400094e3:	add    BYTE PTR [rax],ah
   1400094e5:	xor    DWORD PTR [rax],eax
   1400094e7:	add    BYTE PTR [rax+0x33],dl
   1400094ea:	add    BYTE PTR [rax],al
   1400094ec:	and    BYTE PTR [rip+0x3e200000],dh        # 0x17e2094f2
   1400094f2:	add    BYTE PTR [rax],al
   1400094f4:	nop
   1400094f5:	rex.X add BYTE PTR [rax],al
   1400094f8:	and    BYTE PTR [rbx+0x0],al
   1400094fb:	add    BYTE PTR [rax-0x2fffffbd],ah
   140009501:	rex.XB add BYTE PTR [r8],al
   140009504:	lock rex.XB add BYTE PTR [r8],al
   140009508:	rex
   140009509:	add    BYTE PTR [rax],r8b
   14000950c:	nop
   14000950d:	rex.WB add BYTE PTR [r8],al
   140009510:	rex
   140009511:	rex.WX add BYTE PTR [rax],al
   140009514:	(bad)  
   140009515:	rex.WX add BYTE PTR [rax],al
   140009518:	mov    al,0x4a
   14000951a:	add    BYTE PTR [rax],al
   14000951c:	xor    BYTE PTR [rbx+0x0],cl
   14000951f:	add    BYTE PTR [rax-0xfffffb5],dl
   140009525:	pop    rbp
   140009526:	add    BYTE PTR [rax],al
   140009528:	movabs al,ds:0x7000005f2000005e
   140009531:	jno    0x140009533
   140009533:	add    BYTE PTR [rax],dh
   140009535:	ja     0x140009537
   140009537:	add    BYTE PTR [rax+0x77],al
   14000953a:	add    BYTE PTR [rax],al
   14000953c:	push   rax
   14000953d:	ja     0x14000953f
   14000953f:	add    BYTE PTR [rax+0x77],ah
   140009542:	add    BYTE PTR [rax],al
   140009544:	jo     0x1400095bd
   140009546:	add    BYTE PTR [rax],al
   140009548:	xor    BYTE PTR [rdi+0x0],0x0
   14000954c:	rex (bad) 
   14000954e:	add    BYTE PTR [rax],al
   140009550:	and    BYTE PTR [rbx-0x7c900000],al
   140009556:	add    BYTE PTR [rax],al
   140009558:	loopne 0x1400094e0
   14000955a:	add    BYTE PTR [rax],al
   14000955c:	and    BYTE PTR [rdi-0x76400000],al
   140009562:	add    BYTE PTR [rax],al
   140009564:	lock mov DWORD PTR [rax],eax
   140009567:	add    BYTE PTR [rax-0x76],al
   14000956a:	add    BYTE PTR [rax],al
   14000956c:	rex lea eax,[rax]
   14000956f:	add    BYTE PTR [rax-0x3fffff73],dl
   140009575:	lea    eax,[rax]
   140009577:	add    al,ah
   140009579:	lea    eax,[rax]
   14000957b:	add    BYTE PTR [rax],al
   14000957d:	add    BYTE PTR [rax],al
   14000957f:	add    BYTE PTR [rax],dh
   140009581:	rol    DWORD PTR [rax],0x40
   140009584:	add    DWORD PTR [rax],eax
   140009586:	add    BYTE PTR [rax],al
   140009588:	rol    cl,1
   14000958a:	add    BYTE PTR [rax+0x1],al
   14000958d:	add    BYTE PTR [rax],al
   14000958f:	add    BYTE PTR [rax+rax*1+0x0],bl
   140009593:	add    BYTE PTR [rax],al
   140009595:	add    BYTE PTR [rax],al
   140009597:	add    BYTE PTR [rsi+0x0],ch
   14000959a:	je     0x14000959c
   14000959c:	add    BYTE PTR fs:[rax+rax*1+0x6c],ch
   1400095a1:	add    BYTE PTR [rsi],ch
   1400095a3:	add    BYTE PTR [rax+rax*1+0x6c],ah
   1400095a7:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400095ab:	add    BYTE PTR [rax],al
   1400095ad:	add    BYTE PTR [rax],al
   1400095af:	add    BYTE PTR [rbp+0x74],al
   1400095b2:	ja     0x1400095f9
   1400095b4:	jbe    0x14000961b
   1400095b6:	outs   dx,BYTE PTR ds:[rsi]
   1400095b7:	je     0x14000960b
   1400095b9:	imul   esi,DWORD PTR gs:[ebx+0x74],0x7265
   1400095c2:	add    BYTE PTR [rax],al
   1400095c4:	add    BYTE PTR [rax],al
   1400095c6:	add    BYTE PTR [rax],al
   1400095c8:	rex.RB je 0x140009642
   1400095cb:	rex.RB jbe 0x140009633
   1400095ce:	outs   dx,BYTE PTR ds:[rsi]
   1400095cf:	je     0x140009626
   1400095d1:	outs   dx,BYTE PTR ds:[rsi]
   1400095d2:	jb     0x140009639
   1400095d4:	imul   esi,DWORD PTR [ebx+0x74],0x7265
   1400095dc:	add    BYTE PTR [rax],al
   1400095de:	add    BYTE PTR [rax],al
   1400095e0:	rex.RB je 0x14000965a
   1400095e3:	rex.RB jbe 0x14000964b
   1400095e6:	outs   dx,BYTE PTR ds:[rsi]
   1400095e7:	je     0x14000962e
   1400095e9:	outs   dx,BYTE PTR ds:[rsi]
   1400095ea:	(bad)  
   1400095eb:	(bad)  
   1400095ec:	ins    BYTE PTR es:[rdi],dx
   1400095ed:	gs add BYTE PTR fs:[rbp+0x74],al
   1400095f2:	ja     0x140009639
   1400095f4:	jbe    0x14000965b
   1400095f6:	outs   dx,BYTE PTR ds:[rsi]
   1400095f7:	je     0x140009650
   1400095f9:	jb     0x140009664
   1400095fb:	je     0x140009662
   1400095fd:	add    BYTE PTR [rax],al
   1400095ff:	add    BYTE PTR [rdi+0x0],dl
   140009602:	imul   eax,DWORD PTR [rax],0x64006e
   140009608:	outs   dx,DWORD PTR ds:[rsi]
   140009609:	add    BYTE PTR [rdi+0x0],dh
   14000960c:	jae    0x14000960e
   14000960e:	add    BYTE PTR cs:[rbp+0x0],dl
   140009612:	rex.WB add BYTE PTR [r14],bpl
   140009615:	add    BYTE PTR [rsi+0x0],cl
   140009618:	outs   dx,DWORD PTR ds:[rsi]
   140009619:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000961d:	add    BYTE PTR [rsi+0x0],ah
   140009620:	imul   eax,DWORD PTR [rax],0x610063
   140009626:	je     0x140009628
   140009628:	imul   eax,DWORD PTR [rax],0x6e006f
   14000962e:	jae    0x140009630
   140009630:	add    BYTE PTR cs:[rax+rax*1+0x6f],dl
   140009635:	add    BYTE PTR [rcx+0x0],ah
   140009638:	jae    0x14000963a
   14000963a:	je     0x14000963c
   14000963c:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140009640:	je     0x140009642
   140009642:	imul   eax,DWORD PTR [rax],0x690066
   140009648:	movsxd eax,DWORD PTR [rax]
   14000964a:	(bad)  
   14000964b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000964f:	add    BYTE PTR [rdi+0x0],ch
   140009652:	outs   dx,BYTE PTR ds:[rsi]
   140009653:	add    BYTE PTR [rbp+0x0],cl
   140009656:	(bad)  
   140009657:	add    BYTE PTR [rsi+0x0],ch
   14000965a:	(bad)  
   14000965b:	add    BYTE PTR [rdi+0x0],ah
   14000965e:	add    BYTE PTR gs:[rdx+0x0],dh
   140009662:	add    BYTE PTR [rax],al
   140009664:	add    BYTE PTR [rax],al
   140009666:	add    BYTE PTR [rax],al
   140009668:	pop    rcx
   140009669:	sbb    eax,0x21221c74
   14000966e:	(bad)  
   14000966f:	rex.RXB test al,0x56
   140009672:	xor    ebx,0xffffffd4
   140009675:	and    DWORD PTR [rax+0x75],ecx
	...
   140009680:	push   rdi
   140009681:	add    BYTE PTR [rcx+0x0],ch
   140009684:	outs   dx,BYTE PTR ds:[rsi]
   140009685:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140009689:	add    BYTE PTR [rdi+0x0],dh
   14000968c:	jae    0x14000968e
   14000968e:	add    BYTE PTR cs:[rbp+0x0],dl
   140009692:	rex.WB add BYTE PTR [r14],bpl
   140009695:	add    BYTE PTR [rsi+0x0],cl
   140009698:	outs   dx,DWORD PTR ds:[rsi]
   140009699:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000969d:	add    BYTE PTR [rsi+0x0],ah
   1400096a0:	imul   eax,DWORD PTR [rax],0x610063
   1400096a6:	je     0x1400096a8
   1400096a8:	imul   eax,DWORD PTR [rax],0x6e006f
   1400096ae:	jae    0x1400096b0
   1400096b0:	add    BYTE PTR cs:[rax+rax*1+0x6f],dl
   1400096b5:	add    BYTE PTR [rcx+0x0],ah
   1400096b8:	jae    0x1400096ba
   1400096ba:	je     0x1400096bc
   1400096bc:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   1400096c0:	je     0x1400096c2
   1400096c2:	imul   eax,DWORD PTR [rax],0x690066
   1400096c8:	movsxd eax,DWORD PTR [rax]
   1400096ca:	(bad)  
   1400096cb:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400096cf:	add    BYTE PTR [rdi+0x0],ch
   1400096d2:	outs   dx,BYTE PTR ds:[rsi]
   1400096d3:	add    BYTE PTR [rax],al
   1400096d5:	add    BYTE PTR [rax],al
   1400096d7:	add    BYTE PTR [rax],ah
   1400096d9:	rex.WXB adc al,BYTE PTR [r14+r8*8]
   1400096dd:	(bad)  
   1400096de:	sub    DWORD PTR [rdx-0x4f],eax
   1400096e1:	or     ebp,edi
   1400096e3:	sahf   
   1400096e4:	(bad)  
   1400096e5:	sub    dx,WORD PTR [rbx+0x75]
   1400096e9:	or     BYTE PTR [rbx+riz*4+0x4182012b],bh
   1400096f0:	cmp    ecx,ebp
   1400096f2:	stc    
   1400096f3:	push   0xffffffffffffff95
   1400096f5:	sbb    eax,0xa3af430a
   1400096fa:	jne    0x140009722
   1400096fc:	cli    
   1400096fd:	fsubrp st(3),st
   1400096ff:	jge    0x140009740
   140009701:	adc    BYTE PTR [rax+rdx*2+0x4598d235],ch
   140009708:	mov    ebx,0x4dfe98ef
   14000970d:	sbb    bh,BYTE PTR [rdx]
   14000970f:	(bad)  
   140009710:	and    BYTE PTR [rax],0x0
   140009713:	rex add DWORD PTR [rax],eax
   140009716:	add    BYTE PTR [rax],al
   140009718:	and    BYTE PTR [rdx],ah
   14000971a:	add    BYTE PTR [rax+0x1],al
   14000971d:	add    BYTE PTR [rax],al
   14000971f:	add    BYTE PTR [rax+0x24],al
   140009722:	add    BYTE PTR [rax+0x1],al
   140009725:	add    BYTE PTR [rax],al
   140009727:	add    BYTE PTR [rax],dl
   140009729:	sub    BYTE PTR [rax],al
   14000972b:	rex add DWORD PTR [rax],eax
   14000972e:	add    BYTE PTR [rax],al
   140009730:	xor    BYTE PTR [rdx],ch
   140009732:	add    BYTE PTR [rax+0x1],al
   140009735:	add    BYTE PTR [rax],al
   140009737:	add    BYTE PTR [rax+0x140002b],dh
   14000973d:	add    BYTE PTR [rax],al
   14000973f:	add    al,dh
   140009741:	pop    rbp
   140009742:	add    BYTE PTR [rax+0x1],al
   140009745:	add    BYTE PTR [rax],al
   140009747:	add    BYTE PTR [rax+0x4a],al
   14000974a:	add    BYTE PTR [rax+0x1],al
   14000974d:	add    BYTE PTR [rax],al
   14000974f:	add    BYTE PTR [rax+0x4a],ah
   140009752:	add    BYTE PTR [rax+0x1],al
   140009755:	add    BYTE PTR [rax],al
   140009757:	add    BYTE PTR [rax],ah
   140009759:	pop    rdi
   14000975a:	add    BYTE PTR [rax+0x1],al
   14000975d:	add    BYTE PTR [rax],al
   14000975f:	add    BYTE PTR [rax+0x140005e],ah
   140009765:	add    BYTE PTR [rax],al
   140009767:	add    BYTE PTR [rax+0x1400049],dl
   14000976d:	add    BYTE PTR [rax],al
   14000976f:	add    BYTE PTR [rax+0x4a],al
   140009772:	add    BYTE PTR [rax+0x1],al
   140009775:	add    BYTE PTR [rax],al
   140009777:	add    BYTE PTR [rax+0x4a],ah
   14000977a:	add    BYTE PTR [rax+0x1],al
   14000977d:	add    BYTE PTR [rax],al
   14000977f:	add    BYTE PTR [rax],dh
   140009781:	rex.WXB add BYTE PTR [r8+0x1],al
   140009785:	add    BYTE PTR [rax],al
   140009787:	add    BYTE PTR [rax+0x140004b],dl
   14000978d:	add    BYTE PTR [rax],al
   14000978f:	add    BYTE PTR [rax+0x140004a],dh
   140009795:	add    BYTE PTR [rax],al
   140009797:	add    al,al
   140009799:	xor    BYTE PTR [rax],al
   14000979b:	rex add DWORD PTR [rax],eax
   14000979e:	add    BYTE PTR [rax],al
   1400097a0:	and    BYTE PTR [rcx],dh
   1400097a2:	add    BYTE PTR [rax+0x1],al
   1400097a5:	add    BYTE PTR [rax],al
   1400097a7:	add    BYTE PTR [rax+0x33],dl
   1400097aa:	add    BYTE PTR [rax+0x1],al
   1400097ad:	add    BYTE PTR [rax],al
   1400097af:	add    BYTE PTR [rax],ah
   1400097b1:	xor    eax,0x14000
   1400097b6:	add    BYTE PTR [rax],al
   1400097b8:	xor    BYTE PTR [rdi+0x0],0x40
   1400097bc:	add    DWORD PTR [rax],eax
   1400097be:	add    BYTE PTR [rax],al
   1400097c0:	jo     0x140009839
   1400097c2:	add    BYTE PTR [rax+0x1],al
   1400097c5:	add    BYTE PTR [rax],al
   1400097c7:	add    BYTE PTR [rax+0x77],al
   1400097ca:	add    BYTE PTR [rax+0x1],al
   1400097cd:	add    BYTE PTR [rax],al
   1400097cf:	add    BYTE PTR [rax+0x1400043],ah
   1400097d5:	add    BYTE PTR [rax],al
   1400097d7:	add    BYTE PTR [rax+0x77],ah
   1400097da:	add    BYTE PTR [rax+0x1],al
   1400097dd:	add    BYTE PTR [rax],al
   1400097df:	add    BYTE PTR [rax+0x77],dl
   1400097e2:	add    BYTE PTR [rax+0x1],al
   1400097e5:	add    BYTE PTR [rax],al
   1400097e7:	add    BYTE PTR [rax],dh
   1400097e9:	ja     0x1400097eb
   1400097eb:	rex add DWORD PTR [rax],eax
   1400097ee:	add    BYTE PTR [rax],al
   1400097f0:	and    BYTE PTR [rbx+0x0],al
   1400097f3:	rex add DWORD PTR [rax],eax
   1400097f6:	add    BYTE PTR [rax],al
   1400097f8:	rex
   1400097f9:	add    BYTE PTR [rax+0x1],r8b
   1400097fd:	add    BYTE PTR [rax],al
   1400097ff:	add    al,dl
   140009801:	rex.XB add BYTE PTR [r8+0x1],al
   140009805:	add    BYTE PTR [rax],al
   140009807:	add    al,dh
   140009809:	rex.XB add BYTE PTR [r8+0x1],al
   14000980d:	add    BYTE PTR [rax],al
   14000980f:	add    BYTE PTR [rax+0x1400042],dl
   140009815:	add    BYTE PTR [rax],al
   140009817:	add    al,dh
   140009819:	adc    eax,0x14000
   14000981e:	add    BYTE PTR [rax],al
   140009820:	xor    BYTE PTR [rip+0x14000],dl        # 0x14001d826
   140009826:	add    BYTE PTR [rax],al
   140009828:	push   rax
   140009829:	adc    eax,0x14000
   14000982e:	add    BYTE PTR [rax],al
   140009830:	nop
   140009831:	(bad)  
   140009832:	add    BYTE PTR [rax+0x1],al
   140009835:	add    BYTE PTR [rax],al
   140009837:	add    BYTE PTR [rax+0x18],dl
   14000983a:	add    BYTE PTR [rax+0x1],al
   14000983d:	add    BYTE PTR [rax],al
   14000983f:	add    BYTE PTR [rax+0x19],ah
   140009842:	add    BYTE PTR [rax+0x1],al
   140009845:	add    BYTE PTR [rax],al
   140009847:	add    al,dl
   140009849:	(bad)  
   14000984a:	add    BYTE PTR [rax+0x1],al
   14000984d:	add    BYTE PTR [rax],al
   14000984f:	add    BYTE PTR [rax],dl
   140009851:	sbb    BYTE PTR [rax],al
   140009853:	rex add DWORD PTR [rax],eax
   140009856:	add    BYTE PTR [rax],al
   140009858:	nop
   140009859:	(bad)  
   14000985a:	add    BYTE PTR [rax+0x1],al
   14000985d:	add    BYTE PTR [rax],al
   14000985f:	add    BYTE PTR [rbx+0x0],bh
   140009862:	rex.RX add BYTE PTR [rdx],r14b
   140009865:	add    BYTE PTR [rsi+0x0],al
   140009868:	cmp    DWORD PTR [rax],eax
   14000986a:	xor    al,0x0
   14000986c:	rex.X add BYTE PTR [rdx+0x0],al
   140009870:	xor    eax,DWORD PTR [rax]
   140009872:	sub    eax,0x39003500
   140009877:	add    BYTE PTR [rip+0x2d004300],dh        # 0x16d00db7d
   14000987d:	add    BYTE PTR [rax+rax*1],dh
   140009880:	xor    eax,0x39003000
   140009885:	add    BYTE PTR [rip+0x37004200],ch        # 0x17700da8b
   14000988b:	add    BYTE PTR [rbp+0x0],al
   14000988e:	add    BYTE PTR [rip+0x34003200],r13b        # 0x17400ca95
   140009895:	add    BYTE PTR [rbx],dh
   140009897:	add    BYTE PTR [rsi+0x0],al
   14000989a:	add    BYTE PTR [r10],sil
   14000989d:	add    BYTE PTR [rdx+0x0],al
   1400098a0:	add    BYTE PTR [rbp+0x0],r8b
   1400098a4:	add    BYTE PTR [rip+0x7d004200],sil        # 0x1bd00daab
   1400098ab:	add    BYTE PTR [rax],al
   1400098ad:	add    BYTE PTR [rax],al
   1400098af:	add    BYTE PTR [rsi+0x0],al
   1400098b2:	outs   dx,DWORD PTR ds:[rsi]
   1400098b3:	add    BYTE PTR [rax+rax*1+0x48],ah
   1400098b7:	add    BYTE PTR [rbp+0x0],ah
   1400098ba:	ins    BYTE PTR es:[rdi],dx
   1400098bb:	add    BYTE PTR [rax+0x0],dh
   1400098be:	add    BYTE PTR gs:[rdx+0x0],dh
   1400098c2:	add    BYTE PTR [rax],al
   1400098c4:	add    BYTE PTR [rax],al
   1400098c6:	add    BYTE PTR [rax],al
   1400098c8:	rex.RX add BYTE PTR [rdi+0x0],r13b
   1400098cc:	add    BYTE PTR fs:[rax+0x0],cl
   1400098d0:	add    BYTE PTR gs:[rax+rax*1+0x70],ch
   1400098d5:	add    BYTE PTR [rbp+0x0],ah
   1400098d8:	jb     0x1400098da
   1400098da:	add    BYTE PTR cs:[rbp+0x0],al
   1400098de:	pop    rax
   1400098df:	add    BYTE PTR [rbp+0x0],al
   1400098e2:	add    BYTE PTR [rax],al
   1400098e4:	add    BYTE PTR [rax],al
   1400098e6:	add    BYTE PTR [rax],al
   1400098e8:	rex.RX add BYTE PTR [rdi+0x0],r13b
   1400098ec:	add    BYTE PTR fs:[rax+0x0],cl
   1400098f0:	add    BYTE PTR gs:[rax+rax*1+0x70],ch
   1400098f5:	add    BYTE PTR [rbp+0x0],ah
   1400098f8:	jb     0x1400098fa
   1400098fa:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400098fe:	ins    DWORD PTR es:[rdi],dx
   1400098ff:	add    BYTE PTR [rdi+0x0],cl
   140009902:	(bad)  
   140009903:	add    BYTE PTR [rdx+0x0],ch
   140009906:	add    BYTE PTR gs:[rbx+0x0],ah
   14000990a:	je     0x14000990c
   14000990c:	and    BYTE PTR [rax],al
   14000990e:	add    BYTE PTR [r8+r8*1+0x61],bpl
   140009913:	add    BYTE PTR [rbx+0x0],dh
   140009916:	jae    0x140009918
	...
   140009920:	rex.RX add BYTE PTR [rdi+0x0],r13b
   140009924:	add    BYTE PTR fs:[rax+0x0],cl
   140009928:	add    BYTE PTR gs:[rax+rax*1+0x70],ch
   14000992d:	add    BYTE PTR [rbp+0x0],ah
   140009930:	jb     0x140009932
   140009932:	add    BYTE PTR cs:[rsi+0x0],al
   140009936:	outs   dx,DWORD PTR ds:[rsi]
   140009937:	add    BYTE PTR [rax+rax*1+0x48],ah
   14000993b:	add    BYTE PTR [rbp+0x0],ah
   14000993e:	ins    BYTE PTR es:[rdi],dx
   14000993f:	add    BYTE PTR [rax+0x0],dh
   140009942:	add    BYTE PTR gs:[rdx+0x0],dh
   140009946:	rex.WRXB add BYTE PTR [r10+0x0],r12b
   14000994a:	push   0x0
   14000994c:	add    BYTE PTR cs:[rcx],dh
	...
   140009957:	add    BYTE PTR [rsi+0x0],al
   14000995a:	outs   dx,DWORD PTR ds:[rsi]
   14000995b:	add    BYTE PTR [rax+rax*1+0x48],ah
   14000995f:	add    BYTE PTR [rbp+0x0],ah
   140009962:	ins    BYTE PTR es:[rdi],dx
   140009963:	add    BYTE PTR [rax+0x0],dh
   140009966:	add    BYTE PTR gs:[rdx+0x0],dh
   14000996a:	add    BYTE PTR cs:[rsi+0x0],al
   14000996e:	outs   dx,DWORD PTR ds:[rsi]
   14000996f:	add    BYTE PTR [rax+rax*1+0x48],ah
   140009973:	add    BYTE PTR [rbp+0x0],ah
   140009976:	ins    BYTE PTR es:[rdi],dx
   140009977:	add    BYTE PTR [rax+0x0],dh
   14000997a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000997e:	rex.WRXB add BYTE PTR [r10+0x0],r12b
   140009982:	push   0x0
   140009984:	add    BYTE PTR [rax],al
   140009986:	add    BYTE PTR [rax],al
   140009988:	add    BYTE PTR [rdi+0x0],bpl
   14000998c:	jo     0x14000998e
   14000998e:	je     0x140009990
   140009990:	imul   eax,DWORD PTR [rax],0x6e006f
   140009996:	(bad)  
   140009997:	add    BYTE PTR [rax+rax*1+0x66],ch
   14000999b:	add    BYTE PTR [rbp+0x0],ah
   14000999e:	(bad)  
   14000999f:	add    BYTE PTR [rax+rax*1+0x75],dh
   1400099a3:	add    BYTE PTR [rdx+0x0],dh
   1400099a6:	add    BYTE PTR gs:[rbx+0x0],dh
   1400099aa:	add    BYTE PTR cs:[rax+0x0],dh
   1400099ae:	outs   dx,BYTE PTR ds:[rsi]
   1400099af:	add    BYTE PTR [rdi+0x0],ah
   1400099b2:	add    BYTE PTR [rax],al
   1400099b4:	add    BYTE PTR [rax],al
   1400099b6:	add    BYTE PTR [rax],al
   1400099b8:	data16 add BYTE PTR [rcx+0x0],ch
   1400099bc:	ins    BYTE PTR es:[rdi],dx
   1400099bd:	add    BYTE PTR [rbp+0x0],ah
   1400099c0:	cmp    al,BYTE PTR [rax]
   1400099c2:	(bad)  
   1400099c3:	add    BYTE PTR [rdi],ch
   1400099c5:	add    BYTE PTR [rdi],ch
	...
   1400099cf:	add    BYTE PTR [rcx+0x0],ch
   1400099d2:	ins    DWORD PTR es:[rdi],dx
   1400099d3:	add    BYTE PTR [rcx+0x0],ah
   1400099d6:	add    BYTE PTR [ebp+0x0],ah
   1400099da:	add    BYTE PTR [rax],al
   1400099dc:	add    BYTE PTR [rax],al
   1400099de:	add    BYTE PTR [rax],al
   1400099e0:	jae    0x1400099e2
   1400099e2:	jb     0x1400099e4
   1400099e4:	movsxd eax,DWORD PTR [rax]
   1400099e6:	add    BYTE PTR [rax],al
   1400099e8:	je     0x1400099ea
   1400099ea:	add    BYTE PTR gs:[rax+0x0],bh
   1400099ee:	je     0x1400099f0
	...
   140009a00:	pop    rsp
   140009a01:	add    BYTE PTR [rbp+0x0],cl
   140009a04:	imul   eax,DWORD PTR [rax],0x720063
   140009a0a:	outs   dx,DWORD PTR ds:[rsi]
   140009a0b:	add    BYTE PTR [rbx+0x0],dh
   140009a0e:	outs   dx,DWORD PTR ds:[rsi]
   140009a0f:	add    BYTE PTR [rsi+0x0],ah
   140009a12:	je     0x140009a14
   140009a14:	pop    rsp
   140009a15:	add    BYTE PTR [rdi+0x0],dl
   140009a18:	imul   eax,DWORD PTR [rax],0x64006e
   140009a1e:	outs   dx,DWORD PTR ds:[rsi]
   140009a1f:	add    BYTE PTR [rdi+0x0],dh
   140009a22:	jae    0x140009a24
   140009a24:	pop    rsp
   140009a25:	add    BYTE PTR [rbx+0x0],dl
   140009a28:	je     0x140009a2a
   140009a2a:	(bad)  
   140009a2b:	add    BYTE PTR [rdx+0x0],dh
   140009a2e:	je     0x140009a30
   140009a30:	and    BYTE PTR [rax],al
   140009a32:	rex.WRB add BYTE PTR [r13+0x0],r12b
   140009a36:	outs   dx,BYTE PTR ds:[rsi]
   140009a37:	add    BYTE PTR [rbp+0x0],dh
   140009a3a:	pop    rsp
   140009a3b:	add    BYTE PTR [rax+0x0],dl
   140009a3e:	jb     0x140009a40
   140009a40:	outs   dx,DWORD PTR ds:[rsi]
   140009a41:	add    BYTE PTR [rdi+0x0],ah
   140009a44:	jb     0x140009a46
   140009a46:	(bad)  
   140009a47:	add    BYTE PTR [rbp+0x0],ch
   140009a4a:	jae    0x140009a4c
   140009a4c:	pop    rsp
   140009a4d:	add    BYTE PTR [rax],al
   140009a4f:	add    BYTE PTR [rsi],ch
   140009a51:	add    BYTE PTR [rax+rax*1+0x6e],ch
   140009a55:	add    BYTE PTR [rbx+0x0],ch
	...
   140009a60:	and    eax,0x25007300
   140009a65:	add    BYTE PTR [rbx+0x0],dh
   140009a68:	and    eax,0x25007300
   140009a6d:	add    BYTE PTR [rbx+0x0],dh
	...
   140009a78:	(bad)  
   140009a79:	add    BYTE PTR [rdx+0x0],dh
   140009a7c:	add    BYTE PTR gs:[rdi+0x0],ah
   140009a80:	jae    0x140009a82
   140009a82:	add    BYTE PTR gs:[rdx+0x0],dh
   140009a86:	jbe    0x140009a88
   140009a88:	add    BYTE PTR gs:[rdx+0x0],dh
   140009a8c:	add    BYTE PTR [rax],al
   140009a8e:	add    BYTE PTR [rax],al
   140009a90:	(bad)  
   140009a91:	add    BYTE PTR [rbp+0x0],dh
   140009a94:	outs   dx,BYTE PTR ds:[rsi]
   140009a95:	add    BYTE PTR [rdx+0x0],dh
   140009a98:	add    BYTE PTR gs:[rdi+0x0],ah
   140009a9c:	jae    0x140009a9e
   140009a9e:	add    BYTE PTR gs:[rdx+0x0],dh
   140009aa2:	jbe    0x140009aa4
   140009aa4:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   140009ab0:	sub    eax,0x6d004500
   140009ab5:	add    BYTE PTR [rdx+0x0],ah
   140009ab8:	add    BYTE PTR gs:[rax+rax*1+0x64],ah
   140009abd:	add    BYTE PTR [rcx+0x0],ch
   140009ac0:	outs   dx,BYTE PTR ds:[rsi]
   140009ac1:	add    BYTE PTR [rdi+0x0],ah
   140009ac4:	add    BYTE PTR [rax],al
   140009ac6:	add    BYTE PTR [rax],al
   140009ac8:	(bad)  
   140009ac9:	add    BYTE PTR [rbp+0x0],al
   140009acc:	ins    DWORD PTR es:[rdi],dx
   140009acd:	add    BYTE PTR [rdx+0x0],ah
   140009ad0:	add    BYTE PTR gs:[rax+rax*1+0x64],ah
   140009ad5:	add    BYTE PTR [rcx+0x0],ch
   140009ad8:	outs   dx,BYTE PTR ds:[rsi]
   140009ad9:	add    BYTE PTR [rdi+0x0],ah
   140009adc:	add    BYTE PTR [rax],al
   140009ade:	add    BYTE PTR [rax],al
   140009ae0:	outs   dx,DWORD PTR ds:[rsi]
   140009ae1:	add    BYTE PTR [rax+0x0],dh
   140009ae4:	add    BYTE PTR gs:[rsi+0x0],ch
	...
   140009af0:	ins    DWORD PTR es:[rdi],dx
   140009af1:	add    BYTE PTR [rbx+0x0],dh
   140009af4:	sub    eax,0x65007300
   140009af9:	add    BYTE PTR [rax+rax*1+0x74],dh
   140009afd:	add    BYTE PTR [rcx+0x0],ch
   140009b00:	outs   dx,BYTE PTR ds:[rsi]
   140009b01:	add    BYTE PTR [rdi+0x0],ah
   140009b04:	jae    0x140009b06
   140009b06:	cmp    al,BYTE PTR [rax]
   140009b08:	outs   dx,DWORD PTR ds:[rsi]
   140009b09:	add    BYTE PTR [rax+0x0],dh
   140009b0c:	je     0x140009b0e
   140009b0e:	imul   eax,DWORD PTR [rax],0x6e006f
   140009b14:	(bad)  
   140009b15:	add    BYTE PTR [rax+rax*1+0x66],ch
   140009b19:	add    BYTE PTR [rbp+0x0],ah
   140009b1c:	(bad)  
   140009b1d:	add    BYTE PTR [rax+rax*1+0x75],dh
   140009b21:	add    BYTE PTR [rdx+0x0],dh
   140009b24:	add    BYTE PTR gs:[rbx+0x0],dh
	...
   140009b30:	add    BYTE PTR [r8+0x0],sil
   140009b34:	jo     0x140009b36
   140009b36:	rex.WB add BYTE PTR [r8+rax*1+0x5c],al
   140009b3b:	add    BYTE PTR [rip+0x7300],ah        # 0x140010e41
   140009b41:	add    BYTE PTR [rax],al
   140009b43:	add    BYTE PTR [rax],al
   140009b45:	add    BYTE PTR [rax],al
   140009b47:	add    BYTE PTR [rcx+0x0],al
   140009b4a:	jo     0x140009b4c
   140009b4c:	jo     0x140009b4e
   140009b4e:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140009b53:	add    BYTE PTR [rax],al
   140009b55:	add    BYTE PTR [rax],al
   140009b57:	add    BYTE PTR [rbx+0x0],bh
   140009b5a:	and    eax,0x7d007300
	...
   140009b67:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c010e6d
   140009b6d:	add    BYTE PTR [rbx+0x0],al
   140009b70:	rex.WR add BYTE PTR [rbx+0x0],r10b
   140009b74:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140009b79:	add    BYTE PTR [rax],al
   140009b7b:	add    BYTE PTR [rax],al
   140009b7d:	add    BYTE PTR [rax],al
   140009b7f:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c010e85
   140009b85:	add    BYTE PTR [rbx+0x0],al
   140009b88:	jne    0x140009b8a
   140009b8a:	jb     0x140009b8c
   140009b8c:	push   rsi
   140009b8d:	add    BYTE PTR [rbp+0x0],ah
   140009b90:	jb     0x140009b92
   140009b92:	add    BYTE PTR [rax],al
   140009b94:	add    BYTE PTR [rax],al
   140009b96:	add    BYTE PTR [rax],al
   140009b98:	add    BYTE PTR [r8+r8*1+0x53],cl
   140009b9d:	add    BYTE PTR [rcx+0x0],cl
   140009ba0:	add    BYTE PTR [rax+rax*1+0x25],r11b
   140009ba5:	add    BYTE PTR [rbx+0x0],dh
	...
   140009bb0:	and    eax,0x5c007300
   140009bb5:	add    BYTE PTR [rax+0x0],dl
   140009bb8:	jb     0x140009bba
   140009bba:	outs   dx,DWORD PTR ds:[rsi]
   140009bbb:	add    BYTE PTR [rdi+0x0],ah
   140009bbe:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140009bc3:	add    BYTE PTR [rax],al
   140009bc5:	add    BYTE PTR [rax],al
   140009bc7:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c010ecd
   140009bcd:	add    BYTE PTR [rsi+0x0],dl
   140009bd0:	add    BYTE PTR gs:[rdx+0x0],dh
   140009bd4:	jae    0x140009bd6
   140009bd6:	imul   eax,DWORD PTR [rax],0x6e006f
   140009bdc:	rex.WB add BYTE PTR [r14+0x0],bpl
   140009be0:	add    BYTE PTR fs:[rbp+0x0],ah
   140009be4:	jo     0x140009be6
   140009be6:	add    BYTE PTR gs:[rsi+0x0],ch
   140009bea:	add    BYTE PTR fs:[rbp+0x0],ah
   140009bee:	outs   dx,BYTE PTR ds:[rsi]
   140009bef:	add    BYTE PTR [rax+rax*1+0x50],dh
   140009bf3:	add    BYTE PTR [rdx+0x0],dh
   140009bf6:	outs   dx,DWORD PTR ds:[rsi]
   140009bf7:	add    BYTE PTR [rdi+0x0],ah
   140009bfa:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   140009bff:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c010f05
   140009c05:	add    BYTE PTR [rax+rax*1+0x79],dl
   140009c09:	add    BYTE PTR [rax+0x0],dh
   140009c0c:	add    BYTE PTR gs:[rax+rax*1+0x69],cl
   140009c11:	add    BYTE PTR [rdx+0x0],ah
   140009c14:	add    BYTE PTR [rax],al
   140009c16:	add    BYTE PTR [rax],al
   140009c18:	add    BYTE PTR [r8+r8*1+0x53],cl
   140009c1d:	add    BYTE PTR [rcx+0x0],cl
   140009c20:	add    BYTE PTR [rax+rax*1+0x7b],r11b
   140009c25:	add    BYTE PTR [rip+0x7d007300],ah        # 0x1bd010f2b
   140009c2b:	add    BYTE PTR [rax],al
   140009c2d:	add    BYTE PTR [rax],al
   140009c2f:	add    BYTE PTR [rsi+0x0],al
   140009c32:	outs   dx,DWORD PTR ds:[rsi]
   140009c33:	add    BYTE PTR [rax+rax*1+0x48],ah
   140009c37:	add    BYTE PTR [rbp+0x0],ah
   140009c3a:	ins    BYTE PTR es:[rdi],dx
   140009c3b:	add    BYTE PTR [rax+0x0],dh
   140009c3e:	add    BYTE PTR gs:[rdx+0x0],dh
   140009c42:	sub    BYTE PTR [rax],al
   140009c44:	and    eax,0x29007300
   140009c49:	add    BYTE PTR [rax],al
   140009c4b:	add    BYTE PTR [rax],al
   140009c4d:	add    BYTE PTR [rax],al
   140009c4f:	add    BYTE PTR [rcx+0x0],al
   140009c52:	jo     0x140009c54
   140009c54:	(bad)  
   140009c55:	add    BYTE PTR [rdx+0x0],dh
   140009c58:	je     0x140009c5a
   140009c5a:	ins    DWORD PTR es:[rdi],dx
   140009c5b:	add    BYTE PTR [rbp+0x0],ah
   140009c5e:	outs   dx,BYTE PTR ds:[rsi]
   140009c5f:	add    BYTE PTR [rax+rax*1+0x0],dh
   140009c63:	add    BYTE PTR [rax],al
   140009c65:	add    BYTE PTR [rax],al
   140009c67:	add    BYTE PTR [rsi+0x0],al
   140009c6a:	jb     0x140009c6c
   140009c6c:	add    BYTE PTR gs:[rbp+0x0],ah
	...
   140009c78:	rex.X add BYTE PTR [rdi+0x0],bpl
   140009c7c:	je     0x140009c7e
   140009c7e:	push   0x0
   140009c83:	add    BYTE PTR [rax],al
   140009c85:	add    BYTE PTR [rax],al
   140009c87:	add    BYTE PTR [rip+0x5c007300],ah        # 0x19c010f8d
   140009c8d:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140009c91:	add    BYTE PTR [rbx+0x0],ah
   140009c94:	(bad)  
   140009c95:	add    BYTE PTR [rax+rax*1+0x53],ch
   140009c99:	add    BYTE PTR [rbp+0x0],ah
   140009c9c:	jb     0x140009c9e
   140009c9e:	jbe    0x140009ca0
   140009ca0:	add    BYTE PTR gs:[rdx+0x0],dh
   140009ca4:	xor    eax,DWORD PTR [rax]
   140009ca6:	xor    al,BYTE PTR [rax]
	...
   140009cb0:	and    eax,0x5c007300
   140009cb5:	add    BYTE PTR [rcx+0x0],cl
   140009cb8:	outs   dx,BYTE PTR ds:[rsi]
   140009cb9:	add    BYTE PTR [rax+0x0],dh
   140009cbc:	jb     0x140009cbe
   140009cbe:	outs   dx,DWORD PTR ds:[rsi]
   140009cbf:	add    BYTE PTR [rbx+0x0],ah
   140009cc2:	push   rbx
   140009cc3:	add    BYTE PTR [rbp+0x0],ah
   140009cc6:	jb     0x140009cc8
   140009cc8:	jbe    0x140009cca
   140009cca:	add    BYTE PTR gs:[rdx+0x0],dh
   140009cce:	xor    eax,DWORD PTR [rax]
   140009cd0:	xor    al,BYTE PTR [rax]
   140009cd2:	add    BYTE PTR [rax],al
   140009cd4:	add    BYTE PTR [rax],al
   140009cd6:	add    BYTE PTR [rax],al
   140009cd8:	push   rsp
   140009cd9:	add    BYTE PTR [rax+0x0],ch
   140009cdc:	jb     0x140009cde
   140009cde:	add    BYTE PTR gs:[rcx+0x0],ah
   140009ce2:	add    BYTE PTR fs:[rcx+0x0],ch
   140009ce6:	outs   dx,BYTE PTR ds:[rsi]
   140009ce7:	add    BYTE PTR [rdi+0x0],ah
   140009cea:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140009cee:	add    BYTE PTR fs:[rbp+0x0],ah
   140009cf2:	ins    BYTE PTR es:[rdi],dx
   140009cf3:	add    BYTE PTR [rax],al
   140009cf5:	add    BYTE PTR [rax],al
   140009cf7:	add    BYTE PTR [rcx-0xd8adf8d],ah
   140009cfd:	and    edx,DWORD PTR [rsi-0x700f7abd]
   140009d03:	fild   DWORD PTR [rdi-0x6e122f62]
   140009d09:	jae    0x140009d2b
   140009d0b:	jne    0x140009cff
   140009d0d:	and    edx,DWORD PTR [rsi-0x700f7abd]
   140009d13:	fild   DWORD PTR [rdi-0x33122f62]
   140009d19:	int3   
   140009d1a:	cmp    al,0xfe
   140009d1c:	mov    ecx,0x864b61f5
   140009d21:	mov    eax,0xad087969
   140009d26:	imul   ecx,DWORD PTR [rdi],0x1
   140009d2c:	add    BYTE PTR [rax],al
   140009d2e:	add    BYTE PTR [rax],al
   140009d30:	rol    BYTE PTR [rax],0x0
   140009d33:	add    BYTE PTR [rax],al
   140009d35:	add    BYTE PTR [rax],al
   140009d37:	rex.RX add r13d,eax
   140009d3a:	jrcxz  0x140009cd1
   140009d3c:	imul   ecx,ecx,0x53975e3a
   140009d42:	(bad)  
   140009d43:	sub    dl,dl
   140009d45:	sub    bl,BYTE PTR [rdx-0x3dbfd0cd]
   140009d4b:	(bad)  
   140009d4c:	ror    BYTE PTR [rsi],1
   140009d4e:	sbb    BYTE PTR [rdx-0x55],bl
   140009d51:	imul   ebx,DWORD PTR [rcx-0xc],0x68a399aa
   140009d58:	sub    eax,0xd9ab54de
   140009d5d:	xchg   edi,eax
   140009d5e:	sub    BYTE PTR [rbp-0x4a],dl
   140009d61:	lods   eax,DWORD PTR ds:[rsi]
   140009d62:	adc    BYTE PTR [rdx-0x2],bl
   140009d65:	adc    eax,0x3065
   140009d6a:	add    BYTE PTR [rax],al
   140009d6c:	add    BYTE PTR [rax],al
   140009d6e:	add    BYTE PTR [rax],al
   140009d70:	stc    
   140009d71:	adc    al,0x2
   140009d73:	add    BYTE PTR [rax],al
   140009d75:	add    BYTE PTR [rax],al
   140009d77:	add    al,al
   140009d79:	add    BYTE PTR [rax],al
   140009d7b:	add    BYTE PTR [rax],al
   140009d7d:	add    BYTE PTR [rax],al
   140009d7f:	rex.RX
   140009d80:	repz cmp al,0x7e
   140009d83:	pushf  
   140009d84:	xchg   edi,eax
   140009d85:	rex.WR
   140009d86:	ss rex.WRB movabs r13,0x92228c223c09e3eb
   140009d91:	jae    0x140009db3
   140009d93:	jne    0x140009d87
   140009d95:	and    edx,DWORD PTR [rsi-0x700f7abd]
   140009d9b:	fild   DWORD PTR [rdi+0x4dedd09e]
   140009da1:	add    BYTE PTR [rcx+0x0],ch
   140009da4:	movsxd eax,DWORD PTR [rax]
   140009da6:	jb     0x140009da8
   140009da8:	outs   dx,DWORD PTR ds:[rsi]
   140009da9:	add    BYTE PTR [rbx+0x0],dh
   140009dac:	outs   dx,DWORD PTR ds:[rsi]
   140009dad:	add    BYTE PTR [rsi+0x0],ah
   140009db0:	je     0x140009db2
   140009db2:	add    BYTE PTR cs:[rsi+0x0],al
   140009db6:	outs   dx,DWORD PTR ds:[rsi]
   140009db7:	add    BYTE PTR [rax+rax*1+0x48],ah
   140009dbb:	add    BYTE PTR [rbp+0x0],ah
   140009dbe:	ins    BYTE PTR es:[rdi],dx
   140009dbf:	add    BYTE PTR [rax+0x0],dh
   140009dc2:	add    BYTE PTR gs:[rdx+0x0],dh
   140009dc6:	add    BYTE PTR [rax],al
   140009dc8:	fild   DWORD PTR [rbp+0x65f93eb6]
   140009dce:	test   BYTE PTR [rax+riz*4+0x3a],0xe3
   140009dd3:	out    dx,eax
   140009dd4:	gs jb  0x140009d76
   140009dd7:	cmp    eax,0x1
   140009ddc:	add    BYTE PTR [rax],al
   140009dde:	add    BYTE PTR [rax],al
   140009de0:	rol    BYTE PTR [rax],0x0
   140009de3:	add    BYTE PTR [rax],al
   140009de5:	add    BYTE PTR [rax],al
   140009de7:	rex.RX add BYTE PTR [rax],r8b
   140009dea:	add    BYTE PTR [rax],al
   140009dec:	add    BYTE PTR [rax],al
   140009dee:	add    BYTE PTR [rax],al
   140009df0:	rol    BYTE PTR [rax],0x0
   140009df3:	add    BYTE PTR [rax],al
   140009df5:	add    BYTE PTR [rax],al
   140009df7:	rex.RX add BYTE PTR [rax],r8b
	...
   140009e06:	add    BYTE PTR [rax],al
   140009e08:	scas   al,BYTE PTR es:[rdi]
   140009e09:	mov    ah,0xe2
   140009e0b:	rex.RB ret 
   140009e0d:	mov    cl,0xd0
   140009e0f:	adc    DWORD PTR [rcx-0x365fffd1],edi
   140009e15:	add    edx,DWORD PTR [rdx]
   140009e17:	loope  0x140009e1a
   140009e19:	adc    al,0x2
   140009e1b:	add    BYTE PTR [rax],al
   140009e1d:	add    BYTE PTR [rax],al
   140009e1f:	add    al,al
   140009e21:	add    BYTE PTR [rax],al
   140009e23:	add    BYTE PTR [rax],al
   140009e25:	add    BYTE PTR [rax],al
   140009e27:	rex.RX jmp 0x140009db8
   140009e2a:	ins    DWORD PTR es:[rdi],dx
   140009e2b:	mov    dl,dh
   140009e2d:	mov    WORD PTR [rsi+0x44],es
   140009e30:	lea    eax,[rdx]
   140009e32:	int    0xba
   140009e34:	sbb    eax,0x5599cfbd
   140009e39:	sub    BYTE PTR [rdi+rbx*4+0x79],cl
   140009e3d:	lahf   
   140009e3e:	cmp    DWORD PTR [rbx-0x58],ecx
   140009e41:	shl    cl,1
   140009e43:	(bad)  
   140009e44:	sub    eax,0x5f3d5e1
   140009e49:	add    BYTE PTR [rax],al
   140009e4b:	add    BYTE PTR [rax],al
   140009e4d:	add    BYTE PTR [rax],al
   140009e4f:	add    BYTE PTR [rbp+0x28],dl
   140009e52:	rex.WR lahf 
   140009e54:	jns    0x140009df5
   140009e56:	cmp    DWORD PTR [rbx-0x58],ecx
   140009e59:	shl    cl,1
   140009e5b:	(bad)  
   140009e5c:	sub    eax,0x9f3d5e1
   140009e61:	add    BYTE PTR [rax],al
   140009e63:	add    BYTE PTR [rax],al
   140009e65:	add    BYTE PTR [rax],al
   140009e67:	add    BYTE PTR [rbx],cl
   140009e69:	add    DWORD PTR [rax],eax
   140009e6b:	add    BYTE PTR [rax],al
   140009e6d:	add    BYTE PTR [rax],al
   140009e6f:	add    al,al
   140009e71:	add    BYTE PTR [rax],al
   140009e73:	add    BYTE PTR [rax],al
   140009e75:	add    BYTE PTR [rax],al
   140009e77:	rex.RX add BYTE PTR [rax],r8b
	...
   140009e82:	add    BYTE PTR [rax],al
   140009e84:	sar    DWORD PTR [rcx],1
   140009e86:	lahf   
   140009e87:	push   rbp
   140009e88:	add    BYTE PTR [rax],al
   140009e8a:	add    BYTE PTR [rax],al
   140009e8c:	add    al,BYTE PTR [rax]
   140009e8e:	add    BYTE PTR [rax],al
   140009e90:	add    BYTE PTR es:[rax],al
   140009e93:	add    BYTE PTR [rax-0x7fffff61],al
   140009e99:	xchg   ecx,eax
   140009e9a:	add    BYTE PTR [rax],al
   140009e9c:	add    BYTE PTR [rax],al
   140009e9e:	add    BYTE PTR [rax],al
   140009ea0:	sar    DWORD PTR [rcx],1
   140009ea2:	lahf   
   140009ea3:	push   rbp
   140009ea4:	add    BYTE PTR [rax],al
   140009ea6:	add    BYTE PTR [rax],al
   140009ea8:	or     eax,0x1c000000
   140009ead:	add    al,BYTE PTR [rax]
   140009eaf:	add    BYTE PTR [rdi+rbx*4-0x6e440000],bh
	...
   140009ede:	add    BYTE PTR [rax],al
   140009ee0:	movabs al,ds:0x0
	...
   140009f35:	add    BYTE PTR [rax],al
   140009f37:	add    BYTE PTR [rax],cl
   140009f39:	rol    BYTE PTR [rax],0x40
   140009f3c:	add    DWORD PTR [rax],eax
	...
   140009f4e:	add    BYTE PTR [rax],al
   140009f50:	clc    
   140009f51:	xchg   ebx,eax
   140009f52:	add    BYTE PTR [rax+0x1],al
   140009f55:	add    BYTE PTR [rax],al
   140009f57:	add    BYTE PTR [rax],al
   140009f59:	xchg   esp,eax
   140009f5a:	add    BYTE PTR [rax+0x1],al
   140009f5d:	add    BYTE PTR [rax],al
   140009f5f:	add    BYTE PTR [rax+0x1400094],al
   140009f65:	add    BYTE PTR [rax],al
   140009f67:	add    BYTE PTR [rdi],bh
	...
   140009f71:	xor    eax,0x0
	...
   140009f7e:	add    BYTE PTR [rax],al
   140009f80:	push   rdx
   140009f81:	push   rbx
   140009f82:	rex.R push rbx
   140009f84:	sbb    edx,0x3cff555b
   140009f8a:	sub    cl,BYTE PTR [rdi+rdx*4+0x5c]
   140009f8e:	imul   esi,DWORD PTR [rsi-0x6ffe6583],0x1
   140009f98:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140009f9a:	fs rex.W
   140009f9c:	gs ins BYTE PTR es:[rdi],dx
   140009f9e:	jo     0x14000a005
   140009fa0:	jb     0x140009fd0
   140009fa2:	jo     0x14000a008
   140009fa4:	(bad)  
	...
   140009fb9:	add    BYTE PTR [rax],al
   140009fbb:	add    BYTE PTR [rdi+0x43],al
   140009fbe:	push   rsp
   140009fbf:	rex.WR add BYTE PTR [rax],r10b
   140009fc2:	add    BYTE PTR [rax],al
   140009fc4:	xor    al,0x2
   140009fc6:	add    BYTE PTR [rax],al
   140009fc8:	cs je  0x14000a030
   140009fcb:	js     0x14000a041
   140009fcd:	and    al,0x64
   140009fcf:	imul   eax,DWORD PTR [rax],0x40000000
   140009fd5:	adc    al,BYTE PTR [rax]
   140009fd7:	add    BYTE PTR [rax+0x7a],ah
   140009fda:	add    BYTE PTR [rax],al
   140009fdc:	cs je  0x14000a044
   140009fdf:	js     0x14000a055
   140009fe1:	and    al,0x6d
   140009fe3:	outs   dx,BYTE PTR ds:[rsi]
   140009fe4:	add    BYTE PTR [rax],al
   140009fe6:	add    BYTE PTR [rax],al
   140009fe8:	movabs al,ds:0x2e0000001200008c
   140009ff1:	je     0x14000a058
   140009ff3:	js     0x14000a069
   140009ff5:	and    al,0x6d
   140009ff7:	outs   dx,BYTE PTR ds:[rsi]
   140009ff8:	and    al,0x30
   140009ffa:	xor    BYTE PTR [rax],al
   140009ffc:	ror    BYTE PTR [rax+rax*1+0x7000],0x0
   14000a004:	cs je  0x14000a06c
   14000a007:	js     0x14000a07d
   14000a009:	and    al,0x78
   14000a00b:	add    BYTE PTR [rax],dh
   14000a00d:	lea    eax,[rax]
   14000a00f:	add    al,cl
   14000a011:	add    BYTE PTR [rax],al
   14000a013:	add    BYTE PTR [rsi],ch
   14000a015:	je     0x14000a07c
   14000a017:	js     0x14000a08d
   14000a019:	and    al,0x79
   14000a01b:	add    BYTE PTR fs:[rax],al
   14000a01e:	add    BYTE PTR [rax],al
   14000a020:	add    BYTE PTR [rax+0x3f80000],dl
   14000a026:	add    BYTE PTR [rax],al
   14000a028:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   14000a031:	add    BYTE PTR [rax],al
   14000a033:	add    al,bh
   14000a035:	xchg   ebx,eax
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	adc    BYTE PTR [rax],al
   14000a03a:	add    BYTE PTR [rax],al
   14000a03c:	xor    BYTE PTR cs:[rax],dh
   14000a03f:	movsxd esp,DWORD PTR [rsi+0x67]
   14000a042:	add    BYTE PTR [rax],al
   14000a044:	or     BYTE PTR [rax+rax*1+0x800],dl
   14000a04b:	add    BYTE PTR [rsi],ch
   14000a04d:	rex.XB push r10
   14000a04f:	push   rsp
   14000a050:	and    al,0x58
   14000a052:	rex.XB
   14000a053:	add    BYTE PTR [r8],al
   14000a056:	add    BYTE PTR [rax],al
   14000a058:	adc    BYTE PTR [rax+rax*1+0x800],dl
   14000a05f:	add    BYTE PTR [rsi],ch
   14000a061:	rex.XB push r10
   14000a063:	push   rsp
   14000a064:	and    al,0x58
   14000a066:	rex.XB
   14000a067:	rex.B
   14000a068:	add    BYTE PTR [r8],al
   14000a06b:	add    BYTE PTR [rax],bl
   14000a06d:	xchg   esp,eax
   14000a06e:	add    BYTE PTR [rax],al
   14000a070:	add    BYTE PTR [rax],al
   14000a073:	add    BYTE PTR [rsi],ch
   14000a075:	rex.XB push r10
   14000a077:	push   rsp
   14000a078:	and    al,0x58
   14000a07a:	rex.XB push r13
   14000a07c:	add    BYTE PTR [rax],al
   14000a07e:	add    BYTE PTR [rax],al
   14000a080:	pop    rax
   14000a081:	xchg   esp,eax
   14000a082:	add    BYTE PTR [rax],al
   14000a084:	or     BYTE PTR [rax],al
   14000a086:	add    BYTE PTR [rax],al
   14000a088:	cs rex.XB push r10
   14000a08b:	push   rsp
   14000a08c:	and    al,0x58
   14000a08e:	rex.XB pop r10
   14000a090:	add    BYTE PTR [rax],al
   14000a092:	add    BYTE PTR [rax],al
   14000a094:	(bad)  
   14000a095:	xchg   esp,eax
   14000a096:	add    BYTE PTR [rax],al
   14000a098:	or     BYTE PTR [rax],al
   14000a09a:	add    BYTE PTR [rax],al
   14000a09c:	cs rex.XB push r10
   14000a09f:	push   rsp
   14000a0a0:	and    al,0x58
   14000a0a2:	rex.WB
   14000a0a3:	add    BYTE PTR [r8],al
   14000a0a6:	add    BYTE PTR [rax],al
   14000a0a8:	push   0x8000094
   14000a0ad:	add    BYTE PTR [rax],al
   14000a0af:	add    BYTE PTR [rsi],ch
   14000a0b1:	rex.XB push r10
   14000a0b3:	push   rsp
   14000a0b4:	and    al,0x58
   14000a0b6:	rex.WB
   14000a0b7:	rex.B
   14000a0b8:	add    BYTE PTR [r8],al
   14000a0bb:	add    BYTE PTR [rax-0x6c],dh
   14000a0be:	add    BYTE PTR [rax],al
   14000a0c0:	or     BYTE PTR [rax],al
   14000a0c2:	add    BYTE PTR [rax],al
   14000a0c4:	cs rex.XB push r10
   14000a0c7:	push   rsp
   14000a0c8:	and    al,0x58
   14000a0ca:	rex.WB pop r9
   14000a0cc:	add    BYTE PTR [rax],al
   14000a0ce:	add    BYTE PTR [rax],al
   14000a0d0:	js     0x14000a066
   14000a0d2:	add    BYTE PTR [rax],al
   14000a0d4:	or     BYTE PTR [rax],al
   14000a0d6:	add    BYTE PTR [rax],al
   14000a0d8:	cs rex.XB push r10
   14000a0db:	push   rsp
   14000a0dc:	and    al,0x58
   14000a0de:	rex.WB pop r10
   14000a0e0:	add    BYTE PTR [rax],al
   14000a0e2:	add    BYTE PTR [rax],al
   14000a0e4:	adc    BYTE PTR [rax+rax*1+0xfc00],0x0
   14000a0ec:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   14000a0f5:	add    BYTE PTR [rax],al
   14000a0f7:	add    BYTE PTR [rax+0x95],al
   14000a0fd:	or     al,BYTE PTR [rax]
   14000a0ff:	add    BYTE PTR [rsi],ch
   14000a101:	jb     0x14000a167
   14000a103:	(bad)  
   14000a104:	je     0x14000a167
   14000a106:	add    BYTE PTR [rax],al
   14000a108:	sbb    BYTE PTR [rdi+0x2580000],0x0
   14000a10f:	add    BYTE PTR [rsi],ch
   14000a111:	jb     0x14000a177
   14000a113:	(bad)  
   14000a114:	je     0x14000a177
   14000a116:	and    al,0x7a
   14000a118:	jp     0x14000a194
   14000a11a:	fs (bad) 
   14000a11c:	add    BYTE PTR [eax],al
   14000a11f:	add    al,bl
   14000a121:	movabs eax,ds:0x782e000005d40000
   14000a12a:	fs (bad) 
   14000a12c:	je     0x14000a18f
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	lods   al,BYTE PTR ds:[rsi]
   14000a131:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a132:	add    BYTE PTR [rax],al
   14000a134:	push   rsp
   14000a135:	add    DWORD PTR [rax],eax
   14000a137:	add    BYTE PTR [rsi],ch
   14000a139:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   14000a141:	add    BYTE PTR [rax],al
   14000a143:	add    BYTE PTR [rax],al
   14000a145:	test   eax,0x140000
   14000a14a:	add    BYTE PTR [rax],al
   14000a14c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000a155:	add    BYTE PTR [rax],al
   14000a157:	add    BYTE PTR [rax],bl
   14000a159:	test   eax,0x3f80000
   14000a15e:	add    BYTE PTR [rax],al
   14000a160:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   14000a169:	add    BYTE PTR [rax],al
   14000a16b:	add    BYTE PTR [rax],dl
   14000a16d:	lods   eax,DWORD PTR ds:[rsi]
   14000a16e:	add    BYTE PTR [rax],al
   14000a170:	(bad)  
   14000a171:	or     DWORD PTR [rax],eax
   14000a173:	add    BYTE PTR [rsi],ch
   14000a175:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   14000a17d:	add    BYTE PTR [rax],al
   14000a17f:	add    BYTE PTR [rax],al
   14000a181:	rol    BYTE PTR [rax],0x0
   14000a184:	lock add BYTE PTR [rax],al
   14000a187:	add    BYTE PTR [rsi],ch
   14000a189:	fs (bad) 
   14000a18b:	je     0x14000a1ee
   14000a18d:	add    BYTE PTR [rax],al
   14000a18f:	add    al,dh
   14000a191:	rol    BYTE PTR [rax],0x0
   14000a194:	cwde   
   14000a195:	(bad)  
   14000a196:	add    BYTE PTR [rax],al
   14000a198:	cs (bad) 
   14000a19b:	jae    0x14000a19d
   14000a19d:	add    BYTE PTR [rax],al
   14000a19f:	add    BYTE PTR [rax],al
   14000a1a1:	rol    BYTE PTR [rax],1
   14000a1a3:	add    BYTE PTR [rax+0x5],al
   14000a1a6:	add    BYTE PTR [rax],al
   14000a1a8:	cs jo  0x14000a20f
   14000a1ab:	(bad)  
   14000a1ac:	je     0x14000a20f
   14000a1ae:	add    BYTE PTR [rax],al
   14000a1b0:	add    al,ah
   14000a1b2:	add    BYTE PTR [rax],al
   14000a1b4:	lock add BYTE PTR [rax],al
   14000a1b7:	add    BYTE PTR [rsi],ch
   14000a1b9:	jb     0x14000a22e
   14000a1bb:	jb     0x14000a220
   14000a1bd:	and    al,0x30
   14000a1bf:	xor    DWORD PTR [rax],eax
   14000a1c1:	add    BYTE PTR [rax],al
   14000a1c3:	add    al,dh
   14000a1c5:	loopne 0x14000a1c7
   14000a1c7:	add    BYTE PTR [rax],bl
   14000a1c9:	or     BYTE PTR [rax],al
   14000a1cb:	add    BYTE PTR [rsi],ch
   14000a1cd:	jb     0x14000a242
   14000a1cf:	jb     0x14000a234
   14000a1d1:	and    al,0x30
   14000a1d3:	xor    al,BYTE PTR [rax]
   14000a1d5:	add    BYTE PTR [rax],al
   14000a1d7:	add    BYTE PTR [rcx],al
   14000a1d9:	add    al,0x1
   14000a1db:	add    BYTE PTR [rdx+rax*2],al
   14000a1de:	add    BYTE PTR [rax],al
   14000a1e0:	add    DWORD PTR [rsi],eax
   14000a1e2:	add    al,BYTE PTR [rax]
   14000a1e4:	(bad)  
   14000a1e5:	xor    al,BYTE PTR [rdx]
   14000a1e7:	jo     0x14000a1ea
   14000a1e9:	sbb    DWORD PTR [rdx],ecx
   14000a1eb:	add    BYTE PTR [rcx],bl
   14000a1ed:	adc    DWORD PTR fs:[rax],eax
   14000a1f0:	sbb    DWORD PTR [rax+rdx*1],esi
   14000a1f3:	add    BYTE PTR [rcx],bl
   14000a1f5:	jb     0x14000a209
   14000a1f7:	lock adc al,ah
   14000a1fa:	(bad)  
   14000a1fb:	ror    BYTE PTR [rax+rsi*2],0xb
   14000a1ff:	push   rax
   14000a200:	add    DWORD PTR [rdi],ecx
   14000a202:	(bad)  
   14000a203:	add    BYTE PTR [rdi],cl
   14000a205:	fs (bad) 
   14000a207:	add    BYTE PTR [rdi],cl
   14000a209:	xor    al,0x6
   14000a20b:	add    BYTE PTR [rdi],cl
   14000a20d:	xor    cl,BYTE PTR [rbx]
   14000a20f:	jo     0x14000a212
   14000a211:	adc    eax,0x74150008
   14000a216:	or     BYTE PTR [rax],al
   14000a218:	adc    eax,0x15000764
   14000a21d:	xor    al,0x6
   14000a21f:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e0b357
   14000a225:	sbb    BYTE PTR [rdx],cl
   14000a227:	add    BYTE PTR [rax],bl
   14000a229:	or     al,BYTE PTR fs:[rax]
   14000a22c:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   14000a230:	sbb    BYTE PTR [rax+rcx*1],dh
   14000a233:	add    BYTE PTR [rax],bl
   14000a235:	xor    dl,BYTE PTR [rax+rsi*8]
   14000a238:	adc    ah,al
   14000a23a:	adc    BYTE PTR [rax+0x1],dh
   14000a23d:	(bad)  
   14000a23e:	add    al,BYTE PTR [rax]
   14000a240:	(bad)  
   14000a241:	xor    al,BYTE PTR [rdx]
   14000a243:	xor    BYTE PTR [rcx],al
   14000a245:	clts   
   14000a247:	add    BYTE PTR [rdi],cl
   14000a249:	or     eax,DWORD PTR fs:[rax]
   14000a24c:	sysenter 
   14000a24e:	or     al,BYTE PTR [rax]
   14000a250:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000a253:	jo     0x14000a256
   14000a255:	sbb    al,0xc
   14000a257:	add    BYTE PTR [rsp+riz*2],bl
   14000a25a:	or     al,0x0
   14000a25c:	sbb    al,0x54
   14000a25e:	or     eax,DWORD PTR [rax]
   14000a260:	sbb    al,0x34
   14000a262:	or     al,BYTE PTR [rax]
   14000a264:	sbb    al,0x32
   14000a266:	sbb    al,dh
   14000a268:	(bad)  
   14000a269:	loopne 0x14000a27f
   14000a26b:	rcl    BYTE PTR [rdx],1
   14000a26d:	rcl    BYTE PTR [rax],0x70
   14000a270:	add    DWORD PTR [rsi],eax
   14000a272:	add    al,BYTE PTR [rax]
   14000a274:	(bad)  
   14000a275:	push   rdx
   14000a276:	add    dh,BYTE PTR [rax]
   14000a278:	add    DWORD PTR [rdx],ecx
   14000a27a:	add    al,0x0
   14000a27c:	or     dh,BYTE PTR [rsi+rax*1]
   14000a27f:	add    BYTE PTR [rdx],cl
   14000a281:	xor    al,BYTE PTR [rsi]
   14000a283:	jo     0x14000a286
   14000a285:	sbb    BYTE PTR [rdx],cl
   14000a287:	add    BYTE PTR [rax],bl
   14000a289:	or     eax,DWORD PTR fs:[rax]
   14000a28c:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14000a290:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000a293:	add    BYTE PTR [rax],bl
   14000a295:	xor    dl,BYTE PTR [rax+rsi*8]
   14000a298:	adc    ah,al
   14000a29a:	adc    BYTE PTR [rax+0x1],dh
   14000a29d:	sbb    eax,0x741d000c
   14000a2a2:	or     eax,DWORD PTR [rax]
   14000a2a4:	sbb    eax,0x1d000a64
   14000a2a9:	push   rsp
   14000a2aa:	or     DWORD PTR [rax],eax
   14000a2ac:	sbb    eax,0x1d000834
   14000a2b1:	xor    bl,BYTE PTR [rcx]
   14000a2b3:	lock (bad) 
   14000a2b5:	loopne 0x14000a2cc
   14000a2b7:	rol    BYTE PTR [rcx],0x12
   14000a2ba:	or     BYTE PTR [rax],al
   14000a2bc:	adc    dl,BYTE PTR [rbx+rcx*1+0x0]
   14000a2c0:	adc    dh,BYTE PTR [rcx+rcx*1]
   14000a2c3:	add    BYTE PTR [rdx],dl
   14000a2c5:	xor    cl,BYTE PTR [rsi]
   14000a2c7:	lock or al,0x70
   14000a2ca:	or     esp,DWORD PTR [rax+0x19]
   14000a2cd:	and    DWORD PTR [rax],ecx
   14000a2cf:	add    BYTE PTR [rbx],dl
   14000a2d1:	xor    al,0x17
   14000a2d3:	add    BYTE PTR [rbx],dl
   14000a2d5:	ror    BYTE PTR [rax+rsi*8],cl
   14000a2d8:	or     ah,al
   14000a2da:	or     BYTE PTR [rax+0x7],dh
   14000a2dd:	(bad)  
   14000a2de:	(bad)  
   14000a2df:	push   rax
   14000a2e0:	call   0x1a000a370
   14000a2e5:	add    BYTE PTR [rax],al
   14000a2e7:	add    BYTE PTR [rcx],al
   14000a2e9:	and    BYTE PTR [rax+rax*1],cl
   14000a2ec:	and    BYTE PTR [rcx+rdx*1+0x0],ah
   14000a2f0:	and    BYTE PTR [rax+rdx*1+0x0],dl
   14000a2f4:	and    BYTE PTR [rdi+rcx*1],dh
   14000a2f7:	add    BYTE PTR [rax],ah
   14000a2f9:	jb     0x14000a317
   14000a2fb:	lock sbb ah,al
   14000a2fe:	sbb    al,dl
   14000a300:	(bad)  
   14000a301:	rcl    BYTE PTR [rax+rsi*2],0x19
   14000a305:	xor    cl,BYTE PTR [rbx]
   14000a307:	add    BYTE PTR [rcx],ah
   14000a309:	fs pop rcx
   14000a30b:	add    BYTE PTR [rcx],ah
   14000a30d:	xor    al,0x57
   14000a30f:	add    BYTE PTR [rcx],ah
   14000a311:	add    DWORD PTR [rax+0x0],edx
   14000a314:	adc    dh,al
   14000a316:	adc    al,ah
   14000a318:	(bad)  
   14000a319:	ror    BYTE PTR [rax+rsi*2],0xb
   14000a31d:	push   rax
   14000a31e:	add    BYTE PTR [rax],al
   14000a320:	call   0x1b000a3b0
   14000a325:	add    al,BYTE PTR [rax]
   14000a327:	add    BYTE PTR [rcx],bl
   14000a329:	and    eax,0x3417000a
   14000a32e:	sbb    BYTE PTR [rax],al
   14000a330:	(bad)  
   14000a331:	rcl    BYTE PTR [rax],cl
   14000a333:	lock (bad) 
   14000a335:	loopne 0x14000a343
   14000a337:	ror    BYTE PTR [rdx],1
   14000a339:	ror    BYTE PTR [rax],0x70
   14000a33c:	(bad)  
   14000a33d:	(bad)  
   14000a33e:	(bad)  
   14000a33f:	push   rax
   14000a340:	call   0x1a800a3d0
   14000a345:	add    BYTE PTR [rax],al
   14000a347:	add    BYTE PTR [rcx],al
   14000a349:	adc    eax,0x64150008
   14000a34e:	or     eax,DWORD PTR [rax]
   14000a350:	adc    eax,0x15000a34
   14000a355:	push   rdx
   14000a356:	(bad)  
   14000a357:	loopne 0x14000a365
   14000a359:	jo     0x14000a366
   14000a35b:	push   rax
   14000a35c:	sbb    DWORD PTR [rdx],ebp
   14000a35e:	or     eax,DWORD PTR [rax]
   14000a360:	sbb    al,0x34
   14000a362:	sbb    al,BYTE PTR [rax]
   14000a364:	sbb    al,0x1
   14000a366:	adc    al,BYTE PTR [rax]
   14000a368:	adc    al,dh
   14000a36a:	(bad)  
   14000a36b:	loopne 0x14000a379
   14000a36d:	ror    BYTE PTR [rdx],1
   14000a36f:	ror    BYTE PTR [rax],0x70
   14000a372:	(bad)  
   14000a373:	(bad)  
   14000a374:	(bad)  
   14000a375:	push   rax
   14000a376:	add    BYTE PTR [rax],al
   14000a378:	call   0xc800a408
   14000a37d:	add    BYTE PTR [rax],al
   14000a37f:	add    BYTE PTR [rcx],al
   14000a381:	adc    al,0x8
   14000a383:	add    BYTE PTR [rsp+riz*2],dl
   14000a386:	or     BYTE PTR [rax],al
   14000a388:	adc    al,0x54
   14000a38a:	(bad)  
   14000a38b:	add    BYTE PTR [rsp+rsi*1],dl
   14000a38e:	(bad)  
   14000a38f:	add    BYTE PTR [rdx+rsi*1],dl
   14000a392:	adc    BYTE PTR [rax+0x1],dh
   14000a395:	adc    al,0xa
   14000a397:	add    BYTE PTR [rsp+rsi*1],dl
   14000a39a:	lldt   WORD PTR [rdx+rdx*2]
   14000a39e:	adc    al,dh
   14000a3a0:	(bad)  
   14000a3a1:	loopne 0x14000a3af
   14000a3a3:	ror    BYTE PTR [rdx],1
   14000a3a5:	ror    BYTE PTR [rax],0x70
   14000a3a8:	(bad)  
   14000a3a9:	(bad)  
   14000a3aa:	(bad)  
   14000a3ab:	push   rax
   14000a3ac:	sbb    DWORD PTR [rsi],ebp
   14000a3ae:	or     DWORD PTR [rax],eax
   14000a3b0:	sbb    eax,0x1d006064
   14000a3b5:	xor    al,0x5f
   14000a3b7:	add    BYTE PTR [rip+0xe005a01],bl        # 0x14e00fdbe
   14000a3bd:	loopne 0x14000a3cb
   14000a3bf:	jo     0x14000a3cc
   14000a3c1:	push   rax
   14000a3c2:	add    BYTE PTR [rax],al
   14000a3c4:	call   0x10000a454
   14000a3c9:	add    al,BYTE PTR [rax]
   14000a3cb:	add    BYTE PTR [rcx],bl
   14000a3cd:	xor    ecx,DWORD PTR [rbx]
   14000a3cf:	add    BYTE PTR [rdx],ah
   14000a3d1:	je     0x14000a430
   14000a3d3:	add    BYTE PTR [rdx],ah
   14000a3d5:	fs pop rsp
   14000a3d7:	add    BYTE PTR [rdx],ah
   14000a3d9:	xor    al,0x5a
   14000a3db:	add    BYTE PTR [rdx],ah
   14000a3dd:	add    DWORD PTR [rsi+0x0],edx
   14000a3e0:	adc    al,0xf0
   14000a3e2:	adc    ah,al
   14000a3e4:	adc    BYTE PTR [rax+0x0],dl
   14000a3e7:	add    al,ch
   14000a3e9:	mov    eax,DWORD PTR [rax]
   14000a3eb:	add    BYTE PTR [rax+0x1000002],ah
   14000a3f1:	(bad)  
   14000a3f2:	or     eax,DWORD PTR [rax]
   14000a3f4:	(bad)  
   14000a3f5:	fs (bad) 
   14000a3f7:	add    BYTE PTR [rsi],bl
   14000a3f9:	xor    al,0x1e
   14000a3fb:	add    BYTE PTR [rsi],bl
   14000a3fd:	add    DWORD PTR [rax],ebx
   14000a3ff:	add    BYTE PTR [rdx],dl
   14000a401:	lock adc al,ah
   14000a404:	(bad)  
   14000a405:	ror    BYTE PTR [rax+rsi*2],1
   14000a408:	or     edx,DWORD PTR [rax+0x0]
   14000a40b:	add    BYTE PTR [rcx],bl
   14000a40d:	(bad)  
   14000a40e:	or     eax,0x57742600
   14000a413:	add    BYTE PTR [rsi],ah
   14000a415:	fs push rsi
   14000a417:	add    BYTE PTR [rsi],ah
   14000a419:	xor    al,0x54
   14000a41b:	add    BYTE PTR [rsi],ah
   14000a41d:	add    DWORD PTR [rsi+0x0],ecx
   14000a420:	sbb    al,dh
   14000a422:	(bad)  
   14000a423:	loopne 0x14000a439
   14000a425:	rcl    BYTE PTR [rdx],1
   14000a427:	rcl    BYTE PTR [rax],0x50
   14000a42a:	add    BYTE PTR [rax],al
   14000a42c:	call   0x1a000a4bc
   14000a431:	add    al,BYTE PTR [rax]
   14000a433:	add    BYTE PTR [rcx],al
   14000a435:	or     DWORD PTR [rbx],eax
   14000a437:	add    BYTE PTR [rcx],cl
   14000a439:	add    DWORD PTR [rdx],edx
   14000a43b:	add    BYTE PTR [rdx],al
   14000a43d:	xor    BYTE PTR [rax],al
   14000a43f:	add    BYTE PTR [rcx],al
   14000a441:	clts   
   14000a443:	add    BYTE PTR [rdi],cl
   14000a445:	or     BYTE PTR fs:[rax],al
   14000a448:	sysenter 
   14000a44a:	(bad)  
   14000a44b:	add    BYTE PTR [rdi],cl
   14000a44d:	xor    cl,BYTE PTR [rbx]
   14000a44f:	jo     0x14000a452
   14000a451:	(bad)  
   14000a452:	or     al,BYTE PTR [rax]
   14000a454:	(bad)  
   14000a455:	push   rsp
   14000a456:	(bad)  
   14000a457:	add    BYTE PTR [rsi],dl
   14000a459:	xor    al,0xd
   14000a45b:	add    BYTE PTR [rsi],dl
   14000a45d:	push   rdx
   14000a45e:	adc    dh,al
   14000a460:	adc    al,ah
   14000a462:	(bad)  
   14000a463:	ror    BYTE PTR [rax+rsi*2],1
   14000a466:	or     esp,DWORD PTR [rax+0x1]
   14000a469:	sbb    al,0xc
   14000a46b:	add    BYTE PTR [rsp+riz*2],bl
   14000a46e:	or     eax,0xc541c00
   14000a473:	add    BYTE PTR [rsp+rsi*1],bl
   14000a476:	or     eax,DWORD PTR [rax]
   14000a478:	sbb    al,0x32
   14000a47a:	sbb    al,dh
   14000a47c:	(bad)  
   14000a47d:	loopne 0x14000a493
   14000a47f:	rcl    BYTE PTR [rdx],1
   14000a481:	rcl    BYTE PTR [rax],0x70
   14000a484:	add    DWORD PTR [rdx],edx
   14000a486:	or     BYTE PTR [rax],al
   14000a488:	adc    dl,BYTE PTR [rdx+rcx*1+0x0]
   14000a48c:	adc    dh,BYTE PTR [rcx+rcx*1]
   14000a48f:	add    BYTE PTR [rdx],dl
   14000a491:	xor    cl,BYTE PTR [rsi]
   14000a493:	loopne 0x14000a4a1
   14000a495:	jo     0x14000a4a2
   14000a497:	(bad)  
   14000a498:	add    DWORD PTR [rbx],edx
   14000a49a:	or     DWORD PTR [rax],eax
   14000a49c:	adc    esp,DWORD PTR [rdx+0xf]
   14000a49f:	lock or eax,0x9d00be0
   14000a4a5:	rol    BYTE PTR [rdi],0x70
   14000a4a8:	(bad)  
   14000a4a9:	(bad)  
   14000a4aa:	add    eax,0x300450
   14000a4af:	add    BYTE PTR [rcx],al
   14000a4b1:	(bad)  
   14000a4b2:	or     BYTE PTR [rax],al
   14000a4b4:	(bad)  
   14000a4b5:	je     0x14000a4c1
   14000a4b7:	add    BYTE PTR [rdi],dl
   14000a4b9:	or     DWORD PTR fs:[rax],eax
   14000a4bc:	(bad)  
   14000a4bd:	xor    al,0x8
   14000a4bf:	add    BYTE PTR [rdi],dl
   14000a4c1:	push   rdx
   14000a4c2:	adc    BYTE PTR [rax+0x1],dl
   14000a4c5:	(bad)  
   14000a4c6:	or     al,BYTE PTR [rax]
   14000a4c8:	(bad)  
   14000a4c9:	xor    al,0x12
   14000a4cb:	add    BYTE PTR [rdi],dl
   14000a4cd:	xchg   edx,eax
   14000a4ce:	adc    al,dh
   14000a4d0:	(bad)  
   14000a4d1:	loopne 0x14000a4df
   14000a4d3:	ror    BYTE PTR [rdx],1
   14000a4d5:	ror    BYTE PTR [rax],0x70
   14000a4d8:	(bad)  
   14000a4d9:	(bad)  
   14000a4da:	(bad)  
   14000a4db:	push   rax
   14000a4dc:	add    DWORD PTR [rip+0x64150008],edx        # 0x1a415a4ea
   14000a4e2:	or     eax,0xc341500
   14000a4e7:	add    BYTE PTR [rip+0xcc00e52],dl        # 0x14cc0b33f
   14000a4ed:	jo     0x14000a4fa
   14000a4ef:	push   rax
   14000a4f0:	add    DWORD PTR [rbx],edx
   14000a4f2:	or     BYTE PTR [rax],al
   14000a4f4:	adc    esi,DWORD PTR [rsi+rcx*1]
   14000a4f7:	add    BYTE PTR [rbx],dl
   14000a4f9:	jb     0x14000a507
   14000a4fb:	lock or ah,al
   14000a4fe:	or     BYTE PTR [rax+0x7],dh
   14000a501:	(bad)  
   14000a502:	(bad)  
   14000a503:	push   rax
   14000a504:	add    DWORD PTR [rbx],esp
   14000a506:	or     eax,0x1e742300
   14000a50b:	add    BYTE PTR [rbx],ah
   14000a50d:	fs sbb eax,0x1c342300
   14000a513:	add    BYTE PTR [rbx],ah
   14000a515:	add    DWORD PTR [rsi],edx
   14000a517:	add    BYTE PTR [rax],bl
   14000a519:	lock (bad) 
   14000a51b:	loopne 0x14000a531
   14000a51d:	rcl    BYTE PTR [rdx],1
   14000a51f:	rcl    BYTE PTR [rax],0x50
   14000a522:	add    BYTE PTR [rax],al
   14000a524:	add    DWORD PTR [rdx+rcx*1],ebx
   14000a527:	add    BYTE PTR [rsp+rsi*1],bl
   14000a52a:	adc    al,BYTE PTR [rax]
   14000a52c:	sbb    al,0x72
   14000a52e:	adc    eax,0x11e013f0
   14000a533:	ror    BYTE PTR [rdi],1
   14000a535:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b60b1ac
   14000a53c:	add    DWORD PTR [rbx],edx
   14000a53e:	or     BYTE PTR [rax],al
   14000a540:	adc    esp,DWORD PTR [rdx+rcx*1+0x0]
   14000a544:	adc    esi,DWORD PTR [rcx+rcx*1]
   14000a547:	add    BYTE PTR [rbx],dl
   14000a549:	xor    cl,BYTE PTR [rdi]
   14000a54b:	lock or eax,0x1700be0
   14000a551:	sbb    BYTE PTR [rax],cl
   14000a553:	add    BYTE PTR [rax],bl
   14000a555:	or     eax,DWORD PTR fs:[rax]
   14000a558:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14000a55c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000a55f:	add    BYTE PTR [rax],bl
   14000a561:	push   rdx
   14000a562:	adc    al,0x70
   14000a564:	add    DWORD PTR [rbx],edx
   14000a566:	or     BYTE PTR [rax],al
   14000a568:	adc    edx,DWORD PTR [rbx+rcx*1+0x0]
   14000a56c:	adc    esi,DWORD PTR [rdx+rcx*1]
   14000a56f:	add    BYTE PTR [rbx],dl
   14000a571:	push   rdx
   14000a572:	pavgb  mm1,QWORD PTR [rip+0x1600c70]        # 0x14160b1e9
   14000a579:	(bad)  
   14000a57a:	or     al,BYTE PTR [rax]
   14000a57c:	(bad)  
   14000a57d:	push   rsp
   14000a57e:	or     al,0x0
   14000a580:	(bad)  
   14000a581:	xor    al,0xb
   14000a583:	add    BYTE PTR [rsi],dl
   14000a585:	xor    dl,BYTE PTR [rdx]
   14000a587:	lock adc al,ah
   14000a58a:	(bad)  
   14000a58b:	ror    BYTE PTR [rax+rsi*2],0xb
   14000a58f:	(bad)  
   14000a590:	add    DWORD PTR [rip+0x321d0008],ebx        # 0x1721da59e
   14000a596:	sbb    eax,esi
   14000a598:	(bad)  
   14000a599:	loopne 0x14000a5b0
   14000a59b:	rcl    BYTE PTR [rbx],1
   14000a59d:	jo     0x14000a5b1
   14000a59f:	(bad)  
   14000a5a0:	adc    DWORD PTR [rax+0x10],edx
   14000a5a3:	xor    BYTE PTR [rcx],al
   14000a5a5:	adc    DWORD PTR [rax+rax*1],eax
   14000a5a8:	adc    edx,edx
   14000a5aa:	or     dh,BYTE PTR [rax+0x9]
   14000a5ad:	xor    BYTE PTR [rax],cl
   14000a5af:	push   rax
   14000a5b0:	add    DWORD PTR [rdi],edx
   14000a5b2:	or     BYTE PTR [rax],al
   14000a5b4:	(bad)  
   14000a5b5:	push   rsp
   14000a5b6:	or     al,0x0
   14000a5b8:	(bad)  
   14000a5b9:	xor    al,0xb
   14000a5bb:	add    BYTE PTR [rdi],dl
   14000a5bd:	push   rdx
   14000a5be:	adc    esp,eax
   14000a5c0:	adc    DWORD PTR [rax+0x10],esi
   14000a5c3:	(bad)  
   14000a5c4:	add    DWORD PTR [rdx+rcx*1],ebx
   14000a5c7:	add    BYTE PTR [rsp+riz*2],bl
   14000a5ca:	or     eax,0xc541c00
   14000a5cf:	add    BYTE PTR [rsp+rsi*1],bl
   14000a5d2:	or     eax,DWORD PTR [rax]
   14000a5d4:	sbb    al,0x52
   14000a5d6:	sbb    al,dh
   14000a5d8:	(bad)  
   14000a5d9:	loopne 0x14000a5ef
   14000a5db:	jo     0x14000a5f6
   14000a5dd:	or     DWORD PTR cs:[rax],eax
   14000a5e0:	sbb    eax,0x1d005064
   14000a5e5:	xor    al,0x4f
   14000a5e7:	add    BYTE PTR [rip+0xe004a01],bl        # 0x14e00efee
   14000a5ed:	loopne 0x14000a5fb
   14000a5ef:	jo     0x14000a5fc
   14000a5f1:	push   rax
   14000a5f2:	add    BYTE PTR [rax],al
   14000a5f4:	call   0x18000a684
   14000a5f9:	add    al,BYTE PTR [rax]
   14000a5fb:	add    BYTE PTR [rcx],al
   14000a5fd:	or     al,BYTE PTR [rax+rax*1]
   14000a600:	or     dh,BYTE PTR [rsp+rcx*1]
   14000a603:	add    BYTE PTR [rdx],cl
   14000a605:	xchg   edx,eax
   14000a606:	(bad)  
   14000a607:	jo     0x14000a622
   14000a609:	sub    BYTE PTR [rdi],al
   14000a60b:	add    BYTE PTR [rdi],dl
   14000a60d:	xor    al,0x5a
   14000a60f:	add    BYTE PTR [rdi],dl
   14000a611:	add    DWORD PTR [rax+rax*1+0x8],edx
   14000a615:	jo     0x14000a61e
   14000a617:	(bad)  
   14000a618:	(bad)  
   14000a619:	push   rax
   14000a61a:	add    BYTE PTR [rax],al
   14000a61c:	call   0xd000a6ac
   14000a621:	add    al,BYTE PTR [rax]
   14000a623:	add    BYTE PTR [rcx],al
   14000a625:	adc    eax,DWORD PTR [rsi]
   14000a627:	add    BYTE PTR [rbx],dl
   14000a629:	or     BYTE PTR fs:[rax],al
   14000a62c:	adc    esi,DWORD PTR [rsi+rax*1]
   14000a62f:	add    BYTE PTR [rbx],dl
   14000a631:	xor    cl,BYTE PTR [rdi]
   14000a633:	jo     0x14000a636
   14000a635:	sbb    al,0xa
   14000a637:	add    BYTE PTR [rsp+riz*2],bl
   14000a63a:	or     eax,DWORD PTR [rax]
   14000a63c:	sbb    al,0x54
   14000a63e:	or     DWORD PTR [rax],eax
   14000a640:	sbb    al,0x34
   14000a642:	or     BYTE PTR [rax],al
   14000a644:	sbb    al,0x32
   14000a646:	sbb    al,dh
   14000a648:	(bad)  
   14000a649:	loopne 0x14000a65f
   14000a64b:	jo     0x14000a666
   14000a64d:	sub    DWORD PTR [rbx],ecx
   14000a64f:	add    BYTE PTR [rdi],dl
   14000a651:	xor    al,0x55
   14000a653:	add    BYTE PTR [rdi],dl
   14000a655:	add    DWORD PTR [rdx+0x0],ecx
   14000a658:	adc    al,dh
   14000a65a:	(bad)  
   14000a65b:	loopne 0x14000a669
   14000a65d:	ror    BYTE PTR [rdx],1
   14000a65f:	ror    BYTE PTR [rax],0x70
   14000a662:	(bad)  
   14000a663:	(bad)  
   14000a664:	(bad)  
   14000a665:	push   rax
   14000a666:	add    BYTE PTR [rax],al
   14000a668:	call   0x18000a6f8
   14000a66d:	add    al,BYTE PTR [rax]
   14000a66f:	add    BYTE PTR [rcx],al
   14000a671:	adc    al,0x2
   14000a673:	add    BYTE PTR [rdx+rsi*1],dl
   14000a676:	adc    BYTE PTR [rax],dh
   14000a678:	add    DWORD PTR [rcx],ebx
   14000a67a:	or     al,BYTE PTR [rax]
   14000a67c:	sbb    DWORD PTR [rsi+rcx*1],esi
   14000a67f:	add    BYTE PTR [rcx],bl
   14000a681:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e0ba77
   14000a687:	ror    BYTE PTR [rdi],1
   14000a689:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b60b300
   14000a690:	add    DWORD PTR [rbx],edx
   14000a692:	add    al,BYTE PTR [rax]
   14000a694:	adc    esi,DWORD PTR [rdx]
   14000a696:	wrmsr  
   14000a698:	add    DWORD PTR [rdx],edx
   14000a69a:	add    eax,0xe421200
   14000a69f:	jo     0x14000a6ae
   14000a6a1:	(bad)  
   14000a6a2:	or     al,0x50
   14000a6a4:	or     esi,DWORD PTR [rax]
   14000a6a6:	add    BYTE PTR [rax],al
   14000a6a8:	add    DWORD PTR [rcx],edx
   14000a6aa:	(bad)  
   14000a6ab:	add    BYTE PTR [rcx],dl
   14000a6ad:	xor    al,0x9
   14000a6af:	add    BYTE PTR [rcx],dl
   14000a6b1:	xor    cl,BYTE PTR [rip+0xb600c70]        # 0x14b60b327
   14000a6b7:	push   rax
   14000a6b8:	sbb    DWORD PTR [rsi],ebx
   14000a6ba:	(bad)  
   14000a6bb:	add    BYTE PTR [rdi],cl
   14000a6bd:	fs or  al,0x0
   14000a6c0:	sysenter 
   14000a6c2:	or     eax,DWORD PTR [rax]
   14000a6c4:	(bad)  
   14000a6c6:	or     esi,DWORD PTR [rax-0x18]
   14000a6c9:	mov    eax,DWORD PTR [rax]
   14000a6cb:	add    BYTE PTR [rax],dh
   14000a6cd:	add    BYTE PTR [rax],al
   14000a6cf:	add    BYTE PTR [rcx],al
   14000a6d1:	sbb    al,0x8
   14000a6d3:	add    BYTE PTR [rsp+rdx*2],bl
   14000a6d6:	or     eax,DWORD PTR [rax]
   14000a6d8:	sbb    al,0x34
   14000a6da:	or     al,BYTE PTR [rax]
   14000a6dc:	sbb    al,0x52
   14000a6de:	sbb    al,ah
   14000a6e0:	(bad)  
   14000a6e1:	jo     0x14000a6f8
   14000a6e3:	(bad)  
   14000a6e4:	add    DWORD PTR [rcx+rax*1],eax
   14000a6e7:	add    BYTE PTR [rdx+riz*2],al
   14000a6ea:	add    BYTE PTR [rax],al
   14000a6ec:	or     DWORD PTR [rax],ebx
   14000a6ee:	or     DWORD PTR [rax],eax
   14000a6f0:	sbb    BYTE PTR [rdx+rbx*1+0x0],dh
   14000a6f4:	sbb    BYTE PTR [rcx+rbx*1+0x0],ah
   14000a6f8:	sbb    BYTE PTR [rax+rbx*1],dh
   14000a6fb:	add    BYTE PTR [rax],bl
   14000a6fd:	add    DWORD PTR [rsi],edx
   14000a6ff:	add    BYTE PTR [rcx],dl
   14000a701:	lock add BYTE PTR [rax],al
   14000a704:	(bad)  
   14000a705:	mov    DWORD PTR [rax],eax
   14000a707:	add    BYTE PTR [rcx],al
   14000a709:	add    BYTE PTR [rax],al
   14000a70b:	add    BYTE PTR [rax-0x68ffff7d],dh
   14000a711:	test   DWORD PTR [rax],eax
   14000a713:	add    dh,al
   14000a715:	mov    WORD PTR [rax],es
   14000a717:	add    BYTE PTR [rdi+0x85],dl
   14000a71d:	add    BYTE PTR [rax],al
   14000a71f:	add    BYTE PTR [rcx],al
   14000a721:	add    BYTE PTR [rax],al
   14000a723:	add    BYTE PTR [rcx],dl
   14000a725:	or     al,BYTE PTR [rax+rax*1]
   14000a728:	or     dh,BYTE PTR [rsi+rax*1]
   14000a72b:	add    BYTE PTR [rdx],cl
   14000a72d:	xor    al,BYTE PTR [rsi]
   14000a72f:	jo     0x14000a707
   14000a731:	mov    DWORD PTR [rax],eax
   14000a733:	add    BYTE PTR [rcx],al
   14000a735:	add    BYTE PTR [rax],al
   14000a737:	add    BYTE PTR [rbp-0x7a],dl
   14000a73a:	add    BYTE PTR [rax],al
   14000a73c:	(bad)  
   14000a73d:	xchg   BYTE PTR [rax],al
   14000a73f:	add    dl,ch
   14000a741:	mov    WORD PTR [rax],es
   14000a743:	add    BYTE PTR [rax],al
   14000a745:	add    BYTE PTR [rax],al
   14000a747:	add    BYTE PTR [rcx],cl
   14000a749:	add    al,0x1
   14000a74b:	add    BYTE PTR [rdx+riz*1],al
   14000a74e:	add    BYTE PTR [rax],al
   14000a750:	(bad)  
   14000a751:	mov    DWORD PTR [rax],eax
   14000a753:	add    BYTE PTR [rcx],al
   14000a755:	add    BYTE PTR [rax],al
   14000a757:	add    BYTE PTR [rdi+rax*4+0x0],bl
   14000a75b:	add    BYTE PTR [rdx+0x1000087],dl
   14000a761:	add    BYTE PTR [rax],al
   14000a763:	add    BYTE PTR [rdx+0x9000087],dl
   14000a769:	or     al,BYTE PTR [rax+rax*1]
   14000a76c:	or     dh,BYTE PTR [rsi+rax*1]
   14000a76f:	add    BYTE PTR [rdx],cl
   14000a771:	xor    al,BYTE PTR [rsi]
   14000a773:	jo     0x14000a74b
   14000a775:	mov    DWORD PTR [rax],eax
   14000a777:	add    BYTE PTR [rcx],al
   14000a779:	add    BYTE PTR [rax],al
   14000a77b:	add    BYTE PTR [rbp-0x78],bl
   14000a77e:	add    BYTE PTR [rax],al
   14000a780:	nop
   14000a781:	mov    BYTE PTR [rax],al
   14000a783:	add    BYTE PTR [rax],dl
   14000a785:	lea    eax,[rax]
   14000a787:	add    BYTE PTR [rax+0x1000088],dl
   14000a78d:	(bad)  
   14000a78e:	add    al,BYTE PTR [rax]
   14000a790:	(bad)  
   14000a791:	xor    al,BYTE PTR [rdx]
   14000a793:	push   rax
   14000a794:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740da79e
   14000a79a:	or     DWORD PTR [rax],eax
   14000a79c:	or     eax,0x1500632
   14000a7a1:	or     al,0x2
   14000a7a3:	add    BYTE PTR [rcx+rax*1],cl
   14000a7a6:	adc    DWORD PTR [rax],eax
   14000a7a8:	add    DWORD PTR [rax],eax
   14000a7aa:	add    BYTE PTR [rax],al
   14000a7ac:	sbb    BYTE PTR [rcx+0x0],ch
   14000a7b2:	add    BYTE PTR [rax],al
   14000a7b4:	add    BYTE PTR [rax],al
   14000a7b6:	add    BYTE PTR [rax],al
   14000a7b8:	cwde   
   14000a7b9:	lods   eax,DWORD PTR ds:[rsi]
   14000a7ba:	add    BYTE PTR [rax],al
   14000a7bc:	add    BYTE PTR [rax-0x56a00000],dl
	...
   14000a7ca:	add    BYTE PTR [rax],al
   14000a7cc:	imul   BYTE PTR [rdi-0x6fb80000]
   14000a7d2:	add    BYTE PTR [rax],al
   14000a7d4:	adc    BYTE PTR [rax+rax*1+0x0],ch
   14000a7db:	add    BYTE PTR [rax],al
   14000a7dd:	add    BYTE PTR [rax],al
   14000a7df:	add    BYTE PTR [rdx],dh
   14000a7e1:	mov    cl,0x0
   14000a7e3:	add    al,bh
   14000a7e5:	xchg   edx,eax
   14000a7e6:	add    BYTE PTR [rax],al
   14000a7e8:	mov    al,0xaa
	...
   14000a7f2:	add    BYTE PTR [rax],al
   14000a7f4:	rex.RX mov spl,0x0
   14000a7f7:	add    BYTE PTR [rax-0x1fffff6f],bl
   14000a7fd:	stos   DWORD PTR es:[rdi],eax
	...
   14000a806:	add    BYTE PTR [rax],al
   14000a808:	data16 mov ah,0x0
   14000a80b:	add    al,cl
   14000a80d:	xchg   edx,eax
   14000a80e:	add    BYTE PTR [rax],al
   14000a810:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000a817:	add    BYTE PTR [rax],al
   14000a819:	add    BYTE PTR [rax],al
   14000a81b:	add    BYTE PTR [rax-0x17ffff4c],cl
   14000a821:	xchg   edx,eax
   14000a822:	add    BYTE PTR [rax],al
   14000a824:	js     0x14000a7d0
	...
   14000a82e:	add    BYTE PTR [rax],al
   14000a830:	mov    al,0xb4
   14000a832:	add    BYTE PTR [rax],al
   14000a834:	(bad)  
   14000a835:	xchg   ecx,eax
   14000a836:	add    BYTE PTR [rax],al
   14000a838:	pop    rax
   14000a839:	stos   BYTE PTR es:[rdi],al
	...
   14000a842:	add    BYTE PTR [rax],al
   14000a844:	mov    esp,0x400000b4
   14000a849:	xchg   ecx,eax
   14000a84a:	add    BYTE PTR [rax],al
   14000a84c:	mov    eax,0xab
   14000a851:	add    BYTE PTR [rax],al
   14000a853:	add    BYTE PTR [rax],al
   14000a855:	add    BYTE PTR [rax],al
   14000a857:	add    dl,cl
   14000a859:	mov    ah,0x0
   14000a85b:	add    BYTE PTR [rax+0x60000092],ah
   14000a861:	stos   DWORD PTR es:[rdi],eax
	...
   14000a86a:	add    BYTE PTR [rax],al
   14000a86c:	in     al,dx
   14000a86d:	mov    ah,0x0
   14000a86f:	add    BYTE PTR [rax-0x6e],cl
   14000a872:	add    BYTE PTR [rax],al
   14000a874:	and    BYTE PTR [rbx+0x0],ch
   14000a87a:	add    BYTE PTR [rax],al
   14000a87c:	add    BYTE PTR [rax],al
   14000a87e:	add    BYTE PTR [rax],al
   14000a880:	(bad)  
   14000a881:	mov    ch,0x0
   14000a883:	add    BYTE PTR [rax],cl
   14000a885:	xchg   edx,eax
   14000a886:	add    BYTE PTR [rax],al
   14000a888:	cmp    BYTE PTR [rbx+0x0],ch
   14000a88e:	add    BYTE PTR [rax],al
   14000a890:	add    BYTE PTR [rax],al
   14000a892:	add    BYTE PTR [rax],al
   14000a894:	mov    bpl,0x0
   14000a897:	add    BYTE PTR [rax],ah
   14000a899:	xchg   edx,eax
   14000a89a:	add    BYTE PTR [rax],al
   14000a89c:	mov    BYTE PTR [rbx+0x0],ch
   14000a8a2:	add    BYTE PTR [rax],al
   14000a8a4:	add    BYTE PTR [rax],al
   14000a8a6:	add    BYTE PTR [rax],al
   14000a8a8:	push   0xffffffffffffffb5
   14000a8aa:	add    BYTE PTR [rax],al
   14000a8ac:	jo     0x14000a840
   14000a8ae:	add    BYTE PTR [rax],al
   14000a8b0:	enter  0xab,0x0
	...
   14000a8bc:	mov    ?,WORD PTR [rbp-0x6d500000]
   14000a8c2:	add    BYTE PTR [rax],al
   14000a8c4:	cwde   
   14000a8c5:	stos   DWORD PTR es:[rdi],eax
	...
   14000a8ce:	add    BYTE PTR [rax],al
   14000a8d0:	mov    dl,0xb5
   14000a8d2:	add    BYTE PTR [rax],al
   14000a8d4:	adc    BYTE PTR [rdx-0x53000000],0x0
	...
   14000a8e3:	add    dl,dh
   14000a8e5:	mov    ch,0x0
   14000a8e7:	add    al,ch
   14000a8e9:	xchg   ebx,eax
   14000a8ea:	add    BYTE PTR [rax],al
   14000a8ec:	nop
   14000a8ed:	stos   BYTE PTR es:[rdi],al
	...
   14000a8f6:	add    BYTE PTR [rax],al
   14000a8f8:	cmp    al,0xb6
   14000a8fa:	add    BYTE PTR [rax],al
   14000a8fc:	js     0x14000a88f
	...
   14000a916:	add    BYTE PTR [rax],al
   14000a918:	adc    BYTE PTR [rbp+0x0],ch
   14000a91e:	add    BYTE PTR [rax],al
   14000a920:	(bad)  
   14000a921:	lods   eax,DWORD PTR ds:[rsi]
   14000a922:	add    BYTE PTR [rax],al
   14000a924:	add    BYTE PTR [rax],al
   14000a926:	add    BYTE PTR [rax],al
   14000a928:	xor    ch,BYTE PTR [rbp+0x0]
   14000a92e:	add    BYTE PTR [rax],al
   14000a930:	rex.RX lods eax,DWORD PTR ds:[rsi]
   14000a932:	add    BYTE PTR [rax],al
   14000a934:	add    BYTE PTR [rax],al
   14000a936:	add    BYTE PTR [rax],al
   14000a938:	push   rsp
   14000a939:	lods   eax,DWORD PTR ds:[rsi]
   14000a93a:	add    BYTE PTR [rax],al
   14000a93c:	add    BYTE PTR [rax],al
   14000a93e:	add    BYTE PTR [rax],al
   14000a940:	lods   ax,WORD PTR ds:[rsi]
   14000a942:	add    BYTE PTR [rax],al
   14000a944:	add    BYTE PTR [rax],al
   14000a946:	add    BYTE PTR [rax],al
   14000a948:	js     0x14000a8f7
   14000a94a:	add    BYTE PTR [rax],al
   14000a94c:	add    BYTE PTR [rax],al
   14000a94e:	add    BYTE PTR [rax],al
   14000a950:	mov    BYTE PTR [rbp+0x0],ch
	...
   14000a95e:	add    BYTE PTR [rax],al
   14000a960:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a961:	lods   eax,DWORD PTR ds:[rsi]
   14000a962:	add    BYTE PTR [rax],al
   14000a964:	add    BYTE PTR [rax],al
   14000a966:	add    BYTE PTR [rax],al
   14000a968:	mov    dl,0xad
   14000a96a:	add    BYTE PTR [rax],al
   14000a96c:	add    BYTE PTR [rax],al
   14000a96e:	add    BYTE PTR [rax],al
   14000a970:	mov    esi,0xad
   14000a975:	add    BYTE PTR [rax],al
   14000a977:	add    ah,dl
   14000a979:	lods   eax,DWORD PTR ds:[rsi]
   14000a97a:	add    BYTE PTR [rax],al
   14000a97c:	add    BYTE PTR [rax],al
   14000a97e:	add    BYTE PTR [rax],al
   14000a980:	out    0xad,al
   14000a982:	add    BYTE PTR [rax],al
   14000a984:	add    BYTE PTR [rax],al
   14000a986:	add    BYTE PTR [rax],al
   14000a988:	clc    
   14000a989:	lods   eax,DWORD PTR ds:[rsi]
   14000a98a:	add    BYTE PTR [rax],al
   14000a98c:	add    BYTE PTR [rax],al
   14000a98e:	add    BYTE PTR [rax],al
   14000a990:	adc    BYTE PTR [rsi+0x0],ch
   14000a996:	add    BYTE PTR [rax],al
   14000a998:	sub    BYTE PTR [rsi+0x0],ch
   14000a99e:	add    BYTE PTR [rax],al
   14000a9a0:	xor    al,0xae
   14000a9a2:	add    BYTE PTR [rax],al
   14000a9a4:	add    BYTE PTR [rax],al
   14000a9a6:	add    BYTE PTR [rax],al
   14000a9a8:	pop    rsp
   14000a9a9:	scas   al,BYTE PTR es:[rdi]
   14000a9aa:	add    BYTE PTR [rax],al
   14000a9ac:	add    BYTE PTR [rax],al
   14000a9ae:	add    BYTE PTR [rax],al
   14000a9b0:	ins    BYTE PTR es:[rdi],dx
   14000a9b1:	scas   al,BYTE PTR es:[rdi]
   14000a9b2:	add    BYTE PTR [rax],al
   14000a9b4:	add    BYTE PTR [rax],al
   14000a9b6:	add    BYTE PTR [rax],al
   14000a9b8:	mov    ch,BYTE PTR [rsi+0x0]
   14000a9be:	add    BYTE PTR [rax],al
   14000a9c0:	movabs ds:0xb8000000000000ae,al
   14000a9c9:	scas   al,BYTE PTR es:[rdi]
   14000a9ca:	add    BYTE PTR [rax],al
   14000a9cc:	add    BYTE PTR [rax],al
   14000a9ce:	add    BYTE PTR [rax],al
   14000a9d0:	retf   0xae
   14000a9d3:	add    BYTE PTR [rax],al
   14000a9d5:	add    BYTE PTR [rax],al
   14000a9d7:	add    dl,bl
   14000a9d9:	scas   al,BYTE PTR es:[rdi]
   14000a9da:	add    BYTE PTR [rax],al
   14000a9dc:	add    BYTE PTR [rax],al
   14000a9de:	add    BYTE PTR [rax],al
   14000a9e0:	in     al,dx
   14000a9e1:	scas   al,BYTE PTR es:[rdi]
   14000a9e2:	add    BYTE PTR [rax],al
   14000a9e4:	add    BYTE PTR [rax],al
   14000a9e6:	add    BYTE PTR [rax],al
   14000a9e8:	cli    
   14000a9e9:	scas   al,BYTE PTR es:[rdi]
   14000a9ea:	add    BYTE PTR [rax],al
   14000a9ec:	add    BYTE PTR [rax],al
   14000a9ee:	add    BYTE PTR [rax],al
   14000a9f0:	or     ch,BYTE PTR [rdi+0x0]
   14000a9f6:	add    BYTE PTR [rax],al
   14000a9f8:	and    BYTE PTR [rdi+0x0],ch
   14000a9fe:	add    BYTE PTR [rax],al
   14000aa00:	xor    BYTE PTR [rdi+0x0],ch
   14000aa06:	add    BYTE PTR [rax],al
   14000aa08:	rex scas eax,DWORD PTR es:[rdi]
   14000aa0a:	add    BYTE PTR [rax],al
   14000aa0c:	add    BYTE PTR [rax],al
   14000aa0e:	add    BYTE PTR [rax],al
   14000aa10:	push   rsi
   14000aa11:	scas   eax,DWORD PTR es:[rdi]
   14000aa12:	add    BYTE PTR [rax],al
   14000aa14:	add    BYTE PTR [rax],al
   14000aa16:	add    BYTE PTR [rax],al
   14000aa18:	jo     0x14000a9c9
   14000aa1a:	add    BYTE PTR [rax],al
   14000aa1c:	add    BYTE PTR [rax],al
   14000aa1e:	add    BYTE PTR [rax],al
   14000aa20:	test   BYTE PTR [rdi+0x0],ch
   14000aa26:	add    BYTE PTR [rax],al
   14000aa28:	xchg   esp,eax
   14000aa29:	scas   eax,DWORD PTR es:[rdi]
   14000aa2a:	add    BYTE PTR [rax],al
   14000aa2c:	add    BYTE PTR [rax],al
   14000aa2e:	add    BYTE PTR [rax],al
   14000aa30:	stos   BYTE PTR es:[rdi],al
   14000aa31:	scas   eax,DWORD PTR es:[rdi]
   14000aa32:	add    BYTE PTR [rax],al
   14000aa34:	add    BYTE PTR [rax],al
   14000aa36:	add    BYTE PTR [rax],al
   14000aa38:	(bad)  
   14000aa39:	scas   eax,DWORD PTR es:[rdi]
   14000aa3a:	add    BYTE PTR [rax],al
   14000aa3c:	add    BYTE PTR [rax],al
   14000aa3e:	add    BYTE PTR [rax],al
   14000aa40:	fisubr DWORD PTR [rdi+0x0]
   14000aa46:	add    BYTE PTR [rax],al
   14000aa48:	(bad)  
   14000aa49:	scas   eax,DWORD PTR es:[rdi]
	...
   14000aa56:	add    BYTE PTR [rax],al
   14000aa58:	movabs ds:0xa180000000000000,eax
   14000aa61:	add    BYTE PTR [rax],al
   14000aa63:	add    BYTE PTR [rax],al
   14000aa65:	add    BYTE PTR [rax],al
   14000aa67:	cmp    BYTE PTR [rdx+0x0],0x0
   14000aa6e:	add    BYTE PTR [rax+0x0],al
   14000aa74:	add    BYTE PTR [rax],al
   14000aa76:	add    BYTE PTR [rax],al
   14000aa78:	stos   BYTE PTR es:[rdi],al
   14000aa79:	mov    dl,0x0
   14000aa7b:	add    BYTE PTR [rax],al
   14000aa7d:	add    BYTE PTR [rax],al
   14000aa7f:	add    BYTE PTR [rdx+rsi*4+0x0],bh
	...
   14000aa8e:	add    BYTE PTR [rax],al
   14000aa90:	adc    dh,BYTE PTR [rsi+0x0]
   14000aa96:	add    BYTE PTR [rax],al
   14000aa98:	sub    dh,BYTE PTR [rsi+0x0]
   14000aa9e:	add    BYTE PTR [rax],al
   14000aaa0:	cld    
   14000aaa1:	mov    ch,0x0
	...
   14000aaaf:	add    BYTE PTR [rcx+rsi*4+0x0],al
   14000aab6:	add    BYTE PTR [rax],al
   14000aab8:	push   rdx
   14000aab9:	mov    cl,0x0
   14000aabb:	add    BYTE PTR [rax],al
   14000aabd:	add    BYTE PTR [rax],al
   14000aabf:	add    BYTE PTR [rdx+0xb2],bl
   14000aac5:	add    BYTE PTR [rax],al
   14000aac7:	add    BYTE PTR [rdx+rsi*4+0x0],al
   14000aace:	add    BYTE PTR [rax],al
   14000aad0:	ins    BYTE PTR es:[rdi],dx
   14000aad1:	mov    dl,0x0
   14000aad3:	add    BYTE PTR [rax],al
   14000aad5:	add    BYTE PTR [rax],al
   14000aad7:	add    BYTE PTR [rsi+0xb1],bh
   14000aadd:	add    BYTE PTR [rax],al
   14000aadf:	add    BYTE PTR [rdx+rsi*4+0x0],dl
   14000aae3:	add    BYTE PTR [rax],al
   14000aae5:	add    BYTE PTR [rax],al
   14000aae7:	add    BYTE PTR [rdx-0x4e],al
   14000aaea:	add    BYTE PTR [rax],al
   14000aaec:	add    BYTE PTR [rax],al
   14000aaee:	add    BYTE PTR [rax],al
   14000aaf0:	push   0xffffffffffffffb1
   14000aaf2:	add    BYTE PTR [rax],al
   14000aaf4:	add    BYTE PTR [rax],al
   14000aaf6:	add    BYTE PTR [rax],al
   14000aaf8:	cs mov dl,0x0
   14000aafb:	add    BYTE PTR [rax],al
   14000aafd:	add    BYTE PTR [rax],al
   14000aaff:	add    BYTE PTR [rdx+rsi*4],bl
   14000ab02:	add    BYTE PTR [rax],al
   14000ab04:	add    BYTE PTR [rax],al
   14000ab06:	add    BYTE PTR [rax],al
   14000ab08:	or     BYTE PTR [rdx+0x0],dh
   14000ab0e:	add    BYTE PTR [rax],al
   14000ab10:	(bad)  
   14000ab11:	mov    cl,0x0
	...
   14000ab1f:	add    ah,ah
   14000ab21:	mov    bl,0x0
   14000ab23:	add    BYTE PTR [rax],al
   14000ab25:	add    BYTE PTR [rax],al
   14000ab27:	add    BYTE PTR [rax],al
   14000ab29:	mov    bl,0x0
	...
   14000ab37:	add    BYTE PTR [rsi],ah
   14000ab39:	mov    ah,0x0
   14000ab3b:	add    BYTE PTR [rax],al
   14000ab3d:	add    BYTE PTR [rax],al
   14000ab3f:	add    BYTE PTR [rsi],dh
   14000ab41:	mov    ah,0x0
   14000ab43:	add    BYTE PTR [rax],al
   14000ab45:	add    BYTE PTR [rax],al
   14000ab47:	add    BYTE PTR [rsi],bl
   14000ab49:	mov    bl,0x0
   14000ab4b:	add    BYTE PTR [rax],al
   14000ab4d:	add    BYTE PTR [rax],al
   14000ab4f:	add    BYTE PTR [rsp+rsi*4],dl
	...
   14000ab5e:	add    BYTE PTR [rax],al
   14000ab60:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000ab67:	add    BYTE PTR [rbx+rsi*4+0x0],cl
   14000ab6b:	add    BYTE PTR [rax],al
   14000ab6d:	add    BYTE PTR [rax],al
   14000ab6f:	add    dh,ch
   14000ab71:	mov    dl,0x0
   14000ab73:	add    BYTE PTR [rax],al
   14000ab75:	add    BYTE PTR [rax],al
   14000ab77:	add    BYTE PTR [rdx-0x4d],ah
	...
   14000ab86:	add    BYTE PTR [rax],al
   14000ab88:	xor    dh,BYTE PTR [rbx+0x0]
	...
   14000ab96:	add    BYTE PTR [rax],al
   14000ab98:	shl    BYTE PTR [rbx+0x0],1
   14000ab9e:	add    BYTE PTR [rax],al
   14000aba0:	movabs ds:0xb6000000000000b3,al
   14000aba9:	mov    bl,0x0
	...
   14000abb7:	add    dh,ah
   14000abb9:	mov    dl,0x0
	...
   14000abc7:	add    BYTE PTR [rax-0x4d],bh
   14000abca:	add    BYTE PTR [rax],al
   14000abcc:	add    BYTE PTR [rax],al
   14000abce:	add    BYTE PTR [rax],al
   14000abd0:	xchg   edx,eax
   14000abd1:	mov    bl,0x0
	...
   14000abdf:	add    BYTE PTR [rcx+rsi*4+0x0],ch
   14000abe6:	add    BYTE PTR [rax],al
   14000abe8:	int3   
   14000abe9:	mov    dl,0x0
   14000abeb:	add    BYTE PTR [rax],al
   14000abed:	add    BYTE PTR [rax],al
   14000abef:	add    BYTE PTR [rcx+rsi*4+0x0],bl
	...
   14000abfe:	add    BYTE PTR [rax],al
   14000ac00:	call   0x14000acb6
	...
   14000ac0d:	add    BYTE PTR [rax],al
   14000ac0f:	add    BYTE PTR [rax-0x50],bl
   14000ac12:	add    BYTE PTR [rax],al
   14000ac14:	add    BYTE PTR [rax],al
   14000ac16:	add    BYTE PTR [rax],al
   14000ac18:	rex.WX mov al,0x0
   14000ac1b:	add    BYTE PTR [rax],al
   14000ac1d:	add    BYTE PTR [rax],al
   14000ac1f:	add    BYTE PTR [rsi],bh
   14000ac21:	mov    cl,0x0
   14000ac23:	add    BYTE PTR [rax],al
   14000ac25:	add    BYTE PTR [rax],al
   14000ac27:	add    BYTE PTR [rax],ch
   14000ac29:	mov    cl,0x0
   14000ac2b:	add    BYTE PTR [rax],al
   14000ac2d:	add    BYTE PTR [rax],al
   14000ac2f:	add    BYTE PTR [rsi-0x50],ah
   14000ac32:	add    BYTE PTR [rax],al
   14000ac34:	add    BYTE PTR [rax],al
   14000ac36:	add    BYTE PTR [rax],al
   14000ac38:	adc    BYTE PTR [rcx+0x0],dh
   14000ac3e:	add    BYTE PTR [rax],al
   14000ac40:	or     BYTE PTR [rcx+0x0],dh
   14000ac46:	add    BYTE PTR [rax],al
   14000ac48:	cld    
   14000ac49:	mov    al,0x0
   14000ac4b:	add    BYTE PTR [rax],al
   14000ac4d:	add    BYTE PTR [rax],al
   14000ac4f:	add    dl,dh
   14000ac51:	mov    al,0x0
   14000ac53:	add    BYTE PTR [rax],al
   14000ac55:	add    BYTE PTR [rax],al
   14000ac57:	add    al,ch
   14000ac59:	mov    al,0x0
   14000ac5b:	add    BYTE PTR [rax],al
   14000ac5d:	add    BYTE PTR [rax],al
   14000ac5f:	add    BYTE PTR [rax+rsi*4],dh
   14000ac62:	add    BYTE PTR [rax],al
   14000ac64:	add    BYTE PTR [rax],al
   14000ac66:	add    BYTE PTR [rax],al
   14000ac68:	sub    dh,BYTE PTR [rax+0x0]
   14000ac6e:	add    BYTE PTR [rax],al
   14000ac70:	shl    BYTE PTR [rax+0x0],1
   14000ac76:	add    BYTE PTR [rax],al
   14000ac78:	(bad)  
   14000ac79:	mov    al,0x0
   14000ac7b:	add    BYTE PTR [rax],al
   14000ac7d:	add    BYTE PTR [rax],al
   14000ac7f:	add    BYTE PTR [rax+0xb0],dh
   14000ac85:	add    BYTE PTR [rax],al
   14000ac87:	add    BYTE PTR [rdx+0xb0],ah
   14000ac8d:	add    BYTE PTR [rax],al
   14000ac8f:	add    BYTE PTR [rax+0xb0],bl
   14000ac95:	add    BYTE PTR [rax],al
   14000ac97:	add    BYTE PTR [rsi-0x50],dh
   14000ac9a:	add    BYTE PTR [rax],al
   14000ac9c:	add    BYTE PTR [rax],al
   14000ac9e:	add    BYTE PTR [rax],al
   14000aca0:	nop
   14000aca1:	mov    al,0x0
   14000aca3:	add    BYTE PTR [rax],al
   14000aca5:	add    BYTE PTR [rax],al
   14000aca7:	add    BYTE PTR [rax+0xb0],cl
   14000acad:	add    BYTE PTR [rax],al
   14000acaf:	add    BYTE PTR [rsi],bh
   14000acb1:	mov    al,0x0
   14000acb3:	add    BYTE PTR [rax],al
   14000acb5:	add    BYTE PTR [rax],al
   14000acb7:	add    BYTE PTR [rsi+rsi*4+0x0],bl
   14000acbb:	add    BYTE PTR [rax],al
   14000acbd:	add    BYTE PTR [rax],al
   14000acbf:	add    BYTE PTR [rdx-0x4a],dl
   14000acc2:	add    BYTE PTR [rax],al
   14000acc4:	add    BYTE PTR [rax],al
   14000acc6:	add    BYTE PTR [rax],al
   14000acc8:	(bad)  
   14000acc9:	mov    al,0x0
   14000accb:	add    BYTE PTR [rax],al
   14000accd:	add    BYTE PTR [rax],al
   14000accf:	add    BYTE PTR [rdx],dl
   14000acd1:	mov    al,0x0
   14000acd3:	add    BYTE PTR [rax],al
   14000acd5:	add    BYTE PTR [rax],al
   14000acd7:	add    BYTE PTR [rax+rsi*4],al
   14000acda:	add    BYTE PTR [rax],al
   14000acdc:	add    BYTE PTR [rax],al
   14000acde:	add    BYTE PTR [rax],al
   14000ace0:	sbb    dh,BYTE PTR [rcx+0x0]
   14000ace6:	add    BYTE PTR [rax],al
   14000ace8:	rex.W mov sil,0x0
   14000aceb:	add    BYTE PTR [rax],al
   14000aced:	add    BYTE PTR [rax],al
   14000acef:	add    BYTE PTR [rsi-0x4a],ah
	...
   14000acfe:	add    BYTE PTR [rax],al
   14000ad00:	fdiv   DWORD PTR [rbp+0x0]
	...
   14000ad0e:	add    BYTE PTR [rax],al
   14000ad10:	push   rbp
   14000ad11:	add    dl,BYTE PTR [rdx+0x65]
   14000ad14:	rex.XB ins BYTE PTR es:[edi],dx
   14000ad17:	outs   dx,DWORD PTR ds:[rsi]
   14000ad18:	jae    0x14000ad7f
   14000ad1a:	rex.WXB
   14000ad1b:	gs jns 0x14000ad1e
   14000ad1e:	sahf   
   14000ad1f:	add    dl,BYTE PTR [rdx+0x65]
   14000ad22:	addr32 push rbx
   14000ad24:	gs je  0x14000ad72
   14000ad27:	gs jns 0x14000ad7d
   14000ad2a:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000ad2e:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x6552028d
   14000ad36:	addr32 push rcx
   14000ad38:	jne    0x14000ad9f
   14000ad3a:	jb     0x14000adb5
   14000ad3c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000ad3e:	outs   dx,WORD PTR ds:[rsi]
   14000ad40:	rex.WXB
   14000ad41:	gs jns 0x14000ad9b
   14000ad44:	add    BYTE PTR [rax],al
   14000ad46:	jne    0x14000ad4a
   14000ad48:	push   rdx
   14000ad49:	rex.RB outs dx,BYTE PTR gs:[esi]
   14000ad4d:	jne    0x14000adbc
   14000ad4f:	rex.WXB
   14000ad50:	gs jns 0x14000adaa
   14000ad53:	add    BYTE PTR [rbx+0x67655202],ah
   14000ad59:	push   rbx
   14000ad5a:	gs je  0x14000adb3
   14000ad5d:	(bad)  
   14000ad5e:	ins    BYTE PTR es:[rdi],dx
   14000ad5f:	jne    0x14000adc6
   14000ad61:	rex.RB js 0x14000adbb
   14000ad64:	add    BYTE PTR [rax],al
   14000ad66:	pop    rsi
   14000ad67:	add    dl,BYTE PTR [rdx+0x65]
   14000ad6a:	addr32 rex.XB jb 0x14000add3
   14000ad6e:	(bad)  
   14000ad6f:	je     0x14000add6
   14000ad71:	rex.WXB
   14000ad72:	gs jns 0x14000adba
   14000ad75:	js     0x14000adce
   14000ad77:	add    BYTE PTR [rsi+0x67655202],al
   14000ad7d:	rex.WRXB jo 0x14000ade5
   14000ad80:	outs   dx,BYTE PTR ds:[rsi]
   14000ad81:	rex.WXB
   14000ad82:	gs jns 0x14000adca
   14000ad85:	js     0x14000adde
   14000ad87:	add    BYTE PTR [rcx+0x2],ch
   14000ad8a:	push   rdx
   14000ad8b:	gs addr32 rex.R
   14000ad8e:	gs ins BYTE PTR es:[rdi],dx
   14000ad90:	gs je  0x14000adf8
   14000ad93:	rex.WXB
   14000ad94:	gs jns 0x14000adee
   14000ad97:	add    BYTE PTR [rcx+0x44],al
   14000ad9a:	push   rsi
   14000ad9b:	push   r8
   14000ad9d:	xor    rsi,QWORD PTR [r10]
   14000ada0:	cs fs ins BYTE PTR es:[rdi],dx
   14000ada3:	ins    BYTE PTR es:[rdi],dx
   14000ada4:	add    BYTE PTR [rax],al
   14000ada6:	cmp    al,0x3
   14000ada8:	rex.W
   14000ada9:	gs (bad) 
   14000adab:	jo     0x14000adee
   14000adad:	ins    BYTE PTR es:[rdi],dx
   14000adae:	ins    BYTE PTR es:[rdi],dx
   14000adaf:	outs   dx,DWORD PTR ds:[rsi]
   14000adb0:	movsxd eax,DWORD PTR [rax]
   14000adb2:	rex add ecx,DWORD PTR [rax+0x65]
   14000adb6:	(bad)  
   14000adb7:	jo     0x14000adff
   14000adb9:	jb     0x14000ae20
   14000adbb:	add    BYTE PTR gs:[rax],al
   14000adbe:	ins    DWORD PTR es:[rdi],dx
   14000adbf:	add    al,BYTE PTR [rdi+0x65]
   14000adc2:	je     0x14000ae11
   14000adc4:	outs   dx,DWORD PTR ds:[rsi]
   14000adc5:	fs jne 0x14000ae34
   14000adc8:	gs rex.W (bad) 
   14000adcb:	outs   dx,BYTE PTR ds:[rsi]
   14000adcc:	fs ins BYTE PTR es:[rdi],dx
   14000adce:	gs rex.RB js 0x14000ae29
   14000add2:	add    BYTE PTR [rax],al
   14000add4:	stos   DWORD PTR es:[rdi],eax
   14000add5:	add    al,BYTE PTR [rdi+0x65]
   14000add8:	je     0x14000ae2a
   14000adda:	jb     0x14000ae4b
   14000addc:	movsxd esp,DWORD PTR [rbp+0x73]
   14000addf:	jae    0x14000ae29
   14000ade1:	gs (bad) 
   14000ade3:	jo     0x14000ade5
   14000ade5:	add    BYTE PTR [rbp+0x74654702],ah
   14000adeb:	push   rax
   14000adec:	jb     0x14000ae5d
   14000adee:	movsxd eax,DWORD PTR [rcx+0x64]
   14000adf1:	fs jb  0x14000ae59
   14000adf4:	jae    0x14000ae69
   14000adf6:	add    BYTE PTR [rax],al
   14000adf8:	sub    DWORD PTR [rcx],eax
   14000adfa:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000adfc:	je     0x14000ae63
   14000adfe:	jb     0x14000ae43
   14000ae00:	jb     0x14000ae6b
   14000ae02:	je     0x14000ae6d
   14000ae04:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000ae07:	push   rbx
   14000ae08:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000ae0d:	outs   dx,BYTE PTR ds:[rsi]
   14000ae0e:	add    BYTE PTR [rax],al
   14000ae10:	test   eax,0x61654c03
   14000ae15:	jbe    0x14000ae7c
   14000ae17:	rex.XB jb 0x14000ae83
   14000ae1a:	je     0x14000ae85
   14000ae1c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000ae1f:	push   rbx
   14000ae20:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000ae25:	outs   dx,BYTE PTR ds:[rsi]
   14000ae26:	add    BYTE PTR [rax],al
   14000ae28:	or     BYTE PTR [rip+0x45746553],al        # 0x185751381
   14000ae2e:	jbe    0x14000ae95
   14000ae30:	outs   dx,BYTE PTR ds:[rsi]
   14000ae31:	je     0x14000ae33
   14000ae33:	add    BYTE PTR [rbp+0x3],dl
   14000ae36:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000ae38:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000ae40:	rex.XB jb 0x14000aeac
   14000ae43:	je     0x14000aeae
   14000ae45:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000ae48:	push   rbx
   14000ae49:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000ae4e:	outs   dx,BYTE PTR ds:[rsi]
   14000ae4f:	rex.B outs dx,BYTE PTR ds:[rsi]
   14000ae51:	fs push rbx
   14000ae53:	jo     0x14000aebe
   14000ae55:	outs   dx,BYTE PTR ds:[rsi]
   14000ae56:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000ae58:	jne    0x14000aec8
   14000ae5a:	je     0x14000ae5c
   14000ae5c:	push   rdi
   14000ae5d:	add    al,BYTE PTR [rdi+0x65]
   14000ae60:	je     0x14000aeae
   14000ae62:	(bad)  
   14000ae63:	jae    0x14000aed9
   14000ae65:	rex.RB jb 0x14000aeda
   14000ae68:	outs   dx,DWORD PTR ds:[rsi]
   14000ae69:	jb     0x14000ae6b
   14000ae6b:	add    BYTE PTR [rsi+0x3],dl
   14000ae6e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000ae70:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000ae78:	rex.XB jb 0x14000aee4
   14000ae7b:	je     0x14000aee6
   14000ae7d:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000ae80:	push   rbx
   14000ae81:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000ae86:	outs   dx,BYTE PTR ds:[rsi]
   14000ae87:	rex.RB js 0x14000ae8a
   14000ae8a:	add    eax,0x6c654401
   14000ae8f:	gs je  0x14000aef7
   14000ae92:	rex.XB jb 0x14000aefe
   14000ae95:	je     0x14000af00
   14000ae97:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000ae9a:	push   rbx
   14000ae9b:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000aea0:	outs   dx,BYTE PTR ds:[rsi]
   14000aea1:	add    BYTE PTR [rbx+rax*1+0x48],al
   14000aea5:	gs (bad) 
   14000aea7:	jo     0x14000aefc
   14000aea9:	gs je  0x14000aef5
   14000aeac:	outs   dx,BYTE PTR ds:[rsi]
   14000aead:	outs   dx,WORD PTR ds:[rsi]
   14000aeaf:	jb     0x14000af1e
   14000aeb1:	(bad)  
   14000aeb2:	je     0x14000af1d
   14000aeb4:	outs   dx,DWORD PTR ds:[rsi]
   14000aeb5:	outs   dx,BYTE PTR ds:[rsi]
   14000aeb6:	add    BYTE PTR [rax],al
   14000aeb8:	rol    BYTE PTR [rcx],1
   14000aeba:	rex.RXB
   14000aebb:	gs je  0x14000af01
   14000aebe:	outs   dx,DWORD PTR ds:[rsi]
   14000aebf:	ins    DWORD PTR es:[rdi],dx
   14000aec0:	ins    DWORD PTR es:[rdi],dx
   14000aec1:	(bad)  
   14000aec2:	outs   dx,BYTE PTR ds:[rsi]
   14000aec3:	imul   r13,QWORD PTR fs:[rsi+0x65],0x1250057
   14000aecc:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000aece:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000aed1:	gs push rax
   14000aed3:	outs   dx,DWORD PTR ds:[rsi]
   14000aed4:	imul   ebp,DWORD PTR [rsi+0x74],0x4c007265
   14000aedb:	add    al,0x52
   14000aedd:	(bad)  
   14000aede:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   14000aee5:	jo     0x14000af5b
   14000aee7:	imul   ebp,DWORD PTR [rdi+0x6e],0x7d0000
   14000aeee:	rex.XB ins BYTE PTR es:[rdi],dx
   14000aef0:	outs   dx,DWORD PTR ds:[rsi]
   14000aef1:	jae    0x14000af58
   14000aef3:	rex.W (bad) 
   14000aef5:	outs   dx,BYTE PTR ds:[rsi]
   14000aef6:	fs ins BYTE PTR es:[rdi],dx
   14000aef8:	add    BYTE PTR gs:[rax+rax*1+0x61657243],dh
   14000af00:	je     0x14000af67
   14000af02:	rex.RB jbe 0x14000af6a
   14000af05:	outs   dx,BYTE PTR ds:[rsi]
   14000af06:	je     0x14000af5f
   14000af08:	add    BYTE PTR [rax],al
   14000af0a:	enter  0x5705,0x61
   14000af0e:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   14000af16:	ins    BYTE PTR es:[edi],dx
   14000af18:	gs rex.WRXB (bad) 
   14000af1b:	push   0x65
   14000af1d:	movsxd esi,DWORD PTR [rax+rax*1-0x1a]
   14000af21:	add    BYTE PTR [rbx+0x72],al
   14000af24:	gs (bad) 
   14000af26:	je     0x14000af8d
   14000af28:	push   rsp
   14000af29:	push   0x64616572
   14000af2e:	add    BYTE PTR [rax],al
   14000af30:	mov    ch,0x4
   14000af32:	push   rdx
   14000af33:	gs jae 0x14000afab
   14000af36:	ins    DWORD PTR es:[rdi],dx
   14000af37:	gs push rsp
   14000af39:	push   0x64616572
   14000af3e:	add    BYTE PTR [rax],al
   14000af40:	cmp    eax,0x74654702
   14000af45:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x69727474
   14000af4e:	(bad)  
   14000af4f:	jne    0x14000afc5
   14000af51:	gs jae 0x14000afab
   14000af54:	add    BYTE PTR [rax],al
   14000af56:	pop    QWORD PTR [rbx]
   14000af58:	rex.WXB xor rsi,QWORD PTR [r10]
   14000af5b:	rex.RXB
   14000af5c:	gs je  0x14000afac
   14000af5f:	outs   dx,DWORD PTR ds:[rsi]
   14000af60:	fs jne 0x14000afcf
   14000af63:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x45656d61
   14000af6d:	js     0x14000afc6
   14000af6f:	add    BYTE PTR [rax],dl
   14000af71:	add    al,BYTE PTR [rdi+0x65]
   14000af74:	je     0x14000afb9
   14000af76:	jne    0x14000afea
   14000af78:	jb     0x14000afdf
   14000af7a:	outs   dx,BYTE PTR ds:[rsi]
   14000af7b:	je     0x14000afcd
   14000af7d:	jb     0x14000afee
   14000af7f:	movsxd esp,DWORD PTR [rbp+0x73]
   14000af82:	jae    0x14000af84
   14000af84:	inc    BYTE PTR [rax]
   14000af86:	rex.R
   14000af87:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
   14000af8b:	gs push rax
   14000af8d:	outs   dx,DWORD PTR ds:[rsi]
   14000af8e:	imul   ebp,DWORD PTR [rsi+0x74],0xd7007265
   14000af95:	add    al,BYTE PTR [rdi+0x65]
   14000af98:	je     0x14000afed
   14000af9a:	jns    0x14000b00f
   14000af9c:	je     0x14000b003
   14000af9e:	ins    DWORD PTR es:[rdi],dx
   14000af9f:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   14000afa7:	jns    0x14000b000
   14000afa9:	add    dh,al
   14000afab:	add    eax,0x74696157
   14000afb0:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000afb2:	jb     0x14000b001
   14000afb4:	jne    0x14000b022
   14000afb6:	je     0x14000b021
   14000afb8:	jo     0x14000b026
   14000afba:	gs rex.WRXB (bad) 
   14000afbd:	push   0x65
   14000afbf:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   14000afc3:	add    BYTE PTR [rdx+0x2],ch
   14000afc6:	rex.RXB
   14000afc7:	gs je  0x14000b017
   14000afca:	outs   dx,DWORD PTR ds:[rsi]
   14000afcb:	fs jne 0x14000b03a
   14000afce:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   14000afd8:	add    BYTE PTR [rax],al
   14000afda:	mov    edi,0x72695605
   14000afdf:	je     0x14000b056
   14000afe1:	(bad)  
   14000afe2:	ins    BYTE PTR es:[rdi],dx
   14000afe3:	push   rcx
   14000afe4:	jne    0x14000b04b
   14000afe6:	jb     0x14000b061
   14000afe8:	add    BYTE PTR [rax],al
   14000afea:	mov    ecx,0x636f4c03
   14000afef:	(bad)  
   14000aff0:	ins    BYTE PTR es:[rdi],dx
   14000aff1:	rex.RX jb 0x14000b059
   14000aff4:	add    BYTE PTR gs:[rbx+0x45],cl
   14000aff8:	push   rdx
   14000aff9:	rex.WRX
   14000affa:	rex.RB
   14000affb:	xor    r14,QWORD PTR [rdx]
   14000affe:	cs fs ins BYTE PTR es:[rdi],dx
   14000b001:	ins    BYTE PTR es:[rdi],dx
   14000b002:	add    BYTE PTR [rax],al
   14000b004:	imul   eax,DWORD PTR [rbx],0x6e73765f
   14000b00a:	ja     0x14000b07c
   14000b00c:	jb     0x14000b077
   14000b00e:	outs   dx,BYTE PTR ds:[rsi]
   14000b00f:	je     0x14000b077
   14000b011:	add    BYTE PTR [rbx+0x6d656d04],dl
   14000b017:	movsxd esi,DWORD PTR [rax+0x79]
   14000b01a:	pop    rdi
   14000b01b:	jae    0x14000b01d
   14000b01d:	add    BYTE PTR [rdx+0x63775f03],cl
   14000b023:	jae    0x14000b08e
   14000b025:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000b028:	add    BYTE PTR [rax],al
   14000b02a:	xchg   esp,eax
   14000b02b:	add    al,0x6d
   14000b02d:	gs ins DWORD PTR es:[rdi],dx
   14000b02f:	ins    DWORD PTR es:[rdi],dx
   14000b030:	outs   dx,DWORD PTR ds:[rsi]
   14000b031:	jbe    0x14000b098
   14000b033:	add    BYTE PTR [rcx],al
   14000b035:	add    eax,0x63736377
   14000b03a:	push   0xffffffffec000072
   14000b03f:	add    al,0x74
   14000b041:	outs   dx,DWORD PTR ds:[rsi]
   14000b042:	ja     0x14000b0b9
   14000b044:	jo     0x14000b0b6
   14000b046:	gs jb  0x14000b049
   14000b049:	add    BYTE PTR [rbp+0x0],dl
   14000b04c:	pop    rdi
   14000b04d:	pop    rax
   14000b04e:	movsxd esi,DWORD PTR [rax+0x74]
   14000b051:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000b05a:	pop    rdi
   14000b05b:	(bad)  
   14000b05c:	ins    DWORD PTR es:[rdi],dx
   14000b05d:	jae    0x14000b0c6
   14000b05f:	pop    rdi
   14000b060:	gs js  0x14000b0cc
   14000b063:	je     0x14000b065
   14000b065:	add    BYTE PTR [rdi+0x0],bh
   14000b068:	pop    rdi
   14000b069:	pop    rdi
   14000b06a:	addr32 gs je 0x14000b0db
   14000b06e:	(bad)  
   14000b06f:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000b076:	mov    es,WORD PTR [rax]
   14000b078:	pop    rdi
   14000b079:	pop    rdi
   14000b07a:	jae    0x14000b0e1
   14000b07c:	je     0x14000b0dd
   14000b07e:	(bad)  
   14000b07f:	jo     0x14000b0f1
   14000b081:	pop    rdi
   14000b082:	je     0x14000b0fd
   14000b084:	jo     0x14000b0eb
   14000b086:	add    BYTE PTR [rax],al
   14000b088:	xor    al,BYTE PTR [riz*2+0x746978]
   14000b08f:	add    BYTE PTR [rsi],cl
   14000b091:	add    DWORD PTR [rdi+0x65],ebx
   14000b094:	js     0x14000b0ff
   14000b096:	je     0x14000b098
   14000b098:	rol    DWORD PTR [rax],0x5f
   14000b09b:	movsxd esp,DWORD PTR [rbp+0x78]
   14000b09e:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0199
   14000b0a6:	jae    0x14000b115
   14000b0a8:	(bad)
   14000b0ad:	add    BYTE PTR fs:[rax],al
   14000b0b0:	nop
   14000b0b1:	add    BYTE PTR [rdi+0x5f],bl
   14000b0b4:	jae    0x14000b11b
   14000b0b6:	je     0x14000b12d
   14000b0b8:	jae    0x14000b11f
   14000b0ba:	jb     0x14000b129
   14000b0bc:	(bad)  
   14000b0bd:	je     0x14000b127
   14000b0bf:	gs jb  0x14000b134
   14000b0c2:	add    BYTE PTR [rax],al
   14000b0c4:	jge    0x14000b0c7
   14000b0c6:	pop    rdi
   14000b0c7:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000b0ce:	ins    DWORD PTR es:[rdi],dx
   14000b0cf:	add    BYTE PTR [rdi+0x0],dl
   14000b0d2:	pop    rdi
   14000b0d3:	pop    rdi
   14000b0d4:	rex.XB pop r15
   14000b0d6:	jae    0x14000b148
   14000b0d8:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000b0dc:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000b0e3:	ins    BYTE PTR es:[rdi],dx
   14000b0e4:	gs jb  0x14000b0e7
   14000b0e7:	add    BYTE PTR [rdx+0x63615f00],ah
   14000b0ed:	ins    DWORD PTR es:[rdi],dx
   14000b0ee:	fs ins BYTE PTR es:[rdi],dx
   14000b0f0:	outs   dx,BYTE PTR ds:[rsi]
   14000b0f1:	add    BYTE PTR [rdi],ah
   14000b0f3:	add    DWORD PTR [rdi+0x66],ebx
   14000b0f6:	ins    DWORD PTR es:[rdi],dx
   14000b0f7:	outs   dx,DWORD PTR ds:[rsi]
   14000b0f8:	fs add BYTE PTR gs:[rax],al
   14000b0fc:	rol    BYTE PTR [rax],cl
   14000b0fe:	pop    rdi
   14000b0ff:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b102:	ins    DWORD PTR es:[rdi],dx
   14000b103:	outs   dx,DWORD PTR ds:[rsi]
   14000b104:	fs add BYTE PTR gs:[rax],al
   14000b108:	out    0x1,al
   14000b10a:	pop    rdi
   14000b10b:	ins    BYTE PTR es:[rdi],dx
   14000b10c:	outs   dx,DWORD PTR ds:[rsi]
   14000b10d:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000b110:	add    ebx,DWORD PTR [r15+0x75]
   14000b114:	outs   dx,BYTE PTR ds:[rsi]
   14000b115:	ins    BYTE PTR es:[rdi],dx
   14000b116:	outs   dx,DWORD PTR ds:[rsi]
   14000b117:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000b11a:	jnp    0x14000b11c
   14000b11c:	pop    rdi
   14000b11d:	pop    rdi
   14000b11e:	fs ins BYTE PTR es:[rdi],dx
   14000b120:	ins    BYTE PTR es:[rdi],dx
   14000b121:	outs   dx,DWORD PTR ds:[rsi]
   14000b122:	outs   dx,BYTE PTR ds:[rsi]
   14000b123:	gs js  0x14000b18f
   14000b126:	je     0x14000b128
   14000b128:	nop
   14000b129:	add    bl,BYTE PTR [rdi+0x6f]
   14000b12c:	outs   dx,BYTE PTR ds:[rsi]
   14000b12d:	gs js  0x14000b199
   14000b130:	je     0x14000b132
   14000b132:	ins    DWORD PTR es:[rdi],dx
   14000b133:	jae    0x14000b1ab
   14000b135:	movsxd esi,DWORD PTR [rdx+0x74]
   14000b138:	cs fs ins BYTE PTR es:[rdi],dx
   14000b13b:	ins    BYTE PTR es:[rdi],dx
   14000b13c:	add    BYTE PTR [rax],al
   14000b13e:	(bad)  
   14000b13f:	add    BYTE PTR [rdi],bh
   14000b141:	je     0x14000b1a8
   14000b143:	jb     0x14000b1b2
   14000b145:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000b14c:	pop    rcx
   14000b14d:	pop    r8
   14000b14f:	pop    rax
   14000b150:	pop    rdx
   14000b151:	add    BYTE PTR [rdx],al
   14000b153:	add    BYTE PTR [rbx+0x6f],al
   14000b156:	rex.B
   14000b157:	fs fs push rdx
   14000b15a:	gs push bx
   14000b15d:	gs jb  0x14000b1d6
   14000b160:	gs jb  0x14000b1b3
   14000b163:	jb     0x14000b1d4
   14000b165:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b168:	jae    0x14000b16a
   14000b16a:	add    BYTE PTR ss:[rbx+0x6f],al
   14000b16e:	push   rdx
   14000b16f:	gs ins BYTE PTR es:[rdi],dx
   14000b171:	gs (bad) 
   14000b173:	jae    0x14000b1da
   14000b175:	push   rbx
   14000b176:	gs jb  0x14000b1ef
   14000b179:	gs jb  0x14000b1cc
   14000b17c:	jb     0x14000b1ed
   14000b17e:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b181:	jae    0x14000b183
   14000b183:	add    BYTE PTR [rax+rax*1],bh
   14000b186:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b188:	push   rbx
   14000b189:	jne    0x14000b1fe
   14000b18b:	jo     0x14000b1f2
   14000b18d:	outs   dx,BYTE PTR ds:[rsi]
   14000b18e:	fs rex.XB ins BYTE PTR es:[rdi],dx
   14000b191:	(bad)  
   14000b192:	jae    0x14000b207
   14000b194:	rex.WRXB (bad) 
   14000b196:	push   0x65
   14000b198:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   14000b19c:	add    eax,DWORD PTR [rax]
   14000b19e:	push   rdx
   14000b19f:	outs   dx,DWORD PTR ds:[rsi]
   14000b1a0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b1a2:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000b1aa:	add    BYTE PTR [rax],al
   14000b1ac:	(bad)  
   14000b1ad:	add    BYTE PTR [rdx+0x6f],dl
   14000b1b0:	push   rbp
   14000b1b1:	outs   dx,BYTE PTR ds:[rsi]
   14000b1b2:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000b1b9:	imul   edi,DWORD PTR [rdx+0x65],0x270000
   14000b1c0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b1c2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b1c4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000b1cc:	push   rbx
   14000b1cd:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000b1d1:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x43002600
   14000b1d9:	outs   dx,DWORD PTR ds:[rsi]
   14000b1da:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b1dc:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000b1e4:	rex.RB js 0x14000b1e7
   14000b1e7:	add    BYTE PTR [rbx],cl
   14000b1e9:	add    BYTE PTR [rdi+0x69],dl
   14000b1ec:	outs   dx,BYTE PTR ds:[rsi]
   14000b1ed:	outs   dx,DWORD PTR fs:[rsi]
   14000b1ef:	ja     0x14000b264
   14000b1f1:	rex.XB jb 0x14000b259
   14000b1f4:	(bad)  
   14000b1f5:	je     0x14000b25c
   14000b1f7:	push   rbx
   14000b1f8:	je     0x14000b26c
   14000b1fa:	imul   ebp,DWORD PTR [rsi+0x67],0x65666552
   14000b201:	jb     0x14000b268
   14000b203:	outs   dx,BYTE PTR ds:[rsi]
   14000b204:	movsxd esp,DWORD PTR [rbp+0x0]
   14000b207:	add    BYTE PTR [rax],cl
   14000b209:	add    BYTE PTR [rbx+0x6f],al
   14000b20c:	rex.XB jb 0x14000b274
   14000b20f:	(bad)  
   14000b210:	je     0x14000b277
   14000b212:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b214:	jae    0x14000b28a
   14000b216:	(bad)  
   14000b217:	outs   dx,BYTE PTR ds:[rsi]
   14000b218:	movsxd esp,DWORD PTR [rbp+0x0]
   14000b21b:	add    BYTE PTR [rsi],bh
   14000b21d:	add    BYTE PTR [rbx+0x6f],al
   14000b220:	push   rsp
   14000b221:	(bad)  
   14000b222:	jae    0x14000b28f
   14000b224:	rex.WRB
   14000b225:	gs ins DWORD PTR es:[rdi],dx
   14000b227:	rex.B ins BYTE PTR es:[rdi],dx
   14000b229:	ins    BYTE PTR es:[rdi],dx
   14000b22a:	outs   dx,DWORD PTR ds:[rsi]
   14000b22b:	movsxd eax,DWORD PTR [rax]
   14000b22d:	add    BYTE PTR [rax+rax*1+0x50],cl
   14000b231:	jb     0x14000b2a2
   14000b233:	jo     0x14000b28b
   14000b235:	(bad)  
   14000b236:	jb     0x14000b2a1
   14000b238:	(bad)  
   14000b239:	outs   dx,BYTE PTR ds:[rsi]
   14000b23a:	je     0x14000b27f
   14000b23c:	ins    BYTE PTR es:[rdi],dx
   14000b23d:	gs (bad) 
   14000b23f:	jb     0x14000b241
   14000b241:	add    BYTE PTR [rdx+0x0],al
   14000b244:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b246:	push   rbp
   14000b247:	outs   dx,BYTE PTR ds:[rsi]
   14000b248:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000b24f:	imul   edi,DWORD PTR [rdx+0x65],0x320000
   14000b256:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b258:	push   rdx
   14000b259:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   14000b262:	(bad)  
   14000b263:	jae    0x14000b2d8
   14000b265:	rex.WRXB (bad) 
   14000b267:	push   0x65
   14000b269:	movsxd esi,DWORD PTR [rax+rax*1+0x37]
   14000b26d:	add    BYTE PTR [rbx+0x6f],al
   14000b270:	push   rdx
   14000b271:	gs jae 0x14000b2e9
   14000b274:	ins    DWORD PTR es:[rdi],dx
   14000b275:	gs rex.XB ins BYTE PTR es:[rdi],dx
   14000b278:	(bad)  
   14000b279:	jae    0x14000b2ee
   14000b27b:	rex.WRXB (bad) 
   14000b27d:	push   0x65
   14000b27f:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   14000b283:	add    BYTE PTR [rcx],bh
   14000b285:	add    BYTE PTR [rbx+0x6f],al
   14000b288:	push   rdx
   14000b289:	gs jbe 0x14000b2fb
   14000b28c:	imul   esp,DWORD PTR [rbp+0x43],0x6c
   14000b290:	(bad)  
   14000b291:	jae    0x14000b306
   14000b293:	rex.WRXB (bad) 
   14000b295:	push   0x65
   14000b297:	movsxd esi,DWORD PTR [rax+rax*1+0x3f]
   14000b29b:	add    BYTE PTR [rbx+0x6f],al
   14000b29e:	push   rsp
   14000b29f:	(bad)  
   14000b2a0:	jae    0x14000b30d
   14000b2a2:	rex.WRB
   14000b2a3:	gs ins DWORD PTR es:[rdi],dx
   14000b2a5:	rex.RX jb 0x14000b30d
   14000b2a8:	add    BYTE PTR gs:[rdx+rax*1],cl
   14000b2ac:	push   rdx
   14000b2ad:	jo     0x14000b312
   14000b2af:	push   rbx
   14000b2b0:	je     0x14000b324
   14000b2b2:	imul   ebp,DWORD PTR [rsi+0x67],0x65657246
   14000b2b9:	push   rdi
   14000b2ba:	add    BYTE PTR [rax],al
   14000b2bc:	(bad)  
   14000b2bd:	add    dl,BYTE PTR [rbp+0x75]
   14000b2c0:	imul   esp,DWORD PTR [rsp+rdx*2+0x6f],0x69727453
   14000b2c8:	outs   dx,BYTE PTR ds:[rsi]
   14000b2c9:	addr32 push rdi
   14000b2cb:	add    BYTE PTR [rcx],al
   14000b2cd:	add    BYTE PTR [rdx+0x6f],dl
   14000b2d0:	rex.RXB
   14000b2d1:	gs je  0x14000b315
   14000b2d4:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14000b2d8:	(bad)  
   14000b2d9:	je     0x14000b344
   14000b2db:	outs   dx,DWORD PTR ds:[rsi]
   14000b2dc:	outs   dx,BYTE PTR ds:[rsi]
   14000b2dd:	rex.RX (bad) 
   14000b2df:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000b2e3:	jns    0x14000b2e5
   14000b2e5:	add    BYTE PTR [rip+0x656c5300],ch        # 0x1a56d05eb
   14000b2eb:	gs jo  0x14000b2ee
   14000b2ee:	and    BYTE PTR [rax],al
   14000b2f0:	rex.RXB
   14000b2f1:	gs je  0x14000b347
   14000b2f4:	je     0x14000b357
   14000b2f6:	jb     0x14000b36c
   14000b2f8:	jne    0x14000b36a
   14000b2fa:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b2fc:	outs   dx,WORD PTR ds:[rsi]
   14000b2fe:	push   rdi
   14000b2ff:	add    BYTE PTR [rdi],cl
   14000b301:	add    BYTE PTR [rbx+0x65],dl
   14000b304:	je     0x14000b35b
   14000b306:	outs   dx,BYTE PTR ds:[rsi]
   14000b307:	push   0x6c646e61
   14000b30c:	gs fs rex.RB js 0x14000b374
   14000b311:	gs jo  0x14000b388
   14000b314:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000b31b:	gs jb  0x14000b31e
   14000b31e:	adc    eax,DWORD PTR [rax]
   14000b320:	rex.RXB
   14000b321:	gs je  0x14000b371
   14000b324:	outs   dx,DWORD PTR ds:[rsi]
   14000b325:	fs jne 0x14000b394
   14000b328:	gs rex.W (bad) 
   14000b32b:	outs   dx,BYTE PTR ds:[rsi]
   14000b32c:	fs ins BYTE PTR es:[rdi],dx
   14000b32e:	gs push rdi
   14000b330:	add    BYTE PTR [rax],al
   14000b332:	add    BYTE PTR [rax],al
   14000b334:	push   rcx
   14000b335:	jne    0x14000b39c
   14000b337:	jb     0x14000b3b2
   14000b339:	push   rax
   14000b33a:	gs jb  0x14000b3a3
   14000b33d:	outs   dx,DWORD PTR ds:[rsi]
   14000b33e:	jb     0x14000b3ad
   14000b340:	(bad)  
   14000b341:	outs   dx,BYTE PTR ds:[rsi]
   14000b342:	movsxd esp,DWORD PTR [rbp+0x43]
   14000b345:	outs   dx,DWORD PTR ds:[rsi]
   14000b346:	jne    0x14000b3b6
   14000b348:	je     0x14000b3af
   14000b34a:	jb     0x14000b34c
   14000b34c:	or     eax,0x74654700
   14000b351:	rex.XB jne 0x14000b3c6
   14000b354:	jb     0x14000b3bb
   14000b356:	outs   dx,BYTE PTR ds:[rsi]
   14000b357:	je     0x14000b3a9
   14000b359:	jb     0x14000b3ca
   14000b35b:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b35e:	jae    0x14000b3a9
   14000b360:	add    BYTE PTR fs:[rcx],dl
   14000b363:	add    BYTE PTR [rdi+0x65],al
   14000b366:	je     0x14000b3ab
   14000b368:	jne    0x14000b3dc
   14000b36a:	jb     0x14000b3d1
   14000b36c:	outs   dx,BYTE PTR ds:[rsi]
   14000b36d:	je     0x14000b3c3
   14000b36f:	push   0x64616572
   14000b374:	rex.WB
   14000b375:	add    BYTE PTR fs:[rax],al
   14000b378:	adc    al,0x0
   14000b37a:	rex.RXB
   14000b37b:	gs je  0x14000b3d1
   14000b37e:	jns    0x14000b3f3
   14000b380:	je     0x14000b3e7
   14000b382:	ins    DWORD PTR es:[rdi],dx
   14000b383:	push   rsp
   14000b384:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000b38b:	ins    BYTE PTR es:[rdi],dx
   14000b38c:	gs push rsp
   14000b38e:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   14000b395:	gs je  0x14000b3ec
   14000b398:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000b39f:	je     0x14000b3a1
   14000b3a1:	add    BYTE PTR [rdx],al
   14000b3a3:	add    BYTE PTR [rdx+0x74],dl
   14000b3a6:	ins    BYTE PTR es:[rdi],dx
   14000b3a7:	rex.XB (bad) 
   14000b3a9:	jo     0x14000b41f
   14000b3ab:	jne    0x14000b41f
   14000b3ad:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000b3b0:	outs   dx,BYTE PTR ds:[rsi]
   14000b3b1:	je     0x14000b418
   14000b3b3:	js     0x14000b429
   14000b3b5:	add    BYTE PTR [rcx],cl
   14000b3b7:	add    BYTE PTR [rdx+0x74],dl
   14000b3ba:	ins    BYTE PTR es:[rdi],dx
   14000b3bb:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000b3bd:	outs   dx,DWORD PTR ds:[rsi]
   14000b3be:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000b3c2:	jne    0x14000b432
   14000b3c4:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000b3c8:	outs   dx,BYTE PTR ds:[rsi]
   14000b3c9:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000b3cb:	je     0x14000b43f
   14000b3cd:	jns    0x14000b3cf
   14000b3cf:	add    BYTE PTR [rdi],cl
   14000b3d1:	add    BYTE PTR [rdx+0x74],dl
   14000b3d4:	ins    BYTE PTR es:[rdi],dx
   14000b3d5:	push   rsi
   14000b3d6:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000b3dd:	outs   dx,BYTE PTR ds:[rsi]
   14000b3de:	ja     0x14000b449
   14000b3e0:	outs   dx,BYTE PTR ds:[rsi]
   14000b3e1:	add    BYTE PTR fs:[rax],al
   14000b3e4:	adc    DWORD PTR [rax],eax
   14000b3e6:	push   rbp
   14000b3e7:	outs   dx,BYTE PTR ds:[rsi]
   14000b3e8:	push   0x6c646e61
   14000b3ed:	gs fs rex.RB js 0x14000b455
   14000b3f2:	gs jo  0x14000b469
   14000b3f5:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000b3fc:	gs jb  0x14000b3ff
   14000b3ff:	add    BYTE PTR [rbx+0x0],cl
   14000b402:	push   rsp
   14000b403:	gs jb  0x14000b473
   14000b406:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000b40d:	outs   dx,DWORD PTR ds:[rsi]
   14000b40e:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b411:	jae    0x14000b413
   14000b413:	add    BYTE PTR [rax],cl
   14000b415:	add    BYTE PTR [rsi+0x69],al
   14000b418:	outs   dx,BYTE PTR ds:[rsi]
   14000b419:	fs push rdx
   14000b41b:	gs jae 0x14000b48d
   14000b41e:	jne    0x14000b492
   14000b420:	movsxd esp,DWORD PTR [rbp+0x45]
   14000b423:	js     0x14000b47c
   14000b425:	add    BYTE PTR [rcx],bl
   14000b427:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   14000b42b:	fs push rdx
   14000b42d:	gs jae 0x14000b49f
   14000b430:	jne    0x14000b4a4
   14000b432:	movsxd esp,DWORD PTR [rbp+0x0]
   14000b435:	add    BYTE PTR [rax+rax*1],bl
   14000b438:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000b43a:	movsxd ebp,DWORD PTR [rbx+0x52]
   14000b43d:	gs jae 0x14000b4af
   14000b440:	jne    0x14000b4b4
   14000b442:	movsxd esp,DWORD PTR [rbp+0x0]
   14000b445:	add    BYTE PTR [rcx+0x70],ah
   14000b448:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e27bf
   14000b452:	outs   dx,DWORD PTR ds:[rsi]
   14000b453:	jb     0x14000b4ba
   14000b455:	sub    eax,0x2d6d6f63
   14000b45a:	ins    BYTE PTR es:[rdi],dx
   14000b45b:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31e192
   14000b461:	fs ins BYTE PTR es:[rdi],dx
   14000b463:	ins    BYTE PTR es:[rdi],dx
   14000b464:	add    BYTE PTR [rax],al
   14000b466:	(bad)  
   14000b467:	jo     0x14000b4d2
   14000b469:	sub    eax,0x772d736d
   14000b46e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b475:	sub    eax,0x726e6977
   14000b47a:	je     0x14000b4a9
   14000b47c:	ins    BYTE PTR es:[rdi],dx
   14000b47d:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e30e1b4
   14000b483:	fs ins BYTE PTR es:[rdi],dx
   14000b485:	ins    BYTE PTR es:[rdi],dx
   14000b486:	add    BYTE PTR [rax],al
   14000b488:	(bad)  
   14000b489:	jo     0x14000b4f4
   14000b48b:	sub    eax,0x772d736d
   14000b490:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b497:	sub    eax,0x726e6977
   14000b49c:	je     0x14000b4cb
   14000b49e:	jae    0x14000b514
   14000b4a0:	jb     0x14000b50b
   14000b4a2:	outs   dx,BYTE PTR ds:[rsi]
   14000b4a3:	addr32 sub eax,0x312d316c
   14000b4a9:	sub    eax,0x6c642e30
   14000b4ae:	ins    BYTE PTR es:[rdi],dx
   14000b4af:	add    BYTE PTR [rdx+0x50],dl
   14000b4b2:	rex.XB push r10
   14000b4b4:	push   rsp
   14000b4b5:	xor    al,0x2e
   14000b4b7:	fs ins BYTE PTR es:[rdi],dx
   14000b4b9:	ins    BYTE PTR es:[rdi],dx
   14000b4ba:	add    BYTE PTR [rax],al
   14000b4bc:	rex.WRXB
   14000b4bd:	rex.WR
   14000b4be:	rex.RB
   14000b4bf:	push   r13
   14000b4c1:	push   rsp
   14000b4c2:	xor    esi,DWORD PTR [rdx]
   14000b4c4:	cs fs ins BYTE PTR es:[rdi],dx
   14000b4c7:	ins    BYTE PTR es:[rdi],dx
   14000b4c8:	add    BYTE PTR [rax],al
   14000b4ca:	(bad)  
   14000b4cb:	jo     0x14000b536
   14000b4cd:	sub    eax,0x772d736d
   14000b4d2:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b4d9:	sub    eax,0x636e7973
   14000b4de:	push   0x2d316c2d
   14000b4e3:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64e319
   14000b4e9:	ins    BYTE PTR es:[rdi],dx
   14000b4ea:	add    BYTE PTR [rax],al
   14000b4ec:	(bad)  
   14000b4ed:	jo     0x14000b558
   14000b4ef:	sub    eax,0x772d736d
   14000b4f4:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b4fb:	sub    eax,0x636f7270
   14000b500:	gs jae 0x14000b576
   14000b503:	je     0x14000b56d
   14000b505:	jb     0x14000b56c
   14000b507:	(bad)  
   14000b508:	fs jae 0x14000b538
   14000b50b:	ins    BYTE PTR es:[rdi],dx
   14000b50c:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32e243
   14000b512:	fs ins BYTE PTR es:[rdi],dx
   14000b514:	ins    BYTE PTR es:[rdi],dx
   14000b515:	add    BYTE PTR [rcx+0x70],ah
   14000b518:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e288f
   14000b522:	outs   dx,DWORD PTR ds:[rsi]
   14000b523:	jb     0x14000b58a
   14000b525:	sub    eax,0x6f727265
   14000b52a:	jb     0x14000b594
   14000b52c:	(bad)  
   14000b52d:	outs   dx,BYTE PTR ds:[rsi]
   14000b52e:	fs ins BYTE PTR es:[rdi],dx
   14000b530:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000b537:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64e36e
   14000b53d:	ins    BYTE PTR es:[rdi],dx
   14000b53e:	add    BYTE PTR [rax],al
   14000b540:	(bad)  
   14000b541:	jo     0x14000b5ac
   14000b543:	sub    eax,0x772d736d
   14000b548:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b54f:	sub    eax,0x7262696c
   14000b554:	(bad)  
   14000b555:	jb     0x14000b5d0
   14000b557:	ins    BYTE PTR es:[rdi],dx
   14000b558:	outs   dx,DWORD PTR ds:[rsi]
   14000b559:	(bad)  
   14000b55a:	fs gs jb 0x14000b58b
   14000b55e:	ins    BYTE PTR es:[rdi],dx
   14000b55f:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30e297
   14000b565:	fs ins BYTE PTR es:[rdi],dx
   14000b567:	ins    BYTE PTR es:[rdi],dx
   14000b568:	add    BYTE PTR [rax],al
   14000b56a:	(bad)  
   14000b56b:	jo     0x14000b5d6
   14000b56d:	sub    eax,0x772d736d
   14000b572:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b579:	sub    eax,0x666f7270
   14000b57e:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000b586:	sub    eax,0x6c642e30
   14000b58b:	ins    BYTE PTR es:[rdi],dx
   14000b58c:	add    BYTE PTR [rax],al
   14000b58e:	(bad)  
   14000b58f:	jo     0x14000b5fa
   14000b591:	sub    eax,0x772d736d
   14000b596:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b59d:	sub    eax,0x69737973
   14000b5a2:	outs   dx,BYTE PTR ds:[rsi]
   14000b5a3:	outs   dx,WORD PTR ds:[rsi]
   14000b5a5:	sub    eax,0x322d316c
   14000b5aa:	sub    eax,0x6c642e31
   14000b5af:	ins    BYTE PTR es:[rdi],dx
   14000b5b0:	add    BYTE PTR [rax],al
   14000b5b2:	(bad)  
   14000b5b3:	jo     0x14000b61e
   14000b5b5:	sub    eax,0x772d736d
   14000b5ba:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000b5c1:	sub    eax,0x736c7472
   14000b5c6:	jne    0x14000b638
   14000b5c8:	jo     0x14000b639
   14000b5ca:	jb     0x14000b640
   14000b5cc:	sub    eax,0x322d316c
   14000b5d1:	sub    eax,0x6c642e30
   14000b5d6:	ins    BYTE PTR es:[rdi],dx
   14000b5d7:	add    BYTE PTR [rdx+0x6c745204],ah
   14000b5dd:	push   rax
   14000b5de:	jne    0x14000b642
   14000b5e0:	ins    BYTE PTR es:[rdi],dx
   14000b5e1:	imul   esi,DWORD PTR [rbx+0x68],0x53666e57
   14000b5e8:	je     0x14000b64b
   14000b5ea:	je     0x14000b651
   14000b5ec:	rex.R (bad) 
   14000b5ee:	je     0x14000b651
   14000b5f0:	add    BYTE PTR [rax],al
   14000b5f2:	outs   dx,BYTE PTR ds:[rsi]
   14000b5f3:	je     0x14000b659
   14000b5f5:	ins    BYTE PTR es:[rdi],dx
   14000b5f6:	ins    BYTE PTR es:[rdi],dx
   14000b5f7:	cs fs ins BYTE PTR es:[rdi],dx
   14000b5fa:	ins    BYTE PTR es:[rdi],dx
   14000b5fb:	add    BYTE PTR [rdi],al
   14000b5fd:	add    BYTE PTR [rbx+0x6f],al
   14000b600:	ins    DWORD PTR es:[rdi],dx
   14000b601:	ins    DWORD PTR es:[rdi],dx
   14000b602:	(bad)  
   14000b603:	outs   dx,BYTE PTR ds:[rsi]
   14000b604:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
   14000b60d:	addr32 jbe 0x14000b667
   14000b610:	add    BYTE PTR [rax],al
   14000b612:	(bad)  
   14000b613:	add    DWORD PTR [rbx+0x48],edx
   14000b616:	rex.RXB
   14000b617:	gs je  0x14000b665
   14000b61a:	outs   dx,BYTE PTR ds:[rsi]
   14000b61b:	outs   dx,DWORD PTR ds:[rsi]
   14000b61c:	ja     0x14000b68c
   14000b61e:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000b620:	ins    BYTE PTR es:[rdi],dx
   14000b621:	fs gs jb 0x14000b675
   14000b625:	(bad)  
   14000b626:	je     0x14000b690
   14000b628:	add    BYTE PTR [rax],al
   14000b62a:	mov    ch,0x1
   14000b62c:	push   rbx
   14000b62d:	push   0x456c6c65
   14000b632:	js     0x14000b699
   14000b634:	movsxd esi,DWORD PTR [rbp+0x74]
   14000b637:	gs rex.RB js 0x14000b692
   14000b63b:	add    BYTE PTR [rbx+0x48],dl
   14000b63e:	rex.RB
   14000b63f:	rex.WR
   14000b640:	xor    r14,QWORD PTR [rdx]
   14000b643:	cs fs ins BYTE PTR es:[rdi],dx
   14000b646:	ins    BYTE PTR es:[rdi],dx
   14000b647:	add    BYTE PTR [rcx+0x6d656d04],dl
   14000b64d:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000b650:	add    BYTE PTR [rax],al
   14000b652:	xchg   edx,eax
   14000b653:	add    al,0x6d
   14000b655:	gs ins DWORD PTR es:[rdi],dx
   14000b657:	movsxd esi,DWORD PTR [rax+0x79]
   14000b65a:	add    BYTE PTR [rax],al
   14000b65c:	xchg   esi,eax
   14000b65d:	add    al,0x6d
   14000b65f:	gs ins DWORD PTR es:[rdi],dx
   14000b661:	jae    0x14000b6c8
   14000b663:	je     0x14000b665
   14000b665:	add    BYTE PTR [rdx],al
   14000b667:	add    eax,0x63736377
   14000b66c:	ins    DWORD PTR es:[rdi],dx
   14000b66d:	jo     0x14000b66f
	...

Disassembly of section .data:

000000014000c000 <.data>:
   14000c000:	add    DWORD PTR [rax],eax
   14000c002:	add    BYTE PTR [rax],al
   14000c004:	add    BYTE PTR [rax],al
   14000c006:	add    BYTE PTR [rax],al
   14000c008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000c00e:	add    BYTE PTR [rax],al
   14000c010:	int    0x5d
   14000c012:	and    dl,dl
   14000c014:	data16 (bad) 
   14000c016:	(bad)  
   14000c017:	inc    DWORD PTR [rax]
   14000c019:	add    BYTE PTR [rax],al
   14000c01b:	add    BYTE PTR [rax],al
   14000c01d:	add    BYTE PTR [rax],al
   14000c01f:	add    BYTE PTR [rax-0x68],ah
   14000c022:	add    BYTE PTR [rax+0x1],al
   14000c025:	add    BYTE PTR [rax],al
   14000c027:	add    BYTE PTR [rax+0x1400098],dh
   14000c02d:	add    BYTE PTR [rax],al
   14000c02f:	add    al,cl
   14000c031:	cwde   
   14000c032:	add    BYTE PTR [rax+0x1],al
	...
   14000c045:	add    BYTE PTR [rax],al
   14000c047:	add    BYTE PTR [rax],ah
   14000c049:	rol    BYTE PTR [rax],0x40
   14000c04c:	add    DWORD PTR [rax],eax
   14000c04e:	add    BYTE PTR [rax],al
   14000c050:	add    DWORD PTR [rax],eax
   14000c052:	add    BYTE PTR [rax],al
   14000c054:	(bad)  
   14000c055:	addr32 mov cl,0xc6
   14000c058:	fistp  DWORD PTR ds:[rcx+0x46]
   14000c05c:	mov    edx,0xc0ccd1dc
   14000c061:	(bad)  
   14000c062:	(bad)  
   14000c063:	pushf  
	...
   14000c078:	call   0x14140c115
   14000c07d:	add    BYTE PTR [rax],al
   14000c07f:	add    BYTE PTR [rax],ah
   14000c081:	cdq    
   14000c082:	add    BYTE PTR [rax+0x1],al
   14000c085:	add    BYTE PTR [rax],al
   14000c087:	add    BYTE PTR [rax-0x67],bl
   14000c08a:	add    BYTE PTR [rax+0x1],al
   14000c08d:	add    BYTE PTR [rax],al
   14000c08f:	add    BYTE PTR [rax-0x68],ah
   14000c092:	add    BYTE PTR [rax+0x1],al
	...
   14000c0a5:	add    BYTE PTR [rax],al
   14000c0a7:	add    BYTE PTR [rdx],al
   14000c0a9:	add    BYTE PTR [rax],al
   14000c0ab:	add    BYTE PTR [rax],al
   14000c0ad:	add    BYTE PTR [rax],al
   14000c0af:	add    BYTE PTR [rax-0x40],dl
   14000c0b2:	add    BYTE PTR [rax+0x1],al
   14000c0b5:	add    BYTE PTR [rax],al
   14000c0b7:	add    BYTE PTR [rax],al
   14000c0b9:	add    BYTE PTR [rax],al
   14000c0bb:	add    dl,ch
   14000c0bd:	addr32 mov cl,0xc6
   14000c0c0:	fistp  DWORD PTR ds:[rcx+0x46]
   14000c0c4:	mov    edx,0xc0ccd1dc
   14000c0c9:	(bad)  
   14000c0ca:	(bad)  
   14000c0cb:	pushf  
	...
   14000c0e0:	add    eax,DWORD PTR [rax]
   14000c0e2:	add    BYTE PTR [rax],al
   14000c0e4:	add    BYTE PTR [rax],al
   14000c0e6:	add    BYTE PTR [rax],al
   14000c0e8:	mov    eax,0x14000c0
	...

Disassembly of section .pdata:

000000014000d000 <.pdata>:
   14000d000:	add    BYTE PTR [rax],dl
   14000d002:	add    BYTE PTR [rax],al
   14000d004:	jmp    0x11800d019
   14000d009:	movabs eax,ds:0x1163000010f00000
   14000d012:	add    BYTE PTR [rax],al
   14000d014:	loopne 0x14000cfb7
   14000d016:	add    BYTE PTR [rax],al
   14000d018:	jo     0x14000d02b
   14000d01a:	add    BYTE PTR [rax],al
   14000d01c:	xchg   esi,eax
   14000d01d:	adc    DWORD PTR [rax],eax
   14000d01f:	add    al,bl
   14000d021:	movabs eax,ds:0x11fd000011e00000
   14000d02a:	add    BYTE PTR [rax],al
   14000d02c:	fsub   DWORD PTR [rcx+0x12480000]
   14000d032:	add    BYTE PTR [rax],al
   14000d034:	mov    bh,0x12
   14000d036:	add    BYTE PTR [rax],al
   14000d038:	fsub   DWORD PTR [rcx+0x12c00000]
   14000d03e:	add    BYTE PTR [rax],al
   14000d040:	xchg   edi,eax
   14000d041:	adc    al,0x0
   14000d043:	add    al,ch
   14000d045:	movabs eax,ds:0x1520000014a00000
   14000d04e:	add    BYTE PTR [rax],al
   14000d050:	add    BYTE PTR [rdx+0x15500000],ah
   14000d056:	add    BYTE PTR [rax],al
   14000d058:	(bad)  
   14000d059:	adc    eax,0xa2100000
   14000d05e:	add    BYTE PTR [rax],al
   14000d060:	lock adc eax,0x16840000
   14000d066:	add    BYTE PTR [rax],al
   14000d068:	add    BYTE PTR [rdx+0x16900000],ah
   14000d06e:	add    BYTE PTR [rax],al
   14000d070:	(bad)  
   14000d071:	(bad)  
   14000d072:	add    BYTE PTR [rax],al
   14000d074:	and    al,0xa2
   14000d076:	add    BYTE PTR [rax],al
   14000d078:	nop
   14000d079:	(bad)  
   14000d07a:	add    BYTE PTR [rax],al
   14000d07c:	rcl    DWORD PTR [rdi],0x0
   14000d07f:	add    BYTE PTR [rdx+riz*4],bh
   14000d082:	add    BYTE PTR [rax],al
   14000d084:	rcl    BYTE PTR [rdi],1
   14000d086:	add    BYTE PTR [rax],al
   14000d088:	add    eax,0x3c000018
   14000d08d:	movabs ds:0x1845000018100000,al
   14000d096:	add    BYTE PTR [rax],al
   14000d098:	cmp    al,0xa2
   14000d09a:	add    BYTE PTR [rax],al
   14000d09c:	push   rax
   14000d09d:	sbb    BYTE PTR [rax],al
   14000d09f:	add    BYTE PTR [rcx+0x19],dl
   14000d0a2:	add    BYTE PTR [rax],al
   14000d0a4:	rex.R movabs ds:0x19e3000019600000,al
   14000d0ae:	add    BYTE PTR [rax],al
   14000d0b0:	add    BYTE PTR [rdx+0x19ec0000],ah
   14000d0b6:	add    BYTE PTR [rax],al
   14000d0b8:	enter  0x1b,0x0
   14000d0bc:	push   rsp
   14000d0bd:	movabs ds:0x1c3e00001bd00000,al
   14000d0c6:	add    BYTE PTR [rax],al
   14000d0c8:	jo     0x14000d06c
   14000d0ca:	add    BYTE PTR [rax],al
   14000d0cc:	rex.R sbb al,0x0
   14000d0cf:	add    ch,dh
   14000d0d1:	sbb    al,0x0
   14000d0d3:	add    BYTE PTR [rax-0x5e],bh
   14000d0d6:	add    BYTE PTR [rax],al
   14000d0d8:	cld    
   14000d0d9:	sbb    al,0x0
   14000d0db:	add    BYTE PTR [rsi+0x1e],bh
   14000d0de:	add    BYTE PTR [rax],al
   14000d0e0:	test   BYTE PTR [rdx+0x1e840000],ah
   14000d0e6:	add    BYTE PTR [rax],al
   14000d0e8:	cmp    al,0x1f
   14000d0ea:	add    BYTE PTR [rax],al
   14000d0ec:	pushf  
   14000d0ed:	movabs ds:0x207600001f440000,al
   14000d0f6:	add    BYTE PTR [rax],al
   14000d0f8:	mov    eax,0x800000a2
   14000d0fd:	and    BYTE PTR [rax],al
   14000d0ff:	add    BYTE PTR [rdi],cl
   14000d101:	and    al,BYTE PTR [rax]
   14000d103:	add    ah,cl
   14000d105:	movabs ds:0x2437000022200000,al
   14000d10e:	add    BYTE PTR [rax],al
   14000d110:	call   0x18000d1b7
   14000d115:	and    al,0x0
   14000d117:	add    BYTE PTR [rsi],al
   14000d119:	sub    BYTE PTR [rax],al
   14000d11b:	add    BYTE PTR [rbx+riz*4],al
   14000d11e:	add    BYTE PTR [rax],al
   14000d120:	adc    BYTE PTR [rax],ch
   14000d122:	add    BYTE PTR [rax],al
   14000d124:	and    eax,0x2800002a
   14000d129:	movabs ds:0x2ba400002a300000,eax
   14000d132:	add    BYTE PTR [rax],al
   14000d134:	movabs ds:0x2fe600002bb00000,rax
   14000d13e:	add    BYTE PTR [rax],al
   14000d140:	pop    rsp
   14000d141:	movabs ds:0x30af00002fec0000,eax
   14000d14a:	add    BYTE PTR [rax],al
   14000d14c:	and    BYTE PTR [rbx+0x30c00000],0x0
   14000d153:	add    BYTE PTR [rdx],bl
   14000d155:	xor    DWORD PTR [rax],eax
   14000d157:	add    BYTE PTR [rdx+riz*4],bh
   14000d15a:	add    BYTE PTR [rax],al
   14000d15c:	and    BYTE PTR [rcx],dh
   14000d15e:	add    BYTE PTR [rax],al
   14000d160:	cmp    al,0x33
   14000d162:	add    BYTE PTR [rax],al
   14000d164:	xchg   esp,eax
   14000d165:	movabs ds:0x3511000033500000,eax
   14000d16e:	add    BYTE PTR [rax],al
   14000d170:	lods   al,BYTE PTR ds:[rsi]
   14000d171:	movabs ds:0x3981000035200000,eax
   14000d17a:	add    BYTE PTR [rax],al
   14000d17c:	int3   
   14000d17d:	movabs ds:0x3e17000039880000,eax
   14000d186:	add    BYTE PTR [rax],al
   14000d188:	lock movabs ds:0x3f5100003e200000,eax
   14000d192:	add    BYTE PTR [rax],al
   14000d194:	and    al,0xa2
   14000d196:	add    BYTE PTR [rax],al
   14000d198:	pop    rax
   14000d199:	(bad)  
   14000d19a:	add    BYTE PTR [rax],al
   14000d19c:	cmc    
   14000d19d:	add    BYTE PTR [r8],al
   14000d1a0:	or     al,0xa4
   14000d1a2:	add    BYTE PTR [rax],al
   14000d1a4:	cld    
   14000d1a5:	add    BYTE PTR [r8],al
   14000d1a8:	jg     0x14000d1ec
   14000d1aa:	add    BYTE PTR [rax],al
   14000d1ac:	js     0x14000d150
   14000d1ae:	add    BYTE PTR [rax],al
   14000d1b0:	nop
   14000d1b1:	rex.X add BYTE PTR [rax],al
   14000d1b4:	adc    eax,0x34000043
   14000d1b9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d1ba:	add    BYTE PTR [rax],al
   14000d1bc:	and    BYTE PTR [rbx+0x0],al
   14000d1bf:	add    BYTE PTR [rbx+rax*2-0x5bc00000],cl
   14000d1c6:	add    BYTE PTR [rax],al
   14000d1c8:	movabs al,ds:0xd8000043c1000043
   14000d1d1:	movabs eax,ds:0x442b000043f00000
   14000d1da:	add    BYTE PTR [rax],al
   14000d1dc:	js     0x14000d180
   14000d1de:	add    BYTE PTR [rax],al
   14000d1e0:	rex
   14000d1e1:	add    BYTE PTR [rax],r8b
   14000d1e4:	and    BYTE PTR [rbp+0x0],al
   14000d1e7:	add    BYTE PTR [rax],al
   14000d1e9:	movabs ds:0x4682000045280000,al
   14000d1f2:	add    BYTE PTR [rax],al
   14000d1f4:	mov    eax,0x880000a2
   14000d1f9:	rex.RX add BYTE PTR [rax],r8b
   14000d1fc:	xchg   DWORD PTR [rdi+0x0],eax
   14000d1ff:	add    BYTE PTR [rax],dl
   14000d201:	movabs ds:0x497d000047900000,al
   14000d20a:	add    BYTE PTR [rax],al
   14000d20c:	push   rax
   14000d20d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d20e:	add    BYTE PTR [rax],al
   14000d210:	nop
   14000d211:	rex.WB add BYTE PTR [r8],al
   14000d214:	cmp    BYTE PTR [rdx+0x0],cl
   14000d217:	add    BYTE PTR [rax],dl
   14000d219:	movabs ds:0x4aa000004a600000,al
   14000d222:	add    BYTE PTR [rax],al
   14000d224:	js     0x14000d1c8
   14000d226:	add    BYTE PTR [rax],al
   14000d228:	mov    al,0x4a
   14000d22a:	add    BYTE PTR [rax],al
   14000d22c:	rex.WXB add BYTE PTR es:[r8],al
   14000d230:	add    BYTE PTR [rdx+0x4b300000],ah
   14000d236:	add    BYTE PTR [rax],al
   14000d238:	jnp    0x14000d285
   14000d23a:	add    BYTE PTR [rax],al
   14000d23c:	cmp    al,0xa2
   14000d23e:	add    BYTE PTR [rax],al
   14000d240:	nop
   14000d241:	rex.WXB add BYTE PTR [r8],al
   14000d244:	(bad)  
   14000d245:	rex.WXB add BYTE PTR [r8],al
   14000d248:	fsub   DWORD PTR [rcx+0x4bdc0000]
   14000d24e:	add    BYTE PTR [rax],al
   14000d250:	cmp    cl,BYTE PTR [rbp+0x0]
   14000d253:	add    BYTE PTR [rax-0x5c],ch
   14000d256:	add    BYTE PTR [rax],al
   14000d258:	rex
   14000d259:	rex.WRB add BYTE PTR [r8],r8b
   14000d25c:	(bad)  
   14000d25d:	rex.WRX add BYTE PTR [rax],r8b
   14000d260:	test   BYTE PTR [rax+rax*1+0x4e3800],ah
   14000d267:	add    BYTE PTR [rdx+0x51],al
   14000d26a:	add    BYTE PTR [rax],al
   14000d26c:	cwde   
   14000d26d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d26e:	add    BYTE PTR [rax],al
   14000d270:	rex.W push rcx
   14000d272:	add    BYTE PTR [rax],al
   14000d274:	mov    edx,DWORD PTR [rdx+0x0]
   14000d277:	add    BYTE PTR [rdx+riz*4],ah
   14000d27a:	add    BYTE PTR [rax],al
   14000d27c:	xchg   esp,eax
   14000d27d:	push   rdx
   14000d27e:	add    BYTE PTR [rax],al
   14000d280:	and    BYTE PTR [rbx+0x0],dl
   14000d283:	add    BYTE PTR [rax+0x280000a3],al
   14000d289:	push   rbx
   14000d28a:	add    BYTE PTR [rax],al
   14000d28c:	push   rbp
   14000d28d:	push   rsp
   14000d28e:	add    BYTE PTR [rax],al
   14000d290:	mov    al,0xa4
   14000d292:	add    BYTE PTR [rax],al
   14000d294:	pop    rsp
   14000d295:	push   rsp
   14000d296:	add    BYTE PTR [rax],al
   14000d298:	rex.WXB push r13
   14000d29a:	add    BYTE PTR [rax],al
   14000d29c:	mov    al,0xa4
   14000d29e:	add    BYTE PTR [rax],al
   14000d2a0:	push   rsp
   14000d2a1:	push   rbp
   14000d2a2:	add    BYTE PTR [rax],al
   14000d2a4:	(bad)  
   14000d2a5:	pop    rbx
   14000d2a6:	add    BYTE PTR [rax],al
   14000d2a8:	(bad)  
   14000d2a9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d2aa:	add    BYTE PTR [rax],al
   14000d2ac:	and    al,0x5b
   14000d2ae:	add    BYTE PTR [rax],al
   14000d2b0:	mov    ds,WORD PTR [rax+rax*1+0x0]
   14000d2b4:	fsub   QWORD PTR [rax+rax*1+0x5c9400]
   14000d2bb:	add    bh,bl
   14000d2bd:	pop    rbp
   14000d2be:	add    BYTE PTR [rax],al
   14000d2c0:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d2c2:	add    BYTE PTR [rax],al
   14000d2c4:	lock pop rbp
   14000d2c6:	add    BYTE PTR [rax],al
   14000d2c8:	cwde   
   14000d2c9:	pop    rsi
   14000d2ca:	add    BYTE PTR [rax],al
   14000d2cc:	adc    BYTE PTR [rdx+0x5ea00000],ah
   14000d2d2:	add    BYTE PTR [rax],al
   14000d2d4:	(bad)  
   14000d2d5:	pop    rdi
   14000d2d6:	add    BYTE PTR [rax],al
   14000d2d8:	add    BYTE PTR [rdx+0x5f200000],ah
   14000d2de:	add    BYTE PTR [rax],al
   14000d2e0:	gs add BYTE PTR fs:[rax],al
   14000d2e4:	add    al,0xa5
   14000d2e6:	add    BYTE PTR [rax],al
   14000d2e8:	ins    BYTE PTR es:[rdi],dx
   14000d2e9:	add    BYTE PTR fs:[rax],al
   14000d2ec:	call   0x16400d357
   14000d2f1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d2f2:	add    BYTE PTR [rax],al
   14000d2f4:	lock data16 add BYTE PTR [rax],al
   14000d2f8:	and    al,0x68
   14000d2fa:	add    BYTE PTR [rax],al
   14000d2fc:	cmp    al,0xa5
   14000d2fe:	add    BYTE PTR [rax],al
   14000d300:	sub    al,0x68
   14000d302:	add    BYTE PTR [rax],al
   14000d304:	sbb    ch,BYTE PTR [rcx+0x0]
   14000d307:	add    BYTE PTR [rax-0x5b],dl
   14000d30a:	add    BYTE PTR [rax],al
   14000d30c:	and    BYTE PTR [rcx+0x0],ch
   14000d30f:	add    BYTE PTR [rbx],ah
   14000d311:	push   0x0
   14000d313:	add    BYTE PTR [rbp+riz*4+0x0],ah
   14000d317:	add    BYTE PTR [rdx+rbp*2],ch
   14000d31a:	add    BYTE PTR [rax],al
   14000d31c:	imul   eax,DWORD PTR gs:[rax],0x0
   14000d320:	js     0x14000d2c7
   14000d322:	add    BYTE PTR [rax],al
   14000d324:	ins    BYTE PTR es:[rdi],dx
   14000d325:	imul   eax,DWORD PTR [rax],0x0
   14000d328:	outs   dx,DWORD PTR ds:[rsi]
   14000d329:	ins    BYTE PTR es:[rdi],dx
   14000d32a:	add    BYTE PTR [rax],al
   14000d32c:	nop
   14000d32d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d32e:	add    BYTE PTR [rax],al
   14000d330:	js     0x14000d39e
   14000d332:	add    BYTE PTR [rax],al
   14000d334:	mov    ah,0x6d
   14000d336:	add    BYTE PTR [rax],al
   14000d338:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d339:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d33a:	add    BYTE PTR [rax],al
   14000d33c:	mov    esp,0xc700006d
   14000d341:	outs   dx,BYTE PTR ds:[rsi]
   14000d342:	add    BYTE PTR [rax],al
   14000d344:	mov    al,0xa5
   14000d346:	add    BYTE PTR [rax],al
   14000d348:	shr    BYTE PTR [rsi+0x0],1
   14000d34b:	add    BYTE PTR [rax],cl
   14000d34d:	jo     0x14000d34f
   14000d34f:	add    ah,al
   14000d351:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d352:	add    BYTE PTR [rax],al
   14000d354:	adc    BYTE PTR [rax+0x0],dh
   14000d357:	add    BYTE PTR [rcx+0x71],ch
   14000d35a:	add    BYTE PTR [rax],al
   14000d35c:	fsub   QWORD PTR [rbp+0x71700000]
   14000d362:	add    BYTE PTR [rax],al
   14000d364:	fidiv  WORD PTR [rcx+0x0]
   14000d367:	add    ah,bh
   14000d369:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d36a:	add    BYTE PTR [rax],al
   14000d36c:	in     al,0x71
   14000d36e:	add    BYTE PTR [rax],al
   14000d370:	(bad)
   14000d373:	add    BYTE PTR [rax],cl
   14000d375:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d376:	add    BYTE PTR [rax],al
   14000d378:	int3   
   14000d379:	jae    0x14000d37b
   14000d37b:	add    bh,cl
   14000d37d:	je     0x14000d37f
   14000d37f:	add    BYTE PTR [rax-0x5b],dl
   14000d382:	add    BYTE PTR [rax],al
   14000d384:	fdiv   DWORD PTR [rax+rax*1+0x0]
   14000d388:	rex.WR jne 0x14000d38b
   14000d38b:	add    BYTE PTR [rsi+riz*4],ah
   14000d38e:	add    BYTE PTR [rax],al
   14000d390:	push   rsp
   14000d391:	jne    0x14000d393
   14000d393:	add    dl,dl
   14000d395:	jne    0x14000d397
   14000d397:	add    BYTE PTR [rsi+riz*4],ah
   14000d39a:	add    BYTE PTR [rax],al
   14000d39c:	fdiv   DWORD PTR [rbp+0x0]
   14000d39f:	add    BYTE PTR [rax],ch
   14000d3a1:	ja     0x14000d3a3
   14000d3a3:	add    BYTE PTR [rsi+riz*4],dh
   14000d3a6:	add    BYTE PTR [rax],al
   14000d3a8:	nop
   14000d3a9:	ja     0x14000d3ab
   14000d3ab:	add    BYTE PTR [rax],dl
   14000d3ad:	js     0x14000d3af
   14000d3af:	add    BYTE PTR [rax+0x180000a3],al
   14000d3b5:	js     0x14000d3b7
   14000d3b7:	add    BYTE PTR [rdx+rdi*2-0x59b40000],cl
   14000d3be:	add    BYTE PTR [rax],al
   14000d3c0:	xchg   esp,eax
   14000d3c1:	jp     0x14000d3c3
   14000d3c3:	add    ch,cl
   14000d3c5:	jp     0x14000d3c7
   14000d3c7:	add    BYTE PTR [rax-0x5a],dh
   14000d3ca:	add    BYTE PTR [rax],al
   14000d3cc:	(bad)  
   14000d3cd:	jp     0x14000d3cf
   14000d3cf:	add    BYTE PTR [rcx],dl
   14000d3d1:	jge    0x14000d3d3
   14000d3d3:	add    BYTE PTR [rax-0x5a],bh
   14000d3d6:	add    BYTE PTR [rax],al
   14000d3d8:	sbb    BYTE PTR [rbp+0x0],bh
   14000d3db:	add    BYTE PTR [rax+0x7d],dl
   14000d3de:	add    BYTE PTR [rax],al
   14000d3e0:	nop
   14000d3e1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d3e2:	add    BYTE PTR [rax],al
   14000d3e4:	pop    rax
   14000d3e5:	jge    0x14000d3e7
   14000d3e7:	add    bh,cl
   14000d3e9:	jge    0x14000d3eb
   14000d3eb:	add    BYTE PTR [rax-0x27ffff5a],bl
   14000d3f1:	jge    0x14000d3f3
   14000d3f3:	add    BYTE PTR [rdx+0x7e],bh
   14000d3f6:	add    BYTE PTR [rax],al
   14000d3f8:	test   al,0xa6
   14000d3fa:	add    BYTE PTR [rax],al
   14000d3fc:	cmp    BYTE PTR [rsi+0x0],0x0
   14000d400:	movabs al,ds:0xa80000a57800007f
   14000d409:	jg     0x14000d40b
   14000d40b:	add    BYTE PTR [rdi-0x47ffff80],al
   14000d411:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d412:	add    BYTE PTR [rax],al
   14000d414:	mov    al,0x80
   14000d416:	add    BYTE PTR [rax],al
   14000d418:	cwde   
   14000d419:	add    DWORD PTR [rax],0xa38000
   14000d41f:	add    BYTE PTR [rax+0x2d000081],ah
   14000d425:	(bad)  
   14000d426:	add    BYTE PTR [rax],al
   14000d428:	shl    BYTE PTR [rsi-0x7dc00000],1
   14000d42e:	add    BYTE PTR [rax],al
   14000d430:	jae    0xe1d8d436
   14000d436:	add    BYTE PTR [rax],al
   14000d438:	and    BYTE PTR [rbx-0x7c970000],al
   14000d43e:	add    BYTE PTR [rax],al
   14000d440:	in     al,0xa6
   14000d442:	add    BYTE PTR [rax],al
   14000d444:	jo     0x14000d3c9
   14000d446:	add    BYTE PTR [rax],al
   14000d448:	(bad)  
   14000d449:	add    DWORD PTR [rax],0x0
   14000d44c:	fsub   DWORD PTR [rcx-0x7c780000]
   14000d452:	add    BYTE PTR [rax],al
   14000d454:	fiadd  WORD PTR [rbp-0x59140000]
   14000d45a:	add    BYTE PTR [rax],al
   14000d45c:	lock test DWORD PTR [rax],eax
   14000d45f:	add    BYTE PTR [rsi],cl
   14000d461:	xchg   BYTE PTR [rax],al
   14000d463:	add    BYTE PTR [rax],ah
   14000d465:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d466:	add    BYTE PTR [rax],al
   14000d468:	adc    al,0x86
   14000d46a:	add    BYTE PTR [rax],al
   14000d46c:	mov    dl,0x86
   14000d46e:	add    BYTE PTR [rax],al
   14000d470:	and    al,0xa7
   14000d472:	add    BYTE PTR [rax],al
   14000d474:	mov    eax,0xcf000086
   14000d479:	xchg   BYTE PTR [rax],al
   14000d47b:	add    al,bl
   14000d47d:	movabs eax,ds:0x8719000086e00000
   14000d486:	add    BYTE PTR [rax],al
   14000d488:	fsub   DWORD PTR [rcx-0x78e00000]
   14000d48e:	add    BYTE PTR [rax],al
   14000d490:	cmp    BYTE PTR [rdi-0x5e280000],al
   14000d496:	add    BYTE PTR [rax],al
   14000d498:	xchg   QWORD PTR [rax],r8
   14000d49b:	add    BYTE PTR [rax+0x48000087],ah
   14000d4a1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d4a2:	add    BYTE PTR [rax],al
   14000d4a4:	test   al,0x87
   14000d4a6:	add    BYTE PTR [rax],al
   14000d4a8:	in     eax,dx
   14000d4a9:	xchg   DWORD PTR [rax],eax
   14000d4ab:	add    BYTE PTR [rdx+riz*4],bh
   14000d4ae:	add    BYTE PTR [rax],al
   14000d4b0:	push   rax
   14000d4b1:	mov    BYTE PTR [rax],al
   14000d4b3:	add    BYTE PTR [rbp+0x68000088],bl
   14000d4b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d4ba:	add    BYTE PTR [rax],al
   14000d4bc:	in     al,0x88
   14000d4be:	add    BYTE PTR [rax],al
   14000d4c0:	mov    ah,0x89
   14000d4c2:	add    BYTE PTR [rax],al
   14000d4c4:	xchg   esp,eax
   14000d4c5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d4c6:	add    BYTE PTR [rax],al
   14000d4c8:	cld    
   14000d4c9:	mov    DWORD PTR [rax],eax
   14000d4cb:	add    BYTE PTR [rax],dh
   14000d4cd:	mov    al,BYTE PTR [rax]
   14000d4cf:	add    BYTE PTR [rdx+riz*4],bh
   14000d4d2:	add    BYTE PTR [rax],al
   14000d4d4:	mov    al,BYTE PTR [rax]
   14000d4d7:	add    BYTE PTR [rcx-0x5fffff75],dh
   14000d4dd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d4de:	add    BYTE PTR [rax],al
   14000d4e0:	call   0x14500d570
   14000d4e5:	mov    WORD PTR [rax],es
   14000d4e7:	add    al,bl
   14000d4e9:	movabs eax,ds:0x8c6f00008c0c0000
   14000d4f2:	add    BYTE PTR [rax],al
   14000d4f4:	cmp    al,0xa2
   14000d4f6:	add    BYTE PTR [rax],al
   14000d4f8:	mov    al,0x8c
   14000d4fa:	add    BYTE PTR [rax],al
   14000d4fc:	mov    dl,0x8c
   14000d4fe:	add    BYTE PTR [rax],al
   14000d500:	test   al,0xa7
   14000d502:	add    BYTE PTR [rax],al
   14000d504:	(bad)  
   14000d505:	mov    WORD PTR [rax],es
   14000d507:	add    ah,ah
   14000d509:	mov    WORD PTR [rax],es
   14000d50b:	add    BYTE PTR [rdi+riz*4-0x73160000],cl
   14000d512:	add    BYTE PTR [rax],al
   14000d514:	add    eax,0x8c00008d
   14000d519:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d51a:	add    BYTE PTR [rax],al
   14000d51c:	adc    BYTE PTR [rbp-0x72d00000],cl
   14000d522:	add    BYTE PTR [rax],al
   14000d524:	mov    WORD PTR [rdi-0x72c00000],fs
   14000d52a:	add    BYTE PTR [rax],al
   14000d52c:	or     DWORD PTR [rbp-0x5e200000],0x8de00000
   14000d536:	add    BYTE PTR [rax],al
   14000d538:	clc    
   14000d539:	lea    eax,[rax]
   14000d53b:	add    al,bl
   14000d53d:	.byte 0xa1
	...

Disassembly of section .rsrc:

000000014000e000 <.rsrc>:
	...
   14000e00c:	add    DWORD PTR [rax],eax
   14000e00e:	add    al,BYTE PTR [rax]
   14000e010:	call   0x16880e015
   14000e015:	add    BYTE PTR [rax],al
   14000e017:	adc    BYTE PTR [rax],0x0
   14000e01a:	add    BYTE PTR [rax],al
   14000e01c:	add    BYTE PTR [rax],al
   14000e01f:	sbb    BYTE PTR [rax],0x0
   14000e022:	add    BYTE PTR [rax],al
   14000e024:	pop    rax
   14000e025:	add    BYTE PTR [rax],al
   14000e027:	add    BYTE PTR [rax],0x0
	...
   14000e036:	add    DWORD PTR [rax],eax
   14000e038:	add    DWORD PTR [rax],eax
   14000e03a:	add    BYTE PTR [rax],al
   14000e03c:	jo     0x14000e03e
   14000e03e:	add    BYTE PTR [rax+0x0],al
	...
   14000e04c:	add    BYTE PTR [rax],al
   14000e04e:	add    DWORD PTR [rax],eax
   14000e050:	add    DWORD PTR [rax],eax
   14000e052:	add    BYTE PTR [rax],al
   14000e054:	mov    BYTE PTR [rax],al
   14000e056:	add    BYTE PTR [rax+0x0],al
	...
   14000e064:	add    BYTE PTR [rax],al
   14000e066:	add    DWORD PTR [rax],eax
   14000e068:	add    DWORD PTR [rax],eax
   14000e06a:	add    BYTE PTR [rax],al
   14000e06c:	movabs al,ds:0x800000
	...
   14000e07d:	add    BYTE PTR [rcx],al
   14000e07f:	add    BYTE PTR [rcx],cl
   14000e081:	add    al,0x0
   14000e083:	add    BYTE PTR [rax+0x0],bh
	...
   14000e095:	add    BYTE PTR [rcx],al
   14000e097:	add    BYTE PTR [rcx],cl
   14000e099:	add    al,0x0
   14000e09b:	add    al,cl
	...
   14000e0ad:	add    BYTE PTR [rcx],al
   14000e0af:	add    BYTE PTR [rcx],cl
   14000e0b1:	add    al,0x0
   14000e0b3:	add    al,bl
   14000e0b5:	add    BYTE PTR [rax],al
   14000e0b7:	add    BYTE PTR [rax-0x18],al
   14000e0ba:	add    BYTE PTR [rax],al
   14000e0bc:	enter  0x0,0x0
	...
   14000e0c8:	test   al,0xe4
   14000e0ca:	add    BYTE PTR [rax],al
   14000e0cc:	cwde   
   14000e0cd:	add    eax,DWORD PTR [rax]
	...
   14000e0d7:	add    al,dh
   14000e0d9:	loopne 0x14000e0db
   14000e0db:	add    BYTE PTR [rax+0x3],bh
   14000e0e1:	add    BYTE PTR [rax],al
   14000e0e3:	add    BYTE PTR [rax],al
   14000e0e5:	add    BYTE PTR [rax],al
   14000e0e7:	add    BYTE PTR [rbx],al
   14000e0e9:	add    BYTE PTR [rbp+0x0],cl
   14000e0ec:	push   rbp
   14000e0ed:	add    BYTE PTR [rcx+0x0],cl
   14000e0f0:	cmp    al,0x3f
   14000e0f2:	js     0x14000e161
   14000e0f4:	ins    BYTE PTR es:[rdi],dx
   14000e0f5:	and    BYTE PTR [rsi+0x65],dh
   14000e0f8:	jb     0x14000e16d
   14000e0fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000e101:	xor    BYTE PTR [rdx],ah
   14000e103:	and    BYTE PTR [rbp+0x6e],ah
   14000e106:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000e109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000e110:	rex.RX sub eax,0x73202238
   14000e116:	je     0x14000e179
   14000e118:	outs   dx,BYTE PTR ds:[rsi]
   14000e119:	fs (bad) 
   14000e11b:	ins    BYTE PTR es:[rdi],dx
   14000e11c:	outs   dx,DWORD PTR ds:[rsi]
   14000e11d:	outs   dx,BYTE PTR ds:[rsi]
   14000e11e:	gs cmp eax,0x73657922
   14000e124:	and    bh,BYTE PTR [rdi]
   14000e126:	ds or  eax,0x2d213c0a
   14000e12c:	sub    eax,0x706f4320
   14000e131:	jns    0x14000e1a5
   14000e133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000e13a:	sub    DWORD PTR [rax],esp
   14000e13c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000e144:	je     0x14000e166
   14000e146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e148:	jb     0x14000e1ba
   14000e14a:	outs   dx,DWORD PTR ds:[rsi]
   14000e14b:	jb     0x14000e1ae
   14000e14d:	je     0x14000e1b8
   14000e14f:	outs   dx,DWORD PTR ds:[rsi]
   14000e150:	outs   dx,BYTE PTR ds:[rsi]
   14000e151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e1f84
   14000e157:	cmp    al,0x61
   14000e159:	jae    0x14000e1ce
   14000e15b:	gs ins DWORD PTR es:[rdi],dx
   14000e15d:	(bad)  
   14000e15e:	ins    BYTE PTR es:[rdi],dx
   14000e15f:	jns    0x14000e16e
   14000e161:	or     ah,BYTE PTR [rax]
   14000e163:	and    BYTE PTR [rax],ah
   14000e165:	js     0x14000e1d4
   14000e167:	ins    BYTE PTR es:[rdi],dx
   14000e168:	outs   dx,BYTE PTR ds:[rsi]
   14000e169:	jae    0x14000e1a8
   14000e16b:	and    dh,BYTE PTR [rbp+0x72]
   14000e16e:	outs   dx,BYTE PTR ds:[rsi]
   14000e16f:	cmp    dh,BYTE PTR [rbx+0x63]
   14000e172:	push   0x73616d65
   14000e177:	sub    eax,0x7263696d
   14000e17c:	outs   dx,DWORD PTR ds:[rsi]
   14000e17d:	jae    0x14000e1ee
   14000e17f:	data16 je 0x14000e1af
   14000e182:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e185:	cmp    ah,BYTE PTR [rcx+0x73]
   14000e188:	ins    DWORD PTR es:[rdi],dx
   14000e189:	cs jbe 0x14000e1bd
   14000e18c:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021019c
   14000e192:	js     0x14000e201
   14000e194:	ins    BYTE PTR es:[rdi],dx
   14000e195:	outs   dx,BYTE PTR ds:[rsi]
   14000e196:	jae    0x14000e1d2
   14000e198:	(bad)  
   14000e199:	jae    0x14000e208
   14000e19b:	jbe    0x14000e1d0
   14000e19d:	cmp    eax,0x6e727522
   14000e1a2:	cmp    dh,BYTE PTR [rbx+0x63]
   14000e1a5:	push   0x73616d65
   14000e1aa:	sub    eax,0x7263696d
   14000e1af:	outs   dx,DWORD PTR ds:[rsi]
   14000e1b0:	jae    0x14000e221
   14000e1b2:	data16 je 0x14000e1e2
   14000e1b5:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e1b8:	cmp    ah,BYTE PTR [rcx+0x73]
   14000e1bb:	ins    DWORD PTR es:[rdi],dx
   14000e1bc:	cs jbe 0x14000e1f2
   14000e1bf:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x1602101cf
   14000e1c5:	ins    DWORD PTR es:[rdi],dx
   14000e1c6:	(bad)  
   14000e1c7:	outs   dx,BYTE PTR ds:[rsi]
   14000e1c8:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000e1cf:	jb     0x14000e244
   14000e1d1:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000e1d8:	xor    BYTE PTR [rdx],ah
   14000e1da:	ds or  eax,0x613c200a
   14000e1e0:	jae    0x14000e255
   14000e1e2:	gs ins DWORD PTR es:[rdi],dx
   14000e1e4:	(bad)  
   14000e1e5:	ins    BYTE PTR es:[rdi],dx
   14000e1e6:	jns    0x14000e231
   14000e1e8:	fs outs dx,BYTE PTR gs:[rsi]
   14000e1eb:	je     0x14000e256
   14000e1ed:	je     0x14000e268
   14000e1ef:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000e1f3:	gs cmp eax,0x6e697722
   14000e1f9:	xor    esi,DWORD PTR [rdx]
   14000e1fb:	and    ah,BYTE PTR [rax]
   14000e1fd:	jo     0x14000e274
   14000e1ff:	(bad)  
   14000e200:	ins    BYTE PTR es:[rdi],dx
   14000e201:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14000e208:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14000e20c:	and    dh,BYTE PTR [rsi]
   14000e20e:	xor    eax,0x36623539
   14000e213:	xor    al,0x31
   14000e215:	xor    al,0x34
   14000e217:	movsxd esp,DWORD PTR [rbx+0x66]
   14000e21a:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14000e21e:	and    BYTE PTR [rsi+0x61],ch
   14000e221:	ins    DWORD PTR es:[rdi],dx
   14000e222:	gs cmp eax,0x63694d22
   14000e228:	jb     0x14000e299
   14000e22a:	jae    0x14000e29b
   14000e22c:	data16 je 0x14000e25d
   14000e22f:	push   rdi
   14000e230:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000e237:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000e239:	fs rex.W
   14000e23b:	gs ins BYTE PTR es:[rdi],dx
   14000e23d:	jo     0x14000e2a4
   14000e23f:	jb     0x14000e263
   14000e241:	and    BYTE PTR [rsi+0x65],dh
   14000e244:	jb     0x14000e2b9
   14000e246:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000e24d:	xor    DWORD PTR [rsi],ebp
   14000e24f:	xor    BYTE PTR [rsi],ch
   14000e251:	xor    BYTE PTR [rdx],ah
   14000e253:	and    BYTE PTR [rax+0x72],dh
   14000e256:	outs   dx,DWORD PTR ds:[rsi]
   14000e257:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e25a:	jae    0x14000e2cb
   14000e25c:	jb     0x14000e29f
   14000e25e:	jb     0x14000e2c3
   14000e260:	push   0x63657469
   14000e265:	je     0x14000e2dc
   14000e267:	jb     0x14000e2ce
   14000e269:	cmp    eax,0x646d6122
   14000e26e:	ss xor al,0x22
   14000e271:	(bad)  
   14000e272:	ds or  eax,0x643c200a
   14000e278:	gs jae 0x14000e2de
   14000e27b:	jb     0x14000e2e6
   14000e27d:	jo     0x14000e2f3
   14000e27f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6165463e
   14000e286:	je     0x14000e2fd
   14000e288:	jb     0x14000e2ef
   14000e28a:	jae    0x14000e2ac
   14000e28c:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   14000e28e:	and    BYTE PTR [rbp+riz*2+0x6d],al
   14000e292:	(bad)  
   14000e293:	outs   dx,BYTE PTR ds:[rsi]
   14000e294:	and    BYTE PTR fs:[rax+0x65],cl
   14000e298:	ins    BYTE PTR es:[rdi],dx
   14000e299:	jo     0x14000e300
   14000e29b:	jb     0x14000e2bd
   14000e29d:	push   rbp
   14000e29e:	rex.WB cmp al,0x2f
   14000e2a1:	fs gs jae 0x14000e308
   14000e2a5:	jb     0x14000e310
   14000e2a7:	jo     0x14000e31d
   14000e2a9:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a0d3e
   14000e2b0:	cmp    al,0x74
   14000e2b2:	jb     0x14000e329
   14000e2b4:	jae    0x14000e32a
   14000e2b6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000e2b8:	outs   dx,WORD PTR ds:[rsi]
   14000e2ba:	and    BYTE PTR [rax+0x6d],bh
   14000e2bd:	ins    BYTE PTR es:[rdi],dx
   14000e2be:	outs   dx,BYTE PTR ds:[rsi]
   14000e2bf:	jae    0x14000e2fe
   14000e2c1:	and    dh,BYTE PTR [rbp+0x72]
   14000e2c4:	outs   dx,BYTE PTR ds:[rsi]
   14000e2c5:	cmp    dh,BYTE PTR [rbx+0x63]
   14000e2c8:	push   0x73616d65
   14000e2cd:	sub    eax,0x7263696d
   14000e2d2:	outs   dx,DWORD PTR ds:[rsi]
   14000e2d3:	jae    0x14000e344
   14000e2d5:	data16 je 0x14000e305
   14000e2d8:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e2db:	cmp    ah,BYTE PTR [rcx+0x73]
   14000e2de:	ins    DWORD PTR es:[rdi],dx
   14000e2df:	cs jbe 0x14000e315
   14000e2e2:	and    bh,BYTE PTR [rsi]
   14000e2e4:	or     eax,0x3c20200a
   14000e2e9:	jae    0x14000e350
   14000e2eb:	movsxd esi,DWORD PTR [rbp+0x72]
   14000e2ee:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000e2f6:	and    BYTE PTR [rax],ah
   14000e2f8:	and    BYTE PTR [rax],ah
   14000e2fa:	cmp    al,0x72
   14000e2fc:	gs jno 0x14000e374
   14000e2ff:	gs jae 0x14000e376
   14000e302:	gs fs push rax
   14000e305:	jb     0x14000e370
   14000e307:	jbe    0x14000e372
   14000e309:	ins    BYTE PTR es:[rdi],dx
   14000e30a:	gs addr32 gs jae 0x14000e34d
   14000e30f:	or     eax,0x2020200a
   14000e314:	and    BYTE PTR [rax],ah
   14000e316:	and    BYTE PTR [rax],ah
   14000e318:	and    BYTE PTR [rax],ah
   14000e31a:	and    BYTE PTR [rdx+rsi*2],bh
   14000e31d:	gs jno 0x14000e395
   14000e320:	gs jae 0x14000e397
   14000e323:	gs fs rex.RB js 0x14000e38d
   14000e328:	movsxd esi,DWORD PTR [rbp+0x74]
   14000e32b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000e332:	ins    BYTE PTR es:[rdi],dx
   14000e333:	or     eax,0x2020200a
   14000e338:	and    BYTE PTR [rax],ah
   14000e33a:	and    BYTE PTR [rax],ah
   14000e33c:	and    BYTE PTR [rax],ah
   14000e33e:	and    BYTE PTR [rax],ah
   14000e340:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000e344:	gs ins BYTE PTR es:[rdi],dx
   14000e346:	cmp    eax,0x71657222
   14000e34b:	jne    0x14000e3b6
   14000e34d:	jb     0x14000e3b4
   14000e34f:	rex.B
   14000e350:	fs ins DWORD PTR es:[rdi],dx
   14000e352:	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
   14000e359:	je     0x14000e3ca
   14000e35b:	jb     0x14000e37f
   14000e35d:	or     eax,0x2020200a
   14000e362:	and    BYTE PTR [rax],ah
   14000e364:	and    BYTE PTR [rax],ah
   14000e366:	and    BYTE PTR [rax],ah
   14000e368:	and    BYTE PTR [rdi],ch
   14000e36a:	ds or  eax,0x2020200a
   14000e370:	and    BYTE PTR [rax],ah
   14000e372:	and    BYTE PTR [rdi+rbp*1],bh
   14000e375:	jb     0x14000e3dc
   14000e377:	jno    0x14000e3ee
   14000e379:	gs jae 0x14000e3f0
   14000e37c:	gs fs push rax
   14000e37f:	jb     0x14000e3ea
   14000e381:	jbe    0x14000e3ec
   14000e383:	ins    BYTE PTR es:[rdi],dx
   14000e384:	gs addr32 gs jae 0x14000e3c7
   14000e389:	or     eax,0x3c20200a
   14000e38e:	(bad)  
   14000e38f:	jae    0x14000e3f6
   14000e391:	movsxd esi,DWORD PTR [rbp+0x72]
   14000e394:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x3c200a0d
   14000e39c:	(bad)  
   14000e39d:	je     0x14000e411
   14000e39f:	jne    0x14000e414
   14000e3a1:	je     0x14000e3ec
   14000e3a3:	outs   dx,BYTE PTR ds:[rsi]
   14000e3a4:	outs   dx,WORD PTR ds:[rsi]
   14000e3a6:	ds or  eax,0x613c200a
   14000e3ac:	jae    0x14000e41b
   14000e3ae:	jbe    0x14000e3e3
   14000e3b0:	cmp    ah,BYTE PTR [rcx+0x70]
   14000e3b3:	jo     0x14000e421
   14000e3b5:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000e3bc:	ds or  eax,0x2020200a
   14000e3c2:	and    BYTE PTR [rcx+riz*2],bh
   14000e3c5:	jae    0x14000e434
   14000e3c7:	jbe    0x14000e3fc
   14000e3c9:	cmp    dh,BYTE PTR [rdi+0x69]
   14000e3cc:	outs   dx,BYTE PTR ds:[rsi]
   14000e3cd:	outs   dx,DWORD PTR fs:[rsi]
   14000e3cf:	ja     0x14000e444
   14000e3d1:	push   rbx
   14000e3d2:	gs je  0x14000e449
   14000e3d5:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
   14000e3dc:	ins    BYTE PTR es:[rdi],dx
   14000e3dd:	outs   dx,BYTE PTR ds:[rsi]
   14000e3de:	jae    0x14000e41d
   14000e3e0:	and    ch,BYTE PTR [rax+0x74]
   14000e3e3:	je     0x14000e455
   14000e3e5:	cmp    ch,BYTE PTR [rdi]
   14000e3e7:	(bad)  
   14000e3e8:	jae    0x14000e44d
   14000e3ea:	push   0x73616d65
   14000e3ef:	cs ins DWORD PTR es:[rdi],dx
   14000e3f1:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14000e3f8:	je     0x14000e428
   14000e3fa:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e3fd:	(bad)  
   14000e3fe:	push   rbx
   14000e3ff:	rex.WRB
   14000e400:	rex.WB (bad) 
   14000e402:	xor    dh,BYTE PTR [rax]
   14000e404:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6a3b39
   14000e40a:	outs   dx,DWORD PTR fs:[rsi]
   14000e40c:	ja     0x14000e481
   14000e40e:	push   rbx
   14000e40f:	gs je  0x14000e486
   14000e412:	imul   ebp,DWORD PTR [rsi+0x67],0xd3e2273
   14000e419:	or     ah,BYTE PTR [rax]
   14000e41b:	and    BYTE PTR [rax],ah
   14000e41d:	and    BYTE PTR [rax],ah
   14000e41f:	and    BYTE PTR [rax],ah
   14000e421:	and    BYTE PTR [rsp+riz*2],bh
   14000e424:	jo     0x14000e48f
   14000e426:	rex.B ja 0x14000e48a
   14000e429:	jb     0x14000e490
   14000e42b:	ds je  0x14000e4a0
   14000e42e:	jne    0x14000e495
   14000e430:	cmp    al,0x2f
   14000e432:	fs jo  0x14000e49e
   14000e435:	rex.B ja 0x14000e499
   14000e438:	jb     0x14000e49f
   14000e43a:	ds or  eax,0x2020200a
   14000e440:	and    BYTE PTR [rax],ah
   14000e442:	and    BYTE PTR [rax],ah
   14000e444:	and    BYTE PTR [rcx+riz*2],bh
   14000e447:	jne    0x14000e4bd
   14000e449:	outs   dx,DWORD PTR ds:[rsi]
   14000e44a:	rex.RB ins BYTE PTR es:[rdi],dx
   14000e44c:	gs jbe 0x14000e4b0
   14000e44f:	je     0x14000e4b6
   14000e451:	ds je  0x14000e4c6
   14000e454:	jne    0x14000e4bb
   14000e456:	cmp    al,0x2f
   14000e458:	(bad)  
   14000e459:	jne    0x14000e4cf
   14000e45b:	outs   dx,DWORD PTR ds:[rsi]
   14000e45c:	rex.RB ins BYTE PTR es:[rdi],dx
   14000e45e:	gs jbe 0x14000e4c2
   14000e461:	je     0x14000e4c8
   14000e463:	ds or  eax,0x2020200a
   14000e469:	and    BYTE PTR [rdi+rbp*1],bh
   14000e46c:	(bad)  
   14000e46d:	jae    0x14000e4dc
   14000e46f:	jbe    0x14000e4a4
   14000e471:	cmp    dh,BYTE PTR [rdi+0x69]
   14000e474:	outs   dx,BYTE PTR ds:[rsi]
   14000e475:	outs   dx,DWORD PTR fs:[rsi]
   14000e477:	ja     0x14000e4ec
   14000e479:	push   rbx
   14000e47a:	gs je  0x14000e4f1
   14000e47d:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14000e484:	and    BYTE PTR [rdi+rbp*1],bh
   14000e487:	(bad)  
   14000e488:	jae    0x14000e4f7
   14000e48a:	jbe    0x14000e4bf
   14000e48c:	cmp    ah,BYTE PTR [rcx+0x70]
   14000e48f:	jo     0x14000e4fd
   14000e491:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000e498:	ds or  eax,0x612f3c0a
   14000e49e:	jae    0x14000e513
   14000e4a0:	gs ins DWORD PTR es:[rdi],dx
   14000e4a2:	(bad)  
   14000e4a3:	ins    BYTE PTR es:[rdi],dx
   14000e4a4:	jns    0x14000e4e4
   14000e4a6:	or     eax,0x3403980a
   14000e4ab:	add    BYTE PTR [rax],al
   14000e4ad:	add    BYTE PTR [rsi+0x0],dl
   14000e4b0:	push   rbx
   14000e4b1:	add    BYTE PTR [rdi+0x0],bl
   14000e4b4:	push   rsi
   14000e4b5:	add    BYTE PTR [rbp+0x0],al
   14000e4b8:	push   rdx
   14000e4b9:	add    BYTE PTR [rbx+0x0],dl
   14000e4bc:	rex.WB add BYTE PTR [r15+0x0],cl
   14000e4c0:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14000e4c4:	rex.WB add BYTE PTR [r14+0x0],cl
   14000e4c8:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14000e4cc:	add    BYTE PTR [rax],al
   14000e4ce:	add    BYTE PTR [rax],al
   14000e4d0:	mov    ebp,0xfeef04
   14000e4d5:	add    BYTE PTR [rcx],al
   14000e4d7:	add    BYTE PTR [rax],al
   14000e4d9:	add    BYTE PTR [rdx],cl
   14000e4db:	add    BYTE PTR [rax],al
   14000e4dd:	add    BYTE PTR [rax],bpl
   14000e4e0:	add    BYTE PTR [rax],al
   14000e4e2:	or     al,BYTE PTR [rax]
   14000e4e4:	add    BYTE PTR [rax+0x0],al
   14000e4e7:	sub    BYTE PTR [rdi],bh
   14000e4e9:	add    BYTE PTR [rax],al
   14000e4eb:	add    BYTE PTR [rax],al
   14000e4ed:	add    BYTE PTR [rax],al
   14000e4ef:	add    BYTE PTR [rax+rax*1],al
   14000e4f2:	add    al,0x0
   14000e4f4:	add    DWORD PTR [rax],eax
	...
   14000e502:	add    BYTE PTR [rax],al
   14000e504:	test   BYTE PTR [rdx],0x0
   14000e507:	add    BYTE PTR [rcx],al
   14000e509:	add    BYTE PTR [rbx+0x0],dl
   14000e50c:	je     0x14000e50e
   14000e50e:	jb     0x14000e510
   14000e510:	imul   eax,DWORD PTR [rax],0x67006e
   14000e516:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000e51a:	ins    BYTE PTR es:[rdi],dx
   14000e51b:	add    BYTE PTR [rbp+0x0],ah
   14000e51e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000e522:	data16 add BYTE PTR [rdi+0x0],ch
   14000e526:	add    BYTE PTR [rax],al
   14000e528:	rol    BYTE PTR [rdx],cl
   14000e52a:	add    BYTE PTR [rax],al
   14000e52c:	add    DWORD PTR [rax],eax
   14000e52e:	xor    BYTE PTR [rax],al
   14000e530:	xor    al,0x0
   14000e532:	xor    BYTE PTR [rax],al
   14000e534:	cmp    DWORD PTR [rax],eax
   14000e536:	xor    BYTE PTR [rax],al
   14000e538:	xor    al,0x0
   14000e53a:	rex.X add BYTE PTR [rax],sil
   14000e53d:	add    BYTE PTR [rax],al
   14000e53f:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000e543:	add    BYTE PTR [rcx],al
   14000e545:	add    BYTE PTR [rbx+0x0],al
   14000e548:	outs   dx,DWORD PTR ds:[rsi]
   14000e549:	add    BYTE PTR [rbp+0x0],ch
   14000e54c:	jo     0x14000e54e
   14000e54e:	(bad)  
   14000e54f:	add    BYTE PTR [rsi+0x0],ch
   14000e552:	jns    0x14000e554
   14000e554:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000e558:	ins    DWORD PTR es:[rdi],dx
   14000e559:	add    BYTE PTR [rbp+0x0],ah
   14000e55c:	add    BYTE PTR [rax],al
   14000e55e:	add    BYTE PTR [rax],al
   14000e560:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000e564:	movsxd eax,DWORD PTR [rax]
   14000e566:	jb     0x14000e568
   14000e568:	outs   dx,DWORD PTR ds:[rsi]
   14000e569:	add    BYTE PTR [rbx+0x0],dh
   14000e56c:	outs   dx,DWORD PTR ds:[rsi]
   14000e56d:	add    BYTE PTR [rsi+0x0],ah
   14000e570:	je     0x14000e572
   14000e572:	and    BYTE PTR [rax],al
   14000e574:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e578:	jb     0x14000e57a
   14000e57a:	jo     0x14000e57c
   14000e57c:	outs   dx,DWORD PTR ds:[rsi]
   14000e57d:	add    BYTE PTR [rdx+0x0],dh
   14000e580:	(bad)  
   14000e581:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e585:	add    BYTE PTR [rdi+0x0],ch
   14000e588:	outs   dx,BYTE PTR ds:[rsi]
   14000e589:	add    BYTE PTR [rax],al
   14000e58b:	add    BYTE PTR [rax+rax*1+0x1a],bl
   14000e58f:	add    BYTE PTR [rcx],al
   14000e591:	add    BYTE PTR [rsi+0x0],al
   14000e594:	imul   eax,DWORD PTR [rax],0x65006c
   14000e59a:	add    BYTE PTR [rbp+0x0],r12b
   14000e59e:	jae    0x14000e5a0
   14000e5a0:	movsxd eax,DWORD PTR [rax]
   14000e5a2:	jb     0x14000e5a4
   14000e5a4:	imul   eax,DWORD PTR [rax],0x740070
   14000e5aa:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e5b0:	add    BYTE PTR [rax],al
   14000e5b2:	add    BYTE PTR [rax],al
   14000e5b4:	rex.RX add BYTE PTR [rbp+0x0],r12b
   14000e5b8:	(bad)  
   14000e5b9:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000e5bd:	add    BYTE PTR [rdx+0x0],dh
   14000e5c0:	add    BYTE PTR gs:[rbx+0x0],dh
   14000e5c4:	and    BYTE PTR [rax],al
   14000e5c6:	rex.WRXB add BYTE PTR [r14+0x0],r13b
   14000e5ca:	and    BYTE PTR [rax],al
   14000e5cc:	add    BYTE PTR [rbp+0x0],r12b
   14000e5d0:	ins    DWORD PTR es:[rdi],dx
   14000e5d1:	add    BYTE PTR [rcx+0x0],ah
   14000e5d4:	outs   dx,BYTE PTR ds:[rsi]
   14000e5d5:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000e5d9:	add    BYTE PTR [rax+0x0],cl
   14000e5dc:	add    BYTE PTR gs:[rax+rax*1+0x70],ch
   14000e5e1:	add    BYTE PTR [rbp+0x0],ah
   14000e5e4:	jb     0x14000e5e6
   14000e5e6:	add    BYTE PTR [rax],al
   14000e5e8:	data16 add BYTE PTR [rbx],ah
   14000e5eb:	add    BYTE PTR [rcx],al
   14000e5ed:	add    BYTE PTR [rsi+0x0],al
   14000e5f0:	imul   eax,DWORD PTR [rax],0x65006c
   14000e5f6:	push   rsi
   14000e5f7:	add    BYTE PTR [rbp+0x0],ah
   14000e5fa:	jb     0x14000e5fc
   14000e5fc:	jae    0x14000e5fe
   14000e5fe:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e604:	add    BYTE PTR [rax],al
   14000e606:	add    BYTE PTR [rax],al
   14000e608:	xor    DWORD PTR [rax],eax
   14000e60a:	xor    BYTE PTR [rax],al
   14000e60c:	add    BYTE PTR cs:[rax],dh
   14000e60f:	add    BYTE PTR [rsi],ch
   14000e611:	add    BYTE PTR [rcx],dh
   14000e613:	add    BYTE PTR [rax],dh
   14000e615:	add    BYTE PTR [rdx],dh
   14000e617:	add    BYTE PTR [rax+rax*1],dh
   14000e61a:	xor    BYTE PTR [rax],al
   14000e61c:	add    BYTE PTR cs:[rcx],dh
   14000e61f:	add    BYTE PTR [rsi],dh
   14000e621:	add    BYTE PTR [rbx],dh
   14000e623:	add    BYTE PTR [rax],bh
   14000e625:	add    BYTE PTR [rax+rax*1],dh
   14000e628:	and    BYTE PTR [rax],al
   14000e62a:	sub    BYTE PTR [rax],al
   14000e62c:	je     0x14000e62e
   14000e62e:	push   0x2e003100
   14000e633:	add    BYTE PTR [rcx],dh
   14000e635:	add    BYTE PTR [rip+0x37003000],dh        # 0x17701163b
   14000e63b:	add    BYTE PTR [rax],dh
   14000e63d:	add    BYTE PTR [rcx],bh
   14000e63f:	add    BYTE PTR [rip+0x37003100],ch        # 0x177011745
   14000e645:	add    BYTE PTR [rax],dh
   14000e647:	add    BYTE PTR [rax],dh
   14000e649:	add    BYTE PTR [rcx],ch
   14000e64b:	add    BYTE PTR [rax],al
   14000e64d:	add    BYTE PTR [rax],al
   14000e64f:	add    BYTE PTR [rax+rax*1],dh
   14000e652:	or     al,BYTE PTR [rax]
   14000e654:	add    DWORD PTR [rax],eax
   14000e656:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000e65a:	je     0x14000e65c
   14000e65c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e660:	outs   dx,BYTE PTR ds:[rsi]
   14000e661:	add    BYTE PTR [rcx+0x0],ah
   14000e664:	ins    BYTE PTR es:[rdi],dx
   14000e665:	add    BYTE PTR [rsi+0x0],cl
   14000e668:	(bad)  
   14000e669:	add    BYTE PTR [rbp+0x0],ch
   14000e66c:	add    BYTE PTR gs:[rax],al
   14000e66f:	add    BYTE PTR [rsi+0x0],al
   14000e672:	outs   dx,DWORD PTR ds:[rsi]
   14000e673:	add    BYTE PTR [rax+rax*1+0x48],ah
   14000e677:	add    BYTE PTR [rbp+0x0],ah
   14000e67a:	ins    BYTE PTR es:[rdi],dx
   14000e67b:	add    BYTE PTR [rax+0x0],dh
   14000e67e:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e682:	add    BYTE PTR [rax],al
   14000e684:	add    BYTE PTR [rax],0x2e
   14000e687:	add    BYTE PTR [rcx],al
   14000e689:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000e68d:	add    BYTE PTR [rdi+0x0],ah
   14000e690:	(bad)  
   14000e691:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000e695:	add    BYTE PTR [rdi+0x0],ch
   14000e698:	jo     0x14000e69a
   14000e69a:	jns    0x14000e69c
   14000e69c:	jb     0x14000e69e
   14000e69e:	imul   eax,DWORD PTR [rax],0x680067
   14000e6a4:	je     0x14000e6a6
   14000e6a6:	add    BYTE PTR [rax],al
   14000e6a8:	test   eax,0x4d002000
   14000e6ad:	add    BYTE PTR [rcx+0x0],ch
   14000e6b0:	movsxd eax,DWORD PTR [rax]
   14000e6b2:	jb     0x14000e6b4
   14000e6b4:	outs   dx,DWORD PTR ds:[rsi]
   14000e6b5:	add    BYTE PTR [rbx+0x0],dh
   14000e6b8:	outs   dx,DWORD PTR ds:[rsi]
   14000e6b9:	add    BYTE PTR [rsi+0x0],ah
   14000e6bc:	je     0x14000e6be
   14000e6be:	and    BYTE PTR [rax],al
   14000e6c0:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000e6c4:	jb     0x14000e6c6
   14000e6c6:	jo     0x14000e6c8
   14000e6c8:	outs   dx,DWORD PTR ds:[rsi]
   14000e6c9:	add    BYTE PTR [rdx+0x0],dh
   14000e6cc:	(bad)  
   14000e6cd:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e6d1:	add    BYTE PTR [rdi+0x0],ch
   14000e6d4:	outs   dx,BYTE PTR ds:[rsi]
   14000e6d5:	add    BYTE PTR [rsi],ch
   14000e6d7:	add    BYTE PTR [rax],ah
   14000e6d9:	add    BYTE PTR [rcx+0x0],al
   14000e6dc:	ins    BYTE PTR es:[rdi],dx
   14000e6dd:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000e6e1:	add    BYTE PTR [rdx+0x0],dh
   14000e6e4:	imul   eax,DWORD PTR [rax],0x680067
   14000e6ea:	je     0x14000e6ec
   14000e6ec:	jae    0x14000e6ee
   14000e6ee:	and    BYTE PTR [rax],al
   14000e6f0:	jb     0x14000e6f2
   14000e6f2:	add    BYTE PTR gs:[rbx+0x0],dh
   14000e6f6:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e6fa:	jbe    0x14000e6fc
   14000e6fc:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000e701:	add    BYTE PTR [rax],al
   14000e703:	add    BYTE PTR [rax+rax*1+0xe],al
   14000e707:	add    BYTE PTR [rcx],al
   14000e709:	add    BYTE PTR [rdi+0x0],cl
   14000e70c:	jb     0x14000e70e
   14000e70e:	imul   eax,DWORD PTR [rax],0x690067
   14000e714:	outs   dx,BYTE PTR ds:[rsi]
   14000e715:	add    BYTE PTR [rcx+0x0],ah
   14000e718:	ins    BYTE PTR es:[rdi],dx
   14000e719:	add    BYTE PTR [rsi+0x0],al
   14000e71c:	imul   eax,DWORD PTR [rax],0x65006c
   14000e722:	outs   dx,BYTE PTR ds:[rsi]
   14000e723:	add    BYTE PTR [rcx+0x0],ah
   14000e726:	ins    DWORD PTR es:[rdi],dx
   14000e727:	add    BYTE PTR [rbp+0x0],ah
   14000e72a:	add    BYTE PTR [rax],al
   14000e72c:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14000e730:	add    BYTE PTR fs:[rax+0x0],cl
   14000e734:	add    BYTE PTR gs:[rax+rax*1+0x70],ch
   14000e739:	add    BYTE PTR [rbp+0x0],ah
   14000e73c:	jb     0x14000e73e
   14000e73e:	add    BYTE PTR cs:[rbp+0x0],al
   14000e742:	pop    rax
   14000e743:	add    BYTE PTR [rbp+0x0],al
   14000e746:	add    BYTE PTR [rax],al
   14000e748:	push   0x0
   14000e74a:	and    eax,0x50000100
   14000e74f:	add    BYTE PTR [rdx+0x0],dh
   14000e752:	outs   dx,DWORD PTR ds:[rsi]
   14000e753:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000e757:	add    BYTE PTR [rbx+0x0],ah
   14000e75a:	je     0x14000e75c
   14000e75c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000e760:	ins    DWORD PTR es:[rdi],dx
   14000e761:	add    BYTE PTR [rbp+0x0],ah
   14000e764:	add    BYTE PTR [rax],al
   14000e766:	add    BYTE PTR [rax],al
   14000e768:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000e76c:	movsxd eax,DWORD PTR [rax]
   14000e76e:	jb     0x14000e770
   14000e770:	outs   dx,DWORD PTR ds:[rsi]
   14000e771:	add    BYTE PTR [rbx+0x0],dh
   14000e774:	outs   dx,DWORD PTR ds:[rsi]
   14000e775:	add    BYTE PTR [rsi+0x0],ah
   14000e778:	je     0x14000e77a
   14000e77a:	scas   al,BYTE PTR es:[rdi]
   14000e77b:	add    BYTE PTR [rax],ah
   14000e77d:	add    BYTE PTR [rdi+0x0],dl
   14000e780:	imul   eax,DWORD PTR [rax],0x64006e
   14000e786:	outs   dx,DWORD PTR ds:[rsi]
   14000e787:	add    BYTE PTR [rdi+0x0],dh
   14000e78a:	jae    0x14000e78c
   14000e78c:	scas   al,BYTE PTR es:[rdi]
   14000e78d:	add    BYTE PTR [rax],ah
   14000e78f:	add    BYTE PTR [rdi+0x0],cl
   14000e792:	jo     0x14000e794
   14000e794:	add    BYTE PTR gs:[rdx+0x0],dh
   14000e798:	(bad)  
   14000e799:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000e79d:	add    BYTE PTR [rsi+0x0],ch
   14000e7a0:	add    BYTE PTR [eax],ah
   14000e7a3:	add    BYTE PTR [rbx+0x0],dl
   14000e7a6:	jns    0x14000e7a8
   14000e7a8:	jae    0x14000e7aa
   14000e7aa:	je     0x14000e7ac
   14000e7ac:	add    BYTE PTR gs:[rbp+0x0],ch
   14000e7b0:	add    BYTE PTR [rax],al
   14000e7b2:	add    BYTE PTR [rax],al
   14000e7b4:	rex.RX add BYTE PTR [rcx],r10b
   14000e7b7:	add    BYTE PTR [rcx],al
   14000e7b9:	add    BYTE PTR [rax+0x0],dl
   14000e7bc:	jb     0x14000e7be
   14000e7be:	outs   dx,DWORD PTR ds:[rsi]
   14000e7bf:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000e7c3:	add    BYTE PTR [rbx+0x0],ah
   14000e7c6:	je     0x14000e7c8
   14000e7c8:	push   rsi
   14000e7c9:	add    BYTE PTR [rbp+0x0],ah
   14000e7cc:	jb     0x14000e7ce
   14000e7ce:	jae    0x14000e7d0
   14000e7d0:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e7d6:	add    BYTE PTR [rax],al
   14000e7d8:	xor    DWORD PTR [rax],eax
   14000e7da:	xor    BYTE PTR [rax],al
   14000e7dc:	add    BYTE PTR cs:[rax],dh
   14000e7df:	add    BYTE PTR [rsi],ch
   14000e7e1:	add    BYTE PTR [rcx],dh
   14000e7e3:	add    BYTE PTR [rax],dh
   14000e7e5:	add    BYTE PTR [rdx],dh
   14000e7e7:	add    BYTE PTR [rax+rax*1],dh
   14000e7ea:	xor    BYTE PTR [rax],al
   14000e7ec:	add    BYTE PTR cs:[rcx],dh
   14000e7ef:	add    BYTE PTR [rsi],dh
   14000e7f1:	add    BYTE PTR [rbx],dh
   14000e7f3:	add    BYTE PTR [rax],bh
   14000e7f5:	add    BYTE PTR [rax+rax*1],dh
   14000e7f8:	add    BYTE PTR [rax],al
   14000e7fa:	add    BYTE PTR [rax],al
   14000e7fc:	add    BYTE PTR [rax],r8b
   14000e7ff:	add    BYTE PTR [rcx],al
   14000e801:	add    BYTE PTR [rsi+0x0],dl
   14000e804:	(bad)  
   14000e805:	add    BYTE PTR [rdx+0x0],dh
   14000e808:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000e80c:	ins    BYTE PTR es:[rdi],dx
   14000e80d:	add    BYTE PTR [rbp+0x0],ah
   14000e810:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000e814:	data16 add BYTE PTR [rdi+0x0],ch
   14000e818:	add    BYTE PTR [rax],al
   14000e81a:	add    BYTE PTR [rax],al
   14000e81c:	and    al,0x0
   14000e81e:	add    al,0x0
   14000e820:	add    BYTE PTR [rax],al
   14000e822:	push   rsp
   14000e823:	add    BYTE PTR [rdx+0x0],dh
   14000e826:	(bad)  
   14000e827:	add    BYTE PTR [rsi+0x0],ch
   14000e82a:	jae    0x14000e82c
   14000e82c:	ins    BYTE PTR es:[rdi],dx
   14000e82d:	add    BYTE PTR [rcx+0x0],ah
   14000e830:	je     0x14000e832
   14000e832:	imul   eax,DWORD PTR [rax],0x6e006f
   14000e838:	add    BYTE PTR [rax],al
   14000e83a:	add    BYTE PTR [rax],al
   14000e83c:	or     DWORD PTR [rax+rsi*4],eax
   14000e83f:	add    al,0xcd
   14000e841:	dec    ch
   14000e843:	dec    al
   14000e845:	add    BYTE PTR [rax],al
   14000e847:	add    BYTE PTR [rax],al
   14000e849:	add    BYTE PTR [rcx],al
   14000e84b:	add    BYTE PTR [rax],al
   14000e84d:	add    BYTE PTR [rax],al
   14000e84f:	add    BYTE PTR [rcx],dl
   14000e851:	add    BYTE PTR [rax],al
   14000e853:	add    BYTE PTR [rax],al
   14000e855:	add    BYTE PTR [rax],al
   14000e857:	add    BYTE PTR [rdx],al
   14000e859:	add    BYTE PTR [rax],al
   14000e85b:	add    cl,ch
   14000e85d:	and    DWORD PTR [rdi+rdi*2],ebx
   14000e860:	pushf  
   14000e861:	out    0x3e,eax
   14000e863:	or     eax,0x8655fd01
   14000e868:	int3   
   14000e869:	movabs al,ds:0x990c87a36303c5e6
   14000e872:	xor    edi,DWORD PTR [rdi]
   14000e874:	add    dh,BYTE PTR [rcx-0x47]
   14000e877:	adc    ah,BYTE PTR [rdi+0xb9db0b]
	...
   14000e891:	add    BYTE PTR [rax],al
   14000e893:	add    BYTE PTR [rax+0xe000000],cl
   14000e899:	add    BYTE PTR [rax],al
   14000e89b:	add    BYTE PTR [rax+0x8000000],bl
   14000e8a1:	add    BYTE PTR [rax],al
   14000e8a3:	add    BYTE PTR [rax+0xe000000],ah
   14000e8a9:	add    BYTE PTR [rax],al
   14000e8ab:	add    BYTE PTR [rax+0x8000000],dh
	...
   14000e8b9:	add    BYTE PTR [rax],al
   14000e8bb:	add    BYTE PTR [rax+0xc000000],bh
   14000e8c1:	add    BYTE PTR [rax],al
   14000e8c3:	add    BYTE PTR [rax],al
   14000e8c5:	add    BYTE PTR [rax],al
   14000e8c7:	add    BYTE PTR [rbp+0x0],cl
   14000e8ca:	push   rbp
   14000e8cb:	add    BYTE PTR [rcx+0x0],cl
	...
   14000e8d6:	add    BYTE PTR [rax],al
   14000e8d8:	adc    BYTE PTR [rax],al
   14000e8da:	add    BYTE PTR [rax],al
   14000e8dc:	sbb    BYTE PTR [rax],al
   14000e8de:	add    BYTE PTR [rax],al
   14000e8e0:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000e8e4:	rex.WB add BYTE PTR [r8],al
	...
   14000e8ef:	add    BYTE PTR [rsi],al
   14000e8f1:	add    BYTE PTR [rax],al
   14000e8f3:	add    BYTE PTR [rax],dl
   14000e8f5:	add    BYTE PTR [rax],al
   14000e8f7:	add    BYTE PTR [rbp+0x0],ah
   14000e8fa:	outs   dx,BYTE PTR ds:[rsi]
   14000e8fb:	add    BYTE PTR [rip+0x53005500],ch        # 0x193013e01
   14000e901:	add    BYTE PTR [rax],al
   14000e903:	add    BYTE PTR [rax],al
   14000e905:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000f000 <.reloc>:
   14000f000:	add    BYTE PTR [rax+0x840000],dl
   14000f006:	add    BYTE PTR [rax],al
   14000f008:	clc    
   14000f009:	movabs ds:0xa420a418a410a400,eax
   14000f012:	sub    BYTE PTR [rax+rsi*1+0x40a438a4],ah
   14000f019:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f01a:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f01c:	push   rax
   14000f01d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f01e:	push   0xffffffff80a470a4
   14000f023:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f024:	mov    BYTE PTR [rbp-0x58e758f0],ah
   14000f02a:	and    BYTE PTR [rdi-0x58cf58d8],ah
   14000f030:	cmp    BYTE PTR [rdi-0x58b758c0],ah
   14000f036:	push   rax
   14000f037:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f038:	pop    rax
   14000f039:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f03a:	(bad)  
   14000f03b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f03c:	push   0x78a770a7
   14000f041:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f042:	and    BYTE PTR [rdi-0x586f5878],0x98
   14000f049:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f04a:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   14000f053:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f054:	enter  0xd0a7,0xa7
   14000f058:	fsub   DWORD PTR [rdi-0x58175820]
   14000f05e:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f060:	clc    
   14000f061:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f062:	add    BYTE PTR [rax-0x57ef57f8],ch
   14000f068:	sbb    BYTE PTR [rax-0x57d757e0],ch
   14000f06e:	xor    BYTE PTR [rax-0x57bf57c8],ch
   14000f074:	rex.W test al,0x50
   14000f077:	test   al,0x58
   14000f079:	test   al,0x38
   14000f07b:	scas   eax,DWORD PTR es:[rdi]
   14000f07c:	push   rax
   14000f07d:	scas   eax,DWORD PTR es:[rdi]
   14000f07e:	pop    rax
   14000f07f:	scas   eax,DWORD PTR es:[rdi]
   14000f080:	(bad)  
   14000f081:	scas   eax,DWORD PTR es:[rdi]
   14000f082:	add    BYTE PTR [rax],al
   14000f084:	add    al,al
   14000f086:	add    BYTE PTR [rax],al
   14000f088:	sbb    al,0x0
   14000f08a:	add    BYTE PTR [rax],al
   14000f08c:	and    BYTE PTR [rax-0x5fcf5fd8],ah
   14000f092:	rex.W movabs al,ds:0xa090a088a080a078
   14000f09c:	mov    al,0xa0
   14000f09e:	.byte 0xe8
   14000f09f:	.byte 0xa0
